set testdir [file dirname $argv0]
source $testdir/tester.tcl

# kill mutants ['4224', '4229', '4232', '4243', '4244', '4245', '4246', '4247', '4248', '4249', '4250', '4251', '4252', '4253', '4256']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-1.1 {
  PRAGMA temp.mmap_size;
} {}

# kill mutants ['4099', '4100', '4103', '4105', '4118', '4121', '4122', '4125', '4131', '4132', '4135', '4137', '4150', '4153', '4154', '4157']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-2.1 {
  PRAGMA temp.mmap_size = 3;
  PRAGMA mmap_size;
} {0 }

# kill mutants ['3989', '3992']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-3.1 {
  PRAGMA mmap_size = -8072280758490843421;
} {0 }

# kill mutants ['13009', '13012', '13015', '13041', '13044', '13047']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-4.1 {
  CREATE VIEW a AS SELECT 5;
  PRAGMA optimize;
} {}

# kill mutants ['3969', '3970', '3971', '3976', '3980', '3982', '3987', '3991', '3993', '3994', '3995', '3996', '4001', '4002', '4003', '4008', '4012', '4014', '4019', '4023', '4025', '4026', '4028']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-5.1 {
  PRAGMA mmap_size = 1;
} {1 }
do_execsql_test pragma-dredd-5.2 {
  PRAGMA mmap_size = -8560260514224173509;
} {0 }

# kill mutants ['12917']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-6.1 {
   PRAGMA temp.optimize;
} {}

# kill mutants ['3986', '4000']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-7.1 {
  PRAGMA mmap_size = 1;
} {1 }

# kill mutants ['4098', '4119', '4130', '4148', '4151']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-8.1 {
  PRAGMA main.mmap_size = 8;
} {8 }

# kill mutants ['4254', '4255', '4257', '4258', '4259', '4260']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-9.1 {
  PRAGMA mmap_size;
} {0 }

# kill mutants ['3912', '3914', '3915', '3944', '3946', '3947']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_catchsql_test pragma-dredd-10.1 {
  PRAGMA cache_spill = 7080762562;
  SELECT load_extension('');
} {1 {unable to open shared library []}}

# kill mutants ['12888', '12892', '12920', '12924']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_catchsql_test pragma-dredd-11.1 {
  BEGIN;
  CREATE VIRTUAL TABLE a USING b;
} {1 {no such module: b}}
do_catchsql_test pragma-dredd-11.2 {
  PRAGMA main.optimize;
  INSERT INTO a VALUES('263b');
} {1 {no such table: a}}

# kill mutants ['13020', '13021', '13052', '13053']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-12.1 {
  CREATE VIEW a AS SELECT b;
  PRAGMA optimize;
} {}

# kill mutants ['3979', '3981', '3985', '3998', '4011', '4021', '4024']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-13.1 {
  PRAGMA mmap_size = -325572059141867052;
} {0 }

# kill mutants ['10640', '10641', '10672', '10673']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-14.1 {
  CREATE TABLE a(b);
  INSERT INTO a VALUES(NULL);
  ALTER TABLE a ADD c CHECK(0 BETWEEN(b) AND 0);
} {}

# kill mutants ['2308']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-15.1 {
  PRAGMA busy_timeout = 10000;
} {10000 }
do_execsql_test pragma-dredd-15.2 {
  PRAGMA secure_delete = a;
} {0 }

# kill mutants ['12839']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-16.1 {
  PRAGMA wal_checkpoint;
} {0 -1 -1 }

# kill mutants ['12885']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-17.1 {
  PRAGMA temp.optimize;
} {}

# kill mutants ['13345']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-18.1 {
  PRAGMA busy_timeout = 10000;
} {10000 }

# kill mutants ['3931']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_catchsql_test pragma-dredd-19.1 {
  PRAGMA cache_spill = -2851909032242852183;
  SELECT load_extension('');
} {1 {unable to open shared library []}}

# kill mutants ['4875', '4878']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-20.1 {
  PRAGMA defer_foreign_keys = a;
} {}

# kill mutants ['2340']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-21.1 {
  PRAGMA integrity_check;
} {ok }
do_execsql_test pragma-dredd-21.2 {
  PRAGMA secure_delete = true;
} {1 }
do_execsql_test pragma-dredd-21.3 {
  PRAGMA temp.secure_delete;
} {1 }

# kill mutants ['12952', '12984']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_catchsql_test pragma-dredd-22.1 {
  BEGIN;
  CREATE VIRTUAL TABLE a USING fts4;
} {1 {no such module: fts4}}
do_catchsql_test pragma-dredd-22.2 {
  PRAGMA optimize;
  UPDATE a SET(b) = 0;
} {1 {no such table: a}}

# kill mutants ['12886', '12918']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-23.1 {
  PRAGMA main.optimize;
} {}

# kill mutants ['2117']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_execsql_test pragma-dredd-24.1 {
  PRAGMA default_cache_size = 8;
  PRAGMA cache_spill;
} {8 }

# kill mutants ['4871']
reset_db
sqlite3_db_config db DEFENSIVE 1
do_catchsql_test pragma-dredd-25.1 {
  PRAGMA defer_foreign_keys = a;
  INSERT INTO b VALUES('merge=21188628858');
} {1 {no such table: b}}

finish_test
