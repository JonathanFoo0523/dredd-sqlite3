CREATE TABLE t0(c0);
ALTER TABLE t0 RENAME c0 TO c89;
INSERT INTO t0 VALUES(''), (NULL);
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4);
CREATE TABLE IF NOT EXISTS t1(c0 INTEGER);
INSERT OR IGNORE INTO t1 VALUES('');
CREATE INDEX IF NOT EXISTS i35 ON t0(0) WHERE 0;
INSERT OR IGNORE INTO rt0(c1, c4, c0, c2) VALUES(NULL, 1, x'', NULL);
BEGIN DEFERRED TRANSACTION;
UPDATE OR IGNORE t0 SET(c89, c89, c89) = ('', 0.5891034612782736, NULL);
ROLLBACK TRANSACTION;
ALTER TABLE t0 RENAME COLUMN c89 TO c81;
CREATE UNIQUE INDEX IF NOT EXISTS i75 ON t0(TRIM(1) COLLATE RTRIM) WHERE 0;
SELECT DISTINCT 0 COLLATE BINARY FROM t1,
    t0 rt0 WHERE 0 ORDER BY(0 NOT BETWEEN 0 AND 0) DESC NULLS FIRST;
SELECT ALL 0 FROM rt0,
    t0 t1 WHERE(CASE WHEN STRFTIME() THEN 0 ELSE(0 NOT BETWEEN 0 AND'')
                    END) ORDER BY(0 NOT BETWEEN 0 AND 0) NULLS FIRST,
    (rt0.c4)OR(0) AND DESC;
SELECT ALL CAST(rt0.c0 AS BLOB), 0, NULL FROM t0, rt0 WHERE 0;
SELECT 0 FROM rt0, t0 t1 WHERE 0;
SELECT DISTINCT rt0.c0, CAST(0 AS TEXT), TRIM(0) FROM rt0, t1, t0 WHERE 0;
SELECT DISTINCT 0, 0, 0, 0,
    NTH_VALUE(CASE WHEN 0 THEN CASE NULL WHEN rt0.c1 THEN rt0.c2 WHEN
                  rt0.c4 THEN rt0.c0 WHEN t1.c0 THEN 3 END END,
              LOWER(DISTINCT 0)) OVER() FROM t0,
    rt0, t1 LIMIT 5 OFFSET 0;
SELECT ALL 0 FROM rt0, t0 WHERE 0;
SELECT DISTINCT 0 FROM t0 WHERE 0;
SELECT ALL TRIM(highlight(), 0) FROM t0 t1, rt0;
SELECT DISTINCT AVG(CASE WHEN t1.c0 THEN t0.c81 ELSE 1.419624276E9 END) FROM t0,
    t1 ORDER BY(0 IS FALSE);
SELECT DISTINCT CASE WHEN 0 THEN CASE WHEN rt0.c4 THEN t0.c81 END
    WHEN 1.44916424E9 THEN 0 WHEN 0 THEN 0 END FROM t0,
    rt0, t1;
SELECT HEX(DISTINCT NULL) FROM t0 rt0 WHERE 0 GROUP BY
    SQLITE_COMPILEOPTION_GET(0);
SELECT ALL CASE COUNT() WHEN CAST(rt0.c1 AS TEXT) THEN TRIM(t1.c0) ELSE 0 END,
    UPPER(DISTINCT load_extension(t1.c0, x'')), 0 FROM rt0, t1, t0 WHERE 0;
SELECT DISTINCT '' FROM t0 t1, rt0;
SELECT RANK() OVER(), TOTAL(0), 0 COLLATE NOCASE FROM t1, t0 rt0 WHERE 0;
SELECT DISTINCT 0, UPPER(DISTINCT CASE WHEN rt0.c4 THEN rt0.c1 ELSE t0.c81 END),
    0 FROM rt0, t1, t0 WHERE 0;
SELECT AVG(1.424118986E9) OVER FROM t0 rt0;
SELECT DISTINCT 0 FROM t0 t1, rt0 GROUP BY LIKELY(rt0.c3) LIMIT 0 OFFSET 1;
SELECT DISTINCT 0 FROM rt0, t0 WHERE 0;
SELECT DISTINCT 0 FROM rt0, t0 WHERE 0;
SELECT DISTINCT CAST(0 AS BLOB) FROM t1 rt0, t0 WHERE 0;
SELECT ALL 0 FROM t1, t0 WHERE 0;
SELECT DISTINCT 0 FROM t1, t0 rt0 WHERE 0 ORDER BY(0 BETWEEN 0 AND 0),
    0 | 0 NULLS FIRST;
SELECT ALL 0 FROM t0 rt0;
SELECT DISTINCT 0 FROM t0 t1, rt0;
SELECT DISTINCT t0.c81 COLLATE BINARY FROM t0, rt0 WHERE 0;
SELECT ALL 0 FROM t0 t1, rt0;
SELECT DISTINCT 0, 0, CAST(0 AS TEXT) FROM rt0 t1, t0 WHERE 0;
SELECT DISTINCT 0 FROM rt0 t1, t0;
SELECT DISTINCT '' COLLATE NOCASE,
    SUM(CASE rt0.c3 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c4 END) OVER, 0, 0,
    GROUP_CONCAT(0) FROM t0, t1, rt0 WHERE 0;
SELECT ALL 0 FROM t0 t1, rt0 WHERE 0 LIMIT 4 OFFSET 1;
SELECT 0,
    CASE 0 WHEN 0 THEN 0 WHEN 0 THEN 0 WHEN CASE WHEN t1.c0 THEN rt0.c2
        WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 END THEN
        COUNT() ELSE LENGTH(rt0.c3) END,
    0 FROM rt0, t0, t1 WHERE 0;
SELECT rt0.c4, 0,
    CASE rt0.c2 WHEN t0.c81 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM FROM t0,
    t1, rt0 WHERE 0 GROUP BY(0 NOT NULL);
SELECT 0 FROM t0 rt0;
SELECT DISTINCT PERCENT_RANK() OVER() FROM t1, t0 rt0 WHERE 0;
SELECT DISTINCT COALESCE(0, 0) FROM t0 rt0, t1 GROUP BY(0 == 0);
SELECT DISTINCT 0 FROM t1, t0 rt0 WHERE 0;
SELECT DISTINCT RANK() OVER() FROM t0 t1, rt0 WHERE 0;
SELECT DISTINCT t1.c0 COLLATE BINARY COLLATE BINARY, CAST(0 AS TEXT),
    CAST(0 AS REAL) FROM t0 rt0, t1;
SELECT DISTINCT CAST(INSTR('', rt0.c4) AS BLOB) '', 0,
    0, rt0.c1 FROM rt0, t0 t1 WHERE 0;
SELECT DISTINCT 0 FROM t1 rt0, t0 ORDER BY(0) OR(0) AND(t1.c0);
SELECT DISTINCT PRINTF() FROM t1 LEFT OUTER JOIN rt0 ON x'' CROSS JOIN t0 ON
    CAST(0 AS REAL);
SELECT ALL CASE WHEN 0 THEN 0 END, CAST(rt0.c0 AS INTEGER),
    0 FROM t0 t1, rt0 WHERE 0 ORDER BY ~0, 0 BETWEEN 0 AND 0;
SELECT CAST(NULL AS NUMERIC) FROM rt0, t0 WHERE 0 ORDER
    BY(0 NOT BETWEEN 0 AND 0);
SELECT DISTINCT COUNT(), 0,
    SUM(0) OVER FROM t1, t0 rt0 WHERE 0 ORDER BY(0 IS TRUE);
SELECT LAG(0, 0, 0) OVER(), rt0.c1, t1.c0 FROM t1, rt0,
    t0 WHERE 0 ORDER BY(0 = 0) DESC;
SELECT CASE 0 WHEN 0 THEN 0 ELSE 0 END,
    0 NOT BETWEEN 0 AND CASE rt0.c0 WHEN rt0.c2 THEN t0.c81 WHEN
        x'' THEN t1.c0 END FROM t0,
    t1, rt0;
