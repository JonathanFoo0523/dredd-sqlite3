-- Time: 2024/06/07 17:54:40
-- Database: database30
-- Database version: 3.40.0
-- seed value: 1144487830
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 1ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'', NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT OR FAIL INTO vt0(c0, c1) VALUES ('P', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.951679601462094); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x'', 0xfffffffffae82172), (NULL, '1483868853'), (-8.5450382E7, 0.40460839950045413); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE (- ((((vt0.c1, vt0.c1, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c0))))); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (NULL); -- 0ms;
PRAGMA application_id = -5780802227574007311; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 0ms;
PRAGMA recursive_triggers = true; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
PRAGMA journal_size_limit = 5016628208448993974; -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.8625135138402803), (NULL), (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('1483868853'), (0.38668770497472615); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '36195'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1376554314);\n; -- 1ms;
COMMIT; -- 0ms;
PRAGMA journal_mode; -- 1ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (NULL, ((CAST(x'' AS BLOB))|(x'' COLLATE NOCASE))), ('1483868853', 0.2513165504556699), (1.483868853E9, x''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.2850231904673217, 'Va)\rLc#\'), (0.6932066568348796, NULL), (0.724710501652323, 'b'); -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN '-85450382' WHEN 683115588 THEN x'' WHEN x'65890807' THEN x'' ELSE NULL END COLLATE RTRIM; -- 0ms;
PRAGMA default_cache_size = -1376554314; -- 10ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB , +c4 REAL ); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3) VALUES (-1839190810, '683115588'), (NULL, '0.8625135138402803'), (0xffffffff82ea6d17, 0.13449281893241583); -- 0ms;
REINDEX  rt0; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20402'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET c1=0X31cdd460; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
UPDATE OR ABORT rt0 SET c2='714046167', c4=-1376554314, c4=x'' WHERE ((((rt0.c3)GLOB(rt0.c4)))=(((rt0.c2) ISNULL))); -- 0ms;
REINDEX BINARY; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (7.14046167E8), ('714046167'), (NULL); -- 1ms;
UPDATE vt0 SET c1=NULL WHERE CAST(TRIM(vt0.c0, vt0.c1) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.9715930333773748, x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO rt0(c3) VALUES ('1483868853'); -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.8311587172672782, NULL, '151979815', 0.9861686587495633, NULL); -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
UPDATE OR ABORT vt0 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2) VALUES (0.8311587172672782, '-611738947'), (0xffffffffee0b3613, 0.6754957131005056), (0.8936534690896453, 'T'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA default_cache_size = 0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.cache_spill = 3094972241525445216; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES ('M('), (0.5892878869745981), ('FQ69p}'); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c1=x'a029'; -- 1ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES ('835572832', x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1973238217); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (NULL); -- 0ms;
PRAGMA temp.threads = 4192502906257422034; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 2139045465);\n; -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA locking_mode; -- 0ms;
PRAGMA recursive_triggers = true; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c1=NULL WHERE CAST((('2139045465') NOTNULL) AS BLOB); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c4) VALUES ('-982853672', '*N<a)8+8'); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
UPDATE vt0 SET c0=2.139045465E9 WHERE CAST((~ (vt0.c1)) AS REAL); -- 1ms;
PRAGMA threads; -- 0ms;
REINDEX NOCASE; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO rt0(c3, c1, c4, c2) VALUES (0.6269246248281347, 0.1430330711442519, x'', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.9746199419820158); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c4, c3, c0, c1) VALUES (x'', x'', 'hG', x'', -3.01255149E8); -- 0ms;
REINDEX RTRIM; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', NULL), (x'', NULL), ('423014413', NULL); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES (NULL, '1483868853'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'', '1160824322'), ('FALSE', ''), ('', NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
END; -- 0ms;
PRAGMA threads = -685071251528642511; -- 0ms;
UPDATE OR FAIL vt0 SET (c0, c1)=(NULL, 302582158); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1479656742); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.1784515057389825, x'fd60'); -- 0ms;
UPDATE vt0 SET (c0)=(0Xffffffff9e0f5afd); -- 4ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c0, c3) VALUES (0.3317725544298603, 0.6932066568348796, '-148625771', x''), (1.160824322E9, '0.9861686587495633', 'p]悞vIWOGI', NULL), (NULL, NULL, 0Xffffffffbb9aedd2, '1986340720'), (-1417124560, NULL, 0.77083229270647, NULL), ('', NULL, 'FALSE', 0.43679885230903526), (0.47544784661040396, 'lHM3|qub', x'', 207142703), ('-1486426616', 20242174, '-1147474478', NULL); -- 1ms;
SELECT rtreecheck('rt0'); -- 1ms;
UPDATE OR REPLACE rt0 SET (c2)=('0'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ((COUNT(rt0.c1))*(CASE WHEN rt0.c0 THEN x'' END)) FROM rt0 GROUP BY (((((rt0.c0 IN ()))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))OR(rt0.c1)), CAST(rt0.c0 AS INTEGER) COLLATE BINARY, rt0.c1 HAVING (((x'')&(x'')) IN (((rt0.c4) NOTNULL))); -- 0ms;
SELECT CAST(((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))AND(NULL)))AND(-1.643160835E9)) AS BLOB), (((rt0.c1 COLLATE BINARY))=((rt0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE FROM rt0 WHERE ((((((x'') BETWEEN (NULL) AND (NULL))))==(((('+ R') NOT BETWEEN (x'd485') AND (0.3317725544298603)))))) LIMIT 151979815 OFFSET -148625771; -- 0ms;
SELECT ALL (((((rt0.c4, rt0.c0, rt0.c3, rt0.c0, rt0.c1))<=((-894536156, rt0.c1, rt0.c0, rt0.c3, rt0.c2)))) NOT BETWEEN ((((rt0.c1))=((rt0.c3)))) AND (rt0.c4)), ((rt0.c0 COLLATE RTRIM)%(((rt0.c0) IS FALSE))), CAST((rt0.c0 IN (rt0.c4)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c0 AS NUMERIC))OR(((0.5892878869745981)||(rt0.c4)))))AND(GROUP_CONCAT(rt0.c3))) FROM rt0 LIMIT -952007350 OFFSET -956285431; -- 1ms;
SELECT CAST(((rt0.c3)<=(rt0.c2)) AS REAL) FROM rt0; -- 0ms;
SELECT (+ (NULL)) FROM rt0 WHERE (((CAST(x'' AS TEXT))|((('27')>(0.2850231904673217))))) GROUP BY ((CAST(rt0.c1 AS BLOB)) BETWEEN (((rt0.c2)GLOB('1483868853'))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) HAVING LENGTH(((rt0.c4) IS FALSE)) ORDER BY CASE WHEN ((rt0.c1)<=(rt0.c0)) THEN ((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)) ELSE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END ASC, rt0.c1; -- 0ms;
SELECT DISTINCT ((0.26642632304864855 COLLATE NOCASE)>(rt0.c3)) FROM rt0 WHERE (((HEX(DISTINCT '')) NOT BETWEEN (((('847214866')) NOT BETWEEN ((0.4847058082482917)) AND (('423014413')))) AND ((('1704127455')LIKE(0.9485233806945913))))); -- 0ms;
SELECT DISTINCT TOTAL('T') FILTER(WHERE UPPER(CASE WHEN rt0.c1 THEN 'yg￿g\rZC' END)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CAST(COUNT(rt0.c0) AS REAL) FROM rt0 WHERE ((('OC䣇}vuA洗') IS TRUE) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END IN ()), (((TOTAL(rt0.c2)))<((SQLITE_COMPILEOPTION_USED(rt0.c1)))), ((rt0.c0 COLLATE RTRIM)IS NOT(SUM(rt0.c1))) FROM rt0; -- 0ms;
SELECT ((((((rt0.c1)OR(rt0.c3)))OR(x'')))<=(((rt0.c3) NOTNULL))) FROM rt0 WHERE ((('_k+?Q') BETWEEN ((NOT ('EZ঎6r'))) AND (CAST('45>AU5Tc' AS NUMERIC)))) LIMIT 2000609304 OFFSET 1290629489; -- 0ms;
SELECT DISTINCT CASE WHEN ('0.38668770497472615' IN ()) THEN rt0.c3 END, TOTAL(rt0.c2) OVER (), (((rt0.c1, 0.6582330556721231, rt0.c1)) NOT BETWEEN ((0.9701619366676482 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c0) NOTNULL))) AND (((rt0.c3 IN (rt0.c3)), rt0.c3, (~ (rt0.c0))))), (((rt0.c1 IN (rt0.c2)))IS NOT(rt0.c0 COLLATE RTRIM)), GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) FROM rt0 GROUP BY (((rt0.c2, rt0.c1, NULL, rt0.c1, rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END, (~ (NULL)), (((rt0.c4, rt0.c2, rt0.c3))>((rt0.c0, rt0.c1, rt0.c2))), rt0.c0 COLLATE BINARY, rt0.c3)) AND (((+ (rt0.c2)), CAST(rt0.c4 AS INTEGER), 0.725266189351016, CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END, CASE WHEN rt0.c0 THEN rt0.c4 END))), CASE WHEN x'' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END COLLATE RTRIM, ((((rt0.c3)AND((rt0.c3 IN ()))))OR(CAST(rt0.c3 AS BLOB))), rt0.c4, (rt0.c3 IN ()) HAVING rt0.c0; -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0 WHERE (((CASE NULL  WHEN NULL THEN 0.8311587172672782 WHEN 0.35271506022114374 THEN NULL WHEN 0.9116307108177504 THEN -894536156 ELSE x'5b263c20' END) NOTNULL)) LIMIT 714046167; -- 0ms;
SELECT ALL SUM((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) FROM rt0 WHERE (((NOT (x'')) IN ())); -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)OR(rt0.c4)))OR(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END)) FROM rt0 WHERE (((('Ti\n礒<N' IN ())) BETWEEN ((+ (NULL))) AND (((-148625771) NOT NULL)))); -- 0ms;
SELECT DISTINCT NULL, (((rt0.c2 IN (rt0.c2)))>=(CAST(rt0.c4 AS REAL))), CUME_DIST() OVER ( PARTITION BY rt0.c0, (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))LIKE(((rt0.c4)>>(rt0.c2))))) FROM rt0 WHERE (((('PyV5)' IN ('-162283857', -1.48625771E8))) NOT BETWEEN (CAST('Z ' AS NUMERIC)) AND ((- (2.000609304E9))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c3)|(-9.5200735E8)) AS REAL) FROM rt0 WHERE (((((((x'')OR(NULL)))AND(x''))) BETWEEN (((0.8625135138402803) NOTNULL)) AND ('-611738947'))); -- 0ms;
SELECT CASE ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((rt0.c3) ISNULL) WHEN rt0.c2 THEN LOWER(DISTINCT rt0.c0) WHEN GROUP_CONCAT(rt0.c4) THEN CAST(rt0.c2 AS NUMERIC) END FROM rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c1) NOTNULL))!=(CAST(rt0.c1 AS REAL))), CAST(MAX(rt0.c0) AS TEXT), LAG(CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c1) NOT NULL) THEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)) ELSE CAST(rt0.c3 AS TEXT) END, ((((((((rt0.c2)OR(rt0.c1)))OR(0.2513165504556699)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))))OR(((0x1af8ad93) ISNULL))), ((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END))) OVER () FROM rt0; -- 0ms;
SELECT ALL (- (rt0.c2)) FROM rt0 WHERE ((((('-245407946') BETWEEN (x'2871') AND (x''))) NOT BETWEEN ((((0.06296433533817469, '1318209616', x'', '%O', '')) NOT BETWEEN ((NULL, ']', -1706492731, NULL, '')) AND (('5>', x'', x'', '1080379278', x'')))) AND ('1483868853'))) LIMIT -1261496368; -- 0ms;
SELECT DISTINCT MIN(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) FROM rt0 WHERE (((((((((CASE 0.1430330711442519  WHEN x'' THEN NULL ELSE 1290629489 END)OR(NULL COLLATE BINARY)))AND('' COLLATE NOCASE)))OR((('1704127455')<<(0.2850231904673217)))))OR((('k	{z[HP') NOT BETWEEN (x'd93c') AND (x'8c03'))))); -- 0ms;
SELECT ALL ((CASE WHEN -611738947 THEN rt0.c0 END)-(((((((((x'')OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)))) FROM rt0 WHERE (IFNULL(DISTINCT (('1213583137')GLOB(0.725266189351016)), ((NULL) IS FALSE))); -- 0ms;
SELECT LEAD(((CAST('1986340720' AS TEXT)) NOT NULL), (((((~ (rt0.c3)))OR((~ (rt0.c0)))))AND(((rt0.c0) IS FALSE))), rt0.c2) OVER ( PARTITION BY (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0))))), CAST(((rt0.c0)>=(rt0.c0)) AS INTEGER)), CASE (+ (rt0.c1))  WHEN 0.22729446869700232 THEN ((rt0.c3)%(rt0.c3)) ELSE CAST(rt0.c3 AS TEXT) END, NULL FROM rt0; -- 0ms;
SELECT AVG(((rt0.c2)LIKE(rt0.c0))) OVER ( ORDER BY (~ (TRIM(NULL)))  NULLS LAST, (~ (rt0.c1)) ASC  NULLS LAST) FROM rt0 ORDER BY CAST(rt0.c3 AS TEXT)  NULLS FIRST; -- 0ms;
SELECT (- (CAST(rt0.c4 AS NUMERIC))), ((rt0.c3)LIKE(rt0.c0 COLLATE BINARY)), ((((rt0.c2) NOTNULL))<=(AVG(rt0.c4))) FROM rt0 WHERE (((((((0.5445060677709976)AND('')))OR('')))>=((((x'531c'))<>((0.06296433533817469)))))); -- 0ms;
SELECT DISTINCT ((INSTR(rt0.c4, rt0.c0))AND(x'')) FROM rt0; -- 0ms;
SELECT rt0.c2 FROM rt0 GROUP BY ((TYPEOF(DISTINCT rt0.c3)) ISNULL) HAVING rt0.c0 ORDER BY COALESCE(DISTINCT CAST(rt0.c4 AS INTEGER), (+ (rt0.c2))) ASC; -- 0ms;
SELECT ALL NULL FROM rt0 WHERE (CAST(((0.47544784661040396) NOT BETWEEN (1237092474) AND (x'')) AS REAL)); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt0; -- 0ms;
SELECT ALL rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT SUM((~ (rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT (TOTAL(rt0.c3) IN ()) FROM rt0 WHERE (((-1814153487)OR(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST(MAX(rt0.c0) AS INTEGER), RANK() OVER ( GROUPS  CURRENT ROW), ((((CAST(rt0.c2 AS NUMERIC))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))))AND(((((rt0.c1)OR(rt0.c0)))AND(-9.5200735E8)))) FROM rt0 WHERE ((((((0.09714163539223952 IN (NULL)))AND(CASE WHEN NULL THEN NULL WHEN x'' THEN NULL WHEN 0.5952793478320231 THEN NULL ELSE '' END)))OR(((((x'')AND(0.6373478618382858)))AND(0X49bc887a))))); -- 0ms;
SELECT DISTINCT TOTAL((rt0.c3 IN (rt0.c3, rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c2) NOT NULL)) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c4) IS TRUE))IS NOT(2.000609304E9)), (~ (((rt0.c2) IS FALSE))), x'6ab6', ((((((((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END)OR(x'')))OR((rt0.c3 IN ()))))OR(CAST(rt0.c2 AS BLOB))))OR((((rt0.c2, rt0.c4, rt0.c1))<((rt0.c2, rt0.c0, rt0.c2))))), CASE WHEN ((rt0.c4) ISNULL) THEN x'' ELSE NULLIF('0.5952793478320231', rt0.c4) END FROM rt0 WHERE ((((0.6754957131005056 IN ())) NOT BETWEEN (1157951484 COLLATE BINARY) AND (((('1986340720')) NOT BETWEEN ((NULL)) AND ((NULL)))))) GROUP BY ((((rt0.c1) ISNULL)) NOT NULL) HAVING (((((rt0.c3)|(rt0.c1)), (+ (rt0.c4)), ((((NULL)AND(x'')))AND(rt0.c1))))<((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)), rt0.c2, rt0.c4 COLLATE BINARY))) LIMIT 1352855293; -- 0ms;
SELECT ALL ((rt0.c1 COLLATE RTRIM)/(((rt0.c0) NOTNULL))), CAST(CAST(rt0.c4 AS REAL) AS REAL), CAST(TOTAL(rt0.c4) AS BLOB) FROM rt0 WHERE ((((((('-1201912203')AND(0.5820078803367048)))AND(0.6373478618382858)))+(CASE ''  WHEN 'a\rG' THEN -35477672 ELSE x'' END))); -- 0ms;
SELECT ((rt0.c0)>>(rt0.c3)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c4)-(rt0.c1))))<>((((rt0.c2)>=(rt0.c4))))) FROM rt0; -- 0ms;
SELECT ALL SUM(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN NULL END COLLATE BINARY) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))) FROM rt0 WHERE (((((((0.39745835499579296)%(x'')))AND((('-1706492731')<=(0.8259516054707027)))))AND(((NULL)*('-1993778180'))))); -- 1ms;
SELECT DISTINCT CUME_DIST() OVER (), SUM(ABS(DISTINCT rt0.c2)), rt0.c2, ((rt0.c4) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) IN ()) FROM rt0 WHERE ('-/pSM?*9') GROUP BY ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (rt0.c3) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) HAVING x'd7da'; -- 0ms;
SELECT COUNT(((rt0.c2) NOT NULL)) OVER () FROM rt0 WHERE ((((((NOT ('1704127455')))AND(CAST(-2.45407946E8 AS REAL))))AND((~ (-1.063237433E9))))); -- 0ms;
SELECT ALL ((COALESCE(rt0.c2, rt0.c4)) NOT NULL) FROM rt0 WHERE ('-956285431'); -- 0ms;
SELECT DISTINCT (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)), CAST(rt0.c2 AS TEXT), rt0.c1))>=((((rt0.c4)+(rt0.c2)), ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)), MIN('')))) FROM rt0 WHERE ('-982853672') ORDER BY 0.11161217421479852 DESC; -- 1ms;
SELECT DISTINCT LIKELY(DISTINCT json_valid(rt0.c0)) FROM rt0 WHERE (((x'bcbf43e9' COLLATE RTRIM) ISNULL)); -- 0ms;
SELECT CASE WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c1) NOTNULL) ELSE ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)) END FROM rt0; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c1)) BETWEEN ((rt0.c0 IN (rt0.c2))) AND (UPPER(DISTINCT rt0.c2))), (((- (rt0.c0))) NOT BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))), CAST(rt0.c1 COLLATE NOCASE AS REAL) FROM rt0 WHERE (((TRIM(DISTINCT 'FL', NULL)) NOT BETWEEN (((('eg'))>((NULL)))) AND ((((NULL)) NOT BETWEEN ((x'')) AND ((-1.48625771E8)))))); -- 0ms;
SELECT ((x'') ISNULL) FROM rt0 WHERE ((CASE WHEN 0.34321065223440905 THEN 0.8822644491746923 ELSE NULL END IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ()))=(TOTAL(rt0.c2))), UPPER(DISTINCT rt0.c4) COLLATE NOCASE, (ABS(DISTINCT rt0.c2) IN (((((rt0.c4)OR(rt0.c4)))OR(rt0.c1)))), (NOT (CASE WHEN rt0.c1 THEN rt0.c3 END)), ((UPPER(DISTINCT x'252bd4bc'))<(((rt0.c2) ISNULL))) FROM rt0 WHERE (((((CAST(0.12132447566864413 AS REAL))AND(CAST(NULL AS INTEGER))))AND(CAST('' AS NUMERIC)))) GROUP BY CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 END THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) ELSE ((rt0.c3)==(rt0.c4)) END HAVING COALESCE(DISTINCT CAST(rt0.c0 AS NUMERIC), (rt0.c2 IN ()), rt0.c0, MIN(rt0.c4)); -- 0ms;
SELECT DISTINCT SUBSTR(GROUP_CONCAT(rt0.c3), rt0.c1) FROM rt0 WHERE (CAST((((('1213583137')OR(0x5db6d616)))OR(NULL)) AS TEXT)); -- 0ms;
SELECT ALL (((0.6637066830848425 IN ())) BETWEEN (x'') AND (json_type(rt0.c0))) FROM rt0 WHERE (CASE WHEN (('653877406')>=('')) THEN (('759281634')>>(NULL)) ELSE (('0.11161217421479852')&(NULL)) END); -- 0ms;
SELECT (((((('0.9746199419820158')=(0.2529984415406593)))AND(((rt0.c2)IS(rt0.c3)))))OR(rt0.c0)) FROM rt0 ORDER BY (((rt0.c2)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)))) AND ((((rt0.c3) IS TRUE))))  NULLS FIRST; -- 0ms;
SELECT (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END IN ()), (- ((- (rt0.c3)))), ((((x'')*(rt0.c0))) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (CAST(rt0.c1 AS NUMERIC))) FROM rt0 WHERE (CAST((((x'')) BETWEEN (('-417631072')) AND ((NULL))) AS REAL)) LIMIT -15638147 OFFSET -1804451729; -- 0ms;
SELECT DISTINCT ((((rt0.c1)>>(rt0.c3))) BETWEEN (-1.063237433E9) AND (rt0.c0)), ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) COLLATE BINARY, rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) NOT NULL) AS BLOB) FROM rt0 WHERE (CAST(((0.021479759295332634) BETWEEN (x'b892') AND ('z ')) AS REAL)); -- 1ms;
SELECT ALL CASE WHEN CASE WHEN rt0.c0 THEN rt0.c4 END THEN SUM(rt0.c3) WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END THEN (rt0.c2 IN (rt0.c2, rt0.c2)) WHEN ((rt0.c1) NOT NULL) THEN (- (rt0.c3)) WHEN (~ (rt0.c2)) THEN ((rt0.c4)OR(rt0.c1)) WHEN (rt0.c3 IN (rt0.c0)) THEN (((rt0.c2))>=((rt0.c2))) END, ABS(DISTINCT (~ (rt0.c1))), rt0.c1 COLLATE BINARY FROM rt0 GROUP BY ((((rt0.c3) NOT BETWEEN ('-1916311669') AND (rt0.c4))) NOT BETWEEN (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c2))) AND (rt0.c0)); -- 0ms;
SELECT ALL ((x'') NOT BETWEEN (((rt0.c4) NOT NULL)) AND (CAST(rt0.c4 AS TEXT))), ((rt0.c0 COLLATE RTRIM) NOT NULL), (rt0.c0 IN ()) COLLATE RTRIM, (NOT (rt0.c3)) COLLATE NOCASE, ((((((((((((rt0.c3)OR((rt0.c4 IN ()))))AND((rt0.c2 IN (rt0.c4)))))AND((((('%m')OR(rt0.c4)))OR(rt0.c0)))))AND((rt0.c4 IN (rt0.c1)))))AND(((rt0.c2)<<(NULL)))))AND(CAST(rt0.c2 AS REAL))) FROM rt0; -- 0ms;
SELECT CAST(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c3)) AS BLOB) FROM rt0 WHERE (((x'')&('''C')) COLLATE NOCASE); -- 0ms;
SELECT ((CAST(rt0.c4 AS INTEGER)) BETWEEN ((NOT (rt0.c1))) AND ((- (rt0.c3)))), ((CAST(rt0.c2 AS REAL)) NOTNULL), FIRST_VALUE(((rt0.c2) ISNULL) COLLATE BINARY) OVER ( RANGE ((((rt0.c0) ISNULL)) ISNULL) PRECEDING EXCLUDE GROUP) FROM rt0 WHERE ((((((0.5892878869745981) NOT BETWEEN ('994058722') AND ('1747455218')), ((('jퟘE', ' K', 0.6951723299371462))<>((NULL, 'SH,{G&1䲦', NULL))), ((((((((NULL)OR(0.4948063501615062)))AND(0.6047972652599974)))OR(NULL)))OR(0.6115230439574968)), '-1814153487' COLLATE BINARY, (+ (1.290629489E9))))<>(((((('KS')OR(0.14875868560519778)))AND(0.39745835499579296)), (+ ('-itꂝ&}o')), (0x21bfb1ec IN ()), ((((x'')AND('566211052')))AND(x'b749')), ((NULL)>=(0.7632684506056514)))))) ORDER BY (+ (((rt0.c3)>=(0.4638924100806868))))  NULLS FIRST;SELECT DISTINCT CASE WHEN ((rt0.c4) NOTNULL) THEN ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c1)) END FROM rt0 WHERE (((((((x'')OR(NULL)))OR(x'')))!=((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))OR(CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END)))AND(COUNT(rt0.c0))), (- (UPPER(rt0.c3))), ((rt0.c2)==(rt0.c3)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0 WHERE (((x'') IS TRUE) COLLATE NOCASE) LIMIT -1839190810 OFFSET -1147474478; -- 0ms;
SELECT (((CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END))!=((rt0.c4))) FROM rt0; -- 1ms;
SELECT ((rt0.c4 COLLATE BINARY) IS TRUE) FROM rt0 WHERE (CASE WHEN (+ ('-1376554314')) THEN CAST(NULL AS BLOB) WHEN NULLIF(DISTINCT 0xffffffff9e0f5afd, NULL) THEN ((1.352855293E9)OR(x'')) WHEN ((((x'')AND(x'')))AND(6.53877406E8)) THEN ((NULL)&('0.5820078803367048')) ELSE ((NULL)>>(0.6582330556721231)) END); -- 0ms;
SELECT NULL, (- (0.7138467860474959)), ((json_remove(rt0.c0, rt0.c1, rt0.c2, rt0.c4))>(((rt0.c1)+(rt0.c1)))) FROM rt0 WHERE (((((NULL) NOT BETWEEN (0xffffffff821a97c6) AND ('-1993778180'))) BETWEEN (CASE '1829185208'  WHEN x'' THEN 'A' END) AND ((- (NULL))))) LIMIT -2011759894 OFFSET -199920905; -- 0ms;
SELECT DISTINCT rt0.c3, (rt0.c3 IN (rt0.c1)) COLLATE RTRIM, LOWER(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0))) FROM rt0; -- 0ms;
SELECT x'' FROM rt0 WHERE (CAST((('M(') ISNULL) AS REAL)) GROUP BY ((((rt0.c0)>>(rt0.c4)))>>(rt0.c2 COLLATE NOCASE)), CAST((- (rt0.c3)) AS INTEGER), CASE 0.011072072396068888  WHEN (+ (rt0.c0)) THEN ((rt0.c4)<=(rt0.c1)) END LIMIT -84342119; -- 0ms;
SELECT ALL ((((rt0.c0 COLLATE NOCASE)OR(rt0.c4 COLLATE BINARY)))AND(x'')), (NOT (0.025952012166636673)), DENSE_RANK() OVER ( PARTITION BY (((((((((rt0.c1 IN (rt0.c4)))OR(NULL)))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c4) ISNULL))))AND(rt0.c3 COLLATE BINARY)), CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END AS REAL)) FROM rt0 WHERE (((('㞏I')) NOT BETWEEN (('Jq')) AND ((0.027229134579174974))) COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)) COLLATE BINARY, GROUP_CONCAT(((rt0.c1)LIKE(rt0.c2))), GROUP_CONCAT(((rt0.c3)%(rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)), LIKELIHOOD(rt0.c1, 0.48910827892765096), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) AND ((COALESCE(DISTINCT rt0.c4, rt0.c0), CAST(rt0.c3 AS INTEGER), CAST(NULL AS NUMERIC)))), rt0.c0, CASE AVG(rt0.c2)  WHEN COALESCE(DISTINCT rt0.c0, rt0.c3, rt0.c4, rt0.c3, rt0.c4, rt0.c3) THEN (rt0.c4 IN (rt0.c4)) END FROM rt0 WHERE (((((0.2343826154906693) BETWEEN (0.5317357765654228) AND (0xfffffffffae82172)))>=(x'0f81'))); -- 0ms;
SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND (('759281634'))) COLLATE BINARY COLLATE RTRIM, ((rt0.c2 COLLATE BINARY) IS TRUE), CASE WHEN ((rt0.c1)&(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END END FROM rt0; -- 1ms;
SELECT ALL ((CAST(rt0.c2 AS TEXT)) NOT NULL) FROM rt0 WHERE ('w7'); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(CAST(0.04233546968977264 AS NUMERIC) AS BLOB)) LIMIT -1702688348 OFFSET 1459337356; -- 0ms;
SELECT DISTINCT (- (json_remove(rt0.c4, rt0.c4))) FROM rt0 WHERE (((0.54856055820747 COLLATE BINARY)<(TRIM(NULL)))) GROUP BY ((rt0.c3) NOTNULL) COLLATE BINARY; -- 0ms;
SELECT ((((+ (rt0.c2)), (rt0.c1 IN ()), ((rt0.c4)*(x''))))>((rt0.c0, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c4) NOT NULL)))), ((((rt0.c4) NOT BETWEEN (x'') AND (rt0.c2))) ISNULL), ((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c4))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c2 END) AND (0Xffffffffaf5ef83b COLLATE NOCASE)), (((- (rt0.c0))) IS TRUE), (((NOT (rt0.c0))) NOT BETWEEN (((rt0.c1)+(rt0.c4))) AND (((((0.06100228172127087)OR(rt0.c0)))AND(rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL ((((((((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)OR(((rt0.c0)-(rt0.c1)))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END)))OR(LIKELY(DISTINCT 0xffffffffdeef2d25))))AND(GROUP_CONCAT(rt0.c2))) FROM rt0 ORDER BY 0.355288923513319 ASC; -- 1ms;
SELECT ALL (((rt0.c0)) BETWEEN ((AVG(rt0.c3))) AND ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c0))))), CASE WHEN 0.1387686123216747 THEN (~ (rt0.c2)) ELSE ((rt0.c2)|(rt0.c0)) END, (rt0.c0 IN ()) FROM rt0 GROUP BY ((LOWER(rt0.c2)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (IFNULL(rt0.c0, rt0.c1))) HAVING CASE WHEN (((rt0.c1))<((rt0.c0))) THEN NULL END; -- 0ms;
SELECT DISTINCT MIN(((((rt0.c1)AND(rt0.c2)))OR(rt0.c3))) FROM rt0 WHERE (((((('')IS(0Xbb14821))))!=((((NULL) NOT BETWEEN (0.961656933476851) AND ('')))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))<=(CAST(rt0.c2 AS REAL)))  NULLS FIRST) FROM rt0 GROUP BY (((((rt0.c0) IS TRUE)))=(((((rt0.c3))!=((rt0.c0)))))) HAVING CAST(rt0.c2 AS INTEGER) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT 0.8581526892547113 FROM rt0; -- 0ms;
SELECT DISTINCT 0.870670469092304 FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c4)>>(rt0.c2))) AND (CAST(rt0.c3 AS INTEGER))), CAST(((rt0.c3)>=(rt0.c1)) AS INTEGER), CASE rt0.c0 COLLATE RTRIM  WHEN (rt0.c4 IN ()) THEN rt0.c3 COLLATE BINARY ELSE ((rt0.c1) IS FALSE) END FROM rt0 WHERE (((((NULL) NOT BETWEEN ('fQT%&') AND (x'ff31')))>((((x'')) NOT BETWEEN ((0.4542927316598777)) AND ((x'')))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((1983663270)<=('|ઙ'))))<(((- ('-1760688801')))))); -- 0ms;
SELECT CASE SUM(rt0.c1)  WHEN ((rt0.c0)=(rt0.c0)) THEN (rt0.c1 IN ()) WHEN ((rt0.c1)|(rt0.c0)) THEN ((((((((x'3427')AND(rt0.c2)))OR(x'')))AND(rt0.c3)))AND('1954810635')) WHEN ((rt0.c3) ISNULL) THEN rt0.c2 END FROM rt0; -- 0ms;
SELECT ALL COUNT(((x'dafa')>=(rt0.c1))) OVER () FROM rt0; -- 1ms;
SELECT CAST((- ('-1486426616')) AS REAL), (- (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)), x'' FROM rt0 GROUP BY ((((((((x'')OR((((rt0.c1, rt0.c3, rt0.c2))=((rt0.c2, rt0.c1, rt0.c4))))))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c4)))AND(x'')))AND(rt0.c3)))))AND(rt0.c0)); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) IS FALSE) FROM rt0; -- 0ms;
SELECT TOTAL(CASE WHEN rt0.c1 THEN rt0.c4 END) OVER () FROM rt0 WHERE ((- (((NULL)LIKE(NULL))))); -- 0ms;
SELECT DISTINCT ((0.1069914964214842)<(((rt0.c2)-(rt0.c4)))), ((((SQLITE_COMPILEOPTION_USED(rt0.c3))OR((0.10923581736525834 IN ()))))AND(((0.8942869518644024)%(rt0.c0)))), GROUP_CONCAT((- (rt0.c4))) OVER () FROM rt0 WHERE (((((0.19635508557170123) NOT BETWEEN ('1248591840') AND (x'')))<(json_remove('-2144858691', '-1236877569', NULL, 0xffffffffec318a90, 0xffffffff88218cda, NULL))));SELECT DISTINCT ((rt0.c4 IN ()) IN ()), ((1769451106) NOTNULL), ((((((((rt0.c0)OR('1829185208')))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT ((((((((rt0.c0 COLLATE RTRIM)OR((NOT (NULL)))))OR(0.9567421071338474 COLLATE RTRIM)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT (CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 END IN ()), ((((rt0.c4)LIKE(rt0.c4)))IS NOT(((rt0.c0)==(0.6775075603493447)))), ((((((rt0.c4)AND(rt0.c3)))OR(rt0.c4))) ISNULL) FROM rt0; -- 0ms;
SELECT ALL x'' FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)%(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 ELSE 1157951484 END)), (((NOT (rt0.c0)))IS NOT(((rt0.c2)GLOB(rt0.c0)))), CASE WHEN CASE WHEN rt0.c4 THEN rt0.c3 END THEN SUBSTR(rt0.c1, rt0.c2) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0) IS FALSE) WHEN rt0.c3 THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c4) NOT NULL) END FROM rt0; -- 0ms;
SELECT DISTINCT CASE (~ (rt0.c0))  WHEN ((rt0.c3)>=(rt0.c4)) THEN COUNT(*) WHEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c3)*(rt0.c2)) WHEN LIKELIHOOD(rt0.c4, 0.8838788965705934) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END, CASE WHEN (~ (rt0.c3)) THEN CAST(rt0.c1 AS TEXT) END, (~ (LIKELY(DISTINCT 0.5510114033551354))) FROM rt0 WHERE (x'dcf8' COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c2)))LIKE(CAST(rt0.c0 AS REAL))) FROM rt0 WHERE ((- ('pyv5)' COLLATE NOCASE))) ORDER BY (((rt0.c0) ISNULL) IN ()) DESC; -- 0ms;
SELECT ALL ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))) NOT NULL), (+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))), x'5c12' FROM rt0 WHERE ((((x'')) NOT BETWEEN ((CASE WHEN '-1727101111' THEN 'ᰨt8N bA' END)) AND ((((0.3622796343780058)>=('1157951484')))))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c4 AS TEXT) THEN rt0.c1 COLLATE RTRIM WHEN (('-1352730565')GLOB(rt0.c4)) THEN MAX(rt0.c1) WHEN CAST(rt0.c2 AS REAL) THEN rt0.c1 END FROM rt0; -- 0ms;
SELECT DISTINCT ((-304955940) IS TRUE), LIKELY(((rt0.c2)>>(rt0.c1))), (NOT ((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((x'', rt0.c0, 'M2័')) AND (('-1279367378', rt0.c0, rt0.c2))))) FROM rt0 WHERE (((~ (x'6c31')) IN ())); -- 0ms;
SELECT DISTINCT '-1991146560' FROM rt0; -- 0ms;
SELECT ALL CASE WHEN rt0.c2 THEN MAX(rt0.c0) ELSE ((rt0.c3)-(rt0.c2)) END, (~ (CASE 0.5948407511207797  WHEN rt0.c1 THEN rt0.c1 END)), (((('k)0')OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((((((((rt0.c0)AND(0.8736201261223576)))OR(rt0.c4)))AND(0.6754957131005056)))AND(rt0.c2)))) FROM rt0 WHERE (((((((0x5f972b92)OR(-5.54750683E8)))AND(((((x'')OR('ez঎6r')))OR(NULL)))))OR(((0.6633232747204023)|(-1822375402))))); -- 0ms;
SELECT DISTINCT ((((GROUP_CONCAT(rt0.c2))OR(rt0.c1)))AND(CAST(rt0.c1 AS BLOB))) FROM rt0 WHERE (CASE WHEN CASE WHEN 'c|' THEN NULL ELSE '1499421541' END THEN NULL COLLATE BINARY WHEN IFNULL(DISTINCT 0.16210899133460632, x'') THEN ((('1290629489', x'', 'PyV5)')) BETWEEN (('-280303671', 0.39792146894909086, -2.80303671E8)) AND ((0.021057218749538142, x'bb04', x'e3f3'))) WHEN 0X22b6d464 COLLATE NOCASE THEN (('e\n3ॢ')IS NOT(x'')) ELSE NULL COLLATE BINARY END); -- 1ms;
SELECT DISTINCT (NULL IN ()), IFNULL(DISTINCT rt0.c1 COLLATE BINARY, AVG(rt0.c3)), ((((rt0.c2)||(rt0.c1)))>(((rt0.c0) IS FALSE))) FROM rt0 WHERE ((((-2098565865)) BETWEEN (((((x'', NULL, '', '1290629489', NULL))>=((NULL, x'ed19', x'', '', x''))))) AND (((- (x'')))))); -- 0ms;
SELECT DISTINCT NULL, ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END)<>(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)))), ((((((((((rt0.c3)<>('6#')))OR(TOTAL(rt0.c0))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND ('-915706884')))))AND(((((((((rt0.c0)OR(0.9485233806945913)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))), ((LIKELIHOOD(DISTINCT rt0.c3, 0.6617216739906034)) NOT NULL), CAST(((rt0.c4)<=(rt0.c4)) AS REAL) FROM rt0 WHERE ((((('jO!\옂孥')>(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE WHEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)) THEN ((rt0.c3) BETWEEN (rt0.c2) AND (x'eccb')) ELSE ((rt0.c1)LIKE(rt0.c4)) END FROM rt0 WHERE (((('tL9[|waL' IN ('-9223372036854775808')))||(CASE WHEN NULL THEN 'M3' END))); -- 0ms;
SELECT DISTINCT ((rt0.c4) NOT NULL) FROM rt0 WHERE (((LIKELIHOOD(DISTINCT 'NHf඗', 0.27577093047308754))OR((+ (''))))); -- 0ms;
SELECT DISTINCT rt0.c1, CASE WHEN SUM(rt0.c0) THEN IFNULL(DISTINCT rt0.c3, rt0.c4) ELSE ((rt0.c4)-(rt0.c4)) END, ((((rt0.c2)|(rt0.c0))) BETWEEN (((rt0.c2)IS NOT(rt0.c4))) AND (((rt0.c3) NOT NULL))) FROM rt0 WHERE (CASE NULL  WHEN '2071060977' THEN 0.5210718492044565 END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT AVG(TOTAL_CHANGES()), rt0.c4, '-1486426616' FROM rt0 GROUP BY CAST(((rt0.c0) NOTNULL) AS REAL) HAVING (((rt0.c0, rt0.c3, rt0.c4)) NOT BETWEEN (((rt0.c1 IN ()), (('753813930')==(rt0.c1)), rt0.c4)) AND ((x'', (((0X6192dd71))<=((rt0.c3))), json_extract(rt0.c1, 0.6754916372029515, rt0.c2, rt0.c1)))); -- 0ms;
SELECT ALL ((IFNULL(rt0.c3, rt0.c2))|((rt0.c1 IN (rt0.c2)))), rt0.c1, (+ ((+ (rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL LENGTH(CASE WHEN 'Nv%U''9jw' THEN rt0.c1 END) FROM rt0 WHERE (CASE WHEN ((x'cca2') BETWEEN ('-1288536812') AND (NULL)) THEN CAST('-417761771' AS BLOB) END); -- 0ms;
SELECT CASE ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c2) NOT BETWEEN (-308880277) AND (rt0.c0)) THEN CASE WHEN rt0.c3 THEN rt0.c4 END END FROM rt0 WHERE (((((x'')>('-1378611770'))) BETWEEN (x'f012') AND (((0.8736201261223576)|('EnJ*9'))))); -- 0ms;
SELECT DISTINCT (((((rt0.c2, rt0.c0, rt0.c2))<=((rt0.c4, rt0.c4, rt0.c4))))<=(SUM(rt0.c2))) FROM rt0 LIMIT 2138250280 OFFSET -1814153487; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(NULL) OVER () FROM rt0 WHERE ((- (((NULL)+(1.459337356E9))))); -- 0ms;
SELECT ALL ((~ (rt0.c0)) IN ()) FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((CASE rt0.c2  WHEN NULL THEN rt0.c2 END))); -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c0) NOTNULL))) FROM rt0 WHERE ((((((((((((('2139045465')AND(NULL)))AND('')))OR(x'a9d49584')))AND('1726207416')))AND((('1483868853') IS TRUE))))AND((('0.9116307108177504') NOT BETWEEN ('R	') AND (0xffffffffcba18ee2))))); -- 0ms;
SELECT GROUP_CONCAT(NULL) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)))<((((rt0.c1))<=((rt0.c3))))) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c1)!=(rt0.c1)))AND(((rt0.c0)||(rt0.c3)))), (rt0.c0 COLLATE RTRIM IN ()), ((((((rt0.c4)<<(rt0.c3)))OR(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)))))OR(((rt0.c3)IS(rt0.c4)))) FROM rt0 WHERE ((((((1986340720, x'fba225aa', '1765619599')) NOT BETWEEN (('-148625771', -103956910, 0.04105872103175612)) AND ((NULL, NULL, '-891693493'))))||(((1.572263446E9)OR(x''))))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))) OVER () FROM rt0 WHERE (''); -- 0ms;
SELECT ((TRIM(rt0.c0))>=(CASE WHEN 0.9116307108177504 THEN rt0.c1 ELSE rt0.c2 END)) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((CAST('-1805502744' AS TEXT))) AND (((NOT ('c<'))))), (((((rt0.c2))!=((rt0.c0))))+((+ (rt0.c2)))), CAST(((rt0.c2)<>(rt0.c4)) AS BLOB) FROM rt0; -- 1ms;
SELECT ALL CAST(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) AS TEXT), AVG(rt0.c1) COLLATE BINARY COLLATE BINARY, CAST(rt0.c3 AS BLOB) COLLATE BINARY FROM rt0; -- 0ms;
SELECT rt0.c0 COLLATE BINARY, (~ (MIN(rt0.c4))), RANK() OVER (), ((CAST(rt0.c2 AS TEXT))<(TYPEOF(rt0.c3))), TOTAL(NULL) COLLATE BINARY FROM rt0; -- 0ms;
SELECT CAST(CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END AS BLOB), ((x'') BETWEEN (COUNT(*)) AND (ABS(DISTINCT rt0.c4))), ((((rt0.c1)<=(rt0.c4))) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))||((((rt0.c4, rt0.c0, rt0.c0))<((rt0.c2, rt0.c0, rt0.c4))))), AVG((+ (rt0.c3))) OVER (), ((((rt0.c2)||(rt0.c3))) BETWEEN (((rt0.c1) NOTNULL)) AND ((NULL IN ()))) FROM rt0 WHERE (((x'') NOTNULL) COLLATE NOCASE) LIMIT -2098565865 OFFSET 1490896408; -- 0ms;
SELECT ALL (((rt0.c1, rt0.c1, rt0.c4)) BETWEEN (((rt0.c0 IN (rt0.c1)), (rt0.c2 IN ()), rt0.c1)) AND ((CAST(rt0.c4 AS BLOB), ((rt0.c1)LIKE(rt0.c4)), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) FROM rt0 WHERE ((((0.7294158747992122)) BETWEEN ((((0.5867617897038936) NOTNULL))) AND (('2071060977')))); -- 0ms;
SELECT ((+ (-1.236877569E9)) IN ()) FROM rt0; -- 0ms;
SELECT ALL ((((((rt0.c4) IS TRUE))AND(CASE WHEN rt0.c2 THEN rt0.c2 END)))AND(rt0.c2)) FROM rt0; -- 0ms;
SELECT ALL ((0.5820078803367048) ISNULL) FROM rt0 WHERE (((((901138879)>=(NULL)))||((NOT ('Uc'))))); -- 0ms;
SELECT DISTINCT SUM(LOWER(DISTINCT rt0.c1)) OVER (), rt0.c0, (((~ (rt0.c0))) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)<>(rt0.c2)))IS(rt0.c3 COLLATE RTRIM)) FROM rt0 WHERE ((((((((((('') BETWEEN (x'6b56') AND (NULL)))AND((x'' IN (NULL)))))AND(CAST(x'3ed6' AS INTEGER))))OR(((x'') NOT NULL))))OR(((7.59281634E8) NOTNULL)))); -- 1ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((rt0.c0)==(rt0.c1))) FROM rt0 WHERE (CASE WHEN ((((NULL)AND(NULL)))AND(' i&xd1J䡐')) THEN (('0.7138467860474959')IS(x'df58272c')) WHEN CAST('' AS TEXT) THEN CAST('-1643160835' AS NUMERIC) WHEN ((1.769451106E9)>>(NULL)) THEN HEX(-1417124560) ELSE (NOT (0.4847058082482917)) END); -- 0ms;
SELECT DISTINCT CAST('-2027415573' COLLATE BINARY AS NUMERIC) FROM rt0 GROUP BY ((CASE WHEN rt0.c0 THEN rt0.c1 END) IS TRUE), CASE WHEN ((((rt0.c4)OR(rt0.c0)))AND(0.3512224025499022)) THEN ((rt0.c0) IS TRUE) ELSE GLOB(rt0.c1, rt0.c1) END, (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c3, rt0.c3, rt0.c2))))|(json(rt0.c1))) HAVING CASE WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)) THEN ((rt0.c4) NOTNULL) ELSE CAST(0x23f39a8e AS TEXT) END; -- 0ms;
SELECT DISTINCT CASE WHEN AVG(rt0.c1) THEN ((rt0.c0)+(rt0.c4)) END FROM rt0 GROUP BY (((rt0.c2)) BETWEEN ((((rt0.c4) ISNULL))) AND (((rt0.c0 IN (rt0.c4))))); -- 0ms;
SELECT CAST(((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))OR('1080379278')))AND(rt0.c0)) AS REAL), (((rt0.c0 IN (rt0.c3))) NOT BETWEEN ((NOT (rt0.c3))) AND (HEX(DISTINCT rt0.c2))), (((rt0.c4)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((COUNT(*)))) FROM rt0; -- 0ms;
SELECT (+ (CASE WHEN rt0.c2 THEN rt0.c2 END)) FROM rt0 WHERE (((TRIM(NULL)) BETWEEN (NULL) AND ((+ (NULL))))); -- 0ms;
SELECT rt0.c0 COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT NTILE((NULL IN ()) COLLATE BINARY) OVER (), ((SUM(rt0.c0)) NOTNULL), (((((rt0.c3) ISNULL), ((rt0.c3)IS(x'')), rt0.c0))<>(((NOT (rt0.c4)), ((rt0.c3) IS FALSE), rt0.c0 COLLATE BINARY))) FROM rt0 WHERE ((- (((0.09175964662463976) BETWEEN (1227444712) AND (NULL)))));SELECT DISTINCT rt0.c4 FROM rt0; -- 0ms;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(x'' COLLATE BINARY AS REAL)); -- 0ms;
SELECT ALL CASE (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, '', rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c3)))  WHEN ('1416469557' IN (rt0.c0)) THEN ((rt0.c3)<=(rt0.c2)) END FROM rt0 WHERE (CAST(((((0.43486603184839545)OR(NULL)))OR(NULL)) AS BLOB)) LIMIT 302582158; -- 0ms;
SELECT ALL (((rt0.c0) IS TRUE) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT (((((((rt0.c3))>=((NULL))))OR(rt0.c4 COLLATE BINARY)))AND(SUM(rt0.c4))) FROM rt0 WHERE (HEX(((0.724710501652323) NOT BETWEEN (0.3622796343780058) AND ('566211052')))) GROUP BY ((((rt0.c4)%(rt0.c3))) BETWEEN (0.8355685275191927) AND (CAST(rt0.c1 AS BLOB))), rt0.c2 COLLATE BINARY, (NOT (((rt0.c1)IS(rt0.c4)))), GLOB(CAST(rt0.c2 AS INTEGER), CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END), (((LIKE(rt0.c0, rt0.c0)))<=((((rt0.c3)/(rt0.c4))))); -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE NOCASE)==(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))), FIRST_VALUE((((('101059879') NOT BETWEEN (rt0.c4) AND (rt0.c0)))OR(((']FLP')||(rt0.c4))))) OVER (), ((((rt0.c4)>>(rt0.c2))) ISNULL) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c3)IS NOT(rt0.c3)) AS NUMERIC) FROM rt0 WHERE (((((0.5887723002986217) ISNULL))OR(((0.7130935187999405) ISNULL)))) ORDER BY (+ (((rt0.c4) IS FALSE)))  NULLS LAST, (SQLITE_VERSION() IN ()) DESC; -- 1ms;
SELECT ((ABS(DISTINCT 638787089))<=(((rt0.c4)!=(x'')))) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), (LIKELY(rt0.c1) IN (x'')), (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c0 IN ()), LTRIM(NULL, rt0.c0), CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END, x''))!=((rt0.c3, ((rt0.c3) ISNULL), ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c4)), (- (rt0.c2)), ((rt0.c3)<(rt0.c3))))) FROM rt0 WHERE (json_array((+ (0.3317725544298603)), (((-1243149982)) NOT BETWEEN ((NULL)) AND ((''))), CASE 0xffffffff91ca5b88  WHEN 0.12132447566864413 THEN 0X70fcf062 WHEN x'' THEN 2131949941 WHEN '0.9701619366676482' THEN '' END, 0.8976962990072809 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT (((((rt0.c1, rt0.c3, 0.04105872103175612))!=((rt0.c4, rt0.c2, rt0.c4)))) NOT BETWEEN (rt0.c2) AND (((rt0.c3)LIKE(rt0.c1)))), IFNULL(DISTINCT ((((((((0.8822644491746923)OR(NULL)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4))), CAST(CASE WHEN rt0.c1 THEN x'dc06' END AS BLOB) FROM rt0 WHERE ((((NULL)) BETWEEN ((CASE NULL  WHEN NULL THEN 0.2969718512368018 WHEN '0.6373478618382858' THEN -5.54750683E8 WHEN NULL THEN 'eP瞹 _U' END)) AND ((x'' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT ((((((rt0.c4)<(rt0.c4)))OR(((rt0.c2)%(rt0.c4)))))AND(COALESCE(DISTINCT rt0.c4, rt0.c0, rt0.c1, rt0.c3))) FROM rt0 WHERE ((((((0.3534519389127464) NOT BETWEEN (NULL) AND ('Ne?ivcX'))))<((((NULL) ISNULL))))); -- 0ms;
SELECT ALL (+ (((rt0.c3) NOT NULL))) FROM rt0; -- 0ms;
SELECT ALL ((-6.11738947E8)/(((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT (- (CAST(rt0.c3 AS REAL))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((x'') IS FALSE)) IS TRUE) FROM rt0 GROUP BY (+ (-1352730565)) HAVING ((((((((rt0.c1 COLLATE RTRIM)AND(NULL)))AND((0.8465517533671698 IN (rt0.c4, rt0.c4)))))OR((NULL IN ()))))OR(rt0.c4 COLLATE NOCASE));SELECT NULL FROM rt0; -- 0ms;
SELECT ALL ((rt0.c4)+(rt0.c2)) COLLATE NOCASE, COUNT(*), CAST(((rt0.c0)*(rt0.c4)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL ((rt0.c4)=(rt0.c0)) COLLATE NOCASE FROM rt0; -- 1ms;
SELECT ((((CAST(rt0.c1 AS NUMERIC))OR((NULL IN ()))))OR(rt0.c2)), ROW_NUMBER() OVER (), ((((((rt0.c4)OR(rt0.c4)))OR(rt0.c4))) NOTNULL) FROM rt0 WHERE ((((-1.643160835E9)) BETWEEN (('-280303671')) AND ((0.18792408333402633))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), COUNT(*), MIN((rt0.c2 IN ())), (~ (rt0.c3 COLLATE RTRIM)), ((((((((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 END)OR(HEX(rt0.c0))))OR(rt0.c3 COLLATE NOCASE)))OR(GROUP_CONCAT('za'))))OR((- (rt0.c4)))) FROM rt0 LIMIT 1659557032; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)==((x'' IN ()))) FROM rt0 NOT INDEXED WHERE (((((x'')GLOB(NULL))) NOTNULL)) GROUP BY x'' HAVING COUNT(CASE WHEN rt0.c0 THEN rt0.c2 ELSE NULL END) LIMIT 1290629489 OFFSET -554750683; -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(CAST(rt0.c0 AS BLOB))))OR('-238124841')) FROM rt0; -- 0ms;
SELECT DISTINCT MIN(((rt0.c4) IS FALSE)) COLLATE BINARY FROM rt0 WHERE (''); -- 0ms;
SELECT ALL ((((rt0.c4 COLLATE RTRIM)AND((+ (rt0.c3)))))AND(CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) FROM rt0; -- 1ms;
SELECT ALL SQLITE_COMPILEOPTION_USED(((rt0.c2)-(rt0.c1))) FROM rt0 WHERE ((((((('761332036')AND(x'')))AND(NULL)))>>(((((((((((((x'e1e756c9')OR('')))AND(NULL)))AND(0.8427146858056757)))OR('542312268')))OR(5.92894089E8)))AND(NULL))))); -- 0ms;
SELECT (CASE x'a242'  WHEN rt0.c2 THEN rt0.c4 END IN ()), NULL, ((((rt0.c4) IS TRUE)) IS FALSE), rt0.c0, (~ ((rt0.c2 IN (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((0Xfffffffffeec82f8)LIKE(rt0.c2)))==(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END)), (CAST(rt0.c4 AS BLOB) IN ()), CASE WHEN rt0.c3 THEN 1160824322 END COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c1)||(rt0.c3))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c4)OR(rt0.c1)))AND(rt0.c4))) BETWEEN (COUNT(rt0.c1)) AND (((rt0.c4) BETWEEN ('''C') AND (rt0.c1)))), FIRST_VALUE(CASE WHEN rt0.c4 THEN ((rt0.c2)IS(rt0.c4)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN (((rt0.c4))!=(('EnJ*9'))) WHEN ((rt0.c4)<=(rt0.c2)) THEN rt0.c0 END) OVER (), (((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c4)) IN (((((rt0.c4)OR(rt0.c3)))OR(rt0.c0)))), 1.704127455E9, MIN(('-554750683' IN ())) COLLATE BINARY FROM rt0 GROUP BY (((rt0.c4)<<(rt0.c3)) IN (x'')) HAVING ((('847214866')>>(rt0.c0)) IN ()); -- 1ms;
SELECT ALL ((((rt0.c2)+(rt0.c3)))-((((rt0.c1, rt0.c4, rt0.c0))<((rt0.c1, rt0.c1, rt0.c3))))), CASE rt0.c3 COLLATE RTRIM  WHEN MIN(rt0.c2) THEN json_valid(rt0.c3) ELSE LOWER(DISTINCT rt0.c2) END, ((((((rt0.c0) BETWEEN (0xffffffffb85c4675) AND (rt0.c2)))AND(NULLIF('!-nv9', rt0.c3))))OR(GROUP_CONCAT(rt0.c0))) FROM rt0 WHERE ((((x'559c')) NOT BETWEEN ((CAST(0.7560129328234465 AS BLOB))) AND (((('3uZ4럢 [L')>=('-952007350')))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c0)) BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) AND (((rt0.c4)|(rt0.c2)))), 0.1784515057389825, (- ((~ ('-969535188')))) FROM rt0; -- 0ms;
SELECT ALL rt0.c3, ((((rt0.c3)<(rt0.c2))) IS TRUE), CASE WHEN rt0.c2 THEN rt0.c4 END COLLATE BINARY FROM rt0 WHERE (CAST((((x''))!=((NULL))) AS REAL)); -- 0ms;
SELECT DISTINCT 0.08652806938816104 FROM rt0 WHERE (((x'' COLLATE NOCASE)&(CAST('-2102677327' AS NUMERIC)))) ORDER BY ((((rt0.c1) NOTNULL))IS NOT(854857469)); -- 0ms;
SELECT DISTINCT (((((NOT (0.23578939412016453)))OR(CAST(rt0.c1 AS REAL))))OR(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) FROM rt0 WHERE (((('-773150248', '', NULL))<>((-1.7976931348623157E308, NULL, ''))) COLLATE RTRIM); -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((0.6047972652599974, x'', 0.09369851529426221)) BETWEEN ((((('6SZ8)y!.	')) NOT BETWEEN ((-1143011812)) AND ((0xc58bf2f))), (('-1706492731') NOT BETWEEN ('dOW Yl') AND (NULL)), ((NULL) IS TRUE))) AND ((CASE WHEN x'' THEN 0.3827780609053685 ELSE x'' END, (('-1082387508')!=(x'')), ((((x'')OR(x'')))AND(x'')))))); -- 0ms;
SELECT DISTINCT UNICODE(((rt0.c4)>>(rt0.c3))) FROM rt0 ORDER BY ((' i&xd1J䡐') IS FALSE) ASC, MAX(CAST(rt0.c1 AS REAL), CASE WHEN rt0.c2 THEN -328792025 ELSE 'Uc' END); -- 0ms;
SELECT NULLIF(DISTINCT ((rt0.c2)+(rt0.c0)), (rt0.c0 IN (rt0.c3))), (((rt0.c1 IN ()))IS NOT(COUNT(*))), ((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2))) ISNULL) FROM rt0 WHERE (CAST(((1157951484) NOT NULL) AS BLOB)); -- 0ms;
SELECT DISTINCT TYPEOF((rt0.c1 IN (rt0.c4))) FROM rt0 WHERE (((INSTR('-78579684', '0.12132447566864413')) ISNULL)) ORDER BY ((x'')/(rt0.c0)) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT ((((((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)))AND(x'bb79')))OR(((NULL) BETWEEN (rt0.c4) AND (rt0.c3)))))OR((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((x''))))))AND(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)))) FROM rt0 WHERE ((((NULL)||(x'')) IN ())) ORDER BY NULL ASC; -- 0ms;
SELECT DISTINCT COUNT((rt0.c4 IN ())) FROM rt0 ORDER BY SQLITE_VERSION()  NULLS FIRST; -- 0ms;
SELECT ALL rt0.c1 COLLATE RTRIM FROM rt0 WHERE ((((('0.3622796343780058')OR(x'')))AND(CASE x'ff6a'  WHEN '-1643160835' THEN 0.20554941564619045 END))); -- 0ms;
SELECT DISTINCT rt0.c4, ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)IS NOT(COALESCE(NULL, rt0.c4, rt0.c0, rt0.c2))), LIKELIHOOD(((rt0.c3)=(rt0.c3)), 0.11220658716571041) FROM rt0 WHERE (COALESCE((('1829185208')IS('')), COALESCE(0.9875095780821912, NULL))); -- 0ms;
SELECT ALL CAST(rt0.c1 AS BLOB) COLLATE BINARY, PERCENT_RANK() OVER ( RANGE ((((((((rt0.c0)OR((+ (rt0.c3)))))AND(PRINTF(rt0.c2))))AND(rt0.c0)))AND(((rt0.c4)|(rt0.c2)))) PRECEDING), CASE WHEN rt0.c3 THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE (~ (rt0.c4)) END, ((((((((rt0.c0 COLLATE BINARY)AND(((rt0.c0) IS FALSE))))AND(((rt0.c0) BETWEEN ('1483868853') AND (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))))AND((~ (rt0.c1)))), ((((rt0.c1)+(rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c3) IS TRUE))) FROM rt0 ORDER BY (~ (((rt0.c1)<=(rt0.c4)))) ASC, CASE WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN ((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)) END  NULLS FIRST;SELECT DISTINCT HEX(DISTINCT GROUP_CONCAT(rt0.c1)) FROM rt0 WHERE ((- ((+ (''))))) LIMIT 20242174 OFFSET -1131918659; -- 0ms;
SELECT DISTINCT (((rt0.c1)>(rt0.c1)) IN ()) FROM rt0; -- 0ms;
SELECT 0.026771658672867016 FROM rt0; -- 0ms;
SELECT DISTINCT LAG((((rt0.c4 IN ()))>=((NOT (rt0.c4)))), CASE (~ (rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN 0.2310461538240044 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN '-407155417' WHEN ((rt0.c1)%(rt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 END WHEN (- (rt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN NULL THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END WHEN CASE rt0.c0  WHEN rt0.c3 THEN 0.6666272989982432 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END THEN (0.17582651944655392 IN (rt0.c3)) ELSE ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)) END, (((NOT (rt0.c4)))>=(((rt0.c1)==(rt0.c3))))) OVER () FROM rt0 WHERE (load_extension(((x'')AND(0xffffffffd771bb19))));SELECT CASE WHEN '-935426557' THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)) ELSE (rt0.c2 IN ()) END FROM rt0 WHERE (CAST(CAST(NULL AS BLOB) AS TEXT)); -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c3 AS BLOB) COLLATE NOCASE) OVER () FROM rt0 WHERE ((~ ('4144533')) COLLATE NOCASE); -- 1ms;
SELECT ((AVG('-1772871033')) NOT NULL) FROM rt0 WHERE ((((0.2422612048037528 IN (1106654531)))-(((1290629489) IS TRUE)))); -- 0ms;
SELECT 0.6524600434535147, CASE (('2085529722')<=(rt0.c0))  WHEN rt0.c4 THEN INSTR(rt0.c0, NULL) WHEN rt0.c2 THEN ((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c4)<(rt0.c2)) ELSE ((rt0.c1)>=(rt0.c1)) END, x'' FROM rt0 WHERE (UNLIKELY(DISTINCT CAST('nv%u''9jw' AS REAL))); -- 0ms;
SELECT rt0.c0 FROM rt0 WHERE (((((0.07186679327115364, x'cf21191a', '-1571596164'))!=(('', x'', x''))) IN ((+ (0x2603025d))))); -- 0ms;
SELECT rt0.c2, ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))|(json_insert(rt0.c4, rt0.c4, rt0.c1))), (- ((((rt0.c3, 0.49383397342008073, rt0.c2)) NOT BETWEEN (('0D&e3t붇\n', rt0.c2, rt0.c0)) AND ((rt0.c4, rt0.c0, rt0.c1))))) FROM rt0 WHERE (((CASE 0Xffffffffb5bc9cd2  WHEN NULL THEN '-2066048778' END) NOT BETWEEN ((0.9965165911898639 IN ())) AND (((x'')&('-85450382'))))); -- 0ms;
SELECT DISTINCT NULL, (((((rt0.c4 IN ()))AND(CAST(rt0.c0 AS REAL))))OR(((rt0.c1) NOT NULL))), ((rt0.c1) BETWEEN (CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) AND (((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)))) FROM rt0 WHERE ((((x'')!=('2020706778')) IN ())); -- 0ms;
SELECT DISTINCT CASE LOWER(rt0.c3)  WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN 452504979 WHEN rt0.c0 THEN rt0.c3 END WHEN rt0.c1 THEN (rt0.c0 IN (rt0.c1, rt0.c0)) WHEN (((rt0.c0, rt0.c2, rt0.c2))<((rt0.c3, rt0.c2, rt0.c1))) THEN ((rt0.c2)>(rt0.c1)) ELSE (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) END FROM rt0 NOT INDEXED WHERE (1157951484); -- 0ms;
SELECT DISTINCT ((1849935469)=(HEX(DISTINCT rt0.c2))) FROM rt0 LIMIT 823822076 OFFSET -297495372; -- 0ms;
SELECT ALL x'', x'', TOTAL(((rt0.c4) IS FALSE)) FROM rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c4)=(rt0.c3)))OR(TOTAL(rt0.c4))))OR(CAST(rt0.c2 AS BLOB))))AND(rt0.c1)))OR(((('-2011759894'))!=((rt0.c3))))) FROM rt0 WHERE ((((0Xffffffffb809745e)GLOB('a\rG')) IN (CAST(NULL AS INTEGER), NULL))); -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS REAL), COUNT(*), MIN(((rt0.c2)IS NOT(rt0.c2))) FROM rt0 WHERE ((((0.8059095870600305)) NOT BETWEEN (((- (x'')))) AND ((0.4784120649086733)))); -- 1ms;
SELECT CAST((rt0.c4 IN ()) AS TEXT) FROM rt0 LIMIT -85450382; -- 0ms;
SELECT DISTINCT ((CHANGES()) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 END) AND (MAX(rt0.c2))) FROM rt0; -- 0ms;
SELECT (((rt0.c0) NOT BETWEEN (rt0.c2) AND ('U')) IN (CAST(rt0.c1 AS TEXT), ((rt0.c4)>=(rt0.c0)))) FROM rt0 WHERE (CASE (~ ('-1000185355'))  WHEN (('?)') NOT BETWEEN (0.29910490700490744) AND ('wGTwI??V')) THEN ('aੂt6r *' IN ()) END); -- 0ms;
SELECT CAST(((rt0.c4) IS FALSE) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT ((x'') NOT BETWEEN (((rt0.c3)||(rt0.c0))) AND (((rt0.c2)<<(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c4))<((0.7172864894730783))), ((rt0.c0) IS FALSE), ((rt0.c0) IS TRUE)))!=((TOTAL(rt0.c3), ((((rt0.c3)AND(rt0.c3)))OR(rt0.c4)), AVG(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c0) AND ('')) COLLATE RTRIM, ((LIKELY(rt0.c2))/(TIME(rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c4))), COUNT(*) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c3)) BETWEEN ((((rt0.c3)LIKE(x'')))) AND (((((rt0.c4))<((rt0.c0)))))) FROM rt0 WHERE (INSTR((('1890501836') BETWEEN ('-1151743275') AND (0.16621632186075985)), ('39䨥Q' IN ()))); -- 0ms;
SELECT x'509e' FROM rt0; -- 0ms;
SELECT TOTAL_CHANGES() FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2))<>((rt0.c3))))/(CASE WHEN '-157504474' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN '1954810635' WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) FROM rt0 WHERE (((((('20242174')) BETWEEN (('542526687')) AND ((-1110477458))))<=(COALESCE(DISTINCT x'2f3e', '*N<a)8+8', 'qH', '1938323556')))); -- 0ms;
SELECT DISTINCT ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY, CUME_DIST() OVER (), LENGTH(((rt0.c1)IS NOT(rt0.c2))) FROM rt0; -- 0ms;
SELECT ALL 0Xffffffffaf5ef83b FROM rt0 WHERE ((((('|kz|A8&fi')OR('-15638147'))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (rt0.c2) AND (((rt0.c0)>=(rt0.c0)))), (~ (((rt0.c3) IS TRUE))), CASE WHEN UNLIKELY(rt0.c3) THEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)) END FROM rt0 WHERE ((((((((((('')OR(NULL)))OR(1.290629489E9)))OR(NULL)))AND(0.1069914964214842)))||(CAST('1290629489' AS REAL)))); -- 0ms;
SELECT ALL ((((0Xffffffffe619457b)<(rt0.c3))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c2)>>(rt0.c2)) THEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END WHEN rt0.c0 THEN ((rt0.c2)==(rt0.c1)) WHEN COUNT(rt0.c0) THEN ((rt0.c0) ISNULL) ELSE UNLIKELY(DISTINCT rt0.c2) END FROM rt0 WHERE (x'c587') LIMIT 625622373 OFFSET -35477672; -- 0ms;
SELECT ALL ((rt0.c3) BETWEEN ((((rt0.c0)) BETWEEN ((0Xffffffffe71b74a0)) AND ((rt0.c1)))) AND (TRIM(x'2ec9'))) FROM rt0 WHERE (load_extension((('墡gT	') NOT NULL), (+ (NULL))));SELECT DISTINCT (rt0.c0 IN (((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)), (rt0.c0 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE((((rt0.c2) NOT NULL) IN ()), ((rt0.c3)IS NOT(CAST(NULL AS NUMERIC)))) OVER ( PARTITION BY CAST((+ (NULL)) AS TEXT), CASE x''  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END THEN ROUND(rt0.c2, rt0.c1) ELSE HEX(rt0.c0) END), (((rt0.c1 IN ())) IS FALSE), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM FROM rt0 GROUP BY ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(((rt0.c0)=(rt0.c0)))))OR(CASE WHEN x'4c57' THEN rt0.c0 ELSE rt0.c4 END)); -- 13ms;
SELECT DISTINCT INSTR(rt0.c1, rt0.c1) COLLATE RTRIM FROM rt0 WHERE (((((NULL)AND(x''))) NOT BETWEEN (('-537773320' IN ('0.9746199419820158'))) AND ((('911983037')<(0.0))))); -- 0ms;
SELECT DISTINCT CASE '1511903536'  WHEN HEX(x'') THEN (((rt0.c2))==((rt0.c3))) END, CASE WHEN (rt0.c2 IN ()) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c3) ISNULL) THEN LIKELY(rt0.c2) WHEN ((rt0.c4) NOTNULL) THEN ((rt0.c1) IS FALSE) ELSE rt0.c4 COLLATE BINARY END, (((((rt0.c3)>(rt0.c0)), AVG(rt0.c0), (rt0.c0 IN (''))))==(((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), UPPER(rt0.c0), load_extension(-1412712448, rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (rt0.c4)) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c3 END WHEN (NOT (rt0.c3)) THEN SUM(rt0.c4) ELSE rt0.c4 END, CAST(0xffffffffef4ae7c9 AS BLOB), ((((NULL, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c4, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c1))) IN ((rt0.c1 IN ()), ((rt0.c2) NOTNULL))) FROM rt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c0) BETWEEN (rt0.c1) AND ('%m')))), ((x'') IS TRUE), 1829185208 FROM rt0 ORDER BY (((rt0.c2))>=((STRFTIME(rt0.c0, rt0.c0, 0.8737093667334428)))) ASC; -- 4ms;
SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(NULLIF(DISTINCT rt0.c2, rt0.c3))))OR((rt0.c2 IN ()))) FROM rt0 WHERE (CASE WHEN ((((x'812d')AND(NULL)))AND(0.5065683433231908)) THEN (((x'')) BETWEEN ((x'')) AND (('b<()'))) END); -- 0ms;
SELECT DISTINCT TOTAL(rt0.c3) FILTER(WHERE ((((x'62ea') BETWEEN (rt0.c1) AND (0.9861835072137426))) BETWEEN ((rt0.c3 IN ())) AND (((((rt0.c3)AND(rt0.c3)))AND(''))))) OVER (), UNLIKELY((~ (rt0.c4))), CASE WHEN rt0.c1 THEN 'u' END FROM rt0; -- 0ms;
SELECT DISTINCT '<[*8蕊Gm', ((- (rt0.c0)) IN ()), TOTAL((- (rt0.c4))) FILTER(WHERE CHAR(((rt0.c1) IS TRUE))) OVER ( ORDER BY ((((((((CAST(rt0.c4 AS TEXT))OR((((rt0.c1, rt0.c2, rt0.c3))<=((rt0.c0, rt0.c3, rt0.c4))))))AND(rt0.c0 COLLATE RTRIM)))AND(CASE WHEN rt0.c0 THEN rt0.c4 END)))OR(LIKE(rt0.c2, rt0.c4, '0')))) FROM rt0 WHERE ((CAST(0xffffffffb3eb80fd AS TEXT) IN ())); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c2 AS INTEGER) AS TEXT), CAST(NULL AS BLOB), LAG(((CAST(rt0.c0 AS REAL)) NOTNULL), ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((rt0.c2) ISNULL)) AND (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' ELSE rt0.c4 END)), 0.9206606037259609) OVER (), NULL COLLATE NOCASE, TOTAL((~ (rt0.c3))) OVER () FROM rt0 WHERE (((((0.6261113934804708) IS FALSE))GLOB(((('៻^')) BETWEEN ((x'cb7d')) AND (('4~')))))); -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))), (((rt0.c1)) BETWEEN ((((rt0.c1)<(rt0.c3)))) AND (((NOT (rt0.c0))))), SUM(-2098565865) OVER () FROM rt0; -- 0ms;
SELECT ((rt0.c3 COLLATE NOCASE) IS TRUE) FROM rt0; -- 0ms;
SELECT ((CASE WHEN rt0.c4 THEN rt0.c4 END) NOT BETWEEN (TYPEOF(rt0.c4)) AND ((rt0.c4 IN ()))), ('-1256940606' IN (rt0.c2, rt0.c2)) COLLATE RTRIM, 'a\rG' FROM rt0 WHERE ((((((x'', 0.18792408333402633, -1893775235)) BETWEEN ((x'', x'', '\PL&j_A5M')) AND ((NULL, 0.9981167436981252, x'45d7deea'))))<((('-35477672')>(2139045465))))); -- 0ms;
SELECT (rt0.c3 IN ()) FROM rt0 GROUP BY ((((('-162283857', x'73e49ab3', rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c0, NULL)) AND ((rt0.c2, rt0.c3, rt0.c0)))) ISNULL); -- 0ms;
SELECT DISTINCT CAST((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((0Xffffffff84325a80))) AS REAL) FROM rt0; -- 0ms;
SELECT ((NULLIF(DISTINCT rt0.c4, rt0.c2))<<((rt0.c2 IN (-129153035)))), rt0.c4, (DATE(rt0.c0, rt0.c4, rt0.c3) IN (CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM rt0 WHERE (((SQLITE_SOURCE_ID())<(((0x5d6bd7db) BETWEEN (x'') AND (x'448ecaa2'))))); -- 0ms;
SELECT ALL rtreenode(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)), NULLIF(DISTINCT rt0.c3, rt0.c4)) FROM rt0 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((('”ywM')OR((rt0.c4 IN ()))))OR(MAX(rt0.c4))) FROM rt0 WHERE (HEX((NULL IN ()))); -- 0ms;
SELECT DISTINCT (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END))>=((TOTAL(rt0.c2)))), (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOT BETWEEN (((rt0.c4)||(rt0.c0))) AND (((rt0.c0) NOT NULL))), rt0.c1 FROM rt0 ORDER BY IFNULL(IFNULL(DISTINCT rt0.c3, rt0.c0), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) DESC, ('1952807584' IN ((rt0.c4 IN ()))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c0)<(rt0.c2))) AND ((rt0.c3 IN ()))), ((CASE WHEN rt0.c4 THEN 0.9599165599535653 END)IS(RTRIM(rt0.c3))), ((x'') ISNULL) FROM rt0; -- 0ms;
SELECT SUM(((rt0.c3)*(rt0.c1))) OVER () FROM rt0 WHERE ('' COLLATE RTRIM COLLATE BINARY COLLATE BINARY) UNION ALL SELECT DISTINCT ((((rt0.c1)!=(rt0.c0))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (0.7993860318421554))) AND (CAST(rt0.c1 AS TEXT))) FROM rt0 WHERE (QUOTE((('-2142245814')>>(NULL)))); -- 0ms;
SELECT ALL (((NOT (rt0.c4))) NOT BETWEEN (((rt0.c1) BETWEEN (0.37433347530135386) AND (rt0.c1))) AND (((rt0.c4) NOT NULL))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0) IS TRUE) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), ((rt0.c4)==(rt0.c3)), x''))==(((rt0.c4 IN (rt0.c2)), rt0.c4, GROUP_CONCAT(rt0.c0)))) FROM rt0 WHERE (((((1690636910)>('')))/((((NULL)) BETWEEN ((NULL)) AND (('-915706884')))))); -- 0ms;
SELECT ALL CASE (((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))  WHEN CAST(rt0.c3 AS INTEGER) THEN TRIM(DISTINCT rt0.c3) END FROM rt0 WHERE (TRIM(DISTINCT '-611738947')) ORDER BY highlight((rt0.c4 IN ()), ((rt0.c2)IS(rt0.c0)), ((rt0.c0) IS FALSE), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) ASC;SELECT ALL LTRIM(((((rt0.c3)AND(rt0.c3)))OR(rt0.c1))) FROM rt0 ORDER BY ((((((1483868853)AND('1025289390')))AND(rt0.c1))) IS TRUE) ASC, ((((((((((rt0.c4) NOTNULL))AND((((rt0.c0))>((rt0.c0))))))OR(((rt0.c3)>=(rt0.c4)))))OR(((rt0.c0)GLOB(rt0.c3)))))OR(((rt0.c1)>>(rt0.c2)))) DESC  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) NOTNULL) DESC; -- 0ms;
SELECT ALL (((((((((rt0.c2 IN ()))AND(CAST(rt0.c4 AS INTEGER))))AND(rt0.c1)))AND(ABS(DISTINCT rt0.c4))))AND(rt0.c2 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT (NOT ((('Z*B,')<(rt0.c2)))) FROM rt0 LIMIT 67760723; -- 0ms;
SELECT DISTINCT TOTAL((('-1340993330') BETWEEN (rt0.c2) AND (-1760688801))) OVER () FROM rt0; -- 0ms;
SELECT ALL SQLITE_SOURCE_ID() COLLATE BINARY, LIKELY(DISTINCT ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))AND(x'ac98')))AND(rt0.c4))), ((rt0.c2)IS(rt0.c3)) FROM rt0 WHERE (CASE ((x'')>(NULL))  WHEN 'G8' THEN x'' COLLATE RTRIM WHEN ((x'6664')LIKE('-545628076')) THEN ((0.908825138190938) BETWEEN ('1160824322') AND ('-1146975894')) WHEN (+ ('-648291640')) THEN CASE WHEN 0.8833388324978676 THEN NULL WHEN '842007495' THEN -853384708 WHEN 0.4316797766838525 THEN 0.8010415121611867 ELSE 0.032669820288243945 END ELSE ('*' IN ()) END); -- 0ms;
SELECT DISTINCT ((((rt0.c1 IN (rt0.c0, rt0.c0)), ((rt0.c1) ISNULL), (rt0.c3 IN (rt0.c3))))==((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)), (rt0.c3 IN ()), rt0.c2 COLLATE RTRIM))) FROM rt0 WHERE (TYPEOF(DISTINCT ((x'') BETWEEN (0.6115230439574968) AND (x'')))); -- 0ms;
SELECT DISTINCT ((((((rt0.c3)<>(rt0.c0)))AND(MIN(rt0.c0))))OR(rt0.c1 COLLATE NOCASE)) FROM rt0 WHERE (((UNICODE('-1279367378')) IS FALSE)); -- 0ms;
SELECT ((((rt0.c4)AND(rt0.c3)))AND(rt0.c3)) COLLATE BINARY FROM rt0 WHERE (((NULL) NOT BETWEEN ((- (NULL))) AND (((((((((NULL)OR(0.23839059264968732)))OR('1352855293')))AND(0.9888326216455806)))OR(NULL))))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c4)&(rt0.c0))))), ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL), ((((UNLIKELY(rt0.c0))AND(((((((((0.7469372880132071)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))))AND(((rt0.c4) IS FALSE))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3 COLLATE RTRIM)OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))))OR(UNLIKELY(rt0.c3))), ABS((rt0.c4 IN ())), ((CAST(rt0.c0 AS BLOB))IS NOT(((rt0.c0)>(rt0.c2)))) FROM rt0 WHERE ((CASE ''  WHEN 0.6957412166690858 THEN '' WHEN 0.4638924100806868 THEN '&x' WHEN -9.56285431E8 THEN '' ELSE NULL END IN ())) ORDER BY ((((x'') BETWEEN (rt0.c3) AND (rt0.c4)))>=((0.021057218749538142 IN (rt0.c2))))  NULLS LAST, (((((((((((rt0.c2, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c4, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c4))))OR((rt0.c2 IN (rt0.c2)))))OR((rt0.c3 IN ()))))AND(((rt0.c3) NOTNULL))))OR((((0X11c7418c, rt0.c1, NULL)) BETWEEN ((rt0.c0, rt0.c2, rt0.c4)) AND ((x'a529', rt0.c4, rt0.c4))))) DESC, (NOT ('7dVx1')) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((SQLITE_SOURCE_ID())AND(((rt0.c3)+(rt0.c3)))))OR(0.049000192684510724)))OR(((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))))AND(((rt0.c1)AND(NULL)))), LAG(((('-2011067174')/(rt0.c0)) IN (0.5915329217538701)), (rt0.c4 IN ()) COLLATE BINARY, (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))<((- (rt0.c4))))) OVER (), ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) NOT BETWEEN (COUNT(*)) AND (((rt0.c0)<(rt0.c1)))) FROM rt0; -- 0ms;
SELECT MIN(COUNT(rt0.c3), COUNT(*)) FROM rt0; -- 0ms;
SELECT ALL SUM((0.3743486330358198 IN ())) FROM rt0 NOT INDEXED LIMIT 1409360231; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((SUM(0.6460701136526457)))), 0xffffffffe71b74a0, AVG(0.6258096530929176 COLLATE NOCASE) FROM rt0 WHERE (json_extract(((((x'')OR('01')))OR(0.35271506022114374)), (NOT (0.5388906217461027)), ((x'')<>('')), CAST(0.6782609040109497 AS TEXT), (('-817174927') ISNULL), CASE x''  WHEN NULL THEN -1888261234 END));SELECT ALL (((- (rt0.c0))) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT highlight(((rt0.c0) IS FALSE), ((rt0.c3)%(rt0.c3)), rt0.c0, COUNT(rt0.c3)), CUME_DIST() OVER ( RANGE (((rt0.c0)) NOT BETWEEN ((((rt0.c0)>(rt0.c0)))) AND (((~ (rt0.c4))))) PRECEDING EXCLUDE NO OTHERS), ((((rt0.c3 COLLATE NOCASE)OR(rt0.c3 COLLATE RTRIM)))AND((rt0.c2 IN (rt0.c2)))) FROM rt0 WHERE (IFNULL(0.8581526892547113 COLLATE NOCASE, json('0.8355685275191927')));SELECT DISTINCT QUOTE(CAST(rt0.c1 AS REAL)) FROM rt0 NOT INDEXED WHERE (((('683115588')AND('”ywM')) IN ())) ORDER BY CAST(rt0.c4 COLLATE BINARY AS NUMERIC), SQLITE_SOURCE_ID()  NULLS FIRST, ((rt0.c1) ISNULL) COLLATE BINARY  NULLS FIRST; -- 1ms;
SELECT DISTINCT SUM(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))) OVER (), (((rt0.c4)) BETWEEN ((((rt0.c4)+(rt0.c1)))) AND (((((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c1, rt0.c1, rt0.c0)))))), (~ (MAX(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (- (rt0.c1)) THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c4)IS NOT(x'')) END FROM rt0; -- 0ms;
SELECT ALL x'', ((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)))OR((+ (rt0.c0)))))OR(x'')), ((rt0.c4)IS(((rt0.c2) IS TRUE))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4)AND(rt0.c3)))AND(rt0.c3)) FROM rt0 WHERE (((((0.640147380952253) IS TRUE))-(0.2578978934966847))) GROUP BY ((((rt0.c0) BETWEEN (NULL) AND (rt0.c3)))>=(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END)) HAVING ((0.003857269306700384)AND(CAST(rt0.c1 AS NUMERIC))); -- 0ms;
SELECT ALL rt0.c3 FROM rt0 ORDER BY (((rt0.c0) NOT BETWEEN ('-1001276866') AND (rt0.c3)) IN (CAST(rt0.c4 AS NUMERIC))) ASC  NULLS FIRST; -- 1ms;
SELECT ALL ((CASE rt0.c1  WHEN '(^oP)!FM/' THEN rt0.c4 END)-(x'')) FROM rt0 ORDER BY (((rt0.c1) IS TRUE) IN ())  NULLS LAST; -- 0ms;
SELECT ALL HEX(DISTINCT ((rt0.c3)>>(rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST((+ (rt0.c2)) AS BLOB) FROM rt0; -- 0ms;
SELECT ALL CAST(((rt0.c2) ISNULL) AS REAL) FROM rt0 WHERE (LIKELIHOOD((+ (x'')), 0.13732725368673027)) LIMIT -1209696258; -- 0ms;
SELECT DISTINCT (((rt0.c1))<>((CAST(rt0.c1 AS REAL)))) FROM rt0 GROUP BY 0Xffffffff902a97d6; -- 0ms;
SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c2)<<(rt0.c1))) AND ((rt0.c1 IN ()))) FROM rt0; -- 0ms;
SELECT (+ ((- (rt0.c4)))) FROM rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END) IS TRUE) DESC; -- 1ms;
SELECT (CAST(rt0.c4 AS TEXT) IN ()) FROM rt0 WHERE (((((CAST(0.16010303159392836 AS INTEGER))AND(((x'')>(x'')))))AND(('-1288536812' IN ())))) ORDER BY 0x3b1400a0;SELECT DISTINCT MIN(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE) FROM rt0 WHERE (0.3295106033017847); -- 4ms;
SELECT DISTINCT PERCENT_RANK() OVER ( GROUPS BETWEEN (((NOT (rt0.c1))) NOTNULL) FOLLOWING AND CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS REAL) FOLLOWING EXCLUDE GROUP) FROM rt0 WHERE (CAST(((0.10605500341907592) NOT NULL) AS REAL)) LIMIT 753813930 OFFSET -2135713947; -- 0ms;
SELECT ALL NULL FROM rt0; -- 0ms;
SELECT ALL (((('#+>+!M')%(rt0.c1))) BETWEEN (COUNT(*)) AND ((NOT (rt0.c4)))), ((CHAR(rt0.c4)) NOT BETWEEN ('') AND (CAST(rt0.c3 AS TEXT))), ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN ((x'' IN (rt0.c0, rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))), ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))*(((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))), rt0.c3 FROM rt0 WHERE ((NOT ('0.06100228172127087' COLLATE NOCASE))) GROUP BY CASE WHEN rt0.c2 THEN (rt0.c4 IN ()) WHEN ((rt0.c2)IS(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3)) WHEN rt0.c4 THEN ((rt0.c0) IS FALSE) END; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN rt0.c0 END, (((rt0.c3) NOT NULL) IN ()), NTILE((- (rt0.c1 COLLATE BINARY))) OVER () FROM rt0 WHERE (TYPEOF((('-1839190810') BETWEEN (113946022) AND (0xffffffffee7821a9)))); -- 1ms;
SELECT DISTINCT ((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))/(('1248591840' IN ()))), ((((~ (rt0.c0))))==((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))), (((((rt0.c2))=((rt0.c4))))/(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0 NOT INDEXED; -- 0ms;
SELECT ((rt0.c1) ISNULL) COLLATE BINARY FROM rt0 ORDER BY rt0.c2, ((((rt0.c1)==(rt0.c2))) BETWEEN (x'') AND (TRIM(rt0.c0))), (-2.112186426E9 COLLATE NOCASE IN (((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2))))  NULLS FIRST; -- 0ms;
SELECT ALL highlight(((rt0.c4) ISNULL), ((rt0.c4)>>(rt0.c3)), (rt0.c4 IN ()), CAST('-271829171' AS REAL)) FROM rt0 WHERE (x''); -- 0ms;
SELECT ((TOTAL(rt0.c3))IS(((rt0.c1) NOTNULL))) FROM rt0 WHERE (CASE WHEN 0x39a43ae6 THEN CAST(NULL AS REAL) ELSE 'Q9|휿IUD!3' END); -- 0ms;
SELECT DISTINCT ((rt0.c2)>=(rt0.c0)) COLLATE RTRIM FROM rt0 WHERE (CASE LIKE(x'', x'', 'c')  WHEN '683115588' THEN (('mVX\\~V5/') BETWEEN (0.3881707218821111) AND (x'')) WHEN x'' THEN (x'' IN ()) WHEN CASE ''  WHEN '*' THEN x'' ELSE 0.7661857402996969 END THEN CAST(NULL AS TEXT) ELSE ((((x'')OR(0x454eac84)))OR(-3.32297584E8)) END); -- 0ms;
SELECT MAX((((rt0.c0))=((x'')))) FROM rt0; -- 0ms;
SELECT DISTINCT ((0.22729446869700232) BETWEEN ((((rt0.c4, rt0.c0, rt0.c3))<((rt0.c2, rt0.c0, rt0.c4)))) AND (CASE WHEN NULL THEN NULL ELSE rt0.c2 END)), UPPER((NOT (rt0.c1))), COUNT((rt0.c2 IN ())) OVER () FROM rt0 WHERE (((json_object('', NULL, x'', NULL))*((NOT (NULL))))) LIMIT 1895624802 OFFSET -2030783457;SELECT DISTINCT CAST((((rt0.c3, rt0.c2, rt0.c4)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0))) AS NUMERIC) FROM rt0 WHERE ((((('-itꂝ&}o')LIKE('1245972158'))) BETWEEN ((NOT (0.870670469092304))) AND (TYPEOF(DISTINCT ' 45G')))); -- 0ms;
SELECT DISTINCT rt0.c1, (((((rt0.c4 IN (rt0.c0)))OR((NOT (rt0.c3)))))AND((rt0.c4 IN ()))), (((~ (rt0.c1))) NOT BETWEEN (((rt0.c4)<<(rt0.c2))) AND ((('-15638147') ISNULL))) FROM rt0 GROUP BY (- (CAST(rt0.c1 AS NUMERIC))), CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END COLLATE RTRIM, json_type(((((rt0.c3)OR(rt0.c3)))AND(rt0.c1))) HAVING CAST(((rt0.c2)/(rt0.c3)) AS INTEGER); -- 1ms;
SELECT -1961502314, (~ ((((('429448791')OR(rt0.c3)))AND(rt0.c3)))), (((rt0.c2)) NOT BETWEEN ((json_extract(rt0.c3, rt0.c0, rt0.c3, rt0.c4))) AND ((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))), (((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) IN (((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))), ((CAST('730782100' AS BLOB)) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c4) IS TRUE))) FROM rt0 LIMIT 2125660028;SELECT ALL TOTAL(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) FROM rt0 WHERE (((((0.9018155767694531) IS TRUE)) IS TRUE)) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE BINARY, (+ (rt0.c0)) COLLATE BINARY ASC  NULLS LAST; -- 0ms;
SELECT FIRST_VALUE((((rt0.c1)<<(0.7170035618919696)) IN ())) OVER () FROM rt0 WHERE (DATETIME(CASE WHEN '1770726080' THEN '1726207416' ELSE '0.9715930333773748' END, 0.6754916372029515 COLLATE RTRIM, TRIM(0.31881651851799, 0X3f969cb3))) GROUP BY x'4037' COLLATE NOCASE COLLATE BINARY HAVING (rt0.c1 IN ()); -- 0ms;
SELECT DISTINCT ((rt0.c3)<=((rt0.c3 IN ()))) FROM rt0 WHERE (((((0.4604396930111532) BETWEEN (0.5820078803367048) AND (0.10923581736525834)))/(((('-554750683'))>=((NULL)))))); -- 0ms;
SELECT TOTAL(((rt0.c1)IS(rt0.c4))) FROM rt0; -- 1ms;
SELECT ALL (((rt0.c3)) BETWEEN ((load_extension(rt0.c0, rt0.c0))) AND ((CAST(rt0.c4 AS REAL)))), (HEX(DISTINCT rt0.c4) IN ()), ((CAST(rt0.c4 AS BLOB))||(IFNULL(rt0.c0, rt0.c2))) FROM rt0;SELECT DISTINCT AVG(rt0.c3) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)-(rt0.c0)) AS NUMERIC) FROM rt0 WHERE (((0.3104034793406224 COLLATE RTRIM) NOT BETWEEN (((302582158) NOT BETWEEN (NULL) AND (0X50a2eefd))) AND (NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c3, rt0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN '' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 ELSE 'Q' END, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (~ (rt0.c3)))) AND ((((rt0.c1)+(rt0.c4)), COUNT(*), (+ (rt0.c2))))), (((0.6115230439574968 IN ()))=(TOTAL(rt0.c1))), json_remove(((rt0.c0)-(rt0.c0)), ((((rt0.c0)OR(rt0.c4)))AND(rt0.c3))) FROM rt0;SELECT ALL rt0.c4, (((- ('-1370011951')))AND(NULL)), ((('[]') NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN ()) FROM rt0 WHERE (((((CASE WHEN NULL THEN NULL END)OR(((0X5714d1f8)||(x'15481e74')))))AND(CAST('1829185208' AS REAL)))) GROUP BY 0xfffffffff99c876c HAVING ''; -- 0ms;
SELECT DISTINCT (((((((((rt0.c0 IN ()))OR(CAST(x'' AS NUMERIC))))OR(LIKELY(rt0.c3))))AND(rt0.c2 COLLATE BINARY)))AND(CAST(rt0.c4 AS REAL))), ((UPPER(DISTINCT rt0.c2)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) AND ((- (rt0.c4)))), '-1706492731' FROM rt0; -- 0ms;
SELECT CASE WHEN 0.43679885230903526 THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) ELSE COUNT(*) END FROM rt0 WHERE ((((((x'6cd1')) BETWEEN ((NULL)) AND ((x'7f0a')))) NOT BETWEEN ('N#P2? {Aw') AND (((NULL)AND(x'd7e3'))))); -- 0ms;
SELECT DISTINCT (((rt0.c0)LIKE(rt0.c2)) IN ()) FROM rt0 WHERE ((((0.06100228172127087 IN ())) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((rt0.c0) IS TRUE))OR(CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)) FROM rt0 GROUP BY CASE ((rt0.c2) NOT NULL)  WHEN ((rt0.c4) ISNULL) THEN CASE WHEN rt0.c4 THEN rt0.c4 END ELSE rt0.c1 COLLATE RTRIM END ORDER BY (('0.18792408333402633')/(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) ASC LIMIT -41133273 OFFSET -85450382; -- 0ms;
SELECT ALL (((((rt0.c3) IS TRUE)))<((MAX(x'')))), ((((rt0.c3)IS NOT(rt0.c4))) BETWEEN ((rt0.c0 IN (rt0.c3, rt0.c0))) AND ((rt0.c0 IN ()))), LAG(rt0.c1, ((((NULL)%(rt0.c4)))!=(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))), CASE WHEN ((x'') NOTNULL) THEN ((rt0.c2) NOTNULL) END) OVER () FROM rt0; -- 0ms;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((CAST(NULL AS TEXT))AND((('-750863443')<<(NULL)))))OR((('207142703')<('-1916311669'))))); -- 0ms;
SELECT COUNT(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c3))) OVER (), LIKELY(DISTINCT rt0.c2), GROUP_CONCAT(LENGTH('Zt&A?')) FROM rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c2)AND(x'')))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))>>('*')) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))) AND ((((0x1af8ad93) NOT BETWEEN ('_7') AND (rt0.c0))))) FROM rt0 ORDER BY ((((((rt0.c4))<((rt0.c4)))))<(((((rt0.c0))!=((rt0.c2)))))); -- 1ms;
SELECT DISTINCT (+ (SQLITE_VERSION())) FROM rt0 ORDER BY CAST((rt0.c1 IN ()) AS TEXT)  NULLS FIRST LIMIT -1138995264 OFFSET 1747455218; -- 0ms;
SELECT DISTINCT ((rt0.c4)%(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) FROM rt0 GROUP BY (~ (rt0.c2)) HAVING CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL); -- 4ms;
SELECT ALL GROUP_CONCAT(((rt0.c1)>>(rt0.c0))) FROM rt0 WHERE (((((994058722) NOT BETWEEN (NULL) AND (x''))) NOT BETWEEN (CAST(1e500 AS TEXT)) AND (CASE x'e2f95017'  WHEN x'227e' THEN 'I1F9|/%' END))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)>(rt0.c0))) IS TRUE) FROM rt0 WHERE (LOWER(NULL)) GROUP BY ((((rt0.c1)%(rt0.c4))) ISNULL) ORDER BY ((CHAR(NULL))-(((rt0.c3)IS NOT(rt0.c0))))  NULLS LAST LIMIT -1563591788 OFFSET -2083268322; -- 0ms;
SELECT (((((rt0.c2)>=(rt0.c4))))<>((rt0.c1))) FROM rt0 WHERE ((+ (CASE WHEN x'' THEN NULL WHEN x'' THEN 0.13201669615233136 WHEN NULL THEN 0.632243871519909 END))) GROUP BY (rt0.c0 IN ()); -- 0ms;
SELECT ((((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)AND(((rt0.c2)+(rt0.c2)))))OR(SUM(rt0.c2))))OR(COUNT(rt0.c4))))AND(MIN(NULL))) FROM rt0 WHERE (((('45>AU5Tc' IN ())) BETWEEN ((x'ecea' IN ('303603670'))) AND (0.1387686123216747 COLLATE BINARY))) LIMIT 2000609304 OFFSET 1412173651; -- 0ms;
SELECT ALL SUM(((rt0.c4)||(rt0.c3))) FROM rt0 WHERE (((((396499050)%(NULL)))+((~ (NULL))))); -- 1ms;
SELECT DISTINCT x'', GROUP_CONCAT((+ (rt0.c1))) OVER (), (((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((((rt0.c1)OR(rt0.c4)))OR(rt0.c3))))) FROM rt0; -- 0ms;
SELECT (rt0.c4 COLLATE RTRIM IN ((rt0.c1 IN ()))) FROM rt0 WHERE (CASE CASE 0.06100228172127087  WHEN '0.7632684506056514' THEN '|E' WHEN '^ꧽ3' THEN 0.5643379814226313 WHEN 'ꄜ''\nW_韆' THEN NULL ELSE NULL END  WHEN (x'' IN (x'')) THEN IFNULL(DISTINCT '', '847214866') ELSE rtreenode('', NULL) END); -- 0ms;
SELECT (CAST(rt0.c2 AS NUMERIC) IN (((NULL)/(rt0.c3)), 0.5867617897038936)) FROM rt0; -- 0ms;
SELECT DISTINCT ((0.5344053274334705)*(rt0.c2 COLLATE BINARY)), (((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))IS NOT(((rt0.c2)|(rt0.c1)))), UNLIKELY(DISTINCT rt0.c0 COLLATE RTRIM) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) AS TEXT), rt0.c2, (rt0.c4 COLLATE BINARY IN ()) FROM rt0 WHERE ('1954810635'); -- 0ms;
SELECT DISTINCT 1.24859184E9, GROUP_CONCAT(((((rt0.c2)AND(rt0.c2)))AND(rt0.c4))), IFNULL(DISTINCT rt0.c0, rt0.c3) COLLATE RTRIM FROM rt0; -- 1ms;
SELECT DISTINCT (((rt0.c4 COLLATE NOCASE))<=((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) FROM rt0 WHERE (TRIM(DISTINCT ('0.1430330711442519' IN ()), x'' COLLATE NOCASE)) GROUP BY rt0.c3, LIKELY(rt0.c0), ((NULL)*(((rt0.c1) NOT NULL))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(COALESCE(DISTINCT rt0.c3, rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c0), 0.7938406436992551) FROM rt0 WHERE (((((((((CASE 'Mw\rY76'  WHEN 0.1784515057389825 THEN '' WHEN 0.8343565290666209 THEN 'hu<k' WHEN 'i' THEN x'' WHEN '0.7632684506056514' THEN '0.5820078803367048' WHEN NULL THEN NULL ELSE x'' END)AND((((((((('PyV5)')AND('䙵7v')))AND(0.7072439455337085)))AND('')))OR(7.59281634E8)))))AND(((x'')&(NULL)))))OR((('') BETWEEN ('') AND ('403664319')))))OR(((0.47544784661040396) NOT BETWEEN (NULL) AND (x'bebd'))))); -- 0ms;
SELECT ((((('C-ǘ⳦T'))>((rt0.c0))))IS(CAST(rt0.c4 AS TEXT))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((rt0.c2)>=((((rt0.c1, rt0.c2, 0.2855283476724674))<((rt0.c3, NULL, rt0.c1))))) FROM rt0 WHERE ((((~ (x'237f'))) BETWEEN (((NULL) IS TRUE)) AND ('状o얛QFgq6'))) GROUP BY rtreenode((((rt0.c1, rt0.c4, x'')) BETWEEN ((rt0.c2, rt0.c4, rt0.c2)) AND ((rt0.c3, rt0.c1, rt0.c4))), (((rt0.c3, rt0.c3, x''))=((rt0.c4, rt0.c0, rt0.c2)))); -- 0ms;
SELECT ALL ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4))) IS FALSE) FROM rt0 WHERE (((CHAR(0.5155750324497639, NULL, 1.637014897E9)) NOTNULL)); -- 0ms;
SELECT DISTINCT (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 END, (+ (rt0.c0)), CAST(rt0.c1 AS BLOB)))==((CAST(rt0.c2 AS INTEGER), x'', CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END))) FROM rt0 WHERE (((((0.5143186186123965) NOT BETWEEN (x'') AND (1572263446))) NOTNULL)); -- 3ms;
SELECT (((rt0.c3 IN (rt0.c4, rt0.c1)))&(UPPER(rt0.c4))) FROM rt0 WHERE ((((((0.3324022477639351)) BETWEEN ((x'a342')) AND ((NULL))))!=(NULL COLLATE NOCASE))) ORDER BY CASE WHEN -557561465 THEN CASE WHEN 'E' THEN rt0.c2 END WHEN ((rt0.c3)|(rt0.c2)) THEN ((NULL)>=(rt0.c4)) WHEN 0xffffffffe10a1989 THEN COALESCE(rt0.c3, rt0.c3) END DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT 0.31541656818904995 FROM rt0; -- 0ms;
SELECT DISTINCT AVG(((((NULL)AND('-1760688801')))OR(''))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY, CASE WHEN GROUP_CONCAT(rt0.c4) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('q'))) WHEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)) THEN (rt0.c3 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN highlight(rt0.c2, rt0.c0, rt0.c3, rt0.c0) ELSE ((rt0.c3) IS TRUE) END, CASE WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)) THEN (- (rt0.c4)) END, CAST((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((-1884368812))) AS TEXT) FROM rt0; -- 1ms;
SELECT DISTINCT json_object(rt0.c1, rt0.c0) COLLATE NOCASE, GROUP_CONCAT(((rt0.c3)<(rt0.c2))) OVER (), ((((((rt0.c0)OR(rt0.c4)))AND(rt0.c1)))||(((rt0.c4) NOTNULL))), CASE CAST(rt0.c1 AS NUMERIC)  WHEN (rt0.c4 IN ()) THEN ((rt0.c4)AND(rt0.c3)) WHEN (((rt0.c1))<=((rt0.c0))) THEN ((rt0.c1)<<(rt0.c2)) WHEN (((rt0.c3, rt0.c3, rt0.c3))<=((rt0.c3, rt0.c1, 0x33f4c966))) THEN (((NULL))<((rt0.c1))) END, (~ ((((rt0.c2))>((rt0.c3))))) FROM rt0;SELECT ALL ((((rt0.c3) ISNULL))-(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))), ((((((rt0.c0)GLOB(rt0.c1)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 END)))OR(UNLIKELY(DISTINCT rt0.c4))), ((rt0.c4 COLLATE RTRIM)IS NOT((((rt0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c2)) AND ((rt0.c4, rt0.c0, rt0.c2))))) FROM rt0 WHERE (((('s' IN ()))+(((x'') IS TRUE)))) ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))  WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN (rt0.c2 IN ()) WHEN (rt0.c2 IN (rt0.c2)) THEN (((rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c2, rt0.c4))) ELSE NULL END DESC, ((rt0.c4)LIKE(rt0.c0)) COLLATE BINARY DESC  NULLS LAST; -- 0ms;
SELECT ALL ((((NULL) NOT NULL))||(rt0.c3 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c4 AS NUMERIC) COLLATE NOCASE FROM rt0 WHERE (((((0.8670490530146242)IS(x''))) IS TRUE)); -- 0ms;
SELECT ALL (~ (((rt0.c1)%(rt0.c3)))) FROM rt0; -- 1ms;
SELECT DISTINCT ((MAX(rt0.c4)) NOT BETWEEN (TRIM(rt0.c1, rt0.c4)) AND (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c4 END)) FROM rt0 WHERE (CASE WHEN ((0.8427146858056757)-(NULL)) THEN ('5i' IN ()) END); -- 0ms;
SELECT DISTINCT ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))<(json_array_length(rt0.c0, rt0.c0))), (~ (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)), NULL FROM rt0;SELECT DISTINCT ((NULL)||(((x'') NOT BETWEEN (rt0.c0) AND (rt0.c4)))) FROM rt0 WHERE ((((((0.6950333340166733)OR('-1297147389')))AND(0.15315549479384316)) IN ())); -- 0ms;
SELECT DISTINCT json_quote(TRIM('1757952465')) FROM rt0; -- 0ms;
SELECT ((rt0.c4)/(rt0.c4)) COLLATE RTRIM COLLATE RTRIM, ((((((((CASE WHEN rt0.c4 THEN -2040388745 END)AND(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((((rt0.c0))>=((rt0.c2))))))OR((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))OR(rt0.c0)), ((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ((((rt0.c3))<((rt0.c2))))) FROM rt0 WHERE (((((((((((0xffffffff895183c0)<>(0Xfffffffff653beaf)))AND(((-1045391505)OR(0.22982659605244415)))))OR(0.05681998255294707)))OR((((''))>=((0.8070951231846439))))))AND(-2.144858691E9 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((rt0.c4)=('41169100')), CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER), DENSE_RANK() OVER ( ORDER BY (((rt0.c1, rt0.c1, rt0.c0)) BETWEEN (((NOT (rt0.c1)), rt0.c0, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((((rt0.c3)-(rt0.c3)), ((((rt0.c0)OR(rt0.c4)))OR(rt0.c3)), ((rt0.c0)==(rt0.c2)))))  NULLS FIRST) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE NOCASE) BETWEEN (rt0.c4) AND (LIKELIHOOD(rt0.c1, 0.22693640582777375))) FROM rt0; -- 1ms;
SELECT ALL ((((((((rt0.c2)OR(TIME(rt0.c3, rt0.c1, rt0.c0, rt0.c3, rt0.c2))))AND(((x'') NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(CAST(rt0.c4 AS BLOB))))AND(((rt0.c2)*(rt0.c1)))) FROM rt0 WHERE (CASE (0.3847319318926252 IN ())  WHEN CAST('' AS TEXT) THEN (('1499421541') NOTNULL) END); -- 0ms;
SELECT NTH_VALUE(((((rt0.c3)IS(rt0.c1))) NOT NULL), CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN 'c葄' ELSE (+ (rt0.c1)) END) OVER (), CASE WHEN UPPER(rt0.c1) THEN ((rt0.c1)>(rt0.c2)) WHEN ((rt0.c2)<>(rt0.c3)) THEN (rt0.c3 IN (rt0.c3)) WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END, rt0.c3, ABS(DISTINCT ((rt0.c1) ISNULL)), (((rt0.c0)) NOT BETWEEN ((0.9823775208910414)) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c4))))) FROM rt0 WHERE ((((((0.668744279792493, ' i&xd1J䡐', '</OE냙_ P!'))>=((0.9305401714934066, 1884944251, '+iNL}Y.5')))) IS TRUE)); -- 1ms;
SELECT CAST(912130044 AS NUMERIC), ((((1.352855293E9)AND(rt0.c3)))OR(rt0.c3)), CAST(CAST(rt0.c1 AS BLOB) AS BLOB) FROM rt0; -- 0ms;
SELECT ((NULL)||(((rt0.c0) IS TRUE))) FROM rt0 WHERE ((((((((x'4a2e')OR(NULL)))AND(0.23563196728079383))))>((CAST(NULL AS TEXT))))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((x''))==(('Q-uH5'))))>=((- (''))))); -- 0ms;
SELECT HEX(DISTINCT ((rt0.c0) IS FALSE)), RTRIM(rt0.c0 COLLATE BINARY), ((((((rt0.c0)OR(rt0.c0)))OR(TRIM(DISTINCT rt0.c2, NULL))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)) FROM rt0 WHERE ((((('')AND(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT LEAD(((PRINTF(rt0.c3))AND(((rt0.c3)>>(rt0.c1)))), ((rt0.c3) BETWEEN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0))) AND (((rt0.c3)<(rt0.c1)))), NULL) OVER () FROM rt0 WHERE (CASE WHEN ((0xffffffffce85fabb) NOT BETWEEN (0.6329569982202724) AND ('')) THEN NULL COLLATE NOCASE ELSE ((((((((0x7f7f3e59)AND('6&N_iw')))OR('2000609304')))OR('566211052')))OR(NULL)) END); -- 0ms;
SELECT ALL (NOT (((rt0.c4)AND(rt0.c0)))), HEX((rt0.c4 IN ())), rt0.c3 FROM rt0 WHERE (CAST(((NULL) BETWEEN (0x4065478e) AND (NULL)) AS INTEGER)); -- 0ms;
SELECT DISTINCT AVG(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) OVER () FROM rt0; -- 1ms;
SELECT ALL ((((rt0.c3) NOTNULL))%(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END)) FROM rt0 WHERE (((((((((CAST('fdVx1' AS INTEGER))OR(((((0.8607966989104722)AND('ॢ')))OR(x'b661')))))AND((('-786552205') IS FALSE))))OR((((x''))<>((0X72f35dd8))))))AND('-1417124560' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((GROUP_CONCAT(rt0.c1)))>=((COALESCE(DISTINCT rt0.c2, rt0.c0)))), ((CAST(rt0.c1 AS REAL)) NOT BETWEEN (CAST('' AS TEXT)) AND ('')), COUNT('HSlV2') FROM rt0; -- 0ms;
SELECT ALL CASE ((rt0.c4) BETWEEN ('-417631072') AND (rt0.c3))  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END THEN ((0.015363276411819005) BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c4)<(rt0.c2)) END FROM rt0 WHERE (((((((((((0.39536880619916037) ISNULL))AND(CAST('1895624802' AS TEXT))))AND(CASE WHEN 179757213 THEN NULL ELSE NULL END)))OR(((NULL) NOT BETWEEN (x'ba1c') AND (0xfffffffff8d37b9c)))))AND(CASE WHEN x'' THEN NULL ELSE 0.9437467605605154 END))); -- 0ms;
SELECT ALL ((~ (rt0.c4)) IN ()), DENSE_RANK() OVER (), ((((rt0.c4) IS FALSE)) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((+ (rt0.c1)))) FROM rt0 GROUP BY ((((rt0.c3)AND(((rt0.c4)-(rt0.c3)))))OR(((((((((x'')AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)))) HAVING (((rt0.c0, rt0.c3, rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((TRIM(DISTINCT rt0.c2), ((rt0.c2) NOT BETWEEN (NULL) AND (NULL)), NULL, (rt0.c2 IN (rt0.c3)), x'fcc7')) AND (((rt0.c0 IN (rt0.c4, rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c1 IN (rt0.c1)), ((rt0.c4)==(rt0.c2)), ((rt0.c0)IS(rt0.c0))))); -- 0ms;
SELECT ((((rt0.c3)<(rt0.c2)))AND(MAX(rt0.c4))) FROM rt0; -- 0ms;
SELECT rt0.c4 FROM rt0 WHERE ('Qm'); -- 0ms;
SELECT DISTINCT x'13d8' FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE NOCASE)OR('1318209616')) FROM rt0 LIMIT -328566291; -- 0ms;
SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOTNULL), AVG(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))), rt0.c3 FROM rt0 WHERE (((CASE WHEN '1383949115' THEN -3.32297584E8 END)<<(((2138250280)AND(0.34321065223440905))))) LIMIT 1980466995; -- 0ms;
SELECT (+ ((((rt0.c4))>((rt0.c1))))) FROM rt0 LIMIT -133715301 OFFSET -975985516; -- 0ms;
SELECT ALL ((((rt0.c4)||(0.9255216362740494)))==(AVG(rt0.c2))), (- (0.5278330638572242)), rt0.c2 FROM rt0 LIMIT -1550615187; -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(CAST('0.04105872103175612' AS NUMERIC) AS TEXT)) GROUP BY (((rt0.c4 IN ()))<=(LTRIM(rt0.c1))), (((rt0.c0)|(rt0.c1)) IN (CAST(rt0.c0 AS REAL), ((rt0.c4) IS TRUE))), HEX(DISTINCT (+ (0.9746289274935989))); -- 1ms;
SELECT DISTINCT (((rt0.c1))>((rt0.c4))) COLLATE RTRIM FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((rt0.c4))<((rt0.c2))) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2) ISNULL) COLLATE NOCASE FROM rt0 GROUP BY (((rt0.c1)<>(rt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ROWS (((((rt0.c3) IS TRUE)))<=((CAST(0.7190020932783391 AS REAL)))) PRECEDING EXCLUDE GROUP), ((CAST(rt0.c3 AS REAL))&(((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c4)))), x'' FROM rt0 WHERE (CAST((('') NOT NULL) AS BLOB)); -- 0ms;
SELECT ALL rt0.c3 FROM rt0 LIMIT -869671806; -- 0ms;
SELECT json_object((('423014413') BETWEEN (rt0.c3) AND (rt0.c1)), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))), ('竗.54' IN ()), json_array_length((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) FROM rt0;SELECT ((((CAST('' AS TEXT))OR((((rt0.c0))>=((rt0.c3))))))AND(rt0.c0)) FROM rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3)IS NOT('1984402167')))<<(((((rt0.c1)AND(rt0.c4)))OR(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (rt0.c3)) COLLATE BINARY, (((rt0.c4, rt0.c2, -1.804451729E9)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULLIF(rt0.c3, rt0.c4), CAST(rt0.c1 AS BLOB))) AND ((((rt0.c1)==(rt0.c2)), ((rt0.c0)IS NOT(rt0.c3)), ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0))))), ((COALESCE(rt0.c1, NULL))AND((NOT (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)*(rt0.c3)) AS NUMERIC), ((0.9287600091137044 COLLATE BINARY)&(((rt0.c1)==(rt0.c1)))), ((SUM(rt0.c4))<>(TOTAL_CHANGES())) FROM rt0 WHERE (((((((((((((-1781366193)OR('-1178501309')))AND(0x1529e4c7)))OR(x'884e')))OR('Jrbjⅲl)')))AND(x'8f0d')))AND((- (NULL))))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT ((rt0.c0)IS NOT(NULL)), 0.8104513494055383) FROM rt0 LIMIT -1389212581; -- 0ms;
SELECT ALL COUNT((((rt0.c1))<((rt0.c3)))) OVER () FROM rt0 WHERE (((((x'') NOT BETWEEN (NULL) AND ('	y臮xh9BUl')))LIKE(CASE NULL  WHEN NULL THEN x'' ELSE x'' END))); -- 0ms;
SELECT DISTINCT ((((~ (rt0.c0))))>=((SUM(rt0.c4)))), LAG(((((rt0.c0) NOTNULL)) NOT NULL), (((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c3)) IN ()), TYPEOF(DISTINCT (((rt0.c0))<((rt0.c0))))) OVER (), ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))*(rt0.c4 COLLATE NOCASE)), x'', LEAD((json_valid(rt0.c2) IN ((rt0.c3 IN ()))), ((CASE WHEN rt0.c0 THEN rt0.c4 END) IS TRUE), rt0.c0) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((AVG(rt0.c0)) BETWEEN (CAST(0.7596918834525611 AS REAL)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) FROM rt0 LIMIT -1261496368 OFFSET 818500261; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE (CASE WHEN ((((x'')OR(x'')))OR(-2.144858691E9)) THEN CASE WHEN '0.5510114033551354' THEN 0.10576055187706956 END ELSE NULL END); -- 0ms;
SELECT DISTINCT AVG(((rt0.c0) NOT NULL)) FROM rt0 LIMIT 2106757572; -- 0ms;
SELECT ALL 'K	' FROM rt0; -- 0ms;
SELECT DISTINCT ((UPPER(rt0.c3)) NOT BETWEEN (NULL) AND (rt0.c2)) FROM rt0; -- 0ms;
SELECT GROUP_CONCAT(rt0.c0) OVER () FROM rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c0) IS FALSE)) BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c4))) AND (rt0.c4 COLLATE BINARY)), RANK() OVER (), IFNULL(DATETIME(rt0.c3, rt0.c1, rt0.c3), (~ (rt0.c0))), TOTAL(STRFTIME(rt0.c1, rt0.c0, rt0.c4)) OVER ( ORDER BY CASE rt0.c3 COLLATE RTRIM  WHEN rt0.c4 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c0 END WHEN rt0.c1 THEN (rt0.c0 IN (rt0.c1)) WHEN ((0.16156312323319155) ISNULL) THEN x'32b2' COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 END END  NULLS LAST), CAST(x'' AS BLOB), AVG((rt0.c1 IN ())) OVER ( ROWS CAST(rt0.c3 COLLATE BINARY AS REAL) PRECEDING EXCLUDE CURRENT ROW), (+ (((rt0.c2)-(x'')))) FROM rt0;SELECT ALL CAST(rt0.c3 COLLATE NOCASE AS TEXT) FROM rt0; -- 0ms;
SELECT rt0.c3 FROM rt0 WHERE (('0.3317725544298603' IN ((x'ae72' IN ()), 0xffffffff9c1b3d00 COLLATE BINARY))); -- 0ms;
SELECT ALL (((rt0.c3, rt0.c1, rt0.c2, rt0.c4, x'')) BETWEEN (((rt0.c2 IN ()), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, SUM(rt0.c3), (rt0.c2 IN ('-1702688348')), 0.54856055820747)) AND ((x'', (((rt0.c4))<>((rt0.c4))), ((rt0.c0)IS(rt0.c1)), (rt0.c1 IN ()), rt0.c2 COLLATE RTRIM))) FROM rt0 WHERE ((NOT ((('') NOT BETWEEN ('') AND (x'6fa6'))))); -- 0ms;
SELECT DISTINCT ((rt0.c1)||(CAST(rt0.c2 AS REAL))) FROM rt0 GROUP BY (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))))); -- 0ms;
SELECT (+ (((rt0.c0) NOT NULL))) FROM rt0 ORDER BY (((rt0.c4) NOT NULL) IN ()) ASC, rt0.c3, TYPEOF(DISTINCT (rt0.c2 IN (rt0.c3))) ASC LIMIT 702858723 OFFSET -1236877569; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))IS(((0.22024162443451967)<(rt0.c1)))) FROM rt0 WHERE ((~ (((0Xffffffffec318a90)||(NULL))))); -- 0ms;
SELECT DISTINCT (((((rt0.c1 IN ()))AND((rt0.c4 IN ()))))OR(GROUP_CONCAT('iS,.{,f^)'))) FROM rt0 GROUP BY (((((rt0.c1) IS FALSE)))<>((((8.47214866E8)!=(rt0.c0))))); -- 0ms;
SELECT LIKELY(x'') FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (json_insert(CAST(x'a106' AS REAL), (((0.3484753505450773))<((x''))), CAST(353468637 AS REAL), TYPEOF(DISTINCT 0xffffffff88841265), NULL COLLATE NOCASE));SELECT ALL LEAD((((rt0.c4 IN ()))LIKE(((rt0.c4) NOTNULL))), CAST((+ (rt0.c4)) AS BLOB), (NOT (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))))) OVER ( PARTITION BY ((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c3 END) NOT BETWEEN (((rt0.c2) BETWEEN ('759281634') AND (rt0.c1))) AND (PRINTF(rt0.c0, 0.729779598898123, rt0.c0))), ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (((rt0.c2)<<(rt0.c3))) AND (((((rt0.c4)AND(rt0.c4)))AND(rt0.c2))))) FROM rt0 WHERE (((('39䨥Q' IN ())) NOT BETWEEN (((('f7J9,^5', NULL, 0.9649528135712531, 0.30902440650376317, x'8f75'))=((x'', 0xffffffffbd2601cd, '', 'e)YDs', NULL)))) AND ((('1702043351')&('+皞\'))))) INTERSECT SELECT DISTINCT (((rt0.c2)<(rt0.c3)) IN (SUM(rt0.c4))) FROM rt0; -- 1ms;
SELECT DISTINCT (+ (((rt0.c0) NOT BETWEEN ('-994827957') AND (rt0.c4)))) FROM rt0 GROUP BY ((((0.5335597843921328)AND(rt0.c2)))OR(rt0.c4)) COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE BINARY, LENGTH(NULL); -- 4ms;
SELECT ALL PERCENT_RANK() OVER (), rt0.c1, (+ ((+ (rt0.c1)))) FROM rt0 WHERE ((CAST(0.26233699126133025 AS TEXT) IN ())) GROUP BY ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))) IS FALSE) LIMIT 1451455886 OFFSET -594052542; -- 0ms;
SELECT ALL ((UPPER(DISTINCT rt0.c4))/(GROUP_CONCAT('V]u'))) FROM rt0 WHERE ((((~ (0xffffffffb9f96638))) IS FALSE)); -- 0ms;
SELECT UNLIKELY(0.8032282301243971) FROM rt0 WHERE (CASE x''  WHEN '' THEN 'm3' END COLLATE NOCASE); -- 0ms;
SELECT ((((rt0.c4)/(rt0.c1))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))), ROW_NUMBER() OVER (), CASE rt0.c2  WHEN CAST(rt0.c2 AS BLOB) THEN ((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)) END, NTILE(((((rt0.c1)<=(rt0.c0))) NOT BETWEEN ('0.961656933476851') AND (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c4))))) OVER (), NULL FROM rt0 ORDER BY (rt0.c0 COLLATE BINARY IN ()), rt0.c3; -- 0ms;
SELECT ((((CAST(rt0.c1 AS INTEGER))OR(AVG(rt0.c1))))AND((rt0.c3 IN (rt0.c1)))) FROM rt0 LIMIT -593619261; -- 0ms;
SELECT (((- (rt0.c1))) IS TRUE) FROM rt0; -- 0ms;
SELECT ((((rt0.c3)<=(rt0.c3)))<<(((rt0.c3)<>(rt0.c0)))) FROM rt0 GROUP BY rt0.c4, rt0.c4, CAST(((rt0.c1)IS NOT(rt0.c1)) AS NUMERIC); -- 0ms;
SELECT ALL rt0.c0 FROM rt0; -- 0ms;
SELECT CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)) ELSE GROUP_CONCAT(rt0.c4) END FROM rt0 ORDER BY CASE rt0.c2  WHEN NULL THEN rt0.c3 END COLLATE NOCASE DESC; -- 0ms;
SELECT DISTINCT (('0.4542927316598777') NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE FROM rt0 WHERE (((((x'f263')+(0.5768677199840474)))%(((0.19833606974024287)|(0.2671398181335769))))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)!=(rt0.c1)))IS NOT(rt0.c2)), CASE WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((rt0.c4)%(rt0.c3)) ELSE ((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)) END, ((rt0.c0)>>(CAST(rt0.c2 AS NUMERIC))), ((rt0.c0) NOTNULL) COLLATE BINARY, (((NOT (rt0.c2))) NOTNULL) FROM rt0 WHERE ((((((NULL) BETWEEN (x'') AND (NULL))))<((((((x'5eea3665')AND(NULL)))OR(x'4d03')))))); -- 0ms;
SELECT ALL json_array_length((((rt0.c1))<>((rt0.c1))), rt0.c1 COLLATE RTRIM) FROM rt0 ORDER BY (((x'' IN (rt0.c3, rt0.c1))) IS FALSE)  NULLS LAST, rt0.c1;SELECT DISTINCT (((((rt0.c3, rt0.c4, rt0.c1))==((NULL, rt0.c0, rt0.c3))))IS(((rt0.c4)LIKE(rt0.c4)))) FROM rt0 WHERE ((NOT ((~ (''))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END) NOTNULL), AVG(MAX(MAX(rt0.c1))), rt0.c0 FROM rt0 LIMIT 455137149;SELECT DISTINCT load_extension((rt0.c3 IN ()), CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END) FROM rt0;SELECT DISTINCT (((rt0.c0)&(rt0.c4)) IN (CAST(rt0.c1 AS TEXT))), ((((((rt0.c1, rt0.c1, 0.05638415078786274)) BETWEEN ((rt0.c2, rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c1, rt0.c1))), AVG(rt0.c1), CAST(rt0.c1 AS BLOB)))>((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 END, ((rt0.c4)-(rt0.c3)), rt0.c4 COLLATE NOCASE))), ROW_NUMBER() OVER (), (((~ (rt0.c2))) NOT BETWEEN ((((rt0.c2))!=((x'4d519b51')))) AND (rt0.c1)), TRIM(DISTINCT NULL, ((rt0.c4) NOTNULL)) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((CAST(rt0.c3 AS NUMERIC))AND((((rt0.c2, rt0.c4, rt0.c4))=((rt0.c3, rt0.c1, rt0.c2))))))OR(((rt0.c3)AND(rt0.c3)))))OR(((x'3fff8cbc') IS FALSE))))OR(json_insert(rt0.c3, rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c4, rt0.c3))) FROM rt0;SELECT CAST(CAST(rt0.c4 AS BLOB) AS REAL) FROM rt0 WHERE (((((LAST_INSERT_ROWID())AND(CAST(NULL AS INTEGER))))AND(0.42134941354813193 COLLATE RTRIM))); -- 0ms;
SELECT ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))), rt0.c2 COLLATE NOCASE, rt0.c4))!=((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)), (~ (rt0.c4)), rt0.c2))), ((rt0.c1)LIKE(x'c8ae')) COLLATE NOCASE, (- (rt0.c0)) FROM rt0 WHERE (((CASE WHEN x'' THEN 'Zt&A?' END) BETWEEN ((0Xffffffffce883a9f IN (NULL, -1103508006, '-104498185'))) AND (CASE WHEN NULL THEN NULL WHEN NULL THEN x'' WHEN NULL THEN 0.901912289371678 ELSE 1080379278 END))) GROUP BY ((((((((0.5469838143283774 COLLATE RTRIM)AND(rt0.c0)))AND(((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))))AND((rt0.c2 IN ()))))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))), CAST(LOWER(rt0.c1) AS INTEGER), rt0.c2 HAVING ((((rt0.c4)>(rt0.c1)))/(TRIM(DISTINCT rt0.c2, rt0.c1))); -- 0ms;
SELECT DISTINCT AVG(((rt0.c0)<<(rt0.c4))) FROM rt0 WHERE ((+ (CAST('-148625771' AS REAL)))); -- 2ms;
SELECT DISTINCT (((0.9567421071338474 IN (rt0.c3))) IS FALSE) FROM rt0 WHERE ((-1.804451729E9 IN ((~ ('')), (~ (0.8311587172672782))))) ORDER BY CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN '683115588' THEN rt0.c0 END COLLATE RTRIM  NULLS LAST, ((((((((rt0.c2)AND(COALESCE(rt0.c0, rt0.c3))))AND(((((((((rt0.c2)AND(NULL)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))))AND(((rt0.c3) NOTNULL))))AND(rt0.c2 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((((rt0.c0) IS FALSE))>=((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c4, rt0.c4, rt0.c2)) AND ((rt0.c0, -199920905, rt0.c3))))) FROM rt0 WHERE (NULLIF((NOT ('1159421976')), ((x'e921')GLOB(0.09138306963577725)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c3) OVER ( ORDER BY (((LIKELY(rt0.c0), NULL, -1.147474478E9))!=((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)), (((rt0.c4))<((rt0.c3))), 0x7f1d91cf)))  NULLS LAST, (((- (rt0.c4)))LIKE(999712186))  NULLS FIRST, (((rt0.c3)<=(rt0.c0)) IN ()) DESC) FROM rt0 WHERE ((((0.7432729770174188) ISNULL) IN ())); -- 0ms;
SELECT ALL (rt0.c4 IN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)))) FROM rt0; -- 0ms;
SELECT ALL ((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(TIME(rt0.c2, '0.1784515057389825', rt0.c2))) FROM rt0 ORDER BY CASE CAST(rt0.c1 AS TEXT)  WHEN 0.025952012166636673 THEN CAST(rt0.c2 AS BLOB) WHEN UPPER(DISTINCT rt0.c4) THEN CAST(rt0.c1 AS REAL) WHEN (rt0.c4 IN ()) THEN (rt0.c0 IN ()) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c4)>(rt0.c1)) THEN ((rt0.c1)<(rt0.c4)) ELSE (rt0.c1 IN (0x53b84d45)) END DESC; -- 0ms;
SELECT rt0.c3, ((rt0.c2)>(rt0.c0)) COLLATE BINARY, CAST(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER) FROM rt0 WHERE (0.7773893051913461); -- 0ms;
SELECT ALL 622695669 FROM rt0 LIMIT 1583307911 OFFSET -301255149; -- 0ms;
SELECT DISTINCT ((TOTAL_CHANGES())<>(TRIM(DISTINCT rt0.c3))), ((((((x'')AND(rt0.c0)))OR(rt0.c3)))||(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)))), 0.6353902120064704 FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(IFNULL(DISTINCT x'', -1.706492731E9))); -- 0ms;
SELECT DISTINCT CASE WHEN HEX(rt0.c3) THEN (rt0.c0 IN ()) WHEN ((rt0.c2) ISNULL) THEN '1290629489' COLLATE BINARY WHEN (~ (rt0.c2)) THEN (('X賚AeU雟!c') NOTNULL) ELSE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) END FROM rt0 WHERE ((((NULL COLLATE NOCASE))!=((((x'') ISNULL))))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (x''); -- 0ms;
SELECT (+ (rt0.c2 COLLATE BINARY)) FROM rt0 WHERE (((('-342141617', '653877406', '193860187', 2097297204, 1.895624802E9))<=((-2011067174, x'8409', x'', ']-', NULL))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT NTILE((((((rt0.c2)||(rt0.c0))))<((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)))))) OVER () FROM rt0;SELECT ALL (SUM(rt0.c4) IN ()) FROM rt0 WHERE ((((2.000609304E9 IN (NULL))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((MIN(rt0.c2)) ISNULL) FROM rt0; -- 0ms;
SELECT ALL TOTAL((~ (rt0.c4)) COLLATE RTRIM) FILTER(WHERE CAST(((rt0.c2) BETWEEN ('U') AND (rt0.c0)) AS BLOB)) OVER () FROM rt0 WHERE (CASE WHEN NULL THEN 0.938357285773577 END); -- 0ms;
SELECT DISTINCT (NOT (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))) FROM rt0 WHERE (CASE (('')<=(x'9ae9'))  WHEN ((x'') NOT BETWEEN (0.9753971442219647) AND (x'')) THEN ((x'')>=(x'')) END); -- 0ms;
SELECT DISTINCT JULIANDAY(rt0.c3, rt0.c0, rt0.c4) COLLATE RTRIM, ((CAST(rt0.c0 AS BLOB)) IS FALSE), COUNT(*) FROM rt0 WHERE (((((NULL) NOT BETWEEN (0.07750909822369545) AND ('-304955940')))IS(CASE x''  WHEN '537081503' THEN 0Xffffffffb629ad8e ELSE NULL END))); -- 0ms;
SELECT DISTINCT SUM(rt0.c1) FROM rt0; -- 0ms;
SELECT ((((((((GROUP_CONCAT(rt0.c4))OR(json_array_length(rt0.c2, rt0.c0))))OR(0.4019453261156859)))OR(rt0.c1 COLLATE RTRIM)))OR(GROUP_CONCAT(rt0.c2))) FROM rt0 WHERE (((((x'543d') BETWEEN (0.1387686123216747) AND (x''))) NOT BETWEEN (CASE WHEN 0xffffffffed96dc6b THEN x'' ELSE '-1679293609' END) AND ((('(Y㺦凘2DdM(') BETWEEN (x'') AND ('d-m''kF')))));SELECT DISTINCT CASE CAST(rt0.c3 AS INTEGER)  WHEN ((rt0.c0)=(rt0.c3)) THEN ((rt0.c2)%(rt0.c3)) ELSE CAST(rt0.c1 AS REAL) END, (+ (rt0.c1)) COLLATE RTRIM, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>=(LIKELIHOOD(rt0.c3, 0.3492332300937393))) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c2) ISNULL) FROM rt0; -- 1ms;
SELECT TOTAL(CAST(rt0.c0 AS NUMERIC)) FROM rt0 WHERE (IFNULL(DISTINCT (NOT ('835572832')), '')); -- 0ms;
SELECT ALL ((CASE '-726840933'  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)+(SUM(rt0.c1))) FROM rt0; -- 0ms;
SELECT 0 FROM rt0 WHERE ('EnJ*9'); -- 0ms;
SELECT DISTINCT ((x'')-(((rt0.c1) IS FALSE))), SUM(CASE WHEN NULL THEN '-301255149' WHEN 1459656583 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN 0.2529984415406593 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END), ((((rt0.c3 COLLATE NOCASE)OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(rt0.c0)) FROM rt0 WHERE (TRIM(((('-1063237433', 0.13449281893241583, '0.8822644491746923')) BETWEEN (('0.77083229270647', 0.04233546968977264, 0xffffffffc07ba559)) AND (('mVX\\~V5/', -0.0, x'b63c'))))); -- 0ms;
SELECT SUBSTR(((rt0.c3) NOTNULL), (rt0.c1 IN ())), (((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4))))>=(((+ (rt0.c2))))), AVG('0cu') OVER () FROM rt0 WHERE ((~ (CASE NULL  WHEN 0.5385636554849446 THEN 0x5db6d616 WHEN NULL THEN NULL WHEN '' THEN '' END))) LIMIT -32405470 OFFSET 1; -- 0ms;
SELECT ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3))) IS FALSE) FROM rt0 WHERE (CASE CASE 0.9191667325501897  WHEN 207142703 THEN NULL ELSE x'' END  WHEN (((x'', 'p', 'A'))<((x'1750', '', NULL))) THEN CAST('' AS REAL) WHEN CASE WHEN x'' THEN 0.8804924712418528 ELSE NULL END THEN (('')<=(0.06380583847017685)) WHEN (NULL IN ()) THEN (x'3fa9' IN (1506487043, 0.6637066830848425)) END); -- 0ms;
SELECT DISTINCT (((+ (rt0.c1)))||(NULL)) FROM rt0 WHERE (CASE CASE WHEN '-1991146560' THEN '' ELSE 0.9225333954915241 END  WHEN (('103452860')|(0.5010631645006215)) THEN ((NULL) BETWEEN (0.4540301024349961) AND (0.5153307890624893)) WHEN (NULL IN (x'')) THEN CAST(x'9606' AS TEXT) WHEN ((((NULL)OR(x'')))OR(NULL)) THEN ('-611738947' IN (x'315e')) END) LIMIT 2138250280 OFFSET 244664862; -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c4 AS NUMERIC)  WHEN ((rt0.c4)!=(rt0.c4)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END FROM rt0 WHERE (CASE WHEN HEX(DISTINCT NULL) THEN NULL COLLATE RTRIM END) GROUP BY ((LTRIM(NULL)) IS TRUE), (~ (rt0.c4)), LIKELY((~ (rt0.c2))) HAVING ((((rt0.c1) ISNULL))>=(CAST(rt0.c3 AS NUMERIC))); -- 0ms;
SELECT DISTINCT LOWER(rt0.c4), COUNT('847214866') OVER (), ((GROUP_CONCAT(rt0.c2)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c0) NOTNULL))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)OR(rt0.c4)))OR(rt0.c2)))LIKE(((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)))) FROM rt0 WHERE (CASE ((x'')>=('1213583137'))  WHEN '949919901' THEN ('TB	FO*' IN (x'')) WHEN (+ ('')) THEN 0x4530c602 COLLATE BINARY WHEN ((0.7057092621525857)|(0.4573420838084462)) THEN x'' ELSE (+ ('-1161812379')) END); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (((((((((rt0.c3)OR(x'')))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))) AND (((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))), SUM(((rt0.c0)*(rt0.c2))), (NOT (CHANGES())) FROM rt0; -- 1ms;
SELECT DISTINCT DENSE_RANK() OVER ( PARTITION BY ((((((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END)AND(((0.38273827568255003) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))AND('%r' COLLATE RTRIM)))AND((NOT (rt0.c0)))))AND(((rt0.c0)GLOB(rt0.c4)))), ((((((rt0.c4))<((rt0.c1))), ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)), CAST(rt0.c0 AS BLOB)))>=((0X693d378f, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), CASE WHEN rt0.c4 THEN rt0.c4 END)))) FROM rt0 WHERE ((((('now') NOT NULL))IS NOT(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (~ (rt0.c0 COLLATE NOCASE)), CAST(((rt0.c0) ISNULL) AS INTEGER), CAST(((rt0.c2)<(rt0.c4)) AS REAL) FROM rt0 WHERE (CAST(CASE WHEN NULL THEN 'J|2]f|v' END AS REAL)) ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS BLOB) DESC; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), (~ (((rt0.c0)>(rt0.c4)))), SUM((rt0.c2 IN ())) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN -9.82853672E8 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4))) AND (COUNT(rt0.c1))) FROM rt0 WHERE (('-1435257520' IN (((((0.3534519389127464)AND(0X3c91f6a6)))AND(0.04432962993928791))))) GROUP BY x'', (rt0.c0 IN ((((rt0.c2, rt0.c1, x''))<>((rt0.c2, rt0.c0, rt0.c4))), CAST(rt0.c1 AS REAL))), (('%rodN')*(ABS(DISTINCT rt0.c3))); -- 0ms;
SELECT (rt0.c3 COLLATE NOCASE IN (((rt0.c2) NOT NULL))) FROM rt0; -- 0ms;
SELECT DISTINCT 0Xffffffff9994ccd4 FROM rt0 WHERE ((((~ ('1318209616')))AND(CASE 'dJHO'  WHEN '' THEN 0.7632684506056514 ELSE 0.7294158747992122 END))); -- 0ms;
SELECT ((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN NULL THEN rt0.c3 ELSE rt0.c1 END) BETWEEN (0.3707803736013222) AND ((~ (rt0.c1)))), (((rt0.c1)+(rt0.c0)) IN ()), (- (rt0.c3)) COLLATE BINARY FROM rt0 WHERE (x'') GROUP BY (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND (((NOT (0.9716567829106303))))), PRINTF(COALESCE(DISTINCT rt0.c0, rt0.c1), rt0.c1 COLLATE BINARY, rt0.c0), (rt0.c3 COLLATE RTRIM IN ()) HAVING ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt0.c0)||(x'c1a1')))); -- 0ms;
SELECT ((rt0.c2 COLLATE RTRIM)>=(rt0.c2 COLLATE NOCASE)), MAX(TOTAL(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))), MAX((- (NULL))) FROM rt0 WHERE (0.26680425221795645 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM) LIMIT -1279367378 OFFSET -173374494;SELECT DISTINCT rt0.c2 COLLATE BINARY, IFNULL(rt0.c2, rt0.c0) COLLATE RTRIM, CAST((+ (rt0.c0)) AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((rt0.c1)AND(rt0.c2))) FROM rt0 WHERE (1352855293); -- 0ms;
SELECT ALL FIRST_VALUE((+ (((rt0.c3)LIKE(rt0.c2))))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), CASE WHEN QUOTE(rt0.c1) THEN ((rt0.c3)>=(rt0.c3)) WHEN x'' THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c2)%(rt0.c2)) THEN (+ (rt0.c0)) ELSE CASE rt0.c4  WHEN rt0.c3 THEN NULL END END, rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE NOCASE, AVG(x'aaf9041b'), rt0.c0 COLLATE NOCASE, ((rt0.c2)!=(rt0.c1)), rt0.c2, CASE WHEN -3.01255149E8 THEN rt0.c3 ELSE 0.3724311951541939 END, ((rt0.c3)+(rt0.c2)))) AND ((((rt0.c0) NOTNULL), ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)), (NOT (rt0.c4)), LIKELIHOOD(DISTINCT rt0.c3, 0.8896783457844449), (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3))), ((rt0.c2) NOT NULL), ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0))))), ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(rt0.c2)))AND(0xffffffff9e5db0ab)), (+ ((rt0.c0 IN ()))) FROM rt0; -- 0ms;
SELECT ALL rt0.c4, CASE ''  WHEN rt0.c2 THEN rt0.c0 ELSE '&4t吅_nb' END COLLATE RTRIM, CAST((((rt0.c2))>=((rt0.c4))) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (COUNT(rt0.c2))) FROM rt0 WHERE ((((0.13449281893241583) NOT BETWEEN ('zXo-䞎vZuJ') AND (NULL)) IN (NULL))); -- 0ms;
SELECT (+ (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN 0.3444162467433822 WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)) FROM rt0 WHERE (CASE WHEN (+ (-1.279367378E9)) THEN (0.070089268411626 IN ()) WHEN (((x'55b8')) BETWEEN (('714046167')) AND ((NULL))) THEN ((0.8326576896261346) NOT NULL) WHEN (((('/a4g')AND('592894089')))OR('捼]CeJx~')) THEN (((0.9010900684292473))<=((0.4032555158232086))) ELSE SQLITE_COMPILEOPTION_USED(0.40460839950045413) END); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c3)IS(rt0.c3)))AND(rt0.c2)))OR(CAST(rt0.c2 AS TEXT))))OR(((rt0.c0) IS FALSE))))AND(GROUP_CONCAT(rt0.c0))) FROM rt0 WHERE ((~ (((NULL)OR('-894536156'))))) ORDER BY rt0.c4 ASC  NULLS LAST, ((((((((((((((rt0.c2)+(rt0.c2)))AND((('-51184725') BETWEEN (rt0.c0) AND (rt0.c3)))))OR('')))OR('')))OR(((rt0.c3) IS FALSE))))AND(COALESCE(DISTINCT rt0.c4, rt0.c3))))OR(((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((CASE WHEN rt0.c4 THEN rt0.c4 END) NOT NULL) FROM rt0 WHERE ((x'fcc9' IN ()) COLLATE RTRIM) LIMIT -35477672; -- 0ms;
SELECT DISTINCT ((x'')<((~ (0.7590156991209466)))) FROM rt0 LIMIT -1497699740; -- 0ms;
SELECT DISTINCT (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))OR(x'986c')), (rt0.c0 IN ((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))), RANK() OVER () FROM rt0 GROUP BY rt0.c1; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c0) ISNULL) THEN NULL COLLATE NOCASE WHEN rt0.c3 THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) WHEN (NOT (rt0.c2)) THEN MIN(rt0.c4) WHEN (((rt0.c1, 0.08305545676796788, '-1236877569')) NOT BETWEEN ((rt0.c3, rt0.c4, rt0.c1)) AND ((rt0.c4, rt0.c2, rt0.c0))) THEN MIN(rt0.c4) WHEN (((rt0.c4))!=((rt0.c3))) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)) END, ((((rt0.c4)OR(((rt0.c4)==(rt0.c4)))))OR(CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)), ((TOTAL(rt0.c4)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CHAR(rt0.c2))) FROM rt0 WHERE (((((((x'') ISNULL))AND(((x'')|('1572263446')))))AND((- ('-1243149982'))))); -- 0ms;
SELECT DISTINCT CASE WHEN (x'' IN (rt0.c1)) THEN rt0.c1 WHEN (rt0.c0 IN ()) THEN rt0.c3 COLLATE BINARY WHEN (~ (rt0.c3)) THEN (NOT (rt0.c3)) END FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4)GLOB(rt0.c0))) IS FALSE) FROM rt0 GROUP BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (rt0.c4) AND ((((rt0.c0))>((rt0.c1))))) HAVING (((0xffffffff9497e315))!=((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))); -- 1ms;
SELECT DISTINCT CAST(0.4728805837659723 AS TEXT), CAST(((rt0.c1) IS TRUE) AS NUMERIC), COUNT(((rt0.c4) ISNULL)) OVER () FROM rt0; -- 0ms;
SELECT ALL COUNT(rt0.c1) FROM rt0 WHERE ((0.4309782416350101 IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT AVG(CHANGES()) FROM rt0 WHERE ((((('-1742087542' IN ()), CAST(0xffffffffedd2bddc AS REAL), '0.12132447566864413' COLLATE NOCASE, ((x'9700') NOT BETWEEN (-1.760688801E9) AND (NULL)), (('(WPA⤷e]') IS TRUE)))>=(((((((((('|)}[')AND(x'')))OR('2104233367')))AND('0.22729446869700232')))AND('Q\n')), ((0.9130290235248777) IS FALSE), ((-332297584)<('*tZKl')), ((x'') BETWEEN (x'0313') AND (NULL)), CAST(x'' AS BLOB))))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c0 COLLATE RTRIM THEN rt0.c2 ELSE CASE WHEN '-915706884' THEN rt0.c4 END END, (+ ((rt0.c0 IN ()))), CASE CAST(rt0.c2 AS REAL)  WHEN (- (rt0.c1)) THEN TOTAL(rt0.c4) END FROM rt0; -- 0ms;
SELECT ((((rt0.c2) ISNULL))*((((rt0.c3))>=((rt0.c1))))) FROM rt0; -- 0ms;
SELECT rt0.c1 FROM rt0 WHERE ('!}'); -- 0ms;
SELECT ALL ((((rt0.c2)<(rt0.c0)))>(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2)))), ((rt0.c3) NOT NULL) COLLATE NOCASE, NTH_VALUE(((((rt0.c1)>>(rt0.c1)))<<(CAST(rt0.c3 AS INTEGER))), (((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)) IN ('*FY8g', CAST(rt0.c4 AS NUMERIC)))) OVER () FROM rt0;SELECT ALL CAST(rt0.c2 COLLATE RTRIM AS BLOB) FROM rt0; -- 0ms;
SELECT IFNULL(DISTINCT UPPER(DISTINCT rt0.c3), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(NULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT (rt0.c1 IN (rt0.c0, rt0.c2)) COLLATE NOCASE FROM rt0 WHERE (((UNLIKELY(8.47214866E8))*((NOT (''))))); -- 0ms;
SELECT DISTINCT ((rt0.c1 IN ()) IN ()) FROM rt0 WHERE (((((((((((NULL) NOT BETWEEN (NULL) AND (0.18755723149386416)))OR(((0.1069914964214842) BETWEEN ('') AND (0Xffffffff82ea6d17)))))AND(((0xffffffffaf5ef83b)+('-1804451729')))))OR(((NULL)LIKE(x'')))))OR(((('')) NOT BETWEEN ((NULL)) AND ((NULL)))))) ORDER BY ABS(rt0.c4) COLLATE RTRIM ASC  NULLS LAST; -- 0ms;
SELECT ALL CASE 'bP?}h麒'  WHEN ((rt0.c2)||(rt0.c3)) THEN CAST(rt0.c0 AS REAL) END FROM rt0 WHERE ((((((- (NULL)))OR('' COLLATE NOCASE)))AND(((NULL) IS FALSE)))) LIMIT -1920255596; -- 0ms;
SELECT ((CAST(rt0.c2 AS TEXT)) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt0.c4 IN ())), CAST(rt0.c3 AS INTEGER) COLLATE NOCASE, LAST_VALUE((((((rt0.c3) IS TRUE)))>((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))) OVER () FROM rt0 WHERE (NULLIF(CAST(-8.4342119E7 AS REAL), CASE WHEN '1704127455' THEN NULL ELSE x'' END)); -- 0ms;
SELECT CASE WHEN GROUP_CONCAT(rt0.c0) THEN (rt0.c4 IN ()) END FROM rt0 WHERE ((- (0X79ed0d3c)) COLLATE RTRIM) GROUP BY CAST((rt0.c4 IN ()) AS BLOB) ORDER BY DATETIME(((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ABS(rt0.c4)) DESC, LIKE(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c3)), x'' COLLATE RTRIM) DESC  NULLS LAST; -- 0ms;
SELECT ALL (SUM(rt0.c2) IN ()), AVG(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))), x'' FROM rt0 GROUP BY (((rt0.c2)<=(rt0.c2)) IN ()), ((((-182283877)<=(rt0.c4)))IS(((rt0.c2) IS FALSE))), (((rt0.c4)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((rt0.c1)IS(rt0.c3))))) HAVING MIN(((rt0.c2) NOT BETWEEN (0.4898916745710147) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))); -- 0ms;
SELECT ALL ((((((rt0.c3)AND(rt0.c4)))AND(rt0.c2))) IS TRUE) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT LAG(((((((((('b')OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)) IN (CASE 0.4688722193879762  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)), ((rt0.c0) ISNULL) COLLATE NOCASE, (NOT (((rt0.c4)OR(rt0.c4))))) OVER (), ((((rt0.c0))>=((rt0.c3))) IN (((rt0.c0)||(rt0.c2)))), LAST_VALUE((((((+ (rt0.c2)))AND((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) OVER () FROM rt0; -- 1ms;
SELECT DISTINCT (~ (rt0.c3)) COLLATE RTRIM, CASE WHEN json_extract(rt0.c0, rt0.c4) THEN (+ (rt0.c3)) END, TYPEOF(CAST(rt0.c3 AS INTEGER)) FROM rt0 WHERE (CAST(CASE ''  WHEN NULL THEN 0x213207cb WHEN NULL THEN '' WHEN 'C' THEN 0.25086776956109313 ELSE NULL END AS BLOB)) EXCEPT SELECT DISTINCT (((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))) IS FALSE), (((rt0.c3, '!q', rt0.c0)) NOT BETWEEN ((rt0.c2, ((rt0.c4) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 END)) AND ((((rt0.c3)/(rt0.c3)), TYPEOF(DISTINCT rt0.c4), ((rt0.c0)OR('2071060977'))))), CAST((rt0.c1 IN (rt0.c3)) AS TEXT) FROM rt0; -- 0ms;
SELECT CUME_DIST() OVER () FROM rt0; -- 0ms;
SELECT (+ (((rt0.c4) IS TRUE))), CASE AVG('1678565307')  WHEN ((x'34ec')GLOB(rt0.c3)) THEN ((rt0.c0)IS(rt0.c3)) ELSE rt0.c0 END, CUME_DIST() OVER () FROM rt0 WHERE (((((((x'')|(NULL)))OR(((0X3ddf32f5)||('-1e500')))))OR((NOT (0xffffffff8b2a7a06))))); -- 0ms;
SELECT DISTINCT ((rt0.c4)IS NOT(rt0.c4)) COLLATE BINARY FROM rt0 ORDER BY (NOT (rt0.c4)) COLLATE RTRIM  NULLS FIRST, ((((NULL)IS(rt0.c1))) IS TRUE)  NULLS LAST, ((((((((((((rt0.c4)OR('592894089')))AND(rt0.c4)))AND((((rt0.c2))<((rt0.c0))))))AND(0.3756733389326594)))OR(((((rt0.c3)AND(rt0.c4)))AND(rt0.c0)))))OR(rt0.c4))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c0 COLLATE NOCASE END FROM rt0 WHERE (((NULL COLLATE NOCASE) NOT BETWEEN (NULL) AND ((((('-1629928815')AND('')))OR(0.9352388623284369))))); -- 0ms;
SELECT DISTINCT (((((rt0.c2, rt0.c4, NULL)) BETWEEN ((rt0.c1, rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c2, rt0.c2)))) ISNULL) FROM rt0 WHERE ((((('20242174')LIKE(-1.236877569E9))) ISNULL)); -- 0ms;
SELECT ALL (((rt0.c3 IN (rt0.c1)))LIKE(((rt0.c3) NOT NULL))) FROM rt0 WHERE (((0.4902949109292134 COLLATE RTRIM)IS NOT(x''))) ORDER BY CAST((0.527954507500729 IN (rt0.c3)) AS INTEGER) DESC; -- 0ms;
SELECT DISTINCT '*!Cz&' FROM rt0 WHERE (((('0.4847058082482917')) NOT BETWEEN ((0x6977ae62)) AND ((x''))) COLLATE NOCASE); -- 0ms;
SELECT AVG(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) FROM rt0 WHERE (((CAST(x'' AS NUMERIC)) IS TRUE)) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END) ISNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOTNULL))LIKE((rt0.c4 IN ()))), ((((('|3fzCANXt') NOT BETWEEN (rt0.c0) AND (rt0.c1))))<((rt0.c3))), COUNT(*) FROM rt0 WHERE (((LIKE(NULL, 0.3727476075412254, '-'))<>(((NULL) BETWEEN (1765619599) AND (-800806923))))); -- 0ms;
SELECT DISTINCT LAG(CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN rt0.c3 END, CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL), ((((((((CAST(rt0.c1 AS REAL))AND((rt0.c1 IN (rt0.c3, rt0.c2)))))OR(x'')))OR(((rt0.c4)>>(rt0.c1)))))OR(((rt0.c3)<(rt0.c4))))) OVER () FROM rt0; -- 0ms;
SELECT ALL x'9046af5f', TOTAL((rt0.c3 IN ())), ((((((((((((((rt0.c0) ISNULL))AND((rt0.c2 IN ()))))OR(((rt0.c3)OR(rt0.c3)))))OR(((rt0.c4) ISNULL))))OR(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c0)<<(rt0.c2)))))OR(ABS(DISTINCT rt0.c2))) FROM rt0 WHERE (CASE WHEN ((NULL)<<('')) THEN '' COLLATE NOCASE END); -- 0ms;
SELECT (((rt0.c0, rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM, CAST(rt0.c0 AS TEXT), (rt0.c4 IN (rt0.c2, rt0.c1)))) AND ((rt0.c4 COLLATE BINARY, (('-1077118758')*(rt0.c1)), LTRIM(rt0.c3, rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 COLLATE RTRIM AS TEXT), (NOT (((rt0.c1)>>(rt0.c0)))), CAST((((NULL, x'', rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c4)) AND ((rt0.c2, rt0.c0, rt0.c4))) AS REAL) FROM rt0 WHERE ((((((x'09e6') NOT BETWEEN (NULL) AND (2.000609304E9))))!=((((0.5948407511207797)<>(0.8681783361050834)))))); -- 0ms;
SELECT ALL x'', '-529327909' COLLATE BINARY, ((((NOT (rt0.c3))))>(((NOT (rt0.c2))))) FROM rt0 WHERE (CASE WHEN LOWER(0.8191907094792464) THEN ((NULL) NOT BETWEEN ('YNU|6M') AND (0.8936534690896453)) WHEN CASE WHEN x'' THEN x'0c10a677' ELSE x'' END THEN (('-660562308') NOTNULL) WHEN ROUND(0.9974885655218217, '-91906007') THEN ((('1665107483', '1982876428', 1786756321)) BETWEEN ((NULL, x'4d0a', NULL)) AND ((x'', NULL, x'e7ca777a'))) END); -- 0ms;
