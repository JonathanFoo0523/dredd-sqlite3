-- Time: 2024/06/06 01:33:06
-- Database: database59
-- Database version: 3.40.0
-- seed value: 773017059
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INT , c1 REAL , c2 INT  CHECK ( CASE ((c2) BETWEEN (c0) AND (c0))  WHEN CASE WHEN c1 THEN c0 END THEN ((((c0)OR(c0)))AND(c0)) ELSE (((c0)) BETWEEN ((c0)) AND ((c0))) END)); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT OR IGNORE INTO t0(c2) VALUES (0.18580561588720856); -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES ('0.18580561588720856'), (0.19372410100654724), ('945147628'), (0.38302966171065245), (0.38302966171065245); -- 0ms;
CREATE INDEX IF NOT EXISTS i90 ON t0((- (SUBSTR(c0, c2))) ASC,LIKELIHOOD(DISTINCT ((c0) NOTNULL), 0.9422646094659644) COLLATE BINARY ASC,'-995329346') WHERE ((+ (c1)) IN ()); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i3 ON t0((((((((((('0.38302966171065245')OR(c2)))OR(c2)))OR(c1)))OR(c1)))&(((c0)GLOB(c1)))) COLLATE NOCASE ASC,((((c1)<>(c2)))&(CASE c1  WHEN c0 THEN c1 END)) COLLATE NOCASE,((((((((c0 COLLATE NOCASE)AND(((c1)||(c2)))))OR(((c1) IS TRUE))))OR(CASE c1  WHEN c1 THEN '-1206725976' END)))AND(INSTR(c0, c1))) COLLATE BINARY DESC); -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
COMMIT; -- 0ms;
UPDATE rt1 SET (c2, c0)=(NULL, 0X19ee3b2d); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2, c2)=(0.19372410100654724, NULL, 486329821) WHERE CASE ((((((((t0.c0)AND(t0.c1)))AND(t0.c1)))OR('BmBV1')))AND(t0.c0))  WHEN ((NULL)<=(NULL)) THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)) END; -- 0ms;
UPDATE rt1 SET c2=0.11219299727334986 WHERE (- (((rt1.c0)*(rt1.c1)))); -- 0ms;
ANALYZE i3; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c17; -- 1ms;
PRAGMA busy_timeout; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ANALYZE t0; -- 0ms;
INSERT OR REPLACE INTO t0(c17) VALUES (x'3d14'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(NULL) WHERE (CASE t0.c17  WHEN t0.c2 THEN t0.c2 ELSE t0.c17 END IN ('-2139397946' COLLATE BINARY)); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL, NULL, 0x56a5cd88), (0.030296251974039845, x'', NULL), (-2.139397946E9, 0.6044593421548162, -1.206725976E9); -- 0ms;
UPDATE OR IGNORE rt1 SET c2='0.11219299727334986'; -- 0ms;
PRAGMA stats; -- 0ms;
ANALYZE rt1; -- 0ms;
ALTER TABLE t0 ADD COLUMN c57 INTEGER; -- 0ms;
COMMIT; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
VACUUM main; -- 1ms;
PRAGMA integrity_check; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, prefix=30, order=ASC); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 435043117);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1446739341); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.journal_mode = PERSIST; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 0 unordered noskipscan'); -- 0ms;
UPDATE OR ROLLBACK rt1 SET c0=NULL, c1='*''', c1=NULL WHERE ((STRFTIME(rt1.c1, rt1.c1, rt1.c0))<(((rt1.c2)LIKE(rt1.c0)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-90206536,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 718705395); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '28581'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1702790554,8');\n; -- 0ms;
PRAGMA default_cache_size = 2145494577; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.38302966171065245) WHERE (((((((t0.c1))>((t0.c1))))OR(t0.c57 COLLATE RTRIM)))OR((((t0.c17)) BETWEEN ((t0.c17)) AND ((t0.c57))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=x'6fdd'; -- 0ms;
DROP INDEX IF EXISTS "i3"; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE t0 SET c17=1.7976931348623157E308 WHERE ((t0.c1) BETWEEN (t0.c57) AND (CASE WHEN t0.c57 THEN t0.c2 END)); -- 0ms;
PRAGMA locking_mode; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE OR FAIL vt0 SET (c0, c0)=('1040975597', 'mWm'); -- 0ms;
DELETE FROM rt1 WHERE rt1.c0; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, +c5 BLOB , +c6 REAL ); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i45 ON t0(NULL ASC,((((c2) NOT NULL))IS(((c57) BETWEEN (c2) AND (c2)))) COLLATE BINARY,(CASE c17  WHEN c1 THEN c17 END IN ()) COLLATE NOCASE ASC,(((((c2)) BETWEEN ((c2)) AND ((c2)))) NOTNULL) COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 1ms;
UPDATE OR IGNORE rt1 SET c1='435043117', c1=1453706632, c1=NULL WHERE (((CAST(rt1.c0 AS NUMERIC)))>((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))))); -- 0ms;
INSERT OR IGNORE INTO rt0(c5) VALUES (''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.application_id; -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -514524298);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO rt0(c6, c5, c2, c3, c1, c0) VALUES (0.9026736372441637, NULL, 945097438, 0x3e0c06ed, x'', 988958580), ('!5 q', NULL, x'b5bc48be', 0.6882664066814924, '-2092833217', 0X60c19f61), ('-2092833217', NULL, '', NULL, x'c563', -2.092833217E9); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA threads; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '45078'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c17='-1206725976'; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE rt0 SET c4=x'44dc'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i73 ON t0(LOWER(c17 COLLATE RTRIM) ASC,(CAST(c1 AS BLOB) IN ()) ASC,CASE c17  WHEN c17 THEN c17 ELSE c17 END COLLATE RTRIM,((IFNULL(c1, c1))|(((c17)&(c57)))) ASC); -- 1ms;
CREATE TEMPORARY TRIGGER IF NOT EXISTS tr2 BEFORE UPDATE OF c2 ON t0 BEGIN SELECT RAISE(FAIL, 'asdf');DELETE FROM rt1 WHERE ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0))) NOT NULL);END; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i58 ON t0((((~ (c17))) BETWEEN (json_extract(c57, c17)) AND (((((c2)OR(NULL)))OR(c17)))) ASC,((CASE WHEN c1 THEN c1 WHEN c57 THEN NULL WHEN c17 THEN c2 END)||(((c1) NOTNULL))) DESC,CASE ((c1) NOT BETWEEN (-0.0) AND ('2．'))  WHEN UNLIKELY(c1) THEN c17 ELSE ((c17) ISNULL) END COLLATE RTRIM DESC,(NOT ((~ (NULL)))) COLLATE RTRIM ASC); -- 1ms;
UPDATE rt0 SET (c2)=(x'74c7') WHERE ROUND((rt0.c6 IN ()), NULLIF(rt0.c3, rt0.c1)); -- 0ms;
PRAGMA temp.automatic_index = false; -- 0ms;
UPDATE OR IGNORE rt0 SET (c6)=(0.2739036369596962); -- 0ms;
VACUUM; -- 1ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES (637402942, '523807671'), (NULL, '435043117'), (-1028118732, 0.25609289884592); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1359675165,5');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1093847398); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER) COLLATE BINARY; -- 0ms;
REINDEX; -- 0ms;
DROP TABLE IF EXISTS rt1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-294064953,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO t0(c57, c1, c2) VALUES (0xffffffffad46dea8, '-1327825138', NULL), (0.9026736372441637, 0.6044593421548162, 0.3971022598651256), ('a\nf*{EG', NULL, '-1246782062'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x''); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=945097438 unordered'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.23674754860450398); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c6, c2, c0, c1, c5, c4) VALUES ('', 0.43918884889358545, '䙵v', x'', '-93610479', x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c17, c57, c2) VALUES (945097438, '-1028118732', 'MWM'), (x'ceb7', '', x'4bc3'), (NULL, '-982422028', x''), ('-2139397946', '', 789656919), ('￿?Gs1B', NULL, x''), (NULL, NULL, 0.0), ('-1387864408', 'B2''(d|', -429132534); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0x42f9092f); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((t0.c2) NOT BETWEEN (NULL) AND ('789656919'))) NOT BETWEEN (0.26589462082991155) AND ((((rt0.c5)) NOT BETWEEN ((x'')) AND ((t0.c57))))) FROM t0, rt0, vt0 WHERE (CASE WHEN (- (-1263322767)) THEN 0.6882664066814924 END); -- 0ms;
SELECT ALL ((((((rt0.c3)AND(t0.c17)))AND(t0.c2))) BETWEEN (((t0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))) AND (vt0.c0)) FROM vt0 ORDER BY ((((((((((t0.c17)OR(rt0.c2)))AND(t0.c1)))OR(rt0.c3)))OR(0.40283480107002567)))<<(((rt0.c3) ISNULL))) ASC;SELECT DISTINCT ABS(DISTINCT ((vt0.c0)GLOB('*'''))) FROM t0;SELECT ALL ((rt0.c6 COLLATE NOCASE) IS TRUE) FROM rt0, vt0, t0 WHERE (CASE WHEN ((NULL) BETWEEN (NULL) AND (NULL)) THEN ((0.11219299727334986)>(x'b67c')) END); -- 0ms;
SELECT DISTINCT t0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON (((((~ (rt0.c1)))OR(CAST(rt0.c3 AS INTEGER))))AND(rt0.c3)) WHERE (CASE WHEN 0.3522565231662713 COLLATE NOCASE THEN ((-995329346)GLOB('ꥉ<')) WHEN CAST(0.5009718154042742 AS INTEGER) THEN ((((x'')OR('508151744')))AND(NULL)) WHEN 0Xffffffffee1b28da THEN (((('')OR(0.2739036369596962)))OR(0.3522565231662713)) WHEN ((x'033c')%('\4')) THEN (('0.19372410100654724') NOTNULL) WHEN ((x'') BETWEEN (x'') AND (0.5515665248547299)) THEN (((NULL)) BETWEEN (('SAA')) AND ((NULL))) END); -- 1ms;
SELECT ALL CAST(CAST(rt0.c6 AS REAL) AS REAL) FROM vt0 WHERE (((((((((((((0.26589462082991155 COLLATE NOCASE)AND(NULL)))OR(((('0.23674754860450398', '-2139397946', x'', '1207140005', '-90206536')) NOT BETWEEN ((0.15760686237541022, NULL, x'', x'', x'1f4959a0')) AND ((x'', x'', 0, -2026080565, x''))))))AND(((0.21490924617610885) NOT BETWEEN ('1093555045') AND (NULL)))))AND((((NULL))>=((0.3522565231662713))))))AND((1059503708 IN ()))))AND(NULL COLLATE NOCASE)));SELECT ((rt0.c6) BETWEEN (t0.c17) AND (rt0.c4)) COLLATE RTRIM FROM rt0 NOT INDEXED, vt0 LIMIT -1341389409;SELECT DISTINCT ((((CASE t0.c1  WHEN NULL THEN rt0.c5 WHEN rt0.c0 THEN rt0.c6 WHEN rt0.c6 THEN t0.c57 ELSE t0.c17 END)AND(CAST(' _''D' AS INTEGER))))OR((NOT (rt0.c4)))), CASE WHEN CASE rt0.c3  WHEN '637402942' THEN vt0.c0 END THEN t0.c1 COLLATE RTRIM END, ((CASE t0.c57  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c2 WHEN rt0.c0 THEN t0.c57 END) NOT NULL) FROM rt0, t0;SELECT LEAD(((CAST(rt0.c6 AS REAL)) IS FALSE), CASE ((((rt0.c1)AND(rt0.c5)))AND(rt0.c0))  WHEN CASE '-687446170'  WHEN rt0.c6 THEN rt0.c0 END THEN (+ (rt0.c2)) END, LIKELIHOOD((rt0.c5 IN ('M튨뭬홡aPX	w')), 0.15108338810455013)) OVER (), (+ ((rt0.c1 IN ()))), (('523807671')<<(TRIM(rt0.c0, t0.c2))) FROM rt0;SELECT DISTINCT SUM(((vt0.c0)*(t0.c1))) FROM rt0, vt0;SELECT ALL rt0.c3, rt0.c4, ((MAX(rt0.c2))LIKE('()')) FROM rt0, vt0, t0 ORDER BY ((t0.c2) IS FALSE) COLLATE RTRIM  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((((((t0.c17)AND(rt0.c5)))OR(rt0.c1)))>(SUM(vt0.c0))) FROM vt0 WHERE ((+ ((((0xffffffffaef500e3)) NOT BETWEEN (('-995329346')) AND ((NULL))))));SELECT DISTINCT (- (UNLIKELY(DISTINCT t0.c1))) FROM rt0, vt0, t0 WHERE (-1293690857); -- 0ms;
SELECT FIRST_VALUE(((((((rt0.c1)!=(-1.841871243E9)))AND(json_object(x'', rt0.c0, rt0.c0, rt0.c2))))OR((t0.c1 IN ())))) OVER () FROM t0, rt0 WHERE (((((0.7175126424524269)IS NOT('1623301985')))GLOB(((0.6518259696628139) BETWEEN ('-93610479') AND (x'3b30'))))); -- 0ms;
SELECT (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN (NULL) AND (((t0.c17)<>(rt0.c2)))), LIKELIHOOD(DISTINCT CASE WHEN t0.c57 THEN t0.c57 WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE t0.c2 END, 0.5732777855427498), NTILE((+ (7.89656919E8)) COLLATE BINARY) OVER (), t0.c2, (((rt0.c5, rt0.c4, rt0.c6)) NOT BETWEEN ((UNLIKELY(t0.c57), vt0.c0 COLLATE RTRIM, ((t0.c57) IS FALSE))) AND ((x'', rt0.c1, rt0.c4))) FROM rt0, t0;SELECT ALL COUNT(*) OVER () FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c6 FROM t0, rt0 WHERE ((((NOT (0X4bbc469d))) NOT BETWEEN ((NOT ('-635280688'))) AND ((+ (NULL))))); -- 0ms;
SELECT DISTINCT t0.c57 FROM rt0 GROUP BY UNLIKELY(DISTINCT ((rt0.c5) IS TRUE)) ORDER BY ((((rt0.c3) NOT BETWEEN (t0.c1) AND (t0.c57)))>>((((t0.c57))<((rt0.c4)))));SELECT DISTINCT TOTAL_CHANGES(), ((HEX(DISTINCT rt0.c1)) NOT NULL), ((t0.c1 COLLATE NOCASE)%(rt0.c2 COLLATE BINARY)), AVG((((rt0.c3, 0.21490924617610885, x'')) BETWEEN ((rt0.c6, NULL, t0.c57)) AND ((rt0.c0, rt0.c3, t0.c57))) COLLATE BINARY) OVER ( PARTITION BY ((x'') NOT BETWEEN (0.23422763693188864 COLLATE BINARY) AND ((rt0.c4 IN ()))), t0.c2 ORDER BY ((COALESCE(vt0.c0, t0.c1)) ISNULL) DESC), ((rt0.c5)>=(0.18580561588720856)) COLLATE RTRIM FROM t0, vt0 WHERE (NULL);SELECT DISTINCT 0Xffffffffde3bbbd9 FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT (((+ (t0.c2)))>(UNLIKELY(DISTINCT rt0.c5))), ((rt0.c5 COLLATE NOCASE) NOTNULL), ((((rt0.c1) NOT BETWEEN (rt0.c6) AND (t0.c1))) BETWEEN (((rt0.c3) NOT NULL)) AND (AVG(rt0.c2))) FROM t0, vt0, rt0; -- 0ms;
SELECT t0.c2 FROM vt0;SELECT ALL ((TRIM(DISTINCT x'')) BETWEEN (((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c4))) AND (CASE WHEN x'' THEN t0.c1 WHEN '' THEN rt0.c6 WHEN rt0.c3 THEN t0.c1 ELSE t0.c57 END)), (((rt0.c6 IN ()))%(((NULL) IS FALSE))), (((rt0.c2)) BETWEEN ((rt0.c5)) AND ((((rt0.c2) BETWEEN ('h''X!m\n>o') AND (rt0.c3))))) FROM rt0, t0; -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED(GROUP_CONCAT(0.48226645156566594)), ((rt0.c2)GLOB(rt0.c0)) COLLATE NOCASE, (+ (((('2145494577'))<>((rt0.c4))))), 'hX', COUNT('1453706632') FILTER(WHERE UNLIKELY((rt0.c5 IN ()))) OVER () FROM vt0, rt0, t0; -- 1ms;
SELECT ALL ((rt0.c4) BETWEEN (UNICODE('IT	9')) AND ((NOT (vt0.c0)))), ((((((((((((rt0.c6)AND(x'')))AND('-1144122555' COLLATE BINARY)))AND(((t0.c57)<<(rt0.c5)))))AND(CAST(t0.c17 AS BLOB))))OR(LIKELY(rt0.c2))))OR(((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c0)))), ((t0.c17) ISNULL) FROM rt0, t0, vt0 WHERE ((((0.8273704639439858)) BETWEEN (((- (x'')))) AND ((CASE WHEN -1.327825138E9 THEN 0X7fe1a631 ELSE NULL END)))); -- 0ms;
SELECT ALL (((((t0.c17)OR(t0.c2)))AND(t0.c2)) IN (((t0.c1) NOT BETWEEN (t0.c1) AND (rt0.c3)), ((rt0.c6)OR(vt0.c0)))), json_object(rt0.c6 COLLATE NOCASE, MIN(rt0.c4), ((((t0.c2)OR(rt0.c4)))AND(t0.c2)), HEX(DISTINCT rt0.c5)), PRINTF(TOTAL(t0.c17)) FROM t0, rt0, vt0 WHERE (CASE ((NULL) NOT NULL)  WHEN x'' THEN ((x'a914f48e') IS TRUE) END);SELECT DISTINCT ((((t0.c1)-(t0.c2))) NOT BETWEEN ((rt0.c5 IN (''))) AND (rt0.c4)) FROM rt0;SELECT DISTINCT (((((((((rt0.c0 IN ()))OR(0.6358795227897287 COLLATE BINARY)))OR(CASE WHEN t0.c1 THEN rt0.c3 WHEN rt0.c6 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c4 END)))OR(-9.3610479E7)))AND((NOT (rt0.c1)))) FROM rt0, vt0 GROUP BY CASE t0.c17  WHEN t0.c17 THEN rt0.c4 WHEN rt0.c5 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END COLLATE BINARY HAVING (((((t0.c17 IN ()))OR(((rt0.c2)||(rt0.c3)))))OR((rt0.c0 IN ()))) LIMIT 523807671;SELECT (((rt0.c0)) BETWEEN ((((t0.c57) BETWEEN ('1702790554') AND (rt0.c2)))) AND ((MAX(t0.c1)))), MIN((t0.c57 IN ())), (- (t0.c1)) COLLATE BINARY FROM t0, vt0 ORDER BY ((((rt0.c1)GLOB(vt0.c0))) NOT BETWEEN ((((rt0.c4))<((t0.c57)))) AND ((~ (rt0.c2))))  NULLS FIRST;SELECT COUNT('-1662995004'), ((((0xffffffffb00c059f IN (rt0.c2))))>=(((t0.c1 IN (rt0.c4))))), rt0.c6 FROM vt0, rt0 WHERE ((((0.9026736372441637 IN ()))<>(((NULL)>=(NULL)))));SELECT DISTINCT ((((t0.c2) IS FALSE))AND(((t0.c2) IS TRUE))) FROM rt0, vt0 WHERE (json_extract((~ (NULL)), ((x'74cf') BETWEEN (x'29fd') AND (NULL)), '435043117', (+ (NULL))));SELECT DISTINCT TYPEOF(DISTINCT (rt0.c4 IN (rt0.c1))) FROM t0, vt0;SELECT rt0.c4, (((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END))<(((- (rt0.c1))))), -96403165 FROM vt0, rt0, t0; -- 0ms;
SELECT (((rt0.c6) ISNULL) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT CASE CASE t0.c17  WHEN t0.c57 THEN rt0.c3 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END  WHEN CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c4 END THEN ((vt0.c0)!=(x'')) ELSE ((t0.c1)>=(rt0.c0)) END, (((rt0.c0)=(t0.c2)) IN (UPPER('1040975597'), COUNT(*))), SUM(((rt0.c6) IS FALSE)) OVER () FROM t0, vt0, rt0 WHERE (((((((((('' IN ()))AND(((0.941748523471025)LIKE(x'')))))OR((0.15760686237541022 IN ()))))AND(0x1e49c7c0)))AND(CAST(NULL AS REAL)))); -- 0ms;
SELECT t0.c17, '-1079825942' COLLATE BINARY, CASE WHEN TRIM(DISTINCT t0.c17) THEN ((NULL)OR(t0.c57)) END FROM vt0, t0, rt0 WHERE (((CAST('1596027861' AS TEXT))>>((x'' IN (x'', x''))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), (- (CAST(rt0.c3 AS NUMERIC))), ((((((((((((',૞}')AND(0Xffffffffb812d2a8)))OR(rt0.c1)))AND(t0.c17)))OR(t0.c2)))AND(NULL)))AND(((rt0.c6)>=(rt0.c5)))) FROM t0 WHERE ((x'9ff6' IN ())) ORDER BY (NOT (vt0.c0 COLLATE RTRIM)) ASC, ((((((((t0.c17)AND(NULL)))OR(t0.c2)))OR(rt0.c2)))AND(rt0.c5)) COLLATE NOCASE;SELECT ALL (~ ((+ (t0.c57)))) FROM vt0, t0; -- 0ms;
SELECT ((rt0.c5) BETWEEN (rt0.c5) AND (t0.c2)) COLLATE BINARY FROM rt0 CROSS JOIN t0 ON (rt0.c0 IN ()) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN t0.c57 THEN rt0.c0 ELSE t0.c57 END) NOT NULL) WHERE (((NULL COLLATE RTRIM)<>(((((x'6b12')AND(x'')))OR(-1.327825138E9))))); -- 1ms;
SELECT ALL (((t0.c1)) BETWEEN ((((vt0.c0)<(rt0.c3)))) AND ((t0.c2 COLLATE RTRIM))) FROM rt0 WHERE (((('')) BETWEEN ((CAST(-4.29132534E8 AS BLOB))) AND (('0.7175126424524269' COLLATE BINARY))));SELECT DISTINCT (((0.7454532081459168, rt0.c2, rt0.c1)) BETWEEN ((rt0.c5, ((t0.c2) NOT BETWEEN (rt0.c2) AND (x'')), ((rt0.c0)<<(rt0.c0)))) AND ((UNLIKELY(rt0.c2), (((1.040975597E9)) BETWEEN ((t0.c57)) AND ((379289284))), ROUND(t0.c17, rt0.c5)))) FROM t0;SELECT ALL ((((((rt0.c5)<>(rt0.c0)))OR(((rt0.c0)=(rt0.c1)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c6 THEN vt0.c0 WHEN rt0.c5 THEN x'faa0' WHEN rt0.c2 THEN t0.c2 ELSE vt0.c0 END)) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0, t0; -- 0ms;
SELECT ((((((rt0.c2)OR(rt0.c4)))AND(t0.c2)))IS(rt0.c0 COLLATE BINARY)) FROM rt0 WHERE ('');SELECT ALL TOTAL(((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)) COLLATE RTRIM), LEAD((((- (rt0.c6))) BETWEEN (rt0.c3) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)), CAST(((rt0.c2)&(rt0.c3)) AS INTEGER), ((x'')<>(rt0.c1)) COLLATE RTRIM) OVER ( ORDER BY CHANGES() DESC, ((rt0.c3 COLLATE BINARY)||(((rt0.c4)AND(1123617071)))) ASC GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES), '3}' FROM rt0 GROUP BY '' HAVING (CASE WHEN rt0.c5 THEN rt0.c6 ELSE '襤8ﵛ].' END IN (GROUP_CONCAT(t0.c2)));SELECT DISTINCT (((NULL)%(rt0.c0)) IN ()) FROM vt0 WHERE (((((((((x'')OR(0.9635165092107476)))AND(NULL)))AND(0.9231967191428071 COLLATE NOCASE)))AND(CAST(0.18580561588720856 AS TEXT)))); -- 0ms;
SELECT DISTINCT NULL, 0.4729402162461779, ((CASE WHEN x'' THEN rt0.c6 END) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE RTRIM)) FROM rt0, vt0 WHERE (CASE ((0xffffffff9f6e3f33) IS FALSE)  WHEN NULLIF(DISTINCT 0.2144553484462116, '-1359675165') THEN 0.565593365815111 COLLATE BINARY ELSE (('')IS NOT(-1719910685)) END); -- 1ms;
SELECT DISTINCT NTH_VALUE(1298030216, (- ((((t0.c57)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2)))))) OVER (), (CAST(rt0.c4 AS INTEGER) IN ()), NULL FROM t0, rt0;SELECT ALL CAST(((rt0.c0)*(rt0.c4)) AS INTEGER) FROM vt0, rt0, t0 GROUP BY ((CASE WHEN rt0.c0 THEN t0.c2 ELSE t0.c1 END)IS(((((((((t0.c57)OR(t0.c1)))AND(x'0495')))OR(t0.c57)))AND(rt0.c3)))), 0xffffffffc4ac7abe, CASE (rt0.c0 IN (t0.c2, rt0.c2))  WHEN (rt0.c5 IN (rt0.c3, t0.c17)) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c4)) END HAVING CASE rt0.c4  WHEN ((rt0.c1)IS(t0.c57)) THEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c5 END END; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c3) ISNULL) THEN CAST(rt0.c4 AS TEXT) ELSE AVG(rt0.c3) END FROM t0, rt0, vt0 ORDER BY (((rt0.c3, rt0.c4, t0.c17)) NOT BETWEEN (((~ (rt0.c5)), (vt0.c0 IN ()), (rt0.c2 IN ()))) AND ((((rt0.c5)||(t0.c2)), t0.c17 COLLATE NOCASE, ((rt0.c2) IS FALSE)))) LIMIT 1917818212 OFFSET -300209958; -- 0ms;
SELECT DISTINCT ((((((NULL)<<(rt0.c2)))AND(((rt0.c3) IS TRUE))))OR(CASE WHEN t0.c57 THEN NULL ELSE rt0.c5 END)), (NULL IN (((x'') ISNULL), CASE rt0.c2  WHEN t0.c57 THEN NULL ELSE NULL END)), CASE WHEN (- (t0.c2)) THEN ((t0.c17) BETWEEN (rt0.c0) AND (t0.c2)) WHEN (((rt0.c5))<=((rt0.c2))) THEN (t0.c17 IN ()) WHEN SQLITE_VERSION() THEN (((vt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((t0.c2))) END FROM rt0, vt0, t0; -- 1ms;
SELECT DISTINCT COUNT(((rt0.c4) NOT BETWEEN (-1e500) AND (vt0.c0))), (((t0.c57 IN ()))<((rt0.c1 IN (t0.c57)))), (((t0.c17) NOT BETWEEN (rt0.c5) AND (rt0.c1)) IN ()) FROM rt0, t0, vt0 GROUP BY ((CAST(rt0.c6 AS NUMERIC)) BETWEEN (((((((((t0.c17)AND(t0.c1)))AND(rt0.c3)))AND(t0.c17)))AND(t0.c1))) AND (((rt0.c6) NOTNULL))), (((vt0.c0, ((t0.c57)LIKE(rt0.c2)), vt0.c0))<=((((((((((t0.c57)OR(rt0.c3)))AND('1132007465')))OR(t0.c1)))AND(vt0.c0)), CAST(t0.c17 AS REAL), rt0.c6))), CAST(((t0.c17)%('-1497032085')) AS REAL); -- 0ms;
SELECT DISTINCT MIN(((rt0.c4)IS NOT(x'51d3'))) FROM t0, vt0, rt0 GROUP BY LIKELY(((vt0.c0)<>(rt0.c5))) HAVING ((((((rt0.c6)AND(rt0.c6)))OR(rt0.c1)))&(MAX(rt0.c1))); -- 0ms;
SELECT DISTINCT MIN(CAST(t0.c57 AS TEXT) COLLATE RTRIM) FROM vt0 WHERE (CASE '''>惆'  WHEN (((x''))<>((''))) THEN 'ꥉ<' COLLATE BINARY END);SELECT COUNT('v\nEU5E' COLLATE RTRIM) OVER () FROM t0; -- 0ms;
SELECT rt0.c2 COLLATE BINARY FROM vt0, t0, rt0 LIMIT -1643897241; -- 1ms;
SELECT ALL TOTAL(0.8801197043590167) OVER (), ((t0.c1 COLLATE BINARY) BETWEEN (rt0.c0) AND (t0.c57 COLLATE BINARY)), MAX((((('')OR(rt0.c3)))OR(rt0.c3))) FROM vt0, rt0;SELECT DISTINCT ((((rt0.c1)<(rt0.c5)))>=((t0.c57 IN (rt0.c5)))) FROM vt0, rt0, t0 WHERE (TRIM(CAST(NULL AS BLOB), (('Af4hW3j') NOT BETWEEN (NULL) AND ('-1827457478')))); -- 0ms;
SELECT ALL (NULL IN (CAST(t0.c2 AS BLOB))) FROM rt0;SELECT DISTINCT CAST(((rt0.c1) NOT BETWEEN (rt0.c6) AND (rt0.c4)) AS BLOB) FROM vt0, rt0; -- 0ms;
SELECT ((((rt0.c4))>(('\4'))) IN (CASE vt0.c0  WHEN t0.c57 THEN t0.c57 ELSE t0.c2 END)), ((((rt0.c4 IN (vt0.c0)), CASE rt0.c3  WHEN rt0.c5 THEN rt0.c6 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c5 THEN t0.c57 WHEN rt0.c0 THEN t0.c57 END, (t0.c2 IN ())))>=(((NOT (vt0.c0)), NULLIF(vt0.c0, t0.c1), ((rt0.c2)>=(vt0.c0))))), ((((rt0.c3)IS NOT(rt0.c6))) NOT BETWEEN (rt0.c5) AND (((rt0.c1) NOT BETWEEN (t0.c57) AND (t0.c2)))) FROM vt0, t0;SELECT DISTINCT CASE rt0.c4  WHEN CASE WHEN t0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c6 END THEN (~ (rt0.c2)) WHEN ((rt0.c3) NOT BETWEEN (t0.c17) AND (rt0.c5)) THEN vt0.c0 WHEN UNLIKELY(vt0.c0) THEN ((rt0.c0)>=(t0.c57)) ELSE ((rt0.c6) NOT NULL) END, ((((rt0.c5) NOTNULL))>((- (rt0.c1)))), (CAST(rt0.c5 AS REAL) IN ()), ((((rt0.c0) NOT NULL)) ISNULL), (~ (COUNT(*))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT NULLIF(t0.c57, TOTAL(rt0.c5)) FROM vt0, rt0, t0 WHERE (CHANGES()); -- 0ms;
SELECT ALL ((('Y{', RTRIM(t0.c57), json_object(rt0.c6, rt0.c5, rt0.c2, t0.c57), ((t0.c1) IS TRUE), ((rt0.c6) NOT BETWEEN (rt0.c6) AND (rt0.c6))))>=((((rt0.c5) NOTNULL), ((rt0.c3) NOT NULL), NULL, ((((((((rt0.c6)OR(0.9026736372441637)))OR(rt0.c1)))OR(rt0.c5)))AND('RH>')), rt0.c6))), (+ (rt0.c4)), ((t0.c1 COLLATE RTRIM) NOTNULL) FROM t0 GROUP BY UNLIKELY(((rt0.c0) BETWEEN (-300209958) AND (rt0.c2))) HAVING LIKELIHOOD(vt0.c0, 0.9894154146680876);SELECT DISTINCT (((((((((((((((rt0.c2)AND(rt0.c2)))OR(t0.c57)))OR(rt0.c1)))OR(vt0.c0)))AND('')))AND(rt0.c4))))<>((NULL))) FROM t0, rt0 WHERE ((((((((((((0.4536930917027583)AND('')))AND(x'd018')))AND(x'812d')))OR(0x1f38abb7))))<(((((NULL))<((x'')))))));SELECT (('-96403165')!=(((rt0.c5) NOT BETWEEN (rt0.c2) AND (t0.c2)))), (- (TRIM(rt0.c5, 0.44192108718129386))), ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN ((('}Z')=(rt0.c6))) AND (x'21f9')) FROM t0, rt0 GROUP BY json_array_length(((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c2))); -- 0ms;
SELECT ALL ((GROUP_CONCAT(t0.c17)) BETWEEN (((t0.c57)||(rt0.c2))) AND ((~ (rt0.c4)))), COALESCE(DISTINCT TOTAL(rt0.c4), (- (rt0.c3))), TRIM(((rt0.c3)==(rt0.c0))) FROM t0, vt0, rt0 WHERE (CAST(((((((((x'1546')OR(0.7569102174422917)))OR('1917818212')))AND(0x326d58cf)))AND(x'')) AS INTEGER)); -- 0ms;
SELECT NULL, ((rt0.c0)>>((((rt0.c4))>=((rt0.c1))))), SUM((rt0.c1 IN ())) OVER () FROM rt0, t0, vt0 WHERE (((((('✴꽳Z'))<((NULL)))) IS TRUE)); -- 0ms;
SELECT (- (UNLIKELY(0.22872404902531485))) FROM rt0, t0 WHERE ((((((0.3907629857616206, 0.13384723365286444, NULL))<>((x'', x'3dd4', x'c2c0'))))<<(((NULL) NOT NULL)))); -- 1ms;
SELECT DISTINCT CASE TYPEOF(rt0.c3)  WHEN ((-1432566607)GLOB(vt0.c0)) THEN (((rt0.c4)) NOT BETWEEN ((t0.c2)) AND ((rt0.c3))) ELSE rt0.c5 END FROM t0, vt0, rt0 WHERE (x'bbbf' COLLATE NOCASE); -- 0ms;
SELECT ALL CASE WHEN CAST(rt0.c1 AS BLOB) THEN TOTAL(rt0.c0) ELSE UPPER(x'') END FROM t0, vt0 LIMIT -1372052535;SELECT ALL ((rt0.c4)||(CAST(rt0.c4 AS TEXT))) FROM rt0; -- 0ms;
SELECT CAST(CASE rt0.c4  WHEN '' THEN rt0.c1 ELSE rt0.c2 END AS BLOB) FROM vt0, t0, rt0 WHERE ((+ (CASE WHEN 0.2076228922500002 THEN '435043117' WHEN 0Xffffffffcf13170a THEN -1485120973 WHEN NULL THEN NULL WHEN NULL THEN x'' WHEN '1596027861' THEN NULL ELSE '-462036661' END))); -- 0ms;
SELECT ALL ((t0.c1)|(rt0.c6)) COLLATE BINARY FROM rt0 INDEXED BY i73 WHERE (LIKELY(DISTINCT ((0.604945267481629)>=('2006869065')))) GROUP BY (((vt0.c0))!=((vt0.c0))) COLLATE RTRIM HAVING ((((t0.c17)||(vt0.c0)))%(((rt0.c1)>>(''))));SELECT ALL (~ (((t0.c2)GLOB(rt0.c5)))), UNLIKELY(DISTINCT rt0.c4) COLLATE RTRIM, (((t0.c1 IN ()))IS(((((((((((((rt0.c2)AND(rt0.c0)))OR(t0.c2)))OR(rt0.c3)))OR(rt0.c0)))AND(0.970517697372483)))OR(rt0.c6)))) FROM t0, vt0 WHERE ('-1738823272') LIMIT 2078845457 OFFSET 1585644633;SELECT ((((((((((rt0.c4) IS FALSE))AND(((rt0.c2)*(rt0.c4)))))AND(COUNT(*))))AND(rt0.c3)))AND((((rt0.c6, rt0.c4, rt0.c4))!=((rt0.c6, t0.c17, rt0.c1))))), MAX(((rt0.c3)<>(rt0.c0)), ((rt0.c3)>(t0.c57))), ((((((rt0.c3)OR(vt0.c0)))AND(t0.c17)))!=(GROUP_CONCAT(rt0.c6))) FROM rt0, vt0, t0 WHERE ((('930634717' COLLATE NOCASE) BETWEEN ((((((((('')OR(0.15656657965993515)))OR(x'')))OR('1902655791')))OR(0Xffffffffad0cbf3e))) AND ((- (-1.341389409E9))))); -- 0ms;
SELECT DISTINCT CAST(x'35b0a4cd' AS BLOB) FROM vt0, t0 WHERE ((('0.23674754860450398' COLLATE RTRIM)*((+ (NULL))))) ORDER BY (((((rt0.c5 IN ()))AND((rt0.c0 IN (rt0.c5)))))AND((((('FJ㻣t.Zf')AND(rt0.c6)))AND(rt0.c2)))), ((CASE WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN x'6a30' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c4 END)<<(rt0.c1));SELECT DISTINCT ((((((((((t0.c57)LIKE(rt0.c3)))AND(CAST(rt0.c5 AS INTEGER))))OR((NOT ('SAA')))))AND(NULL)))OR(NULL)) FROM vt0, t0;SELECT DISTINCT AVG(((rt0.c0) NOT BETWEEN (rt0.c4) AND (t0.c1))), (- (NULL)), COUNT(*) COLLATE RTRIM FROM vt0;SELECT DISTINCT ((vt0.c0 IN (rt0.c3)) IN ((- (t0.c2)), t0.c57 COLLATE BINARY)), ((((rt0.c6) BETWEEN (rt0.c5) AND (t0.c1)))!=(((((((((vt0.c0)OR(NULL)))AND(t0.c1)))OR(t0.c57)))OR(-1.079825942E9)))), LAG((~ ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c5))))), ((rt0.c0)>(rt0.c5)) COLLATE RTRIM, (((0Xffffffff92374675 IN ())) NOT NULL)) OVER () FROM t0, vt0, rt0; -- 0ms;
SELECT ((json_insert(vt0.c0, rt0.c0, NULL))GLOB('2100549144')), ((((rt0.c2, 0.4211853959897235, rt0.c3))==((t0.c1, t0.c17, rt0.c4))) IN ()), CAST(TOTAL(rt0.c4) AS INTEGER) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), ((((t0.c1) IS FALSE))<<(CAST(rt0.c4 AS BLOB))), MAX(CASE WHEN rt0.c6 THEN t0.c2 END), LOWER(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c6))), COUNT(*) FROM t0, vt0, rt0 WHERE ((((((0X6996c8c7)) BETWEEN ((NULL)) AND ((x'150a'))))<(('-1056010060' IN ())))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS BLOB)) IS FALSE), CASE (((NULL, t0.c17, rt0.c4))>((rt0.c4, t0.c17, rt0.c6)))  WHEN ((((t0.c17)OR(vt0.c0)))OR(rt0.c1)) THEN ((t0.c17)/(t0.c2)) WHEN ((((((((((((rt0.c2)AND(rt0.c6)))AND(t0.c17)))AND(rt0.c4)))OR(t0.c2)))OR(rt0.c6)))OR(t0.c2)) THEN (- (t0.c2)) WHEN ((rt0.c5) NOT BETWEEN (rt0.c6) AND (rt0.c3)) THEN ((rt0.c6)==(x'')) END, FIRST_VALUE((- ((vt0.c0 IN ())))) OVER () FROM t0, vt0;SELECT DISTINCT COUNT(*) FILTER(WHERE 'p0') OVER ( PARTITION BY ((NOT (rt0.c4)) IN ()), t0.c2 ORDER BY (((((((((~ (rt0.c1)))AND(t0.c57 COLLATE NOCASE)))AND((((t0.c57, t0.c2, t0.c2))>=((rt0.c5, rt0.c4, rt0.c4))))))AND(CAST(t0.c57 AS NUMERIC))))AND(vt0.c0)) ASC) FROM rt0 ORDER BY UPPER(((((((((rt0.c0)OR(rt0.c6)))AND(t0.c57)))AND(rt0.c1)))OR(rt0.c1))), t0.c1 DESC;SELECT ALL 8.46026959E8 FROM vt0, rt0, t0; -- 0ms;
SELECT ((t0.c17 COLLATE NOCASE)<(ABS(DISTINCT 0X78a3ba08))) FROM vt0, rt0 WHERE (((((0X1c7cc715) NOT BETWEEN (x'110d') AND ('-1643897241'))) IS FALSE)) GROUP BY TRIM(rt0.c0, '-188911032') COLLATE RTRIM HAVING ((json_valid(0.09117303378928632)) NOT BETWEEN (0X5ef1bdfb) AND (HEX(DISTINCT t0.c1)));SELECT ((COUNT(*))AND(((rt0.c2) NOT NULL))) FROM vt0 WHERE (((json_remove('y{', x'')) NOT BETWEEN ((~ (x'59c3'))) AND (x'' COLLATE NOCASE)));SELECT DISTINCT 372226043 FROM rt0 WHERE ((NOT ('2023995912' COLLATE RTRIM))) ORDER BY ((((t0.c2 IN (rt0.c4, t0.c1))))<>((((rt0.c2)%(rt0.c4))))) DESC  NULLS FIRST, ((((t0.c17)&(t0.c57)))<((- (rt0.c4))));SELECT ALL DENSE_RANK() OVER () FROM rt0, vt0 ORDER BY NULL DESC; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((TRIM(t0.c57)) NOT BETWEEN (((t0.c2)>>(t0.c2))) AND (((t0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) OVER (), ((((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c5)))OR((NOT (t0.c17)))), CASE WHEN NULL THEN rt0.c3 COLLATE NOCASE ELSE (((rt0.c0))>((t0.c57))) END FROM t0, rt0, vt0 WHERE ((((- (x'bb58')))IS NOT(CAST('930634717' AS REAL)))); -- 1ms;
SELECT ALL LAST_VALUE((+ (rt0.c1 COLLATE BINARY))) OVER () FROM t0, vt0, rt0 WHERE ((((('-1246782062')>=('-1719910685')))GLOB(0.4348331309855522 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT NTILE(0xffffffffd9b627da) OVER () FROM t0, rt0 WHERE ((- (((0.13492645665509928)GLOB('842312009'))))); -- 0ms;
SELECT ALL ((((rt0.c3) BETWEEN (t0.c17) AND (t0.c57))) BETWEEN (((t0.c2)>(t0.c2))) AND (((t0.c2) ISNULL))) FROM rt0 WHERE (CASE rtreenode(0x386d9bed, '1729492207')  WHEN -60805363 COLLATE NOCASE THEN x'' ELSE NULL END);SELECT DISTINCT (((rt0.c5)) BETWEEN ((((rt0.c5) BETWEEN ('0.40283480107002567') AND (rt0.c0)))) AND ((HEX(DISTINCT rt0.c4)))), TOTAL(((((((((NULL)OR(rt0.c5)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))) OVER (), (~ (0X41fa9aca COLLATE BINARY)) FROM t0 WHERE (CAST(CASE WHEN NULL THEN 0.4031827567802152 WHEN 0.548119830122968 THEN 1298030216 WHEN 1.592901115E9 THEN NULL END AS REAL));SELECT DISTINCT CAST(CASE WHEN rt0.c5 THEN t0.c57 WHEN NULL THEN t0.c1 WHEN t0.c17 THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC) FROM t0 WHERE (0.25779060608808835);SELECT ALL (((t0.c1) NOT BETWEEN (t0.c57) AND (t0.c1)) IN ()) FROM t0, rt0, vt0 GROUP BY (+ (rt0.c0)) COLLATE NOCASE LIMIT -820832502; -- 0ms;
SELECT ALL CASE WHEN rt0.c2 THEN ((rt0.c0)*(t0.c57)) END, GROUP_CONCAT(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) FILTER(WHERE (((((((rt0.c5)) NOT BETWEEN ((t0.c2)) AND (('1459588786'))))AND(CAST(rt0.c2 AS INTEGER))))AND(CAST(t0.c57 AS INTEGER)))) OVER (), RANK() OVER () FROM t0 GROUP BY (((t0.c57 IN ()))*(NULL)) ORDER BY ((QUOTE(rt0.c0)) IS FALSE)  NULLS LAST;SELECT ALL COALESCE(DISTINCT ((((rt0.c2)OR(rt0.c0)))OR(rt0.c4)), ((rt0.c3)>(rt0.c6))) FROM rt0, vt0, t0 WHERE ((('-433420948' COLLATE NOCASE)+(8.46026959E8 COLLATE BINARY))); -- 0ms;
SELECT CASE CASE t0.c1  WHEN rt0.c1 THEN t0.c57 END  WHEN ((rt0.c4)|(rt0.c5)) THEN MAX(rt0.c5) END, CUME_DIST() OVER (), ((TOTAL(t0.c1))IS NOT(MAX(rt0.c0))) FROM t0, vt0, rt0 WHERE ((- (((0.99449295652883)LIKE(NULL))))); -- 0ms;
SELECT DISTINCT LAG((((rt0.c2)) NOT BETWEEN ((t0.c57)) AND ((t0.c57))) COLLATE RTRIM, t0.c2, (((rt0.c3 IN ()))/(CAST(t0.c2 AS TEXT)))) OVER () FROM vt0, rt0, t0 WHERE (((((CAST(x'' AS NUMERIC))OR((('inA8A')/(-90206536)))))AND(((((NULL)OR(NULL)))AND('*	'))))); -- 0ms;
SELECT ALL ((NOT (rt0.c4)) IN (CAST(rt0.c5 AS BLOB))) FROM t0, vt0 NOT INDEXED, rt0 ORDER BY (NOT (((t0.c17)<=(t0.c2))))  NULLS LAST, ((((((((((vt0.c0) IS TRUE))AND(t0.c17 COLLATE RTRIM)))AND(TYPEOF(t0.c17))))OR(ABS(t0.c17))))OR((+ (t0.c1))))  NULLS LAST, CASE WHEN ((t0.c17) BETWEEN (rt0.c5) AND (t0.c57)) THEN rt0.c4 END ASC; -- 0ms;
SELECT ((CASE WHEN t0.c17 THEN t0.c1 ELSE t0.c1 END)<=((t0.c2 IN (t0.c57)))) FROM vt0, rt0;SELECT DISTINCT SUM((NOT (t0.c57))) COLLATE BINARY FROM vt0 LIMIT 379289284 OFFSET -405939385;SELECT ALL CASE WHEN rt0.c0 COLLATE RTRIM THEN t0.c17 WHEN ((rt0.c6)>(t0.c2)) THEN ((((rt0.c4)OR(t0.c2)))AND(rt0.c1)) WHEN COUNT(*) THEN rt0.c0 COLLATE NOCASE END, ((((0Xffffffffc23d59ea)OR(((((((((rt0.c5)AND(t0.c17)))AND(t0.c17)))OR(rt0.c1)))OR(rt0.c4)))))AND(CAST(rt0.c1 AS TEXT))), (TOTAL(rt0.c6) IN (((((((((t0.c17)AND(t0.c2)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))) FROM vt0, t0, rt0 WHERE (((CAST(NULL AS INTEGER)) BETWEEN (((x'a125') BETWEEN (-1610259272) AND (-698907536))) AND ('0.21490924617610885'))); -- 0ms;
SELECT DISTINCT TOTAL(((x'')<=(rt0.c2))) OVER (), vt0.c0 COLLATE NOCASE, ((((((vt0.c0)AND(t0.c2)))OR(t0.c17))) NOTNULL) FROM rt0, vt0, t0 WHERE ((((((NULL, 'Ug', '946707437'))<((0.026957774229384723, x'', 8.42312009E8)))) ISNULL)) ORDER BY ((t0.c2 COLLATE BINARY)IS NOT((((rt0.c0)) BETWEEN ((t0.c57)) AND ((vt0.c0))))) DESC; -- 0ms;
SELECT DISTINCT (rt0.c2 COLLATE RTRIM IN ()) FROM t0, rt0 GROUP BY ((+ (rt0.c1)) IN ()), load_extension(CASE WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c5 THEN x'' WHEN 0.6182393337520709 THEN rt0.c1 END), CAST(UNLIKELY(DISTINCT rt0.c4) AS NUMERIC) HAVING ((((rt0.c5) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (rt0.c0) AND ((- (rt0.c0))));SELECT ALL CASE ((vt0.c0) IS FALSE)  WHEN ((rt0.c4) BETWEEN (t0.c17) AND (-1.246782062E9)) THEN CASE WHEN rt0.c4 THEN 0.1432554772625222 ELSE rt0.c1 END ELSE ((t0.c17) NOT BETWEEN (x'') AND (rt0.c4)) END, CASE CAST(rt0.c6 AS BLOB)  WHEN ((t0.c2) ISNULL) THEN ((rt0.c2) IS TRUE) ELSE ((((x'5f2f')AND(vt0.c0)))AND(rt0.c3)) END, CAST(((rt0.c4)<=(rt0.c2)) AS NUMERIC) FROM rt0 INDEXED BY i58 WHERE (CASE WHEN (NULL IN ()) THEN ((2.145494577E9)!=(x'')) WHEN ((((((((0.9424362201209013)AND(0.5461109441097816)))AND('0.25609289884592')))OR(x'ae23')))AND('')) THEN ((0.7847534965269455)=('')) WHEN CAST(0.328889302382375 AS INTEGER) THEN (('718450209')IS NOT(-1206725976)) ELSE ((x'')<<(x'')) END);SELECT DISTINCT CAST((~ (vt0.c0)) AS REAL) FROM vt0, t0; -- 1ms;
SELECT DISTINCT (((((((((~ (rt0.c2)))AND(((rt0.c5) ISNULL))))OR(((t0.c17) ISNULL))))AND((('킓y>j')>>(t0.c1)))))OR(((t0.c17) NOTNULL))), (- (rt0.c6 COLLATE NOCASE)), (((t0.c17 IN ()))||((~ (t0.c17)))) FROM t0, rt0 WHERE ((((('\镤') NOT BETWEEN (0.9026736372441637) AND ('1270630045')))<('LF'))); -- 0ms;
SELECT ALL CAST((('532868406')>(t0.c17)) AS BLOB) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c4)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE BINARY) NOT NULL) FROM vt0, rt0, t0 INDEXED BY i58 WHERE ((((NULL)) NOT BETWEEN ((2.078845457E9)) AND (((0.43688361447159363 IN ()))))) LIMIT -998003470; -- 0ms;
SELECT DISTINCT ((NOT (1.7976931348623157E308)) IN ()) FROM vt0, t0 LIMIT -2005803046 OFFSET 472582452; -- 0ms;
SELECT '-2005803046' FROM rt0 WHERE (NULLIF((((NULL)) BETWEEN (('Yy')) AND ((0.8284003004410112))), (('䙵V') NOT BETWEEN (x'') AND (0xffffffff866dc157)))) ORDER BY ((rt0.c4)OR(rt0.c5)) COLLATE NOCASE ASC; -- 0ms;
SELECT TOTAL(rt0.c4) FROM vt0 WHERE ((((('mh')IS(0X4bbc469d))) NOTNULL)) ORDER BY (CAST(t0.c2 AS REAL) IN ())  NULLS FIRST;SELECT DISTINCT ((rt0.c1 COLLATE NOCASE)*(CAST(rt0.c6 AS TEXT))), rt0.c4, LEAD((((+ (rt0.c1)))*(CASE rt0.c2  WHEN rt0.c6 THEN rt0.c0 END)), (((rt0.c4)==(NULL)) IN ()), (NOT (((((((((rt0.c1)OR(rt0.c2)))OR(0.37437849389746614)))AND(rt0.c0)))AND(rt0.c3))))) OVER (), (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)) IN ()), ((((t0.c1) NOT BETWEEN (rt0.c0) AND (x'')))LIKE((((vt0.c0, vt0.c0, rt0.c4))==((rt0.c0, rt0.c5, rt0.c5))))) FROM rt0 WHERE ((NOT (((0Xffffffffa6c51a6b) NOT BETWEEN (x'4793') AND (NULL)))));SELECT ALL (MIN(rt0.c1) IN ()), SUM(CAST(t0.c17 AS NUMERIC)) OVER (), ((CAST(rt0.c4 AS BLOB))<=(CASE t0.c57  WHEN rt0.c6 THEN rt0.c2 ELSE t0.c2 END)), ((rt0.c4 COLLATE NOCASE) IS FALSE), ((((t0.c2)AND((t0.c1 IN ()))))AND((rt0.c6 IN (t0.c17, rt0.c2)))) FROM t0;SELECT ((rt0.c3) IS TRUE) COLLATE BINARY FROM rt0 WHERE (((COALESCE(NULL, 0xfffffffff4bd7248)) IS TRUE)); -- 0ms;
SELECT DISTINCT FIRST_VALUE((((t0.c57)) NOT BETWEEN ((((NULL)<<(t0.c17)))) AND ((((t0.c17)IS NOT(x'')))))) OVER (), ((((rt0.c1)*(rt0.c4)))==(((((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c5)))AND(t0.c17)))OR(rt0.c6)))OR(rt0.c2)))AND(t0.c1)))), NTH_VALUE(t0.c1, TYPEOF(((t0.c1)<=(t0.c57)))) OVER () FROM t0 INDEXED BY i73 WHERE (((((x'') NOTNULL))|(((((NULL)OR(896889267)))AND(NULL)))));SELECT ALL CAST(CAST(rt0.c5 AS REAL) AS NUMERIC) FROM vt0, rt0 GROUP BY t0.c1 HAVING ((((json_array_length(t0.c1, rt0.c0))AND(MAX(rt0.c6))))OR((- (t0.c1))));SELECT TOTAL(((t0.c1)IS(t0.c57))) OVER () FROM vt0, rt0;SELECT ALL (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)) IN (CAST(rt0.c4 AS TEXT))) FROM vt0, t0, rt0 LIMIT -1930610792; -- 0ms;
SELECT DISTINCT COUNT(rtreenode('1207140005', rt0.c0)) FROM t0, rt0 WHERE (((((CASE WHEN '-2026080565' THEN x'' WHEN NULL THEN -2092833217 WHEN x'0024' THEN 0.5090711987979162 END)AND((((NULL))>=((x''))))))OR((~ (x'd688'))))); -- 0ms;
SELECT ALL UNLIKELY(((rt0.c2) BETWEEN (t0.c2) AND (t0.c17))), ((((((((((vt0.c0)>>(vt0.c0)))AND(((((rt0.c5)OR(t0.c57)))OR(vt0.c0)))))AND(t0.c57)))AND(CAST(t0.c17 AS BLOB))))AND(((rt0.c2)>(t0.c1)))), json((- (t0.c17))) FROM vt0, rt0 WHERE (((((x'')IS(NULL))) NOT BETWEEN ((((0.20660593229016921)) BETWEEN (('')) AND ((x'eaf5')))) AND (x'67c8' COLLATE RTRIM)));SELECT ALL (((((rt0.c4))<=((t0.c17))))GLOB(((rt0.c2)||(rt0.c5)))) FROM t0, vt0, rt0 WHERE ((NOT (((0.5496294240421539)IS NOT('_0vK'))))) GROUP BY ((((rt0.c3 IN (0.668777995711933, NULL))))!=((((((((((((((rt0.c0)OR(t0.c1)))AND(vt0.c0)))OR('201490013')))AND(vt0.c0)))OR(rt0.c2)))OR('-336708160'))))), ((rt0.c1 COLLATE BINARY) IS FALSE), x'' HAVING CAST(((vt0.c0)<>(0.3788386981576338)) AS BLOB); -- 0ms;
SELECT CAST(rt0.c1 COLLATE BINARY AS INTEGER) FROM vt0 WHERE ((((0x37785bdd)) NOT BETWEEN ((((((((((1.059503708E9)OR(0X724f9564)))AND(NULL)))OR('i\rJ')))AND('')))) AND (((~ ('-0.0'))))));SELECT (((rt0.c4)) NOT BETWEEN ((TRIM(rt0.c3, t0.c1))) AND ((rt0.c1))), ((((((((t0.c17)AND(rt0.c4)))AND(rt0.c4)))OR(vt0.c0)))AND(rt0.c3)) COLLATE RTRIM, NULL FROM t0, rt0 GROUP BY ((((rt0.c2)-(rt0.c5))) NOT NULL) HAVING (((rt0.c6 IN ()))<<(AVG(t0.c17)));SELECT (((t0.c2)/(rt0.c0)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((t0.c57) BETWEEN (vt0.c0) AND (t0.c2)))AND(TRIM(DISTINCT t0.c1, 'L}_6'))))OR((rt0.c2 IN (t0.c1)))) FROM vt0, t0;SELECT ((((((((((rt0.c6) NOT NULL))AND(((rt0.c3)!=(rt0.c5)))))OR((- (rt0.c4)))))AND((t0.c57 IN ()))))OR(CAST(t0.c57 AS INTEGER))) FROM t0, vt0 GROUP BY '6x' HAVING TRIM(''); -- 0ms;
SELECT RANK() OVER () FROM vt0; -- 1ms;
SELECT CAST(((rt0.c3)>=(rt0.c2)) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM rt0 NOT INDEXED, t0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c5 COLLATE BINARY)|((t0.c17 IN ()))) FROM vt0;SELECT ALL (('Y')<=(x'')) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c5)-(NULL)) AS BLOB) LEFT OUTER JOIN vt0 ON rt0.c1; -- 0ms;
SELECT DISTINCT ((rt0.c6) NOT NULL) COLLATE RTRIM FROM rt0, t0, vt0 WHERE ((~ (((0.8518043880521926)*(NULL))))) GROUP BY (('-299006308') NOT BETWEEN (((((vt0.c0)OR(rt0.c1)))AND(rt0.c0))) AND (((rt0.c1) BETWEEN (t0.c2) AND (rt0.c0)))), ((CASE WHEN t0.c57 THEN x'' WHEN rt0.c2 THEN t0.c57 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c4 THEN t0.c57 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c6 END) ISNULL), ((((t0.c57 COLLATE RTRIM)OR((~ (rt0.c4)))))OR(((((t0.c17)OR(rt0.c2)))AND(rt0.c1)))); -- 0ms;
SELECT DISTINCT HEX(rt0.c6) COLLATE NOCASE FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c6 AS INTEGER)) FILTER(WHERE CAST((((vt0.c0, rt0.c6, rt0.c1)) BETWEEN ((rt0.c5, rt0.c1, t0.c2)) AND ((t0.c2, vt0.c0, t0.c17))) AS TEXT)) OVER () FROM rt0 NOT INDEXED, vt0, t0 WHERE (((((x'9a01', x'', '-566510631'))<>(('', 1.207140005E9, ']b[5Rjj'))) IN (((NULL) BETWEEN (NULL) AND (0.41007282214511))))); -- 1ms;
SELECT PERCENT_RANK() OVER (), (MIN(rt0.c3) IN ()), TOTAL(CASE t0.c57  WHEN rt0.c3 THEN rt0.c0 ELSE t0.c57 END) OVER ( PARTITION BY CASE ABS(rt0.c3)  WHEN (('-1079825942') BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (t0.c57) AND (rt0.c3)) WHEN (((vt0.c0, rt0.c5, t0.c2)) BETWEEN ((rt0.c5, t0.c2, t0.c2)) AND ((rt0.c0, t0.c2, '5M䝬7HWC'))) THEN rt0.c4 COLLATE NOCASE WHEN (((rt0.c5, rt0.c6, rt0.c3)) NOT BETWEEN ((t0.c1, rt0.c1, rt0.c6)) AND ((0.2948182420870262, rt0.c2, rt0.c5))) THEN NULLIF(rt0.c4, rt0.c4) WHEN ((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c5)) THEN LIKELIHOOD(rt0.c6, 0.46071704002410463) WHEN CASE rt0.c1  WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN t0.c57 ELSE rt0.c1 END THEN (((t0.c17, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, x'', t0.c2)) AND ((rt0.c5, rt0.c2, rt0.c1))) END, (t0.c2 IN ()), rt0.c3, NULL) FROM rt0, vt0, t0 WHERE (((((((NULL)AND(x'')))OR(0.4983423282524676)))>>(((0Xffffffff88d2065f)GLOB(NULL))))); -- 0ms;
SELECT DISTINCT ((UNLIKELY(rt0.c2))>>(((t0.c2) ISNULL))) FROM t0, rt0 GROUP BY t0.c2, ((CASE WHEN rt0.c0 THEN rt0.c4 ELSE vt0.c0 END) IS TRUE), CAST(((t0.c17) IS FALSE) AS TEXT);SELECT ((- (NULL)) IN ()), (((t0.c17, t0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) IS TRUE), ((rt0.c6)||(rt0.c6)), t0.c2)) AND (((t0.c1 IN ()), ((vt0.c0) NOTNULL), ((rt0.c6) ISNULL)))), MIN(((((rt0.c3)OR(t0.c2)))AND(rt0.c0))) FROM vt0 WHERE (((((((((((-90206536) ISNULL))AND((((('')OR(x'538b')))OR(NULL)))))AND(CAST(0.43023960000343575 AS REAL))))OR(CAST(-1497032085 AS BLOB))))AND(((0.5573821093495601) BETWEEN (NULL) AND (x'')))));SELECT ALL ((((t0.c17)!=(rt0.c5)))||((t0.c17 IN ()))) FROM t0, rt0 WHERE (CASE ((NULL)LIKE(NULL))  WHEN (NOT ('eRmᓣb\Fᬄ2')) THEN (((0.03283457055490224))=((x''))) END); -- 0ms;
SELECT ((CASE WHEN rt0.c5 THEN rt0.c5 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 END)-(CAST(rt0.c0 AS REAL))) FROM t0, vt0 WHERE (((NULL)>=(x'')) COLLATE BINARY);SELECT ((((('-695164363'))<=((rt0.c4))))%(CAST(t0.c17 AS INTEGER))) FROM rt0 WHERE (((((-1497032085) NOT NULL))>>(((0.28400449251381965) NOT BETWEEN (x'') AND (0.7569102174422917)))));SELECT ((MIN(rt0.c0))||((t0.c2 IN ()))), ((x'8f7c')-(((((rt0.c2)AND(rt0.c5)))OR(rt0.c5)))), (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((0.5949389283575802))))<(rt0.c6 COLLATE BINARY)) FROM rt0 WHERE ((NOT (0.46865543140357246))); -- 0ms;
SELECT DISTINCT MIN(CASE WHEN t0.c17 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c4 THEN t0.c17 END) FROM vt0, rt0, t0 WHERE (('-1263322767' IN ())); -- 0ms;
SELECT ((((COUNT(*))OR(((vt0.c0)<<(rt0.c5)))))OR(((t0.c2)IS(x'1604')))), (~ ((+ (rt0.c5)))), (rt0.c1 COLLATE RTRIM IN (CAST(t0.c2 AS REAL))) FROM vt0, t0 WHERE (((((((NULL)AND('3z|FF')))AND(0xffffffffc5716df4))) IS TRUE)) GROUP BY rt0.c3 HAVING CAST(t0.c57 COLLATE RTRIM AS INTEGER);SELECT DISTINCT (((((((((((((t0.c57 IN (t0.c57)))AND(((((((((t0.c1)AND(t0.c1)))OR(rt0.c0)))AND(t0.c2)))AND(rt0.c5)))))AND(MAX(t0.c1))))OR(-982320178)))AND(MAX(0.2834196467673683))))OR(NULL)))OR(((rt0.c0)AND(0.6358795227897287)))) FROM t0;SELECT DISTINCT (((((NULL, vt0.c0, rt0.c6, t0.c17, t0.c2)) BETWEEN ((vt0.c0, t0.c2, x'', t0.c57, t0.c57)) AND ((rt0.c2, t0.c1, t0.c2, NULL, t0.c1))))IS NOT(((((t0.c57)OR('>')))OR(vt0.c0)))), ((((CAST(t0.c17 AS BLOB))OR(((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt0.c0)))))OR((rt0.c3 IN ()))), TIME(COUNT(*), ((rt0.c5) IS TRUE), (t0.c1 IN ()), COUNT(*), CASE rt0.c5  WHEN vt0.c0 THEN t0.c17 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c6 END, ((((rt0.c0)AND(rt0.c2)))OR(rt0.c5)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) FROM vt0;SELECT ALL ((((t0.c2) NOTNULL))+(((t0.c17) IS TRUE))) FROM vt0, rt0, t0 WHERE (CASE WHEN 1.702790554E9 COLLATE BINARY THEN CHAR(NULL) END); -- 0ms;
SELECT ALL ((TOTAL(rt0.c5))<<(rt0.c0)) FROM vt0, rt0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN ((((NULL))>((NULL)))) AND ((((0.5009718154042742))==((NULL)))))); -- 1ms;
SELECT DISTINCT (MIN(rt0.c6) IN ()) FROM t0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c5 END)AND(ABS(t0.c57))))OR(((t0.c1) IS FALSE))) RIGHT OUTER JOIN rt0 ON '-586179742' ORDER BY ((t0.c2) NOT NULL) COLLATE BINARY, CASE '-1792708226'  WHEN CAST(rt0.c6 AS BLOB) THEN CAST(t0.c2 AS TEXT) ELSE 0.9712505762225672 END  NULLS LAST;SELECT DISTINCT rt0.c5 FROM t0, rt0 LIMIT -1028118732 OFFSET 1040975597; -- 0ms;
SELECT ALL rt0.c1, NTILE(LIKE((((rt0.c4))==((rt0.c0))), (((t0.c1, 0xffffffffb0daff0e, rt0.c5))>=((rt0.c6, rt0.c3, t0.c1))))) OVER ( ORDER BY (NOT (((('916504283'))==((rt0.c3))))) DESC  NULLS FIRST), LTRIM(GROUP_CONCAT(t0.c17), rt0.c4) FROM t0, rt0 LIMIT -2005803046;SELECT DISTINCT ((((t0.c17) IS TRUE))<>(rt0.c4 COLLATE RTRIM)) FROM rt0, vt0, t0 WHERE (((('')=('')) IN (CASE WHEN '-1015127037' THEN 0.8086234613192052 END))); -- 0ms;
SELECT DISTINCT CASE MIN(rt0.c2)  WHEN TOTAL(t0.c17) THEN (NOT (rt0.c4)) WHEN vt0.c0 COLLATE RTRIM THEN '321913660' WHEN CAST(t0.c17 AS BLOB) THEN CASE vt0.c0  WHEN rt0.c6 THEN rt0.c5 ELSE rt0.c3 END ELSE (- (rt0.c1)) END, CHAR((~ ('1059503708'))), t0.c2 FROM rt0, t0, vt0; -- 0ms;
SELECT ((((t0.c57) ISNULL))/((NOT (t0.c2)))), INSTR(((vt0.c0) IS FALSE), ((rt0.c0) NOTNULL)), ((vt0.c0)&(rt0.c5)) COLLATE NOCASE FROM vt0, rt0, t0 WHERE (CAST(CASE WHEN NULL THEN x'61a7' ELSE 'lW<sj(63+)6' END AS REAL)); -- 1ms;
SELECT ALL (((rt0.c3, t0.c57, t0.c57)) NOT BETWEEN ((CAST(864489727 AS BLOB), LIKELY(DISTINCT t0.c2), t0.c1 COLLATE NOCASE)) AND ((rt0.c4, rt0.c3, t0.c1 COLLATE BINARY))), (((t0.c1)) BETWEEN ((CASE WHEN rt0.c6 THEN rt0.c3 ELSE rt0.c5 END)) AND ((TOTAL(rt0.c4)))), ((((rt0.c2)AND(rt0.c6 COLLATE NOCASE)))AND(((((((((rt0.c0)AND(t0.c17)))AND(rt0.c5)))AND(t0.c2)))AND(rt0.c4)))) FROM vt0;SELECT DISTINCT (+ (((rt0.c1)/(rt0.c0)))), NULLIF((- (rt0.c2)), x''), (((((t0.c57 IN (rt0.c0)))OR('0.4211853959897235')))OR(((rt0.c2) ISNULL))), CAST(NULL AS BLOB), ((rt0.c5)<<(((rt0.c3) IS FALSE))) FROM rt0 WHERE (((-6.35280688E8 IN ()) IN ()));SELECT '' FROM t0, rt0 WHERE ('b[') GROUP BY CASE WHEN ((((rt0.c5)OR(t0.c2)))OR(rt0.c3)) THEN '1103826964' END; -- 0ms;
SELECT (~ (json_remove(t0.c1, t0.c57))), ((((t0.c17)*(t0.c57)))IS(CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c0 END)), '0.9635165092107476', ((((t0.c17) ISNULL))IS(((NULL)<(vt0.c0)))), ((((((((t0.c57 COLLATE NOCASE)AND((+ (rt0.c2)))))OR(MIN(rt0.c6))))OR((rt0.c2 IN ()))))OR(((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1)))) FROM t0, rt0;SELECT ALL NTH_VALUE(x'', (((t0.c17, t0.c17, t0.c17))!=((t0.c2, vt0.c0, t0.c2))) COLLATE RTRIM) OVER ( ORDER BY CAST((+ (t0.c1)) AS NUMERIC)), 0.4381844936585302, ((t0.c57 COLLATE RTRIM)LIKE(COUNT(*))) FROM vt0, t0; -- 0ms;
SELECT ((((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c5)))+((+ (rt0.c5)))) FROM t0, vt0, rt0 WHERE ((((((0.05020255355003578 IN (0.4165638054825528)))AND((0.5927993417620046 IN (x'87a0')))))AND('0.0'))); -- 0ms;
SELECT NTH_VALUE(LIKELIHOOD(DISTINCT rt0.c5 COLLATE RTRIM, 0.028549824229400778), ((NULLIF(rt0.c0, rt0.c3)) BETWEEN (((rt0.c3) IS FALSE)) AND (NULLIF(DISTINCT rt0.c5, rt0.c3)))) OVER (), CHAR((((t0.c17)) BETWEEN ((t0.c2)) AND ((vt0.c0)))), ((rt0.c6)==(rt0.c6)) COLLATE RTRIM FROM rt0 WHERE (CASE (NOT (x''))  WHEN ((x'a016')||(NULL)) THEN '-1447286057' COLLATE RTRIM ELSE '1078212718' END);SELECT ALL ((t0.c1)/(0.8577586606363445)) FROM t0, rt0, vt0 WHERE ((((((((((x'6a41' IN ()))OR((- ('|姪')))))AND(CASE x''  WHEN x'' THEN 0.9248864853308714 WHEN 0.1275898348018608 THEN 0.8740219238613438 WHEN x'' THEN 'OPT' END)))AND((('')||(0Xffffffffad83c730)))))OR(((0.03283457055490224)LIKE(NULL))))); -- 0ms;
SELECT ((((rt0.c1)OR(rt0.c0)))OR(t0.c1)) COLLATE BINARY, ((((rt0.c6)) BETWEEN ((t0.c2)) AND ((rt0.c5))) IN ()), ((((((t0.c57)OR(t0.c1)))OR(t0.c2)))OR(((rt0.c2) NOT NULL))) FROM t0 WHERE ((((((((((('0iWb')OR(0.38990189383416607)))AND(1123617071)))OR(NULL)))OR(x''))) NOT BETWEEN ((('1623301985') NOT BETWEEN ('-1620164813') AND (x''))) AND (-1.610259272E9 COLLATE RTRIM)));SELECT DISTINCT AVG(CASE WHEN rt0.c0 THEN NULL ELSE rt0.c5 END), (rt0.c6 IN ()) COLLATE RTRIM COLLATE NOCASE, (((0.567018434591496, rt0.c3, rt0.c3)) BETWEEN ((t0.c2, GROUP_CONCAT(rt0.c6), rt0.c6)) AND ((NULL, '523807671', ((rt0.c0)GLOB(rt0.c6))))) FROM vt0 WHERE ((((x'', NULL, 9.45097438E8, 0.8915528120259911, ''))<=((NULL, '-197716663', NULL, x'c2aa7ac4', '0.9248864853308714'))) COLLATE BINARY);SELECT DISTINCT ((t0.c57 COLLATE RTRIM) ISNULL) FROM t0; -- 0ms;
SELECT ALL SUM(IFNULL(rt0.c1, rt0.c0)) OVER () FROM rt0 WHERE (((('B2''(d|')>>('2102072378')) IN ())); -- 1ms;
SELECT DISTINCT CASE rt0.c5  WHEN rt0.c0 THEN rt0.c2 ELSE t0.c17 END COLLATE BINARY, SUM(((rt0.c6)IS NOT(rt0.c1))), NULL FROM vt0, t0;SELECT ALL (((x'')) NOT BETWEEN ((MIN(t0.c2))) AND ((HEX(rt0.c1)))) FROM vt0 WHERE (CASE WHEN CASE NULL  WHEN '' THEN 'JN' END THEN ((('-1827457478', NULL, ''))>(('V蔁', x'e59b84fe', 0.1275898348018608))) END);SELECT DISTINCT (~ (((t0.c2)OR(rt0.c3)))) FROM rt0 WHERE (0.5009718154042742);SELECT DISTINCT t0.c1 FROM rt0, vt0, t0 WHERE (NULL) LIMIT -982422028; -- 0ms;
SELECT (((vt0.c0) NOTNULL) IN (((((rt0.c3)AND(rt0.c0)))OR(NULL)))) FROM rt0, vt0 GROUP BY (CAST(t0.c2 AS BLOB) IN (((t0.c57)<<(t0.c2)))) HAVING ((((rt0.c3)OR('-1259611291')))>>(t0.c1));SELECT ALL COUNT(CASE rt0.c0  WHEN t0.c2 THEN rt0.c4 WHEN rt0.c0 THEN '[,' WHEN t0.c2 THEN 808588081 ELSE rt0.c3 END) FROM vt0, t0, rt0; -- 0ms;
SELECT ((((CAST(rt0.c1 AS BLOB))AND((('-716107532')&(NULL)))))OR(t0.c17 COLLATE NOCASE)) FROM vt0 WHERE (((((0.9635165092107476) IS FALSE)) BETWEEN (((x'')<(NULL))) AND (((((((((-1.387864408E9)AND(0.668777995711933)))AND(0Xffffffffc483acf2)))OR('%Js')))AND('1421026732')))));SELECT COUNT('*0.췝P [') OVER () FROM vt0; -- 1ms;
SELECT DISTINCT (((rt0.c1 IN ())) IS TRUE) FROM t0, rt0 NOT INDEXED, vt0 WHERE ((((x'', '1731476056', NULL)) BETWEEN ((((NULL) BETWEEN ('-687446170') AND (0.8549510259196651)), 0.8591578004992135, (+ (x'a638')))) AND (((x'' IN ()), ((0.13667352348554962) NOT BETWEEN (0.5456190982098315) AND ('0.0')), INSTR(7.89656919E8, -1949305046))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, t0 WHERE (LOWER(CAST(NULL AS TEXT))); -- 0ms;
SELECT DISTINCT (+ (((rt0.c5)!=(t0.c2)))) FROM rt0, vt0, t0; -- 0ms;
SELECT ((((t0.c57) NOT BETWEEN (rt0.c0) AND (vt0.c0))) NOT NULL) FROM vt0, rt0 WHERE (((UNLIKELY(957591308)) BETWEEN (TOTAL_CHANGES()) AND ((('1459588786')&(NULL)))));SELECT DISTINCT ((((((rt0.c5)IS(rt0.c6)))AND(CASE rt0.c4  WHEN t0.c57 THEN '687606028' ELSE NULL END)))AND('-93610479')), (NOT (rt0.c3)) COLLATE BINARY COLLATE RTRIM, CAST(((((rt0.c5)OR(t0.c17)))AND(rt0.c2)) AS REAL) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT (('v' IN ()) IN (t0.c57)) FROM vt0 WHERE ((+ (CAST(0X3855ceec AS TEXT))));SELECT DISTINCT 0Xffffffffbf0686d1, ((x'')<(rt0.c1)), ((((rt0.c0) BETWEEN (vt0.c0) AND (t0.c57))) IS FALSE) FROM t0;SELECT DISTINCT ((CAST(rt0.c6 AS INTEGER)) BETWEEN ((((t0.c17, t0.c2, t0.c17))==((t0.c1, rt0.c2, rt0.c2)))) AND ((rt0.c5 IN ()))) FROM t0, vt0, rt0 INTERSECT SELECT DISTINCT MIN(CASE 0.19105256030393147  WHEN rt0.c3 THEN t0.c57 END) FROM vt0, t0 WHERE (((((((('RH>')) BETWEEN ((x'')) AND ((NULL))))AND(CAST('' AS INTEGER))))AND(UPPER(DISTINCT 0x72cba3d9))));SELECT ALL (((t0.c17, rt0.c4, rt0.c3)) BETWEEN ((CAST(t0.c2 AS INTEGER), ((rt0.c6)=(t0.c2)), ((t0.c2)IS NOT(rt0.c1)))) AND ((((rt0.c1) IS FALSE), (t0.c2 IN (t0.c2)), ((rt0.c0) NOT BETWEEN (t0.c57) AND (0.2794098607675083))))) FROM vt0, t0, rt0; -- 0ms;
SELECT ALL (((('R>Iog/2px') ISNULL))=(t0.c1 COLLATE BINARY)) FROM vt0, t0; -- 0ms;
SELECT (- (rt0.c1)) COLLATE BINARY COLLATE NOCASE FROM rt0, t0 WHERE (((('CM' IN (x''))) BETWEEN ((('-132971859')<<('1106942666'))) AND (((x'8886e2a7')LIKE('-1359675165'))))); -- 0ms;
SELECT DISTINCT ((((CAST(t0.c1 AS TEXT))AND(GROUP_CONCAT(rt0.c2))))AND(((rt0.c0)&(rt0.c2)))) FROM vt0 WHERE (((((0x48988e94) NOT BETWEEN (x'') AND (0.6384418807549407))) NOT BETWEEN ('0.9424362201209013') AND ((('') BETWEEN (x'') AND (x'')))));SELECT ((UNLIKELY(DISTINCT vt0.c0))IS NOT(((vt0.c0) IS FALSE))) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT (- (rt0.c3 COLLATE RTRIM)) FROM rt0 WHERE (0.020544153018891564); -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE) ISNULL) FROM t0;SELECT DISTINCT json_valid(CASE WHEN rt0.c6 THEN rt0.c4 END) FROM rt0; -- 0ms;
SELECT ALL rt0.c3, 0.6182393337520709, TOTAL(0.23276857080500757) OVER () FROM vt0, t0, rt0 WHERE ((((('-1391673538') NOT BETWEEN ('*6') AND ('')))<(((0.8698852733000634)>(0.13519752011384933))))); -- 0ms;
SELECT DISTINCT (((0.0197665862598132 COLLATE BINARY))=((rt0.c2))) FROM t0, vt0 WHERE (((('4')) BETWEEN ((CASE ']__b'  WHEN 3.79289284E8 THEN 0.09952236227177003 END)) AND ((CAST('1060593506' AS INTEGER)))));SELECT ALL ((TOTAL(rt0.c0)) NOT BETWEEN (TOTAL(rt0.c1)) AND ((rt0.c3 IN ()))) FROM rt0, vt0 GROUP BY ((((CAST(t0.c1 AS REAL))OR(json_remove(t0.c2, rt0.c6))))OR(((t0.c1)%(rt0.c4)))) LIMIT -749702699 OFFSET 789656919;SELECT DISTINCT rt0.c5 FROM vt0, rt0, t0; -- 0ms;
SELECT ALL CAST(CAST(rt0.c5 AS REAL) AS TEXT), COUNT(x'bc0e8376'), UNLIKELY((((0Xffffffffbb653577, rt0.c4, x'')) BETWEEN ((0.03623372341727671, rt0.c5, rt0.c4)) AND ((rt0.c6, vt0.c0, t0.c57)))) FROM vt0, t0, rt0 LIMIT 1321999634; -- 0ms;
SELECT DISTINCT (~ ((((t0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))), COUNT(CAST(t0.c17 AS BLOB)), (((((rt0.c5)GLOB(rt0.c5))))!=(((+ (t0.c1))))) FROM vt0 WHERE (((((((1768791456)AND(0.38400511303994456)))AND(NULL)))AND(((NULL) NOT BETWEEN (NULL) AND ('')))));SELECT ((CAST(t0.c2 AS TEXT)) IS FALSE) FROM t0, rt0, vt0; -- 0ms;
SELECT ALL CAST(((NULL)IS(rt0.c3)) AS INTEGER) FROM rt0, t0, vt0 WHERE (NULL) GROUP BY (+ ((('b{)^}_') NOT BETWEEN (rt0.c0) AND (rt0.c2)))) HAVING CAST((+ (rt0.c3)) AS BLOB); -- 0ms;
SELECT DISTINCT CASE (+ (rt0.c2))  WHEN ((((((((rt0.c6)OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(t0.c17)) THEN SUM(t0.c17) END FROM t0 WHERE (CASE WHEN CASE WHEN x'' THEN 'i}z<V23v''' ELSE '4d㰦+l)' END THEN (((0.2649818001333638)) BETWEEN ((NULL)) AND ((0.769442373568101))) END);SELECT ALL 0.8142146229665901 FROM t0, rt0, vt0; -- 0ms;
SELECT COUNT(*) FROM vt0, rt0 GROUP BY ((TRIM(rt0.c6))AND(t0.c57 COLLATE BINARY)), 0.012674052174875827, ((NULL COLLATE NOCASE) IS FALSE);SELECT DISTINCT (rt0.c3 IN ()) FROM vt0 GROUP BY ((CASE WHEN rt0.c5 THEN rt0.c6 ELSE rt0.c5 END) BETWEEN (((((t0.c17)OR(t0.c57)))AND(t0.c2))) AND (((rt0.c0) NOTNULL))) HAVING (((((rt0.c0)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))<((t0.c1 IN ())));SELECT ALL ((CAST(rt0.c0 AS INTEGER))>=(((t0.c2) IS TRUE))), CAST(SUM(rt0.c1) AS TEXT), (((t0.c1, rt0.c0, t0.c17)) NOT BETWEEN ((rt0.c3 COLLATE NOCASE, ((rt0.c0) NOT BETWEEN (t0.c17) AND (rt0.c2)), t0.c17 COLLATE BINARY)) AND ((CASE rt0.c2  WHEN rt0.c6 THEN t0.c1 ELSE rt0.c4 END, MAX(rt0.c5), CAST(rt0.c3 AS REAL)))) FROM vt0, rt0 WHERE ((- (CAST('0.548119830122968' AS TEXT)))) LIMIT 1843648679 OFFSET -1712836652;SELECT DISTINCT ((GROUP_CONCAT(rt0.c5))>>(t0.c2 COLLATE NOCASE)), ((((rt0.c1) NOT BETWEEN (t0.c17) AND (0X30993209)))<<(CASE WHEN '' THEN rt0.c5 END)), UNLIKELY(((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c1))) FROM rt0, vt0, t0 WHERE ((((x'45ef', 8.46026959E8, NULL)) NOT BETWEEN ((((x'757c')&('')), (NOT (NULL)), ((0.24379977912369588)/('jvUCm/y')))) AND (('-145407687', (- ('')), '577316752')))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)OR(rt0.c5)))OR(rt0.c0)) COLLATE NOCASE, TOTAL((t0.c17 IN ())), ((rt0.c1)GLOB(t0.c17)) COLLATE NOCASE FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT (((t0.c17)) BETWEEN ((((rt0.c1) IS TRUE))) AND ((((t0.c2) IS FALSE)))), ((((((vt0.c0)OR(rt0.c5)))AND('imZ'))) BETWEEN (((t0.c57) NOT BETWEEN (t0.c57) AND (t0.c2))) AND (((rt0.c1)>=(t0.c1)))), (~ (t0.c17)) FROM vt0 WHERE ((('1895536950') NOT NULL)) GROUP BY CAST(((vt0.c0) BETWEEN (-294064953) AND (rt0.c6)) AS INTEGER), ((NULL)!=((((vt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))), ((SUBSTR(rt0.c3, t0.c57)) ISNULL) HAVING ((t0.c57) NOT BETWEEN (t0.c17) AND (rt0.c2)) COLLATE RTRIM;SELECT DISTINCT ((CASE WHEN vt0.c0 THEN rt0.c4 END)IS(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))), CAST(((t0.c2)>=(rt0.c0)) AS BLOB), DATE(MIN(rt0.c2), (~ (t0.c2)), ((rt0.c1)LIKE(rt0.c3))), ((SUM(-1406743218)) NOT BETWEEN ('FX') AND (COUNT(rt0.c2))), (((((rt0.c4)AND(rt0.c1)))OR(t0.c2)) IN ()) FROM vt0;SELECT DISTINCT AVG(((t0.c2) BETWEEN ('&8N{➺tU') AND (rt0.c6))) FROM vt0, t0;SELECT CASE vt0.c0  WHEN ((((t0.c1)OR(vt0.c0)))AND(rt0.c5)) THEN (- (rt0.c0)) WHEN AVG(rt0.c4) THEN ((t0.c57) IS TRUE) WHEN (('+Q') NOT BETWEEN (rt0.c3) AND (rt0.c5)) THEN ((((vt0.c0)OR(rt0.c0)))OR(t0.c2)) ELSE rt0.c3 END FROM t0, vt0 WHERE (((json_insert('', 0.08385092733613264, 0.8874237763126307)) BETWEEN (TRIM('r\n')) AND (((x'')>>('360751392')))));SELECT ((((((0.5023905627929953)IS NOT(x'')))AND(((rt0.c1)%(t0.c2)))))AND((rt0.c5 IN (rt0.c3, rt0.c2)))) FROM vt0, t0 WHERE (json((NOT (0.9628496036490183))));SELECT ((x'')>((- (t0.c2)))), ((COUNT(*))-(((((rt0.c6)OR(rt0.c3)))AND(rt0.c3)))), PERCENT_RANK() OVER () FROM vt0, t0, rt0 WHERE ('0.09117303378928632' COLLATE BINARY) ORDER BY ((vt0.c0) BETWEEN (t0.c1) AND (rt0.c3)) COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT t0.c2, ((CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c17 END)/(t0.c1 COLLATE RTRIM)), COUNT(*) OVER () FROM t0 INDEXED BY i58, vt0 WHERE (((((x'') IS TRUE))OR(UNLIKELY(0.4381844936585302))));SELECT DISTINCT ('1006723192' COLLATE NOCASE IN ()) FROM vt0, t0, rt0 WHERE (((((x'') NOT BETWEEN (0xffffffffad0cbf3e) AND ('1596027861'))) IS FALSE)); -- 0ms;
SELECT ALL ((t0.c57) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (t0.c1 COLLATE NOCASE)) FROM vt0, rt0 WHERE (CASE WHEN (+ (1059503708)) THEN '6Gc&' COLLATE RTRIM WHEN ((0.5009718154042742)<=(0.09371861709450513)) THEN (+ ('945097438')) WHEN 0.0793841914859652 COLLATE NOCASE THEN (x'a7fe' IN ()) WHEN (((-2.005803046E9, '^ﭶig', NULL))<=((658901104, '765666560', NULL))) THEN (('') NOT BETWEEN ('-182417052') AND (x'')) WHEN '-60805363' THEN NULL END) GROUP BY (NOT (vt0.c0 COLLATE BINARY));SELECT (((((t0.c1, rt0.c3, 2.145494577E9)) NOT BETWEEN ((t0.c2, rt0.c6, rt0.c4)) AND ((t0.c2, '暆<-Z띈횕W', t0.c57))))||((- (rt0.c1)))), (((+ (rt0.c5)))+(NULL)), ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4))) NOT BETWEEN (((t0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (CAST(t0.c1 AS TEXT))) FROM vt0 WHERE ((((((((NULL)AND(0xffffffffedbd912e)))AND(0.4720940637536235))))<>(((NULL IN ()))))) ORDER BY CASE WHEN (~ (rt0.c3)) THEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c57)) ELSE ((rt0.c0)<=('-2139397946')) END  NULLS FIRST, (NOT (((t0.c17)<(t0.c1)))) LIMIT -462036661 OFFSET 565286439;SELECT (((((~ (rt0.c1)))OR(CAST(rt0.c0 AS REAL))))OR(((t0.c57)!=(rt0.c6)))) FROM t0, vt0, rt0; -- 0ms;
SELECT ALL CAST(((vt0.c0) ISNULL) AS REAL) FROM t0, vt0 WHERE (((CASE NULL  WHEN 0.5317368632287514 THEN '1093555045' WHEN NULL THEN 0xffffffffbd42ba4c WHEN '-686859481' THEN x'' END)>=((('-1354868485')IS('2'))))); -- 0ms;
SELECT ALL ((((((t0.c57)OR(rt0.c5)))OR(rt0.c4))) ISNULL) FROM t0, vt0 WHERE (((CAST(6.37402942E8 AS INTEGER)) BETWEEN (CASE WHEN NULL THEN x'' END) AND ((('-294064953') BETWEEN (NULL) AND (x'')))));SELECT ALL LIKELIHOOD(LIKELIHOOD(DISTINCT t0.c2, 0.5007004671502528), 0.7101225240083613), ((((rt0.c1) NOTNULL)) NOT NULL), CAST(((t0.c2) ISNULL) AS NUMERIC) FROM vt0;SELECT ALL (+ (((t0.c2) NOTNULL))) FROM t0, rt0, vt0; -- 1ms;
SELECT DISTINCT (~ (CASE rt0.c3  WHEN 0.9247606545112 THEN x'' ELSE rt0.c4 END)) FROM rt0; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL (((rt0.c4, rt0.c3, rt0.c5)) BETWEEN ((MIN(rt0.c2), ((t0.c2) NOT BETWEEN (t0.c17) AND (rt0.c3)), CAST(t0.c17 AS INTEGER))) AND ((MIN(rt0.c1, vt0.c0), (~ (rt0.c1)), MIN(rt0.c3)))), (('2100549144') IS FALSE) COLLATE RTRIM, (CAST(t0.c17 AS REAL) IN ()) FROM rt0, vt0, t0 WHERE ((+ ((('1568572323') NOTNULL)))) GROUP BY ((NULL)<(CAST(rt0.c5 AS NUMERIC))), (((rt0.c2 COLLATE RTRIM))==((ABS(DISTINCT '\\r.CHuhk''')))), CASE (((rt0.c5, t0.c2, NULL))>=((t0.c2, rt0.c5, 0.7545585086580869)))  WHEN ((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c6)))AND('2003940702')))AND(rt0.c6)) THEN CASE WHEN t0.c17 THEN rt0.c0 END ELSE rt0.c3 END HAVING (((((((((+ (t0.c2)))OR(((rt0.c0)|(t0.c2)))))OR(CAST(rt0.c6 AS TEXT))))OR(CASE rt0.c3  WHEN t0.c17 THEN rt0.c5 ELSE rt0.c4 END)))OR(LENGTH(rt0.c2))); -- 0ms;
SELECT ((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (((t0.c1) ISNULL)) AND (rt0.c0)) FROM vt0, t0 WHERE (CAST((('FN') IS TRUE) AS REAL));SELECT DISTINCT rt0.c5 FROM vt0;SELECT DISTINCT 0xffffffffb89675a1 FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT MIN(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))) COLLATE BINARY, CAST(TRIM(DISTINCT rt0.c5) AS TEXT), (((((t0.c17)>(rt0.c2))))<=((((rt0.c3) BETWEEN (NULL) AND (rt0.c1))))) FROM vt0 INDEXED BY i45, t0, rt0;SELECT DISTINCT SUM('TETK') OVER ( ORDER BY ((CAST(t0.c2 AS NUMERIC)) ISNULL)  NULLS FIRST) FROM vt0;SELECT (((CAST(rt0.c5 AS INTEGER), (NULL IN ()), IFNULL(t0.c17, rt0.c0), ((rt0.c4)IS(rt0.c0)), CASE WHEN rt0.c1 THEN t0.c57 WHEN vt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c3 END))>((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((t0.c17)OR(rt0.c0)))AND(rt0.c1)), GROUP_CONCAT(rt0.c6), vt0.c0 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c3))))) FROM rt0 WHERE (((((((((((((NULL)OR(1.592901115E9)))OR(x'')))AND(0x3fa275c6)))OR(NULL)))OR((((0Xffffffffb50ddb65, NULL, '(s%', x'67e8', 0.19105256030393147)) NOT BETWEEN ((0.1817005787076762, NULL, -188911032, '髊邴7A', 0xfffffffff994bf7e)) AND ((x'', 0x2d5cd4db, '-724359884', 0.657107879149173, '0.40283480107002567'))))))OR(((NULL) BETWEEN ('547292484') AND (0.12560623411648164)))));SELECT ALL AVG(CAST(t0.c1 AS TEXT)) OVER ( PARTITION BY (UNLIKELY(rt0.c0) IN ()), (((CAST(vt0.c0 AS BLOB)))>=((vt0.c0 COLLATE RTRIM)))), (((rt0.c6 IN ())) BETWEEN (x'') AND (((((t0.c2)AND(rt0.c0)))OR(rt0.c0)))), (+ (CASE WHEN rt0.c5 THEN t0.c57 END)) FROM rt0, t0;SELECT ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))LIKE('750253010' COLLATE NOCASE)), (- (rt0.c4 COLLATE BINARY)), MAX(((rt0.c3)+(rt0.c4))) FROM t0, vt0, rt0; -- 0ms;
SELECT ALL x'867f', ((((CASE rt0.c3  WHEN t0.c17 THEN t0.c17 END)AND(((0.189908590672481)<=(rt0.c4)))))AND((((t0.c57)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))), ((((t0.c57)+(t0.c57))) NOT BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt0.c4 THEN t0.c2 ELSE NULL END)), CAST(UPPER(DISTINCT rt0.c6) AS TEXT), 'enYL' FROM rt0, t0 WHERE (((((x'') NOTNULL))&(((NULL) NOT BETWEEN ('C詘c)''^	 d') AND (0.21490924617610885))))); -- 0ms;
SELECT ALL x'', ABS(DISTINCT ((t0.c57) NOT BETWEEN (rt0.c1) AND (t0.c2))), ((((((((((((AVG(t0.c2))AND(CASE WHEN rt0.c6 THEN rt0.c5 END)))AND(((((rt0.c6)AND(t0.c1)))AND(rt0.c6)))))AND(rt0.c4 COLLATE NOCASE)))OR(COUNT(*))))AND(CASE WHEN t0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(((t0.c2) IS FALSE))) FROM vt0 WHERE (CASE WHEN ((NULL)IS NOT(NULL)) THEN LIKELIHOOD(0.38302966171065245, 0.3306002541680686) ELSE (('435043117')AND(378953)) END);SELECT DISTINCT ((0.07403600331235483)<=(COUNT(*))), (((((t0.c57))>((rt0.c2)))) BETWEEN (COUNT(*)) AND (AVG(rt0.c6))), NULL FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c6)OR(t0.c2)))OR(t0.c17)) COLLATE BINARY WHERE (''); -- 0ms;
SELECT DISTINCT x'1024' FROM vt0 GROUP BY ((((rt0.c5) NOT NULL)) IS FALSE);SELECT DISTINCT TYPEOF(((rt0.c6)=(rt0.c6))) FROM t0 WHERE ((((((600748075)) NOT BETWEEN (('0.1432554772625222')) AND ((NULL)))) IS FALSE));SELECT DISTINCT LAG(((vt0.c0 COLLATE BINARY)IS(t0.c17)), ((NULL)>(t0.c2)) COLLATE BINARY, (((vt0.c0 IN (t0.c17))) NOTNULL)) OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c0 THEN rt0.c6 ELSE rt0.c2 END COLLATE RTRIM, ((UNLIKELY(DISTINCT rt0.c5))|(LIKELIHOOD(rt0.c6, 0.5130451988048433))), (((~ (rt0.c0))) NOTNULL) FROM rt0 WHERE (((CASE '0.26589462082991155'  WHEN '372226043' THEN 2.145494577E9 WHEN x'' THEN NULL WHEN x'' THEN x'33541034' END)AND(0.23524950626073893 COLLATE BINARY))); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c3 THEN t0.c57 WHEN rt0.c5 THEN rt0.c1 WHEN t0.c57 THEN t0.c2 END) NOT BETWEEN (-1787749977) AND (CAST(rt0.c1 AS REAL))) FROM rt0, vt0, t0 WHERE (0x162fb7fb); -- 0ms;
SELECT DISTINCT ((t0.c17 COLLATE RTRIM) ISNULL) FROM rt0 WHERE ((NOT (CASE NULL  WHEN x'' THEN NULL WHEN '991944751' THEN '-433420948' WHEN '0.7175126424524269' THEN x'7d17' END))) GROUP BY UPPER(((rt0.c6) NOT BETWEEN (t0.c1) AND (rt0.c4))), rt0.c1, '	(';SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((TOTAL(vt0.c0)))) FROM rt0, t0;SELECT DISTINCT CASE ((('')) NOT BETWEEN ((t0.c57)) AND ((t0.c17)))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (t0.c1)) THEN ((rt0.c5) NOT NULL) WHEN ((t0.c1)==(rt0.c4)) THEN ((rt0.c3)<<(rt0.c2)) WHEN CASE WHEN t0.c57 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c5 COLLATE NOCASE ELSE ((rt0.c2) BETWEEN (0.3828182555906322) AND (rt0.c4)) END FROM vt0, rt0 WHERE (((0x7ec4a4cc)<>(x'0989')) COLLATE BINARY);SELECT ALL (((t0.c1) IS FALSE) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ('5勒yk{dwn' IN ((((t0.c17)) BETWEEN ((rt0.c5)) AND ((rt0.c5))))), ((NULL)OR((((0.9712505762225672))==((t0.c2))))), CAST(MIN(rt0.c4) AS INTEGER) FROM rt0;SELECT CASE ((t0.c1)|(t0.c1))  WHEN (- (rt0.c1)) THEN (rt0.c6 IN (-49501213)) END, (((((((((rt0.c4)OR(rt0.c2)))AND(t0.c57)))OR(rt0.c3)))OR(rt0.c1)) IN (((rt0.c6)LIKE(x'')))), vt0.c0 FROM t0 WHERE (((((((((((x'')<=(x'4f4966a6')))OR(((x'') NOT BETWEEN ('713686484') AND (0.44842496234685614)))))AND(CASE WHEN 0.984442363775258 THEN NULL END)))OR(((x'') ISNULL))))AND((NULL IN ())))) GROUP BY ((((NULL)||(rt0.c1))) IS FALSE) HAVING ((+ (t0.c57)) IN ());SELECT DISTINCT NULLIF(rt0.c1, (((x'', t0.c1, t0.c17, '1596027861', t0.c17))<=((t0.c1, rt0.c6, rt0.c3, rt0.c4, rt0.c5)))) FROM rt0 WHERE (LOWER(DISTINCT (((0xffffffff8ace8e7a))<=((0Xffffffffc12c7634)))));SELECT SUM(((((rt0.c5)OR(t0.c17)))OR(rt0.c3))) FROM rt0, t0 WHERE (CASE 0.7378353766335056  WHEN 0.9653734083441168 THEN 'eRmᓣb\Fᬄ2' END COLLATE RTRIM) LIMIT 1105170201; -- 0ms;
SELECT rt0.c6 FROM rt0, t0, vt0; -- 1ms;
SELECT DISTINCT ((CAST(rt0.c0 AS TEXT))IS(t0.c57 COLLATE BINARY)) FROM vt0, t0, rt0 WHERE (((0.8076373842304887 COLLATE RTRIM)LIKE(CAST('49297992' AS REAL)))) ORDER BY ((((rt0.c6) BETWEEN (vt0.c0) AND (t0.c57)))=(((rt0.c1)IS(rt0.c1)))) ASC  NULLS LAST, (+ (ABS(DISTINCT rt0.c1))) DESC  NULLS LAST, 0.5936286690617297 COLLATE RTRIM  NULLS FIRST, CAST((rt0.c3 IN (t0.c57)) AS TEXT)  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt0.c0 FROM t0 WHERE ((('Y}D9(I')GLOB(x'')) COLLATE RTRIM) ORDER BY ((((x'')AND(((rt0.c5)%(rt0.c1)))))AND(json_patch(rt0.c5, rt0.c0)));SELECT x'' FROM rt0; -- 0ms;
SELECT DISTINCT MAX(((rt0.c2)LIKE(t0.c2))), (((('F(4|.p') NOT BETWEEN (t0.c1) AND (t0.c2))) ISNULL), CAST(t0.c17 AS INTEGER) FROM vt0, rt0, t0 WHERE ((~ (CAST(0.7097767054377492 AS NUMERIC)))); -- 0ms;
SELECT ALL CASE AVG(rt0.c5)  WHEN rt0.c6 THEN (((t0.c2))=((t0.c2))) END FROM t0, vt0, rt0 WHERE (CASE WHEN (('da') IS FALSE) THEN NULL COLLATE RTRIM ELSE ((x'6faf') BETWEEN (NULL) AND (NULL)) END); -- 0ms;
SELECT (((('-2005451901')>>(rt0.c6)))<(CASE rt0.c3  WHEN vt0.c0 THEN t0.c2 END)) FROM rt0, vt0, t0 WHERE (CAST(((x'')AND(0.40102884789184967)) AS NUMERIC)); -- 0ms;
SELECT ((((((rt0.c2)<>('Q''')))OR(json_patch(t0.c57, rt0.c2))))OR(t0.c17)) FROM vt0;SELECT DISTINCT ((((((((((((((rt0.c1) BETWEEN ('1147695417') AND (0.13384723365286444)))AND(UNLIKELY(t0.c1))))OR((rt0.c0 IN ()))))AND(CASE t0.c17  WHEN rt0.c6 THEN t0.c17 ELSE rt0.c4 END)))AND(TOTAL(t0.c17))))AND(((rt0.c4) ISNULL))))OR(1.207140005E9)), (vt0.c0 IN ()) COLLATE BINARY, (NOT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))) FROM t0, vt0;SELECT DISTINCT 0x386d9bed FROM rt0, vt0 WHERE (CASE WHEN (('-161424305')*(x'')) THEN x'' COLLATE RTRIM END); -- 0ms;
SELECT ALL (((rt0.c2)) BETWEEN ((UNLIKELY(rt0.c4))) AND ((rt0.c3 COLLATE RTRIM))) FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT '' FROM vt0 WHERE (((((('9223372036854775807'))>(('1190168895'))))>=('2006869065' COLLATE NOCASE))); -- 0ms;
SELECT ALL CAST(CASE WHEN rt0.c3 THEN t0.c1 ELSE rt0.c5 END AS INTEGER) FROM vt0;SELECT ALL ((('')) NOT BETWEEN ((rt0.c4)) AND ((CAST(t0.c17 AS INTEGER)))) FROM rt0, vt0, t0; -- 0ms;
SELECT (CAST(rt0.c1 AS REAL) IN ()) FROM rt0 WHERE (((((((505074928) ISNULL))OR((x'' IN (-2099903886)))))OR(((('0.8549510259196651', 0x6996c8c7, NULL))<>((0.39539822098321364, NULL, '1137299458')))))); -- 0ms;
SELECT json_patch('-1e500', rt0.c0), GROUP_CONCAT(UNLIKELY(rt0.c1)) OVER (), CAST((t0.c2 IN ()) AS NUMERIC) FROM t0, rt0 WHERE (((((x'') BETWEEN ('-1293690857') AND (x''))) BETWEEN (CAST(NULL AS NUMERIC)) AND (((NULL)>=(0.1768501612565343))))); -- 0ms;
SELECT ALL TOTAL(CHANGES()) FROM rt0, vt0 WHERE (0.6703678180783214); -- 1ms;
SELECT DISTINCT CAST(MAX(rt0.c4, t0.c57, rt0.c3, rt0.c6) AS TEXT), ROUND((- (rt0.c3)), ABS(t0.c57)), CASE MIN(rt0.c6, t0.c1, rt0.c5, rt0.c3)  WHEN CASE WHEN t0.c2 THEN t0.c57 END THEN (+ (t0.c2)) ELSE rt0.c3 COLLATE RTRIM END FROM t0 WHERE (CAST((NOT ('?%M%Z\rwb')) AS REAL));SELECT ((0.6780672035397334 COLLATE BINARY)!=(t0.c17)) FROM rt0, vt0 GROUP BY ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (t0.c17))) IS FALSE) HAVING MIN(INSTR(rt0.c4, rt0.c0));SELECT DISTINCT ((MIN(rt0.c1)) NOT BETWEEN (rt0.c1) AND ((((t0.c1)) NOT BETWEEN ((rt0.c4)) AND ((t0.c1))))) FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT LAG(((rt0.c5)||((rt0.c2 IN (rt0.c3)))), ((((CAST(rt0.c1 AS NUMERIC))AND(0X75908e4)))OR((+ (rt0.c1)))), rt0.c1) OVER ( ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c4, rt0.c3, t0.c2))>((rt0.c0, rt0.c1, t0.c57))) END), (((t0.c17) NOT BETWEEN ('1895138470') AND (rt0.c5)) IN ()), ((((rt0.c2) NOTNULL))<<((((rt0.c4))>((rt0.c5))))) FROM vt0, rt0;SELECT DISTINCT (((rt0.c6, t0.c2, vt0.c0)) NOT BETWEEN (((NOT (t0.c17)), ((rt0.c1) ISNULL), ((rt0.c1)*(t0.c2)))) AND (((('-17304346') ISNULL), ((t0.c1)IS NOT(rt0.c3)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c57)))))) FROM t0 WHERE (((((((0.19105256030393147)OR(x'')))AND(''))) NOT BETWEEN ((((('0.09117303378928632')OR('*0.췝P [')))OR('-62279532'))) AND (x'f752' COLLATE NOCASE)));SELECT DISTINCT ((((t0.c57)<(t0.c2)))-((rt0.c3 IN ()))) FROM rt0, vt0, t0 WHERE ((((x'')) BETWEEN ((CAST(0.9424362201209013 AS INTEGER))) AND (((+ ('988958580')))))); -- 0ms;
SELECT DISTINCT ((rt0.c6 COLLATE NOCASE)>>(0x3af24f74)), (- (LENGTH(t0.c17))), (~ (CASE WHEN rt0.c4 THEN rt0.c6 ELSE rt0.c6 END)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c6 AS INTEGER))<=(CAST(rt0.c3 AS TEXT))), ((((((rt0.c2)>>(rt0.c0)))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR(rt0.c0)), COUNT(*) OVER () FROM t0, rt0, vt0 WHERE (((NULL) IS TRUE) COLLATE RTRIM) GROUP BY CASE WHEN (((t0.c1)) NOT BETWEEN ((rt0.c6)) AND ((t0.c1))) THEN ((((t0.c17)OR(rt0.c6)))AND(t0.c17)) WHEN (((rt0.c5, rt0.c5, 0.9027849517099839))<((rt0.c6, 0.6097818213737339, rt0.c0))) THEN t0.c2 WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)) THEN rt0.c3 COLLATE RTRIM END HAVING LOWER((NOT (rt0.c6))); -- 0ms;
SELECT ALL CASE WHEN t0.c1 COLLATE BINARY THEN ((rt0.c5) NOTNULL) END, ((CASE WHEN rt0.c4 THEN rt0.c5 ELSE rt0.c5 END)+(((t0.c17)GLOB(vt0.c0)))), (+ (CAST(rt0.c2 AS NUMERIC))), CAST(((((((((t0.c2)AND(rt0.c6)))OR(t0.c1)))AND(rt0.c5)))AND(vt0.c0)) AS BLOB), ((SUM(rt0.c1))+(MIN(rt0.c3))) FROM t0, rt0, vt0 WHERE (((x'') BETWEEN (0x779e6449) AND (x'f319')) COLLATE NOCASE) ORDER BY ((rt0.c1)>((((t0.c17))>=((rt0.c1))))) ASC, (((rt0.c5)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c4 WHEN t0.c2 THEN rt0.c5 END)) AND (((((t0.c17))=((rt0.c1))))))  NULLS LAST, (t0.c2 COLLATE RTRIM IN (((t0.c2) NOT NULL), ((((rt0.c6)OR(t0.c1)))OR(rt0.c3)))) DESC; -- 0ms;
SELECT 1.298030216E9 COLLATE NOCASE COLLATE BINARY, 74859723, NULLIF(CASE WHEN t0.c1 THEN t0.c1 ELSE 0xffffffff9e041e67 END, rtreenode(rt0.c0, vt0.c0)) FROM rt0, vt0 WHERE (((CASE NULL  WHEN NULL THEN x'' WHEN NULL THEN NULL WHEN 0Xffffffffe03f4b0f THEN 466105213 ELSE NULL END)LIKE(x'7214'))) LIMIT -9901443 OFFSET -1206725976;SELECT DISTINCT AVG((((rt0.c2, 0.3812331232185242, rt0.c2))<((t0.c2, t0.c17, t0.c57)))) FROM vt0 WHERE (((((((0.9575605538977842, '1596027861', x'095d'))>=((0.8273704639439858, 'n ', x''))), ABS(0.5126111188794282), (((('')AND('K8d\I')))OR(0.6622063136265226))))==(((NOT (0X25fdff3e)), (NULL IN ()), x'a1a2' COLLATE BINARY)))) GROUP BY ((('-1620164813'))>((rt0.c1 COLLATE BINARY))) HAVING CASE CAST(rt0.c3 AS NUMERIC)  WHEN rt0.c0 COLLATE BINARY THEN (~ (rt0.c2)) END;SELECT DISTINCT ((rt0.c4 COLLATE RTRIM) IS TRUE) FROM vt0, t0, rt0 WHERE (((((((((CAST('-1716547175' AS BLOB))OR(((0.8902134942107915) BETWEEN ('') AND (0.25994146346767455)))))AND((NOT ('\')))))OR((((0xffffffffe956dccc, '1779714636', NULL)) NOT BETWEEN (('1614653882', 'g&0', 0.8594853707172952)) AND ((0.7666416871729933, 0.8549510259196651, 0.31196236524691634))))))AND(TYPEOF(0xffffffff85f55f07)))) ORDER BY (((NOT (t0.c17))) ISNULL); -- 0ms;
SELECT ((TYPEOF(DISTINCT vt0.c0))<=(rt0.c0)), ((NOT (x'')) IN ()), ((CAST(t0.c1 AS NUMERIC)) BETWEEN ((- (rt0.c5))) AND (((rt0.c4) BETWEEN (rt0.c0) AND (t0.c17)))) FROM rt0 NOT INDEXED, t0 WHERE (((x'' COLLATE RTRIM)>(CAST(-1881543034 AS BLOB)))) LIMIT -1985152949;SELECT DISTINCT (((((~ (rt0.c0)))OR((((rt0.c0))<=((rt0.c3))))))AND(TOTAL(rt0.c0))) FROM t0 WHERE (((LTRIM(NULL, NULL))>=(((x'')|('')))));SELECT DISTINCT CASE ((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c6))  WHEN CASE WHEN rt0.c6 THEN t0.c57 ELSE rt0.c5 END THEN LENGTH(0.2834196467673683) WHEN (((rt0.c2))>=((t0.c17))) THEN (rt0.c6 IN ()) WHEN rtreenode(t0.c17, rt0.c4) THEN NULL ELSE (~ (rt0.c1)) END FROM t0, rt0, vt0 WHERE (CASE ((((x'')OR(0Xffffffff985ea5a8)))AND(x''))  WHEN -1824680942 COLLATE NOCASE THEN '-1841871243' WHEN CAST('1123649593' AS TEXT) THEN CASE WHEN 0Xfffffffffbadbd94 THEN '-1071025009' ELSE '1577760598' END WHEN (882770989 IN (0.2997126163628385)) THEN 'V}' COLLATE BINARY ELSE ((((x'')AND(x'')))OR('7xIm8(K_A')) END) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN TRIM(DISTINCT rt0.c0) THEN (NOT (rt0.c5)) WHEN CASE t0.c2  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c3 WHEN t0.c17 THEN x'e22b' END THEN CASE rt0.c6  WHEN 0.719410994571259 THEN rt0.c4 END WHEN (((t0.c1)) NOT BETWEEN ((t0.c57)) AND ((t0.c2))) THEN (rt0.c3 IN ()) END DESC; -- 0ms;
SELECT TRIM(DISTINCT CASE rt0.c1  WHEN '-2092833217' THEN rt0.c1 END, rt0.c0 COLLATE BINARY) FROM vt0 WHERE (((((CASE x'f4e7'  WHEN -1519929140 THEN 0.27328426974583764 ELSE 0x5a11aaa6 END)OR(0.2879546331247189 COLLATE BINARY)))AND(((' lJ\rHt᡿敓')>>(x'b63d'))))) GROUP BY rt0.c6 COLLATE BINARY;SELECT ALL SQLITE_VERSION() FROM t0, rt0, vt0 LIMIT 1051818559 OFFSET 781130790; -- 0ms;
SELECT ALL DENSE_RANK() OVER ( ORDER BY ((((((((((t0.c17) NOT BETWEEN (rt0.c2) AND (rt0.c4)))AND(((t0.c57)==(t0.c1)))))AND((rt0.c4 IN ()))))AND(json_insert(rt0.c2, t0.c1, t0.c2))))AND(((t0.c17)LIKE(vt0.c0))))  NULLS FIRST GROUPS  UNBOUNDED PRECEDING) FROM vt0 WHERE ((((((('718450209')LIKE(x'')))AND(CASE WHEN NULL THEN '-515111985' ELSE NULL END)))AND('334876819'))); -- 0ms;
SELECT ALL (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) IN (((rt0.c0) IS TRUE))) FROM vt0, rt0, t0 WHERE ((((((x'bc2d') ISNULL)))>=(((+ (0.48886851717880364)))))) GROUP BY 0.44302808682422423 HAVING ((((rt0.c0) NOT NULL))=(((((rt0.c4)OR(t0.c57)))AND(t0.c2)))); -- 0ms;
SELECT DISTINCT rt0.c0, (t0.c17 IN ()), '5e壎]' FROM t0 WHERE (CAST(((((((((((((NULL)AND(x'')))AND(x'')))OR('t6L')))OR(x'')))AND(0.1986029763014373)))OR(0.5347766488188281)) AS REAL));SELECT ALL CAST(((rt0.c1)LIKE(t0.c2)) AS NUMERIC) FROM vt0 WHERE (((((((('-687446170')OR(x'')))OR(NULL))))>=((((NULL) BETWEEN ('0.7847534965269455') AND (-6.4237367E8))))));SELECT ALL TOTAL(((rt0.c2) IS FALSE)) FILTER(WHERE ((((vt0.c0)OR(rt0.c3)))+(((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c2))))) OVER (), ((']괤' IN (t0.c2)) IN ()), x'1c0387fa' FROM t0 WHERE (NULL);SELECT ALL json_insert((']mG++7抸u' IN (rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c4 END, rt0.c6 COLLATE NOCASE), ((CASE WHEN rt0.c2 THEN rt0.c5 WHEN x'' THEN vt0.c0 WHEN t0.c17 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END)=(((t0.c57) NOT NULL))), CASE WHEN (((rt0.c2, rt0.c2, t0.c57)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c4)) AND (('8.a?ON', rt0.c0, rt0.c4))) THEN (+ (rt0.c6)) WHEN ((rt0.c2)<<(rt0.c3)) THEN CAST(NULL AS REAL) WHEN TOTAL(rt0.c1) THEN (((t0.c1))<((t0.c1))) END FROM vt0 WHERE (CAST(COALESCE(0.4398006694473251, 0x7e4c27f6, '-1036166678', 'Jg0-^92', NULL, '-1396960735') AS REAL)) ORDER BY CASE WHEN ((rt0.c6) ISNULL) THEN t0.c1 WHEN CAST(rt0.c3 AS NUMERIC) THEN ((t0.c1) IS FALSE) WHEN ((vt0.c0)IS(rt0.c3)) THEN ((t0.c2)>=(t0.c57)) END  NULLS LAST;SELECT ALL rt0.c1 FROM t0, vt0 WHERE (((((NULL)<=(x''))) IS FALSE));SELECT ALL ((CAST(rt0.c3 AS INTEGER))>(x'a5ef')) FROM vt0, rt0, t0 WHERE ((((('846026959')||(0Xfffffffffa6df406)))=(((('3o')) BETWEEN (('-1327825138')) AND ((0X609cb163)))))) LIMIT 1931777179; -- 0ms;
SELECT CASE (t0.c1 IN ())  WHEN NULL THEN t0.c17 END FROM rt0, vt0 WHERE (x'');SELECT DISTINCT COUNT(CASE rt0.c5  WHEN t0.c57 THEN t0.c2 END) FROM rt0, t0 INDEXED BY i45, vt0 WHERE (x''); -- 0ms;
SELECT ALL vt0.c0 FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT '' FROM rt0, t0 WHERE (CAST((((x''))>((0Xffffffffc056dbc2))) AS REAL)); -- 0ms;
SELECT UPPER(DISTINCT ((vt0.c0) NOT NULL)) FROM t0, vt0, rt0 WHERE (((NULL) IS FALSE) COLLATE NOCASE) GROUP BY DATE(t0.c17, rt0.c0, t0.c57) COLLATE BINARY; -- 0ms;
SELECT CAST(t0.c1 AS BLOB) COLLATE BINARY FROM vt0, t0, rt0 WHERE ((((CASE WHEN NULL THEN '' ELSE '1298030216' END))==((NULL)))); -- 1ms;
SELECT DISTINCT ((((((((((rt0.c1)-(rt0.c3)))OR(SUM(rt0.c0))))OR(CAST(t0.c1 AS NUMERIC))))AND((~ (vt0.c0)))))AND((rt0.c0 IN (t0.c2)))) FROM rt0 ORDER BY ((CASE WHEN t0.c17 THEN vt0.c0 WHEN rt0.c6 THEN rt0.c6 WHEN t0.c2 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c6 WHEN NULL THEN rt0.c5 ELSE vt0.c0 END)<>(LTRIM(rt0.c5)));SELECT DISTINCT (((- (rt0.c4))) ISNULL) FROM vt0, rt0, t0 WHERE (CAST(((((x'')AND(0.9320353114665156)))OR(1017312040)) AS INTEGER)) ORDER BY CAST(CAST(rt0.c5 AS INTEGER) AS BLOB) DESC; -- 0ms;
SELECT ((rt0.c3)>=('-1372052535')) COLLATE NOCASE FROM vt0, rt0, t0 WHERE (1644436135); -- 0ms;
SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((t0.c1))))OR(((t0.c57) NOTNULL))) FROM vt0 WHERE (CASE WHEN (('0.5009718154042742')GLOB(0.2739036369596962)) THEN 0.7541385385946879 COLLATE NOCASE WHEN '' COLLATE BINARY THEN x'' COLLATE NOCASE WHEN ((((((((0.6976689660611453)OR(NULL)))AND('988958580')))OR(0.22888520044928795)))AND(0.15032305823551662)) THEN 0Xffffffffc2b82734 END) GROUP BY CAST(rt0.c4 COLLATE BINARY AS NUMERIC) HAVING MIN(((vt0.c0)%(rt0.c2)));SELECT ((((t0.c1)>>(rt0.c1))) NOT NULL), (((CAST('' AS NUMERIC), CAST(t0.c2 AS BLOB), highlight(0.5292945917741704, rt0.c5, t0.c57, rt0.c4)))>=((rt0.c3 COLLATE RTRIM, ((t0.c1)IS(rt0.c0)), ((vt0.c0)>>('HX'))))), (((~ (t0.c2))) NOT NULL) FROM t0, vt0, rt0; -- 0ms;
SELECT rt0.c1, (((((t0.c1, rt0.c6, t0.c2, rt0.c4, rt0.c4)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c0, t0.c17, t0.c57, rt0.c1, t0.c17)))) NOTNULL), CAST(((rt0.c0) NOT NULL) AS REAL) FROM t0, vt0, rt0 WHERE (((NULL COLLATE BINARY)<>((((x'')) BETWEEN (('')) AND ((0x61486f3e)))))); -- 0ms;
SELECT DISTINCT ((HEX(-90206536)) BETWEEN (SUM(rt0.c3)) AND (((t0.c2) NOT BETWEEN (x'') AND (rt0.c1)))) FROM rt0, t0 ORDER BY ((-885271746)AND(((((((((t0.c2)AND(0.6013071505693894)))OR(t0.c2)))OR(rt0.c0)))OR(t0.c1))))  NULLS FIRST, (NOT ((rt0.c4 IN ()))) DESC  NULLS FIRST, CAST(ABS(DISTINCT vt0.c0) AS NUMERIC);SELECT (((highlight(rt0.c0, t0.c1, vt0.c0, rt0.c0), rt0.c2 COLLATE RTRIM, ((NULL)>=(t0.c17))))>((rt0.c1, COUNT(*), rt0.c0))) FROM vt0 INDEXED BY i58 WHERE ((NOT (NULL)) COLLATE RTRIM);SELECT ALL (((rt0.c2, t0.c2, rt0.c5)) BETWEEN (((NOT (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c3 END, ((t0.c1) BETWEEN (vt0.c0) AND (rt0.c3)))) AND ((CASE WHEN rt0.c6 THEN x'' END, ((((((((t0.c2)OR(4.35043117E8)))AND(rt0.c5)))OR(rt0.c2)))AND(rt0.c5)), ((rt0.c4) IS TRUE)))) FROM vt0, rt0, t0; -- 0ms;
SELECT ALL (((vt0.c0)OR('')) IN ()) FROM vt0, rt0, t0; -- 0ms;
SELECT ((((t0.c17) NOTNULL))||(((t0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))) FROM vt0 GROUP BY t0.c1;SELECT DISTINCT (TRIM(rt0.c5) IN ()) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (('2078845457')>>((- (rt0.c6)))), ((((vt0.c0)|('-1311179031'))) IS TRUE), (CASE t0.c57  WHEN t0.c1 THEN NULL ELSE rt0.c2 END IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(t0.c2 COLLATE BINARY AS INTEGER), '1459588786', MAX(((rt0.c2) NOT NULL)) FROM vt0, t0;SELECT DISTINCT json_array(TOTAL_CHANGES(), (+ (0.9270403862363592)), ((((t0.c57)AND(t0.c2)))OR(NULL)), rt0.c1 COLLATE NOCASE) FROM t0, vt0 WHERE (NULL);SELECT ALL (t0.c17 IN ()), ((rt0.c3)IS NOT(t0.c2)), LIKELIHOOD(((((x'')OR(rt0.c1)))OR(rt0.c6)), 0.11972147127582156) FROM t0, vt0;SELECT ALL ((rt0.c3 COLLATE RTRIM) BETWEEN ((((rt0.c3, t0.c2, t0.c1))>((t0.c2, rt0.c3, rt0.c0)))) AND (((rt0.c1)>=(t0.c17)))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT ((((((rt0.c6)OR(rt0.c6)))AND(rt0.c0)))-(((t0.c57) NOTNULL))), ((((((rt0.c4) NOT NULL))AND((~ (t0.c57)))))AND(MIN(rt0.c6))), ((((((rt0.c1)OR(t0.c17)))AND(t0.c57))) NOT BETWEEN (NULL) AND (LIKELY(DISTINCT x''))) FROM vt0, rt0, t0 WHERE ((((0X3f8181c7 IN ()))<=(((x'')>=(x'3c41'))))); -- 0ms;
SELECT DISTINCT NULL, NULL, ((((((vt0.c0) NOT NULL))AND(((t0.c2)>(t0.c2)))))AND(((x'7a5f')&(t0.c17)))) FROM rt0 INDEXED BY i45;SELECT ALL ((rt0.c6 IN (0.26220455955263866)) IN ()), (((NOT (t0.c57))) NOT BETWEEN (TRIM(rt0.c1, t0.c57)) AND (CASE rt0.c2  WHEN vt0.c0 THEN t0.c1 END)), (((AVG(vt0.c0), (((t0.c57))=((vt0.c0))), CAST(rt0.c3 AS INTEGER)))>(('-514524298' COLLATE BINARY, ((((rt0.c1)AND('-916258058')))AND(t0.c17)), COALESCE(t0.c2, rt0.c0)))) FROM vt0 LIMIT -813645754;SELECT ALL CAST(CASE WHEN t0.c17 THEN NULL ELSE t0.c57 END AS NUMERIC) FROM t0; -- 0ms;
SELECT ALL UPPER(DISTINCT CASE t0.c57  WHEN rt0.c0 THEN t0.c17 ELSE rt0.c6 END), 0.07428711644105324, ((((((rt0.c4) NOTNULL))OR(((t0.c57) IS TRUE))))AND((t0.c1 IN ()))) FROM rt0 GROUP BY ((CAST(t0.c17 AS INTEGER))<<((t0.c2 IN ()))), (+ (CAST(t0.c17 AS INTEGER))), (NOT (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c6)))OR(rt0.c1))));SELECT DISTINCT COUNT(*) OVER () FROM t0, vt0, rt0; -- 0ms;
SELECT ALL (((- (rt0.c5)))||((- (rt0.c3)))) FROM rt0 ORDER BY CASE WHEN (('')IS NOT(x'bc72')) THEN (rt0.c1 IN (rt0.c4, rt0.c3)) ELSE x'' END DESC  NULLS FIRST, json_array_length((((0.004893863709846347, rt0.c3, t0.c17))<((9.45097438E8, rt0.c5, t0.c17)))) DESC LIMIT -90206536 OFFSET -405939385;SELECT DISTINCT (NOT (t0.c57)) COLLATE RTRIM FROM t0 GROUP BY (NOT (((((((((t0.c1)OR(t0.c1)))AND(rt0.c6)))OR(rt0.c0)))AND('Xw'))));SELECT CAST(CASE WHEN rt0.c1 THEN t0.c17 ELSE t0.c17 END AS NUMERIC) FROM t0, vt0, rt0; -- 0ms;
SELECT ALL rt0.c2 COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT ALL (((('477939477') BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (MIN(t0.c57)) AND (NULLIF(vt0.c0, rt0.c3))) FROM rt0, t0 UNION SELECT DISTINCT ((CAST(rt0.c2 AS INTEGER))==(vt0.c0 COLLATE RTRIM)) FROM vt0, rt0, t0;SELECT DISTINCT (CAST(rt0.c1 AS NUMERIC) IN ()), ((CASE WHEN t0.c2 THEN rt0.c4 WHEN t0.c17 THEN rt0.c6 WHEN rt0.c3 THEN x'42b8' WHEN t0.c57 THEN rt0.c3 WHEN rt0.c0 THEN t0.c17 ELSE vt0.c0 END)>(((t0.c17)IS(t0.c1)))), ((((0x598de273)AND(t0.c57)))OR(((vt0.c0) NOTNULL))) FROM rt0, vt0, t0 WHERE ((+ ((((0.8810078907277765)) BETWEEN ((x'')) AND ((0.12718800657947815)))))); -- 0ms;
SELECT DISTINCT ((rt0.c3)*(t0.c17)) COLLATE RTRIM FROM t0 WHERE (((CASE WHEN x'' THEN 0x10de18d7 ELSE NULL END) IS FALSE));SELECT ((UNLIKELY(DISTINCT rt0.c6))LIKE(CASE 0.5870865639223654  WHEN t0.c2 THEN rt0.c4 ELSE rt0.c3 END)) FROM rt0 FULL OUTER JOIN t0 ON (~ (0Xffffffffc5716df4)) FULL OUTER JOIN vt0 ON ((x'')LIKE(highlight(rt0.c5, rt0.c2, t0.c1, t0.c17))) GROUP BY ((((((((t0.c1)OR(rt0.c2)))OR(t0.c57)))OR((((rt0.c2))=((vt0.c0))))))AND((rt0.c2 IN ()))) HAVING (((((rt0.c2))==((vt0.c0))))=(((rt0.c0)+(vt0.c0))));SELECT ((t0.c1) ISNULL) COLLATE BINARY, ROW_NUMBER() OVER (), CAST(((((-1.028118732E9)AND(rt0.c3)))OR(rt0.c2)) AS REAL) FROM t0, vt0, rt0 GROUP BY 0.10063274105854025, 0.8641082288770319, vt0.c0; -- 1ms;
SELECT ALL ((((rt0.c3)+(t0.c1))) NOTNULL) FROM rt0 WHERE ('Sz6b3CC&') ORDER BY (((- (t0.c1))) BETWEEN (((x'')%(vt0.c0))) AND ((t0.c1 IN ()))) ASC;SELECT ALL ((SUM(rt0.c3)) IS FALSE) FROM t0, rt0, vt0 WHERE (((0.8304284316627997 COLLATE NOCASE) BETWEEN ((('-8730233') NOT BETWEEN ('hv') AND (x''))) AND (((((0.9801101568901923)OR('')))OR(''))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c1))) FILTER(WHERE ((((rt0.c1)OR(rt0.c3)))=((('-90206536') NOT BETWEEN (vt0.c0) AND (rt0.c2))))) OVER () FROM vt0 WHERE (((CAST(x'5dba' AS NUMERIC)) IS FALSE));SELECT ALL AVG(ABS(DISTINCT t0.c2)) FILTER(WHERE CASE WHEN ((t0.c57) NOT BETWEEN (rt0.c5) AND (rt0.c0)) THEN (~ (vt0.c0)) ELSE (NOT (t0.c1)) END) OVER () FROM rt0, t0;SELECT DISTINCT TOTAL(CAST(t0.c17 AS BLOB)) OVER () FROM rt0 WHERE (((((')*plCo')>=('532868406')))+(NULL COLLATE BINARY)));SELECT DISTINCT COUNT(*) OVER () FROM rt0 WHERE (CAST(((-787494598)<=(x'')) AS INTEGER)) LIMIT 637402942 OFFSET -716785079; -- 0ms;
SELECT DISTINCT (((~ (rt0.c0)))%(rt0.c4 COLLATE RTRIM)) FROM t0, rt0, vt0 WHERE (((((0.4383086744864202)<=('C60V V ')))/(((x'022c') NOT BETWEEN (NULL) AND (-760396481))))) LIMIT -1604097581 OFFSET -783792389; -- 0ms;
SELECT DISTINCT ((IFNULL(DISTINCT rt0.c3, rt0.c6))>(rt0.c3)) FROM rt0, vt0, t0 ORDER BY ((((((((CASE rt0.c1  WHEN t0.c2 THEN NULL WHEN rt0.c3 THEN t0.c57 WHEN rt0.c1 THEN t0.c1 ELSE rt0.c0 END)OR(((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c6)))AND(rt0.c3)))AND(vt0.c0)))))OR(((vt0.c0)|(rt0.c1)))))OR(((rt0.c4)IS NOT(rt0.c5)))))OR(((((t0.c1)AND(rt0.c0)))AND(t0.c17))))  NULLS FIRST LIMIT -294064953; -- 1ms;
SELECT ALL DENSE_RANK() OVER (), ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c2) BETWEEN (t0.c17) AND (rt0.c6))) AND (CAST(rt0.c2 AS BLOB))), vt0.c0 FROM t0, rt0;SELECT DISTINCT (((((((rt0.c6))>((rt0.c5))))OR((((rt0.c5, NULL, rt0.c4)) NOT BETWEEN ((t0.c2, rt0.c6, rt0.c3)) AND ((t0.c2, t0.c17, t0.c2))))))OR(((vt0.c0)AND(rt0.c4)))), (0.23756147643198755 IN ((((t0.c57)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), NULL)), ((((CAST(NULL AS REAL))AND(rt0.c6 COLLATE RTRIM)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) FROM vt0, rt0, t0 WHERE ((((((((((('') IS FALSE))AND('\]')))AND(((x'')+('')))))OR((('523807671')LIKE(NULL)))))AND(((((0.3007358457558521)AND(0X613e521c)))OR(NULL))))); -- 0ms;
SELECT ((((NULL) BETWEEN (rt0.c6) AND (rt0.c6)))<=(rt0.c4)) FROM t0 WHERE (((((x'5e4d') NOTNULL)) IS TRUE));SELECT ALL (((t0.c1 IN ())) BETWEEN (((((rt0.c6)OR(vt0.c0)))OR(rt0.c6))) AND (((((vt0.c0)OR(rt0.c3)))OR(x'')))) FROM vt0 INDEXED BY i58, t0, rt0;SELECT ALL NULL, DENSE_RANK() OVER (), ((COUNT(*)) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (CASE WHEN t0.c2 THEN t0.c17 ELSE rt0.c1 END)), TOTAL((t0.c2 IN ())), t0.c1 FROM t0 LIMIT 1528144354 OFFSET -90206536;SELECT ((TOTAL(t0.c17))|((rt0.c3 IN ()))) FROM t0; -- 0ms;
SELECT (NOT (((rt0.c5)=(t0.c1)))) FROM t0;SELECT DISTINCT CASE (vt0.c0 IN ())  WHEN ((t0.c17) NOTNULL) THEN CAST(t0.c57 AS TEXT) ELSE rt0.c5 COLLATE NOCASE END FROM t0, rt0, vt0 GROUP BY ((rt0.c0)GLOB(t0.c57)) COLLATE NOCASE HAVING ((rt0.c4 COLLATE BINARY)<(t0.c2 COLLATE RTRIM)) LIMIT -1324747593 OFFSET 731845033; -- 0ms;
SELECT DISTINCT ((((rt0.c6 IN (rt0.c2, rt0.c3)), CASE WHEN rt0.c4 THEN t0.c17 ELSE vt0.c0 END, rt0.c1 COLLATE BINARY))<(((t0.c57 IN (rt0.c6)), ((rt0.c3)<>(rt0.c6)), ((rt0.c3) NOT BETWEEN (t0.c2) AND (0.4983423282524676))))) FROM vt0, t0, rt0 WHERE (((('r9ZRy')/('Ub앗N')) IN (0.26874097717034806 COLLATE RTRIM, LOWER(DISTINCT NULL)))) LIMIT 2078845457; -- 0ms;
SELECT CAST(rt0.c4 AS TEXT), 0X16d0f184, CUME_DIST() OVER () FROM rt0, vt0 WHERE (((x'' COLLATE NOCASE) NOT BETWEEN ('#Y*?{F') AND (0.3061960460227362))); -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED(((t0.c17)LIKE(t0.c57))) FROM rt0 WHERE (x'') LIMIT -859782353;SELECT DISTINCT (((((rt0.c2)IS(rt0.c0))))>((((rt0.c6) NOT BETWEEN (rt0.c6) AND (rt0.c0))))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c3 FROM t0, vt0 LIMIT 945147628 OFFSET -1167152827;SELECT DISTINCT x'55be' FROM vt0, rt0 WHERE ((((((((0.9063530102792594)) NOT BETWEEN (('lw<sj(63+)6')) AND (('0.09117303378928632'))))OR((('*|')<>(NULL)))))OR(((1977451089)>=(NULL))))); -- 0ms;
SELECT DISTINCT CAST(0.33058473344097306 AS INTEGER) COLLATE BINARY, (NOT ((rt0.c1 IN ()))), ((((((((((rt0.c5)||(t0.c17)))OR((rt0.c1 IN ()))))OR(GROUP_CONCAT(rt0.c0))))OR(COUNT(*))))AND(rt0.c2)) FROM rt0, vt0, t0 WHERE (UPPER((~ (-60805363)))) ORDER BY LOWER(DISTINCT ((vt0.c0) IS FALSE)); -- 0ms;
SELECT ((vt0.c0)IS(rt0.c1 COLLATE BINARY)) FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT CAST(((NULL)AND(rt0.c1)) AS REAL), NULLIF(DISTINCT CAST(t0.c2 AS NUMERIC), CASE t0.c57  WHEN rt0.c5 THEN t0.c57 END), CASE NULLIF(t0.c17, rt0.c4)  WHEN ((vt0.c0) IS FALSE) THEN ((((t0.c1)AND(rt0.c3)))AND(rt0.c3)) ELSE rt0.c3 COLLATE NOCASE END FROM rt0;SELECT DISTINCT (~ (((((rt0.c6)AND(rt0.c1)))OR(rt0.c0)))), (((+ (t0.c57))) BETWEEN (CASE WHEN '0.5515665248547299' THEN rt0.c2 END) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3))))), 'S+' FROM rt0 GROUP BY ((((rt0.c0) BETWEEN (t0.c17) AND (rt0.c0)))>(((t0.c57) IS TRUE))) HAVING (~ (CAST(rt0.c5 AS INTEGER)));SELECT ((vt0.c0)+(CASE WHEN t0.c57 THEN rt0.c4 END)), ((((((t0.c2)+(t0.c57)))OR((~ (t0.c57)))))AND((~ (rt0.c3)))), (((((t0.c1, t0.c57, rt0.c2))=((t0.c17, t0.c17, t0.c1))))/((((rt0.c5, t0.c2, rt0.c3, vt0.c0, x''))!=((vt0.c0, rt0.c2, x'', t0.c2, vt0.c0))))) FROM rt0 LIMIT 71674901 OFFSET 432569178;SELECT DISTINCT CASE ((rt0.c3) ISNULL)  WHEN AVG(rt0.c5) THEN 0xffffffff88d011a9 ELSE (- (rt0.c3)) END, CASE (t0.c17 IN ())  WHEN TIME(NULL, rt0.c1, rt0.c2) THEN rt0.c2 ELSE CAST(t0.c17 AS REAL) END, (rt0.c4 IN ()) FROM vt0, rt0;SELECT CASE (- (x''))  WHEN ((rt0.c0) BETWEEN (1567692947) AND (rt0.c1)) THEN (~ (x'235d')) WHEN TOTAL(t0.c2) THEN ((t0.c2)-(t0.c1)) WHEN (~ (t0.c2)) THEN ((((t0.c57)AND(0Xffffffffd7aa773e)))OR(t0.c17)) ELSE CAST(rt0.c0 AS INTEGER) END FROM vt0, t0, rt0; -- 0ms;
SELECT ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((((rt0.c0))<=((t0.c1)))) AND ((((x'')) BETWEEN ((t0.c1)) AND ((rt0.c2))))) FROM rt0, t0 WHERE ((((((((((('')OR(0.8877594713281786)))AND(1.596027861E9)))OR(NULL)))AND('-566510631'))) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE t0.c57  WHEN x'' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END ELSE (rt0.c4 IN (rt0.c4, t0.c1)) END FROM vt0 WHERE ((((((0.09631710093705326)) NOT BETWEEN ((x'')) AND ((0X1b35116)))) NOTNULL));SELECT DISTINCT -1485120973 FROM vt0, t0 WHERE (CAST(LAST_INSERT_ROWID() AS REAL)); -- 0ms;
SELECT MIN(((((t0.c17)AND(t0.c1)))OR(vt0.c0))) FROM rt0, t0 WHERE (((((('weekday')AND(x'4745')))OR('-1327825138')) IN ()));SELECT (- ((rt0.c1 IN (rt0.c1)))), ((((t0.c2) BETWEEN (rt0.c6) AND (t0.c2))) BETWEEN ((rt0.c6 IN (rt0.c5))) AND (rt0.c0 COLLATE RTRIM)), '/-' FROM t0, vt0, rt0 ORDER BY ((NULL) BETWEEN (((vt0.c0)-(vt0.c0))) AND (((rt0.c4) NOT BETWEEN (t0.c1) AND (rt0.c4)))) ASC; -- 1ms;
SELECT ALL COUNT((+ (vt0.c0))) OVER (), TRIM((t0.c17 IN ())), (((rt0.c1)) BETWEEN ((((((rt0.c6)OR(vt0.c0)))AND(rt0.c2)))) AND ((CASE -642373670  WHEN rt0.c5 THEN vt0.c0 END))) FROM vt0, t0 WHERE (UNLIKELY(DISTINCT CAST('' AS NUMERIC))) ORDER BY ((CASE rt0.c5  WHEN t0.c2 THEN rt0.c4 WHEN t0.c2 THEN t0.c1 WHEN x'' THEN t0.c2 END)<>(((rt0.c6) NOT BETWEEN (t0.c1) AND (t0.c57)))), CASE WHEN ((t0.c2)GLOB(t0.c57)) THEN CASE rt0.c6  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c1 END END DESC  NULLS FIRST, ((((rt0.c3) BETWEEN (t0.c57) AND (vt0.c0))) BETWEEN (t0.c2 COLLATE NOCASE) AND (((rt0.c4)&(t0.c17)))) DESC;SELECT ALL AVG('x}%m.I()s') OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) IS TRUE))AND((((t0.c2))>((t0.c57))))))OR((rt0.c0 IN ()))) FROM t0, rt0 GROUP BY CASE ((vt0.c0)%(rt0.c5))  WHEN '-351538982' THEN ((((((((((((rt0.c0)OR(rt0.c6)))OR(vt0.c0)))OR(rt0.c3)))OR(rt0.c1)))OR(t0.c2)))OR(t0.c17)) ELSE t0.c1 END;SELECT DISTINCT t0.c1 FROM vt0, t0, rt0 ORDER BY HEX(SUBSTR(NULL, t0.c2)) DESC; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) IS TRUE)) FILTER(WHERE (((rt0.c1) BETWEEN (NULL) AND (rt0.c1)) IN ((- (rt0.c4)), ((vt0.c0)/(rt0.c4))))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM rt0, vt0, t0; -- 0ms;
SELECT ALL ((CAST(t0.c1 AS BLOB)) NOTNULL) FROM vt0, t0, rt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE (JULIANDAY(((0Xffffffffae3823c9)*('p뻜X6H1fᩫ')), (NOT (x'')), -2.79266452E8 COLLATE BINARY)); -- 0ms;
SELECT 0.3665159153851234 COLLATE RTRIM FROM rt0, t0, vt0 WHERE ((NOT (((0.3499030356771403) NOT BETWEEN (x'') AND (x''))))) LIMIT 202282420 OFFSET -1331826446; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, t0; -- 0ms;
SELECT ALL ((rt0.c5 COLLATE RTRIM) BETWEEN ((rt0.c0 IN (t0.c1))) AND (((rt0.c0) NOT NULL))) FROM vt0 WHERE ((CASE 0.16046211971569813  WHEN 'q' THEN x'' ELSE 'Su' END IN ()));SELECT DISTINCT PERCENT_RANK() OVER (), (((rt0.c4, rt0.c2, rt0.c0)) BETWEEN (('', CAST(rt0.c0 AS NUMERIC), rt0.c1 COLLATE NOCASE)) AND ((vt0.c0, (+ (rt0.c3)), t0.c2 COLLATE RTRIM))), (~ (CAST(t0.c2 AS NUMERIC))) FROM rt0;SELECT ALL TOTAL((rt0.c2 IN ())) OVER (), TYPEOF(((rt0.c1)IS(rt0.c3))), (+ (((rt0.c2)*(t0.c1)))) FROM rt0, vt0 WHERE ((((0.4569400907685762)) BETWEEN ((NULL)) AND ((((-1.485120973E9) IS FALSE)))));SELECT DISTINCT ((((((((((rt0.c5)OR(t0.c1)))AND(t0.c57)))OR(t0.c17)))OR(rt0.c4))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((+ (t0.c17)))) FROM vt0 WHERE (('' COLLATE RTRIM IN ()));SELECT x'0fd2' FROM t0 WHERE (TRIM(((0.47344230237351803)LIKE(x'')), LAST_INSERT_ROWID())); -- 0ms;
SELECT DISTINCT ((((rt0.c6)>=(rt0.c2)))|((((('39UJ')OR(rt0.c0)))OR(t0.c17)))) FROM vt0, rt0 WHERE ((((x'')) NOT BETWEEN (((('0.8284003004410112')&(0.5824230825142477)))) AND (((((x'13365ed8')) NOT BETWEEN ((NULL)) AND ((x'')))))));SELECT CASE WHEN ((((rt0.c4)AND(vt0.c0)))OR(rt0.c3)) THEN (rt0.c3 IN (rt0.c6, rt0.c6)) END, CASE WHEN x'' COLLATE NOCASE THEN ((((rt0.c3)OR(rt0.c2)))AND('FE ZOᛏ0Z')) ELSE ((t0.c17) BETWEEN (rt0.c2) AND (rt0.c2)) END, ((t0.c1)<(rt0.c5)) COLLATE NOCASE FROM vt0, rt0;SELECT DISTINCT GROUP_CONCAT(((rt0.c6)>=(rt0.c6))) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT AVG(NULL) OVER ( ORDER BY TIME(rt0.c2, ((((rt0.c4)AND(rt0.c1)))AND(rt0.c1)), ((rt0.c6)GLOB(rt0.c5))), CASE t0.c57  WHEN rt0.c2 THEN t0.c2 WHEN t0.c17 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 END COLLATE RTRIM) FROM rt0, t0, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((((((((+ (rt0.c6)))AND((+ (rt0.c6)))))AND(COUNT(t0.c17))))OR((+ (rt0.c5)))))OR(((rt0.c2)>(t0.c2)))) FROM t0, rt0 WHERE ((((0.04621035612208324 IN ())) NOT BETWEEN (CAST('1585644633' AS TEXT)) AND (((0Xffffffffb18882c8) ISNULL)))); -- 0ms;
SELECT -2006174460 FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT CASE rt0.c2  WHEN ((rt0.c3) NOT NULL) THEN ((((rt0.c5)AND(rt0.c1)))AND(vt0.c0)) ELSE ((('-431026426')) BETWEEN ((rt0.c6)) AND ((t0.c2))) END FROM t0, rt0;SELECT DISTINCT MIN(((((((((rt0.c0)AND(t0.c1)))OR(rt0.c0)))AND(x'')))OR(rt0.c2))) FROM rt0;SELECT ((((t0.c17) NOT BETWEEN (rt0.c4) AND (rt0.c2))) NOT BETWEEN (((t0.c17) IS TRUE)) AND (((rt0.c4) IS TRUE))) FROM vt0 WHERE (CASE '' COLLATE RTRIM  WHEN (('2銪')AND(NULL)) THEN 0x683d1937 WHEN x'' COLLATE BINARY THEN CASE 0.7158804133736894  WHEN 0.43174452722135026 THEN x'' WHEN 0xffffffffee1b28da THEN NULL WHEN 0.7297131427557477 THEN -1719910685 END WHEN ((NULL) NOT BETWEEN (0xffffffff9313363a) AND ('972980406')) THEN ((((0.5596036997926267)AND(-8.20832502E8)))OR(0.11083267555860843)) ELSE NULL END);SELECT ALL ((t0.c57 COLLATE NOCASE)>>((((rt0.c4)) BETWEEN ((t0.c17)) AND ((rt0.c3))))) FROM rt0, t0; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM t0, rt0, vt0 WHERE ((((((((((('0.8577586606363445')AND(x'2e0d')))OR(NULL)))OR('1432474524')))AND(-566510631))) BETWEEN (('' IN ())) AND (((('1971753417')) NOT BETWEEN (('R+')) AND ((1.453706632E9)))))); -- 0ms;
SELECT ALL (((((t0.c57))>=((rt0.c0))))/(CASE WHEN 0.9607395916387488 THEN rt0.c5 END)) FROM rt0, vt0 WHERE ((((x'f6f1' COLLATE NOCASE))<>(((((('')AND('')))OR(x''))))));SELECT ALL (((t0.c17 IN ())) IS TRUE) FROM rt0 WHERE (CASE (NOT ('naLJ~\3'))  WHEN ((((((((0x2a634b63)AND(0.22872404902531485)))AND('675091279')))AND(0.6837006685084098)))OR(x'')) THEN ((0.2538514846625435) NOT BETWEEN (x'') AND (0.004736953159347745)) ELSE CASE x''  WHEN 0.7969635835615062 THEN 'c' END END); -- 1ms;
SELECT ALL ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN t0.c17 THEN t0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN NULL THEN rt0.c4 END)<(TOTAL(t0.c2))) FROM rt0, t0, vt0 LIMIT -1246782062; -- 0ms;
SELECT DISTINCT ((rt0.c1 IN ()) IN ()) FROM t0, vt0 LIMIT -115650029; -- 0ms;
SELECT DISTINCT COUNT(UPPER(rt0.c0)) OVER ( ORDER BY LOWER(CAST(NULL AS NUMERIC)) ASC  NULLS FIRST, ((0x21e5a5ad) NOT BETWEEN (vt0.c0) AND (rt0.c5)) COLLATE RTRIM DESC  NULLS LAST) FROM vt0, rt0, t0 WHERE ((((x'')) NOT BETWEEN ((((('-1129406143', NULL, x'5d41')) BETWEEN (('-1078307347', 0.725396798076624, NULL)) AND ((1643974421, 0.6085572669807966, x'edc9a2b0'))))) AND ((CASE '暆<-Z띈횕W'  WHEN 0Xffffffffcdd3f718 THEN NULL END)))) LIMIT 1453706632; -- 0ms;
SELECT (((NOT (rt0.c2)))&(((rt0.c5)*(rt0.c4)))) FROM vt0, rt0, t0; -- 0ms;
SELECT ALL (((- (vt0.c0)))IS NOT(DATE(rt0.c3, t0.c17, rt0.c4))) FROM t0, vt0;SELECT ALL ((rt0.c4) IS FALSE) COLLATE RTRIM FROM t0;SELECT DISTINCT rt0.c0 FROM vt0, rt0, t0 WHERE (((CAST('D' AS BLOB)) NOT BETWEEN (x'22af') AND ((~ ('6윕'))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c17 THEN rt0.c3 END) NOTNULL), LOWER(((rt0.c2)<>(rt0.c4))), ((t0.c57)-(t0.c1)) COLLATE RTRIM FROM rt0, vt0 WHERE (CASE WHEN (0.23422763693188864 IN ()) THEN ((0.029978488205798404) BETWEEN (245743777) AND ('')) END);SELECT ALL (~ (COUNT(*))), ((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c3)) COLLATE RTRIM, CASE WHEN CASE WHEN '\,p岐J''1L' THEN t0.c1 ELSE rt0.c6 END THEN (t0.c2 IN ()) ELSE ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c5)) END FROM vt0;SELECT ALL CASE (t0.c1 IN ())  WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN TRIM(rt0.c5, rt0.c2) END, ((rt0.c3 IN (vt0.c0)) IN ()), ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c6)))OR(((rt0.c0)|(rt0.c2)))))AND(((((rt0.c3)OR(rt0.c2)))AND(rt0.c5)))) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT (((- (t0.c2))) ISNULL) FROM rt0, vt0 WHERE (((('289476924') NOT NULL) IN (CASE 'WKSQR'  WHEN NULL THEN x'' END)));SELECT DISTINCT (((rt0.c5 COLLATE RTRIM))>(((NULL IN ())))), MAX(rt0.c2), CAST(rt0.c5 AS INTEGER) COLLATE NOCASE FROM vt0 WHERE (CASE WHEN ((NULL)>=(NULL)) THEN CASE WHEN x'' THEN 'ﵛw\nv' ELSE x'' END ELSE ((x'') ISNULL) END);SELECT DISTINCT ((CASE WHEN t0.c2 THEN rt0.c6 ELSE rt0.c3 END) NOTNULL) FROM t0, vt0, rt0 WHERE (HEX((+ (x'ab85')))); -- 0ms;
SELECT CUME_DIST() OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL (((rt0.c6, t0.c1, t0.c1))<((vt0.c0, t0.c1, rt0.c6))) COLLATE BINARY, COUNT(*) OVER (), ((((t0.c2)&(rt0.c3)))<>(CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c57 THEN vt0.c0 END)), (((vt0.c0))<((t0.c57 COLLATE BINARY))), COUNT(*) OVER () FROM vt0, rt0, t0 WHERE ((((x'')) BETWEEN (((((0.8273704639439858)) NOT BETWEEN ((NULL)) AND (('0.23422763693188864'))))) AND ((CAST(-923168571 AS REAL))))) ORDER BY t0.c57 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c6, t0.c2, rt0.c6))<=((rt0.c1, rt0.c4, rt0.c3))) IN ()) FROM vt0, rt0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT ((('1770087086') BETWEEN (rt0.c4) AND (rt0.c6)) IN (-88174230, ((rt0.c6)IS NOT(t0.c57)))), (((rt0.c0)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((ABS(DISTINCT rt0.c1)))), PERCENT_RANK() OVER (), CASE WHEN ((t0.c2)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) END, ((MIN(t0.c57))IS(SUM(rt0.c3))) FROM vt0;SELECT (((((t0.c2, rt0.c4, t0.c2, rt0.c4, t0.c17, rt0.c4, rt0.c5)) BETWEEN ((x'1b16', rt0.c4, t0.c57, rt0.c2, rt0.c4, t0.c57, rt0.c5)) AND ((t0.c1, t0.c2, rt0.c1, rt0.c0, NULL, t0.c17, NULL))))-((- (t0.c1)))) FROM t0, rt0, vt0; -- 0ms;
SELECT ALL rt0.c2 FROM vt0;SELECT LIKELY('?	兖|Z') FROM vt0, rt0 WHERE ((((NULL IN ()))GLOB(((0X4cc5e5ba)-(0.417927514123575))))); -- 0ms;
SELECT DISTINCT ((rt0.c1)+((((vt0.c0))>=((rt0.c4))))) FROM rt0 NOT INDEXED;SELECT DISTINCT ((((t0.c17)/(vt0.c0)))GLOB(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c5)))) FROM rt0;SELECT COUNT(*) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE TIES) FROM t0 WHERE ((((0.7214502846780038)) NOT BETWEEN (((('1.MAr矪S㩂') NOT NULL))) AND (((('-1485120973') NOT BETWEEN (NULL) AND (NULL)))))); -- 0ms;
SELECT ((CAST(rt0.c0 AS INTEGER))+(MIN(rt0.c0))), ((CAST(t0.c57 AS TEXT))IS(t0.c1 COLLATE BINARY)), CASE (((rt0.c0))<=((t0.c57)))  WHEN ((t0.c2)/(rt0.c6)) THEN ((((rt0.c3)AND(t0.c17)))AND(rt0.c4)) END FROM rt0, t0, vt0; -- 0ms;
SELECT rt0.c5 FROM vt0, t0 LIMIT -1767233314;SELECT DISTINCT (((- (1068847541))) IS FALSE), ((((rt0.c2)==(285399975))) IS TRUE), ROW_NUMBER() OVER () FROM vt0;SELECT DISTINCT rt0.c6 FROM t0, vt0 GROUP BY (~ (NULLIF(rt0.c5, rt0.c2))) HAVING ((CAST(rt0.c2 AS NUMERIC))<<(((rt0.c1) NOT BETWEEN ('1792416654') AND (rt0.c2))));SELECT DISTINCT (((+ (t0.c1))) IS FALSE) FROM rt0 WHERE ((((0.8796896281636507 IN ()))GLOB((x'' IN ()))));SELECT DISTINCT CASE ((rt0.c3)GLOB(rt0.c0))  WHEN rt0.c2 THEN TOTAL(t0.c57) WHEN (rt0.c6 IN (t0.c2)) THEN ((((((((rt0.c5)AND(t0.c17)))OR(t0.c57)))OR(rt0.c3)))AND(rt0.c0)) WHEN (('1108503076')|(rt0.c0)) THEN TOTAL(rt0.c4) ELSE json_insert(rt0.c4, t0.c57, t0.c1, rt0.c4, t0.c57, vt0.c0, rt0.c1) END, ((~ (rt0.c2)) IN ()), (NOT ((((rt0.c3))<=((vt0.c0))))) FROM vt0, rt0 WHERE (((((((((((x'')>(NULL)))AND(NULL COLLATE RTRIM)))AND(x'')))OR(((NULL)<>(-4.05939385E8)))))AND(((x'')GLOB(NULL))))) ORDER BY (~ (rt0.c1 COLLATE BINARY)) ASC;SELECT DISTINCT ((rt0.c3)LIKE(t0.c1)) COLLATE NOCASE FROM vt0, t0 WHERE (((0.4399808580888448)>=((((('-1220689239')OR(0.6510945633583036)))OR(0xffffffff9643c0bf)))));SELECT DISTINCT TYPEOF(((t0.c17) BETWEEN (rt0.c6) AND (rt0.c2))), ((((rt0.c6) NOT BETWEEN (rt0.c4) AND (vt0.c0)))||((NOT (t0.c1)))), (~ (COUNT(*))) FROM rt0, t0 WHERE (CAST(((x'') NOT BETWEEN (0.595640233096996) AND (0.9916766490793241)) AS NUMERIC));SELECT ALL -932991117, ((rt0.c3) ISNULL), ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c6)))OR((vt0.c0 IN ()))))AND(((rt0.c0) BETWEEN (vt0.c0) AND (t0.c17)))) FROM rt0, vt0, t0 WHERE (0.731236483794386 COLLATE RTRIM); -- 0ms;
SELECT COUNT(((((0.4105089975975792)AND(t0.c57)))OR(rt0.c2))) OVER ( ORDER BY (+ (((rt0.c3)<<(rt0.c3))))  NULLS LAST) FROM rt0 WHERE (((((('0.3907629857616206') IS TRUE)))<>((((0.9026736372441637)<<('912567951'))))));SELECT ((((rt0.c3) IS TRUE))&(rt0.c1 COLLATE RTRIM)), CASE ''  WHEN rt0.c3 THEN ('0.4165638054825528' IN ()) END, ((((CAST(t0.c1 AS INTEGER))OR(CAST(rt0.c6 AS NUMERIC))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT (~ (t0.c57)) FROM rt0;SELECT ALL ((rt0.c0)*(rt0.c4 COLLATE BINARY)) FROM t0, vt0 WHERE (((INSTR(NULL, x'be2f'))GLOB((- (x'')))));SELECT (((t0.c2)) NOT BETWEEN ((rt0.c6)) AND ((t0.c17))) COLLATE NOCASE, GROUP_CONCAT((t0.c2 IN (rt0.c6))), (- (rt0.c5)) FROM rt0;SELECT DISTINCT LAST_VALUE((((rt0.c2, rt0.c5, rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)), (((rt0.c3, rt0.c3, 0.9231967191428071))<=((rt0.c4, rt0.c5, rt0.c1))), 'zNm7')) AND ((LAST_INSERT_ROWID(), ((((rt0.c1)OR(rt0.c5)))AND(rt0.c5)), ((rt0.c1)>(rt0.c5)))))) OVER ( ROWS ((CAST(t0.c17 AS REAL))+(NULLIF(rt0.c3, rt0.c6))) PRECEDING), (((((((((((((NOT (t0.c57)))OR((t0.c2 IN ()))))AND(CASE t0.c2  WHEN rt0.c6 THEN rt0.c1 END)))OR((((NULL, x'bd8b', rt0.c2)) NOT BETWEEN ((rt0.c5, t0.c2, t0.c2)) AND ((rt0.c6, rt0.c3, t0.c2))))))AND(((t0.c2) BETWEEN (0.5164006937640059) AND (rt0.c1)))))OR(((rt0.c5) NOT BETWEEN (t0.c2) AND (NULL)))))AND(COUNT(*))), rt0.c2 FROM rt0 WHERE (((((1.729492207E9) BETWEEN (1830541668) AND (0X25dedb16)))/(LIKELIHOOD(NULL, 0.7122490160616906))));SELECT DISTINCT LIKELIHOOD(((rt0.c0) NOT BETWEEN (rt0.c6) AND (t0.c1)), 0.1574426363363849) FROM t0 WHERE (CASE WHEN (((x'', 0X34357902, '.%p췝1dxy')) NOT BETWEEN (('', '', '625053415')) AND (('', '', 0.6916040039098208))) THEN (((((((('')OR(0.604945267481629)))AND('1040975597')))AND(NULL)))AND(NULL)) ELSE (((NULL)) BETWEEN ((0X5cb42e0e)) AND ((NULL))) END);SELECT ALL CAST(GROUP_CONCAT(rt0.c0) AS REAL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT '-689920087', ((CAST(vt0.c0 AS TEXT))<=('-1146135652')), (((rt0.c6)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((IFNULL(rt0.c2, 'W쨚3\nhi')))) FROM vt0, rt0, t0 WHERE ((+ (((((((((1771489479)OR('-1394431738')))OR(0.48226645156566594)))AND('1207140005')))OR('-647495956'))))); -- 3ms;
SELECT DISTINCT 0.328889302382375 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c3)OR(t0.c17)))OR(t0.c1)) IN (((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c5)), ((rt0.c1)OR(rt0.c5)))) WHERE ((((('789656919', 0Xffffffffea6f5640, x'')) BETWEEN (('', 'es', 'R>Iog/2px')) AND ((NULL, '-635280688', x'6d8c'))) IN (((0.8423455521061654)<('쳬ᮒ_l*扯')), load_extension('853322566', '873308024'))));SELECT ((json_array_length(rt0.c5))|(((rt0.c4)+(rt0.c4)))) FROM vt0, rt0 LIMIT -1387864408;SELECT TIME(rt0.c5 COLLATE NOCASE, t0.c1, (rt0.c2 IN ()), ((rt0.c6) NOT BETWEEN (rt0.c5) AND (t0.c2)), (+ (rt0.c3))), 5.23807671E8, (CASE WHEN t0.c1 THEN t0.c57 ELSE NULL END IN ()), ((((((rt0.c4)OR(vt0.c0)))AND(rt0.c5)))>>((~ (rt0.c5)))), ((((((0.8086234613192052)OR(t0.c17)))AND(t0.c17)))IS(SUM(rt0.c4))) FROM vt0, t0, rt0 WHERE (LAST_INSERT_ROWID()); -- 1ms;
SELECT DISTINCT UPPER(CAST(rt0.c2 AS TEXT)) FROM rt0 LEFT OUTER JOIN vt0 ON (- (((vt0.c0)IS(vt0.c0)))) RIGHT OUTER JOIN t0 ON ((((vt0.c0)AND(t0.c1)))AND(t0.c1)) COLLATE NOCASE WHERE ((NULL COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t0.c1) OVER () FROM rt0, t0, vt0 GROUP BY NULL HAVING ((((rt0.c5)OR(rt0.c6))) IS FALSE); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) IS TRUE), 0.02292617915985895, CASE WHEN ((((rt0.c2)OR(vt0.c0)))AND(NULL)) THEN CAST(rt0.c5 AS BLOB) WHEN LOWER(NULL) THEN ((t0.c17) IS TRUE) WHEN (t0.c17 IN ()) THEN LOWER(-2091058642) END FROM t0, vt0, rt0; -- 0ms;
SELECT FIRST_VALUE(((CASE WHEN rt0.c5 THEN rt0.c2 END) NOT NULL)) OVER ( ROWS x'' PRECEDING EXCLUDE GROUP) FROM vt0, rt0, t0 WHERE (((CAST(-2.139397946E9 AS BLOB))|(('[' IN ())))) LIMIT -788705235 OFFSET 840667778;SELECT DISTINCT CASE WHEN CASE WHEN t0.c57 THEN '縤v뚔3z\n+f' END THEN HEX(t0.c2) END FROM rt0, vt0, t0 WHERE ((((('1059503708')) BETWEEN ((0.19975980510106495)) AND (('471215824'))) IN ())); -- 0ms;
SELECT DISTINCT NULL, ((NULL) BETWEEN (((((t0.c57)AND(t0.c1)))AND(vt0.c0))) AND ((((rt0.c3))<=((x''))))), '-1841871243' FROM rt0, vt0 WHERE ('1118566144');SELECT (+ (rt0.c3)) FROM vt0, t0, rt0 GROUP BY INSTR(t0.c57, ((rt0.c1)!=(t0.c1))); -- 1ms;
SELECT DISTINCT CASE WHEN (~ (vt0.c0)) THEN TOTAL(rt0.c6) ELSE (rt0.c6 IN ()) END FROM vt0, t0 WHERE (CAST(((((((((1.093555045E9)OR('1175430650')))AND(NULL)))AND('')))OR(x'')) AS BLOB));SELECT ALL CASE WHEN ((rt0.c0) IS FALSE) THEN (~ (rt0.c4)) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c5) NOT NULL) WHEN ((((rt0.c3)AND(-710651112)))AND(rt0.c6)) THEN CASE WHEN x'' THEN rt0.c4 END END, (~ (CAST(t0.c17 AS NUMERIC))), ABS(DISTINCT ((((t0.c1)AND(rt0.c3)))OR(rt0.c3))) FROM vt0;SELECT DISTINCT ((((((((((rt0.c5)OR(t0.c57)))OR(t0.c2)))OR(vt0.c0)))AND(NULL))) NOT BETWEEN (json_object(rt0.c2, rt0.c3, rt0.c0, rt0.c6)) AND (((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)))) FROM vt0, rt0;SELECT ((t0.c17) IS FALSE) FROM rt0, t0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((((('1902655791'))<((vt0.c0)))) NOTNULL)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT t0.c1 FROM t0, rt0 WHERE (CAST((((-90206536, '-1485120973', NULL))<>((x'8ecc', NULL, '1817174194'))) AS BLOB)) GROUP BY CASE WHEN (((vt0.c0, rt0.c0, rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3, rt0.c0, rt0.c6, rt0.c6)) AND ((rt0.c4, t0.c2, -1.263322767E9, rt0.c1, rt0.c0))) THEN (+ (rt0.c4)) WHEN ((t0.c2) ISNULL) THEN CAST(rt0.c2 AS NUMERIC) WHEN CAST(rt0.c2 AS NUMERIC) THEN LAST_INSERT_ROWID() ELSE CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c4 END END;SELECT ALL (NOT ('-1054804')), (+ (NULL)), (~ (rt0.c1 COLLATE NOCASE)) FROM vt0, t0, rt0 LIMIT -15836670; -- 0ms;
SELECT ALL ((x'')>>(t0.c1 COLLATE RTRIM)), TOTAL((rt0.c3 IN ())), CASE rt0.c2 COLLATE NOCASE  WHEN AVG(rt0.c2) THEN ((rt0.c2) IS FALSE) ELSE CASE rt0.c1  WHEN t0.c1 THEN rt0.c6 WHEN t0.c57 THEN rt0.c6 WHEN t0.c2 THEN rt0.c4 ELSE t0.c1 END END FROM vt0 WHERE ((((- (0.4069273526642234)))OR((('0.18580561588720856')+(' _''D')))));SELECT DISTINCT (((((rt0.c3) IS TRUE)))!=((CAST(t0.c1 AS REAL)))), ((CASE t0.c17  WHEN rt0.c5 THEN t0.c57 END) BETWEEN (CASE rt0.c5  WHEN rt0.c1 THEN t0.c2 END) AND (((NULL) NOT BETWEEN (t0.c17) AND (t0.c2)))), ((CAST(']kk>' AS NUMERIC)) NOT NULL), CAST(((t0.c17) NOT BETWEEN (t0.c1) AND (t0.c1)) AS INTEGER), (((0.7521529292299617 IN (rt0.c4)))AND((~ (t0.c1)))) FROM t0, rt0, vt0; -- 1ms;
SELECT DISTINCT 0.582840562719014 FROM t0, rt0, vt0; -- 0ms;
SELECT ALL SQLITE_SOURCE_ID(), CASE ((t0.c17) NOTNULL)  WHEN CAST(rt0.c6 AS REAL) THEN ((rt0.c2) NOT BETWEEN (x'2901') AND (rt0.c6)) WHEN ((t0.c17)<=(rt0.c0)) THEN ((rt0.c6)IS(rt0.c1)) WHEN COUNT(rt0.c1) THEN CASE WHEN t0.c2 THEN rt0.c1 WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END ELSE (((rt0.c6, rt0.c2, rt0.c0)) BETWEEN ((t0.c1, rt0.c4, rt0.c1)) AND ((t0.c1, t0.c1, vt0.c0))) END, CASE LIKE(rt0.c0, rt0.c2, '.')  WHEN IFNULL(t0.c1, rt0.c1) THEN (NOT (t0.c57)) END FROM vt0, t0 WHERE (CAST('IT	9' AS NUMERIC));SELECT DISTINCT rt0.c1 FROM t0;SELECT DISTINCT t0.c57 FROM rt0 WHERE (((((((0.4210026204920465)AND(x'')))AND(NULL)))<((((('-1028118732')AND(NULL)))OR(0.7750190241499026)))));SELECT ALL COUNT(*) FILTER(WHERE (((t0.c17)) NOT BETWEEN ((((t0.c57)<=(rt0.c0)))) AND (('kL23%')))) OVER () FROM t0, rt0, vt0 WHERE ((((1546091747)) BETWEEN (((x'' IN ()))) AND ((((x'')-(NULL)))))) GROUP BY ((t0.c1)<>(((rt0.c3) BETWEEN (t0.c17) AND (t0.c57)))), ((((t0.c2)<=(rt0.c2)))/(rt0.c1 COLLATE NOCASE)), ((HEX(DISTINCT rt0.c3)) IS FALSE); -- 0ms;
SELECT ROW_NUMBER() OVER ( ORDER BY HEX(DISTINCT ((t0.c17)OR(rt0.c5))) ASC RANGE (NOT (CASE WHEN t0.c1 THEN rt0.c4 WHEN rt0.c4 THEN t0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END)) PRECEDING) FROM t0, rt0, vt0 GROUP BY (((t0.c1 IN (t0.c1))) IS FALSE), ((((vt0.c0 IN (t0.c1)), (((rt0.c4)) NOT BETWEEN ((t0.c2)) AND ((t0.c57))), 0Xfffffffffc98b537))>((((rt0.c1) NOT BETWEEN (rt0.c4) AND (t0.c57)), (NOT (rt0.c4)), CAST(t0.c57 AS TEXT)))), (((rt0.c3) BETWEEN (rt0.c0) AND (t0.c2)) IN ()) HAVING JULIANDAY((((vt0.c0, t0.c1, rt0.c0)) BETWEEN ((rt0.c4, t0.c57, rt0.c0)) AND ((rt0.c1, t0.c57, '334876819'))), json_insert(vt0.c0, t0.c17, t0.c17), CASE rt0.c1  WHEN rt0.c5 THEN '0.5496294240421539' END); -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND (((((t0.c1))<=((rt0.c4)))))) FROM rt0, t0, vt0; -- 0ms;
SELECT ALL IFNULL(DISTINCT t0.c2, ((t0.c1)+('1518785288'))) FROM t0, rt0, vt0; -- 0ms;
SELECT (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c2 THEN rt0.c2 END))==(((rt0.c1 IN ())))) FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c2 ELSE NULL END)*(NULL)) FROM t0, vt0;SELECT DISTINCT LEAD((~ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))), CAST(CASE t0.c2  WHEN rt0.c6 THEN rt0.c3 END AS REAL), '') OVER (), 0.9424362201209013, ((((rt0.c2)||(rt0.c5))) BETWEEN (((rt0.c1)>=(rt0.c2))) AND (t0.c17 COLLATE BINARY)) FROM t0, rt0, vt0 WHERE (IFNULL((((NULL))<=((NULL))), (('-1309198130')OR(0.5434394126753106)))); -- 1ms;
SELECT ALL CAST(rt0.c2 COLLATE RTRIM AS REAL) FROM rt0, vt0, t0 WHERE (CASE WHEN (+ (NULL)) THEN 1.059503708E9 END); -- 0ms;
SELECT DISTINCT (((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL) FROM vt0, rt0; -- 0ms;
SELECT ALL ((rt0.c2 COLLATE RTRIM)GLOB(((t0.c57)>>(rt0.c0)))) FROM vt0, rt0;SELECT DISTINCT ((CASE t0.c57  WHEN t0.c57 THEN rt0.c1 END)|(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)))) FROM vt0, rt0, t0 ORDER BY ((((rt0.c5)||(t0.c1)))!=((((rt0.c0, rt0.c1, t0.c57))<=((rt0.c4, vt0.c0, t0.c1))))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN t0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN t0.c17 THEN rt0.c6 END)OR(((rt0.c6)+(t0.c17)))))OR(MIN(rt0.c2))))AND(rt0.c1 COLLATE RTRIM)))OR(((vt0.c0)=(rt0.c5)))) FROM t0, vt0;SELECT DISTINCT (((NOT (vt0.c0))) ISNULL) FROM t0, vt0, rt0 WHERE (((CASE '476566283'  WHEN 0Xffffffffe475e14b THEN NULL ELSE '-1408622312' END)*('b(&#Ol' COLLATE BINARY))) GROUP BY ((((((t0.c57)OR(rt0.c3)))AND(0X30247661))) IS FALSE); -- 0ms;
SELECT DISTINCT t0.c2 FROM t0, vt0 FULL OUTER JOIN rt0 ON (((((~ (rt0.c6)))AND(((t0.c1)&(t0.c2)))))OR(((t0.c1)>>(rt0.c2)))); -- 0ms;
SELECT ALL ((json_object(rt0.c1, vt0.c0))&(((NULL)<(rt0.c6)))) FROM rt0 NOT INDEXED WHERE ((0X5e830459 IN ('-1662995004')) COLLATE BINARY);SELECT ((((rt0.c5) IS FALSE)) BETWEEN (t0.c57 COLLATE NOCASE) AND (CAST(rt0.c4 AS REAL))) FROM vt0;SELECT ALL (((t0.c2)%(rt0.c6)) IN ((+ (t0.c57)))), ((((GROUP_CONCAT(NULL))OR((('761920164') BETWEEN (t0.c57) AND (t0.c17)))))AND(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt0.c0)))), ((((t0.c17)-(rt0.c4)))<>(CAST(x'' AS INTEGER))) FROM rt0, vt0 WHERE (x'');SELECT COUNT(*) FILTER(WHERE ((rt0.c1 IN ()) IN ())) OVER (), ((((rt0.c6) IS TRUE)) NOT BETWEEN (LTRIM(t0.c2, rt0.c4)) AND ((t0.c2 IN ()))), json_insert(t0.c57, rt0.c4, CAST(rt0.c0 AS TEXT), CAST(t0.c1 AS NUMERIC), CAST(rt0.c2 AS BLOB)), ((((rt0.c1) BETWEEN (t0.c1) AND (t0.c17))) BETWEEN ('-182417052' COLLATE BINARY) AND (rt0.c5 COLLATE RTRIM)), ((CASE WHEN rt0.c6 THEN rt0.c1 END) BETWEEN (COUNT(*)) AND (((rt0.c2)<(rt0.c5)))) FROM t0 WHERE ((((((((((('319557857')OR(0.5147222910584714)))AND(x'')))AND(0.730475574873795)))AND(x''))) ISNULL));SELECT NULL FROM rt0, t0; -- 0ms;
SELECT DISTINCT (NOT ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))), highlight(((t0.c1)%(0.21040964855927602)), rt0.c6 COLLATE RTRIM, (('-698907536')==(-1.372052535E9)), 8.42312009E8), ((0.7096599322996193)OR(rt0.c6 COLLATE RTRIM)) FROM vt0, rt0, t0 WHERE ((((0.654748177503674 IN ()))GLOB(((((NULL)OR('')))AND('-932991117'))))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c2) BETWEEN (NULL) AND (rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT (CAST(rt0.c2 AS INTEGER) IN ((rt0.c0 IN ()))), COALESCE(DISTINCT ((rt0.c3)IS NOT(rt0.c4)), CASE vt0.c0  WHEN rt0.c2 THEN t0.c2 ELSE NULL END), ((0X10e2d96d)=(rt0.c1 COLLATE NOCASE)) FROM rt0 WHERE (CAST(((NULL) NOT BETWEEN ('-1206725976') AND (NULL)) AS BLOB)) GROUP BY (((rt0.c6)) NOT BETWEEN ((((rt0.c5) NOT BETWEEN (t0.c2) AND (rt0.c4)))) AND ((NULL))), CASE WHEN (t0.c17 IN ()) THEN ((rt0.c5)||(t0.c17)) END, ((json_valid(rt0.c6))AND(rt0.c1)), (((((((t0.c17))<>((rt0.c0))))OR((('	\nTAx')OR(t0.c1)))))AND(CASE t0.c2  WHEN 0.6049890823477644 THEN t0.c57 ELSE rt0.c3 END)), ((((t0.c1) NOTNULL))OR(((((t0.c1)AND(rt0.c5)))OR(rt0.c4)))), (((rt0.c6)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c1 END)) AND ((CAST(rt0.c3 AS REAL)))), ((((((((CASE rt0.c5  WHEN t0.c17 THEN rt0.c0 END)AND(((t0.c2)GLOB(t0.c2)))))OR(rt0.c4)))OR(COALESCE(rt0.c3, vt0.c0))))OR(((rt0.c1)==(vt0.c0))));SELECT ALL PERCENT_RANK() OVER (), CASE WHEN ((t0.c17)<(rt0.c2)) THEN CAST(t0.c1 AS BLOB) END, UNICODE(((rt0.c3) NOT BETWEEN (rt0.c1) AND (1.059503708E9))) FROM vt0;SELECT CAST(((vt0.c0)|(rt0.c0)) AS NUMERIC) FROM t0, rt0, vt0; -- 0ms;
SELECT ((x'') NOT BETWEEN (MAX(rt0.c3)) AND (t0.c2)) FROM rt0, vt0, t0 WHERE ((+ (x'b9b6' COLLATE NOCASE))) ORDER BY CAST((+ (rt0.c6)) AS TEXT); -- 0ms;
SELECT DISTINCT ((((t0.c1)>=(t0.c1)))IS NOT(((t0.c2)|(rt0.c5)))) FROM rt0, vt0, t0 LIMIT -998003470 OFFSET 1064973402; -- 0ms;
SELECT DISTINCT ABS(CASE rt0.c3  WHEN t0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c17 THEN rt0.c6 WHEN rt0.c1 THEN t0.c1 WHEN rt0.c4 THEN rt0.c2 END), ((((t0.c2)+(rt0.c5)))*(CAST(rt0.c4 AS INTEGER))), ((((rt0.c3)||(rt0.c1)))/((vt0.c0 IN ()))) FROM vt0, rt0 WHERE ((((x'a5d9')) NOT BETWEEN ((x'')) AND (((+ (NULL)))))) GROUP BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c4)<(t0.c1))) AND (rt0.c6 COLLATE RTRIM));SELECT ALL ((((CASE WHEN x'' THEN vt0.c0 END)OR(rt0.c4)))AND(((t0.c2)<(NULL)))) FROM rt0 INDEXED BY i73, t0, vt0 WHERE ((((NULL, 'D\r盋sZ<E\r', NULL)) NOT BETWEEN ((((-2086143765) IS FALSE), (NOT (x'')), CASE x'a491'  WHEN 0.6456598410359495 THEN '-1455939839' END)) AND ((((0.014214783318524549) NOTNULL), (((x''))<=((''))), '379289284' COLLATE RTRIM)))) ORDER BY (rt0.c3 IN ()) ASC  NULLS LAST;SELECT ((rt0.c6 IN (t0.c17)) IN (((t0.c57) BETWEEN (vt0.c0) AND (rt0.c6)))) FROM vt0;SELECT AVG(t0.c57) FILTER(WHERE ((t0.c2)>>(rt0.c6)) COLLATE RTRIM) OVER () FROM t0 WHERE (ABS(DISTINCT 0Xffffffffec492123 COLLATE NOCASE));SELECT DISTINCT t0.c17 FROM vt0, t0; -- 1ms;
SELECT DISTINCT 0.900842162184703 FROM vt0, rt0 WHERE (((CASE x''  WHEN -635280688 THEN x'0eb2' END) BETWEEN ((('0.3971022598651256')LIKE(x'6860'))) AND ((0.4983423282524676 IN ('F膱QS툿4mᝬ', NULL))))) LIMIT 1665274035 OFFSET -696301914; -- 0ms;
SELECT DISTINCT 0xfffffffff4bd7248 FROM vt0; -- 0ms;
SELECT ALL ((((0xffffffffe475e14b) NOT BETWEEN (t0.c2) AND ('')))&(CAST(t0.c1 AS NUMERIC))) FROM t0, rt0, vt0 LIMIT 2006659116 OFFSET 637402942; -- 0ms;
SELECT LAG(vt0.c0, ((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CASE ((vt0.c0)AND('ꥉ<'))  WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN UPPER(DISTINCT vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)<>(vt0.c0)) THEN IFNULL(vt0.c0, vt0.c0) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN (vt0.c0)) ELSE vt0.c0 END) OVER (), (((~ (rt0.c4)))-(rt0.c3)), MAX(rt0.c0), ((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN t0.c57 ELSE rt0.c1 END) NOTNULL), (~ (((t0.c57) NOT NULL))) FROM vt0 WHERE ((CAST(0.12609454739303794 AS BLOB) IN ())) GROUP BY CAST(NULLIF(DISTINCT vt0.c0, t0.c1) AS BLOB);SELECT DISTINCT ((((t0.c1) IS FALSE)) NOT NULL) FROM rt0, vt0;SELECT ((((-2.94064953E8))<=((rt0.c2))) IN (CASE WHEN rt0.c3 THEN rt0.c1 ELSE t0.c2 END)) FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c2)AND(t0.c1)))AND(rt0.c2)))AND(t0.c17)))AND(rt0.c5))) ISNULL) FROM vt0, rt0, t0 GROUP BY ((('-168244581')) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c3 END)) AND ((((x'') ISNULL)))), (('b') BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN t0.c1 ELSE -4.33420948E8 END) AND (RTRIM(rt0.c1))), (((rt0.c0)>=(rt0.c1)) IN ()); -- 0ms;
SELECT (((((rt0.c0)IS(t0.c17))))>((vt0.c0 COLLATE BINARY))) FROM t0, rt0;SELECT DISTINCT t0.c1 FROM vt0, rt0 WHERE (CAST(((-986703326) NOT BETWEEN ('523807671') AND (0.5734259348369625)) AS REAL)) ORDER BY CASE WHEN CASE rt0.c2  WHEN t0.c57 THEN rt0.c0 ELSE x'' END THEN CASE t0.c57  WHEN rt0.c2 THEN rt0.c2 END WHEN ((t0.c17)-(rt0.c2)) THEN 1902655791 WHEN (rt0.c4 IN ()) THEN ((rt0.c2)LIKE(vt0.c0)) ELSE ((rt0.c2) BETWEEN (t0.c1) AND (t0.c17)) END ASC;SELECT (((t0.c2) NOT BETWEEN (NULL) AND (rt0.c4)) IN (((rt0.c3)LIKE(rt0.c5)))) FROM t0 WHERE ((('-244710129') IS TRUE) COLLATE BINARY) ORDER BY (((t0.c57, rt0.c4, rt0.c4)) BETWEEN ((rt0.c4, rt0.c5, rt0.c3)) AND ((vt0.c0, '-2052537312', rt0.c0))) COLLATE NOCASE ASC  NULLS LAST;SELECT ((((1659154761, rt0.c5, vt0.c0)) NOT BETWEEN (('-386213039', rt0.c6, t0.c17)) AND ((t0.c17, rt0.c1, t0.c17))) IN ()) FROM vt0, rt0 WHERE ((((((NULL, '', '8(뗄2')) BETWEEN ((NULL, '', 0.944069785860274)) AND ((0.0313734204700753, '-1391673538', 0.878703944188251)))) IS FALSE)); -- 0ms;
SELECT ((((t0.c17)AND(vt0.c0))) BETWEEN ('') AND (((t0.c17)<(rt0.c2)))) FROM t0, rt0;SELECT DISTINCT rt0.c1, (((- (rt0.c6))) IS TRUE), (~ ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) FROM t0, rt0, vt0; -- 1ms;
SELECT DISTINCT ((((t0.c2)>(rt0.c2)))<((vt0.c0 IN (rt0.c6)))) FROM vt0, rt0, t0 WHERE (GLOB(((NULL) NOT BETWEEN (NULL) AND ('379289284')), ((((((((0.4831293091124339)OR(NULL)))AND('637402942')))OR(NULL)))OR(x'')))); -- 0ms;
