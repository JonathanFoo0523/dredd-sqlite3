-- Time: 2024/06/07 22:41:14
-- Database: database90
-- Database version: 3.40.0
-- seed value: 1835582890
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE t0 (c0 TEXT , c1 INTEGER , c2 BLOB ); -- 2ms;
UPDATE OR IGNORE t0 SET (c0)=(x'f081') WHERE NULLIF(CAST(t0.c2 AS BLOB), json(t0.c2)); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('吏NAb吏-'), (-1.896678946E9), (x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR ROLLBACK INTO t0(c1) VALUES (NULL); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT OR ROLLBACK INTO t1(c2, c1) VALUES (NULL, 0.45826893906851696); -- 0ms;
ANALYZE; -- 0ms;
UPDATE t1 SET c1=0.42283815847101835 WHERE ((((0Xffffffffd173f8e0)>=(t1.c2))) ISNULL); -- 1ms;
PRAGMA main.legacy_file_format = false; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL , c1 INTEGER , c2 INTEGER ); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0xffffffff8f0a762b); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-778685985 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (0.45826893906851696); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (0.3353102370264097), (x''), (NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE (((t1.c1)) BETWEEN (((- (t1.c0)))) AND ((-1890315776 COLLATE NOCASE))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1, c1)=('', x'a832'); -- 0ms;
UPDATE t0 SET c1=NULL; -- 1ms;
PRAGMA busy_timeout = 10000; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
ANALYZE; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
UPDATE OR FAIL t1 SET (c1)=(x'') WHERE (((t1.c2 IN (NULL)))/('1e500')); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c1='Rs', c1=0.3353102370264097; -- 1ms;
UPDATE OR FAIL t0 SET (c1)=(x'') WHERE CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 END COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET c1='0.3353102370264097'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.7928643239605758, c0=-1.896678946E9, c0='0.42283815847101835' WHERE (~ (t0.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=('') WHERE ((t1.c2)+(t1.c1)) COLLATE RTRIM; -- 0ms;
INSERT OR REPLACE INTO t1(c1, c2, c0) VALUES (NULL, '-1890315776', NULL); -- 12ms;
INSERT OR ROLLBACK INTO t0(c1) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET (c2)=(0Xffffffffb323d29b) WHERE ((CASE t0.c0  WHEN t0.c2 THEN t0.c0 END) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) AND (((t0.c2)<<(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('ofY'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.3168894522293403; -- 0ms;
PRAGMA short_column_names; -- 0ms;
UPDATE t1 SET c2='*벏rBe/'; -- 25ms;
UPDATE OR ROLLBACK t1 SET (c2, c0)=(x'', NULL) WHERE ((0.7928643239605758) IS FALSE) COLLATE RTRIM; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(-7.78685985E8); -- 4ms;
DELETE FROM t0 WHERE CAST(((t0.c1)%(t0.c2)) AS BLOB); -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (-631653233); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c42; -- 0ms;
PRAGMA main.defer_foreign_keys = true; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.cache_size = 7947485009121986794; -- 0ms;
UPDATE t1 SET c0='JZROk{a', c2=x'2b36447dcb7c', c1='f{|!|['; -- 0ms;
PRAGMA short_column_names; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c28; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c42)=(x''); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c42) VALUES (0.6500462804740871, NULL); -- 0ms;
UPDATE t0 SET c2='-1890315776' WHERE (((t0.c0)) NOT BETWEEN (((((x'', t0.c2, t0.c0))>((t0.c0, t0.c42, t0.c2))))) AND ((t0.c42))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c28)=(NULL) WHERE ((((t1.c28) NOT BETWEEN (t1.c1) AND (t1.c1))) ISNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-778685985', c1='崐u' WHERE ((t1.c1)>(t1.c2)) COLLATE BINARY; -- 0ms;
PRAGMA threads = -2472583008280043249; -- 0ms;
INSERT OR FAIL INTO t0(c0, c42) VALUES ('-1896678946', NULL); -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
INSERT OR ABORT INTO t1(c28) VALUES (NULL), (NULL), (-2004123273); -- 1ms;
ALTER TABLE t1 ADD COLUMN c69 INT; -- 0ms;
UPDATE t1 SET (c69)=('j(E)'); -- 0ms;
PRAGMA default_cache_size = -1227426409; -- 0ms;
UPDATE OR ROLLBACK t0 SET c42=0.950098092484074, c0=NULL WHERE ((t0.c42)-(t0.c42)) COLLATE RTRIM; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA locking_mode; -- 0ms;
REINDEX; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c1=-1.896678946E9; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c69 TO c57; -- 2ms;
DELETE FROM sqlite_stat1 WHERE 'f9'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.6192654140621339, c2=x''; -- 0ms;
UPDATE OR ROLLBACK t0 SET c2='774356279'; -- 0ms;
INSERT OR ROLLBACK INTO t0(c2, c42) VALUES (0.6196511179542882, NULL); -- 0ms;
ALTER TABLE t0 RENAME TO t2; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT OR IGNORE INTO t1(c1, c2, c28) VALUES ('Bb', 0.9966779516899504, x''); -- 0ms;
CREATE INDEX IF NOT EXISTS i59 ON t1(((((~ (c28))))<((CASE c28  WHEN c2 THEN c2 ELSE c1 END))) DESC,((CAST('-311516160' AS NUMERIC))&(NULLIF(DISTINCT c1, c28))),x'afd7',((((((c57)IS NOT(c28)))OR(x'8ac1')))AND(((c28)/(c2))))); -- 0ms;
INSERT OR REPLACE INTO t2(c0, c2, c42) VALUES (0.44278317059703154, '', NULL), (0.7103994013649539, '', x''), ('-1895139797', x'', NULL); -- 0ms;
PRAGMA main.cache_spill = 7931276139414183261; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CASE CASE WHEN t2.c2 THEN t2.c42 ELSE t1.c2 END  WHEN x'' THEN (t1.c28 IN ()) WHEN ((t1.c57) BETWEEN (NULL) AND (t2.c2)) THEN ((t1.c1)<=(t1.c1)) WHEN t2.c42 THEN ((t2.c2) BETWEEN (t1.c2) AND (t2.c0)) END, LIKELIHOOD(TOTAL_CHANGES(), 0.2567226763322641), TOTAL(((t2.c2)||(t1.c28))) OVER () FROM t2, t1 ORDER BY (((CAST(t1.c1 AS INTEGER)))<=((((t1.c57) NOT BETWEEN (t1.c57) AND (t2.c42))))), CASE WHEN t1.c28 THEN t1.c28 COLLATE NOCASE WHEN ((t2.c0) NOT BETWEEN (t2.c2) AND (t1.c28)) THEN CAST(t1.c28 AS TEXT) WHEN -780928800 THEN ((t1.c28)%(t2.c2)) WHEN (+ (t2.c2)) THEN ((t2.c42) NOTNULL) WHEN ((t1.c1) BETWEEN (t1.c57) AND (t2.c42)) THEN ((((((((t2.c2)OR(0.29381626053360244)))AND(t2.c42)))OR(t1.c1)))AND(t2.c42)) ELSE CASE WHEN t2.c2 THEN t1.c2 ELSE t2.c0 END END ASC  NULLS FIRST, COALESCE('', ((t1.c2) NOT BETWEEN (t2.c2) AND (t2.c42)), ((((((((t1.c57)AND(t1.c28)))OR(t1.c1)))AND(t2.c42)))OR(t1.c1)), t2.c0 COLLATE BINARY)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(t2.c0 COLLATE RTRIM AS NUMERIC), (- (((t1.c57)<=(t1.c28)))), COUNT(*) FROM t1;SELECT DISTINCT ((('774356279'))==(((~ (t1.c1))))), t2.c0, AVG(((t2.c2) NOT NULL)) OVER () FROM t2, t1 GROUP BY (((((((((t1.c1)OR(t2.c42)))AND(t2.c42)))OR(t2.c42)))AND(t1.c2)) IN ()), NULL, CAST(t2.c42 AS NUMERIC) HAVING ((((((((((t1.c57) NOT NULL))OR(TRIM(NULL))))OR(COUNT(t2.c2))))AND((0.753055091161333 IN ()))))AND(SUM(NULL))) LIMIT -333620231; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(LENGTH(NULL)) COLLATE NOCASE, ((t2.c2)<>(t2.c2)) COLLATE RTRIM, (((t2.c2)) NOT BETWEEN ((CASE WHEN t2.c42 THEN t2.c42 END)) AND ((((t2.c0)-(t1.c28))))) FROM t1, t2; -- 0ms;
SELECT DISTINCT ((((t2.c42 IN (t1.c2))))>=((((t2.c42)/(t2.c2))))) FROM t1 ORDER BY CASE t2.c42  WHEN t2.c2 THEN t1.c2 ELSE t1.c2 END COLLATE RTRIM DESC;SELECT DISTINCT TYPEOF(DISTINCT (((t1.c2)) BETWEEN ((t2.c0)) AND ((t1.c1)))) FROM t1 WHERE (TRIM((x'' IN ()), (('0.42283815847101835') BETWEEN (NULL) AND ('')))) ORDER BY (((((t2.c42, t2.c0, t1.c2))<=(('-319225735', t1.c28, t1.c2)))) NOT NULL) DESC;SELECT DISTINCT ((CAST(t2.c2 AS INTEGER))|(((t1.c1)>=(t2.c2)))), '-1895139797', ((('-1895139797'))>=((((((t2.c0)AND(t2.c42)))AND(t1.c1))))) FROM t1, t2; -- 0ms;
SELECT ALL ((((t2.c2) BETWEEN (t1.c1) AND (t2.c42)))>>(((((((((t1.c57)AND(t1.c2)))AND(t1.c57)))AND('jzrok{a')))OR(t1.c57)))) FROM t2;SELECT DISTINCT SUM(((t1.c2)IS NOT(t2.c42))) OVER (), AVG(((t1.c2) NOT BETWEEN (t2.c2) AND (t1.c57))) FILTER(WHERE t1.c1) OVER (), AVG(TOTAL(COUNT(*))) FROM t2, t1;SELECT ((- (t1.c1)) IN ()) FROM t2, t1 WHERE (x'db2a'); -- 0ms;
SELECT t1.c1 COLLATE NOCASE FROM t1 WHERE ((('M|8WPUWF') NOT NULL) COLLATE NOCASE); -- 0ms;
SELECT ((((t1.c2) IS FALSE)) NOT NULL), CASE WHEN (~ (t1.c1)) THEN CAST(t2.c2 AS REAL) END, ((CAST(t1.c2 AS REAL)) ISNULL) FROM t2, t1; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c28 THEN ((t2.c42) IS FALSE) END FROM t2, t1 WHERE ((TYPEOF(DISTINCT '-1391397635') IN ((- ('-1895139797'))))); -- 0ms;
SELECT ALL ((((((((((((((((((t2.c2)OR(t2.c2)))OR(((((((((t1.c28)AND(t1.c1)))OR(t2.c42)))AND(0.43165447850704564)))OR(t1.c57)))))OR(((t1.c57) NOT BETWEEN (t2.c42) AND (t2.c0)))))OR(-1820317954)))OR((t1.c1 IN ()))))OR(CAST(0.7669472649565413 AS REAL))))AND(CASE t2.c0  WHEN t2.c42 THEN t2.c2 ELSE t1.c2 END)))AND((((t1.c57, t2.c0, t1.c2))<=((t2.c42, t2.c0, t2.c42))))))AND(CASE WHEN t1.c2 THEN t2.c0 END)) FROM t2 ORDER BY ((t1.c1 COLLATE RTRIM)-(CAST(t1.c2 AS NUMERIC))) ASC  NULLS FIRST;SELECT DISTINCT json_array_length(SUBSTR(t1.c57, t1.c1)) FROM t1;SELECT LIKELY(((((((((((((t2.c0)AND(t2.c0)))AND(t2.c42)))AND(1821943559)))OR(t1.c28)))OR(t2.c0)))AND(t2.c42))) FROM t1 WHERE (CASE ((x'') NOT NULL)  WHEN (('962375162')-(0xcf1316)) THEN ((((NULL)AND('wa⛾蟕')))AND(x'')) WHEN (0.00737296541260235 IN ()) THEN 1.22314E8 COLLATE NOCASE WHEN TRIM(DISTINCT '-213005089', 'ᛔD') THEN ((NULL)/(NULL)) END);SELECT (('\&2zଯkbn') ISNULL), (- (t1.c2 COLLATE NOCASE)), ((((t1.c57)%(x'25da'))) IS FALSE) FROM t2, t1; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((t2.c42)&(t2.c42))) FROM t2 ORDER BY ((((t1.c1)+(t1.c57))) NOTNULL)  NULLS LAST LIMIT -1896678946;SELECT t1.c2 FROM t2, t1 WHERE (((((((('C\XK2XJyl')AND('Bb')))OR(NULL))))!=(((((0.753055091161333))>((NULL))))))) LIMIT 37257033 OFFSET -367395815; -- 0ms;
SELECT DISTINCT (+ (((t2.c2) NOT BETWEEN (t2.c0) AND (t1.c57)))) FROM t1, t2 WHERE (CAST(INSTR('Ir)쳟', 1821943559) AS REAL)); -- 0ms;
SELECT ALL ((((((((GROUP_CONCAT(t1.c28))AND(CAST(t2.c2 AS BLOB))))OR(((t1.c57) IS TRUE))))OR((~ (t1.c1)))))AND(NULLIF(DISTINCT t2.c2, t1.c2))) FROM t2 WHERE ((((~ ('')))/(((((x'')AND('VVs')))AND(NULL))))) GROUP BY TRIM(DISTINCT (((t2.c42))==((t2.c2))), (((t1.c1)) NOT BETWEEN ((t2.c0)) AND ((t1.c2))));SELECT DISTINCT NULL, ((((t2.c42) ISNULL)) BETWEEN (((t2.c42) NOT NULL)) AND (((t1.c1) NOT NULL))), LAST_VALUE(CASE ((((((((t2.c42)OR(t2.c2)))OR(t2.c42)))AND(t2.c2)))OR(''))  WHEN ((((t2.c42)OR(t2.c2)))AND(t2.c42)) THEN TRIM(t2.c42) END) OVER () FROM t2 WHERE (((CAST(0.05930360312958449 AS REAL))>(x'' COLLATE BINARY)));SELECT ALL TOTAL(TOTAL(COUNT(*))), (((((t2.c2, t2.c0, t2.c2))<((t1.c57, t1.c2, t2.c0))))+(-1.820317954E9)), CASE WHEN x'4f02' THEN ((t1.c57)LIKE('㇟_v+>')) WHEN CAST('122314000' AS TEXT) THEN CASE WHEN t1.c28 THEN t2.c42 WHEN t2.c2 THEN x'' WHEN t1.c2 THEN t1.c57 ELSE t2.c0 END WHEN t1.c1 THEN (((t2.c42))>((t1.c28))) ELSE t2.c2 END FROM t2 WHERE (((LTRIM(0.36933942518519636))+(CASE WHEN '' THEN '' ELSE 327574334 END)));SELECT ALL CHAR(((((((((t1.c1)AND(t2.c0)))OR(0.45826893906851696)))OR(t1.c1)))AND(t1.c57))) FROM t1;SELECT DISTINCT CAST((~ (t1.c28)) AS TEXT), (((t2.c2)) NOT BETWEEN ((COUNT(t1.c28))) AND ((((t2.c42) IS TRUE)))), (0.42283815847101835 IN ((('')&(t1.c1)))), LOWER(DISTINCT t2.c42) COLLATE BINARY, AVG(COUNT(*)) FROM t1 WHERE ((((0.36933942518519636, 0xfffffffffbc48515, NULL)) NOT BETWEEN (((x'' IN ('-680648277', 'ofY')), -1.227426409E9 COLLATE RTRIM, ((0.7954814763342758) NOT NULL))) AND (((('-191839140')<=('-1391397635')), (((NULL)) NOT BETWEEN (('-213005089')) AND ((0.6359009194448736))), (0x630da6c0 IN ())))));SELECT DISTINCT GROUP_CONCAT(t1.c2) COLLATE RTRIM COLLATE BINARY FROM t2 WHERE (CAST(((((((((37257033)AND(-1.391397635E9)))OR(0.19765119158443234)))OR(0.8899613961156683)))AND('')) AS INTEGER));SELECT DISTINCT json_array_length((t2.c42 IN (t1.c2))) FROM t2 WHERE (((CASE WHEN 0.6593725243544918 THEN '-71006955' ELSE 0.23306003022283006 END) NOTNULL)) GROUP BY ((((((((((t2.c0)>(t1.c2)))OR((((t2.c2, t1.c1, t2.c2)) NOT BETWEEN ((t1.c2, t1.c2, t2.c0)) AND ((t1.c2, t2.c0, NULL))))))AND((+ (t1.c2)))))OR(((t2.c0) BETWEEN (t2.c2) AND (t1.c28)))))AND(((t1.c57)>=(t1.c2)))) HAVING TOTAL(t2.c42);SELECT ALL ((COUNT(*)) NOT BETWEEN ((((t2.c42)) BETWEEN ((t2.c2)) AND ((t2.c0)))) AND (((t1.c57)>=(t1.c1)))), (t1.c57 IN ('v')) COLLATE NOCASE, CASE ''  WHEN t2.c42 COLLATE NOCASE THEN ((t2.c2)&(x'')) END FROM t2 WHERE (CAST(((x'')<=(1373506351)) AS INTEGER));SELECT DISTINCT (~ (COUNT(t1.c57))), CASE WHEN (+ (t2.c42)) THEN t1.c28 ELSE ((((t1.c57)OR(t1.c57)))AND(t1.c28)) END, t1.c1 FROM t2, t1 GROUP BY t1.c2, ((((((t2.c0)AND(t1.c28)))AND(t2.c42)))-((t1.c2 IN (t1.c1)))), (((t1.c57, t1.c2, t1.c28)) NOT BETWEEN ((t1.c2 COLLATE NOCASE, ((t1.c28)>=(t2.c0)), (((t2.c2, t2.c42, t2.c42)) NOT BETWEEN ((t1.c57, t1.c28, t1.c2)) AND ((t1.c1, t2.c0, t1.c28))))) AND ((CAST(0.2966729180675294 AS NUMERIC), (+ (t1.c57)), '0.7954814763342758'))); -- 0ms;
SELECT DISTINCT CASE t2.c2  WHEN t2.c2 THEN t2.c0 WHEN t2.c42 THEN t2.c2 WHEN t1.c57 THEN NULL END COLLATE BINARY FROM t2, t1 WHERE ((- ((x'' IN ())))); -- 1ms;
SELECT ALL CAST(t2.c42 AS REAL) FROM t2, t1 GROUP BY CAST(CASE t2.c2  WHEN 0.6875411669184571 THEN t2.c42 ELSE t2.c2 END AS BLOB); -- 0ms;
SELECT ALL NULL FROM t2, t1 WHERE (((((NULL) BETWEEN ('') AND (x'f7a1'))) NOTNULL)) ORDER BY (~ (0Xffffffffae9216d4)) DESC; -- 0ms;
SELECT DISTINCT ((((t1.c2) IS FALSE))IS(((t1.c28)>>(t2.c0)))) FROM t2 WHERE (((CAST(NULL AS REAL))<>(((('-1858342610'))!=((NULL))))));SELECT ALL t1.c1 FROM t2 WHERE (CAST(CASE WHEN NULL THEN 0.5896354072142329 ELSE NULL END AS TEXT));SELECT (((~ ('18643934'))) BETWEEN (0.49747421056513175) AND (((t2.c2)<(t2.c0)))) FROM t1;SELECT DISTINCT 0.8899613961156683, TOTAL(((t1.c28) NOT BETWEEN (t1.c2) AND (t1.c1))), ((t1.c57 COLLATE BINARY) ISNULL) FROM t1 WHERE (((LTRIM(x''))<('' COLLATE BINARY))); -- 1ms;
SELECT CAST(t1.c1 COLLATE NOCASE AS REAL) FROM t1 WHERE (CASE WHEN CASE '0.00737296541260235'  WHEN NULL THEN x'' ELSE 0.3925021967608443 END THEN ((x'ceb6') NOT BETWEEN (NULL) AND ('-1227426409')) END); -- 0ms;
SELECT DISTINCT (~ (t1.c57)) FROM t1, t2; -- 0ms;
SELECT DISTINCT ((- (t1.c1)) IN ()) FROM t1 WHERE (CAST((('\r<') NOTNULL) AS NUMERIC)); -- 0ms;
SELECT (((((t2.c0)>=(t2.c2))))<=((((t1.c57)>>(t1.c57))))) FROM t2 WHERE ((((x'' IN ()))LIKE(((NULL)>=(1466938653)))));SELECT DISTINCT COUNT((t1.c28 IN (t2.c2, t1.c57))) OVER (), CASE (((t2.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c42)))  WHEN (t1.c28 IN ()) THEN CASE '!舵Ek-w*ms'  WHEN t1.c57 THEN t1.c1 END END, ((SUM(t2.c42)) BETWEEN ((((t1.c1))<((t2.c2)))) AND ((((('')AND(t2.c42)))AND(t1.c28)))) FROM t1 ORDER BY (((CAST(t1.c2 AS BLOB)))<>((((((t1.c28)OR(t1.c1)))OR(t1.c57)))))  NULLS FIRST, CASE WHEN ((t1.c28) NOT BETWEEN (NULL) AND (t2.c42)) THEN t2.c0 COLLATE RTRIM WHEN (+ (t1.c57)) THEN (t2.c42 IN ()) WHEN ((t1.c1)%(t2.c42)) THEN t1.c57 COLLATE BINARY ELSE (t2.c0 IN (t1.c2)) END ASC  NULLS LAST, CASE NULL  WHEN ((t1.c57)|(t1.c28)) THEN CASE t2.c2  WHEN t1.c1 THEN t2.c0 END ELSE t2.c2 END DESC  NULLS LAST;SELECT ((- (t1.c57)) IN (CAST(t2.c2 AS NUMERIC))) FROM t2 WHERE (((((0.5896354072142329)OR(-213928203)))AND(0.9784844186399757)) COLLATE NOCASE);SELECT DISTINCT CAST(t1.c2 COLLATE RTRIM AS TEXT), CASE WHEN '1065987322' THEN t1.c1 END, t2.c2 FROM t2 WHERE (((('C#') NOT BETWEEN (x'd871') AND (NULL)) IN ()));SELECT DISTINCT ((((t1.c2)LIKE(t2.c42)))>=((+ (t1.c57)))) FROM t2, t1 ORDER BY CASE WHEN CASE WHEN t1.c1 THEN t2.c0 WHEN t2.c2 THEN t2.c0 WHEN t1.c2 THEN t2.c2 ELSE 0.071088898151355 END THEN CAST(t1.c1 AS NUMERIC) WHEN (((t2.c42, t1.c2, t2.c2)) BETWEEN ((t1.c57, t2.c0, t1.c57)) AND ((t1.c57, t1.c28, t1.c2))) THEN ((((t1.c28)OR(t1.c57)))OR(t1.c57)) WHEN NULL THEN ((0X791d04f1) ISNULL) END  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE (t2.c42 IN (t1.c57, t2.c42))  WHEN 0.7731743727981396 THEN t2.c0 COLLATE NOCASE END, CASE 0.19487329394891828 COLLATE BINARY  WHEN ((t2.c42)<=(t1.c1)) THEN ((NULL) ISNULL) END, CASE WHEN t2.c0 THEN t1.c1 ELSE t1.c1 END COLLATE NOCASE FROM t1 WHERE (((((((((LOWER(NULL))OR(((-1644398053)LIKE(0.2381478776068059)))))OR(((x'')GLOB(NULL)))))OR(NULL COLLATE BINARY)))AND(('-1366157612' IN (x'bcde')))));SELECT (((t1.c2)) NOT BETWEEN ((((t1.c2)-(t1.c2)))) AND ((CASE t2.c0  WHEN t1.c28 THEN t1.c28 ELSE t1.c28 END))), UPPER(t2.c0 COLLATE NOCASE), CASE WHEN ((t1.c2) BETWEEN (t1.c1) AND (t1.c57)) THEN (('100762165')>>(t1.c28)) END, (((t1.c57)) BETWEEN ((((t2.c42)!=(t1.c57)))) AND (((t1.c57 IN ())))), 0.42283815847101835 FROM t2;SELECT DISTINCT NULLIF('Vx', ((((((((t1.c57)OR(t1.c1)))AND(t1.c1)))OR('1466938653')))OR(t1.c2))), (((((t2.c2)!=(t1.c1))))!=((((t2.c0) NOT NULL)))), ((0.07028639161287564) NOT NULL) FROM t2, t1 WHERE (((CAST(NULL AS REAL))>(((('1821943559'))=((0.4548943564747351)))))); -- 0ms;
SELECT DISTINCT ((MAX(t2.c42)) BETWEEN ((t1.c57 IN ())) AND (((t1.c2)*(t1.c57)))) FROM t1, t2 ORDER BY CAST(x'e93e7aa3' AS TEXT) DESC  NULLS FIRST; -- 0ms;
SELECT ((((((((((t1.c2)OR(t1.c28)))AND(t1.c28)))AND(t2.c0)))AND(t2.c42)))<<(((t1.c57)*(t1.c57)))) FROM t2 WHERE ((('1146259413') BETWEEN (x'') AND ('1718996029')) COLLATE RTRIM) ORDER BY ((x'' COLLATE BINARY) BETWEEN ((- (t1.c1))) AND (((t2.c42)<<(t2.c42)))) DESC;SELECT DISTINCT ((((t2.c42)<>(t2.c42)))<=(t2.c42)), ((((t1.c1)OR(t1.c2)))OR(t2.c42)) COLLATE RTRIM, (NULL IN ()) FROM t1, t2 WHERE ((NOT (CASE 0.7103994013649539  WHEN '-28399289' THEN NULL WHEN '1555608111' THEN 'Rs' WHEN '59' THEN 0.3236518609314909 END))) GROUP BY CAST(CASE t2.c2  WHEN t2.c0 THEN t1.c28 END AS INTEGER) HAVING ((CAST(t2.c42 AS REAL)) ISNULL); -- 0ms;
SELECT DISTINCT ROUND(((t2.c42) IS TRUE), COUNT(*)), ((((t1.c1)|(''))) IS FALSE), ((((('-191839140', t2.c42, t1.c1)) BETWEEN ((t1.c2, t2.c2, t1.c1)) AND ((t2.c2, t2.c0, t1.c1)))) NOT NULL) FROM t2 WHERE (((((0.6500462804740871) NOT BETWEEN (NULL) AND (NULL))) IS FALSE)) LIMIT 168228883;SELECT ALL GROUP_CONCAT((NOT (t2.c0))), ((CAST(t2.c42 AS NUMERIC))-(((t1.c2) NOT NULL))), (((((t1.c1 IN ()))AND(CAST(-3.19225735E8 AS NUMERIC))))OR(((t2.c0) NOT BETWEEN (t1.c28) AND (t1.c2)))) FROM t2 GROUP BY CASE WHEN CASE t1.c28  WHEN t2.c42 THEN t1.c57 ELSE t2.c2 END THEN t1.c28 COLLATE BINARY END HAVING t2.c0;SELECT GROUP_CONCAT((((t2.c0)) NOT BETWEEN ((t1.c2)) AND ((t2.c0)))), CASE (t2.c42 IN ())  WHEN LOWER(t2.c2) THEN ((t2.c2) BETWEEN (t2.c42) AND (t1.c57)) END, CASE WHEN (t1.c2 IN ()) THEN (- (t2.c42)) WHEN ((t2.c42)IS NOT(t1.c1)) THEN CASE WHEN t1.c1 THEN t2.c42 END WHEN ((t2.c42) NOTNULL) THEN LOWER(DISTINCT -3.33620231E8) WHEN (((t2.c2)) BETWEEN ((NULL)) AND ((t2.c0))) THEN CAST(t1.c1 AS REAL) WHEN TRIM(DISTINCT t1.c1, t2.c0) THEN COUNT(t2.c42) END FROM t1, t2; -- 0ms;
SELECT DISTINCT (((t1.c1)) BETWEEN ((((((t2.c42)AND(t1.c57)))AND(t1.c2)))) AND ((((t1.c57) BETWEEN (t1.c2) AND (t1.c2))))) FROM t2, t1; -- 1ms;
SELECT DISTINCT CAST(t1.c2 AS BLOB) FROM t1 ORDER BY (((0.23796569387802424) NOTNULL) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t2.c2)=(t1.c1)))GLOB(((t1.c28)>>(t1.c1)))) FROM t2;SELECT DISTINCT ((((CASE WHEN 'y' THEN t1.c2 WHEN t2.c42 THEN t1.c1 WHEN t1.c28 THEN t1.c57 END)OR(CASE WHEN t1.c57 THEN t1.c2 END)))AND(GROUP_CONCAT(t1.c1))) FROM t2, t1 WHERE ((- ((((0.18290015841577345)) BETWEEN ((0.14811911065534222)) AND (('-788130027')))))); -- 0ms;
SELECT DISTINCT t2.c2, ((('.', CASE WHEN t1.c2 THEN t2.c42 END, (- (t2.c0))))=(((t2.c42 IN ()), ((t2.c0)>(t2.c2)), CASE t1.c2  WHEN t2.c0 THEN t2.c0 END))), LOWER(MAX(t2.c2)) FROM t2;SELECT DISTINCT ((NULL) ISNULL) FROM t2, t1 WHERE ((((('-1724776696') NOT BETWEEN (0Xffffffffec06c518) AND ('|vGR2')))>>(((1521189747) ISNULL)))); -- 0ms;
SELECT ALL (((((t1.c1)) BETWEEN ((t1.c2)) AND ((t2.c2)))) IS TRUE), '횷R', ((((t1.c1 IN ())))>((((t1.c57)LIKE(t1.c1))))) FROM t2 GROUP BY (((t2.c0))<((NULL))) COLLATE BINARY, ((t1.c2) NOT NULL) COLLATE NOCASE, (((((t2.c42))>((t2.c0))))/(t1.c2 COLLATE NOCASE));SELECT ALL ((((((t1.c28)IS NOT(t1.c1)))OR((((0.11089700040052208)) BETWEEN ((t2.c0)) AND ((t1.c1))))))AND(CASE WHEN '1521189747' THEN t1.c28 ELSE t1.c57 END)), FIRST_VALUE((((~ (t1.c57))) IS TRUE)) OVER (), 0xffffffffa427e756, (((((t1.c2))<((t1.c2)))) BETWEEN (((t1.c28)&(t1.c28))) AND (AVG(t1.c2))), (+ (UPPER(t2.c2))) FROM t2, t1; -- 0ms;
SELECT ALL (+ (((t1.c57)LIKE(t1.c1)))) FROM t2;SELECT DISTINCT CAST(((t1.c57)*(t2.c42)) AS TEXT), (((t1.c2 IN (t1.c28, t2.c42))) NOTNULL), NTILE((((t1.c1)) BETWEEN ((t1.c1 COLLATE BINARY)) AND ((((t2.c0) BETWEEN (t1.c1) AND (t1.c1)))))) OVER () FROM t1, t2 WHERE ((((x'')) BETWEEN ((UNLIKELY(0.3071377554521655))) AND ((x'' COLLATE BINARY))));SELECT DISTINCT ((- (t1.c57)) IN ()), -1512667884, t2.c0, ((((t1.c28)-(t1.c2)))|(((((t1.c2)OR(t1.c1)))AND(t2.c42)))), (((((t1.c57)) BETWEEN ((NULL)) AND ((t1.c57))))IS((t1.c28 IN (t2.c42)))) FROM t1, t2 WHERE (((((NULL)<<(x'')))IS NOT(((((((((0.3822089318754538)AND(0.7700703971663319)))OR(x'')))OR(0.8773907715850002)))AND('1024234428'))))); -- 0ms;
SELECT DISTINCT ((((t2.c0)IS NOT(t2.c42)))+((+ (x'')))) FROM t1 WHERE (((((CASE NULL  WHEN '327574334' THEN NULL ELSE '#6Y*lL' END)AND((('1924454071')GLOB(x'cee9')))))AND(((0.07757133823738938)OR(x'')))));SELECT ALL ((t1.c57) NOT BETWEEN (t2.c42) AND ('4')), (-367395815 IN ()), NULL FROM t2;SELECT DISTINCT (- ((NOT (x'')))) FROM t2, t1 WHERE (x'bc8f'); -- 0ms;
SELECT ALL COUNT((t1.c2 IN ())) OVER () FROM t1, t2; -- 0ms;
SELECT DISTINCT SUM((((t2.c42, t1.c1, t1.c28)) NOT BETWEEN ((t2.c42, t2.c0, t2.c42)) AND ((t2.c42, t1.c57, t2.c42)))) FROM t2 WHERE (((((x'')AND(x''))) NOT BETWEEN ((((0.7225817986749329))<=((x'5c6a')))) AND ((x'ba20' IN ())))) LIMIT -255415406;SELECT DISTINCT (CAST(t2.c0 AS TEXT) IN ()), IFNULL(((t1.c2) BETWEEN (t1.c28) AND (t2.c0)), (~ (t2.c0))), (((+ (t2.c2))) BETWEEN (t2.c0 COLLATE RTRIM) AND (CAST(t1.c2 AS REAL))) FROM t1, t2; -- 0ms;
SELECT DISTINCT LAST_VALUE(0.11718520162261148) OVER () FROM t2 WHERE ((((- ('-1858629943'))) NOTNULL)); -- 0ms;
SELECT (((((t2.c42)*(t1.c28))))<((t2.c2 COLLATE BINARY))), (+ (((t2.c0)%(t1.c57)))), CASE ((((((((((((t1.c28)AND(t2.c2)))AND(x'11b4')))AND(t2.c0)))OR(t2.c0)))OR(t2.c2)))OR(t1.c2))  WHEN t2.c2 COLLATE RTRIM THEN t1.c1 END FROM t2;SELECT DISTINCT DATETIME(((t2.c0)-(t2.c2)), CAST(t1.c1 AS INTEGER), ((((NULL)OR(t1.c28)))OR(t1.c57))) FROM t1, t2 WHERE (GLOB(((((0x3662d57c)AND('-v')))AND('')), (('-335100648') NOT BETWEEN ('\n-') AND (x'')))); -- 0ms;
SELECT DISTINCT load_extension(((t1.c1)%(t1.c28))), CAST(((t1.c28)!=(t2.c0)) AS BLOB), ((((((((((((t1.c1)AND(t2.c42)))AND(t2.c42)))AND(t1.c28)))AND(t1.c1)))AND(AVG(t2.c42))))AND((~ (t1.c28)))) FROM t2;SELECT ALL CAST(((t2.c0)<=(t1.c1)) AS TEXT) FROM t1, t2 WHERE ((((0.8711009252169548 IN ())) BETWEEN (NULLIF('-1117763867', NULL)) AND (x'a3a6'))); -- 0ms;
SELECT (((((-621152136))>((t2.c2)))) NOT NULL) FROM t2 NOT INDEXED WHERE (TYPEOF(IFNULL(DISTINCT '-1907264932', 0X6675cc3d))) LIMIT -631653233; -- 0ms;
SELECT ALL LOWER(DISTINCT (t1.c1 IN ())), t2.c0, (((((t1.c1)GLOB(x''))))=((((t2.c2)||('J+\^7>)h'))))) FROM t1;SELECT DISTINCT ((CASE t1.c1  WHEN t1.c2 THEN t1.c57 END)==(t2.c2 COLLATE NOCASE)) FROM t2, t1 WHERE (((((x'')*(NULL)))IS NOT(((-1.890315776E9) BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT DISTINCT LEAD(CASE WHEN 'Ib' THEN CAST(t2.c2 AS NUMERIC) END, (((t2.c2 IN ()))>>(NULL)), t2.c42) OVER () FROM t2 WHERE (CASE WHEN '-213928203' THEN x'' WHEN ((x'4f4e0007') BETWEEN (x'') AND (x'')) THEN 0.6160872197123364 WHEN ((0.3201375682543184) NOT BETWEEN ('') AND (0.3085621049424878)) THEN ((x'')&('-213005089')) END) ORDER BY t2.c42 DESC; -- 0ms;
SELECT ((((x'') IS TRUE))|(((t2.c42) BETWEEN (t1.c2) AND (t1.c2)))) FROM t1 LEFT OUTER JOIN t2 ON CAST(CASE 0.47180155771940324  WHEN t1.c57 THEN t1.c1 END AS TEXT); -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT t1.c1 COLLATE BINARY, 0.06261537079113133) FROM t1, t2 WHERE (CASE CASE 0.22085858273376024  WHEN '-842859253' THEN x'ed37' ELSE x'' END  WHEN (('-986848188')*(NULL)) THEN (NOT (0x11f7ce39)) END) ORDER BY 'x#04B '  NULLS LAST; -- 0ms;
SELECT DISTINCT (((~ (NULL))) NOT NULL) FROM t2; -- 0ms;
SELECT DISTINCT (((CAST(t2.c42 AS BLOB)))>(((t1.c57 IN (t1.c2, t2.c0))))) FROM t1, t2 WHERE (((('XeC \rh|Z!' IN ('-1461730912')))AND(CAST(NULL AS BLOB)))); -- 0ms;
SELECT ALL COALESCE(DISTINCT CASE WHEN t2.c42 THEN t1.c1 END, ((t1.c57)>(x'3410')), (((t2.c42))=((t2.c0))), CAST(t2.c0 AS NUMERIC)) FROM t1 WHERE (((NOT (122314000)) IN ())) GROUP BY ((((t1.c1)*(t2.c0))) BETWEEN (((t2.c0) ISNULL)) AND (t2.c0 COLLATE NOCASE));SELECT ALL ((((t2.c0)IS(t1.c2))) IS TRUE) FROM t1 NOT INDEXED, t2 WHERE (CAST(0.1760320718133117 AS REAL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NULL FROM t2 WHERE (CASE '-0.0'  WHEN STRFTIME(NULL, x'', -520177556) THEN (('')IS(NULL)) END); -- 0ms;
SELECT ALL ((t2.c42) IS FALSE) FROM t2 WHERE (CAST(((('Q ', NULL, '*x+JH'))>=((NULL, 1749459244, x'fc8a'))) AS NUMERIC)); -- 0ms;
SELECT ALL t2.c0 COLLATE BINARY FROM t1, t2 WHERE (((- (0.07540337662491359)) IN (NULLIF(DISTINCT '122314000', '-1604484657')))) LIMIT -335100648 EXCEPT SELECT DISTINCT ((((t2.c2)AND(t2.c2 COLLATE RTRIM)))OR(((((t1.c28)AND(t2.c0)))AND(t2.c2)))) FROM t1, t2 WHERE (TRIM(DISTINCT (-2.004123273E9 IN ())));SELECT DISTINCT ((((t1.c2) BETWEEN (t1.c1) AND (t2.c2)))<(((t1.c57)AND(t1.c57)))) FROM t2, t1; -- 0ms;
SELECT DISTINCT AVG(t2.c42) OVER () FROM t1 WHERE (((((((((((((((((x'')AND('#퉧>KcOPf')))AND(x'')))OR(0.8207968934350313)))OR(0Xffffffff8b1e3892)))AND(CAST(0.876901972642636 AS NUMERIC))))AND(CAST(0.36827104338449934 AS REAL))))AND(NULL)))AND(((0.07028639161287564)IS NOT('atz%'))))) GROUP BY ((((t1.c2)*(NULL))) BETWEEN (((t2.c2)OR(t2.c0))) AND (CASE WHEN t1.c57 THEN t2.c0 WHEN t1.c2 THEN t1.c2 WHEN NULL THEN t1.c57 END)) ORDER BY ((((0.2863686173716412)AND((t2.c42 IN (t1.c2)))))OR(t1.c57)) DESC;SELECT ALL (((- (x'')))>=(((0.9459319553542619)AND(t2.c42)))) FROM t1, t2 WHERE ((((-621152136, 'C2%_)뤛눯', '')) BETWEEN ((LIKELIHOOD(-511411888, 0.40031880102825856), ((('0.42283815847101835', '152263826', NULL))<((0xfffffffff0c6ab92, x'8c3c', NULL))), ((0.8899519557083375)%(x'')))) AND ((((NULL)GLOB(x'')), ((x'')LIKE('1795992997')), JULIANDAY(-1.540888746E9, 0xffffffff938026fe, 0.8546316620281421))))); -- 1ms;
SELECT DISTINCT ((MAX(t2.c42)) ISNULL) FROM t2, t1 WHERE (CAST((('') NOT BETWEEN (0.4548943564747351) AND ('D')) AS REAL)); -- 0ms;
SELECT t1.c1 FROM t1, t2; -- 0ms;
SELECT ALL (((((t2.c0))>=((t2.c2))))<<(t2.c0 COLLATE NOCASE)) FROM t2 WHERE (((((SQLITE_COMPILEOPTION_USED('㤺w'))OR(CAST(0.19955235563674734 AS NUMERIC))))OR(((0.5744172189483114)=(0xffffffffae9216d4))))); -- 0ms;
SELECT ALL ((LIKELY(t1.c2)) IS FALSE), COUNT(AVG(-1.96095371E9)) COLLATE BINARY, CASE CAST(t2.c42 AS NUMERIC)  WHEN ((t1.c57)%('NZ3G蜡')) THEN CASE WHEN t2.c42 THEN t1.c2 END END FROM t1, t2 WHERE (((LIKELY(0.21475554440619882)) IS FALSE));SELECT ALL PERCENT_RANK() OVER () FROM t1, t2 WHERE (((0.027074665509871587 IN ()) IN ((('-1917720038') IS FALSE)))); -- 0ms;
SELECT (TRIM(DISTINCT t1.c28, x'c885') IN ()), ((t1.c28) BETWEEN (t2.c42) AND (0.7928643239605758)) COLLATE BINARY, (-611189654 IN ()), t1.c57, GROUP_CONCAT(((((t1.c1)AND(t2.c0)))AND(t2.c2))) FROM t1, t2 WHERE (CAST('崐.?/~' AS BLOB) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((t2.c0 IN ())) NOT BETWEEN (t2.c42 COLLATE BINARY) AND (NULL)), ((CAST(t2.c42 AS BLOB)) NOTNULL), (+ (t2.c2)) FROM t2, t1 LIMIT 1092040916 OFFSET -1305290061; -- 0ms;
SELECT ((AVG(t2.c0)) BETWEEN (t2.c42) AND (CASE t1.c28  WHEN t1.c2 THEN t1.c28 WHEN '>0' THEN t1.c1 WHEN t1.c57 THEN t2.c42 END)), DENSE_RANK() OVER (), LEAD((((+ (t2.c0))) NOTNULL), CASE 0x28a682ae COLLATE BINARY  WHEN ((t2.c42)&(t2.c2)) THEN TYPEOF(t2.c0) WHEN COALESCE(t2.c42, t2.c42) THEN t2.c2 COLLATE BINARY WHEN ((t2.c2)IS(0.1533656003716959)) THEN ((((t2.c2)OR(t2.c2)))AND(t2.c2)) ELSE ((((((((t2.c2)OR(t2.c0)))OR(t2.c0)))OR('-158485095')))OR(t2.c42)) END, (((t2.c2 IN ()))-(((t2.c2) NOT NULL)))) OVER (), '', CASE WHEN t2.c2 COLLATE NOCASE THEN CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END ELSE COALESCE(t2.c0, t1.c2) END FROM t2 WHERE (-1101551051) LIMIT -124730035;SELECT DISTINCT CAST(t2.c42 COLLATE BINARY AS BLOB) FROM t2, t1; -- 0ms;
SELECT ALL CASE (NOT (t1.c57))  WHEN NULL THEN CAST(t2.c42 AS INTEGER) END FROM t2;SELECT ALL CASE WHEN (- (t1.c2)) THEN ((t1.c2) IS FALSE) END, FIRST_VALUE(((((((((((t1.c2) BETWEEN (t2.c42) AND (t1.c2)))AND(CAST(t2.c42 AS NUMERIC))))AND(CAST(0X42088721 AS NUMERIC))))OR(((((t1.c28)AND(t1.c2)))OR(t1.c1)))))OR(CAST(x'6998' AS BLOB)))) OVER (), AVG(((t2.c42) IS TRUE)) OVER () FROM t1, t2 GROUP BY 0xffffffff9b124dc6, (((((t2.c42))=((t2.c2)))) NOT BETWEEN (((t1.c1) BETWEEN (x'e7db') AND (x'014b'))) AND (t1.c2)), ((t1.c28)AND((((t1.c28, t1.c28, t2.c0, 0.35478842978225333, t2.c0))>=((t2.c0, t1.c28, t1.c57, t1.c2, t2.c42))))) HAVING (((t1.c28, t1.c1, t1.c57)) NOT BETWEEN ((t2.c2, x'', t2.c42)) AND ((t2.c0, t1.c2, t1.c1))) COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((UNLIKELY(t1.c2), CASE NULL  WHEN t1.c1 THEN t2.c2 WHEN t2.c2 THEN t1.c28 WHEN t2.c42 THEN t1.c28 ELSE t2.c0 END, (+ (t2.c42)), ((((((((((((x'')OR(t2.c2)))AND(t2.c42)))OR(t2.c2)))OR(t2.c42)))OR(t1.c28)))OR(t2.c42)), ((t1.c57) NOT BETWEEN (t1.c2) AND ('0.3925021967608443'))))<((t1.c57 COLLATE BINARY, ((((((((t1.c57)OR(t1.c57)))AND(t1.c2)))OR(t1.c28)))OR(t1.c57)), (((t2.c2, t2.c2, t1.c2))>=((0.610895310043439, NULL, t1.c28))), t1.c57, ((((t2.c0)OR(t1.c57)))OR(0.9248559989717924))))) FROM t2;SELECT DISTINCT CASE ((t1.c57) BETWEEN (t2.c42) AND (t1.c28))  WHEN t1.c1 THEN ((t1.c1)LIKE(t2.c2)) END FROM t2;SELECT DISTINCT TOTAL((((t1.c2, t1.c57, t1.c1))==((t1.c28, x'3f95', t2.c42)))) FILTER(WHERE ((((((t2.c0)OR(t1.c1)))AND(t1.c57))) ISNULL)) OVER (), 0Xffffffffc6882e43, ((((t2.c2)OR(t2.c42)))OR(0.8172559843653372)) COLLATE RTRIM FROM t2, t1 GROUP BY (~ (((0.027074665509871587) IS TRUE))) HAVING CAST(((t1.c2) BETWEEN (t1.c28) AND (t2.c42)) AS TEXT); -- 0ms;
SELECT DISTINCT t2.c2 FROM t1;SELECT DISTINCT (((- (t1.c1)))<=(((t1.c57) NOT BETWEEN (t1.c28) AND (t1.c57)))) FROM t2 ORDER BY ((((((((((((((t2.c42)<(t2.c2)))AND((((t2.c2))>((t1.c1))))))OR(((t1.c2) BETWEEN (t2.c42) AND (t1.c28)))))OR(((t1.c28)/(t1.c1)))))AND(((t1.c57) NOT BETWEEN (-1.858629943E9) AND (t2.c42)))))AND(CASE WHEN t2.c42 THEN t2.c0 END)))AND(x''))  NULLS LAST;SELECT DISTINCT (~ (x'')), COUNT(CAST(-3.1151616E8 AS REAL)) OVER (), CAST(IFNULL(DISTINCT t1.c28, t2.c0) AS NUMERIC) FROM t1 GROUP BY (((t1.c2, t1.c1, 0x5619f2d7)) NOT BETWEEN (((+ (t2.c0)), (t1.c28 IN ()), ((t1.c2)LIKE(t2.c2)))) AND ((((t2.c42) BETWEEN (t2.c42) AND (t1.c28)), ((t2.c42)IS(t2.c42)), ((((t2.c0)AND(t1.c2)))AND(t1.c28)))));SELECT DISTINCT (NOT ((~ (t2.c2)))) FROM t1 WHERE ((json_valid(0.13738034986921743) IN ()));SELECT DISTINCT t1.c2 FROM t2 WHERE (((((((0.9826500136510362)OR('2114246701')))AND('qdl9N'))) IS FALSE));SELECT ((t1.c28 IN ()) IN ()) FROM t2, t1; -- 0ms;
SELECT NULL FROM t2, t1 WHERE (CAST(x'7d30' AS REAL)); -- 0ms;
SELECT DISTINCT COUNT(((t1.c2)OR(t1.c2))) OVER () FROM t2, t1 WHERE (CAST((((0.3085621049424878))>(('682001070'))) AS INTEGER)) GROUP BY CASE WHEN (+ (t2.c0)) THEN 0.08175883684221152 COLLATE BINARY ELSE (t2.c0 IN (t2.c2)) END; -- 0ms;
SELECT ALL CASE x''  WHEN 0.7698719444926485 THEN t1.c2 END COLLATE NOCASE, ((((t1.c57) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (1766293823) AND (t2.c0 COLLATE RTRIM)), ((GROUP_CONCAT(t1.c28))<>('-740238103')) FROM t2 INDEXED BY i59 WHERE (((NULL) NOT BETWEEN (CAST('-611189654' AS BLOB)) AND (CASE '462654445'  WHEN '529038618' THEN 0.3004266391326055 END)));SELECT ALL COUNT(*) OVER () FROM t1 WHERE ((((NULL IN ())) NOTNULL)) LIMIT -1484737184 OFFSET -1649049649; -- 0ms;
SELECT (((((t1.c1)>(x''))))>((t2.c0 COLLATE NOCASE))) FROM t2;SELECT DISTINCT GROUP_CONCAT(((((((((t2.c2)AND(t2.c2)))OR(t2.c0)))OR(t1.c2)))OR(t1.c1))) FILTER(WHERE ((((t1.c1)IS(t2.c42)))/(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c1))))) OVER (), CASE WHEN ((t1.c57)<(t2.c2)) THEN (((2005953365))<=((t2.c2))) ELSE ((t1.c2) NOT NULL) END, MAX(CAST(t1.c57 AS REAL)) FROM t1, t2 WHERE (((UPPER(DISTINCT 0.3085621049424878)) ISNULL)) GROUP BY ((- (t2.c0)) IN ()) HAVING CAST(0x77906b55 AS TEXT); -- 0ms;
SELECT ALL CAST(AVG(t2.c2) AS NUMERIC), ((((((t2.c0)OR(t1.c57)))AND(t1.c28))) ISNULL), TOTAL((~ (t2.c2))) OVER () FROM t1, t2 WHERE ((((-1.649049649E9, 0.3807178330837354, NULL))>=((x'', NULL, NULL))) COLLATE RTRIM) ORDER BY (((t1.c1)-(t2.c42)) IN ())  NULLS FIRST, ((((t1.c2)AND(t2.c0))) BETWEEN (t1.c1) AND (((t1.c28) BETWEEN (t1.c28) AND (t1.c1))))  NULLS LAST; -- 0ms;
SELECT ALL SUM(((t1.c1) IS FALSE)) FROM t1, t2 WHERE (CAST(CAST(x'' AS BLOB) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c1 THEN t2.c0 WHEN t2.c0 THEN t2.c2 WHEN t2.c42 THEN NULL ELSE t1.c2 END) IS TRUE) FROM t2, t1 WHERE (((((('0.8546316620281421'))<((NULL)))) IS FALSE)) GROUP BY CASE WHEN ((t1.c57) NOT BETWEEN (t2.c42) AND (t2.c42)) THEN (~ (t2.c42)) END, CASE (((t1.c2))<((t2.c0)))  WHEN t1.c57 THEN (t2.c2 IN (t2.c42)) END, TYPEOF(t1.c57 COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE 0.5896354072142329  WHEN ((t2.c0) BETWEEN (t2.c2) AND (t2.c42)) THEN ((t2.c0)<=(t2.c0)) WHEN HEX('-1353998101') THEN ((((t2.c42)AND(t2.c0)))OR(t2.c0)) WHEN CASE WHEN x'fdd0' THEN x'' ELSE t2.c42 END THEN ((((((((t2.c42)AND(t2.c42)))AND(t2.c42)))AND(t2.c42)))OR(t2.c42)) END, ((((((t2.c0)OR(t2.c42)))OR(t2.c2)))LIKE(((t2.c2) BETWEEN (t2.c2) AND (t2.c42))))) OVER (), ((((((t1.c28)/(t1.c2)))OR(t1.c57 COLLATE BINARY)))AND(MIN(t1.c57))), ((((('-1318432923')) NOT BETWEEN ((NULL)) AND ((t2.c0)))) BETWEEN ((('-964153789') ISNULL)) AND (((((t1.c28)OR(t2.c2)))AND(t1.c57)))), t2.c0, (((t2.c2)) NOT BETWEEN ((((t2.c0) NOT BETWEEN (t2.c0) AND ('0.44278317059703154')))) AND ((((t1.c2) NOT BETWEEN (t1.c2) AND (t2.c2))))) FROM t2 NOT INDEXED WHERE ('57198116');SELECT ALL SUM(((t1.c2)>(t1.c28)) COLLATE RTRIM) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP), CAST(((t1.c2)+(NULL)) AS NUMERIC), (~ ((NOT (t2.c42)))), CAST(((t1.c2)|(t1.c28)) AS REAL), COUNT(json_type(t2.c2)) FROM t2, t1;SELECT DISTINCT CAST(t2.c42 AS NUMERIC) COLLATE BINARY FROM t2 WHERE ((NOT (((x'')AND('129469011'))))); -- 0ms;
SELECT DISTINCT (NOT (CAST(t1.c1 AS BLOB))), t2.c0, CASE WHEN t2.c2 THEN 0.43597976570024977 END COLLATE BINARY COLLATE BINARY FROM t1, t2; -- 0ms;
SELECT ALL CASE WHEN t2.c0 COLLATE NOCASE THEN CASE WHEN t1.c2 THEN t1.c28 ELSE 0X48fc42d4 END ELSE ((((t1.c1)AND(t2.c2)))OR(t2.c0)) END FROM t2, t1 WHERE (((((NULL) ISNULL))LIKE(((((0.86850729285606)AND(-936869529)))AND('nU稛%en'))))) ORDER BY ((t1.c28)%(t1.c28)) COLLATE RTRIM DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT HEX(DISTINCT t2.c0) COLLATE BINARY FROM t2 WHERE ((NOT (('B0' IN (x'6745'))))); -- 0ms;
SELECT DISTINCT COUNT((((t1.c2, t1.c57, t2.c42))>((t1.c57, t1.c1, t1.c28))) COLLATE NOCASE) OVER () FROM t2, t1 LIMIT 2050543011; -- 1ms;
SELECT DISTINCT AVG(t1.c2) COLLATE RTRIM COLLATE BINARY, TOTAL(CASE WHEN t1.c1 THEN t2.c2 ELSE t2.c0 END COLLATE BINARY), t2.c0 FROM t1, t2 WHERE ((((']V3\nE')) NOT BETWEEN ((((1635377878) NOTNULL))) AND ((((NULL) BETWEEN ('0.7954814763342758') AND (116837892)))))) GROUP BY ((json_array_length(t1.c2))%(((t1.c57) NOT NULL))), (t1.c28 COLLATE NOCASE IN ((t1.c28 IN (t1.c28)))), COALESCE(DISTINCT t1.c2, t2.c2) COLLATE RTRIM, (((((((('1834709717')AND(t2.c2)))OR(t1.c1)))AND(0xffffffff93bc887c)))OR(t1.c1)) COLLATE BINARY, ((((+ ('-511411888'))))==(((t2.c2 IN ())))) LIMIT -2004123273; -- 0ms;
SELECT ALL t1.c57, t2.c0, (((t2.c0) BETWEEN (t1.c1) AND (t1.c2)) IN ()) FROM t2, t1; -- 0ms;
SELECT DISTINCT (((t1.c2)) BETWEEN ((NULLIF(DISTINCT t2.c42, t2.c42))) AND (((t1.c2 IN (t2.c0))))) FROM t2, t1 WHERE (((0.9348258749931966)IS NOT(0.38007818006714833)) COLLATE RTRIM) GROUP BY ((0.6227184914554748) BETWEEN (((t1.c1) NOTNULL)) AND (((((t1.c28)OR(t1.c1)))OR(t1.c1)))), ((((((t1.c2)OR(t1.c2)))AND('538876394')))>>(x'9ace2440')), ((NOT (t2.c42)) IN ()) HAVING LIKELIHOOD(DISTINCT CAST(t2.c2 AS TEXT), 0.25769061319942654) LIMIT 682001070; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((t1.c1) BETWEEN (t2.c42) AND (t1.c28)), (t1.c2 IN (t1.c1, t2.c2, t1.c1))) FROM t1, t2 WHERE (((0.5792858931470143 COLLATE RTRIM) BETWEEN ((((x'')) BETWEEN ((x'')) AND ((0.1367480590251794)))) AND (((0.9348258749931966)||(0.9109393192816152))))); -- 1ms;
SELECT DISTINCT ((MIN(t1.c57)) IS TRUE) FROM t1 WHERE (-345292467 COLLATE NOCASE) ORDER BY ((((((t1.c57)OR(t1.c1)))AND(t1.c28))) NOT BETWEEN (CAST(t2.c2 AS TEXT)) AND (CASE WHEN t1.c2 THEN t2.c2 ELSE t1.c57 END)) ASC  NULLS LAST;SELECT DISTINCT ((CASE WHEN t2.c0 THEN t2.c0 ELSE t1.c1 END)%('-1738255547')) FROM t1, t2 WHERE ((~ (CASE WHEN NULL THEN 1452145152 ELSE '1752105768' END))) ORDER BY (((((((t2.c2)OR(NULL)))OR(t1.c57)), ((t2.c42)<=(t2.c42)), t1.c28))<=((t1.c2, ((t2.c2)||(t1.c28)), COALESCE(t1.c2, t1.c28, t2.c42, t1.c2)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((0.1275844553908434)<>(t1.c28)), ((AVG('-984034686'))=(t2.c2 COLLATE BINARY)), (+ (t2.c0)) FROM t2 ORDER BY (+ (((t1.c1)<=(t2.c42))));SELECT DISTINCT ((t1.c1)%(t2.c2)) COLLATE BINARY, CHANGES(), ((((((x'')OR(t1.c57)))OR('-1223460801')))AND((((('0.753055091161333')OR(t1.c1)))OR(t2.c42)))) FROM t1, t2; -- 0ms;
SELECT DISTINCT ((((((t2.c2)OR(t1.c2)))OR(t1.c2)))&(((t1.c2) NOT NULL))), (ROUND(t1.c28, t2.c2) IN ()), t2.c0, (((t1.c1)AND(t2.c2)) IN (t1.c1, (NOT (t2.c2)))), t2.c42 FROM t2 LIMIT -813233328 OFFSET 888249089;SELECT DISTINCT CAST((((t1.c57))>((t1.c28))) AS BLOB), (NULL IN ()), TOTAL((((t2.c2, t1.c28, t1.c28)) BETWEEN ((t2.c2, t1.c2, t2.c42)) AND ((t1.c1, t2.c0, t1.c2)))) OVER ( ORDER BY (- (CAST(t2.c42 AS TEXT))) DESC) FROM t2 WHERE (CASE (x'' IN ())  WHEN ((NULL)-(x'')) THEN (NULL IN ()) ELSE ((((-1668854968)AND(x'')))OR('-319225735')) END);SELECT DISTINCT t1.c2, (((t1.c57)) BETWEEN ((SUM(t1.c2))) AND ((x'fe4c'))), ((((((((((t1.c1)GLOB(t1.c1)))AND(DATE(t2.c42, t2.c0, t2.c2))))OR(((t2.c42)LIKE(-844482852)))))OR((- (t1.c57)))))AND(MAX(t1.c57))), ((t2.c0) NOTNULL), (((NOT (t2.c42)))%(((((t2.c0)AND(NULL)))AND(t2.c42)))) FROM t1, t2 WHERE (((CASE WHEN '' THEN NULL END)>(((0.8816590599524644) NOT BETWEEN ('JZROk{a') AND (''))))); -- 0ms;
SELECT DISTINCT CAST((((t2.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c28))) AS TEXT) FROM t2 WHERE (CAST((((NULL, 'jZ-c', 1.795992997E9)) NOT BETWEEN (('', x'cbb47b27', '639160797')) AND (('1695860232', -335100648, 0.13992229563075664))) AS BLOB));SELECT DISTINCT (x'' IN ()) FROM t2 WHERE (''); -- 0ms;
SELECT ((((((((t2.c42 COLLATE BINARY)AND(((t1.c57)+(t1.c2)))))AND(((t2.c42)<(t2.c0)))))AND(GROUP_CONCAT(t1.c2))))OR(((t2.c2) NOT NULL))) FROM t1;SELECT DISTINCT ((GROUP_CONCAT(t1.c57)) NOT BETWEEN (load_extension(t1.c28, t2.c0)) AND (((t1.c1)<(NULL)))), (~ ((('2004818752') BETWEEN (t2.c42) AND ('-1129565186')))), t2.c42 FROM t2 WHERE (((((NULL)AND(x'' COLLATE NOCASE)))OR(((0.8628479500488906) NOTNULL)))) ORDER BY ((CASE WHEN t1.c57 THEN t1.c57 ELSE t1.c57 END) BETWEEN (x'') AND (t1.c1 COLLATE NOCASE))  NULLS LAST, t1.c57  NULLS FIRST LIMIT -1117763867 OFFSET -213005089;SELECT DISTINCT ((((((t2.c0)>=(t1.c2)))AND((t1.c2 IN ()))))AND((((-1717560953))<((t1.c28))))) FROM t2 INNER JOIN t1 ON 0.5560685371199937 WHERE (((NOT ('-985899485')) IN (CAST(NULL AS BLOB)))); -- 0ms;
SELECT ALL ((((((((t2.c0)OR(t2.c42)))OR(t1.c2)))OR(t2.c42)))OR(t2.c2)) COLLATE NOCASE FROM t2 WHERE (((((0Xffffffffd7a9ae22) NOT BETWEEN ('-301068304') AND (x'')))<=(NULL))) ORDER BY (((t2.c2)==(t2.c2)) IN ()) DESC  NULLS LAST, (((t1.c57)) BETWEEN ((NULLIF(t1.c57, t1.c2))) AND ((((t1.c28) IS FALSE)))) ASC  NULLS LAST;SELECT DISTINCT (((- (t1.c1))) NOT BETWEEN (t1.c28) AND (((t2.c2)OR(t1.c2)))) FROM t2, t1; -- 0ms;
SELECT AVG(((((((((((((t2.c42)OR(t1.c57)))OR(x'608e')))OR(t1.c28)))OR(t1.c1)))OR(NULL)))OR('!舵Ek-w*ms'))) OVER (), CAST(((((t2.c0)AND(t1.c2)))OR(t2.c42)) AS BLOB), NULLIF(DISTINCT TOTAL(t1.c2), x'') FROM t1, t2 WHERE ((NOT (((NULL) BETWEEN (-1429094980) AND (NULL))))) ORDER BY CAST((NOT (t1.c2)) AS INTEGER); -- 0ms;
SELECT DISTINCT CASE t2.c42  WHEN t1.c28 COLLATE NOCASE THEN (- (t2.c0)) WHEN (((t1.c28))>=((t2.c0))) THEN SUM(0.8628479500488906) WHEN COUNT(t2.c42) THEN CASE t2.c2  WHEN t2.c0 THEN t2.c0 WHEN t1.c28 THEN t1.c1 WHEN t2.c42 THEN t1.c28 WHEN t1.c1 THEN t2.c42 WHEN t2.c42 THEN t2.c2 ELSE t2.c42 END ELSE ((t1.c2)>>(t1.c2)) END FROM t2, t1 WHERE (CASE WHEN 0.3263688176333355 THEN 'hf' WHEN 0.865603173544288 THEN 796420728 WHEN 1e500 THEN '-363567818' ELSE 0.12666868408641652 END COLLATE RTRIM COLLATE BINARY) ORDER BY t2.c2 ASC  NULLS FIRST, ABS(t1.c28 COLLATE NOCASE); -- 0ms;
SELECT ((((t2.c0) ISNULL)) IS TRUE) FROM t2 WHERE (((CASE WHEN 'N1E0O!gh,' THEN 0.5293755876772593 END)-((+ (-96441671))))) ORDER BY t1.c28 ASC  NULLS FIRST, ((-335484423)OR((((0.6020336019765407, t1.c28, t2.c42))<((t1.c28, t2.c42, t1.c57))))) DESC  NULLS FIRST, ((t1.c2)GLOB(t2.c42)) COLLATE BINARY DESC;SELECT AVG((((t1.c2, t2.c42, t2.c2))<=((t1.c57, t1.c2, t1.c1)))) OVER ( ORDER BY CAST(0x72b4d6b7 AS BLOB)  NULLS LAST GROUPS  CURRENT ROW) FROM t2, t1 WHERE (((0Xffffffff979d39cd) BETWEEN ('676181727') AND (x'')) COLLATE BINARY); -- 0ms;
SELECT ALL ((((t1.c2)<=(t1.c1)))>(((t2.c2) ISNULL))) FROM t1, t2; -- 1ms;
SELECT DISTINCT (((t1.c57)) NOT BETWEEN ((CAST(t1.c57 AS NUMERIC))) AND ((((t1.c1) NOT BETWEEN (t2.c0) AND (t1.c28))))) FROM t2 LIMIT 2071590007;SELECT DISTINCT ((t2.c42)!=(t2.c0)) COLLATE NOCASE FROM t2; -- 0ms;
SELECT DISTINCT '!舵Ek-w*ms', MAX(((t2.c42) BETWEEN (t2.c2) AND (t2.c0))), ((t1.c57) IS FALSE) FROM t2, t1 WHERE (CAST(((NULL)%(0.1533656003716959)) AS REAL)); -- 0ms;
SELECT ALL CASE WHEN LOWER(t1.c28) THEN 0.24514126587774732 WHEN t2.c2 COLLATE BINARY THEN COUNT(*) WHEN (~ (t2.c0)) THEN CASE t2.c2  WHEN t1.c57 THEN t1.c57 END ELSE CASE WHEN NULL THEN t1.c57 END END FROM t1 WHERE ((((((- (NULL)))OR((NOT ('')))))AND(COALESCE(DISTINCT -985130061, x''))));SELECT t1.c1 FROM t1; -- 0ms;
SELECT DISTINCT CASE ((t2.c2)<(t1.c1))  WHEN CASE WHEN t1.c1 THEN t1.c1 END THEN t2.c2 WHEN 0.3201375682543184 THEN CAST(t2.c42 AS INTEGER) WHEN CASE '-680648277'  WHEN t1.c1 THEN t1.c1 END THEN '1526979712' END, ((((((((((((((t1.c57)OR(t1.c57)))AND(t1.c1)))OR(t1.c57)))AND(t1.c57)))AND(t1.c2)))AND(t2.c42)))IS NOT((NOT (t1.c2)))), (((((- (t1.c1)))AND(((((((((t1.c2)OR(t1.c28)))AND(t2.c42)))OR(t1.c1)))AND(t1.c2)))))AND(((t1.c1) NOTNULL))) FROM t1 WHERE ('\r<');SELECT IFNULL(((t2.c0)<=(x'')), (t2.c42 IN ())) FROM t2 LIMIT 1924454071; -- 0ms;
SELECT ALL (~ (((t2.c42) BETWEEN (t1.c28) AND (t1.c1)))) FROM t1, t2 WHERE (0.430423890827797); -- 0ms;
SELECT ALL ((AVG(t1.c2)) NOT NULL), (((CAST(t2.c2 AS BLOB)))<=(((((t2.c42))>=((t1.c57)))))), (- (CAST(t1.c2 AS REAL))) FROM t1;SELECT (- ((- (t1.c2)))) FROM t2, t1 WHERE (x'c64a') GROUP BY (((('9223372036854775807')GLOB(t1.c1)))<=(t2.c0)) HAVING ' x惤'')CN8悠'; -- 0ms;
SELECT DISTINCT (((((t1.c57)) BETWEEN ((t1.c57)) AND ((t2.c2))))>=(t2.c42 COLLATE NOCASE)) FROM t1, t2 WHERE (json_insert(((NULL)IS(NULL)), ((x'78bc') NOT BETWEEN (NULL) AND (-1885514811)), 0Xffffffffc8b1f5c2 COLLATE RTRIM, ((1.795992997E9) BETWEEN (0.12796893353966354) AND ('kj')), 0.5889651326184502)) LIMIT 1918074569 OFFSET 1196978036;SELECT DISTINCT AVG((t2.c42 IN ())) FROM t2 LIMIT 808045930 OFFSET 1883582242; -- 0ms;
SELECT 0x20151619 FROM t2; -- 0ms;
SELECT DISTINCT ((t1.c57)IS(((((((((t1.c57)OR(t1.c1)))OR(t2.c2)))OR(t2.c42)))AND(t2.c0)))), t1.c28, (((t2.c42 IN ())) NOTNULL) FROM t1, t2 WHERE (((CAST(x'' AS NUMERIC))<>((((0.3020888320073043))>(('Ib')))))); -- 0ms;
SELECT DISTINCT (((0.7225817986749329) BETWEEN (NULL) AND (t2.c2)) IN ()) FROM t1 ORDER BY ((((t1.c57 COLLATE NOCASE)OR(0X576fb51d)))OR(json_array_length(t1.c57))) ASC  NULLS LAST;SELECT DISTINCT '945040909', (NOT (((t1.c2)=(t2.c42)))), (((((t1.c2, t1.c28, t2.c0)) BETWEEN ((t1.c1, t2.c0, x'')) AND ((t1.c2, t1.c28, t1.c2))))>('~?Ts)')) FROM t2, t1; -- 0ms;
SELECT CASE WHEN ((0Xffffffffda59bc8f)IS NOT(t1.c2)) THEN t1.c1 COLLATE BINARY END FROM t2 WHERE (0.7326093745045366);SELECT DISTINCT CAST(((((((((t2.c2)OR(t2.c2)))AND(t2.c2)))OR(t1.c2)))AND(t2.c42)) AS BLOB) FROM t2, t1; -- 0ms;
SELECT CAST(GROUP_CONCAT(t1.c57) AS BLOB), ((((((t2.c0)OR(t1.c1)))AND(t1.c1)))<=((t1.c57 IN ()))), ((((((((((x'')OR(t1.c28)))AND(t2.c0)))OR(t1.c57)))OR(t1.c1)))*(((t1.c57)>>(t1.c28)))) FROM t2, t1 WHERE (((((NULL)&(x'')))IS NOT(x''))); -- 0ms;
SELECT DISTINCT MIN((((t1.c57)) NOT BETWEEN ((t1.c2)) AND ((t1.c57)))), (((((NOT (t1.c2)))AND(CAST(t1.c28 AS REAL))))AND(t2.c42)), (((t1.c28, t1.c28, t2.c2, t2.c42, t1.c2)) NOT BETWEEN ((((t2.c42)%(t1.c28)), t2.c42 COLLATE BINARY, ((((t2.c0)AND(t2.c2)))AND(t2.c42)), ((t2.c42)AND(t1.c57)), (t1.c1 IN ()))) AND (((((t1.c1)) BETWEEN (('28193997')) AND ((t1.c2))), (((t1.c28)) NOT BETWEEN ((NULL)) AND ((t2.c0))), CAST(t1.c2 AS NUMERIC), ('{iX^' IN ()), (t1.c28 IN (t1.c28))))), (((t2.c42)AND('''8 ')) IN (CASE t1.c28  WHEN t1.c28 THEN t2.c2 ELSE t1.c2 END)), CASE WHEN t2.c2 THEN t1.c1 END COLLATE BINARY FROM t1, t2 WHERE (CASE WHEN (((('[J')OR('e[民N-]n')))AND(0.5519663651880784)) THEN ((-542516932)LIKE(NULL)) ELSE ((NULL) NOT BETWEEN (NULL) AND ('')) END) LIMIT -1707192418; -- 0ms;
SELECT ALL CASE x'1c65'  WHEN ((t1.c28) BETWEEN (-780928800) AND (x'')) THEN ((t2.c42) BETWEEN (t1.c28) AND (t1.c1)) END FROM t2, t1 WHERE (CASE WHEN ((1.065987322E9)%(0.7731743727981396)) THEN ((0.5840162109824837)<=('-0.0')) END); -- 1ms;
SELECT ALL MIN(((t1.c2)IS(t2.c42))) FROM t2, t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t1.c57 IN ())) COLLATE NOCASE, t1.c57 COLLATE RTRIM, t1.c57 FROM t2, t1 GROUP BY CASE WHEN ((t1.c2) BETWEEN (t1.c28) AND (t2.c42)) THEN (((t2.c42))>((t2.c2))) END, CASE (((t1.c57)) BETWEEN ((t1.c28)) AND ((t1.c57)))  WHEN ((0xffffffffee77e9d3)*(t2.c42)) THEN (((t2.c0, t1.c1, t2.c42, x'', t2.c42)) NOT BETWEEN ((t1.c1, t1.c2, t2.c0, t2.c0, t1.c57)) AND ((t1.c28, x'c23d', t1.c57, t2.c0, NULL))) END, (NOT ((+ (t1.c28)))); -- 0ms;
SELECT DISTINCT COUNT(*), ((((((t1.c57)OR(t2.c2)))AND(t2.c42)))>=(t1.c1 COLLATE NOCASE)), SUM((((t1.c28))>=((t2.c0)))) FROM t2 NOT INDEXED, t1 ORDER BY (- ((t1.c57 IN ())))  NULLS LAST LIMIT -1888054937; -- 0ms;
SELECT ALL LAG(CASE WHEN ((t1.c2)|(t1.c28)) THEN NULL END, STRFTIME(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c1)), ((t1.c28)!=(t1.c2)), ((t1.c1)IS NOT(x'5d61'))), ((((CAST(t1.c28 AS BLOB))OR((~ (t1.c28)))))AND(((t1.c57)=(t1.c57))))) OVER () FROM t1; -- 0ms;
SELECT ALL t2.c0, NTILE('176528360') OVER ( RANGE  CURRENT ROW), LEAD((((t2.c2) IS FALSE) IN ()), (- (((((t1.c1)OR(t2.c42)))AND(t2.c2)))), ((((t1.c57)/(t2.c42))) NOT BETWEEN (((t2.c2) IS TRUE)) AND (t2.c42 COLLATE NOCASE))) OVER ( GROUPS BETWEEN ((CAST(t1.c1 AS REAL)) ISNULL) PRECEDING AND CASE ABS(t2.c2)  WHEN LOWER(t1.c57) THEN CAST(t2.c0 AS TEXT) WHEN CAST(t2.c0 AS REAL) THEN t1.c28 WHEN (+ (t1.c57)) THEN COALESCE(t2.c42, t2.c2) END PRECEDING EXCLUDE NO OTHERS) FROM t1 INDEXED BY i59, t2; -- 1ms;
SELECT DISTINCT SUM(((t1.c2) NOT BETWEEN (t1.c2) AND (t2.c2))) OVER () FROM t1 WHERE ((((+ (x''))) IS TRUE));SELECT ALL ((t1.c57) NOT BETWEEN (t1.c2) AND (t1.c2)) COLLATE RTRIM, (GROUP_CONCAT(314790121) IN ()), CASE WHEN ((t1.c57)GLOB(t1.c28)) THEN ((((((((t1.c28)AND(t1.c1)))AND(t2.c0)))OR(t2.c2)))AND(t1.c2)) END FROM t1, t2; -- 0ms;
SELECT ALL ((IFNULL(DISTINCT t1.c28, t2.c42))|(t1.c28)) FROM t1;SELECT CASE WHEN t1.c57 COLLATE BINARY THEN LIKELY(DISTINCT t1.c28) END FROM t2, t1; -- 0ms;
SELECT DISTINCT ((((t1.c28 COLLATE RTRIM)OR(x'')))OR(t1.c2 COLLATE RTRIM)) FROM t2 WHERE (((CAST(0.15309014147021294 AS TEXT)) NOT BETWEEN (((0.11967312195908941) IS TRUE)) AND (CASE NULL  WHEN 0.9317697662623905 THEN 'j' WHEN x'34a5d70c' THEN 0.5809636155602035 WHEN 1612668843 THEN NULL WHEN 0.902648553721983 THEN 'oRV3	>' WHEN '59' THEN '-631653233' END)));SELECT t1.c2 FROM t1; -- 0ms;
SELECT (((t2.c42))>=((t2.c2))) COLLATE RTRIM FROM t1;SELECT DISTINCT (((NULL)) NOT BETWEEN ((CAST(t1.c28 AS TEXT))) AND ((t1.c28))), CASE WHEN ((t2.c42)OR(t2.c2)) THEN t1.c28 END, CASE WHEN (+ (t1.c1)) THEN ((((t1.c57)OR(t1.c1)))OR(t1.c28)) END FROM t2, t1; -- 0ms;
SELECT DISTINCT CASE TYPEOF(t2.c2)  WHEN ((t1.c2) NOT BETWEEN (t1.c57) AND (t1.c57)) THEN ((t2.c42) IS FALSE) ELSE (((t1.c1))!=((t1.c57))) END FROM t1, t2 WHERE (((((-1.604484657E9)>=(x''))) NOT BETWEEN (CAST(0.11223235639063978 AS INTEGER)) AND (((0.6546519383380474)|(0.15921794963634173))))); -- 0ms;
SELECT COUNT(((t1.c28) IS TRUE)) OVER () FROM t1 WHERE (((((((-1540888746)AND(0.6161222879130162)))AND('G*'))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((((t2.c2)OR(0.19862495801350788)))OR(t2.c0)), (NOT (t1.c1)), (t1.c2 IN ()), TYPEOF(t1.c28), t1.c28 COLLATE NOCASE, t2.c0 COLLATE NOCASE, ((t1.c2)||(t1.c28))))<=((CASE t2.c2  WHEN t1.c28 THEN t2.c42 WHEN t1.c57 THEN t2.c0 WHEN t1.c57 THEN t2.c42 ELSE t1.c57 END, MAX(t2.c0), t1.c2, t2.c42 COLLATE BINARY, (+ (t2.c2)), ((t2.c0)*(t1.c57)), CAST(t2.c42 AS NUMERIC)))) FROM t2;SELECT DISTINCT json_array_length((((t1.c2, t1.c57, t2.c42)) NOT BETWEEN ((t2.c2, '529038618', t1.c57)) AND ((t2.c2, t1.c28, t1.c57))), ((t2.c0)IS NOT(t2.c0))) FROM t2, t1 LIMIT 1485451427;SELECT CASE WHEN (('774356279') NOTNULL) THEN (t1.c1 IN ()) ELSE CASE t2.c0  WHEN 0.8668235268295202 THEN t1.c28 ELSE 0.2704540531706784 END END FROM t1, t2; -- 0ms;
SELECT ALL CASE WHEN CASE WHEN t2.c2 THEN t1.c57 WHEN t2.c2 THEN t1.c57 WHEN t2.c0 THEN t1.c28 END THEN CAST(t1.c28 AS INTEGER) WHEN t2.c42 COLLATE NOCASE THEN ((0x1a26a909) NOT BETWEEN (t2.c2) AND (t1.c57)) WHEN ((t1.c57)||(t1.c1)) THEN ('' IN ()) END FROM t2;SELECT DISTINCT x'', CAST(((((((((t2.c2)OR(t1.c2)))AND(t2.c42)))OR(t1.c28)))OR(t1.c1)) AS INTEGER), ((((((((((t1.c1)OR(t2.c0)))OR(t1.c57)))AND(t1.c28)))AND(t1.c28)))%(((t2.c42)<>(t2.c42)))) FROM t2, t1 WHERE ((((~ ('%H')))LIKE((('364017929') NOT BETWEEN (NULL) AND (''))))); -- 0ms;
SELECT DISTINCT (('737327792') BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t1.c1))) AND (t1.c1)), SUM(((((t1.c1)OR(t2.c0)))OR(t2.c42))), (((NOT (t1.c1)))GLOB((((t1.c1, t1.c57, t1.c28)) BETWEEN ((t1.c28, t1.c2, t1.c1)) AND ((t2.c42, t1.c1, t2.c42))))) FROM t2, t1 WHERE (CAST((((0.8603787641284769))<((NULL))) AS BLOB)); -- 0ms;
SELECT DISTINCT TOTAL(((((((((t1.c57)OR(t1.c2)))AND('l41,K')))AND(t1.c57)))OR(t2.c0))) OVER () FROM t1, t2; -- 0ms;
SELECT ((CASE WHEN t1.c1 THEN t2.c42 ELSE t1.c1 END)-(t2.c2)) FROM t2, t1 WHERE ((((''))<=((((0.4766467455000821) NOTNULL))))); -- 0ms;
SELECT ALL CASE WHEN (t2.c0 IN ()) THEN t2.c0 COLLATE BINARY WHEN t2.c2 COLLATE RTRIM THEN (NOT (t1.c2)) WHEN ((t1.c57)&(t1.c28)) THEN ABS(t2.c2) ELSE '1097859886' END, CAST((((t2.c0)) NOT BETWEEN ((t1.c57)) AND ((t2.c42))) AS NUMERIC), TYPEOF(((t1.c2)>=(t2.c42))) FROM t1, t2; -- 0ms;
SELECT ALL t1.c57, (NOT (t2.c0)), ((NULL) NOT BETWEEN (((t2.c2)||(x''))) AND (t1.c1)) FROM t1, t2; -- 1ms;
SELECT (((t2.c0)) NOT BETWEEN ((x'6b55')) AND ((NULL))) FROM t1;SELECT '1197317819', CAST(t2.c42 AS NUMERIC), FIRST_VALUE(((CASE t2.c42  WHEN t2.c0 THEN x'd644' END)<<(t2.c0))) OVER ( GROUPS ((t2.c2)-(((t2.c0) NOT BETWEEN (t1.c1) AND (t2.c2)))) PRECEDING EXCLUDE CURRENT ROW) FROM t2 WHERE (((CAST(NULL AS TEXT))OR(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((t1.c1) NOT NULL))%((t1.c28 IN ()))) FROM t1 WHERE ((CAST(x'' AS TEXT) IN (((-2141482628)>(x'e1e268e8')), ((x'') NOT BETWEEN (355245344) AND ('1718996029'))))); -- 0ms;
SELECT DISTINCT 0.430423890827797, CASE WHEN t2.c2 THEN '1880413195' ELSE t1.c57 END, ((((t2.c2)<>(t1.c1))) NOT NULL), NULL, CAST(CAST(t2.c0 AS NUMERIC) AS TEXT) FROM t2, t1; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c1 THEN ABS(DISTINCT t2.c2) ELSE ((x'')AND(t2.c2)) END, SUM(CAST(t2.c0 AS REAL)) OVER (), LIKELIHOOD((NOT (t1.c57)), 0.5833849715280564) FROM t2;SELECT DISTINCT '-1009600229' FROM t1, t2 WHERE (((x'8a13') IS FALSE)) LIMIT -778685985 OFFSET 1286570360; -- 0ms;
SELECT ALL t2.c0, '-1724776696', -1.58485095E8 FROM t1 WHERE ((((((((('8*엁sꅩ')OR(NULL)))OR(x'')))AND(SQLITE_COMPILEOPTION_GET(0.9307674641491287))))AND((x'3b9b' IN ())))) GROUP BY CASE WHEN t1.c57 COLLATE BINARY THEN t2.c2 COLLATE RTRIM ELSE (t1.c28 IN ()) END ORDER BY LIKELIHOOD(t2.c2, 0.3601645064159451);SELECT ((((t1.c28) NOT BETWEEN (t1.c28) AND (t1.c57))) BETWEEN (((t1.c57) BETWEEN (t1.c28) AND (t1.c57))) AND ((~ (t1.c28)))) FROM t2 WHERE (((CAST('301452857' AS INTEGER)) IS TRUE)) LIMIT -473902805 OFFSET -84937313;SELECT ((((t1.c28) IS TRUE))IS NOT(AVG(t1.c28))) FROM t2, t1; -- 0ms;
SELECT ALL COUNT((t2.c42 IN ())) FROM t1 WHERE ((((('') BETWEEN ('0.23306003022283006') AND (x''))) NOT BETWEEN (((x'763b')%(NULL))) AND ((('') ISNULL)))); -- 1ms;
SELECT DISTINCT (((t2.c0) BETWEEN (t2.c0) AND (t1.c2)) IN (((t1.c1) NOT BETWEEN (t1.c2) AND (t2.c2)))) FROM t2;SELECT CASE WHEN CAST('' AS BLOB) THEN ((t2.c0) IS FALSE) ELSE CASE WHEN t1.c28 THEN t2.c42 ELSE t2.c0 END END FROM t1, t2 WHERE ((((0Xffffffffb6d6f597, '-788130027', NULL)) NOT BETWEEN ((CASE 'Y7긵7c8NK'  WHEN '1677521632' THEN 938776525 ELSE NULL END, ((0.011374544852731039) IS FALSE), x'')) AND ((CAST(x'' AS INTEGER), '[m', ((0.7225817986749329)!=(NULL)))))); -- 0ms;
SELECT DISTINCT (((((t1.c57 IN ()))AND(((((t1.c2)OR(t2.c0)))AND(t2.c42)))))AND(GROUP_CONCAT(t1.c28))) FROM t2; -- 0ms;
SELECT ALL (((1.821943559E9)) BETWEEN ((t2.c0)) AND ((((t1.c57)*(t1.c28))))), CUME_DIST() OVER (), CASE t2.c0  WHEN t1.c57 THEN t1.c57 ELSE 0.06926635597025943 END COLLATE RTRIM FROM t1, t2 GROUP BY 0xf3d24e1 HAVING CAST(HEX(t2.c2) AS INTEGER) ORDER BY (((t2.c0)) NOT BETWEEN ((t1.c2)) AND ((NULL)))  NULLS LAST, CAST(x'' AS INTEGER) COLLATE BINARY  NULLS FIRST, CAST((- (t1.c2)) AS TEXT);SELECT CAST((~ (t2.c42)) AS BLOB), (NOT ((((t1.c2))>=((t2.c42))))), ((json_object(t1.c28, t2.c42, t1.c57, t2.c2))/(((t2.c42) NOT BETWEEN (t1.c2) AND (t1.c28)))) FROM t2, t1;SELECT DISTINCT ((x'ed02') ISNULL) FROM t1 GROUP BY (t1.c2 IN ()), TYPEOF(DISTINCT x''), x'' HAVING ('-1956175526' IN ()) ORDER BY ((CASE t1.c57  WHEN t1.c1 THEN t2.c0 WHEN t2.c2 THEN t2.c2 WHEN t2.c2 THEN t1.c57 ELSE t1.c28 END) BETWEEN (((t1.c2) IS FALSE)) AND ((t1.c28 IN (t1.c2)))) ASC;SELECT ALL RANK() OVER (), MIN(CAST(t1.c2 AS TEXT)), x'' FROM t1; -- 0ms;
SELECT ((((((((((((CAST(t1.c2 AS INTEGER))OR(MAX(t1.c57))))OR((~ (t1.c57)))))OR(t1.c28)))OR(((t1.c57) IS FALSE))))OR(((t1.c1)||(t1.c57)))))AND(COALESCE(t1.c2, t1.c57))) FROM t1, t2; -- 0ms;
SELECT t1.c2, SUM(((((t1.c57)AND('0.8172559843653372')))OR(t1.c1))) OVER ( PARTITION BY CAST(t1.c2 AS TEXT), CAST(t1.c57 AS NUMERIC) COLLATE NOCASE, t1.c28, CASE CASE t1.c1  WHEN t2.c2 THEN t2.c42 WHEN t2.c42 THEN t1.c28 WHEN t1.c57 THEN t2.c42 ELSE t2.c0 END  WHEN t1.c57 COLLATE BINARY THEN ((t2.c42) IS FALSE) WHEN ((t1.c57)/(t2.c2)) THEN (('uO') BETWEEN (t1.c28) AND (t2.c42)) WHEN IFNULL(t1.c57, t1.c57) THEN 0.927643515118358 END), COUNT(*) OVER () FROM t2 WHERE ((((768823074) NOT BETWEEN (x'') AND (0.6332555642186367)) IN ())) GROUP BY LOWER((t1.c57 IN (x'', t2.c42))), CASE WHEN CASE t1.c2  WHEN t1.c28 THEN t1.c57 END THEN ((((((((t2.c42)OR(t1.c57)))AND(t2.c0)))OR(t1.c57)))OR(t1.c2)) WHEN t2.c0 THEN ((t1.c57)<=(t1.c1)) WHEN (((t1.c28, t2.c42, t1.c57)) BETWEEN ((t1.c57, t2.c2, t2.c42)) AND ((-1.227426409E9, t1.c28, t1.c57))) THEN LIKELIHOOD(DISTINCT t2.c0, 0.3058534721446047) WHEN ((t2.c0) NOT BETWEEN (t1.c2) AND (NULL)) THEN (t1.c1 IN (t1.c57)) WHEN t1.c57 COLLATE RTRIM THEN t1.c1 END, CAST(t1.c28 AS TEXT) COLLATE RTRIM, ((t2.c2) NOTNULL) COLLATE BINARY, ((((CAST(t2.c42 AS INTEGER))AND(NULLIF(t2.c0, t1.c28))))AND(TYPEOF(t1.c28))) ORDER BY ((((((((((t2.c2) IS FALSE))OR(((NULL)IS(t1.c2)))))AND((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c2))))))AND(0.5616190074722633)))OR(((t1.c1)>=(t2.c0))));SELECT (((t1.c2)>>(t2.c42)) IN ()) FROM t2; -- 0ms;
SELECT DISTINCT t1.c1, CAST(((t1.c57)AND(t1.c57)) AS REAL), (((GROUP_CONCAT(t1.c1)))!=((((((t1.c2)AND(t2.c2)))AND(x''))))) FROM t2;SELECT t1.c1 FROM t1, t2; -- 0ms;
SELECT DISTINCT CAST((NOT (t2.c42)) AS INTEGER) FROM t1 WHERE ((('0.8816590599524644') BETWEEN (CASE '-335100648'  WHEN NULL THEN x'' ELSE x'' END) AND (NULL COLLATE NOCASE)));SELECT CAST(((t2.c2) IS TRUE) AS INTEGER), ((CAST(t1.c2 AS NUMERIC))+(t1.c57)), ((LIKELY(DISTINCT t1.c1)) ISNULL) FROM t1 WHERE ((((0.6196511179542882)AND('e[民N-]n')) IN ((- (0.12953473358862955)), ((x'76e2dea3') NOT NULL))));SELECT DISTINCT (((t1.c2)>>(t2.c0)) IN ()) FROM t1, t2 NOT INDEXED WHERE (CAST(CAST(x'af23' AS BLOB) AS REAL)); -- 0ms;
SELECT ALL ((((((t1.c1)AND(t1.c1)))AND(t2.c0))) BETWEEN (t1.c1) AND (((((t2.c2)OR(t1.c2)))OR(t1.c1)))), t2.c2, (NOT (((t2.c42) NOT NULL))), '-629441382', (((((x'') NOT BETWEEN (t1.c28) AND (t2.c42))))!=(('-842859253' COLLATE BINARY))), ((((((t1.c1)OR(t1.c28)))AND(t1.c57))) IS FALSE), (- (NULL COLLATE RTRIM)) FROM t1, t2 WHERE (CASE ((0.6682848297207572)/(NULL))  WHEN '' THEN CASE WHEN '-680648277' THEN NULL ELSE 0.4632806916835386 END ELSE CASE WHEN 0.7734238932174495 THEN NULL WHEN NULL THEN -631653233 WHEN '4#' THEN 0.7007334241196816 END END); -- 0ms;
SELECT DISTINCT (- ((((('')OR(t1.c57)))AND(t1.c1)))) FROM t1, t2; -- 0ms;
SELECT DISTINCT t1.c2 FROM t2;SELECT (((((((t1.c28, t1.c2, t2.c0))<((t2.c42, t2.c2, t1.c1))))OR((((t2.c0, t2.c42, t2.c0)) BETWEEN ((t2.c42, t2.c2, t2.c42)) AND ((t1.c1, t2.c0, t1.c28))))))AND(((((t2.c0)OR(t2.c0)))AND(t2.c0)))) FROM t2, t1 WHERE (((((NULL) ISNULL))>>(((('CK', 0.9192132825076365, '%h'))>=((x'', NULL, '')))))); -- 0ms;
SELECT CASE WHEN (t2.c2 IN ()) THEN CASE WHEN t1.c28 THEN t1.c57 ELSE t1.c28 END WHEN (t2.c42 IN ()) THEN (- (t1.c57)) WHEN (t1.c2 IN ()) THEN CASE WHEN t2.c42 THEN t1.c1 ELSE t1.c28 END ELSE LIKELY(t2.c0) END FROM t2;SELECT DISTINCT NULL, (- ((('7k/Ah/*?7') IS TRUE))), ((t1.c1) NOT NULL) COLLATE RTRIM COLLATE RTRIM, ((t1.c2)|(t2.c0)) COLLATE NOCASE, PERCENT_RANK() OVER () FROM t2, t1; -- 1ms;
SELECT ALL ((((((((COUNT(*))AND(AVG(t2.c0))))OR(((t2.c42)<<(t2.c2)))))OR(CASE t2.c42  WHEN t2.c2 THEN t2.c42 ELSE t1.c28 END)))AND((+ (t2.c0)))) FROM t1 WHERE ((NOT ((('') NOT BETWEEN (-1.85834261E9) AND (x'')))));SELECT DISTINCT ((((t2.c0)>>(0x37193fa)))*(((t2.c42) IS TRUE))) FROM t2 LIMIT -275342090; -- 0ms;
SELECT SQLITE_COMPILEOPTION_GET('') FROM t1 WHERE ((((x'8e5b', '-1289497957', ' j')) BETWEEN ((((NULL) NOT BETWEEN (x'') AND ('DiG⯬w')), (+ (-358755886)), ((NULL) ISNULL))) AND (((((NULL)) NOT BETWEEN ((0.5288285624958389)) AND ((NULL))), ((0.7473106352158639)-('')), x'7e47' COLLATE RTRIM)))); -- 0ms;
SELECT ((t2.c0)*(t1.c2)) COLLATE NOCASE, CAST(t1.c28 COLLATE BINARY AS REAL), CAST(((t2.c42) ISNULL) AS INTEGER) FROM t1 WHERE (((x'' IN ('', 0xffffffff9ee8e8a7)) IN ())) GROUP BY ((CASE t2.c0  WHEN t1.c1 THEN t1.c1 ELSE t2.c42 END)IS(((t1.c57)>>(t1.c2)))) HAVING ((((t2.c42)) NOT BETWEEN ((t1.c1)) AND ((t2.c42))) IN ());SELECT DISTINCT DENSE_RANK() OVER (), CASE CAST(t2.c2 AS TEXT)  WHEN ((((((((t1.c2)AND(t2.c42)))AND(t2.c42)))OR(t1.c1)))OR(t1.c28)) THEN ((((t1.c1)OR(t2.c42)))AND(t2.c2)) WHEN ((t1.c28) NOT BETWEEN (t1.c2) AND (t2.c42)) THEN (~ (t2.c42)) WHEN ((t1.c57) NOT BETWEEN (t2.c0) AND (t2.c2)) THEN t1.c1 END, DENSE_RANK() OVER () FROM t1, t2 LIMIT 486675353; -- 0ms;
SELECT LEAD(((t1.c57 COLLATE NOCASE) NOT BETWEEN (CAST(t1.c2 AS INTEGER)) AND (TRIM(DISTINCT t2.c2, t1.c57))), ((CASE t1.c28  WHEN t2.c42 THEN t1.c28 ELSE t1.c2 END) BETWEEN (t1.c28) AND (t1.c57)), ((((((t2.c42))>((t1.c28)))))==((LOWER(t2.c42))))) OVER () FROM t1, t2 WHERE (((((NULL) BETWEEN (x'') AND ('|>^-'))) BETWEEN (('' IN ())) AND (((NULL) NOTNULL)))) LIMIT 552156367 OFFSET -2001492195; -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM t2, t1 WHERE (CAST(NULL AS NUMERIC) COLLATE BINARY); -- 0ms;
SELECT DISTINCT '' FROM t1, t2 WHERE (CASE json_array(x'', '|''', NULL, '-1289497957')  WHEN (x'' IN ()) THEN (((x'43ac'))<((NULL))) ELSE (x'4e33' IN ('1684426669', 0.507906936151529)) END);SELECT (- ((t1.c28 IN ()))) FROM t1 INDEXED BY i59; -- 0ms;
SELECT DISTINCT ((t2.c2 IN (t1.c2, t1.c57)) IN (t1.c2 COLLATE NOCASE)) FROM t1, t2 WHERE (((((x'')LIKE(NULL))) NOT BETWEEN ((~ (0Xffffffff9b124dc6))) AND (NULL COLLATE RTRIM))) LIMIT 1441417795 OFFSET 1749459244; -- 0ms;
SELECT DISTINCT (((t2.c2, t1.c1, t1.c1, t1.c28, t1.c2)) BETWEEN ((((0xffffffffdb91fc6a)|(t1.c2)), ((t2.c0)==(t1.c2)), ((((t2.c0)AND(t2.c42)))OR(t1.c2)), (((t2.c42, t1.c2, t1.c1)) NOT BETWEEN ((t1.c28, t2.c42, t2.c0)) AND ((x'', t1.c2, t2.c0))), ((t2.c0)*(t1.c2)))) AND ((GROUP_CONCAT(t1.c2), CAST(t1.c28 AS TEXT), CAST(t2.c42 AS REAL), (((t2.c42, '488592729', t1.c1)) BETWEEN ((t1.c2, t1.c28, t2.c0)) AND ((t1.c1, t1.c2, t1.c2))), ((t1.c1) BETWEEN (t2.c42) AND (t1.c28))))), 0.5154339126463696, '1308535673' FROM t1, t2 WHERE (((CAST(x'' AS NUMERIC)) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((x'de1a')AND(CAST(t1.c1 AS REAL))))AND(MIN(t1.c1, t1.c2))), GROUP_CONCAT(t2.c2) OVER (), ((t1.c1 COLLATE NOCASE) BETWEEN (((t2.c42)>(t1.c57))) AND (UNLIKELY(DISTINCT t1.c2))) FROM t2;SELECT SUM(ROUND(t2.c42, t2.c42)) OVER (), t1.c1, ((INSTR(t1.c57, t2.c42)) IS FALSE) FROM t1;SELECT LIKELIHOOD(MAX(t2.c0), 0.49896248911985375) FROM t2, t1; -- 0ms;
SELECT DISTINCT ((t2.c2) NOTNULL) COLLATE BINARY, CASE WHEN ((((t1.c57)AND(t1.c28)))OR(t2.c42)) THEN ((t2.c42)/(t2.c42)) WHEN ((t2.c2) NOT BETWEEN (t1.c2) AND (t1.c2)) THEN COUNT(*) WHEN ((((((((t2.c42)OR(t1.c2)))OR(t1.c57)))OR(t1.c57)))OR(t2.c2)) THEN t2.c42 COLLATE NOCASE END, CAST('-1230410144' AS NUMERIC) FROM t2, t1; -- 0ms;
SELECT ALL CAST(x'' AS INTEGER), CASE WHEN ((t1.c28) IS TRUE) THEN ((t1.c2)=(t1.c2)) ELSE t2.c2 COLLATE BINARY END, UNLIKELY(t1.c57) FROM t1;SELECT DISTINCT CASE WHEN (((t2.c0)) BETWEEN ((t2.c42)) AND ((x'f1cf8da5'))) THEN t2.c2 COLLATE RTRIM ELSE ((t2.c2)<=(t2.c2)) END FROM t2 WHERE (x''); -- 0ms;
SELECT (((t1.c57, t2.c42, t1.c1))==(('283583305', t1.c2, t1.c57))) COLLATE NOCASE FROM t2 ORDER BY (+ (((t2.c0)<=(t1.c1)))) ASC  NULLS LAST, CAST((t1.c28 IN ('-573196482')) AS INTEGER) ASC, COALESCE((((0.7762146262496418)) BETWEEN ((t1.c28)) AND ((t2.c2))), CASE WHEN t1.c28 THEN t2.c2 WHEN t2.c0 THEN x'' WHEN t1.c28 THEN 0.31636193793806644 ELSE t1.c28 END)  NULLS LAST, t1.c28;SELECT ALL (((+ (t2.c2)))+(((t2.c42) NOT BETWEEN (t1.c1) AND (t1.c28)))), TOTAL_CHANGES(), t1.c2 FROM t1, t2 WHERE ((0Xffffffffcdc2fd0b IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT 0.610895310043439 FROM t2 WHERE (LIKELIHOOD((('')||(x'38bc')), 0.9335420684508219)) ORDER BY t1.c2 ASC  NULLS FIRST, CAST(((t2.c2)+(-1.895139797E9)) AS TEXT) DESC;SELECT DISTINCT 0x6846a12c FROM t2 WHERE ((- (HEX(x'a49b')))); -- 0ms;
SELECT DISTINCT (((t1.c2, t1.c57, t1.c57)) BETWEEN ((CAST(t2.c2 AS NUMERIC), t2.c42, CHANGES())) AND ((((((t2.c2)OR(t1.c28)))OR(t2.c2)), CAST(t1.c2 AS REAL), t1.c57 COLLATE RTRIM))), t2.c2, t1.c1 FROM t2, t1; -- 0ms;
SELECT (~ (((t1.c28)%(t2.c42)))) FROM t2, t1; -- 0ms;
SELECT DISTINCT ((((((t1.c2)AND(t1.c57)))OR(t2.c0)))+(((t1.c2)>>(t1.c1)))), CASE WHEN t2.c42 COLLATE BINARY THEN (t1.c28 IN (t2.c0)) ELSE CAST(NULL AS TEXT) END, (+ (t1.c2)) FROM t2 WHERE (((0Xffffffffabe48875 COLLATE BINARY) NOT BETWEEN (((x'') NOTNULL)) AND (((1.107855137E9) NOT NULL))));SELECT LEAD((- (CAST(t2.c2 AS INTEGER))), ((CASE WHEN t2.c0 THEN NULL ELSE t2.c0 END) ISNULL), COALESCE(DISTINCT t2.c0 COLLATE BINARY, CASE t2.c2  WHEN t2.c0 THEN t2.c42 END, (t2.c0 IN ()), (t2.c0 IN ()))) OVER () FROM t2; -- 0ms;
SELECT ALL (t1.c1 IN ()) COLLATE RTRIM, (- (CAST(t2.c42 AS TEXT))), TRIM(DISTINCT t1.c57 COLLATE RTRIM, (+ (t2.c0))) FROM t1 WHERE (((((CASE WHEN x'2aa7' THEN '-1858629943' ELSE '^}o' END)OR(((NULL) IS FALSE))))OR(((x'')|(NULL)))));SELECT COUNT(*), (- (CAST(t1.c28 AS INTEGER))), (((t1.c1) BETWEEN (t2.c2) AND (t1.c2)) IN ()) FROM t2, t1; -- 0ms;
SELECT t2.c42 FROM t1;SELECT ((((((((((t1.c28) BETWEEN (x'57cf') AND (t1.c57)))OR(CAST(t1.c57 AS BLOB))))OR((x'7d69' IN ()))))AND(t1.c28)))OR(t2.c2 COLLATE NOCASE)), GROUP_CONCAT(((t2.c42)>=(t2.c42))), (((t1.c2)) NOT BETWEEN ((((((((((t2.c2)AND(t1.c28)))AND(t2.c0)))AND(t1.c57)))OR(0Xfffffffffba1cd6e)))) AND ((CASE -1e500  WHEN t2.c42 THEN t2.c0 WHEN '7/匿oLe' THEN t1.c28 WHEN t1.c57 THEN t1.c28 END))) FROM t2, t1 WHERE (CAST(((0.11718520162261148) BETWEEN (0Xffffffff98dc3388) AND (NULL)) AS INTEGER)); -- 0ms;
SELECT CASE t2.c42 COLLATE BINARY  WHEN CAST('ATZ%' AS NUMERIC) THEN CASE t2.c0  WHEN t2.c2 THEN t1.c28 END WHEN ((t2.c42)IS NOT(t2.c2)) THEN ((t1.c1)OR(t1.c2)) WHEN ((t1.c57)AND(t2.c42)) THEN CAST(t2.c2 AS REAL) END FROM t1, t2 WHERE ((~ (('' IN ())))); -- 0ms;
SELECT DISTINCT (~ (((t2.c2) NOT BETWEEN (t2.c2) AND (t1.c28)))), ((t1.c57) BETWEEN ('219549469') AND (t1.c28)) COLLATE BINARY, 'dN芮\naԤ' FROM t1, t2 INDEXED BY i59;SELECT ALL (((t2.c2 IN ())) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c28) AND (t1.c57))) AND (((t2.c0) ISNULL))), (((t2.c42, t1.c57, t1.c1)) NOT BETWEEN ((((t2.c0)==(t2.c0)), ((t1.c28) NOTNULL), 0.37159523415468354)) AND ((0.5792858931470143 COLLATE RTRIM, t1.c28, ((t2.c0) BETWEEN (t1.c28) AND (t2.c2))))), ((t1.c28)<<(t1.c28)) COLLATE BINARY FROM t2 WHERE (0.2381478776068059);SELECT DISTINCT (((((((((t2.c0 IN ()))OR(GROUP_CONCAT(t1.c1))))OR((- (t1.c2)))))OR((((t2.c42)) BETWEEN ((t1.c57)) AND ((t1.c28))))))AND((((t1.c1, t1.c28, t1.c28)) NOT BETWEEN ((t1.c28, t2.c0, t2.c2)) AND ((t1.c28, t2.c0, t1.c2))))) FROM t1;SELECT DISTINCT ((((t2.c42)/('*ꐀ625q')))-(((t2.c2) ISNULL))) FROM t2; -- 0ms;
SELECT CAST(((t1.c1) ISNULL) AS REAL), ((MAX(t1.c2, t1.c2)) NOT BETWEEN (x'') AND (((t2.c0)||(t2.c2)))), LIKELY(DISTINCT t1.c57 COLLATE BINARY) FROM t1 LEFT OUTER JOIN t2 ON ((x'') NOT NULL) WHERE (CASE WHEN (- ('13570838')) THEN (+ (0.1514509879375111)) WHEN CAST(NULL AS BLOB) THEN CASE 9.62375162E8  WHEN -1251515150 THEN NULL END WHEN (('㇟_v+>') NOTNULL) THEN CAST(-852291852 AS TEXT) WHEN '~瘫[+' COLLATE BINARY THEN (('XeC \rh|Z!') BETWEEN (x'') AND ('1773578110')) WHEN ((x'')*(0.3534442168703733)) THEN ((0Xffffffffa76b9580) BETWEEN (NULL) AND ('')) END); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1; -- 0ms;
SELECT ALL ((((((t1.c1)OR(t1.c2)))AND(t2.c0)))%(t1.c1 COLLATE BINARY)), (((+ (t2.c0)))>=(t1.c28)), t1.c1 FROM t1 WHERE ((((((((0.43597976570024977)) NOT BETWEEN ((x'')) AND ((NULL))))AND(x'')))AND(((('orv3	>')) BETWEEN ((NULL)) AND ((-1697648969))))));SELECT DISTINCT CAST(((t2.c2) NOT NULL) AS REAL) FROM t1;SELECT MIN(((((t2.c2)OR(t2.c42)))OR(t1.c1))) FROM t1, t2 WHERE ((+ (((((-1.58485095E8)AND(NULL)))OR(NULL))))); -- 0ms;
SELECT ALL UPPER(((t2.c42)%(t1.c28))) FROM t1, t2; -- 0ms;
SELECT DISTINCT (CASE t1.c2  WHEN t1.c1 THEN t1.c28 END IN ()) FROM t2 WHERE (CASE WHEN ((NULL)-('-124730035')) THEN (((NULL, 1547804065, 2.114246701E9)) BETWEEN ((0.49172287168632856, 0.24514126587774732, NULL)) AND (('}sc~[x9l', x'', 'C2%_)뤛눯'))) END) GROUP BY (~ ((((t2.c2))>((t2.c0))))) LIMIT -187373123; -- 1ms;
SELECT TOTAL(UNLIKELY(DISTINCT t1.c28)) OVER ( ROWS  UNBOUNDED PRECEDING), SUM(CAST(t2.c2 AS INTEGER)), '-71006955' FROM t2, t1 WHERE (x'2a682ec4'); -- 0ms;
SELECT DISTINCT ')}' FROM t1 WHERE ('N '); -- 0ms;
SELECT DISTINCT NULL, ((((((((t1.c57 COLLATE BINARY)AND(TOTAL(t1.c2))))OR(t2.c42 COLLATE NOCASE)))AND((((t2.c2))!=((t2.c2))))))AND(CASE WHEN t2.c2 THEN t1.c28 ELSE t1.c57 END)), (+ (((t1.c28)GLOB(t1.c28)))), ((t1.c28)LIKE(SUM(t2.c0))), '1766293823' FROM t2, t1 WHERE ((((0.5284644115228432 IN ())) ISNULL)) ORDER BY (((t2.c2 COLLATE NOCASE))<=(((((t1.c57)) BETWEEN ((t1.c57)) AND ((t1.c1)))))) ASC  NULLS FIRST, CAST(t2.c42 AS REAL) COLLATE BINARY DESC; -- 0ms;
SELECT ALL AVG(x'') OVER () FROM t2, t1; -- 0ms;
SELECT ALL ((GROUP_CONCAT(t1.c57))=(NULL COLLATE NOCASE)), json_valid(t1.c57), ((((t1.c57) BETWEEN (t2.c2) AND (t1.c1))) NOT BETWEEN (t1.c2 COLLATE BINARY) AND (((t1.c1) IS FALSE))) FROM t2 WHERE ((((('')||('')))IS NOT('-1644398053' COLLATE NOCASE))) LIMIT 64844033 OFFSET -520177556;SELECT '0.3925021967608443' FROM t1 WHERE (((((x'')IS NOT(0.44208064145122095))) NOT BETWEEN (('?kO	P땠곺-r' IN (NULL))) AND (((-703824775) BETWEEN (NULL) AND ('74987484'))))); -- 0ms;
SELECT CAST(((t2.c0)LIKE(t1.c1)) AS NUMERIC) FROM t2, t1 WHERE (NULL); -- 0ms;
SELECT CAST(((((t1.c1)OR(t1.c1)))AND(t1.c2)) AS INTEGER) FROM t1 WHERE (''); -- 0ms;
SELECT DISTINCT LEAD(t1.c28, ((((t1.c28)AND(t1.c1)))>=(t1.c57)), ((CASE WHEN t1.c1 THEN '1027349947' ELSE t1.c28 END) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c1 ELSE NULL END) AND (0.16969129319870158))) OVER (), CHAR(TOTAL(t1.c57), ((t1.c1)||(t1.c57)), ((t2.c2) NOT BETWEEN (t1.c57) AND (t1.c2))), t2.c2 FROM t1 WHERE (NULLIF(('c2%_)뤛눯' IN (NULL)), (NOT (x'2a92'))));SELECT ALL (((+ (t1.c28)))/((+ (t1.c57)))) FROM t2 WHERE ((+ (CASE WHEN 0.03532085662314932 THEN '981207411' END)));SELECT ((((x'')||(t2.c0))) NOT BETWEEN (CAST('1c0gIc7' AS INTEGER)) AND (t2.c2 COLLATE BINARY)) FROM t1 ORDER BY t2.c42, t1.c57  NULLS FIRST;SELECT ALL ((((((((t1.c2)OR(t2.c42)))OR(t2.c2)))OR(((t1.c28) IS FALSE))))OR(((t2.c0) BETWEEN (t2.c2) AND (t2.c0)))) FROM t1, t2; -- 0ms;
SELECT DISTINCT ((t2.c0)<=(((t2.c0) NOT BETWEEN (t1.c28) AND (t1.c28)))), (((t2.c42) ISNULL) IN ()), (((((t1.c2) NOTNULL), (NOT (NULL)), t1.c2))>(((+ (t1.c57)), ((t2.c2) BETWEEN (t2.c2) AND (t1.c2)), (((t2.c0, t1.c2, t1.c57)) BETWEEN ((x'', 'H', t1.c57)) AND ((t1.c2, t1.c57, t1.c57)))))) FROM t1, t2; -- 0ms;
SELECT DISTINCT ((((t1.c2) IS FALSE)) IS TRUE) FROM t2, t1 WHERE (CASE x'' COLLATE RTRIM  WHEN '(wt' COLLATE NOCASE THEN '-1978643912' COLLATE RTRIM ELSE ((x'bff4')>>(0.6320343873955272)) END) GROUP BY COALESCE(((t2.c0) NOT BETWEEN (t1.c1) AND (t1.c57)), (- (t2.c2)), (+ (t1.c57)), ((t2.c2) BETWEEN (t2.c42) AND (x'acdd'))); -- 0ms;
SELECT CASE WHEN t1.c1 COLLATE BINARY THEN CASE t1.c2  WHEN t2.c42 THEN 0x53c6df68 END END FROM t2, t1 WHERE (-1.289497957E9); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t2.c2))LIKE(((t2.c42) NOT BETWEEN (t1.c1) AND (t1.c28)))) FROM t1 WHERE (x'') LIMIT -715720501 OFFSET 1518514375;SELECT DISTINCT CAST(UNICODE(t2.c0) AS INTEGER), ((MIN(t1.c1))<(NULL)), ((t1.c57)<(t1.c2)) COLLATE BINARY FROM t2, t1; -- 0ms;
SELECT DISTINCT (((t2.c0)IS(t1.c57)) IN ()) FROM t2; -- 0ms;
SELECT DISTINCT (t1.c2 COLLATE BINARY IN (SUM(t2.c2))) FROM t2 WHERE (((CAST('1107855137' AS INTEGER))<((- ('5WLmF2 <')))));SELECT CASE t2.c0  WHEN t1.c57 THEN t2.c0 WHEN t1.c2 THEN t1.c28 WHEN t1.c57 THEN t1.c2 ELSE t2.c0 END COLLATE BINARY FROM t2;SELECT ALL t2.c2, t2.c42, SUM(t1.c57) FROM t1, t2 WHERE ('1460067734'); -- 0ms;
SELECT DISTINCT ((MAX(t1.c1))>>(((t2.c0) NOTNULL))) FROM t2;SELECT ((0xffffffffa5702a16) IS TRUE) FROM t1, t2 WHERE (json_array_length((NOT ('{IX^')), ((x'794a')!=('601943208'))));SELECT ALL x'3710' FROM t2 WHERE ((((+ ('-1907264932'))) ISNULL)); -- 0ms;
SELECT ALL CAST(((t2.c42)*(t1.c28)) AS BLOB) FROM t1, t2 WHERE (((((NULL)>=(0.4288284608138667)))/(((((-925560036)AND(NULL)))OR(0.06861349155593288))))); -- 0ms;
SELECT DISTINCT CAST(((t1.c57) NOT BETWEEN (t1.c28) AND (0.07188219370108473)) AS NUMERIC), CAST(t1.c28 AS TEXT) COLLATE BINARY, (((((t1.c28)/(NULL))))==((((t1.c57)>=(t2.c42))))) FROM t2, t1 WHERE ((+ (((x'')+('㾉_/?CfC喈8'))))); -- 0ms;
SELECT SUM(CASE WHEN t2.c2 THEN t2.c42 ELSE t2.c2 END) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), CASE WHEN (t2.c0 IN ()) THEN ((((t1.c2)OR(t2.c0)))OR(t2.c2)) WHEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c57)) THEN ((0.35472791013605354)%(t1.c2)) WHEN ((t2.c0) NOT BETWEEN (t1.c57) AND (t1.c57)) THEN (t1.c2 IN ()) ELSE ((((t1.c1)AND(t2.c42)))AND(t2.c2)) END, (((t1.c28)GLOB(t1.c57)) IN (((t2.c42) BETWEEN (t2.c42) AND (t1.c1)))) FROM t2 WHERE (((((NULL)=(NULL)))||(((NULL)>=(0.3179800005954291))))) LIMIT -1130244255 OFFSET -87867098;SELECT DISTINCT json_array_length(((t2.c2)*(t1.c57)), 0Xffffffffac52185e COLLATE NOCASE) FROM t1;SELECT (- (((((((((0.8172559843653372)OR(t2.c2)))AND(t1.c57)))OR(t1.c2)))OR(t2.c2)))), '573776520', ((((((((t2.c0 COLLATE BINARY)OR(((t1.c2) NOT BETWEEN (t1.c28) AND ('x语v')))))OR(t1.c28)))OR((('7/匿oLe') NOT NULL))))AND(t1.c2)) FROM t2, t1; -- 0ms;
SELECT DISTINCT SUM((~ (t2.c42))) COLLATE RTRIM, CASE ((t2.c0)|(t2.c0))  WHEN t2.c2 COLLATE BINARY THEN ((t1.c1)+(t1.c1)) END, CASE (t1.c57 IN ())  WHEN x'' COLLATE NOCASE THEN CAST(t2.c2 AS NUMERIC) WHEN MAX(t2.c2) THEN ((t2.c2) ISNULL) WHEN ((t1.c1)<(t2.c0)) THEN (((t1.c1, t2.c0, t1.c2)) NOT BETWEEN ((t2.c42, t1.c1, t1.c28)) AND ((x'bbb8c900', t1.c57, t1.c2))) END FROM t1 WHERE (NULL) LIMIT 896662584;SELECT DISTINCT CAST(t2.c0 AS INTEGER) COLLATE NOCASE, COUNT(*), ((MAX(t1.c1)) IS TRUE) FROM t2, t1; -- 0ms;
SELECT DISTINCT TYPEOF(MIN(t2.c0)) FROM t2 LIMIT 301452857 OFFSET -45778216; -- 0ms;
SELECT DISTINCT NTILE((+ (t2.c2 COLLATE NOCASE))) OVER ( ORDER BY CAST(((t2.c0) NOT BETWEEN (t2.c0) AND (t1.c1)) AS REAL) ASC  NULLS FIRST), (MAX(t2.c2) IN ()), ((t2.c2 IN ()) IN ()) FROM t2 WHERE ((+ (((x'') ISNULL)))) ORDER BY ((((t1.c28 IN ())))==((((((((((t2.c42)OR(t2.c2)))AND(t2.c0)))AND(t1.c57)))AND(t1.c57))))) DESC LIMIT 57198116;SELECT DISTINCT '-2146751701', LIKELY(DISTINCT 0.05930360312958449), ((((t1.c1) NOTNULL))<>((((t1.c57))>((t1.c28))))) FROM t2, t1 WHERE (((json_remove(0.7466410404554791, 'Gh'))<<(CAST(x'' AS BLOB)))) LIMIT 1466561409 OFFSET -2066374688;SELECT ((t2.c0 COLLATE RTRIM) NOT BETWEEN (t1.c2) AND (t1.c28)) FROM t1, t2 INDEXED BY i59 WHERE (((CASE NULL  WHEN '(p,.' THEN '#-o*-捧^~' END)<=(((0.38007818006714833)>=(x'48a1')))));SELECT DISTINCT (t2.c42 COLLATE BINARY IN ()) FROM t2 WHERE (CAST(NULL AS BLOB) COLLATE BINARY); -- 0ms;
SELECT DISTINCT NULL FROM t2, t1 WHERE (((CASE x'a3bd'  WHEN 0.9109393192816152 THEN x'' ELSE NULL END)+(CAST(-1644398053 AS NUMERIC)))); -- 0ms;
SELECT (((((t2.c0) NOT NULL), (+ (t2.c2)), (((t2.c42, t1.c2, t1.c1))>=((t2.c0, t1.c2, x'9cd7320e'))), -1424827980, ((t2.c42) IS FALSE)))>=((((t1.c57)IS(t2.c2)), t1.c1 COLLATE RTRIM, TRIM(DISTINCT t1.c57, t1.c57), MIN(t1.c57), ((((((((t1.c28)OR(t1.c57)))OR(t1.c1)))AND(t2.c0)))OR(t2.c42))))), (~ (x'')), (~ (t2.c42)) COLLATE NOCASE FROM t2, t1 WHERE (((((((0.7928643239605758) IS TRUE))OR((('')GLOB(0.87944881755209)))))AND('0.8899519557083375'))); -- 0ms;
SELECT DISTINCT ((CAST(t2.c0 AS BLOB)) BETWEEN (t1.c2) AND (t2.c0)) FROM t1, t2 WHERE (((NOT (1e500)) IN ())); -- 0ms;
SELECT ALL CAST(((t2.c2)>(t1.c28)) AS REAL), UPPER(DISTINCT t1.c28) COLLATE BINARY, (NOT ((- (t2.c2)))) FROM t2 WHERE (SUBSTR(((NULL)<<(x'')), ((('+H'))<((0.8272118075928024)))));SELECT DISTINCT (((t1.c2 IN ()))-(((t1.c28)LIKE(t1.c2)))) FROM t2, t1; -- 0ms;
SELECT t1.c1 FROM t1; -- 0ms;
SELECT DISTINCT ((CAST(t1.c2 AS BLOB)) NOTNULL), CASE WHEN ((t1.c1)>(t2.c0)) THEN ((t1.c1)OR(t2.c0)) ELSE ((((t2.c0)AND(t2.c0)))AND(t1.c1)) END, ((NULL)<(t1.c28 COLLATE RTRIM)), t1.c1, (COUNT(*) IN ()) FROM t2, t1; -- 0ms;
SELECT ALL ((((t1.c28) NOT BETWEEN (t2.c0) AND (t1.c2))) NOT BETWEEN (x'4265') AND (MAX(t2.c42, t2.c2))), (((t2.c2 IN ())) NOT BETWEEN (('䪐0Q' IN (t1.c57, t2.c2))) AND (((t1.c57)%(t2.c0)))), FIRST_VALUE(((((CAST(t1.c28 AS TEXT))AND(((t1.c1)IS(t1.c28)))))AND((((t1.c28, t1.c1, t1.c2, t1.c1, t1.c2)) NOT BETWEEN ((t1.c1, t1.c57, t1.c28, t1.c57, t1.c28)) AND ((NULL, t1.c57, t1.c2, t1.c28, t1.c2)))))) OVER ( RANGE  CURRENT ROW EXCLUDE TIES) FROM t1 WHERE (((((((((((NULL)OR(NULL)))OR(0.9248559989717924)))OR(x'')))AND(x''))) NOT NULL));SELECT DISTINCT (((NULL IN ())) NOT BETWEEN (((((((((NULL)AND(0.14467006282503037)))AND(t1.c1)))AND(t2.c2)))AND(t1.c2))) AND ((((('624358307')OR(t1.c28)))AND(t1.c57)))) FROM t1 WHERE (CASE WHEN ((x'843d')IS NOT(x'')) THEN (('-335100648') NOT BETWEEN ('z?bC0q 	Z') AND (0.753055091161333)) ELSE (((x'89ed', x'1c39', 0.9966779516899504))>=((x'', 0.9789362169800091, 0Xffffffffa49e4647))) END) ORDER BY CAST(CASE '\rꮒ'  WHEN t1.c2 THEN t2.c0 END AS REAL) DESC;SELECT DISTINCT AVG(LOWER(DISTINCT t1.c2)) FROM t2 WHERE (UNICODE(0.2583726144109474) COLLATE NOCASE COLLATE RTRIM);SELECT DISTINCT (((((x'c9f4')) BETWEEN ((t1.c2)) AND ((t1.c1))))*(((((((((t2.c42)OR(t1.c28)))OR(t1.c28)))AND(t1.c1)))AND(t1.c2)))), LAG((((((t2.c0))>((t2.c2)))) NOT BETWEEN (CASE WHEN t2.c42 THEN t2.c0 WHEN t2.c2 THEN t2.c42 WHEN t2.c2 THEN t2.c0 WHEN 0xfffffffff0c6ab92 THEN t2.c0 WHEN t2.c2 THEN -1960953710 END) AND (((t2.c0)>=(t2.c42)))), (~ ((NOT (t2.c0)))), (((('-964153789') BETWEEN (t2.c2) AND (t2.c42)))IS(t2.c2))) OVER (), (('1924454071') BETWEEN (t2.c42) AND (CAST(t1.c2 AS NUMERIC))) FROM t2 GROUP BY (((TRIM(t1.c2), (+ (t2.c2)), '1854390618', (((t1.c1, t1.c2, t2.c42, t2.c0, t2.c0)) NOT BETWEEN ((t2.c42, t1.c28, t1.c2, t2.c42, x'')) AND ((t2.c0, t2.c2, t2.c42, t1.c2, t1.c57))), (((t1.c1))<((t2.c0)))))>((t2.c2, ((t1.c2) NOT NULL), -680648277, CAST(t1.c2 AS TEXT), ((t1.c28) NOT BETWEEN (t1.c57) AND (t1.c1))))), ((((((((((((t2.c0)AND(t2.c0)))OR('XO尿Jxs')))AND(t2.c42)))AND('2005953365')))AND(((('1328301493')) NOT BETWEEN ((t1.c28)) AND ((t1.c28))))))OR(CAST(t1.c2 AS NUMERIC))), ((((t2.c2) NOT BETWEEN (t1.c1) AND ('301452857')))||(((t1.c28)/(t2.c2))));SELECT CASE WHEN CASE t2.c42  WHEN t1.c2 THEN t1.c28 WHEN t1.c57 THEN t1.c57 WHEN t1.c28 THEN t1.c28 END THEN ((((((((t1.c1)AND(0.5108456191320117)))OR(t1.c1)))AND(t1.c28)))AND(t2.c42)) END, ((((json_array('0.7698719444926485', t2.c0, t1.c57, t1.c2))OR(t1.c2 COLLATE RTRIM)))OR((~ (t1.c2)))), '1906728286' FROM t1 ORDER BY ((LIKELIHOOD(t2.c42, 0.6722691998537452))|(((t2.c2)IS NOT(t1.c1)))) ASC;SELECT ((((t2.c2)OR(t2.c0)))OR(t2.c42)) COLLATE NOCASE FROM t2 WHERE ((~ ('-416246547'))); -- 0ms;
SELECT NTILE((((t1.c57)) NOT BETWEEN ((CAST(t1.c1 AS INTEGER))) AND ((((t1.c28)OR(t1.c28)))))) OVER () FROM t1 WHERE (highlight(DATE('-1858342610', -795406054, NULL), ((-997782330) NOT BETWEEN (x'f07c') AND ('o')), ('814103201' IN ()), (((503534293))<((0x44733cf0)))));SELECT DISTINCT PERCENT_RANK() OVER () FROM t2, t1 WHERE (CAST((((x''))==(('-荳0{um눯Z^'))) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((- (t1.c2))) NOT BETWEEN ((+ (t1.c28))) AND ('-1960953710' COLLATE NOCASE)) FROM t1, t2 WHERE (((0x33f6c331) NOT NULL)); -- 0ms;
SELECT ((MIN(t2.c2)) IS FALSE), ((((t1.c28, t1.c2, t1.c57)) BETWEEN ((t2.c2, t1.c1, t1.c57)) AND ((t2.c42, t1.c1, x'f90f'))) IN (CASE WHEN -1825298941 THEN t2.c0 END, CASE t2.c0  WHEN t1.c1 THEN t1.c57 ELSE t1.c57 END)), CASE WHEN CASE WHEN '0.5293755876772593' THEN NULL END THEN CAST(t1.c57 AS INTEGER) ELSE (- (t1.c28)) END FROM t2, t1; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT LOWER(DISTINCT t2.c0)) FROM t2; -- 0ms;
SELECT ALL JULIANDAY(((t1.c2) IS FALSE), (NOT (t1.c2)), t1.c57, (t1.c2 IN ()), t1.c1 COLLATE NOCASE, ((t2.c0)&(t2.c2)), ((((((((t2.c0)AND(t2.c2)))OR(t1.c28)))OR(t1.c1)))AND(t1.c57))) FROM t2 LIMIT -680648277 OFFSET -213479341;SELECT ALL (((((((((t2.c2 IN (t2.c2)))AND((NOT (t2.c0)))))AND(t1.c57 COLLATE BINARY)))AND(((t2.c0)>(t2.c42)))))AND(STRFTIME(t1.c1, t1.c1, t1.c2))) FROM t2, t1; -- 0ms;
SELECT (NOT (((t1.c1) NOTNULL))), CASE WHEN (((t1.c1))<=((0xffffffff8854f2ce))) THEN ((t1.c2)||(t2.c2)) WHEN (t2.c0 IN ()) THEN ((t1.c57)>=(t2.c2)) WHEN (t2.c42 IN (t1.c2)) THEN t1.c1 COLLATE NOCASE WHEN t1.c1 THEN LOWER(t2.c42) WHEN ABS(t2.c42) THEN 5.29038618E8 ELSE x'' END, IFNULL(DISTINCT t2.c0, t2.c2) COLLATE BINARY FROM t2, t1 WHERE ((((((((((((((NULL)OR(0xcf1316)))OR('-1925034185')))OR(x'')))AND('-1484737184')))AND('1047174835')))OR(0.8436150335840539)) IN ())); -- 0ms;
SELECT (NOT (((t1.c1)|(t2.c2)))) FROM t2, t1 WHERE (((CASE x''  WHEN '-2091673440' THEN 'b	*C)(+^' ELSE 0.6875411669184571 END)>>((((x'')) BETWEEN ((x'')) AND ((x'f37c')))))); -- 0ms;
SELECT DISTINCT ((((t2.c2, t1.c28, t1.c1))<((t2.c0, t1.c1, t1.c28))) IN (t2.c42 COLLATE RTRIM, ((((t1.c28)AND(t2.c2)))OR(x'6e6b')))), GROUP_CONCAT(((((t2.c2)AND(t2.c0)))AND(t1.c2))) COLLATE RTRIM, MAX(((t1.c57) NOT NULL)), LIKE((t1.c1 IN ()), CAST(t1.c28 AS INTEGER), '1'), ((((t2.c42) NOT BETWEEN (t1.c57) AND (t1.c2)))IS(t2.c2 COLLATE BINARY)) FROM t2;SELECT ALL (NOT (t1.c57)), CUME_DIST() OVER (), ((LTRIM(t2.c0, t2.c42)) NOT BETWEEN ((t1.c57 IN (t2.c2))) AND (((((((((t2.c2)OR(t2.c2)))AND(t1.c2)))AND(x'')))AND(t1.c1)))) FROM t2 WHERE (LIKELY(DISTINCT 0Xffffffffb96b3532));SELECT DISTINCT ((CAST(t2.c0 AS INTEGER))-((t1.c57 IN (0.8899519557083375)))), (((((NOT (t1.c57)))OR(MIN(t1.c28))))AND(CAST(t1.c1 AS NUMERIC))), ((IFNULL(DISTINCT t2.c42, t2.c42))<<((- (t1.c2)))) FROM t2 WHERE (CASE CAST(NULL AS REAL)  WHEN ((('81')) BETWEEN (('-291430468')) AND (('129469011'))) THEN (((NULL, NULL, x'')) NOT BETWEEN (('0.865603173544288', '', 0.2898545697787108)) AND (('327574334', x'', 0.6473888156652913))) WHEN ((('eHW4rv', x'76c2', -1960953710))<(('쩽z ', 0.07926239124179912, NULL))) THEN ((')\ru.') IS FALSE) WHEN ABS(-1.85834261E9) THEN ((0.4697474397513104) NOTNULL) ELSE ((x'') NOT NULL) END);SELECT ALL CAST(((-3.35100648E8) ISNULL) AS REAL), t2.c42, ((CASE WHEN t1.c1 THEN t2.c2 WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t2.c2 WHEN t1.c28 THEN t1.c28 WHEN t1.c57 THEN t2.c0 ELSE t1.c28 END) ISNULL) FROM t1, t2; -- 0ms;
SELECT TOTAL((+ (t2.c2))) FROM t2 GROUP BY CASE WHEN CASE WHEN t2.c0 THEN t1.c1 WHEN t1.c1 THEN t2.c0 WHEN t1.c2 THEN t2.c0 END THEN CASE t2.c42  WHEN t1.c2 THEN t2.c0 END WHEN t1.c2 THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((((t2.c42)AND(t1.c57)))AND(t1.c1)) THEN ((t2.c2)||(t1.c28)) ELSE (t2.c2 IN ()) END HAVING t2.c2 LIMIT 766098993;SELECT t1.c1 FROM t1, t2; -- 0ms;
SELECT ALL (UNLIKELY(DISTINCT t2.c2) IN ()), ((COUNT(t1.c28)) NOT BETWEEN (((t2.c2) NOTNULL)) AND (((t2.c0) BETWEEN (t1.c2) AND (t2.c2)))), RANK() OVER () FROM t2, t1; -- 0ms;
SELECT -145670326, t1.c57, CASE 1024234428  WHEN CAST(t2.c2 AS INTEGER) THEN t1.c1 ELSE TYPEOF(t1.c2) END FROM t1;SELECT ALL (((t1.c28 IN ()))>=(0Xfffffffff890c54d)) FROM t1, t2 WHERE ((((((((x'')) BETWEEN ((0.16839448216944763)) AND ((NULL))))AND(LOWER(-6.31653233E8))))OR(0.8623689221763645 COLLATE BINARY))) ORDER BY (t1.c28 IN ()) COLLATE RTRIM DESC LIMIT -1414811434; -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c1 THEN t1.c28 END)||(((0.9109393192816152)%(0Xffffffffc496358e)))), LEAD(CAST(CASE WHEN t2.c0 THEN t2.c42 WHEN x'c268' THEN t2.c42 WHEN t2.c42 THEN 474831674 ELSE t2.c42 END AS INTEGER), CASE (t2.c0 IN ())  WHEN ((t2.c42) NOT BETWEEN (t2.c2) AND (t2.c2)) THEN CAST(t2.c2 AS NUMERIC) ELSE (t2.c0 IN (t2.c42)) END, t2.c2) OVER (), ((((t2.c2)||(t1.c28))) IS TRUE) FROM t2;SELECT DISTINCT t1.c1 FROM t2;SELECT DISTINCT ((t2.c2 COLLATE RTRIM)/(((t2.c2)||(t1.c28)))), CASE ((t2.c2)>(t1.c1))  WHEN CASE t1.c57  WHEN t2.c42 THEN t1.c28 ELSE t1.c28 END THEN t2.c2 WHEN ((t2.c0)*(t2.c0)) THEN (((t2.c42))<>((t1.c57))) WHEN (((t2.c0, 0.04780068167644569, t2.c0)) BETWEEN ((t2.c42, t2.c0, t1.c1)) AND ((t2.c2, t1.c57, t1.c2))) THEN ((((t1.c1)OR(t1.c2)))OR(t2.c2)) END, ((((((t2.c0)<(t1.c2)))AND(MAX('-1205026999'))))OR(CAST(t2.c2 AS TEXT))) FROM t1, t2 WHERE (CAST('vu_Ge' COLLATE BINARY AS BLOB)); -- 0ms;
SELECT DISTINCT t1.c2 FROM t2, t1 WHERE ((((NULL, '', '168228883')) BETWEEN ((CAST(x'' AS TEXT), (((x'f708', x'', 0.08834960478999143))>((0X368c624, '-1604484657', x''))), 0.8509431507518251)) AND ((((NULL) NOTNULL), CAST(NULL AS INTEGER), CAST('-1895139797' AS REAL))))); -- 0ms;
SELECT DISTINCT ((CAST(t1.c57 AS REAL)) NOT BETWEEN (((t2.c2) NOTNULL)) AND (CAST(t1.c2 AS TEXT))) FROM t2, t1 WHERE ((~ ((((((((('Qb')OR('')))AND(0.753055091161333)))AND(x'')))AND('-'))))); -- 0ms;
SELECT ALL CASE WHEN t2.c2 THEN (((t2.c0, t1.c57, t2.c2, t2.c2, t2.c42)) BETWEEN ((x'', t2.c2, t2.c0, x'', t1.c57)) AND ((t2.c42, t2.c0, t2.c0, t1.c2, t1.c2))) END FROM t1, t2; -- 0ms;
SELECT ALL (- (((t2.c2) ISNULL))) FROM t1, t2 ORDER BY CASE CAST(t2.c2 AS NUMERIC)  WHEN ((t2.c0)&(t2.c42)) THEN CASE WHEN t1.c2 THEN t1.c57 ELSE t1.c28 END ELSE ((t2.c0)&(t2.c0)) END ASC  NULLS LAST LIMIT 1063186517; -- 1ms;
SELECT DISTINCT ((((((((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))AND(((x'') BETWEEN (t2.c2) AND (t2.c0)))))OR(COUNT(t2.c0))))OR((t1.c28 IN ()))))OR(CAST(t1.c57 AS TEXT))) FROM t2, t1; -- 0ms;
SELECT (((t2.c2)) BETWEEN ((CASE WHEN t2.c2 THEN t1.c57 WHEN t1.c1 THEN t1.c28 WHEN t1.c2 THEN t1.c28 ELSE t1.c28 END)) AND ((TOTAL_CHANGES()))), UPPER(DISTINCT t2.c2), ((load_extension(t2.c0, t2.c2)) BETWEEN (SQLITE_SOURCE_ID()) AND (((t1.c1) BETWEEN (t1.c2) AND (t2.c2)))) FROM t1, t2 WHERE (0.8313133576512334);SELECT (((t2.c42)) NOT BETWEEN (((t1.c28 IN ()))) AND (((t1.c2 IN ())))) FROM t1;SELECT ALL CAST((((t2.c0))<((t1.c2))) AS REAL), (((t2.c0)) NOT BETWEEN ((((t1.c57) NOT BETWEEN (t1.c57) AND (t1.c1)))) AND ((TRIM(t2.c0)))), ((HEX(t1.c1))>(LOWER(t2.c0))), (((((((t2.c42)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))OR(((t2.c0)IS NOT(t2.c0)))))OR(t2.c42)), ROW_NUMBER() OVER () FROM t1 LIMIT 952691696;SELECT CASE t1.c28  WHEN t1.c57 COLLATE NOCASE THEN ((t2.c2) NOT BETWEEN (t1.c2) AND ('-1852210137')) WHEN ((t2.c2)+(t1.c2)) THEN (t1.c2 IN ()) WHEN ((t2.c0) NOT BETWEEN (t1.c2) AND (t1.c2)) THEN t1.c1 COLLATE RTRIM WHEN ((((((((((((t2.c0)AND(t2.c0)))AND(t1.c57)))OR(t2.c42)))AND(t1.c1)))OR(t1.c2)))OR(x'85fd')) THEN ((t2.c2) ISNULL) WHEN ((((NULL)AND(t2.c42)))AND(t2.c42)) THEN ((t2.c42) NOT BETWEEN (t2.c42) AND (t1.c1)) END FROM t1, t2 WHERE (((((''))<((x''))) IN ())); -- 0ms;
SELECT (((t2.c42, t1.c57, NULL)) NOT BETWEEN ((LIKE(t2.c2, t1.c1, '-'), MAX(t1.c1, t1.c57), AVG(t1.c1))) AND ((UPPER(DISTINCT t1.c2), ((((t1.c1)OR(t1.c28)))OR(t2.c0)), ((t2.c42)<(t2.c42))))) FROM t2;SELECT ALL x'1cb6' FROM t2, t1 WHERE (CASE WHEN x'' THEN 0.5819477521219325 WHEN 0.1091354561771476 THEN 0Xfffffffff05af5b4 WHEN 0.7905219320509093 THEN '' ELSE 0.43597976570024977 END COLLATE BINARY) GROUP BY ((((((((json_remove(t1.c57, t2.c2))OR(((((NULL)OR(t1.c57)))OR(t1.c2)))))AND(((t2.c0) BETWEEN (t1.c2) AND (t2.c42)))))AND(((t1.c1)<(t1.c57)))))OR((t2.c0 IN (x'a481')))) HAVING ((((t1.c57)>=(t1.c57)))<('0.7731743727981396'));SELECT DISTINCT ((CAST(t1.c28 AS REAL))LIKE(((((((((t1.c2)AND(t1.c28)))AND(t2.c2)))AND(t1.c57)))AND(t1.c28)))), ((((t1.c2)AND(t2.c2)))AND(t1.c1)) COLLATE RTRIM, 0.033712777075085576 FROM t2, t1; -- 0ms;
SELECT DISTINCT ((SUM(t1.c28)) NOT BETWEEN (((t1.c28) NOT BETWEEN (t1.c57) AND (t2.c42))) AND (GROUP_CONCAT(t2.c2))), x'', TOTAL(CAST(t1.c1 AS TEXT)) COLLATE NOCASE FROM t1;SELECT DISTINCT ((((((((((t1.c28)AND(t2.c0)))AND(t1.c28)))AND(x'2c53')))AND(t1.c2))) ISNULL) FROM t2, t1 WHERE (((UNLIKELY(NULL))<((((((((((((('mi[')AND(-952621807)))AND(0.4445148539997873)))AND(x'')))OR(0.6793312560875983)))OR(NULL)))OR(0.4229293896337434))))); -- 0ms;
SELECT DISTINCT (((SQLITE_COMPILEOPTION_USED(t1.c1), ((t1.c2) NOTNULL), ((t1.c2) IS FALSE)))>(((((t1.c2)) BETWEEN ((t1.c57)) AND ((t1.c28))), CAST(t1.c28 AS REAL), ((t2.c2) ISNULL)))) FROM t1 WHERE (((((-335100648)) BETWEEN ((x'')) AND (('X+ Z_'))) IN ((+ ('8*엁sꅩ')))));SELECT (((NOT (-272070366))) NOT BETWEEN (x'') AND (t2.c42 COLLATE BINARY)), UPPER(CASE WHEN t1.c2 THEN t1.c2 WHEN t2.c2 THEN t2.c42 WHEN t1.c57 THEN '428604546' END), json_extract(t2.c0 COLLATE BINARY, NULL, ((((((((t2.c42)AND(t1.c57)))OR(t1.c2)))OR(t1.c57)))AND(t2.c0)), ((t2.c2) NOT NULL)) FROM t1, t2;SELECT ((NULL COLLATE NOCASE)>(HEX(t2.c2))) FROM t1;SELECT DISTINCT LAG(TRIM(DISTINCT ((t1.c1)+(t2.c42))), NULL COLLATE BINARY COLLATE NOCASE, ((LTRIM(0X751d3075, t1.c2)) BETWEEN (CAST(t2.c42 AS NUMERIC)) AND (t1.c28 COLLATE BINARY))) OVER ( ORDER BY ((((t2.c2)>>(NULL)))<(((t2.c42)*(t2.c0)))) ASC  NULLS LAST) FROM t1, t2 WHERE (CASE (- (x''))  WHEN (('1e500') BETWEEN ('}M') AND (0.9348258749931966)) THEN CASE x'7582'  WHEN NULL THEN 'ofy' END ELSE ((((NULL)AND(x'')))AND(x'')) END) LIMIT 682001070 OFFSET -95539629; -- 0ms;
SELECT DISTINCT t2.c0 FROM t1 WHERE ((((('1661839040') IS TRUE)) NOTNULL));SELECT ((((CAST(t1.c57 AS NUMERIC))OR((((t2.c42, t2.c0, t2.c2)) BETWEEN ((t2.c2, t1.c2, t1.c57)) AND ((t1.c1, '/l', t2.c2))))))AND((- (t2.c0)))) FROM t2, t1 WHERE (((((x'9aae') BETWEEN ('vc,R,S0') AND ('緮6'))) ISNULL)); -- 0ms;
SELECT ALL (((((0.3378461559686886, t2.c0, t2.c2))!=((t2.c0, t2.c42, t1.c1))))<(LTRIM(t1.c1, t1.c28))), ((MIN(t2.c0)) BETWEEN (0.8201491220045554) AND ((((t2.c42)) BETWEEN ((t1.c2)) AND ((t1.c28))))), '>\rsP%{o' FROM t1 WHERE (CASE x''  WHEN '-924263550' THEN '0.0' WHEN NULL THEN x'b96b' WHEN 'I? i#p' THEN '' WHEN '' THEN x'a1cd' WHEN x'ee44' THEN NULL END COLLATE NOCASE);SELECT DISTINCT CASE WHEN CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END THEN 'FpAਛ୞D' END FROM t1, t2 WHERE ((((((('gd') NOT BETWEEN ('1924454071') AND (-6.21152136E8)))AND((('zs9	IQ') ISNULL))))AND(TRIM(NULL)))) GROUP BY ((((t2.c42, x'3580', t1.c57)) NOT BETWEEN ((t2.c0, t1.c28, t1.c2)) AND ((t1.c28, t2.c2, NULL))) IN ()), ((CAST(t2.c0 AS INTEGER))OR(t1.c57 COLLATE BINARY)), ABS(((t2.c0)+(t2.c0))); -- 1ms;
SELECT DISTINCT (((NOT (t2.c0))) IS FALSE) FROM t1, t2; -- 0ms;
SELECT DISTINCT CASE WHEN (3.01452857E8 IN ()) THEN ((((t2.c42)OR(t2.c2)))AND(t1.c2)) WHEN (t1.c2 IN ()) THEN ((t1.c57) BETWEEN (t1.c57) AND (t1.c2)) WHEN NULLIF(DISTINCT t1.c28, '282520025') THEN json(t2.c2) ELSE ((t1.c1) NOT BETWEEN (t2.c0) AND (t2.c2)) END, SUM(CAST(t1.c28 AS TEXT)), ((((CAST(t1.c1 AS BLOB))OR(((x'')!=(t1.c57)))))AND(((t2.c2) IS TRUE))) FROM t2, t1; -- 0ms;
SELECT ALL t2.c42, ((((((t1.c57)AND(t1.c57)))OR(t1.c28)))=(COUNT(*))), (LTRIM(t2.c2) IN ()) FROM t1;SELECT DISTINCT ((- (t2.c2)) IN ()) FROM t1, t2; -- 0ms;
SELECT DISTINCT (((t2.c42))<((t2.c42))) COLLATE BINARY FROM t1 GROUP BY (('')<=(SQLITE_COMPILEOPTION_GET(t2.c42))) HAVING ((((MIN(t1.c2))AND((((x'10e3', 0Xffffffffd3e0dce9, t1.c2))>((t1.c57, t2.c0, t2.c0))))))AND(((t2.c2)+(0.9408862409863656))));SELECT DISTINCT ((((GROUP_CONCAT(t2.c2))OR((NOT (t2.c2)))))OR(CASE t1.c2  WHEN t1.c28 THEN t1.c57 END)) FROM t1, t2 WHERE ((((('-693327078')%(NULL))) NOT NULL)); -- 1ms;
SELECT 'orv3	>' FROM t1, t2; -- 0ms;
SELECT ((CAST(t1.c28 AS REAL)) ISNULL) FROM t2 WHERE (((CASE WHEN '-964153789' THEN 0.6398982986892955 ELSE '' END)>((((('')OR(0.8471929711897789)))AND(0.6461436000320903)))));SELECT DISTINCT NULL FROM t1, t2 GROUP BY (CASE t2.c0  WHEN t2.c2 THEN x'8b48' END IN (((((((((t1.c28)OR(t2.c2)))OR(t2.c0)))AND(t1.c2)))OR(t1.c2)))), CAST(t1.c57 AS REAL) COLLATE NOCASE, (((~ (t1.c28))) NOT BETWEEN ((t1.c57 IN ())) AND (CAST(t1.c2 AS NUMERIC))) HAVING CAST(CAST(t1.c57 AS TEXT) AS TEXT); -- 0ms;
SELECT ((CASE t1.c2  WHEN t1.c1 THEN t2.c2 WHEN t2.c2 THEN t2.c0 WHEN t2.c42 THEN t1.c2 END)-(CAST(t2.c42 AS NUMERIC))) FROM t1, t2 WHERE (load_extension(json_object('o', 0.04104093212127391), (('-333620231') IS FALSE))) ORDER BY (0.435248968186974 COLLATE BINARY IN ())  NULLS FIRST;SELECT ((((t2.c2)OR(((((((((t1.c1)OR(t1.c1)))AND(t1.c57)))OR(t2.c2)))AND(t2.c2)))))AND((+ (t1.c28)))), t2.c42 COLLATE NOCASE, COALESCE(DISTINCT (('X#04B ') IS TRUE), ((t1.c1) NOTNULL), t1.c57, (~ (t2.c2))) FROM t1 WHERE (-2.55415406E8) ORDER BY CASE json_array_length(t2.c42)  WHEN (NOT (t2.c42)) THEN LENGTH(0x42773dc7) END DESC  NULLS LAST;SELECT DISTINCT (((t2.c2)%(t1.c1)) IN ()) FROM t1 WHERE ((((((-255415406)<('w}緶4]')), (('-462692162') IS TRUE), ((NULL)<(0.6007320982815575))))<>(((('<x') NOT BETWEEN (x'') AND (x'2bd8')), ((NULL) BETWEEN ('') AND (x'')), CAST(NULL AS BLOB))))) LIMIT 1766293823 OFFSET 2147204634; -- 0ms;
SELECT ((x'' IN ()) IN ()) FROM t2, t1; -- 0ms;
SELECT ALL CASE WHEN (((t1.c28, t2.c0, t1.c28))<((t1.c2, t2.c2, t1.c57))) THEN ((t1.c1)>=(t2.c2)) WHEN CASE WHEN t1.c1 THEN t2.c2 ELSE t1.c28 END THEN (t1.c2 IN ()) WHEN ((t1.c2)%(t1.c1)) THEN ((((t1.c57)AND(t2.c42)))AND(1.8643934E7)) WHEN (((t2.c2)) BETWEEN ((NULL)) AND ((t1.c2))) THEN ((0.3904450078071692)IS('1818088900')) WHEN ((0.7488629624917434)<<(t2.c0)) THEN ((t2.c2)||(t1.c1)) END, NULL, CAST(((t1.c57) BETWEEN (t2.c0) AND (t1.c28)) AS NUMERIC) FROM t2, t1 WHERE ((('}6') IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((NULL)<(((t1.c1)>(t1.c28)))), NULL, ((((t1.c57)IS(NULL))) NOTNULL) FROM t1, t2; -- 0ms;
SELECT DISTINCT CASE (t1.c1 IN ())  WHEN (~ (x'')) THEN CAST(t1.c57 AS BLOB) ELSE ((((t1.c2)OR(t1.c28)))AND(t1.c1)) END FROM t1, t2 WHERE (CAST(((x'') NOT NULL) AS BLOB)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((t1.c57)LIKE(t1.c1)) COLLATE RTRIM, ((t2.c0)LIKE(t1.c1)) COLLATE NOCASE FROM t1, t2 ORDER BY CASE WHEN ((t2.c0) NOT BETWEEN (t2.c42) AND (t1.c57)) THEN (+ (t2.c42)) ELSE ((x'')<=(t1.c28)) END DESC; -- 1ms;
SELECT ALL CASE WHEN ((t2.c42)<=(t1.c1)) THEN ((t2.c42)IS(0xcf1316)) ELSE CAST(t2.c2 AS REAL) END, ((t2.c2 COLLATE RTRIM)||(NULL)), ((CASE WHEN t2.c42 THEN t1.c28 ELSE t2.c0 END)|(((t1.c1)>(t1.c1)))) FROM t1;SELECT (+ (((t1.c28) NOT NULL))) FROM t1 ORDER BY ((((t2.c2)<(t1.c2)))LIKE(((t2.c0)<<(t2.c42))))  NULLS LAST;SELECT ((t1.c28) NOT BETWEEN (((t1.c28) NOT BETWEEN (NULL) AND (t1.c1))) AND (((t1.c28) IS TRUE))) FROM t1; -- 0ms;
SELECT DISTINCT (((((t2.c0, t2.c42, t1.c2)) BETWEEN ((t2.c42, t2.c42, t1.c1)) AND ((t1.c2, t1.c2, x'')))) NOT BETWEEN (((t2.c2) BETWEEN (t2.c2) AND (t1.c28))) AND ((t1.c2 IN (t2.c42)))) FROM t1 WHERE (CAST((+ (0x791b9859)) AS INTEGER));SELECT DISTINCT GROUP_CONCAT((t2.c0 IN (t1.c57))) FROM t2, t1; -- 0ms;
SELECT ALL ((t2.c42 COLLATE BINARY)LIKE(CASE t2.c0  WHEN t2.c2 THEN t2.c0 WHEN t1.c1 THEN x'1068' WHEN t2.c2 THEN t2.c0 ELSE t1.c1 END)) FROM t2, t1 WHERE (CHAR(0.5560685371199937) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT TRIM(DISTINCT t2.c0, t1.c28)), (~ (t2.c0 COLLATE NOCASE)), (((t1.c1)) BETWEEN (((+ (t2.c42)))) AND ((CAST(t1.c1 AS INTEGER)))) FROM t2, t1; -- 0ms;
SELECT DISTINCT ((LIKELY(t1.c28)) NOT NULL) FROM t2, t1; -- 0ms;
SELECT DISTINCT ((((((t2.c42) NOT BETWEEN (t1.c28) AND (t2.c42)))OR((t2.c42 IN ()))))AND((((t1.c28, t2.c2, t2.c2)) BETWEEN ((t1.c28, t2.c42, t1.c2)) AND ((t2.c2, t1.c1, t1.c2))))), ((MAX(t1.c2)) NOT BETWEEN (TOTAL(t1.c28)) AND (((t1.c28)IS(t1.c57)))), CAST(GROUP_CONCAT(t2.c42) AS BLOB) FROM t1 WHERE (((((x'', x'', x'305e'))==(('cm', NULL, 0xffffffffd7de23ca))) IN (((x'ad4d')!=('-335100648')))));SELECT DISTINCT ((((t2.c42) BETWEEN (t1.c1) AND (0.26744764974796287)))%(-9.86848188E8)) FROM t1, t2 GROUP BY ((((t1.c2)>(t1.c1)))<(((t2.c42) BETWEEN (t2.c0) AND (t2.c42)))); -- 0ms;
SELECT ALL ((((t2.c42) IS TRUE))%(((t1.c1)<(x'')))) FROM t1, t2 WHERE ((((((0xffffffffd173f8e0 IN ()))AND(('FALSE' IN ()))))OR((((NULL)) BETWEEN ((x'19ed')) AND ((-6.80648277E8)))))); -- 0ms;
SELECT DISTINCT CASE WHEN (('-237873720') NOTNULL) THEN t2.c42 COLLATE NOCASE END, (((NULL)>(t1.c1)) IN ()), ((((t2.c2) BETWEEN (t2.c0) AND (t2.c42))) NOT BETWEEN (CASE WHEN t2.c0 THEN t2.c2 END) AND (((t2.c0) BETWEEN (NULL) AND (t1.c28)))), CASE ((((t1.c57)AND(0.16379759020974993)))OR(t2.c2))  WHEN (- (t2.c0)) THEN t2.c0 ELSE t2.c42 COLLATE BINARY END, CAST((((t1.c57)) NOT BETWEEN ((t1.c28)) AND ((t1.c57))) AS BLOB) FROM t2, t1; -- 0ms;
SELECT DISTINCT TOTAL(TRIM(t1.c28)) FILTER(WHERE ((t2.c0)-(CAST(t2.c2 AS REAL)))) OVER () FROM t1 LIMIT 1358468813;SELECT ALL ((((t1.c2)>=(t1.c57))) IS FALSE) FROM t1, t2; -- 0ms;
SELECT DISTINCT ((t2.c0 IN ()) IN ()) FROM t2, t1 WHERE (((('-419679421' IN ('-536187881', '462654445')))<('-1604484657' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((TOTAL(t2.c2)) BETWEEN (((t2.c0) ISNULL)) AND (((t2.c42) ISNULL))) FROM t1, t2 WHERE ((((+ (''))) ISNULL)); -- 0ms;
SELECT ALL SUM(((((((((t1.c57)AND(NULL)))OR(t2.c0)))AND(t1.c2)))AND(t1.c57))) OVER () FROM t2 WHERE (((CASE WHEN x'' THEN x'' ELSE NULL END)%((- (x'e509')))));SELECT ALL ((t1.c28) NOT BETWEEN (-1105629575) AND (MIN(t1.c1))) FROM t2, t1; -- 0ms;
SELECT DISTINCT ((((((t2.c0) IS TRUE))OR(CASE t1.c57  WHEN t1.c28 THEN x'' ELSE t2.c2 END)))OR(CAST(t2.c2 AS NUMERIC))) FROM t1;SELECT DISTINCT '526911008' FROM t1, t2 WHERE (0.12796893353966354); -- 0ms;
SELECT DISTINCT ((t2.c2 COLLATE NOCASE)AND(((((t1.c28)OR(t2.c2)))OR(t1.c28)))), CASE t2.c0  WHEN t1.c28 THEN t2.c0 WHEN t2.c0 THEN t2.c42 WHEN t2.c0 THEN t2.c42 END COLLATE BINARY, (((((t2.c2, t2.c0, t1.c1))>((t2.c2, NULL, t2.c2)))) NOTNULL), ((((t2.c0) NOT NULL))+(CASE t2.c42  WHEN t1.c28 THEN t1.c2 WHEN t1.c2 THEN t1.c28 WHEN t1.c57 THEN t1.c28 END)), x'75bf' FROM t2 INDEXED BY i59 WHERE ((('-650584949') BETWEEN (((NULL) NOT BETWEEN (NULL) AND (x'188b'))) AND ((('0.6160872197123364') BETWEEN (NULL) AND (x'')))));SELECT DISTINCT ((('-1960953710')) NOT BETWEEN ((t2.c2)) AND ((t2.c2))) COLLATE RTRIM FROM t2 INDEXED BY i59, t1;SELECT DISTINCT (NOT (((0.3854480698410767)%(t2.c42)))) FROM t2 GROUP BY ((((('8i' IN (t2.c0)))OR(((-333620231)<=(t1.c1)))))AND(((t1.c1) IS FALSE)));SELECT DISTINCT ((((((((((t2.c2) NOT BETWEEN (t1.c2) AND (t2.c42)))AND(((((t2.c2)OR(t1.c2)))OR(t1.c2)))))AND(t1.c57)))OR(CASE WHEN t1.c28 THEN t2.c0 WHEN t1.c28 THEN t2.c0 WHEN 0.2776880782349316 THEN t1.c28 END)))AND(((((((((0.3085621049424878)OR(NULL)))AND(t2.c42)))AND(t2.c2)))OR(t1.c28)))) FROM t2, t1; -- 1ms;
SELECT ALL (- (TYPEOF(DISTINCT t2.c0))) FROM t2 FULL OUTER JOIN t1 ON CASE WHEN INSTR(0.49388193628752275, t1.c2) THEN ((t1.c2) IS TRUE) WHEN CAST(t2.c42 AS INTEGER) THEN ((t1.c2)%(t2.c2)) WHEN (+ (t2.c42)) THEN ((t1.c1)|(t2.c42)) ELSE LIKELY(t1.c28) END LIMIT 1635377878 OFFSET -2004123273; -- 0ms;
SELECT DISTINCT t1.c57, (NULL COLLATE BINARY IN ()), LEAD(((('1525293392' IN ()))=(t2.c42 COLLATE NOCASE)), ((((t1.c57) BETWEEN (t2.c42) AND (t1.c28)))=(((t2.c0)>=(t2.c2)))), ((CASE WHEN t2.c2 THEN t1.c1 WHEN t1.c1 THEN t2.c0 WHEN t1.c57 THEN '}' END)GLOB(((t1.c1)<>(t1.c57))))) OVER () FROM t2, t1; -- 0ms;
SELECT DISTINCT t2.c0 FROM t1, t2; -- 0ms;
SELECT DISTINCT (((((((((~ (t2.c2)))OR((((NULL))>=((t2.c2))))))OR(TOTAL(t2.c2))))OR(((t2.c0)>=(t1.c28)))))AND(((t2.c0)GLOB(t2.c2)))) FROM t1 WHERE (UPPER(DISTINCT ((((((((NULL)AND(NULL)))AND(x'')))AND(x'2480')))OR(x'')))) GROUP BY (((~ (t2.c0))) IS FALSE);SELECT DISTINCT (+ (x'')) FROM t2, t1 WHERE (TYPEOF(CASE 1.821943559E9  WHEN NULL THEN '-1793515953' END)); -- 0ms;
SELECT DISTINCT NULL, ((CASE WHEN t1.c2 THEN -1967238431 END) BETWEEN (((((((((t1.c1)AND(t2.c2)))AND(t1.c2)))OR(t1.c1)))AND(t1.c1))) AND (CAST(t2.c2 AS NUMERIC))), json_insert(((t1.c1)>>(t1.c28)), ((((((((((((((((t1.c57)AND(t1.c57)))AND(t1.c57)))AND(t2.c2)))AND(NULL)))OR(t2.c2)))OR(t2.c2)))AND(t1.c2)))AND(t2.c2)), CASE t1.c57  WHEN t1.c1 THEN NULL END, CASE x''  WHEN t1.c1 THEN t1.c28 WHEN t1.c2 THEN t1.c1 WHEN x'' THEN t2.c2 WHEN t1.c57 THEN t2.c2 WHEN t2.c2 THEN t2.c42 END, (((t1.c57)) BETWEEN ((NULL)) AND ((x'')))) FROM t1 WHERE ((((('0.43597976570024977' IN ())))!=((0.6219751186465455)))) LIMIT 1008925377;SELECT ALL t1.c2 FROM t2;SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(DISTINCT IFNULL('', 'Y᮶'))) GROUP BY t2.c2 HAVING (+ (COUNT(*)));SELECT DISTINCT ((t2.c0)|((- (t1.c2)))), ((CAST('-95059868' AS TEXT))-(((t1.c57) ISNULL))), TOTAL(CASE WHEN t2.c42 THEN t1.c28 END) OVER (), 0xffffffffb52260a4, ((t1.c28) NOT BETWEEN (t2.c0) AND (t2.c2)) COLLATE RTRIM FROM t1, t2; -- 1ms;
SELECT DISTINCT ((t1.c57 COLLATE BINARY)&(((x'')&(t1.c28)))) FROM t1, t2 LIMIT 841494511; -- 0ms;
SELECT (t1.c28 IN (t1.c1)) COLLATE RTRIM FROM t2, t1; -- 0ms;
SELECT DISTINCT ((((t2.c2, t1.c1, t1.c1)) BETWEEN ((t1.c2, t2.c0, t1.c57)) AND ((t1.c2, t2.c2, NULL))) IN ()), ((((0xffffffffab47bed2)AND(((t2.c2) NOT BETWEEN (t2.c42) AND (t1.c57)))))OR(HEX(DISTINCT t1.c28))), t1.c57 FROM t1 WHERE ((1.092040916E9 IN ())) ORDER BY -333877751;SELECT ALL (t1.c1 COLLATE RTRIM IN ()), 0.8616834001279627, MAX((t1.c57 IN ())), (TRIM(t1.c2, t1.c28) IN ()), GROUP_CONCAT(((t1.c2)-(t2.c2))) OVER () FROM t1 ORDER BY (('-1212518350')||(((t2.c42)|(t2.c2))))  NULLS LAST;SELECT DISTINCT SUM((((t2.c2)) NOT BETWEEN ((t2.c42)) AND ((t2.c2)))), ((CAST(t1.c57 AS REAL))!=(' x惤'')CN8悠')), ((t1.c2) BETWEEN (NULL) AND (t1.c28)) COLLATE NOCASE FROM t1, t2; -- 0ms;
SELECT DISTINCT (((NOT (x'')))<(CASE t1.c57  WHEN t2.c2 THEN t1.c57 END)) FROM t1;SELECT DISTINCT ((((t1.c2 IN ())))<=((((t2.c2) NOTNULL)))) FROM t1, t2 WHERE (((- (NULL)) IN ())) GROUP BY (CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END IN ()); -- 0ms;
SELECT (((t2.c42 IN ()))>((t1.c57 IN ()))) FROM t2 GROUP BY CASE ((t2.c42)*(t2.c42))  WHEN ((t2.c2)LIKE(t1.c57)) THEN (((t1.c57, t1.c2, 'P{m L''C')) NOT BETWEEN ((x'c8d73cd0', t2.c2, t1.c57)) AND ((t1.c57, t1.c2, t1.c2))) END;SELECT DISTINCT GROUP_CONCAT(((t1.c28)GLOB(t2.c0))) OVER (), CAST('-511411888' AS NUMERIC) COLLATE NOCASE, ((0X5cb8b22f) NOTNULL), ((((((((((((((0.6528663214067648)AND(t1.c57)))OR(t1.c57)))AND(t1.c1)))OR(t1.c1)))OR(t1.c57)))AND(0.8322818716797546))) BETWEEN (x'') AND ((((t1.c2)) BETWEEN ((t2.c0)) AND ((t1.c57))))), CASE WHEN NULL THEN LIKE(t2.c0, t1.c1, 'F') END FROM t1 ORDER BY CASE ((t1.c1) ISNULL)  WHEN x'1fb2ce27' THEN ((t1.c57)<<(t1.c57)) END  NULLS LAST LIMIT -158485095 OFFSET -28399289;SELECT DISTINCT TYPEOF(CASE WHEN x'7379c4d2' THEN t2.c42 ELSE t1.c28 END), ((((CAST(t2.c0 AS INTEGER))AND(((t2.c2)<=(t1.c2)))))OR(((t2.c0)<(NULL)))), ((((((((((x'') BETWEEN (t1.c2) AND (t2.c42)))OR(((NULL) NOT NULL))))OR(t1.c1 COLLATE BINARY)))AND(((t1.c2)&(t2.c0)))))OR(CASE t2.c2  WHEN t2.c42 THEN t2.c42 END)) FROM t1;SELECT ALL (('-1858629943')+(((((t1.c1)OR(t1.c1)))AND(t1.c2)))) FROM t2, t1 WHERE ((~ ((NOT (0.2975468205624915))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY NULL ASC  NULLS FIRST, ((t2.c0 COLLATE BINARY) IS FALSE)) FROM t1, t2; -- 0ms;
SELECT DISTINCT ((((t2.c0)>>(t2.c42)))IS NOT((('Z')IS(t1.c1)))) FROM t1, t2 WHERE (((((0.1638879223594999) BETWEEN (x'') AND (3.27574334E8)))IS NOT((NULL IN ())))); -- 0ms;
SELECT t2.c0, TOTAL((t1.c28 IN ())) OVER (), ((((((t2.c42)GLOB(t2.c0)))AND((NOT (t2.c0)))))OR(CASE WHEN t2.c2 THEN t1.c28 END)) FROM t2;SELECT ((x'')LIKE(((t1.c1) IS TRUE))) FROM t1 INDEXED BY i59, t2 ORDER BY (((t1.c1))<((((t1.c1)<=(t1.c1))))) ASC  NULLS FIRST; -- 0ms;
SELECT 0X691cbaed FROM t2; -- 0ms;
SELECT DISTINCT NTH_VALUE(ABS((t1.c57 IN ())), ((((t1.c57)/(t1.c2)))+(CASE t1.c57  WHEN t1.c28 THEN t1.c57 ELSE t1.c1 END))) OVER () FROM t1;SELECT (0Xfffffffff490c45c IN (NULLIF(t1.c57, t1.c1), LOWER(DISTINCT t2.c2))) FROM t1, t2 GROUP BY (t2.c2 IN ()) COLLATE NOCASE HAVING HEX(DISTINCT (+ (t1.c28))); -- 0ms;
SELECT ALL ((t1.c28 COLLATE NOCASE) BETWEEN (CASE 0.5089340907637525  WHEN t2.c2 THEN t1.c1 WHEN t1.c2 THEN t2.c2 WHEN NULL THEN t1.c1 ELSE t2.c2 END) AND ((((t2.c2)) NOT BETWEEN ((t2.c42)) AND ((t1.c1))))) FROM t2, t1 WHERE ((((0.7715870946849888) BETWEEN (-1547004607) AND (x'')) IN ())); -- 1ms;
SELECT CUME_DIST() OVER (), (- (IFNULL(t1.c57, t1.c28))), (((t1.c57 IN ())) IS FALSE) FROM t2, t1 WHERE (((((0xffffffffe0600136)LIKE('1661839040')))=((x'' IN ())))) ORDER BY COALESCE(DISTINCT t1.c57 COLLATE BINARY, (~ (t2.c2))) ASC; -- 0ms;
SELECT DISTINCT NTILE(((LIKELIHOOD(t1.c57, 0.8227750633195732)) NOT BETWEEN (0.3004266391326055) AND (((t1.c2) BETWEEN (t1.c1) AND (NULL))))) OVER () FROM t1 LIMIT -1621425771;SELECT ALL LENGTH(t1.c57), 0xffffffffb35c1509, ((t1.c57 COLLATE RTRIM) BETWEEN (((-1.117763867E9)>>(t1.c28))) AND (((t2.c42)<=(t1.c2)))) FROM t2 WHERE ((~ (((x'586b')AND(NULL)))));SELECT ALL 0.9078470574072438 FROM t1, t2 WHERE (((((0.3807178330837354)<>(x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT COUNT(t2.c42), (((t1.c2)) NOT BETWEEN ((((t1.c2) BETWEEN (t1.c1) AND (t1.c2)))) AND ((t2.c2 COLLATE NOCASE))), ((CASE t1.c1  WHEN t2.c42 THEN t2.c42 WHEN t2.c0 THEN t1.c2 WHEN t1.c57 THEN t2.c0 ELSE ']v3\ne' END) NOTNULL), '-1', COUNT(*) OVER () FROM t2;SELECT ALL ((t1.c57)<<(t2.c42)) COLLATE NOCASE FROM t2 WHERE (CAST((((('hos')OR('9cfCC￿k')))OR(0X943ed49)) AS BLOB));SELECT DISTINCT TOTAL((((t1.c2))==((t1.c57)))) OVER () FROM t1 ORDER BY SUBSTR((t1.c57 IN ()), t2.c42)  NULLS FIRST;SELECT DISTINCT ((t1.c2 COLLATE BINARY)<(CAST(t1.c2 AS NUMERIC))) FROM t2, t1 WHERE (((0x4865671d IN ()) IN ())); -- 0ms;
SELECT ALL LIKE(MAX(t1.c57), t2.c0) FROM t2 WHERE (((NOT (NULL)) IN (('c오|츹>nowRsW蠟' IN ('nx'))))) GROUP BY ((0.6358452278117511)<>(t2.c42)) ORDER BY t2.c42, t1.c1;SELECT ALL LAST_VALUE(t2.c0) OVER () FROM t2; -- 0ms;
SELECT ALL t1.c2 FROM t2, t1 WHERE (CAST((+ (NULL)) AS REAL)); -- 1ms;
SELECT PERCENT_RANK() OVER (), CAST(MAX(t2.c42) AS TEXT), ((- (t1.c2)) IN (t1.c28)) FROM t2 GROUP BY (((((((((t2.c0)AND(t1.c2)))OR(t2.c0)))AND(t2.c42)))AND(t1.c2)) IN ());SELECT (- (COUNT(t1.c1))) FROM t1, t2 WHERE ('Mq'); -- 0ms;
SELECT DISTINCT SUM(((t2.c2) BETWEEN (t1.c28) AND (t1.c57))) FROM t2, t1 GROUP BY t2.c0 HAVING ((UPPER(t1.c57)) BETWEEN (t1.c1 COLLATE BINARY) AND (CASE t1.c1  WHEN t1.c2 THEN t2.c0 WHEN 0.04449534987483961 THEN t2.c2 WHEN t1.c2 THEN t1.c57 ELSE t2.c0 END)) ORDER BY (CAST(t2.c2 AS NUMERIC) IN ()) DESC  NULLS FIRST LIMIT -1366157612 OFFSET -1169631687; -- 0ms;
SELECT ((((t1.c28 IN (t1.c1, t1.c57)), (((t1.c2))>=((t1.c57))), COUNT(t2.c0)))<=(((((t2.c42))=((t1.c57))), COUNT(*), LTRIM(t1.c2, '-114119268')))) FROM t2 WHERE (HEX(((NULL) BETWEEN (-797437800) AND ('155367049'))));SELECT ALL (MAX(t1.c28) IN ()), (('-740238103')=(((t1.c1) ISNULL))), (((((0x3c46d6d8)) NOT BETWEEN ((t2.c0)) AND ((t1.c57))))OR(t1.c1 COLLATE BINARY)) FROM t2, t1; -- 0ms;
SELECT ALL ((((t1.c28 COLLATE BINARY)AND(LOWER(DISTINCT t1.c57))))OR((NOT (t2.c42)))) FROM t1 ORDER BY (t1.c57 IN (t1.c1)) COLLATE NOCASE ASC LIMIT -680648277;SELECT DISTINCT ((((((t1.c1)OR(t2.c0)))OR(t2.c2))) BETWEEN (t1.c1 COLLATE BINARY) AND (t1.c28 COLLATE RTRIM)), LIKELIHOOD(DISTINCT rtreenode(t1.c2, t1.c1), 0.20509628274254477), t2.c2 FROM t1 LIMIT -265727350 OFFSET -437871173;SELECT (((t2.c42)) NOT BETWEEN ((((t1.c1) NOTNULL))) AND ((CAST(t2.c42 AS INTEGER)))) FROM t2;SELECT DISTINCT ((CASE t1.c1  WHEN t1.c28 THEN t1.c1 END)*(t1.c57 COLLATE NOCASE)) FROM t2;SELECT ALL t2.c0 FROM t2, t1 WHERE (CASE 0.1760320718133117  WHEN NULL THEN -424086489 ELSE '' END COLLATE BINARY); -- 0ms;
SELECT DISTINCT t1.c1, INSTR(NULL, ((((t1.c57)OR(t1.c2)))AND(t2.c42))), CASE ((t2.c0)==(t2.c2))  WHEN (NOT (t1.c2)) THEN ((t1.c1) NOT BETWEEN (t1.c57) AND (t2.c2)) ELSE ((t1.c28) NOT BETWEEN (t1.c2) AND (t1.c57)) END FROM t2;SELECT CAST(t2.c42 AS NUMERIC) COLLATE BINARY FROM t2, t1 WHERE (((x'')-(1.224491732E9)) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT ((CASE t1.c1  WHEN t2.c0 THEN t2.c0 END)<((- (t1.c57)))) FROM t1, t2 WHERE (((0x6aea1f9a)IS NOT(x'')) COLLATE BINARY); -- 0ms;
SELECT ALL ((COUNT(*))||(NULLIF(DISTINCT t2.c42, t1.c2))), ((t2.c42)-(t2.c42)) COLLATE BINARY COLLATE BINARY, COUNT(CASE t1.c28  WHEN t2.c2 THEN t1.c2 END) OVER () FROM t1 WHERE (((('vNAnGcF' IN (NULL, NULL)))OR((('-1204165104')<=('')))));SELECT DISTINCT (((~ (t2.c0))) NOTNULL) FROM t1;SELECT ((SUM(t2.c42))&((t1.c28 IN (t2.c0)))), (~ ((((t1.c57))<=((-7.1006955E7))))), ((SUM(0.8029198058751125))&(CASE WHEN t2.c0 THEN t1.c1 ELSE t1.c2 END)), IFNULL(DISTINCT 0.35250622899257367, ((((t2.c2)AND(t2.c0)))AND(t1.c28))), ((t2.c2) ISNULL) FROM t1, t2; -- 0ms;
SELECT DISTINCT CASE WHEN x'' THEN CAST(t2.c42 AS REAL) WHEN '' THEN ((t1.c28)&(t1.c2)) WHEN COUNT(*) THEN CAST(t1.c2 AS NUMERIC) ELSE AVG(t2.c42) END FROM t2 NOT INDEXED, t1 WHERE ((((((((((NULL)AND(-6.11189654E8)))AND(-1.724776696E9)))AND(NULL)))AND(NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((((t2.c0)+('udK9')))<<('-476383899')), (((CAST(t2.c42 AS BLOB), ((t1.c1) ISNULL), (t2.c2 IN (t1.c2))))>((CAST(t2.c2 AS REAL), COUNT(*), CASE t1.c28  WHEN x'1802' THEN t2.c42 WHEN t1.c28 THEN t1.c1 WHEN t2.c42 THEN t1.c28 END))), GROUP_CONCAT((t1.c57 IN (t1.c2, t2.c42))) FROM t1, t2 WHERE ((- (((((0.5317183193807536)AND(0x6f6ce04)))OR(NULL))))) GROUP BY ((((t1.c28)<>(t1.c2))) BETWEEN (t1.c2 COLLATE BINARY) AND (CAST(t2.c2 AS BLOB))) HAVING ((((t1.c2) NOT BETWEEN (t1.c28) AND (t2.c2)))-(COUNT(*))) ORDER BY (((('1635377878') NOTNULL)) NOT BETWEEN ((0.4222353089393005 IN ())) AND (((t2.c2) BETWEEN (t2.c42) AND (t1.c57))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (('') NOT NULL) FROM t1, t2 WHERE ((- (((('-964153789')) NOT BETWEEN ((0.7692027429106585)) AND (('wr')))))); -- 0ms;
SELECT DISTINCT 0.19955235563674734 FROM t2, t1; -- 0ms;
SELECT DISTINCT t1.c28, t2.c0, CASE GROUP_CONCAT(t1.c28)  WHEN (- (t1.c2)) THEN (t1.c28 IN ()) END FROM t2, t1 WHERE (((json_remove('', ''))IS(((((NULL)OR(NULL)))OR('cH6XRaj2')))));SELECT DISTINCT ((((((((t1.c1)AND(t2.c42)))OR(t2.c42)))AND(CAST(t2.c0 AS TEXT))))OR(t2.c0)) FROM t2, t1; -- 1ms;
SELECT CAST(((t1.c2)!=(t2.c42)) AS INTEGER), AVG(0.5896354072142329 COLLATE NOCASE) OVER (), CAST(((t2.c0)IS(t1.c2)) AS INTEGER) FROM t1, t2; -- 0ms;
SELECT DISTINCT ((((+ (t1.c2))))!=((((t2.c42)GLOB(t2.c0))))), (((((t1.c1 IN ()))AND('-124730035')))OR(((t1.c2) NOTNULL))), ((x'') NOT NULL) FROM t1, t2; -- 0ms;
SELECT DISTINCT (~ ((((t1.c28)) NOT BETWEEN ((0xffffffff9b1b0d10)) AND ((t1.c1))))) FROM t2, t1 WHERE ('962375162'); -- 0ms;
SELECT DISTINCT ((((t2.c2)OR(t2.c42)))LIKE((((t2.c42)) NOT BETWEEN ((t1.c28)) AND ((t2.c2))))), ((COUNT(t2.c42)) IS TRUE), t1.c57 COLLATE RTRIM FROM t1;SELECT NULL FROM t1, t2; -- 0ms;
SELECT ALL UNLIKELY(DISTINCT t2.c2), (((t2.c2)) BETWEEN ((t1.c57 COLLATE NOCASE)) AND ((((t1.c57)%(t2.c2))))), ((((t1.c1)OR(t1.c57)))OR(x'')) COLLATE BINARY FROM t2 WHERE ((((- (-1366157612)))>=((('rK')||(1e500)))));SELECT DISTINCT GROUP_CONCAT(((((t1.c57)AND(-1.117763867E9)))OR(t1.c57))) OVER (), (NOT (x'')), (((t1.c2, t1.c1, t2.c0)) BETWEEN ((UNLIKELY(t2.c2), t1.c2, CAST(t1.c2 AS TEXT))) AND ((COUNT(t2.c2), IFNULL(t1.c2, t2.c42), (NOT (t1.c57))))) FROM t1;SELECT ALL TRIM(DISTINCT t2.c2 COLLATE RTRIM) FROM t1, t2; -- 0ms;
SELECT ALL CAST(CAST(t1.c2 AS NUMERIC) AS INTEGER) FROM t2 WHERE (CAST(((('1718996029')) BETWEEN (('YMg㿟Jv')) AND (('bVl['))) AS INTEGER)) ORDER BY TRIM(((t2.c2) IS FALSE), (((t1.c2, t2.c42, t2.c2))<((t1.c57, t2.c2, t1.c2)))) DESC, ((CAST(t1.c28 AS TEXT))AND((((t1.c1, t1.c1, t2.c42))<=((t1.c57, t2.c0, t1.c2))))) ASC;SELECT (((t1.c57, (((t1.c57)) BETWEEN ((t1.c2)) AND ((t2.c42))), ((t1.c2)>=(NULL))))<(((((t1.c2, t1.c2, t2.c0))<=((t1.c2, t1.c57, t2.c0))), t1.c57, COUNT(*)))), ((((t1.c57)GLOB(t1.c28)))-(t1.c2)), (((t2.c2)) BETWEEN ((SUM(t2.c42))) AND ((((1141884986) BETWEEN (t1.c57) AND (x''))))) FROM t1 WHERE (NULL COLLATE NOCASE) ORDER BY ((CASE '[J'  WHEN t1.c2 THEN t2.c0 END)*(t1.c57 COLLATE BINARY)) DESC;SELECT (((((t2.c42, t2.c42, '726642693')) BETWEEN ((t1.c1, t2.c42, t1.c1)) AND ((t1.c57, -1820317954, t1.c1)))) IS TRUE), (((t2.c42)<>(t2.c0)) IN ()), CASE ((((((((t1.c1)OR(t1.c1)))OR(t2.c2)))OR(t1.c1)))AND(t2.c0))  WHEN ((NULL) IS TRUE) THEN json_array(t1.c28, t2.c2, t2.c42, t1.c57) END FROM t2 WHERE (CASE WHEN (((x'', x'', 0.5159292670197219))<=((x'', x'', NULL))) THEN ((0.518026005823477)>>(NULL)) WHEN (('-952518377')%(NULL)) THEN (- ('89q|*&7')) WHEN -1.117763867E9 THEN (((1521189747, 0.7439383329709637, x''))<>(('', 0.8280100329646575, x''))) ELSE (((('-788130027')OR(0.9239866363685895)))AND(NULL)) END);SELECT ALL MAX(COUNT(*)) FROM t2 WHERE ((((((((((0.8811284057056692 IN ()))OR(((NULL)IS NOT(NULL)))))AND((((('1065987322')AND('-1289497957')))OR(0.05556298820326111)))))AND(CAST('-1472087896' AS BLOB))))OR(CASE WHEN x'd733' THEN '13570838' END)));SELECT DISTINCT CAST((+ (t2.c0)) AS TEXT), ((((((((t2.c0)AND(t1.c2)))OR(t2.c2)))OR(0.34672373417701075)))AND(t1.c1)) COLLATE NOCASE, COUNT(*) OVER () FROM t2;SELECT ALL (((t1.c28)IS(t2.c2)) IN (((t1.c1) NOT NULL))) FROM t1 LIMIT -830083581;SELECT DISTINCT COUNT(*) OVER () FROM t1, t2 WHERE (CASE ''  WHEN x'' THEN '0.3807178330837354' END COLLATE BINARY); -- 0ms;
SELECT ALL (((t2.c0)) BETWEEN ((((((((((t1.c57)AND(t2.c42)))OR(t1.c1)))AND(t2.c0)))AND(t2.c42)))) AND ((t1.c2 COLLATE BINARY))), ((t1.c28 COLLATE NOCASE)*(LOWER(DISTINCT t2.c42))), ((((((t2.c2) NOT BETWEEN (t2.c0) AND (t1.c1)))OR(json_array_length(t1.c1))))OR(((t1.c2) NOTNULL))) FROM t2, t1 WHERE ((((0.0))>=((-780928800))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE ((((t2.c42)OR(t1.c2)))OR(t2.c42))  WHEN LOWER(t2.c2) THEN CAST(x'92d3' AS NUMERIC) WHEN ((t2.c0) IS FALSE) THEN ((t2.c0) NOT BETWEEN (t2.c0) AND (t1.c1)) WHEN -740090578 THEN CAST(t1.c57 AS NUMERIC) END, (+ (((t2.c42)>(0.5562933717908441)))), CASE WHEN (t1.c1 IN ()) THEN ((t1.c2)AND(t1.c2)) ELSE TOTAL(NULL) END FROM t1, t2 WHERE ((((('|H8(k') NOT NULL)) NOT NULL)) GROUP BY (((t2.c0)LIKE(t1.c57)) IN ()) HAVING (CAST(t2.c42 AS BLOB) IN ()); -- 0ms;
SELECT DISTINCT (((t1.c28, t1.c1, t1.c57)) BETWEEN ((((t1.c57)*(t2.c0)), (((t1.c1, t2.c2, t2.c2))<=((t1.c57, t1.c1, t2.c0))), t2.c2 COLLATE NOCASE)) AND ((((t1.c57) NOT BETWEEN (x'4e1c') AND (t1.c57)), TRIM(t1.c57, t2.c0), t2.c0))) FROM t1, t2 WHERE ((((highlight(0Xfffffffff890c54d, x'f6aa', x'', x'338a')))<>((((NULL) IS TRUE)))));SELECT ALL COUNT((NOT (t1.c1))) OVER () FROM t1, t2 WHERE (((('-1896678946' IN (0.3800776091016921))) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST((((t1.c28)) NOT BETWEEN ((t2.c2)) AND ((t2.c0))) AS TEXT) FROM t2, t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t1.c57 IN ())) FROM t1, t2 WHERE (((((NULL)GLOB('n_\~{**l')))<<((('Sc')<('+U7'))))); -- 0ms;
SELECT DISTINCT ((AVG(t1.c57))<=('2031944945')), COUNT(((t1.c28)&(t2.c2))) COLLATE BINARY, ROW_NUMBER() OVER () FROM t1;SELECT DISTINCT CASE WHEN t1.c2 THEN (+ (t1.c1)) ELSE CAST(t2.c42 AS INTEGER) END, SUM((((t1.c57)) NOT BETWEEN ((t1.c2)) AND ((t1.c57)))), CASE (((t1.c28))!=((t2.c0)))  WHEN x'cf2d' THEN (t2.c42 IN ()) END FROM t2, t1 WHERE (((-2.8399289E7)|(0.5528932912277054)) COLLATE BINARY); -- 1ms;
SELECT ((((t1.c2) IS TRUE)) NOT BETWEEN (((t1.c57)&(t2.c42))) AND (('g*' IN (t2.c42)))) FROM t2;SELECT ((((t2.c2) BETWEEN (t1.c57) AND (x'cea0'))) BETWEEN (((t1.c28) IS TRUE)) AND (((t1.c2)>=(t1.c2)))), 0.8265764002946551 COLLATE RTRIM, t2.c0, t2.c0, NTH_VALUE(UPPER(((t1.c1) IS FALSE)), CASE t1.c2 COLLATE NOCASE  WHEN CAST(t2.c2 AS REAL) THEN t2.c2 END) OVER () FROM t1, t2 NOT INDEXED;SELECT ALL (UPPER(t1.c2) IN ()) FROM t2, t1; -- 0ms;
SELECT DISTINCT ((CAST(t1.c57 AS BLOB)) IS TRUE), AVG(((((((((t1.c1)AND(t1.c2)))OR(t1.c57)))OR(t2.c42)))AND(t1.c2)) COLLATE RTRIM) FILTER(WHERE (- (CASE WHEN t1.c2 THEN t2.c0 END))) OVER (), ((((((((((((((x'')AND(t1.c1)))OR(t1.c57)))AND(0.4548943564747351)))OR(t2.c42)))OR(t1.c28)))OR(t1.c57))) IS FALSE) FROM t2 WHERE ((((((((('0.4548943564747351')AND('682001070')))OR(NULL)))OR('1766293823')))OR('-788130027')) COLLATE RTRIM) LIMIT 99223366 OFFSET 1902613476;SELECT DISTINCT COUNT(*), 0.30842362391224554, (((t1.c57) NOTNULL) IN ()) FROM t2, t1 WHERE ((CAST(-1e500 AS INTEGER) IN (CASE 0xffffffffdb91fc6a  WHEN 0.3794615698134247 THEN '7k/ah/*?7' ELSE 0X73750806 END))); -- 0ms;
SELECT ALL SUM(NULL) OVER () FROM t2, t1 WHERE (CASE WHEN (('ms\㰰')|(0.47974395644893597)) THEN ((5.7198116E7) IS FALSE) WHEN CASE WHEN x'' THEN NULL ELSE '122314000' END THEN ((x'1028')!=(x'182a')) WHEN (NOT (NULL)) THEN (+ (0.38900000272724755)) END); -- 0ms;
SELECT DISTINCT (((((t1.c28))>((t2.c2)))) IS TRUE), ((((LOWER(DISTINCT 0.5539850546043431))OR(((t2.c42)|(t1.c57)))))AND(0.10198078095474017)), TOTAL(((t2.c42) NOT BETWEEN (t2.c42) AND (t2.c2))) FROM t2 NATURAL JOIN t1 WHERE ((((- ('')))!=(((NULL) IS TRUE)))); -- 0ms;
SELECT CAST(((t1.c57)|(t1.c28)) AS TEXT), ((((((t1.c2)OR(t1.c2)))AND(t1.c2)))OR((((t2.c2)) BETWEEN ((t1.c1)) AND ((0.7392762755590641))))), (~ ((+ (t2.c0)))), (((((t1.c57) ISNULL), CASE WHEN t2.c2 THEN t2.c42 END, CASE t2.c2  WHEN t1.c1 THEN t1.c2 WHEN t2.c0 THEN t2.c0 WHEN NULL THEN t1.c57 END))<=((CAST(t2.c0 AS TEXT), (((t2.c2)) NOT BETWEEN ((t1.c28)) AND ((t1.c28))), ((t1.c28)<=(t2.c0))))), CASE WHEN t1.c57 THEN LIKE(t2.c2, t1.c28, 'D') WHEN t2.c42 THEN (- (t2.c2)) WHEN ((t1.c57) IS FALSE) THEN NULL COLLATE RTRIM END FROM t2 WHERE (((('-1084048260' COLLATE RTRIM))<=(((('1466938653') BETWEEN ('') AND (NULL))))));SELECT ALL AVG((+ (t2.c0))) FROM t2; -- 0ms;
SELECT DISTINCT CASE SUM(t2.c0)  WHEN ((t1.c2)-(t1.c28)) THEN (((t2.c42))!=((t1.c1))) ELSE ((((0.36171050787023573)OR(t1.c2)))AND(t1.c57)) END FROM t1 WHERE ((CASE x''  WHEN 'NZ3G蜡' THEN 0.6660184616982341 END IN ()));SELECT ALL t1.c1 COLLATE BINARY FROM t2, t1 GROUP BY ((((t1.c1) IS TRUE))&((+ (t2.c2)))), (+ (((t1.c2)GLOB(t2.c42)))), ((CAST(t1.c2 AS REAL)) IS TRUE); -- 0ms;
SELECT ALL (NOT (t2.c42)) FROM t1, t2 ORDER BY (+ (((t2.c2)GLOB(t1.c2)))) ASC  NULLS FIRST; -- 0ms;
SELECT (((0X7e04d82d))>=(((t1.c2 IN (t2.c0))))) FROM t1, t2 WHERE ((((x'' IN ())) NOT NULL)); -- 0ms;
SELECT DISTINCT TOTAL((- (t2.c0))) OVER ( ORDER BY CAST(CAST(t1.c2 AS TEXT) AS INTEGER)) FROM t1;SELECT DISTINCT (((((t1.c1 IN ()))AND(t1.c28 COLLATE RTRIM)))OR(((t2.c0)OR(t2.c42)))) FROM t2, t1 ORDER BY t2.c42 ASC  NULLS LAST; -- 0ms;
