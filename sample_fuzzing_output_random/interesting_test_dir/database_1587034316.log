-- Time: 2024/06/06 02:57:05
-- Database: database16
-- Database version: 3.40.0
-- seed value: 1587034316
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1, c2 UNINDEXED); -- 5ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1); -- 0ms;
UPDATE vt1 SET c1=NULL, c1='簾' WHERE (((((vt1.c0))>=((2.33961894E8))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)); -- 0ms;
REINDEX; -- 0ms;
UPDATE vt0 SET c2='-358477392'; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1444881454);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1444881454,15');\n; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c1, c1)=(NULL, '1272991644', ''); -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES (0.6640541401562318, 'LB'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA journal_mode = TRUNCATE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '45435'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt1 SET (c1)=(0.6640541401562318); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 308772687); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1456753204);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1168739717); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '1375'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-154731277,12');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 257204673); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c1, c2, c0) VALUES (-1.456753204E9, 'b쪨ZJsx', '-154731277'), (x'', 0.7194291208633126, -1.456753204E9), ('233961894', 0x561f242e, 0.38797721613285685); -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
PRAGMA temp.cell_size_check = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=('d', NULL) WHERE (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c2)>>(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)))) AND ((((vt0.c0)&(vt0.c0)), ((vt0.c2) ISNULL), vt0.c2))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.4129105278675935); -- 0ms;
UPDATE vt1 SET (c0)=(-1.456753204E9); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('0.7194291208633126'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2, c0) VALUES ('XoB{S⻔.', '1444881454', 0X7eb87395), (0xffffffffea4e6cc7, '', NULL), (NULL, '-358477392', NULL); -- 0ms;
PRAGMA mmap_size = -2546552053419509636; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c2, c2)=('', 0.4450851071247366, '') WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c0)<=(vt0.c1)))); -- 0ms;
DROP TABLE vt1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1380173268); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (0.5160980571270053, 0.5289345535235078), (NULL, NULL), ('7[', 'GkaၔL!V'); -- 1ms;
UPDATE vt0 SET c2='', c2='0.5289345535235078' WHERE vt0.c2; -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.23517456369747536); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1, c2) VALUES (-1.456753204E9, x'', 0xffffffffddf9ebbd), (NULL, 0X434f3c65, NULL), (NULL, NULL, x''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET c0=x'' WHERE vt0.c0; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('2113782937'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -363959097);\n; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (2126017429, x'', 594782585); -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (x'', x'', NULL), (x'', 'b쪨ZJsx', 0.6047907699519361), (0.7321953546728592, NULL, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -840563881);\n; -- 0ms;
REINDEX; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR ABORT vt0 SET c2=NULL; -- 1ms;
PRAGMA temp.secure_delete = false; -- 0ms;
PRAGMA optimize; -- 1ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
UPDATE vt0 SET (c1)=(x'37f8'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c2=x'2303', c2=NULL WHERE vt0.c2; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (STRFTIME(('1608837250' IN (2.113782937E9, x'')), (+ (NULL)), (+ (NULL)), '-1618078089', (+ (0.6640541401562318)), ((('P{?U'))>=((NULL))), ((0.5911194423053623) BETWEEN (0x0) AND (0xffffffffcc5d79a9)))); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0Xffffffff94368c0d), (0x7526878a), (0xffffffffb393caa8); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES (0Xffffffff845cee14, NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('2008675952') WHERE '1'; -- 0ms;
PRAGMA incremental_vacuum(-1782576358); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT OR ABORT INTO vt0(c1, c2) VALUES ('F EB?zX_', 1.272991644E9), (x'17cc', '1119393064'), ('', NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR ABORT INTO vt0(c2) VALUES (NULL), (NULL), ('-162780269'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2) VALUES (x'', 0.604131265183385); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT OR FAIL INTO vt0(c1, c2) VALUES (0.5911194423053623, 0.8371440991146941); -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
PRAGMA shrink_memory; -- 0ms;
UPDATE vt0 SET c1='2113782937', c2=x'' WHERE (((vt0.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c2))))) AND (((vt0.c2 IN ())))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1050658396'); -- 1ms;
UPDATE vt0 SET c2=0.5289345535235078 WHERE (((vt0.c0 COLLATE RTRIM, ((vt0.c2) ISNULL), (vt0.c2 IN (vt0.c1))))=((STRFTIME(vt0.c2, vt0.c2, vt0.c1), ((vt0.c0)+(vt0.c1)), ''))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(0.23517456369747536); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', '-226924356', NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'bb96' WHERE CAST(CAST(vt0.c2 AS BLOB) AS BLOB); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (828638582); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42861'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (SUM(vt0.c1) IN (((vt0.c0)IS(vt0.c1)))), '118950130', CAST((+ (vt0.c1)) AS REAL) FROM vt0 WHERE (((((NULL)<<('-2041815855')))IS(NULL))) GROUP BY (NOT (vt0.c0)) COLLATE NOCASE ORDER BY LIKELIHOOD(vt0.c2, 0.5722361119196256) COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt0.c2) BETWEEN (vt0.c1) AND (NULL))) BETWEEN (CAST(vt0.c2 AS REAL)) AND (((vt0.c1) IS TRUE))), ((CAST(vt0.c0 AS REAL))&((((vt0.c2))<=((vt0.c0))))), ((((MAX(vt0.c2))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)))OR(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((((x'5eff', x'', 'X^')) BETWEEN (('#O5gN퐭Z_D', 0.5809389149644975, 0.7194291208633126)) AND ((1922370876, x'', x'')))))<>((CAST(x'' AS TEXT))))) ORDER BY ABS(DISTINCT CASE WHEN vt0.c1 THEN vt0.c0 END) ASC, ((((((((((((((vt0.c1) ISNULL))OR(-8.40563881E8)))OR(((',C') NOTNULL))))OR('6/V6')))AND((vt0.c1 IN ()))))OR((((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((x'', '#o5gn퐭z_d', vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c0))))))AND(vt0.c2))  NULLS LAST, (((((('2075731995') BETWEEN (vt0.c0) AND (vt0.c2)))AND(((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)))))OR((((vt0.c0))>((vt0.c1))))) DESC; -- 0ms;
SELECT ALL (COUNT(*) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0 WHERE (((((('122922193')IS NOT(0.7194291208633126))))>((((x'b1b5967c') NOTNULL))))); -- 1ms;
SELECT DISTINCT CAST(vt0.c0 AS REAL) FROM vt0 ORDER BY NULLIF(CAST(vt0.c0 AS INTEGER), ((vt0.c2)>=(vt0.c1)))  NULLS LAST, (vt0.c2 COLLATE RTRIM IN (CAST(vt0.c2 AS BLOB), CAST(vt0.c0 AS BLOB))) ASC; -- 0ms;
SELECT ((vt0.c0)IS NOT(x'')) COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN vt0.c1 END) ISNULL), ((((vt0.c1) ISNULL))*(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT AVG(1.965459338E9) OVER () FROM vt0; -- 0ms;
SELECT (NOT (vt0.c2)) COLLATE BINARY, CAST(((vt0.c1)GLOB(vt0.c1)) AS REAL), ((vt0.c1) ISNULL) COLLATE RTRIM FROM vt0 WHERE (((NULL)<(x'533a56fc')) COLLATE BINARY); -- 1ms;
SELECT CASE WHEN CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c2)LIKE(NULL)) WHEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c1))>((vt0.c2))) WHEN ((0xffffffffd045df89) NOT NULL) THEN 0.3669149710765366 ELSE ((vt0.c0) NOT NULL) END, ((((vt0.c2)>(vt0.c0)))OR(TOTAL(vt0.c2))), PERCENT_RANK() OVER ( ORDER BY vt0.c0  NULLS FIRST) FROM vt0 GROUP BY ((((vt0.c1) ISNULL))&(CAST(vt0.c0 AS NUMERIC))) LIMIT -1282159960 OFFSET 1463841223; -- 0ms;
SELECT (~ (vt0.c1)), COUNT(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END) FILTER(WHERE (- (vt0.c0 COLLATE BINARY))) OVER (), CASE WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) ELSE (((vt0.c2))<>((vt0.c1))) END FROM vt0; -- 0ms;
SELECT (- (NULLIF(DISTINCT vt0.c1, vt0.c1))), TOTAL_CHANGES(), ((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0))) NOTNULL) FROM vt0 ORDER BY (+ (((vt0.c2) NOT BETWEEN (vt0.c0) AND (0.436295639939999)))) ASC; -- 0ms;
SELECT ((((vt0.c0)>=(vt0.c2))) NOTNULL), ((((vt0.c2)/(NULL)))LIKE((NOT (x'')))), NTILE(CASE WHEN vt0.c2 THEN vt0.c2 END COLLATE BINARY) OVER () FROM vt0 WHERE ((((((('803675420')OR(x'')))AND(0.25836374667878015)))/((((('-866289239')OR(x'')))OR(NULL)))));SELECT ((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END) BETWEEN (vt0.c2) AND (CAST(vt0.c1 AS REAL))) FROM vt0 WHERE (((((0.6741814717173586)-(0.4245262745871393)))==(CASE x''  WHEN 1686911319 THEN NULL ELSE NULL END))); -- 0ms;
SELECT DISTINCT 0.5809389149644975 FROM vt0 WHERE ((~ (((('禍')) BETWEEN ((0.4450851071247366)) AND ((x'043a')))))); -- 0ms;
SELECT ALL ((vt0.c1)IS(vt0.c2)) COLLATE NOCASE FROM vt0 GROUP BY CAST(((vt0.c0)GLOB(vt0.c2)) AS INTEGER); -- 0ms;
SELECT CASE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END  WHEN x'' COLLATE NOCASE THEN '723652692' END FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)OR((vt0.c0 IN ()))))OR(((vt0.c1) NOTNULL))))OR(COUNT('1922370876'))))OR(x'')), TRIM(DISTINCT (vt0.c1 IN ())), CASE CAST(vt0.c1 AS BLOB)  WHEN (((vt0.c2)) BETWEEN ((vt0.c0)) AND (('U'))) THEN (vt0.c1 IN (vt0.c0)) WHEN CAST(vt0.c2 AS INTEGER) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN TRIM(DISTINCT vt0.c0, vt0.c2) THEN (NOT (vt0.c1)) WHEN ((((0.12796708778077126)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) WHEN SUM(vt0.c0) THEN (- (vt0.c1)) ELSE (vt0.c2 IN (vt0.c1)) END FROM vt0 WHERE (CASE CAST('-154731277' AS REAL)  WHEN 0.1490741937114195 THEN (('')<(NULL)) END); -- 0ms;
SELECT COUNT(vt0.c0) OVER () FROM vt0; -- 0ms;
SELECT ((((vt0.c2) NOTNULL)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (x'bb4b'); -- 0ms;
SELECT DISTINCT CAST((- (vt0.c2)) AS INTEGER) FROM vt0 WHERE (ABS(DISTINCT 2.33961894E8) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c1)) BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND (CASE WHEN vt0.c2 THEN '1707163362' ELSE vt0.c2 END)), CAST(COUNT(vt0.c1) AS BLOB), (json_quote(vt0.c0) IN ('-897481348', LIKE(vt0.c2, vt0.c0, 'A'))) FROM vt0 WHERE (((((((NULL) NOT BETWEEN ('	(') AND (NULL)))AND(((0.48057350575756697) NOT BETWEEN (0X7bb9281b) AND (NULL)))))OR(0Xffffffffc781da03)));SELECT LEAD((vt0.c0 COLLATE RTRIM IN ()), (~ (vt0.c2 COLLATE RTRIM)), x'') OVER () FROM vt0; -- 0ms;
SELECT ((((vt0.c1)<=(vt0.c1)))AND((vt0.c1 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) IS TRUE) COLLATE RTRIM) FILTER(WHERE CASE WHEN vt0.c1 COLLATE BINARY THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) WHEN ((vt0.c2) IS TRUE) THEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END WHEN ((vt0.c0)AND(vt0.c1)) THEN TYPEOF(DISTINCT '3qb\n?>') END) OVER (), (((vt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND('1965459338')), ((((vt0.c2)OR(0.26001146995413604)))OR(vt0.c2)), (((vt0.c1, vt0.c2, vt0.c1))!=((vt0.c1, vt0.c2, vt0.c1))))) AND ((((x'')>(vt0.c0)), (~ (NULL)), vt0.c2 COLLATE NOCASE))), (((vt0.c2)<<(vt0.c1)) IN (vt0.c1 COLLATE NOCASE)) FROM vt0 WHERE ((CAST('970029015' AS REAL) IN ())) LIMIT 1630620902; -- 0ms;
SELECT DISTINCT LAST_VALUE(((992799673)<=(((vt0.c1)IS(x''))))) OVER ( RANGE BETWEEN ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END) IS FALSE) PRECEDING AND  UNBOUNDED FOLLOWING) FROM vt0;SELECT ALL (~ (vt0.c1 COLLATE BINARY)), ((COUNT(*)) IS TRUE), ((((CAST(vt0.c2 AS BLOB))AND(((vt0.c0)<>(vt0.c2)))))AND(vt0.c2)) FROM vt0 WHERE (COALESCE(DISTINCT ((NULL)/('')), ((0x61314ce6)>(0.4450851071247366)))); -- 0ms;
SELECT ALL vt0.c2 FROM vt0 LIMIT 1272991644; -- 0ms;
SELECT DISTINCT ((((vt0.c1)%(vt0.c1)))IS NOT(MIN(vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT QUOTE(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))), ((CAST(vt0.c0 AS BLOB)) BETWEEN (GROUP_CONCAT(vt0.c2)) AND (((vt0.c0)>(vt0.c1)))), ((((vt0.c1)IS NOT(vt0.c2)))GLOB(TOTAL(0x4be99640))) FROM vt0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT 0.6753057646009406, NULL) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c2) NOT NULL)) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c0 THEN x'4791' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN 1129266277 END) AND (((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))) FROM vt0 WHERE ((json_array_length(0.5809389149644975) IN ())) GROUP BY (((vt0.c1 IN ())) IS TRUE) HAVING (+ (((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))); -- 0ms;
SELECT ALL COUNT(*) OVER (), (((('-689820421')/(vt0.c2))) NOT NULL), INSTR(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR('/Q[*ぁ')), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))), ((CAST('[' AS TEXT)) IS TRUE), CASE WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END THEN ((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE (((NULL))<((vt0.c0))) END FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c2 COLLATE NOCASE THEN (((x'710b')) BETWEEN ((vt0.c2)) AND ((vt0.c1))) ELSE ((NULL) NOT NULL) END FROM vt0 WHERE (((((((-1931773613)OR(x'0c24')))AND(x'')))<<(0.44190683227666305))) ORDER BY vt0.c1, '-917583228'; -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c1 AS TEXT)  WHEN TYPEOF(DISTINCT vt0.c0) THEN LIKE(vt0.c1, vt0.c0) ELSE vt0.c0 COLLATE RTRIM END, NTILE((vt0.c1 COLLATE NOCASE IN (CASE WHEN 1.965459338E9 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) OVER (), vt0.c0 FROM vt0 WHERE (CAST(((((NULL)OR(NULL)))AND('	T]㱥h+?#퓜')) AS NUMERIC)) GROUP BY ((((((((CAST(vt0.c2 AS BLOB))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)-(vt0.c1)))))OR(0.19703892275226675)))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))), 0x2fe71d1c, ((vt0.c0) BETWEEN (TYPEOF(DISTINCT '1965459338')) AND ((NOT (vt0.c0))));SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE ('zx'); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0)))-(vt0.c0 COLLATE RTRIM)), (((0x39d177d7)) BETWEEN ((((vt0.c2)%(vt0.c1)))) AND ((((vt0.c1) IS TRUE)))), CASE vt0.c2 COLLATE RTRIM  WHEN AVG(vt0.c0) THEN ((vt0.c1)!=(vt0.c1)) WHEN ((x'') IS FALSE) THEN UPPER(vt0.c0) WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c2 AS REAL) END FROM vt0 WHERE ('594782585'); -- 0ms;
SELECT DISTINCT ((((vt0.c1)IS NOT(vt0.c0)))<<(vt0.c0)) FROM vt0 WHERE ((((CAST('-982703912' AS BLOB)))>((CAST('1e500' AS INTEGER))))); -- 0ms;
SELECT TRIM(DISTINCT CAST(x'c6ab528d' AS TEXT)) FROM vt0 WHERE (((('hB['))<>((0.38797721613285685))) COLLATE RTRIM) ORDER BY CASE ((vt0.c0) ISNULL)  WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c2)&(vt0.c0)) WHEN CAST(vt0.c1 AS REAL) THEN ((((vt0.c1)OR(0.604131265183385)))AND(x'')) WHEN vt0.c1 THEN json_object(vt0.c2, vt0.c0) ELSE (NOT (vt0.c1)) END  NULLS LAST; -- 0ms;
SELECT ALL COUNT(((vt0.c1) NOTNULL)) OVER (), '', 572539716 FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((NULL)) AND (((('簾')/('13061481')))))) GROUP BY ((((vt0.c1)>=(vt0.c0)))/(vt0.c1 COLLATE NOCASE)) HAVING (((vt0.c1, vt0.c1, vt0.c2, vt0.c2, x'4137032c')) NOT BETWEEN (((NOT (vt0.c0)), HEX(vt0.c1), CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c1 AS NUMERIC), (((vt0.c0))<=((vt0.c2))))) AND (((vt0.c2 IN ()), vt0.c2, vt0.c0 COLLATE RTRIM, (vt0.c1 IN ()), (((vt0.c1, vt0.c1, 0.1490741937114195)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2)))))); -- 0ms;
SELECT CAST((((vt0.c2))>((vt0.c1))) AS NUMERIC), CAST((vt0.c2 IN ()) AS REAL), AVG(NULL) FROM vt0 WHERE (x''); -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM vt0 WHERE (IFNULL(DISTINCT (((NULL))>((x''))), (((('-1828481047')AND(1503735800)))OR('''')))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2) ISNULL))||(COUNT(*))) FROM vt0; -- 0ms;
SELECT ALL ((LENGTH(vt0.c2)) BETWEEN (HEX(DISTINCT vt0.c1)) AND ('')) FROM vt0 WHERE (CASE (+ (''))  WHEN (((x''))>((x'685f'))) THEN LIKELY(x'') END); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c1))) NOT BETWEEN (((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))OR(vt0.c1))) AND (vt0.c0)), (~ (((vt0.c1) NOT NULL))), (- (((vt0.c1) IS FALSE))) FROM vt0; -- 0ms;
SELECT ALL ((NULL) NOT BETWEEN (((((vt0.c2)AND(0.8458096178334644)))AND(vt0.c2))) AND (((vt0.c2)IS NOT(x'a5f0')))), ABS(vt0.c1) COLLATE RTRIM, ((TRIM(DISTINCT vt0.c2, vt0.c0))GLOB((vt0.c1 IN (vt0.c1)))), ((((vt0.c1)OR(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(-907364365)), ((((('1707163362')) BETWEEN (('1608837250')) AND ((vt0.c1)))) IS FALSE) FROM vt0 WHERE (((((0.7644145835159702)<<(NULL)))<<(x''))); -- 0ms;
SELECT DISTINCT '-1050658396', (vt0.c2 COLLATE NOCASE IN ()), ((((vt0.c1) ISNULL))>>(CAST(vt0.c0 AS INTEGER))), ((vt0.c1 COLLATE BINARY)<<(1.444881454E9)), ((((vt0.c1)IS(vt0.c0)))+((vt0.c1 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c2)<(vt0.c1)) COLLATE BINARY) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (x''))))<=((vt0.c1))), CASE vt0.c0  WHEN (vt0.c2 IN ()) THEN '' END, (+ ((+ (vt0.c2)))) FROM vt0 WHERE (((CAST('?' AS INTEGER)) NOT BETWEEN ((((0.9733418619692299, 'CZ~', NULL, NULL, NULL))>=((x'', x'', NULL, '-226924356', 0x7d9e3687)))) AND ((+ (0.7194291208633126))))); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (LIKELY(DISTINCT (+ ('1815768933')))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) IN ()), AVG(x'') OVER (), COUNT(*) FROM vt0 WHERE (CAST(HEX(DISTINCT 'zB') AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c2 END FROM vt0 LIMIT 607513194 OFFSET -907364365; -- 0ms;
SELECT DISTINCT IFNULL(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END), ((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)) COLLATE BINARY, ((((((((vt0.c2)AND((- (vt0.c2)))))OR(((vt0.c2)>=(vt0.c1)))))OR(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))))AND((((vt0.c0)) BETWEEN (('')) AND ((vt0.c1))))) FROM vt0 WHERE (((CASE x''  WHEN NULL THEN 'q\n^F⃘' ELSE '-866289239' END)/((0.12405942817218596 IN (x''))))); -- 1ms;
SELECT ALL LIKELIHOOD((NOT (vt0.c2)), 0.20132899458300968) FROM vt0 WHERE ((NOT (json_object('s|', x'')))) ORDER BY vt0.c2;SELECT ALL CUME_DIST() OVER (), vt0.c2, COUNT(*) FROM vt0 ORDER BY CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END COLLATE NOCASE DESC; -- 0ms;
SELECT DISTINCT (+ (UNLIKELY(vt0.c1))) FROM vt0 WHERE (((CAST(0x16f1d584 AS REAL)) BETWEEN (((('572539716'))<((NULL)))) AND (((NULL)||(x''))))); -- 0ms;
SELECT ALL CASE json_array_length(vt0.c2)  WHEN ((vt0.c2)>=(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) END, CASE WHEN (vt0.c2 IN ()) THEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND (('2008675952'))) WHEN x'' THEN vt0.c1 COLLATE NOCASE WHEN (vt0.c1 IN (vt0.c2, vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN CAST(vt0.c2 AS REAL) THEN SUM(vt0.c0) END, ((((vt0.c1)-(vt0.c2))) IS FALSE) FROM vt0 GROUP BY ((CASE '-1658969613'  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)<<(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE 2138438612 END)) HAVING x''; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c2 END)<>(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))), ((((((((((vt0.c0)>(0.4450851071247366)))OR((NOT (vt0.c0)))))AND(vt0.c2)))AND(vt0.c2 COLLATE RTRIM)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))), LIKELIHOOD(((vt0.c0)*(vt0.c2)), 0.052507242608466065) FROM vt0 WHERE (CASE WHEN (NOT ('D')) THEN (NOT (NULL)) END); -- 0ms;
SELECT DISTINCT json_array_length(''), ((((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))IS NOT(((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))), ((vt0.c2)==(vt0.c2)) COLLATE BINARY FROM vt0;SELECT DISTINCT ((AVG(vt0.c2)) NOT BETWEEN ((~ (vt0.c2))) AND (((vt0.c1)LIKE(vt0.c0)))) FROM vt0 WHERE (((('0.26001146995413604') NOT BETWEEN (NULL) AND (0xffffffffbf72b970)) IN (CAST(x'' AS BLOB), ((((0.044418082659966496)OR(x'')))OR('XoB{S⻔.'))))); -- 0ms;
SELECT DISTINCT x'', NTILE(vt0.c1) OVER (), (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND ('893049542')), (vt0.c2 IN (vt0.c2))))<>((PRINTF(vt0.c0), ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)), ((0.39241195531999506) BETWEEN (vt0.c2) AND (vt0.c1))))), ((COUNT(*))+(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN '2117208171' THEN vt0.c1 END)), UPPER((+ (vt0.c2))) FROM vt0 WHERE ((((0.024954945752299174)) NOT BETWEEN ((((0.28023792178983964)<('410182799')))) AND ((CAST('' AS REAL))))) GROUP BY ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE HAVING ((((vt0.c2) ISNULL)) BETWEEN (-6.89820421E8) AND (((NULL)GLOB(vt0.c1)))); -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT vt0.c1)) NOTNULL) FROM vt0; -- 1ms;
SELECT AVG(((vt0.c1)||(vt0.c2))) OVER ( ORDER BY (~ ((vt0.c1 IN (vt0.c0, NULL)))) ASC) FROM vt0; -- 0ms;
SELECT CASE WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN ((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)) END FROM vt0 WHERE ((NOT (0.12405942817218596)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT SUM(CAST(x'' AS REAL)) OVER (), CASE (NOT (vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c1 IN (vt0.c2, vt0.c1)) END, ((((vt0.c2) BETWEEN (x'') AND (vt0.c2))) BETWEEN (((vt0.c0) IS TRUE)) AND (((((((((0X38df84aa)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))) FROM vt0 WHERE (((CAST('59442261' AS INTEGER)) BETWEEN (607513194) AND (((x'734d')/(''))))) LIMIT 973087663 OFFSET -1213589464; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN COUNT(vt0.c0) END, vt0.c1, CASE WHEN '' THEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))AND('-1414719108')) END FROM vt0; -- 1ms;
SELECT ALL (((vt0.c2 IN ())) IS FALSE), (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt0 WHERE (((2117208171) IS TRUE)) ORDER BY ((NULL) NOTNULL) DESC  NULLS FIRST; -- 0ms;
SELECT vt0.c1, (((vt0.c0)) BETWEEN ((TRIM(vt0.c2, vt0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))))), PERCENT_RANK() OVER () FROM vt0 GROUP BY ((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'')))AND((((vt0.c0, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c1, vt0.c2))))))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c2) NOT NULL))))AND((vt0.c1 IN ()))), ((CAST(vt0.c1 AS NUMERIC))=(((vt0.c2)<(vt0.c0)))), CAST(((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c2)) AS INTEGER) HAVING ((((((vt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c2, 0.5096713893830291, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c2)))))<((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)));SELECT ((((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR((((vt0.c2))>((vt0.c1))))))AND(((vt0.c2) IS TRUE))))OR((vt0.c0 IN (0.0, vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (CAST((+ ('br*쁵K2I7')) AS TEXT)); -- 0ms;
SELECT DISTINCT AVG((('')>=(vt0.c2))) FROM vt0 WHERE (LOWER(((0.044418082659966496)+(x'')))); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 1ms;
SELECT DISTINCT ((COUNT(vt0.c0)) NOT BETWEEN (((vt0.c2)LIKE(vt0.c2))) AND (((NULL) IS FALSE))) FROM vt0 WHERE ((((('0.28023792178983964') NOT NULL)) BETWEEN ((NOT (-1.54731277E8))) AND (NULLIF(x'5553', x'')))) ORDER BY '-1734942931' DESC, ((vt0.c2) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))) ASC  NULLS LAST, (((CAST(vt0.c1 AS BLOB)))<=((vt0.c2))) DESC; -- 0ms;
SELECT NTH_VALUE((((+ ('<xW')))>(((vt0.c2)/(vt0.c2)))), ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)<((~ (vt0.c0))))) OVER () FROM vt0 NOT INDEXED LIMIT 1346374016 OFFSET 1134149455;SELECT ALL (((vt0.c0)<=(vt0.c2)) IN ()) FROM vt0 WHERE (((((((((CASE WHEN '916031354' THEN NULL ELSE 0.7321953546728592 END)OR(CASE WHEN NULL THEN '-866289239' WHEN 0Xffffffff9dc982bf THEN 'q\n^F⃘' WHEN 'Y⮓_^R' THEN NULL ELSE 0.5160980571270053 END)))OR(((0.2710195361841039) ISNULL))))OR((('Jg)d') ISNULL))))OR(((0.4231384431574502)LIKE('-1597851666'))))) LIMIT -1414719108 OFFSET -532565963; -- 1ms;
SELECT DISTINCT ((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE RTRIM) ISNULL), CUME_DIST() OVER (), (((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c1 END)), vt0.c0, ((NULLIF(DISTINCT vt0.c1, vt0.c0))IS(((vt0.c1) IS FALSE))) FROM vt0 WHERE (PRINTF(((1.922370876E9)GLOB(0.13459175109871124)), x'' COLLATE BINARY, (0.45707753893423764 IN ('917310856')), (~ ('zB')), x'')) ORDER BY (CAST(vt0.c1 AS NUMERIC) IN (((vt0.c0) IS FALSE))); -- 0ms;
SELECT DISTINCT ((TRIM('-689820421'))OR(((vt0.c1)>(vt0.c1)))), (vt0.c0 IN ((+ ('145762965')), x'')), COALESCE(0.780103465188684, CASE x''  WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)), ((vt0.c2)=(vt0.c0))) FROM vt0 WHERE (((((((1.5015089947667537E-4)OR(x'')))AND('227833810')))<<(CAST(0.20437436626157324 AS REAL)))); -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS INTEGER) FROM vt0 WHERE ('137640447' COLLATE BINARY); -- 1ms;
SELECT DISTINCT ((((((((((vt0.c2) BETWEEN (vt0.c2) AND (NULL)))OR((NOT (vt0.c0)))))AND((((vt0.c0))<>((vt0.c1))))))OR((+ (vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))OR(((((vt0.c0)AND(vt0.c0)))AND(0x4eb5e1fc)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(1.60883725E9 AS TEXT) THEN ((vt0.c1)||(vt0.c0)) WHEN ((vt0.c1)GLOB(vt0.c2)) THEN (- (vt0.c2)) WHEN CASE WHEN vt0.c0 THEN vt0.c2 END THEN x'' END FROM vt0 WHERE (')/GY'); -- 0ms;
SELECT DISTINCT (- (((vt0.c1)>(NULL)))) FROM vt0 WHERE (CAST(CAST(0.9327058645427294 AS REAL) AS INTEGER)) LIMIT -819686348 OFFSET 384947588; -- 0ms;
SELECT (((+ (vt0.c2))) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (((vt0.c1)>(vt0.c2)))) FROM vt0 GROUP BY CASE vt0.c1 COLLATE BINARY  WHEN (((vt0.c0, x'', vt0.c2))<=((vt0.c2, vt0.c2, vt0.c0))) THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c2))>=((vt0.c0))) THEN vt0.c0 WHEN ((vt0.c2)IS(NULL)) THEN vt0.c1 COLLATE NOCASE END, ((ABS(vt0.c1))/('i]w>_Uf')), (((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))IS(((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))) HAVING 0.9174120640623111; -- 0ms;
SELECT ALL FIRST_VALUE((~ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (NULL IN ()), NTH_VALUE(((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT('')), ((LTRIM(vt0.c1))||(((vt0.c2)IS(vt0.c1))))) OVER (), (((vt0.c1)) BETWEEN (((vt0.c2 IN ()))) AND (('Y~'))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE (CASE WHEN x'' THEN UPPER('1382245091') ELSE CASE WHEN 0Xffffffffdf04a27d THEN NULL END END); -- 1ms;
SELECT DISTINCT (((((NOT (vt0.c0)))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((vt0.c2 IN (vt0.c0, vt0.c0)))), (((ABS(vt0.c1)))=((((vt0.c1)<(vt0.c0))))), ((vt0.c0)OR(vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END), (('껧쮑WFQ')GLOB(vt0.c2)) COLLATE RTRIM, PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT GROUP_CONCAT(vt0.c1)) FROM vt0 WHERE ((((+ (0xffffffffeaa211b0)))|(NULL COLLATE BINARY))); -- 0ms;
SELECT (((NOT (vt0.c0))) ISNULL) FROM vt0; -- 0ms;
SELECT COUNT(*) FILTER(WHERE (((((vt0.c2))<=((vt0.c2)))) NOTNULL)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((TYPEOF(DISTINCT vt0.c2)) BETWEEN (vt0.c2) AND (MAX(vt0.c2))), CASE WHEN vt0.c1 COLLATE RTRIM THEN vt0.c1 WHEN (((vt0.c2))<=((0.707885930386163))) THEN (vt0.c1 IN ()) WHEN vt0.c0 COLLATE BINARY THEN COUNT(*) ELSE ((vt0.c0)*(vt0.c1)) END, COALESCE(((vt0.c0)<(vt0.c1)), ((((vt0.c1)OR(vt0.c2)))OR(vt0.c2))) FROM vt0 LIMIT -1297652444; -- 0ms;
SELECT ALL (((((vt0.c2, vt0.c0, vt0.c2))<((vt0.c1, vt0.c0, vt0.c0)))) NOT BETWEEN (((((((((vt0.c2)OR(vt0.c2)))OR(0.7618150900195543)))OR(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c1)))), ((vt0.c1)-((- (vt0.c0)))), ((0.73164482521919) BETWEEN (vt0.c2) AND (x'')) COLLATE BINARY FROM vt0 WHERE (((((x'')>(-1213589464))) IS FALSE)); -- 0ms;
SELECT CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE NULL END AS NUMERIC), CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) AS BLOB), AVG(((vt0.c0) ISNULL)) FILTER(WHERE (((vt0.c0 IN ())) NOTNULL)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT AVG(((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT 0.14756756988311326 FROM vt0; -- 0ms;
SELECT ALL x'', CAST(((vt0.c1)-(vt0.c1)) AS INTEGER), ((((vt0.c1) ISNULL)) IS TRUE) FROM vt0 WHERE (0.27194645746426716); -- 0ms;
SELECT DISTINCT (+ (((vt0.c1)||(0x2662606d)))) FROM vt0 WHERE (('9JY*ZR' COLLATE NOCASE IN ())) EXCEPT SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) FROM vt0 NOT INDEXED WHERE (CASE ((x'')|(0xf2dce57))  WHEN (('723652692')/(9.17310856E8)) THEN ((NULL) BETWEEN ('332102787') AND ('-917583228')) ELSE (('-1939449310')||(0.04103427163723916)) END); -- 0ms;
SELECT ALL (+ (vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT ALL AVG(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))) OVER ( PARTITION BY (NOT (CAST(vt0.c0 AS BLOB))), ((vt0.c1 COLLATE RTRIM)>=(((((x'')AND(970029015)))OR(vt0.c2))))), ABS((((vt0.c1, 't\rX|6CTh	', vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c0, vt0.c2, vt0.c2)))), 0.7884059545847364 FROM vt0; -- 0ms;
SELECT ((((vt0.c2)&('0.28023792178983964'))) NOT BETWEEN (((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))) AND ((NOT (vt0.c0)))), NULL, 'H\r' FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE)) NOT BETWEEN (((vt0.c1)IS NOT(vt0.c0))) AND (CASE vt0.c1  WHEN x'' THEN vt0.c2 END)) FROM vt0; -- 1ms;
SELECT ALL ((((vt0.c2)!=(vt0.c2)))<<((((vt0.c2, vt0.c1, vt0.c0))==(('H눿뮠3', vt0.c0, vt0.c1))))) FROM vt0 LIMIT 1346374016 OFFSET 1251832762; -- 0ms;
SELECT CASE ((vt0.c2)IS NOT(vt0.c2))  WHEN CAST(vt0.c2 AS BLOB) THEN CASE WHEN vt0.c2 THEN vt0.c2 END WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)) THEN ((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)) WHEN (vt0.c2 IN ()) THEN NULL ELSE ((vt0.c0)<<(vt0.c1)) END FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)))GLOB(UPPER(vt0.c2))) FROM vt0 GROUP BY (+ (((vt0.c1) NOTNULL))) HAVING ((vt0.c1) BETWEEN ((+ (vt0.c2))) AND (((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)))); -- 0ms;
SELECT (((vt0.c2 IN (vt0.c1))) NOT NULL) FROM vt0 GROUP BY CASE WHEN (- (vt0.c0)) THEN (+ (vt0.c0)) ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) END ORDER BY (NOT (((vt0.c1)LIKE('-87434994')))); -- 0ms;
SELECT DISTINCT (MIN(vt0.c1, vt0.c1) IN ()) FROM vt0 WHERE (CASE UNICODE(0.41280704582600847)  WHEN ((NULL)AND(0.19112889772430586)) THEN (((NULL)) BETWEEN ((0.11221882536883554)) AND (('.'))) END); -- 0ms;
SELECT CASE ((vt0.c1)&(vt0.c1))  WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM ELSE CAST(vt0.c1 AS BLOB) END FROM vt0 WHERE (((NULL COLLATE RTRIM) BETWEEN (((0.9608932048054738)&(''))) AND ((('145762965') NOTNULL)))); -- 0ms;
SELECT vt0.c0, (x'ac76' IN ((vt0.c2 IN (vt0.c1, vt0.c2)), (- (x'')))), ((((vt0.c1)&(vt0.c1)))AND(GLOB(vt0.c0, vt0.c2))) FROM vt0; -- 0ms;
SELECT ALL (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((((vt0.c2)OR(vt0.c2)))OR(vt0.c0)))) LIMIT -1939449310 OFFSET -1767365927; -- 0ms;
SELECT ALL AVG((vt0.c0 IN ())) FROM vt0 WHERE ((((~ (x'f395')))IS NOT((~ (x''))))); -- 0ms;
SELECT DISTINCT (((vt0.c2 IN ()))>=(NULL COLLATE BINARY)), ((((vt0.c0)>=(NULL)))<=(vt0.c2)), 'B鞜v7[' COLLATE BINARY, SUM((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))) OVER (), (((vt0.c0) NOT NULL) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c1, vt0.c2))>=((vt0.c2, vt0.c1, ''))))+(vt0.c1 COLLATE RTRIM)), (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)))), (((json_remove(vt0.c1, vt0.c1), ((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)), (((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c0)))))==(((NOT (vt0.c2)), ((vt0.c2) IS TRUE), CASE WHEN NULL THEN vt0.c1 ELSE 0.35929109255005887 END))) FROM vt0 WHERE (0xffffffff94a31d7d);SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) FROM vt0; -- 1ms;
SELECT vt0.c2 FROM vt0; -- 0ms;
SELECT DISTINCT CAST((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS NUMERIC) FROM vt0; -- 0ms;
SELECT ALL 'l2' FROM vt0; -- 0ms;
SELECT ALL ((TOTAL(vt0.c2))+(MIN(vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS REAL)), (((vt0.c0))<=(('1471291526'))), ((TYPEOF(DISTINCT vt0.c2))GLOB(CAST(vt0.c1 AS REAL))) FROM vt0 ORDER BY ((0Xfffffffff81bc2ba) BETWEEN (TOTAL_CHANGES()) AND (CASE vt0.c2  WHEN -154731277 THEN vt0.c1 END)); -- 0ms;
SELECT DISTINCT CAST(MAX(vt0.c2) AS INTEGER), SUM(((vt0.c0) IS TRUE)) OVER (), (((vt0.c1)<>(vt0.c1)) IN ()) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c2)>=(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)-(vt0.c2)))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c1) NOTNULL))<<(vt0.c1)) FROM vt0; -- 0ms;
SELECT (((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0))))<=((((vt0.c1)<>(vt0.c1))))) FROM vt0 WHERE (((0.5884691122607855)=('1686911319')) COLLATE BINARY COLLATE NOCASE) GROUP BY ((CAST(vt0.c2 AS BLOB))GLOB(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) HAVING (TRIM(DISTINCT vt0.c0, vt0.c1) IN (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))); -- 1ms;
SELECT GROUP_CONCAT(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((((CASE WHEN vt0.c2 THEN vt0.c0 END)OR(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)<(x'9091a2a2')))))AND(((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)))))OR(rtreenode(vt0.c1, vt0.c1))), GROUP_CONCAT(vt0.c2), CASE WHEN (NOT (vt0.c1)) THEN CAST(vt0.c1 AS REAL) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) THEN vt0.c2 COLLATE NOCASE WHEN ((vt0.c1) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) ELSE ((0.7687249576206386)<=('59442261')) END FROM vt0 WHERE (((0.4395986430121832 COLLATE BINARY)OR(CASE 0.25561604838588525  WHEN x'3adf' THEN NULL END))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c2) BETWEEN (vt0.c2) AND (0.6040990675489124))  WHEN (NOT (vt0.c2)) THEN ((vt0.c1)OR(vt0.c1)) ELSE (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c0, vt0.c0, NULL))) END FROM vt0 WHERE ((CASE WHEN NULL THEN '1172329513' ELSE 0.27506210263261077 END IN (((NULL)==(x'')), LTRIM(0.6335803975735234, '1119393064')))) GROUP BY CASE WHEN ((vt0.c1)>=(vt0.c0)) THEN CAST(2.33961894E8 AS NUMERIC) ELSE vt0.c2 END, ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE), (((((((vt0.c1)OR(NULL)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (x'')), (((vt0.c2, vt0.c0, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c2)))))>=(('-813849258', (vt0.c0 IN (vt0.c0)), vt0.c1 COLLATE BINARY))); -- 0ms;
SELECT ALL 0.3268982703277682, LAG((NOT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)), UPPER(DISTINCT CAST(vt0.c1 AS REAL)), ((1.463841223E9) NOTNULL)) OVER (), ((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (CASE WHEN HEX(0.5271552872427075) THEN '' COLLATE NOCASE WHEN json(NULL) THEN (('-2')>=(NULL)) WHEN (('') IS TRUE) THEN ((NULL) IS FALSE) ELSE ((('970029015')) BETWEEN (('Sd< ')) AND ((299971270))) END); -- 0ms;
SELECT ((CASE x'b80c'  WHEN vt0.c2 THEN vt0.c1 END) ISNULL), (((((+ (vt0.c0)))OR(((((x'b41f')OR(vt0.c2)))AND(vt0.c1)))))AND(((vt0.c1)>>(vt0.c0)))), ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c1)AND(vt0.c0))) AND (vt0.c2 COLLATE BINARY)), (((vt0.c0, vt0.c2, vt0.c1)) BETWEEN ((SQLITE_VERSION(), ((vt0.c2)<(vt0.c2)), ((vt0.c0) IS TRUE))) AND ((((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)), SUM(vt0.c1), ((vt0.c0)LIKE(vt0.c0))))), ((((vt0.c2 COLLATE NOCASE)OR(((vt0.c1)|(vt0.c1)))))AND(CAST(vt0.c1 AS INTEGER))) FROM vt0 GROUP BY ((HEX(vt0.c0)) IS FALSE); -- 0ms;
SELECT DISTINCT (((((vt0.c2, vt0.c1, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0)))) IS TRUE) FROM vt0 WHERE (((((0X947984d) BETWEEN (NULL) AND (x'253a'))) NOT NULL)) GROUP BY (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)) IN ()); -- 0ms;
SELECT DISTINCT (vt0.c1 IN ()) COLLATE BINARY, highlight((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))), (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))), ((vt0.c1) NOTNULL), vt0.c1 COLLATE RTRIM), TRIM(((vt0.c2)<<(vt0.c2))) FROM vt0 WHERE (('' COLLATE RTRIM IN (((0.9612900880881963) NOTNULL)))); -- 0ms;
SELECT CASE CASE WHEN '-1840468318' THEN 1.134149455E9 ELSE vt0.c0 END  WHEN SUM(vt0.c0) THEN (vt0.c2 IN ()) WHEN vt0.c2 THEN ((vt0.c2) IS FALSE) WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (NULL)) THEN ((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)) ELSE (vt0.c1 IN ()) END FROM vt0 WHERE ((((x'5b9d')) BETWEEN ((CASE NULL  WHEN 2107520647 THEN NULL ELSE '࡙-' END)) AND ((CAST(NULL AS BLOB))))); -- 0ms;
SELECT LIKE((((vt0.c2)) BETWEEN ((NULL)) AND ((vt0.c2))), MAX(x''), '0') FROM vt0; -- 1ms;
SELECT DISTINCT (NOT (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)))) FROM vt0 WHERE (((COALESCE('1642058797', NULL)) ISNULL)); -- 0ms;
SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1))==((vt0.c1, vt0.c1, vt0.c2))))IS NOT(((vt0.c0)>=(vt0.c1)))), MAX((((vt0.c2))=((vt0.c0)))), ((vt0.c2) ISNULL) COLLATE RTRIM FROM vt0 GROUP BY ((((vt0.c2)AND('1707163362')))OR(vt0.c0)) COLLATE RTRIM, 'tn	', UPPER((((1.5015089947667537E-4, vt0.c2, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c1)))) HAVING ((vt0.c1) BETWEEN (COUNT(vt0.c0)) AND ((vt0.c1 IN ()))); -- 0ms;
SELECT ALL ((((vt0.c1) NOT NULL))|(((vt0.c2)|(vt0.c0)))) FROM vt0 WHERE (ABS((('137640447') BETWEEN ('&<X^>') AND ('856999716')))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS(0X8894ecc))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)/(vt0.c2)))) FROM vt0 ORDER BY CASE ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN vt0.c0 ELSE ((vt0.c1) NOT NULL) END; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (GLOB(CAST('sD172{(P' AS TEXT), ((((x'1230')OR(122922193)))AND(NULL)))); -- 0ms;
SELECT DISTINCT (+ (NULL)), ((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c1) IS FALSE)) AND ((((vt0.c0, vt0.c1, vt0.c0))>=((vt0.c2, vt0.c0, vt0.c1))))), CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN vt0.c0 COLLATE BINARY ELSE (vt0.c1 IN ()) END FROM vt0; -- 1ms;
SELECT (+ ((NOT (vt0.c0)))) FROM vt0 WHERE ('-750115860') LIMIT -892515611; -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (+ (((vt0.c2)IS(vt0.c1)))), CAST(((vt0.c0)>(vt0.c0)) AS TEXT), ((((vt0.c1 COLLATE NOCASE)AND(vt0.c2 COLLATE NOCASE)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL))))) FROM vt0 WHERE (x'' COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT ALL AVG(((((((((NULL)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c1))) FROM vt0 WHERE (CASE '1815768933'  WHEN LOWER(DISTINCT '[') THEN ('917310856' IN (NULL, '2113782937')) ELSE NULL END); -- 0ms;
SELECT ALL NTILE(((((vt0.c0)+(vt0.c0))) NOT BETWEEN (((vt0.c1)AND(vt0.c2))) AND (CAST(NULL AS REAL)))) OVER () FROM vt0 WHERE (LIKELY((- ('-363959097')))); -- 0ms;
SELECT CAST(((vt0.c0)>(vt0.c2)) AS TEXT), FIRST_VALUE(DATETIME(CAST(vt0.c1 AS BLOB), vt0.c2, vt0.c0)) OVER ( PARTITION BY CASE (vt0.c0 IN ())  WHEN ABS(vt0.c0) THEN CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN x'' WHEN vt0.c2 THEN 0.0896534444399798 END ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) END, ((((LIKELY(vt0.c2))AND(vt0.c2)))AND(vt0.c1 COLLATE BINARY))), (((NULL)) BETWEEN ((LOWER(DISTINCT vt0.c1))) AND ((UNLIKELY(vt0.c2)))) FROM vt0 GROUP BY CASE WHEN ((0.26257743017817525) NOT BETWEEN (vt0.c2) AND (vt0.c0)) THEN ((vt0.c0)IS(vt0.c2)) END, vt0.c2, HEX((((vt0.c1)) BETWEEN (('-1769061614')) AND ((vt0.c2)))), vt0.c0, ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))) HAVING ((~ (vt0.c1)) IN (((x'0a38') NOT BETWEEN (vt0.c0) AND ('1815768933')))); -- 1ms;
SELECT DISTINCT (- (AVG(vt0.c1))), CAST(vt0.c1 AS REAL), COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT x'', ((AVG('\n*Lb||Ḣ')) NOT BETWEEN (((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0))) AND (((vt0.c0)>(vt0.c1)))), CAST(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN x'6303' THEN vt0.c0 ELSE vt0.c1 END AS INTEGER) FROM vt0; -- 0ms;
SELECT ((((NOT (vt0.c0))))==((CAST(vt0.c2 AS NUMERIC)))) FROM vt0 WHERE ((CASE '-1679366186'  WHEN x'' THEN x'01c8' WHEN '1647170917' THEN NULL WHEN 0Xfffffffff27968bc THEN x'' END IN ())) LIMIT 919013141; -- 0ms;
SELECT DISTINCT (((vt0.c1 IN ())) NOT BETWEEN ((((vt0.c2, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0)))) AND (SUM(vt0.c1))), (~ (((vt0.c2)||(vt0.c0)))), (((((NOT (vt0.c0)))AND(vt0.c0)))OR((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((NULL, vt0.c1, vt0.c1))))) FROM vt0 WHERE (((((('-479779752') BETWEEN (0.7775990620085865) AND (-689820421)), ((NULL)==('R<8L]U')), ((('-897481348'))=((NULL)))))<((((1.7976931348623157E308)+(0.680335062701193)), ((((-982703912)OR(-1855344022)))OR('')), 0X2777088d)))); -- 0ms;
SELECT ALL NTILE((((vt0.c1))<=((vt0.c0))) COLLATE NOCASE) OVER () FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0 IN ())) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c2) IS TRUE))) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT '1143404009', 0.35855547274398936))IS((~ (-5.32565963E8))))); -- 0ms;
SELECT DISTINCT CASE ((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))  WHEN (~ (vt0.c0)) THEN ((vt0.c1)<(vt0.c1)) ELSE CAST(vt0.c1 AS NUMERIC) END FROM vt0 LIMIT -1013332840; -- 1ms;
SELECT ((NOT (vt0.c0)) IN ((- (5.9442261E7)))) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) IN (CAST(0.4450851071247366 AS NUMERIC))) FROM vt0 LIMIT 1283682324 UNION ALL SELECT DISTINCT CASE (vt0.c2 IN (vt0.c0, vt0.c2))  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END ELSE ((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END FROM vt0 WHERE (((TRIM(NULL, '')) BETWEEN (NULL COLLATE BINARY) AND (CAST(0.073850706795896 AS TEXT))));SELECT DISTINCT '418885596', (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) BETWEEN (((vt0.c1)==(vt0.c0))) AND (COUNT(vt0.c0))), CAST(((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)) AS REAL) FROM vt0; -- 0ms;
SELECT ((((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, '254660183', vt0.c1)))))<((vt0.c1 COLLATE BINARY))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)))) AND ((CAST(vt0.c1 AS REAL)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS REAL)) NOT NULL) FROM vt0 WHERE (((((((((((x'') NOT BETWEEN (NULL) AND ('2117208171')))OR(x'')))AND((('(bZc[Nlp') NOT BETWEEN (0X8b02a95) AND ('-816639933')))))OR((('쪨As㚇')<=(0.0447639644365706)))))AND(UNLIKELY(0.0261720720598132)))); -- 0ms;
SELECT DISTINCT CAST(NULL AS INTEGER), (~ (vt0.c2 COLLATE BINARY)), ((((vt0.c2)>=(vt0.c0))) NOT BETWEEN ((((vt0.c2, vt0.c0, vt0.c1))<((0x6e1fb04e, vt0.c2, vt0.c2)))) AND ((vt0.c2 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2) NOTNULL)) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((NOT (vt0.c0)))) FROM vt0 WHERE (((x'')IS('ecxIb-xa!' COLLATE BINARY))); -- 0ms;
SELECT ((RTRIM(vt0.c1)) BETWEEN (((vt0.c0)>>(vt0.c2))) AND (((vt0.c2)+(vt0.c0)))) FROM vt0 WHERE ('x'); -- 1ms;
SELECT DISTINCT (((vt0.c0 IN ()))<(UNLIKELY(vt0.c1))), ((DATETIME(vt0.c2, vt0.c0, vt0.c0))!=(GROUP_CONCAT(vt0.c1))), CASE WHEN TYPEOF(vt0.c0) THEN NULL WHEN CAST(vt0.c2 AS TEXT) THEN CAST(vt0.c1 AS REAL) WHEN ((vt0.c2) ISNULL) THEN (- (vt0.c1)) END FROM vt0; -- 0ms;
SELECT DISTINCT AVG(TYPEOF(NULL)) FROM vt0; -- 0ms;
SELECT ALL vt0.c1 FROM vt0; -- 0ms;
SELECT (((((vt0.c0))>=((vt0.c2)))) NOTNULL) FROM vt0 WHERE ('1766142499'); -- 0ms;
SELECT ((((((((CASE '137640447'  WHEN vt0.c1 THEN vt0.c2 WHEN NULL THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)AND(vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c2)))))AND(vt0.c0)))OR((((vt0.c0))<(('8HO>b)'))))) FROM vt0 WHERE (((((((NULL)OR('1581977217')))AND('1272991644')))<<((((('潥')AND(1038214938)))AND(x''))))); -- 0ms;
SELECT DISTINCT ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)))OR('31358045')))OR(vt0.c1)))OR('')))||(vt0.c0)), CAST(vt0.c0 COLLATE BINARY AS NUMERIC), (((((vt0.c1) NOT NULL)))<=((''))) FROM vt0 ORDER BY (((vt0.c2 IN (vt0.c1))) BETWEEN ((NOT (vt0.c0))) AND ((+ (vt0.c0)))) ASC  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))=(((vt0.c2) ISNULL)))  NULLS LAST; -- 0ms;
SELECT ((MAX(vt0.c2, vt0.c0, 1, vt0.c1))&(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 LIMIT -466028894 OFFSET 1353777753; -- 0ms;
SELECT CAST(x'' AS BLOB) FROM vt0 WHERE (((CASE WHEN NULL THEN 0xffffffff9c4b3e26 ELSE -982703912 END)-(0.4410434340825685))); -- 0ms;
SELECT ALL ABS(DISTINCT (vt0.c2 IN ())), CAST(vt0.c2 COLLATE BINARY AS NUMERIC), CAST(vt0.c2 AS BLOB) COLLATE BINARY FROM vt0 WHERE (((((NULL) NOT BETWEEN (0.8082172230302993) AND (0.12389198936317802))) NOT NULL)); -- 0ms;
SELECT ALL ((((vt0.c2)IS(vt0.c1)))|(SUM(vt0.c2))), TOTAL(LIKELY(DISTINCT vt0.c2)) OVER (), (((vt0.c2) NOT NULL) IN ()) FROM vt0 WHERE (((((NULL) NOT BETWEEN ('') AND (NULL))) BETWEEN ((0.2708422554084233 IN ())) AND ((1.346374016E9 IN ())))); -- 0ms;
SELECT ALL (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) IN ()) FROM vt0 WHERE (((('1935979545')) NOT BETWEEN (('5wMwja')) AND ((NULL))) COLLATE BINARY); -- 0ms;
SELECT ((((vt0.c0 COLLATE RTRIM)OR(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))))OR(((vt0.c1)IS NOT(vt0.c0)))) FROM vt0 WHERE (COALESCE(((x'') NOT BETWEEN ('') AND (x'')), (((('2136345765')OR(x'')))AND('')))); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c2)>>(vt0.c2)), vt0.c0 COLLATE NOCASE)) AND ((0.8236295983613077, (vt0.c1 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 END))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<>(-1.808364531E9))) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND ((~ (vt0.c0)))), CAST(vt0.c0 AS NUMERIC), ((CASE '259640798'  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)/((~ (vt0.c2)))) FROM vt0 WHERE (((x'' COLLATE BINARY)>=((('-1656693421')==(x''))))); -- 0ms;
SELECT SUM(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))) FROM vt0 GROUP BY (('2008675952' COLLATE BINARY)/(0.4357672395712331)); -- 0ms;
SELECT DISTINCT ((vt0.c0)IS NOT(vt0.c1)) COLLATE BINARY, vt0.c2, ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c2 AS NUMERIC) THEN (0.26001146995413604 IN ()) ELSE vt0.c1 COLLATE BINARY END FROM vt0; -- 0ms;
SELECT (((vt0.c2)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) AND ((vt0.c0 COLLATE BINARY))), CAST(vt0.c1 AS INTEGER), COUNT((vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c2) NOT NULL))OR((vt0.c2 IN ()))))AND(LIKELIHOOD(DISTINCT vt0.c1, 0.21853960532686056))) FROM vt0; -- 2ms;
SELECT DISTINCT (SUM(vt0.c1) IN (x'')), x'', ((json_array(vt0.c1, vt0.c1))IS NOT(((1968412204) BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0 WHERE (NULLIF(DISTINCT TRIM(-1790441606, NULL), IFNULL(x'', x'cfdb'))); -- 0ms;
SELECT ALL ((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))OR((- (vt0.c0)))))AND(((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))), ((load_extension(vt0.c1, vt0.c1)) ISNULL), TOTAL((vt0.c0 IN ())) OVER () FROM vt0 WHERE (UPPER(DISTINCT '-1213589464') COLLATE NOCASE) LIMIT 2117208171 OFFSET -1414719108;SELECT (((vt0.c2)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))))) AND ((vt0.c1))) FROM vt0 WHERE (((((x''))!=((0.7981497818705441))) IN ())); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)=(vt0.c1))) FROM vt0 WHERE ((((CASE WHEN '810240957' THEN '' ELSE 0.21446179061209514 END))<(((- ('8}')))))) LIMIT 1288272963 OFFSET 973087663; -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))GLOB(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))), ((MIN(vt0.c1, vt0.c0)) IS TRUE), GROUP_CONCAT(((vt0.c0)>(vt0.c2))) OVER () FROM vt0 WHERE (((((UNLIKELY(2051202791))AND('1837460115')))OR(CAST(NULL AS INTEGER)))); -- 0ms;
SELECT ((vt0.c1)LIKE((vt0.c1 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST((('')-(x'50a0')) AS BLOB)) GROUP BY ((vt0.c0) NOT NULL) COLLATE BINARY HAVING ((COUNT(*))||(CAST(vt0.c2 AS REAL))) ORDER BY CASE TYPEOF(DISTINCT vt0.c0)  WHEN ((vt0.c2)*(vt0.c1)) THEN NULL WHEN LOWER(DISTINCT vt0.c1) THEN vt0.c2 COLLATE BINARY WHEN (('泇B')=(x'')) THEN (((vt0.c2))<((vt0.c2))) END DESC; -- 0ms;
SELECT DISTINCT MIN((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))) FROM vt0 WHERE ('1707163362') LIMIT 167174436 OFFSET 1215038273; -- 0ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2))) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL (- (((vt0.c0)<<(vt0.c0)))) FROM vt0 WHERE (((('-1647738177')AND(NULL)) IN ((0.4115127943231708 IN ()), ((NULL)&(0.707885930386163))))); -- 0ms;
SELECT AVG(vt0.c2) OVER ( ROWS  CURRENT ROW EXCLUDE TIES), CASE ((((vt0.c0)AND(vt0.c2)))AND(vt0.c0))  WHEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (x'3427')) THEN (((vt0.c0))!=((vt0.c0))) END, ROW_NUMBER() OVER () FROM vt0 WHERE (NULL); -- 1ms;
SELECT DISTINCT ((TRIM(vt0.c1)) NOTNULL) FROM vt0 WHERE ((((('')%(x'b8b6')))|(0.08415879223539424))); -- 0ms;
SELECT (- (CAST(vt0.c0 AS BLOB))), NTILE(((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY) OVER (), (((- (vt0.c1)))|(CAST(vt0.c1 AS TEXT))) FROM vt0 WHERE ((0.5417646039276551 COLLATE RTRIM IN ((('0.5911194423053623') ISNULL), ('*T' IN ())))) LIMIT 2019845096 OFFSET -162780269; -- 0ms;
SELECT IFNULL(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.c2 AS NUMERIC)) FROM vt0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))&(vt0.c1)) FROM vt0 WHERE ((((((((((((0.6891512345111785, 1.922370876E9, x'c123')) NOT BETWEEN (('', 0.6500042259510777, '<굠')) AND ((NULL, 'o', 'PI'))))AND(x'cd66bcce')))OR(CAST('jDQz' AS BLOB))))OR((((x'9e58')) NOT BETWEEN ((x'')) AND ((0.30184989061966094))))))OR((('970029015') IS FALSE)))); -- 0ms;
SELECT ((((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c2))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)%(vt0.c2)))) FROM vt0 ORDER BY (+ (((vt0.c2) NOTNULL))); -- 0ms;
SELECT ALL NULLIF((vt0.c2 IN ()), ((vt0.c2) BETWEEN (vt0.c0) AND (x''))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c1)))OR(NULL)) AS TEXT), ((+ (vt0.c0)) IN ()), '' FROM vt0; -- 0ms;
SELECT (((+ (vt0.c0))) IS FALSE), COUNT((('LDccN')%(vt0.c1))), vt0.c2 FROM vt0 WHERE ((~ ((('') ISNULL)))); -- 0ms;
SELECT ALL (- (COALESCE(DISTINCT vt0.c1, vt0.c2))) FROM vt0; -- 0ms;
SELECT ((vt0.c2)<>(vt0.c2)) COLLATE RTRIM FROM vt0 LIMIT 624118144 OFFSET 122922193; -- 0ms;
SELECT DISTINCT CASE '-1517460074'  WHEN json(vt0.c1) THEN SUM(vt0.c1) ELSE '0.9327058645427294' COLLATE BINARY END, IFNULL(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, (~ (vt0.c0))), 0Xffffffffb2a76524 FROM vt0 ORDER BY vt0.c2 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((((((((((vt0.c1) NOT NULL))OR(x'')))AND(((x'c0c11692') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c1)*(vt0.c2)))))AND(CAST(vt0.c2 AS BLOB))), ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) NOTNULL), ((vt0.c2)!=((vt0.c1 IN ('747928932')))), MIN(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c2)) NOT BETWEEN ((((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)))) AND (((- (vt0.c0))))), (((((((((~ (vt0.c1)))AND((NOT (vt0.c1)))))OR(((vt0.c1)>(vt0.c1)))))OR(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))))OR((vt0.c2 IN ()))), (~ (vt0.c1)) FROM vt0; -- 0ms;
SELECT ALL ((((0.11724326459386303) NOT BETWEEN (vt0.c0) AND (NULL)))LIKE(vt0.c2 COLLATE RTRIM)) FROM vt0 WHERE (CASE ''  WHEN (('#8N**vux')+('-616998142')) THEN ((NULL) NOT NULL) END); -- 0ms;
SELECT MIN(CASE NULL  WHEN vt0.c1 THEN x'973c' WHEN NULL THEN vt0.c1 WHEN vt0.c2 THEN 0Xffffffffc781da03 ELSE vt0.c2 END), 1134149455, (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END IN ()) FROM vt0 WHERE ((((x'0eeb', x'4114', NULL)) NOT BETWEEN ((((x'')<=('')), CASE WHEN 0X17dd46ca THEN '' END, (((0.4516933284462994)) NOT BETWEEN ((x'3331')) AND ((x'22ddb887'))))) AND ((x'cf19' COLLATE BINARY, CASE WHEN x'' THEN x'' ELSE '1590188904' END, TYPEOF(NULL))))) LIMIT -227885394; -- 0ms;
SELECT ALL (((((vt0.c2))>=((vt0.c2))))*(AVG(vt0.c1))) FROM vt0 WHERE (((((0.7543783726350255) BETWEEN (x'') AND (x''))) NOT BETWEEN ('') AND (-759015255 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT TOTAL((((vt0.c2, vt0.c0, vt0.c1))<((vt0.c2, vt0.c1, vt0.c0))) COLLATE NOCASE) FROM vt0 WHERE (((('773973295'))==(('^뀵K2%*˩'))) COLLATE RTRIM); -- 1ms;
SELECT ALL CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END COLLATE NOCASE FROM vt0 WHERE ((x'74cb' IN ()) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN ('0.0') AND ((vt0.c2 IN ()))), PERCENT_RANK() OVER (), (NOT (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))) FROM vt0 WHERE (((('', 'HB[', 0.9881410581426331)) NOT BETWEEN ((('-1939449310' IN ()), (- (NULL)), ((0.3784571460469669)<(x'')))) AND ((RTRIM(x'acc8'), (((916031354)) BETWEEN ((x'0f238d1463c9')) AND (('1678284502'))), CAST(NULL AS BLOB))))) LIMIT -833564129 OFFSET 1047300948; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c2 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (TOTAL_CHANGES())), ((- (vt0.c2)) IN ()), ((((vt0.c2)<<(vt0.c2))) IS TRUE) FROM vt0 WHERE ((((~ (''))) BETWEEN (LOWER(-8.97481348E8)) AND (x'40b8' COLLATE BINARY))); -- 0ms;
SELECT CASE WHEN vt0.c0 THEN (~ (vt0.c0)) END FROM vt0 WHERE ('0.5884691122607855') LIMIT -553344387 OFFSET -1475388970; -- 0ms;
SELECT DISTINCT (+ (((vt0.c2)IS(vt0.c1)))) FROM vt0 GROUP BY (((((vt0.c2) NOTNULL), vt0.c0 COLLATE NOCASE, ((vt0.c1)>=(vt0.c2))))<>((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), IFNULL(vt0.c0, vt0.c2)))) HAVING CASE WHEN (NOT (vt0.c2)) THEN MIN(vt0.c0) END LIMIT 923656383; -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))) IS FALSE) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL (vt0.c2 IN ()) COLLATE NOCASE FROM vt0 LIMIT 118950130 OFFSET 332789098; -- 0ms;
SELECT ALL ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)%(CASE WHEN x'' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 END)) FROM vt0; -- 0ms;
SELECT ALL ((COUNT(*)) NOT BETWEEN (HEX(vt0.c0)) AND ((vt0.c2 IN ()))), ((((vt0.c2)AND(((vt0.c0)<(vt0.c0)))))OR(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)), MIN(((0.9939325196867573)/(vt0.c1))) FROM vt0 WHERE (((('a)rB<l鯓ꃾi')) NOT BETWEEN (((NOT (0.26001146995413604)))) AND ((CAST('' AS NUMERIC))))) GROUP BY load_extension(((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c2))), (- (vt0.c1)), ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))<=(CAST(vt0.c0 AS BLOB))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (0.49181426279883167)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c0, x'', vt0.c1)) NOT BETWEEN ((vt0.c1, '*T', vt0.c2)) AND ((0.4930171870325063, vt0.c2, vt0.c0))) WHEN ((vt0.c1)!=(vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)) END DESC  NULLS FIRST;SELECT (((vt0.c0 IN ())) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (vt0.c1)) FROM vt0 WHERE (((x'' COLLATE RTRIM) ISNULL)); -- 0ms;
SELECT DISTINCT (((((((vt0.c2)OR(vt0.c0)))OR(vt0.c2))))<((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2))))) FROM vt0 WHERE (((((1.5037358E9) NOT BETWEEN (0.8210135574519719) AND (0Xffffffffab39c4b5)))%(((x'')LIKE(0Xffffffffeaa211b0))))); -- 0ms;
SELECT SUM(((vt0.c2) NOTNULL)) FROM vt0 WHERE (((((- ('1e500'))))<=((((0.5785760439540475) BETWEEN ('440500596') AND (NULL)))))) GROUP BY vt0.c1, (vt0.c2 COLLATE NOCASE IN ()), (((((((vt0.c2))<((vt0.c0))))AND(((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c0)<=(0.9588971098704164)))), TRIM(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END), (((((((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)) IN ()) HAVING ((CAST(vt0.c1 AS TEXT)) BETWEEN (MAX(vt0.c0)) AND (vt0.c0 COLLATE NOCASE)); -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE ((((- (NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT (- ((+ (vt0.c2)))), (~ (((vt0.c0)LIKE(vt0.c0)))), NULLIF(vt0.c2 COLLATE RTRIM, (0x65c13ee2 IN ())) FROM vt0 WHERE ((((0Xffffffffce5f20f0)) NOT BETWEEN ((CASE WHEN NULL THEN 0X4ac4dd58 END)) AND ((STRFTIME(x'', '', NULL, '-1571768722', x'283c'))))); -- 0ms;
SELECT DISTINCT COUNT(*), ((NULL COLLATE NOCASE)OR(((vt0.c2)%('59442261')))), ((((vt0.c2 IN (vt0.c0)), vt0.c2 COLLATE NOCASE, (vt0.c2 IN ())))>(((x'' IN ()), CAST(vt0.c2 AS REAL), vt0.c0 COLLATE BINARY))) FROM vt0 WHERE ((((((0.5038121787081212) IS FALSE), (('2113782937') IS TRUE), ((0.41777579684169464)||(0.7732791070025655))))>=(((('-858830910')IS('-1931773613')), ((x'') ISNULL), ((NULL) IS TRUE))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((MIN(vt0.c0))) AND ((vt0.c2 COLLATE NOCASE))) FROM vt0 WHERE (CAST(x'0fe4' AS BLOB)); -- 0ms;
SELECT ALL ((vt0.c2)>>(2031362732)), CAST(vt0.c0 COLLATE NOCASE AS BLOB), ((((vt0.c1)*(344936727)))-((- (vt0.c2)))) FROM vt0 WHERE ((~ (CAST('0너VMZ' AS BLOB)))) LIMIT -220001935; -- 0ms;
SELECT DISTINCT CASE ((vt0.c2)&(vt0.c0))  WHEN ('|6jR<N?%Z' IN ()) THEN ((vt0.c2)|(vt0.c2)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c0)>(vt0.c1)) THEN (((vt0.c1, vt0.c0, vt0.c2))<((vt0.c1, x'ff96', vt0.c0))) WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c2)+('')) THEN x'' WHEN vt0.c0 THEN ((vt0.c1)<(vt0.c2)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)) THEN TRIM(DISTINCT -358070138) ELSE x'' END FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)GLOB(((x'ecb3')<<(vt0.c1)))) FROM vt0 WHERE ((((0.33455870752724215) BETWEEN (x'') AND (x'')) IN ((((2113782937, 0.02191814600174735, NULL)) BETWEEN (('-965843484', 1.642058797E9, 0X3b4f6f44)) AND (('-982703912', NULL, 2.33961894E8)))))); -- 0ms;
SELECT (((((((((((vt0.c2))<>((vt0.c1))))AND(x'')))OR(1750927715 COLLATE NOCASE)))OR(COUNT(*))))AND(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) FROM vt0 GROUP BY ((vt0.c0)IS NOT(CAST(vt0.c2 AS NUMERIC))) ORDER BY ((('1134149455', 0.8704771113739771, vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c1) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)) AND (((vt0.c1 IN (vt0.c1)), ((vt0.c0)OR(vt0.c2)), ((vt0.c0)LIKE(vt0.c0))))) DESC  NULLS LAST LIMIT -840563881; -- 0ms;
SELECT DISTINCT AVG(CAST(vt0.c0 AS TEXT)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c1)) ELSE (vt0.c1 IN (vt0.c1, vt0.c0)) END, vt0.c1, (~ (((vt0.c1)GLOB(vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(CAST(vt0.c0 AS REAL)), MAX(CAST(vt0.c0 AS NUMERIC)), NULLIF(DISTINCT (((vt0.c1))!=((vt0.c2))), ((vt0.c2)>(vt0.c1))) FROM vt0 WHERE (((((highlight(0.604131265183385, 0.5465862402020565, '1134149455', NULL))OR('-1e500' COLLATE BINARY)))OR(COALESCE(x'3f2c', -3.63959097E8))));SELECT DISTINCT ((SUM(vt0.c1))%(vt0.c1 COLLATE NOCASE)), SUBSTR((((vt0.c1))>=((vt0.c0))), (vt0.c1 IN ())), CASE WHEN UPPER(vt0.c1) THEN ((vt0.c1) IS TRUE) ELSE (((vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c0))) END FROM vt0; -- 0ms;
SELECT CAST((- (vt0.c2)) AS REAL) FROM vt0 WHERE (((((x'b2e8') NOT BETWEEN (NULL) AND (x'b8d9'))) NOT BETWEEN (((x'') IS FALSE)) AND ((0.14601144230505336 IN (0.05723934831675859))))) LIMIT -980809459 OFFSET 916031354; -- 1ms;
SELECT IFNULL((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''''))), vt0.c0 COLLATE BINARY), (NOT ((NOT (18738432)))), CAST((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) AS TEXT) FROM vt0; -- 0ms;
SELECT ALL ((AVG(vt0.c0))/((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FROM vt0 LIMIT 1341145288 OFFSET -1; -- 0ms;
SELECT CASE ((vt0.c0)>=(vt0.c0))  WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c1 IN ()) END FROM vt0 WHERE (CASE WHEN ((x'') IS FALSE) THEN (('+]')/('1444881454')) WHEN LIKELY(DISTINCT 0.18829462173544897) THEN CAST(137640447 AS BLOB) WHEN (x'8a12' IN (0X574071c7, 'I*_4')) THEN (('') ISNULL) ELSE ((NULL)IS(0.5257666929793476)) END); -- 0ms;
SELECT ALL (- (((vt0.c0)>>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT COUNT(*) OVER (), ((INSTR(vt0.c2, vt0.c2))/(-6.89820421E8)), ((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c1))) ISNULL) FROM vt0 WHERE (((NULL COLLATE BINARY)+((- (x''))))) ORDER BY vt0.c1 DESC; -- 0ms;
SELECT DISTINCT json(GLOB(vt0.c1, vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT CHAR(((((((((vt0.c2)OR(vt0.c1)))AND(NULL)))AND(vt0.c0)))AND(vt0.c1))) FROM vt0 WHERE ((((NULL IN ()))|((((((((('.')OR(0.33311730000469486)))AND(x'fac3')))AND('-917583228')))AND(1.320542716E9))))); -- 0ms;
SELECT ((vt0.c0)+(vt0.c1)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT CASE (NOT (vt0.c1))  WHEN (vt0.c0 IN (0.12796708778077126)) THEN vt0.c2 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END THEN CAST(vt0.c2 AS INTEGER) WHEN ((vt0.c1)+(vt0.c2)) THEN ((vt0.c0)|(vt0.c2)) END FROM vt0 WHERE (UPPER(((0.42572996085771597) IS FALSE))) GROUP BY ((((((((413992051 COLLATE BINARY)OR((((vt0.c1, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c2, vt0.c1))))))OR((NOT (vt0.c0)))))OR(((-350931233) ISNULL))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))), CASE ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))  WHEN CAST(NULL AS INTEGER) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (0.7895565397861934)) THEN vt0.c0 COLLATE BINARY WHEN CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 END THEN (- (vt0.c2)) ELSE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END END, ((((vt0.c2)>(vt0.c0)))|(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN ()), (((vt0.c1) NOT BETWEEN (0.18046864639122395) AND (vt0.c1)) IN ()), ((((((vt0.c2) NOTNULL))OR(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))AND((- (vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c1 AS NUMERIC) AS NUMERIC), CAST((vt0.c1 IN ()) AS BLOB), CASE WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END THEN CAST(vt0.c2 AS TEXT) END FROM vt0 WHERE (CAST(('' IN (0.5333933408648616, NULL)) AS NUMERIC)); -- 1ms;
SELECT ALL '118950130' FROM vt0; -- 0ms;
SELECT ALL CAST(vt0.c2 AS TEXT) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL CASE WHEN (vt0.c2 IN ()) THEN MIN(vt0.c2) END FROM vt0 WHERE ((((NULL)) NOT BETWEEN (((('쪨as㚇')GLOB(NULL)))) AND ((0.5417646039276551)))) ORDER BY ((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))-(HEX(DISTINCT vt0.c0))) DESC; -- 0ms;
SELECT DISTINCT (+ (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) FROM vt0 WHERE (((((((((2.138438612E9)OR(NULL)))AND(0X42b89528)))OR(CASE WHEN 0.8874098470745982 THEN x'' WHEN NULL THEN x'' WHEN NULL THEN '-2099892159' END)))AND((('543814687')<<(NULL))))); -- 0ms;
SELECT ((vt0.c2) BETWEEN ((('-929578459') IS FALSE)) AND ('261826602')) FROM vt0 GROUP BY ((vt0.c1 COLLATE BINARY)>(CASE NULL  WHEN vt0.c2 THEN vt0.c2 END)), ((PRINTF(vt0.c2)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND ((((vt0.c0))>((vt0.c1))))), ((CAST(vt0.c1 AS NUMERIC))|(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))); -- 0ms;
SELECT ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (CAST(vt0.c2 AS REAL))) FROM vt0; -- 1ms;
SELECT DISTINCT (((~ (vt0.c2)))IS(TOTAL_CHANGES())) FROM vt0 GROUP BY '' ORDER BY (((NOT (vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)) DESC; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS BLOB)), x'61bc', (~ (((-1e500) BETWEEN (vt0.c0) AND (vt0.c1)))), CAST(CAST(vt0.c2 AS BLOB) AS NUMERIC), ((json(vt0.c1)) NOT NULL) FROM vt0 WHERE (CAST(CAST('' AS REAL) AS TEXT)); -- 0ms;
SELECT ALL ((((vt0.c0)<=(vt0.c1)))>=((vt0.c1 IN (vt0.c1)))) FROM vt0 WHERE (((((0.19253411961355937)OR('-1734942931')))AND(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c2) FROM vt0; -- 0ms;
SELECT ALL CASE (+ (vt0.c2))  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)) THEN HEX(DISTINCT vt0.c1) ELSE ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) END FROM vt0 WHERE (CASE ((0x2fe71d1c) IS FALSE)  WHEN CAST(17258984 AS NUMERIC) THEN (~ ('460257874')) ELSE 'hf' COLLATE BINARY END) LIMIT 122922193; -- 0ms;
SELECT DISTINCT TOTAL(((((vt0.c2)OR(0.7884643984254912)))OR(vt0.c1))) FROM vt0 WHERE ((((((0.18678708607468153)AND(NULL)))AND(0.7882469605205363)) IN ((('')>>(NULL)), x''))); -- 0ms;
SELECT DISTINCT (((((- (vt0.c1)))AND(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT (- (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) FROM vt0; -- 1ms;
SELECT (+ ((vt0.c0 IN ()))) FROM vt0 ORDER BY vt0.c2  NULLS LAST, ((vt0.c0) NOT NULL) COLLATE BINARY DESC; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), MIN(((vt0.c1)IS NOT(vt0.c0))), COALESCE(vt0.c0, vt0.c1) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY FROM vt0 WHERE (((((NULL)>=(NULL)))<(((NULL) BETWEEN (NULL) AND ('1444881454'))))) LIMIT -1887128902; -- 0ms;
SELECT DISTINCT 'I7,r/칗疽e(' FROM vt0 WHERE (CAST(0.9028294701563625 AS INTEGER) COLLATE BINARY) GROUP BY (((vt0.c2 IN ()))IS(json_object(vt0.c1, vt0.c1, -1769498412, vt0.c2, vt0.c1, vt0.c1))); -- 0ms;
SELECT CAST(IFNULL(DISTINCT vt0.c1, vt0.c2) AS INTEGER) FROM vt0 WHERE ((('' COLLATE BINARY) ISNULL)) LIMIT 1093896992; -- 0ms;
SELECT ALL HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1))) FROM vt0 WHERE (NULLIF(((x'')<<(NULL)), CAST(2132061587 AS TEXT))); -- 0ms;
SELECT COUNT('9_'), ((((vt0.c2)IS(vt0.c2))) BETWEEN (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))) AND (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END)), load_extension(UPPER(DISTINCT vt0.c1), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE ((+ (((NULL) NOT NULL)))) GROUP BY CASE WHEN CAST(vt0.c2 AS INTEGER) THEN CAST('1608837250' AS INTEGER) END HAVING ((((((((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)AND((((vt0.c0))>((vt0.c2))))))OR(MAX(vt0.c0))))OR(COUNT(*))))OR(vt0.c2)); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((x'' IN (x'')) AS TEXT)); -- 0ms;
SELECT CAST(MIN(vt0.c1) AS TEXT) FROM vt0; -- 0ms;
SELECT MAX(vt0.c1, (vt0.c2 IN ())), UPPER(vt0.c1), AVG(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END) OVER (), CAST(((vt0.c1)||(vt0.c0)) AS REAL), CAST(vt0.c0 AS NUMERIC) COLLATE BINARY FROM vt0; -- 0ms;
SELECT 0.9397065530724216 COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL INSTR(vt0.c1, vt0.c2) COLLATE BINARY, CAST(vt0.c0 COLLATE BINARY AS NUMERIC), ((vt0.c1)|(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))) FROM vt0 WHERE (ABS(DISTINCT CAST(NULL AS REAL))) GROUP BY ((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND ((((vt0.c0, vt0.c1, vt0.c0))==((NULL, vt0.c1, vt0.c2))))), (((NOT (vt0.c0))) NOTNULL), (~ (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (((0.21213825663370567)+(NULL))))); -- 0ms;
SELECT 0.4410434340825685 COLLATE BINARY FROM vt0 WHERE ((((((NULL)) BETWEEN ((x'')) AND ((0.4115127943231708)))) NOT BETWEEN ((('-2041815855') ISNULL)) AND ((((NULL))>=((NULL)))))); -- 0ms;
SELECT ALL (0.8907825466634763 IN ()), CASE WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c1 IN ()) WHEN (((vt0.c1))>=((vt0.c2))) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) WHEN (vt0.c1 IN ()) THEN CASE WHEN x'5c42' THEN '0.0' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END END, (((~ (vt0.c1))) BETWEEN (vt0.c2 COLLATE NOCASE) AND ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FROM vt0 WHERE (((')/gy')IS('⎊s9z鵛')) COLLATE RTRIM); -- 0ms;
SELECT '-226924356', COUNT(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))) OVER ( ORDER BY ((vt0.c2)&(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST), ((vt0.c0) NOT NULL) FROM vt0 WHERE (CAST((((NULL)) BETWEEN ((x'')) AND (('-689820421'))) AS BLOB)); -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c2)/(vt0.c2)))OR((NOT (0.04719166562058141)))))AND(LIKE(vt0.c1, vt0.c0))) FROM vt0; -- 3ms;
SELECT DISTINCT x'' FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL)) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0 ORDER BY ((((vt0.c2 COLLATE BINARY)OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR(((vt0.c2)>=(vt0.c1)))) DESC  NULLS LAST; -- 1ms;
SELECT (+ (('' IN (vt0.c0)))) FROM vt0 WHERE (((CAST('4DV' AS INTEGER))>(((x'') NOTNULL)))); -- 0ms;
SELECT ALL ((((vt0.c2)/(vt0.c1))) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*), ((((vt0.c1)OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(CASE WHEN vt0.c0 THEN NULL WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END)), (((((vt0.c2, vt0.c2, x''))<=((vt0.c1, vt0.c0, vt0.c0))))LIKE(CAST(vt0.c1 AS TEXT))) FROM vt0 GROUP BY CAST(((vt0.c2)AND(0X745e677f)) AS TEXT); -- 0ms;
SELECT DISTINCT vt0.c2, ((((((vt0.c2)OR(NULL)))OR(vt0.c1)))LIKE(ABS(NULL))), ((vt0.c2) ISNULL) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ((((vt0.c2) IS TRUE))OR(((vt0.c0) IS FALSE))), CAST(CAST(vt0.c0 AS REAL) AS TEXT), vt0.c0, ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) ISNULL), ((((vt0.c1)<>(vt0.c0))) IS TRUE) FROM vt0 WHERE (((CAST('1330089403' AS NUMERIC)) NOT BETWEEN (((NULL) IS TRUE)) AND ((+ ('-226924356'))))); -- 1ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT NULL) FROM vt0 LIMIT 1922370876; -- 0ms;
SELECT vt0.c2 FROM vt0 WHERE (((((x'cf9d')<<('0.4930171870325063')))==((((('')OR(-1456753204)))OR(0.07609600980584685))))) LIMIT 410182799; -- 0ms;
SELECT CAST(COUNT(vt0.c0) AS NUMERIC) FROM vt0 WHERE (CASE WHEN ((NULL) BETWEEN (0.4357672395712331) AND (NULL)) THEN ((((((((NULL)OR(NULL)))AND(x'')))OR('rQq>g^LG')))OR(0.14895706424552013)) ELSE (- ('5%v7?')) END) LIMIT -811603831 OFFSET 1714417911; -- 0ms;
SELECT DISTINCT (('X_Wk!<Td') BETWEEN (-9.82703912E8) AND (((vt0.c2) IS FALSE))) FROM vt0 WHERE (CASE CAST(0.5988313302639088 AS INTEGER)  WHEN ((NULL) NOT BETWEEN (0.8236295983613077) AND (x'1533')) THEN (('[gSV9')&('')) WHEN CASE WHEN '112966296' THEN NULL WHEN 0xffffffffd4870dce THEN 0.45809022387772047 WHEN 0.21802372652413826 THEN 0.416107097696615 END THEN ((0.6386459517315914)-('-1995717531')) WHEN ((((((((0.9426180145250802)OR('781915335')))OR(0.6084889074696347)))AND('1143404009')))AND(NULL)) THEN CAST(x'' AS BLOB) WHEN CAST(x'' AS REAL) THEN ((((0.16254696168882976)AND(NULL)))OR(0.770049856704603)) WHEN (- (9223372036854775807)) THEN (x'' IN ('787650134')) ELSE '-520155873' COLLATE BINARY END); -- 0ms;
SELECT (- (vt0.c0 COLLATE BINARY)) FROM vt0 GROUP BY (((vt0.c1 IN ())) BETWEEN (((((x'')OR(vt0.c1)))OR(vt0.c1))) AND (vt0.c2)), (vt0.c0 IN (vt0.c1)) COLLATE BINARY, ((+ (vt0.c0)) IN ()) HAVING ((vt0.c0) IS TRUE) COLLATE BINARY; -- 0ms;
SELECT DISTINCT MIN((NULL IN ())), ((((COUNT(*))OR(CAST(vt0.c2 AS REAL))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)), CAST((((0.7687249576206386))<=((vt0.c0))) AS REAL) FROM vt0 WHERE ((NULL IN (((((NULL)OR(327172008)))OR(x'')), (('1253921341') BETWEEN (1.134149455E9) AND (''))))) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0 WHERE (CASE WHEN NULL THEN ((((NULL)AND(x'a3c0')))OR(x'')) WHEN ((0X669722f)AND('13061481')) THEN (('WV')-(x'')) WHEN ((0X27bfa603) NOT BETWEEN (0.25525577498513563) AND (0X5503c08d)) THEN ABS('퓶g') ELSE ((-367181981)-(0.10988648142616764)) END); -- 0ms;
SELECT DISTINCT (((- (vt0.c2)))!=((((vt0.c1, vt0.c2, vt0.c1, 9.70029015E8, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c2, vt0.c0, vt0.c2, vt0.c1))))), ((LIKE(vt0.c2, vt0.c1))-(((vt0.c2)|(NULL)))), ((((((vt0.c1) ISNULL))OR(((vt0.c0)<<(vt0.c1)))))AND(NULL)) FROM vt0 GROUP BY (((- (vt0.c0))) BETWEEN (((vt0.c1)*(vt0.c2))) AND (((vt0.c2)%(vt0.c1)))), ((vt0.c0 IN ()) IN (vt0.c0 COLLATE NOCASE)), ((((((0.033918184207784696)IS(vt0.c0)))OR(vt0.c1 COLLATE RTRIM)))AND(((vt0.c0) IS TRUE))) HAVING (NOT (CAST(vt0.c1 AS REAL))); -- 1ms;
SELECT ALL ((((vt0.c0)<(vt0.c1))) BETWEEN (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))) AND (((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))) FROM vt0 WHERE (0.8951792330456088); -- 0ms;
SELECT ALL CAST(((vt0.c0) NOTNULL) AS INTEGER) FROM vt0 WHERE (((CASE NULL  WHEN '0.39241195531999506' THEN '-907364365' ELSE 0.6860605980564185 END) BETWEEN ((~ (x''))) AND (LOWER(DISTINCT NULL)))); -- 0ms;
SELECT ALL GROUP_CONCAT(((('uCWPiX', vt0.c2, vt0.c2))>((vt0.c0, vt0.c1, vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(MAX(AVG(vt0.c0))) FROM vt0 WHERE (NULL);SELECT ((vt0.c0) IS TRUE) FROM vt0 WHERE ('+V웿0aC䍄'); -- 0ms;
SELECT ((((CAST(vt0.c2 AS BLOB))OR(AVG(vt0.c1))))AND((('xTK!㥗.')OR(vt0.c2)))) FROM vt0; -- 0ms;
SELECT ALL ((((NULL)OR(SQLITE_VERSION())))AND(LIKELY(vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT '-315007746' FROM vt0 WHERE ((('' COLLATE RTRIM)%(CAST(NULL AS REAL)))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt0 WHERE ((LIKELIHOOD(NULL, 0.15659629189940538) IN ())); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(0Xffffffffb41ab218)))) AND ((((vt0.c2)-(vt0.c0))))) FROM vt0 WHERE (MAX(((0.14147404648209483)||('<굠')), (('}!럮fe')&(NULL)))) LIMIT -708241203; -- 0ms;
SELECT ALL LAG((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((((vt0.c0)-(vt0.c1))))), ((((((((CAST(NULL AS INTEGER))OR(NULLIF(x'', vt0.c0))))AND(((vt0.c1) NOTNULL))))AND(vt0.c0)))AND(CAST(vt0.c2 AS TEXT))), ((CASE '-1659078824'  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN 0.14057091220409657 WHEN vt0.c0 THEN vt0.c1 END) NOTNULL)) OVER () FROM vt0 ORDER BY ((vt0.c2)<=(((vt0.c2)<=(vt0.c2)))); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (LIKE(CAST(NULL AS NUMERIC), ((('*l'))>=((NULL))))); -- 1ms;
SELECT DISTINCT ((0X13cb7c83)>(LIKE(vt0.c0, x''))), (((('-1250714799'))<((vt0.c2))) IN ()), (- (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c2)=(vt0.c1)) COLLATE RTRIM) FROM vt0; -- 0ms;
SELECT DISTINCT NTILE(((((vt0.c2) NOTNULL))||(vt0.c1))) OVER (), CAST(CASE vt0.c0  WHEN '-1931773613' THEN vt0.c0 END AS NUMERIC), CAST(((vt0.c2)-(vt0.c1)) AS REAL) FROM vt0 WHERE (((((((((((NULL)AND(2030514061)))AND(NULL)))AND(0.38797721613285685)))OR(NULL)))<<(((-763809727) BETWEEN (x'ea21') AND (NULL))))); -- 0ms;
SELECT DISTINCT LAG(CAST(((vt0.c0)<>(vt0.c1)) AS INTEGER), CAST(NULLIF(vt0.c0, vt0.c1) AS NUMERIC), LIKELIHOOD(((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR(0.07959635466669346)), 0.15033064368317228)) OVER (), TRIM(DISTINCT CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END), PERCENT_RANK() OVER (), NTH_VALUE(SQLITE_VERSION(), 0X42f62f8a) OVER ( ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN '753814834' WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN 'Hc!.}	顥' END) IS TRUE) DESC  NULLS FIRST), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((((vt0.c2)<>(vt0.c0))))) FROM vt0 WHERE (CASE WHEN CAST(0.10137103736527087 AS INTEGER) THEN (((('QDF,')AND(-9.47791357E8)))AND(0.39829909745342296)) ELSE LTRIM(0.9961411345173721) END); -- 1ms;
SELECT NULLIF(vt0.c1, (((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c0)))) FROM vt0 WHERE ((((- (x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET(x''))-(0.3935986125581924 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT COUNT((NOT (vt0.c1))) OVER ( ORDER BY (- (CAST(vt0.c1 AS INTEGER))) ASC) FROM vt0; -- 0ms;
SELECT DISTINCT NULLIF(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c1 AS INTEGER)), TOTAL((~ (vt0.c0))), MIN(((((vt0.c0)AND(vt0.c1)))OR(vt0.c2))) FROM vt0 WHERE (LIKELY('')); -- 0ms;
SELECT DISTINCT (UNLIKELY(DISTINCT vt0.c2) IN (((vt0.c1) IS FALSE))), (NOT (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))), ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN x'' THEN vt0.c1 END) ISNULL) FROM vt0; -- 1ms;
SELECT ALL ((vt0.c0)>=(CAST(vt0.c0 AS REAL))) FROM vt0; -- 0ms;
SELECT (GROUP_CONCAT(vt0.c2) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((((((((vt0.c1 IN ()))AND((vt0.c1 IN (vt0.c0)))))AND(((vt0.c1)<(vt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(HEX(vt0.c0))) FROM vt0 NOT INDEXED WHERE ((((+ (x'')))IS(LTRIM('X^')))) ORDER BY ((((((vt0.c2) IS FALSE))AND(vt0.c1 COLLATE NOCASE)))OR((((vt0.c2, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, 0.06398630441921904, vt0.c2, '0.12796708778077126')) AND (('-231192274', vt0.c1, vt0.c1, vt0.c1, vt0.c1)))))  NULLS FIRST, CASE (((vt0.c1))<=((vt0.c1)))  WHEN ((0.3301724070978329)=(vt0.c0)) THEN SQLITE_COMPILEOPTION_GET(vt0.c1) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN 1.129266277E9 THEN vt0.c0 ELSE NULL END END  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)IS(CASE vt0.c1  WHEN '' THEN vt0.c2 END)) FROM vt0 WHERE (1.37640447E8); -- 0ms;
SELECT DISTINCT (CASE vt0.c1  WHEN vt0.c2 THEN x'' END IN ()) FROM vt0 WHERE (CHAR(((x'ff2a')>=('-1597851666')), CASE x'4efe'  WHEN '' THEN x'ff40' END, 0x5a984207)); -- 0ms;
SELECT DISTINCT (((((vt0.c1 IN ()))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND ('1143404009')))))AND(((vt0.c2) NOT NULL))), (+ ((('|}k')LIKE(x'')))), ((vt0.c0 COLLATE NOCASE)IS NOT(vt0.c1 COLLATE RTRIM)) FROM vt0 WHERE ('-358477392' COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE NOCASE)=(((vt0.c2) NOT NULL))) FROM vt0 WHERE (((((0x38b0455)OR((0.9278082040076537 IN ()))))OR(((x'') BETWEEN (0.9174120640623111) AND ('-553344387'))))); -- 0ms;
SELECT ALL (((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))AND((- (vt0.c0)))))AND('-f')) FROM vt0 WHERE (CAST(NULL AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c2 THEN NULL END IN ()) FROM vt0 WHERE (((NULL COLLATE BINARY)<=(((NULL)||(NULL))))); -- 0ms;
SELECT (~ (((vt0.c1) NOTNULL))) FROM vt0 ORDER BY ((NULL) IS TRUE), ((vt0.c0 IN ()) IN (vt0.c1 COLLATE NOCASE))  NULLS FIRST, ((LOWER(vt0.c1)) ISNULL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c1 THEN vt0.c2 END AS TEXT) FROM vt0 ORDER BY (((((vt0.c2 IN ()))OR((((vt0.c2, vt0.c2, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c0))))))AND(vt0.c2 COLLATE NOCASE)) DESC, (x'' IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT IFNULL((vt0.c1 IN ()), (vt0.c1 IN ())) FROM vt0; -- 0ms;
SELECT ALL TYPEOF(DISTINCT 'ㆳ銗'), vt0.c1, (((vt0.c2 IN ())) BETWEEN (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (((vt0.c1) BETWEEN ('') AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ((HEX(vt0.c1)) BETWEEN (vt0.c2 COLLATE BINARY) AND (((vt0.c1) NOT NULL))), (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c2 COLLATE BINARY))), (NOT (((vt0.c0) IS TRUE))) FROM vt0 ORDER BY (((~ (vt0.c1)))<=('1501309470')), ((((vt0.c1) IS FALSE)) IS FALSE) DESC; -- 0ms;
SELECT DISTINCT COUNT((((vt0.c0))<=((vt0.c0)))), CAST((vt0.c2 IN ()) AS INTEGER), IFNULL(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)), ((vt0.c0)LIKE(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0)OR(x'6fb6')))OR(vt0.c1)))+(MIN(vt0.c0))) FROM vt0; -- 0ms;
SELECT (NOT (((vt0.c2) ISNULL))), ((vt0.c1 COLLATE BINARY) IS TRUE), ((vt0.c1 COLLATE BINARY) ISNULL) FROM vt0 WHERE (CASE UNLIKELY(x'58f9')  WHEN (x'' IN ()) THEN ((0.8393423508462822)*(1.642058797E9)) ELSE (('1e500') NOT BETWEEN (0.8481748866465826) AND ('')) END); -- 0ms;
SELECT ALL CAST(GROUP_CONCAT(x'e425') AS INTEGER) FROM vt0; -- 0ms;
SELECT GROUP_CONCAT('\0NC䫪ARI') FROM vt0; -- 0ms;
SELECT DISTINCT '1346374016', (((+ (vt0.c1))) IS FALSE), TYPEOF(vt0.c1) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((x'd414')AND(vt0.c1 COLLATE NOCASE)))OR(JULIANDAY(0.9013264386938639, 'H\r', vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c2 END)))AND((((vt0.c0))=((vt0.c1))))) FROM vt0; -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END IN ()), (- ('tgND')), CAST(NULL AS REAL) FROM vt0 WHERE (((((NULL)&(0x2435ea6a)))>=((('13061481') BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT (((CAST(vt0.c1 AS INTEGER), json_object(vt0.c0, vt0.c0, NULL, vt0.c2), (vt0.c0 IN (vt0.c0))))<(((((vt0.c0))==(('-1924004973'))), ((vt0.c1) NOTNULL), x''))), json_insert(vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c1) COLLATE RTRIM, CAST(CAST(vt0.c2 AS TEXT) AS NUMERIC) FROM vt0;SELECT DISTINCT ((((SUM(vt0.c0))AND((NOT (vt0.c1)))))AND(GROUP_CONCAT(vt0.c1))) FROM vt0 WHERE (((CAST('293654088' AS BLOB)) NOTNULL)) ORDER BY CAST(((vt0.c1) NOTNULL) AS NUMERIC); -- 1ms;
SELECT COALESCE(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)), (NOT (vt0.c2))) FROM vt0; -- 0ms;
SELECT ((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)<(vt0.c2))) AND (((vt0.c2)-(x'237b')))), CASE (vt0.c0 IN ())  WHEN x'' THEN (((vt0.c1, vt0.c2, vt0.c1, vt0.c1, vt0.c1))=((vt0.c0, vt0.c0, vt0.c1, vt0.c0, 0.16995891494779536))) ELSE (+ (vt0.c2)) END, SUM(((NULL) IS FALSE)) FROM vt0 NOT INDEXED ORDER BY ((NULL) BETWEEN (((vt0.c1)<>(vt0.c2))) AND (CAST(vt0.c1 AS REAL))) ASC; -- 0ms;
SELECT NULLIF(DISTINCT (vt0.c2 IN ()), 0.666521854858082) FROM vt0; -- 0ms;
SELECT DISTINCT ((json_object(vt0.c2, vt0.c1)) BETWEEN (vt0.c2 COLLATE RTRIM) AND (((vt0.c0)-('736497828')))) FROM vt0;SELECT ALL CASE x''  WHEN ((vt0.c0) NOTNULL) THEN ((('1608837250'))==((vt0.c2))) WHEN (((vt0.c0, vt0.c0, vt0.c2))>((vt0.c0, NULL, vt0.c2))) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 END THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) ELSE 0.4798198055091639 END, vt0.c2, vt0.c0 FROM vt0 WHERE (CAST(IFNULL(0.056245233657899574, 0X65c13ee2) AS NUMERIC)); -- 0ms;
SELECT CASE (vt0.c1 IN ())  WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) THEN ((vt0.c0)>(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c1 AS REAL) WHEN vt0.c0 COLLATE BINARY THEN ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)) END FROM vt0 ORDER BY (((((vt0.c1) NOTNULL), (+ ('-1624109749')), UPPER(vt0.c1)))!=((CAST(vt0.c0 AS NUMERIC), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)), vt0.c1))), ((NOT (vt0.c2)) IN ()), (+ (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c1))))  NULLS LAST; -- 0ms;
SELECT ALL vt0.c2 FROM vt0; -- 0ms;
SELECT ALL TOTAL(((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE) FROM vt0; -- 0ms;
SELECT ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END) BETWEEN (0.814292516387026) AND ((((vt0.c2))=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0)-(vt0.c1))) NOT NULL), NULL COLLATE BINARY, ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)))IS NOT(vt0.c1 COLLATE NOCASE)) FROM vt0 ORDER BY ((((vt0.c0 IN (vt0.c0))))=((x'0f5efe4e'))) ASC, (((vt0.c1)==(vt0.c0)) IN (((vt0.c2)AND(vt0.c1)), (vt0.c1 IN ()))) DESC; -- 1ms;
SELECT (MAX(vt0.c0) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(UNLIKELY(vt0.c2) AS INTEGER) FROM vt0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT ((((vt0.c0)<>(vt0.c0)))>=(((vt0.c0)AND(vt0.c1)))), CAST(((vt0.c0) IS FALSE) AS TEXT), NULL FROM vt0 GROUP BY (((vt0.c0 IN ()))<(CASE '禍'  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) HAVING ((((((((json_array_length(vt0.c2, vt0.c1))OR((- (vt0.c0)))))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))))OR((vt0.c0 IN ())));SELECT DISTINCT CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL), (vt0.c1 IN ()) COLLATE BINARY, JULIANDAY(((((((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c1 END) FROM vt0; -- 0ms;
SELECT ((CAST(vt0.c0 AS NUMERIC)) ISNULL), ((((((vt0.c1)<(vt0.c1)))OR(((((((((vt0.c2)OR(vt0.c0)))OR(x'')))OR(vt0.c1)))AND(vt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'b3c6')))), ((((vt0.c2) BETWEEN (0.016118282850651755) AND (vt0.c1))) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (HEX(DISTINCT CAST(0X4ebea569 AS REAL))) GROUP BY ((vt0.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c1)<(vt0.c1)))), CAST((vt0.c1 IN (0.7724249904368984)) AS BLOB), ((('828638582' IN ())) NOT BETWEEN (vt0.c2) AND (vt0.c2 COLLATE NOCASE)) HAVING ((((((((vt0.c1)OR(vt0.c2)))AND(0.7687249576206386)))OR(vt0.c2 COLLATE BINARY)))OR((NOT (vt0.c2)))); -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0)-(vt0.c0))) AND (((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((+ (vt0.c2))) IS FALSE) FROM vt0; -- 0ms;
SELECT ALL UNLIKELY(DISTINCT ((vt0.c0) NOTNULL)) FROM vt0; -- 0ms;
SELECT '%T', NULLIF(DISTINCT INSTR(vt0.c1, vt0.c2), MIN(vt0.c2)), UPPER((vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT MAX('-1'), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) COLLATE BINARY, ((0.7687249576206386)<=(COUNT(vt0.c0))) FROM vt0 ORDER BY 'H\r' ASC; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((((NOT (x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS REAL)) NOTNULL), GROUP_CONCAT(((((vt0.c0)OR(vt0.c0)))AND(NULL))) FILTER(WHERE CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c2 ELSE 'i' END END) OVER (), ROW_NUMBER() OVER (), vt0.c1 COLLATE RTRIM, vt0.c1 FROM vt0 NOT INDEXED WHERE ('-917583228'); -- 0ms;
SELECT ALL 0.6265230354913881 FROM vt0 WHERE (CAST(('2138438612' IN ()) AS INTEGER)); -- 0ms;
SELECT DISTINCT SUM(CAST(vt0.c0 AS REAL)) FROM vt0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((((vt0.c2)AND(vt0.c0)))AND(NULL))) FROM vt0; -- 0ms;
SELECT (NOT ((vt0.c0 IN (vt0.c2, vt0.c0)))) FROM vt0 WHERE (((('-1738692666')) BETWEEN (((((('Qk<nSBE')AND('꠹')))AND(0.9883126462373601)))) AND ((LIKELY(DISTINCT -3.58477392E8))))); -- 0ms;
SELECT ALL ((vt0.c0 IN ()) IN (((vt0.c0)GLOB('-1012886331')))) FROM vt0; -- 0ms;
SELECT DISTINCT '451065949' FROM vt0; -- 0ms;
SELECT DISTINCT CASE ABS(DISTINCT vt0.c0)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c0)IS(vt0.c0)) END, ((vt0.c2) IS FALSE) COLLATE BINARY, vt0.c1 FROM vt0 WHERE (('1892510017' IN ())) GROUP BY (NOT (((vt0.c0)<<(vt0.c1)))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) NOT NULL) FROM vt0 WHERE ((((0.1839448477287322, NULL, NULL)) NOT BETWEEN (((~ (x'e8fa')), (('(bzc[nlp')|(0.21446179061209514)), (('-358477392') IS TRUE))) AND (((((x''))>=((0.436295639939999))), ((x'7304')GLOB(NULL)), (((((((('-363959097')OR(NULL)))OR(0.7774803875284182)))AND(x'')))OR(x'')))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))) BETWEEN ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c0)))) AND (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) FROM vt0 WHERE (SUBSTR((x'502a' IN ()), (((NULL))>=(('㮚_u}'))))) LIMIT 1044378874; -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE NOCASE)IS(((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))) FROM vt0 WHERE ((((1742361635) NOT BETWEEN (3.84947588E8) AND (0.17082036680170387)) IN ('T-].&(' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT CAST(vt0.c2 COLLATE BINARY AS TEXT), ((((CAST(x'' AS NUMERIC))AND((NOT (vt0.c1)))))AND(((vt0.c2)=(0Xffffffffd045df89)))), LAST_VALUE((((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c2))))OR(((vt0.c0)<<(vt0.c1)))))AND(((vt0.c2) NOT NULL)))) OVER () FROM vt0; -- 1ms;
SELECT ALL (((('.*z_M}k') ISNULL))GLOB(((vt0.c2) NOTNULL))) FROM vt0; -- 0ms;
SELECT DISTINCT (((UPPER('\Ἲ')))<=((((vt0.c1) ISNULL)))) FROM vt0 WHERE (((UNLIKELY(0.5179985175563403))<=(0.3065660946100546))); -- 0ms;
SELECT ALL (+ (((vt0.c0)OR(vt0.c1)))) FROM vt0 WHERE (CASE (((9.92799673E8, NULL, NULL))>=((x'0b4d', 0.46748346647761996, x'')))  WHEN ((x'd337') NOT BETWEEN ('') AND ('74220486')) THEN ((x'')>('h''S泇࡫')) ELSE 0.04898880986304366 COLLATE NOCASE END); -- 0ms;
SELECT AVG('T樌8b	!Ub') OVER (), ((((vt0.c2)IS NOT(vt0.c1))) ISNULL), vt0.c0 FROM vt0 WHERE (x'') GROUP BY INSTR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))), ((vt0.c0 COLLATE BINARY) ISNULL), ((((((vt0.c2)<<(0.42190791466780586)))OR((- (vt0.c2)))))OR(0.821129465451548)); -- 0ms;
SELECT DISTINCT '79682040', CASE WHEN (vt0.c1 IN (vt0.c2)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c2)<<(vt0.c0)) END, ((((vt0.c2 COLLATE RTRIM)AND((((2.107520647E9, vt0.c2, vt0.c2)) BETWEEN ((x'', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c2))))))AND(CAST(vt0.c1 AS INTEGER))) FROM vt0 WHERE (CAST(CAST(-8.40563881E8 AS INTEGER) AS INTEGER)); -- 0ms;
SELECT (- (CAST(vt0.c1 AS TEXT))), LIKELY(DISTINCT 0.2179770825093411), (~ (NULLIF(0.9191358760699534, x''))) FROM vt0 WHERE (CASE WHEN '2117208171' COLLATE RTRIM THEN '8Fis' COLLATE NOCASE WHEN 0.1909355415798163 COLLATE BINARY THEN (((0.30066851336457767, 0x61314ce6, 0.27194645746426716)) BETWEEN ((NULL, 0.14637611945224105, 'z*聏lk')) AND ((0Xffffffffc448756e, '1129266277', NULL))) WHEN ((((((((x'')AND(NULL)))OR(0.7421099101692638)))AND(0.6088226841211714)))AND(x'')) THEN NULL END); -- 0ms;
SELECT DISTINCT ((((vt0.c1) IS TRUE))<<(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) FROM vt0; -- 0ms;
SELECT DISTINCT (- (vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL CASE (vt0.c1 IN ())  WHEN ((vt0.c2)*(NULL)) THEN ((vt0.c2)<(vt0.c1)) END FROM vt0 WHERE (((LIKELY(DISTINCT 1226025050))>=((((NULL, 2.33961894E8, x'')) NOT BETWEEN ((NULL, NULL, '-759341090')) AND ((x'', 2.107520647E9, 1e500)))))) ORDER BY (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)) IN ()) ASC  NULLS LAST; -- 0ms;
SELECT 0.03372062890993632, AVG(CASE WHEN vt0.c1 THEN vt0.c0 END) OVER (), AVG(((vt0.c0)<>(x'27dc'))) FROM vt0 WHERE (x''); -- 0ms;
SELECT ((CAST(vt0.c2 AS INTEGER)) NOTNULL) FROM vt0 WHERE (CASE WHEN ((x'') NOT BETWEEN ('2143641378') AND (NULL)) THEN (((x''))==((''))) END); -- 0ms;
SELECT DISTINCT CAST(json_quote(vt0.c2) AS REAL), vt0.c0, ((((vt0.c1) NOT NULL)) BETWEEN (COUNT(vt0.c1)) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c2, vt0.c2))))) FROM vt0 NOT INDEXED WHERE (((((((x''))>(('['))), (NOT (x'')), ((((0x6f82326c)AND(0.8293007709549153)))AND(x''))))==(((('-982703912') IS TRUE), CAST(x'' AS BLOB), CAST(x'' AS REAL))))); -- 0ms;
SELECT DISTINCT CASE (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2)))  WHEN vt0.c1 THEN ((vt0.c1)<>(vt0.c2)) END FROM vt0 WHERE ((~ ((- (0xffffffffa567a959))))) LIMIT -1648658595; -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE BINARY) IS FALSE) FROM vt0 WHERE ((((('') BETWEEN (x'ced6778f') AND (NULL)))AND(828638582))); -- 0ms;
SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) IS FALSE)) IS TRUE) FROM vt0 WHERE (CASE 'A.'  WHEN ((NULL)>(x'')) THEN (NOT (5.72539716E8)) WHEN ((0.6038751266052736) BETWEEN ('2117208171') AND (NULL)) THEN 0.44190683227666305 WHEN CAST(x'' AS TEXT) THEN CAST('1272991644' AS BLOB) ELSE CASE WHEN '2140726354' THEN NULL WHEN x'bbb9' THEN -8.66289239E8 WHEN '	o<o_l' THEN '-1586256669' ELSE '-819511403' END END); -- 1ms;
SELECT DISTINCT ((vt0.c2 COLLATE BINARY) ISNULL) FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (- ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (vt0.c2)) COLLATE BINARY FROM vt0 GROUP BY '-2069116243' HAVING CASE CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN AVG(vt0.c2) THEN ((vt0.c1)<<(vt0.c1)) END; -- 0ms;
SELECT NTILE(((((vt0.c0) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((vt0.c2) NOT NULL)))) OVER ( PARTITION BY (((~ (vt0.c2)))-(((vt0.c0) NOTNULL))), (((vt0.c1 IN ())) BETWEEN ('-1597851666') AND ((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0))<((vt0.c2, vt0.c2, vt0.c2, vt0.c2, NULL))))) GROUPS vt0.c2 PRECEDING), (((vt0.c1 IN (vt0.c2, vt0.c1)))>=(AVG(vt0.c2))), '-677325861' COLLATE RTRIM FROM vt0; -- 3ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND 0.9192273719074151 FOLLOWING) FROM vt0; -- 1ms;
SELECT DISTINCT LEAD(((((((((CASE vt0.c1  WHEN vt0.c2 THEN NULL WHEN 0Xfffffffff64c2b93 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END)OR(((vt0.c2) IS TRUE))))OR(((vt0.c1) NOT NULL))))AND(CAST(vt0.c1 AS REAL))))OR(vt0.c2 COLLATE NOCASE)), vt0.c2, CAST(((vt0.c0)IS NOT(vt0.c2)) AS REAL)) OVER () FROM vt0 WHERE ((((((NULL)+(NULL))))<>(((0.4784378662112867 IN ()))))); -- 0ms;
SELECT DISTINCT (NOT ((vt0.c1 IN (vt0.c0)))) FROM vt0 WHERE (CASE WHEN CASE NULL  WHEN 0Xffffffffee102ff3 THEN '-272531282' WHEN -1.297652444E9 THEN 0.8856935411811763 WHEN '624371428' THEN x'' ELSE '' END THEN NULL WHEN CASE WHEN 3.84947588E8 THEN x'' END THEN ((NULL) BETWEEN (x'') AND ('9D{Pᱣ^N{5')) WHEN ((x'') NOT NULL) THEN (~ ('')) ELSE CASE '2117208171'  WHEN '-1896821453' THEN -9.07364365E8 ELSE 'o' END END); -- 0ms;
SELECT DISTINCT ((((vt0.c0)&(NULL)))<>(COUNT(''))), vt0.c0, (COUNT(*) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c1))) BETWEEN (CAST(vt0.c2 AS INTEGER)) AND (ABS(DISTINCT vt0.c0))) FROM vt0 ORDER BY 0.4115127943231708 DESC; -- 0ms;
SELECT ((NULL)GLOB((((vt0.c2))>((vt0.c2))))) FROM vt0; -- 0ms;
SELECT ALL '' FROM vt0; -- 0ms;
SELECT DISTINCT UPPER(SQLITE_SOURCE_ID()) FROM vt0 WHERE (((CASE WHEN 0.680335062701193 THEN x'' ELSE NULL END)<=(((((NULL)OR(x'218b')))AND(''))))); -- 0ms;
SELECT NULL COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL ((vt0.c2) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)IS NOT(vt0.c2 COLLATE NOCASE)) FROM vt0 WHERE ((- ((((0.5741868097579379)) NOT BETWEEN ((x'')) AND ((NULL)))))); -- 0ms;
SELECT (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN (((vt0.c2 IN (vt0.c2, vt0.c2)), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), ((vt0.c0) IS TRUE))) AND ((((vt0.c2)!=(vt0.c2)), ((vt0.c0)IS NOT('')), ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0, (((vt0.c2)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c2)+(vt0.c0))))), MAX(((((NULL)AND(vt0.c2)))OR(vt0.c1)) COLLATE NOCASE) FROM vt0 WHERE (('H\r' COLLATE NOCASE IN ((~ ('0.49181426279883167')), (('AVZB') BETWEEN ('') AND ('0.41280704582600847'))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 GROUP BY (vt0.c0 IN ()) LIMIT -1704768234; -- 0ms;
SELECT COUNT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) OVER (), CASE CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END  WHEN (((vt0.c1))<=((vt0.c0))) THEN (NOT (vt0.c2)) WHEN ((vt0.c1)AND(vt0.c0)) THEN CASE WHEN vt0.c0 THEN 0.8236295983613077 END WHEN AVG(0xffffffffb2a76524) THEN CAST(0.2702447937574113 AS BLOB) END, (((((vt0.c1, vt0.c1, 0x1c66239e)) NOT BETWEEN (('122922193', vt0.c0, vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c2)))) NOTNULL), x'', (+ (x'')), ((vt0.c0)&(vt0.c2)) COLLATE BINARY, (- (vt0.c0)) COLLATE BINARY FROM vt0 GROUP BY CASE (NULL IN ())  WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)) THEN IFNULL(vt0.c2, vt0.c2) ELSE ((vt0.c2) IS TRUE) END; -- 0ms;
SELECT ALL (MAX(vt0.c0) IN ()) FROM vt0 WHERE ((((0.307761396238429) NOT NULL) IN ())); -- 0ms;
SELECT ALL vt0.c1, (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0))))), x'' FROM vt0; -- 0ms;
SELECT DISTINCT '' FROM vt0; -- 0ms;
SELECT ALL ((GROUP_CONCAT(vt0.c1)) NOT NULL), ((AVG(vt0.c0))-(vt0.c2 COLLATE RTRIM)), TOTAL(CAST(vt0.c2 AS TEXT)) FROM vt0 WHERE ((((x'')<<(0Xb4902c3)) IN ())); -- 0ms;
SELECT (- (vt0.c1)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL CASE WHEN CASE WHEN vt0.c1 THEN NULL END THEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT (+ (('0.49181426279883167' IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c0)))AND(0.11724326459386303)))OR((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT NULL COLLATE RTRIM FROM vt0 LIMIT -797511705 OFFSET -1128558024; -- 0ms;
SELECT DISTINCT TOTAL(CAST(vt0.c0 AS INTEGER)) FROM vt0; -- 0ms;
SELECT DISTINCT (((+ ('''MTgDyL')))&((((8.28638582E8, vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.c1))))) FROM vt0 WHERE (((CAST(572539716 AS REAL))%((('332102787') ISNULL)))); -- 0ms;
SELECT vt0.c1 FROM vt0 GROUP BY (((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) IN (vt0.c0 COLLATE BINARY, vt0.c0 COLLATE NOCASE)); -- 0ms;
SELECT CUME_DIST() OVER (), (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((0.8247480344718358))), CASE ((vt0.c0)|(vt0.c1))  WHEN NULL THEN vt0.c1 WHEN CAST(vt0.c2 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) WHEN CAST(vt0.c1 AS BLOB) THEN GROUP_CONCAT(vt0.c0) END FROM vt0 WHERE (CAST(((0Xffffffffbfd47cb5)OR(x'')) AS INTEGER)); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))>=(((NOT (vt0.c2))))), ((((vt0.c0)OR(vt0.c2)))>>(RTRIM(vt0.c2))) FROM vt0 WHERE (((((('-370353378')) BETWEEN ((NULL)) AND (('-1050658396')))) BETWEEN (0.9613614565939593) AND ((((('-559864359')AND(0.49279848598000386)))AND(0.7748938543171154))))); -- 0ms;
SELECT (- (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))), ((vt0.c0)GLOB(json_quote(vt0.c2))), ((((vt0.c0)>(vt0.c2)))/(AVG(vt0.c2))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL), ((vt0.c0) IS FALSE) COLLATE NOCASE, CAST(CASE WHEN 0.5597487604140827 THEN vt0.c1 WHEN NULL THEN 1706536233 WHEN vt0.c2 THEN vt0.c1 END AS REAL) FROM vt0 WHERE ((((- (0X53262349)))&((~ (x'17df102a'))))) GROUP BY ((0.31594813094892615)!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING (('Qn') IS TRUE) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT TYPEOF((vt0.c0 IN ())) FROM vt0 WHERE (((COALESCE(DISTINCT NULL, x'551b4877'))AND(CASE WHEN 'zx' THEN x'' ELSE '803675420' END))) ORDER BY (((vt0.c0) NOTNULL) IN ()); -- 0ms;
SELECT DISTINCT ((0.3189979090625964)>=(ABS(vt0.c2))), CASE WHEN ((vt0.c2) IS TRUE) THEN TOTAL(vt0.c2) WHEN COUNT(vt0.c1) THEN vt0.c1 COLLATE NOCASE WHEN NULLIF(NULL, vt0.c1) THEN (0.2227924500282522 IN ()) END, (- (TOTAL(vt0.c2))), ROW_NUMBER() OVER (), ((CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)IS(273189021)) FROM vt0 WHERE ((('1382245091') BETWEEN (0.0896534444399798) AND (0xffffffffdb29b731)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT x'', ((((((((0.8271312709947074)OR(NULL)))OR((vt0.c2 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND((('-925136069')<>(vt0.c2)))), RANK() OVER (), (((vt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN ((CAST(vt0.c2 AS NUMERIC), 0.07604661692006187, ((NULL) NOT NULL))) AND ((((vt0.c2)-(vt0.c2)), (vt0.c1 IN ()), vt0.c0 COLLATE RTRIM))), CASE ((vt0.c2) NOT NULL)  WHEN ((vt0.c2)GLOB(NULL)) THEN GLOB(vt0.c2, 'Hf') ELSE ((vt0.c2) ISNULL) END FROM vt0; -- 0ms;
SELECT (NOT (vt0.c1)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN '0.3784571460469669' THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)) ELSE ((vt0.c0) NOTNULL) END FROM vt0 LIMIT -1456753204 OFFSET 828638582; -- 0ms;
SELECT DISTINCT (+ (((vt0.c0)%(vt0.c0)))) FROM vt0 GROUP BY ((((((vt0.c0)LIKE(vt0.c1)))AND((((vt0.c1))>=((vt0.c0))))))AND((- (vt0.c1)))) HAVING (((vt0.c2 IN ())) BETWEEN ((((vt0.c0, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c0, '1301764962', vt0.c1)))) AND (((vt0.c1)*(vt0.c2)))); -- 0ms;
SELECT DISTINCT TIME(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), (vt0.c1 IN ())) FROM vt0 WHERE (x'c8ce'); -- 0ms;
SELECT DISTINCT (+ (((vt0.c2)GLOB(vt0.c0)))) FROM vt0 WHERE (((0.12405942817218596) ISNULL) COLLATE NOCASE) GROUP BY vt0.c2 HAVING ((CAST(vt0.c0 AS INTEGER))/(TRIM(DISTINCT vt0.c1))); -- 0ms;
SELECT ALL ((MIN(vt0.c2))<<(CAST(vt0.c2 AS BLOB))), (NOT (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))), ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL CASE WHEN (((vt0.c2))==((vt0.c1))) THEN 0.19416653806693407 WHEN MIN(vt0.c1) THEN ((vt0.c0)-(vt0.c0)) WHEN HEX(vt0.c1) THEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE vt0.c2 END, (vt0.c2 IN ()) COLLATE NOCASE, ((((((((((vt0.c0) NOT NULL))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE BINARY)))AND(vt0.c1 COLLATE RTRIM)))AND(((vt0.c2) NOTNULL))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((x'')) AND ((((vt0.c0) NOTNULL)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c1 AS TEXT)))<=((vt0.c2 COLLATE NOCASE))), TYPEOF(DISTINCT (((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))), ((vt0.c0)||(vt0.c1)), (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (CASE WHEN vt0.c2 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN x'c50a' THEN vt0.c2 END)), NULLIF(DISTINCT CAST(vt0.c2 AS REAL), ((vt0.c1) ISNULL)) FROM vt0 LIMIT -162780269 OFFSET -1232357910; -- 0ms;
SELECT DISTINCT (COUNT(vt0.c1) IN (CASE WHEN vt0.c2 THEN vt0.c0 ELSE 0Xffffffffa7b26217 END)), TOTAL(((vt0.c0)==(vt0.c1))), ROW_NUMBER() OVER () FROM vt0 WHERE ((+ (((0X4f000f57) NOT BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0)))+((((vt0.c0, vt0.c2, vt0.c2))>=((vt0.c1, vt0.c0, vt0.c2))))) FROM vt0 GROUP BY (((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))) NOT BETWEEN (vt0.c0) AND ((((vt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c0))))); -- 0ms;
SELECT ALL SUM((vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN vt0.c1 ELSE vt0.c1 COLLATE BINARY END FROM vt0 WHERE ((~ (((x'')<=(x''))))) GROUP BY ((- ('*h')) IN ()), (((COALESCE(vt0.c1, vt0.c0)))>=((((vt0.c2)<=(vt0.c0))))), (((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))/(CAST(vt0.c2 AS REAL))); -- 0ms;
SELECT DISTINCT UNLIKELY(((NULL)<=(vt0.c0))), ((UPPER(DISTINCT 'Y梼')) NOT BETWEEN (UPPER(DISTINCT vt0.c1)) AND (LIKELIHOOD(vt0.c0, 0.080989201209264))), LOWER(vt0.c2) COLLATE NOCASE FROM vt0 WHERE ((((('tMd') IS TRUE)) BETWEEN (0.9472212095276075) AND (NULL COLLATE RTRIM))); -- 1ms;
SELECT ALL MIN(vt0.c0) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT (((+ (vt0.c0))) BETWEEN (CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END) AND (CASE vt0.c0  WHEN NULL THEN vt0.c1 END)) FROM vt0 WHERE ((NOT (((((NULL)OR(NULL)))AND(''))))); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c2, '-1282159960'))) AS REAL) FROM vt0 WHERE (((((CASE NULL  WHEN '1458424659' THEN -933690059 END)OR(load_extension(0.5259919194077889))))AND((('<xw') ISNULL)))); -- 0ms;
SELECT ALL vt0.c1 COLLATE BINARY, NULLIF(((vt0.c1) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))), ((CAST(vt0.c2 AS BLOB)) NOT BETWEEN ((vt0.c2 IN (vt0.c2))) AND (vt0.c0)) FROM vt0 WHERE (x'') LIMIT 74017424; -- 0ms;
SELECT ALL (((vt0.c1)) NOT BETWEEN ((vt0.c2 COLLATE NOCASE)) AND ((-6.89820421E8))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE BINARY) BETWEEN (((x'')<<(vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)))) FROM vt0 WHERE (((CAST(2.008675952E9 AS TEXT))/(((x'') IS FALSE)))); -- 0ms;
SELECT ALL (((vt0.c2)) NOT BETWEEN ((((vt0.c2) BETWEEN ('hNqh*襙s☩?') AND (vt0.c1)))) AND ((((vt0.c0)LIKE(vt0.c2))))) FROM vt0 WHERE ((- (((0.6383755029515258) IS FALSE)))); -- 0ms;
SELECT NTH_VALUE((- (CASE '954172586'  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END)), (((vt0.c1, '1878028350', vt0.c2)) BETWEEN ((((vt0.c0)<<(vt0.c2)), ((vt0.c2) NOTNULL), (vt0.c2 IN (vt0.c2)))) AND (((~ (vt0.c1)), ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR('')))AND(vt0.c1)))AND('xob{s⻔.')))OR(vt0.c2)), ((((vt0.c0)AND(vt0.c2)))AND('-1876351832')))))) OVER () FROM vt0 WHERE (TYPEOF(LAST_INSERT_ROWID())) GROUP BY (((vt0.c0)LIKE(vt0.c1)) IN (TRIM(vt0.c1), json_quote(vt0.c0))); -- 0ms;
SELECT CASE WHEN (vt0.c1 IN (vt0.c0)) THEN vt0.c2 COLLATE NOCASE ELSE vt0.c2 END FROM vt0 WHERE (((((((0.13709608923057637))>=((0.4231384431574502))), NULL COLLATE RTRIM, CAST(NULL AS BLOB)))!=((((0X2435ea6a)>(0.3268982703277682)), ((-2050639050) BETWEEN (x'') AND (0.2989518799462323)), 0.12209025427510656 COLLATE BINARY)))); -- 0ms;
SELECT CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE, ((MIN(vt0.c1))IS NOT('?鐴6|_s^zc')), (((- (vt0.c1)))>=((+ (vt0.c2)))) FROM vt0 ORDER BY ((((vt0.c0, vt0.c1, vt0.c2))>((vt0.c2, vt0.c1, vt0.c2))) IN ())  NULLS LAST; -- 0ms;
SELECT (+ (((vt0.c0) IS FALSE))) FROM vt0 WHERE (CAST(('' IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CAST((vt0.c2 IN (vt0.c0)) AS TEXT) FROM vt0 WHERE (((((x'') NOT BETWEEN ('e/&Jl9J') AND ('-1808364531')))/(254660183))); -- 1ms;
SELECT DISTINCT (((vt0.c2)||(vt0.c2)) IN ()), ((vt0.c1)<<(vt0.c0)) COLLATE NOCASE, (((+ (vt0.c0))) NOT NULL) FROM vt0 WHERE ('1230271752'); -- 0ms;
SELECT ALL LAST_VALUE(x'') OVER (), ((UNLIKELY(vt0.c1)) NOT NULL), TOTAL(((vt0.c0)<(vt0.c0)) COLLATE RTRIM) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt0 WHERE ((((HEX(0.42843099016237707)))<=(((+ ('El')))))) ORDER BY (((((vt0.c2)!=(vt0.c1))))<=((((vt0.c1)*(vt0.c0)))))  NULLS LAST; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ORDER BY ((((((((((((((vt0.c2)&(vt0.c2)))AND('')))AND(vt0.c0 COLLATE BINARY)))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)))OR(LOWER(vt0.c1))))AND(vt0.c0)))OR(((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))) DESC) FROM vt0 ORDER BY (((vt0.c1 IN ()))>=((('0.5038121787081212')&(vt0.c2)))) ASC, (- ((~ (vt0.c2)))) ASC; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CASE WHEN '0.7194291208633126' COLLATE RTRIM THEN '' ELSE ((0.4015482316636454) BETWEEN (x'') AND (0.3095990295478539)) END); -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT ALL (((vt0.c2) NOT BETWEEN (vt0.c2) AND (x'')) IN ()) FROM vt0 WHERE (((((x'')IS NOT(NULL)))<=((((('-971236627')AND(NULL)))AND(''))))); -- 0ms;
SELECT (((+ (vt0.c0)))+(0.012982103319069016)) FROM vt0 WHERE (NULL) GROUP BY ((((+ (vt0.c0))))==((vt0.c2 COLLATE RTRIM))), ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN ((vt0.c2 IN ())) AND (((x'')>(vt0.c0)))), CAST(vt0.c0 AS NUMERIC) HAVING CAST(((vt0.c0)|(vt0.c2)) AS REAL); -- 0ms;
SELECT DISTINCT CASE WHEN (+ (vt0.c0)) THEN ((vt0.c1)LIKE(vt0.c1)) END, ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)))<>(CAST(vt0.c1 AS INTEGER))), NULL, vt0.c1, (NOT (((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))), ((((vt0.c0))>=((vt0.c2))) IN ()), GROUP_CONCAT((vt0.c1 IN ())) OVER () FROM vt0 WHERE ((((((('')AND(NULL)))AND('-866289239')))-('&鼸''k䐋觭'))) GROUP BY ((((((((x'')OR(((vt0.c2) IS TRUE))))OR(vt0.c1)))AND(((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c0)))))OR(((vt0.c2)<>(vt0.c0)))), (NOT (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)), (((NULL)) NOT BETWEEN ((((vt0.c1)<>(vt0.c2)))) AND (((- (vt0.c1))))); -- 0ms;
SELECT AVG(((vt0.c0) NOT NULL)) OVER ( ROWS BETWEEN  CURRENT ROW AND CASE WHEN ((vt0.c1)IS NOT(vt0.c0)) THEN NULLIF(DISTINCT vt0.c2, vt0.c0) END PRECEDING EXCLUDE TIES) FROM vt0 WHERE ((+ (CASE ''  WHEN '801777123' THEN 0.21054492470722408 END)));SELECT ABS(((vt0.c1)AND(vt0.c2))) FROM vt0 ORDER BY (vt0.c1 IN ()) DESC  NULLS LAST, ((((vt0.c1) NOTNULL))%(vt0.c2 COLLATE BINARY))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt0.c1 IN ())) NOTNULL) FROM vt0 WHERE ((((((((((('&<x^>')OR(0x59a12ff8)))AND('-5558572')))OR('	(')))AND('916031354'))) BETWEEN ((('eW}E䩊]]癘}') ISNULL)) AND (((x'')<(''))))) GROUP BY ((((vt0.c0)AND(vt0.c2)))GLOB(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)); -- 0ms;
SELECT DISTINCT ((((((((CAST(vt0.c0 AS BLOB))OR((((vt0.c2, vt0.c0, vt0.c0))>((vt0.c0, '145762965', vt0.c1))))))OR(((vt0.c0)%(x'')))))OR(((vt0.c0)<<(vt0.c1)))))AND(((vt0.c0)>(vt0.c1)))) FROM vt0 WHERE (((((0x46a7f71a)LIKE(835825517)))LIKE((~ (0.044418082659966496))))); -- 0ms;
SELECT ((vt0.c2)IS(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0 WHERE (((DATETIME('햄', x'', x'', 0.42242754730021814, '548057807', '-333146669', -1808364531)) BETWEEN (CASE WHEN x'' THEN NULL ELSE -5.53344387E8 END) AND (IFNULL('1674830520', x'd6cf')))); -- 1ms;
SELECT LOWER(DISTINCT ((vt0.c1)<<(vt0.c0))) FROM vt0 WHERE ((((NULL) BETWEEN ('-913567925') AND ('!Go')) IN ())); -- 1ms;
SELECT ALL (NOT (((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))) FROM vt0 WHERE (CASE x''  WHEN 'TRUE' THEN '384947588' END COLLATE NOCASE); -- 0ms;
SELECT UPPER(DISTINCT vt0.c2) FROM vt0 GROUP BY ((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT NULL) HAVING ((((vt0.c0)IS NOT(vt0.c0))) NOT NULL); -- 0ms;
SELECT ((COUNT(vt0.c2))==(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (CAST(((NULL) BETWEEN (x'') AND (1687139481)) AS TEXT)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((0X4323146))==(('916031354')))) NOT NULL)) ORDER BY '껧쮑wfq'  NULLS LAST; -- 0ms;
SELECT SUM(((vt0.c2)||('-1297652444'))) FROM vt0 LIMIT -119031500 OFFSET -146173658; -- 0ms;
SELECT DISTINCT json_object((((vt0.c2))==((vt0.c0))), (NOT (vt0.c1))) FROM vt0;SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((0Xfffffffff6c6fcf3 COLLATE RTRIM)AND(CASE 'D!'  WHEN 2.33961894E8 THEN '828638582' ELSE x'' END)))AND('CZ~'))) LIMIT -1491272590 OFFSET 463155092; -- 0ms;
SELECT DISTINCT json_array_length(LIKE(vt0.c1, vt0.c1), (~ (vt0.c1))), COUNT(CASE WHEN vt0.c2 THEN vt0.c0 END), vt0.c0 FROM vt0 WHERE (((('_t''g7q', NULL, '917310856')) NOT BETWEEN ((((NULL) BETWEEN ('1004850509') AND (x'b7d5')), ((NULL)==(1887482076)), (('}禍qR-Wi6') BETWEEN ('') AND (NULL)))) AND (((x'56cc' IN ()), (('q]t') IS FALSE), CAST(0.4379179296083411 AS REAL)))));SELECT DISTINCT AVG((((vt0.c1))<((vt0.c2)))) OVER () FROM vt0 WHERE (((NULL COLLATE RTRIM) NOT NULL)); -- 0ms;
SELECT DENSE_RANK() OVER (), TOTAL(CAST(vt0.c1 AS BLOB)), ((TOTAL(vt0.c2))==(((vt0.c2)<=(vt0.c2)))) FROM vt0; -- 0ms;
SELECT CASE WHEN ((vt0.c1)>>(vt0.c2)) THEN CASE WHEN '1129266277' THEN vt0.c2 ELSE vt0.c0 END WHEN ((vt0.c1) ISNULL) THEN ((vt0.c1) NOT NULL) WHEN ((((vt0.c0)AND(0.19434389520758388)))OR(vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) END, (((((vt0.c1)+(vt0.c1)), ((((vt0.c1)OR('sd172{(p')))AND(vt0.c1)), JULIANDAY(vt0.c1, x'', vt0.c1, vt0.c2, vt0.c2)))==(((vt0.c1 IN ()), (('551245001') BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)-(vt0.c0))))), ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))AND((vt0.c2 IN ()))) FROM vt0 WHERE ((((1.5037358E9 IN ())) NOT BETWEEN ((('-756413610')*(NULL))) AND (LIKE(0.8651332932056666, '')))); -- 0ms;
SELECT ALL ((((vt0.c2)LIKE(vt0.c2)))<<(((vt0.c2)=(vt0.c1)))) FROM vt0 LIMIT 594782585; -- 0ms;
SELECT (((vt0.c1)/(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c1) IS TRUE))AND((((vt0.c2, vt0.c1, vt0.c0, vt0.c2, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c1, vt0.c2, vt0.c1))))))AND(SQLITE_SOURCE_ID())) FROM vt0 WHERE (((('-1000092783')) BETWEEN ((((0.9353360057718825) NOT BETWEEN ('1637159276') AND (NULL)))) AND ((-907364365)))) LIMIT 952620184; -- 0ms;
SELECT ALL vt0.c1 COLLATE BINARY FROM vt0 WHERE (NULLIF(DISTINCT '', ((NULL) BETWEEN ('-819511403') AND ('1200856108')))); -- 0ms;
SELECT COUNT(*) FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((((NULL) NOT NULL))) AND ((((('594782585'))==((0.7294133832017127))))))); -- 0ms;
SELECT DISTINCT COUNT(*), (((((vt0.c1)OR(vt0.c2)), (NOT (vt0.c2)), vt0.c0 COLLATE RTRIM))>((vt0.c0 COLLATE BINARY, NULL, (NOT (vt0.c1))))), ((SUM(0.6239674136333629)) IS FALSE) FROM vt0 WHERE (CASE (('1503735800') ISNULL)  WHEN LIKELIHOOD('893049542', 0.20580778969899638) THEN TYPEOF('cs') ELSE CASE ''  WHEN x'' THEN '-358477392' ELSE -0.0 END END); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( PARTITION BY vt0.c1, ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))OR(vt0.c2 COLLATE BINARY)))AND(UPPER(vt0.c1))))AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND(((vt0.c2) IS TRUE)))), (+ ('-132872775')), (((vt0.c1)) BETWEEN ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))) AND ((((((vt0.c1)AND(vt0.c0)))AND('1J'))))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*), (((((x''))<=((vt0.c2))))/(((vt0.c0) NOTNULL))), vt0.c2 FROM vt0; -- 0ms;
SELECT DISTINCT 0.8212879593952561, COUNT(*), ((GROUP_CONCAT(vt0.c2)) NOTNULL), ((((vt0.c0)OR(vt0.c2)))AND(vt0.c2)) COLLATE NOCASE, ((((0.8580811151813298)OR(vt0.c0)))||(json_array(vt0.c1, vt0.c2))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((0.5289345535235078 COLLATE RTRIM IN ())); -- 0ms;
SELECT json_array_length(((vt0.c0)*(vt0.c0))), (((vt0.c0) ISNULL) IN ()), SUM(((8.28638582E8) ISNULL)) FROM vt0; -- 1ms;
SELECT ALL CAST(vt0.c0 COLLATE BINARY AS BLOB) FROM vt0 WHERE (((CHAR(0.3976133962338805))AND(((1169761837)>(0.24650506196498467))))); -- 0ms;
SELECT ALL MAX(CAST(vt0.c0 AS NUMERIC)) FROM vt0 GROUP BY (((CAST('13061481' AS REAL)))<>((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0))))) ORDER BY (NOT (''))  NULLS LAST, (((((vt0.c0) IS FALSE)))!=((((vt0.c1)IS NOT(vt0.c1))))) DESC; -- 0ms;
SELECT ALL TRIM(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c1)&(vt0.c2)) COLLATE RTRIM FROM vt0 WHERE (LAST_INSERT_ROWID()) GROUP BY ((vt0.c1)|(vt0.c0)) COLLATE NOCASE HAVING ((((vt0.c2)GLOB(vt0.c2)))!=(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) LIMIT 1707163362; -- 0ms;
SELECT ALL ((SUM(vt0.c1))<<(CASE vt0.c2  WHEN x'' THEN vt0.c1 WHEN x'90bb' THEN x'' WHEN '1707163362' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN '633499967' ELSE vt0.c0 END)) FROM vt0 ORDER BY (((- (vt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END) AND (((vt0.c0)OR(vt0.c0)))) DESC, (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c2))))=((CASE WHEN vt0.c1 THEN vt0.c1 END)))  NULLS LAST, (((((1439988620, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, NULL, vt0.c2)) AND ((vt0.c2, vt0.c1, vt0.c2))))AND((NOT (vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((vt0.c0 IN ()))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))))AND(vt0.c0)) FROM vt0 WHERE ((((((('B40')OR(0X636a8e74)))AND(NULL))) NOT BETWEEN ('-1647738177') AND (((NULL) BETWEEN (0.611776276042032) AND (NULL))))) ORDER BY CASE ((vt0.c2)IS NOT(vt0.c1))  WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(x'' AS NUMERIC) ELSE ((vt0.c2)/(vt0.c1)) END ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (vt0.c2 COLLATE BINARY IN (((vt0.c2) BETWEEN (x'8cf15563') AND (x'a48f3b1e')))) FROM vt0 WHERE (CAST(((x'') ISNULL) AS NUMERIC)) GROUP BY ((((UPPER(vt0.c1))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)))AND(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING ((((((((vt0.c0)AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(((vt0.c1) IS TRUE))))AND((vt0.c1 IN ()))))OR((- (vt0.c2)))); -- 0ms;
