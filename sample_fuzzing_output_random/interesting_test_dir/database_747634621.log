-- Time: 2024/06/07 17:21:50
-- Database: database21
-- Database version: 3.40.0
-- seed value: 747634621
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.8863798038934445) WHERE ((((((rt0.c2)==(rt0.c2)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c2 COLLATE BINARY)); -- 1ms;
INSERT OR ABORT INTO rt0(c0) VALUES (0Xfffffffff74ae122); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (0Xfffffffff74ae122); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0.5279855253201051); -- 1ms;
REINDEX; -- 0ms;
DELETE FROM rt0; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES ('-146087646', 'kJ\pP/i'), (0.7020411472114466, x''), (NULL, x''), ('-146087646', x''), ('~|\rdtQ', 0.7020411472114466); -- 0ms;
ANALYZE; -- 3ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE main; -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.4912603505109595, -146087646, 0.5710747366832013), (x'15bd', 0X65ee39af, 0.24356751754450057), ('~|\rdtQ', '', NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('\r%'); -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES ('-146087646', 0.7020411472114466); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.5702058570526737, '1710111151'); -- 0ms;
UPDATE rt0 SET c0=NULL, c0=0.24356751754450057 WHERE ((((((rt0.c1) NOT NULL))AND((NOT (rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0xffffffff90731e85), (''), (x'6e5e8a6a'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (x'', x'a0ed', x'6f74'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0xffffffff9a30af0f, x'e9a7'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20399'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53696'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1198080146); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1198519030); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 65524603); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, 'o%Ꮓ\ru>PdX'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x''); -- 0ms;
UPDATE rt0 SET (c2)=(0.8863798038934445) WHERE (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END IN ()); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2) VALUES (x'b108', ''); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-421491118' WHERE (('/X')GLOB(((rt0.c2)>=(rt0.c2)))); -- 0ms;
COMMIT; -- 0ms;
UPDATE rt0 SET c2=0.3886555843556252; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (-146087646), ('-1708085489'), (0xffffffff88fe0f29); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=100270712 unordered'); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=x'' WHERE (NULLIF(rt0.c0, rt0.c2) IN ()); -- 0ms;
UPDATE OR ABORT rt0 SET c2=NULL; -- 0ms;
UPDATE OR ABORT rt0 SET c0='-1948039496'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c1)=(NULL, 0.2694124521735791) WHERE ((CAST(rt0.c0 AS NUMERIC))<(((rt0.c0) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (x'5bea6655', 'vS+3ux+', 'vS+3ux+'), (NULL, 0.2760108383549924, -1.708085489E9), (0.8346215247579389, NULL, '1863214960'); -- 0ms;
REINDEX NOCASE; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL WHERE 'ki/hG' COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL) WHERE ((rt0.c2) NOTNULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.3886555843556252 WHERE 0.3886555843556252 COLLATE RTRIM; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES (1.710111151E9, ((((0.2941444957221746)<>('1863214960')))IS(CAST(NULL AS TEXT)))); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, NULL, '-474036163'); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0, c1) VALUES (NULL, NULL, 'ᦣo5Bf'); -- 0ms;
PRAGMA main.default_cache_size = -573119910; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL TOTAL(((rt0.c2) NOTNULL)) FILTER(WHERE 1.710111151E9) OVER (), COUNT((((rt0.c0))==((rt0.c2)))) OVER (), ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) FROM rt0; -- 0ms;
SELECT ((CAST(rt0.c1 AS REAL))>(x'' COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID(), CAST((rt0.c0 IN ()) AS NUMERIC), CASE WHEN (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN (('')+(rt0.c2)) ELSE MIN(rt0.c1) END FROM rt0 WHERE (CASE WHEN CAST(1707168491 AS BLOB) THEN CAST(x'' AS TEXT) WHEN ((x'e1b2') IS FALSE) THEN (('224423837') BETWEEN ('265094868') AND (NULL)) WHEN (('1385513121')>=(NULL)) THEN (x'' IN (0.5683159673588363)) ELSE ((NULL) BETWEEN (0.225213456102359) AND ('cyeyZC,rp')) END); -- 0ms;
SELECT ((CAST(rt0.c2 AS REAL))*(((rt0.c2)AND(rt0.c0)))) FROM rt0 WHERE (((('	K#Cjmr{')) NOT BETWEEN ((LIKELIHOOD(0.21015855439862874, 0.823842237879932))) AND (((~ (NULL)))))) LIMIT -573119910; -- 0ms;
SELECT DISTINCT (+ (x'35e9')), IFNULL(((rt0.c1) NOT NULL), ((rt0.c0)>>(rt0.c0))), CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN COUNT(*) WHEN ((rt0.c2) NOT NULL) THEN rt0.c2 COLLATE BINARY WHEN 1418087492 THEN CAST(rt0.c1 AS TEXT) END FROM rt0 LIMIT -573119910 OFFSET 100270712; -- 0ms;
SELECT DISTINCT (NOT (CAST(rt0.c0 AS INTEGER))) FROM rt0 WHERE ((- (((((0.225213456102359)AND(x'fad1')))OR(''))))); -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))  WHEN rt0.c1 COLLATE RTRIM THEN x'' WHEN (- (rt0.c0)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)) WHEN ((rt0.c1)&(rt0.c0)) THEN ((x'269c') NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE (rt0.c1 IN ()) END FROM rt0; -- 0ms;
SELECT (((((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((rt0.c0) ISNULL))))OR(rt0.c2)))AND(((rt0.c1)||(rt0.c2)))))OR((NOT (rt0.c2)))))OR(COUNT(*))))AND(((rt0.c1)<<(rt0.c0)))), rt0.c2, ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (rt0.c1) AND (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))) FROM rt0 WHERE ((((-1780841177)) NOT BETWEEN (((NOT (x'7d58')))) AND ((CASE 'o%Ꮓ\ru>PdX'  WHEN '-421491118' THEN 0.5191271212167319 WHEN 0.4622761791919273 THEN '' WHEN '' THEN 0Xffffffffbc204e6c WHEN NULL THEN '/X' WHEN 0Xfffffffff74ae122 THEN x'5b07' ELSE 0.8245816731221418 END)))); -- 1ms;
SELECT (((~ (rt0.c0))) IS TRUE) FROM rt0 WHERE ((('') BETWEEN (NULL) AND (-573119910)) COLLATE NOCASE); -- 0ms;
SELECT ALL (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c0)*(rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((NULL))), '0.5710747366832013')) AND ((',8', (rt0.c1 IN ()), ((rt0.c2)*(rt0.c0))))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2 COLLATE BINARY))==((rt0.c0))), 'TRUE', ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)>=(NULL COLLATE RTRIM)) FROM rt0 WHERE ((((((('')AND(NULL)))OR(0.2850515977584104)))|(((((0.4352221991575107)AND(x'')))OR(1318313445))))); -- 1ms;
SELECT DISTINCT CAST(((rt0.c1)LIKE(0xffffffffad7b8be1)) AS TEXT), GROUP_CONCAT(0.14424444613666787) OVER ( PARTITION BY (((((rt0.c0)<<(rt0.c2))))=((CASE WHEN rt0.c2 THEN rt0.c1 END))), ((((rt0.c2)!=(x''))) BETWEEN (rt0.c0) AND ((rt0.c1 IN ())))), (((rt0.c0 IN ())) NOT BETWEEN (MIN(rt0.c1)) AND ((NOT (rt0.c0)))) FROM rt0 WHERE (((((('-474036163')AND(NULL))))<=((((((((((0.06515878181279322)AND(NULL)))AND(x'917b')))OR('265094868')))AND(x'3783')))))); -- 0ms;
SELECT SUM(COUNT(*)) FROM rt0;SELECT TOTAL((('%s') NOT NULL)) OVER (), ((((rt0.c0) NOT NULL))GLOB((- (rt0.c0)))), (((CAST(rt0.c2 AS TEXT)))>((NULL COLLATE BINARY))) FROM rt0 WHERE ((((x'24bf' IN ()))>((((-63879626)) NOT BETWEEN (('1707168491')) AND ((1.707168491E9)))))); -- 1ms;
SELECT DISTINCT (((((((((- (rt0.c0)))AND(TOTAL(rt0.c1))))OR((~ (rt0.c1)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0x4faf3dc2 ELSE rt0.c0 END)))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))), ((NULL)>(rt0.c1 COLLATE BINARY)), COUNT(TRIM(DISTINCT rt0.c0, rt0.c1)) OVER () FROM rt0 LIMIT 1722098480 OFFSET 453371553; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c0)))-(rt0.c2)) FROM rt0 WHERE (((((DATE(x'', x'118c', x'8a89', '2080674757', x''))OR('' COLLATE BINARY)))OR(((x'') BETWEEN (0.22328428449808901) AND (0.21015855439862874))))) ORDER BY (((rt0.c2 IN ()))*(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST; -- 0ms;
SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE), COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), x'e5aa' FROM rt0 WHERE (-1138733460); -- 1ms;
SELECT DISTINCT ',h7~\n24' FROM rt0 ORDER BY (+ (HEX(0.8923403910920006))) ASC  NULLS LAST; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), FIRST_VALUE(((NULL) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 END) AND ('1960337911'))) OVER ( ROWS CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END WHEN 'z4' THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)) WHEN (((0.7992792366058815, rt0.c1, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0, rt0.c0, 0.7020411472114466))) THEN ((rt0.c0)-(rt0.c0)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) END PRECEDING), AVG('') OVER () FROM rt0 WHERE (IFNULL(CAST(-1.871503739E9 AS BLOB), (('-1138733460')IS(NULL))));SELECT ALL CUME_DIST() OVER () FROM rt0 WHERE (json_array_length((('')*('')), ((0.8131606787959454)+(1960337911))));SELECT ALL (((rt0.c0)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND (((rt0.c2 IN ())))), ((((('0.5702058570526737' IN ()))OR((('on') BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c2) ISNULL))), ((LOWER(rt0.c1))>((+ (rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL))<<((NULL IN ()))) FROM rt0 WHERE ((- (((((x'')AND('')))AND('-573119910'))))); -- 0ms;
SELECT (((~ ('0.21015855439862874'))) IS FALSE) FROM rt0 WHERE (((((((((NULL)AND(x'')))AND('Ci<랝.t縌')))AND('-1780841177')))AND(x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT AVG(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))) FROM rt0; -- 1ms;
SELECT DISTINCT TRIM(DISTINCT rt0.c0) FROM rt0 WHERE (((((-5.7311991E8) ISNULL)) NOT BETWEEN (LIKELIHOOD('-1457866851', 0.7369226306238205)) AND ((('0.2850515977584104')/(1418087492))))); -- 0ms;
SELECT DISTINCT 0X44a43ea FROM rt0; -- 0ms;
SELECT DISTINCT -4.21491118E8 FROM rt0; -- 0ms;
SELECT ((MIN(0.537793581330535))AND(((rt0.c0)AND(rt0.c1)))) FROM rt0 WHERE (((0.3412919724022382 IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))+((rt0.c1 IN (rt0.c2)))), ((x'')%(highlight(rt0.c1, NULL, rt0.c1, rt0.c0))), SUM(NULL) FROM rt0 WHERE (((NULL)LIKE(0.642115788907454))) LIMIT 1848476512;SELECT DISTINCT LEAD((CAST(rt0.c1 AS TEXT) IN ()), (((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) IN ()), ((((((rt0.c1)IS NOT(NULL)))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR(((rt0.c0)>(rt0.c0))))) OVER () FROM rt0 EXCEPT SELECT ALL CAST(LOWER(rt0.c0) AS BLOB) FROM rt0 WHERE ((((('537560218') NOT NULL))<((('') BETWEEN ('1707168491') AND ('/৺'))))); -- 0ms;
SELECT DISTINCT CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c2 AS BLOB) END, '1409360815', CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS INTEGER) FROM rt0; -- 1ms;
SELECT DISTINCT CAST(((rt0.c0)||(rt0.c0)) AS REAL) FROM rt0 WHERE (CAST(((x'')/(0.2977066229584431)) AS BLOB)); -- 1ms;
SELECT DISTINCT CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC) FROM rt0 WHERE ((((NULL)) NOT BETWEEN (((('-2021877850') IS TRUE))) AND ((CASE 672352704  WHEN NULL THEN NULL END)))); -- 0ms;
SELECT ALL json_array_length((+ (rt0.c2)), ((rt0.c1)OR(rt0.c0))), CAST((rt0.c1 IN ()) AS TEXT), TRIM((~ (rt0.c1))) FROM rt0 WHERE ((CAST(x'7ab4' AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT ((COUNT(*)) NOT BETWEEN (TOTAL(rt0.c1)) AND (NULL)), (rt0.c0 IN (rt0.c2)) COLLATE BINARY, ((((rt0.c2)+(rt0.c0))) IS TRUE), COUNT((((rt0.c2, '9)', NULL)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c2)))), ((GROUP_CONCAT('f*'))%(((rt0.c1)/(rt0.c2)))), HEX(DISTINCT rt0.c2), (TRIM(DISTINCT rt0.c0) IN ()) FROM rt0 NOT INDEXED WHERE ((((((('U/')-(0.5578135301394139)))OR(((1926936689) NOT NULL))))OR(0.5040449196877046 COLLATE RTRIM))); -- 0ms;
SELECT ALL highlight(((NULL)>(rt0.c0)), rt0.c1 COLLATE BINARY, ((rt0.c2)>=(rt0.c2)), rt0.c1) FROM rt0 WHERE (((- (0.0384027179232862)) IN ((NOT (0.6369671997906124))))) GROUP BY (+ (rt0.c1 COLLATE NOCASE)); -- 0ms;
SELECT ALL ((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (rt0.c1 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT ((((((((rt0.c1)OR(((rt0.c0)>>(rt0.c0)))))AND(((rt0.c2)IS(rt0.c0)))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, 0.08043544260485158, rt0.c0))))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))) FROM rt0 WHERE (CAST((x'' IN ('gK')) AS TEXT)); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c2)))AND(CASE WHEN rt0.c0 THEN NULL ELSE rt0.c1 END)) FROM rt0 WHERE (((((x'') NOT BETWEEN (NULL) AND (0.4550518018000391))) BETWEEN ((('627204654') BETWEEN (x'') AND (x''))) AND (((0.3686493494297829) NOT BETWEEN ('}0G') AND (x'9242'))))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) FILTER(WHERE ((rt0.c2)==(rt0.c2)) COLLATE NOCASE) OVER () FROM rt0 GROUP BY ((((rt0.c1) ISNULL))<(LIKELY(rt0.c1))) HAVING ((rt0.c0) NOT NULL); -- 0ms;
SELECT DISTINCT (((('X{mM	￿5' COLLATE RTRIM)OR((rt0.c2 IN ()))))AND(CAST(rt0.c1 AS INTEGER))) FROM rt0; -- 0ms;
SELECT ((rt0.c0)-(NULL)) FROM rt0 WHERE (CASE (('') IS FALSE)  WHEN (+ ('-947648006')) THEN json_insert(NULL, NULL, '0.4622761791919273') ELSE CAST(NULL AS BLOB) END); -- 0ms;
SELECT rt0.c1 FROM rt0 WHERE (CAST(0.13086386458392674 AS TEXT) COLLATE RTRIM); -- 0ms;
SELECT LIKELY(DISTINCT (- ('1332008644'))) FROM rt0 WHERE (x'') LIMIT -217248598 OFFSET -1384412191; -- 0ms;
SELECT ALL ((SUM(rt0.c0))-(TRIM(DISTINCT rt0.c2))) FROM rt0 WHERE (((((('1409360815', x'', '-130105895'))>((NULL, '0.08043544260485158', 0.8897660522996229)))) NOT NULL)); -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE ((rt0.c2)<=(rt0.c0))  WHEN 0xffffffffff3d657a THEN rt0.c0 END, ((((((rt0.c2)IS(rt0.c0)))OR(((rt0.c1) BETWEEN (NULL) AND (rt0.c2)))))AND(((rt0.c0)>=(rt0.c0))))) OVER () FROM rt0 WHERE ('s*'); -- 0ms;
SELECT ALL TOTAL((+ (rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT COALESCE((((rt0.c1, rt0.c2, rt0.c1))<>(('&Ẫ', rt0.c1, rt0.c0))), x''), ((((rt0.c1) NOT NULL))=(((rt0.c2)|(rt0.c1)))), rt0.c0 FROM rt0 ORDER BY ((0Xffffffff8f1d7a15) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c2)>(rt0.c1))))  NULLS FIRST, CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS INTEGER) DESC, ((CASE WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (NULL) AND (CAST(rt0.c0 AS BLOB))); -- 1ms;
SELECT DISTINCT ((CAST(rt0.c1 AS TEXT)) NOT NULL), COALESCE(0.9214012600740249, rt0.c1, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (NULL IN (rt0.c2, rt0.c2))), MAX(((rt0.c1) ISNULL)) FROM rt0 WHERE (((((((0.829121690174199)OR(0.4828633979012745)))OR(0.5066242275063345))) ISNULL)); -- 0ms;
SELECT DISTINCT SUM(((x'980d') ISNULL)) OVER () FROM rt0; -- 0ms;
SELECT (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END IN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT rt0.c0, 0.9287300171874208) COLLATE NOCASE, CAST(SUM(rt0.c0) AS NUMERIC), LIKELIHOOD(DISTINCT ((rt0.c0) IS FALSE), 0.5515531164020608) FROM rt0 WHERE ((~ ((((('')AND(1.848476512E9)))AND(0Xffffffff8f1d7a15))))); -- 1ms;
SELECT DISTINCT (((NOT (rt0.c1)))IS NOT(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) FROM rt0 GROUP BY SQLITE_COMPILEOPTION_GET(rt0.c1) HAVING ((rt0.c0 COLLATE BINARY) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c1 COLLATE BINARY)) LIMIT -1948039496 OFFSET 2087498125; -- 0ms;
SELECT DISTINCT (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END IN ()), CASE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN rt0.c1 THEN (((rt0.c2))<>(('-1749401613'))) WHEN ((rt0.c0)GLOB(rt0.c2)) THEN ABS(DISTINCT rt0.c0) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE 0x1f0395a9 END THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN MIN(rt0.c2) THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE '' END WHEN ((x'd4a9')|(rt0.c1)) THEN ((rt0.c2)OR(rt0.c2)) END, TOTAL(((((rt0.c1)AND(x'')))OR(rt0.c0))) FROM rt0; -- 0ms;
SELECT ((LIKE(rt0.c2, rt0.c0, '橌'))*(((rt0.c0)<<(rt0.c2)))) FROM rt0 WHERE ((((x'e54a')) BETWEEN ((((x'') NOTNULL))) AND ((x'' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END AS BLOB) FROM rt0 WHERE (((CAST('FqLso	' AS REAL))/((- (NULL))))); -- 0ms;
SELECT (NOT ((((rt0.c0, '3P', rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))))), ((((rt0.c0) IS FALSE))<<(AVG(rt0.c1))), (((CAST(rt0.c1 AS BLOB), AVG(rt0.c1), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>=((CAST(rt0.c2 AS INTEGER), rt0.c1 COLLATE BINARY, ((rt0.c0) NOT NULL)))) FROM rt0 GROUP BY CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN (rt0.c1 IN (rt0.c1)) END HAVING ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY COLLATE NOCASE; -- 0ms;
SELECT LEAD(((0.3530068966633474)>=((((rt0.c0))!=((rt0.c0))))), (((NOT (rt0.c1))) NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND (CAST(rt0.c1 AS INTEGER))), CASE ((rt0.c2)-(rt0.c0))  WHEN (rt0.c0 IN ()) THEN rt0.c2 WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CAST(rt0.c0 AS REAL) WHEN (((rt0.c0))<>((rt0.c1))) THEN (((rt0.c1))<=((rt0.c1))) ELSE (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, NULL, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))) END) OVER ( ROWS  CURRENT ROW) FROM rt0 WHERE (((((x'') NOT BETWEEN ('q⎯') AND ('-217248598')))IS NOT(LTRIM(x'', 0x0)))) GROUP BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) ISNULL) HAVING CASE rt0.c0 COLLATE RTRIM  WHEN x'' THEN rt0.c1 END; -- 0ms;
SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) ISNULL) FROM rt0 WHERE (((CAST('' AS INTEGER))OR(((x'') NOTNULL)))); -- 0ms;
SELECT ALL ((rt0.c2)IS NOT(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT (('') BETWEEN (rt0.c2) AND (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS TEXT) FROM rt0 GROUP BY (((x'af32')) NOT BETWEEN (((((rt0.c1))>=((x''))))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))), IFNULL(DISTINCT (~ (rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c2 END), SQLITE_SOURCE_ID() LIMIT -146087646 OFFSET -1996615895; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( GROUPS BETWEEN COALESCE(((((((((x'a7c9')AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END) PRECEDING AND  CURRENT ROW EXCLUDE GROUP), ((((rt0.c0) BETWEEN (rt0.c1) AND (NULL))) ISNULL), ((rt0.c2)!=((x'21a5' IN ()))) FROM rt0;SELECT DISTINCT (- ((NOT (rt0.c0)))), ((CASE WHEN rt0.c2 THEN rt0.c2 END)<((((rt0.c2))!=((rt0.c2))))), CAST(rt0.c1 AS REAL) COLLATE BINARY FROM rt0 NOT INDEXED WHERE ((((('-1649648781')OR(x''))) BETWEEN ((((('%s')OR(NULL)))AND(-1.948039496E9))) AND (NULL))); -- 0ms;
SELECT DISTINCT ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(x'0977')))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM rt0; -- 0ms;
SELECT MIN(((rt0.c2)<=(rt0.c0))), DENSE_RANK() OVER (), (~ (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) FROM rt0 ORDER BY (~ (CASE 0.12421898004423826  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)); -- 0ms;
SELECT DISTINCT ((x'')+(MIN(rt0.c2))) FROM rt0 GROUP BY ((CASE '^et0QIU'  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ((((rt0.c0))<=(('%jX\nb')))) AND (rt0.c0)), ((RTRIM(rt0.c1))%(rt0.c2)), ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) LIMIT 213920164; -- 0ms;
SELECT (NOT (rt0.c1)) COLLATE NOCASE, (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c0 COLLATE BINARY, rt0.c0))<=((rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE RTRIM, ((rt0.c2) IS FALSE)))), ((CASE WHEN rt0.c1 THEN rt0.c0 END)+((((rt0.c1, rt0.c2, 696825544))=((rt0.c0, rt0.c1, rt0.c1))))) FROM rt0; -- 0ms;
SELECT ALL (((~ (rt0.c1)))<=(((rt0.c2)<<(0.51569863500153)))) FROM rt0 WHERE (INSTR(LIKELIHOOD(DISTINCT x'ba9b', 0.41177022232657445), x'')); -- 0ms;
SELECT DISTINCT (rt0.c1 IN ()) COLLATE RTRIM FROM rt0; -- 1ms;
SELECT GROUP_CONCAT((NOT (rt0.c2))), (NOT (rt0.c0)), (((((rt0.c0, rt0.c2, rt0.c0))>=((rt0.c0, rt0.c0, rt0.c2)))) BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS REAL))) FROM rt0; -- 0ms;
SELECT DISTINCT ((x'd3ef')>=(COUNT(rt0.c2))) FROM rt0 WHERE (CASE CASE NULL  WHEN 0.01205087757923573 THEN '' WHEN '-1384412191' THEN x'' WHEN '1140522886' THEN 0X4f64d6c4 ELSE 'uv~yrn+4|' END  WHEN NULL THEN ((0.651063895399488) IS FALSE) END); -- 0ms;
SELECT DISTINCT (((+ (rt0.c2)))AND(TRIM(rt0.c1))) FROM rt0; -- 0ms;
SELECT CAST(((rt0.c1)*(rt0.c1)) AS TEXT) FROM rt0; -- 1ms;
SELECT ((((rt0.c1)||(rt0.c0))) ISNULL) FROM rt0 WHERE (((((json(x'34b4'))OR(CASE ''  WHEN NULL THEN NULL WHEN '-947648006' THEN NULL WHEN NULL THEN '-1555992515' ELSE NULL END)))AND(((0.3755615231688437) ISNULL)))) GROUP BY UPPER(rt0.c2 COLLATE BINARY) HAVING ((rt0.c0) ISNULL) COLLATE BINARY;SELECT ROW_NUMBER() OVER (), ((CAST(rt0.c2 AS BLOB))LIKE(CASE WHEN rt0.c1 THEN rt0.c0 END)), ((((((((((((NULL)AND(rt0.c1)))AND(rt0.c1)))OR(((rt0.c0)AND(rt0.c2)))))AND((rt0.c1 IN ()))))OR(CAST(rt0.c0 AS TEXT))))AND(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(rt0.c0 COLLATE NOCASE), CASE ((rt0.c0)>(x'7753'))  WHEN ABS(DISTINCT rt0.c1) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c1)>(rt0.c1)) WHEN HEX(DISTINCT rt0.c0) THEN 0X66a52330 ELSE CAST(rt0.c0 AS NUMERIC) END, ((rt0.c1) IS FALSE) COLLATE NOCASE FROM rt0 WHERE (((NOT (']>EAy')) IN (CASE WHEN '224423837' THEN 0.4818565555920561 WHEN '' THEN 'eI-o' WHEN -2122995463 THEN '-746346628' ELSE -1.996615895E9 END, CHAR('2080674757')))); -- 1ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (4.53371553E8) AND (rt0.c1)))<(rt0.c2 COLLATE BINARY)) FROM rt0 WHERE (LIKE(((0X54864c44) BETWEEN (NULL) AND (NULL)), ((((((((((((x'')AND('VQ-⌰0C(cI')))OR(-573119910)))AND('')))OR(NULL)))AND(NULL)))OR(1367309836)))); -- 0ms;
SELECT DISTINCT (('' COLLATE NOCASE) ISNULL) FROM rt0; -- 0ms;
SELECT ((LIKE(rt0.c0, rt0.c1, 'o')) NOTNULL) FROM rt0; -- 0ms;
SELECT DISTINCT ('ONDR-)H' IN (rt0.c0, rt0.c0)) COLLATE NOCASE FROM rt0 WHERE ((((('34519602')GLOB(0.9981384845433717))) NOT BETWEEN (0.32122123981812534 COLLATE BINARY) AND (LOWER('228077859')))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS INTEGER)) NOT NULL) FROM rt0 WHERE (((UPPER(DISTINCT '-2016295467')) NOT BETWEEN ((NOT (0.9155803694541331))) AND ('1926936689' COLLATE RTRIM))); -- 0ms;
SELECT (((rt0.c0) IS TRUE) IN ()), rt0.c2, SUM(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) FROM rt0 WHERE (json_insert((+ (-204330852)), (NULL IN ()), ((x'') NOT BETWEEN (NULL) AND (NULL))));SELECT DISTINCT COUNT(rt0.c0), LAG(rt0.c0, ((TRIM(DISTINCT rt0.c0, NULL))*((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))), CAST(((rt0.c1)GLOB(rt0.c1)) AS REAL)) OVER (), ((rt0.c2)*(rt0.c2)) COLLATE BINARY FROM rt0 WHERE (CAST(QUOTE(-1996615895) AS NUMERIC)); -- 0ms;
SELECT CASE WHEN (((((((('')AND(NULL)))OR(rt0.c2)))AND(rt0.c1)))OR('-2122995463')) THEN ((rt0.c2)AND(rt0.c1)) ELSE rt0.c1 END FROM rt0 WHERE (((LIKELY('zt}')) BETWEEN (CAST(x'' AS REAL)) AND (LOWER(x'')))); -- 0ms;
SELECT ALL (NOT (CAST(rt0.c0 AS TEXT))) FROM rt0 WHERE (((((((NULL) NOTNULL))AND((((-344795665, 1367309836, x''))<((0.10833975396829054, 0.4818565555920561, NULL))))))OR(CASE NULL  WHEN 0.8111611249919766 THEN '' END))); -- 0ms;
SELECT DISTINCT ((rt0.c0)|(rt0.c0)) COLLATE BINARY, rt0.c2, ((((rt0.c1)<=('\n~GQ_k,}9'))) NOT BETWEEN (0.005034678910038393) AND ((~ (rt0.c0)))), (NOT ((((rt0.c0))>=((rt0.c2))))), ((rt0.c0)-(CAST(rt0.c1 AS NUMERIC))) FROM rt0 WHERE ((CASE WHEN x'' THEN '' END IN ((- (NULL))))) GROUP BY ((((((rt0.c2)>>(x'')))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c2) IS FALSE))); -- 0ms;
SELECT DISTINCT 0.7642499835939702 COLLATE RTRIM FROM rt0 GROUP BY CASE WHEN UNLIKELY(DISTINCT rt0.c0) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN '224423837' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE NULL END ELSE rt0.c0 END, (~ (((rt0.c2) IS FALSE))), (((((x'')IS NOT(rt0.c2))))<((((x'') BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((CASE WHEN '9V\n''' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))>((rt0.c0 COLLATE BINARY)))  NULLS FIRST, (((((rt0.c2))<=((rt0.c2))))IS(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) DESC  NULLS LAST, (((NOT (rt0.c1)))<=(((rt0.c2)&(rt0.c1)))); -- 0ms;
SELECT DISTINCT ((((0.26979292201417027)>>(rt0.c1)))<(((rt0.c0)+(rt0.c1)))) FROM rt0 WHERE ((- ((~ (x''))))) GROUP BY CASE WHEN '909583592' THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY COLLATE NOCASE HAVING ((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((+ (rt0.c2)))); -- 0ms;
SELECT DISTINCT (((+ (rt0.c2))) NOT BETWEEN (((rt0.c2)AND(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) FROM rt0 WHERE (((('')) NOT BETWEEN ((((-496581044)OR('')))) AND (((((x'a1c096d5'))==((''))))))); -- 0ms;
SELECT ALL (- (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) FROM rt0 LIMIT -1996615895; -- 0ms;
SELECT AVG(NULL) FROM rt0 NOT INDEXED WHERE (((((PRINTF(0.08482654756156527, 'U2n', 0Xffffffffa1e4b626, '-1144935025', NULL))OR(((0.09115848080613365) IS TRUE))))OR(((0.6662913295352477)<<(-4.96581044E8))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)GLOB(rt0.c2)))==(CAST(rt0.c1 AS TEXT))), x'', rt0.c1, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)) COLLATE RTRIM, ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END) NOTNULL), (((rt0.c1 IN (rt0.c1))) NOT BETWEEN (MIN(rt0.c1)) AND ((rt0.c2 IN ()))), ((rt0.c1)IS(rt0.c2)) COLLATE RTRIM FROM rt0 LIMIT 477190509; -- 0ms;
SELECT DISTINCT MIN(((rt0.c0)||(rt0.c2))), ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN NULL ELSE rt0.c2 END)), '' FROM rt0 WHERE ((((- ('34519602'))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((CAST(0.10321969684676657 AS REAL)) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c0) NOT NULL))), CAST(((rt0.c1) NOT NULL) AS TEXT), COUNT(NULLIF(rt0.c1, NULL)) OVER ( PARTITION BY ((CASE rt0.c1  WHEN x'' THEN rt0.c0 END) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c1, rt0.c2, NULL))>=((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c2)))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END)), ((((x'')OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c2)||(rt0.c2))))), ((((rt0.c0)<(rt0.c1)))LIKE(rt0.c1)), MIN(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)) COLLATE RTRIM) FROM rt0 LIMIT 519377859 OFFSET -1779082087; -- 0ms;
SELECT DISTINCT ((CAST(-1457866851 AS INTEGER)) BETWEEN (((rt0.c1)>(rt0.c0))) AND (SUBSTR(rt0.c0, rt0.c2))) FROM rt0 ORDER BY (('zt}') IS FALSE) DESC  NULLS LAST, rt0.c2 COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT ALL json_remove((((x'195b')) BETWEEN ((rt0.c1)) AND ((rt0.c2))), MAX(rt0.c1)) FROM rt0;SELECT CASE WHEN ((rt0.c1)<(rt0.c0)) THEN (rt0.c0 IN ()) END FROM rt0 WHERE (((((((x'f4b1')IS NOT(x'65d1')))AND(((-4.74036163E8)+(0.5367534147261268)))))OR((+ (x'6983'))))); -- 0ms;
SELECT SQLITE_COMPILEOPTION_GET(x'') FROM rt0 WHERE ((((NOT (NULL)))LIKE(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT HEX(((rt0.c0) ISNULL)) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOTNULL))-(GROUP_CONCAT('265094868'))), (((((rt0.c2)<=(rt0.c0))))==((rt0.c0))), ((('34519602'))>=(((rt0.c0 IN ())))) FROM rt0 WHERE ((((DATETIME(x'', '-9223372036854775808', 0.17290139541419336)))>((((NULL) BETWEEN ('6[y') AND ('0.09115848080613365')))))); -- 0ms;
SELECT ALL DENSE_RANK() OVER (), rt0.c1, RANK() OVER ( RANGE BETWEEN CAST(CAST(rt0.c2 AS BLOB) AS REAL) FOLLOWING AND  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0 WHERE (((CASE WHEN x'' THEN 'U' WHEN '-573119910' THEN '206085932' WHEN -305842509 THEN 4.53371553E8 END) BETWEEN ((~ (x''))) AND (((0xd983123) IS TRUE))));SELECT DISTINCT (((UPPER(rt0.c2), (~ (rt0.c2)), (- (0.14424444613666787))))<((((rt0.c0) IS FALSE), ((rt0.c0) BETWEEN (rt0.c2) AND (0.24356751754450057)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) FROM rt0 WHERE (x'76c1') GROUP BY x'cc0f'; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE NOCASE) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c1)>('mBy')))) FROM rt0; -- 0ms;
SELECT (((((+ (rt0.c0)))AND(((rt0.c0) NOT NULL))))OR(CAST(rt0.c2 AS NUMERIC))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1) IS FALSE) FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1)>(NULL)))), ((rt0.c0)>=(rt0.c2)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT HEX(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))) FROM rt0 LIMIT -661381968 OFFSET -2021877850; -- 0ms;
SELECT DISTINCT (rt0.c0 IN (json_insert(rt0.c1, rt0.c1, NULL, rt0.c0, rt0.c0))) FROM rt0 WHERE (UNLIKELY(DISTINCT ((0X3d77b522) NOTNULL))) LIMIT 723123310 OFFSET 228077859;SELECT DISTINCT '1707168491' FROM rt0 WHERE (CASE WHEN ((NULL)<<(x'')) THEN ABS(DISTINCT 0.5066897429436421) END); -- 0ms;
SELECT ALL SUM(CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 LIMIT 573721078 OFFSET 1699292783; -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c0))|(((rt0.c2) IS TRUE))) FROM rt0 WHERE (CAST((('-1871503739') NOT NULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN (((((rt0.c1, rt0.c0, rt0.c2))<>((rt0.c2, rt0.c2, rt0.c2))))) AND ((CAST(rt0.c2 AS TEXT)))) FROM rt0 WHERE (((CAST('' AS BLOB))/(CASE WHEN NULL THEN x'' ELSE NULL END))); -- 0ms;
SELECT CAST(NULL AS INTEGER), NULL, CAST(((x'')AND(rt0.c1)) AS INTEGER) FROM rt0 WHERE (((('%S')/(NULL)) IN ())) GROUP BY (((((rt0.c2))!=((rt0.c0))))<<(((NULL) IS FALSE))), (- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))), ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))>(NULL)); -- 0ms;
SELECT ALL ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(((((x'')OR(rt0.c1)))OR(rt0.c1)))) FROM rt0 WHERE (''); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)IS(rt0.c2)))OR(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'' END)), (((('855398728')AND(((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)))))OR(GROUP_CONCAT(0X718d366d))), AVG('399378757') FILTER(WHERE (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(0.07720755851006833)))OR(HEX(DISTINCT rt0.c0)))) OVER () FROM rt0; -- 0ms;
SELECT ((rt0.c1) NOT BETWEEN (((0X5c2b5eaf) NOTNULL)) AND ((rt0.c2 IN ()))), ROW_NUMBER() OVER (), CAST((((rt0.c2, rt0.c0, rt0.c2))<>((rt0.c2, rt0.c1, rt0.c1))) AS BLOB), CAST((NOT (rt0.c0)) AS TEXT), LOWER(((rt0.c1)%(rt0.c2))), SUM(((rt0.c0)LIKE(rt0.c2))), ((x'' COLLATE NOCASE) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) AND (SUM(-563066582))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS TRUE)) BETWEEN (rt0.c2) AND (((rt0.c1) NOTNULL))) FROM rt0 WHERE (((LIKELY(DISTINCT NULL)) IS TRUE)); -- 0ms;
SELECT ALL CAST((('f{yX%u') BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC) FROM rt0 WHERE ((((+ (NULL))) NOT BETWEEN (((((-6.3879626E7)AND(NULL)))AND('1467782888'))) AND ((('-130105895') BETWEEN ('-519743038') AND ('2~ii'))))); -- 1ms;
SELECT DISTINCT COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT MIN(((rt0.c2) ISNULL)) FROM rt0 WHERE (CASE ((x'd6bd') NOT NULL)  WHEN (((-1.30105895E8)) NOT BETWEEN ((NULL)) AND (('-32424843'))) THEN ((((x'3969')OR(x'')))OR('uv~yrn+4|')) WHEN (NULL IN ()) THEN 0.9956115064778548 COLLATE RTRIM WHEN ((x'') NOT BETWEEN (0.5329560582381504) AND (0.7992792366058815)) THEN x'689f' COLLATE NOCASE ELSE 'r딢Y8\\X' COLLATE NOCASE END) GROUP BY CAST((- (rt0.c1)) AS BLOB) HAVING ((((rt0.c1)!=(rt0.c1)))|(SQLITE_VERSION())) LIMIT 250174359 OFFSET 179379681; -- 0ms;
SELECT CASE rt0.c1  WHEN rt0.c1 THEN -833291688 END COLLATE RTRIM, ((NULL) NOT NULL), ((rt0.c2) NOTNULL), x'c390', NULL FROM rt0 WHERE (CAST(CASE WHEN x'' THEN x'5821' WHEN '' THEN x'' WHEN 'G鰔 S\4' THEN '䝕>*OVp3' ELSE 0.3530068966633474 END AS NUMERIC)); -- 0ms;
SELECT ((((rt0.c1)LIKE(rt0.c1)))GLOB(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0 WHERE ((((x'')||(51481148)) IN ())); -- 1ms;
SELECT CASE WHEN ((((-1300708695)AND(rt0.c2)))OR(rt0.c0)) THEN NULL WHEN (+ (rt0.c2)) THEN ((((0.1565159487538491)AND(NULL)))OR(rt0.c0)) WHEN CAST('-1980734305' AS TEXT) THEN TOTAL(rt0.c2) END FROM rt0 NOT INDEXED WHERE (IFNULL(DISTINCT ((('2063997636'))>=(('-856872094'))), 0.9155803694541331)) GROUP BY (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) HAVING CASE WHEN 0.8178293619059482 COLLATE NOCASE THEN CAST(rt0.c0 AS TEXT) WHEN (rt0.c1 IN (rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN (+ ('贿')) THEN CAST(rt0.c0 AS BLOB) END; -- 0ms;
SELECT DISTINCT ((NULL) BETWEEN (((rt0.c2)OR(rt0.c1))) AND (((rt0.c1) IS TRUE))) FROM rt0 LIMIT 399378757; -- 0ms;
SELECT (((UNICODE(rt0.c1)))==((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) FROM rt0 WHERE (((((x'b374')GLOB('')))%((('1426397555')LIKE('-474036163'))))) LIMIT -1255785267 OFFSET -1457866851; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))=(CASE rt0.c2  WHEN '' THEN 0.12421898004423826 ELSE rt0.c1 END)), MAX(LOWER(rt0.c1)), (((((- (rt0.c1)))OR(((rt0.c0)<=(rt0.c2)))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0 LIMIT 840660340 OFFSET 9223372036854775807; -- 1ms;
SELECT ALL ((((((x'b53d')) NOT BETWEEN ((rt0.c0)) AND ((NULL)))))>(((~ (0Xffffffff95f55c99))))), COUNT((rt0.c1 IN ()) COLLATE RTRIM), rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT (CASE '1881188012'  WHEN rt0.c1 THEN rt0.c1 END IN ()), CAST((((1.426397555E9))<((rt0.c1))) AS REAL), NULL FROM rt0 GROUP BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))-((rt0.c2 IN ()))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))+(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0 NOT INDEXED ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (((rt0.c2)&(rt0.c2))) AND ('855398728')); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) NOT BETWEEN ('0.14424444613666787') AND (((rt0.c1)IS NOT(x'')))) FROM rt0; -- 0ms;
SELECT ABS(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) FROM rt0 WHERE ((NOT (x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (x'' IN ()) COLLATE NOCASE COLLATE RTRIM FROM rt0; -- 1ms;
SELECT UPPER(((rt0.c2) ISNULL)) FROM rt0 WHERE (((((1.699292783E9)-(NULL))) IS TRUE)); -- 0ms;
SELECT ALL MIN(CASE rt0.c2  WHEN rt0.c1 THEN 0.9792312053826125 END) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (ABS(rt0.c2))), (((((NOT (rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CASE WHEN rt0.c2 THEN rt0.c0 END)), (((((rt0.c2))>((rt0.c2))))GLOB(CASE WHEN x'4662' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN NULL END)) FROM rt0 WHERE ((((0x1991f95b)>(0.9290803866398323)) IN ())) ORDER BY (((x''))>=((((rt0.c1)||(rt0.c0))))) DESC, TRIM(DISTINCT ((rt0.c2)LIKE(rt0.c1)), CAST(rt0.c2 AS INTEGER)) ASC  NULLS LAST, (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END IN ((rt0.c0 IN (rt0.c1, rt0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS BLOB), ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)|('1409360815')), ((- (rt0.c0)) IN (((rt0.c2)||('213920164')), (((rt0.c0))<=((rt0.c1))))) FROM rt0; -- 0ms;
SELECT (((rt0.c1)&(rt0.c1)) IN ()) FROM rt0 WHERE ((((NULL)) BETWEEN (((-1.708085489E9 IN ()))) AND (((((x''))>=((0.22257447288902))))))); -- 0ms;
SELECT DISTINCT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<((COUNT(*)))) FROM rt0 WHERE ((((('1162702308') BETWEEN (x'') AND (1.318313445E9)))>=(((x'') NOTNULL)))); -- 0ms;
SELECT DISTINCT 2063997636 FROM rt0 WHERE (CAST(('2095019964' IN ()) AS INTEGER)); -- 0ms;
SELECT ALL json_array_length(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), CAST(rt0.c0 AS BLOB)), ((0.2694124521735791)/(COALESCE(DISTINCT rt0.c0, rt0.c0))), LIKELY(DISTINCT ((rt0.c2)-(rt0.c0))) FROM rt0 WHERE (((245258853)|(1461117528)) COLLATE RTRIM COLLATE NOCASE);SELECT SUM(rt0.c0) OVER (), ((((((((UPPER(DISTINCT rt0.c0))OR((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c1, rt0.c0))))))AND(((rt0.c1) IS FALSE))))AND(rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)), ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))>(((rt0.c2)*(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)+(rt0.c1)) IN (DATE(rt0.c0, rt0.c0, rt0.c2))), (LIKE(rt0.c1, rt0.c0) IN ()), CAST(COUNT(*) AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM rt0 WHERE (((((x'21b4')IS NOT(1.17142868E9)))=(((0.12516970687924345)=(x''))))); -- 0ms;
SELECT DISTINCT COUNT(NULL) OVER () FROM rt0 WHERE (((((((((CAST('' AS INTEGER))AND(CASE WHEN 0.010645914112738852 THEN 0xffffffffe6b52ebc END)))OR(NULL)))AND((NULL IN ('X\rC?by', x'14de')))))OR((~ (0.09099152832186774))))) ORDER BY (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((MIN(rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c2), rt0.c2, rt0.c2)) AND ((IFNULL(DISTINCT rt0.c1, rt0.c2), CAST(rt0.c1 AS NUMERIC), rt0.c0)))  NULLS FIRST, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT MIN(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))) FROM rt0 WHERE ((((('1e500')&(x'')))<((('1848476512') IS TRUE)))); -- 0ms;
SELECT ALL LEAD((x'214a' IN (CASE WHEN rt0.c1 THEN rt0.c2 END)), x'', CAST('206085932' AS BLOB)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c0) BETWEEN (NULL) AND (rt0.c1))) OVER (), 'G', CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS TEXT) FROM rt0 LIMIT -897190383; -- 0ms;
SELECT ((CAST(rt0.c2 AS TEXT))&(CAST(rt0.c1 AS REAL))), 0.06657251808028675, ((rt0.c2 COLLATE BINARY)IS NOT(rt0.c0)) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS INTEGER) FROM rt0; -- 1ms;
SELECT ((((rt0.c1)*(rt0.c0))) IS FALSE) FROM rt0 NOT INDEXED WHERE ((((NOT (x''))) BETWEEN (((NULL) BETWEEN ('') AND ('9V\n'''))) AND (TRIM(0.41500775579739146, '51481148')))); -- 0ms;
SELECT ALL ((COUNT(rt0.c2))|(((rt0.c0)LIKE(rt0.c1)))), CASE WHEN (~ (rt0.c0)) THEN ((NULL) IS TRUE) ELSE rt0.c2 COLLATE NOCASE END, ROUND(SUM(0Xffffffffd8723662), ((rt0.c1)>(rt0.c1))) FROM rt0 WHERE ((((((('P_')||(0.41037902923832703)))AND((NOT (x'83b7')))))AND(((((NULL)AND('n(K|硂2')))AND('Lp^K'))))); -- 0ms;
SELECT COUNT((+ (rt0.c0))) OVER (), CASE SUBSTR(rt0.c0, rt0.c0)  WHEN (((rt0.c1))<((rt0.c0))) THEN (((rt0.c0))=((rt0.c2))) WHEN rt0.c2 THEN ((rt0.c2)AND(rt0.c1)) WHEN ((NULL) IS FALSE) THEN rt0.c2 ELSE ((rt0.c0)IS(rt0.c2)) END, ((rt0.c2) IS FALSE) COLLATE BINARY FROM rt0 ORDER BY (((rt0.c1)%(rt0.c1)) IN (((0.2065267077659091) IS TRUE))), (((rt0.c0 IN ()))<>(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))), CASE WHEN CAST(rt0.c1 AS INTEGER) THEN 453371553 END; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT (~ ((~ (rt0.c2)))) FROM rt0 LIMIT -2028961894 OFFSET 1618632440; -- 0ms;
SELECT ((TOTAL(rt0.c0)) NOT BETWEEN ((('-572921924')OR(rt0.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c2 END)), CAST(CAST(rt0.c1 AS NUMERIC) AS INTEGER), NULLIF((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), json_type(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT '1㤗z蒞yTl]벘' COLLATE NOCASE FROM rt0 WHERE (((CASE 0.4776763549747455  WHEN NULL THEN NULL WHEN x'f962' THEN NULL WHEN x'' THEN x'' END) BETWEEN (((0.5296891389825358)*(0.6614064150265543))) AND (0.41682006972687413))); -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))-(((NULL)AND(rt0.c2)))), CASE GROUP_CONCAT(0.35146946020161274)  WHEN rt0.c2 THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END, LEAD(TRIM(DISTINCT rt0.c1), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT NULL), '-746346628') OVER () FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))>(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (0.5593514405308669 IN ()), CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB), (((((rt0.c2))>((rt0.c1))))>(((rt0.c1)>=(rt0.c0)))) FROM rt0; -- 1ms;
SELECT DISTINCT TRIM(DISTINCT ((rt0.c0)>=(rt0.c2)), ((rt0.c1)=(rt0.c1))) FROM rt0; -- 0ms;
SELECT ALL MAX((- (rt0.c0))), SUM(TRIM(rt0.c0)) OVER ( ORDER BY (((rt0.c1 IN ('(鰔3^#2,', rt0.c1))) NOTNULL)  NULLS FIRST), 0.697175735484552 FROM rt0; -- 1ms;
SELECT DISTINCT LAG(((CAST(rt0.c1 AS BLOB)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND ((rt0.c2 IN ()))), rt0.c0, CASE WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN CAST(rt0.c0 AS REAL) WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.9124225099271133) THEN rt0.c2 WHEN ((1.17142868E9) ISNULL) THEN ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)) ELSE (NOT (rt0.c0)) END) OVER () FROM rt0 WHERE ((((CAST('OL15I' AS NUMERIC)))<>((((0.6011502248128522)<=(NULL)))))); -- 0ms;
SELECT DISTINCT (((((rt0.c1) NOT NULL)))<=((rt0.c1))) FROM rt0; -- 0ms;
SELECT 0x337a93c7 FROM rt0; -- 0ms;
SELECT DISTINCT AVG(TYPEOF(rt0.c1)), IFNULL((~ (rt0.c0)), rt0.c0), (- (COUNT(*))) FROM rt0 WHERE (((TRIM(DISTINCT 1785526165, '\nv')) BETWEEN (('-547722676' IN ())) AND (((2.087498125E9) IS FALSE)))); -- 0ms;
SELECT DISTINCT ((rt0.c2)<<(rt0.c2 COLLATE BINARY)) FROM rt0 LIMIT -605479478; -- 0ms;
SELECT ((SUM(rt0.c0))/(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) FROM rt0; -- 0ms;
SELECT CAST(((rt0.c1) IS FALSE) AS TEXT) FROM rt0 WHERE ((GLOB(NULL, 0.842842152672855) IN ())); -- 1ms;
SELECT DISTINCT (((NULL IN ()))<<(CAST(rt0.c0 AS REAL))) FROM rt0 WHERE ((((+ (x'8a9b'))) BETWEEN (CAST(NULL AS INTEGER)) AND (LIKELY(DISTINCT NULL)))) EXCEPT SELECT DISTINCT ((MIN(rt0.c1)) NOT BETWEEN ((((rt0.c1))>((rt0.c0)))) AND (NULLIF(DISTINCT rt0.c1, rt0.c1))) FROM rt0; -- 0ms;
SELECT ((((rt0.c0) IS TRUE)) NOT NULL), ((rt0.c0) NOTNULL) COLLATE BINARY, (((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1)))) ISNULL) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM)<=((((x''))>((rt0.c1))))) FROM rt0 WHERE ((- (NULL))); -- 0ms;
SELECT DISTINCT ((MAX(rt0.c1))<<(AVG(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)LIKE(rt0.c1)))+(((rt0.c0) NOTNULL))) FROM rt0 WHERE (((((((((CASE NULL  WHEN x'7042' THEN NULL ELSE 1585168120 END)OR(CASE '1480073998'  WHEN '' THEN x'' END)))OR((-2025109675 IN ()))))AND(TIME(0.10321969684676657, x'', x''))))AND(((x'')|('-219048281'))))); -- 0ms;
SELECT (('-563066582')IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 END)), (((rt0.c2 IN (rt0.c1, rt0.c0))) IS TRUE), ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))) ISNULL) FROM rt0 WHERE ((~ (CAST(NULL AS REAL)))) LIMIT 477190509 OFFSET -1044745557 EXCEPT SELECT ((((rt0.c0)>(rt0.c1))) ISNULL), CAST((rt0.c0 IN ()) AS REAL), ((rt0.c0) ISNULL) FROM rt0;SELECT DISTINCT ((rt0.c2) ISNULL) FROM rt0 WHERE (((((NULL) BETWEEN ('0.225213456102359') AND ('-624518542')))|(((0.8897660522996229) BETWEEN ('?奭Sgࡌ') AND ('-1117118006'))))) LIMIT -2139861540; -- 0ms;
SELECT DISTINCT ((TYPEOF(rt0.c0)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (rt0.c1)) FROM rt0 WHERE ((+ (((x'') NOT BETWEEN (0.386984115291377) AND (0Xffffffffd464b5ed))))) LIMIT 1214390035; -- 0ms;
SELECT DISTINCT ((rt0.c0 IN ()) IN ()), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((COUNT(rt0.c0)))), ((((rt0.c1)<<(rt0.c2)))GLOB(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0 ORDER BY CAST(((rt0.c1) IS FALSE) AS INTEGER) DESC  NULLS LAST; -- 0ms;
SELECT rt0.c0 FROM rt0 WHERE ('206085932' COLLATE RTRIM); -- 0ms;
SELECT ALL rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(NULL COLLATE RTRIM)) FROM rt0 GROUP BY ((x'0c03') BETWEEN (rt0.c2 COLLATE BINARY) AND (CAST(x'' AS REAL))) HAVING ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL); -- 0ms;
SELECT ALL NULL FROM rt0; -- 0ms;
SELECT DISTINCT NTILE(-1321214129) OVER ( PARTITION BY CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c1) BETWEEN ('') AND (rt0.c2)) END, ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND((((rt0.c2))<=((rt0.c2))))))OR('-1780841177'))) FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT CAST((- (rt0.c0)) AS REAL) FROM rt0; -- 0ms;
SELECT ALL (((0X1d9f1517, rt0.c0, rt0.c2, rt0.c1, rt0.c1, 0.0896485267367888, '')) BETWEEN ((rt0.c1 COLLATE RTRIM, rt0.c2 COLLATE RTRIM, NULL, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE '' END, (+ (rt0.c1)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((((rt0.c0))>=((NULL))), rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS TEXT), ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)), CAST(rt0.c2 AS BLOB), ((rt0.c0) NOTNULL), rt0.c1))) FROM rt0; -- 0ms;
SELECT ((((rt0.c1) ISNULL)) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT (AVG(rt0.c0) IN ()) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c1) BETWEEN (((((((((NULL)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(0Xffffffffe10559c2))) AND ((rt0.c2 IN (rt0.c0, rt0.c0)))), x'31e3', ((((rt0.c0) IS FALSE))LIKE(NULL)) FROM rt0 WHERE (((CAST('fy' AS NUMERIC))+(((x'a452')AND(NULL))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((NULL)/((~ (rt0.c1))))) OVER (), (NOT (((rt0.c2)>=(rt0.c0)))), ((rt0.c0)IS NOT(NULL)), AVG(COALESCE(DISTINCT rt0.c1, rt0.c2)), (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END))>((rt0.c2 COLLATE RTRIM))) FROM rt0 WHERE ((((((((((((((x'')OR('now')))OR(0.05657352662599102)))OR('-573119910')))AND(0.13130020367146733)))AND(-4.21491118E8)))AND(1)) IN ())); -- 0ms;
SELECT ALL SUM(((rt0.c1)LIKE(rt0.c0))) FROM rt0; -- 0ms;
SELECT ALL (((((('')>=('0.21015855439862874')))AND(LTRIM(rt0.c2))))AND(TYPEOF(rt0.c1))) FROM rt0 GROUP BY (((rt0.c0 IN ())) BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) AND (((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))); -- 0ms;
SELECT ((TRIM(DISTINCT rt0.c2, rt0.c2))||(rt0.c0 COLLATE RTRIM)) FROM rt0 GROUP BY ((((rt0.c1))>((rt0.c2))) IN ((rt0.c0 IN ()))) HAVING CAST(rt0.c2 AS NUMERIC) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE NOCASE) BETWEEN (((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))) AND ((- (rt0.c1)))), rt0.c1, NULLIF(CASE rt0.c1  WHEN rt0.c2 THEN NULL END, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) FROM rt0 WHERE (((ABS(DISTINCT x''))<<(((-0.0) NOTNULL)))); -- 0ms;
SELECT NULL, SUM((((rt0.c0))<=((rt0.c1)))), ((rt0.c1)IS(rt0.c2)) COLLATE RTRIM FROM rt0 WHERE (((((0.829121690174199))<((0.5869403800548306))) IN (((x'')LIKE(x'')), ('^x' IN ())))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (MIN('2CxY', rt0.c0)) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST, ((((rt0.c1)<=(rt0.c2)))<=(rt0.c1 COLLATE BINARY)) ASC LIMIT 1848476512; -- 1ms;
SELECT DISTINCT '612489891' FROM rt0 WHERE (((((((((((('fy', x'b7c7', 919496726)) BETWEEN ((' m6H', '778512003', 0.5334492395866185)) AND (('-563066582', 0.3530068966633474, 0.7253283523477222))))AND((((((((('ONDR-)H')OR(x'')))AND('୶.9S%')))AND(x'')))OR('224423837')))))AND(((NULL)LIKE(0.6016167230459442)))))OR(((x'0764') IS FALSE))))OR(TIME(x'', NULL, x'')))) ORDER BY CASE (((rt0.c2))>((rt0.c2)))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) END  NULLS FIRST; -- 0ms;
SELECT ALL x'' FROM rt0 WHERE (CASE (- (NULL))  WHEN HEX(DISTINCT x'') THEN UNICODE('N{1}') ELSE CHAR(NULL) END); -- 0ms;
SELECT ((((rt0.c1) ISNULL))GLOB(rt0.c2)) FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY)<=(CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (+ (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))), CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END  WHEN ((rt0.c0)>(rt0.c2)) THEN ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR('-519930643')))OR(rt0.c1)) ELSE (rt0.c1 IN (rt0.c2)) END, rt0.c2 FROM rt0; -- 1ms;
SELECT DISTINCT CASE NULL  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE CAST(rt0.c1 AS BLOB) END FROM rt0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c1, rt0.c1, rt0.c2))>((rt0.c2, rt0.c2, rt0.c0))) AS REAL), 'z 勫4.', CAST(rt0.c1 AS REAL) COLLATE BINARY FROM rt0 WHERE ((((NULL)) BETWEEN ((CAST(NULL AS NUMERIC))) AND (((((0.31225821654011565, NULL, 0Xffffffff9da81ea5)) NOT BETWEEN (('rzqy&~-r', '', 0x4227c345)) AND ((x'', 0.6566817386114365, 0.4799340756588002))))))) GROUP BY rt0.c1; -- 0ms;
SELECT DISTINCT ((((rt0.c0)OR(GLOB('-1687571008', rt0.c1))))OR(((rt0.c2) NOT BETWEEN (0.17290139541419336) AND (rt0.c1)))) FROM rt0; -- 0ms;
SELECT ((((rt0.c2) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c1)GLOB(rt0.c1)))), x'105c', rt0.c2 FROM rt0 WHERE ((+ (((((x'')OR(0.5683159673588363)))OR(0.44623644436353715))))); -- 0ms;
SELECT DISTINCT CAST(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) AS REAL) FROM rt0 WHERE (((CAST('51481148' AS INTEGER))OR(((x'')>(0.20550575715641817))))); -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL))) NOTNULL), (~ (rt0.c0 COLLATE RTRIM)), '0W撟F' FROM rt0; -- 1ms;
SELECT ((rt0.c2 COLLATE BINARY)IS((~ (x'')))), CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS REAL), (((- (rt0.c1)))IS(AVG(1132736755))) FROM rt0 WHERE (2.063997636E9) ORDER BY (~ (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST; -- 0ms;
SELECT LEAD(((((rt0.c0) ISNULL))<=(((rt0.c2) NOTNULL))), ((((((rt0.c0)AND('1426397555')))AND(rt0.c1)))+(LTRIM(rt0.c1))), CASE WHEN ((x'')*(rt0.c1)) THEN ((0.7046024929288902)%(rt0.c0)) WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) THEN SUBSTR(rt0.c2, 0.20297665224661865) WHEN rt0.c2 THEN ((rt0.c2)|(rt0.c1)) END) OVER (), (((((((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, 'f*', rt0.c1)) AND ((rt0.c0, rt0.c0, '-719391241'))))AND((- (rt0.c0)))))OR(MAX(rt0.c0))))AND(NULL)))AND(((rt0.c2) NOT NULL))), json_remove(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), IFNULL(rt0.c2, rt0.c0)) FROM rt0;SELECT DISTINCT (- (MIN(rt0.c2))) FROM rt0 GROUP BY ((rt0.c0)%((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))); -- 0ms;
SELECT ALL LOWER(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) FROM rt0 WHERE ((((((0x200a849a))>=((0X4e93dde5)))) NOTNULL)); -- 0ms;
SELECT DISTINCT (~ (((rt0.c1)<>(rt0.c1)))), (NOT (((rt0.c1) IS FALSE))), SQLITE_SOURCE_ID() FROM rt0 WHERE ((((('1171428680') ISNULL)) NOT BETWEEN (0.3530068966633474) AND (((x'')GLOB(0.637527799784157))))); -- 1ms;
SELECT DISTINCT ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))==((+ (rt0.c2)))) FROM rt0 WHERE (CASE WHEN (('-856872094') NOT NULL) THEN ((NULL)>=(x'')) END); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT (((((((((~ (rt0.c2)))AND(((rt0.c2) NOTNULL))))AND((- (rt0.c1)))))AND(((rt0.c1) NOTNULL))))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))) FROM rt0 WHERE (CAST((((x'959f8a3c'))<=((0x517f7e0c))) AS TEXT)); -- 0ms;
SELECT DISTINCT AVG(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0))) OVER () FROM rt0; -- 0ms;
SELECT rtreenode(rt0.c1, rt0.c0) COLLATE NOCASE FROM rt0 WHERE (CASE WHEN CAST(x'' AS REAL) THEN (('+)')IS NOT('')) ELSE (NOT (x'')) END); -- 0ms;
SELECT ((rt0.c2) BETWEEN (GROUP_CONCAT(rt0.c2)) AND (CAST(rt0.c2 AS REAL))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS TEXT) FROM rt0 WHERE (((SUBSTR(x'', x'')) NOTNULL)); -- 0ms;
SELECT ALL ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (COUNT(rt0.c2)) AND (((rt0.c1)>>(rt0.c0)))), ('<~>P*' IN ()), rt0.c0 FROM rt0 GROUP BY CAST(((rt0.c2) IS FALSE) AS INTEGER); -- 0ms;
SELECT NULL FROM rt0; -- 0ms;
SELECT DISTINCT CASE NULLIF(DISTINCT rt0.c2, rt0.c0)  WHEN ((rt0.c2)+(rt0.c2)) THEN ((((x'')OR(rt0.c2)))AND(rt0.c0)) END FROM rt0; -- 0ms;
SELECT ((rt0.c1) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) AND (rt0.c1)), (((+ ('< ')))<((((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0, rt0.c0, rt0.c0))))), (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END IN ()) FROM rt0 ORDER BY rt0.c2, ((((rt0.c2)LIKE(rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))) AND ('')) DESC LIMIT -1871503739; -- 0ms;
SELECT DISTINCT TOTAL(CAST(rt0.c1 AS TEXT)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))), ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN 0.0909389018399911 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((+ (rt0.c1))) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))), ((rt0.c2) ISNULL) COLLATE NOCASE FROM rt0 WHERE ((((NOT (0.8895059745879026))) NOT BETWEEN (CAST('1569201834' AS INTEGER)) AND ((('-1980734305') BETWEEN (x'') AND (x''))))) GROUP BY ((CAST(rt0.c0 AS REAL))>=((((0.08865698203921157)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))));SELECT ALL (((rt0.c1, rt0.c2, rt0.c2)) BETWEEN (((+ (rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c2) BETWEEN ('1e500') AND (rt0.c1)), ((rt0.c1)OR(rt0.c1)), ((rt0.c1) IS FALSE)))) FROM rt0 WHERE (CAST(0.5419653842423985 AS TEXT) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT (NOT (IFNULL(rt0.c1, rt0.c1))) FROM rt0 LIMIT 696920064; -- 0ms;
SELECT ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))<>(CAST(rt0.c2 AS BLOB))) FROM rt0; -- 0ms;
SELECT DISTINCT ((0.8012340199188658)|((((rt0.c0))<>((rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)IS NOT(NULL)))GLOB(rt0.c2)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM FROM rt0 WHERE (((('Pi.r', x'', 0.6279358808961304)) BETWEEN ((((x'')|(NULL)), ((NULL) IS TRUE), TRIM('', 0.4796718948232599))) AND ((('-1' IN (0.2749865577269487)), UNLIKELY(DISTINCT '744298915'), ((NULL) NOT NULL))))); -- 0ms;
SELECT DISTINCT ((rt0.c0)/(((x'')||(rt0.c0)))) FROM rt0 WHERE (SUBSTR(CAST(NULL AS BLOB), ('' IN ()))) ORDER BY (((((((((rt0.c0 IN ()))AND(31072743)))OR(((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))))AND(CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE NULL END))  NULLS FIRST, ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))) NOTNULL) ASC; -- 1ms;
SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND(CAST(rt0.c1 AS NUMERIC))))AND((+ (rt0.c1)))), 0.8633827255990589, ((((SUM(rt0.c1))AND(((rt0.c2)-(rt0.c2)))))OR(CAST(rt0.c2 AS BLOB))) FROM rt0 WHERE (((0.5247970185648836)+((x'' IN ())))) LIMIT -686899533 OFFSET 1353447906; -- 0ms;
SELECT COUNT(rt0.c0) OVER (), (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))*(NULL)), AVG(TOTAL((rt0.c2 IN ()))) FROM rt0 WHERE (((((x'') BETWEEN ('|㘒') AND (0.8477056349848373)))<<(CAST('1786172412' AS BLOB))));SELECT DISTINCT HEX(DISTINCT rt0.c0 COLLATE RTRIM), (((rt0.c2) ISNULL) IN (206085932)), (((('FALSE')OR(rt0.c0))) BETWEEN (((rt0.c0)>>(rt0.c2))) AND (rt0.c0)) FROM rt0 WHERE ((((0.23274718675860173 IN ())) NOT BETWEEN ((- (0x6e2d8360))) AND ((((x'', '1960337911', '-1144935025')) NOT BETWEEN (('', -661381968, x'')) AND ((NULL, NULL, '')))))); -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS TEXT) COLLATE BINARY FROM rt0 WHERE (json_insert(0.8863798038934445, x'f326', '-689567283') COLLATE BINARY);SELECT ALL (rt0.c2 IN (rt0.c0, rt0.c0)) COLLATE RTRIM FROM rt0; -- 1ms;
SELECT rt0.c1 COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) AS INTEGER) FROM rt0 WHERE (CAST(((NULL)<(-563066582)) AS INTEGER)) UNION ALL SELECT CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) BETWEEN (NULL) AND (rt0.c2)) WHEN ((rt0.c1) NOTNULL) THEN (rt0.c0 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c2 ELSE (- (rt0.c0)) END FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT BETWEEN (MAX(rt0.c0)) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), DENSE_RANK() OVER (), CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END AS BLOB) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE FROM rt0 WHERE ((((NULL COLLATE NOCASE))<((('-947648006' IN ()))))) LIMIT 441537474 OFFSET 133939863; -- 0ms;
SELECT DISTINCT ((((((((rt0.c1)OR(CAST(rt0.c0 AS REAL))))OR(rtreenode(x'', rt0.c1))))OR(rt0.c0 COLLATE NOCASE)))AND(SUM(rt0.c1))) FROM rt0 WHERE ((((((NOT ('0.010645914112738852')))AND(x'')))OR(((NULL)LIKE(0.6588519419018881))))); -- 0ms;
SELECT DISTINCT '' FROM rt0 GROUP BY CASE WHEN ((0.3412919724022382) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (+ (rt0.c2)) WHEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)) THEN (NOT (rt0.c2)) WHEN ((((rt0.c0)AND(rt0.c1)))AND(x'')) THEN ((((rt0.c0)AND(rt0.c1)))AND(0.6629550885805211)) END LIMIT -1099064480 OFFSET 1409360815; -- 0ms;
SELECT DISTINCT CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END  WHEN (rt0.c1 IN ()) THEN ((rt0.c1)/('wh6qo\懷b')) END FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c0) ISNULL)  WHEN ((rt0.c0) NOT NULL) THEN ((0.10454346647412693) IS TRUE) END, MAX(rt0.c2), (((rt0.c0 IN ())) BETWEEN (rt0.c2) AND (((rt0.c0)<(rt0.c1)))) FROM rt0 WHERE ((((('!5', x'ccb1', 1.7976931348623157E308, 0.7020411472114466, 0.77052501369912, 'pv)JsD', 0X0))>((x'', 0.697175735484552, 'zYt㷂', x'ddde', 0.40212350331508895, NULL, '읩h\nMEJi'))) IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c2) NOTNULL) IN ((((rt0.c0))==((rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE SUM(rt0.c2)  WHEN (rt0.c2 IN ()) THEN rt0.c2 COLLATE BINARY ELSE (-2016295467 IN (rt0.c2)) END FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)GLOB(rt0.c2)) AS BLOB) FROM rt0; -- 0ms;
SELECT ALL (((((((rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1))))OR((((rt0.c1, x'dd6c484d4c47', NULL)) BETWEEN (('1848476512', rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))))))AND(((rt0.c0)=(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((NULL)||(-2.04330852E8)) FROM rt0; -- 0ms;
SELECT ((x'522c') BETWEEN (NULL) AND (rt0.c0)) COLLATE NOCASE, CASE WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END WHEN NULL THEN LTRIM(rt0.c1) WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(-3.05842509E8)))AND(rt0.c0)) END, (((rt0.c0)) BETWEEN ((NULL)) AND ((((x'')%(NULL))))) FROM rt0 WHERE ((((('0.5296891389825358')>>(NULL)))<=((~ ('-966221142'))))); -- 0ms;
SELECT SUM(((rt0.c0)<(rt0.c0))) OVER ( ORDER BY NULL DESC  NULLS LAST) FROM rt0; -- 0ms;
SELECT ALL ((UPPER(rt0.c1)) ISNULL), (((- ('h[')))LIKE(highlight(rt0.c1, rt0.c1, rt0.c2, x''))), CASE WHEN (((rt0.c0))==((rt0.c1))) THEN ((rt0.c2)<(rt0.c1)) END FROM rt0;SELECT (((((rt0.c2))<>((rt0.c0))))LIKE(((rt0.c0) NOTNULL))) FROM rt0; -- 0ms;
SELECT CASE ((rt0.c1)*(rt0.c0))  WHEN (+ (rt0.c2)) THEN CAST(rt0.c2 AS REAL) END FROM rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR((rt0.c1 IN ()))), ((rt0.c2)<>(rt0.c0)) COLLATE BINARY, TYPEOF(DISTINCT ((rt0.c0)<(rt0.c1))) FROM rt0 WHERE (((((x'850d' IN ())))>(((NULL IN (NULL, 'M]A4)0')))))); -- 0ms;
SELECT ALL (NOT (NULL COLLATE BINARY)) FROM rt0 LIMIT 1132736755; -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN x'' THEN rt0.c1 END), ((LTRIM(rt0.c0, ''))OR(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))), NULL FROM rt0 WHERE ((((0.09099152832186774 IN ()))<(((('1684043728')) BETWEEN (('1926936689')) AND ((x'')))))); -- 0ms;
SELECT ALL UNLIKELY(DISTINCT rt0.c0 COLLATE BINARY), ((((rt0.c0)>(rt0.c1))) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1)), COUNT(0.9522585523861357) OVER () FROM rt0; -- 0ms;
SELECT ALL rt0.c0 COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c1, rt0.c2, rt0.c0))<((rt0.c1, rt0.c2, rt0.c1))))*(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)), json_array_length(MIN(rt0.c2), TOTAL(rt0.c2)), (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((QUOTE(rt0.c2), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), x'3725')) AND (((((rt0.c2, rt0.c1, rt0.c2))>((rt0.c0, rt0.c0, rt0.c1))), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) FROM rt0 WHERE (CHAR(COALESCE(x'', '<'))); -- 0ms;
SELECT DISTINCT CAST((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB), CAST('' AS NUMERIC), RANK() OVER (), RANK() OVER (), TOTAL((((('U/')AND(rt0.c2)))OR(rt0.c2))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS BLOB) COLLATE BINARY, CASE (((x'', rt0.c0, rt0.c1))<((rt0.c0, rt0.c2, rt0.c2)))  WHEN (rt0.c0 IN (rt0.c0, rt0.c0)) THEN (('-1796284097')=(rt0.c0)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) END, (NOT ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((-1188222525))))), (((((rt0.c1))=((rt0.c2))))>>(rt0.c2 COLLATE RTRIM)), (((rt0.c0) BETWEEN (-1.555992515E9) AND (rt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt0; -- 0ms;
SELECT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))>>(((rt0.c0)+(rt0.c1)))), TOTAL(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) OVER ( RANGE ABS((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1)))) PRECEDING), TOTAL((rt0.c0 IN ())) FROM rt0 LIMIT -1203108301 OFFSET 303749453;SELECT DISTINCT SUM(((rt0.c0)|(rt0.c2))) FROM rt0 WHERE (CASE WHEN CASE x''  WHEN -2.025109675E9 THEN 'B?' WHEN '250174359' THEN 'z{OW|蚁YSX' WHEN 0.9722158701322666 THEN x'' END THEN ((((-2.016295467E9)AND(0.8176949447303676)))OR(NULL)) WHEN (('|责s 5')GLOB(NULL)) THEN ABS(DISTINCT '') WHEN CAST(NULL AS INTEGER) THEN 0.0114362233223535 COLLATE RTRIM END); -- 0ms;
SELECT ((((COALESCE(DISTINCT rt0.c1, rt0.c1))OR((+ (rt0.c0)))))AND(rt0.c1)), TOTAL(CAST(rt0.c2 AS BLOB)) OVER (), CASE ((rt0.c0)||(rt0.c2))  WHEN -1.578846682E9 THEN ((rt0.c0) IS FALSE) ELSE ((rt0.c0)<(rt0.c0)) END FROM rt0 WHERE (((NULL IN ('M*]>r')) IN ((NOT ('')), '3k5JaVM1'))); -- 0ms;
SELECT DISTINCT ((((+ (rt0.c0))))==((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))), ((((rt0.c1) IS TRUE))>(((rt0.c1)%(rt0.c1)))), NULL FROM rt0 WHERE ((- (('FALSE' IN (x'', NULL))))); -- 0ms;
SELECT ALL ((LTRIM('-1578846682')) BETWEEN ((NOT (rt0.c2))) AND (((rt0.c1)<(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1, SUM(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) OVER (), (NOT (((rt0.c0)AND(rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL ((CASE WHEN 0.2771500863446599 THEN rt0.c1 ELSE rt0.c1 END)GLOB(COUNT(*))), (((- (rt0.c2))) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((rt0.c2 IN (rt0.c0)))), UNLIKELY(rt0.c1 COLLATE RTRIM), CAST(((rt0.c1) IS TRUE) AS REAL), DENSE_RANK() OVER () FROM rt0 WHERE (((0.21991442660213156 COLLATE NOCASE) NOTNULL)); -- 0ms;
SELECT CASE WHEN GROUP_CONCAT(rt0.c2) THEN rt0.c0 COLLATE NOCASE END, rt0.c2, SUM(NULL) OVER ( ORDER BY LOWER(DISTINCT ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) DESC) FROM rt0 GROUP BY ((rt0.c1) NOTNULL); -- 1ms;
SELECT DISTINCT ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))IS(0.19653624627813648)) FROM rt0; -- 0ms;
SELECT DISTINCT (((((((((((((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))))AND((+ ('-833291688')))))OR(SUBSTR(rt0.c2, rt0.c0))))AND(rt0.c2 COLLATE NOCASE)))AND(rt0.c0)))AND(CASE WHEN '' THEN NULL END)))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT (((+ (rt0.c2))) NOT BETWEEN (((((((((x'')OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))) AND (((rt0.c1)<(rt0.c1)))), SUM(((rt0.c0) NOTNULL)), PERCENT_RANK() OVER (), (+ (rt0.c2)) COLLATE BINARY, rt0.c0 FROM rt0 WHERE (LIKELY((' 勫FA^Al' IN ()))); -- 0ms;
SELECT NULL FROM rt0 WHERE ((TRIM(DISTINCT NULL) IN ())) GROUP BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, '750091202', rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))))) HAVING (((((rt0.c0)GLOB('-884735423'))))<(((rt0.c1 IN ())))); -- 0ms;
SELECT ALL ((TOTAL(rt0.c0))!=(CAST(rt0.c2 AS REAL))) FROM rt0 ORDER BY 'Pi.r' DESC, ((CASE WHEN rt0.c2 THEN rt0.c0 END) ISNULL) DESC; -- 0ms;
SELECT ((744298915) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((rt0.c0 IN (NULL, rt0.c1)))) FROM rt0 WHERE (CASE WHEN COALESCE(0.6542770750111347, x'') THEN (('+#OwUo \n') NOT BETWEEN (x'') AND (-1.708085489E9)) END) LIMIT -1900691169; -- 0ms;
SELECT ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (((rt0.c1)/(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))), rt0.c1, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))*((~ (rt0.c0)))), 0Xffffffff8b562fc9, CUME_DIST() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)>=(rt0.c0)) IN ()), ((((rt0.c1)<>(rt0.c1)))+((rt0.c0 IN ()))), (~ (NULL)) FROM rt0 WHERE ((((((x'')) NOT BETWEEN ((NULL)) AND (('-1384412191'))))<>((((x'4af7'))<>(('0.2065267077659091')))))); -- 0ms;
SELECT DISTINCT ((COUNT(*))GLOB(TOTAL(rt0.c1))) FROM rt0 WHERE (CAST((('')<=(0.4700444071070995)) AS TEXT)) ORDER BY (((rt0.c2 IN ()))IS NOT(((rt0.c0) NOT NULL))) DESC; -- 0ms;
SELECT ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) NOTNULL) FROM rt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM rt0 WHERE ((CAST('enẪ' AS TEXT) IN (DATETIME('DJHr', NULL, NULL)))); -- 0ms;
SELECT DISTINCT (NOT (MAX(rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((MIN(rt0.c2))) AND (((- (NULL))))) FROM rt0 GROUP BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.9707091592358655)))OR(rt0.c2 COLLATE RTRIM)))AND(rt0.c2)))OR(((((4.77190509E8)OR(rt0.c2)))AND(NULL)))))OR((((rt0.c2))!=((rt0.c2))))) HAVING CAST(rt0.c1 AS REAL) COLLATE RTRIM; -- 0ms;
SELECT ALL (NOT (-746346628)) FROM rt0 WHERE (((CASE WHEN x'' THEN '' ELSE x'' END) BETWEEN (((('rNaNMN')) BETWEEN ((0.5683159673588363)) AND ((8.55398728E8)))) AND ((0Xffffffff9d628237 IN ())))) GROUP BY (NOT (CAST(rt0.c2 AS REAL))), LIKELIHOOD(DISTINCT CAST(rt0.c0 AS NUMERIC), 0.02611907389952628), (((((rt0.c0))<=((rt0.c2))))!=((- (rt0.c2)))) HAVING ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))AND(x'4a35')))AND(0.29836089567137447)); -- 0ms;
SELECT ((rt0.c1)|(rt0.c1)) COLLATE BINARY, (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE BINARY, (rt0.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c0)|(rt0.c1)), rt0.c2 COLLATE NOCASE, ((rt0.c2)<(rt0.c2))))), (~ ((rt0.c2 IN ()))), AVG(HEX(rt0.c0)) OVER (), UPPER(DISTINCT NULL) FROM rt0 WHERE ((((x'eb10'))==((CASE WHEN '' THEN 'Ay' END)))); -- 0ms;
SELECT DISTINCT TOTAL((((rt0.c0))==((rt0.c0)))) OVER () FROM rt0; -- 0ms;
SELECT ALL (((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((AVG(x'')))), UNICODE(COUNT(rt0.c1)), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (-363642002))) NOT BETWEEN (SUM(rt0.c1)) AND ((((rt0.c0))<=((rt0.c2))))) FROM rt0 WHERE ((((((0.10321969684676657)<>(NULL)), (((0.4070154409800526, x'', 0.963150100125397))=((NULL, 0.7378473812530991, x'908744b1'))), (x'' IN ()), ((0X4faf3dc2)OR('228077859')), NULL COLLATE NOCASE))<>((((0.6628841684701057)IS NOT(-746346628)), x'' COLLATE NOCASE, CASE 0.6175175088063923  WHEN NULL THEN 5.37560218E8 WHEN x'' THEN 0.8133368429370279 WHEN 0.31365720544449116 THEN 'PK' END, CASE x''  WHEN x'' THEN x'd5e6' WHEN 0.47413882999313617 THEN 1726122663 WHEN x'0632' THEN NULL ELSE 'Y&{a' END, CASE '-1708085489'  WHEN x'' THEN x'' END)))); -- 0ms;
SELECT (('-1998688754') IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c2))) IS FALSE) FROM rt0 WHERE (CAST('-421491118' AS BLOB)); -- 0ms;
SELECT (((rt0.c1 IN (rt0.c0)))LIKE(((rt0.c2)IS NOT(rt0.c2)))) FROM rt0 WHERE (CAST((+ (0.8102914261062926)) AS REAL)) GROUP BY (+ (((rt0.c2)!=(rt0.c2)))); -- 0ms;
SELECT DISTINCT ((((CASE rt0.c1  WHEN rt0.c0 THEN '840660340' ELSE rt0.c2 END)OR(CAST(rt0.c1 AS NUMERIC))))AND((+ ('579266104')))), ((((((((((x'0425') NOT BETWEEN (rt0.c0) AND ('2087498125')))OR(LAST_INSERT_ROWID())))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND((~ (rt0.c1)))))AND(rt0.c1)), TOTAL(UPPER(rt0.c1)) FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((NULL) NOT BETWEEN (x'') AND (x'95d4')), SUM(DATE(rt0.c0, rt0.c1, rt0.c2)), -1.13873346E9 COLLATE RTRIM FROM rt0 ORDER BY CAST(((rt0.c0) NOTNULL) AS INTEGER) ASC  NULLS FIRST, (NOT (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC, LIKE(((rt0.c0)AND(rt0.c2)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))  NULLS LAST LIMIT 1955173031 OFFSET 832805301; -- 0ms;
SELECT ((((rt0.c2) NOTNULL)) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c0 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0) NOT NULL) IN ()), ((((CAST(rt0.c1 AS INTEGER))OR((rt0.c2 IN ()))))OR(((rt0.c1)OR('1140522886')))), ((COUNT(rt0.c2)) NOTNULL) FROM rt0 WHERE (((((((((((x'')AND(0.4187542363952812)))AND(NULL)))AND(x'')))AND(0X7c4c40b4)))%('1076116037'))) GROUP BY ((CAST(rt0.c2 AS INTEGER)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) IS TRUE))) HAVING ((rt0.c2)OR(x'af98')); -- 0ms;
SELECT x'' COLLATE NOCASE FROM rt0 WHERE ((((((x'40ec', NULL, '#镈'))<(('-344795665', '-32424843', 0xffffffffb85f3d36)))) NOT BETWEEN (((((0.5296891389825358)OR(x'8b991393')))OR(NULL))) AND (((0Xffffffffdf3d0428) IS FALSE)))); -- 0ms;
SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (rt0.c1) AND (COALESCE(rt0.c2, rt0.c2))) FROM rt0; -- 0ms;
SELECT ((rt0.c1)|(rt0.c2)) COLLATE RTRIM FROM rt0 WHERE ((((- (0xffffffff95da8527))) BETWEEN ((('-1384412191') IS FALSE)) AND ((- (NULL))))); -- 0ms;
SELECT DISTINCT ((((SUM(rt0.c1))OR((((rt0.c1))<((rt0.c0))))))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))) FROM rt0 WHERE (CASE CASE '0.3412919724022382'  WHEN 0.1750508689800634 THEN x'aeb17bd3' WHEN '-4609207' THEN 0.5593514405308669 WHEN x'6f26' THEN x'b1fc' ELSE 59131057 END  WHEN (('1926936689')GLOB('^O*+')) THEN (('')-(x'')) WHEN (x'1116' IN ()) THEN ((((NULL)OR(5.37560218E8)))AND(x'')) WHEN CAST(NULL AS INTEGER) THEN ((x'')/(0.27557745358102337)) ELSE CAST(NULL AS REAL) END); -- 0ms;
SELECT DISTINCT -1330329616 FROM rt0 WHERE ((('-327806334' COLLATE NOCASE)>((((0.2623601518068086)) BETWEEN ((0.691654366619055)) AND ((0.6506580139020116)))))) ORDER BY (((- (rt0.c1))) BETWEEN ((rt0.c0 IN (rt0.c1))) AND (((rt0.c2)/(rt0.c1)))) ASC LIMIT 100270712; -- 0ms;
SELECT ALL (- (((rt0.c0) IS FALSE))) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT ((((rt0.c2))>((rt0.c1))))) FROM rt0 WHERE (((CASE 0x4bd7e5e4  WHEN x'fa64' THEN '!DK>(+b' WHEN '-|' THEN 'Mi' WHEN NULL THEN '稕j}S{' END)>>(NULL COLLATE NOCASE))) GROUP BY rt0.c1 HAVING ((rt0.c0 COLLATE NOCASE)IS((+ (rt0.c2)))); -- 0ms;
SELECT DISTINCT ((0.7395640031686049 COLLATE BINARY) BETWEEN (((rt0.c2) IS FALSE)) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) FROM rt0; -- 0ms;
SELECT DISTINCT (~ (rt0.c2)), ((TRIM(DISTINCT rt0.c1, rt0.c1)) NOT NULL), ((((rt0.c0)OR(rt0.c0)))LIKE(COUNT(rt0.c2))) FROM rt0 WHERE (-1085059179); -- 0ms;
SELECT ALL (~ (MAX(rt0.c1))) FROM rt0 WHERE ((- (CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP), rt0.c0, ((- (rt0.c2)) IN (((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))) FROM rt0; -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((CAST(rt0.c0 AS INTEGER)))) FROM rt0; -- 0ms;
SELECT ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (TRIM(rt0.c2))) FROM rt0 WHERE (((x'3759') IS FALSE) COLLATE RTRIM) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)  NULLS LAST; -- 0ms;
SELECT ALL NTILE((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) OVER () FROM rt0;SELECT CAST(((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) AS BLOB), (NOT (rt0.c0 COLLATE NOCASE)), '' COLLATE RTRIM FROM rt0 LIMIT 1367309836; -- 0ms;
SELECT COUNT(*) OVER () FROM rt0 WHERE (SUBSTR('Jtᷡ#' COLLATE RTRIM, ((0Xffffffffe6e08e52) BETWEEN ('z') AND (NULL)))); -- 0ms;
SELECT DISTINCT ('-856872094' IN (rt0.c1, '-1706689818', 0.01581823282230166)) COLLATE NOCASE, ((((0xffffffffd66af6d1)IS NOT(rt0.c0))) BETWEEN (CASE WHEN '[]Mi#J6' THEN 0.10470316683951508 END) AND (0Xfffffffff55bc311)), ((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)AND((('奈p') NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((- (NULL)))))AND(rt0.c2 COLLATE BINARY)))OR((~ (rt0.c2)))) FROM rt0 GROUP BY ((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))OR(CAST('-1370312751' AS BLOB))))OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))))OR(((rt0.c1)==(rt0.c2)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))) HAVING rt0.c0 LIMIT 723123310 OFFSET 1873451004; -- 0ms;
SELECT ((((rt0.c0) NOT NULL))GLOB(MIN(rt0.c1))), PERCENT_RANK() OVER (), TOTAL((- (rt0.c0))), ((((rt0.c0)<<(rt0.c1)))||(((rt0.c0)AND(rt0.c2)))), (((((rt0.c1) ISNULL)))>((((((rt0.c0)OR(rt0.c1)))AND(x''))))) FROM rt0; -- 1ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((((rt0.c2)+(rt0.c0)))) AND (((((rt0.c1, rt0.c2, rt0.c2))!=((rt0.c0, rt0.c1, rt0.c1)))))), IFNULL(DISTINCT (NOT (rt0.c1)), '85772628'), (NOT (MIN(rt0.c1))) FROM rt0 WHERE (((((LIKELIHOOD('', 0.02422855968267612))AND((~ (519377859)))))OR(((0.7976416469874809) NOT BETWEEN ('hi') AND (''))))); -- 0ms;
SELECT DISTINCT rt0.c0, ((rt0.c2 COLLATE BINARY) IS TRUE), CAST(TRIM(rt0.c1, rt0.c2) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((((((rt0.c2)>(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN NULL END)))OR(((rt0.c2) NOT BETWEEN (391650512) AND (rt0.c0)))))AND(0xffffffff95da8527)))OR(((rt0.c1)>>(rt0.c1)))))OR((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c0))))))AND((rt0.c0 IN (rt0.c0)))), (NOT (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))), MIN(CAST(rt0.c0 AS NUMERIC), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))) FROM rt0 LIMIT -474036163 OFFSET -1373363301; -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE ((('') IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT ALL NULL FROM rt0; -- 0ms;
SELECT DISTINCT (((NULL)) NOT BETWEEN (((((rt0.c2))<((rt0.c1))))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) FROM rt0 WHERE ((- ((('\n~GQ_k,}9') NOTNULL)))); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE BINARY)IS(((rt0.c2)+(rt0.c1)))) FROM rt0 WHERE (LOWER(UNLIKELY(DISTINCT 1.426397555E9))); -- 0ms;
SELECT (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END IN ()), NTH_VALUE(CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (rt0.c2 IN ()) THEN (~ (NULL)) ELSE (rt0.c1 IN (rt0.c0)) END, CAST(((rt0.c0)<(rt0.c2)) AS NUMERIC)) OVER ( RANGE  UNBOUNDED PRECEDING), MAX(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) FROM rt0;SELECT DISTINCT (((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, ((rt0.c2)OR(rt0.c0)), ((rt0.c0) ISNULL))) AND (((rt0.c0 IN (rt0.c0)), (rt0.c2 IN ()), (+ (rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT (NULL IN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END, NULL)) FROM rt0; -- 0ms;
SELECT ((rt0.c1)!=(rt0.c2)) COLLATE BINARY FROM rt0 GROUP BY (((((rt0.c2) IS TRUE)))<>((rt0.c2 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (SUM(rt0.c0) IN ()), TYPEOF(((rt0.c2) BETWEEN (-2.016295467E9) AND (rt0.c2))), TOTAL(rt0.c1 COLLATE RTRIM COLLATE BINARY) OVER () FROM rt0 WHERE ((NOT (((((((((NULL)OR(x'689c')))OR('NeqU	Pf')))AND(1405672101)))OR(x''))))); -- 0ms;
SELECT ((rt0.c0 IN ()) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN TOTAL(rt0.c0) THEN (((rt0.c2))<((rt0.c0))) ELSE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) END FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c2)-(rt0.c0))) NOT NULL), (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((CAST(rt0.c2 AS REAL), rt0.c1 COLLATE BINARY, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt0.c2) IS FALSE), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c1 AS INTEGER)))), ((((rt0.c0)AND(SUM(rt0.c2))))AND(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE CAST('7707272683158638476T48:-5473745344182819679-1' AS NUMERIC)  WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN (- (rt0.c0)) ELSE SUM(rt0.c1) END, CASE WHEN ((rt0.c2) NOT NULL) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END, ((rt0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) AND ((NOT (rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((ABS(rt0.c2))<=(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))), (((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))))&((rt0.c0 IN ()))), x'6560' FROM rt0 WHERE (CHANGES() COLLATE BINARY) GROUP BY (((rt0.c1)) NOT BETWEEN (('')) AND ((CASE WHEN NULL THEN '743843820' END))) HAVING CAST(rt0.c2 AS TEXT) COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt0.c1)>>(rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((x''))>((rt0.c1))), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (0.4917247281567183)), json_array_length(rt0.c1)))=((((rt0.c2)<<(rt0.c2)), CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE rt0.c0 END, ((rt0.c1)+(x'387e1b37'))))) FROM rt0 WHERE ((((x'')) BETWEEN ((((1.72209848E9)<<('100270712')))) AND (((0x203744bf IN ()))))); -- 0ms;
SELECT ALL ((MIN(rt0.c0))+((~ (rt0.c1)))), COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE RTRIM COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT HEX(((rt0.c1)|(rt0.c0))) FROM rt0 WHERE (((0.7779323656576866 COLLATE BINARY)OR(((0.8095328428979807) BETWEEN (0.1946957919601192) AND ('^X'))))); -- 1ms;
SELECT ALL CAST(GROUP_CONCAT(rt0.c2) AS REAL) FROM rt0 WHERE (((((((((((((NULL)AND('-697235684')))AND(0X74d861f7)))OR('')))OR('Qz<')))OR(((NULL) IS FALSE))))AND((- (''))))) LIMIT -5157776 OFFSET -15805809; -- 0ms;
SELECT DISTINCT ((((rt0.c1)>(NULL)))OR(0.13677114304864002)) FROM rt0 WHERE (CASE WHEN 1.17142868E9 THEN x'' END COLLATE NOCASE); -- 0ms;
SELECT (GROUP_CONCAT(rt0.c1) IN ()) FROM rt0; -- 4ms;
SELECT ALL CASE STRFTIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)  WHEN 77509800 THEN ((x'') NOT NULL) WHEN ((rt0.c0) ISNULL) THEN GROUP_CONCAT('1285404035') WHEN NULLIF(rt0.c1, rt0.c0) THEN rt0.c0 COLLATE NOCASE END, MAX(rt0.c2, NULL) COLLATE BINARY, CASE ((rt0.c0)IS(rt0.c2))  WHEN NULL COLLATE BINARY THEN -766469623 END FROM rt0 ORDER BY (((((((((rt0.c0 IN ()))AND(((rt0.c2) NOTNULL))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(((rt0.c0) IS FALSE))) ASC  NULLS LAST LIMIT -1871503739; -- 0ms;
SELECT DISTINCT SUM(((rt0.c1) ISNULL)) FROM rt0 WHERE (((((SQLITE_SOURCE_ID())AND(((((NULL)AND(NULL)))AND(x'')))))OR((('{lWI{''UlU') NOTNULL)))); -- 0ms;
SELECT COUNT(*), CAST(((((rt0.c2)AND(NULL)))OR(rt0.c0)) AS NUMERIC), CAST(((rt0.c2)OR(rt0.c1)) AS BLOB) FROM rt0 NOT INDEXED WHERE ((((0.5296891389825358)||(0.9947574405959467)) IN (CAST(NULL AS BLOB), ((('Fl')) NOT BETWEEN ((NULL)) AND (('QJCU<1&b!')))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOTNULL)) ISNULL) FROM rt0 GROUP BY rt0.c0; -- 1ms;
SELECT ALL SQLITE_COMPILEOPTION_GET(x'') COLLATE NOCASE FROM rt0 WHERE (((0.14424444613666787 COLLATE BINARY)-(CAST(0.8753384986581888 AS REAL)))); -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN -1.555992515E9 ELSE rt0.c1 END IN ()) FROM rt0 WHERE (CASE WHEN ((0Xffffffffb5263ccd) IS TRUE) THEN NULL COLLATE BINARY WHEN (~ (NULL)) THEN (('-27000205') NOT NULL) WHEN (0.2794458614672697 IN (1707255201, '')) THEN NULL ELSE json_valid(NULL) END); -- 0ms;
SELECT ALL ((((((rt0.c1)GLOB(rt0.c0)))AND(CASE rt0.c2  WHEN '0.24356751754450057' THEN rt0.c2 ELSE rt0.c2 END)))AND(((x'') IS FALSE))) FROM rt0 WHERE (json_object(NULL, CASE x''  WHEN '' THEN '909583592' END, (- (0.6358020883692116)), ((x'') BETWEEN (0.5593514405308669) AND (NULL)))) GROUP BY ((json_quote(rt0.c2)) IS TRUE) HAVING CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END ORDER BY CASE WHEN ((rt0.c1)<=(rt0.c0)) THEN ((rt0.c0) NOT NULL) WHEN x'f3e9' THEN ((rt0.c0) BETWEEN ('') AND (rt0.c0)) WHEN TYPEOF(rt0.c2) THEN (((rt0.c0, rt0.c1, rt0.c1))<>((rt0.c2, '4%%', rt0.c1))) ELSE (rt0.c2 IN (rt0.c2)) END DESC  NULLS FIRST;SELECT TOTAL(TOTAL(((rt0.c2)GLOB(rt0.c2)))) FROM rt0;SELECT DISTINCT 0x54864c44 FROM rt0; -- 0ms;
SELECT DISTINCT CAST((NOT (rt0.c0)) AS NUMERIC) FROM rt0 WHERE (CAST(((x'')>('')) AS TEXT)); -- 0ms;
SELECT (((((rt0.c1))>((rt0.c2)))) NOT BETWEEN (((rt0.c2)%(rt0.c0))) AND (((rt0.c0)LIKE(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT '1158367785', MIN(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END), ((((rt0.c2)AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c2)LIKE(rt0.c2)))) FROM rt0 WHERE (((CASE WHEN NULL THEN 1318313445 END)<=(((0.3248792768721275) BETWEEN (0xffffffffda7f018a) AND (0x72dab871))))); -- 0ms;
SELECT (UPPER(rt0.c2) IN ()) FROM rt0 WHERE ((((('')GLOB('-1749401613')))IS((((('-947648006')AND(1881188012)))OR(x''))))); -- 0ms;
SELECT HEX(((((rt0.c1)OR(rt0.c1)))AND(x'558d'))), (((CASE WHEN rt0.c0 THEN rt0.c1 END))>((((rt0.c2) NOT NULL)))), (0.5702058570526737 IN (rt0.c2)) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((rt0.c0 COLLATE BINARY)AND(CAST(rt0.c0 AS REAL))))OR(ABS(rt0.c1))))OR(((rt0.c1) NOT NULL))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0 WHERE ((((('-496581044')|(0.7161693512402193)))AND((744298915 IN ())))) GROUP BY ((((rt0.c1)||(rt0.c0)))IS(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END)), (((((((((rt0.c2)OR(rt0.c1)))AND(0.9521988149008564)))OR(rt0.c1)))OR(rt0.c1)) IN ()), (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((rt0.c1)||(rt0.c2))))); -- 1ms;
SELECT ALL SUM(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE '/i' END) FROM rt0 WHERE ((((((((((NULL)AND(x'')))OR(x'51fdd052')))AND(0.06657251808028675)))OR(x'')) IN ())); -- 0ms;
SELECT ALL (json_remove(rt0.c2, rt0.c2, rt0.c1, rt0.c0) IN ()) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c1 WHEN NULL THEN '-661381968' END)OR(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)) FROM rt0 WHERE ((((x'99dd' IN ())) NOT BETWEEN (((((((((NULL)AND('+\n')))OR(0.6219189273113273)))OR(NULL)))OR(''))) AND (CASE NULL  WHEN '-1e500' THEN 1.569201834E9 WHEN NULL THEN 0Xffffffffec988e41 WHEN x'8911' THEN 'N#e}' END))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((x'')OR(rt0.c2))) FROM rt0 WHERE (((((((0.8055464587511475)AND('-2040186644')))OR(NULL)))GLOB(0.9511355505701906))) LIMIT -2068754479 OFFSET -309793394; -- 0ms;
SELECT CAST(rt0.c0 COLLATE NOCASE AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY rt0.c2  NULLS FIRST) FROM rt0 WHERE (0.41021494842222006) ORDER BY rt0.c1 ASC; -- 0ms;
SELECT ALL rt0.c0, (((rt0.c2 IN ())) IS FALSE), (- (((rt0.c0)!=(rt0.c0)))) FROM rt0 WHERE (((((NULL) NOT NULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0 WHERE ((((1.710111151E9) NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT PRINTF(((rt0.c1)*(rt0.c0)), (NOT (rt0.c2)), ((rt0.c2)<>(rt0.c2)), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), ((1.140522886E9)AND(rt0.c2))) FROM rt0 GROUP BY ((((rt0.c1)-(rt0.c1))) BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) AND ((- (rt0.c2)))) HAVING (((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))!=((json_array_length(rt0.c1)))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST((((x''))<((''))) AS NUMERIC)) ORDER BY (((((rt0.c2)>>(rt0.c1))))<>(((rt0.c0 IN ())))) DESC  NULLS LAST, 0.9410725497533556 DESC  NULLS FIRST; -- 0ms;
SELECT ALL CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1, ROW_NUMBER() OVER (), ((rt0.c1) NOTNULL) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((GROUP_CONCAT(rt0.c1))) AND ((rt0.c2 COLLATE NOCASE))), ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) ISNULL), ((((CAST(rt0.c1 AS NUMERIC))OR(((rt0.c2) NOTNULL))))OR(0xfffffffffc314636)), NULL, ((((((((((' u拏fN')OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c1) AND (((rt0.c2) NOTNULL))) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c1) ISNULL))-(SUM(rt0.c1))), json_quote(rt0.c0), 0.7384118795715789, (((((((((rt0.c1 IN (rt0.c2)))OR(((rt0.c0)&(rt0.c2)))))OR(((rt0.c0)-(rt0.c0)))))OR((NOT (rt0.c2)))))AND(((x'7ac6')!=(rt0.c2)))), MAX(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))) FROM rt0 WHERE (((((((((CAST('K[_痻|럧^?w' AS INTEGER))AND((+ (0.9459689182638644)))))AND(((x'') NOT BETWEEN (0X22c9a09) AND (0.5974366502038747)))))AND((('-1')%('qj')))))AND('-661381968' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT '723123310' FROM rt0 GROUP BY TRIM(DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), CAST('656958173' AS INTEGER)), rt0.c0, ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)*(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)) HAVING rtreenode(((rt0.c2)<<(rt0.c1)), (- (rt0.c2))); -- 0ms;
SELECT DISTINCT RANK() OVER (), (((((rt0.c1))>((rt0.c2))))>(MAX(rt0.c2))), (NOT (CASE rt0.c2  WHEN 'Jx~?%' THEN rt0.c0 WHEN rt0.c1 THEN x'8a28' WHEN rt0.c1 THEN 2.06085932E8 END)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c2 THEN (((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN (('-833291688')>=(rt0.c1)) THEN LTRIM(rt0.c2, rt0.c2) WHEN ((rt0.c0)&(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) END FROM rt0 WHERE ((((+ (NULL))) BETWEEN (CAST('-1042583136' AS NUMERIC)) AND ((NOT (x''))))); -- 0ms;
SELECT (((NOT ('1426397555')))||((rt0.c2 IN ()))), ((-1974429277) NOT BETWEEN (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1))) AND (rt0.c0)), (((rt0.c0, 0xffffffff87985c38, rt0.c2, NULL, rt0.c2)) NOT BETWEEN ((rt0.c1, (rt0.c1 IN ()), ((rt0.c2)/(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) AND ((x'0a42', ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), CAST(rt0.c0 AS REAL), ((rt0.c0)>>(rt0.c2)), rt0.c2 COLLATE NOCASE))) FROM rt0 WHERE (((((NULL)OR(NULL)))AND(NULL)) COLLATE RTRIM) ORDER BY ((SQLITE_COMPILEOPTION_USED(0Xe0bac3f)) NOT BETWEEN (CASE WHEN rt0.c2 THEN '(-3)' END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE ((rt0.c1) IS FALSE)  WHEN ((rt0.c1) IS FALSE) THEN rt0.c1 END FROM rt0; -- 1ms;
SELECT rt0.c0 COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL CAST((('') BETWEEN (rt0.c1) AND (rt0.c0)) AS INTEGER) FROM rt0 WHERE (((CAST('' AS TEXT))AND(json_array(-3.44795665E8, '')))); -- 0ms;
SELECT ALL ((((rt0.c2) IS FALSE)) IS TRUE), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE NOCASE, COUNT(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END) FROM rt0 ORDER BY NULL DESC  NULLS LAST, (~ (((rt0.c1)=(rt0.c0)))) DESC, (CAST(rt0.c2 AS NUMERIC) IN ((((rt0.c2))<((-8.56872094E8))))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL COUNT(0.7406884487156459) FROM rt0; -- 0ms;
SELECT CAST((rt0.c2 IN (rt0.c0)) AS TEXT) FROM rt0 WHERE (NULLIF((('䟝''') ISNULL), (((NULL)) BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
SELECT ((((0.5140667172436114)OR(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM, TRIM(DISTINCT ('811577093' IN ()), ((rt0.c0)>>(rt0.c1))), rt0.c1 FROM rt0 WHERE (((((('-1527863422')AND(NULL)))OR(NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((rt0.c0) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (0.5029366389774703)) FROM rt0 WHERE (((((~ (x'fa92'))))>=(((('')+('840660340')))))) ORDER BY (+ ((('0.01205087757923573') NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT ((rt0.c2) IS TRUE), ((((HEX(rt0.c2))AND((NOT (rt0.c0)))))OR(((rt0.c0)-(x'')))), ((((((((TRIM(rt0.c0))AND(((NULL)>(rt0.c2)))))OR(0.22873672779626653)))AND(COUNT(*))))OR((NOT (rt0.c1)))) FROM rt0; -- 1ms;
SELECT (((rt0.c0)<(rt0.c2)) IN ((rt0.c1 IN ()))) FROM rt0 WHERE (CASE ((0xffffffff9105493f) ISNULL)  WHEN (('-573119910') IS TRUE) THEN ((0.4353209509579907)|(1.881188012E9)) END); -- 0ms;
SELECT ALL rt0.c2, ((CAST(rt0.c1 AS NUMERIC)) IS FALSE), LAST_VALUE(((~ (rt0.c2)) IN ())) OVER (), ((rt0.c2 COLLATE RTRIM) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))), (((+ (rt0.c2)))>(GROUP_CONCAT(rt0.c2))) FROM rt0; -- 0ms;
SELECT ((917776379)LIKE(CAST(rt0.c2 AS TEXT))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT ((rt0.c1 COLLATE BINARY) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rtreenode(rt0.c1, rt0.c0))), json_array_length(CASE WHEN x'' THEN rt0.c1 END, ((rt0.c0) ISNULL)), ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) IS FALSE) FROM rt0 WHERE (1.336884674E9); -- 0ms;
SELECT DISTINCT NTILE(QUOTE(rt0.c0)) OVER ( GROUPS BETWEEN (((NOT (rt0.c0)))<>(((rt0.c1)&(rt0.c1)))) FOLLOWING AND  CURRENT ROW) FROM rt0 WHERE ((- (((((0xffffffffd33a4005)AND('513877210')))AND(114590242)))));SELECT ALL CAST(rt0.c0 AS INTEGER) FROM rt0; -- 0ms;
SELECT ALL SUM(rt0.c1), rt0.c0, ((rt0.c2) NOTNULL) FROM rt0; -- 0ms;
SELECT ((((rt0.c2)||(rt0.c2)))<<(rt0.c0)) FROM rt0 WHERE (CAST(CAST(0.3123715721493888 AS BLOB) AS BLOB)); -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS BLOB) FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (x'135de662'))) NOT BETWEEN ('-1649648781') AND (((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND('')))) DESC; -- 1ms;
SELECT DISTINCT CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB) FROM rt0 WHERE (((0.08966453941225905)<=('520328617')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (- (ABS(DISTINCT rt0.c1))), 0.05657352662599102 COLLATE NOCASE, ((((rt0.c0)AND((~ (rt0.c1)))))AND(((rt0.c1)IS(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST((~ (rt0.c2)) AS REAL), CAST((('627204654') IS FALSE) AS NUMERIC), ((((rt0.c0)<<(rt0.c0)))+(0.06381274549088156)) FROM rt0 WHERE (('2080674757' IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c1) IS TRUE) COLLATE NOCASE) OVER ( ORDER BY rt0.c1 DESC  NULLS FIRST) FROM rt0 GROUP BY (NULL IN ()), (~ (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))), NULL HAVING AVG(CHAR(rt0.c2)); -- 0ms;
SELECT DISTINCT CASE ((rt0.c1)||(rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN IFNULL(rt0.c1, rt0.c0) ELSE ((rt0.c0)!=(rt0.c0)) END FROM rt0 WHERE (((((0.7459242503075829) BETWEEN ('2080674757') AND (x'')))%(CAST(0.11988151991200213 AS TEXT)))); -- 0ms;
SELECT DISTINCT (- (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) FROM rt0; -- 0ms;
SELECT ALL (NOT (rt0.c0 COLLATE RTRIM)), TOTAL(CAST(rt0.c2 AS REAL)), rt0.c0 FROM rt0; -- 0ms;
SELECT ALL (~ ((rt0.c2 IN ()))), COUNT(((rt0.c0)|(rt0.c1))) OVER (), ((((rt0.c0 COLLATE RTRIM)OR(((rt0.c0)>(rt0.c1)))))AND((((rt0.c1))<((rt0.c0))))) FROM rt0 GROUP BY ((((rt0.c1)>=(rt0.c2))) BETWEEN (CAST('-1238725342' AS BLOB)) AND ((- (rt0.c1)))) HAVING CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (rt0.c1 IN ()) WHEN (~ (rt0.c0)) THEN (NOT (rt0.c1)) WHEN LIKELIHOOD(DISTINCT rt0.c1, 0.84362153089809) THEN x'' ELSE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) END; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY (rt0.c2 COLLATE BINARY IN (((rt0.c2)IS NOT(rt0.c0)), (rt0.c1 IN ()))) DESC) FROM rt0 WHERE ((((((~ (0.9272669098894747)))AND(0.5935966611700118 COLLATE RTRIM)))OR(LOWER(0.5265862016253892)))) GROUP BY rt0.c2 HAVING rt0.c0; -- 0ms;
SELECT DISTINCT (rt0.c2 COLLATE RTRIM IN ()) FROM rt0 GROUP BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (rt0.c2 COLLATE RTRIM) AND (CAST(rt0.c1 AS REAL))) HAVING ((TRIM(rt0.c0)) NOTNULL); -- 0ms;
SELECT DISTINCT TOTAL(0.011028167437436842) OVER () FROM rt0 WHERE (((((('Dp'))=(('-12753542'))))<>(CAST('0.0' AS INTEGER)))); -- 0ms;
SELECT DISTINCT (~ (TYPEOF(DISTINCT rt0.c2))) FROM rt0 WHERE ((((NULL IN ()))||(((('-|', 0.11223177609729984, '0.9792312053826125', NULL, 'WO7tn')) NOT BETWEEN (('B', 4.53371553E8, 0Xffffffffecf72062, NULL, x'')) AND ((0.5805661196456072, x'', 0Xffffffffb5263ccd, '', NULL)))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2) NOTNULL)) OVER ( ORDER BY CASE WHEN (x'71993be6' IN ()) THEN NULL COLLATE NOCASE END  NULLS LAST) FROM rt0 WHERE (((((((((CASE WHEN '51481148' THEN x'' WHEN -9223372036854775808 THEN x'' WHEN '-1893893611' THEN '223361210' END)AND((((('744298915')OR(0.2760108383549924)))AND(NULL)))))AND(SQLITE_VERSION())))OR(CASE WHEN '-661381968' THEN 0.9247071923486916 ELSE 206085932 END)))OR(0.6058949523061182))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)<=(rt0.c1)))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))))OR(CASE x'9e1e'  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN (rt0.c0)))OR(((rt0.c2)<<(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL ((957441704) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (rt0.c1 COLLATE BINARY)) FROM rt0 ORDER BY CASE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))  WHEN (~ (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE NULLIF(rt0.c1, rt0.c0) END DESC; -- 0ms;
SELECT ALL (~ (x'0fc4')), (((rt0.c0) NOTNULL) IN ((rt0.c2 IN (rt0.c2, rt0.c2)))), (((CAST(rt0.c1 AS INTEGER), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)), MIN(x'', rt0.c2)))!=((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END, CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END, ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))))), (rt0.c2 IN ()), ((COUNT(rt0.c2)) NOT NULL) FROM rt0 WHERE ((((NULL IN ()))<=(CASE x''  WHEN 0.842842152672855 THEN x'' ELSE NULL END))) ORDER BY 'z 勫4.' ASC; -- 0ms;
SELECT DISTINCT (- (rt0.c1)) FROM rt0 WHERE (NULL) ORDER BY CASE WHEN ((rt0.c0) NOT NULL) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) END DESC; -- 0ms;
SELECT DISTINCT ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ()) FROM rt0 WHERE ((CASE 0.38861273333824664  WHEN 0.6016167230459442 THEN '0.41500775579739146' END IN ())) GROUP BY (- (((rt0.c1)GLOB(rt0.c0)))), ((((rt0.c2) NOTNULL))+(json_extract(rt0.c2, rt0.c2, rt0.c2, rt0.c0))), CASE (NOT (rt0.c0))  WHEN 0x2b19fc6e THEN (((rt0.c2))!=((rt0.c1))) ELSE json_array_length(rt0.c1, rt0.c1) END HAVING (((- (rt0.c2))) IS FALSE); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)AND(rt0.c1)))OR(x'8643')))OR(rt0.c1)))AND(rt0.c1))) NOT NULL), (~ (((rt0.c1) BETWEEN ('1318313445') AND (rt0.c1)))), (((rt0.c0 IN ())) BETWEEN (((rt0.c0)<=(NULL))) AND (GROUP_CONCAT(rt0.c1))) FROM rt0 WHERE (LIKELIHOOD((('-547722676') BETWEEN (NULL) AND ('1722098480')), 0.943118471910413)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0 WHERE ((((+ (0.46468903520534766)))>>('' COLLATE BINARY))) GROUP BY CASE RTRIM(rt0.c2)  WHEN ((rt0.c0) ISNULL) THEN rt0.c2 END, ((rt0.c2)IS(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (CASE WHEN rt0.c0 THEN rt0.c1 END)); -- 0ms;
SELECT rt0.c0 FROM rt0 WHERE (((('0b' IN ()))/((((0x79dee571)) NOT BETWEEN ((0.4145158383305425)) AND ((NULL)))))); -- 0ms;
SELECT ((rt0.c1)-(rt0.c0)) COLLATE NOCASE, NTILE((1968555862 COLLATE RTRIM IN ())) OVER ( ORDER BY ((((rt0.c1)>>(rt0.c1)))%(rt0.c2))), ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(rt0.c0)) FROM rt0;SELECT DISTINCT COALESCE(TOTAL(rt0.c1), ((rt0.c0)-(rt0.c0))) FROM rt0 LIMIT -2122995463; -- 0ms;
SELECT DISTINCT (((rt0.c0) IS TRUE) IN ()), ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))AND(MIN(rt0.c2))))AND('399378757')), (((rt0.c1 IN ())) ISNULL) FROM rt0 WHERE (((~ (x'5c2c')) IN ())); -- 0ms;
SELECT ALL CASE CAST(rt0.c2 AS TEXT)  WHEN ((rt0.c1) ISNULL) THEN ((((rt0.c0)OR(0.5642273204318029)))OR(rt0.c1)) ELSE CAST(rt0.c1 AS REAL) END FROM rt0 WHERE ((((((0.49672889664918063)>=('-12753542'))))<>((('' IN (NULL)))))); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c1))) NOT BETWEEN (((rt0.c0)<=(rt0.c0))) AND ((NOT (rt0.c2)))) FROM rt0 WHERE ((NOT (1253742343 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1)AND(rt0.c2)))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))), (((-700561238)) NOT BETWEEN (((- (rt0.c2)))) AND ((CAST(rt0.c0 AS BLOB)))) RANGE ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)OR(rt0.c1 COLLATE BINARY)))OR(0.7745213385380174)) PRECEDING EXCLUDE TIES) FROM rt0;SELECT DISTINCT MAX(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))) FROM rt0 WHERE (''); -- 0ms;
SELECT (+ (((rt0.c2) IS FALSE))) FROM rt0; -- 0ms;
SELECT ALL (((- (rt0.c1)))<<((((('106722974')OR(rt0.c2)))OR(rt0.c0)))) FROM rt0 WHERE ((NOT (((x'') IS FALSE)))); -- 0ms;
SELECT ALL CASE ((rt0.c1)||(rt0.c1))  WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN rt0.c0 COLLATE RTRIM END FROM rt0 LIMIT -269469408 OFFSET 2128529136; -- 0ms;
SELECT PERCENT_RANK() OVER ( ORDER BY CASE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))  WHEN 0.7642499835939702 THEN rt0.c0 ELSE rt0.c1 END  NULLS LAST) FROM rt0 WHERE ((- (NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT SUM(((rt0.c1) BETWEEN (x'6f1d') AND (rt0.c1))) OVER (), ((x'')IS(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))), (((rt0.c2)) BETWEEN ((TYPEOF(rt0.c1))) AND ((rt0.c0 COLLATE BINARY))) FROM rt0 GROUP BY ((LOWER(DISTINCT rt0.c2)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND (((rt0.c0)>=(rt0.c2)))), (((rt0.c1 IN ())) ISNULL), (((rt0.c2 COLLATE NOCASE))<>((((x'')-(rt0.c1))))) HAVING ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c2)/(rt0.c0))) AND (CAST(0.5418004023117875 AS REAL))); -- 0ms;
SELECT ALL CAST(((x'')<=(rt0.c0)) AS INTEGER) FROM rt0 WHERE (CAST((((((((('0.5683159673588363')OR(0.8887291289156098)))AND('1868174633')))AND(NULL)))AND('\w')) AS REAL)); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) ISNULL) FROM rt0 WHERE ((((((0.07484601748538289)GLOB(0.6234506354048006))))>=(((('1318313445') IS FALSE))))); -- 0ms;
SELECT DISTINCT (((rt0.c0, (((rt0.c2, '-421491118', rt0.c2)) BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1))), '+X'))>=((CAST(rt0.c1 AS BLOB), CAST(rt0.c1 AS BLOB), LIKELIHOOD(rt0.c2, 0.1375975193924428)))) FROM rt0 WHERE (((LIKE(0X7020a6ac, NULL)) BETWEEN ((((x''))>(('-12753542')))) AND ((('')IS NOT(0xffffffffb338ce1d))))); -- 0ms;
SELECT CAST((((0.32122123981812534)) BETWEEN ((x'e617')) AND ((rt0.c1))) AS REAL) FROM rt0 WHERE (''); -- 0ms;
SELECT ((((((((0.03011046861073563)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM FROM rt0 WHERE ((+ (CASE WHEN 'sOL3*Hn' THEN x'' END))); -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE (((CAST(0.0494161907824362 AS TEXT)) BETWEEN (0.01690962639253135) AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT ((COUNT(rt0.c2)) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))/(rt0.c0 COLLATE RTRIM)) FROM rt0 WHERE (LOWER(((x'')>(0.3440110012154982)))); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) FROM rt0 LIMIT -1502341689 OFFSET -1762483594; -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((AVG(rt0.c1)))), (((rt0.c2)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((MAX(rt0.c0)))), ((rt0.c1 IN ()) IN ()) FROM rt0 WHERE (x''); -- 1ms;
SELECT DISTINCT FIRST_VALUE(CAST((((rt0.c1, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c2, rt0.c1))) AS NUMERIC)) OVER (), AVG(((rt0.c2) NOTNULL)), (- (((rt0.c2)>>(rt0.c1)))) FROM rt0 ORDER BY ((((rt0.c0 COLLATE RTRIM)AND(((rt0.c0) NOTNULL))))OR(ABS(rt0.c2))) DESC  NULLS LAST; -- 0ms;
SELECT (NOT (((rt0.c0) NOTNULL))) FROM rt0; -- 0ms;
SELECT ALL TRIM(json_array_length(NULL, rt0.c0), (((rt0.c2))<=(('-1533160259')))), (((rt0.c1 IN ())) NOT NULL), (NOT (((rt0.c1)-(rt0.c1)))), ((LIKELIHOOD(DISTINCT rt0.c1, 0.6195346968152899)) IS TRUE), CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) AS INTEGER) FROM rt0 WHERE (((('644334346'))<(('87'))) COLLATE BINARY) GROUP BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c1)); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))/(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR('0.9981384845433717')))) FROM rt0 WHERE (((CASE WHEN '' THEN x'' WHEN x'35ca' THEN 0.9091303621577814 WHEN NULL THEN x'' ELSE NULL END) BETWEEN (((NULL) NOTNULL)) AND ((('Ai') IS FALSE)))); -- 0ms;
SELECT DISTINCT MIN(CASE rt0.c2  WHEN rt0.c1 THEN 51481148 ELSE rt0.c0 END) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ()) FROM rt0 WHERE (NULLIF(DISTINCT LIKELY(DISTINCT 0xaf0b0cc), TRIM(DISTINCT x'5129', '2027687229'))); -- 1ms;
SELECT ALL rt0.c1 FROM rt0 LIMIT 1881188012 OFFSET -1708834602; -- 0ms;
SELECT rt0.c1, ((((rt0.c1)<(rt0.c1))) NOT BETWEEN ((- (rt0.c0))) AND ((- ('0.22257447288902')))), (('-2021877850') IS TRUE) COLLATE BINARY, ((((rt0.c0)OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND ('')))), ((~ (rt0.c2)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((LIKELY(rt0.c1))GLOB((rt0.c2 IN ()))) FROM rt0; -- 2ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (((rt0.c2)<<(rt0.c2))) AND (((rt0.c0)==(rt0.c2)))) FROM rt0 WHERE ((((((((x''))!=(('譟wiX却U㕮ma'))))AND((+ (NULL)))))AND(((0.16308892030145727)>>('-2035886466'))))); -- 0ms;
SELECT ALL ((((((rt0.c1) NOT NULL))OR(0xffffffff95da8527)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM rt0 ORDER BY ((((((rt0.c0)>>(rt0.c1)))OR(ABS(NULL))))AND(((rt0.c0)<>(rt0.c0)))) DESC, (rt0.c1 COLLATE RTRIM IN ()) ASC; -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)|(((((rt0.c2)OR(x'')))AND(rt0.c0)))), ((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c1)>=(rt0.c0))) AND ((NOT (rt0.c1)))), (((rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((((rt0.c1)LIKE(rt0.c1))))) FROM rt0; -- 0ms;
SELECT ALL RANK() OVER (), CAST(rt0.c1 AS TEXT) COLLATE NOCASE, (- ((+ (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL((rt0.c2 IN ()) COLLATE NOCASE) FROM rt0 WHERE ((((((((('-421491118' COLLATE RTRIM)OR('% Sa2dUp' COLLATE BINARY)))OR(CAST(0.5758431072687402 AS INTEGER))))OR((+ (NULL)))))AND((+ (x''))))); -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(rt0.c2) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)<('-386614015')) IN ('968371134')), rt0.c0, COUNT(*) OVER () FROM rt0 WHERE ((~ (NULL)) COLLATE BINARY); -- 0ms;
SELECT ALL (((((rt0.c0, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c1, rt0.c0)))) NOT BETWEEN (((((x'')AND(rt0.c0)))OR(rt0.c2))) AND (x'')) FROM rt0 LIMIT -530043492 OFFSET -746346628; -- 0ms;
SELECT DISTINCT AVG(((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) FROM rt0; -- 0ms;
SELECT (((rt0.c1)) BETWEEN (((NOT (0.3250170183201432)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c2)<<(rt0.c0)), CAST(rt0.c0 AS INTEGER), CHAR(rt0.c1), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (rt0.c0 IN (rt0.c2, rt0.c2)))) AND ((rt0.c2, NULLIF(rt0.c0, rt0.c1), AVG(0Xef83f8c), ((rt0.c1)%(x'6e6f')), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END))), ((((0.9788892779739654)AND(CAST(rt0.c2 AS BLOB))))OR((rt0.c0 IN (rt0.c0)))), ((((rt0.c0)!=(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((rt0.c1 IN (0.10585633623226787)))) FROM rt0 WHERE ((UNLIKELY(0.6566817386114365) IN ((((0x718d366d))<((NULL)))))); -- 0ms;
SELECT DISTINCT LEAD((((0.5960076015474938, rt0.c0, rt0.c2)) BETWEEN (((+ (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c0))))) AND ((((rt0.c2)>=(rt0.c2)), rt0.c0, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))), (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) IN (((rt0.c0)<(rt0.c0)))), rt0.c1) OVER () FROM rt0 WHERE (((0X65dc48eb COLLATE BINARY) NOT BETWEEN ((('Hc_7	<')>=(-503943679))) AND (((NULL)>=(101399443))))); -- 0ms;
SELECT ALL SUM(((rt0.c1)LIKE(rt0.c2))) OVER () FROM rt0; -- 0ms;
SELECT CASE WHEN (((('')AND(rt0.c0)))AND(rt0.c1)) THEN COUNT(rt0.c1) WHEN x'97d8' THEN '71975914' WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE BINARY ELSE TOTAL(rt0.c2) END FROM rt0 WHERE (((((0.319862876851967) NOT BETWEEN (x'edb37261') AND ('T,')))*((NULL IN ())))); -- 0ms;
SELECT DISTINCT (- (rt0.c1)) COLLATE BINARY COLLATE RTRIM FROM rt0 WHERE ((- (CASE WHEN x'' THEN 0.07990882068296301 ELSE 0.3836469168811779 END))); -- 0ms;
SELECT (((rt0.c1 COLLATE RTRIM))>((((rt0.c0)GLOB(rt0.c1))))), '1232791986', ((((((x'')AND(rt0.c2)))OR(rt0.c1))) IS FALSE) FROM rt0 WHERE (((((x'')IS NOT(0X72507ff8)))LIKE(x''))); -- 1ms;
SELECT ALL SUM(rt0.c0) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT UNLIKELY(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))), CAST(rt0.c2 AS BLOB), (((0.17157321951850868, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c0) ISNULL), '\ry', rt0.c1 COLLATE NOCASE)) AND ((((0.4031669480877147)<<(rt0.c2)), ROUND(rt0.c2, rt0.c0), (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) FROM rt0 GROUP BY (((rt0.c2)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) HAVING ((((rt0.c0)AND(rt0.c2)))/(rt0.c2)); -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((0x33a37e02)) AND (('FALSE'))) FROM rt0 WHERE ((~ ('B켷퀄ect'))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0)-(rt0.c0)) AS TEXT), (CAST(rt0.c2 AS INTEGER) IN (((rt0.c0)AND(rt0.c1)))), CAST((rt0.c2 IN ()) AS REAL), rt0.c0, ((NOT (rt0.c0)) IN (CAST(rt0.c1 AS INTEGER))) FROM rt0 WHERE (((('-693328857', -474036163, 0x6461a299)) BETWEEN (((((('rPx\n讣 梉')OR(NULL)))OR(x'')), LTRIM('-617634762'), (0xffffffffde70492a IN ()))) AND (((('1126997532')<=('.c0<w')), ((0X386bc3a9) NOT BETWEEN (NULL) AND (x'')), (0xffffffffa68bb39a IN ()))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2 COLLATE BINARY)AND(x'')))OR(0.2592713305303669)) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) ISNULL) AS BLOB), ((((rt0.c1)AND(rt0.c1))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND ((rt0.c0 IN ()))), CASE ((0.862671805247444) NOTNULL)  WHEN rt0.c0 COLLATE NOCASE THEN ABS(DISTINCT rt0.c2) ELSE ((rt0.c2)IS(rt0.c0)) END FROM rt0; -- 0ms;
SELECT ALL (~ (COUNT(*))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) NOT BETWEEN ((0X5fa0278 IN ())) AND (AVG(rt0.c0))), CASE WHEN COUNT(rt0.c1) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE LIKELIHOOD(rt0.c2, 0.7442821904789427) END, ((rt0.c2) ISNULL) COLLATE RTRIM FROM rt0 ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) END DESC, (((((('f{yX%u') NOTNULL))OR((+ (rt0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) LIMIT 1238412111 OFFSET -1749401613; -- 0ms;
SELECT ALL ((((0.29114706475050334)IS(rt0.c1))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (rt0.c2)) FROM rt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(x'11b1') OVER (), ((((rt0.c2)|(rt0.c2))) NOT BETWEEN ((+ (rt0.c2))) AND (0xffffffff97ba3ff3)), ((((rt0.c1) IS FALSE))IS(NULL)) FROM rt0; -- 0ms;
SELECT ALL TOTAL(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END) OVER () FROM rt0 WHERE (((NOT (-1746622855)) IN ((0.12392262180368208 IN ()), ((((x'')OR(0.10321969684676657)))AND('903674304'))))) ORDER BY ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0 COLLATE NOCASE)))AND(CAST(rt0.c0 AS TEXT))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))AND(CAST('1546346159' AS NUMERIC))) ASC; -- 0ms;
SELECT ALL (+ (((rt0.c1)>>(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 COLLATE NOCASE, (((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c0)))) BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE WHEN rt0.c2 THEN rt0.c0 END)), (((MAX(rt0.c0, rt0.c2, rt0.c1, rt0.c0), CAST(rt0.c1 AS REAL), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))<((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), CAST(rt0.c1 AS TEXT), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))) FROM rt0 WHERE (((((NULL)|(x''))) BETWEEN (x'') AND (((x'')>>(NULL))))) ORDER BY ((((((((((((rt0.c2 COLLATE BINARY)AND(((rt0.c2)==(rt0.c2)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(-1255785267)))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR('0.7020411472114466')))))OR((rt0.c1 IN ()))))AND(rt0.c1)) DESC  NULLS FIRST; -- 0ms;
SELECT (((rt0.c2 IN ())) IS TRUE) FROM rt0 LIMIT -519113299; -- 0ms;
SELECT CAST(((rt0.c1) NOTNULL) AS NUMERIC), ((json_quote(0.4464503597425219))<(rt0.c2 COLLATE BINARY)), (((((rt0.c1))<((NULL))))OR(((rt0.c2)/(x'')))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN (rt0.c0, rt0.c0)) AS NUMERIC) FROM rt0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 END)IS NOT(((NULL)+(NULL)))) FROM rt0 WHERE (CAST((NOT (0.05357823959594832)) AS BLOB)); -- 0ms;
SELECT ALL x'', ((rt0.c1 COLLATE RTRIM)IS NOT((rt0.c1 IN (rt0.c1)))), (((rt0.c1 IN ('<*1*a8S'))) ISNULL) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c2) NOTNULL), rt0.c2, (+ (rt0.c0)))) AND ((NULL, rt0.c0, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((LENGTH(x'')) BETWEEN (ABS(DISTINCT x'')) AND (0x2b19fc6e COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CASE 0.43412795739538435  WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt0.c1)) END, GROUP_CONCAT(CAST(rt0.c2 AS NUMERIC)), COUNT(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0))) FROM rt0 WHERE ((((-204330852)) NOT BETWEEN ((x'')) AND ((x'6b09'))) COLLATE RTRIM); -- 0ms;
SELECT (rt0.c2 COLLATE BINARY IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT LEAD(rt0.c2 COLLATE BINARY, (rt0.c1 COLLATE NOCASE IN ()), ((rt0.c0 COLLATE BINARY) NOT BETWEEN ((- (rt0.c1))) AND (JULIANDAY(x'', rt0.c2, '')))) OVER () FROM rt0 WHERE ((((NULL)) NOT BETWEEN (((0X6e2d8360 IN ()))) AND ((SQLITE_SOURCE_ID())))) GROUP BY (rt0.c0 IN (rt0.c0)) COLLATE NOCASE, ((rt0.c1 COLLATE RTRIM)>>(LIKELY(rt0.c0))), CAST(((rt0.c0) NOTNULL) AS TEXT); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)||(rt0.c0)) THEN CAST(NULL AS REAL) ELSE AVG(rt0.c0) END FROM rt0 WHERE (CAST(CASE WHEN NULL THEN x'' ELSE '-1404593823' END AS INTEGER)) ORDER BY (((+ (rt0.c0)))>((+ (rt0.c0)))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) ISNULL)) NOT BETWEEN (rt0.c1) AND (NULL)), ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1)<=(rt0.c2))) AND (((rt0.c1)>>(rt0.c0)))), x'' FROM rt0; -- 0ms;
SELECT DISTINCT (+ (((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) FROM rt0; -- 0ms;
SELECT SUM((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) OVER () FROM rt0 WHERE ((((((((((('j')OR(NULL)))OR(NULL)))OR(x'')))AND(453371553))) NOT BETWEEN ((('xi㷂J)ᢀ') BETWEEN (0.9041565184130766) AND (NULL))) AND (((NULL)/(0.6533884664399126))))); -- 0ms;
SELECT ALL (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c2)%(rt0.c1)), ((0.6902985896140369)||(rt0.c1)), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))) AND ((x'324b', COUNT(*), rt0.c1))) FROM rt0; -- 0ms;
SELECT ALL (AVG(rt0.c1) IN (((rt0.c1) NOTNULL))) FROM rt0 WHERE ((x'' IN ())); -- 0ms;
SELECT DISTINCT CAST(LAST_INSERT_ROWID() AS BLOB) FROM rt0; -- 0ms;
SELECT ALL AVG(NULL), ((((((rt0.c1))>=((rt0.c1)))))<=((((rt0.c2) ISNULL)))), LEAD((((((rt0.c2, rt0.c0, rt0.c1))=((rt0.c1, rt0.c1, rt0.c0)))) NOT BETWEEN (CAST(0.51569863500153 AS REAL)) AND ('e2')), (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('-833291688')))) NOT BETWEEN ((rt0.c2 IN (rt0.c1, rt0.c0, rt0.c0))) AND (rt0.c0 COLLATE BINARY)), CASE WHEN (NOT (rt0.c2)) THEN '' WHEN (- (rt0.c2)) THEN (rt0.c0 IN (rt0.c2)) WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c0)|(rt0.c0)) WHEN ((rt0.c0)IS NOT(rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN rt0.c2 THEN ((rt0.c0)LIKE(rt0.c2)) ELSE ((rt0.c0) ISNULL) END) OVER (), (NOT ((rt0.c2 IN ()))), CAST(((rt0.c2)>>(rt0.c2)) AS TEXT) FROM rt0; -- 0ms;
SELECT (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))>=((((rt0.c2))=((rt0.c1))))) FROM rt0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT (((rt0.c0, rt0.c1, rt0.c2))=((rt0.c0, rt0.c2, rt0.c2)))) FROM rt0 WHERE (LENGTH(((x'')GLOB('0.09115848080613365')))) LIMIT 537560218 OFFSET -1615065754; -- 0ms;
SELECT ALL (((NOT (rt0.c2)))=(rt0.c0 COLLATE NOCASE)), CASE WHEN (((rt0.c1, rt0.c2, rt0.c0))<((rt0.c0, rt0.c2, rt0.c0))) THEN ABS(rt0.c1) END, (CASE 'Z￿奈[!'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END IN ()) FROM rt0 WHERE (((('1265380777' COLLATE BINARY, CAST('' AS REAL), (('1707168491') NOT NULL), ((((((((x'')OR(NULL)))AND('')))AND('\nsᦣ')))AND(1318313445)), ((x'cbd8') NOT BETWEEN ('-32424843') AND (1.03125533E9))))>(((NOT ('')), (((NULL))>=((0.12421898004423826))), CASE NULL  WHEN x'' THEN NULL END, CASE ''  WHEN NULL THEN 0.0751646645954217 ELSE '(园c!I}e╨(?)' END, ((0X66a52330)*(NULL)))))) GROUP BY ((CAST('0.0896485267367888' AS NUMERIC)) BETWEEN (rt0.c2) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) HAVING (((rt0.c1 IN (rt0.c2)))||(ABS(DISTINCT rt0.c2))) ORDER BY CAST(((rt0.c2) NOTNULL) AS TEXT) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB))<(rt0.c2 COLLATE BINARY)), highlight(((rt0.c2) NOTNULL), (rt0.c0 IN ()), (rt0.c0 IN (rt0.c2)), ((rt0.c1)||(rt0.c0))), (- (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt0;SELECT DISTINCT 0.01205087757923573 FROM rt0 LIMIT -594478264 OFFSET 100270712; -- 0ms;
SELECT (~ (((((rt0.c0)AND('')))AND(rt0.c1)))) FROM rt0 WHERE (((((x'222c')||(x'e7d6'))) IS TRUE)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))+(((rt0.c1)IS NOT(rt0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) BETWEEN (PRINTF(rt0.c1, rt0.c1, rt0.c0)) AND (((rt0.c1) NOT NULL))) FROM rt0 WHERE ((((NULL IN ())) IS FALSE)); -- 0ms;
SELECT ALL ((CAST(0.2968407648893143 AS BLOB)) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c0))<>((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c1)))) AND (CAST(rt0.c0 AS NUMERIC))) FROM rt0 WHERE (((((((211657150)AND('i8')))AND(NULL)))<<(CAST(0.48657610172553245 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT TOTAL(TRIM(rt0.c0, rt0.c2)), ((((((((COUNT(rt0.c1))OR(rt0.c1)))AND(((rt0.c2)GLOB(rt0.c1)))))AND((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN (('1336884674', rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2))))))AND(rt0.c1 COLLATE NOCASE)), rt0.c2 FROM rt0; -- 1ms;
SELECT DISTINCT 0.6038022612712352 FROM rt0 WHERE (((((((((((((((NULL)GLOB(-1.708085489E9)))AND((NOT ('4MX#')))))AND(((((0.9936975837136289)OR('-1186163688')))AND(x'')))))AND(NULL)))OR((('') NOT BETWEEN (NULL) AND (0.2977066229584431)))))AND(((((NULL)AND(x'')))AND(0.008337357116486976)))))AND(((x'') IS FALSE)))); -- 0ms;
SELECT ALL COUNT(((rt0.c2) NOTNULL)) FILTER(WHERE ((((rt0.c2) IS TRUE)) NOT NULL)) OVER (), rt0.c1, rt0.c2 FROM rt0 WHERE ((((('1318313445')OR(x'')))>((('m^[') ISNULL)))); -- 0ms;
SELECT TYPEOF(rt0.c0 COLLATE RTRIM), ((((rt0.c2)AND(rt0.c1))) IS FALSE), ((CAST(rt0.c1 AS TEXT))-(((rt0.c2)<<(rt0.c0)))) FROM rt0 ORDER BY CAST(rt0.c2 AS REAL) COLLATE BINARY ASC  NULLS LAST, (+ ((+ (rt0.c2))))  NULLS LAST; -- 0ms;
