-- Time: 2024/06/07 09:22:15
-- Database: database7
-- Database version: 3.40.0
-- seed value: 2855042107
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, c5, c6); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c6, c0)=(x'', '-1688571190', '9cW') WHERE (((((rt0.c4)) NOT BETWEEN (('983382910')) AND ((rt0.c0)))) NOTNULL); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4, c2) VALUES (NULL, '', -1.68857119E9); -- 1ms;
ANALYZE; -- 3ms;
INSERT OR REPLACE INTO rt0(c0, c3) VALUES (NULL, '1253083567'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c4, c5, c0, c6) VALUES (NULL, '', 0xffffffffa20f0b69, 0.6612444558100568, 0X35d11a85, 0.9715313261689474); -- 0ms;
INSERT OR IGNORE INTO rt0(c6, c5, c3, c2, c0) VALUES (x'354d', 0.6041149923496164, NULL, '', '1746118860'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(NULL) WHERE CAST((NOT (rt0.c6)) AS TEXT); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c6, c6)=(0.6041149923496164, NULL); -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=('') WHERE ((((((((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c4)))AND((+ (rt0.c4)))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET c1=0.6041149923496164; -- 1ms;
REINDEX  rt0; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c5, c0)=('-81761854', 0.7105166682516967); -- 1ms;
PRAGMA secure_delete; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT rt0 SET c5=0.19354079454965467; -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=NULL, c3='902896261'; -- 1ms;
PRAGMA main.cache_spill; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1576072343 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-511293992'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR FAIL INTO rt0 VALUES (NULL, 0.6253147741956113, x'5f6b', '[L', x'', '0.6253147741956113', 1746118860), (NULL, 0.9041946053309549, NULL, x'fb1f382b', NULL, '1746118860', x'a727'), (NULL, NULL, 1710211661, -888053971, 0.6709707591603025, NULL, x''), (x'', NULL, 0.8699869145884369, 'l覯曚n弭', 1837746855, NULL, NULL), (0.08510289627699108, 2073633869, 'H-UPN\r', NULL, NULL, NULL, -1.68857119E9); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c4, c2, c6, c3, c5, c0) VALUES (x'9c06', NULL, '1253083567', 0.6142984963727958, '', x''); -- 1ms;
INSERT OR IGNORE INTO rt0(c6, c2, c0, c4, c1, c3) VALUES (0X4ab089af, 'W41{m2rq', 'e8', '2073633869', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c4) VALUES (NULL, x'', 'K1'); -- 3ms;
UPDATE rt0 SET (c5, c6, c2)=(NULL, NULL, '1P(o'); -- 1ms;
INSERT OR IGNORE INTO rt0(c6, c4, c5, c2, c3, c0, c1) VALUES (NULL, NULL, NULL, -1688571190, '0.6253147741956113', 0Xfffffffffb2069c2, x''), (0.6142984963727958, 0.9389084873718055, 0.8630111206570016, 0X19fb84c3, '\n.''E-n9', NULL, NULL), (NULL, '0.9715313261689474', 'D''zIm', x'', '', '', x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.wal_autocheckpoint = -4600734064613130201; -- 0ms;
REINDEX RTRIM; -- 0ms;
DELETE FROM rt0; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR ABORT rt0 SET (c6)=(1.710211661E9) WHERE ((CAST(rt0.c2 AS BLOB))<<(((rt0.c0) NOTNULL))); -- 0ms;
PRAGMA main.secure_delete = true; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1, c5, c3) VALUES ('', NULL, '1999590309', NULL), ('1755067980', NULL, 0.09752468072542819, '-1576072343'), (NULL, ((((0.4482094715971491)||('')))GLOB(NULLIF(271228195, 'd'))), 4.35913923E8, '?E'); -- 0ms;
INSERT OR FAIL INTO rt0(c6, c1) VALUES ('葧㙌wDTuL꣌', 0.6253147741956113); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c6, c0, c4) VALUES (x'', '0.7105166682516967', '⏽]'), ('983382910', x'', 1.74611886E9), (x'', NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ((~ (((((0.6880967080923637)OR(NULL)))OR(NULL)))), NULL, 0.5088559785812642, '0.6612444558100568', 0.13185069145064754, 2.71228195E8, 0.9956248250592942); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c4) VALUES (0.5187310673175396), (x''), (NULL); -- 1ms;
UPDATE rt0 SET c2=NULL WHERE (- (CASE rt0.c5  WHEN rt0.c6 THEN rt0.c2 ELSE rt0.c6 END)); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c5)=(-8.88053971E8); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c0, c5)=(-1634583370, 'W41{m2rq', 902896261) WHERE LIKELY(DISTINCT ((rt0.c4)/(rt0.c4))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt0 SET (c4, c5)=(x'', '1912007211') WHERE ((rt0.c2)/(rt0.c2)) COLLATE NOCASE; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 TEXT ); -- 1ms;
UPDATE OR IGNORE rt0 SET c6='983382910', c0=NULL, c0=NULL WHERE (NOT (((rt0.c4) IS TRUE))); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 13ms;
UPDATE OR IGNORE vt0 SET c0=0.18899892518746264 WHERE CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)<<(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-1859016849); -- 0ms;
UPDATE OR IGNORE t0 SET c0='', c0='-1084437440', c0=0.9956248250592942; -- 0ms;
REINDEX  rt0; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(0Xffffffff80633b22, NULL) WHERE (- ((+ (t0.c0)))); -- 0ms;
UPDATE t0 SET c0=x'' WHERE ((((((((((t0.c0)>(t0.c0)))AND(DATETIME(t0.c0, 0.6268791898254092, t0.c0))))AND(x'')))OR(CASE t0.c0  WHEN t0.c0 THEN 8.06913127E8 ELSE t0.c0 END)))OR(CAST(t0.c0 AS BLOB))); -- 1ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN (((t0.c0)<(t0.c0)))); -- 0ms;
ANALYZE; -- 0ms;
CREATE UNIQUE INDEX i94 ON t0(HEX(DISTINCT TRIM(DISTINCT c0, c0)) ASC) WHERE (CAST(c0 AS NUMERIC) IN ()); -- 0ms;
VACUUM main; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 4ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.8699869145884369, NULL) WHERE (vt0.c0 IN ()) COLLATE BINARY; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1014359348,9');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('-1634583370'); -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c0, c1, c5, c2, c4, c6) VALUES (-1490253161, NULL, 0xffffffff8d59944f, '', 1.75506798E9, NULL, 0.27966770618411096); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT IFNULL(ABS(rt0.c6), (+ (t1.c0))) FROM rt0 WHERE (((((0.9350487726716192)%('2073633869'))) BETWEEN ((0.16276342507420882 IN (0.9177140068037999, 0.2369381087576642))) AND (((('9223372036854775807')) NOT BETWEEN ((1755067980)) AND ((0.5840251670414979))))));SELECT ALL CAST(0.5341571941060623 AS REAL) FROM rt0, t1, vt0 WHERE (((NULL) NOT BETWEEN (0.9041946053309549) AND (0.2407705371650175)) COLLATE RTRIM) ORDER BY ((((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c0)))OR(rt0.c4 COLLATE BINARY)), ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c6)))<(((rt0.c0) IS FALSE))) ASC  NULLS FIRST LIMIT 474449040 OFFSET 1122059340; -- 0ms;
SELECT ALL ((rt0.c3)-(NULL)) FROM t1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((0.4291037102417291)>=('0.6612444558100568' COLLATE NOCASE)) FROM vt0 CROSS JOIN rt0 ON ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE WHEN rt0.c5 THEN NULL ELSE rt0.c0 END)); -- 0ms;
SELECT (+ (SUM(t1.c0))) FROM rt0, t1 WHERE ((+ (((((x'')AND(0X845c387)))OR(''))))) ORDER BY (- (((rt0.c3)<(rt0.c5))))  NULLS LAST LIMIT 1338872233 OFFSET -7897407; -- 1ms;
SELECT ALL CASE WHEN 0.4073725142674771 THEN (~ (rt0.c3)) WHEN ((0Xffffffff9b5a72ca) BETWEEN (rt0.c4) AND (vt0.c0)) THEN ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN '-F.H*4u⅕' THEN ((t1.c0) IS TRUE) END, (((NOT (rt0.c1)))+((rt0.c0 IN ()))), DENSE_RANK() OVER ( RANGE  CURRENT ROW) FROM rt0, t1, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c0)+(((rt0.c0)&(rt0.c1)))), highlight((((rt0.c6, rt0.c4, rt0.c5))<=((rt0.c3, rt0.c6, NULL))), (+ (rt0.c5)), TOTAL(t1.c0), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c6 END), rt0.c5 FROM t1 WHERE (CAST(((x'1a18')LIKE('983382910')) AS BLOB)) LIMIT 560473741;SELECT DISTINCT ((((rt0.c6)<=(rt0.c6)))AND(((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c1)))AND(rt0.c0)))AND(t1.c0)))) FROM vt0 WHERE ((('') BETWEEN (CAST(0.06999741562129191 AS BLOB)) AND (((x'') NOT BETWEEN (x'') AND (NULL)))));SELECT ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (((((((((t1.c0)OR(rt0.c6)))AND(rt0.c5)))AND(t1.c0)))OR(vt0.c0)))) FROM t1, vt0 WHERE (((((x'')!=(''))) NOTNULL));SELECT ALL (~ ((~ ('''')))), CAST('-511293992' AS NUMERIC), vt0.c0, '548232828' COLLATE BINARY, (x'' IN (GROUP_CONCAT(t1.c0))) FROM rt0 LIMIT 1432032676;SELECT TOTAL(rt0.c1) OVER (), (((((rt0.c0, x'0046', rt0.c0))<((rt0.c2, rt0.c5, NULL)))) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3))) AND (rt0.c3)), ((NULL)<=(((rt0.c0)|(rt0.c5)))) FROM t1, vt0;SELECT DISTINCT MAX((((rt0.c0))<((vt0.c0)))), ((((((((((((((rt0.c6)OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c6 END) AND (CAST(rt0.c1 AS TEXT))), TOTAL(ROUND(rt0.c3, rt0.c5)), CASE CASE rt0.c5  WHEN t1.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c5 WHEN rt0.c5 THEN vt0.c0 END  WHEN ((t1.c0) IS TRUE) THEN ((rt0.c1) NOT BETWEEN ('1438507696') AND (rt0.c3)) WHEN ((rt0.c6)IS(rt0.c1)) THEN (- (rt0.c6)) WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)) END, FIRST_VALUE(ABS(rt0.c4) COLLATE NOCASE) OVER () FROM rt0, vt0, t1 WHERE (('0.8630111206570016' COLLATE RTRIM IN ((NULL IN (0x689c364c))))) ORDER BY (- (0x42e1444c)), (~ (((rt0.c2)&(rt0.c6)))) DESC LIMIT 1842586938;SELECT DISTINCT TOTAL(((((rt0.c4)AND(t1.c0)))AND(rt0.c3))) OVER () FROM vt0, rt0;SELECT DISTINCT t1.c0 FROM rt0;SELECT '꣌O	'',ꘪ㾎' FROM rt0 WHERE (LIKE(((-940495237) NOT BETWEEN ('271228195') AND (0.5212588734943421)), ((x'')GLOB(x'')), 'g')); -- 0ms;
SELECT (((t1.c0 IN ())) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((t1.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) FROM rt0, vt0 WHERE ((((+ (NULL)))%(((('-2020958798', 'u駐!w', NULL)) NOT BETWEEN ((x'b876', '㭾L', 'EO')) AND ((0Xffffffffca832ea4, 0.8217959490051016, NULL)))))) ORDER BY CASE ((rt0.c1)||(rt0.c0))  WHEN rt0.c5 THEN CAST(rt0.c4 AS REAL) ELSE (~ (x'c4b4')) END  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END)) AND (((NOT (rt0.c5)))));SELECT LOWER(t1.c0) FROM rt0 WHERE ((((((('747905365')AND(NULL)))OR(NULL)))>=(CAST(NULL AS NUMERIC)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c6)IS NOT(rt0.c1)))) AND (((rt0.c0 IN ('-1764874730', rt0.c1))))) DESC  NULLS LAST;SELECT DISTINCT ((((((t1.c0)OR(vt0.c0)))AND(((rt0.c0) ISNULL))))OR(((rt0.c4) NOTNULL))) FROM t1;SELECT DISTINCT ((CASE WHEN '-1815738387' THEN t1.c0 WHEN rt0.c0 THEN rt0.c5 WHEN x'20dcae97' THEN x'' END)>>(CAST(rt0.c3 AS REAL))), MAX((((rt0.c6))=((rt0.c6)))), AVG(0x2405ae4 COLLATE RTRIM) COLLATE BINARY FROM t1, vt0, rt0 WHERE ('킨'); -- 0ms;
SELECT t1.c0, GROUP_CONCAT(((rt0.c2) NOTNULL)), (((((rt0.c6 IN ()))OR(CASE WHEN vt0.c0 THEN rt0.c3 END)))OR(((rt0.c6) NOT NULL))) FROM vt0 WHERE ((((((('') NOT BETWEEN ('2124861608') AND ('-1396234820')))OR(ABS(''))))AND((x'' IN ()))));SELECT DISTINCT CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (t1.c0)) THEN CASE rt0.c4  WHEN rt0.c5 THEN x'959a' END WHEN LIKELY(rt0.c2) THEN ((((((((rt0.c6)AND(rt0.c1)))AND(vt0.c0)))AND('>k')))OR(rt0.c4)) WHEN rt0.c0 COLLATE BINARY THEN (rt0.c5 IN ()) ELSE ((rt0.c6) NOT BETWEEN (rt0.c2) AND (rt0.c6)) END FROM t1 WHERE ((((((- (x'')))AND((((((((('')AND(0.5927657857978758)))OR(x'')))OR(0.14373428695217205)))AND(x'')))))AND(((0.3503116332185062)*(0.7404130218934556))))) ORDER BY ((((rt0.c3) NOT NULL))>=(((rt0.c0)>>(NULL)))) DESC LIMIT -1113121785;SELECT ALL ((((rt0.c1) NOTNULL))||(((((((((rt0.c3)OR(NULL)))OR(rt0.c3)))AND(rt0.c2)))OR(NULL)))), (('H-UPN\r')<=(rt0.c3)), rt0.c6 FROM vt0;SELECT DISTINCT (- (rt0.c2)) FROM t1 WHERE (((NULL COLLATE RTRIM)<(CAST('' AS INTEGER))));SELECT ((((((rt0.c4) IS FALSE))OR(CAST(rt0.c3 AS INTEGER))))OR(CAST(rt0.c0 AS REAL))) FROM vt0;SELECT ALL ((((rt0.c2)OR(rt0.c1)))OR(NULL)) COLLATE RTRIM COLLATE BINARY FROM vt0, rt0 FULL OUTER JOIN t1 ON ((rt0.c0) IS TRUE) WHERE ((+ (((0.5840251670414979)>=(''))))); -- 0ms;
SELECT DISTINCT AVG(((rt0.c5) ISNULL)) FROM vt0, rt0 WHERE (CASE WHEN (('|%#)')IS(9.8338291E8)) THEN 1428365062 WHEN (- (0.411914982794225)) THEN CAST('-1859016849' AS NUMERIC) WHEN ('-1815738387' IN (x'')) THEN x'' COLLATE RTRIM ELSE CAST('723218169' AS TEXT) END); -- 0ms;
SELECT ((vt0.c0)/(rt0.c3)) COLLATE NOCASE, ((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c4) AND (CASE WHEN t1.c0 THEN rt0.c3 END)), GROUP_CONCAT(rt0.c3), LOWER(rt0.c1 COLLATE BINARY), ((t1.c0) IS FALSE) COLLATE BINARY FROM t1, rt0 WHERE (CAST((+ ('-1490253161')) AS TEXT));SELECT (((rt0.c4)) BETWEEN (((NULL IN ()))) AND ((x''))) FROM t1 WHERE (LOWER(DISTINCT CASE 0Xffffffffef60c9c1  WHEN NULL THEN -1.923509169E9 WHEN 0.5546716197448252 THEN 0.13185069145064754 WHEN -1718842622 THEN '-2140980446' ELSE x'05b6fa6d' END));SELECT '%minutesm*a' COLLATE BINARY FROM t1, vt0 NOT INDEXED WHERE (('' COLLATE NOCASE IN (((-1e500)%(''))))); -- 0ms;
SELECT DISTINCT (((rt0.c3)<=(rt0.c2)) IN (rt0.c6)), ((((((((((x'c1b1')OR(t1.c0)))AND(rt0.c2)))AND(rt0.c6)))AND(rt0.c4))) NOTNULL), rt0.c4 FROM vt0 LIMIT -1287181364;SELECT DISTINCT GROUP_CONCAT((+ (rt0.c5))) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS) FROM t1;SELECT ALL t1.c0 FROM rt0, t1, vt0; -- 0ms;
SELECT (((rt0.c1 COLLATE NOCASE))=((((rt0.c2) BETWEEN (t1.c0) AND ('348343706'))))), ((((NOT (rt0.c3))))>((CAST(rt0.c1 AS INTEGER)))), COUNT(((rt0.c6)LIKE(vt0.c0))) FROM vt0 WHERE ((((((NULL))==((NULL))))|(((x'8ab8') ISNULL))));SELECT 1364827841, TOTAL(rt0.c0) OVER (), ((rt0.c6)>('-888053971')) FROM vt0 WHERE (CAST(CAST(-286092062 AS INTEGER) AS TEXT)) GROUP BY ((rt0.c0 COLLATE NOCASE)&((((rt0.c6, rt0.c5, vt0.c0))==((t1.c0, rt0.c3, rt0.c2)))));SELECT DISTINCT CAST((+ (rt0.c3)) AS REAL) FROM vt0, t1, rt0; -- 0ms;
SELECT ALL ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c5)))OR(vt0.c0)) COLLATE BINARY, (LIKELY(DISTINCT rt0.c3) IN ((((vt0.c0))>((rt0.c5))), (NOT (vt0.c0)))), (json_array_length(rt0.c6) IN ()) FROM vt0;SELECT CAST(((t1.c0)&(rt0.c4)) AS INTEGER) FROM t1, rt0, vt0 WHERE ((((CAST(0.45527525846271055 AS BLOB)))<=((((NULL)<<(-958325648)))))); -- 0ms;
SELECT DISTINCT (SUM(t1.c0) IN ()), (~ (LOWER(DISTINCT rt0.c2))), rt0.c0 FROM rt0, vt0; -- 1ms;
SELECT DISTINCT MIN(813380574) FROM rt0; -- 0ms;
SELECT DISTINCT ((x'') NOT BETWEEN (((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c4))) AND (((vt0.c0) NOTNULL))) FROM vt0, t1 WHERE (CAST('1585332815' AS INTEGER));SELECT ALL CASE WHEN (rt0.c6 IN ()) THEN SUM(rt0.c0) WHEN ((rt0.c5)==(t1.c0)) THEN ((vt0.c0) NOTNULL) WHEN 0.1477101385580849 THEN CASE rt0.c5  WHEN rt0.c6 THEN '#Y' ELSE rt0.c0 END END FROM t1 LEFT OUTER JOIN rt0 ON (((rt0.c6)) NOT BETWEEN ((x'74d1')) AND ((((rt0.c5)*(vt0.c0))))) WHERE (((CASE WHEN '298731289' THEN NULL ELSE NULL END)<<(((0Xfffffffff49c716d)&(NULL))))) GROUP BY (NOT ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))));SELECT DISTINCT (((((NULL))<((rt0.c3))))=(rtreenode(t1.c0, rt0.c5))), ((((rt0.c2)%(rt0.c5))) BETWEEN (vt0.c0) AND (((rt0.c1) IS FALSE))), (((rt0.c3, t1.c0, NULL)) NOT BETWEEN ((HEX(DISTINCT rt0.c2), x'', json_type(rt0.c4))) AND (('qE_8 O,p', LIKELY(rt0.c6), ((rt0.c3)<<(rt0.c5))))) FROM vt0, t1;SELECT DISTINCT ((CAST(rt0.c0 AS TEXT))||(CASE rt0.c3  WHEN rt0.c5 THEN vt0.c0 WHEN rt0.c2 THEN t1.c0 WHEN '277147393' THEN rt0.c1 ELSE rt0.c2 END)), (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN ()), ((((((((rt0.c6)OR(vt0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY FROM t1, vt0 WHERE ((((((('-1616647455') BETWEEN (x'') AND ('')))AND((+ (0.06985655346885278)))))AND((('-404779547') NOT BETWEEN (0.411914982794225) AND (-1616348820)))));SELECT ALL LIKE(((rt0.c2) NOTNULL), ((rt0.c3) BETWEEN (x'd1b4') AND (rt0.c2)), 'e') FROM vt0, rt0, t1; -- 1ms;
SELECT DISTINCT (NOT (CAST(t1.c0 AS TEXT))), LEAD(((CASE rt0.c3  WHEN rt0.c4 THEN 583606531 WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c5 END)/((((rt0.c2, rt0.c1, rt0.c3))<((rt0.c1, rt0.c4, rt0.c1))))), (((rt0.c5)+(rt0.c0)) IN ((~ (rt0.c0)))), 0.007572438535390691) OVER (), COUNT(*) FILTER(WHERE UNLIKELY(DISTINCT ((rt0.c6)||(vt0.c0)))) OVER () FROM rt0 WHERE ((~ (((NULL)*(1.38789767E8)))));SELECT DISTINCT CASE WHEN COUNT(t1.c0) THEN ((('86502431', vt0.c0, t1.c0)) BETWEEN ((rt0.c5, -1287181364, vt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c1))) END FROM vt0, rt0;SELECT CAST(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c0 END AS TEXT), ((((((rt0.c3)AND(t1.c0)))OR(rt0.c6))) NOT BETWEEN (SUM(t1.c0)) AND ((((rt0.c0, t1.c0, rt0.c1, rt0.c6, t1.c0))>((rt0.c0, rt0.c3, NULL, t1.c0, rt0.c2))))), (((rt0.c3 IN (rt0.c5)))LIKE(((rt0.c4)LIKE(rt0.c3)))) FROM t1 WHERE (((((x'7bf0' COLLATE NOCASE)OR(((-2131813876)==('')))))AND(((x'')||('-1173254096'))))) LIMIT -1923509169 OFFSET 2124861608;SELECT (SUM(rt0.c3) IN ()) FROM vt0 WHERE (CAST('-735392242' AS REAL)); -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0, t1, rt0 INDEXED BY i94;SELECT CASE ((rt0.c5) ISNULL)  WHEN CASE WHEN rt0.c5 THEN t1.c0 ELSE rt0.c1 END THEN ((rt0.c6)!=(rt0.c6)) ELSE rt0.c0 END FROM t1, rt0, vt0 WHERE (((CAST('H^5J4cX' AS REAL))>>(((0x4ae41618) NOTNULL)))); -- 0ms;
SELECT ((((rt0.c0)%(vt0.c0)))IS(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN x'' WHEN t1.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END)) FROM rt0, vt0 WHERE (x'') LIMIT 1993356134 OFFSET 86502431 UNION SELECT COUNT(*) FROM vt0 ORDER BY (((t1.c0)==(rt0.c6)) IN ((- (rt0.c2)), CAST(rt0.c2 AS BLOB))) ASC  NULLS LAST, ((((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)))AND(0.9321771006643114)))OR(((rt0.c4)!=(rt0.c5)))) ASC  NULLS LAST;SELECT DISTINCT (rt0.c6 IN ()) FROM rt0, t1; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT rt0.c0) COLLATE RTRIM FROM t1, rt0, vt0; -- 0ms;
SELECT rt0.c3 FROM vt0 WHERE (((((TRIM(DISTINCT x'213e'))OR((~ (0x4ee277e7)))))OR(NULL))) ORDER BY CAST(((rt0.c4)-(t1.c0)) AS INTEGER), ((((((rt0.c5)AND(rt0.c0)))OR(rt0.c1))) ISNULL)  NULLS FIRST;SELECT ALL CASE WHEN NULL THEN ((rt0.c4) NOTNULL) END FROM vt0, rt0, t1; -- 0ms;
SELECT ((RTRIM(rt0.c5))OR(RTRIM(vt0.c0))) FROM t1, rt0, vt0 GROUP BY (((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))) NOTNULL) HAVING ((((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c2))) NOTNULL); -- 0ms;
SELECT DISTINCT (((rt0.c3) NOT NULL) IN (CAST(rt0.c1 AS TEXT))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c0 COLLATE RTRIM THEN ((((rt0.c3)OR(rt0.c2)))OR(rt0.c5)) END FROM vt0, rt0;SELECT ALL (+ (((((rt0.c0)AND(rt0.c1)))OR(rt0.c4)))) FROM t1, rt0, vt0 LIMIT -1815738387; -- 0ms;
SELECT ALL vt0.c0 FROM rt0, t1 GROUP BY CASE WHEN vt0.c0 THEN ((rt0.c4)&(rt0.c3)) WHEN 0Xf8c31fa THEN CAST(rt0.c1 AS TEXT) WHEN (- (rt0.c4)) THEN ((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c5)) ELSE CASE WHEN t1.c0 THEN rt0.c1 ELSE rt0.c6 END END, (((((vt0.c0))=(('1585332815'))))LIKE(LIKELY(rt0.c0))), rt0.c1 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE;SELECT DISTINCT ((GROUP_CONCAT(rt0.c2)) NOT BETWEEN ((('B') NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND ((((rt0.c1))<((rt0.c1))))), (((rt0.c0) IS TRUE) IN ()), CAST(((((rt0.c6)AND(rt0.c5)))OR(rt0.c4)) AS NUMERIC) FROM vt0 WHERE ((((0.9061171487490036)) BETWEEN (((~ (0.9766473254204087)))) AND (((~ (NULL))))));SELECT NULL FROM vt0 WHERE (4.35913923E8); -- 0ms;
SELECT DISTINCT (((TIME(rt0.c3, rt0.c6, t1.c0)))<>((((rt0.c1)!=(rt0.c4))))) FROM vt0, rt0, t1 WHERE (((((0.14448929427590518, '㭾l', 2057883385, 0X5637af35, 0.5632219725125498)) BETWEEN ((x'', 0.9214849089085945, 0.6582232558631722, '-2140980446', -618805869)) AND ((0xffffffffc57cd398, '0.4291037102417291', x'', NULL, '348343706'))) IN (((x'') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((COUNT(rt0.c0))||(rt0.c1)) FROM t1, rt0, vt0 WHERE (CHANGES()); -- 0ms;
SELECT ALL json_type(((rt0.c2)IS(rt0.c5))) FROM vt0, rt0, t1; -- 0ms;
SELECT DISTINCT CAST(JULIANDAY(t1.c0, rt0.c0, rt0.c0) AS REAL), (((((rt0.c3, t1.c0, rt0.c3))<((-1.815738387E9, rt0.c0, rt0.c2))))||('F')), SUM((rt0.c4 IN ())) OVER () FROM t1 WHERE ((~ (((NULL)|(0.19487396622231778)))));SELECT ((((((rt0.c1)AND(rt0.c2)))OR(NULL))) IS FALSE) FROM t1, vt0 WHERE ((+ (((NULL)==(-1.173254096E9)))));SELECT DISTINCT rt0.c4, ((((rt0.c6) BETWEEN (rt0.c0) AND (rt0.c6))) IS FALSE), ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c6 END)OR(((('-541169434'))!=((rt0.c6))))) FROM vt0, t1, rt0 GROUP BY ((((rt0.c3 IN ())))>((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))))), rt0.c1, (- (((rt0.c5) BETWEEN (NULL) AND (rt0.c5)))), (((((rt0.c6)>>(rt0.c4)), ((rt0.c5) BETWEEN (rt0.c6) AND (rt0.c3)), (((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c6)))))<=((CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END, (NOT (rt0.c0)), NULL))), ((CAST(vt0.c0 AS INTEGER))/(((((((((rt0.c6)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c6)))AND(rt0.c6)))); -- 1ms;
SELECT ((((((rt0.c4)LIKE(rt0.c1)))AND(CAST(0Xffffffffa1cf942a AS NUMERIC))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE -80292117 END)) FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT (NOT (rt0.c2)) COLLATE NOCASE, (+ (((x'') BETWEEN (rt0.c4) AND (rt0.c2)))), ((((((((COUNT(*))AND((- (rt0.c0)))))OR((~ (rt0.c1)))))OR((rt0.c6 IN ()))))OR(COUNT(vt0.c0))) FROM rt0, vt0, t1 WHERE (((((- (NULL)), ((0.9611374694387419)AND(x'')), (((x'')) BETWEEN ((NULL)) AND (('0.9715313261689474')))))<>((((0.4452564121948115) NOT BETWEEN (1100528285) AND (x'af18')), (0.09752468072542819 IN (x'', '-2140980446')), ((0.5345812029259512)>=(0xffffffffe72df107)))))); -- 2ms;
SELECT ((CAST(vt0.c0 AS REAL)) BETWEEN (((rt0.c5)||(rt0.c4))) AND (GROUP_CONCAT(rt0.c4))) FROM vt0, t1 WHERE ((('1993356134')=((('') NOT BETWEEN ('513007256') AND ('-62630762')))));SELECT TOTAL(((rt0.c1) BETWEEN (rt0.c6) AND (rt0.c2))) OVER () FROM vt0, rt0, t1 GROUP BY (((((t1.c0) BETWEEN (t1.c0) AND (rt0.c1))))==((rt0.c3))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), ((CAST(vt0.c0 AS TEXT)) BETWEEN ((rt0.c3 IN ())) AND (CAST(rt0.c2 AS REAL))), ((((((rt0.c6)AND(t1.c0)))OR(rt0.c5))) IS TRUE) FROM rt0;SELECT DISTINCT RANK() OVER () FROM vt0, rt0, t1 WHERE (((x'b644') NOT NULL)); -- 0ms;
SELECT (((vt0.c0 IN ())) ISNULL) FROM vt0 WHERE ((~ ((NOT (1918837757))))); -- 0ms;
SELECT DISTINCT json_array(CAST(rt0.c0 AS INTEGER), CASE WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END) FROM t1, rt0, vt0 WHERE (((0.30041043552200764)OR((('1227515489') NOT BETWEEN (NULL) AND (x''))))) ORDER BY ((((rt0.c4) IS FALSE))||(CASE t1.c0  WHEN rt0.c4 THEN 4.35913923E8 ELSE rt0.c2 END)); -- 2ms;
SELECT DISTINCT ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c6))) BETWEEN (x'b0b9') AND (t1.c0 COLLATE RTRIM)), ((t1.c0 IN (t1.c0)) IN ()), 0.15037150713604086 FROM t1, rt0; -- 0ms;
SELECT ALL SUM(((((rt0.c5)OR(t1.c0)))OR(vt0.c0))) OVER (), x'', IFNULL(AVG(rt0.c4), (rt0.c1 IN (rt0.c4))), LIKELY(DISTINCT ((rt0.c4) ISNULL)), CASE ((vt0.c0)&(t1.c0))  WHEN ((rt0.c3)<>(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c5)) END FROM vt0 ORDER BY CASE WHEN (NOT ('0.9350487726716192')) THEN CAST(rt0.c1 AS BLOB) ELSE ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c6)) END  NULLS FIRST;SELECT DISTINCT ((CAST(NULL AS INTEGER))<>((rt0.c5 IN ()))) FROM t1, vt0, rt0 WHERE ((((((x'e6f0', 4.35913923E8, NULL)) BETWEEN (('260846074', NULL, 5.48232828E8)) AND ((NULL, '', NULL)))) NOT NULL)); -- 0ms;
SELECT ((rt0.c5) BETWEEN (rt0.c2) AND (COUNT(rt0.c6))) FROM rt0, t1, vt0; -- 0ms;
SELECT NTH_VALUE(vt0.c0, (((((vt0.c0))=((vt0.c0))))=(((vt0.c0) IS FALSE)))) OVER () FROM vt0 WHERE ((((((('-1718842622')OR(NULL)))AND(x''))) BETWEEN (((x'7c32') NOTNULL)) AND (((0.002183716857926843)||('UO'))))); -- 0ms;
SELECT SUM(CASE WHEN t1.c0 THEN rt0.c2 ELSE vt0.c0 END) FILTER(WHERE NULLIF(DISTINCT ((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3)), rt0.c0)) OVER () FROM rt0;SELECT DISTINCT (((t1.c0, t1.c0, rt0.c2)) BETWEEN ((rt0.c3 COLLATE NOCASE, ((rt0.c2) IS TRUE), x'67ba')) AND (((- (t1.c0)), 'ㇺxJ\n', t1.c0 COLLATE NOCASE))) FROM rt0, t1, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c0)||(rt0.c2)) COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 COLLATE NOCASE AS INTEGER), ((((rt0.c4)<=(rt0.c6)))IS(((((vt0.c0)OR(rt0.c0)))AND(rt0.c5)))), CAST(((rt0.c5) ISNULL) AS BLOB) FROM t1;SELECT DISTINCT ((((rt0.c6, rt0.c1, t1.c0, rt0.c0, vt0.c0))!=((rt0.c5, rt0.c3, rt0.c0, rt0.c5, rt0.c6))) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT ((((rt0.c3) BETWEEN (t1.c0) AND (rt0.c2))) BETWEEN (LIKELIHOOD(vt0.c0, 0.9007351178078631)) AND (((rt0.c2) BETWEEN (rt0.c5) AND (vt0.c0)))) FROM vt0, t1;SELECT TOTAL((('mn#t)C)eB')IS NOT(rt0.c0))) FILTER(WHERE ((rt0.c5)<=((rt0.c1 IN ())))) OVER () FROM rt0, t1, vt0; -- 0ms;
SELECT ALL ((((((rt0.c4)IS NOT(rt0.c3)))AND((((rt0.c1))<=((rt0.c1))))))OR(((rt0.c5) NOT NULL))) FROM vt0, rt0, t1; -- 0ms;
SELECT MIN(((rt0.c6) BETWEEN (t1.c0) AND (rt0.c5))), 0.5212588734943421, (((vt0.c0)) BETWEEN ((((t1.c0)>>(t1.c0)))) AND (((((t1.c0))<>((rt0.c5)))))) FROM t1 WHERE ((NOT ((- (NULL))))) LIMIT 1327268185 OFFSET -278869567;SELECT DISTINCT (((((((((((((~ (rt0.c6)))OR('')))OR('-896355928')))OR(((rt0.c3)&(rt0.c4)))))OR(MIN(rt0.c1))))AND((((rt0.c6))>((rt0.c3))))))AND((- (rt0.c1)))) FROM rt0, t1; -- 0ms;
SELECT ALL json_array_length(vt0.c0) COLLATE RTRIM FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (CASE WHEN 1213083446 THEN rt0.c4 END IN ()), x'', CAST(((rt0.c5)*(rt0.c6)) AS TEXT), CAST(CASE rt0.c3  WHEN vt0.c0 THEN vt0.c0 END AS REAL), ((((CAST(rt0.c2 AS NUMERIC))AND((~ (rt0.c3)))))OR(((rt0.c2)>=(rt0.c5)))) FROM rt0;SELECT DISTINCT ((((rt0.c5 IN (vt0.c0))))==(((~ (0.5308345866735058))))), ((((x'')*(t1.c0)))<(x'3902')), ((DATETIME(rt0.c1, rt0.c3, rt0.c3))>(((rt0.c3)&(rt0.c4)))) FROM vt0, t1 WHERE (((CASE x''  WHEN 1860510268 THEN '138789767' END)>>((NULL IN ('-1')))));SELECT DISTINCT TOTAL(NULL) FROM vt0 NATURAL JOIN t1 WHERE (((((NULL) IS FALSE))%(('-1718842622' IN ())))) ORDER BY (((rt0.c5) ISNULL) IN ()), ((LOWER(rt0.c4))+(((rt0.c2)IS(vt0.c0))));SELECT DISTINCT COUNT(*) OVER () FROM vt0 INDEXED BY i94, rt0;SELECT DISTINCT (((rt0.c3)) NOT BETWEEN ((TIME(rt0.c5, rt0.c0, rt0.c4, rt0.c5, x''))) AND ((((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3))))) FROM rt0, t1;SELECT DISTINCT t1.c0 FROM t1, vt0; -- 0ms;
SELECT '^' FROM t1; -- 0ms;
SELECT DISTINCT SUM(-1131709713), ((((MAX(rt0.c6))OR(CAST(rt0.c6 AS BLOB))))OR(CASE vt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE rt0.c2 END)), ((((((rt0.c6)OR(t1.c0)))OR(rt0.c0))) NOT BETWEEN (COUNT(*)) AND (((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))) FROM t1, vt0, rt0; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((8.13380574E8)IS(rt0.c6))) FROM t1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3 IN (rt0.c1)))|(rt0.c6 COLLATE NOCASE)) FROM t1, vt0, rt0 WHERE (((NULL) ISNULL)) GROUP BY ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 END) BETWEEN (512592138) AND (x'')) HAVING ((((((((0.9050019006752386)OR(SUM(rt0.c6))))OR(CAST(rt0.c5 AS BLOB))))AND(((rt0.c4) IS TRUE))))AND(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)))); -- 0ms;
SELECT ALL ((((((rt0.c2)AND(rt0.c5)))AND(rt0.c3))) IS FALSE) FROM rt0 WHERE (((CAST('-915957296' AS BLOB))&((0.6037686732094106 IN (x'0357'))))); -- 0ms;
SELECT DISTINCT PRINTF(UPPER(DISTINCT rt0.c0), ((-1728330315)OR(rt0.c2)), ((rt0.c5) BETWEEN (t1.c0) AND (vt0.c0))) FROM vt0, rt0;SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c6 WHEN rt0.c1 THEN vt0.c0 END) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (-286092062)), NULLIF(-8.88053971E8 COLLATE NOCASE, COUNT(*)), TRIM('(#A9)4') FROM t1 WHERE ((((- (x'')))GLOB((~ (x'd0894048'))))) LIMIT 1256461848;SELECT ALL (- ((rt0.c5 IN ()))) FROM t1 WHERE (CAST('' COLLATE RTRIM AS REAL)) ORDER BY LIKELY(ABS(DISTINCT rt0.c4))  NULLS FIRST, ((((((t1.c0)OR(rt0.c3)))AND(vt0.c0))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (t1.c0) AND (rt0.c2))) AND (LOWER(DISTINCT rt0.c6)));SELECT DISTINCT rt0.c5, ((((rt0.c2)/(rt0.c0))) BETWEEN ((((rt0.c2))<((rt0.c1)))) AND (TRIM(DISTINCT rt0.c1))), (((rt0.c6)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c4 END)) AND ((NULLIF(rt0.c3, rt0.c2)))) FROM t1, rt0 WHERE (NULL COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()), ((CAST(rt0.c6 AS REAL))%(rt0.c0)), ((rt0.c5 IN (1486060764)) IN ()) FROM vt0, rt0 WHERE (CAST(LIKELIHOOD(x'ef95948b', 0.32712282267039605) AS NUMERIC)); -- 0ms;
SELECT rt0.c4, CAST(((((t1.c0)AND(rt0.c1)))AND(rt0.c5)) AS BLOB), ((((~ (rt0.c5)), ((('1486060764', rt0.c3, rt0.c4))<=((rt0.c1, rt0.c1, t1.c0))), ((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c3))))>(((rt0.c2 IN ()), ((((rt0.c2)AND(x'')))AND(rt0.c2)), CASE WHEN rt0.c2 THEN x'4b4c' END))) FROM vt0, rt0, t1; -- 0ms;
SELECT (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c6))))>(NULLIF(rt0.c3, rt0.c6))) FROM t1;SELECT '', CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((0.7077420310914646))) THEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c3)) ELSE rt0.c1 COLLATE NOCASE END, ((((((((((((((((((rt0.c4)<(rt0.c2)))AND((- (vt0.c0)))))AND(CAST(rt0.c0 AS NUMERIC))))OR(rt0.c4 COLLATE BINARY)))OR(CAST(t1.c0 AS BLOB))))AND(t1.c0 COLLATE RTRIM)))AND((((rt0.c5)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))OR(961045164)))OR(((((rt0.c0)AND(t1.c0)))OR(rt0.c1)))) FROM vt0, rt0;SELECT DISTINCT (vt0.c0 IN ()), (SQLITE_COMPILEOPTION_USED(rt0.c1) IN ()), (SUBSTR(0.22761343388100186, rt0.c5) IN ()) FROM rt0, vt0 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT (((((rt0.c6))<=((rt0.c6)))) NOTNULL) FROM rt0 INTERSECT SELECT vt0.c0 FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c2)+(rt0.c0))  WHEN CASE WHEN NULL THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c0)/(rt0.c1)) END FROM t1, vt0;SELECT ALL ((((rt0.c3) NOT BETWEEN ('}&bTo䉏Ϯ') AND (NULL))) IS FALSE), rt0.c5, MIN(((rt0.c4)>=(rt0.c6))) FROM rt0, t1, vt0 WHERE (((((((((((0xffffffffc078ee4f)AND(x'')))AND(NULL)))AND(NULL)))AND(NULL))) IS TRUE)); -- 0ms;
SELECT ((CAST(rt0.c3 AS BLOB))/((rt0.c4 IN (rt0.c6)))) FROM vt0, rt0, t1; -- 0ms;
SELECT DISTINCT ((((t1.c0)||(rt0.c4)))||(json_type(rt0.c0))) FROM vt0 NOT INDEXED WHERE (CAST(NULL AS INTEGER) COLLATE NOCASE) ORDER BY ((((LOWER(DISTINCT vt0.c0))AND(rt0.c1 COLLATE RTRIM)))AND((((rt0.c1, rt0.c6, x''))>((vt0.c0, rt0.c6, rt0.c1))))) DESC, ((((rt0.c4)GLOB(rt0.c1))) NOT BETWEEN (((rt0.c0)>>(rt0.c3))) AND (CASE WHEN vt0.c0 THEN t1.c0 END)) ASC, ((((((((rt0.c5 COLLATE RTRIM)OR(CASE rt0.c3  WHEN NULL THEN vt0.c0 END)))OR(((t1.c0)=(rt0.c1)))))OR((((('}/B)')AND(t1.c0)))AND(x'')))))AND(((((((((t1.c0)AND(t1.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c5)))) ASC  NULLS FIRST;SELECT ALL CAST(TRIM(DISTINCT rt0.c6, rt0.c5) AS REAL), CAST(((rt0.c6)LIKE(vt0.c0)) AS INTEGER), LAST_VALUE((rt0.c5 IN ())) OVER () FROM rt0 WHERE (((((0.14373428695217205)AND(0x4c5ee617))) ISNULL));SELECT DISTINCT ((((NULL) ISNULL))-(TOTAL(rt0.c5))) FROM vt0 ORDER BY ((NULLIF(rt0.c3, rt0.c4))LIKE((rt0.c6 IN (rt0.c4)))) DESC;SELECT ((rt0.c0) BETWEEN (((rt0.c5)>>(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) FROM vt0, t1 WHERE ((((('A~ub')==(x'')))>(CASE 0.8291024411610087  WHEN x'' THEN NULL ELSE x'' END)));SELECT DISTINCT SUM(TOTAL(rt0.c6) COLLATE BINARY) FROM vt0;SELECT ALL HEX(vt0.c0) COLLATE RTRIM, ((((rt0.c6)>>(rt0.c0)))OR((rt0.c6 IN (rt0.c4)))), x'', (((rt0.c6)) BETWEEN ((INSTR(0.7944246262211626, rt0.c5))) AND (((rt0.c3 IN ())))), TOTAL(((t1.c0) NOT BETWEEN (-8.96355928E8) AND (vt0.c0))) FROM vt0 GROUP BY ((json_valid(rt0.c0)) BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN vt0.c0 END) AND (CAST(rt0.c6 AS TEXT))) HAVING CAST((- (rt0.c6)) AS REAL) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c4)==(t1.c0)))) AND ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c6)))))  NULLS LAST;SELECT DISTINCT (((rt0.c6, rt0.c3, rt0.c0)) NOT BETWEEN ((t1.c0 COLLATE BINARY, ((rt0.c5) ISNULL), TOTAL(vt0.c0))) AND ((rt0.c2, (((rt0.c3))<((rt0.c2))), MIN(rt0.c6)))), (NOT ((rt0.c1 IN ()))), SUM(((((x'')AND(rt0.c4)))OR(rt0.c2))) OVER ( ORDER BY (NOT (vt0.c0)) ASC) FROM rt0 WHERE ((((((((((('')||('-653383026')))OR(ABS(0x6813a8cc))))AND(((0.11189602203252291) IS TRUE))))OR('-2084450672' COLLATE NOCASE)))AND('-1718842622')));SELECT ALL NULL FROM rt0 INDEXED BY i94 GROUP BY '1585332815' HAVING CAST(COUNT(*) AS INTEGER) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt0.c4) AS TEXT) DESC;SELECT DISTINCT CAST(rt0.c4 AS REAL) COLLATE NOCASE COLLATE RTRIM FROM t1, vt0;SELECT DISTINCT ((((((NULL)OR(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (((('rp2^V>N\nn'))<>((rt0.c3)))) AND (AVG(rt0.c5))), CASE WHEN ((rt0.c5) NOTNULL) THEN CAST(rt0.c0 AS TEXT) ELSE (NOT (rt0.c2)) END, CAST(((((((((t1.c0)OR(rt0.c1)))OR('138789767')))OR(rt0.c6)))OR(NULL)) AS NUMERIC) FROM vt0, rt0;SELECT ALL ((LTRIM(rt0.c0)) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c5))) AND (vt0.c0)) FROM rt0 INDEXED BY i94, t1, vt0;SELECT DISTINCT ((rt0.c6)LIKE(rt0.c5)) COLLATE BINARY FROM rt0, vt0 WHERE (CASE WHEN ((('1322401622'))>((0.890271556896283))) THEN (((NULL))<=((x'3cee'))) END) ORDER BY (rt0.c2 IN ()), ((((vt0.c0) ISNULL)) NOT BETWEEN (((rt0.c4)<=(rt0.c4))) AND (0.56392246082599))  NULLS LAST; -- 0ms;
SELECT DISTINCT 1028105627, ((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c6))) IN (CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 ELSE NULL END)), PERCENT_RANK() OVER () FROM rt0, t1, vt0 WHERE ((((LIKELIHOOD(DISTINCT '', 0.35382662672320253)))=(((+ ('2073633869')))))) GROUP BY NULLIF(rt0.c1, '1139834918'), LIKELY((((t1.c0)) BETWEEN ((rt0.c5)) AND (('')))), (((rt0.c2)) NOT BETWEEN ((((vt0.c0)&(rt0.c6)))) AND ((((('/!謂\n', rt0.c4, rt0.c2))>=((rt0.c6, t1.c0, rt0.c5)))))) HAVING (~ ((rt0.c1 IN ()))) LIMIT -1396234820; -- 0ms;
SELECT DISTINCT ((((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))>=(((0.31171951234943995)<=(rt0.c6)))) FROM t1 WHERE (((x'eda9' COLLATE RTRIM)+((~ ('/(''-'))))) LIMIT 86502431 OFFSET 1202166257;SELECT DISTINCT ((load_extension(rt0.c6))|(CASE t1.c0  WHEN t1.c0 THEN rt0.c6 END)) FROM rt0, vt0, t1 WHERE (CAST(((NULL)/(NULL)) AS BLOB)) GROUP BY CASE WHEN ((rt0.c4) BETWEEN (NULL) AND (rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) END; -- 0ms;
SELECT ALL MAX(((t1.c0) ISNULL)), vt0.c0, (((rt0.c6, t1.c0, rt0.c6)) BETWEEN ((((rt0.c1)!=(rt0.c4)), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), CAST(rt0.c2 AS NUMERIC))) AND (((~ (vt0.c0)), (((t1.c0, t1.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((vt0.c0, rt0.c1, t1.c0))), CASE WHEN NULL THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END))) FROM rt0, vt0 WHERE ((((((('-501276565')OR('~NYO)F')))OR(0.6041149923496164))) NOT BETWEEN (CASE WHEN x'7d40fb4c' THEN 0.09316233543163022 END) AND (((5.83606531E8) ISNULL))));SELECT LIKELIHOOD(rt0.c1 COLLATE RTRIM, 0.2988134574604746) FROM rt0; -- 0ms;
SELECT CAST(((rt0.c2)IS NOT(rt0.c6)) AS REAL), MIN(((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c2))), COUNT(*) OVER ( ORDER BY ((CASE rt0.c6  WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c3 END) IS FALSE)) FROM rt0; -- 0ms;
SELECT DISTINCT (('7/') NOT NULL) FROM vt0 WHERE ((((x'b1f0f64d') NOT NULL) IN ())) GROUP BY CAST(rt0.c2 AS NUMERIC);SELECT DISTINCT ((HEX(rt0.c6)) IS TRUE), ((((rt0.c0) NOT NULL))LIKE(rt0.c5 COLLATE BINARY)), FIRST_VALUE(LIKE((('\o6') IS TRUE), ((vt0.c0)IS(rt0.c2)))) OVER () FROM rt0, vt0, t1; -- 0ms;
SELECT DISTINCT x'', ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c5)))GLOB(rt0.c5 COLLATE RTRIM)), (- (CASE rt0.c0  WHEN rt0.c6 THEN rt0.c6 ELSE rt0.c3 END)) FROM vt0 GROUP BY rt0.c2 HAVING COUNT(*);SELECT ALL LAG((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM, (((CASE WHEN vt0.c0 THEN vt0.c0 END, '980814617', (vt0.c0 IN ())))<((((((t1.c0)AND(vt0.c0)))AND(vt0.c0)), (((t1.c0, vt0.c0, vt0.c0))==((vt0.c0, t1.c0, vt0.c0))), ((t1.c0)%(vt0.c0))))), (((((x''))>=(('9A'))))<<(((vt0.c0) IS TRUE)))) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND (+ (rt0.c5 COLLATE BINARY)) FOLLOWING EXCLUDE GROUP) FROM vt0, t1;SELECT DISTINCT rt0.c1, (- ((((rt0.c4))<((rt0.c0))))), ((((SUM(rt0.c2))OR(vt0.c0)))AND(((((rt0.c3)OR(rt0.c6)))OR(vt0.c0)))) FROM rt0, t1;SELECT DISTINCT (((rt0.c1 IN ()))+(-2020958798)) FROM vt0; -- 1ms;
SELECT DISTINCT ((0.9701823245444512 COLLATE RTRIM)IS(((rt0.c5) BETWEEN (rt0.c2) AND (x'')))) FROM vt0, t1 WHERE ((((('') BETWEEN (-1907653190) AND (0.2328765975124646)))|(((x'') ISNULL)))) ORDER BY '' ASC  NULLS FIRST;SELECT DISTINCT ((((TYPEOF(rt0.c3))OR(NULL)))OR((t1.c0 IN ()))) FROM vt0 ORDER BY ((json_array(rt0.c4, rt0.c5, rt0.c6, rt0.c5, vt0.c0, rt0.c6))||(LIKELIHOOD(vt0.c0, 0.28512334858438537))) DESC;SELECT 0.7813616599766361 FROM rt0, t1 GROUP BY (('1283745810') NOT BETWEEN ((((rt0.c5))>=((rt0.c0)))) AND (CASE rt0.c1  WHEN rt0.c0 THEN t1.c0 END)), ((((rt0.c3)/(rt0.c1))) ISNULL), '-160568490', LIKE(x'', (((rt0.c3, rt0.c6, rt0.c3))<=((vt0.c0, rt0.c4, rt0.c2))), 'J'), vt0.c0 HAVING (CASE WHEN 'a3' THEN '' ELSE rt0.c4 END IN ());SELECT DISTINCT rt0.c2 FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0, rt0.c3, rt0.c5)) BETWEEN ((rt0.c1, rt0.c5, vt0.c0)) AND ((rt0.c5, rt0.c3, rt0.c3))))LIKE(COALESCE(vt0.c0, rt0.c2))), ((CAST(rt0.c5 AS INTEGER)) BETWEEN (((((vt0.c0)OR(0.581151268892582)))AND(t1.c0))) AND (rt0.c2)), COUNT(((rt0.c1)-('1322352072'))) OVER () FROM vt0, rt0 ORDER BY ABS((rt0.c6 IN ())), (((((- (rt0.c6)))AND(((rt0.c6) BETWEEN (vt0.c0) AND (t1.c0)))))AND(((((x'')AND(rt0.c1)))AND(rt0.c4))))  NULLS FIRST;SELECT (((('0.8291024411610087')<<(rt0.c1))) NOTNULL), SUM((+ (rt0.c3))), (((((((((NOT ('-271990686')))OR('YNfgz')))OR(rt0.c5 COLLATE BINARY)))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))))OR(CAST(rt0.c5 AS REAL))), ((((t1.c0)GLOB(rt0.c5))) BETWEEN (TOTAL(rt0.c0)) AND (rt0.c0 COLLATE RTRIM)), (((rt0.c5)) BETWEEN ((rt0.c3)) AND (((~ (rt0.c3))))) FROM vt0 WHERE (((((((x'')AND(1746118860)))AND(0.6181994346814363)))OR(((NULL) NOT BETWEEN ('-231901313') AND (''))))) ORDER BY (+ (((((((((((((t1.c0)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c4)))AND(-1.113121785E9)))AND(rt0.c3)))OR(rt0.c6))));SELECT ALL (MAX(vt0.c0) IN (((t1.c0)/(rt0.c4)))) FROM rt0 INDEXED BY i94, t1;SELECT ALL LEAD(NULL, CASE WHEN CASE WHEN vt0.c0 THEN t1.c0 END THEN '1205074131' ELSE (t1.c0 IN (vt0.c0)) END, SQLITE_COMPILEOPTION_GET(((t1.c0) BETWEEN (vt0.c0) AND (t1.c0)))) OVER ( ORDER BY ((((rt0.c4, rt0.c6, 'Yk'))<=((rt0.c0, rt0.c4, 0Xffffffffa10f1613))) IN ()), (((rt0.c4 IN (rt0.c3)))&(rt0.c4)) DESC  NULLS LAST, rt0.c2 COLLATE BINARY DESC) FROM t1, vt0;SELECT DISTINCT ((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE NOCASE, (+ (((rt0.c1) BETWEEN (t1.c0) AND (rt0.c3)))), ((rt0.c1)*((NOT (rt0.c3)))) FROM t1, rt0 WHERE ((('0.9041946053309549') IS FALSE) COLLATE RTRIM);SELECT DISTINCT ((x'')&(rt0.c5)) COLLATE RTRIM FROM t1 LIMIT -1943399882;SELECT ALL LAG(((CASE rt0.c2  WHEN rt0.c6 THEN rt0.c0 END)IS(((rt0.c2)LIKE(rt0.c0)))), rt0.c4, ((CAST('_WaQe2iw醩' AS BLOB)) IS TRUE)) OVER ( ROWS  CURRENT ROW EXCLUDE TIES) FROM rt0, t1; -- 1ms;
SELECT ((rt0.c6 COLLATE NOCASE) IS FALSE) FROM rt0, vt0, t1; -- 0ms;
SELECT ALL ((COUNT(rt0.c2))OR('<QgzirZue')), PERCENT_RANK() OVER ( ORDER BY ((((((((((((((rt0.c5) BETWEEN (rt0.c4) AND (rt0.c1)))AND(0.8161966848418647)))OR(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c3)))AND(vt0.c0)))OR(rt0.c1)))))AND((((rt0.c6))<=((rt0.c2))))))OR(NULL)))OR(ROUND(0xffffffff867ce56e, t1.c0))))AND(TRIM(vt0.c0, rt0.c2))) DESC, ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c5 END) NOTNULL)), ((((((vt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)))OR(SUM(vt0.c0))))OR(CASE WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c6 ELSE rt0.c1 END)) FROM t1, vt0;SELECT DISTINCT TYPEOF((((t1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) FROM vt0, t1 WHERE (CASE ('' IN ())  WHEN ((x'')|(1842586938)) THEN x'' END);SELECT DISTINCT (((~ (rt0.c2)))AND((rt0.c1 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c3 AS INTEGER) COLLATE RTRIM, ((rt0.c5 IN (rt0.c1)) IN ()), (((rt0.c5 IN ())) BETWEEN (((rt0.c1)AND(rt0.c5))) AND (rt0.c4 COLLATE NOCASE)) FROM t1, vt0;SELECT DISTINCT ((NULL)||(SQLITE_COMPILEOPTION_GET(rt0.c3))) FROM rt0, vt0 WHERE (CAST((((('')AND(NULL)))AND(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CAST(0.39375114286809876 AS TEXT), ((((((((rt0.c1)OR('813380574')))OR(rt0.c1)))AND(x'')))AND(rt0.c2)) COLLATE NOCASE, ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE BINARY FROM vt0, t1, rt0; -- 0ms;
SELECT t1.c0 FROM vt0, t1; -- 0ms;
SELECT ALL COUNT(*) OVER (), ((((((((((((rt0.c0)OR(rt0.c4)))AND(NULL)))AND(0.9294045750067402)))AND(COUNT(vt0.c0))))AND(IFNULL('0.9321771006643114', rt0.c6))))AND((((rt0.c3)) BETWEEN ((NULL)) AND ((rt0.c0))))), CASE WHEN COUNT(rt0.c5) THEN GROUP_CONCAT(rt0.c5) END FROM t1, vt0, rt0 WHERE ((+ (((0.7631700099623145)>=(NULL))))) LIMIT -413256993 OFFSET -246563669; -- 0ms;
SELECT ALL ((MIN(rt0.c3))AND(NULL)) FROM t1, rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0, t1, rt0 WHERE (((((((x'')AND(0.28447886396612465)))OR(''))) ISNULL)) GROUP BY CAST(((rt0.c3) NOTNULL) AS INTEGER) HAVING CAST(COUNT(*) AS NUMERIC); -- 0ms;
SELECT ((rt0.c3 COLLATE BINARY)LIKE(rt0.c3 COLLATE NOCASE)) FROM t1 WHERE (CAST(((x'')*(NULL)) AS NUMERIC));SELECT DISTINCT (~ (((vt0.c0)!=(x'2eaa')))) FROM rt0, vt0 GROUP BY rt0.c4 HAVING json_patch(((rt0.c4)%(rt0.c6)), (((vt0.c0, rt0.c4, rt0.c1))=((rt0.c5, rt0.c1, rt0.c1)))); -- 1ms;
SELECT json_extract(CAST(vt0.c0 AS NUMERIC), (~ (rt0.c2))) FROM t1, vt0 WHERE (((((0.18899892518746264) NOT BETWEEN (NULL) AND (NULL))) NOT BETWEEN ((0.6896306980678683 IN (0.5632219725125498))) AND ((+ (x'')))));SELECT ALL MAX(((rt0.c4) NOT NULL) COLLATE RTRIM) FROM rt0 WHERE (((COALESCE(NULL, x''))OR(x'e185' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c1))), PRINTF(rt0.c6), t1.c0 COLLATE NOCASE, rt0.c3, rt0.c5 COLLATE RTRIM))<>((((((rt0.c4)OR(rt0.c4)))OR(rt0.c1)), ((rt0.c4)>>(rt0.c5)), ((t1.c0) IS TRUE), ((rt0.c4)%(rt0.c0)), CASE t1.c0  WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c4 THEN rt0.c6 END))), CAST(rt0.c3 AS REAL), (((rt0.c6 IN ())) ISNULL), TYPEOF(rt0.c2), SUM(rt0.c2) FROM vt0, rt0;SELECT json_patch(rt0.c4 COLLATE BINARY, TIME(rt0.c1, rt0.c6, rt0.c0)) FROM vt0 FULL OUTER JOIN t1 ON ((rt0.c3)/(rt0.c1)) COLLATE NOCASE;SELECT DISTINCT ((CASE WHEN rt0.c5 THEN rt0.c5 END)*((t1.c0 IN ()))), ((('Xꈋ', rt0.c0 COLLATE BINARY, CAST(rt0.c4 AS NUMERIC)))<=((((t1.c0)>>(rt0.c4)), CASE WHEN rt0.c0 THEN NULL ELSE rt0.c1 END, TYPEOF(DISTINCT vt0.c0)))), ((- (rt0.c4)) IN ()) FROM rt0, t1, vt0; -- 0ms;
SELECT ALL ((rt0.c0) BETWEEN (t1.c0) AND (NULL)) COLLATE NOCASE FROM t1 WHERE (((((x'', x'11c1', x'', NULL, '1912007211')) BETWEEN ((x'', '1253083567', 0.2369381087576642, '-1580231638', NULL)) AND ((x'ea9a', '_w0l_Vvn', x'', x'', 0.2759700057366208))) IN ()));SELECT ALL ((((COUNT(*))OR((~ (rt0.c5)))))OR((rt0.c4 IN (vt0.c0)))) FROM t1 LIMIT -1084437440 OFFSET 723218169;SELECT ALL ((((TOTAL('-1540775371'))OR((('1979892092')%(rt0.c1)))))OR(((rt0.c0)+(x'')))) FROM vt0, rt0 WHERE ((((((NULL) NOT BETWEEN (0X461ba62a) AND (x''))))<((NULLIF(x'', x''))))); -- 1ms;
SELECT ALL LIKELIHOOD(DISTINCT NULLIF(DISTINCT 0.10234381018599215, t1.c0), 0.22112331545859765), SUM((((rt0.c3)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6)))) FILTER(WHERE (((rt0.c2)|(vt0.c0)) IN ())) OVER (), rt0.c0 FROM vt0, rt0, t1 WHERE (CASE (((('514929609')AND(x'')))OR(x''))  WHEN (('1428365062') IS TRUE) THEN CAST(0x492a6661 AS REAL) END) GROUP BY CAST(LIKELY(DISTINCT rt0.c5) AS BLOB) HAVING CASE WHEN ((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c1)) THEN 0.9467063900098173 ELSE rt0.c6 END; -- 4ms;
SELECT ALL CASE WHEN CHAR(rt0.c6) THEN LIKE(vt0.c0, rt0.c0, '''') END FROM t1, rt0 WHERE ((((('513007256') NOTNULL)) IS FALSE)) GROUP BY NULL, rt0.c1, SUBSTR(t1.c0 COLLATE RTRIM, ((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c4)));SELECT t1.c0 FROM vt0;SELECT DISTINCT '*u', ((TYPEOF(rt0.c0))!=(((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c6)))AND(NULL)))OR(rt0.c1)))), (~ ('558099414')) FROM rt0; -- 0ms;
SELECT ALL (rt0.c2 COLLATE BINARY IN ()) FROM vt0, rt0, t1 WHERE ('}JB)'); -- 0ms;
SELECT ALL LIKELIHOOD(rt0.c5, 0.49630007066961956) COLLATE BINARY FROM rt0; -- 1ms;
SELECT ALL CAST(AVG(rt0.c6) AS REAL), rt0.c4, ((((((rt0.c6)OR(rt0.c0)))OR(vt0.c0)))IS NOT(((rt0.c3)<<(rt0.c1)))) FROM rt0, t1 WHERE (IFNULL('', (((NULL)) BETWEEN (('*A蒐蹩\rVkq')) AND (('(幫'))))) ORDER BY ((x'3263') NOT BETWEEN (((t1.c0)GLOB(rt0.c2))) AND ('1432032676')) ASC;SELECT DISTINCT ('᧖%矧5bi_' IN ()) FROM t1, rt0, vt0 WHERE ((((((((((~ ('')))AND(((x'')=(-1.63458337E9)))))AND(UNLIKELY(DISTINCT 0.2869365339243527))))OR(((((-1178268364)AND(0xffffffffc55102ef)))OR(0X68ca2e4b)))))OR((('-1356045870') ISNULL)))); -- 0ms;
SELECT (NOT (((rt0.c0) BETWEEN (t1.c0) AND (rt0.c2)))) FROM rt0;SELECT ((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c6)))OR(t1.c0)))AND(rt0.c3)))+((- (rt0.c2)))) FROM rt0, vt0 NOT INDEXED, t1 GROUP BY NULLIF(((((((((rt0.c1)OR(rt0.c5)))OR(x'22ef')))AND(rt0.c0)))AND(vt0.c0)), CAST(rt0.c1 AS BLOB)) HAVING CAST((((rt0.c4, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3))) AS TEXT); -- 0ms;
SELECT CASE ((rt0.c6)GLOB(rt0.c4))  WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c6 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c5 END THEN ((vt0.c0)GLOB(rt0.c4)) END FROM vt0, rt0, t1 WHERE (CASE WHEN x'' THEN NULL WHEN x'' THEN '-1113121785' WHEN '*u' THEN x'' WHEN x'' THEN NULL WHEN NULL THEN 0.7516173228695475 ELSE x'' END COLLATE NOCASE); -- 1ms;
SELECT DISTINCT CAST(CASE WHEN t1.c0 THEN rt0.c5 ELSE rt0.c4 END AS BLOB) FROM t1, rt0, vt0 WHERE (((NULL) BETWEEN (NULL) AND ('YET0p1'))); -- 0ms;
SELECT ALL ((0.7464317461847425)=(rt0.c2)) COLLATE BINARY, CAST(IFNULL(DISTINCT rt0.c0, rt0.c3) AS NUMERIC), CASE WHEN (+ (rt0.c2)) THEN NULLIF(rt0.c0, rt0.c2) ELSE COUNT(*) END, ((CAST(rt0.c2 AS TEXT)) BETWEEN ((NOT (t1.c0))) AND (((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c3)))), (CAST(rt0.c2 AS REAL) IN ()) FROM vt0, t1 ORDER BY ((((((((rt0.c4)AND(0.16451405268038455)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST, (((vt0.c0)LIKE(vt0.c0)) IN ())  NULLS LAST;SELECT ALL '-853005294', (((rt0.c6) NOT BETWEEN (rt0.c5) AND (vt0.c0)) IN ()), ((((0x2da2e4fc)!=(rt0.c3))) NOT BETWEEN (((vt0.c0)IS(rt0.c3))) AND (((vt0.c0) NOT BETWEEN (rt0.c1) AND (t1.c0)))) FROM rt0, vt0, t1 INDEXED BY i94;SELECT MIN(((t1.c0) NOT BETWEEN (rt0.c6) AND (rt0.c0))) FROM t1, vt0;SELECT DISTINCT CAST(((((-1173254096)OR(NULL)))OR(rt0.c5)) AS REAL) FROM t1;SELECT ALL CASE WHEN (- (rt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN (- (rt0.c3)) WHEN (rt0.c1 IN ()) THEN ((rt0.c1) ISNULL) END FROM t1 WHERE ((x'' COLLATE NOCASE IN ('-1839253803' COLLATE RTRIM, (NOT (0.9956248250592942))))) LIMIT -1626349810;SELECT ALL ((((rt0.c5) NOT BETWEEN (vt0.c0) AND (0Xffffffff8d59944f)))GLOB(CASE WHEN vt0.c0 THEN t1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c5 ELSE rt0.c3 END)), ((json_remove(vt0.c0, rt0.c5, rt0.c2, rt0.c2))LIKE(rt0.c4)), MAX((rt0.c1 IN ('-718199271', rt0.c5))) FROM rt0, vt0 WHERE ((LIKELY('1766572604') IN ())) GROUP BY (~ (((rt0.c1)||(rt0.c4))));SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c2 END)|(((t1.c0)IS(rt0.c4)))) FROM t1, vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1))), UNLIKELY(DISTINCT rt0.c4), MIN(((((t1.c0)OR(rt0.c4)))AND(t1.c0))) FROM t1, vt0;SELECT rt0.c6 FROM rt0 WHERE (json_array_length(CAST(0X66d38027 AS REAL))); -- 0ms;
SELECT ALL ((((CAST(0.7684281374598111 AS NUMERIC))OR(((rt0.c6)<<(rt0.c4)))))OR(CAST(rt0.c1 AS NUMERIC))) FROM vt0, t1, rt0 WHERE (((('')) NOT BETWEEN ((0.8891676011118503 COLLATE NOCASE)) AND ((CAST(0.22321437148116008 AS BLOB))))) GROUP BY 0.39845008935181403, (((~ (vt0.c0)))|(rt0.c5 COLLATE NOCASE)), (((rt0.c4 IN ()))+(CAST(rt0.c0 AS BLOB))); -- 0ms;
SELECT DISTINCT (NOT (rt0.c6 COLLATE NOCASE)), (((rt0.c4, rt0.c1, rt0.c6)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN 0.5894443607011913 WHEN rt0.c2 THEN rt0.c5 END, CAST(rt0.c5 AS BLOB), '-1084437440')) AND ((((t1.c0)IS(-2.78869567E8)), ((((rt0.c3)OR(rt0.c2)))OR(rt0.c6)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c3 WHEN t1.c0 THEN rt0.c2 END))), (((rt0.c4)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN '' THEN rt0.c5 END)) AND (((- (rt0.c0))))) FROM t1 GROUP BY (NOT ((((rt0.c1))<=((rt0.c0))))), (((((rt0.c0))<>((rt0.c2))))<=(CASE rt0.c3  WHEN t1.c0 THEN vt0.c0 ELSE rt0.c1 END)), ((((ROUND(rt0.c6, rt0.c4))OR(CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 END)))OR(t1.c0 COLLATE BINARY));SELECT (+ (NULL COLLATE RTRIM)) FROM vt0, t1 WHERE (((((x'032c')<(0.7434006521094525))) BETWEEN (((NULL)OR(0xffffffff878a9db2))) AND ((-1.490253161E9 IN ())))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT (rt0.c1 IN ()), 0.1708741236113943) FROM rt0, vt0 NOT INDEXED, t1 ORDER BY (((((rt0.c2)%(7.47905365E8))))>=((x'3c72' COLLATE RTRIM))) DESC; -- 0ms;
SELECT DISTINCT (+ (((('D'))>((rt0.c2))))), CASE WHEN ((rt0.c4) NOT BETWEEN (0.9177140068037999) AND (rt0.c1)) THEN t1.c0 ELSE 'Z{' COLLATE NOCASE END, (((((rt0.c2 IN ()))AND(((rt0.c6) BETWEEN (vt0.c0) AND (rt0.c1)))))OR(CAST(t1.c0 AS TEXT))) FROM vt0 WHERE ((((((((((- ('773867516')))OR(CASE NULL  WHEN '-1084437440' THEN '2057883385' END)))OR((0.2327544319849838 IN ()))))AND(CASE x'b2eb'  WHEN NULL THEN x'91d5' ELSE NULL END)))AND((((0.28088495741171704))>=(('YET0p1'))))));SELECT HEX(DISTINCT ((rt0.c6)>(rt0.c2))), rt0.c0, INSTR(CASE WHEN rt0.c5 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c6 WHEN rt0.c5 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c6 WHEN rt0.c4 THEN t1.c0 ELSE rt0.c6 END, MIN(0Xffffffffc7f12e7b)) FROM vt0, rt0, t1; -- 0ms;
SELECT ALL ((rt0.c2 COLLATE BINARY)>>((((t1.c0))<=((x'1685'))))) FROM vt0, t1, rt0 WHERE (LOWER(DISTINCT ')\r' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c6 THEN vt0.c0 ELSE t1.c0 END) NOT NULL) FROM rt0, vt0;SELECT DISTINCT CASE WHEN TOTAL(vt0.c0) THEN MAX(rt0.c0) ELSE NULL COLLATE NOCASE END FROM vt0 WHERE (0xffffffffc3fa76c2);SELECT (((t1.c0, vt0.c0, '')) BETWEEN ((rt0.c2, (~ (rt0.c2)), ((rt0.c1)&(x'1e4d')))) AND ((((x'08b9') ISNULL), CHAR(rt0.c1), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t1.c0))))), (+ (LIKELY(DISTINCT rt0.c1))), MIN(((rt0.c5)==(x'2348'))) FROM t1, vt0, rt0; -- 0ms;
SELECT ABS(DISTINCT CASE WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c1 END) FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), TOTAL((NOT (rt0.c6))), (((~ ('t'))) IS FALSE) FROM vt0, rt0, t1 WHERE (0.39375114286809876); -- 0ms;
SELECT DISTINCT ((((vt0.c0)LIKE(rt0.c4)))&(TOTAL(rt0.c2))) FROM vt0, t1, rt0 WHERE (((x'' IN ()) IN ())); -- 0ms;
SELECT ((((('MF\run曨DF', rt0.c1, rt0.c5)) BETWEEN ((rt0.c4, rt0.c0, rt0.c5)) AND ((vt0.c0, rt0.c4, rt0.c0))))<>((+ (rt0.c0)))) FROM t1 ORDER BY (((- (rt0.c5))) IS FALSE), (((x'', vt0.c0, rt0.c2)) BETWEEN ((vt0.c0, 0.9350487726716192, rt0.c4)) AND ((rt0.c3, NULL, rt0.c1))) COLLATE BINARY  NULLS LAST, CASE ((((((((t1.c0)AND(rt0.c1)))OR(rt0.c2)))AND(t1.c0)))AND(rt0.c4))  WHEN (+ (rt0.c1)) THEN '' END  NULLS FIRST;SELECT ALL SUM(LIKELY(rt0.c2)) FROM t1;SELECT DISTINCT ((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE rt0.c4  WHEN NULL THEN t1.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c6 END) AND (ABS(rt0.c5))) FROM t1;SELECT (+ (((vt0.c0) ISNULL))) FROM t1 WHERE (((CASE WHEN 0.2758426346251758 THEN 1356694638 WHEN NULL THEN x'e6b0' WHEN -1.131709713E9 THEN 0.8281414926074541 ELSE '0.39375114286809876' END) BETWEEN (((0.8699869145884369)&(NULL))) AND ((((NULL)) NOT BETWEEN ((0.9956248250592942)) AND ((NULL))))));SELECT ALL CAST(COUNT(*) AS REAL) FROM rt0, t1, vt0 WHERE (IFNULL('<', '1428365062') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT SUM((rt0.c4 IN (rt0.c4, rt0.c5))) FROM rt0 ORDER BY (((((0.026435992244786766, rt0.c2, rt0.c2)) BETWEEN ((x'', rt0.c1, rt0.c5)) AND ((rt0.c0, vt0.c0, rt0.c6))))=(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)))) ASC  NULLS FIRST;SELECT DISTINCT GROUP_CONCAT(COUNT(*)) FROM t1 WHERE (TRIM(0.17571262871376203 COLLATE NOCASE)) ORDER BY (((NOT (5.48232828E8))) BETWEEN (((vt0.c0)LIKE(rt0.c6))) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;SELECT ALL SUM(((rt0.c6)&(t1.c0))) FILTER(WHERE CHANGES()) OVER (), (((((rt0.c1 IN ()))OR(CASE rt0.c5  WHEN rt0.c5 THEN t1.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END)))OR((((x''))=((vt0.c0))))), rt0.c5, ((((((((SQLITE_VERSION())AND(((rt0.c0)*(rt0.c3)))))OR('0.5308345866735058')))AND(GROUP_CONCAT(rt0.c2))))AND(TOTAL(rt0.c0))), CASE rt0.c5 COLLATE RTRIM  WHEN NULL THEN COALESCE(DISTINCT t1.c0, rt0.c2) ELSE ((rt0.c0)<(rt0.c0)) END, ((((rt0.c1)<(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN 0.7579944532065116 ELSE rt0.c6 END) AND (((rt0.c0)OR(rt0.c0)))), (x'5bc4' IN ()) FROM rt0 GROUP BY rt0.c3, (~ (t1.c0 COLLATE RTRIM)), ((~ (rt0.c6)) IN ()) HAVING CAST(((rt0.c0)-(t1.c0)) AS INTEGER);SELECT ALL (('-2087495111') IS TRUE) FROM t1; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0, t1; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0)<(rt0.c2)))) FROM rt0, vt0 WHERE ((((CASE WHEN x'' THEN 0.5899491743865088 ELSE '-2028480587' END))=(((((NULL))<((NULL))))))) GROUP BY ((NULL) ISNULL) HAVING CASE WHEN ((rt0.c4)/(rt0.c4)) THEN CASE rt0.c2  WHEN rt0.c1 THEN t1.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c6 ELSE rt0.c4 END END;SELECT DISTINCT (((((vt0.c0)IS NOT(rt0.c1)), ((x'') IS TRUE), CASE NULL  WHEN rt0.c3 THEN t1.c0 ELSE rt0.c4 END))>=((rt0.c1, ((rt0.c0)<(rt0.c5)), ((rt0.c2) IS FALSE)))) FROM vt0 GROUP BY CASE ((t1.c0) BETWEEN (rt0.c1) AND (rt0.c3))  WHEN 0X1e8d890a THEN NULL END;SELECT DISTINCT ((((rt0.c6)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((NULL)<>(NULL)))AND(((rt0.c4)==(x'')))))OR(CAST(rt0.c4 AS INTEGER))) FROM vt0, rt0, t1 WHERE ((+ ((((x'e460d038'))!=((NULL)))))); -- 0ms;
SELECT SUM((('')IS(rt0.c2))) OVER () FROM rt0, vt0, t1 WHERE (((UNLIKELY(x'e7786ea6')) NOT BETWEEN ((~ (-1.76487473E9))) AND ((('-1131709713') BETWEEN ('g.9_U)DI') AND (1909274234))))) GROUP BY (((rt0.c1, vt0.c0, rt0.c4)) BETWEEN ((rt0.c4, CASE NULL  WHEN rt0.c6 THEN 0.22478437301791843 END, (((vt0.c0))!=((rt0.c0))))) AND ((((rt0.c0)|(rt0.c1)), (((rt0.c3))<>((rt0.c4))), rt0.c0 COLLATE NOCASE))), ((((NULL)AND(rt0.c6 COLLATE NOCASE)))OR(((rt0.c4)/(rt0.c3)))), ((CASE t1.c0  WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN 0.8415939760615642 END) IS TRUE) HAVING ((((rt0.c2)AND((+ (NULL)))))AND(rt0.c6)); -- 1ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE NOCASE AS TEXT), MIN(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))), (((((rt0.c5)) NOT BETWEEN ((t1.c0)) AND ((rt0.c6)))) NOT NULL) FROM t1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c6))))>=((((rt0.c0) IS TRUE)))) FROM rt0 WHERE (((((NULL)<=(NULL))) IS FALSE)) GROUP BY CAST(t1.c0 AS BLOB) COLLATE BINARY;SELECT ALL ((rt0.c1) NOT NULL) COLLATE RTRIM FROM vt0, rt0, t1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), AVG(((((rt0.c3)AND(rt0.c3)))AND(NULL))), ((rt0.c6) NOT BETWEEN ((rt0.c6 IN ())) AND (CASE rt0.c2  WHEN rt0.c4 THEN NULL WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c3 END)) FROM t1 WHERE (LIKELY(DISTINCT ((NULL)IS(x''))));SELECT DISTINCT AVG(((rt0.c5)>=(rt0.c5))) OVER (), (((t1.c0 IN ())) ISNULL), ((((-8.88053971E8)AND(NULL)))OR((((rt0.c5, rt0.c1, x'')) BETWEEN ((rt0.c1, 'am)Ai', rt0.c1)) AND ((rt0.c3, rt0.c5, rt0.c4))))) FROM t1;SELECT ALL FIRST_VALUE(ABS(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c5)))) OVER (), 0.7404130218934556, (x'' IN ()) FROM rt0 INDEXED BY i94, t1, vt0;SELECT DISTINCT (NOT ((((t1.c0, rt0.c4, rt0.c4, rt0.c4, vt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3, rt0.c5, rt0.c0)) AND ((rt0.c5, rt0.c4, rt0.c3, rt0.c2, x''))))), '-857190007', RANK() OVER (), LIKELY(DISTINCT MAX(rt0.c5)), (+ ((~ (NULL)))) FROM rt0, vt0 WHERE (((((0.32329106211829417)%('238862438'))) NOT NULL));SELECT 0.7936445587670196 FROM rt0; -- 0ms;
SELECT (((rt0.c3)) BETWEEN ((((rt0.c6)>('-278869567')))) AND ((((0.9130164808009247) IS FALSE)))), (((NULL)LIKE(rt0.c3)) IN (CASE rt0.c1  WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c2 THEN NULL END, 5.12592138E8)), CASE WHEN ((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)) THEN json_array_length(rt0.c2) WHEN json(rt0.c2) THEN '-303924898' WHEN NULL THEN ((rt0.c6)<(rt0.c5)) END, ((((rt0.c3)GLOB(rt0.c4)))>(((x'') IS FALSE))), ((CAST(rt0.c3 AS REAL))%(rt0.c1 COLLATE BINARY)) FROM t1, rt0, vt0 ORDER BY ((('a' IN ()))+(HEX(vt0.c0))); -- 0ms;
SELECT ALL ((t1.c0)%(rt0.c5)) COLLATE RTRIM FROM vt0, t1, rt0 WHERE (((0.39845008935181403)*(x'42462e6f')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c6))))<>(((((vt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) FROM vt0, rt0 WHERE ((((((x'')) BETWEEN (('1364827841')) AND ((0.9021003379418685)))) BETWEEN ((- ('Vk,wJi+'))) AND (CASE ''  WHEN '723218169' THEN '171321322' END))) GROUP BY (SQLITE_COMPILEOPTION_GET(rt0.c3) IN ()), rt0.c5 COLLATE NOCASE, ((LIKELIHOOD(rt0.c4, 0.7303555409908125))<<(((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c5)))); -- 0ms;
SELECT DISTINCT rt0.c0, RTRIM(x'5745'), (NOT (rt0.c1)) COLLATE RTRIM FROM t1, vt0, rt0 WHERE ((('1e500') ISNULL) COLLATE BINARY) GROUP BY CASE (('1176217130') BETWEEN ('813380574') AND (rt0.c5))  WHEN 0.39188812507992066 THEN ((0.11189602203252291) BETWEEN (vt0.c0) AND (rt0.c0)) END; -- 0ms;
SELECT DISTINCT CAST((((1918837757))<((rt0.c5))) AS REAL) FROM rt0, t1, vt0 WHERE ((((((((((NULL)OR(x'0107')))AND(NULL)))OR(0.8774970120538081)))OR(NULL)) IN ())); -- 0ms;
SELECT ((MIN(rt0.c2)) IS FALSE), ((((((((((rt0.c4)OR(rt0.c0)))AND(vt0.c0)))OR(NULL)))AND(rt0.c2))) NOTNULL), COUNT(CAST(t1.c0 AS NUMERIC)) FROM rt0, vt0 WHERE ((((0.29203337101782745, -1728330315, 0.9008340138414382)) NOT BETWEEN ((((NULL)>(NULL)), (('-1688571190')>>(NULL)), ('\r' IN ()))) AND ((ABS(0.1567302251103172), (((0.5643566433442468))=((-1.287181364E9))), (((NULL, '', 0.7663122389783509))==((x'7d330804', '+5Mg1}m?o', '')))))));SELECT DISTINCT ((rt0.c2 IN ()) IN ()) FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((vt0.c0)AND(t1.c0)))AND(rt0.c1)))AND(rt0.c5)))OR(rt0.c5)) COLLATE BINARY COLLATE RTRIM;SELECT DISTINCT (((~ (rt0.c0)))<<((t1.c0 IN ()))), ((((rt0.c2)IS NOT(rt0.c0)))OR(CASE WHEN rt0.c1 THEN 0xffffffffc2134e91 ELSE rt0.c5 END)), PERCENT_RANK() OVER () FROM rt0, t1 WHERE (CASE WHEN 0.05992963084694636 COLLATE BINARY THEN ('7F+)%D' IN ()) WHEN 5.12592138E8 THEN CASE WHEN 'FALSE' THEN 0.9956248250592942 END WHEN ((x'') NOT NULL) THEN ((('_W0L_VVN'))<((0.9598523454817489))) END); -- 1ms;
SELECT DISTINCT ((CASE WHEN t1.c0 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c6 WHEN vt0.c0 THEN NULL ELSE t1.c0 END) IS FALSE), ((((CAST(rt0.c4 AS NUMERIC))OR(rt0.c4)))OR(CAST(rt0.c3 AS INTEGER))), COUNT((rt0.c3 IN (rt0.c4, rt0.c2))) OVER ( ORDER BY NULL ASC, (((rt0.c1)) BETWEEN ((rt0.c5)) AND ((vt0.c0))) COLLATE NOCASE), ((((((913452578)OR('')))AND(rt0.c4))) NOT BETWEEN (AVG(0.7684981938419597)) AND (rt0.c0 COLLATE BINARY)), NULL FROM rt0 FULL OUTER JOIN t1 ON 'uQ4Y5^GjW' CROSS JOIN vt0 ON ((NULL)-(((((rt0.c6)AND(rt0.c4)))AND(rt0.c1)))); -- 0ms;
SELECT DISTINCT (NOT (x'')) FROM rt0, vt0 WHERE (TRIM(DISTINCT 271228195 COLLATE RTRIM)); -- 0ms;
SELECT (((((vt0.c0 IN (rt0.c5, rt0.c0, rt0.c2)))OR(0.1833017903407923)))OR((- (rt0.c5)))) FROM vt0, t1 WHERE ((((('0.8217959490051016')<=(0.9150939793748432)))/((('-1490253161') ISNULL)))) ORDER BY LTRIM((rt0.c4 IN (t1.c0))) DESC  NULLS FIRST;SELECT DISTINCT ((rt0.c3 COLLATE RTRIM)/(CASE WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN t1.c0 THEN rt0.c2 ELSE rt0.c2 END)), (((((rt0.c4 IN ()))OR((rt0.c6 IN ()))))OR((((vt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))), TOTAL(CASE rt0.c1  WHEN rt0.c4 THEN t1.c0 END COLLATE BINARY) OVER () FROM rt0, t1 RIGHT OUTER JOIN vt0 ON 0X55bde2b0 WHERE ((NOT ((~ (NULL))))); -- 0ms;
SELECT DISTINCT ((rt0.c5)*(t1.c0)) COLLATE NOCASE, json_remove(((rt0.c6) BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c4)>>(rt0.c5))), ((rt0.c1 COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3))) AND (((rt0.c5) IS TRUE))) FROM rt0, vt0, t1; -- 1ms;
SELECT DISTINCT (NOT (rt0.c3)) FROM t1;SELECT ALL ((((((rt0.c0)AND(rt0.c6)))OR(0.874474499580216))) NOT NULL) FROM vt0, t1 WHERE (((((0.7992179472524614)=(x''))) IS FALSE));SELECT DISTINCT rt0.c3 FROM t1, vt0 WHERE (((CASE x''  WHEN '+-' THEN 0.3657344907185597 END)<(CAST(0.30587431279569255 AS BLOB))));SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)||(TRIM(rt0.c4, rt0.c0))), ((((t1.c0) IS FALSE)) BETWEEN ((rt0.c3 IN (rt0.c4, rt0.c0))) AND ((+ (vt0.c0)))), ((((rt0.c1)AND(GLOB(rt0.c1, rt0.c6))))OR(CAST(rt0.c5 AS NUMERIC))) FROM rt0, vt0, t1 WHERE ((((((0.7302660192463768)OR('qvjy')))OR(NULL)) IN (((NULL) BETWEEN (1375031407) AND (NULL))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1 INDEXED BY i94, vt0 GROUP BY ((((rt0.c0)<<(rt0.c0))) NOT BETWEEN ((NOT (rt0.c4))) AND ((((rt0.c5, rt0.c3, t1.c0))=((rt0.c0, rt0.c1, t1.c0))))), ((((CAST(0.7563512668237616 AS TEXT))OR(((rt0.c1)IS('-1869406839')))))OR(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3)))), (CASE rt0.c1  WHEN rt0.c5 THEN rt0.c1 ELSE NULL END IN ()) HAVING (((('')<<(rt0.c1)))>=(((t1.c0)IS NOT(rt0.c1))));SELECT CASE (((rt0.c5))>=((rt0.c3)))  WHEN TOTAL(rt0.c0) THEN (((rt0.c3, rt0.c3, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c5, rt0.c2, rt0.c4))) ELSE ((t1.c0) IS FALSE) END FROM t1 CROSS JOIN rt0 ON CASE CAST(x'e5bc' AS TEXT)  WHEN ((rt0.c1) NOT NULL) THEN ((((rt0.c0)AND(rt0.c4)))AND(rt0.c6)) WHEN (~ (t1.c0)) THEN (NOT (t1.c0)) WHEN (t1.c0 IN ()) THEN NULL ELSE CASE WHEN -1219421571 THEN vt0.c0 ELSE rt0.c4 END END CROSS JOIN vt0 ON UNICODE(t1.c0) COLLATE RTRIM WHERE (((CHAR(0.5880253807874416)) BETWEEN (((0.028530347169357206)+(NULL))) AND (0.03198316135358148))) GROUP BY rt0.c3, ((((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c0)))/(NULL)), (~ (t1.c0)) COLLATE BINARY LIMIT -2131813876 OFFSET 1857985165; -- 1ms;
SELECT ALL NULL COLLATE RTRIM, 0.9253120248992983, rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) BETWEEN (t1.c0) AND (rt0.c3)))-(((vt0.c0) NOT NULL))) FROM rt0, t1, vt0 WHERE (((((NULL)>(0.4974348699193385)))=(load_extension(-1.39623482E9, x'58d9')))) ORDER BY (((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c0)) IN ()) DESC  NULLS FIRST;SELECT (- (((rt0.c2)>>(rt0.c6)))), ((((rt0.c6)IS NOT(rt0.c3)))GLOB((vt0.c0 IN (vt0.c0, rt0.c0)))), (((- (rt0.c1)))>>(t1.c0 COLLATE NOCASE)) FROM rt0, vt0;SELECT ALL (((rt0.c3)) BETWEEN ((UPPER('0.6880967080923637'))) AND ((GROUP_CONCAT(rt0.c1)))), ((rt0.c5 COLLATE NOCASE)*((t1.c0 IN ()))), (((CASE WHEN rt0.c4 THEN rt0.c0 ELSE t1.c0 END))<((((((rt0.c6)OR(rt0.c5)))AND(0.4326792693187177))))) FROM rt0 WHERE (CASE WHEN CAST(NULL AS TEXT) THEN CAST(NULL AS INTEGER) WHEN (('') NOT BETWEEN ('&D d5flu') AND (NULL)) THEN (NOT (0.17066987950943635)) WHEN '' THEN (((NULL, x'', NULL)) NOT BETWEEN ((NULL, NULL, x'')) AND ((NULL, 0.0, NULL))) END) ORDER BY ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (((rt0.c6)*(rt0.c4))) AND ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c6)))))  NULLS FIRST, ((((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c6))) NOT NULL) ASC;SELECT UNLIKELY((((rt0.c5))<=((rt0.c6)))) FROM rt0, t1, vt0; -- 0ms;
SELECT (NOT (vt0.c0)) FROM vt0 WHERE (TRIM(DISTINCT (NOT (x'')), ((('G<')) NOT BETWEEN ((NULL)) AND ((0.9868875769847395))))) GROUP BY CAST(((rt0.c0) IS TRUE) AS REAL) HAVING ((((rt0.c6) NOTNULL)) NOT BETWEEN (((rt0.c6) BETWEEN (rt0.c4) AND (vt0.c0))) AND (CAST(rt0.c5 AS BLOB)));SELECT ALL ((CAST(rt0.c2 AS BLOB))GLOB(((rt0.c6) ISNULL))), ((CASE WHEN rt0.c5 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c1 END) ISNULL), ((rt0.c3 COLLATE NOCASE)<<(((((vt0.c0)AND(NULL)))AND(rt0.c3)))) FROM rt0, t1;SELECT DISTINCT FIRST_VALUE(t1.c0) OVER () FROM t1; -- 0ms;
SELECT DISTINCT ((((rt0.c6)%(rt0.c4)))IS NOT(CAST(1419662290 AS REAL))) FROM vt0, rt0 GROUP BY '1734794203' HAVING HEX((rt0.c4 IN (rt0.c0))) ORDER BY (((vt0.c0 IN (rt0.c1)))|((((NULL)) NOT BETWEEN ((x'')) AND ((rt0.c3)))))  NULLS LAST, '-80292117' DESC, (((rt0.c3 IN ())) NOT BETWEEN (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c4)))AND(t1.c0))) AND (((rt0.c6) ISNULL))) DESC  NULLS LAST;SELECT DISTINCT (((SUM(rt0.c1), CAST(rt0.c2 AS INTEGER), t1.c0))>=((((((((((vt0.c0)AND(t1.c0)))AND(NULL)))AND(vt0.c0)))OR(rt0.c3)), ((rt0.c4) NOT BETWEEN (0.8098680247245836) AND (rt0.c4)), ((rt0.c5)GLOB(rt0.c6))))) FROM rt0, t1, vt0 WHERE (CAST((- (-349830748)) AS NUMERIC)) ORDER BY ((((rt0.c5)IS NOT(vt0.c0))) IS TRUE) ASC, CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c6) AND (vt0.c0)) THEN ((rt0.c6) BETWEEN (rt0.c3) AND (vt0.c0)) END ASC  NULLS LAST, (- ((rt0.c3 IN (rt0.c3, rt0.c1)))); -- 0ms;
SELECT DISTINCT (((TOTAL(vt0.c0)))<((0X6f0a37d4))) FROM rt0 INDEXED BY i94, vt0 WHERE ((((('991124641')|('-7897407')))IS NOT(CAST(NULL AS NUMERIC))));SELECT DISTINCT json_patch(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c2)>(rt0.c3))) FROM rt0, vt0, t1 WHERE (((('mf\run曨df', 0.12300886410277811, 0x4da704d6)) BETWEEN (((0.08334785804669276 IN (NULL, NULL)), json_array_length(x'2ae0'), ((-9223372036854775808)>('-915957296')))) AND ((CAST('-286092062' AS NUMERIC), ((0.6744873571095242) IS TRUE), ((x'')<>(0.9592508231388169)))))) ORDER BY ((((rt0.c2) ISNULL))<<((((t1.c0, rt0.c1, rt0.c1))==((rt0.c1, vt0.c0, rt0.c0)))))  NULLS FIRST; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) NOT NULL)) FROM t1, vt0, rt0; -- 0ms;
SELECT ALL rt0.c2 FROM t1, vt0;SELECT DISTINCT GROUP_CONCAT(CASE rt0.c3  WHEN rt0.c6 THEN vt0.c0 END) FROM t1 WHERE (CAST(NULL COLLATE NOCASE AS INTEGER));SELECT DISTINCT ((((rt0.c5) ISNULL)) IS FALSE) FROM vt0, rt0 WHERE (LIKELIHOOD(((x'') ISNULL), 0.3400531667820149)); -- 0ms;
SELECT DISTINCT (rt0.c3 IN ()) FROM vt0, rt0 ORDER BY ((CAST(0xffffffffd42ace0e AS REAL)) NOTNULL) ASC  NULLS LAST; -- 0ms;
SELECT UPPER(((rt0.c1) NOT NULL)) FROM t1 WHERE ((('-411903690')<>(NULL))) LIMIT -546078587 OFFSET 1649103221;SELECT GROUP_CONCAT((rt0.c2 IN ()) COLLATE NOCASE) OVER () FROM rt0, vt0; -- 1ms;
SELECT DISTINCT (((rt0.c1, rt0.c5, rt0.c3, vt0.c0, vt0.c0)) BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c6))), ((2110557922) BETWEEN (rt0.c4) AND (rt0.c6)), highlight(rt0.c1, rt0.c0, vt0.c0, rt0.c5), t1.c0 COLLATE NOCASE, ((rt0.c5) IS FALSE))) AND ((rt0.c3, ((rt0.c0) NOT NULL), CASE rt0.c0  WHEN rt0.c4 THEN t1.c0 ELSE '1364827841' END, ((rt0.c2)%(vt0.c0)), (((t1.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c5)))))) FROM vt0, t1 WHERE (CAST(STRFTIME(NULL, NULL, NULL) AS TEXT));SELECT ALL (((- (t1.c0)))||(rt0.c6)) FROM vt0, rt0, t1; -- 0ms;
SELECT DISTINCT ((((rt0.c0)%(rt0.c1)))>(((t1.c0) ISNULL))) FROM t1, rt0, vt0 WHERE (((CASE WHEN '-1131709713' THEN -1453362076 WHEN ',' THEN 0x394862ac WHEN x'' THEN NULL WHEN '-416419577' THEN 0.3178307217936083 WHEN '-557901892' THEN 0.350086833818662 ELSE 0.38933251926469015 END)+(TOTAL_CHANGES()))); -- 0ms;
SELECT DISTINCT (((+ (rt0.c1))) IS FALSE) FROM vt0, t1;SELECT DISTINCT ((((x'')/(rt0.c6))) ISNULL) FROM rt0; -- 0ms;
SELECT ((vt0.c0)<((rt0.c3 IN ()))), ((((x'2d85')AND(COUNT(rt0.c0))))AND(((rt0.c6) NOT NULL))), ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (t1.c0))) AND (((x'') NOT NULL))) FROM vt0;SELECT DISTINCT CASE (rt0.c4 IN ())  WHEN ((rt0.c0)/('')) THEN (((rt0.c5))==((rt0.c1))) WHEN ((vt0.c0)>=(rt0.c2)) THEN ((rt0.c5) BETWEEN (rt0.c6) AND (rt0.c6)) WHEN ((rt0.c0)==(t1.c0)) THEN rt0.c3 END FROM vt0, t1 WHERE (NULLIF(DISTINCT ((x'') ISNULL), CAST(NULL AS TEXT)));SELECT (ABS(rt0.c4) IN ()) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)||(rt0.c0)) COLLATE NOCASE, RANK() OVER (), SUM(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3))), CASE WHEN json_patch(rt0.c2, 'Q!') THEN NULL END, LIKELIHOOD(CASE WHEN vt0.c0 THEN rt0.c0 ELSE 'IS硯kns>' END, 0.784824145688914) FROM t1, vt0, rt0 WHERE (LOWER(((('-1374098203'))>=((1414817695))))) GROUP BY ((rt0.c3) IS FALSE), 0x9db446 COLLATE NOCASE, (((((rt0.c3)OR(rt0.c1)))AND(t1.c0)) IN ()) HAVING SUM(((rt0.c5) NOT BETWEEN (rt0.c2) AND (t1.c0))) COLLATE BINARY;SELECT ((rt0.c6)<>((((rt0.c5)) BETWEEN ((rt0.c6)) AND ((rt0.c6))))), TOTAL(CASE rt0.c1  WHEN -1.61634882E9 THEN rt0.c6 ELSE rt0.c0 END) OVER (), AVG((rt0.c5 IN (rt0.c2))) FROM vt0, rt0, t1 NOT INDEXED WHERE (((((((0x257f2338)|('-600702519')))OR((('1(') NOT BETWEEN (NULL) AND (x'fce7')))))AND('0.5341571941060623' COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT (((rt0.c3)/(t1.c0)) IN ()), ((rt0.c0 IN ('D+c% x', t1.c0)) IN ()), COUNT(*) FILTER(WHERE (((((rt0.c6)>=('1818984680')), ((rt0.c5) NOT BETWEEN (rt0.c4) AND (x'd54e')), (rt0.c3 IN ())))==((((rt0.c3) NOT NULL), ((rt0.c6)OR(rt0.c2)), (rt0.c4 IN ()))))) OVER (), LIKELIHOOD(DISTINCT '-1e500', 0.13432462377254673), t1.c0 FROM t1, rt0 WHERE (((CASE WHEN '㙌s1K젔H}\r' THEN NULL ELSE '-1545819152' END)<((+ (NULL))))) LIMIT -466649955 OFFSET 1531891202; -- 0ms;
SELECT ALL (NOT (SUM(rt0.c4))) FROM vt0, rt0, t1 LIMIT -7897407; -- 1ms;
SELECT DISTINCT vt0.c0, (((((rt0.c2)%(rt0.c4))))>=((((rt0.c6)*('2000547017'))))), ((rt0.c3) ISNULL) COLLATE RTRIM COLLATE NOCASE FROM rt0 WHERE ((+ ((- (0xfffffffff49c716d))))) GROUP BY ((9.8338291E8) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (CAST(NULL AS BLOB))), ((((rt0.c0)>=(rt0.c2))) BETWEEN (((vt0.c0)<>(rt0.c4))) AND (rt0.c1 COLLATE NOCASE)), (+ (((rt0.c1) NOT BETWEEN (rt0.c6) AND (rt0.c2)))), ((CAST(rt0.c5 AS TEXT)) IS FALSE), ((CAST(0.13305301913684808 AS NUMERIC))>=(CAST(rt0.c3 AS TEXT)));SELECT DISTINCT GROUP_CONCAT(((((rt0.c2)OR(vt0.c0)))OR(NULL))) FROM t1, vt0 INTERSECT SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC))!=((rt0.c2 IN ()))) FROM vt0 WHERE ((((x'', ((((((((x'')OR(x'')))OR(x'')))AND(NULL)))AND(x'')), ((((((((((((0.9321771006643114)AND(x'b971')))OR(x'')))AND('H<n')))AND(NULL)))OR(x'')))AND(NULL))))>=(((('') ISNULL), (('8')>(0.7136205425624538)), '4G&'))));SELECT DISTINCT (((rt0.c4)) BETWEEN (((+ (rt0.c6)))) AND ((x''))), rt0.c0, (((MIN(rt0.c4), ((NULL) ISNULL), ((rt0.c3) BETWEEN (t1.c0) AND (vt0.c0))))>((((rt0.c5) BETWEEN (t1.c0) AND (rt0.c0)), 'Xa+%Y9wꘪE', 0.4885257631121469))) FROM rt0 WHERE (TRIM(DISTINCT (((NULL, '-1173254096', 2.057883385E9)) NOT BETWEEN (('-1', x'', NULL)) AND ((x'be37', x'', ''))), ((((((((0.6582232558631722)OR('-1688571190')))OR(x'')))OR('-859020696')))AND(0.4689003768825004))));SELECT DISTINCT ((rt0.c3) NOT BETWEEN (((t1.c0)%(vt0.c0))) AND (rt0.c5)) FROM t1 WHERE (((((((((((0.4520396653257128) NOT BETWEEN (0.2407705371650175) AND (0xffffffff82242850)))OR(0.13557617487438423 COLLATE RTRIM)))AND(((NULL) ISNULL))))AND(0X60633bfd)))AND(((NULL)>>(NULL)))));SELECT DISTINCT UPPER(((((((((rt0.c6)OR(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)))OR(x''))) FROM t1 WHERE (((((NULL) NOT BETWEEN (0.39375114286809876) AND (NULL)))GLOB(DATETIME(NULL, NULL, 0Xffffffff9e923cb6))));SELECT DISTINCT (((rt0.c6)) NOT BETWEEN ((((rt0.c3) NOTNULL))) AND ((t1.c0))) FROM vt0, t1;SELECT ABS((((rt0.c3, rt0.c6, rt0.c1)) NOT BETWEEN ((rt0.c6, rt0.c5, t1.c0)) AND ((rt0.c2, rt0.c4, '1710211661')))) FROM rt0, t1 WHERE (TIME(((0.052568984647688) BETWEEN (NULL) AND (0.6403187098104852)), (NOT (NULL)), (+ (240077439)))) LIMIT 1881983055; -- 0ms;
SELECT ALL CAST((~ ('37772004')) AS TEXT) FROM vt0, rt0, t1 WHERE (0.2957202679332839); -- 0ms;
SELECT LEAD(TRIM(x''), ((NOT (rt0.c2)) IN (((rt0.c6) IS TRUE))), CAST((~ (rt0.c1)) AS BLOB)) OVER ( ORDER BY ((('-20245259')) BETWEEN ((rt0.c0)) AND (((rt0.c6 IN ())))), ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))AND((vt0.c0 IN ()))))AND(HEX(rt0.c0))) ASC, IFNULL(DISTINCT (((rt0.c2, rt0.c5, rt0.c5)) BETWEEN ((rt0.c5, rt0.c5, rt0.c0)) AND ((t1.c0, rt0.c5, rt0.c5))), ((rt0.c0) IS TRUE)) ASC RANGE  UNBOUNDED PRECEDING) FROM t1, rt0, vt0 GROUP BY (+ (((t1.c0)<(rt0.c2)))) HAVING CASE WHEN rt0.c5 THEN ((rt0.c3) IS FALSE) ELSE rt0.c1 COLLATE NOCASE END; -- 1ms;
SELECT DISTINCT (((((rt0.c4 IN (rt0.c3)))OR(((rt0.c3)AND(rt0.c3)))))AND(SUM(rt0.c0))), (((CAST(rt0.c3 AS TEXT)))!=((STRFTIME(rt0.c2, rt0.c4, rt0.c3, rt0.c2, rt0.c0)))), ((((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1)))<=(277147393)) FROM vt0, rt0, t1; -- 0ms;
SELECT DISTINCT ((((rt0.c6)%(rt0.c6)))OR(((vt0.c0) IS TRUE))) FROM rt0 WHERE (CAST('m{2#ꂓ]' AS REAL) COLLATE NOCASE) GROUP BY ((rt0.c5)<(rt0.c4)) COLLATE NOCASE, (~ (((rt0.c1) IS FALSE))), ((((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c6)))<(rt0.c2 COLLATE RTRIM)) HAVING ((CAST(rt0.c4 AS REAL))IS(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3))));SELECT CASE WHEN ((rt0.c3) NOT BETWEEN (t1.c0) AND (rt0.c2)) THEN rt0.c4 ELSE CASE rt0.c3  WHEN rt0.c3 THEN rt0.c6 WHEN x'' THEN rt0.c5 WHEN t1.c0 THEN 0.7684587806597255 END END FROM t1, vt0, rt0 WHERE (((0.9641917988274616 COLLATE RTRIM)|(x''))) ORDER BY CAST(x'' AS REAL); -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND('-1396234820')))OR(rt0.c4))) ISNULL) FROM rt0, t1, vt0 WHERE (LIKELIHOOD((('1256461848')AND(-278869567)), 0.6788349217481875)); -- 0ms;
SELECT ALL '' FROM vt0, t1 WHERE (((((-396978462) NOTNULL))>>((((''))<>((NULL)))))) GROUP BY CAST(DATETIME(rt0.c5, t1.c0, -1.173254096E9) AS NUMERIC), (((rt0.c5)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((-1576072343))), CASE WHEN (- (rt0.c6)) THEN ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)) WHEN ((rt0.c5) NOT BETWEEN (rt0.c6) AND (rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN x'' THEN ((((((((((((rt0.c0)AND(rt0.c0)))OR(t1.c0)))OR(rt0.c3)))AND(rt0.c6)))OR(vt0.c0)))OR(t1.c0)) ELSE (0.7960600724373951 IN (rt0.c0, rt0.c4)) END HAVING CAST(((((rt0.c6)OR(t1.c0)))AND(rt0.c5)) AS BLOB);SELECT ALL LAG(0.43477859692980914, ((((vt0.c0) NOT NULL)) IS FALSE), x'd2183b86') OVER () FROM t1, vt0 WHERE ((((((NULL))==(('w>'))))>=(x'3aad' COLLATE NOCASE))) GROUP BY CAST(rt0.c6 AS REAL) HAVING CAST(rt0.c3 AS INTEGER) COLLATE BINARY LIMIT -896355928;SELECT ALL (NOT (rt0.c1 COLLATE RTRIM)), ((((rt0.c0)LIKE(rt0.c6))) NOT NULL), UNICODE(((rt0.c1)OR(t1.c0))) FROM rt0 GROUP BY (((((rt0.c0 IN ()))OR(CASE rt0.c3  WHEN rt0.c4 THEN t1.c0 ELSE vt0.c0 END)))AND(0.3349102172179622)) HAVING ((rt0.c6) IS FALSE) COLLATE BINARY;SELECT DISTINCT t1.c0 FROM rt0, vt0, t1 WHERE (TRIM(DISTINCT ((NULL) BETWEEN (x'082e') AND (0Xffffffffb7ee30f0)))) GROUP BY (((~ (rt0.c0))) BETWEEN (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c4 ELSE vt0.c0 END) AND (((rt0.c2)AND(rt0.c0)))), CAST(rt0.c1 COLLATE BINARY AS INTEGER), ((t1.c0) ISNULL) HAVING CAST((rt0.c5 IN ('-395562964')) AS REAL) ORDER BY ((((((((((rt0.c6) ISNULL))AND(TIME(rt0.c2, t1.c0, rt0.c3))))AND((t1.c0 IN ()))))OR(CAST(t1.c0 AS TEXT))))AND((- (rt0.c5))))  NULLS LAST LIMIT 1710211661; -- 0ms;
SELECT ALL NTH_VALUE(t1.c0, CASE '2z,|ᘘg'  WHEN ((t1.c0)&(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c0)-(t1.c0)) THEN ((t1.c0)>>(t1.c0)) WHEN x'9aea' COLLATE NOCASE THEN t1.c0 COLLATE BINARY ELSE ((t1.c0) NOT NULL) END) OVER () FROM t1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt0, t1; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c4))) NOTNULL) FROM t1;SELECT ALL 0.4490193227331276 FROM t1, vt0; -- 4ms;
SELECT DISTINCT load_extension((rt0.c0 IN (rt0.c6))) FROM t1 WHERE (CASE WHEN CAST(0.9797743694639586 AS REAL) THEN '~NYO)F' COLLATE BINARY ELSE ((0xffffffffe1d54460) NOT NULL) END);SELECT rt0.c3, (~ ((('yV< ') NOT BETWEEN (rt0.c1) AND (t1.c0)))), rt0.c5 FROM rt0, vt0;SELECT LIKELY(((rt0.c2)>>(t1.c0))) FROM t1;SELECT DISTINCT MAX(IFNULL(rt0.c1, rt0.c1), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END) FROM t1, vt0 WHERE ((-1.39623482E9 COLLATE NOCASE IN ()));SELECT RANK() OVER () FROM vt0, t1 WHERE ((~ ((('0.4291037102417291') BETWEEN (NULL) AND (4.35913923E8))))); -- 0ms;
SELECT GROUP_CONCAT(-1.91073939E8) COLLATE BINARY COLLATE RTRIM FROM rt0, t1 WHERE (((('/!謂\n')) NOT BETWEEN ((((((((((x'dc87')OR(NULL)))OR(0x6a6d65d8)))OR('')))AND(x'')))) AND ((0.9611374694387419)))) LIMIT 294581372; -- 0ms;
SELECT ((((rt0.c6 COLLATE BINARY)AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))))AND(((rt0.c1)>>(vt0.c0)))) FROM t1 GROUP BY ((((rt0.c5)AND(CAST(x'' AS BLOB))))AND(SQLITE_COMPILEOPTION_GET(rt0.c4))), ((rt0.c4)!=(rt0.c5)) COLLATE RTRIM, (((((0.0484516781667903, rt0.c5, rt0.c4)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c5))))%(CASE WHEN vt0.c0 THEN rt0.c1 END)), CAST((~ (rt0.c5)) AS REAL), ((vt0.c0) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((rt0.c6) NOT BETWEEN (rt0.c2) AND (rt0.c5)))), (NOT (rt0.c6)) COLLATE NOCASE, (((((vt0.c0)AND(rt0.c3)), TRIM(DISTINCT rt0.c5, rt0.c2), ((x'')|(rt0.c4))))<(((rt0.c4 IN ()), (((rt0.c0))>((rt0.c1))), CAST(rt0.c3 AS TEXT))));SELECT ALL ((((rt0.c5)GLOB(rt0.c6))) ISNULL) FROM rt0, vt0; -- 0ms;
SELECT ((CASE WHEN rt0.c4 THEN rt0.c2 WHEN x'' THEN rt0.c3 WHEN rt0.c6 THEN rt0.c3 ELSE 548232828 END)/(((rt0.c3)%(rt0.c6)))) FROM rt0; -- 0ms;
SELECT (((rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, ((((vt0.c0)AND(vt0.c0)))OR(rt0.c6)), CASE t1.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)) AND (((('660479551') IS FALSE), (+ (rt0.c4)), ((rt0.c6) IS TRUE)))) FROM rt0, t1, vt0; -- 1ms;
SELECT DISTINCT CAST(TOTAL(rt0.c6) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t1 WHERE ((1.338872233E9 IN ())); -- 0ms;
SELECT ((((GROUP_CONCAT(rt0.c6))OR(LOWER(DISTINCT rt0.c0))))OR(((t1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c5)))) FROM t1 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS NUMERIC);SELECT ALL CASE x''  WHEN LIKELIHOOD(rt0.c3, 0.8541643262965337) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c6))) END, AVG(LOWER(DISTINCT rt0.c3)) OVER (), (+ (((rt0.c4) BETWEEN (rt0.c3) AND ('0.9766473254204087')))) FROM vt0, t1, rt0 WHERE (1.100528285E9); -- 0ms;
SELECT ALL (((rt0.c1)) BETWEEN ((rt0.c6 COLLATE BINARY)) AND ((CAST(vt0.c0 AS INTEGER)))), NULLIF(DISTINCT (+ (rt0.c6)), (rt0.c4 IN ())), CAST(rt0.c0 AS INTEGER) FROM rt0 WHERE (((((((((((((((x'') NOTNULL))AND((0.9622599221562959 IN ()))))OR((('-334236339') NOT BETWEEN (0.4073725142674771) AND (0.1865551095438731)))))AND((('-618805869')<<(NULL)))))AND((~ ('1918837757')))))OR(((0.6472570560084095)IS NOT(0.6194731816813377)))))OR('-1967008787' COLLATE NOCASE)));SELECT DISTINCT rt0.c2 COLLATE NOCASE FROM t1, vt0 WHERE (CAST((('-334913602') IS FALSE) AS TEXT));SELECT ((((rt0.c5)<>(rt0.c1)))>>(CAST(NULL AS INTEGER))) FROM vt0, t1;SELECT (NOT (t1.c0)) COLLATE RTRIM FROM t1, rt0 WHERE (CAST(((x'') IS FALSE) AS TEXT)) LIMIT -1608141594 OFFSET -1771293196; -- 0ms;
SELECT DISTINCT (((rt0.c6))>=((rt0.c3))) COLLATE NOCASE FROM rt0, vt0, t1; -- 0ms;
SELECT ALL (rt0.c1 IN ()) FROM rt0, vt0, t1 WHERE (NULL); -- 0ms;
SELECT (((vt0.c0, rt0.c5, t1.c0, rt0.c3, t1.c0)) BETWEEN (('-1576072343', TOTAL(rt0.c0), ((((rt0.c4)AND(rt0.c5)))AND(rt0.c6)), (((rt0.c4))<=((NULL))), (rt0.c3 IN (rt0.c5)))) AND ((rt0.c5 COLLATE NOCASE, (('-2046193029')<=(t1.c0)), LENGTH(rt0.c5), ((rt0.c2)>=(rt0.c6)), rt0.c1 COLLATE NOCASE))) FROM rt0, vt0, t1 GROUP BY ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c5 WHEN rt0.c5 THEN t1.c0 END)IS NOT((rt0.c6 IN (rt0.c4)))); -- 0ms;
SELECT ALL ('0.6896306980678683' COLLATE RTRIM IN ()) FROM vt0 WHERE (CAST(((x'') IS TRUE) AS TEXT)); -- 0ms;
SELECT (- (((rt0.c1)-(rt0.c1)))) FROM t1, vt0, rt0; -- 0ms;
SELECT ALL (((((rt0.c5, rt0.c5, 0xffffffffafba629f, rt0.c0, 1709163879))<((rt0.c6, rt0.c0, rt0.c2, rt0.c4, t1.c0)))) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (((t1.c0) ISNULL))) FROM rt0, vt0 INDEXED BY i94;SELECT ((~ (rt0.c4)) IN ((rt0.c3 IN (rt0.c6, rt0.c3)), CAST(t1.c0 AS REAL))) FROM rt0;SELECT DISTINCT AVG(1912007211) OVER (), ((((((-958325648, rt0.c6, rt0.c6)) BETWEEN ((rt0.c4, vt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c6, rt0.c6)))))>=((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c6))))), ((CAST(t1.c0 AS BLOB))GLOB(CAST(rt0.c2 AS BLOB))) FROM t1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((t1.c0)) BETWEEN (('0.22321437148116008')) AND ((CAST(rt0.c5 AS NUMERIC)))) FROM rt0, vt0, t1 WHERE ((((x'' IN (NULL, '0z58A]+P')))GLOB(UPPER(NULL)))); -- 0ms;
SELECT DISTINCT ((rt0.c0) NOT NULL) COLLATE BINARY FROM t1, vt0 WHERE ((((NULL IN ()))!=(((0.2560589466370803) IS TRUE))));SELECT ALL ((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0))) NOT NULL) FROM t1, vt0 WHERE (x'');SELECT DISTINCT (((((((rt0.c2, rt0.c2, rt0.c5)) BETWEEN ((rt0.c3, rt0.c5, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c3))))OR(((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c4)))))AND(((rt0.c1)LIKE(rt0.c1)))), AVG((rt0.c6 IN ())) FILTER(WHERE (- (rt0.c2)) COLLATE RTRIM COLLATE NOCASE) OVER (), (((+ (vt0.c0)))<((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) FROM t1 WHERE ((NOT (NULLIF(0.7975262235104562, 0xfffffffff9cd9417))));SELECT DISTINCT ((rt0.c0) ISNULL) FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) BETWEEN ((rt0.c5 IN (t1.c0))) AND (0.2407705371650175)) FROM vt0, rt0, t1 WHERE (((5.48232828E8 COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), x'', ((((rt0.c1))<((rt0.c1))) IN (t1.c0, AVG(t1.c0))) FROM vt0, rt0;SELECT CASE WHEN rt0.c1 COLLATE NOCASE THEN CAST(rt0.c2 AS INTEGER) WHEN (+ (rt0.c4)) THEN x'75bc' WHEN rt0.c1 COLLATE BINARY THEN LIKE(rt0.c0, rt0.c1, 'm') ELSE rt0.c5 END, (- (COUNT(rt0.c5))), ((((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2))) NOT BETWEEN ((rt0.c6 IN ())) AND (CASE WHEN rt0.c5 THEN rt0.c6 ELSE vt0.c0 END)) FROM t1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))*(IFNULL(DISTINCT rt0.c6, rt0.c4))) FROM vt0 WHERE ((('NW4\O' COLLATE NOCASE) ISNULL));SELECT ALL CASE CAST(rt0.c6 AS NUMERIC)  WHEN CAST(rt0.c5 AS REAL) THEN rt0.c6 ELSE COUNT(rt0.c6) END FROM vt0, rt0 WHERE ((((-2140980446)) BETWEEN ((CAST(0.2635366465338911 AS REAL))) AND ((((x'')&(0.27966770618411096)))))); -- 1ms;
SELECT ALL rt0.c3 FROM t1 WHERE (((((NULL) IS FALSE)) IS FALSE)) ORDER BY 0.16339327581343888 ASC LIMIT -1688571190;SELECT (- ((((rt0.c3)) BETWEEN ((rt0.c6)) AND ((rt0.c1))))) FROM rt0, vt0 WHERE (CASE WHEN CAST('' AS NUMERIC) THEN CASE '1227515489'  WHEN NULL THEN NULL END WHEN (('-1412626192') NOT BETWEEN (0.8596260278706642) AND (NULL)) THEN ((((0.883536225691941)OR(0xfffffffffd1b4ee1)))OR('gXzt+#')) WHEN ((0.49461896721038223) BETWEEN (0.411914982794225) AND (x'')) THEN ((NULL)OR(x'')) ELSE CAST(x'' AS TEXT) END); -- 0ms;
SELECT (~ (rt0.c0)), CASE WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c5)))OR(rt0.c0)) THEN COUNT(*) ELSE ((((vt0.c0)OR(rt0.c4)))OR(rt0.c4)) END, AVG((rt0.c0 IN (vt0.c0))) OVER (), TYPEOF(COUNT(rt0.c4)), (~ (CAST(rt0.c5 AS INTEGER))) FROM t1, rt0 GROUP BY '' HAVING ((((rt0.c4)>(vt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND ((((rt0.c1, rt0.c2, '1323464679'))<>((rt0.c1, rt0.c4, rt0.c6)))));SELECT ALL ((rt0.c5) NOT BETWEEN (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c2)>>('eyvS9')))), LAG((((rt0.c0)) NOT BETWEEN ((((rt0.c1)||(rt0.c4)))) AND ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN NULL WHEN rt0.c6 THEN rt0.c0 END))), (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()), ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c6))) NOT NULL)) OVER (), ((rt0.c2)%(QUOTE(rt0.c1))), (- (((rt0.c4) BETWEEN (0.34655812317369106) AND (rt0.c4)))), ((CAST(t1.c0 AS INTEGER))AND(CASE rt0.c6  WHEN vt0.c0 THEN t1.c0 END)) FROM rt0, t1 WHERE (json_valid((('')AND(0.2147209890983649))));SELECT CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c6)-(rt0.c5)) ELSE rt0.c4 COLLATE RTRIM END FROM vt0, rt0, t1 WHERE (((((1.17621713E9) BETWEEN ('>/') AND ('-915957296'))) BETWEEN ((('0.890271556896283')/(2057883385))) AND (NULL COLLATE BINARY))); -- 1ms;
SELECT DISTINCT ((((vt0.c0)>=(t1.c0))) IS TRUE), ((((rt0.c0)>=(rt0.c3))) NOTNULL), FIRST_VALUE(rt0.c2) OVER () FROM vt0, rt0, t1; -- 0ms;
SELECT ALL CASE WHEN CAST(rt0.c2 AS INTEGER) THEN MAX(rt0.c4) ELSE (+ (rt0.c1)) END FROM vt0, t1, rt0 WHERE (((((((((NULL)OR(((((x'')AND(NULL)))AND(')[4LXpSK')))))OR(HEX(DISTINCT ''))))OR(HEX(DISTINCT NULL))))OR(((',*om_o䙃H') ISNULL)))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM t1, vt0, rt0 WHERE (x'') GROUP BY (CAST(rt0.c0 AS TEXT) IN ()); -- 0ms;
SELECT DISTINCT SUM(MIN(rt0.c0) COLLATE NOCASE) FROM t1, rt0, vt0;SELECT CASE (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))  WHEN (((('w|')OR(0.9825338646083597)))OR('')) THEN '-1764874730' ELSE rt0.c4 COLLATE RTRIM END, rt0.c1, rt0.c4 FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT LAG(((vt0.c0) NOTNULL), NULL, (((rt0.c6)) NOT BETWEEN ((0.9061171487490036)) AND ((((rt0.c5)LIKE(rt0.c1)))))) OVER () FROM rt0, vt0, t1 INTERSECT SELECT DISTINCT COALESCE(DISTINCT ((rt0.c3)IS(rt0.c2)), ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c4))) FROM rt0; -- 1ms;
SELECT DISTINCT '/Z', NULL, AVG(TYPEOF(rt0.c0)) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c3 IN (rt0.c2, rt0.c4)))==(COUNT(rt0.c3))), ((LIKELY(rt0.c3))>>(((x'aefe') BETWEEN (rt0.c6) AND (rt0.c1)))), (((rt0.c3)) BETWEEN ((rt0.c6)) AND (('1631600412'))) FROM rt0, t1, vt0 WHERE (CASE ((0Xffffffff8bf860d0) BETWEEN (0.6703848080480562) AND (0X394862ac))  WHEN ((((0.6602432052085543)OR(',')))OR(NULL)) THEN ((0.6507391899545725)AND(0Xfffffffffc120f93)) ELSE LOWER(NULL) END) ORDER BY (rt0.c5 IN ())  NULLS LAST; -- 0ms;
SELECT DISTINCT rt0.c3 FROM t1, vt0, rt0; -- 0ms;
SELECT ALL MIN(((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))), vt0.c0, ((((((((((rt0.c3)>=(rt0.c6)))OR((rt0.c2 IN ()))))OR(GROUP_CONCAT(t1.c0))))AND(((rt0.c5) NOT BETWEEN (rt0.c6) AND (t1.c0)))))AND(COALESCE(vt0.c0, 0.514473830171813))) FROM t1, vt0 WHERE (load_extension(CASE WHEN NULL THEN NULL ELSE '0e' END)) ORDER BY json_object(-8.88053971E8, (rt0.c3 IN ()))  NULLS FIRST;SELECT DISTINCT CAST((((rt0.c4, rt0.c3, vt0.c0)) NOT BETWEEN ((t1.c0, rt0.c1, rt0.c5)) AND ((t1.c0, t1.c0, t1.c0))) AS TEXT) FROM t1 LIMIT 1660206370;SELECT DISTINCT ((CAST(t1.c0 AS NUMERIC)) NOT NULL) FROM vt0, rt0 WHERE (0.9069595369543332) GROUP BY LIKELIHOOD(rt0.c2, 0.013612214696967051) HAVING TYPEOF(DISTINCT rt0.c4);SELECT DISTINCT LEAD(((((rt0.c5)<=(rt0.c2)))-(rt0.c3 COLLATE NOCASE)), ((((~ (rt0.c2)), ((((rt0.c3)AND(rt0.c5)))AND(rt0.c4)), 0xffffffffd8613c6d))>((TRIM(-1863480979, rt0.c1), ((rt0.c5)IS(rt0.c5)), CAST(rt0.c0 AS INTEGER)))), CASE WHEN rt0.c6 THEN NULL COLLATE NOCASE ELSE ((rt0.c4) NOTNULL) END) OVER (), rt0.c0, ((((((((((((((rt0.c6)IS(rt0.c6)))OR((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c6))))))AND(((((rt0.c2)OR(rt0.c0)))OR(NULL)))))AND(CAST(rt0.c4 AS TEXT))))OR(rt0.c1)))OR(((rt0.c1) BETWEEN (NULL) AND (t1.c0)))))OR(rt0.c0)) FROM rt0 WHERE (((NULL)OR('yF')) COLLATE RTRIM);SELECT DISTINCT (- (COUNT(rt0.c4))), x'', ((NULL)||(CASE rt0.c2  WHEN rt0.c1 THEN t1.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN x'5ffa' THEN rt0.c2 WHEN x'' THEN rt0.c5 WHEN vt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c2 END)) FROM rt0, t1, vt0; -- 0ms;
SELECT ALL COUNT(CAST(rt0.c6 AS NUMERIC)) OVER () FROM t1, vt0, rt0; -- 0ms;
SELECT CASE (NOT (rt0.c2))  WHEN ((((((((rt0.c3)OR(rt0.c3)))AND(t1.c0)))AND(rt0.c3)))AND(rt0.c1)) THEN LIKELIHOOD(rt0.c2, 0.6111642142737861) ELSE (((t1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0))) END FROM vt0, rt0 LIMIT -1616348820;SELECT ((((((((((rt0.c5)OR(0.27701130353884296)))OR('-1580231638')))OR(rt0.c0)))AND(rt0.c1))) BETWEEN ((((t1.c0))<((rt0.c1)))) AND (rt0.c2 COLLATE RTRIM)) FROM vt0;SELECT (NOT (((rt0.c0) BETWEEN (rt0.c5) AND (0.4510126098272965)))) FROM rt0, vt0, t1; -- 0ms;
SELECT DISTINCT ((((NULL)OR((((rt0.c2))>((rt0.c2))))))OR(((NULL)/(x'')))) FROM vt0 WHERE ((((((((((('846172372') NOTNULL))AND((x'f5108fcf' IN ()))))OR((((NULL, 0.4055297569684032, '2073633869'))<=((NULL, '', NULL))))))AND(NULL COLLATE RTRIM)))OR(((x'') IS TRUE))));SELECT ALL (CAST(t1.c0 AS TEXT) IN (((-8.19657746E8) BETWEEN (rt0.c4) AND (rt0.c6)), ((rt0.c6) NOT BETWEEN (t1.c0) AND (vt0.c0)))) FROM t1, vt0, rt0; -- 0ms;
SELECT UNLIKELY(DISTINCT ((rt0.c4)>(rt0.c4))) FROM t1;SELECT ALL (- (rt0.c1)) FROM rt0, vt0, t1 WHERE ((('-658960266' COLLATE RTRIM) NOTNULL)) GROUP BY ((((rt0.c2)AND(rt0.c6))) NOT BETWEEN (((rt0.c1)>>(vt0.c0))) AND (((t1.c0) IS FALSE))), 0.36773107012226114, x'' HAVING (((((((x'')AND(rt0.c1)))AND(t1.c0)), COUNT(*), 0.5256157398869328))<((((rt0.c6)-(rt0.c2)), ((((rt0.c2)AND(0x34ba734d)))AND(rt0.c1)), ((((rt0.c5)AND(rt0.c1)))OR(rt0.c4))))); -- 0ms;
SELECT ALL CAST(0.9214849089085945 AS BLOB) FROM t1, rt0; -- 0ms;
SELECT DISTINCT t1.c0, (((vt0.c0)) BETWEEN ((0.5891867078383127)) AND ((CAST(rt0.c5 AS NUMERIC)))), (((vt0.c0)*(rt0.c6)) IN (CAST(rt0.c2 AS REAL))) FROM rt0 WHERE (((((0.5003928012728127, -1.728330315E9, '*☖+~', NULL, 'w|')) BETWEEN ((0.7261717684633052, '8S?', '', -1437492072, x'')) AND ((2.98731289E8, 0.07214364613717239, -80292117, x'', 0.411914982794225))) IN ()));SELECT DISTINCT ((((((rt0.c1)OR(rt0.c5)))AND(rt0.c3)))IS NOT(((rt0.c3)LIKE('347341094')))), ((-819657746)<(vt0.c0)) COLLATE BINARY, DATETIME(rt0.c1, (NOT (t1.c0)), CAST(rt0.c6 AS NUMERIC)) FROM t1, vt0, rt0 WHERE (((((TRIM(DISTINCT -8.97372508E8))OR((+ (0.6037686732094106)))))OR(NULL))) LIMIT -1065816497; -- 0ms;
SELECT DISTINCT (((rt0.c5, t1.c0, vt0.c0)) BETWEEN (((~ (rt0.c2)), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c2 ELSE vt0.c0 END, '0.2758426346251758')) AND ((t1.c0 COLLATE NOCASE, ((rt0.c4) NOT BETWEEN (rt0.c2) AND (x'')), ((rt0.c4) NOT BETWEEN (vt0.c0) AND ('459676659'))))) FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT NTILE((~ ((t1.c0 IN ())))) OVER ( ORDER BY IFNULL(rt0.c4, (+ (t1.c0))), rt0.c4  NULLS LAST, CASE (rt0.c2 IN ())  WHEN '0' THEN (NULL IN ()) END ASC  NULLS FIRST) FROM t1 WHERE (((((0.008159701361834748) BETWEEN (0X1a201e6a) AND (NULL))) BETWEEN ((~ ('621153477'))) AND (TYPEOF('9Mꇣ]]WI8')))) LIMIT -1728330315;SELECT ((((((rt0.c2)>(rt0.c6)))AND(CAST(rt0.c6 AS NUMERIC))))OR(((rt0.c6) BETWEEN (vt0.c0) AND (rt0.c2)))) FROM t1, vt0, rt0; -- 0ms;
SELECT LAG(((((((((0.3237467969373744)AND(rt0.c4)))AND(rt0.c0)))AND('1759251923')))AND(rt0.c6)) COLLATE RTRIM, ((((rt0.c1)<<(rt0.c5))) NOTNULL), ((rt0.c6 COLLATE NOCASE) ISNULL)) OVER () FROM rt0 ORDER BY ((((((rt0.c0) NOTNULL))OR(((rt0.c3)/(rt0.c1)))))OR((('')AND(rt0.c3)))); -- 1ms;
SELECT DISTINCT NULL FROM rt0, t1; -- 0ms;
SELECT DISTINCT COUNT(rt0.c3) OVER (), (((rt0.c0, rt0.c0, 0.2637605405544221)) BETWEEN ((CAST(NULL AS INTEGER), ((rt0.c3)-(rt0.c4)), (((t1.c0, rt0.c5, rt0.c6))>=((rt0.c5, rt0.c5, rt0.c0))))) AND ((-8.97372508E8, ((((rt0.c4)OR(rt0.c2)))OR(rt0.c6)), (((rt0.c3)) BETWEEN ((t1.c0)) AND ((rt0.c0)))))), CAST((~ (rt0.c2)) AS BLOB) FROM vt0 WHERE (CAST(((x'')IS NOT(x'7e09')) AS TEXT));SELECT DISTINCT (+ ((rt0.c4 IN (rt0.c3, t1.c0)))), ((DATE(vt0.c0, rt0.c2, rt0.c6)) NOT BETWEEN ('Jf0-+\rij)' COLLATE RTRIM) AND (t1.c0)), GROUP_CONCAT((~ (rt0.c1))) OVER () FROM rt0, t1, vt0; -- 0ms;
SELECT ((((rt0.c3)%('HW'))) BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c2 COLLATE RTRIM)) FROM t1 WHERE ('훫r');SELECT DISTINCT (((rt0.c4 IN ())) BETWEEN (((rt0.c3)=(t1.c0))) AND (0.9050019006752386)) FROM vt0, t1 WHERE (((TIME(NULL, x'', -5.41169434E8))IS(CAST(NULL AS REAL))));SELECT DISTINCT ((((vt0.c0)<=(rt0.c3)))-(vt0.c0 COLLATE BINARY)) FROM t1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN (rt0.c0, rt0.c5)))) AND ((((x'c487') ISNULL)))) FROM t1 WHERE (((CASE '1227515489'  WHEN '#q' THEN 0.4498574892929381 WHEN x'' THEN x'1931' WHEN '-416419577' THEN '' END)<((((-8.96355928E8)) NOT BETWEEN ((x'')) AND ((0.5650549237186371)))))) LIMIT -1691183353 OFFSET -1389587384;SELECT NULL FROM rt0, t1, vt0 WHERE (CASE 0.054867487361212275  WHEN x'' COLLATE BINARY THEN ((0.831440586529269)+(0.08912358407444843)) WHEN ((((-1528826647)OR(0.4681659812004172)))OR(NULL)) THEN 1755067980 COLLATE BINARY WHEN (('-1186149959') ISNULL) THEN ((x'')>>(NULL)) END); -- 0ms;
SELECT ALL ((((((rt0.c3) IS TRUE))AND((((vt0.c0, rt0.c0, rt0.c1))<=((rt0.c6, rt0.c5, rt0.c6))))))AND(((rt0.c1)<(rt0.c0)))), NULL, (((('1256461848')>=(rt0.c3)))/(((rt0.c5) NOT NULL))) FROM vt0, t1, rt0 WHERE (((CAST(0.6014352714749196 AS NUMERIC))<((~ (NULL))))); -- 0ms;
SELECT ALL rt0.c4 FROM vt0, t1 WHERE (CASE 0.9454625004328491 COLLATE NOCASE  WHEN ((NULL)>=('R䀘RU攀')) THEN ((-80292117)||(x'')) END);SELECT ALL ((((rt0.c5)GLOB(vt0.c0)))>>(((t1.c0) BETWEEN (rt0.c5) AND (rt0.c0)))) FROM rt0, t1;SELECT DISTINCT load_extension(CASE WHEN rt0.c4 THEN rt0.c4 END, CAST(0.6112861480866785 AS TEXT)), (((rt0.c4)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))) AND ((rt0.c1))), ((rt0.c6) NOT BETWEEN (CASE WHEN t1.c0 THEN 'X] zA' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END) AND (CAST(rt0.c6 AS NUMERIC))) FROM vt0, t1 WHERE (((((('1428365062'))=((0.7981872022799744))))>>(CASE WHEN '-1245300586' THEN NULL END))) ORDER BY ((NULLIF(rt0.c6, t1.c0)) ISNULL)  NULLS FIRST;SELECT (((((('1331326711')IS NOT(0Xffffffffec72ac80)))OR(UPPER(DISTINCT vt0.c0))))OR(-1815738387)) FROM vt0, rt0, t1 WHERE ((((('') NOT BETWEEN ('+姫D') AND ('-1664948244'))) NOT NULL)); -- 1ms;
SELECT DISTINCT (NOT ((- (rt0.c1)))) FROM t1, vt0, rt0 WHERE ((((NULL IN (x''))) NOT BETWEEN ((-4.16419577E8 IN (NULL))) AND ((('') BETWEEN (NULL) AND ('512592138'))))); -- 0ms;
SELECT DISTINCT NULL, CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT), CASE ((((((((vt0.c0)OR(rt0.c6)))OR('-541169434')))OR(t1.c0)))AND(rt0.c6))  WHEN ((((((((rt0.c6)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c5)))AND(rt0.c3)) THEN rt0.c2 END FROM rt0, t1, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c6) BETWEEN (rt0.c1) AND (vt0.c0)))<>(((t1.c0) BETWEEN (rt0.c3) AND (rt0.c1)))), '271228195', ((CASE rt0.c0  WHEN NULL THEN '' END)LIKE(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c6 END)) FROM vt0;SELECT DISTINCT ((((rt0.c3)IS NOT(rt0.c4))) ISNULL) FROM t1, rt0, vt0 WHERE (CAST(((0.8755825828872608) NOT NULL) AS REAL)); -- 0ms;
SELECT ALL CASE WHEN LOWER(rt0.c2) THEN LIKE(t1.c0, t1.c0, 'A') END FROM t1, vt0 LIMIT -62630762 OFFSET 1678194722;SELECT CAST(CASE WHEN rt0.c1 THEN rt0.c3 END AS NUMERIC), rt0.c4, CAST(rt0.c5 AS INTEGER) COLLATE RTRIM FROM rt0, vt0 WHERE (((0xffffffffb56f538a) BETWEEN (0.028378113686335582) AND (NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c0)) ISNULL) FROM rt0; -- 0ms;
SELECT DISTINCT SUM((x'' IN (t1.c0, rt0.c1))) OVER () FROM vt0, rt0 WHERE (((('296312585')) BETWEEN (((((0.6301111552329672, NULL, -1637443041))>((NULL, -5.41169434E8, NULL))))) AND (((((('(#a9)4')OR('-1051026434')))OR(NULL)))))) ORDER BY ((rt0.c6) NOTNULL) COLLATE NOCASE;SELECT CASE WHEN vt0.c0 COLLATE RTRIM THEN (((t1.c0, t1.c0, rt0.c4))>=((rt0.c5, rt0.c3, rt0.c1))) END FROM t1, rt0 WHERE (((((('' IN ('m)Y슩ꂐc<')))OR(((((x'436e')AND(0.162948332080583)))AND(NULL)))))OR((x'' IN ('0z58A]+P')))));SELECT ((rt0.c3) NOTNULL), LAG(0.5891729065326899, TRIM((NULL IN (t1.c0, t1.c0)), (((t1.c0))>=((t1.c0)))), t1.c0) OVER (), CAST(rt0.c2 COLLATE BINARY AS INTEGER) FROM t1 WHERE (((((NULL) ISNULL))OR((((NULL, '涻u*', x''))>((0.667807219825005, 0X42e1444c, 'lT!')))))) LIMIT 2045815038 OFFSET 1428365062;SELECT DISTINCT ((- (rt0.c2)) IN (((t1.c0) ISNULL))), ((((((vt0.c0)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c0))), rt0.c2 COLLATE RTRIM, (NOT (rt0.c0))))<>(((((rt0.c2, rt0.c6, rt0.c0))>=((rt0.c4, vt0.c0, '1982367521'))), vt0.c0, LIKE(rt0.c2, rt0.c4, '0')))), ((NULL) BETWEEN (0.16249381604487256 COLLATE BINARY) AND (((rt0.c3)<(t1.c0)))) FROM rt0;SELECT TOTAL(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c5))), (('-1065816497') NOT NULL), TOTAL(-1829253181) OVER (), PERCENT_RANK() OVER (), SUM(0.9566914673643298) FROM t1, vt0, rt0; -- 0ms;
SELECT DISTINCT ABS(SUM(t1.c0)) FROM rt0, t1, vt0; -- 0ms;
SELECT CAST(((t1.c0)==(rt0.c6)) AS INTEGER), ((((t1.c0)IS NOT(rt0.c3))) BETWEEN (((((((((rt0.c5)AND(rt0.c0)))AND(rt0.c5)))AND(vt0.c0)))OR(rt0.c2))) AND (t1.c0)), ABS(DISTINCT TOTAL(rt0.c6)), SQLITE_VERSION(), SQLITE_SOURCE_ID() FROM rt0, vt0 WHERE (((('zK' IN ())) BETWEEN (NULL COLLATE BINARY) AND ((('-7897407')*(0.7857209975870912)))));SELECT LAST_VALUE((NOT (json_extract(t1.c0, t1.c0)))) OVER (), LAG((('N_Q>') BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND ((~ (t1.c0)))), ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOTNULL), t1.c0) OVER ( ROWS rt0.c4 PRECEDING EXCLUDE CURRENT ROW), json_extract((~ (rt0.c5)), ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c6))) FROM t1 WHERE (x'');SELECT ALL CAST(COUNT(rt0.c5) AS NUMERIC), ((t1.c0)IS((((rt0.c0))>=((rt0.c2))))), (((((((((((x'')AND(rt0.c0)))OR(rt0.c6)))AND('1663495235')))AND(rt0.c3)), ((rt0.c0)!=(vt0.c0)), t1.c0, 0.8619671255097884 COLLATE RTRIM, ((rt0.c5)>>(rt0.c6))))!=(((((((((('512592138')AND(NULL)))AND(0X791f4e49)))AND(t1.c0)))AND(rt0.c4)), ((rt0.c1)*(rt0.c1)), x'', (- (vt0.c0)), SUM(rt0.c2)))) FROM vt0, t1 INDEXED BY i94;SELECT COALESCE(DISTINCT rt0.c5, rt0.c0) COLLATE BINARY FROM rt0, t1 WHERE (NULLIF(DISTINCT ((NULL)<(NULL)), (- (x'')))) GROUP BY (((rt0.c5 IN (t1.c0)))|(((((rt0.c6)AND(rt0.c4)))OR(rt0.c2)))), rt0.c6, ((rt0.c0)*(LIKELIHOOD(DISTINCT '', 0.37965694801588357))); -- 0ms;
SELECT DISTINCT COUNT((- (rt0.c5))) FROM vt0;SELECT ALL (('Q')+(((((rt0.c1)AND(rt0.c4)))OR(rt0.c2)))), (~ ((rt0.c6 IN (rt0.c0)))), CAST(((rt0.c6) NOT NULL) AS TEXT) FROM rt0, t1, vt0; -- 0ms;
SELECT rt0.c5 FROM vt0, rt0, t1 GROUP BY CAST(INSTR(rt0.c2, rt0.c6) AS TEXT) HAVING CASE (rt0.c1 IN ())  WHEN CASE WHEN t1.c0 THEN vt0.c0 END THEN CASE rt0.c2  WHEN t1.c0 THEN rt0.c6 END WHEN ((rt0.c1)>=(rt0.c0)) THEN (rt0.c5 IN ()) WHEN ((rt0.c0)<>(rt0.c2)) THEN (((rt0.c5, '215925696', rt0.c2, rt0.c6, rt0.c5))=((rt0.c0, t1.c0, t1.c0, rt0.c3, rt0.c4))) ELSE CASE rt0.c4  WHEN rt0.c0 THEN rt0.c6 ELSE rt0.c1 END END; -- 0ms;
SELECT (('1438507696')LIKE(((rt0.c6)AND(t1.c0)))) FROM rt0, vt0, t1 WHERE (((('1100528285')) NOT BETWEEN (('0.2327544319849838')) AND ((((NULL)AND(x'')))))); -- 0ms;
SELECT ALL ((vt0.c0) IS TRUE), ((SUM(t1.c0))>(((rt0.c5) NOTNULL))), ((((vt0.c0) BETWEEN (rt0.c1) AND ('\'))) NOT BETWEEN (0.5509974599839261) AND (CAST(rt0.c5 AS BLOB))) FROM vt0, rt0, t1; -- 0ms;
SELECT ALL LIKELIHOOD(((vt0.c0)/(rt0.c2)), 0.44215002437563256), TRIM((~ (rt0.c4)), ((((rt0.c2)OR(rt0.c6)))AND(x'bd2f4945'))), DENSE_RANK() OVER ( PARTITION BY (+ (((rt0.c1)OR(rt0.c4)))), rt0.c4 ORDER BY (((((rt0.c3))>((rt0.c0))))|(CAST(t1.c0 AS BLOB))) ASC  NULLS FIRST) FROM t1, rt0;SELECT rt0.c1 FROM t1, rt0 WHERE (((('AH?lAIEG', NULL, NULL)) BETWEEN ((((0.7502425686157217) NOT BETWEEN (-915877213) AND ('sQ鴣%ZkQ')), ((((NULL)AND(x'')))AND(-1.7976931348623157E308)), (x'aa7c' IN ()))) AND ((((-92194336) IS TRUE), (('*e')IS NOT('3朘/')), CASE WHEN x'' THEN 0.6019044504916725 WHEN '[h' THEN '-1728330315' WHEN 'H^5J4cX' THEN 0.5772929872920116 ELSE '220180426' END)))); -- 0ms;
SELECT DISTINCT x'9c5c' FROM rt0, t1 WHERE (((0.7308053815386003 COLLATE NOCASE)AND(((x'e84a')OR('瑅D^L5d '))))); -- 0ms;
SELECT ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE FROM vt0, t1, rt0 WHERE (((((NULL)<=(x''))) BETWEEN (('851387263' IN ())) AND ('' COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY vt0.c0 DESC  NULLS LAST, (- (LIKELIHOOD(DISTINCT 0.49106931129609865, 0.6823846547272079)))) FROM rt0 WHERE (((((NULL) NOT BETWEEN (0.5345812029259512) AND (x'')))OR((('n9儇')>('-1576072343')))));SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c2) AND (t1.c0)))/(CASE WHEN rt0.c4 THEN t1.c0 ELSE rt0.c4 END)), ((((((t1.c0)AND(rt0.c0)))AND(rt0.c5)))||(MIN(t1.c0))), CAST((((rt0.c4))>=((rt0.c2))) AS INTEGER) FROM rt0;SELECT DISTINCT (x'' IN ()) FROM t1, vt0, rt0 WHERE (((((x'') IS TRUE)) IS FALSE)); -- 0ms;
SELECT ALL ((rt0.c0) NOT BETWEEN (((rt0.c5)<=(rt0.c6))) AND (CASE rt0.c0  WHEN rt0.c3 THEN -1688571190 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c3 THEN 0X5a39fdbd END)), ((rt0.c1)>=(rt0.c0)) COLLATE BINARY, ((rt0.c3)+(SQLITE_VERSION())) FROM rt0 ORDER BY (((~ (rt0.c0))) NOT BETWEEN (CASE WHEN 'FALSE' THEN t1.c0 WHEN rt0.c6 THEN rt0.c3 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END) AND ('5	' COLLATE RTRIM)) DESC  NULLS FIRST;SELECT ((((t1.c0) NOT BETWEEN (NULL) AND (rt0.c1)))*((rt0.c6 IN (rt0.c4)))) FROM vt0, t1;SELECT RANK() OVER () FROM rt0, vt0, t1 GROUP BY ((((t1.c0)=(rt0.c5))) IS TRUE) HAVING CAST(SUM(rt0.c5) AS NUMERIC); -- 0ms;
SELECT ALL ((rt0.c5) NOTNULL) COLLATE BINARY, CASE WHEN (+ (0.2792194431298052)) THEN (- (rt0.c2)) WHEN ((t1.c0)GLOB(rt0.c1)) THEN ((rt0.c3)>(vt0.c0)) WHEN MAX(t1.c0) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) END, CAST(x'' AS INTEGER) FROM t1, rt0;SELECT DISTINCT MAX(((((rt0.c0)OR(t1.c0)))OR(rt0.c4))) FROM vt0;SELECT ALL (((+ (rt0.c4))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((x'669251ca')+('-888053971')))), CAST(((rt0.c5) IS FALSE) AS BLOB), ((((GROUP_CONCAT(rt0.c5))AND(NULLIF(DISTINCT rt0.c1, 0.9633012341788522))))OR(((rt0.c6) ISNULL))), TOTAL(((rt0.c4) NOTNULL)) OVER (), MIN(TOTAL(t1.c0)) COLLATE NOCASE FROM t1, vt0, rt0;SELECT ALL json_insert(((rt0.c4)+(t1.c0)), rt0.c6, ((rt0.c2)|(rt0.c1))) FROM t1, vt0 WHERE (CASE ((0x558480b7)GLOB('qGa0l(q_F'))  WHEN ((x'4879') NOT BETWEEN (x'') AND (NULL)) THEN 5.13007256E8 COLLATE NOCASE ELSE (- (0xffffffffe7e3f7c8)) END) GROUP BY (((rt0.c3)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((CAST(vt0.c0 AS TEXT)))) LIMIT 271228195;SELECT ALL TRIM(DISTINCT NULLIF(rt0.c6, rt0.c4), CAST(rt0.c6 AS INTEGER)), RANK() OVER ( PARTITION BY SQLITE_COMPILEOPTION_USED(rt0.c3 COLLATE BINARY), (- (t1.c0)) ORDER BY CASE (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c6)))  WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))) THEN ((((-1953827783)OR(vt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST), rt0.c1, (((x'')) NOT BETWEEN ((((rt0.c5) IS TRUE))) AND ((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))), CAST(vt0.c0 COLLATE BINARY AS INTEGER) FROM t1, vt0, rt0 WHERE (((CAST('0.9050019006752386' AS NUMERIC)) BETWEEN (CAST(NULL AS REAL)) AND (CASE x''  WHEN NULL THEN x'44ad' ELSE 'G' END))); -- 0ms;
SELECT ALL (((+ (NULL)))&((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))), (((rt0.c1, rt0.c6, rt0.c4)) BETWEEN ((vt0.c0 COLLATE RTRIM, rt0.c1, (rt0.c1 IN (rt0.c6)))) AND ((rt0.c1, t1.c0 COLLATE RTRIM, LOWER(DISTINCT x'59e7')))), ((((rt0.c6) BETWEEN (vt0.c0) AND (t1.c0)))AND(t1.c0)) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((((CAST(rt0.c4 AS TEXT))AND(rt0.c6)))AND((rt0.c5 IN (vt0.c0, t1.c0)))))OR((~ (rt0.c5)))))OR(CASE rt0.c3  WHEN '166069136' THEN rt0.c3 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c6 THEN rt0.c0 END)))AND((~ (vt0.c0)))))AND(((rt0.c2)IS NOT(rt0.c6)))) WHERE (((((0.3775949919034366) NOTNULL)) BETWEEN (((0.5341571941060623) BETWEEN (609525890) AND (''))) AND (CAST('SQJ' AS NUMERIC))));SELECT DISTINCT 0.1220951326096098 FROM t1 ORDER BY x'' DESC  NULLS LAST; -- 0ms;
SELECT ALL ((+ (rt0.c0)) IN ()) FROM vt0, t1, rt0 LIMIT -1131709713 OFFSET 1710211661; -- 0ms;
SELECT ALL AVG(((rt0.c4)=(vt0.c0))), (((t1.c0)) BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))AND(vt0.c0)))AND(rt0.c3)))) AND ((((rt0.c3)=('<R'))))), CASE WHEN HEX(DISTINCT rt0.c6) THEN ((rt0.c0)>>('')) ELSE ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c6)))AND('202878260')) END FROM t1;SELECT DISTINCT LEAD(((((rt0.c5, rt0.c6, rt0.c4)) BETWEEN ((rt0.c3, rt0.c1, rt0.c4)) AND (('~J.', t1.c0, rt0.c6))) IN ()), (((NOT (rt0.c2))) NOTNULL), 'a') OVER ( PARTITION BY IFNULL(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c6)))OR(rt0.c2)))OR(0.7588739861090107)), (t1.c0 IN ())), (((t1.c0)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT))) AND ((rt0.c1)))) FROM rt0, t1, vt0 WHERE (((((((NULL)OR(0.3204450586702404)))AND(1497068517)))%('-1700426392' COLLATE BINARY))); -- 0ms;
SELECT ALL t1.c0, AVG(((rt0.c6) NOT BETWEEN (rt0.c6) AND (rt0.c5))) OVER ( PARTITION BY ((x'')<=('-2020958798')) COLLATE RTRIM, rt0.c0), '<' FROM t1, vt0 WHERE (((LIKE(NULL, '벙9', 'T'))>>('^c')));SELECT ALL AVG(vt0.c0) OVER () FROM t1;SELECT DISTINCT (rt0.c2 IN ()), (+ (rt0.c2)), ((((CAST(0.258374000500023 AS BLOB))OR(rt0.c5)))OR(AVG(NULL))) FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4)>=(t1.c0))) NOT BETWEEN ('fF''^') AND (rt0.c5 COLLATE NOCASE)) FROM vt0, t1;SELECT ((((rt0.c3) BETWEEN (0.6842421892088989) AND (x'0245')))<<(((rt0.c3) ISNULL))) FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT (NOT ((((rt0.c6))>=((rt0.c6))))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT 0.3015724968705268, rt0.c6, CAST(vt0.c0 AS INTEGER) FROM vt0;SELECT DISTINCT ((rt0.c0 COLLATE RTRIM)-(((vt0.c0)IS NOT(t1.c0)))), json_insert(rt0.c1, rt0.c2, rt0.c2, rt0.c6, rt0.c4) COLLATE NOCASE, (vt0.c0 COLLATE RTRIM IN ()) FROM rt0, vt0, t1 NOT INDEXED WHERE ((NOT ((((NULL))>((-1.113121785E9)))))); -- 0ms;
SELECT DISTINCT CASE WHEN x'' THEN (((rt0.c2))<((rt0.c1))) ELSE CAST(330004762 AS INTEGER) END FROM t1, vt0 ORDER BY rt0.c4  NULLS FIRST;SELECT ALL CASE WHEN ((rt0.c4) IS FALSE) THEN rt0.c3 COLLATE RTRIM END, ((GROUP_CONCAT(rt0.c5)) ISNULL), CAST(x'9369' AS NUMERIC) COLLATE BINARY FROM t1, vt0 LIMIT 1648708011 OFFSET -2018120576;SELECT ALL ((((((t1.c0)) BETWEEN ((-524664855)) AND ((rt0.c4)))))==((vt0.c0))), CAST(((((rt0.c5)OR(rt0.c4)))OR(rt0.c3)) AS NUMERIC), (((((NOT (rt0.c3)))AND(((t1.c0)>=(rt0.c2)))))OR((('177118158') NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FROM t1, vt0;SELECT ALL ((((((rt0.c4)*(rt0.c6)))AND(((('', rt0.c1, rt0.c5))!=((rt0.c3, x'', rt0.c2))))))OR(((t1.c0) BETWEEN (t1.c0) AND (rt0.c6)))), LIKELY((((rt0.c3, rt0.c3, rt0.c1))<((rt0.c0, rt0.c5, rt0.c3)))), LAST_VALUE(((((t1.c0)OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND((t1.c0 IN ())))) OVER () FROM t1, vt0;SELECT ALL ((((t1.c0) NOTNULL)) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (((vt0.c0)%(rt0.c2)))) FROM t1, vt0, rt0 WHERE (HEX(('747905365' IN ()))); -- 0ms;
SELECT ALL (- (((vt0.c0)>=(rt0.c3)))) FROM rt0, t1;SELECT ALL ((((((rt0.c1)OR(rt0.c0)))AND(x'')))OR(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN '' WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END)) FROM rt0 WHERE (((((((((TRIM(x'3613'))AND((NOT ('1327268185')))))AND(((((']A')OR('')))OR(x'')))))AND(LOWER(DISTINCT '-1158231836'))))AND(((-735392242)GLOB(''))))) LIMIT 413541198 OFFSET -735392242;SELECT ((CASE WHEN '0.39845008935181403' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END)LIKE((((rt0.c0, rt0.c3, rt0.c4))<=((rt0.c5, rt0.c0, rt0.c5))))) FROM t1, vt0 WHERE (((- (x'')) IN ())) LIMIT 1781649563;SELECT ALL SUM(LOWER(DISTINCT rt0.c3)) OVER ( GROUPS (((rt0.c3)) NOT BETWEEN ((UNLIKELY(DISTINCT rt0.c1))) AND ((((rt0.c5) ISNULL)))) PRECEDING EXCLUDE NO OTHERS) FROM t1, vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(((NULL) NOT BETWEEN ('867006179') AND (rt0.c0)) AS REAL), (~ (INSTR(vt0.c0, rt0.c3))), DENSE_RANK() OVER () FROM vt0 WHERE (0.5021488512648288);SELECT DISTINCT CASE CASE WHEN rt0.c5 THEN 'mB' WHEN rt0.c3 THEN rt0.c6 WHEN t1.c0 THEN rt0.c0 END  WHEN COUNT(*) THEN ((rt0.c3)GLOB(rt0.c6)) ELSE (~ (rt0.c1)) END FROM rt0, vt0;SELECT DISTINCT (~ (((rt0.c5) NOT BETWEEN (t1.c0) AND (vt0.c0)))), ((((rt0.c0)>(rt0.c2))) IS FALSE), COUNT(*), AVG(json_valid(rt0.c0)), ((~ (rt0.c6)) IN (((rt0.c5) NOT NULL))) FROM t1;SELECT ((TRIM(DISTINCT rt0.c6)) BETWEEN ((rt0.c2 IN (rt0.c4, rt0.c0))) AND (((rt0.c4)/(t1.c0)))) FROM vt0, rt0, t1 WHERE (CASE WHEN CAST(NULL AS REAL) THEN CASE WHEN '749455165' THEN NULL WHEN 985549086 THEN x'5381' WHEN 4.7444904E8 THEN NULL END WHEN CASE WHEN '1983054202' THEN '8O' ELSE x'' END THEN (((0.19535972320488593, 0x30188467, '6o')) BETWEEN ((NULL, '117666412', 1860510268)) AND ((-1490253161, NULL, '430323710'))) WHEN CAST('䧎' AS BLOB) THEN CASE NULL  WHEN 0.9726852487014211 THEN 0Xffffffffc57cd398 ELSE NULL END END) GROUP BY (((((rt0.c4) NOT BETWEEN (rt0.c4) AND (t1.c0))))>((((rt0.c4)GLOB(rt0.c3))))); -- 0ms;
SELECT ((~ (rt0.c6)) IN ()) FROM t1, rt0, vt0 WHERE ((~ (((0Xffffffff98fbc5b5)>(0.38255201308677))))); -- 0ms;
SELECT ALL vt0.c0 COLLATE NOCASE FROM rt0, t1 LIMIT 114538931;SELECT DISTINCT (- (AVG(rt0.c4))) FROM vt0, t1, rt0; -- 0ms;
SELECT (+ (((rt0.c6) ISNULL))) FROM vt0, rt0; -- 0ms;
SELECT rt0.c2 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT SUM(CAST(t1.c0 AS BLOB)), CAST(rt0.c4 COLLATE RTRIM AS REAL), ((((rt0.c2)&(rt0.c2)))OR((t1.c0 IN ()))) FROM vt0, rt0 WHERE (CAST(((((0.2839868608135738)AND(0.1691863147718019)))OR('*n')) AS NUMERIC));SELECT DISTINCT (((((0.9835954912275644 IN (NULL)))AND(NULLIF(DISTINCT rt0.c0, rt0.c5))))OR((- (rt0.c2)))) FROM t1 GROUP BY (((t1.c0) BETWEEN (rt0.c2) AND (vt0.c0)) IN ());SELECT ALL 0.2328765975124646 FROM vt0; -- 0ms;
SELECT CAST(vt0.c0 AS INTEGER) COLLATE NOCASE FROM t1, vt0 WHERE (((((((((x'')AND('d8]wXڋ')))OR(0x481e4d6f)))AND(((-1025025574)AND(NULL)))))OR(((((x'')AND(NULL)))OR(x'04d0'))))); -- 0ms;
SELECT DISTINCT (('691334981') NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (GROUP_CONCAT(rt0.c3))), (+ (rt0.c2)), ((vt0.c0 COLLATE BINARY)+(((rt0.c2) NOT BETWEEN (rt0.c5) AND (t1.c0)))) FROM rt0 NOT INDEXED WHERE ((0.07215206772015947 IN ()) COLLATE BINARY);SELECT DISTINCT (((((rt0.c6))=((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((+ (rt0.c0)))) FROM t1;SELECT ((((((rt0.c4))>=((rt0.c4)))))<=((1.256461848E9))), TOTAL(((((rt0.c6)AND(vt0.c0)))AND(rt0.c1))), (((rt0.c3))!=((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0))))) FROM vt0, t1, rt0 WHERE ((((0.08357033436638717)) BETWEEN ((((0.35827497421220367) BETWEEN ('4g&') AND (0Xffffffff9ad0b1bb)))) AND (((x'6ba0' IN ()))))); -- 0ms;
SELECT ALL NTH_VALUE((((t1.c0 IN ())) IS TRUE), ((0.5927657857978758) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) AND (CAST(t1.c0 AS BLOB)))) OVER () FROM t1 WHERE ((((((('513007256')AND('0.6268791898254092')))AND(0Xffffffffb112bc0d))) IS TRUE)) LIMIT 1346660058; -- 0ms;
SELECT ((MIN(vt0.c0)) ISNULL) FROM rt0 WHERE ((((((((((('3j	')OR('961045164')))AND(0.4780594342153227)))OR(x'c2bd')))AND(0.9475760666034496))) NOT NULL));SELECT rt0.c0 COLLATE BINARY, (+ (-1.065816497E9)), ((rt0.c6) NOT NULL) COLLATE NOCASE FROM t1, rt0, vt0 WHERE (CASE WHEN NULL THEN (x'79e5' IN ()) END) ORDER BY (((rt0.c3 COLLATE NOCASE))>=(('鼦9C?.쐞~}'))) ASC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER)) IS FALSE) DESC, ((rt0.c0) NOTNULL) COLLATE RTRIM; -- 0ms;
SELECT ((((((((((((((((rt0.c3)AND(x'e547')))AND(rt0.c4)))AND(((rt0.c5)/(rt0.c5)))))OR((rt0.c4 IN (rt0.c1, rt0.c4)))))OR(((rt0.c5)||(rt0.c6)))))AND((((rt0.c6))>((rt0.c6))))))OR((((rt0.c6))<>((rt0.c5))))))AND(rtreenode(rt0.c3, rt0.c6))) FROM rt0, t1; -- 1ms;
SELECT DISTINCT CASE (rt0.c2 IN ())  WHEN TRIM(DISTINCT t1.c0, rt0.c6) THEN ((vt0.c0) ISNULL) END FROM t1 WHERE ((NOT (CASE 0.9102633295101403  WHEN 0.3045159215331986 THEN -813987247 WHEN x'' THEN 0.0 WHEN x'4b71' THEN 0.5496967319981628 END)));SELECT ALL load_extension(((rt0.c5)*(rt0.c1))) FROM t1, rt0, vt0 WHERE (((((((((((NULL)==('')))AND(((0Xffffffffbc8b7aef) NOTNULL))))OR(CASE 0.5212588734943421  WHEN NULL THEN NULL ELSE x'' END)))AND('1014359348' COLLATE NOCASE)))OR((((((((('q!')AND(0.22015762506328096)))AND(NULL)))AND(NULL)))OR(''))))); -- 0ms;
SELECT ALL ((((CAST(t1.c0 AS INTEGER))OR((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c6))))))AND(((((((((rt0.c3)AND(rt0.c2)))OR(vt0.c0)))AND('')))AND(rt0.c6)))), CAST(vt0.c0 COLLATE RTRIM AS BLOB), NULL FROM rt0 WHERE (((- (NULL)) IN ()));SELECT CASE CAST(rt0.c5 AS TEXT)  WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c3 AS BLOB) END, ((((COALESCE(DISTINCT rt0.c0, rt0.c5))AND(((((((((rt0.c0)AND(rt0.c3)))AND(x'')))AND(vt0.c0)))AND(vt0.c0)))))AND(((rt0.c1)LIKE(t1.c0)))), IFNULL(((rt0.c5)AND(rt0.c2)), ((rt0.c3)/(rt0.c1))) FROM t1 WHERE (((((CASE -4.04779547E8  WHEN 0X2a7935ff THEN '' ELSE '' END)AND((- ('')))))OR(CASE WHEN NULL THEN 'G<' WHEN x'' THEN NULL WHEN -45942488 THEN 'I/Os}M	t' END))) ORDER BY GLOB(((rt0.c4)|(rt0.c5)), ((((((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c6)))OR(t1.c0)))AND(t1.c0)))AND(rt0.c4))) ASC, (~ ((rt0.c4 IN ())))  NULLS FIRST;SELECT DISTINCT ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) BETWEEN (((t1.c0)&(rt0.c0))) AND (GLOB(rt0.c2, 0.11624232626251607))), (((vt0.c0) NOT NULL) IN ()), (((rt0.c6, rt0.c2, rt0.c6)) BETWEEN (((((rt0.c1))>((vt0.c0))), CASE rt0.c4  WHEN rt0.c5 THEN 0.9591490132171119 END, rt0.c5 COLLATE RTRIM)) AND ((((NULL)|(rt0.c3)), ((((((((rt0.c5)AND(rt0.c6)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c0)), rt0.c2 COLLATE NOCASE))) FROM rt0, vt0, t1 WHERE (((((0.7684281374598111) NOT NULL))!=(CASE WHEN NULL THEN NULL ELSE '1428365062' END))); -- 1ms;
SELECT ALL GROUP_CONCAT(((((((((rt0.c5)AND(rt0.c6)))AND(t1.c0)))OR(rt0.c1)))AND(rt0.c1))) FROM t1 WHERE ((((NOT (0x604ebb20))) BETWEEN (0.9701823245444512 COLLATE NOCASE) AND ((NOT (1.338872233E9))))) GROUP BY ((UNLIKELY(rt0.c5))||(rt0.c6 COLLATE RTRIM));SELECT ALL ((((((rt0.c3)AND(NULL)))OR(rt0.c0)))+(rt0.c4 COLLATE BINARY)) FROM t1, rt0 WHERE ((((((((('-244891475')OR('1585332815')))AND(NULL)))AND(('-479760946' IN ('-707810287')))))OR(NULL))) ORDER BY ((((rt0.c4)&(rt0.c3)))IS(LIKELIHOOD(rt0.c3, 0.31259973338808555))), TIME(rt0.c6 COLLATE NOCASE, ((rt0.c5) NOT NULL), rt0.c4 COLLATE BINARY); -- 0ms;
SELECT (((''))>((((rt0.c0) BETWEEN (-1.859016849E9) AND (rt0.c1))))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT CAST((~ (rt0.c2)) AS NUMERIC), (((((rt0.c2))<((rt0.c1)))) NOT BETWEEN (rt0.c6) AND (rt0.c4 COLLATE NOCASE)), COUNT((rt0.c5 IN ())) OVER () FROM t1 GROUP BY (((rt0.c5 IN ())) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c3 END) AND (CASE rt0.c5  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)), (((+ (rt0.c1))) NOT BETWEEN ((~ (rt0.c5))) AND (vt0.c0 COLLATE BINARY)), ((((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c3))) NOTNULL), (((rt0.c5, vt0.c0, rt0.c4)) NOT BETWEEN ((json_insert(rt0.c4, rt0.c4, vt0.c0, rt0.c5, t1.c0), CAST(rt0.c4 AS NUMERIC), ((rt0.c5) NOT BETWEEN (x'') AND (rt0.c6)))) AND ((((vt0.c0)-(vt0.c0)), (((rt0.c1))>=((rt0.c3))), ((((t1.c0)AND(rt0.c3)))AND(rt0.c5))))), COALESCE(((((((((t1.c0)OR(rt0.c2)))AND(rt0.c1)))AND(NULL)))OR(t1.c0)), (rt0.c0 IN (rt0.c0)));SELECT (0.020938106688771718 COLLATE RTRIM IN (MAX(rt0.c4))) FROM t1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((x'' IN (rt0.c4)))IS(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE ('');SELECT DISTINCT (((t1.c0, vt0.c0, rt0.c4)) NOT BETWEEN ((((rt0.c4) NOT NULL), ((rt0.c1)*(t1.c0)), ((rt0.c2) IS TRUE))) AND ((COUNT(*), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) FROM t1, vt0, rt0 WHERE ('꼵eL*a') ORDER BY rt0.c5 DESC LIMIT -659552824 OFFSET -416419577; -- 0ms;
SELECT ((((((((((((((((x'')AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c6)))AND(rt0.c5)))OR((((rt0.c2, rt0.c3, t1.c0)) NOT BETWEEN (('0.9715313261689474', vt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c5, vt0.c0))))))OR(rt0.c5 COLLATE BINARY)) FROM vt0, t1, rt0 WHERE (((((x'8be44136') BETWEEN (NULL) AND ('-62630762')))AND(GLOB(-1.718842622E9, 'qI晡E.G')))); -- 0ms;
SELECT ALL 2124861608, (((rt0.c6 IN (rt0.c6, rt0.c1))) ISNULL), ((((vt0.c0, t1.c0, rt0.c0))>((rt0.c1, rt0.c2, t1.c0))) IN ()) FROM t1, vt0;SELECT ((((CAST(rt0.c1 AS NUMERIC))OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))))AND(NULL)) FROM t1;SELECT CASE 1914634217  WHEN rt0.c6 THEN vt0.c0 ELSE NULL END COLLATE RTRIM FROM t1, rt0 GROUP BY (((((((((rt0.c3)OR(rt0.c5)))OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)) IN ((((rt0.c0))>((rt0.c3))), rt0.c1));SELECT ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (((((((((rt0.c5)AND(t1.c0)))OR(rt0.c5)))OR(vt0.c0)))AND(rt0.c4))) AND (ABS(rt0.c1))) FROM t1, rt0 WHERE ('Hb') ORDER BY CAST(((rt0.c6)>=(rt0.c1)) AS REAL);SELECT rt0.c1, ((((rt0.c6)%(rt0.c3))) NOT NULL), ((COUNT(vt0.c0)) IS FALSE) FROM t1, rt0, vt0 INDEXED BY i94;SELECT DISTINCT COUNT(*) OVER () FROM vt0 GROUP BY ((SQLITE_VERSION()) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (rt0.c1)) HAVING ((((rt0.c6) NOT NULL)) IS TRUE);SELECT DISTINCT ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3)))AND((t1.c0 IN (rt0.c3, rt0.c2)))) FROM vt0, t1;SELECT CAST((NOT (vt0.c0)) AS NUMERIC) FROM vt0, t1 NOT INDEXED, rt0 WHERE (((((0.4686146260191808) NOTNULL)) IS TRUE)) ORDER BY CAST(((((((((((((rt0.c5)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c6)))AND(1.253083567E9)))AND(rt0.c1)))OR(vt0.c0)) AS INTEGER)  NULLS LAST; -- 0ms;
SELECT ALL ((((NULL)AND(rt0.c6)))AND(PRINTF(0.19868510718702315, rt0.c4, rt0.c5))) FROM rt0, vt0 WHERE ((CAST(x'6d9c' AS TEXT) IN ())) ORDER BY ((CAST(rt0.c2 AS NUMERIC))&(((rt0.c3) IS FALSE))) DESC, (((+ (t1.c0)))>>(((rt0.c2)%(rt0.c4))))  NULLS FIRST;SELECT DISTINCT ((NOT (rt0.c1)) IN ()) FROM t1 WHERE ((- (0x689c364c COLLATE RTRIM))); -- 0ms;
SELECT CASE WHEN CAST(rt0.c5 AS BLOB) THEN 'ZVnlmL' END, (((-2.131813876E9 IN (t1.c0)))&(CASE WHEN rt0.c6 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c5 WHEN rt0.c6 THEN rt0.c1 END)), ((rt0.c0) NOT BETWEEN (rt0.c5) AND (t1.c0)) COLLATE RTRIM FROM t1, rt0, vt0 WHERE ((~ (((((((((-363363313)AND(NULL)))AND('(	m2xj+')))AND(0.6037686732094106)))OR(NULL))))) GROUP BY CASE WHEN vt0.c0 COLLATE BINARY THEN rt0.c3 COLLATE RTRIM END HAVING (- ((('')==(rt0.c4)))); -- 0ms;
SELECT ALL rt0.c3 FROM rt0 WHERE (((('0.6142984963727958', x'3767', NULL)) BETWEEN (((('uq4y5^gjw')<>(0.6982380732645953)), CASE 1.438507696E9  WHEN '1438507696' THEN x'' WHEN x'' THEN NULL WHEN 0.6696978332884675 THEN 0.9196135138021846 ELSE '-735392242' END, -1.576072343E9 COLLATE RTRIM)) AND ((CAST('m?VT' AS INTEGER), ((0X1c478490) NOTNULL), ((x'') NOT BETWEEN ('o蜟^	pUC챀g') AND (NULL)))))); -- 0ms;
SELECT rt0.c2 FROM t1, rt0; -- 0ms;
SELECT TOTAL((+ (rt0.c6)) COLLATE BINARY) OVER ( PARTITION BY (((((((('76?Q1xH5' COLLATE BINARY)AND(((vt0.c0) BETWEEN (rt0.c6) AND (rt0.c1)))))OR(CAST(rt0.c1 AS REAL))))AND(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c6 END)))AND((NOT (t1.c0)))), ((((rt0.c6 COLLATE NOCASE)AND(((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c5)))))OR(((rt0.c3) IS FALSE)))), (((vt0.c0 IN ())) NOTNULL), (((((rt0.c2))==((vt0.c0)))) BETWEEN (((((vt0.c0)OR(rt0.c5)))OR(rt0.c5))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) FROM vt0;SELECT DISTINCT ((rt0.c5 IN ()) IN ()), (((((rt0.c6) BETWEEN (rt0.c1) AND (vt0.c0))))<((((((t1.c0)AND(rt0.c5)))OR(rt0.c5))))), AVG(CASE rt0.c1  WHEN t1.c0 THEN rt0.c3 ELSE rt0.c5 END) FROM rt0, t1 LIMIT -1609233713 OFFSET 658821315;SELECT DISTINCT FIRST_VALUE(vt0.c0) OVER () FROM vt0 WHERE ((((('138789767') NOT NULL)) NOT BETWEEN (((NULL) NOTNULL)) AND (CAST(0.4638809218246116 AS REAL)))); -- 0ms;
SELECT ((((CASE 'wu5k81'  WHEN 234942754 THEN rt0.c1 END)OR(rt0.c1)))AND((rt0.c3 IN ()))) FROM rt0 WHERE (IFNULL(DISTINCT ((x'6f2b')+(37772004)), TRIM(0.5308345866735058))); -- 1ms;
SELECT ALL COUNT(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c6))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((GROUP_CONCAT(NULL)))>((((rt0.c1) NOT BETWEEN (t1.c0) AND (rt0.c0))))), NULL, TOTAL(SUBSTR(rt0.c0, rt0.c6)), COUNT(*), vt0.c0 FROM rt0, t1;SELECT DISTINCT (NOT ((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))), GROUP_CONCAT(((rt0.c4) NOT NULL)), rt0.c3 FROM rt0, t1;SELECT DISTINCT ((rt0.c6)<(((t1.c0)LIKE(rt0.c6)))) FROM vt0, t1, rt0 WHERE (NULL) LIMIT 289606461 OFFSET -386310210; -- 0ms;
SELECT ALL (((((((((rt0.c3)OR(rt0.c4)))AND(vt0.c0)))OR(rt0.c5)))AND(vt0.c0)) IN (NULL)), highlight(CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END, CAST(t1.c0 AS TEXT), CAST(rt0.c2 AS REAL), ((rt0.c5) NOT NULL)), rt0.c0, x'', (~ (((((vt0.c0)AND(vt0.c0)))AND(NULL)))) FROM vt0, t1 GROUP BY (((((((rt0.c5, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c4, rt0.c2, rt0.c6))))AND(CASE WHEN rt0.c6 THEN t1.c0 END)))AND(rt0.c1));SELECT DISTINCT CASE x'b0ce032b'  WHEN (NOT (rt0.c5)) THEN 0.13010911940571845 WHEN TOTAL(t1.c0) THEN ((rt0.c4)LIKE(rt0.c6)) WHEN ((rt0.c5)|(-6.2630762E7)) THEN (+ (vt0.c0)) END FROM t1, vt0, rt0 LIMIT 1256461848; -- 0ms;
SELECT DISTINCT AVG((((rt0.c4))>((t1.c0)))) OVER (), (- (((rt0.c6) NOT BETWEEN (rt0.c2) AND (rt0.c5)))), x'' FROM rt0 WHERE (((CHAR('')) IS FALSE));SELECT DISTINCT ((rt0.c6) BETWEEN ((('uX/)')<<(rt0.c1))) AND ((rt0.c2 IN ()))) FROM t1 WHERE ('1382645026');