-- Time: 2024/06/06 00:46:43
-- Database: database8
-- Database version: 3.40.0
-- seed value: 3249485808
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INT , +c4 INT ); -- 1ms;
END; -- 2ms;
PRAGMA temp.default_cache_size = 1766630342; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3, c0, c1, c2) VALUES ('2119723445', x'eeef', NULL, '914209549', ''); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0, c1, c4) VALUES (NULL, x'', 0x7aedba42, x''), ('2119723445', '', 0.0692142076518818, 0.0692142076518818), ('h(', '2062400066', NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (NULL, '0.0692142076518818'); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
PRAGMA temp.cache_spill = false; -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (0.4259009368497403); -- 0ms;
PRAGMA main.wal_autocheckpoint = 994780910944610175; -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c4, c1, c2) VALUES ('Z᭪', NULL, 0X41f1619a, 999856452); -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c3) VALUES (0.06880469839107584, 0.05831361318044481); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0, c2) VALUES (0.06880469839107584, -1897138079, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c3='1325844051', c1=x'5459' WHERE (((rt0.c2)GLOB(rt0.c2)) IN ()); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c1) VALUES (NULL, 2.062400066E9, x''); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA application_id; -- 0ms;
PRAGMA journal_mode; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt0 SET (c2, c0, c1)=(0.9015926302135823, 0.9219249283043117, 200790975); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES (9.99856452E8, x'', NULL), (0.5623373135068797, 0xd3d47c5, x''), ('', 0.22191670329137891, x''); -- 0ms;
INSERT OR ABORT INTO rt1(c2) VALUES ((((((((((+ (0X3e5d620e)))OR(CAST(NULL AS REAL))))AND('')))AND(CASE x'3e63'  WHEN '1766630342' THEN '' END)))OR(((0X694ca3c6) NOTNULL)))); -- 0ms;
REINDEX; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (1.766630342E9); -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=(0.526628942189852) WHERE rt0.c4; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=('200790975'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (0Xffffffff87d538ac); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt1 VALUES (NULL, 0X783b3faf, '1963049665'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES ('', 1.7976931348623157E308); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL; -- 1ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES ('291258793', x''), (NULL, '-1897138079'), ('1930452936', '1930452936'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt0 SET (c3)=('0.526628942189852') WHERE GLOB(((rt0.c3)GLOB(rt0.c4)), (((rt0.c1, rt0.c0, rt0.c0))>=((rt0.c1, rt0.c2, rt0.c3)))); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1, c0, c0)=('h(', x'', '') WHERE SQLITE_COMPILEOPTION_USED((NOT ('200790975'))); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.8878408020358737; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c4) VALUES (x'', 0.009054694370932315, -1699605066); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
PRAGMA locking_mode; -- 0ms;
INSERT OR REPLACE INTO rt1(c0) VALUES (0.7091684135805069); -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c1, c0) VALUES (0.20145764443995173, NULL, x'7c10'), ('c9', x'f428', NULL), (x'', 'c9', '440569402'); -- 0ms;
INSERT OR FAIL INTO rt1(c2, c1) VALUES (0.30815188705021834, '200790975'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1) VALUES (x'', 0.0692142076518818); -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE rt0; -- 1ms;
PRAGMA secure_delete; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0) VALUES (0.9349160354264263, -761379441), (x'', 0.7091684135805069), (x'9089', '&溚g8iV'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.9172773432595073; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE rt0 SET (c4)=(NULL); -- 1ms;
PRAGMA temp.threads; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INTEGER , PRIMARY KEY (c0, c0 DESC)) WITHOUT ROWID; -- 0ms;
UPDATE OR IGNORE rt1 SET c1='0.0692142076518818' WHERE CAST(CAST(rt1.c0 AS TEXT) AS REAL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA application_id; -- 0ms;
UPDATE t0 SET (c0)=(53957697); -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c8; -- 1ms;
END; -- 0ms;
PRAGMA main.defer_foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-412455877 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES (x'', NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY FROM rt0, rt1 WHERE ((x'00e1' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT (((t0.c8) NOT BETWEEN (rt0.c0) AND (rt1.c0)) IN ()) FROM rt1, rt0, t0 UNION SELECT (((((+ (t0.c8)))OR(LIKELY(NULL))))AND(CAST(rt0.c4 AS REAL))) FROM rt1, t0 WHERE (((((((0.9686119997090763) IS FALSE))AND(x'' COLLATE BINARY)))AND((('1282860914') BETWEEN (x'4bc5') AND ('Xm')))));SELECT DISTINCT 222119877 FROM t0, rt0 WHERE ((((((-1.7976931348623157E308)=(NULL))))==((CAST(NULL AS REAL))))); -- 0ms;
SELECT DISTINCT LAST_VALUE((CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0X2867e5f0 END IN ((rt1.c2 IN (rt1.c2))))) OVER ( RANGE  UNBOUNDED PRECEDING) FROM rt1 WHERE (((((NULL)IS('2062400066')))<(x'f3d5' COLLATE NOCASE))); -- 0ms;
SELECT ((((((('a(n')) BETWEEN ((t0.c8)) AND ((rt0.c3))))AND(('1054412954' IN ()))))AND((rt1.c2 IN ()))) FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT '-2142371976' COLLATE NOCASE COLLATE NOCASE, NULL, LIKELIHOOD('', 0.9262831090989885), ((rt0.c1 COLLATE RTRIM) NOT NULL), ((rt0.c3 IN ()) IN ()) FROM rt1, t0, rt0 ORDER BY rt0.c1  NULLS FIRST LIMIT -2090347565; -- 0ms;
SELECT ((x'e18a' COLLATE RTRIM) NOTNULL) FROM rt0, rt1, t0 WHERE (('O^[[K' IN (NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt0 WHERE (TRIM(DISTINCT (+ (0x4c76e772)), ((NULL)>=(x'ead3cdb3'))));SELECT ALL (((((((((- (rt1.c0)))AND((+ (rt0.c2)))))OR('\n5Ks')))AND((- (rt0.c4)))))AND(((0.20145764443995173)LIKE(0X4c76e772)))), COUNT(MIN(((rt1.c0) ISNULL))), ((UPPER(rt0.c1)) IS TRUE) FROM rt1, t0, rt0 WHERE (((('0.526628942189852')&(0.7162687093097057)) IN ((((0Xffffffff804dff78)) NOT BETWEEN ((0x4f06c653)) AND ((x''))))));SELECT DISTINCT (((rt1.c2, rt0.c0, rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c3)), MAX(0.855496820091432), rt0.c4, ((((rt1.c0)AND(rt0.c2)))OR(rt1.c1)), ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((json_quote(NULL), ((rt0.c1)*(rt1.c1)), rt1.c1, ((rt1.c0)<=(rt0.c0)), ((rt0.c3)IS NOT(rt1.c0))))) FROM t0, rt0, rt1; -- 0ms;
SELECT (CASE rt1.c0  WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c3 END IN (rt0.c4 COLLATE NOCASE, rt0.c1 COLLATE NOCASE)) FROM rt1 WHERE (CASE CAST(0.1707365822238871 AS INTEGER)  WHEN (NULL IN (x'', 0X5ebb877d)) THEN ABS(0.2870091116047676) END);SELECT DISTINCT ((((rt1.c1 COLLATE NOCASE)AND(((rt0.c0) ISNULL))))AND(((rt0.c3)!=(rt0.c2)))), (((x'')) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((((rt1.c1))<((t0.c8)))))), (((rt1.c0) NOT BETWEEN (rt0.c0) AND (0Xffffffffb1c90710)) IN ()) FROM t0, rt1, rt0 WHERE (CASE CASE WHEN '\nf7x' THEN x'4d261762' END  WHEN ((NULL) NOT BETWEEN (1.325844051E9) AND (x'e1e0')) THEN CAST(0.016025736615299047 AS REAL) END); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c2) ISNULL)) OVER () FROM rt0; -- 0ms;
SELECT ALL RTRIM((- (rt0.c1))) FROM t0, rt1;SELECT ROW_NUMBER() OVER (), CASE WHEN NULLIF(rt0.c4, rt0.c3) THEN (((t0.c8, t0.c8, t0.c8))=((rt0.c0, 0X403e5ed9, rt1.c0))) END, CAST(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) AS REAL) FROM t0, rt1;SELECT DISTINCT 0.9686119997090763 FROM rt1, rt0, t0 WHERE (CAST((((1.046307342E9)) BETWEEN ((NULL)) AND ((1.963049665E9))) AS TEXT)); -- 0ms;
SELECT DISTINCT (~ (CAST(rt0.c4 AS TEXT))) FROM rt1;SELECT ALL rt1.c0, ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 WHEN t0.c8 THEN rt0.c3 WHEN '1322683997' THEN rt1.c2 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 END)<(rt0.c4 COLLATE NOCASE)), ((rt1.c2)>((NOT (rt0.c1)))) FROM t0, rt0 WHERE (((((NULL COLLATE BINARY)AND('*' COLLATE BINARY)))OR(((((((((x'')OR(699401880)))AND(0Xffffffffee49f7ff)))AND('Uq')))AND(1.322683997E9)))));SELECT (((rt0.c2)) NOT BETWEEN ((((rt0.c3)IS NOT(rt1.c0)))) AND ((rt1.c2 COLLATE BINARY))) FROM t0, rt1 WHERE ((NOT ((~ (-1699605066))))) LIMIT -1884758178 OFFSET -249423465;SELECT (~ (((rt0.c4)|(rt0.c1)))) FROM rt1, t0;SELECT ALL ((((((((((NULL)OR(rt0.c4)))AND(rt1.c2)))AND(rt0.c0)))AND(rt1.c2))) NOT NULL), GROUP_CONCAT(GLOB(rt0.c2, rt0.c1)) OVER (), MAX(((((rt0.c4)AND(rt1.c1)))OR(rt1.c0))) FROM rt0, rt1 WHERE (CASE WHEN (- (x'')) THEN CASE 0.7119970779507689  WHEN 'AY' THEN '/T' ELSE 0.3428883527780493 END ELSE (((x'')) BETWEEN ((NULL)) AND ((x''))) END) ORDER BY LOWER((rt0.c4 IN ())); -- 0ms;
SELECT ((((t0.c8)AND(rt0.c3)))-((('v#hG,w') BETWEEN (rt0.c3) AND (rt1.c2)))) FROM rt0, t0, rt1 WHERE (((('-2016069460') NOT BETWEEN (NULL) AND (x'621e')) IN ())); -- 0ms;
SELECT DISTINCT ((((((((((((MAX(rt1.c0))OR((('677897712')<<(rt1.c1)))))AND((((rt0.c4, rt0.c0, rt1.c0)) NOT BETWEEN ((t0.c8, rt1.c2, rt1.c1)) AND ((rt0.c0, t0.c8, rt1.c1))))))AND(COUNT(t0.c8))))AND(CAST(rt0.c4 AS NUMERIC))))OR(rt1.c1 COLLATE RTRIM)))AND(TRIM(DISTINCT x'', rt0.c0))), (((x'' COLLATE RTRIM))<=(((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c8)))))), ('uq' IN (HEX(NULL))), SQLITE_SOURCE_ID(), (((rt1.c0) IS TRUE) IN ()), SUM(CAST(rt0.c3 AS REAL)) OVER (), ((t0.c8 COLLATE NOCASE)!=('&溚g8iv' COLLATE NOCASE)) FROM rt1, t0, rt0 WHERE (((((('2119723445')OR(NULL)))OR(1.325844051E9)) IN ())); -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN ()) AS INTEGER) FROM t0, rt1, rt0 WHERE ((((((1125301132))==((NULL))))|((((x''))<(('IW')))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((((rt0.c3)OR(NULL)))OR(rt1.c0)) THEN (((rt1.c1)) BETWEEN ((t0.c8)) AND ((rt0.c0))) END FROM rt0, t0;SELECT ((((((rt0.c3)LIKE(rt0.c2)))AND(x'')))OR(CASE WHEN rt0.c0 THEN t0.c8 ELSE rt0.c3 END)) FROM rt0, t0 WHERE (((((((NULL)AND(NULL)))OR(1.054412954E9))) BETWEEN (0.9888173830329299 COLLATE BINARY) AND (CAST('551047768' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT CAST((((rt1.c1, rt1.c1, rt1.c2)) BETWEEN ((rt0.c4, '', rt1.c2)) AND ((rt1.c1, rt0.c2, rt0.c4))) AS TEXT) FROM t0, rt0, rt1 WHERE ((((((((NULL)OR(NULL)))AND(914209549))))<=((x'')))); -- 0ms;
SELECT DISTINCT ((((t0.c8)||(rt1.c2))) BETWEEN (((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (CASE rt1.c1  WHEN rt1.c0 THEN rt0.c0 END)), (rt0.c4 COLLATE BINARY IN ()), ((((rt0.c2)AND(rt1.c1)))OR(rt1.c2)) COLLATE NOCASE FROM t0;SELECT DISTINCT ((rt0.c4 COLLATE NOCASE) IS FALSE) FROM rt0 LIMIT 2062400066; -- 1ms;
SELECT DISTINCT (((''))==(((rt0.c1 IN (rt0.c1, rt1.c0))))) FROM rt0, rt1 WHERE (CAST(CAST('-1326083513' AS TEXT) AS TEXT)) LIMIT -1722108220; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM rt1, rt0, t0 WHERE (((((x'')/(NULL))) IS TRUE)) ORDER BY ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN NULL ELSE rt1.c1 END) BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c0)) DESC  NULLS LAST; -- 0ms;
SELECT ALL GROUP_CONCAT(0.8955196394517579 COLLATE RTRIM), CUME_DIST() OVER (), ((((x'')%(rt0.c2))) BETWEEN (((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))) AND (MAX(rt0.c0))) FROM rt1 WHERE ('-249423465') LIMIT 832897201;SELECT (((rt1.c1 IN (rt0.c4)))!=(LIKELIHOOD(DISTINCT rt1.c1, 0.5148614144127083))) FROM rt1 WHERE (((CASE 0.5623373135068797  WHEN x'' THEN 2.91258793E8 END) NOT BETWEEN (((x'') IS FALSE)) AND (CASE 0.19156142349351357  WHEN x'' THEN 'mB' ELSE NULL END)));SELECT CASE CAST(rt0.c3 AS REAL)  WHEN NULLIF(rt0.c0, rt1.c0) THEN rt0.c4 ELSE ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(t0.c8)))AND(rt0.c3)))OR(rt1.c2)))AND(0.6167474591000974)) END FROM rt1, t0 WHERE (CAST((0x3375441 IN ()) AS INTEGER)) ORDER BY (((((t0.c8, rt0.c4, rt0.c4, rt0.c2, rt0.c1)) NOT BETWEEN ((rt1.c2, rt0.c1, rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c1, t0.c8, rt0.c3, rt0.c0, rt1.c0))))AND(CASE rt0.c3  WHEN '' THEN x'' ELSE rt0.c3 END)) DESC;SELECT DISTINCT x'' FROM rt1 GROUP BY ((((rt1.c0) IS TRUE))<<(NULLIF(rt0.c2, rt1.c0)));SELECT DISTINCT ((0.0692142076518818) IS FALSE) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0 GROUP BY (((rt0.c4)) BETWEEN (((('-1319398312')IS NOT(t0.c8)))) AND (('0.05831361318044481')));SELECT (LIKELIHOOD(rt0.c1, 0.14257143717259735) IN ()) FROM rt0 WHERE ('-925796845'); -- 0ms;
SELECT DISTINCT 0.7119970779507689, GROUP_CONCAT(COUNT((((x'd7d1'))<=((x''))))), '285139345' FROM rt0 WHERE ('6i*mꘔ瓓') LIMIT -851217197 OFFSET -189239654;SELECT DISTINCT IFNULL((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL))), ((rt1.c1) NOT NULL)) FROM rt1, t0 WHERE (0.7119970779507689);SELECT DISTINCT 0.4693705807528765 FROM t0, rt0; -- 0ms;
SELECT DISTINCT (('1e500') IS FALSE), CASE WHEN ((('', rt0.c3, rt0.c2)) BETWEEN ((rt0.c3, 0.19344857765341283, rt0.c1)) AND (('	Y', rt0.c3, t0.c8))) THEN (((rt0.c4, rt0.c3, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c2, rt1.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))) END, (('#1501 IA') ISNULL) FROM t0, rt0 WHERE (((((x'') IS TRUE))<=(((NULL)<=(0.3458605342517652)))));SELECT ((CAST(rt0.c0 AS BLOB))|((~ (rt0.c3)))) FROM rt0; -- 0ms;
SELECT (((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1)) IN ()) FROM rt1 WHERE (CASE (((x'126f50a4', '', NULL)) NOT BETWEEN (('u>', x'', 4.40569402E8)) AND ((0.38949468985448554, -1.884758178E9, x'')))  WHEN ((((x'')OR(NULL)))AND(1282860914)) THEN ((NULL)||(0.11404619689560369)) END); -- 0ms;
SELECT DISTINCT (((rt0.c4)) BETWEEN ((x'' COLLATE BINARY)) AND ((LTRIM(rt0.c3, rt1.c0)))) FROM rt0, rt1, t0 WHERE (CAST('' AS INTEGER) COLLATE BINARY COLLATE NOCASE); -- 1ms;
SELECT DISTINCT CAST(SUM(rt0.c2) AS INTEGER) FROM rt0, t0, rt1 WHERE (((((CAST('914209549' AS TEXT))AND((((0Xffffffffd90dd85b, x'', 0.3428883527780493))<=((x'', 0xfffffffff5aab0dd, '53957697'))))))OR(((0xffffffffc88affb2)GLOB(x'c101'))))); -- 0ms;
SELECT ALL MIN(CAST(rt1.c0 AS REAL)) FROM t0, rt0 GROUP BY 'pN鉶QzM' COLLATE BINARY COLLATE BINARY HAVING ((((((((CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c4 END)OR(((rt0.c4) IS FALSE))))AND(((((((((1.05723377E9)AND(rt1.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt1.c0)))))OR((((0.40016382065235534))>((rt0.c3))))))AND(COUNT(rt0.c4)));SELECT ALL CASE WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.9948227306500222) THEN x'fd95' ELSE rt1.c2 COLLATE RTRIM END FROM rt1, t0 WHERE (CASE (~ (0.8552041063199518))  WHEN ((0.5340741316590046) NOTNULL) THEN (+ ('-728972477')) END); -- 0ms;
SELECT DISTINCT ((((rt0.c3)AND(((rt1.c0)|(rt1.c0)))))OR((((rt0.c3))>((rt1.c0))))) FROM rt0, rt1, t0 LIMIT 1700762311; -- 0ms;
SELECT ((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c0)) COLLATE BINARY FROM rt0;SELECT ((((rt0.c2)LIKE(rt0.c4)))AND(COUNT(rt0.c4))) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN (rt0.c3)))>(CASE WHEN NULL THEN t0.c8 END)) FROM rt1 WHERE (CAST(x'' AS NUMERIC) COLLATE BINARY) GROUP BY (((rt0.c2)) BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND ((rt0.c3 COLLATE BINARY))), (~ (rt1.c2)) COLLATE NOCASE COLLATE NOCASE, ((rt0.c3 COLLATE RTRIM)LIKE(rt1.c0 COLLATE NOCASE)) HAVING ((CAST(rt1.c0 AS REAL))=((rt0.c4 IN (rt0.c3))));SELECT DISTINCT ((LIKELY(rt1.c1)) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((rt1.c2) IS FALSE))) FROM rt0, t0, rt1 WHERE (((((0.6755073500409449) NOTNULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT ((rt0.c1)<(t0.c8)) COLLATE NOCASE FROM rt0 NOT INDEXED, rt1 WHERE (((ABS('')) BETWEEN (CASE WHEN NULL THEN '1914598014' ELSE '[''x9mD4-\r' END) AND (NULL COLLATE BINARY)));SELECT (((rt0.c1)) BETWEEN ((rt0.c3 COLLATE NOCASE)) AND (((- (rt1.c1))))) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT CHAR(rt0.c3) FROM rt0, rt1; -- 0ms;
SELECT GROUP_CONCAT(LOWER(DISTINCT rt0.c0)) OVER () FROM t0;SELECT DISTINCT TRIM(rt1.c1 COLLATE BINARY) FROM rt0, rt1, t0; -- 0ms;
SELECT ALL ABS(CASE 2.119723445E9  WHEN rt1.c0 THEN rt0.c0 ELSE t0.c8 END) FROM t0, rt0, rt1; -- 0ms;
SELECT ((rt0.c0)/(rt0.c1)) COLLATE RTRIM FROM t0, rt0 NOT INDEXED WHERE ((((+ (x''))) BETWEEN ((((NULL, NULL, 0.24513204973525893))<(('g6{ SA', 0.37913863744900544, NULL)))) AND ((+ (8.32897201E8))))); -- 0ms;
SELECT ALL ((((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c0))) NOTNULL) FROM rt1 WHERE ((((0.5215173589239903 IN (NULL)))&(((NULL)*(NULL)))));SELECT DISTINCT (((((+ (rt1.c1)))OR((rt0.c4 IN ()))))OR((rt0.c2 IN (t0.c8)))) FROM rt1, t0, rt0; -- 0ms;
SELECT (((AVG(rt0.c2)))==((((rt0.c4) NOT NULL)))) FROM rt1 WHERE ((('1914598014')>=(CAST(x'27d8' AS INTEGER))));SELECT ((CASE rt1.c0  WHEN rt1.c2 THEN t0.c8 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((((rt1.c2)OR(rt0.c4)))OR(t0.c8)))) FROM rt0, rt1 WHERE ((((NULL))<((((x'')AND(x'61b9'))))));SELECT QUOTE(rt0.c4) FROM t0, rt0, rt1 GROUP BY ((TRIM(rt1.c2, 'Mp'))%(((((rt1.c1)OR(rt1.c2)))AND(rt0.c1)))); -- 0ms;
SELECT DISTINCT ((((rt1.c0)%(rt0.c4))) NOT BETWEEN (x'') AND (CAST(rt1.c2 AS TEXT))), (NOT ((((rt0.c0))<>((rt1.c2))))), ((rt1.c1 COLLATE RTRIM) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (0.42747236289032653)) FROM t0, rt1, rt0 WHERE (((0.3481034199773676 COLLATE NOCASE) BETWEEN (((NULL)OR(4.40569402E8))) AND (((NULL) NOT BETWEEN (0.040404561541782846) AND (''))))); -- 0ms;
SELECT DISTINCT AVG(((rt1.c1)||('<S*rN'))) COLLATE BINARY FROM rt0, t0, rt1; -- 0ms;
SELECT ALL TOTAL((~ (rt0.c0))) OVER ( GROUPS ((rt0.c4 COLLATE NOCASE)%(((rt1.c1)GLOB(rt0.c4)))) PRECEDING EXCLUDE GROUP) FROM rt0, rt1 WHERE ((((('vZ8)') NOT NULL))>=(UNICODE(x'')))); -- 0ms;
SELECT RANK() OVER () FROM rt0, t0 WHERE (CASE ((NULL)GLOB(''))  WHEN (- (0x367dbb0d)) THEN TYPEOF(DISTINCT x'') END); -- 0ms;
SELECT DISTINCT ((CASE rt1.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt1.c0 WHEN '-116078184' THEN rt1.c0 ELSE rt1.c0 END)<(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt1.c1)))AND(rt0.c1)))) FROM t0;SELECT COUNT(*) OVER ( ORDER BY CAST(CASE '-1830869201'  WHEN rt1.c0 THEN rt1.c2 END AS REAL) ASC  NULLS FIRST), ((CAST(rt1.c2 AS TEXT)) NOT NULL), (((- (rt0.c4)))-(rt0.c0 COLLATE RTRIM)) FROM rt0, t0, rt1 WHERE (MAX(CASE NULL  WHEN -227929529 THEN '551047768' ELSE ',냝Z' END, ((x'') BETWEEN (x'') AND ('-1699605066')))) LIMIT -653404069 OFFSET 1125301132; -- 0ms;
SELECT DISTINCT ((((CAST(x'' AS BLOB))AND(CAST(rt1.c1 AS REAL))))OR(((rt1.c1) IS TRUE))), GROUP_CONCAT(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c2 END) OVER (), (((NOT (rt1.c2)))LIKE(rt0.c0)) FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT (rt1.c1 IN (rt0.c2, rt1.c0))), (((rt0.c1) IS FALSE) IN ()), CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END COLLATE BINARY FROM rt1;SELECT DISTINCT (((((t0.c8)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))) IS FALSE) FROM rt1, t0, rt0 WHERE (0xfffffffff1221997); -- 0ms;
SELECT DISTINCT (~ ((0.22191670329137891 IN ()))) FROM t0, rt0, rt1; -- 0ms;
SELECT DISTINCT ((rt1.c1) NOT BETWEEN ('1750915710' COLLATE NOCASE) AND (((((rt1.c1)AND(rt0.c1)))AND(t0.c8)))), ((rt1.c0) ISNULL) COLLATE NOCASE, (('')*(((rt0.c1)%(rt0.c0)))) FROM rt1 WHERE ((((NULL)*('^')) IN ())) LIMIT -2016069460 OFFSET 999856452;SELECT DISTINCT (((('')LIKE(rt1.c2)))<<(LIKELIHOOD(x'5350', 0.3923777418109746))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT SUM(rt1.c2) OVER ( ORDER BY 'wVGD'  NULLS LAST, CAST(CAST(t0.c8 AS REAL) AS REAL)  NULLS FIRST), TYPEOF(DISTINCT rt0.c2 COLLATE RTRIM), rt1.c0, ((((rt1.c0) IS FALSE)) IS TRUE), 0.9825512899064924 FROM rt1, rt0, t0 GROUP BY ((rt0.c1 COLLATE NOCASE) NOT NULL), UPPER(((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c3))), ((((x'')>(rt1.c0)))<<(((rt1.c0) ISNULL))) HAVING (((((t0.c8 IN ()))OR((((rt1.c2))<>((rt1.c1))))))OR(TOTAL(rt1.c2))); -- 0ms;
SELECT ALL (~ (CAST(rt0.c0 AS REAL))) FROM rt1 WHERE ('-1371642682');SELECT DISTINCT (CAST(rt1.c0 AS TEXT) IN (TOTAL(rt0.c1), ((('', rt0.c2, rt0.c3)) NOT BETWEEN ((t0.c8, rt0.c4, rt1.c1)) AND ((rt0.c4, rt0.c0, rt0.c2))))) FROM t0, rt1;SELECT COUNT(*), DENSE_RANK() OVER (), (((((- (rt0.c4)))OR(0.9825512899064924)))OR(CASE WHEN rt0.c1 THEN rt0.c4 ELSE -1.371642682E9 END)), ((COUNT(*))!=(((rt0.c1)GLOB('c3')))), -1.830869201E9 FROM t0, rt1, rt0; -- 0ms;
SELECT ALL NULL, ((((t0.c8) NOT NULL))>>('>')), MIN(rt0.c4) FROM rt1, t0 WHERE (((CASE WHEN 365112888 THEN '' WHEN '#1501 IA' THEN '1589348221' WHEN 0.6676462849858912 THEN 0.7091684135805069 END) IS TRUE));SELECT DISTINCT (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2)))) IS FALSE), LAST_VALUE('') OVER (), (((rt0.c4 IN ())) NOT BETWEEN ((((rt1.c1)) BETWEEN ((rt0.c4)) AND ((0.5195770139505823)))) AND (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c1 END)) FROM t0 WHERE (CAST(((((1291764158)AND(x'')))AND('')) AS TEXT)) GROUP BY (((rt0.c4 IN ())) BETWEEN (-412455877) AND ((((rt0.c3, rt1.c2, rt0.c2)) NOT BETWEEN ((rt1.c1, rt0.c0, t0.c8)) AND ((rt0.c2, rt0.c2, rt1.c2))))) LIMIT -297142273 OFFSET -412455877;SELECT DISTINCT rt1.c0 FROM rt0 CROSS JOIN t0 ON '뒫x' COLLATE BINARY LEFT OUTER JOIN rt1 ON CAST(((rt0.c4)==(rt0.c0)) AS NUMERIC); -- 1ms;
SELECT DISTINCT ((rt1.c1) NOT BETWEEN ((~ (rt0.c4))) AND (((t0.c8) BETWEEN (rt1.c1) AND (rt1.c0)))) FROM t0 WHERE ((~ (x'')));SELECT ((((rt0.c1)IS(t0.c8))) NOTNULL) FROM rt1, rt0, t0 WHERE ((((((-1059182348)/(0.20145764443995173))))<=((((0.9237721260596786) NOTNULL))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1, t0, rt0 WHERE (((((CASE x''  WHEN '950911535' THEN '' END)AND(((NULL) IS FALSE))))OR(((0X4ed68e5d)<<(0.01244120944059457))))); -- 0ms;
SELECT DISTINCT (((rt0.c3)) NOT BETWEEN ((SUM(rt1.c1))) AND ((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c3))))), '', ((rt0.c4 IN (rt0.c0, rt0.c2)) IN ()) FROM rt0;SELECT COUNT(*) OVER (), (('0.5340741316590046') NOT NULL), ((rt0.c2) NOT NULL) COLLATE RTRIM FROM t0, rt0; -- 0ms;
SELECT ALL ((((((rt1.c1)OR(rt0.c3)))AND(t0.c8))) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (COUNT(rt1.c2))), TOTAL((NOT (rt1.c2))), CASE WHEN 0.8168214315734692 THEN rt0.c1 COLLATE RTRIM ELSE '-1060136452' END FROM rt1 CROSS JOIN rt0 ON CAST(x'9301' COLLATE BINARY AS REAL) FULL OUTER JOIN t0 ON CASE WHEN CAST(rt0.c4 AS BLOB) THEN ((rt0.c2)<('-200739939')) ELSE ((rt1.c1)AND(rt0.c3)) END LIMIT 1930179842; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c4) IS TRUE)) OVER (), ((((rt1.c2) BETWEEN (rt0.c3) AND (rt0.c2)))<<((rt1.c2 IN ()))), ((SUM(rt0.c4)) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (NULL)) FROM rt0;SELECT ALL AVG(((rt0.c1) NOT BETWEEN (0.20863934911087945) AND (rt0.c3))) FILTER(WHERE COALESCE(((((rt1.c0)AND(x'fe5c')))AND(rt0.c4)), (rt1.c2 IN ()), ((rt0.c3) BETWEEN (rt0.c4) AND (t0.c8)), 376463948)) OVER () FROM t0, rt1 WHERE ((((((((((((('-53803498')OR(0.9152287934420148)))OR(x'')))OR(NULL)))OR(935581722)))OR((('0.040404561541782846') NOTNULL))))AND((('hLO<') IS TRUE))));SELECT DISTINCT (((NOT (rt0.c3))) IS TRUE) FROM t0, rt1 WHERE ((+ ((('')>(x''))))) LIMIT 1054412954 OFFSET -240601531;SELECT ((((rt0.c3)||(NULL)))+(MAX(rt1.c2))), 'Ys', CAST(CAST(rt0.c3 AS BLOB) AS INTEGER) FROM t0 GROUP BY (- (((rt1.c2)&(rt1.c0)))) HAVING CAST(0.6485851754289214 AS BLOB) COLLATE NOCASE LIMIT -35708238 OFFSET -1568729168;SELECT DISTINCT ((((((t0.c8)OR(x'9569')))AND(rt0.c3))) IS TRUE), ((rt1.c0 COLLATE RTRIM) IS FALSE), LIKELIHOOD(DISTINCT ((rt0.c4)!=('0.009054694370932315')), 0.976876711459903) FROM rt1, rt0, t0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS REAL))IS(((((rt0.c1)AND(rt0.c4)))AND(t0.c8)))), ((rt0.c3)<(MIN(rt0.c4))), ((CAST(rt0.c3 AS REAL)) IS TRUE) FROM rt1, rt0, t0 WHERE (CASE CASE NULL  WHEN '1631011252' THEN x'' WHEN NULL THEN NULL WHEN x'5ee156ef' THEN x'' WHEN NULL THEN '200790975' WHEN x'' THEN x'' END  WHEN (((('P3y')OR(x'')))AND('250266702')) THEN (((('-100598585')OR(NULL)))OR(x'')) END); -- 0ms;
SELECT COUNT(*) FROM t0 WHERE (((-7.61379441E8 IN (x'fe57')) IN ())); -- 0ms;
SELECT ALL TOTAL(((rt1.c1) BETWEEN (rt0.c3) AND (rt0.c4))) FROM t0 WHERE (((((CAST('' AS TEXT))OR(((NULL) IS FALSE))))AND(CASE WHEN x'' THEN NULL END)));SELECT DISTINCT ((json(rt0.c2))||(rt1.c1)) FROM rt0;SELECT DISTINCT rt1.c2, CAST(SUM(rt0.c0) AS NUMERIC), (NOT (CHAR(rt0.c4, '', rt1.c2))) FROM t0, rt1, rt0; -- 0ms;
SELECT ALL '982553652' FROM rt1, rt0, t0; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT ((rt0.c0)>>(rt1.c2)), 0.8461404626563855), ((((rt0.c4)<<(rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt1.c0) AND ('-1884758178'))) AND (((NULL)/(rt1.c2)))), ((((((((rt0.c3 COLLATE RTRIM)AND(CAST(rt0.c0 AS REAL))))AND(CASE rt1.c0  WHEN rt0.c3 THEN rt0.c1 END)))AND(((((rt0.c0)OR(rt0.c2)))AND(rt1.c0)))))AND(((rt0.c2)<(rt0.c2)))) FROM rt0, t0 NOT INDEXED WHERE ((+ (CASE WHEN 'uq' THEN 'oV' END))) GROUP BY 0.6762138871776623;SELECT DISTINCT ((((rt1.c2 IN ())))<=(((((rt0.c4, '53957697', rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt1.c1)) AND ((rt0.c0, rt0.c2, t0.c8)))))) FROM rt0 WHERE ((((NULL)<<('ᖶf')) IN ())) ORDER BY ((((rt0.c2)-(rt1.c1)))=(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt1.c1 END)) ASC  NULLS FIRST, ((rt0.c2)<(((rt0.c3)<<(t0.c8))))  NULLS LAST;SELECT (rt0.c1 IN ()) COLLATE NOCASE FROM rt0 WHERE (((CAST(0.06596554512008357 AS NUMERIC))=(NULLIF('926328340', NULL)))); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c1)))>>(rt0.c4 COLLATE RTRIM)), ((rt0.c3)/(rt0.c2)) COLLATE NOCASE, x'' FROM t0 GROUP BY rt0.c2 LIMIT 47447209;SELECT DISTINCT (((rt0.c1, t0.c8, x'')) BETWEEN ((((rt0.c4)%(rt0.c0)), ((rt0.c2) BETWEEN (t0.c8) AND (rt0.c1)), (- (t0.c8)))) AND ((((((((((((((t0.c8)OR(rt0.c3)))AND(rt1.c2)))AND(rt0.c4)))AND(NULL)))AND(rt1.c2)))AND(rt0.c0)), (rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c2 END))) FROM rt0, rt1 WHERE ('-1');SELECT DISTINCT MAX(COUNT(*)) FROM rt0;SELECT DISTINCT SUM(((rt0.c4) NOT NULL)) COLLATE RTRIM FROM rt1, t0 WHERE (CASE WHEN ((0Xffffffff8bd6585e) NOT NULL) THEN CASE -2.40601531E8  WHEN '' THEN NULL WHEN x'' THEN x'' WHEN x'' THEN '<''' ELSE '-1974977168' END WHEN x'39aa' COLLATE RTRIM THEN ((((x'')OR('982553652')))OR('-728972477')) WHEN '' COLLATE BINARY THEN CASE WHEN '' THEN x'' WHEN NULL THEN NULL WHEN x'4456' THEN NULL ELSE x'' END END) ORDER BY ((CAST(rt1.c1 AS BLOB))IS(ABS(DISTINCT rt1.c0)))  NULLS FIRST;SELECT (((((x'')AND(rt0.c3))))>=((((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) FROM t0 WHERE ((((0.37913863744900544, -832023440, '0.009054694370932315')) BETWEEN ((((x'') NOTNULL), x'', ('E%' IN ()))) AND ((((NULL)&('1885927919')), (('')<(NULL)), ((((((((0.875016125080046)OR(0.17093230221125633)))AND('-1084009972')))AND(x'')))OR('-930414670'))))));SELECT DISTINCT MIN((~ (rt0.c4))) FROM t0, rt1;SELECT rt1.c1 FROM rt0, t0 NOT INDEXED WHERE ((((((('1589348221')AND(x'')))OR(NULL)))%(CAST(x'88f2' AS BLOB))));SELECT CASE ((rt0.c4) IS FALSE)  WHEN (('147437057')IS(rt1.c1)) THEN MAX(rt0.c4) ELSE (((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) END, (rt0.c4 IN ()) COLLATE RTRIM, UNICODE((rt0.c4 IN ())) FROM rt0, t0 LIMIT 222674458 OFFSET -436253763;SELECT ALL ((((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c4)))|(CASE t0.c8  WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c8 WHEN rt0.c1 THEN rt0.c3 END)) FROM rt1, rt0 WHERE (((CAST('2144282369' AS REAL)) BETWEEN ((('HZQMtG')AND(0xffffffffc977aca1))) AND ((+ (NULL)))));SELECT ALL (((SUM(rt1.c1)))<((rt0.c4))), NULL, (~ (x'50e1')), ((rt1.c2) BETWEEN (-1.699605066E9) AND (CAST(rt1.c0 AS BLOB))), ((((rt0.c3)|(x'')))<>(IFNULL(rt0.c1, rt0.c1))), ((x'1579') IS FALSE), -1165357131 FROM rt0 ORDER BY CASE '-1084009972'  WHEN (t0.c8 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END DESC;SELECT DISTINCT rt1.c1 FROM rt1, t0, rt0 WHERE (((((-2.142371976E9)*(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT ((rt1.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c4)||(t0.c8))) AND (((rt0.c1)!=(rt0.c0)))) FROM t0, rt1 ORDER BY ((((rt0.c0) NOT NULL))>=(DATETIME(rt1.c0, rt0.c3, t0.c8)))  NULLS FIRST;SELECT ((rt1.c1) NOTNULL) FROM rt0;SELECT DISTINCT ((((rt0.c0)OR(rt0.c3))) BETWEEN (ABS(rt0.c1)) AND ((NOT (rt1.c0)))), ((((rt0.c2)|(rt0.c1)))-(((rt0.c1) IS FALSE))), x'' FROM rt1;SELECT DISTINCT CASE rt0.c3  WHEN ((t0.c8)!=(rt1.c1)) THEN (((rt0.c1, rt1.c2, rt1.c0)) BETWEEN ((t0.c8, rt1.c1, rt0.c3)) AND ((t0.c8, rt0.c2, rt0.c4))) ELSE rt1.c2 COLLATE NOCASE END FROM rt1, t0 WHERE ((- ((+ (x''))))) LIMIT -851217197;SELECT rt1.c2 FROM rt0 WHERE (CAST('-851217197' AS BLOB) COLLATE NOCASE);SELECT ALL ((rt0.c0)>=(rt0.c0)) COLLATE RTRIM FROM t0, rt0, rt1 WHERE (CAST(((0.5495849101733854)*(NULL)) AS TEXT)) ORDER BY CAST(rt1.c0 AS BLOB) COLLATE BINARY  NULLS LAST, (rt1.c2 IN ()) ASC; -- 0ms;
SELECT DISTINCT ((CAST('Au' AS NUMERIC)) NOT BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c3 COLLATE BINARY)), ((COUNT(rt0.c1))GLOB(((rt0.c3)OR(rt0.c2)))), ((((rt0.c0)<>(rt1.c0)))LIKE(((rt0.c0)OR(rt0.c4)))), ((json_array_length(rt0.c4, rt1.c0)) BETWEEN (GROUP_CONCAT(rt1.c0)) AND (rt1.c2)), ((((TRIM(DISTINCT rt1.c0))OR(((rt1.c0) IS FALSE))))AND(((t0.c8)<<('pn鉶qzm')))) FROM rt0;SELECT DISTINCT MIN(rt0.c0), COUNT(((rt0.c1)IS(rt0.c3))) FILTER(WHERE (((rt1.c0)) BETWEEN (((1.963049665E9 IN ()))) AND ((((t0.c8) ISNULL))))) OVER (), (((rt0.c4 IN (t0.c8)))<=(((rt0.c1)>(rt1.c2)))) FROM t0;SELECT DISTINCT LIKELY(0.9776553304995512 COLLATE BINARY) FROM t0, rt1, rt0 WHERE (('53957697' IN ())); -- 0ms;
SELECT ((DATE(rt1.c0, t0.c8, t0.c8)) IS TRUE) FROM rt1, t0 WHERE (LIKELY(CASE WHEN 0.9888173830329299 THEN 0.9273884168373626 WHEN '-304475674' THEN '1886967202' WHEN 0.5389249420369467 THEN 0.3205798734785591 ELSE x'' END)); -- 0ms;
SELECT LENGTH(rt0.c1 COLLATE RTRIM), ((((CASE WHEN rt0.c3 THEN rt1.c0 ELSE x'' END)AND(COUNT(rt0.c2))))OR(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))), ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (((rt1.c1)IS NOT(rt1.c0)))) FROM t0;SELECT DISTINCT ((NULL) NOT BETWEEN ((((rt0.c3, rt0.c3, rt1.c1, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1, rt0.c3, rt1.c0)) AND ((rt0.c0, rt1.c2, rt0.c0, rt0.c2, rt0.c1)))) AND (SUM(rt1.c1))), NULL, ((((((((((rt1.c0) BETWEEN (rt0.c3) AND (rt1.c1)))OR(((rt1.c0)IS NOT(rt1.c2)))))AND((rt1.c2 IN (rt0.c4)))))AND(NULL)))OR(MIN(rt1.c0))) FROM rt0 LIMIT -69793967;SELECT ALL rt1.c0 FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c0)=(rt0.c4))  WHEN NULL THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN 0.25982375929412194 THEN rt0.c0 ELSE rt0.c1 END ELSE ((rt1.c1)<(rt0.c0)) END FROM rt0 WHERE ((((((0.11313507205560736) IS FALSE), (((0.11313507205560736, 0.5079477335089582, '-297142273')) NOT BETWEEN ((x'', '-480856088', 'P<폓S4qIm8')) AND (('', NULL, 0.6390381097759846))), (('IW') NOT BETWEEN (NULL) AND (NULL))))>(('1982890622', (NOT (x'f4ca')), HEX(DISTINCT x'')))));SELECT DISTINCT COUNT(*) FROM t0 INNER JOIN rt0 ON ((((rt0.c0)AND((((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))))OR(0.9152287934420148)) FULL OUTER JOIN rt1 ON CAST(rt0.c1 COLLATE BINARY AS INTEGER);SELECT ALL (~ (GROUP_CONCAT('81860329'))) FROM t0, rt1 WHERE ((((((x'3cb7', 0.009054694370932315, 0.3094526729673489)) NOT BETWEEN (('1057233770', 430488980, 0.8332890390065836)) AND ((NULL, 0.18702880501351637, NULL))))&((('-1165357131') BETWEEN (0.28424185403371216) AND ('992238442'))))); -- 0ms;
SELECT ALL CAST((+ (rt1.c0)) AS TEXT) FROM rt0 WHERE (CASE WHEN LOWER(DISTINCT 0Xffffffff8d1ead6d) THEN CAST('' AS TEXT) ELSE x'' COLLATE BINARY END);SELECT DISTINCT (((t0.c8)IS NOT(NULL)) IN ()), ((LOWER(rt1.c0)) NOTNULL), ((0Xffffffffb275c8f2) IS FALSE) COLLATE RTRIM, ((((((t0.c8)!=(rt1.c1)))AND('')))AND(rt0.c0 COLLATE BINARY)), (CASE WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c1 ELSE '0.3458605342517652' END IN (((((((((((((rt0.c1)AND(rt1.c2)))AND(rt0.c4)))AND(rt1.c1)))AND(rt1.c0)))OR(rt0.c4)))OR(rt0.c0)))) FROM rt0 WHERE (((((CAST(0.875016125080046 AS REAL))AND(NULLIF(NULL, NULL))))AND((('1559783306')>>(NULL))))) LIMIT -1620594008;SELECT DISTINCT SUM(((NULL) NOT NULL)) OVER () FROM rt1 WHERE (x'0175'); -- 0ms;
SELECT CASE ((rt1.c1)<(rt0.c2))  WHEN 'X,|4Q' THEN INSTR(rt0.c3, rt0.c3) ELSE (- (rt0.c3)) END FROM rt1, t0, rt0 WHERE (((x'')%(1346258754)) COLLATE NOCASE); -- 0ms;
SELECT ALL (((((((((+ (rt0.c4)))AND(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt1.c1 WHEN x'be75' THEN rt0.c4 END)))AND(((x'147240b2') IS FALSE))))OR(((rt1.c1)!=(rt0.c1)))))OR((rt0.c3 IN (rt0.c3)))) FROM rt1, t0;SELECT (((t0.c8 IN ()))&(rt0.c3 COLLATE RTRIM)) FROM rt1, t0;SELECT DISTINCT ((((rt0.c2)GLOB(rt0.c0))) NOT NULL) FROM rt0, rt1, t0 WHERE (((0.6487182350989061)&(((x'') ISNULL)))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM t0, rt1, rt0 WHERE ((((('-173362979')<(-1318555642)))=((x'' IN ())))) ORDER BY rt0.c4 COLLATE RTRIM ASC; -- 0ms;
SELECT (((CAST(rt1.c1 AS INTEGER)))>=((x'e5d9'))) FROM rt0, rt1 WHERE (((INSTR(NULL, x''))||(json_patch('1914598014', x''))));SELECT DISTINCT CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 ELSE 0X4ed68e5d END COLLATE RTRIM, (((COUNT(*)))<=((((rt1.c1)<(rt0.c2))))), (((0.9776810218879936, (NOT (rt0.c0)), t0.c8 COLLATE BINARY))>=((((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c0)), TRIM(rt0.c1, NULL), rt0.c4))) FROM rt0, t0;SELECT DISTINCT (((((rt0.c2, rt0.c3, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3, rt0.c4)) AND ((rt0.c4, x'5acc', rt0.c1))))<(((rt1.c2)*(rt0.c4)))), LOWER(t0.c8), rt0.c2, CASE rt0.c1  WHEN t0.c8 THEN rt0.c2 END COLLATE NOCASE, ((CAST(rt1.c2 AS REAL)) NOTNULL) FROM rt0 LIMIT 1970192090;SELECT DISTINCT ((rt0.c4 COLLATE BINARY) ISNULL) FROM rt0, t0, rt1 GROUP BY ((((((rt1.c1)>=(rt1.c1)))OR(rt0.c3)))AND(CASE rt0.c2  WHEN rt0.c1 THEN 0.7217939530912211 ELSE rt0.c3 END)); -- 0ms;
SELECT DISTINCT CASE WHEN MAX(rt0.c2) THEN TOTAL(rt0.c1) ELSE rt0.c0 END FROM rt0, rt1, t0 WHERE (0Xfffffffffbd70751); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1, t0 WHERE ((((('-925796845')<=(0Xffffffffb5dd3ff0)))GLOB(CASE '0.7119970779507689'  WHEN 0xffffffffb5c7fe5c THEN 1207305610 END))) ORDER BY rt1.c2  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT('-388845573'), '1753771801', (CASE rt1.c2  WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt0.c3 WHEN t0.c8 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c4 THEN NULL END IN ()), (((~ (rt1.c0))) BETWEEN (((((((((rt0.c1)AND(0.690611254764456)))OR(rt1.c2)))AND(rt0.c3)))OR(rt1.c2))) AND (((((rt0.c4)OR(t0.c8)))OR(rt1.c0)))), (((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))<=((rt1.c2 COLLATE RTRIM))) FROM rt0, t0, rt1; -- 0ms;
SELECT ALL MIN(NULL), (~ (NULL)), ((rt1.c0) NOT NULL) COLLATE NOCASE, TYPEOF(CAST(rt1.c0 AS BLOB)), COUNT(*) OVER () FROM rt1 WHERE ((((CAST(NULL AS REAL)))>=((((x'')<=('2038363840')))))); -- 0ms;
SELECT DISTINCT -802298897 FROM rt0, rt1 WHERE ((((NULL COLLATE RTRIM, ((0.5389249420369467)*('hLO<')), (-281635936 IN ())))<((HEX(NULL), ((x'0f73') NOT BETWEEN (0.4017578757008943) AND (0.040404561541782846)), ((0.06085379696315385) NOT NULL))))) LIMIT -100598585; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1, rt0, t0 WHERE ((- (((x'954d')IS NOT(NULL))))); -- 0ms;
SELECT CAST(rt0.c0 AS REAL) COLLATE NOCASE FROM rt1;SELECT ALL ((rt0.c4) ISNULL), DENSE_RANK() OVER (), (((~ (t0.c8))) BETWEEN (((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))) AND (((((0.9817618190278738)OR(t0.c8)))OR(t0.c8)))) FROM t0 WHERE (CASE WHEN (('1982890622')<('0.9686119997090763')) THEN IFNULL(DISTINCT '60169602', x'') END);SELECT ALL 0.5874744638689166 FROM rt0 RIGHT OUTER JOIN t0 ON (+ (LIKELY(rt1.c2)));SELECT ALL ((((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END)AND(CASE rt1.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c2 END)))AND(ROUND(t0.c8, rt0.c4))), ((((rt1.c0)*(rt1.c2))) BETWEEN (((rt1.c0) IS FALSE)) AND ((NOT (rt0.c1)))), CAST(t0.c8 AS NUMERIC) COLLATE BINARY, ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))AND('FKf')))OR(rt0.c4))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c8)))) AND (((((rt1.c2)AND(rt0.c4)))OR(rt0.c3)))), CASE TOTAL(rt0.c4)  WHEN ((((rt0.c4)AND(rt0.c3)))OR(rt0.c0)) THEN ((((rt0.c2)AND(rt1.c0)))OR(t0.c8)) WHEN (~ (rt1.c1)) THEN (rt0.c4 IN ()) WHEN CASE WHEN rt0.c1 THEN '1337238209' END THEN ((rt0.c1)>(rt0.c2)) END, (((t0.c8) NOT BETWEEN (rt1.c2) AND (rt0.c1)) IN ()), rt1.c1 FROM t0 NOT INDEXED, rt0 WHERE (-1.830869201E9);SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((('l	4S''ImX' IN ()) IN (CASE WHEN 'e~e]B~' THEN 'Xm' END))) UNION ALL SELECT LAG(((((rt1.c2 COLLATE BINARY)OR(rt1.c0 COLLATE RTRIM)))AND((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))), ((rt0.c4)IS(((rt0.c1) NOTNULL))), ('2x' IN ())) OVER () FROM t0, rt1, rt0 WHERE (CASE WHEN ((('-1897138079', 0.7162687093097057, NULL)) NOT BETWEEN ((x'1c6e', NULL, 0.6909025859835546)) AND (('0.11313507205560736', '8IX瘂,kd''', 0xffffffff83efe789))) THEN 0.4541332584777189 ELSE ((-2090347565)%(NULL)) END); -- 0ms;
SELECT DISTINCT ((AVG(rt0.c1)) ISNULL), ((CASE rt0.c2  WHEN '#냝' THEN rt0.c2 ELSE rt0.c3 END)+(((rt0.c0) NOTNULL))), (NOT (((rt0.c1)<=(rt1.c2)))) FROM t0, rt1, rt0 WHERE ((((((- (NULL)))OR(CASE 0.6935354531447695  WHEN '-1397026274' THEN x'691a1734' END)))AND((NOT ('1543312858'))))); -- 1ms;
SELECT ALL MIN((rt1.c0 IN (rt1.c1, rt1.c0))) FROM rt1, t0, rt0 WHERE (((NULL COLLATE NOCASE)>=((+ (NULL))))); -- 0ms;
SELECT DISTINCT ((rt0.c2)*(((((rt1.c2)OR(rt0.c1)))AND(rt1.c1)))) FROM rt0, t0, rt1 WHERE (x''); -- 0ms;
SELECT DISTINCT CAST(((0.3774320827629474) NOT NULL) AS INTEGER) FROM rt1 WHERE ((((-7.28972477E8 IN ())) IS TRUE)); -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)) IN ()) FROM rt0, rt1, t0 LIMIT 1587286595 OFFSET -787798203; -- 0ms;
SELECT DISTINCT (- (x'')), (~ (CASE rt1.c2  WHEN rt0.c4 THEN rt0.c2 ELSE t0.c8 END)), (LIKELIHOOD(rt0.c2, 0.374441361730686) IN ()) FROM rt0 INNER JOIN rt1 ON CASE WHEN ((rt0.c1)==(t0.c8)) THEN ((((rt0.c4)OR(0.06106937530428025)))OR(rt0.c2)) END WHERE ((((0.21007584737797935 IN ())) NOT BETWEEN ((((NULL)) NOT BETWEEN ((0Xffffffffaa9ddca3)) AND ((NULL)))) AND (((('-1438195437'))>((0.7865001492418685)))))) ORDER BY ((HEX(rt1.c0)) ISNULL);SELECT DISTINCT (((((((('-227929529')OR(rt0.c3)))AND(rt0.c2)))AND(CAST(rt0.c1 AS BLOB))))OR((rt0.c0 IN (0.152644051773843)))) FROM rt1, t0, rt0 WHERE (((CAST(x'' AS TEXT)) NOTNULL)) ORDER BY ((rt0.c2 COLLATE BINARY) ISNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT (- ((~ (rt1.c0)))) FROM rt0 WHERE ((((x'' IN ()))/(((0.5305267428814647) IS TRUE))));SELECT DISTINCT CASE CAST(rt1.c2 AS BLOB)  WHEN ((rt1.c0)>(t0.c8)) THEN ((rt0.c2)<<(rt0.c3)) WHEN CAST(rt0.c1 AS BLOB) THEN ((0Xffffffffc977aca1) NOTNULL) WHEN rt0.c3 THEN ((rt1.c0) NOT NULL) END FROM rt1;SELECT DISTINCT CASE WHEN ((rt0.c4)>(rt0.c0)) THEN ((rt0.c3)=(rt1.c2)) WHEN ((((((((rt1.c2)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(0xeeac44e)) THEN ((rt1.c1) IS FALSE) WHEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c3 WHEN '' THEN rt0.c1 END THEN CASE rt0.c1  WHEN rt1.c1 THEN rt0.c1 WHEN x'' THEN rt0.c4 WHEN rt0.c1 THEN x'efca' END ELSE rt0.c2 COLLATE RTRIM END FROM rt1 WHERE (((CASE x''  WHEN '-2132331755' THEN NULL END)||(((0.25982375929412194) NOT BETWEEN (NULL) AND (0.4369767734500616))))) ORDER BY UPPER(DISTINCT rt0.c3) COLLATE NOCASE  NULLS FIRST;SELECT ALL ((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))IS NOT(COALESCE(DISTINCT rt1.c0, rt0.c1, -1.89239654E8, rt1.c2))) FROM rt1, t0;SELECT (((((((((- (rt1.c1)))AND(rt0.c4)))AND(rt0.c3)))AND(((((((((rt0.c1)OR(rt0.c4)))OR(NULL)))AND(rt0.c4)))AND(rt0.c2)))))AND(rt1.c0)) FROM t0, rt1 WHERE ((NOT (CASE WHEN 0.7516087147738298 THEN x'' WHEN NULL THEN NULL WHEN NULL THEN '' END)));SELECT DISTINCT ((((rt0.c4)-(rt1.c1))) NOT BETWEEN (((rt1.c0) ISNULL)) AND (CASE WHEN 0.3545919188658728 THEN t0.c8 END)) FROM rt0, t0, rt1 WHERE (((((-1059182348) ISNULL)) NOT BETWEEN ((('1630803705') ISNULL)) AND (((x'')|(''))))); -- 0ms;
SELECT ALL (NOT (CASE WHEN rt0.c1 THEN rt0.c3 END)) FROM rt1, t0, rt0 WHERE (CASE (((('1788484015')OR(0X6a5af80)))AND(1779159084))  WHEN 0.28424185403371216 THEN ((x'')LIKE(0.16112902178146682)) END); -- 0ms;
SELECT json_array_length(((rt0.c2) ISNULL), t0.c8 COLLATE BINARY) FROM rt1 WHERE (CASE WHEN MAX(NULL, '', '-788706573', 0xffffffffcc63d801) THEN CASE WHEN 0.5131345888554603 THEN '-971310395' ELSE 0.4017578757008943 END WHEN CAST(0.4693705807528765 AS BLOB) THEN (('') NOT BETWEEN (NULL) AND ('-154228299')) WHEN ((x'') NOTNULL) THEN ((((NULL)AND(x'')))OR(NULL)) WHEN ('!zSl' IN ()) THEN (0Xffffffffc4686aa4 IN ()) WHEN CASE WHEN 0.3059970468573663 THEN 0.7833323442888468 END THEN ABS('2x') WHEN (x'e499' IN ()) THEN ((0x5c6befca)=(NULL)) WHEN ('()' IN ()) THEN (+ (0.9599111199833404)) ELSE (('m㗻	r') NOT NULL) END);SELECT ((COUNT(x'c44c'))IS(((rt0.c4) BETWEEN (rt1.c0) AND (rt1.c2)))), ((NULL) ISNULL), (((('903364172') IS TRUE))||(((rt1.c2) ISNULL))) FROM rt0, rt1, t0; -- 0ms;
SELECT ALL ((((((((((((((rt0.c1) IS FALSE))AND(((t0.c8)IS(rt0.c3)))))OR((rt1.c2 IN ()))))AND(NULLIF(DISTINCT x'', rt0.c2))))OR(NULLIF(rt0.c3, ''))))OR(rt0.c2)))OR(COUNT(rt0.c2))) FROM t0, rt1 WHERE (((x'' COLLATE RTRIM)*(CASE WHEN NULL THEN 0.06880469839107584 WHEN ']D' THEN '1348988977' WHEN 0.16392414537419864 THEN x'50f6' WHEN NULL THEN 'Q<' WHEN NULL THEN 200790975 ELSE '''<}' END)));SELECT ALL (((((((t0.c8)) NOT BETWEEN ((rt1.c1)) AND ((t0.c8))))AND((rt1.c2 IN ()))))AND((+ (rt1.c1)))), LIKE(0Xffffffffae3e64c6, (NOT (rt0.c3))), COUNT(*) OVER (), ((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))AND(rt1.c0)))OR(rt0.c0)))<<('-914903903')), CAST(((rt0.c1)!=(rt0.c2)) AS INTEGER) FROM t0, rt1 GROUP BY ((NULL) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (CAST(rt1.c2 AS BLOB))) HAVING ((CAST(rt1.c1 AS TEXT)) BETWEEN (CASE rt0.c4  WHEN rt1.c0 THEN x'5c16' END) AND (((rt1.c1)+(rt0.c1))));SELECT DISTINCT ((((rt0.c4 IN (rt0.c4)), CASE WHEN rt0.c3 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END, -1097204416))>((rt1.c1 COLLATE NOCASE, (+ ('')), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0))))), ((0.410432355568234) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c2) IS FALSE))), ((0.19070968995338733) IS FALSE) FROM t0, rt1, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)) COLLATE NOCASE, CASE WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) THEN CASE WHEN rt0.c2 THEN 0.3326612659644036 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c1 THEN '0.8955196394517579' WHEN rt0.c4 THEN rt1.c0 WHEN '0.25982375929412194' THEN rt0.c1 END ELSE 0.7288429790080231 END, ((MIN(rt0.c4))IS NOT((rt0.c3 IN ()))) FROM rt0, rt1, t0 GROUP BY CASE (rt1.c2 IN (rt0.c0, rt1.c0))  WHEN ((rt1.c0)<=(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)) ELSE t0.c8 COLLATE RTRIM END, CASE (NOT (rt0.c3))  WHEN rt1.c1 THEN ((rt0.c2)|(rt0.c3)) END, (NOT (COALESCE(DISTINCT t0.c8, rt0.c2))) HAVING '-914903903'; -- 0ms;
SELECT DISTINCT (rt1.c2 IN ()) COLLATE RTRIM, ((CASE rt1.c0  WHEN rt1.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c1))) AND (CASE WHEN rt0.c4 THEN t0.c8 ELSE rt0.c4 END)), MAX(COUNT(((((((((rt1.c1)OR(rt0.c4)))OR(rt1.c1)))AND(t0.c8)))AND(rt1.c0)))) FROM rt0;SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c8))) IS FALSE) FROM rt0, rt1, t0 WHERE ((((('222674458')OR(0.13680384669649248))) BETWEEN (NULL COLLATE BINARY) AND (CASE x'fcbe40f4'  WHEN '832897201' THEN -1206527820 END))); -- 0ms;
SELECT ALL SUM('1266086789') FROM rt0 NOT INDEXED, t0 WHERE (-2049224036) LIMIT 1419662485; -- 0ms;
SELECT ALL CASE WHEN UNLIKELY(DISTINCT rt1.c1) THEN CAST(rt0.c1 AS REAL) WHEN ((((rt0.c3)AND(rt0.c3)))OR(0Xffffffffbb74fa80)) THEN GROUP_CONCAT(rt0.c0) WHEN CASE WHEN rt0.c3 THEN 0.0275227726477546 END THEN (rt0.c2 IN ()) END FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt1 WHERE (json_valid(',S') COLLATE RTRIM);SELECT DISTINCT ((rt1.c1 COLLATE BINARY) NOTNULL) FROM rt1, t0, rt0 WHERE (1565211600); -- 0ms;
SELECT UPPER(t0.c8) FROM rt1, rt0, t0; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT ((rt0.c3)==(rt1.c1))) FROM rt1, rt0, t0 WHERE (((((0.37762245897554414) NOT BETWEEN (1054412954) AND (x'bf06'))) BETWEEN (((NULL)-(0.24539975326698615))) AND ((+ (-1.974977168E9))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN 0.010334706071134181 WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c2 END) IS FALSE) FROM rt0;SELECT ALL (((~ (rt1.c0)))>(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)))) FROM rt0 WHERE ((((('6i*mꘔ瓓') IS TRUE)) NOT NULL));SELECT DISTINCT LOWER('1589348221') FROM rt0, t0, rt1 WHERE ((+ ((- ('-2090347565'))))) LIMIT 2135960234 OFFSET -968095922; -- 0ms;
SELECT DISTINCT ((((NOT (rt0.c3))))=((CASE WHEN rt1.c1 THEN '-116078184' END))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((TRIM(rt0.c3, rt0.c1)) IS TRUE) FROM rt1 NOT INDEXED, t0, rt0; -- 0ms;
SELECT (NOT ((+ (rt1.c2)))), LAG((((((((((+ (rt0.c2)))OR((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))))AND(((x'') BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c2)>>(rt0.c4)))))AND(rt0.c3)), (NOT (rt0.c1)), CASE WHEN ((x'517b') IS TRUE) THEN ((rt0.c4)<>(rt0.c1)) WHEN ((rt0.c4)%(rt0.c0)) THEN CAST(rt0.c1 AS REAL) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c4)<<(t0.c8)) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c3) NOTNULL) WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c1) NOTNULL) ELSE CAST(t0.c8 AS TEXT) END) OVER (), ((((rt0.c4))==((rt0.c2))) IN (((rt0.c3)OR(t0.c8)))), (((rt0.c0 COLLATE RTRIM))<=((CASE WHEN t0.c8 THEN rt0.c4 END))), COUNT(*), ((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt1.c2)))AND((NOT (rt1.c0)))))OR(SUM(NULL))), SUM(CASE WHEN rt0.c4 THEN rt0.c1 END) OVER () FROM rt0, t0;SELECT json_array(AVG(rt0.c0), ((((((((rt1.c1)AND(rt0.c2)))OR(t0.c8)))OR(rt0.c1)))AND(t0.c8))), rt0.c3, NULL FROM rt0, rt1, t0 WHERE ((((NULL)) NOT BETWEEN (((('y윕U!	')IS NOT(1589348221)))) AND (((~ (699401880)))))); -- 0ms;
SELECT (~ (((rt1.c0)+('g+F\ng')))), CASE WHEN t0.c8 THEN rt0.c2 ELSE ((rt0.c2)>=(rt1.c2)) END, CAST(((((rt1.c0)OR('1750915710')))OR(rt1.c0)) AS REAL) FROM rt0;SELECT CAST((((rt0.c1, rt0.c0, NULL)) BETWEEN ((0.8524480999680545, rt1.c1, -1359132949)) AND ((rt1.c2, rt1.c2, t0.c8))) AS INTEGER) FROM rt1, rt0 WHERE (((((0.8022827304785137) IS TRUE)) IS TRUE));SELECT ALL CASE rt0.c2 COLLATE RTRIM  WHEN -1.319398312E9 THEN SUM(rt0.c3) END FROM rt1, rt0; -- 0ms;
SELECT CASE (((rt0.c1, rt0.c1, rt1.c1, rt0.c1, rt1.c1)) NOT BETWEEN ((rt0.c3, rt0.c4, rt1.c1, rt1.c0, rt0.c4)) AND ((rt1.c2, rt0.c2, rt1.c1, rt1.c2, rt0.c1)))  WHEN (rt0.c3 IN ()) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c8 END ELSE rt0.c4 COLLATE BINARY END FROM rt0, t0 GROUP BY '-728972477', NULL, rt0.c2 COLLATE NOCASE COLLATE RTRIM;SELECT ALL SQLITE_COMPILEOPTION_GET(rt1.c0) FROM rt1 WHERE (((((0.39200599166883787)*('fb')))+(CAST(-5.3803498E7 AS INTEGER)))); -- 0ms;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((x'dca3' IN ()))OR(((NULL) NOT BETWEEN ('-35708238') AND (NULL)))))OR((('') BETWEEN ('!''kPc') AND (-1062335887))))); -- 0ms;
SELECT ALL CAST(((('')) BETWEEN ((rt1.c2)) AND ((rt0.c4))) AS TEXT), (('-139200746')/((((rt1.c1, rt0.c0, rt0.c4, rt1.c2, rt1.c0, rt1.c1, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c1, rt1.c1, 9.2632834E8, rt0.c1, rt1.c2, rt1.c2)) AND ((rt0.c4, rt1.c1, rt1.c0, rt1.c2, rt0.c4, rt0.c1, rt0.c1))))), json(CAST(0.3458605342517652 AS BLOB)) FROM rt1, t0, rt0 WHERE (UNLIKELY(DISTINCT TYPEOF(DISTINCT NULL))) ORDER BY ((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c0)))OR((+ ('cq''p^jyU)')))))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c4 THEN '#1' ELSE rt1.c0 END))  NULLS FIRST, (('') IS TRUE); -- 0ms;
SELECT DISTINCT NULL FROM rt1; -- 0ms;
SELECT ((((t0.c8)|(x''))) BETWEEN (((rt0.c1)==(rt1.c0))) AND (((((((((rt0.c4)AND(t0.c8)))AND(t0.c8)))OR(rt0.c3)))OR(rt1.c0)))) FROM t0;SELECT ALL ((rt0.c1) NOT BETWEEN (((rt0.c4)*(rt0.c3))) AND (((((rt1.c1)AND(rt0.c2)))OR(t0.c8)))), ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c0)))))OR(CAST(rt0.c0 AS REAL))), rt0.c4 FROM rt0 WHERE ((- (CASE 'L핀_I'  WHEN 0Xfffffffff408f39d THEN NULL END)));SELECT DISTINCT NTH_VALUE((+ (rt0.c3)), (((~ (rt0.c1))) NOT BETWEEN (0.6482901269148393) AND ((rt0.c4 IN ())))) OVER () FROM rt0 WHERE (IFNULL(DISTINCT ((((((((NULL)OR(0.5079477335089582)))OR(0.7787086386881841)))OR(0.6120785075041523)))OR(x'7edc')), '1834201058' COLLATE RTRIM)); -- 1ms;
SELECT DISTINCT AVG(((rt0.c2)IS NOT(rt1.c1)) COLLATE RTRIM) FROM t0, rt1, rt0 WHERE (((NULL) BETWEEN (NULL) AND (0.6255531596698088)) COLLATE BINARY); -- 0ms;
SELECT ALL ((((rt1.c0)<(rt0.c0))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (rt0.c4)) FROM rt1, rt0 WHERE (((GLOB('-1084009972', x''))<=(((((NULL)OR(x'02f3')))OR(0.8332890390065836))))); -- 0ms;
SELECT ((((((((0X38adc22f)OR(CASE rt1.c2  WHEN rt0.c4 THEN rt0.c0 END)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c2) NOT NULL))) FROM rt0, t0 WHERE ((((((-353413298))=((-4.80856088E8)))) NOTNULL));SELECT AVG((- (rt0.c3))) OVER () FROM rt0, t0, rt1 WHERE ((NOT ('2111017412'))); -- 0ms;
SELECT NTILE(TYPEOF(DISTINCT t0.c8 COLLATE NOCASE)) OVER ( PARTITION BY (+ (((rt0.c3)-(0.1707365822238871)))), ((x'')+(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)))), CASE ((((rt1.c1)AND(rt0.c2)))AND(rt1.c2))  WHEN CAST(rt1.c2 AS INTEGER) THEN ((t0.c8)OR(rt1.c2)) WHEN 0.09262394453517797 THEN ((rt1.c2)>>(t0.c8)) WHEN CAST(rt0.c4 AS TEXT) THEN ((rt0.c2) IS TRUE) END, ((rt1.c1) NOT NULL) COLLATE RTRIM COLLATE BINARY) FROM rt1, t0 LIMIT 1631011252;SELECT DISTINCT CASE ((((((((rt1.c1)OR(rt0.c1)))AND(rt1.c1)))AND(t0.c8)))AND(t0.c8))  WHEN HEX(rt1.c0) THEN ((((rt0.c1)OR(t0.c8)))AND(t0.c8)) END FROM t0, rt0, rt1 WHERE (CASE CAST(0.6963119173217309 AS NUMERIC)  WHEN '1700762311' THEN x'' END) GROUP BY '', (((rt0.c4, rt1.c1, rt1.c2)) BETWEEN ((rt0.c1 COLLATE RTRIM, rt1.c1 COLLATE NOCASE, rt1.c2)) AND ((rt0.c3, ((rt0.c1)/(rt0.c1)), (NOT (rt1.c1))))), ((CASE WHEN rt1.c2 THEN x'e1b2' WHEN rt0.c0 THEN rt0.c3 WHEN 0.6754251707614436 THEN rt0.c4 END) NOTNULL) HAVING CASE WHEN rt0.c3 COLLATE BINARY THEN GROUP_CONCAT(rt0.c0) ELSE rt0.c4 COLLATE BINARY END; -- 0ms;
SELECT (((0.4693705807528765)) BETWEEN ((x'7455')) AND ((t0.c8 COLLATE RTRIM))) FROM rt1, t0, rt0 WHERE (CAST(0Xffffffffe356b7e8 AS INTEGER)); -- 0ms;
SELECT ALL (((rt0.c3))>=((rt0.c0))) COLLATE NOCASE, SQLITE_COMPILEOPTION_GET(NULLIF(DISTINCT rt1.c2, rt0.c4)), LIKELY(x'') FROM rt1 LIMIT 338051319 OFFSET 1433104663;SELECT ALL t0.c8, (((rt1.c1 IN ())) NOTNULL), NTILE(CASE WHEN ((rt0.c1)|(rt0.c4)) THEN ((0.13240657373095754) IS TRUE) ELSE ((rt0.c3) IS FALSE) END) OVER ( PARTITION BY (((rt0.c2 IN (rt1.c1))) BETWEEN (((rt1.c1) IS FALSE)) AND ((((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))), ((((rt0.c3)>(rt1.c2))) IS FALSE) GROUPS  UNBOUNDED PRECEDING) FROM t0, rt0;SELECT DISTINCT ((0x75a36bb6) NOT BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE NOCASE FROM rt0;SELECT DISTINCT LAST_VALUE(t0.c8) OVER () FROM t0 WHERE ((((((NOT (x'')))OR(NULL COLLATE BINARY)))OR((NULL IN ())))); -- 0ms;
SELECT ALL ((((rt0.c0)AND(0Xfffffffff0602868)))AND(0.783247268613238)) COLLATE BINARY FROM rt0 WHERE (((((((x'')AND('1963049665')))AND(NULL)))||((((x'92f35280', 0.8332890390065836, x'')) BETWEEN ((-2.090347565E9, 0.4369767734500616, '')) AND ((0.8159228136707721, '-1111260673', 0.30430573673260375)))))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN t0.c8 END  WHEN rt0.c3 COLLATE NOCASE THEN ((rt1.c0)>=(rt1.c1)) ELSE (rt0.c3 IN ()) END DESC;SELECT ((LTRIM(rt1.c0)) ISNULL), ((CASE WHEN '1077829337' THEN rt0.c0 END) BETWEEN (((('-227929529'))>=((t0.c8)))) AND (((t0.c8)OR(rt0.c2)))), CAST(t0.c8 AS TEXT) COLLATE BINARY FROM rt1, rt0, t0; -- 0ms;
SELECT (~ (GROUP_CONCAT(rt0.c3))) FROM rt0, t0 WHERE (1811456245); -- 0ms;
SELECT DISTINCT rt0.c3, '9a', LEAD(((((rt0.c2)AND(((t0.c8) BETWEEN (t0.c8) AND (rt0.c0)))))AND(CASE rt1.c2  WHEN rt0.c1 THEN rt0.c4 ELSE 0.47829198458140665 END)), (((((- (rt0.c1)))OR(rt0.c4)))OR(rt0.c1 COLLATE NOCASE)), (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)) IN (((rt0.c3) ISNULL)))) OVER () FROM t0, rt0, rt1 LIMIT 1281631627 OFFSET -53803498; -- 0ms;
SELECT 0.0539812430257991 FROM rt1, t0 WHERE ((((('53957697')OR(((x'') NOT BETWEEN (x'') AND (-53803498)))))OR((('365112888')<<(0.009054694370932315))))); -- 0ms;
SELECT ALL CASE (x'' IN (rt0.c0))  WHEN (rt0.c3 IN ()) THEN (~ (t0.c8)) END FROM t0, rt0, rt1; -- 0ms;
SELECT MIN(((rt0.c2)GLOB(NULL))), ((((t0.c8)AND(rt0.c3))) NOT NULL), 0.03534515242247693 FROM rt0, t0 WHERE ((((((NULL))>(('-69793967'))))+(((x'') NOT BETWEEN ('-2090347565') AND (0.4032603456472854))))); -- 0ms;
SELECT (- ((- (rt0.c0)))) FROM t0 WHERE ((~ (CASE 0.6536133260563972  WHEN 0X5ad18b46 THEN 0.0786385349834835 END))) GROUP BY x'' ORDER BY ((((rt0.c1) IS FALSE))&(CASE WHEN x'1608e275' THEN rt1.c1 ELSE t0.c8 END)), rt0.c1;SELECT DISTINCT ((rt0.c4 COLLATE RTRIM) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (CAST(rt1.c0 AS NUMERIC))), CAST(rt0.c4 AS TEXT), CAST(((((((((rt1.c1)AND(t0.c8)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c4)) AS INTEGER) FROM rt1, rt0 WHERE ((('-2098789514' COLLATE NOCASE) IS TRUE)) ORDER BY QUOTE((rt1.c1 IN ()));SELECT DISTINCT ((rt1.c1) NOT BETWEEN (json_object(rt0.c2, rt0.c4, rt1.c1, rt0.c0)) AND ((rt0.c4 IN ()))) FROM t0 WHERE (((((('0.7865001492418685') ISNULL), -592794158, (NULL IN ())))>=(((('FKf')==(NULL)), CASE WHEN NULL THEN '-1212989071' END, ('9a' IN ())))));SELECT DISTINCT (((rt0.c2)) BETWEEN ((NULL)) AND (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((t0.c8)))))) FROM rt1 WHERE ((CASE NULL  WHEN x'16c1' THEN NULL ELSE '1873793278' END IN ())) GROUP BY ((CAST(rt1.c1 AS REAL))|((rt0.c1 IN (NULL)))) HAVING NULL;SELECT (NOT ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt1.c1))))) FROM rt1, t0, rt0 WHERE (CAST(-1349355997 AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT COUNT(*), ((CAST(rt0.c1 AS REAL)) NOT BETWEEN (rt1.c2) AND (COUNT(rt1.c0))), rt1.c0 COLLATE BINARY FROM rt0, t0, rt1 WHERE (((CAST('-1059182348' AS TEXT))IS(((((0x12aef2fc)AND(1267795310)))AND(NULL))))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0, t0, rt1 WHERE ('1619014604') GROUP BY (((CASE rt1.c1  WHEN 0.17093230221125633 THEN rt1.c2 ELSE rt0.c2 END, (((t0.c8))==((rt0.c3))), ((t0.c8) BETWEEN (rt0.c3) AND (rt0.c1))))!=((UPPER(DISTINCT rt0.c2), ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-53803498')), CASE rt1.c2  WHEN rt0.c2 THEN rt1.c2 END))) HAVING CASE TOTAL(rt0.c1)  WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (t0.c8)) END; -- 0ms;
SELECT COALESCE(rt1.c0 COLLATE RTRIM, (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((t0.c8))), MIN(rt0.c0), t0.c8) FROM rt0, t0, rt1; -- 0ms;
SELECT ALL ((((CAST(rt0.c0 AS INTEGER))AND('-227929529')))AND(MAX(rt0.c1))) FROM rt1, t0 WHERE ((((('') BETWEEN ('') AND (0.3326612659644036)))IS NOT((((NULL, 573543495, 0.6284500025213928))!=((x'', NULL, NULL))))));SELECT rt0.c2 FROM t0, rt1, rt0 WHERE (((((SUBSTR(x'', x'99dbc88e'))AND((x'8276' IN ()))))AND(((('')) NOT BETWEEN ((NULL)) AND ((x'')))))) ORDER BY (CASE rt0.c4  WHEN t0.c8 THEN rt0.c3 WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 END IN ())  NULLS FIRST LIMIT 1682832708; -- 0ms;
SELECT ALL LAG((((rt0.c4)IS(0Xffffffffee49f7ff)) IN ((((rt0.c4))>((rt0.c0))))), CASE WHEN rt0.c0 THEN ((rt0.c1)+(rt1.c0)) END, (rt0.c2 COLLATE BINARY IN (((rt0.c3)-(rt0.c2))))) OVER () FROM rt0, rt1; -- 0ms;
SELECT ALL AVG(MAX(((rt1.c0)||(rt0.c4)))) FROM t0, rt1, rt0 WHERE (CASE WHEN (NOT ('-860381170')) THEN CAST('0.3428883527780493' AS TEXT) END);SELECT DISTINCT ((((t0.c8)||(rt0.c0))) IS TRUE), ((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c0)) COLLATE NOCASE, CAST(((rt0.c1) NOT NULL) AS NUMERIC) FROM t0, rt0 WHERE (UPPER(DISTINCT NULL));SELECT SUM(((t0.c8) BETWEEN (rt1.c1) AND (t0.c8))), (((((t0.c8)) NOT BETWEEN ((rt0.c2)) AND ((x''))))/((((rt0.c1))>((rt0.c1))))), ((GROUP_CONCAT(rt1.c1))>>(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c1)))) FROM rt1, rt0 FULL OUTER JOIN t0 ON ((CASE WHEN t0.c8 THEN rt0.c2 END) IS FALSE) WHERE ((((((((((((((((2.91258793E8)OR(NULL)))AND(x'4169')))OR(x'8a6a')))OR(0.06701702900782125)))OR(0.3205798734785591)))AND(NULL))))=((((NULL)>=(x'f703b963')))))); -- 0ms;
SELECT DISTINCT CASE WHEN CHAR(rt0.c3, rt0.c4, rt1.c1) THEN CASE WHEN rt0.c0 THEN '' WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 END WHEN (((rt0.c1))<=((rt0.c4))) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)) WHEN CASE WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c2 END THEN rt0.c3 WHEN CAST(rt0.c3 AS TEXT) THEN CASE t0.c8  WHEN rt1.c2 THEN 0.7885688192290846 END WHEN (((rt0.c3, rt0.c0, x'6c26', rt1.c0, rt0.c0))>=((NULL, '-1722108220', t0.c8, t0.c8, rt1.c0))) THEN (NOT (rt0.c2)) ELSE rt0.c2 END FROM rt1 WHERE ((((0x4312bb8c)) BETWEEN ((x'')) AND ((0.20820364414393144))) COLLATE RTRIM);SELECT ROW_NUMBER() OVER ( PARTITION BY (CAST(rt1.c2 AS TEXT) IN ()), rt1.c1) FROM rt1, rt0, t0 WHERE ((((x'f9fc', '2144282369', ']D'))<=((0.16112902178146682, '-1620594008', 0xffffffffcd6c5d7f))) COLLATE NOCASE); -- 0ms;
SELECT ALL rt1.c1 COLLATE NOCASE FROM rt0, rt1 WHERE ((~ ('p!cF*mCI*'))); -- 0ms;
SELECT ALL (((((rt1.c0, rt1.c1, rt0.c0))=((rt1.c1, t0.c8, rt0.c2)))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c2 END) AND (((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)))) FROM rt0, t0, rt1; -- 0ms;
SELECT ALL ((x'1271bdf2')IS NOT(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) FROM rt1, rt0 WHERE (((('-1902398925')) NOT BETWEEN (((('-1319398312') NOT BETWEEN ('699401880') AND (NULL)))) AND ((((x'a4865e93') ISNULL))))); -- 0ms;
SELECT DISTINCT NULL FROM rt0, t0 WHERE (((('-51627938' IN ()))*((+ ('430488980'))))) LIMIT -981339492; -- 0ms;
SELECT CAST(CAST(rt0.c3 AS REAL) AS NUMERIC) FROM rt0, rt1 GROUP BY NULLIF(DISTINCT rt0.c3, rt1.c1) COLLATE BINARY HAVING ((((t0.c8) IS FALSE)) BETWEEN (((rt1.c1)||(rt0.c1))) AND (rt0.c4));SELECT ALL ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)))||(CASE rt0.c0  WHEN t0.c8 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c0 WHEN t0.c8 THEN rt0.c3 END)) FROM t0, rt1 WHERE ('BE');SELECT DISTINCT (((((((rt0.c2, rt1.c0, rt0.c2))>((rt1.c1, NULL, rt0.c2))))OR(CAST(t0.c8 AS INTEGER))))OR((- (rt1.c2)))) FROM rt0 WHERE ((((NULL IN ()))>=(CASE WHEN 0.73917579178865 THEN NULL ELSE 'M' END))) LIMIT -65660460 OFFSET 365112888;SELECT CAST(SQLITE_SOURCE_ID() AS NUMERIC), CAST((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) AS REAL), -3.04475674E8 FROM t0, rt1;SELECT DISTINCT ((((rt0.c0) ISNULL))|(rt0.c4 COLLATE NOCASE)) FROM t0, rt0 ORDER BY NULL ASC  NULLS FIRST; -- 1ms;
SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)))AND(x'76e1')))AND((NOT (rt0.c1)))), (((x'ff92'))<=((((rt1.c0)<<(rt0.c1))))), ((rt0.c3)/(((t0.c8) NOT NULL))) FROM rt0;SELECT DISTINCT ((COUNT(*)) NOTNULL) FROM t0, rt1 WHERE ('-1464037441') ORDER BY t0.c8  NULLS LAST, '6FK'; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER) FROM rt0, rt1 GROUP BY ((rt0.c0 COLLATE NOCASE) BETWEEN (rt0.c1) AND (CAST(rt1.c0 AS REAL))), (NOT ((rt1.c2 IN ()))), CAST(UNLIKELY(t0.c8) AS BLOB);SELECT DISTINCT 'T-a{e鄦*D' FROM rt0 WHERE (((((((((((x'9a3b')==(x'49ce')))OR(('E~E]B~' IN ()))))OR(((NULL)IS NOT(NULL)))))AND(((x'3713')>(0.6909025859835546)))))AND(((((0.8462478314688628)OR('-1705397870')))AND(x''))))); -- 0ms;
SELECT (((x'') NOT NULL) IN ()), (((((((((rt0.c1)AND(rt0.c4)))AND(rt1.c1)))OR(rt1.c2)))AND(rt0.c3)) IN ()), CAST((rt0.c0 IN ()) AS NUMERIC) FROM t0 WHERE (((CASE '{}'  WHEN 0x1d569e60 THEN x'' ELSE NULL END) NOT BETWEEN (((((x'')OR('lCk')))OR(NULL))) AND ((((0.5560565848208229)) BETWEEN ((0.6155017770847228)) AND ((1312616398)))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((rt0.c3)||(CAST(rt0.c3 AS INTEGER)))) OVER (), ((((rt0.c0) NOTNULL))/(((rt0.c0) BETWEEN (0.12698297270961267) AND (rt0.c2)))), (((((((((t0.c8)OR(t0.c8)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)) IN ()), TRIM(DISTINCT (((rt0.c4))!=((rt0.c1)))), x'' FROM rt1, rt0, t0; -- 0ms;
SELECT DISTINCT CASE rt0.c1  WHEN rt0.c3 THEN rt1.c2 ELSE rt1.c1 END COLLATE NOCASE FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c2 IN (rt0.c1))) BETWEEN ((rt1.c1 IN (rt1.c0, rt0.c3))) AND (rt0.c0)) FROM rt1, t0 WHERE (((CASE WHEN 0.8930187501756276 THEN ',냝Z' WHEN '430488980' THEN '<S*rN' WHEN '1046307342' THEN '_''A?' END) NOT BETWEEN (CAST('(S' AS REAL)) AND (CAST('1409849611' AS TEXT))));SELECT ALL NULLIF(DISTINCT ((rt0.c4) NOT NULL), ((t0.c8)LIKE(rt0.c0))) FROM t0, rt1;SELECT ALL SUM(LTRIM(rt0.c2, '')) FILTER(WHERE (((((- (rt1.c2)))AND('')))AND((- (rt0.c2))))) OVER () FROM rt0, t0;SELECT DISTINCT rt0.c2, ((CAST(rt1.c1 AS NUMERIC)) ISNULL), ((rt0.c4) BETWEEN (HEX(rt0.c1)) AND (((rt1.c0) IS TRUE))) FROM rt1 WHERE ((((((((0.43528576617309966))!=(('\'))))AND(SQLITE_COMPILEOPTION_USED(x''))))OR(((NULL)>=(-68512172))))) GROUP BY (((t0.c8) IS TRUE) IN ((((-8.3202344E8))>=((rt1.c2))))) HAVING rt0.c3;SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((((rt1.c1) IS TRUE))) AND (((+ (t0.c8))))) FROM rt0;SELECT ALL CAST((((rt1.c0, t0.c8, rt0.c0)) NOT BETWEEN ((rt0.c0, rt1.c1, rt0.c4)) AND ((rt1.c0, rt0.c3, t0.c8))) AS REAL), COUNT(*), CASE (((t0.c8, rt0.c3, rt0.c3)) BETWEEN ((rt1.c1, rt0.c2, t0.c8)) AND ((rt1.c0, x'd9f9', rt0.c4)))  WHEN CAST(t0.c8 AS BLOB) THEN (rt1.c2 IN (rt1.c2)) ELSE (((rt0.c4))>=((rt0.c1))) END FROM t0, rt0, rt1 WHERE ((((('539240869') NOT BETWEEN (NULL) AND (0.8723894511956539))) IS FALSE)) LIMIT -1722108220; -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c0 AS INTEGER)) FROM t0, rt0 WHERE (((0.05713543412445121 IN ()) IN ())); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT CASE WHEN rt1.c2 THEN rt0.c3 END), CAST(LOWER(DISTINCT rt1.c0) AS TEXT), ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt1.c1))) NOT NULL), (((rt0.c0)/(rt1.c0)) IN ()), COUNT(CASE WHEN rt1.c1 THEN '-1534912902' WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt1.c2 WHEN rt1.c0 THEN t0.c8 ELSE rt0.c0 END) OVER () FROM rt1, rt0;SELECT (STRFTIME(rt0.c0, -647470832, rt0.c4) IN (CAST(t0.c8 AS INTEGER), CAST(rt0.c1 AS INTEGER))) FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c3 THEN t0.c8 WHEN rt0.c4 THEN 0.9776553304995512 END AS TEXT), ((((((((((((((rt1.c1)OR(x'1688')))AND(rt1.c0)))OR(rt1.c0)))OR(rt0.c1)))AND(rt1.c0)))AND(rt0.c0))) NOTNULL), COUNT(*) OVER () FROM rt0, t0;SELECT DISTINCT CAST(((x'')+(rt0.c2)) AS NUMERIC) FROM rt1, rt0; -- 0ms;
SELECT (NOT (rt0.c2)) COLLATE RTRIM, (rt1.c1 IN ()) COLLATE BINARY, rt1.c2 FROM rt1, rt0; -- 0ms;
SELECT (+ ((t0.c8 IN ()))) FROM rt1, t0; -- 0ms;
SELECT ALL ((rt1.c1)GLOB(rt1.c0)), (((rt1.c1)GLOB(0.7822264511479345)) IN (rt0.c4)), rt1.c1 FROM t0, rt0 ORDER BY (((rt0.c2)GLOB(2.119723445E9)) IN ())  NULLS FIRST;SELECT DISTINCT ((((rt0.c2) IS TRUE)) NOTNULL) FROM rt1, rt0, t0 WHERE (((LIKELY(DISTINCT '}')) NOT NULL)); -- 0ms;
SELECT ALL (NOT (rt0.c3)) FROM rt0, t0 WHERE (((((0Xffffffffa43e9b5d) NOTNULL))&((+ (0.7605256726585131))))); -- 0ms;
SELECT ALL UNLIKELY(DISTINCT (((rt0.c3))>((rt1.c2)))), ROW_NUMBER() OVER ( ORDER BY (((('2062400066'))>=((rt0.c0))) IN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)), (('0.1707365822238871') NOT BETWEEN (rt0.c2) AND (rt1.c0)))) DESC, ((((t0.c8)||(rt0.c0))) NOTNULL)  NULLS LAST), (CASE rt0.c3  WHEN rt1.c1 THEN rt0.c3 END IN ()) FROM rt1 WHERE (((((((x'')OR(x'')))AND(CAST(x'd696' AS REAL))))AND(ROUND(0.06106937530428025, NULL))));SELECT DISTINCT rt1.c2, rt0.c4, AVG(((((2.22674458E8)AND(rt1.c2)))OR(rt0.c1))) OVER () FROM rt0, t0;SELECT ALL TOTAL((+ (x'64a3'))) OVER (), ((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL))), COUNT(*), MAX(t0.c8)))>=((((rt0.c4)>>(0.6095985650679663)), ('' IN ()), ((rt0.c0) NOTNULL)))), 'pn鉶qzm' FROM rt0, rt1, t0; -- 0ms;
SELECT ALL (((t0.c8 IN ()))=((((rt1.c0))>((x'9049'))))) FROM rt0;SELECT ((((rt1.c1)<<(rt0.c4))) NOT NULL) FROM rt1;SELECT DISTINCT (~ ((('-1722108220') ISNULL))), LAG(ABS((+ (t0.c8))), (((((((((rt0.c1 IN ()))AND(((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c4)))))AND(rt0.c4)))AND(((rt0.c1)>=(rt0.c1)))))AND(CAST(t0.c8 AS BLOB))), ((0Xffffffffdc4fb897)||(UPPER(rt0.c1)))) OVER (), rtreenode(((x'') BETWEEN (rt1.c2) AND (rt1.c0)), CASE NULL  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c2 END), (((rt0.c4)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt1.c1) AND (rt0.c2)))) AND ((json_extract(rt0.c3, rt0.c1)))), LAG(1.05723377E9, ((~ (rt0.c0)) IN ()), ((((((((rt0.c0)AND(((rt0.c2)||(rt0.c4)))))OR(((rt0.c0)||(t0.c8)))))AND(CAST(t0.c8 AS NUMERIC))))AND(((rt0.c0) ISNULL)))) OVER () FROM rt0, t0;SELECT ALL ((MIN(rt0.c0, '-2146032958'))IS NOT(x'')), (~ (AVG(rt0.c0))), ((t0.c8) NOT BETWEEN (((rt0.c3)LIKE(x''))) AND ((((t0.c8, t0.c8, rt0.c3))>=((rt0.c0, rt0.c2, '-2001919224'))))), LAG('U9', NULL, (((((rt0.c2)OR(1.631011252E9)))OR(rt1.c0)) IN ())) OVER (), ((UPPER(DISTINCT rt1.c1))<<((NULL IN ()))) FROM rt0, rt1, t0 GROUP BY ((NULLIF(DISTINCT rt1.c0, 0.22659302387621305)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0))) AND (CAST(rt0.c4 AS INTEGER))); -- 0ms;
SELECT DISTINCT (('' COLLATE RTRIM) NOT NULL), NULL, ((CASE WHEN '935581722' THEN rt0.c2 ELSE rt0.c0 END)>>(NULLIF('-100598585', rt0.c1))) FROM rt1, t0, rt0 WHERE ((- (0.7954784962489456 COLLATE RTRIM))) GROUP BY ((((((((((rt0.c1)IS NOT(rt0.c4)))AND(rt1.c1 COLLATE RTRIM)))AND(CASE '-1948886946'  WHEN t0.c8 THEN rt0.c0 ELSE rt0.c3 END)))OR((+ ('F4')))))AND(CAST(rt0.c3 AS NUMERIC))) HAVING load_extension(CASE WHEN rt1.c1 THEN t0.c8 END); -- 0ms;
SELECT DISTINCT ((((((rt0.c4) NOT BETWEEN (x'') AND (rt1.c1)))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt1.c1)))))OR(CASE rt0.c4  WHEN rt1.c1 THEN rt0.c3 ELSE -520627337 END)) FROM rt1 RIGHT OUTER JOIN t0 ON ((((((rt0.c3)AND(rt0.c3)))AND(rt1.c0))) BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2))) AND (((rt0.c2)%(t0.c8)))) WHERE ((('1950907098' COLLATE BINARY) IS FALSE));SELECT (CAST(rt0.c0 AS BLOB) IN ()) FROM rt1, rt0, t0 NOT INDEXED; -- 1ms;
SELECT json_array_length(MAX(t0.c8)) FROM rt0 WHERE ((~ (x'')) COLLATE RTRIM);SELECT COUNT(rt1.c2), SQLITE_VERSION(), ((NULL) NOT NULL) FROM rt0 WHERE (x'9848') GROUP BY (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((0x7501c2c1))) COLLATE BINARY COLLATE BINARY, (CASE rt0.c1  WHEN x'' THEN rt0.c2 ELSE rt1.c1 END IN (((rt0.c1)<=(rt0.c1)), ((rt0.c4)/(rt0.c2)))), ((CAST(t0.c8 AS INTEGER))GLOB(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))));SELECT DISTINCT CAST(x'ffd9' AS REAL) COLLATE NOCASE FROM t0, rt1, rt0 WHERE (CASE WHEN (0X4a33ef3b IN ()) THEN CASE WHEN 1226049131 THEN NULL WHEN 0xffffffffd445d7c7 THEN x'' WHEN -2.49423465E8 THEN '1672220247' WHEN NULL THEN 0.829078198090744 WHEN 0.5392993708266703 THEN 0x2867e5f0 ELSE x'' END WHEN (- (0.3428883527780493)) THEN IFNULL(0.5113257556425749, x'') WHEN CASE WHEN NULL THEN NULL WHEN -1326083513 THEN '' WHEN x'93d5' THEN x'' END THEN (- (0.4901159821366068)) END); -- 0ms;
SELECT ((((rt0.c4)*(rt0.c1))) BETWEEN ((((0.6676462849858912)) NOT BETWEEN ((rt1.c1)) AND (('18643105')))) AND ((~ (rt0.c4)))) FROM rt0 WHERE ((((NULL)OR(-1251014002)) IN ('D')));SELECT DISTINCT rt1.c0, SUM(UPPER(DISTINCT rt0.c2)) OVER (), COUNT(rt1.c1 COLLATE BINARY) OVER ( PARTITION BY (('媒#')%(CAST('53957697' AS INTEGER))), (((((((((NULL)OR(rt0.c3)))AND(rt0.c3)))OR(rt1.c0)))AND(rt1.c2)) IN ())) FROM t0 GROUP BY LIKELY(DISTINCT ((((((((rt0.c4)AND(rt0.c3)))OR(t0.c8)))OR(t0.c8)))OR(rt0.c2))) HAVING GROUP_CONCAT(((((rt0.c2)OR(rt1.c0)))OR(rt1.c1)));SELECT DISTINCT (((rt1.c1, rt1.c1, rt0.c0)) BETWEEN ((TYPEOF(DISTINCT rt1.c1), TRIM(rt1.c2, rt0.c2), CAST(rt1.c1 AS INTEGER))) AND (((((0x10cb90f3)) BETWEEN ((t0.c8)) AND ((rt1.c1))), ((rt1.c1) NOT NULL), ((t0.c8)AND(rt0.c1))))), (NOT (CASE t0.c8  WHEN rt1.c0 THEN rt0.c4 ELSE rt1.c1 END)), (((rt1.c0)) BETWEEN ((COUNT(rt1.c0))) AND ((rt0.c2 COLLATE BINARY))) FROM rt1;SELECT DISTINCT (((((((((~ (rt0.c1)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)))))AND((rt0.c4 IN ()))))AND(COUNT(*))))OR((('-1934915533')>=(t0.c8)))) FROM t0; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) COLLATE NOCASE FROM t0, rt0 LIMIT -2121039766 OFFSET 388982428; -- 0ms;
SELECT DISTINCT LEAD(UPPER(((rt1.c0)GLOB(rt0.c1))), CASE TYPEOF(DISTINCT rt0.c4)  WHEN CASE rt0.c4  WHEN t0.c8 THEN NULL ELSE rt0.c4 END THEN rt1.c2 END, rt0.c4) OVER () FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT x'735d' FROM rt0, t0, rt1 WHERE ((((((x'f020'))=(('1489848093')))) IS FALSE)); -- 0ms;
SELECT DISTINCT TOTAL((((rt1.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c0, rt1.c2)) AND ((rt0.c1, rt0.c3, rt0.c4)))) COLLATE NOCASE FROM t0, rt1, rt0; -- 0ms;
SELECT ((rt0.c2)&(CAST(rt0.c2 AS NUMERIC))) FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT (CAST(rt1.c1 AS TEXT) IN ()), ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (t0.c8)))OR(rt0.c3)))AND(rt0.c4)), rt0.c1 FROM rt0, rt1, t0 WHERE (((CASE WHEN '-480856088' THEN '1405633651' END) IS FALSE)); -- 0ms;
SELECT ALL CASE rt0.c2  WHEN CAST(rt1.c1 AS BLOB) THEN (NOT (rt0.c0)) WHEN (- (rt0.c0)) THEN ((((((((rt1.c2)OR(rt0.c3)))OR('-971310395')))OR(rt0.c0)))AND(rt1.c0)) WHEN (NOT (rt1.c2)) THEN ((rt0.c2)>=(rt0.c0)) END, FIRST_VALUE((NOT ((rt1.c2 IN ())))) OVER (), ((rt0.c2 COLLATE NOCASE)+(((rt1.c1)>>(rt1.c1)))) FROM rt1 WHERE (((((HEX(DISTINCT x''))OR(CAST(NULL AS BLOB))))AND((x'5d3d' IN ()))));SELECT COALESCE(DISTINCT ((t0.c8) BETWEEN (rt0.c3) AND (NULL)), ((rt0.c4)<=(rt1.c2))), SUM(((rt0.c2) NOTNULL)), ((((rt1.c2)*(rt0.c1))) BETWEEN (((rt1.c1)%(NULL))) AND (rt0.c3 COLLATE RTRIM)) FROM rt0, rt1, t0 WHERE ((('(h' COLLATE NOCASE) NOT BETWEEN ((('-1985029915')%(NULL))) AND (((x'') BETWEEN ('0.8955196394517579') AND ('950911535'))))) GROUP BY CAST((rt1.c2 IN ()) AS REAL) ORDER BY (((t0.c8, rt1.c1, rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM, (((rt0.c4, rt1.c2, t0.c8, rt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1, 0xfffffffff1a8b645, rt1.c1)) AND ((rt0.c1, rt1.c2, rt1.c1, rt1.c0, rt0.c2))), CAST(rt1.c2 AS BLOB))) AND ((((rt0.c1) NOT NULL), ((rt0.c4)||(rt0.c2)), rt1.c2 COLLATE RTRIM))) ASC  NULLS FIRST; -- 0ms;
SELECT CAST(COUNT(*) AS BLOB) FROM t0 WHERE (LTRIM(CASE WHEN '440569402' THEN '-851217197' WHEN '0.7091684135805069' THEN -1.620594008E9 WHEN 0.4473880690968144 THEN NULL ELSE '1304611318' END)) GROUP BY t0.c8 HAVING ((((rt0.c4)IS NOT(rt0.c1)))-(((((0.8993249606423779)AND(rt0.c1)))OR(rt0.c2)))) LIMIT 1788267145 OFFSET -304475674;SELECT DISTINCT ((((rt0.c0) IS TRUE))||(CASE WHEN rt1.c0 THEN rt0.c1 END)) FROM rt0;SELECT ALL CASE rt0.c3  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END COLLATE NOCASE COLLATE NOCASE FROM rt0, rt1; -- 0ms;
SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c2)))OR((((rt0.c4, rt1.c1, rt0.c1))<=((rt1.c0, rt0.c1, rt0.c1))))) FROM rt1, rt0, t0 WHERE (json_patch((~ ('J9lW]넬')), '1736199266987477500-7829456488068199782T432-1736T1407 1569-'));SELECT DISTINCT ((((rt1.c2) BETWEEN (rt0.c4) AND (rt1.c2))) NOT NULL) FROM rt0, t0, rt1 GROUP BY rt0.c0 HAVING rt0.c0 ORDER BY (((rt0.c1)) NOT BETWEEN (((((rt0.c1, NULL, rt1.c1))>=((rt0.c4, rt0.c2, rt1.c2))))) AND ((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c3)))))  NULLS LAST, (rt0.c1 IN ()) COLLATE RTRIM DESC; -- 0ms;
SELECT (((rt1.c2)) NOT BETWEEN ((COUNT(*))) AND ((((rt1.c2) NOTNULL)))) FROM t0, rt0, rt1; -- 0ms;
SELECT DISTINCT ((((t0.c8) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (TIME(rt1.c2, rt1.c0, rt1.c1))) FROM rt1, rt0, t0; -- 0ms;
SELECT ALL LTRIM((- (rt1.c2)), rt0.c1) FROM t0, rt0, rt1 GROUP BY t0.c8 ORDER BY ((CAST('975893607' AS NUMERIC)) NOT BETWEEN ((+ (rt0.c1))) AND (((rt0.c0) ISNULL))) ASC  NULLS FIRST, (((+ (rt0.c2))) BETWEEN (CAST(rt0.c4 AS REAL)) AND ((~ (rt0.c0))))  NULLS FIRST, ((((rt1.c1) IS TRUE))%(((((rt0.c0)AND(rt1.c1)))OR(rt0.c1)))); -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt0, rt1 WHERE ((((NULL, '', NULL)) BETWEEN (((((285139345))<((NULL))), ((0X1670624c)>('-914903903')), (('vz8)')=('1639298219')))) AND (('157741362', UNLIKELY(-2.090347565E9), ((-1203041863) BETWEEN (x'') AND (x'639f')))))); -- 0ms;
SELECT (((rt0.c0) NOTNULL) IN ()) FROM rt1 WHERE (((((x'')<('1049174301'))) IS TRUE)); -- 0ms;
SELECT ALL CAST(((rt1.c2)||(rt1.c1)) AS NUMERIC) FROM rt1 WHERE (COALESCE(((NULL) IS FALSE), (- ('')))) ORDER BY ((LIKE(rt0.c4, rt1.c1))<<(((t0.c8) IS TRUE)))  NULLS FIRST, (((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2)))) ISNULL) DESC;SELECT ALL CASE WHEN (((rt0.c1, rt1.c0, rt1.c1))>=((rt0.c2, 0.22414182960415896, rt0.c1))) THEN rt1.c1 ELSE ((rt1.c0) IS FALSE) END, GROUP_CONCAT('') OVER (), (((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))) BETWEEN (((rt0.c0)IS(rt0.c3))) AND (GROUP_CONCAT(t0.c8))) FROM t0, rt1, rt0 WHERE ((~ ('-1854384483' COLLATE NOCASE))); -- 0ms;
SELECT ((((rt1.c0)<=(rt1.c2)))LIKE((rt0.c3 IN ()))), (('1291764158') NOT BETWEEN ((rt0.c3 IN ())) AND (0.18498183458818473)), (SQLITE_COMPILEOPTION_USED(rt0.c1) IN ()) FROM rt1 WHERE ((((NOT (NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE BINARY) IS TRUE), TRIM(NULLIF(9.35581722E8, rt0.c4), GROUP_CONCAT(rt0.c4)), (((rt0.c0, rt0.c0, 0X47d24db1)) NOT BETWEEN (((- (rt0.c4)), ((rt1.c1) NOT NULL), ((rt1.c0)*(rt1.c1)))) AND ((rt0.c0, ((((((((rt0.c2)OR(rt1.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(x'')), CASE WHEN rt1.c2 THEN rt0.c0 ELSE t0.c8 END))) FROM rt1, t0 WHERE (IFNULL((((((((('147437057')OR(NULL)))AND(x'')))OR('-2073344487')))AND('-851217197')), ((x'05d6')||(x''))));SELECT MAX((NOT (rt0.c2))) FROM rt1;SELECT ALL CASE (rt0.c0 IN (rt1.c0))  WHEN (+ (rt0.c1)) THEN (((rt0.c0, rt0.c4, rt0.c3))<((rt0.c2, rt0.c4, rt0.c1))) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c2)%(rt0.c2)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (~ (rt0.c4)) END FROM rt1, rt0, t0 GROUP BY NULL; -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c1 END)OR(IFNULL(rt1.c0, rt1.c1))))OR(NULL)) FROM rt0;SELECT rt0.c1, CAST(((rt0.c0)!=(rt0.c2)) AS BLOB), ((TOTAL(rt0.c3))<<(((rt0.c4)IS(rt0.c1)))) FROM rt0, rt1 WHERE ((+ (CAST('X<' AS TEXT)))); -- 0ms;
SELECT ALL (((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)) IN (((rt0.c2) ISNULL))) FROM rt1, rt0, t0; -- 0ms;
SELECT (((((('Ov')AND(rt0.c4)))AND(rt0.c0)))-((rt1.c0 IN ()))), rt0.c1 COLLATE RTRIM, rt0.c0 FROM rt0 ORDER BY CAST(rt0.c1 AS NUMERIC) DESC; -- 0ms;
SELECT DISTINCT (((((((rt1.c2, rt0.c3, rt1.c1))<((rt0.c4, rt0.c2, rt1.c2))))OR(((rt0.c0) BETWEEN (rt1.c1) AND (rt0.c0)))))AND((((rt0.c4)) NOT BETWEEN ((0.6250480090411071)) AND ((rt0.c1))))), NTH_VALUE(((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN t0.c8 THEN rt0.c2 WHEN t0.c8 THEN rt0.c2 END) BETWEEN ((NOT (t0.c8))) AND ((rt0.c2 IN ()))), HEX((((rt0.c4))>((t0.c8))))) OVER (), ((((((((((((rt0.c1)OR(AVG(rt1.c0))))OR((- (rt0.c1)))))AND((rt1.c1 IN ()))))AND(rt1.c2 COLLATE NOCASE)))OR(((rt1.c2) IS TRUE))))AND((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt1.c1))))) FROM t0, rt0;SELECT COUNT(*) OVER (), CAST(((rt0.c2)GLOB(1774359711)) AS TEXT), (((NOT (rt0.c1))) IS FALSE) FROM rt1 LIMIT 1489570197;SELECT DISTINCT (((('%')AND(rt1.c1)))+(((rt0.c3)OR(rt0.c3)))) FROM rt1, rt0 WHERE ((NOT ((('1011314407')*(x'70e0'))))); -- 0ms;
SELECT ALL ((((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt1.c1)))OR(((rt1.c1) IS TRUE))))OR((t0.c8 IN (rt0.c2)))) FROM rt1, rt0 WHERE (CAST((~ (x'')) AS TEXT)) LIMIT -722297238;SELECT DISTINCT (NOT (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) FROM rt0, rt1, t0 WHERE (CASE WHEN (~ ('')) THEN CASE WHEN '833625147' THEN NULL END ELSE (((',냝Z', -1.884758178E9, 'M⾤U(J/r'))==((NULL, NULL, x''))) END); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE BINARY) BETWEEN (CAST(rt1.c1 AS REAL)) AND (LIKELIHOOD(DISTINCT rt0.c2, 0.8691790108927999))) FROM rt0, rt1 WHERE ((~ (((((((((-2117748339)AND('')))AND(0.5722230234465435)))OR('2062400066')))AND(0x685cda7e))))) GROUP BY ((rt0.c3 COLLATE NOCASE)+((- (rt0.c2)))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY COALESCE(rt1.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt1.c1 THEN rt0.c0 ELSE x'' END) ASC) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT (((((~ (rt0.c2)))OR(((rt0.c4) IS TRUE))))AND(((rt1.c1)>=('U籗KbX?.}')))) FROM rt0;SELECT 0.8658060348400936 COLLATE RTRIM FROM rt1, rt0, t0 WHERE (CAST(',!&0u~i' COLLATE BINARY AS BLOB)); -- 0ms;
SELECT ALL SUM(((t0.c8)-(rt1.c1))) FROM rt1, rt0, t0 WHERE (((((((((((NULL) IS FALSE))AND(x'')))OR((- (42047650)))))AND(CAST(0.745138507750293 AS REAL))))AND(((0.6167474591000974) BETWEEN (NULL) AND (NULL))))) LIMIT -2010331208; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1, rt0, t0 WHERE (((((((x'')AND(x'')))AND(NULL)))>>(NULL))); -- 0ms;
SELECT ALL (((NOT (rt0.c0)))<(MIN(rt0.c4))) FROM t0, rt1 WHERE (((('1619980850')<<(0.33804631360135884)) IN (((0.8452839621988533) ISNULL))));SELECT DISTINCT CAST(rt0.c3 AS INTEGER) COLLATE BINARY FROM rt1, rt0, t0 WHERE (ROUND(NULL, ((x'') ISNULL))); -- 1ms;
SELECT DISTINCT STRFTIME(COUNT(*), ((-420445094) ISNULL), rt1.c1 COLLATE NOCASE) FROM t0, rt1 WHERE (CAST(CASE NULL  WHEN NULL THEN '-2142371976' WHEN 0xffffffff8eebf861 THEN x'efef' WHEN 0.8958445148843961 THEN x'' WHEN NULL THEN '' WHEN 2.062400066E9 THEN '935581722' END AS BLOB)); -- 0ms;
SELECT DISTINCT (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c2)) IN (((rt0.c4) BETWEEN (t0.c8) AND (rt0.c4)), ((rt1.c1) NOT BETWEEN (0.8006528941648483) AND (rt0.c3)))), SQLITE_COMPILEOPTION_GET((((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0)))), MIN(((rt1.c1)LIKE(rt0.c2))) FROM rt1 WHERE (((((0.526628942189852) NOTNULL))<=(((0.28299231216429865) ISNULL)))) GROUP BY (((((rt1.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((rt1.c2, rt0.c4, '')) AND ((rt0.c3, x'f839', rt0.c4))))IS NOT(((t0.c8)*(rt1.c0)))) HAVING CAST(CAST(rt0.c1 AS INTEGER) AS BLOB) ORDER BY ((((rt1.c1)>>(rt0.c1))) NOT BETWEEN (((rt0.c4)|(rt0.c3))) AND ((rt0.c1 IN (t0.c8)))) ASC;SELECT DISTINCT COUNT(LOWER(DISTINCT rt0.c0)) OVER ( ORDER BY ((rt1.c1)IS NOT(t0.c8)) COLLATE NOCASE ASC RANGE TRIM(DISTINCT (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))) PRECEDING), CAST((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) AS NUMERIC), TRIM(COALESCE(DISTINCT rt0.c2, rt0.c2), CASE WHEN rt0.c3 THEN 0.5614641035576523 END) FROM rt0 WHERE ((+ ('7' COLLATE BINARY))) GROUP BY CASE WHEN ((((((((t0.c8)AND('832897201')))AND(t0.c8)))AND(rt1.c2)))OR(rt1.c0)) THEN (((rt0.c4))>((rt0.c3))) END;SELECT DISTINCT CAST(((rt1.c1) BETWEEN (t0.c8) AND (rt0.c2)) AS BLOB), LAG(((CAST(rt0.c2 AS NUMERIC)) NOTNULL), ((((rt0.c4)IS NOT(rt0.c1)))IS NOT(((rt0.c3) BETWEEN ('') AND (rt0.c2)))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM) OVER (), CAST((t0.c8 IN ('-2125192263')) AS NUMERIC), TOTAL(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt1.c0))), ((rt1.c2) NOTNULL) COLLATE RTRIM FROM rt0 WHERE ((((NULL IN ())) BETWEEN (((x'')AND(NULL))) AND (x''))) LIMIT 2144282369 OFFSET 1990089647;SELECT DISTINCT (MIN(t0.c8) IN ()), ((NULL COLLATE BINARY)&(rt0.c4)), ((((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c0))) NOT BETWEEN (((rt1.c1)==(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2))))) FROM t0, rt0, rt1 WHERE ((((222119877 COLLATE RTRIM))>((CAST(NULL AS NUMERIC))))); -- 0ms;
SELECT COUNT(*) FROM t0, rt0, rt1; -- 0ms;
SELECT ALL CASE (~ (rt0.c2))  WHEN ((((rt0.c4)AND(t0.c8)))AND(rt0.c4)) THEN CASE WHEN rt0.c1 THEN rt0.c1 END END FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT rt0.c1 FROM t0, rt0, rt1 NOT INDEXED WHERE (COALESCE(DISTINCT ((NULL)<>(9.82553652E8)), (('X[') BETWEEN (0x4091e519) AND (x'99b1')), (('') IS FALSE), ((x'')|('')))) LIMIT 762226457; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((UNLIKELY(rt0.c1))/(CAST(rt1.c1 AS TEXT))) FROM rt1, rt0 WHERE ((NOT (((NULL) IS FALSE)))) LIMIT -1047190809; -- 0ms;
SELECT json(CASE WHEN rt0.c0 THEN rt0.c4 WHEN 'ᖶf' THEN rt1.c2 WHEN rt0.c3 THEN rt0.c1 END) FROM rt1, t0, rt0 WHERE (((0.7932843119185491) NOT NULL) COLLATE NOCASE) LIMIT 1681112903; -- 0ms;
SELECT DISTINCT ((((((((((((rt1.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) COLLATE NOCASE FROM rt1, rt0, t0; -- 0ms;
SELECT DISTINCT t0.c8 FROM t0 WHERE ((((1772866735)) NOT BETWEEN ((((0.9128794670814385) IS FALSE))) AND ((((('䆩qrUoG&')) BETWEEN ((0.7833323442888468)) AND (('1639298219'))))))) LIMIT 1519354369; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)AND(rt1.c0)))AND(rt0.c3)))IS((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c0))))) FROM rt0, t0 WHERE ((((((0.4118414586596115))<>((x''))))-((((((((('')AND(2.119723445E9)))OR(0.07607242718929064)))OR(NULL)))OR(0.4275714424401811))))) ORDER BY (((((t0.c8)OR(rt0.c3)), ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)), (t0.c8 IN ())))<=((LIKELY(rt0.c3), CAST(rt1.c0 AS INTEGER), CAST('Oo-7pb]' AS REAL))))  NULLS FIRST;SELECT ((((rt1.c0)>(t0.c8))) BETWEEN (((((rt0.c3)OR(rt0.c1)))OR(rt1.c2))) AND (((((rt0.c4)OR(926328340)))AND(rt0.c1)))) FROM rt0;SELECT ALL (- (((rt0.c4)-(rt0.c4)))) FROM rt1, rt0 LIMIT 1700155813 OFFSET 1914598014; -- 0ms;
SELECT DISTINCT CASE WHEN (rt1.c2 IN ()) THEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c2)) WHEN (rt0.c1 IN (rt0.c3)) THEN load_extension(rt0.c3, rt0.c0) WHEN rt0.c2 COLLATE BINARY THEN IFNULL(rt1.c2, rt0.c4) ELSE ((4.7447209E7) NOT NULL) END, SUM(((rt0.c2)>=(rt1.c0))) OVER ( ORDER BY (CASE WHEN t0.c8 THEN rt0.c4 ELSE rt1.c0 END IN ()) ASC), SUM(json_remove(rt1.c1, rt0.c0) COLLATE RTRIM) FILTER(WHERE LIKELIHOOD((((('^k')AND(rt1.c1)))AND(rt0.c0)), 0.4899299646542771)) OVER () FROM t0, rt1 WHERE ((((((NULL)-(249976264))))<=((COALESCE('WF', NULL))))) ORDER BY (((~ (rt1.c0))) BETWEEN (((((rt1.c2)AND(rt1.c0)))AND(rt1.c1))) AND ((NOT (t0.c8)))) DESC;SELECT DISTINCT (((rt0.c4, rt1.c1, rt1.c0)) BETWEEN ((LIKELIHOOD(rt0.c4, 0.2904360122995344), rt0.c1, AVG(t0.c8))) AND (((NOT (NULL)), ((rt0.c1) ISNULL), (+ (rt1.c1))))) FROM rt0, t0 WHERE (((CAST('-1948886946' AS NUMERIC)) NOTNULL));SELECT DISTINCT ((rt0.c1)LIKE(t0.c8)) FROM t0 WHERE (((((0.2811971810173909)<=(NULL))) NOTNULL));SELECT DISTINCT ((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c0)))AND(rt1.c0)))OR(rt1.c0)) COLLATE NOCASE, (TOTAL(0.8914726510747071) IN ()), COUNT(*) FROM rt0, rt1 WHERE ((((NOT ('O*F[~'))) NOT NULL)); -- 0ms;
SELECT ((((t0.c8) BETWEEN (rt1.c0) AND (rt0.c4)))&(rt0.c0 COLLATE BINARY)) FROM rt1, rt0, t0 WHERE (((((0.696366639034293)<>(0Xffffffffb1d7b4de)))IS(CAST('86198262' AS REAL)))) LIMIT 1886967202 OFFSET 1927849111; -- 1ms;
SELECT DISTINCT (- (rt1.c2)) FROM t0, rt1 ORDER BY NULLIF((~ (t0.c8)), LIKELY(rt0.c0))  NULLS FIRST;SELECT ALL RANK() OVER () FROM rt0, t0 WHERE (((-249423465)GLOB(-701811393)) COLLATE NOCASE); -- 0ms;
SELECT AVG(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4))) OVER () FROM rt1, rt0, t0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c1))<(rt0.c4 COLLATE BINARY)) FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN (rt0.c2)))=(COALESCE(DISTINCT rt0.c0, rt1.c1))) FROM rt0;SELECT rt0.c2, UNLIKELY(TRIM(rt1.c1, rt0.c2)), TOTAL((rt1.c1 IN ())) FROM t0, rt1;SELECT DISTINCT ((((((t0.c8) IS FALSE))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(x'01f3' COLLATE RTRIM)) FROM rt0 ORDER BY (~ (((((rt0.c3)OR(rt0.c1)))OR(rt1.c1)))) ASC  NULLS FIRST;SELECT ALL ((((((((((t0.c8)OR(t0.c8)))OR(rt0.c2)))AND(rt0.c1)))AND(NULL))) NOTNULL) FROM rt0 WHERE ((((x'') BETWEEN (NULL) AND ('-189239654')) IN ('_Ჶ\}\rn[z' COLLATE NOCASE))) LIMIT 1938979505 OFFSET -566512121;SELECT DISTINCT (((((rt0.c3)) BETWEEN ((rt1.c2)) AND ((rt0.c3)))) BETWEEN ((~ (rt0.c4))) AND (rt0.c4 COLLATE BINARY)) FROM rt1, t0 WHERE (x'');SELECT DISTINCT (NOT (rt1.c2)) FROM t0, rt1 WHERE ((- ((~ ('81860329'))))); -- 0ms;
SELECT (((((t0.c8))==((rt0.c3)))) BETWEEN (MIN(rt0.c3)) AND (CASE WHEN rt1.c1 THEN rt0.c4 END)), '1848615176', CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt1.c1 END AS NUMERIC), ROW_NUMBER() OVER ( ORDER BY ((((rt0.c0)+(rt0.c4)))<=((NOT (rt1.c1)))) ASC), ((rt1.c1)>>(((((rt0.c0)AND(rt1.c0)))AND(rt0.c4)))) FROM rt1, rt0 GROUP BY (((((((('gL')AND(rt1.c0)))OR(t0.c8)))AND(rt0.c0)))OR(t0.c8)) COLLATE BINARY;SELECT DISTINCT ((((((((((rt1.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt1.c0)))<(rt1.c0 COLLATE BINARY)) FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c4  WHEN rt0.c0 THEN t0.c8 ELSE rt1.c2 END)IS(((rt0.c3)<(rt0.c0)))), 0.16392414537419864, ((((NULL) NOTNULL)) NOTNULL) FROM t0, rt0 WHERE (LOWER(((0.4296410882788181) NOT NULL)));SELECT ALL PERCENT_RANK() OVER () FROM rt0, t0, rt1 WHERE ((+ (((-1.897138079E9)|(NULL))))); -- 0ms;
SELECT ALL GROUP_CONCAT(rt0.c4), RANK() OVER (), (((rt1.c2 IN ()))>=(((rt0.c1)||(rt1.c1)))), ((((rt0.c2 IN ())))>=((CASE WHEN '' THEN t0.c8 ELSE rt1.c1 END))), CASE WHEN (((NULL, rt1.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt1.c2, rt1.c0)) AND ((rt1.c2, rt0.c1, rt1.c0))) THEN ((((rt1.c0)OR(rt1.c0)))OR(rt0.c0)) END FROM rt0, rt1, t0; -- 1ms;
SELECT DISTINCT NTH_VALUE(0.9633577794329256, (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))) NOT BETWEEN (t0.c8) AND (NULLIF(DISTINCT rt1.c1, rt1.c0)))) OVER () FROM rt1, t0 WHERE (HEX((('2015249352')+(0.8734488208366441)))) ORDER BY CAST(CAST(rt1.c0 AS BLOB) AS NUMERIC), ((((rt0.c4)||(rt0.c2))) ISNULL) DESC;SELECT ((AVG(rt0.c3)) IS FALSE), json_array_length(0.7038453795205478), 0x50e74afe FROM rt1, t0 WHERE (((((x'')&(x'a482')))IS NOT(x'1ffc' COLLATE NOCASE))) LIMIT 416403597 OFFSET 1517111969;SELECT t0.c8, t0.c8, CASE WHEN CASE WHEN rt0.c1 THEN rt0.c3 END THEN CAST(rt1.c0 AS INTEGER) ELSE '鉶wd' END FROM t0, rt1 RIGHT OUTER JOIN rt0 ON '#Z'; -- 0ms;
SELECT DISTINCT ((rtreenode(rt0.c3, rt0.c3))>>((rt0.c1 IN ()))), (UNICODE(t0.c8) IN (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE t0.c8 END)), rt0.c4 FROM t0, rt1;SELECT (((((((((rt0.c3)AND(rt1.c1)))OR(rt0.c4)))AND(t0.c8)))OR(rt0.c4)) IN ()) FROM rt1, rt0, t0; -- 1ms;
SELECT DISTINCT (((CASE 0.5319949473356211  WHEN rt0.c3 THEN t0.c8 ELSE rt1.c2 END, COUNT(rt0.c3), -1312225520))<((CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 END, json(0X694ca3c6), MAX(rt1.c1)))) FROM rt0, t0 GROUP BY (((((rt1.c1 IN (rt1.c2)))OR(CAST(rt1.c2 AS REAL))))OR(((((rt0.c3)OR(rt1.c0)))AND(rt0.c3))));SELECT ALL rt1.c1 COLLATE BINARY FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c3)IS(rt1.c0)))AND(0.9687554059255076)), ((((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c4))) IS FALSE), MIN(rt1.c0) FROM t0, rt1, rt0 WHERE ((((((x''))<((0.41653723797880804)))) BETWEEN (((NULL) IS TRUE)) AND (('-189239654' IN ())))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)GLOB(rt0.c0)))IS(CASE WHEN NULL THEN rt0.c4 END)) FROM t0 WHERE (((((NOT (0.7353412948294539))))!=((((1917323666) IS TRUE)))));SELECT DISTINCT rt0.c4 FROM rt1 LIMIT -675781034 OFFSET -2016069460;SELECT DISTINCT (((json_quote('-885565692')))<((((rt0.c2)+(rt0.c1))))) FROM rt1, t0 WHERE (((TRIM(DISTINCT x'')) NOTNULL));SELECT ALL TOTAL(((((((((rt1.c0)AND(rt0.c1)))OR(rt1.c0)))AND(rt0.c0)))AND(rt0.c0))) FROM t0, rt1;SELECT (((((((((- (rt1.c2)))OR(SUM(rt0.c4))))AND(CASE WHEN rt0.c4 THEN rt1.c2 ELSE t0.c8 END)))AND(((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))))OR((((rt1.c1))>=((rt1.c2))))) FROM rt0;SELECT CAST((- (rt0.c1)) AS REAL) FROM t0, rt1, rt0 WHERE ((x'78ab' IN (0.24322943827720733)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT SUM((+ (rt1.c0))) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0, t0, rt1 WHERE (((((0X2384dace) IS FALSE))%(CASE NULL  WHEN x'' THEN x'bf9c15a8' WHEN 0.5117690613320379 THEN 544609074 WHEN '~?' THEN ',' ELSE ')\n1/' END))) GROUP BY CAST((((t0.c8)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) AS REAL); -- 0ms;
SELECT HEX(t0.c8) COLLATE RTRIM FROM rt1, rt0, t0; -- 0ms;
SELECT DISTINCT x'f21eff38' FROM rt1 WHERE (CASE WHEN ((((x'b2de')OR(0.11478095402336852)))OR(0.01809352351348603)) THEN ((('200790975'))<>((-1.165357131E9))) END) LIMIT -1593086288 OFFSET -9223372036854775808; -- 0ms;
SELECT AVG(((rt1.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM rt1, t0, rt0; -- 0ms;
SELECT (((rt1.c1 IN (0.42741198129633884, x'')))*(((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c3)))) FROM rt1;SELECT DISTINCT rt0.c0 FROM t0, rt1;SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY ((('1m<+', rt0.c3, rt0.c4)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND('-1403505285')), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 END, ((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c0)))) AND ((((rt0.c4) IS TRUE), (+ (rt0.c3)), ((rt0.c4) NOT BETWEEN (rt1.c0) AND (t0.c8))))) DESC), ((((rt0.c1 IN ())))=((TYPEOF(t0.c8)))), ((AVG(rt1.c0))|(rt0.c4 COLLATE BINARY)) FROM rt0, rt1 WHERE ((((('a[]c') NOT NULL)) NOT NULL));SELECT DISTINCT DENSE_RANK() OVER ( PARTITION BY LENGTH(((rt1.c2)GLOB(rt0.c1))), '#꾁0G') FROM rt0, rt1, t0 WHERE (((((-1.948886946E9)-('-116078184')))AND(0.9666247605853515 COLLATE NOCASE))) UNION SELECT ((((rt0.c1)!=(rt1.c2)))&(((((rt0.c1)AND(rt1.c0)))OR(t0.c8)))) FROM rt0, rt1, t0 GROUP BY (rt0.c4 COLLATE RTRIM IN ()); -- 0ms;
SELECT ALL rt0.c0, ((rt0.c2 COLLATE NOCASE) NOT NULL), rt1.c1 FROM t0, rt0 WHERE ((((1282860914 IN ())) NOT BETWEEN (x'' COLLATE BINARY) AND (((200790975)IS NOT('2119723445')))));SELECT ((rt0.c2) BETWEEN (((((t0.c8)AND(0.9343136196547628)))AND(rt0.c4))) AND ((((NULL)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))) FROM rt0, rt1;SELECT ALL (((rt0.c3 IN (rt0.c4))) NOT BETWEEN ((((NULL)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))) AND ('')) FROM rt1, t0, rt0 WHERE (((CASE 2062400066  WHEN '982553652' THEN 'aX4|t䇿\' END)*(((NULL) IS TRUE)))); -- 1ms;
SELECT DISTINCT 0xfffffffffe86c110 FROM rt0, rt1 WHERE ((((((NULL)<=(0.9634900346237435))))<(((NOT (0.3978582624197643)))))); -- 0ms;
SELECT ALL '1930179842', CAST(rt1.c2 AS BLOB) COLLATE RTRIM, ((((CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END)OR(((t0.c8) IS TRUE))))OR(CASE WHEN t0.c8 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c2 END)) FROM t0, rt0, rt1; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt0.c3)<<(rt0.c1)))) FROM t0, rt1, rt0 WHERE (NULL); -- 0ms;
SELECT ((992238442) BETWEEN ((((rt0.c3, rt0.c0, NULL)) NOT BETWEEN ((rt1.c0, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, t0.c8)))) AND ((((rt1.c2, t0.c8, rt1.c2)) NOT BETWEEN ((rt0.c3, rt0.c2, rt1.c2)) AND ((rt1.c1, rt1.c2, rt1.c2))))), (- (NULL)), ((rt1.c2)+(rt0.c2)) COLLATE NOCASE FROM rt1, rt0 WHERE (((((((x'f735')AND(0.4087260899654883)))OR(x'0af7')))||(((0.3219733397008747)LIKE(0xfffffffff65e4988))))) ORDER BY x'21f4', ((x'dc4c') IS FALSE) COLLATE RTRIM ASC  NULLS LAST;SELECT ALL (+ (rt0.c1)) FROM rt1;SELECT DISTINCT ((((MAX(rt1.c2))AND(((x'') IS TRUE))))OR((t0.c8 IN (rt1.c1, rt0.c2)))) FROM t0, rt1 WHERE ((((CASE 'x'  WHEN x'59db' THEN 'wD' END, LIKELIHOOD(DISTINCT NULL, 0.6193348304662585), ((NULL) BETWEEN (0.9781336651017783) AND (0x10fee191))))>=((((NULL)|(NULL)), ((('935581722'))==((0x61b5b4ab))), 1631011252 COLLATE RTRIM)))) GROUP BY rt1.c1;SELECT ALL (((((rt0.c0 IN ()))OR(CASE WHEN rt0.c4 THEN rt1.c2 END)))AND(((9.50911535E8)*(rt0.c1)))), ((((rt0.c4) IS FALSE)) IS FALSE), (((((rt0.c1)OR(rt1.c2)))OR(rt0.c4)) IN ()) FROM rt1, t0 ORDER BY TRIM(DISTINCT (+ (rt0.c1)))  NULLS LAST LIMIT -1419511621 OFFSET 1028079384;SELECT (((rt1.c1 IN ())) IS TRUE), 'HZQMtG' COLLATE NOCASE, DENSE_RANK() OVER () FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT AVG(rt0.c1) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (TOTAL(rt1.c0) IN ()) FROM rt1 WHERE ((((0.29131045366287034) IS FALSE) IN (((354540334) BETWEEN (NULL) AND (x'298aed661565')), (('0.7288429790080231')LIKE(0xffffffffe5ff4bbd))))); -- 0ms;
SELECT DISTINCT (((((((((rt1.c1 IN ()))AND(((('1700762311')) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(((((rt1.c2)AND(t0.c8)))AND(t0.c8)))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))OR(CAST(NULL AS BLOB))) FROM t0, rt1, rt0 WHERE ((NOT ((((430488980)) NOT BETWEEN ((0.7063657644219004)) AND ((NULL)))))) GROUP BY (((rt1.c1)) NOT BETWEEN (((NOT (rt0.c3)))) AND (((t0.c8 IN ())))); -- 0ms;
SELECT ALL CAST(((rt0.c2)<(rt0.c4)) AS BLOB) FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT ((((t0.c8)==(t0.c8)))/(CAST(rt0.c4 AS NUMERIC))) FROM t0, rt1, rt0; -- 0ms;
SELECT ALL TOTAL(0.5160843866065296 COLLATE RTRIM), ((((rt0.c4) IS TRUE)) IS TRUE), (NULL IN ()) FROM t0, rt1 WHERE ((((('a*uwD')>('630522463'))) NOTNULL));SELECT COUNT(*) OVER () FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CASE (('T9cw8+D6') NOT BETWEEN (rt0.c0) AND (rt0.c4))  WHEN COUNT(*) THEN (NOT (rt1.c1)) END FROM rt1, t0, rt0 WHERE ((((NULL) BETWEEN (0.9639089736688731) AND (-2016069460)) IN (((((0.3059970468573663)OR(x'')))AND(0.7840219312394819))))); -- 0ms;
SELECT CAST('1846403985' AS REAL), ((('H'''))<=(((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))))), ((((rt1.c1)/(rt0.c0)))+(((rt1.c2) IS TRUE))) FROM rt1;SELECT DISTINCT CAST(rt0.c0 AS NUMERIC), CAST('2054650667' AS NUMERIC), ((((((rt1.c0)OR(t0.c8)))AND(rt0.c2)))/(CAST(rt1.c2 AS NUMERIC))) FROM rt1, t0;SELECT (((rt1.c0)) NOT BETWEEN ((t0.c8)) AND ((rt0.c0))) COLLATE RTRIM FROM t0, rt1, rt0 WHERE (((CAST('mB' AS INTEGER)) NOT BETWEEN ((('\LT') BETWEEN (x'8672') AND (x''))) AND ('.GSJFQ'))); -- 0ms;
SELECT (((t0.c8))>=((((rt1.c2)<=(rt0.c1))))) FROM rt0 WHERE ('-1371642682');SELECT ALL HEX(DISTINCT rt0.c0 COLLATE BINARY) FROM t0, rt1, rt0 WHERE (((((('Y%|ZPhDq'))>=((0xffffffffddf66df2)))) BETWEEN (((NULL) NOTNULL)) AND (CASE 0.38949468985448554  WHEN 1.7976931348623157E308 THEN 1.914598014E9 END))); -- 0ms;
SELECT DISTINCT ((((CASE rt0.c3  WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt1.c2 END)AND(((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c3)))))AND('-507560197')) FROM rt0 ORDER BY ((((rt1.c0)OR(rt0.c3))) IS TRUE) DESC LIMIT -1554458980;SELECT DISTINCT CASE (- (rt0.c0))  WHEN x'' THEN ((rt0.c0) BETWEEN (rt1.c1) AND (rt0.c2)) WHEN (((rt0.c0, x'', rt0.c4)) BETWEEN ((rt0.c3, t0.c8, rt0.c4)) AND ((rt1.c1, rt0.c3, ''))) THEN CAST(rt0.c4 AS NUMERIC) WHEN GROUP_CONCAT(rt0.c3) THEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 END ELSE ((rt0.c0) NOTNULL) END, x'73b9', (((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((((rt0.c4)*(rt1.c1)), HEX(rt1.c2), CAST(rt0.c3 AS INTEGER))) AND ((rt0.c3 COLLATE RTRIM, (('2046253707')+(t0.c8)), CAST(rt1.c0 AS BLOB)))) FROM rt0 WHERE ('') ORDER BY (NULL IN ((rt1.c1 IN ()))), ((rt0.c1)AND(rt0.c3 COLLATE RTRIM)) DESC, ((((rt0.c3)LIKE(rt1.c2)))+((+ (rt0.c1)))) DESC LIMIT -210881379 OFFSET 118808104;SELECT DISTINCT ((CASE WHEN rt1.c2 THEN t0.c8 ELSE rt1.c1 END) NOT BETWEEN ((rt0.c4 IN ())) AND (MIN(rt0.c2))) FROM rt1 WHERE ((+ (''))) LIMIT 530660157 OFFSET -811568760;SELECT (((rt0.c4, rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c3 IN (rt0.c2)), GROUP_CONCAT(rt0.c0), -1.326083513E9)) AND (((rt0.c4 IN ()), (((t0.c8)) BETWEEN ((rt1.c0)) AND ((rt0.c0))), CASE rt1.c2  WHEN rt0.c2 THEN rt0.c4 END))) FROM rt1;SELECT DISTINCT NULL, COUNT(*), ((((rt1.c0) NOTNULL))+((((t0.c8)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))) FROM rt1;SELECT DISTINCT SUM((+ (rt1.c0))) OVER ( PARTITION BY ((((((rt0.c0) ISNULL))AND(((t0.c8)IS NOT(rt1.c1)))))AND(CAST('4UA]x Qo' AS REAL))), (((CASE rt1.c2  WHEN NULL THEN t0.c8 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt1.c0 END, ((rt0.c4)%(rt1.c1)), (rt0.c3 IN ())))>=((rt1.c2 COLLATE NOCASE, rt0.c4 COLLATE RTRIM, ((((((((rt0.c3)OR(t0.c8)))AND(rt0.c3)))AND(x'fda1')))OR(t0.c8)))))) FROM rt1 WHERE (((NULL)<<(x'')) COLLATE BINARY) GROUP BY (((rt1.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((LIKELIHOOD(rt0.c0, 0.4569812733108739)))) HAVING (- (((rt0.c4)>=(rt1.c1))));SELECT ALL (((CAST(rt0.c0 AS REAL), x'', rt0.c3))>(((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c4) BETWEEN (rt0.c1) AND (rt1.c2)), t0.c8))) FROM rt1 WHERE (json('569930398')) LIMIT -1059182348;SELECT CAST((~ (rt0.c2)) AS INTEGER) FROM rt1, rt0; -- 0ms;
SELECT ALL SUM(((rt0.c3)>=(rt0.c0))) OVER ( PARTITION BY (((t0.c8))<((rt0.c0))), ((((rt1.c1)<=(rt0.c4)))<<(CASE rt0.c1  WHEN t0.c8 THEN t0.c8 WHEN rt0.c0 THEN rt1.c2 WHEN '}J(O(' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c0 END)), (((((rt0.c2))==((rt0.c3))))IS(CASE WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN NULL THEN rt0.c0 ELSE rt0.c1 END)), rt0.c0) FROM rt1, rt0 WHERE ((((((('.f')OR('_	bCT\ql')))OR('')))AND(CAST(0xffffffff9ab215b6 AS BLOB)))) GROUP BY CASE WHEN (((rt0.c0, rt1.c1, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c3, rt1.c1, rt0.c3))) THEN ((rt1.c2)<=(rt0.c3)) ELSE (((rt1.c2))=((9.92238442E8))) END;SELECT DISTINCT ((((rt1.c2) NOTNULL)) BETWEEN (CASE -1.568729168E9  WHEN rt1.c1 THEN rt0.c4 END) AND (((rt1.c0) NOT NULL))), rt0.c3, (('218004746') ISNULL) COLLATE BINARY FROM rt0, t0;SELECT ((rt1.c1) IS FALSE), ((((0X5cf8678a)LIKE(rt0.c2)))!=(CAST(rt0.c3 AS REAL))), rt1.c1 FROM rt1, t0, rt0 LIMIT -1974977168 OFFSET 200790975; -- 0ms;
SELECT ((((rt0.c0)||('nA0W')))>=((rt1.c0 IN ()))), ((((((rt0.c3)AND(t0.c8)))AND(rt1.c1)))IS(NULL)), (- (x'')) FROM rt1, t0, rt0; -- 0ms;
SELECT ALL 253255304 COLLATE RTRIM, MAX((rt0.c3 IN ())), ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2))) NOT BETWEEN (((((NULL)OR(rt0.c3)))AND(rt1.c0))) AND (rt1.c1 COLLATE BINARY)) FROM t0, rt1, rt0 WHERE (CAST(CASE '191䖁ge^~m'  WHEN 0.6084464782982237 THEN x'' ELSE 0.5776231994591724 END AS BLOB)); -- 0ms;
SELECT ((TRIM(rt0.c3, rt1.c1))==((rt0.c0 IN (rt1.c2)))), x'', CUME_DIST() OVER () FROM rt1, rt0 WHERE ((((((((((0.016025736615299047)AND(0.7091684135805069)))AND('⟋')))AND(914209549)))OR(x'')) IN ())); -- 0ms;
SELECT DISTINCT (~ (GROUP_CONCAT(NULL))), (((- (t0.c8))) ISNULL), UNLIKELY(((rt0.c1) IS FALSE)) FROM rt1 WHERE (((json_patch(x'', 0.8242342805055639))OR((+ (NULL)))));SELECT ALL SUBSTR(((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)), NULL COLLATE NOCASE) FROM rt1 WHERE ((~ (((x'') NOTNULL))));SELECT ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END) IS TRUE), (((rt0.c3)) NOT BETWEEN ((((rt0.c3) IS TRUE))) AND ((CAST(rt1.c0 AS INTEGER)))), rt1.c0, ((rt0.c1 COLLATE NOCASE)IS((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))), ((rt1.c0) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 END) AND (GROUP_CONCAT(rt0.c1))) FROM rt0;SELECT DISTINCT MAX((- (t0.c8))), (('')LIKE(((rt1.c1)IS(NULL)))), rt1.c2 FROM rt0 WHERE ((((((- ('1019703863')))AND(json_valid(x''))))AND(CAST('992238442' AS INTEGER))));SELECT -2050396153 FROM rt0, rt1, t0 WHERE (((('0.3094526729673489')<>(0.13680384669649248)) IN ((NULL IN ())))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c2)/('-1927369363')) AS BLOB) FROM rt0, t0, rt1 WHERE (((CASE WHEN 0.5340741316590046 THEN x'' ELSE x'' END) NOT BETWEEN (0.9582102310283793 COLLATE BINARY) AND (NULL COLLATE RTRIM))); -- 0ms;
SELECT ABS(((rt1.c0) NOT NULL)) FROM rt0, t0, rt1; -- 0ms;
SELECT MIN(rt0.c0) FROM t0;SELECT DISTINCT (((NOT (rt0.c4)))IS(rt0.c4)) FROM rt1 WHERE (((ROUND(-8.51217197E8, 0.5193271477510588))&(CASE 0.8722019707595153  WHEN '-832023440' THEN 0.22685705260491007 END)));SELECT rt0.c1 FROM t0, rt0 ORDER BY x''; -- 0ms;
SELECT '1118 88:323:249 K?', CAST((((rt0.c2, rt0.c2, rt0.c1))>((rt1.c2, rt0.c2, rt0.c4))) AS INTEGER), (rt0.c1 IN ()) FROM t0, rt1;SELECT DISTINCT CASE WHEN ((((rt0.c0)OR(x'8a0c')))OR(t0.c8)) THEN x'907a' WHEN (~ (t0.c8)) THEN ((x'')<<(rt1.c0)) WHEN ((rt0.c4)!=(rt1.c2)) THEN ((rt0.c3) NOT BETWEEN (rt1.c0) AND ('')) END FROM rt1, rt0, t0 GROUP BY ((+ (rt0.c4)) IN ()) HAVING (+ ((((0.09868241302639702))>=((rt0.c2))))) LIMIT 914209549; -- 0ms;
SELECT ALL SUM(((t0.c8) NOT BETWEEN (rt1.c2) AND (rt1.c0))) OVER () FROM t0, rt1, rt0 WHERE (CAST((0.15468941202709086 IN (NULL, 0.2962433120162209, '')) AS REAL)); -- 0ms;
SELECT ((CASE WHEN NULL THEN rt0.c4 ELSE t0.c8 END) NOTNULL), SUM(((rt0.c2)||(rt1.c0))) OVER ( ORDER BY x'b641' DESC GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), (- (((((rt1.c2)AND(rt0.c3)))AND(rt0.c3)))) FROM t0, rt0, rt1 WHERE ((((('RR88')<=('926328340')))-((((0X277c42ba)) BETWEEN ((0.9273449679812578)) AND (('1799182532')))))); -- 0ms;
SELECT ALL ((((x'') NOT BETWEEN (rt1.c2) AND (rt0.c2)))&(TYPEOF(rt1.c1))) FROM rt1, t0, rt0 WHERE ((((x'', '\nf7x', 0.1487015914832548)) NOT BETWEEN ((CAST(x'' AS INTEGER), CAST(NULL AS NUMERIC), CAST('' AS TEXT))) AND ((((NULL)>(NULL)), 'n)', ((x'')>>(NULL)))))) ORDER BY '-873651904' DESC; -- 0ms;
SELECT DISTINCT (((((((((~ (rt0.c2)))AND(rt1.c1 COLLATE NOCASE)))OR(PRINTF(rt0.c0, rt0.c2, 9.92238442E8))))AND(0.3446146131271216)))AND(((rt0.c1) BETWEEN ('680487225') AND (rt0.c3)))) FROM t0;SELECT DISTINCT (((('1291764158') NOT BETWEEN (t0.c8) AND (rt1.c2)))GLOB(((rt1.c0) NOT BETWEEN (t0.c8) AND (rt0.c0)))), ((((rt1.c0)&(rt0.c3))) NOT NULL), ((((CAST(rt1.c1 AS BLOB))OR(CAST(rt0.c2 AS REAL))))AND((~ (rt0.c1)))) FROM rt0 WHERE (MIN(x'' COLLATE BINARY, highlight(NULL, x'', 'Ut', x''), ((9.14209549E8) NOT BETWEEN (x'') AND (1.589348221E9)), ('' IN ()))) GROUP BY rt1.c2, json_object(CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c3 THEN t0.c8 WHEN t0.c8 THEN rt1.c1 ELSE rt1.c2 END, ((rt0.c0) BETWEEN (NULL) AND (rt0.c1))), ((((CAST(rt0.c4 AS REAL))OR(((rt1.c1) BETWEEN (rt0.c3) AND (rt0.c0)))))OR(((((rt0.c4)AND(rt1.c0)))OR(rt0.c2)))), ((LOWER('1057233770'))=(((rt0.c4) NOT NULL))), ((((rt0.c2)!=(rt0.c1))) NOT NULL);SELECT DISTINCT ((rt1.c0 COLLATE RTRIM)>=(((((rt0.c2)AND(rt1.c2)))AND(rt1.c0)))), IFNULL(DISTINCT COUNT(*), (rt0.c0 IN (rt0.c0))), (((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)) IN ()) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT (((((rt1.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c0)))) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) AND (((((rt1.c1)AND(rt1.c0)))AND(t0.c8)))), ((CAST(rt0.c2 AS NUMERIC)) IS TRUE), ((CASE WHEN rt1.c2 THEN t0.c8 WHEN rt1.c1 THEN rt0.c2 WHEN '5&➽X坈2䲗㠁' THEN rt0.c3 ELSE rt0.c1 END) IS TRUE) FROM rt1, t0 WHERE ((((((x'e6ab')OR(NULL)))AND(NULL)) IN (((NULL)AND(0xffffffffd2b0b44a)))));SELECT DISTINCT json_array_length((((t0.c8))>((rt1.c0))), ((rt1.c0)-(rt0.c3))), ((((((rt0.c3) NOT NULL))AND((((x'')) BETWEEN ((rt1.c2)) AND ((rt0.c4))))))AND(json(rt1.c2))), TOTAL(rt1.c0) FROM rt1 WHERE ((((NULL)) NOT BETWEEN ((CASE WHEN NULL THEN NULL END)) AND (((~ (NULL))))));SELECT ALL ((((rt0.c3)-(rt0.c2)))>=(CASE WHEN rt0.c0 THEN rt0.c3 END)) FROM rt0, t0 WHERE (CASE WHEN CASE WHEN '1928279863' THEN 0.9975771693748872 WHEN '' THEN '2119723445' WHEN NULL THEN x'' END THEN ((((0.11036253560883158)AND(NULL)))OR(NULL)) END) LIMIT -896002625 OFFSET 1885927919; -- 0ms;
SELECT DISTINCT NTILE(rt0.c0) OVER (), CASE CAST(rt0.c4 AS INTEGER)  WHEN rt1.c2 COLLATE NOCASE THEN ((rt0.c4)LIKE(t0.c8)) END, (((rt0.c3 IN ()))OR((- ('')))) FROM rt0, t0;SELECT NTILE((rt1.c2 IN ())) OVER () FROM t0, rt1 ORDER BY (+ ('')) LIMIT 1750915710; -- 0ms;
SELECT ALL ((rt0.c0) ISNULL) FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND(rt1.c2)))AND(rt0.c2))) BETWEEN ('') AND ((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((0x7068f9ef))))) FROM rt1, rt0, t0; -- 0ms;
SELECT ALL IFNULL(CAST(rt1.c1 AS TEXT), IFNULL(rt0.c2, NULL)), json_object(MIN(rt0.c0), COALESCE(DISTINCT rt1.c2, rt1.c1)), rt0.c3 COLLATE BINARY FROM t0 WHERE (CASE (~ (1936937032))  WHEN CAST('}Iq' AS TEXT) THEN CASE '{^ZT''[e'  WHEN NULL THEN NULL END END) LIMIT 1242458710;SELECT ALL (NOT (((t0.c8) IS TRUE))) FROM t0, rt1 WHERE ((((NULL)) NOT BETWEEN (((711900009 IN ()))) AND ((((((x'')OR('R')))AND(-1.300903694E9)))))); -- 0ms;
SELECT ALL MAX((x'89f9' IN (rt1.c2, rt0.c1))), CAST(rt0.c3 AS NUMERIC), rt0.c4 FROM rt1, t0 WHERE (CAST(((0.690611254764456) IS FALSE) AS TEXT)) GROUP BY ((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN (((rt1.c2) BETWEEN (rt0.c0) AND (''))) AND (((rt1.c0)+('s}')))) LIMIT 424130676 OFFSET 811495131;SELECT (+ (((rt0.c2) IS FALSE))) FROM rt0 WHERE ((((NULL)) BETWEEN ((((NULL)>>(NULL)))) AND ((((NULL) NOTNULL))))) GROUP BY LIKELIHOOD(DISTINCT x'7f15', 0.692433952148478) LIMIT 1820613501; -- 0ms;
SELECT ALL (((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0))))>=(((NOT (rt0.c0))))) FROM rt1, t0, rt0; -- 0ms;
SELECT ALL CAST(SQLITE_COMPILEOPTION_GET(rt0.c1) AS NUMERIC), UPPER(DISTINCT (((t0.c8))=((rt1.c0)))), ((-1826392773)LIKE(IFNULL(rt0.c1, rt0.c0))) FROM rt1;SELECT DISTINCT CAST(((t0.c8) NOT BETWEEN (rt1.c1) AND ('')) AS INTEGER) FROM t0 WHERE ((((NULL IN ())) NOT BETWEEN ('鑏2') AND (((('6/'))<>((NULL)))))) GROUP BY ((CAST(rt0.c4 AS BLOB))=(((t0.c8) NOTNULL))) HAVING CASE WHEN (rt0.c2 IN (rt0.c3)) THEN ((rt0.c0)IS(t0.c8)) END;SELECT DISTINCT ((((((((((((rt0.c0 COLLATE RTRIM)OR(((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c2)))))OR(((NULL)LIKE(rt1.c2)))))AND((NOT (rt0.c0)))))OR(((rt0.c1)||(rt0.c0)))))AND(((x'6dc7') NOT BETWEEN (rt1.c0) AND (rt1.c0)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt1.c0 END)), x'', ((rt0.c4 IN (rt1.c0)) IN ()) FROM rt0;SELECT t0.c8 FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT (t0.c8 IN ()), (~ (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)), CASE WHEN ((rt0.c0)-(rt1.c1)) THEN rt0.c3 END FROM t0, rt1;SELECT DISTINCT (t0.c8 IN ()), (~ (CASE rt0.c4  WHEN t0.c8 THEN rt0.c0 END)), FIRST_VALUE((((((~ (rt1.c0)))OR(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END)))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL))))) OVER () FROM rt1 UNION ALL SELECT ALL LEAD((((((('-1577177046')IS NOT(rt1.c2)))OR(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)))OR(((rt1.c2)<(rt1.c2)))), CAST((rt1.c2 IN ()) AS INTEGER), ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))AND(rt1.c2)))AND((((x'', rt1.c0, rt1.c0))<=((rt1.c1, rt1.c2, rt1.c2)))))) OVER (), (- (CAST(rt1.c0 AS INTEGER))), (((rt0.c2)) NOT BETWEEN ((x'd6f0')) AND ((((rt0.c1)GLOB(t0.c8))))) FROM rt1;SELECT ALL (~ ((('914209549')IS NOT(t0.c8)))) FROM t0 WHERE (((((NULL)AND(x'')))||((((0.10161670981643078))=((NULL)))))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c3 COLLATE RTRIM THEN ((t0.c8)*(rt0.c2)) ELSE NULL END FROM rt0, rt1 WHERE ((((('424499208')LIKE(-965372308)))<=(CASE WHEN 1325844051 THEN 193216037 END))) GROUP BY (((rt0.c3 IN (rt0.c3, rt0.c2)))/(CASE WHEN -1.084009972E9 THEN 0.19417134953750093 END)), ((((((((((rt0.c3)OR(NULL)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c2)))AND(((rt1.c1)GLOB(rt0.c3)))), (CAST(rt0.c2 AS NUMERIC) IN ()) HAVING (((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) BETWEEN ((NOT (rt1.c1))) AND ((NOT (rt1.c2))));SELECT ALL (((((rt0.c3))<>((t0.c8))))<(rt0.c2)) FROM rt0, rt1 WHERE (CAST('GQ*_/2뙅颡G' AS TEXT));SELECT DISTINCT rt0.c1, MAX((- (rt1.c0))), ((((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (NULLIF(rt0.c3, rt1.c1))) FROM rt0, rt1; -- 0ms;
SELECT CAST(CAST(NULL AS INTEGER) AS TEXT) FROM rt1 ORDER BY ((((rt1.c2)>(rt0.c4))) NOT NULL) ASC;SELECT (((((rt0.c0 IN (rt0.c1)))AND((((rt1.c0, rt0.c1, rt0.c1))>((rt1.c2, rt0.c3, rt0.c1))))))OR('' COLLATE RTRIM)), TOTAL(((rt1.c0)!=(rt0.c3))) OVER ( RANGE  CURRENT ROW), ((COUNT(*))IS NOT(NULL)) FROM t0 WHERE (CASE WHEN '0.8955196394517579' THEN NULL ELSE 0xffffffffb364c618 END COLLATE RTRIM);SELECT ALL CASE UPPER(DISTINCT rt0.c0)  WHEN 2014531759 THEN ((rt0.c3)<<(rt0.c1)) ELSE x'' END, ((((((rt0.c3) NOT NULL))AND(((rt0.c4)<(rt1.c2)))))OR(load_extension(rt0.c2, rt0.c3))), TOTAL(rt0.c4) OVER (), ROW_NUMBER() OVER (), 0.57344471966318 FROM rt0, rt1;SELECT DISTINCT ((CAST(rt0.c1 AS BLOB))GLOB(((x'') BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0, t0 WHERE ((('0.01244120944059457')AND((0.3927295211460975 IN (1308024276))))); -- 0ms;
SELECT ALL x'' FROM rt1, t0 GROUP BY (((((((rt0.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c3))))AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt1.c0)))))OR(0.6167474591000974)) LIMIT 1212849970 OFFSET -1364254260;SELECT SUM(rt0.c0) COLLATE RTRIM FROM rt0, t0, rt1; -- 0ms;
SELECT ALL CAST(((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c1)) AS REAL), ((((rt0.c0) IS FALSE)) BETWEEN (LIKELIHOOD(rt0.c2, 0.26220204404600433)) AND ((rt1.c0 IN ()))), TOTAL(((rt1.c0)/(rt0.c2)) COLLATE NOCASE) OVER () FROM rt1, rt0, t0 ORDER BY ((((((rt0.c4, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, x'', x'')) AND ((rt1.c2, rt0.c0, rt1.c2)))))<=((t0.c8))) ASC  NULLS FIRST, ((rt0.c1)%(rt1.c2)) COLLATE BINARY ASC; -- 0ms;
SELECT DISTINCT ((CAST(t0.c8 AS BLOB))&(CAST(rt0.c3 AS BLOB))), HEX(DISTINCT LIKE(rt0.c3, NULL)), ((((rt0.c3)<<(rt1.c2)))>((((rt0.c4, rt0.c3, rt0.c2)) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt0.c3, rt0.c3, rt0.c4))))), ((((t0.c8) BETWEEN (rt0.c3) AND (x''))) ISNULL), CASE WHEN CAST(x'' AS TEXT) THEN (((rt0.c0))<=((rt0.c2))) WHEN TOTAL(rt1.c0) THEN (((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN rt0.c4 COLLATE NOCASE THEN ((NULL)<(x'')) ELSE ((rt0.c2)-(rt1.c1)) END FROM rt0 WHERE (UNLIKELY(DISTINCT ((('-1896121787', x'e7d0', '', '-*kc?3', NULL)) NOT BETWEEN ((x'', '291258793', '1235649226', 'x<', '154079505')) AND ((x'', '-173362979', '0.9776810218879936', '-1595720873', '1976668921')))));SELECT CAST(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c2)) AS REAL) FROM rt0, rt1, t0 EXCEPT SELECT DISTINCT (~ (rt0.c2)) FROM t0, rt0 ORDER BY ((~ (NULL)) IN ())  NULLS LAST, ((CAST(rt1.c2 AS INTEGER)) IS FALSE)  NULLS LAST, ((rt1.c0 COLLATE RTRIM) IS TRUE)  NULLS FIRST;SELECT DISTINCT ((CAST(rt1.c1 AS REAL))|(((rt1.c2)+(rt0.c4)))) FROM rt1, t0, rt0 WHERE ((((x'')) BETWEEN ((0.34039243860638146 COLLATE NOCASE)) AND ((((0xf5f4c3)-(NULL)))))) GROUP BY (((((rt1.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))<(((((((((rt0.c3)AND(rt0.c2)))AND(rt1.c0)))AND(NULL)))AND(t0.c8)))), (~ (((rt0.c1)!=(rt0.c4)))), ((((rt1.c2)<(0X5eb8ba65)))!=((- (rt0.c2)))) ORDER BY (~ (((rt0.c2)>>(t0.c8)))) DESC, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 END))  NULLS LAST; -- 0ms;
SELECT ((((((rt1.c1)OR(rt0.c1)))OR(rt0.c1)))GLOB(MAX(rt0.c1))) FROM rt0;SELECT ALL ((((t0.c8)|(t0.c8))) IS FALSE), TOTAL((~ (rt0.c3))) COLLATE RTRIM, GROUP_CONCAT(((rt0.c2)<=(rt0.c0))) FROM rt1, rt0;SELECT ((((((t0.c8)OR(rt1.c1)))OR(NULL)))>(CAST(rt0.c2 AS BLOB))) FROM t0 NATURAL JOIN rt0;SELECT (((((t0.c8, rt1.c2, rt0.c3)) NOT BETWEEN ((rt1.c0, rt0.c2, -1974977168)) AND ((rt0.c2, rt0.c1, t0.c8))))!=(x'')) FROM t0;SELECT DISTINCT CAST(((rt0.c2) BETWEEN (t0.c8) AND (rt1.c0)) AS BLOB) FROM t0;SELECT CAST(((rt0.c2) NOT BETWEEN (rt0.c4) AND (t0.c8)) AS REAL) FROM rt0, t0, rt1 WHERE (COALESCE(DISTINCT 0.0, 1732516178, 0.2768615212761605, '', NULL, '-1409195983') COLLATE BINARY) ORDER BY rt0.c1 DESC LIMIT 337343148; -- 0ms;
SELECT ((TRIM(DISTINCT '')) NOT BETWEEN ((~ ('832897201'))) AND (NULL COLLATE RTRIM)) FROM t0 GROUP BY TOTAL_CHANGES(), ((((rt0.c0) NOT NULL))<((NOT (rt0.c1)))), CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt1.c0 END COLLATE BINARY HAVING (NOT (rt0.c4 COLLATE NOCASE));SELECT ALL (NOT (((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c3)))) FROM t0, rt0 NOT INDEXED;SELECT DISTINCT CASE NULL  WHEN rt1.c2 COLLATE BINARY THEN ((rt0.c3) NOT NULL) END, json_object(CASE rt1.c2  WHEN rt0.c1 THEN t0.c8 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c3 THEN rt0.c4 END, CASE WHEN '' THEN rt0.c1 END, ((((t0.c8)AND(NULL)))OR(rt1.c1)), CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END), ((UNLIKELY(rt0.c1)) NOT BETWEEN (TOTAL(rt0.c1)) AND (((t0.c8) BETWEEN (rt0.c1) AND (rt1.c1)))) FROM rt1, rt0 ORDER BY rt0.c2  NULLS FIRST, (((CASE t0.c8  WHEN rt1.c0 THEN rt0.c4 END))>=(((+ (rt0.c4)))))  NULLS LAST, ((((((NULL)) BETWEEN ((rt0.c2)) AND ((t0.c8)))))<>((((rt0.c4)GLOB(rt0.c1))))) DESC  NULLS FIRST, (((rt0.c0) ISNULL) IN ()) DESC LIMIT 896240363 OFFSET -1854244427;SELECT DISTINCT CASE ((rt0.c4)IS(rt0.c1))  WHEN (rt0.c2 IN ()) THEN ((rt0.c4) NOT NULL) WHEN ((((rt0.c0)AND(rt1.c2)))AND(t0.c8)) THEN CASE rt0.c3  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c0 END WHEN '0.5340741316590046' THEN ((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2)) ELSE NULLIF(DISTINCT rt0.c2, rt0.c0) END FROM t0, rt1 WHERE (x'');SELECT DISTINCT (((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))||((+ (rt0.c4)))), (NOT (((((((((rt1.c2)OR(rt1.c1)))AND(rt0.c2)))OR(t0.c8)))AND(rt0.c1)))), CAST((((rt1.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) AS NUMERIC) FROM t0, rt0 GROUP BY CASE WHEN CASE WHEN rt0.c0 THEN t0.c8 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END THEN ((rt1.c1)OR(rt0.c3)) WHEN ((((rt0.c4)AND(t0.c8)))AND(rt0.c0)) THEN ((((((((t0.c8)OR(t0.c8)))OR(NULL)))OR(rt0.c1)))OR(x'4a8d')) WHEN CASE rt0.c3  WHEN rt0.c2 THEN NULL WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c1 END THEN ((0.7991239661204346) NOT BETWEEN (rt0.c0) AND (NULL)) ELSE CAST(rt1.c1 AS INTEGER) END;SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY CAST(((((rt0.c0)OR(rt1.c1)))AND('䖏U')) AS BLOB)) FROM rt0, t0 WHERE (CAST(NULL COLLATE NOCASE AS INTEGER));SELECT DISTINCT ((rt0.c3)IS NOT(((rt1.c2) BETWEEN (rt0.c3) AND (t0.c8)))) FROM rt1, t0, rt0 WHERE (((TRIM(NULL))<(((NULL) BETWEEN (NULL) AND ('706906151'))))); -- 0ms;
SELECT DISTINCT (rt0.c0 COLLATE RTRIM IN ()) FROM t0 WHERE (((((0Xffffffffbb02d7ea) BETWEEN (NULL) AND (x''))) IS TRUE)); -- 0ms;
SELECT ALL ((+ (rt0.c3)) IN (rt0.c0)) FROM t0, rt1;SELECT (((((rt0.c0)AND(NULL)))OR(rt0.c0)) IN ()) FROM rt0, t0 WHERE (((((0.04174137781848575)OR(('982553652' IN ()))))OR(ABS(DISTINCT x'')))); -- 0ms;
SELECT DISTINCT 0x30676314, COUNT(LIKELY(rt0.c2)) OVER (), ((((((((rt0.c4)AND(rt1.c0)))AND(x'')))OR(rt0.c0)))AND(rt0.c3)) COLLATE BINARY FROM rt0, rt1 WHERE ((+ (CASE WHEN 'Jn' THEN 0.37913863744900544 ELSE 0xfffffffff07b1fba END))); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c4 AS REAL) AS REAL), ((((rt0.c3, 0.6960150518303514, rt1.c2))<=((rt1.c2, rt0.c3, rt0.c0))) IN (CASE rt1.c0  WHEN NULL THEN rt0.c3 ELSE rt0.c4 END)), (((((rt1.c1)<('')), (((t0.c8)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))), ((rt0.c0)||(rt0.c4)), ((((t0.c8)OR(rt1.c2)))AND(rt1.c2)), CAST(rt0.c3 AS BLOB)))==((CASE rt0.c0  WHEN x'8153' THEN '1700762311' ELSE rt0.c4 END, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)), CASE WHEN rt0.c3 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c1 END, CASE x'4ec3'  WHEN rt1.c2 THEN t0.c8 ELSE t0.c8 END, ((rt0.c0)LIKE(rt0.c0))))) FROM t0;SELECT DISTINCT ((rt0.c3 IN (rt0.c2, rt1.c2)) IN ()) FROM rt0 WHERE ((((((('-1568506848')AND('1986010735')))AND(x''))) ISNULL)); -- 1ms;
SELECT ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (((rt1.c2) NOT BETWEEN (rt0.c0) AND (t0.c8)))), MIN(((rt0.c0) NOT NULL)), ((((CAST(t0.c8 AS NUMERIC))OR(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt1.c2)))OR(rt0.c2)))))OR(((rt1.c0)IS NOT(rt0.c4)))) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c1, rt0.c3, rt0.c0))!=((rt0.c3, rt1.c2, rt1.c2))) THEN (+ (rt0.c3)) END FROM rt0;SELECT ALL NULL COLLATE RTRIM FROM rt0 WHERE ((((0.20092574710659306)) BETWEEN ((CASE x''  WHEN NULL THEN 'uE' ELSE '' END)) AND (('222119877')))) LIMIT -511325743; -- 0ms;
SELECT ALL ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))|(((rt0.c2) NOT BETWEEN (t0.c8) AND (rt0.c3)))), GROUP_CONCAT((((rt1.c1, rt0.c4, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, t0.c8)) AND ((rt0.c0, rt0.c1, NULL)))) OVER ( ORDER BY 0.5258264722022933 ASC), (((rt0.c0)) NOT BETWEEN (((+ (rt0.c1)))) AND ((CAST(t0.c8 AS BLOB)))) FROM t0;SELECT DISTINCT ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))>(((rt0.c3)+(rt0.c0)))) FROM rt1 WHERE (TYPEOF((('-1411265318')<=('0.06880469839107584')))) ORDER BY ((((highlight(rt1.c0, rt0.c3, rt1.c0, rt0.c2))AND(CAST(rt0.c0 AS INTEGER))))OR(rt1.c1));SELECT DISTINCT ((((((((rt0.c2)OR(t0.c8)))AND(t0.c8)))AND((((rt0.c3, t0.c8, rt0.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, rt0.c0)) AND ((rt0.c3, rt0.c1, t0.c8))))))OR((((t0.c8, rt0.c0, rt0.c3))=((rt0.c4, rt0.c4, rt0.c2))))), ((SUM(rt0.c0))<(rt1.c0 COLLATE BINARY)), ((CAST(rt0.c4 AS NUMERIC)) NOT BETWEEN ((((rt0.c0, rt0.c4, '1546629922'))>((rt0.c0, rt0.c1, rt1.c0)))) AND ((rt0.c3 IN (rt0.c2)))) FROM rt0, rt1 ORDER BY ((rt1.c0) BETWEEN (t0.c8) AND (rt0.c4)) COLLATE NOCASE  NULLS LAST;SELECT (((MAX(rt1.c2)))>=((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))))) FROM t0, rt0, rt1 WHERE ((CAST(0.2034562673715734 AS INTEGER) IN (ABS(NULL)))); -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS TEXT) FROM rt1; -- 1ms;
SELECT DISTINCT '914209549' FROM t0 WHERE (((((CAST('M⾤U(J/r' AS NUMERIC))AND(((0Xffffffffbf959d2d) IS FALSE))))OR('-2094674081' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT AVG(rt0.c2 COLLATE BINARY COLLATE RTRIM), ((((rt0.c0)<=(rt0.c3)))IS NOT(((rt0.c4)<>(rt0.c2)))), TRIM(((rt0.c4) NOTNULL), ((rt0.c2)-(rt0.c1))) FROM rt0, t0; -- 0ms;
