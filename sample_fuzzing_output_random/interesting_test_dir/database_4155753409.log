-- Time: 2024/06/07 12:15:33
-- Database: database9
-- Database version: 3.40.0
-- seed value: 4155753409
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 INT ); -- 2ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, +c3 BLOB ); -- 5ms;
ANALYZE; -- 2ms;
PRAGMA temp.optimize; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i9 ON t0(((DATE(c0, c0, c0))GLOB(((c0) NOT NULL))) ASC) WHERE (((c0))>=((((c0)/(c0))))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i13 ON t0(((CAST(c0 AS INTEGER))<>(CASE WHEN c0 THEN c0 ELSE c0 END)) DESC) WHERE ((0.29362097002218035) NOT BETWEEN (CAST(c0 AS NUMERIC)) AND (((c0)OR(c0)))); -- 0ms;
ANALYZE i9; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('', '0.29362097002218035', 1562399122, '1562399122'), (0.2493150360140759, x'adf4', 0.10807802876882433, ')g7*pYwA'), (x'', 0x5d205192, x'7833', 0.4593953937960741); -- 0ms;
UPDATE OR FAIL t0 SET c0=x'' WHERE t0.c0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET (c0, c0)=(0.2498376609196966, 1562399122); -- 1ms;
UPDATE OR ABORT t0 SET c0='+++ufE)'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(x'8ac745d0', NULL) WHERE (((t0.c0)) BETWEEN ((CAST(t0.c0 AS REAL))) AND ((((t0.c0)>>(t0.c0))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c3, c2, c0) VALUES (NULL, NULL, 1.562399122E9, '1562399122'); -- 0ms;
PRAGMA cache_spill; -- 1ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
UPDATE OR IGNORE rt1 SET c2='963968971' WHERE rt1.c1; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 5ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, languageid="lid"); -- 2ms;
CREATE UNIQUE INDEX IF NOT EXISTS i87 ON t0(((((c0)>(c0)))LIKE(c0))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i84 ON t0((((('')OR(c0 COLLATE BINARY)))AND(CAST(c0 AS TEXT))) COLLATE BINARY) WHERE ((CAST(c0 AS BLOB))<>((~ (c0)))); -- 0ms;
PRAGMA mmap_size; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('-621727873', 0.8536201407864279) WHERE ((((t0.c0)|(t0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND ((NULL IN (t0.c0)))); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'f39b', NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c3, c2, c1) VALUES (x'bc83', NULL, 't\rUt', x''); -- 1ms;
COMMIT; -- 0ms;
UPDATE rt0 SET c2=0.8536201407864279; -- 1ms;
PRAGMA auto_vacuum; -- 1ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''); -- 1ms;
SELECT rtreecheck('rt1'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1398464566,6');\n; -- 0ms;
CREATE INDEX IF NOT EXISTS i75 ON t0((~ (((c0)<>(c0))))) WHERE CASE WHEN ((c0)-(c0)) THEN ((c0)>(c0)) WHEN ((c0)-(c0)) THEN c0 COLLATE RTRIM WHEN ((c0)LIKE(c0)) THEN ((c0) IS TRUE) END; -- 0ms;
CREATE UNIQUE INDEX i1 ON t0((((c0 IN ())) ISNULL) COLLATE BINARY) WHERE (((c0 IN ()))LIKE(((c0) NOTNULL))); -- 0ms;
CREATE INDEX IF NOT EXISTS i20 ON t0(((((((NULL)==(c0)))OR(((c0) NOT NULL))))AND(CAST(c0 AS BLOB))) COLLATE RTRIM ASC) WHERE ((((c0)/(c0))) BETWEEN ((NOT (c0))) AND (c0)); -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 AFTER UPDATE ON t0 BEGIN DELETE FROM vt0;END; -- 1ms;
UPDATE vt0 SET (c0)=(x'') WHERE CAST((vt0.lid IN ()) AS NUMERIC); -- 0ms;
UPDATE rt1 SET c2=NULL; -- 0ms;
DROP TABLE t0; -- 2ms;
PRAGMA default_cache_size; -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-180749214,6');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=348439277,13');\n; -- 0ms;
INSERT OR FAIL INTO rt1(c2, c0, c1, c3) VALUES (0.23985024451221715, 0xffffffff814a713a, -2125827782, NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES ('l', 0.521064909318639, 509935941, x''), ('j>C', NULL, NULL, 0.5141835776187508), (NULL, '-180749214', '-1991383009', x''); -- 0ms;
INSERT OR ROLLBACK INTO vt0(lid, c0) VALUES (0x535ae036, -1500981067); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '9992'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '48450'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 1ms;
INSERT OR FAIL INTO rt1(c1, c0, c2, c3) VALUES (x'fbbd', 475942027, NULL, 0.4593953937960741); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, lid) VALUES (0.005916115691011248, 0.23274142010428978), (NULL, x''), (NULL, x'ceb0'); -- 0ms;
INSERT OR ABORT INTO rt1(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.170226449472349); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=('[虺P**PBuL') WHERE ((((vt0.c0)/(vt0.lid)))IS NOT(vt0.c0)); -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('}R_*1V7'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ROLLBACK rt1 SET c0=-875135255 WHERE rt1.c0; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c3, c0)=('', NULL) WHERE (((rt1.c2, x'', rt1.c3, rt1.c2, 0X1e650145)) BETWEEN ((TOTAL_CHANGES(), rt1.c1 COLLATE RTRIM, (((rt1.c0))<=((rt1.c2))), 0.061837399703481344, (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))))) AND ((((rt1.c3)-(rt1.c0)), rt1.c0 COLLATE NOCASE, ((rt1.c0)=(NULL)), ((rt1.c3) IS FALSE), (rt1.c3 IN ())))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c0)=(0Xffffffffd7d90062) WHERE x''; -- 0ms;
UPDATE OR IGNORE t0 SET c0='[虺P**PBuL'; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (1373524284, 'n,(V'), ('-2125827782', 0.670388229440142), ('+p', 0.4593953937960741); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(0.0); -- 0ms;
ROLLBACK TRANSACTION; -- 6ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=462270036,12');\n; -- 0ms;
ALTER TABLE t0 ADD COLUMN c68 REAL; -- 0ms;
INSERT OR REPLACE INTO t0(c0, c68) VALUES (739411325, 'nWLJ	<Ht'), (0Xffffffffd38766ee, '0.061837399703481344'), (x'', '348439277'); -- 0ms;
INSERT OR FAIL INTO rt1(c1) VALUES ('ꋯ죷'); -- 5ms;
UPDATE OR IGNORE rt1 SET c2=x'7b20f1e57f1e' WHERE 0.8176206409911205; -- 4ms;
END; -- 0ms;
INSERT OR FAIL INTO vt0(lid) VALUES ('-1123366665'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES ('', x'', x'51e5'), (NULL, NULL, NULL), (0.0508789481485894, NULL, '-594869931'), ('0.005916115691011248', '0.170226449472349', x'5af9'), (x'', x'be47', '-2077860197'); -- 2ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (lid)=(0.49853538774783723); -- 1ms;
UPDATE OR IGNORE t0 SET c68=0Xffffffffe507fbd7, c0=NULL WHERE ((((t0.c68)IS(t0.c0))) NOT BETWEEN ((((t0.c0))<>((x'')))) AND (((((((((t0.c0)OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL, x'29e8', '1180684855', -854856730, NULL, 0.7886032020619722, 'j>C'))<=((x'48092813', x'', '', 0xffffffffff47a3ca, 0.3495889225469332, '-1600389390', x''))) THEN (- (NULL)) ELSE (('54') NOT BETWEEN (0.4612757507494045) AND (x'')) END; -- 0ms;
UPDATE rt0 SET (c0)=(x''); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.36402064576093074, lid='' WHERE (((((((vt0.lid)OR(vt0.c0)))OR(vt0.lid))))<((0.15351129030202348 COLLATE BINARY))); -- 0ms;
INSERT OR ABORT INTO rt1(c1) VALUES ('1562399122'); -- 0ms;
INSERT OR FAIL INTO vt0(c0, lid) VALUES ('739411325', x'250b'); -- 4ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
REINDEX; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((NULL) NOTNULL), ('S(h' IN ())); -- 0ms;
ALTER TABLE t0 ADD COLUMN c84 INT; -- 0ms;
ANALYZE rt1; -- 3ms;
UPDATE OR REPLACE t0 SET c0=x'df84'; -- 0ms;
VACUUM; -- 2ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c68 TO c58; -- 1ms;
UPDATE rt0 SET c2=2021922049; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=('') WHERE ((rt0.c0)IS(CAST(rt0.c1 AS REAL))); -- 0ms;
UPDATE OR IGNORE t0 SET (c58, c84)=(x'', x'') WHERE ((t0.c84 COLLATE BINARY) NOT BETWEEN (CASE WHEN x'f2f5' THEN t0.c58 END) AND ((t0.c58 IN ()))); -- 0ms;
PRAGMA main.cell_size_check = true; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, 0.9027650571907427, NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c58, c84) VALUES (x'', '-180749214'), (x'4687', x''), (x'', x''), (NULL, 'q'), (418229988, '-594869931'), (NULL, '0.7886032020619722'), ('h*{&r蜜D~', NULL); -- 1ms;
UPDATE OR ROLLBACK rt0 SET c2=0Xffffffff972ae05e, c1='1715166589' WHERE (((((rt0.c0 IN (0x40faaee7, rt0.c1)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rt0.c0 COLLATE NOCASE)); -- 0ms;
INSERT OR ABORT INTO t0(c0, c58, c84) VALUES ('', '113214931', '1275133006'); -- 0ms;
INSERT OR ABORT INTO t0(c84, c0, c58) VALUES ('峧PQ_', 4.75942027E8, '\n[%2ejU'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c0)=(-197043406, 0.8536201407864279); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 2ms;
COMMIT; -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT 576550753 FROM vt0, rt0, t0, rt1; -- 0ms;
SELECT CASE 0.7886032020619722  WHEN ((vt0.c0) ISNULL) THEN IFNULL('', rt1.c0) ELSE (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) END FROM rt1, t0;SELECT ALL CASE WHEN CASE WHEN rt1.c1 THEN t0.c0 END THEN ((rt0.c1)-(t0.c84)) WHEN 0xffffffffc7ef34cf THEN ((rt1.c0)<>(rt1.c2)) WHEN vt0.c0 COLLATE BINARY THEN (('-180749214') NOT BETWEEN (rt0.c1) AND ('1090170599')) ELSE rt1.c0 END FROM rt0, vt0, t0;SELECT DISTINCT ((((((((((rt1.c2) NOTNULL))OR(((t0.c84)<<(rt1.c2)))))AND(((t0.c84) NOT NULL))))AND((+ (rt1.c3)))))AND(((((((((((((rt1.c0)OR(rt1.c1)))OR(vt0.c0)))AND(vt0.lid)))OR(rt0.c0)))OR(rt0.c2)))AND(1.13214931E8)))) FROM rt0 WHERE (((((((((NULL)AND('EYF_NQ蜜rC')))AND(x'')))AND(x'ef62')))OR(((x'') NOTNULL))));SELECT ALL ((SQLITE_COMPILEOPTION_GET(rt1.c1)) BETWEEN (CASE WHEN rt1.c0 THEN t0.c58 END) AND (((((t0.c0)OR(t0.c84)))OR(rt1.c0)))), CAST(((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)) AS NUMERIC), 0.49853538774783723 FROM rt1, rt0, vt0 WHERE (((('462270036')<>('963968971')) IN (((('963968971')) BETWEEN ((0Xffffffffdaf12f7f)) AND ((''))))));SELECT DISTINCT DENSE_RANK() OVER (), x'', TRIM(TRIM(DISTINCT rt1.c1)) FROM rt0, rt1 WHERE (((0.8322312134067226) ISNULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST(((rt1.c0)&(rt1.c1)) AS REAL), (((CAST(rt1.c1 AS TEXT)))=((LAST_INSERT_ROWID()))), ((rt0.c1) BETWEEN (0.15351129030202348 COLLATE BINARY) AND (((vt0.c0)>=(rt1.c2)))) FROM rt1 FULL OUTER JOIN vt0 ON CASE ((vt0.c0) ISNULL)  WHEN ((rt1.c0)IS(vt0.c0)) THEN (('t\rut')*(rt1.c0)) ELSE t0.c58 END WHERE ((~ ((((((((('509935941')AND('mZ')))OR('')))AND(0.47098765761027717)))AND('J>C')))));SELECT ((LIKELIHOOD(rt1.c0, 0.987441308849059))/((~ (x'')))), (CAST(rt1.c0 AS INTEGER) IN ((+ (rt1.c2)))), CAST(GROUP_CONCAT(rt1.c1) AS NUMERIC) FROM rt1, t0, rt0, vt0 WHERE (CAST(45554689 AS INTEGER)); -- 0ms;
SELECT ((x'e96e')<(((vt0.c0)AND(vt0.c0)))), LIKELIHOOD(DISTINCT ((rt1.c2)-(rt0.c0)), 0.9776815866112353), '0' COLLATE NOCASE FROM rt0, vt0, t0 WHERE (((((NULL) IS TRUE)) NOT BETWEEN ((((x''))<>((x'8293')))) AND ((('-1084258532') BETWEEN ('-12082230') AND (-1758797730))))) ORDER BY (+ ((+ (rt1.c3))));SELECT CAST(((((t0.c58)AND(rt0.c2)))OR(rt0.c0)) AS NUMERIC) FROM vt0, rt1 WHERE (LOWER((('-1821437122') NOT NULL)));SELECT ALL (((((rt0.c1)OR(vt0.c0))))<>((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))), GROUP_CONCAT(((rt0.c1) IS TRUE)), ((rt0.c2) NOTNULL), TOTAL(vt0.lid), (((((t0.c84))<=((rt1.c3)))) ISNULL) FROM t0;SELECT ALL (((vt0.lid)) NOT BETWEEN ((((((((((rt0.c1)AND(rt1.c3)))AND(rt0.c0)))OR(x'')))AND(rt1.c1)))) AND ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) FROM vt0, rt1 WHERE (-1.500981067E9);SELECT DISTINCT ((((((((rt1.c0)AND(t0.c84)))AND(rt0.c0)))AND((NOT (rt0.c2)))))AND(0.3259510656007494)) FROM rt1, t0 WHERE (((((x'47f8') NOT NULL)) BETWEEN ((x'5ca2' IN ())) AND (((0Xffffffffbf5f871c) NOTNULL))));SELECT ALL ((((((rt1.c3)AND(rt1.c0)))OR(t0.c58))) NOT BETWEEN (((rt1.c2) BETWEEN ('#&!1l') AND (NULL))) AND (((rt1.c3) BETWEEN (rt1.c2) AND (t0.c58)))) FROM rt1 ORDER BY CAST(LIKELIHOOD(DISTINCT -786762980, 0.738681396761007) AS REAL) ASC;SELECT DISTINCT LEAD((+ ((vt0.lid IN (vt0.lid)))), ((((((0.10661988016149371)OR(t0.c84)))OR(vt0.lid))) NOT BETWEEN (json_array(NULL, t0.c84, vt0.lid, t0.c0)) AND (CAST(t0.c58 AS BLOB))), (((vt0.c0 IN (t0.c84))) BETWEEN ((vt0.c0 IN (vt0.lid, 0.670388229440142))) AND (((vt0.c0)>=(t0.c0))))) OVER () FROM vt0, t0 GROUP BY rt1.c3, CASE SQLITE_COMPILEOPTION_GET(rt1.c2)  WHEN ((rt0.c1)|(rt0.c1)) THEN t0.c0 END, (((((((rt1.c0)OR(t0.c0)))OR(t0.c58))))!=((((rt1.c0)LIKE(t0.c0)))));SELECT ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN x'' WHEN t0.c0 THEN rt0.c2 ELSE -1219859338 END)<<(t0.c58)) FROM rt1, vt0, rt0 WHERE (((0.364748908719009)<=(363176149 COLLATE BINARY)));SELECT DISTINCT CAST(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c84 END AS REAL) FROM rt0, vt0 WHERE (LTRIM(((0.5976681214196886)OR(NULL))));SELECT ALL (((((t0.c58)AND(vt0.lid)))OR(vt0.c0)) IN ()) FROM t0 WHERE (CASE (1715166589 IN ())  WHEN 0.10901347393594651 THEN (((0.4612757507494045, 0.8412445120297194, -9.40624689E8))>=((0.2876888152220367, x'', NULL))) WHEN NULL THEN (- ('363176149')) WHEN ((0.42758960035720195) IS TRUE) THEN ((x'') IS FALSE) ELSE ((736881885) BETWEEN (x'') AND (NULL)) END) LIMIT -1123366665 OFFSET -1491335167; -- 1ms;
SELECT DISTINCT AVG(rt0.c2) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt0, vt0, t0, rt1; -- 0ms;
SELECT ((((0.2498376609196966)AND(rt1.c0)))OR(rt0.c2)) COLLATE BINARY, ((COUNT(rt0.c1)) BETWEEN (SUM(NULL)) AND (((((rt0.c2)OR(rt1.c3)))OR(rt0.c1)))), SQLITE_COMPILEOPTION_USED(TRIM(t0.c0)) FROM rt0, vt0, rt1 LIMIT 418229988;SELECT DISTINCT (~ (((rt1.c3) IS TRUE))), (((rt1.c0)) BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c1) IS TRUE)))), CASE (((rt1.c1)) NOT BETWEEN ((0.6901154161550871)) AND ((rt1.c0)))  WHEN ((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)) THEN (~ (x'')) WHEN rt0.c1 THEN (((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN rt1.c1 COLLATE RTRIM THEN CAST(t0.c58 AS BLOB) WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c0) IS FALSE) WHEN ((vt0.lid) IS FALSE) THEN CAST(t0.c58 AS INTEGER) END FROM rt0, vt0, t0 ORDER BY CASE (('') NOT BETWEEN (t0.c0) AND (vt0.c0))  WHEN (t0.c58 IN ()) THEN ((rt0.c2)OR(t0.c58)) ELSE CASE WHEN rt0.c1 THEN '' WHEN t0.c0 THEN t0.c58 WHEN vt0.lid THEN vt0.lid ELSE t0.c58 END END DESC  NULLS LAST, ((((((0.6076740198677355)+(vt0.lid)))AND(rt1.c3 COLLATE BINARY)))AND(NULL));SELECT DISTINCT (~ (((rt0.c0)<=(rt1.c1)))) FROM rt0, t0, vt0, rt1; -- 0ms;
SELECT (- ((rt0.c0 IN ()))) FROM rt0 WHERE ((- (((((-1.491335167E9)AND(0xffffffffe8d47993)))OR(702839467))))); -- 0ms;
SELECT DISTINCT '1821151144' FROM rt1, vt0, t0, rt0 GROUP BY ((((rt0.c1)OR((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))))AND(((t0.c0) BETWEEN (rt1.c2) AND (rt0.c1)))), (- ((+ (vt0.lid)))), (('[FLGOx(7') BETWEEN (((rt0.c0)!=(rt1.c3))) AND (((((t0.c58)OR(t0.c58)))OR(rt1.c1)))) LIMIT 509935941 OFFSET 418229988; -- 0ms;
SELECT ALL t0.c58 FROM rt0 ORDER BY CASE WHEN ((((vt0.c0)OR(t0.c58)))OR(rt0.c1)) THEN ((rt0.c0)OR(rt0.c1)) WHEN (vt0.lid IN ()) THEN ((rt1.c0)%(0.13565627843482875)) WHEN ((t0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) THEN ((rt0.c2) BETWEEN (rt1.c3) AND (t0.c0)) ELSE ((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c1)) END;SELECT DISTINCT SUM((- (t0.c0))) OVER () FROM vt0 NOT INDEXED, rt1, rt0, t0 WHERE ((((('峧PQ_') NOT BETWEEN (NULL) AND ('KHL5U5'))) BETWEEN (NULL COLLATE NOCASE) AND (CAST(0Xffffffffad5fe841 AS TEXT)))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.lid) IS FALSE))OR(rt1.c2)))AND(((rt0.c0)>(t0.c0)))))AND(((0.005556424289685391)+(rt1.c2)))))OR((((rt0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c58))))) FROM rt0, rt1, vt0, t0 WHERE (((CASE WHEN 0.048726066930842915 THEN x'' WHEN NULL THEN 'VD(' WHEN 0.8930624249412035 THEN 'q' ELSE x'' END) NOT BETWEEN ((0Xfffffffff45f19e1 IN ())) AND (((x'') ISNULL)))) GROUP BY ((rt1.c1) BETWEEN ('6{J<OF]6') AND (((t0.c84)!=(t0.c0)))) ORDER BY (CAST(rt0.c2 AS INTEGER) IN ((((vt0.lid)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0)))))  NULLS LAST, CASE ((rt0.c2) IS FALSE)  WHEN (rt0.c0 IN (rt0.c0)) THEN UNLIKELY(DISTINCT rt1.c3) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.lid)AND(t0.c58)))OR(t0.c58)) WHEN CAST(vt0.c0 AS REAL) THEN ((rt0.c1) IS TRUE) WHEN rt0.c0 COLLATE NOCASE THEN CASE WHEN rt1.c3 THEN t0.c84 ELSE rt0.c0 END WHEN rt1.c2 THEN ((((t0.c58)OR(rt0.c0)))OR(t0.c0)) ELSE ((rt1.c0) ISNULL) END, (('T!m')IS NOT(((NULL)>=(rt1.c2)))) DESC; -- 0ms;
SELECT ALL CAST(((0X3d82dce)<<(rt0.c2)) AS NUMERIC) FROM t0 WHERE (((NULLIF(DISTINCT '0.8412445120297194', '67229031')) BETWEEN (CASE '400223396'  WHEN '' THEN 'N,(V' WHEN 5.76550753E8 THEN 0.11290004415824628 WHEN NULL THEN x'' ELSE x'' END) AND (('#r' IN ()))));SELECT DISTINCT (+ (((vt0.c0) NOTNULL))) FROM t0, vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((COUNT(*))>>(CAST(rt0.c1 AS NUMERIC))) FROM rt0, vt0, rt1, t0 WHERE ((((+ ('67229031')))OR((('*axN')<('-180749214'))))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt1, rt0 NOT INDEXED WHERE ((((0Xffffffffcd608f14) IS FALSE) IN ())); -- 0ms;
SELECT ALL (COUNT(*) IN ()) FROM t0, rt1, vt0 WHERE ((((((- ('p3e[\n')))AND(LIKELY(0.6295059276527115))))OR(((0.7553774416705074)>=(x''))))); -- 0ms;
SELECT ALL (~ (((rt1.c3) BETWEEN (rt1.c1) AND (x'')))) FROM vt0, rt0, t0 GROUP BY ((((((rt1.c2)OR(x'')))AND(t0.c0))) IS FALSE);SELECT (((rt1.c0 COLLATE RTRIM))>=((((t0.c0)|(vt0.c0))))) FROM rt0, vt0, t0, rt1 ORDER BY (((NOT (vt0.lid)))AND(CASE WHEN NULL THEN t0.c58 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST, (((((((rt0.c0, rt0.c1, vt0.lid)) BETWEEN ((rt0.c2, vt0.lid, '<BwJ罚H')) AND ((rt1.c1, rt0.c1, rt1.c3))))AND(CAST(rt1.c0 AS TEXT))))OR((- (x'')))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL CASE CAST(NULL AS INTEGER)  WHEN ((((vt0.lid)AND(rt0.c2)))AND(vt0.c0)) THEN TRIM(rt1.c0) END FROM rt0, vt0 WHERE (CAST(NULL COLLATE RTRIM AS REAL));SELECT ALL CASE ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2))  WHEN TOTAL(rt1.c1) THEN ((rt1.c1)OR(rt1.c3)) END FROM rt1, rt0 GROUP BY t0.c84;SELECT ALL ((COUNT(*))*(rt1.c0 COLLATE RTRIM)) FROM t0, rt1, rt0; -- 0ms;
SELECT ((((((rt1.c1)>>(-8.5485673E8)))AND((+ (rt1.c0)))))AND(((vt0.c0)AND(t0.c58)))), ((((vt0.c0) NOT NULL)) NOT NULL), (CAST(rt1.c1 AS BLOB) IN ()) FROM vt0, rt0, t0 WHERE (((((((((CASE WHEN x'' THEN x'ac01' WHEN x'' THEN 0x29e47aab WHEN NULL THEN '' ELSE '-2125827782' END)AND(((x'') NOT NULL))))AND(('-1672154723' IN ()))))AND(((0X8c8c659) NOT BETWEEN (1e500) AND ('911177749')))))AND(CASE WHEN '\n[%2eju' THEN 0xffffffffcb49d4d6 END))) GROUP BY ((rt1.c1)GLOB(t0.c0)), rt0.c2 COLLATE BINARY, -1386223551 HAVING COUNT(*);SELECT ((((((((((rt1.c1)AND(rt0.c0)))AND(t0.c58)))OR(rt0.c1)))AND(rt1.c3))) BETWEEN (CAST(t0.c58 AS INTEGER)) AND (rt1.c1 COLLATE NOCASE)) FROM t0, rt0 WHERE (((((0.10337981689419473)|(NULL)))IS NOT(((x'') ISNULL))));SELECT DISTINCT CAST(rt1.c1 AS REAL) COLLATE RTRIM, ((MAX(rt1.c1))GLOB(rt1.c2 COLLATE RTRIM)), CAST(CAST(t0.c58 AS INTEGER) AS NUMERIC) FROM rt1, rt0, t0 WHERE ((((NULL IN ()))IS((- (NULL))))) GROUP BY ((((((((((((CASE WHEN t0.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt0.c2 THEN rt1.c3 END)AND(((((((((rt0.c1)OR(-2118756115)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))))OR(rt1.c2)))OR(((vt0.lid)<=(t0.c84)))))OR(((rt0.c0) IS TRUE))))OR(((rt0.c2)>(rt1.c0)))))OR(((((rt1.c3)AND(rt0.c1)))OR(rt0.c0)))), t0.c58, ((IFNULL(rt0.c1, rt0.c2)) IS FALSE), CHANGES(), '-1672154723' HAVING CAST(((t0.c58) ISNULL) AS NUMERIC);SELECT DISTINCT SQLITE_VERSION() FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(NULL) COLLATE RTRIM COLLATE BINARY); -- 1ms;
SELECT IFNULL(DISTINCT ((t0.c58) NOTNULL), ((NULL) IS FALSE)) FROM rt0 ORDER BY (NOT (((t0.c58) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC, t0.c0 COLLATE BINARY;SELECT GROUP_CONCAT(((t0.c84) NOT NULL)) FROM t0; -- 0ms;
SELECT ALL '9223372036854775807', MIN(((rt1.c0) IS TRUE) COLLATE BINARY), (SUM(t0.c84) IN ((rt1.c0 IN ()))) FROM rt1, vt0, rt0 WHERE ((((((((('ld%H d3H' COLLATE BINARY)AND(0.9296848394888599)))OR(HEX(1421756013))))OR(CASE WHEN x'' THEN NULL WHEN NULL THEN x'' WHEN '1821151144' THEN '904258456' END)))AND(CASE -7.4610101E8  WHEN NULL THEN 0.9296848394888599 WHEN 1055215424 THEN 0.170226449472349 WHEN x'' THEN x'' END)));SELECT DISTINCT rt0.c0 FROM t0, rt0, vt0, rt1 WHERE (NULL); -- 0ms;
SELECT ALL ((MIN(rt1.c0))AND(((rt0.c2) BETWEEN ('') AND (t0.c84)))) FROM vt0, rt0, t0;SELECT (((rt1.c3)) NOT BETWEEN (('')) AND ((((t0.c84) BETWEEN (0xffffffffb12b02d8) AND (rt1.c2))))), ((GROUP_CONCAT(vt0.c0))>=(t0.c58)), CAST(t0.c58 COLLATE RTRIM AS REAL) FROM rt1, t0, rt0 WHERE ((((((((('45554689')AND(CASE 0.6789864690470503  WHEN 0.8412445120297194 THEN x'' WHEN '-1084258532' THEN NULL WHEN 159653299 THEN NULL END)))AND(CAST(-997644950 AS REAL))))AND(UNLIKELY(x'0dd4'))))AND(((0.9547235102737655) IS FALSE))));SELECT DISTINCT AVG(rt1.c0) FROM rt1, t0, vt0, rt0 WHERE (x'') ORDER BY (((rt0.c0)IS NOT(vt0.lid)) IN ()) ASC, ((rt0.c2)-(CAST(rt1.c1 AS REAL)))  NULLS FIRST, ((rt1.c1) NOT BETWEEN (((t0.c58)<(rt1.c0))) AND (((vt0.c0)||(t0.c0)))) ASC LIMIT -82703928; -- 0ms;
SELECT 'Efxr0]' FROM t0, vt0, rt0, rt1 GROUP BY ((CAST(vt0.lid AS REAL)) NOT BETWEEN (x'') AND ((((vt0.c0))<((vt0.c0))))), (((vt0.c0)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((t0.c58) NOT BETWEEN (vt0.c0) AND (t0.c0))))), CAST(rt1.c1 AS BLOB) COLLATE RTRIM HAVING ((((x'')IS NOT(rt1.c1)))-(COUNT(rt1.c3))); -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(t0.c0, 0.1369656328772101)) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c1) NOT BETWEEN (vt0.lid) AND (rt0.c0)))), AVG(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END), GROUP_CONCAT(x'a087') OVER (), SQLITE_COMPILEOPTION_USED(COUNT(*)), AVG(((((((((((((vt0.c0)AND(911177749)))AND(t0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2))) OVER () FROM vt0 NOT INDEXED, t0, rt1, rt0; -- 0ms;
SELECT ((((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))-((vt0.c0 IN ()))) FROM rt1, vt0, rt0, t0 GROUP BY CASE t0.c58 COLLATE NOCASE  WHEN ((rt1.c1)IS NOT(t0.c58)) THEN ((rt1.c1) IS TRUE) ELSE CAST(vt0.c0 AS INTEGER) END, (+ (t0.c84)), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((((((((rt0.c2)AND(t0.c58)))OR(t0.c0)))OR(vt0.lid)))AND(NULL)) WHEN t0.c58 THEN ((NULL) ISNULL) WHEN json_array_length(rt0.c0, rt1.c1) THEN (- (vt0.lid)) WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt1.c3)))AND(vt0.lid)) THEN CAST(t0.c84 AS TEXT) WHEN rt0.c0 THEN (rt0.c0 IN ()) END;SELECT ALL 0.802963674713568 FROM rt1 WHERE (((0.3149500586613879 COLLATE RTRIM) IS TRUE)); -- 0ms;
SELECT DISTINCT ((rt1.c2)>=(rt0.c2 COLLATE RTRIM)), LAST_VALUE((((((vt0.c0)<('-1239908426'))))<>((CASE rt1.c3  WHEN NULL THEN rt1.c1 ELSE NULL END)))) OVER (), ((CASE WHEN vt0.c0 THEN rt1.c1 END) IS TRUE), LAST_VALUE((~ (((rt1.c1)&(rt0.c2))))) OVER (), (((vt0.lid)GLOB(x'3440')) IN ()) FROM rt1, rt0, t0, vt0; -- 1ms;
SELECT ALL GROUP_CONCAT((((t0.c84, rt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c0, t0.c0, rt1.c2)) AND ((rt1.c2, rt0.c2, t0.c58)))) FILTER(WHERE (((((+ ('-594869931')))OR(((((t0.c0)OR(rt0.c2)))AND(rt1.c3)))))AND(LIKE(vt0.c0, rt1.c3)))) OVER () FROM rt1, vt0, rt0, t0 WHERE ((SQLITE_VERSION() IN ())); -- 0ms;
SELECT ALL '560540081', DENSE_RANK() OVER (), SUM(SUM(GROUP_CONCAT(0.2608701164809708))) FROM rt0;SELECT (GROUP_CONCAT(t0.c58) IN ((- (rt1.c1)))), 'n,(v', HEX(DISTINCT '-492853514') FROM t0 WHERE (CAST(('cy\nsU' IN ()) AS TEXT));SELECT DISTINCT CAST(IFNULL(rt1.c2, rt1.c3) AS REAL), UPPER(CASE WHEN t0.c0 THEN rt1.c3 WHEN t0.c58 THEN rt0.c0 WHEN t0.c0 THEN x'49c5' ELSE rt0.c2 END), AVG((('8HL5U5')IS NOT(vt0.c0))) FILTER(WHERE ((((CASE WHEN t0.c58 THEN rt1.c1 ELSE rt1.c1 END)OR('-997644950')))OR(rt1.c1 COLLATE NOCASE))) OVER ( ORDER BY NULL DESC, (((((((((rt0.c0 IN ()))AND((rt1.c2 IN (rt0.c2)))))AND(LIKE(vt0.c0, rt0.c1, '1'))))OR(LOWER(DISTINCT t0.c0))))OR((((rt0.c0))>((rt1.c2))))) ASC  NULLS LAST, ((((((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c84)))OR((((t0.c84)) NOT BETWEEN ((-7.4610101E8)) AND ((rt1.c3))))))OR((((rt1.c3)) BETWEEN ((t0.c0)) AND ((rt1.c0))))) DESC) FROM rt1 WHERE (x'') GROUP BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt1.c3 END) NOT BETWEEN ((- (0xffffffff826b2211))) AND (CASE t0.c84  WHEN t0.c84 THEN rt0.c0 WHEN t0.c58 THEN t0.c58 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)) HAVING x'';SELECT DISTINCT CAST(t0.c84 AS TEXT) FROM rt0;SELECT ALL AVG(rt1.c3) OVER () FROM t0;SELECT SQLITE_COMPILEOPTION_GET(((rt1.c2) NOT BETWEEN (x'ae22') AND (rt0.c0))) FROM t0, rt1, vt0 WHERE ((((0.9942048572125485)||(2089496567)) IN (ABS('-1184350543')))) ORDER BY rt0.c1 DESC, (((NOT (t0.c58)))<=(CASE rt1.c1  WHEN x'' THEN vt0.lid END)) DESC  NULLS LAST;SELECT COUNT(*), (CASE WHEN vt0.lid THEN rt1.c0 END IN ()), ((((vt0.lid) ISNULL)) IS FALSE) FROM rt1 NOT INDEXED, vt0 INNER JOIN rt0 ON ((rt1.c1)<=(t0.c0)) COLLATE BINARY;SELECT ALL CAST(t0.c58 COLLATE NOCASE AS NUMERIC) FROM t0, rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))OR(vt0.lid)))AND(LIKELY(rt1.c1))) FROM rt1;SELECT DISTINCT (((rt0.c1) IS TRUE) IN ()) FROM t0, vt0 ORDER BY CAST(vt0.lid COLLATE BINARY AS BLOB); -- 1ms;
SELECT DISTINCT ((((CAST(6.7229031E7 AS REAL))AND(CAST(rt1.c1 AS REAL))))AND(CAST(vt0.c0 AS INTEGER))) FROM vt0, rt1, rt0, t0; -- 0ms;
SELECT ((((rt1.c2)OR(rt1.c0)))AND(vt0.c0)) COLLATE RTRIM, rt1.c1, CASE WHEN NULL THEN ((rt0.c1)/(rt1.c2)) ELSE ((t0.c58)==('AZ')) END FROM vt0;SELECT ALL LIKELY(UPPER(DISTINCT rt1.c2)) FROM rt0, rt1, vt0, t0 WHERE (((x'')<<((x'' IN ())))); -- 0ms;
SELECT DISTINCT DATE('찙%B6?~瀮', SUM(rt1.c3), ((t0.c58) NOT NULL)), (((t0.c84, rt1.c0, rt1.c1)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t0.c84 ELSE vt0.lid END, CASE rt1.c3  WHEN rt1.c1 THEN t0.c0 ELSE rt1.c1 END, x'')) AND ((((t0.c58)<<(rt0.c0)), ((((((((rt1.c2)AND(rt1.c2)))OR(t0.c84)))OR(rt0.c2)))OR(t0.c84)), ((rt1.c2) IS FALSE)))), COUNT(-2.054655954E9 COLLATE RTRIM) FROM vt0, rt1;SELECT DISTINCT AVG(UNLIKELY(DISTINCT rt0.c2)) FILTER(WHERE rt1.c0 COLLATE NOCASE) OVER (), ((MIN(t0.c84)) NOTNULL), (NOT (vt0.lid)) COLLATE BINARY FROM t0, rt0, vt0, rt1; -- 1ms;
SELECT DISTINCT (((rt1.c0) IS FALSE) IN ()), (+ ((rt1.c2 IN ()))), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c0))IS NOT(COUNT(t0.c84))) FROM t0, vt0 GROUP BY (NOT (((((vt0.lid)AND(t0.c0)))OR(rt1.c3)))), ((((vt0.c0)AND(t0.c0)))AND(rt1.c2)) COLLATE NOCASE, CASE ((t0.c0)+(rt0.c0))  WHEN (((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) THEN ((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)) WHEN ((((((((((((t0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(vt0.lid)))OR(vt0.c0)))AND(rt0.c1)))OR(t0.c0)) THEN CAST(rt1.c2 AS NUMERIC) WHEN ((rt1.c1)GLOB(vt0.c0)) THEN ((rt1.c0)<>(vt0.c0)) ELSE (NOT (rt0.c2)) END, (((CAST(vt0.c0 AS BLOB)))<(((t0.c0 IN ())))), ((rt0.c2)!=(CAST(rt0.c1 AS TEXT))) HAVING '';SELECT DISTINCT UPPER(DISTINCT ((rt1.c0)LIKE(rt0.c2))) FROM t0, rt0, rt1, vt0 WHERE (((CAST(NULL AS BLOB)) NOT NULL)); -- 0ms;
SELECT (NOT (rt1.c2)) COLLATE NOCASE FROM rt0, t0, rt1, vt0 ORDER BY rt0.c0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((rt0.c1)AND(t0.c84)))OR(t0.c0)) THEN COUNT(rt0.c1) END, NULL, NULLIF((+ (rt0.c1)), (rt0.c2 IN ())) FROM vt0, t0, rt0 WHERE (((((('0.802963674713568')>=(x'')), (((x'a7cc6e92'))==((x''))), (NULL IN ())))>((((-1.189109009E9) NOTNULL), (0X6c8c8fa8 IN ()), ((NULL) ISNULL))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt1, vt0 WHERE (((0Xe8ef821)<>('-141840893')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT TOTAL(((((((((rt1.c2)OR(-2123405778)))AND(rt1.c1)))OR(rt1.c3)))OR(rt0.c0))) FROM t0, vt0, rt0, rt1 WHERE (((x'')&(((x'') NOT BETWEEN (0.6774470851028108) AND (x''))))); -- 0ms;
SELECT ALL (t0.c0 COLLATE NOCASE IN ((((rt0.c0))<((t0.c0))), vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((((x'')<<(0.9878001322514453)) IN ((+ (x'')))));SELECT DISTINCT vt0.lid FROM t0, rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(TYPEOF(rt1.c2) AS TEXT), (((((rt1.c1))<((rt1.c1))))|(t0.c0)), CAST(((NULL)LIKE(rt1.c1)) AS NUMERIC) FROM vt0, rt0;SELECT ALL COUNT(GROUP_CONCAT(x'')) FROM t0, rt1 WHERE (HEX(((((((((-1678247482)OR(0.921228599506646)))OR(0.5494369809106198)))AND(-1123366665)))OR(0.6901154161550871)))) ORDER BY (((((rt0.c0))<((rt0.c1))))LIKE((~ (t0.c84)))) ASC LIMIT -654582412;SELECT DISTINCT GROUP_CONCAT(CASE rt1.c0  WHEN rt0.c1 THEN 0.7882210250889572 ELSE t0.c84 END) OVER () FROM rt1;SELECT DISTINCT ((((((((((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)))OR(vt0.lid)))OR(rt1.c3)))OR(vt0.c0)))AND(t0.c58)))OR(rt0.c2)))%(((rt1.c3)IS NOT(-2123405778)))) FROM rt0, vt0, rt1;SELECT DISTINCT (((+ (vt0.lid)))/(((rt1.c3)<=(rt0.c0)))), ((COUNT(rt1.c2))>=(((rt0.c1)IS(rt1.c2)))), (GROUP_CONCAT(vt0.c0) IN ()) FROM rt1 WHERE ((((('FALSE') NOT BETWEEN (NULL) AND (0X17daeca4)))!=(CASE x''  WHEN 0.5457768084224103 THEN '983613696' WHEN 0.014019418654526383 THEN x'' WHEN x'' THEN 0.7637725970530844 ELSE x'' END))) ORDER BY (CASE NULL  WHEN rt1.c2 THEN rt1.c2 ELSE t0.c0 END IN ()) DESC, ((((('1952566442' IN ()))OR(NULLIF(rt1.c2, t0.c84))))AND(((t0.c0)==(vt0.lid))))  NULLS LAST, (((rt0.c0 IN (vt0.c0, rt1.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c2 END)) ASC;SELECT ALL SUM(((((vt0.lid)OR(rt1.c0)))AND(rt0.c1))) FROM rt0 WHERE ((((('[7hLR섀')&('')))<<(((NULL) BETWEEN (NULL) AND (0.2591280843671875)))));SELECT ALL ((((vt0.lid)%(rt0.c0))) NOTNULL), CASE WHEN (((rt0.c2))==((rt1.c1))) THEN ((vt0.lid) BETWEEN (t0.c0) AND (rt1.c1)) ELSE (((rt0.c1))<((t0.c58))) END, ((COUNT(t0.c0))-(((0.41862533533159807) NOTNULL))) FROM rt1, rt0;SELECT DISTINCT (((('105509168')<>(t0.c84)))<<(CAST(vt0.lid AS INTEGER))) FROM rt0, t0, vt0, rt1 WHERE (((((((((NULL)AND(CASE WHEN '껧}' THEN NULL WHEN NULL THEN 147375705 WHEN NULL THEN NULL END)))AND((NULL IN ()))))OR(((NULL)IS NOT(x'6fa4')))))OR(((((0.3541307069536048)AND(x'3534')))OR(x'bdb2'))))); -- 0ms;
SELECT DISTINCT 0.27850276160274323 FROM t0, vt0; -- 0ms;
SELECT DISTINCT (- ((((1399684221))<((t0.c0))))) FROM rt1, vt0, t0, rt0 WHERE (CAST(((0.15351129030202348)||('-380400990')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT DATETIME(rt1.c2, ((rt0.c2) IS TRUE), LIKE(NULL, NULL)) FROM rt1 ORDER BY SQLITE_VERSION() COLLATE NOCASE  NULLS FIRST;SELECT DISTINCT (((rt1.c1)IS(t0.c84)) IN (((((t0.c0)OR(rt0.c2)))OR(rt1.c2)), ((rt1.c3)AND(vt0.c0)))) FROM rt0, t0, vt0, rt1 GROUP BY t0.c58 COLLATE NOCASE; -- 1ms;
SELECT CASE WHEN NULL THEN ((rt1.c2)-(rt0.c1)) WHEN AVG(vt0.lid) THEN (+ (t0.c0)) WHEN ((-3.88728429E8) NOT BETWEEN (vt0.lid) AND (vt0.c0)) THEN ((rt1.c0)|(NULL)) ELSE ((rt1.c2)>>(rt0.c2)) END FROM vt0, rt1, rt0;SELECT ALL (rt1.c1 COLLATE RTRIM IN (rt1.c2)) FROM rt1 WHERE (CASE WHEN 'TRUE' THEN NULL WHEN '' THEN '-1769543606' WHEN NULL THEN 1018232867 END COLLATE RTRIM); -- 2ms;
SELECT CASE '-1511325496'  WHEN rt0.c1 THEN ((((t0.c58)AND(t0.c58)))OR(rt0.c2)) ELSE LIKELIHOOD(t0.c84, 0.9272103683587205) END FROM rt0 WHERE (((((((NULL) BETWEEN (x'') AND ('4J੒O,y')))OR((~ ('-2106908143')))))AND(((NULL)>('')))));SELECT DISTINCT (((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((CAST(rt1.c1 AS REAL)))) FROM rt0, t0, rt1, vt0 WHERE ((NOT (((NULL) IS FALSE)))); -- 0ms;
SELECT (~ (((t0.c84) ISNULL))), ((((((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c84)))OR(rt1.c2)))OR(x'')))AND(((rt1.c0) ISNULL))))AND((~ (rt0.c0)))))OR(((rt1.c1) ISNULL))))AND(((((((((0.15276277119306403)OR(vt0.lid)))AND(t0.c84)))AND(vt0.c0)))OR(rt0.c2)))), t0.c58 FROM rt0, t0, rt1 WHERE ((- (CAST(x'' AS REAL)))) GROUP BY t0.c0 HAVING rt1.c3 LIMIT 1878212594;SELECT DISTINCT NTILE(CAST(CASE WHEN vt0.c0 THEN rt1.c1 ELSE t0.c0 END AS INTEGER)) OVER () FROM t0, vt0 NOT INDEXED, rt1 WHERE ((~ ((((((((('0.41862533533159807')AND(NULL)))OR(x'')))AND(NULL)))OR('462270036'))))) GROUP BY NULL HAVING (((((((rt0.c1))<=((t0.c58))))OR(rt1.c2)))AND((+ (-1491335167)))) ORDER BY rt1.c0  NULLS FIRST LIMIT 485702594;SELECT DISTINCT (- (rt0.c0)) COLLATE RTRIM, ((((- (vt0.c0))))==((((vt0.lid) ISNULL)))), ((((((rt1.c2)AND(vt0.lid)))AND(rt1.c3)))IS(((((rt0.c2)AND(rt0.c1)))AND(vt0.lid)))) FROM t0;SELECT CASE WHEN (+ (rt0.c1)) THEN ((rt1.c3)IS(t0.c58)) ELSE rt1.c3 END, (~ (rt1.c1 COLLATE RTRIM)), rt1.c1, ((((((((((t0.c84)<<(vt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0))))))OR(((vt0.c0)||(vt0.lid)))))AND(((((vt0.lid)AND(rt0.c0)))OR(rt1.c3)))))AND(((t0.c0)<<(vt0.c0)))), HEX(DISTINCT NULL) FROM vt0, t0, rt0, rt1 LIMIT -594869931; -- 0ms;
SELECT DISTINCT ((((x'06a618ab')%(rt0.c0))) NOT NULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*), json_patch(rt1.c0 COLLATE BINARY, (t0.c58 IN ())), GROUP_CONCAT(((((rt0.c1)OR(rt1.c3)))OR(rt1.c2))) OVER ( GROUPS BETWEEN  CURRENT ROW AND (NOT ((- (rt1.c3)))) PRECEDING EXCLUDE TIES) FROM vt0, t0;SELECT DISTINCT ((((t0.c84 COLLATE NOCASE)OR(((t0.c58) NOT NULL))))AND(rt0.c2 COLLATE RTRIM)) FROM rt1 WHERE (((((((NULL)>(x'')))AND((- (NULL)))))AND(CASE 0.7174759973249678  WHEN x'b559' THEN '-1123366665' WHEN x'8a2d' THEN '720809056' WHEN 0Xffffffffdc8b0155 THEN 'Vo.ỗnrrŅz' ELSE x'' END))) GROUP BY (((('')>=(t0.c58)))<<(-1206443732)) HAVING (~ (t0.c0)) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c58 END)AND(CAST(rt0.c1 AS BLOB))))AND(((((((((((((t0.c0)AND(rt1.c2)))OR(rt0.c2)))AND(t0.c0)))OR(rt1.c0)))AND(rt0.c1)))OR(rt0.c0)))) DESC;SELECT ALL CAST(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)) AS BLOB) FROM rt1, t0; -- 0ms;
SELECT ALL (((((rt1.c2))=((vt0.c0)))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((- (NULL)))) FROM rt1, vt0, t0 WHERE ((- ((((NULL, '#N', 0Xffffffffe4261def, NULL, '')) BETWEEN (('', x'', x'', '', '0.005916115691011248')) AND ((0xffffffffd5adf051, x'9c52', 0.2075010903685992, '', 0.13242257613827813)))))) ORDER BY ((NULLIF(t0.c0, vt0.c0))-(((rt0.c0) NOTNULL)));SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))IS(((rt0.c2)>(rt0.c0)))), CASE AVG(rt1.c2)  WHEN 0.8679829838825067 THEN rt1.c0 WHEN rt1.c0 THEN (+ (rt1.c2)) WHEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN t0.c58 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 END THEN TOTAL(rt1.c0) WHEN ((((((((t0.c0)AND(t0.c58)))AND(t0.c84)))AND(rt1.c2)))AND(rt0.c2)) THEN ((((0xffffffffd892608e)AND(rt0.c2)))AND(0.0884259773869649)) WHEN ((rt1.c3)>(rt0.c2)) THEN ((((0.4606744286757425)OR(t0.c84)))OR(vt0.lid)) ELSE ((rt0.c0) BETWEEN (rt1.c3) AND (rt0.c2)) END, ((((rt1.c2) IS FALSE)) NOTNULL), (AVG(rt1.c2) IN ((+ (rt0.c2)))), CAST(((rt0.c2)+(vt0.c0)) AS BLOB), (((((- (rt1.c1)))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt0.c0)))))AND(CASE rt1.c3  WHEN '' THEN rt1.c1 WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN '' ELSE t0.c0 END)), rt0.c2 FROM t0 FULL OUTER JOIN vt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt1.c0)%(0.5530079967288237))) AND (rt1.c1 COLLATE RTRIM)) WHERE ((((((('\n[%2ejU') BETWEEN ('') AND ('-1947004465')))AND(319042174)))OR(json_extract(x'17c4', 0.10526994162971592))));SELECT DISTINCT CASE WHEN rt1.c1 THEN (- (vt0.c0)) END FROM rt1, vt0, t0, rt0 ORDER BY CASE WHEN ((t0.c84)>(rt0.c0)) THEN ((rt0.c2) NOT NULL) END DESC  NULLS LAST; -- 0ms;
SELECT ALL (~ ((('105509168')<=(rt0.c1)))), DENSE_RANK() OVER (), (((t0.c0 IN (rt1.c3, rt1.c2)))GLOB((+ (rt1.c3)))) FROM rt0, vt0 LEFT OUTER JOIN t0 ON (NOT (((vt0.c0)&(NULL)))) LEFT OUTER JOIN rt1 ON CASE WHEN ((rt1.c0) NOT BETWEEN (x'') AND (rt0.c1)) THEN CAST(rt0.c1 AS TEXT) END; -- 0ms;
SELECT DISTINCT MIN((+ (t0.c84))) FROM rt1, vt0 WHERE (LAST_INSERT_ROWID()) GROUP BY CAST(CAST(rt1.c3 AS REAL) AS REAL), CAST((NULL IN ()) AS INTEGER), CAST((rt1.c2 IN (t0.c58)) AS NUMERIC) HAVING ((rt0.c1)==(((rt1.c2) BETWEEN (rt0.c1) AND (vt0.c0))));SELECT ALL ((CAST(t0.c84 AS REAL))||(rt0.c1 COLLATE BINARY)) FROM rt0;SELECT DISTINCT ((((('-1681905727') NOTNULL)))>((((((((((rt1.c0)OR(t0.c84)))OR(rt1.c2)))AND(t0.c84)))AND(rt1.c0))))) FROM rt1, vt0 RIGHT OUTER JOIN t0 ON NULL WHERE (0.6799850908267198); -- 2ms;
SELECT ALL (((rt0.c1 IN ())) BETWEEN (vt0.c0) AND (CAST(rt1.c0 AS REAL))) FROM rt1, vt0 WHERE ((((('2021922049')!=(NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT rt0.c2, (((+ (rt0.c0))) NOTNULL), ((0.7736459506494517)|((t0.c84 IN ()))) FROM t0 WHERE (((('[7hLR섀')) BETWEEN (((('') NOT NULL))) AND ((NULLIF('[]', x'')))));SELECT DISTINCT (((rt0.c1)) NOT BETWEEN (((rt0.c0 IN (rt1.c1, vt0.lid)))) AND ((CAST(rt0.c2 AS REAL)))) FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt1 ON CAST((~ (vt0.lid)) AS INTEGER) FULL OUTER JOIN rt0 ON 0.4433843625967451 COLLATE RTRIM LEFT OUTER JOIN t0 ON ((rt0.c0) NOT BETWEEN ('') AND (CAST(rt1.c3 AS INTEGER))); -- 0ms;
SELECT DISTINCT ((((rt1.c0)<(rt0.c2)))*(((vt0.c0) NOT NULL))) FROM t0;SELECT DISTINCT TOTAL(((rt0.c2) NOT NULL) COLLATE NOCASE), (((~ (rt1.c3)))<(NULL)), RANK() OVER () FROM rt0, vt0, rt1 WHERE (COALESCE(-1.60038939E9, NULL) COLLATE NOCASE); -- 0ms;
SELECT ((HEX(rt1.c1))||(((vt0.lid) BETWEEN (t0.c58) AND (rt0.c0)))), ((CAST(rt0.c0 AS NUMERIC))OR((+ (t0.c0)))), ((CASE t0.c58  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c1 END)>=((NOT (t0.c0)))) FROM rt1, t0 WHERE (x'');SELECT CAST(('S8' IN ()) AS TEXT) FROM vt0, t0, rt1 WHERE ((((x'' IN (0.28587347703881616))) NOT BETWEEN (CAST(-9.9764495E8 AS INTEGER)) AND (CASE NULL  WHEN 'zEt	Ako' THEN 0.9027650571907427 WHEN 'ok%j~?M5''NM' THEN 0x4c8f11a2 WHEN '' THEN 475942027 END))); -- 0ms;
SELECT ALL ((((rt0.c2) IS TRUE)) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((t0.c84)) AND ((t0.c84)))) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) FROM rt1, t0;SELECT DISTINCT ((((CAST(t0.c58 AS TEXT))AND((((t0.c84, rt1.c3, rt0.c1)) NOT BETWEEN ((rt1.c0, rt1.c3, 0.0)) AND ((rt0.c2, vt0.lid, rt0.c1))))))OR(((NULL) BETWEEN (t0.c58) AND (t0.c0)))), t0.c84, (NOT (rt1.c3)) COLLATE NOCASE FROM vt0 NATURAL JOIN rt0 WHERE (((0X2827035 COLLATE BINARY) BETWEEN ('1264224514') AND (x'' COLLATE BINARY)));SELECT CASE ((((vt0.lid)AND(rt1.c0)))OR(x''))  WHEN 'F}i' THEN vt0.c0 END FROM t0, vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT (((CASE vt0.c0  WHEN rt1.c0 THEN rt1.c3 ELSE t0.c58 END, t0.c0, (((rt1.c0, t0.c84, vt0.lid)) BETWEEN ((rt1.c2, rt0.c0, rt1.c3)) AND ((rt1.c2, -1758322203, vt0.c0)))))==(((((rt1.c2))!=((vt0.c0))), CASE rt1.c2  WHEN rt0.c2 THEN rt0.c1 END, rt0.c2 COLLATE RTRIM))) FROM t0, rt0, vt0, rt1 GROUP BY 0.26817702573244717 COLLATE NOCASE COLLATE BINARY; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CAST(CAST('-621727873' AS NUMERIC) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((DATE(rt1.c2, t0.c58, vt0.lid))+('+v')), AVG((((vt0.lid))<>((rt0.c2)))), rt0.c1 FROM rt1, rt0, t0, vt0; -- 0ms;
SELECT (((t0.c58)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((rt0.c0) IS TRUE)))) FROM rt0;SELECT AVG(LIKELY(rt0.c2)) FROM rt1, rt0, vt0, t0; -- 0ms;
SELECT CAST(((t0.c84) BETWEEN (vt0.lid) AND (t0.c84)) AS BLOB), (~ (vt0.c0)) COLLATE RTRIM, AVG(((((((((rt0.c0)AND(t0.c0)))OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c1))) FROM t0;SELECT DISTINCT ((((((((((((1.562399122E9)AND(rt1.c0)))OR(rt0.c1)))AND(SUM(rt1.c2))))AND(CAST(vt0.lid AS BLOB))))AND((rt1.c0 IN (rt1.c2, rt1.c1)))))AND(ABS(t0.c84))) FROM t0;SELECT DISTINCT (((~ (rt1.c3))) NOT NULL), LEAD((+ (((vt0.lid) NOTNULL))), GLOB(((t0.c84) NOT BETWEEN (vt0.lid) AND (NULL)), x''), ((-6.73644446E8) NOT BETWEEN (t0.c58) AND (((((((((rt0.c1)AND(vt0.c0)))AND(NULL)))OR(t0.c0)))AND('hl*'))))) OVER ( GROUPS (((('1055215424') NOT NULL))OR((- (vt0.c0)))) PRECEDING EXCLUDE TIES), rt0.c1, FIRST_VALUE((((('485702594')&(t0.c0)))IS((+ (rt0.c0))))) OVER (), COUNT((+ (rt0.c2))) FROM vt0, t0, rt0 WHERE (CAST((((-884353834)) NOT BETWEEN ((0x12832f5b)) AND ((NULL))) AS BLOB)) ORDER BY CAST(((rt1.c3) IS FALSE) AS REAL) DESC;SELECT CASE CAST(rt1.c3 AS INTEGER)  WHEN ((rt0.c2)<<(rt1.c1)) THEN ((((((((t0.c58)AND(rt0.c0)))OR(rt1.c2)))OR(vt0.c0)))AND(rt1.c2)) WHEN (vt0.lid IN (rt1.c3)) THEN (- (rt0.c1)) WHEN CAST(rt1.c0 AS NUMERIC) THEN (rt1.c0 IN ()) ELSE CASE rt1.c1  WHEN rt1.c3 THEN x'4eaa65fc' ELSE vt0.c0 END END FROM vt0, rt1, rt0, t0; -- 0ms;
SELECT DISTINCT (((vt0.lid))<>((0.9024113715388706))) COLLATE BINARY, ((((rt0.c2)>=(NULL)))IS(vt0.lid)), SUM(((rt0.c0)<=(t0.c0))) OVER (), IFNULL(x'', vt0.lid) COLLATE BINARY, ((((vt0.lid)OR(((rt1.c0)AND(vt0.c0)))))AND(((rt0.c0)==(vt0.c0)))) FROM rt1, t0, vt0, rt0 WHERE (((('')) BETWEEN ((CASE NULL  WHEN -2.077860197E9 THEN 0.005556424289685391 END)) AND (((((x'')) BETWEEN (('399562074')) AND (('撠GLr'))))))) LIMIT 1523642148 OFFSET -1595296976; -- 1ms;
SELECT (vt0.c0 IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((rt1.c2)) BETWEEN (((((t0.c84))>=((vt0.lid))))) AND ((((vt0.c0)<<(rt1.c0))))), ((((t0.c84)OR(CAST('^m쬿}q/(' AS TEXT))))AND(((vt0.c0)>=(rt1.c3)))), ((CAST(rt1.c0 AS TEXT)) NOTNULL) FROM vt0 WHERE (((CAST('H]7?ጾos''\' AS REAL))IS(0.5771308016288895)));SELECT ALL (((t0.c84)) NOT BETWEEN ((((t0.c84)<>(rt0.c1)))) AND (((rt1.c3 IN ())))) FROM t0 WHERE (((HEX(1731032256)) NOTNULL));SELECT ALL rt1.c2 FROM vt0 WHERE (0.35574590118369787) GROUP BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)>=(rt1.c3)))) AND ((((((t0.c58)OR(rt1.c1)))OR(x''))))) HAVING PRINTF(((rt0.c0) IS FALSE));SELECT DISTINCT ((((CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt0.c0 END)OR(rt0.c1)))OR(rt0.c0 COLLATE NOCASE)), NULL, (((NOT (rt0.c1)))<<(((rt1.c1)<<(rt0.c2)))) FROM rt0, rt1, t0, vt0 WHERE (TRIM(('-1239908426' IN ()), ((0X7c8b2ff7) IS FALSE))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(ABS(t0.c0)) OVER (), TIME('-1328018862', ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((((((((((((t0.c58)AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c0))), (rt1.c1 IN ()) FROM rt0, rt1, t0, vt0; -- 0ms;
SELECT (((((((t0.c58)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c3))))OR(CAST(rt0.c1 AS NUMERIC))))AND(rt1.c0)) FROM rt0, t0 WHERE ((((x'da3f') BETWEEN (NULL) AND ('')) IN ((((((((('')AND(x'fa97')))OR(x'b28e')))OR(x'')))AND('1952566442')), CAST(0.5710845760354661 AS TEXT)))) LIMIT -723226149 OFFSET -1896301761;SELECT ALL ((rt1.c3)>(rt0.c0)) COLLATE RTRIM FROM rt1, vt0, t0 GROUP BY CAST(CAST(rt1.c2 AS NUMERIC) AS REAL) ORDER BY 0x5d205192 ASC  NULLS FIRST;SELECT DISTINCT TOTAL('-180749214') FROM vt0 WHERE (((((x'')>(1.878212594E9))) NOT BETWEEN ((-1.871553305E9 IN ())) AND ((- (x''))))); -- 0ms;
SELECT ALL x'' FROM t0, vt0 WHERE ('0.5530079967288237') ORDER BY ((((rt0.c0) IS TRUE)) NOT BETWEEN (((vt0.lid) ISNULL)) AND (t0.c84)) ASC, rt1.c1;SELECT CASE WHEN rt0.c0 THEN CAST(rt1.c0 AS REAL) ELSE CASE vt0.lid  WHEN rt1.c2 THEN vt0.lid WHEN rt1.c0 THEN rt1.c0 WHEN t0.c0 THEN t0.c84 END END FROM rt1, rt0, t0 WHERE (((((((((COALESCE(NULL, '!D**2唡GWO', '-2015618894', NULL))AND((((0.9383252832291533)) BETWEEN ((x'a3c8')) AND ((NULL))))))AND((0x2bebecdd IN ()))))OR((0.9414167429048463 IN ()))))AND((('g') BETWEEN (NULL) AND (x'9e7e'))))) GROUP BY ((((rt1.c2 COLLATE NOCASE)OR(UPPER('p3e[\n'))))OR(HEX(t0.c0))), (- (TYPEOF(DISTINCT rt1.c2))), ((x'') BETWEEN (((rt1.c0) IS FALSE)) AND (NULL)) HAVING CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c84)) AS TEXT);SELECT ALL COUNT(((((((((rt1.c0)OR(rt1.c1)))AND(rt0.c2)))OR(rt1.c1)))AND(rt1.c1))) FROM rt0, t0, rt1 GROUP BY ((MIN(rt0.c0, rt1.c3, NULL, rt0.c0))IS NOT((0.5474676537997065 IN (vt0.c0)))) HAVING ((((t0.c58)LIKE(vt0.lid)))%(((rt0.c2) IS TRUE)));SELECT ((((((rt0.c2)AND(t0.c84)))AND(rt0.c0))) NOTNULL) FROM rt0 WHERE ((((('' IN ())))>((CASE x''  WHEN 0.6799850908267198 THEN '-492853514' ELSE 0.2571522766517419 END))));SELECT DISTINCT (((((t0.c84) IS TRUE), ((((((((((((t0.c58)OR(t0.c0)))AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c3)))OR(vt0.lid)))AND(rt0.c0)), ((rt1.c1) BETWEEN (rt1.c0) AND (t0.c58))))<=((((rt1.c2)|(vt0.lid)), CAST(rt1.c1 AS REAL), (t0.c58 IN ())))) FROM vt0, t0;SELECT DISTINCT ((((rt1.c2))<=((vt0.c0))) IN (GROUP_CONCAT(rt0.c1))) FROM rt1, rt0, vt0, t0 WHERE (((-1969733621 COLLATE NOCASE)LIKE(CAST(x'' AS NUMERIC)))) ORDER BY ((((((((t0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt1.c0)))OR((rt1.c0 IN (vt0.c0)))) LIMIT 426744869 OFFSET 482087515; -- 0ms;
SELECT DISTINCT (((((t0.c0))>(('-2106908143')))) NOT BETWEEN (((((vt0.lid)OR(rt0.c2)))OR(t0.c0))) AND (((rt1.c1) BETWEEN (t0.c58) AND (rt1.c0)))), LTRIM((((rt0.c2))<>((vt0.c0)))), GROUP_CONCAT(((((((((vt0.c0)AND(rt1.c3)))AND(rt0.c1)))AND(rt1.c2)))OR('0.2493150360140759'))) FROM rt0, t0 LIMIT -1645074036;SELECT DISTINCT (((rt1.c2)) BETWEEN ((vt0.lid)) AND ((CAST(rt1.c1 AS INTEGER)))) FROM t0, rt1, rt0, vt0 ORDER BY ((CASE vt0.lid  WHEN rt1.c3 THEN rt1.c1 END)>(((t0.c58) BETWEEN (rt1.c1) AND (rt1.c1)))) DESC; -- 0ms;
SELECT ((((0.8000481191038781 COLLATE NOCASE)AND(((((rt0.c1)AND(rt1.c1)))AND(rt1.c2)))))OR(((((vt0.lid)OR(rt1.c3)))AND(t0.c0)))) FROM rt0, rt1 WHERE ((('^7Ck\鐔') NOT BETWEEN (x'') AND ('-491302604' COLLATE NOCASE)));SELECT DISTINCT CASE WHEN t0.c84 THEN t0.c58 ELSE rt1.c2 END COLLATE NOCASE FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (NULL COLLATE NOCASE)) FROM rt1;SELECT DISTINCT ((((t0.c84)=(vt0.lid)))OR(UNLIKELY(t0.c0))) FROM rt1, rt0 FULL OUTER JOIN t0 ON json_valid((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((t0.c58, '1828937451', rt1.c2)) AND ((rt0.c2, rt0.c2, vt0.lid)))) RIGHT OUTER JOIN vt0 ON CASE CAST(t0.c84 AS TEXT)  WHEN TRIM(DISTINCT rt0.c2, t0.c0) THEN ((t0.c58) BETWEEN (vt0.c0) AND (rt1.c3)) ELSE ((0.170226449472349)-(rt1.c3)) END GROUP BY ((((x'', rt1.c2, t0.c58))>=((rt1.c0, rt1.c0, rt0.c1))) IN ()), (CAST(t0.c84 AS REAL) IN ((NOT (rt1.c3)), ((((0.30809247410484597)OR(rt0.c1)))OR(t0.c0)))), ((((0.3173978404035328)AND(((rt1.c3) NOTNULL))))AND(UPPER(rt1.c0)));SELECT DISTINCT TOTAL('') FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT ((t0.c0) IS TRUE) COLLATE RTRIM FROM rt1, rt0 GROUP BY (- ((- (NULL)))), CASE UNLIKELY(rt1.c0)  WHEN (('vd(') BETWEEN (rt1.c3) AND (rt0.c1)) THEN CAST(t0.c0 AS TEXT) WHEN '-1048404655' THEN ((rt0.c1)*(vt0.lid)) WHEN LTRIM(rt0.c0) THEN ((rt1.c3)IS(rt0.c2)) ELSE (((rt0.c0, rt1.c3, t0.c0)) BETWEEN ((0.07474544360484559, '0.8536201407864279', vt0.lid)) AND ((rt0.c2, vt0.c0, rt0.c0))) END, ((rt1.c1 COLLATE BINARY)GLOB('0*M'));SELECT DISTINCT COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ((CASE t0.c0  WHEN vt0.lid THEN rt1.c2 END) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((t0.c0)<=(rt0.c2)))), ((((((rt1.c2)AND('')))OR(t0.c0))) NOTNULL), CASE NULL  WHEN ((rt0.c1)||('u')) THEN CAST(rt1.c3 AS TEXT) ELSE CAST(rt0.c1 AS BLOB) END FROM rt0 WHERE (((((((((((('756935045', 0Xffffffffb9683eb1, x'', '', '찙\[J'))>=((4.62270036E8, 0.4210508505736186, 1.821151144E9, x'', '-1821437122'))))AND((+ ('911177749')))))OR(CAST(400223396 AS TEXT))))OR(x'' COLLATE NOCASE)))AND((('\r''~y/K')IS NOT(NULL)))));SELECT DISTINCT CASE CASE t0.c58  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN t0.c58 THEN vt0.c0 END  WHEN ((rt1.c2) NOTNULL) THEN (((vt0.lid, rt0.c1, rt1.c0)) NOT BETWEEN ((rt0.c2, rt1.c0, rt1.c3)) AND ((rt1.c3, rt0.c2, rt0.c2))) END FROM rt1, rt0 WHERE ((((0.7482335634434396, 4.62270036E8, x'efd8', '', NULL)) NOT BETWEEN (((((('-381251187')AND('147375705')))OR(0X13c0e92c)), LIKELY('[虺P**PBuL'), ((x'd41a') NOT BETWEEN (0Xffffffffe0271537) AND ('')), ((x'afd44207')IS NOT('0.3173978404035328')), ((NULL)>('739411325')))) AND (((((' ]'))>=((NULL))), (((NULL, 0.35574590118369787, x'')) NOT BETWEEN (('1373524284', '244250657', 0.3742267117054294)) AND (('mZ', '0.5976681214196886', x''))), CASE WHEN 0.8434759256599954 THEN -197043406 END, CASE 0.591278568525543  WHEN 0x24d2ab1c THEN NULL ELSE 0.8536201407864279 END, ('ᦎ''?bb9' IN (0.6871057719579048))))));SELECT ALL ((json_insert(rt0.c0, t0.c0, t0.c58)) NOT NULL) FROM vt0, rt0, rt1, t0 WHERE (((NULL COLLATE BINARY) BETWEEN (((x'') BETWEEN (x'') AND ('-1758797730'))) AND (((0Xfffffffff54fc51d)LIKE(0.23825001652579125))))); -- 0ms;
SELECT DISTINCT (((((((NULL))<((rt0.c1))))OR(CAST(rt1.c2 AS TEXT))))AND(TYPEOF(DISTINCT rt0.c1))), CASE rt0.c2 COLLATE RTRIM  WHEN MIN(vt0.c0) THEN ((NULL)>=(t0.c58)) WHEN (((vt0.c0, '-854856730', rt0.c1))>(('1706160197', rt1.c1, t0.c58))) THEN ((((t0.c84)AND(rt0.c0)))OR(vt0.lid)) WHEN vt0.lid THEN rt0.c2 COLLATE BINARY ELSE SQLITE_SOURCE_ID() END, rt0.c2 FROM t0, rt1, rt0 WHERE (((((x'393e') BETWEEN (0.17052724909954442) AND (''))) ISNULL));SELECT ((rt1.c1)<>(t0.c58)) COLLATE NOCASE, t0.c0, ((((vt0.lid COLLATE BINARY)AND(((x'1e56')<(rt0.c1)))))OR((((vt0.lid))!=((rt1.c2))))) FROM rt1, rt0;SELECT DISTINCT CAST(((rt1.c0) NOT NULL) AS NUMERIC) FROM t0, rt0, vt0, rt1 WHERE (CAST(LOWER(x'') AS NUMERIC)) GROUP BY ((((((rt1.c2)/(rt1.c3)))OR((((rt1.c2, rt1.c0, rt1.c0))<((rt0.c1, rt1.c3, rt1.c1))))))OR(((rt0.c0)<=(t0.c58)))), CAST(((t0.c84) NOT BETWEEN (rt1.c1) AND (rt0.c1)) AS NUMERIC), ((NOT (rt1.c0)) IN ()) HAVING rt0.c1; -- 0ms;
SELECT ALL ((((LIKELIHOOD(DISTINCT rt0.c2, 0.8221039373725428))AND(0xffffffffea39aebe)))AND(((t0.c84)>>(rt0.c1)))), SUM(CAST(rt1.c1 AS TEXT)) OVER ( GROUPS (((rt1.c1) ISNULL) IN ()) PRECEDING), (((rt0.c2, rt1.c0, x'')) BETWEEN ((CASE rt1.c3  WHEN t0.c84 THEN vt0.c0 END, ((vt0.lid) BETWEEN (vt0.lid) AND (rt1.c2)), (rt1.c1 IN ()))) AND ((((((rt1.c1)AND('2099641306')))AND(rt1.c1)), ((((rt1.c3)OR(t0.c84)))OR(rt0.c2)), t0.c84))) FROM rt0, rt1, t0;SELECT ALL CASE WHEN t0.c0 COLLATE RTRIM THEN ((rt1.c0)LIKE(rt0.c0)) ELSE ((rt1.c0)%(t0.c84)) END FROM rt0, vt0, t0, rt1 WHERE (((((('6HN')GLOB('-1148768119')), ((x'')<>('[B')), 0.7049831665408167))!=((0x7461ccaa COLLATE NOCASE, (0.7540182002293913 IN ()), (~ (x'')))))); -- 0ms;
SELECT ALL COUNT(*) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES), (((vt0.lid)) NOT BETWEEN (((((t0.c0))=((rt1.c0))))) AND (((rt1.c0 IN ())))), (((rt1.c3, rt1.c0, rt1.c3)) NOT BETWEEN ((CAST(t0.c0 AS INTEGER), ((vt0.lid) NOT BETWEEN (rt1.c2) AND (t0.c84)), ((rt0.c2)OR(t0.c0)))) AND ((((rt1.c1)IS NOT(rt1.c3)), (t0.c0 IN ()), CAST(rt0.c2 AS NUMERIC)))) FROM rt1, vt0, t0 WHERE ((((- (NULL))) BETWEEN (CASE WHEN '' THEN 0.666875583008477 WHEN '(BqUJR(' THEN NULL WHEN '^7CK\鐔' THEN '1821151144' END) AND (((x'') IS TRUE))));SELECT ALL '0.9296848394888599', CASE rt1.c0  WHEN NULL THEN rt1.c1 ELSE t0.c0 END COLLATE BINARY, AVG(((vt0.lid) BETWEEN (rt0.c0) AND (rt1.c1))) FROM t0, vt0, rt0;SELECT ALL TOTAL(CAST(rt1.c3 AS REAL)), (CAST(vt0.lid AS BLOB) IN ()), LIKE(COUNT(vt0.lid), CAST(rt0.c2 AS REAL), '1') FROM vt0, t0, rt0, rt1; -- 1ms;
SELECT CASE ''  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN TOTAL(vt0.c0) WHEN (((vt0.lid))<=((t0.c0))) THEN ((rt0.c0)OR(vt0.lid)) WHEN (rt0.c0 IN (rt0.c0)) THEN LOWER(t0.c0) END FROM rt0, rt1, t0;SELECT ALL rt0.c1 FROM t0, rt1, rt0 WHERE ((+ (UNLIKELY(DISTINCT 0.3503174205113698)))) LIMIT -692622611; -- 0ms;
SELECT DISTINCT ((((((((((((((((vt0.c0)OR(t0.c84)))AND(NULL)))AND(vt0.lid)))OR(t0.c58)))AND(((rt0.c1)/(rt1.c2)))))OR((NOT (rt0.c2)))))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END)))OR(0.005916115691011248)) FROM rt0, rt1, t0, vt0; -- 0ms;
SELECT ALL ((((rt0.c0)-(x'bd23')))LIKE(((t0.c58)==(vt0.lid)))) FROM t0, vt0, rt1, rt0 WHERE ((((('')+('0.8679829838825067'))) BETWEEN (((((((((x'')OR(x'eadc')))AND(x'')))OR('-1123366665')))OR(NULL))) AND ((0Xffffffffe7455511 IN ())))); -- 0ms;
SELECT DISTINCT CAST(rt1.c3 AS NUMERIC) COLLATE NOCASE FROM t0;SELECT DISTINCT TOTAL_CHANGES() FROM vt0, t0 WHERE (((ABS(DISTINCT 0.1630807121973319))>(((NULL)<>(NULL))))); -- 0ms;
SELECT CAST(rt1.c0 AS INTEGER) FROM t0, vt0, rt0 ORDER BY CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END COLLATE BINARY  NULLS LAST, (CASE WHEN t0.c58 THEN rt1.c3 ELSE rt1.c3 END IN (((((NULL)AND(rt0.c2)))OR(t0.c0)))) DESC;SELECT DISTINCT RANK() OVER (), ((((COALESCE(DISTINCT vt0.c0, rt0.c1))OR(((((rt0.c0)AND(0.3149186011189443)))AND(vt0.c0)))))OR((((t0.c84))>=((rt1.c1))))), ((((rt1.c2) NOTNULL)) ISNULL) FROM t0 RIGHT OUTER JOIN vt0 ON rt0.c0 LEFT OUTER JOIN rt0 ON (- (t0.c0 COLLATE RTRIM)) WHERE (((json_extract('-710021039', x'')) NOT BETWEEN (NULL) AND ('' COLLATE RTRIM)));SELECT DISTINCT NULLIF(CAST(vt0.lid AS REAL), LOWER(rt0.c2)), NTH_VALUE(UNLIKELY(DISTINCT NULL), ((((rt0.c1) NOTNULL)) NOT BETWEEN (((vt0.lid)>=(rt1.c2))) AND (((rt0.c1)+('0.13565627843482875'))))) OVER (), TYPEOF(CASE vt0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END) FROM vt0, rt1, rt0 INDEXED BY i13 WHERE (((((NULL)>(0x8c8c659))) NOT BETWEEN ((((0.7049831665408167, 0.42758960035720195, '')) BETWEEN ((0X1b7671de, '49447345', 0.9373678444098585)) AND ((']tc#mX 3', NULL, 0x4a7bc9e1)))) AND (0.5968939441638564)));SELECT ALL (+ (rt1.c0)), CAST(((rt1.c1) ISNULL) AS INTEGER), ((((rt0.c0) NOT NULL)) BETWEEN ((((t0.c0))>=((rt1.c3)))) AND (t0.c58)) FROM rt0, vt0;SELECT DISTINCT (CAST(rt1.c0 AS BLOB) IN (LIKELIHOOD(rt0.c0, 0.287618148441401))) FROM rt1, t0, vt0 WHERE (((CAST(x'' AS BLOB))*(('-1688251185' IN ()))));SELECT DISTINCT CAST((((t0.c84, t0.c58, vt0.lid)) NOT BETWEEN ((t0.c84, rt1.c3, vt0.lid)) AND ((')g7*pywa', vt0.c0, vt0.c0))) AS TEXT), ((((rt1.c1 IN ())))>((((rt1.c0)/(rt0.c1))))), (((rt0.c0, ((0xffffffffc08aef99)<=('')), (('') BETWEEN (x'0772') AND (0.46720387279642484))))=((LIKELIHOOD(DISTINCT t0.c0, 0.2141658761843125), (((('e9')OR(t0.c58)))AND(t0.c84)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))), ((9.11177749E8) BETWEEN (((rt0.c2)!=(vt0.lid))) AND (ABS(DISTINCT t0.c58))), LOWER(DISTINCT ((((t0.c58)OR(vt0.c0)))AND(t0.c58))) FROM rt1 NOT INDEXED, vt0 WHERE (((NULL)/(CAST(0.24771724482119295 AS INTEGER))));SELECT ((((((((x'')AND(rt0.c0)))AND((rt0.c1 IN ()))))AND('ꋯ죷')))AND(((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c0)))) FROM rt0, t0, rt1, vt0; -- 1ms;
SELECT t0.c84 FROM rt1, rt0 WHERE (CASE CASE ''  WHEN 0.670388229440142 THEN x'' END  WHEN (('0.42758960035720195')*('CkDN')) THEN ('0.0' IN ()) END);SELECT DISTINCT ((((vt0.lid)OR(rt0.c1)))AND(t0.c0)) COLLATE RTRIM FROM rt0 WHERE ((~ (CAST(0.2075010903685992 AS INTEGER))));SELECT DISTINCT ((NULL) BETWEEN (vt0.lid) AND (((rt1.c2) ISNULL))) FROM rt1 WHERE ((((((((((- (1.090170599E9)))OR(((0Xc9c4b0b)GLOB(-1.500981067E9)))))AND(NULL COLLATE NOCASE)))OR(((0.3325653545649163)-(NULL)))))OR(((((x'')OR('-1721765994')))OR(x'')))));SELECT ALL ((vt0.lid) NOT BETWEEN (t0.c58) AND (t0.c0)) COLLATE BINARY FROM rt0, rt1 WHERE ((NOT (CAST(0.16883969410597954 AS TEXT)))) ORDER BY ((((((((rt0.c2)OR(rt1.c3)))OR(x'')))OR(rt1.c2)))OR(t0.c0)) COLLATE NOCASE ASC;SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (vt0.lid) AND (t0.c58)))&(rt0.c0)) FROM rt0, vt0 INDEXED BY i9, rt1 WHERE (x'') GROUP BY CASE rt1.c2 COLLATE RTRIM  WHEN rt0.c0 COLLATE RTRIM THEN GLOB(rt1.c1, vt0.lid) END, rt0.c2, CASE WHEN ((((t0.c0)AND(vt0.c0)))OR(rt1.c0)) THEN CASE rt0.c2  WHEN t0.c0 THEN rt1.c2 END ELSE -1820836444 END ORDER BY (((rt0.c1)) NOT BETWEEN ((((((rt1.c3)OR(t0.c58)))AND(rt1.c3)))) AND ((CAST(0.4495923657531248 AS REAL)))) ASC  NULLS LAST, (((t0.c84 IN ())) NOT BETWEEN (((rt1.c1)<=(t0.c0))) AND (((((vt0.lid)AND(rt0.c0)))OR(rt0.c0))))  NULLS FIRST, ((((((((vt0.lid)OR(rt0.c1)))AND(rt0.c1)))AND(rt1.c0)))OR((rt1.c3 IN (rt0.c2))))  NULLS LAST;SELECT DISTINCT CASE '867274169'  WHEN t0.c58 COLLATE RTRIM THEN ((((rt0.c2)OR(t0.c84)))OR(vt0.lid)) END FROM rt1, rt0, vt0, t0 WHERE ((((('s')>=(1878212594))) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt1.c0 THEN t0.c0 ELSE t0.c0 END THEN (vt0.c0 IN ()) ELSE (((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c58))) END FROM t0, rt0, rt1; -- 1ms;
SELECT x'871a', ((((CAST(t0.c0 AS REAL))OR((((rt1.c3, t0.c58, rt1.c0)) NOT BETWEEN ((t0.c0, rt0.c0, t0.c58)) AND ((rt0.c2, t0.c0, t0.c58))))))AND((~ (t0.c84)))), (((CAST(vt0.lid AS INTEGER)))<=((CAST(rt1.c0 AS BLOB)))) FROM rt0 WHERE (CASE ((x'')<<(x''))  WHEN ((x'')IS NOT(NULL)) THEN (x'' IN (x'')) ELSE LIKELIHOOD(DISTINCT -4.52461609E8, 0.10118828664093149) END);SELECT LAG(CASE t0.c58  WHEN t0.c84 THEN t0.c84 END COLLATE NOCASE, t0.c84, (t0.c0 IN ()) COLLATE BINARY) OVER (), CASE t0.c84  WHEN GLOB(rt0.c1, rt1.c2) THEN 0.38007101049420255 ELSE ((t0.c0) NOTNULL) END, AVG(load_extension(rt1.c1)) FROM t0;SELECT CHANGES() FROM rt0, t0 WHERE (((NULL)=((- ('1821151144'))))); -- 0ms;
SELECT DISTINCT NULLIF(((((((((rt1.c1)OR(rt1.c0)))AND(t0.c84)))OR(t0.c84)))OR(t0.c0)), ((rt0.c0)|(t0.c58))) FROM t0, rt0, vt0;SELECT DISTINCT IFNULL(DISTINCT ((vt0.lid) NOTNULL), (+ ('0.10661988016149371'))) FROM vt0, rt0, rt1 ORDER BY ((((rt1.c2)OR(CASE WHEN vt0.lid THEN vt0.c0 END)))AND((((vt0.lid)) BETWEEN ((rt1.c1)) AND ((vt0.c0))))) LIMIT 113214931; -- 0ms;
SELECT DISTINCT TRIM((- (rt0.c0)), ((rt1.c3) ISNULL)) FROM rt1, rt0, vt0, t0 ORDER BY 0.14902728090066086  NULLS LAST; -- 0ms;
SELECT DISTINCT ((0.8584096915475625)IS(vt0.lid)) FROM rt0, rt1, vt0 WHERE (-350305740); -- 0ms;
SELECT ((rt1.c2)>>(((rt1.c1) BETWEEN (t0.c0) AND (rt1.c1)))), NULL, (rt0.c2 IN (vt0.c0)) COLLATE BINARY FROM t0, rt0, vt0 WHERE ((((((((((((NULL, NULL, x''))>=((0.6181776664922916, NULL, '6{J<OF]6'))))AND((('-319317167')|(0xffffffff87c8ff86)))))OR((- (0.4433843625967451)))))AND(TOTAL_CHANGES())))OR(((0.3687697218724214) IS FALSE)))) GROUP BY ((rt0.c1) NOT BETWEEN (rt1.c1) AND (CAST(t0.c84 AS TEXT))), 0.3068075571814126, (((((- (t0.c84)))OR(CASE WHEN '#&!1l' THEN NULL ELSE rt0.c0 END)))AND(((rt1.c1) IS TRUE))) HAVING (t0.c58 IN ());SELECT ALL ((t0.c58 COLLATE BINARY) NOT BETWEEN (CASE WHEN '-143319337' THEN rt0.c1 ELSE t0.c0 END) AND (((((t0.c84)AND('0.27850276160274323')))AND(rt1.c0)))) FROM t0 NOT INDEXED, rt1 NOT INDEXED CROSS JOIN rt0 ON TRIM(rt1.c1 COLLATE BINARY, CAST(rt1.c2 AS TEXT)) FULL OUTER JOIN vt0 ON (((('2&')OR(((((vt0.c0)AND(t0.c84)))AND(NULL)))))OR(vt0.c0 COLLATE BINARY)) WHERE ((((((x'bdb9', NULL, x'1f68')) NOT BETWEEN ((NULL, 0Xffffffffec8b5850, x'')) AND ((x'06b1', 0.39936182093601214, 1.562399122E9))))IS NOT(((('-64595150')) NOT BETWEEN ((0.674502777146074)) AND (('-103505502')))))); -- 0ms;
SELECT 0.5530079967288237 FROM rt1, vt0, t0, rt0; -- 0ms;
SELECT DISTINCT 'EJj!<\re', (rt1.c2 IN ()) COLLATE RTRIM, '/' FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt1.c2))) ISNULL), (((-3.72801702E8, CAST(vt0.c0 AS REAL), COUNT(*), COUNT(rt1.c2), CASE WHEN vt0.lid THEN rt1.c3 END))>((CAST(rt0.c1 AS TEXT), CASE WHEN rt0.c2 THEN rt1.c3 WHEN t0.c0 THEN t0.c58 WHEN t0.c0 THEN vt0.lid WHEN rt0.c1 THEN t0.c58 WHEN x'' THEN rt0.c2 END, rt0.c0 COLLATE RTRIM, (t0.c0 IN ()), x''))), LAST_VALUE((((((((((((('-1854044550')AND(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.lid)))AND(vt0.c0)) COLLATE NOCASE) OVER () FROM vt0 WHERE (((UPPER(x'facf')) NOT BETWEEN (('-809038136' IN (x'13f0', NULL))) AND (((x'') NOTNULL))));SELECT DISTINCT AVG(((t0.c0)IS NOT(rt1.c1)) COLLATE NOCASE) OVER () FROM t0, vt0 WHERE (CAST((x'' IN ()) AS BLOB)) ORDER BY ((((((vt0.lid) BETWEEN (0.23825001652579125) AND (rt1.c0)))OR(((rt1.c3)%(rt1.c1)))))OR(CASE WHEN rt1.c0 THEN t0.c84 END)) DESC;SELECT ALL 0x40abaa12 FROM vt0, rt1, rt0 GROUP BY ((rtreenode('', rt1.c3)) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (CAST('' AS NUMERIC))) HAVING CASE WHEN ((rt0.c0) IS FALSE) THEN (~ (t0.c84)) END;SELECT ALL (((((rt1.c1))==((rt0.c1)))) BETWEEN (vt0.lid) AND (HEX(t0.c84))), ((((rt0.c2)LIKE(rt1.c2)))AND((((((((('2Hs')OR(rt1.c3)))OR(vt0.c0)))AND(t0.c84)))OR(t0.c84)))), CASE ((t0.c84)OR(NULL))  WHEN (rt0.c1 IN ()) THEN ((t0.c58)||(vt0.c0)) END, COUNT(*), (('e9')<(rt1.c0)) COLLATE NOCASE FROM rt0, t0, rt1, vt0; -- 0ms;
SELECT DISTINCT (((((rt1.c2 IN (-2029170062)))OR(CASE rt1.c3  WHEN rt1.c0 THEN rt0.c2 END)))AND(rt1.c1)) FROM vt0, t0;SELECT DISTINCT (((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN rt1.c3 WHEN t0.c84 THEN NULL WHEN t0.c58 THEN t0.c0 ELSE rt1.c2 END)) AND ((rt1.c2))) FROM rt1, rt0, vt0, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (rt1.c3) AND (t0.c58))) IS FALSE) FROM vt0, rt0, t0, rt1; -- 0ms;
SELECT DISTINCT NTILE((- (UNLIKELY(DISTINCT rt1.c3)))) OVER () FROM rt1, vt0 WHERE ((((((('638498283') IS TRUE))OR(((0Xffffffff93aab974)+('2089496567')))))AND((((NULL))=((NULL)))))); -- 0ms;
SELECT ALL ((((rt1.c2))<>((rt1.c3))) IN ()), RANK() OVER ( ORDER BY (((((((((t0.c0 IN ()))OR(CAST(rt1.c0 AS REAL))))AND(((rt1.c1)>>(x'e57d')))))AND(((rt0.c2)IS(vt0.c0)))))AND(((vt0.c0)>(rt1.c0)))) ASC  NULLS FIRST), (+ (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))) FROM vt0, rt0 WHERE (((((CASE WHEN x'' THEN x'af00' ELSE '' END)OR((NOT (x'')))))OR('0U' COLLATE BINARY)));SELECT ALL GROUP_CONCAT((~ (0.7670518189220401))) OVER () FROM t0 WHERE (ROUND(CAST(x'' AS NUMERIC), '-291367930' COLLATE BINARY)); -- 0ms;
SELECT ALL t0.c84 COLLATE BINARY, CAST(CASE WHEN t0.c58 THEN vt0.lid ELSE rt1.c2 END AS TEXT), (((('\4pnWM') NOT NULL)) BETWEEN (((NULL) NOT BETWEEN (rt1.c2) AND (t0.c58))) AND (COUNT(t0.c58))) FROM t0 WHERE (((((((0Xffffffffcca74258)AND('1521027844')))AND('-200610154'))) NOT BETWEEN (NULL) AND ((('-1854044550') IS TRUE)))) LIMIT -1589743074;SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.lid)))|(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)))), MIN(CAST(rt1.c2 AS NUMERIC)), CAST(((rt1.c0)<=(t0.c0)) AS TEXT) FROM vt0, rt0 WHERE (UPPER(DISTINCT (~ ('147375705'))));SELECT ALL ((((rt0.c0) ISNULL))*((~ (vt0.lid)))) FROM t0, vt0, rt0 WHERE (x'd394'); -- 0ms;
SELECT DISTINCT ((+ (t0.c0)) IN ()) FROM rt0, rt1, t0, vt0; -- 0ms;
SELECT DISTINCT (+ (0X2b1b288a)) FROM vt0; -- 0ms;
SELECT ALL (~ (((rt0.c2)!=(vt0.lid)))) FROM t0, rt1, vt0 WHERE (((((((((((((((((x'd19f')AND(0.5776497852124879)))OR('2074655855')))OR(NULL)))OR(NULL)))AND(((NULL) NOT NULL))))AND(0.9024045658939555)))OR((('') NOT BETWEEN (x'') AND (NULL)))))OR(CASE WHEN 0.7478878292595851 THEN 0.37644257984933827 ELSE NULL END)));SELECT DISTINCT ABS(DISTINCT LIKE('-654582412', rt1.c0, '0')) FROM rt1, vt0 LIMIT -2035524615; -- 0ms;
SELECT ALL SUM(CAST(rt0.c2 AS INTEGER)) FROM rt1, t0 WHERE ((NOT (CASE WHEN NULL THEN '67229031' WHEN '-1322581288' THEN NULL WHEN NULL THEN NULL ELSE '' END))) LIMIT 2018857174 OFFSET -997644950;SELECT DISTINCT ((((rt0.c1 COLLATE RTRIM)AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c1)), NULL, ((((((t0.c84)AND(rt0.c0)))AND(vt0.c0))) BETWEEN (((rt1.c0) NOT BETWEEN (NULL) AND (0.8964043872504642))) AND (((rt0.c2) NOT BETWEEN (x'') AND (t0.c0)))) FROM t0, vt0 WHERE (ABS(DISTINCT 0.9587884968186592 COLLATE NOCASE));SELECT ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c58)))OR(x'04a7')) FROM t0, rt0, rt1 NOT INDEXED;SELECT ALL (NOT ((((rt1.c0))<=((rt1.c3))))) FROM vt0, rt0, rt1, t0 WHERE (((1318180498 COLLATE BINARY) IS TRUE)) ORDER BY 'UBa}'  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t0.c0, rt1.c0, NULL)) BETWEEN ((rt1.c3, rt0.c2, rt0.c1)) AND ((rt1.c3, t0.c84, vt0.lid))) IN ()) FROM rt1 LIMIT -268603248 OFFSET 492922197; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED((+ (t0.c0))) FROM rt0, t0, rt1, vt0; -- 0ms;
SELECT ALL (NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) FROM vt0, t0 WHERE ((((('453067571')&('-180749214')))OR(CAST(x'' AS NUMERIC))));SELECT DISTINCT ((UNLIKELY(0.3149500586613879))IS(MIN('UtRpn'))) FROM vt0, t0, rt0; -- 1ms;
SELECT DISTINCT ((rt1.c2) ISNULL) COLLATE RTRIM FROM t0 NATURAL JOIN rt0;SELECT DISTINCT (((rt0.c0 IN ())) IS FALSE) FROM rt1, vt0, t0, rt0 WHERE (HEX(((-7.8676298E8) NOT BETWEEN (0.7403851903655385) AND (x'b063')))) ORDER BY CAST(((((vt0.lid)AND(t0.c58)))AND(vt0.c0)) AS INTEGER) DESC  NULLS LAST, t0.c58  NULLS FIRST; -- 0ms;
SELECT ALL LIKE(t0.c84 COLLATE NOCASE, ((vt0.lid) NOTNULL), '%') FROM rt1;SELECT DISTINCT ((((((t0.c58)+(NULL)))OR((vt0.c0 IN ()))))AND(vt0.c0 COLLATE BINARY)) FROM rt1 WHERE (CAST(((((NULL)AND('0.17052724909954442')))OR(NULL)) AS TEXT));SELECT ALL rt1.c3, json_remove(((rt1.c2) BETWEEN (rt0.c2) AND (t0.c0)), '-710021039'), ((rt0.c2)%(rt0.c0)) COLLATE BINARY FROM rt0, vt0 WHERE (((((('>15_')OR(NULL)))AND(0.5904717109588136)) IN ()));SELECT ((~ (rt1.c1)) IN ((rt1.c1 IN ()))) FROM rt0, t0, rt1 WHERE ((((((((((0.3889037485709078 IN (8.40289305E8, '1522458114')))OR(((x'') BETWEEN (NULL) AND ('2.+9')))))OR(((x'')&(x'')))))OR((('')|(NULL)))))AND((((((((('1255280928')OR(NULL)))OR(0.6453415642135731)))AND('')))AND(0.2494818331299965))))); -- 1ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt1.c0) AND ('-2036370248')))<<(vt0.lid COLLATE NOCASE)) FROM rt1, vt0 WHERE (((CASE WHEN NULL THEN '{H' ELSE 0.8751395064211885 END) IS FALSE));SELECT DISTINCT rt0.c0 FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL (CAST(NULL AS NUMERIC) IN ()) FROM rt1, t0, vt0, rt0 WHERE (CASE WHEN ((1218870781) ISNULL) THEN ((((((((0.591278568525543)OR(0x53a3b101)))OR(0.04038717963106997)))OR(NULL)))AND(x'3893')) END); -- 0ms;
SELECT ALL NULL FROM rt0 CROSS JOIN vt0 ON rt1.c2 COLLATE RTRIM;SELECT rt0.c0 COLLATE NOCASE, (((((((((vt0.lid)AND(1114345573)))AND(vt0.c0)))AND(0.3541307069536048)))OR('')) IN ()), ((rt1.c1 COLLATE RTRIM)>=(UNLIKELY(DISTINCT '1289442524'))), (((vt0.lid COLLATE BINARY, ((vt0.lid)OR(t0.c0)), ((rt1.c0)+(vt0.c0))))==((TOTAL_CHANGES(), rt1.c1 COLLATE RTRIM, (vt0.c0 IN (rt1.c0))))), COUNT(*) OVER ( RANGE CAST(((rt0.c1) ISNULL) AS BLOB) PRECEDING) FROM rt0, t0 WHERE (((CASE '179141715'  WHEN x'' THEN 0.6799850908267198 WHEN 0.08727237780277497 THEN '-854856730' WHEN x'' THEN '' ELSE NULL END)OR((- (NULL))))) LIMIT 325837487;SELECT ALL UNLIKELY(DISTINCT ((rt0.c0) IS TRUE)) FROM rt1, t0 WHERE (((NULL COLLATE RTRIM)|(((NULL) BETWEEN (NULL) AND (NULL)))));SELECT DISTINCT ((((((rt0.c0) BETWEEN (-2056510567) AND (rt0.c0)))AND((rt1.c1 IN (rt1.c2, vt0.lid, rt1.c1)))))AND(((vt0.lid) BETWEEN (rt1.c2) AND (rt1.c2)))), CASE ((((vt0.c0)AND(vt0.c0)))AND(rt0.c1))  WHEN LIKELIHOOD(t0.c84, 0.9659248558530088) THEN NULL END, ((((rt0.c2)IS(0.1879274686809691)))|(t0.c58 COLLATE BINARY)) FROM vt0, rt1 WHERE (('s' IN ()) COLLATE NOCASE);SELECT ALL (((((rt1.c0 IN (rt0.c0)))OR(((t0.c58)IS NOT(rt0.c2)))))OR(((((t0.c0)OR(rt0.c2)))AND(t0.c84)))), NTH_VALUE(((rt1.c0)IS NOT(((rt0.c2) NOTNULL))), ((((((rt0.c2)<=(rt0.c2)))AND((('-963915825')>=(rt1.c3)))))OR(((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c1))))) OVER (), SUM(json_insert(t0.c84, t0.c58, rt1.c2)) OVER () FROM rt0, vt0, rt1 WHERE (NULL);SELECT DISTINCT ((CAST(NULL AS INTEGER))&((NOT (rt0.c0)))) FROM vt0;SELECT COUNT(*) FILTER(WHERE CAST(CAST(t0.c58 AS INTEGER) AS INTEGER)) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOTNULL))>=(((rt1.c1)&(t0.c58)))) FROM rt1, vt0;SELECT t0.c84, CAST((((rt0.c1))=((rt0.c1))) AS REAL), SUM((- (vt0.lid))) FROM vt0, t0, rt1, rt0 WHERE (((('') ISNULL) IN ())) ORDER BY 0xffffffffee8986f8 DESC, (((rt1.c2)OR(t0.c0)) IN ()), LIKELIHOOD(CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END, 0.5703839836968084); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c0)) END FROM t0, rt0, rt1 WHERE (CASE WHEN ((x'') NOT BETWEEN (1744655147) AND (NULL)) THEN (NOT (0.7691923508111002)) WHEN (NOT (0.41540957144481716)) THEN (((NULL)) BETWEEN ((x'')) AND ((NULL))) WHEN x'31c9' COLLATE RTRIM THEN '' COLLATE BINARY END) GROUP BY (((t0.c84)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c1)))) AND ((CAST(rt1.c2 AS BLOB)))); -- 0ms;
SELECT ALL vt0.lid FROM rt0, rt1, vt0, t0; -- 0ms;
SELECT ('团''' IN ()), 0.10695079998460988, SUM(NULLIF(DISTINCT x'', vt0.c0)) OVER () FROM rt0, t0, vt0, rt1 GROUP BY rt1.c0, CASE CASE WHEN rt0.c1 THEN t0.c58 ELSE rt0.c2 END  WHEN (rt0.c1 IN ()) THEN LIKELIHOOD(DISTINCT t0.c0, 0.9246078046856684) WHEN t0.c58 COLLATE RTRIM THEN ((((NULL)AND(rt1.c0)))OR(vt0.lid)) WHEN CASE rt1.c0  WHEN rt1.c1 THEN t0.c0 ELSE rt0.c2 END THEN t0.c58 ELSE (rt0.c1 IN ()) END, t0.c84; -- 0ms;
SELECT DISTINCT load_extension(((rt1.c2) IS TRUE), vt0.lid COLLATE RTRIM), 217862919, (((NOT (t0.c58))) BETWEEN (((t0.c84)|(t0.c58))) AND (((rt1.c1) BETWEEN (t0.c84) AND (rt1.c2)))) FROM t0 WHERE (((IFNULL(x'965b', x'95ad63ea'))<>(((x'')|(x'')))));SELECT ALL rt0.c0, COUNT(*), ROW_NUMBER() OVER () FROM rt0 WHERE ((((((x'') NOT BETWEEN ('') AND (x'cb9c')), (((('67229031')AND('')))AND(0.2936957261226806)), '0.27850276160274323'))>=((0.802963674713568 COLLATE BINARY, HEX(DISTINCT 0.09376904838846445), NULL)))); -- 0ms;
SELECT ALL CAST(((((rt1.c1)AND(rt0.c2)))OR(rt0.c1)) AS NUMERIC) FROM vt0;SELECT DISTINCT ((((((t0.c84)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))))>(('1952566442'))) FROM rt1, vt0, t0, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((x'')AND(MIN(rt0.c2))))OR(((((rt0.c2)AND(t0.c0)))AND(vt0.c0)))) FROM t0, rt0, rt1, vt0 WHERE (((((((x'0506')OR(NULL)))OR('pF'))) NOT BETWEEN (CASE x''  WHEN NULL THEN 0x151e7d52 END) AND (((('', x'36a9', ''))>((0Xffffffffe29fa6f6, x'', NULL)))))); -- 0ms;
SELECT DISTINCT CASE WHEN AVG(rt1.c1) THEN ((t0.c84) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END FROM rt0, t0 WHERE (((CASE WHEN NULL THEN 0Xffffffffaa08f2de ELSE '-1678957974' END) NOT BETWEEN ((((-2.125827782E9))<((0xffffffffcd0bebe6)))) AND (('-1328018862' IN ()))));SELECT DISTINCT ((((rtreenode(t0.c0, rt0.c1))OR((((-1809984981))>=((t0.c0))))))AND(x'991c')), MAX(((t0.c84)||(t0.c58))), (((t0.c84)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)IS(t0.c0))))) FROM rt1, rt0, vt0, t0 WHERE (CAST(json_extract(0.8090449933034967, NULL) AS NUMERIC)) GROUP BY CASE ((t0.c84) BETWEEN ('-746101010') AND (0.641466925633793))  WHEN json(vt0.c0) THEN ((((((((t0.c58)AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) WHEN DATETIME(rt1.c1, vt0.c0, rt1.c2) THEN t0.c0 COLLATE BINARY WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 END THEN ((('0.4606744286757425')) NOT BETWEEN ((0.4317932521896216)) AND ((vt0.lid))) ELSE ((rt1.c0) ISNULL) END; -- 1ms;
SELECT DISTINCT (rt0.c2 COLLATE NOCASE IN ()) FROM t0, vt0, rt0, rt1 WHERE (((('0.9414167429048463')) BETWEEN (((+ (x'1634')))) AND ((x'')))) GROUP BY (('832984697' IN ()) IN (((rt0.c1)||(rt0.c1)))) HAVING (((('-197043406')<=(rt1.c2))) IS TRUE); -- 0ms;
SELECT DISTINCT NULL COLLATE NOCASE, ((((rt0.c2)<<(rt1.c0)))>=(CAST(rt1.c2 AS TEXT))), MAX(rt1.c3) FROM vt0, rt1, t0 LIMIT 1432789127;SELECT ((((((0x225d7761)>>(t0.c58)))AND(t0.c0 COLLATE RTRIM)))AND((((t0.c0)) BETWEEN ((-1465597624)) AND ((rt1.c0))))) FROM rt1, rt0, t0, vt0; -- 0ms;
SELECT ALL (((COALESCE(DISTINCT rt1.c2, vt0.c0, rt1.c3, rt0.c2), ((t0.c0) BETWEEN (vt0.c0) AND (rt0.c2)), CAST(rt0.c1 AS TEXT)))=((IFNULL(DISTINCT t0.c0, t0.c58), t0.c84 COLLATE BINARY, ((((((((vt0.c0)OR(t0.c58)))AND(t0.c58)))AND(vt0.c0)))AND(rt1.c3))))) FROM t0 WHERE (CAST(((((0.5118685111017521)OR(0.8038014160652043)))OR(0.7793264882758308)) AS TEXT));SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) NOTNULL), t0.c84, ((rt0.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT BETWEEN (rt1.c1) AND (vt0.lid))) AND ((+ (rt0.c1)))) FROM t0, rt0, rt1;SELECT DISTINCT (~ (highlight(0.36402064576093074, 0.9851622031796428, vt0.c0, rt1.c0))) FROM rt0, rt1, vt0, t0;SELECT DISTINCT CAST((rt0.c1 IN ()) AS NUMERIC), GLOB(((vt0.lid)IS NOT(rt1.c2)), ((rt0.c1) IS FALSE)), json_quote(x'') FROM rt1, rt0, vt0, t0 LIMIT -637712034;SELECT ALL CAST(((rt1.c3) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS TEXT) FROM vt0, rt1, rt0, t0 ORDER BY ((CASE vt0.c0  WHEN NULL THEN rt0.c2 WHEN t0.c84 THEN rt1.c2 WHEN t0.c58 THEN rt1.c1 END) BETWEEN (-1904161794) AND (NULL)) DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((((rt0.c2)IS NOT(rt1.c2)))<=(((rt0.c2)<<(rt1.c2)))), LIKE(((t0.c0) IS FALSE), ((rt1.c1)|(vt0.lid))), (vt0.lid IN ()) COLLATE BINARY FROM vt0, t0, rt1 WHERE ((((NULL) IS FALSE) IN ()));SELECT DISTINCT TRIM(vt0.c0) COLLATE RTRIM FROM t0, vt0 WHERE (((((0.33531722244742557) NOT BETWEEN ('490067657') AND (NULL)))<=('0.9024113715388706'))); -- 0ms;
SELECT DISTINCT TOTAL((('')>=(rt1.c1))) FROM rt1, rt0; -- 1ms;
SELECT ALL ((MIN(rt1.c2))<<(MIN(rt0.c2))) FROM t0, rt1;SELECT DISTINCT 0.0423704034274307, CAST(rt0.c2 AS REAL) COLLATE BINARY, ((NOT (t0.c84)) IN ()) FROM rt0, rt1, t0 ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN t0.c0 THEN t0.c0 END)*(((((rt1.c3)OR(t0.c84)))AND(t0.c84))))  NULLS LAST;SELECT ((((t0.c58)>=(t0.c84)))|(CASE rt1.c2  WHEN t0.c84 THEN vt0.lid ELSE rt0.c0 END)) FROM rt0;SELECT DISTINCT ((((rt1.c3) NOT BETWEEN ('983613696') AND (rt1.c1))) IS TRUE) FROM rt1, vt0 NOT INDEXED, t0 ORDER BY CAST(((((rt0.c1)AND(x'1e7f')))AND(t0.c84)) AS TEXT) ASC  NULLS FIRST;SELECT ((((((t0.c58)OR(rt0.c0)))OR(vt0.c0))) NOTNULL) FROM t0, rt0, vt0 WHERE ((- ((x'' IN ())))); -- 0ms;
SELECT ((((vt0.lid)AND(t0.c0)))AND(t0.c84)) COLLATE NOCASE, (('-1991383009')LIKE(((((rt1.c0)AND(vt0.c0)))AND(rt0.c0)))), ((t0.c58) NOT BETWEEN (rt1.c3) AND (rt0.c1)) COLLATE BINARY, (((((+ (t0.c58)))OR(((rt1.c2)LIKE(rt1.c1)))))AND((rt1.c2 IN ()))), SUM(t0.c0) FROM rt1, t0, vt0 ORDER BY rt1.c3;SELECT CAST(((t0.c58)%(t0.c0)) AS BLOB) FROM t0, rt1 WHERE (((NULL) NOT BETWEEN (NULL) AND (x'77f1')) COLLATE BINARY); -- 0ms;
SELECT (+ (((t0.c84) BETWEEN (0.3495889225469332) AND (rt1.c3)))) FROM rt0, t0, vt0 WHERE ((CAST('1063455056' AS NUMERIC) IN (load_extension(0x465fd237)))) LIMIT -589827565;SELECT DISTINCT (((vt0.c0, rt0.c1, vt0.lid))<=((rt0.c2, rt0.c0, 0.148167351463234))) COLLATE NOCASE FROM vt0, rt0 ORDER BY (+ (rt1.c2)) COLLATE BINARY  NULLS LAST LIMIT -618708349;SELECT DISTINCT ((((rt1.c2) BETWEEN (vt0.lid) AND (t0.c0)))IS(((t0.c58) BETWEEN (NULL) AND (rt0.c1)))) FROM t0, rt1 WHERE (CASE NULL COLLATE RTRIM  WHEN (((NULL, NULL, x'', '1514675794', 0Xfffffffff5ae3ac6)) BETWEEN ((NULL, x'', x'036f', x'8d2e3e33', 0.8576382913642498)) AND (('1211463257', -987188832, NULL, x'', x''))) THEN ((NULL)IS NOT(NULL)) ELSE x'' COLLATE RTRIM END);SELECT DISTINCT CASE WHEN LIKELY('p*>zŕ!{}?') THEN ((rt1.c0) ISNULL) END FROM rt0, rt1 WHERE (x'57dbd1a9'); -- 0ms;
SELECT DISTINCT (((CASE t0.c58  WHEN rt0.c2 THEN vt0.lid END))>((((rt0.c0)>=(rt1.c0))))) FROM rt1, vt0, rt0, t0 WHERE (TRIM('')); -- 0ms;
SELECT ALL AVG(418229988) FROM t0 WHERE ((((((('')>(NULL)))OR(CASE WHEN '315978108' THEN -0.0 ELSE x'' END)))OR(LIKELY(x'3122')))); -- 0ms;
SELECT DISTINCT vt0.lid FROM t0 WHERE (((((-577760447)-(NULL))) NOT BETWEEN (CASE 0X2b71c01  WHEN 0xffffffffa83f285c THEN -530732627 ELSE NULL END) AND (TOTAL_CHANGES()))) ORDER BY ((((0.5269998915895939)<(rt1.c3))) BETWEEN (((rt1.c2)LIKE(t0.c58))) AND ((('1P')%(0.9255848808596397)))) ASC  NULLS LAST;SELECT (((+ (rt1.c0)))<=(((0x18edaee4) IS TRUE))), NULL, ((((t0.c84) ISNULL)) BETWEEN (((((rt1.c3)AND(t0.c84)))OR(t0.c58))) AND (((rt1.c1) BETWEEN (t0.c58) AND (rt1.c1)))) FROM vt0, rt0, rt1, t0 WHERE (CASE WHEN TYPEOF(DISTINCT 0.3149500586613879) THEN (('1720261993')AND(0.5375469056830531)) END) LIMIT 877130667; -- 0ms;
SELECT DISTINCT 0xffffffff81b658ed FROM rt1, rt0, t0, vt0 ORDER BY ((((t0.c0))=((rt0.c2))) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (json_valid(vt0.c0) IN ()), UNLIKELY((- (vt0.lid))), ((LIKELY(vt0.c0)) BETWEEN ((rt1.c0 IN ())) AND (((((((((rt1.c2)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)))), TOTAL(((vt0.c0)-(rt1.c2))) OVER (), CASE WHEN t0.c0 THEN (((('ok%j~?m5''nm')AND(vt0.c0)))OR(rt0.c1)) END FROM rt1, t0 WHERE (CASE ((x'')==(0.3412444297753019))  WHEN ((x'') BETWEEN (x'ba3a') AND (0.005556424289685391)) THEN (((('0.8679829838825067')AND('-594869931')))AND(0.17370183558408359)) END);SELECT ALL x'' COLLATE RTRIM FROM rt1, vt0; -- 0ms;
SELECT DISTINCT ((UPPER(vt0.lid))<<(LTRIM(rt1.c1))) FROM t0;SELECT DISTINCT (NOT (((rt1.c0)<>(vt0.lid)))) FROM vt0, rt0 GROUP BY ((((TRIM(t0.c84, t0.c0))AND(CAST(rt0.c2 AS TEXT))))OR(CAST(vt0.c0 AS REAL))) ORDER BY ((((((((rt1.c1)AND('-316564570')))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c84))))))OR(((t0.c0)%(t0.c58)))))AND(t0.c84 COLLATE RTRIM)) DESC;SELECT ALL (((('904258456') NOT NULL)) BETWEEN (((rt1.c3) BETWEEN (t0.c84) AND (rt1.c0))) AND (0.10337981689419473)) FROM rt1;SELECT ALL MAX(((((((((rt0.c1)OR(rt1.c0)))OR(t0.c0)))AND(rt0.c2)))OR(rt1.c1))) FROM rt1 WHERE (CASE CASE NULL  WHEN '-1362006832' THEN '2089496567' WHEN '퇱' THEN 0X2b345519 WHEN 0.5918237268447221 THEN 0.27271816384042136 WHEN '0.364748908719009' THEN 0Xffffffff81b658ed WHEN '-679554247' THEN -4.92853514E8 ELSE 0.2768280689142657 END  WHEN (~ (NULL)) THEN '' COLLATE BINARY ELSE (('983613696')AND(NULL)) END);SELECT DISTINCT ((((0x7c8b2ff7)AND(rt1.c3 COLLATE NOCASE)))OR(MIN(t0.c0))) FROM rt1, rt0 WHERE (CAST((- ('')) AS TEXT)) GROUP BY '-1413156391', ((((rt1.c2) BETWEEN (t0.c0) AND (t0.c84)))LIKE((~ (NULL)))), (((+ (x'')))<>(((rt0.c1)+(rt0.c1)))) ORDER BY (((vt0.lid) NOTNULL) IN ());SELECT (UPPER(t0.c58) IN ()) FROM rt1, vt0, t0 WHERE (((CAST('-143319337' AS REAL))/(((NULL)LIKE(NULL))))); -- 0ms;
SELECT ALL ((((rt1.c0) NOT BETWEEN (t0.c84) AND (rt0.c1))) NOT BETWEEN (((vt0.lid)<<(rt1.c1))) AND (((t0.c84) IS TRUE))) FROM vt0 WHERE ((((((0Xffffffffbd0ac8f7)||(NULL)), (((x'', x'', x'')) BETWEEN ((x'80ca', NULL, 'f䰆')) AND ((NULL, x'2218', -1.442254114E9))), x''))<=((((x'3b3e') IS TRUE), ((NULL)!=('739730396')), ((x'')%(0.6346609793215772)))))) LIMIT -956686061 OFFSET -452461609;SELECT DISTINCT (((((((((((((t0.c84 IN ()))OR('702839467' COLLATE RTRIM)))OR('113214931')))AND(CASE rt1.c3  WHEN t0.c84 THEN rt1.c2 END)))AND(rt0.c0)))OR(UNICODE(rt1.c3))))AND(CASE WHEN rt0.c1 THEN vt0.c0 END)) FROM rt0, t0, vt0, rt1; -- 0ms;
SELECT DISTINCT ((CASE rt1.c2  WHEN rt0.c2 THEN vt0.c0 END) BETWEEN (rt0.c1) AND (((((rt0.c2)OR(0.2571522766517419)))AND(rt1.c3)))) FROM rt1, rt0 WHERE (((((('-g')OR('IrT+7\noq')))OR(x'22e2')) IN (load_extension(x''), CASE '840289305'  WHEN x'233ead81' THEN 0.35574590118369787 ELSE NULL END))) GROUP BY (((ABS(DISTINCT vt0.lid)))<((CASE rt1.c2  WHEN t0.c84 THEN rt1.c0 END)));SELECT ALL (- (CAST(rt0.c1 AS NUMERIC))), ((((rt1.c2)&(rt1.c3))) NOTNULL), COUNT(*) FROM rt1, vt0, t0 WHERE (((((CAST(NULL AS NUMERIC))OR((((NULL, NULL, -1.386223551E9))>=(('509935941', '1366136768', 0.5474676537997065))))))AND((x'' IN (x'', NULL))))) LIMIT -372801702 OFFSET -738172620;SELECT (- (((rt1.c2) NOT NULL))) FROM vt0, rt0, t0;SELECT ALL ((CASE WHEN rt1.c2 THEN rt1.c1 END)LIKE(((((rt1.c2)OR(rt1.c3)))AND(rt0.c1)))) FROM rt0, rt1 WHERE (((((((((((((('576550753')OR('B>hⷎj')))AND('/jIB>P')))OR(0.20800695591438756)))AND(NULL)))AND(NULL)))AND(NULL)) IN ())); -- 0ms;
SELECT DISTINCT LIKELIHOOD(rt0.c0 COLLATE RTRIM, 0.47437818361713857) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)GLOB(rt0.c2)))OR(IFNULL(DISTINCT rt0.c0, t0.c0))))OR(((rt1.c1) NOT BETWEEN (x'') AND (rt0.c1)))))AND(t0.c58)))OR('-106275296')), ((CASE WHEN t0.c84 THEN vt0.lid WHEN t0.c84 THEN t0.c84 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(t0.c0 AS INTEGER))), (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt1.c3) AND (t0.c58))) AND (SUBSTR(vt0.lid, vt0.c0))), UPPER(((rt0.c0) NOTNULL)), (((rt0.c0)) BETWEEN ((rt1.c2)) AND ((TIME(rt1.c1, NULL, t0.c58)))), CAST((((vt0.lid, vt0.c0, vt0.lid))<((0Xffffffffc1fae259, rt0.c2, rt1.c1))) AS BLOB), ((((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c84)))OR((rt1.c2 IN ()))))OR(((rt1.c2)*(rt1.c1)))) FROM vt0, rt1, rt0, t0 WHERE ((~ (((((NULL)AND(x'')))OR(0.09087516095662296))))); -- 0ms;
SELECT AVG(CAST(vt0.lid AS TEXT) COLLATE RTRIM) OVER (), MAX((rt1.c3 IN (rt1.c3))) COLLATE NOCASE, ((((rt1.c1) NOT NULL)) NOT BETWEEN (((t0.c84)/(rt1.c1))) AND (COUNT(*))) FROM t0, vt0, rt0;SELECT DISTINCT (((t0.c84 IN ()))>(CASE WHEN t0.c58 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c2 WHEN t0.c58 THEN rt1.c0 END)), ((rt0.c2 IN ()) IN ()), ((((vt0.c0) NOTNULL))IS NOT('1090170599' COLLATE BINARY)) FROM vt0 NOT INDEXED, rt0 WHERE (((('s1\n*I]ij') BETWEEN (x'6276') AND (x'')) IN ()));SELECT DISTINCT '' FROM rt1 WHERE (CAST((('f9yf') IS FALSE) AS NUMERIC)); -- 0ms;
SELECT ALL rt0.c2 COLLATE BINARY FROM rt0, rt1; -- 0ms;
SELECT x'' FROM rt1, vt0, t0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((rt0.c0)+(t0.c0)))&(CASE rt0.c1  WHEN -3.8040099E8 THEN t0.c58 WHEN vt0.c0 THEN rt1.c0 WHEN t0.c84 THEN rt0.c2 END)) FROM t0 WHERE (((x'ff46') ISNULL) COLLATE BINARY);SELECT DISTINCT GROUP_CONCAT((- (t0.c58))) FROM t0; -- 0ms;
SELECT IFNULL(DISTINCT CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c0 END, LTRIM(t0.c58)), ((((rt1.c0)==(rt0.c2))) NOT BETWEEN ((rt1.c0 IN (vt0.lid))) AND (rt1.c1 COLLATE NOCASE)), (((rt1.c0 IN ())) NOTNULL) FROM rt0, rt1, t0, vt0; -- 0ms;
SELECT ((((t0.c58)=(t0.c84))) NOT BETWEEN (((t0.c58)GLOB(rt1.c1))) AND ((rt0.c1 IN ()))) FROM rt0;SELECT CASE WHEN rt0.c0 THEN (rt0.c0 IN ()) ELSE rt0.c1 COLLATE BINARY END, t0.c58, SUM(((rt1.c0)<(rt1.c1))) OVER () FROM rt1, rt0;SELECT ALL ((CASE WHEN t0.c58 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (((rt1.c2)IS(rt1.c2))) AND (((rt1.c3) IS FALSE))) FROM rt0, vt0, rt1 WHERE ((((x'')) BETWEEN (('' COLLATE NOCASE)) AND ((((NULL)GLOB(NULL)))))) ORDER BY (- (CAST(t0.c0 AS NUMERIC)));SELECT DISTINCT ((((t0.c0) NOT NULL)) NOT BETWEEN (ABS(rt0.c1)) AND (((rt1.c2) BETWEEN (rt0.c0) AND (vt0.lid)))) FROM rt0, t0 WHERE (LIKELIHOOD(DISTINCT (('0.10807802876882433') ISNULL), 0.6336538689528786));SELECT DISTINCT FIRST_VALUE(((LIKELY(DISTINCT vt0.c0))/(CAST(vt0.lid AS BLOB)))) OVER () FROM rt1 LEFT OUTER JOIN vt0 ON CAST(((t0.c84)|(rt1.c0)) AS TEXT) LEFT OUTER JOIN t0 ON ((((+ (rt1.c3))))<((CASE WHEN vt0.lid THEN rt0.c2 END))) WHERE (CAST((('-12601669')%('-143319337')) AS REAL)) GROUP BY (((((t0.c58))>((t0.c0))))>>(CAST(vt0.lid AS NUMERIC)));SELECT TOTAL(LENGTH(vt0.lid)) OVER () FROM t0, rt1 ORDER BY ((((t0.c0)>(rt0.c0)))IS(((rt1.c0) IS FALSE))) DESC  NULLS FIRST, CAST(LENGTH(rt1.c3) AS REAL);SELECT DISTINCT (((((('1293995411') NOT BETWEEN (rt1.c2) AND (rt0.c0)))OR(((t0.c58) IS FALSE))))AND(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.lid)))) FROM rt0, vt0, rt1, t0; -- 0ms;
SELECT ALL (((((rt1.c3, rt0.c0, vt0.c0))=((t0.c84, t0.c84, t0.c58)))) ISNULL), CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.lid)) THEN SUM(rt0.c0) END, ((((((t0.c84)GLOB(rt1.c0)))OR(0Xfffffffffdf232a4)))OR(CAST(vt0.lid AS TEXT))) FROM rt0, t0, rt1;SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 END) NOT BETWEEN ((t0.c58 IN ())) AND (((vt0.lid)+(t0.c58)))) FROM rt0, t0, rt1 WHERE (LIKELY(((0.05258933038832836)==(NULL))));SELECT DISTINCT (NOT ((- (t0.c84)))) FROM vt0 WHERE (CAST(CAST(0.35108022179353815 AS TEXT) AS TEXT)) GROUP BY (((((rt1.c3, vt0.lid, rt0.c1))<=((vt0.lid, t0.c84, rt0.c1)))) NOTNULL), (((NOT (rt1.c3))) BETWEEN (TRIM(vt0.lid, rt0.c1)) AND ((rt1.c2 IN (vt0.c0)))), (NULL IN ()), NULL, ((((vt0.lid) IS FALSE)) IS FALSE), vt0.lid, x'eb4a';SELECT DISTINCT COUNT(*) FROM vt0 GROUP BY rt1.c1, CAST((vt0.lid IN ()) AS INTEGER), CASE x'6043'  WHEN ((t0.c84) ISNULL) THEN vt0.lid END HAVING ((((((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c1)) COLLATE BINARY;SELECT DISTINCT AVG(NULL) OVER () FROM vt0, t0 WHERE (CASE WHEN CAST(0.8193366494482144 AS INTEGER) THEN TRIM(x'', '-243322280') END); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((((((((((((rt1.c1)OR(rt1.c3)))AND(rt0.c2)))AND(vt0.c0)))AND(rt1.c3)))OR(rt0.c1)))AND(vt0.lid))) FROM vt0, rt1, t0;SELECT DISTINCT ((((((((t0.c58 COLLATE BINARY)OR((t0.c58 IN (rt1.c3)))))AND(rt1.c3)))OR(((t0.c84) IS TRUE))))AND(COUNT(t0.c0))) FROM vt0;SELECT (NULL IN ()) FROM vt0, t0 WHERE ((((0Xffffffff917d867a)) NOT BETWEEN (((((((((('')OR('-428343977')))AND(0xffffffffd84729e4)))AND(0x309709e6)))OR(0.8808449580776363)))) AND ((0.061837399703481344 COLLATE NOCASE)))); -- 0ms;
SELECT ALL (- (CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN vt0.lid END)), (2.021922049E9 IN ()), NTILE(NULL) OVER () FROM rt0, t0, vt0, rt1 WHERE ('-1328018862');SELECT DISTINCT (((((((((rt0.c2)OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c1)))OR(rt1.c3)) IN ()) FROM vt0 WHERE ((((('0.9296848394888599')AND(0.9360652070283909))) NOT NULL)); -- 0ms;
SELECT ALL (((((rt0.c0)AND(rt1.c1)))OR(rt0.c0)) IN (0.3602233010289855 COLLATE RTRIM)), CASE (+ (t0.c58))  WHEN (((t0.c0))>((rt0.c1))) THEN t0.c84 END, ((((((rt0.c1)IS NOT(rt0.c2)))OR(vt0.lid COLLATE RTRIM)))OR((~ (rt0.c1)))) FROM t0, rt1, rt0;SELECT DISTINCT (((((((((t0.c0 IN ()))AND('341416291')))OR(((rt1.c2)<('J\r')))))OR(((vt0.lid)IS(rt0.c1)))))AND((((t0.c58)) NOT BETWEEN ((rt0.c2)) AND ((t0.c84))))), CASE ((0X3cb10023)>=(t0.c58))  WHEN CASE WHEN t0.c84 THEN rt1.c3 END THEN AVG(rt0.c0) END, t0.c0 FROM t0, rt0, rt1, vt0 WHERE (((((0.25210826480302784 COLLATE BINARY)OR(CAST(0.8679829838825067 AS NUMERIC))))OR((+ (''))))) ORDER BY rt1.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)GLOB(t0.c84)) AS REAL) FROM vt0, rt0 WHERE (((('4-', 0Xffffffff9686e84a, 0X440bd692)) BETWEEN ((0.88420049829403, ((-1854044550) NOT BETWEEN ('UvUVx珘''[') AND (0.5465546525228383)), NULL COLLATE NOCASE)) AND ((CASE WHEN '1573583278' THEN '1421756013' WHEN '2048969622' THEN x'' WHEN 0.2896993908475243 THEN 1e500 END, (~ ('187054283')), CASE WHEN 0.5962599334069272 THEN NULL END))));SELECT DISTINCT COUNT(*) OVER (), -1.511325496E9, CASE WHEN ((rt1.c2) IS TRUE) THEN ABS(DISTINCT -1077949047) WHEN SQLITE_SOURCE_ID() THEN rt0.c1 WHEN (vt0.c0 IN ()) THEN 0.7991860529002528 END FROM t0, vt0, rt1, rt0 WHERE ('0.10337981689419473'); -- 0ms;
SELECT ALL TOTAL_CHANGES() FROM vt0, rt1; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0))) IS TRUE) FROM vt0, rt1, t0 WHERE (((CASE 1.275133006E9  WHEN 1373524284 THEN '-1953440168' WHEN 'ꋯ죷' THEN 0.5440101106750379 WHEN '485702594' THEN x'926a7526' END)<<(0.909056884047664 COLLATE RTRIM)));SELECT (((- (t0.c84))) NOT BETWEEN (rt1.c0) AND (((rt1.c1) ISNULL))) FROM rt0, t0, vt0, rt1 WHERE (0.957472103559585 COLLATE BINARY); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( PARTITION BY CASE WHEN NULL THEN CAST(t0.c84 AS NUMERIC) END, (((((vt0.lid, vt0.lid, rt1.c1, t0.c58, x''))<=((t0.c84, rt0.c2, rt1.c3, vt0.c0, t0.c84)))) NOT BETWEEN (((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2))) AND (((t0.c58) BETWEEN (vt0.c0) AND (vt0.c0)))) GROUPS  UNBOUNDED PRECEDING) FROM t0, vt0 WHERE (DATETIME(0.4184322921950916 COLLATE BINARY, ((0.8631307465116351)|(']TC#MX 3')), ((0.5215396895106151)OR(0.9119849619945035)), ((0xffffffffbf2812ec) NOT BETWEEN (-1083788343) AND (NULL)), NULL));SELECT ALL MIN(((t0.c58)IS NOT(rt0.c0))), ((rt1.c3) NOT BETWEEN (((rt1.c3) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c84)*(rt0.c1)))), MIN(TOTAL((+ (t0.c0)))) FROM rt0, rt1;SELECT DISTINCT CAST(-1551541718 COLLATE BINARY AS NUMERIC), ((load_extension(rt1.c0)) NOT BETWEEN ((NOT (t0.c0))) AND (((rt1.c1)LIKE(rt1.c2)))), CASE HEX(rt1.c0)  WHEN (((rt1.c1))!=((0.07290717756627119))) THEN CASE WHEN rt0.c2 THEN t0.c58 END ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) END FROM rt0, rt1, vt0;SELECT DISTINCT ((LIKELY(NULL))<=(TYPEOF(DISTINCT rt1.c0))) FROM vt0 WHERE (ABS((((('EJj!<\re')OR(0.019458548816596477)))AND(0.20934054401216962)))) ORDER BY ((((((-1264158263)OR(rt1.c3)))OR(rt1.c1))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (t0.c84 COLLATE NOCASE)) ASC  NULLS LAST;SELECT DISTINCT json_object(t0.c0, t0.c0), CASE (((rt0.c2))==((vt0.lid)))  WHEN x'' THEN (0.822753196485782 IN (rt0.c2)) END, CASE vt0.c0 COLLATE RTRIM  WHEN rt0.c0 COLLATE BINARY THEN UNLIKELY(rt0.c1) ELSE ((rt0.c0) BETWEEN (vt0.lid) AND (t0.c0)) END FROM rt1 ORDER BY '3L';SELECT (vt0.lid COLLATE NOCASE IN ()), SUM(((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0))) OVER (), ((rt0.c0) NOT NULL) FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT '~W*_Ms샭' FROM rt0, rt1 WHERE (((((x'149c') NOT NULL))IS NOT(CASE NULL  WHEN -1417074858 THEN x'' ELSE 'C58ღ~鳵q' END))); -- 0ms;
SELECT ALL AVG((t0.c0 IN (x''))) OVER (), NULL, MIN(COUNT(0.13418255926346667)) FROM rt1, rt0, vt0, t0 WHERE (((LIKELY('302521037'))-(((NULL) NOT BETWEEN ('') AND (NULL)))));SELECT DISTINCT CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c0)) END, CAST(t0.c58 AS TEXT), LAST_VALUE(t0.c58) OVER ( ORDER BY CAST((rt0.c0 IN (vt0.c0, NULL)) AS TEXT)  NULLS FIRST) FROM t0 INDEXED BY i84, vt0;SELECT ALL 0x54913b88 FROM rt1 GROUP BY CAST(vt0.lid COLLATE NOCASE AS REAL), ((((CAST(rt1.c0 AS BLOB))OR(((((((((rt1.c2)OR(t0.c58)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))))AND(CAST(t0.c0 AS BLOB))), t0.c58, rt1.c2, (((NOT (NULL))) IS TRUE);SELECT ((((0.32606457256188004)OR('')))/(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) FROM vt0, rt0, t0 WHERE (CAST(ABS(DISTINCT 0xffffffffe507fbd7) AS BLOB));SELECT DISTINCT (((NOT (vt0.lid)))<>((+ (rt0.c1)))) FROM rt0 LIMIT -855850350;SELECT DISTINCT COUNT(*) OVER (), LEAD('', ((((rt1.c3)AND(vt0.lid))) IS TRUE), ((rt1.c1) NOT NULL)) OVER (), ((((rt1.c2) NOT BETWEEN (vt0.lid) AND (t0.c0))) NOTNULL), ((((vt0.c0)%('')))<=(((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(vt0.lid)))AND(rt1.c0)))), t0.c84 COLLATE RTRIM FROM rt1, vt0, t0, rt0 WHERE ((((~ ('')))>>(((x'')&('400223396'))))); -- 1ms;
SELECT LAG(CAST(0.670388229440142 AS REAL), (((rt1.c2)IS(rt0.c1)) IN ()), ((vt0.lid COLLATE BINARY) NOT BETWEEN ((~ (rt0.c2))) AND ((((t0.c58))<>((rt0.c0)))))) OVER (), ((rt0.c2) BETWEEN (((x'760b')+(rt1.c1))) AND (ABS(rt0.c2))), ((rt0.c0)*(t0.c0)) COLLATE NOCASE FROM t0 INDEXED BY i9, rt0, rt1, vt0 ORDER BY (((rt1.c0 IN (t0.c58))) ISNULL) ASC;SELECT DISTINCT (~ ((rt0.c1 IN ()))) FROM rt0, vt0, rt1 WHERE ((NOT (((((0.15039712469821265)AND('1398464566')))AND(0.8421653291620798))))); -- 0ms;
SELECT DISTINCT ((IFNULL(DISTINCT '105509168', rt1.c2))OR(('' IN ()))) FROM t0;SELECT ALL COUNT(CAST(t0.c0 AS REAL)) OVER (), ((((t0.c84)<=(t0.c0))) BETWEEN ((((vt0.lid)) BETWEEN ((rt1.c1)) AND ((rt0.c0)))) AND (CAST(vt0.c0 AS REAL))), (t0.c84 IN ()) COLLATE NOCASE FROM rt1 WHERE ((((CAST(x'' AS TEXT)))<=((IFNULL(0Xffffffffb6187fb6, ''))))) LIMIT -199370171;SELECT ALL (((rt1.c3)) NOT BETWEEN (((0.8992682330842374 IN ()))) AND ((((t0.c84) BETWEEN (rt1.c1) AND (1.421756013E9))))) FROM rt1, vt0 WHERE ((NOT ((((x''))<=((0.9819125323670619))))));SELECT DISTINCT GROUP_CONCAT(LIKE(rt1.c0, rt1.c3) COLLATE BINARY) OVER () FROM rt0, vt0, rt1, t0 WHERE ((((((NULL)|(NULL)), ((0.9569521227449542) IS TRUE), ((((((((0.591278568525543)AND(0.10877420262415682)))AND('')))OR(x'')))OR('-467264017')), ((((NULL)OR(x'')))OR(904258456)), (- ('!,'))))<((0.6859350192969612, ((NULL)*(NULL)), ((-1.084258532E9)|(0Xffffffff84cd27fe)), ((NULL)>(0.170226449472349)), 0.4298436417564604)))); -- 0ms;
SELECT ALL (((~ (rt0.c1)))>=(rt1.c2)) FROM rt1, vt0, t0, rt0 WHERE ((((UPPER('s沰wTO焺yP')))<((CAST(0.21440921640216815 AS BLOB))))); -- 0ms;
SELECT MAX(0.4667863108193282) FROM rt1, rt0, vt0, t0 WHERE ('1845933582') GROUP BY ((((CASE rt0.c2  WHEN rt0.c0 THEN t0.c0 END)OR(NULL)))AND(CASE rt0.c2  WHEN t0.c0 THEN x'6089' ELSE vt0.lid END)) HAVING ((CAST(vt0.c0 AS BLOB))&(CASE WHEN t0.c84 THEN NULL ELSE rt1.c3 END)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0))) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c1) NOT NULL))) FROM vt0, t0 ORDER BY ((rt0.c2)==(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST, x'' DESC;SELECT ((t0.c58 COLLATE BINARY) IS TRUE) FROM t0, rt1, rt0 WHERE (((x'') IS FALSE)); -- 1ms;
SELECT ALL (((((rt0.c0)AND(t0.c0)))OR(rt0.c2)) IN ((+ (rt1.c2)))) FROM t0, vt0, rt1;SELECT FIRST_VALUE(((((rt1.c3)AND(rt1.c3))) BETWEEN ((- (vt0.lid))) AND (CAST(rt1.c1 AS BLOB)))) OVER () FROM rt1, vt0 WHERE ((((((0Xffffffff91d8abb6, x'', NULL))>((x'', '-+xk}', -9.40624689E8))))&(CASE ''  WHEN '1644551440' THEN NULL END))); -- 0ms;
SELECT DISTINCT ((((((rt0.c2) IS TRUE))AND((((rt1.c1, rt1.c3, rt1.c2)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((rt0.c2, NULL, rt0.c0))))))OR(((((rt1.c0)OR(t0.c58)))AND(t0.c58)))), (((((rt0.c1)+(t0.c58)), CASE WHEN vt0.c0 THEN rt1.c3 END, HEX(rt1.c0)))>((SUM(rt1.c3), CAST(t0.c0 AS INTEGER), ((t0.c0)LIKE(rt0.c1))))), ((0.16511673233313018)=((~ (rt1.c2)))), '･	', (((+ (rt0.c2)))LIKE(t0.c84)) FROM rt0, t0 WHERE (((((json_quote(x''))AND(((x'9ddc') BETWEEN ('CGGO\峧') AND (x'')))))AND(CASE WHEN x'' THEN 0.48645045711467705 ELSE '1886856319' END)));SELECT DISTINCT ((((t0.c0) ISNULL)) NOT BETWEEN ((NOT (t0.c58))) AND (CASE rt0.c1  WHEN t0.c58 THEN rt1.c2 WHEN t0.c84 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c0 END)), vt0.c0, COUNT(*) FROM rt1, vt0, rt0 INDEXED BY i13 WHERE (((((((((((x'')AND(x'd40b')))OR(x'7af8')))AND('-1521532177')))AND(NULL)))<(0Xffffffffe4261def COLLATE RTRIM))) GROUP BY json_remove(((vt0.lid) NOT BETWEEN (rt0.c2) AND (rt1.c1)), ((((rt1.c1)AND(t0.c0)))AND('4Nq')), (rt1.c0 IN (vt0.c0, t0.c0)), 0.20135528893473598) HAVING (((((t0.c0 IN (x'bd522080', rt1.c2)))OR(((rt1.c0)LIKE(t0.c58)))))OR(CASE WHEN rt0.c0 THEN rt1.c1 END));SELECT DISTINCT COUNT(*) FROM rt0, vt0, rt1, t0; -- 1ms;
SELECT DISTINCT vt0.lid, CAST('g{' AS REAL), (((((rt0.c1 IN ()))AND(MAX(rt1.c1))))AND(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)))) FROM t0, vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT TOTAL(((((vt0.lid)OR(rt0.c2)))AND(t0.c84))) OVER (), (((rt1.c3)) BETWEEN (((NOT (t0.c84)))) AND ((((rt0.c0)%(rt1.c1))))), CAST((('-1114072891') ISNULL) AS INTEGER) FROM rt0 GROUP BY (((((vt0.lid)AND(rt1.c1)))AND(rt1.c2)) IN ());SELECT ALL ((((((rt0.c1)OR(vt0.lid)))AND(rt1.c3)))>(((t0.c58)>=(rt1.c1)))), CAST(((((rt1.c3)AND(rt1.c1)))AND(t0.c58)) AS INTEGER), LEAD((((NOT (t0.c58))) BETWEEN ((t0.c84 IN ())) AND (((0.9027650571907427)GLOB(t0.c0)))), CAST(NULLIF(DISTINCT rt1.c0, vt0.c0) AS BLOB), ((((t0.c84 COLLATE RTRIM)OR(CASE WHEN t0.c0 THEN rt1.c3 WHEN t0.c0 THEN rt1.c0 WHEN t0.c0 THEN rt1.c1 END)))OR(((rt1.c2) BETWEEN (t0.c58) AND (rt1.c3))))) OVER () FROM vt0, rt1, t0;SELECT ALL (((t0.c84, NULL, rt0.c0)) NOT BETWEEN ((((((rt1.c3)OR(rt1.c2)))AND(NULL)), ((rt1.c1) NOT NULL), rt0.c2 COLLATE RTRIM)) AND ((((rt0.c0) IS FALSE), json_array_length(rt1.c1), ((rt0.c1) BETWEEN (t0.c58) AND (rt1.c1))))) FROM rt0, vt0, t0, rt1 WHERE ((~ ((0xffffffffb61fcca5 IN ())))); -- 0ms;
SELECT ((GROUP_CONCAT(t0.c0)) NOT BETWEEN (MIN(rt0.c0)) AND (t0.c58 COLLATE RTRIM)) FROM vt0, rt0 WHERE (CASE '(U'  WHEN 0.7543589522637617 THEN '1y晎I*1#a~' ELSE NULL END COLLATE NOCASE);SELECT DISTINCT ((rt1.c1) IS FALSE), (((TOTAL(rt0.c0)))>=((COUNT(rt0.c2)))), AVG(GROUP_CONCAT(((vt0.c0) BETWEEN (0X58fa5ade) AND (vt0.c0)))) FROM vt0, rt1 WHERE ((((NULL) NOTNULL) IN ()));SELECT ((t0.c58 COLLATE NOCASE)==((rt1.c2 IN ()))), CAST((vt0.lid IN ()) AS NUMERIC), ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (NULL)))&(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c1 END)) FROM rt0 FULL OUTER JOIN rt1 ON CASE CAST(t0.c84 AS INTEGER)  WHEN (~ (vt0.lid)) THEN (((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) END CROSS JOIN t0 ON (CAST(t0.c84 AS NUMERIC) IN (((t0.c0)/(rt0.c0)))) WHERE ((((((x'')) BETWEEN ((-1600389390)) AND ((NULL)))) NOTNULL));SELECT ((CAST(rt0.c0 AS REAL))IS NOT(GROUP_CONCAT(vt0.lid))), (ABS(rt1.c0) IN ()), GROUP_CONCAT((((rt0.c1))>((t0.c84))) COLLATE BINARY) FROM rt1, t0, rt0 NOT INDEXED, vt0 INDEXED BY i84;SELECT DISTINCT (+ (((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))) FROM rt1, rt0 WHERE (x'');SELECT DISTINCT ((MAX(rt1.c3, t0.c58)) NOT NULL), NTH_VALUE((DATE(t0.c0, t0.c0, t0.c84, t0.c0, t0.c58) IN ()), (((t0.c58, t0.c0, t0.c58)) BETWEEN ((((t0.c0) IS FALSE), SUBSTR(t0.c58, t0.c58), t0.c84 COLLATE NOCASE)) AND ((((t0.c84)-(t0.c58)), ((t0.c84)<=(t0.c58)), CAST(t0.c84 AS INTEGER))))) OVER (), (GROUP_CONCAT(vt0.c0) IN ()) FROM t0;SELECT (+ (rt0.c2)) FROM rt1, rt0, t0 GROUP BY NULL HAVING CAST(((rt1.c3)IS NOT(0.5414027799062261)) AS INTEGER); -- 0ms;
SELECT DISTINCT json_extract(((t0.c0) IS TRUE), ((rt1.c0)<(rt1.c0)), ((rt0.c1) NOT NULL), ((t0.c0) BETWEEN ('966720825') AND (vt0.c0))), vt0.c0, (((t0.c0)LIKE(rt0.c0)) IN (((rt1.c0)IS(rt0.c2)), (NOT (t0.c58)))) FROM rt1, vt0, rt0;SELECT IFNULL(NULL, (- (rt1.c3))) FROM rt0, vt0, t0 WHERE ((((NOT ('&l04/')))IS NOT((('1421756013') IS TRUE))));SELECT ALL (CAST(t0.c58 AS TEXT) IN ()), CUME_DIST() OVER (), (- (rt0.c2)) COLLATE BINARY, ((((((((0.316632328505165)OR(t0.c58)))AND(((rt1.c0) BETWEEN (t0.c0) AND (NULL)))))AND(((rt0.c0) NOT BETWEEN (rt1.c0) AND ('904258456')))))AND(TOTAL(t0.c84))), ((((rt1.c3) NOT BETWEEN (t0.c84) AND (rt0.c0))) ISNULL) FROM vt0 WHERE (((CASE WHEN '1821151144' THEN 475942027 ELSE 0.8434421446641314 END) ISNULL));SELECT AVG(CASE t0.c84  WHEN rt1.c1 THEN t0.c58 END) FROM rt0, rt1, t0 GROUP BY ''; -- 0ms;
SELECT DISTINCT COUNT(((rt1.c2) NOT NULL)) OVER () FROM t0 WHERE (((CAST('1603778973' AS INTEGER)) IS TRUE));SELECT DISTINCT COUNT((((rt0.c1, vt0.lid, 0Xffffffff86e6b239))>=((vt0.c0, rt0.c1, rt1.c1)))), COUNT(CAST(t0.c0 AS NUMERIC)), GROUP_CONCAT(CAST(rt0.c2 AS INTEGER)) FROM rt0, rt1;SELECT ALL GROUP_CONCAT(NULL) FROM rt0, rt1, t0, vt0; -- 0ms;
SELECT DISTINCT SUBSTR(rt1.c0, rt0.c0) COLLATE RTRIM FROM vt0 WHERE (((('' IN ())) IS TRUE)) ORDER BY 0.9902968120458943  NULLS FIRST, ((vt0.c0) NOT NULL) COLLATE RTRIM  NULLS LAST;SELECT ALL ((((((((CASE rt1.c1  WHEN rt1.c3 THEN rt0.c2 WHEN vt0.c0 THEN vt0.lid WHEN t0.c84 THEN vt0.lid END)OR(vt0.lid)))OR(TYPEOF(DISTINCT vt0.lid))))AND(x'823b')))AND(((((((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))AND(t0.c0)))AND(0.8536201407864279)))OR(t0.c84)))OR(rt0.c2)))) FROM rt1, t0, vt0;SELECT ALL (~ (((rt1.c3) IS FALSE))) FROM rt0;SELECT ALL CAST(((t0.c84) NOT BETWEEN (t0.c58) AND (rt1.c1)) AS REAL) FROM t0, vt0 WHERE (CAST((('!,')-(0.47098765761027717)) AS BLOB));SELECT ALL ((((SQLITE_SOURCE_ID())OR((rt1.c2 IN (t0.c84, rt1.c1)))))AND(((rt1.c2) NOT NULL))) FROM vt0 WHERE (NULL);SELECT ((((vt0.lid) IS TRUE)) NOT NULL), ((vt0.lid COLLATE RTRIM)IS(((t0.c0) BETWEEN (rt0.c2) AND (4.85702594E8)))), CAST((((vt0.lid, vt0.c0, vt0.c0)) NOT BETWEEN ((0.9593213047676814, t0.c0, t0.c0)) AND ((vt0.lid, rt0.c1, vt0.lid))) AS INTEGER), AVG(0.32607405907182396 COLLATE BINARY) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS), ((((((rt0.c1)<<(rt1.c2)))OR(CAST(t0.c0 AS NUMERIC))))AND(((rt0.c0)>>(rt0.c1)))), ((TYPEOF(t0.c58)) BETWEEN (((rt1.c1) BETWEEN (rt1.c1) AND (t0.c84))) AND (rt1.c0)), CASE CAST(rt0.c1 AS NUMERIC)  WHEN UNLIKELY(DISTINCT t0.c58) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c58)) END FROM t0, rt0, rt1 WHERE (CASE ((x'd6b3')|(-3.72801702E8))  WHEN CASE WHEN 0.21557533585970823 THEN 'CY\nSU' END THEN 0.7482335634434396 ELSE CASE '930249183'  WHEN ']*' THEN 'jW[o' END END);SELECT RTRIM(((((((((t0.c84)AND(rt1.c1)))OR(t0.c84)))OR(rt1.c0)))OR(NULL))) FROM rt0, rt1 WHERE (HEX(CAST(x'0dc4' AS NUMERIC)));SELECT (NOT (rt1.c2)) COLLATE BINARY FROM t0, vt0 WHERE ((COALESCE(NULL, 'k') IN ())) LIMIT -2058390573 OFFSET 1290342774;SELECT DISTINCT CASE ((rt0.c2)/(0.9383252832291533))  WHEN (vt0.lid IN (rt0.c0)) THEN TYPEOF(rt1.c2) END FROM vt0, rt1, rt0 WHERE (SUBSTR((((NULL, '-452461609', NULL, 0.22658354905257383, x''))>=((NULL, 0x216929b1, x'6b37', '-1057804207', x''))), (- ('162430523')))) ORDER BY CAST(json_patch(rt0.c1, t0.c84) AS BLOB) DESC  NULLS LAST, (+ (rt1.c3 COLLATE NOCASE)) ASC;SELECT DISTINCT ((((rt1.c2) NOT BETWEEN (t0.c84) AND (rt1.c3)))GLOB(rt0.c2)) FROM rt1, vt0, t0 WHERE ('485702594');SELECT DISTINCT ((AVG(rt1.c3))<=(AVG(t0.c0))), ((((((((((((vt0.lid)OR((((t0.c58))<((vt0.lid))))))OR(TOTAL(t0.c58))))OR(NULL)))AND(((rt1.c1)%(t0.c0)))))OR(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt1.c1 COLLATE RTRIM)), (((rt1.c1, rt1.c1, NULL, rt0.c2, x'')) BETWEEN ((((((((((((((vt0.c0)OR(t0.c84)))AND(rt0.c1)))AND(t0.c84)))AND(t0.c84)))OR(t0.c58)))OR(t0.c58)), (NOT (rt1.c3)), x'8037', ((rt0.c2) IS FALSE), ((rt0.c0)IS(rt1.c3)))) AND ((((rt1.c1) NOTNULL), ((((vt0.c0)OR(x'')))OR(rt1.c2)), (NULL IN (x'72d8cc71', t0.c84)), COALESCE(vt0.lid, rt1.c3), CAST(t0.c0 AS NUMERIC)))) FROM rt0, rt1, vt0, t0; -- 0ms;
SELECT DISTINCT CASE CAST(t0.c84 AS TEXT)  WHEN ((rt1.c0)OR(vt0.lid)) THEN ((NULL) ISNULL) END FROM t0, rt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.lid) BETWEEN (vt0.c0) AND (0.5388774795164246)))AND(((t0.c58) IS TRUE))) FROM t0;SELECT DISTINCT CAST(((((t0.c0)OR('{}')))AND(rt0.c0)) AS NUMERIC) FROM rt1, rt0, vt0, t0 WHERE ((('904258456' COLLATE RTRIM) NOT BETWEEN (CASE WHEN 0Xffffffff97e550b2 THEN '\n婌' ELSE '0.666875583008477' END) AND ((NULL IN ())))); -- 0ms;
SELECT ALL GROUP_CONCAT((((vt0.lid, rt0.c0, rt1.c0)) BETWEEN ((rt0.c1, rt0.c1, vt0.lid)) AND ((rt1.c2, rt1.c1, t0.c58)))) FROM rt1, vt0, rt0, t0 WHERE (((((((0Xffffffffcd0bebe6)||(0.2273978926082646)))AND(CAST(NULL AS INTEGER))))OR((('804-2236248398383668220:1793T300:-1527010020207573803:-4481099863391241061 ')IS(NULL))))); -- 1ms;
SELECT ((0Xffffffff84265e9b)+(((rt1.c0)IS NOT(rt1.c2)))) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON ((COALESCE(rt1.c0, rt0.c1, t0.c0, rt1.c3)) NOTNULL) FULL OUTER JOIN vt0 ON ((vt0.lid)GLOB(rt0.c1 COLLATE RTRIM)) LIMIT 64499150 OFFSET -1991383009; -- 0ms;
SELECT DISTINCT ((((t0.c58) NOT BETWEEN (vt0.c0) AND (t0.c58))) BETWEEN ((rt0.c1 IN ())) AND (CAST(t0.c58 AS INTEGER))) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c2 IN (rt1.c2)))==(rt0.c1)) FROM t0 LIMIT -1126781901 OFFSET -654582412;SELECT CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c2 END COLLATE RTRIM COLLATE NOCASE FROM vt0 WHERE (CAST(((NULL)>(NULL)) AS INTEGER)) LIMIT 400223396;SELECT DISTINCT CAST(TOTAL_CHANGES() AS NUMERIC) FROM t0, vt0, rt1; -- 0ms;
SELECT ALL COUNT(((rt1.c1) NOT BETWEEN (t0.c84) AND (rt1.c2))) FROM t0 INDEXED BY i84, rt0 NOT INDEXED, rt1, vt0 WHERE ((((0.8999968900515726, 0.3804265508337522, 0.6052736935188819)) BETWEEN ((((((((((1.018232867E9)AND('')))OR(0.603538997621351)))AND('qo_P')))AND(x'b65c')), CAST('576550753' AS REAL), ((0.0508789481485894) NOT BETWEEN (x'') AND (0.12244804677377308)))) AND ((TRIM(DISTINCT 0.1829500426251588, x'aff0'), (('1952566442') IS FALSE), ((NULL)&('412474943')))))) GROUP BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN (NOT (vt0.lid)) THEN ((rt1.c3) NOT BETWEEN (rt0.c1) AND (t0.c84)) ELSE rt1.c1 COLLATE RTRIM END;SELECT ALL (((((t0.c0))=((vt0.c0)))) NOT BETWEEN ((t0.c84 IN (t0.c0, t0.c0))) AND (((t0.c0) IS TRUE))), HEX(((rt1.c1)IS NOT(''))), rt1.c3 FROM t0, rt1, rt0;SELECT COUNT(((rt1.c2)&(rt0.c1))) OVER () FROM t0, rt1 WHERE (((((((x'')) BETWEEN ((NULL)) AND ((0.5507222494651816)))))<>(('')))) ORDER BY (((rt1.c1, rt1.c3, rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((MAX(t0.c84, rt0.c1), t0.c0 COLLATE BINARY, (~ (rt1.c0)), NULL COLLATE NOCASE, rt1.c2 COLLATE NOCASE)) AND ((((rt1.c0)<(rt1.c1)), ((rt0.c0)OR(rt0.c0)), ((((((((rt1.c1)OR('tJ')))OR(rt1.c0)))OR(rt1.c1)))OR(rt0.c0)), SQLITE_SOURCE_ID(), (((NULL))>=((rt1.c1)))))) DESC  NULLS FIRST, ((((0.14165278060751996)&(rt1.c3)))||(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3))));SELECT DISTINCT HEX(rt0.c0) COLLATE RTRIM, (rt1.c1 COLLATE BINARY IN ()), CAST(rt1.c1 AS REAL) COLLATE RTRIM FROM vt0, rt1, t0, rt0 WHERE (CAST(((-1.95094047E8) BETWEEN (x'') AND ('M*t')) AS REAL)) ORDER BY ((CAST(vt0.c0 AS TEXT))/(((rt1.c3) NOT BETWEEN (vt0.lid) AND (rt0.c0)))) ASC; -- 0ms;
SELECT ALL AVG(((((vt0.c0)AND(rt0.c2)))OR(rt1.c3))) OVER (), ((((rt1.c2)==(rt0.c1)))+(CASE WHEN rt0.c0 THEN rt1.c2 END)), ABS(((0.085289489395739) NOT BETWEEN (NULL) AND (rt0.c2))) FROM vt0, rt1 ORDER BY CASE (((t0.c58, '-828787302', rt0.c2)) BETWEEN ((vt0.lid, rt1.c1, 0.5771308016288895)) AND ((t0.c58, x'df7a', t0.c0)))  WHEN ((rt0.c0) NOTNULL) THEN x'a2994da9' WHEN rt0.c1 THEN ((rt0.c1)IS(t0.c84)) WHEN vt0.c0 THEN (rt1.c2 IN ()) END;SELECT CASE ((t0.c0)!=(rt1.c2))  WHEN ((rt1.c2)<=(t0.c0)) THEN AVG(NULL) END FROM t0, vt0 WHERE ((((~ (0.13361063200883427)))>((('113214931') BETWEEN (x'') AND (x'140f')))));SELECT ALL CASE (t0.c58 IN (rt0.c1, rt0.c0))  WHEN LIKELY(rt0.c2) THEN '-1138411079' END FROM t0, rt0, vt0; -- 1ms;
SELECT DISTINCT (LTRIM(NULL) IN ()), ((((((((CAST(rt1.c2 AS INTEGER))AND(((t0.c58)OR(t0.c58)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(((rt1.c3)+(rt1.c2)))))AND(((rt1.c3)>=(rt0.c1)))), COUNT(*) OVER () FROM t0, rt0, rt1 WHERE ((((((((((0x4baa6ac)AND('0.3541307069536048')))OR('-144077810')))AND(4.5554689E7)))AND(-1.206443732E9)) IN ())); -- 0ms;
SELECT DISTINCT (((((((vt0.c0)AND(t0.c0)))OR(rt1.c2)), CAST(rt0.c2 AS BLOB), CASE 0.8347247557321673  WHEN vt0.lid THEN rt1.c1 END))<=((CASE rt0.c0  WHEN rt1.c0 THEN rt0.c2 END, ((vt0.c0)=(NULL)), COUNT(*)))) FROM rt1;SELECT DISTINCT (NOT ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) FROM t0, rt1, vt0 INDEXED BY i9, rt0 WHERE ('1837419121');SELECT DISTINCT (- (ABS(vt0.c0))) FROM rt0, t0, rt1, vt0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT t0.c0) FROM t0, rt0, vt0 WHERE (((('\rB')) NOT BETWEEN ((((x'')OR(x'')))) AND ((((x'') BETWEEN ('W)M') AND (x'')))))) ORDER BY ((CAST(rt0.c0 AS TEXT))<=(0.2628260467019068)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT UNLIKELY((+ (rt1.c1))) FROM rt1, t0 WHERE (CASE (((('-372801702')OR('W\9')))AND(''))  WHEN 0.8813041652559558 COLLATE NOCASE THEN (0x3fa04499 IN ()) WHEN (- ('C|9[9!p')) THEN (~ ('J㸝%8 V')) WHEN ((((0X5199a8cb)AND(NULL)))OR(-940624689)) THEN TIME('-1386223551', x'f0c9', 0.1356997932427656) ELSE 0X60685972 END) ORDER BY CAST((t0.c0 IN ()) AS NUMERIC) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT MIN(CASE t0.c0  WHEN rt0.c0 THEN t0.c84 ELSE rt0.c1 END) FROM rt1;SELECT ALL rt1.c0 FROM rt0, vt0, rt1, t0 LIMIT 1075252364; -- 0ms;
SELECT ((((rt1.c2)-(rt0.c1)))>>(CASE rt0.c2  WHEN vt0.lid THEN vt0.lid ELSE vt0.c0 END)) FROM rt0 WHERE (json(CAST(NULL AS INTEGER)));SELECT DISTINCT ((((rt0.c0 IN (rt0.c1, rt1.c0))))>(((t0.c58 IN ())))) FROM rt0, rt1, vt0, t0 WHERE (CAST((NULL IN ('t\rUt')) AS TEXT)); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c3 AS REAL))&(((((rt1.c1)AND(rt0.c0)))OR(rt1.c2)))) FROM rt1 INDEXED BY i9 INNER JOIN vt0 ON TYPEOF(((((rt1.c2)AND(rt1.c3)))AND(vt0.lid))) LEFT OUTER JOIN t0 ON CASE WHEN (((t0.c58)) BETWEEN ((0.8191421907856967)) AND ((rt1.c3))) THEN ((((rt0.c0)AND(t0.c84)))AND(rt1.c0)) WHEN ((vt0.c0) IS TRUE) THEN UNLIKELY(DISTINCT rt0.c0) WHEN ((rt1.c2) NOT NULL) THEN ((rt1.c1)<(rt0.c0)) END INNER JOIN rt0 ON rt1.c1;SELECT DISTINCT CASE WHEN rt1.c0 COLLATE NOCASE THEN ((0.9534183136876524)&(vt0.c0)) ELSE LOWER('1054183148') END FROM t0 WHERE (CASE WHEN (+ ('-1123366665')) THEN (NULL IN ()) END) LIMIT -1559622910 OFFSET 1878212594;SELECT DISTINCT (((t0.c0, rt1.c0, vt0.lid)) BETWEEN ((vt0.lid, t0.c0, rt1.c3)) AND ((rt1.c0, rt0.c2, t0.c0))) COLLATE NOCASE FROM rt0, rt1, vt0, t0 GROUP BY CASE LOWER(DISTINCT vt0.lid)  WHEN (vt0.c0 IN (t0.c84)) THEN ((vt0.lid) BETWEEN (t0.c0) AND (rt1.c2)) ELSE '-1206443732' END HAVING (('-192065237') NOT NULL); -- 1ms;
SELECT DISTINCT ((SUBSTR(t0.c0, '')) BETWEEN (((t0.c0) BETWEEN (rt1.c1) AND ('-339072491'))) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.lid WHEN rt1.c3 THEN vt0.lid ELSE rt1.c2 END)) FROM vt0, rt0 WHERE ((0.4593953937960741 COLLATE BINARY IN ()));SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c58)))) NOTNULL) FROM t0, rt1, rt0, vt0 WHERE (((x'')&(0Xffffffffaa08f2de)) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT DISTINCT (('>LF#e')<((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c84))))) FROM t0, rt1;SELECT ALL ((+ (rt1.c0)) IN ()) FROM rt1, rt0, t0, vt0 WHERE ((((((('-1807591221') ISNULL))AND(CAST(NULL AS REAL))))OR(((NULL)%(NULL))))); -- 0ms;
SELECT LAG(((((vt0.lid)+(rt0.c0))) IS FALSE), rt1.c0, (NOT (((rt1.c2) IS TRUE)))) OVER () FROM rt1, rt0, vt0 WHERE (LTRIM((('1678657947')GLOB(5.60540081E8)), ((('-2085332055', '-1380216384', NULL, '1600742133', x'')) BETWEEN ((0.21802093555645807, NULL, '?\|B~0ﴀv\', 0.6981325601359872, NULL)) AND ((0.8882555316702706, NULL, x'686a3182db71', 0.9741230652573437, x''))))); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT vt0.lid, (rt1.c1 IN (rt1.c1, vt0.lid))) FROM vt0, rt1, rt0, t0 LIMIT -1033203208 OFFSET 244250657; -- 1ms;
SELECT DISTINCT CASE WHEN (vt0.lid IN ()) THEN ((0.2578199206461481) BETWEEN (t0.c0) AND (rt0.c2)) END FROM vt0, rt0, rt1 WHERE (SQLITE_SOURCE_ID());SELECT ALL CASE WHEN NULLIF(DISTINCT rt1.c0, rt0.c2) THEN rt0.c0 ELSE (((((((((((('528414910')AND(vt0.c0)))OR(vt0.lid)))AND(vt0.lid)))OR(rt0.c0)))AND(0.0919042513365792)))OR(vt0.lid)) END FROM vt0, rt0;SELECT DISTINCT (CASE vt0.c0  WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c0 END IN ()) FROM t0, vt0, rt1 ORDER BY ((((rt0.c1)-(t0.c0)))==(0.32301727682550196 COLLATE NOCASE)) DESC, ((((rt0.c1) ISNULL)) NOT NULL) ASC;SELECT DISTINCT LAG(rt0.c0, 0.3173978404035328 COLLATE NOCASE, rt1.c1) OVER () FROM rt1, rt0 LIMIT 317873711; -- 0ms;
SELECT (((((((t0.c0))=((vt0.lid))))AND((~ (rt1.c1)))))AND(CASE vt0.c0  WHEN t0.c84 THEN t0.c84 END)) FROM t0;SELECT DISTINCT (((rt1.c3))>=((CASE 0.498812925969754  WHEN rt0.c0 THEN t0.c0 WHEN t0.c84 THEN rt0.c0 WHEN vt0.c0 THEN vt0.lid END))) FROM vt0;SELECT ALL (((rt1.c3 IN ()))AND(((t0.c58)=(rt1.c1)))) FROM rt0; -- 0ms;
SELECT ALL ((SUM(t0.c58))>=(vt0.c0 COLLATE BINARY)), (- (CAST(vt0.c0 AS TEXT))), ((((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))) ISNULL) FROM t0, rt0, vt0 GROUP BY TIME(0.7827647573473914, CASE t0.c84  WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c0 END, CAST(vt0.c0 AS BLOB)) LIMIT 1490260827;SELECT ALL CASE ((t0.c84) ISNULL)  WHEN TOTAL(vt0.lid) THEN (((NULL, '756223800', '576550753'))<((rt0.c1, t0.c84, vt0.lid))) END FROM vt0 NOT INDEXED, rt1;SELECT ALL NULL, ((((rt1.c3) BETWEEN (rt1.c0) AND (vt0.lid)))>=(((((((((vt0.c0)AND(rt0.c0)))AND(t0.c0)))OR(t0.c58)))AND(rt0.c0)))), (CASE WHEN t0.c58 THEN t0.c84 ELSE rt0.c0 END IN ()) FROM rt0 WHERE ((NOT (0.6634790079999793 COLLATE NOCASE)));SELECT ALL LAG(((MAX(rt0.c2, rt0.c1, rt0.c1, rt0.c2)) IS FALSE), (~ (((rt0.c0) IS FALSE))), CAST('' AS TEXT) COLLATE RTRIM) OVER () FROM rt0 WHERE ((((('{c')<<(x'')))*((- (0.34158273896155344))))) GROUP BY GLOB(vt0.lid COLLATE RTRIM, (((4.75942027E8)) BETWEEN ((t0.c0)) AND ((vt0.lid)))), (((((rt1.c2 IN (t0.c84)))OR(((rt1.c2)-('l(JL9H\nf')))))OR(CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN t0.c58 END)), LOWER(DISTINCT CASE t0.c84  WHEN vt0.lid THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c1 THEN 0Xfffffffff539fc62 END) HAVING LIKELIHOOD(DISTINCT CASE t0.c58  WHEN rt1.c1 THEN rt0.c2 WHEN t0.c0 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c1 END, 0.4776482630731377);SELECT ALL ((0x68c7746b)OR((NOT (rt0.c1)))), CAST(((t0.c58) IS FALSE) AS INTEGER), CASE (- (t0.c58))  WHEN CAST(rt1.c0 AS TEXT) THEN ((rt1.c3)||(rt0.c2)) WHEN (((('0.10526994162971592')AND(NULL)))AND(rt1.c1)) THEN COALESCE(DISTINCT t0.c84, rt0.c0) WHEN CASE WHEN rt0.c2 THEN t0.c58 ELSE rt1.c3 END THEN rt1.c1 END FROM rt1 WHERE (((((x'') BETWEEN (x'') AND (')J禟'))) IS FALSE));SELECT ((((vt0.c0)>(rt1.c1))) BETWEEN (((t0.c84)<(rt0.c0))) AND (((t0.c84) BETWEEN (t0.c0) AND (rt0.c1)))) FROM t0, rt0;SELECT ((((((((rt1.c0)OR(t0.c84)))OR(rt0.c1)))OR(CASE rt1.c0  WHEN t0.c58 THEN rt1.c3 END)))AND(((rt0.c2) BETWEEN (vt0.c0) AND (t0.c0)))), (CASE t0.c0  WHEN t0.c84 THEN rt1.c1 ELSE rt1.c3 END IN (x'c87b', t0.c84 COLLATE RTRIM)), (((((NULL, 'j^L^qv&WU', rt0.c1)) BETWEEN ((rt0.c0, rt1.c1, rt1.c3)) AND ((rt1.c1, rt0.c2, rt0.c1)))) IS TRUE) FROM rt0, rt1 WHERE ('1275133006');SELECT DISTINCT ((CAST(1275133006 AS TEXT))<((vt0.c0 IN ()))) FROM t0, rt0; -- 0ms;
SELECT ALL ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c84)))))<=((((rt1.c1)LIKE(rt1.c3))))) FROM vt0, t0, rt1, rt0 WHERE ((((('173586024') BETWEEN (279337913) AND ('-195094047'))) IS TRUE)); -- 1ms;
SELECT ((((rt1.c2) ISNULL)) BETWEEN (((rt1.c3)>(rt0.c0))) AND (CASE rt1.c0  WHEN rt1.c1 THEN '464248101' WHEN rt0.c1 THEN rt0.c0 WHEN t0.c58 THEN 0.5890421780561338 ELSE rt1.c2 END)) FROM rt0 NOT INDEXED, vt0, t0 LIMIT -1962708334 OFFSET -997644950;SELECT DISTINCT CASE WHEN rt1.c1 COLLATE RTRIM THEN NULL END, COUNT(*) OVER (), ((((((x'')OR(x'')))OR(rt0.c0))) IS FALSE), ((CAST(rt1.c3 AS REAL)) BETWEEN (((rt0.c0) NOT BETWEEN (vt0.lid) AND (rt1.c0))) AND (MIN(rt1.c0))), (((((-60391013, rt1.c2, rt1.c0)) BETWEEN ((rt0.c0, t0.c0, rt0.c2)) AND ((rt1.c1, vt0.lid, rt1.c3))))-(json_quote(vt0.c0))) FROM rt1, rt0, vt0, t0 WHERE (((('%\r#u', 0.7945158446774492, '-746101010')) BETWEEN (((('-1758797730') NOT NULL), ((x'')+(2142390562)), x'b580' COLLATE NOCASE)) AND (((((''))<=((-641205363))), ((x'a0b5') NOT BETWEEN ('P藓tRqW ') AND (NULL)), IFNULL(NULL, 0xffffffffb12b02d8))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN rt1.c1 WHEN vt0.lid THEN rt0.c1 WHEN t0.c0 THEN t0.c84 ELSE rt1.c1 END)*(SUM(t0.c58))), (('-370266419') IS FALSE), SUM(CASE rt1.c0  WHEN 'a#,ⵝtKYf' THEN vt0.lid ELSE rt0.c1 END) FROM rt1, t0, vt0 WHERE (2105480796);SELECT DISTINCT ((NULL)||(UNLIKELY(rt1.c2))) FROM rt0 ORDER BY TYPEOF(((rt0.c0) NOT BETWEEN (vt0.lid) AND (rt1.c0))) ASC;SELECT ALL rt0.c0 FROM vt0, rt0 NATURAL JOIN rt1; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c3 END) BETWEEN (CASE vt0.c0  WHEN rt0.c1 THEN rt1.c2 ELSE '-1513785898' END) AND (((((((((rt0.c0)OR(rt1.c0)))AND(x'7f7f44d1')))OR(rt1.c2)))AND(rt1.c2)))) FROM t0;SELECT ALL (((rt1.c2, NULL, t0.c0)) BETWEEN (('Qv]', UNLIKELY(DISTINCT t0.c0), (((rt0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))) AND (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c3))), '-1806763013', (NOT (rt1.c0))))), (((NOT (rt1.c3))) IS TRUE), COALESCE(0.3500217829888782, CASE t0.c58  WHEN t0.c0 THEN rt0.c1 WHEN t0.c84 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c3 ELSE rt1.c1 END) FROM rt0, rt1, vt0, t0; -- 0ms;
SELECT (+ (((rt1.c1) BETWEEN (rt1.c3) AND (t0.c84)))) FROM vt0, rt0, t0, rt1 INDEXED BY i84 GROUP BY (((((0.8728338377450615)>(t0.c58))))>((CAST(rt0.c1 AS INTEGER)))), (((t0.c84 IN ()))>=(CASE WHEN rt1.c3 THEN '' END)), ((rt1.c1) NOT BETWEEN (((rt0.c0) BETWEEN (t0.c84) AND (rt1.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)))) HAVING NULL;SELECT ALL (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((((rt1.c3) IS TRUE)))), LIKELIHOOD(COALESCE(DISTINCT rt0.c1, rt0.c2), 0.16385057598024055), COUNT(*) OVER () FROM rt0, rt1, vt0 NOT INDEXED LIMIT -1731632371 OFFSET 1373524284; -- 1ms;
SELECT DISTINCT (HEX(rt1.c2) IN (HEX(t0.c58))) FROM vt0, rt0, rt1, t0 WHERE (CASE WHEN ')''zz9o' COLLATE BINARY THEN (((('{}')OR(NULL)))AND('0.6799850908267198')) ELSE (((0X553caae7)) NOT BETWEEN ((x'6de0')) AND (('-2067493055'))) END) GROUP BY CASE WHEN ((NULL) BETWEEN (rt0.c2) AND (rt1.c3)) THEN ((vt0.c0) IS TRUE) WHEN ((((((((rt0.c0)AND(NULL)))AND(rt1.c1)))OR(t0.c58)))AND(t0.c0)) THEN (- (rt1.c0)) WHEN (rt0.c0 IN ()) THEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END HAVING (~ (rt0.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT rt1.c2 FROM t0, vt0 WHERE ((((NULL, NULL, x'')) NOT BETWEEN ((((((0Xffffffffe8d47993)AND(NULL)))OR('')), (NULL IN ()), ((0.853559431460191) BETWEEN (NULL) AND ('십>Z)gb?#')))) AND ((67229031, CASE 0X70b46afd  WHEN 2.44250657E8 THEN NULL ELSE -1162686404 END, NULL COLLATE RTRIM))));SELECT DISTINCT (((vt0.c0, t0.c58, t0.c0, rt1.c0, vt0.lid)) BETWEEN ((((((0.8159829979727632)OR(rt0.c0)))OR(rt0.c2)), rt0.c0 COLLATE BINARY, ((rt0.c1) BETWEEN (rt0.c2) AND (x'')), ((t0.c58) BETWEEN (rt1.c1) AND ('FE!H%&')), HEX(rt0.c1))) AND ((((rt1.c0) IS FALSE), (t0.c58 IN ()), rt1.c0, (+ (t0.c84)), ((((((((((((rt0.c2)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(t0.c0)))AND(t0.c58)))AND(0.5033672854163866))))) FROM rt1, t0 WHERE (DATE(((x'') NOT NULL), ((('720809056')) NOT BETWEEN (('|m/J⃖a[q')) AND ((0x3ee54f40))), ((0.7359449735146514)IS NOT(x''))));SELECT ((rt1.c3 COLLATE NOCASE)OR(((((((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))AND(t0.c84)))AND(rt1.c3)))) FROM rt1 UNION SELECT DISTINCT (((rt1.c1, t0.c58, vt0.c0, '1421756013', t0.c84)) NOT BETWEEN ((((vt0.c0)IS('')), TOTAL(rt1.c2), SUM(rt0.c1), ((vt0.c0) NOT NULL), -4.67264017E8)) AND ((((((rt1.c1)AND(t0.c0)))AND(t0.c58)), ((((rt1.c1)AND(rt1.c1)))OR(NULL)), ((x'')>>(rt1.c3)), ((((rt0.c1)OR(t0.c84)))AND(rt1.c3)), ((t0.c58)=(rt1.c2))))) FROM rt1, rt0;SELECT DISTINCT (((((x''))<((t0.c58)))) NOT NULL) FROM rt0 WHERE (((CASE WHEN x'' THEN '89976054' END) BETWEEN (CASE NULL  WHEN '485702594' THEN NULL WHEN 0.9509779754206549 THEN '' WHEN 0.6503319937352081 THEN 0.10901347393594651 ELSE 0.670597822712503 END) AND ((((x'')) NOT BETWEEN (('991580560')) AND (('-2118756115'))))));SELECT DISTINCT CASE WHEN ((rt1.c2)|(rt1.c2)) THEN ((((t0.c84)AND(rt1.c1)))AND(rt0.c2)) WHEN SUM(vt0.lid) THEN (((t0.c58))>((rt1.c1))) WHEN x'' THEN (rt0.c1 IN ()) END FROM rt1;SELECT DISTINCT AVG(GROUP_CONCAT((rt1.c2 IN ()))) FROM vt0, rt0 INDEXED BY i9, rt1, t0;SELECT UPPER(DISTINCT vt0.lid) FROM vt0 WHERE (((CASE WHEN x'' THEN -1273733318 END)<(((0.8434759256599954)!=(0.8614299593043936))))); -- 0ms;
SELECT vt0.c0, CAST(((((rt0.c1)OR(vt0.lid)))OR(vt0.lid)) AS INTEGER), TOTAL((((rt1.c1)) BETWEEN (('ꋯ죷')) AND ((vt0.lid)))) FROM t0;SELECT ALL (CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c3 END IN ()), GROUP_CONCAT((((t0.c58)) BETWEEN ((t0.c0)) AND ((t0.c58)))), ((NULL)<(((t0.c58) BETWEEN (rt1.c3) AND (vt0.c0)))) FROM rt0;SELECT ALL (((((vt0.lid))=((rt0.c0)))) NOT NULL) FROM t0 WHERE (UNLIKELY(CAST(')A&Ks\%a' AS REAL))) LIMIT 983613696;SELECT DISTINCT ((vt0.lid)>(CAST(rt1.c1 AS TEXT))), ((rt1.c0)|(rt0.c1)) COLLATE NOCASE, '-1322581288' FROM t0;SELECT DISTINCT COUNT(*) OVER () FROM rt0, t0, rt1; -- 0ms;
SELECT COUNT(CASE t0.c0  WHEN vt0.c0 THEN rt1.c1 ELSE 0.08232305092315861 END) FROM t0 GROUP BY ((((vt0.c0) IS FALSE))IS(rt0.c2)), ((((x'')) BETWEEN ((rt1.c3)) AND ((rt0.c2))) IN ()), ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((rt1.c2) ISNULL))) HAVING (- (CAST(t0.c84 AS NUMERIC)));SELECT DISTINCT (NOT (rt1.c3)) COLLATE RTRIM, (t0.c58 COLLATE RTRIM IN ()), CASE WHEN ((NULL)<<(rt0.c1)) THEN (((rt1.c1))>((rt1.c2))) WHEN (vt0.lid IN ()) THEN NULL WHEN ((((((((t0.c58)OR(rt1.c3)))OR(rt0.c2)))AND(rt1.c1)))AND(rt0.c1)) THEN NULL END FROM vt0, rt0, t0, rt1 ORDER BY ((CAST(0.6787036156499828 AS NUMERIC)) IS FALSE) ASC; -- 0ms;
SELECT ((GROUP_CONCAT(rt1.c1))>>((NOT (rt1.c2)))), (((NULL)>(rt1.c1)) IN ((- (t0.c58)))), vt0.c0 FROM t0, rt1 LIMIT -462935559 OFFSET -875135255;SELECT (rt0.c0 COLLATE NOCASE IN ()) FROM rt0, vt0 INNER JOIN t0 ON ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN NULL ELSE t0.c58 END)) RIGHT OUTER JOIN rt1 ON ((((((((rt1.c3)OR(t0.c84)))OR(rt1.c3)))OR((((t0.c84, 0.27702209858710913, rt1.c3))>((rt0.c1, vt0.c0, t0.c84))))))OR((rt1.c2 IN ()))) LIMIT 485702594 OFFSET 1927797359; -- 0ms;
SELECT (((((NOT (t0.c84)))OR(((((rt1.c3)AND(rt1.c0)))OR(t0.c84)))))AND(((vt0.lid)>=(rt0.c0)))) FROM rt1, t0, vt0, rt0 GROUP BY CASE (NOT (t0.c58))  WHEN ((NULL)IS(vt0.lid)) THEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.lid ELSE vt0.c0 END WHEN 0.13400941980485503 THEN (rt1.c1 IN ()) WHEN '-1609639249' THEN GLOB(t0.c84, rt1.c0) ELSE (((rt1.c3, t0.c0, vt0.c0)) NOT BETWEEN ((rt1.c3, t0.c0, rt0.c1)) AND ((rt0.c2, rt0.c1, rt1.c1))) END, (((rt0.c2)) NOT BETWEEN ((CAST(rt1.c2 AS NUMERIC))) AND ((((rt1.c1) BETWEEN ('1562399122') AND (rt0.c2))))), '0.6871057719579048'; -- 1ms;
SELECT ALL rt1.c0 FROM t0, vt0;SELECT DISTINCT GROUP_CONCAT((NOT (rt1.c0))) FILTER(WHERE ((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))<<(rt0.c0))) OVER () FROM rt1, rt0 WHERE (CAST(CAST('7' AS INTEGER) AS INTEGER));SELECT DISTINCT ((CAST(rt1.c1 AS BLOB))%(MAX(rt1.c2))) FROM t0, rt1 WHERE (((((0.7650601353335206)AND(NULL)))OR(x'e4eb')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((((((((rt0.c1)OR(rt0.c1)))AND('')))OR(rt0.c2)))AND(rt0.c2))) ISNULL) FROM rt0, rt1 ORDER BY t0.c0;SELECT DISTINCT (+ (NULL)) COLLATE NOCASE FROM vt0, rt1, t0, rt0; -- 0ms;
SELECT ALL (+ (TOTAL(vt0.c0))) FROM rt1 GROUP BY CASE WHEN (((x'', vt0.lid, t0.c0))!=(('+', rt1.c1, rt0.c0))) THEN ((((rt1.c3)AND(rt1.c2)))AND(vt0.c0)) WHEN ((rt0.c0)||(rt1.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN (rt1.c1 IN (t0.c0, rt1.c2)) THEN rt1.c2 COLLATE RTRIM ELSE (((vt0.lid, t0.c58, rt0.c0)) NOT BETWEEN ((rt0.c1, rt1.c0, t0.c0)) AND ((rt0.c1, vt0.c0, '-1442254114'))) END, (~ ((t0.c58 IN (t0.c58)))), ((((rt0.c0)&(t0.c84))) ISNULL);SELECT ((t0.c84)IS NOT(rt0.c0)) COLLATE BINARY FROM vt0, rt1;SELECT DISTINCT '' FROM vt0, rt0 WHERE (((((((((((('q7O.(SX')) NOT BETWEEN ((x'')) AND ((NULL))))OR(((0.04911613613083787)<<(x'')))))OR(CAST(-2.125827782E9 AS TEXT))))AND(((NULL) NOT BETWEEN ('F|') AND (0xffffffffcb9d5fca)))))OR(((0.8893383945195503)>=(x'4fab'))))) ORDER BY (- (((rt1.c2)+(t0.c0)))) DESC  NULLS FIRST;SELECT CAST(((vt0.c0) NOT NULL) AS BLOB), ((CAST(rt0.c2 AS BLOB))-((((t0.c58, 671427004, rt0.c2))>=((rt0.c1, rt1.c2, t0.c84))))), ((((rt1.c0) IS FALSE))<<((rt0.c1 IN (vt0.c0, rt0.c0)))) FROM rt0 NATURAL JOIN rt1 WHERE ((~ (NULL)));SELECT DISTINCT ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c84 END)>>(MAX(rt0.c1, rt1.c0, rt0.c2, ''))) FROM t0, rt1, vt0;SELECT DISTINCT COUNT((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((t0.c58)))) OVER () FROM rt0, rt1, t0 INDEXED BY i9, vt0 WHERE (CAST(CAST(0.8677222014258201 AS TEXT) AS BLOB));SELECT DISTINCT CASE WHEN ((t0.c84)<=(rt0.c1)) THEN rt0.c0 COLLATE NOCASE WHEN (((rt1.c3))<((rt1.c3))) THEN ((rt1.c3) BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(0.42758960035720195 AS NUMERIC) THEN ((rt0.c2)IS NOT(rt1.c1)) END, ((vt0.lid) NOTNULL), (-4.92853514E8 IN ()) FROM vt0, rt1, t0, rt0 WHERE ((((- (1935802477)))LIKE(((NULL) IS FALSE)))) LIMIT 1055215424 OFFSET -849309932; -- 0ms;
SELECT ALL (((CAST(t0.c0 AS BLOB)))>(((+ (rt0.c2))))) FROM t0, rt1, vt0 WHERE (LOWER(((('0.5457768084224103')) NOT BETWEEN (('')) AND ((0x141256f9)))));SELECT ALL MIN((vt0.lid IN ())) FROM t0, vt0, rt1, rt0 ORDER BY ((CAST(vt0.lid AS BLOB)) ISNULL) ASC  NULLS FIRST, ((((rt0.c1)OR(vt0.lid)))|(rt1.c0 COLLATE RTRIM))  NULLS LAST, (((rt0.c0) NOTNULL) IN ()); -- 0ms;
SELECT ALL CASE rt0.c0  WHEN (((vt0.c0))=((-1.7976931348623157E308))) THEN (~ (vt0.c0)) WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN t0.c58 WHEN ((-1.43319337E8) NOT NULL) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2))) ELSE COUNT(*) END FROM rt1;SELECT DISTINCT ((((((t0.c84)) BETWEEN ((t0.c84)) AND ((rt0.c0))), rt1.c3, ((rt0.c1)<<(rt0.c1))))>=((NULLIF(vt0.lid, rt0.c0), (vt0.lid IN ()), ((t0.c84) NOT BETWEEN (t0.c84) AND (t0.c0))))) FROM rt0, t0, rt1 WHERE ((~ (((-1.219859338E9) NOT BETWEEN (-1.821437122E9) AND (x'')))));SELECT DISTINCT (~ (((rt1.c3) BETWEEN (t0.c0) AND (t0.c84)))), ((MIN(t0.c58))GLOB(NULL)), '-854856730' FROM t0, rt1; -- 0ms;
SELECT ALL (((rt1.c1 COLLATE NOCASE, ((((rt0.c1)AND(t0.c84)))AND(rt0.c0)), TOTAL(vt0.lid)))!=((((rt0.c2) ISNULL), (NOT (rt1.c1)), ((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c1))))), ((rt1.c0)IS((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))), CAST(((rt1.c1)%(NULL)) AS NUMERIC) FROM vt0, rt1, t0 WHERE (CAST(CASE '-1386223551'  WHEN '-916126567' THEN '127244371' ELSE NULL END AS INTEGER)) LIMIT -1107724954 OFFSET -1189109009;SELECT DISTINCT TYPEOF(TRIM(DISTINCT rt1.c1)), rt1.c2, ((0.8005158764649913) IS FALSE) FROM t0 WHERE (IFNULL((+ (-0.0)), (NOT (0Xffffffff8588702e))));SELECT '781828130' FROM rt0, t0, vt0, rt1 WHERE (((CAST(x'6d4e' AS INTEGER))IS(NULL))) ORDER BY (- (((rt1.c0)IS NOT(vt0.c0)))) DESC; -- 0ms;
SELECT ALL (((rt0.c1 IN ())) IS FALSE) FROM rt0, t0, rt1 WHERE ((((+ (x''))) ISNULL)); -- 0ms;
SELECT DISTINCT ((json_type(vt0.lid)) NOT NULL) FROM t0, rt0, vt0, rt1 LIMIT -875135255 OFFSET -1793460546; -- 0ms;
SELECT DISTINCT COUNT(CAST(vt0.lid AS INTEGER)) OVER () FROM t0, rt1, rt0, vt0 WHERE (((((NULL) IS TRUE))!=(CASE WHEN '' THEN NULL END))); -- 0ms;
SELECT DISTINCT CAST(CASE '0.3173978404035328'  WHEN vt0.lid THEN vt0.c0 END AS REAL) FROM rt0, rt1, vt0, t0 WHERE (((LOWER(DISTINCT '')) IS TRUE)) ORDER BY rt1.c3 ASC; -- 0ms;
SELECT t0.c58, COUNT(*) OVER (), TYPEOF(t0.c58) COLLATE NOCASE FROM t0, vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT GLOB(('' IN ()), CAST(rt0.c1 AS NUMERIC)), ((((rt0.c1) NOT BETWEEN ('?Gyn') AND (rt1.c0)))GLOB(((rt1.c0)<<(rt0.c2)))), ((((vt0.lid)||(rt0.c2))) BETWEEN (((rt1.c1) NOT BETWEEN (vt0.lid) AND (rt0.c0))) AND (((t0.c84) IS TRUE))) FROM t0 WHERE (((x'')-(((((((((((((x'')AND(0.6356631647198469)))OR(0.44851395573859865)))AND(-2.106908143E9)))OR('UBa}')))OR(-5.94869931E8)))AND(x'')))));SELECT DISTINCT COUNT(UNLIKELY(DISTINCT vt0.c0)) OVER () FROM rt0 INDEXED BY i84, vt0, rt1, t0 WHERE ((('-738247329')==(NULL)));SELECT DISTINCT rt1.c2 COLLATE NOCASE FROM vt0, t0, rt0, rt1 WHERE (((CAST(0Xffffffffb690e4a0 AS REAL)) BETWEEN ((NOT (0.3286593079176824))) AND (((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT CAST(((((rt1.c3)OR('1180684855')))AND(vt0.c0)) AS BLOB) FROM rt1, t0, rt0, vt0 WHERE (((json_array_length(-2121246727, -1.184350543E9))LIKE(CAST(NULL AS NUMERIC))));SELECT ((CAST(rt1.c3 AS INTEGER)) IS FALSE), AVG(((t0.c0)*(vt0.lid))), NTH_VALUE((((((t0.c58)) BETWEEN ((rt1.c3)) AND ((vt0.c0))))+(0.4465338088242663 COLLATE RTRIM)), TOTAL_CHANGES()) OVER () FROM rt0, rt1, t0, vt0; -- 0ms;
SELECT TOTAL((- (rt1.c2))) OVER (), TOTAL(CAST(rt0.c2 AS INTEGER)) OVER (), CAST(((x'')<(vt0.lid)) AS BLOB) FROM rt0, rt1, vt0, t0 NOT INDEXED WHERE ((((x'a911')LIKE(0.45308693870704775)) IN (IFNULL(NULL, 0.1257681176020239), ((NULL)&(NULL))))) LIMIT -906651657; -- 0ms;
SELECT ALL ((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN t0.c58 THEN vt0.lid WHEN t0.c58 THEN t0.c58 ELSE t0.c58 END)AND(((rt1.c0) IS FALSE))))OR(0.7664375559057603)))AND(((rt1.c3)=(1704920125)))))AND(((rt1.c3) BETWEEN (rt1.c1) AND (vt0.c0)))), ((((rt1.c0) ISNULL)) IS FALSE), (- ((((t0.c58)) BETWEEN ((rt0.c0)) AND ((t0.c84))))) FROM t0, rt1 WHERE (CASE WHEN (NOT (0Xffffffff9f5cdfb9)) THEN CASE 0.9109899358886937  WHEN '' THEN x'bc7a' WHEN NULL THEN 0.9296848394888599 WHEN '' THEN 0.7440586608536495 WHEN NULL THEN '1952566442' WHEN NULL THEN NULL END WHEN ((NULL)LIKE('0.0')) THEN (~ (NULL)) WHEN (- (NULL)) THEN '958591199' ELSE CASE WHEN x'' THEN x'5371' END END);SELECT rt1.c3 FROM t0, rt1, vt0 WHERE (MIN((NOT (NULL)), CAST(NULL AS REAL))); -- 0ms;
SELECT (rt0.c0 COLLATE NOCASE IN ()) FROM rt1 WHERE ((('')<<(((x'')>=(''))))) GROUP BY '0.3541307069536048' HAVING (NOT ((- (rt1.c3)))); -- 0ms;
SELECT (((((t0.c0 IN ()))OR(((vt0.lid)>>(vt0.c0)))))AND(LIKELY(DISTINCT rt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((GROUP_CONCAT(rt1.c0))AND(((rt1.c3) BETWEEN (t0.c84) AND (t0.c84)))))AND(rt1.c0)), (((rt1.c1)&(t0.c84)) IN ()), TOTAL(((t0.c58) NOT BETWEEN (t0.c58) AND (vt0.lid))) FROM t0, rt1, rt0, vt0 WHERE ((((NULL) BETWEEN (0.9304145193333433) AND (0.521064909318639)) IN ())); -- 1ms;
SELECT DISTINCT rt0.c0 FROM vt0, rt1, t0, rt0; -- 0ms;
SELECT ALL TOTAL((((t0.c0, rt0.c0, 358608550))>((vt0.lid, t0.c0, 0.8735182057883524)))) FROM rt1;SELECT DISTINCT CASE ('-801946702' IN ())  WHEN ((((t0.c58)OR(rt1.c1)))OR(rt1.c0)) THEN CAST(rt0.c2 AS REAL) WHEN (~ (rt0.c0)) THEN MAX(vt0.c0) WHEN '1563539737' COLLATE NOCASE THEN rt0.c2 COLLATE NOCASE END FROM rt1, vt0, rt0 WHERE (CAST('nD' COLLATE BINARY AS NUMERIC)) GROUP BY CASE rt1.c3 COLLATE BINARY  WHEN ((vt0.lid)%(NULL)) THEN ((((((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))AND(0.697598276909277)))AND(t0.c58)))OR(rt1.c3)))AND(t0.c84)) END HAVING (((+ (rt1.c1))) NOT NULL) ORDER BY ((((t0.c0)AND(rt1.c2))) BETWEEN (CASE vt0.c0  WHEN rt1.c3 THEN t0.c84 END) AND (rt1.c1));SELECT DISTINCT ((((-1.41840893E8)OR(rt1.c3 COLLATE BINARY)))OR(((rt0.c2) IS TRUE))) FROM rt1, t0 WHERE (((CASE WHEN x'' THEN NULL ELSE 0.46934195193315864 END) NOTNULL));SELECT DISTINCT 0Xfffffffffc7d922f FROM vt0, rt0, rt1, t0 WHERE (((CAST('-1672154723' AS TEXT)) NOT BETWEEN (CASE '-1206443732'  WHEN x'' THEN 0.5780287718333003 END) AND (((NULL) NOT NULL)))); -- 1ms;
SELECT ALL ((((x'')|(vt0.lid))) NOT BETWEEN (((rt1.c3)GLOB(vt0.c0))) AND (rt1.c3 COLLATE RTRIM)) FROM rt0 WHERE ((((x'0e9b') NOT BETWEEN (0.16315139840472126) AND (0.6566797964409444)) IN ())) ORDER BY rt1.c3 ASC, (NOT (((((vt0.lid)AND(rt1.c0)))OR(vt0.lid))))  NULLS FIRST, (((t0.c0)%(rt1.c2)) IN (((vt0.c0) NOTNULL), vt0.c0, '2089496567'))  NULLS FIRST;