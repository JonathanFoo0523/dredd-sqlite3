-- Time: 2024/06/07 15:32:27
-- Database: database26
-- Database version: 3.40.0
-- seed value: 3218393326
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
CREATE TABLE IF NOT EXISTS t1 (c0 INTEGER ); -- 0ms;
PRAGMA cache_size; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x'ba42'); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(NULL) WHERE (((vt0.c0) IS TRUE) IN (vt0.c0)); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c6; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c6 TO c14; -- 0ms;
VACUUM; -- 1ms;
UPDATE OR IGNORE t1 SET c14=x''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1500355252,6');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1712175443,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56426'); -- 0ms;
CREATE INDEX IF NOT EXISTS i50 ON t1(LIKELY(DISTINCT (((c14))<((c14))))) WHERE c14; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (']喫'); -- 0ms;
PRAGMA temp.busy_timeout = 6218740902888564528; -- 1ms;
ANALYZE; -- 0ms;
CREATE INDEX IF NOT EXISTS i78 ON t1(((((c14)+(c14)))+((((0.7749313545490949, 0.7749313545490949, c14)) BETWEEN ((c14, c14, c14)) AND ((c14, c14, c14)))))) WHERE (CAST(c14 AS REAL) IN (CASE c14  WHEN c14 THEN c14 END)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('1(kt2g'); -- 1ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.7749313545490949); -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
ALTER TABLE t1 ADD COLUMN c43 INT; -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES ('-1079260929'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(x'', 1.712175443E9) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i78', ' noskipscan'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE t0 SET c43=x'', c43=0.29254487313805133; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i78', '411557455 sz=-631081152'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1687319030);\n; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 0ms;
END; -- 0ms;
REINDEX RTRIM; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
DELETE FROM vt0 WHERE (+ (LIKE(vt0.c0, vt0.c0))); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
PRAGMA temp.application_id; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
END TRANSACTION; -- 1ms;
ANALYZE; -- 0ms;
PRAGMA main.foreign_keys = true; -- 0ms;
ANALYZE i50; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'ee52'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 1ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INT , c1 BLOB , c2 INT ); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -631081152);\n; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c14)=('1067187398') WHERE CAST(((((t1.c43)AND(t1.c43)))AND(t1.c43)) AS INTEGER); -- 0ms;
VACUUM; -- 1ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT DISTINCT (CASE vt0.c0  WHEN t1.c43 THEN t1.c43 END IN ()) FROM t0 WHERE ((CAST(1.067187398E9 AS BLOB) IN (CAST(1712175443 AS TEXT)))); -- 0ms;
INSERT OR ABORT INTO t0(c2, c0) VALUES (0.541775657419103, x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 1ms;
ANALYZE; -- 0ms;
ALTER TABLE t0 RENAME TO t2; -- 0ms;
ALTER TABLE t2 RENAME COLUMN c1 TO c50; -- 1ms;
PRAGMA shrink_memory; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c14 TO c89; -- 2ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
END TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c43) VALUES (x''), (NULL), (x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c43)=('1392741675', 0.03234907330843162); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE INSERT ON t1 BEGIN DELETE FROM t2 WHERE t2.c50;END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO t2(c2, c50, c0) VALUES (0.22051393111782558, NULL, ''); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL LAST_VALUE(((CAST(t2.c2 AS INTEGER)) IS FALSE)) OVER () FROM t2 WHERE (((((('a)xp*/r<')) BETWEEN ((NULL)) AND ((0.20313557095200618))))<((0.4837772011465027 IN ())))); -- 1ms;
SELECT DISTINCT ((((t2.c50)+(t2.c50)))>=(GROUP_CONCAT(t2.c2))), x'b28c74c0', ((t2.c50 COLLATE BINARY)GLOB(SUM(vt0.c0))) FROM t2;SELECT DISTINCT CASE '-1079260929'  WHEN t2.c50 COLLATE NOCASE THEN (((t1.c89))<((v0.c0))) ELSE ((vt0.c0)GLOB(t2.c2)) END FROM v0, vt0 WHERE ((((((''))>((NULL)))) NOT NULL));SELECT CAST(CAST('1301153473' AS BLOB) AS TEXT), x'', (((((~ (t2.c2)))OR(((NULL)AND(t1.c43)))))AND(t1.c43)) FROM t2, t1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), GROUP_CONCAT(CASE WHEN t1.c43 THEN t1.c89 WHEN x'' THEN t1.c89 WHEN vt0.c0 THEN t2.c0 ELSE v0.c0 END), ((v0.c0)=('L~^t\rMi ')) COLLATE NOCASE FROM t1, v0, t2;SELECT DISTINCT CASE WHEN ((t2.c50)==(vt0.c0)) THEN AVG(v0.c0) ELSE ((vt0.c0)||(NULL)) END FROM vt0, t1, v0, t2 WHERE (CAST(((('+(')) NOT BETWEEN ((0.611748839028832)) AND ((0.5388127050982117))) AS NUMERIC)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t2.c50) BETWEEN (t2.c2) AND (t2.c50))) OVER () FROM t1, vt0, v0 WHERE ((((('1(kt2g')AND('1668725283'))) BETWEEN ((('-1934372818')%(NULL))) AND (((1156447357) IS FALSE))));SELECT DISTINCT TOTAL((~ (v0.c0))) FROM t1, v0, vt0, t2; -- 0ms;
SELECT DISTINCT CASE CAST(t2.c50 AS NUMERIC)  WHEN ((v0.c0) BETWEEN (t2.c0) AND (t1.c89)) THEN v0.c0 COLLATE RTRIM END FROM t2, vt0 WHERE (((LIKE(x'', '', '{'))<(((0.042697065086508834)>(0.11010069507313203)))));SELECT DISTINCT (~ ((NOT (t2.c2)))) FROM v0;SELECT ((t2.c50 COLLATE NOCASE)<(((v0.c0) NOT NULL))), ((UNLIKELY(t2.c2))IS NOT(t1.c43 COLLATE RTRIM)), json_array_length(CASE WHEN t2.c50 THEN '' END), AVG(CAST(t2.c50 AS INTEGER)) OVER (), (+ ((1.7976931348623157E308 IN ()))) FROM t2, t1, vt0, v0; -- 0ms;
SELECT DISTINCT ((((t2.c2) IS TRUE))>=(0.8991902138627206)) FROM vt0 LIMIT 1156447357 OFFSET 931238954;SELECT UNLIKELY(CAST(t2.c0 AS REAL)) FROM vt0, t2, t1 WHERE ((~ (((NULL) BETWEEN (0.7749313545490949) AND (0.8991902138627206))))); -- 0ms;
SELECT GROUP_CONCAT(CAST(t1.c89 AS TEXT)) OVER ( ORDER BY ((((t1.c43)<(t2.c50)))!=(NULL)) DESC) FROM t1, v0, vt0;SELECT DISTINCT t2.c50 FROM vt0, t1, v0;SELECT DISTINCT LIKELIHOOD(CASE vt0.c0  WHEN t2.c2 THEN t1.c43 ELSE t2.c0 END, 0.8077468555105635), LEAD(IFNULL(DISTINCT (+ (t1.c89)), CASE x'73af'  WHEN t1.c43 THEN t1.c43 ELSE t1.c43 END), (((~ (t1.c43))) BETWEEN (t1.c43) AND (t1.c89)), ((((t1.c43)AND(t1.c89)))AND(t1.c43)) COLLATE NOCASE) OVER (), (((~ (t1.c89)))&(((t2.c50)IS NOT(vt0.c0)))) FROM t1 WHERE ((((('Jہk/%q-82') NOTNULL)) IS FALSE));SELECT (((t2.c50) IS FALSE) IN ()) FROM v0, t2, vt0, t1; -- 1ms;
SELECT ALL ((t1.c43 IN ()) IN ()), ((('1774348979' IN (vt0.c0)))%((- (t2.c2)))), ((JULIANDAY(vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN (t2.c50 COLLATE NOCASE) AND (TYPEOF(DISTINCT t1.c43))) FROM t2;SELECT (((((t2.c0) NOTNULL), COALESCE(DISTINCT t1.c43, t1.c43), (t2.c0 IN ())))<(((t2.c50 IN (t2.c0)), ((t2.c2)AND(t2.c0)), UPPER(DISTINCT t2.c50)))), '-1500355252', ((((('Nj', vt0.c0, t2.c50, t2.c2, t2.c2))<=((t2.c50, t1.c89, vt0.c0, vt0.c0, v0.c0)))) BETWEEN ((((t2.c2)) BETWEEN ((t2.c0)) AND ((t2.c50)))) AND (CASE WHEN vt0.c0 THEN t1.c89 WHEN t2.c50 THEN t1.c43 WHEN vt0.c0 THEN '?LJs' ELSE v0.c0 END)) FROM vt0, t1, v0, t2 WHERE (((((0xffffffff8b9abe04))<((0.680856071081264))) IN (((NULL)>>(0x1d8f3a37))))) ORDER BY CAST((((t1.c89))=((vt0.c0))) AS INTEGER), HEX(x'' COLLATE NOCASE) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((((((t1.c89)IS(t1.c89)))AND(COUNT(*))))OR((- (t2.c0)))) FROM vt0, t1 WHERE ((~ (((x'')*('0'))))) GROUP BY ((UPPER(x''))IS(((NULL) BETWEEN (v0.c0) AND (t1.c43)))) HAVING NULL;SELECT ALL (((((t2.c0)%(vt0.c0))))==((((v0.c0)&(t2.c0))))) FROM v0 WHERE (((((((((NULL)OR(INSTR(0.9574720774485045, x''))))OR(((((x'')OR(NULL)))OR(x'7bf9')))))OR(((((x'7f35')AND('0.20313557095200618')))AND(x'')))))AND(((x'') IS FALSE))));SELECT ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN t2.c0 THEN t1.c43 END) AND (CAST(vt0.c0 AS TEXT))) FROM vt0;SELECT ((COUNT(t1.c43)) ISNULL) FROM t1, vt0 WHERE ((((1.156447357E9, 'a)xp*/r<', '')) NOT BETWEEN ((NULL, x'', x'')) AND ((NULL, 'ik', -1500355252))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (- (CAST(t2.c0 AS NUMERIC))) FROM t1 WHERE ((- (CASE -8.03580501E8  WHEN x'' THEN 0.541775657419103 WHEN 984941965 THEN -1934372818 WHEN x'2d27' THEN x'' ELSE 0.9637318251952125 END)));SELECT DISTINCT SUM('-413913742') COLLATE NOCASE FROM vt0, v0, t1 WHERE ('{ }g') ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(((vt0.c0) NOTNULL))))AND(v0.c0)) DESC; -- 0ms;
SELECT DISTINCT t1.c43 FROM v0, vt0, t1 ORDER BY (+ ((vt0.c0 IN ()))), (CASE t2.c50  WHEN x'' THEN t2.c2 WHEN v0.c0 THEN t1.c43 WHEN t2.c0 THEN t1.c43 ELSE t1.c43 END IN (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (((t1.c43))!=((t2.c2))))) DESC  NULLS LAST, ((((vt0.c0)OR(((((t2.c2)OR(t1.c43)))OR(v0.c0)))))OR(((((((((t2.c2)AND(t2.c50)))OR(vt0.c0)))OR(t1.c43)))AND(t2.c50)))) ASC;SELECT CAST((NOT (t1.c43)) AS INTEGER) FROM v0;SELECT ((((v0.c0)*(t2.c50)))/('-1377700736')), CAST(UPPER(DISTINCT t2.c50) AS BLOB), (LIKELY(t2.c50) IN ()) FROM v0, t1, t2, vt0; -- 0ms;
SELECT ALL NULL FROM t1, t2, v0 INDEXED BY i50, vt0 WHERE ((NULL COLLATE NOCASE IN ()));SELECT COUNT(*) OVER (), (NOT ('DBGﳆ')), COUNT((('nC涠.le') NOT BETWEEN (t2.c2) AND (t2.c2))), x'a4b5' COLLATE BINARY, ((CASE t2.c50  WHEN t2.c50 THEN t1.c89 ELSE t1.c89 END) ISNULL) FROM t2 GROUP BY UNLIKELY(t2.c2), ((((NOT (vt0.c0)), t1.c43 COLLATE NOCASE, CASE WHEN t2.c2 THEN vt0.c0 WHEN t2.c2 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE t2.c0 END))>((UNLIKELY(DISTINCT t1.c43), (((vt0.c0, vt0.c0, v0.c0))>=((t2.c50, t2.c2, NULL))), CAST(t1.c43 AS NUMERIC)))), (((v0.c0, t2.c2, v0.c0)) BETWEEN ((t2.c2 COLLATE NOCASE, ((t2.c50) IS TRUE), v0.c0)) AND ((((t1.c43)+(t2.c2)), CAST(vt0.c0 AS BLOB), NULL)));SELECT ALL ((NULL) BETWEEN ((((t1.c89)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) AND (x'f180')), 932295308, ((((((((t1.c43)AND(NULL)))OR(t2.c0)))OR((((t2.c0))>=((0.5388127050982117))))))OR(t2.c2 COLLATE NOCASE)) FROM v0, vt0 WHERE ((((- (0x495236c5))) IS TRUE));SELECT ALL CASE ((vt0.c0) BETWEEN (vt0.c0) AND (t2.c2))  WHEN (t2.c2 IN ()) THEN (+ (t2.c0)) WHEN (NOT (t1.c89)) THEN ((t1.c89)IS NOT(t1.c89)) WHEN (+ (t2.c2)) THEN ((t2.c50) BETWEEN (t2.c50) AND (vt0.c0)) END, SUM((t1.c43 IN ())) OVER (), DENSE_RANK() OVER () FROM t1, vt0, t2, v0 WHERE ((((x'32ee' IN ())) NOTNULL)); -- 0ms;
SELECT DISTINCT 'E}', (((t2.c0)<<(t2.c50)) IN ()), ((t2.c2)>=(v0.c0)) COLLATE NOCASE COLLATE BINARY, CASE WHEN ((v0.c0) IS TRUE) THEN GROUP_CONCAT(t1.c43) WHEN t1.c43 THEN 'KS{4!\n-瞨' WHEN ((t2.c50) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN MAX(t2.c0) ELSE t2.c50 END, (- (((vt0.c0) NOT BETWEEN (t2.c2) AND (t2.c2)))) FROM t1;SELECT ALL ((((CASE -1277402327  WHEN t2.c2 THEN t2.c2 ELSE v0.c0 END)AND((~ (t2.c50)))))OR('300906408')), CASE WHEN ((t1.c89) BETWEEN (t1.c43) AND (t2.c0)) THEN CAST(vt0.c0 AS REAL) ELSE t1.c89 END, ((((RTRIM(vt0.c0))OR(x'6950')))OR(((v0.c0)AND(t2.c0)))) FROM t1, v0, t2;SELECT DISTINCT SUM(((t2.c50)<(t2.c0))) FROM t2, vt0, t1, v0; -- 0ms;
SELECT ALL ((((t2.c2)/(x''))) BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN t2.c2 WHEN vt0.c0 THEN t2.c50 WHEN NULL THEN v0.c0 ELSE t1.c43 END)) FROM t2, t1, v0, vt0 WHERE (DATE(0.7028589782074351 COLLATE RTRIM, CASE 0.7028589782074351  WHEN x'' THEN x'' WHEN 0.680856071081264 THEN 0.19553798125611066 WHEN 2.046193056E9 THEN NULL ELSE 'j[3SOF' END, NULL COLLATE BINARY, NULL, x'')); -- 0ms;
SELECT DISTINCT CASE WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN (t1.c43 IN ()) WHEN (((NULL, 'q8P^x2v|', t2.c50))<((t2.c50, v0.c0, vt0.c0))) THEN UNLIKELY(t1.c43) WHEN (t1.c43 IN ()) THEN CHANGES() WHEN (- (t2.c2)) THEN PRINTF(t2.c2) WHEN ((t2.c50)>>(t1.c89)) THEN NULLIF(t2.c50, vt0.c0) ELSE t1.c89 COLLATE BINARY END FROM t1, vt0 WHERE ((((LOWER(NULL)))>((CAST(x'7621' AS TEXT))))) ORDER BY ((t2.c2)/(vt0.c0)) COLLATE RTRIM;SELECT ALL ((t1.c89 COLLATE RTRIM) NOT BETWEEN ('0.22051393111782558') AND (((t2.c2) NOT BETWEEN (t2.c50) AND (t2.c50)))), (vt0.c0 IN ()) COLLATE NOCASE, ((t2.c50 COLLATE BINARY) NOT BETWEEN (((t1.c89)<>(t2.c0))) AND ('Jہk/%q-82')) FROM vt0, v0, t1, t2 WHERE (((((((((((-1.500355252E9)OR(NULL)))OR(']喫')))AND(x'9f4281c0')))AND(']?')))IS(CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((t1.c43)>(t2.c0)) COLLATE NOCASE, ((CASE WHEN t2.c50 THEN '' WHEN '-1500355252' THEN t2.c50 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)-(((v0.c0) BETWEEN (t2.c2) AND (t2.c2)))), TOTAL(((t1.c43)<=(vt0.c0))) OVER ( ORDER BY (CASE t2.c2  WHEN t2.c2 THEN t1.c89 WHEN t1.c89 THEN vt0.c0 WHEN t1.c89 THEN vt0.c0 ELSE 0X1d8f3a37 END IN ())) FROM v0, t2;SELECT DISTINCT LAST_VALUE(CASE WHEN t2.c50 THEN (((t2.c50)) BETWEEN ((vt0.c0)) AND ((t2.c50))) END) OVER (), ((~ (v0.c0)) IN ()), ((((CAST(t1.c89 AS TEXT))OR((- (t2.c50)))))OR((+ ('Qi鐪j')))) FROM vt0, t2;SELECT ((((((((CAST(vt0.c0 AS BLOB))AND((((t2.c0)) BETWEEN ((v0.c0)) AND ((x''))))))OR(CASE WHEN t2.c50 THEN t1.c43 ELSE vt0.c0 END)))AND(((t2.c2)<=(vt0.c0)))))OR((vt0.c0 IN ()))), (((((v0.c0)AND(t2.c2))))>((CASE v0.c0  WHEN t2.c2 THEN 'DBGﳆ' ELSE t2.c0 END))), (((vt0.c0) ISNULL) IN (t2.c50 COLLATE RTRIM)) FROM v0, vt0 WHERE (x'7456');SELECT SUM(((t1.c89) IS FALSE)) FROM t1; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN ((t2.c0)IS(t2.c50)) WHEN (((v0.c0, t2.c0, t1.c43)) BETWEEN ((0.22361163078885382, t2.c2, 0.12174244223404362)) AND ((x'', v0.c0, vt0.c0))) THEN v0.c0 WHEN ((t2.c50)<<(t2.c50)) THEN (((t1.c89, t2.c0, vt0.c0))<((v0.c0, t2.c50, t2.c50))) ELSE (((t2.c0)) BETWEEN ((t2.c2)) AND ((t2.c50))) END, COUNT(*), (((((t1.c43) ISNULL)))<((((vt0.c0) BETWEEN (t1.c43) AND (t2.c50))))) FROM vt0, v0 WHERE (CAST(('A,' IN (-1923897840, NULL)) AS BLOB));SELECT ALL ((CAST(t2.c0 AS TEXT))<=((((t2.c0)) NOT BETWEEN ((t1.c89)) AND ((0.6190547120792447))))) FROM v0 ORDER BY 'a,' ASC, ((CASE WHEN t1.c43 THEN t2.c50 END) IS FALSE)  NULLS FIRST;SELECT DISTINCT (((((t1.c89, vt0.c0, vt0.c0))=((x'72ac', t1.c89, vt0.c0))))GLOB(CASE t1.c43  WHEN t2.c0 THEN v0.c0 ELSE v0.c0 END)), (((0.611748839028832) NOT BETWEEN (t2.c0) AND (vt0.c0)) IN ()), (MIN(t1.c43) IN ()) FROM t2, vt0 WHERE (CAST(('201121399' IN ()) AS NUMERIC)) ORDER BY ((CASE v0.c0  WHEN t2.c0 THEN t2.c0 ELSE t1.c43 END)||((~ (t1.c89)))), ((CASE t2.c2  WHEN t2.c0 THEN t1.c43 END) IS TRUE) ASC  NULLS LAST;SELECT ALL DENSE_RANK() OVER (), t2.c0, (((t2.c2, vt0.c0, t1.c43)) NOT BETWEEN ((((t2.c2)<(t1.c43)), ((t2.c0)||(t2.c50)), ((NULL) BETWEEN (v0.c0) AND (t2.c50)))) AND ((t2.c50 COLLATE BINARY, (((v0.c0))<((v0.c0))), ((t2.c50)>(NULL))))), vt0.c0, ((('')) BETWEEN ((t2.c50 COLLATE NOCASE)) AND ((t2.c0))) FROM v0, t2 WHERE ((((x'')) NOT BETWEEN ((((((NULL)OR(x'')))AND(x'7a99')))) AND ((CAST(NULL AS REAL)))));SELECT (- (v0.c0)) COLLATE NOCASE, CASE v0.c0 COLLATE RTRIM  WHEN (v0.c0 IN (t1.c89)) THEN v0.c0 ELSE CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 WHEN v0.c0 THEN t1.c89 WHEN t2.c2 THEN t1.c43 END END, (((((((t2.c2))=((vt0.c0))))AND(((t2.c50) IS FALSE))))OR((NOT (t1.c89)))) FROM t1, vt0, t2 WHERE (('-1560852688' IN ((((('#].')AND(x'e91e')))OR(NULL)))));SELECT MIN(x'2d088bda') FROM t1, t2; -- 0ms;
SELECT DISTINCT (NOT (((t1.c89) BETWEEN (t1.c89) AND (t1.c89)))), CAST(NULL AS TEXT), ((HEX('7\C&*)a')) IS TRUE) FROM vt0, v0, t2 WHERE ((~ ((('1067187398')>(x''))))) ORDER BY (((- (v0.c0))) NOT BETWEEN (((t2.c0) NOT BETWEEN ('-862104013') AND (t2.c50))) AND (t1.c89 COLLATE RTRIM)) ASC;SELECT (NOT (NULL)) FROM t2, vt0, t1 NOT INDEXED WHERE ((((- (x'')))>=(CASE WHEN -1209145668 THEN 0.17367383243974022 ELSE 0.3429944857328642 END))); -- 0ms;
SELECT DISTINCT ((((((((json_quote(vt0.c0))OR(CAST(t2.c0 AS NUMERIC))))AND(t2.c2 COLLATE NOCASE)))OR(((t2.c50)<=(t2.c50)))))OR((t2.c50 IN ()))), (CASE v0.c0  WHEN t1.c43 THEN x'986a' END IN ()), ((((t1.c43) ISNULL))IS NOT(AVG(t2.c50))) FROM t1;SELECT DISTINCT ((((t2.c0) NOT BETWEEN (t2.c50) AND (vt0.c0)))!=(((((((((t2.c2)AND(0.9922777231953829)))OR(t2.c50)))AND(vt0.c0)))OR(vt0.c0)))) FROM vt0, t1, v0;SELECT DISTINCT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t2.c0 THEN t1.c89 WHEN t2.c2 THEN vt0.c0 ELSE t2.c2 END))==((CAST(t1.c43 AS TEXT)))) FROM t2, vt0, v0, t1 WHERE (((('-1377700736' IN ())) IS TRUE)); -- 0ms;
SELECT CAST(((((t2.c2)OR(v0.c0)))OR(t1.c43)) AS INTEGER) FROM v0, t1 INNER JOIN t2 ON SQLITE_SOURCE_ID(); -- 0ms;
SELECT ((LOWER(t1.c43))IS((- (vt0.c0)))) FROM t2, t1, v0 WHERE ((((~ (x''))) NOTNULL));SELECT ALL UPPER(CAST(t2.c50 AS TEXT)) FROM t1, t2, v0, vt0 WHERE ((((((NULL)IS NOT(''))))<(((- (0x6dad424f)))))); -- 0ms;
SELECT CAST(CASE t1.c43  WHEN t1.c89 THEN v0.c0 END AS BLOB) FROM t2 FULL OUTER JOIN v0 ON NULL LEFT OUTER JOIN t1 ON ((((((((((((((v0.c0) IS FALSE))AND(((v0.c0)GLOB(t2.c2)))))AND(t2.c2 COLLATE RTRIM)))OR((t2.c50 IN (t2.c0, v0.c0)))))AND(t2.c2 COLLATE BINARY)))AND((vt0.c0 IN ()))))AND(CAST(t2.c2 AS REAL))) RIGHT OUTER JOIN vt0 ON (((t2.c0)) BETWEEN ((t2.c50)) AND ((ABS(DISTINCT vt0.c0)))) WHERE ((0.8942208151567497 COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT NULL FROM vt0 LEFT OUTER JOIN t1 ON ((t1.c89 IN (t2.c2)) IN (CAST(vt0.c0 AS BLOB))) INNER JOIN v0 ON ((vt0.c0)IS NOT(0.680856071081264)) WHERE ((+ ((0.17367383243974022 IN ()))));SELECT ((COUNT(*)) BETWEEN ('rd4w<⹈z6') AND (t2.c50)), ((json(t1.c43))%(((((t2.c0)OR(t2.c0)))AND(t2.c50)))), (COUNT(t1.c89) IN (t1.c43, ((vt0.c0)LIKE(t1.c89)))), COUNT(GROUP_CONCAT(0.5752482892970993)), t2.c50 FROM t1, v0 WHERE ((((NULL)<=('-97396281')) IN ()));SELECT '9F,aTi' FROM t2, v0, vt0, t1; -- 0ms;
SELECT 0.7533053309093228 FROM v0 WHERE (NULL); -- 0ms;
SELECT ALL (((v0.c0) BETWEEN ('敌4') AND (t1.c43)) IN ()) FROM v0, t1, t2, vt0; -- 0ms;
SELECT DISTINCT (NOT (t1.c89)) COLLATE BINARY FROM t1, t2 WHERE (((((x'')IS('!b''')))==(((0.08786202421155276) BETWEEN (NULL) AND (x''))))); -- 0ms;
SELECT ALL ((COUNT(*)) NOT NULL) FROM t2, t1; -- 0ms;
SELECT DISTINCT (((t1.c89)) BETWEEN ((((((t1.c89)OR(t2.c50)))AND(t1.c89)))) AND ((((t1.c89)IS NOT(t1.c89))))) FROM t1, vt0, v0, t2 WHERE (((x'')+((+ (x'618063e4'))))); -- 0ms;
SELECT ALL ((((((((((t2.c0)OR(t2.c2)))OR(t2.c2)))AND(v0.c0)))OR(t2.c50))) BETWEEN (((((t2.c2)OR(t2.c50)))OR(t1.c89))) AND (('2101389246' IN ()))) FROM t2, vt0, v0 WHERE (((CASE WHEN x'' THEN 0.4655326311787259 ELSE NULL END)>>((~ ('')))));SELECT ALL ((AVG(vt0.c0)) NOT BETWEEN (0.22110863155826765) AND ((- ('690262903')))), vt0.c0, GROUP_CONCAT(((t1.c89)<(t2.c2))) OVER () FROM t2, vt0 LIMIT -891345616 OFFSET 1539476650;SELECT DISTINCT t1.c43 FROM vt0;SELECT DISTINCT ((((UNICODE(vt0.c0))OR((+ (t1.c43)))))AND(((vt0.c0)!=(0.5752482892970993)))) FROM v0, t1, t2, vt0; -- 0ms;
SELECT DISTINCT ((((v0.c0)<(t1.c43))) IS TRUE) FROM t1, vt0, v0; -- 0ms;
SELECT DISTINCT LAG((- (((vt0.c0)IS(t1.c43)))), INSTR(t2.c50 COLLATE BINARY, ((((((((t2.c50)AND(NULL)))OR(t1.c89)))OR(t1.c89)))AND('1712175443'))), NULL) OVER ( ORDER BY (((vt0.c0)) NOT BETWEEN (((t2.c50 IN ()))) AND ((((t1.c89)>(vt0.c0))))) DESC  NULLS LAST GROUPS BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (0.36480844509345456)))<=(((((t2.c50)OR(t2.c50)))AND(v0.c0)))) PRECEDING AND (NOT (t2.c2)) PRECEDING EXCLUDE GROUP) FROM v0, vt0, t2, t1; -- 0ms;
SELECT ALL LENGTH((('a?}T''T]X') IS TRUE)) FROM t1, vt0; -- 0ms;
SELECT ALL ((((t1.c43)LIKE(t2.c0)))==(t2.c2)) FROM vt0, t1, v0, t2; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((CAST(NULL AS BLOB)) IS FALSE)) ORDER BY (('-1321338218')IS NOT(CAST(vt0.c0 AS BLOB))); -- 0ms;
SELECT DISTINCT CASE WHEN v0.c0 COLLATE BINARY THEN ((((((((t1.c89)OR(v0.c0)))AND(t2.c2)))AND(t2.c50)))AND(t1.c89)) END FROM t1, v0, t2 WHERE (CASE WHEN (0.3085634079504166 IN ()) THEN (('984941965')GLOB('')) END) GROUP BY CAST(((t1.c89) BETWEEN (vt0.c0) AND ('-1414320744')) AS BLOB);SELECT DISTINCT CASE (((t1.c43, t2.c2, t2.c50)) BETWEEN ((t2.c50, v0.c0, t2.c50)) AND ((t1.c43, v0.c0, t2.c2)))  WHEN (- (v0.c0)) THEN ((v0.c0) NOT BETWEEN (x'') AND (x'')) WHEN ((v0.c0) IS TRUE) THEN (((t1.c89, t1.c43, v0.c0, t2.c50, 9.32295308E8)) NOT BETWEEN ((vt0.c0, t2.c0, t2.c2, t2.c0, v0.c0)) AND ((t2.c50, v0.c0, t1.c43, t2.c0, t2.c50))) WHEN CAST(t1.c89 AS REAL) THEN COALESCE(v0.c0, t2.c50) ELSE (t1.c89 IN ()) END, ((SUM(t2.c50))<>(SUM(v0.c0))), (((((((((t2.c50 IN ()))AND(((v0.c0) NOTNULL))))AND(COALESCE(t1.c43, vt0.c0))))OR(load_extension(t1.c89))))OR((t2.c0 IN ()))) FROM vt0, v0, t2 WHERE (CASE (('')&(0.9922777231953829))  WHEN CAST('' AS TEXT) THEN ((-1560852688) IS TRUE) END);SELECT t1.c43 FROM v0, t2;SELECT DISTINCT (((CAST(vt0.c0 AS INTEGER)))=(((((t2.c50, t1.c89, t2.c50))>=((vt0.c0, v0.c0, t1.c43)))))) FROM vt0, t1, t2, v0 WHERE (((CASE WHEN 'r' THEN '-674315217' WHEN '?8' THEN '-631081152' WHEN 0.30874756392680003 THEN x'' END)>=((((x'', x'', 0.8313825268547091))>=((0.31339844873796374, NULL, x'1adb')))))); -- 0ms;
SELECT DISTINCT ((((((((0Xffffffffa2f74730)AND(t2.c50)))AND(t2.c0)))OR(TRIM(DISTINCT t1.c89, t2.c2))))OR(t1.c89 COLLATE RTRIM)) FROM v0, t1, vt0, t2; -- 0ms;
SELECT ALL MAX(CAST(vt0.c0 AS BLOB)) COLLATE NOCASE, ((((t2.c50)>>(t1.c43))) BETWEEN (((t2.c2)<>(t2.c2))) AND (((t2.c50) NOT BETWEEN (vt0.c0) AND (v0.c0)))), CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE t1.c43 END AS TEXT) FROM vt0, t2;SELECT DISTINCT (((((NOT (t2.c50)))OR((vt0.c0 IN ()))))AND(((t2.c50) IS FALSE))) FROM t1, vt0 NOT INDEXED WHERE ((((-1335743914 IN (NULL))) IS FALSE));SELECT DISTINCT (t2.c2 IN (t1.c43)) COLLATE NOCASE FROM t2, vt0 LEFT OUTER JOIN v0 ON ((x'cfae')IS NOT(v0.c0)) COLLATE RTRIM LEFT OUTER JOIN t1 ON IFNULL(((t1.c89)IS('1712175443')), ((t2.c0) BETWEEN (t2.c2) AND (t1.c89))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), vt0.c0, (NOT ((v0.c0 IN (vt0.c0)))) FROM t1, v0 WHERE (((((('-97396281') BETWEEN ('') AND (NULL))))=(((('2C6HpWQ8')IS NOT(0x1))))));SELECT ALL TRIM(DISTINCT CASE v0.c0  WHEN NULL THEN t1.c43 ELSE t1.c89 END, CASE WHEN t1.c43 THEN t1.c43 WHEN vt0.c0 THEN t2.c0 WHEN t2.c0 THEN vt0.c0 END) FROM v0 WHERE ('' COLLATE NOCASE) ORDER BY UPPER(((t1.c43) BETWEEN (t2.c2) AND (0.6190547120792447)))  NULLS FIRST;SELECT ALL MIN(((t1.c43) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0, t1, v0, t2; -- 0ms;
SELECT ALL '0.611748839028832', ((((((((vt0.c0)AND('931238954')))OR(t2.c2)))OR(CASE WHEN vt0.c0 THEN t2.c2 END)))AND((t1.c89 IN ()))), ((x'') NOT NULL) FROM t1, vt0; -- 0ms;
SELECT ALL CASE ((t2.c2) ISNULL)  WHEN CAST(v0.c0 AS BLOB) THEN NULL WHEN t2.c0 THEN ((t2.c0)LIKE(t1.c43)) WHEN CAST('-1923897840' AS BLOB) THEN (((t2.c2)) BETWEEN ((t2.c0)) AND ((0.3713628137235244))) ELSE NULL END FROM v0, vt0, t2, t1 WHERE (CASE WHEN (NULL IN ()) THEN (((x''))<((-1.7976931348623157E308))) WHEN (('敌4')IS NOT('-1229065105')) THEN (-218816300 IN ()) WHEN UPPER(1.53947665E9) THEN (('1314802125') NOTNULL) END); -- 0ms;
SELECT ALL (+ (0.752026438580171)) FROM t2, vt0, v0, t1 WHERE (((NULL COLLATE RTRIM)>>((('Aൈ') ISNULL)))); -- 0ms;
SELECT ALL ((vt0.c0) NOT NULL) FROM v0;SELECT DISTINCT (((t2.c50, 0.07295062810424258, v0.c0)) BETWEEN ((0.2884237733038785, t1.c43, t2.c0)) AND ((t1.c89, t1.c43, 0.46616616433268787))) COLLATE NOCASE, ((CAST(t2.c50 AS BLOB)) BETWEEN ((((t2.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, t1.c89, t2.c0)) AND ((vt0.c0, x'f07b', t1.c43)))) AND (((t2.c2) BETWEEN (t2.c2) AND (t2.c0)))), ((((t2.c2)OR(v0.c0))) IS TRUE) FROM v0, vt0, t1, t2 WHERE ((((0.527178375881855 IN (0.5388127050982117, '')))||(IFNULL(DISTINCT '-392783107', 0.4687751050785657)))); -- 0ms;
SELECT DISTINCT 0.6414516265208738 FROM vt0, t1 WHERE ('ei)s' COLLATE RTRIM) ORDER BY ((t2.c0 COLLATE BINARY)|(((t1.c89) BETWEEN (t2.c2) AND (t1.c89))))  NULLS FIRST, (NOT (t2.c50)) COLLATE RTRIM;SELECT DISTINCT ((t1.c43) NOT BETWEEN (t1.c43) AND (-1317602766)) COLLATE RTRIM FROM t2, v0 GROUP BY (((((t2.c0 IN ()))AND(1.7976931348623157E308)))AND(((((vt0.c0)OR(vt0.c0)))OR(NULL)))) HAVING ((LOWER(DISTINCT t2.c50))==((v0.c0 IN ())));SELECT ALL t2.c0 FROM t2, vt0 WHERE ((- ((((((((((((('\r/wiT髽Q3U')AND(0.3922436767234472)))OR(0.042697065086508834)))OR(0.2734709073355218)))OR(0.36665653503112616)))AND(0xdd406bf)))OR(NULL))))); -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN t1.c89 THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t2.c50 THEN v0.c0 END IN ()), (((v0.c0)) NOT BETWEEN (('9F,aTi')) AND ((t1.c43))) COLLATE BINARY, CHANGES() FROM t1, t2;SELECT DISTINCT CAST(t1.c89 COLLATE BINARY AS NUMERIC) FROM v0, t1; -- 0ms;
SELECT DISTINCT t2.c50 FROM t2, t1 NOT INDEXED, v0 WHERE (((((0.31339844873796374) BETWEEN (NULL) AND (-432447564))) NOT BETWEEN (((' w') BETWEEN (0Xfffffffff6f55851) AND (0.3176692860115068))) AND (((0xfffffffff2f520d4)LIKE(0.056946603933056616))))); -- 0ms;
SELECT ALL 0xffffffffc524e713, ((((t1.c89) BETWEEN (t2.c50) AND (v0.c0))) BETWEEN (((t1.c89)>>(t2.c50))) AND (t1.c89)), CAST(t2.c2 COLLATE RTRIM AS BLOB) FROM v0, t1, vt0 GROUP BY ((t2.c0 COLLATE RTRIM) ISNULL), (((CASE t1.c89  WHEN 0.844026570009449 THEN t2.c50 WHEN t1.c89 THEN vt0.c0 WHEN t2.c2 THEN v0.c0 ELSE t2.c50 END, ((t2.c2) BETWEEN (t1.c89) AND (t2.c50)), (+ ('-97396281'))))>((t2.c0 COLLATE BINARY, ((vt0.c0)<(t2.c2)), ((((t2.c50)OR(-1.079260929E9)))OR(t1.c89))))), CASE ((((vt0.c0)OR(t2.c50)))OR(t2.c2))  WHEN LOWER(-1560852688) THEN ((vt0.c0) IS TRUE) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t2.c50 END END;SELECT ALL (((t1.c43)) NOT BETWEEN ((((t2.c50) NOT NULL))) AND ((((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) FROM t2, v0, t1, vt0 WHERE (CASE WHEN x'0650' COLLATE BINARY THEN (('a)xp*/r<')IS(NULL)) WHEN ((NULL)<('-1595863341')) THEN (+ ('0.527178375881855')) WHEN '' THEN ((NULL) BETWEEN (NULL) AND (NULL)) ELSE ((x'') IS TRUE) END) GROUP BY ' w'; -- 0ms;
SELECT DISTINCT v0.c0, ((t2.c2)OR((vt0.c0 IN ()))), ((TYPEOF(DISTINCT t1.c89))>=((('-2011776583') NOT NULL))) FROM t2, t1, vt0, v0; -- 4ms;
SELECT DISTINCT (((t1.c43)) NOT BETWEEN ((AVG(v0.c0))) AND ((CASE t2.c50  WHEN t1.c43 THEN 0.5388127050982117 ELSE t1.c43 END))) FROM v0, t2, t1, vt0; -- 0ms;
SELECT DISTINCT ((((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c89))))))AND(((t1.c89)GLOB(t2.c0)))) FROM t1 WHERE (((((('X8DgehG2')) NOT BETWEEN ((NULL)) AND ((NULL))))IS(((((0.5983494249898056)OR(0.7984145001251823)))AND(NULL))))) GROUP BY ((((((t1.c89)OR(t2.c0)))AND(t2.c2))) IS FALSE) HAVING CAST((~ (t2.c0)) AS TEXT) ORDER BY (((('p]jWlN')AND((NOT (t2.c50)))))AND(CASE t1.c89  WHEN vt0.c0 THEN '1302060872' END));SELECT DISTINCT AVG(TYPEOF(t2.c2)) COLLATE NOCASE FROM t1, t2 WHERE (CASE WHEN ((NULL) ISNULL) THEN (((('GZkh.zs')OR(0.4837772011465027)))AND('s?')) WHEN ((x'') BETWEEN ('') AND ('773568623')) THEN x'' WHEN ((0.30874756392680003) NOTNULL) THEN NULL COLLATE NOCASE ELSE CASE WHEN '' THEN 0x2b727b53 END END); -- 0ms;
SELECT DISTINCT (((((((t1.c89)OR(v0.c0)))AND(t1.c43))))<>(((((v0.c0)) NOT BETWEEN ((t1.c89)) AND ((t2.c50)))))) FROM vt0, t1, v0 LIMIT -959365925;SELECT ((CAST(t2.c2 AS INTEGER)) IS TRUE), ((NULL)|(((((t2.c50)OR(v0.c0)))OR(t2.c50)))), ((((v0.c0)OR(CASE WHEN 'a)xp*/r<' THEN x'' WHEN v0.c0 THEN t1.c43 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN t2.c0 WHEN t1.c89 THEN t1.c43 END)))OR(CAST(t2.c0 AS REAL))) FROM t1, v0 WHERE ((CAST('F]/ dH' AS TEXT) IN ()));SELECT ALL CASE WHEN t1.c89 THEN ((vt0.c0) IS FALSE) WHEN t2.c50 THEN t1.c89 WHEN CASE WHEN t2.c2 THEN vt0.c0 END THEN ((t2.c50) NOT NULL) ELSE ((t2.c2)*(t1.c43)) END, ((((t2.c2 IN (vt0.c0))))<>((CAST(t2.c2 AS BLOB)))), ((((0.15525062393163025)>=(t1.c43)))*(COUNT(*))) FROM v0;SELECT DISTINCT CAST(((t2.c50) IS FALSE) AS NUMERIC), (((TRIM(DISTINCT v0.c0, v0.c0)))<=((COUNT(t2.c0)))), (((t1.c89)) NOT BETWEEN (((('TM1#') NOT BETWEEN (vt0.c0) AND (v0.c0)))) AND ((LOWER(DISTINCT v0.c0)))), ((('s')) NOT BETWEEN ((CASE WHEN t2.c2 THEN '' ELSE v0.c0 END)) AND ((((t2.c50) NOT BETWEEN (t2.c50) AND (t2.c50))))), CASE WHEN (+ (vt0.c0)) THEN CASE t2.c2  WHEN t1.c89 THEN t2.c0 END ELSE CAST(vt0.c0 AS BLOB) END FROM t1, vt0, v0 WHERE (CASE (((x'')) BETWEEN ((4.11557455E8)) AND (('-2032923320')))  WHEN ((NULL) NOT BETWEEN ('z_UዏWQ|#') AND (0x7bd86877)) THEN CAST('-1344728357' AS INTEGER) ELSE (('3F1i3*(L') NOTNULL) END);SELECT DISTINCT (((t2.c50)>>(t1.c89)) IN ()) FROM vt0, t1, t2; -- 1ms;
SELECT LIKELY(DISTINCT ((t2.c2) IS TRUE)), (~ (((v0.c0) ISNULL))), ((('-1500355252' IN ()))-(TYPEOF(t2.c2))) FROM t2, v0, t1, vt0 WHERE (CASE WHEN ('/&켥Vw?a' IN ()) THEN CAST(0xffffffffabb32d98 AS NUMERIC) END); -- 0ms;
SELECT DISTINCT (NOT (((t1.c89)GLOB(t2.c2)))) FROM vt0, t2, t1 WHERE (((((NULL)IS NOT(-1.344728357E9)))LIKE(HEX('1283658447')))); -- 3ms;
SELECT DISTINCT ((CAST(t2.c0 AS INTEGER)) BETWEEN (((t1.c89)+(t2.c2))) AND (((((((((t2.c50)OR(t2.c0)))AND(t2.c2)))AND(t1.c43)))OR(t1.c43)))) FROM v0;SELECT DISTINCT ((((t2.c2) NOT BETWEEN (t1.c89) AND (t2.c2))) NOT BETWEEN (t2.c2) AND (GROUP_CONCAT(v0.c0))), NULL COLLATE RTRIM, ((((((t1.c43)AND(t1.c89)))OR(t2.c0)))LIKE(SUM(t2.c50))) FROM t1, t2, vt0 WHERE (CAST(((('now'))<>((x''))) AS NUMERIC));SELECT DISTINCT (CAST(vt0.c0 AS BLOB) IN ()), IFNULL(DISTINCT 0Xffffffffc6d13cdb, LOWER(0.03234907330843162)), (((- (vt0.c0))) NOT BETWEEN (t2.c0 COLLATE NOCASE) AND ((+ (t1.c89)))) FROM vt0, v0, t1, t2 WHERE (((NULL)<=(((((0.7749313545490949)AND(0.8313825268547091)))OR('0.6414516265208738'))))); -- 0ms;
SELECT DISTINCT ((COUNT(*))/(x'b1ad')) FROM vt0, v0 WHERE (((x'' COLLATE RTRIM) BETWEEN (NULL) AND (CASE WHEN 0.8664313644638414 THEN x'' ELSE 9.84941965E8 END))); -- 0ms;
SELECT DISTINCT COALESCE((((t1.c89)) BETWEEN ((t1.c43)) AND ((t1.c43))), ((v0.c0) NOT BETWEEN (x'bec0') AND (t2.c2))), TRIM(DISTINCT NULL COLLATE RTRIM, (((v0.c0)) BETWEEN ((t1.c89)) AND ((t1.c43)))), UNLIKELY((t1.c89 IN ())) FROM v0, vt0, t2 WHERE (x'');SELECT DISTINCT (vt0.c0 IN ()), ((t1.c89)*(t2.c2)) COLLATE BINARY, ((0.0183434378244669)LIKE((('0.36665653503112616') BETWEEN (v0.c0) AND (t2.c50)))) FROM v0, t2 WHERE (((CAST(x'' AS REAL))/(x'f194')));SELECT ALL CAST(((t1.c89) NOTNULL) AS REAL) FROM vt0, t1, v0 LIMIT 1314802125 OFFSET 1156447357; -- 1ms;
SELECT ALL AVG(((t2.c2)LIKE(t2.c2))) FROM vt0, t1, v0 WHERE ((((0.5835999022773343, ((x'8fe6') NOTNULL), (-1264229538 IN ('-1500355252', 0.011752249493009015))))<>((LTRIM('', x''), (('綬.')==('1840071247')), UNLIKELY(0.7571300732331527)))));SELECT ((AVG(t1.c89))<<((~ (t1.c89)))) FROM t2 WHERE (SQLITE_VERSION());SELECT ((CAST(')ﳆi%z now/' AS NUMERIC))<((~ (x'0e20')))) FROM t1, v0 WHERE (LIKELY(CASE NULL  WHEN 2034486200 THEN 0.22704719714729726 END)); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 COLLATE NOCASE THEN '-1560852688' ELSE (~ (v0.c0)) END, ((v0.c0 COLLATE NOCASE) NOT BETWEEN (MIN(v0.c0)) AND (((t1.c43) BETWEEN (vt0.c0) AND (vt0.c0)))), (~ (((t2.c0)IS(t2.c0)))), NULL, (((((((((- (x'')))OR(((vt0.c0)<=('773568623')))))OR(((t1.c89) BETWEEN (t2.c2) AND (t2.c0)))))AND((- ('')))))AND(((t1.c89) NOT BETWEEN (t2.c0) AND (t2.c50)))) FROM t1, vt0, t2, v0 WHERE ((((~ ('O_lABak')))<=((x'' IN (0.27863079618284825))))); -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE NOCASE)IS(t1.c43 COLLATE RTRIM)) FROM v0 WHERE (((((((0.7334188111537432)OR(x'41fb')))AND(x'1804'))) BETWEEN ((691804566 IN ())) AND (CASE ',F#yu89'  WHEN x'2193' THEN 0.6062999708939386 END)));SELECT DISTINCT LEAD((- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, '1539476650', vt0.c0))))), (~ (CAST(vt0.c0 AS NUMERIC))), (vt0.c0 IN ()) COLLATE NOCASE) OVER (), ((t2.c50) IS TRUE), MAX(((((((((t2.c0)AND(t2.c50)))AND(t2.c50)))AND(t2.c50)))AND(t2.c0))) FROM vt0;SELECT ALL CASE vt0.c0  WHEN ((t1.c43)/(t2.c2)) THEN ((t2.c2)>>(t2.c2)) END FROM t2, vt0, v0 WHERE ((((('0.8664313644638414') BETWEEN (NULL) AND ('G%'))) BETWEEN (((0.3958400615418004) BETWEEN ('312204589') AND (NULL))) AND (x'f7fc')));SELECT DISTINCT ((NULL) BETWEEN (COUNT(t2.c0)) AND (GLOB(t2.c50, t1.c43))) FROM v0, t1, vt0;SELECT ALL CAST((((t1.c43)) BETWEEN ((t2.c50)) AND ((t2.c0))) AS INTEGER) FROM t1, v0, t2 GROUP BY (NOT (((NULL)&(v0.c0)))) HAVING (NOT ((- (t2.c0)))); -- 0ms;
SELECT ALL NTH_VALUE(CAST(v0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM, CAST(((t1.c89)+(t1.c43)) AS TEXT)) OVER () FROM t1, v0, vt0; -- 0ms;
SELECT CASE WHEN ((t2.c0)OR(t2.c50)) THEN (((v0.c0, t2.c50, t2.c50))==((t2.c2, t2.c2, t2.c50))) END FROM v0, vt0;SELECT ALL (~ (((t1.c89)*(x'')))), (((((NULL)OR(t1.c89))))<((ABS(vt0.c0)))), ((((v0.c0)OR(v0.c0)))AND(t2.c0)) COLLATE BINARY FROM t1, t2;SELECT DISTINCT MIN(((vt0.c0) BETWEEN (t1.c43) AND (t1.c43))) FROM vt0 WHERE (CASE WHEN (+ (0.3085634079504166)) THEN (((-62787357, '-1603629848', '-33149554'))<=(('-97396281', x'4dea', NULL))) ELSE ((x'') IS TRUE) END);SELECT ALL LEAD(NULL COLLATE NOCASE, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(vt0.c0)), (((((vt0.c0 IN ()))AND(((vt0.c0) IS FALSE))))OR(vt0.c0 COLLATE NOCASE))) OVER () FROM vt0 WHERE ((((NULL IN ())) NOT BETWEEN (x'' COLLATE RTRIM) AND (((x'') IS FALSE)))) LIMIT -653068713; -- 1ms;
SELECT DISTINCT (((((v0.c0))>((t2.c0)))) IS FALSE) FROM v0, t2, t1, vt0 WHERE (((x'' COLLATE RTRIM) NOT BETWEEN (((']?')|('v뱇'))) AND ('-33149554'))); -- 0ms;
SELECT ((v0.c0) IS FALSE) COLLATE NOCASE FROM vt0, v0, t1, t2 WHERE (((CAST(x'' AS TEXT))<<((~ ('73_S'))))) GROUP BY ((x'9e9b') NOT NULL); -- 0ms;
SELECT TYPEOF(DISTINCT ((t2.c2)GLOB(t2.c0))) FROM vt0, t1 WHERE (((((0.10497972590478222) BETWEEN ('656713918') AND ('2027964962'))) NOT BETWEEN ('-1500355252') AND (((0xffffffffa6622fbf)%(NULL)))));SELECT ((CHANGES())LIKE((((t1.c43))==(('}l'))))) FROM t2, v0;SELECT ALL (- (((t2.c50) NOT BETWEEN (t1.c89) AND (t2.c50)))) FROM t2, v0 WHERE ((((((NULL) BETWEEN (NULL) AND (NULL)), (~ ('')), ((NULL)>=('-1414320744'))))>=(((('0.19553798125611066')<<('F]/ dH')), ((NULL) NOTNULL), ((x'')/('#].')))))) ORDER BY CASE ((NULL)<=(t1.c89))  WHEN CASE WHEN '[MP' THEN 0.5662632018395157 WHEN t2.c50 THEN 0Xffffffffe6ce93b2 WHEN t2.c0 THEN t2.c0 ELSE t2.c2 END THEN ((t2.c0) IS TRUE) WHEN (((t2.c2, t2.c0, t2.c0)) NOT BETWEEN ((v0.c0, t2.c50, t1.c43)) AND (('1283658447', -810008024, vt0.c0))) THEN t2.c50 WHEN CAST(t1.c43 AS TEXT) THEN CHANGES() WHEN vt0.c0 COLLATE BINARY THEN (v0.c0 IN (t2.c2, v0.c0)) WHEN CASE WHEN x'' THEN 0.08786202421155276 ELSE t1.c89 END THEN ((v0.c0) NOTNULL) END  NULLS FIRST, (- (CASE WHEN v0.c0 THEN t2.c2 ELSE t2.c0 END))  NULLS LAST;SELECT ((t2.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY, t1.c89, ROW_NUMBER() OVER () FROM v0, t1, t2 WHERE ('0.7749313545490949');SELECT DISTINCT NULL FROM t1 WHERE (((((2027964962)) BETWEEN ((0.2884237733038785)) AND ((''))) IN ())); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT NULL), ((((v0.c0) NOT BETWEEN (t2.c50) AND (x'5e88'))) NOT BETWEEN (MIN(t2.c2)) AND (((t2.c0) NOT BETWEEN (0.7002052472170277) AND (t2.c50)))), t1.c43, (+ (((t1.c89)||(vt0.c0)))), ((((x'') ISNULL))IS(((t2.c50) NOTNULL))) FROM t1, v0, vt0, t2; -- 0ms;
SELECT DISTINCT t1.c89 FROM vt0, t2, t1 ORDER BY ((((v0.c0)IS NOT(t2.c2)))IS(vt0.c0)) ASC  NULLS FIRST LIMIT -18427587;SELECT 7.136393970539334E-4, (((t1.c89 COLLATE BINARY))>=((CAST(t2.c0 AS TEXT)))), MAX(((vt0.c0)+(t2.c0))) FROM t2;SELECT DISTINCT ((0xffffffffaa487cb6)IS NOT(((NULL) NOT NULL))), vt0.c0, ((((t2.c0)<(t2.c2))) NOT BETWEEN (((t1.c43) BETWEEN (0.556159188597064) AND (t2.c2))) AND (v0.c0)) FROM vt0 WHERE ((+ ((NULL IN (NULL))))) ORDER BY CAST(LIKELIHOOD(DISTINCT t2.c0, 0.44295196980630036) AS BLOB) ASC  NULLS FIRST;SELECT ALL AVG(t2.c2) COLLATE RTRIM, AVG((+ (t1.c43))) OVER (), (((t1.c89)>(v0.c0)) IN ()) FROM t1, v0, vt0 LIMIT -1500355252;SELECT 0xffffffffa1fc5e62 FROM t1, t2; -- 0ms;
SELECT DISTINCT CAST(((t2.c2)>(vt0.c0)) AS REAL) FROM v0;SELECT DISTINCT ((((t2.c50)<=(t2.c2))) NOT BETWEEN ('1e500') AND ((v0.c0 IN (v0.c0)))), CASE vt0.c0  WHEN t2.c2 THEN t2.c0 ELSE v0.c0 END COLLATE BINARY, ((CASE WHEN vt0.c0 THEN t1.c89 END) IS TRUE) FROM t2, vt0 WHERE (CAST(((NULL)AND('&W5*')) AS NUMERIC));SELECT ALL (((t2.c2 IN ()))IS(CASE WHEN t2.c2 THEN vt0.c0 WHEN t2.c0 THEN t2.c50 WHEN t1.c89 THEN t2.c50 ELSE t2.c50 END)), CASE WHEN ((t1.c43) IS TRUE) THEN (- (vt0.c0)) ELSE (((t1.c43)) NOT BETWEEN ((t1.c43)) AND ((x''))) END, (- ((- (vt0.c0)))) FROM t1, vt0, t2, v0 WHERE ((((x'96f0', -1.8427587E7, 0.8019098049204024)) NOT BETWEEN (((('&NWr&^H1') IS TRUE), NULL COLLATE RTRIM, json_object('', '-837516371', 1539476650, 'yF# 1?jb', 0.5698632569335372, 231999167))) AND ((((x'')&(0.9282509559956331)), CASE NULL  WHEN x'' THEN '' ELSE '' END, CASE x'6137'  WHEN NULL THEN 'Z|' END)))); -- 0ms;
SELECT ALL ((((((((t1.c43)OR(t2.c50)))OR(t2.c0)))AND(t2.c50)))AND(vt0.c0)) COLLATE BINARY FROM vt0, t1, v0, t2 WHERE ((((0Xfffffffffdceec33, NULL, x'fa52')) BETWEEN (((((('s5')OR(0.5835999022773343)))OR(x'')), x'' COLLATE BINARY, (('Nj')GLOB(0.9221604921373976)))) AND ((COALESCE(DISTINCT '0.6062999708939386', 0.6032695735860836), load_extension(1.388981832E9, x''), ((0xfffffffffba7ff68) NOT BETWEEN ('1!1kI渏pঐ') AND (0.30874756392680003)))))); -- 0ms;
SELECT DISTINCT (v0.c0 COLLATE RTRIM IN ()), ((((((((((((((t2.c0)<<(t2.c2)))OR(COUNT(t2.c50))))AND(((((((((t1.c89)OR(t2.c2)))OR(t2.c2)))AND(t1.c89)))AND(v0.c0)))))AND(t2.c2 COLLATE BINARY)))OR(CASE v0.c0  WHEN NULL THEN t2.c0 END)))OR((((v0.c0, NULL, t2.c2, t2.c2, t2.c2))<=((x'', t2.c0, t2.c0, t2.c2, t2.c50))))))OR(((t1.c89)IS(t2.c50)))), MAX((((t2.c50))<=((t1.c89)))) FROM vt0, v0;SELECT ALL (((((((('2077780087')OR(((((vt0.c0)OR(t2.c0)))OR(t2.c50)))))AND(CAST(t1.c43 AS NUMERIC))))AND(t2.c50)))AND((('1283658447') NOT BETWEEN (t2.c0) AND (t2.c50)))) FROM v0, vt0, t2, t1; -- 0ms;
SELECT DISTINCT ((((t2.c50)!=(0.6548718998440339))) IS TRUE) FROM t1, t2, v0, vt0 WHERE (((0.9221604921373976) NOT BETWEEN (LOWER(x'')) AND ((NOT (NULL))))); -- 0ms;
SELECT DISTINCT (((v0.c0 IN ()))LIKE(AVG(t2.c50))) FROM t2, vt0, t1 GROUP BY t2.c0 HAVING COALESCE(DISTINCT ((t1.c89)<>(v0.c0)), (v0.c0 IN ()));SELECT DISTINCT (CASE WHEN t2.c0 THEN 0.9188849670907805 ELSE t2.c2 END IN ()) FROM t2, v0, t1 WHERE (COALESCE(CAST('-98925758' AS TEXT), (~ (x'1f73')))) UNION SELECT DISTINCT CAST(NULL AS BLOB) FROM vt0, t1, t2; -- 1ms;
SELECT DISTINCT (((~ (t2.c0)))%(CASE v0.c0  WHEN t2.c50 THEN v0.c0 WHEN t2.c0 THEN x'' WHEN t1.c43 THEN NULL END)), COUNT((NULL IN (t2.c2, t2.c2))) OVER (), (t1.c89 IN ()) COLLATE NOCASE FROM vt0, t2, v0 WHERE (CASE ('729472680' IN ())  WHEN CASE WHEN '' THEN -8.03580501E8 WHEN NULL THEN NULL WHEN 0.5269590663870707 THEN '-308071363' ELSE 0.9782204095271579 END THEN CASE -1713833123  WHEN x'' THEN x'' WHEN '-218816300' THEN 0Xffffffffc71e6e25 WHEN '' THEN x'8e21' ELSE x'' END END);SELECT DISTINCT ((('47489111')) NOT BETWEEN ((t2.c2)) AND ((SUBSTR(t1.c43, NULL)))) FROM vt0, v0, t1, t2; -- 0ms;
SELECT DISTINCT '\rBxTs 8&\' FROM t2 NOT INDEXED, vt0, v0, t1; -- 0ms;
SELECT DISTINCT ((MAX(t2.c0)) BETWEEN (CAST(t2.c50 AS TEXT)) AND (SUM(t2.c0))) FROM t2, t1; -- 0ms;
SELECT ALL ((NULL)<>(v0.c0 COLLATE RTRIM)) FROM t2, v0, vt0; -- 0ms;
SELECT DISTINCT (((MAX(vt0.c0)))==((((t1.c43)-(v0.c0))))) FROM t1, vt0 WHERE (CAST((((((((((((('1854391333')OR(NULL)))AND('UT')))AND(0.2017087094021578)))AND(NULL)))OR(0x43d83c79)))OR(0.9031906297160501)) AS TEXT));SELECT ALL ABS(CAST(vt0.c0 AS REAL)) FROM t1, t2 WHERE (NULL);SELECT CASE json_array(t1.c43, t2.c2)  WHEN (t1.c89 IN ()) THEN '7.136393970539334E-4' END FROM v0, t2 INDEXED BY i50 WHERE (((((((((x'')OR(0.6042803083973568)))OR('352632609')))AND('')))OR('zs~]')) COLLATE RTRIM);SELECT DISTINCT CAST(((t2.c50)*(0.5662632018395157)) AS NUMERIC), CAST(CASE t2.c50  WHEN t1.c43 THEN t2.c50 ELSE vt0.c0 END AS INTEGER), COUNT(NULL) FROM v0, t1, vt0;SELECT DISTINCT UPPER(DISTINCT ((t1.c43)|(t2.c2))) FROM t1, vt0, t2 GROUP BY ((NULL) IS TRUE) HAVING CAST((((t2.c2))<=(('691804566'))) AS REAL); -- 0ms;
SELECT TRIM(((vt0.c0) ISNULL)), COUNT(CASE WHEN t1.c43 THEN v0.c0 WHEN t2.c50 THEN t2.c2 WHEN vt0.c0 THEN t2.c50 END), v0.c0 FROM t2, t1 WHERE (((((CAST(x'' AS BLOB))OR(((4.95925815E8) NOT BETWEEN (0.00417609720455836) AND ('1549186453')))))AND(((-282555048)>('U1U')))));SELECT CAST(t2.c0 COLLATE BINARY AS NUMERIC), t2.c0, (NOT (t2.c0)) COLLATE BINARY FROM t2, v0, t1, vt0; -- 0ms;
SELECT DISTINCT TOTAL(-653068713) OVER () FROM v0, vt0, t2 WHERE (((((0.31550183202838855) NOT BETWEEN (x'08a8') AND ('97761799'))) ISNULL)); -- 0ms;
SELECT DISTINCT MIN((t1.c89 IN ())) FROM t2, v0; -- 0ms;
SELECT DISTINCT CASE load_extension(t1.c89, t2.c0)  WHEN COALESCE(t1.c89, t2.c50, t2.c2, t1.c89, t2.c2, vt0.c0) THEN ((v0.c0)GLOB(t2.c2)) WHEN ((((v0.c0)AND(t1.c43)))AND(t2.c0)) THEN json_array_length(t1.c43) WHEN ((((t2.c0)OR(t1.c43)))OR('1914538705')) THEN t1.c89 COLLATE BINARY ELSE (((t1.c43))<((t2.c0))) END FROM t2 WHERE (((('-1438090058' COLLATE RTRIM))<=(('eg<RV.' COLLATE NOCASE)))) ORDER BY (((t2.c2, t1.c43, vt0.c0))>=((x'cd2d', 0.8580356205180846, t2.c0))) COLLATE BINARY ASC  NULLS LAST, CASE vt0.c0  WHEN t1.c43 THEN t2.c50 WHEN v0.c0 THEN vt0.c0 WHEN t1.c89 THEN t1.c43 ELSE t2.c2 END COLLATE BINARY DESC  NULLS FIRST LIMIT -862104013 OFFSET -1742715510;SELECT DISTINCT 'm,e\nE' FROM t1, t2, v0, vt0; -- 0ms;
SELECT RANK() OVER ( RANGE (t2.c0 IN ()) COLLATE RTRIM PRECEDING EXCLUDE GROUP), CASE WHEN (((t1.c43)) BETWEEN ((t2.c2)) AND ((t1.c43))) THEN ((t1.c89) BETWEEN (t2.c0) AND (t2.c50)) END, ((((((t2.c0) IS TRUE))OR(COUNT(*))))OR(CAST(t2.c0 AS BLOB))) FROM v0, t2, t1 WHERE ((((x'') ISNULL) IN ((NULL IN (x'4944')))));SELECT DISTINCT '', PERCENT_RANK() OVER (), TOTAL(((((t1.c89)OR(t2.c50)))AND(v0.c0))) OVER () FROM t1 WHERE (LIKELY((~ (0.07739586468350079))));SELECT DISTINCT ((HEX(DISTINCT t2.c2)) NOT BETWEEN (((t2.c2) BETWEEN (t1.c89) AND (t1.c43))) AND (t2.c2)) FROM vt0, t2, t1, v0; -- 1ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((AVG(t2.c50))) AND ((TRIM(DISTINCT t2.c2, t1.c43)))), SUM((((t1.c43, t1.c43, t1.c43))==((t2.c0, t2.c0, t2.c50)))), (- (((t1.c89)LIKE(v0.c0)))) FROM v0, t2, vt0 WHERE (((x'' COLLATE RTRIM) NOT NULL));SELECT DISTINCT t1.c89 COLLATE RTRIM FROM t1; -- 0ms;
SELECT DISTINCT (NOT ((t2.c50 IN ()))), (NOT (((t1.c89) ISNULL))), ((((JULIANDAY(t1.c89, vt0.c0, t1.c89, t1.c43, t2.c0))OR(t1.c89)))AND(((((((((v0.c0)AND(t2.c50)))AND(v0.c0)))OR(t1.c89)))AND(vt0.c0)))) FROM t2 LIMIT -483522722 OFFSET -1438090058;SELECT DISTINCT ((CAST(t2.c0 AS INTEGER))|(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t1.c89 THEN t2.c50 ELSE t1.c89 END)) FROM vt0, t1;SELECT PERCENT_RANK() OVER () FROM t1, v0, vt0 WHERE (((NULL)IS NOT(x'')) COLLATE BINARY); -- 0ms;
SELECT ALL t2.c2 FROM t1, vt0, t2, v0; -- 1ms;
SELECT DISTINCT ((((((v0.c0)AND(v0.c0)))AND(t2.c0)))*(((((v0.c0)OR(vt0.c0)))AND(t2.c0)))) FROM t2, vt0, v0, t1; -- 0ms;
SELECT DISTINCT ((t2.c2)>(TOTAL(t2.c50))), LEAD(((((((vt0.c0)OR(vt0.c0)))OR(t2.c0))) NOTNULL), ((vt0.c0)>>(x'')), CASE WHEN CAST(t2.c0 AS NUMERIC) THEN CASE t2.c2  WHEN x'3577' THEN t2.c50 ELSE t2.c0 END END) OVER (), ((((((((((t2.c50) NOT BETWEEN (-2.011776583E9) AND (v0.c0)))AND((('0.011752249493009015')GLOB(t2.c0)))))AND(LIKE(v0.c0, t2.c50, '-'))))AND(((((((((t2.c2)AND(t2.c0)))AND(t2.c0)))OR(vt0.c0)))AND(v0.c0)))))OR(CASE t1.c89  WHEN t2.c0 THEN t1.c43 WHEN t2.c2 THEN t2.c0 WHEN vt0.c0 THEN t1.c43 END)) FROM t2, vt0 WHERE (((CAST(0.2884237733038785 AS INTEGER)) BETWEEN ((('-308071363') NOT BETWEEN (x'6fab') AND (NULL))) AND (('1774348979' IN ())))) GROUP BY -1043491752 COLLATE BINARY, CAST(t1.c89 AS BLOB), (NOT (((((t2.c2)AND('')))AND(vt0.c0)))) HAVING (~ (CASE WHEN t1.c89 THEN t1.c43 ELSE t1.c43 END));SELECT DISTINCT ((((CASE WHEN t2.c50 THEN v0.c0 END)OR(((NULL) NOT BETWEEN (t1.c89) AND (t1.c43)))))OR(((t2.c2)>(x'')))), ((((t1.c43)-(t2.c2))) BETWEEN (CASE v0.c0  WHEN t2.c0 THEN t2.c2 ELSE t1.c43 END) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c89)))), (((t1.c89) NOTNULL) IN (((t2.c50)>>(vt0.c0)))), v0.c0, CASE ((((t2.c2)AND(vt0.c0)))AND(t2.c50))  WHEN (((t1.c89)) NOT BETWEEN ((t1.c43)) AND ((t2.c2))) THEN (((vt0.c0, t1.c43, t1.c43)) BETWEEN ((t2.c50, t2.c2, -1713833123)) AND ((t1.c89, -9.54307035E8, t1.c43))) END FROM vt0, v0, t2 WHERE ((((('729472680') ISNULL)) IS FALSE));SELECT CASE WHEN load_extension(t2.c50) THEN (NOT (0X2b727b53)) ELSE t2.c2 COLLATE BINARY END FROM vt0 WHERE (((((LOWER(DISTINCT NULL))OR(CAST(NULL AS TEXT))))OR(((((0x44b02d80)AND(NULL)))OR(x'abf6')))));SELECT DISTINCT t2.c2 FROM v0, t1 RIGHT OUTER JOIN t2 ON vt0.c0 COLLATE NOCASE;SELECT ALL COUNT(*) OVER () FROM t2, v0; -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT 7.136393970539334E-4, t2.c2))%(((t1.c89)&(t2.c2)))) FROM v0, vt0, t2, t1 WHERE (CAST(((2034486200)>('p+''dA\')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t2, v0 WHERE (((((NULL)+('K /^_yUP')))%(((4.7489111E7) ISNULL)))) ORDER BY ((t1.c89)LIKE(t1.c89)) COLLATE RTRIM DESC  NULLS LAST;SELECT ALL (((t2.c50)) NOT BETWEEN ((((0.19597053051614066) NOT BETWEEN (vt0.c0) AND (t1.c89)))) AND (((((vt0.c0))>=((v0.c0)))))) FROM vt0, t2;SELECT DISTINCT ((((((((((((((((t1.c89)AND(t1.c89)))AND('411557455')))OR(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(vt0.c0)))AND(v0.c0 COLLATE RTRIM)))AND(((t1.c43)GLOB(v0.c0)))) FROM t1, t2, vt0 WHERE ((+ ((NULL IN ()))));SELECT CAST((((t1.c89, t2.c50, t1.c43, t1.c43, v0.c0))=((t2.c2, t1.c89, t2.c2, vt0.c0, NULL))) AS INTEGER), (((((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))>((((t2.c2, t2.c2, vt0.c0))<((t2.c2, t2.c50, 3.00906408E8))))), (((t2.c50) BETWEEN (t2.c2) AND (t2.c50)) IN ()) FROM t2, t1, v0 ORDER BY (~ ((('2098996604')<=(t2.c0))));SELECT DISTINCT (t2.c50 IN (1.668725283E9)), ROW_NUMBER() OVER ( GROUPS  CURRENT ROW), 0.8967399086700518, (CAST(t2.c50 AS TEXT) IN ()), NTILE(((((t1.c89) NOTNULL)) NOT BETWEEN (((((t1.c43)AND(t1.c43)))OR(x'9e0a'))) AND (((t2.c50)&(t2.c0))))) OVER () FROM t1, v0, t2 GROUP BY ((((((((((NULL)OR(t1.c43)))OR(0X5c56b595)))OR(t2.c50)))OR(t1.c89))) IS FALSE), (((((t1.c89, '174603988', t1.c43))=((t2.c50, t1.c89, t1.c89)))) ISNULL), (((((v0.c0) IS TRUE)))<((((0.7435533195630419)||(v0.c0))))) HAVING -645460580; -- 1ms;
SELECT ALL NULL FROM vt0 WHERE ((('-1522564841') BETWEEN ((- (x'5f9a8a2e'))) AND (((((NULL)AND(0.09438715671592779)))AND('-1272190030'))))) ORDER BY json_array_length(((vt0.c0)IS(t2.c0))) ASC;SELECT v0.c0 FROM t2, v0, t1, vt0 LIMIT 1301153473; -- 0ms;
SELECT '0.6032695735860836', (((t1.c89)LIKE(t1.c89)) IN ()), (NOT ((- (t1.c43)))), CAST((~ (t2.c0)) AS BLOB), AVG(CAST(t2.c0 AS INTEGER)) OVER ( PARTITION BY ((CAST(vt0.c0 AS BLOB))<<(((t2.c0) NOT NULL))), COALESCE(DISTINCT ((((((((t2.c2)OR(v0.c0)))OR(t1.c89)))AND(t2.c2)))OR(t2.c0)), CAST(t1.c43 AS NUMERIC)) ORDER BY ((((t1.c89) BETWEEN (t2.c0) AND (t1.c43))) NOT BETWEEN ((~ (0.4474055726300028))) AND (CASE WHEN t2.c0 THEN t1.c43 ELSE v0.c0 END))) FROM t1, t2, vt0, v0; -- 0ms;
SELECT ALL SUM(((t1.c43)IS(t2.c0))) OVER () FROM t2, t1, vt0; -- 1ms;
SELECT ALL '47489111', t2.c50, ((CAST(t2.c2 AS REAL)) IS TRUE), ((((TRIM(t1.c43))OR(((t2.c50)OR(t1.c89)))))AND((NOT ('-86687422')))), (((((((('&W5*')AND(((t1.c43)<(t2.c50)))))OR(((vt0.c0) BETWEEN (t1.c43) AND (v0.c0)))))OR(t2.c0)))AND(((vt0.c0) NOT NULL))) FROM vt0 WHERE ('f[XoV/');SELECT DISTINCT ((((((NULL)OR(t2.c0)))AND(v0.c0))) NOTNULL) FROM v0, t1;SELECT ALL TYPEOF(DISTINCT CASE WHEN v0.c0 THEN t2.c0 END) FROM t2 LEFT OUTER JOIN t1 ON (((t2.c50 IN (t1.c89))) BETWEEN (((t1.c43) ISNULL)) AND ((v0.c0 IN ()))) GROUP BY CAST(((NULL) NOT BETWEEN (t1.c43) AND (t1.c89)) AS TEXT) HAVING vt0.c0;SELECT DISTINCT CASE WHEN (t1.c43 IN ('457369379')) THEN (1318609893 IN (t1.c43)) END FROM vt0, v0, t1; -- 0ms;
SELECT DISTINCT ((((t1.c43) BETWEEN (t1.c43) AND (t2.c2))) BETWEEN ((v0.c0 IN (t2.c50))) AND ((t2.c50 IN ()))) FROM v0, t2, t1, vt0; -- 0ms;
SELECT DISTINCT ((((t2.c0) ISNULL))>(((NULL) NOT BETWEEN (t1.c43) AND (t2.c50)))), (((t1.c43)) NOT BETWEEN ((t2.c50)) AND ((v0.c0))) COLLATE RTRIM, ((((json_object(t2.c0, vt0.c0))OR(v0.c0)))OR(((vt0.c0)AND(t2.c50)))), CASE (+ (0xfffffffff0dcb3bb))  WHEN 'trJXFGm' THEN CASE WHEN t2.c0 THEN t1.c89 WHEN vt0.c0 THEN t1.c43 WHEN t2.c0 THEN vt0.c0 END END, json_remove((((t2.c2)) NOT BETWEEN ((t2.c50)) AND ((t1.c89))), ((vt0.c0)/(t2.c2))) FROM v0 WHERE (ABS(CASE ''  WHEN x'' THEN -1486213820 END)) LIMIT -371937179;SELECT DISTINCT json_object((('2059936834')||(v0.c0)), CAST(t2.c50 AS TEXT), (~ (t1.c43)), v0.c0) FROM v0, t2, vt0, t1 WHERE (((-1.229065105E9 COLLATE BINARY)>>(CAST('300906408' AS NUMERIC)))) GROUP BY CASE ((t1.c43)||(t1.c89))  WHEN CASE t2.c50  WHEN t2.c50 THEN t1.c43 END THEN ((t2.c50)OR(t2.c50)) END; -- 0ms;
SELECT SUM(t1.c43) OVER ( ROWS BETWEEN (((t1.c43)>>(t2.c0)) IN ()) PRECEDING AND (LIKELY(t1.c89) IN (CAST(t2.c50 AS TEXT), GLOB(v0.c0, t2.c2))) PRECEDING) FROM t1, vt0 ORDER BY ((((((t2.c50) NOT BETWEEN (v0.c0) AND (t2.c0)))OR(((vt0.c0) IS TRUE))))OR((NOT (vt0.c0)))) DESC, (~ (((((t2.c2)AND(t2.c2)))AND(t1.c89)))) DESC  NULLS LAST;SELECT DISTINCT FIRST_VALUE(((t1.c89 COLLATE NOCASE)<(LIKE(t1.c43, t1.c43)))) OVER () FROM t1, vt0; -- 0ms;
SELECT DISTINCT TOTAL(t2.c50) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP), (((COUNT(t1.c89), (('') ISNULL), ((((((((v0.c0)OR(t2.c0)))AND('0.7002052472170277')))OR(v0.c0)))AND(vt0.c0))))=((t2.c0 COLLATE NOCASE, t2.c0, COUNT(*)))), ((((v0.c0)>=(t2.c2))) NOT BETWEEN (((t1.c89)<=(t2.c0))) AND ((~ (t2.c0)))) FROM t2, t1, vt0, v0 WHERE ((((((('') BETWEEN (x'') AND ('fQOs')))OR(CAST(NULL AS REAL))))OR(SQLITE_COMPILEOPTION_GET(NULL)))); -- 0ms;
SELECT DISTINCT ((((((t1.c43) NOTNULL))AND('-680944074')))OR(TRIM(v0.c0, v0.c0))) FROM v0, t2, vt0, t1; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT (- (0.6802202650532745)), 0.5529481674592355) FROM vt0 WHERE (CAST(CAST('-1685347051' AS NUMERIC) AS BLOB)); -- 0ms;
SELECT ALL NTH_VALUE('0.07739586468350079', t1.c89) OVER () FROM t1, vt0, v0, t2 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((t2.c50, '', t2.c0)) NOT BETWEEN ((v0.c0, (v0.c0 IN (t1.c89)), '-578476310')) AND (((((t2.c2)) NOT BETWEEN ((vt0.c0)) AND ((t2.c50))), CAST(t2.c0 AS REAL), (((t2.c0, t1.c89, '-I'))<>((t1.c43, vt0.c0, t1.c43)))))) FROM vt0, t1, v0, t2 WHERE (((((((x'')AND(x'f165')))OR(x''))) NOT BETWEEN (((x'') NOT BETWEEN (x'95c7ce55') AND ('-308071363'))) AND ((((x'')) NOT BETWEEN (('')) AND (('0.8580356205180846')))))) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c43) AND (t2.c0))) NOT NULL), (((1211685967 IN ()))IS NOT(((t1.c43)IS(v0.c0)))), CASE WHEN (t1.c43 IN ()) THEN ((t1.c43)*(v0.c0)) WHEN json(t2.c2) THEN ((t1.c43) ISNULL) WHEN ((t1.c43) IS TRUE) THEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE x'' END  NULLS FIRST; -- 1ms;
SELECT ALL t1.c43 FROM t1; -- 0ms;
SELECT (~ (((x'') BETWEEN (v0.c0) AND (t1.c43)))) FROM vt0, v0, t1, t2 WHERE (CAST(((NULL)/(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT ((((t2.c50)%(vt0.c0))) IS TRUE) FROM vt0 ORDER BY ((TRIM(vt0.c0))!=(t1.c89))  NULLS LAST, 0x681a2b4c DESC  NULLS LAST;SELECT (((((vt0.c0)OR(NULL)))AND(t1.c43)) IN ((+ (vt0.c0)), ((NULL)*(t2.c2)), ((((((((t1.c89)OR(v0.c0)))AND(t1.c43)))AND(vt0.c0)))OR(t2.c2)))) FROM t2 WHERE ((CASE x''  WHEN 0.8456993277917367 THEN '*[cy' WHEN 0Xfffffffff2f520d4 THEN NULL WHEN 0.6345376554111228 THEN 0.831207120705824 ELSE x'' END IN ())) LIMIT 1654891145;SELECT ALL FIRST_VALUE(CASE WHEN ((t1.c43) NOT BETWEEN (t1.c43) AND (t1.c89)) THEN t1.c89 END) OVER ( RANGE  UNBOUNDED PRECEDING), SUM(MAX(((vt0.c0)>>(t2.c2)))), ((MIN(t1.c43))<=(((t2.c50)=(t2.c2)))) FROM v0, t1, vt0;SELECT DISTINCT FIRST_VALUE(((vt0.c0 COLLATE RTRIM) IS FALSE)) OVER () FROM v0, t1, vt0; -- 1ms;
SELECT DISTINCT CASE WHEN ((t2.c2) NOTNULL) THEN ((v0.c0) BETWEEN (t2.c0) AND (t2.c0)) WHEN UPPER(DISTINCT t2.c2) THEN CAST(vt0.c0 AS TEXT) WHEN CAST(t1.c43 AS INTEGER) THEN ((t1.c89)IS NOT(t1.c89)) ELSE (((v0.c0, x'', v0.c0)) BETWEEN (('1364776862', vt0.c0, v0.c0)) AND ((t2.c50, t2.c0, t1.c89))) END, (((t2.c2 IN (''))) NOT NULL), (~ (((v0.c0) NOT NULL))) FROM t1, vt0 WHERE ((NOT ('')) COLLATE NOCASE);SELECT ALL 0.5153204366838618 FROM t2; -- 0ms;
SELECT DISTINCT json_array(IFNULL(t2.c2, t2.c50), NULLIF(t1.c89, vt0.c0)) FROM v0, t2, t1, vt0; -- 0ms;
SELECT '-746400681' FROM vt0, t2, v0 WHERE (CAST((((((((('133259914')OR(NULL)))AND(NULL)))AND('C\n')))AND(NULL)) AS INTEGER)); -- 0ms;
SELECT DISTINCT TRIM(((v0.c0)!=(t2.c50))) FROM vt0, t1 WHERE (CAST(CAST(x'' AS BLOB) AS INTEGER));SELECT DISTINCT SUM(((t2.c50)<>(t2.c2))) OVER () FROM t2, v0, t1; -- 0ms;
SELECT ALL t2.c50 FROM v0 GROUP BY t2.c2, 0.284522437654505, TIME(x'00e1b857', ((v0.c0) NOTNULL), ((((t1.c89)AND(t2.c50)))OR(vt0.c0)), (((((((('-1687319030')AND(NULL)))AND(t2.c0)))OR(t2.c50)))OR(t1.c89)), json_object(vt0.c0, ')w樛\n', t1.c43, v0.c0)) HAVING ((((v0.c0) NOT BETWEEN (t2.c50) AND (t2.c2)))IS NOT(((t2.c50)||(t2.c0))));SELECT DISTINCT (((vt0.c0 COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (t2.c50) AND (t2.c50)), CASE WHEN t1.c89 THEN t2.c0 WHEN t1.c43 THEN t2.c50 WHEN t2.c50 THEN t2.c2 END))>((UPPER(t2.c50), (+ (t2.c2)), NULLIF(v0.c0, t1.c89)))) FROM v0;SELECT ALL (((v0.c0, t1.c43, v0.c0))=((t2.c50, t1.c43, vt0.c0))) COLLATE NOCASE, RANK() OVER (), CASE ((((0.456147778292154)OR(t2.c0)))OR(t2.c50))  WHEN (((t2.c50)) BETWEEN ((t2.c2)) AND ((t1.c89))) THEN vt0.c0 END, ((((t2.c0)LIKE(t2.c2)))OR(((t1.c43) ISNULL))), CAST(load_extension(t1.c43) AS INTEGER) FROM v0 INDEXED BY i50;SELECT MIN(x'60f5') FROM v0, t1, t2 WHERE (((0.39714848557093574) NOT NULL) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (t1.c43) AND (t2.c0)))>=(((((t1.c89)AND(v0.c0)))AND(t2.c0)))) FROM t1, v0, vt0 WHERE ((((('')<>(NULL))) IS TRUE)) GROUP BY ABS((('}')+(t1.c89))) HAVING CAST(((t1.c89) NOT BETWEEN (t1.c89) AND (vt0.c0)) AS REAL);SELECT DISTINCT ((((((((((vt0.c0)OR(v0.c0)))OR(t1.c89)))AND(vt0.c0)))OR(NULL)))+(CASE t2.c50  WHEN v0.c0 THEN t2.c50 ELSE t2.c0 END)) FROM t1, t2 RIGHT OUTER JOIN vt0 ON (- (CASE WHEN t2.c0 THEN vt0.c0 END)) LEFT OUTER JOIN v0 ON t2.c50 WHERE (((((((NULL)OR(0.5214118707189995)))OR(0.19553798125611066)))-((('1302060872')>('2034486200'))))) ORDER BY CAST(((t1.c89) NOTNULL) AS REAL) DESC  NULLS FIRST; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t1, v0, vt0 ORDER BY '' COLLATE BINARY ASC  NULLS LAST, x'' DESC  NULLS FIRST LIMIT -466930469 OFFSET -2058167442; -- 0ms;
SELECT DISTINCT (((t1.c89 IN ())) NOTNULL) FROM t1, v0, t2, vt0; -- 0ms;
SELECT DISTINCT (CASE WHEN t2.c2 THEN t2.c2 ELSE t2.c2 END IN ()) FROM v0 WHERE ((((~ (1301153473)))>=(((('-674315217')) BETWEEN ((x'')) AND ((']G/<PPN')))))) GROUP BY ((((t2.c50) NOT NULL))||(CASE WHEN t2.c0 THEN v0.c0 ELSE t2.c2 END));SELECT DISTINCT CAST((v0.c0 IN (t2.c2)) AS REAL) FROM v0;SELECT DISTINCT DENSE_RANK() OVER ( RANGE  UNBOUNDED PRECEDING) FROM t1 WHERE (CAST((('-1258362011')/(x'')) AS TEXT)); -- 0ms;
SELECT ALL (- (HEX(DISTINCT '-1632316795'))) FROM t1; -- 0ms;
SELECT ALL CASE WHEN ((t2.c0) BETWEEN (t2.c2) AND (t2.c0)) THEN CAST(t1.c89 AS BLOB) END FROM vt0;SELECT DISTINCT t1.c89, ((CASE t1.c89  WHEN t2.c0 THEN v0.c0 END)=((+ (t1.c43)))), x'' FROM v0 INDEXED BY i50;SELECT ALL v0.c0 FROM vt0, v0, t2, t1; -- 0ms;
SELECT DISTINCT TOTAL((((t2.c50)) BETWEEN ((t1.c43)) AND ((t1.c89)))), MIN(CAST(NULL AS REAL)), ((((CAST(v0.c0 AS REAL))OR(MAX(vt0.c0))))OR(COUNT(t1.c43))) FROM v0;SELECT ALL ((CAST(t1.c43 AS INTEGER)) BETWEEN (t2.c50) AND (((t2.c50)GLOB(t1.c43)))), SQLITE_COMPILEOPTION_USED(((('-1577296286'))>=((t2.c0)))), COUNT(AVG(CASE t2.c2  WHEN t1.c89 THEN t1.c43 END)) FROM t2, v0, vt0 WHERE (((CASE WHEN x'' THEN x'5a5c' ELSE x'' END) BETWEEN ((((('-2032923320')AND(NULL)))OR(NULL))) AND (UPPER(x''))));SELECT ALL (((((((((v0.c0)OR(t1.c89)))OR(t2.c2)))OR(vt0.c0)))AND(t2.c50)) IN ()) FROM v0, vt0; -- 2ms;
SELECT DISTINCT NULL FROM v0, t2, t1, vt0; -- 0ms;
SELECT DISTINCT ((((t2.c50) NOT NULL)) IS TRUE) FROM v0;SELECT DISTINCT DATE(((v0.c0) ISNULL), ((t2.c2) NOT BETWEEN (t1.c43) AND (t2.c2)), ((t2.c2)>(t2.c0))), ((LOWER(t1.c43))||(((t1.c43) NOT NULL))), ((((v0.c0) BETWEEN (t1.c43) AND (v0.c0)))|(CASE WHEN t2.c0 THEN vt0.c0 WHEN t2.c0 THEN v0.c0 WHEN vt0.c0 THEN t2.c50 WHEN t2.c0 THEN v0.c0 WHEN t2.c0 THEN t2.c2 END)) FROM t1, t2 WHERE (('-1995702971' IN ()));SELECT ALL (- (v0.c0)) COLLATE BINARY, (((-1048397419))>((((t2.c50) NOT NULL)))), (t1.c89 IN ()) FROM t1, vt0, t2, v0 WHERE (CASE WHEN (('')LIKE('')) THEN (- (NULL)) END); -- 0ms;
SELECT DISTINCT (((t1.c43 IN ()))<<((t1.c43 IN ()))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT CAST(CASE t2.c50  WHEN t2.c2 THEN t2.c2 END AS TEXT) FROM t2 WHERE (x'cdfe7270'); -- 0ms;
SELECT ALL CASE CAST(t2.c50 AS NUMERIC)  WHEN ((t2.c2) BETWEEN (vt0.c0) AND (t2.c50)) THEN ((vt0.c0)GLOB(v0.c0)) ELSE ((t2.c50)<>(t2.c0)) END, (((- (t2.c0))) IS FALSE), ((((t2.c0) NOTNULL))OR(CAST(v0.c0 AS NUMERIC))) FROM v0, vt0, t1, t2 WHERE ((((('-2081226670') NOT BETWEEN ('1230124741') AND (x'95bf')))|(CAST(' \reZ' AS NUMERIC)))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM t2 ORDER BY CASE WHEN GLOB(t2.c2, vt0.c0) THEN TYPEOF(v0.c0) ELSE (~ (NULL)) END  NULLS LAST, t1.c43  NULLS LAST LIMIT 1196534280;SELECT LAST_VALUE((((t2.c0) NOTNULL) IN ())) OVER () FROM t2, v0, t1 WHERE (CAST(NULL COLLATE NOCASE AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0)*(t2.c2)) END FROM t1, t2 WHERE ((((x'' IN ())) ISNULL)) LIMIT -1285024001 OFFSET 1392741675;SELECT NULLIF(DISTINCT SUM(t2.c2), (((t2.c50, t1.c43, 'ML#/z5'))<>((NULL, t1.c89, t2.c2)))) FROM v0, t2, vt0;SELECT ALL CAST(CASE WHEN t2.c2 THEN t2.c0 END AS BLOB) FROM v0 WHERE ((((x'' IN ()))GLOB(((NULL) IS TRUE))));SELECT ALL v0.c0 FROM v0; -- 0ms;
SELECT DISTINCT ((t1.c89) NOT BETWEEN ((- (t2.c0))) AND (NULL COLLATE NOCASE)) FROM t2;SELECT ((TOTAL(t2.c0))AND((((v0.c0))<=((t2.c0))))), (((t2.c2)) BETWEEN ((((-1500355252)IS NOT('416680336')))) AND ((((t1.c43) IS FALSE)))), CASE (t2.c0 IN (t2.c2, t2.c2))  WHEN COUNT(t2.c0) THEN RTRIM(t2.c0) WHEN ((t1.c89)IS(t1.c43)) THEN (NOT (v0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)IS NOT(t2.c50)) END FROM t2 WHERE ((((NULL) NOT BETWEEN (0.2318870367395578) AND (0X1ba25088)) IN (NULL COLLATE RTRIM, (((0X66962c34, '-1687319030', 0Xfffffffffdb63c43)) NOT BETWEEN ((NULL, '', 0x74ce3239)) AND ((x'42ea', NULL, -408917753)))))) LIMIT -547183992 OFFSET -33149554;SELECT ALL (((t1.c43)) BETWEEN (((v0.c0 IN ()))) AND ((((vt0.c0) BETWEEN (t2.c50) AND (t2.c0))))) FROM v0, t2 WHERE ('miz''') LIMIT -1055898604 OFFSET -1725139375;SELECT NTH_VALUE((~ (t2.c50)) COLLATE RTRIM, (vt0.c0 COLLATE BINARY IN ())) OVER () FROM t1, t2, vt0;SELECT ((v0.c0) NOT BETWEEN (x'') AND (t2.c0)) COLLATE NOCASE, (((((t2.c50)==(v0.c0))))>=((CAST(v0.c0 AS NUMERIC)))), CASE WHEN ((v0.c0) NOT BETWEEN (t2.c2) AND (t1.c43)) THEN CASE x''  WHEN v0.c0 THEN v0.c0 ELSE t1.c89 END ELSE 'xv퀬>(,\n샣' END FROM t2, vt0, t1, v0; -- 0ms;
SELECT DISTINCT MIN(-1264229538, vt0.c0) COLLATE NOCASE, ((LIKELIHOOD(t2.c0, 0.8677584340469335)) BETWEEN ((+ (t1.c89))) AND ((t2.c50 IN (vt0.c0, t1.c43)))), ((CAST(NULL AS NUMERIC)) NOT NULL) FROM v0, vt0, t1, t2 LIMIT -413913742 OFFSET 2027964962 UNION ALL SELECT DISTINCT LIKELIHOOD(v0.c0, 0.6936965155577837), 0.6920741516828652, ((CASE WHEN v0.c0 THEN vt0.c0 END)>(((t1.c43) NOT BETWEEN (t1.c43) AND ('-392783107')))) FROM vt0, t1, v0;SELECT DISTINCT (- ((((((((('}JwY')AND(v0.c0)))OR(t2.c50)))OR(t2.c0)))OR(t2.c50)))) FROM v0, t1 GROUP BY '312204589', ABS(((t2.c0)%(v0.c0))), ((((t2.c50) IS FALSE))>=(vt0.c0));SELECT ALL ((((((v0.c0)>>(t1.c43)))AND(CAST(t2.c50 AS NUMERIC))))OR(GROUP_CONCAT(t1.c43))), '-2032923320', (((t1.c43)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))OR(t1.c43)))) AND (((t1.c89 IN ())))) FROM t2, vt0 WHERE (0.36665653503112616);SELECT DISTINCT LAST_VALUE((((+ (v0.c0))) NOTNULL)) OVER (), CAST(((t1.c43) IS TRUE) AS BLOB), LAG(((((t2.c50) BETWEEN (t2.c0) AND (t2.c50)))-(((t2.c2) BETWEEN (t2.c0) AND (t2.c50)))), TYPEOF(DISTINCT json_object(t2.c0, v0.c0)), CAST(t2.c50 AS BLOB)) OVER () FROM v0, t2;SELECT DISTINCT (((NULL)) NOT BETWEEN ((CAST(t2.c50 AS REAL))) AND (((((t1.c89)) NOT BETWEEN ((t1.c89)) AND ((vt0.c0)))))), (- (TOTAL(t2.c0))), ((vt0.c0) NOT BETWEEN (t2.c50 COLLATE BINARY) AND (LTRIM(t2.c0))) FROM t2, v0, t1 WHERE (((1191780973) NOT NULL) COLLATE RTRIM);SELECT -6.2787357E7, COUNT(*) COLLATE RTRIM, ((((t2.c2)IS NOT(t1.c43))) ISNULL) FROM t2, v0;SELECT DISTINCT (GROUP_CONCAT(t2.c0) IN (((vt0.c0)AND(t1.c43)), ((t1.c43)-(0.6706659838113282)))) FROM t1, vt0 GROUP BY (((t2.c2, t2.c50, v0.c0)) NOT BETWEEN ((((((t2.c0)OR(v0.c0)))AND(t1.c89)), (v0.c0 IN ()), HEX(t1.c43))) AND (((t1.c89 IN (v0.c0)), (NOT ('')), t1.c89 COLLATE BINARY))) HAVING ((COALESCE(DISTINCT vt0.c0, vt0.c0, t1.c43, t2.c2))<(((t2.c2) ISNULL)));SELECT '0.20313557095200618' FROM v0, t1; -- 0ms;
SELECT DISTINCT ((((t1.c89) IS FALSE))>(((('\rBxTs 8&\')) NOT BETWEEN (('	n(\r*D&>B')) AND ((x'68ef'))))) FROM vt0, t1, t2, v0; -- 0ms;
SELECT DISTINCT json_insert(NULL, '-432447564', NULL) COLLATE RTRIM FROM t1 WHERE ((~ (x'')) COLLATE BINARY) ORDER BY ((SQLITE_SOURCE_ID()) IS FALSE)  NULLS LAST; -- 0ms;
SELECT ALL t2.c50, ((((t1.c89)/(t2.c0)))<=(CAST(vt0.c0 AS INTEGER))), CASE TOTAL(t1.c89)  WHEN ((v0.c0) BETWEEN (t2.c50) AND (vt0.c0)) THEN SUM(x'4552') WHEN ((t2.c0)%(t2.c0)) THEN UPPER(t1.c43) WHEN (((t1.c43)) NOT BETWEEN (('0.7028589782074351')) AND ((t1.c43))) THEN SUM(vt0.c0) ELSE ((t1.c89)-(vt0.c0)) END, t1.c43, CAST(LIKELIHOOD(t2.c50, 0.299023292179563) AS TEXT) FROM t2, t1, v0, vt0 WHERE ((((('773568623') IS TRUE)) NOTNULL)); -- 0ms;
SELECT DISTINCT (((t1.c89)) BETWEEN ((LOWER(DISTINCT t2.c0))) AND ((((t2.c2) ISNULL)))) FROM v0, vt0, t2, t1; -- 0ms;
SELECT (((((t2.c0))>((t2.c50))))>((vt0.c0 IN ()))) FROM v0, t1, t2, vt0; -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM t2 WHERE (((CASE WHEN 2101389246 THEN '-0.0' END) NOTNULL)); -- 0ms;
SELECT DISTINCT (((((t2.c50) ISNULL)))!=(((vt0.c0 IN ())))), ((t2.c2)<<(vt0.c0)) COLLATE RTRIM, CAST((('yf# 1?jb')LIKE(v0.c0)) AS TEXT) FROM vt0 WHERE (('1302060872' IN ()));SELECT DISTINCT LAG(((CASE t2.c0  WHEN t2.c50 THEN NULL WHEN t2.c0 THEN t2.c2 WHEN t2.c0 THEN t2.c0 ELSE t2.c50 END)||(t2.c0 COLLATE BINARY)), TRIM(((t2.c2) NOT NULL), t2.c50), (((t2.c2 IN ())) IS FALSE)) OVER () FROM t2; -- 1ms;
SELECT ((((t1.c89) NOT BETWEEN (t1.c89) AND (v0.c0)))&(STRFTIME(t1.c89, '', t1.c89))) FROM t1, vt0 WHERE (((((NULL)OR(-630237320)))AND(x'')) COLLATE NOCASE);SELECT ALL ((((((((((t2.c0) BETWEEN (t2.c50) AND ('')))AND(CAST(vt0.c0 AS INTEGER))))OR(t2.c50 COLLATE NOCASE)))AND(((t2.c2) BETWEEN (t2.c0) AND (t1.c43)))))OR('656713918')), CASE ((t1.c43) NOT NULL)  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)|(t2.c0)) END, ((287012507)==(((t2.c0)||(t2.c0)))) FROM t2 WHERE (((TIME(0.6345376554111228, x'', x''))IS NOT(((((((((0X37429a99)AND(1827944423)))AND(NULL)))OR(NULL)))AND('-959365925')))));SELECT ALL COUNT((((v0.c0))<((vt0.c0)))) FROM t1 LIMIT 1483415854 OFFSET -38627261;SELECT DISTINCT ((COUNT(*)) IS TRUE) FROM v0, t1 INDEXED BY i78, t2;SELECT DISTINCT ((CASE WHEN t2.c0 THEN '-65073697' END) IS TRUE) FROM t2, t1, vt0, v0 WHERE ((NOT (CAST('o\r^쇈b' AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((t1.c89, t2.c0, vt0.c0)) BETWEEN ((v0.c0, t1.c89, t2.c2)) AND ((v0.c0, t2.c50, vt0.c0))) COLLATE RTRIM FROM v0, t1 GROUP BY TRIM(DISTINCT (~ (t2.c0)), ((vt0.c0) IS FALSE)) HAVING ((GROUP_CONCAT(NULL))OR((((t2.c0))>((t1.c43))))) LIMIT -1209145668 OFFSET -1139051001;SELECT ALL v0.c0, t1.c89, 0.1884641722357897 FROM t1, vt0 WHERE ((NOT ((0.04649907182829227 IN ()))));SELECT ALL '' FROM t1, t2 WHERE (TRIM(DISTINCT 0.1884641722357897) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(CASE t2.c0  WHEN t1.c89 THEN t1.c43 ELSE t1.c89 END AS INTEGER) FROM t1, v0;SELECT ALL ((((((9.84941965E8)OR(t1.c43)))AND(0.274846068691615)))|(v0.c0 COLLATE NOCASE)) FROM v0, vt0, t2, t1 WHERE (CAST(((x'') NOT BETWEEN (-151693231) AND ('f[XoV/')) AS BLOB)); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((t2.c0) NOTNULL), (~ (vt0.c0))) FROM v0;SELECT DISTINCT TOTAL(CAST(t2.c0 AS TEXT)) OVER (), ((((vt0.c0) BETWEEN (t1.c43) AND (NULL)))%(1273489256)), (((t2.c0)) BETWEEN ((TYPEOF(DISTINCT t1.c89))) AND ((((t2.c0) NOT BETWEEN (t1.c43) AND (x'34f62d9c47e0'))))) FROM v0, t1 LIMIT -1645439974 OFFSET 915614664;SELECT DISTINCT NULL FROM t1, v0, vt0, t2 GROUP BY (+ (v0.c0)), CAST((((t2.c50)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) AS INTEGER), ((NULL) NOT BETWEEN (((t1.c43)<(v0.c0))) AND (CASE x''  WHEN t1.c43 THEN t2.c2 ELSE vt0.c0 END)), ((((vt0.c0) NOT BETWEEN (t1.c43) AND (t2.c0))) BETWEEN ((~ (v0.c0))) AND (TYPEOF(vt0.c0))), CAST(LIKELIHOOD(t1.c43, 0.5540185819983043) AS TEXT); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND (((NOT (t1.c89))))) FROM v0;SELECT ALL t2.c0, (t2.c50 IN (CAST(t1.c89 AS NUMERIC))), ((t1.c43)%(((t1.c43) NOT BETWEEN (t2.c2) AND (t1.c43)))) FROM t2, t1 WHERE (((((NULL) NOT NULL)) NOT BETWEEN (((NULL)IS(0.2819402794692767))) AND (CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT (+ (CASE WHEN t2.c50 THEN t2.c2 WHEN v0.c0 THEN t2.c50 WHEN t2.c2 THEN v0.c0 END)) FROM t1, vt0, v0 WHERE ((((0xfffffffffacdf740)GLOB('')) IN (NULL, (~ (0.5325324499722274)))));SELECT ALL PRINTF((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) FROM t1, v0 WHERE (((NULL) BETWEEN ((+ (0.545908137656771))) AND (((NULL) NOT NULL))));SELECT DISTINCT '', ((((t2.c50) NOT BETWEEN (vt0.c0) AND (t2.c50))) NOTNULL), (HEX(t1.c89) IN (SUM(vt0.c0), ((t1.c89)IS NOT(t2.c0)))) FROM v0 WHERE (SUBSTR(CAST(0.7009361536546442 AS TEXT), ((('?^'))>=(('')))));SELECT DISTINCT ((t2.c2) ISNULL) COLLATE RTRIM FROM vt0, t2, v0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN (('*aDSBk')&('')) WHEN (('')AND(x'2d3a')) THEN (((('J喫C')OR('-1705315535')))AND('5')) WHEN ((0X284555ab) NOT BETWEEN (x'') AND ('\rR')) THEN CAST('!U&R꫙JK' AS TEXT) ELSE CASE WHEN NULL THEN 0.4913545768256159 END END); -- 0ms;
SELECT DISTINCT ((((vt0.c0)LIKE(t2.c2))) BETWEEN (TYPEOF(t1.c89)) AND (((t1.c89)%(t2.c0)))) FROM t1 LIMIT 1283658447 OFFSET 2004353759;SELECT DISTINCT CAST((((t2.c2, t2.c50, t2.c0))=((t2.c0, NULL, t1.c89))) AS NUMERIC) FROM v0;SELECT (((- (t2.c2))) NOT BETWEEN (CASE t2.c0  WHEN '{㕭t' THEN vt0.c0 END) AND ((t2.c50 IN (t2.c2)))) FROM t1 WHERE (((((NULL)<(x''))) BETWEEN ((x'bdd5' IN ())) AND (NULL)));SELECT DISTINCT CAST(0.03386313006269992 AS TEXT) COLLATE BINARY FROM v0, vt0, t1, t2; -- 0ms;
SELECT DISTINCT 0.2884237733038785 FROM v0, t1 INNER JOIN vt0 ON (((vt0.c0, vt0.c0, t1.c89)) NOT BETWEEN ((((v0.c0) NOTNULL), ((t1.c43) NOT BETWEEN (t1.c89) AND (t2.c50)), t2.c50)) AND ((CAST(vt0.c0 AS REAL), CAST(t2.c0 AS NUMERIC), CASE vt0.c0  WHEN '].|*%' THEN t1.c89 WHEN t2.c0 THEN t1.c89 WHEN v0.c0 THEN vt0.c0 END))) RIGHT OUTER JOIN t2 ON ((((t2.c50)GLOB(t2.c50))) IS TRUE) WHERE (json_array_length(((0.5478214054388372) IS TRUE)));SELECT (((t2.c0) IS FALSE) IN (CASE v0.c0  WHEN vt0.c0 THEN t2.c0 ELSE NULL END)), CASE ((0Xffffffffd53f2fca)AND(vt0.c0))  WHEN CASE t1.c89  WHEN t2.c50 THEN v0.c0 WHEN t1.c89 THEN v0.c0 WHEN t1.c43 THEN vt0.c0 END THEN t1.c89 COLLATE BINARY ELSE (v0.c0 IN ()) END, RANK() OVER ( PARTITION BY CASE CASE WHEN t1.c43 THEN t1.c89 END  WHEN NULL THEN t1.c89 END, (((t2.c2 IN (t2.c50)))/(CAST(t2.c50 AS INTEGER))) ORDER BY ((((((t1.c89))<>((t2.c2)))))<=((vt0.c0 COLLATE BINARY)))  NULLS LAST) FROM t1 ORDER BY (~ (t2.c50)) COLLATE RTRIM ASC  NULLS FIRST;SELECT ALL CAST((((t2.c50, t1.c89, v0.c0, vt0.c0, t1.c89)) BETWEEN ((vt0.c0, NULL, vt0.c0, t2.c50, t1.c43)) AND ((t2.c2, t2.c0, vt0.c0, v0.c0, t2.c50))) AS BLOB) FROM vt0, t1, v0, t2 ORDER BY CASE CASE WHEN v0.c0 THEN t2.c2 WHEN t1.c89 THEN t1.c43 WHEN vt0.c0 THEN t1.c89 END  WHEN 540447367 THEN ((t2.c2) BETWEEN (t2.c0) AND (t1.c43)) END DESC LIMIT -1244325560; -- 0ms;
SELECT DISTINCT (((((NULL)AND(t1.c89)))OR(t1.c43)) IN ()) FROM v0 WHERE ((NULL IN ('416680336')) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT ALL ((CASE WHEN t1.c43 THEN v0.c0 END)*(((t2.c2)AND(t2.c0)))) FROM t2, t1, v0, vt0; -- 0ms;
SELECT ((((CASE WHEN t1.c43 THEN v0.c0 ELSE NULL END)AND(CAST(t1.c89 AS BLOB))))OR((+ (vt0.c0)))) FROM v0, t2, t1, vt0 WHERE ((((((NULL))<=(('-97396281'))))>(((0.19597053051614066)GLOB(0.6284729988620726))))) LIMIT 984941965; -- 0ms;
SELECT ALL ((CAST('-810008024' AS REAL)) IS TRUE) FROM v0 WHERE (NULL COLLATE BINARY) UNION SELECT DISTINCT (((COUNT(*), (t1.c43 IN ()), ((((t2.c2)AND(t2.c50)))OR(vt0.c0))))=((1904065607, COUNT(v0.c0), NULLIF(DISTINCT t2.c0, x'e531')))) FROM vt0 WHERE (((CAST('U\r<''M' AS NUMERIC)) NOT NULL));SELECT (- (('0.8019098049204024' IN ()))), (- (t2.c0 COLLATE NOCASE)), ((t1.c89) IS TRUE) COLLATE BINARY FROM t1, v0, vt0 WHERE (((NULL) NOTNULL));SELECT DISTINCT CUME_DIST() OVER () FROM v0; -- 0ms;
SELECT t2.c2 FROM t2, v0 WHERE ((~ (CAST(0.9774269319023086 AS INTEGER)))); -- 1ms;
SELECT TYPEOF(DISTINCT (NOT (t2.c2))), (((vt0.c0, t2.c2, x'')) BETWEEN ((v0.c0, t1.c43, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY, ((((t2.c50)*(t1.c43))) BETWEEN (TOTAL(x'6f84')) AND (((v0.c0)LIKE(t2.c0)))), (((((t1.c43)AND(t1.c43)))OR(v0.c0)) IN ()), TYPEOF((((vt0.c0)) BETWEEN ((t2.c2)) AND ((vt0.c0)))) FROM t2, t1 WHERE (TYPEOF(DISTINCT (NOT ('AT8'))));SELECT ALL ((((t2.c0 COLLATE BINARY)AND(((x'')!=(t1.c43)))))OR(((t2.c2)IS(t1.c43)))) FROM t2;SELECT DISTINCT LOWER(DISTINCT t2.c2) FROM v0, vt0, t1, t2 WHERE (((x'999b' COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT ALL ((((((((((t2.c2)<<(t1.c89)))AND((t2.c0 IN ()))))AND(((((1215127567)OR(t2.c2)))AND(7.136393970539334E-4)))))AND(((t2.c2)IS NOT(t2.c2)))))OR((~ (t2.c50)))) FROM v0, t1, vt0;SELECT DISTINCT ((CASE t1.c89  WHEN t2.c0 THEN v0.c0 END) ISNULL), (~ (t2.c50)), TOTAL(x'') OVER () FROM vt0, t2 WHERE (((((('-1994451422')AND('-837516371')))AND('-631081152')) IN ())) GROUP BY CAST(t2.c2 AS REAL) COLLATE NOCASE HAVING ((((('', v0.c0, t1.c89))<=((984941965, t1.c89, vt0.c0)))) NOT BETWEEN ((~ (t2.c2))) AND (AVG(v0.c0)));SELECT ((CASE WHEN t1.c89 THEN t1.c89 WHEN t2.c2 THEN t1.c89 WHEN t2.c50 THEN t1.c43 END)>(((v0.c0)<<('YBEy\re[,z')))) FROM t1, vt0, t2, v0 WHERE (((CAST('1774348979' AS INTEGER))AND(((NULL) NOT BETWEEN ('-2024424272') AND (x'6b0f'))))) LIMIT -1317602766; -- 0ms;
SELECT DISTINCT (~ ((vt0.c0 IN ()))), (+ (((t2.c50) BETWEEN (t2.c0) AND (t2.c0)))), 1984948437 FROM t2, v0; -- 0ms;
SELECT ALL CASE WHEN (vt0.c0 IN ()) THEN ((t1.c43)<>(x'')) ELSE ((vt0.c0)IS NOT(t2.c2)) END FROM vt0 LIMIT -283597427;SELECT DISTINCT TOTAL(AVG(COALESCE(DISTINCT t2.c0, t2.c50))) FROM t1;SELECT TOTAL_CHANGES() FROM v0, t2, t1; -- 0ms;
SELECT DISTINCT (~ (((((((((t1.c89)AND(vt0.c0)))OR(t2.c0)))OR(t1.c43)))AND('A')))) FROM vt0;SELECT DISTINCT ((((t1.c89)AND(t2.c50)))AND(vt0.c0)) COLLATE NOCASE, TOTAL(x'') OVER (), CASE x''  WHEN ((t1.c89) BETWEEN (t1.c43) AND (t2.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE t2.c2 COLLATE NOCASE END FROM v0 WHERE (QUOTE(NULL));SELECT (((vt0.c0)%(t1.c89)) IN ((t2.c0 IN ()), ((v0.c0)<=(v0.c0)))) FROM v0, vt0, t1; -- 0ms;
SELECT DISTINCT (((t2.c0)|(t1.c89)) IN ()) FROM t1 ORDER BY ((CAST(t2.c0 AS TEXT)) NOTNULL) DESC  NULLS FIRST;SELECT DISTINCT (((t2.c0, vt0.c0, t2.c50)) BETWEEN (((vt0.c0 IN ()), CAST(t2.c0 AS NUMERIC), (((v0.c0))<=((t2.c0))))) AND ((((vt0.c0) NOT NULL), ((vt0.c0)!=(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (t2.c50))))) FROM t1;SELECT ALL t2.c2, NULL, ((((((((((((COUNT(vt0.c0))OR(x'')))OR(((((t1.c43)AND(t2.c50)))OR(t2.c2)))))AND((((t2.c0))<((t2.c2))))))OR(((t1.c43)==(t1.c89)))))OR(((vt0.c0) IS FALSE))))OR(CASE WHEN vt0.c0 THEN t2.c0 END)) FROM vt0, v0, t2, t1 WHERE (CASE WHEN ((0.11935393322195498) IS TRUE) THEN (0Xffffffffb8c31ca1 IN (0.4655326311787259)) WHEN CASE WHEN 0.43929366424678484 THEN NULL ELSE 0.8626552510954583 END THEN (0.8137995283235967 IN (0.6548718998440339, 6.90262903E8)) WHEN LTRIM('408366609') THEN (- ('ri^죿j너1븄i')) ELSE NULL END); -- 0ms;
SELECT (NOT (0.5142287989676747 COLLATE RTRIM)) FROM t2 NOT INDEXED, t1 WHERE ((~ (((x'095f') NOT BETWEEN (x'') AND (NULL))))) GROUP BY (- (((t2.c2) ISNULL))) HAVING (((t2.c50) NOT NULL) IN ()); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) IS FALSE) THEN MAX(t2.c0) END FROM t2, t1, vt0; -- 0ms;
SELECT DISTINCT (((((v0.c0)AND(vt0.c0)))OR(t2.c50)) IN ()) FROM t1, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (+ (v0.c0)) FROM t1, t2, vt0, v0; -- 0ms;
SELECT '' FROM t1 RIGHT OUTER JOIN v0 ON ((t2.c2 COLLATE RTRIM)<=(LIKELIHOOD(v0.c0, 0.5468475792195965))) WHERE (LOWER(DISTINCT ((((x'')OR('*b')))AND('420548774'))));SELECT DISTINCT ((((t1.c89) NOT NULL))IS NOT(((vt0.c0) IS FALSE))) FROM t2, v0 LIMIT 218595815 OFFSET 571231288;SELECT ALL TOTAL(((t2.c0) IS FALSE)) FROM v0, t2 WHERE (((((0X3791b28c) NOT BETWEEN (x'') AND (x'')))<>((('453689296')<('꧘0\nLYl'))))); -- 0ms;
SELECT DISTINCT (((NOT (t1.c43))) BETWEEN (NULLIF(v0.c0, NULL)) AND (((t1.c43) NOT NULL))) FROM t2, vt0 NATURAL JOIN v0 WHERE ((((((x'c2c7') NOTNULL)))=((('-75383350' IN ())))));SELECT CAST(TRIM(v0.c0, vt0.c0) AS TEXT) FROM vt0 ORDER BY ((((((NULL) NOT BETWEEN (t2.c0) AND (t1.c43)))AND(((t2.c50)OR(vt0.c0)))))OR(((t1.c43)IS NOT(t2.c2)))) DESC, NULL, v0.c0 ASC;SELECT DISTINCT vt0.c0, LIKE(t1.c43, ((v0.c0) IS TRUE), '}'), CAST(x'5039' AS REAL) FROM v0, t1, vt0, t2 WHERE (((COALESCE(1.302060872E9, 'Ꞿ!ruu'))IS(CASE x''  WHEN x'' THEN '-1532502882' END))) GROUP BY COALESCE(t1.c89, ((t2.c50)||(v0.c0)), UPPER(DISTINCT t2.c0), x'0a80') HAVING (((0.6919525806046771)>>(t2.c0)) IN ()); -- 0ms;
SELECT 0X10710e18 FROM t2; -- 0ms;
SELECT ALL HEX(DISTINCT ((((v0.c0)OR(t2.c2)))OR(v0.c0))) FROM v0, t2; -- 0ms;
SELECT '-810008024', TOTAL((- (v0.c0))) OVER (), (CAST(0.42920397302186164 AS INTEGER) IN ()) FROM v0 LIMIT 311492889; -- 0ms;
SELECT DISTINCT CASE WHEN LIKELIHOOD(t2.c2, 0.2579745855921127) THEN CASE v0.c0  WHEN t1.c43 THEN t2.c2 ELSE t2.c0 END WHEN ((t1.c43)AND(t1.c89)) THEN NULL WHEN t2.c2 COLLATE RTRIM THEN ((((t1.c43)OR(v0.c0)))OR(t1.c89)) ELSE CAST(x'8b5d' AS TEXT) END, LIKE(CAST(t2.c2 AS BLOB), (- (t2.c0)), '-'), NULL, x'', ((t2.c0) NOT BETWEEN (x'') AND (LOWER(vt0.c0))) FROM t1, v0, t2, vt0 WHERE ((((((NULL, 0.8580356205180846, 0.9572654029416585)) BETWEEN ((NULL, 'rQbKX}濓', 1)) AND ((-682647711, 0.6674656234747682, NULL)))) NOTNULL)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM v0, vt0 WHERE (CAST(NULL AS REAL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE ((NULL)!=(v0.c0))  WHEN (((t1.c43)) BETWEEN ((t1.c89)) AND ((t2.c2))) THEN 0.5622675326359073 COLLATE NOCASE ELSE ((t2.c0)%(0.90189214243926)) END FROM v0 WHERE ((NOT (CASE WHEN x'1e5f' THEN 'X8DgehG2' ELSE 0.6056537479370209 END)));SELECT ALL COUNT(*) OVER () FROM v0; -- 0ms;
SELECT ALL MAX(-8.91345616E8) FROM t2, vt0, t1 WHERE ((((NULL, -1189238285, NULL, x'', 0.6039063682350663)) NOT BETWEEN (('312204589' COLLATE BINARY, (((('oFm\nv㛅z&')AND('0.07295062810424258')))AND('-33149554')), CASE '-1411511261'  WHEN x'876e' THEN x'0d0c' END, ((x'')|(NULL)), ((((0X334f4246)AND('-1991762466')))OR(0.3176692860115068)))) AND ((CASE WHEN -18427587 THEN '{,' WHEN NULL THEN 2034486200 WHEN 0.9099131525230346 THEN NULL ELSE '416680336' END, ((NULL) BETWEEN (0Xffffffffe6395fb4) AND ('\n!\nA>s')), (((((((('')OR('綬d!''OAO')))OR(NULL)))OR(NULL)))AND(411557455)), '' COLLATE NOCASE, (('856944417') NOT BETWEEN (0.6759853465273731) AND (0.3198144581036084)))))); -- 0ms;
SELECT ALL (- (t2.c50)) FROM t2, t1, vt0 ORDER BY t1.c89 ASC, v0.c0 LIMIT -1838312414 OFFSET -2109084151;SELECT DISTINCT t2.c0 FROM vt0, t2, t1, v0 WHERE (((((((x'')OR('')))AND(0.7334556185786941)))+(((x'') BETWEEN ('9v') AND ('1400572141'))))); -- 0ms;
SELECT AVG((t2.c2 IN ())) FROM t2, t1, vt0; -- 1ms;
SELECT ALL x'' FROM t2, vt0 WHERE (CAST(x'' AS INTEGER) COLLATE BINARY) GROUP BY (t1.c89 IN (((t2.c2) NOT NULL), ((t1.c89)<<(t1.c89)))), (((((t2.c2)>=(t1.c89))))=((x''))), (NULLIF(vt0.c0, t1.c43) IN ()), 0.6190547120792447, (CAST(t1.c89 AS BLOB) IN (((0.6789881965804367)||(t2.c2))));SELECT (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((4.16680336E8, CASE WHEN t2.c2 THEN '312204589' END, SUM(t2.c50))) AND ((CAST(v0.c0 AS TEXT), t1.c89, t2.c2 COLLATE BINARY))) FROM t2 WHERE ((((((+ (x'')))AND((+ ('-33149554')))))OR(CASE x'5e68'  WHEN NULL THEN '352632609' WHEN 0.8546063311375145 THEN '-1444741204' WHEN '' THEN x'' ELSE x'' END)));SELECT (((t1.c89, -8.10008024E8, vt0.c0)) BETWEEN (((((v0.c0))!=((t2.c2))), vt0.c0 COLLATE RTRIM, (((t2.c50, t2.c0, t1.c43))<((t2.c0, v0.c0, v0.c0))))) AND ((LIKE(v0.c0, t1.c89, 'P'), (~ (vt0.c0)), t1.c43))) FROM v0, vt0, t2 WHERE ((((0.7445577392239233)) NOT BETWEEN ((CAST(x'' AS NUMERIC))) AND ((((x'') BETWEEN (0.6126829926930181) AND (x''))))));SELECT ALL t2.c50, ((((t1.c43) BETWEEN (t2.c0) AND (vt0.c0)))|(CASE WHEN NULL THEN t1.c89 END)), '-392783107', CAST(((t2.c50) NOT NULL) AS BLOB), (((((t2.c0, t2.c2, t1.c89)) NOT BETWEEN ((t1.c43, t2.c50, t1.c43)) AND ((t2.c50, v0.c0, t2.c50))))<(((x'')<<(v0.c0)))) FROM v0, t2 INDEXED BY i78 FULL OUTER JOIN vt0 ON ((((NULL)&(x'880d'))) IS TRUE) FULL OUTER JOIN t1 ON ((((t2.c50)AND(t1.c89))) NOT BETWEEN ((t2.c50 IN ())) AND ((((t1.c89))<((v0.c0)))));SELECT ALL GROUP_CONCAT(((t2.c0)>('Ldp'))) OVER ( ORDER BY CASE WHEN (x'be5e4a79fb92' IN (v0.c0)) THEN (((vt0.c0, t2.c0, NULL)) NOT BETWEEN ((t1.c43, t1.c43, v0.c0)) AND ((t2.c0, vt0.c0, v0.c0))) ELSE ((t2.c2)LIKE(vt0.c0)) END  NULLS FIRST) FROM t2, vt0, v0, t1; -- 0ms;
SELECT ALL (((((t1.c89)) BETWEEN ((t2.c50)) AND ((v0.c0)))) BETWEEN (((t1.c43) BETWEEN (x'') AND (t2.c2))) AND (((((((((v0.c0)AND(x'4adb')))OR(t2.c0)))OR(t2.c50)))OR(t2.c0)))), x'', ((NULLIF(t2.c50, t1.c43)) IS FALSE) FROM t1, vt0, t2, v0; -- 0ms;
SELECT (((vt0.c0 COLLATE RTRIM))<=((CAST(vt0.c0 AS INTEGER)))) FROM t1 ORDER BY (~ (vt0.c0)) COLLATE RTRIM  NULLS FIRST, (((- (t1.c43)))||(CAST(vt0.c0 AS BLOB)))  NULLS FIRST;SELECT CASE WHEN CASE t1.c43  WHEN v0.c0 THEN t1.c43 END THEN ((((t1.c43)OR(t2.c50)))OR(0.2323228508541203)) ELSE t2.c0 END, ((CASE v0.c0  WHEN t2.c50 THEN t2.c50 END)LIKE(((v0.c0)>(vt0.c0)))), CASE WHEN (t1.c89 IN ()) THEN (t2.c2 IN ()) WHEN COUNT(*) THEN ((t1.c89) ISNULL) WHEN ((((((((((((v0.c0)AND(t2.c2)))OR(t2.c50)))AND(t1.c43)))OR(t2.c50)))OR(t2.c50)))OR(t1.c43)) THEN t1.c89 COLLATE RTRIM ELSE ((t2.c0) NOT BETWEEN (t2.c0) AND (x'')) END FROM t2;SELECT ((CASE WHEN vt0.c0 THEN t1.c43 WHEN t2.c2 THEN t1.c43 WHEN t2.c50 THEN t2.c50 WHEN t1.c43 THEN '' WHEN 656898179 THEN vt0.c0 ELSE t2.c0 END) NOT BETWEEN (CAST(t2.c0 AS INTEGER)) AND (COUNT(t2.c50))), CAST(((t2.c0)>>(t2.c50)) AS BLOB), (((t1.c43)) BETWEEN ((CAST(t2.c50 AS INTEGER))) AND ((((v0.c0)IS(t2.c50))))) FROM vt0, t1 WHERE ((('-987437293' COLLATE NOCASE)<<(((x'2361ba16') IS TRUE))));SELECT ALL LAG((((((vt0.c0)<=(vt0.c0)), ((vt0.c0) IS FALSE), ((vt0.c0)GLOB(vt0.c0))))<=((load_extension(vt0.c0, vt0.c0), vt0.c0 COLLATE BINARY, (((vt0.c0))<((vt0.c0)))))), ((((((((((vt0.c0)OR(vt0.c0)))OR('4啇P(0)')))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (((NULL)*(vt0.c0))) AND (((vt0.c0)>>(vt0.c0)))), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0)||(vt0.c0))))) OVER () FROM vt0;SELECT ALL ((COUNT(*)) BETWEEN (CASE WHEN t2.c2 THEN x'' WHEN t2.c0 THEN t2.c50 WHEN t2.c50 THEN v0.c0 END) AND (((vt0.c0) ISNULL))) FROM t1, t2 WHERE ((((('-1218285786')<('1314802125'))) IS TRUE));SELECT DISTINCT (((((v0.c0) ISNULL), (t1.c43 IN ()), (((t2.c2, NULL, t1.c89, t1.c43, t2.c50)) NOT BETWEEN ((t1.c43, t2.c2, x'', v0.c0, t1.c89)) AND (('', t1.c43, v0.c0, t2.c2, t1.c43))), t1.c89 COLLATE RTRIM, 1.668725283E9))>((x'', ((t1.c43) NOT BETWEEN (t2.c50) AND ('突?')), ((t1.c43)IS(t2.c2)), CAST(vt0.c0 AS INTEGER), CASE WHEN t2.c50 THEN v0.c0 WHEN t1.c89 THEN vt0.c0 WHEN t1.c89 THEN t2.c2 ELSE vt0.c0 END))) FROM vt0;SELECT DISTINCT (((t2.c2 IN ()))<<(((t2.c2)%(t2.c2)))), ((t1.c43) IS TRUE) COLLATE RTRIM, x'361c' FROM v0 WHERE (CAST((((x''))>(('t*'))) AS REAL)) LIMIT 1546061900 OFFSET 686300737;SELECT ((((NULL) ISNULL)) NOT BETWEEN (CASE WHEN t1.c89 THEN NULL ELSE '0.5214118707189995' END) AND (((((((((t1.c89)OR(t2.c50)))OR(t1.c89)))OR(v0.c0)))OR(t2.c2)))) FROM v0, t1, t2, vt0 LIMIT 1869223947; -- 0ms;
SELECT DISTINCT (((((t2.c0))=((vt0.c0)))) BETWEEN (x'') AND (0.9002007192141495)) FROM t1, v0, t2;SELECT DISTINCT (+ ((v0.c0 IN ()))), MIN(((t2.c2) NOT BETWEEN (NULL) AND (t2.c2))), ((((x'') NOT NULL))>(COUNT(*))) FROM v0, t1, t2, vt0 ORDER BY x'' DESC  NULLS FIRST; -- 0ms;
SELECT ALL (NOT (CASE WHEN t1.c43 THEN vt0.c0 END)), (~ (GROUP_CONCAT(t1.c43))), ((COUNT(*))>=(((t1.c43)/(t2.c2)))) FROM t1, v0;SELECT DISTINCT json_insert(t2.c50, t2.c2, v0.c0) COLLATE RTRIM FROM t1, vt0, v0, t2 WHERE ((NOT (NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((v0.c0)/(v0.c0)))=(vt0.c0)), (((((((((t2.c2)AND(vt0.c0)))OR(t2.c0)))AND(t2.c0)))AND(t1.c89)) IN ()), AVG((NOT (t2.c2))) OVER () FROM v0, t2;SELECT DISTINCT ((MAX(t2.c50))>>(((vt0.c0) IS TRUE))), (((t1.c89 IN (t2.c50)))%((((t1.c43)) NOT BETWEEN ((t2.c2)) AND ((t2.c2))))), x'9e39' COLLATE BINARY FROM t2, t1;SELECT DISTINCT COALESCE(t2.c0 COLLATE NOCASE, (t2.c2 IN ())) FROM vt0;SELECT DISTINCT MIN(CAST(v0.c0 AS BLOB), t1.c43) FROM t1 INDEXED BY i50, t2, vt0, v0;SELECT DISTINCT CAST(CASE WHEN '148693645' THEN t1.c89 ELSE v0.c0 END AS BLOB), TRIM(DISTINCT ((0X176b1812)LIKE(t2.c50)), ((t2.c50) BETWEEN (t2.c50) AND (v0.c0))), ((((((t2.c50)AND(vt0.c0)))OR(t2.c0)))==(t2.c50)) FROM t1, vt0, v0 WHERE ((('-592808306')>((x'' IN ('201121399')))));SELECT DISTINCT ((((((((TRIM(t1.c89))OR(NULL)))OR(t2.c50 COLLATE NOCASE)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE))), ((((('231999167')) NOT BETWEEN ((vt0.c0)) AND ((t2.c0)))) NOT BETWEEN (((v0.c0)%(t2.c0))) AND (CASE t1.c43  WHEN '-1414320744' THEN '-1655404759' ELSE t1.c89 END)), ((t1.c89) NOT BETWEEN (((t2.c0)|(t2.c0))) AND (UNLIKELY(t2.c0))), ((((((vt0.c0)AND(vt0.c0)))OR(v0.c0))) NOT NULL), (NOT (CAST(t2.c50 AS TEXT))) FROM t2, vt0, t1 INDEXED BY i50, v0 ORDER BY (((NULL IN (t2.c0))) NOT NULL), NULLIF(((-2063165697)+(vt0.c0)), ((v0.c0)<(t1.c43)))  NULLS LAST;SELECT DISTINCT t2.c2, t2.c50, vt0.c0 FROM v0 INDEXED BY i78 WHERE (IFNULL(DISTINCT ((-1581649629) NOT BETWEEN ('-1952793084') AND (-1500355252)), JULIANDAY(-9.59365925E8, NULL, -1083553535))) EXCEPT SELECT DISTINCT ((((t1.c43) BETWEEN (t2.c50) AND (t2.c50)))IS(((t2.c2) BETWEEN (vt0.c0) AND (t1.c43)))), AVG((t1.c43 IN ())), (((((t2.c2)) NOT BETWEEN ((NULL)) AND ((t2.c2)))) IS FALSE) FROM t1 WHERE ((+ ((('*2x') NOT BETWEEN ('') AND ('')))));SELECT ALL '1y' COLLATE RTRIM, 2.101389246E9 COLLATE RTRIM, ((((((v0.c0)>(v0.c0)))AND(((t2.c50) NOT NULL))))OR(CASE vt0.c0  WHEN t2.c2 THEN t2.c50 END)) FROM t1, vt0 WHERE ((((((('0.20313557095200618')AND(NULL)))AND(0.5979803311415001)))>((x'ef41' IN ()))));SELECT DISTINCT vt0.c0 FROM vt0, t2, t1, v0 WHERE ((CAST(x'' AS INTEGER) IN (((NULL) NOT BETWEEN ('-1595573327') AND (x'')), (('1816284034')LIKE(x'')), ((x'f2ad') NOT BETWEEN (0.8702148104226185) AND (-1.277402327E9))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) THEN ((t2.c0) ISNULL) WHEN COUNT(*) THEN ((t1.c43)+(t2.c50)) WHEN CAST(t2.c0 AS TEXT) THEN LOWER(v0.c0) ELSE (t2.c50 IN ()) END FROM v0, vt0, t1 WHERE ((((((((0.21928331048443828)OR('xU')))OR(x''))))==(((NULL IN ())))));SELECT ALL COUNT(((t1.c43)IS NOT(t2.c0))) OVER () FROM vt0, t1, t2 WHERE (((CASE WHEN NULL THEN 0.2918748726343553 END) ISNULL)); -- 0ms;
SELECT DISTINCT ((CASE '>'  WHEN t2.c2 THEN t1.c89 WHEN t1.c89 THEN v0.c0 WHEN t1.c43 THEN v0.c0 ELSE t1.c43 END)>>(x'')) FROM t1 WHERE (((CASE NULL  WHEN '2<-zr\n嬇(' THEN 0xfffffffffee6d13d END)<=(((('-1317602766'))==((0xfffffffffd8b25d0)))))) GROUP BY (LAST_INSERT_ROWID() IN (CAST(t2.c0 AS NUMERIC), ((((t1.c43)AND(t1.c89)))OR(x'')))), (((CASE WHEN t2.c2 THEN t2.c50 END))<>(((t2.c50 IN ())))), ((CAST(vt0.c0 AS REAL))<=((NOT (t2.c2))));SELECT DISTINCT (((t1.c43)) NOT BETWEEN ((t2.c0 COLLATE NOCASE)) AND ((CASE t1.c89  WHEN t2.c2 THEN vt0.c0 ELSE v0.c0 END))) FROM t2, v0, t1 LIMIT -1268123650 OFFSET 1904065607;SELECT t1.c89 FROM t2, t1; -- 0ms;
SELECT ALL TOTAL(((vt0.c0) NOT BETWEEN (t2.c50) AND (t2.c50))) FROM t1, t2, vt0, v0 WHERE (json_array(((((NULL)AND(NULL)))AND('1596961306')), ((-750753980) BETWEEN (x'') AND ('Gg{DJ')))); -- 0ms;
SELECT CAST(((t2.c2) BETWEEN (t2.c0) AND (vt0.c0)) AS INTEGER) FROM vt0, t1, t2, v0 WHERE (ABS((- ('')))); -- 0ms;
SELECT DISTINCT (~ ((~ (t1.c89)))) FROM vt0, t1, t2 WHERE (CAST(((0.5415411422384311) BETWEEN (NULL) AND (NULL)) AS TEXT)); -- 0ms;
SELECT (((t2.c0, vt0.c0, t1.c43)) BETWEEN (((NOT ('-645223992')), ((0Xffffffff86d40d48)AND(v0.c0)), ((t2.c2)LIKE('fK9d7}')))) AND ((((t1.c89) IS FALSE), ((t2.c2)GLOB(t1.c43)), (((t2.c2)) NOT BETWEEN ((-1.500355252E9)) AND ((vt0.c0)))))), CUME_DIST() OVER ( ORDER BY ((ABS(t1.c89)) ISNULL) GROUPS BETWEEN  CURRENT ROW AND ((t2.c2)GLOB(((((((((v0.c0)OR(vt0.c0)))AND(t1.c89)))OR(v0.c0)))AND(t1.c89)))) PRECEDING), '-362210047' FROM t2, v0, t1, vt0 LIMIT 1780733554;SELECT DISTINCT ((((t1.c43)OR(t1.c43)))|(CASE 1.840071247E9  WHEN x'' THEN v0.c0 WHEN NULL THEN 0.814150439502482 WHEN t2.c50 THEN t1.c89 END)) FROM t1, v0;SELECT ALL SQLITE_SOURCE_ID(), COUNT(((t2.c0) BETWEEN (t2.c50) AND (vt0.c0))) FILTER(WHERE t2.c0) OVER (), CASE (- (t2.c50))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(t2.c2)) THEN ((((((((t1.c43)OR(t2.c0)))AND('EH{f')))AND(t2.c2)))OR(t1.c43)) END FROM t2, t1, vt0 WHERE ((((x'', '959851198', '0.22361163078885382')) BETWEEN (((~ (x'')), CAST(NULL AS TEXT), x'e661')) AND (((((NULL)) BETWEEN ((0.22221070558131417)) AND ((1.283658447E9))), CAST(NULL AS TEXT), ((89106669) NOTNULL))))); -- 0ms;
SELECT DISTINCT COALESCE(CAST(v0.c0 AS NUMERIC), CAST(t2.c0 AS REAL)) FROM t1, vt0;SELECT ALL LAST_VALUE(((((((t1.c43)OR(t2.c2)))OR(vt0.c0)))AND((+ (t1.c89))))) OVER (), ((((t2.c50) NOT BETWEEN ('0.9637318251952125') AND (t2.c50))) BETWEEN ((t2.c50 IN ())) AND (((t2.c0)GLOB(t2.c2)))), 0.17765743266186795 FROM t1, vt0, t2 ORDER BY (((t1.c89) BETWEEN (t2.c50) AND (vt0.c0)) IN ()) ASC, ((- (v0.c0)) IN ())  NULLS FIRST, NULL DESC; -- 0ms;
SELECT ((((t1.c89)OR((((v0.c0, t2.c0, v0.c0, 0.9943782372069524, t1.c43)) NOT BETWEEN ((t2.c0, t2.c2, 'J\n!d*W㶹', t1.c89, t2.c0)) AND ((v0.c0, t1.c89, t2.c50, t2.c0, t2.c0))))))OR((t1.c89 IN ()))) FROM t1, vt0, v0;SELECT DISTINCT IFNULL(((((((((t2.c2)OR(t2.c0)))OR(t2.c50)))OR(t2.c2)))OR(t2.c2)), t2.c0) FROM t1, t2 ORDER BY (((((t2.c2)AND(v0.c0)))OR(t1.c89)) IN (CASE WHEN v0.c0 THEN t2.c50 WHEN t2.c50 THEN t1.c89 WHEN t1.c89 THEN t2.c2 END))  NULLS FIRST;SELECT -2.82555048E8, ((TOTAL(t1.c89))==((+ (t1.c43)))), CAST((- (t2.c0)) AS REAL) FROM v0, t2 GROUP BY ((((vt0.c0)||(t1.c89))) NOT BETWEEN (0.06472536104006943) AND ((0.4687751050785657 IN ()))) HAVING CAST(UNLIKELY(t2.c0) AS NUMERIC);SELECT COUNT(((v0.c0) ISNULL)) FROM t2, v0; -- 0ms;
SELECT ALL (((('''q!RbR', t2.c2, t2.c0))=((v0.c0, t2.c50, t2.c0))) IN ()) FROM t1, t2, v0, vt0 WHERE (((((((x'')AND(x'e87d')))OR('+0'))) IS TRUE)); -- 0ms;
SELECT CASE WHEN (x'' IN (x'')) THEN (((t2.c2, t2.c2, NULL)) NOT BETWEEN ((v0.c0, t1.c43, t2.c2)) AND ((vt0.c0, v0.c0, vt0.c0))) END, (NOT ((v0.c0 IN ()))), (TOTAL(t2.c2) IN ()) FROM t2, vt0 WHERE ((((+ (x''))) BETWEEN (NULL COLLATE NOCASE) AND ((((('-1503514689')OR(x'807c')))AND(NULL)))));SELECT ALL (vt0.c0 COLLATE NOCASE IN ((((t2.c2, '턽s', vt0.c0))=((t2.c0, t1.c89, vt0.c0))), JULIANDAY(vt0.c0, v0.c0, v0.c0))), MIN(t2.c2), (t1.c89 IN ((((vt0.c0))>((t2.c0))))) FROM t1;SELECT ((t2.c0)+(t1.c43)) COLLATE NOCASE, CASE WHEN ((v0.c0) ISNULL) THEN COALESCE(DISTINCT v0.c0, t2.c0) END, (- ((~ (v0.c0)))) FROM v0, t1, t2 WHERE ((((('')OR(NULL)))OR(0.8191548053760277)) COLLATE NOCASE) ORDER BY ((((t2.c0) NOT NULL)) IS FALSE) DESC; -- 0ms;
SELECT (+ (t2.c2)) FROM t2; -- 0ms;
SELECT ((t1.c89 COLLATE BINARY) NOT BETWEEN (((t1.c43)<>(v0.c0))) AND ((((t2.c50, vt0.c0, t2.c50)) BETWEEN ((vt0.c0, t1.c89, t2.c2)) AND (('G%', vt0.c0, t2.c0))))), ((CASE WHEN t2.c50 THEN t2.c2 WHEN t1.c89 THEN t1.c43 WHEN v0.c0 THEN t2.c2 ELSE t2.c0 END)-(CAST(v0.c0 AS REAL))), CHANGES() FROM v0, t2, t1, vt0 WHERE ((((+ (0.9627768707425381))) IS TRUE)); -- 0ms;
SELECT DISTINCT 0.3439321554394895 FROM v0, t2, t1, vt0; -- 0ms;
SELECT ((AVG(t2.c2)) NOT NULL), (NOT (t2.c2)) COLLATE NOCASE, ((('U', t1.c43, t2.c2)) NOT BETWEEN ((LOWER(t1.c89), ((((t1.c43)AND(t1.c43)))OR(v0.c0)), '495925815')) AND (((((vt0.c0, t2.c2, vt0.c0, t2.c2, t2.c0)) BETWEEN ((t2.c50, t2.c50, t2.c2, t2.c2, t1.c89)) AND ((vt0.c0, t2.c2, 'H8p*蚫', vt0.c0, t2.c2))), ((t1.c43) NOTNULL), ((t2.c0)/(vt0.c0))))) FROM t2, vt0 WHERE (((+ (0.1860155142979656)) IN ())) ORDER BY ((((((((CAST(t2.c50 AS TEXT))AND((~ (vt0.c0)))))OR(NULL)))AND(((t2.c50) BETWEEN (t2.c0) AND (t2.c50)))))AND(vt0.c0 COLLATE BINARY)) ASC;SELECT AVG(CAST(v0.c0 AS TEXT)) FROM t1, vt0 WHERE ((+ ('0.36665653503112616')) COLLATE BINARY COLLATE BINARY) ORDER BY ((((((t2.c0)OR(t2.c50)))AND(v0.c0))) NOTNULL) ASC;SELECT DISTINCT 0.7938622977222802 FROM v0, t1; -- 0ms;
SELECT ((((((((((((((((v0.c0)AND(t2.c50)))OR(v0.c0)))AND(t1.c89)))OR(t2.c50)))AND(CASE WHEN t2.c2 THEN x'' WHEN t2.c50 THEN t2.c50 WHEN t2.c0 THEN t1.c89 ELSE t2.c50 END)))OR(((v0.c0)||(t2.c2)))))OR((((('0.15525062393163025')OR(v0.c0)))OR(t2.c50)))))OR(((t2.c2)OR(t1.c89)))), ((((((((((((v0.c0)AND(vt0.c0)))AND(x'')))OR(t1.c89)))OR(v0.c0)))AND(((t2.c50) BETWEEN (t1.c89) AND (t1.c89)))))AND(UNLIKELY(t2.c0))), t1.c89 FROM v0 GROUP BY (CAST(t1.c89 AS TEXT) IN (t1.c89)) HAVING t1.c89;SELECT ALL 'Qw鐪1' FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT SUM(((v0.c0) BETWEEN (t2.c50) AND (t1.c43))) OVER (), ((((TRIM(DISTINCT t1.c89))AND(((((vt0.c0)OR('300906408')))OR(v0.c0)))))AND(((t2.c2) IS TRUE))), ((((CASE WHEN t1.c89 THEN t2.c50 WHEN vt0.c0 THEN t1.c89 WHEN t2.c0 THEN t2.c2 END)OR(((v0.c0) BETWEEN (t2.c50) AND (t2.c2)))))OR(t2.c50 COLLATE RTRIM)) FROM t2, t1, vt0, v0; -- 0ms;
SELECT DISTINCT (NOT (((t2.c0) BETWEEN (t2.c0) AND (t2.c50)))) FROM t2 WHERE ((((((0.3236907671799578)) BETWEEN ((NULL)) AND ((0.6709026731753598)))) ISNULL)) GROUP BY ((((t2.c2) NOT BETWEEN (t2.c0) AND (t2.c0))) NOTNULL) HAVING v0.c0;SELECT ALL (((((t2.c0)<=(v0.c0))))<=((((t1.c89)IS NOT(t1.c89))))) FROM t1 ORDER BY NULL DESC  NULLS LAST;SELECT ((((((t1.c43)*(t1.c89)))OR(((x'') IS TRUE))))AND((~ (x'c964')))) FROM vt0, t2, v0, t1; -- 0ms;
SELECT ALL ((t1.c43 IN (t1.c43)) IN ()), ((((CAST(t2.c2 AS TEXT))OR(((t1.c43)||(t2.c2)))))AND(vt0.c0)), TOTAL(v0.c0) OVER () FROM t1, t2;SELECT DISTINCT (t2.c50 IN (((t2.c2) NOTNULL))) FROM t2, v0; -- 0ms;
SELECT DISTINCT 'h*' FROM vt0; -- 0ms;
SELECT DISTINCT (+ (t1.c89 COLLATE RTRIM)), COUNT(*) OVER (), SUM((+ (t1.c43))) FILTER(WHERE (((((+ (t1.c43)))AND((- (vt0.c0)))))AND(t2.c0))) OVER () FROM t1, v0, vt0, t2 WHERE ((((~ (x''))) BETWEEN (((6.56713918E8) BETWEEN (x'1b6a') AND (-8.10008024E8))) AND (CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT CAST(MIN(t1.c43) AS BLOB) FROM t1, v0, vt0, t2; -- 0ms;
SELECT DISTINCT (NOT (((t2.c2) IS FALSE))) FROM t2, v0; -- 0ms;
SELECT DISTINCT CAST(((t2.c50) BETWEEN (vt0.c0) AND (t2.c50)) AS NUMERIC) FROM t1;SELECT DISTINCT 0.2124390753551062 COLLATE RTRIM FROM t2, vt0, v0 WHERE (json_insert(x'' COLLATE BINARY, ((((NULL)AND('')))AND('D[')), (('1kxDH') BETWEEN (NULL) AND (x'31cf'))));SELECT DISTINCT AVG((((t2.c0, v0.c0, v0.c0))>((t2.c2, v0.c0, vt0.c0)))) FROM t1 WHERE (CAST(IFNULL(DISTINCT 0.0, 0.9031906297160501) AS INTEGER));SELECT DISTINCT 3.12204589E8 FROM vt0, v0 WHERE (CAST(' i^6J]g2f' AS NUMERIC) COLLATE BINARY); -- 0ms;
SELECT ALL t2.c0 FROM v0, vt0, t2; -- 0ms;
SELECT DISTINCT ((((t1.c43)+(x'')))<<(TRIM(DISTINCT vt0.c0, t1.c89))) FROM vt0, t2 WHERE (((((0.34279831966780117 COLLATE RTRIM)OR('-1317602766' COLLATE RTRIM)))AND(((((939588767)OR(NULL)))OR(1431909035)))));SELECT DISTINCT (NOT (((((v0.c0)AND(v0.c0)))OR(t1.c89)))), NTH_VALUE(((((CAST(t2.c0 AS NUMERIC))OR((t1.c89 IN ()))))OR(((((t2.c0)OR(t1.c43)))OR(vt0.c0)))), ((((((((t1.c89)AND(t1.c89)))OR(v0.c0)))OR(t2.c50)))AND(vt0.c0)) COLLATE NOCASE) OVER ( ORDER BY '#\'  NULLS LAST), (t2.c0 COLLATE NOCASE IN ()) FROM t2 NOT INDEXED, v0, vt0, t1 GROUP BY t2.c50, (NULLIF(x'', t1.c43) IN ()), NULLIF('', t1.c89) HAVING ((LIKELIHOOD(v0.c0, 0.5511779452417392))+(TOTAL(v0.c0))); -- 0ms;
SELECT ALL ((LIKELIHOOD(t1.c43, 0.6669409794382012))<=((((t2.c2)) BETWEEN ((x'')) AND ((t2.c2))))) FROM v0 CROSS JOIN vt0 ON (((((NOT (t1.c43)))OR(0.7465663113183854)))AND((((t2.c2)) NOT BETWEEN (('')) AND ((t1.c89))))) GROUP BY (((vt0.c0, NULL, '1840071247')) BETWEEN ((CASE t2.c0  WHEN t2.c0 THEN vt0.c0 ELSE t2.c2 END, t2.c0 COLLATE NOCASE, TRIM(t2.c0))) AND ((((t2.c50) IS FALSE), (((t2.c0))>((t2.c50))), ((t1.c43) NOTNULL)))) HAVING CAST(CAST(v0.c0 AS INTEGER) AS BLOB);SELECT DISTINCT FIRST_VALUE((CAST(t2.c2 AS NUMERIC) IN (((t2.c50) NOTNULL)))) OVER () FROM v0, t1, t2, vt0; -- 0ms;
SELECT ALL CASE WHEN (vt0.c0 IN (v0.c0)) THEN ((t2.c50) NOT BETWEEN (v0.c0) AND (t1.c89)) END FROM v0, vt0, t1, t2 WHERE (((((CASE NULL  WHEN 0.5549901586065922 THEN x'' END)OR(CAST(NULL AS INTEGER))))OR((((x''))<>((0.3750170120899968)))))); -- 0ms;
SELECT DISTINCT ((((((((((x'bc06')OR(t1.c43)))OR(t2.c2)))AND(v0.c0)))AND(t2.c50)))<=(CAST(v0.c0 AS NUMERIC))), CASE WHEN (- (t2.c50)) THEN t2.c2 COLLATE RTRIM ELSE (- (t1.c43)) END, ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0)IS NOT(t2.c50))) AND (rtreenode(t2.c50, NULL))) FROM t2, v0, t1 WHERE (CAST(CAST(0.527178375881855 AS TEXT) AS NUMERIC));SELECT DISTINCT TOTAL(TYPEOF(DISTINCT NULL)) FROM vt0, v0, t2, t1; -- 0ms;
SELECT COUNT(((t2.c2)IS(t2.c2))) OVER () FROM t2, vt0, v0 WHERE ((((x'6f83d9df') BETWEEN ('EXQ1') AND (NULL)) IN ((('0.4474055726300028')>(x'c03de594'))))); -- 0ms;
SELECT ((((GROUP_CONCAT(t1.c89))AND(((x'') NOT NULL))))AND(UNLIKELY(x''))) FROM t2, t1 WHERE (CASE CAST(x'' AS TEXT)  WHEN x'589e' COLLATE NOCASE THEN ((x'')||(0.7235947676667412)) ELSE ((NULL) BETWEEN (0.8649415223207056) AND (0.1302863242924528)) END); -- 0ms;
SELECT ALL 'TRUE' FROM t1, t2, v0 WHERE (NULL) GROUP BY (NOT (vt0.c0)) COLLATE RTRIM LIMIT -1512738099;SELECT DISTINCT MIN(CASE WHEN t1.c43 THEN v0.c0 ELSE 0.056946603933056616 END) FROM t1, vt0;SELECT DISTINCT ((t2.c0 COLLATE NOCASE)<((NOT (t1.c43)))) FROM t2, v0, vt0, t1; -- 0ms;
SELECT DISTINCT (~ (((((((((t1.c43)OR(t1.c43)))OR(0.7061195055573345)))AND(t2.c50)))AND(vt0.c0)))) FROM vt0, t2, v0, t1; -- 0ms;
SELECT DISTINCT (((-1.264229538E9)<=(v0.c0)) IN (MAX(t1.c43))) FROM t2 LIMIT -711266208;SELECT ((CASE WHEN t2.c2 THEN v0.c0 END) IS FALSE), (((('656713918')AND(0.6190547120792447)))AND(t1.c43)), LAG((NULLIF('-33149554', t2.c0) IN (((t1.c89) ISNULL))), (((NOT (t1.c89))) NOT BETWEEN (CAST(t2.c50 AS INTEGER)) AND ((~ (t2.c2)))), CASE CAST(v0.c0 AS NUMERIC)  WHEN ((t2.c2)>=(t2.c50)) THEN ((vt0.c0) IS TRUE) END) OVER () FROM vt0, t2, t1, v0; -- 0ms;
SELECT t1.c43, COUNT(*) OVER (), 0X7dd19f54 FROM t1, t2 WHERE (((CAST(-639495959 AS TEXT)) BETWEEN ((((0.027039260078870253)) NOT BETWEEN ((NULL)) AND ((NULL)))) AND (((x'') NOTNULL)))); -- 1ms;
SELECT ALL 0Xffffffffe8969afd COLLATE NOCASE FROM v0; -- 0ms;
SELECT (((((t1.c43))<=((t2.c0)))) IS TRUE), (((- (t2.c2))) NOT NULL), COUNT((((vt0.c0))>=((t2.c2)))) OVER (), ((((((((((t2.c50)+(t2.c0)))OR(MIN(t1.c89))))AND(t2.c50 COLLATE RTRIM)))OR(((((t2.c50)AND(t2.c2)))OR(t2.c0)))))AND((((t1.c89)) BETWEEN ((t2.c50)) AND (('pTWe4 琸'))))), DENSE_RANK() OVER () FROM vt0, v0, t2 WHERE (((((x'')+(x'c45cea57')))AND(((NULL)||('-674315217')))));SELECT ALL ((vt0.c0 COLLATE RTRIM)%(CASE t2.c2  WHEN t2.c0 THEN t2.c0 WHEN t2.c50 THEN t1.c89 WHEN 0.1335402905652331 THEN t1.c89 WHEN t1.c43 THEN t2.c2 WHEN t1.c43 THEN t2.c2 END)) FROM t2 WHERE (CAST(0.3713628137235244 AS INTEGER) COLLATE BINARY);SELECT LAST_VALUE(CAST(((((t2.c0)AND(t2.c0)))OR(NULL)) AS REAL)) OVER (), ABS(CAST(t2.c50 AS INTEGER)), IFNULL(DISTINCT ((((t2.c50)OR(t2.c2)))OR(t2.c2)), ((t1.c43)-(vt0.c0))) FROM t2;SELECT ALL COUNT((NOT (vt0.c0))) FROM t1 WHERE ((json(x'0f76') IN ('455747996' COLLATE BINARY)));SELECT t2.c50 FROM t1, t2 WHERE (CAST(CAST('2046193056' AS INTEGER) AS BLOB)); -- 0ms;
SELECT ALL CASE WHEN HEX(DISTINCT t1.c43) THEN (NOT (t2.c50)) ELSE CASE WHEN t2.c50 THEN vt0.c0 END END FROM v0, vt0 WHERE (((json_extract('s5', x''))|((((0.18466270356812342)) BETWEEN (('932295308')) AND ((0.2884237733038785)))))) GROUP BY CAST(((((NULL)AND(vt0.c0)))AND(v0.c0)) AS TEXT);SELECT ALL ((((((t2.c2)OR(t2.c50)))AND(t2.c50))) NOT BETWEEN (t2.c0) AND (((vt0.c0) NOT BETWEEN (x'') AND ('%<')))) FROM t2, t1;SELECT DISTINCT ((((0.3713628137235244)IS NOT(t2.c50)))-(GROUP_CONCAT(t2.c2))) FROM t1 ORDER BY ((((vt0.c0)LIKE(t1.c89)))>>(((t2.c2)<(NULL))));SELECT ALL TOTAL(((vt0.c0) BETWEEN (v0.c0) AND (t2.c2))), t1.c89 COLLATE NOCASE, ROW_NUMBER() OVER () FROM v0 WHERE (((((NULL) BETWEEN ('}lE') AND (0.20386527483536832)))>=((('>\r') NOT BETWEEN ('-2124222173') AND ('-1503514689'))))) ORDER BY t2.c50 DESC;SELECT DISTINCT (- ((~ (t2.c0)))) FROM t1, vt0, v0, t2 LIMIT 17642046 OFFSET 596423964; -- 0ms;
SELECT CAST(((vt0.c0) NOT BETWEEN (t2.c50) AND (0.9221604921373976)) AS TEXT) FROM v0, vt0, t2 WHERE ((((((((((('352632609')<=(-1436052042)))OR(CAST(0.6345376554111228 AS TEXT))))OR(((('1138244729')) NOT BETWEEN ((0.29935032142021134)) AND ((0.6632404139373157))))))OR((('崅d呢#') IS FALSE))))OR((((0.94176584227197)) NOT BETWEEN (('\ff	grdዏ')) AND ((0.5873027782956957)))))); -- 0ms;
SELECT ALL COUNT(NULL), (LTRIM(t2.c0) IN ()), (((TOTAL(v0.c0)))>=((CAST('xD6p8JlSp' AS REAL)))) FROM t2, vt0, v0 WHERE ((+ ((((x'dd4dbedb', 2.101389246E9, x'')) BETWEEN ((0.456147778292154, NULL, '')) AND ((0.491014384819213, 0xfffffffffc41f0e3, -2.011776583E9)))))); -- 0ms;
SELECT ALL ((COUNT(*))%(v0.c0 COLLATE BINARY)) FROM vt0, v0, t1 LEFT OUTER JOIN t2 ON (((0.2890924388251108) IS FALSE) IN (((vt0.c0) NOT NULL))) WHERE (((((((0X5bab7dac) NOT NULL))AND(((x'')<=(x'')))))OR((+ (NULL))))); -- 0ms;
SELECT CASE (- (vt0.c0))  WHEN ((NULL)&(v0.c0)) THEN CAST('' AS TEXT) WHEN t2.c50 THEN (+ (t1.c89)) WHEN ((t1.c89) NOT BETWEEN (t2.c50) AND (t2.c0)) THEN AVG(v0.c0) END, ((((CAST(t2.c50 AS REAL))AND(CAST(t2.c2 AS BLOB))))OR(((((v0.c0)OR(t2.c50)))OR(vt0.c0)))), CASE CASE WHEN v0.c0 THEN t2.c50 WHEN t2.c50 THEN v0.c0 WHEN t2.c0 THEN t2.c2 WHEN t2.c0 THEN t2.c2 WHEN t1.c89 THEN t1.c43 END  WHEN CASE WHEN vt0.c0 THEN t2.c0 ELSE t1.c43 END THEN CASE vt0.c0  WHEN t1.c89 THEN t1.c43 ELSE t1.c43 END ELSE (((vt0.c0, t2.c50, t1.c43))==((t2.c2, v0.c0, t1.c43))) END FROM t2, t1 WHERE ((HEX(x'') IN ())) LIMIT -241564784 OFFSET -132001920;SELECT DISTINCT CAST(((v0.c0)OR(t2.c50)) AS REAL), TOTAL(ABS(t2.c0)) FILTER(WHERE (+ (CASE WHEN t1.c89 THEN t1.c89 ELSE t1.c43 END))) OVER (), CASE WHEN (t2.c0 IN (v0.c0, t2.c50)) THEN CASE vt0.c0  WHEN t2.c2 THEN t1.c89 ELSE t2.c2 END ELSE COUNT(*) END FROM t1, vt0, t2, v0 WHERE (CASE WHEN ((('1244819846')) NOT BETWEEN ((x'')) AND ((0X2335e210))) THEN ((x'') BETWEEN (x'') AND (']x')) ELSE ((((((((0.7075158750513292)OR(x'')))AND(7.136393970539334E-4)))AND(NULL)))AND(x'23d131bf')) END); -- 0ms;
SELECT SUM(x'') FROM t1, v0 ORDER BY ((((((v0.c0)=(x'6c34')))OR((+ (t2.c0)))))OR(((t1.c43)+(t2.c0))))  NULLS FIRST;SELECT DISTINCT (CASE WHEN t2.c0 THEN t1.c43 ELSE t1.c43 END IN ()), ((x'7b98')AND(((t1.c43) BETWEEN (t2.c2) AND (v0.c0)))), (+ (((t1.c89) IS TRUE))) FROM vt0, t1, t2 LIMIT -756374852 OFFSET -1873748616;SELECT DISTINCT TRIM(t2.c50), ((((((((((t1.c89)OR(t1.c89)))OR('XV퀬>(,\n샣')))AND(t2.c50)))AND(t2.c0))) BETWEEN (rtreenode(v0.c0, v0.c0)) AND (((t1.c89) BETWEEN (t2.c2) AND (vt0.c0)))), 0.43736844434123767 FROM t1, t2, vt0, v0 WHERE (((((0.44651704695488414) NOTNULL)) NOT BETWEEN ('ZS~]') AND (CASE WHEN NULL THEN x'd664' WHEN '1970611594' THEN x'c151' WHEN 0.5537735796855389 THEN x'' ELSE 0.22783395887545266 END))); -- 0ms;
SELECT DISTINCT ((t2.c2)|(t2.c0 COLLATE BINARY)) FROM t1, t2; -- 0ms;
SELECT DISTINCT (- (CAST(v0.c0 AS BLOB))) FROM t2, t1, vt0;SELECT 1.712175443E9, COUNT(((t1.c89) NOTNULL)) OVER (), ((t1.c43)>(t2.c50)) COLLATE RTRIM FROM v0 NOT INDEXED, vt0, t1;SELECT ALL ((CASE WHEN vt0.c0 THEN t2.c2 END) IS FALSE), ((((CHAR(t2.c50, v0.c0, t2.c0))OR(CASE v0.c0  WHEN t1.c43 THEN t1.c89 ELSE t1.c43 END)))OR((~ (v0.c0)))), (NOT ((t2.c0 IN (t1.c43)))) FROM v0, vt0, t1;SELECT DISTINCT (NOT (AVG(t2.c50))) FROM t1, v0, vt0, t2 WHERE (CASE ((NULL) ISNULL)  WHEN json_valid(NULL) THEN ((NULL) IS TRUE) WHEN ((('-98925758'))==((NULL))) THEN (- ('떕P')) WHEN '1459205726' COLLATE BINARY THEN ((NULL)|(NULL)) ELSE CASE WHEN NULL THEN NULL END END); -- 0ms;
SELECT DISTINCT CAST(t2.c50 AS BLOB) COLLATE NOCASE FROM v0, t1, vt0, t2; -- 0ms;
SELECT DISTINCT CAST(((t1.c43) IS FALSE) AS NUMERIC) FROM v0, vt0, t1 WHERE (((x'ec1e') NOT NULL)); -- 0ms;
SELECT DISTINCT ((((t2.c0) IS FALSE))<(((t2.c50)LIKE(NULL)))) FROM t2, v0, vt0 GROUP BY ((((t1.c43)|(t2.c50))) NOTNULL) LIMIT 444307365 OFFSET 7026251;SELECT ALL ((((((vt0.c0)GLOB(t1.c89)))AND(COUNT(*))))AND(CAST('-63859430' AS INTEGER))) FROM vt0, v0, t2, t1 WHERE (LENGTH(('' IN ()))); -- 0ms;
SELECT ALL FIRST_VALUE((((t1.c89) BETWEEN (t1.c43) AND (0.928013734410391)) IN ())) OVER () FROM t1 NOT INDEXED WHERE ((((NOT (x'')))OR((+ (-107251778))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(t2.c0)))OR(t2.c0)))=(((t1.c43)IS(t2.c2)))), (((((t2.c0, t1.c89, v0.c0))<((t2.c50, t2.c2, v0.c0))))&((((t2.c0)) BETWEEN ((t1.c43)) AND ((t1.c43))))), '1854391333' FROM vt0, t1;SELECT GROUP_CONCAT((((t2.c0, t2.c2, t1.c89)) BETWEEN ((v0.c0, vt0.c0, t1.c89)) AND ((t2.c2, t2.c0, t2.c50)))) OVER (), ((0.3076162100366636 IN (v0.c0)) IN ()), json_remove((NOT (v0.c0)), CASE t1.c43  WHEN t2.c0 THEN 0x1887de4f END) FROM t1, t2;SELECT ALL (((t2.c0 IN ('o-uLI'))) BETWEEN ((- (t2.c50))) AND (((t2.c50) IS TRUE))) FROM vt0, t2, v0, t1 WHERE ((((((~ (0.03369997944021086)))AND(PRINTF(x''))))AND(x'f2fe'))) GROUP BY ((((t2.c50, t1.c43, t2.c50)) NOT BETWEEN ((t2.c2, t1.c89, t2.c50)) AND ((v0.c0, t2.c50, t2.c2))) IN ((((t1.c43)) NOT BETWEEN ((t1.c43)) AND ((t2.c2))), ((v0.c0) NOTNULL))), (- (t2.c50)), (((t1.c89, t1.c43, t1.c43, vt0.c0, vt0.c0)) BETWEEN ((((t1.c43) NOT BETWEEN (v0.c0) AND (t2.c0)), ((t1.c89) ISNULL), (((t2.c50)) NOT BETWEEN ((vt0.c0)) AND ((t1.c89))), (((t1.c89)) NOT BETWEEN ((vt0.c0)) AND ((t2.c2))), (- (vt0.c0)))) AND ((v0.c0, ((NULL)<>(vt0.c0)), (']?' IN (t2.c2)), CASE -8.37516371E8  WHEN v0.c0 THEN t2.c50 ELSE t2.c0 END, ((vt0.c0)|(x'5314'))))) ORDER BY CASE ((v0.c0)AND(t2.c2))  WHEN (+ (vt0.c0)) THEN (t2.c50 IN (0.08695922814727719)) ELSE ((t2.c50)==(t1.c43)) END  NULLS LAST, ((((((((CAST(v0.c0 AS TEXT))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN t1.c89 THEN NULL WHEN t2.c0 THEN t2.c50 WHEN v0.c0 THEN t1.c89 WHEN v0.c0 THEN t2.c0 END)))OR(t2.c0 COLLATE NOCASE)))OR((t2.c50 IN ()))))OR(((0.5938368936594404)<=(t2.c2)))) DESC  NULLS FIRST LIMIT 1774348979 OFFSET 1549186453; -- 0ms;
SELECT DISTINCT t1.c43 FROM t2, t1 WHERE (CAST(((x'') NOT NULL) AS TEXT)) LIMIT 448555460 OFFSET -1603629848; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((CAST(NULL AS REAL))) AND (((((t1.c43))>=((t1.c89)))))) FROM vt0, t2 WHERE ((((0.8067158105887485) BETWEEN (x'') AND (x'')) IN (('1317906930' IN ()))));SELECT DISTINCT CASE WHEN ((t2.c50) NOT BETWEEN (t1.c43) AND (vt0.c0)) THEN ((t2.c2) BETWEEN ('352632609') AND (t2.c0)) END FROM t2, t1 GROUP BY 517727342, (((t2.c2)) BETWEEN ((((v0.c0) IS FALSE))) AND ((TOTAL_CHANGES()))), v0.c0, ((t2.c0 COLLATE BINARY) BETWEEN (((t1.c43)IS(v0.c0))) AND ((t1.c43 IN (v0.c0)))), (((t2.c50)) BETWEEN ((0X2c880112)) AND (((((t2.c50))<((vt0.c0)))))), ((COALESCE(t2.c50, t2.c2))%(((((vt0.c0)AND(v0.c0)))OR(t1.c89)))), CASE ((((((((t2.c2)OR(v0.c0)))OR(t1.c89)))OR(t1.c89)))AND(t1.c43))  WHEN ((t2.c2) IS FALSE) THEN (v0.c0 IN ()) ELSE (t2.c2 IN ()) END LIMIT 1555728588;SELECT DISTINCT ((((t1.c43) NOT BETWEEN (v0.c0) AND (t1.c43)))/(t2.c50)) FROM t1, vt0, t2 LIMIT 1940373011 OFFSET 1934609013;SELECT LIKELY(DISTINCT '-803580501') FROM t2; -- 0ms;
SELECT DISTINCT (((SQLITE_COMPILEOPTION_USED(v0.c0), t1.c43 COLLATE BINARY, ((t2.c2)%(vt0.c0))))>=((CAST(vt0.c0 AS TEXT), (((t1.c89))>((t2.c0))), ((t1.c89)%(t1.c43))))) FROM v0;SELECT DISTINCT CASE WHEN vt0.c0 THEN t2.c0 WHEN t1.c89 THEN vt0.c0 WHEN t1.c43 THEN t2.c2 WHEN t2.c50 THEN t2.c0 WHEN t1.c89 THEN v0.c0 ELSE t2.c50 END COLLATE RTRIM FROM vt0, t1, t2, v0 WHERE (NULL) ORDER BY CASE WHEN ((t2.c2) IS TRUE) THEN (v0.c0 IN (t1.c89)) WHEN ((t2.c50) IS TRUE) THEN (t1.c43 IN ()) WHEN CAST(NULL AS INTEGER) THEN ABS(DISTINCT t1.c43) END, (- (CAST(t2.c0 AS BLOB))); -- 0ms;
SELECT x'', DENSE_RANK() OVER (), (((((v0.c0, NULL, t2.c2, t2.c2, t2.c0))=((t1.c89, t2.c50, t1.c89, t2.c2, t1.c89))))*((t2.c50 IN ()))) FROM v0;SELECT (((v0.c0)) NOT BETWEEN ((json_quote(t2.c50))) AND (((+ (t1.c43))))) FROM t2, vt0 WHERE (JULIANDAY(json_object(x'', 0.9188849670907805, 0x13bbff80, NULL), ((0.6866838064723352) IS FALSE), CASE ''  WHEN x'' THEN 0xffffffffc9e057da WHEN '()' THEN x'' WHEN 0.6662962896389203 THEN x'' ELSE 0xffffffffa2f74730 END));SELECT DISTINCT CASE WHEN t2.c2 THEN ((0.6116367873458641)IS NOT(t2.c2)) ELSE t2.c50 END FROM v0 WHERE (((((x'') IS FALSE))<<(((-987437293) BETWEEN (0.3773354703748427) AND (47489111)))));SELECT DISTINCT t2.c50 FROM vt0 WHERE (((('F*')) BETWEEN (((((-415337785)) NOT BETWEEN (('1114744358')) AND ((0.013992894728016791))))) AND ((((0.07149474479870288) NOTNULL))))) ORDER BY ((CASE WHEN t2.c0 THEN vt0.c0 ELSE t2.c50 END) NOT BETWEEN (((t1.c43) NOTNULL)) AND (((t2.c0)>(t2.c2))))  NULLS FIRST, CAST(HEX(t2.c2) AS BLOB) DESC  NULLS FIRST;SELECT DISTINCT ((((t2.c2) NOTNULL))==((((t1.c89))<((t2.c2))))) FROM v0;SELECT ALL (~ (SUBSTR(t2.c50, -409226875))) FROM t2, t1 WHERE (json_valid(NULL) COLLATE BINARY) ORDER BY (~ (((((v0.c0)AND(t2.c0)))AND(t1.c89))));SELECT DISTINCT (((t1.c89 IN ()))<>(((t2.c0)IS NOT(t2.c0)))), ROW_NUMBER() OVER (), NTH_VALUE(((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c43)))!=((((vt0.c0, vt0.c0, vt0.c0))>=(('%Mf蔾ND]hf', t2.c0, 0.9728905767851685))))), ((NULL) NOT BETWEEN (t2.c2) AND (t1.c43)) COLLATE NOCASE) OVER () FROM t2, t1, vt0 WHERE (((((NULL)OR(2025859704))) BETWEEN (NULL COLLATE NOCASE) AND (UNLIKELY(DISTINCT '0.3922436767234472')))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1, t2, vt0; -- 0ms;
SELECT ALL ((IFNULL(NULL, v0.c0))<=(t1.c43 COLLATE RTRIM)) FROM v0 GROUP BY ((((-6.74315217E8)AND(t2.c0)))IS(CAST(v0.c0 AS REAL)));SELECT DISTINCT t1.c89 FROM vt0, v0;SELECT AVG(((t2.c0) BETWEEN (vt0.c0) AND (t1.c89))) FILTER(WHERE ((((t1.c43)<=(x''))) BETWEEN ((~ (''))) AND (TRIM(t2.c2)))) OVER () FROM t2, t1 WHERE (LIKELIHOOD(CAST(x'ee9a' AS TEXT), 0.16954603797816914)) ORDER BY (((t2.c0, t1.c89, vt0.c0)) BETWEEN ((CASE WHEN t1.c43 THEN '(7%6N{\' ELSE t1.c43 END, (t2.c0 IN ()), ((t2.c0)OR(t1.c89)))) AND ((CAST(t2.c2 AS INTEGER), LIKELIHOOD(t2.c0, 0.35336005892703715), ((0.3236762780034813)OR(vt0.c0))))) ASC, ((((t2.c0)AND(t1.c43))) BETWEEN (((v0.c0)%(vt0.c0))) AND (json_quote(vt0.c0))), t2.c50 ASC;SELECT ((x'') BETWEEN (0x6434d3df) AND (v0.c0 COLLATE RTRIM)) FROM t1, t2 LIMIT -1525425396;SELECT ALL (((((vt0.c0)AND(t1.c43)))AND(t2.c0)) IN ()), (CAST(t2.c0 AS BLOB) IN (((t2.c0)<(v0.c0)), ((t2.c50) NOT BETWEEN (0.4421513737828322) AND (vt0.c0)))), (((vt0.c0) IS FALSE) IN (CASE WHEN t2.c0 THEN t2.c2 WHEN t2.c2 THEN vt0.c0 WHEN vt0.c0 THEN t1.c89 WHEN t2.c50 THEN t2.c0 WHEN vt0.c0 THEN v0.c0 WHEN t2.c0 THEN vt0.c0 WHEN t2.c50 THEN t1.c89 ELSE '843856279' END, json(t1.c89))) FROM v0, vt0 ORDER BY CAST(CAST(v0.c0 AS TEXT) AS TEXT) ASC;SELECT DISTINCT (~ (CASE t1.c89  WHEN vt0.c0 THEN t2.c0 ELSE v0.c0 END)) FROM t2, v0 ORDER BY ((((((t2.c2)OR(t2.c2)))AND(t2.c0)))<((NOT (x'401e')))) DESC  NULLS FIRST;SELECT ALL NULLIF(DISTINCT t1.c43, t2.c2) COLLATE BINARY, json_array(t2.c0, vt0.c0, vt0.c0, ((t1.c43)OR(t2.c0))), ((((((v0.c0))<((t2.c50)))))>=(((((v0.c0))==((t2.c50)))))) FROM t1, t2, vt0 WHERE (((HEX(DISTINCT ''))AND(CAST(0.04067762308457079 AS BLOB))));SELECT ((LIKELIHOOD(t1.c89, 0.1875200288655))/(v0.c0)) FROM t1;SELECT DISTINCT COUNT(((NULL)/(v0.c0))) FROM v0, t2, vt0, t1; -- 0ms;
SELECT DISTINCT (~ (((t2.c2)<(vt0.c0)))) FROM vt0;SELECT ALL TOTAL((t2.c50 IN ())) FROM v0, t1, t2, vt0 WHERE ('ny6PDG') LIMIT 1668725283; -- 0ms;
SELECT DISTINCT COUNT(((t1.c43) BETWEEN (t1.c43) AND (t1.c43))) OVER () FROM t1, v0, vt0, t2 WHERE (TYPEOF(NULLIF(DISTINCT '', NULL))) LIMIT 402311888 OFFSET -1207475958; -- 0ms;
SELECT DISTINCT SUM(((t2.c50) NOT NULL)), ((((t2.c50)LIKE(t2.c2)))GLOB(GROUP_CONCAT(v0.c0))), CASE WHEN vt0.c0 THEN t1.c43 END COLLATE RTRIM FROM t1 WHERE (((-857247436)OR(ABS(NULL)))) LIMIT 1206035236 OFFSET 1663899382;SELECT DISTINCT CASE t2.c2  WHEN t2.c50 THEN vt0.c0 END COLLATE NOCASE FROM v0, vt0 WHERE (CAST(1156970136 AS INTEGER));SELECT (((((((((((t2.c0)OR(t2.c2)))OR(t2.c0)))AND(t2.c0)))OR(vt0.c0))))>((RTRIM(v0.c0)))) FROM t1, vt0, v0, t2 WHERE (x'4f39'); -- 0ms;
SELECT LAG(LAST_INSERT_ROWID(), ((((t1.c89)IS(vt0.c0)))<>(((vt0.c0) IS FALSE))), CASE WHEN INSTR(vt0.c0, t1.c89) THEN CAST(vt0.c0 AS NUMERIC) END) OVER () FROM t1, vt0; -- 0ms;
SELECT ((vt0.c0) BETWEEN (t1.c89) AND (t2.c0)) COLLATE BINARY FROM t2;SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)||(vt0.c0 COLLATE BINARY)) FROM v0, t2, vt0 INDEXED BY i50 INNER JOIN t1 ON '䨨x' WHERE (((((('1392741675') IS FALSE)))<=((CAST(0.8289934060024666 AS REAL)))));SELECT ALL '479650537' FROM t1, vt0, t2, v0 WHERE (((CASE WHEN '-832529807' THEN NULL WHEN -6.74315217E8 THEN x'' WHEN '0.36480844509345456' THEN NULL END) IS FALSE)); -- 0ms;
SELECT ALL ABS(t1.c89) COLLATE NOCASE COLLATE BINARY FROM v0, vt0 CROSS JOIN t1 ON ((((v0.c0)|(t1.c43)))/(CASE t2.c2  WHEN t1.c43 THEN t1.c43 ELSE t2.c50 END)) CROSS JOIN t2 ON CAST(t1.c43 AS NUMERIC) GROUP BY '97761799'; -- 1ms;
SELECT SUM(CAST(v0.c0 AS TEXT)) COLLATE RTRIM, ((((t2.c2) NOT BETWEEN (t2.c50) AND (vt0.c0)))>=((('-98925758')-(t1.c43)))), MAX(json(NULL)) FROM t1, t2, vt0 WHERE (((((((((((('s?')) NOT BETWEEN ((NULL)) AND ((x''))))AND((2101389246 IN ()))))AND((('')/(x'')))))OR(CASE 0.456147778292154  WHEN NULL THEN 0Xffffffffd912f657 WHEN NULL THEN '-1042084409' WHEN '2046193056' THEN '' END)))AND(NULL COLLATE NOCASE)));SELECT ALL ((((((((((v0.c0)OR(t2.c2)))OR('2077158808')))AND(vt0.c0)))AND(v0.c0))) NOT BETWEEN (CASE t2.c50  WHEN vt0.c0 THEN t1.c43 END) AND (((v0.c0) IS TRUE))) FROM t1, t2, v0;SELECT (((v0.c0)) BETWEEN (((~ (t2.c50)))) AND ((((NULL) IS TRUE)))) FROM t2, v0 LIMIT -21510041 OFFSET 1283658447; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t2.c0) IS TRUE)) OVER (), NTH_VALUE(((UPPER(t1.c89)) NOT BETWEEN (((((t1.c89)AND(t2.c2)))OR(t2.c50))) AND (((t1.c89)LIKE(t1.c43)))), LTRIM(((t1.c43) NOT BETWEEN (vt0.c0) AND (t1.c43)))) OVER ( ORDER BY (((NULL) BETWEEN (t2.c2) AND (t1.c89)) IN (((((((((t2.c0)OR('!Z')))AND(t2.c2)))OR(t1.c89)))OR(0.12897479132136247))))), SUM(((vt0.c0) BETWEEN (t2.c2) AND (v0.c0))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM t2, vt0, t1 WHERE (((('-36770765', x'', x'')) BETWEEN (('cU	ojpNK' COLLATE RTRIM, (('&u%d8Ꞿ')|(0xfffffffff8e0f622)), ((((NULL)AND(0.14507727573911666)))AND(NULL)))) AND ((((0X558989b4)IS NOT(x'')), ((NULL) IS TRUE), ((((0.9878265457392517)OR(0.0183434378244669)))AND('?䉏yreG㲅&r'))))));SELECT DISTINCT ((('47489111' IN ())) BETWEEN (((t2.c2)LIKE(t2.c2))) AND ((vt0.c0 IN ()))), (((t1.c89)) NOT BETWEEN (((~ (t2.c2)))) AND (((((t1.c89))<((t2.c0)))))), (((((t2.c0 IN ()))AND(t1.c89)))OR((~ (vt0.c0)))) FROM vt0, t2, v0, t1 WHERE (((0x11ef77a8)OR('saR''{')) COLLATE NOCASE) GROUP BY ((((((((((((TRIM(DISTINCT vt0.c0, t1.c89))OR((((x''))<=((t2.c50))))))OR(((t1.c43)-(t2.c50)))))OR(CAST(t2.c2 AS TEXT))))OR(((t2.c0) IS TRUE))))OR(vt0.c0 COLLATE BINARY)))OR((4.16680336E8 IN ()))); -- 0ms;
