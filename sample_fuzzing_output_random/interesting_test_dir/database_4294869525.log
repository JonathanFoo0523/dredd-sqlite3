-- Time: 2024/06/07 06:35:11
-- Database: database25
-- Database version: 3.40.0
-- seed value: 4294869525
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 REAL ); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'') WHERE CASE WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) THEN MAX(rt0.c1, rt0.c2) WHEN SUBSTR(rt0.c1, rt0.c2) THEN ((rt0.c1)-(rt0.c1)) WHEN ((rt0.c1) NOT NULL) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2)<<(rt0.c0)) WHEN ((NULL) ISNULL) THEN ((((((((rt0.c1)OR(0.8565481872553273)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)) END; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET c0=0xffffffff9b9c36ad, c2=0.5761684454244625; -- 1ms;
UPDATE rt0 SET c1='-1684261203' WHERE ((((((((((rt0.c0)OR(rt0.c2)))AND(NULL)))OR(rt0.c2)))OR(0.8565481872553273))) NOT BETWEEN (rt0.c1) AND (rt0.c2 COLLATE RTRIM)); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt1 SET (c2)=(NULL) WHERE rt1.c1; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt0 SET c2=x'', c2='^S'; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='-1684261203', c2='^S' WHERE (CAST(rt0.c1 AS NUMERIC) IN ()); -- 0ms;
UPDATE rt0 SET (c2)=(x'') WHERE ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<=(((rt0.c1) IS TRUE))); -- 0ms;
REINDEX BINARY; -- 0ms;
COMMIT; -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1684261203 unordered noskipscan'); -- 0ms;
ANALYZE; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT DISTINCT (- (((rt1.c3) NOT NULL))), (((((rt0.c1))<((rt1.c3))))IS NOT(TRIM(rt1.c3))), rt1.c0 FROM rt1, rt0; -- 1ms;
UPDATE rt0 SET c1='-1684261203', c0='-1684261203'; -- 0ms;
UPDATE rt0 SET c0=x'', c2='1585888381', c2=x''; -- 0ms;
END TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=x''; -- 0ms;
REINDEX  rt0; -- 0ms;
DELETE FROM rt1 WHERE json_patch(rt1.c1, (- (rt1.c3))); -- 0ms;
PRAGMA main.soft_heap_limit = 3762782269154722310; -- 0ms;
DROP VIEW v0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (NULL); -- 0ms;
PRAGMA locking_mode; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=-1684261203; -- 0ms;
PRAGMA application_id; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'76a2', '', '799094882'); -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0.211001588556878, c3=0Xffffffff8a08c39f, c3=0.8565481872553273; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c2)=(x'5d83', -1.979137121E9) WHERE (rt1.c0 IN (((rt1.c1) IS FALSE))); -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
UPDATE OR ABORT rt1 SET c3=1585888381 WHERE (((rt1.c2 IN ()))IS NOT(TRIM(DISTINCT rt1.c0, rt1.c3))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('R'); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'0ebc7afc'; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
PRAGMA temp.cache_size = 0; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1=NULL WHERE rt0.c2; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('3762782269154722310'), (-1.684261203E9), (x'92b7'); -- 0ms;
PRAGMA journal_size_limit = -3212297372965148442; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 652613134); -- 1ms;
INSERT OR ABORT INTO rt1(c3, c1, c2) VALUES (NULL, x'2e72', '-2072405636'), ('-1790356332', 'vX/ᴖO&ꍒ%ߵ', -2.072405636E9), (NULL, NULL, x'a93f'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c0) VALUES (x'', x'5ed6', 0.9271129036438336); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
PRAGMA cache_spill = false; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'f7b0', c0=0.9806501348163439 WHERE (NOT (rt0.c2)) COLLATE NOCASE; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(0.372255441444705) WHERE CAST('0.372255441444705' COLLATE RTRIM AS NUMERIC); -- 1ms;
UPDATE OR ABORT vt0 SET (c0)=(x'22d7'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(x''); -- 0ms;
END; -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (0X2fa13862, 0.1949900739246414), (NULL, NULL), (524919634, 0xffffffffb65d07f5); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1) VALUES (x'', x''), ('-447665754', 1.585888381E9), ('咔4MCiW\n', NULL); -- 0ms;
PRAGMA temp.threads; -- 0ms;
CREATE TABLE IF NOT EXISTS t33 (c0 REAL UNIQUE ON CONFLICT ABORT CHECK ( c0) NOT NULL , c1 REAL , c2 REAL ); -- 3ms;
INSERT INTO vt0(vt0) VALUES('merge=-784115045,3');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE DELETE ON t33 FOR EACH ROW  WHEN (((((((((((((((t33.c0, t33.c0, t33.c0)) NOT BETWEEN ((t33.c1, t33.c0, t33.c0)) AND ((t33.c0, t33.c2, t33.c1))))AND((((t33.c1))==((t33.c2))))))AND(((t33.c2)OR(t33.c1)))))OR(((t33.c1) NOT NULL))))AND(CAST(t33.c1 AS INTEGER))))AND(CASE WHEN t33.c2 THEN t33.c1 ELSE t33.c2 END)))AND(((((((((t33.c1)AND(t33.c1)))OR(t33.c0)))OR(t33.c0)))AND(t33.c0)))) BEGIN SELECT RAISE(ABORT, 'asdf');SELECT RAISE(IGNORE);SELECT RAISE(IGNORE);END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO rt1 VALUES (4.2933526E7, NULL, x'dda9', '750812319'), (0.6657165640797684, '(tvTVC', '-784115045', NULL), (x'f7b9', 7.50812319E8, NULL, NULL); -- 0ms;
INSERT OR ROLLBACK INTO t33(c0, c1) VALUES ('%⠔', 'mJ'); -- 0ms;
INSERT OR ABORT INTO rt1(c2) VALUES (x''), (0X5e86bc7d), (x''); -- 1ms;
PRAGMA main.incremental_vacuum; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET (c0)=(-1.235417099E9) WHERE ((((rt0.c0)-(0.10610007224291507))) BETWEEN (((rt0.c1) NOT NULL)) AND ((((rt0.c0, rt0.c1, rt0.c0, rt0.c0, rt0.c1))!=((rt0.c2, rt0.c0, rt0.c2, rt0.c1, rt0.c0))))); -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN ((('+YBzTTm')<<(NULL))) AND ('3762782269154722310')); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.0653846570640666); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(0.2006332976141919, 0Xfffffffffcc5643d, NULL) WHERE vt0.c0; -- 0ms;
UPDATE OR IGNORE t33 SET (c2)=('799094882') WHERE (- (((t33.c2)IS NOT(t33.c0)))); -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
UPDATE vt0 SET (c0)=(-1684261203); -- 0ms;
UPDATE t33 SET c1='mJ'; -- 0ms;
DROP TABLE t33; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (((x'')) NOT BETWEEN ((LIKELY(rt0.c2))) AND (('7'))) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0, rt0; -- 1ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt1; -- 0ms;
SELECT NULL FROM rt0; -- 0ms;
SELECT (~ ((~ (rt0.c0)))), ((rt1.c1)=((((rt1.c0, vt0.c0, rt1.c0)) BETWEEN ((-4.47665754E8, '', rt1.c3)) AND ((rt1.c3, x'', vt0.c0))))), (('?I') BETWEEN (CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c3 END) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) FROM rt1, vt0;SELECT DISTINCT SUM(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c1))) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c1 THEN (- (rt0.c1)) WHEN MAX(rt0.c1) THEN CASE rt1.c2  WHEN 0.8179585724499343 THEN rt1.c2 ELSE vt0.c0 END WHEN COALESCE(rt1.c0, rt1.c3, rt1.c0, rt0.c2) THEN ((rt0.c0)GLOB(vt0.c0)) END, GROUP_CONCAT((NOT (rt0.c2))) OVER (), (((NULL, rt1.c0, rt1.c0, rt1.c2, rt0.c0))<((rt0.c1, rt0.c0, rt1.c1, rt1.c1, rt1.c2))) COLLATE NOCASE FROM vt0, rt1, rt0 GROUP BY CAST(CASE 0.03446904629504599  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END AS NUMERIC), ((NULL) BETWEEN (rt1.c2) AND (CASE '-1790356332'  WHEN rt0.c0 THEN vt0.c0 END)), (0Xffffffff9843bcc8 IN (((((rt1.c2)AND(rt1.c2)))AND('')))) HAVING rt1.c1; -- 0ms;
SELECT DISTINCT ((391844195)||(CAST(rt0.c0 AS INTEGER))) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1) ISNULL)) ISNULL); -- 0ms;
SELECT TOTAL(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END) OVER ( RANGE ((((rt0.c0)!=(vt0.c0))) BETWEEN (((((((((rt1.c3)OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c2)))AND(rt0.c1))) AND (CAST(rt0.c2 AS TEXT))) PRECEDING EXCLUDE GROUP) FROM rt1, rt0 WHERE ((NULL COLLATE NOCASE IN ('7' COLLATE NOCASE))) GROUP BY ((rt0.c2) ISNULL) HAVING ((rt1.c3 COLLATE NOCASE)GLOB(((rt1.c1) IS FALSE)));SELECT (((rt1.c0)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((('1785678355') NOTNULL)))), ((((((vt0.c0)OR(rt1.c2)))OR(rt0.c0)))<<(((rt1.c1) NOT NULL))), SUM((x'' IN ())) OVER () FROM rt1 GROUP BY (((((- (0.5061281057559939)))AND(CAST(rt0.c0 AS BLOB))))AND((vt0.c0 IN ()))) HAVING x'';SELECT ALL CUME_DIST() OVER (), ((((rt0.c1) IS FALSE))<(LIKELIHOOD(DISTINCT rt0.c2, 0.10687165766932205))), (~ (rt1.c0)) FROM rt1 WHERE (x'');SELECT DISTINCT ((rt0.c2)IS(vt0.c0)) COLLATE NOCASE FROM rt0, vt0 WHERE (((((((((((((0x15a554a5 COLLATE NOCASE)AND((((('0.8565481872553273')AND(NULL)))AND(0.6294479210131775)))))AND((((x'', NULL, 0.25127305675902867))==((NULL, NULL, ''))))))AND(x'b1da')))OR((((x'')) NOT BETWEEN (('-1874479056')) AND ((''))))))AND(CAST(0.22795776513602217 AS REAL))))AND((0.03446904629504599 IN (-237695849))))); -- 0ms;
SELECT ((rt1.c3) BETWEEN (((rt1.c0)%(rt1.c2))) AND ('U')) FROM rt0, vt0 NOT INDEXED, rt1 WHERE ('42933526'); -- 0ms;
SELECT ALL (((rt1.c0)<<(rt1.c2)) IN ()) FROM rt1, rt0; -- 0ms;
SELECT CASE CAST(rt1.c1 AS INTEGER)  WHEN rt0.c0 THEN GROUP_CONCAT(vt0.c0) WHEN ((rt0.c0)>>(rt1.c1)) THEN ((rt1.c3) BETWEEN (rt0.c1) AND (vt0.c0)) WHEN ((((rt0.c2)OR(rt1.c2)))AND(rt1.c0)) THEN rt1.c2 WHEN SQLITE_COMPILEOPTION_GET(rt0.c0) THEN vt0.c0 WHEN MAX(rt1.c0) THEN ((vt0.c0)||(rt0.c1)) WHEN ((rt0.c0)>>(rt0.c0)) THEN CASE rt1.c2  WHEN '3762782269154722310' THEN rt1.c0 WHEN NULL THEN rt0.c1 WHEN rt1.c3 THEN rt1.c0 END WHEN load_extension(rt1.c3) THEN ((x'')IS NOT(rt1.c1)) ELSE rt1.c1 END FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL CAST(((rt1.c1)<<(rt0.c1)) AS TEXT) FROM rt0 WHERE (CAST(UNLIKELY(x'') AS TEXT));SELECT DISTINCT (((rt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c2)))) AND ((((rt1.c1) NOT NULL)))), (~ (CASE x''  WHEN vt0.c0 THEN rt1.c1 END)), ((((rt1.c2)<(rt0.c0)))*(((rt1.c0) NOT NULL))), ((((rt0.c1)OR(rt1.c3)))AND(NULL)) COLLATE BINARY COLLATE NOCASE, SUM(((vt0.c0)OR(rt0.c1))) FROM vt0, rt1;SELECT DISTINCT ((MAX(vt0.c0))/(CAST(rt1.c0 AS REAL))) FROM rt0, rt1, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (json_quote(rt0.c2) IN ()), GROUP_CONCAT(((((((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c3)))OR('-1979137121')))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))), 0.9271129036438336 FROM rt0, rt1 WHERE (((('42933526')*('H')) IN (LIKELY('14716930'), ((NULL)*(14716930)))));SELECT '333868725', IFNULL(DISTINCT (((rt1.c2))<=((rt0.c0))), (rt0.c1 IN ())), COUNT(LTRIM(rt1.c1, rt0.c2)), ((((((rt0.c2)<=(rt0.c1)))AND(COUNT(*))))AND(CAST(rt1.c3 AS BLOB))), (NULL IN (CAST(rt1.c2 AS BLOB))) FROM rt1;SELECT DISTINCT ((rt0.c1 IN ()) IN ()) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL TOTAL(CASE rt0.c0  WHEN '' THEN vt0.c0 END) OVER (), ((x'')+(0.06321649861361167)), ((CAST(rt0.c1 AS INTEGER))<>(rt1.c0)) FROM rt0, rt1, vt0 WHERE (SQLITE_VERSION() COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((CAST('	GO' AS NUMERIC))IS(rt0.c2 COLLATE RTRIM)), (((((rt1.c1) ISNULL)))<=((rt0.c0))), vt0.c0 FROM rt0;SELECT ALL ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))GLOB(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) FROM rt1 WHERE (CASE WHEN (NOT (1585888381)) THEN ((((x'')OR(0.0653846570640666)))AND('-871379612')) END) LIMIT -1149381070 OFFSET -1129273073;SELECT DISTINCT CASE WHEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0))) THEN UPPER(rt1.c1) ELSE rt1.c1 END FROM rt0;SELECT (((rt1.c3 IN ()))||((rt0.c0 IN ()))), ((RTRIM(rt0.c0))>(x'')), (- ((NOT (rt1.c2)))) FROM rt1, rt0 UNION ALL SELECT ALL (('' COLLATE RTRIM) IS TRUE), ((CAST(rt1.c0 AS INTEGER)) NOTNULL), AVG(((((rt1.c0)OR(vt0.c0)))AND(rt1.c1))) OVER () FROM rt1 ORDER BY ((rt0.c1)+(rt1.c3)) COLLATE NOCASE;SELECT ((((rt1.c1)OR(TOTAL(rt0.c0))))OR(SQLITE_SOURCE_ID())) FROM rt1 GROUP BY ((rt1.c1) NOT NULL) COLLATE RTRIM;SELECT DISTINCT (((('-1979137121')%(-1129273073))) ISNULL) FROM rt0 NOT INDEXED, vt0, rt1; -- 0ms;
SELECT ALL (MIN('-871379612') IN ()) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL HEX(rt1.c3) FROM rt1, rt0 WHERE ((~ (((((-8.71379612E8)OR('')))AND(x'83f5'))))) GROUP BY (((IFNULL(DISTINCT rt0.c1, rt1.c2), ((rt1.c3)>>(rt1.c0)), ((rt0.c1) IS FALSE)))<=(((((rt0.c1))>((rt0.c1))), rt1.c1 COLLATE RTRIM, (vt0.c0 IN ())))) HAVING ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END)/((+ (rt1.c1)))); -- 0ms;
SELECT DISTINCT (((rt0.c2 COLLATE BINARY, (('') NOT NULL), TOTAL(rt0.c0)))>((AVG(rt1.c1), CAST(rt0.c1 AS INTEGER), TYPEOF(rt0.c1)))) FROM vt0 WHERE ((+ (((NULL) NOT BETWEEN (x'c5496b41') AND (0x7aa5e064)))));SELECT CAST(((((rt1.c2)AND(rt1.c0)))OR(vt0.c0)) AS TEXT) FROM rt0, rt1, vt0 WHERE (ABS(x'')); -- 0ms;
SELECT ((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)) COLLATE BINARY, NULL, x'' FROM rt1; -- 0ms;
SELECT ALL CASE (- (rt1.c1))  WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c0))) THEN rt0.c1 END FROM rt0, rt1 WHERE (((-7.84115045E8 IN ()) IN ((0.3518422612150922 IN (x'', 0.8340710986597224))))) GROUP BY CASE WHEN rt1.c2 COLLATE BINARY THEN rt1.c3 ELSE 0x5b0812d6 END, ((((rt0.c1) IS FALSE)) NOT NULL), rt0.c2, CAST((rt1.c0 IN ()) AS TEXT), ((((((rt1.c1) ISNULL))AND((rt1.c1 IN ()))))AND(((((0.06628699179653763)OR(rt1.c0)))OR(rt1.c0))));SELECT DISTINCT (+ (((vt0.c0)==(vt0.c0)))) FROM rt1 GROUP BY ((CAST('' AS REAL))>(0.1325625222117398)) HAVING TOTAL(x'');SELECT DISTINCT ((((rt0.c1 COLLATE BINARY)AND(rt1.c1)))AND(((rt1.c0)*(691940340)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((((rt1.c2)AND(vt0.c0)))OR(rt1.c1)) IN ()) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c1))>((rt1.c0))) AS NUMERIC) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt0 WHERE (INSTR((- (NULL)), CASE '-238450797'  WHEN 'yBE.' THEN NULL END));SELECT ((((rt0.c2 COLLATE RTRIM)OR(((rt1.c1)>>(rt0.c1)))))AND(rt1.c3)), '\''-ᴖ-', ((((rt0.c2, rt1.c3, rt1.c0))<((rt1.c3, -1630380036, rt0.c2))) IN ()) FROM vt0, rt1, rt0 WHERE (CASE CASE NULL  WHEN NULL THEN 3.33868725E8 WHEN '-1802834153' THEN x'' WHEN NULL THEN 0.562210927231559 WHEN 0.10004036095480429 THEN '' WHEN '9L#\r' THEN 'u' END  WHEN '9L#\r' COLLATE BINARY THEN ((('1080373864')) BETWEEN ((x'9470')) AND ((x''))) END); -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt0 WHERE ((NOT (((x'')+(NULL))))); -- 4ms;
SELECT DISTINCT PERCENT_RANK() OVER (), CASE ((rt0.c0)AND(rt1.c2))  WHEN ((NULL) IS FALSE) THEN rt1.c2 COLLATE RTRIM END, (((rt1.c1)) NOT BETWEEN ((((((((((((((((((rt1.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt1.c3)))AND(rt1.c0)))OR(0.21035228178959042)))OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c0)))) AND (((((rt1.c3, rt1.c2, vt0.c0))==((rt1.c3, rt1.c2, rt1.c2)))))) FROM vt0;SELECT DISTINCT (+ (((rt1.c3) NOTNULL))) FROM vt0, rt1 WHERE (((((NULL)-(x''))) ISNULL)) GROUP BY TRIM(rt1.c2), IFNULL(COALESCE(rt0.c2, vt0.c0), ((rt0.c1)>=(rt1.c2))), (((rt1.c1, rt1.c3, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))) COLLATE BINARY HAVING '-1789518121';SELECT ((((rt1.c3)/(rt1.c2))) NOT BETWEEN (((((((((rt1.c2)OR(rt1.c3)))OR(rt0.c1)))OR(rt1.c3)))AND(rt1.c2))) AND (CASE rt1.c3  WHEN rt0.c1 THEN 0Xffffffffb26fcae7 ELSE rt1.c3 END)), PERCENT_RANK() OVER ( RANGE ((x'') NOTNULL) PRECEDING), GROUP_CONCAT(((rt1.c0)<<(rt1.c0))) OVER () FROM rt1, rt0;SELECT rt1.c0 FROM rt0, vt0 NOT INDEXED, rt1 LIMIT -1474603715 OFFSET 116287335; -- 0ms;
SELECT ALL ((0.5055693444609092)IS(((vt0.c0)<(rt0.c2)))), CAST(((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB), ((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c3)))AND(rt0.c1)))AND(rt1.c1)) COLLATE BINARY, CASE WHEN x'b085' THEN rt1.c2 COLLATE RTRIM WHEN ((rt1.c1) IS FALSE) THEN ((((rt1.c0)AND(rt1.c2)))OR(vt0.c0)) WHEN ((rt0.c0)&(rt0.c0)) THEN (~ (vt0.c0)) ELSE rt1.c2 COLLATE RTRIM END, ((((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c3))) NOT BETWEEN (((rt0.c2)GLOB(rt0.c0))) AND ((~ (rt1.c2)))) FROM vt0 WHERE ((~ (607151491))) GROUP BY 0.15271274801493395 COLLATE NOCASE;SELECT ALL ((((((rt0.c2)AND(rt1.c1)))OR(vt0.c0))) NOT BETWEEN (rt1.c1) AND ((rt1.c3 IN ()))) FROM vt0, rt1, rt0 WHERE ((NOT (CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT rt0.c0 COLLATE NOCASE FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CAST(((((rt0.c2)AND(rt1.c0)))OR(vt0.c0)) AS BLOB), ((rt1.c2 COLLATE BINARY)>=(((rt1.c2)LIKE(rt0.c1)))), rt1.c3 FROM rt0, rt1, vt0; -- 0ms;
SELECT LIKE(rt1.c2 COLLATE BINARY, 14027661) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT ((NULL) NOT NULL) FROM rt1, rt0, vt0 WHERE (((((CASE x''  WHEN NULL THEN 0.7493515635975085 END)AND(CASE ''  WHEN x'' THEN '霎j7?' ELSE NULL END)))OR(CAST('0.6294479210131775' AS TEXT)))); -- 0ms;
SELECT SUM(MIN(UPPER(rt0.c2))) FROM vt0, rt0, rt1 GROUP BY ((((vt0.c0)<=(rt0.c0))) NOT BETWEEN (COALESCE(DISTINCT rt1.c1, rt0.c1)) AND (((((rt0.c0)OR(rt1.c2)))AND(rt1.c1))));SELECT DISTINCT -2047702293, (+ (((rt1.c0) NOT NULL))), TRIM(DISTINCT UNICODE(rt1.c1)) FROM rt1, rt0; -- 0ms;
SELECT ALL (NULL COLLATE RTRIM IN (((rt1.c2)IS(vt0.c0)), ((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c3)))) FROM rt0, rt1, vt0; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0, rt0 WHERE (((('0.6657165640797684', 'F5', x'')) NOT BETWEEN ((((NULL) NOT NULL), ABS(NULL), (((NULL))>((x''))))) AND (('799094882', ((0.2822160861440246)GLOB(x'')), ((-1.235417099E9) BETWEEN (x'ffd3') AND (-447665754)))))); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (NULL)) FROM rt1;SELECT ALL ((((((rt1.c3) IS FALSE))OR(CAST(rt1.c1 AS TEXT))))AND(LIKELY(rt1.c2))), CASE CASE rt1.c3  WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END  WHEN ((rt0.c2)<(rt0.c2)) THEN ((((rt0.c2)OR(rt1.c0)))AND(rt0.c1)) WHEN ((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)!=('\nd')) END, (((rt0.c2) NOTNULL) IN (CASE WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c2 ELSE rt0.c0 END)) FROM vt0, rt1, rt0 WHERE (CASE (('')>>('894145473'))  WHEN CAST(NULL AS INTEGER) THEN ((x'')<(0xfffffffff191085d)) ELSE ((('7+', x'', '')) NOT BETWEEN ((x'', x'dc60', '3762782269154722310')) AND ((x'35a5', NULL, 0.6384445236383766))) END); -- 0ms;
SELECT ((CAST(rt1.c3 AS TEXT))GLOB(AVG(rt1.c3))) FROM vt0, rt1 WHERE (CAST((NULL IN ()) AS REAL)) LIMIT 474724878 OFFSET -1227271651; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c0))) OVER () FROM rt1, rt0 WHERE (((((0xffffffff9045b830) BETWEEN (x'') AND ('-400954290'))) BETWEEN (((x'') BETWEEN (x'dc7c') AND (x''))) AND ((((((((('-1801587890')OR(1.4027661E7)))AND(0.6027309995630039)))AND(NULL)))OR(NULL))))); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1, vt0 WHERE ((- ('-811268990'))) LIMIT 1629992282; -- 1ms;
SELECT DISTINCT ((((((rt1.c1)OR(rt0.c1)))AND(rt0.c2))) NOT NULL), ((rt1.c1)!=(('-1802834153' IN ()))), AVG(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2))) OVER () FROM vt0 WHERE (((((0.1265439946599557) IS FALSE)) NOT BETWEEN (NULL COLLATE NOCASE) AND (((-224148383) NOT BETWEEN (238560631) AND (0.8340710986597224)))));SELECT ALL rt0.c1, LAST_VALUE(((rt1.c1)-(((((rt1.c1)OR(vt0.c0)))OR(rt1.c3))))) OVER (), ((((((rt1.c2)OR(rt1.c1)))AND(rt0.c1))) NOT NULL) FROM vt0, rt1 WHERE (((('-1937533170') ISNULL) IN (((x'') BETWEEN ('r') AND ('TdPlxssZ')))));SELECT DISTINCT (- ((((rt1.c2, rt1.c3, vt0.c0, rt1.c2, rt0.c2)) BETWEEN ((rt1.c1, vt0.c0, rt1.c1, '', x'')) AND ((rt1.c3, vt0.c0, vt0.c0, vt0.c0, rt1.c1))))) FROM vt0, rt0;SELECT DISTINCT ((rt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c1)))) AND (((((rt0.c2)OR(rt1.c2)))OR(rt0.c0)))) FROM rt1;SELECT ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END) NOTNULL) FROM vt0, rt0, rt1 LIMIT 0 OFFSET 2057691236; -- 0ms;
SELECT DISTINCT (+ ((rt1.c3 IN ()))) FROM rt1 WHERE (NULLIF(CASE WHEN 'qj' THEN x'' WHEN 0.9270438536345131 THEN NULL WHEN x'' THEN x'' END, 'q{	')); -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT NULL)) NOT BETWEEN (((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt0.c2 END)), (((- (rt1.c2)))*((((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))), MIN(MIN(((((rt1.c3)OR(rt1.c0)))OR(NULL)))) FROM rt1, vt0;SELECT ((((rt1.c3) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (rt1.c0) AND (((((rt1.c3)OR('-1982085433')))AND(rt0.c0)))) FROM vt0 WHERE ((((((NULL, x'', ''))<=((x'9f13', 0X24306583, 0.2954294193281728)))) NOT BETWEEN ((((x'', x'', 0.5761684454244625))=(('w#[n', x'c817', 0.1325625222117398)))) AND ((- (0.22922745405804312)))));SELECT DISTINCT 1053189774, x'', ((((((rt0.c0)OR(vt0.c0)))AND(rt1.c0)))<=(rt1.c0 COLLATE RTRIM)) FROM rt0 LIMIT 1781949169 OFFSET -54172611;SELECT AVG(((rt1.c2)-(rt0.c1))) OVER () FROM rt1 WHERE (((((((((((x'5f02')IS NOT('{t}')))AND((('') NOT BETWEEN (x'5c9d') AND (x'')))))OR((('')||(0.48403807665202636)))))OR(((((((((0.04318985136933984)AND(NULL)))AND(NULL)))OR(NULL)))AND(NULL)))))AND(((0.4786544861068076)==(0.06628699179653763)))));SELECT ALL ((vt0.c0 COLLATE RTRIM)>(CASE WHEN rt0.c1 THEN x'2e6d' WHEN rt1.c1 THEN rt0.c0 WHEN -4.0095429E8 THEN rt1.c1 END)) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT (rt0.c1 IN ()), ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt1.c3))) BETWEEN (NULL) AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)), CASE WHEN ((((rt1.c3)AND(rt0.c0)))OR(rt1.c3)) THEN (x'142a' IN ()) WHEN (rt0.c1 IN (rt0.c2)) THEN ((((rt1.c1)OR('霎j7?')))AND(rt1.c3)) WHEN COUNT(rt1.c2) THEN ((rt0.c2)IS NOT(rt1.c3)) ELSE ((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END FROM vt0, rt0 WHERE ((((NULL)) NOT BETWEEN ((((x'6094') BETWEEN ('Bw') AND (1080373864)))) AND (((- (NULL))))));SELECT ALL CAST(((((rt0.c2)AND(rt1.c3)))AND('S*㏛x')) AS NUMERIC) FROM rt1, rt0 WHERE (NULL) GROUP BY CASE ((((rt1.c2)AND(rt0.c1)))OR(rt0.c2))  WHEN (rt0.c2 IN (vt0.c0)) THEN (- (rt1.c1)) WHEN (rt1.c3 IN (rt0.c0, rt1.c2)) THEN ((('')) BETWEEN ((vt0.c0)) AND ((rt1.c1))) WHEN CASE WHEN rt1.c0 THEN rt1.c0 END THEN CASE '-1011398188'  WHEN rt0.c0 THEN rt0.c1 END ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) END;SELECT DISTINCT ((UPPER(0.15260877244382676))-((((rt0.c0))=((rt1.c1))))) FROM rt0, vt0;SELECT ALL ((((((((((((COUNT(*))OR((((rt0.c1, rt1.c1, rt1.c0, '', rt0.c2)) BETWEEN ((rt1.c0, '-1899595970', rt1.c3, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c2, rt0.c2, rt1.c2))))))AND((- (rt1.c0)))))OR(CAST(rt1.c0 AS BLOB))))OR((((rt1.c0, rt1.c1, rt1.c2))<=((rt0.c2, '9.b)%\r?Hv', rt1.c3))))))AND((vt0.c0 IN (rt0.c1, rt0.c1)))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) FROM rt1 ORDER BY CAST(((rt0.c0)AND(rt1.c0)) AS TEXT) DESC, (((vt0.c0)) NOT BETWEEN ((json_remove(rt1.c1, rt1.c0))) AND ((((rt0.c0)<>(NULL))))) ASC  NULLS FIRST;SELECT ALL CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) FROM rt1 WHERE (CAST(CAST(x'' AS TEXT) AS NUMERIC));SELECT ALL ((((rt0.c2) NOT NULL)) NOT BETWEEN (rt1.c3) AND (((vt0.c0) NOTNULL))), (((rt0.c0, rt0.c1, NULL)) NOT BETWEEN (((rt0.c1 IN ()), TOTAL(rt0.c0), ((((rt0.c1)AND(rt1.c2)))AND(rt1.c2)))) AND ((rt0.c1 COLLATE RTRIM, ABS(rt1.c1), vt0.c0 COLLATE BINARY))), (((COUNT(*)))=((((rt0.c1)%(rt1.c3))))) FROM vt0 WHERE (((('Z5w*')) NOT BETWEEN ((CAST('2111606937' AS NUMERIC))) AND ((((x'') NOT BETWEEN ('') AND (-1.011398188E9))))));SELECT GROUP_CONCAT(((rt1.c0) IS FALSE)) OVER () FROM rt0, rt1, vt0 LIMIT -784115045; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c0)&(vt0.c0))) OVER () FROM rt0, vt0, rt1 WHERE ((0.9763279959924233 IN ())) ORDER BY ((((((((((vt0.c0)&(rt0.c2)))OR(((rt1.c0)!=('3217814')))))OR(((rt1.c0)IS NOT(rt1.c2)))))OR(x'')))OR((rt1.c2 IN ()))) DESC  NULLS LAST; -- 0ms;
SELECT (((rt1.c1)IS NOT(rt0.c1)) IN (((((((((rt1.c1)AND(rt1.c0)))AND(vt0.c0)))AND(rt1.c0)))OR(-899277495)), (((rt0.c2)) NOT BETWEEN ((750812319)) AND ((rt1.c3))))) FROM vt0, rt0;SELECT DISTINCT CAST(vt0.c0 AS INTEGER) FROM rt0, rt1, vt0; -- 0ms;
SELECT CAST((NOT (rt0.c1)) AS TEXT) FROM vt0, rt1 WHERE (CAST(CAST(NULL AS REAL) AS TEXT));SELECT ((((vt0.c0) ISNULL))-(0xffffffffefca2617)) FROM vt0, rt0 GROUP BY ((((((rt1.c2)OR(rt0.c0)))AND(rt1.c3))) NOTNULL), (('')IS NOT((((rt0.c1))<((rt1.c0))))), (((vt0.c0 IN ())) NOT BETWEEN ((((rt0.c2))>=((vt0.c0)))) AND (CASE WHEN rt0.c0 THEN rt0.c2 END)) HAVING rt0.c1;SELECT (NOT ((- (rt0.c1)))), ((CAST(rt1.c0 AS NUMERIC))*(((((((((rt1.c0)AND(rt1.c3)))OR(vt0.c0)))OR(rt1.c2)))OR(rt1.c3)))), CASE rt1.c0  WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE rt1.c0  WHEN rt1.c2 THEN -1739051505 WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 END ELSE (~ (rt1.c2)) END, ((MAX(rt0.c1)) NOTNULL), CAST(rt1.c0 AS INTEGER) FROM vt0 WHERE (CASE 0.7039881090611521  WHEN ((x'')>=(x'f536')) THEN CAST(0.5825234957937537 AS REAL) ELSE CAST(36206232 AS REAL) END);SELECT ALL ((((((rt0.c2) BETWEEN (rt1.c0) AND (vt0.c0)))AND(COUNT(rt0.c2))))AND(((((rt1.c1)OR(x'f01c')))AND(vt0.c0)))), CUME_DIST() OVER (), rt0.c0 FROM vt0;SELECT CAST(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1)) AS BLOB) FROM rt0 WHERE (((0.6773470416349081 COLLATE RTRIM) IS FALSE));SELECT ALL rt0.c0, SQLITE_COMPILEOPTION_GET(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c1))), CASE (rt1.c0 IN ())  WHEN (((vt0.c0))==((rt1.c0))) THEN rt1.c2 END FROM rt1 WHERE ((~ (CAST(x'' AS NUMERIC))));SELECT DISTINCT ((((rt0.c0) ISNULL))IS(CHAR(rt0.c1, rt0.c0, rt1.c2, rt0.c0, rt1.c1))), TOTAL(((((rt0.c1)AND(rt1.c0)))AND(NULL)) COLLATE NOCASE) OVER ( ORDER BY CASE '0.6773470416349081'  WHEN '793218734' COLLATE RTRIM THEN (~ (0.9237768689293633)) ELSE ((rt1.c1)>(rt1.c0)) END ASC), UNLIKELY((NOT (rt1.c1))), TOTAL(((rt1.c1) BETWEEN (rt0.c2) AND (vt0.c0))) OVER (), (rt0.c2 IN ()) COLLATE BINARY FROM rt1 ORDER BY ((((rt0.c2) ISNULL)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c1) IS FALSE))) DESC  NULLS LAST, (CASE WHEN rt1.c0 THEN rt0.c2 END IN (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c1 ELSE rt1.c3 END, ((vt0.c0) ISNULL))) ASC LIMIT 598746908;SELECT TOTAL((~ (rt0.c0))), RANK() OVER (), ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c2 END) IS FALSE) FROM rt1 INNER JOIN vt0 ON (- (rt0.c0 COLLATE NOCASE)) WHERE (CAST(NULLIF(DISTINCT 0.27726290171858436, '-242153379') AS TEXT));SELECT DISTINCT (((+ (rt1.c3))) NOT BETWEEN ((rt1.c3 IN (rt1.c3, rt0.c1))) AND ('UaV7PX茄ླྀd')), CAST(((rt1.c0)>>(rt0.c1)) AS TEXT), (('-37068691')OR(((rt1.c3) NOT NULL))) FROM vt0, rt1 WHERE ((NOT (((x'')>(0.5364697460295587)))));SELECT DISTINCT (+ (((rt0.c0)*(rt0.c1)))), (rt1.c1 IN (CASE rt0.c2  WHEN rt0.c1 THEN rt1.c3 ELSE rt1.c3 END)), ((rt0.c2 IN ()) IN ()) FROM vt0, rt0, rt1 WHERE ((((('') BETWEEN (x'c9cc') AND (0.393830429639359))) NOTNULL)); -- 0ms;
SELECT ((TOTAL(rt1.c1))>(((rt0.c1)<<(0.20481742225125066)))) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL HEX(DISTINCT COUNT(rt1.c0)) FROM vt0;SELECT ALL CAST(json_insert(rt1.c1, rt1.c3, rt0.c2) AS BLOB), (((rt0.c1)) BETWEEN (((((rt1.c3))==((rt0.c0))))) AND (((((rt1.c0))<=((rt0.c2)))))), UNICODE(SUM(rt0.c1)) FROM rt1, rt0;SELECT DENSE_RANK() OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL CASE WHEN rt1.c3 THEN NULL END COLLATE NOCASE COLLATE BINARY FROM rt0, vt0;SELECT DISTINCT vt0.c0, COUNT((NOT (rt1.c2)) COLLATE NOCASE) OVER (), (((NOT (rt1.c0)))-(((vt0.c0) NOTNULL))) FROM rt0 WHERE (CAST(((-1571763621)!=('~p')) AS TEXT)) GROUP BY LIKELIHOOD((rt0.c2 IN ()), 0.3237344990792381) HAVING (((rt1.c2, vt0.c0, rt0.c2)) BETWEEN ((rt0.c2, (vt0.c0 IN ()), (((NULL))>((rt1.c0))))) AND ((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE vt0.c0 END, ((rt1.c2)<>(rt1.c3)), ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))));SELECT DISTINCT CAST(rt0.c0 AS TEXT) FROM vt0 CROSS JOIN rt0 ON (~ ((((rt1.c2)) NOT BETWEEN ((0.733242217730455)) AND ((rt1.c1))))) WHERE (CASE WHEN ((((((((x'')AND(-1495334963)))OR(-1.874479056E9)))OR(NULL)))OR(0.5288842794921883)) THEN ((((((((0.2233630039973452)AND('311119100')))AND(0X1b139334)))AND('0.2233630039973452')))OR(x'9711')) ELSE ((((0.5825234957937537)AND(NULL)))AND(0.8099552380683974)) END);SELECT DISTINCT (((~ (rt0.c2)))%(rt1.c1)) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c0)==(0.8927525286630292))) IS FALSE) FROM rt1, vt0, rt0 LIMIT 1510315517 OFFSET -901114875; -- 0ms;
SELECT ALL rt1.c2 FROM rt1 WHERE ((((((0.7187156558329739)) NOT BETWEEN ((x'')) AND ((NULL)))) BETWEEN (((x'8b17')<(0.6258315338697519))) AND ((((0.567303898011778)) BETWEEN ((x'')) AND ((0.5603093522657466)))))); -- 0ms;
SELECT ALL (AVG(rt1.c2) IN (rt0.c1 COLLATE NOCASE, (rt0.c0 IN (NULL, rt1.c3)))) FROM rt0, vt0, rt1; -- 0ms;
SELECT CAST(COUNT(*) AS REAL) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT (+ (rt1.c3)) FROM rt1 WHERE (((((((((((NULL) NOT BETWEEN (0x7aa5e064) AND (NULL)))OR(((NULL) NOTNULL))))AND((((0Xffffffff9e01ef6f)) NOT BETWEEN ((0.5364697460295587)) AND ((0Xffffffffdc32abf5))))))AND(RTRIM(x'1efc'))))OR(CASE 0X293e2bf4  WHEN '1704641035' THEN -1741846946 WHEN 0Xfffffffff3389832 THEN '' WHEN 0.8392995105093803 THEN x'' ELSE NULL END))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c2))&(((rt0.c2)<>(rt0.c0)))) FROM rt1;SELECT DISTINCT (~ (rt0.c0)) COLLATE BINARY FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) IS TRUE) AS TEXT) FROM rt1, rt0, vt0 WHERE (CASE WHEN ABS(0.7124667080486593) THEN ((x'')=('1213777383')) END) GROUP BY (NOT (rt1.c0 COLLATE BINARY)), CAST(((((rt1.c3)AND(0.009621665248737199)))OR(vt0.c0)) AS TEXT), CASE WHEN x'' THEN 0.5189613439532046 WHEN NULL THEN ((rt1.c0) ISNULL) WHEN ((rt0.c0)LIKE(rt1.c0)) THEN (((vt0.c0))<=((rt1.c3))) ELSE CAST(rt1.c2 AS TEXT) END HAVING ((CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c0 END)<=(GROUP_CONCAT(NULL))); -- 0ms;
SELECT DISTINCT SUM(rt1.c1) OVER () FROM rt1, vt0 WHERE (CASE ((((x'')OR(0.8099552380683974)))OR(NULL))  WHEN ((x'7687')<(NULL)) THEN MIN(0.8135621920653162, x'') WHEN ((x'7d70')>=(0.019244112038768635)) THEN (']v\r' IN ('876376844', NULL)) WHEN 0.7721165318835423 THEN ((((173580591)OR(NULL)))OR(x'')) ELSE (~ ('2078111843')) END) ORDER BY ((TRIM(rt1.c3, rt0.c2)) BETWEEN ((rt1.c0 IN ())) AND (0Xffffffff9e01ef6f)) ASC;SELECT (((((rt0.c2))<=((rt1.c0)))) BETWEEN (((rt1.c0)OR(vt0.c0))) AND (((((rt1.c0)AND(NULL)))OR(rt0.c0)))), ((rt0.c1)>(rt1.c0)) COLLATE NOCASE, (CASE rt1.c3  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END IN ()), LIKE((rt1.c0 IN ()), vt0.c0 COLLATE RTRIM), (~ (rt0.c0)) FROM vt0, rt0 WHERE (CAST((((0.9452387796812438))=((x''))) AS BLOB));SELECT DISTINCT ((((rt1.c1))<=((rt0.c1))) IN ()), SQLITE_COMPILEOPTION_GET(((vt0.c0)IS NOT(rt0.c1))), x'dddb7c29' FROM rt1, rt0 ORDER BY ('TG' IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3)), vt0.c0))  NULLS LAST, rt1.c0;SELECT DISTINCT (((((rt1.c3))>((rt0.c1))))IS NOT(COUNT(rt0.c0))) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL ((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2))) BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))) AND ((- (rt0.c0)))), CASE CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN NULL THEN CAST(rt1.c2 AS BLOB) ELSE ((rt1.c3)AND(vt0.c0)) END, CASE WHEN (NOT (rt1.c1)) THEN CASE WHEN rt1.c0 THEN x'' WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN 0.27726290171858436 ELSE x'' END WHEN ((rt1.c3)>(rt1.c0)) THEN ((rt1.c1)LIKE(rt1.c2)) WHEN (rt1.c2 IN ()) THEN ((((rt1.c3)AND(rt1.c0)))AND(x'')) ELSE (NOT (rt1.c0)) END, 0.6205960066591439, ((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)&(rt1.c2))) AND ((+ (rt0.c2)))) FROM rt0;SELECT DISTINCT (((rt0.c0 IN ())) ISNULL), ((CASE rt1.c0  WHEN x'' THEN rt0.c1 END) IS FALSE), (- (CAST(0.5577693636481069 AS BLOB))), x'a282', rt1.c2 FROM rt0, vt0 WHERE ((CAST(x'7fd8' AS REAL) IN ())) EXCEPT SELECT ALL CAST(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 END AS NUMERIC), LOWER((((0.13440107119001554))<((8.76376844E8)))), (-1961961770 IN ()), NTILE(SQLITE_SOURCE_ID() COLLATE RTRIM) OVER (), ((((rt0.c0)AND('-54172611'))) ISNULL) FROM vt0 WHERE (((((0.01922788126710895) BETWEEN (0.28592239860091717) AND (-1621364684))) IS TRUE)) ORDER BY ((((rt1.c0) IS TRUE))||(0.5868916576216805)) ASC  NULLS FIRST;SELECT (((x'')-(rt1.c0)) IN (CAST(rt1.c0 AS TEXT))) FROM vt0, rt0 NOT INDEXED CROSS JOIN rt1 ON rt0.c2; -- 0ms;
SELECT DISTINCT CASE WHEN 'uB\n ' THEN SQLITE_VERSION() WHEN (rt0.c1 IN ()) THEN rt0.c2 WHEN CAST(rt1.c2 AS BLOB) THEN CAST(rt1.c1 AS INTEGER) END FROM rt1 WHERE ('-122875621');SELECT DISTINCT ((((rt1.c1)==(rt1.c3))) BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c1) IS TRUE))) FROM vt0, rt1 WHERE (('118162056' COLLATE BINARY IN ())) GROUP BY (((rt1.c0)) BETWEEN (((((rt0.c2))>((rt1.c0))))) AND (((((rt1.c1, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c0, 0.04493477044548633, vt0.c0)) AND (('噖諫ὅ>~', rt1.c1, rt1.c1)))))), 0.3521970043911573, (((((rt0.c0)) BETWEEN ((rt1.c3)) AND ((rt0.c0))))+(LIKELY(DISTINCT rt1.c0))) HAVING (~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))));SELECT DISTINCT UPPER(HEX(DISTINCT rt1.c1)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2 IN ())))=((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))))) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL x'', ((('', vt0.c0, rt0.c0, rt1.c3, rt1.c1)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c1)), ((rt0.c2)|(rt1.c0)), ((x'')*(rt0.c0)), CAST(rt1.c3 AS INTEGER), MIN('-1e500'))) AND ((((NULL) IS TRUE), x'', CASE rt0.c1  WHEN rt1.c3 THEN '-504244614' WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c2 END, ((rt1.c2) ISNULL), (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))), ((QUOTE(rt0.c0))>>((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))))) FROM vt0, rt0, rt1 WHERE ((CAST(0.15807268140570763 AS NUMERIC) IN (((((-692582487)OR(NULL)))AND(0.8743297259484502))))) LIMIT 391844195 OFFSET -1576676279; -- 0ms;
SELECT DISTINCT 0xffffffffc0dd74ac FROM rt1 WHERE (((((0X5f4d2dc6)AND('rꜸ5U')))AND(('<X' IN ('', '-237695849'))))); -- 0ms;
SELECT (((rt1.c0))<((UNICODE('428309151')))), (((rt0.c0)*(rt1.c1)) IN ()), rt1.c0 FROM vt0, rt0 WHERE (CAST(((NULL)<=(NULL)) AS BLOB));SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((0.9451629547264786)))) IS TRUE) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((0.3576662712749893) IS TRUE)) FROM rt0 GROUP BY ((((rt1.c2) ISNULL))==(((rt0.c2)||(rt0.c1)))) ORDER BY (((((rt0.c1, rt0.c2, 0xffffffff8cba2f70)) BETWEEN ((NULL, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt1.c0)))) ISNULL), CASE ((NULL) IS TRUE)  WHEN CASE WHEN rt1.c1 THEN rt0.c1 END THEN rt0.c2 ELSE (((rt1.c2))<=((rt1.c3))) END DESC  NULLS FIRST, ((rt1.c0) NOT NULL) LIMIT 1970682147 OFFSET 1785452528;SELECT DISTINCT (((((rt0.c1, NULL, NULL)) NOT BETWEEN ((vt0.c0, rt1.c1, rt1.c2)) AND ((vt0.c0, rt1.c1, rt0.c0)))) ISNULL), SUM(((vt0.c0)<<(vt0.c0))), (((((rt1.c1)AND(rt1.c0)), (- (rt0.c2)), NULL))=((((rt0.c0)LIKE(rt0.c0)), CASE WHEN rt1.c2 THEN rt0.c0 END, (NOT (rt0.c2))))) FROM vt0 WHERE (CAST(((NULL) NOTNULL) AS TEXT));SELECT ALL rt0.c2, (CAST(rt1.c3 AS REAL) IN (((((((((rt1.c3)AND(rt1.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt1.c2)), ((rt1.c1) IS FALSE))), ((((((((((vt0.c0)AND(rt1.c2)))OR(rt1.c1)))OR(x'42f7')))OR(1.970682147E9)))&((rt0.c0 IN (rt0.c0)))) FROM rt0, rt1 WHERE ((((CASE 2112005322  WHEN NULL THEN '474724878' WHEN '-1899595970' THEN 0.9451629547264786 WHEN NULL THEN 'qj' WHEN NULL THEN x'' WHEN '' THEN '-1621364684' END))<=((CAST(NULL AS INTEGER)))));SELECT ((CAST(rt0.c2 AS BLOB))+((((rt1.c2, rt0.c2, rt1.c0))>((rt1.c1, rt1.c2, rt1.c1))))) FROM vt0, rt1 WHERE ((((+ ('-2028352254'))) BETWEEN ((((0.5412462173169313))>=(('TdPlxssZ')))) AND (CAST(x'cbf6' AS REAL))));SELECT DISTINCT CAST(CASE rt0.c0  WHEN rt1.c1 THEN rt0.c2 END AS BLOB) FROM rt0, vt0 NOT INDEXED, rt1; -- 0ms;
SELECT ALL COUNT((rt0.c0 IN (rt0.c0))), rt1.c0, ((((rt1.c3)=(rt1.c1)))=((+ (rt0.c1)))) FROM rt1;SELECT ALL ((GROUP_CONCAT(rt1.c3))<=(CAST(rt1.c1 AS NUMERIC))) FROM rt1, rt0 WHERE ((~ ('	go' COLLATE NOCASE))); -- 1ms;
SELECT ALL (((rt1.c1, vt0.c0, rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, NULL, CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c3 WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c2 END, rt1.c3 COLLATE RTRIM, ((rt1.c2)AND(rt1.c2)))) AND (((+ (-1e500)), rt1.c1, (NOT (rt0.c0)), ((vt0.c0)<(rt0.c1)), CAST(vt0.c0 AS NUMERIC)))) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT IFNULL(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c2) NOTNULL)) FROM rt0, vt0, rt1; -- 0ms;
SELECT ALL load_extension(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((((((((((((((((rt0.c2)AND(x'')))AND(rt0.c1)))AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt0.c0)))AND(rt1.c0))) FROM vt0, rt1 NOT INDEXED, rt0 WHERE (CAST(x'ed87' AS INTEGER) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT ALL ((vt0.c0)*(rt1.c2)) COLLATE RTRIM, CASE rt1.c2 COLLATE RTRIM  WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c2)=(rt0.c1)) END, (+ (rt1.c2 COLLATE BINARY)) FROM rt1, vt0, rt0; -- 0ms;
SELECT rt1.c0 COLLATE BINARY FROM rt1, rt0, vt0 ORDER BY 0X197b9261 ASC;SELECT ALL ABS(((((rt1.c1)AND(rt0.c1)))OR(rt1.c3))) FROM rt1 GROUP BY LIKELIHOOD(DISTINCT ((((rt1.c1)AND(rt0.c1)))OR(rt1.c2)), 0.8939861869583262), rt0.c0, LOWER(DISTINCT (((rt0.c1, rt0.c1, rt1.c3))<>((rt1.c3, rt1.c0, rt1.c0)))) HAVING CASE CASE WHEN rt1.c0 THEN 2111606937 ELSE rt0.c2 END  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE NOCASE WHEN CAST('-692582487' AS BLOB) THEN 0.8900367985362049 WHEN LIKE(rt1.c1, rt1.c1, 'A') THEN ABS(DISTINCT x'') WHEN (~ (x'e0bc')) THEN ((rt1.c3)!=(rt0.c1)) WHEN (((rt0.c1, vt0.c0, vt0.c0))==((rt1.c1, rt0.c2, NULL))) THEN (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) END;SELECT DISTINCT '' FROM rt0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt0.c1, rt1.c1, rt0.c2, rt0.c2, rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c0, rt1.c0, rt1.c2)))) IS TRUE) FROM rt0, rt1 GROUP BY CASE WHEN (rt1.c1 IN ()) THEN (~ (0.9880746834483127)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE BINARY WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt0.c0 END THEN (rt0.c1 IN ()) END HAVING CASE WHEN ((rt1.c2)*(rt1.c1)) THEN rt1.c0 ELSE NULL END;SELECT DISTINCT ((rt0.c2)*(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END)), (((rt0.c1))<((vt0.c0))) COLLATE NOCASE, ((LIKELY(DISTINCT rt1.c2)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((rt0.c0))=((rt0.c2))))) FROM rt1 WHERE ((~ (((0.3879705375333624)!=('0.10610007224291507')))));SELECT DISTINCT (~ (AVG(rt1.c0))) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ()))/(((-1.739051505E9) ISNULL))), x'', LAG((NOT ((- (rt1.c3)))), CAST((rt1.c2 IN (rt1.c1, rt1.c0)) AS TEXT), (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END))<=((((rt1.c3)=(rt1.c3)))))) OVER () FROM rt1, vt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt1, vt0;SELECT ALL COUNT(*) OVER (), NTH_VALUE(CAST(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c3)) AS BLOB), ((((CAST(rt1.c1 AS REAL))OR(rt0.c1)))OR(((rt1.c2)==(rt0.c2))))) OVER ( ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c1 END) NOTNULL) DESC, NULL, ((rt1.c3) NOTNULL) COLLATE RTRIM DESC  NULLS LAST), (((rt1.c3) ISNULL) IN ((- (x'b51d')))) FROM rt1, vt0, rt0;SELECT ALL (((((NOT (rt1.c1)))AND(((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)))))AND((rt1.c0 IN ()))) FROM rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER)) IS TRUE)  NULLS FIRST, CAST(x'' AS TEXT)  NULLS LAST LIMIT 980763526; -- 0ms;
SELECT CASE WHEN (+ (rt0.c1)) THEN CASE rt1.c0  WHEN rt0.c0 THEN x'a7c5' WHEN rt1.c0 THEN 0.9518913696430797 WHEN NULL THEN rt1.c3 ELSE rt1.c2 END ELSE ((rt0.c1) IS TRUE) END FROM rt0 WHERE ((~ (CASE WHEN '' THEN 0Xa58a12f END)));SELECT DISTINCT (((((rt1.c3 IN ()))OR(CAST('1510315517' AS TEXT))))AND(CASE rt0.c2  WHEN rt0.c2 THEN NULL WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c0 THEN '1737310882' END)), FIRST_VALUE(((((CASE WHEN vt0.c0 THEN NULL WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN -972544334 END)AND(((rt1.c1)IS NOT(rt0.c1)))))AND((((rt1.c3))>=((vt0.c0)))))) OVER (), (rt1.c2 IN ()) FROM rt0, vt0, rt1 WHERE ((((('0.13440107119001554')+(NULL)))>(CASE WHEN '' THEN x'0ce7' ELSE 0Xffffffffd8447e62 END))); -- 0ms;
SELECT DISTINCT COUNT(rt0.c2) FROM vt0, rt0, rt1 LIMIT 2079761396 OFFSET 676691248; -- 0ms;
SELECT ALL COALESCE(SUM(vt0.c0), MAX(rt0.c0), ((0.09256923755600399)<=(vt0.c0)), (((rt1.c0, rt0.c2, rt1.c1)) BETWEEN ((rt1.c0, 0xffffffffaba8c4f9, rt1.c2)) AND ((vt0.c0, rt0.c0, rt0.c2))), (+ (rt1.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c2 END) FROM rt1, rt0, vt0 GROUP BY '0.9452387796812438'; -- 1ms;
SELECT ALL (((((rt1.c3, rt1.c0, rt1.c1))<=((rt1.c0, vt0.c0, rt1.c2))))*(x'')) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN STRFTIME(vt0.c0, rt0.c2, rt0.c0) THEN (((rt1.c2, x'', vt0.c0))<((rt1.c3, rt0.c0, rt0.c2))) WHEN (((rt0.c0)) BETWEEN (('')) AND ((0.7088105477631661))) THEN ((rt1.c0) NOTNULL) WHEN (rt1.c2 IN (rt1.c3, rt1.c2)) THEN rt1.c3 COLLATE BINARY WHEN ((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c1)) THEN (rt1.c3 IN ()) WHEN highlight(rt1.c2, rt0.c0, vt0.c0, rt1.c3) THEN ((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c3)) ELSE ((rt0.c0)GLOB(rt0.c0)) END FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL RTRIM((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt0.c1)))), AVG(rt1.c2), SUM(((rt0.c1)GLOB(vt0.c0))) FROM rt0 WHERE (SUBSTR(LENGTH(NULL), 'Ty~H' COLLATE BINARY)) ORDER BY '-2084591293' DESC LIMIT -1409159454 OFFSET -1576676279;SELECT ((((rt1.c1) IS TRUE))>>(x'')), LAG('-1520808464', ((((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c0)))OR(rt0.c0)))GLOB(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))), ROUND(((rt1.c1)%(rt1.c0)), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) OVER (), COUNT(*) OVER () FROM vt0, rt1, rt0 WHERE (((('-1789518121')GLOB(0Xffffffff82b24e66)) IN ())); -- 0ms;
SELECT DISTINCT TOTAL_CHANGES() FROM rt0, vt0; -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS TEXT))LIKE((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) FROM vt0;SELECT ALL ((CAST(rt1.c3 AS BLOB))*(((NULL) NOTNULL))) FROM rt0, vt0;SELECT DISTINCT ((((rt0.c2)+(rt0.c1)))>>((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))) FROM rt0, rt1 WHERE ((((x'' COLLATE NOCASE, CASE WHEN x'' THEN 2.057691236E9 END, ((0.8734963562359916)<(NULL))))<>(((+ ('F5')), '188827416' COLLATE BINARY, CASE WHEN 0.7864613778340385 THEN x'' ELSE '-982280130' END)))); -- 0ms;
SELECT DISTINCT (+ ((+ (rt1.c0)))), (+ (0.39356564673169403)), ((('3*') BETWEEN (rt1.c0) AND (rt1.c3)) IN ()) FROM vt0 WHERE (((((NULL)-(-122875621)))-((('') NOTNULL))));SELECT DISTINCT 1.527255766E9 FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL '-447665754' FROM vt0, rt0, rt1 WHERE ((((((0.3887327942524955)AND(0.8340388097813733)))OR('594317978')) IN ())) LIMIT -555472869; -- 1ms;
SELECT ALL (((~ (rt1.c2))) NOT BETWEEN (json_object(rt0.c0, 0.7249069361361651)) AND (((vt0.c0) IS TRUE))), rt1.c1, NULLIF(DISTINCT LOWER(DISTINCT rt1.c2), x'') FROM vt0, rt1, rt0 WHERE ((+ ((- (0.02643763523101894)))));SELECT ((((((((0.42745756207284913)AND(rt0.c1 COLLATE BINARY)))AND(((vt0.c0)+(rt1.c0)))))AND(((vt0.c0)AND('')))))AND(((((NULL)OR(rt1.c0)))AND(rt1.c0)))) FROM rt1 WHERE (0.9339902359662376) LIMIT -254180399 OFFSET -224148383;SELECT DISTINCT ((((((((GROUP_CONCAT(rt0.c1))AND(((rt1.c1) NOTNULL))))OR((('116287335')>>('[UHsỗc슭')))))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)))AND((rt0.c1 IN (vt0.c0)))) FROM vt0, rt0;SELECT DISTINCT ((((rt1.c0) NOT NULL))-(CAST(rt1.c2 AS NUMERIC))), x'', 0.08814894884984303 FROM rt1 WHERE (CAST(((((NULL)AND(4.74724878E8)))OR(x'2a81')) AS TEXT)) GROUP BY (~ (((((((((rt0.c2)OR(0.6573652791101068)))AND(rt0.c0)))OR(rt1.c3)))OR('391844195'))));SELECT ALL (((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) COLLATE BINARY FROM vt0, rt1 WHERE (((CAST(x'c142abc3' AS REAL)) IS FALSE));SELECT ALL CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN rt0.c2 WHEN ((rt1.c1) IS TRUE) THEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)) WHEN CAST(rt0.c2 AS TEXT) THEN '-1576676279' ELSE rt0.c2 END, (((CASE NULL  WHEN rt0.c2 THEN rt1.c2 END, ((rt1.c0)%(rt1.c2)), CAST(rt1.c0 AS REAL)))>((((((vt0.c0)AND(rt1.c3)))OR(rt1.c2)), CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE rt0.c1 END, ((rt1.c2)|(rt0.c1))))), ((rt1.c1)+(vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((((((((TRIM(DISTINCT x'b33e'))OR(CASE WHEN NULL THEN 0.9731175612973202 WHEN x'' THEN x'' WHEN NULL THEN 0.07123245765678665 ELSE '36206232' END)))AND(0.49259027652574516 COLLATE RTRIM)))AND(TRIM(DISTINCT 0.6361022384254862))))AND(CASE 0.762292333406864  WHEN '3*' THEN 0.028995271663065814 ELSE 0.8954591331902795 END)));SELECT DISTINCT ((COUNT(vt0.c0)) IS TRUE) FROM rt1, vt0; -- 1ms;
SELECT (((rt0.c0 COLLATE BINARY, ((rt0.c1)GLOB(rt1.c2)), ((rt1.c2) NOT NULL)))<(((((((((('14027661')AND(rt0.c0)))AND(0.535461331875534)))AND(rt1.c1)))OR(x'')), vt0.c0 COLLATE BINARY, ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) FROM rt0, vt0, rt1 WHERE ((((TRIM('118162056')))<(((NOT (x'33ce')))))) GROUP BY (((vt0.c0)) NOT BETWEEN ((((rt0.c0)GLOB(rt0.c2)))) AND ((rt0.c2 COLLATE BINARY))); -- 0ms;
SELECT ALL TOTAL(((((((((rt0.c1)OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c2))) FILTER(WHERE ((vt0.c0)>>(CAST(rt0.c1 AS TEXT)))) OVER () FROM rt0;SELECT DISTINCT CAST(TOTAL(rt1.c0) AS INTEGER) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT (((((- (rt0.c0)))OR(((((rt1.c3)OR(rt1.c1)))AND(rt0.c1)))))AND(((((rt0.c0)AND(rt0.c2)))AND(NULL)))), CAST(TRIM(DISTINCT rt0.c0, rt1.c1) AS TEXT), rt1.c2, GLOB(x'11b1' COLLATE RTRIM, ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c0))), 0.34827299574466364 FROM rt0, vt0;SELECT ALL COUNT(((rt0.c1)>(rt1.c0))) OVER () FROM vt0 WHERE ((((CAST(0.6587510006587918 AS INTEGER)))==((((NULL)>=(0.909920474314517))))));SELECT (+ (TRIM(rt1.c3))), (((vt0.c0, (((vt0.c0))>((rt0.c1))), NULL COLLATE RTRIM))=(((rt0.c2 IN ()), ((x'')LIKE(rt0.c2)), ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c3)))AND(vt0.c0))))), CASE WHEN ((rt1.c3) NOTNULL) THEN HEX(rt1.c1) WHEN COUNT('36206232') THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS REAL) WHEN ((((rt0.c0)OR(rt1.c1)))AND(rt0.c0)) THEN COUNT(*) WHEN ((((rt1.c0)AND(rt1.c1)))AND(NULL)) THEN ((-271169928) BETWEEN (rt1.c0) AND (rt1.c3)) ELSE ABS(x'5b5f') END FROM rt0, vt0, rt1; -- 0ms;
SELECT (CAST(rt0.c2 AS TEXT) IN ()) FROM rt1, rt0, vt0 WHERE (((UNICODE(0.32765176431592247))&((((0.15382812471329077, x'', x''))==(('-91147301', NULL, '-1644040337')))))); -- 0ms;
SELECT DISTINCT LEAD(((((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c3)))*(((rt1.c1) BETWEEN ('1388391689') AND (rt1.c3)))), ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))LIKE(((NULL) NOT BETWEEN (rt1.c3) AND (0.16357967916879002)))), rt1.c3) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND rt1.c0 PRECEDING), GROUP_CONCAT(MIN(rt1.c1)), rt0.c0 FROM rt1, rt0, vt0 WHERE (CASE CASE NULL  WHEN '' THEN 0.03708493759683351 ELSE x'' END  WHEN ((0Xffffffffcfa50482) NOT BETWEEN (x'') AND (NULL)) THEN highlight('-1933955216', 0.3095333505999802, x'2b80', 0.10831162903342628) END);SELECT DISTINCT CAST((rt0.c0 IN (vt0.c0)) AS NUMERIC) FROM rt0, vt0 WHERE ((- ((NOT (0x592ec4bf))))) ORDER BY (((- (rt0.c2)))&(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) DESC LIMIT -744364520 OFFSET 1785452528; -- 0ms;
SELECT DISTINCT (((+ (rt1.c1)))-(rt0.c1 COLLATE RTRIM)), (- (rt1.c3)), (((rt0.c1)) NOT BETWEEN ((((rt1.c0) BETWEEN ('N織') AND (rt1.c1)))) AND ((AVG(rt0.c2)))) FROM vt0, rt0 WHERE (((((0.6465508205531065)==('{t}'))) NOTNULL));SELECT DISTINCT 0x757b11aa FROM rt1, rt0; -- 0ms;
SELECT ALL 0.9844555812737505, (('1527255766') BETWEEN (rt0.c0 COLLATE RTRIM) AND ((- (vt0.c0)))), (rt0.c0 IN ()) FROM vt0, rt0 WHERE (((NULL COLLATE RTRIM) ISNULL)); -- 0ms;
SELECT DISTINCT MIN((- (rt1.c1))) FROM rt0, vt0;SELECT (- ((NOT (rt1.c1)))) FROM vt0 WHERE (x'');SELECT ALL ((((rt1.c2)||(rt1.c3))) NOT NULL) FROM rt0 WHERE (((('z_p2L1ߵ' IN ())) IS FALSE)) LIMIT 1242953196 OFFSET -1621364684;SELECT (+ (MIN(rt0.c0, rt0.c1))) FROM rt0, vt0 WHERE ((((0.2492665149041131, '\P', 'z*DDqH', '1053189774', '0.3879705375333624')) BETWEEN ((CASE x'5e20'  WHEN '2111606937' THEN '-1982085433' WHEN x'' THEN 0.02101758672685161 WHEN NULL THEN x'' END, UNLIKELY(DISTINCT NULL), ((('1554791030', '-1937533170', -1.979137121E9)) BETWEEN ((x'f7e1', 0.8898522378841371, NULL)) AND ((0.8340388097813733, 'yBE.', x''))), ((NULL) NOT BETWEEN (NULL) AND (0Xfffffffffdca606d)), CAST('0.8340388097813733' AS NUMERIC))) AND (((('1510315517')GLOB(0.3618985562488357)), (('')<<(x'')), CASE NULL  WHEN 0.1361820864508908 THEN 'r#' END, (NOT (0.733913220033772)), CASE WHEN NULL THEN 0.9829960505661877 ELSE x'48d2' END)))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt1, vt0 WHERE (((((((x'') IS TRUE))OR(CAST(x'' AS NUMERIC))))OR(0.07969925208416295 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((0xfffffffffa9133db) IS TRUE))>>(CASE WHEN rt1.c3 THEN rt0.c1 END)), CAST(STRFTIME(vt0.c0, rt1.c2, x'', vt0.c0, rt1.c2, 0.7721165318835423, rt0.c2) AS BLOB), (((NULL, rt0.c2, 0xc2e5acf)) BETWEEN ((SUM(rt1.c2), x'', ((rt0.c0) NOT BETWEEN (0xffffffffc3b749d4) AND (rt0.c1)))) AND ((CAST(rt0.c1 AS INTEGER), rt1.c2, HEX(rt0.c0)))), ((((rt1.c2) NOTNULL))>>(((NULL)<<(rt1.c3)))), (((((((((+ (rt0.c2)))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))OR(((rt1.c3)LIKE(rt0.c2)))))AND(((((((((rt0.c2)AND(rt1.c3)))OR(rt1.c0)))AND(rt0.c2)))AND(rt1.c3)))))OR(((rt0.c0) IS TRUE))) FROM rt1 WHERE ((((UNLIKELY(DISTINCT NULL)))<=((((NULL)IS NOT(0.5506126783819696))))));SELECT ALL (~ (CAST(rt1.c3 AS TEXT))) FROM vt0 GROUP BY CAST((((rt1.c0))>=((rt1.c1))) AS REAL) LIMIT 500273009 OFFSET 1829583848;SELECT DISTINCT COUNT(((rt1.c3)>>(rt1.c3))) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT x'', (((CASE WHEN NULL THEN rt0.c0 ELSE rt1.c0 END))==((COUNT(*)))), rt0.c1 FROM rt0, rt1, vt0 ORDER BY (~ (vt0.c0)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((NULL IN ())) IS TRUE), (((rt0.c2)) NOT BETWEEN ((CASE rt1.c0  WHEN 0.3457274968705587 THEN rt1.c0 ELSE rt1.c3 END)) AND (((~ (rt0.c1))))), ((0.5810575140445655) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c1))) AND ((rt1.c0 IN ()))) FROM rt1;SELECT DISTINCT CAST((rt0.c2 IN ()) AS NUMERIC), ((((vt0.c0) IS TRUE))<<(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))), (~ (LIKELIHOOD(DISTINCT rt1.c0, 0.5310944137113454))), (((((0Xffffffff9d41bce5, vt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c0, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c1))))LIKE(((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))), COUNT(vt0.c0) FROM rt1 WHERE ((((+ (0.813536063825276)))IS(NULLIF(NULL, x''))));SELECT DISTINCT ((((rt1.c2 COLLATE RTRIM)OR((+ (rt0.c1)))))AND(HEX(0.4400826152242554))), NULL, GLOB(CAST(rt0.c2 AS NUMERIC), 0.623011192358747 COLLATE NOCASE) FROM vt0 WHERE ((((((x'')IS NOT('DJu5X')), (NULL IN (NULL)), (('1e500') NOT BETWEEN (x'') AND ('0.733242217730455'))))>=(((((NULL))>=((x''))), COALESCE('', 'K[', 0.22490933691150838, -2.047702293E9), (((NULL))<>((0x47013e0e))))))) LIMIT -242153379 OFFSET 1689331037;SELECT DISTINCT ((SUM(rt0.c1)) BETWEEN (x'fefe') AND (('266894644' IN ()))) FROM rt0, rt1, vt0 WHERE ((((NULL IN ('g3]fPW+qJ'))) IS TRUE)) LIMIT -588501521; -- 0ms;
SELECT ((SUM(rt1.c1)) ISNULL) FROM rt1, vt0 WHERE ((((0x5a0595fd, NULL, 0.5055693444609092)) NOT BETWEEN (((NULL IN ()), ((NULL)-(0.8628377215863099)), INSTR(NULL, '-1643163307'))) AND (((((0X59b51141))<(('棁c'))), (('takn0EF%') ISNULL), CASE WHEN '1758980278' THEN NULL WHEN '+YBzTTm' THEN '' WHEN 0.9457234100465172 THEN 0.16318265758087813 ELSE 'rE' END)))) GROUP BY CAST(NULLIF(rt1.c2, rt1.c2) AS INTEGER); -- 0ms;
SELECT DISTINCT CAST(COUNT('') AS REAL) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((vt0.c0)*(rt1.c3)) ELSE (vt0.c0 IN (rt0.c1, vt0.c0)) END, ((vt0.c0) BETWEEN (((rt0.c0)IS(x'b931'))) AND (((((((((rt1.c2)AND(rt0.c2)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c1)))), '-2072405636' FROM rt0 WHERE (((NULL) IS FALSE));SELECT ((CAST(rt0.c2 AS REAL))||(x'' COLLATE BINARY)), COUNT(*) FILTER(WHERE ABS(rt1.c0)) OVER (), ((((((((((rt1.c0)AND(rt1.c3)))OR(rt0.c2)))AND(((rt1.c3)-(rt1.c2)))))OR((((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0))))))OR(CAST(rt1.c2 AS INTEGER))) FROM rt0, rt1, vt0 GROUP BY (((rt1.c0) NOTNULL) IN ()) HAVING MIN(((rt0.c1) NOTNULL)); -- 1ms;
SELECT DISTINCT ((((vt0.c0)=('b	%<w-5e'))) NOT BETWEEN (x'') AND ((((rt1.c2, rt1.c2, rt1.c3))>=((rt0.c0, rt0.c2, vt0.c0))))) FROM vt0, rt1, rt0 WHERE (CAST(CASE 580535103  WHEN 703158212 THEN '' WHEN -1778913695 THEN NULL WHEN 0X31530f78 THEN NULL END AS NUMERIC)); -- 0ms;
SELECT DISTINCT -9.01114875E8, rt1.c3, MIN(load_extension(vt0.c0, rt1.c1)), HEX(CAST(rt1.c0 AS REAL)), (NOT (((((rt1.c2)AND(vt0.c0)))AND(rt0.c1)))) FROM rt1, rt0 WHERE (((CAST(0x175b1163 AS BLOB))|(((0.24828888715583064) IS FALSE))));SELECT DISTINCT CAST(rt1.c0 AS INTEGER) COLLATE BINARY FROM rt1 WHERE (((((((x'') ISNULL))OR((~ ('-811268990')))))AND(((NULL)LIKE(0x71e20f2c))))); -- 0ms;
SELECT ALL ((COUNT(rt1.c0)) NOTNULL) FROM rt0 WHERE ((((('1417675061')|('')))%(((x'')|(0.6441718932019184)))));SELECT ALL ((((CAST(vt0.c0 AS TEXT))OR(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt0.c1 END)))OR(CAST(rt1.c1 AS REAL))), CAST(rt0.c1 AS TEXT) COLLATE NOCASE COLLATE BINARY, rt1.c2 FROM rt1, vt0, rt0 WHERE ((((((('-492780596')OR('')))AND('{ㄙ'))) ISNULL)); -- 1ms;
SELECT ALL NULL FROM rt0, vt0 NOT INDEXED, rt1; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END AS BLOB) FROM vt0, rt0 WHERE ((((''))>=(('750812319'))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT LAST_VALUE(0X3768057a) OVER () FROM rt1, vt0; -- 0ms;
SELECT (((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c1 END, ((rt0.c0) ISNULL), '686262121', (rt1.c2 IN ()), ((rt1.c2)!=(rt1.c0))))>((IFNULL(rt0.c2, '173580591'), ((vt0.c0)|(rt0.c1)), CAST(rt1.c3 AS NUMERIC), (rt0.c2 IN ()), x''))) FROM rt0 WHERE ((((((((((('	GO')>(NULL)))OR(((x'99f7')>=(0.015117787345692135)))))AND((NULL IN ()))))AND(((NULL) ISNULL))))AND((((NULL, x'', NULL))>=((0Xffffffffc837f71f, 'b	%<w-5e', x''))))));SELECT DISTINCT AVG(((((rt1.c1)OR(rt1.c0)))OR(vt0.c0)) COLLATE BINARY) OVER () FROM vt0, rt0 ORDER BY COALESCE(UNLIKELY(rt1.c2), (- (rt1.c2))) DESC  NULLS FIRST;SELECT ALL CASE WHEN CAST(rt0.c0 AS TEXT) THEN (rt1.c1 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) WHEN CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c3 END THEN CAST(vt0.c0 AS BLOB) ELSE rt1.c3 END FROM rt1, vt0 WHERE (((((((x'') BETWEEN (NULL) AND (x'')))AND((((x'6ee7ad11'))<((NULL))))))AND(((x'')AND(x'')))));SELECT DISTINCT (CAST(rt1.c2 AS REAL) IN (rt1.c3)) FROM rt1, vt0 WHERE (json_object((x'bc8d360f' IN ()), '0.20481742225125066', (x'313e' IN ('1240358055', NULL)), (NOT (''))));SELECT LEAD(((((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c2))) NOTNULL), (((rt0.c0 IN ()))%(0X319e9759 COLLATE NOCASE)), LOWER('1084512973491440882:337-3849696338677829090:247T3362026274463035617 1046-305 572 6269206301283210989T')) OVER (), MIN(((rt1.c1)<<(rt0.c2))), ((TIME(rt0.c2, rt1.c3, rt0.c2)) IS TRUE) FROM rt1, rt0, vt0 WHERE (((((((x'', 0.9452387796812438, '2057691236'))<((-1802834153, NULL, 0Xffffffffb65d07f5)))))>((((((NULL)AND(0Xffffffff851c45dc)))AND(NULL)))))); -- 0ms;
SELECT AVG(1006906519) OVER () FROM rt0 WHERE (((x'')<('1598893510')) COLLATE BINARY); -- 0ms;
SELECT ALL ((((((((AVG(rt1.c0))OR((~ (vt0.c0)))))AND((rt1.c3 IN ()))))OR((rt1.c0 IN (rt1.c2)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt1.c1 END)) FROM rt1, rt0, vt0 WHERE (((((0.7176103698156384) IS TRUE)) IS TRUE)); -- 0ms;
SELECT ALL SUM((NOT (rt1.c1)) COLLATE RTRIM) OVER () FROM rt1 WHERE ((((0.28848637748825645)) BETWEEN ((CAST(NULL AS NUMERIC))) AND (((~ ('2067803500')))))); -- 0ms;
SELECT DISTINCT AVG(((rt1.c3)|(rt1.c3))) FROM rt0, rt1 ORDER BY ((((rt1.c0)=(rt0.c1)))LIKE(LOWER(DISTINCT rt1.c1))) DESC  NULLS FIRST; -- 1ms;
SELECT ALL LTRIM(MAX(rt0.c1)) FROM rt1, rt0, vt0 WHERE (((+ (NULL)) IN (0.7757929257407772 COLLATE RTRIM))); -- 0ms;
SELECT (~ ((0Xffffffffddc69a10 IN ()))) FROM rt1, rt0 WHERE (CASE x'88451946'  WHEN CAST(0.04493477044548633 AS TEXT) THEN ((x'') BETWEEN (',>''g') AND (NULL)) WHEN ((NULL)|(1.471693E7)) THEN ((NULL) NOTNULL) WHEN (((0.2510345226424152))<=(('837508931'))) THEN (('1764495190') ISNULL) ELSE ((((0.7721165318835423)OR(NULL)))OR(0.5761684454244625)) END); -- 0ms;
SELECT ALL ((LOWER(rt0.c1)) IS TRUE) FROM rt1;SELECT DISTINCT 'dju5x' FROM vt0, rt0 WHERE (((((0.7493515635975085) BETWEEN (NULL) AND ('쪭hP춸')))<=(((NULL)|('-267114476'))))); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(CASE WHEN rt1.c2 THEN 'a' END), highlight(MAX(rt1.c2), LTRIM(rt1.c1, rt1.c3), ((rt1.c2)GLOB(rt0.c1)), CASE WHEN rt0.c2 THEN rt1.c3 END), ((((((rt1.c0))>((rt0.c0))), ((rt0.c2) IS TRUE), ((x'') IS TRUE)))>((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c0 END, (+ (rt1.c0)), ((rt0.c0)IS NOT(rt0.c2))))) FROM rt0, rt1, vt0 GROUP BY rt1.c1 HAVING ((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0))) NOT NULL);SELECT DISTINCT AVG(CAST(rt1.c2 AS BLOB)) OVER ( GROUPS  CURRENT ROW), (NOT (CASE 0X6bdc8d11  WHEN rt1.c3 THEN '-1789518121' END)), ((((((((((0.9074621110320483) BETWEEN (rt0.c0) AND (rt1.c3)))AND(x'')))AND('' COLLATE BINARY)))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 END)))AND(CASE rt1.c1  WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c3 END)) FROM rt0 WHERE ((CAST(x'' AS INTEGER) IN ()));SELECT DISTINCT ((rt0.c1) NOT NULL), CASE WHEN 0xffffffff8cba2f70 THEN (rt1.c2 IN (rt1.c1)) WHEN ((rt0.c1)<=(rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt1.c0 END WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt0.c1)))OR(rt1.c3)))OR(rt0.c1)) THEN NULL END, (((rt1.c3)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c1 END)) AND ((((((rt1.c3)OR(NULL)))OR(rt1.c3))))) FROM rt1, rt0, vt0 GROUP BY rt0.c0 HAVING MAX(rt1.c3); -- 0ms;
SELECT DISTINCT (NOT ((+ (0.7185828890365688)))) FROM vt0, rt1, rt0 INTERSECT SELECT DISTINCT COUNT(*) COLLATE BINARY FROM rt0 LIMIT 1407628703 OFFSET 3150965; -- 1ms;
SELECT (((rt1.c3)) BETWEEN ((CAST(rt1.c0 AS NUMERIC))) AND ((((rt0.c2)|(rt1.c2))))) FROM rt1, vt0;SELECT DISTINCT CASE TOTAL(rt1.c1)  WHEN ((rt0.c0) ISNULL) THEN ((rt1.c2)/(rt1.c0)) ELSE CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c2 END END FROM rt0 LIMIT 3762782269154722310 OFFSET 1858457965;SELECT DISTINCT CASE WHEN ((rt1.c2)IS(rt0.c0)) THEN TYPEOF(rt0.c2) ELSE ((rt1.c3) IS FALSE) END FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt1.c2)OR(rt1.c3)))OR(rt0.c1)))AND(rt1.c3)))OR(vt0.c0)))|(((rt0.c0) IS FALSE))) WHERE ((((0.5993222071887632 IN ())) NOT BETWEEN (json_array_length(NULL, x'')) AND (CASE '-784115045'  WHEN NULL THEN 0.3929094155732378 ELSE 0.9834280694397943 END))) ORDER BY ((vt0.c0)OR((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND (('42933526')))))  NULLS LAST;SELECT DISTINCT '' FROM rt1, rt0, vt0 WHERE ((((NULL)) BETWEEN (((NULL IN (0.22756281780070764)))) AND ((COALESCE(DISTINCT NULL, 0.8078287807696275))))) GROUP BY ((((rt1.c3))<((-2.047702293E9))) IN ()) HAVING CASE WHEN ((((rt1.c2)OR(rt0.c2)))AND(rt1.c1)) THEN (rt1.c3 IN ()) END; -- 0ms;
SELECT ALL MAX(rt1.c0) COLLATE NOCASE COLLATE NOCASE FROM vt0 WHERE ((((~ (''))) NOTNULL));SELECT (((UPPER(rt0.c0)))>((((rt0.c1) ISNULL)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c2))IS NOT(0.6205960066591439)), rt1.c3 COLLATE BINARY, (((rt1.c2)) BETWEEN ((((rt0.c2) ISNULL))) AND (((((rt1.c3))<=(('')))))) FROM vt0, rt1 WHERE ((((CAST('' AS NUMERIC)))<>(((((x''))==(('-267114476')))))));SELECT ((rt1.c3)<(vt0.c0 COLLATE BINARY)), (- (((rt1.c3)IS NOT(vt0.c0)))), COUNT(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3))) OVER () FROM vt0, rt0 GROUP BY (rtreenode(rt1.c3, rt1.c2) IN ()), (~ (((((((((rt1.c2)OR(rt1.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt1.c1)))), (((((((rt0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))AND(((rt0.c1)*(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)))), CAST(((NULL)<=(rt0.c2)) AS INTEGER), ((((((rt0.c1)AND(rt0.c2)))AND(rt1.c0)))<>(((rt1.c2)>=(rt0.c2))));SELECT DISTINCT (((rt0.c1 IN (vt0.c0, rt1.c3)))-(((rt1.c3)>=(rt0.c1)))) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))+(((rt1.c0) BETWEEN (x'') AND (rt1.c0)))), rt1.c0, (NULL IN ()) FROM rt0;SELECT DISTINCT (('ub\n ')-(CAST(vt0.c0 AS REAL))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT MIN(0.06589100717986929) FROM rt1; -- 0ms;
SELECT ALL (((rt1.c1)) BETWEEN ((0.9241205865375295)) AND ((((rt0.c1) IS TRUE)))) FROM rt1, rt0 WHERE (SQLITE_COMPILEOPTION_GET(COALESCE(0.6691912707584867, '1577464312', -1.982085433E9, 'U唽''hk	86'))); -- 0ms;
SELECT DISTINCT ((rt0.c1) BETWEEN ((((rt1.c1, vt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt1.c2)) AND ((NULL, NULL, rt0.c1)))) AND (((rt0.c2)LIKE(rt1.c3)))) FROM rt1, vt0, rt0 WHERE (HEX(CASE x'b5a9'  WHEN -2.1439483E8 THEN '' WHEN NULL THEN 0.3518422612150922 WHEN '' THEN x'' WHEN 1781949169 THEN NULL WHEN 391844195 THEN '' END)); -- 1ms;
SELECT DISTINCT (((rt1.c0, rt1.c1, rt1.c3)) NOT BETWEEN ((CAST(rt1.c1 AS TEXT), (rt1.c1 IN ()), ((NULL)||(rt1.c3)))) AND (((NOT (rt1.c0)), rt0.c1 COLLATE NOCASE, ((((rt0.c2)OR(vt0.c0)))AND(rt0.c1))))), '-406327576', TYPEOF(((rt1.c0) ISNULL)) FROM rt1;SELECT DISTINCT CAST(((rt1.c3) ISNULL) AS BLOB), ((rt0.c2 COLLATE RTRIM)<<(COUNT(rt1.c1))), (((rt1.c0 IN ())) BETWEEN (rt1.c1) AND ((rt0.c0 IN (rt0.c2)))) FROM rt1, vt0 WHERE ((NOT (CAST(x'6d47' AS TEXT))));SELECT DISTINCT CAST(vt0.c0 COLLATE BINARY AS TEXT) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT CASE (x'' IN ())  WHEN CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c3 END THEN rt0.c2 COLLATE RTRIM WHEN ((rt1.c1) NOT BETWEEN (0X7b5361d4) AND (rt0.c2)) THEN ((x'')-(rt1.c0)) WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END THEN vt0.c0 COLLATE BINARY ELSE CAST(rt1.c0 AS REAL) END FROM vt0, rt0, rt1 WHERE (CAST(CAST(NULL AS TEXT) AS INTEGER)) GROUP BY CAST(((((rt1.c3)OR(rt1.c3)))OR(rt1.c0)) AS TEXT), CASE ((((rt1.c0)OR(NULL)))OR(vt0.c0))  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt0.c1)) THEN CAST(rt1.c2 AS TEXT) END, (((((rt1.c0)OR(rt0.c2)))AND(rt1.c3)) IN (CAST(rt1.c0 AS NUMERIC))), (((((rt0.c1)==(rt1.c1))))<=((((rt0.c1) ISNULL)))), ((0.8734963562359916)+(((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c3)))) HAVING ((((rt1.c2)<=(rt0.c2)))<=((rt1.c0 IN (rt0.c0)))); -- 1ms;
SELECT ('' IN ((rt1.c3 IN (rt1.c3)))) FROM rt0;SELECT DISTINCT ((((rt0.c2)<>(rt0.c0))) BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END) AND ((rt1.c0 IN ()))) FROM vt0, rt1, rt0 WHERE (((((((((((0.18898883516256848) BETWEEN (x'') AND ('<!')))OR(((NULL) IS TRUE))))AND(NULL)))OR(CASE x'9cd5'  WHEN 0x6a6bd7f0 THEN 0.4874238018197323 END)))OR((((NULL))==(('t!.}YZ{')))))); -- 0ms;
SELECT ROW_NUMBER() OVER (), (rt1.c1 IN ()) COLLATE BINARY, (((NOT (rt1.c1)))>>((NOT (rt1.c0)))) FROM rt1, vt0 WHERE (((((CASE '598746908'  WHEN 0x33601442 THEN '148410422' END)OR(CAST(x'' AS INTEGER))))OR((((('(')OR(x'')))OR(x'66e7'))))) LIMIT -1576676279; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1)))<<(((((0x28f1d16)OR(rt0.c1)))AND(rt1.c2)))), rt1.c3, ((((rt1.c3) NOTNULL))|(((rt1.c0)<<('-1874479056')))) FROM vt0;SELECT (+ (((((rt0.c2)AND(rt0.c1)))OR(rt1.c1)))) FROM vt0, rt0, rt1 WHERE (CASE ((NULL) IS FALSE)  WHEN ('WQic.gS' IN ()) THEN ((((x'')AND(0.9091356423326474)))OR(-1227271651)) ELSE CASE WHEN 0.4667782898439501 THEN '-896711606' ELSE '%3' END END); -- 0ms;
SELECT ALL ((((rt1.c0)&(rt0.c0))) IS FALSE) FROM rt0, vt0, rt1 WHERE ((+ (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT (json_array_length(rt0.c1, rt1.c2) IN ()), (((rt0.c2) NOT BETWEEN (rt1.c0) AND (NULL)) IN ()), ((((rt0.c1) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (rt1.c1 COLLATE BINARY) AND (SUM(NULL))) FROM rt1, vt0 WHERE (((((6.07151491E8) BETWEEN (x'') AND (NULL))) BETWEEN (CAST(NULL AS BLOB)) AND (((x'') BETWEEN (NULL) AND (x'568d'))))) LIMIT 799094882 OFFSET 141688655;SELECT DISTINCT QUOTE((rt1.c3 IN (rt1.c1, rt1.c0))) FROM rt1, rt0 GROUP BY (NULL IN (rt0.c0, (rt1.c3 IN (vt0.c0)))), ((((vt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt1.c1 AS TEXT)) AND (((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))), (- (CASE WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN vt0.c0 END));SELECT DISTINCT (((((rt0.c1))<>((rt1.c1)))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt1.c3)) AND ((rt0.c1)))) AND (COUNT(*))) FROM rt1, rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))GLOB((NOT (vt0.c0))));SELECT DISTINCT ((((((rt0.c0)|(rt0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(((((((((rt1.c0)AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))AND(rt1.c2)))) FROM rt0, vt0, rt1 WHERE (((((((0.27180998139048984)IS NOT(NULL)))OR((x'' IN ()))))OR(json_patch(x'e23e', x'')))); -- 1ms;
SELECT ((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c2 END) BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2))) AND ((+ (rt0.c2)))) FROM rt0;SELECT ALL AVG((rt0.c2 IN ())) OVER ( RANGE  CURRENT ROW), (NOT (CASE rt1.c3  WHEN rt1.c3 THEN vt0.c0 END)), ((rt1.c2) NOTNULL) FROM rt1, vt0 GROUP BY CASE WHEN NULL THEN '' END; -- 0ms;
SELECT DISTINCT json_type(((rt0.c0)>=(rt0.c2))) FROM rt1 WHERE (((x'b76d') BETWEEN (0x6ee6767) AND ('1629992282' COLLATE RTRIM))) ORDER BY ((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE '0.6361022384254862' END));SELECT ALL rt1.c1 FROM vt0, rt1, rt0 WHERE (NULL); -- 0ms;
SELECT ((((rt1.c0) NOT BETWEEN (rt0.c2) AND (NULL))) BETWEEN (LIKELY(DISTINCT rt1.c0)) AND (rt1.c2 COLLATE BINARY)) FROM vt0, rt1;SELECT DISTINCT (((((rt1.c2))>=((rt1.c2)))) NOT BETWEEN (((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c1)))AND(rt0.c2)))OR(rt0.c2))) AND (COUNT(rt1.c3))) FROM vt0 WHERE ((((('4A>{๴ኆ䧔s') ISNULL)) NOT BETWEEN (((((((((0x38cb0b99)OR(NULL)))AND(x'')))AND(NULL)))OR('-37068691'))) AND (NULL COLLATE RTRIM)));SELECT DISTINCT rt1.c3, ((((((((CAST(rt1.c2 AS BLOB))OR(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c1 THEN 0.0959023428147151 END)))AND('3217814')))OR(CAST(rt1.c0 AS BLOB))))AND((((rt1.c3)) BETWEEN ((vt0.c0)) AND ((NULL))))), ((((vt0.c0)<<(rt0.c0))) NOTNULL) FROM vt0, rt0;SELECT ALL ((((rt1.c0)<<(rt0.c1)))%(((((rt0.c1)AND(rt1.c0)))OR(rt0.c2)))), ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (CASE WHEN '' THEN vt0.c0 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c2 END) AND ((NOT (rt1.c1)))), RTRIM((vt0.c0 IN ())), rt1.c0, (NOT (((rt1.c3)>(rt1.c3)))) FROM rt1, vt0, rt0 WHERE (((((((((((x'') BETWEEN (0.08380060226229946) AND (x'')))AND(('' IN ()))))AND(((x'') NOT NULL))))OR(((x'') NOT BETWEEN (NULL) AND (0Xffffffffe5af1e76)))))AND((((0.08473318247509332))<=((x'')))))); -- 0ms;
SELECT (- (rt0.c0)) FROM vt0, rt1;SELECT DISTINCT SUM(((NULL)GLOB(rt1.c3))), ((~ (rt1.c1)) IN ()), MAX(rt1.c0, CASE rt1.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END) FROM rt1, vt0;SELECT (((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))%(rt1.c1)) FROM vt0, rt1, rt0 WHERE (((CAST(NULL AS TEXT))-(LTRIM(0xffffffffa144dc0a, x'7d84')))) LIMIT 290878418; -- 0ms;
SELECT ABS(DISTINCT COUNT(*)) FROM vt0, rt1 WHERE (((((NULL)GLOB(''))) IS FALSE)) ORDER BY CASE WHEN rt1.c0 COLLATE NOCASE THEN TYPEOF(rt0.c2) WHEN ((0.27726290171858436) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN HEX(rt0.c1) WHEN (((rt0.c0))<((rt0.c1))) THEN rt1.c3 WHEN ((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ('14716930' IN ()) WHEN (- (vt0.c0)) THEN (rt1.c2 IN (vt0.c0)) END DESC  NULLS FIRST;SELECT DISTINCT (((rt0.c1 IN (rt1.c2))) NOTNULL) FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL (((rt1.c1)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 ELSE NULL END)) AND ((((rt0.c0)AND(rt0.c2))))) FROM rt1, vt0, rt0 LIMIT -1149381070 OFFSET 1315275524; -- 1ms;
SELECT ALL CAST((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))) AS NUMERIC) FROM rt0;SELECT DISTINCT ((((((rt1.c0) ISNULL))OR(MAX(rt0.c2))))AND(rt1.c2)) FROM vt0;SELECT ALL rt1.c1 FROM vt0;SELECT DISTINCT SQLITE_COMPILEOPTION_USED(MIN(vt0.c0)) FROM rt1, vt0, rt0 WHERE (((((((((((NULL)AND(NULL)))AND(x'')))AND('87278347')))OR(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT AVG(((rt1.c3)<>(rt1.c2))), (rt1.c0 COLLATE RTRIM IN ()), (((((rt0.c1))==((x''))))<<((rt1.c3 IN ()))) FROM vt0 LIMIT -603476550;SELECT DISTINCT (MIN(rt1.c0) IN ()), (((rt0.c2 IN (rt1.c1)))!=((NOT (rt1.c1)))), CASE (((vt0.c0, rt0.c0, vt0.c0))<((rt0.c2, rt1.c2, rt1.c2)))  WHEN ((rt0.c2)>(vt0.c0)) THEN (('CV') IS FALSE) WHEN (NOT (rt0.c2)) THEN rt1.c1 WHEN ((rt0.c0) BETWEEN (rt1.c0) AND (rt1.c2)) THEN CAST(rt1.c3 AS INTEGER) ELSE 0.21794980343097226 END FROM vt0;SELECT DISTINCT ROW_NUMBER() OVER (), (((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)) IN (((((vt0.c0)AND(rt0.c2)))AND(rt1.c3)), CASE WHEN rt0.c0 THEN rt1.c2 END)), (((0.6488010664608627))>((((rt1.c1)>>(rt1.c2))))) FROM rt1, rt0 WHERE (((((('-1888001604')+(NULL))))<=((x'' COLLATE RTRIM))));SELECT CASE ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN (rt0.c2 IN ()) THEN ((rt0.c2) BETWEEN (x'') AND (rt1.c2)) ELSE LIKELIHOOD(rt0.c0, 0.9304905744415021) END FROM rt1;SELECT DISTINCT 0.19065344673927198 FROM vt0, rt1 WHERE ((((+ ('e')))|((((''))==((0.2961656091094236)))))); -- 0ms;
SELECT ALL (NOT (CAST(rt0.c1 AS BLOB))), ((((((((rt0.c0)AND(rt1.c2)))OR(rt1.c3)))AND(rt1.c1)))OR(rt0.c2)) COLLATE RTRIM, x'' FROM vt0 WHERE ((((-1.495334963E9 IN ())) BETWEEN ((((NULL))=((0.9452387796812438)))) AND ('' COLLATE NOCASE)));SELECT DISTINCT CASE json_array_length('', rt1.c1)  WHEN (~ (rt1.c3)) THEN ((rt1.c0) ISNULL) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c2)) END, ((CAST(rt0.c0 AS BLOB))AND((((rt1.c2))==((rt1.c1))))), LIKELY(DISTINCT COUNT(rt1.c3)) FROM vt0 WHERE (((LIKELIHOOD('-77026484', 0.12173816713269514)) ISNULL));SELECT QUOTE(CAST('z~*쎍s\r' AS BLOB)) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ()))==(((rt1.c0)+(rt0.c2)))) FROM vt0, rt1;SELECT DISTINCT 1.053189774E9 FROM rt1, vt0, rt0 WHERE (TRIM(CASE 0.8150346919902979  WHEN NULL THEN 0.2690000682631274 ELSE x'' END)); -- 0ms;
SELECT ALL (CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c1 END IN ()) FROM rt1, rt0, vt0 WHERE ((- ('rlzJ饼u,[')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((rt1.c1)IS(rt0.c1)) COLLATE RTRIM COLLATE NOCASE FROM vt0, rt0 GROUP BY ((0.567303898011778) NOTNULL) HAVING SQLITE_COMPILEOPTION_USED((NOT (rt0.c2)));SELECT DISTINCT (((((vt0.c0))>((rt1.c0)))) NOT BETWEEN (HEX(rt1.c3)) AND ((+ (rt1.c2)))) FROM rt0 GROUP BY ('F%w	' IN ()) HAVING ((((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c0) NOT NULL))) ORDER BY (PRINTF(rt0.c1) IN (CAST(rt1.c3 AS REAL)));SELECT DISTINCT ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))|(((rt1.c1) IS TRUE))), ((((((((CASE rt1.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c2 END)AND(((rt1.c0)||(rt1.c1)))))OR(rt0.c0)))AND(((rt1.c1)+(NULL)))))OR(CAST(rt1.c2 AS TEXT))), 0Xffffffff9045b830 FROM rt1, vt0 ORDER BY rt1.c0, CASE (((rt1.c2, rt1.c3, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c3, rt1.c0)) AND ((rt1.c2, rt0.c2, rt0.c2)))  WHEN ((0x5bbde5ec)LIKE(rt0.c0)) THEN NULLIF(DISTINCT rt1.c0, 876376844) END  NULLS FIRST;SELECT ALL GROUP_CONCAT(rt1.c2) FROM rt0, vt0;SELECT ALL (((rt1.c2)) NOT BETWEEN ((((rt0.c2)||(rt1.c1)))) AND ((CAST(rt1.c1 AS INTEGER)))) FROM rt0 ORDER BY (~ (rt1.c1)) COLLATE BINARY COLLATE BINARY DESC, (((rt1.c0 IN ()))*((((('')OR(rt1.c3)))OR(rt1.c3))))  NULLS FIRST LIMIT -2047702293 OFFSET -600658955;SELECT DISTINCT TYPEOF((rt0.c2 IN ())) FROM rt0, vt0, rt1; -- 0ms;
SELECT ((((rt0.c2) IS TRUE))<((((rt0.c1, '-1874479056', rt1.c2))>((rt1.c3, vt0.c0, rt1.c2))))) FROM vt0, rt0, rt1 WHERE (((((LIKELY(0X58ad75d8))OR('0.10004036095480429')))OR((('1084512973491440882:337-3849696338677829090:247T3362026274463035617 1046-305 572 6269206301283210989T') ISNULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN ROUND(rt0.c1, rt1.c0) THEN ((((vt0.c0)OR(rt1.c2)))OR(rt1.c1)) WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt1.c2)) THEN rt0.c1 COLLATE NOCASE WHEN ((((rt0.c2)AND(rt1.c0)))OR(rt1.c2)) THEN CASE NULL  WHEN rt0.c2 THEN rt1.c2 ELSE vt0.c0 END END FROM rt0 WHERE ((((NULL) BETWEEN (NULL) AND (x'0fd6')) IN ())) GROUP BY IFNULL(CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 END, CAST(rt0.c1 AS BLOB)), CAST(((rt0.c2) BETWEEN (rt1.c0) AND (vt0.c0)) AS NUMERIC), ((((((((((rt1.c0)IS NOT(NULL)))OR((((rt1.c1, rt1.c1, rt1.c1)) BETWEEN ((rt1.c3, vt0.c0, rt1.c2)) AND ((rt0.c0, rt1.c1, rt0.c2))))))AND(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)))))AND(((rt0.c1)*(vt0.c0)))))OR(((rt1.c2)%(rt0.c2)))) HAVING CASE WHEN ((((rt0.c1)AND('14027661')))AND(1053189774)) THEN TOTAL_CHANGES() WHEN rt1.c0 THEN CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END WHEN x'12e6fccd' THEN CASE WHEN vt0.c0 THEN rt1.c0 END END;SELECT CAST(CASE rt1.c3  WHEN rt1.c2 THEN vt0.c0 END AS INTEGER) FROM vt0, rt1, rt0 WHERE ((+ (((((((((((((x'')AND(0.6573652791101068)))AND(0.8312319372365731)))AND(NULL)))OR(2089875659)))OR(0.32054926109994086)))OR(0.8506920717437726))))); -- 1ms;
SELECT ALL (((((rt1.c0))==((0Xffffffffb6d9521d)))) BETWEEN (rt0.c0 COLLATE BINARY) AND ((- (0.44038750185322084)))) FROM vt0, rt1, rt0 WHERE (1700370568); -- 0ms;
SELECT DISTINCT LTRIM(((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c0)), COUNT(*)) FROM rt0, vt0;SELECT TIME(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt1.c2) NOT NULL), ((((rt0.c0)AND(rt1.c0)))AND(rt0.c1)), CASE rt0.c0  WHEN x'' THEN rt0.c2 END, ((((rt1.c2)OR(rt1.c0)))AND(vt0.c0))) FROM rt0;SELECT ((rt0.c2 COLLATE RTRIM)*((NULL IN ()))), CASE rt0.c1  WHEN CASE rt1.c2  WHEN rt0.c1 THEN rt0.c1 END THEN CAST(vt0.c0 AS BLOB) WHEN (((rt1.c0, rt0.c1, rt1.c3))>=((rt0.c2, rt0.c1, rt1.c2))) THEN ((rt1.c0)<(1953740463)) WHEN ((rt1.c0) NOT NULL) THEN ((vt0.c0) BETWEEN (-8.71379612E8) AND (vt0.c0)) ELSE rt1.c3 END, ((((((((vt0.c0)OR(((vt0.c0)>>(rt1.c3)))))OR(((rt0.c2)&(rt1.c2)))))OR(AVG(rt0.c1))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c0)))) FROM rt1, rt0 GROUP BY ((rt0.c1 COLLATE NOCASE) IS FALSE), IFNULL((((rt1.c0, rt0.c2, rt1.c1))>((x'', rt0.c1, rt1.c3))), vt0.c0), (+ (rt1.c1 COLLATE BINARY)), ((rt0.c2 COLLATE BINARY)||(((((-734665779)AND(rt0.c0)))AND(rt0.c2)))), ((CASE WHEN rt1.c3 THEN rt0.c0 END) NOT BETWEEN ((+ (648492708))) AND ((NOT (NULL)))) HAVING (((rt1.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c0 COLLATE NOCASE, 0.10004036095480429, ((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))) AND ((vt0.c0, ((rt1.c2) NOT NULL), CAST(rt0.c1 AS TEXT))));SELECT NULL, COUNT(*), ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c0 END)AND(((-391342918) IS FALSE))) FROM rt1, vt0 WHERE (CASE WHEN x'' COLLATE BINARY THEN (((('0.15271274801493395')OR(0Xffffffffc3e9323d)))AND(NULL)) END);SELECT DISTINCT 'F%w	' FROM vt0 GROUP BY (- (rt0.c0)) HAVING (CAST(rt0.c1 AS TEXT) IN ());SELECT DISTINCT (((CAST(rt1.c2 AS TEXT)))=((SQLITE_COMPILEOPTION_USED(vt0.c0)))), rt1.c3, ((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))))<((SUM(rt0.c1)))) FROM rt1 WHERE (((('1896452239', 0.8364555515938957, x'')) BETWEEN ((DATETIME('-772556412', '-2012649727', '', '-278370123', NULL), CASE WHEN 0xffffffff931419d9 THEN 'g~' WHEN 691940340 THEN NULL WHEN 0.562210927231559 THEN '-1937533170' END, 0xffffffff8b1998f2 COLLATE NOCASE)) AND (((~ (NULL)), (('-1227271651') NOT BETWEEN (x'') AND (-1.789518121E9)), (((((((((((('1372190634')OR(0.4124806609937358)))AND('|q[')))AND(x'')))AND(x'')))AND(NULL)))AND(x'')))))) ORDER BY rt1.c3 ASC  NULLS LAST;SELECT DISTINCT (((vt0.c0 COLLATE RTRIM))<=(((NOT (rt1.c3))))) FROM rt0, vt0;SELECT ALL CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c0 END AS REAL), ((((((vt0.c0)LIKE(NULL)))AND(x'')))OR(rt0.c2)), (((((((((((((699333951 IN ()))AND((NOT (rt1.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c1)))))AND(((rt0.c2) BETWEEN (rt1.c2) AND (x'')))))OR((x'' IN (rt1.c2, rt0.c1)))))OR(NULL)))OR(((((vt0.c0)OR(rt1.c1)))AND(rt0.c1)))) FROM rt0, vt0 WHERE ((((((''))<(('')))) NOT BETWEEN (-1.227271651E9 COLLATE BINARY) AND (NULL COLLATE NOCASE)));SELECT DISTINCT LIKELY(DISTINCT ((((rt0.c0)AND(rt1.c2)))OR(rt1.c0))), (NOT (((rt1.c3) BETWEEN (rt1.c0) AND (rt0.c0)))), TOTAL(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END), (~ (((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))), ((rt1.c0 COLLATE RTRIM) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (json_array_length(rt1.c3))) FROM rt1, rt0, vt0; -- 0ms;
SELECT ALL LAST_VALUE(vt0.c0) OVER () FROM vt0 GROUP BY rt1.c2 HAVING (((rt1.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((((rt0.c1) IS FALSE))));SELECT DISTINCT (((((rt1.c0 IN ()))AND(CAST(rt0.c1 AS NUMERIC))))OR(CAST(rt0.c1 AS REAL))) FROM vt0, rt1;SELECT ALL vt0.c0, ((((((rt1.c0) NOT NULL))AND(((vt0.c0)IS(rt1.c2)))))AND((NOT (rt1.c2)))), COUNT(vt0.c0) OVER () FROM vt0, rt0;SELECT ALL MIN(TOTAL_CHANGES()) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT 0Xffffffff8fc674ae FROM vt0 WHERE ((x'' IN ())) GROUP BY (((~ (rt0.c1)))+((+ (rt0.c2)))) ORDER BY ((rt0.c0) BETWEEN ((NULL IN ())) AND (LENGTH(vt0.c0))) DESC  NULLS LAST, CASE (vt0.c0 IN ())  WHEN CAST(rt1.c3 AS REAL) THEN -1638237101 ELSE (x'58e3' IN (rt1.c3)) END;SELECT DISTINCT UPPER(DISTINCT ((rt0.c2) NOT NULL)) FROM vt0, rt1;SELECT ((((rt0.c1)AND(rt0.c1)))AND(MAX(rt0.c2))), (((- (rt0.c2)))||(((rt1.c0) IS FALSE))), CAST(((((rt0.c0)AND('')))AND(rt0.c2)) AS INTEGER) FROM vt0;SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1, vt0, rt0 WHERE ((~ ((('') NOTNULL)))); -- 1ms;
SELECT ALL '囯tp}#' FROM rt1, rt0 ORDER BY CASE rt1.c2 COLLATE NOCASE  WHEN (rt1.c2 IN (-1607499632)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((3.6206232E7))) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)|(rt1.c1)) WHEN (+ (rt1.c3)) THEN '' ELSE (rt0.c0 IN ()) END, rt0.c2  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)OR(rt1.c0)))OR(rt1.c1)))/(CASE rt1.c1  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c3 THEN rt0.c1 ELSE rt0.c1 END)) FROM vt0 WHERE ((((NULL))>=((0.7549025751837852))) COLLATE RTRIM);SELECT DISTINCT (((((((((((((((rt0.c1)AND(x'')))OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c3))))>=(((vt0.c0 IN (rt0.c2))))), (((json_type(rt0.c1)))!=((((rt1.c0)>(vt0.c0))))), ((CAST(rt0.c1 AS TEXT))<(((rt1.c3)IS NOT(rt1.c0)))) FROM vt0 WHERE ((((((0X293e2bf4))<>(('囯tp}#'))))>>(CAST(x'' AS BLOB))));SELECT ALL CAST(((rt1.c0) ISNULL) AS BLOB) FROM vt0, rt1, rt0 WHERE ((((((((((((((('-1804861197') NOT BETWEEN ('-h-86062903127603737T3918710210181681364:惥k') AND ('-2048453967')))OR(NULL)))AND((((NULL))!=(('-1129273073'))))))AND((((NULL, x'bbae', x''))<>((x'', '&IGv	or', NULL))))))OR(((x'13eb') NOT BETWEEN ('') AND ('K[')))))AND(CASE NULL  WHEN 0.2796413292236227 THEN 'yERfm✜Infinity	' ELSE '-871379612' END)))AND(CAST(0.22285398714447424 AS REAL)))) LIMIT -1897566602; -- 0ms;
SELECT HEX(DISTINCT COALESCE(rt1.c2, rt1.c1)) FROM rt0 WHERE (LIKE(((0X343c730c)GLOB(x'')), (((x'')) NOT BETWEEN ((0X6a3662f1)) AND ((NULL))), '0'));SELECT ALL MAX(((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c3))) FROM rt1 WHERE (((NULL) NOTNULL));SELECT ((('')) NOT BETWEEN ((((((rt1.c3)AND(rt1.c1)))AND(x'e0ae')))) AND ((COALESCE(rt1.c2, rt1.c2)))), ((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))) IN ()), ((rt0.c2 COLLATE BINARY)IS((((rt1.c0, rt1.c3, rt1.c2)) BETWEEN ((rt0.c1, rt1.c2, rt0.c0)) AND ((rt0.c0, vt0.c0, rt1.c1))))), ((rt1.c2) NOT NULL) COLLATE BINARY, (((rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt0.c0)) BETWEEN ((rt0.c2 COLLATE NOCASE, ((vt0.c0)%(rt0.c1)), rt0.c2 COLLATE RTRIM, ((rt0.c1)>(rt1.c3)), TRIM(DISTINCT rt0.c1, rt1.c0))) AND ((COUNT(rt0.c2), ((rt0.c0)||(rt1.c1)), SUM(rt1.c0), rt0.c1 COLLATE NOCASE, rt0.c2))) FROM rt0 NATURAL JOIN vt0 WHERE (CAST(CAST(x'' AS TEXT) AS REAL)) ORDER BY ((((((rt1.c2)AND(rt1.c3)))OR(rt1.c2)))/((NOT (rt1.c1))))  NULLS FIRST;SELECT DISTINCT CASE rt1.c2  WHEN ((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN json_array(rt1.c0, rt1.c1, rt1.c0, rt1.c2) END, MAX(NULL), ((UNLIKELY(DISTINCT rt0.c2))!=(((((((((rt0.c0)OR(rt1.c3)))OR(x'e7c9a109')))AND(rt0.c2)))AND(rt0.c2)))) FROM rt0, vt0 GROUP BY ((((((((rt0.c1)AND(rt1.c0)))OR(rt1.c1)))AND(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))))AND(rt0.c2)) HAVING rt1.c1;SELECT DISTINCT LIKE(((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c1)), rt1.c3) FROM rt1;SELECT ALL AVG(((rt1.c2)IS NOT(rt1.c2))), ((rt1.c3) IS FALSE) COLLATE NOCASE, CAST(CASE rt1.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c3 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c1 THEN '-811268990' END AS INTEGER) FROM rt1 WHERE (((((x'fabd')OR('1236974497')))AND('-1451204630')) COLLATE NOCASE);SELECT DISTINCT ((((LIKELY(rt0.c0))OR(rt1.c2)))OR((- (rt0.c0)))) FROM rt1, rt0 WHERE (((CASE '!''/DgC醝B'  WHEN 865472559 THEN '-1739051505' ELSE x'' END)/(('+齜0jUH0u' IN ())))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)||(rt1.c2)))OR(rt1.c0 COLLATE RTRIM)))OR(((rt0.c2)IS NOT('-654151018')))) FROM rt1, rt0, vt0 WHERE ((((-2.42153379E8 IN (816110151))) NOT BETWEEN (((x'928e') ISNULL)) AND ((('-658240622')|(0.8117889056597284))))); -- 0ms;
SELECT AVG(((vt0.c0)AND(rt1.c1))) OVER ( ORDER BY (- (LIKELY(rt0.c2)))), UNLIKELY((((rt0.c1, rt0.c0, rt0.c0))>((rt1.c0, vt0.c0, rt0.c1)))), CASE ((0Xffffffff95495494)<>(vt0.c0))  WHEN CASE rt1.c2  WHEN vt0.c0 THEN rt1.c3 ELSE vt0.c0 END THEN ((rt0.c2) NOT NULL) WHEN '1986843004' THEN NULL WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt1.c1 END THEN rt0.c2 COLLATE NOCASE END FROM vt0, rt1, rt0 ORDER BY rt1.c3  NULLS LAST; -- 0ms;
SELECT DISTINCT ((json_type(rt1.c0))LIKE((NOT (rt1.c0)))) FROM rt1, vt0 WHERE ((((('0.9763279959924233')IS NOT(x'ce5f46a5'))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((TOTAL(rt1.c0))<=(COUNT(*))), (COALESCE(rt1.c0, rt0.c1) IN ()), rt1.c3 FROM vt0, rt1, rt0; -- 3ms;
SELECT LAG(664459221, CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (- (vt0.c0)) END, (vt0.c0 IN ()) COLLATE NOCASE) OVER () FROM vt0 WHERE (((((((0.24832485240857693)AND(0Xffffffff972ecf1f)))AND(x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT AVG(((rt1.c3) ISNULL)) FROM vt0, rt1 GROUP BY CAST(NULL AS BLOB) HAVING CASE CAST(rt1.c3 AS NUMERIC)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt1.c1)|(rt1.c3)) WHEN rt1.c0 COLLATE RTRIM THEN CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c1 END WHEN AVG(rt1.c3) THEN MAX(rt0.c0) ELSE ((((rt0.c2)OR(rt0.c1)))AND(rt1.c0)) END ORDER BY CAST(rt1.c2 AS NUMERIC) ASC, rt1.c3  NULLS LAST, ((((((rt0.c2)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (x'') AND ((rt1.c1 IN ())))  NULLS LAST;SELECT DISTINCT ((((rt1.c0)>>('-1789518121')))<(((((-4.0095429E8)AND(rt1.c1)))OR(rt1.c1)))), (CAST(rt1.c0 AS INTEGER) IN ()), (((((rt0.c0) IS TRUE)))=((vt0.c0 COLLATE BINARY))) FROM rt0, rt1 ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ())  NULLS FIRST;SELECT MIN((rt0.c1 IN (rt1.c3, rt0.c1))) FROM vt0, rt0 WHERE (CAST(((x'a05b')|(NULL)) AS NUMERIC));SELECT ALL SUM(CASE WHEN vt0.c0 THEN rt0.c2 END) OVER () FROM vt0, rt0 WHERE (((((NULL)=(0x78a9d0d2))) NOTNULL)); -- 0ms;
SELECT (((((('')AND(x'')))OR(rt1.c3)))IS((rt0.c1 IN ()))), rt1.c3, (((((rt1.c2 IN ()))OR(rt0.c1)))AND((rt1.c0 IN ()))), ((((rt1.c0)%(rt1.c0))) NOT BETWEEN ((0x3fec27e IN ())) AND ('')), ((NULL) NOT BETWEEN (rt1.c3 COLLATE RTRIM) AND (CASE rt1.c1  WHEN rt1.c3 THEN vt0.c0 END)) FROM vt0 GROUP BY (x'610a' IN ()) HAVING (MIN(rt1.c0) IN ());SELECT DISTINCT CAST(rt1.c2 COLLATE NOCASE AS REAL), CASE WHEN vt0.c0 THEN rt1.c3 WHEN -8.99277495E8 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END COLLATE RTRIM, (((~ (rt1.c2)))AND(CASE WHEN '' THEN rt0.c0 END)) FROM rt0, rt1 WHERE (((CASE NULL  WHEN '-1474700440' THEN x'' ELSE 0.6100993026735197 END) IS FALSE));SELECT ALL ((vt0.c0 COLLATE BINARY)GLOB(AVG(vt0.c0))) FROM rt0, vt0, rt1 LIMIT -434589359 OFFSET -1144329114; -- 0ms;
SELECT JULIANDAY(MAX(rt0.c1), ((rt0.c2)||(rt0.c2)), (+ (rt1.c0))), (NOT (rt1.c2)) COLLATE RTRIM, ((((COUNT(*))OR(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))))OR(CASE WHEN rt0.c2 THEN '' END)) FROM rt0, rt1, vt0 WHERE (CAST((('') NOT NULL) AS INTEGER)); -- 0ms;
SELECT DISTINCT MIN(CAST(rt1.c2 AS INTEGER), (((rt0.c1))<=((rt0.c1))), ((((vt0.c0)AND(rt0.c0)))AND(rt1.c3)), vt0.c0 COLLATE NOCASE) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT AVG(((rt1.c3) ISNULL)) FILTER(WHERE (rt1.c2 COLLATE NOCASE IN (((rt1.c2)+(vt0.c0))))) OVER () FROM vt0, rt0 WHERE (((CAST(x'' AS NUMERIC)) BETWEEN ((('1060960572')-(NULL))) AND (((('770339325')) BETWEEN ((-267114476)) AND (('5.{j}	v*'))))));SELECT ALL LTRIM(((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))) FROM rt1 WHERE (((CASE 0.8955362593556309  WHEN x'' THEN 0.47161894741068755 END) NOT BETWEEN (CAST(x'' AS REAL)) AND (0xffffffff8a08c39f)));SELECT ALL CAST(CASE rt0.c2  WHEN rt1.c1 THEN 'vy' WHEN rt1.c2 THEN rt0.c0 WHEN NULL THEN rt1.c2 ELSE rt0.c2 END AS BLOB) FROM rt1 WHERE (((0X7aa5e064)AND((('녬U[C AZC')&(NULL))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL);SELECT DISTINCT CAST((rt1.c2 IN (rt1.c2, rt1.c0)) AS INTEGER) FROM rt1 WHERE (((((x'')IS(0.7807398065216542)))<(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT ((((rt1.c0)||(rt0.c2))) NOT BETWEEN ((rt1.c3 IN (rt1.c0))) AND (0.393830429639359)) FROM vt0 WHERE (((((((((x'' COLLATE NOCASE)AND(((NULL) NOT BETWEEN (NULL) AND (0.4424111076439191)))))AND(((0.13855965661502234)IS('')))))OR(474724878)))AND((0.3597547798902272 IN ()))));SELECT ALL MIN((((rt0.c2))<>((rt1.c3)))), (~ (0.7039881090611521)), (((((((((NOT (rt1.c1)))AND(rt1.c1 COLLATE NOCASE)))AND((rt0.c2 IN ()))))AND(((rt1.c3)<=(rt1.c1)))))OR(TOTAL(rt1.c2))) FROM rt1 WHERE (UPPER(DISTINCT (- ('')))) ORDER BY rt0.c0 ASC  NULLS LAST;SELECT ALL ((((vt0.c0)IS NOT(rt0.c1))) BETWEEN (rt1.c1 COLLATE BINARY) AND (CAST(rt1.c2 AS BLOB))), AVG(((rt1.c2)<>(rt0.c0))) OVER (), TOTAL(((rt0.c1) ISNULL)) OVER (), ((((rt1.c2) NOT NULL))+(((rt0.c0) ISNULL))), MAX((rt1.c0 IN (rt0.c2))) FROM rt0, vt0 WHERE ((((((x'')OR('-2047702293'))))>((((NULL)IS NOT(0.9763279959924233)))))) GROUP BY (((rt1.c1 IN (rt0.c1)))!=(((rt0.c0)-(vt0.c0))));SELECT DISTINCT (+ (rt1.c3)) COLLATE NOCASE FROM vt0, rt0, rt1; -- 1ms;
SELECT DISTINCT (((NOT (rt1.c3))) BETWEEN (((rt1.c0)<>(rt0.c1))) AND (CAST(rt1.c2 AS INTEGER))) FROM rt0;SELECT DISTINCT ((((CASE rt0.c1  WHEN rt1.c0 THEN '' WHEN rt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c0 END)AND((x'' IN ()))))AND(((rt1.c0)&(rt1.c2)))) FROM vt0, rt1 WHERE ('2092563602'); -- 0ms;
SELECT ALL COUNT(x'') FROM rt1, rt0, vt0 WHERE (((SQLITE_SOURCE_ID())LIKE(CASE NULL  WHEN 282082703 THEN '-1899595970' ELSE NULL END))); -- 0ms;
SELECT DISTINCT ((((rt1.c2) ISNULL))&(((rt1.c0)>(rt0.c2)))) FROM vt0, rt1 WHERE ((((((x'')) NOT BETWEEN (('')) AND ((-8.99277495E8))))>((x'' IN ()))));SELECT DISTINCT ((((rt0.c1)GLOB(rt1.c1))) IS TRUE) FROM rt1 ORDER BY (TYPEOF(DISTINCT rt1.c0) IN ()) DESC  NULLS LAST;SELECT DISTINCT vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt1.c3 COLLATE BINARY, ((CAST('248994795' AS INTEGER))>=((rt1.c1 IN ()))), rt1.c3 HAVING ((json_remove('uh', rt1.c3, rt1.c0, rt0.c2))||(((rt0.c0) IS FALSE)));SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC))<<(CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END)) FROM rt0 WHERE ((((NOT ('')))GLOB((((NULL, NULL, -2.1439483E8, -1595255177, 0.5199203561415099))>=((0.22922745405804312, 'KJ1fAN', NULL, x'3449', '')))))) GROUP BY TYPEOF(DISTINCT ((rt1.c2)IS(rt1.c2))), (((rt0.c1, rt1.c1, rt0.c0)) BETWEEN (((~ (rt0.c2)), rt1.c1, NULL)) AND ((((rt1.c2)>=(rt0.c2)), (~ (rt1.c1)), (rt1.c0 IN ())))), ((rt0.c0)GLOB(rt0.c0)) LIMIT 474724878;SELECT DISTINCT CAST((+ (rt1.c2)) AS BLOB), CAST((('0.4786544861068076')+(rt1.c2)) AS BLOB), ((((((((((((((rt1.c2)OR(rt1.c0)))AND(rt0.c0)))OR(rt1.c2)))AND(rt1.c2)))AND(rt0.c0)))AND(vt0.c0)))OR(CAST(rt0.c1 AS TEXT))) FROM vt0, rt0 GROUP BY CASE ((rt0.c1)<<(rt1.c0))  WHEN ((((rt0.c2)OR(rt1.c0)))OR(rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) ELSE rt1.c3 COLLATE BINARY END, (((((((rt1.c2, rt1.c0, vt0.c0))<=((0Xc042bd7, rt1.c3, rt0.c0))))AND(vt0.c0)))AND((+ (rt1.c1)))), ((((((((((((CAST(rt0.c2 AS INTEGER))AND(((rt1.c0) IS FALSE))))OR(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c1)))))AND(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c1 END)))OR(((((((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c2)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c2)))))AND(LOWER(rt0.c2))))OR((- (rt1.c3)))) ORDER BY SQLITE_COMPILEOPTION_GET(TRIM(DISTINCT rt1.c0, rt1.c3)), (rt1.c2 COLLATE NOCASE IN ()) DESC;SELECT ALL rt0.c1 FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c2)>=(rt0.c0))) NOT NULL) FROM rt0, vt0 INNER JOIN rt1 ON CAST(((rt1.c0) NOT NULL) AS TEXT); -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((((rt1.c0) IS FALSE), rt1.c2, ((((((((vt0.c0)AND(rt0.c2)))AND(rt1.c3)))AND(rt1.c1)))OR(rt1.c2)))) AND (((+ (rt1.c0)), rt1.c1 COLLATE NOCASE, CAST(rt0.c2 AS TEXT)))) FROM rt1 ORDER BY CASE rt0.c0  WHEN '' THEN ((rt0.c0)AND(rt1.c3)) END  NULLS FIRST;SELECT ALL FIRST_VALUE(((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c2 END)AND(vt0.c0 COLLATE BINARY))) OVER ( RANGE BETWEEN (((rt0.c0 IN ())) ISNULL) PRECEDING AND ((0.25127305675902867) IS TRUE) PRECEDING) FROM rt1, vt0, rt0 WHERE (CASE WHEN HEX(DISTINCT 0.15690011096937584) THEN ((x'')LIKE(NULL)) ELSE (-1.235417099E9 IN ()) END);SELECT COUNT(*) COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT rt0.c1 FROM vt0, rt1;SELECT DISTINCT TOTAL((- (rt1.c0)) COLLATE BINARY) FROM rt1 CROSS JOIN rt0 ON (NOT (((vt0.c0)|(rt1.c1)))) CROSS JOIN vt0 ON ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c3 ELSE vt0.c0 END) BETWEEN (((vt0.c0)-('-456163488'))) AND (((vt0.c0)LIKE(rt1.c3)))); -- 0ms;
SELECT ALL CASE ((rt0.c0)=(rt0.c0))  WHEN COUNT(*) THEN (((rt0.c1, rt0.c0, rt1.c3, rt0.c0, rt1.c3)) BETWEEN ((rt0.c2, rt1.c3, rt0.c1, rt1.c0, rt0.c0)) AND ((rt1.c3, rt1.c2, rt1.c3, rt0.c0, rt1.c3))) ELSE ((((rt1.c3)AND(rt1.c2)))OR(rt0.c0)) END FROM vt0 GROUP BY (((STRFTIME(rt1.c3, rt0.c0, rt1.c1), rt0.c0 COLLATE NOCASE, ((rt1.c3)LIKE(rt0.c2))))<(((rt0.c0 IN ('109417607')), CAST(rt1.c2 AS REAL), ((((((((rt0.c2)AND('WQic.gS')))AND(rt1.c0)))OR(rt0.c1)))OR(rt1.c2))))), ((rt0.c1) BETWEEN (COALESCE(rt0.c0, rt0.c1, rt0.c2, rt1.c0, rt1.c2, '1789715292')) AND (((rt0.c1) IS FALSE))), CASE rt1.c2  WHEN CASE WHEN vt0.c0 THEN rt0.c0 END THEN (rt0.c0 IN ()) END, ((0.5584059523434595) BETWEEN ((((rt1.c2))<>(('0z+ZP0({)')))) AND (((vt0.c0) NOT NULL))), NULL HAVING (((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c2))))<=((((((rt1.c3)AND(rt0.c1)))AND(vt0.c0)))));SELECT DISTINCT rt1.c0 FROM rt0 GROUP BY ((((rt1.c2) IS TRUE)) IS FALSE), ((((((((((((rt1.c1)AND(rt1.c3)))OR(0Xffffffff9781e0c8)))AND(((rt0.c1)|(rt0.c0)))))OR(((rt1.c0)IS NOT(rt1.c2)))))AND(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(CASE WHEN -8.99277495E8 THEN rt1.c3 ELSE rt0.c2 END)), CASE WHEN ((rt1.c3)AND(x'')) THEN NULL ELSE ((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c2)) END HAVING (~ ((- (rt0.c0))));SELECT ((((rt1.c1) BETWEEN (rt1.c0) AND (3217814.0)))<=(0.32118028600850235)) FROM rt0;SELECT DISTINCT (CAST(rt0.c2 AS REAL) IN ()), ((((rt1.c1)/(rt0.c2)))IS(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)))), CAST((NOT (rt0.c0)) AS NUMERIC) FROM rt0 INNER JOIN rt1 ON x'' RIGHT OUTER JOIN vt0 ON (((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))))>((((rt1.c2, rt0.c1, rt1.c0, rt1.c2, rt1.c1))!=((vt0.c0, NULL, vt0.c0, rt1.c2, rt1.c1))))) WHERE (((TRIM(DISTINCT 0.9772233192547923))IS NOT(((x'9d93') BETWEEN ('0MO(J') AND (0.09426508403265288))))) ORDER BY ((((rt0.c1) NOT NULL))OR((((rt0.c1, rt1.c3, rt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt0.c1)) AND ((rt0.c1, vt0.c0, rt1.c1)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((rt1.c3) NOT BETWEEN (0.41401984558889326) AND (rt0.c1)) COLLATE NOCASE COLLATE NOCASE FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT rt0.c2))<>(json_type(rt1.c1))) FROM rt1 WHERE ((((NULL)%('')) IN (x'' COLLATE BINARY)));SELECT DISTINCT AVG(((rt1.c1)==(rt1.c3))) OVER () FROM vt0, rt0 WHERE ('KE''Od+쎟d') LIMIT -1959128545;SELECT rt1.c0 FROM vt0, rt0, rt1; -- 0ms;
SELECT CASE WHEN CASE vt0.c0  WHEN rt1.c1 THEN rt1.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN 0.8248253345968045 ELSE rt1.c0 END THEN (((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) END FROM rt1 WHERE (((((NULL)-(NULL)))LIKE((((('')AND('bK(UIv')))AND(x'')))));SELECT DISTINCT ((rt0.c2 COLLATE NOCASE)%(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c2 ELSE rt0.c2 END)), (((('|0')=(rt0.c0))) NOT BETWEEN ((((rt0.c2, rt1.c0, rt1.c3)) BETWEEN ((rt1.c3, vt0.c0, vt0.c0)) AND ((0.47133896738251413, rt0.c0, rt1.c2)))) AND (vt0.c0 COLLATE BINARY)), (~ (((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c1)))) FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL IFNULL(((-1333958894) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (vt0.c0 IN (rt0.c2, rt1.c3))) FROM vt0 WHERE (((TIME(x'', 0.9778578172035437, x'453876c7'))<((NOT ('5/\nH'))))) ORDER BY (((+ (vt0.c0))) IS FALSE) ASC  NULLS LAST LIMIT -1737586274;SELECT DISTINCT MAX(CAST(vt0.c0 AS REAL)), GROUP_CONCAT(((rt1.c1)-(vt0.c0))), FIRST_VALUE(MIN(rt0.c2, ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)), 0.8333009099673636, (rt0.c2 IN (rt1.c0)))) OVER () FROM rt1, rt0 WHERE (CHANGES());SELECT DISTINCT ((((rt1.c1) IS FALSE))IS NOT(CAST(rt1.c0 AS TEXT))) FROM vt0, rt0, rt1 WHERE (DATETIME(((('156725936', NULL, 'Z\r㡢/8~^ꎌ'))<>(('-472650664', -1739391744, NULL))), ((-763945130)/(1755731282)), ('0.22922745405804312' IN ()), (('hS') BETWEEN (x'') AND (0Xffffffffd88bd791)), CASE WHEN x'' THEN 'o_Lqbx0' WHEN 0.12078801654346183 THEN 'F?D⯴' WHEN '1506303321' THEN '0.01922788126710895' END)); -- 0ms;
SELECT ALL CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) AS TEXT), CAST(CASE WHEN '642507246' THEN vt0.c0 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN vt0.c0 END AS INTEGER), CASE rt1.c0  WHEN rt0.c2 THEN rt1.c3 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY, MAX(((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c1))), CASE ((rt1.c3) IS TRUE)  WHEN (((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0))) THEN ((rt1.c3)GLOB(vt0.c0)) ELSE vt0.c0 END FROM vt0 WHERE (((CAST('f5' AS BLOB)) NOTNULL));SELECT DISTINCT ((((rt1.c0)/(vt0.c0)))/(rt1.c1)) FROM rt1, vt0, rt0 WHERE (((CAST(NULL AS NUMERIC)) NOT BETWEEN (CASE WHEN x'e6ac' THEN 0X707d4952 END) AND (((NULL) NOT BETWEEN ('') AND (0.3693478100629882))))) GROUP BY LIKELIHOOD(DISTINCT ((((((((vt0.c0)OR(rt1.c3)))AND(rt0.c1)))OR(rt1.c1)))AND(vt0.c0)), 0.4421822286400464), ((CAST(rt1.c1 AS NUMERIC))%(CASE rt1.c3  WHEN rt0.c1 THEN rt1.c1 END)), 0.3952989254946051 HAVING (((~ (vt0.c0)))>=(((rt0.c2)GLOB(rt1.c3)))) LIMIT -2047702293; -- 0ms;
SELECT COUNT(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1))) OVER () FROM rt1 ORDER BY ((rt1.c0)IS NOT((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((0Xffffffffeaa0ff6f))))), (- (RTRIM(rt0.c0))) DESC, x'' ASC  NULLS FIRST;SELECT DISTINCT (('e훖' IN ()) IN ()) FROM rt1, rt0, vt0 WHERE (CAST((NOT (NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT CASE CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END  WHEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c0))) THEN '' END FROM rt1, rt0, vt0 WHERE ((((((x'')!=('')), CASE WHEN x'' THEN NULL ELSE '' END, ((0X0)&(-1.802834153E9))))>=((ABS('0.3521970043911573'), ((0Xfffffffff2a3c461) IS TRUE), ((NULL)GLOB(x'')))))) LIMIT 358355322; -- 0ms;
SELECT 0.15260877244382676 FROM vt0, rt1, rt0; -- 0ms;
SELECT CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT) FROM rt0 WHERE ((((((NULL))>((1452375826)))) BETWEEN ((NULL IN ())) AND (((0.46676564754430727) NOT BETWEEN (NULL) AND ('428309151'))))) LIMIT -1 OFFSET -2013013820; -- 0ms;
SELECT ((((rt0.c2)GLOB(rt0.c0))) BETWEEN (SUM(rt0.c2)) AND ((((vt0.c0))=((rt1.c1))))), ((TOTAL(rt1.c3))!=(((((vt0.c0)AND('311119100')))AND(rt0.c1)))), ((SUM(rt1.c0))<(((rt1.c2)+(rt1.c0)))) FROM vt0, rt1;SELECT ALL ((rt0.c0)==(rt0.c2)), CASE WHEN ((rt1.c1)+(rt1.c3)) THEN rt0.c1 COLLATE RTRIM WHEN ((((((((x'')AND(rt1.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)) THEN rt1.c3 COLLATE NOCASE WHEN rt0.c0 COLLATE RTRIM THEN HEX(rt0.c2) ELSE rt0.c0 END, ((vt0.c0)<(vt0.c0)) COLLATE BINARY FROM vt0 WHERE ((0.6509033481170601 IN ()));SELECT DISTINCT AVG((((rt1.c2))>((rt0.c0)))) FILTER(WHERE ((((rt0.c0)OR(rt0.c1))) IS FALSE)) OVER () FROM vt0;SELECT DISTINCT ((((rt1.c1)AND(rt1.c1)))<>(json_remove(rt0.c1, rt1.c2))) FROM rt1, rt0, vt0 WHERE (CASE CAST(0.915281524429879 AS NUMERIC)  WHEN ((x'b13b') ISNULL) THEN (('')>('')) ELSE (((('G?-HX鱋')OR(NULL)))OR(']]')) END); -- 0ms;
SELECT DISTINCT '' FROM vt0, rt0, rt1 WHERE ((((('') NOT BETWEEN (0.40737774859999243) AND (NULL)))|((((''))<((x'')))))); -- 0ms;
SELECT AVG((rt1.c3 IN ()) COLLATE NOCASE) FROM rt1 WHERE (CASE ((x'029e')+(x''))  WHEN NULL COLLATE RTRIM THEN ((1150467118)<=('')) WHEN (('9la''FV')IS NOT('wD>')) THEN ((x'')<<(NULL)) WHEN 0.4705544383815896 THEN CAST(x'' AS REAL) ELSE PRINTF(0.5775514514775821, x'b092', -1.011398188E9) END) GROUP BY ((((rt1.c0 IN ())))>=((((rt0.c0)*(rt0.c0)))));SELECT DISTINCT ((0X406278ab) BETWEEN (607151491) AND (rt0.c0)) COLLATE RTRIM FROM rt1;SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST('QEU+sFF7P' AS REAL)) BETWEEN (CAST('-784115045' AS NUMERIC)) AND (CAST(NULL AS REAL)))) ORDER BY ((((((((((((rt1.c2)OR(rt0.c1)))OR(rt1.c3)))OR(rt0.c0)))OR(((rt1.c3) IS FALSE))))OR(CAST(rt0.c2 AS TEXT))))OR((((rt1.c0))==((rt1.c3)))))  NULLS LAST;SELECT DISTINCT (rt0.c2 IN ()), LEAD(json_type((((0Xffffffff8a08c39f))>=((NULL)))), (((((rt1.c3))==((rt1.c0)))) NOTNULL), (((((rt1.c1 IN ()))OR((~ (vt0.c0)))))AND(rt0.c1 COLLATE NOCASE))) OVER ( ORDER BY rt0.c1  NULLS FIRST), GROUP_CONCAT(((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c2))) FROM rt1, rt0, vt0 WHERE (((((0.3846579078572506)AND(NULL)))OR('0.13440107119001554')) COLLATE RTRIM); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE RTRIM)-(CAST(rt1.c0 AS NUMERIC))), ((GROUP_CONCAT(rt1.c3)) NOT BETWEEN (((0.8734963562359916) BETWEEN (rt0.c1) AND (rt1.c1))) AND (CAST(vt0.c0 AS BLOB))), CASE (- (rt1.c1))  WHEN ((x'')GLOB(rt1.c1)) THEN (((rt1.c3))<=((rt0.c2))) ELSE ((rt0.c0)OR(-811268990)) END FROM rt0, vt0, rt1; -- 0ms;
SELECT (rt0.c1 IN ()) COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT ALL COUNT(*) FROM rt1 LIMIT 880987865; -- 0ms;
SELECT DISTINCT ((((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))OR(((rt1.c0)IS NOT(rt0.c0)))), GROUP_CONCAT(CAST(x'' AS TEXT)) OVER (), rt0.c1, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-851314816')))<>(MAX(rt0.c0))), TOTAL(((((((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1))) OVER () FROM rt0, vt0 WHERE (((0.2576987359074383 COLLATE NOCASE) IS FALSE)) ORDER BY ((((((rt1.c1, rt0.c0, rt1.c2))>=(('', rt1.c3, rt1.c1)))))<=((''))) ASC  NULLS FIRST;SELECT ((TOTAL(rt0.c0))GLOB(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 END)) FROM rt0, rt1, vt0 GROUP BY CASE WHEN (((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, vt0.c0)) AND ((rt1.c1, rt1.c3, rt0.c1))) THEN (~ (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c2 END WHEN ((rt1.c1) IS TRUE) THEN ((rt1.c0) IS TRUE) WHEN ((rt1.c0)AND(rt1.c2)) THEN (((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN ((rt0.c2) IS FALSE) THEN rt1.c0 COLLATE NOCASE END ORDER BY CAST(((rt1.c1) IS TRUE) AS INTEGER) DESC; -- 0ms;
SELECT DISTINCT ((((vt0.c0, NULL, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt1.c3, rt0.c0, rt0.c0))) IN ((rt0.c0 IN (0.1376758492748953)))) FROM rt0, vt0;SELECT ALL ((((((rt1.c1)=(rt1.c0)))OR(((rt1.c3)-(0.6686149186632919)))))AND((- (rt1.c1)))) FROM vt0 WHERE (0.7858557412426971) LIMIT 1689645211 OFFSET -2023117826;SELECT ALL TRIM(DISTINCT MIN(rt1.c2), ' EbR\EQ3') FROM rt1, vt0 WHERE (((((0.9048573876396206)GLOB(x'')))==(x'4d6d' COLLATE NOCASE))) LIMIT -789728716; -- 0ms;
SELECT DISTINCT ((NULL)==(CAST(rt0.c1 AS INTEGER))), COALESCE(DISTINCT (rt1.c2 IN ()), rt0.c1 COLLATE NOCASE), UNLIKELY(DISTINCT rt1.c0 COLLATE RTRIM) FROM vt0;SELECT DISTINCT (+ (CAST(rt0.c0 AS INTEGER))), LIKELY(((rt0.c0) NOT NULL)), LEAD(((CASE rt0.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt0.c0 END) BETWEEN (rt1.c1 COLLATE RTRIM) AND (0.6294479210131775)), ((((rt0.c0)AND(0xffffffff9f5bf034)))AND(rt0.c2)) COLLATE NOCASE COLLATE RTRIM, ((rt1.c3) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND ((~ (rt1.c0))))) OVER (), MIN(rt0.c2), ((CAST(rt0.c2 AS REAL))|((NULL IN ()))) FROM rt0, rt1, vt0 WHERE (((((((NULL)||(NULL)))OR((('-2072405636') NOT BETWEEN ('2057691236') AND (NULL)))))OR(CAST(0xffffffff8b0ed6d6 AS REAL)))) GROUP BY ((rt1.c0) BETWEEN (CASE WHEN rt1.c2 THEN rt0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 END) AND (((2.111606937E9) BETWEEN (rt0.c2) AND (rt0.c1)))) HAVING rt0.c0; -- 1ms;
SELECT ALL FIRST_VALUE((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) OVER () FROM vt0; -- 0ms;
SELECT ALL AVG((rt0.c2 IN (rt0.c1))) OVER ( ORDER BY vt0.c0 ASC), x'', LAG(((((((rt1.c0, 0Xffffffffaa4e67d1, rt1.c0, rt1.c1, rt0.c0)) BETWEEN ((rt1.c2, vt0.c0, rt1.c3, 0.24887609318266668, rt1.c1)) AND ((rt0.c0, vt0.c0, vt0.c0, rt1.c0, rt1.c0)))))<=((CASE rt1.c3  WHEN rt1.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END))), (+ (0xffffffff926ba838)), ((((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c1)))IS NOT((- (rt1.c3))))) OVER () FROM rt1, vt0, rt0 WHERE (CAST((('5dAm! M걏') BETWEEN (x'') AND (x'')) AS NUMERIC)); -- 0ms;
SELECT load_extension((- (rt1.c0))) FROM vt0, rt0, rt1 WHERE ((((NOT (996295021)))|(((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt1.c0 IN ())) FROM rt0 WHERE (CASE ((('2057691236'))>=((x'')))  WHEN ((((((((x'6e1d')AND(x'')))AND('0.0')))AND(-901114875)))OR(x'')) THEN CASE '-238450797'  WHEN NULL THEN x'7c32' WHEN NULL THEN x'' WHEN x'' THEN 0.9339787225876576 ELSE -7.84115045E8 END WHEN (NOT (NULL)) THEN (-1630380036 IN ()) WHEN ((('-1266574309'))<=((NULL))) THEN (0.3363602717527753 IN ('C拱')) WHEN LIKELY(DISTINCT x'') THEN load_extension('-1924065409') WHEN (~ ('ᅣSV')) THEN CAST(1970682147 AS INTEGER) ELSE (x'' IN ()) END) LIMIT 1382386532 OFFSET 543338832; -- 0ms;
SELECT ALL CAST(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 ELSE vt0.c0 END AS BLOB), (((rt1.c3)==(rt0.c0)) IN ()), MIN(((x'')<(rt1.c3))) FROM rt0, vt0, rt1 WHERE (LIKELY((((((((('-+')OR('1318178785')))AND(x'')))AND(NULL)))OR(x'')))); -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c2 IN (rt0.c2)) THEN CAST(rt1.c0 AS TEXT) ELSE ((rt0.c0)IS(NULL)) END FROM vt0;SELECT DISTINCT TOTAL(rt1.c0) OVER () FROM rt0 WHERE (((CAST(0Xffffffffcb42ddc5 AS NUMERIC))>(CAST('i9' AS REAL))));SELECT ALL CASE WHEN ((vt0.c0) ISNULL) THEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)) ELSE (rt0.c1 IN ()) END FROM rt1, rt0, vt0 GROUP BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)>>(NULL))) AND (HEX(DISTINCT vt0.c0))); -- 0ms;
SELECT ALL SUM(TOTAL(CASE WHEN '' THEN rt1.c3 ELSE x'' END)) FROM rt0, rt1 WHERE ((((('TdPlxssZ')IS(x'8eee')))==(CAST(x'' AS INTEGER))));SELECT DISTINCT rt1.c0 FROM vt0 NOT INDEXED, rt1; -- 0ms;
SELECT json_type(((rt0.c0)<<(rt0.c0))), CAST(((rt1.c1) NOT BETWEEN (rt0.c2) AND (0xffffffffc90a7262)) AS BLOB), (((rt0.c0))>=((rt1.c1))) COLLATE NOCASE COLLATE BINARY FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT UPPER(CASE WHEN rt0.c2 THEN rt0.c0 END) FROM rt1, rt0 LIMIT -1899478974 OFFSET -1013551369; -- 0ms;
SELECT DISTINCT (((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END, (0.6698060055166072 IN (rt1.c1)), COUNT(*)))!=((CAST('-1085253164' AS NUMERIC), vt0.c0 COLLATE RTRIM, ((rt1.c1) ISNULL)))), ((((((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c0)))))OR(vt0.c0)))AND(rt0.c0)))AND((vt0.c0 IN (rt0.c0, rt1.c0)))), (((rt1.c1)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND (((rt0.c1 IN (rt0.c2, rt1.c0))))) FROM rt1, vt0 WHERE (UPPER(((((((((0X4f111ea7)OR(NULL)))OR('-811268990')))OR(x'52eed700')))AND(NULL))));SELECT CASE (((rt0.c2))<((rt1.c1)))  WHEN TOTAL_CHANGES() THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt0.c2)) ELSE CAST(vt0.c0 AS INTEGER) END FROM vt0 LIMIT -1235417099 OFFSET 733212357;SELECT ALL LTRIM(load_extension(rt0.c0, rt1.c1)) FROM rt1, rt0, vt0;SELECT CAST((rt0.c1 IN ()) AS BLOB), MAX(((vt0.c0)GLOB(rt1.c1))), ((((rt0.c2)AND(((((x'')OR(rt0.c0)))AND(rt1.c2)))))OR((~ (rt1.c1)))), ((((((((((rt1.c0)AND(rt1.c3)))OR(rt0.c1)))AND(rt1.c3)))OR(rt0.c2)))IS NOT(((rt0.c2)IS(rt1.c3)))), MAX(rt1.c1) FROM vt0;SELECT ALL MAX(((-9.1147301E7) IS FALSE) COLLATE BINARY) FROM rt0, vt0, rt1; -- 0ms;
SELECT ((((((((((rt1.c2)>(rt1.c2)))AND((rt1.c3 IN (rt1.c2, rt0.c0)))))AND(CAST(rt0.c2 AS TEXT))))AND((~ (rt1.c0)))))AND(((rt1.c0) BETWEEN ('') AND (rt0.c2)))) FROM rt0, vt0 GROUP BY ((((rt1.c3)AND(((((rt0.c1)OR(rt0.c2)))AND(rt1.c3)))))AND((vt0.c0 IN ()))) HAVING ((((rt0.c2)%(rt1.c0))) BETWEEN ('\p') AND (((rt0.c1)<=(rt0.c1))));SELECT CASE WHEN rt1.c1 COLLATE NOCASE THEN ((vt0.c0) IS TRUE) END FROM rt1, vt0; -- 0ms;
SELECT 0Xffffffffe2e35a26 FROM rt0, rt1 WHERE (((0.11774716910065863)IS(0X5fded56e)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((AVG(rt0.c1))AND(((vt0.c0) BETWEEN (rt1.c3) AND (vt0.c0)))))AND(((rt0.c2)*(rt1.c2)))), COUNT(LIKELIHOOD(rt1.c3, 0.31011271972375487)) OVER (), ((vt0.c0)-(rt1.c2)) COLLATE BINARY, ('3*' IN ()), rt1.c0, CAST(((rt0.c1)+(rt1.c1)) AS INTEGER), 0Xffffffffcf84ca94 FROM rt1, rt0;SELECT DISTINCT CAST(TRIM(rt1.c2) AS NUMERIC) FROM rt0 WHERE (((CASE WHEN NULL THEN NULL WHEN '[]' THEN 'Ym0Sn' WHEN x'' THEN '-1899595970' WHEN 0Xffffffffb6d9521d THEN 'MkDw.' WHEN '1187523871' THEN NULL ELSE NULL END) NOT BETWEEN (((0Xffffffffb62d7119) ISNULL)) AND (CASE WHEN x'' THEN '-1629072997' END)));SELECT ALL (GROUP_CONCAT(rt1.c3) IN ()) FROM rt0; -- 0ms;
SELECT SQLITE_COMPILEOPTION_GET(TRIM(rt0.c1)), CAST((NULL IN (vt0.c0, rt0.c0)) AS TEXT), (((rt0.c1)) NOT BETWEEN ((((((vt0.c0)AND(rt0.c2)))OR(rt1.c1)))) AND ((COUNT(*)))) FROM rt0, vt0 WHERE ((((((((((('o䥚')<<(0.3556439243455668)))AND(CAST(0.39356564673169403 AS INTEGER))))AND(UPPER(x'2d3d'))))OR(((0.9353336950695341) BETWEEN (5.24919634E8) AND ('0.04493477044548633')))))AND(CASE 0.39192900724499846  WHEN NULL THEN NULL WHEN '-1961961770' THEN 0.7249069361361651 WHEN 0xffffffffd6591ccd THEN x'3d5c' END))) ORDER BY ((((((0Xffffffffa205d449)*(0.15887093588642343)))OR((('-1782851802')LIKE(rt1.c3)))))OR(((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ASC  NULLS LAST LIMIT -1741846946;SELECT DISTINCT CASE ((rt0.c1)>>(rt0.c1))  WHEN (NOT ('-1129273073')) THEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c0 END ELSE (((vt0.c0, rt1.c1, rt0.c1))>((rt1.c3, rt0.c0, rt0.c2))) END FROM rt0, vt0, rt1 WHERE ((+ (json_extract('', NULL))));SELECT (((rt0.c1)) NOT BETWEEN ((((vt0.c0)IS(rt0.c1)))) AND ((rt0.c1))) FROM vt0, rt0, rt1 GROUP BY (((~ (rt1.c3)))=((rt1.c0 IN ()))) HAVING rt0.c1 ORDER BY ((CASE rt1.c3  WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt0.c0 END) IS TRUE)  NULLS LAST; -- 2ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN rt1.c2 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt1.c1 END) AND (((rt0.c2)<<(rt0.c2)))) FROM vt0 GROUP BY (((rt1.c1, -1.684261203E9, rt0.c0)) NOT BETWEEN ((((rt1.c2)+(NULL)), ((rt0.c0) ISNULL), rt0.c1)) AND ((((((rt1.c3)AND(rt0.c2)))OR(NULL)), CAST(rt0.c0 AS BLOB), ((rt1.c1) NOTNULL)))) HAVING GROUP_CONCAT(((rt1.c1)<<(36206232)));SELECT DISTINCT 0.15807268140570763 FROM rt1; -- 0ms;
SELECT (((rt0.c1, rt1.c1, vt0.c0)) BETWEEN ((((rt0.c1)+(rt1.c1)), ((rt0.c0)*(rt0.c1)), CAST(rt0.c0 AS BLOB))) AND ((((rt0.c2) BETWEEN ('諫t_') AND (rt0.c2)), ((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c0)), (rt0.c2 IN ('', rt1.c0))))), ((((rt1.c1)LIKE(rt0.c2)))+(CASE rt0.c1  WHEN rt1.c0 THEN rt0.c1 END)), (CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c2 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN '~buBm\1s' THEN rt0.c2 END IN ()) FROM rt0, vt0, rt1 WHERE ((- (CAST(x'' AS BLOB)))); -- 0ms;
SELECT DISTINCT (((+ ('391844195'))) ISNULL) FROM rt0, rt1 ORDER BY (- ((((vt0.c0))=((rt0.c1))))) ASC, (NOT (((rt1.c0) ISNULL))) DESC, CAST(CASE WHEN rt1.c0 THEN '691940340' WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN '1435152305' ELSE rt1.c0 END AS REAL) ASC, (- ((((('M볈c*[')AND(rt1.c3)))AND(rt1.c2)))) ASC;SELECT DISTINCT x'' FROM rt1, rt0, vt0; -- 0ms;
SELECT GROUP_CONCAT(((rt1.c1)LIKE(rt0.c1))) FILTER(WHERE ('1700186044' COLLATE BINARY IN ('1777147717'))) OVER (), ((((((rt1.c1)<(rt1.c3)))AND(COUNT(rt0.c2))))OR(MAX(rt1.c1, rt1.c2))), (((rt1.c0 IN (rt1.c3, 1.4027661E7)))IS((((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0))))) FROM rt0, vt0, rt1 WHERE ((~ (CAST(-1772251426 AS INTEGER)))); -- 0ms;
SELECT ALL (((rt1.c2, vt0.c0, rt0.c2)) BETWEEN ((((vt0.c0)||(rt1.c0)), ((rt1.c1)>>(rt1.c1)), ((((rt0.c0)OR(rt1.c2)))AND(rt0.c1)))) AND ((SUBSTR(rt0.c1, rt0.c2), COUNT(*), ((rt0.c2)=(rt0.c0))))) FROM rt0, vt0 NOT INDEXED;SELECT DISTINCT (rt1.c1 IN ()) FROM rt1, rt0 WHERE (((((0.800598057856015))>((x'1d89'))) IN ())) UNION ALL SELECT ALL ((((((rt0.c2) NOTNULL))OR(((vt0.c0)<<(rt1.c1)))))AND(((rt1.c3)+(vt0.c0)))) FROM vt0, rt1 WHERE ((- (-335111736)) COLLATE NOCASE);SELECT DISTINCT MAX(rt1.c1 COLLATE BINARY) COLLATE BINARY FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CASE (rt0.c0 IN ())  WHEN ((rt1.c2)&(rt1.c1)) THEN (rt0.c1 IN ()) WHEN ((x'')LIKE(rt1.c1)) THEN ((rt1.c3)IS NOT(rt1.c0)) WHEN NULL THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c1 THEN 0.2924389704994267 WHEN rt1.c3 THEN rt1.c1 END WHEN ((rt1.c2)<>(rt0.c0)) THEN (- (vt0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)!=(rt0.c1)) END FROM rt1 LIMIT 102081229 OFFSET -599605964;SELECT ALL COUNT(*) FROM rt0 WHERE (((((((0.9327374720347943)AND('750812319')))OR('0.5055693444609092')))OR(((((0xffffffffaf0253ce)AND(0.03446904629504599)))OR(NULL))))) INTERSECT SELECT ALL MAX('1861953270', rt1.c2) FROM rt0, vt0 WHERE ((((CAST(-1790356332 AS BLOB)))>((((x'c985') BETWEEN ('297257049') AND (x'e53b'))))));SELECT ALL ((((((((rt0.c2)OR(((((rt1.c2)AND(rt1.c1)))OR(rt1.c3)))))OR(((rt1.c3) IS FALSE))))AND(CASE WHEN x'' THEN rt1.c3 END)))OR(AVG('0.6294479210131775'))), (((((rt0.c1))<=((rt1.c0)))) IS TRUE), NULL FROM rt1, rt0 LIMIT -880561722; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY ((rt1.c2)-(((((rt1.c3)OR(rt1.c2)))OR(rt1.c2))))), MAX(rt0.c2, rt0.c1, rt1.c2, rt1.c2) COLLATE RTRIM, ((((CAST(rt1.c0 AS INTEGER))OR(((rt1.c3)IS NOT('-238450797')))))AND(rt1.c3)) FROM rt0;SELECT DISTINCT PERCENT_RANK() OVER (), LAST_VALUE((((rt1.c3, rt1.c3, rt1.c0)) BETWEEN ((NULL, rt1.c3, 0.3100090367863788)) AND ((rt1.c2, rt1.c0, rt1.c1))) COLLATE BINARY) OVER ( ORDER BY (((NOT (rt1.c0)))LIKE(load_extension(rt0.c0))) DESC, CAST('939687585' AS REAL) GROUPS  CURRENT ROW), NTH_VALUE(rt1.c0, (rt1.c0 IN ())) OVER () FROM rt1 WHERE (((('833317992')OR('894145473')) IN ()));SELECT DISTINCT (((((((0.20576281097677773, rt1.c0, rt0.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, vt0.c0)) AND (('1585888381', rt0.c0, ''))))AND(((rt1.c3)%(vt0.c0)))))AND((rt1.c1 IN (rt1.c2)))) FROM rt1 WHERE (CAST(CASE WHEN 0Xffffffffb0a92722 THEN '-899277495' WHEN 0.7187156558329739 THEN x'' WHEN NULL THEN NULL END AS TEXT)) GROUP BY CASE x''  WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM, rt0.c1, CASE WHEN ((rt1.c2)OR(rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c1)) WHEN (- (rt0.c1)) THEN (((rt1.c2))<((rt0.c0))) WHEN ((((rt1.c0)OR(rt1.c3)))AND(rt1.c1)) THEN ((rt1.c3)<(vt0.c0)) WHEN ((rt0.c1) IS TRUE) THEN (NOT (vt0.c0)) WHEN ((rt0.c2)IS NOT(vt0.c0)) THEN ((rt0.c2)>(rt1.c3)) END HAVING ((((((vt0.c0)OR(vt0.c0)))OR(x'')))<<(CASE rt0.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c0 END));SELECT (~ (MAX(rt1.c1))), CASE WHEN ((rt1.c1)<<(rt1.c2)) THEN (NOT (vt0.c0)) ELSE x'0b9e' END, ((('B' COLLATE NOCASE))<=((rt0.c2))) FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST, CASE ((((vt0.c0)OR('176622100')))AND(rt1.c2))  WHEN CAST(rt1.c3 AS NUMERIC) THEN ((((rt1.c3)AND(vt0.c0)))OR(rt0.c0)) ELSE ((((rt0.c2)OR(rt0.c0)))OR(rt1.c2)) END DESC  NULLS LAST, (rt0.c2 IN ()) LIMIT -1545252982 OFFSET 1336224707;SELECT PERCENT_RANK() OVER () FROM vt0 WHERE ((((((((((0.06836728787418278)AND('W(')))OR(7.93218734E8)))OR('')))OR(0.9516173401000511)) IN ((+ (238560631)), NULL COLLATE NOCASE))) INTERSECT SELECT (AVG(rt1.c0) IN ()) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt1, rt0 WHERE (((((('-725085673') BETWEEN (x'') AND (x'6b50'))))>=((CAST(0.5954575714669225 AS INTEGER)))));SELECT DISTINCT LIKELIHOOD(DISTINCT TYPEOF(vt0.c0), 0.2701691228251768), ((rt1.c0 COLLATE BINARY) IS TRUE), ((COUNT(*)) IS FALSE) FROM rt0;SELECT MIN(COUNT(rt0.c2)) COLLATE RTRIM, SUM(((((vt0.c0)AND(rt1.c3)))OR(rt1.c0))), LAST_VALUE(CASE NULL  WHEN LIKELY(DISTINCT vt0.c0) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN (((vt0.c0, vt0.c0, NULL))<((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND('-370117963')))AND(vt0.c0)) END) OVER (), ((((((rt1.c0) ISNULL))OR(((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))))OR(((rt0.c0) IS TRUE))), AVG(rt1.c2) FROM vt0 WHERE (((((NULL)<=(NULL)))&('UOxND''Tf')));SELECT DISTINCT ((('Z\r㡢/8~^ꎌ')) NOT BETWEEN (((+ (vt0.c0)))) AND ((rt0.c1 COLLATE NOCASE))) FROM rt1, vt0, rt0 WHERE (CASE WHEN ((x'f58a')=(0.20662297437930877)) THEN (+ (3.111191E8)) WHEN ((-658678783) ISNULL) THEN ('' IN ()) WHEN IFNULL(DISTINCT 0.22509110894142237, x'7d63') THEN CASE WHEN NULL THEN '1899351372' ELSE x'' END ELSE 0.05222071058529143 END) GROUP BY 0Xffffffffb6d9521d LIMIT -944852263 OFFSET 1445203860; -- 0ms;
SELECT ALL ((((x'b5f8') BETWEEN (rt1.c1) AND (rt0.c1))) IS TRUE) FROM vt0;SELECT '1864485611' COLLATE NOCASE, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))IS(SUM(rt0.c1))), CASE WHEN (((rt0.c0, rt0.c2, rt1.c1))<((rt0.c1, rt1.c0, rt0.c0))) THEN ((((vt0.c0)OR(rt1.c2)))AND(rt1.c2)) WHEN GROUP_CONCAT(rt1.c3) THEN (((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))) WHEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)) THEN ((rt1.c2)OR(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)) THEN 0.08814894884984303 COLLATE NOCASE WHEN (((rt1.c1))<=((rt0.c0))) THEN '530000571' END FROM rt1, rt0;SELECT DISTINCT 0.7493515635975085 FROM rt1, vt0, rt0 WHERE (CAST('' COLLATE BINARY AS TEXT)) ORDER BY 0.034294391113798395  NULLS LAST LIMIT -564010434 OFFSET -1588827090; -- 0ms;
SELECT DISTINCT AVG(MAX(((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c1)))) FROM rt1, rt0, vt0;SELECT MAX((~ (rt1.c2))) FROM rt0, vt0 WHERE ((((x'' IN (286104516, '')))LIKE(((NULL)||(NULL)))));SELECT DISTINCT ((((((((rt1.c2)AND(rt0.c1)))AND(rt1.c2)))OR((('-851314816')>>(rt0.c1)))))AND(GROUP_CONCAT(rt1.c0))), ((CASE WHEN rt0.c1 THEN rt1.c3 END) IS FALSE), ((NULLIF(rt1.c2, rt1.c3))GLOB(TOTAL(rt0.c0))) FROM rt1 WHERE (((HEX(NULL))||('0.6294479210131775')));SELECT DISTINCT MAX(CAST(rt1.c2 AS REAL)) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL ((rt1.c2) IS FALSE) FROM rt0;SELECT DISTINCT (- ((rt0.c1 IN (rt1.c0)))), (((((rt0.c0 IN (NULL)))AND(LAST_INSERT_ROWID())))AND(rt1.c1 COLLATE NOCASE)), -8.1126899E8 FROM rt1, vt0 WHERE (((x'')LIKE(((x'3c7f')*(NULL)))));SELECT DISTINCT GROUP_CONCAT(((((rt1.c2)AND(rt0.c0)))OR(rt1.c3))) FILTER(WHERE 0.10610007224291507) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (NULL) AND (rt1.c2)))%(MAX(rt1.c0))) FROM rt1 LIMIT 845860355 OFFSET 841105661;SELECT DISTINCT (((((vt0.c0))=((0.06321649861361167)))) NOT BETWEEN ((((rt0.c2))=((rt1.c2)))) AND (((rt0.c2) BETWEEN (rt1.c0) AND (x'e951')))) FROM rt0, rt1, vt0 WHERE (NULL); -- 0ms;
SELECT ALL CASE WHEN (((''))!=((vt0.c0))) THEN '0.04493477044548633' ELSE ((((((((x'0689')OR(rt0.c2)))AND(rt1.c2)))OR(rt1.c2)))OR(rt0.c0)) END FROM rt1 WHERE (((((0X6c1df18e) BETWEEN (x'') AND ('CV')))<(((('579639346', x'', '1487949399'))<(('', ' ', '-1474603715')))))) ORDER BY (- (((rt0.c0)OR(rt1.c2))));SELECT ((rt0.c1)>(rt1.c0)) COLLATE RTRIM FROM rt0, vt0, rt1 WHERE ((((((x'')) NOT BETWEEN ((NULL)) AND (('{}'))))<=(((0xffffffff86a8bbdf)>(NULL))))) GROUP BY -1.96196177E9; -- 0ms;
SELECT DISTINCT ((((COUNT(rt1.c0))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((vt0.c0) IS TRUE))) FROM rt0, rt1, vt0 LIMIT 1792299599; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) ISNULL) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c3 THEN rt0.c1 ELSE rt1.c2 END)>=((((('1868302647')AND(rt1.c0)))AND(rt1.c0)))) FROM rt1, rt0, vt0 WHERE (((((0xffffffffd7c4cceb)&(-805805499)))<>(((0.20142260793032163) ISNULL)))); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) NOTNULL)), ((((rt1.c2)AND(rt0.c2)))OR(rt1.c0)) COLLATE BINARY, MIN((((rt1.c0))=((rt1.c1)))) FROM rt0 ORDER BY rt1.c0  NULLS LAST, 0.4329864348009417 DESC  NULLS LAST;SELECT DISTINCT ((((x'')AND(TYPEOF(rt0.c2))))AND(rt0.c0)) FROM rt0, rt1, vt0 WHERE (((((((0.12045356972043064) IS TRUE))AND((('79ꛪ_RiB繁') NOT BETWEEN (-9.1147301E7) AND (0.055717737854697136)))))OR((('a)7z>')!=('-1961961770'))))) GROUP BY NULL; -- 0ms;
SELECT ALL AVG((((rt1.c1))<=((rt1.c2)))) FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL (((rt0.c0 IN ())) IS TRUE) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c1 AS TEXT) THEN json_array(rt0.c0, rt1.c2) WHEN (- (rt0.c0)) THEN AVG(rt1.c0) WHEN AVG(0.45606950373368627) THEN rt1.c0 END FROM vt0, rt1, rt0 WHERE (TRIM(DISTINCT x'' COLLATE RTRIM, load_extension(NULL, 0xffffffffa2930bf5)));SELECT ALL ((rt1.c2)<>(((rt0.c2)*(rt0.c0)))), LIKELY(((((rt1.c2)OR(rt0.c0)))OR(rt0.c1))), (((rt0.c2)) BETWEEN ((CASE WHEN rt1.c1 THEN rt0.c2 END)) AND ((((rt0.c1)GLOB(rt1.c2))))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((((((rt1.c2)OR('')))OR(rt1.c2)))) AND ((CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 END))), COALESCE(NULL COLLATE RTRIM, CAST(rt1.c0 AS NUMERIC)), ((((rt1.c3)>(rt1.c1)))>=((x'' IN (NULL, rt1.c0)))) FROM vt0, rt1;SELECT DISTINCT (~ (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)) FROM rt1, rt0, vt0 WHERE (((NULL COLLATE BINARY) IS FALSE)) LIMIT 36206232 OFFSET -348237771; -- 0ms;
SELECT DISTINCT ((((CAST(rt1.c0 AS BLOB))OR(((vt0.c0) IS FALSE))))AND(((rt0.c1)>=(vt0.c0)))), ((((((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))AND((- (rt1.c0)))))AND(rt1.c1 COLLATE BINARY)), ((((((((((rt1.c3)OR(rt0.c2)))AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c3)))LIKE((('0.2954294193281728')<(rt0.c1)))) FROM rt0, vt0, rt1 WHERE ((((x'4f55')-('-784115045')) IN ())); -- 0ms;
SELECT rt0.c1 FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(x'' AS INTEGER)) IS FALSE) FROM rt0; -- 0ms;
SELECT ((GROUP_CONCAT(rt1.c0))<(((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c1)))) FROM vt0 WHERE (CAST(CASE WHEN 0xffffffffe54e8f85 THEN 1904634571 ELSE NULL END AS INTEGER));SELECT DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)) COLLATE NOCASE, TRIM(DISTINCT CAST(vt0.c0 AS NUMERIC), rt1.c3 COLLATE RTRIM), GROUP_CONCAT((NOT (vt0.c0))) FILTER(WHERE load_extension(rt0.c2 COLLATE BINARY)) OVER () FROM rt0, vt0 WHERE (((((0.7154388482047168 IN (0.009621665248737199))))>(((~ (NULL))))));SELECT DISTINCT CAST(((((vt0.c0)AND(rt1.c0)))OR(rt1.c0)) AS NUMERIC), MIN((((rt1.c0))==((rt1.c1)))), ((rt1.c1 COLLATE RTRIM)/(UPPER(DISTINCT rt1.c1))) FROM rt0, vt0;SELECT ALL ((AVG(rt1.c2)) IS FALSE) FROM rt1; -- 0ms;
SELECT DISTINCT ((CASE rt1.c3  WHEN rt1.c3 THEN rt0.c1 END)<<(((rt0.c0) NOT NULL))) FROM vt0, rt1 WHERE (((0Xffffffffc593b4e6)GLOB(CAST(NULL AS REAL))));SELECT ALL NULL, CASE WHEN (((rt0.c2, rt1.c0, rt0.c1))=((rt1.c2, rt1.c3, rt1.c1))) THEN ((rt0.c0) IS TRUE) ELSE (rt1.c1 IN ()) END, ((((LIKE(rt1.c3, rt0.c2, 'C'))OR(UNLIKELY(rt1.c2))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM vt0 GROUP BY rt1.c0 HAVING (((rt0.c2 COLLATE NOCASE))>((((vt0.c0)>(vt0.c0))))) LIMIT -1961961770;SELECT ALL ((rt1.c2 COLLATE BINARY)LIKE(((vt0.c0) NOT NULL))), rt1.c0, ((COUNT(rt1.c0)) NOT BETWEEN (((rt1.c3) IS TRUE)) AND (rt1.c1)) FROM rt1 WHERE ((((x'') BETWEEN (NULL) AND ('-407960656')) IN ())) GROUP BY CAST((+ (vt0.c0)) AS INTEGER) HAVING ((((rt0.c0) BETWEEN (rt1.c1) AND (rt0.c1)))<=(((((rt0.c0)AND(rt1.c0)))AND(rt1.c0))));SELECT DISTINCT (-431649169 IN ()) COLLATE RTRIM, (((rt1.c0)IS(NULL)) IN ()), ((((rt1.c2) NOTNULL))<>((NULL IN ()))) FROM vt0, rt1; -- 1ms;
SELECT LOWER(DISTINCT ((rt1.c1) NOT NULL)) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, rt0, rt1 WHERE (CAST((((NULL))>((x''))) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c3 AS REAL)) NOTNULL), TOTAL(CAST(rt0.c2 AS TEXT)), ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (LIKELIHOOD(rt0.c1, 0.9845128282150468))) FROM rt1 WHERE ((('1315275524' COLLATE BINARY)GLOB(CASE WHEN NULL THEN '' ELSE NULL END)));SELECT ALL CUME_DIST() OVER () FROM rt0, vt0, rt1 ORDER BY CASE WHEN ((1053189774) ISNULL) THEN QUOTE(rt0.c1) END DESC; -- 0ms;
SELECT (((rt1.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c2)), (~ (vt0.c0)), AVG(vt0.c0))) AND ((MIN(rt0.c2), ((((rt1.c0)OR(rt1.c2)))AND(rt0.c0)), SUM(rt1.c0)))), ((CAST(rt1.c1 AS TEXT)) NOT NULL), IFNULL(CAST(rt0.c0 AS REAL), ((((rt1.c3)AND(rt0.c2)))AND(rt1.c1))) FROM rt1, rt0 GROUP BY (((((rt1.c3)%(rt1.c3))))==((((rt1.c2) IS TRUE))));SELECT (((+ (rt1.c0))) IS TRUE) FROM vt0, rt1 WHERE (CASE (((((((('DQb*Ott%}')OR(-1244037977)))OR(0.7555082302347234)))OR('1881316948')))AND(x'743c2a40'))  WHEN (~ (0Xd27060)) THEN (((5.24919634E8))>=(('VY'))) ELSE (((('Al')AND(x'')))OR(x'183a')) END); -- 0ms;
SELECT (((((((((rt0.c0 IN ()))OR(CAST(rt1.c0 AS NUMERIC))))OR(rt0.c0 COLLATE BINARY)))AND((- (rt0.c2)))))OR(((vt0.c0) NOT NULL))), (((rt1.c3 COLLATE NOCASE))!=((NULL))), ((((((((rt0.c0)OR(vt0.c0)))OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c1)) COLLATE NOCASE FROM rt0 LIMIT 1486549160 OFFSET -974095041;SELECT DISTINCT ((((NULL)GLOB(rt1.c1))) NOT NULL) FROM rt0;SELECT DISTINCT json_extract((rt1.c3 IN ()), ((rt1.c1) NOT NULL), ((rt0.c2)|(-2.38450797E8)), CASE rt0.c2  WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c2 END) FROM vt0 WHERE (((((((0.36719800053465346)||(x'')))OR((('땚PUc邙')IS(NULL)))))AND(CASE WHEN '' THEN '-87819356' END)));SELECT DISTINCT ((((((rt1.c3)<<(vt0.c0)))AND((+ (vt0.c0)))))AND((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))), ((0.7942876590626672)||(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c0)))), COUNT(((rt1.c3)=(rt1.c1))) OVER () FROM rt1, vt0, rt0 LIMIT 477559764 OFFSET -1741846946; -- 1ms;
SELECT GROUP_CONCAT(((((((((rt0.c2)OR(0.6471107938023645)))OR(rt0.c0)))AND(rt1.c0)))OR(rt0.c0))) FROM rt0 WHERE (((((CAST(0.936925911403859 AS TEXT))OR(((NULL) NOTNULL))))OR((((x'', 0.4947887461881588, '-2122880554'))<=(('', 'kj1fan', 0.900882994911176))))));SELECT DISTINCT ((((((rt1.c2)OR(rt1.c1)))OR(rt0.c0)))=(((rt1.c2)!=(vt0.c0)))) FROM rt1 WHERE (STRFTIME(((1.315275524E9)OR('-1789518121')), CASE WHEN '' THEN x'' END, ((x'') NOT BETWEEN (0.5825234957937537) AND ('[{Rh')))) LIMIT 1630852705;SELECT ALL LOWER(((((rt1.c3)AND(vt0.c0)))OR(rt0.c2))) FROM rt0, vt0, rt1 GROUP BY (((vt0.c0)>>(rt1.c3)) IN ()); -- 0ms;
SELECT ALL ((((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(((rt1.c3)>>(rt0.c1)))))OR(((rt1.c1)==('0.03446904629504599')))) FROM rt0;SELECT DISTINCT COUNT(*) OVER (), ((((x'')OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))))AND(((rt1.c2)OR(rt1.c1)))), ((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c2)))LIKE(((rt0.c2) BETWEEN (rt1.c1) AND (vt0.c0)))) FROM rt0 WHERE ((NOT (CASE '1315275524'  WHEN x'' THEN x'176c' END)));SELECT DISTINCT ((DATETIME(rt0.c2, vt0.c0, vt0.c0))&(PRINTF(rt0.c0, rt1.c3, rt1.c0))), CAST('' AS NUMERIC), COUNT(((-1722762607) NOT NULL)) FROM vt0 GROUP BY CAST(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)) AS NUMERIC);SELECT DISTINCT ((((((((((rt0.c1)|(rt1.c1)))AND((rt1.c3 IN ()))))AND(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((((x'')OR(rt0.c2)))OR(rt1.c3)))) FROM rt0, rt1 WHERE (CASE WHEN ('-486624080' IN ()) THEN ((NULL)<(NULL)) END) ORDER BY (+ (CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c0 END)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT RANK() OVER (), (((rt0.c0) IS TRUE) IN ()), ((rt1.c2) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.9266368563776779)) AND (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt1.c3)))) FROM rt0, vt0, rt1 WHERE ((NOT (((0.03446904629504599) NOT BETWEEN ('2089096186') AND ('755500542'))))); -- 0ms;
SELECT TRIM((~ (rt1.c1))) FROM vt0, rt0 GROUP BY ((vt0.c0 COLLATE BINARY)*((((rt0.c2))>=((rt0.c0)))));SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1; -- 0ms;
SELECT FIRST_VALUE(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c2)) COLLATE NOCASE) OVER () FROM rt0, rt1 ORDER BY ((((vt0.c0)>>(0.28341845063054916))) NOT BETWEEN (((((rt1.c0)AND(rt1.c3)))OR(rt0.c0))) AND (((rt0.c1)IS NOT(vt0.c0)))), LOWER(DISTINCT CAST(rt1.c0 AS INTEGER))  NULLS LAST LIMIT 1577210223;SELECT DISTINCT ((rt1.c3) IS FALSE), ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) NOTNULL), (((((vt0.c0 IN (rt1.c2)))AND((rt1.c0 IN ()))))AND(NULL)) FROM rt0, rt1; -- 0ms;
SELECT ALL CASE GROUP_CONCAT(x'ff6c')  WHEN ((((((((rt0.c2)OR(NULL)))OR(rt1.c3)))OR(rt0.c0)))AND(rt0.c1)) THEN COUNT(*) ELSE (rt1.c0 IN ()) END FROM vt0, rt0 WHERE ((NOT (x'')));SELECT ALL ((CASE WHEN x'c2dd' THEN NULL WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((rt1.c0)=(x''))) AND (CAST(rt1.c3 AS REAL))) FROM rt0 WHERE (((((1.471693E7)*(NULL))) NOT BETWEEN (TRIM(DISTINCT x'', 0.6220115194115863)) AND (NULL COLLATE NOCASE)));