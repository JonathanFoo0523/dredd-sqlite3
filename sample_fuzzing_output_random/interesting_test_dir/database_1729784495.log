-- Time: 2024/06/07 00:37:49
-- Database: database95
-- Database version: 3.40.0
-- seed value: 1729784495
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, detail=column); -- 1ms;
PRAGMA main.cache_spill; -- 0ms;
UPDATE vt0 SET (c0)=(x''); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('1149430951'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('1149430951'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38600'); -- 4ms;
PRAGMA temp.recursive_triggers; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('551928785'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.293972255912732, c0=NULL WHERE (vt0.c0 IN (vt0.c0, (vt0.c0 IN ()))); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.9388214292568238); -- 1ms;
END TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1, c2 UNINDEXED, notindexed=c0); -- 3ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL), ('?ld7Dpr*'), (0.8792387597678165); -- 0ms;
UPDATE OR ABORT vt0 SET c0='d!', c0=NULL, c0=NULL, c0=''; -- 9ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('쏑wd'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt1(c2, c0) VALUES (0.9822496902289228, 0.7547290131099929); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('0.9822496902289228'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
CREATE TEMP TABLE t0 (c0 BLOB , c1 REAL , c2 REAL ); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1073494474);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES (0x25c6caa7, 0.4374792298087663); -- 0ms;
INSERT OR FAIL INTO t0(c1, c2) VALUES ('1149430951', 0.7864380371186415); -- 0ms;
PRAGMA main.application_id; -- 0ms;
PRAGMA cache_size; -- 0ms;
UPDATE t0 SET c2='쏑wd'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((((vt1.c0) NOT NULL)) NOT BETWEEN (((vt1.c2)IS(vt0.c0))) AND (((vt1.c0)IS NOT(vt1.c2)))) FROM vt0, vt1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1921704068);\n; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'3fcc'), (0.4617541413927089), (0.5534759997595231), ('-0.0'), ('0'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-445827683'); -- 0ms;
DROP TABLE vt1; -- 1ms;
ANALYZE; -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
PRAGMA default_cache_size = -272672461; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('VI>^✿泪\r0'); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.threads; -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
PRAGMA short_column_names; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x''), (NULL), (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.8059500662119187); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.882375729456782); -- 0ms;
VACUUM main; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
PRAGMA legacy_file_format = false; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('551928785'), (0.11508835035162013), (x'2dfa'); -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA recursive_triggers = true; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA journal_mode; -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (5.51928785E8); -- 0ms;
PRAGMA main.checkpoint_fullfsync = false; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(x'461d'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1173056746);\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((- (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (CASE ((((x'')AND(0.3816588451317974)))OR('?ld7Dpr*'))  WHEN (NOT ('o#KE\nDEk%JI')) THEN (x'' IN (NULL)) WHEN ((((((((5.51928785E8)AND(x'e357')))AND(NULL)))AND(NULL)))AND('TRUE')) THEN ((NULL) IS TRUE) WHEN (NULL IN ()) THEN ((1799205172) BETWEEN (NULL) AND (0.01907430624799411)) END); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 LIMIT -272672461 OFFSET 633784999; -- 0ms;
SELECT ALL ((~ (vt0.c0)) IN (CAST(vt0.c0 AS TEXT), (- (vt0.c0)))), (NOT (vt0.c0 COLLATE BINARY)), (- (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (UPPER(DISTINCT -344009436 COLLATE RTRIM)); -- 0ms;
SELECT ALL (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0 WHERE ((CASE 'TRUE'  WHEN 0.32976928798392047 THEN x'928e5db6' END IN ())) GROUP BY (((CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS TEXT), (((vt0.c0))!=((vt0.c0)))))<((vt0.c0 COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) HAVING ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ('1173056746') AND ((~ (vt0.c0)))); -- 0ms;
SELECT (((vt0.c0 COLLATE RTRIM))>=((CAST(vt0.c0 AS INTEGER)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))%(SUM(vt0.c0))) FROM vt0; -- 0ms;
SELECT CASE WHEN ((vt0.c0) NOT NULL) THEN COUNT(vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN COUNT(vt0.c0) WHEN TOTAL(vt0.c0) THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 END, ((vt0.c0) NOTNULL) COLLATE BINARY, (((COUNT(NULL)))>=((CAST(vt0.c0 AS NUMERIC)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN ('X#6Uq') AND (((vt0.c0) NOT NULL))), ((((vt0.c0 COLLATE BINARY)AND(CAST(vt0.c0 AS BLOB))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))), CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1921704068')) THEN '-1486055757' COLLATE RTRIM WHEN vt0.c0 THEN (((vt0.c0))>((vt0.c0))) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (('-344009436')>=('633784999')) ELSE (- (x'')) END FROM vt0; -- 0ms;
SELECT ALL NULLIF(((vt0.c0)>>(vt0.c0)), MIN(vt0.c0)) FROM vt0 LIMIT 1799205172 OFFSET 2097274850; -- 0ms;
SELECT ALL '-15304411', (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()), (json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0) IN (CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE vt0.c0 END, ((((-3.44009436E8)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE ((- ((((x'f047')) NOT BETWEEN ((x'')) AND ((0.28399915959970035))))));SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0) NOT BETWEEN (x'c23c') AND (vt0.c0)))), CUME_DIST() OVER (), -2039285778 FROM vt0 WHERE (((((682647401)<=(x''))) BETWEEN ((x'' IN (0x4f22f200))) AND (x''))); -- 0ms;
SELECT DISTINCT ((vt0.c0)<(vt0.c0)) COLLATE BINARY, NULL, ((vt0.c0 COLLATE BINARY) ISNULL), (NOT ((vt0.c0 IN (vt0.c0)))), ((CAST(vt0.c0 AS REAL))AND((~ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)+(vt0.c0)))AND(STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, '\r怫'))))OR(CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE ((NOT (CAST('DvT<V' AS TEXT)))) GROUP BY ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(NULL COLLATE RTRIM)))AND((NOT (vt0.c0)))); -- 0ms;
SELECT ALL COUNT((vt0.c0 IN ())) FILTER(WHERE CAST(GLOB(0X28b05f69, vt0.c0) AS INTEGER)) OVER () FROM vt0; -- 1ms;
SELECT ALL COALESCE(DISTINCT COUNT(vt0.c0), ((vt0.c0) NOT NULL)) FROM vt0 WHERE ((((-922467697)/(x'')) IN ('0.8059500662119187' COLLATE RTRIM, ((0.22373290596556283)IS NOT(x'')), (+ (0.6663875293989945))))) ORDER BY (((vt0.c0)||(vt0.c0)) IN ()) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT vt0.c0, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC), (vt0.c0 IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL (((((~ (vt0.c0)))OR(QUOTE(vt0.c0))))AND(vt0.c0)) FROM vt0 WHERE (0.39142867808349946); -- 0ms;
SELECT ALL '' FROM vt0; -- 0ms;
SELECT (~ (COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE)%(((x'')LIKE(vt0.c0)))), ((((NOT (vt0.c0))))<=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))), HEX(((vt0.c0)<<(-2.72672461E8))) FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)AND(0x7d01dfe2))))  NULLS LAST, vt0.c0 COLLATE RTRIM, ((+ (vt0.c0)) IN ((NOT (vt0.c0)))) DESC, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT -2.039285778E9 FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, CASE CAST(x'' AS NUMERIC)  WHEN vt0.c0 THEN 0.3759657235536572 WHEN ((((((((((((vt0.c0)AND('-1486055757')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN 0.6933984490693041 WHEN (NOT (vt0.c0)) THEN MAX(vt0.c0) ELSE NULLIF(vt0.c0, vt0.c0) END, CASE WHEN (+ (vt0.c0)) THEN ((((vt0.c0)OR('-13300194')))OR(vt0.c0)) END FROM vt0; -- 0ms;
SELECT ((((vt0.c0)*(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((x'98fc') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0, (NOT (ABS(DISTINCT vt0.c0))), 0.8792387597678165 FROM vt0 WHERE (((((NULL)!=(0.03803078451188868)))<<((NULL IN ())))) ORDER BY (+ ('-1619468863'))  NULLS LAST; -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'2ef6', CASE vt0.c0  WHEN 1149430951 THEN vt0.c0 END, ((vt0.c0)IS NOT(vt0.c0)))) AND ((((vt0.c0)=(vt0.c0)), vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)<>(vt0.c0)))) FROM vt0 WHERE (CAST(CASE ''  WHEN 0.9312252563680389 THEN x'' END AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM)), ((vt0.c0)<(vt0.c0)) COLLATE RTRIM, LAST_VALUE(vt0.c0) OVER (), LOWER(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))), (((((~ (NULL)))OR(vt0.c0)))AND((NOT (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL '/' FROM vt0; -- 0ms;
SELECT ALL CAST(CAST(vt0.c0 AS BLOB) AS TEXT), LIKE((vt0.c0 IN (vt0.c0)), ((vt0.c0)|(vt0.c0))), CASE WHEN COUNT(*) THEN CAST(vt0.c0 AS NUMERIC) END FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((('', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE, 0.18044424001014625, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((SUM(vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, TOTAL(vt0.c0)))) FROM vt0 WHERE ((+ ((('F夳(>_?') NOT BETWEEN ('1073494474') AND (0.09869211307241399))))); -- 0ms;
SELECT DISTINCT ((AVG(vt0.c0))|(((vt0.c0) ISNULL))) FROM vt0 WHERE (UNLIKELY(CAST(x'' AS REAL))); -- 0ms;
SELECT DISTINCT CASE ((((((((vt0.c0)OR(vt0.c0)))OR(0.21686871355151838)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN PRINTF(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN json_valid(vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE WHEN x'e489' THEN vt0.c0 END END FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(vt0.c0)) FROM vt0 WHERE (((((0.39142867808349946)/(-1946543559))) ISNULL)) GROUP BY ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, '892297161', vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), '-1076658587'))>=((0Xffffffffff350e1e, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), LOWER(DISTINCT vt0.c0)))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE BINARY IN ()) FROM vt0; -- 1ms;
SELECT DISTINCT '/,', NULL, NULL FROM vt0 WHERE ('') LIMIT -15304411; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((('1640258987') ISNULL) IN ())) ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '1D', vt0.c0))))LIKE(CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (json_array_length((((NULL, 0.5592133030666604, '㖝g\rvଭG'))<=(('1440064796', 0.856658246226187, '1327690240'))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL) FROM vt0 WHERE (CAST(LIKELIHOOD(0.7703929257211461, 0.22512368625452328) AS TEXT)); -- 0ms;
SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((~ (x''))) AND (AVG(vt0.c0))) FROM vt0 WHERE ((x'' IN ()) COLLATE BINARY) LIMIT -1446667541; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(((vt0.c0)LIKE(vt0.c0)))))AND(MIN(vt0.c0))) FROM vt0; -- 0ms;
SELECT LAG(((UPPER(vt0.c0))LIKE((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '-445827683', vt0.c0))))), ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (vt0.c0 COLLATE NOCASE)), (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))>=(((~ (vt0.c0)))))) OVER () FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0)-(vt0.c0)))AND((vt0.c0 IN ()))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((vt0.c0 IN ()) IN ()), ((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(-1448681697)) FROM vt0; -- 0ms;
SELECT ALL LAG(((vt0.c0 COLLATE BINARY)||(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), '', ((CAST(vt0.c0 AS BLOB))-((vt0.c0 IN ())))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) OVER ( PARTITION BY MAX(-52363895, ((((((((0xffffffffb2b771cb)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT NULL), vt0.c0 COLLATE NOCASE), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY) FROM vt0 WHERE ((((TRIM(NULL, '-445827683')))>=((CASE '892297161'  WHEN 'M53' THEN 0.45046873286319 ELSE x'' END)))); -- 1ms;
SELECT (((GROUP_CONCAT(vt0.c0)))=((((vt0.c0)&(vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0, QUOTE(json_remove(vt0.c0, vt0.c0)), (((((vt0.c0))>=((vt0.c0))))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0;SELECT DISTINCT TOTAL(((x'')||(vt0.c0))) OVER (), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(COUNT(*))), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS BLOB), (- (((vt0.c0)&(vt0.c0)))), ((((((((((vt0.c0) NOTNULL))AND(((vt0.c0)<(vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND(((vt0.c0)>>(vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, 0.9398153866223522, vt0.c0))))), ((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM, (- ('')) FROM vt0 WHERE (((((((((CAST('' AS TEXT))AND(((0x55268d8)|(']')))))OR(((x'8f86')OR(-645881354)))))OR('EoY{' COLLATE BINARY)))AND((- ('燋('))))); -- 0ms;
SELECT ALL AVG(((0.8631197312618357)<<(vt0.c0))) FROM vt0 NOT INDEXED; -- 0ms;
SELECT ALL ((x'') IS TRUE), CAST(-1544644818 COLLATE NOCASE AS INTEGER), ((vt0.c0) NOT NULL) FROM vt0 WHERE ('-1076658587') GROUP BY ((((((vt0.c0)>(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(SQLITE_VERSION())); -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), LEAD((((((vt0.c0 IN ()))OR('633784999')))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((CAST(vt0.c0 AS REAL))IS(((vt0.c0)OR(vt0.c0)))), (CAST(vt0.c0 AS TEXT) IN ())) OVER (), ((((vt0.c0)*(NULL)))+(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (RTRIM(((('Ek2'))<>(('-2019243246'))))); -- 0ms;
SELECT DISTINCT 0xffffffff80bae788 FROM vt0; -- 1ms;
SELECT ALL CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOT NULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) IS TRUE) THEN ((0.6065602076344593)<<(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END FROM vt0 WHERE (((((UPPER('1937380574'))AND(CASE WHEN x'' THEN 0.8173405769704097 WHEN x'' THEN 'd!' WHEN x'' THEN 1089813866 END)))OR(((0.16701814160414463) NOTNULL)))); -- 0ms;
SELECT (((((('82{|Q㄂')AND(vt0.c0)))AND(vt0.c0)))/((((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT (NOT (vt0.c0)), COUNT(*)) FROM vt0 WHERE (x'7c9d' COLLATE BINARY COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((NULL) IS FALSE) COLLATE NOCASE) OVER (), (((((vt0.c0)OR('677125243')))AND(vt0.c0)) IN ()), vt0.c0 FROM vt0 WHERE (((((x'')>>(-5403018)))<=((x'' IN ())))) LIMIT -1365391987; -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS NOT(vt0.c0)))<(NULL)) FROM vt0 WHERE (CASE json_remove('246266364', '476558504')  WHEN (- (x'678b')) THEN ((((NULL)OR(0.035439677783243084)))AND('''!#	v')) ELSE (('-1076658587')IS(-1.296600629E9)) END) GROUP BY vt0.c0 HAVING (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC), ((vt0.c0) ISNULL))) AND (((~ (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)IS NOT('0.8059500662119187')))));SELECT DISTINCT ((vt0.c0)|(((0.11025482838397571)*(vt0.c0)))) FROM vt0 WHERE (x'') GROUP BY '192703531', CAST(((vt0.c0)/(vt0.c0)) AS NUMERIC), vt0.c0 ORDER BY ((vt0.c0) ISNULL) ASC, 0x71840b5f;SELECT ALL (((vt0.c0)==(vt0.c0)) IN ()) FROM vt0 WHERE (((((1134699058)OR(0.926686692765114))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))))IS NOT((NOT (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((-1240510173) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0 WHERE (CAST(NULL AS NUMERIC) COLLATE BINARY); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(NULL)) FROM vt0 WHERE ((((NULL))<=((((0.7383057968049085) NOT NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL)) BETWEEN ((NOT (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((((((vt0.c0)AND(CAST(vt0.c0 AS NUMERIC))))OR(((0.4846039521484026) BETWEEN (vt0.c0) AND (NULL)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(NULL)), CAST(((vt0.c0)/(vt0.c0)) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT 0.9911917779610683 FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NULL) BETWEEN (-62322884) AND (0.8324008044266028)))=(((NULL)<(x''))))) GROUP BY (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), (('-15304411')<>(vt0.c0))))>=((((vt0.c0)%(x'')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)&(vt0.c0))))), (NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), LOWER(((vt0.c0)==(vt0.c0))), json_array_length((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 0xffffffffc7075bdf, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))), LTRIM((vt0.c0 IN ()), '-394930985'); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT NULL) FROM vt0 WHERE (CAST(((NULL)LIKE(x'ef256729')) AS BLOB)) GROUP BY (((vt0.c0)+(vt0.c0)) IN ()); -- 0ms;
SELECT ALL CAST(vt0.c0 AS REAL) COLLATE RTRIM FROM vt0 WHERE (0.09120854534371481); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((CAST(x'cbed' AS NUMERIC) IN ())); -- 0ms;
SELECT ALL (((((vt0.c0)GLOB(vt0.c0))))<>((MIN(vt0.c0)))) FROM vt0 WHERE (NULL) LIMIT -2135234680 OFFSET 677125243; -- 0ms;
SELECT DISTINCT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)%(((((vt0.c0)OR(vt0.c0)))AND(0Xffffffff8672f7ee)))) FROM vt0 ORDER BY CAST(((vt0.c0)=(vt0.c0)) AS NUMERIC); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)<>(MAX(vt0.c0))) FROM vt0 WHERE (((((0.781999071687842)==(NULL)))>(UPPER(NULL)))); -- 0ms;
SELECT ALL ((((vt0.c0)IS(vt0.c0))) NOTNULL), SUM(((vt0.c0) ISNULL)) COLLATE RTRIM, (~ (vt0.c0)) COLLATE RTRIM FROM vt0 GROUP BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) LIMIT -5403018 OFFSET -1115223921; -- 1ms;
SELECT DISTINCT NTH_VALUE(((x'648c') ISNULL), '89286872') OVER ( ROWS  UNBOUNDED PRECEDING), (~ (((vt0.c0) IS TRUE))), ((((vt0.c0)>>(vt0.c0)))OR(x'')) FROM vt0; -- 0ms;
SELECT ALL vt0.c0, NULL, vt0.c0, json_array_length(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(0.11025482838397571)))OR(vt0.c0)))AND(vt0.c0))), CAST(NULL AS NUMERIC) FROM vt0 WHERE ((((('/') BETWEEN (x'62c9') AND (x''))) ISNULL)); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM vt0 GROUP BY ((((vt0.c0)>=(vt0.c0))) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c0) IS FALSE))); -- 7ms;
SELECT DISTINCT (((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0)OR(vt0.c0))))) FROM vt0 UNION SELECT DISTINCT CASE ((vt0.c0)>=(vt0.c0))  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN (vt0.c0)) END FROM vt0 WHERE ('-62322884'); -- 0ms;
SELECT DISTINCT (~ (CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE (CASE WHEN x'9bca' THEN CASE WHEN 'Z\r*.' THEN NULL WHEN '892297161' THEN x'' WHEN x'cc2c' THEN x'1fe8' END ELSE ((((0.3702123166027428)AND(551928785)))OR(x'')) END) ORDER BY (((''))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST; -- 0ms;
SELECT (((((vt0.c0)IS(vt0.c0))))>=((((vt0.c0)<(vt0.c0))))), (((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c0))))), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))|(TOTAL(vt0.c0))) FROM vt0 WHERE (CASE 0X5422eb52 COLLATE NOCASE  WHEN TRIM(1515642657) THEN ((x'')==(0xffffffffa3ee972e)) WHEN ((x'')+(-6.2322884E7)) THEN '' WHEN CASE NULL  WHEN NULL THEN '724346116' ELSE x'' END THEN ((('1084958527', 0xffffffffa9a6df1f, x'353f')) NOT BETWEEN ((x'', -2098210319, x'')) AND ((0.8091445654327508, x'', 523116496))) END); -- 0ms;
SELECT DISTINCT (((((((((+ (x'')))OR((vt0.c0 IN ()))))AND(vt0.c0)))OR((- (vt0.c0)))))OR(json_array_length(NULL))), CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN TOTAL(vt0.c0) ELSE ((vt0.c0) BETWEEN ('u9.	%') AND (vt0.c0)) END, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c0)))) AND ((((vt0.c0)>>('0.6933984490693041'))))) FROM vt0 WHERE ((((((NULL, '-168744176', x'93f7'))!=((x'', '1220873005', 'MpA蚇[v<v)')))) BETWEEN (PRINTF('1220873005')) AND ((~ ('.놶3}VJZY'))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((- ('')))) FROM vt0; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 IN ()) IN ()) FROM vt0 WHERE (x'd18f'); -- 0ms;
SELECT ALL CASE x'b757'  WHEN '1814891537' THEN TOTAL(vt0.c0) END, (((vt0.c0)/(vt0.c0)) IN ()), ((((((((((((vt0.c0)OR('0.28399915959970035')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)||(vt0.c0)))) FROM vt0 WHERE (((((((x'') NOT NULL))AND((('')GLOB('-384581007')))))AND(CASE WHEN NULL THEN '-168744176' ELSE '1814891537' END))); -- 0ms;
SELECT ALL CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 END FROM vt0; -- 0ms;
SELECT LIKELIHOOD(DISTINCT vt0.c0, 0.9209149329709477) FROM vt0 WHERE ((((x'1f59' IN (x'49f7'))) NOTNULL)); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS REAL) COLLATE RTRIM, (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE), (((((('1904479071')OR(vt0.c0)))OR(vt0.c0)))=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ('1073494474'); -- 1ms;
SELECT ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT ((MAX(0Xffffffff971ee47e))%(vt0.c0)), (((vt0.c0 IN ())) NOT BETWEEN ((- (vt0.c0))) AND (TRIM(vt0.c0))), vt0.c0 FROM vt0 WHERE ((- (((((x'')OR(0.7572372690095387)))OR(0x5ab2a246))))); -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS TEXT))OR(CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((AVG(vt0.c0)) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)>(vt0.c0)))), CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)||(NULL)) END FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (TRIM((('892297161')<>('-1474420571')))); -- 0ms;
SELECT DISTINCT CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))==((vt0.c0))) END, ((((vt0.c0 IN ())))<>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))), (((~ (vt0.c0))) NOTNULL) FROM vt0 WHERE (CASE WHEN (((''))<(('-859138421'))) THEN ('0.39142867808349946' IN ()) ELSE CASE WHEN '1799205172' THEN '-1649370178' ELSE x'' END END) GROUP BY ((((vt0.c0)OR(vt0.c0))) BETWEEN (((vt0.c0)+(vt0.c0))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) HAVING CASE WHEN vt0.c0 THEN (~ (vt0.c0)) WHEN ((vt0.c0)<<(x'')) THEN SUM(vt0.c0) WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) ISNULL) END; -- 0ms;
SELECT (NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE ((((((NULL) IS TRUE)))>(('-922467697' COLLATE BINARY)))); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0)))), (((MIN(vt0.c0)))<>((vt0.c0 COLLATE RTRIM))), (MAX(vt0.c0, vt0.c0, NULL, vt0.c0) IN ()), CASE WHEN CAST(vt0.c0 AS TEXT) THEN CAST(vt0.c0 AS REAL) WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) WHEN '1440064796' THEN ((vt0.c0)+('-13300194')) END, ((SQLITE_COMPILEOPTION_USED(vt0.c0)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN MIN('vi>^✿泪\r0') THEN x'6ebe' WHEN TYPEOF(-2057717896) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0)<<(vt0.c0)) THEN SUM(vt0.c0) END, (((((vt0.c0)GLOB(vt0.c0)), AVG(vt0.c0), CAST(vt0.c0 AS TEXT)))>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), CAST(vt0.c0 AS INTEGER)))), JULIANDAY(vt0.c0 COLLATE NOCASE, '[	', (vt0.c0 IN ())), (~ (vt0.c0 COLLATE RTRIM)), SUM(UNLIKELY(DISTINCT vt0.c0)) OVER () FROM vt0 ORDER BY '-1240510173'; -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT '-1079030877', CAST('0.3759657235536572' AS TEXT))) ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST, ((vt0.c0 COLLATE BINARY)/(((vt0.c0)==(vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((CASE WHEN 0X28b05f69 THEN vt0.c0 END, vt0.c0, DATETIME(vt0.c0, vt0.c0, vt0.c0)))=(((('1814891537') BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0))) FROM vt0 WHERE (json_array(CASE 0.32976928798392047  WHEN NULL THEN x'' WHEN 0.5944977332297623 THEN 0.4582115438083839 WHEN x'5e10' THEN 340673863 END, ((('-1526244609')) NOT BETWEEN (('1411574610')) AND ((0Xfffffffffc118d08))), (+ (0.6597201342346675)), ((x'') IS TRUE))); -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0)=(vt0.c0)))) FROM vt0; -- 0ms;
SELECT TRIM(vt0.c0 COLLATE RTRIM) FROM vt0 WHERE ((((- (x'47d0'))) BETWEEN (CASE WHEN 0.2945820806050272 THEN 'hODU|' ELSE 0.06501212226438247 END) AND ((((NULL)) NOT BETWEEN ((x'')) AND (('	h')))))); -- 0ms;
SELECT DISTINCT AVG(CAST(vt0.c0 AS BLOB)) OVER () FROM vt0 GROUP BY ((((vt0.c0) NOT NULL))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-585601672')))) HAVING CAST(((vt0.c0) NOTNULL) AS BLOB) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOTNULL)))  NULLS LAST, (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))  NULLS LAST, ((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)=(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(COUNT(vt0.c0))))AND('-1649370178')) FROM vt0 WHERE ((((('') IS FALSE))<(CAST('' AS TEXT)))) UNION SELECT DISTINCT LIKE(TRIM(DISTINCT vt0.c0), (~ (vt0.c0)), 'i') FROM vt0 WHERE (((((0.32976928798392047)<>(x'ae7a'))) NOT BETWEEN (((x'') BETWEEN (NULL) AND (0.32976928798392047))) AND (((x'') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((CAST(-770960427 AS REAL)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((+ (CASE WHEN NULL THEN x'e9a4' ELSE 0Xffffffffe3babfc5 END))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT 0.1114192035129965, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((~ (' '))) AND (((vt0.c0)%(vt0.c0)))), CAST((vt0.c0 IN ()) AS NUMERIC) FROM vt0; -- 1ms;
SELECT DISTINCT SUM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) OVER ( ORDER BY ((CAST(x'' AS TEXT)) IS TRUE)), ((MAX(vt0.c0)) NOT NULL), (((((vt0.c0, '0.8173405769704097', 0.9311149077866153)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))OR(((vt0.c0)<<(vt0.c0)))))OR(vt0.c0)) FROM vt0 WHERE (CAST(CASE WHEN x'' THEN NULL WHEN '0.926686692765114' THEN '' WHEN NULL THEN '312074262' END AS BLOB)); -- 0ms;
SELECT ALL ((vt0.c0)>>(NULL)) COLLATE RTRIM COLLATE RTRIM, (CAST(vt0.c0 AS NUMERIC) IN ()), (((((vt0.c0, 0.910637488261169, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))IS(((vt0.c0) IS TRUE))) FROM vt0 WHERE (((NULL)*((((NULL)) NOT BETWEEN ((x'')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT NTILE((NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)IS NOT(CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (CAST(((0.7300129652587931) NOT NULL) AS REAL)); -- 0ms;
SELECT DISTINCT TOTAL(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) OVER () FROM vt0 WHERE (0xffffffff9f78ddc1); -- 0ms;
SELECT (((((vt0.c0)=(0.8711199503848986))))>((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) FROM vt0 WHERE (CASE WHEN (NULL IN ()) THEN '2138550710' END); -- 0ms;
SELECT DISTINCT CAST((- (vt0.c0)) AS NUMERIC), COUNT(*) OVER (), (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()) FROM vt0 WHERE (('Hg It' IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT vt0.c0, ((GROUP_CONCAT(vt0.c0))<<(CAST(vt0.c0 AS NUMERIC))), CAST(vt0.c0 AS REAL) FROM vt0; -- 0ms;
SELECT NTH_VALUE(((ABS(vt0.c0))=((NULL IN (vt0.c0)))), CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 END) OVER () FROM vt0 WHERE ((((((((((((((+ ('')))OR(CAST('' AS REAL))))OR((~ (x'')))))AND(CASE NULL  WHEN 0.35660501596969485 THEN 0.3318408376293812 WHEN '-955819041' THEN '892297161' WHEN 'd' THEN x'32ef' WHEN 0.7383057968049085 THEN x'' WHEN NULL THEN x'' END)))OR(((((0Xffffffff8c25e167)OR(x'')))AND(-672205994)))))OR(((-1.115223921E9) NOT BETWEEN ('') AND (x'')))))AND((+ (NULL))))); -- 1ms;
SELECT ALL (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))-(((((vt0.c0)OR(0.6155347410184477)))AND(vt0.c0)))), TOTAL(CAST(vt0.c0 AS TEXT) COLLATE NOCASE) OVER (), (((NOT ('')))LIKE(NULL)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)>=(vt0.c0)))LIKE((+ (vt0.c0)))) FROM vt0 WHERE (CASE CASE '-2114021180'  WHEN NULL THEN '1573400633' END  WHEN ((x'')/(NULL)) THEN CAST(0xffffffffc904428f AS INTEGER) WHEN CAST(x'db7e' AS NUMERIC) THEN TYPEOF(0.07913035973693017) WHEN (('5h') ISNULL) THEN ((('0.06501212226438247')) BETWEEN (('2031596328')) AND (('఑ ?ag_M㍍O'))) ELSE CASE -1076658587  WHEN 'f[\n&' THEN NULL WHEN 0.8488635649963355 THEN '' WHEN x'' THEN x'' END END); -- 0ms;
SELECT DISTINCT (((((- (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0)) FROM vt0 WHERE ((((('7?wye]0') BETWEEN (0.4810477131446984) AND (''))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((vt0.c0))<((vt0.c0)))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND ((vt0.c0 IN ()))) FROM vt0 WHERE (((((((((('' IN ()))OR((NULL IN ('%wx|NA')))))AND(((x'')GLOB('Y!')))))OR(((0.8148786444996534)|(NULL)))))AND((+ (x''))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<>(vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (UNLIKELY(vt0.c0))), AVG(GROUP_CONCAT(vt0.c0) COLLATE RTRIM), CASE WHEN (((vt0.c0, '', vt0.c0))<=((vt0.c0, vt0.c0, 0.41995268520491047))) THEN NULL WHEN -645881354 THEN ((vt0.c0) ISNULL) WHEN CAST(vt0.c0 AS NUMERIC) THEN (('')==(x'')) WHEN vt0.c0 THEN ((x'')<>(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 END, AVG(((vt0.c0)IS NOT(vt0.c0))) OVER (), ROW_NUMBER() OVER () FROM vt0 WHERE (json_object(((NULL)>=('-823435445')), CHAR('Sn!R4棘Q', '', NULL, x'88cbd8d4', NULL)));SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((CAST(x'' AS REAL)))), CASE WHEN (vt0.c0 IN ()) THEN TYPEOF(x'') ELSE (vt0.c0 IN ()) END, (((vt0.c0))>((vt0.c0))) COLLATE NOCASE FROM vt0 WHERE (((('-233093642')<<('-1999201752')) IN ())) GROUP BY ((((vt0.c0) BETWEEN (vt0.c0) AND (-1296600629)))<<('/(0dOR''!')); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)>=(vt0.c0)) AS REAL) FROM vt0 WHERE (CAST(((NULL)%('422217747')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))&((vt0.c0 IN ()))) FROM vt0 WHERE (CAST('u9.	%' AS BLOB) COLLATE NOCASE) GROUP BY (vt0.c0 IN ()) COLLATE NOCASE HAVING 0.40093511236977686; -- 0ms;
SELECT ((((vt0.c0)OR(vt0.c0)))&((+ (0x25c6caa7)))), CASE (((vt0.c0, vt0.c0, vt0.c0))<((NULL, vt0.c0, vt0.c0)))  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 WHEN (('-1856855407') IS TRUE) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 THEN (vt0.c0 IN ()) END, CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)-(vt0.c0)) ELSE ((vt0.c0)||(vt0.c0)) END, CASE ''  WHEN 0.29235543417046284 THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (('#') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((('1220873005')AND(vt0.c0)))OR(vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.9996593187273747) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, COUNT(x'5d25') OVER () FROM vt0; -- 0ms;
SELECT (((('-1904138962' IN ()), ((vt0.c0) NOT BETWEEN ('-2000555551') AND (vt0.c0)), ((vt0.c0)/(x''))))!=((vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE))) FROM vt0 WHERE ((((((((((((((('B+') BETWEEN ('1149430951') AND (x'')))OR((('2097274850') BETWEEN ('d!') AND ('164406079')))))AND((- (NULL)))))AND((((((((((((('c㑍')OR(0.6311073592671821)))AND(']')))AND('1814891537')))AND(x'3f8b')))AND(NULL)))AND(0.8506668124367059)))))AND(((0.2053432707412769)*(x'')))))AND((~ ('0.06501212226438247')))))OR((NOT ('-436975193'))))) LIMIT -2098210319; -- 0ms;
SELECT ((((0.3143212746116142)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) FROM vt0 GROUP BY CASE WHEN (1691705387 IN (vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE BINARY END, ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(((NULL)%(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE NULL END)))AND(x'')), CASE ('' IN ())  WHEN 0X5df8ce1e THEN IFNULL(vt0.c0, vt0.c0) WHEN vt0.c0 THEN x'' WHEN 0.40889042867599745 THEN ((vt0.c0)|(vt0.c0)) END HAVING ((((((((MAX(x''))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR((+ (vt0.c0)))))OR(((vt0.c0)!=(vt0.c0)))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x'2555'))) ISNULL) DESC  NULLS FIRST, CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST((((677125243)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB), ((CAST(vt0.c0 AS INTEGER)) IS FALSE), SUM((vt0.c0 IN ())) OVER (), TOTAL((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) OVER (), ((((((vt0.c0) IS FALSE))AND(((vt0.c0)==(vt0.c0)))))OR(vt0.c0)) FROM vt0 WHERE ((~ (((0.6065602076344593)IS(NULL))))); -- 1ms;
SELECT DISTINCT MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) FROM vt0 GROUP BY CAST(x'' AS INTEGER); -- 0ms;
SELECT ALL CAST(SUM(vt0.c0) AS BLOB), ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (x'7179')), CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE (('') BETWEEN (vt0.c0) AND ('1408637577')) END FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((('|>')AND(NULL)))AND(NULL)))-((+ ('-2039285778'))))); -- 0ms;
SELECT ALL CASE 0xffffffffa5112184  WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE RTRIM END, (~ ((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'5656', vt0.c0))))), CAST((x'' IN ()) AS INTEGER) FROM vt0 WHERE (('830309613' IN ()) COLLATE BINARY) GROUP BY ((CAST(vt0.c0 AS TEXT))-((vt0.c0 IN (vt0.c0)))), 0x1c67b4a8 COLLATE BINARY, ('2046299975' COLLATE BINARY IN ());SELECT DISTINCT CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, json_remove(json(vt0.c0), (((vt0.c0))==((vt0.c0))), ((vt0.c0)||(vt0.c0)), GROUP_CONCAT(vt0.c0)), ((COUNT(*))>=(((vt0.c0)AND(vt0.c0)))) FROM vt0 WHERE (STRFTIME(0xffffffff81fe98c4, NULL, 0.3551511069381478, NULL, '-62322884', x'5833', '-566461586') COLLATE NOCASE) ORDER BY 0.4472806063906587 DESC, ((((((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0)-('\n}')))))AND(CAST(vt0.c0 AS TEXT))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('	xw6')))AND(vt0.c0)))))OR(((vt0.c0)LIKE(vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB) FROM vt0; -- 0ms;
SELECT ((((vt0.c0)<(vt0.c0)))/(1)) FROM vt0; -- 0ms;
SELECT DISTINCT NTILE(CAST(((vt0.c0)OR(vt0.c0)) AS NUMERIC)) OVER (), (+ (INSTR(vt0.c0, vt0.c0))), ((vt0.c0 COLLATE NOCASE)LIKE(IFNULL(DISTINCT vt0.c0, vt0.c0))) FROM vt0;SELECT ALL CASE ((0.3098052543403471)||(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)>=(vt0.c0)) ELSE (vt0.c0 IN ()) END, ((vt0.c0 COLLATE NOCASE) BETWEEN ((+ (vt0.c0))) AND ((~ (vt0.c0)))), vt0.c0, SUM('-1474420571'), (- (((vt0.c0)+(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL DATE(vt0.c0, vt0.c0, vt0.c0) COLLATE BINARY FROM vt0 WHERE (CAST((NOT (NULL)) AS INTEGER)); -- 0ms;
SELECT ALL COUNT(((vt0.c0)=(vt0.c0))) FROM vt0 WHERE (CAST(CASE 0.2945820806050272  WHEN '-9223372036854775808' THEN x'' END AS NUMERIC)) LIMIT 247808429; -- 1ms;
SELECT (((vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))!=((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)||(vt0.c0))))) FROM vt0 WHERE (''); -- 0ms;
SELECT (((((((((('-242821030') BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0)))AND((vt0.c0 IN (vt0.c0)))))OR(TOTAL(x''))))OR(vt0.c0)), GROUP_CONCAT(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))), ((((((vt0.c0) IS TRUE))OR(load_extension(vt0.c0, vt0.c0))))AND(SUBSTR(vt0.c0, vt0.c0))) FROM vt0 WHERE (NULL);SELECT DISTINCT SUM((- (vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)<(((vt0.c0) IS FALSE))) FROM vt0; -- 0ms;
SELECT ((vt0.c0) ISNULL) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL AVG(vt0.c0) FROM vt0 GROUP BY (((LIKELIHOOD(vt0.c0, 0.43545643678736345)))<((((vt0.c0)+(vt0.c0))))) HAVING CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR('-1486055757')) THEN ((vt0.c0)%(vt0.c0)) END LIMIT 258360656; -- 0ms;
SELECT DISTINCT CAST((('	h') NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (((((NULL)OR(CASE 0.856658246226187  WHEN 7.24346116E8 THEN 1408637577 END)))AND((NOT ('1515642657'))))); -- 0ms;
SELECT DISTINCT CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN '5h' THEN vt0.c0 COLLATE BINARY ELSE '0.6155347410184477' END FROM vt0 WHERE ('') ORDER BY NULL ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (((vt0.c0)-(vt0.c0))) AND ('-169716657')) FROM vt0 GROUP BY ((CAST('-432509106' AS REAL)) NOTNULL), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (-981798462 COLLATE NOCASE)), ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND((~ (vt0.c0)))))OR(((('|Y')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) LIMIT 1440064796 OFFSET 432753203; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE RTRIM AS NUMERIC), ((NOT (vt0.c0)) IN ()), ((CAST('-1420584233' AS REAL))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (NULLIF(DISTINCT (('-1504909762') BETWEEN ('n') AND (0Xec541ad)), (((0.8436910816033608, NULL, x''))>((x'', '-15304411', '-394930985'))))); -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS REAL))AND(((vt0.c0)&(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((((NULL) BETWEEN (0Xffffffffc6ef5041) AND ('-290226906')))|(CASE '1691705387'  WHEN '|>' THEN x'439f' WHEN 0.6065602076344593 THEN '-2000555551' WHEN -1.5304411E7 THEN '1961843544' ELSE '-1448681697' END))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST(vt0.c0 AS REAL))) DESC, ABS((~ (vt0.c0)))  NULLS LAST, vt0.c0 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN ('627780646') AND (vt0.c0))) IS FALSE) FROM vt0 LIMIT 906658697 OFFSET -1856855407; -- 0ms;
SELECT CASE GROUP_CONCAT(vt0.c0)  WHEN ((vt0.c0) ISNULL) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (+ (x'112d')) END FROM vt0 WHERE ((((((0.6168780662781383)>(0X79f80f47))))<=(('q[>y' COLLATE NOCASE)))) LIMIT -1700343020 OFFSET -362466305; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)OR(vt0.c0)) AS BLOB) FROM vt0 GROUP BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)!=((~ (vt0.c0)))), (((LIKE(vt0.c0, vt0.c0), (((vt0.c0))>((vt0.c0))), (+ (vt0.c0))))<=((((vt0.c0)LIKE(vt0.c0)), (+ (vt0.c0)), ((vt0.c0)|(vt0.c0))))), (((vt0.c0)) BETWEEN (((('239423903')IS(0.6193766476742486)))) AND ((((vt0.c0)LIKE(vt0.c0))))) LIMIT -226943626 OFFSET -384084371; -- 0ms;
SELECT DISTINCT CASE AVG(vt0.c0)  WHEN (vt0.c0 IN (vt0.c0)) THEN (NOT (vt0.c0)) END, (NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL ((COUNT(*)) NOT NULL) FROM vt0; -- 0ms;
SELECT AVG((('33361023')LIKE(vt0.c0))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt0 GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0) NOT NULL)))) FROM vt0 WHERE (((((-8.59138421E8)*(616056160)))<=(CAST(x'3fba' AS REAL)))); -- 1ms;
SELECT DISTINCT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) NOT NULL))))AND(((vt0.c0)=(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(CAST(vt0.c0 AS BLOB)), RANK() OVER (), NTH_VALUE(LIKELIHOOD(SQLITE_COMPILEOPTION_GET(vt0.c0), 0.565029452431668), MIN(NULL, CAST(vt0.c0 AS BLOB))) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0;SELECT DISTINCT vt0.c0, CASE WHEN MIN(vt0.c0) THEN ((vt0.c0)&(vt0.c0)) END, CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)OR(vt0.c0)) END, (NOT (vt0.c0)), (+ ((((('-2039285778')AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 GROUP BY CAST(vt0.c0 COLLATE NOCASE AS REAL) HAVING ((((vt0.c0)LIKE(vt0.c0)))IS NOT('-1310467344' COLLATE RTRIM)) ORDER BY ((((vt0.c0)<=(vt0.c0)))<=((vt0.c0 IN ()))) DESC, CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)+(vt0.c0)) ELSE ((vt0.c0)<=(0.6340451281697025)) END; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY, CAST(0.22373290596556283 AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((5.51928785E8)/('vi>^✿泪\r0'))) BETWEEN (((NULL)GLOB(0.77923328327738))) AND (((('-168744176')) NOT BETWEEN ((0.08980613485234024)) AND ((0.2502044655040754)))))); -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED((vt0.c0 IN ())), vt0.c0, '' FROM vt0; -- 0ms;
SELECT CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, 0.3115328863910235, vt0.c0 FROM vt0; -- 0ms;
SELECT ALL CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, (((vt0.c0 COLLATE NOCASE))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), CASE WHEN vt0.c0 THEN (- (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)%(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (0.035439677783243084 IN ()) ELSE (vt0.c0 IN (0.6044336516923758, x'2236', vt0.c0)) END FROM vt0 WHERE (((((NULL) IS FALSE))OR(1e500))); -- 1ms;
SELECT ((vt0.c0) NOT BETWEEN (AVG(vt0.c0)) AND (vt0.c0)), (0.8711199503848986 IN ()), ((((vt0.c0)AND(vt0.c0))) NOT NULL) FROM vt0 WHERE ((NOT ((('380641102') BETWEEN (0Xffffffffc904428f) AND (''))))); -- 0ms;
SELECT SUM(TRIM(DISTINCT vt0.c0)) FROM vt0 WHERE (CASE WHEN (('') IS TRUE) THEN ((NULL) BETWEEN (0Xffffffffb3bd78db) AND (1.573400633E9)) END); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), x'', ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0)%(vt0.c0))) AND (vt0.c0)), GROUP_CONCAT(((vt0.c0) IS FALSE)), TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) IS TRUE) FROM vt0 LIMIT -1371744328; -- 0ms;
SELECT ALL LAST_VALUE(CASE json_array_length(vt0.c0)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN vt0.c0 THEN ((-1406881391)<=('')) WHEN (- (vt0.c0)) THEN ((vt0.c0) IS FALSE) END) OVER ( PARTITION BY (((vt0.c0 IN ())) IS TRUE), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '0.9911917779610683' WHEN '-557635742' THEN vt0.c0 END COLLATE RTRIM) FROM vt0;SELECT ALL (((('-566461586') NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ('' IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), LIKELY(vt0.c0))), ((((CASE WHEN '' THEN vt0.c0 END)AND(GLOB(vt0.c0, vt0.c0))))OR(vt0.c0)) FROM vt0 GROUP BY (NOT (vt0.c0 COLLATE RTRIM)); -- 0ms;
SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(CASE WHEN vt0.c0 THEN vt0.c0 END) OVER (), ((vt0.c0)|(vt0.c0)) COLLATE NOCASE, ((COUNT(vt0.c0)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (AVG(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((x'7c013a23', vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)+(vt0.c0)), (NOT (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.32949371285852436))))) FROM vt0 WHERE (CASE WHEN NULL THEN NULL ELSE NULL END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((897010870) NOTNULL)))<=((CASE vt0.c0  WHEN 0.6933984490693041 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))), (((((((((((vt0.c0))<>((vt0.c0))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))))AND(AVG(vt0.c0))), CAST((vt0.c0 IN ()) AS INTEGER) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((((((-287351010) NOTNULL)))>=((json_type(x'')))));SELECT DISTINCT (((vt0.c0 IN (vt0.c0))) IS FALSE) FROM vt0 GROUP BY (vt0.c0 IN ()); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0 WHERE (CAST(((0.6558532120658067)!=(']M')) AS REAL)); -- 0ms;
SELECT DISTINCT ((vt0.c0) IS TRUE), ((MAX(vt0.c0)) NOT BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (MAX(246266364))), ((((vt0.c0)<<(vt0.c0)))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ((NOT (CAST(NULL AS TEXT)))); -- 0ms;
SELECT ALL (vt0.c0 IN (((vt0.c0)-(vt0.c0)))), vt0.c0, vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((UPPER(DISTINCT vt0.c0)))<((''))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(SUBSTR(vt0.c0, vt0.c0) AS REAL), (((((vt0.c0)OR(x'ff77')), (- (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))==((COUNT(*), vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))), CASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 ELSE NULLIF(DISTINCT 'l''\r}8┮?PY', vt0.c0) END FROM vt0; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c0 AS TEXT)))>=(('149154388'))) FROM vt0 WHERE ((((NULL)<=(NULL)) IN ())); -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN 0.28660611875443565 ELSE vt0.c0 END, ((vt0.c0)%(vt0.c0)))) AND (('-5403018', ((vt0.c0)|(vt0.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('i?')))AND(vt0.c0)))OR(vt0.c0))))) FROM vt0 WHERE (((CASE 0.4211629007940614  WHEN '-1079030877' THEN NULL ELSE x'1414' END)GLOB(((0xffffffff8559b778)-(x''))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (AVG(NULL)) AND (load_extension(vt0.c0, vt0.c0))) FROM vt0 WHERE (('' IN (CAST('-1240510173' AS BLOB))));SELECT ALL ((((- ('##]q'))))>=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT json_type(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0 WHERE (((('-1474420571')||(NULL)) IN ())); -- 0ms;
SELECT ((TRIM(DISTINCT vt0.c0, vt0.c0))>=((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), UNLIKELY(DISTINCT CAST(vt0.c0 AS REAL)), ((((vt0.c0) ISNULL)) NOTNULL) FROM vt0 WHERE (((((x'')&(0.4624811421075158)))>>(((0.45046873286319) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR((- (vt0.c0)))))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (0.32949371285852436)))))AND(vt0.c0)) FROM vt0 WHERE (((((~ ('915169001')), CASE WHEN '~M' THEN '第~N/f0큾' WHEN -384581007 THEN x'' WHEN 0xffffffffccca968b THEN NULL ELSE '1411574610' END, ((0.042251492983408356)>>('+O\E0q'))))<>((CAST(0.23813318708965947 AS TEXT), ((((((((NULL)AND(0X5a4a5df4)))AND(-6.72205994E8)))AND(x'4a346868')))AND('-952975865')), ((x'') NOT BETWEEN (x'') AND (0.8722225054009269)))))) LIMIT -806943653 OFFSET -662222023; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) IS FALSE)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE))IS(json_remove(vt0.c0, vt0.c0))) FROM vt0;SELECT ALL CAST(vt0.c0 AS NUMERIC), (((~ (vt0.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (MIN(vt0.c0))), CASE CASE WHEN 6.33784999E8 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN GROUP_CONCAT(vt0.c0) THEN ((vt0.c0) IS TRUE) ELSE CASE WHEN x'5482' THEN vt0.c0 ELSE vt0.c0 END END, (CAST(vt0.c0 AS REAL) IN ()), (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((UPPER(vt0.c0)))), COUNT(CASE WHEN vt0.c0 THEN vt0.c0 END) OVER (), GLOB((+ (vt0.c0)), vt0.c0 COLLATE NOCASE) FROM vt0 LIMIT -267002099; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN ((((x'8917')AND(x'')))OR(x'')) THEN (('')>>(0.35530122303457123)) END); -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)==(vt0.c0)) WHEN CAST(x'' AS TEXT) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END FROM vt0 WHERE (json_insert(((0X1299e016)+(NULL)), (+ (0xffffffffd20c13d5)), '-1474420571')) GROUP BY CASE WHEN ((((0.8631197312618357)AND(vt0.c0)))OR(vt0.c0)) THEN json_insert(vt0.c0, vt0.c0, vt0.c0) WHEN GLOB(vt0.c0, vt0.c0) THEN (+ (vt0.c0)) WHEN (- (vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) END HAVING ((((vt0.c0))!=((vt0.c0))) IN ()) LIMIT -970382082; -- 0ms;
SELECT ALL ((vt0.c0) ISNULL) COLLATE BINARY FROM vt0 WHERE (UNLIKELY(DISTINCT -1544644818)) LIMIT 1134699058 OFFSET 1497614015; -- 0ms;
SELECT ALL GROUP_CONCAT(vt0.c0) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt0 LIMIT 246266364 OFFSET -1999201752; -- 0ms;
SELECT DISTINCT 0.1429888428667565 FROM vt0 GROUP BY CAST((+ (vt0.c0)) AS BLOB), ((vt0.c0 COLLATE BINARY)+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) NOTNULL)) AND (NULL)); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0, vt0.c0)))>(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), ((CASE WHEN vt0.c0 THEN vt0.c0 END)<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN CASE vt0.c0  WHEN 6.036640524389458E-4 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)<=(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE (CASE CASE 'D1]'  WHEN '-1943674521' THEN NULL ELSE '0.7300129652587931' END  WHEN CAST(NULL AS REAL) THEN LIKELIHOOD('Cng\.', 0.5126116592157159) END) GROUP BY CAST(vt0.c0 AS TEXT) COLLATE BINARY; -- 0ms;
SELECT DISTINCT COUNT(MAX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '-691009479' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0;SELECT (((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS BLOB))) FROM vt0 ORDER BY (((CAST(vt0.c0 AS BLOB)))<>((ABS(DISTINCT vt0.c0)))); -- 0ms;
SELECT ALL NTILE(((((vt0.c0)-(vt0.c0)))|(ROUND(vt0.c0, vt0.c0)))) OVER () FROM vt0 ORDER BY ((((((vt0.c0) NOTNULL))AND(vt0.c0 COLLATE RTRIM)))OR(NULL)) DESC  NULLS LAST;SELECT ALL 0X6c254e15 FROM vt0; -- 1ms;
SELECT DISTINCT CAST(((((NULL)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((((((((0.8497411549381816)OR(x'')))AND(-1.921704068E9)))OR(((NULL)<(x'')))))AND('-1076658587'))); -- 0ms;
SELECT DISTINCT (AVG(vt0.c0) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (((((vt0.c0))=(('髫P}'))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), CAST(((vt0.c0) ISNULL) AS REAL), vt0.c0, '', (-770960427 COLLATE NOCASE IN ()) FROM vt0 WHERE (((x'')|(CASE '1678682509'  WHEN x'' THEN NULL WHEN '-1179673065' THEN 0.011618059690294391 WHEN x'' THEN x'' WHEN NULL THEN -1.448681697E9 WHEN x'1d24' THEN 0.09909313511458173 END))); -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) FROM vt0 WHERE ((- ((((0.6947106206150355, 0.4360647045595081, x'')) NOT BETWEEN ((NULL, NULL, -271047608)) AND ((NULL, NULL, '9*%i')))))) GROUP BY (+ ((~ (vt0.c0)))), ((NULLIF(DISTINCT vt0.c0, vt0.c0)) IS FALSE), (((vt0.c0))<((vt0.c0))) COLLATE RTRIM HAVING ((((((((LIKE(vt0.c0, vt0.c0, 'S'))OR(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(TRIM(x''))); -- 0ms;
SELECT NTH_VALUE(CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS REAL), ((((vt0.c0)|(vt0.c0)))<=(((vt0.c0)>>(vt0.c0))))) OVER () FROM vt0 ORDER BY json_type((vt0.c0 IN ())) ASC, (((((~ (vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (((('') ISNULL) IN ())); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((('') BETWEEN (x'') AND (NULL)), (NOT (0.03170688954881162)), CASE ''  WHEN '' THEN '{}' END))<=((((0Xffffffff80f59450)-(x'')), ((NULL) IS FALSE), NULL COLLATE BINARY)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0))<=((vt0.c0))))); -- 0ms;
SELECT DISTINCT (NOT (CAST(vt0.c0 AS REAL))), (- ((('')>>(vt0.c0)))), ((x'aad2' COLLATE BINARY) ISNULL) FROM vt0 WHERE ((((((+ (-879831094)))AND(CAST(0.23384467928372688 AS INTEGER))))AND((((((((('	N픤a')OR(-1876356026)))OR(2138041721)))OR(0Xffffffff8c2f73a6)))OR(x''))))); -- 1ms;
SELECT ((MAX(vt0.c0)) NOT BETWEEN (TOTAL(vt0.c0)) AND ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT COALESCE(((vt0.c0)<=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END) FROM vt0 LIMIT 1049397016 OFFSET -1982905534; -- 0ms;
SELECT ALL (- (vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT (UNLIKELY(vt0.c0) IN ()), LAST_VALUE((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)IS NOT(vt0.c0)))))) OVER (), CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN NULLIF(vt0.c0, vt0.c0) THEN ((((vt0.c0)OR(vt0.c0)))OR(0.011618059690294391)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(-1.5304411E7)) END FROM vt0 WHERE (CAST(CAST(0.07269082283012329 AS INTEGER) AS NUMERIC)); -- 1ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY vt0.c0  NULLS FIRST), SUM((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))), (+ (CAST(vt0.c0 AS NUMERIC))), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB), (((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND (((vt0.c0 IN ())))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL (- ('')) FROM vt0; -- 0ms;
SELECT ((vt0.c0)GLOB(vt0.c0)) FROM vt0 WHERE (((((('f', 0.3295150979568692, NULL)) NOT BETWEEN (('-1167936985', '-779760820', NULL)) AND ((7.24346116E8, 'UN', x'')))) NOT BETWEEN (((x'')!=('-996738584'))) AND ((- ('TRUE'))))); -- 0ms;
SELECT DISTINCT json((vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT (NOT (((vt0.c0)*(vt0.c0)))) FROM vt0 WHERE (((((((0.8635348378766565) IS TRUE))OR((- ('O#KE\nDEK%JI')))))AND(((((NULL)AND(x'')))OR(NULL))))); -- 0ms;
SELECT DISTINCT x'b924' COLLATE NOCASE FROM vt0 WHERE (((((x'')AND('-603340336')))OR('఑ ?ag_M㍍O')) COLLATE NOCASE) ORDER BY TOTAL_CHANGES(); -- 0ms;
SELECT DISTINCT (('BF?p')IS NOT(vt0.c0 COLLATE RTRIM)), x'058a', ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (LOWER(DISTINCT vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (0.2273686601266416); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE ((((CAST(0.044103690101621296 AS TEXT)))<=((UPPER('x	'))))); -- 0ms;
SELECT DISTINCT NTILE(0.048085977200174046) OVER ( ROWS BETWEEN ((vt0.c0 COLLATE BINARY) IS TRUE) PRECEDING AND  CURRENT ROW EXCLUDE TIES) FROM vt0;SELECT DISTINCT x'4b7b' FROM vt0; -- 0ms;
SELECT DISTINCT AVG((((vt0.c0))!=((vt0.c0)))) FROM vt0 WHERE (((CASE WHEN 0.77923328327738 THEN '-1306294649' END)=(((((x'1e37')AND(x'')))OR(-859715469))))); -- 0ms;
SELECT DISTINCT LOWER(GROUP_CONCAT(vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL COUNT(CASE vt0.c0  WHEN '-1962486881' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END), (~ (((vt0.c0) ISNULL))), AVG(CAST(vt0.c0 AS NUMERIC)) OVER () FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0) IS FALSE)))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(IFNULL(DISTINCT vt0.c0, vt0.c0)) FROM vt0; -- 0ms;
SELECT ((IFNULL(vt0.c0, vt0.c0))!=(CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) BETWEEN (0.0710869265087607) AND (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((vt0.c0) BETWEEN (vt0.c0) AND (0.9592512859325408)) IN ()) FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((COUNT(*)) NOT BETWEEN (('-1486055757' IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CAST((-842720602 IN ('')) AS NUMERIC)); -- 1ms;
SELECT DISTINCT SUM(((vt0.c0) IS FALSE)) OVER () FROM vt0 WHERE (CAST(((((x'a4dc')OR(-1.526244609E9)))AND('{a뱟f]')) AS TEXT)); -- 0ms;
SELECT ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS FALSE))) FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()) DESC; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((~ (vt0.c0)))), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(vt0.c0 COLLATE BINARY)), json_extract(((vt0.c0)>=(x'')), CAST(vt0.c0 AS NUMERIC), NULL, vt0.c0, ((vt0.c0) NOT NULL), AVG(vt0.c0)) FROM vt0 WHERE (CASE WHEN (0.5400685793878401 IN (NULL)) THEN '1972914381' ELSE ((1.408637577E9)|(NULL)) END); -- 0ms;
SELECT DISTINCT SUM((- (vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT ((((vt0.c0)OR(vt0.c0))) NOT NULL) FROM vt0 WHERE ((+ ((((('')OR(0.6749421420762075)))AND(x''))))) GROUP BY ((NULL) NOT NULL); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) ISNULL) AS TEXT) FROM vt0 ORDER BY (((((0.17565540133969182)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 0ms;
SELECT ALL (((((vt0.c0))<((vt0.c0))))IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 LIMIT -382174039; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) ISNULL)  WHEN x'efcc' THEN CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN HEX(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)OR(x'')) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, 0.9073393105168057, (NOT (((vt0.c0) IS TRUE))) FROM vt0; -- 0ms;
SELECT ALL ((TYPEOF(vt0.c0))+(vt0.c0)) FROM vt0 LIMIT -562291508 OFFSET 402562312; -- 0ms;
SELECT GROUP_CONCAT((NULL IN (vt0.c0, vt0.c0))) OVER () FROM vt0 LIMIT 904501844; -- 0ms;
SELECT DISTINCT AVG((vt0.c0 IN ())) OVER (), FIRST_VALUE((((NOT (vt0.c0))) BETWEEN (((vt0.c0)/(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) OVER ( ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST), ((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND ((NOT (vt0.c0)))) FROM vt0; -- 1ms;
SELECT ALL COUNT(*) COLLATE BINARY FROM vt0 WHERE ((((((((((NOT (0.39400594836855063)))AND((+ (0.14924798927445226)))))OR(((0xffffffffc0bdb988)%('')))))OR(0xfffffffff186d85a)))AND(((((x'')OR(x'e490')))OR(x''))))); -- 0ms;
SELECT ALL CAST(((vt0.c0)-(-1378038729)) AS BLOB) FROM vt0 WHERE (((CAST(0.911009665472934 AS TEXT))<<(json_quote(NULL)))); -- 0ms;
SELECT (((vt0.c0 IN ())) IS FALSE) FROM vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOTNULL)))  NULLS LAST; -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN (CAST(vt0.c0 AS INTEGER))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))>>(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT (NOT (vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (((((0.7232181432253572) BETWEEN (NULL) AND (0.5464298220043491))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) NOT NULL) FROM vt0 ORDER BY ((((x'') BETWEEN (vt0.c0) AND (vt0.c0)))-(x''))  NULLS FIRST; -- 0ms;
SELECT LOWER((NOT (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)||(vt0.c0))) OVER ( ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END AS BLOB) DESC) FROM vt0 WHERE (((CASE x''  WHEN NULL THEN '192703531' ELSE 0.8745588788653705 END)+(((x'') NOT NULL)))); -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, NULL)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)AND(NULL)), ((vt0.c0)||(vt0.c0)))) AND ((IFNULL(DISTINCT vt0.c0, vt0.c0), vt0.c0 COLLATE BINARY, (NOT (vt0.c0))))), ((vt0.c0)>=(vt0.c0)) COLLATE BINARY, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (((('')AND('F>rso')) IN ((x'8ba6' IN (NULL, '926520529')), ((0.4354148219441891) IS TRUE)))); -- 1ms;
SELECT DISTINCT ((((((vt0.c0)OR('-582010967')))AND(vt0.c0)))%(vt0.c0 COLLATE RTRIM)), (NULL IN ()), CAST('' AS TEXT) FROM vt0 WHERE ((((NULL IN ()))GLOB((('-384581007') NOT BETWEEN (0x6dfe978d) AND (NULL))))); -- 0ms;
SELECT ALL (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (MIN(vt0.c0), ((vt0.c0)>>(vt0.c0)))) FROM vt0 GROUP BY (((CAST(0.910637488261169 AS INTEGER)))=((((vt0.c0)<(vt0.c0))))) HAVING ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)-(vt0.c0)))); -- 0ms;
SELECT ALL vt0.c0, COUNT((NOT (vt0.c0))) OVER ( ROWS BETWEEN (((- (vt0.c0))) IS TRUE) FOLLOWING AND  CURRENT ROW), LEAD(vt0.c0, CAST(vt0.c0 AS TEXT), ABS(DISTINCT vt0.c0 COLLATE RTRIM)) OVER (), LIKELIHOOD(DISTINCT CAST(vt0.c0 AS INTEGER), 0.24131224873260182), ((((vt0.c0)*(vt0.c0)))+(((vt0.c0)IS NOT(vt0.c0)))) FROM vt0 WHERE (((((-395908491) BETWEEN (x'') AND (NULL)))GLOB((x'' IN ()))));SELECT DISTINCT ((+ (vt0.c0)) IN ()) FROM vt0 WHERE ((((0.07512321884614337 IN (NULL, NULL)))AND(((0.9929341210403209) BETWEEN ('523116496') AND (NULL))))) ORDER BY vt0.c0 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)<(vt0.c0)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) FROM vt0 GROUP BY ((((((((((((((vt0.c0)AND('')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))>=(((vt0.c0)<(vt0.c0)))) HAVING CAST(COUNT(*) AS REAL) ORDER BY 0Xffffffff8d751f7c ASC  NULLS LAST, (('1073494474' IN ()) IN ())  NULLS LAST; -- 0ms;
SELECT ALL (0.30234785297325995 IN ()) FROM vt0 WHERE (((('247808429' IN (''))) NOT BETWEEN ((((x'', 0.5003947820754617, x'')) BETWEEN ((NULL, NULL, 0.5944977332297623)) AND ((0.7547290131099929, NULL, x'')))) AND (((((x'')OR(2049194885)))OR(x''))))) LIMIT 1084958527 OFFSET -858705959; -- 0ms;
SELECT DISTINCT CAST(((-538105875) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) FROM vt0 WHERE ((((x'8ec0' IN ())) BETWEEN (CAST('j\t[繈}' AS INTEGER)) AND (CASE WHEN 0X50c71602 THEN NULL ELSE x'' END))); -- 0ms;
SELECT ALL NULLIF(vt0.c0 COLLATE NOCASE, (((vt0.c0))<>((vt0.c0)))), (((vt0.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((vt0.c0 IN ())))), ((((LTRIM(vt0.c0))AND(((vt0.c0)/(vt0.c0)))))OR(INSTR(vt0.c0, vt0.c0))) FROM vt0 WHERE (0xffffffff8d751f7c); -- 0ms;
SELECT ALL COUNT(CAST(vt0.c0 AS TEXT)) OVER ( GROUPS BETWEEN CAST(vt0.c0 COLLATE RTRIM AS NUMERIC) FOLLOWING AND (NOT ('1684329523')) FOLLOWING) FROM vt0;SELECT ALL (((CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT BETWEEN (1395195510) AND (vt0.c0)), (vt0.c0 IN ())))<((((vt0.c0) NOT NULL), ((vt0.c0)IS NOT(vt0.c0)), 0.7722021873587481))) FROM vt0; -- 0ms;
SELECT LIKELY(DISTINCT NULL) FROM vt0 LIMIT -238493667 OFFSET -1223361149; -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), CAST(vt0.c0 AS REAL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c0))<=((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (~ (vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL 0x6dc9581a, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (COALESCE(DISTINCT vt0.c0, vt0.c0) IN ()) FROM vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) DESC) FROM vt0 LIMIT 2009513464 OFFSET 1051342693; -- 0ms;
SELECT DISTINCT (- (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((((NULL) BETWEEN (0.3797289377066496) AND ('-343479199'))) NOT NULL)); -- 0ms;
SELECT ALL (CAST(vt0.c0 AS BLOB) IN (x'')) FROM vt0 LIMIT -844221363; -- 0ms;
SELECT DISTINCT (((vt0.c0 COLLATE NOCASE))==(((vt0.c0 IN ())))) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0) NOT NULL), vt0.c0 COLLATE RTRIM, COUNT(*)))==(((+ (vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0)), (0.23959573015597602 IN ())))) FROM vt0 WHERE ((- ((- (0.3541757264583676))))); -- 0ms;
SELECT ALL TOTAL((('1691705387') IS TRUE)) FROM vt0 WHERE (ABS(0.20774879830303128) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT TRIM(SUM(vt0.c0)), AVG((vt0.c0 IN ())) OVER (), CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN (((vt0.c0))<>((vt0.c0))) THEN x'' WHEN ((0xffffffffefbf5933)%(vt0.c0)) THEN json_array_length(vt0.c0) WHEN CAST(x'cdd5edad' AS BLOB) THEN TOTAL(vt0.c0) END FROM vt0 WHERE ((((('1886244283') NOT BETWEEN (0.6111168132950294) AND (NULL)))+(((x'')+(-578871270))))); -- 0ms;
SELECT ALL NTILE((- (vt0.c0 COLLATE BINARY))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), GROUP_CONCAT(CAST(vt0.c0 AS INTEGER)) OVER (), NTILE(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '-1306294649' THEN '0.6193766476742486' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) OVER (), (((('eK䊏>+') BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE), ((MIN(vt0.c0))IS NOT(((vt0.c0) NOTNULL))) FROM vt0 WHERE (CAST(TYPEOF('-1039159359') AS NUMERIC)) LIMIT -858178304 OFFSET 1732505880;SELECT ALL vt0.c0 COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT (((x'9062', vt0.c0, NULL))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE FROM vt0 LIMIT 1988521484; -- 0ms;
SELECT DISTINCT NTH_VALUE((((((vt0.c0))<((vt0.c0)))) IS FALSE), vt0.c0 COLLATE BINARY) OVER () FROM vt0 WHERE ((((((((((('')OR(NULL)))OR(0.8388139575776281)))OR(x'e487')))AND(NULL))) NOT NULL)); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 WHERE (((((((((((-282119378)AND(-801352430)))OR(0.5161305617229837)))OR(-1091151380)))AND(x'')))AND(((0x2339f0dc)>>(0.5901696958343537))))); -- 0ms;
SELECT ALL 0.4317475124470992 FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0)GLOB(vt0.c0)))) FROM vt0 WHERE (CAST(((((x'')OR(-3.84581007E8)))OR(-1.525603964E9)) AS NUMERIC)); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 GROUP BY (((+ (vt0.c0))) NOTNULL); -- 0ms;
SELECT DISTINCT 0X10e91de6 FROM vt0; -- 0ms;
SELECT DISTINCT AVG(CAST(vt0.c0 AS BLOB)) FROM vt0 WHERE ((((((x'' IN ()))OR(x'')))AND(('-1079030877' IN (0xfffffffff6fdb201))))); -- 0ms;
SELECT FIRST_VALUE(((((((((((vt0.c0) NOTNULL))AND(x'')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.4493043060058157 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)<(vt0.c0)))))OR(((vt0.c0)-(NULL))))) OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW) FROM vt0 WHERE ((((((((((('-1943674521')AND(6.82647401E8)))OR(NULL)))AND(-15304411)))AND(NULL)))IS('-1296600629' COLLATE NOCASE))); -- 0ms;
SELECT ALL ((SUBSTR(vt0.c0, vt0.c0)) NOTNULL), vt0.c0, LAG(vt0.c0, ABS(((vt0.c0)<=(vt0.c0))), CAST((vt0.c0 IN ()) AS TEXT)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT STRFTIME((('1573400633') ISNULL), (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT NULL), 0.6591959572106478, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), json_array(vt0.c0, vt0.c0)) FROM vt0 WHERE (((HEX('-885152036'))LIKE(CAST(x'' AS INTEGER)))) GROUP BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) HAVING (((MIN(vt0.c0), (vt0.c0 IN (vt0.c0)), (((vt0.c0))<=((vt0.c0)))))==((AVG(vt0.c0), (((vt0.c0, -534407578, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '42093230', vt0.c0))), vt0.c0 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CASE WHEN AVG(vt0.c0) THEN vt0.c0 ELSE ('1937380574' IN ()) END, (((- (0.09869211307241399)))*(((vt0.c0) IS FALSE))), vt0.c0 FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(UNLIKELY(vt0.c0)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((CASE vt0.c0  WHEN 0.8465681286220859 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0Xdd9f219 THEN vt0.c0 END, COUNT(vt0.c0), AVG(vt0.c0)))>=(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)||(vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)*('\rN')) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT AVG(CAST(vt0.c0 AS TEXT)) FROM vt0 WHERE (((CASE WHEN '''s' THEN x'af3a' END)=((('')AND(NULL))))) ORDER BY (+ (vt0.c0 COLLATE BINARY))  NULLS LAST; -- 0ms;
SELECT (((+ (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (TYPEOF(vt0.c0))), (((~ (x'7816')))>(COALESCE(vt0.c0, vt0.c0))), DENSE_RANK() OVER () FROM vt0; -- 1ms;
SELECT ((vt0.c0)<((x'495a' IN ()))) FROM vt0 WHERE (((((((NULL)OR('6^')))AND(0.926686692765114)))&(0.47582178525537544))); -- 0ms;
SELECT ((((((((vt0.c0)OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(TOTAL(vt0.c0))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(vt0.c0)), COUNT(((vt0.c0) NOT NULL)), ((('VEKt䃯	7BB' IN (vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT 0.03187520816864953 FROM vt0 WHERE (((((NOT (x'')), CAST(NULL AS INTEGER), (((('s6HUy>z(K')OR(0.8043643425141841)))OR(NULL))))<=((((('376816095')) NOT BETWEEN ((x'')) AND (('422217747'))), CAST(0.22638360262587642 AS TEXT), '1e500' COLLATE BINARY)))); -- 0ms;
SELECT CAST(vt0.c0 AS BLOB) FROM vt0 WHERE (((((NULL) NOT BETWEEN ('') AND ('530399256'))) BETWEEN (((0Xffffffffae342635)*(0.5214412221319477))) AND (-1544644818))); -- 0ms;
SELECT ALL (vt0.c0 IN ()) FROM vt0 WHERE (((((6.77125243E8)==('')))>=((('')==(0.6405029836975853))))); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 ORDER BY vt0.c0; -- 0ms;
SELECT json_remove(((vt0.c0) IS TRUE), ((vt0.c0)!=(vt0.c0)), ((vt0.c0)|(vt0.c0)), vt0.c0 COLLATE BINARY) FROM vt0 WHERE (CAST(NULL AS TEXT) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (~ (vt0.c0)) FROM vt0 WHERE ((- (TYPEOF(NULL)))) ORDER BY ((vt0.c0 IN (vt0.c0, vt0.c0)) IN ()) DESC, ((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0) AND (json_insert('0.6340451281697025', vt0.c0, vt0.c0))); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT AVG((((vt0.c0, vt0.c0, vt0.c0))<(('-1448681697', vt0.c0, vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)>=(((-2135234680) BETWEEN (vt0.c0) AND (vt0.c0)))), ((vt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(DISTINCT vt0.c0))), vt0.c0, CASE json_array_length(vt0.c0)  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (vt0.c0 COLLATE BINARY IN ()) FROM vt0;SELECT DISTINCT AVG((- (vt0.c0))) OVER () FROM vt0 WHERE (0xffffffffaca26a99) ORDER BY ((vt0.c0) ISNULL) DESC; -- 1ms;
SELECT DISTINCT '-974609193' FROM vt0 WHERE ((((((1897013390, x'', '-1759583106'))!=((0.5271003689441637, x'35ce', 0Xfffffffff186d85a))))GLOB(CASE WHEN -1472068555 THEN x'' WHEN x'9fc9' THEN x'ab33ad69' WHEN x'' THEN 0.5873980325268412 END))); -- 0ms;
SELECT DISTINCT 420232489 COLLATE NOCASE, CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) END, ((INSTR(vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (UPPER(vt0.c0))) FROM vt0 WHERE (((-1.525603964E9 COLLATE BINARY) BETWEEN (((0.6302213451558002)!=(NULL))) AND (((0.8994973605705552)=(NULL))))); -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY FROM vt0 WHERE (CAST(((NULL) ISNULL) AS REAL)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT NTILE(((UNLIKELY(vt0.c0))GLOB(vt0.c0))) OVER ( GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW) FROM vt0 WHERE (((CAST(x'' AS BLOB))<((('0.08980613485234024')OR(0xffffffff817f5f4d))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((MAX(vt0.c0)))), (+ ((- (vt0.c0)))), ((load_extension(x'')) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (rtreenode(vt0.c0, vt0.c0))) FROM vt0;SELECT DISTINCT ROW_NUMBER() OVER (), x'820f', (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL), ((vt0.c0) IS FALSE), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0)+(vt0.c0)), 'd', CAST(vt0.c0 AS INTEGER)))) FROM vt0 WHERE ((+ (((x'')-(0.4382595968476327))))) ORDER BY CASE WHEN NULL THEN ((((vt0.c0)OR(vt0.c0)))AND(x'')) WHEN vt0.c0 COLLATE BINARY THEN ((x'0fb5')<(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN UPPER(x'') END  NULLS FIRST; -- 0ms;
SELECT x'c241', (((((vt0.c0))>=((vt0.c0)))) NOT NULL), RTRIM(vt0.c0) COLLATE RTRIM, CASE WHEN (('')/(vt0.c0)) THEN (- (vt0.c0)) END, COUNT((NOT ('-1619468863')) COLLATE NOCASE) OVER () FROM vt0 WHERE ((+ (('U9.	%' IN ())))); -- 1ms;
SELECT ALL 0.22373290596556283 FROM vt0 WHERE (((((('17777912')) BETWEEN (('633784999')) AND ((NULL))))||(((-5403018.0)AND(-4.36975193E8))))) GROUP BY '-954834069', (((',yC')) NOT BETWEEN ((((3.40673863E8)<(vt0.c0)))) AND ((((vt0.c0)+(vt0.c0))))), (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))); -- 0ms;
SELECT DISTINCT ((vt0.c0)<(vt0.c0)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL TRIM(DISTINCT ((vt0.c0)<=(vt0.c0)), ((vt0.c0) ISNULL)), GROUP_CONCAT(CAST(vt0.c0 AS TEXT)) OVER (), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c0)<>(vt0.c0)) AS NUMERIC) FROM vt0 WHERE ((((0.17705542411135267 IN (0.011618059690294391, NULL))) NOT BETWEEN ((('1948112233')IS NOT(0.2190058956301284))) AND ((((0.39045170622355896)) NOT BETWEEN ((x'')) AND (('8')))))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0)))IS((+ (vt0.c0)))) FROM vt0 WHERE ('t࢏!'); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((((~ (NULL)))GLOB(0.011618059690294391))); -- 0ms;
SELECT DISTINCT (((vt0.c0))<>((CAST(vt0.c0 AS INTEGER)))), SUM(x'97a1'), CASE x''  WHEN json_array_length(vt0.c0, vt0.c0) THEN ((vt0.c0)>=(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (+ (vt0.c0)) WHEN CASE vt0.c0  WHEN '#%' THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END FROM vt0 LIMIT -1751076889;SELECT DISTINCT (((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((((~ ('-955819041')))<<(((('᱑')) BETWEEN (('247808429')) AND ((0Xffffffffbfaf4ba3)))))); -- 0ms;
SELECT DISTINCT (- (CAST(NULL AS BLOB))) FROM vt0 WHERE ((NULL IN ()) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE COUNT(*)  WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN (vt0.c0)) ELSE ((vt0.c0)AND(vt0.c0)) END FROM vt0 WHERE (CASE WHEN ((1013785621)>>(NULL)) THEN (0.38869201807490894 IN ()) END); -- 1ms;
SELECT DISTINCT ((((vt0.c0)IS NOT(vt0.c0)))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), x'' COLLATE BINARY, ((((vt0.c0)==(vt0.c0)))!=(CAST(vt0.c0 AS REAL))) FROM vt0 ORDER BY ((((vt0.c0)OR(0.6092600768861306)))OR((('jG')LIKE(vt0.c0)))) DESC  NULLS LAST, ((CAST(vt0.c0 AS BLOB))>(vt0.c0)) ASC LIMIT 735946885 OFFSET -525679357; -- 0ms;
SELECT DISTINCT (x'7696' IN ()) FROM vt0; -- 0ms;
SELECT DATETIME(vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), 0.10545985467370245) FROM vt0; -- 0ms;
SELECT NULL FROM vt0; -- 0ms;
SELECT ((((((((((x'')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))LIKE(((vt0.c0)/(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)GLOB(vt0.c0)) IN ()) FROM vt0 WHERE (CASE ((x'') IS FALSE)  WHEN ((x'')=('-403079722')) THEN DATETIME(0xffffffffdf9cdf7a, '', 2.031596328E9) END) ORDER BY (+ (vt0.c0)) COLLATE NOCASE; -- 0ms;
SELECT CAST((((vt0.c0))<((vt0.c0))) AS BLOB) FROM vt0 WHERE (UNLIKELY((NULL IN (0.08012323263398047)))); -- 0ms;
SELECT ALL ((((vt0.c0) ISNULL)) BETWEEN (vt0.c0) AND (load_extension(vt0.c0))) FROM vt0;SELECT DISTINCT (((NULL)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN (vt0.c0))))), vt0.c0, ((((vt0.c0)>(vt0.c0)))LIKE((+ (vt0.c0)))) FROM vt0 WHERE ((NOT (x'09e0' COLLATE BINARY))); -- 0ms;
SELECT CAST(CAST(vt0.c0 AS INTEGER) AS REAL) FROM vt0; -- 0ms;
SELECT CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 END FROM vt0 WHERE (('1937380574' IN ())); -- 0ms;
SELECT CAST(((vt0.c0) ISNULL) AS REAL), ((vt0.c0) IS FALSE) COLLATE BINARY, (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE (NULLIF('2074966788', x'') COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT ALL ((((vt0.c0) ISNULL))/(((vt0.c0)>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((vt0.c0))), (~ (LIKELY(vt0.c0))), CASE AVG(vt0.c0)  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN AVG(vt0.c0) WHEN x'' THEN (((vt0.c0))<=((vt0.c0))) WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE CAST(vt0.c0 AS TEXT) END, CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)IS NOT(x'')) THEN SUM(vt0.c0) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, NTH_VALUE((((CAST(vt0.c0 AS REAL)))<((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))), (((((vt0.c0 IN (vt0.c0)))AND(((vt0.c0) NOT NULL))))AND(LTRIM(x'')))) OVER ( ROWS  CURRENT ROW), (((LIKELY(DISTINCT vt0.c0)))==((vt0.c0))), (~ (((vt0.c0) IS FALSE))) FROM vt0 WHERE ((((('1512709709') IS TRUE)) NOTNULL));SELECT DISTINCT NTH_VALUE(vt0.c0, NULL) OVER () FROM vt0;SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=(((vt0.c0 IN ())))), ((vt0.c0 COLLATE NOCASE)-(CAST(vt0.c0 AS BLOB))), STRFTIME(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)-(vt0.c0)), LIKE(vt0.c0, x''), (vt0.c0 IN ()), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.7317533822409819)))), CASE WHEN (((vt0.c0))!=(('6'))) THEN x'' END, (+ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (CAST(((-1999201752) IS TRUE) AS TEXT)); -- 0ms;
SELECT (+ (((vt0.c0)%(vt0.c0)))), ((x'828e' COLLATE RTRIM) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (('F' COLLATE NOCASE)IS NOT(CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE (CASE (('-1365391987')>>(0.14370718684610595))  WHEN ((((1292324596)AND(x'd65f')))OR(x'')) THEN '' COLLATE RTRIM WHEN (('qჸKuཇ')%(NULL)) THEN 0.39549192116244614 WHEN '' COLLATE BINARY THEN (((((((('')OR(x'b9f9edc9')))AND(NULL)))AND(x'')))AND(0.625916242834011)) END); -- 0ms;
SELECT DISTINCT ((((('')OR(vt0.c0)))AND(vt0.c0)) IN ()), SUM(NULL), ((vt0.c0 IN ()) IN ()) FROM vt0 WHERE (((x'') BETWEEN ((0.8391098723735982 IN ())) AND (((NULL)&(0xffffffff88c1f1e1))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) IN ()), NULL, 0.6044336516923758 FROM vt0; -- 1ms;
SELECT DISTINCT '' FROM vt0 WHERE (((NULL COLLATE NOCASE)-(((x'')*(NULL))))); -- 0ms;
SELECT ALL ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (HEX(vt0.c0)) AND (((vt0.c0)||(vt0.c0)))) FROM vt0 WHERE (((CASE NULL  WHEN '1676604096' THEN x'' END) ISNULL)) LIMIT 1602984267 OFFSET 485947021; -- 0ms;
SELECT CASE ((vt0.c0) NOTNULL)  WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END, ((((vt0.c0 IN ())))<=((UPPER(DISTINCT vt0.c0)))), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.819153974196795))AND(((vt0.c0)OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('荇y')))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), (((vt0.c0)||(vt0.c0)) IN (((vt0.c0)>(vt0.c0)), (vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE, TOTAL(CAST(vt0.c0 AS NUMERIC)), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT -1857868955, NTH_VALUE(NULL COLLATE NOCASE, ((vt0.c0)/(vt0.c0)) COLLATE RTRIM) OVER (), (((vt0.c0, '6.036640524389458E-4', vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)), (vt0.c0 IN (NULL)), vt0.c0)) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0), CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) FROM vt0 WHERE (((((CAST(0.8582643498546458 AS BLOB))AND(((((0.06842589275363942)OR(NULL)))AND('-62322884')))))OR((('\n{vs_')IS(0.6132754442754305)))));SELECT ALL CAST(vt0.c0 AS REAL) FROM vt0 WHERE ((((-1.946543559E9 IN ())) BETWEEN (('1896803327' IN (0xffffffffa9c59aeb))) AND (NULL))); -- 0ms;
SELECT ALL ((((vt0.c0) IS TRUE))<(CAST(vt0.c0 AS BLOB))), (NOT ((vt0.c0 IN ()))), ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE (CASE (('-168983519')&('-1297217891'))  WHEN (+ (x'')) THEN (NOT (x'6709')) END); -- 0ms;
SELECT DISTINCT RANK() OVER (), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)AND(vt0.c0)), ((vt0.c0) IS FALSE))), NULL FROM vt0; -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ (((x'3259')&(x'5d34'))))); -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) IS TRUE), COUNT(((vt0.c0) NOT BETWEEN (0x623e801e) AND (vt0.c0))) OVER (), SQLITE_COMPILEOPTION_GET((vt0.c0 IN ())) FROM vt0 ORDER BY (NOT ((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((vt0.c0))==((vt0.c0))), '1056933597', x'c662'))>((((vt0.c0)%(vt0.c0)), MAX(vt0.c0), x'1ce9'))) FROM vt0; -- 0ms;
SELECT DISTINCT (((x'')&(vt0.c0)) IN ()), CAST(CAST(vt0.c0 AS BLOB) AS TEXT), ((vt0.c0)>=(CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (((277647222) NOTNULL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c0))OR(((vt0.c0) NOTNULL))) FROM vt0 WHERE (CAST(NULL AS REAL) COLLATE NOCASE) LIMIT 1880258481; -- 0ms;
SELECT (((((+ (vt0.c0)))OR(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), COUNT(*) OVER (), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT '1691705387' FROM vt0 WHERE (COALESCE(DISTINCT '' COLLATE BINARY, (('	F R')==(1.32769024E9)))) GROUP BY (~ (vt0.c0)) HAVING (((- (vt0.c0)))IS NOT(((vt0.c0) IS TRUE))); -- 0ms;
SELECT ALL ((((vt0.c0)GLOB(vt0.c0)))-(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), NULL COLLATE BINARY, 0x144e4547 FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((0.7182238929107819))>((x'cf07')))); -- 0ms;
SELECT DISTINCT COUNT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)>(0.2226223495789066))) IS FALSE), SUM(((0.7939768942207149)IS NOT(vt0.c0))) OVER (), CUME_DIST() OVER ( GROUPS  CURRENT ROW) FROM vt0; -- 1ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY FROM vt0 WHERE (((((((0.7590313183318059) NOTNULL))OR((((NULL, '', '-2028637075')) BETWEEN ((0.44989826589983484, 0.575864903426721, -9.55819041E8)) AND (('-1293904553', 0xffffffffc4f816e2, x'543a'))))))AND(COALESCE(x'', 'F>rso', 'N{G,', 0.8148786444996534, 0.955449055960713, x'')))); -- 0ms;
SELECT ALL CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS INTEGER) FROM vt0 LIMIT -1441891393; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL) FROM vt0 WHERE (IFNULL((('1645404922') NOT BETWEEN (-3.84581007E8) AND ('253329860')), x'' COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((COUNT(vt0.c0))) AND ((vt0.c0 COLLATE NOCASE))) FROM vt0 WHERE (CASE WHEN CAST(NULL AS BLOB) THEN (('-1079030877') NOT BETWEEN (x'cd09') AND (NULL)) END) GROUP BY (NOT (CAST('-2144447069' AS INTEGER))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN (vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (((((x'')OR('-2090249009'))) ISNULL)); -- 0ms;
SELECT GROUP_CONCAT((NOT (vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((LIKELY(vt0.c0)) NOT NULL), (vt0.c0 COLLATE RTRIM IN ()), CHAR(vt0.c0 COLLATE BINARY) FROM vt0 WHERE (CASE ((NULL) BETWEEN ('-2116529146') AND (NULL))  WHEN ((0.45147434355512317) NOT BETWEEN (0.7445833774711107) AND (0.9734996768203411)) THEN ((-2137372335) NOT NULL) ELSE ((('-168744176'))=((0xffffffff82b01eff))) END); -- 0ms;
SELECT CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE vt0.c0 COLLATE NOCASE END FROM vt0; -- 0ms;
SELECT (((vt0.c0))<>((vt0.c0))) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT('pI') OVER ( ORDER BY (~ ((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST), CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT), ((((vt0.c0)<<(vt0.c0))) NOT NULL), COUNT(*) FILTER(WHERE NULLIF(DISTINCT ((vt0.c0) ISNULL), ((vt0.c0) IS FALSE))) OVER (), (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((((((((((x'')<<('S9')))AND('1089813866')))OR(NULL COLLATE RTRIM)))AND((((((((('-1164116788')AND(-1.306294649E9)))OR(x'')))OR(NULL)))OR(0x64d5602b)))))AND((0.715171951890405 IN ())))); -- 0ms;
SELECT DISTINCT CAST(((x'4a06')GLOB(vt0.c0)) AS NUMERIC) FROM vt0 GROUP BY CAST(((vt0.c0)+(vt0.c0)) AS TEXT); -- 1ms;
SELECT DISTINCT CAST('635544943' AS REAL) COLLATE NOCASE, ((CAST(vt0.c0 AS INTEGER))LIKE(((((vt0.c0)AND(vt0.c0)))OR('-52363895')))), (load_extension(vt0.c0, vt0.c0) IN ()) FROM vt0 WHERE (((((',>')GLOB(NULL)))AND(CASE WHEN x'83f516a1' THEN x'6b1b' WHEN 0.856658246226187 THEN '1127128196' WHEN x'' THEN NULL WHEN 0.09909313511458173 THEN 0.24604823582147106 WHEN 0.19212543347173305 THEN '-2039285778' END))); -- 0ms;
SELECT DISTINCT NULL FROM vt0 LIMIT 1515642657; -- 0ms;
SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT ALL (0.46915775240408997 IN ()) FROM vt0 WHERE ((((('62591067') IS FALSE))IS NOT(UPPER(DISTINCT '-5403018')))); -- 0ms;
SELECT LOWER(((vt0.c0)=(vt0.c0))), ((((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE), ROW_NUMBER() OVER () FROM vt0 WHERE (((((((NULL) BETWEEN (NULL) AND (0X7858527e)))AND(((-2057717896)<>(NULL)))))AND(((x'')AND(1741688734))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL) FROM vt0; -- 0ms;
SELECT ALL MAX((vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT ALL x'f1fd' COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT COUNT((vt0.c0 IN ())) OVER () FROM vt0; -- 0ms;
SELECT ALL vt0.c0, ((((vt0.c0 IN ())))>=((UPPER(vt0.c0)))), vt0.c0, ((((MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))AND(COUNT(vt0.c0))))OR(((vt0.c0)*(vt0.c0)))), COUNT(*) OVER () FROM vt0 WHERE (CASE WHEN '82{|Q㄂' THEN (('9223372036854775807') NOT BETWEEN (0.26114262505003505) AND (x'')) ELSE (('(l')GLOB(NULL)) END) GROUP BY ((vt0.c0) BETWEEN ('1') AND (CAST(vt0.c0 AS BLOB))) LIMIT 433129956 OFFSET 246266364; -- 0ms;
SELECT AVG(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1296600629' WHEN '-774280637' THEN '**h OxL' WHEN vt0.c0 THEN vt0.c0 END) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((+ ('')) IN ())) GROUP BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((NOT (vt0.c0)), CAST(vt0.c0 AS BLOB), (- (vt0.c0)))) AND (('0.4360647045595081', vt0.c0, (vt0.c0 IN ())))) HAVING ((((SUM(vt0.c0))OR('j\t[繈}')))OR(((((vt0.c0)OR(vt0.c0)))AND(2.046299975E9)))); -- 0ms;
SELECT DISTINCT ('-44022059' IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((vt0.c0)|(vt0.c0)) COLLATE NOCASE, ((((((vt0.c0)IS NOT(vt0.c0)))AND(((vt0.c0)=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 GROUP BY ((((vt0.c0) NOT NULL)) BETWEEN (NULLIF(DISTINCT vt0.c0, vt0.c0)) AND (((vt0.c0) IS TRUE))) HAVING (((- (vt0.c0))) NOTNULL); -- 0ms;
SELECT ALL CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((vt0.c0))<=((vt0.c0))) END, ((vt0.c0)AND((vt0.c0 IN ()))), (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))))==(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (CASE (((('340673863')AND(NULL)))AND(NULL))  WHEN (x'' IN ()) THEN ((NULL) NOT BETWEEN ('-1192771088') AND (1.149430951E9)) WHEN NULL THEN TRIM('384305081') WHEN '-645881354' COLLATE RTRIM THEN TYPEOF(-2.33093642E8) ELSE (((('')OR(5.23116496E8)))OR(1.814891537E9)) END); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL)) NOT BETWEEN (vt0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)), ((CAST(vt0.c0 AS REAL)) IS FALSE), ((LIKELIHOOD('', 0.3408302436071171)) NOT BETWEEN (vt0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (((((NULL COLLATE RTRIM)AND((0.11025482838397571 IN ()))))AND((((x''))!=((-1.619468863E9)))))); -- 0ms;
SELECT ALL (HEX(vt0.c0) IN ()) FROM vt0 LIMIT 1224290753; -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((0xffffffffde730c51)) AND ((((vt0.c0)%(vt0.c0))))) FROM vt0 WHERE ((((1.084958527E9 IN ())) NOTNULL)); -- 0ms;
SELECT ALL ((vt0.c0) BETWEEN ((vt0.c0 IN ())) AND (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 GROUP BY ((((vt0.c0)>=(vt0.c0))) IS FALSE); -- 0ms;
SELECT ALL COUNT(x'5df5') FROM vt0 WHERE ((((~ (x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE (0Xffffffffa13e4b34); -- 0ms;
SELECT DISTINCT 0.49279140234105245, SUM((vt0.c0 IN (vt0.c0))) OVER ( ORDER BY HEX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), ((CAST('6' AS NUMERIC))<=(((((x'')AND(vt0.c0)))AND(vt0.c0)))), CASE NULL  WHEN ((vt0.c0)>(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END, (((+ (vt0.c0)))<=(CAST(vt0.c0 AS INTEGER))) FROM vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c0)&(vt0.c0)))>(((vt0.c0)/(vt0.c0)))) FROM vt0 WHERE ((-1.486055757E9 IN ())); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))==(AVG(vt0.c0))), (- (COALESCE(vt0.c0, vt0.c0))), ((((NULL)OR(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT ALL (NOT (vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (CASE ((0X1e37758)LIKE(x''))  WHEN ((x'')OR('1150245171')) THEN IFNULL(0.35810708022500726, 'o2') END) GROUP BY vt0.c0 HAVING (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)OR(vt0.c0)) FROM vt0 WHERE (TRIM(DISTINCT ((0.4374792298087663)<<('1447351702')))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN ((1334208459) NOT BETWEEN (x'') AND (x'3ce1')) THEN (('*-eaA舨P') IS TRUE) ELSE x'' END); -- 0ms;
SELECT ((COUNT(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)/(vt0.c0)))), ((((vt0.c0)IS(vt0.c0)))<>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0)>(vt0.c0)) IN ((NOT (vt0.c0)), ((vt0.c0) ISNULL))) FROM vt0 WHERE ((((x'', NULL COLLATE BINARY, ((((x'')AND(0x43a7761b)))AND(NULL))))>=((x'43ae', (- ('')), (((-949547232))>(('py棘1k\n'))))))) ORDER BY (((- (vt0.c0))) IS FALSE); -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL ((COUNT(*)) BETWEEN (COUNT(vt0.c0)) AND (AVG(vt0.c0))) FROM vt0 LIMIT 2097274850; -- 0ms;
SELECT DISTINCT DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL (((((((((('-1115223921')AND(vt0.c0)))AND(vt0.c0)))AND(x'')))AND(vt0.c0))) BETWEEN (COUNT(vt0.c0)) AND ((vt0.c0 IN ()))), CASE WHEN CASE 0.8739136759255967  WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) ELSE TOTAL(vt0.c0) END, vt0.c0, vt0.c0, SUM((vt0.c0 IN ())) FROM vt0 WHERE ((((((NULL)) BETWEEN ((x'')) AND ((0.4027353621304167)))) NOT BETWEEN ((NULL IN ())) AND (''))) LIMIT -859272676 OFFSET -1519179011; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) IS TRUE) FROM vt0 GROUP BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT), vt0.c0, CAST(load_extension(vt0.c0) AS REAL), vt0.c0, (NOT (HEX(DISTINCT vt0.c0))) HAVING vt0.c0; -- 1ms;
SELECT SUM(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0; -- 0ms;
SELECT ALL (((('-1788128524')>>(x'')))*(AVG(vt0.c0))), vt0.c0, ((((vt0.c0)*(vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), vt0.c0, (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0; -- 0ms;
SELECT vt0.c0, (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN NULL END)), SUM(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) OVER () FROM vt0 WHERE (CAST(MIN(x'', NULL) AS INTEGER)); -- 0ms;
SELECT ALL NULL FROM vt0 WHERE ((LIKELIHOOD(DISTINCT 0.02710697245705662, 0.40943916905833344) IN ((('o2') BETWEEN (0Xffffffffa9a6df1f) AND ('1220873005'))))); -- 0ms;
SELECT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))|(json(vt0.c0))) FROM vt0 GROUP BY LTRIM(((vt0.c0)<<(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), NULL, vt0.c0 HAVING ((6.33784999E8 COLLATE NOCASE)LIKE(((vt0.c0)<<(vt0.c0)))); -- 0ms;
SELECT CAST((NOT (vt0.c0)) AS NUMERIC), ((vt0.c0 COLLATE NOCASE)>>(1308584272)), ((DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT AVG(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 GROUP BY SQLITE_VERSION() COLLATE BINARY, (((vt0.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))), CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0))==((vt0.c0))) THEN ((vt0.c0) IS FALSE) END; -- 0ms;
SELECT ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)!=(vt0.c0)))) FROM vt0 WHERE (NULL) ORDER BY CAST(COALESCE(DISTINCT vt0.c0, vt0.c0) AS BLOB) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT SUM((- (vt0.c0))) FROM vt0 WHERE (TRIM(DISTINCT x'' COLLATE NOCASE)) LIMIT -2000555551 OFFSET -922467697; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) FROM vt0 LIMIT -1759001321; -- 0ms;
SELECT DISTINCT CHANGES() FROM vt0; -- 0ms;
SELECT ((((((((UPPER(DISTINCT vt0.c0))OR((('1691705387') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)GLOB(vt0.c0)))))AND((vt0.c0 IN ()))))AND(LIKELY(DISTINCT vt0.c0))), NULLIF(DISTINCT ((vt0.c0) NOTNULL), COUNT(vt0.c0)), ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (CASE CASE WHEN NULL THEN '⇳ox' ELSE NULL END  WHEN (1502974037 IN ()) THEN (~ (NULL)) END) GROUP BY CASE NULL  WHEN ((vt0.c0)|('')) THEN ((vt0.c0) IS FALSE) END; -- 1ms;
SELECT GROUP_CONCAT(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) COLLATE BINARY FROM vt0; -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((COALESCE(vt0.c0, vt0.c0, vt0.c0, NULL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0))>((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))) AND (((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, x'f3a44756'))), (+ (vt0.c0)), ((vt0.c0) NOT NULL), ']RJ', CAST(vt0.c0 AS NUMERIC)))) FROM vt0; -- 0ms;
SELECT ALL (NOT ((('z篋V,') NOT NULL))), (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((vt0.c0 IN (vt0.c0))))), AVG(COUNT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (((('8ῐ䤪o7Yp%6')) NOT BETWEEN ((((0.7381614333448174) ISNULL))) AND ((CAST(NULL AS TEXT))))) LIMIT -13300194;SELECT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE, ((SUBSTR(vt0.c0, vt0.c0))-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CASE 0.735690834400886 COLLATE BINARY  WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE ((vt0.c0)/(vt0.c0)) END FROM vt0 WHERE (((COALESCE(DISTINCT NULL, x'3108')) IS FALSE)); -- 0ms;
SELECT ALL 0.23813318708965947 FROM vt0 WHERE (((((((0.25436295024641065)OR('-1673268689')))AND(NULL))) BETWEEN (LIKELIHOOD(DISTINCT 0.8765728438266193, 0.766918841004621)) AND (NULL))); -- 0ms;
SELECT '-2098210319' FROM vt0 WHERE ((((NULL, x'', -8.59138421E8)) NOT BETWEEN ((((x'9b1e') IS FALSE), CAST('' AS INTEGER), ((NULL) BETWEEN ('339297502') AND (0.7300129652587931)))) AND (((('-1999201752')IS(0.8497411549381816)), CAST(NULL AS INTEGER), 0.8723961129919796)))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN ()), (((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE BINARY, LAST_INSERT_ROWID()))>=((vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE, IFNULL(vt0.c0, vt0.c0)))), CASE ((vt0.c0)-(0.43148342815911633))  WHEN MIN(vt0.c0) THEN vt0.c0 ELSE DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) END FROM vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (0.1114192035129965); -- 0ms;
SELECT DISTINCT UPPER(((((((((vt0.c0)AND(vt0.c0)))AND('n诊F]')))AND(vt0.c0)))AND(vt0.c0))) FROM vt0 ORDER BY (((x'f7a0' IN ()))<((vt0.c0 IN ())))  NULLS LAST; -- 1ms;
SELECT 0.748151512762486 FROM vt0; -- 0ms;
SELECT CAST(AVG(vt0.c0) AS INTEGER) FROM vt0 GROUP BY TYPEOF(DISTINCT TRIM(vt0.c0)) HAVING (- ((+ (vt0.c0)))); -- 0ms;
SELECT ALL (vt0.c0 IN (((vt0.c0)>=(vt0.c0)))) FROM vt0 WHERE (((((NULL IN ())))<>((CAST(0X40f53d6a AS TEXT))))); -- 0ms;
SELECT ALL LAST_VALUE(((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))==(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) OVER () FROM vt0 WHERE (((((((x'')>('ʴI')))OR(CASE -955819041  WHEN NULL THEN x'd9b6' WHEN x'' THEN '873612548' WHEN x'' THEN NULL WHEN x'9dbd' THEN '2020870398' WHEN 0.6664194111364924 THEN 'V{' END)))OR(CASE WHEN NULL THEN 1.7976931348623157E308 ELSE x'' END))); -- 0ms;
SELECT ((CAST(vt0.c0 AS TEXT)) NOTNULL), (- (x'')), (((''))>=((MAX(vt0.c0, vt0.c0)))) FROM vt0 ORDER BY (((vt0.c0)&(vt0.c0)) IN ()) ASC, ((((((x'')OR(vt0.c0)))OR(((vt0.c0)<(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC, (((~ (vt0.c0))) IS TRUE) DESC; -- 0ms;
SELECT (((((((((((('\nb VSW{')OR((NOT (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(TRIM(DISTINCT vt0.c0, -2114021180))))AND(NULL)))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.18745503475374337))))OR(GROUP_CONCAT(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT LEAD(vt0.c0, CAST(TYPEOF(vt0.c0) AS REAL), (- (((((NULL)OR(vt0.c0)))AND(vt0.c0))))) OVER () FROM vt0 WHERE (-348995761) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (0.42973927433952286)))) DESC  NULLS LAST; -- 0ms;
SELECT ALL (+ (vt0.c0)) FROM vt0 WHERE (((((((((((0.2681050293225111)AND(-6.45881354E8)))AND(NULL)))AND(-1921704068)))OR('-15304411'))) NOT BETWEEN (((0.3915352797925181) NOT BETWEEN (NULL) AND ('-1549756929'))) AND (((((((((0xffffffffe875d4d7)OR(0.473212160702002)))AND('-13300194')))OR(0.5917782920613003)))OR(x''))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ('#⣈')) DESC  NULLS FIRST, vt0.c0 COLLATE RTRIM COLLATE BINARY, (+ ((((vt0.c0))>=((vt0.c0))))); -- 1ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((CAST('u)' AS NUMERIC)) NOTNULL)); -- 0ms;
SELECT DISTINCT SUM(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))>(TOTAL(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN ()) THEN ((vt0.c0)AND(vt0.c0)) ELSE (vt0.c0 IN ()) END, (((0.007948901719789014)>(vt0.c0)) IN ('58434025')), vt0.c0, ((+ (vt0.c0)) IN ()), SUM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT ((vt0.c0)IS(TOTAL(vt0.c0))), (((vt0.c0)) BETWEEN ((json_quote(vt0.c0))) AND ((((vt0.c0) NOT NULL)))), ((((vt0.c0)<(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))) FROM vt0;SELECT AVG(x'180c') OVER ( RANGE  CURRENT ROW) FROM vt0 GROUP BY CASE WHEN LIKELY(DISTINCT vt0.c0) THEN (((NULL, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) BETWEEN ('2046299975') AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN CAST(8.9286872E7 AS REAL) END, '', 1963549290, (((((NULL, vt0.c0, vt0.c0))!=(('/贈4	U*灐఑r', vt0.c0, vt0.c0)))) IS FALSE), (((vt0.c0)-(vt0.c0)) IN ()) HAVING QUOTE(NULL) LIMIT -672205994 OFFSET -1079030877;SELECT CAST(GROUP_CONCAT(vt0.c0) AS INTEGER) FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)IS('231934125')), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, -566461586))), CAST(vt0.c0 AS BLOB), CAST(0.054020438614237554 AS INTEGER))) AND ((CAST(vt0.c0 AS REAL), (vt0.c0 IN ()), vt0.c0, vt0.c0, vt0.c0)))  NULLS LAST, (+ ((vt0.c0 IN ()))) ASC; -- 0ms;
SELECT ALL COUNT((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)) COLLATE BINARY) OVER (), CAST(((vt0.c0)OR(vt0.c0)) AS INTEGER), (((~ (vt0.c0))) IS TRUE) FROM vt0 WHERE (((((((((((((CAST('' AS REAL))OR(CAST(0.6783886879300118 AS REAL))))OR(((((x'f542')AND(x'305e')))OR(NULL)))))OR(LOWER(NULL))))OR(CAST(NULL AS INTEGER))))OR(TIME('0.4846039521484026', '1521656390', x''))))OR(CAST('2142706295' AS BLOB)))) GROUP BY ((((vt0.c0)+(vt0.c0))) IS FALSE), x'', CASE vt0.c0  WHEN (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) THEN json_object(vt0.c0, vt0.c0) WHEN '' THEN ((vt0.c0)<(vt0.c0)) WHEN NULL THEN (~ (vt0.c0)) ELSE (((vt0.c0))>((vt0.c0))) END HAVING ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('!P')) COLLATE BINARY ORDER BY UNLIKELY(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ASC, ((((vt0.c0)||('pi'))) NOT BETWEEN (LIKELY(0.9514966768060084)) AND ((((vt0.c0))<>((vt0.c0))))) DESC  NULLS FIRST; -- 1ms;
SELECT vt0.c0, ((CAST(vt0.c0 AS NUMERIC))-(NULLIF(DISTINCT vt0.c0, -1146602167))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) FROM vt0 WHERE ((-1.5304411E7 IN ())); -- 0ms;
SELECT DISTINCT CASE (NOT (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) IS FALSE) WHEN 0.17751416577704293 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN x'700d' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) END FROM vt0; -- 0ms;
SELECT ((NULLIF('', vt0.c0))%(((((NULL)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (CASE WHEN ((x'0e0f') NOT NULL) THEN ((x'e238') IS FALSE) WHEN (NOT ('')) THEN (('0.4624811421075158') NOT BETWEEN ('523116496') AND (NULL)) WHEN ((x'')=('728265839')) THEN (('')LIKE(x'')) ELSE NULLIF('', x'4630') END); -- 0ms;
SELECT DISTINCT NTILE(((TIME(vt0.c0, vt0.c0, vt0.c0, 0.7937712909164634, vt0.c0))AND(vt0.c0))) OVER () FROM vt0 WHERE (LOWER((NULL IN ()))); -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0 IN ()) IN (((vt0.c0) NOTNULL))) FROM vt0; -- 0ms;
SELECT ALL x'' FROM vt0 WHERE (CAST('-645881354' AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT LIKELY(DISTINCT vt0.c0), PERCENT_RANK() OVER (), CUME_DIST() OVER () FROM vt0 WHERE (LTRIM(((((((((0.18181036187149402)OR(NULL)))AND(NULL)))OR(0x4118f95e)))OR('-172100852')), CAST(5.23116496E8 AS NUMERIC))); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (LOWER(-0.0)); -- 0ms;
SELECT ALL 0x7f8a16bc, (((vt0.c0, vt0.c0, x''))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((((((((vt0.c0)AND(NULL)))AND(x'')))OR('Q[>Y')))OR(vt0.c0)) ELSE vt0.c0 END FROM vt0; -- 0ms;
SELECT ALL LIKELIHOOD('', 0.2440208916031742) FROM vt0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0)))>=(((vt0.c0)+(vt0.c0)))), TRIM(DISTINCT vt0.c0 COLLATE BINARY), ((vt0.c0) NOTNULL) FROM vt0 WHERE ((((((NULL IN (5.51928785E8, 0X1299e016)))AND(((((((((NULL)OR(NULL)))AND('%0}{B尋ﴛ,)')))AND(0.5173293509691306)))AND(NULL)))))OR(((0.27316226113279407)IS(0.7702071420465049))))); -- 1ms;
SELECT ((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((vt0.c0 IN ())) AND (UPPER(DISTINCT vt0.c0))) FROM vt0 WHERE ((((- ('emhg.')))=(CASE WHEN x'5056' THEN x'' WHEN '892297161' THEN '' WHEN '' THEN NULL END))) GROUP BY ((vt0.c0)>(((vt0.c0)>>(vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)+(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((((('()')<<(NULL))) NOTNULL)); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((((((vt0.c0)AND('5	I')))OR(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(((vt0.c0) IS FALSE))) FROM vt0 WHERE (IFNULL(DISTINCT json_valid('髫+L~(SnZ'''), (((x'', NULL, x'169f')) BETWEEN ((NULL, 769166350, '-1367124530')) AND ((0.2738607465298508, x'', NULL))))); -- 0ms;
SELECT ALL -1312212828, MIN((vt0.c0 IN ())), TRIM(((vt0.c0)<(x'')), CAST(vt0.c0 AS TEXT)) FROM vt0 WHERE (CAST(CASE WHEN x'' THEN x'' ELSE NULL END AS REAL)); -- 0ms;
SELECT ALL LAST_VALUE(NULL) OVER ( ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST, ((((vt0.c0)|(vt0.c0))) NOT BETWEEN (IFNULL(DISTINCT 0.22168827339159125, vt0.c0)) AND (CAST(vt0.c0 AS REAL))) DESC, (((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))) NOT NULL)) FROM vt0 WHERE ((((x'2e83') ISNULL) IN ())); -- 0ms;
SELECT ALL '457191682' FROM vt0 WHERE (CAST('-635831266' COLLATE RTRIM AS BLOB)); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0 WHERE ((((NULL))<(('-2039285778'))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((((vt0.c0))>((vt0.c0))))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), MAX(((vt0.c0)!=(vt0.c0))), ((0.08980613485234024 COLLATE RTRIM)-(CAST(vt0.c0 AS TEXT))) FROM vt0; -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c0))!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(0.7864380371186415)) AS INTEGER)  NULLS LAST; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT ',㭪Lc*\', 0.41226301599318127) FROM vt0 LIMIT 1408637577 OFFSET -709811490; -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE BINARY)), SUM(NULL) OVER (), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((((~ ('2097274850')))<<(TYPEOF(NULL)))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((UPPER(DISTINCT vt0.c0), COALESCE(DISTINCT vt0.c0, 2.09727485E9), CAST(vt0.c0 AS NUMERIC)))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (+ (vt0.c0)), ((vt0.c0)!=(vt0.c0))))), CAST(0.3487546477652016 AS REAL) COLLATE BINARY, (((vt0.c0 IN ())) NOT NULL) FROM vt0 UNION ALL SELECT (((- (vt0.c0))) ISNULL), ((LTRIM(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS FALSE))), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0 WHERE (((((('2138550710'))>((0.03899637271183465)))) BETWEEN (CASE WHEN '╺Dj%' THEN -1.115223921E9 WHEN 0.6729831298166693 THEN 0.3164005544644106 WHEN 0.6228439045591566 THEN 0.9312252563680389 WHEN NULL THEN x'2721' WHEN x'' THEN 0xffffffffa3ee972e END) AND (TYPEOF(DISTINCT x'')))); -- 0ms;
SELECT DISTINCT '-436975193', CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS TEXT), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL), SUM(((x'') ISNULL)), ((x'')=(((vt0.c0)LIKE('-123293845')))) FROM vt0 ORDER BY -2.019243246E9; -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), vt0.c0 COLLATE BINARY, ((vt0.c0) IS FALSE))) AND (((~ (vt0.c0)), (NOT ('C㑍')), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))), (((vt0.c0) IS FALSE) IN ()), ((((((vt0.c0) IS FALSE))OR(HEX(DISTINCT vt0.c0))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (((('-181279139' IN ())) NOT BETWEEN (-2.039285778E9 COLLATE RTRIM) AND (CASE 0.07519261693544466  WHEN NULL THEN '-1079030877' ELSE x'd642' END))) LIMIT -374417020 OFFSET -310277669; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) IS TRUE) AS INTEGER) FROM vt0 WHERE ('F夳(>_?'); -- 1ms;
SELECT (vt0.c0 IN ()) COLLATE NOCASE, json_patch(0.8148786444996534, ((vt0.c0) NOTNULL)), CAST(CAST(vt0.c0 AS REAL) AS REAL) FROM vt0 WHERE (((((('-65958648')OR(NULL)))OR('-1740689150')) IN ())); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%('0.45046873286319')), ((((((vt0.c0)&(x'4356')))AND(x'')))AND(((vt0.c0)GLOB(vt0.c0)))), ((1449640552)IS NOT(LIKELY(vt0.c0))) FROM vt0 WHERE (((('-1759583106')<(x'')) IN ())); -- 0ms;
SELECT CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS NUMERIC) END FROM vt0; -- 0ms;
SELECT DISTINCT 0.4864367054929192 FROM vt0 WHERE ((~ (x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL CASE (('905076271') NOTNULL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END THEN ((-5.66461586E8)/(0.3143212746116142)) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN GROUP_CONCAT(vt0.c0) ELSE GROUP_CONCAT(vt0.c0) END FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)+(vt0.c0)) AS BLOB), 0.06320483316022951, MIN(((vt0.c0) ISNULL), CAST(vt0.c0 AS NUMERIC)) FROM vt0 WHERE ((- (((0.1076422653300233)-(x''))))); -- 0ms;
