-- Time: 2024/06/07 09:14:47
-- Database: database12
-- Database version: 3.40.0
-- seed value: 4251840212
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 22ms;
INSERT OR FAIL INTO vt0 VALUES (0x2b60e636); -- 3ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (x'9506'), (NULL), (x''), ('1783330181'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (1783330181), (x'127e'), (x''), (x''), (0Xffffffff943c8c6e); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (203138), (0.8752014116493498), (-1.807971218E9); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (x''), ('203138'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('998200293'); -- 0ms;
ANALYZE temp; -- 1ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('727770678'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
COMMIT TRANSACTION; -- 9ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('S水ra[9]*cG'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), ('367745875'), (0.4017363150844583); -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA main.incremental_vacuum; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 957096321); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 601188091); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34240'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 7ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 209866931); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18486'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
END; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('/e'), (NULL), (NULL), (x''), (NULL); -- 2ms;
INSERT OR IGNORE INTO vt0 VALUES (-359787947), (NULL), (NULL); -- 2ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('662432992'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('|'), (NULL), (x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 1ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('-98125214'); -- 3ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''), ('1166527731'), (CAST((- (x'')) AS NUMERIC)); -- 3ms;
INSERT INTO vt0(vt0) VALUES('merge=1,14');\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1444081395);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'f855'), ('XUl'), ('0.4017363150844583'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.7027262623305763); -- 1ms;
REINDEX BINARY; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 854851883);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (NULL), (x''); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
ANALYZE vt0; -- 0ms;
COMMIT; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 7ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35315'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
PRAGMA temp.optimize; -- 0ms;
REINDEX; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 TEXT , c1 REAL , c2 TEXT ); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA short_column_names; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''), (x'40af'), ('2067041498'); -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-786969115,9');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1124754856); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 36504355); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-98126249,7');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 2ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 380215075);\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 615844429); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c0)))GLOB(vt0.c0)) FROM vt0 WHERE ((NOT (((NULL) NOT NULL)))); -- 0ms;
SELECT LOWER(json(vt0.c0)), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE), ((((vt0.c0)!=(vt0.c0))) NOT NULL) FROM vt0 WHERE ((NOT (((('-1664866594'))<=((0.63978727684866)))))); -- 0ms;
SELECT ALL ((vt0.c0)||(vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB) FROM vt0 LIMIT 819762743 OFFSET 718355191; -- 1ms;
SELECT DISTINCT COUNT(*), vt0.c0, ((vt0.c0)&(-1.807971218E9)) FROM vt0 WHERE (((CASE 0.32102464296373434  WHEN 0.06785729100880056 THEN '380215075' END)OR((((1986244667, 0.28995851932952366, x''))<=((x'05f6', NULL, 0.28995851932952366)))))); -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c0))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL COLLATE BINARY) BETWEEN (UPPER(NULL)) AND ((NULL IN ())))) LIMIT -2134384100; -- 0ms;
SELECT ALL LTRIM(COUNT(*)) FROM vt0 LIMIT 1986244667; -- 0ms;
SELECT ((AVG(vt0.c0)) ISNULL) FROM vt0 WHERE (JULIANDAY(((1444081395)IS(x'')), '380215075', LIKELY(x'4ca6'))) GROUP BY ((vt0.c0)AND((vt0.c0 IN (vt0.c0)))), vt0.c0, ((((((((((vt0.c0)>(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0)LIKE(vt0.c0)))), ((((vt0.c0)AND(((vt0.c0) NOTNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (((~ (vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))AND(NULL)))) HAVING (((+ (vt0.c0)))*(NULL)); -- 0ms;
SELECT DISTINCT (((vt0.c0) ISNULL) IN ()) FROM vt0 WHERE (LIKELIHOOD(((-98126249)<<(NULL)), 0.6304662293474036)) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT (((((((((((((((((((vt0.c0)AND(vt0.c0)))AND(3.80215075E8)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))<>((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))), ((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN (vt0.c0)))), ((vt0.c0) BETWEEN (vt0.c0) AND ((((vt0.c0, 0.809215090936913, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE (CASE (NOT ('1430532416'))  WHEN (((3.67745875E8, NULL, 'Fmt/BaM'))<=((NULL, x'7069', 0X18e3b044))) THEN COALESCE('-366520631', NULL) WHEN ((((0.48092648673777505)AND(0.18227796976189325)))OR('-1664866594')) THEN (~ ('367745875')) WHEN (('')LIKE(x'')) THEN NULL WHEN '/e' COLLATE BINARY THEN CAST('♵Q#pBV' AS TEXT) WHEN (('662432992') BETWEEN ('kHe') AND (NULL)) THEN UPPER(x'') WHEN ((0.28995851932952366)IS NOT(NULL)) THEN '165366054' WHEN NULL THEN (((NULL))<((NULL))) END); -- 11ms;
SELECT DISTINCT CAST((('14') NOTNULL) AS NUMERIC) FROM vt0 GROUP BY ((vt0.c0 IN ()) IN ((- (vt0.c0)), load_extension(NULL), (NOT (vt0.c0))));SELECT (((vt0.c0)GLOB(vt0.c0)) IN ()) FROM vt0 WHERE ((((~ ('1c'))) NOT BETWEEN (CAST('yf' AS TEXT)) AND ((NOT (0.6854416489119736))))) UNION ALL SELECT vt0.c0 FROM vt0 ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS FIRST, ((vt0.c0 COLLATE BINARY) IS FALSE) ASC  NULLS FIRST;SELECT DISTINCT CAST(vt0.c0 AS BLOB) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, '338321105', vt0.c0, 0.6082155441784122)) BETWEEN ((vt0.c0 COLLATE BINARY, (('zD') NOT NULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('' COLLATE NOCASE, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 'H*ᦂi' COLLATE RTRIM, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT), (((NULL)<(vt0.c0)) IN ()) FROM vt0 WHERE (''); -- 0ms;
SELECT DISTINCT ((((0.6188596516723103)AND(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))), (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 727770678 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))==(((+ (vt0.c0))))), COUNT((- (vt0.c0))) FROM vt0 GROUP BY CASE ((vt0.c0)||(vt0.c0))  WHEN ((((vt0.c0)OR('㨨]*/2 ')))OR(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(0.8952024069284066)) END, ((((((((((vt0.c0) IS TRUE))AND(json_extract(vt0.c0, vt0.c0))))OR((NOT (vt0.c0)))))AND((vt0.c0 IN ()))))AND(((NULL) IS TRUE))), (((((vt0.c0, vt0.c0, vt0.c0))=(('1166527731', vt0.c0, vt0.c0))))<=((+ (vt0.c0))));SELECT ALL ((SQLITE_COMPILEOPTION_USED(vt0.c0))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0)IS(vt0.c0))) OVER () FROM vt0 LIMIT 968687109; -- 0ms;
SELECT HEX(DISTINCT AVG(vt0.c0)) FROM vt0 WHERE ((((- ('819762743')))IS(HEX('start of year')))); -- 0ms;
SELECT DISTINCT ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)<<(vt0.c0))) AND ((vt0.c0 IN ()))) FROM vt0 WHERE ((CAST(x'' AS INTEGER) IN (((0xfffffffff267c7ea) NOT BETWEEN ('1444081395') AND (0.18227796976189325))))); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM vt0; -- 4ms;
SELECT ALL LEAD(((((vt0.c0)<=(vt0.c0)))>=(vt0.c0 COLLATE NOCASE)), CAST(0.7297126151162773 AS INTEGER), CASE WHEN ((vt0.c0)AND(0.63978727684866)) THEN 658342666 COLLATE BINARY END) OVER (), (((((vt0.c0 IN (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))), ((('-223894228', vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE, ((vt0.c0)<(vt0.c0)), (~ (vt0.c0))))) FROM vt0 WHERE ((((((((0.6003962738464226))<>((0.63978727684866))))AND(((0.1904300807029543)/(NULL)))))OR(CAST(x'' AS BLOB)))) ORDER BY (((((vt0.c0)IS(vt0.c0)), vt0.c0, json_remove(vt0.c0, vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN 0x593b159a WHEN vt0.c0 THEN '**%m' ELSE vt0.c0 END, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN (vt0.c0))))) ASC; -- 0ms;
SELECT vt0.c0, CAST(MIN(vt0.c0) AS BLOB), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)=(vt0.c0)) IN ()) FROM vt0 WHERE (CAST(((x'') IS FALSE) AS NUMERIC)); -- 0ms;
SELECT ALL LAG((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))))GLOB(((vt0.c0)GLOB(vt0.c0)))), ((((((((TRIM(vt0.c0, vt0.c0))AND(((vt0.c0) IS FALSE))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0)), ((CAST(vt0.c0 AS NUMERIC))OR(CAST(vt0.c0 AS INTEGER)))) OVER () FROM vt0; -- 0ms;
SELECT CAST(((vt0.c0) ISNULL) AS REAL) FROM vt0 WHERE ((~ (0.3443657411948975)) COLLATE NOCASE) GROUP BY CAST(((('-1804437751')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB), ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((+ (vt0.c0))) AND (vt0.c0)), ((((((((CASE WHEN NULL THEN vt0.c0 WHEN x'51aa' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0 COLLATE NOCASE)))AND(NULL)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)); -- 0ms;
SELECT DISTINCT ((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0)&(0.809215090936913)))))OR(vt0.c0 COLLATE BINARY)))AND(json_array_length(vt0.c0, vt0.c0))))AND(GROUP_CONCAT(vt0.c0))) FROM vt0 WHERE ((NOT ('')) COLLATE RTRIM);SELECT TOTAL(((vt0.c0)LIKE(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(vt0.c0)) AND (TOTAL(vt0.c0))) FROM vt0; -- 1ms;
SELECT (NOT (vt0.c0)), ((((CAST(x'ef11' AS INTEGER))OR(vt0.c0 COLLATE BINARY)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))), ((((vt0.c0) NOT NULL)) NOT NULL) FROM vt0; -- 0ms;
SELECT TIME(vt0.c0, ((vt0.c0)>=(x'')), (vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC); -- 1ms;
SELECT DISTINCT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS REAL), (vt0.c0 IN ())))=((CASE x'8be8'  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN '-210016417' THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) IS FALSE), ((vt0.c0)>=(vt0.c0))))), vt0.c0, vt0.c0 FROM vt0 LIMIT 1873292764 OFFSET -1093591472; -- 0ms;
SELECT ALL (((vt0.c0 IN ())) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))<(vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL AVG(((vt0.c0) NOT NULL)) OVER ( ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0))  NULLS FIRST), ((- (0.38390730003751994)) IN ()), ((((vt0.c0)|(vt0.c0)))!=((((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) FROM vt0; -- 0ms;
SELECT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()), vt0.c0, ((((LIKELIHOOD(vt0.c0, 0.49391694601942004))OR(((vt0.c0)>=(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)) FROM vt0 NOT INDEXED WHERE (((('615641541')>(0.6004331325060015)) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)&(vt0.c0)) THEN '' WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 END, CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0) IS FALSE) END, ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END, (((NULL COLLATE NOCASE))>=((((vt0.c0)LIKE(vt0.c0))))), CASE WHEN AVG(vt0.c0) THEN CAST(vt0.c0 AS REAL) ELSE NULL END, LEAD(CAST(CAST(vt0.c0 AS TEXT) AS REAL), CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN vt0.c0 THEN (~ (vt0.c0)) END, CAST('367745875' COLLATE NOCASE AS REAL)) OVER (), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(LTRIM(vt0.c0, 0.24983052725682364))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL ((MIN(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) NOTNULL))) FROM vt0; -- 1ms;
SELECT ALL (((('O2')<=('S水ra[9]*cG'))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((CASE 0.7297126151162773  WHEN 0xffffffff85e8b247 THEN NULL ELSE x'' END IN ())); -- 0ms;
SELECT CAST((vt0.c0 IN ()) AS TEXT), vt0.c0, ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(vt0.c0 COLLATE RTRIM) OVER (), (((((((NULL)AND(vt0.c0)))OR(vt0.c0))))!=(((vt0.c0 IN ())))), CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS BLOB) FROM vt0 WHERE (((('1497044378', x'', -1037043046)) BETWEEN (((('1479673604') NOT BETWEEN (x'') AND (0.7028577501414268)), ((((((((x'1a1e')OR(1.783330181E9)))OR(0.043737661326453736)))AND(0.1772891780030652)))OR('369240544')), ((0.7315969179460936)<<('햰SY<')))) AND ((x'', CASE 0.6567881313044356  WHEN NULL THEN 'R[rJE6ygY' WHEN '1836194907' THEN '' WHEN NULL THEN x'52f7b133' WHEN 'MA' THEN 0.6154299165071073 WHEN NULL THEN -1404506308 ELSE '968687109' END, (0.6584643704071603 IN ()))))); -- 0ms;
SELECT DISTINCT load_extension(vt0.c0) COLLATE RTRIM FROM vt0 WHERE ((((0.28995851932952366)>=(x'42088053')) IN ())) ORDER BY '-2134384100'  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) DESC; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT ALL (((+ (vt0.c0))) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))), ((~ (vt0.c0)) IN ()), TRIM(((vt0.c0)+(vt0.c0))) FROM vt0 WHERE (((((791246100) BETWEEN (NULL) AND (0.10893293660573544)))GLOB('|' COLLATE RTRIM))) GROUP BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)<<(vt0.c0))) AND ((- (vt0.c0)))) HAVING CASE ((vt0.c0)AND(vt0.c0))  WHEN (((vt0.c0))>((vt0.c0))) THEN SUM(vt0.c0) ELSE ((((vt0.c0)OR('**%m')))AND(vt0.c0)) END; -- 0ms;
SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(CAST(x'' AS TEXT))))AND(((vt0.c0)<(vt0.c0)))), MAX('G8'), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE) FROM vt0 LIMIT -1359122553; -- 0ms;
SELECT DISTINCT LTRIM(CASE WHEN '434498919' THEN vt0.c0 END, (vt0.c0 IN ())) FROM vt0 WHERE (((((((0.6567881313044356)AND('338321105')))AND(NULL))) NOTNULL)) GROUP BY (+ (((vt0.c0) IS FALSE))) HAVING (((0.8372962405841913)) BETWEEN ((MIN(vt0.c0))) AND ((CAST(vt0.c0 AS REAL)))) LIMIT 461572577 OFFSET -105643416; -- 1ms;
SELECT DISTINCT NULLIF(DISTINCT load_extension(vt0.c0), NULL) FROM vt0 GROUP BY 0.4017363150844583 HAVING ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS((NOT (vt0.c0)))); -- 0ms;
SELECT ABS((vt0.c0 IN (vt0.c0))), vt0.c0, (NOT ((vt0.c0 IN ()))) FROM vt0 WHERE ((NOT (((x'') NOT NULL)))); -- 0ms;
SELECT ALL MAX(((vt0.c0)%(vt0.c0)) COLLATE NOCASE), ((((LIKELIHOOD(vt0.c0, 0.1392445936959743))AND((NOT (vt0.c0)))))OR(MIN('	K+\rYo|'))), CAST((vt0.c0 IN ()) AS NUMERIC) FROM vt0 WHERE ((((x'' IN ()))OR(('-1644088186' IN (x''))))); -- 0ms;
SELECT DISTINCT vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT BETWEEN (0.63978727684866) AND (vt0.c0))))), (+ (((vt0.c0)AND(NULL)))), ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()), (- ((NOT ('H/Vr䤦s')))) FROM vt0 WHERE (CAST(CASE WHEN '-1539148417' THEN '-548694078' ELSE x'' END AS BLOB)); -- 0ms;
SELECT ((CAST(vt0.c0 AS BLOB))LIKE(((vt0.c0)&(vt0.c0)))) FROM vt0 WHERE (((0.24983052725682364 IN ()) IN ())); -- 0ms;
SELECT DISTINCT NTILE(x'') OVER () FROM vt0;SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) BETWEEN (LENGTH(vt0.c0)) AND (((vt0.c0) ISNULL))), ((((((vt0.c0)=(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (((vt0.c0) NOT NULL) IN ()) FROM vt0 WHERE ((IFNULL(x'', '0.8752014116493498') IN (((((0.2187546838251112)AND(x'')))OR('-94576095'))))); -- 2ms;
SELECT DISTINCT CUME_DIST() OVER (), CASE x'bbb4'  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN json_valid(vt0.c0) THEN vt0.c0 ELSE ((vt0.c0)AND('fvi胏慧')) END, (((vt0.c0 IN ()))/(MIN(vt0.c0))) FROM vt0 WHERE (CAST(x'' AS INTEGER) COLLATE BINARY); -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN ((- ('-93481104'))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (+ (MAX(vt0.c0))), vt0.c0, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))OR(x'')))AND((- (vt0.c0)))))OR(AVG(vt0.c0))))OR(x'' COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((LIKELIHOOD(vt0.c0, 0.4950317880350297))OR(vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)>>(vt0.c0)))), ((CAST(vt0.c0 AS BLOB))/(vt0.c0 COLLATE NOCASE)), MAX(vt0.c0) FROM vt0 WHERE (((CAST(x'' AS REAL))>(('j7ī+J6' IN (0.7455640409188828, 0.043737661326453736))))); -- 1ms;
SELECT DISTINCT CASE WHEN x'1efc' THEN vt0.c0 ELSE HEX(DISTINCT vt0.c0) END FROM vt0; -- 0ms;
SELECT DISTINCT TIME(((vt0.c0)/(vt0.c0)), CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB), ((vt0.c0)>(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0 WHERE ((((((0.7297126151162773) BETWEEN ('&ZdM뛯뾉Q/') AND (x''))))<=((NULL COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(x'') THEN ((((x'')AND(NULL)))OR('727770678')) WHEN ((NULL)<=('-1540540093')) THEN CASE WHEN 0.42191455073117345 THEN NULL END WHEN (((NULL, 0.07173412601883822, -1084899447))>=((0x55093d5a, NULL, '+)Ny''BDQ\n'))) THEN ((x'') IS FALSE) END); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))IS(LIKELY(NULL))) FROM vt0 WHERE (load_extension(((x'')<=('-1807971218')), (0.590072070609898 IN ())));SELECT DISTINCT (~ ((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE)>>((((vt0.c0))<=((vt0.c0))))) FROM vt0; -- 1ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((COUNT(vt0.c0), x'', ((vt0.c0) ISNULL), ((vt0.c0)==(vt0.c0)), ((vt0.c0)/(vt0.c0)))) AND ((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0, 0X16a99f23 COLLATE RTRIM))) FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(x'')) COLLATE NOCASE; -- 0ms;
SELECT ALL CAST((vt0.c0 IN ()) AS BLOB) FROM vt0 LIMIT 481416000; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT CAST(vt0.c0 AS TEXT), GROUP_CONCAT(vt0.c0)), ((vt0.c0 COLLATE BINARY) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (x'')), CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN GROUP_CONCAT(vt0.c0) ELSE ((vt0.c0) NOT NULL) END FROM vt0 WHERE ((NOT (NULL COLLATE BINARY))); -- 0ms;
SELECT ALL (((CAST(vt0.c0 AS BLOB)))<>(('-359787947'))), CAST(ABS(vt0.c0) AS TEXT), (((((0.7099752432477716)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))=((NOT (x'')))) FROM vt0 WHERE ((((((527704816))>((x'c7c4cb51e173'))))%(CAST(367745875 AS TEXT)))); -- 0ms;
SELECT DISTINCT ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE (((NULL COLLATE NOCASE) IS TRUE)); -- 0ms;
SELECT DISTINCT '727770678' FROM vt0 LIMIT -1232234419; -- 1ms;
SELECT 251870891 FROM vt0; -- 0ms;
SELECT ((vt0.c0) NOT NULL) COLLATE NOCASE, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT), ((CAST(vt0.c0 AS REAL)) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (vt0.c0)) FROM vt0 LIMIT -409221436; -- 0ms;
SELECT DISTINCT (((vt0.c0 COLLATE NOCASE))==((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(0.043737661326453736)))OR(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT DATE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0)<(vt0.c0))), ((LOWER(DISTINCT vt0.c0)) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (vt0.c0 COLLATE NOCASE)), (~ ((~ (vt0.c0)))) FROM vt0 WHERE (0xffffffffcf63e0f4); -- 0ms;
SELECT NULL FROM vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM)IS(((vt0.c0) BETWEEN (0.9151654684010919) AND (vt0.c0)))) FROM vt0 WHERE (((((x'4d1b') IS FALSE))!=((- (NULL))))) LIMIT -1351768235 OFFSET 1228650561; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)||(CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE ((((x''))<=((CASE x''  WHEN 1.228650561E9 THEN NULL WHEN '&&' THEN x'' WHEN NULL THEN NULL ELSE 8.54851883E8 END)))) ORDER BY vt0.c0 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (TOTAL(vt0.c0) IN ((- (vt0.c0)), '976157653')) FROM vt0 LIMIT -98125214; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL), ((NULL COLLATE BINARY) IS FALSE), (('165366054')<>(GROUP_CONCAT(vt0.c0))) FROM vt0 WHERE ((((x'79c4', '741683890', 1384645438, x'', '0.7353557829300992')) BETWEEN (('' COLLATE RTRIM, ((x'') NOT BETWEEN (NULL) AND (NULL)), (~ (x'')), '-1553760049', ((0.48092648673777505)IS NOT(NULL)))) AND ((((NULL) NOT BETWEEN (x'') AND (0.38912076892279734)), 0.7873978386609451 COLLATE NOCASE, LIKE('0AKEA', 0.7353557829300992, '6'), CASE ''  WHEN -2.10016417E8 THEN '791246100' ELSE '' END, (((NULL)) NOT BETWEEN ((0.5677533800034875)) AND ((0.25657050035847107))))))) LIMIT -184794800 OFFSET 976157653; -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)>(vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ABS(DISTINCT vt0.c0) END FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE  NULLS LAST, 1081541497 DESC  NULLS LAST;SELECT ((0.8946985300716817) IS TRUE) COLLATE RTRIM FROM vt0 GROUP BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==((json_insert(vt0.c0, vt0.c0, vt0.c0)))) HAVING (((((((vt0.c0)OR(vt0.c0)))OR('?p'))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));SELECT ((((vt0.c0)>=(vt0.c0))) BETWEEN (COUNT(vt0.c0)) AND (((vt0.c0)!=(vt0.c0)))) FROM vt0 WHERE ((UNICODE('') IN ())); -- 0ms;
SELECT ALL NULL, CAST(vt0.c0 AS REAL), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE, DATETIME(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), MIN(vt0.c0), (- (vt0.c0))), 0.06525969640286522 FROM vt0; -- 0ms;
SELECT ALL vt0.c0, AVG(CAST(vt0.c0 AS TEXT)) FILTER(WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(MIN(vt0.c0, vt0.c0))))OR(0.6339224711354733 COLLATE NOCASE))) OVER (), (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND('fvi胏慧')))OR(((vt0.c0)IS(vt0.c0)))) FROM vt0; -- 0ms;
SELECT COUNT(((vt0.c0) NOT BETWEEN (x'8410') AND (vt0.c0))) OVER () FROM vt0 WHERE (((((((x'')>(NULL)))AND(((x'')%('')))))AND((((('-223894228')AND('')))OR(NULL))))); -- 0ms;
SELECT ALL LOWER(DISTINCT json_extract(vt0.c0, vt0.c0)) FROM vt0 WHERE (((((x'') NOT BETWEEN (2080482952) AND (''))) NOT BETWEEN (646224160) AND (CASE ''  WHEN x'' THEN 0.5745791267416288 WHEN '' THEN '451113942' WHEN NULL THEN 0.08334746015183103 ELSE '-98126249' END))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (271964787) AND (((vt0.c0)|(vt0.c0)))) DESC, ((CAST(vt0.c0 AS INTEGER)) ISNULL) ASC, UNLIKELY(vt0.c0) COLLATE RTRIM  NULLS FIRST;SELECT DISTINCT ((LOWER(DISTINCT vt0.c0))>>((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(((vt0.c0) IS TRUE))), ((vt0.c0 IN ()) IN (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (CAST(CASE '-1148355621'  WHEN x'' THEN x'' WHEN NULL THEN NULL WHEN NULL THEN x'' ELSE NULL END AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((('a1w*.2'))>=((((vt0.c0)+(vt0.c0))))), (((vt0.c0 IN (vt0.c0)))||(((vt0.c0)%(vt0.c0)))), (~ (MAX(vt0.c0))), (NOT (GROUP_CONCAT(vt0.c0))), (((NOT (vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS INTEGER), (NOT (vt0.c0)) FROM vt0; -- 0ms;
SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'zD' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT ((vt0.c0) IS FALSE) FROM vt0 WHERE ((0.3302565690917638 IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) IS FALSE) FROM vt0 WHERE (((((((('a')OR(0.19538800094538267)))OR('-940029015'))))<(((x'' IN ()))))); -- 0ms;
SELECT (((~ (-1.807971218E9))) NOT NULL) FROM vt0 NOT INDEXED WHERE (CAST((((('')AND(x'')))AND(NULL)) AS NUMERIC)); -- 0ms;
SELECT UPPER(DISTINCT ((vt0.c0)+(vt0.c0))) FROM vt0 WHERE ((((+ ('844178050'))) IS FALSE)) ORDER BY ((LIKELIHOOD(DISTINCT NULL, 0.08220554362279298))%(((vt0.c0) IS FALSE))), vt0.c0 ASC; -- 0ms;
SELECT vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE, ((((((vt0.c0)AND(vt0.c0)))AND((~ (vt0.c0)))))AND(vt0.c0)) FROM vt0 WHERE (CASE WHEN (('-114739043')LIKE(x'')) THEN CASE WHEN 0.772968476544747 THEN '998200293' END END); -- 1ms;
SELECT ((vt0.c0)<<(NULL)), 0.44924549080779885, ((vt0.c0)>((~ (vt0.c0)))) FROM vt0 WHERE (((((((0.27712431054545505)AND(NULL)))OR(1.384645438E9))) ISNULL)) UNION SELECT DISTINCT NTILE(((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8557295219876967)))OR((- (vt0.c0)))))AND(CAST(vt0.c0 AS TEXT)))) OVER (), (NOT (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=(vt0.c0)))IS(COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT MIN((+ (vt0.c0))) FROM vt0 WHERE (((CASE WHEN '-1565283908' THEN x'' END)<>(UPPER(x'510c')))); -- 0ms;
SELECT TOTAL_CHANGES(), (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (NULL)) FROM vt0; -- 0ms;
SELECT 'u	a' FROM vt0 GROUP BY ((((vt0.c0) NOT BETWEEN (-1.553760049E9) AND (vt0.c0))) IS TRUE) HAVING CAST(((vt0.c0)GLOB(vt0.c0)) AS REAL); -- 0ms;
SELECT ALL CASE WHEN vt0.c0 COLLATE NOCASE THEN json_extract(vt0.c0, vt0.c0) WHEN '-1333809976' COLLATE BINARY THEN CAST(vt0.c0 AS REAL) WHEN TIME(0x19934e74, x'', vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END FROM vt0 WHERE ((((0.8264022720386431, -2.10016417E8, 0.44132748463711857)) BETWEEN (((('') NOT BETWEEN ('2080482952') AND (0.19538800094538267)), (('|')>(0.9765134790018802)), TRIM('80724464'))) AND ((((NULL)<(0.6512682305005785)), ((x'') IS TRUE), ((x'') NOT BETWEEN ('dm') AND ('iO-jcm⻫')))))) GROUP BY (+ (0.5430185285587462)) HAVING ((vt0.c0 COLLATE NOCASE)/(vt0.c0 COLLATE NOCASE)); -- 0ms;
SELECT CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)<<(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT (- (((vt0.c0)>>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (vt0.c0 COLLATE BINARY)) FROM vt0; -- 2ms;
SELECT DISTINCT (~ (json_array_length(vt0.c0, vt0.c0))) FROM vt0 WHERE ('1444081395') GROUP BY CASE WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (~ (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))) THEN ((vt0.c0) NOTNULL) END, vt0.c0, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (json_valid(vt0.c0)) AND (vt0.c0)) HAVING ((((((vt0.c0)+(vt0.c0)))OR(SUM(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));SELECT (((vt0.c0 IN ())) ISNULL) FROM vt0 WHERE (((CAST(-9.4576095E7 AS REAL))+(load_extension(8.0724464E7))));SELECT TRIM(DISTINCT (vt0.c0 IN ()), vt0.c0 COLLATE NOCASE), NULL, ((vt0.c0)%(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((((NULL)LIKE('-1232234419')))IS NOT(x'' COLLATE RTRIM))) GROUP BY (NOT (vt0.c0)) COLLATE NOCASE HAVING ((((vt0.c0) ISNULL)) NOTNULL); -- 0ms;
SELECT UPPER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))), SUM(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'b68f' END) OVER (), ((((vt0.c0)>>(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST((NOT (8.4417805E8)) AS INTEGER)); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT MIN(((vt0.c0) IS TRUE)) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS TEXT) FROM vt0 WHERE (CASE ((x'') NOTNULL)  WHEN ((('q^')) BETWEEN (('0.8264022720386431')) AND (('718355191'))) THEN ((NULL) IS TRUE) ELSE CAST('1588646031' AS REAL) END); -- 0ms;
SELECT DISTINCT '-1084899447', CASE WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN (NULL) AND ('')) WHEN ((NULL) BETWEEN (vt0.c0) AND (-2.28079638E8)) THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) WHEN COUNT(vt0.c0) THEN COUNT(*) ELSE ((vt0.c0)AND(vt0.c0)) END, CASE MIN(vt0.c0)  WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c0)) WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE '-48368368' END FROM vt0 WHERE (json_patch('l' COLLATE NOCASE, (+ (0.6293857057758689))));SELECT DISTINCT LEAD(CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN HEX(DISTINCT vt0.c0) END, ((DATE(x'', x'79f6d6d6', vt0.c0)) IS FALSE), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -2.048347577E9 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) OVER () FROM vt0 WHERE ((((+ ('s*H*')))IS((+ (''))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((+ (vt0.c0))) NOTNULL) FROM vt0; -- 1ms;
SELECT DISTINCT CASE ((x'')<=(vt0.c0))  WHEN (vt0.c0 IN ()) THEN vt0.c0 END FROM vt0 LIMIT -1027645109; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)|(vt0.c0)) AS REAL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, COUNT((vt0.c0 IN ())) OVER () FROM vt0 WHERE (((json_array_length(NULL))||('-72886074' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) FROM vt0; -- 1ms;
SELECT ALL ((((vt0.c0)AND(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN (vt0.c0)))) FROM vt0 ORDER BY CASE (('뚅') IS TRUE)  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN '1076934383' END END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS REAL), COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), LIKE('sJ?', MIN(vt0.c0)) FROM vt0 ORDER BY UPPER(vt0.c0) ASC, (((((((((((vt0.c0)AND('271964787')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))==((UPPER(vt0.c0)))), (- (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST LIMIT 542947133; -- 0ms;
SELECT DISTINCT (((((('-1093591472')OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CAST(((vt0.c0)%(vt0.c0)) AS REAL), CAST(CAST(vt0.c0 AS TEXT) AS REAL) FROM vt0 ORDER BY ((x'870e') NOT NULL) ASC  NULLS LAST; -- 0ms;
SELECT CASE WHEN ((((vt0.c0)AND(x'')))OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 END, AVG(CASE WHEN vt0.c0 THEN 0.8757865700931861 ELSE vt0.c0 END) OVER ( ORDER BY (((vt0.c0) ISNULL) IN ((- (vt0.c0)))), (((vt0.c0)) NOT BETWEEN (((((vt0.c0))<=((vt0.c0))))) AND ((CAST(vt0.c0 AS TEXT))))  NULLS LAST), AVG(((NULL) ISNULL)) FROM vt0; -- 0ms;
SELECT ALL COUNT((((vt0.c0))==((vt0.c0)))) OVER (), (~ ((vt0.c0 IN ()))), (((((vt0.c0)<<(vt0.c0)), TYPEOF(x''), ((vt0.c0)>(vt0.c0))))<((vt0.c0, ABS(vt0.c0), ((vt0.c0) NOT NULL)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC))IS NOT(((vt0.c0) IS TRUE))) FROM vt0 WHERE ((+ (((NULL) NOT BETWEEN ('-1928253840') AND (NULL))))); -- 0ms;
SELECT DISTINCT COUNT(COUNT(*)) FROM vt0 WHERE (((('V*[揝' IN ())) BETWEEN ((('侟j}+l')/(x'b8ca'))) AND (((0.5768787610088808)AND('')))));SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND ('-377921177')), ((vt0.c0) IS FALSE), '470137631')) AND ((((vt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS FALSE)))) FROM vt0; -- 1ms;
SELECT DISTINCT CAST(vt0.c0 AS INTEGER) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)=(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)), vt0.c0, NTILE(vt0.c0) OVER () FROM vt0 WHERE ((+ ((- ('0.8757865700931861'))))); -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c0 THEN vt0.c0 END))!=((CAST(vt0.c0 AS TEXT)))) FROM vt0 WHERE (CASE (('') NOT BETWEEN (x'') AND (0.7957914318467452))  WHEN (~ ('1383826066')) THEN (NOT (NULL)) WHEN ((('')) NOT BETWEEN ((x'5840')) AND ((0.488748994738169))) THEN (((((((((((('+~|賚Y')OR(x'')))OR(NULL)))AND(NULL)))AND(NULL)))AND(NULL)))AND(x'f43eb12f')) WHEN ('2042804604' IN ('')) THEN CAST(1240651184 AS BLOB) END); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)<=(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)))OR((vt0.c0 IN (vt0.c0)))))OR(x'')))OR(TRIM(vt0.c0))), x'' COLLATE RTRIM, (~ ((((vt0.c0))>=((vt0.c0))))) FROM vt0 ORDER BY IFNULL(((vt0.c0)+(vt0.c0)), 1.873292764E9)  NULLS LAST, (- (((vt0.c0) NOTNULL)))  NULLS FIRST; -- 1ms;
SELECT ((vt0.c0)||(')')) COLLATE BINARY FROM vt0 WHERE ((NOT (x''))) GROUP BY CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS REAL); -- 0ms;
SELECT ALL '^I' FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '968687109', vt0.c0, '882303740', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) IN ()) FROM vt0; -- 0ms;
SELECT vt0.c0, vt0.c0, (((vt0.c0 IN ())) ISNULL) FROM vt0; -- 0ms;
SELECT CASE WHEN ((vt0.c0)>(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE (+ (vt0.c0)) END, LEAD(((((((vt0.c0)%(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))AND((vt0.c0 IN ()))), (((((vt0.c0)&(vt0.c0))))==((CAST(vt0.c0 AS INTEGER)))), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) OVER (), (((vt0.c0)|(vt0.c0)) IN ()) FROM vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c0)%(vt0.c0)))&(MAX(vt0.c0))) FROM vt0 GROUP BY (vt0.c0 IN ()) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT x'', vt0.c0, CASE (vt0.c0 IN (vt0.c0))  WHEN vt0.c0 THEN TRIM(vt0.c0) ELSE vt0.c0 END FROM vt0 WHERE (CASE WHEN CASE '-205726996'  WHEN x'd602' THEN x'' WHEN 1.240651184E9 THEN 0.21518532690723047 WHEN NULL THEN '0.38912076892279734' END THEN CASE '-1703141499'  WHEN 0.5798221300170833 THEN 'ki' ELSE NULL END WHEN UPPER(0.13798405824033455) THEN ((x'') ISNULL) WHEN ((x'b527') ISNULL) THEN (+ ('1081541497')) ELSE ((x'')|(NULL)) END); -- 0ms;
SELECT DISTINCT (((vt0.c0))<=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FROM vt0; -- 0ms;
SELECT ALL COUNT(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))), vt0.c0, ((((((((vt0.c0)OR(x'')))OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE ((+ ((('1228734252') IS TRUE)))); -- 1ms;
SELECT DISTINCT LIKELIHOOD(vt0.c0, 0.6491759433796669), (((x'')) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND (((- (vt0.c0))))), AVG(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0 ORDER BY vt0.c0  NULLS FIRST; -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (LIKELIHOOD(DISTINCT vt0.c0, 0.8261764459402031))) FROM vt0 WHERE (((((x'')AND(((((x'')AND('-441397686')))OR('6山C*A#k')))))OR((+ (0.11537276398973972))))); -- 0ms;
SELECT DISTINCT MIN(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))), RANK() OVER ( PARTITION BY (((PRINTF(vt0.c0)))<=((CAST(vt0.c0 AS REAL)))), ABS(DISTINCT ((vt0.c0) BETWEEN ('') AND (vt0.c0)))), (~ (((vt0.c0)<>(vt0.c0)))), LIKELY(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0)))) FROM vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c0)|(vt0.c0)))<<(TOTAL(vt0.c0))) FROM vt0 WHERE (((x'')AND(0.8264022720386431)) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(CASE 0.3984247030616934  WHEN vt0.c0 THEN '' WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(GROUP_CONCAT(vt0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(AVG(vt0.c0))) FROM vt0 WHERE (((((NULL)||(0.772968476544747))) BETWEEN (((NULL)-('741059277'))) AND (CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) ELSE ((vt0.c0)>(vt0.c0)) END, NULL, AVG(((((vt0.c0)AND(x'')))AND(vt0.c0))) FROM vt0 WHERE ('-308640698'); -- 0ms;
SELECT DISTINCT CAST(((((((((vt0.c0)OR(vt0.c0)))AND('P1')))AND(vt0.c0)))OR(x'67e3')) AS REAL), ((((((((vt0.c0 COLLATE RTRIM)OR(COALESCE(vt0.c0, vt0.c0))))AND(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) ISNULL))))OR(vt0.c0 COLLATE NOCASE)), ((vt0.c0)IS(vt0.c0)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 END)&('YU')), SUM(vt0.c0) OVER ( GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW), ((((vt0.c0) NOTNULL))<<(((vt0.c0)<<(vt0.c0)))), 0.3275746586582282, (((((+ (vt0.c0)))AND(TOTAL(vt0.c0))))OR(((vt0.c0) IS FALSE))) FROM vt0 WHERE (((('0')) BETWEEN ((UNLIKELY(DISTINCT NULL))) AND ((((('325133941')) NOT BETWEEN ((NULL)) AND ((')'))))))); -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) IS FALSE)) FILTER(WHERE (NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) OVER () FROM vt0 WHERE (((((((((NULL)AND(0x2dae161e)))OR(1102320227)))AND((((x'')) NOT BETWEEN ((-1595421349)) AND ((x''))))))OR(((NULL) BETWEEN (x'') AND (0.07173412601883822))))); -- 0ms;
SELECT DISTINCT (TOTAL(vt0.c0) IN (json_insert(vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)=((vt0.c0 IN ()))), ((((((2120528960)|(vt0.c0)))OR(MAX(vt0.c0))))AND(((vt0.c0)/('-40297951')))) FROM vt0 WHERE (x'6d05'); -- 0ms;
SELECT '0.590072070609898' COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL json_type((((vt0.c0))<>((vt0.c0)))) FROM vt0 ORDER BY NULL  NULLS FIRST; -- 0ms;
SELECT SUM(((vt0.c0)/(vt0.c0))) OVER ( ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS TEXT) END DESC  NULLS FIRST) FROM vt0 WHERE ((((~ (0.6402039236850741))) NOTNULL)); -- 1ms;
SELECT ALL (~ ((((vt0.c0, 1747008069, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE ((((+ ('-488060456'))) NOT NULL)); -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL (- (vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT (- ((vt0.c0 IN ()))), CASE ((vt0.c0) NOT NULL)  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN UNLIKELY(DISTINCT vt0.c0) WHEN (NOT (vt0.c0)) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END END, ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt0.c0)OR(vt0.c0)))AND(NULL)))) FROM vt0 WHERE (((((0.9236943637425283)>=(0x4ad745b7))) ISNULL)); -- 0ms;
SELECT DISTINCT CAST((NOT (vt0.c0)) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (((3.25133941E8)-(x'')))), CASE WHEN (((0X2f297514))>((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1499051653')) WHEN AVG(vt0.c0) THEN ((vt0.c0)<(vt0.c0)) ELSE vt0.c0 END FROM vt0 GROUP BY (((vt0.c0 IN ()))IS(UNICODE(vt0.c0))); -- 0ms;
SELECT ALL GROUP_CONCAT(vt0.c0) FROM vt0 NOT INDEXED; -- 0ms;
SELECT (vt0.c0 IN ()) COLLATE BINARY FROM vt0 WHERE (((x'' COLLATE NOCASE)LIKE(((NULL)/(0.47696522531197827))))) ORDER BY vt0.c0  NULLS LAST, (((vt0.c0)) BETWEEN ((((1590879747) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((0.912023144478275))) ASC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM) OVER () FROM vt0; -- 1ms;
SELECT ((vt0.c0)LIKE(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (CASE CAST('r' AS BLOB)  WHEN (((0.590072070609898)) BETWEEN ((0.9407058963823958)) AND ((NULL))) THEN IFNULL(x'', 'Pwt') END) ORDER BY ((((((NULL)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt0.c0)<<(((vt0.c0) ISNULL))) FROM vt0 WHERE (((0.8603458359041485) IS FALSE)); -- 0ms;
SELECT DISTINCT (NOT ((vt0.c0 IN (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(json_patch(vt0.c0, vt0.c0))))AND(json_quote(vt0.c0))))OR(vt0.c0 COLLATE NOCASE)))OR(ABS(DISTINCT vt0.c0))) FROM vt0; -- 0ms;
SELECT CAST(vt0.c0 AS BLOB) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT ((((0.6534467486106383)AND(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) ISNULL))) FROM vt0 WHERE ((((x'')) BETWEEN ((x'')) AND (((x'792d91d0' IN ('')))))); -- 1ms;
SELECT DISTINCT CAST(LENGTH(vt0.c0) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0) NOTNULL)))<((((vt0.c0) IS TRUE)))) FROM vt0 WHERE ((((+ (NULL))) BETWEEN (('%' IN (0.5035385149724722))) AND ('0.6534467486106383' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 GROUP BY (CAST(vt0.c0 AS TEXT) IN ()); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (vt0.c0) AND (ABS(vt0.c0))) FROM vt0 WHERE ((- (0.0032616200434949505)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) IS FALSE) FROM vt0 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT DISTINCT TOTAL((((vt0.c0))>=((vt0.c0)))) OVER () FROM vt0 LIMIT -1232234419 OFFSET -324873533; -- 0ms;
SELECT (CAST(vt0.c0 AS TEXT) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(ABS(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY, ((SUM(vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)<<(vt0.c0)))), ((CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)/((~ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ((((COUNT(*))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0) IS FALSE))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ ((('T\')&(vt0.c0)))), CAST(vt0.c0 AS NUMERIC), ((((x'b653')AND((- (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((((x'5adc')<(-7.86969115E8)))+((x'a3c3' IN ())))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOTNULL) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) ISNULL))) FROM vt0; -- 0ms;
SELECT CASE WHEN NULL THEN ((vt0.c0)>>(0.0630526858399032)) ELSE (vt0.c0 IN (vt0.c0, 's水ra[9]*cg')) END FROM vt0; -- 0ms;
SELECT DISTINCT (((((+ (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(COUNT(NULL))) FROM vt0 WHERE (((('') NOT NULL) IN (NULL))); -- 0ms;
SELECT DISTINCT ((vt0.c0)|((((vt0.c0))!=((vt0.c0))))) FROM vt0 WHERE (((0.926462222116597)IS(0.30622338498168233)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(json_insert(vt0.c0, vt0.c0, vt0.c0))) FROM vt0;SELECT ALL (- (TYPEOF(DISTINCT vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))&(CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE ((((((- (x'4f50')))OR((((0.4605982648890957, NULL, 0.08238383770662872))>=((0.4728428733690999, x'f3f7', NULL))))))OR(CAST(0.2841663054332686 AS BLOB)))); -- 0ms;
SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.4084826831907302)) COLLATE RTRIM FROM vt0 WHERE (CASE WHEN (('0.4017363150844583')IS NOT(0.5768787610088808)) THEN (('-359787947') NOT BETWEEN (NULL) AND ('ri()')) ELSE (('') BETWEEN (0.583936529387205) AND ('')) END) LIMIT -1072285112; -- 0ms;
SELECT DISTINCT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))!=((SUM(vt0.c0), x'', ((vt0.c0)-(vt0.c0))))) FROM vt0 WHERE (((',D7_bh')OR((~ (x''))))); -- 0ms;
SELECT ALL NTH_VALUE(((((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM)), CAST(vt0.c0 AS BLOB)) OVER (), CASE WHEN (((vt0.c0))<((vt0.c0))) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)<=(vt0.c0)) END, AVG((+ (vt0.c0))) FILTER(WHERE (- ((vt0.c0 IN (0.2841663054332686, vt0.c0))))) OVER () FROM vt0 WHERE (x'19b4'); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt0 WHERE ((((CAST(NULL AS NUMERIC)))==((NULL)))) ORDER BY vt0.c0; -- 0ms;
SELECT ALL ((HEX(vt0.c0)) BETWEEN (NULL) AND (((vt0.c0)==(vt0.c0)))) FROM vt0 ORDER BY (- (((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)<(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)|(vt0.c0)))&(CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE (CAST(((0.24415399656220105)%('-522901365')) AS INTEGER)) LIMIT -48368368 OFFSET 1001789530; -- 0ms;
SELECT DISTINCT (TRIM(DISTINCT vt0.c0, vt0.c0) IN ()), LOWER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), vt0.c0 FROM vt0; -- 0ms;
SELECT vt0.c0, GROUP_CONCAT((vt0.c0 IN (vt0.c0))) OVER (), (((('1479673604')GLOB(vt0.c0)))*((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((MAX(-1.05643416E8))<=(CAST(vt0.c0 AS BLOB))), ((((vt0.c0) NOTNULL)) IS FALSE), (('썍z')IS(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((((1.228650561E9)) NOT BETWEEN ((x'60fd' COLLATE RTRIM)) AND (((NOT (0.44132748463711857)))))) ORDER BY CASE WHEN x'' THEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END END, CASE WHEN x'' THEN NULL END  NULLS LAST, ((('90741730')) BETWEEN ((((0.02613517920238817)OR(vt0.c0)))) AND ((((vt0.c0)+(vt0.c0))))) DESC; -- 0ms;
SELECT RANK() OVER () FROM vt0 WHERE ((- (((NULL) IS TRUE)))); -- 1ms;
SELECT ALL x'' FROM vt0 ORDER BY (((((((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, '뚅', vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (x'5069')))))AND(((vt0.c0)/(vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0)) ASC; -- 0ms;
SELECT DISTINCT (((((vt0.c0))<((vt0.c0)))) BETWEEN (MAX(0.8734961699887722)) AND (((vt0.c0) IS TRUE))) FROM vt0; -- 0ms;
SELECT ALL TRIM(DISTINCT 0.5069752876583232, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) FROM vt0 WHERE (CAST(NULL AS REAL) COLLATE BINARY) GROUP BY (((vt0.c0) ISNULL) IN ()); -- 0ms;
SELECT ALL (+ (CASE WHEN vt0.c0 THEN 'O㹦r/Qq' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))&(((vt0.c0) ISNULL))) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN x'' THEN 0.2592261111593438 WHEN 0.019529567956916294 THEN x'' WHEN x'' THEN NULL WHEN 0.21518532690723047 THEN 0.6004331325060015 WHEN '-786969115' THEN '542947133' ELSE 0.6274536436742261 END)IS NOT(CASE WHEN ',^' THEN '~%cGD' ELSE '1110269584' END))) ORDER BY ((UNICODE(vt0.c0)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, x'' ASC  NULLS LAST; -- 0ms;
SELECT ALL (((((NULL)=(vt0.c0)), HEX(vt0.c0), vt0.c0))<((NULL, (vt0.c0 IN ()), ((vt0.c0)LIKE(vt0.c0))))), json_insert(UPPER(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), HEX(DISTINCT vt0.c0)), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE ((NOT ((NOT (x'e18c'))))); -- 0ms;
SELECT ALL LIKELIHOOD(vt0.c0, 0.22810163595519584) FROM vt0 WHERE (((((1.444081395E9)AND(CAST('' AS NUMERIC))))AND(((('-1257357652'))>=((NULL)))))); -- 0ms;
SELECT DISTINCT (((vt0.c0))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 WHERE ((~ (json_array(NULL, '152429389', NULL, '470137631', NULL, '-2048347577')))); -- 0ms;
SELECT (((CAST(vt0.c0 AS REAL)))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0 WHERE ((('534630417' COLLATE RTRIM) BETWEEN (CASE WHEN NULL THEN x'' END) AND ((- (x''))))); -- 0ms;
SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((x''))==((vt0.c0)))) AND (((vt0.c0)&(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL) FROM vt0 GROUP BY (((vt0.c0)) NOT BETWEEN ((NULL)) AND (((((vt0.c0))<((vt0.c0)))))) HAVING (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))>=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))); -- 1ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<=(((vt0.c0)&(vt0.c0)))) FROM vt0 WHERE (CAST(x'0bb2' COLLATE RTRIM AS NUMERIC)) LIMIT 888114584 OFFSET -1404506308; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0))) NOT BETWEEN (NULL) AND (0.16468375283243042)) FROM vt0 LIMIT 2016270968 OFFSET -964560807; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) FROM vt0; -- 0ms;
SELECT DISTINCT (((NOT (0.46856152719526745))) NOT BETWEEN (vt0.c0) AND (IFNULL(DISTINCT vt0.c0, vt0.c0))), (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (vt0.c0 IN (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (CAST(TRIM(DISTINCT x'234e4ee5', NULL) AS NUMERIC)); -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM FROM vt0 WHERE (CAST(((x'')>(0.8624595460898246)) AS TEXT)); -- 0ms;
SELECT DISTINCT LAST_VALUE((~ (((((0xffffffffe52a4f8b)AND(vt0.c0)))AND(vt0.c0))))) OVER () FROM vt0 WHERE (IFNULL(((x'') BETWEEN ('') AND (x'd5613a9b')), ((x'9bc0')GLOB('t5')))); -- 0ms;
SELECT DISTINCT ((CAST('' AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) FROM vt0 WHERE ((((('0.772968476544747') NOT NULL))&(((x'') IS TRUE)))); -- 0ms;
SELECT ALL LOWER(DISTINCT ((vt0.c0) NOTNULL)) FROM vt0; -- 0ms;
SELECT ALL ((json_array_length(vt0.c0))<<(CASE WHEN '(G㟈pcO' THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT (((vt0.c0 IN (vt0.c0)))|(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))) FROM vt0 WHERE ((('k4H眉Ry聈')LIKE('-1681849622')) COLLATE BINARY); -- 0ms;
SELECT ALL ((vt0.c0 IN ()) IN ('Hn<yE퍡u')) FROM vt0; -- 1ms;
SELECT ((vt0.c0)%(vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT IFNULL(((vt0.c0) ISNULL), GROUP_CONCAT(vt0.c0)) FROM vt0 LIMIT -409221436 OFFSET 551663940; -- 0ms;
SELECT DISTINCT MIN(((vt0.c0)<<(vt0.c0))) FROM vt0 WHERE (CAST(((0Xffffffffbed11e50) NOTNULL) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<>(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0)) FROM vt0 LIMIT 718355191; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((vt0.c0) ISNULL)))), PERCENT_RANK() OVER (), vt0.c0 FROM vt0 WHERE ((((311651466)) BETWEEN ((((((((((NULL)OR(NULL)))AND(x'bcf0')))AND(0.29325646584951315)))OR('1240651184')))) AND ((((('-923855657', 0.5155500145632268, x'')) NOT BETWEEN ((0.6293857057758689, 6.15641541E8, 0.5195471138859237)) AND ((0.5357617041820231, -941784925, 0xffffffffc9fd3efd))))))); -- 0ms;
SELECT DISTINCT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0 COLLATE BINARY)))AND(MAX(vt0.c0))), NULL, (((vt0.c0, vt0.c0, '')) BETWEEN ((((vt0.c0)|(vt0.c0)), (vt0.c0 IN ()), (vt0.c0 IN ()))) AND ((vt0.c0 COLLATE BINARY, vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) FROM vt0 WHERE (json_array(((NULL)-(0Xfffffffffaa15976)), (((0.3768646480384431)) NOT BETWEEN (('')) AND (('kHe'))))); -- 0ms;
SELECT ALL ((((vt0.c0)AND(vt0.c0)))>=(0xfffffffff9b40268 COLLATE NOCASE)), vt0.c0, MIN(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE (CAST(CAST('-2115672755' AS BLOB) AS INTEGER)); -- 0ms;
SELECT DISTINCT (~ (COALESCE(NULL, vt0.c0))) FROM vt0 WHERE ((json_array(NULL, '-1e500') IN ((6.4622416E8 IN ())))); -- 0ms;
SELECT ALL (((vt0.c0) IS TRUE) IN (((vt0.c0)IS(vt0.c0)))) FROM vt0; -- 0ms;
SELECT CAST(CAST(vt0.c0 AS TEXT) AS TEXT) FROM vt0 WHERE ((((NOT (0.7869786129381328)))IS(((x'')/('TTᦂ'))))); -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)-(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT ALL -392138103 FROM vt0 WHERE ((CASE WHEN NULL THEN x'' WHEN '' THEN 0.9464613371713175 WHEN '741683890' THEN '94719036' ELSE x'6292' END IN ())); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT CUME_DIST() OVER ( ORDER BY CAST((- (vt0.c0)) AS INTEGER)), ((((vt0.c0) NOT NULL))AND(((vt0.c0)/(vt0.c0)))), ((CAST(vt0.c0 AS TEXT))IS NOT(((vt0.c0)>>(vt0.c0)))) FROM vt0 WHERE (-1919167469) LIMIT 466034415 OFFSET -634185968; -- 1ms;
SELECT SUM((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'4ae9', vt0.c0, vt0.c0, vt0.c0)))) FROM vt0 GROUP BY (NOT (vt0.c0)) HAVING MAX(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT ALL CAST(MIN(vt0.c0) AS NUMERIC), (NOT (((' D')IS NOT(vt0.c0)))), '-1521799773' FROM vt0; -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL), ((vt0.c0) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS REAL))), (((((+ (vt0.c0)))OR(((vt0.c0)!=(vt0.c0)))))OR(((vt0.c0) IS FALSE))), (((x''))<((vt0.c0 COLLATE NOCASE))), ((((vt0.c0 IN ())))==(((+ (vt0.c0))))) FROM vt0; -- 1ms;
SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((NULL)<=(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN 0.8677704784832948 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((((NULL IN (1612569276)))%((NULL IN ())))) ORDER BY (NOT (CAST(vt0.c0 AS BLOB))); -- 0ms;
SELECT DISTINCT ((0.2961928125205746) NOT NULL) FROM vt0 WHERE (((0.13404888397634307 IN ()) IN (LENGTH(x''), ((((((((((((7.4168389E8)OR(NULL)))AND(NULL)))AND(0.6339224711354733)))AND(x'ad9e')))AND('')))AND(-72886074))))); -- 0ms;
SELECT DISTINCT CASE CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xa5ecda2 END  WHEN ((vt0.c0)||(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END FROM vt0 WHERE ((((741683890) NOT BETWEEN ('hsf') AND ('')) IN ())) GROUP BY (((vt0.c0)) BETWEEN ((LIKELIHOOD(vt0.c0, 0.4735737035426444))) AND (((vt0.c0 IN ())))), (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((((vt0.c0)GLOB(vt0.c0))))), x'' ORDER BY ((((vt0.c0)<(vt0.c0))) NOTNULL) DESC  NULLS LAST; -- 0ms;
SELECT MIN(CAST(vt0.c0 AS TEXT)) FROM vt0 NOT INDEXED WHERE (CAST(CAST(-1.539148417E9 AS INTEGER) AS REAL)); -- 1ms;
SELECT DISTINCT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((-1814773047, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(TRIM(vt0.c0, vt0.c0)) OVER () FROM vt0 WHERE (NULL COLLATE RTRIM COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT ALL TYPEOF(DISTINCT (((vt0.c0))<=((vt0.c0)))), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC), vt0.c0 FROM vt0 WHERE (CASE (((('')AND(-890529771)))OR(0.5745791267416288))  WHEN (NULL IN ()) THEN CASE NULL  WHEN 0.7306100405676879 THEN NULL ELSE x'' END ELSE x'' END) LIMIT -93481104; -- 0ms;
SELECT CAST(NULL AS NUMERIC) FROM vt0 WHERE (CAST(((((-1551889581)AND(NULL)))AND('0.0630526858399032')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((vt0.c0)||(vt0.c0)) IN ((vt0.c0 IN (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0))>((vt0.c0))) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT (- (((x'') NOT NULL))), CAST(((vt0.c0)LIKE(NULL)) AS BLOB), AVG(((vt0.c0) ISNULL)) FILTER(WHERE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) OVER (), (((vt0.c0)>(vt0.c0)) IN ()), 'S,' FROM vt0; -- 1ms;
SELECT vt0.c0, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), (((((vt0.c0) ISNULL)))>((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0 WHERE ((- (0X7d5d2ed3))); -- 0ms;
SELECT ((((vt0.c0) NOTNULL))IS NOT(GROUP_CONCAT(vt0.c0))), CASE ((vt0.c0) IS FALSE)  WHEN LIKELY(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END, CAST(((vt0.c0)||(vt0.c0)) AS BLOB) FROM vt0 WHERE (((((((((((('-1664866594', '8hq 0/	', x'')) NOT BETWEEN ((NULL, x'4bb01198', x'')) AND (('xul', 0X2f297514, x''))))OR(((NULL)==(-48368368)))))AND(NULL)))OR(LIKELIHOOD(NULL, 0.4366887893437934))))OR(0x50f45b70))); -- 0ms;
SELECT DISTINCT TOTAL((+ (vt0.c0))) OVER () FROM vt0 LIMIT -1661937571 OFFSET -223894228; -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS BLOB)  WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))|((NOT (vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0))>((vt0.c0))) IN (((vt0.c0) BETWEEN ('380215075') AND (vt0.c0)), ABS(vt0.c0)))  NULLS FIRST; -- 1ms;
SELECT ALL COUNT(*) OVER (), (~ ((+ (vt0.c0)))), (((((((((vt0.c0 IN ()))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, x''))))))AND((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL (((((vt0.c0)AND(0.6433826229818321)))OR(vt0.c0)) IN ((+ (vt0.c0)))), vt0.c0, SQLITE_COMPILEOPTION_GET(((vt0.c0) NOT NULL)) FROM vt0 WHERE (CASE ((x'')%(NULL))  WHEN IFNULL(0.8619125069369834, '-532974303') THEN (('819762743')OR('0.10893293660573544')) END); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(CAST(vt0.c0 AS INTEGER))) FROM vt0 ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST, ((vt0.c0)>(vt0.c0)) DESC; -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT((((vt0.c0, vt0.c0, vt0.c0))>((0.5786306595255801, vt0.c0, vt0.c0)))) FROM vt0 WHERE (TRIM('G/') COLLATE BINARY); -- 0ms;
SELECT CAST((+ (vt0.c0)) AS INTEGER) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID(), ((vt0.c0 COLLATE RTRIM)IS(CAST(vt0.c0 AS BLOB))), (((+ (vt0.c0)))<=(((0.3915196228344916)>=(vt0.c0)))), PERCENT_RANK() OVER (), (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))>=(('-1423803271'))) FROM vt0 WHERE (CAST(x'' COLLATE NOCASE AS NUMERIC)); -- 1ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (((((NULL)!=(NULL))) BETWEEN (((x'')>(''))) AND (((0.6512682305005785) BETWEEN (0.4474631797524694) AND (''))))); -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (SUM(vt0.c0))) FROM vt0; -- 1ms;
SELECT DISTINCT (((('')!=(vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (527704816)), (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()), (NOT ((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (LIKELIHOOD(DISTINCT vt0.c0, 0.9331117136954591))), AVG(((vt0.c0)GLOB(vt0.c0))) OVER (), x'b629' FROM vt0 WHERE ((((- (x'')))%(((NULL)LIKE('뾷*'))))) GROUP BY ((-31063182) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((GROUP_CONCAT(vt0.c0), NULL, ((0.912023144478275)<=(vt0.c0)), CAST(vt0.c0 AS INTEGER), ((vt0.c0) NOT NULL))) AND ((CAST(vt0.c0 AS NUMERIC), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), TOTAL(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))); -- 1ms;
SELECT ROW_NUMBER() OVER (), ROW_NUMBER() OVER (), CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER), TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((SUM(x''))AND(vt0.c0)))AND((vt0.c0 IN ()))) FROM vt0 WHERE ((0.20726625720891678 COLLATE BINARY IN ())) ORDER BY CAST('80724464' AS REAL); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((2067041498)%(x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((vt0.c0)AND(vt0.c0)))|(vt0.c0 COLLATE RTRIM)), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(CASE WHEN vt0.c0 THEN vt0.c0 END)), MIN(MAX(vt0.c0, vt0.c0)) FROM vt0 WHERE (((TYPEOF(2.080482952E9)) BETWEEN (((0.14510662975504185) NOT BETWEEN (NULL) AND (NULL))) AND ((~ (-1.05643416E8))))); -- 0ms;
SELECT NULLIF((vt0.c0 IN ()), 0.5356742248536367) FROM vt0 LIMIT 1499051653 OFFSET 929174584; -- 0ms;
SELECT DISTINCT ((((NULL)AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0)) FROM vt0 WHERE ((((~ (0xffffffff814125d5))) NOT NULL)); -- 1ms;
SELECT DISTINCT ((((vt0.c0)AND('-1525646997'))) NOT NULL) FROM vt0; -- 0ms;
SELECT (((vt0.c0)AND(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 GROUP BY CASE (NOT (vt0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN vt0.c0 THEN (('L,[Cৡ]') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>>(vt0.c0)) ELSE vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))AND(0.36920536705525775)) COLLATE RTRIM, ((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)*(NULL)))))OR((vt0.c0 IN ()))) HAVING RTRIM((+ (vt0.c0))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND (((NOT (vt0.c0))))) FROM vt0 WHERE (NULLIF(DISTINCT ((((0.6004331325060015)AND(NULL)))OR(x'')), ((x'')%(x'')))) GROUP BY (((CAST(vt0.c0 AS NUMERIC)))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))), (- (vt0.c0)) COLLATE NOCASE, (((vt0.c0 IN ())) BETWEEN ('ATk㮐kL\r6H') AND (CAST(vt0.c0 AS TEXT))) HAVING vt0.c0; -- 0ms;
SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('-258241769'))) IS FALSE) FROM vt0 WHERE (((CAST(1.076934383E9 AS REAL)) BETWEEN ((('-1232234419') NOT BETWEEN ('\ru!*Y랿B|') AND (NULL))) AND (((NULL)IS NOT(x''))))) GROUP BY 0.13798405824033455 HAVING 0.3908177209172563; -- 0ms;
SELECT ALL ((CAST('434498919' AS INTEGER)) NOT BETWEEN (((vt0.c0)-(vt0.c0))) AND ((vt0.c0 IN (vt0.c0)))) FROM vt0 WHERE (0xffffffff85022e00); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS REAL) FROM vt0 GROUP BY 0.7764620418673689, (vt0.c0 IN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'0394'))))), CAST(vt0.c0 AS REAL) COLLATE BINARY; -- 1ms;
SELECT ALL NULLIF(DISTINCT UPPER(vt0.c0), (~ ('-1466895081'))), (((NOT (vt0.c0)))||(((vt0.c0)IS NOT(vt0.c0)))), (- ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c0 AS BLOB)))<((x''))), DENSE_RANK() OVER (), (((+ (vt0.c0)))GLOB(TOTAL(vt0.c0))) FROM vt0 GROUP BY ((((((vt0.c0)+('1뫭695')))OR((((vt0.c0))<=((vt0.c0))))))AND(vt0.c0)) HAVING (NOT ('429084276')); -- 0ms;
SELECT ALL LAST_VALUE(TRIM(vt0.c0, ((vt0.c0)=(vt0.c0)))) OVER () FROM vt0 WHERE (NULL); -- 0ms;
SELECT SUM(COUNT(*)) FROM vt0;SELECT DISTINCT (NOT (((vt0.c0) IS TRUE))), (((TRIM(DISTINCT vt0.c0, vt0.c0)))>((AVG(vt0.c0)))), ((vt0.c0)LIKE(json_patch(vt0.c0, vt0.c0))) FROM vt0 WHERE (((((0x400a4d2c) BETWEEN (NULL) AND (0.06525969640286522)))<<(x'' COLLATE RTRIM))) GROUP BY ((((vt0.c0)<=(vt0.c0)))|(2109329728)); -- 0ms;
SELECT DISTINCT vt0.c0, (NOT (MIN(vt0.c0))), INSTR(vt0.c0, vt0.c0) COLLATE BINARY FROM vt0 WHERE (NULL); -- 4ms;
SELECT -58786347 FROM vt0; -- 0ms;
SELECT 904709123 FROM vt0; -- 0ms;
SELECT (((((((vt0.c0))==(('-377921177'))))AND(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)&(vt0.c0)))) FROM vt0 LIMIT 358775348 OFFSET 226926109; -- 0ms;
SELECT ALL (~ (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) FROM vt0 WHERE ((~ (CAST(x'' AS BLOB)))); -- 0ms;
SELECT DISTINCT CASE LIKELY(DISTINCT vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)|(vt0.c0)) WHEN '**%M' THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END FROM vt0; -- 1ms;
SELECT (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((1060868898))) FROM vt0 WHERE (CASE (+ (1855347585))  WHEN (((('䨤Z!LL|')OR(x'')))AND(x'')) THEN (('')>('451113942')) END); -- 0ms;
SELECT (((NOT (0.1096501384014914))) NOT NULL) FROM vt0 ORDER BY (('d实')>((vt0.c0 IN (vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT 0.001305697637406844 FROM vt0 WHERE (CASE (((4.34498919E8)) BETWEEN (('-1644088186')) AND ((')l')))  WHEN ((0.24415399656220105) BETWEEN ('1080170213') AND (0.3505534843471433)) THEN '-377921177' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (CAST(((NULL)|(x'')) AS TEXT)); -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)), vt0.c0, ((0.012358772548750396)%(vt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0) IS FALSE))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.4017363150844583 ELSE vt0.c0 END, GROUP_CONCAT(vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.9754838677336488 THEN vt0.c0 WHEN '0.08238383770662872' THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), x'3e175dcd'))), ((vt0.c0) IS FALSE), ((vt0.c0)==(vt0.c0)) COLLATE NOCASE FROM vt0 GROUP BY ((UPPER(vt0.c0)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) LIMIT -1785937789; -- 0ms;
SELECT ALL CASE WHEN vt0.c0 THEN '' END FROM vt0; -- 0ms;
SELECT ALL DENSE_RANK() OVER ( GROUPS BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL) PRECEDING AND  UNBOUNDED FOLLOWING), COUNT(((vt0.c0)-(vt0.c0))) OVER (), ((json_quote(vt0.c0)) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()), (NOT ((vt0.c0 IN ()))) FROM vt0 ORDER BY CASE (((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((0.45509136232708713, vt0.c0, vt0.c0, '&Y', vt0.c0)))  WHEN ((vt0.c0)<>(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (vt0.c0 IN ()) END ASC, ((((vt0.c0) NOT BETWEEN ('4Jo(iS3)') AND (vt0.c0)))IS((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))) DESC; -- 1ms;
SELECT '5' COLLATE NOCASE FROM vt0 WHERE (x'') LIMIT 1910803231; -- 0ms;
SELECT DISTINCT (- ((+ (vt0.c0)))) FROM vt0 GROUP BY CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END HAVING CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (0.8681733110369297)) ELSE (((vt0.c0))<>((vt0.c0))) END; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (x'66e5')))LIKE((NOT ('-1804437751'))))); -- 0ms;
SELECT DISTINCT LIKELY((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, x'a54d')))), x'7e04', (CASE WHEN 0Xfffffffff4fc4150 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), vt0.c0, ((HEX(0x1035da73)) BETWEEN (0.17184092563849163) AND ('3X')) FROM vt0; -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((NOT (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), '*F')) AND ((((x'') NOT BETWEEN (NULL) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))AND('J\nb8nK~'))))) FROM vt0 WHERE ((((x'4494')) BETWEEN (('')) AND ((TOTAL_CHANGES())))) ORDER BY ((((((vt0.c0) ISNULL))AND(((((((((722856370)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)AND(vt0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (((((vt0.c0, 0.8557295219876967, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))LIKE((vt0.c0 IN ()))), CUME_DIST() OVER (), ((((NULL) IS TRUE))>=((vt0.c0 IN ()))) FROM vt0 ORDER BY 0.019529567956916294  NULLS FIRST, (x'' IN ())  NULLS LAST; -- 1ms;
SELECT DISTINCT CAST((((vt0.c0))=((vt0.c0))) AS BLOB) FROM vt0 WHERE ((((0Xffffffff80abecf5)>=(NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((+ (vt0.c0)) IN (CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT RANK() OVER ( GROUPS  CURRENT ROW EXCLUDE TIES), ABS(CASE WHEN vt0.c0 THEN vt0.c0 END), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT 0.4109738882645172, AVG(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), ((x'7e5b')%(CAST(vt0.c0 AS TEXT))) FROM vt0; -- 0ms;
SELECT LEAD(CAST(((vt0.c0)IS NOT(NULL)) AS NUMERIC), (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)), ((((CAST(vt0.c0 AS NUMERIC))AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0))) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT ((((((vt0.c0))<=((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((NULL)IS NOT(vt0.c0))))<=((((((((((x'')AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), SUM(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((json_valid(vt0.c0), (vt0.c0 IN ()), ((vt0.c0)-(vt0.c0))))<=((vt0.c0 COLLATE BINARY, TOTAL(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0 WHERE ((((NULL)=('Lr')) IN ())) GROUP BY ((vt0.c0 COLLATE BINARY) NOT NULL); -- 0ms;
SELECT ALL CAST(vt0.c0 AS NUMERIC) FROM vt0 WHERE ((+ (((NULL)/(0X1035da73))))); -- 0ms;
SELECT ALL TRIM(DISTINCT CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE RTRIM) FROM vt0; -- 0ms;
SELECT DISTINCT ((x'601b')>((((vt0.c0))>=((NULL))))), (((vt0.c0) BETWEEN (x'') AND (vt0.c0)) IN ()), vt0.c0, ((vt0.c0)>>(vt0.c0)) COLLATE RTRIM, ((vt0.c0 COLLATE RTRIM)>=(HEX(vt0.c0))) FROM vt0 WHERE (((0.03377548815820852 COLLATE RTRIM)<=('0.6154299165071073' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((json_array_length(vt0.c0))&(UPPER(DISTINCT vt0.c0))) FROM vt0 WHERE ((('' IN (x'')) IN ())) GROUP BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)%(vt0.c0)) END HAVING CASE WHEN ((((((((vt0.c0)OR('}VR\rTm')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN NULL WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END LIMIT 451113942; -- 0ms;
SELECT DISTINCT MAX(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 LIMIT -1264082218; -- 0ms;
SELECT DISTINCT (- ((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) FILTER(WHERE ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) OVER () FROM vt0 WHERE (CASE WHEN NULL COLLATE BINARY THEN (NOT (x'')) END); -- 0ms;
SELECT ALL ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) FROM vt0; -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))>>(((vt0.c0) BETWEEN ('Uk.B') AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT (NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((x'') IS FALSE)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0 WHERE (CAST((((((((('')OR('-2048347577')))OR(x'')))OR('pMOIj9#KL')))OR('0wᱛuG')) AS INTEGER)) GROUP BY vt0.c0 COLLATE BINARY HAVING (NULL IN ()); -- 0ms;
SELECT CAST(COUNT(vt0.c0) AS NUMERIC), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (LIKELY(vt0.c0)) AND (ABS(DISTINCT vt0.c0))), ((TOTAL(vt0.c0))=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), (((vt0.c0, vt0.c0, x'')) BETWEEN ((('L3w{⣈a춹6' IN (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (~ (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, LIKELIHOOD(vt0.c0, 0.7162961088313092), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))), vt0.c0, (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), COUNT(*)))<>((((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (((vt0.c0, vt0.c0, NULL))<((vt0.c0, x'5a36', vt0.c0)))))), ((CAST(vt0.c0 AS INTEGER))IS NOT(COUNT(vt0.c0))), vt0.c0 FROM vt0; -- 0ms;
SELECT FIRST_VALUE(((HEX(DISTINCT vt0.c0)) NOT NULL)) OVER () FROM vt0 WHERE (((((x'')%(x''))) IS FALSE)) GROUP BY (~ (NULL)), CAST(vt0.c0 COLLATE NOCASE AS NUMERIC), CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS BLOB); -- 0ms;
SELECT DISTINCT (((((((((('6山C*A#K')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))|(UPPER(DISTINCT vt0.c0))) FROM vt0 WHERE (((CASE 'MPgs'  WHEN '1240651184' THEN x'' ELSE x'' END)AND('0.0630526858399032'))); -- 0ms;
SELECT ALL '㢝묟kHc3RD鮫' FROM vt0 WHERE (((((((NULL) NOT BETWEEN ('') AND (NULL)))AND(0.16919138855596305)))AND((('') BETWEEN (x'') AND (x''))))) LIMIT 741683890 OFFSET 841024437; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (('&w0w' COLLATE RTRIM)) AND ((MIN(vt0.c0)))), (((vt0.c0)%(vt0.c0)) IN ()), ((GROUP_CONCAT(vt0.c0))IS(vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((((vt0.c0)AND(NULL)))AND(vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN (('976157653')<(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END FROM vt0; -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(''), COUNT(*) OVER (), LAST_VALUE(((CAST(vt0.c0 AS NUMERIC)) IS TRUE)) OVER () FROM vt0 WHERE (((0.5248801974644908)%(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT json_quote(((x'fd57') NOT BETWEEN (vt0.c0) AND (''))), (~ (((vt0.c0)<=(vt0.c0)))), (((vt0.c0 IN ()))||((vt0.c0 IN ()))) FROM vt0 WHERE ((((x'')!=(x'7771ab78')) IN ())); -- 0ms;
SELECT ALL GROUP_CONCAT(NULLIF(vt0.c0, vt0.c0)) OVER (), ((((((NULL)AND(vt0.c0)))AND('859014891'))) NOT BETWEEN ((NOT (vt0.c0))) AND (MIN(vt0.c0))), CAST(MAX(vt0.c0) AS INTEGER), LAST_VALUE(CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR('\')) THEN (((vt0.c0))<((vt0.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) OVER (), ((((((((((vt0.c0) NOTNULL))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(vt0.c0)))AND(AVG(vt0.c0))))AND(((vt0.c0)=(vt0.c0)))) FROM vt0 WHERE (CAST((('')*(x'')) AS NUMERIC)); -- 1ms;
SELECT DISTINCT CASE WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))==((vt0.c0))) ELSE (+ (vt0.c0)) END FROM vt0 NOT INDEXED WHERE (SQLITE_COMPILEOPTION_USED('-1742444285') COLLATE RTRIM); -- 0ms;
SELECT (((((x'f142'))>((vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)>(vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) IS FALSE) END; -- 0ms;
SELECT DISTINCT NULL COLLATE RTRIM FROM vt0; -- 0ms;
SELECT vt0.c0, x'e64d', LOWER(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END), AVG(LIKELY(DISTINCT vt0.c0)) OVER (), (- (((vt0.c0)<>(-849303559)))) FROM vt0 GROUP BY (((~ (vt0.c0)))AND('')) HAVING ((vt0.c0)>=(0.47876089093987473)); -- 0ms;
SELECT DISTINCT MAX(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), AVG(CAST(NULL AS TEXT)) FILTER(WHERE vt0.c0) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))||(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 1ms;
SELECT ALL ((((NULL) IS FALSE))IS NOT((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))) AS TEXT), (('QtH襭HP') BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((NOT (vt0.c0)))), COUNT(COUNT((~ (vt0.c0)))) FROM vt0 WHERE (((((((0.29636261492464644)-('')))OR((~ (x'')))))OR(CAST('451113942' AS NUMERIC))));SELECT ALL MIN(((vt0.c0)LIKE(''))) FROM vt0 WHERE (((((((((((((-1565283908)OR(((x'') BETWEEN (0x5d3511af) AND ('203138')))))AND(NULL)))AND(x'')))OR(NULL COLLATE NOCASE)))OR(((0.6638881511730687)||(x'')))))OR(CASE -72886074  WHEN NULL THEN 0.8270900925743315 WHEN 4.61572577E8 THEN '-209782923' WHEN 0.36660647439130034 THEN x'5509' END))); -- 1ms;
SELECT DISTINCT (~ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('H')) FROM vt0 WHERE (IFNULL(HEX(DISTINCT x''), (('892619665') NOT BETWEEN ('	r') AND (0.2525416936928816)))); -- 0ms;
SELECT ALL CAST(vt0.c0 AS NUMERIC) FROM vt0 GROUP BY ((vt0.c0) NOTNULL) COLLATE RTRIM HAVING '7'; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0 WHERE (((NULLIF(DISTINCT NULL, x''))<(CAST(x'f0ab' AS REAL)))); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)|(vt0.c0))) OVER () FROM vt0 WHERE ((('354208571' COLLATE BINARY)LIKE(CASE WHEN NULL THEN 1974076313 ELSE NULL END))); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (+ (2.089741073E9)) END FROM vt0 WHERE ((+ ((~ ('|J'))))); -- 1ms;
SELECT DISTINCT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((0.19025788297083768 IN ()), (vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) FROM vt0 WHERE (CHAR(((('0.7027262623305763')) BETWEEN ((NULL)) AND ((NULL))))) GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT CAST(SUM(vt0.c0) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT (- (((vt0.c0) NOT NULL))), CASE WHEN (((0.004682111593233396))<((vt0.c0))) THEN AVG(vt0.c0) ELSE TOTAL(vt0.c0) END, ((vt0.c0) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), UPPER(DISTINCT vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL AVG((- (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, LIKELIHOOD(vt0.c0, 0.5246919495192481) COLLATE NOCASE, CAST(((vt0.c0)%(vt0.c0)) AS INTEGER) FROM vt0 WHERE ((NOT (((0.3772493873052448) NOTNULL)))); -- 0ms;
SELECT DISTINCT CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)-(vt0.c0)) THEN (vt0.c0 IN ()) END, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)+(vt0.c0)))))AND(INSTR(3.80215075E8, vt0.c0))), ((x'')GLOB(COUNT(*))) FROM vt0 WHERE ((((((- (NULL)))OR(LTRIM(0.7602270391878112))))OR(NULL COLLATE BINARY))) LIMIT 107460695 OFFSET 1682740945; -- 0ms;
SELECT DISTINCT TOTAL(((0.7353557829300992) ISNULL)), (vt0.c0 IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))), CASE vt0.c0 COLLATE BINARY  WHEN (- (0.09510864473619085)) THEN (~ (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)*(vt0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) END FROM vt0 WHERE ((- (((0.8239259924162061) BETWEEN (0X96e8324) AND ('976938972'))))); -- 0ms;
SELECT AVG(vt0.c0), ROW_NUMBER() OVER ( ORDER BY CAST(1430532416 AS BLOB) COLLATE BINARY COLLATE RTRIM ASC, ((((vt0.c0)>=('5'))) IS TRUE), vt0.c0 ASC), ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE FROM vt0 GROUP BY ((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ISNULL), vt0.c0; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((COUNT(vt0.c0))) AND ((((vt0.c0) ISNULL)))), LAST_VALUE((((vt0.c0)) BETWEEN ((((vt0.c0)OR(vt0.c0)))) AND ((-311143170)))) OVER (), ((NULL)&(vt0.c0 COLLATE BINARY)) FROM vt0 ORDER BY ((((((((((vt0.c0) IS FALSE))AND(((vt0.c0) NOT NULL))))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(ABS(DISTINCT vt0.c0))), x'' DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) IS TRUE)))), NULL, ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(IFNULL(vt0.c0, vt0.c0))))AND(((vt0.c0) IS FALSE))))AND(vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL (('C.')>(vt0.c0)) COLLATE NOCASE, CAST(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), CAST(NULL AS BLOB) COLLATE RTRIM FROM vt0 WHERE (((((x'')-(x'63de')))<>((((0Xffffffffd5785986))>=((0.39313968041203384)))))) ORDER BY CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE LIMIT 1109972479 OFFSET 148661444; -- 0ms;
SELECT ALL '', ((((((((((vt0.c0)IS(vt0.c0)))AND('1909279299')))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((- (vt0.c0)))))OR(((vt0.c0)<=(vt0.c0)))), vt0.c0 FROM vt0 WHERE (((NULLIF(DISTINCT x'', NULL)) IS TRUE)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((('-105643416')=(vt0.c0))) FROM vt0 WHERE ('1166527731'); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)IS NOT(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((((x'') ISNULL))GLOB(('' IN ())))) ORDER BY (((vt0.c0) NOTNULL) IN ())  NULLS FIRST; -- 1ms;
SELECT ALL CAST(NULL AS BLOB) FROM vt0 GROUP BY ((vt0.c0)<(vt0.c0)) COLLATE RTRIM, ((((vt0.c0)|(vt0.c0)))IS((((vt0.c0)) NOT BETWEEN ((0.3550888370988745)) AND ((vt0.c0))))), CASE (+ (vt0.c0))  WHEN '' THEN ((((x'')OR(vt0.c0)))OR('')) ELSE LOWER(DISTINCT 0X2f297514) END HAVING CAST(((((vt0.c0)OR(0.772968476544747)))OR('-132910734')) AS REAL) LIMIT 271964787; -- 0ms;
SELECT ROW_NUMBER() OVER (), LOWER(CAST(vt0.c0 AS NUMERIC)), AVG(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0 WHERE (((CASE NULL  WHEN 0xffffffff85e8b247 THEN x'' WHEN NULL THEN x'969a' WHEN 1.240651184E9 THEN NULL END)-(COALESCE(DISTINCT 0.6969379514565813, x'')))); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((-8.15537932E8, x'', (vt0.c0 IN ()), x'f614' COLLATE NOCASE, (- (vt0.c0)))) AND ((vt0.c0, 0.9265318688355334, ((vt0.c0)||(vt0.c0)), 0x26849920, (+ (vt0.c0))))), CASE WHEN (('') ISNULL) THEN vt0.c0 COLLATE RTRIM ELSE 0Xffffffffc7d9e837 END, ((LIKELY(vt0.c0))==((vt0.c0 IN (NULL)))), '0.9151654684010919', SUM(CASE WHEN vt0.c0 THEN vt0.c0 END) FROM vt0 GROUP BY (('646224160')<<(vt0.c0)) HAVING x'42a3'; -- 0ms;
SELECT DISTINCT MAX(CAST(vt0.c0 AS REAL)) COLLATE NOCASE FROM vt0 WHERE (CAST(((('450375403')) NOT BETWEEN (('0.5745791267416288')) AND ((0Xffffffffdd88ae25))) AS NUMERIC)) GROUP BY (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) IS TRUE)))), vt0.c0, ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)LIKE(vt0.c0)))); -- 1ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.008889889560849684 END) NOT NULL), CASE x'2d16'  WHEN CHANGES() THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.c0)-(vt0.c0)) END, json_insert(((vt0.c0) NOT BETWEEN (0xffffffffa9fd918e) AND (-9.3481104E7)), ((((vt0.c0)OR(vt0.c0)))OR('')), ((vt0.c0) NOTNULL)) FROM vt0 GROUP BY (- ((+ (vt0.c0)))), (('451113942') NOT NULL) COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))); -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)||(vt0.c0)))*(((vt0.c0) ISNULL))) FROM vt0 WHERE (((((CASE 0X36c3cf07  WHEN 1750392044 THEN x'31ef' END)OR((~ ('0.11537276398973972')))))AND(UNLIKELY(0.03428149156302962)))); -- 0ms;
SELECT ((((NULL)<>(vt0.c0)))|(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN (COUNT(*), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), 1499051653, ((((vt0.c0 IN (vt0.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (- (((vt0.c0) NOT NULL))) FROM vt0 WHERE ((((2.080482952E9)GLOB(x'')) IN ((('1986244667') NOT BETWEEN (-430042019) AND (x''))))) ORDER BY ((((((((((((vt0.c0)OR('-98125214')))AND(vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((((vt0.c0))<=((vt0.c0))))))OR((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((GROUP_CONCAT(vt0.c0)))), (((vt0.c0) IS TRUE) IN ('0.5745791267416288')), ((CASE WHEN vt0.c0 THEN 0.06957218308566937 ELSE vt0.c0 END) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), '!3O', vt0.c0 COLLATE BINARY FROM vt0 WHERE (CAST(((0.7911640378351499)IS NOT(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT (- (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((((x'', '-1064705547', 'yu', x'', 0xffffffffa259e928))>=((NULL, '()', x'', -1600630432, 0.10148830697192912))) COLLATE NOCASE) GROUP BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND (((vt0.c0 IN ())))) HAVING (((vt0.c0)IS(vt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT SUM(TRIM(DISTINCT vt0.c0, vt0.c0)) OVER () FROM vt0 WHERE ((+ ((((x'', 0.045154633007694955, -1e500)) NOT BETWEEN (('净nSC)vx#', 0.665842886559223, 4.70137631E8)) AND ((NULL, NULL, NULL)))))); -- 0ms;
SELECT (NOT (vt0.c0)) FROM vt0 WHERE (((((('1704505644')<(0.7070423802983086)), (('450375403')<=(NULL)), CAST(0.28314621888643887 AS INTEGER)))<(((- ('d')), ((x'6e8af889')*(NULL)), (~ ('1426668890')))))) GROUP BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE); -- 0ms;
SELECT ALL CASE WHEN CASE vt0.c0  WHEN x'' THEN vt0.c0 END THEN ((vt0.c0)>(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN COUNT(*) END FROM vt0 WHERE (((((((-1.847948E8) NOT BETWEEN (NULL) AND (NULL)))OR(x'')))AND(((NULL)=(NULL))))); -- 1ms;
SELECT MIN(CAST(vt0.c0 AS BLOB)) FROM vt0 WHERE (x'd5ae') GROUP BY x'' LIMIT 2099410954 OFFSET 1836194907; -- 0ms;
SELECT ALL (((((~ (vt0.c0)))AND(MIN(vt0.c0))))AND(AVG(vt0.c0))) FROM vt0 WHERE ((((+ ('662432992')))LIKE(NULLIF(DISTINCT -414359472, 0.2477095300345361)))); -- 0ms;
SELECT ALL ((x'0892' IN ()) IN ()) FROM vt0 LIMIT -171069253 OFFSET -1994115618; -- 0ms;
SELECT ALL vt0.c0, (((((((vt0.c0))<>((vt0.c0))))AND(((vt0.c0)|(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((0.38959864223732943) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT vt0.c0, ((CASE WHEN vt0.c0 THEN '203138' END) NOT NULL), CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN 998200293 END FROM vt0 GROUP BY (('-1956677284') NOTNULL); -- 0ms;
SELECT DISTINCT '|N', ((vt0.c0)>>(vt0.c0 COLLATE RTRIM)), MAX(''), GROUP_CONCAT(CASE WHEN vt0.c0 THEN vt0.c0 END) OVER (), CASE (((NULL))<((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(x'')) ELSE LOWER(DISTINCT vt0.c0) END FROM vt0 WHERE ((((+ ('-840590571'))) NOT NULL)); -- 0ms;
SELECT ALL LAST_VALUE('+') OVER () FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0)+(vt0.c0))) OVER (), GROUP_CONCAT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))), ROW_NUMBER() OVER () FROM vt0 WHERE ((((('380215075')/(0.3330010221211669))) IS TRUE)) GROUP BY vt0.c0 HAVING ((((vt0.c0)%(vt0.c0)))>((((vt0.c0))>(('-98126249'))))); -- 0ms;
SELECT DISTINCT ((CAST(NULL AS INTEGER)) BETWEEN ((('1240651184') IS FALSE)) AND (CASE 0.5177873489058514  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ((+ (json_valid(x'7b6d')))); -- 0ms;
SELECT ALL COUNT((- (vt0.c0))) OVER () FROM vt0 LIMIT -1346472475; -- 0ms;
SELECT DISTINCT 0.3188334767290829 FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(x'' AS NUMERIC) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((((((((((((vt0.c0)*(vt0.c0)))OR(vt0.c0)))OR(COALESCE(DISTINCT vt0.c0, vt0.c0))))AND(CAST(vt0.c0 AS TEXT))))AND((vt0.c0 IN ()))))OR(TOTAL(vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 LIMIT -1613202403; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (0.7095728782644395 COLLATE RTRIM); -- 0ms;
SELECT ALL ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 GROUP BY ((COALESCE(DISTINCT vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), NULL, x''; -- 0ms;
SELECT ALL (vt0.c0 IN (CAST(vt0.c0 AS REAL))) FROM vt0 LIMIT 932685070; -- 1ms;
SELECT DISTINCT COUNT((vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT CASE ((vt0.c0) IS TRUE)  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END, NULL, (NOT ((+ (vt0.c0)))) FROM vt0 WHERE ((((('1844641549') NOTNULL)) NOT BETWEEN (((((((((x'bcdf')OR(0X5a2421fd)))AND(0X49cc9d09)))AND(0.3662947145918489)))OR('-1333809976'))) AND (((0.17028424417574461)<=(NULL))))); -- 0ms;
SELECT LAST_VALUE((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) OVER () FROM vt0; -- 0ms;
SELECT (((((vt0.c0))>((vt0.c0))))/(NULL)) FROM vt0 WHERE (((((-1.565283908E9) NOTNULL))<>((+ (819762743))))); -- 0ms;
SELECT DISTINCT CAST((+ (x'4e61')) AS TEXT) FROM vt0 ORDER BY (~ (((vt0.c0) NOTNULL))) ASC  NULLS FIRST, ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))AND((vt0.c0 IN (vt0.c0))))  NULLS FIRST, ((-477035318)AND((NOT (vt0.c0))));SELECT PERCENT_RANK() OVER () FROM vt0 WHERE (((CASE WHEN x'a93a' THEN '|ycﯝtcf' ELSE x'6962' END) IS FALSE)) GROUP BY CASE WHEN 0.005910007213034141 THEN ((((vt0.c0)AND(vt0.c0)))AND(NULL)) END, (NOT (-1.232234419E9)), 'R]9'; -- 0ms;
SELECT DISTINCT ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0)) IS TRUE) FROM vt0 WHERE (TIME(CAST(0X39bcfe05 AS BLOB), NULL, (+ (0.11866312386645128)), UPPER(DISTINCT -9.8125214E7), (- (NULL)))) ORDER BY ((vt0.c0 COLLATE NOCASE)|(CAST('1030139920' AS BLOB))) DESC; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((COUNT(*)) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS REAL) FROM vt0 WHERE ((('-366520631') NOT BETWEEN ('AcqBR' COLLATE RTRIM) AND ((('7ZN') NOT BETWEEN ('0.926462222116597') AND (x''))))) ORDER BY (((vt0.c0 IN ())) ISNULL) DESC  NULLS LAST; -- 1ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c0))IS NOT(SUM(vt0.c0))) FROM vt0; -- 0ms;
SELECT COALESCE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (NOT (vt0.c0))) FROM vt0 WHERE ((~ (LIKELIHOOD(DISTINCT '\', 0.005504837095582027)))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)>=('998200293')) AS NUMERIC) FROM vt0 WHERE ((~ ((((('5Gw̾l/')OR(0xffffffffef1e8933)))OR('1089517316'))))) GROUP BY ((((((((((vt0.c0)>=(vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))AND(((vt0.c0)OR(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (NULL)))) ORDER BY CASE TRIM(vt0.c0, vt0.c0)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)%(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END ASC  NULLS FIRST, ((TYPEOF(DISTINCT vt0.c0))>=(((-990850192)OR(vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((vt0.c0)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), SUM(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))), (((vt0.c0) ISNULL) IN ()), ((((+ (vt0.c0)), ((vt0.c0) ISNULL), GROUP_CONCAT(vt0.c0)))!=(((vt0.c0 IN (vt0.c0)), vt0.c0, vt0.c0))), '-1644088186' FROM vt0 WHERE (CASE WHEN ((((x'')AND(0X3c1f7225)))AND(x'')) THEN (- (x'')) ELSE (((5.27704816E8))>((NULL))) END); -- 0ms;
SELECT DISTINCT (NOT (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((CHANGES()) NOT NULL)); -- 1ms;
SELECT DISTINCT ROUND('/e', ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) FROM vt0 GROUP BY (- (vt0.c0 COLLATE NOCASE)) HAVING (((vt0.c0)LIKE(vt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)<(vt0.c0)))), -410396204, x'' FROM vt0 WHERE (((ABS('0.0630526858399032')) IS FALSE)) ORDER BY (+ ('662432992')) COLLATE BINARY ASC  NULLS FIRST, ((vt0.c0)*((vt0.c0 IN ()))), (((vt0.c0 IN ()))|(x'3757')) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((vt0.c0)-(vt0.c0)) COLLATE RTRIM FROM vt0 ORDER BY CAST((((vt0.c0))!=((vt0.c0))) AS BLOB) LIMIT -184794800; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)-(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT CAST(TOTAL(vt0.c0) AS TEXT), ((vt0.c0 COLLATE BINARY) BETWEEN ((~ (vt0.c0))) AND (NULL)), CASE IFNULL(vt0.c0, vt0.c0)  WHEN vt0.c0 COLLATE NOCASE THEN (~ (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE '1432222293' END END FROM vt0 WHERE (((MIN(x'0372', '1724877131', x'7242', ''))IS(TRIM(DISTINCT '2067041498')))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS(vt0.c0)))LIKE(((vt0.c0)||(vt0.c0)))), vt0.c0, CASE CAST(vt0.c0 AS BLOB)  WHEN vt0.c0 THEN vt0.c0 END FROM vt0 WHERE ((((NULL IN ()))AND((((0.1456487536996267))<=((x'')))))); -- 0ms;
SELECT ALL ABS(TOTAL(NULL)) FROM vt0 WHERE ((+ (x''))); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM vt0 WHERE (x'852e') GROUP BY vt0.c0, vt0.c0, ')I'; -- 0ms;
SELECT ALL (COUNT(*) IN ()) FROM vt0 WHERE (CAST(CAST(1.836194907E9 AS TEXT) AS TEXT)) GROUP BY TRIM(DISTINCT CAST(vt0.c0 AS INTEGER)) HAVING (((vt0.c0)) BETWEEN ((2067851315)) AND ((((vt0.c0)*(4.61572577E8))))); -- 0ms;
SELECT DISTINCT LAG(LIKE((vt0.c0 IN ()), (vt0.c0 IN ()), '-'), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN NULL THEN vt0.c0 END, CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()))) AND (((NOT (vt0.c0)), ((vt0.c0)AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((('1228650561' IN ()), CAST(vt0.c0 AS TEXT), ((vt0.c0)=(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE), vt0.c0)))) OVER () FROM vt0 WHERE (((CASE WHEN 0.8399687289172052 THEN '-2183695' END)LIKE((x'bed8' IN (3.67745875E8, '-815537932'))))); -- 3ms;
SELECT DISTINCT CAST(ABS(DISTINCT vt0.c0) AS INTEGER) FROM vt0 ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN CAST(vt0.c0 AS NUMERIC) END  NULLS FIRST, vt0.c0 ASC LIMIT 367745875 OFFSET 1733725684; -- 0ms;
SELECT ALL CAST(((vt0.c0) ISNULL) AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 COLLATE BINARY THEN NULL WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN DATE(vt0.c0, 'a3\n', vt0.c0) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END, CAST(0.8845836174706319 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE ((((((((((((((('-228079638')OR('}^''')))OR(0Xffffffffaf6da755)))AND(NULL)))OR(0.21518532690723047)))AND(NULL)))OR(0.09196784994991969))) BETWEEN (CASE 0.6634532019615178  WHEN x'' THEN 0.5090304733245544 ELSE 0.7937617965276529 END) AND (NULLIF(NULL, x'')))); -- 0ms;
SELECT ((((((vt0.c0)%(vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0)==(vt0.c0)))) FROM vt0 WHERE (0.4128925883861354); -- 0ms;
SELECT DISTINCT ((((NULL)OR('2069528290' COLLATE NOCASE)))OR(AVG(vt0.c0))), ((~ (vt0.c0)) IN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END) NOT BETWEEN ((('Q쟪')OR(vt0.c0))) AND (json_array_length(vt0.c0, vt0.c0))) FROM vt0;SELECT CAST(vt0.c0 AS INTEGER) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT RANK() OVER (), CAST(((vt0.c0) NOT BETWEEN (x'1f74') AND (vt0.c0)) AS INTEGER), vt0.c0 FROM vt0 WHERE ((((0x1ad82eeb, (((((((('')AND(NULL)))AND(x'')))OR(x'f6ea')))AND(NULL)), (NULL IN ('')), CAST('980707320' AS BLOB), CASE WHEN '197516489' THEN 'q~' END))>(('', CASE WHEN x'' THEN 0.687993489695312 WHEN '-1644088186' THEN 369240544 WHEN NULL THEN '-1404506308' WHEN NULL THEN '0.4728428733690999' WHEN 0.8603458359041485 THEN '囉5' ELSE x'5c26' END, ((NULL)>=('pmoij9#kl')), ('}I)af' IN ()), x'' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT (0.644291149062431 IN (vt0.c0, ((vt0.c0)*(vt0.c0)))) FROM vt0 WHERE (((((((0X403b1d78)IS NOT(0.9133465080763457)))OR(((((((((x'778a')OR('d\r')))AND(NULL)))OR('646224160')))OR(x'7d47')))))OR(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)-(NULL COLLATE RTRIM)), (((+ (x'1f974d1f')))>>(((vt0.c0)>=(vt0.c0)))), (~ (((vt0.c0)IS NOT(vt0.c0)))) FROM vt0; -- 0ms;
SELECT (CAST(vt0.c0 AS BLOB) IN ()), ((CAST(vt0.c0 AS INTEGER)) NOTNULL), MAX(((vt0.c0)<=(vt0.c0))) FROM vt0 WHERE ((~ (((x'8f35')OR(0xffffffffa2ae5c8a))))); -- 0ms;
SELECT TOTAL((vt0.c0 IN ()) COLLATE NOCASE) OVER (), CAST(UPPER(vt0.c0) AS BLOB), (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()), ((((((vt0.c0)+(vt0.c0)))OR(((vt0.c0)%(vt0.c0)))))OR(ABS(vt0.c0))), COUNT(json_remove(vt0.c0, vt0.c0)) FROM vt0 WHERE (x'e1ea'); -- 0ms;
SELECT LAG(((((vt0.c0) NOT NULL)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE RTRIM)), (+ ((('~Z') ISNULL))), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()) FROM vt0 WHERE ((+ (LIKELIHOOD('U*-8688206704769013440 1265:1339-+N', 0.032985403984255646)))) ORDER BY CASE ((vt0.c0)==(NULL))  WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN ((vt0.c0)<(NULL)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END WHEN (- (vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END, ((((LIKE(vt0.c0, vt0.c0))AND('')))OR(x''))  NULLS LAST; -- 0ms;
SELECT ALL GROUP_CONCAT((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) COLLATE NOCASE, ((NULL COLLATE BINARY)*(((vt0.c0) IS FALSE))), (((NULL)) BETWEEN ((((((x'55db')OR(vt0.c0)))AND(vt0.c0)))) AND (((- (vt0.c0))))) FROM vt0 WHERE (-1807971218); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.2796702013410164)))) FROM vt0 WHERE (CAST(((0.7769645273818463)<=(165502367)) AS INTEGER)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN 0.1904300807029543 THEN 6.15641541E8 ELSE x'' END) NOT BETWEEN (('P9' IN (NULL, 0.5628331689829875))) AND ((((((((('#D')AND(-9223372036854775808)))AND(NULL)))OR(x'')))AND(''))))) GROUP BY '646224160'; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END COLLATE NOCASE FROM vt0 WHERE (CASE WHEN ((x'b3ee')/(NULL)) THEN (-1.404506308E9 IN ()) ELSE ('-1701387962' IN ()) END); -- 0ms;
SELECT DISTINCT CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt0.c0)OR('1441251976')) END FROM vt0 WHERE (CASE NULL  WHEN 0.2350211251609945 THEN x'' END COLLATE NOCASE) GROUP BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), LIKELIHOOD(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, 0.7366909542468745), CAST(((((vt0.c0)OR(vt0.c0)))AND(0.3916158867217757)) AS NUMERIC) HAVING (+ (ABS(vt0.c0))) LIMIT 1240651184; -- 1ms;
SELECT ALL '', ABS(DISTINCT (+ (vt0.c0))), LEAD(IFNULL('솴7\r', (((vt0.c0)) NOT BETWEEN (('0.38912076892279734')) AND ((vt0.c0)))), ((x'' COLLATE NOCASE) IS TRUE), (- ((((('3Y餠r')AND(vt0.c0)))AND(vt0.c0))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((TRIM(vt0.c0, '-228079638'))>=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), COUNT((~ (vt0.c0))), (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) NOTNULL)))), LOWER((+ (vt0.c0))), (~ (CAST(vt0.c0 AS INTEGER))) FROM vt0 LIMIT -1132998343 OFFSET -1925264539; -- 1ms;
SELECT DISTINCT ((vt0.c0)IS(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((- (CAST(x'' AS INTEGER)))) LIMIT 1499051653 OFFSET 1809316191; -- 0ms;
SELECT ALL COUNT(COUNT(((((vt0.c0)OR(NULL)))AND(vt0.c0)))), vt0.c0, ((vt0.c0 COLLATE RTRIM)>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), (+ ('331067117')), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0;SELECT DISTINCT (((+ (vt0.c0)))==(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE ((((((('687347334'))>((x'')))))>(((+ ('49')))))) ORDER BY ((NULL) NOTNULL)  NULLS LAST; -- 0ms;
SELECT SUM(((vt0.c0)IS(vt0.c0))) OVER (), CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN NULL THEN (vt0.c0 IN ()) END, x'' FROM vt0 WHERE (NULL); -- 0ms;
SELECT (vt0.c0 IN ()) COLLATE RTRIM FROM vt0 WHERE ((NOT (('998200293' IN ('♵Q#pBV'))))) GROUP BY CAST(((vt0.c0)!=(vt0.c0)) AS NUMERIC) HAVING ((vt0.c0) ISNULL) COLLATE RTRIM LIMIT -1419530442 OFFSET 1836194907; -- 0ms;
SELECT ALL (((vt0.c0)<=(vt0.c0)) IN ((NOT ('1228650561')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), HEX(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 'H*ᦂi', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))), ((AVG(vt0.c0)) BETWEEN (AVG(vt0.c0)) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN (vt0.c0, 0.06691257186902011)) COLLATE NOCASE, FIRST_VALUE(((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)LIKE(-1.359122553E9))))) OVER (), ((((vt0.c0)>=(vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) NOT NULL))) FROM vt0 NOT INDEXED WHERE (CASE WHEN '0.8372962405841913' COLLATE RTRIM THEN (- (NULL)) ELSE CASE NULL  WHEN x'' THEN '' END END); -- 0ms;
SELECT ((((((vt0.c0)>=(vt0.c0)))AND(AVG(vt0.c0))))AND(vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL ((CAST(0.11600757130627393 AS REAL)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))), (-815537932 IN ()) COLLATE BINARY, '152429389' FROM vt0 WHERE (((((((x'a7eb') NOT NULL))AND((NULL IN ()))))OR(((NULL) BETWEEN (NULL) AND (NULL))))) LIMIT -1611557838; -- 0ms;
SELECT (((((((((vt0.c0 IN ()))AND(((662432992)IS(vt0.c0)))))OR(UNLIKELY(DISTINCT vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(PRINTF(0Xffffffffa442757f))) FROM vt0 WHERE ((('') ISNULL)); -- 0ms;
SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(x'')))AND('ma')))) FROM vt0 WHERE (((((((((((0.8359895861177951)AND(NULL)))AND(' C')))AND(NULL)))AND('|M')))==(NULL))) GROUP BY ((CAST(vt0.c0 AS NUMERIC)) NOT NULL), (json_type(x'') IN (((vt0.c0)<<(vt0.c0)))), ((((((((((vt0.c0)<<(vt0.c0)))AND('-586870520' COLLATE BINARY)))AND((+ (vt0.c0)))))OR(((vt0.c0) NOT NULL))))AND(vt0.c0)) HAVING vt0.c0 ORDER BY ((INSTR(vt0.c0, x'')) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, -593666510, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT (~ (x'3069' COLLATE RTRIM)), ((0.7467873553103827) IS TRUE), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((NOT (-9.4576095E7)))<<(CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE ((((('1876785148') BETWEEN (0X172db23a) AND (-164220233))) ISNULL)); -- 0ms;
SELECT ALL TOTAL(('-2123013155' IN ())) FROM vt0; -- 0ms;
SELECT DATETIME(((vt0.c0)LIKE(vt0.c0)), MAX(vt0.c0), TIME(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0)AND(vt0.c0)), 1e500, CASE 0x74651a5f  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, vt0.c0 COLLATE NOCASE) FROM vt0 WHERE (CASE WHEN CAST(NULL AS INTEGER) THEN (((NULL))>((x'9c56'))) WHEN TRIM(x'') THEN CAST(-1928253840 AS REAL) WHEN (((('')OR('')))OR(NULL)) THEN x'' COLLATE NOCASE ELSE '' COLLATE NOCASE END); -- 0ms;
SELECT CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)%(vt0.c0)) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN x'' THEN NULL ELSE vt0.c0 END FROM vt0 WHERE ((((((-2130738873)==('0.7315969179460936')), (((0.0371836891890972)) NOT BETWEEN ((1.444081395E9)) AND ((x''))), (((0.7873978386609451))<>((0.8409714724739297)))))<((((0.8635313082014083) IS TRUE), (+ ('-98126249')), ((('.v묟')) BETWEEN ((0.11724878751058398)) AND (('J%+킏o'))))))); -- 0ms;
SELECT (((- (vt0.c0))) NOT NULL) FROM vt0 WHERE ((((((x''))!=((x'')))) NOT BETWEEN (((NULL)==('fvi胏慧'))) AND (((('165366054', -2123013155, '1723601153'))<=((x'', '<To,YA,', 4.61572577E8)))))) GROUP BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING (((vt0.c0, vt0.c0, vt0.c0, NULL, 0.15799461587703523)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')), CASE WHEN vt0.c0 THEN '460979421' END, (+ (vt0.c0)), NULLIF(vt0.c0, vt0.c0))) AND ((CHANGES(), vt0.c0 COLLATE NOCASE, (~ (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM))); -- 0ms;
SELECT ALL ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((0.2617790469910213) ISNULL))) FROM vt0 WHERE ((~ ((((NULL))<((NULL)))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN vt0.c0 END, CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND ('A-u')) ELSE (- (vt0.c0)) END, CHANGES(), vt0.c0, ((vt0.c0 COLLATE BINARY) ISNULL) FROM vt0 WHERE (CASE WHEN '0.8946985300716817' THEN x'' WHEN x'83a7' THEN 0.9201020480589643 WHEN 'yX*x1+u' THEN 0x17a80947 END COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND (('^g'))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) IS TRUE) FROM vt0 WHERE (CASE WHEN ((NULL)LIKE(x'')) THEN '2104115145' ELSE json_array_length(0.39206393459302513, x'') END);SELECT ALL ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('-366520631') AND (((0xfffffffff62579eb) NOT BETWEEN (vt0.c0) AND (1.497044378E9)))) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (IFNULL(vt0.c0, NULL))) FROM vt0; -- 3ms;
SELECT DISTINCT (NOT (LIKE(vt0.c0, vt0.c0))) FROM vt0 LIMIT -1995292838 OFFSET 1873292764; -- 0ms;
SELECT ALL ((~ (vt0.c0)) IN ((- (vt0.c0)), ((vt0.c0)OR(vt0.c0)))), (CAST(vt0.c0 AS INTEGER) IN ()), 1751393202 FROM vt0 WHERE (((((((x'')GLOB(x'3792c9c6')))AND(((((NULL)OR('-2070647843')))OR(x'')))))AND((('-1807971218') IS TRUE)))); -- 0ms;
SELECT (NOT (CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE (((((x'') IS FALSE)) NOT BETWEEN (0.060151975953028236) AND ('-ᏽ43fv0%'))) LIMIT -1232234419 OFFSET 842177282; -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<(((- (vt0.c0))))) FROM vt0 WHERE ((((x'')<<(NULL)) IN ())) LIMIT -1232234419 OFFSET -114739043; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((((((x'')AND(vt0.c0)))AND(-1.92825384E9)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN '[_Gb{5j' END, ((AVG(vt0.c0))/(((vt0.c0)AND(vt0.c0)))), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, (vt0.c0 IN (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((0.6987985978043755, vt0.c0 COLLATE RTRIM, GROUP_CONCAT(vt0.c0)))) FROM vt0 WHERE (((((((((CAST(x'' AS INTEGER))AND(x'')))OR(NULL)))AND((NOT ('')))))OR((((NULL))<>((0.3480124026874226)))))); -- 0ms;
SELECT ALL x'27cc' FROM vt0 WHERE (CAST(((x'e62d') BETWEEN (NULL) AND (x'')) AS TEXT)); -- 1ms;
SELECT DISTINCT AVG(CASE '-1630704909'  WHEN vt0.c0 THEN '-201565046' ELSE vt0.c0 END) OVER ( ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  NULLS FIRST), ((CASE 1538080284  WHEN vt0.c0 THEN vt0.c0 ELSE '<A' END) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (MIN(vt0.c0))), '-1148355621', LOWER(((vt0.c0) NOTNULL)), x'' FROM vt0 WHERE (DATETIME(((((NULL)OR('1076934383')))AND(0.30771827770333227)), ((NULL)*(x'29ed')), ((((0.40712908031469175)AND(x'')))AND('(4n3{b⁼')))); -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS NUMERIC), ((COUNT(*))==(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (NOT (('ttᦂ' IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ ((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)OR(vt0.c0))), (((+ (vt0.c0)))GLOB(vt0.c0 COLLATE NOCASE)), ((vt0.c0) NOT BETWEEN ((NOT (vt0.c0))) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL))==(vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (json_quote(CASE WHEN 1.783330181E9 THEN '' ELSE NULL END)); -- 0ms;
SELECT DISTINCT 0.8563980495050832 FROM vt0 WHERE (HEX(x'9b2b' COLLATE BINARY)); -- 1ms;
SELECT DISTINCT CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN SUM(vt0.c0) THEN (- (vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN ()) WHEN '279427273' COLLATE NOCASE THEN CASE x'4a99'  WHEN vt0.c0 THEN vt0.c0 ELSE 0.7767863134105274 END END FROM vt0 GROUP BY ((CAST(vt0.c0 AS REAL)) IS TRUE); -- 0ms;
SELECT LIKELIHOOD(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, 0.5383484598805084) FROM vt0; -- 0ms;
SELECT ((((CAST(0.0869798418317066 AS REAL))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(LIKELY(vt0.c0))) FROM vt0 WHERE (TYPEOF(DISTINCT ((((((((NULL)AND(0xffffffffad14ee70)))OR('0.7027262623305763')))AND('417574980')))OR(x'')))); -- 0ms;
SELECT NTILE(LOWER(((vt0.c0) IS FALSE))) OVER () FROM vt0 WHERE (CAST((+ ('1986244667')) AS NUMERIC));SELECT DISTINCT (((CAST(vt0.c0 AS INTEGER)))>(((vt0.c0 IN (vt0.c0))))), PERCENT_RANK() OVER (), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN TOTAL(vt0.c0) WHEN (NOT (vt0.c0)) THEN '' END FROM vt0 WHERE (CASE HEX(0.809215090936913)  WHEN NULLIF(DISTINCT 0.0783658379150608, NULL) THEN json_quote('>G嚱V<{O') ELSE x'a352' END); -- 0ms;
SELECT DISTINCT MIN((vt0.c0 IN (vt0.c0))) FROM vt0 ORDER BY vt0.c0  NULLS LAST; -- 0ms;
SELECT x'' COLLATE NOCASE FROM vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((+ (CAST('' AS INTEGER)))); -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL), (((((0Xffffffffa30aa19b)OR(vt0.c0)))OR(vt0.c0)) IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), (- (((vt0.c0) ISNULL))) FROM vt0 WHERE (CASE WHEN NULL THEN (('')==(NULL)) END); -- 0ms;
SELECT CAST((vt0.c0 IN ()) AS BLOB), ((x'4309')*(CASE vt0.c0  WHEN x'' THEN vt0.c0 END)), AVG(CAST(vt0.c0 AS REAL)) FROM vt0 WHERE (CAST((('1240651184')OR('-1735186268')) AS INTEGER)) ORDER BY ((x'')%(vt0.c0))  NULLS LAST; -- 0ms;
SELECT NULL FROM vt0; -- 0ms;
