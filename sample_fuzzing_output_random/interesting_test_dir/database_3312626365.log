-- Time: 2024/06/07 17:06:39
-- Database: database65
-- Database version: 3.40.0
-- seed value: 3312626365
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT , c1 TEXT , c2 BLOB ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4, +c5 INTEGER , +c6 REAL ); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2, c1) VALUES (NULL, NULL, 0.4845158179002609); -- 0ms;
INSERT OR ABORT INTO t0(c0, c1) VALUES (NULL, x''); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c6, c1, c5, c3, c4) VALUES (NULL, -356747707, x'', 410880524, 0.9959062223270655, '410880524'); -- 0ms;
INSERT OR IGNORE INTO rt1(c5, c2, c4, c1, c3, c0, c6) VALUES (NULL, 0.5227959213372745, x'9495', 'j~O!4', '-234080424', '1638193020', 1814636212); -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c2, c3, c1, c0) VALUES (NULL, 0.5902620812572896, x'', NULL, 0.5227959213372745), ('', 0.057687167997695354, 0Xc352a4, NULL, NULL), (NULL, NULL, 4.10880524E8, '', x'1c2d'); -- 1ms;
PRAGMA legacy_file_format = false; -- 1ms;
INSERT OR IGNORE INTO rt1(c4, c1, c5, c3, c6) VALUES ('410880524', 0xffffffffa4173d56, 1135870197, '},\r', NULL); -- 0ms;
PRAGMA main.default_cache_size = 1814636212; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('/m'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO rt1(c0, c6) VALUES (NULL, NULL), (NULL, 0X2ff26f97), (-822184850, NULL); -- 0ms;
UPDATE t0 SET (c2)=(x'') WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR REPLACE INTO rt1(c5) VALUES ('-762727437'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c4, c5, c2, c1) VALUES (NULL, '-223344349', 'xC漓n', 0Xffffffffedcd1d37, NULL), (x'', x'fef4', 0Xffffffff8e1d9a47, 0.5902620812572896, '-350859415'), ('x%]↚', 0X3502726f, 0.5902620812572896, NULL, 0.665330805184637); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE ((((t0.c0) BETWEEN (0.06273861823567761) AND (t0.c2)))|(t0.c1)); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
DELETE FROM t0; -- 0ms;
UPDATE t0 SET (c1)=(' 3') WHERE (((t0.c2)) NOT BETWEEN ((((t0.c2) ISNULL))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c2 END))); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES (0.6982235318586664, 0.6404403993435955); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0(c1) VALUES ('352411151'); -- 0ms;
INSERT OR FAIL INTO rt1(c5, c0, c2, c4, c6, c3, c1) VALUES ('-842174037', 0Xffffffff95f1e4bd, NULL, NULL, '-234080424', '', x''), (NULL, x'92b8', 1.135870197E9, x'', 0x329d55a8, '737136717', x'869c0343'), (x'', '', 0.057687167997695354, NULL, '', '602532762', NULL), (0.670204691907025, x'', '-1016360268', -1898872277, x'', 0xffffffffc1b15cfd, 410880524), (0xffffffffafd8219a, x'', 'FALSE', x'', '-1541980842', 0.6404403993435955, x''); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.06273861823567761); -- 0ms;
INSERT OR REPLACE INTO t0(c1) VALUES ('aB)'), (NULL), (0.0681988934148019); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'f8c8', ''); -- 0ms;
ALTER TABLE t0 ADD COLUMN c28 REAL; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c6)=(737136717, x'') WHERE LIKELIHOOD(DISTINCT (+ (rt1.c1)), 0.4809494445737138); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES ('12800676'), ('-1684168022'), ('xC漓n'), ('nowC'), ('uu'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.5154219768328536) WHERE vt0.c0; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX; -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT OR ROLLBACK INTO t0(c28) VALUES (431404392); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT OR REPLACE INTO t0(c1, c0) VALUES ('eOHx', NULL); -- 0ms;
ANALYZE rt1; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE t0.c28; -- 0ms;
CREATE INDEX IF NOT EXISTS i6 ON t0((((CASE c1  WHEN c1 THEN c2 ELSE c0 END, CASE WHEN c28 THEN c28 ELSE c0 END, ((c1)IS NOT(c28))))<((((-356880218) NOT BETWEEN (c2) AND (c28)), CASE WHEN c1 THEN c1 END, -2130176571))),'0.0681988934148019' COLLATE RTRIM DESC,(+ (c28)) COLLATE BINARY COLLATE BINARY DESC,0.8183178756214602) WHERE (((rtreenode(c28, c28)))=((c28 COLLATE BINARY))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i71 ON t0(((((c1) IS FALSE)) NOT NULL) COLLATE BINARY DESC,CASE ((c2) BETWEEN (c1) AND (c0))  WHEN c0 COLLATE RTRIM THEN c2 ELSE NULL COLLATE NOCASE END ASC,((((c28)IS NOT(c1))) NOT BETWEEN (((((c28)AND(c1)))OR(c0))) AND (((c0)>=(c0)))),UPPER(c1 COLLATE NOCASE) DESC) WHERE CAST(CAST(c2 AS REAL) AS NUMERIC); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 12ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c5; -- 1ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt1 SET (c1)=(x'') WHERE ((((rt1.c5 IN ())))>((CAST(rt1.c1 AS BLOB)))); -- 0ms;
REINDEX; -- 0ms;
UPDATE rt1 SET (c4)=(0.057687167997695354) WHERE (CAST(rt1.c1 AS INTEGER) IN (((((((((((((rt1.c6)AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(0.8183178756214602); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i29 ON t0(c5,(+ (0.7778880248187777)) DESC,((~ (c2)) IN ()) COLLATE NOCASE DESC,((TRIM(DISTINCT c28, c1))%(0X6c2926b4))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c98 INT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.locking_mode = EXCLUSIVE; -- 0ms;
UPDATE rt1 SET c5=x'', c1=-2114579010; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c5 TO c18; -- 1ms;
INSERT OR IGNORE INTO t1(c1, c98) VALUES (NULL, 0.843486177810347); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=-1.016360268E9, c0='-842174037', c0=' 3'; -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
PRAGMA main.ignore_check_constraints = true; -- 0ms;
INSERT OR FAIL INTO t1(c18, c98, c2) VALUES (x'', -1016360268, 2052766622); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=('+몢F') WHERE x''; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c4, c5, c0, c1) VALUES (x'', NULL, ((0.4575935277027334 COLLATE NOCASE) BETWEEN (SQLITE_VERSION()) AND ((('2052766622') NOT BETWEEN ('vVM\n ]+') AND (NULL)))), '10717578', x''), ('/h+73J', x'', x'6263', 0.4575935277027334, 0.28978516957889366), (0.8183178756214602, x'', x'abf9e12a', 0.4405816610028511, NULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA main.short_column_names = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=NULL WHERE CASE NULLIF(vt0.c0, vt0.c0)  WHEN (+ (vt0.c0)) THEN CASE vt0.c0  WHEN 0X4cfdd4ac THEN vt0.c0 ELSE vt0.c0 END END; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c5) VALUES (0.14948182897109108), (NULL), (-842174037); -- 0ms;
UPDATE OR IGNORE t1 SET c28=0X4b70dbae; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 INT ); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('0.057687167997695354'); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ANALYZE; -- 0ms;
DROP INDEX "i29"; -- 1ms;
UPDATE rt0 SET c1=1348460988; -- 0ms;
ALTER TABLE t1 ADD COLUMN c34 INT; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.3877763446883291); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.14948182897109108, 0.44526199624642393); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('\\rIwKb0') WHERE (((((t1.c2 IN ()))AND(((0.10154529963405035)LIKE(t1.c28)))))AND(CASE t1.c18  WHEN t1.c28 THEN t1.c98 END)); -- 0ms;
INSERT OR IGNORE INTO rt1(c5, c4, c2, c6, c0, c1) VALUES (0.4354018897209444, 0.14948182897109108, 0.6567495054649408, '352411151', x'7c0e', 0.4137782439787505), (NULL, '468730478', '>', x'', '', NULL), ('0.14948182897109108', NULL, x'', '-204345924', NULL, x'5409'); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
DROP TABLE rt1; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT DISTINCT (COUNT(rt0.c4) IN (t1.c2)) FROM rt0, vt0, t1; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('c8Q'), (0.5939465019278393), ('-356880218'); -- 0ms;
UPDATE OR REPLACE rt0 SET (c4)=('') WHERE CAST((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((1.348460988E9, rt0.c3, rt0.c4)) AND ((rt0.c0, x'', rt0.c4))) AS BLOB); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=(x'a0a2', NULL, NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE t1 SET (c28)=(-120859884); -- 0ms;
UPDATE OR IGNORE t1 SET (c28)=(-1.016360268E9) WHERE ((((t1.c1 COLLATE BINARY)OR(t1.c1 COLLATE NOCASE)))OR(CAST(t1.c2 AS TEXT))); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c34 TO c55; -- 1ms;
PRAGMA automatic_index = false; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=NULL WHERE (((NULL))=(((((((((((((('12800676')OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))); -- 0ms;
ANALYZE vt0; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF INSERT ON v0 FOR EACH ROW  BEGIN SELECT RAISE(ROLLBACK, 'asdf');END; -- 0ms;
UPDATE OR IGNORE t1 SET (c18)=(0.6404403993435955) WHERE t1.c18; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x'', NULL, 'J慉', NULL, NULL, x''); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3, c0) VALUES (0.8925962288938109, '849171880', '-1897422962'), (0X49f526c4, NULL, 0xffffffffe6888f39), ('訌˙m6[XE', x'', 0X10e0b198); -- 0ms;
INSERT OR FAIL INTO t1 VALUES (NULL, '-1541980842', 0xffffffffd695cab6, x'', x'6ae5', NULL); -- 0ms;
INSERT OR ROLLBACK INTO t1(c2, c55, c1) VALUES (NULL, '-120859884', 0.06590704486916743), (NULL, x'', 0.6272555977491218), (x'5faf', NULL, '2108776777'); -- 0ms;
ANALYZE; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 1ms;
COMMIT TRANSACTION; -- 2ms;
ANALYZE; -- 0ms;
UPDATE t1 SET (c98)=(0.5902620812572896); -- 1ms;
UPDATE OR REPLACE vt0 SET (c0)=(-1.541980842E9) WHERE CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER); -- 0ms;
ALTER TABLE t1 ADD COLUMN c32 INT; -- 1ms;
INSERT OR ROLLBACK INTO t1(c18, c28, c2, c55, c1, c32) VALUES (0.7096365930253458, ((((x'') NOT BETWEEN (x'44fa') AND (NULL)))>=(json_remove(NULL, 0xffffffff9ceb474a))), NULL, 0xffffffffb229e69b, '', 0.670204691907025), (x'1616', NULL, '*se2#y) 	', x'', 'Nj''', -413381185), ('0.4354018897209444', '訌˙M6[XE', NULL, 0.8282587546243954, '1608223157', -1710591542); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT AVG(((x'8bf1') NOT NULL)) FROM vt0, rt0, t1, v0; -- 0ms;
SELECT ALL (((t1.c2, vt0.c0, t1.c1)) BETWEEN ((TRIM(rt0.c4), ((t1.c18)%(t1.c18)), ((v0.c0) IS TRUE))) AND ((t1.c28 COLLATE NOCASE, CAST(t1.c18 AS TEXT), t1.c18))) FROM vt0, rt0, t1;SELECT ALL AVG((t1.c18 IN ())) FROM t1, vt0; -- 0ms;
SELECT ALL SUM(CASE WHEN t1.c32 THEN x'04905b46' ELSE vt0.c0 END) OVER () FROM v0, rt0, t1, vt0 INTERSECT SELECT DISTINCT CASE WHEN CASE WHEN vt0.c0 THEN t1.c32 WHEN rt0.c5 THEN t1.c98 WHEN v0.c0 THEN vt0.c0 ELSE t1.c1 END THEN SUM(t1.c2) END FROM rt0, v0 INDEXED BY i71, t1, vt0 WHERE ((((((x''))=((NULL)))) NOT BETWEEN ((('2052766622') NOT NULL)) AND ((+ (x'cc41'))))) LIMIT -842174037 OFFSET 10717578;SELECT DISTINCT COUNT(*) OVER (), CASE WHEN CASE WHEN t1.c28 THEN vt0.c0 ELSE t1.c55 END THEN IFNULL(DISTINCT t1.c32, v0.c0) WHEN NULL THEN (- (rt0.c1)) WHEN ((((t1.c32)AND(rt0.c5)))AND(rt0.c3)) THEN MAX(t1.c32) END, CASE v0.c0  WHEN (- (rt0.c2)) THEN ((t1.c18) NOT NULL) WHEN (('1638193020') NOT NULL) THEN (~ (rt0.c5)) WHEN ((rt0.c5)GLOB(rt0.c0)) THEN t1.c18 ELSE (~ (t1.c2)) END FROM t1, v0, rt0, vt0 WHERE ((('') NOT NULL) COLLATE RTRIM); -- 1ms;
SELECT ((-1411019473) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT((((rt0.c1)) BETWEEN ((t1.c2)) AND ((rt0.c5)))) FROM t1, v0, rt0, vt0; -- 0ms;
SELECT ((((vt0.c0)OR(t1.c28)))OR(NULL)) COLLATE BINARY, ((rt0.c4 COLLATE BINARY)<=((((('10717578')AND(t1.c1)))AND(rt0.c4)))), NULL FROM v0 CROSS JOIN rt0 ON (- (((rt0.c4) NOT NULL))) LEFT OUTER JOIN vt0 ON ((((rt0.c3)OR(NULLIF(rt0.c5, vt0.c0))))OR(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN t1.c98 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 ELSE x'' END));SELECT DISTINCT (((rt0.c0 IN ()))>(((rt0.c0)>=(rt0.c5)))) FROM vt0;SELECT ALL ((((((((TOTAL_CHANGES())AND(0.5989341662295898)))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END)))AND((NOT (rt0.c3)))))OR(CASE WHEN t1.c18 THEN t1.c55 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 END)) FROM t1;SELECT DISTINCT x'0aa7' FROM v0; -- 0ms;
SELECT DISTINCT (((v0.c0)) NOT BETWEEN ((((((t1.c2)AND(rt0.c2)))OR(rt0.c5)))) AND ((((t1.c1)|(rt0.c3))))) FROM rt0, v0, t1, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0))<=((vt0.c0))) IN (GROUP_CONCAT(rt0.c5))), json_object(((rt0.c3)*(x'')), ((rt0.c0) BETWEEN (NULL) AND (0.0040584614878608205))), (ABS(t1.c1) IN (((v0.c0)IS NOT(rt0.c4)))), RANK() OVER ( ORDER BY ((t1.c55) IS FALSE), ((t1.c55) IS TRUE)  NULLS LAST, x''  NULLS LAST), COUNT(CASE WHEN rt0.c0 THEN t1.c98 ELSE vt0.c0 END), (((((((((x'')OR(vt0.c0)))AND(t1.c28)))AND(t1.c28)))AND(-350859415)) IN (t1.c98)), x'27a7' FROM vt0, v0, rt0, t1 WHERE (CASE WHEN CAST('0.4845158179002609' AS NUMERIC) THEN ((NULL) BETWEEN (NULL) AND ('459569442')) END);SELECT COUNT(((t1.c55) NOT NULL)), CAST(rt0.c5 COLLATE NOCASE AS INTEGER), QUOTE((- (v0.c0))) FROM t1, v0, vt0 WHERE ((NOT (((x'') NOT BETWEEN (0.6761815887990327) AND (0.16091298672157428))))) ORDER BY ((((t1.c18) NOT NULL))IS(((rt0.c2) NOT BETWEEN (NULL) AND (t1.c18)))), RTRIM((('gL{g&') BETWEEN (x'') AND (t1.c2))) ASC;SELECT ((((NULL)>(rt0.c0)))LIKE((~ (t1.c32)))), ((-3.56747707E8)<<((((t1.c28, t1.c28, vt0.c0)) NOT BETWEEN ((rt0.c2, t1.c55, '')) AND ((t1.c28, t1.c98, v0.c0))))), (~ (NULL)) FROM rt0, v0, vt0;SELECT DISTINCT TRIM(DISTINCT ((rt0.c5)>>(v0.c0))) FROM v0, t1, vt0, rt0; -- 0ms;
SELECT DISTINCT IFNULL(TOTAL(v0.c0), -1.045340931E9 COLLATE RTRIM), TOTAL((rt0.c2 IN ())) OVER (), SUM(rt0.c4) COLLATE RTRIM COLLATE BINARY FROM t1, vt0, rt0 WHERE (0.28978516957889366);SELECT LAG((+ (((rt0.c5) NOT BETWEEN (t1.c28) AND (rt0.c1)))), (((t1.c55)) NOT BETWEEN (((rt0.c4 IN (t1.c18)))) AND ((CAST(rt0.c2 AS BLOB)))), LOWER(CAST(rt0.c2 AS REAL))) OVER () FROM v0, t1, rt0; -- 1ms;
SELECT ALL ((((((((NULLIF(t1.c1, t1.c98))OR(vt0.c0 COLLATE NOCASE)))AND(((t1.c1)<>(v0.c0)))))AND(CASE WHEN rt0.c5 THEN v0.c0 ELSE '' END)))OR(((0.20995984879228535)OR(t1.c98)))), ((t1.c55 IN (t1.c55, rt0.c1, rt0.c0)) IN ()), ((((rt0.c0)OR(rt0.c4)))OR(rt0.c5)) COLLATE RTRIM FROM vt0 WHERE (((((CASE 0.4193012470565525  WHEN '454197307' THEN NULL END)OR((('') IS FALSE))))AND(((0.44153420668359233) NOT BETWEEN ('ugHyQxY') AND (x'41d4')))));SELECT DISTINCT LIKELY(CASE NULL  WHEN t1.c2 THEN rt0.c1 ELSE rt0.c5 END) FROM rt0, t1, vt0 WHERE (((((((-1.411019473E9)AND(x'')))AND(0.24956691543332843)))AND((('602532762')&(x''))))); -- 0ms;
SELECT CUME_DIST() OVER () FROM rt0, v0 WHERE (((CASE WHEN 0xffffffff804d09e8 THEN NULL WHEN NULL THEN '' WHEN 0.01282474731945804 THEN 0.4193012470565525 END)OR(0.9361834371386205 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((((t1.c28))<((rt0.c5))))+((((t1.c32)) NOT BETWEEN ((t1.c32)) AND ((t1.c2))))) FROM v0, rt0, t1 WHERE ((((0x979f04)) NOT BETWEEN ((CAST(0xffffffffd020fe22 AS INTEGER))) AND ((((0.9337873497616539) IS FALSE))))); -- 0ms;
SELECT ((((((((((t1.c18) BETWEEN (v0.c0) AND (rt0.c4)))AND(CAST(t1.c28 AS NUMERIC))))OR(SUM(vt0.c0))))AND(rt0.c3)))OR(rt0.c0 COLLATE BINARY)) FROM vt0, v0, t1;SELECT ALL CAST((rt0.c5 IN ()) AS REAL) FROM vt0, rt0, t1 NOT INDEXED, v0 WHERE ((2076799424 IN (0.4354018897209444)) COLLATE BINARY); -- 0ms;
SELECT ALL 'o1', CASE WHEN t1.c1 COLLATE RTRIM THEN ((rt0.c3)<>(rt0.c4)) WHEN ((rt0.c1)!=(x'')) THEN MIN(rt0.c2) WHEN ((t1.c2) BETWEEN (rt0.c1) AND (t1.c55)) THEN ((rt0.c4) BETWEEN (v0.c0) AND (x'')) WHEN ((t1.c2)IS NOT(t1.c32)) THEN (((t1.c28, rt0.c5, t1.c28, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, '\r㵖', vt0.c0, rt0.c1, rt0.c1)) AND ((t1.c1, t1.c28, t1.c18, rt0.c1, rt0.c1))) WHEN (t1.c18 IN ()) THEN ((rt0.c3) NOTNULL) ELSE t1.c18 END, FIRST_VALUE(((t1.c32 IN (t1.c98, vt0.c0)) IN (t1.c55 COLLATE NOCASE))) OVER ( ROWS  CURRENT ROW), ((((rt0.c3)==(rt0.c0)))AND(((((t1.c28)AND(t1.c18)))OR(0x1bf0426e)))), TOTAL((~ (rt0.c5))) FROM vt0, rt0, t1, v0; -- 1ms;
SELECT CASE WHEN t1.c1 THEN rt0.c2 ELSE rt0.c3 END COLLATE NOCASE FROM vt0;SELECT DISTINCT rt0.c3, CAST((t1.c1 IN ()) AS REAL), TOTAL(CASE WHEN t1.c98 THEN t1.c2 ELSE t1.c55 END) OVER (), LEAD(((NULL)IS(t1.c55)) COLLATE RTRIM, t1.c1 COLLATE BINARY, ((CAST(rt0.c0 AS INTEGER))IS NOT(((rt0.c4)LIKE(t1.c32))))) OVER (), ((((vt0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c18))) IN ()) FROM vt0, rt0, t1 WHERE ((((('-2114579010') BETWEEN (x'') AND (x''))) IS FALSE)) ORDER BY ((rt0.c3)IS(rt0.c4)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((NOT (t1.c98))) ISNULL), AVG(COALESCE(DISTINCT t1.c98, t1.c55)) OVER (), COUNT(*) FILTER(WHERE CAST((x'' IN ()) AS REAL)) OVER () FROM vt0, v0, t1 GROUP BY ((NULL COLLATE RTRIM)<=(((v0.c0)>=(rt0.c0)))) HAVING (((rt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((t1.c28))) COLLATE NOCASE;SELECT ALL (vt0.c0 IN (CASE rt0.c5  WHEN t1.c28 THEN rt0.c5 ELSE t1.c32 END)), (- (CAST(vt0.c0 AS BLOB))), (- (((v0.c0) BETWEEN (t1.c55) AND (rt0.c5)))) FROM v0, rt0, vt0;SELECT DISTINCT (((((t1.c18))<((t1.c55)))) NOT BETWEEN (((rt0.c2)&(rt0.c4))) AND (NULL)), (((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((((t1.c98) NOTNULL)))), LAG(v0.c0, ((v0.c0 COLLATE RTRIM)&(LIKELIHOOD(v0.c0, 0.7730088669895603))), ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) COLLATE RTRIM) OVER ( ROWS x'' PRECEDING EXCLUDE CURRENT ROW) FROM v0, vt0 WHERE ((~ ((+ (NULL)))));SELECT DISTINCT CASE WHEN (((t1.c55))>((t1.c98))) THEN CASE WHEN t1.c55 THEN x'8328' ELSE v0.c0 END WHEN (('驇a')>(t1.c32)) THEN ((t1.c98)<(t1.c2)) WHEN ((t1.c55)-(v0.c0)) THEN LIKELY(t1.c18) ELSE ((t1.c32) NOT BETWEEN (t1.c1) AND (t1.c18)) END FROM t1 WHERE ((((('Tuณs') BETWEEN (0.07514166760208163) AND (''))) BETWEEN (((x'')<(0.7108964469893495))) AND (HEX(DISTINCT x'')))) GROUP BY ((t1.c55)=((t1.c1 IN ()))) LIMIT 1265687470 OFFSET 319437714;SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((((x'') BETWEEN (t1.c18) AND (t1.c28)))) AND ((((t1.c98)/(t1.c32))))), ((((rt0.c4)/(t1.c2))) NOT NULL), ((((((((rt0.c1)OR((((t1.c2, t1.c98, rt0.c0)) NOT BETWEEN ((t1.c32, vt0.c0, t1.c32)) AND ((t1.c32, rt0.c2, vt0.c0))))))OR(((rt0.c0) NOTNULL))))OR(((x'')<=(rt0.c3)))))OR((((t1.c98)) NOT BETWEEN ((t1.c28)) AND ((t1.c98))))) FROM rt0 GROUP BY CAST((((rt0.c2))<=((rt0.c4))) AS INTEGER);SELECT CAST(NULL AS REAL) FROM vt0, t1, v0, rt0 WHERE (CAST((('!y')<=(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((t1.c98)>=(v0.c0))) ISNULL) FROM rt0, t1, vt0, v0 INDEXED BY i71 WHERE (CAST('0.44153420668359233' AS BLOB) COLLATE RTRIM);SELECT ALL v0.c0, ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL), CASE ((t1.c28) NOT BETWEEN (rt0.c1) AND (t1.c1))  WHEN ((NULL) NOT BETWEEN (t1.c32) AND (t1.c2)) THEN rt0.c1 COLLATE NOCASE WHEN ((((((((t1.c28)OR(rt0.c3)))OR(rt0.c3)))AND(t1.c1)))AND(rt0.c0)) THEN (((t1.c98)) NOT BETWEEN ((t1.c18)) AND ((t1.c98))) WHEN (('') NOT BETWEEN (v0.c0) AND (t1.c98)) THEN ((t1.c18) NOT BETWEEN (v0.c0) AND (0.07623607023135814)) WHEN ((t1.c2)||(t1.c55)) THEN TOTAL(v0.c0) WHEN rt0.c1 COLLATE NOCASE THEN ((t1.c1)AND(0.4845158179002609)) END FROM v0, vt0, t1 WHERE (((IFNULL(DISTINCT '1868275998', 0.9085080156236531))||(CASE WHEN 0.5111151288314879 THEN 0x6d687258 WHEN 0xffffffff82df2283 THEN 0.14948182897109108 WHEN '732129401' THEN x'' END)));SELECT DISTINCT CASE CAST(v0.c0 AS TEXT)  WHEN (t1.c98 IN ()) THEN CASE WHEN rt0.c0 THEN t1.c32 WHEN rt0.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c55 ELSE t1.c2 END WHEN MAX(rt0.c4) THEN x'' WHEN (((rt0.c2, rt0.c5, rt0.c0))<>((-3.50859415E8, t1.c1, NULL))) THEN t1.c1 COLLATE NOCASE ELSE ((t1.c2) NOT BETWEEN (t1.c18) AND (t1.c32)) END, ((((vt0.c0) IS TRUE))==(((v0.c0)<<(t1.c1)))), ((SUM(NULL))<(CASE WHEN t1.c18 THEN t1.c98 WHEN vt0.c0 THEN t1.c1 WHEN t1.c18 THEN rt0.c3 ELSE t1.c2 END)) FROM t1, vt0;SELECT DISTINCT (- (((((t1.c18)AND(t1.c32)))OR(rt0.c2)))), t1.c18, LAG(LIKELY(DISTINCT t1.c32) COLLATE NOCASE, CASE ((t1.c98)IS NOT(0.0036324779888351477))  WHEN (t1.c98 IN ()) THEN ((t1.c98)OR(t1.c18)) ELSE UNLIKELY(DISTINCT t1.c98) END, CAST(((t1.c32) BETWEEN (t1.c32) AND (t1.c28)) AS INTEGER)) OVER () FROM t1;SELECT DISTINCT COUNT(*) FILTER(WHERE NULL) OVER () FROM t1, vt0, rt0, v0 WHERE (((((283160984))<((''))) IN (('-762727437' IN (NULL, x''))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1 NATURAL JOIN vt0; -- 0ms;
SELECT DISTINCT SUM(((t1.c2)IS(0.2101118873433626))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT NTILE(((CAST(t1.c55 AS REAL))IS NOT((t1.c2 IN ())))) OVER (), ((((((((((rt0.c0)AND(t1.c2)))AND(rt0.c4)))AND(t1.c18)))OR(v0.c0))) BETWEEN (t1.c32 COLLATE RTRIM) AND (((rt0.c3) ISNULL))), CASE (((t1.c28))==((rt0.c1)))  WHEN ((t1.c98) NOTNULL) THEN ((((t1.c18)AND(rt0.c1)))OR(rt0.c4)) WHEN GROUP_CONCAT(vt0.c0) THEN CASE v0.c0  WHEN t1.c32 THEN rt0.c0 ELSE t1.c32 END WHEN v0.c0 THEN ((rt0.c2) BETWEEN (NULL) AND (t1.c98)) END FROM rt0, v0, t1 ORDER BY (~ (x'')) DESC  NULLS LAST, (((((t1.c32)) NOT BETWEEN ((rt0.c4)) AND ((t1.c98)))) BETWEEN (((v0.c0)<=(rt0.c1))) AND (t1.c1 COLLATE RTRIM));SELECT ALL CASE WHEN t1.c98 THEN rt0.c5 ELSE rt0.c4 END COLLATE NOCASE FROM rt0, vt0, t1, v0; -- 1ms;
SELECT DISTINCT (((((rt0.c2))!=((''))))>>(((t1.c18) NOT BETWEEN ('-413381185') AND (NULL)))) FROM v0, vt0, rt0, t1; -- 0ms;
SELECT DISTINCT ((CASE t1.c55  WHEN t1.c2 THEN rt0.c4 ELSE t1.c1 END) NOT NULL), ((t1.c98) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE, ((CASE vt0.c0  WHEN t1.c98 THEN t1.c2 END)IS(TOTAL(0.2576377357109515))) FROM t1 WHERE (((CAST('BS걞tT' AS NUMERIC)) NOT BETWEEN (CASE 'pLDZ'  WHEN NULL THEN 'ꐺ,' ELSE 'ugHyQoY' END) AND ((((x'')) NOT BETWEEN ((NULL)) AND (('-1870558666'))))));SELECT DISTINCT ((t1.c32) NOTNULL) COLLATE NOCASE, ((CAST(t1.c55 AS REAL)) IS FALSE), CAST(CAST(t1.c55 AS REAL) AS TEXT) FROM t1, v0, rt0 WHERE ((((x'')) NOT BETWEEN ((CAST(0.3530224601818446 AS BLOB))) AND ((x'' COLLATE RTRIM)))); -- 0ms;
SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c2))) BETWEEN ((((rt0.c0))>((t1.c98)))) AND (CASE WHEN rt0.c5 THEN t1.c55 WHEN rt0.c4 THEN t1.c28 WHEN 0.10154529963405035 THEN t1.c55 END)), ((((rt0.c5) NOT NULL)) NOT NULL), CAST(((0Xfffffffff2b00923) ISNULL) AS BLOB) FROM vt0, rt0, t1, v0 WHERE (CASE (NOT ('\r'))  WHEN CAST(0.7516245247557503 AS INTEGER) THEN CAST(x'16db' AS TEXT) ELSE x'' END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(t1.c28 AS REAL)) OVER () FROM v0, vt0, t1, rt0 WHERE ((((('#/a') IS FALSE))||(((((((((0.07866255141814249)AND('-1018918576')))AND(0X15015e0f)))AND('')))AND(0.14746146840739138))))); -- 1ms;
SELECT DISTINCT TYPEOF(rt0.c3) COLLATE BINARY, SUM(CASE WHEN rt0.c0 THEN rt0.c3 END) OVER (), (((v0.c0) NOT NULL) IN ()) FROM vt0, v0, rt0, t1; -- 0ms;
SELECT DISTINCT NULL, (((('7') NOT BETWEEN (rt0.c3) AND (t1.c98)))=((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))), MIN(json_patch(t1.c28, v0.c0)) FROM t1, rt0, v0 ORDER BY x'' ASC; -- 0ms;
SELECT ALL ((((((((((rt0.c1)OR(t1.c2)))AND(rt0.c5)))AND(v0.c0)))OR(x''))) BETWEEN (CAST(t1.c18 AS NUMERIC)) AND (t1.c55 COLLATE RTRIM)) FROM t1 WHERE (NULLIF(DISTINCT ((((0.8192395784126031)OR('')))OR(0Xa1416d5)), ((x'') NOT NULL)));SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY CASE ((vt0.c0)>=(t1.c55))  WHEN (NOT (rt0.c0)) THEN (rt0.c4 IN ()) ELSE v0.c0 END ASC, ((((((t1.c28) NOT BETWEEN (t1.c98) AND (t1.c1)))OR(t1.c18 COLLATE BINARY)))OR(rt0.c0))) FROM t1, rt0 WHERE (HEX(DISTINCT (('-D')<(''))));SELECT ALL ((CASE WHEN t1.c28 THEN rt0.c2 END)||(json_quote(x''))) FROM t1, v0, rt0, vt0 WHERE (MAX(CAST('2076799424' AS TEXT), (- (',B)')))); -- 0ms;
SELECT DISTINCT ((t1.c55)>(GROUP_CONCAT('-2040658446'))) FROM v0, t1; -- 0ms;
SELECT DENSE_RANK() OVER (), AVG(((v0.c0) NOT NULL)), CASE ((rt0.c2) BETWEEN (t1.c55) AND (rt0.c5))  WHEN t1.c18 COLLATE NOCASE THEN ((rt0.c2) IS TRUE) END FROM v0, t1;SELECT ALL ((CASE rt0.c5  WHEN rt0.c0 THEN 0.7096365930253458 ELSE rt0.c3 END) NOTNULL) FROM v0, t1;SELECT DISTINCT ((rt0.c1)<>(rt0.c0)) COLLATE RTRIM FROM rt0, vt0, v0, t1; -- 0ms;
SELECT (rt0.c3 COLLATE BINARY IN ()) FROM v0 WHERE (CASE WHEN HEX(DISTINCT 0.8510190533486104) THEN CASE ',}P5慉eF'  WHEN NULL THEN 1354111168 ELSE NULL END WHEN (((('9936644')AND('TxG!>&g')))OR(0x187d8a0c)) THEN ((x'b20a')LIKE(0Xfffffffffe83f8a8)) WHEN CAST(NULL AS TEXT) THEN ((NULL)<=(8.4917188E8)) ELSE ((0.10370934104160434)LIKE(0.3603874664474641)) END); -- 0ms;
SELECT DISTINCT (~ ((((rt0.c5, t1.c55, rt0.c2))<((t1.c2, rt0.c2, rt0.c0))))), RANK() OVER ( RANGE DATETIME(rt0.c4, '큍U', HEX(DISTINCT t1.c2)) PRECEDING EXCLUDE GROUP), RANK() OVER () FROM vt0, rt0, v0, t1;SELECT DISTINCT (+ (json_array_length(rt0.c5, t1.c18))) FROM rt0, vt0, t1, v0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c4) NOT BETWEEN (t1.c2) AND (rt0.c1))) OVER () FROM v0, t1, vt0, rt0 WHERE ((((NULL) NOT BETWEEN (0.3396649078807692) AND ('}2')) IN ())); -- 0ms;
SELECT ALL (((rt0.c2 IN (t1.c98))) BETWEEN (((t1.c1)-(t1.c32))) AND (rt0.c1)) FROM t1, v0, rt0 WHERE ((((((((((((0x2ba36879)AND(NULL)))OR(NULL)))OR('2402416')))OR(-1.684168022E9))))<((x'')))) LIMIT 208838416; -- 0ms;
SELECT ALL ((COUNT(t1.c28))&(((rt0.c4) IS TRUE))) FROM vt0, rt0, t1 WHERE ((~ (((NULL) NOT BETWEEN ('10717578') AND (0.7096365930253458))))); -- 0ms;
SELECT DISTINCT (~ ((+ (rt0.c3)))), ((t1.c32) ISNULL) COLLATE BINARY, vt0.c0 FROM vt0 WHERE ((((NULL)) BETWEEN ((((0.4193012470565525) NOT BETWEEN ('-1779309379') AND ('A놘')))) AND ((-1.344790118E9 COLLATE BINARY)))) GROUP BY ((CASE t1.c18  WHEN rt0.c0 THEN t1.c1 WHEN t1.c98 THEN t1.c32 WHEN rt0.c2 THEN t1.c98 ELSE t1.c2 END) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((((((((t1.c98)OR(rt0.c2)))OR(rt0.c5)))OR(t1.c98)))OR(v0.c0)))) HAVING ((((AVG(rt0.c4))OR(t1.c98 COLLATE NOCASE)))OR(ABS(v0.c0))) ORDER BY CASE rt0.c4  WHEN ((vt0.c0) NOT BETWEEN (t1.c98) AND (t1.c98)) THEN (((t1.c2, rt0.c2, rt0.c2)) BETWEEN ((t1.c18, rt0.c2, rt0.c4)) AND ((x'', t1.c98, t1.c18))) ELSE ((0.9959062223270655) IS TRUE) END ASC  NULLS LAST;SELECT DISTINCT CAST((~ (rt0.c1)) AS TEXT), ((t1.c28) BETWEEN (ABS(t1.c32)) AND (((vt0.c0) NOT BETWEEN (rt0.c3) AND (t1.c32)))), t1.c28 FROM vt0, v0, rt0, t1 ORDER BY NULL DESC; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((((t1.c28) ISNULL)))) FROM v0, vt0, t1;SELECT CAST(rt0.c3 COLLATE RTRIM AS INTEGER), ((rt0.c3)>=(LTRIM(t1.c98))), ((((t1.c55) NOTNULL))!=(rt0.c4)) FROM t1, vt0, rt0, v0 WHERE ((((NULL) NOT BETWEEN (0.21861435611259694) AND ('328421727')) IN ())) GROUP BY ((((rt0.c1) IS TRUE))GLOB(((t1.c2)LIKE(rt0.c5)))) LIMIT 1694419238; -- 0ms;
SELECT DISTINCT ((((v0.c0)<<(vt0.c0)))|(GROUP_CONCAT(rt0.c5))) FROM rt0 WHERE ((((('0.0040584614878608205')+(x''))) NOT BETWEEN ((x'' IN ())) AND (((NULL) NOTNULL))));SELECT DISTINCT CASE MIN(rt0.c5)  WHEN CAST(vt0.c0 AS BLOB) THEN ((t1.c55) NOT BETWEEN (rt0.c5) AND (t1.c2)) ELSE rt0.c5 END, CAST(((rt0.c4) NOT BETWEEN (t1.c55) AND (vt0.c0)) AS REAL), TOTAL(AVG(((((t1.c2)OR(t1.c32)))AND(rt0.c3)))) FROM v0 WHERE (CASE ((NULL)/(NULL))  WHEN ((0.13952369548643162)GLOB(NULL)) THEN ((0.5878055538982615) NOT BETWEEN ('P') AND (2402416.0)) WHEN (NOT (x'')) THEN DATE(NULL, 'C>', NULL) WHEN (('>') BETWEEN ('1835561560') AND ('-1662302390')) THEN (('')<>(0.32194883742377056)) END);SELECT ALL (NOT (rt0.c5 COLLATE NOCASE)), MIN(((t1.c18)AND(rt0.c1))), COUNT(CAST(rt0.c2 AS REAL) COLLATE BINARY) FROM t1 WHERE (((((x'')IS(NULL))) NOT BETWEEN (((('1448873899', '?3˙ea!', x''))>((0.6428649087603471, 0xffffffff90818a36, 0Xffffffffe97f447f)))) AND (CAST(0.12786721289498515 AS BLOB))));SELECT DISTINCT v0.c0, CAST(CASE rt0.c5  WHEN 0x5fdb89b5 THEN rt0.c4 WHEN t1.c98 THEN v0.c0 WHEN 'l7' THEN t1.c18 ELSE t1.c32 END AS NUMERIC), ((((CAST(t1.c55 AS TEXT))OR(((rt0.c2) NOT BETWEEN (t1.c2) AND (rt0.c3)))))OR('0.5154219768328536')) FROM t1 WHERE (CAST(((((x'')AND(-2084835691)))AND(NULL)) AS NUMERIC));SELECT DISTINCT ((rt0.c2) IS FALSE) COLLATE RTRIM FROM t1;SELECT CASE WHEN TOTAL(rt0.c1) THEN t1.c98 ELSE t1.c18 END FROM vt0 ORDER BY CHAR(t1.c18, (vt0.c0 IN ()), ((((t1.c28)OR(rt0.c1)))AND(vt0.c0)))  NULLS FIRST;SELECT ((((vt0.c0)<<(t1.c28)))IS(MAX(rt0.c1))), ((((CAST(v0.c0 AS TEXT))OR((t1.c2 IN (0.6614398800801281, rt0.c4)))))OR(rt0.c2)), ((x'')<>(((t1.c55)*(t1.c28)))) FROM rt0 NOT INDEXED;SELECT DISTINCT AVG(t1.c2) COLLATE RTRIM FROM vt0, t1, v0 WHERE ((('0.06590704486916743' COLLATE NOCASE)%(CAST(0.09721694924387059 AS BLOB)))) LIMIT -171416189; -- 0ms;
SELECT rt0.c1 FROM v0 INDEXED BY i71, t1 NOT INDEXED;SELECT DISTINCT ((((t1.c55)/(t1.c32)))*(((((t1.c1)AND(t1.c32)))OR(rt0.c4)))), COUNT(*) OVER (), PRINTF(((rt0.c0)IS(rt0.c0))) FROM v0, t1, rt0, vt0 GROUP BY TRIM(t1.c98, NULL), (((rt0.c2 IN ()))>(CASE WHEN NULL THEN rt0.c3 END)), TYPEOF(((t1.c28)-(rt0.c4))); -- 0ms;
SELECT DISTINCT LEAD(((((rt0.c0)>>(v0.c0)))>=(json_remove(rt0.c4, rt0.c3))), ((((((v0.c0, t1.c98, rt0.c0)) NOT BETWEEN ((vt0.c0, t1.c32, rt0.c0)) AND ((t1.c98, t1.c98, rt0.c4)))))<((((rt0.c4)<<(rt0.c1))))), ((((rt0.c0)+(rt0.c4)))+('-204345924'))) OVER (), (((v0.c0, (rt0.c0 IN ()), t1.c32 COLLATE NOCASE))<>((((t1.c55)||(1348460988)), COUNT(t1.c55), ((t1.c2) IS TRUE)))), CASE WHEN TRIM(DISTINCT t1.c1) THEN (rt0.c3 IN ()) ELSE (~ (t1.c2)) END FROM rt0, t1, vt0, v0 WHERE (CAST(((0.4222046351622165) NOT BETWEEN ('468730478') AND (NULL)) AS NUMERIC)); -- 0ms;
SELECT ALL (((((((t1.c18)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))OR((((t1.c55))<((rt0.c5))))))OR(NULL)), (((t1.c18, vt0.c0, t1.c98)) BETWEEN ((rt0.c2 COLLATE RTRIM, NULL, (t1.c2 IN ()))) AND ((rt0.c0, ((((((((((((((((t1.c98)AND(t1.c98)))AND(rt0.c1)))AND(t1.c98)))OR(t1.c18)))OR(t1.c55)))AND(t1.c32)))AND(t1.c1)))AND(t1.c1)), t1.c98 COLLATE RTRIM))), ((((v0.c0 IN ())))=(((t1.c18 IN (v0.c0))))) FROM t1, vt0;SELECT DISTINCT ((v0.c0)||(v0.c0)) COLLATE NOCASE FROM t1, vt0, v0, rt0 WHERE ((NOT (((((NULL)AND('-209138616')))OR(0.6982235318586664))))); -- 0ms;
SELECT DISTINCT CAST(((x'13bc')>=(rt0.c3)) AS NUMERIC) FROM v0, vt0, rt0, t1 WHERE (x'4599'); -- 0ms;
SELECT DISTINCT t1.c32 FROM vt0, v0, t1 UNION SELECT t1.c1 FROM vt0, rt0 WHERE (((CAST(0X363fcf03 AS INTEGER)) NOT NULL));SELECT DISTINCT ((((rt0.c3, rt0.c0, t1.c55))!=((t1.c1, t1.c32, t1.c1))) IN ()), COUNT(((((rt0.c2)OR(x'')))OR(v0.c0))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES), CASE SQLITE_VERSION()  WHEN ((t1.c18)GLOB(vt0.c0)) THEN (vt0.c0 IN ()) END FROM rt0, vt0, t1, v0 WHERE ((~ ((- (2.7792081429556248E-5))))) GROUP BY CAST(x'' AS BLOB) HAVING ((((((((CASE WHEN t1.c1 THEN rt0.c2 END)AND(((t1.c32)<=(vt0.c0)))))OR((rt0.c3 IN ()))))OR((- (t1.c18)))))AND(((((((((((((t1.c28)AND(vt0.c0)))OR('732129401')))OR(t1.c55)))AND(t1.c55)))OR(vt0.c0)))OR(vt0.c0)))); -- 0ms;
SELECT ALL rt0.c1, (((vt0.c0) IS TRUE) IN (CASE WHEN t1.c2 THEN rt0.c0 WHEN rt0.c4 THEN v0.c0 WHEN t1.c18 THEN v0.c0 ELSE vt0.c0 END)), ((((rt0.c0)LIKE(rt0.c3)))OR(t1.c98)) FROM t1, v0, vt0 WHERE (((('-2118208284')) BETWEEN (((~ (x'')))) AND ((((('|v襐')) BETWEEN ((NULL)) AND ((0.7181075983731859)))))));SELECT DISTINCT COUNT(((rt0.c4) ISNULL)) OVER ( ORDER BY (- (((t1.c1) ISNULL))), ((((((rt0.c4)OR(t1.c2)))AND(rt0.c0)))>(rt0.c4 COLLATE RTRIM)) ASC), NULL, (((x'', t1.c2 COLLATE RTRIM, (((vt0.c0, rt0.c0, t1.c55)) NOT BETWEEN ((rt0.c2, '-413381185', t1.c55)) AND ((rt0.c3, rt0.c1, t1.c98)))))<>((((((t1.c28)OR(rt0.c0)))AND(t1.c98)), CAST(vt0.c0 AS INTEGER), rt0.c2 COLLATE BINARY))) FROM rt0 WHERE (CAST(0.9254010564314903 COLLATE RTRIM AS TEXT));SELECT DISTINCT (~ (((t1.c55) BETWEEN (rt0.c4) AND (rt0.c0)))), TRIM(DISTINCT ((t1.c98) IS FALSE), (+ (t1.c1))), ((((((v0.c0)AND(t1.c28)))OR(rt0.c4))) NOT BETWEEN (CASE rt0.c3  WHEN t1.c2 THEN t1.c55 ELSE v0.c0 END) AND (vt0.c0)), ((t1.c2 COLLATE NOCASE)==((- (rt0.c0)))), ((t1.c28) IS TRUE) COLLATE RTRIM FROM t1, rt0 WHERE ((((0.6184489644395954) NOT BETWEEN (2.076799424E9) AND ('-428864959')) IN (((((NULL)OR('1739273186')))AND(NULL)))));SELECT DISTINCT ((NOT (t1.c28)) IN ()) FROM rt0, vt0, t1; -- 0ms;
SELECT DISTINCT LAST_VALUE(rt0.c5) OVER () FROM rt0, vt0; -- 1ms;
SELECT DENSE_RANK() OVER () FROM t1, rt0; -- 0ms;
SELECT ALL (- ((0Xffffffffdae30a32 IN ()))) FROM rt0 WHERE ((((NULL, x'', -350859415, '', x'')) NOT BETWEEN ((((0x12600b86)==(x'')), CASE ''  WHEN -4.27258055E8 THEN x'' END, CASE WHEN -1.344790118E9 THEN NULL WHEN '0.6761815887990327' THEN x'e0e0' WHEN '' THEN NULL ELSE x'85fa' END, CASE WHEN x'' THEN x'2ce7e9e6' END, ((('-209138616')) BETWEEN ((NULL)) AND ((0x796e411d))))) AND ((x'' COLLATE RTRIM, (((NULL))<>((0.8862685210403687))), UNLIKELY('0.7096365930253458'), x'24bb' COLLATE BINARY, json_object(NULL, x''))))); -- 0ms;
SELECT DISTINCT NULL FROM vt0, v0, t1, rt0; -- 0ms;
SELECT ALL TOTAL((('-1411019473')IS NOT(t1.c32))), CAST(CASE '-694826314'  WHEN vt0.c0 THEN rt0.c2 END AS BLOB), (NOT (CASE WHEN rt0.c5 THEN rt0.c1 WHEN t1.c55 THEN t1.c55 WHEN v0.c0 THEN t1.c32 END)) FROM v0, rt0 GROUP BY CASE CAST(rt0.c0 AS INTEGER)  WHEN ((t1.c1) IS FALSE) THEN rt0.c0 COLLATE BINARY WHEN ((t1.c2)OR(rt0.c2)) THEN CASE vt0.c0  WHEN t1.c55 THEN t1.c1 ELSE t1.c32 END WHEN t1.c55 THEN ((rt0.c0) IS FALSE) END, (+ (NULL)), rt0.c4, t1.c2, ((((- (rt0.c4)), ((vt0.c0) NOTNULL), t1.c1))>((CASE WHEN rt0.c1 THEN rt0.c4 ELSE t1.c1 END, (('\r}uhz')==(rt0.c2)), (((t1.c18))<((t1.c55)))))) LIMIT -299365316 OFFSET 206875742;SELECT DISTINCT t1.c28 FROM rt0, vt0, v0 GROUP BY ((CASE WHEN rt0.c0 THEN t1.c98 ELSE vt0.c0 END)>>(CASE WHEN vt0.c0 THEN rt0.c0 END));SELECT DISTINCT ((((t1.c1)AND(NULL)))OR(rt0.c1)) COLLATE NOCASE FROM rt0 ORDER BY ((CAST(t1.c18 AS NUMERIC))-(((-1.20859884E8) IS TRUE)));SELECT DISTINCT CASE LIKELIHOOD(rt0.c4, 0.2664755120165193)  WHEN ((t1.c18) NOTNULL) THEN HEX(1300408163) WHEN SQLITE_SOURCE_ID() THEN ((((rt0.c1)AND(t1.c98)))OR(t1.c55)) WHEN CASE WHEN rt0.c4 THEN rt0.c2 END THEN vt0.c0 COLLATE RTRIM END FROM t1, rt0 WHERE (0.2981802501768879 COLLATE RTRIM);SELECT ((((t1.c28) IS TRUE))OR((rt0.c4 IN (rt0.c5)))), FIRST_VALUE(CAST(t1.c28 COLLATE BINARY AS TEXT)) OVER (), (- (('1130376285' IN ()))) FROM t1, v0 LIMIT -537513804 OFFSET -988310757;SELECT ((((vt0.c0)==(t1.c32))) IS TRUE) FROM rt0, vt0, t1, v0 WHERE (CAST(NULL AS INTEGER)); -- 0ms;
SELECT DISTINCT (((rt0.c3 IN ())) NOT NULL), (((((t1.c55, t1.c2, t1.c55)) NOT BETWEEN ((rt0.c5, rt0.c1, t1.c32)) AND ((t1.c32, rt0.c4, rt0.c0)))) BETWEEN (v0.c0) AND (COALESCE(t1.c18, rt0.c4))), MIN((NULL IN (rt0.c5))) FROM rt0, vt0, t1;SELECT (- (((rt0.c5)!=(rt0.c0)))), ((((CAST(t1.c98 AS REAL))AND(SQLITE_VERSION())))AND(t1.c18)), ((v0.c0 COLLATE NOCASE)IS NOT(((rt0.c3)>>(vt0.c0)))) FROM t1 WHERE ((((0.665330805184637)LIKE(0.44153420668359233)) IN ()));SELECT DISTINCT ((((0.9171432689156777) ISNULL))AND(CAST(rt0.c4 AS REAL))) FROM vt0 ORDER BY v0.c0 DESC;SELECT ALL ((t1.c1 COLLATE NOCASE) IS TRUE) FROM vt0, rt0, v0, t1 WHERE (((('N' IN ())) BETWEEN (((NULL) NOTNULL)) AND ((('') ISNULL)))) ORDER BY GLOB((- (t1.c98)), CASE rt0.c5  WHEN 0.6883202255340394 THEN '#/a' ELSE rt0.c4 END) ASC, ((((t1.c55) NOT BETWEEN (rt0.c0) AND (t1.c32))) IS TRUE) ASC  NULLS LAST; -- 0ms;
SELECT ((CASE t1.c55  WHEN rt0.c4 THEN NULL WHEN t1.c55 THEN rt0.c2 WHEN t1.c32 THEN t1.c28 END) NOT BETWEEN (UPPER(vt0.c0)) AND (((t1.c18) BETWEEN (rt0.c5) AND (rt0.c2)))) FROM v0, rt0;SELECT ALL COUNT((rt0.c4 IN ())), ((CAST(rt0.c0 AS BLOB)) BETWEEN ((rt0.c0 IN ())) AND ((t1.c98 IN (rt0.c5)))), ((v0.c0)IS(t1.c98)) COLLATE BINARY FROM v0, t1 WHERE ((((0Xffffffffde23dd6b)>=(NULL)) IN ()));SELECT DISTINCT (- ((rt0.c5 IN (rt0.c3)))) FROM rt0; -- 0ms;
SELECT ((((((rt0.c3)AND(t1.c18)))OR(t1.c28))) NOT BETWEEN (NULL COLLATE RTRIM) AND ((- (t1.c2)))), LEAD(NULL, x'', CASE WHEN ((vt0.c0)OR(t1.c2)) THEN x'' COLLATE BINARY END) OVER ( ORDER BY TRIM(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 WHEN t1.c18 THEN rt0.c0 WHEN t1.c98 THEN rt0.c4 ELSE v0.c0 END, CAST(rt0.c0 AS REAL)), (((((((t1.c1, t1.c28, v0.c0)) BETWEEN ((rt0.c1, t1.c2, v0.c0)) AND ((rt0.c5, t1.c18, t1.c32))))OR(t1.c1 COLLATE RTRIM)))OR(CAST(-1072702185 AS INTEGER)))  NULLS FIRST), rt0.c4 FROM rt0, t1, v0, vt0 WHERE (CASE CAST(x'c202' AS INTEGER)  WHEN CAST('' AS INTEGER) THEN '1701919953' ELSE CAST(0.8733380094101909 AS BLOB) END); -- 0ms;
SELECT DISTINCT (((CAST(t1.c98 AS TEXT)))>=((('-1581367099' IN ())))) FROM v0, rt0, t1 WHERE (HEX(SQLITE_COMPILEOPTION_USED(x''))); -- 0ms;
SELECT ((((((t1.c98) NOT BETWEEN (rt0.c2) AND (rt0.c5)))OR(CASE t1.c55  WHEN t1.c55 THEN vt0.c0 WHEN t1.c98 THEN 0xffffffffffffffff WHEN t1.c32 THEN t1.c2 ELSE t1.c98 END)))OR((((t1.c1))==((t1.c1))))) FROM t1, rt0, v0, vt0 WHERE (load_extension(((x'') BETWEEN (x'37c15746') AND (0.11529068759668992)), x'315e' COLLATE RTRIM));SELECT DISTINCT '0.7778880248187777' FROM v0, vt0, rt0, t1 WHERE (x'' COLLATE RTRIM); -- 0ms;
SELECT ALL v0.c0 FROM vt0, v0, rt0, t1 WHERE (CAST(((((((((NULL)AND(NULL)))AND(x'')))OR(x'')))OR('1138414918')) AS INTEGER)) GROUP BY (((t1.c55)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE NOCASE HAVING (((t1.c1)) BETWEEN (((+ (t1.c18)))) AND (((t1.c2 IN (vt0.c0, t1.c2))))); -- 0ms;
SELECT ALL ((((NULL)AND(((t1.c98)||(0Xffffffff8e1d9a47)))))OR(CASE WHEN v0.c0 THEN rt0.c3 ELSE NULL END)) FROM vt0, v0 WHERE (((((MAX('321328906', 'r', 0.32194883742377056, '328421727'))OR(NULL COLLATE NOCASE)))OR(CASE WHEN NULL THEN 0.14746146840739138 WHEN x'' THEN NULL WHEN NULL THEN 0.4094718221817676 ELSE x'' END))) LIMIT -1823031312 OFFSET -413381185;SELECT ALL CASE CAST(t1.c98 AS BLOB)  WHEN t1.c28 THEN (NOT (t1.c1)) WHEN json(0.4575935277027334) THEN 0.5644182825549766 WHEN GROUP_CONCAT(rt0.c2) THEN t1.c55 COLLATE BINARY WHEN MAX(v0.c0) THEN ((t1.c1) IS FALSE) WHEN '-1870558666' THEN NULL END, (('s*uFBk0}') NOTNULL), t1.c55 FROM rt0, t1;SELECT ALL ((t1.c55 COLLATE BINARY)&(rt0.c5)) FROM t1, rt0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(t1.c1 AS BLOB) THEN ((rt0.c4)>(-3518491)) WHEN rt0.c4 THEN COUNT(t1.c1) WHEN t1.c28 THEN (rt0.c3 IN ()) END FROM t1;SELECT DISTINCT highlight(((rt0.c3)>=(t1.c28)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END, CASE WHEN '-209138616' THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN t1.c32 THEN t1.c28 END, GROUP_CONCAT(2.7792081429556248E-5)) FROM vt0 WHERE ((- (json_array_length(x'b09c', 0x35bba5ba))));SELECT DISTINCT CASE NULL  WHEN CASE t1.c98  WHEN vt0.c0 THEN rt0.c4 END THEN t1.c2 COLLATE RTRIM ELSE UNLIKELY(DISTINCT t1.c1) END, ((0.2273810303231404) BETWEEN (((0.44975035405537567)GLOB(t1.c98))) AND (t1.c28 COLLATE NOCASE)), (('-1700664122') BETWEEN (GROUP_CONCAT(0Xad58106)) AND (((rt0.c4) NOTNULL))) FROM v0;SELECT DISTINCT GROUP_CONCAT(((t1.c32)<(rt0.c1))) FROM vt0 NOT INDEXED, t1, rt0, v0; -- 0ms;
SELECT ALL CAST(t1.c28 AS TEXT) COLLATE RTRIM FROM v0 WHERE ((((((((('?3˙ea!')OR(0.03479971467118703)))AND('-1e500')))AND(x'423d')))AND(0.8022945053140614)) COLLATE BINARY);SELECT DISTINCT NULL FROM vt0, t1; -- 0ms;
SELECT DISTINCT CAST(((((v0.c0)OR(rt0.c1)))AND(t1.c1)) AS TEXT), LAG(load_extension(((rt0.c5)<<(t1.c18)), rt0.c2 COLLATE RTRIM), vt0.c0, ((((((((((t1.c2) NOTNULL))OR(0.3659088362192934)))AND(x'')))AND(t1.c55)))AND(((t1.c18)|(t1.c32))))) OVER (), '454197307' FROM t1, rt0, vt0 ORDER BY CASE WHEN ((t1.c98) NOT BETWEEN (rt0.c0) AND (t1.c98)) THEN (rt0.c5 IN ()) END ASC;SELECT ALL ((CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN x'' WHEN v0.c0 THEN rt0.c0 END) NOT NULL) FROM t1;SELECT DISTINCT ((((((vt0.c0)AND(rt0.c5)))OR(rt0.c0))) IS TRUE), GROUP_CONCAT(0xffffffff8669c1f3 COLLATE BINARY) OVER (), (((t1.c98 IN ()))LIKE(((((((((rt0.c5)AND(rt0.c2)))OR('')))OR(t1.c28)))AND(x'')))) FROM v0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((CAST(x'' AS TEXT))) AND ((((((t1.c28)AND(v0.c0)))AND(rt0.c4))))) DESC  NULLS LAST, (((('-1684168022') NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE);SELECT ALL LAST_VALUE(((((t1.c18) NOT BETWEEN (t1.c32) AND (t1.c98))) NOTNULL)) OVER () FROM v0, t1, rt0; -- 0ms;
SELECT ((t1.c98 COLLATE BINARY)>>(json_patch(t1.c1, x''))) FROM v0, rt0, t1, vt0 WHERE (CAST((('{[*R牘泟''')<('o1')) AS INTEGER)); -- 1ms;
SELECT DISTINCT t1.c32, ((t1.c98)*(t1.c98)) COLLATE NOCASE, (NOT (((rt0.c4) IS FALSE))) FROM rt0, vt0 CROSS JOIN v0 ON ((('-1792431596'))<=((((t1.c2)<(rt0.c5)))));SELECT ((CAST(rt0.c4 AS BLOB))>(CASE WHEN rt0.c3 THEN rt0.c3 ELSE t1.c55 END)), COUNT(((v0.c0)&(rt0.c0))), LTRIM((NOT (t1.c28))) FROM vt0, t1;SELECT ALL CASE (1300408163 IN ())  WHEN (vt0.c0 IN ()) THEN (t1.c32 IN (t1.c32)) END FROM t1, vt0 WHERE (((x'' COLLATE BINARY) IS FALSE)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t1.c18) FILTER(WHERE CAST((((t1.c2, rt0.c4, rt0.c5))>((t1.c1, t1.c28, v0.c0))) AS REAL)) OVER () FROM v0, rt0, vt0, t1; -- 0ms;
SELECT ALL (((NOT (rt0.c0))) NOTNULL) FROM rt0, vt0, v0 WHERE ((+ (((x'') IS TRUE)))) LIMIT -209138616; -- 0ms;
SELECT DISTINCT '1739273186' FROM rt0, t1 GROUP BY (((((((((rt0.c3)OR(rt0.c0)))OR(t1.c28)))OR(t1.c18)))AND(t1.c18)) IN ()) ORDER BY (((((((rt0.c5))<=((vt0.c0))))AND(NULL)))AND(CAST(t1.c28 AS REAL)))  NULLS LAST;SELECT ((((rt0.c3)>(t1.c18)))OR(x'')) FROM vt0 ORDER BY HEX(DISTINCT CASE t1.c18  WHEN t1.c2 THEN vt0.c0 WHEN t1.c28 THEN rt0.c1 WHEN t1.c18 THEN 0.7546718796558026 ELSE t1.c2 END)  NULLS LAST, CAST((rt0.c1 IN ()) AS INTEGER)  NULLS FIRST;SELECT rt0.c4 FROM v0 INDEXED BY i71 WHERE ((((((('[]')OR(NULL)))OR(0.6068366840912855))) BETWEEN (ABS(DISTINCT 84468729)) AND ('-762727437'))) LIMIT -98462167 OFFSET 1707571647;SELECT DISTINCT CAST(MIN(rt0.c0) AS TEXT), (CASE WHEN t1.c55 THEN rt0.c5 WHEN t1.c55 THEN rt0.c1 WHEN t1.c28 THEN rt0.c1 ELSE t1.c98 END IN ()), (((rt0.c1, t1.c1, t1.c98)) BETWEEN (((((rt0.c5))<=((t1.c1))), ((t1.c98) BETWEEN (t1.c2) AND (rt0.c5)), ((rt0.c1) NOTNULL))) AND (((~ (rt0.c5)), ((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)), NULLIF(t1.c98, rt0.c2)))) FROM t1, vt0, rt0, v0 WHERE (((((x'')GLOB(x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT (+ (GROUP_CONCAT(vt0.c0))) FROM t1, vt0, rt0 WHERE (CASE WHEN NULL THEN ((-1.20859884E8)IS NOT('1708252831')) END) GROUP BY ((rt0.c4) ISNULL) COLLATE BINARY HAVING (+ ((- (rt0.c0)))); -- 0ms;
SELECT ((((((((rt0.c0)AND(x'')))OR(v0.c0)))OR(vt0.c0)))OR(rt0.c3)) COLLATE RTRIM FROM rt0, vt0, v0 WHERE ((((('ol') BETWEEN (x'') AND (NULL))) NOT BETWEEN (((x'') NOT BETWEEN (x'ee02') AND ('732129401'))) AND (((-428864959)&('zv1_!ៗ佚'))))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c3)AND(v0.c0)))AND(vt0.c0)))OR(t1.c32)))AND(rt0.c2)))IS NOT((~ (t1.c98)))), ((((t1.c2)||(v0.c0))) NOT BETWEEN (CASE WHEN t1.c1 THEN rt0.c1 ELSE rt0.c3 END) AND (LOWER(t1.c18))), PERCENT_RANK() OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS) FROM vt0, t1, rt0 WHERE (QUOTE(NULL) COLLATE BINARY);SELECT NULLIF(DISTINCT ((rt0.c1)LIKE(rt0.c1)), ((vt0.c0)<(t1.c28))) FROM rt0, v0 LIMIT -2092498973 OFFSET 743548789;SELECT DISTINCT ((CAST(rt0.c3 AS TEXT)) NOTNULL), (- (((t1.c2)&(t1.c2)))), ((((rt0.c3) NOTNULL))>(COUNT(t1.c55))) FROM vt0, v0, t1 WHERE ((CAST(x'' AS TEXT) IN ())) ORDER BY CASE WHEN '-1581367099' THEN ((0.8474720204757559) IS FALSE) ELSE ((t1.c55) IS TRUE) END  NULLS LAST;SELECT DISTINCT ((((('TxG!>&g')OR(t1.c55)))OR(t1.c28)) IN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (t1.c1)))) FROM v0 WHERE ((((0.7629328064016357 IN ()))>>((((0.3048835019593036)) NOT BETWEEN (('*UmN>a)L	')) AND ((-1.344790118E9))))));SELECT DISTINCT ((0.4909325751074638) NOTNULL), (((t1.c28)) BETWEEN ((t1.c1 COLLATE RTRIM)) AND ((''))), CAST(CASE WHEN t1.c32 THEN t1.c2 ELSE t1.c18 END AS NUMERIC) FROM t1, rt0, v0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE))<(COUNT(t1.c1))), GROUP_CONCAT(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0))) OVER (), CAST('vVM\n ]+' AS INTEGER) FROM vt0, v0, t1 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT));SELECT DISTINCT t1.c98 FROM t1, vt0, v0 WHERE (x'dc0f') ORDER BY (NOT ((~ (t1.c32)))), (((((vt0.c0)) NOT BETWEEN (('319437714')) AND ((t1.c18))))IS NOT(((t1.c18) IS FALSE))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL NTILE(((NULL COLLATE RTRIM) IS FALSE)) OVER () FROM vt0, rt0 WHERE (CASE WHEN ((0x53a0e2b)IS NOT(NULL)) THEN ((0.4094718221817676) IS TRUE) ELSE ((x'')%(1135870197)) END); -- 0ms;
SELECT DISTINCT COUNT((+ (rt0.c4))), CAST((rt0.c1 IN ()) AS INTEGER), (('k-!') NOT BETWEEN (((((t1.c1)AND(t1.c18)))OR(t1.c32))) AND ((rt0.c2 IN (t1.c18, t1.c28)))), ABS(DISTINCT t1.c18 COLLATE BINARY), 1.83556156E9 FROM v0, rt0, vt0 WHERE ((- ('')) COLLATE RTRIM);SELECT DISTINCT ((((((v0.c0)/(t1.c98)))AND((((rt0.c2))<((t1.c2))))))OR(x'')), COUNT(((((((((x'')OR(t1.c32)))AND(t1.c28)))AND(t1.c28)))AND(v0.c0))) OVER (), JULIANDAY(CASE t1.c32  WHEN rt0.c5 THEN rt0.c5 ELSE 1.739273186E9 END, t1.c98 COLLATE NOCASE, t1.c18) FROM t1, v0;SELECT DISTINCT rt0.c1 FROM vt0, v0 NOT INDEXED GROUP BY t1.c18, rt0.c4, (((t1.c1 IN (t1.c18, t1.c32, t1.c18)))||((rt0.c2 IN ()))) HAVING (((t1.c32) ISNULL) IN ()) LIMIT 913009170 OFFSET -678807121;SELECT ALL (NOT (t1.c32 COLLATE BINARY)), (((((t1.c28)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))) NOT BETWEEN (MAX(t1.c32)) AND (((rt0.c4)+(t1.c55)))), (~ (COALESCE(DISTINCT NULL, NULL))) FROM vt0 WHERE (CAST(((((((((NULL)AND(0X729d10af)))OR(1846236782)))OR(x'')))OR('-1484702256')) AS TEXT));SELECT DISTINCT ((x'0b13') NOT BETWEEN (((v0.c0)/(t1.c28))) AND (t1.c55)) FROM vt0 WHERE (json_object(x'' COLLATE BINARY, CAST('0.5111151288314879' AS INTEGER))) ORDER BY ((t1.c32)>=(((v0.c0) BETWEEN (t1.c1) AND (v0.c0)))) ASC;SELECT DISTINCT (0.5818066625142514 IN ((t1.c18 IN (t1.c2, t1.c98)))), NULL, MAX(((t1.c28)LIKE(rt0.c3))) FROM vt0 WHERE (((((x'') NOT NULL))<(SQLITE_COMPILEOPTION_USED('1e500'))));SELECT DISTINCT COUNT(rt0.c5), CAST(SUM(rt0.c3) AS INTEGER), CASE WHEN (('') NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE WHEN rt0.c5 THEN v0.c0 END END FROM vt0, t1 WHERE (((0.05484022845358649 COLLATE RTRIM)&((((((((('4D')OR(x'')))OR(NULL)))OR('Q[W(b.k')))AND(0.36369901566889307)))));SELECT AVG(json_extract(t1.c32, rt0.c1)), 0.26327842308810256, COUNT(*) FROM rt0 WHERE ((((('1135870197')OR(x'')))LIKE((((NULL)) NOT BETWEEN ((0.8153752665180026)) AND ((x''))))));SELECT DISTINCT ((NULLIF(rt0.c2, t1.c28))%(((rt0.c5) BETWEEN (rt0.c3) AND (t1.c32)))), CUME_DIST() OVER ( PARTITION BY ((((((((((t1.c98) IS TRUE))OR((((t1.c2)) BETWEEN ((rt0.c4)) AND ((t1.c98))))))OR(t1.c98)))AND(((rt0.c2) NOT BETWEEN (t1.c18) AND (t1.c32)))))AND(CASE rt0.c0  WHEN t1.c98 THEN rt0.c2 ELSE vt0.c0 END)), (((t1.c1)) NOT BETWEEN ((CASE t1.c55  WHEN t1.c55 THEN rt0.c2 WHEN t1.c18 THEN NULL WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) AND ((rt0.c5)))), TOTAL((((rt0.c3)) BETWEEN (('376862503')) AND ((t1.c98)))) OVER () FROM rt0, vt0;SELECT ALL ((((rt0.c4)|(rt0.c0))) IS TRUE) FROM rt0, v0 WHERE (CAST(((x'') NOT BETWEEN (x'') AND (NULL)) AS NUMERIC)); -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (((t1.c2)>(vt0.c0))) AND (CAST(NULL AS TEXT))) FROM v0, vt0, t1 WHERE (((((+ ('-1312799368'))))>=((((NULL) IS TRUE)))));SELECT DISTINCT ((t1.c1 IN ()) IN (((((rt0.c0)AND(t1.c98)))AND(rt0.c5)), 0.9454407468637197)), CASE (rt0.c4 IN ())  WHEN CASE WHEN rt0.c3 THEN rt0.c4 WHEN t1.c1 THEN NULL WHEN rt0.c5 THEN t1.c1 ELSE '-22487221' END THEN CASE t1.c98  WHEN rt0.c1 THEN t1.c98 END END, CAST(t1.c32 COLLATE BINARY AS REAL) FROM rt0, vt0, v0 GROUP BY ((CASE t1.c55  WHEN -1150078366 THEN rt0.c2 ELSE t1.c18 END)+(((t1.c18)>>(rt0.c4))));SELECT DISTINCT ((((((((((((((((0.925932668591503)OR(t1.c1)))AND(vt0.c0)))OR(t1.c55)))AND(rt0.c4)))OR(t1.c1 COLLATE RTRIM)))OR(((t1.c55) ISNULL))))AND((((rt0.c5))!=((t1.c18))))))AND(NULLIF(t1.c1, t1.c32))), x'', ((((((rt0.c1)/(rt0.c5)))OR(TOTAL(t1.c1))))AND((~ (t1.c98)))) FROM t1 WHERE (((NULL)LIKE((x'' IN (' wM9 rhours燊')))));SELECT DISTINCT NULLIF((+ (v0.c0)), ((t1.c2) NOT NULL)) FROM vt0, t1, v0; -- 0ms;
SELECT MIN(((t1.c18) NOT NULL)), COUNT(*), ((UPPER(DISTINCT rt0.c0))<(t1.c18 COLLATE RTRIM)) FROM v0;SELECT ((CASE WHEN t1.c28 THEN v0.c0 END)|(SQLITE_VERSION())) FROM t1 WHERE (((CAST(0.06697353127014583 AS BLOB))LIKE(((NULL)OR(0Xffffffffd1ac793c))))) GROUP BY (+ (((t1.c98)OR(rt0.c1)))), (- (((((((((v0.c0)OR(t1.c2)))OR(rt0.c1)))AND(t1.c32)))OR(rt0.c2)))), (((- (rt0.c2))) IS TRUE);SELECT DISTINCT ((((((rt0.c0)IS NOT(rt0.c4)))OR(((((t1.c55)OR(rt0.c3)))OR(t1.c1)))))AND(((rt0.c0)<<(rt0.c1)))) FROM rt0, vt0, v0 WHERE (CHANGES()) LIMIT -1825715712 OFFSET -694826314;SELECT ((((t1.c2) IS TRUE))<=((((rt0.c1, rt0.c4, rt0.c4))<((t1.c98, t1.c1, rt0.c2))))) FROM v0, t1, vt0, rt0 WHERE (CASE '0.07623607023135814'  WHEN CAST(0.9567228293880959 AS BLOB) THEN CAST(0.9797827064433019 AS INTEGER) WHEN (((NULL))<>((x''))) THEN 0x4f59f6f1 WHEN (('-299365316')%('0.11529068759668992')) THEN (((('h	1v')AND(x'')))OR(x'455d')) END) ORDER BY ((t1.c18)>(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((rt0.c3 COLLATE RTRIM) NOTNULL) FROM v0, t1, rt0, vt0; -- 0ms;
SELECT DISTINCT COUNT(((t1.c28) BETWEEN (rt0.c0) AND (0.24459274531082287))) OVER () FROM vt0, rt0, v0;SELECT DISTINCT ((rt0.c0) NOT NULL) COLLATE BINARY FROM v0, t1, vt0 WHERE (CASE WHEN ((0.7153420432873372) BETWEEN (NULL) AND (6.02532762E8)) THEN CASE x''  WHEN 0X64fec926 THEN 0xffffffff81beb4e4 WHEN x'' THEN 'khwm,#u\n(' WHEN '-204345924' THEN NULL ELSE x'' END WHEN ((((x'')OR('489058496')))AND(NULL)) THEN (- (0.19252480084133516)) WHEN x'' THEN (NULL IN ()) END) LIMIT -1330180817;SELECT DISTINCT (CASE WHEN rt0.c1 THEN vt0.c0 END IN ()), ((rt0.c0 IN (283160984, t1.c55)) IN ()), t1.c1 FROM rt0;SELECT ALL (((t1.c32)=(t1.c98)) IN ((t1.c1 IN (rt0.c2)))), ((x'')>=(((((NULL)AND(rt0.c3)))OR(vt0.c0)))), (CAST(rt0.c5 AS REAL) IN (((rt0.c5) NOTNULL))) FROM vt0 INNER JOIN v0 ON UNLIKELY(DISTINCT x'');SELECT ALL 'ꐺ,', CASE (t1.c98 IN ())  WHEN ((rt0.c3)/(rt0.c3)) THEN (((t1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE t1.c2 COLLATE RTRIM END, DENSE_RANK() OVER ( ORDER BY rt0.c5 ASC  NULLS FIRST) FROM rt0, v0, t1 WHERE (0.03405617970862762); -- 1ms;
SELECT ALL (- (-0.0)), TOTAL((((rt0.c4, t1.c18, vt0.c0, rt0.c4, rt0.c0))!=((rt0.c1, v0.c0, NULL, rt0.c3, t1.c28)))) OVER ( ORDER BY (((((t1.c32)) BETWEEN ((t1.c55)) AND ((t1.c2))))||((('')/(t1.c55))))  NULLS LAST), (~ (CASE WHEN rt0.c4 THEN rt0.c4 END)) FROM v0 ORDER BY (~ (('468730478' IN ())));SELECT DISTINCT ROW_NUMBER() OVER () FROM t1; -- 0ms;
SELECT (NOT (((rt0.c0)&(t1.c55)))), (((((((rt0.c2)AND(t1.c32)))AND(rt0.c5))))!=((x'188b6656' COLLATE BINARY))), CAST(((t1.c98)+(rt0.c0)) AS REAL) FROM rt0, t1 WHERE ((- ((('')IS NOT('-262599437'))))) GROUP BY ((((t1.c98) NOT BETWEEN (t1.c28) AND (vt0.c0)))*((NOT (t1.c2)))) HAVING ((((t1.c18)|(t1.c55)))%(0Xc729f10));SELECT DISTINCT CASE WHEN 815668567 THEN CASE rt0.c2  WHEN t1.c32 THEN t1.c28 ELSE t1.c2 END ELSE TRIM(DISTINCT rt0.c3) END FROM t1, v0, rt0 INDEXED BY i71 WHERE (((NULL)+(-1752559715)) COLLATE NOCASE);SELECT DISTINCT TOTAL(0.21726886406606538) FROM vt0, v0, rt0, t1 GROUP BY CAST('g돳v pUO' AS INTEGER), (CASE WHEN t1.c1 THEN rt0.c0 END IN ()), (NOT (json_remove(rt0.c5, t1.c28))); -- 0ms;
SELECT DISTINCT 0Xffffffff8174c799 FROM v0 WHERE ('-1018918576'); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (t1.c18) AND (rt0.c3))) IS TRUE) FROM rt0, vt0;SELECT ALL ((CASE v0.c0  WHEN t1.c28 THEN t1.c98 ELSE x'0339ad67' END)>(((rt0.c5)!=(rt0.c0)))) FROM t1, vt0 WHERE ('-171416189') GROUP BY CAST(((t1.c28)IS NOT(rt0.c4)) AS INTEGER) HAVING t1.c1;SELECT DISTINCT ((rt0.c2) BETWEEN (t1.c18) AND (NULL)) COLLATE BINARY FROM vt0 WHERE (((((0Xffffffffde23dd6b)-(0Xffffffffeaba70a6)))IS(((x'0168')IS(x'')))));SELECT (x'' COLLATE BINARY IN ((rt0.c0 IN (0.07623607023135814)))) FROM v0, rt0, vt0 WHERE (CAST(((x'')LIKE(x'')) AS REAL)); -- 0ms;
SELECT DISTINCT ((((v0.c0 COLLATE RTRIM)AND(((rt0.c2)=(t1.c2)))))AND(((t1.c32)<(x'665240da')))), ((((((((((t1.c55) NOT BETWEEN (rt0.c4) AND (t1.c32)))AND((NOT (t1.c28)))))OR(((((t1.c1)OR('o6nXcilA螙')))AND(t1.c32)))))AND(((rt0.c1)&(t1.c18)))))OR(x'')), vt0.c0 FROM v0, rt0 WHERE (x'3edd') GROUP BY ((((rt0.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (((t1.c98) BETWEEN (t1.c98) AND (t1.c18))) AND (((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c2)))AND(t1.c28)))) HAVING ((rt0.c3) IS FALSE);SELECT TYPEOF(DISTINCT (- (rt0.c0))) FROM rt0, vt0, t1, v0 WHERE (((((NULL) NOT BETWEEN ('') AND (x'')))AND(0xffffffffdabf8521 COLLATE RTRIM))) GROUP BY CASE WHEN x'' THEN (~ (t1.c98)) END, ((NULL) IS TRUE), ((CASE rt0.c4  WHEN t1.c55 THEN v0.c0 WHEN rt0.c5 THEN rt0.c3 WHEN v0.c0 THEN 0xffffffff9ceb474a END)LIKE(QUOTE(t1.c28))); -- 0ms;
SELECT DISTINCT (+ (t1.c18)), ((CASE vt0.c0  WHEN t1.c28 THEN rt0.c1 END) NOTNULL), -972987704 FROM vt0 CROSS JOIN t1 ON t1.c32 COLLATE BINARY;SELECT ALL (- (rt0.c0)) COLLATE RTRIM COLLATE NOCASE, CAST(((rt0.c4)<=(rt0.c5)) AS BLOB), rt0.c4 FROM t1 LEFT OUTER JOIN vt0 ON (- ((((t1.c2, v0.c0, v0.c0)) BETWEEN (('889352815', t1.c28, t1.c2)) AND ((0Xffffffffb6a07728, t1.c32, t1.c1))))) FULL OUTER JOIN v0 ON ((((((v0.c0)AND(rt0.c4)))AND(t1.c98))) ISNULL);SELECT DISTINCT (((vt0.c0 IN (t1.c32, '-204345924'))) BETWEEN (0.767753980133477) AND ('1530924256')) FROM t1, v0, vt0; -- 0ms;
SELECT DISTINCT ((HEX(rt0.c5)) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CAST(0Xfffffffff0274703 AS TEXT))), MIN(('GR' IN (x'', t1.c32))), ((((rt0.c4 COLLATE RTRIM)AND(((rt0.c0) IS TRUE))))OR(((x'84ff')*(vt0.c0)))) FROM v0 LIMIT -676515975 OFFSET 602532762;SELECT ALL ((((t1.c28) IS FALSE)) NOT BETWEEN (((((vt0.c0)AND(t1.c98)))AND(rt0.c3))) AND ((((t1.c1)) BETWEEN ((t1.c1)) AND ((rt0.c2))))), ((((((t1.c1)-(rt0.c2)))OR(CAST(t1.c28 AS INTEGER))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))), (((rt0.c5)) BETWEEN ((((t1.c2)%(rt0.c5)))) AND ((((rt0.c4) NOT BETWEEN (t1.c1) AND (t1.c2))))) FROM v0;SELECT ((((t1.c98) NOT BETWEEN (t1.c28) AND (rt0.c3)))&((+ (rt0.c4)))) FROM rt0, t1 WHERE ((+ ((- (0x6d7e44c0))))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN t1.c2 ELSE vt0.c0 END THEN SUM(NULL) WHEN STRFTIME(t1.c55, NULL, t1.c32) THEN (rt0.c0 IN ()) WHEN rt0.c2 THEN ((v0.c0)<=(v0.c0)) END FROM vt0, v0, rt0;SELECT SQLITE_SOURCE_ID() FROM rt0; -- 0ms;
SELECT DISTINCT CASE (NOT (rt0.c5))  WHEN (t1.c28 IN (0x28b27320)) THEN t1.c55 ELSE CAST(t1.c55 AS BLOB) END, TOTAL(json_extract(rt0.c0, rt0.c0, t1.c1, t1.c28)), SUM(CAST(rt0.c2 AS REAL)) OVER () FROM t1, v0 WHERE (LIKELIHOOD(((('-1016360268', 2.076799424E9, 'aV/|x3t*r', '', '-1205087389'))<((x'', NULL, 0.7344078342896262, '1e500', NULL))), 0.6236410787932029)) GROUP BY (((t1.c28)AND(t1.c1)) IN ()) ORDER BY (((rt0.c2 IN ()))=((- (rt0.c1))))  NULLS FIRST;SELECT DISTINCT AVG((t1.c98 IN (t1.c2))) OVER (), ABS(DISTINCT COUNT(*)), (((t1.c28) BETWEEN (t1.c2) AND (rt0.c2)) IN (SQLITE_COMPILEOPTION_USED(rt0.c5))) FROM t1, v0, rt0 WHERE ((((~ ('-1269689056')))-(CASE WHEN '1448873899' THEN 0Xffffffffd695cab6 WHEN x'24a9b291' THEN -478508203 WHEN x'' THEN NULL ELSE '-120859884' END))); -- 0ms;
SELECT (((('-962779879')OR(((t1.c98)+(rt0.c4)))))AND(NULL)) FROM rt0;SELECT DISTINCT (((t1.c18 IN ())) ISNULL) FROM t1, vt0; -- 0ms;
SELECT ALL COUNT(*) OVER ( ORDER BY ((((t1.c55)<>(rt0.c0)))||(((((rt0.c0)AND(rt0.c3)))OR(t1.c2)))) DESC) FROM vt0, rt0, v0 WHERE (CAST(((x'') IS TRUE) AS NUMERIC)) LIMIT 2041595113 OFFSET -828653359;SELECT DISTINCT ((x'fb96')+(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)))) FROM vt0 WHERE ((CASE WHEN x'83b8' THEN '|x*wEBx' ELSE x'' END IN ()));SELECT DISTINCT TOTAL(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) OVER () FROM t1, v0, rt0 LIMIT -738724436;SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c1)))OR(((t1.c2) NOT NULL))))OR((rt0.c5 IN ()))) FROM v0, t1, rt0, vt0 ORDER BY (- ((+ (0.42489287257759245)))), '2402416'  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE rt0.c5  WHEN t1.c32 THEN rt0.c4 ELSE NULL END COLLATE NOCASE FROM t1, vt0, v0 WHERE ((((('454197307')=(NULL))) IS FALSE));SELECT ALL (((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) COLLATE RTRIM, rt0.c5 COLLATE BINARY, (('-2084835691') NOTNULL) FROM t1, vt0, v0, rt0; -- 0ms;
SELECT DISTINCT CAST(NULL AS INTEGER) COLLATE BINARY FROM t1, vt0, rt0, v0 GROUP BY (((((('	L[s+W6+5') NOT BETWEEN (v0.c0) AND (rt0.c2)))OR(((rt0.c4) NOT BETWEEN ('1130376285') AND (t1.c28)))))AND((t1.c2 IN ()))) HAVING ((rt0.c4) NOT NULL);SELECT DISTINCT x'' FROM vt0, v0 WHERE (('u' COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT (((t1.c1 IN ()))AND(rt0.c4 COLLATE BINARY)) FROM rt0, v0 WHERE (CAST(CASE 0.6821166534395917  WHEN NULL THEN NULL WHEN NULL THEN '10717578' WHEN x'22e5' THEN x'5e87' END AS BLOB)); -- 0ms;
SELECT DISTINCT ((-2050751783) BETWEEN (((((t1.c55)AND(t1.c98)))OR(t1.c1))) AND (((t1.c18) ISNULL))) FROM v0, t1 WHERE (TRIM(((0.7968422144737961)&(NULL)), UNICODE(x''))); -- 0ms;
SELECT ALL FIRST_VALUE(CASE ((t1.c98)GLOB(t1.c55))  WHEN (- (t1.c1)) THEN ((vt0.c0)+(t1.c18)) END) OVER () FROM t1, vt0; -- 1ms;
SELECT (((rt0.c2)) BETWEEN (('h[ꝣo')) AND ((0.6063078248029887))) FROM vt0;SELECT ALL CASE WHEN t1.c18 THEN MAX(vt0.c0) ELSE (~ (t1.c1)) END, ((CAST(rt0.c2 AS INTEGER))<('')), CAST(NULL AS NUMERIC) FROM vt0, t1, v0 WHERE (('0.4222046351622165' IN (CASE ')%'  WHEN x'' THEN x'' END)));SELECT DISTINCT (+ ((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((t1.c28))))) FROM rt0, v0, vt0, t1; -- 0ms;
SELECT t1.c18, 'rwWa', ((((CASE WHEN rt0.c1 THEN NULL ELSE vt0.c0 END)AND((rt0.c5 IN (t1.c28, t1.c55)))))AND((((rt0.c5, rt0.c4, rt0.c1))>=((rt0.c3, t1.c28, rt0.c5))))) FROM t1 RIGHT OUTER JOIN v0 ON (((((t1.c18)IS(rt0.c5))))<((t1.c28 COLLATE RTRIM))) WHERE (((((TRIM(NULL, 'NzU?np|B'))OR(json_object(x'', NULL))))OR((('-289908659')GLOB(x'')))));SELECT ((((rt0.c4)LIKE(t1.c28))) NOT BETWEEN (MAX(t1.c28)) AND (((((t1.c1)OR(t1.c32)))OR(rt0.c1)))) FROM t1, vt0, rt0, v0 WHERE (CAST(NULL AS REAL) COLLATE RTRIM); -- 0ms;
SELECT ALL GROUP_CONCAT(((t1.c55)!=(t1.c98))) OVER () FROM t1 ORDER BY ((CAST(t1.c1 AS INTEGER))+(CAST(x'' AS INTEGER))), ((((t1.c1)AND(rt0.c3))) ISNULL)  NULLS LAST, CASE WHEN (- (0.4109805951828577)) THEN NULL WHEN ((((t1.c28)OR(t1.c18)))OR(rt0.c2)) THEN (((v0.c0)) NOT BETWEEN ((t1.c32)) AND ((vt0.c0))) WHEN (v0.c0 IN ()) THEN CAST(x'' AS REAL) ELSE ((rt0.c0) IS FALSE) END ASC;SELECT ((CASE rt0.c5  WHEN v0.c0 THEN t1.c2 END)%(((t1.c28) NOTNULL))) FROM t1, rt0 WHERE (CASE WHEN x'' COLLATE BINARY THEN ((('g돳v puo'))>((NULL))) WHEN LOWER(0.5877717115787793) THEN CAST(x'' AS NUMERIC) WHEN (('B{0ь')GLOB('E	\nq')) THEN ((((((((((((-2.050751783E9)AND(x'9e15')))OR(206875742)))AND(NULL)))AND(NULL)))OR(NULL)))AND(0x1b12803b)) ELSE x'21548f7a' COLLATE BINARY END);SELECT ((CAST(rt0.c3 AS BLOB)) IS FALSE) FROM t1, rt0; -- 0ms;
SELECT DISTINCT AVG(((((rt0.c5)OR(t1.c55)))AND(rt0.c3))) OVER (), ((((vt0.c0) NOTNULL)) ISNULL), (((((((((t1.c55 IN (rt0.c2, rt0.c4)))OR(((((rt0.c5)AND(rt0.c0)))AND(rt0.c5)))))OR((vt0.c0 IN (rt0.c2)))))OR(((rt0.c2) NOT NULL))))AND(NULL)), (((('208838416')IS(t1.c28)))IS(((rt0.c5)%(NULL)))), ((((t1.c1) NOT BETWEEN (t1.c32) AND (vt0.c0))) BETWEEN (t1.c55 COLLATE NOCASE) AND (((rt0.c0) IS FALSE))) FROM vt0 LIMIT -1305876837;SELECT ALL json_remove(0xffffffffc9470176, CASE rt0.c2  WHEN v0.c0 THEN rt0.c5 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c4 ELSE v0.c0 END) FROM t1, vt0 WHERE (((((0.2890898239417937)+(x'')))IS NOT(((NULL) NOT BETWEEN (NULL) AND (NULL)))));SELECT ALL 1430584019, CASE t1.c1  WHEN t1.c1 THEN t1.c18 END COLLATE BINARY, ((CASE WHEN t1.c98 THEN t1.c32 WHEN rt0.c1 THEN t1.c1 WHEN rt0.c5 THEN rt0.c0 ELSE t1.c32 END)<<((((t1.c2, v0.c0, t1.c55, t1.c32, v0.c0)) NOT BETWEEN ((t1.c18, t1.c2, rt0.c4, v0.c0, t1.c55)) AND ((t1.c1, rt0.c0, t1.c98, v0.c0, t1.c1))))) FROM rt0, vt0, t1, v0 WHERE (LOWER((((('-649624206')AND(NULL)))OR('')))) GROUP BY ((((CAST(t1.c18 AS TEXT))AND(((((t1.c28)OR(rt0.c4)))OR(t1.c28)))))AND(0.23865303216176603)), ((((vt0.c0)>=(t1.c18))) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CAST(rt0.c4 AS NUMERIC))), v0.c0; -- 0ms;
SELECT DISTINCT -1.20859884E8 FROM rt0, t1 ORDER BY ((((((((CASE WHEN t1.c2 THEN rt0.c1 END)OR((rt0.c0 IN (rt0.c2, t1.c28)))))OR(((t1.c18) BETWEEN (v0.c0) AND (rt0.c5)))))AND(((rt0.c1)!=(t1.c32)))))AND(((t1.c55) IS FALSE))), ((rt0.c1) BETWEEN (COALESCE(DISTINCT rt0.c1, t1.c18, rt0.c4, rt0.c1)) AND (CAST(rt0.c1 AS REAL)))  NULLS LAST;SELECT ((t1.c18)GLOB((((rt0.c5))>((rt0.c4))))) FROM v0, t1;SELECT DISTINCT ((v0.c0)>=(t1.c98)) COLLATE NOCASE, ((COUNT(t1.c98))<(rt0.c0 COLLATE RTRIM)), v0.c0 FROM rt0 NOT INDEXED, vt0, v0;SELECT ALL ((((t1.c98)GLOB(t1.c32))) NOT BETWEEN (rt0.c3) AND (UPPER('1300408163'))) FROM rt0 LIMIT -1136710690 EXCEPT SELECT ALL FIRST_VALUE(((((CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 WHEN '#y' THEN rt0.c4 WHEN 1.83556156E9 THEN rt0.c4 END)AND(((rt0.c3) NOTNULL))))AND(((rt0.c5)/(vt0.c0))))) OVER () FROM v0, vt0, rt0;SELECT ALL t1.c55 FROM vt0 WHERE ((((((NOT ('S>3b0d')))OR(SQLITE_VERSION())))AND(CASE x''  WHEN NULL THEN '468730478' WHEN 0.09721694924387059 THEN NULL WHEN 3.52411151E8 THEN -803683836 ELSE NULL END)));SELECT DISTINCT ((0x7c0022d IN ()) IN ((t1.c55 IN ('1685405694')))), ((ROUND(vt0.c0, '')) NOT BETWEEN (CASE rt0.c5  WHEN t1.c98 THEN t1.c98 ELSE t1.c28 END) AND (((((((((rt0.c2)OR(t1.c28)))AND(t1.c18)))OR(rt0.c3)))AND(rt0.c1)))), (NOT (INSTR(x'', rt0.c5))) FROM rt0, t1, vt0 WHERE ((((((0Xffffffffffa3a51e)>=(1.138414918E9)), NULL, ((NULL) BETWEEN (x'763e') AND ('-386435949'))))<=((((0.839222918428004)IS NOT(x'')), (((('-1301860796')AND('208838416')))AND('1814636212')), ((-434249419)>=(0.5852976590829467)))))); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM rt0, vt0, t1 WHERE (CHAR(CAST('-291192985' AS REAL))); -- 0ms;
SELECT DISTINCT ((CASE t1.c55  WHEN t1.c98 THEN t1.c55 ELSE vt0.c0 END)>=(MAX(rt0.c0))) FROM v0, vt0, rt0;SELECT DISTINCT x'', (- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))), TOTAL(((((rt0.c5)AND(t1.c1)))OR(rt0.c0))) OVER () FROM v0, vt0, t1;SELECT ALL (- (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))OR('-1275891051')))OR(t1.c2)))) FROM t1;SELECT (((((t1.c28, rt0.c3, -532323808))!=((rt0.c0, v0.c0, t1.c98)))) NOTNULL), UNLIKELY(DISTINCT CAST(rt0.c2 AS TEXT)), COUNT('') OVER () FROM t1;SELECT ALL (((rt0.c3 IN (t1.c98)))GLOB(CASE t1.c1  WHEN t1.c32 THEN rt0.c0 WHEN v0.c0 THEN t1.c55 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END)) FROM rt0 CROSS JOIN t1 ON CASE WHEN ((t1.c28)*(rt0.c5)) THEN ((rt0.c2) NOT BETWEEN (t1.c98) AND (t1.c55)) END LEFT OUTER JOIN v0 ON LOWER(rt0.c4) FULL OUTER JOIN vt0 ON CAST('1702750590' AS NUMERIC) WHERE (json(NULL)); -- 0ms;
SELECT ((SUM(t1.c28))|(t1.c32 COLLATE RTRIM)) FROM t1, v0, rt0, vt0 WHERE ((+ ((((''))>(('0.7546718796558026')))))); -- 0ms;
SELECT (((+ (rt0.c3))) NOT NULL) FROM rt0, v0, vt0; -- 0ms;
SELECT DISTINCT ((((((t1.c18)AND(rt0.c1)))OR(t1.c2)))>>((- (t1.c55)))) FROM rt0, t1; -- 0ms;
SELECT ((t1.c1) BETWEEN (t1.c55) AND (x'2a8a')) COLLATE BINARY FROM v0, vt0, rt0;SELECT ALL ((CASE t1.c98  WHEN 0.22662771290729666 THEN rt0.c3 ELSE t1.c2 END) BETWEEN (((t1.c18) NOT NULL)) AND (x'')) FROM rt0, vt0;SELECT DISTINCT LAG((((vt0.c0)) NOT BETWEEN (('9936644')) AND ((LTRIM(t1.c2, t1.c2)))), (((- (t1.c28)))||(t1.c2 COLLATE NOCASE)), ((((t1.c28))<=((v0.c0))) IN ())) OVER () FROM v0, vt0, t1; -- 1ms;
SELECT DISTINCT ((((rt0.c2) NOT NULL)) IS FALSE), TOTAL(CAST(rt0.c2 AS INTEGER)) FILTER(WHERE (- (t1.c55))) OVER (), vt0.c0, NULL, (~ (CAST(t1.c2 AS TEXT))) FROM v0, rt0, vt0 LIMIT 954667006;SELECT DISTINCT LEAD((((rt0.c0) NOTNULL) IN (((((rt0.c4)AND(rt0.c5)))OR(rt0.c0)))), (NOT (((rt0.c3) ISNULL))), (NULL IN (rt0.c4 COLLATE BINARY))) OVER (), ((t1.c1) IS TRUE), NULL FROM rt0 WHERE (CAST(x'' AS INTEGER));SELECT ALL LAG(((CASE WHEN x'14aa' THEN rt0.c2 ELSE t1.c28 END)==((((t1.c18))>((rt0.c3))))), t1.c32, (((~ (t1.c32)))IS((rt0.c5 IN (t1.c32))))) OVER () FROM rt0, vt0, t1; -- 0ms;
SELECT ALL CAST(CAST(rt0.c3 AS TEXT) AS REAL), ((((((((0.6614398800801281)AND(((x'') NOT BETWEEN (t1.c18) AND (-1.016360268E9)))))AND((((v0.c0))>=((rt0.c5))))))AND(((v0.c0) BETWEEN (vt0.c0) AND (t1.c55)))))OR(((t1.c98)LIKE(t1.c18)))), ((((t1.c32) NOTNULL))OR(t1.c18)), (((CASE WHEN t1.c55 THEN vt0.c0 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c5 ELSE t1.c18 END))<=((rt0.c4))), COUNT(CASE t1.c2  WHEN rt0.c5 THEN t1.c2 ELSE t1.c55 END) FROM rt0, v0 NOT INDEXED, vt0, t1 LIMIT 926525207 OFFSET -1654296593; -- 0ms;
SELECT DISTINCT FIRST_VALUE(t1.c55) OVER () FROM t1, rt0, vt0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c0)=(rt0.c5))) FROM vt0, t1, rt0, v0; -- 1ms;
SELECT DISTINCT (((((t1.c28)>(rt0.c3))))>=((((((t1.c1)OR(rt0.c1)))OR(rt0.c2))))) FROM v0;SELECT rt0.c2 FROM v0;SELECT DISTINCT 0.6799558268371801, (((NOT (vt0.c0)))AND(NULL)), ((CASE rt0.c2  WHEN t1.c28 THEN rt0.c0 ELSE t1.c55 END)IS NOT(((t1.c55) ISNULL))), ((((((((((0.670204691907025)OR(t1.c2)))OR(rt0.c4)))AND(t1.c98)))OR(t1.c32))) BETWEEN (vt0.c0) AND (LIKELIHOOD(t1.c55, 0.9488951230064882))), (((t1.c28 IN (rt0.c1))) NOT BETWEEN (CAST(x'b6c7' AS BLOB)) AND ('-2040658446')) FROM rt0 NOT INDEXED, vt0, t1, v0 WHERE ((((((NULL, 201991381, '')) NOT BETWEEN (('-988310757', -2142434840, 0.8571978799033607)) AND ((x'', x'f451', 0.5878055538982615))))GLOB((('211622455')>>(NULL))))) ORDER BY ((t1.c18) BETWEEN (rt0.c0) AND (t1.c98)) COLLATE RTRIM, ((((((t1.c98)&(rt0.c0)))OR(((t1.c32) ISNULL))))AND(0.7448840295246607)); -- 1ms;
SELECT rtreenode(((t1.c2) NOT BETWEEN (rt0.c1) AND (t1.c1)), TOTAL(t1.c98)), ((((t1.c55)-(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (((t1.c98) IS FALSE))), LAST_VALUE(((x'') BETWEEN (CASE rt0.c5  WHEN rt0.c0 THEN rt0.c0 END) AND (CAST(t1.c28 AS REAL)))) OVER (), (((CAST(rt0.c3 AS BLOB)))=((CAST(v0.c0 AS REAL)))), (((((t1.c18, NULL, t1.c18))>((rt0.c2, '431404392', t1.c32)))) IS FALSE) FROM vt0, rt0, v0, t1 WHERE (((((NULL) NOT BETWEEN (0.4909325751074638) AND ('1739273186'))) IS TRUE)); -- 0ms;
SELECT ALL NULL FROM rt0, t1, v0 NOT INDEXED, vt0 WHERE (((((((((x'')AND(0.13638342196508035)))OR('cA')))OR((('') IS FALSE))))AND(PRINTF(x'')))); -- 0ms;
SELECT ALL CASE WHEN (((t1.c18))<=((vt0.c0))) THEN ((v0.c0) IS FALSE) WHEN (t1.c28 IN ()) THEN (((t1.c1)) BETWEEN ((t1.c55)) AND ((t1.c1))) WHEN ((rt0.c1)<(t1.c28)) THEN (rt0.c4 IN ()) END, (((t1.c1) NOT BETWEEN (x'') AND (rt0.c1)) IN ()), (((rt0.c0, rt0.c4, t1.c28)) BETWEEN ((((t1.c55)OR(t1.c2)), ((rt0.c4) IS TRUE), (rt0.c2 IN ()))) AND ((CASE t1.c1  WHEN rt0.c5 THEN t1.c98 END, rt0.c4, CAST(t1.c55 AS TEXT)))) FROM rt0, vt0, v0, t1 WHERE (((NULL COLLATE RTRIM)%((((0.9263389247602863))>((NULL)))))); -- 0ms;
SELECT DISTINCT (((~ (rt0.c0))) BETWEEN (NULL) AND (((t1.c1)<(t1.c98)))), AVG(((t1.c1)==(t1.c98))), CAST(0Xffffffffba8b4612 AS NUMERIC), COUNT(CAST('' AS BLOB)), (+ (CAST(rt0.c5 AS REAL))) FROM t1;SELECT ALL PERCENT_RANK() OVER (), ((((v0.c0)>>(rt0.c2))) NOTNULL), ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END)AND(NULLIF(v0.c0, rt0.c2))), (rt0.c3 COLLATE BINARY IN ()), (((((((((+ (t1.c28)))OR(t1.c1 COLLATE NOCASE)))AND(((t1.c32) BETWEEN (v0.c0) AND (t1.c18)))))AND(CAST(rt0.c1 AS INTEGER))))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN -9.88310757E8 WHEN t1.c28 THEN rt0.c5 END)) FROM t1, vt0, rt0 WHERE (x'') LIMIT -1818537928 OFFSET 727878202;SELECT DISTINCT CAST(((rt0.c4)>=(t1.c32)) AS REAL) FROM vt0, t1, rt0 LIMIT 1266260416; -- 0ms;
SELECT ((((rt0.c2)OR(t1.c32)))AND(rt0.c3)) COLLATE NOCASE FROM vt0, t1;SELECT x'fd31' FROM rt0, vt0, t1 WHERE ('1567979141'); -- 0ms;
SELECT DISTINCT vt0.c0, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((((((((((t1.c18)AND(rt0.c0)))AND(t1.c98)))AND(NULL)))AND(t1.c55))))), ((t1.c28 COLLATE NOCASE) IS TRUE) FROM rt0 INDEXED BY i71;SELECT rt0.c0 FROM v0, rt0, t1 WHERE ('804417431'); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(CASE vt0.c0  WHEN 0xffffffffa1be40c5 THEN rt0.c0 END), v0.c0, (((t1.c32 IN ()))IS(((rt0.c3) BETWEEN (rt0.c2) AND (t1.c32)))) FROM v0, t1, vt0;SELECT DISTINCT (((((v0.c0)) BETWEEN ((t1.c18)) AND ((t1.c98))))>(TOTAL(t1.c55))), (- (((v0.c0) BETWEEN (t1.c32) AND (t1.c2)))), ((((((t1.c98) BETWEEN (t1.c2) AND (t1.c1)))AND(((rt0.c2)*(t1.c55)))))OR(CASE t1.c55  WHEN rt0.c0 THEN t1.c55 END)) FROM t1, rt0, v0; -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c5 AS TEXT))AND(((rt0.c5)>(rt0.c3)))))AND(t1.c98 COLLATE NOCASE)), ((((((((((((t1.c98)OR(t1.c2)))AND(t1.c18)))AND(((((((((((((vt0.c0)OR(t1.c2)))OR(v0.c0)))OR(rt0.c0)))OR(t1.c28)))AND(rt0.c2)))OR(t1.c1)))))AND(rt0.c0 COLLATE RTRIM)))AND(COUNT(t1.c32))))OR((((('h챈EnDU')AND(0.8777874400999826)))OR(t1.c98)))), CAST(t1.c18 AS REAL) COLLATE BINARY FROM vt0 WHERE ((((NULL) NOT BETWEEN (-270079349) AND (0.8360664675940088)) IN (('1459590414' IN ()))));SELECT ABS(((rt0.c0)<<(rt0.c0))) FROM vt0, rt0, v0; -- 0ms;
SELECT (((rt0.c2 IN ()))<=(((((rt0.c1)OR(rt0.c3)))OR(t1.c98)))), ((CASE WHEN t1.c2 THEN t1.c98 WHEN rt0.c0 THEN t1.c2 WHEN v0.c0 THEN t1.c1 END) IS FALSE), ((((((rt0.c5)OR(rt0.c2)))AND(rt0.c5))) NOT BETWEEN ((- (t1.c1))) AND (((rt0.c1) BETWEEN ('1135870197') AND (rt0.c5)))) FROM rt0, v0;SELECT ALL AVG(((t1.c98)==(t1.c28))) OVER (), TRIM(DISTINCT UPPER(rt0.c2), CAST(t1.c18 AS REAL)), CASE CAST('328421727' AS NUMERIC)  WHEN (0Xffffffff840dbaa2 IN ()) THEN ((t1.c55) NOT BETWEEN (t1.c28) AND (rt0.c4)) END FROM vt0, v0, t1 WHERE ((((NULL, 0.8992386155029761, x'', 0.6116257719456237, 0.6064664670309848)) NOT BETWEEN ((((((x'')AND('lDc_xg4盨,')))AND(1.300408163E9)), x'', CASE 0.9124842853685634  WHEN -1261249610 THEN x'' END, ('412291315' IN ()), (+ (-3.50859415E8)))) AND ((((NULL) NOT BETWEEN ('-988310757') AND ('1322053901')), ((('1262269957')) BETWEEN (('Q''F~HhT')) AND (('㟖e\PoL\n'))), (((''))>(('Ou'))), ('-600939125' IN ()), CAST(0.955648888228605 AS BLOB))))) ORDER BY CAST((rt0.c1 IN ()) AS TEXT) DESC, ((((t1.c18)<(t1.c98))) BETWEEN ((v0.c0 IN ())) AND ((- (rt0.c4))));SELECT DISTINCT (- (MIN(vt0.c0))), (((t1.c2)>(rt0.c5)) IN ()), (((((t1.c32)) NOT BETWEEN (('')) AND ((vt0.c0))))<<(SUM(vt0.c0))) FROM rt0, vt0 WHERE (((('1146946860' IN ()))LIKE(CAST(305786933 AS INTEGER))));SELECT ALL ((((((v0.c0)+('')))AND(SQLITE_COMPILEOPTION_USED(rt0.c2))))AND(CAST(rt0.c3 AS REAL))), json_extract(((((t1.c18)OR(0.4391917406942527)))AND(rt0.c5)), ((rt0.c0)>>(rt0.c2))), COUNT(((t1.c2)>(t1.c18))) OVER (), rt0.c4, ((((v0.c0)||(vt0.c0)))<=(('mi' IN ()))) FROM rt0, vt0, t1, v0; -- 0ms;
SELECT DENSE_RANK() OVER ( ROWS ((((0xffffffffdfbb11ac IN ()), (- (t1.c1)), ((v0.c0) ISNULL)))>((((t1.c28) IS FALSE), (((t1.c98, vt0.c0, t1.c2)) BETWEEN ((vt0.c0, t1.c32, rt0.c0)) AND ((rt0.c0, rt0.c5, rt0.c4))), CHAR(x'')))) PRECEDING), rt0.c0, (((rt0.c4, rt0.c1, t1.c1)) NOT BETWEEN ((UPPER(DISTINCT rt0.c1), x'301c', t1.c32)) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)), (rt0.c0 IN (t1.c2)), ((v0.c0)&(t1.c98))))), ((t1.c55)!=(t1.c2)) COLLATE NOCASE, ((t1.c2 COLLATE NOCASE)AND('-1479851202')) FROM vt0, v0, rt0, t1; -- 0ms;
SELECT DISTINCT ((x'')IS NOT(CAST(t1.c32 AS REAL))) FROM vt0, v0, rt0 ORDER BY (((t1.c32 IN ())) BETWEEN (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))AND(t1.c98))) AND (((t1.c32) BETWEEN (t1.c1) AND (rt0.c5)))) ASC  NULLS FIRST;SELECT DISTINCT CASE CAST(NULL AS BLOB)  WHEN rt0.c4 COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) END, (((t1.c18) IS TRUE) IN ()), FIRST_VALUE(vt0.c0) OVER () FROM vt0, t1 INNER JOIN v0 ON (CASE WHEN t1.c32 THEN '1265687470' ELSE vt0.c0 END IN (NULL, (rt0.c5 IN (t1.c98)))) INNER JOIN rt0 ON ((CASE t1.c55  WHEN rt0.c3 THEN 0X6e913c4f END)>>('')) WHERE ((((-2099305853)) BETWEEN ((((0xffffffffd020fe22)GLOB(x'')))) AND (((NULL IN ()))))); -- 0ms;
SELECT ((((rt0.c4) NOT BETWEEN (t1.c98) AND (t1.c1)))<=((- (NULL)))), ABS(rt0.c5), ((((rt0.c0) IS TRUE))%(((t1.c2)<(rt0.c2)))) FROM rt0, v0 LIMIT -2050751783;SELECT DISTINCT (~ (((v0.c0)IS NOT(v0.c0)))) FROM v0; -- 0ms;
SELECT ALL '*贯', (NOT (NULL)), (+ (((7.32129401E8)GLOB(rt0.c1)))) FROM v0;SELECT DISTINCT (NOT (CASE WHEN rt0.c0 THEN t1.c2 WHEN t1.c98 THEN rt0.c1 WHEN rt0.c0 THEN t1.c18 ELSE v0.c0 END)) FROM vt0, v0, rt0;SELECT DISTINCT UNICODE(((t1.c28) IS FALSE)), (~ ((((t1.c18, v0.c0, vt0.c0))>((rt0.c5, rt0.c2, t1.c55))))), ((rt0.c2)&(t1.c28)) COLLATE RTRIM COLLATE NOCASE FROM vt0, rt0;SELECT DISTINCT (((rt0.c3)<(t1.c2)) IN ()), (~ (COUNT(*))), CAST((x'' IN (t1.c32)) AS NUMERIC) FROM v0, t1 ORDER BY LOWER(DISTINCT ((t1.c2)GLOB(rt0.c2)))  NULLS LAST;SELECT ((((rt0.c2) BETWEEN (v0.c0) AND (t1.c18))) BETWEEN ((rt0.c3 IN ())) AND (((t1.c28)>(t1.c2)))), t1.c18, CAST(IFNULL(DISTINCT t1.c2, t1.c18) AS REAL), ((((((((rt0.c3)OR(t1.c32)))OR(rt0.c1)))AND(UNLIKELY(rt0.c0))))OR(((x'104d')/(t1.c55)))), ((((((2.076799424E9) BETWEEN (rt0.c3) AND (rt0.c5)))OR(-1.344790118E9 COLLATE NOCASE)))AND((v0.c0 IN (t1.c98)))) FROM rt0, t1, vt0 WHERE (((1851609980) ISNULL) COLLATE RTRIM);SELECT GROUP_CONCAT('') OVER () FROM vt0, rt0; -- 0ms;
SELECT t1.c98 COLLATE BINARY, (((rt0.c0 IN (rt0.c5))) NOT BETWEEN (CASE WHEN 707549671 THEN rt0.c0 WHEN t1.c18 THEN t1.c2 WHEN vt0.c0 THEN rt0.c2 ELSE t1.c2 END) AND (((t1.c55) ISNULL))), ((t1.c55)%(v0.c0)) COLLATE NOCASE FROM vt0, rt0, v0 ORDER BY (- (((rt0.c0) BETWEEN (t1.c1) AND (t1.c32)))) ASC  NULLS FIRST;SELECT DISTINCT ((((t1.c32)>>(t1.c55)))>(rt0.c0 COLLATE BINARY)), CASE WHEN GROUP_CONCAT(rt0.c5) THEN ((t1.c18)GLOB(x'3dae')) END, (((AVG(t1.c32)))>=((CAST(rt0.c3 AS NUMERIC)))), ((rt0.c4)*(CAST(t1.c2 AS INTEGER))), (+ (((rt0.c3) NOTNULL))) FROM v0, rt0, vt0 WHERE (((((((NULL) BETWEEN ('9936644') AND (0.9635642220470437)))OR(JULIANDAY(0.6983998511759497, '1354111168', NULL))))OR('-108099276')));SELECT CASE WHEN (~ (t1.c28)) THEN CAST(rt0.c0 AS NUMERIC) ELSE ((t1.c32) NOT BETWEEN (t1.c2) AND (t1.c28)) END, (((v0.c0)) BETWEEN ((LIKELY(t1.c32))) AND ((CAST(rt0.c5 AS NUMERIC)))), -2099305853 FROM v0, vt0, t1 WHERE ((((+ (x''))) NOT NULL));SELECT ALL GROUP_CONCAT(((rt0.c2)<>(rt0.c5))) OVER ( ORDER BY ((rt0.c3 COLLATE NOCASE) NOT BETWEEN (((rt0.c5)&(t1.c55))) AND ((t1.c18 IN (t1.c2, t1.c28))))) FROM vt0;SELECT ((rt0.c1) IS FALSE) FROM v0, rt0 LIMIT 51982708; -- 0ms;
SELECT DISTINCT (((((~ (t1.c1)))AND((+ (rt0.c0)))))AND(QUOTE(rt0.c2))), ((MAX(t1.c28))AND(((v0.c0)!=(vt0.c0)))), CAST((((rt0.c5))<=((rt0.c4))) AS NUMERIC) FROM v0, vt0 LIMIT -1 OFFSET -1278033799;SELECT DISTINCT NTH_VALUE(t1.c32, (((((- (t1.c98)))OR('-1344790118')))OR(((t1.c98)%(t1.c32))))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM t1 WHERE (('>R\7' COLLATE RTRIM IN (((((0.6029667851832614)AND(x'312b')))AND(0.4303473326378078))))); -- 0ms;
SELECT ALL x'' FROM v0, vt0; -- 0ms;
SELECT '' FROM v0, t1, vt0, rt0 WHERE ((((('1135870197') BETWEEN ('[{''R]') AND (0.6883202255340394))) NOT BETWEEN (((NULL) NOT BETWEEN (0x10e0b198) AND ('0.8153752665180026'))) AND (GLOB(NULL, 'a ')))); -- 0ms;
SELECT ALL (- (t1.c18)) COLLATE NOCASE COLLATE RTRIM, NTILE(((((('0.7778880248187777')) BETWEEN ((rt0.c3)) AND ((rt0.c1)))) BETWEEN (COALESCE(rt0.c4, rt0.c3)) AND (((0.0753818454416082) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) OVER (), (((t1.c98)) BETWEEN (('-775058820')) AND ((((rt0.c5) NOTNULL)))) FROM rt0 WHERE (((NULL)IS(x'8b71')));SELECT DISTINCT TIME(MAX(vt0.c0), (((t1.c32, v0.c0, rt0.c3)) NOT BETWEEN ((v0.c0, rt0.c2, rt0.c5)) AND ((rt0.c4, t1.c18, t1.c32))), (+ (v0.c0))), CAST(((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c0)) AS NUMERIC), ((((0Xffffffffaa3c2df2) IS TRUE)) NOT BETWEEN (((t1.c18) NOTNULL)) AND (((-1.411019473E9) ISNULL))) FROM t1 WHERE (((CAST('-2084835691' AS REAL))<((x'' IN ()))));SELECT DISTINCT (((rt0.c4))==((t1.c55))) COLLATE NOCASE FROM t1, v0 WHERE (json_valid((+ ('-1072702185'))));SELECT DISTINCT (IFNULL(rt0.c2, t1.c1) IN ()) FROM vt0, rt0, t1 INNER JOIN v0 ON COALESCE(t1.c98, (t1.c98 IN ())) LIMIT 1549111173; -- 0ms;
SELECT ALL (((t1.c18 IN (rt0.c0))) ISNULL) FROM vt0, t1, rt0, v0 LIMIT 1547154649; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT NULL))==((t1.c1 IN (rt0.c1)))), (t1.c55 IN ()), RANK() OVER (), ((((0.27029968345694644)OR(t1.c2)))OR(rt0.c5)) COLLATE BINARY, ((((rt0.c3)==(vt0.c0))) IS TRUE) FROM rt0, v0, vt0 WHERE (((x'') NOT NULL));SELECT DISTINCT SUM(((((((((rt0.c5)AND(rt0.c3)))AND(v0.c0)))AND(t1.c32)))AND(rt0.c2))) FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(x''))*(CAST(x'' AS NUMERIC)))) GROUP BY CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM HAVING LOWER(((((t1.c28)OR(vt0.c0)))AND(t1.c1)));SELECT DISTINCT CUME_DIST() OVER (), ((json_array(t1.c18, t1.c98))OR((+ (t1.c2)))), rt0.c5 FROM rt0, v0, vt0 WHERE (((('-1018918576', CASE 'vP'  WHEN x'' THEN 0x4366ef0 WHEN x'a3a9' THEN x'' WHEN 0.8862685210403687 THEN '' END, ((NULL)AND('420878824'))))==((CASE WHEN NULL THEN -695218929 END, (x'' IN ()), (('1307689738') NOT BETWEEN ('964832812') AND (NULL))))));SELECT ((vt0.c0) NOTNULL) FROM t1, vt0, rt0, v0; -- 0ms;
SELECT (json_valid(t1.c32) IN (LAST_INSERT_ROWID())), CAST(((rt0.c4) ISNULL) AS REAL), (((('') BETWEEN (t1.c55) AND (rt0.c3))) NOT BETWEEN ((NOT (rt0.c0))) AND (((((t1.c18)OR(rt0.c2)))OR(rt0.c3)))) FROM t1;SELECT CASE WHEN COUNT(0.9321773803991231) THEN TOTAL(rt0.c3) END FROM vt0, rt0, v0, t1; -- 0ms;
SELECT (+ (t1.c28)) COLLATE BINARY FROM v0, t1 WHERE (CASE CASE x''  WHEN '2076799424' THEN NULL WHEN 0xfffffffff180adc0 THEN x'' WHEN x'' THEN '1448873899' END  WHEN 0.7617578908885598 COLLATE NOCASE THEN NULL COLLATE BINARY WHEN (0.087926479909747 IN (x'')) THEN ('' IN (0X42ebd72f, '.!')) WHEN ((x'')<>(x'')) THEN ((0Xffffffff865e05f2) ISNULL) WHEN (((('298288349')OR('-977114116')))AND(10717578)) THEN (NULL IN ()) WHEN ((NULL) ISNULL) THEN (((('-209138616')AND(NULL)))AND(x'')) ELSE ((((0.7993052139561805)OR(x'')))OR(x'')) END); -- 0ms;
SELECT DISTINCT ((((t1.c32)IS(rt0.c5))) NOT NULL) FROM v0, t1 RIGHT OUTER JOIN vt0 ON rt0.c5 CROSS JOIN rt0 ON x'' GROUP BY NULL;SELECT ((((((((t1.c32)OR(rt0.c5)))OR(rt0.c0)))OR(t1.c98)))AND(v0.c0)) COLLATE NOCASE FROM rt0, v0, vt0, t1 WHERE (CASE WHEN (((('\rg?KT⨔ꐸ')OR(0.6418765473142338)))AND(-2.050751783E9)) THEN ((NULL)|(NULL)) END); -- 0ms;
SELECT DISTINCT LEAD((NOT ((NOT (t1.c28)))), (((t1.c28, rt0.c5, NULL)) NOT BETWEEN ((((((vt0.c0)AND(rt0.c5)))OR(rt0.c2)), (t1.c1 IN ()), ((t1.c55)OR(rt0.c2)))) AND ((((v0.c0)%(vt0.c0)), CASE t1.c2  WHEN rt0.c3 THEN t1.c55 ELSE rt0.c1 END, rt0.c1 COLLATE RTRIM))), (CAST(rt0.c2 AS REAL) IN ())) OVER (), ((ROUND(t1.c32, NULL))+('459569442')), NTH_VALUE((((t1.c28)) NOT BETWEEN ((t1.c32)) AND ((((t1.c32) IS TRUE)))), ((((t1.c98) NOT BETWEEN ('-1734779521') AND (t1.c32))) BETWEEN ((t1.c55 IN ())) AND ((t1.c28 IN ())))) OVER () FROM vt0, rt0, v0, t1 WHERE (CASE WHEN (+ (0Xffffffffa4173d56)) THEN (('0.5111151288314879') NOT BETWEEN (x'20ff') AND ('1060700557')) WHEN (+ ('')) THEN ((x'') NOT BETWEEN (-3.56747707E8) AND ('-1910662585')) WHEN ((NULL)AND('-377535361')) THEN CAST(x'' AS REAL) END); -- 0ms;
SELECT DISTINCT ((((t1.c32) IS FALSE))|((v0.c0 IN ()))), ((MAX(rt0.c3))>>(CASE 0.16971833721273955  WHEN rt0.c2 THEN t1.c32 END)), CAST(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN 0.0030270450985994124 WHEN t1.c2 THEN rt0.c0 END AS NUMERIC) FROM rt0, v0, t1, vt0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c5, rt0.c2, t1.c32))>=((rt0.c4, t1.c2, t1.c18))) AS BLOB) FROM v0, vt0 LIMIT 2057650713;SELECT DISTINCT t1.c28 COLLATE BINARY FROM v0, rt0, vt0 GROUP BY ((v0.c0)<>(v0.c0)) COLLATE BINARY HAVING UPPER(((rt0.c0) IS TRUE)) LIMIT 1538269233;SELECT TYPEOF((t1.c98 IN (t1.c55))), CASE CAST(t1.c18 AS BLOB)  WHEN ((rt0.c0)>(rt0.c0)) THEN ((((((((t1.c2)OR(rt0.c4)))OR(t1.c2)))AND(rt0.c1)))AND(t1.c98)) ELSE x'' END, ((LAST_INSERT_ROWID()) NOT NULL), t1.c55, x'' FROM vt0 WHERE ((+ (((('1e500'))>=(('-2130022566')))))) LIMIT -1868280376 OFFSET 150768685;SELECT ALL GROUP_CONCAT(CAST(vt0.c0 AS REAL)) OVER () FROM rt0 WHERE (((((((((CAST(NULL AS TEXT))AND(CASE x''  WHEN 'dv9' THEN 0.9171432689156777 END)))AND((NULL IN ()))))OR((('g~t') BETWEEN (x'') AND ('x')))))OR(((('慉Lti')) BETWEEN ((NULL)) AND ((NULL)))))) GROUP BY '926814511';SELECT DISTINCT 0.014594197973391565 FROM rt0, t1, vt0 WHERE ((+ ('')) COLLATE BINARY) ORDER BY CAST(((rt0.c4) IS TRUE) AS INTEGER) ASC; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, t1, v0 WHERE (0.08310053023210096); -- 0ms;
SELECT DISTINCT (('') NOT BETWEEN (((((((((((((t1.c28)AND(t1.c55)))AND(vt0.c0)))OR(rt0.c2)))OR(t1.c28)))OR(rt0.c3)))OR(t1.c32))) AND (t1.c55)) FROM v0, vt0, t1, rt0; -- 0ms;
SELECT ((t1.c18 COLLATE RTRIM)LIKE(COUNT(vt0.c0))) FROM t1, rt0 WHERE ((((('Ou')) NOT BETWEEN (('W45')) AND ((0.28363734537567453))) IN ()));SELECT DISTINCT MAX((rt0.c2 IN ())), FIRST_VALUE(((((((t1.c32)AND(t1.c55)))AND(0.4203852416805135)))<=((NOT (vt0.c0))))) OVER (), ((x'' COLLATE NOCASE) NOT NULL) FROM v0, vt0, t1; -- 1ms;
SELECT DISTINCT ((((((t1.c98)AND(t1.c32)))AND(rt0.c2)))>=(((t1.c18) NOTNULL))) FROM t1, rt0 WHERE (((CAST(0.8636807526831572 AS INTEGER))OR(((NULL)+(602532762))))); -- 0ms;
SELECT DISTINCT CHAR(x'5e52'), CAST(CASE WHEN rt0.c0 THEN rt0.c5 END AS BLOB), (COUNT(*) IN ()) FROM vt0, v0, rt0; -- 0ms;
SELECT ALL COUNT(((t1.c32) BETWEEN (rt0.c5) AND (rt0.c5))) FROM rt0, vt0, t1 WHERE ((((('-377535361') IS TRUE)) NOTNULL)); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))) BETWEEN (rt0.c2 COLLATE BINARY) AND ((vt0.c0 IN (rt0.c1, rt0.c0))))) OVER () FROM rt0, vt0 WHERE (json_extract(((0x5fdb89b5)*(NULL)), ((((((((-476040687)AND(0.26802643645740387)))AND(x'')))AND(0.45469619237335546)))AND(NULL)))); -- 0ms;
SELECT ALL COUNT(CAST(t1.c18 AS TEXT)) OVER () FROM vt0, rt0 WHERE (((CAST(0.14464465613581534 AS TEXT)) IS TRUE)) LIMIT -760338238 OFFSET -1913449866;SELECT DISTINCT LENGTH((((t1.c55))!=((0.6510886912954733)))), COUNT(*) OVER ( ORDER BY (((x'de0a'))!=((COALESCE('2P', t1.c1))))), SQLITE_COMPILEOPTION_USED(((rt0.c4) NOTNULL)), (+ ((+ (rt0.c3)))), rt0.c2 FROM vt0, t1, rt0, v0; -- 1ms;
SELECT DISTINCT v0.c0, AVG(CASE t1.c28  WHEN t1.c55 THEN t1.c55 END) OVER (), (NOT (-2.11457901E9)) FROM t1, vt0;SELECT DISTINCT MIN(((((t1.c32)AND(vt0.c0)))AND(v0.c0))) FROM v0, vt0, rt0 WHERE (json_valid(NULL COLLATE RTRIM)) GROUP BY CAST(CASE WHEN '910151427' THEN t1.c18 ELSE v0.c0 END AS TEXT), (- (((x'') BETWEEN (x'8f52') AND (t1.c1)))), ((CASE WHEN 0.3193381410691051 THEN rt0.c4 END) BETWEEN (((t1.c18)|(x''))) AND (t1.c55)) LIMIT -1445816127 OFFSET -1396205314;SELECT ALL ((((((((((v0.c0)OR(rt0.c4)))AND(v0.c0)))AND(t1.c2)))AND(t1.c1))) NOT BETWEEN ((- (rt0.c3))) AND (t1.c2)) FROM v0, t1 INDEXED BY i71, vt0;SELECT ALL COUNT(AVG(CAST(t1.c55 AS REAL))) FROM t1, v0, vt0, rt0 INTERSECT SELECT ALL ((UPPER(DISTINCT rt0.c5))+(((rt0.c1) NOT BETWEEN ('431404392') AND (t1.c28)))) FROM t1 WHERE (x'');SELECT CAST(((((rt0.c0)AND(-369515726)))AND(t1.c2)) AS INTEGER), (((t1.c28)/(t1.c1)) IN ()), CAST(SUM(t1.c55) AS INTEGER) FROM t1, vt0 WHERE (((((x'')<=('*WEdiI_')))>(CAST(0Xffffffffafd8219a AS INTEGER))));SELECT ((((NULL)&(rt0.c2))) NOTNULL) FROM rt0, v0, vt0 WHERE (((((0.6611802472368001)OR((((0x7bc971c0))<=((x'96ae'))))))AND(((NULL) BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT ((((((rt0.c4)AND(t1.c28)))OR(rt0.c2))) NOTNULL) FROM v0, rt0 WHERE ((((- ('2.7792081429556248E-5')))>>((~ ('166383909')))));SELECT (AVG(t1.c55) IN ()) FROM t1, rt0, v0, vt0; -- 1ms;
SELECT DISTINCT (json(t1.c2) IN ()) FROM vt0, v0; -- 0ms;
SELECT DISTINCT (+ (TYPEOF(DISTINCT v0.c0))) FROM t1, vt0, v0; -- 0ms;
SELECT ALL '-171416189' FROM vt0 WHERE (DATE((x'70e1' IN (NULL)), ((x'') NOT BETWEEN (-555287489) AND (x'5bda')), ((x'') ISNULL))); -- 0ms;
SELECT DISTINCT (((((t1.c32)OR(rt0.c0)))OR(t1.c18)) IN ()), 0.3089288421546209, rt0.c4 FROM vt0, t1, v0, rt0 WHERE ((((0.43762160711018483 COLLATE BINARY))>((CAST('h	1v' AS INTEGER))))); -- 0ms;
SELECT (~ ((NOT ('-762727437')))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT (((((((((((rt0.c3)) BETWEEN ((t1.c98)) AND ((vt0.c0))))AND(((t1.c2) NOT NULL))))OR(((t1.c28) NOTNULL))))OR(rt0.c3)))OR(((rt0.c1)>=(v0.c0)))), ((CASE t1.c1  WHEN rt0.c5 THEN vt0.c0 END)LIKE(MAX(rt0.c1))), (((t1.c32) IS TRUE) IN ()), (((((v0.c0 IN (v0.c0, vt0.c0)))OR((t1.c55 IN (rt0.c2)))))AND(t1.c18)), CAST(TYPEOF(vt0.c0) AS BLOB) FROM rt0, t1;SELECT load_extension(((((((((t1.c1)OR(-4.28864959E8)))OR(rt0.c5)))OR(t1.c2)))AND(t1.c98))) FROM t1 WHERE (((((x'')|(x'')))IS('1138414918')));SELECT ALL ((v0.c0)<(LIKE(rt0.c0, t1.c28, 'h'))) FROM vt0, rt0;SELECT DISTINCT TYPEOF('-1942653943'), ((CASE WHEN rt0.c4 THEN NULL END) BETWEEN (((t1.c2) BETWEEN (rt0.c4) AND (t1.c18))) AND ((vt0.c0 IN ()))), (((((((t1.c28))>((t1.c98))))OR(((t1.c18) BETWEEN (v0.c0) AND (1.138414918E9)))))AND(ABS(DISTINCT t1.c2))) FROM v0, rt0, vt0 WHERE (CAST(x'' AS INTEGER)) GROUP BY LIKE((vt0.c0 IN ()), ((((t1.c18)OR(t1.c28)))AND(t1.c55)), 'T') HAVING ' a';SELECT DISTINCT CUME_DIST() OVER () FROM vt0 WHERE (((((x'')LIKE('1833163250'))) ISNULL)); -- 0ms;
SELECT ALL (0.4298555084995159 IN ()) FROM v0, rt0, vt0, t1; -- 0ms;
SELECT ALL ((((t1.c98)=(t1.c1))) NOT NULL) FROM v0, t1, rt0 WHERE (x'') GROUP BY (((rt0.c1))>=(((x'' IN (rt0.c2, t1.c55))))); -- 0ms;
SELECT DISTINCT json_object(((v0.c0)IS(t1.c18)), CAST(t1.c32 AS BLOB)), (- ((((rt0.c3, t1.c55, t1.c55))<((t1.c18, t1.c32, rt0.c3))))), TIME((((t1.c1)) BETWEEN ((t1.c18)) AND ((t1.c98))), ((rt0.c3)<(rt0.c4)), ((t1.c98)&(vt0.c0))) FROM t1, rt0, v0 WHERE (((('', NULL, -1194861320)) NOT BETWEEN ((((((NULL)AND('1300408163')))OR(NULL)), (('-1016360268')IS(0.8126750897962094)), (- (NULL)))) AND ((0X2054d2e9, (((0.3712070999764404))!=((x''))), ((x'') NOT BETWEEN (x'6480') AND (-1.66230239E9))))));SELECT ALL COUNT(*) OVER ( ORDER BY x'' DESC  NULLS LAST, (((t1.c2)) BETWEEN ((((t1.c32)<(vt0.c0)))) AND ((TOTAL_CHANGES()))) ASC  NULLS LAST) FROM rt0 WHERE (((CAST('' AS REAL)) NOT BETWEEN (0xfffffffff807be73 COLLATE RTRIM) AND (((0.5555747165169382)*(0X65713cd1))))) ORDER BY 0.3636419576444342 DESC  NULLS FIRST;SELECT DISTINCT ((NULL) NOT BETWEEN (((rt0.c5) BETWEEN (t1.c28) AND (t1.c32))) AND (((((rt0.c0)OR(rt0.c1)))AND(t1.c55)))) FROM rt0, t1 WHERE (CAST(((9223372036854775807) NOT BETWEEN (2037268765) AND (0.6078032280350165)) AS REAL)); -- 0ms;
SELECT DISTINCT ((((t1.c2)<<(t1.c32)))-(x'')) FROM vt0, t1, v0, rt0 WHERE ((((0.8968323915528941, '礢T)5%P. l', 44161356)) BETWEEN (('', IFNULL(NULL, 0.5096254725191922), CAST(x'' AS BLOB))) AND (((((x'77f3', x'1334', '2108776777'))>=((NULL, 0.280895001744901, 0.7679349461017435))), (NOT (NULL)), '')))); -- 0ms;
SELECT DISTINCT UNLIKELY(t1.c32) FROM vt0, v0 WHERE (TRIM(CAST(NULL AS NUMERIC), ((0.1569649991804074) NOT BETWEEN (x'') AND (x''))));SELECT CASE CASE WHEN rt0.c0 THEN t1.c98 WHEN x'' THEN t1.c2 WHEN t1.c32 THEN vt0.c0 END  WHEN UNLIKELY(t1.c55) THEN (- (rt0.c4)) END FROM v0, rt0, vt0, t1; -- 0ms;
SELECT DISTINCT CAST((((rt0.c4))==((t1.c2))) AS BLOB) FROM v0, t1, rt0, vt0 LIMIT -933256134; -- 0ms;
SELECT ALL ((((vt0.c0)OR(0.5754360306154022)))AND(954404932)) COLLATE NOCASE, LEAD(CASE ((t1.c2) NOT NULL)  WHEN vt0.c0 COLLATE BINARY THEN ((NULL) BETWEEN (0.656818682083927) AND (t1.c1)) ELSE ((t1.c32)&(t1.c98)) END, ((t1.c32 IN ()) IN ()), CAST((((t1.c1, t1.c55, t1.c18)) BETWEEN ((t1.c55, t1.c98, t1.c98)) AND ((t1.c28, t1.c28, t1.c32))) AS TEXT)) OVER (), (- (TRIM(DISTINCT rt0.c2))), LAST_VALUE(((((t1.c1) ISNULL)) IS TRUE)) OVER (), AVG(((rt0.c4)&(t1.c98))) FILTER(WHERE ((((t1.c1) IS FALSE)) NOT BETWEEN (rt0.c5 COLLATE RTRIM) AND (x''))) OVER () FROM t1, vt0;SELECT DISTINCT CUME_DIST() OVER ( ORDER BY ((v0.c0) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (t1.c1))) AND (((((((((t1.c2)AND(rt0.c2)))OR(t1.c1)))AND(t1.c55)))AND(vt0.c0)))) DESC  NULLS LAST, LIKELY(DISTINCT x'') COLLATE RTRIM), vt0.c0, ((0.5154219768328536)>=(TOTAL(rt0.c4))) FROM vt0 WHERE (CASE WHEN ((1.701919953E9) BETWEEN (-2.079475038E9) AND ('206875742')) THEN ((NULL)AND(-9.88310757E8)) ELSE ('gvIo' IN ()) END);SELECT DISTINCT (- (rt0.c2 COLLATE RTRIM)) FROM v0, vt0, t1;SELECT DISTINCT ((DATETIME(x'b5a9', vt0.c0, t1.c1)) IS FALSE) FROM vt0, v0 WHERE ((NOT ((- (NULL)))));SELECT (((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c55)))) IS FALSE), ((((((t1.c1)OR(v0.c0)))AND(rt0.c4))) ISNULL), COALESCE(rt0.c3 COLLATE BINARY, SUM(t1.c18), rt0.c0 COLLATE BINARY, COUNT(t1.c55)) FROM rt0, vt0, t1, v0; -- 0ms;
SELECT ALL ((t1.c98) NOT BETWEEN (rt0.c1) AND (t1.c28)) COLLATE BINARY FROM v0;SELECT DISTINCT MAX(rtreenode(rt0.c2, t1.c1)) FROM v0 WHERE ((((json_extract('-1658923721', '2g')))<((CASE WHEN x'' THEN 0.6404403993435955 END))));SELECT DISTINCT ((highlight(t1.c98, t1.c18, rt0.c3, rt0.c2)) IS TRUE) FROM rt0, vt0, t1, v0 LIMIT -2099305853 OFFSET 140450542; -- 0ms;
SELECT DISTINCT ((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)) COLLATE RTRIM FROM vt0, rt0; -- 1ms;
SELECT DISTINCT UPPER(DISTINCT (t1.c55 IN ())) FROM vt0, rt0 WHERE (CASE WHEN CASE WHEN 0x2f8c08db THEN x'' END THEN (0.32736017149554864 IN ()) ELSE (((((((('0.0681988934148019')AND(0xffffffffc00fdd17)))OR(NULL)))OR('ZkO')))AND(x'63f6')) END); -- 0ms;
SELECT ALL ((CASE t1.c2  WHEN rt0.c1 THEN t1.c2 ELSE vt0.c0 END)/('')) FROM v0, t1, rt0 LIMIT 1811007330 OFFSET -933256134;SELECT DISTINCT x'' FROM t1, v0, rt0 WHERE (((((NULL)>>(x'')))<<((('226496993')*(0.735035344475302))))); -- 0ms;
SELECT ABS(((vt0.c0) BETWEEN (rt0.c5) AND (t1.c1))) FROM t1, rt0, vt0 NOT INDEXED, v0 ORDER BY (CASE WHEN t1.c28 THEN t1.c18 WHEN rt0.c5 THEN rt0.c0 WHEN t1.c18 THEN t1.c98 ELSE t1.c1 END IN ()) DESC; -- 0ms;
SELECT ALL GROUP_CONCAT((((t1.c28)) BETWEEN ((rt0.c5)) AND ((rt0.c2)))) COLLATE RTRIM FROM v0, vt0, t1 WHERE (((IFNULL(0.01282474731945804, 0.09214903813030095))OR(TOTAL_CHANGES())));SELECT ((((((rt0.c0, rt0.c5, 0.42437701495501645)) NOT BETWEEN ((rt0.c1, v0.c0, rt0.c4)) AND ((rt0.c0, t1.c1, t1.c32)))))<=((((v0.c0)>=(t1.c32))))) FROM v0, rt0 WHERE (((((((((((((CASE 0.4644821014690952  WHEN 0.8125462374535349 THEN 'dMgB愲9LX' END)OR(CASE WHEN x'a00d' THEN x'' END)))AND(CASE WHEN 0xffffffffdbacee58 THEN 'D\r' ELSE 0.9998731998877857 END)))AND(CAST(NULL AS NUMERIC))))OR((((('큍u')OR(x'1c20')))OR(x'39a2')))))OR((NULL IN ()))))OR(TIME('z]Q覊x,', NULL, -1148955505)))) GROUP BY (- (((rt0.c0) NOTNULL))) HAVING ((TYPEOF(t1.c55)) NOT NULL);SELECT ALL IFNULL((((t1.c98, 0.14478842596836883, t1.c32)) NOT BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((t1.c18, rt0.c4, rt0.c2))), (((t1.c2, vt0.c0, rt0.c5)) BETWEEN ((rt0.c1, vt0.c0, t1.c1)) AND ((rt0.c0, rt0.c0, rt0.c5)))), ((((0xffffffffec0abbf4))>=((vt0.c0))) IN ((((t1.c55)) BETWEEN ((t1.c1)) AND ((t1.c32))))), rt0.c5 FROM v0, rt0, t1;SELECT DISTINCT 0.13952369548643162, CAST(((NULL) BETWEEN (vt0.c0) AND (rt0.c2)) AS TEXT), ((((SUM(rt0.c4))OR((rt0.c5 IN ('', t1.c32)))))AND((NOT (rt0.c3)))) FROM vt0 NOT INDEXED, t1, rt0 WHERE ((+ (CAST(x'71cb' AS REAL)))); -- 0ms;
SELECT ((((t1.c98 COLLATE NOCASE)AND(CAST(rt0.c0 AS INTEGER))))OR(CASE WHEN rt0.c0 THEN t1.c32 END)) FROM t1, vt0, rt0, v0; -- 0ms;
SELECT CASE ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(rt0.c5)))OR(rt0.c0))  WHEN CASE WHEN t1.c55 THEN rt0.c4 WHEN t1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END THEN t1.c1 ELSE t1.c98 COLLATE NOCASE END FROM vt0 WHERE (CASE WHEN (((0.8790456993526368))>((-1805267760))) THEN ((((((((0.6063102967230667)OR(-1.7976931348623157E308)))AND(NULL)))AND(NULL)))AND(x'')) WHEN ((x'') BETWEEN ('''_X︢傇[{') AND (NULL)) THEN ((('EyP.g'))>((0.5165957285237969))) WHEN ((0.23883996077342096)||(0.8153752665180026)) THEN (((x'')) BETWEEN ((NULL)) AND ((0.6850393589649465))) END);SELECT DISTINCT ((rt0.c2) ISNULL) FROM v0 WHERE ((((x'a295')) BETWEEN ((CASE WHEN NULL THEN 0.13532160422228856 ELSE '-120859884' END)) AND ((((x'') NOTNULL)))));SELECT DISTINCT (((- (rt0.c5)))IS NOT(MAX(vt0.c0))) FROM t1, rt0, v0 WHERE ((((NULL)) BETWEEN ((NULL)) AND ((-68292465))) COLLATE BINARY) LIMIT -209138616;SELECT DISTINCT COUNT(t1.c1) FROM vt0, v0 WHERE ((((('1608223157')<=(NULL))) IS FALSE)) GROUP BY CAST(CAST(v0.c0 AS REAL) AS NUMERIC) ORDER BY ((((t1.c98)||(t1.c98))) BETWEEN ('') AND (((t1.c32)!=(rt0.c2)))) ASC LIMIT 735190434;SELECT DISTINCT ((IFNULL(rt0.c3, t1.c32))<>(((((t1.c1)AND(rt0.c0)))AND(rt0.c1)))), GLOB(((t1.c55) BETWEEN (t1.c32) AND ('2052766622')), rt0.c3), ((((t1.c28) IS TRUE))-(((((t1.c55)OR(t1.c1)))AND(rt0.c5)))) FROM t1, vt0, rt0; -- 0ms;
SELECT 0Xffffffffec80d8b2, CASE t1.c28 COLLATE RTRIM  WHEN (NOT (rt0.c1)) THEN (((v0.c0, 0.48226576291467693, rt0.c4)) NOT BETWEEN ((rt0.c5, t1.c55, t1.c2)) AND ((t1.c28, t1.c28, t1.c32))) END, rt0.c1 FROM t1, rt0;SELECT DISTINCT COUNT(*) FILTER(WHERE (((((t1.c28)AND(t1.c98)))OR(rt0.c2)) IN (CAST(t1.c32 AS NUMERIC)))) OVER () FROM rt0, vt0, t1; -- 0ms;
SELECT ALL ((((t1.c1)=(t1.c28))) BETWEEN (ABS(0.5611653240662761)) AND (rt0.c0 COLLATE BINARY)) FROM vt0;SELECT DISTINCT ((((rt0.c4)IS(t1.c55))) ISNULL), SUM(CASE WHEN t1.c98 THEN t1.c28 ELSE t1.c32 END) OVER (), ((CAST(rt0.c4 AS REAL))OR(CAST(rt0.c2 AS BLOB))) FROM rt0, t1, v0, vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((t1.c55)|('h夨)k0(''R'))) OVER () FROM v0, vt0, rt0 INNER JOIN t1 ON (('㮼4QI桹r}' COLLATE RTRIM) NOT BETWEEN (((((t1.c28)AND(x'')))OR(v0.c0))) AND ((- (t1.c1)))) WHERE ((NOT ((+ ('10717578'))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, t1; -- 0ms;
SELECT t1.c55, CASE WHEN SUM(2402416.0) THEN COUNT(rt0.c0) END, (((rt0.c3)) NOT BETWEEN (((((rt0.c4, x'a984', t1.c98)) BETWEEN ((t1.c28, v0.c0, rt0.c0)) AND ((rt0.c2, v0.c0, t1.c32))))) AND ((0x4131bfd5))) FROM t1, v0, vt0, rt0; -- 1ms;
SELECT CAST(CAST(rt0.c4 AS TEXT) AS REAL) FROM v0, vt0, t1, rt0 LIMIT -1449787748; -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN ('') AND (rt0.c4)))&(COUNT(t1.c55))) FROM t1, rt0 WHERE ((NOT ((((((((('VG')OR(0.03222471147390704)))OR(x'')))OR(NULL)))OR(x''))))) GROUP BY CASE WHEN 0.5878055538982615 THEN rt0.c5 WHEN rt0.c5 THEN NULL WHEN rt0.c3 THEN rt0.c3 END COLLATE NOCASE, ((NULL) IS FALSE), ((NULL)<>(((rt0.c2) NOT BETWEEN (t1.c2) AND (rt0.c3)))); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT ((t1.c98) BETWEEN (v0.c0) AND (t1.c32))), (((((t1.c1)) NOT BETWEEN ((rt0.c2)) AND ((x''))))+(TOTAL(rt0.c0))), LIKELIHOOD(t1.c55, 0.8248929243962976) COLLATE RTRIM FROM rt0 WHERE (((('1343243235')) BETWEEN (((- (0.8837150531731676)))) AND (((((x'', NULL, 0.47792833399747703))>=(('1448873899', NULL, 0.5522292901631227))))))) LIMIT 602532762;SELECT ALL ((SUM(rt0.c1))>>((NOT (vt0.c0)))) FROM t1, rt0, vt0 WHERE ((('-1898872277' IN (NULL)) IN ())); -- 0ms;
SELECT ALL CASE (vt0.c0 IN ())  WHEN rt0.c5 THEN CAST(rt0.c0 AS NUMERIC) WHEN (((t1.c55))>=((NULL))) THEN ((rt0.c5)GLOB(rt0.c5)) WHEN t1.c2 THEN (rt0.c0 IN (rt0.c3)) ELSE (((('-612983686')OR(-2.14243484E9)))AND(rt0.c1)) END, CASE ((t1.c18)IS NOT(v0.c0))  WHEN HEX(t1.c1) THEN (((t1.c28)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) END, ((((CASE WHEN NULL THEN rt0.c3 WHEN t1.c18 THEN rt0.c2 WHEN rt0.c1 THEN t1.c18 ELSE vt0.c0 END)AND(((t1.c18)AND(-5.37513804E8)))))OR(((((NULL)OR(x'e7c5')))AND(rt0.c0)))) FROM v0, rt0, t1 WHERE (((((('1348460988')OR(0.8733380094101909)))AND('︢DZpᘹb')) IN ()));SELECT DISTINCT (rt0.c2 IN ()), ((NOT (rt0.c1)) IN ()), COUNT(*), ((((rt0.c2)IS NOT(t1.c18))) BETWEEN ((((t1.c98)) NOT BETWEEN ((NULL)) AND ((t1.c18)))) AND (((rt0.c4) BETWEEN (rt0.c4) AND (t1.c32)))), RTRIM(((vt0.c0) IS TRUE)) FROM v0, vt0 WHERE (CAST(((0.9177835136971499) NOT BETWEEN (x'') AND (x'9fa6')) AS BLOB)) ORDER BY IFNULL(DISTINCT json_array(t1.c98, 0.5063889491198433), TYPEOF(rt0.c4)), (((((t1.c98)) NOT BETWEEN ((t1.c28)) AND ((x'd8af3d0caf17'))))GLOB(CAST(rt0.c0 AS REAL)))  NULLS LAST;SELECT ALL TOTAL(CASE rt0.c5  WHEN rt0.c2 THEN rt0.c3 END COLLATE BINARY) OVER () FROM vt0, t1 WHERE (((((((((CASE x''  WHEN '2052766622' THEN 0.10602790411747642 ELSE 0.4928807894256353 END)AND(((0x130a3b92)GLOB('0.14948182897109108')))))OR(((1638193020) BETWEEN (x'') AND (0.2273810303231404)))))OR(('' IN ()))))AND('-428864959' COLLATE RTRIM)));SELECT DISTINCT CASE WHEN (((t1.c1))>((rt0.c3))) THEN ((rt0.c0) NOTNULL) WHEN ((rt0.c5)*(t1.c32)) THEN GROUP_CONCAT(t1.c32) WHEN vt0.c0 COLLATE NOCASE THEN (((t1.c32, v0.c0, t1.c98)) BETWEEN ((t1.c1, rt0.c2, t1.c32)) AND ((NULL, vt0.c0, rt0.c4))) ELSE CAST(rt0.c3 AS NUMERIC) END FROM v0, rt0;SELECT DISTINCT NULL, LOWER(DISTINCT 1.291703468E9), 0Xa1416d5 FROM t1 INDEXED BY i71;SELECT DISTINCT ((((CAST(v0.c0 AS BLOB))OR(TOTAL(x''))))AND(((rt0.c3)<<(rt0.c2)))) FROM vt0 GROUP BY t1.c55;SELECT ALL ((((((v0.c0) NOT BETWEEN (t1.c55) AND (v0.c0)))OR(CASE rt0.c0  WHEN t1.c18 THEN rt0.c4 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN '' ELSE rt0.c2 END)))AND(CAST(t1.c28 AS NUMERIC))) FROM v0;SELECT DISTINCT ('' IN ()) FROM vt0 LIMIT -209138616 OFFSET 828711466; -- 0ms;
SELECT ((HEX(DISTINCT rt0.c2)) NOT NULL), (+ (CASE rt0.c1  WHEN x'44bc' THEN t1.c28 ELSE t1.c55 END)), CASE WHEN CASE WHEN rt0.c5 THEN v0.c0 ELSE t1.c28 END THEN vt0.c0 END FROM vt0, t1, rt0, v0; -- 0ms;
SELECT DISTINCT CAST((((t1.c2)) BETWEEN ((t1.c32)) AND ((t1.c32))) AS REAL) FROM v0, vt0;SELECT (((((rt0.c5)) BETWEEN ((vt0.c0)) AND ((t1.c98)))) NOT BETWEEN (((rt0.c5)<>(t1.c2))) AND (CAST(rt0.c5 AS REAL))) FROM v0;SELECT DISTINCT (- (CASE rt0.c5  WHEN t1.c98 THEN t1.c98 END)) FROM v0 ORDER BY ((((x'') NOT BETWEEN (0x214fe6a9) AND (t1.c2))) NOTNULL) DESC, ((((rt0.c2) NOT BETWEEN (rt0.c5) AND (NULL))) NOT BETWEEN ('') AND (CASE rt0.c2  WHEN v0.c0 THEN rt0.c5 ELSE t1.c55 END)), NULL;SELECT DISTINCT GROUP_CONCAT(t1.c32) OVER ( ORDER BY ((json_insert(rt0.c5, t1.c32, t1.c32, v0.c0, 'mM')) BETWEEN (v0.c0 COLLATE NOCASE) AND ((((vt0.c0, rt0.c0, t1.c32)) NOT BETWEEN ((rt0.c5, -4.28864959E8, 1.086721555E9)) AND ((rt0.c5, rt0.c0, rt0.c5))))) ASC  NULLS FIRST) FROM rt0, vt0, t1 NOT INDEXED;SELECT DISTINCT CAST((rt0.c5 IN ()) AS REAL), t1.c98, ((CAST(t1.c1 AS BLOB)) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((~ (t1.c1)))) FROM vt0, t1 WHERE (((((('''*a_-i}')OR(NULL)))OR(x'0b76')) IN ()));SELECT DISTINCT rt0.c2, CASE (((t1.c32)) NOT BETWEEN ((rt0.c5)) AND ((t1.c1)))  WHEN COUNT(*) THEN CAST(0.2885225334149508 AS NUMERIC) ELSE ((t1.c98)IS(t1.c2)) END, CASE WHEN (((t1.c98))<=((rt0.c2))) THEN ((t1.c98) NOT BETWEEN (rt0.c3) AND (rt0.c2)) ELSE CAST(t1.c55 AS INTEGER) END FROM vt0, rt0, v0, t1 WHERE (((((((x'499c') NOT BETWEEN ('163160340') AND ('jL')))OR(((804417431) NOTNULL))))OR(((x'')<(0.41272693550243256))))); -- 0ms;
SELECT DISTINCT ((t1.c98 COLLATE RTRIM)<<(((t1.c32) BETWEEN (t1.c98) AND (vt0.c0)))) FROM vt0, rt0, t1, v0 WHERE (((((('-1662302390')OR('[]')))OR(x'aadd')) IN ())); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((rt0.c3)AND(rt0.c0)))OR(rt0.c3))) FROM v0, rt0, t1 ORDER BY ((NULL) NOTNULL) DESC; -- 0ms;
SELECT ((((vt0.c0)&(rt0.c2))) IS TRUE), ((rt0.c1) NOTNULL), CAST(CAST(NULL AS NUMERIC) AS BLOB), ((CASE WHEN rt0.c2 THEN t1.c2 END)&(((rt0.c4) NOT BETWEEN (t1.c2) AND (rt0.c3)))), TRIM(((t1.c32)>>(rt0.c2)), COUNT(*)) FROM v0;SELECT DISTINCT TRIM(DISTINCT ((t1.c32)>>(rt0.c2))) FROM v0 LIMIT 2108776777 OFFSET 1639263716;SELECT CAST(t1.c1 COLLATE BINARY AS INTEGER) FROM v0 WHERE ((((((((((((((((0xffffffff840dbaa2, '577285566', 0.010124095043125836)) BETWEEN ((-909199931, NULL, NULL)) AND ((0Xffffffffb188ccb8, '286980106', '1291703468'))))AND(('1966599652' IN (NULL)))))OR('/|	[]I੠' COLLATE NOCASE)))OR((((x''))>=((1208213107))))))OR(CASE 9.10151427E8  WHEN '0.9337873497616539' THEN 2108776777 ELSE -2114579010 END)))OR((((NULL))==((x''))))))AND((((x'c669bfa0'))!=(('%cS^*X'))))));SELECT ALL ((t1.c2) BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE NOCASE FROM t1, vt0, rt0, v0 WHERE (CASE NULL  WHEN NULL THEN x'' WHEN '' THEN x'713a' WHEN 'utc' THEN -583394267 END COLLATE BINARY COLLATE RTRIM) ORDER BY ((((rt0.c1)+(NULL)))%(((t1.c28)+(rt0.c4)))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)OR(CAST(rt0.c1 AS BLOB))))OR(NULL)) FROM vt0 WHERE ((- (((0.9140434001946602) ISNULL))));SELECT ALL (+ ((- (rt0.c2)))), (((CASE WHEN t1.c55 THEN rt0.c2 END))>(((((rt0.c4, vt0.c0, t1.c1, rt0.c3, t1.c98))>=((rt0.c3, t1.c18, rt0.c4, rt0.c1, rt0.c0)))))), TOTAL(0Xffffffffe6997dbb) OVER () FROM v0;SELECT ((COUNT(*))>('j')) FROM vt0, t1, v0; -- 1ms;
SELECT DISTINCT CAST(((((((((v0.c0)AND(t1.c28)))OR(v0.c0)))AND(vt0.c0)))AND(rt0.c2)) AS NUMERIC) FROM v0, t1, vt0, rt0 WHERE (((((NULL)>=(0.5121123152386462)))OR((('1300408163') ISNULL)))); -- 0ms;
SELECT DISTINCT ((x'')+(rt0.c2 COLLATE RTRIM)), ((((((t1.c55)AND(t1.c18)))AND(t1.c2)))>=(vt0.c0)), TOTAL(TRIM(x'')) OVER () FROM vt0, rt0, v0, t1; -- 0ms;
SELECT ALL ((rt0.c1)>=(x'0d45')) FROM t1, vt0;SELECT SUM(CAST(vt0.c0 AS BLOB)) FROM rt0 LIMIT -938409508 OFFSET 95263454;SELECT ALL ((((t1.c32)!=(t1.c1))) NOT BETWEEN (v0.c0) AND ((~ (t1.c2)))) FROM v0, t1, rt0, vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))AND(((('now[25')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c5))))), CASE CAST(rt0.c1 AS BLOB)  WHEN CAST(rt0.c4 AS BLOB) THEN (((v0.c0, rt0.c1, rt0.c5)) BETWEEN ((rt0.c5, rt0.c5, rt0.c5)) AND ((rt0.c4, rt0.c5, rt0.c3))) ELSE NULL END) OVER (), ((CAST(t1.c2 AS TEXT))+((t1.c55 IN ()))), GROUP_CONCAT((t1.c2 IN (t1.c55, rt0.c0))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM rt0 INNER JOIN v0 ON (~ (t1.c98)) WHERE ((((('{ꝣ55Z\n') IS FALSE))LIKE((NOT (989664076)))));SELECT DISTINCT COUNT(((t1.c98) NOT BETWEEN (rt0.c3) AND (rt0.c3))) OVER () FROM v0, vt0, rt0 WHERE (rtreenode(NULL, ((0Xffffffff804d09e8) NOTNULL)));SELECT DISTINCT ((((t1.c55)%(t1.c98))) BETWEEN (t1.c1) AND (t1.c28)) FROM rt0 WHERE (CASE 0.30984358592230454 COLLATE NOCASE  WHEN CASE 0.390985832120303  WHEN 0X7da18a0a THEN 'Qq' ELSE 'PY1\n+' END THEN CAST(x'' AS NUMERIC) WHEN NULL COLLATE NOCASE THEN ((0.03479971467118703) NOTNULL) WHEN CASE x''  WHEN NULL THEN '-1053141650' END THEN ((0.6920998468477477)+(NULL)) ELSE json_valid(x'7659') END);SELECT ALL (((TRIM(x'b518'), ((rt0.c4)*(t1.c98)), ((v0.c0)OR(t1.c1))))<=((TYPEOF(rt0.c5), CASE rt0.c5  WHEN rt0.c2 THEN rt0.c4 END, AVG(rt0.c1)))), ((((t1.c32, rt0.c4, t1.c28))>((t1.c18, rt0.c0, '0.7108964469893495'))) IN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))), 373075320 FROM v0 WHERE ((('3L\nT1' COLLATE RTRIM)/(-1360632736)));SELECT ALL (((((rt0.c1, t1.c28, t1.c32, t1.c98, t1.c55)) BETWEEN ((rt0.c2, vt0.c0, t1.c98, t1.c32, t1.c55)) AND ((rt0.c5, rt0.c3, t1.c28, rt0.c3, t1.c2))))IS NOT(((((t1.c98)AND(t1.c1)))OR(vt0.c0)))) FROM v0, vt0, t1 WHERE ('1354111168');SELECT LAST_VALUE((((LIKELY(DISTINCT rt0.c4)))=((TRIM(DISTINCT rt0.c1))))) OVER (), CASE WHEN (((rt0.c2, v0.c0, t1.c32, t1.c32, t1.c55)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0, t1.c32, t1.c32)) AND ((rt0.c3, t1.c18, rt0.c0, vt0.c0, rt0.c2))) THEN 0Xffffffffb3eec18b END, CASE WHEN (rt0.c1 IN ()) THEN t1.c32 COLLATE BINARY WHEN ((((v0.c0)AND(rt0.c2)))AND(328421727)) THEN t1.c28 WHEN ((t1.c2) ISNULL) THEN 0x6d687258 ELSE ((rt0.c5) ISNULL) END FROM rt0 WHERE (((('1961454643', NULL, NULL, 0.1945459146201841, 'qC|Y0-5')) NOT BETWEEN ((((0.35467750138419496)<=(NULL)), '-427258055', (('-1145785541')&(0.7149236293939951)), x'', SQLITE_COMPILEOPTION_USED(NULL))) AND ((((0xffffffffc517931b) ISNULL), ((((x'80bd')OR(x'')))OR(NULL)), CASE x''  WHEN NULL THEN 'h(AEB>쪶' WHEN 'Io' THEN '' WHEN 0.05988141825370685 THEN x'' WHEN '' THEN 0x6c2926b4 WHEN '' THEN NULL END, ((('w0X+ %T3'))=((NULL))), (((0.10485245696762946)) BETWEEN ((0.9959062223270655)) AND (('*r'))))))) GROUP BY (((((rt0.c2))>((t1.c32))))>>(t1.c28 COLLATE RTRIM)) HAVING ((CAST(rt0.c3 AS NUMERIC))*(TOTAL(t1.c98))) LIMIT -299365316 OFFSET 2039162374;SELECT (rt0.c4 COLLATE BINARY IN (MAX(t1.c2), (rt0.c4 IN ()))) FROM rt0, vt0, t1, v0; -- 0ms;
SELECT ALL x'4f31' FROM t1 WHERE (CASE WHEN ((0x2169cbca)=(NULL)) THEN (- (0x3bc463c1)) END); -- 0ms;
SELECT ALL (CAST(t1.c98 AS REAL) IN ()) FROM v0, rt0; -- 0ms;
SELECT DISTINCT SQLITE_VERSION(), ((((rt0.c3) BETWEEN (t1.c2) AND (t1.c98))) NOT BETWEEN (CASE WHEN rt0.c3 THEN t1.c55 END) AND (t1.c28 COLLATE BINARY)), ((((t1.c28) BETWEEN (t1.c18) AND (v0.c0))) NOT NULL) FROM vt0 WHERE ((((0.5211542959003078)-('-/')) IN ()));SELECT DISTINCT ((((((((MIN(rt0.c1))OR(((t1.c2) NOTNULL))))AND(NULL COLLATE BINARY)))AND(((rt0.c2) NOT NULL))))AND(t1.c28)), CASE WHEN ((v0.c0) BETWEEN (NULL) AND (t1.c28)) THEN 0.887644898214168 COLLATE NOCASE END, SUM(TRIM(t1.c2)) OVER ( ROWS CAST(CAST(t1.c1 AS REAL) AS INTEGER) PRECEDING EXCLUDE CURRENT ROW) FROM v0, t1, vt0 WHERE ((((('1638193020')|(x'')))OR(NULL)));SELECT ALL TYPEOF(((v0.c0) NOT BETWEEN (rt0.c4) AND (t1.c55))) FROM vt0, t1, rt0, v0 WHERE (((0.5133826218606279)||((-1.045340931E9 IN ())))); -- 0ms;
SELECT ALL JULIANDAY(((x'9e48')>=(t1.c98)), GROUP_CONCAT(''), CASE WHEN v0.c0 THEN NULL WHEN t1.c98 THEN t1.c2 WHEN t1.c28 THEN t1.c1 ELSE t1.c28 END, COALESCE(DISTINCT t1.c1, vt0.c0, rt0.c3, rt0.c4), t1.c28) FROM rt0, t1, vt0;SELECT ALL json_array_length(CASE 0X6faf024d  WHEN t1.c1 THEN t1.c55 WHEN 1994499955 THEN t1.c28 WHEN rt0.c4 THEN rt0.c0 END, ((((vt0.c0)OR(rt0.c0)))AND(rt0.c5))) FROM v0, t1, rt0 WHERE ((((((('-1072702185')LIKE(0X189b5ab3)))AND(((x'')=(x'')))))AND(((('⤓k	*WS')) BETWEEN ((NULL)) AND (('-1045340931'))))));SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c0 AS TEXT)) OVER (), NTILE((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c2 END IN (NULL))) OVER (), x'7ac1' FROM rt0 ORDER BY TRIM((rt0.c3 IN ()), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((v0.c0)))), vt0.c0 COLLATE RTRIM COLLATE RTRIM ASC;SELECT ALL CASE WHEN (((rt0.c3))>((t1.c2))) THEN NULL WHEN ((v0.c0)<(t1.c32)) THEN TOTAL(t1.c55) WHEN ((t1.c55)>(rt0.c4)) THEN COALESCE(DISTINCT vt0.c0, t1.c55) END FROM t1;SELECT ALL ((t1.c1) NOT BETWEEN (((rt0.c4)<(t1.c2))) AND (SUBSTR(-206975123, vt0.c0))), rt0.c3 COLLATE BINARY, ((t1.c55 COLLATE NOCASE)LIKE(CAST('o6nXcilA螙' AS REAL))) FROM rt0;SELECT CASE WHEN rt0.c4 THEN rt0.c2 WHEN t1.c55 THEN rt0.c4 WHEN rt0.c4 THEN t1.c55 WHEN 0X25733f0d THEN t1.c32 WHEN v0.c0 THEN rt0.c0 END COLLATE NOCASE FROM rt0 WHERE ((((0X67c95f1a)) BETWEEN ((CAST('-1710591542' AS NUMERIC))) AND (((((NULL))<>((0x1b12803b))))))) LIMIT 2028756169;SELECT (((t1.c18)>>(rt0.c5)) IN ()) FROM v0, vt0 WHERE (x'd2b1'); -- 0ms;
SELECT DISTINCT ((t1.c32 COLLATE RTRIM)>=((- (rt0.c3)))), ((-2.09138616E8)LIKE(AVG(rt0.c0))), (((((t1.c18)) NOT BETWEEN ((t1.c55)) AND ((rt0.c3)))) NOTNULL) FROM rt0;SELECT DISTINCT (- (((rt0.c0)||(0.5635378298298772)))) FROM vt0 WHERE (((((((NULL) NOT NULL))AND((NULL IN ()))))OR(CASE WHEN '-377535361' THEN -299365316 WHEN NULL THEN x'' WHEN x'' THEN '6,P[{cᜋ5' END)));SELECT DISTINCT NTILE(CASE WHEN ((v0.c0) BETWEEN (0.42496077024830137) AND (t1.c55)) THEN (((0.8258922514291238))!=((t1.c18))) END) OVER ( ORDER BY t1.c55  NULLS FIRST GROUPS  UNBOUNDED PRECEDING) FROM v0, t1;SELECT DISTINCT ((((CASE WHEN rt0.c3 THEN 0.9635431984082645 WHEN rt0.c4 THEN 0.5115404724374332 WHEN rt0.c1 THEN rt0.c3 ELSE t1.c1 END)OR(((((rt0.c5)OR(t1.c98)))AND(rt0.c1)))))AND(MIN(t1.c18))) FROM t1, rt0 WHERE (((~ (0xffffffffcd154857)) IN ('dv들^' COLLATE NOCASE))) GROUP BY (((((((((rt0.c2)AND(t1.c98)))AND(t1.c1)))OR(t1.c55)))OR(NULL)) IN ()); -- 0ms;
SELECT ALL ((CAST(t1.c28 AS NUMERIC))AND((~ (t1.c98)))) FROM v0, vt0;SELECT AVG((+ (t1.c98))) OVER () FROM v0;SELECT DISTINCT (((rt0.c2) NOT BETWEEN (t1.c28) AND (rt0.c3)) IN ()) FROM v0, vt0, rt0, t1 WHERE (((x'61ed' COLLATE RTRIM)<>((('*-') BETWEEN (NULL) AND (NULL))))); -- 1ms;
SELECT 0x24a870 FROM vt0, rt0 WHERE ((((+ (''))) BETWEEN ((('1005120781') NOT BETWEEN ('KX\n') AND ('1608223157'))) AND ((+ (-28864697))))); -- 0ms;
SELECT DISTINCT CAST(CAST(NULL AS NUMERIC) AS BLOB) FROM rt0 NOT INDEXED WHERE ((((((NULL IN ()))AND(((0.5818066625142514)IS(NULL)))))AND(((((0X1b12803b)AND('vU<!\rv')))OR(NULL))))) ORDER BY CASE WHEN rt0.c0 THEN ((rt0.c3)<=(t1.c98)) ELSE ((((NULL)AND(t1.c18)))OR(rt0.c2)) END DESC LIMIT -1856800261 OFFSET -984774125;SELECT DISTINCT CASE GROUP_CONCAT(rt0.c0)  WHEN SUM(vt0.c0) THEN '1739273186' END FROM t1, v0, rt0 WHERE ((((~ (0.8255619683184766))) NOTNULL));SELECT CAST((~ (-376207541)) AS REAL) FROM v0, t1, vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM vt0, rt0 WHERE ((((10717578 IN ())) BETWEEN ((('0.07514166760208163')GLOB('-2079475038'))) AND (((x'e770')|(0.6448915131891317))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((v0.c0)>=(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0))<=((NULL, v0.c0, v0.c0)))) AND ((v0.c0 IN ())))) OVER () FROM v0 WHERE (UPPER(((NULL) NOTNULL))) GROUP BY json_insert(CAST(rt0.c3 AS INTEGER), ((rt0.c3) IS FALSE), (~ (v0.c0))) HAVING ((((((((t1.c18)AND(t1.c1)))AND(t1.c98)))OR(t1.c55 COLLATE BINARY)))AND((((t1.c55)) BETWEEN ((t1.c28)) AND ((rt0.c1))))) LIMIT -694826314;SELECT DISTINCT ((((t1.c1)|(t1.c1))) IS FALSE), (((rt0.c5, vt0.c0, rt0.c2)) NOT BETWEEN (((((t1.c55)) BETWEEN ((vt0.c0)) AND ((t1.c28))), rt0.c1 COLLATE BINARY, ((t1.c2)>>('-1072702185')))) AND ((((((t1.c2)AND(t1.c55)))AND(rt0.c5)), t1.c32 COLLATE NOCASE, (((rt0.c5))>((t1.c32)))))), TOTAL((NOT (rt0.c1))) OVER () FROM rt0 WHERE (((CASE NULL  WHEN 'T' THEN '0.4137782439787505' ELSE '-1018918576' END) NOT NULL));SELECT DISTINCT (((NOT (rt0.c5))) BETWEEN (((((t1.c2)OR(t1.c32)))AND(t1.c18))) AND (rt0.c2)), 0xffffffffe75c4dbf, ((- (rt0.c0)) IN ()) FROM rt0, t1; -- 0ms;
SELECT ALL (((t1.c2))>=((rt0.c2))) COLLATE RTRIM, COUNT(0.8516395757410239), (((t1.c1) NOT BETWEEN (rt0.c3) AND (-988310757)) IN (rt0.c1)) FROM vt0 WHERE (CAST(NULL AS NUMERIC) COLLATE RTRIM);SELECT 0.5671194171077709 FROM t1, rt0; -- 0ms;
SELECT DISTINCT (((- (v0.c0))) NOT BETWEEN (((t1.c1) ISNULL)) AND (0.295974146607599)) FROM vt0, rt0, t1;SELECT DISTINCT PRINTF(CASE WHEN t1.c2 THEN t1.c28 END) FROM v0 WHERE (TRIM((('k|') BETWEEN (0x2ff26f97) AND (NULL)), CAST(NULL AS TEXT)));SELECT ALL (- (t1.c1)) FROM t1, vt0 WHERE ((x'a27e' IN (CAST(NULL AS NUMERIC), 0.6372155981084311))) LIMIT -2130176571 OFFSET -1148912497; -- 0ms;
SELECT CAST(((((vt0.c0)AND(v0.c0)))OR('[k!#')) AS BLOB) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((((t1.c1))!=((x'')))))<=((CASE WHEN t1.c18 THEN rt0.c3 ELSE t1.c1 END))) FROM vt0, t1 WHERE (((MIN('Y瞫#夻JC', NULL, 0.0036346432674390083, '0'))>(((0.5989341662295898)<=('-1411019473')))));SELECT ((((rt0.c4)AND(rt0.c3)))OR('-1')) COLLATE RTRIM FROM t1 WHERE (((NULL) NOT BETWEEN (UPPER(DISTINCT 1.448873899E9)) AND ((~ (1037365451)))));SELECT (((((t1.c2, x'b1b3', rt0.c0)) NOT BETWEEN ((t1.c55, t1.c28, t1.c32)) AND ((v0.c0, vt0.c0, t1.c98)))) NOT BETWEEN (((rt0.c0)IS(t1.c32))) AND (0.6434541835929809)), CASE 0.5264015476236952  WHEN ((v0.c0) NOT BETWEEN (rt0.c5) AND (v0.c0)) THEN ((t1.c98) BETWEEN (t1.c2) AND (t1.c98)) ELSE AVG(rt0.c0) END, t1.c1 FROM t1, v0, rt0 WHERE (DATE('', (((0.4334210418147668, 0Xffffffffbe8ae039, -2.99365316E8))>=((x'81d2', 0.3447268912956569, 'Tm'))), CASE WHEN '' THEN 0.30162914939492014 ELSE x'0920' END, (~ (0.6936883144172493)), ('-810116152' IN ()))) LIMIT -1369920023;SELECT DISTINCT '-933256134', ((((((((((((CASE rt0.c0  WHEN t1.c55 THEN rt0.c3 ELSE t1.c32 END)OR(AVG(rt0.c3))))OR(((((t1.c1)OR(rt0.c2)))AND(v0.c0)))))OR((((t1.c28)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((((((((t1.c28)AND(rt0.c1)))OR(t1.c32)))AND(rt0.c4)))AND(rt0.c4)))))OR(((vt0.c0) NOT NULL))))OR((NOT (t1.c2)))), PERCENT_RANK() OVER () FROM t1, vt0;SELECT t1.c98 FROM rt0, v0, t1, vt0; -- 0ms;
SELECT ALL CASE (rt0.c2 IN (rt0.c0))  WHEN DATETIME(rt0.c5, rt0.c2, t1.c28) THEN 0.04574583986908898 END FROM rt0, vt0, v0 WHERE ((- ((NOT (NULL)))));SELECT UNLIKELY(DISTINCT (((v0.c0))>=((t1.c55)))), '-991898234', ((((v0.c0)|(t1.c55)))LIKE(CAST(rt0.c5 AS REAL))) FROM t1, rt0, vt0, v0 WHERE (LIKELIHOOD(x'da3c' COLLATE BINARY, 0.6301744268296376)); -- 0ms;
SELECT ALL (rt0.c5 IN (rt0.c0)) COLLATE NOCASE FROM rt0, v0; -- 0ms;
SELECT DISTINCT (((((t1.c32)AND(x'236c')))OR(t1.c28)) IN ()) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((((CAST(t1.c18 AS REAL))AND(AVG(rt0.c0))))AND(COUNT(*))) FROM rt0, vt0, v0, t1 LIMIT -209138616; -- 0ms;
SELECT GROUP_CONCAT((('11886124') NOT BETWEEN (rt0.c3) AND (rt0.c0))) OVER () FROM rt0 LIMIT -1164517859 OFFSET 131963620; -- 0ms;
SELECT DISTINCT rt0.c4, COUNT('-1032852332') OVER (), -8.42174037E8 FROM rt0, vt0, v0, t1 WHERE (0.045493922463743175) LIMIT 1708972732 OFFSET -1898872277; -- 0ms;
SELECT DISTINCT CAST((~ (rt0.c0)) AS REAL) FROM v0 WHERE (((((-285402915)*('pLDZ')))+(((-1.305876837E9) ISNULL)))) ORDER BY t1.c2 DESC  NULLS FIRST, LIKE(json_object(t1.c18, t1.c1), (((t1.c1, 0.8040523346617272, t1.c1))<=((t1.c28, t1.c2, rt0.c0))))  NULLS LAST;SELECT ALL CUME_DIST() OVER (), ABS(((vt0.c0)<=(rt0.c5))), CAST((+ (rt0.c3)) AS BLOB) FROM v0 WHERE ((((- (x''))) NOT BETWEEN ((NOT ('-1223149525'))) AND ((((x'', NULL, 0.969011054209679, -302556680, 'fu')) NOT BETWEEN ((x'0d33', -1099546751, NULL, 63782468, '')) AND ((NULL, NULL, 0.6490593981161891, NULL, 'ZWy২o'))))));SELECT ALL rtreenode(((vt0.c0)<>(rt0.c4)), NULL) FROM vt0 WHERE (((((CASE WHEN NULL THEN 'ckW3' ELSE x'' END)AND(CASE WHEN x'db4d' THEN 0.884937111414823 END)))OR(CASE WHEN x'' THEN x'' ELSE NULL END)));SELECT ALL ((rt0.c0 COLLATE BINARY)+(CASE vt0.c0  WHEN rt0.c4 THEN t1.c1 WHEN t1.c28 THEN t1.c18 WHEN rt0.c0 THEN t1.c55 ELSE v0.c0 END)) FROM t1, vt0, v0 WHERE ((+ (UNLIKELY(DISTINCT 2126564603))));SELECT (((t1.c2)) BETWEEN ((t1.c98)) AND ((((t1.c2) IS FALSE)))) FROM t1; -- 0ms;
SELECT DISTINCT GLOB(CAST(t1.c98 AS INTEGER), NULL), (((rt0.c3, rt0.c2, rt0.c1))<=(('-24086088', t1.c32, rt0.c1))) COLLATE BINARY, (((-1.779309379E9))=((((t1.c1) IS FALSE)))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT (((((v0.c0) IS FALSE)))>(((((rt0.c1, t1.c32, t1.c18))>((rt0.c0, NULL, 0.3396649078807692)))))), (~ (rt0.c5 COLLATE BINARY)), x'' FROM rt0, t1, v0, vt0 WHERE ((((x'9f6c') NOT BETWEEN ('D^tZ''') AND ('10717578')) IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c1, t1.c1, t1.c55, t1.c1, NULL)) BETWEEN (((+ (rt0.c2)), CASE t1.c28  WHEN vt0.c0 THEN rt0.c1 END, ((vt0.c0)>(rt0.c3)), ((rt0.c2)AND(rt0.c0)), rt0.c1)) AND ((t1.c18, -1763337524, ((((t1.c55)AND(t1.c55)))AND(vt0.c0)), ((rt0.c3)IS('-1045340931')), UNLIKELY(DISTINCT rt0.c5)))) FROM t1, vt0 WHERE (((((STRFTIME(NULL, x'', '-749801635'))AND(CASE '-389426220'  WHEN 0.9337873497616539 THEN 0.6719078062526688 ELSE 'CIQf' END)))OR(((NULL)/('')))));SELECT DISTINCT CASE WHEN (+ (t1.c18)) THEN rt0.c3 WHEN (((t1.c98)) BETWEEN ((rt0.c3)) AND ((vt0.c0))) THEN (((t1.c1)) BETWEEN ((t1.c18)) AND ((rt0.c5))) WHEN ((((((((rt0.c1)OR(x'')))OR(vt0.c0)))AND(t1.c18)))OR(rt0.c4)) THEN (NOT (t1.c55)) ELSE ((rt0.c2)>(t1.c55)) END FROM rt0, vt0, t1 LIMIT 346591571; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), (+ (vt0.c0)), COUNT(LTRIM(rt0.c3, t1.c2)) OVER () FROM rt0, t1, vt0; -- 0ms;
SELECT AVG((NOT (rt0.c1))) FROM t1 CROSS JOIN rt0 ON (((0.5759565110203229 IN (t1.c28)))!=((((t1.c18)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) CROSS JOIN v0 ON ABS(CASE WHEN 1868275998 THEN rt0.c4 ELSE rt0.c5 END) RIGHT OUTER JOIN vt0 ON 'fj-j';SELECT DISTINCT (((t1.c55)OR(rt0.c2)) IN ()) FROM t1 WHERE (CAST(((0xffffffffc1b15cfd) IS TRUE) AS NUMERIC)); -- 0ms;
SELECT ALL ((CAST(t1.c98 AS TEXT)) BETWEEN (-1543973096) AND (MAX(t1.c98))) FROM t1, vt0; -- 0ms;
SELECT COUNT((((t1.c98)) BETWEEN ((t1.c32)) AND ((t1.c18)))), (('BP') NOT NULL), ((((v0.c0)GLOB(rt0.c0)))/((('dCQi%\UN') NOT BETWEEN (rt0.c0) AND (-2.118208284E9)))) FROM v0 WHERE ((((((x'f67d')OR(0.9385519875644038)))OR(0.4661403272765946)) IN ((x'4616' IN ())))) LIMIT -1016360268 OFFSET 454493164;SELECT DISTINCT (((((t1.c32))<=((rt0.c1)))) BETWEEN (TOTAL('xꌬ')) AND ((- (vt0.c0)))) FROM rt0, t1, vt0, v0; -- 0ms;
SELECT DISTINCT (~ (json_array_length(t1.c98, vt0.c0))), (((NOT (rt0.c5))) ISNULL), MAX(((((t1.c28)OR(rt0.c5)))AND(v0.c0))), NTILE(((((rt0.c1)>=(v0.c0))) ISNULL)) OVER (), ((4.10880524E8) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c1) AND (t1.c32))) AND (MIN(t1.c1))) FROM t1, rt0, v0, vt0 GROUP BY t1.c2, (((vt0.c0 IN ()))/(((rt0.c1)&(t1.c18)))), CASE WHEN ((vt0.c0)AND(rt0.c2)) THEN t1.c98 END HAVING (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE t1.c2 END, (rt0.c5 IN ()), (rt0.c1 IN ())))==((t1.c55, ((((t1.c28)AND(t1.c55)))AND(t1.c2)), (((t1.c2)) NOT BETWEEN ((t1.c18)) AND ((NULL)))))); -- 1ms;
SELECT DISTINCT ((- (t1.c55)) IN ()) FROM t1, v0, vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( PARTITION BY (((((rt0.c5, rt0.c5, NULL)) BETWEEN ((rt0.c2, t1.c28, -1305876837)) AND ((rt0.c1, t1.c98, t1.c1)))) NOT BETWEEN (((t1.c1)*(rt0.c1))) AND (x'')), json_valid(((t1.c28) BETWEEN (vt0.c0) AND (t1.c32))), (((vt0.c0) NOT BETWEEN (t1.c98) AND (rt0.c1)) IN ()), (CASE WHEN -2079475038 THEN v0.c0 END IN ())) FROM v0, vt0, t1 WHERE (((CASE NULL  WHEN NULL THEN NULL WHEN '410880524' THEN x'31d6' WHEN 169088725 THEN x'' ELSE '762387082' END)>=(((-2118208284)LIKE(x''))))) ORDER BY (~ ((NOT (rt0.c0))))  NULLS LAST;SELECT DISTINCT CASE COALESCE(DISTINCT t1.c18, t1.c98)  WHEN ((rt0.c4) IS FALSE) THEN (((rt0.c4))<((t1.c2))) ELSE ((((t1.c28)AND(rt0.c2)))AND(t1.c28)) END, (((t1.c32)) BETWEEN ((0.7076570585889997)) AND ((CASE rt0.c5  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 1.086721555E9 WHEN rt0.c5 THEN t1.c98 END))), SUM(((9223372036854775807) NOTNULL)) FROM v0;SELECT (((- (t1.c32))) NOTNULL), ((rt0.c4)LIKE(t1.c2)) COLLATE NOCASE, CUME_DIST() OVER ( PARTITION BY CAST(((t1.c1)+('738668473')) AS REAL), ((((((((0.95921124096947)AND(((rt0.c1)LIKE(t1.c28)))))OR(CHAR(rt0.c5))))AND(CASE WHEN t1.c18 THEN rt0.c3 ELSE rt0.c2 END)))OR((((t1.c55))>=((rt0.c5))))) ORDER BY (((((x'')) BETWEEN ((rt0.c4)) AND ((t1.c1))))>=(((rt0.c4)>=(rt0.c3))))  NULLS FIRST) FROM v0 WHERE (CASE WHEN (- ('')) THEN ((0.1332097367979732) NOT NULL) END);SELECT DISTINCT CASE ((((rt0.c3)AND(rt0.c3)))OR(t1.c18))  WHEN '>-GP	J' THEN CAST(v0.c0 AS TEXT) END FROM t1, rt0, v0, vt0 WHERE (((CAST(0.3443417610579086 AS TEXT))==((+ (''))))); -- 0ms;
SELECT DISTINCT (~ (((rt0.c4)&(rt0.c3)))), LAG(rt0.c4, CASE CAST(t1.c32 AS NUMERIC)  WHEN ROUND(NULL, rt0.c3) THEN PRINTF(v0.c0) WHEN rt0.c0 THEN (~ (t1.c18)) WHEN t1.c98 COLLATE NOCASE THEN ((v0.c0)>=(rt0.c4)) ELSE CASE WHEN rt0.c1 THEN t1.c18 WHEN rt0.c0 THEN t1.c1 WHEN t1.c28 THEN rt0.c1 ELSE rt0.c4 END END, ((((t1.c2)*(rt0.c1))) NOTNULL)) OVER ( ORDER BY ((((rt0.c1)-(t1.c2))) NOT BETWEEN (NULL) AND (((t1.c2) IS TRUE))) ASC, rt0.c4 DESC  NULLS FIRST), ((AVG(t1.c28)) IS TRUE) FROM vt0, rt0, v0, t1 WHERE ((((((NOT (NULL)))AND((((0x7d8c5b49))<((1.300408163E9))))))AND((('-1779309379') IS FALSE)))); -- 1ms;
SELECT ALL ((('1868275998', t1.c2, t1.c55)) BETWEEN ((CAST(t1.c2 AS NUMERIC), (((rt0.c2, t1.c18, t1.c28)) BETWEEN ((vt0.c0, rt0.c4, rt0.c4)) AND ((t1.c98, rt0.c2, t1.c28))), ((t1.c2) NOT BETWEEN (t1.c2) AND ('')))) AND (((rt0.c3 IN ()), ((rt0.c1) ISNULL), 0.0037863119849494975))), (((((NOT (t1.c1)))AND(((v0.c0)IS NOT(rt0.c1)))))AND((((rt0.c3, t1.c28, t1.c18, t1.c55, v0.c0))>((rt0.c4, '	L[s+W6+5', t1.c18, v0.c0, rt0.c2))))), ((((rt0.c4) IS TRUE)) ISNULL) FROM v0, vt0, rt0, t1; -- 0ms;
SELECT ALL CASE (t1.c1 IN ())  WHEN LIKELY(DISTINCT vt0.c0) THEN TRIM(t1.c2) WHEN ((((0.670204691907025)OR(t1.c18)))AND(v0.c0)) THEN ((vt0.c0)+(rt0.c3)) WHEN rt0.c3 THEN (t1.c18 IN ()) ELSE UPPER(t1.c18) END, CASE CAST(t1.c32 AS REAL)  WHEN ABS(DISTINCT t1.c98) THEN TRIM(rt0.c1, v0.c0) WHEN NULL THEN (+ (rt0.c0)) WHEN CASE WHEN t1.c28 THEN vt0.c0 END THEN t1.c32 COLLATE NOCASE END, (((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c0 COLLATE NOCASE))) FROM v0 WHERE ('RWWA');SELECT DISTINCT TOTAL((v0.c0 IN ())) FROM t1, rt0 WHERE (CASE WHEN ((((x'')AND(NULL)))OR(1)) THEN (((0.7547047402886238))=((NULL))) END); -- 0ms;
SELECT DISTINCT ((t1.c32 IN (NULL)) IN ()), (((rt0.c5))<=((GROUP_CONCAT(t1.c1)))), (rt0.c0 IN ()) FROM t1, v0 INDEXED BY i71, vt0, rt0;SELECT ALL TOTAL(NULLIF(NULL, vt0.c0)) OVER () FROM v0, rt0, t1;SELECT ALL 0.29960034352548615, (((((((((((rt0.c3, v0.c0, t1.c28, t1.c1, '-842174037', t1.c55, 'ꝣ?eTc')) NOT BETWEEN ((t1.c2, t1.c1, v0.c0, t1.c18, t1.c2, t1.c18, t1.c18)) AND ((t1.c18, rt0.c2, rt0.c1, 'GOl>p', rt0.c0, v0.c0, t1.c2))))AND(((vt0.c0) IS FALSE))))AND((t1.c55 IN ()))))OR(((t1.c28)IS NOT(rt0.c5)))))OR(t1.c98)), ((((CASE rt0.c0  WHEN t1.c55 THEN rt0.c3 WHEN rt0.c2 THEN t1.c1 WHEN t1.c98 THEN rt0.c2 END)OR(((NULL)%(t1.c1)))))AND(((t1.c32)*(rt0.c0)))) FROM t1, v0, vt0, rt0 LIMIT -1806610568; -- 1ms;
SELECT DISTINCT (((~ (t1.c32)))>=(COALESCE(rt0.c1, vt0.c0))) FROM rt0, vt0 WHERE (LIKELIHOOD(NULL, 0.5421946272698257) COLLATE BINARY);SELECT CASE TOTAL(rt0.c4)  WHEN (('') NOT NULL) THEN ((((((((((((t1.c98)AND(rt0.c2)))OR(t1.c18)))AND(rt0.c5)))AND(t1.c1)))OR(0.007367057777889263)))AND(v0.c0)) WHEN (((rt0.c4))>=((rt0.c4))) THEN (rt0.c4 IN ()) WHEN TRIM(DISTINCT v0.c0, 0.7029930332179668) THEN (((t1.c1, rt0.c4, v0.c0)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c4)) AND ((t1.c2, '-1684168022', rt0.c1))) ELSE ((rt0.c5) NOTNULL) END FROM t1, vt0, v0 WHERE (((((NULL)IS NOT(x'8134')))AND(CAST(0.08977858757209367 AS TEXT)))) GROUP BY ((LIKELY(DISTINCT t1.c32))>=(((t1.c18) NOT BETWEEN (t1.c2) AND (t1.c28)))) HAVING (+ (ABS(rt0.c4))) LIMIT 1240803012 OFFSET 1694419238;SELECT 0.5343855699744653 FROM t1, rt0, v0, vt0 GROUP BY ((+ (rt0.c4)) IN ()) HAVING CASE WHEN t1.c55 THEN t1.c32 ELSE t1.c32 END COLLATE RTRIM; -- 0ms;
SELECT ALL ((v0.c0) ISNULL) FROM rt0 NOT INDEXED, vt0 WHERE (((0X719f3660 COLLATE NOCASE) NOT BETWEEN ((('-1541980842') NOT BETWEEN ('-988310757') AND ('381524802'))) AND (((((0.5657136009867112)AND(NULL)))AND(2.037268765E9))))) LIMIT -1825455486 OFFSET -413381185;SELECT COUNT(rt0.c4) OVER ( ORDER BY COALESCE(CAST(rt0.c0 AS NUMERIC), TYPEOF(vt0.c0)) ASC) FROM rt0, t1, v0, vt0 WHERE (((NOT (0.5518923279675476)) IN ())); -- 0ms;
SELECT ALL (NOT ((((t1.c18)) BETWEEN ((rt0.c5)) AND ((x'd0fd'))))), '1131186078', ((0.23784320922951407) BETWEEN (t1.c55) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN t1.c28 THEN rt0.c4 WHEN t1.c32 THEN 0.3659088362192934 ELSE t1.c18 END)) FROM rt0, vt0, v0, t1; -- 0ms;
SELECT DISTINCT ((~ (t1.c55)) IN ()) FROM rt0, vt0 LIMIT 694399003; -- 1ms;
SELECT DISTINCT DATETIME(rt0.c1, ((rt0.c3) NOT BETWEEN (rt0.c0) AND (v0.c0)), json_array(vt0.c0, rt0.c3, t1.c55, t1.c28)) FROM rt0, v0 WHERE (CASE x'0329'  WHEN '-842174037' THEN x'' WHEN NULL THEN 0xffffffff9a72fd90 WHEN x'' THEN 0.2684145218044557 END COLLATE RTRIM);SELECT ALL MIN(rt0.c0, t1.c32) FROM t1 ORDER BY (~ (((((t1.c1)AND(t1.c2)))AND(t1.c55)))) ASC;SELECT 0.3147855446253309, LEAD((~ (t1.c1)), (((t1.c28) IS TRUE) IN ()), (+ (((t1.c2) ISNULL)))) OVER (), ((((((((rt0.c4 COLLATE RTRIM)OR(((((rt0.c3)AND(0.9012310931652117)))AND(v0.c0)))))AND(((vt0.c0)<<(t1.c18)))))AND((rt0.c3 IN (t1.c1)))))AND(((t1.c1)OR(t1.c1)))) FROM v0, t1, vt0;SELECT ALL ((rt0.c4 COLLATE NOCASE) IS TRUE) FROM v0;SELECT DISTINCT (((~ (rt0.c4)))IS(CAST(rt0.c2 AS BLOB))) FROM t1, vt0, v0 WHERE (-9223372036854775808);SELECT DISTINCT (((((((((((((((('燊&')OR(vt0.c0)))OR(rt0.c5)))OR(rt0.c4)))OR(t1.c32)))AND(((t1.c98)<>(rt0.c5)))))AND((rt0.c2 IN (t1.c55)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)))))AND(((t1.c28)<=('c!')))) FROM v0, vt0, t1 WHERE ((((('0.6068366840912855')>(0.4985588205103735))) IS FALSE));SELECT DISTINCT CAST(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN v0.c0 THEN t1.c1 ELSE rt0.c4 END AS BLOB), ((((COUNT(*))OR(((rt0.c1) NOT BETWEEN (rt0.c4) AND (t1.c32)))))OR(((t1.c32) BETWEEN (rt0.c0) AND (t1.c55)))), ((x'') BETWEEN (((rt0.c5)==(t1.c55))) AND (((v0.c0)AND(rt0.c4)))) FROM t1, vt0, rt0;SELECT ((((rt0.c2)<(vt0.c0))) NOT BETWEEN ((((rt0.c4))=((t1.c55)))) AND (((t1.c18)||(v0.c0)))), SUM(((rt0.c1) BETWEEN (x'') AND (v0.c0))), (~ (SUM(0.9626072546627092))) FROM rt0, t1 ORDER BY ((json_object(t1.c55, t1.c2)) NOT NULL) DESC  NULLS LAST;SELECT DISTINCT '{}qvlM|' FROM vt0 LIMIT -806824498 OFFSET 1031717608; -- 1ms;
SELECT ALL ((rt0.c4)/(CASE 0.8183178756214602  WHEN t1.c2 THEN t1.c18 ELSE v0.c0 END)) FROM rt0 WHERE ((((~ ('0T_{T'))) NOT BETWEEN ((((('-1344790118')OR('\rf')))AND(x''))) AND ((('159515310') NOT BETWEEN (0.0831495846386141) AND (-1870558666))))) GROUP BY (((t1.c98))=(((rt0.c1 IN ())))) HAVING (CAST(v0.c0 AS INTEGER) IN (UNLIKELY(t1.c18)));SELECT DISTINCT load_extension(rt0.c3) FROM rt0 WHERE ((+ (NULL))); -- 0ms;
SELECT ALL NULLIF((rt0.c2 IN ()), x'2c13'), TOTAL(((rt0.c4) NOT BETWEEN (t1.c98) AND (vt0.c0))) OVER (), '' FROM rt0, vt0, v0 WHERE (((0.8696525167146235 IN ()) IN ())) ORDER BY t1.c18 DESC;SELECT DISTINCT 1694419238, MIN((- (t1.c28))), NTH_VALUE(CASE t1.c18  WHEN ((((t1.c1)AND(t1.c2)))OR(vt0.c0)) THEN ((t1.c28)GLOB(t1.c32)) END, ((CAST(t1.c2 AS BLOB))||(((t1.c55)/(t1.c98))))) OVER () FROM t1, vt0, v0;SELECT DISTINCT MAX((rt0.c1 IN ())) FROM rt0, vt0 WHERE (CASE ((0.5939465019278393)*(NULL))  WHEN (((('\n(')OR('0.925932668591503')))AND('1')) THEN NULL COLLATE BINARY END); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE rt0.c5) OVER () FROM rt0, v0; -- 0ms;
SELECT CASE v0.c0  WHEN t1.c2 THEN 'FALSE' ELSE t1.c1 END COLLATE RTRIM FROM rt0, t1, v0, vt0 WHERE (((('v]/3e篆]')) BETWEEN ((x'')) AND ((0.7396473694524127))) COLLATE RTRIM); -- 0ms;
