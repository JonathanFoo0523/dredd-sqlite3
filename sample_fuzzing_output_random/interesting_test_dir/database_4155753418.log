-- Time: 2024/06/07 12:15:33
-- Database: database18
-- Database version: 3.40.0
-- seed value: 4155753418
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR FAIL rt0 SET (c0, c3)=(x'', 0.31953408563189234) WHERE ''; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ABORT rt0 SET c0=0Xffffffffe73faa53; -- 1ms;
PRAGMA temp.cache_size; -- 1ms;
ANALYZE rt0; -- 1ms;
UPDATE OR FAIL rt0 SET c0='*S', c3=-4.15258029E8; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c3, c4)=('u%T}D&J*⣽', x'd8dd', NULL); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
UPDATE OR IGNORE rt1 SET c0='J3'; -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3)=(0.8621465863814357); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
UPDATE rt0 SET c3=NULL, c3=0.26916286451170535, c1=NULL; -- 0ms;
UPDATE OR REPLACE rt1 SET c0='-415258029'; -- 0ms;
ANALYZE rt0; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c1=')0+', c1=NULL; -- 0ms;
UPDATE rt1 SET c1=NULL, c4=x''; -- 0ms;
UPDATE rt1 SET c2=NULL; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c3)=(0.8621465863814357) WHERE ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE NOCASE; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c4, c2)=('', '-415258029') WHERE ((((((rt1.c4)OR(rt1.c1)))OR(rt1.c4)))=(((rt1.c4)+(rt1.c0)))); -- 2ms;
INSERT OR IGNORE INTO rt0(c3, c1, c4, c0) VALUES (0xffffffffe73faa53, NULL, NULL, x''); -- 6ms;
REINDEX  rt1; -- 0ms;
PRAGMA temp.busy_timeout = 4571874774294189212; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
COMMIT; -- 0ms;
PRAGMA secure_delete = true; -- 1ms;
UPDATE OR IGNORE rt1 SET (c3)=(0X635589fb) WHERE ((((rt1.c3) NOTNULL))<=(x'')); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INT ); -- 1ms;
UPDATE rt1 SET c3=x'3cee'; -- 5ms;
UPDATE OR IGNORE rt1 SET c2=NULL, c4=0xffffffffe73faa53, c3=x''; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c3=NULL, c3=NULL WHERE (((rt1.c2)) NOT BETWEEN ((((rt1.c3) BETWEEN (rt1.c1) AND ('')))) AND ((CAST(rt1.c1 AS REAL)))); -- 0ms;
CREATE UNIQUE INDEX i70 ON t0('_J' DESC); -- 0ms;
CREATE INDEX i76 ON t0(((((c0)OR(((c0) NOT BETWEEN (c0) AND (c0)))))OR(CASE WHEN c0 THEN c0 WHEN 0.49866277990161656 THEN c0 WHEN c0 THEN c0 ELSE c0 END)) COLLATE BINARY DESC) WHERE (((c0) NOT BETWEEN (c0) AND (c0)) IN ()); -- 0ms;
UPDATE t0 SET (c0)=(x'2bff') WHERE t0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0Xffffffffe73faa53), (x''), (0.8621465863814357); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='1429174016' WHERE 0.5005102322436354; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
UPDATE OR IGNORE rt1 SET (c4, c2)=(0X7c8df88f, 1e500); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c0, c0)=(x'', 0.6467587110255723, NULL) WHERE CASE ((0.5750883572782339) IS FALSE)  WHEN x'' THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) END; -- 1ms;
UPDATE t0 SET c0=0.6804719842847725, c0=NULL WHERE (t0.c0 IN (t0.c0, t0.c0)) COLLATE NOCASE; -- 1ms;
PRAGMA main.shrink_memory; -- 0ms;
ALTER TABLE t0 ADD COLUMN c59 INTEGER; -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
UPDATE OR IGNORE t0 SET c59=NULL WHERE (+ ((t0.c59 IN ()))); -- 0ms;
REINDEX RTRIM; -- 1ms;
UPDATE rt0 SET c4=-4.15258029E8; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c59 TO c85; -- 0ms;
REINDEX  rt1; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0.6804719842847725, c1=x''; -- 0ms;
PRAGMA automatic_index; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i97 ON t1((((((c85) BETWEEN (c0) AND (c85)), c0, ((c85)%(c85)), '0.6804719842847725', (- (c0))))<=((((c85)OR(NULL)), ((c85)IS(c0)), ((c85) BETWEEN (c0) AND (c85)), ((((((((c85)OR(c0)))OR(c0)))AND(c85)))OR(c0)), (c0 IN (c0, c0))))) COLLATE RTRIM ASC,CAST((((c85, c85, c85)) BETWEEN ((c85, x'', c85)) AND (('1429174016', c85, c0))) AS INTEGER) COLLATE BINARY ASC) WHERE ((((c0)*(NULL))) NOT BETWEEN (((c85)%(c85))) AND (((c85)!=(c85)))); -- 1ms;
UPDATE rt1 SET c2='-1565707973'; -- 0ms;
ANALYZE t1; -- 1ms;
CREATE INDEX IF NOT EXISTS i32 ON t1(((((c0) BETWEEN (c85) AND (c85)))||(c0)) COLLATE RTRIM,CASE WHEN ((c0)*(c0)) THEN ((((c85)AND(c85)))AND(c85)) END COLLATE NOCASE ASC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=111350626 unordered noskipscan'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x''; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL json_remove(0.3519440008629674 COLLATE RTRIM, ((rt1.c3)GLOB(rt1.c1)), (- (t1.c85)), CAST(rt0.c2 AS TEXT)) FROM rt0, rt1 WHERE (((('-1602956565')) BETWEEN ((CAST(0.49866277990161656 AS TEXT))) AND ((CASE 0.8784829979469313  WHEN 'ꄮ5&]' THEN x'' ELSE NULL END))));SELECT DISTINCT (((((rt1.c4)AND(rt1.c3)))AND(t1.c0)) IN ()) FROM rt1, t1; -- 0ms;
SELECT DISTINCT CAST(CAST(rt1.c0 AS NUMERIC) AS TEXT) FROM rt0 WHERE (LTRIM(((('1429174016')) BETWEEN (('')) AND ((0.1405117823680162)))));SELECT DISTINCT ((CAST(rt1.c3 AS REAL)) ISNULL), ((((rt0.c1) IS FALSE)) IS TRUE), (((((((rt0.c2))<=((t1.c0))))OR(1666550267)))AND(MAX(rt1.c1))) FROM t1 WHERE ((((- (0X6a31362)))-((x'1e34' IN ('_j', NULL)))));SELECT (+ (rt0.c2)), COUNT(*) OVER ( ORDER BY json_quote(((rt0.c2)>>(NULL))) ASC, CASE (NOT (rt0.c1))  WHEN rt0.c0 COLLATE NOCASE THEN ((NULL) BETWEEN (rt1.c3) AND (rt0.c2)) END  NULLS LAST), (((((rt1.c3, t1.c0, rt0.c4))<=((rt1.c1, rt1.c2, 0.7089654605680793))))||(CASE rt1.c0  WHEN rt1.c2 THEN t1.c85 ELSE rt0.c4 END)) FROM t1, rt0;SELECT ((((rt0.c2) BETWEEN (rt0.c3) AND (rt1.c3))) BETWEEN (((((((((rt0.c4)AND(rt0.c3)))OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c3))) AND (((rt1.c2) BETWEEN (rt0.c0) AND (t1.c85)))), x'be13' COLLATE NOCASE, (((LOWER(rt0.c4)))!=((rt0.c4))) FROM rt0, t1;SELECT ALL ((COUNT(*))&(MIN(rt0.c3))) FROM rt0, t1, rt1 WHERE (CAST(((NULL) IS FALSE) AS TEXT)); -- 0ms;
SELECT DISTINCT CAST(rt1.c0 AS REAL) COLLATE NOCASE FROM rt1 WHERE (((((0.8621465863814357)<=(x''))) IS TRUE)) LIMIT 1772458834 OFFSET 823588741; -- 0ms;
SELECT DISTINCT ((COUNT(*))IS((((rt1.c4))>((rt1.c2))))) FROM rt0, t1 LIMIT -2075746002 OFFSET -1418959463;SELECT DISTINCT (((((rt1.c1 IN (rt1.c3, rt0.c2)))OR(COUNT(rt0.c1))))AND(((rt0.c3)>=(rt1.c0)))), (rt1.c4 IN ()) COLLATE BINARY, ((rt1.c4)LIKE(rt0.c0)) COLLATE RTRIM FROM rt1, t1;SELECT ALL CASE (((rt1.c0)) BETWEEN ((t1.c85)) AND ((rt1.c4)))  WHEN rt1.c3 THEN ((rt0.c2)!=(t1.c85)) ELSE 8.23588741E8 END FROM rt0;SELECT ALL ((t1.c0) BETWEEN (t1.c85) AND (rt0.c0)) COLLATE NOCASE FROM t1, rt1, rt0 GROUP BY (((NOT (rt0.c1))) BETWEEN (NULL) AND (((rt1.c4) ISNULL))) HAVING MIN(((rt1.c3)IS NOT(rt0.c3))) ORDER BY (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()), (+ (CAST(0Xffffffffa074d2eb AS INTEGER))), NTH_VALUE((((rt0.c3 IN ()))>(t1.c0)), (- (((rt0.c4)IS NOT(rt0.c0))))) OVER () FROM t1, rt1, rt0 WHERE (('%틫P|\rj' IN ())); -- 0ms;
SELECT ALL CASE (~ (rt1.c3))  WHEN CAST(rt1.c4 AS NUMERIC) THEN ((((t1.c85)OR(t1.c0)))OR(t1.c85)) END FROM rt0 GROUP BY rtreenode(-1962510906, '-1637417038') COLLATE NOCASE, ((((((((-931858342)OR(CAST(rt0.c1 AS NUMERIC))))AND(((rt0.c2)/(0.6343995519594591)))))OR(((rt1.c1)GLOB(t1.c85)))))OR(CAST(rt1.c1 AS REAL))), CASE CASE WHEN rt0.c4 THEN rt0.c3 ELSE 2.089678991E9 END  WHEN (~ (rt0.c4)) THEN rt0.c2 END HAVING CASE -4.15258029E8  WHEN (((rt0.c1))<((rt1.c2))) THEN x'' WHEN TRIM('1719740879') THEN (rt1.c1 IN ()) WHEN (((t1.c85))<((t1.c85))) THEN ((((((((rt1.c0)OR(rt1.c2)))OR(t1.c85)))AND(t1.c85)))AND(rt0.c0)) ELSE MAX(t1.c0) END;SELECT DISTINCT CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE t1.c85 END THEN (rt0.c3 IN ()) END, ((CAST(rt1.c1 AS TEXT))>=(TOTAL(t1.c85))), ((CASE rt0.c4  WHEN rt1.c3 THEN rt1.c3 END)>=(CAST(rt1.c1 AS TEXT))) FROM rt1 WHERE (((((((0.6374802853011671) NOTNULL))OR(((x'') IS TRUE))))OR((('0.5005102322436354') ISNULL)))) ORDER BY ((NULL) NOT NULL)  NULLS FIRST;SELECT DISTINCT CASE WHEN (NOT (t1.c0)) THEN ((t1.c85) NOT NULL) WHEN UPPER(rt0.c2) THEN (+ ('-1418959463')) WHEN MAX(rt0.c1) THEN (rt0.c0 IN ()) ELSE (+ (rt1.c3)) END FROM rt1;SELECT DISTINCT (- (rt1.c4)) FROM t1;SELECT DISTINCT (((rt0.c4))==(((((('TRUE')OR(rt1.c4)))AND(rt1.c4))))), ((CAST(rt0.c0 AS REAL)) NOT BETWEEN ((((rt0.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, t1.c85)) AND ((rt0.c4, rt1.c1, rt0.c4)))) AND (CASE WHEN rt1.c2 THEN rt0.c1 ELSE t1.c0 END)), ((NULL) ISNULL) FROM t1 WHERE ('_J') ORDER BY (((NOT (rt0.c4))) NOT NULL) DESC;SELECT DISTINCT t1.c85 FROM rt1 INDEXED BY i76 WHERE ((((0.1405117823680162 IN ()))|((((NULL, 0xffffffffda2516d4, 0.24430867226105346))>=((0.7202661402193341, NULL, 0Xffffffffe86729ab)))))) GROUP BY ((LIKELIHOOD(rt0.c1, 0.7837373370652404)) NOT BETWEEN (((t1.c0)IS NOT(rt1.c4))) AND (NULL));SELECT ((((rt0.c3)&(rt0.c2))) NOT NULL) FROM rt1 WHERE ('p觻') GROUP BY CAST(((rt1.c0) ISNULL) AS REAL), ((((('447560936'))<>((rt1.c3))))<<((((rt1.c0))<=((rt0.c2))))), (((rt0.c1 IN (rt0.c4))) NOTNULL);SELECT (((((rt0.c0, 0xffffffffa2ad313b, NULL))>((t1.c85, rt0.c1, rt0.c2)))) NOTNULL), CAST(rt1.c3 AS BLOB), ((((((((rt1.c2)OR((rt1.c4 IN ()))))AND(((rt1.c4)*(rt1.c4)))))OR((((rt0.c1))<((t1.c0))))))AND(rt1.c2 COLLATE NOCASE)) FROM rt1 WHERE ((((((((((((NULL)) NOT BETWEEN ((0.3481036636878795)) AND (('-395892309'))))OR((((1.666550267E9))>=((NULL))))))OR(NULL)))AND(x'4161')))OR(CASE '0.24430867226105346'  WHEN 0.7955715445847684 THEN 'u%T}D&J*⣽' END)));SELECT DISTINCT rt1.c0 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) COLLATE BINARY FROM rt0, t1, rt1 WHERE (((((0.31953408563189234 IN ()), CAST(0.698206408548458 AS REAL), 0.43720909893009685 COLLATE RTRIM))<((-1320393740, (((x'')) NOT BETWEEN ((0.3093564798012587)) AND ((''))), x'f6b9a034' COLLATE BINARY)))) ORDER BY CASE WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (t1.c85)) THEN CASE t1.c0  WHEN rt1.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt1.c0 ELSE rt1.c4 END ELSE ((((rt0.c4)AND(rt0.c0)))AND(rt1.c3)) END DESC  NULLS FIRST; -- 0ms;
SELECT ABS(DISTINCT (((rt1.c2)) NOT BETWEEN ((-566714673)) AND ((rt0.c2)))), rt0.c3, (((NOT (rt0.c3)))=(CASE rt0.c2  WHEN rt1.c4 THEN 'aoq' WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt0.c4 ELSE rt0.c4 END)) FROM rt0, t1;SELECT ALL GROUP_CONCAT(((((t1.c85)AND(t1.c85)))AND(rt1.c2))) OVER (), (((x'')/(rt1.c2)) IN (t1.c85)), 0.34632551704815984 FROM rt0, t1, rt1; -- 1ms;
SELECT DISTINCT ((x'' COLLATE RTRIM) BETWEEN ('U\n') AND (((rt0.c2)/(rt0.c0)))), (((((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))) NOTNULL), rt0.c1 FROM rt0 INDEXED BY i97 WHERE (((TYPEOF(DISTINCT 0xffffffffca1b0fe4))+((((('1930995622')OR(-9.04196124E8)))OR('-356213575')))));SELECT ALL (((((((((rt1.c0 IN ()))OR((('ﳕS') NOTNULL))))AND(x'')))OR(((rt1.c4) NOT NULL))))OR(((t1.c0)/(rt1.c3)))) FROM rt0, t1;SELECT ALL t1.c0 COLLATE BINARY FROM t1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c4) NOTNULL) IN (CAST(rt0.c4 AS TEXT), LOWER(rt1.c1))) FROM t1, rt0, rt1 WHERE (CAST(((0.2387764045563544) ISNULL) AS BLOB)); -- 0ms;
SELECT DISTINCT STRFTIME(LIKELY(rt0.c2), ((rt1.c4) BETWEEN (rt0.c1) AND (rt1.c4)), MAX(rt0.c2)), ((((CASE rt0.c0  WHEN t1.c85 THEN x'' END)OR(TYPEOF(DISTINCT rt0.c0))))OR(CASE WHEN 0.8117717958742124 THEN rt0.c4 END)), CASE PRINTF(t1.c0)  WHEN LIKELIHOOD(DISTINCT rt1.c2, 0.1760312605307719) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt1.c4)) WHEN ((rt1.c2) BETWEEN (rt0.c4) AND (rt1.c4)) THEN MAX(rt0.c3) WHEN ((t1.c0) ISNULL) THEN (((rt1.c0))<((t1.c0))) ELSE rt0.c3 COLLATE BINARY END FROM rt0, rt1 WHERE (((x'')<>(((('1452524977'))<>(('')))))) GROUP BY CASE rt0.c1  WHEN rt1.c1 THEN t1.c85 ELSE rt0.c2 END COLLATE BINARY, rt0.c0, (- (t1.c85 COLLATE NOCASE));SELECT CASE WHEN MAX(rt0.c3) THEN ((rt0.c1)>=(x'')) END FROM rt0, t1, rt1 ORDER BY ((((((((((t1.c85)GLOB(t1.c85)))AND(TRIM(DISTINCT rt1.c3, rt0.c2))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)))))OR((NOT (rt1.c2)))))AND(CAST(rt1.c4 AS BLOB))) DESC  NULLS FIRST, ((((rt1.c4) BETWEEN (x'6823') AND (rt1.c1)))-(CAST(rt0.c0 AS TEXT))); -- 0ms;
SELECT ((rt1.c0 COLLATE NOCASE) BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4)))), (((((rt1.c0)OR(rt1.c4)))OR(rt0.c4)) IN ()), (((rt1.c1)%(rt1.c4)) IN ()) FROM t1;SELECT DISTINCT ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (t1.c0))) BETWEEN (((rt0.c3)+(rt0.c4))) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) FROM rt0, rt1, t1; -- 1ms;
SELECT CASE WHEN ((rt1.c0) BETWEEN (t1.c85) AND (rt0.c3)) THEN MIN(rt0.c0) WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c3)=(rt0.c4)) WHEN ((rt1.c0)GLOB(rt1.c3)) THEN '' WHEN (((rt0.c0))!=((t1.c0))) THEN ((rt1.c1)LIKE(rt0.c4)) WHEN NULL THEN x'4aec' ELSE (((rt0.c1))!=((rt1.c1))) END, CAST(LIKELY('508098107') AS REAL), COUNT(*) FROM t1, rt0;SELECT (((rt1.c4 IN (rt0.c0, rt1.c0))) BETWEEN (CASE rt0.c4  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END) AND (x'')) FROM t1, rt1, rt0 WHERE (((0.5860320094707415 COLLATE NOCASE)>>(CASE '''k *4>J'  WHEN x'' THEN '' WHEN 0.6804719842847725 THEN NULL WHEN 0.3519440008629674 THEN '1930995622' ELSE 'ﳕS' END))); -- 0ms;
SELECT DISTINCT CASE ((rt0.c2) IS FALSE)  WHEN (rt0.c0 IN ()) THEN ((rt0.c3)/(rt1.c2)) WHEN t1.c0 COLLATE RTRIM THEN ((rt0.c0)<>(rt1.c2)) WHEN COUNT(rt0.c0) THEN ((t1.c0) IS FALSE) ELSE rt0.c2 END FROM rt0, t1;SELECT rt1.c0, (((NOT (rt1.c2)))|(IFNULL(rt1.c1, rt0.c4))), GROUP_CONCAT(((rt0.c3) ISNULL)) OVER () FROM rt1;SELECT ALL COUNT('-1669717675') OVER () FROM rt0, t1 WHERE (((((CASE WHEN NULL THEN NULL ELSE 0.18899205548702247 END)AND((('1304586787')>(NULL)))))AND(((NULL) BETWEEN (NULL) AND ('QLn'))))); -- 1ms;
SELECT ALL CAST(CASE WHEN rt0.c3 THEN rt0.c3 END AS REAL), CAST(t1.c85 AS TEXT), NTH_VALUE('', ((((((rt1.c4)|(rt1.c0)))OR((((rt0.c4, rt0.c2, t1.c0)) NOT BETWEEN ((rt0.c3, rt1.c1, rt0.c0)) AND ((x'35ba', t1.c85, rt0.c4))))))AND((((t1.c85, t1.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, t1.c0, rt1.c1)) AND ((rt0.c3, rt1.c0, rt1.c3)))))) OVER () FROM rt1, rt0, t1 INDEXED BY i76 WHERE (CAST('1023126918' AS BLOB) COLLATE BINARY);SELECT ALL CAST(((1.772458834E9)>>(t1.c0)) AS TEXT), MAX(CASE WHEN rt1.c2 THEN rt1.c2 END), (((((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c3)))) BETWEEN (CAST(rt1.c2 AS TEXT)) AND (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c4)))) FROM rt1 WHERE (((((NULL) BETWEEN (NULL) AND (0.16992260881824617))) NOTNULL));SELECT DISTINCT ((HEX(rt1.c4)) NOTNULL) FROM rt1 WHERE ('k') GROUP BY ((rt0.c1)IS(rt1.c1)) COLLATE RTRIM;SELECT ((((rt0.c1) IS TRUE))<>(CAST(x'' AS REAL))) FROM rt1 WHERE ((((NOT (1304586787)))IS(CAST('ꄮ5&]' AS REAL))));SELECT CASE WHEN rt0.c0 THEN (((t1.c85))<=((rt1.c1))) WHEN rt0.c0 COLLATE NOCASE THEN (t1.c85 IN ()) WHEN ((t1.c0)||(rt1.c1)) THEN CAST(rt0.c1 AS INTEGER) WHEN (rt0.c4 IN (rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 ELSE rt1.c3 END WHEN (((t1.c0, t1.c0, rt0.c0)) BETWEEN ((rt0.c4, rt1.c2, t1.c85)) AND ((rt1.c4, '506892469', rt1.c4))) THEN CASE NULL  WHEN rt0.c4 THEN rt0.c2 END ELSE 'D|>' END FROM t1, rt0;SELECT DISTINCT ((((rt0.c4)<(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (COUNT(*))), COUNT(*) OVER (), UPPER(CASE rt1.c1  WHEN t1.c85 THEN rt1.c3 END) FROM t1, rt1;SELECT DISTINCT (NOT (CAST('uR^f' AS NUMERIC))) FROM t1, rt1 WHERE (CAST((((NULL))<=((0.7026790632753929))) AS NUMERIC)) ORDER BY rt1.c1 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((((((x'')AND(rt0.c0)))AND(rt1.c1)))AND(rt0.c0)))OR(rt0.c1)) IN ()) FROM rt1, rt0 WHERE ((+ ((((NULL, 0.11048205218837182, NULL, -168719723, 0xffffffffc8743a56))<((0Xffffffffa4dee57d, '798483369', 0.8509360301154756, 0.7547990912837078, NULL)))))) LIMIT 1666550267 OFFSET 1760165077; -- 0ms;
SELECT COUNT(CASE WHEN rt0.c2 THEN t1.c0 END) FROM rt1;SELECT DISTINCT CASE WHEN (((rt0.c1, t1.c0, rt1.c0))>=((t1.c0, t1.c0, rt0.c0))) THEN LOWER(rt0.c4) END FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT t1.c0, ((CAST(rt0.c1 AS TEXT))==(rt0.c4)), (((rt1.c3)) BETWEEN ((rt1.c4)) AND (((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2)))))) FROM rt0, rt1, t1; -- 0ms;
SELECT ALL ((rt0.c3) IS FALSE) FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(COUNT(*))))AND(COALESCE(0.2799538239522864, rt1.c0))))OR((+ (rt0.c1)))))OR(((rt0.c0)IS NOT(t1.c0)))) FROM rt1, rt0 WHERE ((((((0.7202661402193341))>=((0X75af8bf2))))<(((NULL)<=('-2053548924')))));SELECT CAST(COUNT(*) AS REAL) FROM rt0; -- 0ms;
SELECT SUM(rt0.c2) OVER ( ORDER BY ((LIKELY(DISTINCT rt0.c4))|(CASE rt0.c4  WHEN rt0.c4 THEN rt1.c1 ELSE rt0.c4 END))), ((rt1.c2)>=(json_type(rt1.c3))), CASE HEX(DISTINCT t1.c0)  WHEN ((rt0.c3)%(t1.c0)) THEN ((rt1.c4)-(rt0.c4)) WHEN RTRIM(rt1.c1) THEN 508098107 WHEN CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c2 END THEN rt1.c1 ELSE ((rt1.c3) NOT BETWEEN (rt1.c4) AND (t1.c0)) END FROM t1 WHERE ((((0X64bc2607 IN (0X15551272))) NOT BETWEEN (CAST(x'5662' AS NUMERIC)) AND (0.8609476247224757 COLLATE BINARY))) GROUP BY (((((((((((t1.c85, t1.c85, rt0.c0, rt1.c0, t1.c85))<((rt0.c4, rt0.c3, rt0.c0, rt0.c4, t1.c0))))OR(SQLITE_VERSION())))AND(((((rt0.c3)AND(rt1.c0)))AND(rt1.c3)))))AND(CASE rt1.c2  WHEN '' THEN 1429174016 WHEN rt1.c3 THEN rt0.c3 WHEN rt0.c3 THEN t1.c0 END)))AND(rt1.c1));SELECT ALL CAST(CASE rt1.c2  WHEN NULL THEN rt1.c3 END AS REAL) FROM rt0, rt1 WHERE (CAST(((x'') NOT NULL) AS NUMERIC)); -- 1ms;
SELECT ALL ((((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)))-(TOTAL(t1.c0))) FROM rt1, rt0, t1 WHERE ((((- (x'')))OR((~ ('137708256'))))); -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT t1.c85)) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) AND (rt0.c4 COLLATE NOCASE)) FROM t1, rt0 WHERE (((('0.3093564798012587')-(NULL)) IN ())) ORDER BY ((((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c3)))OR(('1429174016' IN ()))) DESC  NULLS FIRST;SELECT DISTINCT (((((((rt0.c2)OR(rt0.c0)))AND(t1.c85)), (((rt0.c3))=((rt0.c1))), ((('Yi☇B'))<>((rt1.c1)))))<((((rt1.c0) ISNULL), (+ (rt0.c4)), ((rt0.c0)|(rt1.c2))))) FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT ((((((((MAX(rt0.c4, rt1.c1))AND((('-990172168')*(rt0.c2)))))AND(json(rt1.c1))))AND(((((((((rt0.c1)OR(x'6873')))AND(rt0.c2)))OR(t1.c85)))AND(0.15055006151279549)))))AND(((((rt0.c2)OR(t1.c0)))OR('2138670310')))) FROM rt1;SELECT ALL CAST(rt1.c2 COLLATE BINARY AS BLOB), (+ (rt1.c1)) COLLATE NOCASE, ((((((((((((rt1.c1)AND(t1.c0)))OR(rt0.c4)))AND((NOT (rt0.c3)))))OR(((((((((rt0.c4)AND(rt0.c2)))OR(rt1.c2)))OR(rt1.c3)))OR(rt0.c0)))))OR(LIKELY(DISTINCT t1.c0))))OR('-203959063')) FROM rt1 WHERE ('0.24430867226105346') GROUP BY 0.7603335096036969 HAVING MIN(TRIM(DISTINCT rt0.c3, rt0.c4));SELECT json_patch(t1.c0, t1.c85) COLLATE NOCASE, rt0.c4, ((((((rt0.c1)<=(rt1.c3)))AND(((rt1.c1)>(rt1.c4)))))OR(CAST(rt1.c4 AS REAL))) FROM t1, rt1 WHERE (((-191103125 COLLATE NOCASE)+(((0.12110274491611484) NOT BETWEEN ('*(|Y<qKi') AND ('%*')))));SELECT DISTINCT ('' IN ()) FROM rt0, t1, rt1; -- 0ms;
SELECT ALL ((CAST(rt1.c0 AS BLOB)) BETWEEN (((t1.c85) IS TRUE)) AND (((((t1.c0)AND(rt1.c3)))OR(rt0.c1)))) FROM rt0;SELECT DISTINCT CAST(((x'')<>(rt0.c0)) AS TEXT) FROM t1, rt1, rt0 WHERE (CAST('241192468' AS REAL)); -- 1ms;
SELECT NULL FROM rt0; -- 0ms;
SELECT NULLIF(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c0)), rt0.c0), ((CASE t1.c85  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c3))))), ((rt0.c0 COLLATE NOCASE) BETWEEN (0.9264453968964403) AND (CASE t1.c0  WHEN '-203959063' THEN rt0.c2 WHEN rt0.c0 THEN 0.8509360301154756 WHEN rt1.c0 THEN rt1.c0 END)) FROM t1 NOT INDEXED INNER JOIN rt0 ON ((0.970271226053562) BETWEEN (((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0))) AND (t1.c0 COLLATE RTRIM)) INNER JOIN rt1 ON t1.c0 GROUP BY CAST(t1.c85 AS REAL), ((x'') NOT BETWEEN (CASE WHEN rt1.c4 THEN rt0.c3 ELSE rt1.c2 END) AND (((rt0.c0) BETWEEN (rt1.c4) AND (rt0.c2)))), t1.c0 HAVING IFNULL(t1.c85, ((rt1.c4)/(t1.c0))); -- 0ms;
SELECT DISTINCT TRIM(rt0.c1, rt0.c0 COLLATE BINARY) FROM rt0, rt1 WHERE ((((((NULL)+(x''))))<>(('-254342362')))); -- 0ms;
SELECT (((rt1.c3) IS FALSE) IN ()) FROM rt1, rt0, t1 WHERE ((~ (CASE WHEN NULL THEN '1346906365' WHEN 0.3632863679174566 THEN 0.971265836619045 WHEN x'' THEN NULL ELSE x'2680' END))); -- 0ms;
SELECT CAST(((rt0.c1) ISNULL) AS TEXT) FROM rt0, t1, rt1 WHERE (NULLIF(HEX(-968932391), ((NULL)AND(NULL)))); -- 1ms;
SELECT ((GROUP_CONCAT(rt1.c0)) BETWEEN (CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c4 END) AND ((('798483369')>=(rt0.c0)))) FROM rt1, rt0; -- 1ms;
SELECT ALL COUNT(((t1.c85) NOT NULL)) OVER ( ROWS  CURRENT ROW) FROM rt1 WHERE ((x'' IN ())) LIMIT -435440291;SELECT DISTINCT ROW_NUMBER() OVER (), x'5179' COLLATE RTRIM, (+ (((rt0.c0)>(rt1.c0)))), ((((rt0.c3) BETWEEN (rt0.c0) AND (rt1.c4)))IS(((((((((rt1.c1)AND(rt1.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))), ((((rt1.c0) ISNULL))IS(AVG(rt1.c1))) FROM t1, rt1, rt0; -- 1ms;
SELECT ALL (~ (LIKELIHOOD(DISTINCT x'', 0.8568704620466879))) FROM rt1, rt0 WHERE (CASE TRIM(DISTINCT x'')  WHEN CAST(0Xffffffff97602aa4 AS REAL) THEN ((x'') BETWEEN (0.4466190026248956) AND (0.8784829979469313)) ELSE CASE WHEN 'rgj&NVZ' THEN x'683a' ELSE '-88842978' END END); -- 0ms;
SELECT CAST(CAST(rt0.c4 AS INTEGER) AS REAL) FROM rt1, t1;SELECT ALL GROUP_CONCAT((((rt1.c1, rt1.c0, rt1.c3))>=((NULL, rt1.c0, rt0.c2)))) FROM rt1 WHERE (((((((((0.8347613628180118)OR(0.7358632043856739)))AND(x'61f4')))AND((NULL IN ()))))AND((NOT (-2.54342362E8))))) LIMIT -904196124;SELECT DISTINCT ((t1.c0) NOTNULL) COLLATE NOCASE, CASE WHEN (((rt0.c3))<>((rt0.c0))) THEN (- (rt1.c3)) END, CASE WHEN ((((0.10643110842958148)AND(rt1.c0)))AND(x'')) THEN COALESCE(rt1.c1, rt0.c1) END FROM rt0, rt1, t1 ORDER BY ABS(DISTINCT CASE WHEN rt1.c2 THEN rt0.c3 END) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT CASE ((rt1.c4)AND(rt1.c0))  WHEN ((rt1.c2)||(t1.c85)) THEN (- (rt1.c0)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END, ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt1.c0))) IS FALSE), ((((rt0.c2)=(NULL)))OR((((t1.c0))>=((1.974438898E9))))) FROM t1, rt1, rt0 WHERE (((load_extension(x'0162', '}6T#-'))-(((x'')>('357896818'))))); -- 0ms;
SELECT DISTINCT ((('-2053548924'))<=(((rt1.c1 IN ())))) FROM t1, rt1, rt0 WHERE (NULL) ORDER BY CAST(NULL AS INTEGER) DESC LIMIT -841842348 OFFSET 137708256; -- 0ms;
SELECT DISTINCT CAST(rt0.c4 AS TEXT) FROM t1 RIGHT OUTER JOIN rt1 ON ((0.2543178849267086)IS NOT(rt0.c2 COLLATE RTRIM)) LEFT OUTER JOIN rt0 ON (~ (CAST(rt0.c2 AS TEXT)));SELECT ALL ((((((rt1.c4)OR(rt0.c2)))AND(rt1.c3)))IS NOT(rt0.c4)) FROM rt0, t1, rt1 WHERE (((x'7deb')<<(((NULL) NOT NULL)))); -- 0ms;
SELECT ALL CAST((rt1.c2 IN ()) AS TEXT), TOTAL(((((((((rt0.c0)OR(t1.c0)))AND(rt0.c1)))AND(rt1.c4)))AND(t1.c0))), x'2c9d' FROM rt1, t1, rt0 WHERE (NULL); -- 0ms;
SELECT (((rt1.c4 IN ()))GLOB(((rt0.c0)<(rt0.c1)))), (((HEX(0.3405651178044915)))>((NULL))), CAST(LIKE(rt1.c2, rt0.c3, '_') AS BLOB) FROM rt1 GROUP BY ((rt0.c4)<<(rt0.c2)) COLLATE RTRIM, (((t1.c85)) BETWEEN ((CASE rt0.c2  WHEN t1.c0 THEN rt0.c3 END)) AND ((rt0.c0))), (+ (SQLITE_SOURCE_ID())), CASE ('-1529261306' IN ())  WHEN ((rt0.c0)/(NULL)) THEN ((rt0.c4) NOT BETWEEN (rt1.c0) AND (0.5721837759759744)) ELSE ((((rt0.c4)OR(rt1.c2)))AND(rt1.c3)) END, (('') IS TRUE) COLLATE BINARY HAVING (- ((rt1.c3 IN (rt1.c1, t1.c0, t1.c0))));SELECT (((rt1.c4)) BETWEEN ((((rt0.c4)GLOB(rt0.c3)))) AND ((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END))) FROM rt1, rt0, t1 WHERE (CAST((- (x'')) AS TEXT)) LIMIT 508098107; -- 0ms;
SELECT ALL (((((rt0.c1 IN ()))AND(CAST(rt1.c1 AS INTEGER))))AND(t1.c85 COLLATE RTRIM)), NULL, (((rt0.c1 IN ())) IS FALSE) FROM rt0, t1, rt1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(HEX(DISTINCT load_extension(rt1.c1))) OVER () FROM rt1, rt0 LIMIT 1000974886; -- 0ms;
SELECT DISTINCT (((((rt1.c0, rt0.c1, rt1.c1))<>((rt1.c0, '1666550267', rt1.c4)))) BETWEEN (rt1.c2) AND (rt1.c4)), rt0.c1, ((((rt1.c1) BETWEEN (t1.c0) AND (rt0.c0))) ISNULL) FROM rt1;SELECT ALL ((((t1.c0)<<(rt1.c0)))>=(SUM(rt1.c2))) FROM rt0 WHERE (((0.548680266900971)>>(0.3093564798012587)) COLLATE RTRIM) GROUP BY (CAST(rt1.c0 AS INTEGER) IN ()), rt0.c4 COLLATE BINARY, CAST(CAST(rt0.c4 AS TEXT) AS NUMERIC) HAVING COUNT((rt1.c0 IN (rt1.c3, '-203959063')));SELECT DISTINCT COUNT(*) OVER () FROM rt1, t1, rt0; -- 0ms;
SELECT (rt0.c4 IN ()) COLLATE NOCASE FROM rt1 WHERE (LIKELIHOOD(DISTINCT 0.975072669930394 COLLATE RTRIM, 0.045225681959552455)); -- 0ms;
SELECT DISTINCT ((rt1.c2)>>(((rt0.c3)+(rt1.c3)))) FROM t1, rt1 WHERE (((('-1899213974' IN ())) BETWEEN (((NULL) NOT NULL)) AND (((0x69c8f6e1) BETWEEN (NULL) AND ('1785515657')))));SELECT DISTINCT ((SUM(rt0.c0)) NOT NULL) FROM rt0, t1 ORDER BY ((((((((((((((((rt0.c0)OR(rt1.c1)))OR(rt0.c1)))AND(t1.c85)))OR(rt1.c4)))OR(((rt1.c2)LIKE(t1.c0)))))AND((((rt0.c1, rt1.c1, rt0.c0)) NOT BETWEEN ((rt1.c4, 0.04640320158509659, '0.8609476247224757')) AND ((t1.c0, t1.c0, t1.c0))))))AND(((rt0.c2)IS NOT(rt0.c3)))))AND(CAST(t1.c85 AS BLOB)))  NULLS LAST;SELECT ALL (((- (rt1.c0)))=(LIKELY(rt0.c1))) FROM t1 WHERE ((((('' IN ()), x'' COLLATE BINARY, ((((3.57896818E8)OR(0.5210542869499033)))OR(NULL))))<=((LIKELIHOOD(NULL, 0.13198211800500448), (('') BETWEEN (0.2291982233692781) AND (x'ab96af96')), ('' IN ())))));SELECT ALL ((((((rt1.c2)OR(x'')))AND(NULL))) NOTNULL) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((+ (rt1.c4)) IN ()) FROM rt1, t1, rt0 WHERE ((((CAST(0Xfffffffff66716e7 AS NUMERIC)))<(((('')<('')))))) GROUP BY (((((rt0.c0 IN ()))OR(rt0.c2 COLLATE NOCASE)))AND(0.8784829979469313 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT CAST(((t1.c0) BETWEEN (rt0.c0) AND (t1.c85)) AS NUMERIC) FROM rt1, t1, rt0 WHERE (((TRIM(DISTINCT '447560936'))>=(json_remove(x'735f', 0.7809940503554851, 0.8762447921437557, 0.8762447921437557))));SELECT DISTINCT (- ((- (rt1.c3)))) FROM rt0, t1;SELECT ALL ((t1.c0)OR(NULLIF(x'', rt1.c2))) FROM rt0, rt1, t1 WHERE ((NOT (((0.47798147961213744) NOTNULL)))); -- 0ms;
SELECT ALL TOTAL((- (rt1.c1))) FROM t1, rt1, rt0; -- 0ms;
SELECT MIN(((rt1.c4)AND('aznC~'))) FROM rt1; -- 0ms;
SELECT ALL ('''K *4>J' IN (((((rt0.c2)OR(rt1.c4)))AND(t1.c0)))), (((rt0.c3)+(t1.c0)) IN ((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((t1.c85))))), CAST(rt1.c1 COLLATE NOCASE AS INTEGER) FROM rt0, t1 WHERE (((CAST('B' AS INTEGER))LIKE((NOT ('-1141349912')))));SELECT DISTINCT SUM((((rt0.c1))<((rt0.c4)))) COLLATE BINARY, COALESCE(x'', (((rt1.c3)) NOT BETWEEN ((t1.c85)) AND ((rt0.c4)))), ROW_NUMBER() OVER () FROM t1 WHERE (((('<')) NOT BETWEEN ((0.7566628174465804)) AND ((x''))) COLLATE BINARY);SELECT ALL NTILE(((ABS(rt0.c0))||(t1.c85))) OVER (), (((((((((((rt1.c2, rt0.c2, rt1.c0)) BETWEEN ((rt0.c0, t1.c85, t1.c0)) AND ((x'', t1.c0, rt1.c2))))AND(((rt0.c2)<=(rt1.c3)))))OR(COUNT(rt0.c2))))AND(((x'')IS(rt1.c4)))))AND(rt1.c4)), CASE WHEN rt0.c4 THEN ('vᛧLdi㳨' IN (rt0.c0)) WHEN ((rt1.c3)&(-2.075746002E9)) THEN ((t1.c85) ISNULL) WHEN (- (rt1.c3)) THEN NULLIF(DISTINCT rt1.c4, rt0.c4) END FROM rt1, rt0, t1 WHERE (((LIKELIHOOD(NULL, 0.659033579251575)) IS TRUE));SELECT ((rt1.c3 COLLATE NOCASE)/(((0.85421896846639) IS FALSE))) FROM t1 WHERE (CAST((((((((('-1565707973')OR(-1e500)))AND(x'dfff')))OR(0.8762447921437557)))AND(x'')) AS INTEGER)) ORDER BY CASE ((rt1.c1)GLOB(rt1.c1))  WHEN rt0.c3 COLLATE BINARY THEN (+ (rt0.c4)) END DESC  NULLS FIRST;SELECT DISTINCT CASE WHEN -961723737 THEN TOTAL(t1.c0) ELSE CAST(rt0.c2 AS BLOB) END FROM rt1, t1, rt0; -- 0ms;
SELECT ALL ((((((rt0.c1)*(rt0.c0)))OR(((x'')+(rt0.c1)))))OR(x'de725b57')), LAG(((TYPEOF(DISTINCT t1.c85))OR(CASE WHEN 0.5860320094707415 THEN t1.c0 END)), CAST(((t1.c85)<=(rt1.c2)) AS REAL), x'ee3b') OVER (), ((((rt0.c2)OR(rt0.c1))) ISNULL) FROM rt1, t1 ORDER BY ((rt1.c3 IN ()) IN ()) DESC  NULLS FIRST;SELECT TRIM(((rt0.c2)AND(rt0.c1)), MAX(rt0.c0)) FROM t1, rt0 WHERE (((((((((CASE '-1861334170'  WHEN 0.3519440008629674 THEN 0x635589fb ELSE '퀱*+6gi9t' END)AND((NOT (0.24430867226105346)))))AND(CASE WHEN '-1200711042' THEN x'' END)))AND('-203959063' COLLATE BINARY)))AND(CASE WHEN '-635103532' THEN NULL WHEN x'' THEN '-1418959463' WHEN 0.628312325625814 THEN '''o|% C' ELSE ',zYfV*' END))); -- 0ms;
SELECT ((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))<(((((0.9934398918859403)AND(rt0.c3)))OR(rt0.c1)))), ((0.0680501236440828) BETWEEN (CAST(rt1.c4 AS TEXT)) AND (CAST(rt0.c3 AS REAL))), (NOT (((rt0.c0)>>(t1.c85)))) FROM t1;SELECT DISTINCT CASE WHEN (rt1.c2 IN ()) THEN ((((rt1.c4)AND(rt1.c1)))OR(rt1.c3)) WHEN ((rt0.c1)>(rt1.c4)) THEN CASE rt0.c3  WHEN rt1.c4 THEN rt0.c1 END WHEN COUNT(rt0.c1) THEN CAST(rt0.c0 AS REAL) END, COUNT(TYPEOF(rt1.c0)) FILTER(WHERE rt0.c0) OVER ( RANGE  UNBOUNDED PRECEDING), ((((rt0.c2) IS TRUE)) NOT BETWEEN (rt1.c4) AND (((rt1.c1) NOT NULL))) FROM rt0;SELECT ALL ((((rt0.c3)AND(t1.c85)))AND(t1.c85)) COLLATE RTRIM FROM rt0 WHERE ((('''k *4>J' COLLATE RTRIM)+((('233121668') IS FALSE))));SELECT ((rt0.c4)IS(t1.c85)) COLLATE RTRIM, CASE rt0.c4  WHEN (- (rt0.c2)) THEN NULL ELSE AVG(rt0.c0) END, (((rt0.c1)) BETWEEN ((rt0.c4)) AND (((((rt0.c2))>=((rt0.c0)))))) FROM rt0 WHERE ('1984861835');SELECT rt0.c4, ((((t1.c85)<<(rt1.c3))) NOT BETWEEN ((rt1.c4 IN ())) AND (CAST(NULL AS TEXT))), PERCENT_RANK() OVER () FROM rt0 WHERE (((((x'') NOT NULL)) NOT BETWEEN (CASE WHEN '-1320393740' THEN '1880716905' ELSE NULL END) AND (((0X2a4bf861)|(x''))))) GROUP BY (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()), DATETIME((~ (rt0.c0)), CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c2 END, rt1.c3), ((((rt0.c3)>>(rt0.c0)))%(((NULL)<<(rt0.c4)))), (((0xffffffffde389ecf IN ())) BETWEEN (((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c0))) AND (((rt0.c3) BETWEEN (rt1.c2) AND (t1.c0)))), ((IFNULL(t1.c85, rt1.c2)) BETWEEN (((t1.c0) NOTNULL)) AND (((((rt0.c1)OR(rt1.c1)))AND(t1.c0))));SELECT ALL '', ((CASE WHEN rt0.c3 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN ((NOT (rt1.c2))) AND (CAST(rt1.c1 AS TEXT))), ((CASE WHEN '-191103125' THEN rt0.c3 WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c4 ELSE rt0.c0 END)OR((((t1.c85, rt1.c0, rt1.c4))>=((rt1.c4, t1.c85, rt0.c2))))) FROM t1, rt1 NOT INDEXED, rt0 GROUP BY ((((rt1.c3 IN (x''))))==((rt1.c1))) HAVING (((rt1.c4)) NOT BETWEEN ((((rt1.c3)/(rt0.c0)))) AND ((((t1.c0)GLOB(rt0.c0))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt1.c1 IN (rt0.c3))) FROM rt0, rt1, t1; -- 0ms;
SELECT DISTINCT (((rt1.c2, rt0.c1, 0.49346881947609367)) NOT BETWEEN ((((t1.c0) NOTNULL), ((('m6'))<=((NULL))), COUNT(*))) AND ((rt0.c4, (233121668 IN ()), ((0Xffffffffd8f583d3) BETWEEN (rt0.c0) AND (rt0.c4))))) FROM rt0;SELECT (json_remove(rt1.c4, rt1.c3) IN ()) FROM t1, rt0 GROUP BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE), CAST(CAST(rt1.c2 AS NUMERIC) AS REAL), (- (((rt0.c4)||(rt0.c3))));SELECT DISTINCT LAG((+ ((~ (rt1.c2)))), CAST(((((((((x'')AND(rt0.c4)))OR(rt1.c2)))AND(rt0.c3)))OR(rt1.c2)) AS REAL), TYPEOF(((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt1.c3)))) OVER ( ORDER BY 0.2004981019952825 COLLATE BINARY RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW), ((((rt1.c4) BETWEEN (rt0.c3) AND (rt0.c0)))/(((((rt1.c4)OR(rt0.c2)))OR(0.6779347844492636)))), (+ ((((rt0.c4))<=((rt0.c2))))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT TOTAL(((0x5cd9fdee)<(rt1.c3)) COLLATE RTRIM) OVER () FROM rt1 LIMIT 508098107 OFFSET 839438859; -- 1ms;
SELECT (((((rt0.c4 IN (t1.c0)))AND(json_remove(rt1.c2, rt1.c2))))OR(SUM(rt1.c3))) FROM rt0, rt1, t1 WHERE (TYPEOF(DISTINCT LAST_INSERT_ROWID())) ORDER BY (((((-8.41842348E8)|(rt0.c1)), ((rt0.c0) BETWEEN (rt1.c0) AND (t1.c85)), (NOT (rt1.c2)), (+ (rt0.c4)), (- (rt1.c4))))>=((CAST(rt1.c0 AS REAL), ((t1.c85) BETWEEN (t1.c85) AND (t1.c85)), (((rt0.c1)) BETWEEN ((t1.c0)) AND ((rt0.c0))), ((rt0.c1)==('O[')), CASE WHEN rt1.c2 THEN rt0.c0 END)))  NULLS LAST, (((rt0.c3, rt1.c2, t1.c85)) BETWEEN ((((rt0.c3)+(rt1.c4)), rt1.c2, LIKELIHOOD(DISTINCT t1.c0, 0.8001055575937559))) AND ((CAST(t1.c0 AS REAL), ((rt1.c0)AND(rt1.c0)), rt0.c3 COLLATE BINARY)))  NULLS LAST, (CASE rt0.c1  WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c3 END IN ()) ASC; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)AND(rt1.c4)))AND(rt0.c1)))AND(((t1.c0) NOT NULL))) FROM rt0;SELECT DISTINCT LEAD(0.18955386208141722, 0.3976242474963557, ((0.03262466156900512) NOT NULL)) OVER () FROM rt0, t1 WHERE (((x'705f')OR(((((x'')OR(0.5931382690009764)))OR(NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c0)-(rt1.c1)) THEN ((rt1.c1) NOT NULL) WHEN ((rt1.c0) ISNULL) THEN rt1.c1 WHEN rt0.c3 COLLATE BINARY THEN ((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt1.c2)) ELSE UPPER(t1.c0) END FROM rt1;SELECT (rt1.c4 IN ()) COLLATE BINARY, (((((rt0.c2))<((rt1.c4)))) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (COUNT(rt0.c0))), t1.c85 FROM rt0, t1, rt1; -- 0ms;
SELECT LEAD((~ (((rt1.c3) IS TRUE))), ((CASE rt1.c2  WHEN rt0.c4 THEN -1117353173 ELSE rt0.c3 END)%(((rt0.c0)!=(rt1.c4)))), SQLITE_SOURCE_ID()) OVER (), ((LIKELY(rt0.c4))<=(((((((((t1.c0)AND(rt0.c3)))OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c2)))), '1304586787' FROM rt1, rt0 WHERE (NULLIF(DISTINCT 0.8190655718819693 COLLATE BINARY, 0Xffffffff881ecfbc COLLATE BINARY));SELECT DENSE_RANK() OVER () FROM t1, rt0; -- 0ms;
SELECT DISTINCT ((((t1.c85)>=(rt1.c3))) BETWEEN ((NOT (rt1.c4))) AND (CAST(rt0.c1 AS TEXT))) FROM rt1, t1, rt0 LIMIT -1637417038 OFFSET -1141349912; -- 0ms;
SELECT AVG(((rt0.c1)<(rt0.c2))) FROM t1, rt1;SELECT ((((rt1.c2) BETWEEN (t1.c85) AND (rt1.c1)))+(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)))) FROM rt1, rt0;SELECT MAX(((t1.c85)AND(rt1.c2))) FROM rt1;SELECT '1003099708' FROM rt0, t1 WHERE (((((x'7913')<<(1809786649))) IS TRUE)); -- 0ms;
SELECT ALL CASE ((((rt1.c1)OR(t1.c85)))OR(rt0.c0))  WHEN ((((((((t1.c0)OR(rt0.c0)))AND(rt1.c1)))AND('sv樣,t')))AND(rt1.c3)) THEN (- (rt1.c1)) WHEN CAST(t1.c85 AS TEXT) THEN x'' WHEN UPPER(DISTINCT rt0.c4) THEN ((((rt0.c1)AND(rt0.c3)))OR(t1.c0)) ELSE rt1.c3 END FROM t1, rt0, rt1 ORDER BY CAST((rt1.c3 IN ()) AS TEXT) DESC  NULLS FIRST; -- 6ms;
SELECT CAST(SQLITE_SOURCE_ID() AS BLOB) FROM t1 WHERE (((((NULL)OR(x'')))OR(NULL)) COLLATE RTRIM) GROUP BY (~ ((+ (rt0.c1))));SELECT ALL TRIM(DISTINCT NULL COLLATE RTRIM), COUNT(*) OVER ( ORDER BY ((rt0.c2 COLLATE NOCASE)OR(IFNULL(DISTINCT rt0.c1, rt1.c0)))  NULLS FIRST), (((0.4103390302818317 IN ()))>(t1.c85)) FROM t1 WHERE (CAST((+ (0xffffffff8446a12e)) AS NUMERIC));SELECT DISTINCT (((- (rt0.c1))) BETWEEN ((NOT (1.452524977E9))) AND (((rt1.c1) BETWEEN (rt0.c3) AND (rt1.c0)))) FROM rt1, t1;SELECT CAST(rt0.c3 COLLATE RTRIM AS BLOB) FROM rt0 WHERE ((('-1418959463')&((+ ('-1899213974'))))); -- 1ms;
SELECT DISTINCT ((((rt1.c0)&(rt0.c0))) BETWEEN (rt0.c2) AND (((((rt0.c2)AND(rt0.c4)))AND(rt1.c4)))) FROM t1, rt1;SELECT DISTINCT highlight(TRIM(DISTINCT rt1.c4), (((rt0.c2, 0.6102545005196556, rt1.c0))>((rt1.c2, rt1.c1, x''))), ((rt1.c1) BETWEEN (t1.c85) AND (rt1.c2)), ((rt0.c3) NOT BETWEEN (t1.c0) AND (rt0.c3))) FROM rt0, t1 WHERE ('1591439304') GROUP BY CAST(((((((((rt1.c0)AND(t1.c0)))OR(x'')))OR(rt0.c1)))AND(rt0.c3)) AS TEXT), CAST(((rt0.c0)IS(rt1.c1)) AS REAL), ((((rt1.c0) IS FALSE))LIKE(t1.c0));SELECT DISTINCT (((((rt1.c4) NOTNULL), CASE rt1.c3  WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c4 END, CAST(rt0.c4 AS REAL)))<=((CAST(rt1.c3 AS INTEGER), ((rt1.c1)/(rt0.c1)), ((((rt0.c0)OR(rt0.c3)))AND(t1.c0))))) FROM rt0 NATURAL JOIN rt1 LIMIT 1760165077;SELECT (((rt1.c3 COLLATE BINARY))>(((((rt1.c3))==((rt1.c0)))))), ((0.0680501236440828)-(x'')), AVG(((rt0.c1)&(rt1.c3)) COLLATE RTRIM) OVER () FROM rt0;SELECT COALESCE(DISTINCT (~ (t1.c0)), '1663628622'), ((rt1.c0 COLLATE RTRIM) IS TRUE), NULL FROM t1 WHERE ((((((x'')<=(-860332395))))=((((NULL) BETWEEN (NULL) AND (NULL))))));SELECT DISTINCT LAST_VALUE(((COALESCE(rt1.c3, rt0.c0, x'', rt1.c3))IS NOT((~ (rt1.c2))))) OVER () FROM rt0 INDEXED BY i32, rt1 WHERE (NULL) GROUP BY CASE WHEN CAST(t1.c0 AS NUMERIC) THEN ((rt1.c3)|(rt1.c0)) WHEN (- (rt1.c2)) THEN (~ (rt1.c3)) WHEN ((((rt0.c1)OR(NULL)))OR(rt0.c4)) THEN ((rt0.c1)LIKE(rt0.c0)) END;SELECT DISTINCT AVG(t1.c85 COLLATE BINARY) FILTER(WHERE CAST(((rt1.c3)<<(rt1.c1)) AS INTEGER)) OVER () FROM rt1;SELECT DISTINCT t1.c85, (((((t1.c0)<<(rt0.c2))))<=((rt0.c1 COLLATE NOCASE))), ((CAST(rt0.c0 AS TEXT))&(CASE NULL  WHEN rt0.c3 THEN '-1684642318' ELSE NULL END)) FROM rt0, rt1;SELECT DISTINCT ((rt0.c3)IS NOT(rt1.c4)) COLLATE RTRIM, (((('_i')AND(CAST(rt0.c3 AS INTEGER))))OR((~ (t1.c85)))), (+ (x'9e52')) FROM rt0, t1, rt1 WHERE (CAST(CAST(0.8568313088647256 AS BLOB) AS BLOB)) LIMIT -1913218496 OFFSET -1056986744; -- 0ms;
SELECT DISTINCT 0x5e8cd31a FROM rt1 WHERE ((NOT (CAST('0.5005102322436354' AS BLOB)))) LIMIT 1930995622 OFFSET -376471975; -- 0ms;
SELECT DISTINCT ((((rt0.c3)/(rt0.c0))) IS TRUE), ((rt1.c3 COLLATE BINARY)LIKE((rt0.c0 IN ()))), rt1.c4 FROM rt0, rt1; -- 0ms;
SELECT (((t1.c85 IN ()))<=(rt1.c4 COLLATE RTRIM)) FROM rt0, rt1, t1 LIMIT -1227153873; -- 0ms;
SELECT DISTINCT CASE ((t1.c0) BETWEEN ('-1637417038') AND (rt0.c1))  WHEN SUM(rt1.c2) THEN rt0.c2 ELSE (rt0.c4 IN (rt1.c1, rt0.c4)) END, (((rt1.c0)>=(rt1.c2)) IN ()), ((CASE WHEN rt1.c3 THEN '' END) ISNULL) FROM t1, rt1 NOT INDEXED, rt0 WHERE (CAST(0X1c753fea AS TEXT)); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c1)-(rt0.c0)))OR(NULL)))AND((((rt0.c0))<=((rt1.c4))))))OR(CAST(rt1.c0 AS NUMERIC))))AND(0.3623973702542591)) FROM t1, rt0 WHERE ((+ (((NULL)OR(x'79d00777'))))) ORDER BY ((t1.c0 COLLATE BINARY)/(((((((((rt0.c3)OR(rt0.c1)))AND(0.5210542869499033)))AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST;SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c3)))=(((((rt0.c3)AND(rt0.c3)))AND(rt1.c1)))), (((rt0.c4)) NOT BETWEEN ((LIKELIHOOD(rt1.c1, 0.2489485557858504))) AND ((CASE WHEN rt0.c3 THEN '709621857' WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c4 ELSE rt1.c3 END))), (((rt1.c0, rt0.c1, rt0.c2, rt1.c0, rt1.c2)) BETWEEN (('137708256', ((((rt1.c0)AND(t1.c0)))OR(rt1.c1)), ((rt1.c3)LIKE(rt1.c0)), rt0.c4, (((rt0.c2))!=((rt1.c1))))) AND ((((((rt0.c3)AND(t1.c0)))AND(rt1.c2)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)), ',橓,9', MIN(rt0.c2), (rt1.c4 IN ())))) FROM rt1;SELECT rt0.c3 FROM rt0, rt1 INDEXED BY i76, t1;SELECT DISTINCT (((((rt0.c2))<=(('z-MdL'))))AND(x'')), ((((rt1.c3) NOT BETWEEN (x'') AND (rt0.c2)))AND(CASE rt1.c0  WHEN t1.c0 THEN t1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c0 END)), CAST(CASE rt1.c1  WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER) FROM t1, rt0 WHERE (((NULL)AND(NULL)) COLLATE RTRIM);SELECT ALL ((CASE t1.c0  WHEN rt1.c3 THEN rt0.c4 END)AND(x'')) FROM rt1, rt0 WHERE (CAST((('-1102196687') NOT NULL) AS REAL));SELECT AVG(((rt0.c3) BETWEEN (rt0.c3) AND (NULL))), CUME_DIST() OVER (), ((rt1.c2 COLLATE BINARY)IS((- (rt1.c3)))) FROM t1, rt1, rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(t1.c0) OVER ( PARTITION BY (((((((((rt0.c2 IN ()))AND(t1.c0 COLLATE RTRIM)))OR(NULLIF(rt0.c4, t1.c0))))AND(NULL)))AND('oXX.zQk-')), (((- (rt0.c1)))==((((rt1.c4))==((rt0.c4)))))) FROM rt0, t1;SELECT DISTINCT ((CAST(rt1.c1 AS REAL)) ISNULL) FROM t1 WHERE ((NOT ('%R')));SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt1.c2 END) IS TRUE) FROM rt1 ORDER BY LIKELY(0.11013242001472812)  NULLS LAST;SELECT ALL TRIM(DISTINCT ((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c4)), (rt0.c4 IN ())) FROM rt1;SELECT DISTINCT ((0.5393418883189754) NOT NULL) FROM t1, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c3)GLOB(t1.c85))) BETWEEN ((rt1.c0 IN ())) AND (NULL)) FROM rt0 WHERE (((NULL) BETWEEN (7.09621857E8) AND (NULL)) COLLATE BINARY);SELECT DISTINCT (('') IS TRUE), 'w', ((((rt1.c1)*(rt0.c2)))GLOB(SUM(rt1.c2))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (CASE rt0.c3  WHEN rt0.c2 THEN t1.c85 END IN ()) FROM rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (GROUP_CONCAT('IR32') IN ()) FROM rt0, rt1, t1 WHERE ((NOT (x'')) COLLATE BINARY); -- 0ms;
SELECT ALL CAST(((rt1.c0)=(rt0.c1)) AS INTEGER) FROM t1, rt0, rt1 WHERE ((((((((((((((('-191103125')OR('0.628312325625814')))AND('0.971265836619045')))AND('1304586787')))OR(x'd296')))OR(NULL)))AND(-1588721213))) NOTNULL)); -- 0ms;
SELECT ((HEX(rt1.c2)) BETWEEN (((t1.c85)IS NOT(rt1.c4))) AND (((rt1.c1) NOT NULL))) FROM rt1, t1, rt0; -- 2ms;
SELECT DISTINCT ((((rt0.c2) BETWEEN (x'') AND (rt0.c1)))<>((((t1.c85)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) FROM t1 WHERE (((0.8166006196384582)+(0.6900127371807055)) COLLATE NOCASE);SELECT ALL CAST(CAST(rt1.c0 AS REAL) AS REAL) FROM rt1, rt0, t1 ORDER BY TRIM(((rt1.c0)>>(x'')), ((rt0.c2) NOTNULL)) DESC  NULLS LAST, rt1.c4; -- 0ms;
SELECT AVG('ᙶk㓫M') COLLATE RTRIM, ((MIN(rt0.c4)) IS TRUE), (~ (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt1, t1 WHERE ((('328\rEvz' COLLATE RTRIM) IS FALSE));SELECT DISTINCT (NOT (CAST(rt1.c0 AS REAL))) FROM t1, rt0 GROUP BY CAST(((rt1.c3) NOT NULL) AS NUMERIC);SELECT DISTINCT CASE CAST(rt1.c1 AS TEXT)  WHEN (- (rt0.c3)) THEN (rt1.c2 IN (rt0.c4)) WHEN CAST(t1.c0 AS TEXT) THEN PRINTF(x'') WHEN ((rt0.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN rt1.c3 ELSE ((((rt1.c2)OR(rt0.c4)))OR(rt1.c1)) END FROM rt1 WHERE (CAST(CASE x'21e7'  WHEN 0X4136b653 THEN 137708256 END AS TEXT));SELECT (((((rt0.c2 IN ()))AND(((rt0.c3)OR(rt1.c2)))))AND((NOT (rt1.c3)))) FROM rt0, rt1, t1 WHERE (0.3882944000923263); -- 0ms;
SELECT ALL (((rt0.c1, rt1.c1, rt1.c4))>((t1.c0, rt0.c4, rt0.c0))) COLLATE BINARY COLLATE NOCASE, ((CASE rt1.c2  WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END)>=((rt1.c2 IN ()))), (((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))||((- ('-395892309')))) FROM rt0, rt1, t1 WHERE (x''); -- 0ms;
SELECT ALL (((+ (0.36417271197665013)))/(COALESCE(t1.c0, rt0.c1))), GROUP_CONCAT('1e500') OVER (), SUM((rt1.c1 IN (t1.c85))), rt0.c1, (((~ (t1.c0))) IS FALSE) FROM rt0, t1, rt1; -- 0ms;
SELECT DISTINCT (~ (((rt1.c3) IS TRUE))), (((((((((rt1.c3 IN ()))OR(((rt1.c0)>=(t1.c0)))))AND(((rt1.c4)AND(rt1.c4)))))OR('-1684642318')))OR((((t1.c0, rt1.c0, x'6057')) BETWEEN ((rt1.c1, '1094104659', rt1.c4)) AND ((rt0.c1, rt1.c0, rt0.c0))))), ((t1.c85 COLLATE BINARY)<>(rt0.c4)) FROM rt0;SELECT DISTINCT CASE WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (t1.c85)) THEN CAST(rt0.c1 AS REAL) END, LAST_VALUE('') OVER (), t1.c85 FROM t1 WHERE (((('u%T}D&J*⣽'))<=((SQLITE_COMPILEOPTION_GET('OM')))));SELECT DISTINCT ((COUNT(*))<((NOT (rt0.c4)))), 'qoY t̄X', ((rt1.c3) NOTNULL) COLLATE NOCASE FROM t1, rt1;SELECT CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c85)) THEN rt0.c2 ELSE CASE WHEN rt0.c2 THEN rt1.c1 END END FROM rt0, rt1 LIMIT 1772458834 OFFSET -254342362;SELECT ALL (((rt0.c0 IN ()))<((rt0.c1 IN ()))) FROM rt1, t1; -- 0ms;
SELECT DISTINCT CAST(rt1.c0 COLLATE RTRIM AS REAL), SQLITE_VERSION(), (- ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0))))) FROM rt1, t1;SELECT DISTINCT (((rt0.c2)IS(rt0.c2)) IN (CAST(rt1.c1 AS TEXT))) FROM t1;SELECT DISTINCT AVG(((rt0.c3)/(rt1.c0))) FROM t1, rt0, rt1 WHERE ((LOWER(NULL) IN ())); -- 0ms;
SELECT CAST(UNLIKELY(t1.c0) AS INTEGER), (- (CAST(t1.c0 AS INTEGER))), SUM((rt0.c1 IN (rt0.c4))) FROM rt0, t1 WHERE (JULIANDAY(((NULL)-(NULL)), ((0.0680501236440828)%('0.8166006196384582')), ((0.06332616717702477)&(0.805663927758642)))); -- 0ms;
SELECT DISTINCT x'' FROM rt1, t1, rt0 WHERE (CAST(0.1405117823680162 COLLATE BINARY AS INTEGER)) ORDER BY (~ (CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST, (+ (CASE rt0.c1  WHEN rt1.c3 THEN x'a1a7' WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c4 END))  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt0.c1)>(rt1.c3)))GLOB((~ (NULL)))) FROM t1, rt0 WHERE ((((CAST(x'af38ad95' AS NUMERIC)))<>(('0.26916286451170535'))));SELECT DISTINCT (+ ((- (rt1.c0)))) FROM rt0, rt1; -- 0ms;
SELECT SUM(((rt0.c2) IS TRUE)) OVER () FROM t1, rt0; -- 0ms;
SELECT ((NOT (rt0.c0)) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT AVG(NULL) FROM t1, rt0, rt1 WHERE (((CASE 0.20397499609367264  WHEN '1708288595' THEN '0.1915580426967356' END)AND((((0.12221851721637356))<((x'')))))) ORDER BY (+ (((rt0.c4)-(rt0.c2)))); -- 0ms;
SELECT (NOT (rt0.c3)) COLLATE NOCASE FROM rt0, t1 ORDER BY (~ (((rt1.c1)!=(rt1.c0))))  NULLS LAST;SELECT ALL (((((rt0.c4)IS(rt0.c2))))==(((+ (rt0.c1))))) FROM t1, rt0 WHERE ((NOT (((0.05691769094436072) NOT BETWEEN (x'c3c6') AND (0.12332901598836388))))); -- 0ms;
SELECT ALL rt0.c1 FROM t1, rt1 WHERE (((CAST(x'' AS TEXT))GLOB(((x'28d0') NOT NULL))));SELECT DISTINCT ((UPPER(DISTINCT rt0.c2)) NOT BETWEEN (GROUP_CONCAT(rt1.c2)) AND (((rt1.c2)OR(rt1.c1)))) FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT LAG(NULL, ((((rt0.c1 COLLATE RTRIM)OR(rt1.c2)))OR(((((rt1.c2)OR(rt0.c2)))AND(t1.c85)))), (((t1.c0)) BETWEEN ((STRFTIME(0X668129cf, rt0.c3, rt0.c2, rt0.c4, t1.c0))) AND ((CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c4 END)))) OVER () FROM rt1, rt0, t1; -- 0ms;
SELECT ALL CASE (((rt1.c4, rt1.c4, t1.c85))<((rt0.c3, rt1.c4, rt0.c3)))  WHEN ((rt1.c2) BETWEEN (rt1.c3) AND (NULL)) THEN CAST(rt0.c4 AS REAL) WHEN ((((t1.c0)AND(rt1.c2)))OR(rt0.c4)) THEN ((rt0.c1)<(rt1.c1)) WHEN ((('2089678991', rt1.c3, rt0.c3))!=((rt0.c4, rt1.c2, t1.c85))) THEN MIN(rt1.c0) ELSE (rt1.c0 IN (t1.c85, rt0.c2)) END FROM rt0, rt1 WHERE (((NULL) IS TRUE) COLLATE BINARY) LIMIT -1723737388;SELECT DISTINCT ((0.6630566457351825) BETWEEN (ABS(t1.c85)) AND (((t1.c85)&(rt1.c2)))) FROM rt1 WHERE ((((('')>(0.5518000889569733))) NOTNULL)) ORDER BY (((NOT (rt1.c2)))+(CASE t1.c85  WHEN t1.c85 THEN rt0.c1 ELSE t1.c0 END))  NULLS FIRST, ((t1.c85) IS TRUE) COLLATE BINARY ASC  NULLS LAST;SELECT MAX(((rt1.c4)==(rt0.c0)) COLLATE NOCASE), MIN(CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c4 THEN 0X0 WHEN rt1.c0 THEN NULL WHEN t1.c0 THEN rt1.c3 END), (((~ (t1.c0))) NOTNULL) FROM rt0 LIMIT 367655838;SELECT DISTINCT (rt0.c3 COLLATE NOCASE IN ()), (((rt0.c4, rt1.c1, rt1.c4, rt0.c0, rt1.c3)) NOT BETWEEN ((((rt1.c3)<(t1.c85)), ((rt0.c3) BETWEEN (rt1.c4) AND (rt1.c3)), 0.5261613212643336 COLLATE RTRIM, ((rt1.c3)!=(rt0.c0)), ((rt1.c1) IS TRUE))) AND (((rt1.c1 IN (t1.c85)), ((rt0.c2)IS(t1.c85)), MIN(rt0.c2), (((rt0.c1))=((t1.c85))), rt1.c4))), ((((((((((rt1.c2)OR(rt0.c1)))OR(NULL)))OR(rt1.c2)))AND(rt1.c2)))-((((rt1.c0)) BETWEEN ((rt0.c3)) AND ((rt1.c4))))) FROM t1, rt0 WHERE ((((+ (0.9916967132859926)))IS NOT(-1304200656)));SELECT PERCENT_RANK() OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM t1; -- 0ms;
SELECT t1.c85 FROM rt0 LIMIT 447560936;SELECT rt0.c3 COLLATE BINARY FROM rt1;SELECT DISTINCT COUNT((((rt1.c1))>(('-491841815')))), (((((t1.c85)IS(rt0.c2)), rt0.c3, x''))<(((NOT (rt1.c3)), json_extract(rt0.c1, rt0.c1), x'63ff'))), 0Xfffffffff0d46b29 FROM rt0, rt1;SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((rt1.c2) NOTNULL)) FROM t1, rt1, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((NULL)+(rt1.c1)))&((~ (t1.c0)))) FROM rt0, t1;SELECT ALL FIRST_VALUE(((CAST(rt1.c4 AS REAL)) NOT BETWEEN (0x75af8bf2) AND ('MrXC39蘭'))) OVER ( RANGE (((CAST(t1.c85 AS REAL), CAST(rt0.c1 AS REAL), (+ (t1.c85))))<>((CASE rt0.c4  WHEN t1.c0 THEN rt0.c1 END, rt1.c3 COLLATE NOCASE, TRIM(DISTINCT rt0.c2)))) PRECEDING EXCLUDE NO OTHERS), ((((rt1.c0)>=(rt0.c4)))&(((((t1.c85)OR(0.5047913446554589)))OR(rt0.c2)))), ((TRIM('1412942189', rt0.c1))!=(json_valid(rt1.c2))) FROM rt1, t1, rt0 WHERE (0.06760257240615997);SELECT DISTINCT ((rt0.c3)<=(rt1.c2)) COLLATE NOCASE FROM t1, rt0, rt1 WHERE (((((x'e3f6')) BETWEEN ((x'')) AND ((x'a3f6'))) IN ((-1e500 IN ())))); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) IS FALSE) FROM rt0, rt1 WHERE (((((CAST(0.6261092421106665 AS INTEGER))AND(('u(*ඁs' IN ()))))AND(CASE NULL  WHEN 0.8299223477893676 THEN 389044132 ELSE NULL END))); -- 1ms;
SELECT (((t1.c85)) NOT BETWEEN ((((rt1.c1)<=(rt0.c0)))) AND ((CAST(rt1.c1 AS NUMERIC)))) FROM rt0 WHERE ((((~ (',v'))) NOTNULL)) LIMIT -782524707 OFFSET -1432736379;SELECT ALL (((rt0.c0)*(rt0.c4)) IN ()) FROM rt0, rt1, t1; -- 0ms;
SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))) NOT BETWEEN ((((rt1.c0, t1.c0, rt1.c2, rt1.c0, t1.c85, rt0.c3, rt1.c0))<=((rt1.c0, rt0.c2, rt1.c2, rt1.c3, rt0.c2, rt1.c0, rt1.c2)))) AND (GROUP_CONCAT(rt0.c1))), (AVG(rt0.c0) IN ()), ((COALESCE(rt1.c2, rt0.c2)) BETWEEN ((('')AND(rt0.c2))) AND (CASE WHEN rt0.c2 THEN t1.c85 WHEN t1.c85 THEN rt0.c4 WHEN rt0.c3 THEN t1.c0 ELSE t1.c0 END)) FROM t1, rt0, rt1 INDEXED BY i76;SELECT DISTINCT '' FROM t1 WHERE ((((('')IS(NULL))) NOT NULL)); -- 0ms;
SELECT CAST(CAST(t1.c0 AS REAL) AS INTEGER) FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT 0Xffffffffa14e09c3 FROM rt1 WHERE (((1634549176 COLLATE BINARY) NOTNULL)) ORDER BY (((((rt0.c2))=((rt1.c3))))-(json_object(t1.c85, rt1.c3))) DESC  NULLS FIRST;SELECT DISTINCT LIKELY(NULL) FROM rt1, rt0, t1 WHERE (((x'b74f' COLLATE NOCASE) BETWEEN (((NULL) IS FALSE)) AND ((0.0656330242815909 IN ())))) GROUP BY ((rt0.c4 COLLATE BINARY) BETWEEN (rt0.c2) AND (((rt1.c2)<<(rt1.c3)))) HAVING ((((rt1.c3)AND(rt0.c2)))>((rt0.c2 IN ('-491841815', rt0.c4)))); -- 0ms;
SELECT ALL RANK() OVER ( PARTITION BY '-2011246660', ((((rt1.c3)&(t1.c0)))<>(CAST(rt1.c3 AS INTEGER)))) FROM t1, rt1, rt0; -- 1ms;
SELECT DISTINCT ((((((rt1.c2)AND(t1.c85)))OR(t1.c0))) BETWEEN ((((rt1.c0)) BETWEEN ((rt0.c3)) AND (('Vqh[cz''퓩')))) AND (((t1.c0)OR(rt0.c3)))) FROM rt1 ORDER BY COALESCE('', ((rt1.c3)<=(rt0.c4)), (+ (312796050)), IFNULL(rt0.c0, rt1.c1)) DESC  NULLS LAST;SELECT DISTINCT (((rt1.c3))>(((~ (t1.c85))))) FROM rt1 WHERE (((((((((((((NULL)AND('')))OR('')))OR(((x'3f4f') BETWEEN (x'66bf') AND (0xffffffff8e45d977)))))AND((('-654998573')IS NOT('-1200711042')))))OR(((NULL) BETWEEN (0x16f3e4d3) AND ('-1304200656')))))AND(CASE WHEN x'' THEN x'' WHEN 'qoy t̄x' THEN NULL WHEN NULL THEN '' END)));SELECT CASE WHEN ABS(rt1.c3) THEN GROUP_CONCAT(rt1.c2) END FROM rt0, t1 LIMIT 22378223 OFFSET 241192468;SELECT (((rt0.c1)) NOT BETWEEN ((NULL)) AND ((NULL))) FROM rt1, rt0 NOT INDEXED, t1 INDEXED BY i97 WHERE (((((((0x6328f54e)AND(4.53457131E8)))OR('-1755305308' COLLATE BINARY)))OR(((('1951126465', 0.8117717958742124, '-1873110771'))>=((0.9945799537578301, NULL, 0.17871603633404887))))));SELECT (((rt0.c4)) NOT BETWEEN (((((rt1.c2))<(('*顟BA'))))) AND ((LIKELY(DISTINCT rt1.c3)))) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (x'775c' IN ('qx-W')), 0.7517976341335437)) LIMIT 1772458834 OFFSET -635103532;SELECT (((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c0)) IN ()) FROM rt0, rt1 WHERE ('-582650088'); -- 0ms;
SELECT ((((rt1.c1) ISNULL)) NOT NULL) FROM t1, rt0 WHERE ((((NULL)) BETWEEN (('357896818' COLLATE NOCASE)) AND ((CASE 0.9777972556953543  WHEN x'' THEN '' END)))) GROUP BY rt1.c3 HAVING ((rt1.c3) ISNULL);SELECT DISTINCT ((rt0.c3)|(((t1.c85)<=(t1.c0)))), ((((t1.c85))==((rt0.c4))) IN ()), ((CASE WHEN '-860332395' THEN t1.c85 ELSE rt0.c4 END)-((((NULL, '-1612139147', rt1.c2)) NOT BETWEEN ((0Xffffffff9f7ac503, rt0.c4, rt0.c4)) AND ((rt0.c0, rt1.c2, rt1.c1))))) FROM t1 WHERE ((((NULL)) NOT BETWEEN ((NULLIF(NULL, '-632927954'))) AND (('' COLLATE BINARY))));SELECT DISTINCT CASE WHEN NULLIF(rt1.c3, rt1.c2) THEN CASE 'J^'  WHEN t1.c0 THEN rt1.c4 ELSE rt0.c2 END END FROM rt0;SELECT ((rt0.c4) ISNULL) FROM t1, rt1;SELECT ALL ((((((rt0.c3)OR(rt0.c1)))OR(t1.c85)))<<(((rt1.c0)|(rt0.c3)))), ((((((t1.c0)>(rt1.c2)))OR(((((t1.c0)OR(t1.c0)))AND(t1.c85)))))AND(t1.c85)), ((CASE WHEN t1.c0 THEN t1.c0 END) BETWEEN (rt1.c2 COLLATE BINARY) AND (rt0.c4)), ((((CASE rt1.c2  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN NULL WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c2 END)AND((rt1.c4 IN ()))))AND(RTRIM(x''))), CAST(MIN(rt1.c3) AS NUMERIC) FROM rt1;SELECT (((TYPEOF(DISTINCT rt0.c3)))>((CAST(t1.c85 AS NUMERIC)))) FROM t1, rt1, rt0 ORDER BY CASE WHEN QUOTE(x'') THEN CAST(rt0.c3 AS TEXT) WHEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN json_array(rt0.c3, rt1.c3) WHEN CASE WHEN t1.c85 THEN rt0.c0 ELSE rt0.c2 END THEN (rt0.c2 IN ()) ELSE ((((rt1.c0)OR(rt0.c4)))OR(rt1.c4)) END; -- 0ms;
SELECT ALL ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c3 END)||((+ (rt0.c2)))) FROM t1, rt1, rt0 WHERE (((CAST('453457131' AS NUMERIC))GLOB((('궆x')LIKE('1667841464'))))); -- 0ms;
SELECT DISTINCT ((COUNT(*))LIKE(((rt0.c2)/(rt1.c2)))) FROM t1, rt1, rt0 WHERE (((((((((0.5871680071071949)OR((('-1635419820')|(x'')))))AND(((x'') NOTNULL))))OR(((0.03784476416326754)+('1557790190')))))AND(LIKELY(DISTINCT 0.14382909279046163)))); -- 0ms;
SELECT DISTINCT MIN(((rt0.c3) IS FALSE)) FROM rt0, t1 ORDER BY ((rt1.c4)>=('(9Z濈w!+R')) COLLATE RTRIM DESC  NULLS LAST;SELECT (('(9z濈w!+r')*(CAST('|f' AS TEXT))) FROM t1, rt0 WHERE (((LIKELY(DISTINCT 'qx-W')) BETWEEN ((('%B')IS NOT(x''))) AND (((NULL)>(0x4136b653))))) GROUP BY rt1.c1;SELECT GROUP_CONCAT((rt0.c2 IN ('1281155987'))) OVER ( GROUPS  CURRENT ROW) FROM rt0, rt1, t1 GROUP BY (((rt1.c4)) BETWEEN ((((rt0.c1)+(rt0.c4)))) AND ((rt0.c3 COLLATE BINARY))), 0.0780179283947654, (+ ('')) HAVING 0.7976228172738318; -- 1ms;
SELECT DISTINCT rt0.c1 FROM rt1;SELECT DENSE_RANK() OVER (), (((t1.c0)) NOT BETWEEN ((((((0.39147867658479907)OR(rt0.c1)))OR(rt0.c2)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt1.c4))))), LEAD((((((rt0.c2)) BETWEEN ((t1.c0)) AND ((rt0.c2))))<=(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))), CAST(((rt0.c1) BETWEEN (t1.c85) AND (rt0.c3)) AS INTEGER), NULLIF(DISTINCT ((rt0.c2)==(rt0.c0)), ((((((((rt0.c0)AND(rt0.c3)))AND(t1.c85)))AND(rt0.c1)))AND(rt0.c3)))) OVER () FROM rt0, t1 WHERE (((((((x'b519')AND(x'')))OR('C.<')))<=(('1829935958' IN ()))));SELECT DISTINCT NTILE(CAST(CAST(t1.c85 AS NUMERIC) AS BLOB)) OVER ( PARTITION BY CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE, ((CASE rt0.c2  WHEN 0.3704582499230127 THEN rt1.c3 WHEN rt1.c1 THEN t1.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt1.c0 END)-((+ (rt1.c2))))) FROM t1 WHERE (((x'' COLLATE RTRIM)<<(((NULL) NOTNULL))));SELECT DISTINCT rt1.c0 COLLATE NOCASE, CAST(CAST(rt1.c4 AS REAL) AS NUMERIC), NULL FROM rt1, t1 WHERE ((((NULL)) BETWEEN ((((((((((0x6a613748)OR(x'')))OR(NULL)))OR(-8.8842978E7)))AND('DEB')))) AND (((((0.2371856747301626))>((0.3275411686091856))))))) LIMIT 1254726902 OFFSET -404522651; -- 0ms;
SELECT ALL CAST(0.0656330242815909 AS NUMERIC) FROM rt0 GROUP BY CAST(t1.c0 AS INTEGER) HAVING CAST(CAST(rt0.c4 AS REAL) AS NUMERIC);SELECT CASE 425798064  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c0))) THEN ((rt0.c4)>>(rt0.c4)) END FROM t1;SELECT ALL LOWER(((((rt1.c0)AND(rt0.c1)))AND(rt1.c3))) FROM rt1, t1, rt0; -- 1ms;
SELECT ALL (NOT (x'')), TOTAL((((rt1.c4))>=((t1.c0)))) OVER (), (((('.쀿')LIKE(t1.c0)))+(((rt0.c4)IS NOT(t1.c85)))) FROM rt1, t1 ORDER BY ((((t1.c85) NOT NULL)) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c3) AND ('-88335796'))) AND ((rt0.c4 IN ()))) DESC  NULLS FIRST;SELECT ALL (((((~ (rt1.c4)))AND(rt1.c2 COLLATE BINARY)))AND((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c4))))) FROM t1, rt1 WHERE ((~ (CAST(NULL AS BLOB)))) LIMIT 305803709 OFFSET -1423072116; -- 0ms;
SELECT DISTINCT CASE WHEN CASE -1.68719723E8  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c0 WHEN t1.c0 THEN rt1.c4 END THEN ((rt1.c4)>(rt0.c1)) WHEN ((rt0.c1) IS TRUE) THEN rt0.c3 WHEN AVG(rt1.c2) THEN (NOT (rt1.c3)) ELSE ((((((((rt0.c1)OR(rt0.c1)))AND('543050579')))AND(rt1.c4)))AND(rt0.c4)) END FROM rt0 WHERE (CAST('-2075746002' AS NUMERIC));SELECT ((CASE WHEN rt0.c0 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN '0.3623973702542591' ELSE rt0.c0 END) ISNULL) FROM t1 INNER JOIN rt1 ON CASE json_extract(t1.c0, rt0.c4)  WHEN rt0.c0 THEN 0.7603335096036969 WHEN CASE WHEN rt0.c4 THEN rt0.c1 END THEN CAST(rt0.c0 AS BLOB) WHEN ABS(DISTINCT rt1.c4) THEN ((((rt0.c3)AND('-2053550433')))AND(rt1.c2)) ELSE (((rt1.c2))>=((t1.c0))) END WHERE (TOTAL_CHANGES());SELECT SQLITE_VERSION() FROM rt0 WHERE (((('' IN ()))IS NOT(x'' COLLATE BINARY))) ORDER BY (((HEX(rt1.c3), ((rt1.c4) BETWEEN (rt0.c3) AND (0.6577692849075992)), CAST(rt0.c0 AS REAL)))<((rt0.c0 COLLATE BINARY, ((rt1.c3)<<(rt0.c3)), ((t1.c85) NOT BETWEEN (rt1.c3) AND (rt0.c4))))) ASC  NULLS FIRST;SELECT ALL (~ (TIME(rt1.c1, rt1.c1, rt0.c4, t1.c85, rt0.c3, t1.c0, NULL))) FROM rt1;SELECT DISTINCT ((((rt1.c4) NOT NULL)) ISNULL) FROM t1, rt0;SELECT DISTINCT COUNT(((rt1.c2)>=(t1.c0))) FROM t1 WHERE ((((NULL))>(((~ (x'')))))) LIMIT 32462033;SELECT DISTINCT CAST(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) AS INTEGER) FROM rt0 NOT INDEXED, rt1 GROUP BY (('*(|y<qki') NOTNULL) HAVING ((CAST(rt1.c1 AS NUMERIC))<(rt1.c3 COLLATE RTRIM)); -- 0ms;
SELECT COUNT(*) FROM rt0, t1; -- 0ms;
SELECT DISTINCT NTH_VALUE(((CAST(t1.c0 AS REAL)) BETWEEN (((t1.c85) BETWEEN (t1.c85) AND (t1.c0))) AND (CAST(t1.c85 AS BLOB))), (+ (CAST(t1.c85 AS NUMERIC)))) OVER () FROM t1;SELECT DISTINCT COUNT(*) OVER () FROM rt0, t1, rt1 WHERE ((((0.49346881947609367)) NOT BETWEEN (((('-635103532')AND(0.668575787576184)))) AND ((HEX(0.8986986259150657))))); -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()), ((NULL)LIKE(rt1.c4)), 0.8274585019472246 FROM rt0;SELECT CAST(((rt0.c2)%(rt1.c4)) AS NUMERIC) FROM t1, rt0, rt1 WHERE (0.709959336075863) ORDER BY ((((CASE rt1.c4  WHEN rt0.c4 THEN rt1.c2 ELSE rt1.c4 END)AND(((rt0.c2)=(t1.c0)))))AND((((rt0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c2))))), (((+ (rt1.c1)))/((rt1.c2 IN ()))) ASC; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1 LIMIT -1117353173; -- 0ms;
SELECT DISTINCT TRIM(((((((((rt1.c3)AND(rt0.c1)))OR(rt0.c3)))AND(x'ee15')))OR(rt0.c4)), ((t1.c0)*(rt0.c2))) FROM t1;SELECT ALL PERCENT_RANK() OVER () FROM t1, rt0 WHERE (((('-1304200656' COLLATE RTRIM))==((NULL COLLATE NOCASE)))); -- 0ms;
SELECT ALL GROUP_CONCAT(((t1.c85) BETWEEN (rt1.c0) AND (rt0.c1))) OVER ( ORDER BY (((CAST(rt0.c4 AS TEXT)))>=((((rt0.c4)IS NOT(rt0.c2))))) ASC), 'dSVx-H[찕', ((rt0.c3 COLLATE NOCASE)/(((rt1.c4)!=(rt1.c4)))) FROM rt1, rt0;SELECT ALL CASE WHEN AVG(0.506897808823373) THEN ((rt1.c2)OR(rt1.c4)) ELSE CAST(x'35a3' AS REAL) END FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((((COUNT(*))AND(((rt0.c1) NOT BETWEEN (t1.c0) AND (rt1.c1)))))OR(rt0.c4 COLLATE BINARY)))OR(((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c1)))), CASE WHEN rt0.c2 COLLATE RTRIM THEN TRIM(DISTINCT rt0.c3, rt0.c2) ELSE COUNT(rt1.c1) END, (((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((CAST(rt0.c4 AS TEXT)))) FROM rt0, t1, rt1; -- 0ms;
SELECT ((LIKELIHOOD(DISTINCT rt0.c0, 0.46106415874138806)) NOT NULL), ((((((((((rt1.c0)AND(rt1.c4)))OR(rt1.c0)))OR(rt0.c1)))OR(rt0.c2)))OR((~ (rt1.c2)))), AVG(((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3))) OVER () FROM rt0, rt1, t1; -- 0ms;
SELECT (((- (rt1.c4)))<(((((rt1.c0)AND(rt0.c2)))OR(NULL)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c85 THEN rt0.c3 WHEN rt1.c3 THEN x'' WHEN rt1.c1 THEN rt1.c0 END) IS TRUE) FROM rt0;SELECT ((TYPEOF(rt0.c2))==(CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c4 ELSE t1.c0 END)) FROM t1 WHERE (((TIME('-841842348', '', 'hH', -1669717675, '', NULL, '233121668')) BETWEEN (((8.39438859E8) BETWEEN (0.3958479892916471) AND (NULL))) AND (((0.8521479238937643) ISNULL))));SELECT ALL ((((((rt1.c2)OR(t1.c0)))AND(t1.c0))) NOT NULL) FROM rt0 WHERE (((((NULL) BETWEEN (0xffffffffdbecd4a0) AND ('m6')))||((',鲹aৃk^' IN (-1117353173)))));SELECT DISTINCT ((((rt0.c0)<=(rt0.c1)))GLOB((((rt1.c1, t1.c0, rt0.c2))!=((rt0.c4, rt0.c4, x'78d8'))))) FROM t1;SELECT ALL CASE WHEN ((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c4)) THEN IFNULL(DISTINCT rt0.c0, rt1.c0) END FROM t1, rt1 WHERE (((((~ ('661954741'))))=((((x'')>(x''))))));SELECT ALL rt1.c2 FROM rt1 WHERE (((x'') BETWEEN ('-685888654') AND (NULL)) COLLATE BINARY); -- 0ms;
SELECT ALL ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt1.c3 COLLATE RTRIM) AND ((((rt1.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))))) FROM rt1, rt0, t1 WHERE (((((NULL COLLATE NOCASE)AND(CHAR(0.9818801616533815))))OR(CASE NULL  WHEN 'c≹sT' THEN NULL ELSE '0.8190655718819693' END))) LIMIT 1990647816; -- 0ms;
SELECT DISTINCT ((JULIANDAY(x'', rt0.c1, rt1.c2)) ISNULL) FROM rt0, rt1, t1 WHERE ((((-1864386152 IN ())) ISNULL)); -- 0ms;
SELECT t1.c0 FROM rt1, rt0;SELECT DISTINCT CASE WHEN UNLIKELY(t1.c0) THEN TRIM(rt1.c4) END FROM rt0;SELECT rt0.c0, ((((rt1.c2)AND(t1.c0)))<<(((rt0.c4)GLOB(rt1.c0)))), UPPER(DISTINCT ((rt0.c4)<(rt0.c4))) FROM rt0, t1 WHERE ((~ (json_patch(-744056315, '0.6630566457351825')))) ORDER BY ((t1.c85) IS FALSE) COLLATE RTRIM DESC  NULLS LAST;SELECT ALL 0.6792895066085343 FROM t1, rt0, rt1 WHERE ((((((x'' IN (0.9399343090134321)))AND((('RGJ&NVZ')<<(-1.117353173E9)))))AND(json_object(NULL, '0.3481036636878795')))) ORDER BY UNLIKELY((rt0.c3 IN ())) DESC  NULLS FIRST, CASE WHEN rt1.c1 THEN ((-1776281735) IS TRUE) ELSE rt1.c3 END ASC  NULLS FIRST, '1廇'' %x?'  NULLS FIRST; -- 0ms;
SELECT ALL COUNT(((t1.c0) NOT NULL)), rt1.c4 COLLATE BINARY, RANK() OVER (), (((- (rt1.c1))) IS TRUE), JULIANDAY(CASE rt0.c2  WHEN rt1.c2 THEN rt0.c3 ELSE t1.c85 END, 0X3c879173, ((((((((rt1.c2)OR(t1.c85)))OR('')))AND(rt0.c4)))AND(rt0.c4))) FROM rt1 NOT INDEXED, t1, rt0 WHERE (LIKE(('0.6102545005196556' IN ()), (((0x1ea2134))=(('-841842348'))), '-')) ORDER BY INSTR(rt1.c2, '-941270051') COLLATE RTRIM; -- 0ms;
SELECT ((CASE rt0.c3  WHEN rt0.c4 THEN rt1.c3 END) ISNULL) FROM rt0 WHERE (((0.445056404130574 COLLATE NOCASE) BETWEEN (CASE WHEN x'd93b' THEN 0xffffffff91f9d87f ELSE NULL END) AND ((('-1899213974') BETWEEN ('1412942189') AND (-1.899213974E9)))));SELECT DISTINCT TYPEOF((+ (rt0.c2))), ((CAST(rt1.c1 AS INTEGER)) ISNULL), ((CAST(rt0.c0 AS INTEGER))LIKE(((((((((((((rt0.c2)AND(NULL)))AND(rt1.c3)))OR(rt1.c4)))AND('')))AND(rt0.c2)))OR(rt1.c0)))) FROM rt1, rt0, t1; -- 1ms;
SELECT ALL ((TRIM(rt1.c4)) BETWEEN (GROUP_CONCAT(rt0.c2)) AND (x'')) FROM t1, rt1;SELECT DISTINCT ((((rt1.c2) NOTNULL)) NOT BETWEEN (((((t1.c85)OR(rt0.c0)))OR(rt0.c2))) AND (((NULL) IS TRUE))) FROM rt1, t1, rt0 EXCEPT SELECT (((rt0.c0 IN (rt0.c1)))||((rt0.c4 IN ()))) FROM t1 WHERE (((((x'ba34')AND(-1.602956565E9))) BETWEEN (0.916269859229847 COLLATE NOCASE) AND ('(]')));SELECT DISTINCT ((((rt0.c2) NOTNULL))-((((rt0.c2))=(('2082824121'))))) FROM t1;SELECT DISTINCT AVG((rt1.c1 IN ())) OVER ( ORDER BY ((((CAST(137708256 AS REAL))AND(((rt1.c0)&(rt1.c3)))))OR(-1275310896))) FROM rt1, rt0; -- 1ms;
SELECT ALL ((SUM(rt1.c4))>=((t1.c0 IN (rt1.c3)))) FROM rt0;SELECT DISTINCT ((((((((((rt1.c4)OR(rt0.c1)))OR(rt0.c2)))AND(209530402)))OR(rt0.c4)))=(rt1.c4)) FROM t1, rt0 WHERE (((HEX(DISTINCT 0.49287119822627845)) NOT BETWEEN ((('_xꄮH4Q') ISNULL)) AND ((NULL IN ()))));SELECT DISTINCT (COUNT(*) IN ()) FROM t1, rt1 WHERE (CAST(-654998573 COLLATE RTRIM AS REAL)); -- 1ms;
SELECT DISTINCT NTH_VALUE((NOT ('')), ((((-4.91841815E8) ISNULL)) NOT BETWEEN (NULL COLLATE NOCASE) AND (x'5da8'))) OVER () FROM rt0, t1;SELECT DISTINCT '-1304200656' FROM t1; -- 0ms;
SELECT ALL ((rt0.c3) NOT BETWEEN (COALESCE(rt0.c2, rt0.c0)) AND (((rt1.c1)>=(rt1.c1)))), (((rt0.c1 IN ()))AND(NULL)), ((~ (rt0.c0)) IN ()) FROM rt1, rt0 ORDER BY ((((rt1.c4)-(t1.c0)))>=(CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) DESC  NULLS LAST, (((rt1.c0)==(rt0.c1)) IN ()) ASC, (((((rt0.c0))<((rt1.c1)))) BETWEEN (((rt1.c1)+(rt0.c4))) AND ((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST;SELECT ALL AVG(CAST(rt1.c4 AS REAL)) FROM t1, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(t1.c0)))AND(rt0.c3)))%((rt0.c4 IN ()))) FROM rt0, rt1 WHERE (x'') GROUP BY (((rt0.c1 IN (rt0.c4))) NOT NULL);SELECT ALL (- (((t1.c85) IS FALSE))), ((IFNULL(0.6607912513767554, rt1.c2)) IS TRUE), ((0.6587180507847747)AND((((rt0.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c4))))) FROM t1, rt0, rt1 WHERE ((0.34632551704815984 COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT ((((CAST(rt1.c0 AS TEXT))AND(CASE rt1.c2  WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c2 END)))AND(((rt1.c2)AND(rt1.c0)))), ((((((((((rt0.c2) IS TRUE))AND(rt0.c2)))AND(((rt1.c2) NOTNULL))))OR((NOT (NULL)))))AND(CAST(rt1.c0 AS NUMERIC))), (- (((t1.c0)OR('0.4466190026248956')))) FROM rt1 WHERE (CAST(CAST('Yi☇B' AS NUMERIC) AS NUMERIC));SELECT ALL CAST(rt0.c1 AS BLOB) COLLATE RTRIM, (NOT (((t1.c0)==(rt0.c4)))), COUNT(AVG((+ (rt1.c4)))) FROM rt0 WHERE (CASE ((('1088309718'))==((0.34632551704815984)))  WHEN ((0xffffffffc1e0ca02) BETWEEN ('!') AND (NULL)) THEN '2146484880' COLLATE RTRIM ELSE ((NULL)IS(x'')) END);SELECT DISTINCT rt0.c1, CAST(rt1.c2 AS NUMERIC), ((((CASE WHEN t1.c0 THEN NULL ELSE rt1.c2 END)AND((~ (rt0.c3)))))AND((((rt0.c3, rt0.c0, rt0.c1))>((rt0.c2, 192787565, rt0.c0))))), ((((((t1.c85) BETWEEN (rt0.c4) AND (rt0.c3)))OR(((rt1.c0)<<(rt0.c0)))))OR(CAST(rt0.c2 AS INTEGER))), (((('-1472605117')%(rt1.c4))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0))) AND ((rt1.c3 IN (rt0.c3)))) FROM t1, rt1 WHERE (CASE WHEN CAST(' ()x' AS TEXT) THEN ((x'a7c5')<<(-0.0)) WHEN ABS(DISTINCT NULL) THEN ((0.7582434357873735)%(NULL)) WHEN ((NULL) NOT NULL) THEN (('q8*sor81')<(NULL)) ELSE ((0.4766188495752314) IS FALSE) END);SELECT (((rt1.c2 IN ('0.5860320094707415')))<(rt1.c4 COLLATE NOCASE)) FROM rt0, t1;SELECT ALL CASE ((rt1.c1)<=(rt0.c1))  WHEN ((rt0.c3) NOTNULL) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c3)||(rt1.c1)) END FROM t1, rt1, rt0 WHERE (UPPER(DISTINCT (((x'')) BETWEEN ((NULL)) AND ((',橓,9'))))) GROUP BY ((((rt0.c1)==(rt0.c3))) ISNULL); -- 0ms;
SELECT (CASE rt1.c0  WHEN rt0.c1 THEN rt1.c0 END IN ()) FROM rt0, t1 WHERE (((((0x188bd22e) IS FALSE)) BETWEEN (ABS(DISTINCT x'fddf')) AND ((((x'f5c4')) BETWEEN ((NULL)) AND (('n7%^')))))); -- 0ms;
SELECT ((((+ (rt0.c2))))>((((((rt1.c1)OR(rt1.c1)))AND(rt1.c4))))) FROM rt1, rt0, t1 WHERE ((+ ((- (2.33121668E8))))); -- 0ms;
SELECT '1809786649' FROM rt0 WHERE (HEX(-1.304200656E9) COLLATE NOCASE); -- 1ms;
SELECT PERCENT_RANK() OVER (), SUM(((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c3))), rt1.c3 FROM rt1, rt0 WHERE (COALESCE('', ((NULL)IS(NULL)))); -- 0ms;
SELECT COUNT(((((t1.c0)OR(t1.c85)))AND('-537887918'))) OVER () FROM rt0 GROUP BY ((((CAST(t1.c0 AS REAL))OR(rt1.c2)))OR(CAST(rt1.c4 AS INTEGER)));SELECT DISTINCT CASE WHEN (((rt0.c3, x'', rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c3, t1.c0, rt1.c1))) THEN UNLIKELY(rt0.c1) ELSE rt1.c4 COLLATE RTRIM END, rt0.c0, (- (COUNT(*))) FROM rt1 WHERE (NULL);SELECT DISTINCT CASE rt0.c1  WHEN CASE t1.c85  WHEN rt0.c4 THEN t1.c85 ELSE rt1.c3 END THEN -1.418959463E9 ELSE CAST(0.0684753761310517 AS INTEGER) END FROM rt0, t1;SELECT ((((((rt0.c1)AND(rt0.c0)))AND(t1.c0))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND (((rt1.c2)<=(t1.c0)))) FROM t1, rt0, rt1; -- 0ms;
SELECT DISTINCT (+ (((rt0.c0)%(rt1.c4)))), LOWER(TOTAL(rt0.c0)), ((((t1.c85)OR(rt0.c0 COLLATE NOCASE)))AND(((((t1.c0)OR(rt1.c4)))OR(rt1.c4)))) FROM t1;SELECT DISTINCT ((((rt0.c3)LIKE(rt1.c0)))<=(AVG(rt1.c0))), RANK() OVER ( RANGE (((((- (t1.c85)))AND(((rt0.c1) IS TRUE))))AND((- (rt0.c3)))) PRECEDING EXCLUDE CURRENT ROW), (rt1.c1 IN (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END)) FROM rt1;SELECT DISTINCT (~ ((rt1.c0 IN (rt1.c0, rt1.c3)))) FROM t1 WHERE (((x'' COLLATE NOCASE)!=(')鲹-vw\r' COLLATE BINARY)));SELECT DISTINCT ((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))%(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 END)) FROM rt0, t1;SELECT ALL CASE rt0.c3 COLLATE NOCASE  WHEN COUNT(*) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) END FROM rt0, rt1, t1 WHERE (CAST(((NULL) IS TRUE) AS TEXT)); -- 0ms;
SELECT ALL AVG(AVG(rt0.c0 COLLATE NOCASE)) FROM t1 RIGHT OUTER JOIN rt1 ON ((((rt0.c0)GLOB(rt1.c2)))<<((x'' IN (rt1.c1, NULL)))) WHERE (((1452524977) BETWEEN (((x'ecadcbfe')>>(-871295041))) AND (x'')));SELECT DISTINCT ((((t1.c0)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM FROM rt1, t1 WHERE (((CAST('궆x' AS TEXT))/(CASE WHEN 0.6944839352548317 THEN '508098107' ELSE '0.7358632043856739' END))); -- 0ms;
SELECT DISTINCT (- (COUNT(rt0.c1))), COUNT(CASE rt0.c1  WHEN rt0.c0 THEN rt1.c3 END) OVER (), IFNULL(DISTINCT (('1460528835') NOT BETWEEN (rt0.c2) AND (t1.c85)), ((((rt0.c4)OR(rt1.c3)))AND(rt0.c3))) FROM rt1, t1;SELECT ((rt1.c3)LIKE((- (t1.c0)))) FROM t1, rt1, rt0 WHERE (((-1324797306) NOT BETWEEN ('' COLLATE BINARY) AND (((((x'b88d')OR(NULL)))AND(NULL))))) GROUP BY ((rt0.c4 IN ()) IN ((~ (rt1.c2)))), (((((rt0.c1)AND(rt0.c4)))AND(t1.c0)) IN ()), rt0.c4; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1, rt0, t1 LIMIT -168719723 OFFSET -904196124 UNION ALL SELECT ALL rt0.c1 FROM t1, rt1;SELECT t1.c85 FROM t1; -- 0ms;
SELECT DISTINCT json_quote(rt0.c1 COLLATE BINARY) FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT ((rt1.c4)*(rt0.c3)) COLLATE NOCASE FROM t1, rt1 WHERE ('1984861835') GROUP BY ((IFNULL(rt0.c3, t1.c0)) NOT NULL) HAVING TYPEOF(((rt0.c0) ISNULL));SELECT DISTINCT ((rt0.c0) BETWEEN (1.930995622E9 COLLATE BINARY) AND (((t1.c0)&(rt1.c2)))) FROM rt0, t1, rt1 WHERE (CASE WHEN ((NULL) NOT BETWEEN ('123045421') AND ('-1117353173')) THEN ((508832773) NOTNULL) WHEN CASE WHEN NULL THEN '-371232719' ELSE 0.14441735622266472 END THEN (((-1.227153873E9)) NOT BETWEEN ((0.5153253601047638)) AND ((0.8535172657393346))) WHEN (('1649831497') NOTNULL) THEN 'h' COLLATE NOCASE ELSE 'W' END) LIMIT -904196124; -- 0ms;
SELECT ALL ((((rt1.c1)||(rt1.c2)))%(((rt1.c0) BETWEEN (t1.c0) AND (rt1.c4)))) FROM rt0 WHERE (((((((((CAST('' AS BLOB))AND(CASE WHEN '-1056986744' THEN NULL ELSE 0.8901530222092959 END)))OR((('I03롻.M*}p') NOT BETWEEN (NULL) AND (0.40309789044693156)))))OR((NULL IN ()))))AND(((x'') NOT BETWEEN (x'') AND ('(]')))));SELECT DISTINCT ((0.11909298132393131)/(((rt1.c3)IS(rt0.c2)))) FROM rt1, rt0, t1 GROUP BY UNLIKELY(NULLIF(rt1.c0, rt1.c0)), ((rt1.c3)/(t1.c85)) COLLATE RTRIM, ((NULL)<<((rt0.c0 IN ()))) ORDER BY (- (CAST(rt1.c4 AS TEXT)))  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(CAST(t1.c0 AS REAL) AS TEXT) FROM rt1 WHERE ((((('PO*')<(NULL))) IS FALSE)) LIMIT -987500966;SELECT NULL FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2)%(((rt1.c3) BETWEEN (x'') AND (t1.c0)))) FROM rt0, t1;SELECT (- (rt0.c1)) FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c2)IS NOT(rt1.c4))), (CASE WHEN t1.c0 THEN '-990172168' WHEN rt1.c0 THEN 0.8804783639738608 WHEN rt0.c1 THEN rt1.c3 ELSE rt1.c2 END IN ()), (~ (rt0.c3)) FROM t1, rt1, rt0 WHERE ((NOT (0.9473472750994676)) COLLATE NOCASE) LIMIT -415258029 OFFSET -1227153873; -- 0ms;
SELECT DISTINCT (NOT ((- (rt0.c1)))) FROM rt0 WHERE (json((127514898 IN ()))); -- 0ms;
SELECT NTILE(CASE WHEN '-29694071' THEN rt1.c1 WHEN (NOT (rt1.c1)) THEN json_type(rt1.c2) WHEN (t1.c85 IN ()) THEN '(Uxj)䥙' END) OVER () FROM t1, rt1; -- 0ms;
SELECT ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (LIKELY(DISTINCT rt0.c1)) AND ((NOT (t1.c0)))) FROM t1, rt1, rt0; -- 0ms;
SELECT UNLIKELY(((((rt1.c0)OR(',ZYFV*')))OR(rt1.c2))), rt1.c3, ((rt1.c2 IN (rt0.c4)) IN (COUNT(t1.c85))) FROM t1 WHERE (((((x'') BETWEEN (x'') AND (0.338401285319338))) BETWEEN (((NULL) BETWEEN (x'') AND (NULL))) AND ((((0.23011522798896444))>((0.659758937704507))))));SELECT ALL ((((((((((rt0.c4) BETWEEN (rt1.c0) AND (-283160221)))OR((((t1.c0))>((rt0.c4))))))OR((~ (rt1.c0)))))AND(((rt0.c1)+(rt0.c1)))))OR(ABS(rt1.c4))), COUNT(*) OVER ( PARTITION BY (((rt0.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c0))) COLLATE RTRIM, CAST(((t1.c85) ISNULL) AS TEXT)), (~ ((rt0.c4 IN ()))) FROM rt0, rt1, t1 ORDER BY ((((rt0.c1) IS FALSE)) IS FALSE)  NULLS FIRST; -- 0ms;
SELECT ALL ((((-662021322)AND(rt1.c1 COLLATE BINARY)))AND(((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)))), LEAD((((rt1.c4 IN (rt0.c4)))<>(rt1.c4 COLLATE BINARY)), ((rt0.c2) NOT BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND ((((rt1.c1, rt1.c4, rt0.c0))>=((0.5393418883189754, rt1.c2, rt0.c1))))), CASE UPPER(rt1.c0)  WHEN 0.012415016183122685 THEN (+ (rt1.c4)) END) OVER ( ORDER BY ((((((((((rt1.c1)IS NOT(rt1.c1)))OR(rt0.c4 COLLATE BINARY)))OR(rt1.c2 COLLATE BINARY)))AND(((rt0.c1) BETWEEN (rt1.c4) AND (t1.c85)))))OR(((t1.c0) BETWEEN (NULL) AND (rt0.c4)))) ASC), '0.7603335096036969', ((((((rt0.c4)OR('So#''')))AND(t1.c0)))AND(rt0.c3 COLLATE NOCASE)), CAST(CAST(rt0.c3 AS BLOB) AS NUMERIC) FROM rt1, rt0 WHERE (CAST(CASE 0.5808118567958116  WHEN '-1868188932' THEN '-1426376398' WHEN NULL THEN NULL WHEN NULL THEN 1761983958 ELSE NULL END AS NUMERIC));SELECT DISTINCT CASE WHEN ((rt0.c4) NOT NULL) THEN t1.c0 END FROM rt1, t1 WHERE (0.7240578555605208) ORDER BY CASE WHEN ((((((((rt1.c0)AND(t1.c0)))OR(x'')))OR(rt0.c2)))OR(rt1.c1)) THEN ((((rt1.c2)OR(rt1.c4)))AND(rt1.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) END ASC  NULLS LAST, ((((t1.c85)GLOB(rt1.c2)))OR(rt1.c3));SELECT ALL ((((rt0.c3 COLLATE NOCASE)AND(((rt1.c2)GLOB('')))))AND((((rt0.c4))<((rt1.c2))))) FROM rt0, t1, rt1 LIMIT -724113082; -- 0ms;
SELECT DISTINCT (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c0))))>((AVG(rt0.c0)))) FROM rt1, t1, rt0; -- 0ms;
SELECT ((+ (rt0.c0)) IN ()), ((CAST(t1.c0 AS NUMERIC)) BETWEEN (0Xffffffffab6c6599) AND (MIN(0.3530771320823034))), CAST(CAST(rt1.c2 AS REAL) AS NUMERIC) FROM t1, rt0;SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1 WHERE (((CAST('m&t%谿%U\r' AS REAL))IS(CAST('-2070130795' AS REAL)))); -- 0ms;
SELECT DISTINCT LTRIM((t1.c0 IN ())) FROM rt1, rt0 LIMIT -910446986 OFFSET -1320393740; -- 0ms;
SELECT DISTINCT (((NOT (rt1.c4)))&(CAST(rt1.c0 AS BLOB))) FROM rt1, rt0 GROUP BY (((rt0.c2 IN (t1.c0))) NOTNULL);SELECT ALL ROW_NUMBER() OVER () FROM rt1, rt0; -- 0ms;
SELECT ALL CAST(CAST(rt1.c1 AS TEXT) AS BLOB) FROM rt0, rt1; -- 0ms;
SELECT ALL ((((((((((rt1.c2)|(rt0.c4)))OR(CASE WHEN rt0.c2 THEN t1.c85 WHEN rt1.c2 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c3 ELSE rt1.c1 END)))OR((('>5') ISNULL))))OR(rt0.c3)))AND(((t1.c85) ISNULL))) FROM rt0;SELECT DISTINCT (((((+ (rt0.c1)))AND(((rt0.c2)>=(rt1.c0)))))OR(((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt0.c2)))) FROM rt1, t1, rt0 WHERE ((((~ (0Xe99b6a4))) IS FALSE)); -- 1ms;
SELECT DISTINCT rt0.c0, ((('', rt1.c3, 'ꄮ5&]')) BETWEEN ((((rt1.c1)>>(t1.c85)), rt0.c4, (t1.c0 IN ()))) AND ((((rt0.c4)>>(rt1.c2)), 0.9421043294466902, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN 'Y&6\}/*' END))), ((CASE rt0.c3  WHEN t1.c85 THEN rt0.c3 END)>(((0.3086930257040631) NOT NULL))) FROM rt1 WHERE ((((0.07224219555847011) ISNULL) IN ()));SELECT ALL COUNT(CASE WHEN '' THEN rt0.c4 END) FROM t1, rt0, rt1 WHERE (('}k4PP橓' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT (((~ (rt0.c3)))OR('')), CAST((~ (t1.c0)) AS REAL), (((t1.c85)) BETWEEN ((rt0.c1)) AND ((((x'')<<(rt0.c3))))) FROM rt1 WHERE (((0.48761640132808093) NOT NULL) COLLATE BINARY);SELECT ALL ((((rt1.c0)%(rt0.c1)))-(rt1.c4)) FROM rt0;SELECT ((((rt0.c4) IS TRUE)) NOT NULL) FROM t1, rt0 WHERE (TYPEOF(DISTINCT ('' IN (x'', NULL)))) GROUP BY ((']')/(rt1.c4)) COLLATE RTRIM;SELECT CAST(MAX(rt0.c0) AS BLOB) FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT ((- (rt1.c1)) IN ()) FROM t1, rt0; -- 0ms;
SELECT ALL CAST((rt1.c3 IN ()) AS NUMERIC), (+ (CAST(rt1.c4 AS TEXT))), (((((t1.c0)<(rt1.c1))))>((CASE WHEN rt0.c3 THEN t1.c0 END))) FROM rt0, rt1 WHERE ((- (((NULL)/(0.08568872697176966)))));SELECT ALL 0.2896868189171533 FROM t1 ORDER BY CASE WHEN ((rt1.c3)>(x'')) THEN ((rt1.c0) IS FALSE) ELSE LOWER(DISTINCT rt0.c0) END DESC  NULLS LAST;SELECT TOTAL(((rt0.c1)=(rt0.c1))) COLLATE NOCASE FROM t1, rt1 NOT INDEXED, rt0 WHERE ((((TOTAL_CHANGES()))<((((1.429174016E9)/(x'')))))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS BLOB)) BETWEEN (rt1.c1) AND (CASE WHEN rt1.c2 THEN 0.7493270361828647 END)) FROM rt1, rt0, t1; -- 0ms;
SELECT (((rt1.c2)) BETWEEN ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt1.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt1.c0 THEN rt1.c2 ELSE x'' END))) FROM t1, rt1 WHERE ((NOT (CAST(NULL AS NUMERIC))));SELECT DISTINCT ((((json_remove(rt1.c3, t1.c0, rt0.c0, rt0.c2))OR(((t1.c85) ISNULL))))OR(CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE rt1.c1 END)), ((((((((t1.c85)AND(rt1.c0)))OR(NULL)))OR(rt0.c4 COLLATE BINARY)))AND(rt1.c2)), FIRST_VALUE(rt0.c1) OVER () FROM rt0, rt1, t1 WHERE (NULL); -- 0ms;
SELECT DISTINCT (~ (rt1.c1)) FROM t1, rt0;SELECT CAST(rt0.c3 AS BLOB) FROM rt1, rt0 WHERE (load_extension((('1LH[5GnV') NOT BETWEEN (NULL) AND (x'')))); -- 0ms;
SELECT ALL ((((CAST(rt1.c1 AS NUMERIC))OR((((rt1.c4, NULL, t1.c0))<>((x'd3cc', rt0.c1, rt0.c2))))))OR(rt1.c2)) FROM rt1, t1 WHERE ((('') ISNULL) COLLATE NOCASE);SELECT DISTINCT rt0.c0 COLLATE NOCASE FROM rt0 WHERE (((((NULL)%('J|qhIC㍻J')))&(UPPER(DISTINCT 'sW')))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((rt1.c3)>=(rt1.c1))) NOT BETWEEN (rt0.c3) AND (((((rt0.c1)AND(rt1.c2)))OR(rt1.c2))))) OVER () FROM rt0, t1, rt1 WHERE ((- (NULL))); -- 0ms;
SELECT DISTINCT CASE WHEN (~ (rt0.c0)) THEN ((t1.c85)AND(rt0.c2)) WHEN (rt0.c1 IN ()) THEN NULL WHEN ((rt0.c4)-(rt1.c0)) THEN TOTAL(2.089678991E9) END FROM t1, rt0 WHERE ((- (0.27905093820764604 COLLATE BINARY))) GROUP BY ((((((((rt0.c2)OR(t1.c0)))OR(rt1.c1)))AND(rt1.c4)))OR(rt0.c3)) COLLATE RTRIM ORDER BY ((CASE rt1.c3  WHEN rt1.c2 THEN -1.227153873E9 WHEN NULL THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c1 END)&('-2075746002'));SELECT DISTINCT (((- (NULL)))<>(((rt0.c0)||(t1.c85)))) FROM t1, rt0, rt1 NOT INDEXED WHERE ('n7%^') GROUP BY ((((rt1.c1)AND(CASE rt1.c0  WHEN -4.35440291E8 THEN rt0.c4 WHEN rt1.c0 THEN t1.c0 WHEN rt0.c0 THEN t1.c85 END)))AND(CASE WHEN rt0.c0 THEN rt0.c1 END)); -- 0ms;
SELECT ALL (((((rt0.c3)) BETWEEN ((rt1.c4)) AND ((t1.c85))))AND(((rt0.c2) NOT NULL))), ((((rt0.c0)OR((- (rt1.c0)))))OR(((rt0.c1)IS(NULL)))), CASE ((t1.c0) BETWEEN (rt1.c3) AND (rt0.c1))  WHEN ((rt0.c0)&(rt0.c0)) THEN LIKELIHOOD(rt1.c4, 0.6502471290067731) ELSE CASE rt0.c4  WHEN rt0.c4 THEN rt1.c3 END END FROM rt1, rt0 WHERE (CAST((((('')AND(x'3a4b8c5f')))AND(x'')) AS INTEGER)) LIMIT -2103980821;SELECT TOTAL(CASE WHEN rt0.c3 THEN rt0.c1 ELSE 0.8190655718819693 END) FROM t1, rt0 ORDER BY ((x'') NOTNULL) COLLATE BINARY, ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE) DESC  NULLS FIRST; -- 0ms;
SELECT (rt0.c4 IN ()) COLLATE BINARY FROM t1 WHERE (((((GLOB(NULL, NULL))AND((('1331100854')<(NULL)))))OR((- (x''))))); -- 0ms;
SELECT ALL (+ (((t1.c0) BETWEEN (x'') AND (rt0.c2)))) FROM t1, rt0 WHERE (((((0.6263904173855771)IS NOT('c')))/(ABS(DISTINCT 0xffffffff9d3ff65c)))); -- 0ms;
SELECT DISTINCT (((rt1.c0)) BETWEEN ((CAST('307107865' AS BLOB))) AND ((json_extract(rt1.c3, rt1.c1, rt1.c4, rt0.c3)))) FROM rt1 INDEXED BY i32, t1, rt0 WHERE (-560570403);SELECT ((((rt1.c3)>>(rt1.c0)))IS(CASE WHEN rt0.c0 THEN rt1.c1 END)), (((((t1.c85)) BETWEEN ((rt1.c3)) AND ((rt0.c0))))IS NOT(((rt1.c2) BETWEEN (rt0.c4) AND (t1.c85)))), (~ (TOTAL(NULL))) FROM t1, rt1, rt0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))) FROM rt1 WHERE (INSTR(LTRIM('1708288595'), TRIM(DISTINCT x'', 'eN]iG7'))) GROUP BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))) IS TRUE) HAVING SUBSTR(CAST(rt0.c4 AS TEXT), ((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c2)));SELECT ((CASE WHEN x'' THEN rt0.c3 ELSE rt0.c0 END) IS TRUE) FROM rt1, t1, rt0 WHERE (((SQLITE_COMPILEOPTION_USED(x''))<>(0.9596114232392562))); -- 0ms;
SELECT DISTINCT (((rt1.c2))==((((rt0.c4)IS(rt0.c3))))) FROM t1, rt0, rt1 WHERE (CAST(MAX('1023126918', 0.05115290078191548) AS TEXT)); -- 0ms;
SELECT ALL (((((rt1.c0) NOT NULL)))=((-1755305308))) FROM rt1 WHERE (CASE WHEN TRIM(DISTINCT NULL) THEN (('-1637417038')IS(NULL)) ELSE (('-739519440')|(x'')) END) ORDER BY HEX(t1.c0) COLLATE BINARY ASC  NULLS FIRST;SELECT DISTINCT ((GROUP_CONCAT(rt0.c3))+(((t1.c0)/(rt1.c3)))) FROM rt1 WHERE ((((x'')) BETWEEN ((NULL COLLATE RTRIM)) AND ((((((NULL)OR('-1418959463')))OR('-1669717675'))))));SELECT ALL ((((t1.c0) BETWEEN (x'ab60') AND (rt1.c0))) NOT BETWEEN (TRIM(rt1.c0)) AND (((((rt0.c3)OR(rt1.c3)))AND(rt1.c1)))) FROM t1 WHERE (CASE ((NULL) NOT NULL)  WHEN '' THEN (((('798483369')OR(0.12221851721637356)))OR(-1.82315402E8)) END) GROUP BY '-941404995', ((0.45122675710120586 COLLATE BINARY) ISNULL), ((ABS(DISTINCT x'c77e'))AND(((((rt0.c4)OR(rt0.c4)))OR(rt1.c3)))) ORDER BY ((rt0.c3) IS FALSE) COLLATE RTRIM ASC  NULLS LAST, (+ (((rt1.c4)IS(rt1.c2)))) DESC  NULLS FIRST;SELECT ALL CASE WHEN t1.c0 THEN t1.c85 WHEN rt0.c3 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c0 END COLLATE NOCASE FROM t1, rt0, rt1 ORDER BY ((+ ('-168719723')) IN ()) ASC; -- 0ms;
SELECT DISTINCT rt0.c3, '1429174016', ((rt1.c3)|(rt1.c2)) COLLATE RTRIM FROM rt0;SELECT ((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((t1.c0)+(rt0.c3))) AND ((rt1.c4 IN ()))) FROM rt1, rt0, t1 WHERE (((MAX(x'', -5.66714673E8)) NOT BETWEEN (TRIM(DISTINCT 0.7955715445847684, 0xffffffffe2af16e9)) AND ((NOT (1.719740879E9))))); -- 0ms;
SELECT DISTINCT ((SQLITE_SOURCE_ID())IS NOT(MAX(rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT((((rt0.c2, rt1.c4, rt1.c3))<=((rt0.c4, rt1.c4, rt0.c3)))) FROM rt0, t1, rt1 WHERE (CASE WHEN ((NULL)|('g<Q&1SUGN')) THEN (('-1861334170') ISNULL) ELSE ((((0x1fcc51f0)AND(x'')))OR(NULL)) END); -- 1ms;
SELECT ALL AVG((rt0.c1 IN ()) COLLATE NOCASE), AVG(((rt1.c1)==(rt1.c2)) COLLATE BINARY), rt1.c2 FROM t1, rt1, rt0 WHERE (((((((NULL)OR(x'03de')))AND(NULL)))GLOB(HEX('')))) ORDER BY ((CAST(rt1.c4 AS REAL)) NOT BETWEEN ((rt1.c1 IN (NULL, rt0.c4))) AND (rt1.c1 COLLATE RTRIM)) DESC, NULL, (NOT ((+ (rt1.c2))))  NULLS LAST; -- 0ms;
SELECT 's(?3뼓K<', ((t1.c0)IS NOT(((rt0.c3)<<(t1.c0)))), rt1.c1, ((((((rt0.c3)<=(-1016019176)))AND((((t1.c85))==((rt1.c0))))))AND(rt0.c4)), ((CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt1.c4 END) BETWEEN (x'2bed') AND ((((rt1.c1, rt0.c1, rt1.c0))<=((rt1.c2, rt1.c3, rt1.c1))))) FROM t1, rt1 WHERE ((NOT ((((('')AND(x'')))OR(x'f153'))))) LIMIT -258427981 OFFSET 1772458834;SELECT DISTINCT ((rt0.c2 COLLATE NOCASE)<(TRIM(DISTINCT rt0.c0, 2.33121668E8))) FROM rt0 WHERE (CASE WHEN IFNULL(DISTINCT x'4488', NULL) THEN (((0xffffffffeac49cb9, x'', 0.7358632043856739))<=((x'', 0.6779956841065551, 0.5750883572782339))) WHEN (NULL IN ()) THEN (('384523125')GLOB('ZN,g糷CWEh')) WHEN (((x'')) BETWEEN ((x'a49a')) AND ((''))) THEN (x'' IN ()) ELSE 0.5871680071071949 END); -- 0ms;
SELECT (((t1.c85) IS FALSE) IN (((rt0.c0)AND(rt0.c0)))), COUNT(CAST(t1.c0 AS REAL)) OVER (), (- (t1.c0)) COLLATE NOCASE FROM rt0 ORDER BY CAST((('-1669717675') NOTNULL) AS NUMERIC) ASC, (((rt1.c4 IN ()))AND(rt1.c1)) ASC  NULLS LAST;SELECT (((rt0.c4 IN (rt1.c4)))&(CAST(0.5354911055246674 AS BLOB))), CASE WHEN (+ (rt0.c1)) THEN ((rt1.c2) NOTNULL) ELSE (NOT (rt1.c1)) END, ((((NULL) NOTNULL)) IS TRUE) FROM t1, rt1 WHERE (LIKELY(CAST('263141836' AS REAL))) LIMIT -235666557 OFFSET -968932391;SELECT ALL ((rt1.c3 IN ()) IN ()) FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c1 AS INTEGER)) NOT NULL), COUNT(*), ((((rt1.c0)>>(t1.c85)))>>((rt1.c2 IN (t1.c0)))) FROM rt1, t1, rt0 WHERE (CAST('367655838' COLLATE RTRIM AS BLOB)) LIMIT -961723737; -- 0ms;
SELECT DISTINCT LEAD(UNLIKELY(((rt0.c0)IS(rt0.c0))), HEX(DISTINCT rt0.c0 COLLATE NOCASE), x'dee1') OVER () FROM t1, rt0; -- 0ms;
SELECT ALL '-687388784', 0xffffffffe34e2baa, (((((((('65348124')AND((+ (rt0.c2)))))OR(TRIM(rt0.c4))))AND(NULL)))OR(t1.c85 COLLATE NOCASE)) FROM t1, rt0 LIMIT -1227153873; -- 0ms;
SELECT ((rt1.c0)OR(rt1.c0)) COLLATE RTRIM, ((CAST(rt1.c1 AS TEXT))==(((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c1)))), (NOT ((rt1.c2 IN ()))) FROM t1 INDEXED BY i76, rt0 WHERE ((((((((((NOT (x'd529')))OR((+ (x'')))))AND(((0.04768593721534231)AND(0.1710286591341984)))))AND(TRIM(0x22c62e0b))))AND(LOWER(NULL))));SELECT TOTAL_CHANGES() FROM t1 WHERE ((((0.8190655718819693)IS(0.057913510090651266)) IN ())); -- 0ms;
SELECT DISTINCT IFNULL(((rt1.c0)<>(rt0.c2)), rt0.c0 COLLATE RTRIM), ((((t1.c0) ISNULL)) NOT BETWEEN (((rt0.c3)IS(rt0.c1))) AND (CASE '?1'  WHEN rt1.c2 THEN rt0.c4 END)), LAG((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 END IN (((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)), ((rt1.c2)>(rt1.c3)))), (rt1.c4 IN (rt1.c3)) COLLATE NOCASE, CAST((((rt1.c3, rt1.c1, rt1.c0))<((0x35e644e, rt1.c0, rt1.c1))) AS NUMERIC)) OVER () FROM rt1 WHERE ((((('-1899213974')) BETWEEN ((NULL)) AND (('-664319254'))) IN ())) GROUP BY (((((rt1.c0))!=((rt1.c3)))) NOTNULL) HAVING UPPER(COUNT(*));SELECT ALL CASE WHEN NULL THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2)) END FROM rt0;SELECT DISTINCT (((t1.c85) NOT NULL) IN ()) FROM rt0; -- 0ms;
SELECT ALL SUM((rt0.c1 IN ())) FROM rt1, t1; -- 0ms;
SELECT (((((rt1.c2)OR(839438859)))OR(t1.c0)) IN (((rt0.c4)IS(rt1.c2)))) FROM rt0 WHERE ((((((NOT ('')))AND((((x'66b6'))<((x''))))))AND(NULL)));SELECT DISTINCT ((((rt0.c3 IN (rt0.c0))))=((t1.c0))) FROM rt1 LIMIT 986973600;SELECT ((NULL)|(rt0.c1 COLLATE RTRIM)), CASE WHEN ((((((((t1.c85)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)))OR(t1.c85)) THEN rt1.c1 COLLATE BINARY ELSE 0.3976242474963557 END, CASE ((((rt0.c3)AND(rt0.c4)))OR('2	z3D|]'))  WHEN ((rt0.c1) ISNULL) THEN (- (t1.c0)) WHEN HEX(t1.c85) THEN ((rt1.c1)%(rt1.c1)) WHEN ((rt0.c1)AND(rt0.c1)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))) END FROM t1, rt1, rt0 WHERE (((CAST(0.8959820224840793 AS BLOB)) IS FALSE)) ORDER BY (((((0.06466009986960031)OR(t1.c0)))OR(rt1.c4)) IN ()) DESC, (((rt1.c0)) BETWEEN ((((rt1.c1)||(t1.c85)))) AND (((((rt1.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3))))))  NULLS FIRST; -- 0ms;
SELECT CAST(CASE 'll'  WHEN rt0.c4 THEN rt1.c1 END AS REAL) FROM rt1 WHERE (((CASE WHEN '' THEN 0.34632551704815984 ELSE '' END)>(((0.4659025233060311)AND('137708256'))))) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c1 THEN '-1496935865' WHEN rt1.c2 THEN rt1.c4 END) NOTNULL) DESC;SELECT ((CAST(rt1.c3 AS NUMERIC))IS(x'')) FROM t1, rt0, rt1 WHERE ('#FF[>3Z4.') ORDER BY rt1.c3  NULLS FIRST LIMIT 1599042296; -- 1ms;
SELECT ALL CASE -1.117353173E9  WHEN rt0.c0 COLLATE RTRIM THEN ((rt1.c4) NOT BETWEEN (t1.c0) AND (rt1.c4)) END FROM rt1 CROSS JOIN t1 ON TRIM(DISTINCT (((rt0.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((x'', rt1.c3, rt0.c0)) AND ((rt1.c1, t1.c0, t1.c0))), ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0))) LEFT OUTER JOIN rt0 ON (((((~ (0.5031742154999808)))OR(rt1.c2 COLLATE BINARY)))AND(((((rt0.c2)AND(rt1.c2)))AND(t1.c85)))) WHERE (CAST(((NULL) NOT BETWEEN (x'') AND ('*\n.Dyj	N')) AS BLOB)); -- 0ms;
SELECT ALL rt0.c0 FROM rt0, rt1 WHERE (((((UNLIKELY(''))OR(NULLIF(x'ee9c21da', x''))))OR(CAST('' AS TEXT)))); -- 0ms;
SELECT DISTINCT '-1588721213' FROM rt1, rt0; -- 0ms;
SELECT x'', COUNT(*), ((MAX(rt1.c0))<(rt0.c3)) FROM rt0, rt1 WHERE ((((('')||(1.880716905E9)))AND((('ඁ5')-('-1141349912'))))); -- 0ms;
SELECT ((t1.c85) BETWEEN ((rt1.c2 IN ())) AND ((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((0.35561825685369464))))) FROM rt1, rt0 GROUP BY ((((0.36417271197665013))<>((rt1.c1))) IN ()) HAVING ((MAX(rt0.c3)) NOT BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))) AND (((t1.c85) BETWEEN (rt1.c3) AND (rt1.c2)))) ORDER BY ((CAST(rt1.c2 AS TEXT)) IS FALSE)  NULLS LAST;SELECT (NOT ((- (t1.c85)))) FROM rt1, rt0;SELECT DISTINCT (+ ((((rt1.c3))<((rt0.c4))))), json_extract(t1.c0 COLLATE BINARY, AVG(rt1.c3)), rt1.c2, TRIM(((((rt0.c0)OR(t1.c85)))OR(rt1.c0))), ((rt0.c1 IN (rt0.c1)) IN ()), ((x'')GLOB(rt1.c4 COLLATE NOCASE)), CAST(COUNT(0.14332757553690179) AS TEXT) FROM rt1 WHERE (x'');SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NOT (NULL)))OR(CASE -8.60332395E8  WHEN 0.9053706691641511 THEN NULL END)))AND(((-1001317569) NOT BETWEEN ('1491696333') AND (0.5871680071071949))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c4) IS TRUE))AND(',umN|*')))OR(rt1.c0 COLLATE BINARY)), ((((LTRIM(rt1.c1, rt0.c2))OR(((rt1.c1)||(NULL)))))OR(((((rt1.c1)OR(rt0.c1)))AND(rt0.c2)))), (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((t1.c85)))) NOTNULL) FROM rt0, t1;SELECT ALL GROUP_CONCAT(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c2 WHEN t1.c85 THEN '20723674' WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN t1.c85 END) OVER () FROM rt1, rt0, t1 WHERE (CAST((((((((('-1861334170')OR(x'')))OR(NULL)))OR('+*(')))AND(0.9138207305103249)) AS NUMERIC)); -- 1ms;
SELECT DISTINCT (+ (((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c3)))) FROM rt0, t1 WHERE (((((('cr'))<((0.6343995519594591)))) IS TRUE));SELECT ALL (CAST(rt1.c4 AS INTEGER) IN (CASE rt1.c4  WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c2 END, (((rt0.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))) FROM t1, rt0, rt1 GROUP BY CASE ((rt1.c4) BETWEEN (rt1.c2) AND (rt0.c0))  WHEN NULL COLLATE BINARY THEN (((rt1.c1, rt1.c2, rt1.c1, rt1.c2, t1.c0)) BETWEEN ((x'', NULL, rt1.c4, rt1.c0, rt0.c0)) AND ((rt1.c1, rt1.c1, t1.c0, rt1.c3, rt1.c3))) ELSE ((((((((t1.c0)AND(rt1.c1)))OR(rt1.c0)))OR(rt0.c0)))OR(t1.c85)) END LIMIT 1710052601 OFFSET 123045421; -- 0ms;
SELECT ((((((((((rt0.c4)OR(rt1.c4)))AND(t1.c0)))AND(rt0.c2)))AND(rt0.c1))) BETWEEN (((((((((rt0.c0)AND(rt1.c2)))AND(rt1.c0)))AND(rt0.c2)))AND(rt1.c4))) AND (((rt0.c1)&(rt1.c2)))) FROM t1 NOT INDEXED, rt0 GROUP BY ((((rt0.c2)%(rt1.c1)))<<((((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((t1.c85))))) HAVING (((0X1c753fea)) NOT BETWEEN ((NULL)) AND ((rt0.c2)));SELECT ((((rt0.c2)IS NOT(rt1.c3)))IS(((rt0.c3)IS(rt1.c1)))) FROM t1, rt0, rt1; -- 0ms;
SELECT ALL DENSE_RANK() OVER ( ROWS BETWEEN ((((rt0.c0) ISNULL))IS((rt0.c2 IN ()))) FOLLOWING AND CAST(t1.c85 COLLATE NOCASE AS REAL) PRECEDING) FROM rt0, rt1, t1;SELECT ALL ((((((((((((((rt1.c0)=(rt1.c0)))OR(((((rt0.c0)OR(0.4053794931271485)))AND(rt0.c0)))))AND(AVG(rt1.c3))))AND((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))))AND(rt0.c1)))OR((rt0.c2 IN (t1.c85)))))AND((+ (rt0.c1)))) FROM t1, rt0 WHERE (CAST(NULL COLLATE BINARY AS REAL));SELECT NULL FROM rt1, t1, rt0 WHERE ((((((((((~ (NULL)))AND(x'')))OR(((x'')>('-635103532')))))AND(((x'd921')||(3064047)))))OR(UNLIKELY('-1781431873')))); -- 0ms;
SELECT ALL ((((rt0.c2)IS NOT(rt1.c3)))>(CASE WHEN 1943238424 THEN t1.c0 WHEN rt1.c0 THEN t1.c85 WHEN rt1.c0 THEN 0Xfffffffff7438ec2 END)) FROM rt0 WHERE (((CAST(0.3940327119560011 AS REAL)) NOT BETWEEN (CASE WHEN x'c885' THEN '755903031' ELSE 0.7566628174465804 END) AND (CAST(x'' AS NUMERIC)))) LIMIT -1723737388 OFFSET -2118815721;SELECT DISTINCT CASE CASE rt0.c2  WHEN rt1.c2 THEN NULL WHEN rt0.c2 THEN '\no' WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c1 END  WHEN ((rt0.c3) NOT NULL) THEN GROUP_CONCAT(x'') WHEN rt1.c0 THEN (- (t1.c85)) WHEN AVG(rt0.c3) THEN CASE t1.c0  WHEN rt1.c4 THEN t1.c0 END ELSE CASE WHEN rt0.c4 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN rt1.c4 THEN rt0.c4 END END, CAST((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS NUMERIC), GROUP_CONCAT(LIKELY(DISTINCT rt0.c3)) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM t1;SELECT ALL CAST(CASE WHEN rt1.c4 THEN rt1.c1 END AS BLOB) FROM t1, rt0 WHERE (((((((NULL)AND(0X31bd1669)))OR('z5YS4''_4e'))) BETWEEN (CAST('' AS REAL)) AND (('-961723737' IN ()))));SELECT DISTINCT (((((rt0.c4, rt0.c3, rt1.c4)) NOT BETWEEN ((rt1.c1, rt1.c3, t1.c85)) AND ((t1.c0, rt1.c2, rt0.c0)))) IS TRUE) FROM t1, rt0;SELECT DISTINCT rt0.c4, COUNT(((x'b25f')<<(1.37708256E8))), NULL FROM rt1;SELECT ALL GROUP_CONCAT((((rt1.c2, rt1.c1, rt0.c1))<=((x'1c75', rt0.c1, rt0.c2)))) OVER (), (rt1.c4 IN (t1.c85)) COLLATE NOCASE, ((((rt0.c1)+(rt1.c0))) ISNULL) FROM t1 WHERE (((((NULL) NOT BETWEEN ('-732497153') AND (x'e75f'))) IS FALSE)) GROUP BY COALESCE(rt1.c1, CASE WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c1 END) HAVING (- (((t1.c0)<=(rt0.c1))));SELECT ALL ((CAST(t1.c85 AS TEXT)) NOT BETWEEN (highlight(rt1.c2, rt0.c2, rt0.c2, rt0.c2)) AND (CASE rt0.c0  WHEN rt0.c4 THEN rt1.c0 END)) FROM rt1, t1, rt0 WHERE (((((('-1689014364')==('勽K')), (('0.8117717958742124') NOT NULL), 0.19164741428761345))>((((x'')IS NOT(0.15108322073546976)), (NULL IN ('-1538531756')), CASE WHEN x'' THEN 0.686334998262843 ELSE 2.41192468E8 END)))); -- 0ms;
SELECT DISTINCT rt0.c3, 1196594592, (((HEX(DISTINCT rt0.c3)))<((((rt1.c3) NOTNULL)))) FROM rt0, t1 WHERE ((((('1276716105') BETWEEN (NULL) AND (NULL))) NOT BETWEEN (NULL) AND (CASE NULL  WHEN x'0f1d' THEN '0.7358632043856739' END)));SELECT DISTINCT (((0.11126418434481877)<>(rt1.c1)) IN (((((rt1.c1)OR(rt1.c1)))AND(rt0.c2)), CAST(rt1.c2 AS BLOB))), (NOT ((rt1.c3 IN ()))), CAST(rt0.c4 AS REAL) FROM rt0 WHERE (((((0X1c753fea)>=('1015009499')))&(((NULL)<<(1675629585))))) LIMIT 294080288 OFFSET 726446619;SELECT DISTINCT IFNULL(((rt0.c4) BETWEEN (t1.c85) AND (rt0.c2)), ((rt0.c4)<>(rt0.c1))), CASE WHEN t1.c0 THEN ((((t1.c85)OR(rt1.c1)))OR(rt0.c0)) END, ((((rt0.c3)OR(rt0.c3))) NOT BETWEEN ((('0.5860320094707415')==(t1.c85))) AND (x'')) FROM rt1, rt0 WHERE (((('E~eB㬟8' IN ())) BETWEEN ((NOT (NULL))) AND (((-1689441942) ISNULL))));SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0 WHERE (0Xffffffffe60bb55d); -- 0ms;
SELECT ALL ((x'') IS TRUE) FROM t1, rt1, rt0 WHERE (((CASE x''  WHEN NULL THEN x'' ELSE '1239672159' END) NOT NULL)); -- 0ms;
SELECT DISTINCT ((CASE rt1.c0  WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c0 THEN t1.c0 END) BETWEEN ((((0.975072669930394))>=((1772458834)))) AND (COUNT(rt1.c3))) FROM t1, rt0 GROUP BY rt1.c1 ORDER BY ((((rt0.c3)||(rt1.c1))) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 END) AND (LIKELY(rt0.c4)));SELECT ALL CAST(TRIM(rt1.c0) AS NUMERIC) FROM t1, rt1; -- 0ms;
SELECT DISTINCT x'' COLLATE NOCASE FROM rt0, t1, rt1 WHERE (CASE CAST(0.8773083308482049 AS TEXT)  WHEN ((0.8218030112749954) BETWEEN (NULL) AND ('-1588721213')) THEN ((((0.8762447921437557)AND(NULL)))AND(0.2607370895466602)) END); -- 0ms;
SELECT DISTINCT CAST(UPPER(DISTINCT rt0.c2) AS BLOB) FROM t1, rt1 WHERE ((((('169239914') IS FALSE)) IS FALSE)) ORDER BY ((((rt1.c1)=(rt1.c4)))||(((rt1.c4)IS(t1.c0)))) DESC, CAST(load_extension(rt1.c2) AS TEXT)  NULLS FIRST;SELECT CAST(('951399424' IN (rt0.c4)) AS REAL) FROM t1, rt0, rt1 ORDER BY (NOT (rt0.c3)); -- 0ms;
SELECT ALL ((+ (rt1.c2)) IN ()) FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt0.c2, rt0.c0, rt0.c3)) NOT BETWEEN ((t1.c0, rt1.c3, NULL)) AND ((rt0.c3, rt0.c2, rt1.c3)))), MAX(((rt1.c0) NOT NULL)), (((((rt0.c3))=((t1.c0)))) IS TRUE) FROM t1, rt1, rt0 WHERE (((CASE WHEN 0xffffffff9033cac2 THEN ']' ELSE 0x38d48364 END) NOT BETWEEN (((((x'')OR('888781461')))AND('F￿'))) AND (((('(9Z濈w!+R')) BETWEEN ((x'cc56')) AND ((x'')))))); -- 1ms;
SELECT (COUNT(*) IN ((t1.c0 IN ()), ((rt0.c1)*(rt0.c2)))) FROM t1, rt1;SELECT DISTINCT LEAD(NULLIF(CASE WHEN rt0.c4 THEN rt1.c2 ELSE NULL END, CASE rt0.c0  WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt0.c2 THEN rt0.c0 END), json_quote(((((0X764e968b)OR(t1.c0)))OR(t1.c0))), ((((LIKELIHOOD(DISTINCT rt1.c4, 0.6941393229568921))OR(CAST(t1.c0 AS BLOB))))AND((1452524977 IN ())))) OVER ( PARTITION BY (((((rt0.c0))<=((rt1.c2)))) ISNULL), (((((t1.c85 IN ()))AND((rt0.c2 IN (t1.c0)))))OR((+ (t1.c85))))) FROM t1, rt0, rt1 WHERE (((('', '1452524977', 0.19832135209103152)) BETWEEN ((-2.075746002E9 COLLATE NOCASE, (('-860332395') NOTNULL), (~ ('.쀿')))) AND ((CASE NULL  WHEN x'' THEN 'H^)' WHEN x'' THEN NULL WHEN NULL THEN NULL END, 'l[' COLLATE BINARY, ((((x'')OR(-435440291)))OR(x'')))))) LIMIT 1054070686; -- 0ms;
SELECT DISTINCT ((((rt1.c2)OR(UNLIKELY(DISTINCT rt0.c2))))OR(((rt1.c2)=(rt0.c0)))) FROM t1, rt0, rt1; -- 0ms;
SELECT ABS(DISTINCT CASE WHEN x'3055' THEN t1.c0 END) FROM rt1, t1 WHERE (-2.54514391E8); -- 0ms;
SELECT DISTINCT ((((((((rt0.c2)AND(rt1.c2)))AND((((rt1.c4))<>((''))))))OR(((rt0.c0) IS TRUE))))AND(CAST(rt1.c2 AS INTEGER))) FROM t1, rt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (((((rt1.c1)OR(rt0.c0)))OR(rt1.c1))) AND (((t1.c0) IS FALSE))) FROM t1;SELECT CAST((rt0.c0 IN (rt1.c4, t1.c85)) AS INTEGER) FROM rt1, rt0 WHERE ((((x'') NOT NULL) IN (((((0x4c276a10)OR(NULL)))OR('')), ((0.0656330242815909) NOT BETWEEN (NULL) AND ('-1591980165')))));SELECT DISTINCT (((((NOT (rt0.c2)))OR(CAST(rt0.c1 AS REAL))))OR((rt1.c2 IN (rt1.c1, rt0.c4)))), UNLIKELY(t1.c0) COLLATE BINARY, ROUND(t1.c0, t1.c85) COLLATE BINARY COLLATE NOCASE FROM t1 WHERE ((((NOT ('yUr')))>((1.5524667285726768E-4 IN ()))));SELECT ALL ((((((((COUNT(*))AND((NULL IN ()))))OR(NULL)))AND((((rt0.c4))>=((0.08579663298955631))))))OR(rt0.c3 COLLATE NOCASE)), NULL, CASE ((rt1.c4) NOT NULL)  WHEN x'' COLLATE RTRIM THEN (NOT (0x68e9fcd5)) END FROM rt1 NOT INDEXED WHERE (0.2966885054248499);SELECT DISTINCT (((rt1.c2)<=(rt0.c0)) IN ()) FROM t1, rt1, rt0 WHERE ((((((0.5047913446554589)) BETWEEN ((x'dcc9')) AND ((4.53457131E8)))) IS TRUE)); -- 0ms;
SELECT COUNT(0.6343995519594591) FROM t1, rt0, rt1 WHERE (json_valid(CASE 'T୓\u免hQ#'  WHEN 0.2491542075217923 THEN 0.6058730735567746 WHEN NULL THEN 0.510543964146354 WHEN 1.452524977E9 THEN NULL END)); -- 0ms;
SELECT DISTINCT (((''))<=((0.7793293047200496 COLLATE NOCASE))) FROM t1, rt0, rt1 ORDER BY ((x'19a2')OR((((rt0.c3, rt0.c2, rt1.c2))<>((rt1.c2, '', t1.c85)))))  NULLS LAST; -- 0ms;
SELECT (((((rt0.c2))>((rt0.c0))))AND((- (rt1.c0)))) FROM rt1 WHERE ((((0.8173232571304567) NOT BETWEEN (x'c17b') AND (0Xffffffff84432706)) IN ()));SELECT DISTINCT ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3))) NOT NULL) FROM t1, rt1, rt0 WHERE (CAST(((0.3452631261817183) IS FALSE) AS REAL)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt1, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT GROUP_CONCAT('-1715301757') OVER () FROM rt0, t1, rt1; -- 0ms;
SELECT ALL CAST('yr' COLLATE RTRIM AS NUMERIC) FROM rt1, rt0, t1 LIMIT -1141349912 OFFSET 1942810400; -- 0ms;
SELECT DISTINCT 0.8372286538621339 COLLATE RTRIM FROM rt0, t1 WHERE ((+ (('.?I䭪\d' IN ())))); -- 0ms;
SELECT ALL NULL FROM rt1; -- 1ms;
SELECT ALL ((((rt0.c4)-(t1.c0)))||(((t1.c85)LIKE(rt0.c4)))), TYPEOF(((rt1.c4) NOT NULL)), (((((rt1.c1)*(rt1.c4))))<>((HEX(rt1.c3)))) FROM rt1 WHERE ((((NULL))!=(((('-415258029') NOT BETWEEN (0.7426849040548267) AND (-777361659)))))) LIMIT -1958648794 OFFSET 1398913029;SELECT DISTINCT '0.24430867226105346' FROM t1, rt1 WHERE ((((NULL)<(0.9675668087777656)) IN ())); -- 0ms;
SELECT DISTINCT NTILE(CAST(((t1.c0)OR(x'')) AS REAL)) OVER (), ((CASE WHEN rt1.c1 THEN rt1.c4 ELSE t1.c0 END)/(rt0.c2 COLLATE BINARY)), ((NOT (t1.c0)) IN ()) FROM t1, rt0 INDEXED BY i32 WHERE (CAST(((x'') NOT BETWEEN (x'') AND (NULL)) AS NUMERIC));SELECT DISTINCT 0.7232386027869869 FROM t1 ORDER BY CASE (rt0.c1 IN ())  WHEN ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c1)) THEN rt0.c3 ELSE ((rt0.c1)<(rt0.c4)) END, ((((rt0.c2 COLLATE BINARY)OR(TRIM(DISTINCT rt0.c0, rt0.c4))))AND((- (t1.c85))));SELECT DISTINCT ((((rt0.c4)IS(x''))) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (rt0.c4)) FROM t1;SELECT 0X62110cc5, LENGTH(((rt1.c4)-(rt1.c2))), CASE WHEN CASE NULL  WHEN rt1.c2 THEN rt0.c3 ELSE rt0.c4 END THEN CAST(rt0.c3 AS BLOB) WHEN ((rt1.c3) ISNULL) THEN COALESCE(rt1.c0, rt1.c0) WHEN ((rt0.c1) NOT BETWEEN (0xffffffffbfb8272f) AND (rt0.c3)) THEN ((rt0.c0)GLOB(rt0.c2)) ELSE rt1.c0 END FROM rt1 GROUP BY ((((t1.c0) IS FALSE)) BETWEEN (((((((((t1.c85)AND(rt1.c1)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c0))) AND (((rt1.c1)==(rt1.c0))));SELECT ((((((((((rt0.c2)>=(rt0.c2)))OR((rt1.c3 IN ()))))AND((x'' IN ()))))OR(CAST(rt1.c3 AS INTEGER))))AND(rt1.c2 COLLATE BINARY)) FROM rt0, rt1, t1; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS BLOB)) BETWEEN ((((-9.31906986E8, x'', rt0.c4, rt0.c0, rt1.c2))<=((rt1.c4, rt1.c1, t1.c85, rt1.c4, rt1.c3)))) AND (t1.c0 COLLATE NOCASE)), GROUP_CONCAT(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)))OR(rt1.c0)))AND(rt1.c3))) OVER (), rt0.c4 FROM rt0, t1;SELECT '' FROM rt1 ORDER BY (((t1.c85)*(rt1.c0)) IN ())  NULLS FIRST; -- 0ms;
SELECT ALL ((rt0.c1)>(rt1.c1)) COLLATE NOCASE, ((NOT (rt1.c2)) IN ()), (NOT ((t1.c85 IN (rt0.c4)))), ((((((rt1.c2)<=(rt0.c3)))AND(LAST_INSERT_ROWID())))OR(COUNT(x''))), 0.8170997900211758 FROM rt1 LEFT OUTER JOIN t1 ON (((((rt0.c3) ISNULL)))>=((PRINTF(rt0.c2)))) WHERE ('') GROUP BY (~ (rt1.c3 COLLATE RTRIM)) HAVING CASE (rt0.c4 IN ())  WHEN ((rt0.c3)<=(rt0.c1)) THEN rt1.c1 COLLATE BINARY END;SELECT DISTINCT SUM(t1.c85) OVER ( ROWS  UNBOUNDED PRECEDING) FROM rt1 WHERE (CASE CASE WHEN 0.9656448097089818 THEN '1082386654' ELSE 0.19631659584505223 END  WHEN CASE x''  WHEN NULL THEN x'd3d5' ELSE NULL END THEN (0.5658076404399485 IN (NULL)) WHEN ((x'3223')%('')) THEN (((('2078401573')OR(x'')))OR(x'')) WHEN (+ (NULL)) THEN COALESCE(-931906986, 0.11824143562503864, x'', '1c{}F') END);SELECT DISTINCT PERCENT_RANK() OVER ( RANGE (((rt0.c2 IN ()))+(((rt0.c4)>=(rt0.c1)))) PRECEDING) FROM rt1, rt0, t1;SELECT CASE WHEN (((rt0.c4, NULL, rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((x'', 0.24039785615449105, 'x|', t1.c85, rt1.c2)) AND ((rt0.c3, rt1.c3, t1.c0, rt0.c2, rt1.c2))) THEN ((rt1.c2) IS TRUE) END FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c1)-(rt1.c2)) COLLATE BINARY CROSS JOIN t1 ON (NOT (rt1.c3)); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt1 LIMIT -751745292; -- 0ms;
SELECT DISTINCT UNLIKELY('823374105') FROM rt1 WHERE ((CAST('' AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT CAST(TRIM(DISTINCT rt0.c1) AS BLOB) FROM rt1;SELECT ALL rt0.c1 FROM rt0, t1, rt1; -- 0ms;
SELECT ALL ((((((((rt1.c2)OR('1883370772')))AND(rt0.c1)))OR(CAST(rt0.c3 AS REAL))))AND(CAST(rt1.c0 AS BLOB))), ((((((((rt0.c2)AND(rt0.c4)))OR(-1301740796)))OR(MIN('-1103574735'))))AND(SUM(rt0.c0))), ((rt0.c0) BETWEEN ((- (rt1.c2))) AND (x'b5d5')) FROM t1;SELECT DISTINCT TOTAL(CAST(t1.c85 AS REAL)) OVER (), ((((MIN(rt0.c4))OR(ABS(rt1.c1))))AND(((t1.c85)<(rt0.c2)))), ((CASE x''  WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c1 THEN 0.4337517616631267 WHEN rt0.c2 THEN '-964245400' END) NOT NULL) FROM rt0, rt1 WHERE (1.23045421E8);SELECT ALL (NOT (((rt0.c4) NOT NULL))) FROM rt0, rt1 LIMIT -1972031973 OFFSET 273304527; -- 0ms;
SELECT ALL ((SUM(t1.c0)) IS TRUE), (((t1.c0 COLLATE BINARY, ((((t1.c85)OR('-493121854')))OR(t1.c85)), MIN(0.8166006196384582)))==((AVG(rt1.c3), rt1.c3, CAST(rt0.c4 AS TEXT)))), (+ (rt0.c1)) COLLATE BINARY FROM t1, rt1 LIMIT -181820108;SELECT DISTINCT (NOT (((rt0.c0) NOT BETWEEN (NULL) AND (t1.c85)))) FROM rt0, rt1 ORDER BY ((rt0.c0) NOT NULL) DESC;SELECT '', 'q7c', LAG(CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (t1.c85)) THEN x'' ELSE rt0.c4 END, NULL COLLATE BINARY, (((+ (rt0.c4)))+(((NULL) IS FALSE)))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt0, t1 WHERE ((((0.9916967132859926)) BETWEEN ((((x'')<=(NULL)))) AND (((((((((((((('ao')OR(NULL)))AND(x'ef39')))AND(x'08ee')))AND('')))OR(NULL)))AND(0.46828522241299786)))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0, rt0.c4, rt1.c1))>((rt1.c2, rt1.c2, rt1.c3))) IN (LIKELY(rt1.c4))) FROM rt0 WHERE (((((x'6693') NOT BETWEEN (NULL) AND (x'')))<>(((('8DX팡1	>YY'))>((NULL)))))) LIMIT -193505723;SELECT DISTINCT SUM(((((rt0.c3)OR(t1.c85)))AND(t1.c85))) FILTER(WHERE (LIKELIHOOD(rt0.c2, 0.24235401555364477) IN ())) OVER ( ORDER BY ((NULLIF(t1.c0, rt1.c4))-(((((((((rt1.c1)OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c0)))OR(t1.c0))))  NULLS LAST, ((((rt1.c2)<=(t1.c0))) NOT BETWEEN (((t1.c0)>>('1003099708'))) AND (((((t1.c0)AND(rt0.c3)))OR(-1.528896131E9))))) FROM rt1, rt0;SELECT DISTINCT TOTAL((~ (0.7808712548108749))) FILTER(WHERE LAST_INSERT_ROWID()) OVER () FROM t1, rt1 INDEXED BY i76, rt0 WHERE (0.5658630018362448 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE);SELECT DISTINCT ((((((((rt0.c0)AND(TRIM(DISTINCT rt1.c3))))AND(((rt1.c0)|(x'')))))OR(rt1.c0 COLLATE BINARY)))OR(LOWER(rt0.c3))), ((((t1.c85)AND(COUNT(*))))AND(((rt0.c3)>(rt0.c4)))), GROUP_CONCAT(TOTAL_CHANGES()) OVER () FROM rt0;SELECT DISTINCT UNLIKELY(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))), CAST(CASE WHEN rt1.c4 THEN rt0.c1 WHEN t1.c85 THEN t1.c0 WHEN x'baa8' THEN rt0.c3 END AS INTEGER), (TOTAL(rt0.c0) IN ()) FROM rt0 WHERE (((json_quote('0.6630566457351825')) NOT NULL)) ORDER BY ((((rt1.c4) NOT NULL))<((('1452524977')-(t1.c85))))  NULLS LAST;SELECT ALL ((TRIM(DISTINCT rt1.c3, x'b0a6')) NOT BETWEEN (TYPEOF(t1.c0)) AND (((((rt0.c3)AND(t1.c85)))OR(rt0.c4)))) FROM rt0, t1 WHERE (((((x'') NOT NULL)) NOT BETWEEN (CASE WHEN '-1439085062' THEN x'cfeffef7' WHEN '' THEN 0.14516427969123047 WHEN NULL THEN x'' END) AND (((0Xffffffff973a3d96) NOT NULL)))) LIMIT 839438859 OFFSET -1588721213;SELECT ALL (((GROUP_CONCAT(rt1.c4), AVG(rt1.c0), ((((rt0.c1)OR(t1.c0)))OR(rt0.c0)), rt1.c0 COLLATE NOCASE, CASE rt1.c0  WHEN rt1.c0 THEN t1.c85 END))<((CASE WHEN rt1.c1 THEN t1.c0 END, rt0.c1 COLLATE BINARY, (((x'')) BETWEEN ((rt1.c4)) AND ((rt0.c4))), NULL, rt1.c1 COLLATE RTRIM))) FROM rt1, rt0, t1 WHERE ('-254342362' COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((rt1.c4))==((rt0.c3))))%(((rt0.c1) IS FALSE))) FROM t1;SELECT ALL ((rt1.c4) NOT BETWEEN ((((rt1.c1))>((-428585925)))) AND ((rt0.c3 IN ()))) FROM t1 WHERE ((+ ((((x'6501', 0.5683689690760927, ')鲹-vw\r'))<>((x'', '1690052103', NULL))))));SELECT ALL CAST(CASE t1.c0  WHEN rt1.c2 THEN t1.c0 END AS NUMERIC) FROM rt1, rt0;SELECT ALL COUNT(*) FROM rt0, t1; -- 0ms;
SELECT DISTINCT (((rt0.c3 COLLATE NOCASE))<>((((rt1.c4)&(rt0.c1))))) FROM t1, rt0 WHERE ((((x'' IN ()))>>(CASE WHEN 'A nY' THEN -646287741 WHEN '-900930634' THEN -1227153873 WHEN x'8602' THEN 1.003099708E9 ELSE '-465336098' END)));SELECT ((CASE rt0.c4  WHEN rt1.c4 THEN rt1.c4 END)|((- (rt1.c4)))) FROM t1, rt0 WHERE ((NOT (IFNULL('', x''))));SELECT DISTINCT CAST((rt1.c0 IN ()) AS BLOB) FROM t1; -- 0ms;
SELECT json_array_length(0.8263945088239033, (rt1.c3 IN ())), rt1.c4, (((rt0.c0, x'', rt1.c1)) NOT BETWEEN ((((rt1.c0) IS FALSE), CASE WHEN t1.c85 THEN rt0.c4 ELSE rt0.c1 END, CAST(rt1.c1 AS TEXT))) AND ((((((rt0.c4)AND(rt1.c0)))OR(rt1.c2)), ((rt0.c1)*(x'd38c')), rt1.c3 COLLATE BINARY))) FROM t1, rt0 NATURAL JOIN rt1 GROUP BY ((CAST(rt0.c3 AS TEXT)) IS FALSE) ORDER BY ((((rt0.c4)!=(NULL)))>=(NULL))  NULLS LAST; -- 0ms;
SELECT ((CASE WHEN t1.c0 THEN '\r(	t' ELSE rt0.c3 END) BETWEEN ((((rt1.c0, NULL, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2)) AND ((rt1.c1, t1.c85, rt1.c1)))) AND (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)) FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT rt0.c2)) ISNULL) FROM rt1, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM rt1; -- 1ms;
SELECT ALL ((((rt0.c0) IS FALSE)) NOT NULL), GROUP_CONCAT(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3))) OVER (), (((COUNT(*)))=(((('0.36417271197665013') NOT BETWEEN (rt1.c4) AND (rt1.c0))))), LTRIM(((rt0.c4) IS FALSE), CASE t1.c85  WHEN t1.c0 THEN rt0.c0 END), (((~ (rt1.c3)))AND(CAST(rt0.c0 AS REAL))) FROM t1 WHERE (((x'362aa887')OR(0.01608784401975627)) COLLATE NOCASE);SELECT DISTINCT ((CAST(rt1.c2 AS REAL)) NOT BETWEEN ((rt1.c0 IN ())) AND ((rt0.c1 IN ()))) FROM rt1 WHERE (((((((-1665944408)>(NULL)))OR(CASE WHEN x'e7ca' THEN x'' WHEN x'' THEN x'' WHEN 0x3c27c4c2 THEN '357896818' END)))OR(CASE '-1301740796'  WHEN x'8b60dc22' THEN x'0d7d' ELSE 0.9934398918859403 END))); -- 0ms;
SELECT ALL ((rt0.c4 IN (t1.c85)) IN (CASE rt1.c3  WHEN rt1.c2 THEN t1.c85 END, ((rt1.c3)IS NOT(rt1.c4)))) FROM rt1, t1;SELECT DISTINCT (((- (rt1.c1)))<((((t1.c0))>((t1.c0))))), ((rt0.c4 COLLATE NOCASE)IS((t1.c85 IN ()))), (NOT (rt0.c1)) COLLATE NOCASE FROM t1;SELECT DISTINCT (((t1.c0) IS FALSE) IN ()) FROM t1, rt1, rt0 WHERE ((((((''))!=((-793214172))))&((((x'', x'1765', NULL, 0.3608070471986139, 3.89044132E8)) BETWEEN ((0Xffffffff8d779fdc, '', '2124022171', '-1272942891', x'')) AND ((NULL, '-2117226987', 0.8339363351398972, '-990172168', 0xffffffffbdcaaef7)))))); -- 1ms;
SELECT LIKELY(TRIM(DISTINCT rt1.c2)) FROM rt0, t1, rt1; -- 0ms;
SELECT rt0.c1 FROM t1 INDEXED BY i76, rt0, rt1;SELECT DISTINCT ((((((((rt1.c0)AND(rt1.c4)))OR(rt1.c1)))OR(rt0.c4)))OR(rt0.c4)) COLLATE NOCASE FROM rt0, t1;SELECT t1.c85 FROM rt1, rt0 ORDER BY ((rt1.c2) IS TRUE) DESC LIMIT 588650631 OFFSET 1405088861;SELECT DISTINCT ((t1.c85 COLLATE NOCASE) IS TRUE), (rt1.c0 COLLATE BINARY IN ()), CASE CASE rt0.c2  WHEN rt1.c4 THEN t1.c0 END  WHEN MIN(rt1.c1) THEN rt1.c2 COLLATE RTRIM ELSE GROUP_CONCAT(rt1.c0) END, ((SUM(rt1.c0)) IS TRUE), DENSE_RANK() OVER () FROM rt1, rt0 WHERE ((((((0.727950276539668)&(8.23588741E8))))<=((x'' COLLATE BINARY))));