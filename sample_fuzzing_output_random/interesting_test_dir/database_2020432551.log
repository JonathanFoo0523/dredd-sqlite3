-- Time: 2024/06/07 21:55:47
-- Database: database51
-- Database version: 3.40.0
-- seed value: 2020432551
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('璧Infinity\r*KgG*'); -- 0ms;
ANALYZE t0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt1 SET (c1)=(0.6306533412832728) WHERE ((((((rt1.c2) NOTNULL))OR(((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))))OR(((rt1.c0)OR(rt1.c0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 noskipscan'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c22 INT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0x1d9674a7); -- 2ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c66; -- 1ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (0X577452b); -- 0ms;
UPDATE OR IGNORE t0 SET c66=1558741958 WHERE (((~ (t0.c66)))>=(CAST(t0.c66 AS INTEGER))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.wal_autocheckpoint = -5497192160269144853; -- 0ms;
CREATE UNIQUE INDEX i34 ON t0(x'' COLLATE RTRIM) WHERE CASE (- (c66))  WHEN ((NULL) NOT NULL) THEN (c66 IN ()) WHEN 4.96399527E8 THEN c66 WHEN ((c66)>(c66)) THEN CASE WHEN c66 THEN c66 ELSE c66 END ELSE (c66 IN ()) END; -- 1ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
REINDEX  rt1; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2) VALUES (x''); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA mmap_size = -5132797594509797404; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
REINDEX  t0; -- 0ms;
UPDATE rt1 SET (c0)=('璧Infinity\r*KgG*') WHERE ((rt1.c0)<<(rt1.c2)) COLLATE NOCASE COLLATE RTRIM; -- 1ms;
UPDATE t0 SET (c66, c66)=('-1289442265', 0.6306533412832728); -- 0ms;
UPDATE t0 SET (c66, c66, c66)=(0.2560124226798175, x'1336', NULL) WHERE CAST('496399527' AS NUMERIC); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c66=NULL, c66=0.6306533412832728 WHERE 91702571; -- 1ms;
UPDATE OR IGNORE rt1 SET (c2)=(x'65eb') WHERE TRIM(DISTINCT ((rt1.c0) NOTNULL)); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
PRAGMA main.soft_heap_limit = 929124162137417972; -- 0ms;
CREATE INDEX i58 ON t0((((((((((((c66)OR(c66)))AND(c66)))OR(c66)))OR('!칈픈_>xՇ'))))<=(('5330299315670740974'))) COLLATE RTRIM DESC) WHERE (((c66)) BETWEEN ((c66)) AND (('5330299315670740974'))) COLLATE RTRIM; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c1=NULL; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t1 (c0 TEXT ); -- 0ms;
DROP INDEX IF EXISTS "i34"; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE rt0 SET c0=NULL, c2=0.717611204394767 WHERE (((- (rt0.c2)))<=(x'93c0')); -- 0ms;
PRAGMA temp.mmap_size = -2988983864074850616; -- 0ms;
PRAGMA main.stats; -- 0ms;
UPDATE OR ABORT t0 SET c66=0X6833f96b WHERE (((t0.c66, t0.c66, t0.c66)) BETWEEN (((t0.c66 IN ()), CAST(t0.c66 AS BLOB), ((t0.c66)+(t0.c66)))) AND ((CAST(t0.c66 AS INTEGER), t0.c66 COLLATE NOCASE, CAST(0.6771702657276742 AS BLOB)))); -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES (0.3056766732712136, x''), (0.6010975850294261, '8>8l|!벖賁2'), (NULL, NULL); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES ('2089616711'); -- 0ms;
CREATE UNIQUE INDEX i83 ON t1(((((NULL)>(c0)))-(NULL)) COLLATE BINARY) WHERE 539347264; -- 0ms;
INSERT OR IGNORE INTO t0(c66) VALUES (x''); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA application_id = -3828041313262113060; -- 0ms;
UPDATE OR IGNORE rt1 SET c0='r~', c1=0.8382103380816575; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=('KawM!''d'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt1 SET c1=x''; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c0, c1) VALUES (x'', '-1e500', x''); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (0.2331614756478475, NULL, '-2038187764'), (NULL, '!칈픈_>xշ', x''), (0x6006ffce, ((0.8131860141233407 COLLATE NOCASE) NOT BETWEEN (('335056065' IN ())) AND (UPPER(DISTINCT 'A'))), 0.3007210085468007); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c1) VALUES (0.8382103380816575, 0, x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(1.558741958E9); -- 0ms;
ANALYZE i34; -- 1ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i33 ON t0((((c66)IS NOT(c66)) IN ()) COLLATE NOCASE) WHERE CASE WHEN ((NULL)>=(c66)) THEN LIKELIHOOD(c66, 0.4533680626647111) END; -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
UPDATE OR REPLACE t0 SET c66=x'8713', c66='WY', c66='0.2560124226798175'; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE INSERT ON t0 BEGIN DELETE FROM t0;END; -- 0ms;
UPDATE rt1 SET (c0)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET c66=NULL; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
UPDATE OR IGNORE t0 SET (c66, c66, c66)=(0.33266536956415094, '', 0.25169854324717333); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c0)=(x'', 0.6832239769468749) WHERE ((((rt1.c2)&(rt1.c0)))<=(rt1.c0 COLLATE NOCASE)); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE t0 SET c66='920622263' WHERE CASE WHEN t0.c66 THEN t0.c66 WHEN t0.c66 THEN t0.c66 WHEN t0.c66 THEN t0.c66 WHEN t0.c66 THEN t0.c66 WHEN t0.c66 THEN t0.c66 END COLLATE RTRIM; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX  t0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2='1558741958'; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ABORT rt1 SET c2=x''; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt1, t0; -- 0ms;
SELECT NULLIF((t0.c66 IN ()), (~ (t0.c66))) FROM t0 WHERE (((432658066 COLLATE RTRIM) BETWEEN ((((x''))<((x'')))) AND ((0.11188273040209451 IN (0.7348038716210153))))) ORDER BY ((((rt1.c2)OR(rt1.c2)))AND(t0.c66)) COLLATE NOCASE DESC LIMIT 515828496;SELECT DISTINCT rt1.c2 FROM t0 WHERE ((((CASE WHEN 2050907753 THEN -1289442265 END))!=((((x'')<('496399527')))))) GROUP BY CAST(rt1.c2 AS TEXT);SELECT DISTINCT ((((t0.c66) ISNULL)) IS FALSE), (((rt1.c1) NOTNULL) IN ()), TRIM(MIN(t0.c66, rt1.c2, rt1.c0, rt1.c0)) FROM t0, rt1 WHERE ((+ ((x'' IN ())))); -- 0ms;
SELECT RANK() OVER ( ORDER BY (((rt1.c2)) BETWEEN ((CAST(rt1.c2 AS INTEGER))) AND ((CAST(t0.c66 AS INTEGER)))) DESC, (((rt1.c2 IN (rt1.c0))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 END) AND ((((rt1.c2))<((rt1.c2))))) ASC  NULLS FIRST) FROM t0, rt1 WHERE (0.5433673338249122); -- 0ms;
SELECT DISTINCT ((((rt1.c0)AND(SUM(0.6010975850294261))))OR(MAX(t0.c66))) FROM rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY t0.c66 ASC  NULLS LAST;SELECT ALL COUNT(CAST(rt1.c1 AS INTEGER)) FROM t0, rt1 EXCEPT SELECT ALL ((t0.c66)<=(t0.c66)) COLLATE NOCASE FROM t0 WHERE ((- ((NOT ('WQ'))))); -- 0ms;
SELECT ALL rt1.c0 FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c0) IS FALSE) COLLATE BINARY FROM t0;SELECT DISTINCT (((((rt1.c0)>=(rt1.c2))))!=((CASE WHEN rt1.c2 THEN t0.c66 ELSE rt1.c0 END))) FROM t0 WHERE (((0Xffffffff9e20ba78 COLLATE NOCASE) IS FALSE));SELECT DISTINCT (NOT (((rt1.c1) NOT BETWEEN (' 2') AND (rt1.c0)))) FROM t0 ORDER BY CASE WHEN UPPER(rt1.c2) THEN (NOT (t0.c66)) END;SELECT ALL ((rt1.c2 COLLATE NOCASE)|(t0.c66 COLLATE NOCASE)), '', SUM(CAST(rt1.c0 AS BLOB)) OVER ( ROWS BETWEEN TRIM(rt1.c1) PRECEDING AND ((((((((((t0.c66)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))<(rt1.c0)) FOLLOWING) FROM t0 LIMIT 2025957036 OFFSET -1904174555;SELECT NTH_VALUE(((CASE t0.c66  WHEN t0.c66 THEN t0.c66 ELSE t0.c66 END)>(((((t0.c66)AND(t0.c66)))OR(t0.c66)))), CAST(((((t0.c66)AND(t0.c66)))OR(t0.c66)) AS NUMERIC)) OVER () FROM t0 WHERE (((((NULL)<(''))) IS FALSE)); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((rt1.c0) NOTNULL)) FROM rt1, t0; -- 0ms;
SELECT ALL rt1.c2 FROM rt1 WHERE (((((((((0.2716270134371188)AND(x'')))OR('-468187056')))OR(LTRIM('x.o'))))AND(((0.3056766732712136) NOT BETWEEN ('0.3007210085468007') AND (x'd7ec'))))); -- 1ms;
SELECT DISTINCT ((((rt1.c0) IS TRUE))OR(CAST(rt1.c1 AS INTEGER))) FROM rt1, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT COUNT((((t0.c66, rt1.c1, t0.c66)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((t0.c66, rt1.c1, rt1.c2)))) OVER () FROM rt1, t0 WHERE (rtreenode(((0Xffffffff9079c1be)>(0.9860879370560843)), ('1636422920' IN ()))); -- 0ms;
SELECT ALL CAST(CAST(rt1.c0 AS TEXT) AS REAL) FROM rt1, t0 WHERE (CAST(NULL COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT (((t0.c66) NOT BETWEEN (t0.c66) AND (rt1.c0)) IN (CHANGES())) FROM t0;SELECT DISTINCT CAST(CASE rt1.c0  WHEN 0.717611204394767 THEN rt1.c1 END AS BLOB), (~ (((rt1.c2) BETWEEN (rt1.c1) AND (t0.c66)))), ((((rt1.c0)IS(rt1.c2))) NOT BETWEEN (((((rt1.c2)OR(rt1.c1)))AND(rt1.c2))) AND (((rt1.c0) IS FALSE))) FROM rt1 WHERE ((((CAST(0.48464528721654065 AS NUMERIC), (((NULL)) BETWEEN ((NULL)) AND ((''))), (('-1533489592') ISNULL)))>((0xffffffffbb627efb, (+ (0.44980208935790267)), ((NULL)<>(x''))))));SELECT COUNT((((t0.c66, rt1.c2, t0.c66))>((rt1.c2, rt1.c2, 0.8025798521382778)))) OVER () FROM rt1 WHERE ((((('-845103978') NOT BETWEEN (x'') AND (NULL))) BETWEEN (((1640834730) NOTNULL)) AND (0.31797625452000944 COLLATE NOCASE))) LIMIT -1642022280;SELECT DISTINCT (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END IN (((rt1.c0) NOTNULL), NULL)) FROM t0, rt1 GROUP BY (+ (((((t0.c66)AND(rt1.c0)))OR(t0.c66)))), CASE (- (rt1.c1))  WHEN CASE rt1.c1  WHEN t0.c66 THEN t0.c66 END THEN rt1.c1 COLLATE RTRIM WHEN x'' THEN rt1.c1 COLLATE BINARY WHEN (rt1.c0 IN ()) THEN ((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) END, (((NOT (rt1.c1)))LIKE(((((((((t0.c66)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(t0.c66)))) LIMIT -1735833345 OFFSET -1778897700; -- 0ms;
SELECT (CASE WHEN rt1.c2 THEN t0.c66 END IN (t0.c66 COLLATE BINARY, t0.c66 COLLATE BINARY)) FROM rt1 WHERE (((0.6010975850294261) ISNULL));SELECT DISTINCT (((((rt1.c2) NOTNULL)))==(((t0.c66 IN ())))), (((((rt1.c1)AND(rt1.c1)))AND(t0.c66)) IN (HEX(rt1.c1))), ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)<=((- (rt1.c2)))) FROM t0, rt1 LIMIT 480775637 OFFSET 1635682623; -- 0ms;
SELECT ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END) IS FALSE) FROM t0, rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c1) IS TRUE) AS TEXT) FROM t0, rt1; -- 0ms;
SELECT DISTINCT COUNT(ABS(t0.c66)) FROM rt1 WHERE ((CAST(x'' AS NUMERIC) IN ()));SELECT DISTINCT ((x'4aa2')+(TYPEOF(rt1.c1))) FROM t0, rt1; -- 0ms;
SELECT ((((rt1.c0)OR(AVG(rt1.c0))))AND(CASE WHEN t0.c66 THEN '0.717611204394767' END)) FROM t0, rt1 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (CAST(x'' AS NUMERIC)) AND (((((((((0.06933369998045735)AND(x'')))OR(NULL)))AND(0x49f906fc890fefee)))AND('-1079348670'))))); -- 0ms;
SELECT ((((((t0.c66)IS NOT(rt1.c1)))OR(((rt1.c1)%(t0.c66)))))AND(t0.c66 COLLATE RTRIM)) FROM t0, rt1; -- 0ms;
SELECT ((CASE t0.c66  WHEN t0.c66 THEN rt1.c2 WHEN t0.c66 THEN 0.7871432299470486 WHEN '91702571' THEN rt1.c0 END)GLOB(COUNT(*))), TOTAL(((3.35056065E8)IS(rt1.c1)) COLLATE NOCASE) OVER (), ((CAST(rt1.c1 AS REAL)) NOTNULL) FROM rt1;SELECT DISTINCT rt1.c0 FROM rt1, t0; -- 0ms;
SELECT CASE CAST(rt1.c2 AS INTEGER)  WHEN t0.c66 THEN CAST(t0.c66 AS BLOB) END FROM t0 WHERE (((((('qAtI', 0.7490904981832075, NULL))>((1115552882, x'b0f9', NULL))))|(rtreenode(0.013946305569625395, x'aab3'))));SELECT CASE (((x'd448')) NOT BETWEEN ((t0.c66)) AND ((rt1.c2)))  WHEN (- (t0.c66)) THEN ((((rt1.c1)AND(t0.c66)))OR(rt1.c1)) END, ((x'')%(((rt1.c1) IS TRUE))), ((((x'') NOT BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c0 END) AND ((NOT (rt1.c2)))) FROM t0 WHERE (CASE x''  WHEN (NOT ('')) THEN ((0.8132358162600676)-(1635682623)) WHEN (496399527 IN ()) THEN (0.04638864935296638 IN ()) WHEN ((x'') NOT BETWEEN ('/''j') AND (NULL)) THEN (((0.34378174741341505))=((x''))) WHEN CASE '1558741958'  WHEN x'a7c7' THEN 'lZ㫳-' WHEN 0.2269875994970757 THEN x'' WHEN '-1151172869' THEN NULL END THEN ((0.6097178379878163) ISNULL) WHEN LIKELIHOOD(0X711c04b5, 0.31458908638340477) THEN (1163875313 IN (0.6097178379878163)) ELSE ((((NULL)AND(920622263)))OR(-1711869791)) END);SELECT (((((rt1.c2)&(rt1.c0))))>(((((rt1.c2)) BETWEEN ((t0.c66)) AND ((rt1.c1)))))), CAST((rt1.c2 IN ()) AS BLOB), STRFTIME(9.1702571E7, (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c2)<<(rt1.c1)), (+ (rt1.c0)), (+ (rt1.c1))) FROM t0;SELECT DISTINCT (- (AVG(rt1.c0))), SUM(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))) OVER ( PARTITION BY NULL, rt1.c1), CAST(((t0.c66) BETWEEN (rt1.c2) AND (rt1.c1)) AS NUMERIC) FROM rt1;SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)))OR(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN t0.c66 WHEN t0.c66 THEN rt1.c1 ELSE rt1.c2 END)))AND(((rt1.c2)&(rt1.c0)))), CAST(rt1.c1 COLLATE RTRIM AS BLOB), AVG(COALESCE(rt1.c1, t0.c66)) FROM rt1;SELECT DISTINCT CAST(UNLIKELY(rt1.c1) AS NUMERIC), rt1.c2 COLLATE BINARY COLLATE BINARY COLLATE RTRIM, ((('-1894303604' IN ()))<>(((rt1.c0)>(t0.c66)))) FROM rt1, t0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN ((NULL)||(0.2106382084849434)) ELSE CAST(NULL AS BLOB) END); -- 0ms;
SELECT DISTINCT ((((((((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END)OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(t0.c66)))OR(((rt1.c0) IS FALSE))))AND(CAST(t0.c66 AS TEXT))) FROM rt1, t0 WHERE ((2.089616711E9 COLLATE BINARY IN ())); -- 0ms;
SELECT ALL ((((((rt1.c0)AND(t0.c66)))OR(rt1.c0)))/(((t0.c66)|(t0.c66)))), (- (((t0.c66) NOTNULL))), (((rt1.c1, rt1.c0, rt1.c2, rt1.c1, rt1.c2)) BETWEEN ((((((t0.c66)OR(t0.c66)))AND(t0.c66)), ((rt1.c0)AND(rt1.c1)), '0.6832239769468749', SUM(t0.c66), x'')) AND ((CAST(t0.c66 AS TEXT), ((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)), SUM(rt1.c1), (rt1.c2 IN ()), GROUP_CONCAT(rt1.c2)))) FROM rt1 WHERE ((- (DATETIME('-279968783', x'd372', 0.2106382084849434))));SELECT DISTINCT FIRST_VALUE(CASE ((rt1.c1) IS TRUE)  WHEN (((rt1.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((t0.c66, 0x7c8d0547, 0.9723532586103826)) AND ((rt1.c2, rt1.c2, t0.c66))) THEN (rt1.c0 IN (rt1.c2)) WHEN (t0.c66 IN ()) THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c0) NOTNULL) THEN ((rt1.c1) BETWEEN (t0.c66) AND (rt1.c2)) END) OVER (), 723708688, json_insert((t0.c66 IN (x'', t0.c66)), rt1.c0 COLLATE NOCASE, (t0.c66 IN ()), ((((((((rt1.c2)OR(t0.c66)))AND(rt1.c2)))AND(t0.c66)))AND(t0.c66)), ((rt1.c2) NOTNULL)) FROM rt1, t0 WHERE ((NOT ((((('-1950182514')AND(NULL)))AND(0X13416889))))); -- 0ms;
SELECT DISTINCT ((((t0.c66 COLLATE RTRIM)AND(((t0.c66)<(rt1.c2)))))AND(rt1.c1 COLLATE RTRIM)) FROM rt1;SELECT DISTINCT CASE (((rt1.c0)) NOT BETWEEN ((t0.c66)) AND ((t0.c66)))  WHEN ((rt1.c2)AND(rt1.c2)) THEN ((rt1.c1) ISNULL) ELSE rt1.c1 COLLATE BINARY END, x'', LEAD(CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS BLOB), (- (CASE WHEN rt1.c0 THEN t0.c66 ELSE rt1.c2 END)), '	\r') OVER () FROM rt1, t0 WHERE (((x'' COLLATE NOCASE)OR((x'0559' IN ())))); -- 0ms;
SELECT DISTINCT ((((rt1.c0) ISNULL)) BETWEEN (((rt1.c2) NOTNULL)) AND (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))) FROM t0 WHERE (((('-1151172869', NULL, 0.3776523268365246)) NOT BETWEEN (('-355860113', NULL, 'Rp')) AND (('fH', x'', x'36bf'))) COLLATE NOCASE);SELECT DISTINCT LIKELIHOOD(DISTINCT rt1.c2 COLLATE NOCASE, 0.7487591735607656) FROM rt1 WHERE (x''); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CAST(((-785281128) BETWEEN (0xffffffffc23e75e2) AND ('')) AS TEXT)); -- 0ms;
SELECT DISTINCT TOTAL(rt1.c1 COLLATE NOCASE) OVER (), (((x'')AND(rt1.c2)) IN (((rt1.c1)%(t0.c66)))), ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(4.80775637E8)) COLLATE NOCASE FROM rt1;SELECT DISTINCT GLOB((((rt1.c1))>=((rt1.c1))), t0.c66) FROM rt1, t0 WHERE ((+ ((x'1dccdabe' IN ())))); -- 0ms;
SELECT DISTINCT AVG(((rt1.c0) NOT NULL)) FROM rt1, t0; -- 0ms;
SELECT (((~ (rt1.c0))) NOT BETWEEN (t0.c66 COLLATE BINARY) AND (((rt1.c2) NOT NULL))) FROM rt1, t0; -- 0ms;
SELECT ALL ((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))) NOTNULL), LAST_VALUE(((((rt1.c1)<(rt1.c0))) NOT NULL)) OVER (), (LIKE(rt1.c0, t0.c66) IN ()) FROM rt1, t0 WHERE (CASE WHEN CAST(0.013946305569625395 AS INTEGER) THEN ((((x'fba3fba1107d')OR(x'')))AND(x'c251')) WHEN ((('')) NOT BETWEEN (('')) AND ((x''))) THEN (('-1066739253')=(0.11188273040209451)) WHEN x'' THEN LIKELY(DISTINCT '684415626') ELSE HEX(0X7537fac3) END); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY t0.c66  NULLS FIRST), ((MAX(rt1.c0)) NOT BETWEEN (((t0.c66)LIKE(rt1.c0))) AND (rt1.c0)), CASE PRINTF(t0.c66, t0.c66, rt1.c2)  WHEN COUNT(*) THEN (((rt1.c0)) NOT BETWEEN ((t0.c66)) AND ((rt1.c2))) END FROM rt1, t0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY '' ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t0.c66 IN (rt1.c0)))OR(((((rt1.c0)OR(t0.c66)))OR(rt1.c1)))) FROM rt1 WHERE (0xffffffffb324ac27) ORDER BY ((((rt1.c2)||(rt1.c1))) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (CAST(NULL AS NUMERIC))) ASC  NULLS FIRST;SELECT DISTINCT SUM(rt1.c0) OVER ( ORDER BY ((((((((NULL)AND(SQLITE_VERSION())))OR(((rt1.c1)<<(rt1.c1)))))OR(((t0.c66) NOT NULL))))AND(((x'7e94') NOT BETWEEN (rt1.c2) AND (rt1.c1)))) DESC  NULLS LAST) FROM rt1, t0; -- 0ms;
SELECT ALL ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE RTRIM FROM rt1; -- 1ms;
SELECT ALL SUM(COALESCE(t0.c66, rt1.c2)), SUM(((t0.c66) IS TRUE)), ((((rt1.c1) NOTNULL))!=(CAST(NULL AS TEXT))), ((((MAX(t0.c66))OR((((t0.c66, t0.c66, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c1, t0.c66, rt1.c1))))))OR(MAX(NULL))), ((('0.3056766732712136'))<((t0.c66 COLLATE RTRIM))) FROM t0;SELECT ALL x'6cbf' FROM t0; -- 0ms;
SELECT ALL CASE MIN(x'')  WHEN (rt1.c0 IN ()) THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) END, ((((rt1.c1)||(rt1.c2))) IS TRUE), ((((((((TOTAL(rt1.c1))OR(((rt1.c2)<(rt1.c2)))))OR(((rt1.c0)IS(rt1.c1)))))OR(CASE WHEN t0.c66 THEN t0.c66 WHEN x'' THEN rt1.c1 WHEN rt1.c2 THEN t0.c66 END)))AND(CASE WHEN rt1.c2 THEN 0.3084903471814855 END)) FROM rt1, t0 INDEXED BY i33;SELECT DISTINCT ((((rt1.c0) NOT BETWEEN ('0^+n&X#') AND (t0.c66)))-(('u ' IN ()))), ((NULL)<(CAST(rt1.c2 AS REAL))), CAST(JULIANDAY(rt1.c0, x'', rt1.c0) AS BLOB) FROM t0, rt1 WHERE ((((~ (0.9460764018719657))) NOT BETWEEN (566052383) AND (0.806996921649266))); -- 0ms;
SELECT DISTINCT (rt1.c0 IN ()) COLLATE RTRIM COLLATE NOCASE, ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE RTRIM, CAST(MIN(rt1.c2) AS REAL) FROM t0, rt1 WHERE (((((NULL) BETWEEN (NULL) AND ('Z9')))-((((0.7551292392619977, NULL, 1.163875313E9)) NOT BETWEEN ((NULL, x'f9b0', 9.29124162137418E17)) AND (('뫞\', -506703500, 0.2331614756478475)))))); -- 0ms;
SELECT 0X1675a28b FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((((rt1.c0)OR(rt1.c2))) BETWEEN (((t0.c66) NOT BETWEEN (rt1.c0) AND (rt1.c0))) AND (rt1.c1)) FROM rt1, t0 WHERE (((((NULL)>(0.29656098746628734))) BETWEEN ((('496399527')>(NULL))) AND ((('')LIKE(-1.64202228E9))))) ORDER BY ((((((((((rt1.c2)LIKE(NULL)))OR(((rt1.c1)+(rt1.c0)))))OR(x'6e0d')))AND((rt1.c1 IN (t0.c66)))))OR(t0.c66)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT MIN(((rt1.c1)*(t0.c66))) FROM t0, rt1; -- 1ms;
SELECT DISTINCT (((('WY')AND(CASE WHEN t0.c66 THEN rt1.c1 END)))AND(TIME(rt1.c1, rt1.c0, t0.c66))) FROM rt1;SELECT TOTAL(x'9ab2' COLLATE BINARY) FROM t0 WHERE ((((('}x')&(NULL))) NOT BETWEEN ('1558741958' COLLATE NOCASE) AND (ABS(DISTINCT 0x37949998)))); -- 0ms;
SELECT DISTINCT ((rt1.c1) ISNULL) COLLATE BINARY, (- ((rt1.c1 IN ()))), ((((rt1.c2)<<(rt1.c2))) IS FALSE) FROM t0 WHERE (((((('-1711869791'))<>((0X74bdbade)))) NOT BETWEEN (HEX(x'')) AND ((('287125652') NOT BETWEEN (511952839) AND (0.866294717916454)))));SELECT ALL ((((rt1.c2)&(t0.c66)))>=(0x28cb5a8a)) FROM t0 WHERE ((~ (((NULL)>(''))))) ORDER BY ((((rt1.c1) BETWEEN (t0.c66) AND (rt1.c1)))OR(rt1.c0)) DESC  NULLS LAST;SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE ('KR'); -- 0ms;
SELECT DISTINCT (((((rt1.c1))<>((x'')))) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 END) AND (((((rt1.c1)OR(rt1.c2)))OR(t0.c66)))) FROM rt1, t0 GROUP BY ((CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)|(((t0.c66)IS NOT(rt1.c2)))) HAVING (~ (NULL)); -- 0ms;
SELECT DISTINCT (((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)) IN (rt1.c1)), COUNT(*) FILTER(WHERE x'') OVER (), (rt1.c2 COLLATE BINARY IN ()) FROM rt1, t0; -- 4ms;
SELECT ALL COUNT(*) OVER () FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((((rt1.c1) ISNULL)) IS TRUE), '', CASE WHEN UPPER(rt1.c1) THEN PRINTF(rt1.c2, rt1.c0, rt1.c2) END FROM t0;SELECT ALL (((((rt1.c0))>((rt1.c1)))) NOT BETWEEN ((rt1.c1 IN ())) AND (rt1.c0)) FROM t0;SELECT ((((((((((rt1.c1) NOT BETWEEN (t0.c66) AND (rt1.c0)))AND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))))OR((+ (rt1.c1)))))AND(COUNT(*))))OR(((rt1.c1)*(0.6528089203097265)))) FROM rt1 WHERE (932485528);SELECT DISTINCT ((COUNT(*)) IS TRUE) FROM t0, rt1 WHERE (((((0.38021382231040446) NOT BETWEEN (0X19c9d692) AND (x'a89d')))LIKE(LENGTH(NULL)))); -- 0ms;
SELECT ALL CASE ((rt1.c1) NOT NULL)  WHEN ((t0.c66)*(x'')) THEN (+ (rt1.c0)) ELSE rt1.c0 COLLATE BINARY END FROM t0, rt1 WHERE (((-1.7788977E9) NOT BETWEEN (NULL) AND (1.115552882E9)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((((((t0.c66) IS TRUE))AND(((((rt1.c1)AND(t0.c66)))AND('-2061179232')))))OR((('849691913')GLOB(rt1.c2)))))OR((rt1.c2 IN ()))))AND(ABS('-1159547597'))) FROM t0;SELECT ((((((rt1.c1) BETWEEN (rt1.c1) AND (t0.c66)))OR(((rt1.c0)==(t0.c66)))))AND((+ (0.2106382084849434)))), LAST_VALUE((~ (CASE WHEN x'' THEN rt1.c1 WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN '' WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) OVER (), (((t0.c66)) BETWEEN ((CASE WHEN t0.c66 THEN rt1.c1 WHEN rt1.c2 THEN t0.c66 WHEN rt1.c1 THEN rt1.c0 END)) AND ((t0.c66))) FROM rt1 ORDER BY (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE RTRIM DESC  NULLS LAST;SELECT DISTINCT CHANGES() FROM rt1, t0; -- 0ms;
SELECT DISTINCT COUNT(rt1.c1) OVER () FROM rt1 WHERE (CAST(NULLIF('', 0.817549774840229) AS NUMERIC)) ORDER BY (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) NOTNULL) ASC  NULLS LAST; -- 0ms;
SELECT ((- (t0.c66)) IN (((rt1.c0)==(rt1.c0)))), ((CASE WHEN rt1.c2 THEN t0.c66 END)||(((('Z9')) NOT BETWEEN ((NULL)) AND (('-691002016'))))), CASE x'7aa8'  WHEN rt1.c1 THEN rt1.c0 END COLLATE BINARY FROM rt1, t0; -- 0ms;
SELECT ((COUNT(t0.c66))GLOB((((rt1.c0))<>((rt1.c1))))) FROM rt1;SELECT (CAST(rt1.c1 AS REAL) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c2))=((rt1.c2))))|((rt1.c0 IN ()))) FROM rt1 WHERE (LIKELIHOOD(CAST('	' AS REAL), 0.24613376134165865)); -- 0ms;
SELECT DISTINCT SUM(CAST(rt1.c1 AS NUMERIC)) OVER () FROM t0 WHERE (NULL);SELECT DISTINCT LAG(542547879, ((PRINTF(0.2331614756478475, t0.c66, t0.c66))LIKE(((t0.c66) BETWEEN (t0.c66) AND (t0.c66)))), ((x'') BETWEEN (NULL) AND (x'34e0'))) OVER () FROM t0 WHERE (GLOB(CHAR(0.669238427278392), (((x'')) BETWEEN ((0.5229589256186625)) AND ((x''))))); -- 0ms;
SELECT DISTINCT NTH_VALUE((((('-506703500') BETWEEN (t0.c66) AND (t0.c66))) NOT BETWEEN ((((t0.c66))<((t0.c66)))) AND (UPPER(DISTINCT t0.c66))), CASE WHEN ((((t0.c66)OR(t0.c66)))AND(t0.c66)) THEN ((t0.c66)-(t0.c66)) WHEN CAST('' AS BLOB) THEN ((x'') NOT BETWEEN (t0.c66) AND (t0.c66)) WHEN ((t0.c66)GLOB(t0.c66)) THEN ((t0.c66) NOT NULL) ELSE (t0.c66 IN (t0.c66)) END) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES) FROM t0 WHERE ((((('-1778897700')|(0.8486976460702602)))*(((0.866294717916454) NOT NULL)))) LIMIT 1572723077 OFFSET -2139623512;SELECT DISTINCT (+ (CAST(rt1.c2 AS NUMERIC))) FROM t0;SELECT TRIM((((rt1.c2))<>((x'1ef2')))) FROM t0 WHERE (((DATETIME(0.2269875994970757, NULL, x'', NULL, 0.6156504321347053)) IS FALSE));SELECT ALL CAST(json_insert(rt1.c1, rt1.c0, t0.c66, rt1.c1, t0.c66) AS BLOB) FROM t0 WHERE ((((((1421731491))>=(('')))) NOT BETWEEN (((0x28cb5a8a)/('5330299315670740974'))) AND (((x'') NOT NULL)))) LIMIT 930952813;SELECT INSTR(rt1.c0 COLLATE NOCASE, CASE WHEN t0.c66 THEN t0.c66 WHEN t0.c66 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN t0.c66 WHEN t0.c66 THEN rt1.c1 ELSE rt1.c2 END) FROM rt1 WHERE (((((('0^+nLX#' IN ()))OR(((x'') NOT BETWEEN (x'74da') AND (0.37646880737903865)))))OR(CASE WHEN '-468187056' THEN 0.8053511964790929 WHEN '}&Q[Y' THEN 0.8486976460702602 WHEN NULL THEN 0.08621091321639418 END)));SELECT DISTINCT LAG((rt1.c0 COLLATE BINARY IN (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END, (rt1.c0 IN ()))), ((rt1.c1)OR(rt1.c1)) COLLATE NOCASE COLLATE BINARY, (((rt1.c1, rt1.c2, NULL)) BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)), (rt1.c1 IN ()), (('lJe+') ISNULL))) AND ((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)), ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)), RTRIM(rt1.c0))))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((((((((((rt1.c0)OR(x'')))OR(t0.c66)))OR(rt1.c2)))OR(t0.c66)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)), MIN(rt1.c2))) AND (((0Xfffffffff6e2845a IN ()), (+ (rt1.c2)), 'S[Du#1'))) FROM rt1;SELECT ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2))) IS TRUE), (+ (((rt1.c0) ISNULL))), ((((rt1.c2) IS FALSE)) NOT NULL) FROM t0 GROUP BY (((rt1.c2, rt1.c2, rt1.c1)) BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((''))), ((rt1.c1) NOTNULL), (~ (NULL)))) AND (((rt1.c1 IN ()), ((t0.c66) NOT NULL), CAST(rt1.c1 AS REAL)))), CASE t0.c66  WHEN ((t0.c66) IS FALSE) THEN (((x'', t0.c66, rt1.c1, NULL, rt1.c0))<>((rt1.c0, t0.c66, rt1.c0, rt1.c0, rt1.c0))) WHEN rt1.c0 COLLATE BINARY THEN CAST(rt1.c0 AS REAL) WHEN '0.04638864935296638' THEN rt1.c1 END, ((((rt1.c2 IN ())))>((CAST(rt1.c1 AS NUMERIC)))) LIMIT -876288571 OFFSET -694926397;SELECT DISTINCT ((CAST(rt1.c2 AS INTEGER))GLOB((- (rt1.c1)))) FROM rt1, t0 WHERE ((- (((x'')<=(NULL))))); -- 0ms;
SELECT DISTINCT MAX(((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)))AND(t0.c66)))OR(rt1.c1))), (((rt1.c2)<(rt1.c1)) IN ()), (((('0.31797625452000944')OR(x'1389' COLLATE RTRIM)))OR(((rt1.c2)&(rt1.c0)))) FROM t0, rt1; -- 0ms;
SELECT ALL (((rt1.c2)) NOT BETWEEN ((((rt1.c2)IS NOT(rt1.c2)))) AND ((COUNT(0.9891009507341451)))) FROM t0, rt1 ORDER BY ((rt1.c2 IN ()) IN ()); -- 0ms;
SELECT DISTINCT (rt1.c2 IN (t0.c66, rt1.c2)) COLLATE RTRIM FROM rt1;SELECT DISTINCT ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY, ((rt1.c1 COLLATE BINARY) NOT NULL), CAST(0.054574697527205895 AS INTEGER) FROM rt1, t0 NOT INDEXED WHERE (((((NULL)*(0.06933369998045735)))>>(CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (((~ (rt1.c1)))>(CASE t0.c66  WHEN NULL THEN rt1.c1 ELSE t0.c66 END)) FROM t0, rt1 WHERE (((((((((((((x'')OR(NULL)))OR('')))OR(((0.4058248821512187)<(x'62ef')))))OR((((('B賁G_R')OR(34818116)))OR(0.6786793446039152)))))OR(CASE WHEN x'' THEN NULL WHEN '1636422920' THEN NULL WHEN '<+WrdfT]G' THEN '1354983030' END)))OR((((x''))<((0.7521721421075169)))))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t0, rt1 LIMIT -2079138056 OFFSET 932485528; -- 0ms;
SELECT DISTINCT (~ (((((((((rt1.c1)OR(t0.c66)))OR(t0.c66)))OR(t0.c66)))AND(t0.c66)))) FROM rt1, t0; -- 0ms;
SELECT ALL x'' COLLATE NOCASE FROM rt1 WHERE (((((x'6862') IS TRUE)) ISNULL)) UNION ALL SELECT DISTINCT CASE (~ (rt1.c1))  WHEN CAST(rt1.c2 AS NUMERIC) THEN CAST(rt1.c0 AS BLOB) END FROM t0;SELECT json_array_length(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)), (- (rt1.c0))) FROM t0, rt1;SELECT 0.3247774558210835, ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (t0.c66)))<(((t0.c66)-(t0.c66)))), ((((rt1.c0)LIKE(rt1.c0)))/(rt1.c0 COLLATE RTRIM)) FROM rt1 UNION SELECT (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))&(((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c2)))), CAST((rt1.c1 IN ()) AS REAL), CAST(((rt1.c0) IS TRUE) AS INTEGER) FROM t0, rt1 WHERE (TRIM(((NULL)>=(0.15551681479512813)), CAST(0.38021382231040446 AS NUMERIC))) GROUP BY CASE ((t0.c66)-(rt1.c0))  WHEN ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))OR(t0.c66)))AND(rt1.c0)) THEN ((rt1.c1)/(0.9808217534726626)) ELSE (- ('175944869')) END, json_quote(CASE WHEN rt1.c1 THEN rt1.c1 END), ((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)) COLLATE NOCASE COLLATE BINARY, CASE ((t0.c66)-(rt1.c1))  WHEN (+ (rt1.c1)) THEN rt1.c2 COLLATE BINARY END, (CASE rt1.c2  WHEN rt1.c1 THEN 'H8' ELSE t0.c66 END IN ()) HAVING (((t0.c66 IN (t0.c66, rt1.c2))) BETWEEN (((t0.c66) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (((t0.c66)<<(rt1.c0)))) LIMIT -344634924;SELECT (((x'be3e')) BETWEEN ((((rt1.c0)&(rt1.c2)))) AND ((json_array(t0.c66, rt1.c1)))) FROM rt1;SELECT DISTINCT NULLIF(((rt1.c1) NOT NULL), COUNT(*)) FROM t0;SELECT DISTINCT ((((((((((rt1.c0)>(t0.c66)))AND(rt1.c0)))OR(NULLIF(DISTINCT rt1.c1, rt1.c1))))OR(CAST(rt1.c0 AS NUMERIC))))AND(MAX(rt1.c2))), MIN(((rt1.c0) BETWEEN (x'fea7') AND (t0.c66))), ((COALESCE(rt1.c0, rt1.c1)) NOT BETWEEN (((rt1.c0)!=(rt1.c2))) AND ((t0.c66 IN ()))) FROM t0 WHERE ((((0.90619185412237)) BETWEEN ((((1498481548) IS FALSE))) AND ((((x'')=(0.9052018037094764))))));SELECT ALL json(t0.c66 COLLATE BINARY), t0.c66, rt1.c2 COLLATE NOCASE FROM rt1, t0 WHERE (0.9460764018719657); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((rt1.c2)OR(-814038703)))AND(rt1.c0))) COLLATE RTRIM, (('')IS NOT(rt1.c0)) COLLATE BINARY, (((((NOT (rt1.c2)))OR(((rt1.c1)AND(rt1.c1)))))OR((+ (NULL)))) FROM rt1 WHERE ((((NULL)) NOT BETWEEN ((CASE 1701534653  WHEN '-2054971397' THEN '-1132584192' WHEN 0.25169854324717333 THEN 0.7984341794476272 WHEN x'' THEN NULL ELSE 0.9891009507341451 END)) AND ((((0.24725662634336276)<(0.893081239588882)))))); -- 0ms;
SELECT DISTINCT CAST(NULL AS BLOB) FROM t0 WHERE ((('333562183') NOT BETWEEN (0.3265112114471558) AND (x'93a3')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT t0.c66 FROM t0 WHERE (CAST(((0.11114400704567329)>=('\r幩%Fw\np6a')) AS REAL)); -- 0ms;
SELECT DISTINCT TRIM(((rt1.c2)==(t0.c66))) FROM rt1, t0 WHERE ((+ (0.00929693398179765 COLLATE NOCASE))); -- 1ms;
SELECT LAG(CAST(rt1.c2 COLLATE RTRIM AS REAL), MIN(((((rt1.c2)OR(rt1.c0)))OR(t0.c66)), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))), ((CAST(rt1.c2 AS NUMERIC))<<((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) OVER ( ORDER BY ((rt1.c2) BETWEEN (rt1.c2) AND (NULL)) COLLATE RTRIM ASC, (((CASE rt1.c0  WHEN rt1.c0 THEN t0.c66 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c66 THEN rt1.c2 ELSE rt1.c0 END, ((t0.c66) NOTNULL), (rt1.c0 IN ())))>((t0.c66, t0.c66 COLLATE RTRIM, ((rt1.c1)*(rt1.c1)))))  NULLS LAST) FROM t0, rt1; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM t0; -- 0ms;
SELECT (((((((0xffffffffb2a31ed4)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))OR((((rt1.c2, rt1.c1, rt1.c2))!=((rt1.c1, rt1.c2, x'4031'))))))OR(((rt1.c2)==(rt1.c0)))) FROM rt1, t0 WHERE (((GLOB('', ''))<=(((NULL)-(0.7871432299470486))))); -- 0ms;
SELECT DISTINCT ((((((((((((((((((((t0.c66)AND(rt1.c1)))AND(rt1.c2)))OR(t0.c66)))OR(rt1.c2)))AND(GROUP_CONCAT(t0.c66))))OR(((rt1.c0)OR(t0.c66)))))OR(rt1.c1)))OR((- (rt1.c2)))))OR('1849303125')))OR(ABS(t0.c66))), MAX(CAST(rt1.c0 AS INTEGER)), CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END COLLATE NOCASE FROM t0, rt1 ORDER BY x'f49d'  NULLS FIRST LIMIT -785281128 OFFSET -2134506320; -- 0ms;
SELECT DISTINCT SUBSTR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)), t0.c66 COLLATE BINARY) FROM rt1 WHERE (((~ (0.6269116789624956)) IN ()));SELECT (((0.9280012357469781, rt1.c1, rt1.c2, t0.c66, rt1.c1)) NOT BETWEEN ((((t0.c66)>>(rt1.c1)), rt1.c1 COLLATE NOCASE, x'', LIKELIHOOD(DISTINCT t0.c66, 0.5826085443532248), CAST(rt1.c0 AS BLOB))) AND ((CAST(rt1.c0 AS INTEGER), (('}&Q[Y') NOTNULL), (~ (t0.c66)), NULL, TRIM(DISTINCT rt1.c2, rt1.c1)))), ((((((((((rt1.c1) ISNULL))AND(rt1.c2)))OR(LIKELIHOOD(x'', 0.5773293121957398))))OR(rt1.c0)))AND(json(rt1.c0))), CASE WHEN CASE WHEN t0.c66 THEN rt1.c2 END THEN ((rt1.c2) IS TRUE) END FROM rt1 WHERE (CAST(NULLIF(0.5607962308795701, 0.40073097496362475) AS INTEGER));SELECT ALL NTH_VALUE(CASE (((rt1.c0, rt1.c2, rt1.c1))<((rt1.c2, t0.c66, t0.c66)))  WHEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) THEN LIKELY(DISTINCT rt1.c0) ELSE ((('-689268598')) BETWEEN ((t0.c66)) AND ((rt1.c1))) END, CAST((NOT (rt1.c1)) AS BLOB)) OVER () FROM rt1, t0 WHERE (((CAST(0.3657866540739301 AS REAL))!=(((NULL)*(0.5607962308795701))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c2) ISNULL) THEN ((rt1.c1)-(rt1.c2)) ELSE ((t0.c66) NOT NULL) END FROM rt1 WHERE (((CAST(NULL AS TEXT))<=((- (633613443)))));SELECT ALL x'' FROM rt1, t0; -- 0ms;
SELECT DISTINCT CAST(((rt1.c2) BETWEEN (t0.c66) AND (rt1.c1)) AS TEXT) FROM t0;SELECT DISTINCT x'', ((rt1.c0) BETWEEN (NULL) AND (rt1.c2)) COLLATE BINARY, NULL FROM t0, rt1 WHERE (((rtreenode(NULL, 1636422920)) ISNULL)); -- 0ms;
SELECT DISTINCT x'b6f2', COALESCE(DISTINCT rt1.c0 COLLATE BINARY, ((rt1.c2)<=(rt1.c1)), ((t0.c66)IS NOT(rt1.c0)), MIN(rt1.c2)), ((((rt1.c0)OR(rt1.c0)))OR('V^Cq?!䡞')) FROM t0, rt1; -- 0ms;
SELECT ALL FIRST_VALUE(t0.c66) OVER () FROM t0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), CAST(rt1.c1 AS TEXT) COLLATE RTRIM, ((((rt1.c1)|(rt1.c2))) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c2)GLOB(rt1.c1)))) FROM rt1 WHERE ((((0.8502004973321896)) NOT BETWEEN (((0x7537fac3 IN (NULL)))) AND ((((0.6582583415928253) NOT BETWEEN (0.5649735001273547) AND (x'688e')))))); -- 1ms;
SELECT rt1.c2 FROM t0, rt1; -- 0ms;
SELECT ALL ((((((((((((((t0.c66)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))OR(t0.c66)))OR(NULL)))AND(t0.c66)))||(((t0.c66)<(rt1.c2)))), RANK() OVER (), CASE NULLIF(rt1.c2, rt1.c0)  WHEN CAST(t0.c66 AS REAL) THEN CAST(rt1.c0 AS BLOB) WHEN ((t0.c66) NOT BETWEEN (rt1.c1) AND (t0.c66)) THEN (((t0.c66)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) WHEN ((rt1.c2)IS(34818116)) THEN ((t0.c66)<<(t0.c66)) ELSE rt1.c1 COLLATE BINARY END FROM t0, rt1; -- 0ms;
SELECT AVG(CASE WHEN t0.c66 THEN x'' END) FROM rt1, t0 WHERE ((((((NULL)OR(NULL)))OR(0.8479474866947999)) IN ())); -- 0ms;
SELECT DISTINCT (~ ((0.029122289417269798 IN (t0.c66)))) FROM rt1;SELECT (((CASE WHEN rt1.c1 THEN rt1.c0 ELSE '0.00929693398179765' END))>=((((rt1.c1) IS TRUE)))) FROM rt1 ORDER BY (- ((NOT (rt1.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT ((((t0.c66) NOT BETWEEN (rt1.c1) AND ('-2139623512')))IS NOT(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))) FROM rt1 WHERE (CAST('Gz(p' AS REAL) COLLATE RTRIM);SELECT DISTINCT CAST(((rt1.c1) BETWEEN (t0.c66) AND (t0.c66)) AS NUMERIC) FROM rt1, t0 WHERE (CAST(((x'')+(NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT (((NOT (rt1.c0)))IS NOT(t0.c66 COLLATE RTRIM)) FROM t0 WHERE (5.80405342E8);SELECT DISTINCT (- (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))), CAST(((rt1.c0) IS FALSE) AS NUMERIC), '0.' FROM rt1 ORDER BY ((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c1)))AND(t0.c66)))OR(t0.c66)))AND((rt1.c2 IN (rt1.c1))));SELECT DISTINCT (((rt1.c1)) BETWEEN ((NULL)) AND ((rt1.c0))), (((((rt1.c2)+(rt1.c0))))>=((((rt1.c2)>(rt1.c2))))), ((((((rt1.c2)AND('')))OR(t0.c66)))<<(((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))) FROM rt1;SELECT ALL CAST(json_valid(x'') AS BLOB) FROM t0, rt1; -- 0ms;
SELECT CASE WHEN rt1.c2 THEN 0x427dfc72 WHEN rt1.c1 THEN t0.c66 WHEN rt1.c2 THEN rt1.c1 END COLLATE BINARY FROM t0 WHERE (((((NULL))>(('-279968783'))) IN ((('333562183')=('lS\r/>dQ')), ((x'') NOT NULL)))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (t0.c66)) AS TEXT) ASC;SELECT DISTINCT LAG(CASE t0.c66  WHEN rt1.c0 THEN rt1.c2 ELSE x'696e' END, ((x'' COLLATE NOCASE)<>((~ (rt1.c0)))), t0.c66) OVER () FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((((t0.c66) BETWEEN (rt1.c2) AND (rt1.c1)))>>(json_array_length(539347264))) FROM rt1, t0 WHERE (((((SUBSTR(0.5164442087755299, '	\r'))AND((-952335601 IN ('0.5433673338249122', '1748236651')))))OR(NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((CAST(t0.c66 AS INTEGER))OR((((rt1.c0, rt1.c1, t0.c66))<((rt1.c0, rt1.c1, 0.15720771082351248))))))AND(CAST(rt1.c2 AS NUMERIC))) FROM rt1, t0 WHERE ((((17315561)%(NULL)) IN ((((0.3421954989976277, '0.8025798521382778', '1406728346')) BETWEEN ((x'', '}x', 0.9860879370560843)) AND (('A#/[?L⃟\n', NULL, NULL)))))); -- 0ms;
SELECT ALL ((((x'')|(rt1.c0))) IS TRUE) FROM rt1 WHERE ((NOT (0.02007693624338236 COLLATE RTRIM))) GROUP BY (CAST(t0.c66 AS NUMERIC) IN ()) HAVING ((rt1.c0)<>(rt1.c0)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT rt1.c1, ((((((((rt1.c1)AND((((rt1.c2))<=((rt1.c0))))))OR(((rt1.c1) NOT NULL))))AND(rt1.c0 COLLATE BINARY)))AND(((rt1.c2)>(rt1.c1)))), ((x'b716') NOT NULL) FROM t0 ORDER BY (((((t0.c66))=((rt1.c2)))) ISNULL) ASC LIMIT -2147235422;SELECT COUNT(*) FILTER(WHERE (+ (t0.c66))) OVER () FROM rt1, t0 WHERE ((~ ((('') IS TRUE)))); -- 0ms;
SELECT ALL CAST(rt1.c0 COLLATE BINARY AS NUMERIC) FROM rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c0)|(t0.c66))) OVER () FROM t0, rt1 WHERE ((- ((((0.5212022165218526)) BETWEEN (('()')) AND (('璧INFINITY\r*KGG*')))))); -- 0ms;
SELECT ALL ((rt1.c2 IN ()) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT CAST((rt1.c1 IN ()) AS BLOB), ABS(((((((((rt1.c2)AND(t0.c66)))AND(rt1.c0)))OR(t0.c66)))AND(t0.c66))), CASE WHEN rt1.c2 THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE t0.c66 END END FROM t0, rt1 ORDER BY CASE WHEN t0.c66 THEN rt1.c0 END COLLATE RTRIM ASC; -- 0ms;
SELECT DISTINCT (((((NULL))>=((rt1.c1))))>>((t0.c66 IN ()))) FROM t0 WHERE (((CAST(NULL AS INTEGER)) NOT BETWEEN (((-8.14038703E8) ISNULL)) AND ((- (NULL)))));SELECT DISTINCT 0.36841432803576135 FROM rt1 WHERE (CASE (((x''))>=(('-1538077420')))  WHEN CAST(NULL AS REAL) THEN '684415626' COLLATE NOCASE WHEN (~ (x'bde2')) THEN ((x'86c8') BETWEEN (0.6774404620867475) AND (x'')) WHEN (NOT ('')) THEN 0.17716156597079213 COLLATE NOCASE WHEN CAST(1.849303125E9 AS TEXT) THEN ((((-6.91002016E8)AND(1.7976931348623157E308)))AND(NULL)) WHEN json_insert(0x50c36676, 5.66052383E8, x'9027') THEN (('m]') IS FALSE) ELSE (NOT (NULL)) END); -- 0ms;
SELECT ALL (((NOT ('0.866294717916454')))IS NOT(((t0.c66) ISNULL))), NULL, GROUP_CONCAT(((rt1.c2)OR(rt1.c0))) OVER () FROM t0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((CAST(t0.c66 AS REAL))/(CASE WHEN rt1.c2 THEN rt1.c0 END)) FROM rt1;SELECT DISTINCT (~ (COUNT(t0.c66))), ((CAST(rt1.c0 AS BLOB)) IS FALSE), (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (t0.c66))))>=((GROUP_CONCAT(x'')))) FROM rt1;SELECT DISTINCT json(0xffffffffbae2b533) FROM t0 WHERE (((CAST('V^Cq?!䡞' AS NUMERIC))<(CASE WHEN '1533416515' THEN 0.5700348528104054 END))); -- 0ms;
SELECT SUBSTR(((rt1.c1) NOT NULL), (((((((('ᠸF3')AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c2))), (((t0.c66) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()), t0.c66 FROM t0 WHERE (((((((('-644748931')OR('0.')))OR(0.35037748463300555))))<=(((('') NOT BETWEEN (x'') AND ('-1774342148'))))));SELECT DISTINCT MIN((~ (rt1.c1))) FROM rt1, t0 WHERE (((((x'dd04') ISNULL))>>(((x'')*(0.2716270134371188))))); -- 0ms;
SELECT ALL (((rt1.c0))<=((((t0.c66) NOT NULL)))) FROM t0;SELECT (((NULL, rt1.c1, t0.c66)) NOT BETWEEN ((((t0.c66) BETWEEN (rt1.c0) AND (t0.c66)), ((rt1.c2)-(rt1.c1)), CAST(rt1.c1 AS BLOB))) AND ((LIKELIHOOD(DISTINCT t0.c66, 0.6860733744739357), x'2df6', ((rt1.c2)IS('-1886261186'))))), FIRST_VALUE(rt1.c1) OVER ( ROWS BETWEEN ((((((((((rt1.c2) NOT BETWEEN (t0.c66) AND (rt1.c1)))OR(((rt1.c2)>(rt1.c0)))))OR((~ (t0.c66)))))OR(((rt1.c1)%(rt1.c1)))))OR(CAST(rt1.c2 AS TEXT))) PRECEDING AND  CURRENT ROW EXCLUDE TIES), (((HEX(DISTINCT rt1.c0)))!=(('Rf' COLLATE NOCASE))) FROM rt1;SELECT DISTINCT '\K8~TU㫳', ((t0.c66)+(rt1.c0)) COLLATE NOCASE COLLATE BINARY, COUNT(*) OVER () FROM rt1 WHERE ((~ (0.12272982702400559 COLLATE NOCASE))) LIMIT 2025957036;SELECT DISTINCT UPPER(DISTINCT rt1.c1 COLLATE BINARY) FROM rt1, t0; -- 0ms;
SELECT DISTINCT (((rt1.c2, rt1.c2, t0.c66)) BETWEEN ((rt1.c2, (t0.c66 IN ()), '1572723077')) AND ((CASE WHEN rt1.c2 THEN rt1.c1 END, t0.c66, (((rt1.c1)) NOT BETWEEN ((0xffffffffdb7ab1de)) AND ((rt1.c1)))))) FROM t0, rt1 WHERE ((('-316419819') NOT BETWEEN ((((NULL, x'', 0.1885101922401604))<=(('1406728346', '', '')))) AND ((((x'95d6', NULL, NULL))<((x'', NULL, '')))))); -- 0ms;
SELECT t0.c66, AVG(CAST(t0.c66 AS NUMERIC)), (((t0.c66) BETWEEN (rt1.c1) AND ('1154328501')) IN ()) FROM t0, rt1 WHERE ((((((x''))>=((NULL))))IS NOT(CASE WHEN ')b-뤌v<G' THEN 0.40075194946035986 ELSE '542547879' END))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c1)>>(rt1.c1)) AS TEXT) FROM t0, rt1 WHERE (((x'08a4')%(x'719ed1f3')) COLLATE NOCASE); -- 0ms;
SELECT ((((rt1.c2) ISNULL))>((rt1.c0 IN ()))), AVG(((((((((rt1.c0)AND(t0.c66)))AND(rt1.c0)))AND(t0.c66)))OR(rt1.c2)) COLLATE NOCASE) FILTER(WHERE CASE WHEN CAST(743100593 AS TEXT) THEN CASE WHEN t0.c66 THEN rt1.c2 END ELSE (~ (rt1.c0)) END) OVER (), ((((rt1.c0, rt1.c1, t0.c66)) NOT BETWEEN ((x'', rt1.c2, '8T')) AND ((rt1.c0, t0.c66, rt1.c0))) IN ((rt1.c2 IN ()))) FROM rt1, t0 WHERE ((NOT (((((x'')AND('-886050955')))AND(NULL))))); -- 0ms;
SELECT DISTINCT LEAD((((- (rt1.c1))) NOTNULL), CAST(((t0.c66) BETWEEN (rt1.c2) AND (rt1.c1)) AS NUMERIC), ((rt1.c0) IS FALSE) COLLATE BINARY) OVER (), (CAST(rt1.c2 AS REAL) IN (CAST(rt1.c1 AS INTEGER))), (((((rt1.c2)>>(rt1.c1))))>(((((rt1.c2))<=((t0.c66)))))) FROM rt1, t0 WHERE (CAST('y仈' AS NUMERIC) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) AS NUMERIC) FROM rt1 WHERE (CASE WHEN json_extract('', NULL, x'', 0.42562525438634835) THEN ((((x'')OR(0.4545593359273741)))AND(x'')) WHEN ((NULL) NOT BETWEEN (x'9bea') AND (0.42562525438634835)) THEN CAST(' QA鰥' AS NUMERIC) WHEN CAST(NULL AS INTEGER) THEN NULL COLLATE BINARY ELSE UNLIKELY(x'7981') END);SELECT ALL ((NULL)!=(((rt1.c1) NOT BETWEEN (t0.c66) AND (t0.c66)))), rt1.c1, COUNT(*) FROM t0, rt1 GROUP BY CASE WHEN ((x'') IS TRUE) THEN (~ (rt1.c1)) END; -- 0ms;
SELECT ((('1954961788') BETWEEN (t0.c66) AND (rt1.c0)) IN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) FROM t0 WHERE (((json(NULL))!=(((x'3863') ISNULL))));SELECT DISTINCT CASE WHEN ((rt1.c2)IS(rt1.c1)) THEN ((rt1.c1)*(rt1.c2)) WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN (~ (rt1.c1)) WHEN (t0.c66 IN (t0.c66, t0.c66, rt1.c0)) THEN (t0.c66 IN ()) WHEN (((rt1.c2))==((rt1.c2))) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (t0.c66)) END FROM rt1 WHERE (((((0.7139937113100218)=(x'')))-(((0.5176414410689271)GLOB(0.04638864935296638))))) GROUP BY CAST(((((((((((((rt1.c0)AND(t0.c66)))OR(t0.c66)))AND(t0.c66)))AND(t0.c66)))AND(rt1.c2)))OR(t0.c66)) AS INTEGER);SELECT t0.c66, CAST('g' AS INTEGER), CAST(((rt1.c0)IS(rt1.c2)) AS BLOB) FROM rt1, t0 WHERE ((NOT ('-1886261186')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((rt1.c2 COLLATE NOCASE))!=(((NOT (rt1.c0))))) FROM t0 WHERE (x'');SELECT DISTINCT t0.c66, rt1.c2, (CASE x''  WHEN NULL THEN t0.c66 WHEN rt1.c2 THEN NULL WHEN t0.c66 THEN rt1.c2 ELSE rt1.c0 END IN (rt1.c0 COLLATE RTRIM)) FROM t0, rt1 GROUP BY CASE WHEN t0.c66 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY HAVING (((((NOT (rt1.c0)))OR(((rt1.c0) NOT BETWEEN ('-574462569') AND (rt1.c0)))))AND('-876288571')); -- 0ms;
SELECT DENSE_RANK() OVER (), SUM((((rt1.c1))<((rt1.c0))) COLLATE RTRIM) OVER (), (((CASE t0.c66  WHEN rt1.c2 THEN t0.c66 WHEN rt1.c0 THEN t0.c66 WHEN rt1.c0 THEN rt1.c1 END, (NOT ('X䔅')), ((rt1.c0)||(rt1.c2))))>=((rt1.c0, ((t0.c66) IS FALSE), ((t0.c66)||(rt1.c0))))) FROM t0;SELECT COUNT(((rt1.c1)IS(rt1.c1))) OVER () FROM rt1, t0 ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (t0.c66) AND (rt1.c0)) THEN t0.c66 END  NULLS LAST; -- 0ms;
SELECT DISTINCT rtreenode(0X78c1a6ac, (rt1.c2 IN ())), ((x'cee7d652' COLLATE BINARY)IS((((rt1.c1))<((t0.c66))))), ((((((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)AND(CAST(rt1.c2 AS TEXT))))OR(((('gP9ⲃ8뇈d')) BETWEEN ((x'')) AND ((rt1.c0))))))AND(COUNT(rt1.c2))))OR(CAST(rt1.c2 AS NUMERIC))) FROM rt1, t0; -- 1ms;
SELECT MAX(rt1.c2), RANK() OVER (), ((((((rt1.c0) NOTNULL))AND(rt1.c0 COLLATE RTRIM)))AND(UNLIKELY(rt1.c0))) FROM rt1, t0 GROUP BY CAST(t0.c66 AS NUMERIC) COLLATE BINARY HAVING t0.c66; -- 0ms;
SELECT CASE ((rt1.c1)<>(rt1.c2))  WHEN rt1.c0 THEN ((rt1.c0)/(rt1.c1)) END FROM rt1 ORDER BY ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))=(rt1.c0)); -- 0ms;
SELECT DISTINCT rt1.c2, rt1.c0, (((rt1.c2)) NOT BETWEEN ((((rt1.c1) ISNULL))) AND (((NOT (rt1.c1))))) FROM t0 WHERE (((((0xffffffff9568f7c5)=('\n#C9*'))) BETWEEN ((NOT (NULL))) AND (((x'') BETWEEN (x'7ae6') AND ('17315561')))));SELECT DISTINCT FIRST_VALUE(((t0.c66 COLLATE NOCASE)+(((t0.c66) NOT BETWEEN (rt1.c0) AND (t0.c66))))) OVER (), (COUNT(*) IN (TRIM(rt1.c0), ((t0.c66) NOTNULL))), rt1.c1 COLLATE RTRIM FROM t0, rt1 ORDER BY TYPEOF(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))) ASC  NULLS FIRST; -- 3ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN t0.c66 WHEN rt1.c0 THEN '-921746138' WHEN t0.c66 THEN rt1.c0 ELSE rt1.c2 END)) AND ((((t0.c66) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) FROM rt1;SELECT DISTINCT (- (CAST(rt1.c1 AS NUMERIC))) FROM t0, rt1 WHERE (CAST(CAST(NULL AS REAL) AS INTEGER)) LIMIT -2061179232; -- 0ms;
SELECT 0Xffffffffbdf74f0f, (((t0.c66)IS(rt1.c0)) IN ()), rt1.c1 FROM t0 WHERE (((0x7cfdfd0f) IS FALSE));SELECT ALL CAST(((t0.c66) IS FALSE) AS BLOB) FROM t0; -- 0ms;
SELECT GROUP_CONCAT(((rt1.c0)>>(rt1.c0))) OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE NO OTHERS) FROM t0 WHERE (x'a3e6');SELECT DISTINCT ((rt1.c2)<(t0.c66)) COLLATE NOCASE, ((((((rt1.c0)IS(t0.c66)))AND(((rt1.c0) BETWEEN (0.6774404620867475) AND (rt1.c2)))))OR((+ (rt1.c0)))), ((((CASE WHEN t0.c66 THEN rt1.c0 END)AND(((((((((t0.c66)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))))AND(((t0.c66)>>(t0.c66)))) FROM t0 WHERE (((((x'') NOT BETWEEN ('-1735833345') AND (0x1af8115c)))LIKE(((0.7660625930227707)>=('-678879648')))));SELECT DISTINCT ((MIN(rt1.c2)) NOT BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))) AND (rt1.c2 COLLATE NOCASE)) FROM rt1, t0 ORDER BY ((((((rt1.c2))<=((rt1.c0))), ((((t0.c66)OR(rt1.c0)))OR(t0.c66)), (NOT (0X2c30a5e))))<(((rt1.c1 IN (t0.c66)), (~ (rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN t0.c66 THEN t0.c66 WHEN rt1.c1 THEN rt1.c2 ELSE t0.c66 END))), (((rt1.c1 IN (rt1.c1, rt1.c0))) IS TRUE) DESC  NULLS FIRST, ((NULLIF(t0.c66, rt1.c2))>(t0.c66)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CASE rt1.c2  WHEN rt1.c2 THEN t0.c66 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN x'100e' ELSE rt1.c0 END) NOT BETWEEN ((- (t0.c66))) AND (x'')) FROM rt1, t0 WHERE (((0.9179892857608976)*(((0.5059710723003216)>('-1808984008'))))) LIMIT 1476991871 OFFSET 1344944883; -- 0ms;
SELECT rt1.c0 FROM t0;SELECT DISTINCT CAST(((rt1.c1)==(rt1.c1)) AS BLOB), rt1.c2, t0.c66 FROM rt1, t0; -- 1ms;
SELECT DISTINCT CAST(rt1.c0 AS NUMERIC) FROM t0, rt1; -- 0ms;
SELECT DISTINCT json_array_length(rt1.c0 COLLATE BINARY) FROM rt1, t0; -- 0ms;
SELECT DISTINCT LEAD(CAST(((((t0.c66)OR(t0.c66)))AND(3.33562183E8)) AS REAL), t0.c66 COLLATE NOCASE, t0.c66) OVER () FROM t0 WHERE ((+ ((('')>=(''))))); -- 0ms;
SELECT (((rt1.c2 IN (rt1.c0))) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (CAST(rt1.c0 AS BLOB))) FROM rt1 WHERE (((((('')) BETWEEN (('')) AND ((NULL))))==(CASE WHEN 0.07016016559803606 THEN NULL WHEN 'lS\r/>dQ' THEN x'' WHEN '-]' THEN 0xffffffff9079c1be END))); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c2)OR(rt1.c0)))AND(t0.c66)))OR(rt1.c1)))AND(rt1.c0)))>(((t0.c66)<(rt1.c1)))), (- (CAST(rt1.c2 AS REAL))), ((((rt1.c1)+(t0.c66))) ISNULL) FROM rt1;SELECT ((((CAST(rt1.c1 AS TEXT))OR(((rt1.c1)IS NOT(t0.c66)))))OR((((rt1.c1))>=((rt1.c1))))) FROM rt1 GROUP BY (((rt1.c1)) NOT BETWEEN ((CAST(t0.c66 AS TEXT))) AND (((t0.c66 IN (0xffffffff830c54fd))))) HAVING rt1.c2;SELECT DISTINCT (((rt1.c0)LIKE(t0.c66)) IN (((((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))AND(t0.c66)))AND(rt1.c2)))) FROM t0;SELECT DISTINCT '>&/{MAM2x' FROM t0 WHERE (((((('wq'))<>((x''))))GLOB(((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT (((rt1.c0, rt1.c1, rt1.c2))>((rt1.c2, t0.c66, rt1.c2))) COLLATE RTRIM FROM rt1, t0 WHERE ((((x'')+(-1.036093982E9)) IN ())); -- 0ms;
SELECT (((((((((((rt1.c0)OR(rt1.c0)))OR(t0.c66)))AND(rt1.c2)))AND(rt1.c0))))<=((((t0.c66) NOT NULL)))), (NOT (((rt1.c0) ISNULL))), ((rt1.c1)%(((((rt1.c0)OR(rt1.c2)))AND(0X5951038c)))) FROM t0, rt1 WHERE (COALESCE(DISTINCT '458913014', 1.163875313E9) COLLATE NOCASE) GROUP BY 0.8670076946882762 COLLATE NOCASE; -- 1ms;
SELECT DISTINCT (((t0.c66, rt1.c1, rt1.c1)) NOT BETWEEN ((((rt1.c1)<(0.4677194886680929)), (t0.c66 IN (rt1.c0)), (((rt1.c1))<>((rt1.c1))))) AND (((t0.c66 IN ()), ((t0.c66)>(rt1.c0)), NULLIF(DISTINCT t0.c66, rt1.c1)))) FROM t0 WHERE (((((0.7202574468752134) IS TRUE)) IS FALSE));SELECT t0.c66 FROM rt1 ORDER BY (((((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR('nOFo3')))OR(rt1.c1))))>((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0))))) DESC, 0Xffffffff9079c1be;SELECT DISTINCT (~ (CASE rt1.c2  WHEN rt1.c2 THEN 0.44723174595644277 WHEN rt1.c2 THEN t0.c66 WHEN rt1.c0 THEN rt1.c0 ELSE '0.3421954989976277' END)), (- (rt1.c0 COLLATE RTRIM)), CAST(((t0.c66)&(rt1.c0)) AS TEXT) FROM rt1 WHERE ((((('[G')>(x'cb61')))>>((('') NOTNULL))));SELECT DISTINCT LAST_INSERT_ROWID() COLLATE RTRIM FROM rt1, t0 WHERE (load_extension(ABS(x'777d'), x''));SELECT DISTINCT (((rt1.c1) IS TRUE) IN ()) FROM t0, rt1 WHERE (HEX(DISTINCT ('1772917533' IN ()))); -- 0ms;
SELECT UPPER(DISTINCT rt1.c2), ((((rt1.c1) IS FALSE))*(CASE WHEN t0.c66 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN x'2ef2' ELSE rt1.c0 END)), (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END IN ()) FROM rt1;SELECT CAST(MAX(t0.c66) AS TEXT) FROM t0 WHERE (((x'' IN ('')) IN (((NULL)/(x''))))); -- 0ms;
SELECT DISTINCT '-1935547414', (((rt1.c1 IN ())) NOT BETWEEN (((t0.c66) BETWEEN ('-1763258420') AND (t0.c66))) AND (((rt1.c1) NOTNULL))), COUNT(*) FROM rt1, t0 WHERE (((((NULL)||('c''h䆪3J3*'))) IS TRUE)) GROUP BY CASE ((x'a6b6d15e')LIKE(rt1.c1))  WHEN ((rt1.c1) NOT NULL) THEN ((rt1.c1) NOT NULL) END; -- 0ms;
SELECT ALL NTH_VALUE(((((t0.c66)<(rt1.c2))) NOT BETWEEN (((t0.c66) NOT NULL)) AND (((t0.c66)>(rt1.c1)))), ((NULLIF(t0.c66, rt1.c0))OR(rt1.c1))) OVER ( PARTITION BY CAST(((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)) AS REAL), ((((((((t0.c66)OR(rt1.c2)))AND(t0.c66)))OR(t0.c66)))OR(t0.c66)) COLLATE RTRIM, x'', (NOT (((t0.c66) BETWEEN (rt1.c1) AND (rt1.c1))))) FROM t0, rt1 WHERE ((((x'0335db18')) NOT BETWEEN ((((x'')&('I3W')))) AND (((NULL IN ()))))) LIMIT -903286487 OFFSET -173029013; -- 0ms;
SELECT (x'' COLLATE NOCASE IN (CAST(t0.c66 AS TEXT))) FROM rt1, t0 WHERE ((((('')*(194493363)))|(((('1'))>=((0xffffffffa6d2d28c)))))); -- 0ms;
SELECT DENSE_RANK() OVER (), (((rt1.c2)>=(t0.c66)) IN ()), CASE WHEN (((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((t0.c66, rt1.c2, 0.6701645455613898)) AND ((1.7315561E7, -1151172869, x'd305'))) THEN COUNT(*) END FROM rt1;SELECT AVG(highlight(t0.c66, rt1.c0, 0.5686569637164145, rt1.c0)), CASE ((((((((t0.c66)OR(rt1.c2)))OR(rt1.c2)))OR(t0.c66)))OR(rt1.c1))  WHEN ((rt1.c1) NOTNULL) THEN ((rt1.c2) ISNULL) END, (rt1.c0 IN ()) COLLATE NOCASE FROM t0;SELECT ALL ((((((t0.c66)AND(t0.c66)))OR(t0.c66))) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (((((x'')AND(rt1.c0)))OR(t0.c66)))) FROM t0 WHERE ((((~ (0.7926872206273068)))*(SQLITE_VERSION())));SELECT DISTINCT (~ ((- (rt1.c1)))) FROM rt1 WHERE ((((((((((((((1000830999 IN ()))OR((('')%('')))))AND(((((-0.0)AND('')))OR('-1871068738')))))AND((((('125971852')AND(x'')))AND(x'c1981616')))))OR((((0X44e09576)) BETWEEN ((NULL)) AND ((1354983030))))))OR(COALESCE(NULL, 0.26835468621977066))))AND(((NULL)OR(x''))))); -- 0ms;
SELECT DISTINCT (((t0.c66)|(rt1.c0)) IN ()), ((((((rt1.c2)AND(rt1.c0)))OR(t0.c66)))OR((x'' IN ()))), CAST(((((rt1.c2)AND(rt1.c2)))OR(t0.c66)) AS REAL) FROM rt1 WHERE (CASE ((('539347264', 0.5248984089356883, 0.537343865538022))<((0.8176747066124864, 0.29039872624102536, 0.029122289417269798)))  WHEN (NULL IN ()) THEN ((('-2054971397', x'', 0X297385f))>=(('W', NULL, ''))) END);SELECT DISTINCT ((((UPPER(DISTINCT rt1.c0))AND(DATETIME(t0.c66, t0.c66, rt1.c2, '|', rt1.c1, rt1.c2, rt1.c0))))AND(((rt1.c0)IS NOT(rt1.c0)))), ((t0.c66)>(((((((((t0.c66)OR(t0.c66)))AND('')))AND(rt1.c1)))OR(rt1.c0)))), TOTAL(CASE WHEN t0.c66 THEN t0.c66 END) OVER () FROM t0 WHERE (CAST('' AS TEXT));SELECT ALL (((((t0.c66) NOT BETWEEN (NULL) AND (x'')), GROUP_CONCAT(rt1.c0), CAST(x'' AS REAL)))>((x'', (((rt1.c1)) NOT BETWEEN ((t0.c66)) AND ((rt1.c1))), ((rt1.c2)+(t0.c66))))) FROM rt1, t0 WHERE ((((('' COLLATE NOCASE)OR(((NULL)GLOB(3.23053705E8)))))AND(x'92bf'))); -- 0ms;
SELECT DISTINCT '1364849598' FROM t0, rt1; -- 0ms;
SELECT ((HEX(t0.c66)) ISNULL) FROM rt1 WHERE ((- (((' G51e500000[')%(0x78c1a6ac))))) GROUP BY (((rt1.c0, rt1.c0, rt1.c2)) BETWEEN ((((t0.c66) NOT NULL), (((rt1.c1, rt1.c2, rt1.c1, t0.c66, t0.c66))<=((0.0811681710083001, rt1.c0, NULL, t0.c66, rt1.c0))), ((rt1.c1) BETWEEN (rt1.c1) AND (t0.c66)))) AND ((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))OR(t0.c66)), (rt1.c2 IN ()), ((((t0.c66)AND(rt1.c2)))OR(t0.c66)))));SELECT ALL AVG((((t0.c66))>=((rt1.c0)))), MIN(((rt1.c0)&(t0.c66))), (((rt1.c1) IS TRUE) IN ()) FROM t0, rt1; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c66 AS NUMERIC) AS INTEGER), UNICODE(MIN(rt1.c1)), ((t0.c66 COLLATE NOCASE)/(((t0.c66) IS TRUE))), TOTAL('1078430034'), rt1.c1 FROM rt1, t0 WHERE (LOWER((x'' IN (x'')))) UNION ALL SELECT DISTINCT ((((rt1.c0)OR(t0.c66)))OR(rt1.c2)) COLLATE NOCASE, GROUP_CONCAT(((rt1.c2) IS FALSE)) OVER (), NTH_VALUE((NOT (x'')), ((((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c2))) BETWEEN (rt1.c2) AND (NULLIF(rt1.c2, rt1.c0)))) OVER (), CASE (((rt1.c2))<=((rt1.c0)))  WHEN rt1.c0 THEN (((rt1.c0))<=((t0.c66))) ELSE rt1.c2 COLLATE RTRIM END, (((+ (rt1.c1))) NOT BETWEEN ((~ (0.42562525438634835))) AND (CASE rt1.c0  WHEN t0.c66 THEN rt1.c2 WHEN t0.c66 THEN t0.c66 WHEN t0.c66 THEN rt1.c1 ELSE rt1.c2 END)) FROM rt1;SELECT MIN(COUNT(*)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM, COUNT(((0.05931042026131306)|(rt1.c2))), ABS(((((rt1.c1)AND(5.15828496E8)))OR('-1874776289'))), x'' FROM t0;SELECT ((((rt1.c1)OR(rt1.c2))) BETWEEN (0.6582583415928253) AND (rt1.c2)) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND('')))AND(((rt1.c0)<=(t0.c66)))))OR(CASE rt1.c1  WHEN t0.c66 THEN '1533416515' WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END)) FROM t0;SELECT DISTINCT GROUP_CONCAT(rt1.c2) OVER () FROM rt1, t0; -- 0ms;
SELECT DISTINCT (((rt1.c0 COLLATE RTRIM))>=((((rt1.c1) BETWEEN (t0.c66) AND (0.07775211952762928))))), CAST(('-139641846' IN ()) AS BLOB), ((LIKELIHOOD(rt1.c1, 0.17992797194451904)) BETWEEN (CAST(rt1.c1 AS REAL)) AND (CAST(rt1.c0 AS NUMERIC))) FROM t0 WHERE ((1572723077 COLLATE NOCASE IN ())) GROUP BY (- ((((rt1.c2))<((rt1.c2))))), ((highlight(rt1.c0, t0.c66, t0.c66, rt1.c1)) NOT NULL), ((rt1.c0)+(rt1.c1)) COLLATE RTRIM HAVING rt1.c1;SELECT (((t0.c66)) BETWEEN ((CAST(rt1.c2 AS INTEGER))) AND (((((rt1.c0, rt1.c1, rt1.c2))>=((t0.c66, t0.c66, rt1.c0)))))) FROM rt1 WHERE ((((((x'')OR(0.8479474866947999)))AND('\㫉')) IN ((x'' IN ()))));SELECT DISTINCT CAST((((t0.c66)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) AS BLOB), (((((t0.c66))<((rt1.c1))))LIKE((rt1.c2 IN ()))), ((rt1.c2) BETWEEN (x'') AND (t0.c66)) COLLATE NOCASE COLLATE NOCASE FROM t0 WHERE (CAST(('0.8131860141233407' IN ()) AS INTEGER));SELECT COUNT(*) FROM rt1, t0 WHERE (((((((NULL)OR(NULL)))AND(x''))) NOT BETWEEN ((('d') ISNULL)) AND ((('0.5700348528104054')%(-2134506320))))); -- 0ms;
SELECT ALL CASE CAST(rt1.c1 AS TEXT)  WHEN (((t0.c66)) BETWEEN ((rt1.c0)) AND ((t0.c66))) THEN (NOT (t0.c66)) WHEN CAST(t0.c66 AS NUMERIC) THEN ((rt1.c1)%(t0.c66)) WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN x'616b' ELSE rt1.c1 END THEN rt1.c0 WHEN CASE WHEN t0.c66 THEN t0.c66 END THEN ((t0.c66) BETWEEN (t0.c66) AND (rt1.c2)) WHEN rt1.c0 THEN (0.14137227995064494 IN ()) WHEN NULLIF(rt1.c1, rt1.c0) THEN (NOT (t0.c66)) WHEN TOTAL(t0.c66) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) END, ((IFNULL(DISTINCT t0.c66, rt1.c2)) IS FALSE), GROUP_CONCAT(((rt1.c2) NOT NULL)) OVER (), rt1.c0, COUNT(*) OVER () FROM t0, rt1 WHERE ((((0.6926919637210699) NOT BETWEEN (1e500) AND (0.6335900430177144)) IN ())) GROUP BY ((((rt1.c2)|(NULL))) BETWEEN (((((((((rt1.c1)OR('u ')))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c1))) AND (((rt1.c0)IS NOT(rt1.c2)))), CASE WHEN ((rt1.c2) IS TRUE) THEN CAST(1e500 AS TEXT) ELSE CAST(t0.c66 AS TEXT) END, ((rt1.c2)%(((((rt1.c0)AND(rt1.c0)))OR(t0.c66)))), ((((rt1.c1) IS TRUE))GLOB('511273232')), COALESCE(CASE t0.c66  WHEN t0.c66 THEN t0.c66 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN t0.c66 END, rt1.c0 COLLATE BINARY); -- 0ms;
SELECT ((((CAST(rt1.c2 AS TEXT))OR(STRFTIME(rt1.c2, NULL, rt1.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c0))))OR((((rt1.c0, rt1.c1, t0.c66)) BETWEEN ((t0.c66, '1354983030', rt1.c0)) AND ((rt1.c1, t0.c66, rt1.c2))))), (((rt1.c1) NOT BETWEEN (t0.c66) AND (rt1.c2)) IN ()), t0.c66 FROM rt1 GROUP BY (~ (((rt1.c1)&(rt1.c0)))) HAVING ((((t0.c66)!=(x'')))=(((rt1.c2)IS NOT(rt1.c2))));SELECT DISTINCT (((+ (rt1.c0)))>=(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c66 THEN rt1.c1 END)) FROM t0;SELECT DISTINCT (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((((((((((t0.c66)AND(t0.c66)))AND(rt1.c0)))AND(t0.c66)))AND(t0.c66))))), t0.c66, (~ (AVG(rt1.c2))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((((rt1.c0)&(t0.c66))) NOT NULL) FROM t0, rt1 WHERE (CAST(((0.7368041406745567)/(x'8d97')) AS TEXT)); -- 0ms;
SELECT DISTINCT CASE WHEN (NOT ('*!Upz')) THEN CAST(rt1.c0 AS REAL) WHEN ((rt1.c2)|(x'')) THEN (~ (rt1.c0)) WHEN ((t0.c66)|(rt1.c1)) THEN ((((rt1.c0)OR(rt1.c0)))AND(t0.c66)) END FROM t0, rt1 WHERE (((CASE '1657041703'  WHEN 0.5938998616887609 THEN NULL END)*(0.737707896796938 COLLATE BINARY))); -- 0ms;
SELECT (((((rt1.c0))>((rt1.c0))))>((rt1.c2 IN (rt1.c1)))), rt1.c1, ((rt1.c1)OR(rt1.c1)) COLLATE BINARY FROM t0, rt1 WHERE (((((~ ('QO3w!ϱI'))))<=((CAST(0.810478351673162 AS TEXT))))) ORDER BY ((rt1.c1)+(rt1.c2)) COLLATE RTRIM DESC  NULLS LAST; -- 0ms;
SELECT ALL ('376808075' IN ()), rt1.c2, (rt1.c1 IN ()) COLLATE BINARY FROM t0, rt1; -- 0ms;
SELECT DISTINCT x'', (((((rt1.c0)-(rt1.c2)), 'n%/M~/C', rt1.c1))<=((((rt1.c2)/(rt1.c2)), ((((rt1.c2)OR(t0.c66)))OR(rt1.c1)), CASE WHEN '1406728346' THEN rt1.c0 END))), (NOT (((rt1.c2) NOT BETWEEN (rt1.c1) AND (t0.c66)))), ((t0.c66)GLOB(((((t0.c66)OR(rt1.c0)))OR(t0.c66)))), ((((t0.c66)OR(rt1.c2)))AND(-2.13450632E9)) COLLATE RTRIM FROM rt1, t0; -- 0ms;
SELECT ALL (- (t0.c66)) COLLATE NOCASE FROM rt1 WHERE (CASE WHEN ((x'e793') NOTNULL) THEN ((((0.03298352236121338)OR(NULL)))AND('P*')) ELSE ((((-2054971397)OR(NULL)))OR(x'')) END);SELECT DISTINCT CASE WHEN ((rt1.c0)AND(rt1.c1)) THEN CASE WHEN rt1.c2 THEN '(' WHEN '314961699' THEN rt1.c0 WHEN rt1.c1 THEN t0.c66 WHEN 0.12539388721091604 THEN rt1.c1 WHEN rt1.c2 THEN t0.c66 WHEN t0.c66 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (+ (rt1.c2)) WHEN (- (rt1.c0)) THEN (rt1.c2 IN ()) END, ((NULL)<=(((((rt1.c0)OR(rt1.c0)))AND(t0.c66)))), (('b+0*^K')IS NOT(RTRIM(t0.c66))) FROM t0, rt1 WHERE (CAST((1.421731491E9 IN ()) AS TEXT)); -- 0ms;
SELECT ((0.17525694602303754) BETWEEN (MIN(rt1.c2)) AND (((rt1.c2)|(rt1.c1)))) FROM rt1; -- 0ms;
SELECT (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN 0Xffffffff9a7f7736 WHEN rt1.c2 THEN t0.c66 END IN ()), LEAD(((((t0.c66)+(t0.c66))) IS FALSE), (((((t0.c66))=((t0.c66)))) NOT BETWEEN (((rt1.c1) BETWEEN (t0.c66) AND (rt1.c1))) AND ((((rt1.c0))>=((rt1.c2))))), ((((rt1.c0) IS FALSE))IS(((rt1.c2)=(rt1.c0))))) OVER ( PARTITION BY CASE ((((rt1.c1)AND(t0.c66)))OR(rt1.c1))  WHEN ABS(DISTINCT 1.849303125E9) THEN (((rt1.c1, rt1.c2, t0.c66))>((rt1.c1, rt1.c1, rt1.c2))) ELSE CASE WHEN rt1.c1 THEN rt1.c1 END END, (((CAST(t0.c66 AS REAL), (- (rt1.c1)), 0.22307792609085175))=((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END, x'e335', (+ (t0.c66)))))), (((((rt1.c2, rt1.c1, t0.c66))<((rt1.c2, t0.c66, rt1.c0)))) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END) AND ((((rt1.c1))>=((rt1.c2))))) FROM t0, rt1 WHERE ((+ (1009453141 COLLATE BINARY))); -- 0ms;
SELECT ALL SUBSTR(t0.c66, ((((t0.c66)AND(rt1.c1)))AND(rt1.c0))) FROM rt1, t0 GROUP BY (((t0.c66) NOTNULL) IN ()) ORDER BY ((t0.c66) NOT BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE NOCASE DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((rt1.c0 COLLATE RTRIM)>>('1533416515')) FROM t0, rt1 GROUP BY rt1.c0 HAVING rt1.c2; -- 0ms;
SELECT DISTINCT t0.c66, MAX(((x'') NOT BETWEEN (t0.c66) AND (''))), (((rt1.c1 IN ())) ISNULL) FROM rt1 WHERE ((((((355064967) IS FALSE)))>=((CAST(NULL AS REAL))))) INTERSECT SELECT DISTINCT ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (TRIM(rt1.c2)) AND (rt1.c1)), COUNT(*) FILTER(WHERE ((((NULL)>=(rt1.c2)))+((((rt1.c0, rt1.c2, rt1.c2, rt1.c1, 0x12bf66a6)) BETWEEN ((rt1.c2, rt1.c1, rt1.c0, rt1.c2, t0.c66)) AND ((rt1.c0, rt1.c0, t0.c66, rt1.c0, rt1.c2)))))) OVER (), CAST(rt1.c1 AS BLOB) COLLATE BINARY FROM rt1 WHERE ((((+ ('2r2')))==(((x'') IS TRUE))));SELECT DISTINCT ((((rt1.c1)==(rt1.c2))) BETWEEN (CAST(0.2079055357859242 AS INTEGER)) AND (MAX(rt1.c1))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT UNLIKELY(((rt1.c0)GLOB('1558741958'))), rt1.c0, (CASE WHEN rt1.c0 THEN t0.c66 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 ELSE t0.c66 END IN ()), load_extension(CASE NULL  WHEN 0.6528089203097265 THEN rt1.c0 ELSE 0.9460764018719657 END, t0.c66), (NOT ('Nz⦖S&' COLLATE RTRIM)) FROM rt1, t0;SELECT ((x'3c4ca1a5')GLOB(((rt1.c0) BETWEEN (t0.c66) AND (t0.c66)))) FROM rt1 WHERE (((0.8199810132085342 IN ('')) IN (CAST(x'' AS TEXT)))) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) IS FALSE)  NULLS LAST, ((((((((((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))OR(json_array_length(rt1.c2))))OR(((((((((((((x'')AND(t0.c66)))AND(t0.c66)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))))AND((rt1.c1 IN ()))))AND(TYPEOF(t0.c66))))OR((((rt1.c2)) NOT BETWEEN ((t0.c66)) AND ((t0.c66))))))AND(((((((((((((rt1.c2)AND(NULL)))AND(x'')))OR(rt1.c2)))AND(rt1.c0)))OR(t0.c66)))OR(t0.c66)))) DESC  NULLS LAST;SELECT DISTINCT ((COUNT(*))&((NULL IN (rt1.c1)))) FROM t0, rt1; -- 0ms;
SELECT CASE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN t0.c66 THEN rt1.c2 END  WHEN SUM(rt1.c2) THEN CAST(rt1.c2 AS REAL) WHEN 6.33613443E8 THEN (((rt1.c0, t0.c66, t0.c66)) BETWEEN ((rt1.c2, rt1.c0, t0.c66)) AND ((rt1.c0, t0.c66, rt1.c0))) WHEN (- (rt1.c1)) THEN (~ (t0.c66)) ELSE CAST(rt1.c2 AS BLOB) END FROM t0 WHERE (((((x'') BETWEEN (1.558741958E9) AND (x'')))||(((0.8132358162600676)AND(0.37272305008763995)))));SELECT DISTINCT (+ (CAST(rt1.c2 AS TEXT))), (((((t0.c66))<=((t0.c66)))) NOTNULL), ((((rt1.c0)+(rt1.c1)))IS((((rt1.c1)) BETWEEN ((t0.c66)) AND ((t0.c66))))) FROM t0, rt1 WHERE (((CAST(x'' AS INTEGER)) ISNULL)); -- 0ms;
SELECT DISTINCT AVG(((rt1.c2) ISNULL)) FROM t0 WHERE (0.8161687051611599) ORDER BY ((rt1.c2) IS FALSE) DESC;SELECT DISTINCT GROUP_CONCAT(LIKE(rt1.c0, rt1.c2, '0')) COLLATE RTRIM, CAST(1.611071438E9 AS INTEGER), (- (SQLITE_COMPILEOPTION_USED(rt1.c0))) FROM rt1; -- 0ms;
SELECT (((rt1.c1))=((rt1.c0))) COLLATE RTRIM FROM rt1, t0; -- 0ms;
SELECT CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END COLLATE NOCASE FROM t0, rt1; -- 1ms;
SELECT DISTINCT ((CAST(t0.c66 AS BLOB))GLOB('269137832')) FROM t0, rt1 WHERE (((TYPEOF(DISTINCT x'7a71')) BETWEEN (0.8675989576303416) AND (((x'') NOTNULL)))); -- 0ms;
SELECT MAX((rt1.c2 IN ())), (x'' IN (((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))), ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ((((x'', rt1.c0, t0.c66, rt1.c2, rt1.c0)) BETWEEN (('5330299315670740974', 0x24c7b503, rt1.c0, rt1.c2, t0.c66)) AND ((rt1.c2, 0.40073097496362475, 0.17465443147466686, rt1.c2, rt1.c0))))) FROM rt1, t0 WHERE ('kr'); -- 0ms;
SELECT (((~ (rt1.c1)))/(((((((((((((t0.c66)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))AND(t0.c66)))OR(rt1.c0)))OR('lJe+')))) FROM t0, rt1 WHERE (((NULL)||(((0x45f00dc5)/(''))))); -- 0ms;
SELECT DISTINCT CAST(COUNT(rt1.c1) AS BLOB), (((rt1.c1 COLLATE NOCASE))>=((((t0.c66)+(rt1.c2))))), (((- (rt1.c2))) IS TRUE), CAST(rt1.c0 COLLATE BINARY AS INTEGER), TOTAL(((rt1.c1) NOT NULL)) FROM rt1, t0 WHERE (COALESCE(((NULL)LIKE('1095812810')), (- ('-1516972326')))); -- 0ms;
SELECT DISTINCT CASE x''  WHEN t0.c66 COLLATE BINARY THEN MIN(t0.c66) WHEN COUNT(*) THEN CAST(t0.c66 AS BLOB) WHEN (rt1.c0 IN (rt1.c1)) THEN NULL ELSE (~ (rt1.c2)) END, 0.5649326046291882, ((x'') IS FALSE) FROM rt1, t0 WHERE ((((('930952813') IS TRUE))==((~ ('qsAiD_4'))))); -- 0ms;
SELECT DISTINCT ((((((rt1.c0)<(rt1.c0)))AND((((rt1.c1))>((rt1.c1))))))OR(rt1.c1)) FROM t0 LIMIT -1242763549;SELECT ((CAST(t0.c66 AS TEXT))LIKE(((t0.c66) IS FALSE))) FROM t0, rt1 WHERE (((((((((((((LIKELY('^OT'))OR(CAST(x'' AS NUMERIC))))AND(IFNULL(DISTINCT NULL, '1630052056'))))AND((- (x'')))))OR(CAST('!칈픈_>xՇ' AS BLOB))))OR(((0.11105203826477283)>=(NULL)))))AND(0.14101204640992748 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t0.c66) FILTER(WHERE CAST(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS NUMERIC)) OVER ( ROWS rt1.c0 PRECEDING EXCLUDE CURRENT ROW) FROM rt1 WHERE (((((('\r絜%.') BETWEEN (NULL) AND ('1533416515'))))<((TRIM(DISTINCT 'B賁G_R', 0x581ad082)))));SELECT ((t0.c66 IN ()) IN ()) FROM rt1 RIGHT OUTER JOIN t0 ON (NOT ((rt1.c1 IN (t0.c66)))) WHERE (CAST(((NULL)IS(3.76808075E8)) AS NUMERIC)); -- 1ms;
SELECT DISTINCT (((((rt1.c0))<((rt1.c2))))|(rt1.c2 COLLATE NOCASE)), CAST(((t0.c66) BETWEEN ('') AND (t0.c66)) AS REAL), ((PRINTF(t0.c66, rt1.c2, t0.c66)) IS TRUE) FROM t0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))=(((t0.c66)IS(t0.c66)))) FROM rt1;SELECT ((((rt1.c0)-(rt1.c0))) BETWEEN (rt1.c2) AND (CASE WHEN NULL THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN t0.c66 THEN rt1.c1 ELSE t0.c66 END)) FROM rt1, t0 GROUP BY IFNULL((+ (t0.c66)), (((rt1.c2))<=((rt1.c2)))); -- 0ms;
SELECT DISTINCT ((((t0.c66) BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL) FROM t0, rt1 WHERE (((CAST('511952839' AS INTEGER))GLOB(((0.9723532586103826)>(0.4449680286377975))))) LIMIT -952335601 OFFSET -1019977380; -- 0ms;
SELECT ALL SUM((~ (rt1.c0))) OVER () FROM t0, rt1; -- 0ms;
SELECT ALL CAST(NULLIF(DISTINCT rt1.c0, t0.c66) AS BLOB) FROM t0 WHERE (((((x'ecfb') BETWEEN (NULL) AND ('춟q'))) IS FALSE));SELECT DISTINCT ((((rt1.c2) IS FALSE))<>(TYPEOF(t0.c66))) FROM rt1, t0 ORDER BY (~ (((((rt1.c0)OR(rt1.c2)))OR('-612716066')))) DESC  NULLS LAST; -- 0ms;
SELECT UNLIKELY(((rt1.c0) BETWEEN (t0.c66) AND (rt1.c1))), (NOT (((rt1.c0) IS TRUE))), CAST(COUNT(*) AS BLOB) FROM rt1, t0 WHERE (((NULL)<>(((((((((x'')AND('8')))AND(1.7976931348623157E308)))OR(NULL)))OR('1714022979'))))); -- 0ms;
SELECT ((((t0.c66)<<(t0.c66)))!=((rt1.c2 IN (rt1.c0)))) FROM rt1 WHERE ((((((x''))==(('2025957036')))) NOTNULL));SELECT ALL ((t0.c66) ISNULL) FROM rt1, t0 WHERE ((0.49246105843199306 IN (x'', 4373058)) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT rt1.c1 FROM t0, rt1 WHERE (((CASE WHEN NULL THEN 0.7867577608698124 END)IS(NULL))); -- 0ms;
SELECT DISTINCT ((CASE t0.c66  WHEN rt1.c2 THEN rt1.c2 END) NOT NULL), (rt1.c2 IN ()), x'' COLLATE RTRIM FROM t0, rt1 WHERE (((((0.5261506702555597)!=(NULL)))>>((('>\㧒M-yz,') BETWEEN ('If') AND (0xffffffffd5025f38))))) GROUP BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c66 END) NOT NULL) HAVING MAX((+ (t0.c66))); -- 0ms;
SELECT DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c2) AND (t0.c66)) COLLATE RTRIM FROM rt1, t0 WHERE (((((('1163875313')&(0.9891009507341451))))>=((((x'') ISNULL))))); -- 0ms;
SELECT ALL ((((((((((rt1.c2)<<(t0.c66)))OR(((77631474) NOT NULL))))AND(((((0.8681362157757595)AND(rt1.c2)))AND(rt1.c2)))))OR(MAX(rt1.c1))))OR(UNLIKELY(DISTINCT '1636422920'))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT MAX((rt1.c2 IN ())) FROM t0; -- 0ms;
SELECT ALL rt1.c1 FROM t0, rt1; -- 0ms;
SELECT AVG(((rt1.c2) ISNULL)), COUNT(CAST('w,' AS BLOB)), ((t0.c66)>(rt1.c0)) COLLATE NOCASE COLLATE RTRIM FROM rt1, t0; -- 0ms;
SELECT ALL CAST(((0xffffffffbb08a558) BETWEEN (rt1.c1) AND (t0.c66)) AS REAL) FROM t0, rt1 WHERE (((CASE WHEN 0X573ce7d3 THEN NULL END)+(CASE '8bb8.v'  WHEN NULL THEN 't_Sm^褿7a' END))); -- 0ms;
SELECT ALL CAST(t0.c66 AS NUMERIC) FROM rt1 NOT INDEXED, t0 WHERE ((~ (('1474698434' IN ())))); -- 0ms;
SELECT DISTINCT rt1.c2, GROUP_CONCAT(NULL) OVER (), AVG(((t0.c66)LIKE(rt1.c2))) OVER () FROM rt1, t0; -- 0ms;
SELECT ((('17315561' IN (rt1.c2, t0.c66))) IS TRUE) FROM t0, rt1 WHERE (((((NULL) ISNULL))%(((NULL)>(NULL))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c1 THEN rt1.c2 END)IS(((((((((rt1.c1)AND(rt1.c0)))OR(t0.c66)))AND(rt1.c0)))OR(rt1.c1)))) FROM t0;SELECT DISTINCT ((UPPER(DISTINCT rt1.c2))OR(highlight(rt1.c2, rt1.c2, t0.c66, t0.c66))) FROM rt1, t0 WHERE (INSTR(((0Xffffffffb9b01e0b)>>('Tc')), CASE 0.542011662577887  WHEN x'' THEN NULL END)); -- 0ms;
SELECT ((t0.c66)IS NOT(rt1.c1)) COLLATE RTRIM FROM t0;SELECT DISTINCT (CASE 0.9921156701756855  WHEN rt1.c2 THEN t0.c66 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 ELSE t0.c66 END IN ()), COUNT(*) OVER (), rt1.c0 COLLATE RTRIM FROM t0;SELECT DISTINCT CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS TEXT), ((((rt1.c2) IS TRUE)) ISNULL), CAST(((rt1.c1)<<(rt1.c1)) AS NUMERIC), ((((rt1.c1)>>(t0.c66)))<=(CAST(rt1.c0 AS NUMERIC))), 0.8653962682668072 FROM rt1, t0 WHERE (CASE (('490985566')*(0.08586414085277327))  WHEN (NULL IN (NULL)) THEN (('333562183')-(0.717611204394767)) ELSE TRIM(x'', 0.866294717916454) END) GROUP BY (((rt1.c0 IN (rt1.c1, rt1.c0))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (x'1753'))) AND ((((rt1.c0, rt1.c0, x'')) BETWEEN ((rt1.c2, t0.c66, rt1.c0)) AND ((rt1.c1, rt1.c2, t0.c66))))) HAVING PRINTF(((rt1.c0)||(t0.c66)), (rt1.c2 IN ()), ((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))); -- 0ms;
SELECT ALL ((((rt1.c1)GLOB(rt1.c1))) NOT NULL) FROM t0, rt1 WHERE (((((0.8841375614240367) IS TRUE))GLOB((((1275718184)) BETWEEN (('')) AND ((0.998565268596447)))))); -- 0ms;
SELECT RANK() OVER (), '-1143860729' COLLATE RTRIM, FIRST_VALUE((((NOT (t0.c66))) NOTNULL)) OVER () FROM t0; -- 0ms;
SELECT ALL CUME_DIST() OVER ( PARTITION BY ((((rt1.c2) ISNULL))>=(((((((((x'')AND(t0.c66)))OR(t0.c66)))OR(t0.c66)))AND(t0.c66)))), (((t0.c66, rt1.c1, rt1.c0)) NOT BETWEEN (((((t0.c66)) NOT BETWEEN ((rt1.c0)) AND ((t0.c66))), (((rt1.c1))==((rt1.c1))), (rt1.c2 IN ()))) AND (((t0.c66 IN (NULL)), rt1.c1 COLLATE RTRIM, rt1.c1)))) FROM rt1;SELECT ALL MIN(UPPER(rt1.c0)) FROM t0, rt1 WHERE (LOWER(x'a5c8' COLLATE RTRIM)); -- 0ms;
SELECT ((((((((t0.c66 COLLATE RTRIM)AND((rt1.c2 IN (-947498535, x'')))))OR(CAST(rt1.c1 AS NUMERIC))))OR((~ (rt1.c1)))))AND(GROUP_CONCAT(rt1.c0))), CAST(MAX(rt1.c2, rt1.c2) AS NUMERIC), CASE MIN(t0.c66)  WHEN ((rt1.c1) IS FALSE) THEN CAST(t0.c66 AS BLOB) END FROM rt1 WHERE ((((NOT (NULL)))GLOB((((('0.8502004973321896')AND('-1624094547')))OR(4.90985566E8)))));SELECT ALL ((rt1.c2 COLLATE NOCASE)<=(((rt1.c2) IS FALSE))), (((((((((((rt1.c1))=((t0.c66))))OR(COUNT(NULL))))OR(MAX(rt1.c1))))AND((((rt1.c2, t0.c66, t0.c66, t0.c66, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1, rt1.c2, rt1.c0)) AND ((t0.c66, rt1.c2, rt1.c2, rt1.c0, rt1.c2))))))AND((NOT (t0.c66)))), 0Xcc765 FROM rt1;SELECT DISTINCT FIRST_VALUE(((0.9808217534726626)==(LENGTH(t0.c66)))) OVER (), (((((x''))=((rt1.c1)))) BETWEEN (((rt1.c2) IS TRUE)) AND (((t0.c66) NOT BETWEEN (rt1.c2) AND (rt1.c0)))), SUM((rt1.c2 IN (rt1.c0, rt1.c0))) OVER () FROM rt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((rt1.c1)||(0.3007210085468007)) THEN ((rt1.c2)<<(rt1.c2)) END; -- 0ms;
SELECT ALL STRFTIME(t0.c66, rt1.c2, rt1.c2) COLLATE BINARY FROM t0, rt1 ORDER BY rt1.c1 DESC; -- 0ms;
SELECT DISTINCT (+ (t0.c66 COLLATE RTRIM)) FROM rt1, t0 WHERE (TYPEOF(((x'') BETWEEN (0.4677194886680929) AND (NULL)))); -- 0ms;
SELECT (((NOT (0x1441802b))) NOT NULL) FROM rt1, t0 WHERE (TRIM(ABS(DISTINCT 1461561727), ((x'd1dc')*(NULL)))); -- 0ms;
SELECT DISTINCT TOTAL(((rt1.c0)>(t0.c66))) FROM t0 WHERE (('RZ?솾<eA9' IN ()));SELECT ALL rt1.c2 FROM t0;SELECT ALL rt1.c1 FROM rt1, t0; -- 0ms;
SELECT DISTINCT (((rt1.c2, rt1.c1, rt1.c1, rt1.c1, '-457085412')) NOT BETWEEN ((((t0.c66) BETWEEN (rt1.c0) AND (t0.c66)), MAX(rt1.c2, rt1.c2), ((t0.c66)<(rt1.c1)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)), ((rt1.c2)IS NOT(rt1.c2)))) AND ((527288933, ((rt1.c1)IS(rt1.c2)), ((0.06933369998045735)+(t0.c66)), AVG(t0.c66), CASE rt1.c1  WHEN t0.c66 THEN rt1.c0 END))) FROM rt1;SELECT ALL ((CAST(rt1.c0 AS BLOB)) IS TRUE) FROM rt1; -- 0ms;
SELECT CAST(((rt1.c1) NOTNULL) AS BLOB) FROM t0, rt1 WHERE ((~ (((0.7490904981832075) BETWEEN (NULL) AND (0.8936932842688657))))); -- 0ms;
SELECT DISTINCT (((((rt1.c2)LIKE(rt1.c1))))>=((((rt1.c2) NOT NULL)))) FROM t0 WHERE ('873018874');SELECT (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) IN ()) FROM t0 WHERE (((('-785281128')) NOT BETWEEN ((CAST(NULL AS TEXT))) AND (((('\E%Oy')IS NOT(x'')))))); -- 0ms;
SELECT ((((CAST(rt1.c0 AS TEXT))AND(0.16629332427421883)))OR(rt1.c1)) FROM t0, rt1 GROUP BY 0.5927884069249074 HAVING IFNULL(rt1.c1, ((rt1.c0)|(rt1.c1))); -- 0ms;
SELECT ALL rt1.c2 FROM t0;SELECT ALL CHANGES(), LAG(((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c2)GLOB(x'4db1')))), (NOT ((rt1.c1 IN ()))), ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL)) OVER (), (NOT ((t0.c66 IN ()))), '', DENSE_RANK() OVER ( PARTITION BY ((rt1.c2 COLLATE RTRIM) NOT NULL), ((((rt1.c1)<<(t0.c66)))IS(CAST(rt1.c1 AS NUMERIC))) GROUPS (-161419340 IN ()) PRECEDING EXCLUDE TIES) FROM rt1;SELECT rt1.c0 FROM t0, rt1 WHERE ((((('930952813')&('930952813')))||(-2079138056 COLLATE NOCASE))); -- 1ms;
SELECT ((((t0.c66 IN ())))<>(((((rt1.c0))>=((0Xffffffff942d1838)))))) FROM t0;SELECT ALL (((rt1.c0))=((t0.c66))) COLLATE NOCASE FROM t0 WHERE (CASE WHEN ((((NULL)OR(0.355033659634859)))OR(3.23053705E8)) THEN CAST(NULL AS INTEGER) WHEN ((0.6835353479327037) IS TRUE) THEN (((('-1904174555')OR(0.9052018037094764)))OR(0.5611945100210566)) WHEN (((('!6')AND('587654292')))AND(NULL)) THEN 0.5488615674372535 COLLATE RTRIM ELSE (((((((((((('')OR(NULL)))OR(0x7f80fc4f)))AND(NULL)))AND('-1602693705')))AND('1365755490')))AND(1456414868)) END) GROUP BY (((rt1.c1 IN (t0.c66)))<>('-1695485615'));SELECT ALL ((((t0.c66) NOT BETWEEN (t0.c66) AND (rt1.c0)))<=(((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)))) FROM rt1, t0; -- 0ms;
SELECT ALL (((rt1.c2 IN ())) BETWEEN (((((t0.c66)OR(')')))OR(rt1.c2))) AND (CAST(rt1.c1 AS TEXT))), (((CAST(rt1.c1 AS REAL)))>((((rt1.c2) IS FALSE)))), (((+ (rt1.c1))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (t0.c66)) FROM t0, rt1; -- 0ms;
SELECT ((((t0.c66)>>(0.8835469235165017))) IS TRUE) FROM t0 LEFT OUTER JOIN rt1 ON (('-1505795757')=(((t0.c66) NOT BETWEEN (t0.c66) AND (rt1.c0)))); -- 0ms;
SELECT DISTINCT SUM(((rt1.c1)IS NOT(rt1.c2))) COLLATE NOCASE FROM rt1; -- 0ms;
SELECT DISTINCT (((t0.c66)) BETWEEN ((t0.c66 COLLATE BINARY)) AND ((CAST(x'' AS INTEGER)))) FROM t0 LIMIT -468187056; -- 0ms;
SELECT DISTINCT (NOT (((rt1.c2) ISNULL))) FROM rt1, t0 WHERE (''); -- 0ms;
SELECT ((-1.53807742E9 COLLATE RTRIM)IS NOT(COUNT(*))) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c1) NOTNULL) FROM rt1, t0; -- 1ms;
SELECT DISTINCT CAST(rt1.c2 AS REAL) COLLATE BINARY FROM t0, rt1 WHERE (((((x'') ISNULL))&(((((0x6be627a7)AND(1188406355)))AND(NULL))))) LIMIT 2087148426 OFFSET 1115552882; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1, t0 WHERE (((((NULL)<(x'3b23')))>((~ ('1'))))); -- 0ms;
SELECT ALL x'' COLLATE RTRIM FROM t0 WHERE ((('-1201530746' COLLATE BINARY) BETWEEN (((x'7db5')<(0.27995057315575256))) AND (NULL))) ORDER BY LOWER(DISTINCT t0.c66 COLLATE RTRIM)  NULLS FIRST, (('()') IS FALSE), NULL DESC; -- 0ms;
SELECT ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END) IS TRUE), rt1.c2, AVG((('-223710642') ISNULL)) OVER ( PARTITION BY (((((('TRUE')OR(rt1.c1)))AND(t0.c66)))-(CASE t0.c66  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN t0.c66 THEN t0.c66 ELSE rt1.c0 END)), (+ (rt1.c2 COLLATE RTRIM))) FROM t0;SELECT DISTINCT SQLITE_SOURCE_ID() FROM t0 WHERE ((((-1.735833345E9)) NOT BETWEEN (((('1530908534')LIKE(x'0da8')))) AND ((((0.22582121443004344) IS TRUE))))); -- 0ms;
SELECT DISTINCT (NOT ('-1388812536')) FROM t0, rt1 WHERE (CAST(CAST(NULL AS TEXT) AS REAL)); -- 0ms;
SELECT (NOT (t0.c66)) COLLATE NOCASE FROM rt1, t0 WHERE (json_array_length(0X56a15e2a COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT '376808075' FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((CASE t0.c66  WHEN rt1.c2 THEN rt1.c2 END)>((((t0.c66))>((t0.c66))))) FROM t0 WHERE ((((0.08128599099519307) ISNULL) IN ())) LIMIT -691002016;SELECT DISTINCT (((((((rt1.c1)AND(t0.c66)))OR(rt1.c0))))<>((((t0.c66)LIKE(rt1.c0))))), TRIM(DISTINCT CASE WHEN t0.c66 THEN t0.c66 END), (((((((((rt1.c0 IN ()))AND((rt1.c2 IN (rt1.c1, rt1.c2)))))OR(TOTAL_CHANGES())))OR(load_extension(t0.c66))))OR(t0.c66)), CASE LOWER(DISTINCT rt1.c0)  WHEN (NOT (t0.c66)) THEN ((rt1.c1) NOTNULL) WHEN ((rt1.c2)-(t0.c66)) THEN t0.c66 WHEN ((rt1.c2)<<(rt1.c1)) THEN NULL ELSE t0.c66 COLLATE BINARY END, ((((((t0.c66)OR(rt1.c1)))AND(rt1.c2)))>(CAST(rt1.c2 AS INTEGER))) FROM t0;SELECT ALL ((((NULL)LIKE(t0.c66)))>((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))) FROM rt1, t0 WHERE (0.3657866540739301); -- 0ms;
SELECT DISTINCT (~ (rt1.c1)) COLLATE NOCASE FROM t0, rt1 WHERE ((+ (CASE 'd'  WHEN x'' THEN x'' ELSE 'ma' END))); -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c66)<=(rt1.c0))), ((((((((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))AND(GROUP_CONCAT(rt1.c1))))AND(AVG(rt1.c2))))AND(((rt1.c2) IS TRUE))))AND(MAX(''))), ((((t0.c66)*(rt1.c0)))+(CASE rt1.c2  WHEN t0.c66 THEN t0.c66 END)) FROM rt1 WHERE ((((((NULL)) BETWEEN ((1.611071438E9)) AND ((0.2470774996169549)))) IS TRUE));SELECT CASE WHEN MIN(rt1.c2, rt1.c1) THEN NULL END FROM rt1 LIMIT -842071817 OFFSET 120427008; -- 0ms;
SELECT DISTINCT (NOT (rt1.c1 COLLATE BINARY)), ((((rt1.c2)OR(t0.c66)))OR(t0.c66)) COLLATE BINARY COLLATE NOCASE, (((MAX(rt1.c1)))=((rt1.c0))) FROM t0 WHERE ((((NULL)) NOT BETWEEN (((NOT ('ki')))) AND (((('1533416515') NOT NULL))))) GROUP BY ((((((rt1.c2) BETWEEN (rt1.c0) AND ('0.9052018037094764')))OR(rt1.c0)))AND(((rt1.c1) IS FALSE)));SELECT DISTINCT rt1.c1 FROM rt1, t0 WHERE ((((((x'')OR(NULL)))OR(0X296c161)) IN ((((((((('牂	}7K|>f')OR('*㫳fJzm')))OR('F')))AND('-825215243')))OR('')), CASE NULL  WHEN NULL THEN -307033765 ELSE NULL END))) ORDER BY (NOT (((t0.c66)IS(t0.c66)))); -- 0ms;
SELECT DISTINCT SUM(((((t0.c66)AND(rt1.c1)))AND(rt1.c2))) OVER ( ROWS CAST(rt1.c2 AS REAL) PRECEDING EXCLUDE TIES) FROM rt1, t0;SELECT DISTINCT CAST(((t0.c66)!=(rt1.c1)) AS TEXT) FROM rt1, t0; -- 0ms;
SELECT ALL NULLIF((rt1.c0 IN ()), (- (rt1.c0))), GROUP_CONCAT((~ (rt1.c2))), ((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)) COLLATE BINARY FROM rt1, t0; -- 1ms;
SELECT AVG((rt1.c2 IN ())) OVER () FROM rt1 INDEXED BY i33, t0 WHERE (((LOWER('')) NOT NULL)) LIMIT -2054971397;SELECT PERCENT_RANK() OVER () FROM rt1, t0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0 ORDER BY ((rt1.c2 IN ()) IN ()) DESC, CASE WHEN ((rt1.c2) ISNULL) THEN ((rt1.c2)GLOB(rt1.c1)) ELSE ((t0.c66) IS TRUE) END ASC  NULLS LAST;SELECT DISTINCT CASE rt1.c1 COLLATE RTRIM  WHEN ((NULL) NOT BETWEEN (rt1.c1) AND ('480775637')) THEN AVG(rt1.c2) ELSE (((rt1.c2))=((rt1.c1))) END FROM t0 WHERE ((('!8]L[')>=(0X236fa234)) COLLATE RTRIM) GROUP BY CASE ((((rt1.c2)AND(t0.c66)))AND(rt1.c0))  WHEN CAST(rt1.c1 AS TEXT) THEN CAST(rt1.c1 AS TEXT) ELSE UNLIKELY(DISTINCT rt1.c0) END;SELECT DISTINCT ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (t0.c66))) NOT BETWEEN (((((t0.c66)OR(t0.c66)))OR(''))) AND (TOTAL(rt1.c1))) FROM rt1 WHERE (((((x'') BETWEEN (0x5951038c) AND ('-952335601')))=(CASE x'9921'  WHEN x'317a' THEN '' END)));SELECT ALL CASE (rt1.c1 IN ())  WHEN (((rt1.c0))<>((rt1.c0))) THEN (+ (t0.c66)) ELSE CAST(rt1.c1 AS NUMERIC) END FROM rt1, t0 WHERE (((CASE WHEN '' THEN 0.3171165529781842 ELSE 0.24424926844174744 END)=(((0.04638864935296638)IS NOT('g'))))); -- 0ms;
SELECT ((((((((((((((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END)AND(((rt1.c2) BETWEEN (t0.c66) AND (x'3e8d')))))OR(((rt1.c1)/('Y&*zv')))))OR((t0.c66 IN ()))))OR('849691913')))OR(COALESCE(DISTINCT rt1.c2, rt1.c2))))AND(rt1.c0 COLLATE RTRIM)))AND((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))))OR((((rt1.c2, rt1.c1, t0.c66)) NOT BETWEEN ((t0.c66, rt1.c1, rt1.c1)) AND ((t0.c66, rt1.c1, rt1.c1))))), UPPER(((((t0.c66)AND('ꨅGevW\.')))AND(rt1.c2))), ((((rt1.c2) NOT BETWEEN (x'') AND (rt1.c1)))+((((rt1.c2, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c2))))) FROM t0 WHERE (((((0.35037748463300555) BETWEEN (NULL) AND (NULL))) NOT BETWEEN (('-845103978' IN ())) AND (((((x'')OR(x'')))AND('1421731491'))))) LIMIT 1344944883 OFFSET -689268598;SELECT DISTINCT NTH_VALUE(((((((((rt1.c2 COLLATE RTRIM)AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END)))AND(CAST(rt1.c0 AS TEXT))))OR((- (rt1.c0)))))AND(((x'c93fd5eb')<=(rt1.c0)))), CASE WHEN rt1.c1 COLLATE BINARY THEN x'c728' COLLATE NOCASE WHEN ((((rt1.c0)OR(rt1.c1)))OR('684415626')) THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '0.2106382084849434' END WHEN ((0x25c42c83) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN (- (rt1.c2)) END) OVER ( PARTITION BY ((NULL) BETWEEN (((t0.c66) NOT BETWEEN ('&-<Fc,') AND (t0.c66))) AND (HEX(rt1.c1))), (~ (CAST(t0.c66 AS INTEGER)))) FROM rt1;SELECT DISTINCT SUBSTR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c66)), HEX(t0.c66)) FROM t0;SELECT DISTINCT GROUP_CONCAT(TRIM(0Xffffffffce22a237)) OVER () FROM rt1, t0; -- 0ms;
SELECT DISTINCT (((~ (0.8382103380816575))) NOT NULL) FROM rt1, t0; -- 0ms;
SELECT DISTINCT (((rt1.c2 IN ())) IS FALSE) FROM t0 LIMIT 1876236099 OFFSET -1297932588; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1, t0 GROUP BY (((rt1.c1))=(('.hMd'))) COLLATE RTRIM ORDER BY ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)) COLLATE NOCASE DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((rt1.c0)AND(rt1.c1)) COLLATE NOCASE, AVG(((t0.c66)/(rt1.c1))), MIN((('727170516') IS TRUE)) FROM rt1, t0 WHERE (((CAST(4.96399527E8 AS BLOB)) NOT BETWEEN (((NULL) NOT NULL)) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT GROUP_CONCAT(((((((((t0.c66)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c2))), CAST(rt1.c1 AS REAL), '1636422920' FROM rt1, t0 WHERE ((~ ((((('-853903572')OR('dAth5d刊Ja')))AND(NULL))))) GROUP BY ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (NULL) AND (((rt1.c0) BETWEEN (rt1.c2) AND (t0.c66)))); -- 0ms;
SELECT (rt1.c2 IN (rt1.c0)) COLLATE NOCASE FROM t0;SELECT DISTINCT (+ (rt1.c0)) COLLATE BINARY FROM t0 WHERE (((((((NULL)OR(NULL)))AND(x''))) IS FALSE));SELECT DISTINCT CAST(((rt1.c0)IS(NULL)) AS NUMERIC), SUBSTR(((rt1.c1) NOT BETWEEN (t0.c66) AND (rt1.c2)), (NOT (rt1.c2))), (((((((((((t0.c66))>((rt1.c2))))OR(((rt1.c1)GLOB(rt1.c2)))))AND(((t0.c66) NOT BETWEEN (rt1.c2) AND (t0.c66)))))AND((~ (rt1.c0)))))AND((((rt1.c1)) BETWEEN ((t0.c66)) AND ((rt1.c2))))) FROM t0, rt1 LIMIT 1754997620 OFFSET 101131863; -- 0ms;
SELECT DISTINCT COALESCE(CASE WHEN t0.c66 THEN t0.c66 END, (- (rt1.c1))) FROM t0 WHERE ((((0.977109652295618, NULL, NULL)) BETWEEN (((('943722777')>(0.6774404620867475)), (('0.0')AND('0.')), (('930952813') NOT NULL))) AND (('1732969678' COLLATE RTRIM, CASE WHEN NULL THEN 0.3776523268365246 WHEN 0.791591259572056 THEN x'7283' WHEN 0.08774861754602448 THEN x'b5ae' END, (((NULL, 0.8318091863945817, 'nOFo3')) NOT BETWEEN ((x'', 0.11114400704567329, NULL)) AND ((0xffffffffa8fe59c4, NULL, '17315561')))))));SELECT ALL (((rt1.c0 IN ())) ISNULL) FROM rt1, t0 WHERE ((CAST(NULL AS INTEGER) IN ())); -- 0ms;
SELECT ((((((rt1.c0) BETWEEN (rt1.c2) AND (t0.c66)))OR(((t0.c66) NOT NULL))))OR(LIKELIHOOD(rt1.c2, 0.184053244834133))) FROM t0 WHERE (((((((((((0.5911668658476079)OR(x'')))OR(NULL)))OR(x'')))OR('')))||(((((0.15720771082351248)AND(NULL)))OR(NULL))))) GROUP BY CAST(CAST(0.40732489721184684 AS NUMERIC) AS INTEGER) LIMIT 818757992;SELECT ALL ((((((((((0X3994ed68)AND(rt1.c1)))OR(rt1.c2)))OR(-689268598)))AND(rt1.c2)))LIKE(((rt1.c0) NOT NULL))) FROM t0, rt1; -- 0ms;
SELECT CAST(CASE WHEN rt1.c2 THEN rt1.c1 ELSE t0.c66 END AS REAL) FROM t0, rt1 WHERE (((((NULL)<(NULL))) NOTNULL)) ORDER BY (((+ (rt1.c2))) NOT BETWEEN (LOWER(rt1.c0)) AND (x'')) DESC  NULLS FIRST; -- 0ms;
SELECT AVG((NOT (rt1.c1))) FROM t0, rt1 WHERE ((((((((((- ('-1280893133')))AND((('-1894303604')IS('')))))OR((('') BETWEEN ('0.817549774840229') AND (777963800)))))OR(((0.8797165301829108) IS TRUE))))OR(((-522195906)IS('-RlP'))))); -- 0ms;
SELECT 0xffffffffafd29508 FROM rt1 WHERE (((((('-1193070231' IN ()))AND((0.7660625930227707 IN ()))))AND(((0.31157323931059344) NOT BETWEEN (NULL) AND (0.11849214192104074))))) ORDER BY (- (CAST(rt1.c0 AS INTEGER))), ((((rt1.c0)>>(rt1.c2)))>(CAST(rt1.c1 AS INTEGER))) DESC, ((LIKELY(DISTINCT rt1.c0))GLOB((~ (rt1.c2)))) ASC  NULLS LAST; -- 0ms;
SELECT ALL CASE WHEN (t0.c66 IN ()) THEN ((((rt1.c1)AND(t0.c66)))OR(rt1.c1)) END, LOWER(DISTINCT AVG(t0.c66)), LIKELY((('uWO1q撫9') NOT NULL)) FROM t0 WHERE (((CAST('q{''x}T' AS INTEGER)) NOT BETWEEN ((('')>=(-6.94926397E8))) AND (((x'35b0') NOT BETWEEN (132793615) AND (NULL)))));SELECT DISTINCT (((- (rt1.c1))) ISNULL) FROM t0 WHERE (CAST((('') NOT BETWEEN (NULL) AND (0.2266715928817219)) AS REAL));SELECT (((rt1.c0)) BETWEEN ((t0.c66)) AND (('1653321257'))) FROM rt1, t0 GROUP BY (((rt1.c1)) BETWEEN ((((rt1.c2)>>(t0.c66)))) AND ((((rt1.c1) NOTNULL)))) HAVING (DATE(rt1.c1, rt1.c1, rt1.c0) IN (((rt1.c1)>(rt1.c0)))); -- 0ms;
SELECT ((((((rt1.c0)OR(rt1.c2)))AND(t0.c66))) NOT NULL), (~ (rt1.c1)) COLLATE BINARY COLLATE RTRIM, GROUP_CONCAT((t0.c66 IN ())) FROM rt1 GROUP BY ((LIKELY(t0.c66)) BETWEEN ((- (rt1.c2))) AND (((((rt1.c2)AND(rt1.c2)))AND(NULL))));SELECT ALL (((rt1.c1)>(rt1.c1)) IN ()) FROM t0, rt1 WHERE (CAST(TYPEOF(0.40073097496362475) AS TEXT)); -- 0ms;
SELECT ALL ((COUNT(0Xffffffff985b7f72))%(((((rt1.c1)OR('')))AND('珒QjG')))) FROM t0;SELECT CAST((((t0.c66, rt1.c0, rt1.c2))!=((x'243254ba', rt1.c1, rt1.c0))) AS BLOB) FROM rt1;SELECT DISTINCT 'sP8q<]' FROM t0 WHERE ((((x'a2d4')) NOT BETWEEN ((CAST(NULL AS TEXT))) AND ((CASE WHEN NULL THEN x'' ELSE x'' END)))) ORDER BY (((t0.c66)) BETWEEN ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)) AND ((((('937112615', rt1.c2, rt1.c0, -814038703, rt1.c0))<=((t0.c66, rt1.c1, rt1.c0, rt1.c1, rt1.c2)))))) DESC  NULLS LAST, 0.7114523861447434  NULLS LAST, CAST(((rt1.c0) BETWEEN (t0.c66) AND (rt1.c0)) AS BLOB) ASC;SELECT ALL (((rt1.c2 IN ())) NOT NULL) FROM t0, rt1; -- 1ms;
SELECT DISTINCT ((((rt1.c0 IN ())))>((((rt1.c0) NOT BETWEEN (t0.c66) AND (rt1.c0))))), CASE ((rt1.c2) NOTNULL)  WHEN (+ (rt1.c2)) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((x''))) WHEN ((t0.c66)AND(rt1.c1)) THEN ((rt1.c0)OR(rt1.c2)) WHEN TYPEOF(t0.c66) THEN ((rt1.c0)=(rt1.c1)) ELSE ((t0.c66) NOTNULL) END, (CASE WHEN rt1.c2 THEN t0.c66 END IN (((((((((rt1.c1)AND(rt1.c2)))AND(t0.c66)))AND(rt1.c1)))AND(rt1.c2)))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT ABS(CASE WHEN t0.c66 THEN rt1.c2 WHEN t0.c66 THEN t0.c66 WHEN rt1.c2 THEN x'' END) FROM rt1, t0; -- 0ms;
SELECT DISTINCT (- (((((rt1.c1)OR(rt1.c0)))OR(t0.c66)))) FROM rt1;SELECT 0.5120118030237704 FROM t0, rt1; -- 0ms;
SELECT DISTINCT x'' FROM t0, rt1; -- 0ms;
SELECT DISTINCT ((INSTR(rt1.c1, 0Xffffffffca28048a))>=((((rt1.c0, rt1.c1, rt1.c2, rt1.c1, rt1.c0))>=((rt1.c0, rt1.c2, -1627351117, rt1.c1, rt1.c2))))) FROM t0, rt1 WHERE ((('1707172465' IN ('-2065550160', 'sK%>/鈥pv諃')) IN ())); -- 0ms;
SELECT DISTINCT CASE ((rt1.c0)/(t0.c66))  WHEN LIKELIHOOD(rt1.c2, 0.6703635639856547) THEN '/q<\PCzQ' ELSE CAST(rt1.c0 AS INTEGER) END FROM t0, rt1 WHERE (CAST(CAST(-1845558723 AS BLOB) AS INTEGER)); -- 0ms;
SELECT DISTINCT (CASE '-1774997480'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END IN ()) FROM t0 WHERE (CAST(((NULL) BETWEEN (NULL) AND ('1849303125')) AS INTEGER)); -- 0ms;
SELECT ((0X63fb9896) BETWEEN (rt1.c1 COLLATE NOCASE) AND ('480775637')) FROM t0 WHERE (((CAST(NULL AS TEXT)) ISNULL));SELECT DISTINCT CASE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN t0.c66 THEN t0.c66 END  WHEN (rt1.c0 IN (t0.c66, rt1.c0)) THEN ((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)) END FROM rt1, t0; -- 0ms;
SELECT DISTINCT rt1.c0, CAST((('*a{k') IS TRUE) AS REAL), CASE WHEN t0.c66 THEN rt1.c1 END COLLATE RTRIM FROM t0 NOT INDEXED CROSS JOIN rt1 ON x'' WHERE (COALESCE(((x'') ISNULL), LIKELY(NULL))) LIMIT -1 OFFSET 566052383; -- 0ms;
SELECT DISTINCT CAST(NULL AS NUMERIC) FROM rt1 WHERE ((('1636422920')*(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT t0.c66 FROM t0 WHERE (CAST(0X5df340b4 AS NUMERIC) COLLATE NOCASE); -- 0ms;
SELECT 1.572723077E9, (((((t0.c66)) BETWEEN ((t0.c66)) AND ((rt1.c2)))) ISNULL), ((rt1.c0)>>(CAST(rt1.c0 AS NUMERIC))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT (rt1.c2 IN ()) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1)) BETWEEN ((t0.c66)) AND ((rt1.c0))) IN ()) FROM t0; -- 0ms;
SELECT ALL x'' FROM t0 WHERE ((((0xffffffffd0d58e3e)OR(9.1702571E7)) IN ())) GROUP BY x'', ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)) COLLATE RTRIM, CAST(x'1cb7' AS REAL) COLLATE NOCASE;SELECT DISTINCT (((- (x''))) NOT BETWEEN (SUM(rt1.c1)) AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END)) FROM rt1 GROUP BY rt1.c2, ((LOWER(rt1.c2)) ISNULL), ((((rt1.c2 IN (rt1.c1))))=((rt1.c0))); -- 0ms;
SELECT CAST(((rt1.c1) IS TRUE) AS REAL) FROM rt1 WHERE (((('U''{}l')) NOT BETWEEN (((('') NOT BETWEEN (0.8627403433690937) AND (0.1515246334667011)))) AND (('y仈' COLLATE BINARY)))); -- 0ms;
SELECT ALL CASE WHEN ((t0.c66)AND(rt1.c0)) THEN ((0.8455114531527914)<(rt1.c0)) WHEN (((t0.c66, rt1.c1, rt1.c0))=((0.35678486796381015, t0.c66, t0.c66))) THEN json_valid(t0.c66) WHEN (t0.c66 IN ()) THEN ((rt1.c0) NOT BETWEEN (t0.c66) AND (rt1.c1)) END FROM t0, rt1 ORDER BY ((t0.c66 COLLATE RTRIM)&(((rt1.c1) NOTNULL))); -- 0ms;
SELECT ALL (+ (UPPER('1966602947'))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT COALESCE(((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)), CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END) FROM t0 WHERE (((('1467096914' IN ()))&((NOT (NULL))))) GROUP BY (CASE WHEN rt1.c1 THEN t0.c66 ELSE '-2147235422' END IN ()) HAVING (((- (x'')))>>((('eP\n')*(t0.c66))));SELECT DISTINCT (~ (((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c1)))), ((((((0.7490904981832075) IS TRUE))OR((((0.10739655216295207, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c0, t0.c66, t0.c66)) AND ((rt1.c1, rt1.c0, rt1.c2))))))OR(((rt1.c2) NOT NULL))), GROUP_CONCAT(CAST(rt1.c1 AS NUMERIC)) FROM rt1;SELECT DISTINCT ((rt1.c1)AND(rt1.c2)) COLLATE BINARY FROM rt1 LIMIT -104316335 OFFSET 1924954005; -- 0ms;
SELECT ALL COUNT(*) FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((((((t0.c66)IS NOT(rt1.c0)))AND(((rt1.c1)>=(rt1.c0)))))OR(((x'')IS(t0.c66)))) FROM rt1, t0 WHERE (''); -- 0ms;
SELECT DISTINCT ((((((rt1.c0)OR(rt1.c1)))OR('920622263')))/(((rt1.c1) NOT BETWEEN (rt1.c2) AND (t0.c66)))), CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) ELSE CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN t0.c66 WHEN rt1.c1 THEN t0.c66 END END, CAST(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN NULL ELSE rt1.c0 END AS INTEGER) FROM rt1, t0 WHERE ((((CASE WHEN 0xffffffffef5003f1 THEN x'b7f4' END))<((((((0.7925744669648391)OR(0.02007693624338236)))OR(x'')))))) LIMIT -1579764776; -- 1ms;
SELECT LENGTH((((t0.c66))<=((rt1.c2)))) FROM t0, rt1 WHERE (CAST((('-1119070847') IS TRUE) AS INTEGER)) GROUP BY ((((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)))OR(((rt1.c1) IS TRUE))) HAVING (+ (x'')); -- 0ms;
SELECT ((((((t0.c66)<(rt1.c0)))OR(((rt1.c2) IS FALSE))))AND((((rt1.c2, rt1.c1, t0.c66, rt1.c1, rt1.c0)) BETWEEN ((t0.c66, rt1.c1, x'', rt1.c0, t0.c66)) AND ((rt1.c2, rt1.c1, t0.c66, rt1.c2, t0.c66))))) FROM rt1;SELECT DISTINCT ((((rt1.c0 IN ()), ((t0.c66)+(NULL)), ((rt1.c2)=(rt1.c0))))>=((CAST(rt1.c0 AS NUMERIC), (rt1.c1 IN ()), t0.c66))) FROM rt1, t0; -- 0ms;
SELECT (x'' IN ()), ((((rt1.c2)AND(TOTAL(t0.c66))))AND(((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))), x'' FROM rt1, t0; -- 0ms;
SELECT ALL (('311995199') IS TRUE) FROM t0, rt1 LIMIT -2118353905; -- 0ms;
SELECT DISTINCT 0.7551292392619977 FROM t0, rt1; -- 0ms;
SELECT (('-468187056' COLLATE RTRIM)GLOB(COUNT(*))) FROM t0 WHERE (NULL); -- 0ms;
SELECT ((((rt1.c1) ISNULL))>>(rt1.c2)) FROM t0, rt1 WHERE ((((((('0.3056766732712136')AND('-k/oP{')))AND('-606521056')))GLOB(CASE 'Y썸^''(賁3'  WHEN NULL THEN -1.036093982E9 ELSE '' END))); -- 0ms;
SELECT ((((rt1.c0)||(rt1.c0))) NOT BETWEEN (CASE NULL  WHEN rt1.c1 THEN t0.c66 ELSE rt1.c0 END) AND (TOTAL(''))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT NTILE(LTRIM(TRIM(rt1.c1, rt1.c0), (((rt1.c0, rt1.c2, rt1.c2))<=((rt1.c0, rt1.c1, rt1.c0))))) OVER () FROM rt1;SELECT DISTINCT '-1808984008' FROM rt1, t0 WHERE (CAST('789625915' AS NUMERIC) COLLATE RTRIM); -- 0ms;
SELECT ((((rt1.c2)OR(((rt1.c2) IS TRUE))))AND(rt1.c1 COLLATE NOCASE)) FROM rt1; -- 0ms;
SELECT ALL (NOT (CAST(t0.c66 AS TEXT))) FROM t0; -- 0ms;
SELECT ALL rt1.c0 FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((((t0.c66)<(rt1.c1))) NOT BETWEEN (((t0.c66)IS NOT(rt1.c0))) AND (rt1.c2)) FROM t0 WHERE (CASE ((x'4b63')|('E'))  WHEN ((NULL) BETWEEN (0Xffffffff8003c9a2) AND ('g^.xIi\r')) THEN CASE WHEN x'' THEN NULL END END);SELECT DISTINCT t0.c66 FROM rt1;SELECT DISTINCT CASE ((t0.c66)GLOB(rt1.c0))  WHEN x'6eab' THEN ((rt1.c1) NOT BETWEEN (t0.c66) AND (rt1.c0)) END FROM t0, rt1 GROUP BY (('%>摓m)') BETWEEN (((rt1.c1) IS FALSE)) AND (rt1.c2)), 0.18768670716012592, (~ (((0.8340560012705378)||(t0.c66)))); -- 0ms;
SELECT -1023368887, ((((t0.c66)|(x'')))||(((rt1.c0)||(rt1.c1)))), (((rt1.c2)) NOT BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((((((rt1.c0)OR(rt1.c1)))OR(rt1.c1))))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT CAST(CAST(rt1.c0 AS REAL) AS TEXT) FROM rt1, t0 WHERE (((((((0Xffffffff9ac33c65)*(x'a784')))AND(((0.4617092383234367) BETWEEN (x'') AND (NULL)))))OR(((0xffffffff983fe5dd)+(''))))); -- 0ms;
SELECT DISTINCT ((((0x1ca80dd5)AND(CAST(t0.c66 AS REAL))))AND(x'')) FROM t0 WHERE (((((x'')>>(0xffffffffb150577d))) BETWEEN (NULL) AND ((('930952813') BETWEEN (NULL) AND (x''))))); -- 0ms;
SELECT ALL CAST(rt1.c2 AS BLOB), ((t0.c66)&(rt1.c2)) COLLATE BINARY, rt1.c1 FROM t0 WHERE ((0.35037748463300555 IN ())) ORDER BY UPPER((((rt1.c0))<=((rt1.c1))));SELECT ALL ((t0.c66) NOTNULL) FROM rt1, t0; -- 0ms;
SELECT DISTINCT CASE WHEN (((rt1.c0))>=((rt1.c2))) THEN ((rt1.c2) NOTNULL) ELSE ((((rt1.c0)AND(t0.c66)))AND('')) END, CUME_DIST() OVER (), ((CAST(rt1.c0 AS BLOB))GLOB(ABS(DISTINCT rt1.c1))) FROM rt1 GROUP BY ((CAST(t0.c66 AS NUMERIC)) NOTNULL), 0.09735997378261796, ((0.05947519401059631) NOT NULL);SELECT ALL ((CASE t0.c66  WHEN rt1.c2 THEN rt1.c0 WHEN t0.c66 THEN t0.c66 WHEN t0.c66 THEN t0.c66 ELSE rt1.c2 END) NOTNULL) FROM rt1 WHERE (((CASE 0.7279936381443893  WHEN x'2517' THEN 0.5060650196633776 END) NOT BETWEEN (((NULL)=(x'e56f'))) AND (x'3243'))) LIMIT 312490819 OFFSET -239579979;SELECT ALL (+ (COUNT(''))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(ABS(DISTINCT x'') AS TEXT) FROM t0, rt1 WHERE ((CAST(NULL AS REAL) IN ())); -- 0ms;
SELECT ((0.5276821143644449)-(rt1.c0)) FROM rt1 WHERE (((((0.8439875227669227)||('335056065')))>>((- (NULL))))); -- 0ms;
SELECT ALL ((((((rt1.c2) BETWEEN (x'f344') AND (rt1.c1)))OR(((rt1.c0)OR(t0.c66)))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END)) FROM t0, rt1 WHERE (('-694926397' IN ()) COLLATE RTRIM) GROUP BY TYPEOF(((rt1.c0) NOTNULL)) HAVING '376166282' COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((t0.c66)) BETWEEN ((rt1.c1)) AND (((t0.c66 IN ())))), NTH_VALUE(((((((((((t0.c66)<=(t0.c66)))OR(((t0.c66) BETWEEN (t0.c66) AND (t0.c66)))))AND(x'db1e882c')))OR(((x'17b2') IS TRUE))))AND(((t0.c66) IS FALSE))), t0.c66) OVER ( PARTITION BY ((((t0.c66 COLLATE RTRIM)OR((- (rt1.c2)))))OR(CAST(t0.c66 AS NUMERIC))), CASE t0.c66  WHEN rt1.c0 THEN rt1.c1 END COLLATE NOCASE), STRFTIME(rt1.c0, t0.c66, t0.c66) COLLATE BINARY, (((((rt1.c0)IS NOT(rt1.c1))))<=(((('-1755265117') BETWEEN (t0.c66) AND (NULL))))), ((TOTAL(x''))<<(((rt1.c0) NOT BETWEEN (rt1.c1) AND (t0.c66)))) FROM t0 WHERE (UNLIKELY((- (0.6589105883505734))));SELECT DISTINCT (((t0.c66 COLLATE NOCASE))<=((CASE WHEN NULL THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN t0.c66 ELSE t0.c66 END))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT (((- (t0.c66)))>(((rt1.c0) IS FALSE))) FROM rt1;SELECT DISTINCT TRIM(DISTINCT (((t0.c66)) BETWEEN ((rt1.c1)) AND ((t0.c66)))) FROM rt1, t0 WHERE ((((('1345944239')+('FH')))!=(CAST('gz(p' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (- ((((rt1.c2))>(('kJ>k|t'))))) FROM t0 WHERE (((((('1498481548')) NOT BETWEEN ((NULL)) AND ((x''))))GLOB((((0X6c139aab)) NOT BETWEEN ((-462246097)) AND ((5.66052383E8)))))) LIMIT -1108821270 OFFSET 174870395;SELECT DISTINCT CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)) END FROM t0 WHERE (NULL);SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 WHERE (((x'53a6' IN (x'')) IN (CAST(x'1bfd' AS NUMERIC)))); -- 0ms;
SELECT CASE CASE t0.c66  WHEN t0.c66 THEN t0.c66 ELSE rt1.c0 END  WHEN ((rt1.c2)IS(rt1.c1)) THEN STRFTIME(rt1.c2, rt1.c0, t0.c66) WHEN CAST(rt1.c0 AS REAL) THEN COUNT(*) WHEN rt1.c2 THEN (((rt1.c2)) NOT BETWEEN ((t0.c66)) AND ((rt1.c2))) ELSE (+ (t0.c66)) END FROM t0;SELECT ALL (((rt1.c1)) BETWEEN ((((((t0.c66)OR(rt1.c0)))OR(rt1.c1)))) AND ((((rt1.c1)+(t0.c66))))) FROM rt1 WHERE (('' IN ()) COLLATE BINARY);SELECT TOTAL(rt1.c2) OVER () FROM t0, rt1; -- 0ms;
SELECT ((((CASE t0.c66  WHEN t0.c66 THEN rt1.c0 ELSE rt1.c0 END)AND(((rt1.c0)*(rt1.c2)))))OR((+ (t0.c66)))) FROM t0 INDEXED BY i34;SELECT CAST(((rt1.c2) BETWEEN (t0.c66) AND (rt1.c0)) AS BLOB) FROM t0, rt1; -- 1ms;
SELECT ((((((rt1.c0)IS NOT('1572723077')))OR(CASE WHEN t0.c66 THEN t0.c66 ELSE rt1.c0 END)))AND(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)), ((((rt1.c2)AND(0.9460764018719657)))<(((rt1.c0)&(rt1.c2)))), (((-2.038187764E9))>(((~ (rt1.c0))))) FROM rt1 WHERE ((+ ((+ (x'')))));SELECT DISTINCT rt1.c1, ((((NULL)AND(json_array_length(rt1.c0))))AND(((rt1.c2)*(t0.c66)))), 0x1fad3acc FROM t0 NOT INDEXED, rt1 ORDER BY json_array_length((- (rt1.c2)), (~ (rt1.c1))) DESC;SELECT DISTINCT CASE (rt1.c1 IN (0.3545779840199167, rt1.c2))  WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c2) IS FALSE) WHEN (+ (rt1.c1)) THEN ((rt1.c0)*(rt1.c2)) WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END THEN (rt1.c2 IN ()) ELSE '0.29656098746628734' END FROM rt1 WHERE (CASE WHEN ((('760732870')) BETWEEN ((0Xffffffff96b5975c)) AND ((x''))) THEN CASE WHEN x'5231' THEN '-152927142' ELSE x'' END ELSE CAST(x'2862' AS NUMERIC) END); -- 0ms;
SELECT rt1.c1, CASE (((t0.c66))<>((t0.c66)))  WHEN ((rt1.c2) NOTNULL) THEN TYPEOF(rt1.c1) WHEN ((((t0.c66)OR(0.32855796786461966)))AND(rt1.c2)) THEN rt1.c1 WHEN ((rt1.c0)IS NOT(rt1.c0)) THEN ABS(0.2663166369973168) ELSE (((('725581181')AND(rt1.c2)))AND(t0.c66)) END, ((((rt1.c0)||(rt1.c0))) NOT NULL) FROM rt1;SELECT ALL COUNT(json_array(rt1.c0, rt1.c1)) COLLATE BINARY, MAX(((((((((t0.c66)OR(t0.c66)))AND(rt1.c1)))AND(rt1.c0)))OR(t0.c66))), AVG(-1929258602) FROM t0 GROUP BY 'l>0/' HAVING (((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN ((((((rt1.c2)OR(rt1.c0)))OR(t0.c66)), AVG(0.6771847031364047), ((rt1.c1) NOTNULL))) AND ((CAST(t0.c66 AS REAL), CAST(rt1.c0 AS REAL), DATE(rt1.c1, rt1.c1, t0.c66, t0.c66, rt1.c1))));SELECT DISTINCT (((((rt1.c1)||(rt1.c1)), TIME(0.33261517931595397, rt1.c2, rt1.c0), 0.8395203214110417))<=((((t0.c66) NOT NULL), ((rt1.c2)<>(rt1.c0)), NULL))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT SUM(((rt1.c0) IS TRUE)) OVER () FROM t0, rt1 WHERE (CAST(x'' AS INTEGER) COLLATE RTRIM COLLATE NOCASE) LIMIT -343324354 OFFSET -1337446627; -- 0ms;
SELECT ALL (CAST(t0.c66 AS TEXT) IN ()), ((((((t0.c66)OR(rt1.c1)))OR(rt1.c0)))GLOB(CAST(x'' AS INTEGER))), TOTAL((~ (rt1.c0))) OVER ( PARTITION BY json_array_length(t0.c66 COLLATE BINARY, (((rt1.c2, t0.c66, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c1)) AND ((rt1.c2, t0.c66, t0.c66)))), (+ ((((rt1.c2))<>((rt1.c0)))))) FROM rt1, t0;SELECT NULL FROM t0, rt1 WHERE ((((((0.6477177847006836)LIKE('OᑃH'))))<>((((-1.53807742E9) IS TRUE))))); -- 0ms;
SELECT ALL ((((rt1.c2)AND(rt1.c2)))<<(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))), (((((((rt1.c1)AND(rt1.c1)))OR(t0.c66))))>=((((((t0.c66)OR(rt1.c2)))AND(t0.c66))))), LIKELY(rt1.c1 COLLATE BINARY) FROM rt1, t0 ORDER BY ((rt1.c2 COLLATE RTRIM)>>((+ (rt1.c2)))) ASC  NULLS FIRST, ((CASE WHEN t0.c66 THEN rt1.c2 ELSE rt1.c0 END) ISNULL) DESC  NULLS LAST, (((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((((0.38105494122709704) BETWEEN (0.8382595828143606) AND (rt1.c1)), ((((((((rt1.c1)AND(rt1.c1)))AND('393595602')))AND(rt1.c0)))AND(rt1.c0)), (rt1.c2 IN ()))) AND ((((rt1.c0) ISNULL), json_object(rt1.c0, rt1.c2), CAST(rt1.c2 AS NUMERIC)))) ASC  NULLS FIRST, (((t0.c66 IN ()))!=((((rt1.c0))>((rt1.c2)))));SELECT DISTINCT MIN((t0.c66 IN (rt1.c1))) FROM rt1 WHERE ((((CASE WHEN NULL THEN NULL ELSE x'' END))=((SQLITE_VERSION()))));SELECT DISTINCT CAST(CASE t0.c66  WHEN t0.c66 THEN t0.c66 END AS TEXT), (((~ (rt1.c1))) BETWEEN ((- (rt1.c2))) AND (((rt1.c1)*(rt1.c0)))), (((AVG(rt1.c0)))>((0.07016016559803606))) FROM t0, rt1 NOT INDEXED LIMIT 5330299315670740974 OFFSET 1354983030; -- 0ms;
SELECT ALL (NOT (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN t0.c66 THEN x'3955' WHEN rt1.c1 THEN t0.c66 ELSE rt1.c2 END)) FROM rt1;SELECT DISTINCT (((rt1.c1, 'KR', t0.c66)) BETWEEN (((~ ('1421731491')), (NOT (rt1.c1)), (t0.c66 IN ()))) AND (((((rt1.c1))<((rt1.c2))), ((rt1.c2) IS TRUE), AVG(rt1.c1)))), ((ROUND(rt1.c2, x'a0ba'))<=(((t0.c66) IS TRUE))), ((((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)))OR(COUNT(*))))OR(((((((((((((rt1.c0)AND(rt1.c2)))OR(t0.c66)))OR(t0.c66)))AND(t0.c66)))AND(rt1.c2)))AND(rt1.c1)))))AND(((t0.c66) NOT BETWEEN (t0.c66) AND (rt1.c2)))))OR(((t0.c66) ISNULL))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT LEAD((((((t0.c66)&(t0.c66))))<=((((t0.c66)>(t0.c66))))), ((((t0.c66) NOT BETWEEN (t0.c66) AND (t0.c66))) NOT NULL), ((~ (t0.c66)) IN (((t0.c66) NOT BETWEEN ('1176274957') AND (t0.c66)), t0.c66))) OVER () FROM t0; -- 1ms;
SELECT DISTINCT CASE t0.c66  WHEN CASE WHEN rt1.c1 THEN rt1.c0 END THEN CAST(t0.c66 AS INTEGER) END FROM t0, rt1; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1, t0 WHERE (((('-1286629100', 0Xffffffffc074f96e, NULL)) BETWEEN (((((x'bcde'))!=(('mVR-'))), HEX(DISTINCT x''), ((((x'e8cf06a1')OR('1q')))OR('606218116')))) AND ((ABS(''), ((0.3846747868333348) IS FALSE), ((0.43513688697735897) NOT BETWEEN ('') AND ('494524648')))))) GROUP BY UNLIKELY(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0))) HAVING COUNT(DATETIME(rt1.c0, rt1.c1, rt1.c2)); -- 0ms;
SELECT DISTINCT CAST(MAX(rt1.c0) AS BLOB), (((('' IN ())))!=(((((rt1.c1, t0.c66, rt1.c1))<=((rt1.c1, t0.c66, rt1.c2)))))), AVG(((('Gd', rt1.c2, rt1.c0))>=((x'', t0.c66, t0.c66)))), x'', ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c66 END)||((NOT (t0.c66)))) FROM rt1, t0; -- 0ms;
SELECT ALL SUM(CAST(t0.c66 AS REAL)) OVER (), SUM(((rt1.c2) IS FALSE)), CAST(((t0.c66) IS FALSE) AS REAL) FROM rt1, t0 WHERE ((((CASE WHEN 0X4a7cbd69 THEN '' ELSE 0.7490904981832075 END))>=((((NULL)>(NULL)))))) GROUP BY ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c0))) NOTNULL) HAVING (~ (((((rt1.c0)AND(rt1.c0)))AND(t0.c66)))); -- 0ms;
SELECT DISTINCT CAST((+ (rt1.c2)) AS REAL) FROM rt1 WHERE (0Xffffffffb61746aa) LIMIT 566052383 OFFSET 201415626; -- 0ms;
SELECT DISTINCT ((((t0.c66)>>(rt1.c0))) NOT BETWEEN ((('') BETWEEN (rt1.c2) AND (rt1.c0))) AND (((1.75944869E8) IS TRUE))) FROM t0, rt1 WHERE (((NULL)<>((x'8739' IN (NULL))))); -- 0ms;
SELECT DISTINCT CAST((rt1.c0 IN ()) AS REAL) FROM rt1, t0 WHERE (CAST(((((((((x'6e66')AND(x'')))AND(NULL)))OR(0.8724981505323101)))OR(-2144103666)) AS BLOB)); -- 0ms;
SELECT (~ ((((rt1.c0))=((rt1.c1))))), TYPEOF(DISTINCT ((((rt1.c1)OR(rt1.c2)))OR(rt1.c2))), ((CAST(t0.c66 AS INTEGER))LIKE((~ (rt1.c2)))) FROM t0, rt1 WHERE (((json_object(0.5117784212455623, x'', -1.886261186E9, ''))GLOB(((0.9129163985010587) IS FALSE))));SELECT DISTINCT MAX((rt1.c0 IN ())), LAST_VALUE(((((rt1.c2)%(rt1.c2)))AND(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END))) OVER (), (- (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))) FROM rt1, t0 WHERE ((~ (CASE WHEN x'' THEN NULL ELSE NULL END))); -- 0ms;
SELECT rt1.c2 COLLATE BINARY FROM t0, rt1 WHERE (((0X2298485e COLLATE NOCASE) BETWEEN ((((''))<=((x'')))) AND (((x'f36a')GLOB(x''))))); -- 0ms;
SELECT '', t0.c66, (+ ((((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c2))))) FROM t0;SELECT ALL ((((((((LIKELIHOOD(DISTINCT rt1.c2, 0.8516692483151623))AND((((t0.c66))>=((t0.c66))))))AND(NULL)))OR(((t0.c66) IS TRUE))))OR(CAST(rt1.c2 AS NUMERIC))), (((rt1.c2)) NOT BETWEEN ((LIKE(rt1.c1, rt1.c2))) AND ((((rt1.c2) BETWEEN (rt1.c0) AND (t0.c66))))), (((t0.c66 IN ()))/(CASE WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c1 WHEN 0.5482438373497823 THEN rt1.c2 END)) FROM rt1, t0 WHERE (CAST(((((0.6597891135364028)OR('rm')))AND(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT MIN(((rt1.c1) NOT BETWEEN (t0.c66) AND (rt1.c0))) FROM rt1 WHERE (((HEX(932485528)) BETWEEN (((x'')*(x'2131'))) AND (((0.18908278666289036)%('')))));SELECT DISTINCT 'ナ*>UHS' FROM rt1, t0; -- 0ms;
SELECT ((((('-1059450703' IN ()))OR(NULL)))AND(((((((((t0.c66)AND(rt1.c2)))AND(rt1.c2)))OR(t0.c66)))AND(rt1.c2)))), (SQLITE_COMPILEOPTION_GET(rt1.c2) IN ()), CAST((t0.c66 IN ()) AS INTEGER) FROM t0 WHERE (CAST('-730199058' COLLATE NOCASE AS NUMERIC)) LIMIT -531153341;SELECT (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END, ((t0.c66)|(t0.c66)), ((rt1.c1) NOT BETWEEN (x'') AND (t0.c66))))>=((((('698198658')) BETWEEN ((rt1.c0)) AND ((rt1.c2))), rt1.c0 COLLATE NOCASE, ((((rt1.c0)AND(x'')))AND(rt1.c1))))) FROM t0 GROUP BY (((((t0.c66 IN ('323053705')))OR(((rt1.c1) IS TRUE))))OR(CAST(rt1.c1 AS BLOB))) HAVING ((((((((((t0.c66)AND(rt1.c2)))OR(rt1.c0)))AND('17315561')))AND(rt1.c1)))<<(((rt1.c1)IS NOT(t0.c66))));SELECT DISTINCT ROW_NUMBER() OVER () FROM t0, rt1 WHERE ((((NULL) BETWEEN (NULL) AND (0.39916753752422107)) IN ())); -- 0ms;
SELECT COUNT(NULL) FILTER(WHERE (((rt1.c2 IN ()))%(((rt1.c1) BETWEEN (rt1.c0) AND (0.3152774395422654))))) OVER () FROM t0 ORDER BY ((LIKELIHOOD(DISTINCT rt1.c2, 0.6337537454231922)) IS TRUE), (((x'', t0.c66, t0.c66)) NOT BETWEEN ((((((((((t0.c66)OR(t0.c66)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)), ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))) AND (((((t0.c66)) NOT BETWEEN ((rt1.c0)) AND ((t0.c66))), (NOT (rt1.c1)), (rt1.c1 IN ())))) ASC;SELECT DISTINCT NULL FROM rt1 WHERE ((((~ ('932485528')))/(QUOTE(x'')))); -- 0ms;
SELECT DISTINCT '{LnxD*7' FROM t0, rt1 GROUP BY (+ ('T \5')) COLLATE NOCASE COLLATE RTRIM HAVING COUNT(1e500); -- 0ms;
SELECT ALL ((((rt1.c0) NOT NULL))OR(((rt1.c0) BETWEEN (t0.c66) AND (0.30519103905335043)))), ((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)))/(CAST(rt1.c0 AS BLOB))), (NOT (rt1.c2)) FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE FROM t0, rt1 WHERE (((TYPEOF('911308550'))*((((0xffffffffbb627efb)) BETWEEN (('-1066739253')) AND ((-1979817427)))))); -- 0ms;
SELECT ALL rt1.c2 FROM t0, rt1 WHERE (x'') ORDER BY (x'' IN (CAST(1958591198 AS NUMERIC), ((t0.c66)/(rt1.c0))))  NULLS LAST, (((~ (t0.c66))) NOT NULL); -- 0ms;
SELECT ALL (- (CAST(t0.c66 AS BLOB))) FROM rt1;SELECT ALL COUNT(CAST(rt1.c0 AS INTEGER)) FILTER(WHERE ((MAX(t0.c66, rt1.c2)) ISNULL)) OVER () FROM rt1 WHERE ((((NOT ('Zd6'))) NOT BETWEEN (((NULL) NOTNULL)) AND (((((((((-1198963603)OR(1089915807)))OR(x'fe4f')))OR(0.7547959622410059)))OR(0.687322985005582)))));SELECT CASE ((((t0.c66)OR(rt1.c0)))OR(rt1.c2))  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((-6.91002016E8))) THEN ((t0.c66) NOT BETWEEN (rt1.c2) AND (t0.c66)) ELSE rt1.c2 COLLATE RTRIM END, (((((((((rt1.c2)OR(rt1.c0)))AND(t0.c66)))OR(rt1.c2)))OR(rt1.c2)) IN ()), HEX(DISTINCT ((rt1.c1)IS NOT(t0.c66))), ((((rt1.c1) IS TRUE))/(CAST(rt1.c1 AS BLOB))), AVG(rt1.c2) OVER () FROM t0, rt1 WHERE (CASE ((0X79a3e6fe)GLOB('31029807'))  WHEN (+ (0.006885674395933572)) THEN CASE WHEN '' THEN 0.4058248821512187 ELSE 0.6123952950774243 END ELSE ((0.16382798966164513)||(0.5433673338249122)) END); -- 0ms;
SELECT DISTINCT (CASE rt1.c0  WHEN rt1.c1 THEN t0.c66 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c66 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END IN ((t0.c66 IN ()), ((rt1.c2)OR(rt1.c0)))) FROM t0;SELECT DISTINCT CASE WHEN rt1.c1 COLLATE BINARY THEN (((t0.c66))<=((rt1.c0))) WHEN ((rt1.c0)!=(rt1.c0)) THEN rt1.c0 COLLATE BINARY WHEN SUM(rt1.c2) THEN 0xffffffffb6bafdf7 ELSE ((t0.c66)-(rt1.c1)) END, ((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN t0.c66 WHEN rt1.c0 THEN rt1.c0 END) NOT NULL), rt1.c0 FROM rt1, t0 WHERE ((~ (NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((((rt1.c2 IN (rt1.c1)))OR(MIN(rt1.c2))))OR(CASE WHEN rt1.c1 THEN rt1.c1 END)), (((rt1.c0 COLLATE BINARY))==(((rt1.c2 IN (t0.c66, rt1.c2))))), LIKELY(DISTINCT rt1.c0) COLLATE NOCASE FROM rt1;SELECT ALL ((MAX(rt1.c0))+(((((rt1.c2)OR(t0.c66)))AND(t0.c66)))) FROM t0;SELECT DISTINCT (((t0.c66)) BETWEEN ((((rt1.c1) NOTNULL))) AND ((((t0.c66) NOT BETWEEN (rt1.c1) AND (rt1.c0))))), TOTAL((rt1.c0 IN (t0.c66))), (((rt1.c1)||(rt1.c0)) IN (TOTAL(t0.c66))), (((t0.c66) ISNULL) IN ()), COUNT(*) OVER () FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END) NOT NULL) FROM rt1, t0 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)GLOB(((rt1.c2)>(rt1.c0)))) DESC  NULLS LAST, -9.52335601E8; -- 0ms;
SELECT ALL (((- (rt1.c0)))<(CAST(rt1.c1 AS REAL))) FROM t0, rt1 WHERE ((((0.11538984090409343)) BETWEEN ((((NULL)<>('-327332089')))) AND ((CASE WHEN NULL THEN 0.5043319163304261 ELSE 0.4481161016660633 END)))) GROUP BY ((CASE t0.c66  WHEN t0.c66 THEN rt1.c0 END) IS TRUE) HAVING CASE ((t0.c66)>=(rt1.c2))  WHEN ((rt1.c0)*(rt1.c2)) THEN (((rt1.c2, rt1.c1, rt1.c2))>=((rt1.c2, rt1.c2, rt1.c0))) ELSE GROUP_CONCAT(rt1.c2) END; -- 0ms;
SELECT ALL IFNULL(DISTINCT (- (rt1.c2)), ((rt1.c0)<(rt1.c0))), ((CAST(t0.c66 AS REAL))/(((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))), (((((~ (rt1.c1)))AND((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND (('1635634281'))))))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (t0.c66)))) FROM t0 WHERE ((((+ (x'438a'))) NOTNULL));SELECT ((((rt1.c0)<=(rt1.c2)))%((((rt1.c1, rt1.c0, t0.c66)) NOT BETWEEN ((rt1.c2, t0.c66, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c0))))) FROM t0 WHERE ((((- (0xffffffffb7172b8d))) ISNULL));SELECT DISTINCT CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (t0.c66)) AS NUMERIC) FROM rt1;SELECT DISTINCT CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN t0.c66 THEN rt1.c1 ELSE rt1.c2 END THEN ((rt1.c1)<=(rt1.c1)) END FROM t0, rt1; -- 0ms;
SELECT DISTINCT CAST(rt1.c1 AS INTEGER) COLLATE BINARY FROM rt1, t0; -- 0ms;
SELECT DISTINCT (NOT (((((t0.c66)AND(rt1.c0)))AND(rt1.c0)))) FROM t0 LEFT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, t0.c66)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE 'ᠸF3' END, '-1533489592', (((rt1.c0, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, t0.c66, rt1.c0)) AND ((rt1.c2, -1779237188, t0.c66))))) AND (((NOT (t0.c66)), NULLIF(rt1.c2, rt1.c2), ((((rt1.c1)OR(t0.c66)))OR(rt1.c1))))); -- 0ms;
SELECT ALL (((CAST(rt1.c1 AS TEXT)))<(('1034126556'))), ((((((rt1.c2)AND(rt1.c1)))OR(t0.c66))) IS TRUE), ((CAST(t0.c66 AS NUMERIC))*(QUOTE(rt1.c1))) FROM rt1 WHERE (DATETIME((('1635682623')IS NOT(0xffffffff9eb69201)), 0Xfffffffffec03914, ((x'') BETWEEN (NULL) AND (NULL))));SELECT DISTINCT (NOT (UPPER(DISTINCT rt1.c2))) FROM t0 WHERE (TYPEOF(DISTINCT '') COLLATE RTRIM);SELECT DISTINCT (((rt1.c0)<<(t0.c66)) IN ()) FROM t0, rt1; -- 0ms;
