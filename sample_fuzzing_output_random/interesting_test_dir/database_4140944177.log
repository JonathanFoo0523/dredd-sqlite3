-- Time: 2024/06/07 10:52:48
-- Database: database77
-- Database version: 3.40.0
-- seed value: 4140944177
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED, c2, tokenize = "porter"); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, notindexed=c0); -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c2) VALUES (0.22239593567110083, 0.22239593567110083); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR FAIL vt1 SET c0=0.22239593567110083 WHERE (((CAST(NULL AS REAL), ((('x\'))<=((vt1.c0))), x'', vt1.c0, (vt1.c0 IN (vt1.c0, vt1.c0))))!=(((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))), CASE 0.22239593567110083  WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS TRUE)))); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'' WHERE ((CAST(vt1.c0 AS NUMERIC))/(((vt1.c0)>=(x'280d')))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1436225425);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA default_cache_size = 1997383167; -- 0ms;
PRAGMA threads = 7256024908949496872; -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
PRAGMA temp.soft_heap_limit = 1436225425; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=''; -- 0ms;
REINDEX  vt0; -- 0ms;
DELETE FROM vt1 WHERE ((((vt1.c0)OR(LIKE(vt1.c0, vt1.c0))))AND((NOT (vt1.c0)))); -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('0'), (1.436225425E9), (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -369342825);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE temp; -- 1ms;
UPDATE OR IGNORE vt1 SET c0=x'' WHERE ((((- (vt1.c0)), (((vt1.c0))<((vt1.c0))), 0.03102997633643878))<=((((vt1.c0)<=(vt1.c0)), vt1.c0 COLLATE NOCASE, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.5615553080053659); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (-895990900), (x''), (0.03102997633643878); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 noskipscan'); -- 0ms;
UPDATE vt1 SET (c0, c0, c0, c0)=('125299556', NULL, x'', NULL) WHERE (((((vt1.c0)<(vt1.c0))))=(((NOT (vt1.c0))))); -- 1ms;
INSERT OR FAIL INTO vt0(c1) VALUES ('7e'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1971030731); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c2='125299556'; -- 1ms;
INSERT OR FAIL INTO vt1 VALUES (x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('950270357'); -- 0ms;
PRAGMA main.mmap_size = 1135347543530194390; -- 0ms;
DROP TABLE IF EXISTS vt1; -- 1ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR REPLACE INTO vt0(c2) VALUES (x''), (0.9248135458348065), (-130178849); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_size; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE vt0 SET c2='-130178849'; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=x''; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0X41f1bd3f), (NULL), (0Xfffffffff12e9d64); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c2, c0) VALUES (-1383307924, -0.0, '7e'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=('7s'); -- 4ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO vt0(c2) VALUES (NULL), (x'4079'), (NULL), ('x\'), (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL WHERE ((vt0.c1 IN ()) IN ()); -- 0ms;
UPDATE OR REPLACE vt0 SET (c2)=(NULL); -- 0ms;
UPDATE vt0 SET c2=x'' WHERE CASE WHEN ((vt0.c2)*(vt0.c2)) THEN CAST(vt0.c0 AS REAL) END; -- 0ms;
INSERT OR REPLACE INTO vt0(c2, c1) VALUES (x'', x''), (x'', 0.22190287505556716), (x'', NULL), (NULL, -1383307924), (NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (-1274669202), (NULL), (0.20375590207183092), (1487596975), ('-110755243'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1301119413); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.4830740836503732); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(0.6641823329318882) WHERE LOWER((NOT (vt0.c0))); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.6641823329318882, 0.7550051237610896, NULL), (x'288d', x'', 0.6065772112716278), ('p{H0th', '1487596975', 0.01793646273289784); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('>~TY I'), (0.6770841706361981), (988626751); -- 0ms;
UPDATE OR IGNORE vt0 SET c2=0.7536741857185224; -- 0ms;
PRAGMA temp.cache_spill = 1988925537159479775; -- 0ms;
UPDATE OR IGNORE vt0 SET c1='#)69	{RL봿'; -- 0ms;
PRAGMA integrity_check; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c2, c0) VALUES ('0.22190287505556716', NULL, NULL), (NULL, 0.04511524132775424, x''), (x'', x'', x'dcf8'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1, c2) VALUES (0.3026518070737543, 0.9134646300007289, 0.6951921311453905); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA incremental_vacuum(985932952); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.4662417507342156), (x''), (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c2=0Xffffffffa26f448d WHERE ((((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))OR(vt0.c1 COLLATE NOCASE)))OR(vt0.c2 COLLATE BINARY)); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('-1383307924'); -- 3ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
UPDATE OR IGNORE vt0 SET (c2, c0)=('', NULL) WHERE (+ ((vt0.c2 IN ()))); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE vt0 SET (c1)=(0x58aaedaf); -- 3ms;
UPDATE vt1 SET c0='8秊FT ' WHERE ((vt1.c0 COLLATE BINARY)<(((vt1.c0)>(vt1.c0)))); -- 0ms;
INSERT OR REPLACE INTO vt0(c2) VALUES (x'7cbe'), (0.2939033070307907), ('0.22190287505556716'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 272651643); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ALL (((((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c0))))||(vt0.c2)), GROUP_CONCAT(((vt0.c2) ISNULL)) FILTER(WHERE CAST(vt1.c0 AS INTEGER) COLLATE BINARY) OVER (), (((- (vt1.c0)))<<(((((x'')AND(vt0.c1)))AND(x'')))) FROM vt1, vt0 WHERE (TRIM(DISTINCT IFNULL(0.7382069711795154, 'M4'), CASE WHEN '' THEN x'' WHEN NULL THEN x'' WHEN x'f94e' THEN 0.4662417507342156 END)) ORDER BY (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN '' THEN vt0.c2 WHEN vt1.c0 THEN '' WHEN vt0.c2 THEN vt0.c1 WHEN '-110755243' THEN vt1.c0 END IN ())  NULLS FIRST; -- 0ms;
SELECT LOWER(DISTINCT MAX(vt0.c0)) FROM vt1 WHERE (x'');SELECT ALL ((((((((vt0.c0 COLLATE BINARY)OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))OR(((vt0.c0) IS TRUE))))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END)))AND(AVG(vt0.c1))) FROM vt0, vt1 WHERE ((((NULL) BETWEEN (0.7500397446523845) AND (NULL)) IN ())); -- 0ms;
SELECT DISTINCT (((vt0.c2, vt1.c0, x''))>=((vt0.c1, vt0.c0, vt0.c2))) COLLATE RTRIM, (((- (vt1.c0)))<(((vt0.c0)IS NOT(vt0.c1)))), MAX(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt1.c0))) FROM vt0 WHERE (TYPEOF(LIKELIHOOD(NULL, 0.06048904868788674)));SELECT DISTINCT CASE ((vt1.c0)/(0.9825463348912074))  WHEN (vt1.c0 IN ()) THEN (((vt0.c0))!=((vt0.c0))) END FROM vt0, vt1 WHERE (((((0Xffffffffca98438c) NOT BETWEEN (NULL) AND (NULL))) NOT BETWEEN ((('1436225425') BETWEEN (NULL) AND ('衳'))) AND ('2004451082'))); -- 0ms;
SELECT ALL ((((((vt0.c0)GLOB(vt0.c1)))OR(CAST(vt0.c1 AS NUMERIC))))OR(CAST(vt0.c2 AS BLOB))) FROM vt1;SELECT ALL ((vt0.c0 IN ()) IN (MIN(vt0.c1), CAST(vt0.c2 AS TEXT))) FROM vt0 WHERE (((0.20375590207183092) IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c2))<(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))) FROM vt1, vt0 WHERE (((0.34642891875061776)IS NOT('8C4F')) COLLATE RTRIM); -- 0ms;
SELECT ((((vt0.c2)GLOB(vt0.c2)))*(vt0.c1)) FROM vt0; -- 0ms;
SELECT (~ (x'')), CAST(((vt0.c2)IS(vt0.c2)) AS BLOB), ((((vt0.c1) NOTNULL)) NOTNULL) FROM vt1 WHERE ((- (CAST(0.6770841706361981 AS TEXT)))) GROUP BY (((vt0.c0 IN ())) ISNULL), (((((((((NOT (vt0.c2)))OR(((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))AND(vt1.c0)))))AND((NOT (vt0.c0)))))OR((((vt0.c0, vt1.c0, vt0.c2)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c2)) AND ((vt1.c0, vt1.c0, vt0.c2))))))OR('1436225425')), TYPEOF(((vt1.c0)|(vt0.c0)));SELECT DISTINCT vt0.c0, (((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), TRIM(DISTINCT vt0.c0)))>=((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), (('-1274669202')>(NULL)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))), NULL, (((x'' IN ()))==(((vt0.c1)/(vt0.c1)))), TOTAL(SUM((NULL IN (vt1.c0, vt1.c0)))) FROM vt0, vt1 WHERE ((~ (x'4849' COLLATE NOCASE)));SELECT ALL GROUP_CONCAT(((vt0.c1) ISNULL)) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c2 END) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (vt0.c0 COLLATE BINARY)) FROM vt1;SELECT DISTINCT (-1383307924 IN ()) FROM vt1 GROUP BY '-526546937', ((((vt0.c2)>(vt0.c1)))>=(HEX(vt0.c0))), ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL) HAVING vt1.c0;SELECT ALL (((- (vt0.c1))) IS FALSE) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT SUM(LENGTH(vt0.c2)) OVER () FROM vt0; -- 0ms;
SELECT ALL ((SUM(vt0.c2)) NOT NULL) FROM vt1, vt0 WHERE (CAST(((0.5939361108719807)LIKE(x'')) AS TEXT)) GROUP BY HEX(DISTINCT (- (vt0.c0))); -- 0ms;
SELECT DISTINCT COUNT(LIKELY(DISTINCT 2.004451082E9)), ((((vt0.c0)LIKE(vt0.c1))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))), CASE WHEN AVG(vt0.c1) THEN CAST(vt0.c0 AS REAL) ELSE (vt0.c0 IN ()) END, ((((vt0.c0) BETWEEN (x'') AND (vt1.c0))) NOT NULL), ((vt0.c2) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE NOCASE FROM vt1 WHERE (((((x'')>=(''))) NOT NULL));SELECT ALL ((TOTAL(vt1.c0)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))), CASE ''  WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c0) NOT NULL) ELSE CAST(x'' AS TEXT) END, ((vt0.c0 COLLATE NOCASE) NOTNULL), (((- (vt0.c2))) IS TRUE), ((MAX(vt0.c2)) IS TRUE) FROM vt1 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE LIMIT -1166484790 OFFSET 2119814999;SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((~ (((0.34642891875061776) BETWEEN (x'7c89') AND ('1997383167'))))); -- 0ms;
SELECT ALL ((((MAX(vt0.c0))OR(((vt1.c0)LIKE(vt0.c0)))))OR(SQLITE_COMPILEOPTION_USED(vt1.c0))), TOTAL(((vt1.c0) IS TRUE)), x'' FROM vt0 NOT INDEXED WHERE (((((('-2007547300')AND('X-A?')))OR(x'')) IN ())) GROUP BY ((((']獪ZJWHQ~K')&(vt0.c0)))=(((vt0.c2) BETWEEN (vt1.c0) AND (vt1.c0))));SELECT DISTINCT COALESCE(DISTINCT ((vt0.c0)|(NULL)), ((vt0.c1)OR('0.4662417507342156')), vt1.c0, (vt0.c2 IN ())) FROM vt1 WHERE (((((((((((0x2c74f104)OR(x'152c')))AND(((x'')>(0.9208232023518599)))))OR(CASE WHEN 1963907083 THEN '&vD' ELSE x'' END)))OR(0.26585908240258904 COLLATE BINARY)))OR(((x'')!=(x'')))));SELECT ((((((vt1.c0) NOTNULL))OR(((vt1.c0)>(vt0.c0)))))OR(0.8281834937777794)), (NOT ((+ (-130178849)))), (((vt0.c1))>((((vt0.c0) NOTNULL)))) FROM vt1, vt0 WHERE ((((('598778242') NOTNULL))>=(CASE WHEN x'' THEN x'' WHEN 5.98778242E8 THEN x'' WHEN 0.8554966347080456 THEN NULL WHEN '' THEN '-110755243' WHEN 0.37890339599815726 THEN NULL ELSE x'7c54' END))); -- 0ms;
SELECT ALL CASE SQLITE_SOURCE_ID()  WHEN (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (NOT (vt0.c1)) ELSE vt0.c1 END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(TOTAL(-1264530347) AS BLOB) FROM vt1, vt0 WHERE (CAST((x'' IN ('')) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((vt0.c2) IS TRUE)) NOTNULL), AVG((+ (vt0.c2))) OVER (), ((((+ (vt0.c0))))<(('1997383167'))) FROM vt1, vt0 WHERE (((((((((CAST('D' AS TEXT))OR(NULL)))OR(((NULL) NOT BETWEEN (0.33831292235261656) AND ('S5[]')))))OR((('2119814999') IS FALSE))))OR(((NULL) BETWEEN (NULL) AND (-1.16648479E9))))); -- 0ms;
SELECT (((vt0.c2)) BETWEEN ((LOWER(DISTINCT vt1.c0))) AND ((x''))), (((0.47024712820394343)>(vt0.c0)) IN ()), MIN(NULL) FROM vt1, vt0 WHERE (CASE WHEN json_array('', '0.6641823329318882') THEN ((x'aa22') NOT BETWEEN (-1555414350) AND (0Xffffffffa34a42b2)) END) GROUP BY ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN 0.20964655532018395 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))) AND ((+ (vt0.c1)))), '-211122061', CASE WHEN vt0.c2 COLLATE RTRIM THEN ((vt1.c0)IS NOT(vt0.c2)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c2)))OR(x'')) THEN (NOT (vt0.c1)) WHEN vt0.c2 THEN '-1171643014' END; -- 0ms;
SELECT ALL CAST((NOT (vt1.c0)) AS NUMERIC) FROM vt0 WHERE (((((0.003500080350947732)*('N4XF')))GLOB((NULL IN ()))));SELECT DISTINCT (((((vt0.c1)LIKE(vt0.c0))))<=((vt1.c0))), MIN((((-369342825)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2)))), (((CAST(vt0.c2 AS TEXT), CASE vt1.c0  WHEN vt0.c2 THEN vt0.c1 END, COUNT(vt0.c2)))>(('p{H0th', GLOB(vt1.c0, vt1.c0), ((vt1.c0) NOT NULL)))) FROM vt0 LIMIT -1569766259;SELECT DISTINCT (- (0.5302571803791247)), ((((((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt1.c0)))AND(((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)))))OR(((vt0.c2)GLOB(vt0.c0)))))AND(MIN(vt1.c0))))AND('q*')), CAST(x'' AS BLOB) COLLATE RTRIM FROM vt1, vt0; -- 0ms;
SELECT DISTINCT LIKE(0.8380546680372517, vt0.c0, 'I') COLLATE NOCASE FROM vt1;SELECT ALL CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1) IS TRUE) WHEN TOTAL(vt0.c2) THEN ((vt1.c0)IS('-1188958386')) WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c2) IS TRUE) END FROM vt0;SELECT DENSE_RANK() OVER (), ((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c2)))OR(CAST(vt0.c2 AS INTEGER))))OR(((vt0.c0) IS FALSE))), '-1721035996' FROM vt1, vt0 LIMIT -1171643014; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 ORDER BY vt1.c0 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1 WHERE ((x'' IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((vt0.c1)-(vt0.c0))) NOT BETWEEN (vt0.c1) AND (SUM(vt0.c2))) FROM vt0, vt1; -- 0ms;
SELECT LAST_VALUE((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((('-248603292' IN (vt1.c0, vt1.c0)))))) OVER () FROM vt1 WHERE (CASE WHEN CASE '_6Arp3'  WHEN 0xffffffffb0a06a7f THEN '-2116098508' ELSE '1270662742' END THEN ((x'') NOT BETWEEN (0.022304274686288705) AND ('-1340361548')) ELSE ((((NULL)AND('-1340361548')))OR(1848289133)) END); -- 0ms;
SELECT DISTINCT CAST(((vt0.c2)<(vt0.c0)) AS BLOB) FROM vt1;SELECT DISTINCT ((((((((vt1.c0 COLLATE BINARY)AND(AVG(vt0.c2))))OR(((NULL) IS FALSE))))AND(((((NULL)AND(vt1.c0)))AND(vt0.c1)))))AND(x'')) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))OR(AVG(vt0.c2))))OR((((vt1.c0))>((vt0.c0))))) FROM vt0 GROUP BY (+ (CASE WHEN vt0.c0 THEN 0x4008f1cd WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)) HAVING ((x'')<=(vt1.c0)) ORDER BY vt1.c0 DESC  NULLS FIRST;SELECT DISTINCT (((((- (vt0.c2)))OR(((vt0.c0)LIKE(vt0.c1)))))AND(((NULL) ISNULL))), ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))LIKE(vt0.c1)), vt0.c1 FROM vt0, vt1 ORDER BY CASE ((0.47428212837013084) IS TRUE)  WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN NULL ELSE (vt0.c2 IN (vt0.c0)) END DESC  NULLS FIRST; -- 1ms;
SELECT ALL json(json_insert(vt0.c2, vt0.c0, vt0.c2)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(((vt0.c2)/(2.119814999E9)))))OR((NULL IN (vt1.c0)))) FROM vt0;SELECT ALL DENSE_RANK() OVER (), (CASE vt1.c0  WHEN vt0.c2 THEN vt0.c0 END IN ()), CASE WHEN vt0.c1 COLLATE RTRIM THEN x'' ELSE ((vt0.c1)/(vt0.c2)) END, CASE ((vt0.c1)||(vt0.c1))  WHEN CAST(vt0.c1 AS NUMERIC) THEN ((0.0880562136123263) IS TRUE) WHEN ((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END WHEN x'' THEN MAX(vt0.c0) END, (NOT (GROUP_CONCAT(vt0.c1))), ((COALESCE(vt0.c1, vt0.c2)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) IS FALSE))), COUNT(*) FROM vt0, vt1 WHERE (((116139659)OR(NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((vt1.c0)<=(vt0.c0))) BETWEEN (LOWER(vt0.c0)) AND (((vt0.c1)*(vt1.c0)))) FROM vt1;SELECT DISTINCT (CAST(vt0.c0 AS INTEGER) IN (vt1.c0 COLLATE BINARY)), vt1.c0, ((((vt0.c2))=((vt0.c2))) IN ()) FROM vt0, vt1 WHERE (((CAST(0.9495826033249701 AS REAL)) NOTNULL)); -- 0ms;
SELECT DISTINCT ((UNLIKELY(vt0.c2)) IS TRUE) FROM vt1, vt0 LIMIT 1135967872 OFFSET 1480538991; -- 0ms;
SELECT DISTINCT ((((- (vt1.c0))))<>(((+ (vt0.c0))))) FROM vt0 WHERE ((((x'')) BETWEEN ((((x'') NOT NULL))) AND (((0.47227111022103885 IN ())))));SELECT ALL x'' FROM vt1 WHERE (CAST(0.42766484655004156 COLLATE RTRIM AS BLOB)); -- 0ms;
SELECT DISTINCT ((('-130178849', LIKELIHOOD(DISTINCT vt0.c2, 0.9089081114087035), (vt0.c1 IN ()), ((vt0.c2) NOT NULL), '0.47024712820394343'))>=((x'' COLLATE RTRIM, CAST(vt0.c2 AS REAL), vt0.c0 COLLATE NOCASE, CAST(vt0.c2 AS NUMERIC), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) FROM vt0, vt1 ORDER BY (~ ((~ (vt0.c1))))  NULLS LAST, x'9779', ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c2))) IN (((vt0.c0) NOT NULL), (((vt0.c1, vt0.c0, vt0.c0))<=((vt0.c1, vt1.c0, vt0.c1))))) ASC; -- 0ms;
SELECT vt0.c0, COUNT(*), 'zQdTGz|2' FROM vt1, vt0; -- 0ms;
SELECT ((vt0.c2)&(vt0.c2)) COLLATE NOCASE, (((0.7395694662568959)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2))) COLLATE RTRIM, ((COUNT(*))/(((vt0.c2)-(vt0.c1)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2 COLLATE RTRIM)OR(((vt1.c0) IS FALSE))))OR(vt0.c1)), ((vt1.c0 IN ()) IN ()), (((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt0.c0 AS INTEGER), vt0.c1 COLLATE RTRIM)) AND ((MIN(vt0.c0), CASE vt0.c2  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END, vt0.c1))) FROM vt0, vt1 WHERE (((('-301844997')IS(x'6d6e')) IN ())); -- 0ms;
SELECT DISTINCT NULL FROM vt1 WHERE (((((((((-248603292)AND(-806882600)))AND(0x4d8a7ee3)))OR(-1264530347)))AND(0.28308541767776396)) COLLATE NOCASE); -- 0ms;
SELECT vt1.c0 FROM vt1 WHERE (('240598792' IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((+ (vt1.c0)), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)), vt0.c2))>((vt0.c1 COLLATE NOCASE, (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c2))), CAST(vt0.c1 AS REAL)))), ((((((((rtreenode(vt1.c0, vt0.c1))OR(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c1 END)))OR(((vt1.c0) IS TRUE))))AND(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))AND(((vt0.c0)|(vt1.c0)))), MAX(CAST(vt0.c2 AS REAL)) FROM vt1, vt0 WHERE ((-1569766259 IN ())); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (((vt0.c2)&(vt0.c2)))) FROM vt0, vt1 WHERE (((((0.528835817742442)GLOB(1575476074))) NOT BETWEEN (((((0.03738356053426217)OR(NULL)))AND(x''))) AND ((x'' IN (0.09222659413158807))))); -- 0ms;
SELECT ALL (+ (CAST('2004451082' AS REAL))), TOTAL(((((vt1.c0)OR(vt0.c1)))OR(vt0.c0))), (((vt1.c0)) BETWEEN ((((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))) AND ((vt0.c1))) FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));SELECT ALL SQLITE_SOURCE_ID() FROM vt0, vt1; -- 0ms;
SELECT vt1.c0, json((vt0.c2 IN (vt0.c1))), ((((CASE WHEN vt0.c1 THEN vt1.c0 END)OR(((vt0.c2)|(NULL)))))AND((0.43177416349014563 IN (vt0.c2)))), ((CAST(vt0.c1 AS NUMERIC))%(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN x'' THEN vt0.c0 WHEN 0.8934822287897576 THEN vt0.c1 WHEN vt1.c0 THEN -1.340361548E9 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)), ((0.8396370594898072) NOTNULL) FROM vt0;SELECT (+ ((~ (NULL)))), (((load_extension(vt0.c2)))<((''))), MIN((((vt0.c1, 1496515162, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c2, vt0.c2)) AND ((vt0.c0, vt0.c0, vt1.c0)))), (((vt0.c1, vt0.c0, NULL)) NOT BETWEEN (((NOT (vt0.c2)), ((vt0.c0)&(vt0.c2)), ((vt0.c2) NOT NULL))) AND ((CAST(vt0.c0 AS NUMERIC), (vt0.c1 IN ()), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))), LIKELY(DISTINCT (vt0.c0 IN (vt0.c1))), vt0.c0, (~ ((vt1.c0 IN ()))) FROM vt0;SELECT vt0.c0 COLLATE NOCASE FROM vt1, vt0 LIMIT 1647733652 OFFSET -416333182; -- 0ms;
SELECT DISTINCT (vt0.c1 COLLATE NOCASE IN ()), ((CAST(vt0.c0 AS BLOB))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))), SUM(vt0.c0) OVER () FROM vt1, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT vt0.c0, TOTAL((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt1.c0)))) OVER (), (~ (x'')) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT DATETIME((((vt0.c1))>((vt1.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0) NOTNULL)) FROM vt1 WHERE (CAST(0.5486117646245081 AS TEXT) COLLATE BINARY);SELECT ALL x'', MAX(((vt1.c0) NOT NULL)), SUM((- (vt0.c0))) OVER (), ((LIKE(vt1.c0, vt1.c0)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c2)))OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0))) AND ((+ (NULL)))), (((vt1.c0 IN (vt0.c2)))-(((vt0.c1) NOTNULL))) FROM vt1, vt0; -- 0ms;
SELECT ((('K.캔nt	D') BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) FROM vt1, vt0 WHERE ((x'' COLLATE BINARY IN (((x'75e7') NOTNULL), CASE WHEN '1300922083' THEN 0xffffffff8c20a730 WHEN NULL THEN NULL WHEN x'' THEN x'' END))); -- 0ms;
SELECT ((((vt0.c1)<=(vt0.c0))) ISNULL) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE BINARY) IS TRUE), NULL, ((SQLITE_COMPILEOPTION_USED(vt0.c2))-(SUM(vt0.c2))) FROM vt1;SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((((']g''^j/')) BETWEEN ((NULL)) AND ((800240148))) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT ((((((0.5320741213023723)<=(1106361663)))AND((vt0.c2 IN ()))))OR(MAX(vt0.c1))) FROM vt0, vt1 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt1, vt0 UNION ALL SELECT DISTINCT COALESCE(DISTINCT (('-241098981')>(vt1.c0)), CAST('' AS INTEGER)) FROM vt0;SELECT ALL CASE MAX(vt0.c1)  WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt1.c0 END THEN (('0.9825463348912074') ISNULL) END FROM vt0;SELECT ALL (vt0.c0 COLLATE RTRIM IN ()) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((+ (vt0.c2))) NOT NULL) FROM vt0, vt1 GROUP BY ((vt1.c0 COLLATE BINARY)==(((vt0.c1) NOTNULL))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (((vt0.c1)<=(vt1.c0)))) FROM vt0, vt1 WHERE ((- (((0.9926623861462982) NOT NULL)))) GROUP BY ((((((vt0.c2) NOT BETWEEN (vt0.c0) AND ('')))AND(((vt0.c0) NOT NULL))))AND(((vt1.c0)||(vt1.c0)))); -- 0ms;
SELECT RANK() OVER (), ((vt1.c0)OR(vt0.c0)) COLLATE BINARY, CAST(((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)) AS TEXT) FROM vt0 WHERE (NULL COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM);SELECT LIKE(vt0.c0, ((vt0.c2)<=(vt0.c2)), 'P') FROM vt0, vt1 GROUP BY '711654726', -110755243, ((vt0.c0)<(vt0.c1 COLLATE BINARY)) HAVING vt1.c0;SELECT DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) COLLATE BINARY FROM vt1, vt0 WHERE ((((('遴8C\nbs') BETWEEN (0.20185982657739754) AND (''))) BETWEEN (((0.6984464744059578)LIKE(0.39624938345124994))) AND (((0.2599645382258685) ISNULL)))) LIMIT -519319916; -- 0ms;
SELECT DISTINCT ((((vt0.c2) NOT NULL)) NOTNULL) FROM vt1;SELECT DISTINCT MIN(((((vt0.c0)AND(vt0.c1)))AND('<H5m|ɕ_N'))) FROM vt1;SELECT DISTINCT ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE BINARY FROM vt1, vt0 WHERE ((((0.4889060262273238)) BETWEEN ((((NULL)OR(NULL)))) AND ((((NULL) IS FALSE))))) LIMIT -519319916 OFFSET -648421391; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((((x'') BETWEEN (x'3b0d637d') AND (1289542907)), '', CAST('-369342825' AS REAL)))>=((IFNULL('h2mLM', NULL), (('1848289133') ISNULL), (((0.22190287505556716, '', NULL))<(('-701336726', '-248603292', x'0060'))))))); -- 0ms;
SELECT ((vt1.c0)&(SUM(vt0.c1))) FROM vt1, vt0 WHERE (((0.528835817742442) BETWEEN ('110413881') AND ('')) COLLATE RTRIM); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((vt0.c1)) AND (((('-1280970704') BETWEEN (vt0.c1) AND (vt0.c2))))) FROM vt0 WHERE ((x'' IN (x'')) COLLATE BINARY) ORDER BY (((vt0.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)))) AND (((((0.8562275728899031)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))), CASE WHEN '0.42766484655004156' THEN NULL ELSE CAST(vt0.c0 AS BLOB) END ASC, (- ((vt0.c0 IN (vt0.c1))));SELECT ALL (((((((((- (vt0.c2)))AND(((vt0.c1) ISNULL))))OR(vt0.c1)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))))OR(CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c2 END)), json_quote(((vt0.c2) ISNULL)), CUME_DIST() OVER () FROM vt1 WHERE ((x'' IN (((0.18227655144916588)<<(NULL)))));SELECT ALL CASE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN '1692616727' END  WHEN ((((((((x'')OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c2)) THEN (+ (vt0.c0)) END FROM vt0, vt1 WHERE ((((0.0880562136123263, 125299556, '>~TY I', '1697593075', 0.17404348640605516)) BETWEEN ((((0.18227655144916588)>>('2147408704')), (((x'63d203ea')) NOT BETWEEN ((0.44076060364503533)) AND ((-1.331664257E9))), ((-1e500)<<('1575476074')), (~ (950270357)), ((0.9575615589717688)+('527784173')))) AND ((((((0.5486117646245081)AND(x'')))OR(-6.48421391E8)), ((0.18584051668307422)IS(NULL)), (0.09222659413158807 IN (NULL)), (~ (0.5486117646245081)), '-1566997045')))); -- 0ms;
SELECT ALL UPPER(DISTINCT vt0.c1 COLLATE BINARY) FROM vt0, vt1 WHERE ((((NULL)>>('-1202823656')) IN ())) GROUP BY 'M4' HAVING (((- (vt0.c2)))GLOB(((((vt0.c1)OR(vt0.c0)))AND(vt1.c0)))); -- 0ms;
SELECT DISTINCT CAST(((vt1.c0) BETWEEN ('1857797631') AND (vt0.c2)) AS INTEGER) FROM vt0, vt1 LIMIT -593705724; -- 0ms;
SELECT DISTINCT (- (((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) FROM vt1 LIMIT 2147408704;SELECT DISTINCT (HEX(vt1.c0) IN ()) FROM vt1 WHERE ((~ (('-125291970' IN ())))) LIMIT 1673562174 OFFSET 2119814999; -- 0ms;
SELECT DISTINCT ((((vt1.c0)-(vt0.c1)))!=((('1148981119')IS(vt0.c2)))) FROM vt0 WHERE (((((x'' IN ()), (~ ('')), (0X347d6e22 IN (NULL, '1647733652', x'3c51'))))<>((INSTR('9223372036854775807', '1848289133'), (((NULL)) BETWEEN ((NULL)) AND ((1697593075))), ((0.051123922015652856) NOT BETWEEN ('1480538991') AND (0.2937536236340137)))))) ORDER BY (~ ((vt1.c0 IN (vt0.c2)))) DESC  NULLS LAST;SELECT ALL (- (((((((((vt1.c0)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))), (((vt0.c0 IN ())) IS TRUE), (((((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c2)))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (((vt0.c0) IS FALSE))) FROM vt0 WHERE (CASE WHEN ((0.22277724429256252) BETWEEN (0.9248135458348065) AND ('0.22190287505556716')) THEN ('0.44076060364503533' IN ()) END);SELECT DISTINCT vt1.c0, ((((vt0.c0) ISNULL))IS NOT((- (vt0.c2)))), ((((((vt0.c1)AND(vt0.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(CAST(vt0.c0 AS BLOB))) FROM vt0, vt1 LIMIT 765242470; -- 1ms;
SELECT ALL ((CAST(vt0.c0 AS REAL)) IS FALSE) FROM vt1, vt0 WHERE (((((x'15ce')|(1647733652))) BETWEEN (NULL) AND (((('')) NOT BETWEEN ((x'')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT COUNT((vt1.c0 IN ())) OVER (), CAST((((vt1.c0))=((vt0.c1))) AS INTEGER), ((((((((((vt0.c2)OR(0.9248135458348065)))OR(vt0.c2)))AND(NULL)))OR(vt0.c0)))<(x'' COLLATE BINARY)), ((COUNT(vt0.c0)) BETWEEN (NULL) AND (vt0.c2)), (NOT (vt0.c2 COLLATE NOCASE)) FROM vt1, vt0 WHERE (0.07949368878746044 COLLATE NOCASE) GROUP BY ((vt0.c1 COLLATE BINARY) NOTNULL) HAVING (~ (((vt1.c0)IS NOT(vt0.c2)))); -- 0ms;
SELECT DISTINCT ((json_remove(vt0.c2, vt1.c0, -544811607, vt1.c0)) BETWEEN ((((vt1.c0)) NOT BETWEEN ((0.5048481691650245)) AND ((x'')))) AND (CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c0 END)), TOTAL((vt0.c2 IN ())), UNLIKELY((((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c2, vt0.c1, vt0.c2)))) FROM vt1 WHERE ('A3E%<OSJb');SELECT DISTINCT CAST(((vt0.c1) NOT NULL) AS INTEGER), vt0.c0, ('1575476074' IN ()), MAX(0.4704887653959564), ((((vt0.c2)OR(((vt0.c0)-(vt0.c0)))))AND(((vt0.c1)OR(vt0.c0)))) FROM vt0, vt1 WHERE (CASE ((NULL)IS('1673562174'))  WHEN ((0.19887639429852966) IS FALSE) THEN LOWER(462736459) END); -- 0ms;
SELECT ALL (('') NOTNULL) FROM vt0 WHERE (CAST((x'' IN (0.0)) AS BLOB)) LIMIT -123153357; -- 0ms;
SELECT DISTINCT LAG((((+ (vt0.c2))) NOTNULL), ((LIKELY(vt0.c2)) IS FALSE), CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((''))) THEN vt0.c0 WHEN (((vt0.c1))>=((vt0.c1))) THEN (vt0.c2 IN ()) WHEN (vt0.c2 IN ()) THEN CAST(vt0.c1 AS NUMERIC) ELSE (NOT (vt0.c1)) END) OVER () FROM vt0 WHERE (CAST(((x'0bc3') BETWEEN ('^') AND (NULL)) AS REAL)); -- 1ms;
SELECT ABS((+ (vt0.c2))) FROM vt0, vt1 WHERE ((('0.03738356053426217') BETWEEN (((0.8789481802941511) IS TRUE)) AND (('7N2F' IN (NULL))))); -- 0ms;
SELECT TOTAL(((vt0.c2)&(vt0.c2))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((0Xffffffff92c04046 COLLATE NOCASE) IS TRUE), CASE WHEN ((vt0.c1)/(vt0.c2)) THEN CASE WHEN NULL THEN vt0.c0 END ELSE SUM(vt0.c1) END, ROW_NUMBER() OVER () FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt0.c1, (+ (((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))), (((vt0.c2)) BETWEEN ((((vt0.c1)<=(vt0.c0)))) AND ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c2))))) FROM vt0, vt1 WHERE (((((NULL) BETWEEN ('') AND (NULL))) NOT BETWEEN ('2060214475' COLLATE RTRIM) AND (((1575476074)OR(0.7279150940691097))))) GROUP BY INSTR(((vt0.c1)<>(vt0.c0)), ((x'')AND(vt1.c0))) HAVING CAST((vt0.c0 IN ()) AS BLOB); -- 0ms;
SELECT ((vt0.c1 COLLATE BINARY) IS TRUE), (+ (vt1.c0)), COUNT(IFNULL(DISTINCT vt1.c0, vt0.c1)) OVER () FROM vt1 LIMIT -224631677 OFFSET 301846123;SELECT (((CAST(vt0.c2 AS NUMERIC)))>=((((vt0.c0)<<(vt0.c0))))), NULL, ((((vt1.c0) NOT BETWEEN (vt0.c1) AND ('l]')))/(vt0.c0 COLLATE RTRIM)) FROM vt1;SELECT (((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((CAST(0.17231931689019286 AS NUMERIC), (- (vt0.c2)), COUNT(vt0.c2))) AND ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c2 END, CASE vt0.c1  WHEN vt1.c0 THEN 0.9547028811650553 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END, ((vt0.c1)<<(vt0.c2))))) FROM vt0;SELECT DISTINCT ((((vt0.c1)&(vt0.c2)))GLOB(((vt1.c0) ISNULL))) FROM vt1, vt0 ORDER BY CAST(LOWER(vt0.c2) AS TEXT)  NULLS FIRST; -- 1ms;
SELECT ((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c1 END) BETWEEN ((('1857797631') BETWEEN (vt0.c2) AND (vt0.c2))) AND (((vt0.c2) NOTNULL))) FROM vt0, vt1 WHERE ((~ (HEX(0.307964015579396)))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) IS FALSE)  WHEN (~ (vt0.c0)) THEN x'' END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((((0.7064236410301941)AND(CAST(vt1.c0 AS REAL))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(UNLIKELY(vt0.c0))))AND(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c0 END)), (vt0.c0 IN ()) COLLATE RTRIM, GLOB((vt0.c1 IN (0.8606965261869753, vt0.c2)), (~ (vt1.c0))) FROM vt0, vt1 GROUP BY ((vt0.c1 COLLATE BINARY)+(((vt0.c1)+(vt0.c1)))) ORDER BY ((NULL COLLATE RTRIM)LIKE(LIKELY(DISTINCT vt0.c0))); -- 1ms;
SELECT vt0.c1 FROM vt1, vt0; -- 0ms;
SELECT (((CAST(vt0.c1 AS TEXT), ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)), CASE vt1.c0  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END))>((vt0.c1 COLLATE NOCASE, (x'' IN ()), (((vt0.c0, vt0.c0, vt1.c0))=((vt0.c0, vt0.c0, vt1.c0)))))) FROM vt1, vt0 WHERE ((((- ('<n⌴K')))||(CASE 0.5839042753028951  WHEN NULL THEN -125291970 WHEN x'' THEN '880635426' WHEN 0.16524688554279265 THEN x'c732' END))); -- 0ms;
SELECT ALL ((json_insert(vt1.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((((((((('1678034933')AND(vt1.c0)))AND(vt0.c2)))OR(vt1.c0)))AND(vt0.c0)))) FROM vt0;SELECT DISTINCT (((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)), (NOT (vt0.c1)), ((vt0.c2) IS TRUE), ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt0.c1)==(vt1.c0))))<=((NULL, (vt1.c0 IN ()), '-880663756', x'', (vt0.c2 IN ())))) FROM vt0 WHERE ((((((x'', '1771428044', NULL, 'r P8f0oW', 0.14059290881915132))<(('n4xf', '-51959605', NULL, x'a5c17e09', 0X1d14a5dd))))>(IFNULL(DISTINCT NULL, NULL)))) LIMIT -218407006 OFFSET -650778896;SELECT ((vt0.c1 COLLATE BINARY) BETWEEN (((vt0.c2)>(vt0.c1))) AND ((((vt0.c2))<>((vt0.c2))))) FROM vt1, vt0 WHERE (CASE (NOT (x''))  WHEN (((''))!=((NULL))) THEN ((0.8583123279600494)<=(x'')) ELSE ((0.33662223877387065) NOT BETWEEN (0.9134646300007289) AND (0.2461621899160411)) END); -- 0ms;
SELECT DISTINCT (((~ (vt0.c0)))%(((vt1.c0)AND(vt0.c0)))), ((vt0.c0)<(((vt0.c0)<(vt0.c1)))), (((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c1) AND (NULL))) AND (0.007353096743954679)) FROM vt1 GROUP BY vt0.c1;SELECT DISTINCT ((((((((CASE x'91d5'  WHEN vt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)AND(highlight(vt1.c0, vt1.c0, vt0.c0, vt0.c1))))OR(((vt0.c2)-(vt1.c0)))))AND(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((vt0.c2) NOT NULL))) FROM vt1 WHERE (((('527784173')) BETWEEN ((CASE WHEN NULL THEN NULL ELSE '1678034933' END)) AND ((CASE WHEN NULL THEN 0.2155145711007871 END))));SELECT ALL CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB), ((((vt0.c0) NOTNULL))||((~ (vt0.c2)))), COUNT((NOT (vt0.c1))) FROM vt1;SELECT DISTINCT 2.119814999E9 FROM vt0, vt1 WHERE (((CASE x'f06b'  WHEN NULL THEN x'' WHEN NULL THEN 0.8728608010673893 WHEN x'' THEN 0.5515927017859411 ELSE 0.5127606390535238 END) NOTNULL)) ORDER BY ((((vt0.c0) IS FALSE))LIKE((vt0.c0 IN ()))) DESC; -- 0ms;
SELECT DISTINCT (+ ((vt0.c2 IN ()))), TRIM(DISTINCT (+ (vt0.c0))), ((((((x'eb7a')IS(vt0.c1)))AND('-1600985480')))OR(0.7550051237610896)) FROM vt0 WHERE ((NOT (CASE '605131047'  WHEN 1678034933 THEN '%y%᳹' END))); -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN (((vt0.c1 IN (vt0.c1, vt0.c2)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))) FROM vt0, vt1 WHERE (IFNULL(']3', (((1.148981119E9, '0.5048481691650245', 0x59201530))<>((0.42141199433039833, '|', -1967429200))))); -- 0ms;
SELECT DISTINCT NULL, vt1.c0, vt0.c1 FROM vt1;SELECT DISTINCT TYPEOF(x'a596') FROM vt1, vt0 WHERE ((+ (x'0f23' COLLATE BINARY))); -- 0ms;
SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))OR(((0.538002188243103)||(vt0.c2)))))AND(((vt1.c0) ISNULL))) FROM vt1 NATURAL JOIN vt0 WHERE (((((-1.944017104E9) NOT NULL))LIKE(((((((((x'')OR(x'7c7e')))OR('847303723')))OR(0.8562275728899031)))AND(-267107125))))); -- 1ms;
SELECT ALL JULIANDAY(INSTR(vt0.c2, vt0.c0), UNLIKELY(DISTINCT vt0.c1), ((vt0.c0)&(vt0.c0))) FROM vt0; -- 0ms;
SELECT (((TRIM(vt0.c1)))<>((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt1.c0))))) FROM vt0 WHERE (COALESCE(DISTINCT ((x'')>>(NULL)), (NOT ('125299556')))) ORDER BY ((((vt0.c2)>=(vt0.c2)))+(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, ((((vt0.c1)AND(vt0.c2)))*(((((vt0.c1)AND('-211122061')))OR(vt0.c0))))  NULLS FIRST LIMIT 991644883;SELECT ((((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c1)))OR(vt1.c0)))OR(vt1.c0))) NOTNULL) FROM vt1, vt0 ORDER BY ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL) ASC  NULLS FIRST, ((((vt0.c0)IS(vt0.c0))) ISNULL) ASC  NULLS FIRST, (+ ((vt0.c1 IN ()))); -- 0ms;
SELECT AVG(COUNT(*)) FROM vt1, vt0;SELECT DISTINCT (((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)), (- (vt1.c0)), vt1.c0 COLLATE NOCASE))!=((ABS(vt0.c1), ((vt0.c0)*(x'')), vt0.c1 COLLATE BINARY))) FROM vt1 WHERE (CAST(CAST(x'' AS INTEGER) AS NUMERIC));SELECT DISTINCT TOTAL_CHANGES() FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((x'')) AND ((((vt1.c0)<(vt0.c1))))) FROM vt1;SELECT DISTINCT (INSTR(vt0.c1, vt0.c2) IN ()), ((((((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))AND(NULL COLLATE BINARY)))OR((((vt0.c2))<=((vt0.c1))))), ((IFNULL(NULL, vt1.c0)) IS FALSE) FROM vt1, vt0 WHERE (((((NULL) IS TRUE))-(x''))); -- 0ms;
SELECT ALL (NOT (vt1.c0)) FROM vt1 WHERE ((~ (('%.6k' IN ())))) ORDER BY ((vt0.c0) IS FALSE) ASC;SELECT DISTINCT CASE WHEN x'' THEN NULL ELSE (vt0.c0 IN ()) END FROM vt1; -- 0ms;
SELECT DISTINCT (COALESCE(DISTINCT vt0.c2, vt0.c0, vt0.c1, vt0.c0) IN ()) FROM vt0, vt1 WHERE ((((+ (0xffffffffaaf789d4))) BETWEEN (CASE 0.20465593513735147  WHEN NULL THEN '' END) AND ((('697002479') NOT NULL)))); -- 0ms;
SELECT ALL COUNT(CAST(vt0.c2 AS NUMERIC)) OVER () FROM vt0, vt1; -- 1ms;
SELECT ALL RTRIM('240598792' COLLATE NOCASE), TOTAL(((vt0.c1)IS NOT(x''))) OVER (), 0.2811621567551743 FROM vt1 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN ('-650778896') AND (NULLIF(DISTINCT vt0.c0, vt0.c0)));SELECT DISTINCT ((LIKE(0.2937536236340137, vt0.c1)) IS FALSE) FROM vt1 WHERE ((((((((((((((x'' IN ()))OR(CAST('-1566997045' AS INTEGER))))OR(CASE WHEN x'8df9' THEN x'45df' END)))OR(((0Xffffffffa34a42b2)<(x'')))))OR(CASE WHEN NULL THEN NULL ELSE NULL END)))AND((((0.5266386002150782, 0x79af025, x'', '', 0.345637673183244)) BETWEEN ((x'', NULL, '', x'c2d8', '-1340361548')) AND (('1074328013', '1865465279', x'', '>kn()', x''))))))OR(SQLITE_COMPILEOPTION_USED('-428681639'))));SELECT ALL '1270662742' FROM vt0, vt1 WHERE (-2.48603292E8) ORDER BY ((((((vt1.c0)>(vt1.c0)))OR(vt0.c1 COLLATE BINARY)))AND(CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt1.c0 END)); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0, vt1 WHERE (CAST(CASE WHEN x'' THEN NULL END AS TEXT)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt1 NATURAL JOIN vt0 WHERE (CAST(CASE '-137998146'  WHEN NULL THEN '1771428044' ELSE '' END AS BLOB)); -- 0ms;
SELECT ALL CAST(((vt0.c1)<(vt0.c0)) AS NUMERIC) FROM vt1;SELECT DISTINCT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT ((0Xffffffffd194e72b COLLATE BINARY) NOT NULL) FROM vt1 WHERE ((('-1511891394' COLLATE NOCASE)<>(((0.037951046529879906)|(x''))))); -- 0ms;
SELECT CAST(0.30395980323489 AS INTEGER) FROM vt0, vt1 WHERE ((CASE 1972507943  WHEN '-1967429200' THEN x'e916' END IN ())); -- 1ms;
SELECT COUNT(0.19791293886054895) FROM vt0, vt1 ORDER BY (+ (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt1.c0)))), CAST(CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) DESC  NULLS FIRST; -- 0ms;
SELECT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (vt0.c2 IN ()) THEN CASE vt0.c1  WHEN x'' THEN vt0.c1 ELSE 0.6579248644159645 END ELSE CAST(vt0.c0 AS REAL) END FROM vt0 WHERE ((((((('-1555414350')AND(0Xffffffffeeb37409)))AND(x'9f2c'))) NOT BETWEEN ((NULL IN (0.4789924001803202, '1871795495'))) AND (CAST(0.9841578947180403 AS BLOB)))); -- 0ms;
SELECT CAST(vt0.c1 AS TEXT) COLLATE BINARY FROM vt1 WHERE (CASE CAST(x'' AS REAL)  WHEN (NOT (NULL)) THEN ((((((((((((0X3d51a18e)AND(-1.331664257E9)))OR(x'f3de')))OR(NULL)))AND(0.08724703866440564)))OR(0.9926653322043886)))OR(0.538895494776352)) END);SELECT DISTINCT (((((vt1.c0, 0.4219957090033566, vt0.c1))=((vt1.c0, vt1.c0, vt0.c2)))) NOT BETWEEN (((NULL) IS FALSE)) AND (vt0.c2 COLLATE BINARY)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) ISNULL) FROM vt1 ORDER BY ((((vt0.c0)==(vt0.c1))) NOT BETWEEN (CASE vt0.c2  WHEN vt1.c0 THEN vt0.c2 END) AND ((+ (vt1.c0)))) ASC  NULLS FIRST;SELECT DISTINCT (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT TOTAL(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0))) FROM vt1;SELECT DISTINCT (CAST(NULL AS INTEGER) IN ()) FROM vt0 WHERE (((((CASE WHEN 1.771428044E9 THEN x'a412' END)AND('151805009' COLLATE NOCASE)))AND(LOWER('763417932')))); -- 0ms;
SELECT NULL FROM vt0, vt1 ORDER BY CASE WHEN CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN x'fb08' THEN vt0.c2 ELSE vt0.c0 END THEN ((vt0.c0)<(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END ASC  NULLS LAST, (((vt0.c0)) BETWEEN (((+ (vt0.c1)))) AND ((((vt0.c2) NOT NULL)))), ((((vt1.c0)*(vt0.c2))) NOT NULL)  NULLS LAST; -- 1ms;
SELECT DISTINCT NULL FROM vt0, vt1 WHERE ((~ (INSTR(0.9331619531977167, NULL)))) ORDER BY UPPER((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) ASC, 0.2704779251639764 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c2) IS TRUE)) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE '1575476074' END)<>((x'' IN ()))) FROM vt1, vt0 WHERE ('-204336604' COLLATE NOCASE); -- 0ms;
SELECT (+ (vt0.c1 COLLATE RTRIM)), GROUP_CONCAT((NOT (vt0.c0))), FIRST_VALUE((NOT (vt1.c0))) OVER () FROM vt1 WHERE (NULLIF(CASE 1678034933  WHEN 'lG' THEN NULL ELSE 0.20663273462158627 END, ('/ྑ' IN ())));SELECT DISTINCT CAST((0.10487084265561952 IN (vt1.c0, vt0.c1)) AS NUMERIC), TOTAL(((vt0.c1)AND(x'e02b'))), json_quote(((vt0.c2)LIKE(vt0.c0))) FROM vt1 GROUP BY (vt0.c2 IN ()) COLLATE NOCASE COLLATE RTRIM HAVING CAST(IFNULL(vt0.c0, vt1.c0) AS REAL);SELECT DISTINCT CAST('-929529883' AS BLOB), (~ (x'')), (((vt0.c2)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((vt0.c1)>(vt1.c0))))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (+ (vt1.c0)) FROM vt0;SELECT ALL ((((-1724311691) IS FALSE)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt1.c0) IS FALSE))), AVG((vt0.c1 IN ('697002479', vt0.c2))) OVER (), (NOT (vt0.c1)) COLLATE NOCASE FROM vt0, vt1 WHERE (((((-2.11122061E8)>(x'')))LIKE(((8.80635426E8)OR(NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT 1049266434 FROM vt1, vt0 WHERE (CASE WHEN ((x'')IS NOT('')) THEN '0.2461621899160411' COLLATE NOCASE WHEN ('' IN ()) THEN (~ ('')) WHEN CAST(NULL AS TEXT) THEN (('149828443')*('')) END); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt1; -- 1ms;
SELECT x'', ((((vt0.c1)<(vt0.c0)))IS(vt0.c0)), ((((LIKELY(vt0.c2))OR(((vt0.c2)||(vt0.c0)))))OR(MAX(vt0.c1))) FROM vt0 GROUP BY NULL; -- 0ms;
SELECT ALL (vt0.c0 IN ()) FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0, vt0.c0, vt0.c2))>=((vt0.c0, vt0.c2, vt0.c1))) COLLATE BINARY WHERE ((+ (((0X65c50178)IS NOT(0.8583163795867221))))); -- 0ms;
SELECT DISTINCT (((((vt0.c2, vt1.c0, x'da33a31c', vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt1.c0, vt0.c1, vt1.c0, vt0.c2)) AND ((vt0.c2, 0.8829760131594372, vt0.c1, vt1.c0, vt0.c0))))AND(((vt0.c0) IS TRUE))), (((NULL, vt1.c0, vt0.c1)) NOT BETWEEN ((TRIM(DISTINCT vt1.c0, vt0.c1), '1697593075', vt1.c0)) AND (((((vt0.c0))=((NULL))), ((vt0.c2)>(vt1.c0)), NULLIF(DISTINCT vt1.c0, vt0.c2)))), LIKELIHOOD(((vt0.c1)>=(vt1.c0)), 0.9165903294680784) FROM vt1, vt0 WHERE ((((((NULL))>=(('X*'))))|((NOT (0.6065772112716278))))); -- 0ms;
SELECT DISTINCT x'' FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-(CAST(vt0.c1 AS INTEGER))) FROM vt0, vt1 WHERE ((((NULL IN ()))AND((NOT ('1784994364'))))) LIMIT 1316214789; -- 0ms;
SELECT ((((vt0.c2)AND(vt0.c0)))AND(vt1.c0)) COLLATE BINARY FROM vt1, vt0 ORDER BY (NOT (((vt0.c0)LIKE(vt0.c2)))) ASC  NULLS LAST LIMIT -706461341 OFFSET -1886773466; -- 0ms;
SELECT COUNT(((-1153586401) BETWEEN (vt1.c0) AND (NULL))) FILTER(WHERE LOWER(DISTINCT vt1.c0)) OVER () FROM vt0;SELECT DISTINCT ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(NULL)))AND(CHAR(vt0.c2))), x'', (((((vt0.c1, vt1.c0, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.c2, x'', NULL)))) NOTNULL) FROM vt0;SELECT DISTINCT 0.8033017373214365, ((((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c0)))AND(vt1.c0))) NOTNULL), (CAST(vt0.c1 AS NUMERIC) IN ()) FROM vt1 WHERE (((LAST_INSERT_ROWID()) ISNULL));SELECT ALL vt0.c0 FROM vt1;SELECT CASE ((((vt0.c2)OR(vt0.c0)))OR('0.17404348640605516'))  WHEN CASE WHEN vt1.c0 THEN vt0.c1 END THEN x'eabe' ELSE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)) END, NULL, ((vt0.c0) NOTNULL) FROM vt1;SELECT DISTINCT NTH_VALUE(CAST(UPPER(x'dd95') AS TEXT), (((vt1.c0)) BETWEEN ((((vt0.c1)GLOB(vt0.c0)))) AND ((CAST(vt0.c2 AS REAL))))) OVER () FROM vt0, vt1;SELECT DISTINCT ((((vt0.c2) IS TRUE))&((+ (vt0.c0)))) FROM vt0, vt1 WHERE (INSTR(CAST(x'23ca' AS INTEGER), CASE '6d'  WHEN '6' THEN x'' END)); -- 0ms;
SELECT DISTINCT (((vt1.c0) NOT NULL) IN (CAST(vt0.c0 AS NUMERIC), ((vt1.c0)IS('0.19791293886054895')))) FROM vt1 WHERE ((- (((0.7973316918769239)<(x'6301')))));SELECT DISTINCT LEAD(CAST(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END AS NUMERIC), CAST((((vt1.c0))>=((vt0.c2))) AS NUMERIC), (((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) OVER () FROM vt1, vt0 WHERE (((((((((((NULL)AND(NULL)))AND(x'a110')))OR('1825795610')))AND(0.36803674131119213)))>=(((NULL) NOT NULL)))) LIMIT 312986095 OFFSET 1091433082; -- 0ms;
SELECT GROUP_CONCAT(CAST(vt1.c0 AS REAL)) FILTER(WHERE ((CAST(vt0.c0 AS INTEGER))*(((vt0.c1) ISNULL)))) OVER ( ORDER BY (+ ((- (vt1.c0))))  NULLS FIRST) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CASE ((vt0.c1)||(vt1.c0))  WHEN ((vt1.c0)-(vt1.c0)) THEN (~ (vt1.c0)) END FROM vt1, vt0 LIMIT -248603292 OFFSET -170733794; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0, vt1; -- 1ms;
SELECT ((vt1.c0 COLLATE BINARY)GLOB(vt0.c1 COLLATE RTRIM)) FROM vt1, vt0 WHERE (((TRIM(DISTINCT NULL, NULL))>>(MAX(x'6a7f', NULL)))); -- 0ms;
SELECT ALL (+ ((('') BETWEEN (-1.60098548E9) AND (vt1.c0)))) FROM vt0;SELECT ALL (((vt0.c0 IN (vt0.c2)))OR((+ (vt0.c0)))) FROM vt1;SELECT ALL (NOT ((((vt0.c1))>((vt0.c2))))) FROM vt0; -- 0ms;
SELECT DISTINCT 0.4622492011796375, ((0.20465593513735147) BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(vt1.c0))) AND ((- (vt0.c0)))), RTRIM(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT 1558809112 FROM vt1, vt0; -- 0ms;
SELECT 0x58aaedaf, vt0.c0, ((((vt1.c0)AND(vt0.c0 COLLATE RTRIM)))OR(vt0.c2 COLLATE BINARY)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((DATE(vt1.c0, vt0.c0, x'', vt0.c1, vt0.c0, vt1.c0, vt0.c0))OR((vt0.c0 IN ()))))AND(CAST(vt1.c0 AS BLOB))) FROM vt1 WHERE ((- (((((((((0.8324405704910613)OR('')))AND(-1.383307924E9)))AND(NULL)))OR(0.42121179092327343)))));SELECT ((x'ca54')!=(COUNT(vt0.c2))) FROM vt0, vt1 WHERE (((NULL)OR(0.09316705834287253)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((vt0.c1) IS TRUE) COLLATE RTRIM FROM vt1;SELECT (((NULL)) NOT BETWEEN (((+ (vt1.c0)))) AND (((((vt0.c0))!=((vt0.c1)))))), NTH_VALUE(((((vt1.c0)||(vt0.c2))) NOT NULL), ((((((0.7055073228548702)GLOB(vt0.c1)))OR(((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)))))OR((~ (vt0.c1))))) OVER (), GROUP_CONCAT(UPPER(vt0.c0)) FROM vt0, vt1; -- 1ms;
SELECT (- (CASE vt0.c2  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c2 END)) FROM vt0, vt1 WHERE (CAST(1289542907 COLLATE BINARY AS BLOB)); -- 0ms;
SELECT DISTINCT SUM((~ (vt0.c2))), LTRIM(x'', (vt1.c0 IN ())), (COUNT(*) IN ()) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS BLOB) AS TEXT) FROM vt1, vt0 WHERE (((((NULL, 0.5823335535611223, NULL)) NOT BETWEEN ((x'', NULL, x'')) AND (('*', '0.18227655144916588', x'9573'))) IN ())) GROUP BY ((((vt1.c0)GLOB(vt0.c0)))!=(vt0.c0)), (((((vt0.c1)=(vt0.c0))))>=((vt0.c1 COLLATE RTRIM))), (0Xffffffffbf730cdd IN ()) LIMIT 985932952 OFFSET 1865465279; -- 0ms;
SELECT ALL ((vt0.c2 COLLATE BINARY)>(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))) FROM vt1 WHERE (((((-3.69342825E8)>('TiM8J/')))>(((0.16602662613913954)/('\n'))))) ORDER BY ((((vt1.c0) BETWEEN (x'db4a') AND (vt1.c0)))>((- (vt0.c1)))), (((NOT (vt0.c1)))!=(vt1.c0 COLLATE NOCASE))  NULLS LAST;SELECT DISTINCT x'' FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE RTRIM) NOT NULL) FROM vt1; -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((TOTAL(vt0.c2))) AND ((''))) FROM vt0 LIMIT -1 OFFSET 988626751; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))=(CAST(vt0.c2 AS REAL))) FROM vt0, vt1 GROUP BY TRIM(DISTINCT TYPEOF('m')); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0)), ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END) IS TRUE), ((CAST(vt0.c2 AS TEXT))-(((vt0.c1) IS FALSE))) FROM vt1 WHERE (((1.848289133E9) ISNULL));SELECT DISTINCT (((vt0.c2)) BETWEEN ((x'9c89')) AND ((((vt0.c1)<=(vt0.c2))))) FROM vt1 WHERE (json_type(x'') COLLATE BINARY);SELECT ALL -1183439945, json_array_length(vt0.c2 COLLATE NOCASE), TOTAL(((vt1.c0) IS TRUE)) FROM vt0, vt1 WHERE ((~ (((NULL)==('1718660127'))))); -- 0ms;
SELECT DISTINCT ((SUM(vt0.c0)) IS FALSE) FROM vt1 GROUP BY ((((((((((vt0.c2)AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c2))) IS TRUE) HAVING (((((vt1.c0) NOTNULL)))==((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)));SELECT vt1.c0 FROM vt1 WHERE (((((json_patch('_࠶3', NULL))AND(((0.18227655144916588) NOT BETWEEN (-1.7976931348623157E308) AND (0.5127606390535238)))))AND(((0.831628136995312) NOTNULL))));SELECT (((vt0.c2 IN ())) IS TRUE) FROM vt1, vt0 GROUP BY ((('527784173' IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt1.c0)/(vt0.c2)))) HAVING (- (x'')) ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c2 ELSE '8Mkz*' END)AND(((vt0.c0) NOT NULL))) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((CAST(vt0.c1 AS NUMERIC))/(x'')) FROM vt1;SELECT ALL (+ (vt0.c1 COLLATE NOCASE)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((x''))>=((vt0.c2))))-(((vt0.c1) ISNULL))), vt1.c0, MIN(((vt0.c2) NOTNULL)), ((((((((((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0)&(vt1.c0)))))OR(LIKELY(DISTINCT vt1.c0))))OR(((vt0.c0)/(vt0.c2)))))AND((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c1, vt1.c0))))))OR(((vt1.c0)IS NOT(vt0.c1)))))AND(((vt0.c0) NOT NULL))), FIRST_VALUE(vt0.c2) OVER (), (((6.97002479E8)|(vt0.c0)) IN (vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE NOCASE COLLATE RTRIM FROM vt1, vt0 WHERE ('-416333182'); -- 0ms;
SELECT ALL ((GROUP_CONCAT(vt0.c2)) NOT NULL), ((((((vt0.c0)%(vt0.c0)))OR(((vt0.c1)IS(x'')))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c2 WHEN vt0.c0 THEN x'de5d' WHEN vt0.c1 THEN vt0.c2 END)), ((CASE WHEN vt0.c2 THEN vt0.c2 END)-(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt1;SELECT DISTINCT ((((vt0.c2) ISNULL)) BETWEEN (NULL) AND (((vt1.c0) ISNULL))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))))<(((~ (vt1.c0))))) FROM vt1;SELECT ALL MAX((vt0.c2 IN (vt0.c1, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))<<((~ (vt0.c1)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT 0.12956263104960908 FROM vt0 WHERE ((~ (((1.436225425E9) NOT BETWEEN (0X652f36f3) AND (0xffffffffe208f704))))); -- 0ms;
SELECT (NOT (vt0.c0)), DATETIME(vt0.c0 COLLATE NOCASE, (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), UPPER(NULL), ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)), (NOT (vt0.c0))), CAST(((vt0.c1) NOTNULL) AS BLOB) FROM vt1;SELECT 0.003500080350947732, (vt0.c0 IN ()) COLLATE RTRIM COLLATE NOCASE, AVG(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) COLLATE NOCASE FROM vt0, vt1 LIMIT 1341696486 OFFSET -423087323; -- 0ms;
SELECT DISTINCT HEX(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))) FROM vt0 WHERE ((+ (((((x'426c')AND('8秊FT ')))OR(NULL))))) GROUP BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC), ((((((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c2)))OR(((('0.9248135458348065', vt0.c0, vt0.c1))==((vt0.c0, NULL, vt0.c1))))))AND((vt0.c2 IN ()))))AND(TYPEOF(DISTINCT vt0.c1))))AND(((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), vt0.c1;SELECT DISTINCT TOTAL(TRIM(DISTINCT vt0.c2, vt0.c0)) OVER (), RANK() OVER (), COUNT(((vt1.c0) IS TRUE)) OVER (), AVG(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) FILTER(WHERE ((((vt1.c0)OR('947151305')))<>(0xffffffffb0a06a7f))) OVER ( ORDER BY (~ (((((vt0.c2)OR(vt1.c0)))OR(vt0.c1)))) DESC), ((((((vt1.c0)=(vt1.c0)))AND(UNICODE(vt0.c0))))AND('')) FROM vt1, vt0 WHERE ((~ ((('-964730996')==(2.40598792E8))))); -- 0ms;
SELECT ((vt0.c1)*(((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))) FROM vt0, vt1 WHERE (LOWER(DISTINCT (((NULL, x'', x'8d5d4820')) NOT BETWEEN ((0.7235805905529311, -895102375, NULL)) AND (('-1188958386', 0X3ff62cfa, '541779937'))))); -- 0ms;
SELECT DISTINCT vt0.c1, MIN(((vt1.c0)%(vt0.c2))), COUNT(((((vt1.c0)AND(vt0.c0)))OR('-416333182'))) OVER () FROM vt1, vt0; -- 1ms;
SELECT DISTINCT ((vt0.c2 IN ()) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((CAST(vt1.c0 AS REAL)) IS FALSE)) OVER () FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0, vt1 WHERE (((((1436225425)||('k1yAu')))LIKE((0.7953373697987889 IN ())))); -- 0ms;
SELECT DISTINCT ((((((((((((vt0.c0)OR(NULL)))OR(vt0.c2)))AND(((vt0.c2)||(vt1.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))))OR(0.7173924086196194)))OR((vt0.c1 IN ()))) FROM vt1, vt0 WHERE (COALESCE(DISTINCT NULL, 0.8550295966112633) COLLATE NOCASE); -- 0ms;
SELECT ALL (- (vt0.c2)) COLLATE BINARY FROM vt0 WHERE (CASE WHEN (- (NULL)) THEN CAST(x'' AS NUMERIC) WHEN ((x'')/(0.6290137016966054)) THEN (((('')AND('')))AND(0.5367437605238599)) WHEN (('()')>>(0.18990916957120685)) THEN x'' END); -- 0ms;
SELECT 0.2461621899160411 FROM vt0, vt1 WHERE (((CASE WHEN '*' THEN 'G4' END) NOT NULL)); -- 0ms;
SELECT ALL MIN(((vt0.c2)GLOB(vt0.c1))) FROM vt0; -- 0ms;
SELECT ALL (HEX(DISTINCT vt0.c2) IN ()) FROM vt1; -- 0ms;
SELECT ALL (- (MIN(vt0.c2))) FROM vt1;SELECT DISTINCT (((vt0.c1, (~ (vt1.c0)), CAST('x\' AS REAL)))<=((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)), (- (vt0.c1)), vt0.c0 COLLATE NOCASE))) FROM vt1 WHERE (CAST(((('1678034933'))<((0.4949261757797575))) AS REAL));SELECT DISTINCT CAST((((vt0.c0, vt0.c1, '{}'))<=((vt1.c0, vt0.c0, vt1.c0))) AS TEXT) FROM vt0 WHERE (CAST((- (-384241242)) AS NUMERIC)) LIMIT 438695117 OFFSET -2007547300;SELECT DISTINCT (((vt1.c0)) BETWEEN ((vt0.c1)) AND (((+ (NULL))))), MIN(((vt0.c0) NOTNULL)) COLLATE RTRIM, vt1.c0 FROM vt1, vt0 WHERE (((LIKELY(NULL))*(CAST(0x797d58b5 AS TEXT)))); -- 0ms;
SELECT ((vt0.c0)AND(CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (((UNICODE(0.03170305943543128))IS NOT(LAST_INSERT_ROWID()))); -- 0ms;
SELECT ALL (((vt1.c0 IN ()))>=(0.5615553080053659)) FROM vt1, vt0 WHERE ((~ (UPPER(0.45108381948413)))) LIMIT -2116098508 OFFSET 1799343428; -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS(vt0.c1)))|(((vt0.c1) IS FALSE))), (+ (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))), ((((((vt0.c2)OR(vt1.c0)))OR(vt0.c2))) BETWEEN (((vt0.c2)<(vt0.c2))) AND (((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)))), CAST((- (vt1.c0)) AS BLOB), CASE CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt0.c0 END  WHEN ((vt1.c0)!=(vt0.c2)) THEN ((vt1.c0)-(0xffffffffdfb6515e)) WHEN TOTAL_CHANGES() THEN (((vt0.c1))>=((vt1.c0))) WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c2 WHEN ((vt0.c1)OR('2119814999')) THEN (vt1.c0 IN ()) WHEN vt0.c2 COLLATE BINARY THEN COUNT(*) WHEN '' THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)) ELSE ((vt0.c0)*(vt0.c0)) END FROM vt1;SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((vt0.c1 COLLATE RTRIM))), SUM((vt0.c2 IN (vt1.c0))), ((((x'5fc2') IS TRUE))&(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c2)) BETWEEN ((NULL)) AND ((CAST(vt0.c0 AS INTEGER)))) FROM vt0, vt1 WHERE ((((x'')) NOT BETWEEN ((rtreenode(0.014483918063125212, x''))) AND ((((NULL) BETWEEN ('teXGK') AND ('\rb|')))))); -- 0ms;
SELECT CAST(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) AS NUMERIC) FROM vt1, vt0 WHERE (NULL); -- 0ms;
SELECT ALL COUNT(CAST(vt0.c2 AS BLOB)) FROM vt1, vt0; -- 0ms;
SELECT ALL (NOT (CASE WHEN vt0.c2 THEN vt0.c0 END)) FROM vt1 WHERE ((~ ('626202021' COLLATE NOCASE)));SELECT DISTINCT vt0.c1 FROM vt0 ORDER BY (((vt0.c2 IN ()))!=(CASE WHEN vt0.c1 THEN vt0.c0 WHEN '-1566997045' THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 END)) DESC;SELECT ((((vt1.c0)/(vt0.c2)))-(CASE WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) FROM vt1;SELECT DISTINCT 9.50270357E8 FROM vt1 WHERE ((((NULL IN ())) NOT NULL)) LIMIT -2051950915 OFFSET 999847182; -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(vt0.c0) IN ()) FROM vt0 WHERE (CASE WHEN ((('[!ga辠'))=((-102453964))) THEN (('ZHz#')LIKE('2074259483')) ELSE LAST_INSERT_ROWID() END); -- 0ms;
SELECT ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (((vt0.c1)>>(vt0.c1)))) FROM vt0 ORDER BY ((((CASE WHEN '765242470' THEN 0.6808022822332688 ELSE vt1.c0 END)OR(((vt0.c0)IS(vt0.c0)))))AND(vt0.c2)) ASC  NULLS LAST, ((((vt0.c1) ISNULL))%(((vt0.c0) NOTNULL)))  NULLS FIRST;SELECT (MAX(vt1.c0) IN (CHAR(vt0.c0))) FROM vt0, vt1 WHERE ((((+ (x'')))OR((((NULL)) NOT BETWEEN ((x'1206')) AND ((0xffffffffe0ad22ce)))))); -- 0ms;
SELECT ALL TOTAL(COUNT(*)), x'', LOWER(DISTINCT ']\r'), (vt0.c0 IN (vt0.c1, x'')) COLLATE NOCASE, (((vt0.c1)) BETWEEN ((((((((((vt0.c1)OR('ꡔ')))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c0))))) FROM vt1, vt0;SELECT DISTINCT NTH_VALUE(STRFTIME(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)IS NOT(vt1.c0)), (vt1.c0 IN (vt1.c0))), UPPER(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) OVER () FROM vt1 WHERE (((((- (NULL))))<((CASE WHEN NULL THEN 0.5750277809501696 END)))) ORDER BY ((vt0.c1)IS(vt0.c0))  NULLS FIRST;SELECT DISTINCT load_extension((NOT (vt0.c2)), vt1.c0), MAX(((vt0.c0) ISNULL)), SUM((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt1.c0, vt0.c1, vt0.c1)))) FROM vt1, vt0;SELECT DISTINCT TRIM((((vt0.c2, vt1.c0, 0.07949368878746044)) BETWEEN ((vt1.c0, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c1, vt0.c1)))), ((CAST(vt0.c0 AS TEXT))IS NOT(((vt0.c1)|(vt0.c1)))), 0xffffffffb2da9969 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt0.c2 COLLATE BINARY))<>((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) FROM vt1 WHERE ((+ (NULL)));SELECT ALL ((ABS(vt1.c0)) BETWEEN (vt0.c2) AND (CAST('' AS TEXT))), AVG(vt1.c0 COLLATE BINARY), ((vt1.c0 IN ()) IN (vt1.c0 COLLATE RTRIM)) FROM vt1 WHERE (((((x'') NOT BETWEEN (1.074328013E9) AND (NULL))) NOT BETWEEN (((NULL)|('J.*r&'))) AND (((0.9808825567456783)|(0.5397259943317996)))));SELECT DISTINCT ((AVG(vt0.c2)) BETWEEN ((vt1.c0 IN ())) AND (x'')), ((((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))) BETWEEN (LIKELIHOOD(vt0.c2, 0.9278215347458862)) AND (AVG(vt0.c1))), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END))) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT SUM((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) OVER (), vt0.c2, AVG(TRIM(DISTINCT NULL)) OVER () FROM vt0, vt1; -- 0ms;
SELECT ((~ (0.09222659413158807)) IN ()) FROM vt0 WHERE (((((0xffffffffba79a7d4) NOT NULL))IS NOT((- (0X25d42c3))))); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt1 WHERE (((x'd69d' COLLATE RTRIM)-((('E1')|(0x302594ac))))); -- 0ms;
SELECT ALL DATETIME((((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, 'G<?jT^x')) AND ((vt0.c1, vt0.c2, vt0.c2))), TRIM(DISTINCT vt1.c0), AVG(vt1.c0)) FROM vt0, vt1 LIMIT 1436225425 OFFSET -1810298669; -- 0ms;
SELECT DISTINCT ((vt0.c2) ISNULL) COLLATE NOCASE FROM vt0 WHERE (((((('1821228867'))>(('n|YhZ')))) IS FALSE)) GROUP BY ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c2))) IN (((x'7854')OR(vt1.c0)))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c1))), ((x'')+(-2.11122061E8)) ORDER BY ((json_valid(vt1.c0)) BETWEEN (((vt0.c1)LIKE(vt0.c0))) AND (((vt1.c0)-(vt0.c2)))) ASC, vt0.c1 ASC;SELECT DISTINCT json_valid((((vt0.c1, vt1.c0, vt0.c0))==((vt0.c0, vt0.c2, vt0.c2)))), (vt0.c2 IN (vt0.c0)) COLLATE NOCASE COLLATE BINARY, COUNT(*) FROM vt0 WHERE ((((+ ('-573232611')))IS NOT(TRIM(0X5007cdd0))));SELECT '' FROM vt1, vt0 WHERE (CASE WHEN (('-528708885') NOT BETWEEN ('') AND ('䳺6bN')) THEN CASE WHEN '637511171' THEN '' WHEN NULL THEN '' WHEN '950270357' THEN -392387407 ELSE NULL END END); -- 0ms;
SELECT DISTINCT IFNULL((((vt0.c2))>=((0.2671141447879435))), TOTAL_CHANGES()), (((vt0.c0)) BETWEEN (('됼蠃 ' COLLATE NOCASE)) AND ((vt0.c2))), CUME_DIST() OVER (), (~ (CASE WHEN vt1.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)), NTILE(((-156620733) BETWEEN (CASE vt1.c0  WHEN 'E	O䊲' THEN vt1.c0 ELSE vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) OVER () FROM vt1 WHERE ((NOT ((~ ('-224631677')))));SELECT DISTINCT (+ (((((vt0.c0)AND(vt0.c2)))OR(vt1.c0)))), (~ (vt0.c1 COLLATE BINARY)), (NOT (((vt0.c2)+(vt0.c2)))) FROM vt0;SELECT DISTINCT ((CAST(vt0.c2 AS INTEGER))=(AVG(vt1.c0))), (((((((((((((((vt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2))))OR((- (vt0.c2)))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CAST(vt1.c0 AS BLOB))))AND(((vt0.c1) IS FALSE))))OR(TOTAL_CHANGES())))OR(vt1.c0 COLLATE NOCASE)), vt0.c0, '1865465279', vt0.c1 FROM vt0, vt1 ORDER BY (NOT (NULL)), ((((vt0.c0)>>(vt1.c0))) IS TRUE)  NULLS FIRST LIMIT -142539512; -- 0ms;
SELECT vt0.c2 FROM vt0, vt1 WHERE (CASE WHEN x'81a57a39' THEN ((NULL)<=(x'')) WHEN NULL THEN (NULL IN ()) WHEN (0x58aaedaf IN ()) THEN CASE WHEN NULL THEN NULL END ELSE LOWER(0.4704887653959564) END); -- 0ms;
SELECT DISTINCT TRIM(((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c2)))AND(vt1.c0)))OR(vt0.c2))), (((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((LENGTH(vt0.c0)))), ((((((((((vt0.c1)IS NOT(vt0.c2)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))))OR('r P8f0oW')))AND(((vt0.c0)>=(vt1.c0)))))AND((((vt0.c0, vt1.c0, vt1.c0))!=((vt0.c2, vt0.c1, vt0.c2))))) FROM vt1 LEFT OUTER JOIN vt0 ON ((((- (vt0.c0)), NULL, '366349312'))>=((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c0)), ((vt0.c1)IS NOT(vt0.c1)), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c2))))) WHERE (json_object(CAST(x'' AS TEXT), ((('-218407006'))>=((0x6f30bdbf))), CAST(1.289542907E9 AS INTEGER), ((x'') NOTNULL)));SELECT ((((((vt0.c2) IS TRUE))AND(STRFTIME(vt1.c0, vt0.c0, vt0.c2))))OR((~ (vt1.c0)))) FROM vt0 ORDER BY vt0.c0 ASC;SELECT DISTINCT LAG((+ (((vt1.c0)<<(vt1.c0)))), (- (((vt1.c0)>>(vt1.c0)))), ((((vt1.c0)OR(vt1.c0))) NOTNULL)) OVER (), TOTAL((~ (vt0.c2))) OVER (), (NOT (vt0.c0)) COLLATE NOCASE COLLATE RTRIM FROM vt1;SELECT MAX(((vt0.c1) ISNULL)) FROM vt0, vt1 WHERE ((((NULL)||(0.816779037211313)) IN ())); -- 0ms;
SELECT CHAR(vt0.c1, ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)), TOTAL(vt0.c2), (~ (vt0.c1)), ((((vt1.c0)AND(vt0.c1)))AND('-1691835197'))) FROM vt0, vt1 WHERE ((((0.8934822287897576)) NOT BETWEEN ((((NULL) IS FALSE))) AND (((('') BETWEEN (x'') AND ('922348097')))))); -- 1ms;
SELECT NTILE(CASE ((vt0.c0)IS(vt0.c0))  WHEN ((vt0.c2)LIKE(vt0.c2)) THEN HEX(NULL) ELSE CAST(vt0.c2 AS TEXT) END) OVER (), ((((vt0.c2 COLLATE RTRIM)AND(((vt0.c2) ISNULL))))OR((((NULL)) BETWEEN (('z+')) AND ((vt1.c0))))), NULL FROM vt0 WHERE (LIKELIHOOD(CAST('1殔' AS TEXT), 0.6231131925424219)) ORDER BY -364534899 ASC;SELECT DISTINCT ((('')<=(0Xffffffffe0e93b19)) IN ()) FROM vt0 WHERE (((((x'') BETWEEN (-1.4266179E9) AND ('')))OR(CASE '1e500'  WHEN 'qg|Y]W5E|' THEN ',㼿jYQyO' END))); -- 0ms;
SELECT DISTINCT x'b0af2290', (NOT (vt0.c1)) COLLATE NOCASE, ((((vt0.c1)*(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((((x'4371')) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c2))>((125299556, NULL, vt1.c0, vt0.c2, vt1.c0))), ((vt1.c0)IS NOT(vt1.c0)), ((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)), (((vt1.c0, '', vt0.c1))>((vt1.c0, vt1.c0, vt0.c0))), vt0.c2, ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)), vt0.c1))<=((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)), vt0.c1, ((vt0.c1) IS TRUE), ((vt1.c0)-(vt0.c1)), (~ (vt0.c2)), ((vt0.c1) IS FALSE), ((((vt0.c2)OR(-1417922311)))OR(vt0.c0))))) FROM vt0;SELECT DISTINCT RANK() OVER (), (((vt0.c0 COLLATE NOCASE))<((((vt0.c1)/(vt0.c2))))), (- (NULL)) FROM vt1 WHERE (((((CAST(NULL AS BLOB))OR((x'' IN ()))))AND(((((((((0.9836793793973084)OR(0.20679613848696532)))OR('1134964018')))AND(0xaa722c8)))AND(0.4330699631750068)))));SELECT DISTINCT (- ((NOT (vt0.c2)))), ((((MAX(vt1.c0, NULL))OR(((vt0.c0)<(vt1.c0)))))OR(((vt1.c0)+(vt0.c2)))), ((((vt0.c2)%(vt1.c0))) NOTNULL), vt0.c1, (SUM(NULL) IN ()) FROM vt0 WHERE ((NOT (-593705724 COLLATE RTRIM)));SELECT ALL ((CASE WHEN vt1.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (IFNULL(vt0.c1, 0.32133286091351976))) FROM vt1, vt0 WHERE (IFNULL((('I\n') IS FALSE), (0.7192047228529748 IN (0.09222659413158807)))); -- 0ms;
SELECT DISTINCT (((vt0.c1 IN ()))AND(CAST(vt0.c0 AS REAL))) FROM vt0, vt1; -- 0ms;
SELECT (((((((vt0.c1)AND(vt0.c0)))AND(vt1.c0))))<=((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))), CAST(LIKE(vt0.c2, vt0.c2, 'O') AS TEXT), CASE WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) WHEN SUM(vt1.c0) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt1.c0)) THEN RTRIM(vt0.c0) ELSE ((vt0.c0)GLOB(vt1.c0)) END FROM vt1, vt0 ORDER BY load_extension((~ (vt0.c1)))  NULLS FIRST; -- 1ms;
SELECT ((CASE WHEN vt1.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c0 THEN x'' ELSE vt0.c0 END) IS TRUE) FROM vt0, vt1; -- 0ms;
SELECT ALL ((((vt1.c0)+(vt0.c1))) BETWEEN (CAST(vt0.c2 AS TEXT)) AND (((0.5485791513739097)-(vt0.c2)))) FROM vt1, vt0; -- 0ms;
SELECT IFNULL(DISTINCT CAST(vt0.c1 AS TEXT), MAX(vt0.c2)) FROM vt1, vt0; -- 0ms;
SELECT (IFNULL(DISTINCT vt0.c0, vt0.c1) IN ()) FROM vt0 WHERE (((((json_patch('', '-1569766259'))OR(0.026750542831644797)))OR(UNLIKELY(DISTINCT ''))));SELECT DISTINCT ((vt0.c0) NOT BETWEEN ((((vt1.c0, vt0.c2, vt0.c2)) BETWEEN ((vt0.c1, vt1.c0, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c0)))) AND (COUNT(vt0.c1))), ((((NOT (vt0.c2))))<((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1))))), 1.692616727E9 COLLATE BINARY FROM vt1;SELECT ALL (((((NULL)>>(vt0.c1)), ((vt0.c1)LIKE(vt1.c0)), AVG(vt0.c2)))==((x'', CAST(vt0.c0 AS BLOB), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) FROM vt0, vt1 WHERE (CASE (('됼y ') ISNULL)  WHEN ((x'')IS NOT(0.4889060262273238)) THEN ((((0Xffffffffd935e6f0)AND(0Xffffffffe10bce94)))AND(NULL)) WHEN ((0.668187718255517)||('{v')) THEN ((((NULL)OR(1697593075)))AND(NULL)) WHEN NULL THEN ((-2.67107125E8)AND(NULL)) END) LIMIT 2092932901; -- 0ms;
SELECT DISTINCT TOTAL(((((vt1.c0)AND(0.7043736970142207)))OR(vt0.c1))) OVER ( ORDER BY (((((vt0.c0)-(vt0.c1)), (((vt0.c0, vt0.c0, vt1.c0))>(('-1274669202', vt0.c2, 0.19791293886054895))), (- (vt1.c0)), vt0.c2 COLLATE RTRIM, UPPER(DISTINCT vt0.c1)))>=(((((vt1.c0))<>((vt0.c1))), (((vt0.c0))!=((vt0.c2))), 1049197862, (~ (vt0.c2)), (((x'')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ASC  NULLS FIRST) FROM vt0 WHERE ((((x'1f4c')) BETWEEN ((CAST(0.7745452680267948 AS NUMERIC))) AND ((IFNULL('0.5515927017859411', NULL)))));SELECT ALL GROUP_CONCAT(TOTAL((- (vt0.c0)))) FROM vt1 WHERE ((- (((-1.202823656E9) NOT BETWEEN (x'1b47') AND (0.22190287505556716)))));SELECT DISTINCT LIKELIHOOD(DISTINCT AVG(vt1.c0), 0.5235160543864039), (+ ((vt0.c1 IN ()))), ((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (((vt0.c1) IS FALSE))) FROM vt1 WHERE (IFNULL((((x'8dac')) NOT BETWEEN ((NULL)) AND (('J\n_5'))), ((((0.19713917495647315)OR(NULL)))OR(0.47024712820394343))));SELECT DISTINCT ((((vt0.c0)AND(vt0.c1)))LIKE(NULL COLLATE NOCASE)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT x'', (((((+ ('-1944584738')))AND(vt0.c1)))AND(vt0.c2 COLLATE NOCASE)), TOTAL(NULL COLLATE RTRIM) OVER ( ORDER BY CASE WHEN ((vt1.c0)>(vt0.c0)) THEN IFNULL(vt0.c0, vt0.c2) ELSE ((NULL) NOT NULL) END ASC, ((('nUt儬T' IN (vt1.c0, vt0.c2)))%(((vt1.c0)<>(vt0.c0)))) DESC, CAST(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c0 END AS BLOB)) FROM vt1, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT COUNT(GROUP_CONCAT(vt1.c0)), ((CAST(NULL AS REAL))<=(AVG(vt0.c1))), ((((vt0.c1) NOTNULL))IS NOT(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c2)))), CASE COALESCE(DISTINCT vt0.c1, vt0.c0)  WHEN (~ (vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 END END, vt1.c0 FROM vt1, vt0 LIMIT 2025781016 OFFSET -1754487915;SELECT ((0.3403014691609607 IN ()) IN ()) FROM vt1 WHERE (((((x'')>=(0.3455919401084052)))+(CAST('[]' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c1) IS FALSE)  WHEN vt0.c2 COLLATE NOCASE THEN TOTAL(vt1.c0) WHEN SUM(vt1.c0) THEN ((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((((((((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c2)))AND(0.2461621899160411)))OR(vt0.c1)))AND(vt1.c0)) END FROM vt1 WHERE (x'');SELECT (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END))<>((''))) FROM vt0 WHERE (0.852096078701629); -- 0ms;
SELECT (((vt1.c0)>(vt1.c0)) IN ((((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c0, vt1.c0))))) FROM vt1, vt0 WHERE ((((x'e6b7' IN ()))<>((~ (0.307964015579396))))) LIMIT 1633073149 OFFSET 1495274800; -- 0ms;
SELECT DISTINCT LIKE(((((((((vt0.c2)OR(vt1.c0)))OR('-0.0')))AND(vt0.c0)))OR(vt0.c0)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)), 'I') FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt0.c1)>>(vt0.c0)) COLLATE NOCASE, HEX(DISTINCT '1487596975'), ((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))OR(CAST(vt1.c0 AS REAL))))AND(x'ab40')) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (+ ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FROM vt0, vt1 ORDER BY CAST(((vt0.c1)&(vt0.c0)) AS TEXT)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((((((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)AND(AVG(vt0.c1))))OR(((vt1.c0)=(vt0.c0)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END)))OR(((((((((vt0.c2)OR(vt0.c2)))AND(NULL)))AND(vt1.c0)))AND(vt0.c1)))))AND(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c2)))))AND('-2143563102' COLLATE RTRIM)) FROM vt0;SELECT DISTINCT ((HEX(DISTINCT vt0.c1))<(MIN(vt0.c1))), ((((((vt0.c0)+(vt1.c0)))OR(((vt0.c0)||(vt0.c2)))))OR(((vt0.c1) IS FALSE))), ((CAST(vt1.c0 AS INTEGER))>=(vt1.c0)), (~ (vt1.c0 COLLATE RTRIM)), (((((vt1.c0))<>((vt1.c0)))) NOT NULL) FROM vt0, vt1; -- 0ms;
SELECT ALL ((vt0.c0)==(vt1.c0)) COLLATE RTRIM FROM vt1 LIMIT -1531681458;SELECT DISTINCT ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c2)) COLLATE NOCASE FROM vt0, vt1 WHERE (CAST(-5.26546937E8 AS TEXT)) LIMIT -976333131; -- 0ms;
SELECT ALL ((vt0.c2 COLLATE NOCASE)&(json_array_length(1692616727, NULL))), ((((vt1.c0)>(vt0.c2))) NOT NULL), ((vt0.c1 COLLATE BINARY)>=((+ (vt0.c0)))) FROM vt1, vt0 ORDER BY ((((vt0.c0)*(vt0.c2))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (vt0.c1)); -- 0ms;
SELECT ALL ((((vt1.c0)LIKE(vt0.c0))) NOT BETWEEN (((vt0.c1)>=(vt1.c0))) AND (CAST(vt0.c0 AS BLOB))), (~ (((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))), LAST_VALUE(((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END)<(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))))) OVER () FROM vt0 LIMIT 1963878426 OFFSET 2070085189;SELECT DISTINCT (NOT (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))), ((((vt0.c1)/(vt0.c1)))|(SUM(vt0.c2))), (((SUM(vt0.c1)))==((CAST(vt0.c1 AS BLOB)))) FROM vt1, vt0 WHERE (((NULL) IS FALSE)); -- 0ms;
SELECT ((((vt0.c0)<(vt1.c0)))<(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c0 END)), (- (CAST(vt0.c2 AS BLOB))), vt0.c0 COLLATE RTRIM FROM vt1;SELECT (NOT (vt1.c0 COLLATE RTRIM)) FROM vt0 WHERE (CASE (((1.678034933E9))<=((x'')))  WHEN (('-1e500') NOT BETWEEN ('-316881631') AND (NULL)) THEN ((('')) BETWEEN ((1158906120)) AND (('ጤ '))) WHEN ABS(0.25779802847679756) THEN ((((x'538c139e')AND(0.9629648011961899)))AND('4i')) WHEN ((0x11936db4)AND(NULL)) THEN (((NULL))>(('1857797631'))) END);SELECT DISTINCT LIKE(CAST(vt0.c0 AS TEXT), ((vt1.c0)>>(x''))), AVG(CASE vt0.c1  WHEN vt0.c1 THEN NULL END) OVER (), ((((vt0.c2)!=(vt1.c0))) BETWEEN ((('xmonM,w')||(x''))) AND ((NOT (vt0.c1)))) FROM vt1, vt0 WHERE (((((((0.0946233947501266)AND('H[')))OR(((0.1093598566359616) NOTNULL))))AND((((('1')AND(NULL)))OR(x'79702306'))))) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (((vt0.c0)%(vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))))  NULLS FIRST; -- 1ms;
SELECT UNLIKELY(DISTINCT vt0.c0) COLLATE NOCASE FROM vt1, vt0; -- 0ms;
SELECT ALL (((~ (vt0.c1))) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (MAX(vt0.c2))) FROM vt0;SELECT ALL (~ (vt0.c2)) COLLATE NOCASE, ((((vt0.c1)+(x'73d9'))) NOTNULL), CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM FROM vt1 WHERE (((x'dad9' COLLATE NOCASE)>(((('mR+f\n', NULL, 'X-A?'))>(('%w', NULL, 'oV6'))))));SELECT DISTINCT CASE ((vt0.c1)<(vt0.c2))  WHEN (((vt0.c2, vt0.c2, vt0.c0))<>((vt0.c2, vt0.c1, x''))) THEN ((vt0.c1) IS FALSE) END FROM vt0, vt1; -- 0ms;
SELECT (((vt0.c1 IN ()))>=(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)) FROM vt1, vt0 WHERE (((((x'') NOTNULL)) NOTNULL)) LIMIT -1503080376 OFFSET -28165664; -- 0ms;
SELECT DISTINCT '' FROM vt1; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) FILTER(WHERE ((IFNULL(vt0.c0, vt0.c0)) BETWEEN ((vt0.c1 IN (vt0.c1, vt0.c1))) AND ((((x'd356')) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) OVER () FROM vt1;SELECT DISTINCT vt0.c2 FROM vt0, vt1 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN (((0x5403b68b)) NOT BETWEEN (('0.5302571803791247')) AND (('-1426617900'))) END); -- 0ms;
SELECT ALL CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN TOTAL(vt0.c2) ELSE ((vt0.c2) IS FALSE) END FROM vt0, vt1 GROUP BY CASE WHEN (+ (vt1.c0)) THEN CAST(vt0.c2 AS TEXT) END HAVING CASE WHEN CAST(vt0.c0 AS BLOB) THEN x'' WHEN (vt0.c1 IN (vt0.c0)) THEN (vt0.c1 IN ()) WHEN CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'1ca4' END THEN ROUND(vt0.c1, vt0.c0) END LIMIT 1032854265 OFFSET -736467093; -- 1ms;
SELECT DISTINCT (+ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) FROM vt1 GROUP BY (((+ (x'a20e')))/(CAST(vt0.c0 AS INTEGER)));SELECT (('.*ulI')||(1e500)), CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER), (- (CAST(vt0.c1 AS TEXT))) FROM vt0, vt1 WHERE (((CAST('1692616727' AS BLOB))IS NOT((+ ('s[䉢w'))))) GROUP BY (((((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))AND(((((vt1.c0)OR(vt0.c1)))OR(vt0.c2)))))AND((+ (vt1.c0)))); -- 0ms;
SELECT DISTINCT MAX(((x'')|(vt0.c2))) FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))) WHERE (((json_extract('0.47428212837013084', NULL, NULL, x'', '435305475', x'')) NOT BETWEEN (((((1.857797631E9)AND(1.649614073E9)))AND(NULL))) AND (((0.7290937211627522) NOT BETWEEN ('-2116098508') AND (1.774555252E9)))));SELECT ALL ((((TOTAL(x'e981'))OR(vt0.c0 COLLATE BINARY)))OR(CASE vt0.c2  WHEN vt0.c2 THEN '-765138600' WHEN vt0.c2 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)), COUNT(*), ((vt1.c0)+(vt0.c2)) COLLATE RTRIM FROM vt0, vt1 WHERE (((x'' IN (0.8403787583072773)) IN ())); -- 0ms;
SELECT DISTINCT (((((vt0.c2))=((vt0.c0)))) BETWEEN (((vt0.c1) NOT NULL)) AND (CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) FROM vt1, vt0 ORDER BY (vt1.c0 IN ()) COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt0.c2, '1118841173', vt0.c0, '#/', x'')) NOT BETWEEN (('?K(o', 0Xffffffffba78daca, (- (vt0.c1)), vt0.c1 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c0 END)) AND ((x'', ((vt0.c1)<(vt1.c0)), (vt0.c2 IN ()), SUM(vt0.c0), vt0.c2))), RANK() OVER (), x'6cad' FROM vt0;SELECT DISTINCT ((((((((vt1.c0)AND(CAST(vt1.c0 AS TEXT))))OR(vt0.c1 COLLATE BINARY)))OR(((((vt0.c1)OR(vt0.c2)))OR(vt1.c0)))))OR(CAST(vt0.c1 AS INTEGER))) FROM vt1, vt0 EXCEPT SELECT DISTINCT ((((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c2 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)AND(vt0.c2 COLLATE BINARY)))OR((('_࠶3') IS FALSE))) FROM vt0, vt1 WHERE ((((1.848289133E9)>('d*6앻d,_U&')) IN ((- (x''))))); -- 0ms;
SELECT DISTINCT (((HEX(vt1.c0), ((((vt0.c2)AND(vt1.c0)))AND(vt0.c1)), ((vt0.c0)>=(vt0.c2)), vt0.c0, ((vt0.c0)||(vt0.c1))))<=(((~ (vt0.c2)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), ((((vt0.c0)OR(0.09222659413158807)))AND(vt0.c2)), MIN(vt0.c2)))) FROM vt0, vt1 WHERE (((((0.6684946083007741)||(NULL))) NOTNULL)) ORDER BY ((CAST(vt0.c2 AS TEXT)) NOT NULL) DESC  NULLS LAST; -- 4ms;
SELECT DISTINCT (((- (197173403)))!=(((vt1.c0)<(vt0.c0)))) FROM vt1 WHERE (CASE WHEN ((x'')IS(NULL)) THEN CAST(2.40598792E8 AS NUMERIC) ELSE x'' END) GROUP BY (((vt0.c0))>((vt0.c0))) HAVING (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))==((vt0.c0)));SELECT COUNT(((((vt0.c2)AND(vt0.c0)))AND(vt1.c0))) OVER () FROM vt1, vt0; -- 0ms;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'') NOT BETWEEN ('-130178849') AND (2.147408704E9))) IS TRUE)) GROUP BY CASE WHEN (vt0.c1 IN ()) THEN vt1.c0 COLLATE RTRIM END, ((CAST(vt0.c0 AS INTEGER)) BETWEEN (NULL) AND ('-1742889891')), ((vt1.c0 COLLATE BINARY)|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) LIMIT -1186101338; -- 0ms;
SELECT '-984669763' FROM vt0 WHERE (((((x'c50e')>>(x'1698')))%((+ (''))))); -- 0ms;
SELECT ALL (vt1.c0 IN (x'', vt1.c0)) COLLATE BINARY FROM vt0, vt1 WHERE (((CASE NULL  WHEN 0.01700762182487292 THEN 0xffffffffe9fc4697 ELSE '-525953077' END)<((('-911833572') IS TRUE)))); -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c2 THEN NULL ELSE vt0.c0 END WHEN CAST(0.03863837658974845 AS INTEGER) THEN x'' WHEN CASE WHEN vt0.c2 THEN vt0.c1 END THEN ((1780525274) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE (vt0.c2 IN ()) END FROM vt1, vt0 WHERE (((((((((CAST(x'' AS BLOB))AND(((0.6773993729831878) NOT BETWEEN ('') AND (x'6898')))))AND((((x'', x'2422301d', NULL)) NOT BETWEEN ((0.3523904782536378, x'b67b', x'')) AND (('-248603292', 0.9835841250992314, 116139659))))))OR('-1188958386' COLLATE RTRIM)))OR(UNICODE(NULL)))); -- 0ms;
SELECT DISTINCT (((vt0.c2)LIKE(vt1.c0)) IN ()) FROM vt1 WHERE ((((('')AND('-1721035996')))OR(-1.4266179E9)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) AND (x'')), ((((vt0.c2 COLLATE NOCASE)AND(((vt0.c0)%(NULL)))))AND((((vt0.c1))=((vt1.c0))))), ((CAST(vt0.c1 AS NUMERIC)) BETWEEN (((vt1.c0)>(vt0.c1))) AND (vt1.c0 COLLATE RTRIM)) FROM vt1;SELECT DISTINCT TRIM(((vt0.c2) NOT NULL)), CASE WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE MIN(x'', vt0.c2, vt1.c0, vt0.c1) END, CASE '1033255587' COLLATE NOCASE  WHEN ((vt0.c1)-(vt0.c1)) THEN CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END WHEN x'' THEN ((vt0.c2)LIKE(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN 0X46a43f8b END FROM vt0 WHERE (DATE(((0.7898338940919957) BETWEEN ('') AND (x'f6cc')), ((1.848289133E9)IS('-2063273362')), HEX(DISTINCT '7n2f'))) LIMIT 1300922083 OFFSET -218407006;SELECT ALL (vt1.c0 IN ()), CAST((vt1.c0 IN ()) AS BLOB), (~ (MIN(vt0.c0))) FROM vt0 WHERE ((((((((((~ ('M')))OR(('' IN ('teXGK', '1963907083')))))AND((NOT ('765242470')))))AND(0.051123922015652856)))OR((x'' IN (0X38df6bd4))))); -- 0ms;
SELECT DISTINCT (((((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT NULL) FROM vt0 WHERE (((((((x'6235')) BETWEEN ((0.3952152778220225)) AND ((NULL))), json(''), ((((0.3226370859961796)OR('2018302705')))AND(x'17fd'))))!=(((('0.03738356053426217') NOT BETWEEN ('遴') AND (NULL)), (NULL IN (0.4640097904954057, 't-(d')), -1790536739))));SELECT DISTINCT CASE NULL  WHEN IFNULL(vt1.c0, vt1.c0) THEN (NOT (vt0.c2)) ELSE NULLIF(vt1.c0, vt0.c0) END FROM vt1 WHERE (CASE NULL  WHEN CASE WHEN '' THEN ', ' END THEN (('') BETWEEN (NULL) AND (0.06552631068772508)) END);SELECT (~ (COUNT(*))), ((((vt0.c1)!=(vt0.c0)))||((vt0.c0 IN (vt0.c2)))), CUME_DIST() OVER ( ORDER BY ((vt0.c2)LIKE(NULL)) ASC  NULLS LAST) FROM vt1, vt0 WHERE ((((x'')%(x'36bd')) IN (((x'') BETWEEN (0.3989084323414499) AND (NULL)), ((('AF[L5e] r')) NOT BETWEEN (('2037825770')) AND ((x'35e6')))))); -- 0ms;
SELECT DISTINCT (+ ((vt0.c0 IN (vt1.c0, 0xffffffffd7556a87)))), ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) IS TRUE), (NOT (CAST(vt0.c2 AS BLOB))) FROM vt0, vt1 ORDER BY (((((vt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))OR(vt0.c1)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt1 WHERE (((CASE 0x38a3f995  WHEN NULL THEN x'' ELSE NULL END)%((('1647733652') IS TRUE)))); -- 0ms;
SELECT DISTINCT (((((~ (NULL)))AND(vt1.c0)))OR(((vt0.c0) BETWEEN ('') AND (vt0.c2)))) FROM vt0, vt1 WHERE (CASE WHEN ((((((((NULL)OR(0.5158383824101563)))OR(0.7954696990167643)))OR(x'66d7')))OR('1222732193')) THEN 0.345637673183244 COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT ABS((+ (vt0.c1))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((vt1.c0)||((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))), NULL, (+ (((((vt1.c0)OR(vt0.c2)))AND(vt0.c0)))) FROM vt0 WHERE ((~ ('')));SELECT CAST(((vt0.c0)||(vt0.c1)) AS INTEGER) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT MIN((vt0.c2 IN ()) COLLATE RTRIM), COALESCE(vt0.c2, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END), COUNT(*) FROM vt0 WHERE (json_array_length(((0.6346564444644083)>>(NULL)), NULL));SELECT ALL ((((((0.3844703947059904)AND(vt0.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt0.c0)<(vt0.c0)))) FROM vt0, vt1 WHERE (0.9926623861462982); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY vt0.c2  NULLS FIRST) FROM vt0 GROUP BY ((IFNULL(vt1.c0, vt0.c2)) NOT BETWEEN (((((vt0.c1)AND(vt1.c0)))AND(vt0.c1))) AND ('-802256096'));SELECT ((((((((AVG(vt0.c2))OR(NULL COLLATE RTRIM)))AND(((vt0.c1)!=(NULL)))))OR((((vt0.c1, vt0.c0, vt0.c2))>((0.16582762343818624, vt0.c0, vt1.c0))))))AND((vt1.c0 IN ()))) FROM vt1 ORDER BY '7 lti\r'  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(x'')) FROM vt0, vt1 WHERE (((('N<z-.a')) BETWEEN (((('>#nR\n')|('-1280970704')))) AND ((CASE NULL  WHEN '' THEN x'' ELSE 0x3280d42b END)))); -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)OR(CASE 0.391807338916233  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c2 END)))OR(CASE WHEN '-2116098508' THEN vt0.c2 END)))AND(CASE WHEN vt0.c0 THEN vt0.c2 END)))OR(((((((((4.87892445E8)AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)))), 0.22190287505556716, (((((vt0.c0))=((vt0.c1)))) BETWEEN (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END) AND (SUM(vt0.c0))), LEAD((vt1.c0 IN ()), TRIM(DISTINCT ((vt0.c1)GLOB(vt1.c0))), ((CASE vt0.c0  WHEN 1.289542907E9 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN 0.5751855745134127 THEN vt0.c2 END)>(((vt1.c0)IS NOT(vt0.c1))))) OVER (), (((vt0.c2)/(NULL)) IN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt1, vt0 WHERE (((CAST(0.44068032828329395 AS TEXT))%(((NULL) IS TRUE)))) ORDER BY (+ (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))) DESC  NULLS LAST, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (x'') AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt1.c0 END)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)IS NOT(vt0.c0)) AS INTEGER) FROM vt0 WHERE (((((('1769360892' IN ()))OR(((((((((x'')AND(x'')))AND(NULL)))OR(0.40475731711860463)))OR(x'')))))AND((~ ('')))));SELECT (((((vt0.c1)>>('-1944017104'))))<((CAST(vt1.c0 AS BLOB)))) FROM vt0;SELECT ALL x'' FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1, (~ ((((vt0.c2, vt1.c0, vt1.c0))=((vt0.c0, vt0.c1, vt0.c1))))), (((+ (vt0.c0)))>(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))) FROM vt0 WHERE ((((((NULL)&(0.9841578947180403)), ((-1.264530347E9)OR(x'40a4')), x''))<(((('')AND(NULL)), x'', NULL COLLATE RTRIM))));SELECT ALL ((vt0.c0) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) FROM vt0 NATURAL JOIN vt1 WHERE ((((x'') BETWEEN (x'') AND ('')) IN ())); -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))-(((vt0.c2) IS FALSE))), CAST(((vt0.c0)>>(vt0.c1)) AS BLOB), ((CAST(vt0.c2 AS REAL))>=((+ (vt0.c0)))) FROM vt1;SELECT DISTINCT COALESCE(DISTINCT CAST(vt0.c1 AS INTEGER), CASE vt1.c0  WHEN x'1e5c' THEN vt0.c2 ELSE vt1.c0 END, ((vt0.c1) BETWEEN (vt0.c2) AND (vt1.c0)), DATE(vt1.c0, vt0.c0, vt0.c2)), (((- (vt0.c2)))>(((vt0.c0) ISNULL))), ((vt0.c2)=(('-2007547300' IN ()))) FROM vt1 WHERE (CASE WHEN ((('')) BETWEEN ((x'')) AND (('-1679918277'))) THEN CAST(0.498767631492531 AS NUMERIC) END);SELECT DISTINCT ((CAST(vt0.c1 AS BLOB))>((vt1.c0 IN ()))), NTH_VALUE(-931806306, (~ ((vt1.c0 IN ())))) OVER (), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END) NOT NULL) FROM vt0 CROSS JOIN vt1 ON CAST(MAX(vt0.c1, vt0.c0) AS INTEGER) WHERE ((+ ('CtTun|墟gᓗ' COLLATE NOCASE))) LIMIT -42877922; -- 0ms;
SELECT (((((vt1.c0, vt0.c1, vt0.c1))<((vt0.c2, vt1.c0, vt0.c1))))<=(((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))) FROM vt0 WHERE (((((NULL)==(0.5486117646245081)))+((-45277306 IN (0.20465593513735147, 0.7730040935254459)))));SELECT CAST(CAST(x'' AS REAL) AS NUMERIC) FROM vt1 WHERE (SQLITE_VERSION()); -- 0ms;
SELECT NULL, ((x'831a') NOT NULL) COLLATE NOCASE, (- (((vt0.c0) IS TRUE))) FROM vt1, vt0 ORDER BY (((vt0.c1 IN (vt0.c2, vt1.c0))) NOT NULL)  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt0.c1) IS TRUE)) NOT NULL) FROM vt1, vt0 WHERE (x'') LIMIT 1234428602; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT vt0.c0 COLLATE RTRIM); -- 0ms;
SELECT DISTINCT SUM((vt0.c0 IN ())) OVER () FROM vt0, vt1 GROUP BY (+ (((1.865465279E9) NOT BETWEEN (vt0.c2) AND (vt0.c2)))); -- 0ms;
SELECT ((-1832894394)>>(((((0.28557055492374595)AND(vt0.c1)))OR(x'')))), MIN(CAST(vt0.c0 AS TEXT)), ((x'') NOTNULL) COLLATE BINARY, vt0.c1, FIRST_VALUE(vt0.c0 COLLATE RTRIM) OVER () FROM vt0; -- 0ms;
SELECT ALL ((TIME(vt0.c0, vt1.c0, vt0.c0))-(((vt0.c2) NOT BETWEEN (0.2492914804628944) AND (vt0.c2)))) FROM vt1;SELECT ALL CASE WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt1.c0 END THEN LOWER(vt1.c0) ELSE CAST(vt0.c2 AS INTEGER) END, SUM(CAST(vt0.c1 AS BLOB)) OVER (), ((0.03632573126761729)AND(0.6093162683344214)) FROM vt0, vt1 WHERE (CASE WHEN (((4.87892445E8, 'C', 558883136)) NOT BETWEEN ((x'', NULL, '')) AND ((NULL, x'', x'd3ca'))) THEN NULL ELSE ((NULL)LIKE(0xffffffff8527818c)) END); -- 0ms;
SELECT ALL ((CAST('1%1' AS BLOB))LIKE(((vt0.c0)LIKE(vt0.c0)))) FROM vt0 WHERE (CASE WHEN NULL THEN (')O' IN ()) END); -- 0ms;
SELECT DISTINCT ((((vt0.c2) BETWEEN ('CAm}') AND (vt0.c0))) NOTNULL) FROM vt0 LIMIT -95137052; -- 0ms;
SELECT ((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt0.c2 END)))OR(CAST(vt1.c0 AS TEXT))) FROM vt1 WHERE (((((0Xfffffffffce728cb)!=('487892445')))/((NOT (x'')))));SELECT DISTINCT 'G<?jT^x', TOTAL(CAST(vt0.c0 AS NUMERIC)), ((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt1.c0 END)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt0.c0)+(vt0.c1)))) FROM vt0;SELECT DISTINCT TOTAL((vt1.c0 IN (vt1.c0))) FROM vt1, vt0 WHERE (((((-4.5619851E7) NOT NULL)) ISNULL)); -- 0ms;
SELECT (((- (vt1.c0))) BETWEEN (((vt0.c1)IS NOT(vt1.c0))) AND (CASE WHEN vt0.c2 THEN vt0.c2 END)), (((((((((NOT (vt0.c1)))AND(vt0.c1 COLLATE BINARY)))OR((~ (vt0.c2)))))OR(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)))OR(((x'') ISNULL))), (+ (((vt0.c2) BETWEEN (vt1.c0) AND (vt0.c1)))) FROM vt1;SELECT ALL vt0.c2 FROM vt0, vt1 GROUP BY (((vt0.c2)|(vt0.c2)) IN ()); -- 0ms;
SELECT ALL ((((((x'') IS TRUE))AND(((vt0.c0) IS TRUE))))OR(((vt1.c0)=(vt0.c0)))) FROM vt0, vt1 GROUP BY ((vt0.c2)>=(vt1.c0)) COLLATE NOCASE HAVING (((vt1.c0 IN ()))!=(CAST(vt1.c0 AS BLOB))); -- 4ms;
SELECT ALL (+ (vt1.c0)) COLLATE NOCASE FROM vt1, vt0; -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM vt0 ORDER BY ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))  NULLS FIRST, (((((vt1.c0)>=(vt0.c2)), ((vt0.c1)*(vt1.c0)), LIKELY(vt0.c1)))<=((CASE vt1.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c2 END, ((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)), ((vt0.c1)IS(vt0.c2))))) DESC;SELECT ALL ((vt0.c2) BETWEEN (((vt0.c0)LIKE(vt0.c2))) AND (AVG(vt0.c2))) FROM vt0, vt1; -- 0ms;
SELECT CAST(GROUP_CONCAT(vt1.c0) AS BLOB) FROM vt0;SELECT ALL CAST(CAST(vt0.c2 AS TEXT) AS BLOB) FROM vt1 WHERE (CASE WHEN CASE WHEN x'' THEN NULL END THEN CAST(x'' AS INTEGER) END) GROUP BY (((((((((((vt0.c1))!=((x'97d3'))))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))OR(((vt1.c0) IS FALSE))))AND(NULL)), (+ (((((((((((((vt0.c2)AND('0.4830740836503732')))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR('865628644')))OR(-1.171643014E9)))), (('-688892016') ISNULL) HAVING '1771428044';SELECT ALL (((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))%(((vt0.c1) IS FALSE))), ((CAST(vt0.c1 AS INTEGER))-(vt0.c2 COLLATE RTRIM)), (- (COUNT(*))) FROM vt1, vt0 WHERE ((((((NULL, x'', 'I]ꆂ')) BETWEEN (('', 5.27784173E8, 0.8098042053227202)) AND ((0x10a28687, NULL, 0.6770841706361981))))<((('OfW6d')-('Wp|qJXFs9'))))); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT vt0.c0 COLLATE RTRIM) FROM vt0; -- 0ms;
SELECT ALL (((((((((((vt1.c0)OR(vt0.c2)))OR(-828704578)))AND(vt0.c0)))OR(vt0.c2)), vt0.c2, (+ (vt0.c0)), (((vt1.c0))<=((vt0.c1))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))=((vt0.c1, (NOT (vt1.c0)), CAST(vt0.c2 AS NUMERIC), (NOT (vt0.c1)), vt0.c0))), (((vt1.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt1.c0)|(vt0.c0))))), (((vt0.c0)) NOT BETWEEN (((((vt1.c0, vt0.c0, vt0.c2)) BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c2, x''))))) AND (((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, 983430120)))))) FROM vt1, vt0; -- 0ms;
SELECT ALL TYPEOF(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END) FROM vt0 NOT INDEXED GROUP BY LENGTH(CAST(vt1.c0 AS REAL));SELECT ((((vt0.c1) NOT BETWEEN (1495274800) AND (vt0.c0))) NOTNULL) FROM vt0, vt1; -- 1ms;
SELECT (((- (0.013131575612228996))) NOT NULL), (NOT (((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))), ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(((vt0.c0)/(vt0.c2)))))AND(vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.9334060062969068 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))OR(vt0.c1 COLLATE NOCASE)), AVG(((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c2)))AND(vt0.c0)))OR(vt1.c0))), MIN((vt0.c2 IN (vt1.c0))) FROM vt1 WHERE ((((('-798759983')GLOB(x'ce67'))) NOTNULL));SELECT x'' FROM vt1; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) FROM vt1, vt0 WHERE ((((('847303723') BETWEEN (NULL) AND ('-807213773'))) ISNULL)); -- 0ms;
SELECT DISTINCT (NOT (vt1.c0)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((COUNT(vt0.c2))) AND ((HEX(vt0.c0)))), json_array_length(((vt0.c0)>>(x''))), (CAST(vt0.c0 AS INTEGER) IN ()) FROM vt1 WHERE ('1647733652') GROUP BY CAST(((vt0.c2)==(vt0.c2)) AS REAL) HAVING ((((QUOTE(vt0.c2))OR(NULL COLLATE NOCASE)))OR(SUM('745861380')));SELECT (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt0.c2)>>(1217411970))))) FROM vt1 WHERE ((+ ((0x6a3f7f81 IN ()))));SELECT (((vt0.c2 IN ()))>(((vt0.c0)||(vt1.c0)))) FROM vt0;SELECT ALL CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt1, vt0 GROUP BY (~ (LIKELIHOOD(DISTINCT vt0.c0, 0.11050261739278022))); -- 0ms;
SELECT DISTINCT ((((MAX(vt0.c1))AND(HEX(DISTINCT vt1.c0))))OR(CAST(vt0.c2 AS REAL))) FROM vt1 WHERE (CAST(((0xffffffffb93540b5)&('-1211570701')) AS NUMERIC));SELECT ((vt0.c2) NOT BETWEEN ((vt0.c1 IN (x'', vt0.c0))) AND (TRIM(DISTINCT vt1.c0, vt0.c2))), ((((vt0.c2)|(vt1.c0)))||(UPPER(vt0.c1))), CAST(vt1.c0 AS TEXT), (((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)) IN ()), ROW_NUMBER() OVER () FROM vt0, vt1; -- 0ms;
SELECT (((+ (vt0.c0))) NOT NULL) FROM vt1 WHERE ((~ (0.5310398224236573 COLLATE NOCASE))) GROUP BY ((0.35270177942474135 COLLATE RTRIM)%((~ (vt0.c0)))), (vt0.c1 IN ()) COLLATE RTRIM, ((((vt0.c0) IS TRUE)) IS FALSE) ORDER BY DATE(CAST(vt0.c2 AS NUMERIC), vt0.c0 COLLATE BINARY, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(vt1.c0)))AND(vt0.c0))) DESC  NULLS FIRST, vt1.c0;SELECT ALL CAST(((vt1.c0) NOT NULL) AS BLOB) FROM vt0;SELECT ((((vt0.c2) NOTNULL))<<(AVG(vt1.c0))) FROM vt0 WHERE (((125299556) BETWEEN (x'') AND (0.8789481802941511)) COLLATE RTRIM);SELECT DISTINCT ((vt0.c2) IS TRUE) COLLATE NOCASE, HEX(((vt0.c1)GLOB(vt1.c0))), CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END FROM vt0, vt1 WHERE (((CAST(NULL AS REAL))&(CASE '-1202823656'  WHEN '' THEN x'0c2f' END))); -- 0ms;
SELECT (- (SUM(vt1.c0))) FROM vt0 GROUP BY ((((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c2)))!=(((vt0.c2) ISNULL))) HAVING ((TOTAL(vt1.c0)) IS TRUE);SELECT ALL TOTAL(COALESCE(DISTINCT vt0.c1, vt1.c0)) OVER () FROM vt1 WHERE (((((((0X347d6e22)>=(0X64e34817)))AND(((NULL)<(-1.280970704E9)))))OR(((0.43177416349014563) BETWEEN (-1.7976931348623157E308) AND ('-218407006')))));SELECT TOTAL(((vt1.c0)!=(vt1.c0))) OVER (), ((((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))+((vt0.c2 IN ()))), vt0.c2 COLLATE RTRIM FROM vt1 WHERE ((LOWER('遴') IN ())) GROUP BY CASE ((vt1.c0) NOTNULL)  WHEN '' THEN (vt0.c1 IN ()) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) END;SELECT ALL (vt0.c0 IN (vt0.c2)) COLLATE RTRIM FROM vt0, vt1; -- 0ms;
SELECT CAST(((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) AS INTEGER), ROW_NUMBER() OVER (), CAST(CAST(vt0.c2 AS INTEGER) AS BLOB) FROM vt0, vt1 WHERE (CASE WHEN '546590412' THEN NULL ELSE x'' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (CASE ((NULL)&('986515927'))  WHEN ((x'')=(0.27675305565195596)) THEN ((((((((NULL)OR('')))AND(0.8409131195498761)))OR(NULL)))AND('985932952')) WHEN ((NULL)||(NULL)) THEN (('')GLOB('0.5515927017859411')) WHEN highlight(0Xffffffffeb9dc9fc, x'f18f', 4.87892445E8, x'cfcf16fc') THEN (- (NULL)) ELSE 0.854407292558506 COLLATE BINARY END) GROUP BY ((vt0.c0 IN ()) IN ()), vt0.c0, ((CAST(vt1.c0 AS TEXT))AND(vt0.c2 COLLATE BINARY));SELECT DISTINCT ((((vt1.c0)LIKE(vt0.c2)))*(((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))) FROM vt1, vt0; -- 0ms;
SELECT ((SUM(0Xffffffff9b8bf44b))>((NOT (vt0.c0)))) FROM vt1;SELECT DISTINCT TOTAL(((vt0.c1)>>(vt0.c2)) COLLATE RTRIM) OVER (), (((vt0.c0, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2 COLLATE NOCASE, NULLIF(DISTINCT vt0.c1, vt0.c0), ((vt0.c0)>(vt0.c0)))) AND ((CAST(x'' AS NUMERIC), ((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)), CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))), COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((((((((NULL)AND(x'')))AND('{-HU}')))OR(0.2669347879042058)))AND('2060214475')) COLLATE RTRIM) GROUP BY ((((vt0.c0)<=(vt0.c2))) NOT BETWEEN (LENGTH(vt0.c2)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))) HAVING ((vt0.c1) NOTNULL) COLLATE NOCASE; -- 0ms;
SELECT NULL FROM vt0, vt1 WHERE (CASE NULL  WHEN ((x'') IS TRUE) THEN ((NULL) BETWEEN ('-1732366516') AND (0.9509950320515483)) END); -- 0ms;
SELECT ALL (((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)) IN (1.487596975E9)) FROM vt1;SELECT ALL vt0.c2, CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c2))  WHEN load_extension(vt1.c0, vt0.c1) THEN vt0.c2 COLLATE NOCASE ELSE (vt0.c2 IN ()) END, ((NULL) NOTNULL) FROM vt0;SELECT DISTINCT LEAD(vt1.c0, (((vt1.c0) IS FALSE) IN ()), '950270357') OVER () FROM vt1 WHERE (((((x'') NOT BETWEEN (x'7be2') AND (x'')))<<((NULL IN (NULL, -417851519))))); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c2, 1256902471, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, vt1.c0)) AND ((vt0.c0, vt0.c2, vt1.c0)))))<=((((vt0.c2)LIKE(vt0.c2))))) FROM vt0 WHERE (CAST(NULL AS INTEGER) COLLATE NOCASE);SELECT DISTINCT COUNT(((vt0.c1) NOT NULL)) OVER (), (((((vt0.c2 IN ()))OR(CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c2 END)))AND(((vt0.c1)>(vt0.c2)))), (((((((vt0.c2))>((vt1.c0))))AND(HEX(DISTINCT vt0.c2))))OR(vt0.c1)) FROM vt0 FULL OUTER JOIN vt1 ON 'G4' WHERE (CASE NULL COLLATE RTRIM  WHEN (((0xffffffffcfe7f2d8))!=((NULL))) THEN 'P8' COLLATE BINARY WHEN CAST('湮F?*1' AS BLOB) THEN CASE WHEN 0.470345173855207 THEN NULL WHEN '1272081286' THEN x'' WHEN '0.5127606390535238' THEN 'GGAk⢀UT' END WHEN (('663369903') NOT BETWEEN ('1164381834') AND (x'')) THEN CASE WHEN x'' THEN x'' WHEN -130178849 THEN x'' WHEN 0.8270799226743671 THEN 0.8789481802941511 ELSE NULL END END); -- 0ms;
SELECT ALL json_array_length(GROUP_CONCAT(vt1.c0)) FROM vt1, vt0 WHERE (TRIM(DISTINCT TYPEOF(DISTINCT x''), ((x'') ISNULL))); -- 0ms;
SELECT DISTINCT LEAD(UPPER((NOT (vt0.c0))), GLOB(CAST(vt1.c0 AS BLOB), ((((NULL)AND(vt0.c1)))OR(vt0.c2))), ((0.21270193053815778)IS NOT(CASE vt1.c0  WHEN vt0.c2 THEN vt0.c2 END))) OVER (), CAST(SUBSTR(vt0.c0, vt1.c0) AS BLOB), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (x'') AND (((NULL)>(vt0.c1)))) FROM vt0, vt1 WHERE ((((x'', '-2039281976', 0.5756272247814428)) NOT BETWEEN (('0.0', ((1080837939) NOT NULL), ((((x'')OR(x'')))AND('>i')))) AND ((((0x35a2bd5a) IS FALSE), CASE NULL  WHEN NULL THEN 'PA?Y' WHEN 487892445 THEN 0.6257956855672528 WHEN NULL THEN 0.9307145591559314 END, 0.9736084027499908 COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT ((((vt0.c1))<((vt0.c1))) IN (((((((((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c1 END)), CASE (((('705297331')AND(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((((vt0.c2)AND(4.87892445E8)))AND(vt0.c1)) ELSE COUNT(vt1.c0) END, NULLIF(DISTINCT (vt0.c2 IN (vt0.c1, vt0.c2)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) FROM vt1 WHERE (((((0x0)AND(x'')))OR(0.04196962928650194)) COLLATE BINARY);SELECT CAST(AVG(vt0.c2) AS REAL) FROM vt1, vt0 ORDER BY '	iFt[/' ASC, (((vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, (((vt0.c1))<=((vt0.c2))), ((vt0.c2)/(vt1.c0)))) AND (((vt0.c2 IN ()), ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)), (vt1.c0 IN ())))) DESC; -- 0ms;
SELECT (((vt0.c1 IN (vt1.c0, vt0.c1)))AND((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt0.c2, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))))), ((('-51959605')) BETWEEN ((((vt1.c0)+(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c2))))), (((((vt0.c1) IS FALSE)))==((((NULL) NOT BETWEEN ('-1250036840') AND (vt0.c2))))), ((vt0.c2 COLLATE NOCASE)>=((vt1.c0 IN (vt0.c2)))), NULL FROM vt0, vt1 WHERE ((((('a伜5')*(0.2957724178395347))) BETWEEN (json_type(0.013446282278995692)) AND (CAST('146695245' AS TEXT)))); -- 0ms;
SELECT DISTINCT MIN(AVG(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)) FROM vt1, vt0 WHERE (json_quote((('0.8562275728899031') IS TRUE))) LIMIT -2106095873 OFFSET 605131047;SELECT ALL x'69e7', vt0.c2, COUNT(((((x'')AND(1040049274)))OR(vt0.c0))) FROM vt1 WHERE ((('e-.y%&>' COLLATE RTRIM)AND('')));SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((- (((0.2178951229339714) IS FALSE)))); -- 0ms;
SELECT (CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 END IN ()) FROM vt0, vt1 WHERE (((((((((((0.6921632479609149) BETWEEN (x'') AND (0.9813802261483172)))AND(COALESCE(0xffffffffdbc546be, 0.0880562136123263))))AND(CAST('h!+' AS TEXT))))AND(((x'')>('')))))AND(NULL COLLATE RTRIM))); -- 0ms;
SELECT LIKELY(DISTINCT 0.6770841706361981), CASE TRIM(vt0.c0)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN ((vt0.c0)!=(vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN vt0.c0 COLLATE BINARY THEN MIN(vt0.c2) ELSE ((vt0.c1)IS(vt0.c2)) END, (((vt0.c2)) NOT BETWEEN ((((vt0.c2) NOTNULL))) AND ((1.774555252E9 COLLATE RTRIM))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (~ (((vt1.c0)LIKE(vt0.c2)))), ((NULLIF(DISTINCT vt0.c2, vt1.c0))=(CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END)), ((((vt0.c1) ISNULL))>=(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c2)))) FROM vt1, vt0 WHERE (((((- (4.62736459E8))))>=((((0.03506541618296266)IS NOT(NULL)))))); -- 0ms;
SELECT (- (SUM(vt0.c0))), LOWER((+ (''))), COUNT(*) FROM vt0 WHERE (((x'')AND('')) COLLATE RTRIM); -- 0ms;
SELECT STRFTIME((vt0.c1 IN (vt0.c0)), ((((((((vt1.c0)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))OR(vt1.c0)), CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN '??ZQ' THEN vt0.c1 END, ((vt1.c0)|(vt0.c0)), '[&d	7') FROM vt0, vt1 WHERE (((((x'') NOT NULL)) NOT BETWEEN (CASE WHEN x'0e5a' THEN 0.738056140238918 WHEN 'm' THEN 'Xk[-YB\r' WHEN NULL THEN 1351670227 ELSE 1022849850 END) AND (NULL))) ORDER BY (~ (CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST, (((1003732200))>=((((vt0.c0) IS FALSE)))), vt0.c0; -- 1ms;
SELECT DISTINCT CASE UNLIKELY(DISTINCT vt0.c0)  WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN HEX(DISTINCT vt1.c0) END FROM vt0 WHERE ((UNICODE(0Xffffffffdcd8d282) IN ())) ORDER BY (((((((vt0.c1))<((vt0.c0))))AND(((vt0.c2) NOT NULL))))OR((+ (vt1.c0)))) DESC  NULLS FIRST;SELECT ALL MAX(((vt0.c2)>>(1.774555252E9))) FROM vt1 WHERE (ABS(DISTINCT NULL));SELECT DISTINCT vt0.c0, ((vt0.c1)-(vt0.c1)) COLLATE RTRIM, ((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(((NULL) NOTNULL))))AND(((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)))OR(((0xffffffff9df006aa) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1, vt0 GROUP BY (NOT (((0.07597068835157661)<<(vt1.c0)))) HAVING (~ (CAST(vt0.c0 AS TEXT))); -- 0ms;
SELECT COALESCE(DISTINCT vt1.c0, vt0.c0) COLLATE BINARY FROM vt1, vt0; -- 0ms;
SELECT DISTINCT RANK() OVER ( RANGE BETWEEN (((vt0.c1, vt1.c0, '765242470', vt0.c0, vt0.c0))<=((vt0.c2, vt0.c2, vt0.c1, vt0.c2, vt0.c2))) COLLATE BINARY PRECEDING AND ((vt0.c2 COLLATE BINARY)+(CAST(vt0.c2 AS INTEGER))) FOLLOWING) FROM vt0, vt1 LIMIT 209804548 OFFSET 589888771;SELECT COUNT(*) FROM vt1 WHERE (CAST(IFNULL('-419728347', '\r]lO?1\n\&') AS BLOB)) ORDER BY ((((((((vt0.c2)AND(vt0.c0)))AND(vt1.c0)))AND('0.47227111022103885')))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC, (CAST(vt0.c1 AS INTEGER) IN ()), (((~ (vt0.c1)))<=((~ (vt1.c0))))  NULLS LAST;SELECT DISTINCT (NOT (CAST(vt0.c1 AS BLOB))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt0.c2 IN ()) IN ()) FROM vt0 WHERE (LIKE(((x'') BETWEEN (x'6149') AND ('3')), ('' IN (NULL)))); -- 0ms;
SELECT ALL (+ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)))) FROM vt0, vt1 ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c2 IN ()) WHEN (vt0.c2 IN (vt0.c1)) THEN x'' WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 END, (((((vt0.c0))=((vt0.c1))))-(((vt0.c0)>>(vt1.c0))))  NULLS LAST; -- 1ms;
SELECT DISTINCT ((vt1.c0) IS TRUE) COLLATE BINARY, LEAD('	', vt0.c2, (((NOT (vt0.c2))) NOT BETWEEN (vt0.c2) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) OVER ( PARTITION BY UNLIKELY(DISTINCT ((((vt0.c2)AND(vt0.c0)))OR(vt1.c0))), (- (vt0.c2)) COLLATE NOCASE), LIKELIHOOD(DISTINCT (0.4061982555134308 IN (vt0.c0, vt0.c0)), 0.6764098732052831) FROM vt0 NOT INDEXED, vt1 GROUP BY json_array(vt0.c2, ((vt0.c1) NOTNULL)) HAVING (NOT (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))));SELECT DISTINCT CAST(vt0.c2 COLLATE NOCASE AS TEXT), (CASE WHEN vt0.c1 THEN vt0.c2 END IN ()), '', ((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)||(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))), UPPER(vt0.c1) FROM vt1, vt0 WHERE (((((x'') BETWEEN (x'') AND (0.7401747523793728)))!=(((x'01ae')<=(''))))); -- 0ms;
SELECT ALL (+ (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt1;SELECT ALL (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0.9696893255058341))) COLLATE NOCASE FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((vt0.c1)==(vt0.c2)) COLLATE RTRIM, GROUP_CONCAT(vt1.c0) FILTER(WHERE ((((((((('1697593075' IN ()))AND(CAST(vt0.c2 AS BLOB))))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN '754409946' WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt0.c1) IS FALSE))))OR((('G%|K2K2qW') NOTNULL)))) OVER (), vt0.c2 FROM vt0;SELECT (NOT (vt0.c0)) FROM vt1;SELECT ALL ((vt0.c2 COLLATE BINARY)LIKE(vt1.c0)), AVG(((vt0.c1)IS NOT(vt1.c0))) OVER (), (((vt0.c2) IS FALSE) IN ()) FROM vt0, vt1 WHERE (CAST(('<R' IN (0.49893567389700255, NULL)) AS INTEGER)); -- 0ms;
SELECT ALL TYPEOF(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) FROM vt0, vt1 WHERE (((((((((TRIM(DISTINCT NULL))OR((+ (x'')))))AND(((('0.20185982657739754')) NOT BETWEEN ((NULL)) AND ((NULL))))))OR(CASE '0.9134646300007289'  WHEN x'' THEN 0.34642891875061776 WHEN 0x58aaedaf THEN 0.5266386002150782 WHEN '299839508' THEN x'' END)))OR(((((((((NULL)OR(-1923237978)))AND(NULL)))AND(NULL)))AND(']\r'))))); -- 0ms;
SELECT DISTINCT ((vt1.c0 IN ()) IN ()) FROM vt0, vt1 WHERE ((((1.857797631E9)IS NOT(2136294866)) IN (((((0.8956050938144176)AND(0.7616117423502756)))OR(x'')), CASE WHEN -5.1959605E7 THEN 0xffffffffa0237906 WHEN x'' THEN '745861380' WHEN 1487596975 THEN NULL ELSE '\nbK	➦fAI' END))); -- 0ms;
SELECT DISTINCT (((((vt0.c2)AND(vt0.c0)))AND(vt1.c0)) IN ()) FROM vt0, vt1; -- 0ms;
SELECT ((CAST(vt0.c0 AS INTEGER)) BETWEEN (COUNT(*)) AND (x'')) FROM vt0, vt1 WHERE ((0.6984464744059578 IN ())); -- 0ms;
SELECT ((((CAST(vt0.c1 AS INTEGER))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 END)))AND(((NULL) BETWEEN (vt0.c2) AND (vt0.c1)))) FROM vt0 WHERE ((((('-260796610') NOT NULL)) BETWEEN (CAST(0.9296183261649796 AS REAL)) AND (CASE WHEN NULL THEN NULL ELSE '' END)));SELECT ALL ((vt0.c2 COLLATE RTRIM) NOT NULL) FROM vt1;SELECT DISTINCT ((vt0.c0) NOT NULL) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL ((x'') BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END) AND (((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)))), ((+ (vt0.c2)) IN ((((-241531078, vt1.c0, NULL))=((vt1.c0, vt1.c0, 0.44191217354401247))))), (- ((vt0.c1 IN ('1949714699')))) FROM vt0 WHERE (((0.8583123279600494)||(x'2034')) COLLATE RTRIM);SELECT ALL CASE WHEN vt0.c2 THEN ((((((((vt0.c1)AND(vt1.c0)))AND(-402617653)))AND(vt1.c0)))OR(vt0.c1)) ELSE ((vt0.c1) ISNULL) END FROM vt0, vt1 WHERE (0.6581289933327606); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (-1780088908); -- 0ms;
SELECT DISTINCT CAST(((vt0.c2)<(vt0.c1)) AS REAL) FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)<(vt1.c0)) COLLATE BINARY WHERE ((((((((0.8254799035711446, '', 155587414)) BETWEEN ((x'', NULL, x'')) AND ((5.27784173E8, '', '!2[wIS|R'))))OR((('茜SMRU8왖') IS TRUE))))OR('-260796610' COLLATE RTRIM))); -- 0ms;
SELECT ALL CUME_DIST() OVER (), (((vt0.c0)) NOT BETWEEN ((0.22778057472546798)) AND ((((vt0.c1)<=(vt0.c0))))), ((((vt0.c0)/(vt0.c1)))==((((((((('800240148')AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))), MAX(((vt0.c0) BETWEEN (x'') AND (vt1.c0))), (((~ (vt0.c2))) NOT BETWEEN (((vt0.c2) IS TRUE)) AND (IFNULL(0xffffffffaaf789d4, vt0.c0))) FROM vt0, vt1 WHERE (CAST(ABS('%0G') AS REAL)) ORDER BY json_extract(CAST(vt0.c0 AS TEXT), UPPER(vt0.c0)) DESC  NULLS FIRST LIMIT 397985389 OFFSET -596823122; -- 0ms;
SELECT DISTINCT (((NULL, vt0.c1, vt1.c0)) NOT BETWEEN ((((vt1.c0)>=(vt1.c0)), vt0.c2 COLLATE NOCASE, (vt0.c0 IN ()))) AND ((vt0.c2 COLLATE NOCASE, GROUP_CONCAT(0Xfffffffff9e00f15), '{o)BXC#'))) FROM vt1 WHERE (((((x'') NOT BETWEEN ('-201141058') AND ('-334479295')))<=(CASE WHEN 0.1315774761416818 THEN '(FfJ0*' WHEN x'' THEN 'p{H0th' WHEN NULL THEN x'' ELSE x'' END)));SELECT ((((((((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c1) NOT NULL))))AND(MAX(vt0.c2))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt0.c2) IS TRUE))) FROM vt1, vt0 WHERE (json_extract(CASE 0.31195932239808044  WHEN 0.7523457603319939 THEN 0.46765459464236836 ELSE '1182969748' END, (('') BETWEEN (2.147408704E9) AND (NULL)))); -- 0ms;
SELECT DISTINCT 'HP' FROM vt1 WHERE ((NOT (((('-1133346959')) NOT BETWEEN ((NULL)) AND ((x'548f')))))); -- 0ms;
SELECT ALL (((vt0.c1)) NOT BETWEEN ((((vt0.c2) NOT NULL))) AND ((((((((((vt0.c2)AND(vt0.c2)))OR(vt1.c0)))AND(vt0.c2)))AND(vt0.c1))))) FROM vt0, vt1 LIMIT -2142407330; -- 0ms;
SELECT DISTINCT SUM(CAST(vt0.c0 AS REAL)) OVER () FROM vt0, vt1 WHERE (((((x'')GLOB('-1115385968'))) IS TRUE)); -- 0ms;
SELECT DISTINCT vt0.c2 COLLATE RTRIM FROM vt0, vt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((((((((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))AND(((vt0.c0)GLOB(vt0.c1)))))AND(vt0.c0 COLLATE NOCASE)))OR((vt0.c1 IN ()))))AND(vt1.c0 COLLATE NOCASE)))AND(load_extension(vt1.c0))))OR(CAST(vt1.c0 AS TEXT))) FROM vt1;SELECT DISTINCT CAST((x'fdf7' IN ()) AS BLOB) FROM vt1, vt0; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) AND ((vt1.c0 IN (vt0.c2)))), (((~ (vt0.c2)))OR(vt0.c1 COLLATE RTRIM)), json_array_length(COUNT(vt1.c0), ((vt1.c0) NOTNULL)) FROM vt0, vt1;SELECT ALL RANK() OVER (), TOTAL(CAST(vt0.c2 AS INTEGER)) OVER ( PARTITION BY ((SQLITE_COMPILEOPTION_USED(vt0.c0))||(vt0.c0)), CAST('()' AS REAL)), ((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END) IS TRUE) FROM vt1, vt0 WHERE ((((((NULL))==((x'80fd'))))>=(CASE '1051448307'  WHEN 5.27784173E8 THEN x'' END))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((vt0.c1) NOTNULL))) AND ((((vt0.c0)>(vt0.c1))))) FROM vt0, vt1 GROUP BY ((((vt0.c1)AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c1)>=(vt0.c1)))) HAVING MAX((vt0.c0 IN ()), vt0.c2, AVG('-260796610'), ((vt0.c0) ISNULL), (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt0.c2))), ((((vt0.c0)OR(vt0.c2)))AND(vt1.c0)), ((vt0.c0)GLOB(vt1.c0)), TOTAL(vt0.c1)); -- 1ms;
SELECT CASE WHEN ((((vt0.c0)OR(vt0.c2)))AND(vt0.c2)) THEN ((vt0.c0) NOTNULL) ELSE ((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)) END, SUM(((vt1.c0)IS NOT(vt0.c1))), ((((((((((vt0.c2)AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(0.28015967253293494))) NOT NULL) FROM vt1 WHERE ((((((x'')AND(x'841d')))AND(NULL)) IN (((((x'')AND('')))AND(x'ce98'))))) LIMIT -179093038;SELECT DISTINCT CASE vt0.c2  WHEN ((0.7108195254651818)<<(vt0.c0)) THEN ABS(vt1.c0) ELSE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) END, vt0.c2, TYPEOF(((vt0.c0) NOT NULL)) FROM vt1 WHERE ((((((('Ḣl>u') BETWEEN (0.19762515271839476) AND (0.4194754354422906)))AND((((x'', x'', NULL)) NOT BETWEEN ((NULL, NULL, '0.42141199433039833')) AND ((0.10401845089064221, 'k1yAu', x''))))))OR(((((NULL)OR(0x11fdce6b)))OR(NULL)))));SELECT ALL ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))>(vt1.c0)) FROM vt1, vt0; -- 0ms;
SELECT ALL CAST(vt0.c0 COLLATE RTRIM AS NUMERIC) FROM vt1, vt0; -- 0ms;
SELECT ALL ((vt0.c2 COLLATE BINARY) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(((vt0.c0)>=(vt0.c1))) FROM vt1, vt0 WHERE ((CAST('' AS INTEGER) IN ())); -- 0ms;
SELECT DISTINCT '-1316265088', (~ (((vt1.c0)&(vt0.c0)))), AVG((- (NULL))) FROM vt1 LIMIT 1106361663;SELECT ((((vt0.c1)AND(vt0.c1)))OR(vt0.c2)) COLLATE BINARY, ((((((((((vt0.c1)<>(vt0.c1)))OR(vt0.c2)))AND(0.8554966347080456)))OR(vt0.c1 COLLATE BINARY)))AND(((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))), (((vt0.c2 COLLATE RTRIM))<>(((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2)))))) FROM vt1 WHERE ((((('0.0')OR(0.18227655144916588)))AND(239133097)) COLLATE NOCASE) GROUP BY CAST(((vt0.c0) IS FALSE) AS TEXT), PRINTF((((vt0.c0))>=((vt0.c2)))), (~ (CAST(vt0.c1 AS NUMERIC))) HAVING (('-110755243') NOT BETWEEN (0.1834165301568207) AND (0.6177789851632787));SELECT ((((vt0.c2)GLOB(vt0.c2))) IS TRUE) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT LOWER((((vt0.c2))<((vt0.c2)))) FROM vt0 WHERE (((((((NULL) IS TRUE))AND(LOWER(DISTINCT NULL))))OR((((('-1383307924')AND(0.05708497112540989)))OR(-2112773054))))); -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE NOCASE)LIKE(((vt0.c0)LIKE(vt0.c1)))), ((((vt0.c1)&(vt1.c0)))GLOB(CAST(vt0.c1 AS TEXT))), MAX(((vt0.c0)IS(vt0.c1))) FROM vt1, vt0; -- 0ms;
SELECT CAST((vt0.c1 IN ()) AS INTEGER), ((vt0.c1) NOT NULL), CAST(x'' AS REAL) COLLATE RTRIM FROM vt0 WHERE ((0.7376582216547589 IN ((~ (0.8562275728899031))))); -- 0ms;
SELECT ALL CAST(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) AS NUMERIC) FROM vt0, vt1 WHERE (((((0.832936864252037 COLLATE NOCASE)AND(((0.40515650835940986)OR(0x69ef95ad)))))OR(NULL))); -- 0ms;
SELECT DISTINCT ((((NOT (vt1.c0))))>((CASE WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0, vt1 WHERE (((((((125299556)IS NOT(NULL)))AND(((NULL)<>(0.948691934733436)))))OR(((NULL)>>('-593705724'))))); -- 0ms;
SELECT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY COLLATE RTRIM FROM vt1, vt0 LIMIT -215952160; -- 0ms;
SELECT DISTINCT PRINTF(ABS(DISTINCT vt1.c0)) FROM vt0 WHERE ((((('V-_!' COLLATE BINARY)OR((((0.7321940178196444))==((0xffffffff90a300b4))))))OR(CASE WHEN -341339499 THEN '-309384792' WHEN 0Xffffffffb0519096 THEN '1272497204' WHEN '[*#NB''G' THEN NULL ELSE '\rb|' END)));SELECT DISTINCT ((((vt0.c1)AND(vt0.c1))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (COUNT(*))), SUM(((vt0.c1) ISNULL)) OVER (), (((vt0.c1)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((MIN(vt0.c0)))) FROM vt0 WHERE ('') LIMIT -624242760 OFFSET -1166484790; -- 0ms;
SELECT DISTINCT CAST(((vt0.c2) BETWEEN (vt0.c2) AND (vt1.c0)) AS BLOB), ((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)) COLLATE BINARY, vt0.c2 FROM vt1, vt0 WHERE (((NULLIF(DISTINCT '', 0.11513272657265372)) BETWEEN ((((''))>((0.21588031651788187)))) AND (x'183e'))); -- 0ms;
SELECT ((COUNT(vt1.c0)) NOTNULL) FROM vt0 WHERE (((CASE WHEN 1.487596975E9 THEN '' ELSE NULL END) IS FALSE));SELECT DISTINCT (((vt0.c1) IS TRUE) IN ()) FROM vt1, vt0; -- 0ms;
SELECT ALL '1997383167' FROM vt0, vt1; -- 0ms;
SELECT vt0.c2 COLLATE RTRIM FROM vt1;SELECT DISTINCT (NOT ((vt1.c0 IN (NULL)))) FROM vt0;SELECT (- ((((vt0.c1))>=((vt1.c0))))) FROM vt1 GROUP BY ((((((vt0.c0)AND(vt0.c2)))AND(vt1.c0))) ISNULL) HAVING ((((vt0.c0) ISNULL))/(CAST(x'9afd' AS TEXT)));SELECT DISTINCT CAST(UNLIKELY(vt1.c0) AS REAL), (~ (((vt0.c1) BETWEEN (vt0.c1) AND ('-711629680')))), ((CAST('0' AS INTEGER)) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))) FROM vt0, vt1 WHERE (CAST((~ (0.5267495905145526)) AS NUMERIC)); -- 0ms;
SELECT ALL 0.11975075197579366 FROM vt1 WHERE (CAST((('') NOT BETWEEN (x'') AND ('2041921350')) AS TEXT)) GROUP BY (~ (((vt1.c0)>>('0.17231931689019286')))); -- 0ms;
