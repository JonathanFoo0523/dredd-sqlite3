-- Time: 2024/06/06 01:04:10
-- Database: database21
-- Database version: 3.40.0
-- seed value: 3276491621
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
CREATE TABLE t1 (c0 TEXT ); -- 0ms;
UPDATE OR IGNORE t1 SET c0=35084187 WHERE t1.c0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('8ⲋW8f'); -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '54092'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.stats; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (''), (0xffffffffa61cd025), (',V?6-'); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0Xffffffffbd45c0a0); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
UPDATE OR ROLLBACK t0 SET (c0)=(0xffffffffa7797348); -- 1ms;
PRAGMA temp.recursive_triggers; -- 1ms;
INSERT OR IGNORE INTO t1 VALUES (NULL); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c58 TEXT; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0x217579b WHERE ((((t0.c0) ISNULL)) IS FALSE); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27691'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE t1 SET c0=''; -- 1ms;
PRAGMA main.short_column_names = true; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.5415949110685625), (x'567b'), (35084187); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c19 REAL; -- 0ms;
REINDEX BINARY; -- 0ms;
REINDEX; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('0.5415949110685625'); -- 0ms;
CREATE UNIQUE INDEX i79 ON t0(NULL ASC) WHERE CAST(NULL AS REAL); -- 1ms;
INSERT OR IGNORE INTO t1(c58, c0) VALUES ('934379', NULL), ('', 0.36719196891575845), (0.36719196891575845, 0.11548749734423092); -- 0ms;
PRAGMA temp.cache_spill = -1166593292778457525; -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE t1 SET (c58)=('BH') WHERE CAST(((((t1.c0)OR(t1.c58)))AND(t1.c58)) AS BLOB); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=('') WHERE ((CAST(t0.c0 AS TEXT)) IS TRUE); -- 1ms;
UPDATE OR FAIL t1 SET (c0)=('') WHERE CAST(CHANGES() AS TEXT); -- 1ms;
UPDATE OR FAIL vt0 SET c0=0.6834964631797876 WHERE (+ (json_extract(vt0.c0, vt0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.0850505752403703 WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (3.5084187E7)))AND(((t0.c0)<(t0.c0)))))OR(((t0.c0)*(t0.c0)))); -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=(x'', 0X25eb9402); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (''); -- 0ms;
REINDEX; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
UPDATE OR IGNORE t1 SET c58=0X704ad2a9, c0=NULL; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE t1 SET c0=-1119502176 WHERE ((t1.c58 COLLATE RTRIM)AND(t1.c19)); -- 0ms;
UPDATE OR IGNORE t0 SET c0='1883951785'; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1508061147'); -- 1ms;
INSERT OR IGNORE INTO t1(c19, c58, c0) VALUES (NULL, 0.5415949110685625, '1883951785'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (6.36195842E8), ('-1485212856'), (0.36719196891575845); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER UPDATE ON t0 BEGIN UPDATE OR IGNORE t0 SET (c0)=('') WHERE t0.c0;INSERT OR FAIL INTO t0(c0) VALUES ('z%mc&]'), (x'e93f'), (NULL);END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('636195842'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (6.36195842E8); -- 0ms;
INSERT OR IGNORE INTO t1(c58, c0, c19) VALUES ('-1485212856', 'TRUE', NULL); -- 3ms;
PRAGMA temp.threads; -- 0ms;
DROP INDEX IF EXISTS "i79"; -- 0ms;
DELETE FROM t0 WHERE ('-1977865077' IN ()); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i49 ON t1(highlight(COALESCE(c19, c0), ((((c19)OR(x'6b1a')))OR(c58)), c0, (((c19)) NOT BETWEEN ((c0)) AND ((c0)))) COLLATE RTRIM,UPPER(((c58)GLOB(c58))) COLLATE NOCASE ASC,(NOT (c19 COLLATE BINARY))); -- 0ms;
CREATE UNIQUE INDEX i29 ON t1((((NOT (c58)))>(((c19)>>(c19)))) COLLATE NOCASE DESC,(((c0 IN ()))+((NOT (c58)))),c19 COLLATE RTRIM DESC) WHERE (((c58 IN ())) NOT BETWEEN (((c19)&(c0))) AND (((c0) IS FALSE))); -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
UPDATE OR IGNORE t1 SET (c58)=(0.11548749734423092) WHERE ((('1679702281', t1.c0, t1.c58)) BETWEEN ((((t1.c58)|(t1.c19)), (((t1.c19, t1.c19, t1.c58))=((t1.c19, '1883951785', t1.c0))), ((((t1.c0)OR(t1.c0)))AND('934379')))) AND ((CAST(t1.c19 AS REAL), CAST(t1.c0 AS TEXT), (t1.c19 IN ())))); -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c59; -- 1ms;
CREATE UNIQUE INDEX i72 ON t1(((CASE WHEN c58 THEN c19 WHEN c58 THEN c19 WHEN c19 THEN c19 ELSE c19 END) ISNULL) DESC,c58 COLLATE NOCASE ASC,((x'2f17') BETWEEN (JULIANDAY(0.4710169687960176, c19, c0)) AND (((c58) IS FALSE)))); -- 1ms;
CREATE INDEX IF NOT EXISTS i64 ON t1(((((c19) BETWEEN (c58) AND (c0))) IS FALSE) COLLATE NOCASE ASC,((((c0) NOT BETWEEN (c19) AND (c19))) ISNULL) DESC,CAST(((c0)>>(c0)) AS BLOB) ASC) WHERE HEX(DISTINCT LIKELY(DISTINCT c58)); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
UPDATE t0 SET c59=0.3080783015682549 WHERE CASE ((t0.c59)AND(t0.c59))  WHEN t0.c59 COLLATE BINARY THEN ((t0.c59) NOT NULL) END; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
UPDATE t1 SET (c58)=('1z') WHERE ((((((((((t1.c19)/(t1.c58)))OR((((t1.c19, t1.c19, t1.c58))=((t1.c0, t1.c0, t1.c58))))))OR(CAST(t1.c58 AS NUMERIC))))AND(((t1.c19) IS TRUE))))OR(t1.c19)); -- 0ms;
ANALYZE main; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT OR IGNORE INTO t1(c19) VALUES (0.23778394295357252); -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t1 SET c0='-1485212856' WHERE ((((0.19150717429466002)OR(CAST(t1.c58 AS BLOB))))AND(CASE t1.c19  WHEN t1.c0 THEN t1.c58 END)); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(x''); -- 0ms;
REINDEX  t0; -- 0ms;
INSERT OR IGNORE INTO t1(c0, c19) VALUES ('x4]q8G(彋)', '1398594625'); -- 0ms;
PRAGMA temp.foreign_keys; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'ef4a'); -- 1ms;
INSERT OR IGNORE INTO t0(c59) VALUES ('z%mc&]'), (NULL), (CASE WHEN ((x'')/(-1.485212856E9)) THEN ((NULL)>=(0Xfffffffff9a47c75)) WHEN ((x'') ISNULL) THEN CASE WHEN 'M' THEN NULL WHEN '&?' THEN '-1119502176' WHEN x'' THEN '&?' ELSE 0.23778394295357252 END WHEN ((NULL) NOT NULL) THEN (((0xfffffffffb6e5f4b, '->G%		dxk', 0x641e3909))<((NULL, '-106660747', 0x5cbf30d))) ELSE CAST(0.13930657094484356 AS NUMERIC) END); -- 0ms;
UPDATE t1 SET c58='I*EWCa' WHERE (((~ (t1.c19)))!=((~ (t1.c58)))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.14085730923601858 WHERE '8ⲋW8h'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0.1465040133126423, 0.6868393598472977, NULL), (x'', 9.7252109E7, 0.35017180504241663), (NULL, '0.6834964631797876', 934379.0); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT HEX(MIN(t1.c19)) FROM t0, vt0, t1 WHERE (CAST(((NULL)|(x'2398')) AS TEXT)) LIMIT 826557843; -- 0ms;
SELECT (((t1.c19))<((NULL))) COLLATE RTRIM FROM vt0;SELECT ALL AVG((+ (vt0.c0))) FROM t1, vt0 ORDER BY ((CASE t1.c58  WHEN t1.c0 THEN t1.c19 END) BETWEEN (((vt0.c0)>=(t1.c58))) AND (ABS(t1.c0))) DESC, LIKELY(((((vt0.c0)AND(vt0.c0)))AND(0.4958356896528817))) ASC  NULLS LAST; -- 2ms;
SELECT DISTINCT DATE(((t1.c19) BETWEEN (t1.c19) AND (t1.c19)), CASE WHEN t1.c58 THEN t1.c19 ELSE vt0.c0 END, t1.c58) FROM t1;SELECT DISTINCT (((t1.c19)GLOB(t0.c59)) IN ()) FROM t0, vt0, t1 WHERE (CASE WHEN ((x'4ed8')>>(NULL)) THEN CAST(0.6868393598472977 AS BLOB) END) LIMIT -1508061147 OFFSET 284041499; -- 0ms;
SELECT ALL ((((AVG(vt0.c0))OR(((t0.c59)OR(t1.c0)))))OR(((t0.c59) IS FALSE))), LAG(x'0706', STRFTIME(((t1.c58) ISNULL), ((vt0.c0) BETWEEN (t1.c19) AND (vt0.c0)), CAST(t1.c0 AS TEXT), (t1.c0 IN ()), t1.c58 COLLATE NOCASE), (((t1.c19)>>(t1.c58)) IN ())) OVER (), (NOT (MAX(t0.c59))), (((t0.c59, t1.c19, t0.c59)) NOT BETWEEN ((CASE WHEN '-1119502176' THEN t1.c58 ELSE 0.8067579249800287 END, ((t0.c59) IS TRUE), IFNULL(DISTINCT '-1485212856', vt0.c0))) AND ((((t1.c0)<<(t1.c19)), ((t1.c0) IS FALSE), t1.c58 COLLATE BINARY))), (~ ((+ (t0.c59)))) FROM t1, vt0;SELECT GROUP_CONCAT(LIKELY(DISTINCT vt0.c0)) FROM t1, t0, vt0 WHERE ((((0.6136512974542252)) BETWEEN ((((NULL) NOT BETWEEN ('') AND (284041499)))) AND ((LOWER(x''))))); -- 0ms;
SELECT TYPEOF((((t1.c58)) BETWEEN ((t1.c58)) AND ((t1.c0)))) FROM t1 WHERE (((((NULL) NOT BETWEEN (x'') AND ('-2089514511')))&(CAST(NULL AS INTEGER)))) GROUP BY ((TRIM(DISTINCT t0.c59))<=(t1.c0 COLLATE RTRIM)), CAST(t1.c58 AS NUMERIC), (CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c19 THEN t1.c58 WHEN t1.c19 THEN t1.c58 ELSE vt0.c0 END IN ((NULL IN ()))) HAVING ((((t1.c0, vt0.c0, t1.c19))<>((NULL, t1.c19, t1.c0))) IN (((t1.c58) IS FALSE), ((('0.4958356896528817', vt0.c0, t1.c58))<>((t0.c59, 8.26557843E8, vt0.c0)))));SELECT DISTINCT ((((((t1.c19)OR(t1.c58)))AND(t0.c59)))&('!8')), ((((t1.c58)<(t1.c0))) IS FALSE), ((CASE vt0.c0  WHEN 'dnT ,\nE' THEN 0.6834964631797876 WHEN t1.c58 THEN vt0.c0 WHEN 'y?垓Y{' THEN t1.c0 ELSE t1.c19 END)LIKE(-376841921)) FROM vt0, t1;SELECT DISTINCT t1.c58, GROUP_CONCAT((((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c19)))) OVER (), (- (((((((((t0.c59)AND(t1.c19)))OR(t0.c59)))OR(t1.c19)))OR(t0.c59)))) FROM t0, t1, vt0 WHERE ((((0.11548749734423092)) BETWEEN (((NOT (NULL)))) AND ((35084187)))); -- 0ms;
SELECT DISTINCT ((((((((CAST(vt0.c0 AS REAL))OR((- (0.11692842818237159)))))AND((('-2093277079')>=(t1.c0)))))AND(CASE WHEN t0.c59 THEN t1.c58 ELSE t1.c0 END)))AND(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c58)))) FROM vt0;SELECT DISTINCT x'' FROM t1 WHERE (0.03504718517843319) ORDER BY t1.c58 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((t1.c0 COLLATE RTRIM)<=(((vt0.c0)>=(vt0.c0)))) FROM t1, t0 GROUP BY ((vt0.c0)AND(NULL)) COLLATE BINARY COLLATE BINARY;SELECT ALL '0.14085730923601858' FROM vt0; -- 0ms;
SELECT ALL NTILE(CASE CASE WHEN -7.6652725E7 THEN t0.c59 END  WHEN 0X729d1d77 COLLATE NOCASE THEN ((t1.c19)<>(t0.c59)) END) OVER () FROM t1, t0 WHERE (CAST(((x'd016142b')<<('1679702281')) AS BLOB)); -- 0ms;
SELECT t0.c59 COLLATE NOCASE FROM vt0, t0; -- 1ms;
SELECT GLOB(t1.c0 COLLATE NOCASE, CAST(t1.c0 AS INTEGER)) FROM vt0, t0, t1; -- 0ms;
SELECT LAG(CASE WHEN t0.c59 THEN t0.c59 ELSE t0.c59 END COLLATE RTRIM, (NOT (0.7430450354089629)), CAST(CAST(t0.c59 AS REAL) AS BLOB)) OVER ( ROWS  CURRENT ROW), COUNT(((t1.c19) NOT BETWEEN (t1.c58) AND (t1.c0))) OVER (), ((t1.c58)%(t1.c58)) FROM t0 WHERE (((0.025605058793683022 COLLATE BINARY) NOT BETWEEN (((NULL) NOT BETWEEN ('YsS|w*LQ') AND ('-1704825288'))) AND ((+ ('')))));SELECT (((t1.c19)) NOT BETWEEN (((NOT (t1.c19)))) AND ((((t0.c59) BETWEEN (0.25022375566878685) AND (t0.c59))))) FROM t0, t1 WHERE (CASE WHEN ((NULL)<('StnEeS䇫H')) THEN CAST(1.7976931348623157E308 AS REAL) WHEN ((('2112273560')) NOT BETWEEN ((NULL)) AND ((0.0))) THEN (((('856754875')AND(1e500)))AND(x'')) WHEN ((((-1493722052)OR('52')))OR('V*n/^')) THEN NULL COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT ((((t1.c19)IS(t0.c59))) BETWEEN (((t1.c0)==(t1.c19))) AND (t1.c0 COLLATE BINARY)) FROM t0 WHERE ((((ABS('')))<((x'')))) GROUP BY CASE WHEN CASE WHEN t1.c58 THEN vt0.c0 ELSE t0.c59 END THEN CASE WHEN t1.c0 THEN t1.c58 ELSE t1.c0 END WHEN CAST(vt0.c0 AS TEXT) THEN CAST(t0.c59 AS INTEGER) WHEN ((vt0.c0)%(t1.c58)) THEN ((t1.c0)IS(t1.c58)) ELSE ((vt0.c0)&(vt0.c0)) END, ((t0.c59)<<(CAST(t1.c19 AS NUMERIC))), RTRIM(t0.c59) COLLATE NOCASE;SELECT DISTINCT AVG((+ (t1.c0))) FROM t1; -- 0ms;
SELECT ALL ((COUNT(t1.c0))==(t0.c59 COLLATE BINARY)), ((((t0.c59) IS FALSE)) BETWEEN (-2141825770) AND (t1.c19 COLLATE BINARY)), ((((t1.c58 IN (0.7804535024276826, t0.c59)), CAST(t1.c19 AS NUMERIC), ((t1.c58)AND(t0.c59))))<((((t1.c58)>>(vt0.c0)), 1121970, ((vt0.c0) NOTNULL)))) FROM vt0, t1;SELECT DISTINCT CASE CAST(vt0.c0 AS TEXT)  WHEN ((vt0.c0)AND(x'')) THEN ((t1.c58) BETWEEN (t1.c58) AND (t1.c19)) END, t1.c0, (- (((t0.c59) NOT BETWEEN (vt0.c0) AND (t1.c58)))) FROM vt0, t1;SELECT (((TIME(t1.c0, t1.c19, vt0.c0), ((t1.c0)<(t1.c58)), ((t1.c58)%(''))))<=((((t0.c59) NOT BETWEEN (t1.c0) AND (vt0.c0)), MAX(0.40901348365450696), ((vt0.c0) IS TRUE)))) FROM t0, vt0 WHERE ((((NULL, '', 2.11227356E9)) BETWEEN (((((NULL)) BETWEEN ((0x28b703e9)) AND (('-1508061147'))), CASE WHEN NULL THEN 0.5203547087835585 WHEN '-1704825288' THEN NULL WHEN 3.5084187E7 THEN 0.4875035473831243 ELSE '' END, (~ (0.15560717734381757)))) AND (((((NULL, '', x'', x'', 0.44112079854992736))<(('-1585943375', NULL, x'ff91', -1466057006, x''))), CASE WHEN '934379' THEN x'' WHEN NULL THEN 0.5907393935439104 WHEN NULL THEN 'y7glP' END, (NOT ('dnT ,\nE')))))) GROUP BY (NOT ((((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((vt0.c0))))) HAVING CAST(t1.c58 AS BLOB);SELECT DISTINCT t1.c58 FROM t0, vt0, t1; -- 0ms;
SELECT CAST(((vt0.c0)||(t1.c19)) AS REAL), COUNT(*) OVER (), (((vt0.c0)) BETWEEN (('-106660747')) AND ((TOTAL(vt0.c0)))) FROM t1, vt0, t0 LIMIT -1097439950; -- 1ms;
SELECT DISTINCT t1.c0 FROM t1, t0, vt0 WHERE (ROUND(NULL COLLATE RTRIM, (('')AND(0Xffffffffeaf9aa76)))); -- 0ms;
SELECT DISTINCT (- ((((t1.c0, t1.c58, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t1.c58)) AND ((t1.c58, NULL, NULL))))) FROM t0, t1, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((CHAR(t1.c0, '-1493722052', '', t1.c0, t1.c58)) NOTNULL) FROM t1 WHERE ('}tG鰁^C'); -- 0ms;
SELECT ALL t1.c0 FROM t1 WHERE (CAST(x'' COLLATE NOCASE AS INTEGER)) LIMIT -329409883; -- 0ms;
SELECT (((((t0.c59 IN ()))OR((t1.c0 IN ()))))OR((((vt0.c0))<=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL NTILE(NULL) OVER () FROM t1 WHERE (LIKELY(DISTINCT (('-376841921')IS NOT(x'')))) ORDER BY ((((((((x'')OR(vt0.c0)))OR(t1.c0)))AND(t1.c19)))OR(t1.c0)) COLLATE RTRIM DESC;SELECT ALL ((vt0.c0 COLLATE BINARY)&(TIME(t1.c58, vt0.c0, t1.c0))), (NOT (HEX(t0.c59))), NTH_VALUE(t1.c58, -1.06660747E8) OVER () FROM t1 WHERE ((((('躲R')>>('0.5203547087835585')))/(CAST(x'7e98' AS NUMERIC)))) ORDER BY (t1.c0 IN (t0.c59, vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, CASE WHEN (NOT (t1.c19)) THEN ((((t1.c0)OR(vt0.c0)))OR(t0.c59)) WHEN ((vt0.c0) NOT BETWEEN (t0.c59) AND (t0.c59)) THEN ((t1.c19) IS TRUE) WHEN (((1.398594625E9, t1.c0, t1.c58))<((t1.c58, t1.c19, 0Xffffffffa1786cb1))) THEN ((t0.c59)GLOB(t1.c0)) WHEN ((t1.c19) BETWEEN (t1.c0) AND (t1.c19)) THEN x'' WHEN CASE WHEN t1.c19 THEN t1.c0 ELSE t0.c59 END THEN (t0.c59 IN ()) ELSE ((t1.c58)<<(t1.c19)) END, t0.c59  NULLS FIRST;SELECT DISTINCT ((t1.c0)%(CAST(t1.c0 AS BLOB))), ((((NULL)GLOB(t1.c19)))GLOB(((t1.c58)LIKE(t1.c19)))), (((CAST(vt0.c0 AS REAL), AVG(t1.c0), CASE WHEN t1.c19 THEN t1.c0 ELSE t1.c0 END))<=((UPPER(t1.c58), t0.c59, t1.c0 COLLATE BINARY))) FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN (('欮j') BETWEEN (-1.06660747E8) AND ('-1585943375')) THEN CASE WHEN 0xffffffffc0fcfeed THEN 6.36195842E8 ELSE x'c2ea' END WHEN (('0鰼YNq(	86') IS TRUE) THEN (('-977230548') ISNULL) WHEN CASE WHEN NULL THEN NULL WHEN NULL THEN NULL WHEN '[n' THEN NULL END THEN ((NULL) NOT NULL) ELSE (+ (0.19150717429466002)) END);SELECT DISTINCT COUNT(*) OVER () FROM vt0, t0 INDEXED BY i29 WHERE (((NOT (0xffffffffe28c9c01)) IN ()));SELECT DISTINCT (((vt0.c0) NOTNULL) IN ()) FROM vt0, t0; -- 1ms;
SELECT (t1.c19 IN (vt0.c0)) COLLATE BINARY FROM t1 GROUP BY ((((t0.c59) IS TRUE)) ISNULL);SELECT DISTINCT LAST_VALUE(CASE (((t1.c19))>=((t1.c0)))  WHEN ((NULL) BETWEEN (t1.c19) AND ('MWD懻Y')) THEN ((t1.c0) BETWEEN (t1.c58) AND (t1.c19)) ELSE ((((t1.c0)AND(t1.c19)))AND(t1.c0)) END) OVER () FROM t1 GROUP BY (((t1.c19) ISNULL) IN ()) HAVING (((t0.c59 IN (t1.c0)))OR((t1.c0 IN ()))) ORDER BY ((CASE WHEN t1.c58 THEN t1.c0 ELSE t1.c58 END) ISNULL) DESC, (((- (t0.c59)))GLOB(((t1.c19) BETWEEN (0.9729740729280797) AND (vt0.c0))));SELECT ALL CASE WHEN '!e삠f*LYJ' COLLATE BINARY THEN ((t1.c0) BETWEEN (t1.c58) AND (t1.c0)) WHEN (((t1.c58))!=((t1.c58))) THEN ((vt0.c0)<<(t1.c58)) WHEN MAX(t0.c59) THEN ((t1.c19)+(t1.c58)) END FROM vt0;SELECT 0.3875986307637922 FROM vt0, t0 WHERE ((((0.24068979629098886)) BETWEEN ((('-1936791947' IN ()))) AND ((CASE '-329409883'  WHEN 2112273560 THEN 'W*Pcv-8' WHEN '33935197' THEN '934379' WHEN '|' THEN '532892908' END)))) ORDER BY CAST((((vt0.c0)) BETWEEN ((t1.c58)) AND ((vt0.c0))) AS TEXT)  NULLS LAST;SELECT DISTINCT ((((t1.c58) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (TYPEOF(vt0.c0)) AND ('')), ((((t0.c59) NOT BETWEEN (t1.c0) AND (t1.c58)))LIKE(((t0.c59)OR(t0.c59)))), ((((vt0.c0)<<(vt0.c0))) BETWEEN (0.9563626933572654) AND ((~ (t1.c0)))) FROM vt0, t0;SELECT DISTINCT ((((CASE WHEN t1.c0 THEN vt0.c0 END)AND(NULL)))OR(((('341026134'))>((t1.c19))))) FROM t1 WHERE ((((NULL)) NOT BETWEEN (((('') IS TRUE))) AND (((NOT ('-1485212856'))))));SELECT CAST(((t0.c59)/(t1.c0)) AS INTEGER), (- ((((t1.c19, x'', t1.c19)) BETWEEN ((vt0.c0, '-1235651422', t1.c0)) AND ((t1.c19, '', t1.c58))))), CASE (((''))<((0.5554265723421946)))  WHEN ((t0.c59) IS TRUE) THEN ((t1.c19)|(t1.c19)) WHEN CASE WHEN NULL THEN t1.c58 END THEN CASE WHEN vt0.c0 THEN 'kfGO' ELSE t1.c58 END WHEN x'' THEN MAX(vt0.c0) END, SUM((+ (t1.c19))) OVER (), ((t1.c58 COLLATE NOCASE)<(((vt0.c0)<(t1.c58)))) FROM t1, t0, vt0 WHERE (TRIM(CASE ' i'  WHEN 0.9563626933572654 THEN 'gX/Z' END, CASE WHEN NULL THEN 0Xffffffffc5c0a52c WHEN 0.45863620941995076 THEN 0.2247877214029349 WHEN '}4IA' THEN 0.4559482133548426 WHEN '' THEN '' WHEN NULL THEN x'0100' END)); -- 0ms;
SELECT ((((t1.c58)>=(vt0.c0))) IS FALSE) FROM t0 WHERE (((LOWER(0.9544872278662444))GLOB((418619246 IN ()))));SELECT DISTINCT ((((t1.c19) ISNULL))LIKE((((t1.c0))!=((vt0.c0))))), CAST(t1.c19 AS TEXT) COLLATE RTRIM, (((t1.c58) IS TRUE) IN ()) FROM vt0, t0, t1; -- 0ms;
SELECT ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c58)) COLLATE BINARY, AVG(((vt0.c0) ISNULL)) OVER (), ((t0.c59 COLLATE NOCASE) ISNULL), SUM(((((((((t1.c0)OR(t0.c59)))OR(t1.c0)))AND(-322175438)))AND(t1.c58)) COLLATE NOCASE), ((CASE WHEN t1.c0 THEN t1.c58 WHEN t0.c59 THEN t1.c0 WHEN vt0.c0 THEN t1.c19 WHEN vt0.c0 THEN t1.c0 WHEN t1.c19 THEN t1.c19 ELSE t1.c0 END) BETWEEN (UNLIKELY(t1.c19)) AND (t1.c0)) FROM t0, vt0, t1 WHERE ((((NULL, '399674292', x'')) NOT BETWEEN ((((('341026134', 0.3379966067496488, 'xRh#1bfs'))<=(('545733327', x'd4c3', 'e'))), (((x'')) BETWEEN ((0.03094124762488837)) AND ((0.025605058793683022))), ((('1524600498', '594944841', 'E06E9'))<(('0.11692842818237159', 0.5203547087835585, NULL))))) AND ((1919502073 COLLATE RTRIM, (((''))>((x''))), (~ (x'6d07')))))); -- 0ms;
SELECT ALL CAST(((t1.c0) IS TRUE) AS BLOB) FROM t1, t0 LEFT OUTER JOIN vt0 ON CAST(((t1.c58) IS FALSE) AS TEXT); -- 0ms;
SELECT ALL ((x'')OR(UPPER(DISTINCT t1.c58))) FROM t1, t0, vt0 ORDER BY t0.c59; -- 0ms;
SELECT (((CAST(t1.c19 AS REAL), ((t0.c59) NOT BETWEEN (vt0.c0) AND (t0.c59)), ((('', 0.2553654064537755, '856754875')) NOT BETWEEN ((t1.c58, vt0.c0, '')) AND ((t1.c0, vt0.c0, t1.c19)))))<=((AVG(t1.c0), CAST(t1.c0 AS BLOB), ((t0.c59) NOT BETWEEN (vt0.c0) AND ('欮j'))))) FROM t1;SELECT DISTINCT t0.c59 FROM t0, t1, vt0 WHERE (CASE CAST('-1065021067' AS BLOB)  WHEN (0.9786395360686223 IN ()) THEN ((0.6868393598472977)<(0.025605058793683022)) END); -- 0ms;
SELECT ALL '-1485212856' FROM t1; -- 0ms;
SELECT (json_valid(t1.c0) IN (CASE WHEN t0.c59 THEN vt0.c0 ELSE t1.c58 END)), ((TOTAL('915704822'))>(((t1.c19) NOT BETWEEN (t1.c0) AND (vt0.c0)))), (((t1.c19)|(t1.c58)) IN ((+ (t0.c59)), t1.c0 COLLATE NOCASE)) FROM vt0, t0, t1; -- 0ms;
SELECT (((t0.c59) NOT NULL) IN ()) FROM vt0, t0, t1 WHERE (((('')) NOT BETWEEN (('683082729')) AND ((-635090023))) COLLATE RTRIM); -- 0ms;
SELECT vt0.c0, '', (((t1.c19) NOT BETWEEN (t1.c58) AND (vt0.c0)) IN ()) FROM vt0, t0 WHERE (((0xffffffff8704ef2f) BETWEEN (NULL) AND (x'b597')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (- (MIN(vt0.c0))) FROM t1, vt0, t0 WHERE (((((-444716769) NOTNULL))>=(CASE WHEN '' THEN x'aa8b' END))) ORDER BY (((t1.c0)) NOT BETWEEN ((t1.c19)) AND ((CAST(t1.c58 AS TEXT)))); -- 0ms;
SELECT DISTINCT t1.c19 FROM t0 WHERE ((((('-1060644215') NOT NULL)) IS FALSE)) GROUP BY 0.642726810184265 HAVING MAX(SQLITE_VERSION()) ORDER BY (((NULL))<=((GLOB(t1.c19, vt0.c0)))) ASC;SELECT ALL (((t1.c19 IN ())) NOTNULL), LEAD(NULL, ((('33935197' IN (t0.c59, t0.c59)))&(CASE WHEN '-238554231' THEN t0.c59 ELSE t0.c59 END)), ((t0.c59) ISNULL)) OVER (), (LOWER(1791020625) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((((t1.c58)<(t1.c58))) ISNULL), (((t1.c58)) NOT BETWEEN ((LIKELY(x''))) AND ((NULLIF('-977230548', t0.c59)))), CASE (NOT (t1.c0))  WHEN GROUP_CONCAT(x'') THEN t1.c0 ELSE ((t1.c0) IS FALSE) END FROM t0;SELECT ALL ((((MIN(t1.c19, t0.c59, t1.c58, t1.c19))AND(t1.c0 COLLATE BINARY)))AND(t0.c59)) FROM vt0;SELECT ((- (t0.c59)) IN ()), t1.c19 COLLATE RTRIM, t1.c19 FROM t0, vt0 WHERE (((((0.5815846003863655)*(x'4a4bc4da')))<=(CASE 0.4509685505054277  WHEN '1x-?' THEN NULL ELSE 0.15560717734381757 END)));SELECT DISTINCT DENSE_RANK() OVER () FROM vt0, t1 WHERE ((((('341026134') NOT BETWEEN ('') AND (NULL))) NOT NULL)); -- 0ms;
SELECT DISTINCT (((((vt0.c0) BETWEEN ('532892908') AND (0.5838366939792102)), 5.45733327E8, NULL))!=((CASE x''  WHEN t1.c58 THEN t1.c19 END, ((t0.c59)<(t1.c0)), (- (t0.c59))))) FROM vt0;SELECT ALL UPPER(DISTINCT ((0.9531408964897548)IS(t0.c59))), (((CAST(t1.c19 AS REAL), 0.40957137654240905, ((0xffffffffa89dbed2)*(0.5387236407445607))))==((vt0.c0 COLLATE RTRIM, '636195842', ABS(0xffffffffc39961fb)))), ROW_NUMBER() OVER () FROM t0 WHERE (((((0.31827438783723505) NOT NULL)) NOT BETWEEN (x'13b9c238') AND (CASE WHEN 0.06593208280971796 THEN 'nqZyB2' END)));SELECT DISTINCT ((((((t0.c59)&(t1.c0)))OR(((vt0.c0)<=(vt0.c0)))))OR(MIN(vt0.c0))) FROM t1, vt0 GROUP BY ((t1.c19)>=(t0.c59)) COLLATE RTRIM, (((vt0.c0)) BETWEEN ((t0.c59)) AND ((t1.c19))) COLLATE NOCASE, t1.c58;SELECT DISTINCT ((CASE t0.c59  WHEN t1.c19 THEN vt0.c0 ELSE t1.c58 END)||(vt0.c0)), MAX(((((vt0.c0)AND(t1.c0)))OR(vt0.c0))), RANK() OVER ( RANGE x'' PRECEDING) FROM vt0 WHERE (((CAST(NULL AS REAL))GLOB((((x'', NULL, '607021422')) NOT BETWEEN ((0.7303481388424187, x'', x'')) AND (('', '', 0.23127251134460203))))));SELECT DISTINCT 0X25f9c0e2, ((((((((CASE t1.c19  WHEN t0.c59 THEN '' END)OR(((vt0.c0)LIKE(t1.c19)))))OR(((vt0.c0)OR(t0.c59)))))OR((1973720166 IN ()))))AND(t0.c59)), (NOT (((((((((t0.c59)OR(t1.c19)))AND(vt0.c0)))OR(t1.c0)))OR(t1.c0)))) FROM t1, vt0, t0 WHERE ((((('yK}U]JW1')>>(x''))) BETWEEN (((('~Qj8')) BETWEEN ((0.6136512974542252)) AND ((x'fe6f')))) AND (((1393285332)&(x''))))) ORDER BY CAST((t0.c59 IN ()) AS REAL) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CAST(t1.c0 AS REAL)) BETWEEN (((t0.c59)AND(t1.c58))) AND (((t1.c19)LIKE(t0.c59)))) FROM t0, t1, vt0 WHERE ((~ (x''))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)|((t1.c19 IN (t1.c0)))) FROM vt0, t1, t0 WHERE (('-382661307' IN ())) LIMIT -1213539669 OFFSET 1973720166; -- 0ms;
SELECT (x'' IN ((t1.c0 IN ()))), ((t0.c59 COLLATE NOCASE)/(CAST(t1.c58 AS TEXT))), ((((((((COALESCE(DISTINCT t1.c19, t1.c0))AND((0.9650770210505288 IN ()))))AND(TYPEOF(DISTINCT t1.c19))))AND((- (t0.c59)))))AND(COUNT(''))) FROM t0, vt0;SELECT (NOT (((((t0.c59)AND(t1.c0)))AND(0.08260445555892071)))) FROM t1 WHERE (CASE WHEN (((0Xffffffff98b75c56))>=(('M'))) THEN ((0.13705874626286385)LIKE(0.7801094784374486)) END) GROUP BY (((t1.c19)-(vt0.c0)) IN ()) HAVING (NOT (((t1.c19) NOT BETWEEN (t1.c19) AND (t1.c0))));SELECT ALL SUM(0.001557558377242696) OVER (), (((((t1.c19)OR(t1.c19)))AND(t1.c19)) IN (t1.c58)), SUM((- (t1.c19))), ((t1.c0)>>(t1.c19)) COLLATE RTRIM, (((t0.c59, t1.c58, 158517789)) NOT BETWEEN ((AVG(t1.c19), ((t1.c0)>=(vt0.c0)), '1979100865')) AND (((+ (vt0.c0)), x'', ((((t0.c59)OR(x'')))OR(t1.c0))))) FROM t0, t1, vt0 WHERE ('~h&3kU'); -- 1ms;
SELECT ALL (((t1.c0))!=((((t0.c59)IS NOT(t0.c59))))) FROM t1, vt0, t0 WHERE ((('')-(((NULL) NOT BETWEEN ('158517789') AND (1726094108))))); -- 0ms;
SELECT DISTINCT CASE WHEN (t1.c19 IN (vt0.c0)) THEN CASE WHEN t0.c59 THEN x'' ELSE t0.c59 END END FROM t0, t1, vt0 WHERE (826557843) GROUP BY TRIM(CASE WHEN t1.c58 THEN vt0.c0 WHEN t0.c59 THEN vt0.c0 WHEN t1.c19 THEN vt0.c0 ELSE t1.c19 END, ((t1.c0)AND(t1.c0))), '', 0.44112079854992736 HAVING CASE WHEN ((NULL) NOT NULL) THEN 0.3209040608083291 WHEN (((t1.c19, vt0.c0, t1.c19))<((t1.c19, t1.c0, t1.c19))) THEN t1.c19 COLLATE RTRIM WHEN ((((vt0.c0)OR(vt0.c0)))OR(t1.c58)) THEN CAST(vt0.c0 AS TEXT) END LIMIT 1393285332; -- 6ms;
SELECT ALL t1.c0 FROM t0, vt0, t1 WHERE (CASE WHEN CAST(0.3442142197507677 AS REAL) THEN 'NQZYB2' COLLATE BINARY ELSE CASE WHEN 0.4830617271405413 THEN NULL WHEN x'' THEN 0.1121025260077253 WHEN 'i]h>༻Rꆈ?' THEN x'1ee3' END END); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE) BETWEEN (t1.c58) AND (((0Xfffffffffb6e5f4b)GLOB('-1060644215')))) FROM vt0 LIMIT -1119502176;SELECT ALL ((t1.c19) BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM, ((((vt0.c0)-(vt0.c0)))&(CASE t1.c19  WHEN NULL THEN t1.c19 WHEN t1.c19 THEN t1.c58 WHEN t1.c0 THEN t0.c59 END)), (((vt0.c0, t1.c19, t0.c59)) BETWEEN ((((t1.c19) NOT BETWEEN (t1.c19) AND (vt0.c0)), CAST(t0.c59 AS INTEGER), t1.c58)) AND (((((t1.c19)) BETWEEN ((t1.c58)) AND ((vt0.c0))), (((t0.c59)) NOT BETWEEN ((t1.c19)) AND ((t0.c59))), (- (vt0.c0))))), ((load_extension(vt0.c0, '-575628439'))IS NOT((NOT (t1.c58)))), CAST((t1.c58 IN (t1.c19, t0.c59)) AS BLOB) FROM vt0, t0 WHERE (CASE LIKELIHOOD(NULL, 0.9671850430236856)  WHEN -713873901 THEN ((0Xffffffffe3906af9) BETWEEN (x'') AND (-7.13873901E8)) END) GROUP BY CASE ((t0.c59) IS TRUE)  WHEN ((t0.c59)AND('')) THEN (vt0.c0 IN ()) WHEN TRIM(DISTINCT t1.c58) THEN CAST(t1.c19 AS INTEGER) WHEN (NOT (t1.c58)) THEN ((t1.c19)IS NOT(t0.c59)) ELSE ((vt0.c0)<=(t1.c19)) END HAVING t1.c19;SELECT ALL ((((((((t1.c19)OR((((t0.c59))=((NULL))))))AND(CAST(vt0.c0 AS REAL))))AND(((t1.c58) BETWEEN (t0.c59) AND (vt0.c0)))))OR(t1.c19)), vt0.c0, 0.19951872713728103, (((t1.c0))<>((t1.c19))) COLLATE RTRIM, CASE ((t1.c58)IS(NULL))  WHEN TRIM(t1.c0, t0.c59) THEN (+ (t1.c19)) WHEN (+ (t1.c19)) THEN ((t1.c19) IS TRUE) WHEN 0.25022375566878685 THEN (((t1.c0, vt0.c0, t1.c58))<((vt0.c0, t1.c19, t0.c59))) WHEN 0.7302609455382423 COLLATE RTRIM THEN CASE WHEN t1.c58 THEN t0.c59 WHEN t0.c59 THEN t1.c58 WHEN vt0.c0 THEN t0.c59 END WHEN (t1.c19 IN ()) THEN CASE WHEN t0.c59 THEN t1.c0 END ELSE CAST(t1.c19 AS REAL) END FROM t0 WHERE (((((NULL) IS TRUE)) BETWEEN (((x'1a01')<('-1119502176'))) AND ((('-1906853010')<<(x'')))));SELECT (t1.c19 COLLATE BINARY IN ()), (CASE t1.c58  WHEN t1.c0 THEN 0x217579b WHEN t1.c19 THEN vt0.c0 WHEN t0.c59 THEN t1.c19 END IN ()), ((((vt0.c0)>=(t1.c19)))LIKE(NULL)) FROM vt0, t1 WHERE (((('0.4830617271405413')<>(0.15560717734381757)) IN ())); -- 1ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN t1.c19 WHEN t1.c0 THEN t1.c19 WHEN vt0.c0 THEN t0.c59 END)|(CASE t1.c58  WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END)), CAST(((vt0.c0) NOTNULL) AS NUMERIC), SUM(((vt0.c0) BETWEEN (t1.c58) AND (t1.c19))) FROM t0;SELECT ALL CAST(t1.c0 AS NUMERIC) COLLATE RTRIM FROM t0, vt0 WHERE (CAST((((x'0e39')) NOT BETWEEN ((x'c662')) AND (('YsS|w*LQ'))) AS NUMERIC));SELECT DISTINCT (x'' IN ()) COLLATE NOCASE FROM t1, t0, vt0; -- 0ms;
SELECT ALL COUNT(t1.c58), ((((CASE WHEN t0.c59 THEN vt0.c0 ELSE t1.c0 END)OR(CASE vt0.c0  WHEN vt0.c0 THEN t1.c58 WHEN t1.c58 THEN vt0.c0 WHEN t1.c0 THEN 0.4201062724009039 WHEN NULL THEN t0.c59 WHEN t0.c59 THEN t1.c19 END)))OR(8.26557843E8)), (~ (TYPEOF(t1.c0))) FROM t1, vt0, t0 WHERE (((rtreenode(NULL, '-916085336'))OR((('FALSE') NOTNULL)))) LIMIT -1704825288; -- 0ms;
SELECT (~ (t1.c58)) COLLATE BINARY, ((((t1.c19)<=(vt0.c0))) BETWEEN (((t0.c59) NOT NULL)) AND (CAST(t0.c59 AS BLOB))), x'9fae' FROM t0 INDEXED BY i29 LIMIT 1102767399;SELECT DISTINCT GROUP_CONCAT((((vt0.c0))<=((t1.c0)))) FILTER(WHERE CASE ((vt0.c0)%(t1.c0))  WHEN (((t1.c19))<=((t1.c0))) THEN ((t1.c19)LIKE(t1.c0)) WHEN ((((t0.c59)OR(t1.c58)))AND(t0.c59)) THEN -1.06660747E8 WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)OR(t1.c58)))AND(t1.c58)) END) OVER (), (~ ((('-2013810227')LIKE(0.4665964667510286)))), ((t1.c0)*(((t1.c58)>=(vt0.c0)))) FROM vt0;SELECT RANK() OVER (), t1.c58, NTILE(((vt0.c0)OR(((t1.c19) IS FALSE)))) OVER ( ROWS CAST(((t0.c59) BETWEEN (t1.c58) AND (t1.c0)) AS REAL) PRECEDING EXCLUDE NO OTHERS) FROM vt0, t1, t0 WHERE ((((832951742, x'', x'7dde58cd')) NOT BETWEEN ((('-480800075' IN ()), ((NULL) NOT BETWEEN (NULL) AND (x'')), (~ ('}tG鰁^C')))) AND (((('0.6868393598472977') NOT BETWEEN ('-1485212856') AND (0.8189731480486027)), ((-1.013358085E9)-('')), ((0.4511807780904683)GLOB('-444716769')))))); -- 2ms;
SELECT DISTINCT SUM(((((vt0.c0)AND(t0.c59)))AND(t0.c59))) FROM t0 ORDER BY LIKELIHOOD(t1.c58 COLLATE RTRIM, 0.08720904676655539)  NULLS FIRST;SELECT DISTINCT (0.06115554446557836 IN ()), (- (t1.c19 COLLATE RTRIM)), ((CASE vt0.c0  WHEN t1.c19 THEN x'' ELSE t1.c58 END) IS TRUE) FROM vt0 FULL OUTER JOIN t1 ON LIKELIHOOD(x'', 0.612932011100202); -- 0ms;
SELECT ALL rtreenode(((vt0.c0) IS FALSE), (NOT (t1.c0))) FROM t1;SELECT ((LIKELIHOOD(t1.c58, 0.7197907268881275)) NOT NULL), x'', UPPER(MAX(vt0.c0)) FROM vt0, t1, t0; -- 0ms;
SELECT ALL COALESCE(DISTINCT ((t1.c19)=(t1.c19)), (NOT (1.973720166E9))) FROM vt0, t1 WHERE ((((0.6361354220479983)/(NULL)) IN ())); -- 0ms;
SELECT DISTINCT SUM(((((t1.c0)AND(t1.c19)))AND(t1.c19))) FILTER(WHERE NULL) OVER () FROM t1 INDEXED BY i29;SELECT DISTINCT CASE WHEN MAX(vt0.c0) THEN AVG(t1.c19) END, (((((((t1.c58, t1.c0, vt0.c0))==((t1.c58, t1.c19, t1.c0))))AND(CAST(t1.c19 AS INTEGER))))OR(((t1.c58) ISNULL))), (((NULL, t1.c58, t1.c0)) NOT BETWEEN ((((((t0.c59)OR(t0.c59)))AND(t1.c58)), (((vt0.c0, t1.c58, vt0.c0))<=((0.01510518037242703, t1.c0, t1.c0))), ((t0.c59)IS NOT(t1.c0)))) AND ((((('7i'))<((t0.c59))), (t1.c0 IN (t1.c0, NULL, t1.c58, t1.c0)), CASE WHEN vt0.c0 THEN t1.c19 END))) FROM t1 LIMIT 1398594625;SELECT DISTINCT ((t1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(x'4054' AS INTEGER)) AND (UNICODE(vt0.c0))), SUM(((t1.c58) NOT BETWEEN (t0.c59) AND (t0.c59))) FILTER(WHERE CAST(((vt0.c0) IS TRUE) AS NUMERIC)) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND ((t1.c19)LIKE(CAST(vt0.c0 AS TEXT))) FOLLOWING), (+ (NULL)) FROM t0 LIMIT 63727728 OFFSET 1791020625;SELECT DISTINCT CASE ((vt0.c0)IS(t1.c58))  WHEN t1.c58 COLLATE BINARY THEN CASE t0.c59  WHEN t1.c19 THEN t1.c58 END END FROM vt0, t1 WHERE (((((0.614479775259634) IS TRUE)) NOT BETWEEN (((('0.3080783015682549')) BETWEEN ((x'')) AND ((x'65bd')))) AND ((('') NOTNULL))));SELECT DISTINCT ((((((((t0.c59)OR(t1.c19)))AND(t0.c59)))OR(((((t1.c0)AND(t1.c0)))AND(vt0.c0)))))OR(CAST(t0.c59 AS REAL))) FROM vt0 LIMIT 856754875;SELECT CASE WHEN t1.c0 THEN ((vt0.c0) BETWEEN ('-1133332084') AND (t0.c59)) END FROM vt0, t1, t0 LIMIT 1290028747; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(0.5044622178959393) OVER ( ORDER BY '1121970', NULLIF(DISTINCT (((t1.c0, t1.c58, t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t1.c58, t1.c19, t1.c0, vt0.c0, t1.c0)) AND ((vt0.c0, vt0.c0, t1.c19, t1.c0, t1.c19))), CASE WHEN x'' THEN NULL WHEN t0.c59 THEN vt0.c0 WHEN t1.c0 THEN t0.c59 END) ASC  NULLS FIRST, CASE ((t1.c0)%(t1.c58))  WHEN ('' IN (t0.c59)) THEN t1.c58 COLLATE BINARY END), MAX((((t0.c59))==((NULL)))), ROUND(t1.c0 COLLATE RTRIM, ((t1.c58) NOT BETWEEN ('-329409883') AND (vt0.c0))) FROM t1, vt0, t0 WHERE (592973095); -- 0ms;
SELECT DISTINCT t0.c59, ((((((t1.c58)OR(t1.c19)))OR(t1.c0)))AND((t1.c58 IN (t1.c19)))), CASE ((((t1.c58)AND(vt0.c0)))AND(t1.c58))  WHEN COUNT(vt0.c0) THEN (vt0.c0 IN ()) END FROM t1, t0 WHERE (CASE WHEN (('XK') BETWEEN (NULL) AND (NULL)) THEN (NULL IN ()) WHEN ((((((((((((x'8905')AND(0.8080715971330051)))AND(x'9c25')))OR(NULL)))AND(x'')))AND(0X657da68b)))OR(NULL)) THEN (('1366961171')/(NULL)) WHEN (0.5203547087835585 IN ()) THEN (0.09858113392445866 IN ()) ELSE CASE WHEN x'5485' THEN 1.102767399E9 WHEN '594944841' THEN 140045525 WHEN 0x72ae4a0 THEN -1677682291 ELSE x'' END END);SELECT DISTINCT PERCENT_RANK() OVER (), ((((t1.c58)<(t1.c58))) BETWEEN (vt0.c0 COLLATE BINARY) AND (COUNT(t1.c0))), CASE (((t1.c0)) BETWEEN ((t1.c58)) AND ((t0.c59)))  WHEN ((t1.c0)||(vt0.c0)) THEN LIKELIHOOD(t1.c19, 0.4839535404930141) ELSE ((vt0.c0)IS(t1.c19)) END FROM t1, vt0, t0; -- 0ms;
SELECT ALL ((((t1.c0) NOTNULL))GLOB((t1.c0 IN ()))) FROM vt0 WHERE (((((0xffffffffd772a7d0)|(''))) IS TRUE));SELECT DISTINCT (((t1.c58 IN ())) NOT BETWEEN (((t1.c19)<(t0.c59))) AND (UPPER(t1.c19))) FROM t0, t1, vt0; -- 0ms;
SELECT DISTINCT ((((((t0.c59)OR(NULL)))AND(NULL)))>>(RTRIM(t1.c19))) FROM vt0, t1 NOT INDEXED, t0 WHERE ((((- ('-1222564958'))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((t1.c58)) BETWEEN ((vt0.c0)) AND ((t1.c0))) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT (((t1.c19)) NOT BETWEEN ((((((t1.c19)AND(vt0.c0)))AND(vt0.c0)))) AND ((t0.c59 COLLATE NOCASE))), NULL, (((t1.c58 IN ())) NOTNULL) FROM t1, t0;SELECT ((((((((t1.c58)AND(t0.c59)))OR(t1.c58)))OR((- (vt0.c0)))))AND(INSTR(t1.c19, t1.c58))) FROM t0;SELECT ALL ((((t1.c0)GLOB(vt0.c0)))=(CAST(t0.c59 AS REAL))), ((((t0.c59)>(vt0.c0))) BETWEEN (COUNT(t1.c0)) AND (((t0.c59)>=(t1.c19)))), ((((((((MAX(vt0.c0))AND(CAST(vt0.c0 AS NUMERIC))))AND(((x'') ISNULL))))OR((((t1.c0))<=((t1.c19))))))AND(0.7116489263724896)) FROM vt0, t0, t1; -- 0ms;
SELECT (((t0.c59)) BETWEEN ((t1.c0)) AND ((t0.c59))) COLLATE RTRIM FROM t1, t0 LIMIT -966540231; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0, vt0, t1 NOT INDEXED WHERE (CAST('-2029719761' AS TEXT)); -- 0ms;
SELECT DISTINCT CAST(((t1.c0) IS TRUE) AS INTEGER) FROM t1, vt0 GROUP BY (- ((NOT (vt0.c0)))), t1.c19, ((CASE t1.c0  WHEN vt0.c0 THEN t1.c58 ELSE t1.c19 END)%(0x28b703e9)); -- 2ms;
SELECT ALL ((0.34660014819615814)>=(t1.c0 COLLATE RTRIM)) FROM vt0, t1, t0 WHERE (0.58759458120595); -- 0ms;
SELECT CASE WHEN 'U,' THEN x'' ELSE CASE t1.c58  WHEN t1.c0 THEN vt0.c0 WHEN '\n' THEN t1.c0 WHEN t0.c59 THEN t1.c19 ELSE NULL END END, IFNULL(DISTINCT CAST(t1.c58 AS NUMERIC), ((t1.c0) NOTNULL)), (((t1.c58 IN ()))>>(TOTAL(vt0.c0))) FROM t0 WHERE ((CASE NULL  WHEN '746213017' THEN '0.9531408964897548' ELSE 0Xffffffffd2788179 END IN (CASE NULL  WHEN NULL THEN '915704822' END))) GROUP BY ((NULL) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN t0.c59 THEN t1.c58 ELSE t0.c59 END) AND ((t1.c58 IN ())));SELECT json_array_length(t1.c0) COLLATE BINARY FROM vt0 WHERE (((((0.4663996900696088) NOT BETWEEN ('-251229535') AND (NULL)))*(TYPEOF(DISTINCT 0X7b3c94c6)))) LIMIT -219767957 OFFSET -1097439950;SELECT ALL ((((((((((((((t1.c0)>>(t1.c19)))AND(((t0.c59)*(t1.c0)))))AND((~ (t1.c19)))))OR(((((t0.c59)OR(vt0.c0)))OR(t0.c59)))))AND(NULL)))AND(((NULL) BETWEEN (-466150633) AND (vt0.c0)))))AND(((t0.c59)>>(vt0.c0)))) FROM t1, t0 NOT INDEXED, vt0 WHERE ((((('-349588032') ISNULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT (~ (CAST(t1.c58 AS INTEGER))) FROM vt0, t0, t1 WHERE (CASE '1973720166'  WHEN ('-442932916' IN ()) THEN ((((0.6868128693877201)AND('1809926041')))OR('')) WHEN ((0.8587913464208536) ISNULL) THEN ((((0.09858113392445866)AND(NULL)))AND(0.6912658094093848)) WHEN ((((NULL)AND('-916085336')))OR('-986278043')) THEN ((((NULL)AND(0.8587493925340765)))OR(x'')) ELSE NULL COLLATE RTRIM END) GROUP BY (('1352740072') NOT BETWEEN (TRIM(DISTINCT t0.c59)) AND (((t1.c58)>(t1.c0)))) HAVING ((((((t1.c0) NOT BETWEEN (t0.c59) AND (t1.c0)))AND(t0.c59)))AND((+ (t0.c59)))); -- 0ms;
SELECT ((MAX(t1.c58)) NOT BETWEEN ((+ (t1.c0))) AND (CAST(NULL AS INTEGER))) FROM t1; -- 0ms;
SELECT (((((t1.c58)) BETWEEN (('1007716280')) AND ((t1.c19)))) BETWEEN ((((t1.c19)) BETWEEN ((t0.c59)) AND ((t1.c19)))) AND (((t1.c58)+(t1.c0)))) FROM t0 WHERE ((((x'')/(0X1d6ee64)) IN (CAST('-1454634205' AS REAL), '/{FdOW8A' COLLATE BINARY)));SELECT DISTINCT PERCENT_RANK() OVER ( RANGE ((UPPER(DISTINCT t1.c19)) NOTNULL) PRECEDING), (((t0.c59)>>(vt0.c0)) IN ()), COUNT(AVG(t0.c59)) FROM vt0, t1, t0 WHERE (((NULL COLLATE NOCASE)IS NOT((+ ('97252109')))));SELECT DISTINCT NULL FROM t1, t0, vt0 WHERE ((((1022823970)>=(x'3c34')) IN ())); -- 0ms;
SELECT x'', DENSE_RANK() OVER ( ORDER BY (('2yN') BETWEEN (((t1.c19)&(t0.c59))) AND ((t1.c0 IN (t1.c58, vt0.c0))))  NULLS FIRST, (((((t1.c0)AND(t1.c0)))AND(t1.c19)) IN ())  NULLS LAST, (((((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c58))))OR(((vt0.c0)LIKE(vt0.c0)))))AND(((t1.c0) ISNULL))) ASC  NULLS FIRST), 0.5815846003863655 FROM t1, t0, vt0 WHERE (NULL); -- 0ms;
SELECT ALL ((((CAST(t1.c58 AS NUMERIC))OR((+ (t0.c59)))))AND((((t1.c19, t0.c59, t1.c19))<((vt0.c0, t1.c58, t0.c59))))), TOTAL(UNLIKELY(t1.c58)) FILTER(WHERE ((t1.c0 COLLATE BINARY)IS(((t0.c59) BETWEEN (vt0.c0) AND (vt0.c0))))) OVER (), (((vt0.c0) BETWEEN (t0.c59) AND (vt0.c0)) IN ()), LIKELY(0Xfffffffff1c7f389), ((t0.c59) NOT BETWEEN (t1.c19) AND (t1.c19)) COLLATE BINARY FROM t1, vt0, t0 WHERE (((CASE WHEN x'' THEN '-1988705240' WHEN 0.06486113620611134 THEN NULL WHEN '-1951481851' THEN 0.880604173051238 END)>>((-1.704825288E9 IN ())))); -- 0ms;
SELECT DISTINCT ((CASE t1.c0  WHEN t0.c59 THEN t1.c19 ELSE t1.c0 END)LIKE((t1.c0 IN ()))), AVG(((vt0.c0) BETWEEN (t1.c0) AND (t1.c58))) OVER (), ((COUNT(*)) IS TRUE) FROM vt0 NOT INDEXED WHERE ((~ (0.4687056538954687))) GROUP BY (NOT (t0.c59)) COLLATE NOCASE COLLATE NOCASE, ((t1.c19)LIKE(t1.c19)) COLLATE BINARY, '223274209';SELECT DISTINCT CAST(CASE t1.c19  WHEN t1.c19 THEN 0.9913850705359637 ELSE vt0.c0 END AS BLOB) FROM t0, t1, vt0 LIMIT 92275383; -- 0ms;
SELECT DISTINCT (((((t1.c19) NOT BETWEEN (vt0.c0) AND (t1.c0))))<=((t0.c59 COLLATE NOCASE))) FROM t1 WHERE (UPPER(DISTINCT 'wD' COLLATE BINARY));SELECT ((((((((CASE WHEN t1.c58 THEN t0.c59 ELSE t1.c58 END)OR(json_valid(t1.c0))))OR(UNICODE(t1.c0))))OR(t1.c19 COLLATE RTRIM)))OR(TYPEOF(vt0.c0))) FROM vt0, t0 WHERE ((((~ (NULL)))IS NOT((- (0.19102060710792057)))));SELECT DISTINCT (- (((t1.c0) IS FALSE))) FROM t0, vt0 WHERE (((JULIANDAY('-24834188', x'', NULL)) NOT BETWEEN (NULL COLLATE RTRIM) AND (((NULL) NOT BETWEEN (0.40957137654240905) AND (x''))))) ORDER BY ((((t1.c19 COLLATE RTRIM)OR(((-2089514511) ISNULL))))AND(((t0.c59) NOT BETWEEN (vt0.c0) AND (NULL)))) DESC;SELECT DISTINCT FIRST_VALUE((((((vt0.c0) NOTNULL), TRIM('-123918996', vt0.c0), (+ (vt0.c0))))>((x'', ((((vt0.c0)AND(vt0.c0)))AND(t0.c59)), ((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)))))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND (- (CAST(vt0.c0 AS NUMERIC))) FOLLOWING EXCLUDE GROUP) FROM vt0, t0 NOT INDEXED WHERE (CAST(CASE WHEN NULL THEN '63727728' ELSE x'' END AS INTEGER)); -- 0ms;
SELECT DISTINCT t1.c58 FROM t0, vt0 WHERE ((((0.07505667039057473 IN ())) NOT BETWEEN (((x'e481')/('1576521412'))) AND (((0.1685029413403748)AND(0.3209858799365056)))));SELECT ((((t1.c19))<>((t1.c58))) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t1.c19, t1.c58, t1.c0)) AND ((vt0.c0, t1.c58, vt0.c0))) COLLATE NOCASE FROM t1 GROUP BY (((((t1.c19)) NOT BETWEEN ((t1.c58)) AND ((t1.c58))))!=(LIKELY(vt0.c0))), (((((t1.c58, t1.c0, 0.7988229198094682, t1.c19, t1.c0))>((t1.c0, t0.c59, t1.c58, t1.c58, ''))))/(((t1.c0) NOT NULL))), (((((t1.c0)||(t1.c0)), (((t1.c58)) NOT BETWEEN ((t1.c58)) AND ((t1.c19))), ((t1.c58) IS TRUE), CASE WHEN vt0.c0 THEN t1.c0 WHEN t0.c59 THEN t1.c58 WHEN t0.c59 THEN vt0.c0 ELSE t1.c0 END, NULL))>(((((t0.c59)) BETWEEN ((t1.c0)) AND ((t1.c58))), CAST(t1.c19 AS REAL), ('1533499283' IN ()), ((t1.c0) IS FALSE), x'')));SELECT DISTINCT (((((t1.c19))<((t1.c58))))IS(CASE WHEN '1x-?' THEN t1.c0 END)), ((((((((((t0.c59)OR(0.1774617641221411)))OR(t0.c59)))OR(t0.c59)))OR(t1.c19)))>=(((t0.c59) NOTNULL))), CUME_DIST() OVER () FROM t1, t0, vt0 WHERE (((((0.05243584590045747 COLLATE NOCASE)AND((((('')OR('欮J3l5d4')))OR(0.08608040946078854)))))OR(CASE NULL  WHEN -1743392924 THEN '839141101' WHEN NULL THEN '594944841' WHEN 0.3601148376779134 THEN x'347b' ELSE NULL END))); -- 1ms;
SELECT ALL (- (vt0.c0)) FROM t0;SELECT ALL MIN(t1.c19) FROM t1; -- 0ms;
SELECT DISTINCT (('') ISNULL) FROM vt0, t0; -- 0ms;
SELECT ALL t1.c58, vt0.c0, CASE WHEN AVG(0.7744580373995414) THEN CAST(t1.c0 AS REAL) ELSE (+ (t1.c58)) END FROM vt0;SELECT (- (((t1.c0) ISNULL))) FROM vt0;SELECT DISTINCT LAG(t1.c19, '120251552', ((t1.c19) BETWEEN (x'') AND ((t1.c19 IN ())))) OVER ( ORDER BY CASE WHEN ((t1.c0)>(t1.c58)) THEN t1.c0 COLLATE NOCASE END) FROM t1 WHERE ('-1374089546'); -- 0ms;
SELECT (+ (((t1.c58) NOT BETWEEN (t1.c0) AND (t1.c19)))), vt0.c0, ((t1.c58) ISNULL) FROM vt0;SELECT DISTINCT (t1.c0 IN ()), TRIM((- (vt0.c0)), x'c6b1'), (((- (t1.c58))) BETWEEN (CAST(NULL AS TEXT)) AND (((t1.c19)GLOB(t0.c59)))) FROM t1, vt0, t0; -- 0ms;
SELECT GROUP_CONCAT(GROUP_CONCAT(((vt0.c0)%(t1.c19)))) FROM vt0, t1 WHERE (CAST((NULL IN (0.5789530093707391, 0.8288759960299658)) AS BLOB));SELECT DISTINCT json_type(((t1.c58) IS TRUE)), NULLIF(DISTINCT TOTAL(t0.c59), CAST(t1.c0 AS BLOB)), (((t1.c58 IN (t1.c19, t0.c59)))%(COALESCE(t1.c19, t1.c0))), CAST((t0.c59 IN ()) AS TEXT), ((t0.c59) BETWEEN (((t0.c59)<(t1.c58))) AND (((t1.c0) IS FALSE))) FROM vt0, t0, t1 WHERE ((('-1732813738') NOT BETWEEN ('') AND ('Ql')) COLLATE BINARY) GROUP BY (((((vt0.c0 IN (vt0.c0, '&S')))OR((NOT (t1.c58)))))OR(((vt0.c0) NOT BETWEEN (t1.c58) AND (t1.c19)))) HAVING (NOT ((~ (t1.c19)))); -- 0ms;
SELECT (- (CAST(t1.c58 AS NUMERIC))) FROM t1 WHERE (((CAST('1943567540' AS NUMERIC)) NOT NULL)); -- 0ms;
SELECT ((CAST(t1.c19 AS TEXT)) IS TRUE), SUM(DATE(t0.c59, t1.c19, vt0.c0)) OVER (), 'B0' FROM t0, vt0 WHERE ((NOT ('174286232' COLLATE NOCASE))) GROUP BY ((CASE WHEN t1.c0 THEN t1.c58 ELSE NULL END)+(NULL)), t1.c58, ((~ (vt0.c0)) IN ());SELECT (NOT (CAST(t0.c59 AS REAL))) FROM t0, vt0, t1 GROUP BY (- (((t0.c59) BETWEEN (vt0.c0) AND ('880173157')))), ((((((t1.c0))<>((t1.c58)))))=((CAST(t0.c59 AS BLOB)))), (+ (CASE WHEN vt0.c0 THEN t1.c19 ELSE vt0.c0 END)) HAVING ((CASE WHEN vt0.c0 THEN t1.c58 ELSE 0.6670757955148017 END)<(((((x'')OR(t1.c19)))OR(t1.c19)))) ORDER BY NULL, ((t1.c19)>>(t1.c0)) COLLATE RTRIM; -- 2ms;
SELECT ALL NULLIF(DISTINCT t1.c0, (t0.c59 IN ())) FROM t1, t0, vt0 WHERE ((~ (x'')) COLLATE RTRIM); -- 0ms;
SELECT ((((((t1.c0) IS TRUE))OR(((t0.c59)>=(t1.c19)))))OR(CASE WHEN vt0.c0 THEN t1.c58 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c58 ELSE t1.c19 END)) FROM vt0 WHERE ('637124834' COLLATE BINARY) GROUP BY (((~ (t1.c0)))<(((-283530507) NOTNULL))), CASE (t0.c59 IN ())  WHEN ((t1.c19)!=(vt0.c0)) THEN ((t1.c19)GLOB(vt0.c0)) END, CAST(((((x'')AND(vt0.c0)))OR(t1.c19)) AS TEXT);SELECT DISTINCT ((CASE vt0.c0  WHEN t1.c0 THEN t1.c58 ELSE t1.c0 END) BETWEEN (vt0.c0) AND (((t1.c58) IS TRUE))), COUNT(*), (((~ (t1.c19))) NOTNULL) FROM t1, t0 LIMIT -2055617041;SELECT ALL (((((vt0.c0))<=((t1.c58))))GLOB((~ (vt0.c0)))) FROM t1, t0;SELECT ALL TRIM(t1.c58) COLLATE NOCASE FROM t1 LIMIT 1238658125; -- 0ms;
SELECT AVG((((t0.c59, t1.c0, t1.c19)) BETWEEN ((vt0.c0, t0.c59, t1.c58)) AND ((vt0.c0, t0.c59, t1.c0)))) OVER () FROM vt0, t1, t0 WHERE (LIKELY(DISTINCT ((0.5827897943284912) NOT BETWEEN (x'') AND (-550788728)))); -- 5ms;
SELECT t1.c19 FROM t0;SELECT ((((t0.c59)AND(t1.c58)))OR(t1.c0)) COLLATE BINARY, CAST(((t1.c0) NOTNULL) AS NUMERIC), CASE x''  WHEN '' THEN ((t0.c59)*(t1.c0)) WHEN ((t1.c19)&(t1.c58)) THEN CAST(t0.c59 AS REAL) WHEN t1.c0 COLLATE RTRIM THEN (- (t0.c59)) END, ((json_array_length(t0.c59))OR(((t1.c0)%(t1.c58)))), NTH_VALUE((NOT (((t1.c19) NOT BETWEEN (t0.c59) AND (t0.c59)))), ((((((t0.c59) NOT BETWEEN (t1.c19) AND (t1.c58)))OR(CASE WHEN t1.c19 THEN t1.c58 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c19 WHEN t1.c19 THEN t1.c19 WHEN t0.c59 THEN t1.c19 ELSE t1.c0 END)))OR(((t1.c0) NOTNULL)))) OVER ( GROUPS  CURRENT ROW) FROM t0, t1 WHERE ((((CAST('-1235651422' AS REAL), ((('\r+䆓x맗y>'))=(('-888267128'))), (('-1698489151') IS FALSE)))<=(((~ (0.36719196891575845)), (((NULL, '-680351792', NULL)) NOT BETWEEN ((1366961171, '-1652740490', x'')) AND (('', -2.013810227E9, 0.7744580373995414))), (0.8808737370099584 IN (NULL)))))) LIMIT 131190488 OFFSET 9223372036854775807; -- 0ms;
SELECT 'ᾤ', ((((t1.c58)OR(t1.c19)))OR(t1.c0)) COLLATE RTRIM, CAST(t1.c58 AS TEXT) COLLATE RTRIM FROM vt0 WHERE ((CASE 341026134  WHEN 'ry' THEN 832951742 WHEN '㳼U' THEN '-969471741' WHEN 0.9531408964897548 THEN '-1213539669' END IN ()));SELECT ((((0.17807588190008783) NOT BETWEEN (t1.c58) AND (t1.c19))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS NUMERIC))), ((((t1.c0)OR(t0.c59)))AND((t1.c19 IN ()))), ((((((vt0.c0)AND(t1.c0)))AND(vt0.c0))) NOTNULL) FROM vt0, t1, t0 GROUP BY ((((((((((((t1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((t0.c59)<(0.19102060710792057)))))OR(x'')))OR((('-2077272290')>=(vt0.c0)))))OR('t#r2')) HAVING ((((((t1.c19)) NOT BETWEEN ((t1.c19)) AND ((t1.c0)))))=(((t0.c59 IN (t1.c19))))) LIMIT -1447016310; -- 1ms;
SELECT ((CASE t1.c0  WHEN t1.c19 THEN t1.c19 ELSE t1.c19 END)LIKE(((t1.c19) NOTNULL))), ((((((t0.c59)OR(t1.c19)))OR(NULL)))=(CAST(vt0.c0 AS NUMERIC))), ((vt0.c0 COLLATE RTRIM) IS TRUE), '-157146836', CASE CHANGES()  WHEN ((t1.c0)&(t1.c58)) THEN t1.c58 ELSE ((((vt0.c0)AND(t1.c58)))OR(t1.c58)) END FROM vt0, t1, t0 GROUP BY json_array(((t1.c58) NOTNULL), CAST(t1.c19 AS INTEGER)), ((((t0.c59) BETWEEN (t0.c59) AND (t1.c58)))IS NOT(((((((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(t1.c19)))AND(t1.c0)))), ((((CASE t0.c59  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c59 THEN t0.c59 WHEN vt0.c0 THEN t1.c0 END)AND(CASE WHEN '635307653' THEN t1.c0 END)))OR(((t1.c0)*('-411705689')))) HAVING (((((vt0.c0, t1.c0, t0.c59))<>((t1.c58, t1.c58, t0.c59)))) IS FALSE); -- 4ms;
SELECT DISTINCT -3.49588032E8 COLLATE NOCASE FROM t0, t1, vt0; -- 0ms;
SELECT DISTINCT 0x704ad2a9 FROM t0, vt0 WHERE ((~ (((('2080312548', x'', ''))<(('-1811044426', 0Xffffffffd479dfa6, NULL)))))) GROUP BY ((((((t1.c0)>=(t1.c19)))OR(((t1.c0)LIKE(t1.c19)))))OR(t1.c19 COLLATE RTRIM)) HAVING ((((((t1.c58)OR(t1.c19)))OR(vt0.c0))) BETWEEN (vt0.c0) AND (((NULL)/(t0.c59)))) LIMIT 114845882;SELECT DISTINCT CAST(((vt0.c0)>=(t1.c0)) AS TEXT), CAST(CASE 0.06486113620611134  WHEN t1.c58 THEN t0.c59 END AS BLOB), COALESCE(CAST(t1.c0 AS BLOB), ((((((((t1.c58)AND(vt0.c0)))AND(t1.c19)))AND(t1.c19)))AND(NULL)), (t1.c58 IN ()), '') FROM vt0, t1, t0 NOT INDEXED WHERE (CASE WHEN (('0.31827438783723505')<(1.290028747E9)) THEN (((0x2c7a4e99)) BETWEEN ((x'')) AND ((x'bcb0'))) WHEN ('' IN ()) THEN ((NULL)&(NULL)) WHEN CAST('-604158779' AS TEXT) THEN SUBSTR(0.8284505982482655, '') ELSE ((1211153688)&(NULL)) END); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)&(t1.c0)) AS REAL) FROM vt0, t1; -- 0ms;
SELECT ALL ((((t1.c19)OR(t0.c59)))AND(t1.c19)) COLLATE RTRIM FROM t0, t1 ORDER BY CASE t0.c59 COLLATE RTRIM  WHEN CAST(t1.c58 AS REAL) THEN ((vt0.c0)+(t1.c19)) WHEN t0.c59 THEN ((t1.c58)OR(t1.c0)) WHEN CAST(t1.c19 AS REAL) THEN t1.c0 ELSE (((t1.c58))>=((vt0.c0))) END DESC, (((((t0.c59)||(t1.c19))))>((''))) DESC  NULLS LAST;SELECT DISTINCT ((t1.c19 COLLATE BINARY)-(((t1.c58)>(t1.c19)))), NULL, RANK() OVER () FROM vt0;SELECT DISTINCT CASE CASE WHEN '' THEN 'Q^煬v' WHEN vt0.c0 THEN t1.c19 WHEN NULL THEN t1.c19 WHEN t0.c59 THEN t1.c58 WHEN NULL THEN t1.c19 END  WHEN CAST(vt0.c0 AS INTEGER) THEN (+ (t1.c0)) END FROM t1, t0 ORDER BY ((t1.c19)*('1457955462')) COLLATE NOCASE ASC, vt0.c0 DESC;SELECT DISTINCT CAST(t1.c58 COLLATE NOCASE AS TEXT) FROM t0 WHERE ((((((((('')OR(x'')))AND(x'd328')))OR(x'')))OR('')) COLLATE BINARY);SELECT ALL '23908160' FROM vt0, t0, t1 INDEXED BY i29 WHERE ((~ (((((0.58759458120595)OR(x'')))OR(0.9650770210505288)))));SELECT ALL CASE WHEN t1.c58 COLLATE BINARY THEN ((t1.c19) NOT BETWEEN (t1.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN NULL WHEN ((x'')GLOB(0.002087483070944085)) THEN COUNT(*) ELSE vt0.c0 END FROM t1, vt0 WHERE ((('1679702281' COLLATE BINARY) BETWEEN (((x'')IS('-70822054'))) AND (((0.4374310301561517) IS FALSE)))); -- 0ms;
SELECT DISTINCT ((((NULL)OR(t1.c58)))AND(vt0.c0)) COLLATE BINARY, MIN(((NULL)AND(t0.c59))), RANK() OVER ( ORDER BY ((((CAST(0.9114780770948269 AS BLOB))AND(CHAR(t1.c0))))AND(CAST(t1.c19 AS REAL))), ((((((t1.c58)) BETWEEN ((t1.c19)) AND (('-642161006'))), vt0.c0 COLLATE NOCASE, t1.c0))>((((t1.c0) IS TRUE), CASE vt0.c0  WHEN t1.c58 THEN x'c28e' ELSE t1.c58 END, LIKELY(t1.c19)))) ASC  NULLS LAST, ((((((((((t1.c19)AND(t1.c19)))AND(t1.c0)))OR(x'')))AND(t1.c58)))/(('~Qj8' IN (t1.c58, t1.c58))))  NULLS FIRST), MIN((+ (t1.c0))), ((((((((t0.c59)OR(t1.c0)))OR(NULL)))OR(CASE t1.c19  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE WHEN t1.c19 THEN t1.c0 END)) FROM vt0 WHERE ((((-573673468 COLLATE RTRIM, ((NULL)>>('-1485212856')), (+ (0.7068723304693326))))<=((CASE WHEN 0x51db4e19 THEN x'e221' END, CASE 0.8097200096876525  WHEN NULL THEN x'' WHEN '	2/隳' THEN NULL WHEN 1085578630 THEN NULL END, (((((((('fz9{㪺')AND(x'')))OR('662260954')))OR(0xffffffff833b2069)))OR('-2013810227')))))) ORDER BY x'' LIMIT 288773999 OFFSET 934379;SELECT ALL SUM((((t1.c0)) NOT BETWEEN ((t1.c19)) AND ((t0.c59))) COLLATE NOCASE) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM t1, vt0, t0; -- 1ms;
SELECT DISTINCT x'' FROM t0, vt0, t1 WHERE (load_extension((0X61deb164 IN ()), (((('-1213539669')AND(0.06486113620611134)))AND(NULL))));SELECT ALL ((t0.c59) BETWEEN (t0.c59) AND (t1.c0)) COLLATE NOCASE FROM t0 LIMIT -1212609333;SELECT FIRST_VALUE(JULIANDAY(HEX(DISTINCT t0.c59), IFNULL(DISTINCT t0.c59, t0.c59), t0.c59, ((vt0.c0) BETWEEN (t0.c59) AND (t0.c59)), t0.c59 COLLATE NOCASE)) OVER (), LOWER(DISTINCT CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c19 WHEN t1.c58 THEN t1.c0 END), (((t1.c58)) BETWEEN ((t1.c19 COLLATE RTRIM)) AND ((((t1.c19) BETWEEN (vt0.c0) AND (t1.c19))))) FROM t0, vt0 WHERE ((('-1235651422')>=((('-763854471') NOT BETWEEN ('1121970') AND ('')))));SELECT DISTINCT NULL, ((((((t1.c0)AND('1121970')))OR(t1.c0))) NOT BETWEEN (t1.c19 COLLATE RTRIM) AND (((t1.c58) IS TRUE))), CAST('r' AS REAL) FROM t0, t1 WHERE (((((((NULL)AND(x'0f2c')))AND('336560184'))) NOT BETWEEN ('!汓(7') AND (((NULL)%(0.008503643181408838))))); -- 0ms;
SELECT ((((SQLITE_COMPILEOPTION_GET(t1.c19))OR(CAST(t1.c58 AS BLOB))))OR(vt0.c0 COLLATE BINARY)) FROM t1, vt0 WHERE ((((CAST('-855258161' AS TEXT)))==(((~ (x'')))))); -- 0ms;
SELECT (((t1.c0)) NOT BETWEEN ((t1.c58 COLLATE NOCASE)) AND ((CASE WHEN vt0.c0 THEN t0.c59 END))), ((((vt0.c0) BETWEEN (0.6136512974542252) AND (t1.c0))) IS FALSE), vt0.c0 COLLATE NOCASE FROM t0;SELECT DISTINCT t1.c19 FROM vt0, t1, t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((t0.c59)AND(vt0.c0)))OR(t1.c19)))AND(t0.c59)))AND(-1798658245)) THEN COUNT(*) ELSE ((t1.c0) ISNULL) END FROM t0, vt0;SELECT DISTINCT ((t1.c58 IN (t1.c19)) IN ()) FROM t1, t0 WHERE ((((((((('-1235651422' COLLATE BINARY)OR(('	ih쳡\E' IN ('M6', x'842b')))))OR('c')))OR(((('[i'))<=((1.979100865E9))))))AND(0.7804535024276826))); -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN t1.c58 THEN vt0.c0 WHEN vt0.c0 THEN t1.c58 WHEN t1.c0 THEN vt0.c0 ELSE t1.c58 END) OVER ( RANGE BETWEEN ((CAST(t1.c58 AS TEXT))<<('')) FOLLOWING AND ((CAST(t1.c19 AS TEXT))>>(-1670248337)) PRECEDING) FROM vt0 WHERE (LENGTH(((((x'')OR(NULL)))OR(-1585943375)))) GROUP BY ((NULL) NOT BETWEEN ((t1.c0 IN ())) AND (((((t0.c59)AND(t1.c19)))OR(t1.c19))));SELECT DISTINCT ((((((((((((COUNT(t1.c19))AND(CAST(vt0.c0 AS TEXT))))AND((+ (t1.c19)))))AND(((t0.c59)<(t1.c58)))))AND(t1.c58 COLLATE RTRIM)))OR(CAST(t1.c0 AS BLOB))))AND(0.40175532646041356)), NULLIF(((t0.c59)>>(t1.c0)), SUM(t1.c0)), CAST(CAST(t1.c58 AS TEXT) AS REAL) FROM t0, t1 ORDER BY CAST(t1.c58 AS BLOB) COLLATE RTRIM  NULLS LAST, CASE WHEN (((t1.c19)) BETWEEN ((t1.c0)) AND ((x''))) THEN CAST(vt0.c0 AS REAL) WHEN CASE WHEN t1.c58 THEN t1.c58 ELSE t0.c59 END THEN ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN ((((t1.c19)OR(vt0.c0)))OR(t1.c19)) THEN ((t1.c0)>=(t1.c58)) ELSE (t1.c0 IN ()) END DESC  NULLS LAST;SELECT DISTINCT ((((((((((t1.c19)OR(t1.c58)))AND(t1.c58)))AND(t1.c0)))AND(t1.c0)))-(t0.c59)) FROM vt0 WHERE ((((~ (x'c4f5'))) NOT BETWEEN ((~ (x''))) AND (('1037587228' IN ()))));SELECT CAST(((((t1.c58)AND('-1977052794')))AND(t1.c19)) AS BLOB) FROM vt0 RIGHT OUTER JOIN t1 ON NULL INNER JOIN t0 ON ((((((t1.c19)>=(t0.c59)))OR(((t1.c58) NOT BETWEEN (t1.c19) AND (t0.c59)))))OR((t1.c58 IN ()))) WHERE (((CAST('-251229535' AS TEXT))+((x'' IN (0.21282705211673658))))); -- 2ms;
SELECT CASE ((vt0.c0)==(t0.c59))  WHEN UNICODE(t0.c59) THEN ((NULL)*(t1.c19)) ELSE ((t0.c59) IS TRUE) END FROM t1, t0;SELECT ALL ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t0.c59 THEN t1.c58 WHEN '-1977865077' THEN t1.c19 ELSE t1.c58 END) ISNULL) FROM vt0, t1 GROUP BY ((((0.4665964667510286)+(t1.c19)))LIKE(((((((((t1.c58)OR(vt0.c0)))OR(t1.c19)))AND(vt0.c0)))AND(t1.c0)))), ABS(DISTINCT ((t1.c19)IS NOT(t1.c0))), (NOT (((t1.c0) IS FALSE))) HAVING COUNT((('-1936791947')|(t0.c59)));SELECT DISTINCT CAST((((t1.c58, t0.c59, NULL)) NOT BETWEEN ((t1.c58, vt0.c0, t1.c19)) AND ((vt0.c0, t1.c58, t1.c0))) AS BLOB), ((CAST(0.6245980778336452 AS TEXT)) BETWEEN (((t1.c0) NOTNULL)) AND (NULL)), ((((((NULL) BETWEEN (NULL) AND (t0.c59)))OR(((t1.c19) NOT NULL))))AND(((((vt0.c0)OR(t1.c58)))AND(t0.c59)))) FROM t1 WHERE (NULL COLLATE BINARY);SELECT DISTINCT NULLIF(HEX(t1.c0), ((((t1.c19)AND(t1.c58)))AND(t0.c59))) FROM t1, t0; -- 0ms;
SELECT DISTINCT (((((t1.c58)) BETWEEN ((t1.c19)) AND ((t1.c0)))) BETWEEN ((+ (vt0.c0))) AND (((t1.c58)+(0.8067579249800287)))) FROM t1, vt0 WHERE ((((NOT (x''))) IS TRUE)) ORDER BY (((t1.c58 IN ()))>(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST LIMIT 1791020625; -- 1ms;
SELECT LOWER(DISTINCT t1.c0) FROM vt0 WHERE (((x'') BETWEEN (NULL) AND ('856754875')) COLLATE BINARY COLLATE BINARY) ORDER BY ((CASE t1.c58  WHEN t1.c58 THEN t1.c19 END) NOT NULL), (((''))=((t1.c0 COLLATE RTRIM))) ASC, ((((((vt0.c0) NOT BETWEEN (t0.c59) AND (t1.c0)))AND((t1.c19 IN ()))))OR(json(vt0.c0)));SELECT ALL TOTAL(CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c19 END) FILTER(WHERE '-1222612470') OVER (), CAST(CAST(t1.c58 AS REAL) AS BLOB), (((t1.c19)>=(NULL)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c58)))), 0.05243584590045747, (((((x'')LIKE(t1.c58)), CAST(t0.c59 AS NUMERIC), ((t1.c58) NOT BETWEEN (t1.c0) AND (t0.c59))))>((LTRIM(vt0.c0), UNICODE(t0.c59), vt0.c0 COLLATE NOCASE))) FROM vt0, t1, t0 WHERE ((NOT (((((((((0.5815846003863655)AND(x'')))OR(NULL)))OR(0xffffffffe989d93f)))AND(0.8630665572068451))))); -- 0ms;
SELECT t1.c19 FROM t0;SELECT ALL AVG(NULL) COLLATE BINARY FROM t0, t1 WHERE (CAST((((0.4870144214859288)) NOT BETWEEN (('_z')) AND ((x''))) AS TEXT)) GROUP BY (('-349821078')<=((t1.c58 IN (t1.c58, t1.c58)))); -- 1ms;
SELECT LTRIM(IFNULL(t1.c58, vt0.c0), ((t1.c19)AND(t1.c19))), 0Xffffffffe9310d45, COUNT(*) OVER ( ORDER BY ((((t0.c59) BETWEEN (t1.c0) AND (vt0.c0)))IS NOT(((t1.c19) ISNULL)))  NULLS LAST) FROM t0, t1 GROUP BY (- (((t1.c58)GLOB('0.03504718517843319')))), ((HEX(DISTINCT vt0.c0))OR(vt0.c0 COLLATE RTRIM)), (CAST(t1.c0 AS REAL) IN (NULLIF(t1.c58, t0.c59))) HAVING CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c58)) THEN COUNT(*) END;SELECT DISTINCT (- (((((t0.c59)OR(t1.c19)))AND(t0.c59)))) FROM t1;SELECT ((INSTR(t0.c59, t1.c0)) NOT BETWEEN (((((vt0.c0)AND(0.7698136294345141)))AND(t1.c0))) AND (LOWER(DISTINCT x''))), SUM((t1.c19 IN ())), ((((((((((t0.c59)AND(t1.c58)))AND(t0.c59)))OR(t1.c0)))OR('-227356572'))) IS FALSE) FROM vt0, t0 GROUP BY ((((t0.c59) ISNULL)) IS FALSE) HAVING ((((MAX(t1.c0))OR(((t0.c59)>>(t0.c59)))))AND(CASE WHEN t1.c58 THEN t0.c59 WHEN t1.c0 THEN NULL WHEN t1.c19 THEN t1.c19 END));SELECT ALL ((((((((-7.6652725E7)OR(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c58)))))OR(((t1.c58)>(t0.c59)))))AND((~ (vt0.c0)))))AND(((((t1.c19)AND(t1.c58)))OR(vt0.c0)))), (((t1.c58))<=((((t0.c59) ISNULL)))), (((NOT (t1.c58)))<>(CASE WHEN t1.c19 THEN t1.c19 WHEN t1.c58 THEN t1.c0 WHEN t0.c59 THEN 0.8587913464208536 ELSE vt0.c0 END)) FROM t0 WHERE (((x'94e0') NOTNULL) COLLATE NOCASE);SELECT DISTINCT CASE t1.c19  WHEN (+ (t1.c58)) THEN COUNT(*) END, (+ (((t1.c19) NOT NULL))), LEAD(CASE (~ (t1.c19))  WHEN ((t1.c19)||(t1.c0)) THEN CASE WHEN t1.c58 THEN t0.c59 END END, CAST((((t1.c0, t1.c58, t1.c0))!=((t1.c0, t1.c19, vt0.c0))) AS INTEGER), NULL) OVER () FROM t1, t0, vt0 WHERE (NULL); -- 0ms;
SELECT ALL (t1.c0 IN ()) FROM t1 LIMIT 903394940 OFFSET -1264301654; -- 0ms;
SELECT ALL TOTAL(((((0.9983864393210126)AND(vt0.c0)))AND(vt0.c0))) FROM t0, t1 WHERE ('\n䮙');SELECT DISTINCT ((x'8588')>>(COUNT(vt0.c0))) FROM t1, t0 WHERE (CASE (('-251450341') BETWEEN (1400330436) AND ('z%mc&]'))  WHEN (('yK}U]JW1') NOTNULL) THEN ((1922899319) BETWEEN (x'db70') AND (x'1f60')) ELSE ((NULL)GLOB(NULL)) END);SELECT DISTINCT CAST(TOTAL(t1.c0) AS BLOB) FROM vt0;SELECT DISTINCT (~ (((t1.c19) ISNULL))), ((((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c59))) NOTNULL), ((vt0.c0 COLLATE NOCASE)&(MAX(t1.c0))) FROM vt0, t1, t0 WHERE (((GLOB(NULL, NULL))<>(((NULL) NOT BETWEEN ('tFLu?I\b') AND ('-1213539669'))))); -- 0ms;
SELECT DISTINCT LIKE(MIN(0x1453a556), t1.c19 COLLATE NOCASE), (((vt0.c0, vt0.c0, t1.c0)) BETWEEN ((CASE WHEN t1.c58 THEN t1.c0 END, ((vt0.c0) IS TRUE), t1.c58)) AND (((t1.c58 IN ()), (t1.c19 IN ()), NULL))), CAST(CAST(t0.c59 AS REAL) AS INTEGER) FROM vt0, t1 WHERE ((x'' IN ()));SELECT DISTINCT NTILE(((t0.c59) BETWEEN (CASE WHEN t1.c58 THEN t1.c0 WHEN t1.c19 THEN t1.c58 WHEN t1.c58 THEN t1.c19 ELSE t1.c58 END) AND (t1.c0 COLLATE RTRIM))) OVER () FROM t0, t1 GROUP BY (CASE WHEN t0.c59 THEN t1.c0 WHEN t1.c58 THEN vt0.c0 WHEN t1.c19 THEN t1.c0 ELSE t0.c59 END IN ()) HAVING (((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((((t1.c0)<=(vt0.c0)))));SELECT DISTINCT MIN((t1.c0 IN ())) FROM vt0, t1, t0 ORDER BY CASE (((t1.c19)) BETWEEN ((t1.c58)) AND ((-1.235651422E9)))  WHEN ((((t1.c0)AND(t1.c0)))OR(t1.c58)) THEN NULL WHEN (('-991556315')/(t1.c19)) THEN LIKELIHOOD(t1.c58, 0.8910844905268943) WHEN CAST(t1.c19 AS INTEGER) THEN CAST(t1.c58 AS REAL) WHEN (((((((((((('')AND(t0.c59)))AND(t1.c0)))AND(t0.c59)))AND(vt0.c0)))OR(t0.c59)))AND(t0.c59)) THEN (- (0.9375553696972942)) WHEN CAST(t1.c0 AS TEXT) THEN CAST(t0.c59 AS REAL) END ASC  NULLS LAST, (- ((NOT (t0.c59)))), LENGTH(CASE WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c19 THEN vt0.c0 WHEN 0xffffffff833b2069 THEN t1.c58 END)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t1.c19, ((t1.c0) BETWEEN ('쩒') AND (t0.c59)), CAST(vt0.c0 AS TEXT)))>=((((((((((t0.c59)OR(t1.c19)))AND(t1.c58)))AND(t1.c58)))OR(t1.c58)), (- (t1.c58)), ((t1.c0) BETWEEN (t0.c59) AND (t1.c19))))), (((t1.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((((t1.c58)GLOB(t1.c19))))), LAG(NULL, CAST(((t1.c0) BETWEEN (vt0.c0) AND (t1.c0)) AS BLOB), ((((((((((vt0.c0)OR(t1.c19)))AND(t1.c0)))AND(t1.c0)))OR('FPpB7?n')))IS(((((t1.c0)OR(t0.c59)))AND(t1.c58))))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM t0, vt0, t1 WHERE (CAST(((((0X2c7a4e99)AND(' R+Q')))AND(NULL)) AS BLOB)); -- 0ms;
SELECT CAST(HEX(vt0.c0) AS INTEGER) FROM t1;SELECT (- ((- (t0.c59)))) FROM vt0, t1, t0 WHERE (CASE CAST(x'' AS REAL)  WHEN (((x'7f3f4e21'))!=((x''))) THEN CAST(x'' AS TEXT) END); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM t0, vt0 NOT INDEXED; -- 0ms;
SELECT LIKELIHOOD((- (vt0.c0)), 0.1885501224985604), ((((vt0.c0)+(t1.c58))) BETWEEN (CAST(t1.c58 AS NUMERIC)) AND (((t1.c0) IS FALSE))), GROUP_CONCAT(((vt0.c0)*(t1.c58))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING) FROM vt0 INDEXED BY i64, t0, t1;SELECT DISTINCT (t1.c0 IN ()) FROM t1 WHERE (((('-421210832' COLLATE RTRIM))>((CAST(0.14518881602019085 AS REAL))))) ORDER BY ((('' IN ())) NOT BETWEEN (((0.7129058930264726)%(t0.c59))) AND (((t1.c58)!=(t1.c0)))) ASC  NULLS LAST;SELECT CAST((((t1.c58))<>((t1.c0))) AS BLOB) FROM t1; -- 0ms;
SELECT ALL COUNT(((vt0.c0)<<(vt0.c0))) OVER () FROM t1, vt0, t0 ORDER BY (('-1291345123')LIKE(CAST(t0.c59 AS TEXT))) ASC  NULLS LAST; -- 2ms;
SELECT (CAST(t1.c0 AS INTEGER) IN (LOWER(DISTINCT t1.c19))), vt0.c0, CASE WHEN t1.c0 THEN ((vt0.c0) ISNULL) WHEN (((t1.c19, t0.c59, vt0.c0)) BETWEEN ((t1.c58, t1.c19, vt0.c0)) AND ((t0.c59, vt0.c0, t1.c58))) THEN CASE t0.c59  WHEN t0.c59 THEN t1.c19 END WHEN ((NULL)LIKE(t1.c58)) THEN (((t1.c58))<=((t1.c58))) END FROM vt0, t0, t1; -- 0ms;
SELECT DISTINCT (+ (((t1.c0)=(t1.c0)))) FROM t0, vt0, t1; -- 0ms;
SELECT DISTINCT ((CAST(x'' AS REAL)) BETWEEN (t1.c58) AND (t0.c59 COLLATE BINARY)), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c59)))*(((t1.c0) BETWEEN (vt0.c0) AND (t1.c0)))), t1.c19 FROM t1, t0, vt0 WHERE ((('746213017' IN ('')) IN ())); -- 1ms;
SELECT DISTINCT CAST((((vt0.c0, '1271121047', vt0.c0)) BETWEEN ((t1.c19, t1.c58, t1.c19)) AND ((t1.c0, t1.c19, t1.c0))) AS INTEGER) FROM t0, t1;SELECT t1.c58 FROM t0 WHERE (json_insert(((((0.40162139961895016)OR(-1e500)))AND(NULL)), (((x'', '-1897919759', NULL, -395032584, '42'))>=((0.5044622178959393, x'', x'', x'', x'4e8c'))), (((('-245506680')OR(0.5562953142919994)))OR(0.45417980280352965)), ((x'830f') NOT BETWEEN (NULL) AND (x'3767')), CAST('' AS INTEGER))) LIMIT 1121970 OFFSET -753057333;SELECT DISTINCT SUM(((t1.c0) BETWEEN (NULL) AND (t0.c59))) OVER ( PARTITION BY (((- (t1.c19))) NOTNULL), (- (CASE t0.c59  WHEN t1.c19 THEN t0.c59 ELSE t0.c59 END))) FROM t1 WHERE (CAST(0.20122983902186264 AS REAL)) GROUP BY (NOT (t1.c0)) COLLATE BINARY;SELECT ((((((t1.c19)OR(t1.c58)))OR(t0.c59))) ISNULL) FROM vt0, t0, t1; -- 0ms;
SELECT DISTINCT CAST(((t1.c58)+(t1.c58)) AS REAL) FROM t1, t0; -- 0ms;
SELECT DENSE_RANK() OVER (), TOTAL(((t1.c58) NOT BETWEEN (t1.c0) AND (vt0.c0))), CAST((NOT (t1.c0)) AS INTEGER) FROM t0 WHERE (((((((NULL)OR(-1064176733)))OR(x'')))OR(((x'')/(x'b07d')))));SELECT ALL vt0.c0, (~ ((- (t1.c58)))), (CAST(t1.c0 AS REAL) IN ()) FROM vt0, t1, t0; -- 0ms;
SELECT DISTINCT (('X')*(t1.c19)), ((AVG(t1.c0))<(((t1.c19)*(t1.c0)))), TIME(((t1.c19) NOT BETWEEN (t1.c58) AND (vt0.c0)), ((vt0.c0)GLOB(t0.c59)), t0.c59), ((((t0.c59)AND(t1.c0)))-(((NULL) NOT BETWEEN (t1.c58) AND (t1.c19)))), (((((((((t1.c58 IN ()))OR(((t1.c19)<(t1.c19)))))OR((- (vt0.c0)))))OR((((vt0.c0))!=((t1.c19))))))AND(MAX(t1.c58))) FROM t0, t1, vt0; -- 1ms;
SELECT DISTINCT (NOT (CAST(0.5910289857232037 AS NUMERIC))) FROM t0, vt0 ORDER BY ((json_array_length(t1.c58, -9.16085336E8)) NOT BETWEEN (HEX(t1.c19)) AND (CASE t0.c59  WHEN t1.c58 THEN t1.c0 END)), t1.c58 ASC  NULLS FIRST;SELECT ALL CASE WHEN vt0.c0 THEN t1.c58 END COLLATE RTRIM FROM t1, vt0, t0 WHERE (((((((0x336c012c) NOT NULL))OR('KO')))AND(((-1906853010)=('-480800075'))))); -- 0ms;
SELECT ALL ((AVG(vt0.c0))GLOB(json_array_length(vt0.c0, t0.c59))) FROM t1;SELECT ALL (((((t1.c58)+(t1.c0))))>=((((t0.c59) IS FALSE)))) FROM vt0, t0;SELECT ALL CUME_DIST() OVER () FROM vt0, t1, t0 WHERE ((('5H?\\' COLLATE BINARY) NOT BETWEEN ((('0.7116489263724896') BETWEEN (0.9993793168634209) AND (1726094108))) AND (((x'') NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((COUNT(t0.c59))>(CASE t0.c59  WHEN NULL THEN t1.c58 ELSE vt0.c0 END)) FROM t1, vt0, t0; -- 1ms;
SELECT ALL CAST(((t1.c58)|(t0.c59)) AS REAL) FROM t1, vt0;SELECT ((('-4296489', t1.c19, '{kyv~E}')) NOT BETWEEN ((t0.c59, AVG(t1.c19), CASE t1.c58  WHEN t0.c59 THEN vt0.c0 ELSE '418619246' END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(t0.c59 AS TEXT), (~ (t1.c19))))) FROM t0, vt0, t1 ORDER BY vt0.c0  NULLS FIRST; -- 0ms;
SELECT ALL ((((NOT (t1.c19)), (((t1.c19, t0.c59, t1.c58)) NOT BETWEEN ((vt0.c0, t1.c58, t1.c58)) AND ((t1.c19, t1.c19, vt0.c0))), LIKELY(DISTINCT t1.c58), (~ (vt0.c0)), 'mLL'))!=(((+ (t1.c58)), ((t1.c19) IS TRUE), CAST(t0.c59 AS REAL), (t1.c19 IN (x'2d33')), ((t1.c19) BETWEEN (t1.c19) AND (vt0.c0))))) FROM vt0 WHERE (TYPEOF(LIKELY(-738441509)));SELECT ALL (((t1.c58)) NOT BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((AVG(t0.c59)))) FROM t1, t0; -- 1ms;
SELECT DISTINCT 0.06600731451525954, CASE WHEN t1.c0 COLLATE BINARY THEN ((t0.c59) BETWEEN (t0.c59) AND (t1.c58)) ELSE ((((t0.c59)AND(t1.c19)))OR(vt0.c0)) END, CASE TIME(t0.c59, '-329409883', x'')  WHEN CASE t1.c19  WHEN t1.c58 THEN t1.c0 WHEN t0.c59 THEN t1.c58 WHEN t1.c58 THEN t1.c19 END THEN vt0.c0 COLLATE RTRIM ELSE LENGTH(t0.c59) END FROM vt0, t1 WHERE ((('\42_U&k' IN (1874600665)) IN ())) ORDER BY TRIM((t1.c58 IN (t1.c58))) DESC  NULLS FIRST;SELECT CAST(t1.c0 COLLATE BINARY AS REAL) FROM t0 WHERE (CAST((((NULL))>=(('0.5387236407445607'))) AS TEXT));SELECT (((NULL IN ())) IS TRUE) FROM t1, vt0 WHERE ((CAST('-1213539669' AS NUMERIC) IN ())) LIMIT -880168970 OFFSET -1846465572; -- 0ms;
SELECT DISTINCT (((t1.c58)) NOT BETWEEN (((t1.c0 IN ()))) AND (((+ (NULL))))) FROM t0 WHERE ((((x'')||(x'')) IN ())) GROUP BY ((((((((LOWER(t1.c58))AND(0.08636711213387815)))OR(CASE WHEN t1.c0 THEN t0.c59 ELSE t1.c19 END)))OR(CASE WHEN t1.c19 THEN t1.c58 ELSE t1.c58 END)))AND((~ (x'114c'))));SELECT DISTINCT RANK() OVER () FROM t0 WHERE ((((((0.9299004060239764))==(('mLL'))))>(((0.5463207370855775) NOT BETWEEN (x'') AND (x''))))); -- 1ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((x'')GLOB(vt0.c0))) AND ((((t1.c0))>((t1.c0))))) FROM t1, vt0 ORDER BY (+ (CASE t1.c19  WHEN t1.c19 THEN t1.c19 ELSE '-1235651422' END)) ASC; -- 0ms;
SELECT DISTINCT ((t1.c0) NOT BETWEEN (t1.c19) AND (t1.c0)) COLLATE BINARY FROM vt0, t0 WHERE (((((0.7721467749185843) NOT NULL)) NOT BETWEEN (CASE x''  WHEN 0.4665964667510286 THEN 0.6715360618824125 ELSE '-1906853010' END) AND (((0xffffffffad0db010)=('<F&Y')))));SELECT TRIM(t1.c19 COLLATE NOCASE, CASE WHEN '1234197027' THEN t1.c0 WHEN vt0.c0 THEN t1.c58 WHEN vt0.c0 THEN t1.c0 END) FROM t1, vt0 WHERE (CAST((('!汓(7')&(NULL)) AS NUMERIC)) GROUP BY (((((t0.c59 IN ()))AND(UPPER(DISTINCT t1.c0))))AND(((t1.c0) NOT NULL))), (((((t1.c58)AND('1648824553')))AND(t0.c59)) IN ()), (((((t0.c59))=((t1.c0)))) NOT NULL), 0.5074832399385047, CHAR((NOT (t1.c19))) HAVING ((((t1.c19)+(t1.c0)))>(NULLIF(DISTINCT t1.c19, 0.491780809183739)));SELECT DISTINCT ((t1.c0)<(t0.c59)) COLLATE RTRIM FROM t1 LIMIT 37910137;SELECT ((((0.6861721647631855)IS NOT(vt0.c0)))<<((t1.c0 IN ()))) FROM t0, t1 WHERE (CAST((((NULL))>=((''))) AS TEXT));SELECT DISTINCT (('') NOT BETWEEN (((t1.c19) NOTNULL)) AND (CASE t1.c58  WHEN t0.c59 THEN vt0.c0 END)) FROM t0, t1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0) BETWEEN (t1.c0) AND (t0.c59)) IN (((vt0.c0) NOT BETWEEN (t1.c58) AND (t1.c58)))) FROM vt0 INDEXED BY i64 LIMIT -683614563 OFFSET 343927818;SELECT DISTINCT MIN('') FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((((t0.c59) NOT NULL))AND(CASE t1.c0  WHEN vt0.c0 THEN t0.c59 ELSE vt0.c0 END)))AND(((t1.c0)IS NOT(t1.c19)))), ((x'') IS TRUE), (~ (CAST(t0.c59 AS INTEGER))) FROM t1 RIGHT OUTER JOIN t0 ON ('-494101503' COLLATE RTRIM IN ((~ (t1.c19)))) WHERE (((((0x36948bf6) BETWEEN ('{%') AND ('0.4509685505054277'))) ISNULL));SELECT ((t1.c0) BETWEEN (NULL) AND (QUOTE(vt0.c0))), ((((t1.c58)%(0.6952765914767179)))%(((t0.c59) BETWEEN (t1.c58) AND (t0.c59)))), CAST(((vt0.c0) IS TRUE) AS REAL) FROM t1, vt0, t0; -- 0ms;
SELECT (((t1.c58) IS TRUE) IN ()) FROM vt0, t0, t1; -- 0ms;
SELECT DISTINCT (NOT (AVG(vt0.c0))) FROM t1;SELECT DISTINCT 0.02981223963614732, ((COUNT(*)) NOT BETWEEN (CAST(t0.c59 AS NUMERIC)) AND (t1.c0)), UPPER(((t1.c58)/(t1.c19))) FROM t1, vt0 WHERE ((((('xrh#1bfs') ISNULL))GLOB((((NULL))!=((x'')))))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c58 END THEN ((t1.c0)LIKE(vt0.c0)) END ASC, (t1.c58 IN (UPPER(t1.c19), ((t1.c19) IS TRUE))) ASC;SELECT ALL json_insert(CAST(t0.c59 AS REAL), -1936791947, (('!汓(7') NOT BETWEEN (t1.c58) AND (t1.c0)), ((vt0.c0)IS NOT(x'')), ((t1.c0)>=(t1.c0))) FROM t0 WHERE ((+ ((- (NULL)))));SELECT ALL (+ (COUNT(*))), CASE WHEN ((t1.c19) NOT NULL) THEN (((t1.c0))==((t1.c0))) WHEN (('1764302322')*(t0.c59)) THEN ('-444716769' IN ()) WHEN LOWER(t0.c59) THEN ((t0.c59) NOTNULL) END, ((t0.c59)<=(t1.c58)) COLLATE BINARY FROM vt0, t0, t1 GROUP BY (NOT (((t1.c58)|(t1.c58)))) HAVING t0.c59; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY (((((((((('-1065021067')IS NOT(vt0.c0)))OR((~ (NULL)))))AND((+ (0.5731363662055202)))))OR(t1.c58 COLLATE RTRIM)))AND(CASE WHEN t1.c58 THEN t1.c0 END)) DESC) FROM t1, t0, vt0 LIMIT 1817302284 OFFSET -791009700; -- 2ms;
SELECT ((t1.c58)%(t1.c58)) COLLATE NOCASE FROM vt0, t0;SELECT ((((AVG(t1.c19))OR(((((t1.c0)AND(t1.c19)))OR(t0.c59)))))OR(((NULL) ISNULL))) FROM t1 GROUP BY ((NULL)=(((NULL) BETWEEN (t0.c59) AND (t1.c0)))) HAVING ((((((t1.c58)AND(0.01510518037242703)))AND(t1.c0))) NOT NULL);SELECT DISTINCT (((((((((((('-824568419')OR(t1.c19)))OR(t1.c19)))OR(((vt0.c0)<=(t1.c58)))))AND((- (t0.c59)))))OR(LIKELY(t1.c58))))AND(CASE t0.c59  WHEN t1.c19 THEN t1.c19 WHEN t1.c19 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c59 THEN t1.c58 WHEN vt0.c0 THEN t1.c58 ELSE t0.c59 END)), (((vt0.c0)) NOT BETWEEN ((t1.c0 COLLATE BINARY)) AND ((CASE vt0.c0  WHEN t1.c58 THEN 0.19841566881035722 ELSE t1.c0 END))), ((vt0.c0) NOT BETWEEN (((((t1.c19)OR(x'')))AND(x''))) AND (CAST(t1.c0 AS INTEGER))) FROM t0, vt0, t1 WHERE (((LIKELY(7.46213017E8)) NOT BETWEEN ((('') IS FALSE)) AND ((((x''))<((x'')))))); -- 0ms;
SELECT DISTINCT ((((t1.c58) ISNULL))*(MAX('-219767957'))) FROM vt0, t1 WHERE (((((NULL) NOT NULL))-((-2141825770 IN ())))); -- 0ms;
SELECT LTRIM(((vt0.c0)%(t1.c0))) FROM vt0, t0, t1; -- 0ms;
SELECT '0.19150717429466002' FROM t1; -- 0ms;
SELECT CAST(((t0.c59) NOTNULL) AS TEXT), ((UNLIKELY(t0.c59))-(((((((((t1.c58)OR(t1.c19)))OR(t1.c0)))AND(vt0.c0)))AND(t0.c59)))), MAX(((t1.c0)OR(t1.c19))) FROM t1;SELECT (((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c19)))AND(t1.c19)))OR(t0.c59)))OR(t1.c19)))OR(0xfffffffffe718e82))))<>((((0Xffffffffcf402aa4) IS FALSE)))), ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (CAST(vt0.c0 AS INTEGER))), ((((t1.c19)|(t1.c0)))>>(CAST(vt0.c0 AS INTEGER))) FROM t1;SELECT DISTINCT ((((((t1.c19)=(t1.c19)))OR(CAST(t1.c0 AS BLOB))))AND((((x''))<((vt0.c0))))), ((((((t0.c59) ISNULL))OR(((t0.c59) IS TRUE))))OR(TOTAL(t1.c58))), CAST(AVG(t1.c0) AS TEXT) FROM vt0, t0 WHERE (((((((((((0.670531953198551)OR(x'')))AND('5CA䌵!,')))AND(x'')))OR('')))<(json(-1.677682291E9))));SELECT DISTINCT ((((t0.c59 COLLATE NOCASE)OR(MAX(t1.c0))))AND((((vt0.c0, t1.c0, t1.c19, t1.c58, t1.c19)) NOT BETWEEN ((t1.c19, t1.c19, t1.c19, t0.c59, t1.c58)) AND ((t1.c0, t1.c0, t1.c58, vt0.c0, t1.c0))))), CAST(((t1.c0) NOT BETWEEN (t0.c59) AND (t1.c19)) AS REAL), (((NULL)) NOT BETWEEN ((t1.c19)) AND ((CASE '0.1774617641221411'  WHEN t1.c19 THEN t1.c0 WHEN t0.c59 THEN t0.c59 WHEN t1.c19 THEN t0.c59 END))) FROM vt0, t0, t1 WHERE (((((-970523994) BETWEEN ('1679702281') AND ('kOgst~} ')))>=((('w/')IS(NULL))))); -- 0ms;
SELECT DISTINCT ((CASE t1.c58  WHEN t1.c19 THEN vt0.c0 WHEN t1.c19 THEN t1.c19 WHEN t1.c19 THEN vt0.c0 END)<<(COUNT(t1.c19))) FROM t1, vt0; -- 1ms;
SELECT DISTINCT ((((NULL)AND((((t1.c58)) NOT BETWEEN ((vt0.c0)) AND ((t1.c19))))))AND(((t1.c19) NOT NULL))), ('0.24068979629098886' COLLATE NOCASE IN ()), NULLIF(t0.c59, t1.c19) FROM t0, vt0, t1; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN t1.c58 THEN t0.c59 WHEN t1.c58 THEN t1.c58 WHEN vt0.c0 THEN t1.c0 END COLLATE RTRIM FROM vt0, t0, t1 ORDER BY ((CASE WHEN t1.c0 THEN t0.c59 ELSE t1.c19 END) NOT BETWEEN (UNLIKELY(DISTINCT t1.c0)) AND ((NULL IN ()))) DESC, 0xffffffff80d656dc DESC, ((((((t1.c0) NOT NULL))AND(0X111eb2)))AND(CAST(t1.c58 AS INTEGER))) ASC LIMIT 1290637592 OFFSET -1025094110; -- 0ms;
SELECT ALL NULL, ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(AVG(vt0.c0))))AND(CASE WHEN t1.c19 THEN t1.c58 END)), highlight(((NULL)|(t0.c59)), HEX(DISTINCT t1.c19), (- (t0.c59)), ((t0.c59)LIKE(vt0.c0))) FROM vt0, t1 WHERE (((0.13758876220243177 COLLATE NOCASE)&('<KHR')));SELECT ((((((((((((t1.c19)AND(t1.c58)))AND(t1.c58)))AND(t1.c19)))OR(t1.c19)))OR((+ (t1.c58)))))OR(CASE WHEN t1.c0 THEN t1.c19 WHEN t1.c19 THEN t0.c59 WHEN t1.c0 THEN x'' END)) FROM vt0 NATURAL JOIN t0 WHERE ((((CAST(-189831590 AS BLOB)))>=(((0x45f97c67 IN ())))));SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)AND(((t1.c0)+(vt0.c0)))) FROM vt0 WHERE ((~ (((0.5415949110685625) NOT NULL))));SELECT ALL AVG(t0.c59) FROM t0; -- 0ms;
SELECT t0.c59, json_object(((((((((0.23778394295357252)AND(t1.c19)))OR(vt0.c0)))OR(t1.c0)))AND(t1.c19)), (t1.c19 IN (t1.c58, vt0.c0))), (((((t0.c59)) BETWEEN ((vt0.c0)) AND ((t1.c19))))LIKE(((vt0.c0)>(t1.c19)))) FROM vt0 WHERE (LAST_INSERT_ROWID());SELECT COUNT(CAST(t1.c0 AS NUMERIC)) OVER (), SUM(CAST(t1.c19 AS BLOB)), ((t1.c0 COLLATE RTRIM)GLOB((~ (t1.c0)))) FROM t1 WHERE (CASE WHEN (+ (0X28e31817)) THEN 0.8371769557960218 WHEN (((((((('1854246778')AND('')))AND('-977230548')))OR('-1057161491')))AND(NULL)) THEN 0.3080783015682549 WHEN ((0.6472948620571894) IS FALSE) THEN (((('R')AND(x'')))AND('637124834')) END); -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (t0.c59) AND (t1.c19)) COLLATE NOCASE, CAST(CASE WHEN t1.c0 THEN t1.c19 END AS BLOB), (((t1.c58) NOT BETWEEN (t0.c59) AND (t1.c0)) IN ()), (x'' IN ((((t1.c19))<=((vt0.c0))))), ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c58)IS(t1.c19))) AND ((NULL IN ()))) FROM t1, t0 WHERE (((CASE WHEN NULL THEN -4.94101503E8 WHEN 0.11692842818237159 THEN '-1013358085' WHEN x'a6e7' THEN '-352736650' WHEN -290474689 THEN '' WHEN '' THEN NULL ELSE '1091269232' END)OR((('')&(1.20251552E8)))));SELECT DISTINCT (+ (COUNT(*))), ((CASE t1.c0  WHEN t1.c58 THEN t1.c58 ELSE t1.c58 END)LIKE(((((((((t0.c59)AND(vt0.c0)))OR(t1.c19)))AND(t1.c58)))AND(t1.c58)))), ((CAST(vt0.c0 AS TEXT))*(t1.c58 COLLATE RTRIM)), LAG(((((CAST(t1.c58 AS NUMERIC))OR(((t1.c0)GLOB(t1.c0)))))OR(((t1.c0) IS TRUE))), ((t1.c19) BETWEEN (((t1.c19) NOT BETWEEN (t1.c19) AND (t1.c0))) AND (COALESCE(t1.c0, t1.c58, t1.c58, t1.c0))), t1.c58) OVER (), (((t1.c19 COLLATE RTRIM, (- (t1.c58)), CASE '278322775'  WHEN t0.c59 THEN '1024272739' ELSE t0.c59 END, TOTAL(t1.c19), HEX(DISTINCT vt0.c0)))<=((((vt0.c0)%(t1.c0)), 1084657085, ((t1.c58) NOT BETWEEN (vt0.c0) AND (t1.c19)), TRIM(vt0.c0), (- (t1.c58))))) FROM t1;SELECT ALL t1.c58 FROM t1, t0; -- 0ms;
SELECT DISTINCT AVG(((((t1.c19)AND(t1.c19)))OR(t0.c59))), CAST(ABS(t1.c58) AS NUMERIC), (((NOT (vt0.c0))) ISNULL) FROM t0 WHERE (CASE WHEN CAST(808710290 AS NUMERIC) THEN '' COLLATE RTRIM END) ORDER BY (t1.c19 IN (t1.c19, t1.c19)) COLLATE NOCASE  NULLS FIRST;SELECT DISTINCT LAG(t0.c59, vt0.c0, CASE t1.c0 COLLATE BINARY  WHEN CASE WHEN t0.c59 THEN t1.c58 END THEN 0.6899382136239296 COLLATE BINARY ELSE CAST(t1.c19 AS NUMERIC) END) OVER (), ((t1.c0)<<((~ (t1.c19)))), NULLIF(DISTINCT (t1.c58 IN (vt0.c0)), LIKELY(DISTINCT t0.c59)), (((t1.c58 IN ())) BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 END) AND (LTRIM(vt0.c0))), (((((t1.c0 IN (t1.c58, t1.c0, t1.c0)))AND(CASE WHEN 746213017 THEN vt0.c0 WHEN t1.c19 THEN t1.c0 WHEN t1.c0 THEN 0.8073114872508572 END)))AND(((t1.c58)<(t1.c58)))) FROM t1, t0, vt0; -- 0ms;
SELECT DISTINCT ')ymq[' FROM t0; -- 0ms;
SELECT ALL AVG(((vt0.c0) IS TRUE)) OVER () FROM vt0, t1, t0 WHERE ((((x'' IN ())) NOT BETWEEN (((NULL) IS FALSE)) AND (((('1781767538'))>=(('-966540231')))))); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((t1.c19)>>(t0.c59)), ((t1.c0)LIKE(t1.c19))) FROM t1 WHERE ((((x'e186')) BETWEEN ((CAST(0.9650770210505288 AS TEXT))) AND (((~ (0.6844043115228754)))))) ORDER BY (((((t1.c0, t0.c59, vt0.c0)) BETWEEN ((t1.c0, t1.c19, t1.c19)) AND ((x'', t0.c59, t1.c19)))) NOT NULL);SELECT ALL (t1.c58 COLLATE BINARY IN ()), SUM(((t1.c0)>=(vt0.c0))) OVER ( ORDER BY CAST(t1.c0 AS TEXT)), LEAD(ABS(((t0.c59)LIKE(t0.c59))), CAST(((x'') NOT BETWEEN (t0.c59) AND (t0.c59)) AS NUMERIC), ((((t0.c59)AND(t0.c59))) NOT BETWEEN (CAST(t0.c59 AS NUMERIC)) AND ((((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c59)))))) OVER () FROM t0;SELECT DISTINCT TOTAL(((((t0.c59)OR(vt0.c0)))AND(t1.c0))) OVER () FROM t0, vt0, t1 WHERE (NULL); -- 0ms;
SELECT (((((NULL IN ()))OR(((x'') NOT BETWEEN (t0.c59) AND (t1.c58)))))OR(t1.c0)) FROM t0, t1 INTERSECT SELECT DISTINCT MIN(((t1.c58) BETWEEN (vt0.c0) AND (t1.c58))) COLLATE NOCASE FROM t0, vt0, t1 WHERE ((((('', -1.732813738E9, NULL))<=((0X205cf5d, NULL, x''))) IN ())); -- 1ms;
SELECT ALL 0.44582006225393467 FROM t0, t1, vt0 WHERE (CASE WHEN '1714852781' THEN HEX(x'') ELSE NULL END); -- 0ms;
SELECT DISTINCT ((((((t1.c0)AND(vt0.c0)))AND(t1.c58)))<<((t1.c19 IN ()))) FROM t1, vt0, t0; -- 0ms;
SELECT ALL CAST(CAST(t0.c59 AS NUMERIC) AS BLOB) FROM vt0, t0 WHERE ((((((((((((x'')OR(x'cc4d')))AND(-219767957)))AND('826557843')))OR(''))))>((((x'') IS FALSE))))) GROUP BY ((((((((((((t1.c0)OR((NOT (t1.c19)))))AND(((t0.c59)-(t1.c0)))))AND(NULLIF(DISTINCT t0.c59, t0.c59))))AND((t1.c58 IN ()))))AND(((t1.c0)<>(t1.c58)))))AND((t1.c58 IN ()))) HAVING CASE (NULL IN (t0.c59))  WHEN NULL THEN COUNT(*) ELSE AVG(vt0.c0) END;SELECT DISTINCT GROUP_CONCAT(CAST(t1.c0 AS NUMERIC)), ((+ (t0.c59)) IN (((((t0.c59)AND(t1.c58)))AND(NULL)), '598426078')), MIN((((0x7589bc33)) NOT BETWEEN ((t0.c59)) AND ((t1.c0)))) FROM t0;SELECT DISTINCT PRINTF(LIKELIHOOD(DISTINCT t1.c19, 0.17926357268793702), CAST(t1.c58 AS REAL), NULL COLLATE BINARY, ((t1.c19)LIKE(x'd8b8')), (~ (t1.c58))), FIRST_VALUE((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), (vt0.c0 IN (vt0.c0))))<=((vt0.c0, ((vt0.c0) ISNULL), TRIM(DISTINCT vt0.c0, vt0.c0))))) OVER (), ((CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END)|(CAST(t1.c58 AS INTEGER))) FROM vt0 WHERE (CASE ((NULL) BETWEEN ('') AND (x''))  WHEN ((x'') BETWEEN ('-1570970884') AND ('')) THEN (NULL IN (NULL)) WHEN (('h]')+('')) THEN ((952371231)LIKE('1393285332')) WHEN (x'' IN ()) THEN ((x'')|(0.06238685451276693)) WHEN '6+z#A	' COLLATE NOCASE THEN (('-916824714') NOT BETWEEN ('zyTBgn1') AND (-1.677682291E9)) WHEN 'a' COLLATE NOCASE THEN ((((((((NULL)AND(-2.093277079E9)))OR(3.99674292E8)))OR(x'')))OR(0.6243733628708963)) END);SELECT DISTINCT CAST((t1.c0 IN ()) AS INTEGER), (((~ (t1.c19)))IS(MIN(t1.c19))), (((t1.c0, vt0.c0, t1.c0)) BETWEEN (((((t1.c58)) BETWEEN ((t1.c19)) AND ((t1.c19))), NULL COLLATE NOCASE, ((((((((t1.c0)OR(t0.c59)))AND(t0.c59)))AND(t0.c59)))AND(t1.c0)))) AND (((vt0.c0 IN ()), (t0.c59 IN ()), (('1702733451')<(t1.c19))))) FROM t0 WHERE ((NOT ((~ ('1398594625')))));SELECT DISTINCT (~ (t1.c0 COLLATE BINARY)) FROM t0 WHERE (LIKELY(DISTINCT (- (NULL))));SELECT (((UPPER(NULL), ((t1.c58) BETWEEN (t1.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC)))=(((NULL IN (vt0.c0)), CAST(t0.c59 AS INTEGER), t1.c58 COLLATE RTRIM))) FROM t1 WHERE (CASE (-352736650 IN (']qI'))  WHEN (((('㙚o')OR(0.9350348087155397)))OR(0.8587493925340765)) THEN NULL COLLATE NOCASE END);SELECT DISTINCT CASE ((vt0.c0)==(vt0.c0))  WHEN ((t1.c19) NOT NULL) THEN IFNULL(DISTINCT vt0.c0, t0.c59) WHEN ((t1.c0) NOT BETWEEN (t1.c19) AND (t1.c58)) THEN (t1.c0 IN (t1.c58)) WHEN (((t1.c58)) NOT BETWEEN ((t1.c0)) AND ((t1.c19))) THEN x'' END, ((((TRIM(DISTINCT t0.c59, t1.c19))AND(((t1.c58)IS NOT(t1.c0)))))OR(((vt0.c0) BETWEEN (t1.c58) AND (t1.c0)))), ((((vt0.c0) NOTNULL))&(json_type(vt0.c0))) FROM vt0, t0 WHERE ((((('-2092515671')*(NULL))) IS FALSE));SELECT DISTINCT ((((((t1.c0) NOT NULL))AND(MAX(NULL))))OR((((t1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c58))))) FROM t0, t1, vt0; -- 1ms;
SELECT ALL ((((t1.c0)<<(t1.c19))) NOT NULL) FROM vt0, t1, t0 WHERE ((((x'') ISNULL) IN ())); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(AVG(((((((((x'')OR(t1.c58)))OR(t1.c58)))OR(vt0.c0)))OR(t1.c19)))), ((((CASE WHEN t0.c59 THEN t1.c0 WHEN t1.c58 THEN t1.c19 WHEN t1.c58 THEN vt0.c0 ELSE '^ZMKℛ?' END)AND(((t1.c19)IS NOT(t1.c19)))))AND(((((((((t1.c0)AND(t1.c19)))AND(t0.c59)))OR(t1.c58)))OR(t1.c58)))), (((vt0.c0, vt0.c0, t0.c59)) BETWEEN ((t1.c19, t1.c19, t1.c58)) AND ((-185719568, t0.c59, t1.c58))) COLLATE BINARY FROM t0, vt0;SELECT DISTINCT json_array(t1.c58 COLLATE NOCASE, MIN(t1.c58)) FROM t1, vt0 WHERE ((('-1013358085' COLLATE NOCASE) IS TRUE)); -- 0ms;
SELECT DISTINCT COALESCE(CAST(NULL AS BLOB), t1.c58 COLLATE RTRIM) FROM vt0, t1, t0; -- 0ms;
SELECT ALL ((((((t0.c59)>=(t1.c58)))AND(MIN('97252109'))))AND(((((t0.c59)OR(vt0.c0)))OR(0.23778394295357252)))) FROM t1;SELECT ALL CAST(MIN(t1.c0) AS TEXT) FROM t1, vt0 WHERE ((NOT (CAST(208740920 AS NUMERIC)))); -- 1ms;
SELECT (((((((((NOT (vt0.c0)))AND(t0.c59)))AND(((vt0.c0)<>(vt0.c0)))))OR(t1.c0 COLLATE NOCASE)))AND((vt0.c0 IN ()))), (~ (((1102767399) IS FALSE))), (((((0.07996184859635136)) NOT BETWEEN ((vt0.c0)) AND ((t1.c19))))LIKE((((t1.c58, t0.c59, t0.c59, vt0.c0, t1.c0)) NOT BETWEEN ((t1.c58, t1.c19, 263700383, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.2833349793540385, t1.c58, t1.c19, vt0.c0))))) FROM vt0, t1, t0 WHERE (((((3.5084187E7)%(-966540231))) IS TRUE)) LIMIT -550788728; -- 0ms;
SELECT DISTINCT (NOT (((((t0.c59)AND(vt0.c0)))OR(t1.c0)))) FROM t1 WHERE ((((((x'')) BETWEEN ((0.6657082833966953)) AND ((0.19150717429466002)))) NOT BETWEEN (CASE WHEN NULL THEN NULL WHEN NULL THEN x'5f87' WHEN '' THEN 0.4830617271405413 ELSE x'' END) AND (NULL)));SELECT DISTINCT ((((t0.c59) BETWEEN (t1.c19) AND (t1.c0))) IS TRUE), json_patch(0.9781920283829462, (((t1.c58))<((t1.c58)))), HEX(((((t1.c58)AND('-1508061147')))AND(t1.c0))) FROM t0, vt0 GROUP BY CAST(CASE WHEN t1.c0 THEN t1.c58 WHEN t1.c58 THEN t1.c19 WHEN vt0.c0 THEN t1.c58 END AS INTEGER) HAVING CASE WHEN ((t1.c0)=(t0.c59)) THEN t0.c59 END;SELECT DISTINCT CAST(LIKELIHOOD(t1.c0, 0.6649878821162127) AS NUMERIC) FROM t0, t1; -- 0ms;
SELECT ALL CAST((t1.c58 IN ()) AS REAL) FROM vt0, t0, t1 INDEXED BY i29;SELECT DISTINCT MAX(GROUP_CONCAT((('3')||(t1.c58)))) FROM vt0, t0;SELECT DISTINCT DENSE_RANK() OVER () FROM t1, t0, vt0 WHERE (-1e500); -- 1ms;
SELECT ALL COALESCE(DISTINCT t0.c59, (+ (vt0.c0)), CAST(t0.c59 AS NUMERIC), ((t0.c59)AND(t1.c19))), GROUP_CONCAT(((t1.c19) ISNULL)) OVER (), ((((((t1.c58)GLOB(x'')))OR((((t1.c0))<=((t0.c59))))))AND(ABS(t1.c19))) FROM vt0, t0 WHERE (((((IFNULL(DISTINCT '', 0.8548157665035074))AND(CAST('-251229535' AS BLOB))))OR(TRIM(-376841921))));SELECT ((((t0.c59)IS NOT(t0.c59)))-(t1.c58)), t1.c58, NULL FROM t0, t1 LIMIT -926755237 OFFSET -1508061147 INTERSECT SELECT DISTINCT ((t1.c19 COLLATE BINARY) NOT BETWEEN (((vt0.c0)>(vt0.c0))) AND ((t1.c19 IN ()))), HEX(DISTINCT COUNT(t1.c19)), (((t1.c0, t1.c58, t1.c58, t0.c59, t1.c19, t1.c19, t0.c59)) BETWEEN (((~ (t1.c19)), '-823061795', (t1.c0 IN (t1.c58)), ((((vt0.c0)OR(t0.c59)))AND(t0.c59)), CASE WHEN t1.c0 THEN t0.c59 ELSE t1.c19 END, ((((((((t1.c19)AND(t1.c19)))AND(t1.c19)))AND(t1.c0)))AND(1922899319)), ((((t0.c59)OR(t1.c0)))OR(t0.c59)))) AND ((vt0.c0, t1.c58, (t1.c19 IN ()), LIKELIHOOD(t0.c59, 0.4971165026654284), (NULL IN (t0.c59)), ((((vt0.c0)AND(vt0.c0)))AND('753095966')), ((t1.c0)<>(t1.c58))))) FROM t1;SELECT ALL ((((((t1.c19)AND(t0.c59)))AND(t0.c59)))!=(((((((((((((((((t1.c58)OR(vt0.c0)))OR(t0.c59)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c59)))OR(x'97d6')))AND(t0.c59)))AND(t0.c59)))), DENSE_RANK() OVER (), (((t1.c58) IS TRUE) IN ()) FROM vt0 WHERE (((((((((TRIM(x''))OR(ABS(DISTINCT NULL))))OR((((('0.0')AND('a杭5JO8)f/')))AND(0.4892181417894711)))))OR(0.14761541592651806 COLLATE RTRIM)))AND(((x'')<(0Xffffffffe57e291f)))));SELECT DISTINCT ((LIKELIHOOD(DISTINCT vt0.c0, 0.03682981113471284))OR((t1.c0 IN ()))) FROM vt0, t1 WHERE ((((((3.99674292E8, '0.31827438783723505', x'')) BETWEEN ((NULL, '', 4.18619246E8)) AND ((1061045936, NULL, x'de7c')))) ISNULL)); -- 0ms;
SELECT DISTINCT TOTAL(t0.c59), (+ ((vt0.c0 IN ()))), ((((vt0.c0)>>(vt0.c0)))&(t0.c59)) FROM t1, t0 LEFT OUTER JOIN vt0 ON (((CASE WHEN t0.c59 THEN t1.c19 END))>=((-238554231))) WHERE (((((NULL) ISNULL))%(((0.1774617641221411) IS TRUE)))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c0)<<(vt0.c0)) THEN 0Xffffffff9636f5fb ELSE (('248671273') IS TRUE) END FROM t0, t1 GROUP BY ((((vt0.c0) NOTNULL)) NOTNULL), (((CAST(t0.c59 AS NUMERIC)))>=((CAST(vt0.c0 AS TEXT)))), UPPER(t0.c59 COLLATE RTRIM), t0.c59, ((((t1.c58)IS(vt0.c0))) ISNULL);SELECT ((((((vt0.c0)/(vt0.c0)))OR(NULLIF(vt0.c0, t0.c59))))AND(((t0.c59)>=(t1.c58)))) FROM t1, vt0;SELECT ((((t0.c59)OR(t1.c19))) NOT BETWEEN (json_quote(vt0.c0)) AND (CAST(t1.c0 AS REAL))) FROM t1, t0 WHERE (((((TRIM('', '.j'))OR((('-966540231')IS NOT('KO')))))AND(('0.4687056538954687' IN ())))) LIMIT -494101503;SELECT ALL MAX('+䰨Ln칑l'), 'vW^hzR', ((((t0.c59)|(t0.c59))) NOT BETWEEN ((((vt0.c0))<>((t1.c0)))) AND (json_patch(t1.c19, t1.c58))) FROM vt0, t1, t0; -- 0ms;
SELECT ABS(DISTINCT UNLIKELY(t1.c58)), CUME_DIST() OVER (), AVG(CASE t0.c59  WHEN t1.c58 THEN x'' ELSE t1.c0 END) FROM vt0 NOT INDEXED, t1, t0; -- 0ms;
SELECT ALL MIN(((t1.c58)<=(t1.c0))) FROM t0, vt0;SELECT CAST(((t1.c19)-(vt0.c0)) AS NUMERIC) FROM t1 INDEXED BY i64, vt0, t0 WHERE ((((0X2b9e9203)) NOT BETWEEN ((NULL COLLATE BINARY)) AND ((((NULL) BETWEEN (NULL) AND (x''))))));SELECT CAST(((((t1.c58)OR(t1.c58)))AND(')')) AS REAL), '0.5838366939792102', CAST(((t1.c19)=(t1.c58)) AS REAL) FROM t1, vt0, t0 WHERE (TRIM(((0.3209040608083291) BETWEEN (x'de49') AND (x'')))) ORDER BY t0.c59 DESC; -- 0ms;
SELECT DISTINCT ((((((t1.c58)AND(t1.c0)))AND(t1.c0))) IS TRUE), CAST(CAST(t1.c0 AS INTEGER) AS TEXT), ((COUNT(t0.c59)) IS FALSE) FROM vt0, t0 WHERE ((- ((~ (0.40957137654240905)))));SELECT AVG(CAST(t1.c19 AS INTEGER)) OVER (), (+ (CASE WHEN t1.c0 THEN t1.c58 ELSE t0.c59 END)), CAST(((t1.c0)/(t0.c59)) AS BLOB) FROM vt0 WHERE (((CASE 0.6674607999931788  WHEN 'd' THEN NULL WHEN '-1213539669' THEN 227700574 WHEN -2093277079 THEN '552922227' END)+(((2014552873)/(0.17458611530653068)))));SELECT ALL (+ (CAST(t1.c19 AS INTEGER))) FROM t1, t0, vt0; -- 0ms;
SELECT HEX(t1.c19) COLLATE RTRIM FROM t0, vt0 WHERE ((('G㡪5䳬') IS FALSE));SELECT DISTINCT (((t1.c0, t1.c58, vt0.c0, t1.c0, t0.c59)) NOT BETWEEN ((NULL, CASE WHEN vt0.c0 THEN t0.c59 WHEN t1.c19 THEN t0.c59 WHEN NULL THEN vt0.c0 ELSE t1.c0 END, x'', (- (t1.c58)), ((t1.c58)IS(vt0.c0)))) AND ((((-1e500) NOT NULL), ((t1.c0)-(t0.c59)), (t1.c58 IN ()), ((vt0.c0) NOT BETWEEN (t0.c59) AND (t0.c59)), (vt0.c0 IN ())))), (((+ (vt0.c0)))<<((t1.c0 IN ()))), (((NULL) ISNULL) IN ()) FROM t1, vt0, t0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), 0Xffffffffddb09b69, CASE CAST(t1.c19 AS BLOB)  WHEN (~ (vt0.c0)) THEN ((t1.c19)%(NULL)) ELSE UPPER(DISTINCT t1.c19) END FROM t1 WHERE ((('-1255552159') NOTNULL));SELECT DISTINCT 'KFGO' COLLATE NOCASE FROM t1, vt0 WHERE ((((('')-('tP')))%(CAST(0.6868393598472977 AS INTEGER)))) ORDER BY 'FG'; -- 0ms;
SELECT DISTINCT ((((((((t1.c19)OR(t0.c59)))AND(t1.c0)))AND(((t1.c19)>(0.22331122812435622)))))OR(LIKE(vt0.c0, t1.c19, '2'))), ((((((t1.c58) IS FALSE))OR((vt0.c0 IN ()))))AND(MAX(t1.c58))), CUME_DIST() OVER ( GROUPS BETWEEN ((((((((HEX(DISTINCT t1.c0))OR(((t1.c19)/(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((t1.c58)==(t1.c0)))))OR(CAST(t1.c0 AS REAL))) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM vt0 LIMIT 1919502073;SELECT (((((((t1.c58, vt0.c0, t1.c0))<>((vt0.c0, t1.c0, t1.c0))))AND((x'' IN ()))))AND(CASE t0.c59  WHEN vt0.c0 THEN vt0.c0 END)) FROM t0, vt0, t1 WHERE ((((((NOT (x'dba2')))OR(CAST(x'' AS BLOB))))AND('-1213539669' COLLATE NOCASE))); -- 0ms;
SELECT (NOT (t1.c19)) FROM vt0, t1, t0 WHERE ((((0.11548749734423092)&('-935313325')) IN ((('1854720642')<<(NULL)), LIKELY(DISTINCT '>&L+b/BM')))); -- 0ms;
SELECT ALL HEX(DISTINCT x'') FROM t0 LIMIT -1493722052; -- 0ms;
SELECT DISTINCT MIN(vt0.c0), CAST((('_z')<=(t1.c19)) AS BLOB), '2yn' FROM vt0, t0 WHERE (CASE ((NULL)-('636195842'))  WHEN (- (0x56d31e4f)) THEN ((0x72d954f4) NOT BETWEEN (637124834) AND (x'3258')) WHEN (('') NOT BETWEEN (x'c72a') AND (0.1305906523975695)) THEN CASE ''  WHEN 0xffffffffe989d93f THEN 0.5996803247221314 END WHEN (((('-839233434')OR(x'54b2')))OR('OH')) THEN CASE -1.213539669E9  WHEN 934379.0 THEN x'c7ff' END END);SELECT DISTINCT t1.c58 FROM t0, t1, vt0; -- 0ms;
SELECT ALL CASE WHEN (- (vt0.c0)) THEN ((t1.c0)AND(t1.c58)) ELSE ((t1.c58)&(t1.c0)) END FROM vt0, t0, t1 WHERE ((~ ((- ('Z#AZ䒑'))))) GROUP BY ((((t1.c0)||('-477074695'))) ISNULL); -- 0ms;
SELECT DISTINCT (((CASE t1.c19  WHEN vt0.c0 THEN t1.c58 END))<((DATE(vt0.c0, t1.c58, t1.c19, t1.c19, vt0.c0)))), (((t0.c59 IN (t1.c19)))-(t1.c58)), ((((((t1.c19)OR('1759673261')))AND(t0.c59)))<=((((0x75b28833, t1.c58, t1.c19))<=((t1.c58, t0.c59, ''))))) FROM t0, vt0 WHERE ((+ ((~ (0.408250844258914)))));SELECT DISTINCT (~ (AVG(t1.c58))) FROM vt0 WHERE ((((((((((((((((('T95bp')AND('R')))AND(x'')))OR(NULL)))AND(x'24a9')))AND(CASE x'6882'  WHEN 1.393285332E9 THEN x'38d3' ELSE 158517789 END)))AND(((((((((x'')AND(NULL)))OR(0.5203547087835585)))AND(x'')))OR('1524042931')))))AND(((0.09990975339438035)GLOB(x'')))))AND('yeazErp')));SELECT DISTINCT t1.c0 FROM t1 NOT INDEXED, vt0 WHERE (((((x'40eb4f58') BETWEEN ('1121970') AND ('-136636245')))/(((NULL)GLOB(0.7863973451083021))))); -- 0ms;
SELECT '', SUM(((t1.c0)|(vt0.c0)) COLLATE RTRIM) OVER (), '1084849270', (~ ((((vt0.c0, vt0.c0, t1.c58)) BETWEEN ((t0.c59, t1.c58, t1.c0)) AND ((vt0.c0, t1.c19, vt0.c0))))), CASE WHEN CASE t1.c58  WHEN vt0.c0 THEN t0.c59 ELSE t1.c19 END THEN ((((((((t1.c19)AND(NULL)))AND(vt0.c0)))AND(t1.c19)))OR(x'b5aa')) END FROM t0, t1 WHERE (NULL);SELECT ((LIKELIHOOD(t1.c58, 0.74211504317109)) ISNULL) FROM t0, t1; -- 0ms;
SELECT ALL vt0.c0 FROM t1 LIMIT 1757027625;SELECT (((t1.c58, t1.c19, t1.c19)) BETWEEN (((t0.c59 IN (t1.c19)), '-2050793075', ((t0.c59) NOT BETWEEN (6.37124834E8) AND (t1.c0)))) AND ((LIKELIHOOD(DISTINCT t1.c0, 0.18771091445006394), NULL, COUNT(vt0.c0)))) FROM t0 WHERE (TRIM(DISTINCT CASE -1.485212856E9  WHEN '!>&[n4,\rE' THEN x'' END)) ORDER BY ((((t1.c58)<(t0.c59)))>=(((t1.c58)LIKE(t1.c0)))) DESC  NULLS LAST;SELECT DISTINCT json_array(((t1.c0)>(t0.c59)), ((t1.c58) NOT BETWEEN (t0.c59) AND (t1.c58))), ((CAST(vt0.c0 AS REAL)) NOT NULL), ((((((t0.c59) ISNULL))OR(CASE vt0.c0  WHEN t1.c19 THEN x'' ELSE vt0.c0 END)))AND((t1.c58 IN ()))) FROM vt0, t0 WHERE (TRIM(DISTINCT '826557843') COLLATE NOCASE);SELECT DISTINCT CAST(t1.c58 AS NUMERIC), ((((t1.c58)-(vt0.c0))) NOT BETWEEN (((((t1.c58)AND(t1.c0)))AND(t0.c59))) AND (((((((((t1.c58)AND(vt0.c0)))OR(t0.c59)))AND(t0.c59)))AND(t1.c58)))), ((CAST(t1.c0 AS REAL))-((t1.c58 IN (t0.c59, t1.c58)))) FROM t0, t1 WHERE ((NOT (0.35681543952141415)) COLLATE BINARY);SELECT ALL (((t1.c0, t1.c19, vt0.c0)) BETWEEN ((((x'')%(t1.c19)), (- (t1.c0)), (+ (t1.c19)))) AND ((((t0.c59) NOT NULL), CAST(t1.c58 AS REAL), MIN(t1.c19)))), ((t1.c58 COLLATE NOCASE) BETWEEN ((((t1.c58)) NOT BETWEEN ((t1.c0)) AND ((t1.c58)))) AND (((t1.c58) IS FALSE))), ((((((((CAST('' AS INTEGER))OR(t1.c58)))AND(t1.c0)))AND(((t1.c19)<=(t0.c59)))))OR(CAST(t0.c59 AS INTEGER))) FROM t1 INDEXED BY i29, vt0 LIMIT -713873901;SELECT DISTINCT t1.c58, NULL, ((CAST(vt0.c0 AS REAL))<<(((t1.c0)OR(t0.c59)))) FROM vt0;SELECT MAX(((t0.c59)IS NOT(t1.c0))) FROM vt0 ORDER BY ((((vt0.c0)<=(t0.c59)))%(((((t0.c59)AND(t0.c59)))AND(t1.c58))))  NULLS LAST;SELECT ALL (('<^澊') NOT BETWEEN (t0.c59) AND (TRIM(DISTINCT vt0.c0))) FROM vt0, t1, t0 WHERE ((((((1.366961171E9) NOT NULL)))<((NULL COLLATE BINARY)))); -- 0ms;
SELECT ALL SUM(((t0.c59)>>(t1.c19))) COLLATE RTRIM FROM vt0, t0;SELECT DISTINCT (((((t1.c58 IN ()))OR(((((t1.c19)AND(t1.c19)))OR(t1.c19)))))OR((((t0.c59, t1.c0, t1.c58)) NOT BETWEEN ((vt0.c0, t1.c58, t1.c58)) AND ((vt0.c0, x'0fbc', t1.c58))))), ((((((t1.c58) ISNULL))AND(COUNT(t1.c58))))OR(TRIM(t1.c0, t1.c58))), ((((((((((vt0.c0) IS FALSE))AND(((t1.c0) ISNULL))))AND(TYPEOF(t1.c19))))OR(json_valid(vt0.c0))))AND(((vt0.c0) ISNULL))) FROM t0, vt0 WHERE (CAST(SQLITE_COMPILEOPTION_USED('-763854471') AS REAL)) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN ('') AND (((t1.c0)*(t1.c19)))) ASC, ((CAST(t0.c59 AS BLOB)) NOT NULL) ASC;SELECT ALL ('-890242083099277578T806:-2865922803377804989 1180T1523T\rc' IN (0.4398273643828058)) COLLATE BINARY, ((AVG('y?垓Y{'))IS NOT(((t1.c19) BETWEEN (t0.c59) AND (t0.c59)))), 'p칤X0Iiy' FROM vt0 WHERE ((((0.3209040608083291 IN ())) NOTNULL));SELECT DISTINCT t1.c0, (((((t1.c19))!=((t1.c58)))) BETWEEN (CAST(t1.c19 AS INTEGER)) AND (((vt0.c0) IS FALSE))), SUM(t1.c58) OVER () FROM t0;SELECT DISTINCT ((GROUP_CONCAT(t1.c19))==(((t1.c0) NOTNULL))) FROM t0 GROUP BY (((0.31827438783723505 IN ()))*(CAST(t1.c0 AS INTEGER)));SELECT ALL ((t1.c58 COLLATE NOCASE)OR((vt0.c0 IN ()))), (IFNULL(t1.c58, vt0.c0) IN ()), (((t1.c0)) BETWEEN ((((t1.c19)||(t1.c58)))) AND ((UPPER(DISTINCT t1.c58)))) FROM t1, t0, vt0 LIMIT -2029719761 OFFSET 2057297910; -- 0ms;
SELECT DISTINCT ((((t1.c58 IN ()), CAST(x'' AS TEXT), ((t0.c59)>>(t0.c59))))<((CASE t0.c59  WHEN t1.c19 THEN t1.c58 ELSE t1.c58 END, ((vt0.c0)IS NOT(t1.c0)), '-832653852'))) FROM vt0, t0, t1 LIMIT -246136634 OFFSET 1328772779; -- 3ms;
SELECT DISTINCT CAST(CAST('792947534' AS INTEGER) AS TEXT) FROM t1, t0 WHERE (CAST(((8.26557843E8) BETWEEN (0x2cadbca1) AND (NULL)) AS BLOB)); -- 0ms;
SELECT (((((t1.c19)AND(vt0.c0)))AND(t1.c58)) IN ()), CAST(((t1.c19) NOT BETWEEN (t1.c19) AND (t0.c59)) AS NUMERIC), SQLITE_SOURCE_ID() FROM t1, t0, vt0 WHERE ((+ ((~ (1808093877))))); -- 0ms;
SELECT ALL ((((((((CASE vt0.c0  WHEN t1.c58 THEN t1.c19 ELSE 0.7099705641336373 END)AND(CAST(t1.c0 AS TEXT))))AND(((x'') NOT BETWEEN (t1.c0) AND (t1.c58)))))OR(((vt0.c0) ISNULL))))AND(t1.c0)), ((((((((CASE t1.c58  WHEN t1.c19 THEN vt0.c0 WHEN t1.c0 THEN x'25063dfd' WHEN t1.c19 THEN t1.c0 END)AND(SUM(t1.c58))))OR((+ (t0.c59)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c58)))))OR(((vt0.c0)*(t1.c0)))), (- (CAST(vt0.c0 AS INTEGER))) FROM t0 WHERE ((- (((0.3166002640255817)+(5.45733327E8)))));SELECT DISTINCT 0x36948bf6 FROM t0, t1 ORDER BY ((((((((((((vt0.c0)OR(t0.c59)))AND('1228648907')))AND(vt0.c0)))OR(t1.c19)))AND(CAST(0.529386997020788 AS REAL))))AND(((188318353) IS TRUE)));SELECT DISTINCT (- (TOTAL(t1.c0))) FROM vt0, t1; -- 0ms;
SELECT ALL ((((((((((t1.c58)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t1.c58))) NOT BETWEEN ((+ (t1.c58))) AND (((t1.c58) ISNULL))), (~ (((((t1.c0)AND(t0.c59)))AND(vt0.c0)))), (((NULL IN (vt0.c0, vt0.c0)))||(CAST(t0.c59 AS INTEGER))) FROM t1 WHERE (CASE WHEN CAST(x'' AS REAL) THEN (((0.02553217047892531)) NOT BETWEEN ((0.2813547109523732)) AND ((x''))) END);SELECT ((((((vt0.c0) NOT NULL))AND((((t0.c59, 0.3052947418705637, t1.c19)) NOT BETWEEN ((t0.c59, t1.c0, t0.c59)) AND ((t1.c0, t1.c19, vt0.c0))))))AND(ABS(DISTINCT t1.c19))), NULL, vt0.c0, NULL, CASE WHEN ((vt0.c0) BETWEEN (t1.c19) AND (t0.c59)) THEN CASE t1.c19  WHEN vt0.c0 THEN 0.614479775259634 END ELSE (((t1.c58)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) END FROM t0 WHERE ((- (((NULL) NOTNULL))));SELECT (('') NOT BETWEEN (COUNT(vt0.c0)) AND (CAST(t0.c59 AS INTEGER))), ((((((vt0.c0) ISNULL))AND(((t1.c58) NOT BETWEEN (vt0.c0) AND ('')))))OR(((t1.c58) BETWEEN (t1.c19) AND (vt0.c0)))), SUM(1054466894) OVER () FROM t0, t1;SELECT DISTINCT LEAD(CAST(vt0.c0 AS TEXT) COLLATE NOCASE, 0.34173238198352984, CAST(vt0.c0 COLLATE NOCASE AS TEXT)) OVER ( PARTITION BY ((CASE t0.c59  WHEN 0X32d0289a THEN t1.c19 END)AND(NULL COLLATE RTRIM)), ((((t1.c0 COLLATE BINARY)AND(t0.c59)))OR(t1.c0 COLLATE BINARY)), ((t1.c58 COLLATE NOCASE) ISNULL), ((CAST(t1.c0 AS TEXT))/(((((((((t1.c0)AND(t1.c19)))OR(x'')))AND(t1.c19)))OR(t1.c0))))) FROM vt0 WHERE ((0Xffffffffbe966532 COLLATE BINARY IN ()));SELECT DISTINCT t1.c0 FROM vt0, t1, t0; -- 0ms;
SELECT DISTINCT NTILE(((((t1.c0) NOTNULL))=(((t1.c19) BETWEEN (t0.c59) AND (t1.c0))))) OVER ( ORDER BY (('471002816')>(CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c58 END)) ASC), (CAST(t1.c0 AS REAL) IN ()), COUNT(x'') FROM t0, t1;SELECT TOTAL(((0xffffffff9c00998d) IS FALSE)) OVER () FROM vt0, t1; -- 0ms;
SELECT SUM((t1.c0 IN ()) COLLATE NOCASE) FROM t0 WHERE ((+ (((((0X6b511464)AND('1')))OR(x''))))); -- 1ms;
SELECT ALL vt0.c0 FROM t1 WHERE (CASE WHEN ((x'6861') ISNULL) THEN ((x'') IS TRUE) ELSE CASE WHEN NULL THEN x'' WHEN NULL THEN NULL WHEN 0.45907763313150785 THEN 0.9786395360686223 ELSE NULL END END) UNION SELECT ALL ((((t1.c0)/(t1.c19))) IS FALSE) FROM vt0 WHERE (((x'') ISNULL)) GROUP BY (((+ (t1.c0)))%(((NULL) BETWEEN (t1.c0) AND (t1.c58))));SELECT ALL (((t0.c59) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((((NULL) IS TRUE))<(((t1.c0) IS FALSE))), (~ (((t1.c0) ISNULL))) FROM t1; -- 0ms;
SELECT ALL LIKELIHOOD((((t0.c59, t0.c59, t0.c59))<((NULL, t1.c19, vt0.c0))), 0.025633132975018125) FROM t0, t1;SELECT DISTINCT (~ (CASE WHEN x'6ab9' THEN vt0.c0 WHEN 0.12844840801428248 THEN vt0.c0 WHEN t0.c59 THEN t1.c19 ELSE vt0.c0 END)) FROM t0, t1, vt0; -- 0ms;
SELECT ALL ((((t1.c19) NOTNULL)) BETWEEN ((~ (t0.c59))) AND (ROUND(t1.c0, t0.c59))) FROM t0, t1 WHERE (((((((0.6868128693877201) ISNULL))OR(((NULL)AND(NULL)))))AND(((('')) NOT BETWEEN (('632077229')) AND ((NULL)))))) ORDER BY ((t1.c0) NOT BETWEEN (t1.c19) AND (t1.c19)) COLLATE NOCASE DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((LOWER(DISTINCT t1.c58))<=(t1.c58)) FROM vt0, t0;SELECT ALL ((((((((CASE WHEN vt0.c0 THEN t1.c19 END)OR((t1.c58 IN (t1.c19, t1.c0)))))AND(t1.c0 COLLATE RTRIM)))OR(((t0.c59)OR('0.4663996900696088')))))OR(((t1.c19)==(t1.c19)))) FROM t1, vt0, t0; -- 1ms;
SELECT DISTINCT ((CAST(t1.c58 AS REAL)) BETWEEN (TRIM(DISTINCT t0.c59)) AND (COUNT(*))) FROM vt0, t1;SELECT DISTINCT (((((t1.c0)AND(vt0.c0)))OR(t1.c0)) IN (((t1.c58)%(t1.c19)))), (((((t1.c58)) NOT BETWEEN ((t1.c0)) AND ((t1.c58))))AND(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c19)))), ((((t1.c19)LIKE(0.9633017973032265))) BETWEEN (((t1.c58) NOT BETWEEN (t1.c19) AND (t1.c58))) AND (CASE 0.5087216055997389  WHEN 0.5837058171513704 THEN 'MDAI' WHEN t1.c19 THEN t1.c19 WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END)) FROM t1;SELECT CAST(0x3cc6870 AS BLOB), (('-575628439') NOT NULL), COUNT(*) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (((((vt0.c0) IS FALSE)))<>((t1.c58 COLLATE BINARY))) FROM vt0, t0, t1 WHERE (((((126324048)<(NULL))) NOT BETWEEN (0.08630833205710053 COLLATE BINARY) AND ((~ (x'4ca1'))))); -- 0ms;
SELECT ALL NULL, CASE WHEN t1.c58 THEN (((t0.c59, t1.c0, vt0.c0))<((t1.c0, t1.c0, t1.c19))) ELSE ((t0.c59)>>(t1.c58)) END, (((t1.c58)GLOB(t1.c19)) IN ()) FROM t1 WHERE (((+ ('-1184438130')) IN ()));SELECT ((CASE t0.c59  WHEN t1.c58 THEN t1.c19 ELSE t1.c0 END)IS NOT(((vt0.c0) IS TRUE))), ((NULL) NOTNULL) COLLATE RTRIM COLLATE NOCASE, ((((((NULL)OR(vt0.c0)))AND(vt0.c0)))OR(0.4326351440173605)) FROM t0, t1, vt0 WHERE ((((NULL IN ()))=('1726094108' COLLATE NOCASE))) GROUP BY CASE WHEN ((((t0.c59)OR(t1.c19)))OR(t0.c59)) THEN ((t1.c0) IS FALSE) ELSE (vt0.c0 IN (t1.c58, t1.c0)) END HAVING ((((((((((t1.c0) ISNULL))AND((vt0.c0 IN ()))))AND(UNICODE(t0.c59))))AND(((t1.c19) NOT NULL))))OR(t1.c0)); -- 0ms;
SELECT ALL AVG(MIN(((t0.c59) BETWEEN (t0.c59) AND (t1.c19)))) FROM t0, vt0 WHERE (CASE ((0.7116489263724896) IS TRUE)  WHEN (NOT ('-1044181657')) THEN x'' END);SELECT DISTINCT (CASE t1.c58  WHEN t1.c19 THEN x'ce4d' WHEN vt0.c0 THEN t1.c58 WHEN vt0.c0 THEN t1.c58 END IN ()) FROM t0, vt0, t1; -- 0ms;
SELECT ALL (((vt0.c0) ISNULL) IN ()), (NOT (IFNULL(DISTINCT t0.c59, t1.c58))), ((CAST(t1.c58 AS BLOB)) BETWEEN ((t0.c59 IN ())) AND (t1.c19)) FROM vt0 WHERE ((((((('')OR(NULL)))OR(0.6361354220479983))) NOTNULL)) GROUP BY ((t1.c0 COLLATE NOCASE) NOTNULL), (((- (t1.c19))) ISNULL), x'7fa7465d' HAVING CASE CAST(t1.c19 AS REAL)  WHEN ((t1.c58) NOT BETWEEN (0.3739704014658195) AND (t1.c58)) THEN ((t1.c0)&(t1.c58)) END;SELECT DISTINCT ((((((((t1.c0)AND(vt0.c0)))OR(t1.c0)))OR(CASE WHEN t1.c19 THEN '1922899319' ELSE t0.c59 END)))AND(((t1.c58) BETWEEN (t1.c58) AND (t1.c0)))), vt0.c0, vt0.c0 FROM vt0, t1, t0 ORDER BY (((((t1.c19))<=((t1.c0)))) BETWEEN ('JEZyu') AND ((t1.c19 IN ()))); -- 1ms;
SELECT DISTINCT (SUBSTR(t1.c58, t1.c58) IN ()), ((t1.c58 COLLATE RTRIM)<(t0.c59)), CASE CAST(t0.c59 AS REAL)  WHEN 0.8802229917837238 COLLATE BINARY THEN ((vt0.c0) NOTNULL) WHEN ((t1.c19) NOT NULL) THEN ((t1.c19)/(t0.c59)) WHEN t1.c0 COLLATE BINARY THEN (((t1.c0))<=((vt0.c0))) END FROM vt0, t0, t1; -- 0ms;
SELECT DISTINCT UPPER((NULL IN (t0.c59))) FROM t1, vt0, t0 WHERE (CASE '1747246379' COLLATE BINARY  WHEN ((1393285332)<(1879593759)) THEN (NOT (NULL)) END); -- 0ms;
SELECT DISTINCT CASE '-1333405765'  WHEN CAST(vt0.c0 AS TEXT) THEN ((t1.c58)%(t1.c19)) ELSE vt0.c0 END FROM t1, vt0, t0 WHERE (((NULL) NOT BETWEEN (x'') AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT 0.8007653607681843 COLLATE BINARY FROM vt0 WHERE (((((((NULL)OR(0.808533033167338)))AND(x'')))<(((NULL)>=(NULL))))) ORDER BY ((rtreenode(t0.c59, vt0.c0))/(ABS(DISTINCT t0.c59)));SELECT ALL ((((- (t1.c0))))<>((((((t1.c0)OR(t1.c19)))AND(t1.c0))))) FROM t0, vt0, t1 ORDER BY ((((((((t1.c58)OR(t0.c59)))AND(((t0.c59)IS NOT(t1.c58)))))OR(((0.9094447150420889)<=(vt0.c0)))))AND(t0.c59 COLLATE NOCASE)) DESC; -- 12ms;
SELECT ALL AVG(TYPEOF(t1.c19)) FROM vt0 WHERE (x'') LIMIT 1809926041;SELECT ((((t0.c59) ISNULL)) NOT NULL) FROM vt0 ORDER BY ((((t0.c59)+(t0.c59))) NOT BETWEEN (t1.c19 COLLATE NOCASE) AND (x''));SELECT ALL ((((t1.c0)||(t1.c0))) IS FALSE) FROM t0, t1, vt0 LIMIT 1685402313 OFFSET -1936791947; -- 0ms;
SELECT DISTINCT t1.c19 FROM t1, t0; -- 0ms;
SELECT DISTINCT IFNULL(((vt0.c0)<<(0xffffffffd375684d)), 0xffffffffd61450b3) FROM t0 WHERE ((((0.03711536202525467)) NOT BETWEEN ((((0.9773588711399781) NOTNULL))) AND (('0.8080715971330051' COLLATE RTRIM))));SELECT t1.c19 FROM t1, vt0, t0; -- 0ms;
SELECT DISTINCT (NULL IN ()) FROM t0, vt0 WHERE (CAST(UNLIKELY(x'7a42') AS INTEGER)); -- 0ms;
SELECT DISTINCT t0.c59 FROM vt0, t1, t0; -- 0ms;
SELECT DISTINCT (((((t1.c58)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))=((((t1.c19, t1.c19, vt0.c0)) NOT BETWEEN ((t1.c19, t1.c58, t0.c59)) AND ((t0.c59, vt0.c0, vt0.c0))))), ((((((((((t1.c19)GLOB(t1.c19)))AND((~ (vt0.c0)))))OR(((t1.c19)<=(vt0.c0)))))OR(0.9708359147834165)))OR(((t0.c59) IS FALSE))), LAG(((((((((((((((((((((x'a087')AND(t0.c59)))OR(t1.c0)))AND(0.37169075826058817)))OR(vt0.c0)))AND(CASE t1.c0  WHEN t1.c58 THEN t1.c19 ELSE t1.c58 END)))OR((- (t1.c58)))))OR(CASE WHEN t1.c0 THEN x'' WHEN t1.c58 THEN vt0.c0 WHEN t1.c19 THEN t1.c0 ELSE t1.c19 END)))AND(CAST(t1.c58 AS TEXT))))AND(((((((((t1.c58)OR(t1.c0)))OR(-251229535)))OR(t0.c59)))OR(t1.c58)))))AND(t1.c19)), ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c58 THEN vt0.c0 WHEN t1.c58 THEN t1.c58 END) IS TRUE), COALESCE(DISTINCT ((t1.c19)>(vt0.c0)), vt0.c0 COLLATE RTRIM, '-1213539669', ((vt0.c0)||(t1.c58)), (t0.c59 IN (t1.c58, t1.c0)), t1.c19)) OVER () FROM t0, vt0, t1; -- 0ms;
SELECT DISTINCT (~ (COUNT(*))) FROM t0, vt0, t1; -- 0ms;
SELECT ALL CASE WHEN ((t1.c58) NOT NULL) THEN COALESCE(DISTINCT t0.c59, t0.c59) END FROM t0, t1 GROUP BY (((t0.c59)>(t1.c0)) IN ()) LIMIT 50126330; -- 0ms;
SELECT DISTINCT ((((t1.c0) NOTNULL)) IS FALSE) FROM t1, vt0 ORDER BY 0.038575644042059376 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((-1.704825288E9))>=(((+ (t1.c0))))), (- (t1.c0)) COLLATE RTRIM, (NOT ((vt0.c0 IN ()))) FROM vt0 WHERE ((~ ((('0.5044622178959393')*('-87383559'))))) GROUP BY ((((- (t1.c19))))<=(((((t0.c59))<=((t1.c0))))));SELECT PERCENT_RANK() OVER (), ((t1.c0 COLLATE RTRIM)<<(((t1.c19)*(t1.c19)))), SUM((((t1.c0))>((t1.c0)))), GROUP_CONCAT((((t0.c59, vt0.c0, t1.c19)) BETWEEN ((t1.c0, 0Xffffffffff3b130c, t0.c59)) AND ((vt0.c0, t0.c59, t1.c58)))) OVER (), ((SUM(t1.c19)) IS FALSE) FROM t1, t0, vt0 WHERE (((('0' IN (0.9701979790154366, NULL)))IS NOT(CASE NULL  WHEN 'fH{䛹[QW' THEN '-1979577999' ELSE 0.06043043130924486 END))) LIMIT 1996807463; -- 0ms;
SELECT DISTINCT ((t0.c59) NOTNULL) COLLATE NOCASE, TOTAL(((t0.c59) BETWEEN (-1.466057006E9) AND (t0.c59))), ((((((((t1.c19)AND(CASE WHEN vt0.c0 THEN t1.c19 ELSE t1.c19 END)))AND((NOT (t1.c19)))))AND(((t1.c0) NOT BETWEEN (t1.c58) AND (t0.c59)))))OR(((t0.c59)/(t1.c58)))) FROM t1, t0 WHERE (((((((((x'a8c9')AND(((x'1443')<=(0.1301093962388108)))))OR(LIKELIHOOD(DISTINCT 0.5590884971904033, 0.44232551617924776))))AND(LOWER(NULL))))OR((('')LIKE(1621880657)))));SELECT DISTINCT ((((t0.c59)|(t1.c58))) NOTNULL) FROM t1, t0, vt0; -- 0ms;
SELECT DISTINCT ((((t1.c58)-(vt0.c0))) NOT BETWEEN (((t1.c58) BETWEEN (t1.c19) AND ('-1773843708'))) AND ((t1.c58 IN ()))) FROM t0, vt0, t1; -- 0ms;
SELECT ALL CASE ((((vt0.c0)OR(vt0.c0)))AND(t1.c0))  WHEN (- (t0.c59)) THEN '1393285332' COLLATE NOCASE WHEN -2204476 THEN CAST(t1.c19 AS REAL) WHEN (t1.c19 IN ()) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE ((vt0.c0)<=(t1.c19)) END, (((('1533499283') BETWEEN (t1.c19) AND ('W,*jM.[F?')))AND((((t1.c19))>((t0.c59))))), (+ (t1.c0)) COLLATE RTRIM FROM vt0, t1, t0 WHERE ((((((NULL)AND('-1639796775')), CAST('0.4559482133548426' AS INTEGER), (+ (NULL))))<((((0.1629941626307979)IS('')), (((x''))>((0.39658380615884425))), CASE '1855756011'  WHEN x'' THEN x'' END)))); -- 0ms;
SELECT ((((CAST(t0.c59 AS NUMERIC))OR(t1.c19 COLLATE NOCASE)))AND(((t1.c0)/(vt0.c0)))) FROM t0 WHERE (((0x7de6bc98)>(((-1677682291)LIKE('햾ȹ|9kGO\m')))));SELECT DISTINCT (((('{}', vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c58, vt0.c0, t1.c0)) AND ((t1.c0, vt0.c0, t1.c19))) IN ()) FROM vt0 WHERE ((((('/') BETWEEN (NULL) AND (x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((t1.c58)) BETWEEN ((CAST(t1.c58 AS INTEGER))) AND ((((t0.c59) NOT NULL)))), TOTAL('-2093277079'), LAST_VALUE(1726094108) OVER () FROM vt0 WHERE ((((8.32951742E8)+(341026134)) IN ())) LIMIT -1935374083;SELECT AVG(vt0.c0 COLLATE RTRIM) OVER () FROM vt0, t0 WHERE (0.30422581306220786); -- 0ms;
SELECT DISTINCT (+ (0Xfffffffff1068aa1)), 0.3384858541336727, COUNT(*) FROM t1 WHERE (CAST((0.31410912224398335 IN ()) AS NUMERIC)) GROUP BY CASE t1.c58  WHEN (t0.c59 IN ()) THEN ((t1.c0) IS FALSE) ELSE ((t1.c19) NOTNULL) END, (NOT (t1.c19)), ((((t1.c0)=(0X7dbe09d2))) NOT NULL); -- 0ms;
SELECT COUNT(*) OVER (), (NOT ((((t1.c19)) BETWEEN ((t1.c58)) AND ((t1.c19))))), MAX(((vt0.c0)AND(t1.c19))) FROM vt0 WHERE (((NULL)<=(((x'')||('V')))));SELECT DISTINCT NULL FROM t1, t0 LIMIT -494101503; -- 0ms;
SELECT ALL t1.c58 COLLATE BINARY, RANK() OVER ( PARTITION BY (- (CAST(t1.c0 AS TEXT))), 0.22902735086253778), COALESCE(DISTINCT CASE WHEN t1.c58 THEN vt0.c0 ELSE t0.c59 END, ((t1.c0) NOTNULL)) FROM t1, t0, vt0 WHERE (7.46213017E8); -- 1ms;
SELECT ((((CAST(t1.c58 AS NUMERIC))AND(((((t1.c0)AND(vt0.c0)))OR(t1.c19)))))AND(json_array(t1.c58, t1.c19))), COUNT(*) OVER (), LOWER(0.8469736117883532) FROM t0, vt0, t1 WHERE ((NULL IN (0.12383149601593468, x'1fe7')) COLLATE NOCASE) LIMIT -783693641; -- 0ms;
SELECT DISTINCT LEAD(t0.c59, vt0.c0, CASE WHEN (((vt0.c0, t0.c59, vt0.c0))>((vt0.c0, t0.c59, x''))) THEN ((vt0.c0) IS TRUE) WHEN ((t0.c59) NOTNULL) THEN t0.c59 COLLATE BINARY WHEN ((0.39649612746176677) NOTNULL) THEN (((vt0.c0)) NOT BETWEEN ((0X497d7d4b)) AND ((vt0.c0))) ELSE ((vt0.c0)IS(t0.c59)) END) OVER ( PARTITION BY (((((((((t1.c19)OR(t1.c19)))AND(vt0.c0)))AND(t0.c59)))OR(t1.c19)) IN ()), (~ (((t1.c19)<=(vt0.c0))))), ((t1.c0) IS FALSE), LAG((~ (TYPEOF(DISTINCT t0.c59))), IFNULL(DISTINCT json(t0.c59), CAST(t0.c59 AS TEXT)), CAST((t0.c59 IN (t0.c59)) AS INTEGER)) OVER () FROM t0, vt0;SELECT ((((AVG(t0.c59))OR(((vt0.c0)%(t1.c19)))))AND(((((t1.c19)OR(t1.c58)))AND(t1.c58)))) FROM t1 WHERE (CAST((0.15246919646434665 IN ()) AS BLOB));SELECT DISTINCT CASE WHEN (+ (t1.c0)) THEN t0.c59 END FROM vt0, t0, t1; -- 0ms;
SELECT ALL CAST(((-236036183)<=(t1.c58)) AS INTEGER), ((((t0.c59 COLLATE NOCASE)OR(t1.c58 COLLATE BINARY)))OR((t1.c0 IN ()))), (+ (t0.c59)) COLLATE BINARY FROM vt0;SELECT DISTINCT t1.c0, (((t1.c58 IN ()))>>(-0.0)), (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0) NOT BETWEEN (t1.c58) AND (t1.c19))))) FROM t1, t0 WHERE ((((NULL, '垛(?ꏥlu', 0.4201062724009039)) NOT BETWEEN ((((NULL) NOTNULL), CAST(x'' AS TEXT), (NULL IN ()))) AND ((0.6271996994233946, ((((((((((((NULL)OR(x'')))OR(x'')))AND(0.3135334569948851)))AND(0.1702364750620996)))AND(x'')))OR('X9弲Y6{K')), LOWER(-716230521))))) GROUP BY (((LOWER(vt0.c0), ((((t1.c0)OR(vt0.c0)))OR(t1.c0)), CAST(t1.c19 AS REAL)))>((((t1.c58)AND(t1.c19)), CAST(t1.c58 AS TEXT), CASE WHEN t1.c19 THEN t1.c58 WHEN t0.c59 THEN t1.c19 WHEN '-2112877663' THEN t1.c58 ELSE t1.c0 END))), CAST(((((t1.c0)AND('')))AND(x'de53')) AS INTEGER), (~ (t1.c58 COLLATE RTRIM)), t0.c59, ((((t1.c19)-(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (t1.c58, vt0.c0))) AND (t1.c19 COLLATE BINARY)) HAVING ((t1.c58) ISNULL);SELECT DISTINCT ((vt0.c0)&(t1.c19)) COLLATE NOCASE, ((t1.c0 COLLATE RTRIM)>>((((t1.c0))!=((t1.c19))))), ((t1.c19) NOT BETWEEN (t1.c58) AND (vt0.c0)) COLLATE RTRIM, (~ (DATETIME(t1.c19, t1.c58, t1.c19, '0.001557558377242696', x'e8de'))), (((vt0.c0)) BETWEEN ((t1.c0)) AND (((NOT (t1.c19))))) FROM t1, t0 WHERE ((+ ((('')>=(NULL)))));SELECT (((t1.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)-(vt0.c0))) AND ((- (t1.c19)))) FROM t1, vt0 GROUP BY ((t1.c0)<=(t1.c0)) COLLATE RTRIM, (((((vt0.c0)LIKE(t0.c59)), CASE t1.c0  WHEN t1.c0 THEN NULL END, CASE t0.c59  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c19 END))<>((((vt0.c0)>(vt0.c0)), ((((t1.c19)OR(t1.c0)))AND(t0.c59)), NULL))), CAST(CAST(t1.c19 AS BLOB) AS REAL);SELECT DISTINCT AVG(((((vt0.c0)OR(t1.c0)))AND(vt0.c0))) OVER () FROM vt0, t1, t0 LIMIT -494101503; -- 1ms;
SELECT (((t1.c19, (vt0.c0 IN ()), COUNT(*)))<=((t1.c0, CASE t1.c58  WHEN t0.c59 THEN '' WHEN 0.2547547928447933 THEN t1.c58 WHEN t1.c0 THEN NULL ELSE vt0.c0 END, CAST(t1.c58 AS TEXT)))) FROM t1, vt0, t0 WHERE ((((((x'65eb' IN ()))AND((NOT ('w&')))))AND(((NULL)>>(x''))))); -- 0ms;
SELECT ALL 0.3379966067496488 FROM vt0 WHERE (NULLIF(IFNULL(0.036462269140812076, x''), ((0xffffffff8daee248)OR(NULL)))); -- 0ms;
SELECT DISTINCT (((((0x66e675dd)-(t0.c59))))!=((CAST(t1.c0 AS TEXT)))) FROM vt0, t0, t1; -- 0ms;
SELECT DISTINCT (CASE t1.c58  WHEN t1.c0 THEN t1.c58 WHEN t1.c58 THEN t1.c19 WHEN t1.c58 THEN t1.c0 WHEN t1.c19 THEN t0.c59 WHEN t1.c58 THEN t1.c0 END IN ()) FROM t1, t0 WHERE ((((+ (NULL)))*(CAST(NULL AS REAL)))); -- 1ms;
SELECT ALL TOTAL(t0.c59) OVER () FROM t1, t0 WHERE (((((((((((((((x'')AND(0xffffffffd14aca48)))AND(x'a539')))OR(x'8935')))AND(-1162561854)))OR('')))OR(NULL)))GLOB((~ (''))))) ORDER BY ((t1.c58) NOTNULL) ASC  NULLS LAST; -- 0ms;
SELECT ((json(t1.c58)) BETWEEN ((t0.c59 IN (vt0.c0))) AND ((vt0.c0 IN ()))) FROM vt0, t0 WHERE (LIKELY(DISTINCT 'U?7' COLLATE NOCASE)) GROUP BY ((((((t1.c19)LIKE(t1.c19)))OR(UPPER(t1.c19))))AND(((t1.c0) NOTNULL))) HAVING t1.c58;SELECT ((t1.c19) NOT BETWEEN (vt0.c0) AND (t1.c0)) COLLATE NOCASE COLLATE NOCASE FROM t0;SELECT ALL RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((TOTAL(t1.c58))AND((0.7472202956952235 IN ()))))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c19))))) FROM t0, vt0, t1 WHERE (CAST(NULL COLLATE RTRIM AS REAL)) GROUP BY ((CAST(t1.c58 AS TEXT))||(CASE WHEN t0.c59 THEN 'ꁵ%殏qt' END)); -- 0ms;
SELECT DISTINCT ((t1.c0) IS TRUE) FROM t1 LEFT OUTER JOIN vt0 ON (((((('Si')IS(t1.c0)))OR((((t0.c59)) NOT BETWEEN ((t1.c0)) AND ((t1.c58))))))AND(((t1.c19)LIKE(t1.c58)))) WHERE ((+ (((-1e500)-(0.24068979629098886)))));SELECT DISTINCT CASE WHEN t1.c58 THEN t0.c59 WHEN t1.c0 THEN t1.c19 WHEN t0.c59 THEN t0.c59 ELSE t1.c19 END COLLATE BINARY FROM t0, vt0 WHERE ('5') GROUP BY ((CAST(t1.c19 AS TEXT)) BETWEEN (((vt0.c0)||(t1.c0))) AND (CASE t1.c58  WHEN t0.c59 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c58 ELSE t0.c59 END)) HAVING ((((t1.c0)AND(t1.c58)))OR(0.49255094227247087)) COLLATE BINARY;SELECT DISTINCT ((t0.c59 IN (t0.c59)) IN ((((t1.c58)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM t0, t1, vt0 WHERE (0.9531408964897548) ORDER BY '-442789557'; -- 0ms;
SELECT DISTINCT COUNT(((t1.c58) IS TRUE)) OVER (), (((t1.c58)) NOT BETWEEN ((CAST(t1.c58 AS NUMERIC))) AND (((- (t1.c19))))), (- (vt0.c0)) COLLATE NOCASE FROM vt0, t1 WHERE (0.15186843082071566); -- 1ms;
SELECT DISTINCT ((((t0.c59)<=(t1.c0)))OR('596832494')) FROM t1, vt0, t0 INDEXED BY i64;SELECT DISTINCT ((CAST(t1.c0 AS BLOB)) NOT BETWEEN (((t0.c59) BETWEEN (t1.c58) AND (t1.c0))) AND (((vt0.c0)-(NULL)))) FROM t0, t1, vt0 WHERE (((CASE NULL  WHEN x'' THEN '1121970' WHEN '-590325026' THEN 3.3935197E7 WHEN '39' THEN x'' END)|(((x'') NOT BETWEEN ('934379') AND ('Vu42yl'))))); -- 0ms;
SELECT DISTINCT ((((((0Xfffffffffcb54746)AND(t0.c59)))OR(t1.c19))) IS TRUE) FROM t1, vt0;SELECT DISTINCT 826557843, CAST(((t0.c59) NOT BETWEEN (vt0.c0) AND (t1.c19)) AS INTEGER), ((((t1.c0, t1.c19, t0.c59)) BETWEEN ((t1.c58, t1.c0, t0.c59)) AND ((vt0.c0, t1.c58, vt0.c0))) IN ()) FROM vt0, t1 ORDER BY CASE WHEN (((t1.c19)) BETWEEN ((t1.c0)) AND ((x''))) THEN ((t1.c19) NOTNULL) WHEN (+ (t1.c58)) THEN CAST(t0.c59 AS BLOB) WHEN ((t1.c58)*(x'')) THEN ('1973720166' IN (t0.c59)) END  NULLS FIRST;SELECT ALL (((t0.c59, vt0.c0, t1.c58))<((x'8450', t1.c58, t0.c59))) COLLATE NOCASE FROM t1;SELECT DISTINCT COUNT(*) FROM vt0, t1; -- 0ms;
SELECT DISTINCT MIN(NULL), (('-1732813738')>((~ (t1.c0)))), (- ((((t1.c58)) BETWEEN ((vt0.c0)) AND ((t1.c19))))) FROM t1, vt0, t0; -- 1ms;
SELECT DISTINCT CASE ((t0.c59) BETWEEN (t1.c19) AND (t1.c19))  WHEN SUM(x'') THEN ((((t1.c0)AND(t1.c19)))OR(vt0.c0)) END, (((vt0.c0)) NOT BETWEEN ((MAX(t1.c19))) AND (((('E*') BETWEEN (t0.c59) AND (0.1301973871147355))))), ((((((((((t1.c58)OR(t1.c19)))AND(t1.c0)))OR(t1.c0)))AND(vt0.c0)))>=(((t0.c59)LIKE(t1.c58)))), '3~WB	9EC5', ((((CAST(t1.c19 AS NUMERIC))OR(((((((((t1.c58)OR(vt0.c0)))AND(vt0.c0)))OR(t1.c0)))OR(vt0.c0)))))OR(TYPEOF('-1263006277'))) FROM t0, t1, vt0; -- 0ms;
SELECT DISTINCT ((t0.c59) NOT NULL) COLLATE RTRIM FROM vt0;SELECT ALL t1.c0, ((t1.c0)-(x'03f4')) COLLATE BINARY, ((COUNT(*)) NOTNULL) FROM t0 WHERE (((((((((((((0.6352221733385146 COLLATE NOCASE)AND(((NULL) NOT BETWEEN (x'ef14') AND (0.015818159354830774)))))AND(CAST('-1677682291' AS BLOB))))AND(((0.472846780343239) NOT NULL))))AND(CAST(x'e525' AS INTEGER))))OR(1482433328 COLLATE RTRIM)))AND(x'')));SELECT DISTINCT ((((((((t1.c58)AND('\h)')))AND(t0.c59)))AND(x'')))AND(CASE t1.c0  WHEN vt0.c0 THEN t1.c58 ELSE t1.c58 END)), vt0.c0, x'' FROM vt0, t0, t1; -- 1ms;
SELECT ALL SUM(GROUP_CONCAT(vt0.c0)) FROM vt0 WHERE (((((((NULL)AND(0x395c1cf8)))AND('t')))+((('') IS TRUE))));SELECT (((t1.c58) ISNULL) IN ((- (t1.c0)), ((t1.c19)<(t1.c0)))) FROM t0;SELECT LAG(x'c9c5', vt0.c0, (CASE t1.c58  WHEN vt0.c0 THEN t1.c0 END IN (t0.c59 COLLATE RTRIM))) OVER () FROM t0, t1, vt0; -- 0ms;
SELECT CASE NULL  WHEN t1.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) END, (vt0.c0 IN ()), CASE WHEN CAST(t0.c59 AS TEXT) THEN ((t1.c58) IS FALSE) WHEN TRIM(t1.c19) THEN ((((t1.c0)OR(t1.c58)))AND(t1.c58)) WHEN (t0.c59 IN ()) THEN (~ (t1.c58)) END FROM vt0;SELECT ((((t1.c58)<(x''))) NOT NULL) FROM t0, t1, vt0; -- 0ms;
SELECT DISTINCT ((((x'') IS TRUE)) BETWEEN (((t1.c0)!=(t1.c0))) AND (((t1.c19)IS(vt0.c0)))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT LEAD(((((t1.c58)==(t1.c0))) IS TRUE), (((((~ (t1.c58)))AND((NOT (t0.c59)))))OR(((t1.c0) IS FALSE))), 0.9913850705359637) OVER ( ORDER BY ((((((((((0.9819555321117218) BETWEEN (t1.c58) AND (t1.c0)))OR(((((((((((((t1.c0)OR(vt0.c0)))OR(t1.c58)))OR(vt0.c0)))OR(t0.c59)))AND(vt0.c0)))OR(t0.c59)))))OR(((0.5758941936809095) NOT BETWEEN (t1.c19) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c19)))))AND(((vt0.c0) IS TRUE)))), ((CASE WHEN t0.c59 THEN vt0.c0 WHEN t1.c19 THEN t1.c58 WHEN t1.c19 THEN t1.c58 ELSE t1.c58 END)|(t0.c59 COLLATE BINARY)), CAST(t1.c0 COLLATE NOCASE AS INTEGER), (((((t1.c58, t1.c19, t1.c58)) BETWEEN ((vt0.c0, t0.c59, t1.c0)) AND ((vt0.c0, 0.5513058475509779, t1.c58))))IS NOT(CAST(vt0.c0 AS NUMERIC))), MAX(COUNT(((((t0.c59)OR(t0.c59)))AND(vt0.c0)))) FROM t1, t0 WHERE ((~ (((0.6575725556243057) BETWEEN (6.37124834E8) AND (x'')))));SELECT (((CAST(t0.c59 AS INTEGER)))>=((t1.c0 COLLATE RTRIM))), ((TOTAL(vt0.c0))>(((t1.c19) NOTNULL))), CAST(((((((((t0.c59)AND(vt0.c0)))AND(t1.c0)))OR(t1.c58)))OR(t1.c0)) AS TEXT) FROM t1;SELECT CAST(JULIANDAY(t0.c59, vt0.c0, t1.c58) AS INTEGER), ((((t0.c59)<=(t1.c58)))IS(((t0.c59) BETWEEN (vt0.c0) AND (t1.c19)))), (((((((((('-713873901') BETWEEN (vt0.c0) AND (t1.c0)))OR((vt0.c0 IN (t0.c59)))))OR(COUNT(*))))OR(json_remove(t1.c0, t1.c58, t0.c59, t1.c19))))OR(((t1.c19)LIKE(t0.c59)))) FROM vt0 WHERE ((CASE x'7a65'  WHEN NULL THEN 'QI' WHEN 0.1371272138980033 THEN '2112273560' WHEN x'' THEN '0.8189731480486027' END IN ()));SELECT ALL (NOT (CASE '?.'  WHEN t0.c59 THEN t0.c59 END)) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((CASE t1.c0  WHEN t0.c59 THEN t1.c19 ELSE t1.c58 END)OR((t1.c58 IN ()))))AND(t1.c19 COLLATE RTRIM)))AND(CASE t1.c0  WHEN vt0.c0 THEN t1.c58 ELSE t1.c19 END)))OR(((t1.c58) NOT NULL))) FROM t1, t0;SELECT ALL IFNULL(CASE t0.c59  WHEN vt0.c0 THEN vt0.c0 END, t1.c0 COLLATE NOCASE) FROM t1;SELECT ALL t1.c19, CAST(((t1.c58)*(t1.c58)) AS TEXT), ((NULL)<=(t1.c58)) COLLATE NOCASE FROM t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t1.c19) FROM t1 WHERE ((((('Gྫྷq') IS TRUE)) NOTNULL)); -- 0ms;
SELECT DISTINCT vt0.c0, ((CASE WHEN t1.c58 THEN t1.c0 END)!=(SUM(t1.c0))), AVG(t0.c59) OVER () FROM t1;SELECT DISTINCT (+ (CAST(t0.c59 AS REAL))), SUM((((t1.c19)) BETWEEN ((t1.c0)) AND ((t1.c58)))) OVER (), (((t1.c0)) BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (t0.c59)))) AND (((vt0.c0 IN ())))), ((AVG(t1.c58))==(((t1.c0)||(t1.c19)))), CASE WHEN SUBSTR(t1.c58, t0.c59) THEN ((((t0.c59)OR(t1.c0)))AND(NULL)) END FROM t0;SELECT ALL ((SUM(t0.c59)) IS TRUE) FROM vt0 WHERE (CASE WHEN CASE NULL  WHEN NULL THEN NULL END THEN ((0.6834964631797876)%(x'')) END) ORDER BY ((((t1.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)AND(t1.c58)))AND(vt0.c0))) AND (((t0.c59) BETWEEN (t0.c59) AND (t1.c58))))  NULLS FIRST, CASE ((t0.c59) NOTNULL)  WHEN CAST(t1.c0 AS REAL) THEN (((t0.c59, vt0.c0, t1.c0)) BETWEEN ((0.9600928854508296, -1.057161491E9, t1.c0)) AND ((vt0.c0, t1.c58, t1.c0))) END  NULLS FIRST;SELECT DISTINCT ((((t1.c0)>=('120251552')))=(((t0.c59) IS TRUE))) FROM t0 ORDER BY CAST(CAST(NULL AS NUMERIC) AS NUMERIC), ((((t1.c58)<(t0.c59)))|(((t0.c59)LIKE(t1.c0)))) DESC  NULLS FIRST;SELECT ALL (- (json_insert(t1.c19, t1.c0, t0.c59))) FROM t1, t0, vt0 NOT INDEXED ORDER BY CASE highlight(t1.c58, vt0.c0, t1.c0, t1.c0)  WHEN ((t0.c59)OR(t1.c0)) THEN (((x'')) BETWEEN ((t1.c58)) AND ((t1.c0))) WHEN vt0.c0 THEN ((t0.c59) NOTNULL) WHEN vt0.c0 COLLATE RTRIM THEN ((t1.c58)GLOB(x'2f13')) ELSE t1.c58 END DESC  NULLS LAST LIMIT 841328668 OFFSET 1818959492;SELECT UNLIKELY(((t0.c59) NOT BETWEEN (t1.c19) AND (vt0.c0))) FROM t0, vt0, t1; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)<>(x'114d'))  WHEN IFNULL(t0.c59, t1.c19) THEN ((((vt0.c0)AND(t1.c0)))AND(vt0.c0)) ELSE t1.c0 COLLATE RTRIM END FROM t0, vt0 WHERE (CASE WHEN ((0.7645005578674119)+(0.18691587788441477)) THEN '1791020625' COLLATE RTRIM WHEN CAST(0.12883905360352355 AS NUMERIC) THEN (0.6477133509105801 IN ()) WHEN 0.8895770460866669 THEN ('' IN (x'')) END);SELECT DISTINCT COUNT(COUNT(0.26360571244099373)) FROM t1, vt0, t0;SELECT vt0.c0 FROM t1, vt0 WHERE (((UNLIKELY(NULL))-(((0.06115554446557836)/(0.11493290549860724))))); -- 0ms;
SELECT DISTINCT (((((vt0.c0))<((t1.c0)))) IS TRUE) FROM vt0, t0, t1 WHERE (NULL); -- 0ms;
SELECT ALL (LIKELY(DISTINCT t1.c0) IN ()), ((((x'')OR('8%o痝^')))OR(((((((((t1.c0)AND(t0.c59)))OR(t1.c0)))AND(t1.c19)))OR(t1.c0)))), (((((t0.c59) BETWEEN (t1.c19) AND (t0.c59)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(t0.c59 AS TEXT)))=((((((t1.c0)AND(t1.c19)))AND(vt0.c0)), ((vt0.c0) BETWEEN (t0.c59) AND ('uZ*Gt岖')), (('')<=(NULL))))) FROM vt0, t0 WHERE (((((NULL) NOT BETWEEN (0.8517061767700396) AND (x''))) BETWEEN (((x'e8df46b6')<(0.9625383455190141))) AND (0x66e21b1c))) GROUP BY CAST(0.14316812919799649 AS TEXT) COLLATE RTRIM;SELECT ALL CAST((((t1.c19)) BETWEEN ((t1.c58)) AND ((t1.c58))) AS TEXT) FROM t0;SELECT ALL (((t1.c0, t1.c0, t1.c19)) BETWEEN ((t1.c19, (~ (t1.c19)), NULL)) AND ((((((t0.c59)OR(t1.c0)))OR(t0.c59)), ((t1.c19)IS(t0.c59)), ((t1.c19)|(t1.c0))))), CAST(((vt0.c0)>>(t0.c59)) AS INTEGER), CASE CASE t0.c59  WHEN t1.c19 THEN t1.c0 END  WHEN ((t0.c59) NOT NULL) THEN MIN(0.23701212040011732) WHEN IFNULL(DISTINCT t1.c58, t1.c58) THEN UNLIKELY(DISTINCT vt0.c0) WHEN ((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)) THEN ((t1.c19) IS FALSE) ELSE (t1.c19 IN (t1.c0)) END FROM vt0, t1, t0 WHERE (CASE ((((NULL)OR(NULL)))AND(x''))  WHEN (((('0.6868393598472977')OR('2112273560')))OR(NULL)) THEN (NULL IN ('207669589', 0.9650770210505288)) END); -- 0ms;
SELECT DISTINCT '0.08608040946078854' FROM t0, t1; -- 0ms;
SELECT DISTINCT CASE (NOT (t1.c0))  WHEN CASE WHEN t1.c0 THEN t1.c0 END THEN (t1.c58 IN ()) ELSE COUNT(t1.c19) END FROM t0, vt0, t1 WHERE ((((NULL)) BETWEEN ((0.4294495187745123)) AND (((((0.9327556312816585)) BETWEEN ((-1727185154)) AND ((NULL))))))); -- 0ms;
SELECT DISTINCT json_extract(t1.c0 COLLATE RTRIM, vt0.c0) FROM t0, vt0 WHERE (((((0.13930657094484356)%(NULL)))GLOB(((NULL)IS(x'')))));SELECT GROUP_CONCAT(COALESCE(t1.c19, vt0.c0)) FROM t1, t0;SELECT NULL, CASE CASE t1.c0  WHEN t0.c59 THEN t1.c19 WHEN t1.c58 THEN t0.c59 WHEN t1.c58 THEN vt0.c0 WHEN t0.c59 THEN t0.c59 WHEN t0.c59 THEN t0.c59 ELSE t1.c58 END  WHEN vt0.c0 COLLATE BINARY THEN ((t1.c58)|(vt0.c0)) WHEN '-376841921' THEN x'' WHEN MIN(t1.c58) THEN ((t1.c58)>>(t1.c19)) WHEN CASE t1.c58  WHEN t1.c19 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c19 THEN t1.c0 END THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) WHEN TYPEOF(t1.c58) THEN -2.19767957E8 ELSE MIN(t1.c58, t0.c59) END, IFNULL(AVG(t0.c59), ((t1.c0)/(vt0.c0))) FROM vt0, t1, t0 WHERE ((- ((((('+*')OR(x'')))AND(''))))) ORDER BY LIKELY(((t1.c0)%(t1.c58))); -- 0ms;
SELECT (((- (NULL))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c0)), t1.c0, MAX((((t1.c0))=((t1.c0)))) FROM t0, t1, vt0 ORDER BY (+ ((NOT (x''))))  NULLS FIRST, ((((((t1.c19)<>(vt0.c0)))AND(((t1.c19)/(t0.c59)))))OR(((vt0.c0)IS NOT(t1.c19))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((t0.c59)<=(t1.c19)))+(SUM(t1.c0))) FROM t1 WHERE (((((((((((0.10716153541053075)AND(x'')))OR('9~')))OR(0X1a90e9cf)))OR('0.614479775259634'))) NOT NULL));SELECT DISTINCT ((((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)))<>((- (t1.c19)))) FROM vt0, t0 WHERE (NULL);SELECT DISTINCT ((((t0.c59 IN ())))>((((t0.c59) IS TRUE)))), NTILE(((((LIKELIHOOD(DISTINCT t0.c59, 0.5637222682308518))OR(((t0.c59)<>(t1.c19)))))OR(((t0.c59)LIKE(t1.c0))))) OVER ( RANGE  UNBOUNDED PRECEDING), COUNT(AVG((((t1.c58)) BETWEEN ((t1.c19)) AND ((t1.c19))))), ((t1.c19)>=(t0.c59)) COLLATE BINARY, ((TIME(t1.c19, '-241660631', t1.c19)) IS TRUE) FROM t0, t1 ORDER BY UPPER(0.34660014819615814)  NULLS LAST LIMIT 607021422 OFFSET -2015645152;SELECT DISTINCT MAX(CASE t1.c58  WHEN t1.c19 THEN t0.c59 END), GROUP_CONCAT(t0.c59), x'264c' FROM t1 WHERE (((((((((((NULL)AND(NULL)))AND('-986278043')))OR(NULL)))AND('49342732'))) ISNULL)) ORDER BY (('') BETWEEN (x'8758') AND (((((((((vt0.c0)OR(t1.c19)))AND(t0.c59)))OR(t1.c58)))OR(t1.c58))))  NULLS LAST, (((t1.c19 IN ())) BETWEEN (x'' COLLATE BINARY) AND (((t0.c59)==(t0.c59))));SELECT DISTINCT (t1.c0 IN ()) FROM vt0, t0; -- 0ms;
SELECT COALESCE(DISTINCT (NOT (t1.c19)), (((t0.c59)) NOT BETWEEN ((t1.c19)) AND ((t1.c58)))), ((CASE WHEN vt0.c0 THEN t0.c59 WHEN t1.c19 THEN t1.c0 WHEN vt0.c0 THEN t1.c19 END) IS TRUE), ((((-2014003353) NOT BETWEEN (t1.c0) AND (t1.c0))) IS FALSE) FROM t0, t1, vt0; -- 0ms;
SELECT ALL LAG(((~ (NULL)) IN ()), ((((t1.c19) BETWEEN (vt0.c0) AND (t1.c58)))LIKE((('1121970')<=(t0.c59)))), ((((t1.c58) ISNULL)) NOT BETWEEN (((((t1.c0)AND(t1.c0)))AND(t1.c19))) AND (TRIM(DISTINCT t1.c0, vt0.c0)))) OVER () FROM t1, vt0, t0; -- 1ms;
SELECT ALL ((CAST(vt0.c0 AS TEXT))>>('o.')) FROM t0, vt0, t1 WHERE ((NOT ((NOT ('oB'))))); -- 0ms;
SELECT vt0.c0 COLLATE NOCASE FROM t0 WHERE (((((((((((1.973720166E9)AND(NULL)))OR(NULL)))OR(NULL)))OR(NULL))) NOTNULL)) ORDER BY CASE 0.21237542528835474  WHEN json_insert(t1.c0, t1.c58, t1.c0) THEN (NOT (0.7512768623177867)) WHEN TRIM(DISTINCT t1.c58, t1.c19) THEN t1.c58 WHEN (((t1.c19)) NOT BETWEEN ((t1.c58)) AND ((0X25f9c0e2))) THEN CASE WHEN t0.c59 THEN t1.c19 WHEN t1.c0 THEN vt0.c0 WHEN t0.c59 THEN vt0.c0 ELSE t0.c59 END END  NULLS LAST;SELECT ALL (NOT (TRIM(t1.c0, vt0.c0))) FROM t1 WHERE (UNLIKELY((((1.791020625E9))>((NULL)))));SELECT t1.c0 FROM vt0 NOT INDEXED, t1; -- 0ms;
SELECT DISTINCT CASE ((NULL)||(vt0.c0))  WHEN ((((t1.c19)OR(t1.c0)))OR(t1.c19)) THEN vt0.c0 WHEN t0.c59 COLLATE BINARY THEN (((vt0.c0))==((t1.c19))) WHEN ((((t0.c59)OR(vt0.c0)))OR(t1.c0)) THEN (vt0.c0 IN ()) ELSE t0.c59 END FROM vt0, t0 WHERE (((('-1222564958')) BETWEEN ((CASE WHEN NULL THEN 0.08260445555892071 WHEN 'QDpJqHꌝT' THEN x'49b4' WHEN 2.84041499E8 THEN '1629853242' ELSE x'beae' END)) AND ((CASE NULL  WHEN NULL THEN '1041048214' ELSE 0.7988229198094682 END))));SELECT GROUP_CONCAT(-1488130237 COLLATE RTRIM) OVER (), ((t1.c0) NOT NULL), 0Xffffffffe1dabae8, COALESCE(t1.c58, t1.c0, vt0.c0, 'i|jAix[B') COLLATE BINARY, (((t1.c0)) NOT BETWEEN ((CASE WHEN t0.c59 THEN t1.c19 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c19 THEN t0.c59 ELSE vt0.c0 END)) AND (((~ (t1.c58))))) FROM vt0, t1, t0; -- 2ms;
SELECT DISTINCT ((t1.c19) IS FALSE) FROM t0 WHERE (TRIM(((NULL)/(x'a93c')), ((x'') NOTNULL)));SELECT ALL (~ ((((t1.c58)) BETWEEN ((t0.c59)) AND ((t0.c59))))) FROM t0 ORDER BY ((((TOTAL_CHANGES())AND(((((t1.c58)OR(t1.c58)))AND(0.5383063028582212)))))AND((((t1.c0)) NOT BETWEEN (('^ZMKℛ?')) AND ((t1.c19)))))  NULLS FIRST LIMIT -365857393 OFFSET -1735668977;SELECT ((((t1.c58)/(t1.c0))) NOT BETWEEN (((t1.c58)LIKE(t1.c19))) AND (((t1.c58) NOTNULL))) FROM t0, t1, vt0 WHERE ((((('-1648403516')AND(1.7976931348623157E308)))AND('1558205671')) COLLATE BINARY) GROUP BY TRIM((NOT (t1.c58)), SQLITE_SOURCE_ID()); -- 1ms;
SELECT (+ ((t0.c59 IN ()))) FROM vt0 WHERE (((((-322175438) NOT NULL)) ISNULL)); -- 0ms;
SELECT ALL (((AVG(t1.c0)))<>((t1.c19))), ((((t1.c0)=(t1.c19)))/(((0X41bae527) IS FALSE))), (((t1.c0)<>(vt0.c0)) IN (CASE WHEN t1.c58 THEN vt0.c0 WHEN vt0.c0 THEN t0.c59 WHEN t1.c0 THEN t1.c58 ELSE t0.c59 END)) FROM t0 ORDER BY CAST((((t1.c19))>=(('0.07505667039057473'))) AS INTEGER)  NULLS FIRST;SELECT DISTINCT (((((((((((t1.c58, t1.c58, t0.c59))<>((t1.c58, t1.c58, t1.c58))))OR(CAST(t1.c58 AS INTEGER))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c58)))))OR(MIN(vt0.c0))))AND(t0.c59)) FROM t0 WHERE (((TYPEOF(DISTINCT x'')) IS FALSE));SELECT ALL ((((t1.c0)AND(t0.c59))) NOT BETWEEN (((((vt0.c0)OR(t0.c59)))OR(t1.c19))) AND ((t1.c19 IN ()))) FROM t1;SELECT DISTINCT t1.c58 COLLATE BINARY FROM t1, vt0 WHERE (''); -- 0ms;
