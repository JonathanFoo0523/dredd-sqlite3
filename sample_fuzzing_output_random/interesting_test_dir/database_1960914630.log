-- Time: 2024/06/07 10:21:46
-- Database: database30
-- Database version: 3.40.0
-- seed value: 1960914630
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, compress=likely, uncompress=likely, matchinfo=fts3); -- 2ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '39840'); -- 7ms;
PRAGMA recursive_triggers = true; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('1088241005', x''); -- 0ms;
UPDATE vt1 SET c0=0.4897863711446173, c0=NULL, c0=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 4ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES (x'16f7', 0.4897863711446173), (x'900b', 0.8200895859074525), (0.21016601176457128, x''), (x'', '-1169553623'), ('OcItڣ\n8D}', x''); -- 1ms;
COMMIT TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(x'', NULL, NULL) WHERE CAST(SQLITE_SOURCE_ID() AS REAL); -- 1ms;
UPDATE OR FAIL vt0 SET (c0)=(-1952731221) WHERE vt0.c0; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='OCITڣ\n8D}', c1=',/6', c1='-613275015'; -- 1ms;
UPDATE OR IGNORE vt1 SET c0=0.9990883537106368 WHERE (NOT (CAST(vt1.c0 AS INTEGER))); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-967478596'), (x''), (NULL); -- 1ms;
INSERT OR FAIL INTO vt1(c0) VALUES ('-813311302'); -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0='_穜YWGd8' WHERE ((CAST(vt1.c0 AS REAL))<(((vt1.c0)>=(vt1.c0)))); -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.5450062713352649; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 3ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=('-594838948', 2140617647); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
VACUUM main; -- 4ms;
UPDATE OR IGNORE vt0 SET (c1)=('-613275015') WHERE TRIM(((vt0.c0)GLOB(vt0.c0))); -- 1ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES (NULL, '1411272987'); -- 1ms;
PRAGMA cache_spill = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (0.3178803676453813); -- 4ms;
CREATE VIRTUAL TABLE vt2 USING fts5(c0 UNINDEXED); -- 1ms;
REINDEX; -- 1ms;
PRAGMA temp.auto_vacuum; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (NULL), (NULL), (NULL); -- 1ms;
UPDATE vt1 SET (c0)=('') WHERE (HEX(vt1.c0) IN ()); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES ('1411272987'); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2115555467); -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(x'29e3', '^e7YQ\rKN_', '0.4897863711446173'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=('-31572627', x'b96f', '3]'); -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (NULL), (-9.67478596E8), ('/V'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), ('1811451383'), (x''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1832412163'; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-140376413'; -- 0ms;
INSERT OR IGNORE INTO vt2(c0) VALUES (0.966560022148322); -- 0ms;
END; -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT vt1 SET c0='0.9990883537106368', c0=0.750310705298021; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (''), (0xffffffffba4a0729), (x'f2c9'), (NULL), (''); -- 0ms;
REINDEX  vt2; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
INSERT OR ABORT INTO vt2 VALUES (NULL); -- 1ms;
INSERT INTO vt2(vt2) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt2 VALUES (x'dd6c'); -- 1ms;
INSERT OR IGNORE INTO vt2 VALUES (NULL), (0.7838436001738885), (NULL); -- 0ms;
UPDATE OR IGNORE vt2 SET c0='1811451383'; -- 1ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt2(c0) VALUES (''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x''); -- 2ms;
UPDATE OR IGNORE vt1 SET (c0)=(''); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR REPLACE vt2 SET (c0, c0)=(0.7838436001738885, -6.13275015E8) WHERE (NULLIF(DISTINCT 0x2a773c70, vt2.c0) IN ((x'' IN ()))); -- 0ms;
UPDATE OR ROLLBACK vt2 SET c0=NULL WHERE ((((vt2.c0) NOT NULL)) IS FALSE); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1) VALUES('merge=1348271469,8');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 12); -- 2ms;
PRAGMA main.shrink_memory; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-1931314807'; -- 0ms;
UPDATE vt2 SET (c0)=(799972464) WHERE '0.9990883537106368' COLLATE BINARY; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt2(c0) VALUES (0.15193466315388815); -- 0ms;
PRAGMA cache_spill; -- 0ms;
END; -- 0ms;
PRAGMA main.checkpoint_fullfsync = true; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO vt2(c0) VALUES (NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA stats; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='2140617647'; -- 1ms;
INSERT OR ROLLBACK INTO vt2(c0) VALUES (x''); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (((((CAST(NULL AS INTEGER))AND(((x'')LIKE('-140376413')))))OR(CAST('_u3ZlZj ' AS INTEGER)))); -- 0ms;
END; -- 0ms;
COMMIT; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (((((vt1.c0))=((vt2.c0))))/(MIN(vt2.c0))), ('' IN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), LEAD(('m]{MR' IN (CASE WHEN vt1.c0 THEN vt1.c0 END, (- (vt2.c0)))), CAST(((((vt2.c0)OR(vt1.c0)))OR(x'')) AS INTEGER), vt2.c0) OVER ( RANGE  CURRENT ROW), ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)))AND(x'')))AND(TRIM(vt2.c0, vt1.c0))), (NOT (((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) FROM vt2, vt1 ORDER BY ((((vt2.c0)=(vt2.c0))) NOT NULL) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT MIN(((vt1.c0)OR(vt1.c0))) COLLATE RTRIM, ('' IN (vt2.c0, vt2.c0)) COLLATE RTRIM, json_array_length(((((((((vt2.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt2.c0))) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT MAX(vt2.c0 COLLATE RTRIM, ((vt2.c0) BETWEEN (NULL) AND (vt1.c0)), (vt1.c0 IN ()), ((vt1.c0) NOT NULL)) FROM vt2, vt1 NOT INDEXED WHERE ((((((1088241005) BETWEEN ('1339143137') AND ('-1169553623'))))<=(((((NULL, x'', '搃eP)F', 0.21016601176457128, x''))>(('-1e500', '-1386218935', 0.5450062713352649, NULL, '1411272987'))))))); -- 1ms;
SELECT ALL vt1.c0 FROM vt1, vt2 WHERE (CAST((1549342648 IN ()) AS REAL)); -- 0ms;
SELECT DISTINCT LEAD((- (((vt1.c0) IS TRUE))), 0x2fae9c70, ((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(NULL)))AND(CASE 0Xffffffffd275ddb7  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(0X5c5917b8)))OR((vt1.c0 IN ()))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)<(vt1.c0))))) OVER (), vt1.c0, LAST_INSERT_ROWID() FROM vt1 LIMIT -1386218935; -- 0ms;
SELECT vt1.c0 FROM vt1, vt2; -- 0ms;
SELECT DISTINCT SUM((((vt2.c0))!=((vt1.c0)))) OVER (), NULL COLLATE BINARY, (- (vt2.c0)) COLLATE NOCASE FROM vt2 WHERE (CASE ((NULL) NOTNULL)  WHEN ((0.3657038455706182) NOT NULL) THEN (- ('1040:514 7917389065914019930-4002318344845092139 -6982807996038404664 1087 C粥')) ELSE CAST(x'' AS TEXT) END) LIMIT 230750002 OFFSET 1870469006;SELECT CAST((x'' IN ()) AS INTEGER) FROM vt2, vt1 WHERE ((((('unixepoch')%(x'')))!=(((NULL)AND(0.32904987576693245))))) GROUP BY (vt2.c0 IN ()); -- 0ms;
SELECT DISTINCT CASE json_quote(vt1.c0)  WHEN vt1.c0 THEN ((vt2.c0)>=(vt2.c0)) END, ((CASE WHEN vt1.c0 THEN vt1.c0 END)/(('' IN ()))), ((vt2.c0 COLLATE RTRIM) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (vt1.c0 COLLATE BINARY)) FROM vt1 WHERE ((0.7839641298846926 IN ())) GROUP BY CAST(vt1.c0 AS REAL) COLLATE BINARY HAVING ((((((((vt2.c0)OR(vt1.c0)))OR(vt1.c0)))OR(CAST(vt2.c0 AS TEXT))))AND(((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))));SELECT (((((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR('')))AND(CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1;SELECT DISTINCT CASE WHEN ((vt1.c0)%(vt2.c0)) THEN vt2.c0 ELSE SQLITE_VERSION() END FROM vt2, vt1 WHERE (IFNULL(DISTINCT NULL COLLATE RTRIM, '_3(x(ov㵺' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT (+ (vt1.c0))), SUM(((vt2.c0)IS(vt2.c0))), ((((((((((((((vt2.c0)IS(vt1.c0)))OR(((vt2.c0)<<(vt2.c0)))))AND(((((vt1.c0)AND(vt2.c0)))AND('-31572627')))))AND(UNLIKELY(DISTINCT vt2.c0))))OR(CAST(vt1.c0 AS REAL))))AND((((vt2.c0))<>((vt2.c0))))))AND(CASE vt2.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 END)) FROM vt2;SELECT ALL MIN((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0)))) FROM vt1, vt2 WHERE (CAST(ABS(DISTINCT NULL) AS NUMERIC)); -- 1ms;
SELECT DISTINCT TOTAL(CAST(vt2.c0 AS NUMERIC)) FILTER(WHERE ((CAST('-594838948' AS TEXT)) ISNULL)) OVER () FROM vt2 WHERE (((CASE NULL  WHEN 0X4e8de20a THEN 0.10149384851243348 END)-(CASE 0.5208322360371164  WHEN 0x724cfe2d THEN 0xffffffff8b9bafab ELSE x'' END))); -- 0ms;
SELECT ALL COUNT(0.3293226749258905) OVER (), ((CAST(vt1.c0 AS BLOB))>=((vt1.c0 IN ()))), (((((((((vt1.c0 IN ()))AND(CASE WHEN vt1.c0 THEN 0.8262431949809285 ELSE vt1.c0 END)))AND((vt1.c0 IN ()))))OR('')))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0)))) FROM vt1;SELECT ALL (((vt2.c0)) NOT BETWEEN (((NOT (vt2.c0)))) AND ((((vt1.c0) ISNULL)))), ((((vt2.c0)=(vt2.c0)))OR(vt1.c0)), ROW_NUMBER() OVER () FROM vt1, vt2 GROUP BY (vt2.c0 COLLATE NOCASE IN (((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)), LENGTH(vt2.c0))); -- 0ms;
SELECT ALL ((((((vt1.c0)AND(vt2.c0)))OR(vt2.c0)))AND((vt1.c0 IN (vt2.c0)))) FROM vt1, vt2 WHERE ((~ (CASE NULL  WHEN 0.8200895859074525 THEN NULL END))); -- 0ms;
SELECT DISTINCT (NOT (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)), (((((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))))AND(TYPEOF(DISTINCT vt1.c0))))OR(COUNT(*))), (~ (CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 ELSE vt2.c0 END)) FROM vt1, vt2 WHERE (((CASE WHEN 0.3178803676453813 THEN 'po' WHEN 1.549342648E9 THEN 'vv|Ar6jA' WHEN -117383181 THEN 'nf6.' END)|((NOT (NULL))))); -- 0ms;
SELECT ALL (((((vt1.c0, x'', vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt2.c0, vt1.c0)) AND ((x'58cb', vt2.c0, vt2.c0, vt2.c0, vt1.c0)))) IS TRUE), MAX((vt1.c0 IN ())) COLLATE BINARY, COUNT(*) OVER ( PARTITION BY ((NULL) IS TRUE), NULL) FROM vt2, vt1; -- 0ms;
SELECT DISTINCT LEAD((CAST(vt2.c0 AS INTEGER) IN ()), ((((((((((vt1.c0)OR(vt1.c0)))AND(vt2.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (TYPEOF(DISTINCT vt1.c0)) AND (((vt2.c0) NOT BETWEEN (vt1.c0) AND (NULL)))), vt2.c0) OVER () FROM vt1, vt2 WHERE (((('HKG|(fY)')*(0x2fae9c70)) IN ())); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((CAST(vt1.c0 AS TEXT))OR(((vt1.c0)>=(vt1.c0)))))OR(((vt1.c0) ISNULL))), (vt1.c0 IN (vt1.c0)) COLLATE BINARY) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT vt2.c0 COLLATE RTRIM, TRIM(vt1.c0) COLLATE NOCASE, (((('-613275015')/(vt2.c0)))|(vt2.c0)) FROM vt1, vt2 WHERE (((((x'')||(0.024676985551573716))) BETWEEN (NULLIF(DISTINCT 'Clovfl', 'zBU')) AND (((((((((0xffffffffd275ddb7)OR(x'fc26')))AND(x'')))OR(1598693014)))AND('712457328'))))); -- 0ms;
SELECT CAST(TYPEOF(DISTINCT vt1.c0) AS REAL), CASE vt1.c0 COLLATE RTRIM  WHEN '1917648429' THEN (~ (vt1.c0)) WHEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)!=(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN ('279362258') AND (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))) ELSE CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END END, CAST(AVG(vt1.c0) AS NUMERIC) FROM vt2, vt1 WHERE (((CASE WHEN x'ddd7' THEN '' ELSE 0x25f9bc7a END)&('-1759010167' COLLATE NOCASE))); -- 0ms;
SELECT GROUP_CONCAT((((vt1.c0))==((vt2.c0))) COLLATE RTRIM), ((((((vt2.c0)AND(vt2.c0)))OR(vt1.c0)))IS(((vt2.c0) ISNULL))), vt2.c0 COLLATE BINARY FROM vt1;SELECT DISTINCT ((((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt2.c0, x'')) AND ((vt1.c0, vt1.c0, vt1.c0)))))==((TRIM(vt2.c0)))) FROM vt2 ORDER BY vt1.c0 ASC  NULLS FIRST, (~ (vt1.c0 COLLATE NOCASE)), CASE (((vt1.c0))<((vt2.c0)))  WHEN ((vt1.c0)/(NULL)) THEN vt1.c0 COLLATE RTRIM END ASC;SELECT DISTINCT (((vt2.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0)>(vt1.c0))))<>((CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)), CAST(vt2.c0 AS INTEGER)))) FROM vt2, vt1 WHERE (LIKELY('-1732065144') COLLATE BINARY) GROUP BY CASE ((vt2.c0)==(vt2.c0))  WHEN vt2.c0 THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END ELSE ((((vt2.c0)AND(vt2.c0)))AND(vt1.c0)) END, CASE (- (vt2.c0))  WHEN ((vt2.c0) NOTNULL) THEN ((('''kUwI')) BETWEEN ((vt2.c0)) AND ((vt1.c0))) END, CAST(HEX(DISTINCT vt2.c0) AS REAL), (((0.4542029541213062 IN (vt2.c0))) ISNULL), (((((((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt2.c0 AS TEXT))))OR(((vt2.c0)<>(vt2.c0)))))AND('1348271469')) HAVING ((CASE WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt2.c0)%(vt1.c0))) AND ('v	')); -- 0ms;
SELECT DISTINCT AVG(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt1.c0)))OR(vt1.c0))), MIN(vt2.c0), ((vt2.c0 COLLATE BINARY)GLOB(vt1.c0)) FROM vt2 WHERE ((((((((((((((('-117383181')AND(NULL)))OR('1935755598')))AND(x'')))OR(-1732065144)))OR('q')))AND(NULL)))LIKE(((x'')>=('')))));SELECT ALL ((COUNT(*)) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((- (vt2.c0)))) FROM vt2 WHERE ((- ((('Wj')OR(0X4e8de20a)))));SELECT DISTINCT ((('᎑)''&<ᛵ'))<>((((vt1.c0)GLOB(vt2.c0))))) FROM vt1;SELECT ALL ((((vt2.c0)-(0.10149384851243348)))/((vt2.c0 IN (vt2.c0)))), ((vt2.c0 COLLATE NOCASE)==(((vt2.c0) ISNULL))), (((((vt1.c0)>(vt2.c0))))<=((((vt2.c0)AND('0.7839641298846926'))))) FROM vt1, vt2 WHERE ((~ (CASE WHEN '-1759010167' THEN x'' ELSE 'ﵭ#L]E''' END))) ORDER BY CASE WHEN ((((vt1.c0)AND(vt2.c0)))OR(vt2.c0)) THEN ((vt1.c0)>>(vt2.c0)) END  NULLS LAST; -- 0ms;
SELECT DISTINCT AVG((~ (vt1.c0))), ((TOTAL(vt2.c0))||(GROUP_CONCAT(vt2.c0))), CAST(((vt1.c0)==(vt1.c0)) AS BLOB), CAST(((vt1.c0)IS NOT(vt1.c0)) AS BLOB), ((vt1.c0 COLLATE BINARY)-('3]')) FROM vt1 WHERE (((((((((((((CAST(0.8213239484500878 AS REAL))OR(CASE NULL  WHEN x'' THEN 0.9894461827643417 WHEN 0.4430736731170365 THEN '' WHEN 0.15536000602262956 THEN 0.3043349614805736 ELSE '230750002' END)))OR(-3.1572627E7 COLLATE BINARY)))AND(((x'')IS NOT(NULL)))))OR(0.0378634040327519 COLLATE RTRIM)))AND(((x'9d8c') NOTNULL))))OR(((1413277133)>=('1232787878')))));SELECT DISTINCT CASE (vt2.c0 IN ())  WHEN AVG(0.1847958304448587) THEN ((vt2.c0) IS FALSE) ELSE ((vt2.c0)OR(vt2.c0)) END FROM vt2 WHERE (CAST(((0.4111125769705718) NOT BETWEEN (0X5f4a1e96) AND (0Xffffffff9d9bc1fe)) AS INTEGER)); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT x'') FROM vt1 WHERE ((((SQLITE_COMPILEOPTION_USED('F◐GA75?TA')))<((CASE '-1732065144'  WHEN 1.915098001E9 THEN '' END)))); -- 0ms;
SELECT ALL CASE CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt2.c0 END  WHEN 0.8213239484500878 THEN (((vt2.c0))==((vt1.c0))) ELSE ((vt2.c0)|(vt2.c0)) END FROM vt2, vt1; -- 0ms;
SELECT ALL (((vt1.c0 COLLATE NOCASE, (('Fz') BETWEEN (vt2.c0) AND (vt1.c0)), ((((vt2.c0)OR(vt2.c0)))OR(vt1.c0)), vt2.c0 COLLATE BINARY, (- (vt1.c0))))>((LOWER(vt2.c0), ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)), SUM(vt2.c0), NULLIF(DISTINCT vt1.c0, 0.3669800876203603), CAST(NULL AS BLOB)))) FROM vt1 WHERE (((0.7606675105864603) NOT BETWEEN ('-612397841') AND (0.07549780246678361)) COLLATE BINARY);SELECT DISTINCT vt1.c0 FROM vt2, vt1 WHERE (((((((((((0.4430736731170365) IS TRUE))OR(((x'')LIKE(NULL)))))AND(CASE WHEN NULL THEN x'ea33' ELSE 0xffffffff9c33924a END)))AND((((('0.4111125769705718')OR(NULL)))OR(0.9391423788194756)))))OR(CASE 'S'  WHEN NULL THEN 'ZDSVe1' ELSE '0.3657038455706182' END))); -- 0ms;
SELECT ALL CAST((((vt2.c0, vt1.c0, vt2.c0))<((vt2.c0, vt2.c0, vt1.c0))) AS REAL), ((((vt1.c0)||(vt2.c0))) NOT BETWEEN ('0.024676985551573716') AND (((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE ((vt1.c0)<<(vt1.c0))  WHEN TYPEOF(DISTINCT vt2.c0) THEN (('-')>=(vt2.c0)) ELSE ((vt1.c0) BETWEEN (vt2.c0) AND (x'')) END FROM vt1, vt2 WHERE (((SQLITE_SOURCE_ID())AND(CAST(0.3754515344460011 AS INTEGER)))); -- 0ms;
SELECT ALL ((('0.3657038455706182', vt1.c0, vt1.c0, vt1.c0, vt2.c0)) BETWEEN ((vt2.c0 COLLATE RTRIM, vt1.c0, CAST(vt2.c0 AS BLOB), MIN(NULL), ((vt2.c0) ISNULL))) AND ((((vt2.c0) IS FALSE), vt2.c0, ((vt2.c0)|(vt2.c0)), ((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((('^e7YQ\rKN_')OR(vt2.c0)))AND(vt2.c0))))) FROM vt1 WHERE (((- (1.549342648E9)) IN (CASE '0.15536000602262956'  WHEN '^e7YQ\rKN_' THEN 0.5208322360371164 ELSE 'h8{' END, CASE WHEN 0.49299792264343256 THEN x'' WHEN NULL THEN 0.0 WHEN NULL THEN NULL ELSE NULL END))) GROUP BY ((((vt1.c0 IN ())))!=((CASE WHEN vt1.c0 THEN 0.3417969623500712 END)));SELECT ((GROUP_CONCAT(vt1.c0)) NOT BETWEEN (NULL COLLATE NOCASE) AND (CAST(vt1.c0 AS REAL))) FROM vt1, vt2; -- 0ms;
SELECT ALL ((CASE WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END) BETWEEN (((vt1.c0)OR(vt2.c0))) AND ((vt1.c0 IN (vt2.c0, vt2.c0, vt2.c0)))) FROM vt2, vt1; -- 0ms;
SELECT DISTINCT ((vt2.c0)GLOB(TOTAL(vt2.c0))) FROM vt1 WHERE (((((0.28963413498447266)!=(NULL))) NOT NULL)) GROUP BY NULLIF(DISTINCT vt1.c0, vt1.c0) COLLATE NOCASE HAVING (((((vt2.c0))<=((vt1.c0))))&((1598693014 IN (vt2.c0)))) ORDER BY ((((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)*(vt1.c0))));SELECT DISTINCT 'I uy' FROM vt2, vt1; -- 0ms;
SELECT DISTINCT NTH_VALUE((NULL IN ()), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) OVER () FROM vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), COALESCE(((vt1.c0)IS(vt1.c0)), ((vt2.c0) NOT NULL), (((vt2.c0))>=((vt1.c0))), (((vt2.c0))==((vt2.c0)))), COUNT(*) COLLATE NOCASE, ((CAST(vt2.c0 AS NUMERIC))-(vt2.c0 COLLATE NOCASE)), ((vt1.c0)>=(vt1.c0)) FROM vt2 LIMIT 476652365 OFFSET -1592557201;SELECT ALL (- (LIKELIHOOD(x'23ffa8b6', 0.9870778800559694))) FROM vt2 WHERE ((~ (((NULL)<>('-1744260575'))))); -- 1ms;
SELECT ALL CASE COUNT(vt2.c0)  WHEN (~ (1714439444)) THEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)) ELSE (vt1.c0 IN ()) END FROM vt1, vt2 WHERE (json_insert('-744999519' COLLATE RTRIM, ROUND('-1744260575', ''), '-581511967'));SELECT DISTINCT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt1.c0)) AND ((vt2.c0, vt1.c0, vt1.c0))))+(vt1.c0)) FROM vt1, vt2 LIMIT -921035161 OFFSET 1413277133; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt2 ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER) DESC, ')}Q>7' ASC  NULLS FIRST;SELECT DISTINCT (CASE WHEN 0.7217069484353194 THEN vt1.c0 ELSE vt1.c0 END IN ()) FROM vt2, vt1 GROUP BY (((+ (NULL))) BETWEEN ((vt2.c0 IN ())) AND (LENGTH(vt2.c0))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt2; -- 0ms;
SELECT (NOT (((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) FROM vt1, vt2 WHERE (CASE WHEN NULL COLLATE NOCASE THEN NULL COLLATE RTRIM ELSE ((-1386218935) NOTNULL) END) LIMIT -1436643267 OFFSET 446032903; -- 0ms;
SELECT ALL CAST(((vt1.c0)<=(vt1.c0)) AS INTEGER) FROM vt1, vt2 WHERE (((0xffffffffb83c9685 IN (NULL, '', '-1754574326')) IN ())); -- 0ms;
SELECT (((vt2.c0, vt2.c0, vt2.c0, vt1.c0, vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL), x'' COLLATE BINARY, ((vt1.c0) NOT BETWEEN (vt2.c0) AND ('-1451435495')), 1.259480528E9, ((((((((vt1.c0)AND(vt1.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)), '3%]R', (vt2.c0 IN ()))) AND ((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)), ((0x515cae2b)>=(vt1.c0)), ((0Xffffffffd39835a1) ISNULL), (('૔p䥎(6n^?>') ISNULL), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))), ((vt1.c0) ISNULL), TOTAL_CHANGES()))) FROM vt2 LIMIT -744999519 OFFSET 1935755598;SELECT DISTINCT ((vt2.c0 COLLATE RTRIM)*((vt1.c0 IN ()))), x'', LAST_VALUE((((vt1.c0)<(vt2.c0)) IN (((vt2.c0) BETWEEN (vt1.c0) AND (NULL))))) OVER () FROM vt2, vt1; -- 1ms;
SELECT ALL (- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)))) FROM vt1, vt2 WHERE (((DATETIME('uBp*g!<q', '', NULL)) NOT BETWEEN ('VV|AR6JA') AND ((('')%(x'4225'))))); -- 0ms;
SELECT ALL vt2.c0 FROM vt2 ORDER BY (((NOT (vt1.c0))) NOTNULL), ((vt2.c0) IS TRUE) COLLATE RTRIM DESC;SELECT ALL CAST((((vt1.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt2.c0))) AS TEXT) FROM vt2, vt1; -- 0ms;
SELECT DISTINCT CASE (- (305040506))  WHEN vt1.c0 COLLATE BINARY THEN (vt2.c0 IN ()) WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) THEN CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN CASE WHEN vt1.c0 THEN vt2.c0 ELSE vt2.c0 END THEN ((vt2.c0)>>(vt2.c0)) WHEN (((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt1.c0)) AND ((vt2.c0, vt1.c0, vt2.c0))) THEN vt2.c0 WHEN ((vt2.c0)!=(vt1.c0)) THEN ((((vt2.c0)OR(vt1.c0)))OR(vt2.c0)) ELSE ((0.43944627724788243)OR(vt1.c0)) END, 0.9513325158951192, CAST(vt1.c0 AS INTEGER) FROM vt1 GROUP BY CAST(NULLIF(DISTINCT vt2.c0, vt1.c0) AS NUMERIC) LIMIT -1461169956 OFFSET 1935755598;SELECT DISTINCT ((vt2.c0)>=(vt2.c0)) COLLATE RTRIM FROM vt1, vt2 WHERE (CASE WHEN CASE 0.8380211279687613  WHEN x'f175' THEN '-1203988859' END THEN ((NULL) NOT NULL) WHEN ((('2103441724'))<>((-594838948))) THEN ((('Fz')) NOT BETWEEN ((NULL)) AND ((NULL))) WHEN (('')>('-1744260575')) THEN 0.0262655532810927 COLLATE RTRIM ELSE ((0.8262431949809285)<=(0.8868931316571128)) END); -- 0ms;
SELECT '1935755598' FROM vt2; -- 0ms;
SELECT ALL LEAD(LIKELY(CASE WHEN vt1.c0 THEN '爫╲/' END), UNLIKELY(((vt1.c0) BETWEEN ('{}') AND (vt1.c0))), (NOT (((vt1.c0) IS FALSE)))) OVER (), ((CAST(vt2.c0 AS TEXT)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (0.9505009149431054 COLLATE NOCASE)), UNLIKELY(vt1.c0) FROM vt1 LIMIT 637123706 OFFSET -1324486343;SELECT ALL vt2.c0 FROM vt1, vt2 WHERE ((('k[O' COLLATE BINARY) NOT NULL)); -- 1ms;
SELECT DISTINCT json_insert(((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0)), vt1.c0, (((vt2.c0))==((x'')))) FROM vt2, vt1 WHERE (((((((NULL)<=(292295762)))OR('-1461169956' COLLATE RTRIM)))OR(NULL COLLATE BINARY)));SELECT DISTINCT ((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 END) NOT NULL) FROM vt2;SELECT ALL ((((((vt1.c0)OR(vt2.c0)))AND(vt1.c0)))>>(ABS(vt2.c0))), ((IFNULL(DISTINCT vt2.c0, vt1.c0)) BETWEEN ((NULL IN ())) AND ((~ (vt1.c0)))), vt2.c0 FROM vt2, vt1; -- 0ms;
SELECT ALL (((NOT (vt2.c0))) NOTNULL) FROM vt2 WHERE (CAST((((x'3e3c')) NOT BETWEEN ((x'')) AND ((0xffffffffd39835a1))) AS NUMERIC)); -- 0ms;
SELECT json_quote(((('', vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, 'B뷕', vt1.c0)) AND ((vt1.c0, vt2.c0, vt1.c0)))) FROM vt2, vt1 WHERE ((~ (((0Xffffffffc00f3e2b)IS NOT(x''))))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))) NOT NULL) FROM vt2;SELECT ALL (((('0.750310705298021')AND(NULL)))OR((+ (vt1.c0)))) FROM vt1 WHERE ((- (0.3293226749258905 COLLATE BINARY))) GROUP BY CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('')) THEN ((vt2.c0)>>(vt1.c0)) WHEN TRIM(vt2.c0) THEN ((vt1.c0)||(0X5c657a7d)) WHEN ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt2.c0 AS NUMERIC) END HAVING HEX(DISTINCT (+ (vt2.c0)));SELECT DISTINCT 'PF(vflNH' FROM vt2; -- 0ms;
SELECT ALL ((CASE WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)<=(CAST(vt1.c0 AS REAL))), ((CAST(vt2.c0 AS NUMERIC)) NOT BETWEEN (HEX(vt2.c0)) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)), ((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE) FROM vt1, vt2 GROUP BY NULL, ABS(0.38421864852696364), CASE ((vt2.c0)||(vt1.c0))  WHEN vt1.c0 COLLATE NOCASE THEN x'' END; -- 0ms;
SELECT DISTINCT ((((+ (vt2.c0))))<(((((vt2.c0))>((vt1.c0)))))) FROM vt1, vt2 WHERE (((((x'')>>(0.13867953793414434))) NOTNULL)); -- 0ms;
SELECT ALL (((((vt1.c0)>>(vt2.c0))))!=((((x'')<<(vt1.c0))))), GROUP_CONCAT('') OVER (), (((((x'')) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))))>(DATE(vt1.c0, vt2.c0, vt1.c0, vt1.c0, vt1.c0))) FROM vt1 GROUP BY ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)-(((((0X4a7b5c62)OR(vt1.c0)))OR(vt2.c0)))), 0X51080408 COLLATE RTRIM, 0.5356203445547355 ORDER BY (((((((vt2.c0)AND(vt1.c0)))AND(vt1.c0))))<>(((0.6455441637506251 IN ()))))  NULLS FIRST;SELECT DISTINCT NULL COLLATE RTRIM FROM vt1; -- 0ms;
SELECT ALL CAST(((vt2.c0) NOT NULL) AS INTEGER) FROM vt1;SELECT RANK() OVER (), '1598693014', COUNT(*) FROM vt1 WHERE (((SUBSTR(2.103441724E9, 'I UY'))+(((('v6~O', 0Xffffffffd9b014dd, NULL)) NOT BETWEEN ((NULL, '-1946767582', NULL)) AND (('-1671955456', x'', x'')))))); -- 0ms;
SELECT ALL (((~ (-1.946767582E9))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS BLOB))) FROM vt2, vt1 GROUP BY (- (NULL)) HAVING (+ ((vt2.c0 IN ()))); -- 1ms;
SELECT DISTINCT ((((((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))AND(NULL)))OR((vt1.c0 IN (vt2.c0)))) FROM vt1;SELECT DISTINCT (((vt2.c0 IN (vt1.c0)))<=(((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0)))), GROUP_CONCAT(((vt1.c0) NOT NULL)), ((((vt1.c0) ISNULL)) NOT BETWEEN (SUM(vt2.c0)) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT ((x'') BETWEEN (vt2.c0 COLLATE RTRIM) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) FROM vt1 GROUP BY (vt1.c0 IN ()) LIMIT 1021279579 OFFSET 305040506;SELECT DISTINCT vt1.c0 FROM vt2 WHERE (LIKELIHOOD(x'' COLLATE NOCASE, 0.28390946537111483)) ORDER BY ((vt2.c0) BETWEEN (vt2.c0 COLLATE RTRIM) AND (((vt1.c0)>=(vt1.c0)))) DESC  NULLS FIRST;SELECT DISTINCT ((((((vt1.c0)OR(vt2.c0)))AND(vt2.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt2.c0)=(vt2.c0)))), ((((vt2.c0))<=((vt1.c0))) IN (COALESCE(DISTINCT vt1.c0, vt2.c0))), (CASE 0X497ad9a6  WHEN 2122983387 THEN vt1.c0 END IN ()) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT ((((vt2.c0) NOT NULL)) ISNULL) FROM vt2, vt1; -- 1ms;
SELECT DISTINCT '[q6,z', '', ((TYPEOF(vt1.c0))*(vt1.c0 COLLATE BINARY)) FROM vt1, vt2 WHERE ((((('/0') NOT NULL))+(CAST(x'' AS BLOB)))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt2, vt1 WHERE ((~ ((('AR{Z')|(x''))))); -- 0ms;
SELECT TOTAL(((((vt2.c0)OR(vt2.c0)))AND(0.9513325158951192))), (- (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((('285874784')OR(((vt1.c0) NOTNULL))))AND(vt1.c0)) FROM vt2, vt1 WHERE (1321293727); -- 0ms;
SELECT ALL GROUP_CONCAT((+ (vt1.c0)) COLLATE NOCASE) FROM vt1, vt2 GROUP BY vt1.c0; -- 0ms;
SELECT DISTINCT ((((vt1.c0, vt1.c0, vt2.c0, vt2.c0, 0.539097909213389))<=((vt2.c0, vt1.c0, x'', vt2.c0, vt1.c0))) IN ()) FROM vt2, vt1; -- 0ms;
SELECT LEAD('Ud!U', (vt1.c0 COLLATE RTRIM IN ()), (((0.8864567705923646, vt2.c0, x'')) BETWEEN ((vt2.c0, CAST(vt1.c0 AS INTEGER), (+ (vt1.c0)))) AND ((((vt2.c0) NOTNULL), (- (vt1.c0)), ((vt1.c0) IS TRUE))))) OVER (), ((LAST_INSERT_ROWID()) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)*(0.4880361449041162)))), PERCENT_RANK() OVER () FROM vt1, vt2 WHERE ((((('NOxG') NOT BETWEEN (x'59d8') AND (1187853612))) IS TRUE)); -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(x'' AS NUMERIC)) FROM vt2 WHERE (((((((((((((((0x2a773c70) NOTNULL))AND(x'')))AND(x'4f3d2466')))OR((((('1339143137')AND(0.05115302281947931)))AND(x'')))))AND((- (NULL)))))OR(((NULL) NOT BETWEEN (x'') AND ('')))))OR(0.0 COLLATE BINARY))); -- 1ms;
SELECT 1e500, vt1.c0, SUM((vt1.c0 IN ())) OVER () FROM vt1, vt2 LIMIT -1783272009 OFFSET -117383181; -- 0ms;
SELECT DISTINCT (+ ((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt2, vt1 WHERE ((NULL IN ())); -- 0ms;
SELECT DISTINCT CASE ((vt1.c0) IS FALSE)  WHEN MAX(vt2.c0) THEN ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt2.c0 COLLATE RTRIM THEN ((vt2.c0)*(vt1.c0)) WHEN vt2.c0 COLLATE BINARY THEN CASE WHEN x'' THEN NULL ELSE vt1.c0 END END, ((0.11185473225832387) IS FALSE), CASE vt1.c0  WHEN CASE WHEN 'f.GᷬQ(.' THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt2.c0)|(vt2.c0)) WHEN ((vt2.c0) NOT NULL) THEN ((vt2.c0)|(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((1.935755598E9)) BETWEEN ((vt2.c0)) AND ((vt1.c0))) END FROM vt1, vt2 WHERE (NULL) LIMIT 794046116 OFFSET 285874784; -- 0ms;
SELECT DISTINCT json_extract(-1946767582, ((vt1.c0)LIKE(vt2.c0))), ((((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=('C{^cQ3Kf')), (('-2082350764' COLLATE BINARY)IS NOT((- (vt1.c0)))) FROM vt1, vt2;SELECT ((GLOB(vt2.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 IN (vt2.c0))) AND (((((vt1.c0)AND(-1.754574326E9)))AND('')))), NULL, (((vt2.c0 IN (vt1.c0, vt1.c0)))IS(LIKELIHOOD(vt1.c0, 0.43357705815118097))) FROM vt1 WHERE (CASE WHEN ((NULL)<=(NULL)) THEN CASE WHEN x'' THEN x'' WHEN NULL THEN 1600561679 WHEN '1569678723' THEN '-1072742869' WHEN '-1485906489' THEN '' WHEN 'Ry7)' THEN x'' WHEN NULL THEN x'' WHEN 0Xffffffffc1fe2572 THEN '262340212' ELSE 0.35288876035375605 END ELSE (((',9*_\n', -1.946767582E9, x'')) BETWEEN ((x'', '1714439444', 'XIuE')) AND ((x'', '', 0X78edbd04))) END);SELECT ALL (IFNULL(vt2.c0, vt1.c0) IN ()) FROM vt1 WHERE (CAST((+ (0.966560022148322)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((((vt1.c0)+(vt2.c0)))AND(((vt2.c0)IS(vt2.c0)))))OR(vt1.c0)) FROM vt2 WHERE (CASE (0.5065623060523652 IN ())  WHEN CASE WHEN 0.3636546419316614 THEN '-140376413' END THEN ((0.7605973186601663)|(NULL)) WHEN ((NULL)*('476652365')) THEN (('>?-ohb3') IS TRUE) WHEN ((0.18474590630933008) NOTNULL) THEN (- (x'')) ELSE LIKE(x'dd75', x'd1d541dd') END);SELECT (((CAST(vt1.c0 AS NUMERIC), (((vt1.c0, vt2.c0, vt2.c0)) BETWEEN ((0.26460153381339435, vt2.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt1.c0))), ((vt1.c0) NOT NULL)))<=(((- (vt2.c0)), ((vt1.c0)|(vt1.c0)), x''))), json_object('jWٯa7*A', vt1.c0) COLLATE NOCASE, LEAD(((((((x'')OR(vt1.c0)))AND(vt2.c0))) NOT BETWEEN (TRIM(vt1.c0)) AND ((vt1.c0 IN ()))), ((((vt1.c0, vt1.c0, vt1.c0))>((1088241005, vt1.c0, vt1.c0))) IN ()), (((x'')) BETWEEN ((vt2.c0)) AND ((0.32621104879462315))) COLLATE BINARY) OVER () FROM vt2, vt1 WHERE (((((('', x'ec2b', x'')) BETWEEN (('', '', 0.7504679253912251)) AND ((x'', 0.18530878732568723, '䉠+Y%Gw'))))|(NULL))); -- 1ms;
SELECT CAST(COUNT(0.43375547229577904) AS TEXT) FROM vt2, vt1 WHERE ((((NULL)) NOT BETWEEN ((CAST('-1436643267' AS BLOB))) AND ((((0.4759599169619504) BETWEEN ('-612397841') AND (NULL)))))); -- 0ms;
SELECT DISTINCT CASE (vt1.c0 IN ())  WHEN ((((vt2.c0)AND(vt2.c0)))OR(vt1.c0)) THEN ((vt1.c0)AND(vt2.c0)) ELSE ((0.5631103456026901)LIKE(vt1.c0)) END FROM vt2 WHERE (((((57610929)+(''))) NOT BETWEEN (CAST(0.8534575332502973 AS REAL)) AND ((- (1940458001)))));SELECT ALL CASE ((((vt1.c0)AND(vt2.c0)))OR(vt1.c0))  WHEN (vt2.c0 IN ()) THEN 0Xffffffffdb722a79 WHEN CASE x''  WHEN vt1.c0 THEN vt2.c0 END THEN vt2.c0 WHEN CAST(vt1.c0 AS REAL) THEN CAST(vt2.c0 AS BLOB) ELSE vt1.c0 COLLATE NOCASE END, ((((((((LAST_INSERT_ROWID())OR((((vt1.c0, vt2.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))))))OR(vt2.c0 COLLATE BINARY)))AND((+ (vt1.c0)))))OR(((vt2.c0)<(vt1.c0)))), CASE WHEN (((vt1.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, x'', vt1.c0)) AND ((vt2.c0, 0.3178803676453813, vt2.c0))) THEN CASE vt1.c0  WHEN '' THEN vt1.c0 ELSE vt1.c0 END WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)IS NOT(vt2.c0)) THEN NULL END FROM vt2, vt1 WHERE ((+ (JULIANDAY(x'082f', NULL, 0.6241071419072144)))); -- 0ms;
SELECT DISTINCT '377026435', (vt2.c0 IN ()), (((vt2.c0 COLLATE RTRIM))<((((vt2.c0)/(vt2.c0))))) FROM vt2, vt1 WHERE (((((x'') NOT NULL))<(((-42110398) BETWEEN (x'f3f3') AND (NULL))))); -- 1ms;
SELECT DISTINCT ((CAST(vt1.c0 AS TEXT))>=(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) FROM vt1 WHERE (((((('1915098001', 'y1,r', '-1732065144'))>((x'', NULL, 0.04657883642095362))))AND(((NULL) NOT BETWEEN (x'') AND (0.727675064113174)))));SELECT ALL (+ (CAST(vt2.c0 AS BLOB))) FROM vt2, vt1 WHERE (TRIM(CAST(0.6887740459349645 AS INTEGER))); -- 0ms;
SELECT ALL (~ (((vt2.c0)>(vt1.c0)))) FROM vt1, vt2 WHERE (((CASE WHEN -998040084 THEN -1.203988859E9 WHEN -6.12397841E8 THEN -4.2110398E7 WHEN 0Xfffffffff211a06a THEN 0.7149847844460508 ELSE x'' END) NOT BETWEEN (((0.02859946272300551) NOTNULL)) AND (('-517821278' IN ())))) GROUP BY CAST(((vt2.c0) ISNULL) AS BLOB) HAVING CASE (vt1.c0 IN (vt2.c0, vt1.c0))  WHEN LIKELY(vt2.c0) THEN (((vt2.c0)) NOT BETWEEN (('941996735')) AND ((x''))) WHEN TOTAL(vt2.c0) THEN ((vt2.c0) NOT BETWEEN ('') AND (vt2.c0)) WHEN COUNT(*) THEN vt1.c0 ELSE CAST(vt2.c0 AS INTEGER) END; -- 0ms;
SELECT ALL vt1.c0, ((((vt2.c0) NOTNULL))>>(((vt2.c0)OR(vt2.c0)))), ((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt2.c0 END) NOT NULL) FROM vt1;SELECT DISTINCT vt2.c0, CAST(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) AS REAL), LAG(CASE WHEN vt2.c0 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE CAST(vt1.c0 AS BLOB) END, NULL, ((vt1.c0)>>(vt1.c0)) COLLATE BINARY) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt1, vt2 WHERE (TRIM(DISTINCT ((0.23827934348528723)>>('FI')), CASE 0.16214801233221798  WHEN 'z' THEN x'' ELSE '' END)); -- 0ms;
SELECT DISTINCT ((MAX(0.22215127607837326))*(((vt2.c0)OR(vt1.c0)))) FROM vt2 WHERE (((((((((((('-748480779')AND(x'')))OR('587815348')))OR(0.6938715572334125)))OR('l	9f')), LOWER(DISTINCT NULL), ((((x'')AND(x'cf1e')))OR(x''))))>=((((NULL) NOT BETWEEN ('') AND (0.8795816774328689)), NULL, ((NULL)!=('-783431054'))))));SELECT DISTINCT (((((((vt2.c0)AND(vt2.c0)))AND(vt1.c0))))=((((vt2.c0)|(vt1.c0))))) FROM vt2;SELECT DISTINCT (((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()), vt1.c0, GROUP_CONCAT((((vt1.c0))>((vt2.c0)))) OVER () FROM vt1 WHERE ((((x'' IN (262340212))) IS TRUE));SELECT CASE WHEN (((((((('Y')AND(vt1.c0)))AND(vt2.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)IS NOT(vt2.c0)) WHEN LENGTH(vt1.c0) THEN vt2.c0 WHEN (((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))) THEN ((vt1.c0) ISNULL) ELSE NULL END FROM vt2, vt1; -- 0ms;
SELECT (NOT (CAST(vt1.c0 AS NUMERIC))) FROM vt2 WHERE ((((('鱚do6+B|') BETWEEN (0xffffffff8bf6af22) AND ('v,t_X')))=('{ᓝH%')));SELECT DISTINCT ((LIKE(vt1.c0, vt1.c0, '0')) BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END) AND (((vt1.c0) ISNULL))), (~ (vt1.c0 COLLATE RTRIM)), SUM(((vt1.c0) IS TRUE)), FIRST_VALUE((~ (((vt1.c0)GLOB(vt1.c0))))) OVER (), '뫒W7\' FROM vt1 INNER JOIN vt2 ON ((((vt1.c0)<=(vt2.c0)))&((+ (vt2.c0)))); -- 0ms;
SELECT DISTINCT '534247155', NTH_VALUE((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), (((+ (0.7549898699498986)))!=(vt1.c0))) OVER (), TOTAL(((vt1.c0) NOTNULL)) OVER ( RANGE (NOT (((vt1.c0)!=(vt1.c0)))) PRECEDING EXCLUDE CURRENT ROW) FROM vt1 WHERE (CASE WHEN (~ (2.103441724E9)) THEN UPPER('1446433480') WHEN (+ (NULL)) THEN (('S&')/('401545548')) WHEN ((x'')<('')) THEN ((((((((((((0.06130829368300128)OR(0.97344014831279)))AND(x'4798')))OR(0.26097979491542844)))AND(1329324487)))OR('1725463717')))AND('')) END);SELECT ALL ((((vt1.c0 COLLATE BINARY)OR(((((((((0.5589403938126557)AND(vt2.c0)))AND(vt1.c0)))AND(vt1.c0)))AND('152856787')))))OR(vt1.c0 COLLATE NOCASE)) FROM vt2, vt1 WHERE (CASE WHEN ((NULL) BETWEEN ('') AND (NULL)) THEN (~ ('2103441724')) END); -- 0ms;
SELECT ALL (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()), (((((vt1.c0)GLOB(vt1.c0)), vt1.c0 COLLATE RTRIM, TOTAL(vt2.c0)))>=((vt2.c0, (+ (vt2.c0)), vt2.c0 COLLATE RTRIM))), CAST((vt1.c0 IN ()) AS TEXT) FROM vt1, vt2 GROUP BY CASE WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 COLLATE BINARY END; -- 0ms;
SELECT ((((- (vt1.c0))))>(((vt2.c0 IN ())))) FROM vt2 WHERE (((((CASE 476652365  WHEN x'' THEN '262340212' END)AND((((-1000905026)) NOT BETWEEN (('1e500')) AND ((x'99cb3d4b'))))))AND((((((((('-1952731221')OR(0.3505113299112187)))AND(NULL)))OR(NULL)))AND('0.9894461827643417')))));SELECT DISTINCT (((vt2.c0, vt2.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)), vt2.c0, MAX(-764027465), ((((vt2.c0)AND(vt2.c0)))OR(vt1.c0)), (vt1.c0 IN ()))) AND (((vt2.c0 IN ()), COUNT(*), ((vt1.c0) NOT NULL), CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 END, ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) FROM vt1 WHERE ((((((712457328)AND(0.372260322237984)))OR('0.4430736731170365')) IN ())) ORDER BY ((vt1.c0) NOT BETWEEN ((+ (vt2.c0))) AND ((- (vt1.c0)))) ASC, (+ (((vt1.c0) IS TRUE))) ASC;SELECT DISTINCT (((vt2.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt2.c0)>(vt1.c0))))) FROM vt1 WHERE (CASE (x'' IN ())  WHEN (NULL IN (1.917648429E9)) THEN CAST(x'ef28' AS REAL) WHEN 's' THEN x'' COLLATE RTRIM WHEN ((NULL) IS FALSE) THEN CAST('{jZr*_X' AS TEXT) END);SELECT ALL ((((vt1.c0)IS(vt2.c0))) BETWEEN (json_remove('wT\rSag', x'')) AND (0.6778462776052389)) FROM vt2, vt1;SELECT DISTINCT TRIM(DISTINCT vt2.c0 COLLATE BINARY) FROM vt1, vt2; -- 0ms;
SELECT ALL ((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0))) ISNULL) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT ((((CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)OR(((vt1.c0) ISNULL))))OR((((vt2.c0))!=((vt2.c0))))), 0.0 COLLATE NOCASE COLLATE RTRIM, ((((((0.6778462776052389) NOT NULL))OR(CASE vt2.c0  WHEN NULL THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END)))AND(MAX('Z/'))) FROM vt2, vt1 WHERE (((((NULL) NOTNULL))||(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((vt2.c0)|(vt1.c0)))IS((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1, vt2; -- 0ms;
SELECT ALL (((CASE x''  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END, ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)), highlight(vt1.c0, vt1.c0, x'd1bd', vt2.c0)))<((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ()), ((vt1.c0)/(vt2.c0))))) FROM vt1;SELECT DISTINCT CAST(vt1.c0 COLLATE BINARY AS REAL), (((vt1.c0)<<(vt1.c0)) IN ()), CAST(((vt2.c0) IS TRUE) AS NUMERIC), (NOT (x'')), ((CASE WHEN vt2.c0 THEN vt1.c0 END)==(load_extension(vt1.c0, vt1.c0))), (~ (0.7838436001738885)), ((((vt2.c0, vt2.c0, vt2.c0))<((vt1.c0, vt2.c0, vt1.c0))) IN ((vt1.c0 IN ()), MIN(vt1.c0))) FROM vt1;SELECT ALL ((((((vt1.c0)<=(vt1.c0)))AND(MAX(vt1.c0))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 WHERE (((((0.4246753406325472)<(NULL)))<=((((x'0a69'))<((0.7838436001738885)))))) ORDER BY ((CASE WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN x'777d' ELSE vt1.c0 END)-(vt2.c0)) DESC  NULLS LAST;SELECT ALL ((((((((((((((vt1.c0)AND(vt2.c0)))OR(vt1.c0)))OR(vt2.c0)))OR(vt1.c0)))AND(vt2.c0)))AND(vt1.c0)))%(((((vt1.c0)OR(vt2.c0)))OR(vt1.c0)))) FROM vt2 WHERE (CASE WHEN ((((NULL)OR(NULL)))OR(NULL)) THEN (NULL IN ('1365028395')) END);SELECT CAST((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((-7.44999519E8))) AS BLOB) FROM vt2, vt1 LIMIT -1580175445; -- 0ms;
SELECT DISTINCT SUM(((((vt2.c0)AND(vt2.c0)))AND(NULL))), (NOT (CASE WHEN NULL THEN vt1.c0 ELSE vt2.c0 END)), 1.31792129E9 FROM vt2, vt1 WHERE (((((0.8380211279687613) NOTNULL))|(CASE WHEN ')}q>7' THEN '' ELSE x'561d' END))) LIMIT -1713813705 OFFSET -1436643267; -- 0ms;
SELECT x'', CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((CAST(vt1.c0 AS BLOB)))), ((MIN(vt1.c0)) NOT BETWEEN (((((vt2.c0)OR(vt1.c0)))AND(vt2.c0))) AND (CAST(vt1.c0 AS TEXT))), (- (vt1.c0)) FROM vt1;SELECT ((vt1.c0 COLLATE RTRIM)OR((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))))), ((((('KoxDx3l3', vt2.c0, vt2.c0))=((vt2.c0, vt1.c0, vt1.c0)))) NOTNULL), COUNT(*) COLLATE BINARY COLLATE RTRIM FROM vt2 WHERE (x'');SELECT DISTINCT ((TIME(vt2.c0, vt1.c0, vt2.c0)) NOT BETWEEN (((vt1.c0)&(vt1.c0))) AND (vt2.c0 COLLATE NOCASE)) FROM vt1 GROUP BY x'', (+ (((((((((vt1.c0)OR(vt2.c0)))OR(NULL)))OR(vt1.c0)))AND(vt1.c0)))), (((vt1.c0, vt2.c0, vt2.c0)) BETWEEN ((((vt2.c0)=(vt2.c0)), IFNULL(DISTINCT vt2.c0, vt1.c0), (~ (vt1.c0)))) AND ((CAST(vt1.c0 AS INTEGER), CAST(vt2.c0 AS REAL), ((vt2.c0)||(vt2.c0)))));SELECT DISTINCT 0Xffffffffccdbc8e7, ((vt1.c0)LIKE(vt2.c0)) COLLATE BINARY, (((((vt2.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, x'd69a7a78', vt1.c0)) AND ((vt1.c0, vt1.c0, vt2.c0)))) NOTNULL) FROM vt2 NOT INDEXED, vt1 WHERE ((((((x'', 'r5*B\rHTaF', NULL)) NOT BETWEEN ((0.3178803676453813, '1550154365', x'')) AND (('', '', 0.5359099556234621)))) BETWEEN (0X6193387c) AND (((NULL)+(1.3223101668868864E-4))))); -- 0ms;
SELECT DISTINCT (NOT ('tk÷蓯qG\n')) FROM vt1; -- 0ms;
SELECT DISTINCT AVG(CAST(vt2.c0 AS REAL)) OVER () FROM vt1, vt2 ORDER BY ((vt1.c0)|(vt1.c0)) COLLATE BINARY  NULLS LAST LIMIT -2028625869; -- 0ms;
SELECT ALL ((+ (vt1.c0)) IN ()) FROM vt1 WHERE ((((((''))>=((0.21869111732477486))))<=(CASE 0.8134892322526623  WHEN x'df13' THEN 1259480528 END))) GROUP BY (((vt2.c0)) BETWEEN ((((((vt2.c0)OR(vt2.c0)))AND(vt1.c0)))) AND ((vt2.c0 COLLATE NOCASE))) HAVING (NOT (vt2.c0));SELECT DISTINCT (((+ (vt1.c0))) IS FALSE) FROM vt2 LIMIT -748480779 OFFSET 747891208;SELECT ALL ((('-599853576', vt2.c0, vt2.c0)) BETWEEN ((((vt2.c0)AND(x'')), ((((((((vt1.c0)OR('')))AND(vt2.c0)))AND(vt2.c0)))AND(vt1.c0)), 'eL~T76}i,')) AND (((vt1.c0 IN ()), '刊|ꈏ!B', vt2.c0 COLLATE NOCASE))) FROM vt2, vt1 WHERE ((((x'')!=(x'')) IN (((x'b9df') BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT ALL ((((((x'') IS FALSE))AND(CASE vt1.c0  WHEN vt2.c0 THEN 0.9691069347444518 END)))OR((((vt2.c0))==((vt2.c0))))) FROM vt1 WHERE (((('-1592557201', 0x1678f783, x'')) NOT BETWEEN (((x'7a72' IN ()), CASE ''  WHEN 0Xffffffffecc8f3d6 THEN x'' WHEN x'2d7b' THEN '' WHEN 0x5f5c7d95 THEN -1.946767582E9 WHEN NULL THEN '-1072742869' WHEN 0.9453809478648743 THEN '-341883140' ELSE x'02d8b8cd' END, (((x'', NULL, NULL))=((0.022865126761230536, 'eL~T76}i,', x''))))) AND ((((0.22326491368393087) IS TRUE), CAST(-1782148252 AS NUMERIC), CAST(0.874543172921891 AS REAL))))) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 END)) AND ((CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 END)))  NULLS LAST, (+ (UNLIKELY(vt1.c0)));SELECT CASE CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END  WHEN vt1.c0 THEN ((vt2.c0)&(vt2.c0)) ELSE ((((((((vt2.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt2.c0)))OR(vt1.c0)) END FROM vt1;SELECT DISTINCT AVG((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt1.c0, vt1.c0, vt2.c0)))) OVER () FROM vt1, vt2; -- 0ms;
SELECT DISTINCT (((1027750411)) BETWEEN ((((vt1.c0) NOT BETWEEN (x'') AND (vt2.c0)))) AND (((NOT (vt2.c0))))) FROM vt2, vt1 GROUP BY CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END COLLATE BINARY, ((((vt1.c0) IS FALSE))<=(((vt2.c0) IS TRUE))), (((+ (vt1.c0)))&(LIKELIHOOD(DISTINCT vt2.c0, 0.8898762195093745))) ORDER BY vt1.c0, x'' ASC; -- 1ms;
SELECT DISTINCT ((((NULL)IS NOT(vt1.c0)))>>(((vt1.c0)>(vt2.c0)))) FROM vt1 WHERE (NULL);SELECT DISTINCT 712457328, COUNT(*), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)))||(HEX(vt2.c0))) FROM vt1 WHERE ((+ ((((('0.97344014831279')OR(0.2500795260962423)))AND(x'680f')))));SELECT STRFTIME((- (x'')), vt1.c0 COLLATE NOCASE, vt1.c0) FROM vt1, vt2 WHERE (((CASE WHEN '1494246276' THEN 0.5883081638296132 END) ISNULL)); -- 0ms;
SELECT DISTINCT NULL FROM vt1, vt2 WHERE (CASE ''  WHEN (+ (NULL)) THEN ((-2144530092)>>(0.8133114455230481)) ELSE ((((NULL)AND(NULL)))AND('1569678723')) END); -- 0ms;
SELECT DISTINCT (((vt2.c0)<(vt1.c0)) IN ()), (((vt2.c0)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((0.07549780246678361))), CAST(((vt1.c0) IS FALSE) AS TEXT) FROM vt1, vt2 WHERE (((CASE WHEN 0.9673109088265126 THEN NULL ELSE 0X505cfd6d END) NOT BETWEEN (((-1.461169956E9)GLOB(NULL))) AND (((((0.9356989841771863)AND('310293154')))AND('K5'))))); -- 0ms;
SELECT ((vt2.c0) IS FALSE) FROM vt1 WHERE (((((((1.088241005E9)OR('C gh')))AND('r&'))) ISNULL)) GROUP BY ((vt2.c0) BETWEEN (((vt2.c0)+(NULL))) AND (1419067039)), (((+ (vt1.c0))) NOT BETWEEN (vt1.c0) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)), HEX(DISTINCT vt2.c0) COLLATE BINARY;SELECT CASE vt1.c0 COLLATE RTRIM  WHEN ((vt1.c0)<=(vt1.c0)) THEN vt2.c0 COLLATE RTRIM ELSE (vt2.c0 IN ()) END, (~ (CAST(0.044379704302543566 AS INTEGER))), ((((((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))OR((vt2.c0 IN (vt2.c0)))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt2.c0)))) FROM vt2, vt1 WHERE (((('>%') NOTNULL) IN ((~ (0.6174464893940446))))); -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)==('275749282')) AS NUMERIC), (+ (CAST(vt2.c0 AS REAL))), CASE CASE WHEN vt2.c0 THEN vt1.c0 ELSE 0.381831389765829 END  WHEN TOTAL(vt2.c0) THEN TOTAL(vt2.c0) ELSE rtreenode(vt2.c0, vt2.c0) END FROM vt1, vt2 WHERE ((((NULL IN ())) BETWEEN (((0.3205097183990947) NOTNULL)) AND ((((0.7711415525795324))>=((NULL)))))); -- 0ms;
SELECT CASE WHEN (NOT (vt2.c0)) THEN ((vt2.c0)>(vt2.c0)) ELSE (vt2.c0 IN ()) END FROM vt2, vt1 WHERE ((((~ (1.418697818E9)))OR((+ (''))))); -- 0ms;
SELECT ALL SUM(((vt2.c0)IS NOT(vt2.c0))) OVER (), (((MIN(vt2.c0, vt1.c0), (NOT (vt1.c0)), ((((vt2.c0)AND('-2009583415')))AND(0.6643276161762331))))<>((CAST(vt2.c0 AS REAL), TRIM(vt2.c0), ((vt1.c0)||(vt1.c0))))), COUNT(0.9258262042983529) FROM vt2, vt1 WHERE ((+ (x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((((((((((vt1.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))) AND ((vt1.c0))) FROM vt1, vt2 WHERE ((('21038703')/(x'')) COLLATE RTRIM); -- 0ms;
SELECT ALL (((NOT (vt1.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (json_valid(0.10413956151878911))) FROM vt2 WHERE ((~ ((((NULL)) BETWEEN (('-741282311')) AND ((x'')))))) LIMIT 2140617647 OFFSET 1458787717;SELECT DISTINCT ((COUNT(*)) NOT NULL), (+ (((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))), CUME_DIST() OVER () FROM vt1;SELECT vt1.c0 FROM vt1 WHERE (((json_array(0.940363871229664, '{}'))||((((0Xffffffffd097ed79)) BETWEEN (('NOxG')) AND (('qj')))))) GROUP BY ((- (vt1.c0)) IN ()) HAVING vt1.c0 LIMIT 2044576518; -- 0ms;
SELECT ALL '0.97344014831279' FROM vt2; -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -729101263 THEN vt1.c0 END) IS FALSE) FROM vt2;SELECT DISTINCT (~ (vt2.c0 COLLATE BINARY)) FROM vt1, vt2 WHERE ((((('702025513')IS NOT(NULL))) BETWEEN (((x'')>('-988554980'))) AND (2064819226))) GROUP BY (vt2.c0 IN (vt2.c0)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT (UNLIKELY(vt1.c0) IN (CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 END, ((vt2.c0)>>(vt1.c0)), ((vt2.c0) IS TRUE))) FROM vt2, vt1; -- 0ms;
SELECT ALL CAST(CAST(vt1.c0 AS TEXT) AS BLOB) FROM vt1, vt2 WHERE (((((((x'')*(-1583025335)))AND(((1940458001) BETWEEN (x'') AND ('Tk3욦')))))AND(x'3e94'))) ORDER BY rtreenode(((vt1.c0) IS TRUE), (((vt1.c0))<=((vt2.c0)))) ASC; -- 0ms;
SELECT ALL SUM((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))), TOTAL((- (vt1.c0))) OVER (), ABS(DISTINCT ((vt2.c0) ISNULL)) FROM vt1;SELECT ALL TOTAL(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) OVER ( ROWS  CURRENT ROW) FROM vt2, vt1 WHERE (SQLITE_VERSION() COLLATE NOCASE); -- 0ms;
SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT ALL ((x'')>(TIME(vt1.c0, vt1.c0, vt1.c0, vt2.c0, vt2.c0))), CASE WHEN ((vt2.c0)>(vt2.c0)) THEN (vt2.c0 IN ()) WHEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (+ (vt2.c0)) WHEN CAST(vt2.c0 AS BLOB) THEN (- (vt2.c0)) WHEN (((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0))) THEN CASE WHEN vt1.c0 THEN vt2.c0 END WHEN CAST(vt1.c0 AS REAL) THEN ((((vt1.c0)AND(vt2.c0)))OR(vt2.c0)) ELSE IFNULL(DISTINCT vt2.c0, vt2.c0) END, ((vt2.c0 COLLATE NOCASE)=(((((vt1.c0)AND(vt1.c0)))AND(vt2.c0)))) FROM vt2, vt1 LIMIT -1040308878; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)AND(vt2.c0)))AND(vt1.c0)))>=(vt1.c0)) FROM vt1, vt2; -- 0ms;
SELECT (((COUNT(vt2.c0)))<>(((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0)))))) FROM vt2, vt1 WHERE ((((((((((0.4567325885531093 IN ()))AND((('-1671955456')/('^')))))OR(((NULL)LIKE('-577074392')))))AND(CASE NULL  WHEN -309934550 THEN x'5b8d' END)))OR(((0.342741385700283) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN ('242449862') AND (((vt2.c0)<=(vt2.c0)))) FROM vt2; -- 1ms;
SELECT ALL (((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))AND(((NULL)+(NULL)))) FROM vt2 WHERE ((NULL IN (x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((CAST(vt1.c0 AS TEXT))OR(json_patch(vt1.c0, vt2.c0))))OR(CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)), vt1.c0, (((((vt2.c0, x'', vt1.c0))>=(('1773685400', vt1.c0, vt1.c0)))) ISNULL) FROM vt2 LIMIT -31572627 OFFSET 833808720;SELECT NTILE(CASE WHEN (- (vt1.c0)) THEN vt2.c0 END) OVER ( RANGE CAST(LOWER(DISTINCT vt1.c0) AS TEXT) PRECEDING) FROM vt1, vt2;SELECT DISTINCT ((((x'') NOTNULL)) NOT BETWEEN (vt2.c0 COLLATE NOCASE) AND (((vt1.c0) NOTNULL))) FROM vt1 WHERE (((CASE 0.03190765010867691  WHEN x'' THEN '' WHEN 'K5' THEN 'H' WHEN 'LУ' THEN '-764027465' ELSE NULL END)||((('u#Hzl') BETWEEN (x'') AND (x'11cd')))));SELECT DISTINCT ((vt2.c0 COLLATE NOCASE) NOT NULL), vt1.c0, ((((vt1.c0) NOTNULL)) IS TRUE) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT CASE WHEN LTRIM('f*E]*+') THEN ((((vt1.c0)OR(vt1.c0)))OR(vt2.c0)) WHEN ((vt1.c0)&(vt1.c0)) THEN (((vt2.c0))<((vt2.c0))) WHEN SUM(vt1.c0) THEN ((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) ELSE vt2.c0 END FROM vt2;SELECT DISTINCT ((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 END)IS NOT(((vt2.c0)>=(vt2.c0)))) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt2, vt1 WHERE (((((CAST(x'' AS REAL))AND(TYPEOF('948180297'))))AND(NULL))); -- 0ms;
SELECT DISTINCT ((CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0)GLOB(vt1.c0)))), ((vt1.c0 IN ()) IN ()), CASE WHEN SUM(vt2.c0) THEN ('' IN (vt2.c0)) ELSE load_extension(vt2.c0, vt1.c0) END FROM vt1, vt2; -- 0ms;
SELECT ((vt2.c0)<>(vt2.c0)) COLLATE NOCASE, ((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)) COLLATE NOCASE, ((((vt2.c0)*(vt1.c0))) NOTNULL) FROM vt2, vt1 WHERE (((((((NULL) IS TRUE))AND((('Le') BETWEEN ('-1256161201') AND ('x7')))))OR((('941996735')-(NULL))))); -- 0ms;
SELECT DISTINCT CAST((((vt1.c0))=((vt2.c0))) AS TEXT) FROM vt1;SELECT ALL (((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0)) FROM vt2, vt1 WHERE ((((('1436465327') NOT BETWEEN (0.37642885895187383) AND ('621338729')))&(((NULL)<<(0.9505009149431054))))) LIMIT 2103959431 OFFSET 487540811; -- 0ms;
SELECT DISTINCT ((((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) FROM vt2 WHERE (CAST(('1600561679' IN ('-1388111502')) AS TEXT)) LIMIT 96735754;SELECT DISTINCT (CAST(0.22326491368393087 AS REAL) IN ((((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))), vt1.c0 COLLATE NOCASE)) FROM vt2 WHERE (((((0.2507708998071193) NOT BETWEEN (NULL) AND ('8,')))|(((((NULL)AND(x'e843')))OR('Z/'))))) LIMIT 1935755598 OFFSET -227874620;SELECT DISTINCT NULL FROM vt2 WHERE ((((- (x''))) BETWEEN ((('') BETWEEN ('-1453665567') AND ('EOqA/['))) AND (((('-1931314807'))>=(('sx+^')))))) LIMIT -1397505449; -- 0ms;
SELECT ALL '279362258' FROM vt1 LIMIT -2108766102 OFFSET -2100811711; -- 0ms;
SELECT ALL (CAST(vt2.c0 AS REAL) IN (CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 END)) FROM vt1 GROUP BY CAST(vt1.c0 AS REAL) HAVING CASE WHEN IFNULL(DISTINCT vt2.c0, vt1.c0) THEN (((vt2.c0, 0.7149847844460508, vt1.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, x'')) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE vt2.c0 END;SELECT DISTINCT (NULL IN (SUM(vt2.c0))) FROM vt2, vt1 WHERE (((((-1952731221) NOT NULL))<(CASE WHEN 0.6707058147245923 THEN x'' ELSE 0.1847958304448587 END))); -- 0ms;
SELECT DISTINCT ((CAST(NULL AS TEXT)) NOT BETWEEN (vt2.c0 COLLATE BINARY) AND (((vt2.c0)<=(vt1.c0)))), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL), ((((vt1.c0) NOTNULL)) NOT NULL) FROM vt2, vt1; -- 0ms;
SELECT DISTINCT ((((vt2.c0)>(vt2.c0))) BETWEEN ((+ (0.3116378479963644))) AND (vt2.c0 COLLATE BINARY)), (NOT (vt2.c0)), AVG((vt1.c0 IN (vt2.c0))) FROM vt2;SELECT GROUP_CONCAT((vt1.c0 IN ())) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW) FROM vt1, vt2; -- 0ms;
SELECT ALL NULL FROM vt2 WHERE (UPPER(CAST('1945418367' AS REAL))); -- 0ms;
SELECT DISTINCT x'4071' FROM vt1, vt2; -- 0ms;
SELECT DISTINCT vt2.c0 FROM vt2 GROUP BY ((((vt1.c0)|(vt2.c0)))+((+ (vt1.c0))));SELECT DISTINCT (((((vt2.c0 IN (vt2.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))))))OR(CASE '~U7m''詮AH{'  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END)) FROM vt2;SELECT ((((vt1.c0)<=(vt2.c0)))<(((vt2.c0)>=(NULL)))), AVG(CASE vt2.c0  WHEN vt1.c0 THEN vt1.c0 END) OVER (), (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END IN (((((((((((((vt1.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))OR(vt1.c0)))OR(vt2.c0)))AND(vt1.c0)))), CASE WHEN COALESCE(vt1.c0, vt1.c0, vt1.c0, '-1671955456', vt1.c0, vt2.c0) THEN ((vt2.c0)/(vt2.c0)) END, CASE WHEN COUNT(vt2.c0) THEN ((vt2.c0)-(vt1.c0)) WHEN ((vt2.c0) IS FALSE) THEN json_type(vt1.c0) WHEN ((NULL)LIKE(vt2.c0)) THEN ((vt2.c0)&(3.77026435E8)) END FROM vt2 WHERE (CAST(NULL COLLATE RTRIM AS TEXT));SELECT DISTINCT ((MIN(vt1.c0))AND(((((vt2.c0)AND(vt1.c0)))OR(vt1.c0)))), (~ (highlight(vt2.c0, vt1.c0, vt1.c0, vt1.c0))), vt2.c0 FROM vt1;SELECT ((vt2.c0 IN (vt1.c0, vt2.c0)) IN ((+ (vt1.c0)))) FROM vt2;SELECT ALL LOWER((NOT (vt2.c0))), (((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))) COLLATE BINARY, (((vt2.c0)) NOT BETWEEN (((('-744999519')IS NOT(vt1.c0)))) AND ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) FROM vt1, vt2 WHERE (CAST(x'' AS TEXT)) LIMIT 9223372036854775807; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), (((((('')AND(vt1.c0)))AND(vt2.c0))) NOT BETWEEN (((((((((((((vt2.c0)AND(' Tfd')))AND(vt1.c0)))AND(vt1.c0)))OR(vt2.c0)))AND(vt2.c0)))AND('267047796'))) AND ((((x''))!=((vt1.c0))))), LEAD(CAST(x'f6c7' AS TEXT), vt2.c0 COLLATE RTRIM, (CAST(vt2.c0 AS REAL) IN ())) OVER () FROM vt2;SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((NOT (0.08553698556900469)))OR(((NULL) NOT NULL))))AND((('r!1M5 1') ISNULL))))AND((~ ('1446433480')))))AND((1.598693014E9 IN ())))) GROUP BY MIN(LIKELY(vt1.c0), vt2.c0 COLLATE NOCASE) HAVING ((vt1.c0 COLLATE BINARY) NOT BETWEEN (-4.2110398E7) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))));SELECT (((~ (vt2.c0))) BETWEEN ((vt2.c0 IN (-0.0))) AND ('1313737312' COLLATE BINARY)) FROM vt2, vt1 WHERE ((('-233725846' COLLATE NOCASE) NOT BETWEEN (('-269661257' IN ())) AND (((('sN斧F'))>=((0.38421864852696364)))))); -- 0ms;
SELECT DISTINCT (((NOT (vt2.c0))) BETWEEN (AVG(vt2.c0)) AND (MAX(vt1.c0))) FROM vt2, vt1 WHERE (((LIKELIHOOD(NULL, 0.2353248307673721)) NOT BETWEEN ('262340212' COLLATE RTRIM) AND ((((-581511967)) NOT BETWEEN ((NULL)) AND (('')))))); -- 1ms;
SELECT AVG(CAST(vt1.c0 AS INTEGER)), LIKELY(DISTINCT SUM(vt2.c0)), CAST((((vt1.c0))==((vt2.c0))) AS BLOB) FROM vt1, vt2 WHERE (((TRIM(DISTINCT NULL, NULL)) NOT BETWEEN ('r|Flx' COLLATE RTRIM) AND (CAST(0Xffffffff8b9bafab AS BLOB)))); -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS BLOB)) ISNULL) FROM vt2, vt1 WHERE (json_array_length(CASE WHEN '1237882555' THEN NULL END)); -- 0ms;
SELECT DISTINCT LEAD((NOT ((NOT (vt1.c0)))), CASE ((vt1.c0)<=(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) IS TRUE) WHEN x'' THEN 0.6290640334027284 WHEN ((vt1.c0)>(vt1.c0)) THEN (vt1.c0 IN ()) ELSE ((vt1.c0)<=(vt1.c0)) END, CASE (~ (vt1.c0))  WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN (vt1.c0)) WHEN TRIM(DISTINCT vt1.c0) THEN vt1.c0 ELSE (NULL IN (-1.671955456E9, vt1.c0)) END) OVER () FROM vt1 GROUP BY CASE WHEN ((vt2.c0) NOTNULL) THEN CASE WHEN vt2.c0 THEN '' ELSE vt2.c0 END ELSE (~ (vt2.c0)) END, (((((vt1.c0))<>((vt2.c0)))) BETWEEN ((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0)))) AND (vt2.c0 COLLATE RTRIM)), ((((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)AND('')))OR(vt1.c0)) HAVING (((vt1.c0)OR(vt1.c0)) IN ()) LIMIT -396993650;SELECT ((((((vt1.c0)AND(vt2.c0)))AND(vt2.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt2.c0)LIKE(vt1.c0)))) FROM vt2 WHERE (CASE WHEN 0.3636546419316614 THEN (('-921035161')IS('-355515405')) END) ORDER BY CAST((((0.8899929205498489, vt2.c0, vt1.c0))>=((vt1.c0, vt2.c0, vt1.c0))) AS REAL) DESC;SELECT DISTINCT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (((0x4005de11)<(vt2.c0)))), (((vt1.c0)<>(vt1.c0)) IN ()), CAST((- (vt2.c0)) AS NUMERIC) FROM vt1, vt2 WHERE ((((x'' IN ()))%((('.*-') IS TRUE)))); -- 0ms;
SELECT DISTINCT CASE WHEN (vt2.c0 IN (vt1.c0)) THEN NULL COLLATE BINARY END, CASE WHEN ((vt2.c0)%(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN CAST(vt2.c0 AS INTEGER) THEN CAST(vt2.c0 AS NUMERIC) WHEN ((NULL) NOT NULL) THEN (+ (NULL)) ELSE ((((vt2.c0)OR(vt1.c0)))AND(vt1.c0)) END, ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))IS((vt1.c0 IN ()))) FROM vt2 ORDER BY (UNLIKELY(x'cf6e5188') IN ()) ASC  NULLS LAST, (((vt1.c0 IN ()))==((- (vt2.c0)))) ASC  NULLS LAST LIMIT 188285272 OFFSET -1740335682;SELECT ALL ((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))) ISNULL) FROM vt1 GROUP BY (vt1.c0 IN ()), x'', ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))/(CASE WHEN vt2.c0 THEN x'' ELSE vt1.c0 END));SELECT DISTINCT CAST(ABS(vt2.c0) AS BLOB) FROM vt1 WHERE (TYPEOF(0.3825847950833675 COLLATE BINARY));SELECT DISTINCT (+ (NULL)) FROM vt2, vt1 WHERE (CAST(('-1931314807' IN ()) AS REAL)) LIMIT -137303670 OFFSET 477809042; -- 0ms;
SELECT ((((((((vt1.c0)AND(vt2.c0)))OR(vt2.c0)))OR(((vt1.c0)>>(vt1.c0)))))OR((vt2.c0 IN ()))) FROM vt1;SELECT (((COUNT(*), vt1.c0 COLLATE BINARY, ((vt1.c0)IS NOT(vt2.c0))))<((((vt2.c0)*(vt2.c0)), CAST(vt2.c0 AS BLOB), GROUP_CONCAT(vt2.c0)))) FROM vt1, vt2 WHERE (((((~ ('0.8868931316571128')), (('1875453285') ISNULL), ((1515392632)&('2028846340'))))=(((- (0.3857993064475186)), ((NULL) BETWEEN (962899607) AND ('ឺUR0')), ((((((((0Xffffffffc36e3041)AND(NULL)))AND('鱚do6+B|')))AND(x'')))AND('')))))); -- 0ms;
SELECT ALL ((vt2.c0) NOT NULL) COLLATE NOCASE FROM vt2, vt1 WHERE ((((((((((('')<>(0.3929971049584955)))AND(CAST(NULL AS REAL))))OR(((((9.41996735E8)AND('rr(')))OR(NULL)))))AND('1598693014' COLLATE BINARY)))AND(0.5081977112810158 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=((NULL))) FROM vt2, vt1; -- 0ms;
SELECT ((vt2.c0 COLLATE BINARY)+(CAST(vt2.c0 AS INTEGER))) FROM vt1, vt2 WHERE (((((((((json_type('0.4246753406325472'))AND('794046116')))OR(((((NULL)OR(NULL)))OR(x'')))))AND(((x'')OR(0Xfffffffffeaae7c8)))))AND((+ (x'e176'))))); -- 0ms;
SELECT DISTINCT ((((vt2.c0) ISNULL)) NOT BETWEEN (((vt2.c0)>>(0.8877388834292494))) AND (CAST(vt2.c0 AS NUMERIC))) FROM vt1;SELECT DISTINCT vt2.c0, CASE WHEN (((vt2.c0, '', vt2.c0))=((vt2.c0, vt2.c0, vt1.c0))) THEN ((vt1.c0) IS FALSE) ELSE ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)) END, (~ ((((('zf')OR(vt2.c0)))OR(vt1.c0)))) FROM vt1 WHERE (((CASE WHEN NULL THEN NULL WHEN 2.02884634E9 THEN NULL WHEN 0.20384854036504108 THEN 1801576348 END) NOT BETWEEN (('1377226125' IN ())) AND (((('*~'))!=((NULL)))))) GROUP BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC) HAVING CAST(((vt2.c0)-(vt2.c0)) AS TEXT) LIMIT 1628660010 OFFSET -1203988859;SELECT DISTINCT RANK() OVER ( ORDER BY CASE CASE WHEN vt2.c0 THEN '0.5589403938126557' ELSE vt2.c0 END  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END DESC), CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), CASE IFNULL(0.46586693131662527, vt1.c0)  WHEN CAST(vt1.c0 AS REAL) THEN vt2.c0 COLLATE BINARY END FROM vt2, vt1 LIMIT 534247155 OFFSET -152980948; -- 1ms;
SELECT RANK() OVER ( ORDER BY CAST(HEX(x'0c1e') AS NUMERIC)) FROM vt2, vt1 WHERE ((~ ('Ogk d' COLLATE BINARY))) GROUP BY COALESCE(((vt1.c0) IS FALSE), COALESCE(vt1.c0, vt2.c0, vt2.c0, vt2.c0), (((vt2.c0))==((vt2.c0))), vt1.c0) HAVING x''; -- 0ms;
SELECT DISTINCT (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) IN ()) FROM vt1, vt2 WHERE (x''); -- 0ms;
SELECT DISTINCT (- (((vt1.c0)<<(vt2.c0)))) FROM vt1;SELECT DISTINCT CAST(vt2.c0 COLLATE NOCASE AS TEXT) FROM vt1;SELECT DISTINCT SUM(vt2.c0) OVER (), CASE ((vt2.c0) NOT NULL)  WHEN (NOT (vt2.c0)) THEN CAST(vt2.c0 AS INTEGER) ELSE (NOT (vt2.c0)) END, ((SQLITE_COMPILEOPTION_USED(vt2.c0))GLOB(CASE WHEN vt2.c0 THEN vt2.c0 END)) FROM vt1;SELECT DISTINCT ((((MAX(vt1.c0))OR(CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND((~ (vt2.c0)))) FROM vt2 WHERE (((((x'') NOT BETWEEN (x'238d') AND ('-1156820129')))||((NULL IN ())))) GROUP BY ((((((vt1.c0)/(vt2.c0)))AND((~ (vt2.c0)))))AND(UNLIKELY(vt1.c0))), '-1081524663', vt1.c0;SELECT DISTINCT CAST(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN 'JGb^KCu\n' ELSE vt2.c0 END AS TEXT), CASE WHEN (NOT (vt1.c0)) THEN (('7X')GLOB(vt2.c0)) ELSE CAST(NULL AS BLOB) END, CAST(vt1.c0 AS TEXT) COLLATE RTRIM FROM vt2, vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 GROUP BY (((NOT (vt1.c0))) IS TRUE) HAVING (((NULL)) NOT BETWEEN ((vt1.c0)) AND (((NOT (vt1.c0))))) ORDER BY CASE CAST(vt1.c0 AS TEXT)  WHEN NULL THEN ((((((((vt1.c0)AND(vt2.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END  NULLS LAST, 0.26861957661193425 DESC, (((vt2.c0)) NOT BETWEEN ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 ELSE vt2.c0 END)) AND (((vt1.c0 IN ()))))  NULLS FIRST;SELECT DISTINCT (((((vt1.c0, vt2.c0, vt1.c0)) BETWEEN (('j搃', vt1.c0, vt2.c0)) AND ((vt1.c0, vt2.c0, vt1.c0))))*(CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)) FROM vt2 WHERE (((CASE WHEN 'Yd' THEN 0.3567123589261234 END) BETWEEN (((0x2dd42436)>('1040:514 7917389065914019930-4002318344845092139 -6982807996038404664 1087 C粥'))) AND (CAST('212112750' AS REAL)))) ORDER BY (((((((vt2.c0)AND(vt1.c0)))AND(vt1.c0))))>=((((((-389526068)AND(vt2.c0)))AND(vt2.c0)))));SELECT NULL FROM vt1; -- 0ms;
SELECT DISTINCT NULL FROM vt1 LEFT OUTER JOIN vt2 ON vt1.c0 WHERE ((((1187853612)/(-1.634778528E9)) IN ())) GROUP BY ((((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)))GLOB(CASE WHEN vt2.c0 THEN vt2.c0 END)), (+ ((('Wr0{b_') IS FALSE))), (NOT (vt2.c0)); -- 0ms;
SELECT ALL (((vt1.c0)) BETWEEN (((((vt2.c0, vt1.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt2.c0, vt1.c0)) AND ((x'', vt2.c0, vt2.c0))))) AND ((TIME(vt2.c0, vt1.c0, vt2.c0, vt2.c0, vt2.c0, vt1.c0, vt2.c0)))) FROM vt2, vt1 WHERE ((((((('1860503652')AND('2122983387')))AND('2028846340'))) BETWEEN (TIME(x'e195', NULL, NULL)) AND (((0.3895447526076625)==(0x71328bd6))))); -- 0ms;
SELECT ALL ((((vt1.c0) IS FALSE)) NOT NULL) FROM vt1 LIMIT -859799885; -- 0ms;
SELECT DISTINCT LAST_VALUE((vt2.c0 IN (0.3349836612457837))) OVER ( ORDER BY (vt2.c0 IN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS FIRST, (((((((((vt2.c0)OR(vt1.c0)))OR('')))OR('-1674341814')))AND(vt1.c0)) IN ()), CASE WHEN NULL THEN ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE NULL END DESC), TOTAL(MAX(vt1.c0 COLLATE BINARY)), ((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) IN (2122983387)) FROM vt2 WHERE (CAST((- (NULL)) AS BLOB));SELECT vt1.c0 FROM vt2, vt1; -- 0ms;
SELECT TRIM(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), 0.3178803676453813), vt1.c0, CASE CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 END  WHEN SUM(0.43944627724788243) THEN CAST(vt2.c0 AS TEXT) ELSE vt1.c0 COLLATE RTRIM END, (- ((~ (vt1.c0)))), CUME_DIST() OVER () FROM vt1, vt2; -- 0ms;
SELECT DISTINCT ((((vt2.c0)AND(vt2.c0)))+(CAST(vt1.c0 AS BLOB))) FROM vt2;SELECT ALL TRIM(DISTINCT (- (vt1.c0)), ((vt1.c0)<<(vt2.c0))) FROM vt1, vt2 WHERE (CASE WHEN (('1549342648') IS FALSE) THEN (('') NOT BETWEEN (NULL) AND (0.7910683916954276)) ELSE HEX(x'cbc9881a') END); -- 0ms;
SELECT DISTINCT ((vt2.c0)&(-1.040308878E9)) COLLATE RTRIM FROM vt2 ORDER BY ((((vt2.c0) IS FALSE)) BETWEEN (vt2.c0 COLLATE BINARY) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 WHEN NULL THEN vt2.c0 WHEN vt1.c0 THEN x'' ELSE vt2.c0 END))  NULLS LAST;SELECT DISTINCT GROUP_CONCAT(((vt1.c0)<<(vt1.c0))) OVER () FROM vt1, vt2; -- 0ms;
SELECT DISTINCT vt2.c0, CASE WHEN vt2.c0 THEN COALESCE('%w~늱1Kᑒn5', vt2.c0) WHEN ('3쳪' IN ()) THEN ((vt1.c0)!=(vt1.c0)) WHEN (- (vt1.c0)) THEN ((vt2.c0)/(vt2.c0)) END, CAST(NULL AS BLOB) FROM vt1, vt2 NOT INDEXED; -- 0ms;
SELECT DISTINCT AVG(((vt2.c0)==(vt1.c0)) COLLATE NOCASE) FROM vt2, vt1 GROUP BY ((((vt1.c0)GLOB(0.32456134939493575)))LIKE(CASE WHEN vt2.c0 THEN vt1.c0 END)), (NOT (((((vt2.c0)AND(vt1.c0)))OR(vt1.c0)))), ((CAST(vt1.c0 AS TEXT)) BETWEEN ((((((((((((('LУ')AND(vt1.c0)))AND(vt1.c0)))AND(vt2.c0)))OR(vt1.c0)))OR(vt2.c0)))AND(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) LIMIT 2142659882; -- 1ms;
SELECT DISTINCT CAST(CASE WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC) FROM vt2, vt1; -- 0ms;
SELECT DISTINCT SUM(vt1.c0 COLLATE BINARY COLLATE NOCASE) FROM vt2, vt1 WHERE ((NOT (((x'')<('Ogk d'))))); -- 1ms;
SELECT DISTINCT x'' FROM vt2; -- 0ms;
SELECT ALL ((((((vt1.c0)IS(vt2.c0)))OR(((vt2.c0)|(vt1.c0)))))AND(((vt2.c0)+(vt1.c0)))) FROM vt2 WHERE ((((('589389004') NOT BETWEEN (NULL) AND ('-721928317')))>=(((0x3fd837cd) IS TRUE)))) GROUP BY (- ((vt2.c0 IN ()))), (- (CAST(vt2.c0 AS TEXT))), (((~ (vt1.c0)))OR(vt2.c0)) LIMIT -764027465;SELECT ALL ((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END)|(x'')) FROM vt1;SELECT ((vt2.c0 COLLATE BINARY) NOT BETWEEN ((((vt1.c0))!=((vt2.c0)))) AND ((vt1.c0 IN ()))) FROM vt1;SELECT DISTINCT CASE CAST(vt2.c0 AS BLOB)  WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0, vt1.c0, vt1.c0))<=((vt2.c0, 0Xfffffffffe1e3d6d, '-42110398'))) END FROM vt1;SELECT DISTINCT LAG((((vt2.c0 IN ()))OR((vt1.c0 IN ()))), CASE WHEN ((((vt2.c0)OR(vt2.c0)))OR(vt1.c0)) THEN vt2.c0 COLLATE NOCASE WHEN ((vt1.c0) IS FALSE) THEN 'ﵭ#l]e''' COLLATE BINARY WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN '1539570576' WHEN ((vt2.c0)/(vt2.c0)) THEN ((vt1.c0)GLOB(vt2.c0)) ELSE ABS(DISTINCT vt2.c0) END, CASE WHEN (vt1.c0 IN (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt2.c0)-(vt1.c0)) THEN (- (vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN ('sRx') AND (vt1.c0)) THEN vt1.c0 COLLATE NOCASE ELSE ((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)) END) OVER () FROM vt1, vt2 WHERE ('587111738') GROUP BY ((vt2.c0) BETWEEN (((((((((vt2.c0)OR(vt2.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0) NOT NULL))); -- 3ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END) NOT BETWEEN ((vt1.c0 IN ())) AND (GROUP_CONCAT(vt1.c0))), CASE WHEN ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN (((vt1.c0))==((vt2.c0))) END, (~ (((vt2.c0) IS FALSE))) FROM vt2, vt1 WHERE (((((x'') BETWEEN (-1743375206) AND (NULL))) IS FALSE)); -- 0ms;
SELECT CAST(((vt2.c0)/(vt2.c0)) AS INTEGER), (((vt2.c0)) NOT BETWEEN ((UPPER(DISTINCT vt1.c0))) AND ((((vt2.c0)+(vt1.c0))))), (((NOT (vt2.c0)))-(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt2 ORDER BY (((vt2.c0)) BETWEEN ((x'')) AND ((CASE WHEN vt1.c0 THEN vt1.c0 END)));SELECT (~ (vt1.c0 COLLATE NOCASE)) FROM vt1, vt2 WHERE ((((1506789594)) BETWEEN (((('2L2') BETWEEN ('-263913763') AND (NULL)))) AND (((NULL IN ()))))); -- 0ms;
SELECT ALL (((vt2.c0 IN ())) BETWEEN (vt2.c0 COLLATE BINARY) AND (((vt2.c0)AND(vt1.c0)))) FROM vt1, vt2 WHERE ((- (0.26460153381339435)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT AVG(CAST(vt1.c0 AS NUMERIC)) OVER () FROM vt1 WHERE (UPPER('< \b%' COLLATE BINARY)); -- 0ms;
SELECT ALL TIME(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), vt2.c0, json_array_length(vt1.c0, vt1.c0)), (~ (((vt1.c0)<(0.6746218182145506)))), (('Y}58K\rHt7' IN ()) IN ()) FROM vt2 WHERE (json_valid((((1.832412163E9)) BETWEEN ((0.8361484469336902)) AND ((NULL)))));SELECT ALL NTILE(x'dafa') OVER () FROM vt1, vt2 WHERE (((CASE NULL  WHEN 0.7273402833068097 THEN 'tk3욦' ELSE 0X50582b5a END) ISNULL)); -- 0ms;
SELECT DISTINCT SUM(NULLIF(DISTINCT vt2.c0, vt1.c0)) OVER () FROM vt2;SELECT ALL x'04820419' FROM vt1; -- 0ms;
SELECT DISTINCT (((((vt2.c0) IS FALSE), 2.103441724E9, (vt1.c0 IN ())))>((((vt1.c0)>>(vt2.c0)), x'', vt1.c0))), ((NULL)AND(CAST(vt2.c0 AS NUMERIC))), CAST(vt1.c0 AS TEXT) COLLATE NOCASE FROM vt2, vt1 LIMIT 1935755598 OFFSET -31572627; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ()))=(GROUP_CONCAT(vt1.c0))), NTILE(CAST((('851569473')>=(vt1.c0)) AS BLOB)) OVER (), ((0.7547991730635407) IS FALSE) FROM vt2, vt1; -- 0ms;
SELECT DISTINCT CAST(vt2.c0 AS REAL) COLLATE NOCASE FROM vt2, vt1 WHERE ((NULL IN ()) COLLATE NOCASE); -- 0ms;
SELECT ALL ((CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) NOT BETWEEN ('') AND (((vt2.c0) NOT NULL))) FROM vt1, vt2 WHERE (((CASE WHEN 0X4b35530b THEN '#k' ELSE 0.4495720280990434 END) ISNULL)); -- 0ms;
SELECT DISTINCT ((vt1.c0) IS TRUE) COLLATE RTRIM FROM vt1 WHERE (((NULL)>(UNLIKELY(x'2c0b')))); -- 0ms;
SELECT ((vt2.c0)|(vt1.c0)) COLLATE NOCASE, ((CAST(vt1.c0 AS BLOB))<=(NULL)), CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 END COLLATE NOCASE FROM vt1, vt2; -- 0ms;
SELECT (- (((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(vt1.c0)))), json_quote(0.26331606608358893), '751159768' FROM vt1 WHERE ((((CASE x''  WHEN '-967478596' THEN '515439207' END))!=((((((0x472e5237)OR('2028846340')))OR(0X110a1a60)))))) GROUP BY (((((NULL, vt1.c0, vt2.c0, vt2.c0, vt2.c0))<=((vt2.c0, vt1.c0, vt2.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ((((vt1.c0, 0.34443233624503733, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt1.c0, vt2.c0, vt1.c0)))) AND (INSTR(vt2.c0, vt2.c0))) ORDER BY (((vt2.c0 IN (vt1.c0, vt2.c0)))||(vt1.c0))  NULLS LAST;SELECT DISTINCT vt2.c0 FROM vt1, vt2 GROUP BY (((vt1.c0 IN ()))<=(vt1.c0 COLLATE BINARY)); -- 0ms;
SELECT ALL ((MIN(vt2.c0)) BETWEEN (IFNULL(DISTINCT vt2.c0, vt1.c0)) AND (x'')) FROM vt2 WHERE (NULLIF(CASE WHEN x'e0f5' THEN 0.8827984775569009 WHEN NULL THEN 0Xffffffffac2a2c6f WHEN 2123870801 THEN '0.727675064113174' END, (('-706199633') BETWEEN (NULL) AND (x''))));SELECT (((NOT (vt2.c0))) NOT BETWEEN (((((vt2.c0)OR(vt1.c0)))AND(vt1.c0))) AND ((vt2.c0 IN ()))), LIKELY((vt1.c0 IN ())), ((((((((((((((((vt2.c0)OR(vt2.c0)))OR(vt1.c0)))AND(vt2.c0)))OR(vt2.c0)))AND('s4ၷcGO)O')))OR(((vt1.c0)<(vt2.c0)))))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))OR(COUNT(*))) FROM vt1;SELECT DISTINCT x'', ((((vt1.c0)IS(vt2.c0)))*(CASE WHEN vt1.c0 THEN vt1.c0 END)), ((CASE vt1.c0  WHEN vt1.c0 THEN -16907965 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END) NOTNULL) FROM vt2, vt1; -- 3ms;
SELECT DISTINCT vt2.c0 FROM vt1, vt2; -- 0ms;
SELECT ALL TOTAL(CAST(vt2.c0 AS NUMERIC)) OVER () FROM vt2 WHERE (CASE ((x'') NOT NULL)  WHEN ((x'b355')>=('-1732065144')) THEN (((x'78e2'))>=((NULL))) ELSE (NULL IN ()) END); -- 0ms;
SELECT DISTINCT (+ (COUNT(*))), (((MAX(vt1.c0)))==((CASE 0x1e62c842  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END))), x'' FROM vt1, vt2 WHERE ((CAST(50266420 AS NUMERIC) IN (((0.5589403938126557)=('1505688444'))))); -- 0ms;
SELECT ((((vt2.c0)IS NOT(vt2.c0))) NOTNULL), (vt2.c0 IN ()) COLLATE BINARY, ((vt1.c0)%(CASE WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1;SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 END AS TEXT), CHANGES(), (((vt1.c0) NOTNULL) IN (MAX(vt1.c0), (vt2.c0 IN (vt1.c0)))) FROM vt2 WHERE (((('?G', '57610929', x'')) NOT BETWEEN ((((0.79885139335712) BETWEEN (x'') AND ('/^I''祿tᵛ')), CAST(x'' AS BLOB), LIKE(0Xffffffffad5ffa49, NULL))) AND ((((0.1690064239515926)=(x'')), ((x'')IS(NULL)), (0Xffffffff92655988 IN ())))));SELECT DISTINCT ((vt1.c0 IN ()) IN (((((vt2.c0)OR(vt1.c0)))AND(vt1.c0)))), ((CAST(vt2.c0 AS INTEGER))LIKE(((vt2.c0)>(vt2.c0)))), ((TRIM(DISTINCT vt2.c0)) ISNULL), ((((vt1.c0)|('21038703'))) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (AVG(vt1.c0))), (NOT (MIN(vt2.c0))) FROM vt1;SELECT DISTINCT ((((vt2.c0) BETWEEN (vt2.c0) AND (0x22d467d1)))!=(CAST(vt2.c0 AS INTEGER))) FROM vt2, vt1; -- 0ms;
SELECT DISTINCT MAX(vt1.c0), ((CAST(vt1.c0 AS BLOB)) IS TRUE), MAX(((vt2.c0) NOT NULL)) FROM vt1, vt2; -- 1ms;
SELECT ALL vt2.c0 FROM vt2, vt1; -- 0ms;
SELECT ALL CAST(TOTAL(vt2.c0) AS BLOB) FROM vt2 WHERE (0.016954157543637605); -- 0ms;
SELECT ALL (vt2.c0 IN ()) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT ALL CAST(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)) AS TEXT), CASE (((vt1.c0)) NOT BETWEEN ((0.866154420479329)) AND ((vt2.c0)))  WHEN COUNT('-967478596') THEN '1365028395' ELSE (vt2.c0 IN ()) END, ((((((vt2.c0)OR(vt2.c0)))AND(vt1.c0))) NOT BETWEEN (x'563e') AND (((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)))) FROM vt2 WHERE (((CAST('[z]㞸#zb2' AS NUMERIC)) BETWEEN (CAST(0.08257552109917432 AS NUMERIC)) AND ((+ ('bY')))));SELECT x'' FROM vt1, vt2; -- 0ms;
SELECT ALL CASE WHEN CAST(vt2.c0 AS INTEGER) THEN (((vt1.c0, 0.6865292292324289, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt1.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) ELSE (NULL IN (vt1.c0)) END, (((vt2.c0)) NOT BETWEEN ((vt2.c0 COLLATE RTRIM)) AND ((0.5961733006645412 COLLATE RTRIM))), (~ (vt2.c0 COLLATE RTRIM)) FROM vt2, vt1; -- 0ms;
SELECT DISTINCT CAST(IFNULL(vt2.c0, vt2.c0) AS BLOB), (((CAST(vt1.c0 AS TEXT)))!=((((vt1.c0)LIKE(vt2.c0))))), CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt2.c0 END AS INTEGER) FROM vt2 LIMIT -1461169956 OFFSET 1259480528;SELECT ALL ((x'') NOTNULL) FROM vt1, vt2 WHERE (((((((('97462787'))==((''))))OR(ABS(''))))AND(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CAST((((vt2.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('^}6T', vt1.c0, vt1.c0)) AND ((vt1.c0, vt2.c0, vt1.c0))) AS BLOB) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT ((((vt1.c0)+(vt1.c0)))&(((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)))), COUNT(*) OVER (), CASE WHEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 END ELSE (- (vt2.c0)) END FROM vt1, vt2 WHERE ((((x'715a')) NOT BETWEEN ((((0.7216636586078515) BETWEEN (NULL) AND (x'5660d874')))) AND ((((x'9a70') BETWEEN ('-71862431') AND (0.97344014831279)))))); -- 1ms;
SELECT ALL 1698198731, COUNT(*) OVER ( RANGE  UNBOUNDED PRECEDING), -1234778882 FROM vt2 ORDER BY ((-1.386218935E9 COLLATE RTRIM) NOT BETWEEN (((vt2.c0)*(vt2.c0))) AND (((vt2.c0) IS FALSE)))  NULLS LAST; -- 3ms;
SELECT DISTINCT vt1.c0 FROM vt2;SELECT DISTINCT ((((((((vt1.c0)OR(vt1.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)) COLLATE RTRIM FROM vt1, vt2; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT ((((((((((vt1.c0)>>(vt1.c0)))AND(((vt1.c0) NOTNULL))))AND(vt1.c0 COLLATE RTRIM)))AND((vt1.c0 IN ()))))OR(COALESCE(-75766761, vt1.c0))) FROM vt2, vt1; -- 0ms;
SELECT DISTINCT (((vt2.c0)) BETWEEN (((+ (vt1.c0)))) AND ((((vt1.c0)<=(vt2.c0))))), COUNT(*), MIN(((vt2.c0)IS NOT('345720530'))) FROM vt2;SELECT DISTINCT CAST(COUNT(*) AS BLOB) FROM vt1; -- 0ms;
SELECT COUNT(((vt1.c0)-(vt1.c0))), CAST(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) AS BLOB), TOTAL(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) FROM vt2, vt1; -- 0ms;
SELECT ALL (((vt1.c0)) BETWEEN (((vt1.c0 IN ()))) AND (((~ (vt2.c0))))) FROM vt2 GROUP BY (((vt1.c0, vt1.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt1.c0, vt1.c0, vt2.c0))) COLLATE BINARY HAVING (((('505645625')GLOB(vt2.c0)))IS(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))));SELECT ALL vt1.c0 FROM vt1; -- 0ms;
SELECT ALL CUME_DIST() OVER (), (NOT ((- (NULL)))), COALESCE(DISTINCT vt1.c0, QUOTE(vt1.c0)) FROM vt1 WHERE (((NULL) NOTNULL)); -- 0ms;
SELECT DISTINCT ((x'')%(vt1.c0)), vt1.c0 COLLATE BINARY, AVG(vt1.c0) OVER () FROM vt2 WHERE (((CASE NULL  WHEN 1.832412163E9 THEN NULL WHEN '-102324086' THEN x'' WHEN '710423035' THEN x'' ELSE 1818958523 END)|((NOT (x'')))));SELECT DISTINCT (((vt1.c0 IN ()))<<(((1.249598562E9) ISNULL))), (((vt2.c0)) NOT BETWEEN ((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0))))), vt1.c0 FROM vt2;SELECT SUM(vt1.c0) OVER () FROM vt1, vt2 GROUP BY CASE WHEN ((vt2.c0)IS('aJ')) THEN CAST(vt2.c0 AS INTEGER) END HAVING CASE WHEN (+ (vt2.c0)) THEN (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) END LIMIT 1073760392 OFFSET -768631303; -- 0ms;
SELECT DISTINCT ((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))OR(vt1.c0 COLLATE RTRIM)), ((((vt2.c0) NOTNULL))IS NOT(GROUP_CONCAT(vt2.c0))), AVG((vt1.c0 IN (vt1.c0))) OVER () FROM vt1, vt2 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT ALL ((GROUP_CONCAT(vt1.c0))GLOB((vt2.c0 IN ()))) FROM vt1, vt2; -- 1ms;
SELECT DISTINCT vt1.c0, NTH_VALUE(CASE WHEN ((((((((vt2.c0)AND(vt2.c0)))AND('-1812629340')))AND(x'8c57')))AND(0.14577798440834)) THEN (((vt2.c0))=((vt2.c0))) WHEN vt2.c0 THEN CAST(vt2.c0 AS NUMERIC) WHEN ((vt2.c0) NOTNULL) THEN ((vt2.c0) IS FALSE) ELSE ((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) END, (((vt2.c0) IS TRUE) IN (((vt2.c0)*(vt2.c0)), (~ (vt2.c0))))) OVER (), ((((((vt2.c0) NOTNULL))AND(x'')))OR(vt2.c0)) FROM vt2 WHERE ((NOT (CAST(0.8868931316571128 AS INTEGER))));SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((((vt2.c0) IS TRUE))) AND ((vt1.c0 COLLATE NOCASE))), ((vt1.c0) BETWEEN (COUNT(*)) AND ((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((-713598242))))), UPPER(((vt2.c0) ISNULL)) FROM vt1, vt2 WHERE (((((0.2612163671974158)>('')))>=(0.372260322237984))); -- 0ms;
SELECT ALL ((((((0.6514924614375606)AND(vt1.c0)))AND(vt1.c0)))>=(NULL)), (+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), ((((NULL)OR(((vt2.c0)IS(vt1.c0)))))OR(((0.6334970612024202) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) FROM vt1 WHERE (0.9438947042908444);SELECT (+ (NULL)) FROM vt1; -- 0ms;
SELECT DISTINCT (((NULL IN (x'ed43', vt2.c0)))<(UNICODE(vt2.c0))), vt2.c0, ((ROUND(vt1.c0, vt1.c0)) BETWEEN (vt2.c0 COLLATE NOCASE) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt2.c0)))OR(vt1.c0)))) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT CASE ((vt2.c0) NOT BETWEEN (NULL) AND (vt2.c0))  WHEN 0xffffffffe560cb1f THEN (((x'', vt1.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, 0.7342576200110997, vt2.c0)) AND ((vt1.c0, x'', vt1.c0))) END FROM vt1 WHERE (((CASE '0.8795816774328689'  WHEN x'45f1' THEN x'f444' END) BETWEEN (((0.9691069347444518) ISNULL)) AND (((1569678723) IS TRUE))));SELECT DISTINCT ((((vt1.c0)+(vt2.c0))) BETWEEN ((vt1.c0 IN ())) AND ((((vt2.c0, vt2.c0, vt1.c0)) BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt1.c0, vt2.c0, vt1.c0))))) FROM vt1 WHERE ((((x''))<(((- (NULL))))));SELECT ALL ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) COLLATE NOCASE COLLATE RTRIM, NTH_VALUE((UPPER(DISTINCT vt1.c0) IN (CAST(vt2.c0 AS INTEGER))), (((vt1.c0)IS NOT(vt2.c0)) IN ())) OVER ( ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) AND (((vt2.c0 IN ())))) DESC), CAST((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) AS INTEGER) FROM vt1 INNER JOIN vt2 ON ((((vt2.c0) IS FALSE))*(((vt2.c0)IS(vt2.c0)))) WHERE ((((- ('LУ'))) BETWEEN (((NULL)LIKE('ar{z'))) AND (0Xffffffffc65572bc))); -- 0ms;
SELECT ALL vt2.c0 FROM vt1, vt2 WHERE (((x'' COLLATE BINARY)>=(NULL))); -- 1ms;
SELECT ALL ((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))>(COUNT(*))) FROM vt1, vt2 WHERE ((((('1021279579') BETWEEN ('-117383181') AND (0.5139301982947537))) BETWEEN (((NULL) ISNULL)) AND (1738378478 COLLATE RTRIM))); -- 0ms;
SELECT ALL TYPEOF(vt2.c0) FROM vt2, vt1; -- 0ms;
SELECT ALL (NOT ('P)7M<')) FROM vt2 ORDER BY NULL ASC  NULLS LAST, ((((vt2.c0)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0)))))AND(-82586427))  NULLS LAST;SELECT DISTINCT COUNT(((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))), ((vt2.c0) IS FALSE) COLLATE NOCASE, MAX(vt1.c0) FROM vt2;SELECT DISTINCT (vt2.c0 IN (x'a7cdaac3', vt1.c0)) COLLATE RTRIM FROM vt2 ORDER BY CASE WHEN ((((vt2.c0)AND(vt2.c0)))AND(x'15d5')) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.4207195063705852)) WHEN ((vt1.c0)IS(vt2.c0)) THEN (((vt1.c0))>((vt2.c0))) WHEN vt2.c0 THEN ((vt2.c0) ISNULL) ELSE (- (vt1.c0)) END ASC  NULLS LAST;SELECT DISTINCT MIN((vt1.c0 IN ())) FROM vt1 WHERE (((((('1811451383')IS NOT(x''))))>((NULL COLLATE RTRIM)))); -- 0ms;
SELECT (CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()), ((vt2.c0)IS(vt2.c0)) COLLATE BINARY, (((NULL, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY, (('')>(vt1.c0)), (NOT (vt1.c0)))) AND ((vt2.c0, ((((vt2.c0)AND(vt2.c0)))AND(vt1.c0)), ((vt1.c0)IS NOT(vt2.c0))))) FROM vt2 ORDER BY (((vt2.c0, vt1.c0, 'fz')) NOT BETWEEN (((NOT (vt2.c0)), CAST(x'' AS TEXT), (NOT (vt2.c0)))) AND (((- (vt2.c0)), ((vt1.c0)<=(0.04657883642095362)), (vt1.c0 IN ())))) DESC;SELECT ALL GROUP_CONCAT(((((((((vt1.c0)AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(vt1.c0))) OVER () FROM vt1, vt2 LIMIT 1232787878; -- 0ms;
SELECT TOTAL(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))) OVER () FROM vt1;SELECT ALL ((((0.3293226749258905) ISNULL)) NOT BETWEEN (0X5f66a20f) AND ('-2003515028')) FROM vt1, vt2 GROUP BY (((((((((vt1.c0 IN ()))OR('1\np₊')))AND((vt2.c0 IN ()))))OR((((vt2.c0, vt2.c0, vt2.c0))<>((vt1.c0, vt1.c0, vt1.c0))))))AND(((vt2.c0)<=(vt1.c0)))) HAVING (((((~ (vt1.c0)))OR(vt1.c0)))AND(CASE WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 END)); -- 1ms;
SELECT DISTINCT CASE (- (x''))  WHEN ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt1.c0)<=(vt1.c0)) ELSE (((vt2.c0, vt1.c0, vt2.c0))=((vt1.c0, vt1.c0, vt2.c0))) END, (((- (vt1.c0)))>(((vt2.c0)/(vt2.c0)))), ('R煙' IN ()), ((NOT (vt1.c0)) IN ()), TOTAL(CAST(vt2.c0 AS NUMERIC)) FROM vt2 WHERE (((((0.946491165815187) NOT BETWEEN (0.7605973186601663) AND (NULL)))==(x'')));SELECT DISTINCT vt2.c0, CASE -1862493727  WHEN CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN ((((((((x'')OR(vt1.c0)))OR(vt1.c0)))AND(vt2.c0)))AND(vt1.c0)) WHEN ((vt2.c0) IS FALSE) THEN ((vt1.c0) IS TRUE) END, (((~ (vt1.c0))) NOT NULL) FROM vt1, vt2 WHERE ((((((('#2zMܩlw.f')OR(x'')))AND(0.943507554981558))) NOT NULL)); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt1.c0 AS INTEGER) THEN COALESCE(vt1.c0, vt1.c0) ELSE ((((((((((((-1931314807)AND(vt2.c0)))OR(vt1.c0)))OR(vt2.c0)))AND(x'9a6b')))AND(vt1.c0)))OR(vt2.c0)) END FROM vt2 WHERE ((~ (0.3505113299112187)));SELECT DISTINCT LIKELIHOOD(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END, 0.18263394344729544), ((CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END) BETWEEN (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) AND (((x'') NOT NULL))), (((vt2.c0, vt2.c0, vt2.c0, vt1.c0, 0.9304178993599624)) BETWEEN ((CAST(vt1.c0 AS TEXT), vt1.c0, ((vt1.c0)+(vt1.c0)), ((vt2.c0)-(vt2.c0)), LTRIM(vt1.c0))) AND ((CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS REAL), (vt1.c0 IN ())))) FROM vt2;SELECT (vt2.c0 COLLATE NOCASE IN (vt1.c0)) FROM vt1;SELECT DISTINCT (- (((vt2.c0) NOT NULL))) FROM vt2, vt1; -- 0ms;
SELECT DISTINCT (+ (vt2.c0 COLLATE RTRIM)), '''Yw', (AVG(vt2.c0) IN ()) FROM vt1, vt2 WHERE (((((0.38504577156512987))<((x''))) IN ())); -- 0ms;
SELECT GROUP_CONCAT(CAST(vt2.c0 AS NUMERIC)) FROM vt2, vt1 WHERE (((x'')/(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT ALL ((((MIN(vt2.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN x'' THEN vt1.c0 END)))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) FROM vt2, vt1 WHERE (((((0.4614171997773693) BETWEEN (NULL) AND (x'')))>(CAST(0.4455744989978918 AS REAL)))); -- 0ms;
SELECT DISTINCT (((NOT (vt2.c0)))AND(TIME(vt1.c0, vt1.c0, vt1.c0, vt2.c0, vt1.c0))) FROM vt2, vt1 WHERE ((((0x181c7b3)/(NULL)) IN ())) ORDER BY CASE WHEN ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)) THEN CAST(vt2.c0 AS NUMERIC) ELSE ((((vt2.c0)OR(vt1.c0)))OR(vt2.c0)) END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (('279362258') NOT BETWEEN (CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 END) AND (SUM(vt2.c0))) FROM vt1, vt2 WHERE (-1.754574326E9) GROUP BY (((0.9902219056829865)) BETWEEN (((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))))) AND ((LOWER(DISTINCT vt2.c0)))) HAVING CASE WHEN NULLIF(DISTINCT vt1.c0, vt2.c0) THEN TRIM(vt2.c0) END; -- 0ms;
SELECT ALL (((((((((+ (vt2.c0)))AND(CASE WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)))OR(((vt1.c0) IS TRUE))))AND(((vt1.c0)<=(vt2.c0)))))AND((NOT (vt1.c0)))) FROM vt1;SELECT DISTINCT -1.783272009E9 FROM vt2, vt1 WHERE ((('-1501448469')||(x'eaa7')) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE NULL  WHEN (~ (vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt2.c0)) WHEN COUNT(0.1410454787917883) THEN CAST(vt2.c0 AS REAL) WHEN ((vt1.c0)>(vt2.c0)) THEN ']K' ELSE ((vt2.c0)LIKE(vt1.c0)) END, CAST(((vt1.c0)|(vt1.c0)) AS INTEGER), LAG(((vt1.c0) ISNULL) COLLATE RTRIM, (((vt1.c0)IS(vt1.c0)) IN ()), (((0.26469220930338255) ISNULL) IN ())) OVER () FROM vt1;SELECT ((((vt2.c0) IS TRUE)) NOT NULL) FROM vt1 GROUP BY ((((((((vt2.c0)OR((((vt2.c0))<>((vt1.c0))))))AND(((((((((vt2.c0)AND(vt2.c0)))OR(vt1.c0)))OR(0.3010173606551405)))AND(vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt2.c0)%(vt1.c0))));SELECT ALL NTH_VALUE((('VY' COLLATE NOCASE)LIKE((vt2.c0 IN ()))), '-754519644') OVER ( ROWS  CURRENT ROW) FROM vt1, vt2;SELECT DISTINCT ((((vt1.c0)OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)))))OR((~ (vt2.c0)))), IFNULL(((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)), (vt1.c0 IN ())), (((vt2.c0) NOTNULL) IN ()) FROM vt2;SELECT DISTINCT ((((((vt2.c0) NOTNULL))AND(((vt2.c0)IS(vt2.c0)))))AND(((vt1.c0) ISNULL))) FROM vt1 WHERE ((((NULL) IS FALSE) IN (CAST('' AS INTEGER), (('1658093205')!=(x'4aee'))))) LIMIT -370951665;SELECT DISTINCT COUNT(*) FROM vt1, vt2 WHERE (((('nv', 0.15536000602262956, '', '305040506', 0xffffffffe92b8e00)) NOT BETWEEN ((('-1572969455' IN ()), (NULL IN ()), x'', 0.722573916463938, ((NULL)>>('''-')))) AND (((NULL IN ()), (NOT (x'')), CAST('' AS NUMERIC), (('792197825')LIKE(0X35de8fd2)), ((((((((0.6662032508683667)OR('0.022865126761230536')))OR(x'faff')))OR(1811451383)))AND(0.7315671574834643)))))); -- 0ms;
SELECT x'0328' FROM vt1, vt2 WHERE ((((0.43944627724788243)) NOT BETWEEN ((((0.4479440517833305) ISNULL))) AND (((((0.4580980763866672)) NOT BETWEEN ((NULL)) AND ((''))))))); -- 0ms;
SELECT ALL (vt2.c0 IN (NULLIF(DISTINCT vt2.c0, vt2.c0))) FROM vt2 WHERE (CASE WHEN (('-897666342') NOTNULL) THEN CASE WHEN x'cfdc' THEN '-748480779' ELSE NULL END ELSE CASE NULL  WHEN -1024680028 THEN '' END END); -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0)<(-1.386218935E9))) OVER () FROM vt1, vt2 NOT INDEXED WHERE ((- (NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL CAST(IFNULL(DISTINCT vt2.c0, vt1.c0) AS INTEGER), (((((vt2.c0)) BETWEEN ((vt2.c0)) AND (('-612397841'))))=(vt2.c0 COLLATE NOCASE)), LAST_VALUE(((((vt2.c0) NOTNULL))<(UPPER('-1595019385')))) OVER () FROM vt1, vt2 WHERE ((((('^e7YQ\rKN_') NOT NULL)) NOTNULL)); -- 1ms;
SELECT DISTINCT COUNT(*), TRIM(DISTINCT ((vt2.c0) NOTNULL)), ((((UNLIKELY(0Xffffffffa6af1da4))OR(((vt1.c0)OR(vt2.c0)))))OR(vt2.c0)) FROM vt1, vt2 WHERE (CASE '499065839'  WHEN '0.8200895859074525' THEN 'Tk3욦' ELSE NULL END COLLATE NOCASE); -- 0ms;
SELECT ((vt1.c0)!=(vt2.c0)) COLLATE BINARY, ((((vt2.c0) NOTNULL)) NOT NULL), 0.755749317876494 FROM vt2, vt1 NOT INDEXED GROUP BY (((((vt2.c0))=((vt2.c0))))<(CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 WHEN x'' THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 END)); -- 0ms;
SELECT ALL ((((((((((((((((((vt1.c0)IS(vt1.c0)))OR(x'')))AND(((vt1.c0) IS FALSE))))AND(((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))OR((NULL IN ()))))OR((vt1.c0 IN (vt2.c0, vt1.c0)))))OR(((vt2.c0)%(vt1.c0)))))OR(vt2.c0)))AND(vt2.c0 COLLATE RTRIM)) FROM vt1 ORDER BY (((vt1.c0)<>(vt1.c0)) IN ()) ASC;SELECT ALL RANK() OVER () FROM vt1; -- 0ms;
SELECT ALL ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0)))))>(((vt2.c0 IN (vt1.c0))))), FIRST_VALUE(CAST((vt2.c0 IN ()) AS TEXT)) OVER (), SUM((~ (vt1.c0))) OVER (), COALESCE(DISTINCT vt2.c0, vt2.c0) COLLATE RTRIM, TYPEOF(DISTINCT CAST(vt1.c0 AS NUMERIC)) FROM vt1, vt2 GROUP BY '-590013204'; -- 0ms;
SELECT ((((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt2.c0)LIKE(vt2.c0))) AND (GROUP_CONCAT(vt1.c0))) FROM vt2, vt1; -- 5ms;
SELECT CAST(((vt2.c0)-(0x1ea83495)) AS BLOB), NULL, COUNT(*) FROM vt1;SELECT DISTINCT (+ ((vt1.c0 IN ()))) FROM vt1 WHERE (CASE WHEN ((-1761322596)>=('0.18530878732568723')) THEN CASE WHEN 'Wj' THEN -348476677 ELSE 'A䷞' END ELSE ((x'd6a5af45') IS TRUE) END); -- 0ms;
SELECT ALL CAST(QUOTE(vt2.c0) AS REAL) FROM vt2, vt1 WHERE (((('1066185287')) NOT BETWEEN (('-1451435495')) AND ((0.5214597752703444))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT LEAD('JEP', 'FALSE', CAST(CASE WHEN vt1.c0 THEN vt2.c0 END AS INTEGER)) OVER (), (((vt1.c0) NOT NULL) IN (((0.7788438141203149)<<(vt2.c0)), ((vt1.c0) IS TRUE))), ((((vt1.c0)-(vt2.c0)))LIKE(((vt2.c0)-('*')))) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT 0X147f9604, CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 END AS INTEGER), (json_array(vt1.c0, NULL, vt2.c0, 0.3153862733143479) IN ()) FROM vt1, vt2 WHERE ((((+ ('568450163'))) IS TRUE)); -- 0ms;
SELECT ALL ((((vt2.c0))=((vt1.c0))) IN (SQLITE_VERSION(), MAX(vt1.c0))) FROM vt2 WHERE ((((('捠Q3Z*')<=(3.05040506E8)))OR(((NULL)>(NULL)))));SELECT DISTINCT CASE CAST(vt2.c0 AS INTEGER)  WHEN ((vt2.c0) NOT NULL) THEN x'' END FROM vt1, vt2; -- 0ms;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((6.37123706E8)) BETWEEN (('w7rI+t')) AND (('-602099614'))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((vt1.c0) ISNULL)))>=((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0))))), ((((vt1.c0)>>(x'8c72'))) NOTNULL), (((vt2.c0)) NOT BETWEEN ((((vt2.c0) ISNULL))) AND ((vt1.c0))) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT ((vt2.c0 COLLATE BINARY)<=(((vt2.c0)AND(vt2.c0)))) FROM vt2, vt1 LIMIT 2039769405; -- 0ms;
SELECT ALL TOTAL((((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0)))) OVER () FROM vt2, vt1 WHERE ((('-1732065144') BETWEEN ('1232787878') AND (0Xffffffff993c4589)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (~ (CAST(vt2.c0 AS BLOB))) FROM vt2; -- 0ms;
SELECT DISTINCT (MIN(vt1.c0) IN ()), CASE WHEN ((((vt2.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)-(vt2.c0)) ELSE vt1.c0 COLLATE NOCASE END, ((((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)))<=(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) FROM vt1;SELECT (((vt1.c0, '0.8868931316571128', vt2.c0))>((vt2.c0, vt1.c0, vt1.c0))) COLLATE NOCASE, CAST(((vt2.c0)<(vt2.c0)) AS TEXT), ((json(vt1.c0))IS NOT(vt1.c0)) FROM vt2 WHERE (CASE WHEN '-1128062333' THEN '0.022865126761230536' ELSE x'' END COLLATE RTRIM);SELECT ALL CASE WHEN ((((((((((((vt2.c0)OR(vt2.c0)))AND(NULL)))AND('')))AND(vt1.c0)))AND(vt2.c0)))OR(vt2.c0)) THEN COUNT(vt1.c0) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt2.c0)) THEN (NOT (vt2.c0)) WHEN x'0792' THEN 'eL~T76}i,' END, CAST(vt1.c0 AS BLOB) COLLATE RTRIM COLLATE BINARY, CAST(((vt1.c0)&(vt2.c0)) AS INTEGER) FROM vt2;SELECT DISTINCT (((vt2.c0, vt2.c0, vt2.c0)) BETWEEN (((((vt1.c0))!=((vt2.c0))), COUNT(*), CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 WHEN 'PN' THEN vt2.c0 WHEN vt1.c0 THEN 0.16073013615410303 END)) AND (((vt1.c0 IN ()), (~ (0.35403512413755156)), NULL))), 0.8628824638790303, SUM(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 END COLLATE BINARY) OVER () FROM vt2 WHERE (((((((((((-1644550616)OR(0.28086588549243596)))OR(NULL)))OR(x'')))OR(NULL)))+((((0.8692857544012481, NULL, NULL)) NOT BETWEEN ((NULL, 0xffffffffd285a468, NULL)) AND ((0.4759599169619504, x'', x'')))))) ORDER BY (((vt2.c0, ((vt1.c0)AND(vt1.c0)), CASE WHEN vt2.c0 THEN vt1.c0 END))!=((CAST(vt1.c0 AS NUMERIC), vt2.c0 COLLATE NOCASE, x''))) DESC;SELECT ALL ((((NULL) ISNULL)) NOT BETWEEN (CAST(vt2.c0 AS NUMERIC)) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) FROM vt2, vt1 GROUP BY x'' HAVING ((((((((((vt1.c0)OR(vt2.c0)))OR(vt1.c0)))OR(vt2.c0)))OR(vt2.c0)))||(CASE WHEN vt1.c0 THEN vt2.c0 ELSE vt2.c0 END)) ORDER BY vt1.c0  NULLS LAST, vt2.c0 ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT (+ (((NULL) IS FALSE))), ((((vt2.c0) IS FALSE))!=(CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)), ((CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt2.c0 END)<=((+ (vt2.c0)))) FROM vt1, vt2 GROUP BY (vt1.c0 COLLATE BINARY IN (CASE vt2.c0  WHEN -1.451435495E9 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)/(vt2.c0)))), CAST(CAST(vt2.c0 AS INTEGER) AS NUMERIC), ((((((((NULL)AND(((x'64cc387c') IS TRUE))))AND(((vt1.c0) NOT NULL))))OR((((vt1.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))), ((((vt1.c0)GLOB(vt2.c0)))>=(vt2.c0)), (NOT (vt2.c0)) HAVING x''; -- 0ms;
SELECT DISTINCT MIN(((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0))), ((((vt1.c0)) BETWEEN ((NULL)) AND ((vt2.c0))) IN ()), ((load_extension(vt1.c0, vt2.c0))<(vt1.c0)) FROM vt1 WHERE (((((1220205995) BETWEEN (x'') AND (x'')))GLOB('W')));SELECT CUME_DIST() OVER () FROM vt2, vt1; -- 0ms;
SELECT DISTINCT ((vt2.c0) IS FALSE) COLLATE BINARY FROM vt2 WHERE (CASE ((NULL) ISNULL)  WHEN LOWER(0xffffffff9727a289) THEN (0.11375846107928056 IN (NULL)) END); -- 0ms;
SELECT DISTINCT (((+ (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND (CAST(vt2.c0 AS BLOB))) FROM vt1;SELECT DISTINCT (((vt2.c0, vt1.c0, vt1.c0, '-733888713', vt1.c0)) BETWEEN ((-1279733074, vt1.c0 COLLATE RTRIM, ((((((((vt1.c0)OR(1e500)))OR(vt1.c0)))OR(vt2.c0)))AND(vt1.c0)), ((vt2.c0)&(vt2.c0)), vt2.c0)) AND ((((vt1.c0)>>(vt1.c0)), ((((vt2.c0)AND(NULL)))AND(vt2.c0)), 0.3002122229510904, ((((vt1.c0)AND(vt2.c0)))AND(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) FROM vt1, vt2 LIMIT 1187853612; -- 0ms;
SELECT CASE WHEN (+ (vt1.c0)) THEN LTRIM(vt1.c0, vt2.c0) WHEN NULL THEN (((vt1.c0, vt1.c0, vt2.c0)) BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt1.c0, vt1.c0, vt2.c0))) WHEN ((vt1.c0)>(0.7409561339549404)) THEN 0X40dd3d6d END FROM vt1, vt2; -- 0ms;
SELECT NTILE(((vt2.c0) NOT NULL) COLLATE NOCASE) OVER (), ((vt2.c0 COLLATE RTRIM)/((NOT (-1671955456)))), (((((vt1.c0)OR(vt1.c0)))AND(vt2.c0)) IN ()) FROM vt1, vt2 WHERE ((((((x'')%('TRUE'))))>((((0.45851849519411725)AND(NULL)))))); -- 0ms;
SELECT DISTINCT ((MAX(vt1.c0)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt2.c0 END) AND ((((vt1.c0, vt2.c0, NULL, vt2.c0, vt1.c0))>=(('0.0', vt2.c0, '-1952731221', NULL, vt2.c0))))) FROM vt1;SELECT (((PRINTF(vt2.c0)))<=((CASE WHEN '-1072742869' THEN vt1.c0 END))) FROM vt1 LIMIT 230750002;SELECT DISTINCT '269534241' COLLATE NOCASE FROM vt2, vt1 WHERE ((~ ('-913812258'))); -- 1ms;
SELECT DISTINCT ((((((vt1.c0)>=(vt1.c0)))AND(CAST('r5*b\rhtaf' AS TEXT))))OR(SUM(vt2.c0))) FROM vt2, vt1 WHERE ('oxiU+XI)') ORDER BY (((vt2.c0)) BETWEEN ((8.51569473E8 COLLATE BINARY)) AND (((vt2.c0 IN (vt2.c0)))))  NULLS FIRST; -- 0ms;
SELECT ALL (((((vt2.c0)AND(NULL)))OR(vt1.c0)) IN ()), (- (CAST(vt1.c0 AS BLOB))), AVG(((vt1.c0) ISNULL)) FROM vt1, vt2 WHERE (((COALESCE(0.9406921313443355, 0X46b11d23)) ISNULL)) LIMIT 1757668972; -- 0ms;
SELECT DISTINCT TOTAL((vt1.c0 IN (vt1.c0))), (((((vt1.c0) NOT NULL), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN '' ELSE vt2.c0 END, vt2.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=((((vt1.c0)||(vt1.c0)), ((vt1.c0) IS TRUE), ((vt2.c0)/(0.7037632062255486)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((((((((((vt1.c0)OR(vt2.c0)))AND(0.3010372235894453)))OR(vt1.c0)))AND(-1061748788)))OR(vt1.c0)))OR(vt2.c0))))), ((((vt2.c0) ISNULL)) IS FALSE), vt1.c0, SUM(((vt1.c0)<(vt2.c0))) OVER () FROM vt1 WHERE (((((((((((x'')AND(NULL)))AND(x'')))AND('M]{MR')))AND('1935755598')))LIKE(((NULL) BETWEEN (x'') AND (0.454021798040136))))) ORDER BY ((ABS(DISTINCT vt1.c0)) BETWEEN ((vt2.c0 IN (vt2.c0))) AND ('fy(c+B'))  NULLS FIRST;SELECT TOTAL((((vt1.c0, '151906108', x'6f21')) NOT BETWEEN ((vt1.c0, vt2.c0, 0.7549898699498986)) AND ((vt1.c0, vt2.c0, vt2.c0)))) OVER () FROM vt2, vt1 WHERE (((LIKELY(DISTINCT '	~goW?*')) IS TRUE)); -- 0ms;
SELECT ((((vt1.c0) NOT BETWEEN (vt2.c0) AND ('-1485906489')))LIKE(COUNT(vt1.c0))) FROM vt2, vt1 WHERE (TRIM(NULL, NULL COLLATE RTRIM)); -- 0ms;
SELECT ALL ((((CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN NULL WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN 0xffffffffd218318f WHEN vt1.c0 THEN vt2.c0 END)AND(COUNT(NULL))))OR((((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))))) FROM vt2;SELECT (SUM(vt1.c0) IN (GROUP_CONCAT(vt2.c0))), CASE WHEN ((vt2.c0)>=(x'')) THEN ((vt1.c0)IS(vt2.c0)) END, MIN((((vt1.c0))==((vt1.c0)))) FROM vt2, vt1; -- 0ms;
SELECT ((TYPEOF(vt2.c0))>((((vt2.c0, vt2.c0, -783431054)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt1.c0, vt2.c0, vt2.c0))))), ((CASE WHEN vt2.c0 THEN '{f䔔M37%Q' END)OR(SUM(vt1.c0))), (CASE WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END IN ()) FROM vt1, vt2; -- 0ms;
SELECT ALL CAST(HEX(DISTINCT vt2.c0) AS TEXT) FROM vt1 WHERE (LOWER(DISTINCT load_extension(0xffffffffe3e35ffe, NULL)));SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0))) IS FALSE), (((~ (vt2.c0)))|(x'21aa')), (((vt2.c0, '1159931041', vt1.c0)) NOT BETWEEN (((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((NULL))), (- (vt1.c0)), (vt2.c0 IN ()))) AND ((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END, ((NULL)>(vt1.c0)), CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 END))) FROM vt1;SELECT DISTINCT FIRST_VALUE((((vt1.c0) IS TRUE) IN ())) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND ((vt2.c0) IS TRUE) FOLLOWING) FROM vt2, vt1;SELECT DISTINCT (+ ((NOT (vt2.c0)))) FROM vt1, vt2; -- 0ms;
SELECT ALL ((vt1.c0 COLLATE NOCASE)/(((NULL)%(vt1.c0)))) FROM vt2;SELECT DISTINCT json_remove((- (vt1.c0)), vt2.c0 COLLATE NOCASE) FROM vt2;SELECT DISTINCT (((vt1.c0) BETWEEN (vt1.c0) AND ('')) IN ()) FROM vt2, vt1 WHERE (((((NULL IN ())))>=((('62079201' IN ()))))); -- 0ms;
SELECT DISTINCT (('-416419759')==(((vt2.c0)|(vt1.c0)))) FROM vt2, vt1 WHERE (LIKELIHOOD(HEX(0x36f12b1), 0.6286806133742887)); -- 0ms;
SELECT DISTINCT CASE (~ (vt1.c0))  WHEN (vt2.c0 IN ()) THEN x'' END, CAST(vt2.c0 AS REAL) COLLATE NOCASE, ((MAX(vt2.c0)) IS TRUE), ' Tfd', LIKELIHOOD(DISTINCT vt2.c0, 0.32959048930444623) FROM vt1, vt2; -- 0ms;
SELECT ALL ((HEX(DISTINCT 0.25217054572525033)) IS TRUE) FROM vt1 ORDER BY (vt2.c0 IN ()) COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT (((vt1.c0, vt2.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL), COUNT(*), ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('OUx	ﰀ{)	')))) AND (((~ (vt2.c0)), 1.088241005E9, ((((vt2.c0)AND(vt1.c0)))AND(vt1.c0))))) FROM vt2, vt1 WHERE (CAST((('-613275015') NOT BETWEEN ('988959212') AND (0.8645096522292711)) AS NUMERIC)); -- 0ms;
SELECT (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((NOT (vt2.c0)), '', ((vt2.c0)<=(vt2.c0)))) AND ((((vt1.c0)GLOB(vt1.c0)), ((vt2.c0) IS TRUE), ((((vt1.c0)AND(vt2.c0)))AND(vt2.c0))))) FROM vt1, vt2 WHERE (((NULL COLLATE RTRIM) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((vt2.c0) ISNULL)) NOT BETWEEN (GROUP_CONCAT(vt1.c0)) AND ((- (vt2.c0)))) FROM vt1 GROUP BY ((((UNLIKELY(NULL))AND('1446433480')))OR(vt2.c0));SELECT DISTINCT vt1.c0 COLLATE RTRIM FROM vt1; -- 0ms;
SELECT ALL (- (MAX(vt1.c0))), (NOT (vt2.c0)), COUNT(*) OVER () FROM vt2 WHERE (((('1324014170' IN ())) IS FALSE));SELECT FIRST_VALUE(((CASE WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)<((((vt2.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt2.c0)))))) OVER ( ORDER BY ((CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 END)*(CAST(vt2.c0 AS BLOB))) DESC) FROM vt2, vt1 WHERE (LAST_INSERT_ROWID()); -- 1ms;
SELECT DISTINCT GLOB(CAST(vt2.c0 AS TEXT), IFNULL(vt2.c0, vt2.c0)), CAST(((((vt1.c0)OR(vt2.c0)))OR(vt2.c0)) AS NUMERIC), (x'' IN ()) FROM vt1;SELECT DISTINCT CAST((vt1.c0 IN ()) AS NUMERIC) FROM vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(UPPER(DISTINCT vt1.c0)) COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT LAST_VALUE((((((vt2.c0 IN ()))AND((vt2.c0 IN ()))))OR(vt1.c0))) OVER ( GROUPS CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt2.c0 IN ()) ELSE ((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)) END PRECEDING EXCLUDE TIES) FROM vt1, vt2 WHERE (((((('')AND(1.418697818E9)))AND(0.5641171191506226)) IN (((0.5676424476176395)+(NULL))))); -- 0ms;
SELECT ((((vt1.c0 COLLATE BINARY)AND(CAST(vt2.c0 AS INTEGER))))AND(((vt2.c0) NOTNULL))) FROM vt1 WHERE (((((NULL) NOT BETWEEN (NULL) AND ('2036719050'))) NOT BETWEEN (json_insert(x'4e96', NULL, '')) AND (x'' COLLATE RTRIM)));SELECT (((vt1.c0)) NOT BETWEEN ((highlight(vt1.c0, vt2.c0, vt1.c0, vt2.c0))) AND ((SUM(vt2.c0)))) FROM vt1 ORDER BY CAST(((vt1.c0)>>(vt1.c0)) AS REAL) ASC;SELECT DISTINCT (HEX(vt1.c0) IN ()) FROM vt1, vt2; -- 0ms;
SELECT PERCENT_RANK() OVER (), (~ (((vt2.c0) IS TRUE))), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0)))GLOB((+ (vt1.c0)))) FROM vt2, vt1 WHERE (('FALSE' IN ())); -- 0ms;
SELECT DISTINCT -1697311303 COLLATE NOCASE FROM vt1 LIMIT 1249239386 OFFSET 1569678723; -- 0ms;
SELECT DISTINCT CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END  WHEN CAST(vt1.c0 AS TEXT) THEN (~ (vt2.c0)) ELSE (vt1.c0 IN (vt2.c0, vt1.c0)) END, (NOT (vt1.c0)) COLLATE RTRIM, ((((CASE WHEN vt1.c0 THEN vt2.c0 END)AND(CASE WHEN vt1.c0 THEN vt2.c0 ELSE '-1794475241' END)))AND(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) FROM vt2 LIMIT -1592557201;SELECT CAST(NULL AS BLOB) COLLATE RTRIM, TOTAL(((vt1.c0) ISNULL) COLLATE BINARY), ((UPPER(vt1.c0))>>(SQLITE_VERSION())) FROM vt1, vt2 WHERE ((+ ((('-658813434') NOTNULL)))); -- 0ms;
SELECT ALL vt1.c0, (+ (load_extension(vt2.c0, vt2.c0))), LTRIM(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END) FROM vt2, vt1;SELECT DISTINCT CASE ((vt2.c0)%(vt2.c0))  WHEN CAST(vt1.c0 AS REAL) THEN CAST(vt2.c0 AS BLOB) END FROM vt1, vt2 WHERE ((CASE WHEN NULL THEN x'648b' ELSE 'F◐GA75?TA' END IN ())); -- 0ms;
SELECT DISTINCT TOTAL(UNLIKELY(vt1.c0)) OVER () FROM vt1 WHERE ((((x''))>(((((((((('0.02859946272300551')AND(2145667546)))AND(0x724cfe2d)))AND('[^[*v')))AND('1549342648')))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt2.c0)>=(vt1.c0)) THEN ((vt2.c0)=(vt2.c0)) WHEN CAST(vt2.c0 AS BLOB) THEN CAST(vt2.c0 AS NUMERIC) WHEN (~ (vt2.c0)) THEN (vt2.c0 IN (x'e1d9')) WHEN ((((vt2.c0)OR(vt2.c0)))AND(0.907567331701546)) THEN ((vt2.c0) IS FALSE) WHEN ((vt1.c0) ISNULL) THEN (vt1.c0 IN ()) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN '1550154365' WHEN vt1.c0 THEN vt2.c0 END END FROM vt1, vt2 WHERE (((((('')AND(0.9291992017422721))))<=((('' IN (NULL)))))); -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c0 AS BLOB) AS INTEGER) FROM vt2 WHERE (((((NULL)IS NOT('A*i'))) IS TRUE));SELECT ALL 0.8335537033644235 FROM vt2 WHERE ((((((((((('')OR(x'')))AND('')))AND(-9.67478596E8)))OR('1291652556'))) NOT BETWEEN (((x'')AND(0.044379704302543566))) AND (((((x'')AND(x'')))AND(NULL))))) GROUP BY ((vt1.c0)OR(vt1.c0)) COLLATE NOCASE HAVING ']W7#*਑xE' ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))<=((((vt1.c0))<>(('2015039732'))))) DESC, ((((x'')OR(CAST(vt1.c0 AS NUMERIC))))OR((((vt1.c0, NULL, vt1.c0))<=((vt1.c0, vt1.c0, vt2.c0)))))  NULLS FIRST, CASE WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE;SELECT DISTINCT CAST(((0.5631103456026901)IS NOT(vt2.c0)) AS INTEGER) FROM vt2, vt1 WHERE ((CASE WHEN 'i L' THEN 0Xffffffffb25f8b9e END IN ())); -- 0ms;
SELECT ALL ((LIKELIHOOD(DISTINCT vt1.c0, 0.7237686965402313)) ISNULL), DENSE_RANK() OVER (), CAST(((vt2.c0)|(vt1.c0)) AS REAL) FROM vt1, vt2; -- 0ms;
SELECT ALL NULL FROM vt2, vt1 GROUP BY ''; -- 0ms;
SELECT DISTINCT ((((vt1.c0) IS TRUE))>=(((vt2.c0)/(vt1.c0)))) FROM vt1, vt2 LIMIT 305040506; -- 0ms;
SELECT ALL (CAST(vt1.c0 AS REAL) IN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt2.c0)&(vt2.c0)))) FROM vt1 NOT INDEXED, vt2 WHERE (((CAST(NULL AS BLOB))+(CAST('{)%gL' AS INTEGER)))); -- 0ms;
SELECT LOWER(((x'')||(NULL))) FROM vt2 GROUP BY (((vt1.c0)-(vt2.c0)) IN ()), (((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))))IS NOT(((vt1.c0)!=(vt2.c0)))), (((vt1.c0))<>(((((vt1.c0, vt2.c0, vt1.c0, vt2.c0, ''))<=((vt2.c0, vt2.c0, vt1.c0, vt1.c0, '-477903246')))))), vt2.c0, (((((vt2.c0))>((vt1.c0)))) BETWEEN (((vt2.c0) NOTNULL)) AND (((vt2.c0) ISNULL))) HAVING (((((vt1.c0) IS TRUE)))>((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 END)));SELECT ALL (((vt2.c0)) NOT BETWEEN ((CAST(vt2.c0 AS NUMERIC))) AND ((((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) FROM vt1, vt2 LIMIT -1366919648; -- 0ms;
SELECT DISTINCT AVG(((vt1.c0)OR(vt1.c0)) COLLATE NOCASE), LIKELY(vt2.c0), (vt1.c0 IN ()) FROM vt1 WHERE (CASE WHEN ((4.76652365E8) IS TRUE) THEN json(375493300) WHEN (((('')AND(0.08941570824276868)))AND(NULL)) THEN ('-742082189' IN ()) WHEN (('')||(')F\n3W')) THEN (('1832412163')%(x'')) ELSE (NULL IN ('')) END) ORDER BY (((~ (vt1.c0)))-('1418697818'))  NULLS LAST, (0.6652320493186568 IN ())  NULLS FIRST;SELECT ALL vt2.c0 FROM vt2, vt1; -- 0ms;
SELECT DISTINCT 0.7315811333121034 FROM vt2, vt1 WHERE (CAST(((-1290141341) NOT BETWEEN ('') AND (0xffffffffca60bb68)) AS BLOB)) LIMIT 1117270070; -- 0ms;
SELECT ALL UNICODE(vt2.c0 COLLATE RTRIM), CASE vt2.c0  WHEN 'C' THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END COLLATE NOCASE, AVG(COALESCE(DISTINCT vt2.c0, vt2.c0)) OVER ( PARTITION BY ((((0.8698531637205901)+(vt1.c0)))IS((('-401536610') BETWEEN (vt1.c0) AND (vt1.c0)))), (((vt1.c0, NULL, vt1.c0)) BETWEEN ((((vt2.c0)<=(vt2.c0)), 0.29327605051854544 COLLATE RTRIM, NULL)) AND ((NULL, (vt1.c0 IN ()), ((((vt1.c0)AND(vt2.c0)))OR(vt1.c0)))))) FROM vt1, vt2 LIMIT -1675545083 OFFSET 1487155356; -- 1ms;
SELECT DISTINCT (((CASE vt2.c0  WHEN vt1.c0 THEN vt1.c0 END))<(((NOT (vt2.c0))))) FROM vt2, vt1; -- 0ms;
SELECT (+ (((vt1.c0) NOTNULL))) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT vt2.c0 FROM vt1;SELECT ALL COALESCE(DISTINCT ((1321293727) BETWEEN (0.11228851959638242) AND (vt1.c0)), ((vt1.c0)>(vt2.c0))), (+ ((+ (vt1.c0)))), COUNT((vt1.c0 IN (vt1.c0, vt1.c0))) FROM vt2 WHERE ((((('0.43375547229577904') NOTNULL))LIKE('0.024676985551573716' COLLATE RTRIM)));SELECT DISTINCT ((NOT (vt1.c0)) IN ()), CAST((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))) AS BLOB), ((0.9277351450454437)IS NOT((vt2.c0 IN ('', '1249598562')))) FROM vt1, vt2 WHERE (CASE ((('PO', 0.13455213547110412, 1889373830))>=((x'', x'', 0.43826904123256194)))  WHEN ((568881016)-(0.9249796865338615)) THEN x'b8a4' WHEN (((x''))<(('JM5&>aD'))) THEN NULL COLLATE RTRIM WHEN ((NULL)*(1.725463717E9)) THEN (NULL IN ('촏C')) END); -- 0ms;
SELECT DISTINCT (((((vt1.c0)OR(vt2.c0)))AND(vt2.c0)) IN ()) FROM vt1, vt2; -- 0ms;
SELECT ALL (((vt1.c0 IN ())) ISNULL) FROM vt2, vt1; -- 0ms;
SELECT SUM(CAST(vt1.c0 AS INTEGER)) OVER ( PARTITION BY CAST(((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)) AS REAL), 'v륈)r鱚.~v') FROM vt2, vt1; -- 0ms;
SELECT ((((((vt2.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((0Xffffffffcbab3bb8) NOTNULL)) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)) FROM vt2, vt1 WHERE (((((-1.754574326E9)GLOB(NULL)))-((- ('0.7605973186601663'))))); -- 0ms;
SELECT ALL (((~ (vt1.c0)))-(vt2.c0)), (+ (((vt2.c0)==(NULL)))), (((((vt1.c0)/(vt2.c0))))<((x'fafd'))), COUNT(*) COLLATE RTRIM, vt2.c0 FROM vt1, vt2 WHERE (CAST(((NULL)>>(0.263350109135718)) AS TEXT)) GROUP BY ((NOT (vt1.c0)) IN ()) HAVING TOTAL((((vt2.c0, vt2.c0, vt2.c0))=((vt1.c0, vt2.c0, vt2.c0)))); -- 1ms;
SELECT DISTINCT ((((vt2.c0) IS FALSE))OR(vt1.c0)) FROM vt2, vt1; -- 0ms;
SELECT CASE (((vt2.c0))>((vt2.c0)))  WHEN ((vt2.c0)<=(vt2.c0)) THEN (+ (vt2.c0)) END, vt2.c0, COUNT(*) OVER () FROM vt2 LIMIT -242698759; -- 0ms;
SELECT ((((vt2.c0)<=(vt2.c0)))<(((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), AVG(((vt1.c0)&(vt2.c0))), (~ (((vt2.c0)>>(vt1.c0)))) FROM vt2 WHERE (CASE 0.16214801233221798  WHEN ((0.8367304124269132)OR(0x1a95ec07)) THEN CASE WHEN 1.088241005E9 THEN 0X7eaf3a9 WHEN -2.082350764E9 THEN 0.03159142929586056 WHEN NULL THEN x'90c0' ELSE 0.3383467269884546 END END);SELECT DISTINCT ((((vt2.c0) NOT NULL))<=(CAST(vt1.c0 AS NUMERIC))), vt1.c0, (NOT (vt1.c0)) COLLATE BINARY FROM vt2, vt1; -- 0ms;
SELECT DISTINCT CASE (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, '1317921290')))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN json_patch(vt1.c0, vt2.c0) END FROM vt2;SELECT DISTINCT CAST(AVG(vt2.c0) AS REAL) FROM vt1, vt2; -- 0ms;
SELECT ((NULL)-(vt2.c0)) FROM vt2, vt1 GROUP BY (((vt1.c0)<>(vt2.c0)) IN ()); -- 0ms;
SELECT ALL ((((CAST(vt1.c0 AS NUMERIC))AND(COUNT(*))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))), (((0.9626177349584552)) BETWEEN ((CAST(vt2.c0 AS BLOB))) AND ((((((vt2.c0)AND(vt2.c0)))OR(0X4ca9f6bb))))), CASE 1.31792129E9  WHEN (vt2.c0 IN (vt2.c0)) THEN (~ ('57610929')) WHEN SUM(vt2.c0) THEN ((((vt1.c0)AND(vt2.c0)))OR(vt2.c0)) WHEN json_array(vt2.c0, vt2.c0, vt2.c0, vt2.c0) THEN '' COLLATE RTRIM ELSE CAST(-233725846 AS REAL) END FROM vt2, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ('s9', vt1.c0)))GLOB(CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 END)) FROM vt1 RIGHT OUTER JOIN vt2 ON (((CAST(vt1.c0 AS BLOB), '1187853612', vt2.c0))<((((vt1.c0)IS NOT(vt1.c0)), ((vt2.c0)-(vt1.c0)), ((vt1.c0)>=(vt1.c0))))) WHERE ((((CASE WHEN x'da41' THEN NULL WHEN '1317921290' THEN x'' WHEN '-614977408' THEN NULL WHEN 0.7109426077057033 THEN -684176962 WHEN 0.3505113299112187 THEN NULL END))<=(((((0.4170187572593135)) NOT BETWEEN (('''Xm欻')) AND (('2066891647'))))))); -- 0ms;
SELECT DISTINCT ((((vt2.c0) IS TRUE))<=(((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) FROM vt2, vt1 LIMIT 645630266; -- 0ms;
SELECT MAX(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END) COLLATE NOCASE FROM vt1;SELECT DISTINCT ((vt2.c0 COLLATE RTRIM)|((vt2.c0 IN ()))), '-613275015', ((CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END)/(((vt2.c0)%('-283863680')))) FROM vt2 WHERE (((CASE NULL  WHEN NULL THEN '' WHEN x'' THEN 0.012178906542974932 WHEN NULL THEN 0.8056136122829564 ELSE NULL END) NOT BETWEEN (((0.32028724000032094) NOT NULL)) AND ('1952240641')));SELECT (NULLIF(vt1.c0, vt1.c0) IN ()), ((('1040:514 7917389065914019930-4002318344845092139 -6982807996038404664 1087 C粥')>=(vt1.c0)) IN ('7Y', CAST(vt1.c0 AS REAL))), vt2.c0 FROM vt1, vt2 GROUP BY ((CASE WHEN 0Xffffffff9d9bc1fe THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END) BETWEEN (((vt2.c0) NOT NULL)) AND (0.4147709568765664)); -- 0ms;
SELECT ALL (((vt2.c0)>>(vt1.c0)) IN ()), SUM(AVG(UNLIKELY(vt1.c0))), AVG(LIKELIHOOD(vt1.c0, 0.16053444865529087)) FROM vt1 WHERE ((((((((((((0.3043349614805736))=(('1021279579'))))OR(CAST(0x754e12ff AS INTEGER))))AND((('Q~') IS FALSE))))OR((2054250154 IN (0x1c69234d)))))OR(((x'')<('1851401074'))))) ORDER BY (((vt2.c0)) NOT BETWEEN ((vt2.c0 COLLATE NOCASE)) AND ((((vt1.c0)*(vt2.c0)))));SELECT DISTINCT (- (((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt2 LIMIT -1169553623;SELECT ALL (((vt2.c0)IS(vt2.c0)) IN (((vt2.c0)&(vt1.c0)))) FROM vt2, vt1 WHERE (json_remove((((NULL, NULL, '{l E')) BETWEEN ((x'', x'f2b4', x'')) AND (('-783431054', NULL, '8u'))), CASE WHEN '1232787878' THEN -1744260575 ELSE '0.3669800876203603' END)) ORDER BY CAST(vt2.c0 COLLATE NOCASE AS TEXT); -- 0ms;
SELECT DISTINCT vt1.c0, (NOT (((vt2.c0)<=(vt1.c0)))), '285874784' COLLATE BINARY FROM vt1 WHERE ((((UNLIKELY(0.007310550481400502)))=((x'2b1d' COLLATE BINARY))));SELECT ALL CASE WHEN (NOT (NULL)) THEN IFNULL(vt2.c0, vt2.c0) END FROM vt2; -- 0ms;
SELECT ALL (((vt1.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0X2b73234d)), ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)), vt1.c0)) AND ((((vt2.c0)GLOB(vt1.c0)), ((((((((vt1.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt1.c0)))OR(vt2.c0)), CAST(vt2.c0 AS INTEGER)))) FROM vt2, vt1 WHERE (((CAST('(j' AS TEXT))<=((('1834864509')GLOB(0.028280322084809795))))) ORDER BY json_remove((NOT (vt2.c0)), ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)), vt1.c0, (- (vt1.c0))) DESC, ((CASE vt1.c0  WHEN '1360917250' THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 END) NOT BETWEEN ((~ (vt1.c0))) AND (TRIM(vt2.c0))) ASC, (((+ (vt2.c0)))OR(CAST(vt2.c0 AS REAL))) DESC LIMIT 1994541593 OFFSET -615271105;SELECT DISTINCT vt1.c0, AVG(vt2.c0), x'54802a6e' FROM vt1, vt2 WHERE (CAST(512225572 AS REAL)); -- 0ms;
SELECT DISTINCT (((vt1.c0 IN (vt2.c0))) ISNULL), ((((((((NULL)AND((vt2.c0 IN ()))))AND(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))OR(((vt2.c0)*(vt2.c0)))))AND(((vt2.c0) ISNULL))), ((vt1.c0)<>(CASE WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 1638024513 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 END)) FROM vt2;SELECT DISTINCT ((((((vt2.c0)||(vt1.c0)))AND(((vt2.c0)!=(vt1.c0)))))AND(((NULL)GLOB(vt2.c0)))) FROM vt2, vt1; -- 0ms;
SELECT DISTINCT (+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), RANK() OVER (), ((CAST(vt2.c0 AS TEXT))IS NOT(CAST(vt2.c0 AS NUMERIC))) FROM vt1, vt2; -- 0ms;
SELECT ALL ((((('' IN ()))OR(vt2.c0)))OR(SUM(vt2.c0))) FROM vt2 WHERE ((~ ((((NULL)) NOT BETWEEN ((0.7444627741564974)) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT (('-612397841') NOTNULL), (((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((UPPER(vt1.c0), CAST(vt1.c0 AS INTEGER), (~ (vt2.c0)))) AND ((UNICODE(vt1.c0), (((vt2.c0, vt2.c0, vt2.c0))<((vt1.c0, vt1.c0, vt2.c0))), (+ (vt2.c0))))), (('쾶rBy') NOT NULL) FROM vt1 WHERE ((('745691232')-(((NULL) IS FALSE)))) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY END ASC;SELECT ALL '' FROM vt2 WHERE ((~ (((((NULL)AND('C gh')))OR(x''))))); -- 0ms;
SELECT DISTINCT '57610929' FROM vt2, vt1; -- 1ms;
SELECT CAST((~ (vt1.c0)) AS NUMERIC), CAST((vt1.c0 IN ()) AS BLOB), (- (((vt2.c0) BETWEEN (vt2.c0) AND (-1821919180)))) FROM vt2 WHERE ((('0.9356989841771863' COLLATE RTRIM)GLOB(CASE 0.5589403938126557  WHEN NULL THEN NULL END)));SELECT DISTINCT LIKELY(DISTINCT vt1.c0) COLLATE RTRIM, SUM(((vt2.c0)*(vt2.c0))) OVER ( PARTITION BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((((vt1.c0, vt2.c0, vt2.c0))<((vt1.c0, vt2.c0, vt1.c0)))) AND (((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)))), ((CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) NOT BETWEEN ('1631500562') AND ((((vt1.c0))>((x'')))))), LTRIM(((((vt2.c0)AND(vt1.c0)))AND(vt1.c0))) FROM vt1 WHERE ((((((((((((('898036231')OR(x'')))OR(-233725846)))OR(CASE 0.7496779863451475  WHEN '' THEN 0.6078215790235145 END)))OR(((0xffffffffa9500e9c)>=('mV')))))AND(((0.5060855777937032) NOT BETWEEN (0.043544046912641354) AND (0X541e511b)))))OR((((('')AND(NULL)))AND('-1931314807')))));SELECT CASE SUM(vt1.c0)  WHEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)) THEN TIME(vt2.c0, vt2.c0, vt2.c0) ELSE ((vt1.c0) ISNULL) END, (((SUM(vt2.c0)))==(((('')!=(vt1.c0))))), 0x769c68c6 FROM vt1;SELECT DISTINCT ((((vt2.c0)>(vt1.c0))) IS FALSE) FROM vt1, vt2 GROUP BY TRIM(((vt2.c0)AND(vt1.c0))) HAVING ((x'b81d')IS NOT('献{\k' COLLATE NOCASE)); -- 1ms;
SELECT DISTINCT ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))+(((vt2.c0) NOT NULL))), CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS BLOB), ((((('-247412155')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt2.c0)>=(vt1.c0))) AND (((vt1.c0)/(vt2.c0)))) FROM vt2 WHERE (UPPER(0.9513325158951192));SELECT ALL (((0.8213239484500878) IS FALSE) IN ()) FROM vt1 WHERE (((((x'')=(0Xffffffffb8da7d2b))) NOTNULL)); -- 0ms;
SELECT (((((((((NOT (vt2.c0)))OR(TOTAL(vt1.c0))))AND(CAST(vt1.c0 AS INTEGER))))AND(DATETIME(vt1.c0, vt2.c0, vt2.c0))))OR(((vt2.c0)>(NULL)))), COUNT(*), CAST((NOT (vt1.c0)) AS NUMERIC) FROM vt2;SELECT ALL (((('0.21016601176457128') NOT NULL)) IS TRUE), (((vt2.c0 IN ()))+(NULL)), CAST((- (vt1.c0)) AS NUMERIC) FROM vt1 GROUP BY ((LIKE(vt2.c0, vt2.c0))IS(((vt2.c0) NOT NULL))) HAVING ((((((vt2.c0)IS(vt1.c0)))OR(COALESCE(vt2.c0, vt1.c0, vt2.c0, vt1.c0))))AND(UPPER(DISTINCT vt2.c0)));SELECT DISTINCT (((((vt1.c0 IN ()))OR(CAST(vt1.c0 AS TEXT))))AND((((0xffffffffae87805a)) BETWEEN ((vt1.c0)) AND ((vt2.c0))))) FROM vt2 WHERE (CAST('f.GᷬQ(M' AS BLOB) COLLATE BINARY);SELECT ((vt2.c0)&((vt1.c0 IN ()))) FROM vt2, vt1 WHERE (CAST(x'd09c49dc2134' AS INTEGER) COLLATE NOCASE); -- 0ms;
SELECT ALL (((((((vt2.c0)AND(vt1.c0)))AND(vt2.c0)), vt2.c0, CAST(vt2.c0 AS NUMERIC)))!=(((vt1.c0 IN (vt1.c0, 0x129c1490)), ((vt2.c0) NOT BETWEEN (vt1.c0) AND (0.7619499957492054)), CAST(vt1.c0 AS INTEGER)))) FROM vt1;SELECT ALL ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) COLLATE RTRIM FROM vt2, vt1 WHERE (((((((((((((0.257917017197433)AND(0.7606675105864603)))AND(0.1964079942640835)))AND(((('', NULL, 0.7772278573106256, '᩠%<<.', NULL)) NOT BETWEEN (('*R', 0.31075279765773534, 'rU', x'4c6e', 0.7549898699498986)) AND (('1647492491', x'4fbe', x'', NULL, '962679530'))))))AND((((('534247155')AND(0.11185473225832387)))AND('1411272987')))))AND('-512083226')))OR((((0.23430294456196388)) BETWEEN ((x'')) AND ((NULL)))))); -- 0ms;
SELECT ((((vt2.c0) NOTNULL))<(NULL)) FROM vt1 WHERE (((((CASE x''  WHEN NULL THEN '57610929' END)AND(((-7.48480779E8) BETWEEN ('?泟&_Jl!ܩ') AND (x'')))))OR(((x'941e')AND(0xffffffff8bf6af22))))) LIMIT 534247155;SELECT DISTINCT CAST(CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END AS INTEGER) FROM vt1, vt2 GROUP BY ((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)<<((((x'')) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))))); -- 0ms;
SELECT DISTINCT CASE ((vt1.c0)IS NOT(vt2.c0))  WHEN ((0.9436948719428794)GLOB(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt2.c0)) WHEN (~ (vt1.c0)) THEN CAST(vt2.c0 AS NUMERIC) WHEN ((vt1.c0)=(vt1.c0)) THEN (((vt2.c0))!=((vt2.c0))) ELSE ((vt2.c0)LIKE(vt1.c0)) END FROM vt2, vt1; -- 0ms;
SELECT 'bT' FROM vt2, vt1 WHERE (CAST((- (0.549212989799084)) AS BLOB)) GROUP BY (('1249598562' IN ()) IN ()) HAVING UNLIKELY((('2038041398') NOT BETWEEN (vt1.c0) AND (vt1.c0))) LIMIT -1789043077 OFFSET -1706684665; -- 1ms;
SELECT ALL ((vt1.c0) IS TRUE), ((SUM(vt2.c0))>(((vt2.c0)/(vt2.c0)))), 0.727675064113174 FROM vt2 WHERE (0.2542850277718225);SELECT GROUP_CONCAT(CAST(vt2.c0 AS BLOB)), json_type(((vt2.c0)<(vt1.c0))), CASE WHEN ((((((((vt1.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE COUNT(*) END FROM vt2 LIMIT 1569678723 OFFSET 1381047394;SELECT DISTINCT (((((vt1.c0))<((vt2.c0)))) BETWEEN (0.28496040531008926) AND (x'ac86')) FROM vt1 WHERE ((NOT (((x'a467')<<(NULL))))) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt2.c0)!=(vt2.c0)) END LIMIT 688994537 OFFSET 1966353546;SELECT ALL ((((((((((vt2.c0)OR(vt1.c0)))OR(vt2.c0)))AND(vt1.c0)))AND(vt2.c0)))||(vt1.c0)) FROM vt2 ORDER BY (((((((vt1.c0, vt1.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt1.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))))AND((((vt2.c0))==((vt1.c0))))))OR(vt2.c0)) DESC;SELECT DISTINCT (((CAST(vt2.c0 AS INTEGER), CAST(vt1.c0 AS INTEGER), vt1.c0 COLLATE NOCASE))<>((((vt2.c0)|(x'')), NULLIF(vt2.c0, vt2.c0), (vt1.c0 IN ())))) FROM vt1, vt2; -- 0ms;
SELECT DISTINCT (+ (CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END)), json_valid(CASE WHEN vt2.c0 THEN '-1259776897' END), vt2.c0 FROM vt2 WHERE (CAST(CAST(x'f81c3502' AS BLOB) AS BLOB));SELECT (((vt1.c0 IN ())) IS FALSE) FROM vt2, vt1 WHERE (((('1475225709' COLLATE RTRIM))!=((x'3c56' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) IS TRUE)) IS FALSE) FROM vt1, vt2 ORDER BY ((((vt2.c0)<(vt2.c0))) BETWEEN (((vt2.c0) ISNULL)) AND (((vt1.c0)||(vt2.c0)))) DESC  NULLS LAST, CAST(((1758790497) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) ASC, ((((vt2.c0)<>(vt2.c0)))<<(CAST(vt1.c0 AS TEXT)))  NULLS LAST; -- 0ms;
SELECT DISTINCT (- (CAST(vt1.c0 AS BLOB))) FROM vt2 WHERE (((((((x'') ISNULL))AND(CAST('zO' AS BLOB))))OR(CAST(NULL AS NUMERIC))));SELECT SUM(NULL) OVER ( ORDER BY ((((x'')<<(vt2.c0)))<=(vt2.c0 COLLATE RTRIM)) ASC) FROM vt1;SELECT DISTINCT vt2.c0, '' COLLATE BINARY, (vt1.c0 COLLATE NOCASE IN ()) FROM vt2, vt1; -- 0ms;
SELECT (NOT ((vt2.c0 IN ()))), vt2.c0, ((((((x'')OR(vt1.c0)))OR(vt2.c0)))+(((vt1.c0)+(vt2.c0)))) FROM vt2 WHERE (IFNULL((NOT (0.8792964889702094)), CASE WHEN '/t' THEN x'' END)) ORDER BY ((CAST(vt2.c0 AS BLOB)) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS REAL))) DESC  NULLS LAST, -7.6067358E8  NULLS LAST;SELECT ROUND((vt1.c0 IN ()), vt2.c0 COLLATE NOCASE), ((((vt2.c0)&(vt2.c0))) NOTNULL), ((MAX(vt2.c0)) NOTNULL), (((vt2.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END)) AND (((((vt2.c0))<>((vt1.c0)))))), CAST((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) AS INTEGER) FROM vt1, vt2; -- 1ms;
SELECT ALL UPPER(DISTINCT (+ (0.30077571909839884))), COALESCE(DISTINCT CAST(vt1.c0 AS TEXT), SUM(vt1.c0)), CAST(((((((((1021279579)OR(vt2.c0)))OR(vt1.c0)))AND(vt2.c0)))AND(vt2.c0)) AS INTEGER) FROM vt1;SELECT DISTINCT ((((vt2.c0) NOTNULL)) BETWEEN ((((vt1.c0))==((vt2.c0)))) AND (vt2.c0 COLLATE RTRIM)), vt2.c0, ((AVG(vt1.c0)) BETWEEN (((vt1.c0) IS TRUE)) AND (vt1.c0)), ((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))==(x'')), (((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))))AND((- (vt2.c0)))))AND(((vt1.c0) IS FALSE))))OR((vt1.c0 IN (vt2.c0)))))AND((vt2.c0 IN (vt1.c0)))) FROM vt1;SELECT ALL 0.6134927045539599 FROM vt1; -- 0ms;
