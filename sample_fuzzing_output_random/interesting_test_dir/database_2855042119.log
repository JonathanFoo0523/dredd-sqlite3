-- Time: 2024/06/07 09:22:15
-- Database: database19
-- Database version: 3.40.0
-- seed value: 2855042119
CREATE TEMPORARY TABLE t0 (c0 BLOB ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 35ms;
INSERT OR REPLACE INTO t0 VALUES ('-1e500'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i96 ON t0((((c0 IN ()))AND(((((c0)OR(c0)))AND(c0))))); -- 0ms;
CREATE INDEX IF NOT EXISTS i3 ON t0(CAST((((NULL, NULL, c0))<((c0, c0, c0))) AS TEXT)) WHERE CASE WHEN (~ (c0)) THEN (('') NOT NULL) END; -- 0ms;
ANALYZE; -- 22ms;
UPDATE OR IGNORE rt1 SET c2='', c2='574042973'; -- 0ms;
ANALYZE; -- 21ms;
INSERT OR REPLACE INTO rt1(c1, c0) VALUES (NULL, -1489245452); -- 18ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA threads; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES (0.7772485073020692); -- 0ms;
REINDEX BINARY; -- 0ms;
PRAGMA main.optimize; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
ALTER TABLE t1 ADD COLUMN c43 INTEGER; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (''); -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('574042973', x''); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i36 ON t1(((CAST(c0 AS REAL)) NOT BETWEEN ((+ (c43))) AND ((- (c43)))) ASC,((((((c43)OR(c43)))AND(c0)))AND(((c0) BETWEEN (c0) AND (c0))))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ALTER TABLE t1 ADD COLUMN c63 INTEGER; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
REINDEX i3; -- 0ms;
REINDEX; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
COMMIT TRANSACTION; -- 17ms;
PRAGMA cache_size; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES (x'65d2', NULL, NULL); -- 22ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX NOCASE; -- 0ms;
DROP TABLE t1; -- 0ms;
CREATE TEMP TABLE t0 (c0 TEXT , c1 BLOB , c2 INT ); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 15ms;
PRAGMA temp.short_column_names = true; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('1078636096'), (x''), (0.7772485073020692); -- 21ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.7104772233528416); -- 24ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 AFTER DELETE ON t0 FOR EACH ROW  WHEN ((CAST(t0.c1 AS NUMERIC)) BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (0.7772485073020692))) AND (((t0.c1) ISNULL))) BEGIN UPDATE OR IGNORE vt0 SET (c0)=(0.9019107208917365) WHERE (((NOT (vt0.c0))) NOTNULL);SELECT RAISE(FAIL, 'asdf');END; -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
CREATE INDEX i40 ON t0(((c0)IS NOT((+ (c0)))) COLLATE BINARY,((((((((((c1) IS FALSE))AND(c2)))OR((((c2, c1, c1))>=((c2, c2, 0.9956977409445548))))))OR((((c1))=((c0))))))OR(((c0)-(c1)))),((c2 COLLATE RTRIM) ISNULL) COLLATE RTRIM) WHERE ((((((c1))<((c0)))))<((((c1) NOT BETWEEN (c1) AND (c2))))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c19 BLOB; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 19ms;
ANALYZE; -- 12ms;
ALTER TABLE t0 ADD COLUMN c45 INT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i50 ON t0(((((UPPER(c1))OR((NOT (c45)))))AND(((c0) IS FALSE))),(((c2)) NOT BETWEEN (((((c45)) NOT BETWEEN ((c2)) AND ((c45))))) AND (((((c1))>((x'')))))),STRFTIME(c1, (c19 IN ()), x''),(((c0)) NOT BETWEEN ((c19)) AND ((((c0) BETWEEN (c1) AND (c1))))) COLLATE NOCASE,CASE WHEN -664494695 THEN ((c19) BETWEEN (c2) AND (c2)) END COLLATE RTRIM); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 17ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 21ms;
PRAGMA main.default_cache_size = -1489245452; -- 20ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
DROP INDEX "i50"; -- 0ms;
INSERT OR REPLACE INTO t0(c45, c19, c2) VALUES (NULL, x'', NULL); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 27ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c2, CAST(LIKE(rt0.c4, rt1.c1, 'l') AS REAL), ((((((((((t0.c45)IS(t0.c1)))AND(((rt1.c2) IS FALSE))))OR(rt1.c2 COLLATE BINARY)))AND(t0.c1)))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)) FROM t0 WHERE (((((',sI빈''6')) BETWEEN ((x'')) AND ((x'5905'))) IN ()));SELECT COUNT(*) OVER (), CASE WHEN HEX(rt1.c1) THEN rt0.c4 END, COUNT(*) FROM vt0, rt1;SELECT LIKELIHOOD(DISTINCT CAST(rt0.c2 AS BLOB), 0.5693738635604733) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CAST(rt1.c0 AS REAL) AS REAL) RIGHT OUTER JOIN t0 ON ((CAST(rt0.c4 AS REAL))IS NOT('-672740560')) WHERE (CAST(0.6281603267311003 AS BLOB) COLLATE BINARY);SELECT DISTINCT ((((rt0.c3)<>(rt0.c3))) IS TRUE), ((CASE rt0.c4  WHEN rt1.c2 THEN t0.c0 ELSE t0.c2 END) BETWEEN (((((((((rt1.c2)OR('')))AND(rt1.c1)))AND(NULL)))OR(t0.c45))) AND ((((vt0.c0, vt0.c0, t0.c19)) BETWEEN ((rt0.c3, rt1.c1, t0.c2)) AND (('-1489245452', rt0.c2, rt1.c0))))), t0.c1 FROM vt0 WHERE ('696180315') GROUP BY x'' COLLATE BINARY;SELECT DISTINCT ((t0.c45 COLLATE BINARY)LIKE(CASE rt1.c0  WHEN rt0.c3 THEN 'E	r/H''' ELSE t0.c19 END)) FROM rt1, vt0 NOT INDEXED, t0 WHERE (CASE WHEN ((NULL) NOT NULL) THEN (('574042973')GLOB(NULL)) WHEN CAST(NULL AS REAL) THEN 6.96180315E8 COLLATE BINARY WHEN CASE '0.9019107208917365'  WHEN NULL THEN 0X614b244d END THEN (('-\EqM}K')<(0.17659179171914297)) END);SELECT DISTINCT (((((t0.c1)|(t0.c19))))<=((CAST(vt0.c0 AS NUMERIC)))), CAST(((rt0.c0) NOTNULL) AS REAL), (- (((t0.c2)>>(rt0.c4)))), ((-1225203659)-((NULL IN ()))), ((((((((GROUP_CONCAT(t0.c0))OR(((t0.c2)>>(rt0.c3)))))AND((x'd27c' IN (rt0.c2)))))AND(t0.c1)))OR(CASE t0.c0  WHEN t0.c45 THEN '696180315' ELSE NULL END)) FROM rt0, rt1 WHERE (((json_valid('696180315'))/((((NULL))<(('1632314445')))))) ORDER BY (((((rt0.c1)OR(-9.96819384E8)))AND(rt0.c2)) IN ()) ASC  NULLS LAST;SELECT ALL CASE t0.c45 COLLATE RTRIM  WHEN SUM(rt0.c2) THEN (t0.c19 IN ()) WHEN ((0x4e376b93)!=(rt0.c2)) THEN (t0.c1 IN (rt1.c1, rt0.c3)) WHEN (rt0.c1 IN ()) THEN ((((rt0.c0)OR(x'')))OR(t0.c2)) END FROM rt0;SELECT DISTINCT (((((rt0.c4, t0.c19, rt0.c0))<((rt0.c4, rt0.c1, rt0.c0))))IS(((t0.c45) IS FALSE))) FROM t0, rt0, rt1 WHERE ((((((x'')<<(NULL))))!=(((((('1073260010')OR('F%')))AND(-1442010214)))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt0.c1 COLLATE BINARY) AND (NULL)) ASC; -- 5ms;
SELECT ALL 0.4174942573884004 FROM t0, rt1, rt0, vt0; -- 0ms;
SELECT ALL (((((rt1.c0))<=((rt0.c4)))) ISNULL) FROM rt1, t0, rt0, vt0; -- 0ms;
SELECT DISTINCT (((- (t0.c2)))>(((((rt0.c2)AND('E	r/H''')))OR(rt0.c0)))) FROM rt0, rt1, t0, vt0 WHERE (((((NULL)>(NULL)))<=(0.9449656093075428))) LIMIT 696180315 OFFSET -1225203659; -- 0ms;
SELECT DISTINCT ((AVG(0Xffffffffd8ea33a1))IS NOT(0.48657756137191943)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c45)||(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN t0.c19 END) AND ((- (rt1.c1)))) FROM rt0, rt1, vt0 NOT INDEXED, t0 WHERE ((- (((NULL)!=(-1049736208))))); -- 0ms;
SELECT ALL (- (rt1.c1)) FROM rt1, vt0, t0 WHERE (((0.9956977409445548 IN ()) IN ())); -- 0ms;
SELECT ALL TOTAL(LIKELY(DISTINCT t0.c1)) FROM t0, vt0, rt1 WHERE ((~ ((((x''))=(('BGz')))))); -- 0ms;
SELECT DISTINCT '', (((rt0.c4)) NOT BETWEEN ((((t0.c1)IS NOT(rt0.c4)))) AND ((((((-11261988)AND(rt0.c2)))AND(vt0.c0))))), LEAD(((((((t0.c0)OR(t0.c2)))OR(t0.c45))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c19 THEN rt1.c1 ELSE t0.c2 END) AND (((rt1.c0) NOT NULL))), (~ ((((rt1.c1))>=((rt1.c2))))), (rt1.c0 IN ())) OVER ( ORDER BY ((CASE rt1.c0  WHEN t0.c19 THEN t0.c45 WHEN rt0.c3 THEN t0.c2 WHEN t0.c1 THEN t0.c0 END) IS FALSE)  NULLS LAST), ROW_NUMBER() OVER (), ((((t0.c2) NOT BETWEEN (t0.c0) AND (x'')))&(rt1.c0 COLLATE NOCASE)), PERCENT_RANK() OVER (), ((((t0.c1)+(t0.c45))) BETWEEN (((rt0.c1)>=(rt0.c4))) AND ((x'8d3a' IN (rt1.c2)))) FROM rt1, t0 WHERE (CAST((((((((('-1401294930')OR(NULL)))AND('685788188')))AND(0.7062223345553763)))AND(NULL)) AS NUMERIC)) GROUP BY ((1.07326001E9)OR(((NULL)IS NOT(')A^k	ixKx'))));SELECT DISTINCT LEAD((('696180315')-((- (t0.c19)))), CAST((- (t0.c45)) AS TEXT), ((TYPEOF(t0.c19))*(((t0.c2) NOTNULL)))) OVER (), (((t0.c1)%(rt1.c0)) IN ()), ((CASE rt0.c3  WHEN rt0.c4 THEN rt1.c2 END) BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c2)) AND (CASE WHEN rt0.c2 THEN t0.c2 END)) FROM t0 WHERE ((((((((((~ (NULL)))OR(((0.7048124386438528)-(NULL)))))AND(UNLIKELY(-6.64494695E8))))AND(((((((((x'')AND('-656445947')))AND(-6.56445947E8)))AND('')))OR(0.8392696552856646)))))AND(UPPER(DISTINCT '1073260010')))) GROUP BY ((((((((NULL)AND(((rt1.c0) BETWEEN (t0.c19) AND (rt0.c1)))))AND(((t0.c45) BETWEEN (rt1.c0) AND (rt1.c0)))))AND((- (rt0.c4)))))OR(rt0.c1 COLLATE NOCASE));SELECT ALL LIKELIHOOD((- (t0.c45)), 0.09517567710880204) FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))>>((NOT (rt1.c1)))) ASC  NULLS FIRST, vt0.c0;SELECT DISTINCT x'' FROM rt0, rt1 CROSS JOIN t0 ON (((rt0.c4 IN ()))|(rt0.c2 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT 0.18155907281452432 FROM t0, vt0 WHERE (LIKELIHOOD(DISTINCT (x'6d30' IN ()), 0.672799973101873)); -- 0ms;
SELECT ALL (((((((((rt0.c4)OR(rt0.c4)))OR(t0.c2)))OR(rt0.c3)))AND(rt0.c0)) IN ()) FROM rt1, rt0 WHERE ((NULL COLLATE NOCASE IN (((((0X404aae40)AND('')))AND('-636169071'))))); -- 0ms;
SELECT ALL NTILE((((~ (t0.c2))) ISNULL)) OVER () FROM rt1, t0, vt0, rt0 WHERE (((((0.5407868828239472) NOTNULL))*((('0.9449656093075428')<<(x'8498'))))); -- 0ms;
SELECT rt0.c3 COLLATE NOCASE FROM rt0, rt1 WHERE ((+ (x'')) COLLATE BINARY) GROUP BY CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC) ORDER BY (+ (((((rt0.c0)OR(rt0.c1)))OR(rt1.c1))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT '-1577938319' FROM rt1, rt0 WHERE (((((NULL)IS NOT(''))) NOT BETWEEN (((0x1001cd47)IS(-6.36169071E8))) AND ((('E	r/H''')<<(0.887089163632605))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((((rt0.c0)OR(t0.c1)))AND(t0.c0)))*(((t0.c45)IS(t0.c19))))) OVER () FROM rt0, vt0, t0; -- 1ms;
SELECT ALL ((((((t0.c45)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))))<=((((t0.c0) NOT NULL)))) FROM vt0;SELECT ALL (t0.c1 COLLATE RTRIM IN ()) FROM vt0, t0, rt1; -- 0ms;
SELECT 0.45720615462427083, TRIM(AVG(x''), ((rt1.c1) NOT BETWEEN (rt0.c4) AND (t0.c2))), CASE WHEN NULL THEN rt0.c2 COLLATE NOCASE WHEN ((t0.c45)<<(t0.c45)) THEN (t0.c1 IN (rt0.c1, t0.c2)) WHEN rt1.c0 COLLATE RTRIM THEN CAST(rt0.c0 AS REAL) END FROM rt1, t0, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((t0.c19)IS(rt1.c2)))OR(t0.c0 COLLATE NOCASE)))OR((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c19))))), (+ (((((t0.c19)AND(t0.c19)))AND(rt0.c0)))), NTH_VALUE((((t0.c19, t0.c45, t0.c45)) NOT BETWEEN (((t0.c2 IN (t0.c0)), x'', (t0.c0 IN ()))) AND ((((((t0.c0)OR(NULL)))OR(t0.c19)), ((t0.c19) NOTNULL), ((((((((t0.c1)OR('-1117419631')))AND(t0.c0)))AND(t0.c1)))AND(t0.c2))))), (((('-636169071') IS FALSE)) NOT BETWEEN ((t0.c0 IN ())) AND ((t0.c2 IN ())))) OVER () FROM t0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(0.18155907281452432) THEN 0.02017918897919113 ELSE (- ('12鶙')) END);SELECT ALL ((~ (rt0.c0)) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (0.5257863826520144) AND (rt0.c2))) ISNULL) FROM rt0, rt1, t0 WHERE ((+ (((x'')<>(x''))))) EXCEPT SELECT ALL ((rt1.c2)>(load_extension(rt1.c2, rt0.c0))) FROM t0 WHERE ((((((0.3469796950303362)GLOB(x''))))==((0x2237335d))));SELECT ALL (('')>>(((rt0.c0)IS NOT(rt0.c0)))) FROM rt1, rt0, t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c45) NOT BETWEEN (rt1.c2) AND (rt1.c2)))AND(((rt0.c0) BETWEEN (t0.c1) AND (rt1.c0)))))OR(((((((((rt0.c0)AND(t0.c19)))AND(t0.c19)))OR(t0.c19)))OR(rt0.c1)))))AND(CASE WHEN t0.c19 THEN rt0.c2 ELSE rt0.c0 END)))AND(((t0.c1)+(t0.c1)))) FROM rt1, t0, vt0 WHERE (((((NULL) NOT BETWEEN ('') AND (x''))) IS TRUE));SELECT ALL FIRST_VALUE(CAST(((((t0.c1)OR(t0.c19)))OR(vt0.c0)) AS TEXT)) OVER () FROM rt1, rt0, vt0, t0; -- 0ms;
SELECT vt0.c0 FROM vt0, t0, rt0, rt1 WHERE (((LOWER(DISTINCT 0.05039504075721857))+(CASE 0.6342415387635274  WHEN x'' THEN 0xffffffffd9fada8f END))); -- 0ms;
SELECT ALL AVG((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((t0.c1)))) OVER () FROM vt0 LIMIT 1474799700 OFFSET 685788188;SELECT ALL (t0.c1 IN (61591928)) COLLATE NOCASE, SUM(5.74042973E8 COLLATE BINARY), '1078636096' FROM vt0, t0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)/(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN -1079858709 WHEN rt0.c3 THEN t0.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c0 END) AND ((- (t0.c19)))), ((((COUNT(*))AND(((x'') NOTNULL))))OR(rt0.c2)), MIN(GROUP_CONCAT((t0.c2 IN (rt1.c1, rt0.c1)))) FROM t0, rt0 WHERE (((0.6819426250365324)<>(0.2605304137830524)) COLLATE NOCASE);SELECT DISTINCT ((((rt0.c4) NOT BETWEEN (t0.c19) AND (rt0.c1))) BETWEEN (TRIM(DISTINCT x'')) AND (((((t0.c0)AND(t0.c1)))AND(rt1.c2)))) FROM vt0, t0, rt0, rt1 GROUP BY x''; -- 0ms;
SELECT DISTINCT AVG(x'a9a0728e') OVER () FROM rt1; -- 0ms;
SELECT CAST(GROUP_CONCAT(rt1.c0) AS INTEGER) FROM rt0, rt1, t0, vt0 WHERE (CASE (('-870063050')-(0.3284411248718042))  WHEN CASE WHEN 0.8799506839821856 THEN 0.15922692077028544 ELSE '-656445947' END THEN (('f9^wKO+*')&('-870063050')) END); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c1) BETWEEN (t0.c19) AND (rt0.c2)) THEN CASE t0.c19  WHEN rt0.c1 THEN NULL ELSE '' END END FROM rt0;SELECT DISTINCT ((((((((rt0.c1)OR(rt1.c2)))OR(rt1.c0)))OR(((rt0.c2)GLOB(rt1.c2)))))OR(TOTAL(vt0.c0))), '-2086379031', (((rt0.c2) NOT NULL) IN ()) FROM t0, rt0, vt0 LIMIT 1019549460;SELECT ALL ((0.4030159150713484)||(((rt1.c2) BETWEEN (NULL) AND (t0.c1)))) FROM rt0, rt1;SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY (((((((('-870063050')AND(t0.c2)))AND(rt0.c3)))OR((rt0.c0 IN (vt0.c0, rt0.c1)))))OR(LIKELY(DISTINCT rt0.c3)))  NULLS LAST) FROM vt0, rt1 INDEXED BY i40;SELECT ALL (CASE rt1.c0  WHEN 0.6737626575203199 THEN rt0.c2 END IN ()) FROM rt0, t0, vt0 WHERE (((0.5433659792348422 IN ()) IN ())); -- 1ms;
SELECT ALL TYPEOF(DISTINCT ((rt0.c1) ISNULL)) FROM vt0, t0, rt1, rt0; -- 0ms;
SELECT CUME_DIST() OVER (), CAST(rt0.c3 COLLATE BINARY AS INTEGER), (((rt1.c1 IN (t0.c1))) ISNULL), ((((rt1.c0)IS NOT(t0.c1)))<<((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))), COUNT(*) FROM rt0 LIMIT -673199975 OFFSET -664494695;SELECT DISTINCT x'85c7' FROM rt1; -- 0ms;
SELECT DISTINCT TOTAL(IFNULL(DISTINCT rt0.c3, t0.c19)) OVER () FROM t0 WHERE (((((0.3720725770644857) NOT NULL))AND(CASE WHEN '23775111' THEN '1716137103' ELSE x'' END))) ORDER BY rt0.c1;SELECT ALL TOTAL(CASE WHEN t0.c0 THEN rt1.c0 ELSE t0.c2 END) OVER (), ((((t0.c2)OR(rt0.c1)))OR(rt0.c3)) COLLATE BINARY, vt0.c0 FROM rt1, t0 WHERE (((x'' IN ()) IN ()));SELECT (~ (TOTAL(rt0.c1))) FROM t0, vt0 INDEXED BY i40 WHERE ((((('-490957351') NOTNULL))<>((('595782175')>=(NULL)))));SELECT (((t0.c0)) BETWEEN ((((t0.c19) IS TRUE))) AND ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))))) FROM t0, rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(COUNT(rt1.c0) AS BLOB) FROM rt0, vt0, rt1, t0 WHERE ((- (((NULL) NOTNULL)))) ORDER BY (((rt0.c4)) BETWEEN (((+ (t0.c0)))) AND ((((rt0.c3) NOT BETWEEN (t0.c1) AND ('sGS!gLn'))))) ASC; -- 0ms;
SELECT DISTINCT CAST((((-1215205064)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) AS REAL), CAST(COUNT(rt0.c2) AS REAL), SUM(((((rt1.c0)OR(rt0.c1)))AND(rt0.c0))) FROM vt0, rt0 WHERE ((CAST(NULL AS BLOB) IN (CASE WHEN -1707365315 THEN NULL ELSE x'6d87275d' END))) GROUP BY (((- ('-1401294930'))) BETWEEN (((vt0.c0) NOTNULL)) AND ((rt1.c2 IN (rt0.c1)))) ORDER BY UPPER((((t0.c1))!=((vt0.c0)))) ASC  NULLS FIRST, CAST(((t0.c19) BETWEEN (rt0.c1) AND (rt1.c0)) AS BLOB), (((rt0.c2 IN ())) NOT BETWEEN (((((rt1.c0)OR(1019549460)))OR(t0.c0))) AND ((t0.c0 IN ())))  NULLS LAST;SELECT DISTINCT NULL COLLATE RTRIM, (((((((((((((NULL IN (t0.c0)))AND(((t0.c1)&(vt0.c0)))))AND(((NULL) IS TRUE))))AND(CASE t0.c45  WHEN t0.c1 THEN t0.c19 END)))AND(((rt0.c2)+(0xffffffffda14d491)))))AND(CAST(rt0.c0 AS BLOB))))OR(((((t0.c1)OR(rt0.c1)))AND(rt0.c0)))), (TOTAL(t0.c2) IN ((+ (rt0.c1)))) FROM t0, rt0, rt1 WHERE ((((NOT (-6.7274056E8))) NOT BETWEEN ('496419142') AND (0.33433338716822514)));SELECT -1.103867718E9 FROM rt1, rt0, t0, vt0 WHERE (SQLITE_VERSION()) UNION SELECT DISTINCT (rt0.c0 IN ()) FROM rt1, rt0, t0 WHERE (((('226289480') IS TRUE) IN (CASE WHEN '496419142' THEN 0.7559148795937104 WHEN x'8c16' THEN NULL WHEN 'V' THEN NULL END))); -- 0ms;
SELECT ALL x'' FROM rt1; -- 0ms;
SELECT ((CASE rt1.c1  WHEN t0.c2 THEN rt0.c3 END)<>(TRIM(DISTINCT rt0.c4, rt0.c2))) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT NTILE(((vt0.c0)>(rt0.c2)) COLLATE BINARY) OVER (), COUNT(CASE rt0.c3  WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt1.c0 ELSE t0.c0 END) FILTER(WHERE rt1.c0) OVER (), (((1998003085 IN (t0.c1, t0.c19))) NOTNULL) FROM rt0, vt0, t0, rt1; -- 0ms;
SELECT TRIM(ABS(DISTINCT rt0.c0), (rt1.c1 IN ())) FROM rt1, vt0, rt0 INDEXED BY i40;SELECT DISTINCT ((((((t0.c19) NOTNULL))OR(((rt0.c0)||(rt0.c3)))))AND(HEX(t0.c45))) FROM vt0, rt0, t0, rt1 WHERE (CASE (((x'2f201b88')) BETWEEN ((x'')) AND (('N8Nk\')))  WHEN ((x'')-(NULL)) THEN ((0.7104772233528416) NOT BETWEEN ('Q6') AND (NULL)) ELSE CASE '-1336296529'  WHEN 0.6990952370148625 THEN 0.6431529679336241 ELSE x'' END END); -- 0ms;
SELECT DISTINCT NTH_VALUE(CAST(((rt0.c3)OR(vt0.c0)) AS NUMERIC), TRIM(vt0.c0 COLLATE RTRIM, CAST(t0.c19 AS INTEGER))) OVER ( ORDER BY (((t0.c0)) BETWEEN ((((rt0.c1)||(t0.c0)))) AND ((UPPER(DISTINCT rt0.c1)))) DESC, rt0.c1 DESC  NULLS LAST) FROM rt1, rt0, vt0, t0; -- 0ms;
SELECT DISTINCT ABS(DISTINCT TOTAL(rt0.c4)) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT 0.15993859226879548 FROM rt1 WHERE (((((1.01954946E9)IS(-1235692202)))<<((0.5433659792348422 IN ())))); -- 0ms;
SELECT DISTINCT NULL FROM rt0, rt1, vt0, t0 WHERE ((~ (((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT (((rt1.c0)|(rt1.c1)) IN ()), ((((('N6cQ	Aq~W')) NOT BETWEEN ((rt1.c1)) AND ((t0.c19)))) NOT NULL), (((~ (t0.c0))) IS TRUE), IFNULL(DISTINCT (- (rt0.c2)), CASE WHEN t0.c0 THEN rt0.c4 ELSE rt0.c2 END), (((CAST('f9^wko+*' AS NUMERIC)))<>((CAST(t0.c2 AS INTEGER)))) FROM rt1, vt0, t0 WHERE ((+ ('9J4' COLLATE BINARY))) GROUP BY TRIM((t0.c45 IN ()));SELECT DISTINCT (t0.c0 IN ()) COLLATE NOCASE FROM rt0, t0, rt1 WHERE (CASE WHEN 0.9700580488878312 COLLATE BINARY THEN (('250887140') ISNULL) WHEN CAST('-1702930963' AS INTEGER) THEN (NOT (NULL)) WHEN ((-2.086379031E9)+(0.15993859226879548)) THEN LIKELIHOOD(DISTINCT 've', 0.7755273516400522) END) LIMIT 250887140 OFFSET 1073260010; -- 0ms;
SELECT CAST(((t0.c45)&(rt0.c3)) AS INTEGER) FROM t0, vt0 INNER JOIN rt1 ON t0.c2 INNER JOIN rt0 ON rt0.c4; -- 7ms;
SELECT ((rt0.c3) NOT NULL) COLLATE BINARY, t0.c1, (+ (((rt1.c2)||(rt0.c2)))) FROM t0 WHERE ((NOT (((((467511583)AND(0.8008102599167827)))OR('z9')))));SELECT DISTINCT (((t0.c2) BETWEEN (vt0.c0) AND (rt1.c0)) IN (t0.c45 COLLATE BINARY)) FROM rt0 ORDER BY ((((((((LIKELY(DISTINCT '-2086379031'))AND(rt1.c0)))AND(rt1.c2 COLLATE NOCASE)))OR(t0.c2 COLLATE NOCASE)))AND((((t0.c45))>=(('')))));SELECT ALL ((((rt0.c1 COLLATE BINARY)AND(((((((((x'')OR(t0.c19)))OR(rt0.c4)))OR(t0.c2)))OR(rt1.c0)))))AND(CASE WHEN t0.c19 THEN rt0.c2 ELSE rt0.c4 END)), ((((((t0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1)))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)))))AND((((t0.c1, rt1.c0, rt1.c2, vt0.c0, rt1.c1)) BETWEEN ((rt0.c1, rt0.c4, t0.c0, rt0.c1, rt1.c2)) AND ((rt1.c0, rt0.c1, rt1.c0, rt1.c0, t0.c19))))), (((t0.c0)!=(rt0.c2)) IN ()) FROM rt0 WHERE ((((((('-1181749109') IS FALSE))OR(UNLIKELY(DISTINCT x''))))AND(((NULL)>(0.7541132896739244))))) GROUP BY (((NULL)) NOT BETWEEN ((t0.c19)) AND (((+ (t0.c45))))), CASE 0.3720725770644857  WHEN (t0.c1 IN (rt0.c0)) THEN ((rt1.c2)<(rt0.c4)) ELSE CAST(rt1.c0 AS NUMERIC) END, rt0.c1 HAVING CASE TRIM(DISTINCT t0.c19)  WHEN json_valid(rt0.c2) THEN ((rt0.c0)<(vt0.c0)) WHEN ((t0.c0)GLOB(rt0.c3)) THEN ((t0.c1) IS TRUE) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((x''))) THEN ((vt0.c0)%(t0.c19)) ELSE (rt0.c3 IN (vt0.c0)) END;SELECT ((HEX(DISTINCT '-86624531')) IS TRUE) FROM rt0, t0, vt0, rt1 WHERE (((CASE WHEN '111265798' THEN NULL ELSE 0.37644598527657414 END) NOTNULL)) ORDER BY (('') NOT BETWEEN (CASE t0.c1  WHEN rt1.c2 THEN '涜q{}lXE抟&' ELSE rt1.c2 END) AND (((rt0.c1)&(t0.c0)))), ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3 COLLATE BINARY)))AND(t0.c45)), ((t0.c19)IS NOT(rt0.c3)) COLLATE BINARY DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((t0.c0) NOTNULL) COLLATE BINARY FROM rt1, rt0, t0, vt0 WHERE ((((0.7048124386438528))>=((0.9449656093075428 COLLATE NOCASE)))) ORDER BY (((((t0.c45)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0))))LIKE(((((vt0.c0)OR(rt0.c4)))AND(t0.c45)))) DESC  NULLS FIRST; -- 0ms;
SELECT rt0.c1 FROM rt1, rt0 WHERE (CAST(((x'')OR(x'')) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((rt1.c0)) BETWEEN ((((((rt0.c2)OR(0.5176353545441525)))OR(rt1.c1)))) AND ((MIN(t0.c19, 685788188, rt1.c2, t0.c45)))) FROM rt0, vt0, rt1, t0 WHERE (((CASE WHEN '0.05039504075721857' THEN 0.6990952370148625 WHEN '0.4030159150713484' THEN x'b4b1' WHEN '-1e500' THEN x'dabe' ELSE NULL END) NOT NULL)); -- 0ms;
SELECT DISTINCT CASE (((rt1.c2, rt0.c3, rt0.c3)) BETWEEN ((t0.c0, 1274229810, rt0.c1)) AND ((rt0.c2, rt1.c2, vt0.c0)))  WHEN COUNT(*) THEN ((t0.c1) NOTNULL) ELSE ((((t0.c2)AND(t0.c19)))OR(rt0.c4)) END, (((((~ (vt0.c0)))AND(SUM(rt0.c4))))AND(0X70054a2)), ((DATE(0.887089163632605, rt0.c4, t0.c0))IS NOT(((rt0.c3)>=(t0.c2)))) FROM rt1, t0;SELECT ALL json_object(t0.c19 COLLATE RTRIM, t0.c19) FROM t0, rt1, vt0, rt0 WHERE (((((NULL)*('-2020272993'))) NOT NULL)); -- 0ms;
SELECT ALL (~ ('-870063050')), ((((rt0.c1) IS TRUE))+(((rt0.c2) IS FALSE))), CHANGES() FROM rt1, t0;SELECT ALL ((((((t0.c1)AND(rt1.c1)))OR(rt0.c2)))IS NOT((+ (rt0.c2)))), ((CASE WHEN t0.c19 THEN rt1.c1 END)AND(CASE rt1.c0  WHEN t0.c1 THEN t0.c1 END)), SUM(CASE rt0.c2  WHEN rt0.c2 THEN t0.c19 WHEN rt0.c3 THEN rt1.c2 WHEN rt0.c1 THEN t0.c2 END) FROM vt0, rt0;SELECT DISTINCT t0.c19 FROM rt1, t0, vt0, rt0 WHERE ((((((('0.6281603267311003')IS NOT('61591928')))AND(COALESCE(-1418270096, '-295333722'))))AND(((((((((NULL)AND(x'')))OR(NULL)))AND(NULL)))AND('lHHn'))))) GROUP BY json_valid(HEX(rt1.c2)) HAVING TRIM(rt0.c2) COLLATE BINARY ORDER BY LIKELY(DISTINCT ((t0.c19)>(rt1.c2))) ASC, CAST(((((rt0.c1)OR(rt1.c0)))OR(t0.c1)) AS NUMERIC)  NULLS LAST, (((CASE t0.c0  WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN 'u^h湈-' THEN t0.c19 END))<((NULL))) ASC; -- 0ms;
SELECT 0.32877148374287624, load_extension(((rt0.c2)>>(t0.c0))), CAST(CASE WHEN t0.c1 THEN t0.c2 END AS BLOB) FROM t0, rt0, vt0; -- 0ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE RTRIM FROM rt0 INDEXED BY i40, rt1 WHERE (((CASE WHEN 0.9912074125645113 THEN x'' END) IS FALSE));SELECT DISTINCT x'' FROM vt0, rt1 WHERE (0.6544718632368365); -- 0ms;
SELECT DISTINCT ((((rt0.c1)-(rt0.c0))) BETWEEN (NULL) AND (IFNULL(DISTINCT t0.c19, rt0.c3))) FROM rt1, rt0;SELECT DISTINCT (((((rt0.c0) NOT NULL)))<((CAST(rt0.c1 AS REAL)))), ((rt0.c1) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (rt1.c2 COLLATE BINARY)), (CASE t0.c1  WHEN NULL THEN t0.c45 WHEN rt1.c2 THEN t0.c19 WHEN t0.c0 THEN t0.c45 END IN ()) FROM rt0, rt1, vt0; -- 0ms;
SELECT NULL COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT ALL (((t0.c45)<(t0.c2)) IN (CASE WHEN 'c{' THEN '-1889159589' END, (((rt0.c0))>((rt0.c3))))), ((CASE WHEN rt1.c0 THEN rt0.c3 END) BETWEEN ((rt0.c3 IN (t0.c1))) AND (((t0.c2)AND(x'02a6')))), (~ (((((((((((((rt0.c2)OR(rt0.c4)))AND(rt1.c2)))AND(0.3192601922959133)))OR(rt0.c2)))OR(t0.c2)))OR(NULL)))) FROM rt1, t0, rt0, vt0 WHERE ((((((('278955233')OR('')))OR(x'bfc3'))) IS TRUE)); -- 1ms;
SELECT ALL (rt1.c0 IN (t0.c2)) COLLATE BINARY FROM rt1, vt0, rt0 WHERE (CASE '#'  WHEN (+ (NULL)) THEN (('-697212936')||(NULL)) END) ORDER BY '';SELECT t0.c2, ((CAST(rt1.c0 AS NUMERIC)) BETWEEN ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1)))) AND ((((rt0.c1))>=((t0.c0))))), COUNT(((t0.c0) NOT BETWEEN (t0.c1) AND (x''))) OVER () FROM vt0, rt0;SELECT DISTINCT x'' FROM rt1 WHERE (HEX(CAST(x'' AS REAL))); -- 0ms;
SELECT (((rt0.c4, t0.c45, rt0.c3, rt0.c2, rt1.c0)) NOT BETWEEN ((((t0.c45) IS FALSE), ((rt1.c1)|(rt0.c3)), CAST(t0.c1 AS BLOB), CASE t0.c19  WHEN rt0.c4 THEN rt1.c0 WHEN '1341606653' THEN rt0.c3 WHEN rt1.c2 THEN rt1.c1 END, COUNT(*))) AND (((+ (t0.c45)), CASE x''  WHEN rt1.c2 THEN t0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN t0.c0 WHEN 0Xfffffffffc248164 THEN t0.c19 WHEN t0.c19 THEN rt0.c0 ELSE rt0.c1 END, ((t0.c2)<<(0.20634410640768974)), ((rt0.c4) NOTNULL), ((t0.c45) NOT BETWEEN (t0.c2) AND (rt0.c2))))) FROM vt0, rt1, t0 UNION SELECT DISTINCT 0.9047887711222399 FROM vt0;SELECT AVG((NOT (t0.c19))) FROM rt0, t0, rt1, vt0 WHERE (ABS(NULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c0))>(CAST(rt1.c2 AS INTEGER))), NTILE((((((((rt0.c1)AND(rt0.c2)))OR(rt1.c2))))==((((-1.707365315E9)+(rt0.c4)))))) OVER (), NULL FROM rt1, rt0 WHERE (UPPER((((0.9449656093075428)) BETWEEN (('-64716444')) AND ((NULL)))));SELECT DISTINCT ((x'' COLLATE RTRIM) IS FALSE) FROM vt0; -- 0ms;
SELECT ((((((t0.c0)OR(rt0.c1)))AND(t0.c19)))OR(((rt0.c2) NOTNULL))) FROM t0 WHERE (CASE WHEN ((NULL)GLOB(0.9688416835817069)) THEN COALESCE(DISTINCT 0.7824951652791708, '-1021931672') END);SELECT (((((vt0.c0))>((NULL))))<(CASE vt0.c0  WHEN t0.c1 THEN rt0.c1 WHEN t0.c2 THEN vt0.c0 WHEN t0.c19 THEN t0.c1 END)) FROM vt0;SELECT ALL TRIM(DISTINCT ((((rt1.c0)OR(t0.c45)))OR(rt0.c3))) FROM rt1 INDEXED BY i40 WHERE ((((CASE x''  WHEN NULL THEN NULL END))<=((CASE WHEN '^i' THEN x'' WHEN NULL THEN x'' WHEN x'' THEN '574042973' END))));SELECT DISTINCT vt0.c0, ((t0.c1)||((NOT (rt1.c0)))), COALESCE(((((((((t0.c19)AND(rt1.c2)))OR('1851007607')))OR(t0.c19)))OR(t0.c19)), ((t0.c2) BETWEEN (rt1.c2) AND (rt1.c1)), LIKELIHOOD(t0.c2, 0.6908187394808087), ((rt0.c4)LIKE(rt1.c1))) FROM vt0, rt0 INNER JOIN rt1 ON ((t0.c2 COLLATE NOCASE) ISNULL) WHERE ((((((('752295924')) BETWEEN (('0.4174942573884004')) AND ((NULL))), NULL, (0.3546926317656671 IN ()), 0.7849178294019602 COLLATE BINARY, (((0.37644598527657414, NULL, '-1215205064'))<=(('1078636096', x'', '')))))!=((DATETIME(0.35224379015210516, -1.235692202E9, x'c487', 0.6670985438106447, ''), (((1998003085)) BETWEEN ((1265417084)) AND (('12鶙'))), '-1765859283' COLLATE RTRIM, '1917726041', ((0.887089163632605)|(NULL))))));SELECT DISTINCT LOWER(DISTINCT COUNT(t0.c1)), CASE (((rt0.c0))<((x'')))  WHEN '836788895' THEN '-1079858709' WHEN (((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN rt0.c0 WHEN ((((rt1.c0)AND(rt0.c1)))AND(t0.c1)) THEN SUM(t0.c1) ELSE (+ (rt0.c2)) END, (((((0.22836342814583244) IS TRUE)))<((CAST('348860413' AS INTEGER)))) FROM rt1, rt0;SELECT ((((rt1.c1)<(vt0.c0)))<(UNLIKELY(rt1.c1))) FROM rt1, vt0, rt0, t0 WHERE (((((x'') NOT NULL))||(((x'') NOT NULL)))); -- 0ms;
SELECT ALL json(((t0.c2)%(rt0.c1))) FROM t0, vt0, rt0 WHERE ((((((x'') NOT NULL), CASE WHEN 0.9271999361562128 THEN x'' WHEN 0.16073932182492368 THEN '-1079858709' WHEN 0.7018258074912695 THEN 0.35095540755744115 END, UPPER('752295924')))<>((STRFTIME(1019549460, NULL, NULL, '', '1319059863'), (- (0.5620394968229167)), -2.95333722E8)))); -- 1ms;
SELECT DISTINCT ((NULL)<=(rt0.c3)) COLLATE RTRIM FROM t0, rt0, rt1; -- 0ms;
SELECT CAST(((vt0.c0)AND(t0.c19)) AS NUMERIC) FROM vt0, rt1, rt0, t0 WHERE (((((((('', '-1362156088', 0.47703186256634966)) NOT BETWEEN ((0.5970885075839204, x'', '')) AND ((NULL, NULL, x'4c86'))))OR(CASE '-1702930963'  WHEN x'' THEN 0x1001cd47 END)))AND((('0.6819426250365324')!=(x'8697'))))); -- 0ms;
SELECT x'' FROM vt0, t0, rt0, rt1 WHERE ((((((((((((((((NULL))>=((NULL))))AND(((((0.4030159150713484)AND(NULL)))AND('-1079858709')))))OR((('') BETWEEN (NULL) AND (x'6e6f')))))OR((((292581830, -1489245452, NULL))!=(('z9', x'', NULL))))))AND(CAST(NULL AS NUMERIC))))OR(((0.7849178294019602) ISNULL))))AND(CASE 0.7531533054912639  WHEN x'' THEN '-1856047915' END))) ORDER BY NULLIF(DISTINCT (((NULL))<=((t0.c0))), ((((rt0.c0)AND(t0.c2)))OR(rt0.c4)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT 0.5407868828239472, ((rt1.c1) NOT NULL)), ((((rt0.c3) BETWEEN (rt0.c1) AND (t0.c1))) BETWEEN (((((((((rt0.c1)AND(rt0.c0)))OR(rt1.c1)))AND(rt1.c0)))AND(vt0.c0))) AND (COUNT(rt1.c0))), (((GROUP_CONCAT(rt0.c0)))>=(((+ (rt0.c0))))), ((((((t0.c2)OR(t0.c45)))AND(rt0.c1)))%(((((((((((((rt1.c0)AND(t0.c19)))OR(rt0.c0)))OR(t0.c19)))OR(rt1.c0)))OR(t0.c2)))OR(rt1.c2)))), rt1.c0 FROM t0, rt1, rt0, vt0 WHERE (NULL); -- 0ms;
SELECT ((((vt0.c0)==(rt0.c0))) NOT BETWEEN (vt0.c0) AND ((rt0.c2 IN ()))) FROM t0, vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT COUNT(IFNULL(rt1.c2, t0.c1)) FROM vt0 LIMIT 876024615 OFFSET 398743455;SELECT ALL ((((t0.c19)AND(((t0.c19) NOT BETWEEN (t0.c45) AND (vt0.c0)))))AND((((rt1.c2))>=((rt0.c1))))) FROM rt1, vt0, t0 WHERE ((NULL IN ())) LIMIT -959364524 OFFSET 23775111;SELECT DISTINCT ((((((((((((((vt0.c0) NOT NULL))AND(t0.c2)))AND(CAST(vt0.c0 AS TEXT))))AND(((rt0.c4)<<(t0.c0)))))AND(CASE rt1.c0  WHEN rt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c1 END)))AND(COUNT(*))))OR((~ (t0.c45)))) FROM t0 WHERE (x'') GROUP BY ((((rt1.c0 COLLATE BINARY)AND(rt1.c2)))AND(((rt1.c1) NOT NULL))), 0.14492180078855377, (NOT (((NULL) NOT NULL))) HAVING ((((((((0xffffffffe00ef181)AND(NULL)))AND('')))AND(t0.c45)))OR(((t0.c45)||('-697212936')))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((x''))))*(((rt0.c1) IS FALSE)))  NULLS LAST, ((((((((((t0.c1)AND(t0.c19)))OR(rt0.c3)))AND(rt1.c1)))OR(0.4030159150713484))) IS FALSE);SELECT ALL MIN(CAST(rt0.c4 AS BLOB), '6' COLLATE NOCASE) FROM rt0, vt0, t0 WHERE ((((('645543240') IS TRUE)) NOT NULL)); -- 0ms;
SELECT rt1.c1, LAG((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))), CAST(((vt0.c0) NOT NULL) AS TEXT), ((vt0.c0)/(vt0.c0)) COLLATE RTRIM) OVER (), ((((rt0.c1)GLOB(rt0.c0)))&(((((((((rt1.c2)AND(rt1.c0)))AND(t0.c2)))AND(t0.c19)))AND(rt1.c1)))) FROM vt0 ORDER BY ((((rt0.c1)+(rt1.c0))) BETWEEN (((rt0.c3)>=(rt0.c2))) AND (0.8710946448112049)), (~ (UNLIKELY(DISTINCT t0.c45))) DESC;SELECT ALL ((((t0.c0)>>(rt0.c4)))GLOB(((rt1.c1) IS FALSE))) FROM rt0, vt0, t0 WHERE (((-1.103867718E9) NOT BETWEEN (((x'')||(0.5893354015842351))) AND ((('-655739999')|('-1702930963'))))) LIMIT -11261988 OFFSET 687395304;SELECT DISTINCT ((((rt0.c0) ISNULL))+(((vt0.c0) NOTNULL))) FROM rt0, vt0, rt1, t0 WHERE ((((('v') BETWEEN (225343056) AND (0.35095540755744115))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((t0.c2)OR((rt1.c1 IN ()))))OR(CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt1.c1 END)), (((- (t0.c0))) NOTNULL), LEAD((((('DO') BETWEEN (vt0.c0) AND (rt0.c0)))OR(rt0.c0 COLLATE NOCASE)), IFNULL(STRFTIME(rt0.c2, rt1.c0, rt1.c1), CASE rt0.c4  WHEN rt0.c0 THEN vt0.c0 END), rt1.c1 COLLATE NOCASE) OVER () FROM rt1, vt0, rt0 WHERE ((((((NULL, x'', '-64716444'))=((x'', NULL, '250887140')))) BETWEEN ((('') BETWEEN (NULL) AND (0.9380578375888224))) AND (((((x'')OR(1632314445)))AND('')))));SELECT x'', ((((rt1.c0)IS NOT(rt0.c1)))IS NOT((- (t0.c2)))), ((MIN(t0.c2))OR(((rt1.c0)=(rt0.c4)))) FROM t0, rt1, vt0 WHERE (((+ ('')) IN ((((('pQ6*5}V')AND(0Xffffffffdd543d3b)))OR(x'')))));SELECT -1053010141 FROM rt0 WHERE (((0.8540722670899575)&(0.8008102599167827)) COLLATE BINARY) ORDER BY ((0.6658648895913295) IS FALSE)  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2)AND(rt1.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c19)))*(rt0.c2)) FROM rt0, rt1, t0, vt0; -- 0ms;
SELECT ALL FIRST_VALUE(TRIM(DISTINCT CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END)) OVER () FROM rt1, vt0 WHERE (((((NULL)-('836788895'))) BETWEEN (((0x30e75d65)<<(''))) AND (CAST(0.8139403329585454 AS BLOB)))); -- 0ms;
SELECT DISTINCT INSTR(rt0.c2, (((t0.c2))<((rt1.c0)))) FROM rt0, vt0;SELECT DISTINCT MIN(HEX(t0.c19)) FROM rt0, rt1, t0 WHERE (((('')AND('0.5176353545441525')) IN ())); -- 0ms;
SELECT ALL NULL FROM rt1 WHERE (NULL) GROUP BY '-1281746728' LIMIT -1103867718; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c0) IS FALSE))OR(((rt0.c0) BETWEEN (rt1.c0) AND (vt0.c0)))))OR(CAST('溰W' AS REAL))))AND(((t0.c19) NOT BETWEEN (rt1.c1) AND (rt0.c4)))))OR(((rt0.c0) NOT BETWEEN (rt1.c1) AND (t0.c0)))) FROM vt0, t0 WHERE (NULL) ORDER BY (CASE vt0.c0  WHEN rt1.c1 THEN t0.c45 WHEN rt0.c2 THEN rt0.c0 WHEN '-636169071' THEN t0.c45 WHEN t0.c19 THEN t0.c2 WHEN rt0.c0 THEN t0.c45 ELSE t0.c2 END IN ()) ASC  NULLS FIRST, ((rt1.c0 COLLATE RTRIM)>(((t0.c2)!=(t0.c45))))  NULLS LAST;SELECT DISTINCT (((rt1.c1)) NOT BETWEEN (((+ (t0.c19)))) AND (((rt1.c1 IN (t0.c2))))), (MAX(rt0.c3) IN ()), ((MIN(rt0.c2)) IS TRUE) FROM t0, vt0, rt1;SELECT DISTINCT (((rt0.c4)>=(rt0.c4)) IN ()) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT vt0.c0, rt0.c1, x'6dd3ca7d' FROM rt0, vt0, rt1, t0 WHERE (((('3e') NOT NULL) IN ())) ORDER BY CASE t0.c0  WHEN (((vt0.c0, rt0.c0, rt0.c0))>((rt0.c3, vt0.c0, rt1.c1))) THEN (('1474799700') NOT BETWEEN (vt0.c0) AND (rt1.c2)) WHEN ((rt1.c1) NOTNULL) THEN ((rt1.c1) BETWEEN (t0.c19) AND (rt1.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((t0.c1) NOT BETWEEN (t0.c19) AND (t0.c2)) END ASC  NULLS LAST; -- 0ms;
SELECT (NOT ((((t0.c45))>((rt0.c2))))) FROM rt0, rt1, t0, vt0; -- 1ms;
SELECT DISTINCT CAST(((rt0.c4) NOT BETWEEN (t0.c2) AND (rt0.c4)) AS TEXT), ((CASE t0.c0  WHEN rt1.c2 THEN NULL WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN 981200233 ELSE t0.c2 END) IS FALSE), NTH_VALUE(rt0.c3, 268553543) OVER () FROM rt1, rt0, vt0 WHERE (((((('1571659722')OR('')))OR(1.17462178E8)) IN ()));SELECT DISTINCT MAX((((t0.c19)) BETWEEN ((t0.c1)) AND ((t0.c19)))) FROM rt0, vt0, rt1 WHERE (((HEX(x''))LIKE((('9j4')GLOB('687395304'))))) ORDER BY ((CASE t0.c19  WHEN rt1.c1 THEN vt0.c0 ELSE rt0.c2 END) NOT BETWEEN (((0.19562783372896952)>>(rt1.c2))) AND (UNLIKELY(rt1.c2)))  NULLS LAST;SELECT ALL TOTAL((NOT (rt1.c1))) OVER (), (((rt0.c3))!=((rt0.c0))) COLLATE BINARY, x'' FROM rt0, rt1, t0 LIMIT -295333722; -- 0ms;
SELECT (((((t0.c0))<((t0.c2)))) IS FALSE) FROM rt1 GROUP BY CAST(rt0.c1 AS INTEGER) COLLATE BINARY HAVING (((vt0.c0, rt1.c1, t0.c1)) NOT BETWEEN ((GROUP_CONCAT(t0.c1), 250887140 COLLATE RTRIM, rt0.c4)) AND (((((t0.c1))>(('FALSE'))), ((t0.c19)|(rt1.c0)), ((((rt0.c3)OR(rt1.c1)))OR(vt0.c0)))));SELECT ALL ((((t0.c2)AND(rt0.c0)))<=((~ (t0.c0)))), ((rt1.c2)<<(rt1.c0)) COLLATE NOCASE, GROUP_CONCAT(CAST(x'' AS REAL)) OVER () FROM rt0, vt0, t0 WHERE ((((NULL IN ()))GLOB(NULL)));SELECT DISTINCT t0.c0, CUME_DIST() OVER (), NTILE((+ (CASE t0.c2  WHEN rt0.c4 THEN t0.c45 END))) OVER ( ORDER BY IFNULL(DISTINCT ((rt1.c0)<=(rt1.c0)), rt0.c2) DESC  NULLS FIRST) FROM rt0, t0 WHERE (0.3284411248718042);SELECT ((rt0.c1)LIKE(CAST(rt1.c2 AS NUMERIC))), ((((CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c1 THEN rt1.c2 WHEN rt0.c3 THEN vt0.c0 END)OR((rt0.c2 IN ()))))AND(CASE vt0.c0  WHEN rt0.c0 THEN t0.c19 WHEN rt0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c4 END)), ((((((((((rt0.c2)LIKE(t0.c0)))AND(SQLITE_SOURCE_ID())))OR(((rt1.c0)%(rt0.c3)))))OR(CASE WHEN rt0.c2 THEN t0.c19 ELSE rt0.c1 END)))OR(t0.c1 COLLATE NOCASE)) FROM t0, vt0, rt0, rt1 WHERE (((DATE(0.9342758485958204, '0.8710946448112049', NULL, 0.5800274193098269, NULL)) IS FALSE)); -- 0ms;
SELECT (('')+(AVG('1917439922'))) FROM rt1; -- 0ms;
SELECT DISTINCT x'a184' FROM rt0, rt1 WHERE (TYPEOF((((''))>=((x''))))) ORDER BY CAST(((t0.c2) IS FALSE) AS INTEGER) LIMIT 442933565;SELECT ALL AVG(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END) OVER (), CAST((+ (vt0.c0)) AS BLOB), 0.7315310427996512 FROM rt0, t0, vt0, rt1 WHERE (2114997438); -- 3ms;
SELECT DISTINCT 0.6329506931844081, ((t0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE RTRIM, DENSE_RANK() OVER () FROM rt1;SELECT ALL SUM(t0.c1) OVER ( ORDER BY (((CAST(rt0.c1 AS TEXT)))<((t0.c2))) DESC GROUPS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE TIES), TOTAL(IFNULL(rt1.c2, rt1.c1)) OVER ( PARTITION BY (((rt0.c4)&(vt0.c0)) IN (ABS(DISTINCT rt0.c3))), ((CAST(t0.c19 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (rt1.c0 COLLATE BINARY)), ((t0.c19)AND('撑<H2')), UNICODE(STRFTIME(rt0.c1, rt0.c1, rt0.c2, rt1.c2, rt0.c4))), LAG(((((vt0.c0)+(t0.c1)))<(((t0.c19)||(rt1.c1)))), ((((t0.c2)OR(t0.c0)))AND(rt0.c3)) COLLATE RTRIM, '-1946163461') OVER () FROM t0, vt0, rt1, rt0; -- 1ms;
SELECT ((CAST(rt0.c0 AS REAL))>>(((t0.c1)|(rt0.c1)))), CAST(((rt1.c0)/(rt0.c3)) AS BLOB), NULL, json_type(rt0.c2), (NOT (CAST(rt0.c1 AS INTEGER))) FROM rt0, rt1, vt0, t0; -- 0ms;
SELECT CAST(((((rt0.c1)AND(rt1.c1)))OR(rt1.c2)) AS INTEGER), GROUP_CONCAT('') OVER ( PARTITION BY (((rt1.c1 IN ()))+(((rt0.c0) ISNULL))), x''), MIN(-1451165285 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)), rt0.c3, NULL) FROM rt1, vt0, rt0;SELECT DISTINCT (((NULL)) NOT BETWEEN (((rt1.c1 IN (rt0.c3)))) AND ((rt0.c1))), ((((((rt0.c0) ISNULL))AND((((t0.c1))<((t0.c19))))))AND(t0.c45)), GROUP_CONCAT(NULL) OVER () FROM rt1, rt0 WHERE ((((((1396067103, 1917726041, NULL)) BETWEEN ((0.9912074125645113, x'98bf', NULL)) AND (('-1785054574', '-1301714545', 0.3284411248718042)))) IS TRUE));SELECT SUM(((t0.c0) NOT NULL)) OVER (), (((((rt1.c1)IS(t0.c0)), ((rt1.c1)||(rt1.c0)), TOTAL_CHANGES()))<=((CASE WHEN x'e516' THEN rt1.c0 END, CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c2 END, (t0.c19 IN (rt0.c4))))), ((CASE rt1.c1  WHEN rt0.c0 THEN '' ELSE rt0.c1 END)<<(CASE 0.8139403329585454  WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END)) FROM vt0, t0;SELECT ALL ((((((vt0.c0)LIKE(vt0.c0)))OR(((rt0.c0) NOT BETWEEN (t0.c45) AND (rt0.c1)))))OR(CAST(t0.c2 AS INTEGER))) FROM rt1, rt0 WHERE ((((((((((('-1556071329')||('1917726041')))OR(CAST('-1079858709' AS TEXT))))OR(NULL COLLATE RTRIM)))OR((('L}')/(x'')))))OR(CAST('1474799700' AS TEXT))));SELECT DISTINCT (~ (((-611866388)>(vt0.c0)))) FROM rt1, rt0, vt0, t0 GROUP BY (((((rt0.c4)>=(vt0.c0))))>=((((((NULL)AND(rt0.c2)))OR(t0.c45))))) HAVING rt0.c3 ORDER BY ((CASE WHEN NULL THEN t0.c0 END) NOT NULL); -- 0ms;
SELECT LIKELY(DISTINCT ((rt0.c4)==(rt0.c3))), CAST('-1418270096' AS TEXT) COLLATE BINARY, ((vt0.c0 COLLATE RTRIM)OR(TYPEOF(rt1.c2))) FROM vt0, t0, rt0 INDEXED BY i40;SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((((rt1.c2) BETWEEN (x'') AND (t0.c0)))OR(t0.c19)))OR((t0.c0 IN (rt1.c0)))), ((((((((json_remove(rt1.c0, 0.6329506931844081, vt0.c0, rt1.c0))OR(t0.c2)))AND(ABS(rt1.c1))))AND(CASE WHEN rt0.c1 THEN t0.c1 ELSE rt1.c0 END)))OR((((vt0.c0))<((x''))))) DESC  NULLS FIRST) FROM vt0 GROUP BY rt0.c1 HAVING ((((vt0.c0) BETWEEN (rt0.c4) AND (rt1.c1))) NOT NULL);SELECT DISTINCT (((t0.c1)) BETWEEN ((COUNT(t0.c1))) AND ((x'82f4'))) FROM rt1, rt0 WHERE ((((NOT (-1.362156088E9))) IS TRUE));SELECT DISTINCT MAX(0.6928161285055882), ((((((((t0.c2)AND(x'')))OR(rt0.c1)))AND(rt0.c1)))OR(((t0.c1) NOT BETWEEN (-1.556071329E9) AND (574042973)))), MIN((((rt0.c2, t0.c19, t0.c1))<=((rt0.c4, rt1.c0, x'192a')))), '', ((((((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c2)))OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)))))AND(((rt0.c1) NOT NULL))), CAST(((rt0.c2)>>(rt0.c4)) AS NUMERIC), (((+ (rt1.c0))) ISNULL) FROM vt0, t0, rt0, rt1 WHERE (CAST(((x'189a')<=(NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT t0.c1 FROM t0; -- 0ms;
SELECT ALL ((t0.c1 COLLATE NOCASE)!=(t0.c2)) FROM rt1, vt0 ORDER BY ((((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)))AND((((836228145, rt1.c2, 2105617319))<=((t0.c2, rt0.c0, rt0.c4))))))OR(COALESCE(t0.c45, rt1.c0)))  NULLS FIRST;SELECT DISTINCT COUNT(((rt0.c4)IS NOT(t0.c2))) OVER ( ORDER BY CASE x''  WHEN TRIM(DISTINCT t0.c1) THEN ((((rt0.c2)OR(rt1.c0)))OR(rt0.c3)) END ASC, (('348860413')>(t0.c2))  NULLS FIRST), rt1.c2, LAST_VALUE(CASE CAST(rt0.c3 AS BLOB)  WHEN ((t0.c1)>>(rt0.c1)) THEN t0.c2 COLLATE BINARY WHEN ((t0.c19)<>(t0.c2)) THEN ((t0.c19)==(rt0.c4)) WHEN ((t0.c45) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c0)!=(rt0.c0)) ELSE (((rt0.c0))>=((0Xffffffffd022fff6))) END) OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW) FROM t0, rt0 WHERE (ABS(((x'') NOT BETWEEN ('-717194365') AND (0.9047887711222399)))) ORDER BY (+ ((+ (0.8714138074839182))))  NULLS FIRST, CAST(((((t0.c0)AND(rt0.c0)))OR(rt0.c2)) AS INTEGER) DESC  NULLS FIRST, rt0.c2 DESC  NULLS LAST LIMIT -959364524;SELECT DISTINCT load_extension(((NULL)&(t0.c19)), (rt1.c2 IN ())) FROM vt0 WHERE ((-535891583 COLLATE NOCASE IN ()));SELECT LOWER('-1215205064') COLLATE BINARY COLLATE RTRIM, LAST_VALUE(NULL) OVER (), ((((((rt1.c1) NOTNULL))AND(CAST(rt1.c1 AS INTEGER))))OR(CASE WHEN t0.c19 THEN rt1.c2 ELSE rt0.c4 END)) FROM rt0, rt1, t0; -- 0ms;
SELECT ALL (((rt0.c0 IN (rt1.c0)))*((((t0.c2, NULL, t0.c2)) NOT BETWEEN ((rt0.c3, t0.c45, rt0.c4)) AND ((rt1.c2, rt1.c1, rt0.c2))))) FROM rt0, rt1, vt0, t0 WHERE (((((((((((((x'')AND(x'')))AND(x'')))OR(x'')))AND('1265417084')))AND(TRIM(DISTINCT NULL, NULL))))OR(CAST('-1281746728' AS NUMERIC)))); -- 0ms;
SELECT AVG(CAST(t0.c45 AS TEXT)) FROM vt0, rt1, rt0 WHERE ((~ ((('687395304')IS(x'e8d4')))));SELECT ALL x'6671' FROM vt0, rt1, t0, rt0 WHERE (NULLIF(DISTINCT (('y8')GLOB(NULL)), '' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT MIN((NOT (0.1501036525748103)) COLLATE NOCASE) FROM vt0 WHERE ((NOT ((('-686968979') NOTNULL)))); -- 0ms;
SELECT ALL ((((t0.c45)<<(rt1.c2))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND ('')) FROM rt1 WHERE (((CASE WHEN x'' THEN x'' ELSE 'VOcT0A7RS' END) NOTNULL));SELECT DISTINCT ((((rt0.c1)OR(rt0.c0)))OR(rt1.c0)) COLLATE NOCASE FROM t0 LIMIT 847384445;SELECT ALL ((rt1.c2 COLLATE NOCASE) BETWEEN ((NOT (t0.c45))) AND (rt0.c3 COLLATE NOCASE)), (+ (CAST(rt1.c2 AS INTEGER))), INSTR(((t0.c45)=(t0.c1)), ABS(rt0.c2)) FROM rt0, vt0, rt1 WHERE ((- (0xffffffffd34faf88 COLLATE BINARY))) GROUP BY ((rt0.c3) NOTNULL), (((rt1.c1)LIKE(rt1.c1)) IN ()), ((vt0.c0)%(CAST(t0.c0 AS TEXT)));SELECT ((t0.c2) IS FALSE), CASE WHEN rt0.c1 THEN ((((rt0.c2)OR(rt1.c0)))OR(rt0.c0)) END, t0.c45 FROM vt0, t0, rt0 WHERE ((((0X17c4579f IN ('-1493056940')))<=((NULL IN (410469430)))));SELECT LIKELIHOOD(DISTINCT ((((t0.c2)OR(t0.c2)))OR(rt0.c2)), 0.10286648578458524) FROM vt0;SELECT DISTINCT AVG(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c2 END) OVER () FROM rt0;SELECT t0.c2, LAST_VALUE(((rt1.c0) ISNULL) COLLATE BINARY) OVER (), (((t0.c2, NULL, rt1.c1)) NOT BETWEEN ((rt0.c3, (rt1.c1 IN ()), ((rt1.c0) BETWEEN (rt0.c0) AND (t0.c2)))) AND ((((rt1.c1)<>(t0.c0)), rt0.c2, ((rt0.c0) IS TRUE)))) FROM rt1, t0 WHERE (((('z9'))<=((CASE WHEN NULL THEN 0Xffffffffdc537263 ELSE 0.049345490948532245 END))));SELECT (- (CHANGES())), rt1.c2, LAG(((((rt0.c3))!=((rt0.c2))) IN (rt0.c0 COLLATE RTRIM, IFNULL(0.2014431597784283, rt0.c2))), (NOT (((((x'')AND(rt0.c4)))OR(rt0.c0)))), ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (0.9184435913687332))) OVER () FROM vt0, rt0;SELECT ALL (NOT (((t0.c1)IS NOT(t0.c1)))) FROM vt0, rt1, t0, rt0; -- 0ms;
SELECT ALL t0.c2 FROM vt0 GROUP BY CASE WHEN CASE t0.c19  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c3 END THEN (((rt1.c2, vt0.c0, rt1.c2))>=((rt1.c1, t0.c2, t0.c1))) WHEN (NOT (rt1.c2)) THEN ((rt0.c1)||(vt0.c0)) WHEN ((t0.c45) BETWEEN (rt0.c3) AND (rt1.c1)) THEN ((((((((rt1.c1)AND(rt0.c0)))AND(rt0.c4)))AND(vt0.c0)))AND(t0.c0)) ELSE (rt0.c2 IN ()) END HAVING (((t0.c2)) NOT BETWEEN ((TOTAL(t0.c2))) AND ((((rt0.c2) IS FALSE))));SELECT ((AVG(0.11669317256544409)) BETWEEN (rt1.c1 COLLATE BINARY) AND (t0.c19)) FROM vt0;SELECT ALL (((AVG(rt1.c0)))<((TRIM(rt0.c4)))) FROM rt1, t0, vt0 WHERE ((NOT (x'' COLLATE RTRIM)));SELECT DISTINCT AVG(((rt0.c2)IS NOT(rt1.c1))) OVER () FROM rt0, rt1, vt0, t0 INDEXED BY i40 WHERE (DATETIME((0.426036046201573 IN ()), CASE 0.23730760591606526  WHEN 1229249778 THEN 'C緙J' WHEN NULL THEN 0.205662672662431 WHEN x'' THEN 0.07468011631904525 ELSE 0.7525746255926721 END, ((((NULL)AND('-1889159589')))OR(x''))));SELECT (((NOT (-1076444643))) IS FALSE) FROM rt1, vt0, rt0, t0; -- 0ms;
SELECT ((((MAX(rt0.c1))OR(((rt1.c2)-(rt1.c2)))))OR('755114971')) FROM rt0, rt1, t0, vt0 WHERE (((json_array_length('-2003350893'))GLOB((x'' IN ())))); -- 0ms;
SELECT ALL SUM(CASE WHEN t0.c1 THEN rt0.c0 END COLLATE NOCASE), (((0.6819426250365324)LIKE(rt1.c2)) IN ((NOT (t0.c19)))), ((CAST(t0.c1 AS BLOB))LIKE(rt0.c1 COLLATE BINARY)) FROM t0;SELECT CASE NULL  WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt1.c2 IN (0Xffffffffc495be48)) WHEN ((vt0.c0) NOTNULL) THEN 0.05039504075721857 WHEN LOWER(DISTINCT t0.c1) THEN (~ (vt0.c0)) END, ((rt0.c3 IN ()) IN ()), ((((x'90b5') BETWEEN (t0.c2) AND (rt0.c3))) BETWEEN ((t0.c2 IN ())) AND (((((rt1.c0)AND(rt0.c0)))AND(t0.c45)))) FROM t0, vt0, rt0, rt1 WHERE (((((CAST('' AS NUMERIC))AND(((((x'')AND('4')))AND('-1225203659')))))OR(0Xffffffffd8649d99))); -- 0ms;
SELECT DISTINCT 'Yh', ((((rt1.c0)-(NULL)))!=((- (rt0.c3)))), (((((rt1.c0))<=((rt0.c4))))-(t0.c2 COLLATE BINARY)), ((((t0.c2)OR(rt1.c2))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1)))) AND (rt1.c2)), (NOT (json_remove(rt1.c0, rt1.c0))), ((((((rt0.c4) IS FALSE))AND((('546686587') IS TRUE))))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3)))), ((x'')>(t0.c2)) FROM vt0, rt1;SELECT DISTINCT (- (TYPEOF(rt0.c4))), (((rt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((((((t0.c0)OR(t0.c45)))AND(t0.c19)), ((rt0.c1)<(rt0.c4)), MIN('YT≷NK'))) AND ((COUNT(*), AVG(rt0.c3), ((0.829994159292698)%(rt0.c4))))), ((((((((CASE WHEN t0.c1 THEN rt0.c4 END)OR(((rt0.c3)/(rt1.c0)))))OR(((t0.c45) IS TRUE))))OR('涜q{}lXE抟&')))OR((((rt0.c4)) BETWEEN ((t0.c1)) AND ((rt0.c1))))) FROM t0, rt1, rt0;SELECT DISTINCT COUNT(*) FROM t0, rt0, rt1, vt0; -- 0ms;
SELECT ALL LIKELY(DISTINCT ((t0.c2)<<(rt1.c0))), COUNT(*), ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c4 END) AND (UPPER(DISTINCT rt0.c1))) FROM rt0, t0, rt1 WHERE (CAST((('{&E~A{Og')LIKE(x'')) AS INTEGER)) ORDER BY ((((LIKE(rt1.c0, 0xffffffffd8df6e05, '-'))AND(CAST(t0.c2 AS TEXT))))AND(CAST(rt0.c3 AS INTEGER)))  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST((((t0.c19)) BETWEEN ((rt0.c2)) AND ((NULL))) AS BLOB) FROM rt0, rt1, vt0, t0 LIMIT 922686159 OFFSET -1702627160; -- 0ms;
SELECT DISTINCT CAST(((t0.c19) BETWEEN (rt1.c0) AND (rt1.c0)) AS BLOB) FROM vt0, rt0, rt1 LIMIT 565074580;SELECT DISTINCT CASE (((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((t0.c1)))  WHEN ((rt0.c3) ISNULL) THEN CASE WHEN NULL THEN rt1.c1 END END, SUM(((rt0.c3) NOTNULL)), SUM(((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))) FROM vt0, rt0 GROUP BY NULL;SELECT ALL TOTAL(((rt0.c3)AND(rt1.c1))) FROM rt1, vt0, rt0 WHERE ((0.6318626426026682 IN ()) COLLATE BINARY); -- 0ms;
SELECT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT ((((((((t0.c1)AND(rt0.c4)))OR(t0.c0)))AND(rt1.c1 COLLATE NOCASE)))AND((rt1.c0 IN (rt0.c3)))), (GROUP_CONCAT(rt0.c4) IN (((((t0.c1)AND(rt1.c2)))OR(rt0.c1)))), TRIM(rt0.c3) FROM rt0, t0 WHERE ((((NOT (x'')))+(COALESCE(DISTINCT '-\EqM}K', ''))));SELECT ALL CASE COUNT(t0.c45)  WHEN (((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN (((t0.c0))>=((vt0.c0))) END, (((CAST(rt0.c2 AS NUMERIC)))==((((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c0))))), CASE WHEN ((t0.c2)>>(rt0.c3)) THEN rt0.c3 END, CASE WHEN (t0.c45 IN (rt0.c1)) THEN CASE t0.c19  WHEN rt1.c1 THEN rt0.c3 ELSE vt0.c0 END ELSE t0.c45 COLLATE BINARY END, (NOT (rt0.c4)) FROM t0, vt0, rt0, rt1 WHERE (CAST('-1215205064' AS BLOB)); -- 0ms;
SELECT ALL AVG(rt1.c0), GROUP_CONCAT((((vt0.c0))>((rt1.c0)))), CASE WHEN t0.c19 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY ELSE rt0.c0 END, (((rt0.c0)) BETWEEN ((t0.c19)) AND ((rt0.c1))) COLLATE NOCASE COLLATE BINARY, CASE json_insert(rt1.c0, rt1.c1, rt0.c4, rt1.c1, t0.c45)  WHEN CASE 0.9349721670242438  WHEN rt0.c1 THEN rt0.c2 WHEN t0.c45 THEN t0.c45 WHEN t0.c19 THEN rt0.c4 END THEN ((t0.c2)>>(rt0.c4)) WHEN (rt0.c1 IN (rt0.c4)) THEN AVG(t0.c0) WHEN t0.c2 COLLATE BINARY THEN ((rt1.c2) NOTNULL) END FROM vt0, rt0, rt1, t0 WHERE (((NULLIF(DISTINCT '639220104', '1758042147')) NOT NULL)); -- 0ms;
SELECT DISTINCT (+ ((- (rt1.c1)))) FROM rt1, t0, vt0, rt0; -- 1ms;
SELECT DISTINCT TYPEOF(((rt0.c0)>=(rt0.c0))) FROM rt1, rt0; -- 0ms;
SELECT ((json_insert('e&', rt1.c2, rt0.c2, rt1.c0, t0.c0, rt0.c2, rt1.c0)) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN t0.c1 THEN rt0.c3 END)) FROM vt0, rt1, rt0;SELECT DISTINCT LEAD(((((((((((((t0.c2)OR(t0.c19)))AND(t0.c45)))OR(t0.c0)))OR(t0.c19)))OR(-1235692202)))AND(CASE t0.c1  WHEN t0.c19 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END)), (((CAST('~t?Ag''vS#' AS NUMERIC)))==((((t0.c1)<>(t0.c0))))), ((((t0.c19)AND(t0.c0)))AND(t0.c45)) COLLATE RTRIM) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)!=(-1.235692202E9)))>((rt1.c1 IN ()))) FROM rt1, t0, rt0 GROUP BY ABS(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))) HAVING CAST(CAST(rt0.c2 AS NUMERIC) AS REAL); -- 0ms;
SELECT DISTINCT 1905591577, TOTAL(NULLIF(rt1.c2, t0.c45)) OVER (), ((((CAST(t0.c0 AS REAL))OR(ABS(rt0.c0))))OR(((t0.c19) IS FALSE))) FROM t0, vt0, rt0, rt1 WHERE (ABS(((1.319059863E9)>(NULL)))); -- 0ms;
SELECT ALL ((((t0.c45) BETWEEN (t0.c0) AND (rt0.c4)))AND((rt1.c1 IN (t0.c19)))) FROM vt0, rt0;SELECT ((((rt1.c1)|(rt0.c0))) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.7844845937184357)) AND (((0.3220199029181825) BETWEEN (NULL) AND ('0.8392696552856646')))) FROM rt1, t0 UNION ALL SELECT ALL ((((('-148438863') IS FALSE)))>((('' IN ())))) FROM rt1 WHERE (((((('12鶙')OR(x''))))<((((0.6831874427598427) ISNULL)))));SELECT ALL (NOT (((t0.c19) NOTNULL))) FROM rt0, rt1, vt0, t0; -- 0ms;
SELECT DISTINCT 'Bz o' FROM rt0 GROUP BY (((((t0.c1)-(NULL))))<((TRIM(rt1.c1, t0.c2)))), 0X614b244d, ((load_extension('1341606653', rt0.c2))>=((((rt1.c1, rt0.c2, vt0.c0))>((rt1.c2, t0.c1, rt1.c2))))) HAVING (((((+ (t0.c1)))AND(((t0.c0) ISNULL))))OR(CASE rt1.c0  WHEN rt1.c0 THEN '' WHEN t0.c1 THEN NULL WHEN rt1.c2 THEN t0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN vt0.c0 THEN t0.c19 WHEN rt1.c1 THEN t0.c45 WHEN rt0.c4 THEN rt1.c2 ELSE rt1.c2 END));SELECT DISTINCT ((((t0.c45)OR(rt1.c1 COLLATE NOCASE)))OR((~ (vt0.c0)))) FROM rt1, t0, vt0, rt0; -- 0ms;
SELECT DISTINCT CAST((NOT (t0.c19)) AS TEXT), COUNT(COALESCE(DISTINCT vt0.c0, rt0.c0)) OVER ( GROUPS BETWEEN NULL PRECEDING AND  UNBOUNDED FOLLOWING), ((-1281746728)||((((''))==((t0.c1))))), ((CASE WHEN NULL THEN t0.c45 END)<<(((rt0.c3) BETWEEN (t0.c1) AND (vt0.c0)))), NTILE(0.08051302212771028) OVER () FROM t0, rt0, vt0 LIMIT 676797637 OFFSET -1225203659; -- 0ms;
SELECT NTH_VALUE(((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) ELSE (~ (vt0.c0)) END) OVER () FROM vt0 WHERE (CAST(CASE '23775111'  WHEN 0.3798934037260606 THEN 0.9864192292955942 ELSE x'' END AS TEXT)); -- 0ms;
SELECT NTILE(CASE vt0.c0 COLLATE NOCASE  WHEN (((('-1225203659')AND(t0.c0)))AND(rt0.c1)) THEN (t0.c45 IN ()) END) OVER ( ORDER BY CAST(((rt1.c0)||(rt1.c0)) AS TEXT) DESC  NULLS FIRST) FROM rt0, t0, vt0;SELECT DISTINCT CASE WHEN (rt1.c0 IN (rt0.c3, t0.c19)) THEN 0.6266208867317835 ELSE TOTAL(t0.c0) END FROM t0, rt0, vt0 WHERE (CASE ((NULL) BETWEEN ('I꼝q') AND ('303760048'))  WHEN NULL COLLATE BINARY THEN ((x'1b5b6451') NOT BETWEEN (-2003147518) AND (x'9500')) ELSE ((1.571659722E9) NOTNULL) END) GROUP BY rt0.c3;SELECT ALL ((((((((((rt0.c0)OR(t0.c1)))OR(rt1.c2)))AND(t0.c0)))OR(t0.c45))) IS FALSE) FROM rt0 WHERE (((CASE 1.07326001E9  WHEN NULL THEN 'YT≷NK' WHEN 0.6544718632368365 THEN 0xffffffff817926c5 WHEN 'T7' THEN -1.577938319E9 WHEN NULL THEN 0xffffffffc64ac656 WHEN 'oSf>WVE턀2' THEN 'FALSE' ELSE '0.9271999361562128' END) IS TRUE));SELECT DISTINCT LAG(((rt0.c4 IN ()) IN (LIKELIHOOD(DISTINCT rt0.c1, 0.016727235878254754))), ((rt0.c3 COLLATE RTRIM)LIKE(((t0.c0)IS NOT(rt1.c2)))), t0.c2) OVER ( ORDER BY json_insert(((((rt0.c1)OR(rt0.c3)))OR(t0.c0)), ((rt0.c2)>=(rt1.c0)), json_extract(t0.c19, t0.c2), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)), ((t0.c2)*('-823744790')))) FROM rt0, rt1, vt0, t0; -- 0ms;
SELECT RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL (+ (t0.c19)) COLLATE NOCASE FROM rt0, vt0, rt1 WHERE (NULL) LIMIT -1703404277 OFFSET 1930632234;SELECT ((AVG(rt0.c2)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (((((((((0.15993859226879548)OR(NULL)))AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c4)))) FROM rt1 WHERE (CASE CASE ''  WHEN '429221049' THEN NULL END  WHEN DATE(0x14366df3, 0.3173430753145353, 'e	r/h''') THEN (('{F')|(0x48eb4e56)) ELSE (-6.4716444E7 IN ()) END);SELECT ALL ((((((rt0.c0) NOT NULL))OR(((rt1.c2) BETWEEN (t0.c45) AND (rt1.c2)))))AND(rt0.c1 COLLATE BINARY)), CASE WHEN NULL THEN x'f49b' ELSE rt0.c3 END COLLATE NOCASE, x'fd43' FROM vt0 LEFT OUTER JOIN rt1 ON 0.14987124794526596 LEFT OUTER JOIN rt0 ON (((((rt1.c1) IS TRUE), (('')+(NULL)), ((rt0.c3)<(t0.c0))))>=((CASE rt1.c0  WHEN x'' THEN t0.c2 END, ('-1362156088' IN ()), rt0.c2))) WHERE (((json_remove(x'd1f3', x'72686134')) IS FALSE));SELECT LAG((- (json_array_length(rt0.c1))), (((NOT (rt0.c4)))GLOB(CAST(rt0.c2 AS NUMERIC))), ((((((t0.c19) BETWEEN (rt0.c4) AND (rt1.c0)))AND(('-64716444' IN (t0.c45, vt0.c0)))))AND((t0.c19 IN ())))) OVER () FROM rt0 INDEXED BY i40, t0, vt0, rt1 WHERE (TRIM(((NULL)IS NOT(x'')))) ORDER BY NULLIF(((((((((rt1.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt1.c1)), ((rt0.c4)IS(rt1.c2)))  NULLS FIRST;SELECT DISTINCT CAST(LOWER(rt0.c4) AS INTEGER) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((NULL)<=(TOTAL(rt0.c4))), SUM(COALESCE(DISTINCT rt1.c0, rt0.c1)) OVER (), COUNT(*) FROM t0, rt1, vt0 ORDER BY (rt1.c2 COLLATE BINARY IN ()) ASC  NULLS FIRST, SQLITE_VERSION()  NULLS FIRST;SELECT DISTINCT ((t0.c45 COLLATE NOCASE) ISNULL) FROM rt1, vt0, t0, rt0 WHERE (NULL) GROUP BY '-1707365315', t0.c45, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL), t0.c0, (+ (IFNULL(DISTINCT rt0.c1, rt1.c2))); -- 0ms;
SELECT ((CAST(rt1.c1 AS TEXT))!=((NULL IN (rt0.c2)))) FROM rt0;SELECT DISTINCT rt0.c3 FROM t0, rt1 WHERE (((x'')+(x'5939')) COLLATE NOCASE);SELECT DISTINCT LIKELIHOOD(((rt0.c3) IS FALSE), 0.2193652868960997), json_insert(((rt0.c4)AND(rt0.c4)), ((rt1.c2)>(t0.c0)), ((rt0.c0) NOTNULL)), CASE (((t0.c0, t0.c19, '1050769050')) NOT BETWEEN ((rt1.c1, t0.c19, rt1.c0)) AND ((rt0.c3, NULL, rt0.c1)))  WHEN MAX(rt1.c1) THEN (('')|(0.0040856475162114325)) WHEN rt1.c1 COLLATE NOCASE THEN ((rt0.c4)*(t0.c1)) WHEN (~ (rt1.c0)) THEN (rt0.c3 IN (t0.c1, t0.c45)) ELSE (((t0.c19)) NOT BETWEEN ((t0.c19)) AND ((rt0.c0))) END FROM t0, rt1, vt0, rt0 WHERE ((((0.3284411248718042) NOT NULL) IN ())); -- 0ms;
SELECT ALL ((((vt0.c0) ISNULL))<(((t0.c2) NOT BETWEEN (rt0.c4) AND (rt1.c1)))) FROM rt1, t0, vt0 WHERE ((('') NOT NULL) COLLATE RTRIM);SELECT ALL SUM((rt1.c1 IN ())), ROW_NUMBER() OVER (), CAST(((rt1.c1)OR(t0.c1)) AS TEXT) FROM rt1, vt0, rt0;SELECT ALL SUM((+ (rt0.c1))) OVER () FROM t0, rt1, vt0;SELECT ALL ((GROUP_CONCAT(t0.c2))>=(SUM(1746265602))) FROM vt0, rt1, t0, rt0; -- 0ms;
SELECT CAST(((rt0.c4) NOT BETWEEN (vt0.c0) AND (0xffffffffb98ff08b)) AS TEXT) FROM vt0, rt0, t0 ORDER BY x'ecfa911a' ASC  NULLS LAST LIMIT -1456639430 OFFSET 2048257058; -- 0ms;
SELECT (((- (rt0.c0)))%(CASE rt1.c1  WHEN t0.c0 THEN t0.c0 END)) FROM vt0, rt0 WHERE (((((((((NULL)OR(NULL)))OR(x'')))OR(json_extract(0x4c14cc99, x'8611', x'', 0.4734529555611462))))AND((NOT (NULL)))));SELECT MIN(t0.c2) FROM rt0, vt0 WHERE (((highlight(NULL, NULL, x'', 0.8272573842660034))/(NULL COLLATE BINARY)));SELECT DISTINCT (~ ('鉱,' COLLATE BINARY)) FROM rt1 WHERE ((- (((x'')!=(1498880433))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE((- ((t0.c2 IN ())))) OVER () FROM t0, rt1, rt0; -- 0ms;
SELECT ALL ((rt0.c0 COLLATE RTRIM) BETWEEN (((((vt0.c0)OR('')))OR(rt0.c0))) AND (TYPEOF(t0.c2))), ((((rt0.c1, vt0.c0, t0.c2)) NOT BETWEEN ((t0.c0, '垟S-Mgn ', NULL)) AND ((vt0.c0, rt0.c4, t0.c45))) IN ()), RANK() OVER ( ORDER BY CASE WHEN ((rt0.c1) BETWEEN (rt1.c0) AND (t0.c2)) THEN ROUND(rt0.c4, rt0.c0) END) FROM t0, rt1, rt0;SELECT DISTINCT ((((t0.c2)GLOB(t0.c1)))+(CASE WHEN t0.c0 THEN rt0.c3 ELSE rt1.c0 END)) FROM rt0, vt0, rt1 WHERE ((((0.7772485073020692) BETWEEN (NULL) AND (x'6c9e')) IN (CAST('9J4' AS INTEGER), ((((-1.079858709E9)AND(0.6721589620209)))OR(0.11508110364897128))))) ORDER BY (((((- (0.7315310427996512)))OR(CAST(t0.c2 AS TEXT))))OR(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST;SELECT DISTINCT GROUP_CONCAT(((rt1.c2) NOT NULL)), (NOT (MIN(rt1.c1))), ((((t0.c19) NOT NULL)) IS TRUE) FROM vt0 WHERE (x'') ORDER BY NULL DESC;SELECT CASE AVG(rt0.c4)  WHEN CAST(t0.c2 AS INTEGER) THEN ((rt0.c1) NOTNULL) WHEN json_insert(rt0.c4, rt0.c2, rt0.c0, t0.c45, 0.2865953705751193) THEN (~ (t0.c45)) WHEN (((rt0.c1))>=((rt1.c0))) THEN t0.c2 END FROM rt1, rt0, vt0, t0 WHERE (CAST((-835388645 IN (NULL, 0x737add2f)) AS INTEGER)); -- 0ms;
SELECT DISTINCT COUNT(((rt1.c1) BETWEEN (rt0.c0) AND (vt0.c0))), (((((((rt1.c0, t0.c0, t0.c2)) BETWEEN ((rt0.c0, t0.c2, rt1.c1)) AND ((rt0.c4, t0.c45, t0.c19))))OR(STRFTIME(rt0.c3, x'', NULL))))AND(((((rt1.c0)AND(rt0.c1)))OR(t0.c0)))), AVG(CAST(t0.c19 AS REAL)), (((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((NULLIF(t0.c19, rt0.c3), (rt1.c0 IN (x'')), ((t0.c19)IS(rt1.c1)))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))), ((rt1.c1)&(rt0.c1)), (t0.c2 IN ())))), ((CAST(NULL AS REAL))GLOB(TOTAL(t0.c1))) FROM rt1, t0 NOT INDEXED, rt0;SELECT DISTINCT (- (QUOTE(rt0.c3))), ((COUNT(t0.c0))*((rt0.c3 IN ()))), MAX((~ (rt0.c2))) FROM rt0, rt1, vt0;SELECT DISTINCT LEAD(((CAST(rt0.c4 AS NUMERIC))>((((t0.c45, rt0.c4, rt1.c0))=((rt0.c2, rt0.c1, rt0.c4))))), CASE WHEN ((0.30783176146646407)<(t0.c1)) THEN ((t0.c45)|(rt0.c0)) END, rt0.c3) OVER () FROM t0, rt0, rt1 WHERE (CAST((((('+E')OR('-535891583')))AND(0.5185641510513418)) AS TEXT)) ORDER BY (NOT (CAST(t0.c2 AS TEXT))) ASC; -- 0ms;
SELECT ALL (((((vt0.c0) IS TRUE)))>=(((((t0.c19, '(WMQf3T', t0.c45))=((rt0.c3, rt0.c0, t0.c19)))))) FROM vt0, rt1, t0, rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (rt0.c0) AND (t0.c45)))GLOB(json_remove(rt0.c0, rt0.c2))) FROM rt0, t0, vt0 WHERE (((HEX(x''))<>(((((x'')AND(0X38a39606)))AND(0x6640dc51))))) ORDER BY t0.c19  NULLS FIRST, ((((((rt1.c1)OR(t0.c0)))AND(rt1.c0))) NOTNULL)  NULLS FIRST LIMIT 1571659722;SELECT DISTINCT TRIM((('H<{')&(rt0.c0)), ((vt0.c0) IS FALSE)), (((~ (t0.c45)))GLOB(CASE rt0.c1  WHEN rt1.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c2 WHEN rt0.c3 THEN t0.c0 END)), (vt0.c0 IN ()), ((((((((((t0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))AND(x'b4d1')))+(GROUP_CONCAT(vt0.c0))), AVG(CASE WHEN t0.c0 THEN t0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN x'' THEN rt1.c1 ELSE t0.c1 END) FILTER(WHERE (CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c45 WHEN t0.c0 THEN rt0.c3 END IN ())) OVER () FROM rt1 INDEXED BY i40, vt0 WHERE (json_array_length(0.47703186256634966, 0X2a1e380) COLLATE BINARY COLLATE BINARY);SELECT DISTINCT ((TOTAL_CHANGES()) NOT NULL), (((rt0.c1, rt0.c4, t0.c45)) NOT BETWEEN ((((rt0.c4)|(rt0.c1)), (t0.c0 IN ()), '1368616237')) AND ((((vt0.c0)*(t0.c19)), ((((((((rt1.c1)OR(-0.0)))OR(t0.c1)))AND('鉱,')))OR(rt0.c2)), (+ (rt1.c1))))), ((t0.c0)<>(t0.c1 COLLATE BINARY)), 0X70054a2, '6' COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE FROM t0, vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c1)OR(rt0.c4)))OR(rt1.c2)))OR(rt1.c0)))OR(rt0.c3))) IS TRUE) FROM t0, rt0, rt1 ORDER BY IFNULL(CAST(rt0.c4 AS TEXT), t0.c1 COLLATE RTRIM)  NULLS FIRST; -- 0ms;
SELECT ALL NTILE(CAST(rt0.c2 AS TEXT)) OVER () FROM t0, vt0, rt0, rt1; -- 1ms;
SELECT DISTINCT json_remove(rt1.c2 COLLATE RTRIM, UNLIKELY(DISTINCT rt1.c2)) FROM vt0, rt0, t0, rt1; -- 0ms;
SELECT CAST((t0.c45 IN (rt0.c0)) AS INTEGER) FROM t0 WHERE (((((NULL)GLOB(x'')))GLOB(x'')));SELECT ALL (((rt1.c0, t0.c2, rt0.c1))<>((rt0.c1, x'', t0.c0))) COLLATE NOCASE, (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN ()), CASE WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c1 END COLLATE BINARY COLLATE RTRIM FROM vt0, rt1;SELECT DISTINCT LIKELIHOOD(DISTINCT SUM(rt0.c0), 0.3116487934612271), (((((rt0.c1 IN (rt0.c4)))AND(((((rt1.c0)OR(rt0.c3)))OR(t0.c19)))))OR(AVG(t0.c45))), ((((t0.c1) NOTNULL)) NOT BETWEEN (rt0.c0) AND (MAX(rt0.c2))), CAST(((rt0.c0)>('-535891583')) AS INTEGER), (((((rt0.c3)IS NOT(t0.c45)), ((t0.c45) NOT NULL), ((rt1.c2) IS TRUE)))<=((rt0.c4, (((rt1.c1, rt1.c2, t0.c2))<=((rt0.c1, rt1.c1, rt0.c4))), (((t0.c0, rt0.c2, rt0.c4))>=((t0.c0, rt1.c1, t0.c2)))))) FROM t0, rt1;SELECT DISTINCT ((((rt0.c0)OR(t0.c45)))OR(rt1.c0)) COLLATE RTRIM FROM rt0, t0 WHERE (LOWER((NOT (-505913558)))) LIMIT -1401294930 OFFSET 2087102250;SELECT MIN((+ (rt0.c0))) FROM vt0 ORDER BY (((((((rt0.c2))<=((rt0.c3))))AND(((rt1.c1)==(t0.c45)))))AND(rt0.c2 COLLATE NOCASE))  NULLS FIRST;SELECT DISTINCT MAX((rt1.c1 IN ())) FROM rt1, t0; -- 0ms;
SELECT ALL rt1.c2, (t0.c2 COLLATE NOCASE IN (((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(((rt0.c4) IS TRUE) AS REAL) FROM rt0, rt1, t0, vt0; -- 0ms;
SELECT (((vt0.c0 IN ())) IS TRUE) FROM vt0, t0; -- 1ms;
SELECT ALL ((NULL) NOTNULL) FROM t0, rt1 WHERE (((((((((CASE 0.3798934037260606  WHEN NULL THEN '	Ae6/9\#Q' END)AND(((0x34371327)<<(x'1a02')))))AND(CASE WHEN 0Xffffffffa73beaf4 THEN 'y&X*''5G_' ELSE x'' END)))AND(((((x'')AND('1238884618')))OR(x'')))))AND((((0.7507589260358545)) BETWEEN ((x'')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) NOTNULL) COLLATE NOCASE) OVER () FROM t0 WHERE (CASE ((x'')=(x'e393'))  WHEN ((NULL) IS FALSE) THEN CASE WHEN '1632314445' THEN x'' ELSE x'' END END) ORDER BY (~ (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, GLOB(t0.c0 COLLATE RTRIM, (~ (rt1.c2))) DESC  NULLS FIRST LIMIT -1374746343 OFFSET 1341606653;SELECT ALL ((((vt0.c0) ISNULL)) IS FALSE), rt0.c2, vt0.c0 FROM rt1, vt0, rt0, t0 GROUP BY (((vt0.c0)) BETWEEN ((CAST(NULL AS BLOB))) AND ((highlight(rt0.c0, rt1.c2, rt0.c4, t0.c1)))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, vt0, rt1 WHERE (((((((x'c4dc')IS(118129852)))AND(((x'7ed9')AND(NULL)))))AND(CASE WHEN NULL THEN NULL WHEN 0.6773349470039715 THEN NULL WHEN '/\' THEN 0.8154329703147797 WHEN 0.2506695970158094 THEN '' WHEN 'FALSE' THEN '-119187646' ELSE 0.8554246601455655 END))) ORDER BY (((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2))))==(((t0.c45 IN ())))) DESC, CAST(((rt0.c2)<(rt0.c2)) AS INTEGER)  NULLS LAST; -- 0ms;
SELECT AVG(CAST(rt1.c1 AS BLOB)) OVER () FROM t0, rt0;SELECT DISTINCT ((+ (vt0.c0)) IN ()) FROM rt1, vt0, rt0 WHERE ((NOT ('1553950433')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT rt0.c2, ((CASE WHEN rt1.c1 THEN t0.c19 ELSE rt0.c0 END) NOTNULL), TOTAL(CAST(t0.c45 AS NUMERIC)) FROM vt0, t0, rt1 WHERE (((((x'')>>(-1.39893615E8)))<<(CAST('r' AS INTEGER)))) ORDER BY (- (((rt0.c3) BETWEEN (rt1.c1) AND (x'9013')))), (NOT (rt0.c1)), CASE UNLIKELY(t0.c2)  WHEN (((rt0.c4, rt0.c4, rt1.c0)) NOT BETWEEN ((t0.c45, 0.43960026915127415, vt0.c0)) AND ((t0.c19, rt0.c4, t0.c0))) THEN (vt0.c0 IN ()) ELSE ((rt1.c2)||(t0.c0)) END DESC  NULLS LAST;SELECT ALL 'lkOkdwJN' FROM rt0, rt1; -- 0ms;
SELECT DISTINCT AVG((((t0.c19))<=((rt0.c3)))) OVER (), (~ ((rt0.c2 IN (rt0.c1, rt0.c3)))), TYPEOF(DISTINCT ((rt0.c4)<=(rt1.c2))) FROM rt1, t0, vt0, rt0; -- 3ms;
SELECT ALL ((((t0.c19)>=(rt0.c1))) BETWEEN (SUM(rt0.c3)) AND (MAX(rt1.c0))) FROM t0, rt0;SELECT DISTINCT CASE ((t0.c19)GLOB(vt0.c0))  WHEN CASE rt1.c2  WHEN t0.c2 THEN t0.c45 ELSE rt0.c3 END THEN ((t0.c1) IS FALSE) END, ((((t0.c19) NOT NULL))>>((('-1475121488')+(rt1.c1)))), (((AVG(rt1.c2), NULL, ((t0.c0)|(t0.c45))))==((((0.7918469071654541) NOT NULL), MAX(rt1.c0, t0.c45, t0.c45, rt0.c4), ((t0.c1)<(rt1.c2))))) FROM rt1, vt0;SELECT ALL (('r') NOT BETWEEN ((rt1.c0 IN ())) AND (SUM(rt0.c3))) FROM t0, vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT CAST(HEX(DISTINCT rt0.c3) AS NUMERIC), (((t0.c1)) NOT BETWEEN (((((rt0.c4))>((rt0.c3))))) AND (((~ (t0.c45))))), ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) AND (((vt0.c0)<>(rt1.c1)))), ((((t0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))<>(rt1.c1)), COUNT((((rt1.c0, rt0.c3, rt0.c3))==((t0.c19, rt0.c4, rt0.c3)))) OVER () FROM rt1, vt0 CROSS JOIN t0 ON CASE json_array_length(rt0.c3)  WHEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c2 THEN rt0.c3 END THEN ((t0.c0) NOTNULL) ELSE rt0.c4 COLLATE NOCASE END WHERE ((json('') IN ())) GROUP BY ((CAST(rt1.c0 AS NUMERIC)) IS TRUE) HAVING (((((((((('Ae')||(t0.c2)))OR(MIN(NULL))))AND(((rt1.c2)|(rt0.c4)))))AND((rt0.c1 IN ()))))AND(CAST(t0.c2 AS REAL)));SELECT DISTINCT ((((((((((rt0.c1)%(rt0.c3)))OR('-1946163461')))AND(x'c851' COLLATE RTRIM)))OR((~ (t0.c0)))))OR(((rt0.c4)+(rt0.c2)))) FROM rt1, rt0 WHERE ((NOT (((-64716444) NOTNULL)))) GROUP BY (((((((((rt0.c0)OR(t0.c0)))OR(t0.c1)))AND(t0.c0)))AND(rt0.c3)) IN ()) LIMIT 2061824115;SELECT ALL CASE WHEN rt0.c3 THEN rt0.c1 ELSE t0.c19 END COLLATE BINARY, 0.6819426250365324, 0Xfffffffff6f246c5 FROM vt0, rt1;SELECT ALL (+ ((t0.c1 IN ()))) FROM rt0, rt1, vt0, t0 WHERE ((((((((0.13422178995972533))<((x'c819'))))AND((((('1078636096')AND(-4.90957351E8)))AND('-1946163461')))))AND((((('5>QA')OR('਀')))AND(NULL))))); -- 0ms;
SELECT CASE ((rt0.c4) ISNULL)  WHEN CASE rt0.c0  WHEN rt0.c1 THEN t0.c45 ELSE t0.c0 END THEN (+ (rt1.c2)) WHEN rt0.c4 THEN (rt0.c1 IN ()) WHEN SUM(t0.c1) THEN x'899b' COLLATE BINARY ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)) END, ((rt0.c2)>=(rt0.c0)) COLLATE RTRIM, (((((t0.c2)) BETWEEN ((rt0.c4)) AND ((t0.c19))))AND(rt0.c3)) FROM rt0, vt0, t0, rt1; -- 0ms;
SELECT DISTINCT NTILE((~ ((((t0.c1, vt0.c0, t0.c45))=((-1714062709, t0.c0, NULL)))))) OVER (), ((((((((t0.c19)AND('㘴*圣L6{l	' COLLATE NOCASE)))AND(((t0.c1)%(rt0.c3)))))AND((((t0.c19, rt0.c2, t0.c45)) NOT BETWEEN ((rt1.c2, 0.11669317256544409, rt1.c0)) AND ((t0.c0, t0.c45, rt1.c2))))))AND(((((rt0.c3)AND(t0.c19)))AND(rt1.c2)))), (((((NOT (rt1.c2)))OR((('')||(t0.c2)))))AND(rt1.c0)) FROM vt0, t0 WHERE (((('簻O')IS NOT(-6.64494695E8)) IN (((0X4a6acc5f) NOTNULL))));SELECT ALL TOTAL(CAST(vt0.c0 AS INTEGER)), ((((((t0.c1)IS NOT(rt0.c4)))OR(t0.c0)))OR(CASE t0.c45  WHEN 0.3305386850858998 THEN '' WHEN rt0.c4 THEN rt1.c1 WHEN rt0.c4 THEN t0.c1 END)), DENSE_RANK() OVER () FROM vt0, t0;SELECT (t0.c45 IN (t0.c1)) COLLATE RTRIM FROM vt0, rt0, rt1 WHERE (CASE WHEN x'' COLLATE RTRIM THEN CASE ''  WHEN '' THEN x'' END ELSE (0.9700580488878312 IN ()) END);SELECT ALL ((((((((rt1.c2)AND(rt1.c1)))AND('')))AND((rt0.c3 IN ()))))AND(((t0.c45)<>(rt1.c0)))) FROM vt0; -- 0ms;
SELECT ALL AVG(CASE WHEN t0.c45 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 ELSE rt1.c2 END) OVER ( ORDER BY ((((t0.c2)GLOB(rt0.c3))) NOT BETWEEN ((rt0.c2 IN ())) AND ('r*옪3gHokW'))  NULLS FIRST), CASE MIN(t0.c1)  WHEN ((278955233)<(t0.c0)) THEN CASE WHEN 1.341606653E9 THEN t0.c19 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END ELSE rt0.c3 COLLATE BINARY END, ((x'')OR(((rt0.c2)%(t0.c0)))) FROM rt0, t0, rt1, vt0; -- 0ms;
SELECT DISTINCT ((rt1.c0 COLLATE NOCASE)|(((t0.c45) BETWEEN (rt0.c0) AND (vt0.c0)))) FROM vt0;SELECT DISTINCT (((- (t0.c2)))<>(CASE NULL  WHEN 'MX3h' THEN rt0.c0 ELSE vt0.c0 END)) FROM vt0, rt0, t0 NOT INDEXED, rt1 WHERE ((('-1735635175') NOTNULL)); -- 0ms;
SELECT (((((t0.c2) BETWEEN (t0.c45) AND (rt0.c1)), GROUP_CONCAT(rt0.c2), (((rt0.c2))<>((rt1.c0)))))<((CAST(t0.c1 AS INTEGER), ((rt1.c0) BETWEEN (rt0.c3) AND (t0.c1)), NULLIF(rt1.c1, rt0.c0)))) FROM vt0, rt0;SELECT DISTINCT AVG((((t0.c0, t0.c45, rt0.c4))<=((rt0.c2, rt1.c0, rt0.c1)))) OVER () FROM rt0 WHERE ((((~ (0.22836342814583244))) NOT NULL));SELECT ALL SUM(LIKELY(t0.c1)) OVER () FROM t0, rt1, rt0, vt0; -- 0ms;
SELECT ALL CASE (('876024615')||(rt1.c0))  WHEN ((((((((rt1.c1)OR(rt0.c0)))OR(t0.c2)))OR(rt0.c1)))OR(rt0.c3)) THEN vt0.c0 ELSE ((NULL)GLOB(x'')) END, '1400909489', CAST(t0.c2 AS BLOB) FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c3) NOT BETWEEN (t0.c45) AND (rt0.c3)) COLLATE BINARY;SELECT SUM((t0.c45 IN ())) OVER () FROM rt0, rt1, vt0 WHERE (((GLOB(x'b17e', x'')) ISNULL)) ORDER BY ((SQLITE_VERSION()) IS TRUE); -- 0ms;
SELECT ((ABS(DISTINCT t0.c0))LIKE(AVG(t0.c1))), NTILE(rt1.c2) OVER (), CASE WHEN GROUP_CONCAT(t0.c1) THEN ((vt0.c0) NOTNULL) ELSE ((NULL) BETWEEN (rt0.c4) AND (rt1.c2)) END FROM rt1, t0 WHERE ((((x'' IN (0xffffffffd9fada8f)))+(CAST('511971850' AS INTEGER))));SELECT DISTINCT ((((rt1.c2) NOT BETWEEN (t0.c19) AND (rt0.c4)))*(((rt0.c2)<<(rt0.c4)))) FROM rt1, vt0, t0 WHERE ((NOT ('' COLLATE RTRIM)));SELECT ALL ((rt0.c2 COLLATE BINARY) IS FALSE) FROM t0, rt1, vt0 WHERE (UNLIKELY(DISTINCT (+ (268659084))));SELECT DISTINCT rt0.c2 FROM rt1;SELECT ALL UNLIKELY(DISTINCT t0.c0) COLLATE RTRIM, (NOT (((rt0.c0)AND(rt0.c2)))), ((((rt0.c3) NOT NULL)) NOT NULL) FROM rt0, rt1 WHERE (((((0.9864192292955942) IS TRUE))<((1.01954946E9 IN ()))));SELECT DISTINCT CASE (- (rt1.c0))  WHEN (+ ('')) THEN (+ (t0.c0)) WHEN ((rt1.c2) IS TRUE) THEN (rt0.c1 IN (vt0.c0)) WHEN ((t0.c45)%(rt1.c2)) THEN ((((-1.049736208E9)AND(rt0.c1)))AND(rt1.c1)) END FROM t0 WHERE ((((((0.21073308874703378, 0.5176353545441525, '981200233'))!=((NULL, '1639188994', '')))) NOT NULL));SELECT ALL CAST(rt0.c0 COLLATE NOCASE AS TEXT) FROM vt0, rt0, rt1, t0; -- 1ms;
SELECT CASE CASE t0.c45  WHEN rt1.c0 THEN '-1489245452' END  WHEN ((t0.c0)==('-524229470')) THEN CAST(rt0.c3 AS BLOB) END FROM rt1, t0, rt0 WHERE ((((x'' IN (NULL, -1.442010214E9)))<(IFNULL('nk^똟Z䨱', NULL)))); -- 0ms;
SELECT DISTINCT 0x3ff8a5ea FROM vt0, t0, rt1, rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((rt0.c2)|(((rt0.c1)<<(t0.c19))))) OVER ( GROUPS  UNBOUNDED PRECEDING), (t0.c0 IN ()) COLLATE NOCASE, ((((t0.c45)&(t0.c1))) BETWEEN (((t0.c19) BETWEEN (t0.c0) AND (rt1.c0))) AND (rt0.c1 COLLATE NOCASE)) FROM vt0, rt0, rt1, t0 GROUP BY ((((CAST(rt1.c1 AS NUMERIC))AND((((t0.c0, NULL, t0.c1))<=((rt0.c0, vt0.c0, t0.c45))))))OR(((t0.c45) ISNULL))) HAVING rt1.c0; -- 0ms;
SELECT CASE WHEN CASE rt0.c4  WHEN t0.c19 THEN t0.c2 ELSE rt1.c2 END THEN ((t0.c2) IS FALSE) ELSE (((rt0.c1))<>((NULL))) END, CAST(((rt0.c3)&(rt0.c0)) AS BLOB), x'' FROM rt0, vt0 WHERE (' %Wwb%hl');SELECT 0.3705484857454854 FROM vt0, rt1, rt0 WHERE (CASE WHEN ((0.548240782494492) NOT NULL) THEN (((NULL, '0.0', x''))==(('	^', '-636169071', '1F5ጧ|'))) ELSE '-626137063' COLLATE RTRIM END) ORDER BY (((CAST(rt0.c1 AS REAL)))<=(((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1)))))); -- 0ms;
SELECT ALL (((((((rt1.c0))==((-1.39893615E8))))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))AND(((rt0.c0)!=(rt1.c1)))) FROM rt1, vt0, t0 WHERE (CASE LOWER(NULL)  WHEN '-959364524' COLLATE RTRIM THEN (x'55f6' IN ('-1765859283')) ELSE '1358425606' COLLATE NOCASE END) GROUP BY LIKELY(DISTINCT ((NULL) NOT BETWEEN (rt1.c2) AND (t0.c19))), ((t0.c19) IS FALSE), CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c19)) AS REAL) HAVING ((0.3720725770644857)*(t0.c0 COLLATE BINARY));SELECT DISTINCT ((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))IS(((rt1.c1)<>('-295333722')))) FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT (- (CASE t0.c1  WHEN NULL THEN 1761918130 ELSE t0.c0 END)) FROM rt0, rt1;SELECT DISTINCT CUME_DIST() OVER ( ORDER BY (- (((rt0.c0)+(t0.c45))))  NULLS FIRST) FROM rt0 WHERE (((((((((((((x'')AND(x'')))AND(x'')))AND(-1.39893615E8)))OR(0xffffffffd7dfc899)))OR((((((((('t쯕H윌')OR(x'')))OR(x'')))OR('')))OR('o-c')))))OR(((x'')%('L>')))));SELECT DISTINCT TOTAL(0X6c6527d5) OVER (), '-673199975', CUME_DIST() OVER () FROM rt0, vt0, rt1 WHERE ((+ (((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, rt0 ORDER BY ((((t0.c2) BETWEEN ('jR삏+u\<꧄Y') AND (rt0.c0))) NOTNULL);SELECT SQLITE_SOURCE_ID() FROM vt0; -- 0ms;
SELECT DISTINCT QUOTE(COUNT(*)) FROM vt0, rt1; -- 1ms;
SELECT DISTINCT CAST(((t0.c0)==(t0.c0)) AS NUMERIC), ((CAST(rt0.c2 AS REAL))>(((rt0.c4) IS TRUE))), CASE ((t0.c0) NOT NULL)  WHEN NULL THEN ((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) END FROM vt0, rt0, t0;SELECT DISTINCT (((((((((((rt0.c0)) BETWEEN (('-1362156088')) AND ((vt0.c0))))AND(AVG(rt1.c0))))OR((((t0.c1, t0.c2, t0.c2, rt0.c0, rt1.c1)) NOT BETWEEN ((rt0.c2, t0.c19, t0.c0, rt0.c1, '-0.0')) AND ((rt0.c2, t0.c1, rt1.c2, rt0.c1, t0.c45))))))OR((+ (t0.c2)))))OR(((rt1.c2)+(rt1.c1)))) FROM rt1 FULL OUTER JOIN vt0 ON ((NULL) NOT NULL) FULL OUTER JOIN rt0 ON ((((((NULL) NOT BETWEEN (t0.c1) AND (rt1.c2)))OR(((((rt1.c1)OR(rt0.c1)))OR(t0.c1)))))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c19)))) RIGHT OUTER JOIN t0 ON x'' WHERE (((((((NULL) IS TRUE))AND((('N8Nk\')IS NOT(x'')))))AND(((0.555908400030192) IS FALSE))));SELECT DISTINCT LAST_VALUE(COALESCE(((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c2)), NULL)) OVER ( GROUPS  CURRENT ROW) FROM vt0, rt0, rt1, t0; -- 0ms;
SELECT DISTINCT COUNT(((((((((vt0.c0)AND(t0.c0)))AND(rt0.c4)))OR(t0.c0)))OR(t0.c0))) OVER ( GROUPS ((((('W^NH!\r', rt1.c1, rt1.c1)) NOT BETWEEN ((rt0.c1, 0.18082320706569777, rt0.c1)) AND ((t0.c45, rt1.c2, rt0.c3)))) NOT BETWEEN ((t0.c2 IN (rt1.c0))) AND (NULL)) PRECEDING EXCLUDE CURRENT ROW) FROM vt0, t0, rt1, rt0 WHERE ((((x'7691', (('敼') NOT BETWEEN (x'6b5e') AND (x'6d94')), ((0.856670275496683)>>(''))))<=(('' COLLATE NOCASE, (('802897236')|(0.35095540755744115)), ((1975191894) NOT BETWEEN ('-968515582') AND (NULL)))))); -- 0ms;
SELECT ((((((t0.c0, rt1.c1, rt0.c3))<((rt1.c2, t0.c0, vt0.c0)))))<((((vt0.c0) ISNULL)))), (((('uu.vr') NOT NULL))==(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))), COUNT(*) FROM rt0, t0, vt0, rt1 ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (t0.c0) AND (rt0.c3)))) AND (((((rt0.c2, '1474799700', rt0.c2)) NOT BETWEEN ((rt1.c2, t0.c1, t0.c1)) AND ((rt0.c1, rt0.c2, rt1.c2)))))) ASC; -- 0ms;
SELECT ALL (rt0.c0 IN (rt0.c0, ((((rt0.c2)OR(rt1.c1)))OR(rt0.c2)))), '-1946163461', ((((rt0.c2)LIKE(rt1.c2))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (LIKELIHOOD(DISTINCT rt1.c2, 0.5836623516838902))) FROM t0, rt1, vt0 WHERE ((~ (0.7018258074912695 COLLATE RTRIM)));SELECT ALL (((((((((((((('748690181') NOT BETWEEN (rt0.c2) AND (rt0.c3)))AND((NOT ('e&')))))OR((- (t0.c2)))))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)))))AND(((((((((t0.c19)AND(t0.c0)))AND(t0.c45)))OR(rt1.c1)))OR(1010848783)))))OR(((((((((rt0.c3)AND(rt0.c0)))OR(rt1.c1)))AND(t0.c19)))OR(0.16440221558130808)))))OR(((rt1.c2)!=(vt0.c0)))), MAX(COUNT(rt0.c3 COLLATE BINARY)), LAST_VALUE(CAST((vt0.c0 IN ()) AS TEXT)) OVER () FROM vt0;SELECT CASE WHEN '820469093' THEN CASE rt1.c0  WHEN rt0.c3 THEN vt0.c0 ELSE t0.c45 END WHEN rt0.c2 THEN rt1.c0 COLLATE RTRIM WHEN '-784484561' COLLATE BINARY THEN ((((t0.c45)OR(rt0.c0)))AND(rt1.c0)) ELSE ((rt0.c2)!=(t0.c2)) END FROM t0 ORDER BY (~ (((t0.c1)&(rt0.c0)))) ASC  NULLS LAST;SELECT DISTINCT ((CASE WHEN rt1.c2 THEN t0.c2 END)<=(((((((((rt1.c0)OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c4)))AND(rt0.c4)))) FROM rt1, t0, vt0, rt0; -- 0ms;
SELECT DISTINCT (rt1.c0 IN ()) FROM t0, vt0 WHERE (x'' COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt0.c0)!=(t0.c0)))-((rt0.c0 IN ()))) FROM vt0, rt1, rt0, t0; -- 0ms;
SELECT DISTINCT ((((((x'') NOT BETWEEN (t0.c1) AND (rt0.c4)))AND(NULL)))AND(json_insert(t0.c19, 0.19416347653873844, rt0.c3))), '-1626454969', (NOT (((rt0.c0)<(rt0.c0)))) FROM rt0, rt1;SELECT CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC) FROM rt1, vt0, t0 WHERE (((((x'fabd')/(x'')))OR(''))) ORDER BY (+ ((t0.c2 IN (t0.c45)))) ASC, ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c2))) BETWEEN (((t0.c19) NOT NULL)) AND ((rt0.c3 IN ())))  NULLS LAST, ((x'9ab8') BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY DESC  NULLS LAST;SELECT DISTINCT ((((CASE t0.c19  WHEN rt0.c3 THEN rt1.c0 END)AND((((t0.c19, rt0.c2, rt1.c1)) NOT BETWEEN ((t0.c0, rt1.c2, rt0.c3)) AND ((0.5209677336372152, t0.c19, rt1.c2))))))OR(((rt1.c1)=(t0.c2)))) FROM rt1, vt0 WHERE (((((NULL) BETWEEN ('-11261988') AND (0.22664022360937908))) IS FALSE)) GROUP BY (+ (t0.c45)) HAVING CAST(CASE t0.c45  WHEN rt0.c4 THEN t0.c0 END AS BLOB) LIMIT -1475121488 OFFSET 831735027;SELECT CAST(t0.c1 COLLATE RTRIM AS REAL) FROM rt0 WHERE ((x'b665' COLLATE BINARY IN ()));SELECT (~ ((rt1.c1 IN ()))), vt0.c0, ((((rt1.c0) BETWEEN (t0.c45) AND (t0.c1))) IS TRUE) FROM t0, rt1 WHERE ((- ((('2005175679')&(-729202022)))));SELECT ALL SUM(((-1451165285)+(rt1.c2))) OVER (), 0.6191582383329084, CAST(((rt0.c2)*(t0.c45)) AS TEXT) FROM rt0 WHERE (((((CHANGES())OR((('|tv2VbF')<=(x'3e9b')))))AND(x'')));SELECT DISTINCT '-139893615' FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL ((((CASE rt1.c2  WHEN rt1.c2 THEN 'Ckw' WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c0 THEN 0.09985871260989132 END)OR((+ (t0.c0)))))OR(CASE rt0.c4  WHEN rt1.c2 THEN rt1.c2 END)) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT (~ (0.1858254820362144)), ((t0.c2 COLLATE RTRIM)>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END)), ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((t0.c45 IN ())) AND ((NOT (t0.c2)))) FROM rt1, rt0 GROUP BY ((t0.c19) BETWEEN (rt0.c4) AND (rt1.c2)), (((t0.c19))>((ABS(DISTINCT t0.c45)))), (((((t0.c2)) BETWEEN ((rt0.c4)) AND ((rt1.c0)))) BETWEEN (((t0.c1) ISNULL)) AND (rt1.c1)) ORDER BY ((CAST(rt1.c1 AS REAL)) IS TRUE) ASC  NULLS FIRST LIMIT 12478185;SELECT DISTINCT (((((rt1.c1)) BETWEEN ((rt0.c4)) AND ((t0.c1))))-((((t0.c2, t0.c45, rt1.c2)) BETWEEN ((rt0.c4, t0.c1, -1247023110)) AND ((-4.90957351E8, rt1.c2, t0.c2))))), ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (t0.c19)))AND(t0.c45 COLLATE BINARY)))OR(COUNT(*))), ((CASE rt0.c0  WHEN rt1.c1 THEN '0.3469796950303362' END) NOT BETWEEN (LOWER(x'58e1')) AND (rt1.c0 COLLATE BINARY)) FROM vt0, rt0, rt1;SELECT ALL t0.c45 FROM vt0, rt1, rt0, t0 GROUP BY CASE CASE WHEN rt0.c4 THEN 'V' WHEN 0.16179007996446138 THEN rt1.c2 WHEN t0.c0 THEN t0.c45 END  WHEN (rt0.c1 IN ('')) THEN CAST(t0.c45 AS REAL) ELSE ((vt0.c0)|(t0.c2)) END; -- 1ms;
SELECT ALL x'', (((MIN(rt0.c3)))<(((((rt0.c0))<>((rt1.c1)))))), 0.19713861205366756 FROM vt0, t0;SELECT DISTINCT CAST(rt1.c2 AS NUMERIC), CASE WHEN rt0.c3 THEN LIKELIHOOD(DISTINCT vt0.c0, 0.1929202251803004) END, CASE WHEN CAST(t0.c19 AS NUMERIC) THEN ((((rt1.c2)OR(x'00a4')))OR(t0.c1)) WHEN ((t0.c0)&(rt1.c2)) THEN CASE WHEN rt0.c2 THEN t0.c45 ELSE t0.c19 END WHEN ABS(DISTINCT t0.c1) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE t0.c2 END END FROM rt0 GROUP BY (((t0.c2 COLLATE RTRIM))<(('?jbk䥤'))), ((((t0.c1)|(rt0.c4))) ISNULL), ((((t0.c19) IS TRUE)) NOT BETWEEN (CASE t0.c2  WHEN rt1.c2 THEN rt0.c4 END) AND (t0.c1 COLLATE BINARY));SELECT (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE BINARY, (CAST(t0.c45 AS REAL) IN ()), (rt1.c1 IN ()) FROM t0, rt0 ORDER BY (((vt0.c0 IN ()))/(CASE WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 END))  NULLS LAST;SELECT DISTINCT (((((((((+ (rt0.c2)))AND(rt1.c2 COLLATE RTRIM)))AND((((t0.c2))<=(('-697212936'))))))OR(((rt0.c0)<=(rt1.c0)))))AND(((rt1.c0)+(rt0.c0)))), COUNT(CAST(rt0.c2 AS BLOB)) OVER (), (((((((((((t0.c45, rt1.c1, rt0.c3)) BETWEEN ((t0.c0, rt1.c1, rt1.c0)) AND ((t0.c19, 0.5498896329134996, t0.c19))))OR(GROUP_CONCAT(x''))))OR(highlight(t0.c2, rt0.c3, rt0.c0, rt0.c2))))AND(((rt0.c2) ISNULL))))AND((rt0.c4 IN ()))) FROM vt0, t0, rt0, rt1 GROUP BY '1472078820' HAVING CAST(t0.c45 COLLATE BINARY AS TEXT); -- 0ms;
SELECT COUNT(*) FROM t0; -- 0ms;
SELECT (((~ (t0.c19))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND ((~ (rt1.c1)))) FROM rt0, rt1;SELECT DISTINCT SUM(x'') FROM rt1, rt0, t0, vt0 WHERE (((json_valid('1019549460')) BETWEEN (278955233) AND ((((1.341606653E9)) BETWEEN ((0.4315219354475822)) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt1, rt0, t0, vt0; -- 1ms;
SELECT ((((((((rt0.c0)OR(rt1.c0)))OR(rt0.c0)))AND((rt0.c3 IN ()))))OR(INSTR(t0.c1, t0.c1))) FROM rt1 WHERE ((((((NULL, NULL, 'nZg8'))>=((NULL, 0.43766791448720055, 0.9478038064066036))))+(((NULL)=(0.9688416835817069)))));SELECT DISTINCT (((NOT (t0.c1)))%(t0.c19)), '752295924', ((((TOTAL(rt1.c0))AND(rt0.c0 COLLATE RTRIM)))AND(AVG(t0.c19))) FROM vt0, rt0, t0;SELECT DISTINCT CAST(((rt0.c2) IS FALSE) AS BLOB), (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))))==((MIN(rt1.c1)))), ((((rt1.c0))<>((t0.c1))) IN (rt0.c3 COLLATE RTRIM, t0.c19 COLLATE RTRIM)) FROM t0, rt1, rt0, vt0 WHERE (((((x'58b3') BETWEEN (NULL) AND (NULL))) NOT BETWEEN (CASE WHEN 0.1591252202215917 THEN '173456538' ELSE NULL END) AND (((-1.079858709E9) NOT BETWEEN ('-535891583') AND ('C{'))))); -- 0ms;
SELECT DISTINCT CASE (- (t0.c1))  WHEN ((t0.c1)<<(t0.c19)) THEN (+ (t0.c45)) END, rt1.c1, CASE (((((((('')OR(rt1.c0)))AND(rt0.c0)))OR(t0.c1)))AND(t0.c0))  WHEN MAX(t0.c19) THEN ((t0.c1) IS FALSE) WHEN '0.17659179171914297' THEN MIN(rt0.c1, rt0.c1) WHEN ((rt0.c3)/(rt0.c3)) THEN CAST(vt0.c0 AS INTEGER) END FROM vt0 WHERE (((((0x7249cfb2)AND(0.15011020955652477 COLLATE RTRIM)))AND(CAST(NULL AS TEXT)))) LIMIT 1388056762;SELECT ALL TYPEOF(((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1))) FROM rt0, t0, rt1 ORDER BY (((vt0.c0) ISNULL) IN (((rt0.c0) BETWEEN (rt1.c0) AND (t0.c19)))), ((x'34ade245')+('-1577938319')) ASC LIMIT 1264644206 OFFSET -1501924660;SELECT CASE WHEN ((((rt0.c1)AND(rt1.c1)))AND(rt0.c4)) THEN t0.c2 WHEN IFNULL(DISTINCT vt0.c0, t0.c19) THEN t0.c45 COLLATE NOCASE WHEN 0Xffffffffacb6e825 THEN ((((t0.c1)OR(vt0.c0)))AND(t0.c45)) END FROM rt1 WHERE (ABS(((((1.01954946E9)AND(NULL)))OR('-1221906818'))));SELECT DISTINCT ((((t0.c0) ISNULL))<=(((rt0.c0)LIKE(t0.c2)))) FROM rt0, t0, rt1 WHERE (CAST((NOT (0.17217188386128912)) AS INTEGER)) LIMIT -1889159589 OFFSET 746484803; -- 0ms;
SELECT DISTINCT COUNT(((rt1.c2)>>(t0.c45))) OVER () FROM vt0, rt0 WHERE ((((((('0.48657756137191943')GLOB(0.5482937400401108)))OR(CASE '108024837'  WHEN NULL THEN NULL END)))AND(((x'') NOTNULL)))) GROUP BY CASE CASE WHEN rt0.c4 THEN rt1.c0 ELSE t0.c19 END  WHEN ((((rt0.c1)OR(0.3796772979582165)))OR(rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN rt1.c0 THEN 0X3e87d813 WHEN (((rt0.c2)) BETWEEN ((rt1.c1)) AND ((NULL))) THEN (t0.c19 IN ()) ELSE rt0.c4 END;SELECT ((((t0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))<(t0.c1 COLLATE BINARY)) FROM vt0, rt0, rt1;SELECT ALL (((((t0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN (CAST(t0.c19 AS NUMERIC)) AND ((((vt0.c0))==((t0.c0))))), RANK() OVER (), ((((rt0.c4) BETWEEN (t0.c0) AND (rt0.c1))) NOT NULL) FROM rt1 WHERE (x'');SELECT (((((((rt0.c4)AND(rt0.c2)))AND(t0.c2))))>=((((rt0.c0)LIKE(rt1.c2))))) FROM vt0, t0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((((CASE t0.c45  WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c3 THEN t0.c1 WHEN t0.c0 THEN t0.c45 ELSE rt0.c0 END)AND(IFNULL(rt1.c2, t0.c2))))OR(((t0.c45)OR(t0.c2)))))OR(((((((((2.2628948E8)OR(t0.c1)))AND(rt0.c1)))AND(rt1.c0)))AND(rt1.c2)))))OR(CAST(rt1.c0 AS INTEGER))) FROM vt0, t0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((t0.c2)IS NOT(rt1.c0)))LIKE((+ (t0.c45)))), ((NULL)IS NOT(CAST('659226496' AS INTEGER))), COUNT(((rt0.c0)AND(rt0.c2))) FROM rt0 WHERE ((((((NULL)!=(NULL)), TYPEOF('玗G%a#*﨏'), ((0X6a192ff2)+(x'')), ((NULL)IS NOT(0.685050436909355)), GLOB(NULL, 0xffffffffb39a18d8)))<>(((('‭-') NOT BETWEEN (0.37644598527657414) AND ('A㕈')), CASE '-1946163461'  WHEN '92356483' THEN 743346527 ELSE NULL END, ((x'') NOT BETWEEN ('442933565') AND (x'e2d8')), (+ ('-1889159589')), 'iD')))) GROUP BY '-535891583' COLLATE BINARY, CASE -1186527500  WHEN CAST(rt1.c1 AS INTEGER) THEN t0.c45 WHEN ((((rt0.c2)OR(NULL)))AND(t0.c19)) THEN ((vt0.c0) NOTNULL) WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c0) IS TRUE) END, UPPER(CAST(t0.c19 AS REAL)) HAVING ((((((((((rt1.c1)IS NOT(rt1.c1)))OR(((NULL) NOT BETWEEN (rt1.c1) AND (rt0.c3)))))OR(CAST(t0.c1 AS REAL))))OR(((t0.c19) NOT NULL))))OR(t0.c45));SELECT DISTINCT CAST(((rt0.c1)!=(t0.c45)) AS NUMERIC), -1.362156088E9, ((((t0.c1)*(t0.c2)))-(rt0.c3)) FROM rt1, vt0, rt0 WHERE (((('') NOT BETWEEN (0.15268298636460076) AND ('2006022244')) IN ((+ (NULL)), UPPER(1917726041)))) GROUP BY (((('') NOT NULL)) ISNULL);SELECT DISTINCT CAST(((rt0.c3) NOTNULL) AS INTEGER) FROM rt0 WHERE (((0.9339973468388157) NOTNULL)) LIMIT -1765859283 OFFSET -854870145; -- 0ms;
SELECT DISTINCT (((((rt0.c0, t0.c1, t0.c1)) BETWEEN ((0.027320925138652696, 0.2814913012722502, rt0.c0)) AND ((rt1.c2, t0.c0, x'cb82')))) IS TRUE) FROM rt1, rt0, t0, vt0 WHERE ((((NULL)&(0.7531533054912639)) IN ())) ORDER BY UPPER(DISTINCT (((rt0.c0))>((rt0.c2))))  NULLS FIRST; -- 0ms;
SELECT ALL CAST(CAST(rt0.c3 AS BLOB) AS NUMERIC) FROM rt1, rt0 GROUP BY (((t0.c0 IN ()))>=((- (t0.c19))));SELECT DISTINCT NULLIF(CASE rt1.c0  WHEN t0.c1 THEN rt0.c4 ELSE vt0.c0 END, CASE 1.917439922E9  WHEN '짗LtndD' THEN vt0.c0 END) FROM rt0, t0 INDEXED BY i40, rt1;SELECT (((rt0.c1, ',ꗥ*m{3''L', rt0.c3)) BETWEEN (((((t0.c0))<=((rt1.c0))), ((rt0.c3) IS TRUE), ((vt0.c0)IS NOT(rt0.c1)))) AND (((~ (rt0.c0)), ((rt1.c2)IS(t0.c19)), rt0.c0))), ((((t0.c0)<(rt0.c4))) NOT BETWEEN (((t0.c19) NOT BETWEEN (vt0.c0) AND (rt0.c0))) AND (rt0.c0)), ((((rt1.c1) BETWEEN (t0.c0) AND (t0.c1)))-(((NULL) ISNULL))) FROM vt0 WHERE (((((0.5407868828239472)%(NULL))) BETWEEN (TOTAL_CHANGES()) AND ((('-460050491') NOT BETWEEN ('-996819384') AND (NULL)))));SELECT ALL (~ (rt1.c2)) FROM rt0, vt0, t0, rt1; -- 0ms;
SELECT DISTINCT NTILE(rt1.c0) OVER () FROM rt0, vt0, t0, rt1; -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c1 AS INTEGER))AND(LIKELY(rt0.c2))))OR('J' COLLATE NOCASE)) FROM rt1, vt0 WHERE (CAST(x'' COLLATE BINARY AS REAL)) LIMIT 61591928 OFFSET 1417144832;SELECT ((CAST(rt0.c0 AS NUMERIC))>(CASE WHEN rt1.c1 THEN x'e787' ELSE rt0.c1 END)), CASE WHEN ((rt0.c4) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN rt0.c0 ELSE (((x'')) BETWEEN ((t0.c45)) AND ((t0.c0))) END, ((((rt0.c4) NOTNULL))/(((((((((t0.c0)OR(rt1.c1)))AND(rt0.c4)))AND(rt1.c2)))AND(rt1.c0)))), ((rt1.c1 IN ()) IN ()), CAST(x'' AS INTEGER) FROM t0, rt1 WHERE ((((((0.6362111391692838) NOTNULL)))<=((0X0))));SELECT DISTINCT COUNT(t0.c1), LEAD(((t0.c45) IS TRUE), x'23705cab', (CAST(0.5942039233049743 AS REAL) IN ())) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES), t0.c45 FROM t0 ORDER BY (((((rt0.c0)-(t0.c0))))<=(((rt1.c2 IN ()))))  NULLS LAST;SELECT DISTINCT (((rt0.c3 COLLATE RTRIM))<((GROUP_CONCAT(rt0.c4)))) FROM rt0, t0, rt1, vt0 WHERE ((((NULL) ISNULL) IN ())); -- 0ms;
SELECT DISTINCT (((NOT (t0.c45)))LIKE(((rt1.c2) ISNULL))), ((((t0.c0)OR(rt0.c0)))AND(t0.c19)) COLLATE RTRIM, ((((rt1.c0) NOT NULL))<=(((rt1.c1)/(-340302188)))) FROM t0 WHERE ((+ ((-2.95333722E8 IN ('|h~', ''))))) LIMIT 505724791 OFFSET -46608372;SELECT MIN(t0.c1 COLLATE NOCASE COLLATE BINARY) FROM vt0;SELECT ALL CAST(((rt1.c0)!=(rt0.c0)) AS REAL) FROM rt0 NOT INDEXED, t0 WHERE (((((((x'')-(0.2792632588634685)))AND(((x'0c6c')|(x'')))))OR(x''))) LIMIT 1005217101 OFFSET -1621954643;SELECT (((+ (rt1.c1))) IS FALSE) FROM vt0, rt0, t0, rt1; -- 0ms;
SELECT ((t0.c0)*(rt0.c0)) COLLATE RTRIM FROM t0, rt1, vt0 WHERE (((0X61faad45 COLLATE NOCASE)||(((('2105617319', '1917439922', -1.7976931348623157E308, 0x5af512c8, '1F5ጧ|'))>=(('292581830', '318053161', '278955233', NULL, 'C{')))))) GROUP BY (((rt0.c4 COLLATE RTRIM, DATE(t0.c45, NULL, rt0.c4), (vt0.c0 IN ())))>=((((t0.c0)<>(rt0.c2)), CASE rt1.c0  WHEN t0.c2 THEN t0.c45 END, (rt1.c2 IN (rt0.c3)))));SELECT DISTINCT (((((rt0.c2, t0.c2, rt0.c2)) NOT BETWEEN ((rt1.c2, rt1.c1, rt0.c2)) AND ((rt0.c0, t0.c1, rt0.c3))))<=((~ (t0.c1)))) FROM t0 WHERE (CASE (NOT ('0.8392696552856646'))  WHEN (NOT (x'7635c066')) THEN TRIM(DISTINCT NULL, NULL) WHEN CAST(x'0cf3' AS REAL) THEN ((('6u▰a'))<>((NULL))) WHEN CAST(1334409167 AS REAL) THEN ((('6', 2.105617319E9, 0.4099981568732516)) NOT BETWEEN ((NULL, '0.9912074125645113', 0x5f4bc111)) AND (('0.7772485073020692', '\nL', 0.665353900666049))) ELSE TYPEOF(0.656343238058322) END) GROUP BY (((t0.c1)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND ((LIKELY(DISTINCT '-637871473'))));SELECT CASE ((rt0.c3)>=('1571659722'))  WHEN (((rt0.c3, rt0.c1, t0.c0)) BETWEEN ((rt1.c1, vt0.c0, rt0.c4)) AND ((t0.c2, t0.c19, x''))) THEN t0.c0 COLLATE BINARY ELSE ((rt1.c1) NOT BETWEEN (t0.c0) AND (rt0.c3)) END FROM t0, rt1, vt0, rt0 WHERE (((((NULL) NOT BETWEEN (0.10074720833100625) AND (NULL)))-(CAST(0.8716589984323789 AS BLOB)))); -- 0ms;
SELECT ALL (((rt0.c2)LIKE(vt0.c0)) IN ()) FROM vt0, rt1, t0, rt0 WHERE ((((-697212936)) BETWEEN (((x'' IN (0.419399856615675)))) AND (((((x'd1271edb'))>=((0.7005462041115871))))))) GROUP BY (((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c1 ELSE t0.c2 END, CAST('' AS INTEGER), t0.c19))>=(((rt0.c2 IN ()), (+ (vt0.c0)), ((((rt1.c1)AND(t0.c45)))OR(t0.c19))))) HAVING x'8a12'; -- 0ms;
SELECT DISTINCT CASE (+ (t0.c0))  WHEN CAST(rt0.c2 AS INTEGER) THEN -2096367259 COLLATE BINARY WHEN CASE WHEN t0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c4)/(rt1.c0)) WHEN ((rt1.c0) NOT NULL) THEN CASE t0.c1  WHEN t0.c1 THEN t0.c45 END END, (+ ((((('225602078')OR(rt0.c0)))OR(t0.c19)))), ((((((t0.c19) BETWEEN (t0.c0) AND (t0.c1)))AND(rt0.c0)))OR(rt0.c1 COLLATE NOCASE)) FROM t0, vt0, rt0 WHERE (((NULL)LIKE(NULL)) COLLATE RTRIM);SELECT DISTINCT '' FROM t0, rt1, rt0 GROUP BY (t0.c19 COLLATE RTRIM IN (((rt1.c0) BETWEEN (t0.c0) AND (rt0.c2)))) HAVING (- (t0.c45)) COLLATE NOCASE; -- 0ms;
SELECT CAST(((rt1.c1) NOT NULL) AS NUMERIC) FROM t0, rt1, vt0, rt0; -- 0ms;
SELECT ALL COALESCE(DISTINCT CAST(vt0.c0 AS INTEGER), ((rt1.c1)>>(rt1.c0))), ((((rt0.c0) BETWEEN (t0.c2) AND (rt0.c2)))>=(((t0.c19)>>(vt0.c0)))), (((((rt0.c1)>>(t0.c0))))>((CASE t0.c19  WHEN rt0.c1 THEN t0.c1 END))) FROM vt0, t0 LIMIT -1111270501 OFFSET 1319059863;SELECT ALL (- (((rt1.c1) NOTNULL))), ((t0.c45 COLLATE BINARY)<>((- (rt0.c3)))), ((rt1.c2) ISNULL) FROM rt1, vt0, t0, rt0 WHERE (CASE WHEN ((x'3ab1') NOTNULL) THEN (((('-1451165285')OR('')))AND(NULL)) WHEN CAST(0.3729258740017808 AS INTEGER) THEN CASE WHEN NULL THEN '{}k!' ELSE x'' END WHEN CAST(0.5196839751314031 AS BLOB) THEN (('T') NOTNULL) END); -- 0ms;
SELECT COUNT(CASE WHEN 0.435040170414587 THEN t0.c19 WHEN t0.c1 THEN t0.c0 WHEN rt0.c2 THEN t0.c19 ELSE t0.c19 END) FILTER(WHERE (((rt1.c1) IS TRUE) IN ())) OVER () FROM rt1, rt0, vt0;SELECT DISTINCT (((2025118646))<>((((rt0.c4)GLOB(t0.c2))))), (((rt0.c4, t0.c45, rt0.c1, t0.c0, t0.c19, rt1.c0, rt0.c4)) NOT BETWEEN ((COUNT(x''), (+ (rt1.c2)), ((t0.c1)-(rt0.c1)), ((((rt1.c0)OR(t0.c2)))OR(rt1.c1)), t0.c45 COLLATE RTRIM, ((((t0.c19)OR(rt1.c2)))AND(t0.c45)), ((x'')<=(rt1.c0)))) AND ((t0.c19 COLLATE NOCASE, rt1.c0 COLLATE BINARY, t0.c0 COLLATE RTRIM, rt1.c2 COLLATE NOCASE, TOTAL(rt1.c2), ((rt1.c0)>>('9j4')), CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt1.c1 END))), COUNT(*) FROM t0 NOT INDEXED, rt1, vt0, rt0; -- 0ms;
SELECT ALL (((((((rt0.c2, t0.c19, t0.c1))<((t0.c0, vt0.c0, t0.c1))))OR((- (vt0.c0)))))AND((((rt0.c4))==((t0.c19))))) FROM t0, rt0, vt0 WHERE (CAST(CASE WHEN '-1943679427' THEN 'O2tm' END AS REAL)); -- 0ms;
SELECT ALL FIRST_VALUE(((rt0.c2 IN (rt1.c1, rt0.c4)) IN ())) OVER () FROM rt1, rt0, t0 WHERE ((NOT (x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((((((((x'') NOT NULL))AND(((rt1.c1)==(vt0.c0)))))OR(x'6b15')))AND(((rt0.c0) ISNULL))))AND(((t0.c0)>(rt0.c1)))), ((((t0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c4))) BETWEEN (rt0.c4) AND (x'')), rt0.c4, (((rt0.c3) NOTNULL) IN (((t0.c19)>>(rt1.c2)))), x'9ca8' FROM rt1, t0, rt0, vt0 WHERE (NULL) UNION SELECT DISTINCT NULL COLLATE RTRIM, ABS(DISTINCT (((rt0.c4)) NOT BETWEEN ((rt1.c2)) AND ((t0.c2)))), ((((json_array_length(t0.c2))AND(((t0.c1) BETWEEN (t0.c2) AND (rt0.c3)))))AND((+ (rt1.c2)))), (((rt1.c2))<=((rt0.c0))) COLLATE BINARY, TRIM(DISTINCT (~ (rt1.c0))) FROM rt0, vt0, t0, rt1 WHERE (CAST((('[8䬟j')==(0.1479899540766979)) AS TEXT)) ORDER BY (CASE t0.c2  WHEN vt0.c0 THEN rt1.c2 END IN (((rt1.c2) BETWEEN (t0.c45) AND (t0.c19)))) DESC, ((((rt0.c3)LIKE(rt0.c1)))||((((rt1.c2, rt0.c2, rt0.c3)) BETWEEN ((rt1.c1, rt0.c0, rt0.c3)) AND ((rt0.c0, rt1.c0, rt1.c0))))) DESC  NULLS FIRST;SELECT rt1.c0, ((json_valid(t0.c1))GLOB(CAST(rt0.c4 AS TEXT))), 0.17659179171914297 FROM rt0, rt1, vt0;SELECT ALL CASE WHEN CAST(rt1.c0 AS INTEGER) THEN t0.c0 COLLATE BINARY ELSE ((x'')|(t0.c19)) END FROM rt0 WHERE ((((((NULL))>=((0.7513857629182279))))LIKE(CASE WHEN 'XW' THEN x'' END))) GROUP BY ((rt1.c2 COLLATE RTRIM) NOT BETWEEN (x'') AND (((((rt0.c0)AND(vt0.c0)))AND(rt1.c1)))) HAVING (((rt0.c0 IN (t0.c19, rt0.c2))) BETWEEN (x'e4f0') AND (CASE rt1.c0  WHEN rt0.c2 THEN rt0.c4 ELSE t0.c2 END));SELECT DISTINCT ((((COUNT(t0.c2))AND(CASE WHEN rt0.c0 THEN t0.c45 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c19 END)))OR(((x'e22f') NOT NULL))) FROM t0, vt0;SELECT ALL CAST((t0.c0 IN ()) AS NUMERIC), ((0xffffffff81b77308)GLOB((~ (rt1.c1)))), '0.5176353545441525' FROM rt1, t0 WHERE ('0.049345490948532245'); -- 0ms;
SELECT DISTINCT SUM((NOT (rt0.c2))) OVER () FROM t0 ORDER BY NULL  NULLS FIRST;SELECT (((NULL))>=((rt0.c0))), '-1079858709', ((((t0.c19)OR(t0.c19)))OR(rt0.c1)) COLLATE RTRIM FROM rt0, rt1, t0, vt0 WHERE (CAST(CAST('-581685875' AS TEXT) AS BLOB)) GROUP BY TRIM((~ (t0.c2))) HAVING x'744c'; -- 0ms;
SELECT ALL ((((t0.c19)OR(CASE t0.c19  WHEN rt0.c1 THEN t0.c2 ELSE t0.c19 END)))AND((rt1.c2 IN ()))) FROM rt0, rt1, vt0, t0 GROUP BY (NOT ((('b') BETWEEN (x'') AND (t0.c1)))) ORDER BY LIKELIHOOD(HEX(DISTINCT rt1.c2), 0.8195078203161947) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (NOT (CAST(rt0.c4 AS REAL))) FROM rt0 WHERE ((((('1528056716') NOT NULL))+(((x'') NOT BETWEEN (NULL) AND (0.13141959761943778))))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0 WHERE (TRIM(DISTINCT 0.9250744942171598 COLLATE NOCASE)); -- 0ms;
SELECT ALL (- (0.7757029232193745)) FROM vt0, rt1 WHERE (CASE CASE '-656445947'  WHEN NULL THEN '602131871' END  WHEN ((NULL)IS(3.48860413E8)) THEN ((((x'')AND(0.6472030999661729)))AND(0.804656617829417)) END); -- 0ms;
SELECT DISTINCT COUNT(((rt1.c2)>=(vt0.c0))) FROM vt0, rt1, rt0, t0; -- 0ms;
SELECT DISTINCT LEAD(CHANGES(), (((CAST(vt0.c0 AS TEXT)))>=((TRIM(rt1.c1, rt0.c3)))), ((rt1.c1)AND(rt1.c0))) OVER () FROM vt0, rt0, rt1 GROUP BY ((t0.c19 COLLATE RTRIM)<((('836788895') IS TRUE)));SELECT ROW_NUMBER() OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE GROUP) FROM rt0, vt0, t0; -- 0ms;
SELECT ((t0.c2 IN ()) IN ()) FROM rt1, t0, vt0, rt0; -- 0ms;
SELECT AVG(x'aaf8') COLLATE NOCASE COLLATE RTRIM FROM t0, rt1 WHERE ((('1917439922')==(NULL)) COLLATE BINARY) GROUP BY t0.c1; -- 0ms;
SELECT DISTINCT CASE ((((((((rt0.c1)AND(t0.c19)))AND(t0.c45)))OR(rt1.c1)))OR(vt0.c0))  WHEN (t0.c45 IN ()) THEN CAST(x'' AS TEXT) ELSE ((t0.c45) IS FALSE) END FROM vt0, rt1 GROUP BY (NOT (((t0.c1)<=(rt1.c1)))), ((((((((((rt1.c2)+(rt0.c2)))AND(t0.c19)))AND(((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c3)))))OR('1396067103')))AND((t0.c1 IN (vt0.c0)))), (~ (((t0.c0) NOT BETWEEN (t0.c19) AND (rt1.c2)))) HAVING ((CASE rt0.c0  WHEN vt0.c0 THEN rt1.c1 ELSE rt0.c3 END) BETWEEN (rt1.c1 COLLATE BINARY) AND (TOTAL(rt0.c2)));SELECT MAX(((rt0.c3) NOT BETWEEN (t0.c19) AND (rt1.c1))), '696180315', MIN((('1459045920')=(rt0.c1))) FROM t0, rt0, rt1, vt0 WHERE (NULL); -- 0ms;
SELECT (- (((rt0.c0) NOT NULL))), (- (((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c4)))), '1474799700', NTILE(((((vt0.c0)>=(vt0.c0))) NOT NULL)) OVER (), TOTAL(((((rt1.c2)OR(vt0.c0)))OR(t0.c19))) FILTER(WHERE ((((((t0.c45) ISNULL))AND((((t0.c0, t0.c45, t0.c45)) BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((vt0.c0, t0.c2, t0.c45))))))AND(rt0.c2 COLLATE RTRIM))) OVER () FROM vt0 WHERE (((((((x'')AND(0Xffffffffa4be7697)))OR(NULL)))IS NOT(((('n6cq	aq~w'))>=((0X6e542277))))));SELECT DISTINCT ((((rt0.c1) NOTNULL))+(((((rt0.c2)OR(NULL)))AND(rt1.c1)))) FROM t0, rt1, rt0 WHERE (CAST((('壧}') NOT BETWEEN (NULL) AND ('-1181749109')) AS INTEGER)); -- 0ms;
SELECT DISTINCT t0.c19, FIRST_VALUE(((t0.c19 COLLATE NOCASE) BETWEEN ((+ (t0.c1))) AND (((t0.c2) BETWEEN (t0.c45) AND (t0.c19))))) OVER (), ((((((((rt0.c0)AND(NULL)))OR(x'df9f')))AND(t0.c45)))AND(t0.c19)) COLLATE RTRIM FROM vt0, t0;SELECT DISTINCT CASE WHEN (rt0.c1 IN ()) THEN (((rt0.c0, t0.c45, rt0.c0))>((rt0.c3, t0.c45, rt0.c2))) WHEN 0x6e542277 THEN IFNULL(rt1.c2, x'a3d8') WHEN ((rt1.c1)-(t0.c45)) THEN CAST(t0.c0 AS REAL) ELSE ((rt0.c0)*(rt0.c4)) END FROM rt0, rt1, t0, vt0; -- 0ms;
SELECT (((AVG(t0.c19), ((rt0.c2)IS(t0.c45)), x''))=((CASE WHEN t0.c0 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c4 END, load_extension(rt0.c2, rt1.c1), (((vt0.c0, t0.c0, rt1.c1)) BETWEEN ((rt0.c0, rt1.c0, rt0.c3)) AND ((rt0.c3, vt0.c0, t0.c0)))))), (NOT (rt0.c0 COLLATE BINARY)), (NOT (((t0.c19) IS TRUE))) FROM rt1 WHERE ((((NULL IN ()))+(CAST(NULL AS BLOB))));SELECT ((((((((((vt0.c0)>=(t0.c1)))OR(0.9278647972197546 COLLATE NOCASE)))OR(x'0ae0')))OR(((rt1.c0) NOT BETWEEN (-1863682515) AND (rt0.c4)))))AND(t0.c19 COLLATE BINARY)), LEAD((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c2)<=(t0.c45)), (((t0.c2, rt0.c0, t0.c19)) BETWEEN ((t0.c19, t0.c19, t0.c2)) AND ((rt0.c0, rt0.c1, rt0.c4))), t0.c1 COLLATE BINARY)) AND ((CASE rt0.c4  WHEN t0.c2 THEN t0.c45 END, (~ (t0.c2)), 0.11669317256544409))), NULL, (('1341606653' COLLATE BINARY)&(t0.c45))) OVER (), (NOT (t0.c2)) COLLATE RTRIM FROM rt0 NOT INDEXED, t0 WHERE (('-939081121' IN ()));SELECT DISTINCT NULL FROM rt1, rt0, vt0, t0; -- 0ms;
SELECT (- (CAST(vt0.c0 AS INTEGER))), (((rt1.c1)) BETWEEN ((TRIM(rt0.c1))) AND ((rt1.c2))), (((rt1.c1) NOTNULL) IN ()) FROM t0, vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((t0.c1)%(rt0.c4))) BETWEEN (((rt1.c1) IS FALSE)) AND (0.14492180078855377)) FROM rt1, vt0 NOT INDEXED, rt0, t0; -- 0ms;
SELECT GROUP_CONCAT('1574514332') OVER (), ABS((- (t0.c19))), GROUP_CONCAT(NULL) FROM rt1, vt0 WHERE ((((LIKE(NULL, NULL)))>=(((NOT (0Xffffffffd8df6e05))))));SELECT ALL NTILE(((CASE WHEN rt0.c0 THEN rt0.c1 ELSE x'1e70613a' END) ISNULL)) OVER () FROM rt1, rt0 WHERE (((CASE '876024615'  WHEN 0.2014431597784283 THEN 1627631068 END) IS FALSE)) GROUP BY (((rt0.c2, t0.c1, rt0.c1)) NOT BETWEEN ((t0.c45 COLLATE RTRIM, (((rt0.c3, rt1.c2, vt0.c0)) BETWEEN (('', t0.c0, rt1.c1)) AND ((t0.c19, rt0.c0, vt0.c0))), (((rt1.c2)) BETWEEN ((rt0.c4)) AND ((t0.c1))))) AND ((LIKELY(DISTINCT rt1.c1), NULL, (rt1.c1 IN ())))), ((t0.c1 COLLATE BINARY)OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c0 END)), CAST(((x'')==(t0.c2)) AS TEXT);SELECT (((''))!=((((t0.c0) NOTNULL)))) FROM rt1, t0, rt0 WHERE (((CAST(0xffffffff9dae2e2e AS BLOB)) NOT BETWEEN ('-970551103' COLLATE RTRIM) AND (CASE WHEN x'9af3' THEN 0.8066640646803588 ELSE x'' END))); -- 0ms;
SELECT DISTINCT (((rt1.c0)) BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (('-1489245452'))) FROM vt0, t0;SELECT 0.5384196415879706, rt0.c4, ((((t0.c0)OR(COUNT(rt1.c1))))AND(((rt1.c2) NOT NULL))) FROM rt1, rt0 WHERE (SQLITE_VERSION());SELECT DISTINCT t0.c1, CASE ((rt0.c1) NOT NULL)  WHEN CASE WHEN t0.c2 THEN rt0.c1 WHEN t0.c2 THEN rt0.c1 WHEN t0.c19 THEN t0.c1 END THEN (rt1.c0 IN ()) WHEN TOTAL(x'') THEN IFNULL(DISTINCT t0.c0, rt0.c3) WHEN TOTAL(rt1.c0) THEN (((rt1.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c0, t0.c1)) AND ((rt1.c1, rt0.c3, rt0.c4))) ELSE MIN(rt0.c2, t0.c2, rt1.c2, rt0.c2) END, ((((((t0.c0) BETWEEN (rt1.c0) AND (vt0.c0)))OR((0.7626566190445051 IN ()))))OR(json_array_length(t0.c45))) FROM rt1;SELECT ALL CASE WHEN LIKELIHOOD(t0.c0, 0.06269275455315482) THEN CASE t0.c45  WHEN rt0.c3 THEN t0.c19 ELSE rt0.c1 END END FROM t0 WHERE ((((- (NULL)))||(CASE 0.7350206168380069  WHEN x'' THEN x'' END)));SELECT DISTINCT (((('-1992566758')AND(CAST(t0.c45 AS NUMERIC))))OR((vt0.c0 IN ()))) FROM rt1, t0, vt0 WHERE ((((((((((NULL IN ()))OR(((x'467c')|(-6.4716444E7)))))OR((('467511583') BETWEEN ('-2020272993') AND (NULL)))))OR((- (0X6e542277)))))OR(LIKELIHOOD(x'', 0.7523806109002674)))); -- 0ms;
SELECT ALL (((rt0.c3, t0.c2, 1189743137)) NOT BETWEEN ((rt0.c0, t0.c0, rt0.c2)) AND ((t0.c2, rt1.c1, rt1.c0))) COLLATE BINARY FROM vt0 WHERE (CHANGES());SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((t0.c45 COLLATE RTRIM))) FROM rt1 WHERE ((- ('-0.0' COLLATE NOCASE))) GROUP BY ((CASE rt0.c0  WHEN t0.c2 THEN rt0.c4 WHEN rt0.c3 THEN t0.c19 WHEN rt1.c2 THEN vt0.c0 ELSE rt0.c0 END)%(((t0.c2) NOT NULL))), (((t0.c2)%(rt0.c0)) IN ()), x'', ((((rt0.c1)IS(t0.c1)))>((+ (rt0.c3)))), (((((((((NOT (t0.c2)))OR((((t0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c45))))))AND((((t0.c45, t0.c1, t0.c19)) NOT BETWEEN ((t0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, t0.c45, t0.c2))))))AND(((((rt1.c1)AND(t0.c45)))OR(rt0.c3)))))AND((x'' IN ()))), (((((t0.c0))>=((vt0.c0))))<<(CAST(t0.c0 AS INTEGER))), (((rt0.c3 IN (rt0.c2)))GLOB(rt0.c2)) HAVING COUNT(LIKELY(DISTINCT t0.c45));SELECT DISTINCT t0.c1 COLLATE BINARY FROM t0, rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((((((((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) IS TRUE))))AND('ouh^FZ]7')))AND(((((rt0.c3)OR(t0.c2)))OR(rt0.c1)))))AND(((((rt0.c4)AND(rt0.c1)))AND(rt1.c0)))))OR(((t0.c19)>(t0.c0)))))AND('-295333722'))) OVER ( ORDER BY (((rt1.c2)==(rt1.c0)) IN ()) ROWS  UNBOUNDED PRECEDING) FROM t0, rt0, rt1, vt0 WHERE ((((x'', '', NULL))<((x'', x'', x''))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((x'') NOT BETWEEN (((rt0.c3) IS TRUE)) AND (COUNT(*))) FROM t0, rt0 WHERE (CASE WHEN (0.6868022513655982 IN ()) THEN (((x'', '', 0.5477037408961356)) NOT BETWEEN ((1531677403, NULL, x'')) AND ((NULL, x'', NULL))) WHEN (~ ('-225175128')) THEN CAST(0.9857442529952175 AS TEXT) WHEN CAST(-1.475121488E9 AS INTEGER) THEN (+ (NULL)) ELSE ((-1414780690) NOT BETWEEN ('-139893615') AND ('김8R]5VEb')) END) GROUP BY CAST((x'' IN ()) AS BLOB) HAVING ((((t0.c0) BETWEEN (rt0.c4) AND (t0.c0))) ISNULL); -- 0ms;
SELECT ALL (((rt0.c4)>>(rt0.c1)) IN (load_extension(rt0.c0, t0.c19))) FROM rt1 WHERE (((('' IN ())) BETWEEN (LAST_INSERT_ROWID()) AND (CASE 0.47855264058499025  WHEN 0.21091318425725092 THEN x'' END)));SELECT DISTINCT ((((CAST(rt1.c0 AS BLOB))AND((rt0.c0 IN ()))))OR(((rt0.c3)*(rt1.c1)))) FROM vt0, rt0, rt1, t0; -- 0ms;
SELECT DISTINCT COUNT(*), (((~ (t0.c0))) NOT BETWEEN (rt0.c3) AND ((+ (t0.c0)))), ((CAST('876024615' AS BLOB))|((NULL IN ()))) FROM vt0, t0;SELECT DISTINCT (+ (rt0.c0)) COLLATE RTRIM, TYPEOF(DISTINCT CAST(0.11057670380307427 AS INTEGER)), ((rt1.c0)%(CASE WHEN rt0.c1 THEN t0.c45 END)) FROM rt0, rt1 LIMIT 440834096;SELECT ((((t0.c1)||(rt1.c1))) NOT BETWEEN ((+ (rt0.c2))) AND (((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) FROM t0, rt0;SELECT DISTINCT NULLIF(((rt0.c1) BETWEEN (vt0.c0) AND (NULL)), ((rt0.c0)/(rt0.c0))) FROM vt0, rt1 WHERE ((NOT (('0.6658648895913295' IN ()))));SELECT vt0.c0 FROM rt1 ORDER BY (CASE WHEN rt1.c0 THEN 0X31af7322 WHEN rt0.c0 THEN rt1.c1 WHEN t0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt1.c1 THEN rt1.c0 END IN ()) DESC  NULLS LAST;SELECT ALL (((((+ (rt0.c3)))AND(vt0.c0 COLLATE RTRIM)))AND(rt0.c4)) FROM rt1, vt0, t0, rt0 WHERE (LIKELIHOOD(((3.98743455E8) ISNULL), 0.178934495633583)) LIMIT -219314329 OFFSET 1335453878; -- 0ms;
SELECT TOTAL((rt1.c0 IN ())) FROM rt0; -- 0ms;
SELECT DISTINCT SUM(((rt1.c1)/(rt0.c4))) OVER ( ORDER BY rt0.c4  NULLS LAST) FROM vt0 WHERE (CAST(((('-870063050')) BETWEEN ((NULL)) AND (('-1362156088'))) AS TEXT));SELECT MIN(t0.c45) FROM rt0, t0, vt0 WHERE (CAST((- (0.9172853193272029)) AS INTEGER)) LIMIT 61591928; -- 0ms;
SELECT ALL UNLIKELY(CASE 1.078636096E9  WHEN rt0.c1 THEN t0.c2 ELSE t0.c2 END), ((((CAST(rt1.c1 AS INTEGER))AND((((t0.c1, vt0.c0, rt1.c1, t0.c19, t0.c45)) BETWEEN ((rt0.c2, rt1.c1, rt0.c1, rt0.c4, rt0.c3)) AND ((t0.c1, rt1.c0, rt0.c4, rt0.c3, vt0.c0))))))AND(((NULL)-(vt0.c0)))), SUM((- (rt1.c2))) OVER () FROM rt1, t0, rt0 ORDER BY (((SQLITE_VERSION(), ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)), ((((((((rt0.c0)AND(0.2922642797702176)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c0))))==((((((t0.c45)OR(t0.c19)))AND(x'97fa')), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c19)), 0Xffffffffaa0cab9a))) ASC  NULLS FIRST;SELECT DISTINCT '1155550824' COLLATE BINARY FROM rt0 INDEXED BY i40 WHERE (CASE 174261343  WHEN CAST('278955233' AS REAL) THEN CAST('534536574' AS INTEGER) WHEN ((NULL)|(NULL)) THEN CASE 'P<'  WHEN x'' THEN '0.7315310427996512' END WHEN CASE '-1577938319'  WHEN '~Skg' THEN 0.43049527248458275 END THEN ((-1856047915)<<(NULL)) END);SELECT DISTINCT CAST(CASE WHEN t0.c19 THEN vt0.c0 END AS TEXT) FROM vt0, rt0, rt1, t0 WHERE ((((((0Xffffffffb33299c8, x'', 0.6231603082321114))>=(('2w8D{ᒆ㐲', 0.2889332878831373, x'')))) NOT NULL)); -- 0ms;
SELECT ALL t0.c19 FROM t0, rt0, rt1 WHERE (0x3c4cac45 COLLATE RTRIM COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt0.c3)) BETWEEN ((((((NULL)AND(t0.c2)))AND(t0.c45)))) AND ((((((((((t0.c1)OR('')))AND(vt0.c0)))OR(t0.c0)))OR(t0.c45))))), ((t0.c45 COLLATE RTRIM) IS TRUE), ((((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c3))) BETWEEN (CASE WHEN rt0.c4 THEN rt1.c1 END) AND (TOTAL(t0.c2))) FROM t0, vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT (- (((rt0.c4)LIKE(t0.c2)))) FROM vt0, rt0;SELECT DISTINCT (vt0.c0 IN (rt0.c3 COLLATE BINARY, TOTAL_CHANGES(), CASE t0.c19  WHEN rt0.c2 THEN t0.c45 WHEN rt0.c2 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 END)) FROM vt0, rt0, t0 RIGHT OUTER JOIN rt1 ON (((rt1.c1) IS TRUE) IN ()) LIMIT 1632314445 OFFSET -1556071329; -- 0ms;
SELECT DISTINCT json_type(LIKE(vt0.c0, t0.c19, 'X')) FROM rt0, t0, vt0, rt1; -- 0ms;
SELECT DISTINCT CASE ((-6.97212936E8)>>(rt1.c1))  WHEN (((t0.c0)) BETWEEN ((t0.c45)) AND ((rt1.c0))) THEN (((x'd69e'))<=((t0.c45))) WHEN (NOT (rt0.c0)) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c4 THEN ((rt1.c0)%(t0.c0)) END FROM rt0, t0, rt1; -- 1ms;
SELECT DISTINCT ((CASE NULL  WHEN rt0.c4 THEN t0.c19 END) ISNULL), '-1442010214', LAST_VALUE((((((rt1.c1)OR(t0.c2)))AND(t0.c19)) IN ())) OVER () FROM rt1, t0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) ORDER BY COALESCE(DISTINCT (rt0.c2 IN ()), CASE WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c2 THEN t0.c45 ELSE t0.c2 END)  NULLS FIRST, ((CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt0.c4 END)OR(CAST(NULL AS BLOB))), CASE (rt1.c1 IN ())  WHEN (((rt1.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, '3{\r/PA', rt1.c0)) AND ((rt0.c0, t0.c19, 0.959880176140809))) THEN highlight(t0.c0, t0.c2, t0.c1, rt1.c2) WHEN rt1.c1 THEN (- (rt1.c0)) WHEN ((t0.c45)|(rt1.c2)) THEN ((rt0.c2)|(rt1.c0)) WHEN CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END THEN 0.6775488788725775 WHEN ((((rt1.c0)AND(t0.c45)))AND(t0.c2)) THEN ((t0.c2) IS TRUE) END;SELECT DISTINCT (((+ (x'25b5')))IS NOT(((t0.c19)|(rt0.c3)))) FROM rt0, rt1 GROUP BY ((((t0.c2 COLLATE RTRIM)OR(0x77171b8d)))AND(((t0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) HAVING (((rt0.c2)) NOT BETWEEN ((TYPEOF(t0.c45))) AND ((((rt0.c1) IS FALSE)))) LIMIT -1281746728;SELECT DISTINCT TYPEOF(((vt0.c0)GLOB(rt1.c0))) FROM rt0, rt1 WHERE (CASE WHEN (((0.5792841228599842))<=((x'f3ee'))) THEN 0.1485272149973288 COLLATE BINARY WHEN 0.723766560524421 THEN (('溰W') BETWEEN ('V') AND (NULL)) WHEN (NOT ('-1765859283')) THEN (NOT (-1585942968)) END);SELECT DISTINCT ((MIN(rt1.c2))OR(((t0.c19) NOT NULL))), COUNT(((rt0.c0)<<(rt0.c0))) OVER (), COUNT(*) OVER () FROM t0, rt0, rt1, vt0 WHERE (LTRIM(((((-6.37871473E8)AND(606391489)))OR('')))) ORDER BY LOWER(DISTINCT ((rt1.c0)%(t0.c1))) DESC; -- 0ms;
SELECT (((t0.c2, t0.c19, vt0.c0))<>((t0.c19, t0.c2, t0.c0))) COLLATE NOCASE FROM rt1, vt0;SELECT ALL ((CAST(t0.c2 AS TEXT))!=((((('Ox')OR(t0.c19)))AND(rt0.c2)))) FROM t0, vt0, rt1 WHERE (CAST((~ (x'')) AS BLOB));SELECT DISTINCT ((x'') NOT BETWEEN (CASE WHEN t0.c2 THEN rt0.c2 ELSE rt0.c1 END) AND (NULLIF(rt0.c2, rt0.c4))) FROM vt0, rt0 WHERE ((((('-92978707')OR((0.10818250530317974 IN ()))))AND(((('涜q{}lxe抟&')) BETWEEN ((0.48509447048793475)) AND (('/]-L'))))));SELECT DISTINCT CAST(AVG(rt1.c1) AS BLOB) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt0.c2))<((t0.c0 COLLATE BINARY))) FROM vt0, rt1, rt0, t0 WHERE (((CAST(NULL AS INTEGER)) BETWEEN (ABS(DISTINCT x'')) AND (((0.2823748219498069) NOT NULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ()))&(CASE rt1.c1  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c4 END)) FROM t0, rt0, rt1 EXCEPT SELECT DISTINCT AVG(((t0.c45)LIKE(t0.c19))) OVER () FROM vt0, t0 GROUP BY '-64716444' HAVING rt0.c1;SELECT DISTINCT ((((rt1.c2)AND(t0.c2)))OR(t0.c2)) COLLATE NOCASE, t0.c0, ((vt0.c0 COLLATE NOCASE)!=(vt0.c0)) FROM rt0 FULL OUTER JOIN t0 ON CASE ((rt0.c0) BETWEEN ('1903333373') AND (rt1.c1))  WHEN (rt0.c4 IN ()) THEN '228384812' ELSE ((vt0.c0)>=(rt0.c2)) END WHERE ((~ (CAST(NULL AS INTEGER)))) GROUP BY '-1532327091' HAVING rt0.c3 LIMIT 2147421785;SELECT ALL (((t0.c1 IN ())) NOTNULL) FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(((t0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) AS INTEGER) FROM t0 WHERE (((((((((((((((x'b6d4')AND(2040470932)))AND('')))OR(6.96180315E8)))AND('-1049736208')))AND(NULL)))AND(NULL))) BETWEEN (((0.36359612475738756)IS(x'ee7d'))) AND (((0.6224817673943686) BETWEEN ('1133881014') AND (0.6644571803716698)))));SELECT DISTINCT RANK() OVER () FROM vt0; -- 0ms;
SELECT MAX(CASE WHEN rt0.c2 THEN rt0.c0 END) FROM vt0, rt0, t0, rt1 WHERE (MAX((+ (x'')), (~ ('OY')))); -- 1ms;
SELECT DISTINCT CASE ((t0.c0) BETWEEN (rt1.c2) AND (rt0.c2))  WHEN ((t0.c45) NOT NULL) THEN CASE t0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE t0.c1 END WHEN ((rt0.c2) NOT NULL) THEN t0.c2 COLLATE NOCASE WHEN CHAR(rt1.c0) THEN TRIM(0.2917106430506323, rt1.c2) ELSE (~ (t0.c45)) END FROM rt0 GROUP BY HEX(vt0.c0);SELECT COUNT(*) OVER () FROM t0, rt0 WHERE (PRINTF(-757873352, 0.8104767585160938, -434743907) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((NULL) IS TRUE) IN ()) FROM rt1 WHERE (load_extension(CASE WHEN '-1053010141' THEN x'' END, (((x'991b')) NOT BETWEEN (('-86624531')) AND ((0xffffffffc1dfa8cc)))));SELECT DISTINCT ((((((((((rt1.c2)AND(t0.c0)))OR(rt0.c1)))AND('0.9019107208917365')))AND(rt1.c0))) NOT NULL), (~ ((((rt0.c4)) BETWEEN ((NULL)) AND ((rt0.c3))))), ROW_NUMBER() OVER ( PARTITION BY (((((rt0.c3)<<(t0.c19))))==(((((t0.c45))<=((rt0.c1)))))), CAST(((rt1.c0) BETWEEN (t0.c2) AND (rt1.c2)) AS TEXT)) FROM rt0, vt0, rt1 LIMIT 505676839 OFFSET 107066146;SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c4 AS INTEGER))) AND (((- (rt0.c3))))), t0.c1, ((((vt0.c0) BETWEEN (rt0.c0) AND ('-139893615'))) NOT NULL) FROM t0, rt1, rt0 WHERE ((((x'' IN (-1.281746728E9, 222468255))) BETWEEN (((0X4177ec7f)&('2-lp뗽,ꖎ'))) AND (((NULL)IS NOT(x'a401'))))) GROUP BY t0.c19 HAVING UPPER(QUOTE(t0.c45));SELECT ALL ((((vt0.c0)<(NULL))) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (TRIM(DISTINCT t0.c45, rt0.c1))) FROM rt0 WHERE ((NOT (CAST(x'' AS REAL))));SELECT DISTINCT (((rt0.c2)/(t0.c1)) IN (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)), MIN(rt0.c1))), NTH_VALUE(CASE WHEN (NOT (rt0.c2)) THEN rt0.c2 COLLATE NOCASE END, '-222785980') OVER ( GROUPS ROUND(((rt1.c1)AND(rt0.c4)), (rt0.c2 IN ())) PRECEDING EXCLUDE GROUP), (((((t0.c45))<=((rt0.c2))))IS(rt1.c2)), (((rt1.c1)) BETWEEN ((((rt0.c1)OR(rt0.c0)))) AND (((rt1.c0 IN ())))), rt0.c4 FROM rt0, rt1 WHERE ((((x'' IN (x'', ''))) NOT BETWEEN (((0.18293679229831283) BETWEEN (x'') AND (0.32849200385509236))) AND (((NULL)+('1376511831')))));SELECT DISTINCT ((CAST(rt0.c1 AS BLOB))&('\nL')) FROM rt1, t0;SELECT ALL (((((rt1.c1)) BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT NULL) FROM t0, rt1, vt0; -- 0ms;
SELECT DISTINCT CASE rt0.c3  WHEN ((((((((t0.c0)OR(t0.c19)))OR('')))OR(vt0.c0)))OR(vt0.c0)) THEN ((x'') NOT BETWEEN (rt0.c2) AND (t0.c19)) WHEN TOTAL(rt0.c2) THEN CASE rt0.c3  WHEN rt1.c0 THEN rt1.c1 ELSE t0.c1 END WHEN COUNT(*) THEN '234817259' END, ((((((t0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)))AND((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))))OR(rt1.c0)), ((COUNT(rt0.c2)) BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c0))<((rt0.c4))))) FROM t0, vt0, rt0 WHERE ((((((NOT ('0.7541132896739244')))OR((+ (1852659065)))))AND((('[M#y]D') NOT NULL))));SELECT DISTINCT ((((((rt0.c4)AND(rt0.c2)))OR('-1197677775')))|(TOTAL(rt0.c3))) FROM t0, rt0, rt1 WHERE ((((+ (NULL)))IS NOT(((x'') NOT BETWEEN (0.8016077083434842) AND (''))))) GROUP BY ((x'') IS TRUE), (NOT (rt0.c1)) COLLATE RTRIM, ((x'') ISNULL); -- 0ms;
SELECT DISTINCT ((((t0.c45)IS(rt1.c1)))==(t0.c1)) FROM t0, rt1 WHERE ((NOT (0X17c4579f COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM t0, vt0;SELECT DISTINCT ((((rt0.c1)LIKE(t0.c0)))=((((rt0.c4))>((t0.c19))))) FROM t0, rt1, rt0, vt0; -- 0ms;
SELECT TOTAL(rt0.c3) OVER (), (NOT (MIN(rt1.c0))), ((((t0.c19) NOTNULL)) BETWEEN (rt0.c4) AND ((~ (rt1.c2)))) FROM rt1 WHERE (CASE WHEN ((0.48657756137191943) NOT BETWEEN (0.62750425784525) AND (NULL)) THEN json_remove(x'', '0.33433338716822514') END) GROUP BY '-47174050' HAVING AVG(CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);SELECT (t0.c2 COLLATE NOCASE IN ()), ((CAST(rt0.c0 AS TEXT)) ISNULL), CAST(NULL AS REAL) FROM rt1, rt0 FULL OUTER JOIN vt0 ON CAST(CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 ELSE 0.45220242851337433 END AS TEXT) WHERE (HEX(DISTINCT (('jR삏+u\<꧄Y')>=('278955233')))); -- 1ms;
SELECT DISTINCT ((TRIM(t0.c1, rt0.c3))<(((('-2020272993'))<((t0.c0))))), ((rt0.c2 IN ()) IN ()), ((0xffffffffebe322cd IN ()) IN ()), MIN('1998003085'), (NOT (t0.c19)) COLLATE BINARY FROM t0, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT x'' FROM vt0, rt0, t0 WHERE (CASE WHEN ((x'')GLOB('117462178')) THEN (NOT (NULL)) END); -- 0ms;
SELECT CAST(MAX(rt0.c1) AS NUMERIC) FROM rt0, vt0, t0, rt1 WHERE (((((((((NULL COLLATE BINARY)AND(((((((((x'')AND('	{8㳑OZu')))AND('-611866388')))OR('574042973')))AND(NULL)))))AND(((NULL) BETWEEN (704102361) AND (NULL)))))AND(((NULL)==('-673199975')))))AND((0.24578470474326086 IN ())))); -- 0ms;
SELECT ALL ((MAX(rt0.c2, -682265724))>=((('')=(rt1.c1)))) FROM rt0, rt1 INDEXED BY i40, t0, vt0 LIMIT -60041559 OFFSET -1556071329;SELECT DISTINCT NULL FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT AVG(((rt1.c0) ISNULL)) OVER () FROM vt0, rt0, t0 GROUP BY (((rt1.c1 IN ())) IS TRUE);SELECT ALL (NOT (((((t0.c2)OR(rt1.c2)))AND(t0.c2)))) FROM rt1, t0, rt0 WHERE (((CHAR(NULL)) NOT BETWEEN (((NULL) NOT NULL)) AND ((NOT (0.19124872475430965))))); -- 0ms;
SELECT DISTINCT (((- (t0.c45)))<>(((rt0.c0)>=(x'')))) FROM vt0, t0 WHERE (((((((((((((((NULL)OR('-697212936')))AND('-1188586714')))AND(x'')))OR(x'119e669b1186')))OR(NULL)))OR(x'')))+(((0X47746531)%(NULL)))));SELECT CASE WHEN ((vt0.c0)IS(t0.c45)) THEN AVG(t0.c45) END FROM t0 WHERE (((((-1.585942968E9) BETWEEN ('y8') AND (x'a7c4')))>(((NULL)<=('-0.0')))));SELECT DISTINCT (- (t0.c19 COLLATE NOCASE)) FROM rt0, rt1;SELECT MIN(((t0.c2) IS FALSE)) FROM vt0, rt0 WHERE (((TRIM(0.19984897963200943)) BETWEEN (((('-1079858709'))<>((0.6819426250365324)))) AND ('UK')));SELECT ALL x'' FROM rt1, rt0, t0 GROUP BY ((CASE WHEN rt0.c3 THEN t0.c1 ELSE x'' END) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END) AND (CASE WHEN rt0.c2 THEN rt0.c4 WHEN t0.c2 THEN 'TaGT랾iyL' WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c0 END));SELECT DISTINCT 0.5952017964610914 FROM t0 WHERE (CAST((('-1079858709') NOT BETWEEN (x'') AND (x'')) AS BLOB)); -- 0ms;
SELECT ((((t0.c19)>(t0.c2)))+(((t0.c19)<(rt0.c1)))) FROM vt0, t0 WHERE (((CAST(NULL AS INTEGER))IS NOT('0.02017918897919113' COLLATE RTRIM))) ORDER BY ((((((((0X73465308)AND('-1281746728' COLLATE RTRIM)))OR(((rt0.c0)<<(rt0.c1)))))AND(CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 END)))OR(rt1.c2 COLLATE NOCASE)) ASC  NULLS LAST, (((t0.c45, t0.c0, t0.c1)) BETWEEN ((((rt0.c1)|(rt1.c2)), ((rt0.c1) BETWEEN (t0.c2) AND (rt1.c0)), rt0.c0)) AND ((MIN(rt1.c2, rt1.c1), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (t0.c2 IN ()))))  NULLS FIRST;SELECT DISTINCT MIN(CASE t0.c45  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN t0.c45 WHEN rt0.c4 THEN rt0.c1 END) FROM vt0 WHERE (((((x'')) NOT BETWEEN ((NULL)) AND ((NULL))) IN ()));SELECT CAST(((((rt1.c2)OR(x'')))AND(rt0.c0)) AS BLOB), ((((x'')AND(vt0.c0)))LIKE(NULL)), ((((t0.c2) BETWEEN (rt1.c0) AND (rt0.c0))) NOT BETWEEN ((+ (t0.c1))) AND ((NOT (rt1.c0)))) FROM rt0, t0, vt0;SELECT DISTINCT ((LIKELY(rt1.c0))>=((((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c19))))) FROM rt0, rt1, vt0;SELECT DISTINCT AVG(CASE WHEN t0.c0 THEN 0.08912597494378305 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c2 THEN rt0.c2 END) OVER (), ((CASE rt1.c1  WHEN -529917110 THEN x'' ELSE rt0.c3 END)/(((rt0.c0) NOT BETWEEN (t0.c19) AND (rt1.c2)))), SUM('23775111') OVER () FROM vt0, rt0, t0 NOT INDEXED, rt1; -- 1ms;
SELECT ALL CAST(((((NULL)AND(rt0.c0)))OR(rt0.c0)) AS INTEGER), (CASE rt1.c2  WHEN rt1.c0 THEN t0.c19 WHEN rt1.c2 THEN rt0.c3 WHEN t0.c45 THEN rt0.c0 ELSE rt0.c3 END IN ('q''e[a', CAST(rt0.c4 AS INTEGER))), CAST(((t0.c2) NOT NULL) AS TEXT) FROM vt0;SELECT DISTINCT (+ (rt0.c4)) COLLATE NOCASE, (CASE t0.c45  WHEN rt0.c3 THEN rt0.c1 END IN ()), CAST(CAST(t0.c1 AS NUMERIC) AS TEXT) FROM vt0, rt1 WHERE ((- (x''))) LIMIT -1362156088;SELECT DISTINCT ((((((t0.c2)-(rt0.c4)))OR(COUNT(rt1.c0))))AND(rt0.c2)), x'', LIKELY(((((((((rt1.c1)OR(rt0.c2)))AND(rt1.c1)))OR('746224245')))OR(vt0.c0))) FROM vt0 WHERE ('372317324');SELECT DENSE_RANK() OVER () FROM rt1, t0, vt0, rt0 WHERE (IFNULL(DISTINCT ((x'')>>(x'db67')), CAST('0.11669317256544409' AS REAL))) LIMIT 1917726041 OFFSET -1035654618; -- 0ms;
SELECT ALL FIRST_VALUE(((CAST(rt0.c2 AS INTEGER))%((vt0.c0 IN ())))) OVER () FROM rt1, rt0, vt0 WHERE ((((COALESCE(DISTINCT '', '%Y', 0x141008cd, NULL), ((274139614)-('o')), CAST('288213785' AS INTEGER)))=((CAST(0.45720615462427083 AS BLOB), CAST('-2633378' AS INTEGER), '-1998056898' COLLATE RTRIM)))); -- 0ms;
SELECT ((((vt0.c0) NOT NULL))|(((((rt1.c2)OR(rt0.c1)))AND(t0.c1)))) FROM rt0, vt0;SELECT DISTINCT x'' FROM t0, rt0, vt0 WHERE (((CAST('-1475121488' AS NUMERIC))IS((('‭-') NOT BETWEEN (0.39620077532704057) AND (0xffffffffb2180ec2))))); -- 0ms;
SELECT ALL NULL, CASE WHEN (NOT (t0.c1)) THEN ABS(rt1.c1) WHEN t0.c0 THEN CASE x''  WHEN rt0.c1 THEN rt1.c2 ELSE '292581830' END WHEN CASE WHEN t0.c2 THEN t0.c1 ELSE vt0.c0 END THEN CASE rt1.c2  WHEN rt0.c4 THEN t0.c19 WHEN rt0.c0 THEN rt0.c3 WHEN 0.2992123693285528 THEN t0.c19 END END, ((((t0.c19) BETWEEN (rt1.c0) AND (rt0.c0))) BETWEEN (vt0.c0) AND (LOWER(DISTINCT t0.c1))) FROM t0, vt0, rt1, rt0 WHERE (RTRIM((('-1281746728')||(NULL)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c2) NOT NULL)) OVER () FROM vt0 WHERE (CAST(CASE WHEN 0.829994159292698 THEN '1396067103' ELSE 0.51819937962724 END AS TEXT)) GROUP BY ((x'') BETWEEN (((t0.c45) IS FALSE)) AND (((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) HAVING (((t0.c0 COLLATE BINARY))<=((JULIANDAY(t0.c45, rt0.c3, t0.c19, rt0.c0, rt1.c0))));SELECT COUNT(*) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((MIN(rt0.c3)) IS FALSE) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((t0.c1) IS FALSE))LIKE(UPPER(rt0.c4))), ((t0.c45 IN ()) IN ()), ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (NULL COLLATE NOCASE) AND ('8z~')) FROM rt0, t0, vt0, rt1 WHERE (UPPER(DISTINCT (('9J4') NOTNULL))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c3 COLLATE BINARY THEN GROUP_CONCAT(rt0.c0) ELSE 0.16522217140780182 END FROM vt0, rt1 WHERE ((- (784716648 COLLATE RTRIM))) GROUP BY ((((rt0.c3)==(rt0.c1))) NOT BETWEEN (((t0.c1) IS FALSE)) AND (((rt0.c1)|(rt0.c2)))) HAVING MIN(((t0.c45) BETWEEN (rt0.c3) AND (rt0.c0))) ORDER BY (CAST(rt0.c3 AS TEXT) IN ()) ASC, CAST(((rt0.c0)+(rt0.c4)) AS REAL) DESC  NULLS LAST;SELECT DISTINCT ((((rt0.c4)&(rt0.c4))) NOT BETWEEN (((rt0.c1) BETWEEN (rt1.c1) AND (t0.c45))) AND (CAST(rt0.c4 AS BLOB))) FROM t0, rt1, vt0, rt0 WHERE (((highlight(NULL, x'', 8.20469093E8, NULL)) NOTNULL));SELECT ALL (+ (((rt0.c3)>>(t0.c19)))), CUME_DIST() OVER (), (CASE t0.c0  WHEN rt1.c1 THEN x'' ELSE t0.c1 END IN ()) FROM vt0 WHERE (x'');SELECT CASE ((rt0.c0) IS TRUE)  WHEN ((rt1.c1) NOT BETWEEN (t0.c2) AND (rt0.c0)) THEN (vt0.c0 IN ()) ELSE ((rt0.c4) BETWEEN (0xffffffff9e99cbfc) AND (rt0.c4)) END, CASE rt0.c1 COLLATE BINARY  WHEN 0.6737626575203199 THEN (rt0.c1 IN ()) ELSE CASE WHEN t0.c2 THEN rt0.c3 ELSE vt0.c0 END END, ((((0.04578716913536618) BETWEEN ('') AND (rt0.c0)))/(NULL COLLATE RTRIM)) FROM rt0, t0, vt0 WHERE (CAST(CASE WHEN 0.8898464233403981 THEN '' WHEN NULL THEN NULL WHEN 'p圣' THEN x'' ELSE '781783556' END AS INTEGER));SELECT ALL GROUP_CONCAT((rt1.c0 IN ()) COLLATE BINARY) FROM t0, vt0 WHERE ((((((((0.8110474955314206)AND(0.5295393081345563)))AND(x'8a28')), ((NULL) NOT NULL), CASE 0.6831874427598427  WHEN 0.8752345922330236 THEN 0.32896422389408164 WHEN '-1131230137' THEN 0.6819426250365324 WHEN 0.9238101744689444 THEN '(' ELSE 0X238cb9ea END))==((((0.5636636637613679)GLOB('')), (-1.215205064E9 IN (0.4898924507053767, NULL)), CAST('z9' AS BLOB))))) GROUP BY ((((rt0.c0) ISNULL))=(((rt0.c2) BETWEEN (t0.c45) AND (rt0.c4)))) HAVING highlight(CASE WHEN rt1.c1 THEN t0.c1 ELSE rt0.c4 END, ((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c45)), rt0.c3, (NOT (rt0.c4)));SELECT RANK() OVER () FROM t0, rt0 WHERE ((+ (NULL COLLATE RTRIM))) GROUP BY ((((LIKELY(DISTINCT rt0.c4))OR(((t0.c1) IS FALSE))))AND(((((rt1.c0)AND(t0.c0)))OR(rt1.c0)))), (- ((vt0.c0 IN (rt0.c1, rt0.c0)))), ((((t0.c0) IS FALSE)) IS FALSE) HAVING (- (((0.7383662261896079) BETWEEN (t0.c19) AND (NULL))));SELECT DISTINCT ((((('1970820772', rt0.c0, t0.c0))=((rt0.c2, t0.c45, t0.c19)))) NOTNULL) FROM vt0, rt0;SELECT DISTINCT COUNT(0.6544718632368365) FROM vt0, t0, rt1, rt0 GROUP BY NULL HAVING ((((rt0.c0)GLOB(rt1.c2)))<=(((t0.c0)>(t0.c2)))); -- 0ms;
SELECT (((- (rt0.c3)))+(((t0.c0) BETWEEN (t0.c45) AND (t0.c19)))) FROM rt0, rt1, t0 WHERE ((- (((x'') NOTNULL)))) LIMIT -611866388 OFFSET 489492711; -- 0ms;
SELECT ALL ((t0.c19)>>(rt0.c4)) COLLATE NOCASE FROM rt1, t0, rt0, vt0; -- 0ms;
SELECT ALL (((+ (t0.c19))) NOT BETWEEN (TYPEOF(rt0.c4)) AND (((rt1.c1) ISNULL))) FROM rt0;SELECT DISTINCT ((((CAST(rt1.c2 AS INTEGER))OR((t0.c19 IN ('-1571113130', t0.c45)))))OR(((rt0.c1) NOTNULL))) FROM rt1, t0, vt0;