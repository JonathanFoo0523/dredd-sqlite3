-- Time: 2024/06/07 06:35:11
-- Database: database12
-- Database version: 3.40.0
-- seed value: 4294869512
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 6ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('1772747405', 0.9543684058673233); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET c0='1491248830', c0='', c0=1.49124883E9; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('2119264241'); -- 0ms;
UPDATE OR ABORT t0 SET c0='1905993640', c0=x'', c0=NULL WHERE ((LIKE(t0.c0, t0.c0, '0')) NOT BETWEEN (HEX(t0.c0)) AND (((t0.c0)<<(t0.c0)))); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
REINDEX  t0; -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.5751275209992456), (0.025333425391277586), (0X719b27a8); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=('0.9543684058673233'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t1 (c0 INT ); -- 0ms;
CREATE INDEX IF NOT EXISTS i28 ON t0(0.9178553758756985 COLLATE RTRIM ASC); -- 0ms;
ANALYZE temp; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i55 ON t0(((CAST(c0 AS TEXT)) IS TRUE)) WHERE (((((c0)OR(c0)))OR(c0)) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=(NULL, x'1d4b', 0.4919874102990951) WHERE (((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((0.05673039641885602))); -- 0ms;
DELETE FROM t0 WHERE (((2.119264241E9)LIKE(t0.c0)) IN ()); -- 0ms;
END; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
REINDEX; -- 0ms;
PRAGMA cache_spill; -- 4ms;
ANALYZE; -- 0ms;
UPDATE t0 SET c0='1814942527', c0=0.9178553758756985; -- 1ms;
PRAGMA main.ignore_check_constraints = true; -- 1ms;
PRAGMA stats; -- 2ms;
UPDATE OR REPLACE t0 SET (c0, c0)=('789620167', 0x74398f2f); -- 0ms;
REINDEX; -- 1ms;
PRAGMA temp.locking_mode; -- 0ms;
ALTER TABLE t0 ADD COLUMN c3 INTEGER; -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.05673039641885602 WHERE ((((t0.c0 COLLATE NOCASE)AND(t0.c0)))OR(t0.c0 COLLATE NOCASE)); -- 1ms;
PRAGMA temp.automatic_index; -- 0ms;
UPDATE OR IGNORE t0 SET c0='97863390', c0=x'' WHERE CAST(((((t0.c0)OR(t0.c3)))OR(t0.c0)) AS TEXT); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c3)=('97863390', 0.9178553758756985) WHERE ((UPPER(DISTINCT t0.c0))*(((t0.c0)LIKE(t0.c3)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c3=x'9d9b'; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL, NULL); -- 0ms;
UPDATE t0 SET c3='' WHERE (NULL IN (((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0)))); -- 0ms;
ANALYZE i55; -- 0ms;
UPDATE OR IGNORE t0 SET (c3)=(0Xffffffff913d7cd7); -- 1ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO t0(c0, c3) VALUES (0xffffffffca53a18b, NULL); -- 1ms;
UPDATE OR REPLACE t0 SET (c0, c3)=('R[T', NULL); -- 1ms;
UPDATE t0 SET c3=x'' WHERE CHANGES(); -- 1ms;
INSERT OR ABORT INTO t0(c3) VALUES (0.5106930689254845); -- 1ms;
ANALYZE; -- 1ms;
UPDATE OR FAIL t0 SET (c3)=(0.5106930689254845) WHERE ((CASE WHEN t0.c0 THEN t0.c3 END)>=(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c3 END)); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
UPDATE OR FAIL t0 SET c0='', c0=0.5106930689254845, c3=x'505750c2'; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.application_id = -4564243798003873871; -- 0ms;
CREATE UNIQUE INDEX i44 ON t0(((((((c0)OR(c0)))AND(c3)))GLOB((c3 IN ()))) COLLATE NOCASE DESC,((((-359697682)*(c3)))>(NULL)) DESC); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0='V3E!E24' WHERE t0.c3 COLLATE BINARY; -- 0ms;
UPDATE OR REPLACE t0 SET c0=0.025333425391277586 WHERE t0.c3; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
END; -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE) NOTNULL) FROM t0 WHERE (x''); -- 0ms;
SELECT ALL ((((((((((t0.c3) ISNULL))OR((((t0.c0)) BETWEEN ((t0.c3)) AND ((t0.c3))))))AND((t0.c3 IN ()))))OR(((t0.c3)GLOB(t0.c3)))))AND(CASE t0.c0  WHEN t0.c3 THEN t0.c0 END)), t0.c0, 7.89620167E8 COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT DATETIME(((t0.c0)GLOB(t0.c0)), t0.c0 COLLATE RTRIM, DATETIME(t0.c3, t0.c3, t0.c0), (t0.c3 IN ()), ((t0.c3)||(t0.c3)), ((t0.c3) BETWEEN (t0.c3) AND (t0.c3)), ((t0.c0)%(t0.c0))) FROM t0 WHERE ((((0x6f5925a6) IS TRUE) IN ())) ORDER BY (((t0.c3 COLLATE RTRIM))<((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0))))) DESC  NULLS FIRST; -- 0ms;
SELECT ((((((t0.c3)AND('')))AND(t0.c3)))+(((t0.c3)||(t0.c0)))), ((t0.c3)IS(((t0.c0) IS TRUE))), CAST(((t0.c3)IS(t0.c3)) AS REAL), (((t0.c3)>>(t0.c3)) IN ()), ((((-3.59697682E8) NOT NULL)) IS FALSE) FROM t0; -- 0ms;
SELECT ALL (((+ (t0.c0)))&('1149000750')) FROM t0 WHERE ((('s&')>=(UPPER(DISTINCT 0.025834776071969157)))); -- 0ms;
SELECT ALL CAST(t0.c0 AS REAL) COLLATE RTRIM, 0.06442344815697343, LAG((((t0.c0 IN ()))==(((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c3)))), (~ (CASE t0.c3  WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END)), (((t0.c0, (+ (t0.c3)), (((t0.c3, t0.c0, t0.c3)) BETWEEN ((t0.c3, t0.c3, t0.c0)) AND ((t0.c0, t0.c3, t0.c0)))))==((t0.c0, CAST(t0.c3 AS BLOB), ((((t0.c0)AND(t0.c3)))OR(t0.c3)))))) OVER (), t0.c3, COUNT(*) FROM t0 WHERE ((((((NULL) NOT BETWEEN (NULL) AND ('-359697682'))))=((x'38a3' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT ((((t0.c3) IS TRUE)) NOTNULL) FROM t0 NOT INDEXED WHERE ((((((('293567477') IS TRUE))AND(ABS(0.025834776071969157))))OR((- (x''))))); -- 0ms;
SELECT (((CAST(t0.c0 AS REAL)))>((TRIM(0xfffffffff293e3fc)))) FROM t0 WHERE (((((0x232cf5b3) IS TRUE))GLOB(CASE WHEN '789620167' THEN x'' END))); -- 0ms;
SELECT ((CAST(t0.c0 AS REAL))AND((t0.c0 IN (t0.c0, t0.c0)))), (((t0.c0) IS FALSE) IN ()), x'' FROM t0 LIMIT 1868113318; -- 1ms;
SELECT ((0.38975029035257436)%(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c3)))), CASE WHEN TYPEOF(DISTINCT NULL) THEN ((t0.c3)+(t0.c3)) ELSE ((t0.c3)IS NOT(t0.c0)) END, ((t0.c0) IS FALSE) FROM t0 WHERE ((((- (0.5106930689254845)))*(((('', '*keZ.', NULL)) NOT BETWEEN (('2119264241', 0.025834776071969157, 1814942527)) AND ((0xffffffffa1a31545, 'S&', x'')))))) ORDER BY (((((((('0.5751275209992456' COLLATE NOCASE)OR(t0.c3)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c3))))))OR((0.4423631281890481 IN ()))))AND(LTRIM(t0.c3))) DESC; -- 0ms;
SELECT t0.c0 FROM t0 LIMIT -1609642833 OFFSET -359697682; -- 1ms;
SELECT DISTINCT NULL FROM t0 GROUP BY t0.c3 HAVING ((((t0.c3, t0.c3, t0.c0))<=(('Y', t0.c3, t0.c3))) IN ()); -- 0ms;
SELECT ALL ((((t0.c3 IN ())))>=((t0.c0 COLLATE NOCASE))) FROM t0 WHERE (((0xffffffffca35d88a)<=(CASE WHEN x'' THEN 0.612070880640284 ELSE 0Xffffffffd8429933 END))) GROUP BY ((((((((((((t0.c3)OR(t0.c3)))OR('s&')))AND(t0.c0)))AND(t0.c3)))OR(t0.c3)))OR(t0.c3)) COLLATE RTRIM HAVING t0.c0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN (('V3E!E24')) AND ((json_array_length(t0.c0, t0.c3)))), (((+ (t0.c3)))==(json_type(0x742296ad))), CAST(((t0.c0)AND(t0.c3)) AS NUMERIC) FROM t0;SELECT ALL TRIM(NULL) FROM t0; -- 0ms;
SELECT DISTINCT (NOT (t0.c0 COLLATE BINARY)) FROM t0 WHERE (((((NULL) IS TRUE)) ISNULL)) LIMIT -1293279052 OFFSET -58016210; -- 0ms;
SELECT DISTINCT SUM(((((t0.c3)AND(t0.c3)))OR(t0.c0))) OVER (), ((t0.c3) NOTNULL), SUM(((((((((t0.c3)AND(t0.c0)))OR(t0.c3)))AND(t0.c0)))AND(NULL))) FROM t0 ORDER BY ((((t0.c0) IS TRUE))==(((t0.c3)>>(t0.c0)))) ASC; -- 0ms;
SELECT DISTINCT ((((t0.c3)+('8ꆋ%d\nBf!k')))&(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)))) FROM t0 WHERE ((((~ (x'')))<=(COALESCE(x'', x'')))); -- 0ms;
SELECT ALL MAX(((t0.c0)LIKE(t0.c3))), ((t0.c3 COLLATE RTRIM)+(CAST(t0.c0 AS INTEGER))), x'' FROM t0 WHERE (((('+s醠' IN ()))<>(0.35966887678809834 COLLATE RTRIM))) LIMIT -120755176 OFFSET 1930415400; -- 0ms;
SELECT ALL MIN(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) FROM t0 LIMIT -666724045; -- 1ms;
SELECT (((t0.c3 IN ())) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (SUM(t0.c0))), SUM(CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c3 END) OVER (), t0.c3 FROM t0; -- 0ms;
SELECT ALL '' FROM t0 WHERE (0.08592058830096883); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c3)%(t0.c0)) THEN (((t0.c3, t0.c0, 0.6008762000723805)) BETWEEN ((t0.c3, t0.c3, t0.c0)) AND ((t0.c3, t0.c3, t0.c0))) END, ((CASE WHEN t0.c0 THEN x'' WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)||(0.11852232162043985)), t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT '2119264241', CASE ((t0.c3)=(t0.c0))  WHEN (t0.c0 IN ()) THEN ((-1181179606)<=(NULL)) END, (NOT (t0.c3 COLLATE BINARY)) FROM t0 WHERE (NULL); -- 0ms;
SELECT '1599381532' FROM t0; -- 1ms;
SELECT ALL CAST(t0.c3 AS TEXT) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL ((((((',np]')||(t0.c0)))OR(t0.c3)))AND((+ (t0.c3)))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c3 COLLATE BINARY FROM t0 WHERE (UNLIKELY((0.7093892432753202 IN ()))); -- 0ms;
SELECT DISTINCT ((t0.c3)=(t0.c3)) COLLATE BINARY, ((((((((((t0.c0)OR(t0.c0)))AND(t0.c3)))OR(t0.c3)))OR(t0.c3)))LIKE(SUM(NULL))), json_patch(t0.c0, '216809483') FROM t0 GROUP BY (+ ((t0.c0 IN ()))), ((((t0.c0) ISNULL))<(((t0.c3) IS FALSE))), (t0.c3 COLLATE NOCASE IN ()), ((CAST(t0.c0 AS TEXT)) NOTNULL), ((t0.c0) BETWEEN ((((t0.c3)) NOT BETWEEN ((t0.c3)) AND ((t0.c3)))) AND (((t0.c0) NOT NULL))) HAVING (('') NOTNULL) COLLATE RTRIM COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((((t0.c0) ISNULL))IS NOT(MAX(t0.c0))) FROM t0 WHERE ((('' COLLATE RTRIM) NOTNULL)) GROUP BY 0X7e5167f1, (~ ((NOT (t0.c3)))), ((t0.c3 COLLATE NOCASE)%((t0.c3 IN ())));SELECT ALL -2094586723 FROM t0 WHERE (x'' COLLATE NOCASE) LIMIT 2054412438 OFFSET 1814942527; -- 1ms;
SELECT (((t0.c3, x'71e4', t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c3, t0.c0, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3, t0.c0, t0.c0, t0.c3)) AND ((t0.c0, t0.c0, t0.c0, t0.c3, -567053774))), ((t0.c0) ISNULL), ((t0.c3)IS(t0.c3)))) AND (((- (t0.c3)), (t0.c3 IN (t0.c3)), t0.c0 COLLATE RTRIM))) FROM t0 WHERE (x'') LIMIT 846959375; -- 0ms;
SELECT DISTINCT CASE WHEN CASE t0.c3  WHEN t0.c0 THEN t0.c3 ELSE t0.c3 END THEN (t0.c3 IN ()) ELSE ((t0.c0)IS NOT(t0.c0)) END FROM t0 WHERE (CASE WHEN CASE 0.8307993608984673  WHEN 'u' THEN 0.144974386957322 ELSE -1181179606 END THEN (('yLoD鸧') ISNULL) ELSE ((0.06132407819045649) NOT NULL) END); -- 0ms;
SELECT DISTINCT (CAST(t0.c3 AS TEXT) IN ()) FROM t0; -- 1ms;
SELECT (((((t0.c0))==((t0.c3))))<=((((t0.c0))<=((t0.c0))))) FROM t0 LIMIT -2115551202 OFFSET -7617478; -- 0ms;
SELECT (((((t0.c0)OR(t0.c3)))AND(t0.c0)) IN (TYPEOF(t0.c3))) FROM t0; -- 0ms;
SELECT (((t0.c0, t0.c3, t0.c3)) NOT BETWEEN (('9223372036854775807', (- (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c3)))) AND ((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)), ((t0.c0)-(t0.c3)), (((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c3)))))) FROM t0 WHERE ((CASE NULL  WHEN x'' THEN 0.06132407819045649 ELSE -5.67053774E8 END IN ())); -- 0ms;
SELECT ALL t0.c0 FROM t0 WHERE (((((((0.7692151772577805)AND(0.0026018459892401813)))AND(-5.37289177E8))) NOTNULL)); -- 1ms;
SELECT SQLITE_SOURCE_ID() FROM t0 WHERE (((((x'')<=(x'')))>((0.8447593330330077 IN ())))) LIMIT 1936209980 OFFSET -760807989; -- 0ms;
SELECT LOWER(((((((((t0.c0)OR(t0.c0)))AND(t0.c3)))AND(t0.c3)))OR(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT t0.c0))|(GROUP_CONCAT(t0.c3))) FROM t0 WHERE ((((((NULL))==(('')))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((NOT (t0.c3)))+(MAX(-1.583147707E9))) FROM t0 GROUP BY t0.c0; -- 0ms;
SELECT ALL (t0.c0 COLLATE NOCASE IN ()) FROM t0 NOT INDEXED; -- 0ms;
SELECT ((((NOT ('-330570005')), ((x'')AND(t0.c3)), t0.c3 COLLATE NOCASE))=((CAST(t0.c0 AS INTEGER), ((t0.c0)IS NOT(t0.c0)), (- (t0.c0))))) FROM t0 WHERE (((((((NULL) NOT NULL))AND(CASE WHEN NULL THEN '2072593261' END)))AND(NULL COLLATE BINARY))) GROUP BY ((CAST(t0.c0 AS TEXT))GLOB((t0.c0 IN (t0.c3, t0.c0)))) HAVING (- ('-308506208')); -- 0ms;
SELECT DISTINCT ((((t0.c3)-(t0.c3)))=(0.5763833988405593)), json_patch(t0.c0, NULL), (((NOT (t0.c0)))<=((((t0.c0, t0.c3, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c3, t0.c0, t0.c0))))) FROM t0 WHERE ((((1.9304154E9 IN (0xffffffff9d2932af))) BETWEEN (CASE 1e500  WHEN NULL THEN 0.612070880640284 END) AND (x'' COLLATE BINARY))) GROUP BY t0.c0, CAST(SQLITE_VERSION() AS TEXT), (((t0.c0)) BETWEEN ((NULL)) AND (((~ (t0.c0))))), (+ (((t0.c0)<>(t0.c0)))), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c3))) COLLATE BINARY COLLATE RTRIM HAVING AVG(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0))); -- 0ms;
SELECT ALL LAST_VALUE(((((((((t0.c3)AND(t0.c0)))OR(t0.c0)))OR(t0.c3)))OR(t0.c3)) COLLATE BINARY) OVER () FROM t0; -- 0ms;
SELECT ALL LIKELIHOOD(t0.c3, 0.14746330231844862) COLLATE NOCASE, CASE WHEN ((t0.c0)GLOB(t0.c3)) THEN x'' END, ((CASE WHEN '-713391343' THEN t0.c3 ELSE t0.c3 END) ISNULL) FROM t0; -- 0ms;
SELECT ((((t0.c3) NOT BETWEEN (x'') AND (t0.c0)))&((t0.c0 IN (t0.c3, t0.c0)))) FROM t0 WHERE ((((0.4852496439727527)) NOT BETWEEN ((((x'2453') IS TRUE))) AND (((- (NULL)))))); -- 0ms;
SELECT ((t0.c0)|(t0.c3)) COLLATE NOCASE COLLATE BINARY FROM t0 WHERE (CAST((~ (NULL)) AS BLOB)); -- 0ms;
SELECT TOTAL((~ (t0.c3))) OVER (), ((CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c0 END) NOT NULL), AVG((x'' IN ())) FROM t0 WHERE (((~ ('')) IN ())); -- 0ms;
SELECT (CASE WHEN t0.c3 THEN t0.c0 END IN ((t0.c0 IN ()))) FROM t0; -- 0ms;
SELECT (+ (((((t0.c3)AND('J0.W/')))AND(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c3)LIKE(t0.c3)))AND(t0.c3)) FROM t0 WHERE (((((((((CASE WHEN '-330570005' THEN '-902440822' END)AND(((((0.3859198213535847)OR(-3.08506208E8)))OR(-2094586723)))))OR(load_extension(NULL, x''))))AND((((NULL, NULL, 'hK&FfWꗇN'))==((NULL, x'', NULL))))))OR((0.034784418788630145 IN ())))) ORDER BY ((((+ (t0.c3))))!=((CHAR('0.025333425391277586')))); -- 0ms;
SELECT ALL CAST(t0.c0 AS TEXT) COLLATE RTRIM FROM t0 WHERE ((((((((((('FALSE') NOTNULL))AND(CAST(0.43940844687263325 AS BLOB))))AND((('1993599148')+(406040957)))))AND(((('-1181179606')) NOT BETWEEN ((0.1271814065868232)) AND ((0.8167958295278093))))))AND((((('RE')AND('B㦿vebg 0')))AND(''))))); -- 1ms;
SELECT DISTINCT (((~ (t0.c3)))/(UNLIKELY(DISTINCT t0.c3))) FROM t0 WHERE (((('' IN ())) NOT BETWEEN (((0.8181462071032949) BETWEEN (-2.115551202E9) AND (NULL))) AND ((('0.8447593330330077') NOT BETWEEN (x'') AND (x''))))) GROUP BY -3.30570005E8, ((CASE WHEN t0.c3 THEN t0.c0 ELSE t0.c3 END) NOTNULL), CAST(LIKELY(DISTINCT x'f7b0') AS INTEGER) HAVING (CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c0 END IN ()); -- 0ms;
SELECT ALL 'U?|劇' FROM t0 WHERE ((((-3.59697682E8)&('-2099746147')) IN ((NOT (NULL)), ((NULL) IS FALSE)))); -- 0ms;
SELECT ALL RANK() OVER (), ((t0.c3) BETWEEN (GROUP_CONCAT(t0.c0)) AND ((- (t0.c3)))), IFNULL((t0.c0 IN (t0.c3)), ((t0.c3) IS FALSE)) FROM t0 NOT INDEXED WHERE ((((((x'')*(NULL))))>=((((((((((x'a59ceeaa')AND(NULL)))OR(NULL)))OR(0.7015469660826962)))OR(x'c7d5')))))); -- 0ms;
SELECT ALL t0.c0, ((((t0.c3)<(t0.c3))) IS TRUE), ((((t0.c0)/(x'')))<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), ((t0.c0)/((- (t0.c3)))), ((TOTAL(t0.c0)) NOT NULL) FROM t0 WHERE ((((0.06132407819045649)) BETWEEN ((x'')) AND ((0.5801368125140787)))); -- 0ms;
SELECT ((((-1575879956)OR(CASE t0.c0  WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c3 WHEN x'' THEN x'' ELSE t0.c0 END)))AND(((t0.c3)<=(t0.c0)))) FROM t0 WHERE (CAST(CASE WHEN x'6097' THEN '-2080200694' ELSE NULL END AS TEXT)); -- 0ms;
SELECT ALL (- (((t0.c0) NOT NULL))) FROM t0 WHERE ((((- ('1721526215'))) ISNULL)); -- 0ms;
SELECT DISTINCT '' FROM t0 WHERE (((((((0.040136672451532074)) BETWEEN ((1632010588)) AND ((NULL)))))>((((0X74398f2f) BETWEEN ('NA牉#') AND (NULL)))))); -- 0ms;
SELECT DISTINCT CASE ((((t0.c3)OR(t0.c3)))OR(t0.c3))  WHEN ((t0.c3) BETWEEN (t0.c0) AND (t0.c0)) THEN (NOT (t0.c0)) END FROM t0 WHERE (((+ (x'')) IN (NULL COLLATE BINARY, (('bC') NOTNULL)))); -- 0ms;
SELECT DISTINCT CAST((~ (t0.c0)) AS NUMERIC), LIKELY((~ (0.34103683322646927))), ((MIN(t0.c0)) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT json_object(((t0.c0)||(0.056739680390508695)), x'', t0.c0, (~ (t0.c0))), ((NULL)!=(((t0.c3) NOT NULL))), CASE '0NUR9ꚾ⒝E?'  WHEN ((t0.c3)<=(t0.c0)) THEN ((t0.c0) ISNULL) END FROM t0;SELECT ALL ((t0.c3 COLLATE BINARY)-(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c3)))) FROM t0 WHERE (LIKE(CASE 0.3859198213535847  WHEN '(X3 t' THEN '-1609642833' END, CASE WHEN NULL THEN 0.23199230543896288 WHEN '' THEN x'' WHEN NULL THEN '-830173494' WHEN '1948423853' THEN '-442628776' WHEN x'3e4f' THEN '#r' ELSE 0.6191173151531794 END, 'X')); -- 0ms;
SELECT CASE (('aZ') NOT BETWEEN (x'0057') AND (t0.c3))  WHEN t0.c0 COLLATE RTRIM THEN t0.c0 COLLATE RTRIM ELSE (t0.c3 IN ()) END FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c3 COLLATE NOCASE) BETWEEN ((+ (t0.c3))) AND (t0.c0 COLLATE BINARY)) FROM t0 WHERE (ABS(DISTINCT (x'' IN ()))); -- 0ms;
SELECT DISTINCT 0.4423631281890481 FROM t0 WHERE (((CASE WHEN '-1725933182' THEN '' ELSE x'' END) NOT BETWEEN (((NULL) NOTNULL)) AND (CASE 0.4919874102990951  WHEN x'' THEN 0.019187459634532167 ELSE NULL END))) GROUP BY CASE ((((t0.c0)AND(t0.c0)))AND(t0.c0))  WHEN (t0.c3 IN ()) THEN t0.c0 WHEN (((t0.c0, t0.c3, t0.c0)) BETWEEN ((t0.c0, t0.c3, t0.c3)) AND ((t0.c0, t0.c3, t0.c0))) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN CASE t0.c0  WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c3) NOT BETWEEN (x'') AND (t0.c0)) ELSE ((t0.c3)|(t0.c0)) END HAVING (((NOT (t0.c0))) NOTNULL) LIMIT 719459405; -- 0ms;
SELECT DISTINCT (NOT (((t0.c0)AND(t0.c0)))), ((((((t0.c3)OR(t0.c3)))AND(t0.c3)))>(((1.814942527E9) NOT BETWEEN (1.868113318E9) AND (t0.c0)))), ((t0.c0 COLLATE RTRIM)!=(((t0.c0) BETWEEN (t0.c0) AND (t0.c3)))) FROM t0 WHERE (json_insert((((x'fc8c', x'', '-2099746147')) BETWEEN ((x'', -9.02440822E8, '0.5106930689254845')) AND ((x'', -26945295, '.(+T'))), (((' Jtࠫ63첯Y')) BETWEEN ((0Xd897123)) AND ((x''))), SQLITE_SOURCE_ID()));SELECT DISTINCT CAST(((t0.c3) IS FALSE) AS TEXT) FROM t0 INDEXED BY i44; -- 0ms;
SELECT DISTINCT CASE ((((t0.c3)OR(t0.c3)))AND(t0.c3))  WHEN CAST(t0.c3 AS REAL) THEN ((t0.c0)=(t0.c0)) WHEN ((t0.c0)OR(t0.c3)) THEN CASE t0.c0  WHEN t0.c0 THEN NULL WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN t0.c3 WHEN NULL THEN -3.08506208E8 WHEN t0.c0 THEN t0.c3 END WHEN ((t0.c3) BETWEEN (t0.c3) AND (NULL)) THEN t0.c3 ELSE CAST(t0.c3 AS NUMERIC) END FROM t0 WHERE (highlight((((0x1c504a72)) NOT BETWEEN ((x'23cf')) AND ((x'921b'))), CAST(NULL AS REAL), (~ (x'')), UPPER(DISTINCT NULL))) GROUP BY ((CASE t0.c3  WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN 0.7222885240998937 WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END)/(((t0.c3) NOTNULL))) LIMIT -695484298 OFFSET 1917366442;SELECT (+ (t0.c3)), COUNT(*) OVER (), json_insert(((((((((t0.c0)AND(t0.c3)))OR(t0.c0)))OR(t0.c3)))AND(t0.c0)), TOTAL(t0.c3), CAST(t0.c3 AS NUMERIC)), x'', TOTAL((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) FILTER(WHERE ((((((NULL, t0.c3, t0.c0)) NOT BETWEEN ((t0.c0, t0.c3, t0.c3)) AND ((t0.c0, t0.c3, '')))))>((((t0.c0)%(t0.c3)))))) OVER () FROM t0 WHERE ((((((0.7788817898306946, x'', NULL)) BETWEEN ((NULL, NULL, x'')) AND ((x'', x'', x'e451'))))<(('u' IN ('<B'))))); -- 0ms;
SELECT CASE '-1016956471'  WHEN NULL THEN t0.c0 WHEN 'DYvk!''K+' THEN t0.c3 WHEN t0.c3 THEN t0.c0 END COLLATE BINARY, (((NULL, t0.c0, t0.c3)) NOT BETWEEN ((UNICODE(t0.c3), t0.c3, x'')) AND ((t0.c0 COLLATE NOCASE, x'', CHANGES()))), (- (((((t0.c0)AND(t0.c3)))AND(t0.c3)))) FROM t0 WHERE ((((NULL))<=((NULL))) COLLATE BINARY); -- 0ms;
SELECT ALL ((CASE WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END)+((+ (t0.c0)))), (('568701102')LIKE((((t0.c3)) NOT BETWEEN ((t0.c3)) AND ((t0.c3))))), TOTAL((((t0.c3, t0.c3, '1930415400'))>=((t0.c0, t0.c0, t0.c3)))) OVER () FROM t0 WHERE ((+ ('2091344550'))); -- 0ms;
SELECT DISTINCT CAST(t0.c3 AS NUMERIC) COLLATE BINARY COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))<=((~ (t0.c0)))), CASE WHEN (((t0.c3, t0.c0, t0.c3, t0.c0, t0.c0))=((x'e11a', t0.c0, t0.c3, NULL, t0.c3))) THEN (t0.c3 IN (t0.c3)) END, ((x'')GLOB((- (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(NULL) OVER () FROM t0; -- 0ms;
SELECT ALL (((t0.c0, t0.c3, t0.c0, t0.c3, t0.c3)) BETWEEN (('-308506208', (- (t0.c3)), '', t0.c3 COLLATE NOCASE, CASE WHEN t0.c3 THEN t0.c3 END)) AND ((t0.c0 COLLATE BINARY, AVG(t0.c0), t0.c3, (t0.c3 IN ()), ((((((((t0.c3)AND('蘘-')))OR(t0.c3)))AND('-344268664')))AND(t0.c0))))), ((t0.c3 COLLATE BINARY) NOT BETWEEN ((((t0.c3))>=(('Ap.O]?')))) AND (NULL)), LIKELY((~ (t0.c3))), TOTAL(CASE WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c3 ELSE t0.c3 END) OVER (), t0.c0 FROM t0 WHERE ((((((0.034784418788630145)|(x''))))>((0.11352706301721172)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(MAX(((t0.c3)OR(t0.c0)))) FROM t0;SELECT MIN(((t0.c0)>(t0.c3))) FROM t0; -- 0ms;
SELECT ALL CAST(((t0.c0)|(t0.c0)) AS NUMERIC), (((((((((t0.c3)AND(t0.c3)))OR(t0.c0)))OR(t0.c0)))AND(t0.c3)) IN (t0.c3)), TOTAL(((x'9a00') NOT BETWEEN (t0.c0) AND (t0.c3))) OVER () FROM t0 ORDER BY (((t0.c0 IN (t0.c3))) BETWEEN (498501113 COLLATE NOCASE) AND (CAST(t0.c0 AS INTEGER)))  NULLS LAST, (NOT (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT AVG(((t0.c0)<(t0.c3))) OVER () FROM t0 LIMIT 1497760671; -- 1ms;
SELECT ((((t0.c3)<=(t0.c3)))>(CAST('-597955677' AS BLOB))) FROM t0; -- 0ms;
SELECT ALL ((((((t0.c3)OR(t0.c3)))OR(t0.c3))) ISNULL), 0.9625567670026733, (NOT ((t0.c0 IN ()))) FROM t0 WHERE (((NULL)/(CASE WHEN 0.8181462071032949 THEN '-2094586723' ELSE x'eb10' END))); -- 0ms;
SELECT DISTINCT ((((t0.c3)<=(t0.c3)))!=(((t0.c3)/(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(json_array_length('-2080200694') AS BLOB), '2091344550', CAST(CAST(t0.c3 AS NUMERIC) AS BLOB) FROM t0 WHERE ((((((('iCY')OR(0xb1f21e3)))AND('969208162')))=((((0.8447593330330077, NULL, '1491248830')) BETWEEN ((-1658244433, 0.8739279705721914, NULL)) AND ((NULL, 1374828991, NULL)))))); -- 0ms;
SELECT DISTINCT COUNT(((t0.c0)>(t0.c3))) OVER () FROM t0; -- 0ms;
SELECT 0Xffffffff8f4235ec FROM t0 GROUP BY CAST(((t0.c0) IS TRUE) AS TEXT) HAVING CASE WHEN (t0.c0 IN ()) THEN ((t0.c3)OR(0.4285022579897141)) END; -- 0ms;
SELECT ALL TIME(((t0.c0) IS TRUE), ((t0.c0) NOTNULL), CASE t0.c3  WHEN t0.c3 THEN t0.c3 END, (t0.c0 IN ()), CASE t0.c3  WHEN t0.c0 THEN t0.c0 ELSE t0.c3 END), AVG(((t0.c0)=(t0.c0)) COLLATE RTRIM), ((IFNULL(t0.c3, t0.c3)) IS TRUE) FROM t0 NOT INDEXED GROUP BY (('1322739429') IS TRUE), 0x1, ((((((((((((((((t0.c3)AND(x'')))OR(t0.c3)))AND(t0.c0)))AND(t0.c3)))OR(t0.c3 COLLATE BINARY)))AND(((((((((t0.c3)OR(t0.c3)))AND(t0.c0)))OR('-567114503')))AND(t0.c0)))))AND('1690693434')))OR(t0.c0)) HAVING TRIM(t0.c3, ((t0.c3)>=(t0.c0))); -- 0ms;
SELECT DISTINCT CASE ((-1016956471) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0)) THEN AVG(t0.c3) ELSE UPPER(t0.c0) END FROM t0; -- 0ms;
SELECT ALL (((~ (t0.c0))) NOT BETWEEN (x'') AND (t0.c0 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT ALL TIME(((((t0.c3)AND(t0.c0)))OR(t0.c0)), (((t0.c3))>((t0.c0))), ((((t0.c3)OR(t0.c0)))OR(t0.c0)), GROUP_CONCAT(t0.c3), GLOB(t0.c0, t0.c3), (((t0.c3)) NOT BETWEEN ((t0.c0)) AND ((t0.c3))), (x'' IN ())), '[', CASE ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0))  WHEN (((t0.c0)) BETWEEN ((t0.c3)) AND ((t0.c0))) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c3))) WHEN ((t0.c0) NOT NULL) THEN (t0.c3 IN ()) WHEN ((t0.c0)<>(t0.c0)) THEN t0.c3 END FROM t0; -- 0ms;
SELECT DISTINCT (((~ (t0.c0)))==(((t0.c3) NOT NULL))), t0.c3, (((t0.c0) BETWEEN (t0.c3) AND (t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (NOT ((+ (t0.c3)))) FROM t0 INDEXED BY i44 WHERE ((((('789620167')&(1948423853))) ISNULL)) LIMIT -74333563 OFFSET 1948423853; -- 0ms;
SELECT ((x'')+((((t0.c3))<((t0.c0))))), ((CAST(-1583147707 AS NUMERIC)) IS FALSE), ((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL CASE t0.c0  WHEN t0.c0 THEN 0.6184800916230775 END COLLATE BINARY, (((CASE WHEN t0.c3 THEN t0.c3 END))<>((''))), ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM FROM t0 WHERE (CAST((0.5653204928560421 IN ('1511317906')) AS NUMERIC)) GROUP BY ((((((t0.c0)AND(t0.c3)))AND(t0.c0)))<=(CASE t0.c0  WHEN t0.c3 THEN t0.c3 END)), (- (((t0.c3) ISNULL))), ((CAST(t0.c0 AS BLOB)) BETWEEN ((t0.c0 IN ())) AND (0.6648791490984761)) LIMIT 1643014180 OFFSET 562875526; -- 0ms;
SELECT ((AVG(t0.c3))-((((t0.c3)) BETWEEN ((NULL)) AND ((t0.c3))))) FROM t0 WHERE ((((('1599381532')IS('F3')))<=(((NULL)<(x''))))); -- 0ms;
SELECT DISTINCT (x'' IN ()) FROM t0 WHERE (TRIM(INSTR(NULL, 0.43940844687263325))); -- 0ms;
SELECT (+ (MAX(t0.c3, t0.c3))) FROM t0; -- 0ms;
SELECT ALL ((((t0.c0) IS FALSE))GLOB(AVG(t0.c3))), ((((t0.c0) ISNULL))LIKE(MAX(t0.c0))), ((((((t0.c0, t0.c3, t0.c3, t0.c3, t0.c0))<>((t0.c0, t0.c3, 0.7276136371434562, t0.c3, t0.c3))), ((((t0.c3)AND(t0.c0)))AND(t0.c3)), CASE t0.c3  WHEN t0.c3 THEN t0.c3 ELSE t0.c0 END, (~ (t0.c3)), t0.c0))<((((t0.c0) IS TRUE), ((t0.c0)<(t0.c3)), (+ (t0.c3)), AVG(t0.c3), t0.c0 COLLATE NOCASE))) FROM t0 WHERE (((((0.2453804646405604)|(0.8043690911870226)))&(x''))); -- 0ms;
SELECT DISTINCT x'', ((((t0.c3)) BETWEEN ((t0.c0)) AND ((t0.c3))) IN (CAST(t0.c0 AS REAL))), ((('' IN ()))<>(CASE t0.c3  WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN 0Xffffffffd2a6fdcb WHEN 0Xffffffffcb443ebe THEN t0.c0 ELSE t0.c3 END)) FROM t0 WHERE ((- (CASE WHEN 0.3338698839148364 THEN '' ELSE 0.6545962140087157 END))); -- 0ms;
SELECT DISTINCT '''' FROM t0; -- 1ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), t0.c3, CASE t0.c3  WHEN t0.c3 THEN t0.c0 WHEN 0.32243058915034983 THEN t0.c0 WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN 0.1388370205323357 END COLLATE BINARY FROM t0 WHERE (((((((0.9632773798901731) NOT BETWEEN (x'') AND (x'')))AND(0.1863406282422897)))OR(0.5709851754471413))) ORDER BY CAST(t0.c0 AS TEXT) COLLATE BINARY; -- 0ms;
SELECT ALL CAST(x'' AS NUMERIC), CUME_DIST() OVER (), SQLITE_COMPILEOPTION_GET(((t0.c3)%(t0.c3))) FROM t0 WHERE (((x'8f52a73e')IS NOT(((0.2749130371963838)<=(x''))))); -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT '0.3859198213535847' FROM t0; -- 0ms;
SELECT (((t0.c0)) BETWEEN ((x'')) AND ((t0.c0))), (MIN(t0.c3) IN ()), ((0.2779385707650681) BETWEEN (t0.c3 COLLATE BINARY) AND (((t0.c0)%(t0.c0)))) FROM t0 WHERE (((('') IS FALSE) IN ())); -- 0ms;
SELECT ALL ((((('\I', t0.c3, t0.c0)) NOT BETWEEN ((t0.c3, t0.c3, t0.c3)) AND ((t0.c3, '-58016210', t0.c0)))) NOT BETWEEN (((NULL) NOT BETWEEN (t0.c3) AND (t0.c0))) AND (AVG(t0.c0))) FROM t0 ORDER BY ((((t0.c3, t0.c0, t0.c3))==((t0.c3, t0.c3, t0.c0))) IN ()) ASC, 244677903 DESC, IFNULL(DISTINCT CASE t0.c3  WHEN t0.c3 THEN t0.c3 ELSE t0.c3 END, (((('')OR(t0.c3)))AND(NULL))) ASC LIMIT -62423758 OFFSET -1455656375;SELECT ALL ((((((0.10051999064243045)OR(t0.c0)))OR(t0.c3)))%((+ (t0.c3)))) FROM t0 WHERE (((((CAST(NULL AS REAL))OR(((((NULL)OR(475023986)))AND(x'')))))AND(x''))) ORDER BY ((((((t0.c0)OR(t0.c3)))AND(t0.c0)))<>(LIKELY(DISTINCT t0.c0))) ASC  NULLS FIRST; -- 0ms;
SELECT (- (0Xffffffff8402a80a)), ((((((NULL)OR(t0.c0)))OR(t0.c3)))AND(((t0.c3) BETWEEN (t0.c3) AND (t0.c3)))), ((TOTAL(t0.c0)) NOTNULL) FROM t0 WHERE ((((NULL) NOT BETWEEN (0.874186350779741) AND (NULL)) IN ())); -- 0ms;
SELECT DISTINCT CAST((((t0.c3)) BETWEEN ((t0.c3)) AND ((t0.c0))) AS REAL) FROM t0 WHERE (((((x'' COLLATE NOCASE)OR(((0.9663600429546766) IS FALSE))))AND(INSTR(x'', NULL)))); -- 0ms;
SELECT DISTINCT (((t0.c3)) NOT BETWEEN (((t0.c0 IN ()))) AND ((CAST(t0.c0 AS TEXT)))) FROM t0; -- 0ms;
SELECT ((((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)))AND(HEX(DISTINCT t0.c3))))AND(((t0.c0)>>(t0.c3)))), ((t0.c3 COLLATE BINARY)IS NOT(COUNT(t0.c3))), (- (CASE WHEN t0.c3 THEN t0.c0 ELSE t0.c3 END)) FROM t0; -- 0ms;
SELECT ((t0.c3) NOT NULL), GLOB(LTRIM(t0.c0, t0.c0), ((t0.c0) BETWEEN (t0.c0) AND (t0.c3))), ((((t0.c0) NOT NULL)) NOT BETWEEN (COUNT(*)) AND (CASE WHEN t0.c3 THEN t0.c0 END)) FROM t0 WHERE (((((0.558403831075994) IS FALSE)) ISNULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((~ ('c7N|U'))) FROM t0 WHERE (((CAST(0.7761249105805218 AS NUMERIC)) NOT NULL)); -- 0ms;
SELECT DISTINCT LEAD((((((((((t0.c3 IN ()))AND((((t0.c3, t0.c0, t0.c3))!=((t0.c0, t0.c3, t0.c3))))))OR(((((t0.c3)OR(t0.c3)))AND(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c3)))))OR(((t0.c0) NOT BETWEEN (0.9539094697782461) AND (t0.c0)))), CASE ((t0.c0) NOT NULL)  WHEN ((t0.c0)>(t0.c0)) THEN t0.c3 WHEN ((0.8032609270507614)OR(t0.c0)) THEN (- (t0.c3)) WHEN (t0.c3 IN ('U?|劇', t0.c3)) THEN ((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c3)) END, ((('GiOA\\za3' IN (t0.c3, t0.c3)))<=(LIKELY(t0.c0)))) OVER (), '-1403699616', ((((t0.c0)GLOB(''))) NOT NULL) FROM t0 WHERE (CASE WHEN CASE '-515844039'  WHEN x'' THEN x'' ELSE x'0075' END THEN CASE WHEN NULL THEN '' END END) LIMIT 729648823; -- 0ms;
SELECT ((((((((t0.c3 COLLATE BINARY)OR('0.11352706301721172')))OR(((t0.c0)IS NOT('IBꀜQꀜ')))))OR(((((t0.c0)AND(t0.c0)))AND(NULL)))))OR(json_insert(t0.c0, t0.c3, t0.c3, t0.c0, t0.c3, t0.c3, t0.c0))) FROM t0 WHERE (((CASE x''  WHEN 0.23351058382780165 THEN NULL WHEN 0.3672111469709154 THEN x'' WHEN 0.120925622663556 THEN x'' ELSE '-702691736' END) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c0 AS TEXT) AS NUMERIC) FROM t0 ORDER BY (~ ('_?rcUuⳋ')) DESC  NULLS FIRST, t0.c3 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT x'' FROM t0 WHERE ((((('T/e^')|(NULL)))>=((((''))=((1019169967)))))); -- 0ms;
SELECT ALL IFNULL(((t0.c0) IS FALSE), ((t0.c3)||(t0.c3))) FROM t0; -- 0ms;
SELECT DISTINCT MIN((- (t0.c0))) FROM t0 WHERE (((((CAST('8ꆋ%d\nBf!k' AS INTEGER))AND(CASE WHEN -442628776 THEN 0.1816247512557716 WHEN 0.9706119118074802 THEN 'b6#Dq O' WHEN 0.09376031126436268 THEN -1609642833 WHEN '1019169967' THEN NULL WHEN 0.3338698839148364 THEN 0.7759839397926884 END)))OR((((0.11852232162043985)) BETWEEN ((x'2496')) AND ((0.940944676980359)))))); -- 1ms;
SELECT DISTINCT MAX(((t0.c3) NOT NULL) COLLATE RTRIM), ((((((t0.c3)OR(t0.c0)))OR(t0.c3)))<=(CASE t0.c3  WHEN t0.c0 THEN t0.c3 END)), (((t0.c0) ISNULL) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (((GROUP_CONCAT(t0.c0)))<((TOTAL(t0.c0)))), ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c3 ELSE t0.c3 END)LIKE(((((t0.c3)AND(t0.c0)))AND(t0.c3)))), x'' FROM t0 WHERE ((+ (0.6757890485076856)) COLLATE NOCASE); -- 0ms;
SELECT ALL CASE x''  WHEN (+ ('1403099166')) THEN CASE '-1799799443'  WHEN t0.c0 THEN t0.c3 WHEN NULL THEN t0.c3 WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c3)/(t0.c0)) END FROM t0 WHERE (((((0.4919874102990951)AND(((((((((((((NULL)AND(x'')))OR(x'4622441d')))OR('1481592321')))AND(0.2453804646405604)))AND(0.31828327582972205)))OR(x'')))))AND((~ (NULL))))); -- 0ms;
SELECT ALL CAST(((((t0.c3)OR(t0.c3)))AND(t0.c0)) AS TEXT) FROM t0 GROUP BY NULL COLLATE BINARY; -- 0ms;
SELECT ALL ((((t0.c3)/(t0.c0)))LIKE(((((t0.c3)AND(t0.c0)))OR(t0.c0)))), SUM(CAST(t0.c3 AS INTEGER)) OVER ( PARTITION BY (t0.c3 COLLATE NOCASE IN ()), (- (((t0.c0)OR(t0.c3))))), AVG(CASE t0.c0  WHEN t0.c3 THEN t0.c0 END) FILTER(WHERE (((t0.c0) IS TRUE) IN ())) OVER () FROM t0 ORDER BY NULL ASC  NULLS LAST; -- 0ms;
SELECT ALL NTILE(CAST(((t0.c0)|(NULL)) AS REAL)) OVER (), (((t0.c0)&(t0.c3)) IN ()), CASE WHEN ((t0.c3) NOT NULL) THEN t0.c0 COLLATE BINARY END FROM t0;SELECT ALL ((CASE t0.c3  WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN 0.28259043611433865 WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c3 END)|((((t0.c0))>=((t0.c3))))), t0.c3, (('-1891486228')+(((t0.c3) ISNULL))) FROM t0 GROUP BY CAST(((t0.c0) NOTNULL) AS TEXT) HAVING (t0.c3 IN (((t0.c3) BETWEEN (t0.c3) AND (t0.c3)), COUNT(t0.c3))); -- 1ms;
SELECT DISTINCT (((+ (t0.c0)))<<(((t0.c3) BETWEEN (t0.c3) AND (t0.c0)))) FROM t0 WHERE (((('0.8739279705721914', x'', 1214665966, '', 0Xffffffffca53a18b, 0.19235738859607143, 0xffffffff82d86a9d)) BETWEEN (('uLu*U', (('na牉#')%(1e500)), CASE WHEN 0X52da8feb THEN NULL ELSE NULL END, CAST(NULL AS REAL), (4.75023986E8 IN ()), (('_FbL 焣p') IS FALSE), UNLIKELY(DISTINCT NULL))) AND ((CAST('슅a' AS NUMERIC), ((NULL) NOTNULL), UNLIKELY(''), LAST_INSERT_ROWID(), ((x'')>('97863390')), (((NULL, '1511317906', NULL))<=((0.5189289101650174, 2.93567477E8, x''))), (NOT (x'bbf3')))))); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE BINARY)/(((t0.c3)||(t0.c0)))), GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), t0.c0, SUM(((t0.c0) BETWEEN (t0.c3) AND (t0.c3))) OVER (), '' FROM t0 WHERE (((((((('M	_')AND(x'')))AND(0.004309323451172742))))==((((0.5106930689254845)>('-330570005')))))) ORDER BY (((t0.c0)+(t0.c0)) IN ((NOT (t0.c0)), CASE WHEN t0.c0 THEN t0.c3 ELSE t0.c3 END)) ASC, (NULL IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT ALL COUNT(CAST(t0.c0 AS TEXT)) OVER () FROM t0; -- 0ms;
SELECT TOTAL(((t0.c0)/(t0.c0))) OVER (), t0.c0, ((NOT (t0.c0)) IN ((~ (t0.c0)))) FROM t0 WHERE ((((((NULL) NOT BETWEEN (x'') AND ('Ap.x]?'))))>=((CAST('1e500' AS BLOB))))); -- 1ms;
SELECT ALL CAST(CASE WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END AS NUMERIC), MAX((t0.c0 IN ())), ((((LENGTH(t0.c3))AND(((t0.c0) IS FALSE))))AND(LENGTH(t0.c3))), TYPEOF(DISTINCT CASE WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END), (((((~ (t0.c0)))AND((((x'', t0.c0, NULL)) BETWEEN ((t0.c0, t0.c0, 2054412438)) AND ((t0.c3, -1.658244433E9, t0.c0))))))OR(IFNULL(DISTINCT t0.c3, t0.c3))) FROM t0 WHERE (((('') NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT ((CASE t0.c3  WHEN t0.c0 THEN t0.c0 END)*(((t0.c0)>=(t0.c3)))) FROM t0 WHERE ((((''))=(((('-120755176')%(x'')))))); -- 0ms;
SELECT DISTINCT ((('Z~HRmxs'))>=(('7YD'))) FROM t0 WHERE (((CAST('-62423758' AS INTEGER))LIKE((('-922023893') IS FALSE)))); -- 0ms;
SELECT DISTINCT '' COLLATE RTRIM FROM t0 WHERE ((0.0026018459892401813 IN ()) COLLATE NOCASE); -- 0ms;
SELECT (- (t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT ((AVG(t0.c3)) BETWEEN (((((((((t0.c3)AND(t0.c3)))OR(t0.c3)))AND(t0.c3)))OR(0.9469093246533223))) AND (LIKELY(t0.c3))) FROM t0; -- 0ms;
SELECT ALL CAST((t0.c3 IN ()) AS TEXT), (MIN(t0.c3) IN ((NOT (t0.c0)))), CAST(GROUP_CONCAT(t0.c3) AS REAL), t0.c3, ((TOTAL(t0.c3)) NOT BETWEEN ((((x''))=((t0.c3)))) AND ('-1924711791')), LIKE((((t0.c0))==((t0.c0))), ((((((((((((x'2a32')OR(t0.c3)))OR(t0.c0)))OR(t0.c3)))OR(t0.c0)))AND('562875526')))OR(t0.c3))), (+ (JULIANDAY(t0.c0, t0.c3, t0.c3))) FROM t0; -- 1ms;
SELECT DISTINCT (((((NOT (t0.c0)))AND(((t0.c0) NOT NULL))))AND(CAST(t0.c3 AS REAL))), (NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c3))))), CAST(((((((((t0.c0)AND(t0.c0)))OR(t0.c3)))AND('703026914')))AND(t0.c0)) AS REAL) FROM t0; -- 0ms;
SELECT ALL ((((((t0.c3)%(x'64f3ea25')))AND(t0.c3 COLLATE RTRIM)))OR(((t0.c3) BETWEEN (t0.c3) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT ((LIKE(t0.c0, t0.c0))!=(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)))) FROM t0 WHERE (((x'' COLLATE RTRIM)GLOB((x'aee2' IN ())))); -- 0ms;
SELECT DISTINCT ((((t0.c3)=(t0.c0))) IS FALSE) FROM t0; -- 1ms;
SELECT GROUP_CONCAT((~ (t0.c3))) FROM t0 WHERE (((((('a>EFWFjVK', '-1963664526', x''))<((1382058330, 'NA牉#', x'bb2a'))))LIKE((~ (NULL))))); -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c3 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c3 END) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND ((+ (t0.c3)))) FROM t0 WHERE ((((('aZ')*(0.9539094697782461)))LIKE((~ (NULL))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c0)) IS TRUE), ((((t0.c0)*(t0.c3))) NOT BETWEEN (('9T\凛v/Xy*' IN ())) AND (t0.c3)), CASE CAST(0.33759973271811083 AS BLOB)  WHEN (((t0.c3))<=((t0.c0))) THEN (t0.c3 IN (t0.c3, t0.c0, t0.c3)) END, (((t0.c3 IN ())) BETWEEN (((t0.c3) BETWEEN (t0.c3) AND (t0.c3))) AND (t0.c0 COLLATE NOCASE)), (CAST(t0.c3 AS TEXT) IN ()) FROM t0 WHERE (((CASE x''  WHEN '' THEN x'' WHEN NULL THEN '' WHEN 0.8295592383047107 THEN 0.02159505327910216 ELSE NULL END)<>(((NULL)<=(2.072593261E9))))) ORDER BY t0.c3 DESC  NULLS FIRST; -- 1ms;
SELECT '' COLLATE NOCASE, (((~ (t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND ('GiOA\\za3')), t0.c0 FROM t0; -- 0ms;
SELECT LIKELIHOOD(x'', 0.7224209935898478) FROM t0; -- 0ms;
SELECT ((0xffffffff8327249d) BETWEEN (CASE t0.c3  WHEN NULL THEN t0.c3 END) AND (x'')) FROM t0; -- 0ms;
SELECT ((((HEX(t0.c0))AND(((t0.c0)>=(t0.c3)))))OR(LOWER(DISTINCT t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT AVG(((((t0.c3)OR(t0.c3)))AND(t0.c0))) OVER () FROM t0 WHERE (((((('1632010588'))>((x'5a7d')))) IS TRUE)) ORDER BY (((CAST(t0.c0 AS NUMERIC)))<((CASE t0.c3  WHEN t0.c3 THEN t0.c3 WHEN '2091344550' THEN t0.c3 WHEN t0.c0 THEN t0.c3 ELSE t0.c3 END)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((t0.c0) NOT BETWEEN (((((t0.c0)AND(t0.c3)))OR(t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN x'' END)) FROM t0 WHERE (((((x'')==(1.772747405E9)))==((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((t0.c3) BETWEEN (SUM(t0.c0)) AND (((x'')OR(NULL)))) FROM t0 GROUP BY ((((LOWER(DISTINCT t0.c3))OR(NULL COLLATE RTRIM)))OR(((t0.c0) NOT NULL))), (((t0.c0)!=(t0.c3)) IN ((((t0.c3)) BETWEEN ((0.9642629506462737)) AND ((t0.c0))))), CAST(CAST(t0.c0 AS NUMERIC) AS REAL) HAVING CASE ((NULL) BETWEEN (t0.c3) AND (t0.c0))  WHEN (('0.2453804646405604')LIKE(t0.c0)) THEN t0.c0 COLLATE BINARY ELSE CASE t0.c3  WHEN t0.c3 THEN t0.c0 END END LIMIT -2022265391 OFFSET 1580813908; -- 0ms;
SELECT ALL CAST((((t0.c3)) NOT BETWEEN ((t0.c3)) AND ((t0.c3))) AS INTEGER), CAST(((t0.c0)&(t0.c3)) AS TEXT), (((t0.c3)<<(t0.c3)) IN ((((t0.c3, t0.c0, t0.c3, t0.c3, t0.c3)) NOT BETWEEN ((t0.c0, t0.c3, t0.c0, t0.c3, t0.c3)) AND ((x'', t0.c0, t0.c0, t0.c0, t0.c3))))) FROM t0; -- 0ms;
SELECT ALL ((MAX(t0.c3)) IS FALSE), TOTAL(TYPEOF(t0.c0)), (((t0.c0)<(t0.c0)) IN ()) FROM t0 WHERE ((((NULL)) NOT BETWEEN ((((x'')LIKE('-1891486228')))) AND ((((0.9718126004144586) IS TRUE))))); -- 0ms;
SELECT ((x'58e5a42b') ISNULL) FROM t0 WHERE (CASE WHEN ((1212660589)%(0x1db685f9)) THEN (NOT (0.9178553758756985)) END); -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT 0.9234109526089739 FROM t0 WHERE (CAST((NOT (NULL)) AS INTEGER)) ORDER BY UNLIKELY('%fu~R6') ASC  NULLS FIRST; -- 0ms;
SELECT ALL t0.c0, CAST(CAST(t0.c0 AS REAL) AS TEXT), (- (((t0.c0)IS NOT(-3.59697682E8)))) FROM t0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT ALL ((CASE t0.c0  WHEN t0.c3 THEN t0.c0 END)|((~ (t0.c3)))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(CASE t0.c0  WHEN t0.c0 THEN 1.9304154E9 END AS INTEGER) FROM t0 WHERE (CAST((x'' IN ()) AS TEXT)); -- 0ms;
SELECT ALL DENSE_RANK() OVER ( ROWS  UNBOUNDED PRECEDING) FROM t0; -- 0ms;
SELECT ALL CASE ((t0.c3) BETWEEN ('4Zh(') AND (t0.c0))  WHEN (- (t0.c3)) THEN x'' WHEN t0.c0 COLLATE BINARY THEN UPPER(t0.c3) WHEN ((t0.c0)AND(t0.c0)) THEN MAX(t0.c3) END, CASE WHEN (((t0.c3)) NOT BETWEEN ((t0.c0)) AND ((t0.c3))) THEN CASE WHEN t0.c0 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN x'' END END, SUM(((t0.c3) BETWEEN (t0.c3) AND (t0.c3))) FROM t0 NOT INDEXED WHERE (CAST((('-743475340')<<(-313833840)) AS TEXT)); -- 0ms;
SELECT ALL TOTAL(((t0.c0) ISNULL)) OVER ( ORDER BY CASE ((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3))  WHEN ('8!Oi' IN ()) THEN ((t0.c0)|(t0.c3)) END ASC) FROM t0 WHERE (JULIANDAY(x'' COLLATE RTRIM, (+ ('kW}Ca')), SQLITE_SOURCE_ID())); -- 0ms;
SELECT ((t0.c3 COLLATE BINARY)IS(CAST(t0.c3 AS REAL))) FROM t0 WHERE (CAST((((('-9223372036854775808')AND(0.19020159024367067)))OR(0.4005211547389109)) AS BLOB)); -- 0ms;
SELECT DISTINCT (((t0.c3, 0.5425404152516874, t0.c3)) BETWEEN ((((t0.c0)IS NOT(t0.c3)), CAST(0.35966887678809834 AS TEXT), (('-2022265391')>>(t0.c3)))) AND (((((t0.c0)) NOT BETWEEN ((t0.c3)) AND ((t0.c0))), (((t0.c3))<((t0.c3))), ((t0.c3)>('a>efwfjvk'))))), t0.c0 COLLATE BINARY, CAST(UNLIKELY(t0.c0) AS BLOB) FROM t0 WHERE (CASE WHEN ((x'')%(NULL)) THEN (- (NULL)) END); -- 0ms;
SELECT ALL CAST(t0.c3 AS NUMERIC) FROM t0 WHERE (LIKE(((988325608) BETWEEN (x'58cd') AND (x'b0bee489')), (('132797063') IS TRUE))); -- 0ms;
SELECT ALL ((('-1302430920') NOT NULL) IN ()) FROM t0 ORDER BY CASE WHEN ((t0.c3) BETWEEN (t0.c3) AND ('-1629535533')) THEN ((t0.c0)|(t0.c3)) END ASC, t0.c3  NULLS FIRST, ((t0.c0)!=(t0.c0)) COLLATE NOCASE DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((0.144974386957322) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((+ (t0.c0)))>(CAST(-1.403699616E9 AS BLOB)))) OVER ( ORDER BY ((((((((((NULL) NOT NULL))OR(t0.c3)))OR(t0.c0 COLLATE RTRIM)))AND(t0.c3)))OR(((t0.c3)==(t0.c3)))) DESC), MIN(((t0.c3) ISNULL) COLLATE RTRIM), ROUND(((t0.c3) ISNULL), ((t0.c0) NOTNULL)) FROM t0 WHERE ((('1099874621' COLLATE BINARY) NOTNULL)) LIMIT 1280642541; -- 0ms;
SELECT TRIM((+ (t0.c3)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) FROM t0; -- 0ms;
SELECT ALL t0.c0, ((CAST(t0.c0 AS TEXT))*((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c3))))), 0x11a0c8ff, ((((((t0.c3) IS TRUE))OR(NULL)))OR(CASE t0.c3  WHEN t0.c0 THEN t0.c0 ELSE t0.c3 END)), (((-62423758 IN ())) NOT BETWEEN (SUM(t0.c3)) AND (((t0.c3) NOT NULL))) FROM t0 WHERE (CAST(((((x'1c17')AND(0.6891321191717094)))AND(0x6d0c583a)) AS BLOB)); -- 0ms;
SELECT ((((((t0.c3)AND(t0.c3)))OR(t0.c0))) IS FALSE) FROM t0; -- 1ms;
SELECT ((((((((((((((t0.c3)OR(t0.c0)))OR(t0.c3)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c3) AND (t0.c3))) AND (((t0.c0)AND(t0.c0)))) FROM t0 ORDER BY (((NOT (t0.c0))) BETWEEN (x'5156') AND ((((t0.c0)) BETWEEN (('')) AND ((t0.c3))))) ASC  NULLS FIRST, ((t0.c0)<=(-1.293279052E9))  NULLS FIRST; -- 0ms;
SELECT MAX(CAST(t0.c0 AS NUMERIC)) FROM t0 WHERE (CAST(((0.22640993426442546) BETWEEN (-713391343) AND (x'abd1')) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((t0.c3) BETWEEN (t0.c3) AND (t0.c3)))LIKE(((0.7702793685770514) IS TRUE))), ((((t0.c0)||(t0.c3))) NOT NULL), ('7YD' IN ()) FROM t0 WHERE ((('1445521096' COLLATE BINARY)<<(((-614257542) BETWEEN (NULL) AND ('-1721834739'))))); -- 0ms;
SELECT ALL (((NOT (t0.c3))) NOTNULL) FROM t0 WHERE (((((x'') IS TRUE)) NOT NULL)) ORDER BY ((CASE t0.c3  WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c0 ELSE 1.374828991E9 END) NOT BETWEEN (CASE t0.c0  WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c3 WHEN x'' THEN t0.c0 ELSE t0.c3 END) AND (((0.8441404982228887) IS TRUE)))  NULLS FIRST; -- 0ms;
SELECT AVG(HEX(t0.c0)) FROM t0 WHERE ((NOT (((x'')IS(''))))); -- 0ms;
SELECT DISTINCT (((t0.c3 IN (t0.c0, t0.c0))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (COUNT(t0.c3))), (~ (CASE t0.c0  WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END)), t0.c3 FROM t0 WHERE (((('Vj')) NOT BETWEEN (((NOT (x'')))) AND (((~ (0.6513956426476262)))))); -- 0ms;
SELECT UNICODE(CAST(t0.c0 AS BLOB)) FROM t0 WHERE (CASE CAST(0.1643415411995537 AS REAL)  WHEN (((('b\nwY^um')AND(x'3efc')))AND(x'')) THEN x'' COLLATE RTRIM WHEN (('') ISNULL) THEN (x'a686' IN ()) WHEN CASE WHEN '-894114166' THEN '475023986' END THEN '' COLLATE BINARY ELSE NULL END); -- 0ms;
SELECT DISTINCT ((((0.680846293188571)AND(CASE t0.c3  WHEN t0.c0 THEN t0.c0 END)))AND(json_array_length(t0.c0))) FROM t0 ORDER BY ((((((t0.c3)AND(t0.c3)))AND(t0.c0))) BETWEEN ((((t0.c3, t0.c0, t0.c3))<((t0.c3, t0.c3, t0.c0)))) AND (CAST(x'' AS REAL))) DESC, CASE WHEN ((t0.c0) ISNULL) THEN 0.053688098725209965 ELSE t0.c3 END DESC, (((t0.c3)*(t0.c3)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT MIN(((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c3))) FROM t0 WHERE ((((CASE ''  WHEN '*鵕' THEN x'' ELSE x'7ce2' END))>((((((x'')OR(NULL)))OR(NULL)))))); -- 0ms;
SELECT DISTINCT ((((LIKELIHOOD(t0.c0, 0.500482349713543))OR(((t0.c0) NOT NULL))))AND((- (t0.c3)))), (NULL IN ()), (((t0.c0)OR(t0.c3)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0)==(((t0.c0)>>(t0.c0)))) FROM t0 WHERE (json_array_length((- (0.43940844687263325)), CASE WHEN NULL THEN x'95d6d87a' ELSE 1948423853 END));SELECT DISTINCT t0.c0 FROM t0 GROUP BY ((CASE t0.c3  WHEN t0.c0 THEN t0.c3 END)=(t0.c3)), ((CAST(t0.c3 AS REAL))<((NOT (t0.c0)))), CAST(CAST(t0.c3 AS REAL) AS BLOB), ((((+ (t0.c0))))>((((t0.c0) NOTNULL)))), NULL; -- 0ms;
SELECT ALL (- (((((((((0.5113735200269153)AND(t0.c0)))AND(t0.c0)))OR('-0.0')))AND(t0.c0)))), GROUP_CONCAT(t0.c0), '1451003429' COLLATE RTRIM FROM t0 WHERE (((('0.9178553758756985' IN ()))!=(CASE WHEN NULL THEN -874564659 ELSE x'' END))); -- 0ms;
SELECT MAX(((((t0.c3)OR(t0.c3)))AND(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT CASE (+ (t0.c0))  WHEN CASE WHEN t0.c0 THEN 'u+nN0闺T' WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c0 END THEN CAST(t0.c3 AS NUMERIC) WHEN ((((t0.c0)OR(t0.c0)))AND(NULL)) THEN ((((t0.c3)OR(0.33000467720917026)))OR(t0.c3)) WHEN ((t0.c3)<<(t0.c3)) THEN (- (t0.c3)) ELSE ((t0.c0)>=(t0.c3)) END FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)%(t0.c0))) ISNULL) FROM t0; -- 0ms;
SELECT ALL t0.c0, ((((((((CASE WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN 0.19235738859607143 WHEN t0.c3 THEN t0.c3 ELSE t0.c0 END)AND(NULL)))AND(CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c0 END)))OR(((('-567053774')) NOT BETWEEN ((t0.c3)) AND ((t0.c3))))))OR(((t0.c0)LIKE(t0.c3)))), t0.c3 FROM t0 WHERE (((((-515844039) NOT NULL))>>((('TRUE')IS NOT(0x4ff0e991))))) ORDER BY t0.c3 ASC; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (COALESCE(((x'2bbf')IS('BZ\W''')), ((((x'bc82')AND('%fu~R6')))AND('645109791')), TOTAL_CHANGES(), ((NULL)LIKE('vhS9<V(,Z')), (NULL IN (x'', '0.33759973271811083')), CASE WHEN '' THEN x'413b2452' END)); -- 0ms;
SELECT DISTINCT (('') BETWEEN (HEX(t0.c3)) AND (((t0.c3)+(t0.c3)))) FROM t0 WHERE (((((0.014034932661198707) BETWEEN (x'') AND ('')))GLOB((('{_OB\np]	|')!=(x''))))) ORDER BY t0.c3; -- 0ms;
SELECT (((t0.c0, t0.c3, t0.c0)) BETWEEN ((CAST(t0.c0 AS NUMERIC), (t0.c0 IN (t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) AND ((CAST(t0.c3 AS BLOB), ((t0.c0)=(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) FROM t0 LIMIT -2029913851 OFFSET -743888642; -- 0ms;
SELECT DISTINCT (((NOT (t0.c0))) NOT NULL), (((t0.c0, t0.c0, t0.c3))!=((t0.c0, t0.c3, t0.c3))) COLLATE NOCASE, ((t0.c0 IN ()) IN ()) FROM t0 WHERE ((~ (((((((((x'')OR(-638195010)))OR(0.9299460573889708)))OR(x'e3b2')))AND(-1133375695))))); -- 0ms;
SELECT ((t0.c3 COLLATE BINARY)GLOB((NULL IN ()))) FROM t0 WHERE (CASE -2099746147  WHEN NULL THEN NULL ELSE x'b3c7' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST(((t0.c3)AND(t0.c0)) AS NUMERIC) FROM t0 WHERE ('1390055403') ORDER BY ((((((((((t0.c0)AND(t0.c3)))AND(t0.c0)))OR(t0.c3)))OR(t0.c3))) BETWEEN (LIKELIHOOD(DISTINCT t0.c3, 0.7942039237420121)) AND (((t0.c0)GLOB('')))) ASC  NULLS LAST; -- 0ms;
SELECT UPPER(t0.c3) COLLATE RTRIM FROM t0 WHERE ((CASE WHEN NULL THEN 0.6420514677973849 ELSE NULL END IN (x''))); -- 0ms;
SELECT DISTINCT SUM(((t0.c3)>(''))) FROM t0 WHERE (CASE x'b967'  WHEN NULL THEN NULL WHEN NULL THEN 0.5110822916685639 WHEN x'' THEN NULL ELSE 0xfffffffffc477d32 END COLLATE NOCASE) GROUP BY t0.c3; -- 0ms;
SELECT ALL CAST('kW}Ca' AS BLOB), ROW_NUMBER() OVER (), ((CAST(t0.c0 AS NUMERIC))<<(COUNT(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT ((NULL)<((~ (t0.c3)))), GROUP_CONCAT(COALESCE(0.7276136371434562, t0.c0)) OVER (), COUNT(*) OVER () FROM t0 WHERE (((((x'')<<('-1688191155')))|('1772747405' COLLATE NOCASE))); -- 0ms;
SELECT ((((TOTAL_CHANGES())AND(CASE WHEN t0.c3 THEN -9.02440822E8 END)))AND(((((t0.c0)AND(t0.c3)))OR(t0.c3)))) FROM t0 NOT INDEXED; -- 1ms;
SELECT DISTINCT -1.725933182E9 FROM t0 WHERE ((((x'')) BETWEEN ((((0.40849438008538663) IS TRUE))) AND (((('587147006') IS TRUE))))); -- 0ms;
SELECT '4t', ((((t0.c0)>>(NULL))) ISNULL), MAX((t0.c3 IN (t0.c3))), ((CAST(t0.c3 AS INTEGER))=((x'' IN (t0.c3, t0.c0)))), CASE WHEN (((t0.c3)) BETWEEN ((0.05309568263167175)) AND ((t0.c0))) THEN (((t0.c3))!=((t0.c3))) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END FROM t0; -- 0ms;
SELECT FIRST_VALUE(CAST(t0.c0 COLLATE BINARY AS NUMERIC)) OVER () FROM t0; -- 0ms;
SELECT (((NULL))=((LIKELY(t0.c0)))) FROM t0 WHERE ((((((((('')AND(0Xffffffffe52e340b)))OR('v')))OR(NULL)))AND('ㄍV')) COLLATE BINARY); -- 0ms;
SELECT ALL CAST((- (t0.c0)) AS BLOB), NTH_VALUE(((t0.c0) NOT BETWEEN (0.18880408489793443) AND (t0.c3)) COLLATE NOCASE, t0.c3) OVER (), t0.c0 FROM t0 WHERE ((0.28739077402424185 COLLATE RTRIM IN ())) ORDER BY (((t0.c3, t0.c3, t0.c0)) NOT BETWEEN ((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)), ((t0.c3)%(t0.c0)), ((t0.c0)!=(t0.c3)))) AND ((((((t0.c0)AND(t0.c3)))OR(t0.c0)), CASE t0.c0  WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c3 END, CAST(t0.c3 AS BLOB)))) ASC, 0.5709851754471413 ASC  NULLS LAST, 0.38834627917451936 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((t0.c0)GLOB(NULLIF(DISTINCT t0.c3, t0.c0))), LAG(((CAST(t0.c3 AS INTEGER)) NOT BETWEEN (((t0.c3)>>(t0.c0))) AND (t0.c3)), TYPEOF(t0.c3) COLLATE NOCASE, CAST((t0.c0 IN (t0.c3, t0.c3)) AS REAL)) OVER ( PARTITION BY ((((t0.c0)LIKE(t0.c3)))*(((((t0.c3)AND(t0.c0)))OR(t0.c3)))), CASE WHEN CASE WHEN t0.c0 THEN t0.c3 END THEN (NOT (t0.c0)) END), ((((t0.c3) IS FALSE))-(LIKELIHOOD(NULL, 0.5916360829066951))) FROM t0; -- 0ms;
SELECT ALL ((CAST(t0.c0 AS BLOB))<<(CAST(t0.c3 AS REAL))), GROUP_CONCAT((t0.c3 IN ())), COUNT(json_array_length(t0.c0, 0.7761249105805218)) COLLATE RTRIM FROM t0 WHERE (CASE CASE -702691736  WHEN '568701102' THEN '-880758303' END  WHEN (((x'', '\r&I7}dy', NULL)) BETWEEN ((x'', '', -796740583)) AND ((0.571365603877076, x'', 0.8376432161063585))) THEN (((''))!=((0.5845092668110987))) WHEN ((x'78b2')+(1936209980)) THEN CAST('9T\凛v/Xy*' AS NUMERIC) WHEN (((('')OR('')))AND(x'')) THEN CASE NULL  WHEN NULL THEN '0.3338698839148364' ELSE '1948423853' END END) GROUP BY CAST(t0.c0 COLLATE BINARY AS NUMERIC); -- 0ms;
SELECT json_patch(((((((((t0.c3)AND('0.7692151772577805')))OR(t0.c0)))OR(t0.c0)))AND(t0.c3)), ((t0.c0)!=(t0.c0))) FROM t0 WHERE (((NULL)IS(NULL COLLATE RTRIM))) ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c0 END)) DESC, t0.c0 DESC; -- 0ms;
SELECT DISTINCT 1.14900075E9, (- (((t0.c3) IS TRUE))), ((1632010588)LIKE(t0.c0)) COLLATE BINARY COLLATE NOCASE FROM t0 WHERE (x'd8e7'); -- 0ms;
SELECT CAST(((t0.c0) BETWEEN (t0.c3) AND (t0.c0)) AS INTEGER) FROM t0 WHERE (CASE NULL  WHEN (('-639210335') BETWEEN (0x5f54a01c) AND (0.2967177883812696)) THEN (((NULL)) BETWEEN ((0xfffffffffbd362f5)) AND ((NULL))) END); -- 0ms;
SELECT DISTINCT ((((((((((((TRIM(DISTINCT t0.c0, t0.c0))OR(CAST(t0.c0 AS REAL))))OR(t0.c3)))OR(SUM(t0.c3))))AND(((NULL) NOT BETWEEN (t0.c3) AND (t0.c3)))))OR(((t0.c0)*(t0.c3)))))OR(((t0.c0)OR(t0.c0)))), (((t0.c3, t0.c3, t0.c0)) NOT BETWEEN ((t0.c3 COLLATE RTRIM, (((t0.c3, x'', t0.c3))<((t0.c0, t0.c0, t0.c0))), t0.c3 COLLATE RTRIM)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c3)), UNLIKELY(t0.c3), ((t0.c3) NOT NULL)))), ((t0.c3)<=(t0.c3)) FROM t0; -- 0ms;
SELECT DENSE_RANK() OVER (), t0.c3, (+ (t0.c3)) COLLATE BINARY FROM t0 WHERE (((((0.9500924065174448)OR(((0x5d546de)<=('1e500')))))AND((((x'')) BETWEEN (('-778807047')) AND ((NULL)))))) GROUP BY (((- (t0.c0))) NOT BETWEEN (ABS(t0.c0)) AND (((t0.c3)%(t0.c0)))), 0.5950203809462117 COLLATE BINARY, 'wj[XC>' HAVING (((+ (t0.c0))) BETWEEN (MAX(t0.c0)) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c0 END)); -- 0ms;
SELECT DISTINCT ((t0.c3)|(t0.c3)) COLLATE BINARY, (((((t0.c0)) BETWEEN ((t0.c3)) AND ((NULL)))) BETWEEN (t0.c0) AND ((+ (t0.c3)))), ((t0.c0)|(t0.c3)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT COUNT(((((t0.c0)AND(t0.c3)))OR(t0.c3))), COUNT(*) OVER (), CASE WHEN (((('?\ndI')OR(t0.c0)))AND(t0.c3)) THEN COUNT(t0.c3) END FROM t0 WHERE ((((('1497760671') IS FALSE))*((NULL IN ())))); -- 0ms;
SELECT DISTINCT NTH_VALUE(t0.c0, t0.c3) OVER (), 0.1621630486884451, t0.c0 FROM t0 WHERE (((((NULL)OR(0.7435595683719424)))AND(x'aefaa76b')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((0.9493441691554412) ISNULL) COLLATE BINARY, (0.17646851229345784 IN ()) COLLATE NOCASE, DENSE_RANK() OVER () FROM t0 LIMIT -389950367 OFFSET 1723987878; -- 0ms;
SELECT DISTINCT (((('哮xo\r')AND(((t0.c0) IS FALSE))))AND(0.31284830107830175)) FROM t0 WHERE (LIKELY(JULIANDAY(NULL, -2039493777, NULL, 0Xd897123, NULL))); -- 0ms;
SELECT MAX(t0.c3), TOTAL(((t0.c0)LIKE(t0.c3))) OVER (), (((t0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c3)))) AND ((((t0.c3) BETWEEN (t0.c3) AND (t0.c3))))), ((((SQLITE_SOURCE_ID())AND(CAST(x'dba9df33' AS REAL))))AND(CASE WHEN t0.c3 THEN t0.c0 ELSE x'' END)), ((('1374828991')) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c3 ELSE t0.c3 END)) AND ((CASE WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END))) FROM t0; -- 0ms;
SELECT ((-9.00488821E8) NOT BETWEEN (t0.c3) AND (((t0.c3)-(t0.c3)))) FROM t0 WHERE ((((LIKE(NULL, 'ii볞')))<((((0.19235738859607143) BETWEEN (NULL) AND (0.48537619423886447)))))); -- 0ms;
SELECT GROUP_CONCAT(CASE t0.c0  WHEN t0.c0 THEN t0.c3 END) FROM t0 WHERE ((NOT (CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT AVG(((((t0.c3)OR(t0.c3)))OR(t0.c3))) OVER (), ((CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c3 END)*(((((((((t0.c3)AND(t0.c3)))AND(t0.c3)))AND(t0.c0)))OR(t0.c0)))), (- (CAST(t0.c3 AS REAL))) FROM t0 WHERE (((LIKELIHOOD(DISTINCT 0.4125302738858998, 0.8285051352141076))%(''))) LIMIT 930742438; -- 0ms;
SELECT CASE WHEN '0.7015469660826962' THEN IFNULL(t0.c0, t0.c0) END, rtreenode(AVG(t0.c3), t0.c3 COLLATE BINARY), CAST(MIN(t0.c0) AS BLOB) FROM t0 WHERE ((((x'', -1290393366, '')) BETWEEN (((NOT (x'')), ('-923329194' IN ()), (((''))<((x''))))) AND ((((NULL)%('1947242823')), CASE 0.47912597932645706  WHEN x'e47db55b' THEN 0X3889d7fd ELSE '6\\nJ%<jI' END, (((('-2022265391')AND(NULL)))AND(0.6648791490984761)))))); -- 0ms;
SELECT DISTINCT MAX((((t0.c0)) NOT BETWEEN ((t0.c3)) AND ((t0.c0)))) FROM t0; -- 0ms;
SELECT (((('0.28259043611433865') ISNULL)) NOT NULL), CASE COUNT(*)  WHEN ((t0.c3) IS TRUE) THEN ((((((((t0.c0)AND(t0.c3)))AND(t0.c0)))AND(t0.c3)))OR(t0.c3)) ELSE ((x'4275') ISNULL) END, COUNT(*) FROM t0 WHERE (((x'')%((('T/e^')<=(0.677374622399425))))) ORDER BY t0.c0 DESC  NULLS FIRST; -- 0ms;
SELECT ((((((t0.c0)LIKE(t0.c0)))AND('-1647373566')))AND(((((t0.c3)AND(t0.c0)))AND(t0.c0)))), CASE WHEN ((t0.c0) IS TRUE) THEN (((t0.c0, 1948423853, t0.c0)) NOT BETWEEN ((t0.c3, t0.c0, t0.c0)) AND ((t0.c3, t0.c3, t0.c3))) END, ((((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0)))>(COUNT(*))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c3, t0.c3, t0.c0)) BETWEEN ((((t0.c3)>=(t0.c0)), ((t0.c3)|(NULL)), t0.c3 COLLATE RTRIM)) AND ((((x'4ee1') BETWEEN (t0.c3) AND (t0.c0)), ((x'') BETWEEN (t0.c3) AND (t0.c0)), (((('4881354511824071831T2404950577153386080--3365504908426240979--7448336203508776077T1423611950151772808-110 {翻뇡^乔')OR(t0.c3)))OR(t0.c3))))), (((t0.c3 IN ()))IS((NOT (t0.c3)))), NULL, ((NULL)%(t0.c0 COLLATE BINARY)), ((((t0.c0) NOT NULL)) ISNULL) FROM t0 WHERE (STRFTIME((('') ISNULL), CAST('-1457888370' AS REAL), -767436255 COLLATE NOCASE, (('Gr')&(0.6757890485076856)), ((0.400638697910777) NOT NULL), ((x'') BETWEEN (0.8270060015993154) AND (x'')), ((NULL)>=('1085490310')))); -- 0ms;
SELECT (~ (DATE(t0.c3, t0.c0, t0.c0))) FROM t0 WHERE (CAST((((x'', NULL, '-968356021'))>((-2.022265391E9, '', -510110812))) AS REAL)); -- 0ms;
SELECT DISTINCT CAST(t0.c3 AS TEXT) COLLATE RTRIM, ABS(0.964198631458964) COLLATE NOCASE COLLATE RTRIM, ((((((((t0.c3)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c3)))))AND(((t0.c0)&(t0.c3)))))AND((((t0.c0, t0.c0, t0.c3)) NOT BETWEEN ((t0.c0, t0.c3, t0.c0)) AND ((t0.c0, t0.c3, t0.c3))))))AND(((((t0.c0)AND(t0.c3)))AND(t0.c3)))), (NOT (((t0.c0)>=(t0.c3)))), COUNT(COALESCE(t0.c3, t0.c0)) FROM t0 WHERE ((+ (CASE WHEN NULL THEN NULL END))); -- 0ms;
SELECT (((t0.c3 IN (t0.c0, t0.c3, 0.25058129605405954)))GLOB((((t0.c3))!=((t0.c3))))) FROM t0 WHERE (((((CAST(0.0019379345859754649 AS TEXT))AND(NULL)))OR((NULL IN ())))) GROUP BY CASE json_extract(t0.c3, x'431b', t0.c0, t0.c0)  WHEN ((t0.c3) BETWEEN (t0.c3) AND (t0.c3)) THEN t0.c3 COLLATE NOCASE ELSE ((((t0.c0)AND(t0.c3)))OR(t0.c0)) END; -- 0ms;
SELECT DISTINCT GROUP_CONCAT('XE') FILTER(WHERE (~ ('-1016956471'))) OVER ( GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW), (((((((((+ (t0.c0)))OR(('-270788089' IN ()))))AND(((t0.c0)AND(t0.c0)))))AND(((t0.c3)<(t0.c0)))))AND(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c3)))), 0Xffffffff9bdff6a1, GROUP_CONCAT(((((t0.c0)OR(t0.c3)))AND(t0.c0))), t0.c3 FROM t0 WHERE (((((729648823)IS(NULL))) IS FALSE)); -- 0ms;
SELECT '&㵭8K' FROM t0 WHERE (CASE WHEN (((0x28a675fc, 0.4852496439727527, 'o*?/^')) NOT BETWEEN ((x'', '-1924711791', 0.7276136371434562)) AND ((x'e14e', NULL, 0.03725054091184199))) THEN ((0Xffffffff84ea8750) IS FALSE) END) GROUP BY 'EEzU|('; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), ((((t0.c0)||(t0.c0))) NOTNULL), (CASE WHEN t0.c3 THEN t0.c3 END IN ((- (t0.c0)), ((t0.c3) NOT NULL))) FROM t0 GROUP BY (NOT ((((t0.c0, t0.c0, t0.c3))<(('-927217968', t0.c0, x''))))) HAVING '-308506208'; -- 0ms;
SELECT ALL ((x'34182357')GLOB(t0.c0)) FROM t0; -- 0ms;
SELECT ((((x'8147')/(t0.c3)))%(CAST(t0.c3 AS NUMERIC))), TOTAL(LOWER(t0.c3)) OVER (), ((LOWER(DISTINCT 0.6401309596076907))/(((t0.c0)>(t0.c3)))) FROM t0 WHERE ((((((-3.59697682E8 IN ('-1222902680')))AND((~ ('o')))))OR(COALESCE('', '{3')))); -- 4ms;
SELECT DISTINCT DENSE_RANK() OVER (), ((((((((TRIM(DISTINCT '#sa(fPj', t0.c0))AND(t0.c0 COLLATE NOCASE)))AND(((t0.c3)>>('1814942527')))))OR(((((t0.c3)OR(t0.c0)))AND(t0.c3)))))OR(t0.c3 COLLATE RTRIM)), ((((t0.c0)/(t0.c3))) NOT BETWEEN (((t0.c0)>('0.7276136371434562'))) AND (((t0.c0) BETWEEN (t0.c3) AND (t0.c0)))) FROM t0 WHERE (((((((('')) NOT BETWEEN (('re')) AND (('1390055403'))))AND((((''))>=((NULL))))))AND(NULL COLLATE BINARY))) GROUP BY (- (((t0.c3)=(t0.c0)))) HAVING CAST(t0.c0 AS REAL); -- 0ms;
SELECT DISTINCT CASE x''  WHEN ((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (- (t0.c3)) WHEN ((t0.c3)|(x'')) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN ((t0.c3) NOTNULL) THEN json(t0.c0) ELSE (t0.c0 IN (t0.c3)) END, IFNULL(GROUP_CONCAT(t0.c0), (((t0.c0))>((t0.c0)))), (((t0.c3 IN (t0.c0)))*(((t0.c0) NOT NULL))) FROM t0 WHERE (TRIM(DISTINCT CASE '9XiO'  WHEN NULL THEN NULL WHEN '1893985667' THEN 0.2509417281852242 WHEN x'' THEN 47307686 ELSE x'' END, (('J') NOT BETWEEN (x'fe29') AND (NULL)))); -- 0ms;
SELECT DISTINCT MAX(CASE WHEN t0.c0 THEN t0.c0 END), ((((0Xffffffff875bdfb2) NOT BETWEEN (t0.c0) AND (t0.c3))) BETWEEN (((t0.c3) NOTNULL)) AND ((((t0.c3))>((t0.c3))))), (- ((((t0.c3, t0.c3, t0.c0))<=((t0.c3, t0.c0, t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT ALL (((CAST(t0.c0 AS NUMERIC), ((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0)), (+ (t0.c0))))>=((t0.c3 COLLATE BINARY, (t0.c0 IN (t0.c0)), COUNT(*)))), MAX((('-1629535533')+(t0.c0))), TRIM(CASE WHEN t0.c0 THEN NULL ELSE t0.c0 END, CAST(t0.c3 AS BLOB)) FROM t0; -- 0ms;
SELECT ALL LTRIM(x'', ((t0.c0)%(t0.c0))), ((((t0.c3)>=(t0.c0))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((- (t0.c0)))), CAST(CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c3 END AS NUMERIC) FROM t0 WHERE (((((x'f3ff12ef', x'', '1300599944', NULL, x'')) NOT BETWEEN ((NULL, -1.7976931348623157E308, 0.8081460098911861, ')w', 'fQDR柱')) AND ((NULL, 0.7222885240998937, '{_OB\np]	|', '-1564602032', NULL))) IN ())); -- 0ms;
SELECT DISTINCT ((((((((TRIM(DISTINCT t0.c0))OR(TOTAL(t0.c3))))OR(((NULL) BETWEEN (t0.c0) AND (t0.c3)))))AND(GROUP_CONCAT(t0.c0))))OR((((t0.c0))>((x''))))) FROM t0 WHERE (((((((((((NULL)OR('1356169621')))AND(0.8739279705721914)))AND(0.683052138639711)))OR(-1.403699616E9)))<<(0.9810913100091186))); -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE BINARY IN ()) FROM t0 WHERE ((('0.9469093246533223') NOT BETWEEN ('0.0') AND (NULL)) COLLATE BINARY) GROUP BY (((t0.c3, t0.c3, t0.c3, t0.c3, t0.c3)) NOT BETWEEN ((HEX(t0.c3), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), ((x'')GLOB(t0.c0)), (t0.c0 IN ()), t0.c3 COLLATE BINARY)) AND ((((t0.c0)+(t0.c3)), JULIANDAY(t0.c3, t0.c0, t0.c0, t0.c0, t0.c3), CAST(t0.c0 AS INTEGER), (('') NOT NULL), ((t0.c3) ISNULL)))); -- 0ms;
SELECT DISTINCT t0.c3 FROM t0 WHERE (CAST((((1.390055403E9))<=((0.17355201351248883))) AS BLOB)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), CASE WHEN t0.c3 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c3 ELSE 0.5673691790754936 END ELSE (NOT (t0.c0)) END, CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c3))  WHEN ABS(t0.c3) THEN x'' END FROM t0 ORDER BY ((0.5189289101650174) IS FALSE) ASC  NULLS FIRST; -- 0ms;
SELECT ALL 'U?\r\s(tE', CASE ((t0.c0)!=(t0.c3))  WHEN (((t0.c0))>((t0.c3))) THEN ((t0.c3) IS TRUE) ELSE ((('359287881'))>=((t0.c0))) END, (((t0.c3))<((TOTAL('')))) FROM t0 LIMIT -702691736 OFFSET 105273901; -- 0ms;
SELECT DISTINCT ((((((t0.c0)AND(t0.c3)))OR(t0.c3))) NOT BETWEEN (t0.c0) AND ((NOT (t0.c3)))) FROM t0; -- 0ms;
SELECT ALL (- ((+ (t0.c3)))) FROM t0 LIMIT 793818763 OFFSET 391767433; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT (NULL IN (t0.c3, t0.c3))), AVG((((t0.c3, t0.c3, t0.c3, t0.c0, t0.c3)) NOT BETWEEN ((t0.c0, t0.c3, t0.c3, t0.c0, t0.c0)) AND ((t0.c0, t0.c3, t0.c3, t0.c3, '(x3 t')))) OVER (), MIN(((t0.c0) NOTNULL)) FROM t0; -- 0ms;
SELECT ALL GROUP_CONCAT(((((t0.c0)OR(t0.c0)))OR(t0.c3))) OVER () FROM t0 WHERE (CASE ((x'') IS FALSE)  WHEN CAST(x'' AS BLOB) THEN ((x'')<(NULL)) WHEN CAST(x'' AS NUMERIC) THEN ((((((((2.27111203E8)OR(0Xffffffffa211faec)))AND(NULL)))AND(0.7093892432753202)))AND('쀼zKG')) WHEN ((0Xffffffffbec325e7) ISNULL) THEN ('0.31828327582972205' IN ()) WHEN CASE WHEN x'4d21' THEN NULL ELSE 0.9552088690359071 END THEN (((x''))==((''))) WHEN (NULL IN ()) THEN (('-465666655') BETWEEN (x'') AND (x'')) END); -- 0ms;
SELECT ALL ((((((((t0.c3)OR(t0.c0)))OR(t0.c3)))OR(t0.c3 COLLATE NOCASE)))AND(t0.c0 COLLATE BINARY)) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE (((((((('R}YMVf+')OR('-617379804')))OR(1124414125))))>=((UNLIKELY('A{'))))); -- 0ms;
SELECT (((t0.c0))=(((t0.c0 IN (x'66e6', 2136486309))))) FROM t0 LIMIT 684077011; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( PARTITION BY 'Vd', ((NULL)+((((t0.c0))<>((t0.c3)))))), ((MAX(t0.c3)) IS TRUE), ((NULL) BETWEEN ((('571362210') ISNULL)) AND (CAST(t0.c3 AS BLOB))), SUM((((t0.c3)) NOT BETWEEN ((t0.c0)) AND ((t0.c3)))) OVER (), UPPER(t0.c0 COLLATE NOCASE) FROM t0; -- 0ms;
SELECT LAST_VALUE(((((((t0.c0)OR(t0.c3)))OR(t0.c0)))>((NOT (t0.c3))))) OVER () FROM t0 WHERE (((CAST(x'cc76' AS BLOB))*(CAST(x'' AS TEXT)))); -- 1ms;
SELECT ((((t0.c0 COLLATE BINARY)OR((((t0.c0))>((t0.c0))))))AND(CAST(t0.c3 AS REAL))) FROM t0 WHERE (((((((((CASE WHEN NULL THEN x'' WHEN NULL THEN NULL WHEN NULL THEN NULL ELSE NULL END)OR(highlight(0.3685947049502325, x'', x'', '-2146854680'))))AND(((186589667)||(NULL)))))AND(CAST('-639694115' AS BLOB))))OR((('䰀') BETWEEN ('1144090479') AND (NULL)))));SELECT ALL (~ ((t0.c3 IN ()))), IFNULL(DISTINCT t0.c0, ((((t0.c3)OR(t0.c0)))OR(t0.c3))), CAST(((t0.c3) IS TRUE) AS TEXT) FROM t0 WHERE (((((NULL)/(0x1)))GLOB(((((((((-651663359)AND(0X7ec8a080)))OR(NULL)))OR(x'')))OR('0.8043690911870226'))))); -- 0ms;
SELECT 1.93620998E9 FROM t0 WHERE ((((('2025744863')OR(NULL)))AND(NULL)) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT DISTINCT HEX(((t0.c0)IS(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT CAST((((t0.c3)) BETWEEN ((t0.c3)) AND ((t0.c3))) AS REAL) FROM t0 WHERE ((((CASE WHEN 4.75023986E8 THEN x'' ELSE 0.25407478826994145 END))<=(('f/')))); -- 0ms;
SELECT DISTINCT SUM((t0.c0 IN (t0.c3))) FILTER(WHERE (((((t0.c0) NOTNULL)))<=((1.721526215E9)))) OVER () FROM t0 WHERE ((~ (((NULL)>('start of monthAaE*'))))); -- 0ms;
SELECT ((((-7.13391343E8) BETWEEN (t0.c3) AND (t0.c0)))GLOB(0.8611854620014243)) FROM t0; -- 0ms;
SELECT ALL AVG(CAST(t0.c3 AS REAL)), ((t0.c0 IN ()) IN ()), CASE ((t0.c0) IS TRUE)  WHEN CAST(t0.c0 AS BLOB) THEN TOTAL(t0.c0) ELSE ((((t0.c3)OR(t0.c0)))OR(t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0 WHERE (((((('1552696714') NOTNULL), NULL COLLATE NOCASE, '194913102'))<((((186589667)OR(x'')), NULLIF(DISTINCT x'132f', 0Xffffffffa1350063), ((('-902440822', '', 0.3899842571579536)) BETWEEN (('X{', x'ebda', NULL)) AND (('-330570005', x'', 0.045433835080749385))))))); -- 1ms;
SELECT DISTINCT (t0.c0 IN ()) FROM t0 WHERE ('0.5425404152516874'); -- 0ms;
SELECT DISTINCT RANK() OVER (), NTH_VALUE(t0.c3, ((((t0.c0) ISNULL))>=((((t0.c3, t0.c0, t0.c0, t0.c0, t0.c3))<=((t0.c3, t0.c0, t0.c3, t0.c3, t0.c3)))))) OVER (), DENSE_RANK() OVER ( RANGE BETWEEN (((((t0.c3)==(t0.c3))))!=((t0.c0))) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t0;SELECT DISTINCT (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, 5.90149043E8)) AND ((t0.c3, t0.c0, t0.c0))))%(CAST(t0.c3 AS INTEGER))), x'509b' COLLATE RTRIM, ((t0.c3) IS FALSE) FROM t0; -- 0ms;
SELECT SUM((- (t0.c0))) OVER ( ORDER BY CAST(t0.c0 COLLATE NOCASE AS TEXT) DESC, (CASE WHEN t0.c3 THEN t0.c0 ELSE t0.c3 END IN ((NULL IN ()))), 1516677093 COLLATE RTRIM  NULLS LAST) FROM t0; -- 0ms;
SELECT (((((t0.c3)AND(t0.c0)))OR(t0.c3)) IN ()), NULLIF(DISTINCT t0.c3, t0.c0) COLLATE BINARY, CASE (t0.c3 IN (t0.c3, t0.c0))  WHEN t0.c0 THEN CAST(t0.c3 AS NUMERIC) END FROM t0 WHERE (CASE ((0.0797846595867685)&(NULL))  WHEN (NOT (x'')) THEN ('-406477129' IN ()) ELSE (('1149000750') BETWEEN ('') AND (x'03e4e233')) END); -- 0ms;
SELECT ALL ((((t0.c0)>=(t0.c0))) IS FALSE) FROM t0 WHERE (('293567477' IN ('0.43940844687263325')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST((NOT (t0.c3)) AS REAL) FROM t0 GROUP BY CAST(CASE WHEN t0.c0 THEN t0.c3 ELSE t0.c3 END AS NUMERIC); -- 0ms;
SELECT DISTINCT t0.c0, t0.c0, t0.c3, ((((t0.c0)GLOB(t0.c0)))||((t0.c3 IN ('-1494179295')))), (NULL IN ()) FROM t0; -- 0ms;
SELECT ALL CAST(CAST(t0.c3 AS TEXT) AS TEXT), CAST(((t0.c0)*(t0.c3)) AS REAL), UPPER(DISTINCT '-880758303'), ((((t0.c3) BETWEEN (t0.c3) AND (t0.c0)))=(((t0.c3)/(t0.c3)))), COUNT(*) OVER () FROM t0; -- 1ms;
SELECT DISTINCT t0.c3, LIKELY(DISTINCT (t0.c3 IN ())), ((t0.c0) NOT BETWEEN (((((t0.c3)AND(t0.c0)))AND(t0.c3))) AND (((((((((t0.c0)OR(t0.c0)))OR(-5.15844039E8)))AND(NULL)))AND(t0.c0)))), (AVG(t0.c0) IN (((t0.c0) IS TRUE))), '-1604144010' FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0)OR(t0.c0)))OR(t0.c3)) IN ()) FROM t0 WHERE ((('') IS FALSE)) GROUP BY (((- (t0.c3)))/(((t0.c3)*(t0.c3)))), ((((t0.c3) ISNULL))<(((t0.c0) IS TRUE))), ((((((((t0.c3 COLLATE BINARY)OR(TRIM(t0.c0))))AND(((((t0.c3)AND(t0.c3)))AND(t0.c0)))))OR((~ (t0.c3)))))AND(CAST(t0.c3 AS REAL))); -- 0ms;
SELECT DISTINCT AVG(((((((((t0.c3)AND(t0.c3)))AND(t0.c0)))AND(t0.c0)))AND(t0.c3))) OVER (), CASE ((t0.c3)GLOB(t0.c3))  WHEN COALESCE(t0.c0, t0.c0) THEN t0.c0 COLLATE RTRIM ELSE ((t0.c0) NOT NULL) END, (((t0.c3) IS TRUE) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c3)OR(t0.c3)))AND(t0.c3)))AND(t0.c3)))AND(t0.c0))) NOTNULL) FROM t0 WHERE ((((((NOT (0.13212073084866394)))OR(json_patch('c', 'Q#JL	W-'))))OR(((x'')>>(-1.181179606E9)))));SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 WHERE (x'' COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM) GROUP BY t0.c0 HAVING (((((((t0.c3)AND(t0.c0)))OR('-1583147707'))))<((MIN(t0.c0)))) ORDER BY ((0.3352363681317847) NOTNULL) ASC, UNLIKELY(t0.c3)  NULLS FIRST, ((((NULL)OR(((t0.c0) ISNULL))))OR(0.4844420561809243))  NULLS LAST; -- 0ms;
SELECT 0.06417224104829167 FROM t0 WHERE (((NULL)>('Qv	I')) COLLATE RTRIM); -- 0ms;
SELECT ALL 0.8295592383047107, CASE WHEN ((t0.c3)AND(t0.c0)) THEN CAST(t0.c0 AS REAL) ELSE CASE t0.c3  WHEN t0.c3 THEN t0.c3 END END, (((t0.c3)<(x'')) IN ()) FROM t0 ORDER BY CAST((((t0.c3)) NOT BETWEEN ((t0.c3)) AND ((t0.c3))) AS REAL); -- 0ms;
SELECT ((t0.c3) NOT BETWEEN (CASE -2115551202  WHEN t0.c3 THEN t0.c3 ELSE t0.c0 END) AND (CAST(t0.c0 AS TEXT))) FROM t0; -- 0ms;
SELECT (((t0.c3) NOT NULL) IN (t0.c3 COLLATE BINARY, t0.c3)), CAST(GROUP_CONCAT(t0.c3) AS REAL), ((((t0.c0) BETWEEN (t0.c3) AND (t0.c0))) BETWEEN ((t0.c3 IN ())) AND (((t0.c0)GLOB(t0.c0)))) FROM t0; -- 0ms;
SELECT ALL ((((t0.c0)AND(t0.c0)))OR(t0.c3)) COLLATE NOCASE FROM t0 WHERE (CASE WHEN ((-1338969608) NOT BETWEEN (NULL) AND (x'82cb')) THEN ((('A', '-1629396198', NULL)) BETWEEN ((NULL, 'wRꆋ5''D3䩲', 0.5892516558622004)) AND ((-1.891486228E9, 0.1631151443885993, x''))) END); -- 0ms;
SELECT DISTINCT (((0.14654319242266045) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) FROM t0; -- 1ms;
SELECT ALL CASE WHEN AVG(t0.c0) THEN UNLIKELY(t0.c0) ELSE t0.c3 COLLATE NOCASE END FROM t0 WHERE ((((('864108353')>=(1381852647)))OR((NULL IN ())))); -- 0ms;
SELECT DISTINCT MAX('-295954862', COALESCE(DISTINCT t0.c0, t0.c3, t0.c3, t0.c3)), CAST(MAX(t0.c0) AS INTEGER), NTH_VALUE(((((((('-2065507239')) BETWEEN ((t0.c0)) AND ((t0.c0))))OR((t0.c0 IN ()))))OR(CASE t0.c3  WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c3 END)), ((((json_object(t0.c0, t0.c3))AND(((t0.c0) BETWEEN (t0.c0) AND (NULL)))))OR(TRIM(t0.c3)))) OVER () FROM t0 WHERE (((NULL)<>('1200526164')) COLLATE RTRIM);SELECT ALL ((((((((CASE WHEN t0.c0 THEN t0.c0 END)AND(CAST(t0.c3 AS REAL))))OR(((t0.c3)|(t0.c3)))))AND(((t0.c0)-('-2020962050')))))OR(((((t0.c0)AND(t0.c3)))AND(t0.c3)))) FROM t0 WHERE (((((('1620738060')) NOT BETWEEN ((0X45737fcb)) AND (('5Z'))))>(((880941919)>=('{7ey'))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))||(json_quote(t0.c0))) DESC  NULLS FIRST; -- 1ms;
SELECT NULL FROM t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c3 THEN t0.c3 END)AND(t0.c0)) FROM t0 NOT INDEXED LIMIT 719459405; -- 0ms;
SELECT ((((t0.c0) ISNULL))&((x'' IN (t0.c3, '1905993640')))) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE NOCASE FROM t0; -- 0ms;
SELECT CAST(CAST(x'05f7' AS TEXT) AS NUMERIC) FROM t0 WHERE ((((((0.5221138962459252)) NOT BETWEEN ((0.07779180594556045)) AND ((NULL)))) NOT BETWEEN (((x'332680b8')AND('1949929263'))) AND (((((x'135e')AND(NULL)))AND(0.5763833988405593))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(MAX(NULL)), ((TOTAL(t0.c3)) NOTNULL), (((((t0.c0)) BETWEEN ((t0.c3)) AND ((x'e32e'))))=(((((t0.c3)AND(t0.c0)))OR(t0.c3)))) FROM t0;SELECT CASE WHEN (~ (t0.c0)) THEN COUNT(t0.c3) END, TOTAL(((t0.c3) NOT NULL)) COLLATE NOCASE, t0.c0 FROM t0 WHERE (((((('gꭜ')) BETWEEN (('#82_㣀[')) AND (('-1583147707')))) NOTNULL)) LIMIT -1162735540; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT UPPER(DISTINCT (- (t0.c3))), (((- (t0.c3))) IS FALSE), SUM(((t0.c3) NOTNULL)) FROM t0 ORDER BY CAST(CHAR(t0.c0) AS TEXT) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT t0.c3 FROM t0 WHERE ((- (-8.30173494E8 COLLATE NOCASE))) ORDER BY (((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (''))))  NULLS FIRST; -- 0ms;
SELECT ALL (((AVG(t0.c3), highlight(t0.c0, t0.c3, t0.c3, t0.c3), CASE 0.403195204610423  WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c3 WHEN t0.c3 THEN t0.c3 END))<(((t0.c0 IN (t0.c3)), t0.c0 COLLATE BINARY, ((t0.c0)AND(t0.c0))))) FROM t0 WHERE (LIKELIHOOD(((((x'39a4')AND(x'')))OR(0.9336706003813536)), 0.451790179417356)) LIMIT -1903256427 OFFSET 498501113; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CAST(t0.c0 AS INTEGER) COLLATE BINARY) OVER () FROM t0; -- 0ms;
SELECT ALL -1.924711791E9 FROM t0 WHERE (((('p}^E')) NOT BETWEEN ((CAST('' AS TEXT))) AND ((((NULL) NOT NULL))))); -- 0ms;
SELECT DISTINCT ((t0.c3)GLOB(t0.c0)) COLLATE BINARY FROM t0 WHERE (CAST(((NULL)%(-1.293279052E9)) AS INTEGER)); -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY t0.c0 ASC) FROM t0 WHERE (CASE WHEN ((((0xffffffffbbf0774a)OR(0.09705907860688823)))OR(0.1643415411995537)) THEN (('') NOT BETWEEN (x'e09a') AND (0.648998411268857)) WHEN x'' COLLATE BINARY THEN (0Xffffffffa0810dac IN ()) WHEN ((NULL)<=('0.5763833988405593')) THEN ((NULL) IS FALSE) ELSE (((1e500))>((0.11663639760329292))) END); -- 0ms;
SELECT t0.c0 FROM t0 WHERE ((+ ((((('	5(mT?lV')AND(x'')))AND(x''))))); -- 0ms;
SELECT DISTINCT (NOT (((((t0.c3)AND(t0.c0)))OR(t0.c0)))), (((t0.c3 IN ())) IS TRUE), (((('-1760289802') IS TRUE)) NOT NULL) FROM t0 WHERE (IFNULL(DISTINCT CASE WHEN x'' THEN 'u\r|k驆0Tzl' ELSE 'hjWWd)L' END, (~ ('w&')))); -- 0ms;
SELECT QUOTE(((t0.c3)>>(t0.c0))) FROM t0; -- 0ms;
SELECT ALL (~ (((((t0.c0)OR(t0.c0)))AND(t0.c3)))), ((+ (t0.c0)) IN ()), CASE (+ (t0.c0))  WHEN HEX(t0.c3) THEN ((t0.c0)AND(t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN (+ (t0.c0)) WHEN ((NULL)=(t0.c0)) THEN (t0.c0 IN ()) WHEN ((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) WHEN ((t0.c0)>(t0.c3)) THEN COUNT(*) END FROM t0 WHERE ((((NULL IN ()))<>((((NULL))>=((0.33759973271811083)))))) LIMIT 1632010588 OFFSET 2058337803; -- 0ms;
SELECT DISTINCT t0.c3, (((t0.c3)) BETWEEN ((t0.c3)) AND ((((t0.c0) NOT NULL)))), ((((t0.c3)<<(t0.c3)))&(MIN(t0.c3))) FROM t0 WHERE (CASE json_type(NULL)  WHEN 0.3277336923164026 COLLATE RTRIM THEN UNLIKELY(DISTINCT x'4558') ELSE CAST(NULL AS NUMERIC) END); -- 0ms;
SELECT DISTINCT (((((t0.c0, t0.c0, t0.c3)) BETWEEN ((t0.c0, t0.c3, t0.c0)) AND ((t0.c0, t0.c3, t0.c3)))) BETWEEN (((t0.c3)AND(t0.c3))) AND (MIN(t0.c3))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))<<('i}x')) FROM t0; -- 0ms;
SELECT ALL ((((((((((((t0.c0)OR(t0.c3)))AND(t0.c0)))AND(t0.c0)))OR(t0.c3)))OR(((t0.c3)<(t0.c3)))))OR(t0.c3 COLLATE BINARY)) FROM t0; -- 0ms;
SELECT t0.c3, x'6b05', t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c3) NOTNULL) THEN ((t0.c0)*(t0.c3)) ELSE t0.c3 COLLATE BINARY END FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c3)) THEN ((t0.c3)>>(t0.c3)) ELSE COUNT(*) END FROM t0 WHERE (LOWER(DISTINCT ('-1529978078' IN ()))); -- 0ms;
SELECT DISTINCT RANK() OVER ( RANGE BETWEEN ((CASE WHEN t0.c0 THEN t0.c3 END) NOTNULL) FOLLOWING AND ((CASE t0.c3  WHEN t0.c3 THEN t0.c3 END) BETWEEN (((t0.c3) NOT NULL)) AND (((t0.c0) BETWEEN (t0.c3) AND ('1019169967')))) FOLLOWING) FROM t0 WHERE (((CASE WHEN x'' THEN NULL ELSE 0.9023578480925938 END)<>('0.025333425391277586' COLLATE RTRIM)));SELECT CAST(((t0.c3) NOT NULL) AS REAL) FROM t0 ORDER BY '1064934920' DESC  NULLS FIRST; -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c0) IS TRUE)) COLLATE BINARY FROM t0 WHERE (((((NULL)OR('170593636')))>=((0.4421689450243198 IN ())))) LIMIT -1710407338 OFFSET -1072964615; -- 0ms;
SELECT t0.c3 FROM t0 WHERE ((('' IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((CASE t0.c3  WHEN t0.c0 THEN t0.c3 ELSE t0.c3 END) BETWEEN (LOWER(t0.c0)) AND ((t0.c3 IN ()))) FROM t0; -- 0ms;
SELECT ALL ((CAST(t0.c0 AS TEXT))-(DATE(t0.c0, t0.c0, t0.c0))), CAST(MAX(t0.c3) AS INTEGER), CAST(x'' AS REAL), (((+ (t0.c3)))+(((((0.7123675802456862)OR(NULL)))AND(t0.c0)))), CUME_DIST() OVER ( PARTITION BY t0.c3, TRIM(t0.c3)) FROM t0 GROUP BY ((((NULL) BETWEEN (t0.c3) AND (0.9469093246533223)))>=((+ (0x404ba5fc)))) HAVING (((t0.c3 IN (t0.c0)))>(((t0.c3) BETWEEN (t0.c0) AND (t0.c0)))); -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((CAST(t0.c0 AS REAL))) AND (((t0.c0 IN ())))) FROM t0 WHERE (CAST((('-2086112431') NOT BETWEEN (x'2289') AND (1814942527)) AS TEXT)); -- 0ms;
SELECT ALL CASE WHEN ((((0X211b41f4)AND(t0.c3)))OR(t0.c3)) THEN CAST(t0.c0 AS NUMERIC) END FROM t0 NOT INDEXED WHERE ((((((NULL) NOTNULL)))=(((((('0.5189289101650174')AND('')))OR(x'')))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), ((((((((((t0.c0)OR(t0.c0)))OR(t0.c3)))OR(t0.c3)))AND(t0.c3)))>=(SUM(t0.c0))), ((((CAST(t0.c3 AS NUMERIC))AND(t0.c0)))AND('-Np\\n}vZE')) FROM t0 LIMIT 319949403 OFFSET -1957174156; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c3, t0.c0)) NOT BETWEEN (((+ (t0.c3)), ((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)), CAST(t0.c3 AS BLOB))) AND ((SUM(t0.c3), t0.c0, CASE t0.c3  WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c3 WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END))) FROM t0 WHERE ((NOT ('')) COLLATE NOCASE) ORDER BY ((((t0.c0)IS NOT(t0.c3)))AND((t0.c0 IN (NULL)))); -- 1ms;
SELECT DISTINCT t0.c0, (((((t0.c3)) NOT BETWEEN ((t0.c3)) AND ((NULL)))) NOT BETWEEN ((+ (t0.c0))) AND ((~ (t0.c0)))), t0.c3 FROM t0; -- 0ms;
SELECT CASE WHEN ((((t0.c3)OR(t0.c3)))AND(t0.c0)) THEN ((t0.c3) IS TRUE) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c3 WHEN t0.c3 THEN t0.c3 ELSE t0.c0 END END FROM t0 WHERE (((NULL) NOT NULL)); -- 0ms;
SELECT DISTINCT ((MIN(t0.c3))IS(CASE WHEN t0.c3 THEN NULL END)), ((((((((t0.c3)OR(TRIM(DISTINCT t0.c0, t0.c3))))OR(((t0.c0)==(t0.c0)))))AND(((t0.c0)IS NOT(t0.c3)))))OR(((t0.c3)IS('Gs''褆	뎙2~')))), (((((t0.c0)) BETWEEN ((t0.c3)) AND ((t0.c3))))>=(((t0.c3)AND(t0.c0)))) FROM t0; -- 0ms;
SELECT ALL x'', (((t0.c3, t0.c3, t0.c3)) BETWEEN ((GROUP_CONCAT(t0.c3), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c3)), t0.c0)) AND ((((t0.c3)>(t0.c3)), ((((t0.c3)OR(t0.c3)))AND(t0.c3)), ((t0.c3)<<(t0.c0))))), (((((('-1455656375')<(t0.c3)))OR((('0.5653204928560421') NOT BETWEEN (t0.c3) AND (t0.c3)))))OR(CAST(t0.c3 AS INTEGER))) FROM t0 WHERE (((CAST('748304868' AS NUMERIC)) NOT BETWEEN (CASE '-1858241321'  WHEN '-166330317' THEN NULL ELSE 0Xfffffffff7ce98de END) AND (CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS TEXT))-(GLOB(t0.c3, t0.c0))), x'' COLLATE NOCASE, ((((((((((t0.c0)LIKE(t0.c0)))AND(((t0.c3)<>(t0.c3)))))AND(((((t0.c3)OR(t0.c0)))OR(t0.c0)))))OR(((t0.c3) BETWEEN (t0.c0) AND ('od')))))OR(x'')) FROM t0 WHERE (CHAR('%GDeVZ') COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((((((((t0.c3)/(t0.c3)))AND(((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c3)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (-1049595275)))))OR(CAST(t0.c3 AS TEXT))))AND(((((t0.c3)AND(t0.c3)))AND(t0.c3)))), CASE WHEN ((t0.c3)<('2K爲車!4<')) THEN ((((((((t0.c3)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) END), CASE WHEN (~ (t0.c3)) THEN CAST(t0.c3 AS NUMERIC) WHEN t0.c0 COLLATE NOCASE THEN ((((((((((((t0.c0)OR(t0.c3)))AND(t0.c3)))OR(t0.c0)))AND(x'')))OR(t0.c0)))OR(t0.c3)) WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE RTRIM ELSE ((t0.c3) NOT BETWEEN (t0.c0) AND ('969208162')) END, t0.c0 FROM t0 LIMIT 589291301; -- 0ms;
SELECT ((LIKELIHOOD(DISTINCT t0.c0, 0.5917458176074352)) NOT BETWEEN (((t0.c3) BETWEEN (t0.c0) AND (t0.c0))) AND (COUNT(*))) FROM t0 WHERE (((LOWER(DISTINCT NULL))>=(CASE x''  WHEN '&?' THEN NULL WHEN x'9490' THEN 0.35953239640859036 WHEN x'148c' THEN '' END))); -- 1ms;
SELECT ALL (((t0.c3 IN ()))<(COUNT(t0.c0))) FROM t0; -- 0ms;
SELECT ALL CAST(t0.c3 COLLATE RTRIM AS INTEGER) FROM t0 WHERE (CASE x''  WHEN (('gB	h]&.') BETWEEN (0.520375591569121) AND ('>*')) THEN CASE 0.9509078335729378  WHEN NULL THEN NULL ELSE NULL END END); -- 0ms;
SELECT DISTINCT ((((t0.c3) NOTNULL))|((t0.c3 IN ()))) FROM t0 LIMIT -1167700072; -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0) BETWEEN (t0.c3) AND (t0.c0))) OVER (), (((- (t0.c3)))<=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c3 ELSE t0.c3 END)), x'3ad9' FROM t0; -- 0ms;
SELECT ALL ((t0.c3 IN ()) IN ()) FROM t0 ORDER BY '0.680846293188571' DESC  NULLS FIRST, CAST(((t0.c3)IS(t0.c3)) AS REAL); -- 0ms;
SELECT DISTINCT ((CASE t0.c3  WHEN t0.c0 THEN t0.c0 END) BETWEEN (QUOTE(t0.c0)) AND (((t0.c3) BETWEEN ('789620167') AND (t0.c3)))) FROM t0 WHERE (HEX((- (-1.583147707E9)))) GROUP BY CAST(((t0.c0)/(t0.c0)) AS REAL) HAVING CAST(LIKELY(t0.c0) AS BLOB) ORDER BY CASE t0.c3  WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN t0.c3 END COLLATE BINARY DESC  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c3)))/(((((t0.c0)OR(t0.c3)))AND(t0.c3)))) ASC LIMIT 406040957; -- 1ms;
SELECT DISTINCT ((((((t0.c3)OR(t0.c3)))AND(NULL)))==(t0.c3 COLLATE RTRIM)), CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c0 WHEN x'' THEN t0.c3 END AS NUMERIC), ((((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0)))&((0.7355128339251651 IN ()))) FROM t0 WHERE (((CASE 2094770713  WHEN -963085955 THEN '' WHEN 0.8920371547990409 THEN 382833391 WHEN x'' THEN NULL ELSE NULL END) IS TRUE)); -- 0ms;
SELECT ALL ((((t0.c0 IN (t0.c0))))=((t0.c3))) FROM t0; -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL) FROM t0 LIMIT 31073892 OFFSET 1917366442; -- 0ms;
SELECT TRIM(((t0.c0)IS(t0.c3))) FROM t0 WHERE ('-1583147707'); -- 0ms;
SELECT ALL (+ (((t0.c0) BETWEEN (t0.c3) AND (t0.c3)))), ((t0.c3)-(t0.c0)) COLLATE BINARY COLLATE BINARY, LAG((((((((t0.c3))<((t0.c3))))OR(CASE WHEN 0.35299118677634755 THEN t0.c0 ELSE t0.c3 END)))OR((((t0.c3))>((t0.c3))))), t0.c3, t0.c3) OVER ( ORDER BY ((t0.c0)<<('u+nN0闺T'))  NULLS LAST) FROM t0 WHERE ((((((x'' IN ()))OR((('-1609642833')=(NULL)))))OR((((NULL)) NOT BETWEEN (('H')) AND (('-515028620')))))); -- 1ms;
SELECT DISTINCT TOTAL(CAST(t0.c0 AS REAL)) OVER (), (((~ (t0.c0))) BETWEEN (MIN(t0.c3)) AND (x'')), ((CASE WHEN t0.c0 THEN t0.c3 END) NOTNULL) FROM t0 WHERE (((((x'cdfd' IN ('f')), CAST('쀼zkg' AS BLOB), (NOT ('?6.G')), ((-1.016956471E9)||(x'cd1d')), '1㦿 rd{}' COLLATE RTRIM))>(('''', NULL, ((((NULL)AND(x'd8a4')))AND(NULL)), ((NULL)IS NOT(0.8072682601327068)), (- (0.8398904599470177)))))); -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c3 COLLATE RTRIM)AND(1103495558)))OR(t0.c3 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT (~ (((((((((t0.c3)OR(t0.c3)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))), COUNT(*), CAST(((t0.c0) IS TRUE) AS BLOB) FROM t0 WHERE (((('1253655624' IN ('-62423758', 0.8689232421626217)))AND(0.6602945281362776 COLLATE NOCASE))); -- 0ms;
SELECT COUNT(((t0.c3)<(t0.c0))) FROM t0; -- 1ms;
SELECT ALL (((((t0.c0)LIKE(t0.c3))))>((CASE t0.c3  WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN NULL WHEN t0.c0 THEN t0.c3 END))) FROM t0 WHERE ((((NULL)) NOT BETWEEN (((((NULL)) NOT BETWEEN ((163625356)) AND ((x''))))) AND ((((0.8135085323038391)/('918480260')))))); -- 0ms;
SELECT DISTINCT ((('1949929263', ((t0.c3) NOTNULL), (t0.c0 IN ()), (t0.c0 IN ()), (t0.c3 IN ())))<=(((((t0.c3, t0.c0, t0.c0))=((t0.c0, t0.c3, t0.c3))), x'', CASE t0.c3  WHEN t0.c0 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c3 ELSE t0.c0 END, (+ (t0.c3)), ''))) FROM t0 WHERE (CAST(0.6175568913118697 AS BLOB) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST(((((((((t0.c3)OR(t0.c0)))OR(t0.c3)))OR(t0.c3)))AND(NULL)) AS REAL) FROM t0 WHERE ((- ((NULL IN ())))); -- 0ms;
SELECT ((((t0.c3)AND(((t0.c3) BETWEEN (t0.c3) AND (t0.c3)))))AND((~ (t0.c0)))) FROM t0 WHERE ((((((NULL, NULL, NULL))<((0x1db685f9, NULL, NULL)))) BETWEEN (x'' COLLATE BINARY) AND ((x'aef2' IN ())))); -- 0ms;
SELECT DISTINCT (((t0.c3 IN ()))*(CASE t0.c3  WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END)) FROM t0 WHERE (((((((((TOTAL_CHANGES())AND(x'' COLLATE NOCASE)))OR(((((0.04139369903275558)AND(x'')))OR(NULL)))))AND(((0.19020159024367067) BETWEEN (1.481592321E9) AND (NULL)))))OR(((0.9154108018659896) NOT NULL)))); -- 1ms;
SELECT DISTINCT ((((t0.c3) NOTNULL)) BETWEEN (t0.c3 COLLATE BINARY) AND (((t0.c3) NOT BETWEEN (NULL) AND (t0.c3)))), (((t0.c3) NOTNULL) IN ()), t0.c0 FROM t0 WHERE ((((((((((((((0.6508093157064005 IN ()))AND((('!')&(NULL)))))OR(((NULL)IS(NULL)))))OR((NULL IN (0.9974731356573038, '-695484298')))))OR(CAST(x'' AS BLOB))))OR((('-992465847')>(x'')))))AND(((NULL)>=(x'6257'))))); -- 0ms;
SELECT DISTINCT (NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c3)))) FROM t0; -- 0ms;
SELECT ((t0.c0)IS NOT('0.9632773798901731')) COLLATE RTRIM FROM t0 WHERE (((('-1891486228'))<>((0.4414042936650534 COLLATE BINARY)))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM t0 WHERE ((((((NOT (x'4c4d')))AND(((((x'51df')AND(x'')))AND(0.8337185101680874)))))OR((('-1318358689') ISNULL)))); -- 0ms;
SELECT ALL AVG(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3))) OVER () FROM t0; -- 1ms;
SELECT DISTINCT ((((x'3d77')AND(t0.c0)))/(((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c3)))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c3 FROM t0 WHERE (LOWER(x'')) LIMIT -884719938 OFFSET 1008581101; -- 0ms;
SELECT DISTINCT '-1404666818' FROM t0 WHERE (((((((NULL)OR(NULL)))AND(x'')))==(((((((((NULL)AND(NULL)))AND(x'6fc1bdd8')))AND(x'77e7')))AND(x''))))) ORDER BY CAST(t0.c3 AS REAL) COLLATE BINARY ASC  NULLS LAST; -- 0ms;
SELECT ALL SUM((t0.c3 IN (t0.c0))) FROM t0 LIMIT 1868113318 OFFSET 0; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN (NOT (t0.c0)) END, ((((t0.c3)<>(t0.c0)))<=(json_object(1711624680, t0.c0, 'W[如]z', t0.c0))), CAST(t0.c3 COLLATE RTRIM AS NUMERIC) FROM t0 WHERE (((((NULL)<<(0.1320936045282617)))=(CAST(NULL AS NUMERIC)))); -- 1ms;
SELECT ALL CAST(TYPEOF(t0.c3) AS TEXT), t0.c0, (- (((t0.c0) IS TRUE))), (((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)) IN ()), (((((((t0.c3, t0.c0, t0.c0))<>((t0.c3, t0.c0, t0.c3))))AND(CAST(0.8919440552932182 AS INTEGER))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE ((UPPER(NULL) IN ())) ORDER BY (~ (CASE WHEN t0.c3 THEN t0.c0 END)) ASC  NULLS FIRST, ((((t0.c0) IS FALSE)) NOT NULL); -- 0ms;
SELECT DISTINCT (((t0.c3)AND(t0.c3)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c0))<=((t0.c3)))))>=((IFNULL(t0.c3, x'')))), ((((t0.c3)AND(((t0.c3) IS TRUE))))AND(CASE WHEN t0.c0 THEN t0.c0 END)), t0.c3 FROM t0 WHERE (((((CAST(1755856035 AS REAL))AND('-1016956471')))OR(0.4788811982850011 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT NULL, 0.31259677132102626, ((IFNULL('', t0.c3))=(CAST(t0.c0 AS BLOB))) FROM t0; -- 0ms;
SELECT DISTINCT ((((0.8120175605915644)AND((t0.c3 IN ()))))OR(NULL)) FROM t0 WHERE ((((((0.9632773798901731))<((NULL)))) NOT BETWEEN ((('0.4919874102990951')LIKE('1643014180'))) AND (((9.786339E7) NOT NULL)))) GROUP BY -1798537221 HAVING t0.c0;SELECT DISTINCT (((t0.c0)) BETWEEN ((t0.c3 COLLATE RTRIM)) AND ((((t0.c0)==(t0.c0))))) FROM t0; -- 0ms;
SELECT ALL RANK() OVER (), t0.c0, ((NULL) NOTNULL) FROM t0 WHERE ((((0.6838562346870719)) NOT BETWEEN (('0.35966887678809834')) AND ((-1634566382))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((COALESCE(DISTINCT t0.c0, t0.c3)))<((((x'')<=(t0.c0))))) FROM t0 WHERE ((~ ((('1374828991')GLOB(0.014295477299131498))))); -- 0ms;
SELECT DISTINCT ((((('sy蛸H'))>=((t0.c3))))<=((((t0.c3, t0.c3, t0.c3))==((t0.c0, t0.c0, t0.c0))))) FROM t0 WHERE (NULLIF((~ (0.3081695031987809)), (NOT ('208941617')))) ORDER BY CAST(COALESCE(t0.c0, t0.c3) AS INTEGER) DESC  NULLS FIRST, UPPER((+ (t0.c0))) DESC  NULLS LAST LIMIT -435793846; -- 1ms;
SELECT COUNT(((0.8777222722693725) NOT BETWEEN (t0.c0) AND ('yr'))) FROM t0; -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT ((CASE t0.c3  WHEN t0.c0 THEN t0.c0 END)IS NOT((t0.c3 IN ()))) FROM t0 WHERE (((((NULL) BETWEEN (0.17261392334874492) AND (x'cdc1'))) IS TRUE)); -- 0ms;
SELECT DISTINCT SUM(((t0.c3)==(t0.c3))) OVER () FROM t0 WHERE (((((-0.0)-(x'3e53')))>>((('-1688172298')*('?%'))))); -- 0ms;
SELECT ALL CASE WHEN CAST(t0.c0 AS INTEGER) THEN (~ (t0.c0)) END, (((t0.c0)) NOT BETWEEN ((NULL)) AND ((CASE t0.c0  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c3 END))), COUNT(*), SUM(NULL), ((((((((((((((t0.c3)|(t0.c0)))OR(json_extract(t0.c0, t0.c0))))OR(t0.c0)))OR((((t0.c3, t0.c0, t0.c0))>((t0.c3, t0.c0, t0.c0))))))OR(SQLITE_SOURCE_ID())))OR('0.6184800916230775')))AND((- (t0.c3)))) FROM t0;SELECT DISTINCT ((-1.924711791E9 COLLATE NOCASE)<>((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0 WHERE (((CASE '-484882647'  WHEN x'8f4655eb' THEN 330111327 ELSE '-695484298' END)<<(((-5.97955677E8) BETWEEN (x'') AND (0.9424513436885799))))) LIMIT -1046574583; -- 0ms;
SELECT (t0.c3 IN ()) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT ((NULL)<<(LOWER(DISTINCT t0.c3))) FROM t0 WHERE ((-175179200 COLLATE RTRIM IN ((((('0.5106930689254845')AND('1511317906')))AND(x''))))) ORDER BY (+ (((NULL) NOTNULL))) ASC  NULLS LAST, ((('' IN (t0.c3)))<(RTRIM(''))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((((((((((((t0.c3)AND(t0.c3)))OR(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0)))))AND(NULLIF(t0.c3, t0.c3))))AND(t0.c3)))OR(t0.c0)))OR(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0)))))OR(t0.c0 COLLATE BINARY)), ((CAST(t0.c3 AS REAL)) NOT BETWEEN ((+ (t0.c3))) AND (((t0.c0)+(t0.c0)))), -3.30570005E8 FROM t0; -- 0ms;
SELECT COUNT(t0.c0), (~ ((t0.c0 IN ()))), (~ (t0.c0)) FROM t0 WHERE (x'') GROUP BY (- ((t0.c3 IN (t0.c3)))) HAVING (((CASE t0.c3  WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END))<=(('fC),2b'))); -- 1ms;
SELECT DISTINCT (((NOT (t0.c3))) IS TRUE), '>2', DENSE_RANK() OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM t0; -- 0ms;
SELECT DISTINCT LAST_VALUE((~ (NULL))) OVER () FROM t0 WHERE ((((((0.9987694121395456)AND(NULL)))OR('*\\z(K\v')) IN (ROUND('f/', x''), (0.034784418788630145 IN ())))) GROUP BY t0.c0, (((((NULL))<>((t0.c3)))) NOT NULL), (((t0.c3 IN ())) NOT BETWEEN (((t0.c0)>=(t0.c3))) AND ('0.9663600429546766')); -- 0ms;
SELECT DISTINCT (((- (t0.c0)))>=(((t0.c3) ISNULL))) FROM t0 WHERE (((((NULL) ISNULL))*((('')+(0x764a9043))))); -- 0ms;
SELECT DISTINCT NULL, ((t0.c3)|(t0.c3)) COLLATE RTRIM, FIRST_VALUE((((t0.c0, t0.c3, t0.c0))=((t0.c3, t0.c0, t0.c3))) COLLATE BINARY) OVER ( RANGE  CURRENT ROW) FROM t0; -- 0ms;
SELECT ((((NULL) NOTNULL))IS NOT(((((t0.c3)OR('ys_Vi')))OR(t0.c0)))), ((CAST(t0.c0 AS BLOB))/(0.4594413335402058 COLLATE NOCASE)), ((LIKELY(DISTINCT t0.c3)) NOT BETWEEN ((((0.8167958295278093))==((t0.c0)))) AND (t0.c3)), (~ (t0.c3)) COLLATE NOCASE COLLATE NOCASE, COUNT((- (t0.c0))) FROM t0; -- 1ms;
SELECT DENSE_RANK() OVER ( ROWS BETWEEN  CURRENT ROW AND (~ (((t0.c0) BETWEEN (t0.c3) AND (t0.c0)))) PRECEDING) FROM t0;SELECT DISTINCT FIRST_VALUE((NOT (t0.c3))) OVER () FROM t0 GROUP BY (((((t0.c3))<=((t0.c0))))<(((t0.c0)IS NOT(t0.c3)))) ORDER BY CASE ((t0.c3) IS FALSE)  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c3) IS FALSE) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)IS NOT(t0.c3)) WHEN ((t0.c3)+(t0.c0)) THEN ((((((((((((t0.c0)AND(t0.c3)))OR(t0.c3)))AND(NULL)))OR('g7')))OR(t0.c3)))OR(t0.c3)) END; -- 0ms;
SELECT CASE WHEN CASE WHEN t0.c0 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END THEN (0x370b6d9b IN (t0.c3, t0.c0)) ELSE (('-900488821')%(t0.c3)) END FROM t0; -- 0ms;
SELECT ALL (((((t0.c0)/(619088267))))<((TOTAL(t0.c3)))) FROM t0; -- 0ms;
SELECT LAST_VALUE(t0.c0) OVER () FROM t0 WHERE (0.8836646156536139); -- 0ms;
SELECT 0xffffffffed9c91a0 FROM t0 WHERE ('') ORDER BY ((((CASE t0.c3  WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c0 ELSE 0x3e118c30 END)OR(CAST(t0.c3 AS INTEGER))))OR(CAST(t0.c0 AS BLOB)))  NULLS LAST, ((((t0.c0)&(t0.c3))) NOTNULL), CAST(((t0.c3)*(t0.c3)) AS TEXT) ASC; -- 0ms;
SELECT DISTINCT ((((t0.c3)*(t0.c0)))>=(t0.c0 COLLATE RTRIM)) FROM t0 WHERE ((+ (CAST(0xfffffffff3d96c25 AS INTEGER)))); -- 0ms;
SELECT ALL t0.c3, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN t0.c3 ELSE t0.c0 END)<<((- (t0.c0)))), ((t0.c0)|(CASE WHEN t0.c3 THEN NULL END)) FROM t0; -- 0ms;
SELECT ((+ (NULL)) IN (((t0.c3)==(t0.c3)), ((t0.c3) IS TRUE))) FROM t0; -- 0ms;
SELECT t0.c3 FROM t0 WHERE (HEX((('1905993640')IS NOT(0.41859471128271997)))) ORDER BY ((((((((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0)))OR(((t0.c0)IS('')))))AND(UNLIKELY(t0.c3))))OR(t0.c3)))OR(CAST(t0.c0 AS TEXT)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t0.c0)GLOB(t0.c0))) IS TRUE), ((((((((CAST(t0.c0 AS INTEGER))OR((NULL IN ()))))AND(CASE t0.c3  WHEN t0.c0 THEN t0.c0 ELSE '0.940944676980359' END)))AND(t0.c0)))OR(CAST(t0.c0 AS REAL))), GROUP_CONCAT(((t0.c0) ISNULL)) OVER (), GROUP_CONCAT(CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c0 END), ((CAST(t0.c3 AS INTEGER))-((t0.c0 IN ()))), ((((t0.c0)AND(((('86431067')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(LIKELIHOOD(t0.c0, 0.38780260049360915))), (+ ((('293567477') BETWEEN (x'') AND (t0.c0)))) FROM t0 ORDER BY CASE WHEN ((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c3)IS(t0.c3)) END  NULLS LAST, (((t0.c3)) BETWEEN ((CAST(t0.c3 AS BLOB))) AND (((+ (t0.c0))))) ASC, NULL; -- 1ms;
SELECT CUME_DIST() OVER () FROM t0 LIMIT -330570005; -- 0ms;
SELECT ALL (- (((t0.c3) IS TRUE))), CAST((t0.c0 IN ()) AS INTEGER), GROUP_CONCAT(((((t0.c0)AND(t0.c0)))AND(t0.c3))) FROM t0; -- 0ms;
SELECT (- (((((((((t0.c3)OR('M㲝4')))OR(t0.c3)))OR(t0.c3)))AND(t0.c0)))) FROM t0; -- 1ms;
SELECT ALL (((TRIM(t0.c0), CAST(t0.c3 AS REAL), (+ (t0.c0))))!=((LIKELIHOOD(t0.c3, 0.9478138973060704), '222387495', (t0.c3 IN ())))) FROM t0 WHERE ((((NULL)) NOT BETWEEN ((0X3d85b0fd)) AND (('Fh3'))) COLLATE NOCASE); -- 0ms;
SELECT t0.c3 FROM t0 WHERE (((CASE WHEN x'' THEN 'ZP' ELSE NULL END)<<(((((-515844039)AND(0X2ae2144d)))AND(0.5569567321789775))))); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c3)-(t0.c3))) FROM t0 WHERE ((((((((((((((((('a>EFWFjVK')AND(x'')))AND(NULL)))AND(((x'')>(x'63bf')))))AND(((('e\')) BETWEEN (('')) AND (('eJZoS'))))))OR(CASE ''  WHEN NULL THEN x'' WHEN '-26945295' THEN x'' WHEN 'l' THEN NULL ELSE '蔍ql' END)))AND(((NULL) BETWEEN ('255979964') AND (x'')))))OR(CAST(x'b7a8' AS TEXT))))AND(('J0.W/' IN ())))); -- 0ms;
SELECT DISTINCT t0.c3 COLLATE NOCASE FROM t0 WHERE (((((NULL)==('4a*&䛞dげn%')))>(TRIM(DISTINCT NULL)))) LIMIT -2029528078 OFFSET 903064684; -- 0ms;
SELECT '-1609642833' FROM t0; -- 1ms;
SELECT DISTINCT CAST((~ (t0.c0)) AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT CAST('' AS BLOB) FROM t0 WHERE (((((((((((NULL)OR(0.07533111524988556)))AND(x'')))AND(1511317906)))OR(x'ebf8')))<<(CASE WHEN NULL THEN x'' WHEN 0.17190782974319385 THEN 0.19866258338074527 WHEN '-1658244433' THEN x'' ELSE -493442220 END))); -- 0ms;
SELECT ALL ((t0.c0) IS FALSE), (+ (NULLIF(DISTINCT t0.c0, t0.c0))), (((((t0.c3) NOT BETWEEN (t0.c3) AND (0.15997331955831517))))<>((UNICODE(t0.c0)))) FROM t0; -- 0ms;
SELECT ALL MAX(MAX(((NULL) IS FALSE))) FROM t0 GROUP BY ((COALESCE(t0.c3, t0.c3))|((t0.c3 IN ()))) HAVING ((MIN(t0.c3))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) LIMIT -1568999106;SELECT DISTINCT ((CASE WHEN NULL THEN t0.c0 ELSE t0.c3 END) IS TRUE), ((((t0.c0) IS TRUE))<<(AVG(t0.c3))), (- ((~ (t0.c3)))) FROM t0 WHERE ((((((0.33551911751536545)) BETWEEN ((0.4585811651015107)) AND ((NULL))))>=(((('-344268664', x'3149', '')) BETWEEN (('-1583147707', -1471064166, NULL)) AND (('-1978431110', 1.599381532E9, NULL)))))); -- 0ms;
SELECT DISTINCT SUM(((t0.c0) NOT NULL)) OVER () FROM t0; -- 1ms;
SELECT DISTINCT ((((((((t0.c3 COLLATE RTRIM)OR(CAST(t0.c3 AS REAL))))AND(((t0.c3)AND(0.80214544862391)))))AND(COUNT(*))))AND(CAST(t0.c0 AS BLOB))) FROM t0; -- 0ms;
SELECT DISTINCT NTILE(((((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0)))-(((t0.c0)IS NOT(t0.c0))))) OVER () FROM t0 WHERE (CAST(((0.017961545660603595)%(1632010588)) AS NUMERIC)) ORDER BY 0.04508311973655188  NULLS FIRST; -- 0ms;
SELECT '' FROM t0 WHERE (NULL) ORDER BY (((((0.12406029030215127) BETWEEN (t0.c0) AND (t0.c3))))>((0.7444243142854915))) ASC  NULLS LAST, (((t0.c3)<>(t0.c0)) IN ())  NULLS LAST LIMIT 186589667; -- 0ms;
SELECT ALL CAST(t0.c3 AS BLOB) COLLATE RTRIM, NULL, x'' FROM t0; -- 0ms;
SELECT AVG((((t0.c3)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c3) AND (t0.c0)))+(json_patch('-1801751593', 1322739429))), TOTAL_CHANGES(), ('-666724045' IN ()) FROM t0 WHERE (((((NULL)<<('2럇')))!=(((0Xffffffffbfdc829a) BETWEEN ('t2#ZF') AND ('1936209980'))))) GROUP BY ((((t0.c3)<=(t0.c0)))&(CAST(t0.c3 AS NUMERIC))) HAVING x''; -- 0ms;
SELECT DISTINCT CAST('C.' COLLATE NOCASE AS NUMERIC) FROM t0 GROUP BY ((((t0.c3) BETWEEN (t0.c0) AND (t0.c3)))IS NOT(((t0.c0)||(t0.c3)))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( ORDER BY (((((t0.c0) BETWEEN (t0.c3) AND (t0.c3))))==((((((t0.c3)OR(t0.c0)))OR('A'))))) ASC RANGE  UNBOUNDED PRECEDING) FROM t0 WHERE (((('-2099746147')>=('0.11852232162043985')) IN ())); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((('-1529370366' IN ()))AND(((NULL)<<(-2094586723)))))OR((('1612077097')/(NULL))))); -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND (((t0.c0 IN ())))) FROM t0 WHERE ((CASE WHEN 'TBe^' THEN 0.134810058571588 ELSE NULL END IN (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CAST(NULL AS TEXT) FROM t0; -- 0ms;
SELECT ((((((t0.c3)%(t0.c0)))AND(((t0.c3)IS NOT(t0.c0)))))OR(UNLIKELY(t0.c0))) FROM t0 WHERE ((((x'c87a', x'', x'')) BETWEEN ((NULL, CAST(x'' AS INTEGER), CAST(NULL AS TEXT))) AND ((NULL COLLATE BINARY, (('') NOT BETWEEN (NULL) AND ('丁\n')), ('K.' IN ()))))); -- 0ms;
SELECT DISTINCT MIN(CASE t0.c3  WHEN t0.c0 THEN t0.c3 END) FROM t0 WHERE (((NULL)%(0.7404835278658313 COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT t0.c3, ((t0.c3)<>(((t0.c0)GLOB(t0.c0)))), (((t0.c3 COLLATE RTRIM))<=(('' COLLATE BINARY))) FROM t0 WHERE ((LIKELY(DISTINCT x'') IN ((((0Xffffffff94b93d6d))<=((x'')))))); -- 0ms;
SELECT DISTINCT t0.c3 FROM t0 GROUP BY (((~ (t0.c0))) ISNULL) HAVING CAST((t0.c0 IN (t0.c0)) AS NUMERIC) LIMIT 561626267 OFFSET -621681136; -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c0 THEN t0.c3 END) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (0.6184800916230775)), (((+ (t0.c3)))%((- (t0.c3)))), COUNT(((t0.c0)GLOB(t0.c0))), CAST(t0.c3 AS TEXT), '719459405' FROM t0 WHERE (((CAST(0.6163390983789883 AS BLOB))IS(NULL))) ORDER BY (((((((((((((t0.c0 IN (t0.c3)))OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)GLOB(t0.c3)))))AND(t0.c3)))OR(TIME(t0.c0, t0.c3, t0.c3))))OR((t0.c0 IN ()))))OR((('-1403699616')%(t0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL 0.28259043611433865 FROM t0 WHERE (((((858949149) BETWEEN ('') AND (0.9706119118074802))) BETWEEN (('-451111180' IN ())) AND (((NULL) IS FALSE)))) ORDER BY (CASE t0.c0  WHEN t0.c3 THEN 0.24248004537223622 ELSE t0.c3 END IN ()), 'I糗w'; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM t0; -- 0ms;
SELECT ALL CAST(MIN(t0.c0) AS BLOB) FROM t0 WHERE (((CASE WHEN x'6bbc' THEN '64311523' END) ISNULL)); -- 0ms;
SELECT ALL COALESCE(((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c3) FROM t0; -- 0ms;
SELECT ALL COUNT(*) OVER ( PARTITION BY ((((t0.c0)=(t0.c3)))<<(CASE t0.c3  WHEN t0.c0 THEN t0.c3 WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN t0.c3 END)), ('0.1271814065868232' IN ())), ((CASE t0.c0  WHEN t0.c3 THEN t0.c0 ELSE '' END)OR((NOT (t0.c0)))), ((((((t0.c3)) NOT BETWEEN ((t0.c3)) AND ((x'')))))>((((t0.c0)OR(t0.c3))))) FROM t0; -- 0ms;
SELECT DISTINCT ((((NULL) ISNULL))-(t0.c3 COLLATE RTRIM)) FROM t0 WHERE ((((((x'')) BETWEEN ((NULL)) AND ((NULL)))) NOT BETWEEN ((- (x'd38a'))) AND (CASE WHEN '1510459549' THEN 0.9706119118074802 END))) LIMIT -1877325313; -- 0ms;
SELECT DISTINCT t0.c3 FROM t0 ORDER BY (t0.c3 IN ()) ASC; -- 0ms;
SELECT DISTINCT x'' FROM t0 WHERE ((+ ((+ (NULL))))); -- 0ms;
SELECT DISTINCT NTH_VALUE('', CAST(((t0.c3) BETWEEN (t0.c0) AND (NULL)) AS INTEGER)) OVER (), ((((((t0.c3)OR(x'')))OR(t0.c0))) BETWEEN (t0.c0) AND (((t0.c3)||(857109548)))), CAST(((t0.c0)=(t0.c3)) AS NUMERIC) FROM t0;SELECT DISTINCT t0.c3, t0.c0, LIKELIHOOD(DISTINCT t0.c0 COLLATE RTRIM, 0.28761830910454045) FROM t0 WHERE (((((('')<<(x''))))!=((((x'')GLOB(x'ae97')))))); -- 0ms;
SELECT DISTINCT LAG(t0.c3, (((((((t0.c3, t0.c3, t0.c3))<>((t0.c3, t0.c3, t0.c0))))AND((NOT (t0.c3)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c3 ELSE t0.c3 END)), ((t0.c0)IS NOT(CASE t0.c0  WHEN t0.c3 THEN x'' ELSE t0.c0 END))) OVER (), -1471383451, ((((t0.c0) IS FALSE))LIKE(((t0.c3) NOT NULL))) FROM t0 GROUP BY SUBSTR(((t0.c3)&(t0.c0)), x'') HAVING (~ (CAST(t0.c0 AS NUMERIC))); -- 0ms;
SELECT DISTINCT (CAST(t0.c3 AS INTEGER) IN (((t0.c3) NOT NULL), MIN(t0.c3))) FROM t0; -- 0ms;
SELECT 0.9061567864545751, t0.c3, (- (NULL COLLATE BINARY)) FROM t0; -- 0ms;
SELECT (((+ (t0.c0))) NOTNULL), ((((((((((t0.c3)OR(t0.c3)))OR(t0.c0)))AND(t0.c0)))AND(t0.c3)))/(t0.c0 COLLATE RTRIM)), (((CASE WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c0 END))<>((((((t0.c3)AND(t0.c3)))AND(t0.c3))))) FROM t0; -- 0ms;
SELECT ((NULL)||(x'd66f2ad0')) FROM t0 WHERE (((0.022227828834784802 COLLATE RTRIM) NOT NULL)); -- 0ms;
SELECT ALL GROUP_CONCAT(CASE t0.c0  WHEN '' THEN t0.c0 END), ((((t0.c0, t0.c3, t0.c3, t0.c3, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3, t0.c3, t0.c0, t0.c3)) AND ((t0.c3, t0.c0, '-120755176', t0.c3, t0.c3))) IN ()), ((((((t0.c0)/(t0.c0)))OR(AVG(t0.c3))))AND(LIKELIHOOD(DISTINCT t0.c3, 0.3134162528618787))) FROM t0; -- 0ms;
SELECT ALL TOTAL(((((t0.c3)AND(t0.c0)))OR(t0.c0))) OVER (), '', t0.c3, ((((t0.c0)<>(t0.c3)))OR(((t0.c0)=(t0.c3)))), CAST(((t0.c3) NOTNULL) AS BLOB) FROM t0 WHERE (0Xffffffffed9c91a0) ORDER BY CAST(CAST(t0.c0 AS TEXT) AS BLOB)  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE TOTAL(t0.c0)  WHEN CAST(t0.c0 AS BLOB) THEN SUM(t0.c0) WHEN t0.c3 COLLATE RTRIM THEN MAX(t0.c3) WHEN ((t0.c0) BETWEEN (t0.c3) AND (t0.c0)) THEN ((('71385659')) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE NULLIF(DISTINCT t0.c0, t0.c3) END FROM t0 WHERE ((((CASE WHEN NULL THEN -1977990117 ELSE 1.599381532E9 END, (+ (-1424734845)), ((NULL)/(x''))))=((((x'') NOTNULL), ((NULL) NOT BETWEEN (0.38412877226598163) AND (0xffffffffdff99e27)), '-2057333922' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT (+ (((t0.c3) BETWEEN (t0.c0) AND (x'0cac')))) FROM t0 WHERE (UNICODE(((((((((NULL)AND(0.06442344815697343)))OR(NULL)))OR(x'')))OR(0X6cf62842)))); -- 0ms;
SELECT ALL (((t0.c3) NOT NULL) IN (CASE WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END)) FROM t0 WHERE (HEX(MAX(0Xffffffff8d473a91, x''))); -- 0ms;
SELECT DISTINCT ((((((t0.c0)OR(t0.c3)))OR(t0.c3))) BETWEEN (IFNULL(DISTINCT t0.c0, t0.c3)) AND ((- (t0.c3)))), LENGTH(CASE WHEN NULL THEN t0.c3 END), (((('1905993640')OR(t0.c3))) NOT NULL) FROM t0; -- 0ms;
SELECT PERCENT_RANK() OVER ( ROWS  UNBOUNDED PRECEDING) FROM t0 WHERE ((((((('-225188868') NOTNULL))AND((NULL IN ()))))AND(x'' COLLATE NOCASE))); -- 0ms;
SELECT (('-922023893') NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c3))) AND ((t0.c3 IN ()))), LEAD((((NOT (t0.c0)))-(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0)))), CASE WHEN CAST(t0.c3 AS NUMERIC) THEN ((t0.c3) NOT NULL) END, ((CASE t0.c0  WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c3 ELSE t0.c3 END)IS NOT((t0.c3 IN ())))) OVER ( ORDER BY ((((t0.c0) ISNULL)) IS FALSE) DESC ROWS  UNBOUNDED PRECEDING EXCLUDE TIES), '' FROM t0 WHERE ((((0.14312553687506047, '732299070', '뺪l	rE')) BETWEEN ((((('-1476868552', NULL, x'f10b')) NOT BETWEEN ((0.8894239777781077, '954355992', 912113916)) AND (('Zq', 0.13474852881719113, -1293279052))), CAST(NULL AS TEXT), (('-666724045')GLOB(0.8509130686455703)))) AND (('-567114503' COLLATE BINARY, ((x'') IS TRUE), UNLIKELY('-900488821'))))) GROUP BY (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((((t0.c0) NOTNULL)))); -- 1ms;
SELECT DISTINCT CHAR(((((t0.c0)AND(t0.c0)))AND(t0.c0)), t0.c0 COLLATE RTRIM, SUM(t0.c0)) FROM t0; -- 0ms;
SELECT ALL ((((0.3802162730085964) NOT NULL))IS NOT(CAST(t0.c3 AS INTEGER))), (((+ (t0.c3)))LIKE(LIKELIHOOD(t0.c0, 0.34784312823541164))), LTRIM(((t0.c3)||(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c3 FROM t0 WHERE ((CAST(-1811680656 AS REAL) IN (json_valid(x'')))); -- 0ms;
SELECT ALL NTH_VALUE('1632010588', ((((t0.c0) BETWEEN (t0.c0) AND (0.680846293188571))) NOT NULL)) OVER () FROM t0 WHERE (TYPEOF(DISTINCT TOTAL_CHANGES())); -- 0ms;
SELECT CAST(((0.4009232204713441)|(764315336)) AS TEXT) FROM t0 WHERE (CAST((((NULL)) BETWEEN (('0.02159505327910216')) AND ((NULL))) AS REAL)); -- 1ms;
SELECT DISTINCT TOTAL((t0.c0 IN (t0.c3)) COLLATE RTRIM) FROM t0 WHERE ((((NULL) BETWEEN ('x⽥ye*') AND (0x232cf5b3)) IN (((x'') NOTNULL)))) GROUP BY STRFTIME(((t0.c0) IS TRUE), ((NULL) BETWEEN ('719459405') AND (t0.c3)), (('-1818434310')GLOB(t0.c3))), CASE ((((((((t0.c3)OR(t0.c3)))AND(t0.c3)))AND(t0.c0)))AND('y*eOv\nE'))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c3)>(t0.c0)) END, ((((((t0.c0)OR(t0.c3)))OR(t0.c3)))-(CAST(t0.c3 AS TEXT))) HAVING CASE WHEN CASE WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c3))) END LIMIT -334074018 OFFSET 198825830; -- 0ms;
SELECT DISTINCT ((((COALESCE(t0.c3, t0.c3))OR(t0.c3)))OR(UNLIKELY(0xffffffffa925405f))), ((LIKELIHOOD(DISTINCT 1.814942527E9, 0.6728701582309425)) NOT BETWEEN (((t0.c3) NOTNULL)) AND (((t0.c0)<>(t0.c3)))), CAST(((t0.c0)AND(t0.c3)) AS REAL) FROM t0 WHERE ('6JwCn_'); -- 0ms;
SELECT ALL ((((((t0.c3)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (CAST(t0.c3 AS BLOB)) AND (((((t0.c0)AND(t0.c3)))OR(NULL)))) FROM t0 WHERE (((((0.4368372161318874)IS NOT(0X132eb5e2)))LIKE(((0.8295592383047107) NOT BETWEEN ('-1958045791') AND (1652886037))))); -- 0ms;
SELECT ALL ((CASE WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c3 ELSE t0.c3 END)>(t0.c0 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT DISTINCT ((('A{')) NOT BETWEEN ((MIN(t0.c3, x''))) AND (((~ (t0.c3))))) FROM t0 WHERE (((- (0.6476272097663666)) IN (((0.397175524983991) ISNULL), ((('Ot', 0.46768900186924867, -1.293279052E9))>=((x'e3ad', 0.7514278922827409, 0Xffffffffce848eca)))))); -- 0ms;
SELECT MIN(('/)' IN (t0.c0))), ((((t0.c0) IS FALSE))||(TOTAL(t0.c3))), ((((((((((((((((t0.c0)OR(t0.c3)))AND(t0.c3)))OR(t0.c3)))AND(t0.c0)))OR(CAST(t0.c3 AS TEXT))))OR(t0.c0)))OR((NOT (t0.c0)))))OR(CASE WHEN t0.c3 THEN t0.c3 END)) FROM t0; -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT ALL ((CAST(NULL AS NUMERIC))<<(CASE t0.c3  WHEN t0.c0 THEN t0.c3 END)) FROM t0 WHERE (((((x'da852ddf')==(NULL)))<=(((x'') NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT ALL CAST((('-1742103923')>(t0.c3)) AS NUMERIC) FROM t0; -- 0ms;
SELECT t0.c0, (TRIM(t0.c0) IN (((((t0.c3)OR(-8.80758303E8)))AND(t0.c3)))), ((((1.7976931348623157E308) BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c3)OR(t0.c3)))OR(t0.c3)))OR(t0.c0)))AND(t0.c3)))) FROM t0; -- 0ms;
SELECT ((t0.c0) ISNULL), 719459405, CASE WHEN (((t0.c3))<>((t0.c3))) THEN ((t0.c3) BETWEEN (t0.c0) AND (t0.c0)) END FROM t0 ORDER BY ((t0.c3 COLLATE BINARY) ISNULL) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE '' END)AND((~ (0.7093892432753202)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c3)))))OR(CASE WHEN t0.c3 THEN t0.c0 END)))AND(((t0.c0) IS TRUE))) FROM t0 WHERE (SQLITE_VERSION()) LIMIT -1646119310; -- 0ms;
SELECT DISTINCT MAX(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c3))) FROM t0 WHERE ((~ (0.5189289101650174))) LIMIT 236991060; -- 0ms;
SELECT DISTINCT SUM(CAST('' AS INTEGER)) OVER () FROM t0; -- 0ms;
SELECT MAX((((t0.c0, t0.c0, t0.c3))>((t0.c3, t0.c3, '1448750844')))) FROM t0 WHERE ((((((0.19020159024367067) BETWEEN (']筌') AND (1.14900075E9))))<=(((((NULL)) BETWEEN ((NULL)) AND ((-7.60807989E8))))))) ORDER BY ((CASE WHEN t0.c3 THEN t0.c0 END)*((~ (t0.c3)))); -- 0ms;
SELECT ((((t0.c3) ISNULL)) NOT BETWEEN (((((t0.c0)AND('-7gp* iI*')))OR(t0.c0))) AND (load_extension(t0.c0))), MIN(((t0.c0)IS(t0.c3)) COLLATE RTRIM), ((t0.c0) IS FALSE) FROM t0 WHERE (((((x''))<=((0.31493449901814696))) IN ()));SELECT DISTINCT (NOT (HEX(t0.c0))) FROM t0 WHERE ((NOT (MIN(-1436999266, '')))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))<<(CAST(t0.c3 AS NUMERIC))), AVG((NOT (t0.c3))), ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c3)))AND(t0.c3)))OR(t0.c3)))OR(((((t0.c3)OR(t0.c0)))OR(t0.c0)))))AND(t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c3 IN ()))OR(((((t0.c0)AND(t0.c3)))OR(t0.c3)))))AND(-2.115551202E9)), ((((((((((NULL)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))) BETWEEN (((t0.c0) BETWEEN (x'') AND (t0.c3))) AND (GROUP_CONCAT(t0.c0))), CAST((t0.c3 IN ()) AS BLOB) FROM t0 WHERE ((((NOT ('\nXJL襁Zx')))IS NOT(((((NULL)AND(1e500)))AND(0.3885711375942065))))) GROUP BY NULLIF(((t0.c0)/(t0.c0)), t0.c3 COLLATE RTRIM) HAVING LIKELY(((t0.c0) NOT NULL)); -- 0ms;
SELECT ALL TYPEOF(((NULL) NOT BETWEEN (x'') AND (t0.c0))) FROM t0; -- 0ms;
SELECT ((((t0.c0) NOT NULL))+(LIKELY(DISTINCT t0.c3))), ((((t0.c3)|('<KLW6xM'))) IS FALSE), HEX(t0.c0) FROM t0 WHERE ((((((+ ('fB')))OR((('') NOT NULL))))OR(('0.8043690911870226' IN (0X5fb7f8c3))))); -- 0ms;
SELECT ALL (((t0.c3 IN ())) BETWEEN (((((t0.c0)OR(t0.c3)))OR(t0.c3))) AND ((((t0.c0))!=((t0.c0))))) FROM t0 LIMIT -1448807639 OFFSET 767161690; -- 0ms;
SELECT DISTINCT LTRIM((((t0.c3)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), (t0.c0 IN ())), 0xffffffffbe5c07e4 COLLATE NOCASE, ((((t0.c0))<((t0.c3))) IN ()) FROM t0 WHERE (CAST(((-633606452) NOT NULL) AS NUMERIC)) GROUP BY COALESCE(json_insert(t0.c3, t0.c0, t0.c3, t0.c3, t0.c0), ('撺N)cK䩲O' IN ()), (((t0.c0))=((t0.c0))), ((t0.c3)|(t0.c0))), TRIM(DISTINCT CAST(t0.c3 AS REAL)), (((((t0.c0, t0.c3, t0.c3)) BETWEEN ((t0.c0, t0.c0, t0.c3)) AND ((t0.c0, t0.c3, t0.c0)))) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c0 AS INTEGER))), TRIM(DISTINCT (t0.c0 IN (t0.c3))), x'';SELECT ALL (((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((t0.c3))) FROM t0 WHERE (0.5452370809106231) ORDER BY TYPEOF(((((t0.c0)AND(t0.c3)))AND('-359697682'))), t0.c0 DESC  NULLS FIRST; -- 0ms;
SELECT LTRIM(t0.c0 COLLATE RTRIM, 0.5578231279284627) FROM t0 WHERE (((x'' COLLATE NOCASE)|(((x'') ISNULL)))); -- 0ms;
SELECT CASE t0.c3  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY FROM t0 WHERE ('-308506208') ORDER BY (CASE WHEN t0.c3 THEN t0.c3 END IN (LTRIM('-1389363902', t0.c3))) ASC, CASE WHEN MAX(t0.c0, NULL) THEN (0xc60ea2d IN (t0.c0)) ELSE CAST(x'' AS INTEGER) END ASC; -- 0ms;
SELECT (CAST(t0.c0 AS NUMERIC) IN ()), CASE 0.29025385719699015 COLLATE BINARY  WHEN t0.c0 COLLATE RTRIM THEN '' WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0) BETWEEN (t0.c3) AND (t0.c3)) WHEN '846959375' THEN CAST(t0.c0 AS INTEGER) ELSE ((-7617478) ISNULL) END, ((t0.c0 COLLATE BINARY)-(((((((((t0.c0)AND(t0.c0)))OR(t0.c3)))AND(t0.c0)))OR(t0.c0)))) FROM t0 WHERE (CASE UNLIKELY('198993239')  WHEN ((((NULL)AND(NULL)))AND(x'')) THEN 5.17703192E8 COLLATE NOCASE ELSE (0.6006611990389925 IN ()) END) ORDER BY ((NOT (t0.c0)) IN (((t0.c0)|(t0.c0)))), (((t0.c3)+(t0.c0)) IN ()) DESC, 0.20325901794283974 DESC; -- 1ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((CAST(t0.c3 AS NUMERIC))) AND ((((t0.c3) ISNULL)))), NULL, SUM(((t0.c3) IS TRUE)) OVER () FROM t0 WHERE (((((x'')<>(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT '-1e500' FROM t0; -- 3ms;
SELECT DISTINCT CAST((t0.c3 IN ()) AS NUMERIC) FROM t0 WHERE (((((((((((((5.17703192E8)AND('-62423758')))AND('')))OR('-335015372')))OR(x'')))OR(CAST('0Vt' AS TEXT))))OR(((0.48034413854932234)%(0X7dab3d3d))))) GROUP BY ((t0.c0) IS FALSE); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (NULL)), ((t0.c3 IN (t0.c3)) IN ()), ((((NOT (t0.c0))))!=((((((t0.c3)OR(t0.c3)))AND(t0.c0))))) FROM t0 WHERE ((((('1905993640')!=(NULL))) NOT BETWEEN (((((0.22640993426442546)AND(0x1d1d8f70)))AND(x'6fc1'))) AND ((~ (0.16223315100901847))))) GROUP BY CASE 0.6977099180662385  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)>(t0.c0)) WHEN t0.c3 THEN ((t0.c3) ISNULL) WHEN ((t0.c3)&(t0.c3)) THEN t0.c3 ELSE ((t0.c3)&(t0.c0)) END HAVING ((((((((((t0.c0) NOT BETWEEN (t0.c3) AND ('594291915')))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c3 END)))OR((t0.c0 IN ()))))AND((- (t0.c0)))))AND(COUNT(t0.c0))); -- 0ms;
SELECT ((COUNT(*)) NOT NULL) FROM t0 WHERE (((((((((((NULL)>(-1876736781)))AND(((430894637)=(0.10263630671658608)))))OR(ABS(NULL))))OR(x'' COLLATE BINARY)))AND((('846959375') ISNULL)))); -- 1ms;
SELECT DISTINCT SUM((t0.c3 IN (t0.c0, t0.c3))) OVER () FROM t0 LIMIT -670947359 OFFSET -1455656375; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c3 THEN t0.c0 WHEN x'' THEN t0.c3 WHEN t0.c3 THEN t0.c3 END)>(((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c3)))), (((('hlX腜') NOT BETWEEN (t0.c3) AND (-9223372036854775808)))*(((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c3)))), 'f/' FROM t0 WHERE (-44753361) ORDER BY ((t0.c0 COLLATE NOCASE)IS((t0.c0 IN (t0.c0, t0.c0, t0.c3))))  NULLS FIRST, (NOT (((t0.c0) NOTNULL))); -- 0ms;
SELECT DISTINCT CAST(AVG(t0.c3) AS REAL) FROM t0; -- 0ms;
SELECT DISTINCT NULL, CAST(SQLITE_SOURCE_ID() AS REAL), t0.c3, ((COUNT(t0.c3)) IS TRUE), (- (((t0.c0)LIKE(t0.c0)))) FROM t0; -- 0ms;
SELECT PERCENT_RANK() OVER (), 0x3a62adbd COLLATE RTRIM COLLATE NOCASE, (~ (TYPEOF(t0.c3))) FROM t0; -- 0ms;
SELECT ALL 'gB隭ꄪk<k)' FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN (((t0.c0, t0.c3, t0.c3))!=((t0.c0, t0.c0, t0.c0))) THEN t0.c3 COLLATE RTRIM END FROM t0 WHERE (((('', (('')LIKE(x'9a27')), CAST(1814942527 AS NUMERIC)))>=(((('0.2453804646405604') NOT NULL), ((0.3770690163370981) NOT BETWEEN (x'') AND (0.5189289101650174)), ((907373367) BETWEEN ('9텹I폧)') AND (NULL)))))); -- 0ms;
SELECT ALL (((((((((((((('1321874070') ISNULL))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c3 ELSE t0.c3 END)))AND(HEX(t0.c3))))OR((((t0.c0)) NOT BETWEEN ((t0.c3)) AND ((t0.c0))))))AND(json_type(0.5289796853193253))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))))OR((((t0.c3)) BETWEEN ((t0.c0)) AND ((t0.c3))))), t0.c3, (+ ((('-2022265391') BETWEEN (t0.c3) AND (t0.c3)))) FROM t0; -- 0ms;
SELECT DISTINCT (~ (((((((((t0.c3)OR(t0.c3)))AND(t0.c3)))OR(t0.c0)))AND(t0.c0)))), ((TYPEOF(t0.c0))>(((t0.c0)GLOB(0.4494640206740511)))), (+ (t0.c0 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t0.c0) OVER () FROM t0 WHERE ((((('/.'))!=(('-7617478'))) IN (CASE x''  WHEN x'' THEN '2091344550' WHEN 0.6821838914045726 THEN NULL WHEN x'' THEN 1247576512 ELSE NULL END))) ORDER BY ((((t0.c0) IS FALSE))LIKE(((t0.c0) IS TRUE))) DESC  NULLS LAST; -- 0ms;
SELECT ALL CAST((+ (t0.c3)) AS BLOB) FROM t0; -- 0ms;
SELECT ALL (((t0.c3)) NOT BETWEEN ((TOTAL(t0.c0))) AND ((((t0.c3)!=(t0.c3))))) FROM t0 ORDER BY (((t0.c0 COLLATE BINARY))>((((t0.c3) BETWEEN (t0.c0) AND (t0.c0))))) ASC; -- 0ms;
SELECT ALL SUM(((x'') BETWEEN (t0.c0) AND (t0.c0))) COLLATE BINARY FROM t0; -- 0ms;
