-- Time: 2024/06/07 07:00:55
-- Database: database20
-- Database version: 3.40.0
-- seed value: 3608581520
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 7ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 3ms;
PRAGMA busy_timeout = 0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
VACUUM main; -- 1ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
DROP TABLE IF EXISTS rt0; -- 0ms;
PRAGMA default_cache_size = 995812171; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=x'', c0='995812171'; -- 0ms;
REINDEX; -- 0ms;
ANALYZE rt1; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES (x'', 0.6876702392865763), (9.95812171E8, '}'), ('h{]l1(yg%', 995812171); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
UPDATE OR IGNORE rt1 SET c2='-1339692696', c2=-91613982, c2=x'' WHERE CASE WHEN ((rt1.c1)*(rt1.c1)) THEN (~ ('-1339692696')) WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 END THEN ((rt1.c0) IS TRUE) WHEN json(rt1.c0) THEN HEX(rt1.c1) END; -- 1ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
UPDATE OR REPLACE rt1 SET (c2)=(-469050264); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(NULL); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (0.942356659962132, '-1339692696', '-9223372036854775808'), (x'', '995812171', '-1339692696'), (0.9369293415317914, x'', x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES (x'', '0.942356659962132'); -- 0ms;
UPDATE rt1 SET c1=-1.339692696E9 WHERE ((rt1.c0)>(rt1.c1)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.foreign_keys = false; -- 0ms;
ANALYZE rt1; -- 0ms;
INSERT OR ABORT INTO rt1(c2, c1, c0) VALUES (0.4495858563968741, '-1339692696', NULL), (x'9a5b58aff4c0', '-)', '0.942356659962132'), (0.651596647519857, x'072f', NULL); -- 1ms;
INSERT OR FAIL INTO rt1(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES ('', '995812171'), ('-91613982', '#*E!D'), (1614893745, 0x3b5ae34b); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED, c2); -- 1ms;
PRAGMA checkpoint_fullfsync = false; -- 1ms;
ANALYZE; -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT OR IGNORE INTO vt0(c2, c1) VALUES (0x3b5ae34b, x'99b4'); -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1256412714 noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 0X460a2281, 0.582507225949046), (-469050264, 0.942356659962132, NULL), ('H섄yoQ', '', '-2127773436'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT ); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i39 ON t0(CAST(CASE c0  WHEN 0Xd202c08 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN c0 ELSE c0 END AS NUMERIC) COLLATE RTRIM) WHERE CASE WHEN (NULL IN ()) THEN (((0.09752341908876117, c0, c0, c0, c0)) BETWEEN ((c0, c0, 0.5354356713879045, c0, NULL)) AND ((c0, NULL, c0, c0, c0))) ELSE (~ (c0)) END; -- 1ms;
PRAGMA recursive_triggers = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1201755375); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i48 ON t0(CAST(((((c0)AND(c0)))OR(c0)) AS REAL) COLLATE BINARY) WHERE ((CASE c0  WHEN c0 THEN c0 ELSE c0 END)<<(((c0)OR(c0)))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE ((vt0.c1 COLLATE BINARY) BETWEEN (LENGTH(vt0.c1)) AND (vt0.c2)); -- 0ms;
PRAGMA temp.threads; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''); -- 0ms;
REINDEX; -- 1ms;
PRAGMA temp.optimize; -- 0ms;
REINDEX; -- 1ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=9.95812171E8 WHERE ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(((x'1d66') BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA busy_timeout = 7253089832397670719; -- 0ms;
ANALYZE i48; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('253843690', x'', NULL), (NULL, NULL, x'e958'), (NULL, x'7868', NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2070244677); -- 0ms;
UPDATE OR IGNORE rt1 SET c2=NULL, c1='0.6876702392865763'; -- 0ms;
SELECT rtreecheck('rt1'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x'4c30', 0.20080499311847144, x''); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0Xffffffff812cc104, 0.4090817824127635, 0.582507225949046), ('W쳃\rFF', -1973457891, x''), (NULL, 0Xffffffffbd7a89af, -1.973457891E9); -- 1ms;
VACUUM main; -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(0.4495858563968741) WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (((x'')>=(1.175069313E9))) AND ((t0.c0 IN ()))); -- 0ms;
CREATE VIEW v0(c0) AS SELECT NULLIF((+ (rt1.c1)), CASE 0x623a4632  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 END) FROM rt1 WHERE (CASE ((380077997)%('-1973457891'))  WHEN x'' THEN (+ (x'')) ELSE (('995812171') BETWEEN (x'') AND ('1614893745')) END); -- 0ms;
