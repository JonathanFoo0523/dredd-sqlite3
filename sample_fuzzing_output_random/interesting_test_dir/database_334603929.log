-- Time: 2024/06/07 11:50:34
-- Database: database29
-- Database version: 3.40.0
-- seed value: 334603929
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 2ms;
CREATE TEMP TABLE t1 (c0 REAL ); -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c32; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=0.3315493520270646, c2='㙨t&xW\蓗Z' WHERE ((((x'')<>(rt0.c0))) IS TRUE); -- 0ms;
END; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i47 ON t1(((c32)|(c32)) COLLATE RTRIM COLLATE NOCASE ASC); -- 0ms;
REINDEX  rt0; -- 1ms;
INSERT OR FAIL INTO t1(c32) VALUES (x'fd55'), ('280643417'), ('280643417'), (x''), (0.9398331138528695); -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c32 TO c4; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
PRAGMA integrity_check; -- 1ms;
PRAGMA wal_autocheckpoint = 8601035776159371413; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(-1392849278); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=-204856214, c3=x''; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'') WHERE (((rt0.c3, rt0.c1, rt0.c3)) BETWEEN (((((rt0.c2, rt0.c2, rt0.c2))=((rt0.c4, rt0.c4, rt0.c4))), (NOT (rt0.c4)), rt0.c0 COLLATE RTRIM)) AND ((((NULL)&(rt0.c1)), CAST(x'' AS NUMERIC), CAST(rt0.c1 AS BLOB)))); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT t1 SET c4=NULL WHERE (((((t1.c4)!=(t1.c4))))>=(((((t1.c4))==((t1.c4)))))); -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE rt0; -- 1ms;
ANALYZE main; -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (x''), ('-204856214'), (0.0034838311757063867); -- 1ms;
VACUUM temp; -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
UPDATE OR IGNORE rt0 SET c4=0.06320393636875243, c0='0.0034838311757063867' WHERE ((CAST(rt0.c4 AS REAL))>(rt0.c4 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE rt0 SET c3='Euvl\-蓗{㙨' WHERE (NOT (rt0.c4)) COLLATE NOCASE; -- 1ms;
PRAGMA reverse_unordered_selects; -- 0ms;
PRAGMA main.checkpoint_fullfsync = false; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c4 TO c69; -- 1ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
UPDATE OR IGNORE rt0 SET c4=x'880a' WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN NULL WHEN rt0.c1 THEN rt0.c0 END))<>((SQLITE_VERSION()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('')))>>(((0.21927774043929282) IS FALSE))); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c69='Euvl\-蓗{㙨' WHERE CAST(((t1.c69)&(t1.c69)) AS INTEGER); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
CREATE UNIQUE INDEX i11 ON t1(NULLIF(((c69)<=(c69)), c69) COLLATE RTRIM); -- 0ms;
CREATE INDEX IF NOT EXISTS i62 ON t1(CASE WHEN CASE c69  WHEN c69 THEN 0xffffffff8e9118d5 ELSE c69 END THEN ((c69)|(c69)) WHEN (c69 IN (x'')) THEN ((((c69)OR(c69)))AND(c69)) WHEN x'' THEN ((c69)>>(NULL)) WHEN c69 THEN CAST(c69 AS TEXT) WHEN TYPEOF(DISTINCT c69) THEN (~ (c69)) END COLLATE RTRIM ASC); -- 0ms;
UPDATE rt0 SET c3=0.28566516864697145, c3='뭚qYQvE3' WHERE (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END IN ()); -- 0ms;
PRAGMA main.stats; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, prefix = 685); -- 1ms;
PRAGMA temp.optimize; -- 0ms;
VACUUM temp; -- 0ms;
END; -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=NULL WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE i47; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
PRAGMA temp.stats; -- 0ms;
END; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR REPLACE vt0 SET c0='1'; -- 0ms;
REINDEX i62; -- 0ms;
REINDEX  rt1; -- 0ms;
UPDATE rt1 SET (c0)=(NULL) WHERE ((((((((((((((((rt1.c4)AND(rt1.c1)))OR(rt1.c1)))AND(LIKELIHOOD('-204856214', 0.4453861446084667))))AND(((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c4)))))OR(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)))AND(rt1.c1 COLLATE BINARY)))OR((rt1.c3 IN ()))))OR(((rt1.c0)%('78494554')))); -- 0ms;
PRAGMA temp.cache_size; -- 0ms;
INSERT OR REPLACE INTO rt1(c1) VALUES (x''); -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (-1866505296); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (((json_object(rt0.c1, rt1.c0)))<=((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c0 THEN NULL WHEN ',A]G V' THEN rt0.c0 ELSE NULL END))), CASE WHEN 0xffffffffbc3b84d7 THEN rt1.c3 WHEN t1.c69 THEN vt0.c0 WHEN rt1.c0 THEN t1.c69 WHEN rt0.c1 THEN t1.c69 WHEN t0.c0 THEN rt1.c3 ELSE 0Xffffffff8d5ee42c END COLLATE NOCASE, MAX(((rt1.c1)GLOB(rt1.c1)), ((vt0.c0) ISNULL), ((rt0.c1) IS FALSE), LIKELIHOOD(DISTINCT rt1.c3, 0.5061460972012869)) FROM vt0, t0;SELECT ALL ((((t0.c0)IS(rt1.c3))) IS TRUE) FROM rt1, rt0;SELECT CAST(CAST(rt0.c2 AS BLOB) AS INTEGER) FROM t0, vt0, rt1 WHERE ((((((((((((((('78494554') IS FALSE))OR(((((0.30656029443678123)OR('-1903093547')))OR(0.7972947500487407)))))OR(UPPER(0x460cbf2e))))OR(0.6566739375161911)))AND(rtreenode('-1484505436', 'J%'))))AND(x'')))AND(TYPEOF(DISTINCT NULL))));SELECT DISTINCT CAST(x'eb90' AS NUMERIC), ((CASE WHEN rt1.c1 THEN rt1.c3 END)=(LIKELY(DISTINCT -576848405))), MAX((~ (rt1.c0))) FROM rt0, t0, rt1, t1 WHERE ((((((x'')<=(2.80643417E8))))<=((('zSI9z梦D91' IN (x'76e61be9')))))) GROUP BY ((((rt0.c4) NOTNULL))/((rt1.c3 IN (rt0.c2, rt1.c1)))) HAVING 0.36286337052863193; -- 0ms;
SELECT ALL CAST(GROUP_CONCAT(x'') AS NUMERIC) FROM vt0, t0, rt0 GROUP BY vt0.c0 HAVING TOTAL((rt0.c3 IN ('!!kFMVnD'))); -- 0ms;
SELECT DISTINCT rt0.c4 FROM t1 INDEXED BY i47, t0, rt1, rt0; -- 0ms;
SELECT DISTINCT AVG((('-1485376570') NOT BETWEEN (rt0.c0) AND (vt0.c0))) FROM vt0, t1 WHERE (((('n騢Y*eLj', 0.5425521049084197, 0.5530549936600255)) NOT BETWEEN (((('-1485376570')<(x'')), 0.4244786448175035, (- (NULL)))) AND (((0.354288956646304 IN ()), ((x'2f70') IS TRUE), ((((0.28566516864697145)OR(x'')))OR(x'f9b5'))))));SELECT ALL rt1.c3 FROM vt0, t0 NOT INDEXED;SELECT DISTINCT 0.6809432179072341, (rt0.c2 IN ()), RANK() OVER ( ORDER BY load_extension((rt1.c1 IN (rt1.c4)), STRFTIME(rt0.c4, t0.c0, rt1.c3)) ASC  NULLS FIRST) FROM vt0, rt0, t0 GROUP BY ((rt0.c1 COLLATE BINARY) ISNULL);SELECT ALL NULL FROM t1, rt0 NOT INDEXED, vt0; -- 0ms;
SELECT ALL ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))<(((rt1.c0)IS NOT(rt1.c3)))) FROM rt1, vt0;SELECT CASE WHEN CAST(rt0.c1 AS REAL) THEN (('')||(rt0.c2)) ELSE SUM(rt0.c4) END FROM t0, t1, rt0, vt0, rt1 WHERE (CAST((0.40912625167901917 IN ()) AS BLOB)); -- 0ms;
SELECT ALL TOTAL(((rt0.c1)>=(rt1.c1))), ((NULL) BETWEEN (COUNT(rt1.c1)) AND ((((t0.c0, rt1.c4, rt0.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, NULL)) AND ((x'', '2108920536', rt0.c3))))), ((NULL) BETWEEN (rt0.c0) AND (rt1.c0)) COLLATE BINARY, ((COUNT(*)) NOT BETWEEN (CASE rt0.c3  WHEN rt1.c4 THEN rt0.c0 ELSE x'cc04' END) AND (((rt1.c0) NOT NULL))), ((rt1.c1)+(((rt0.c3)>=(rt0.c4)))) FROM t0, rt0, rt1, vt0 WHERE ('-990368280') GROUP BY ((((((((((rt1.c4)/(x'')))AND((~ (rt1.c4)))))AND((- (x'')))))OR(((rt0.c3) IS FALSE))))OR((((t1.c69)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))))), (((((rt0.c1)) BETWEEN ((rt1.c4)) AND ((rt0.c3)))) IS TRUE), CAST(rt1.c3 COLLATE NOCASE AS TEXT);SELECT ALL ((t1.c69)GLOB(rt0.c0)), COUNT(*) OVER (), (((NOT (vt0.c0))) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt1.c4) AND (rt1.c2))) AND (((((rt0.c2)OR(rt1.c0)))AND(rt0.c1)))) FROM t0 LIMIT -1136950057;SELECT DISTINCT ((rt0.c4 COLLATE RTRIM)%(((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2)))) FROM rt0, t1, vt0, t0, rt1 WHERE (CAST(0Xffffffffa776f3c6 AS BLOB)); -- 0ms;
SELECT DISTINCT COUNT(*), ((((((((((78494554)AND(rt0.c3)))OR(t0.c0)))OR(rt1.c3)))OR(rt1.c3)))LIKE((((rt1.c1, rt0.c1, rt1.c3, rt1.c0, NULL)) BETWEEN ((rt0.c2, t1.c69, vt0.c0, rt0.c0, t0.c0)) AND ((rt1.c4, 0.584521346270502, rt0.c2, t0.c0, rt0.c3))))), COUNT((- (rt1.c4))) FROM t1 INTERSECT SELECT CASE WHEN COUNT(rt1.c2) THEN (rt1.c0 IN ()) END, CASE (~ (rt1.c4))  WHEN HEX(DISTINCT vt0.c0) THEN SQLITE_COMPILEOPTION_GET(rt1.c2) ELSE json_valid(1948304255) END, (((((rt1.c3 IN ()))AND(NULL)))OR(x'9bdf')) FROM rt0;SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c0))))IS((((rt1.c3, rt1.c3, rt0.c1)) BETWEEN ((0X380111ee, rt1.c3, rt0.c4)) AND ((vt0.c0, rt1.c2, rt1.c4))))) FROM vt0, rt0, t1, rt1, t0 ORDER BY (((x''))!=((((((rt0.c0)AND(x'')))AND(rt0.c2))))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt1.c1 IN (rt1.c2))) IS FALSE), (NOT (((t0.c0) NOT NULL))), ((((t0.c0)IS NOT(rt1.c4)))&(((rt0.c3)>(rt1.c1)))) FROM vt0 WHERE (((((UNLIKELY(DISTINCT x'71d7'))AND(((((x'907b')AND(NULL)))AND(NULL)))))AND(CASE '-1367952940'  WHEN 1.948304255E9 THEN 'Xx' ELSE NULL END))) LIMIT -990368280;SELECT DISTINCT (((~ (rt1.c0)))LIKE(CASE rt0.c3  WHEN rt1.c0 THEN rt1.c2 END)) FROM rt1, t1;SELECT ALL (((rt0.c4 IN ()))+(((vt0.c0)<=(rt1.c4)))) FROM rt0 ORDER BY ((((rt0.c0)-(rt0.c0)))<=((((vt0.c0, rt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c1, rt0.c2)) AND ((NULL, vt0.c0, rt0.c4))))) DESC;SELECT ((NULL)<<(ROUND(rt0.c3, rt1.c0))) FROM rt1, rt0, t1, vt0 LIMIT -958935187 OFFSET 280643417; -- 0ms;
SELECT ALL SUM(MIN('', rt0.c0)) OVER () FROM vt0, t0, rt1 WHERE (CASE WHEN ((x'')&(0.2908661244929872)) THEN ((x'') NOT BETWEEN ('') AND ('h7棓G')) END);SELECT DISTINCT (~ (MIN(rt1.c3))), ((0.7667810245560722) BETWEEN (AVG(rt1.c3)) AND (rt1.c2)), (((rt0.c0)-(rt1.c2)) IN ()) FROM vt0, rt1, t0, t1, rt0; -- 0ms;
SELECT DISTINCT CAST(((((((((rt1.c0)AND(vt0.c0)))AND(rt1.c2)))AND(rt0.c2)))OR(t1.c69)) AS BLOB) FROM t0 RIGHT OUTER JOIN rt0 ON (t0.c0 IN ()) INNER JOIN t1 ON (((t1.c69, rt0.c4, rt0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE, rt1.c0 COLLATE NOCASE, (~ (rt1.c0)))) AND ((CASE WHEN rt1.c4 THEN rt1.c3 END, ((0.05605783155068256) NOT NULL), t0.c0 COLLATE RTRIM))) FULL OUTER JOIN vt0 ON ((((rt0.c3)IS NOT(NULL))) BETWEEN (((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c2)))AND(rt0.c2)))AND(rt1.c0))) AND ((NULL IN ()))) WHERE (((LTRIM(NULL))>((('579572742') IS TRUE)))) LIMIT -1315856000;SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((((((rt0.c2)AND(rt1.c2)))AND(t1.c69)))) AND ((CASE rt1.c1  WHEN NULL THEN t1.c69 ELSE 0X4adbb5a END))) FROM t0, rt0, t1, rt1, vt0 WHERE ('0.2908661244929872') GROUP BY CAST(0.5412685832426671 AS NUMERIC) COLLATE RTRIM, ABS(vt0.c0) COLLATE RTRIM, json_object(((vt0.c0)LIKE(t0.c0)), ((rt1.c2) NOT NULL)) ORDER BY rt1.c0 LIMIT 366682644; -- 1ms;
SELECT DISTINCT (((+ (rt0.c4)))<<((rt1.c2 IN ()))) FROM vt0, rt1, t0, t1 WHERE (-5.76848405E8);SELECT x'' FROM rt0, t1, vt0, t0 WHERE (((CAST('462241637' AS TEXT))LIKE((((1.175240494E9))<((x'61f4')))))) GROUP BY rt0.c3, UPPER(DISTINCT rt0.c3 COLLATE BINARY), (((((((((rt1.c1 IN ()))AND(((rt0.c3) NOT NULL))))OR(rt1.c2)))OR(((((((((t0.c0)OR(rt1.c4)))OR(rt0.c3)))OR(rt0.c3)))OR(rt1.c1)))))OR(((rt0.c1)LIKE(rt1.c0)))), ((rt1.c0 COLLATE BINARY) BETWEEN (((rt0.c0) NOTNULL)) AND (CASE t1.c69  WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c4 END)), 'M?I50䝙';SELECT DISTINCT (CAST('!F?jE' AS BLOB) IN ((rt0.c3 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT (((+ (t0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))) FROM t0;SELECT DISTINCT DENSE_RANK() OVER () FROM vt0, rt1, t1; -- 0ms;
SELECT (((rt0.c0)) BETWEEN ((((rt0.c2)<<(rt0.c2)))) AND (('5nG-\re'))) FROM rt0, rt1, vt0, t0, t1 WHERE (((-1.903093547E9)IS(0.7667810245560722)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt1.c1)GLOB(x'7be5'))) BETWEEN ((((rt0.c3))<((1.324312787E9)))) AND (CASE rt0.c4  WHEN t0.c0 THEN rt1.c1 WHEN rt1.c2 THEN t0.c0 WHEN rt0.c2 THEN t1.c69 END)) FROM rt1, vt0;SELECT ALL (((~ (rt0.c0))) BETWEEN (((((rt0.c4)AND(rt1.c0)))AND(rt0.c0))) AND (((rt1.c0) NOT NULL))) FROM rt0, t1, t0 INDEXED BY i62 LIMIT 462241637 OFFSET -204856214;SELECT (NOT (rt0.c0 COLLATE NOCASE)) FROM rt1, rt0, t0, t1, vt0 LIMIT -1089352398; -- 0ms;
SELECT ALL (~ (((-1.36795294E9)*(t1.c69)))) FROM t1, rt0, t0, vt0, rt1; -- 0ms;
SELECT DISTINCT CAST(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END AS INTEGER) FROM rt0, rt1, t1, vt0 WHERE (NULLIF(DISTINCT (('-759860410') BETWEEN ('-0.0') AND (NULL)), ((NULL)+(0.2386895817112652)))); -- 0ms;
SELECT DISTINCT t0.c0 FROM rt1, rt0, t1, t0, vt0; -- 0ms;
SELECT ALL CASE WHEN (((rt1.c4, rt0.c3, vt0.c0))>((NULL, rt1.c0, rt1.c0))) THEN ((t0.c0) IS FALSE) WHEN MAX(rt0.c2) THEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END WHEN ((vt0.c0) IS FALSE) THEN (- (rt0.c4)) WHEN ((((((((rt1.c3)AND('-268599583')))AND(rt1.c0)))AND(rt1.c0)))AND(0.7478200646723359)) THEN ((((((((rt1.c1)AND(rt0.c4)))OR(rt1.c0)))AND(rt1.c4)))AND(rt0.c3)) WHEN CASE rt1.c4  WHEN '''%' THEN rt0.c0 WHEN rt0.c4 THEN rt1.c1 WHEN t0.c0 THEN rt1.c2 END THEN (NOT (vt0.c0)) END FROM t0, vt0, t1, rt1, rt0 WHERE (CAST(SUBSTR(NULL, 0.9673512505980418) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((((rt1.c0)GLOB(t1.c69)))AND(((rt1.c0) NOT NULL))))OR((((rt1.c2))<((rt1.c3))))) FROM t0, t1 ORDER BY (~ (((((rt1.c2)AND(rt1.c4)))OR(rt0.c4)))) ASC, CASE WHEN vt0.c0 THEN rt1.c0 END COLLATE NOCASE ASC  NULLS FIRST, (((rt0.c4 IN (rt1.c0, rt1.c0))) IS FALSE);SELECT ALL ((((t1.c69)%(rt0.c1))) IS FALSE), ((((rt0.c1)LIKE(rt1.c0))) NOT BETWEEN (((t0.c0)>(rt1.c4))) AND (0.20446998529353355)), CASE WHEN t0.c0 THEN rt0.c2 END COLLATE BINARY FROM rt1, rt0, vt0, t1 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN '' THEN '1523905321' ELSE 0x219d5925 END IN ()), ((rt1.c0)/(((rt0.c0) ISNULL)));SELECT ALL SUM(vt0.c0 COLLATE RTRIM COLLATE BINARY), rt0.c0, MIN((~ (rt1.c4))) FROM vt0, rt1, t1, t0;SELECT DISTINCT COUNT(((rt0.c0) NOTNULL)) FROM vt0 GROUP BY ((((((((((((((x'')||(rt0.c0)))AND(rt1.c0 COLLATE RTRIM)))AND(((rt0.c0) NOT NULL))))OR(rt0.c4 COLLATE BINARY)))AND(((rt1.c3)GLOB(rt1.c1)))))OR(CAST(rt0.c2 AS REAL))))OR(((rt0.c0)OR(t1.c69))));SELECT ALL rt0.c3 FROM rt0, vt0 WHERE (CAST((x'' IN ()) AS REAL)); -- 0ms;
SELECT DISTINCT (NOT (CASE WHEN rt0.c1 THEN vt0.c0 END)) FROM t0 INNER JOIN rt1 ON ((((rt1.c1)AND(rt1.c4)))AND(rt1.c2)) COLLATE BINARY CROSS JOIN vt0 ON ((((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c4))) BETWEEN (((rt0.c1)<(t1.c69))) AND (NULLIF(t0.c0, rt1.c1))) LEFT OUTER JOIN t1 ON ((rt0.c3 COLLATE BINARY) NOTNULL) CROSS JOIN rt0 ON ((((rt1.c4 IN (NULL, rt1.c1)), ((rt1.c1)IS(x'ae67')), ((rt0.c3)|(vt0.c0))))<=((rt1.c0, CAST(rt1.c1 AS INTEGER), CASE WHEN rt1.c0 THEN t1.c69 WHEN rt0.c4 THEN rt1.c3 WHEN t1.c69 THEN rt0.c4 END))) WHERE (CASE WHEN NULL COLLATE BINARY THEN (+ (0.744360890570369)) WHEN ((0.5823902400585063)||(-5.76848405E8)) THEN (('-101359776') IS FALSE) WHEN ((((0.13809903230949405)OR(',A]G V')))OR('-1367952940')) THEN TRIM('', x'') END);SELECT DISTINCT NULL, CAST((((t1.c69, rt1.c2, vt0.c0))=((rt1.c1, rt1.c2, rt1.c0))) AS TEXT), (CASE WHEN rt1.c1 THEN t1.c69 WHEN rt1.c0 THEN rt0.c3 WHEN vt0.c0 THEN t0.c0 END IN ()), TRIM(DISTINCT rt0.c1, rt0.c3) COLLATE RTRIM, COUNT((NOT (0.006341230984010737))) FROM rt0, vt0, t1, t0 WHERE (COALESCE(((((((((0.5530549936600255)AND('^01騢T\n&蕭')))OR('H}(!WkM')))AND(0X235ed763)))AND(0.1662812678181952)), ((0x561c0160)*(x'1fbc')), (('''%')==(x'')), 0.05605783155068256));SELECT DISTINCT ((CAST(rt0.c1 AS NUMERIC))LIKE(CAST(rt0.c4 AS BLOB))), (((rt0.c3 IN (rt0.c4)))%((((rt1.c1, vt0.c0, t1.c69))=((rt1.c3, NULL, '5nG-\re'))))), AVG((NOT (rt0.c1))) FROM rt1, t0, t1 WHERE (((CASE WHEN x'9313' THEN NULL END)>=(((NULL) IS FALSE)))) GROUP BY CASE rt1.c1  WHEN ((vt0.c0)GLOB(rt1.c2)) THEN '0.6809432179072341' ELSE ((rt1.c4) ISNULL) END, ((CASE WHEN vt0.c0 THEN NULL WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ((+ (vt0.c0))) AND (x'cf8e' COLLATE BINARY)), (((NOT (rt0.c4))) BETWEEN (t1.c69) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c2 END));SELECT DISTINCT CAST(vt0.c0 AS TEXT) COLLATE NOCASE FROM vt0, t1, rt1 WHERE (((171474752)GLOB(((x'067b')<=(0.17875769211348203))))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS REAL))==('B}')) FROM t0 WHERE (CASE WHEN (NOT (NULL)) THEN '2097408970' END);SELECT DISTINCT (rt1.c4 IN ()) COLLATE NOCASE, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY, GROUP_CONCAT((rt0.c1 IN ())) OVER ( ORDER BY CASE (((rt0.c0, rt0.c2, rt0.c0))=((rt1.c3, rt0.c3, rt1.c0)))  WHEN (+ (t1.c69)) THEN (~ (rt1.c0)) ELSE CASE WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c1 THEN t0.c0 END END  NULLS LAST) FROM rt0 WHERE (LIKELIHOOD(CASE WHEN 0.5835222605234143 THEN 0.8169718368787813 WHEN x'' THEN 'ྟ 蹹\r{' WHEN x'' THEN x'' END, 0.24710049301383363)) LIMIT -268599583 OFFSET -1;SELECT ALL ((((rt1.c2) ISNULL))/(((rt0.c0) IS FALSE))) FROM vt0, t0, t1, rt1, rt0 WHERE (CAST((('939594222') NOT BETWEEN (0.18364065001150265) AND (NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT (((vt0.c0) NOT NULL) IN ()) FROM vt0 WHERE (((NULL) NOT BETWEEN ('e~n') AND (0x347f8ee4)) COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT ALL ((((rt0.c4) NOT BETWEEN (rt1.c4) AND (vt0.c0)))%(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))) FROM rt1, t0, vt0, rt0, t1 WHERE ((((0.4146947529330516)||('1704472727')) IN (CASE WHEN 0.550446493722757 THEN NULL END))) ORDER BY ((((((((((rt0.c0) IS TRUE))OR((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))))OR(x'')))OR(((((((((rt0.c0)AND(t0.c0)))AND(rt0.c4)))OR(t1.c69)))AND(vt0.c0)))))OR(CASE WHEN rt0.c1 THEN rt1.c4 ELSE x'' END))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((rt0.c3)AND(rt0.c4)))AND(vt0.c0)))OR(rt0.c4)))OR(rt1.c4)) COLLATE NOCASE FROM t0, vt0, rt1;SELECT DISTINCT LIKELIHOOD(((rt0.c3)OR(rt0.c2)), 0.2724050192314914), RANK() OVER (), (rt0.c4 IN (t0.c0)) COLLATE NOCASE FROM rt1, t0, vt0 WHERE ((((((((((-864668056)AND(x'b284')))OR('-1215541160')))OR(0.5226630570208959)))AND(x'')) IN ((((('78494554')AND('880774884')))OR(x'fbb2')))));SELECT ((((((((((rt1.c2)=(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)))))OR(t1.c69)))OR(((rt1.c0) IS FALSE))))AND((NOT (rt0.c2)))) FROM rt0, rt1, t0;SELECT ((COUNT(*)) BETWEEN (vt0.c0) AND (rt1.c0)) FROM rt1, t0, t1;SELECT ALL ((((CASE t1.c69  WHEN rt1.c2 THEN rt0.c3 END)AND('ྟ 蹹\r{')))AND(((rt0.c4)%(rt1.c3)))) FROM t1;SELECT ALL (((NOT (rt1.c1)))-(((rt1.c3)>(rt0.c0)))) FROM rt0;SELECT DISTINCT (COUNT(*) IN (0.9789210556200056)) FROM vt0, t0 LIMIT -392220502 OFFSET 636781292; -- 0ms;
SELECT DISTINCT CASE TYPEOF(rt0.c4)  WHEN (~ (rt1.c4)) THEN '-1835636570' END FROM t1, t0, rt1, rt0 WHERE (CAST((NULL IN ()) AS BLOB)); -- 1ms;
SELECT CAST(LOWER(rt1.c0) AS TEXT) FROM vt0, t1, rt1 WHERE (((NULLIF('0.06320393636875243', '366682644')) IS TRUE)) GROUP BY NULL ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN PRINTF(rt0.c1) THEN ((rt1.c4)IS(t1.c69)) WHEN CAST(rt0.c2 AS REAL) THEN rt1.c3 COLLATE RTRIM WHEN (- (t1.c69)) THEN ((rt1.c3)LIKE(t1.c69)) END;SELECT DISTINCT vt0.c0 FROM rt1 WHERE ((CASE NULL  WHEN x'' THEN x'' END IN ())) LIMIT 1452506927 OFFSET 1734497318;SELECT ALL (~ (rt0.c1 COLLATE RTRIM)) FROM t1;SELECT DISTINCT ((TRIM(DISTINCT t1.c69, NULL))&(MAX(rt0.c4))), ((((t0.c0)<<(vt0.c0))) BETWEEN (((rt1.c4) BETWEEN (rt1.c2) AND (t0.c0))) AND (LIKELIHOOD(rt1.c4, 0.7896480009354975))), (((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) COLLATE NOCASE FROM rt1;SELECT ALL ((rt1.c3) ISNULL) COLLATE NOCASE FROM t0, t1 WHERE (((NULL)+(x'')) COLLATE RTRIM) LIMIT 1832797756 OFFSET -2048777143;SELECT CASE ((((((((((((rt1.c4)OR(rt0.c3)))AND(rt1.c1)))AND(t1.c69)))OR(vt0.c0)))OR(-1367952940)))OR(rt1.c3))  WHEN ((rt0.c0)||(rt1.c2)) THEN ((rt0.c2)<(rt1.c1)) WHEN rt1.c3 COLLATE RTRIM THEN rt1.c1 COLLATE RTRIM WHEN ((rt0.c0)||(t1.c69)) THEN NULLIF('', '') ELSE rt0.c3 COLLATE BINARY END, ((((((((((rt1.c4) ISNULL))OR(rt1.c1)))AND(((rt1.c0) BETWEEN (rt1.c4) AND (vt0.c0)))))AND((+ (rt0.c3)))))AND((- (t0.c0)))), (((((('1704472727')OR(rt1.c4)))AND(t0.c0)))GLOB(x'')) FROM rt1, t0 WHERE (((((NULL)!=(''))) NOT BETWEEN (((x'')<<('i^0?%'))) AND (0Xffffffffb90bb21c COLLATE NOCASE))) ORDER BY (((((((rt0.c4, rt0.c4, rt1.c0)) BETWEEN ((rt1.c0, rt0.c4, rt1.c4)) AND ((rt0.c0, rt1.c2, '832041030'))))AND(((x'')>(t1.c69)))))AND(((rt0.c3)-(rt0.c1))))  NULLS FIRST;SELECT CAST(((rt0.c1)/('0.13809903230949405')) AS BLOB) FROM t0, t1, rt1, rt0 WHERE ('0.5425521049084197'); -- 0ms;
SELECT ALL ((((0.7178682190266497)OR(((rt1.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)))))OR((NOT (rt1.c0)))), 0.9789210556200056 COLLATE RTRIM, ((rt1.c1) NOT NULL) COLLATE NOCASE, '0{Aሆ9', ((rt0.c4) NOTNULL) COLLATE RTRIM FROM vt0, rt0, t1, t0, rt1 WHERE (((((((x'')<=('-93062514')))OR('-958935187' COLLATE NOCASE)))OR((('o') BETWEEN ('') AND ('㺝Y^9?{J-'))))); -- 0ms;
SELECT DISTINCT (((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))) NOTNULL) FROM rt0 ORDER BY CAST((x'' IN ()) AS REAL) ASC;SELECT ((((rt1.c4) ISNULL)) NOT NULL) FROM rt0, rt1 WHERE (CAST(NULL AS REAL)); -- 0ms;
SELECT DISTINCT CAST(rt0.c4 AS NUMERIC) FROM vt0, rt0 WHERE ((- (ABS(DISTINCT '-763927415')))); -- 0ms;
SELECT DISTINCT ((~ (rt0.c2)) IN (((rt0.c2)||(rt1.c4)))) FROM t0, vt0, rt1 GROUP BY LIKELIHOOD(x'5e1f', 0.49542018266535026) HAVING (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt0.c2, CASE rt1.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt1.c1 THEN x'' WHEN rt0.c4 THEN t1.c69 END));SELECT ALL (((((rt1.c3, rt1.c3, rt0.c0))>((rt0.c1, rt1.c3, rt0.c0)))) NOT BETWEEN (UPPER(t1.c69)) AND ('482657863')), CAST(CAST(rt0.c4 AS BLOB) AS INTEGER), CASE ((rt1.c4)|(NULL))  WHEN ((rt1.c2)<=(rt0.c4)) THEN ((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c0)) WHEN COUNT(*) THEN SUM(rt0.c4) WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c3)) END FROM rt1, rt0, t1, t0 GROUP BY (((('1704472727')IS(vt0.c0)))||((((rt0.c4))!=((rt1.c0))))), ((rt0.c2) IS TRUE) COLLATE RTRIM, ('996351588' IN (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt1.c3 THEN vt0.c0 WHEN t0.c0 THEN rt1.c1 END, LAST_INSERT_ROWID(), rt1.c3 COLLATE BINARY)) LIMIT -1168427991;SELECT DISTINCT (((~ (rt1.c1)))>(((((rt0.c2)OR(rt1.c3)))AND(rt1.c1)))), CASE WHEN (NOT (rt0.c4)) THEN ((NULL)IS(rt0.c0)) WHEN ((t1.c69)GLOB(rt0.c4)) THEN rt0.c1 WHEN (((vt0.c0, vt0.c0, rt0.c3))>=((rt1.c1, t1.c69, rt0.c3))) THEN (NOT (t0.c0)) END, CASE (- (rt0.c2))  WHEN ((rt1.c3)LIKE(rt0.c4)) THEN (((rt0.c2))>=((rt0.c0))) WHEN ((t1.c69)LIKE(rt0.c3)) THEN COUNT(rt0.c2) WHEN (((rt0.c2))<=(('EyqQ7|!'))) THEN CASE WHEN rt0.c3 THEN t0.c0 WHEN t0.c0 THEN rt1.c3 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END END FROM vt0, t1, rt1, t0 WHERE (((NULL) NOTNULL)) LIMIT 860083892 OFFSET 1959929375;SELECT ALL ((((rt1.c3)) BETWEEN ((rt0.c0)) AND ((t0.c0))) IN ()), (- ((~ (t1.c69)))), NTILE(x'') OVER () FROM t1 WHERE (CASE WHEN '-50884999' COLLATE RTRIM THEN ((0.7874245538958363)<<(-674492188)) ELSE (0.3191942748916019 IN (NULL)) END); -- 0ms;
SELECT CAST(((rt0.c1) ISNULL) AS REAL) FROM t0 WHERE (((((NULL)OR(0.1566336872397407)))OR('cYA')) COLLATE BINARY) GROUP BY (((rt1.c0))<=((CAST(rt1.c0 AS REAL))));SELECT rt1.c3 FROM rt1, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c4)*(t1.c69))) FROM rt1, vt0, rt0 WHERE ((((((('X*<瀫') NOTNULL))AND(((NULL) BETWEEN (-1.01359776E8) AND (0.7010279774709484)))))AND((0.4378256306102162 IN ()))));SELECT ((rt0.c0)GLOB(rt1.c0)) COLLATE NOCASE, CAST(((rt1.c0)/(t1.c69)) AS BLOB), SUM(((rt0.c2)/(t0.c0))) OVER () FROM rt1, rt0, vt0, t0;SELECT DISTINCT CASE WHEN rt0.c4 THEN ((rt1.c0) IS FALSE) END FROM rt0, t1 WHERE (((x'')%('280643417')) COLLATE RTRIM) ORDER BY (rt0.c1 IN ()) COLLATE BINARY, CAST(rt0.c4 COLLATE RTRIM AS BLOB)  NULLS FIRST, (((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)) IN ()) DESC  NULLS FIRST;SELECT ALL (((CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END))>((IFNULL(DISTINCT rt1.c1, t1.c69)))) FROM t0 WHERE ((- ('-576848405' COLLATE BINARY)));SELECT DISTINCT (((((rt0.c0 IN ()))OR(0.6441321981721218)))AND(CASE WHEN rt1.c4 THEN rt0.c3 ELSE t0.c0 END)) FROM rt0, rt1, t0, t1 GROUP BY (t1.c69 COLLATE NOCASE IN ((+ (vt0.c0)), (((rt0.c2))>=((t1.c69)))));SELECT (((((rt1.c0, rt0.c0, rt0.c3, t0.c0, rt1.c4)) NOT BETWEEN (('782384400', rt0.c1, t1.c69, rt0.c0, rt1.c0)) AND ((t0.c0, rt1.c0, rt0.c1, vt0.c0, rt0.c0))))&(rt0.c2 COLLATE BINARY)) FROM t1, rt1, t0;SELECT DISTINCT (((t0.c0 IN (t1.c69))) BETWEEN (CASE WHEN 0.22641383574429275 THEN rt1.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c3 ELSE t0.c0 END) AND (((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c2)))) FROM vt0 WHERE (NULL);SELECT DISTINCT (rt0.c3 IN ()) FROM t0, vt0, rt1, t1, rt0 WHERE (CAST(((0.4071985724055084)-(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c0 THEN rt1.c4 ELSE vt0.c0 END COLLATE RTRIM, rt1.c2, (((((t0.c0))>((vt0.c0))))>(vt0.c0)) FROM vt0, rt1 WHERE (0.7475508467975897);SELECT ALL CAST(rt1.c3 COLLATE BINARY AS REAL) FROM vt0 WHERE (CAST((((0.4736999094612562, x'', NULL))==((0.8949418932737503, '-864668056', NULL))) AS REAL)) LIMIT -1034996299;SELECT ALL ((CAST(rt1.c4 AS REAL)) IS TRUE) FROM vt0 WHERE (((((CASE WHEN NULL THEN 0X305d1206 ELSE x'1e88af77' END)OR(((NULL) NOT NULL))))AND('0r' COLLATE NOCASE)));SELECT COUNT(CAST(rt0.c4 AS REAL)) FROM rt0, t0, rt1, t1 WHERE (CAST(x'47f2' COLLATE RTRIM AS TEXT)) GROUP BY (NOT (((t0.c0) BETWEEN (NULL) AND (rt1.c2)))) HAVING GROUP_CONCAT(((rt1.c4) NOTNULL)); -- 0ms;
SELECT NULL FROM t1, rt1, t0 WHERE (((CASE x''  WHEN '280643417' THEN NULL WHEN 0X305d1206 THEN 0.9587510149708214 WHEN 1.959929375E9 THEN x'' ELSE -1227652719 END)>(((((x'')AND('b*Na~5bS)')))AND(''))))); -- 0ms;
SELECT (((((rt0.c2)*(rt1.c2)), ((rt0.c2) NOTNULL), (- (rt1.c4))))>((SUM(rt1.c3), ((rt1.c2)<<(t0.c0)), '807479006'))), ((CASE WHEN t1.c69 THEN vt0.c0 ELSE rt1.c2 END)<=(((((rt0.c2)OR(rt1.c0)))OR(vt0.c0)))), json_object(((rt1.c0) IS FALSE), (rt1.c0 IN ())) FROM t1, rt1 ORDER BY ((((t1.c69 COLLATE RTRIM)AND((rt0.c3 IN (1.452506927E9)))))OR(((NULL) IS FALSE)))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM) BETWEEN (rt1.c3 COLLATE BINARY) AND ((NOT (rt0.c0))))  NULLS FIRST;SELECT ALL '569600636' FROM rt0, t0, vt0, rt1 WHERE (CASE WHEN 0x235ed763 THEN '' END COLLATE NOCASE) ORDER BY (((rt0.c3, 0.42499873523329734, rt1.c1)) BETWEEN (((((0.9095080560039916, rt0.c0, rt1.c2)) BETWEEN ((rt0.c4, rt0.c4, NULL)) AND ((rt0.c0, t0.c0, rt0.c4))), ((rt0.c1)>=(rt1.c4)), (NOT (rt1.c3)))) AND ((((((rt1.c1)AND(rt1.c4)))AND(rt0.c2)), ((NULL) NOT BETWEEN (rt0.c1) AND (rt1.c0)), (NOT (rt1.c2))))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((((t1.c69)==(rt1.c0)))<=(((rt0.c3) NOTNULL))) FROM vt0, t1;SELECT DISTINCT vt0.c0 COLLATE RTRIM FROM t1 NATURAL JOIN vt0; -- 1ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((SUM(rt1.c2))) AND ((rt1.c3 COLLATE NOCASE))) FROM rt1, vt0, t0, t1; -- 0ms;
SELECT SUM(rt0.c3) FROM t1 CROSS JOIN t0 ON '200486277' FULL OUTER JOIN rt1 ON x'' FULL OUTER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (rt1.c0) AND (t1.c69)) AS BLOB) CROSS JOIN rt0 ON CASE WHEN (rt0.c0 IN (rt0.c2)) THEN (- (rt0.c2)) ELSE ((rt0.c1) NOTNULL) END WHERE ('');SELECT DISTINCT (((CAST(rt1.c1 AS TEXT)))<((((((rt0.c0)AND(rt0.c4)))OR(t0.c0))))) FROM vt0, rt0 WHERE (CASE WHEN ((NULL)=(x'')) THEN (NULL IN ()) END);SELECT DISTINCT ((((rt1.c1)OR(0xffffffffd2b57346)))OR(((NULL) IS FALSE))) FROM t0, vt0, rt0, rt1 WHERE (LOWER('(twn')); -- 0ms;
SELECT DISTINCT (~ (CAST(rt0.c1 AS INTEGER))), SUM((((rt1.c4, rt1.c1, rt1.c3))>((rt1.c4, rt1.c2, vt0.c0)))) OVER (), ((rt1.c1) IS FALSE), (((((rt0.c4, rt0.c4, rt1.c4)) BETWEEN ((rt1.c2, rt1.c4, rt0.c0)) AND ((rt1.c3, rt0.c4, rt0.c3)))) BETWEEN (rt1.c3) AND (COUNT(*))), rt1.c3 FROM t0, rt0 GROUP BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3))) IS TRUE) HAVING '2134296991';SELECT DISTINCT ((rt1.c4 IN ()) IN ()) FROM vt0; -- 0ms;
SELECT CAST(((rt0.c3)LIKE('569600636')) AS BLOB), CAST(rt1.c2 AS TEXT), (((rt0.c3 IN ()))*(MIN(rt1.c4))) FROM t1;SELECT ALL COUNT(((vt0.c0) ISNULL)) OVER (), NULL COLLATE NOCASE, rt1.c4 FROM vt0, rt1, t0; -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT NULL) IN (((vt0.c0)AND(rt0.c3)))) FROM t1, t0 LIMIT -1093458507;SELECT ALL COUNT(CAST(rt1.c4 AS NUMERIC)) FROM vt0, rt1 WHERE (CASE ((NULL)LIKE(NULL))  WHEN NULL THEN ((x'')<>(0.2386895817112652)) END); -- 0ms;
SELECT DISTINCT '' FROM t0, rt0, t1, rt1, vt0 WHERE ((+ ('0.21927774043929282'))); -- 1ms;
SELECT LAST_VALUE(CAST(((vt0.c0) NOT NULL) AS BLOB)) OVER () FROM vt0, t0, rt1, rt0, t1 WHERE ((('-1315856000') NOT NULL) COLLATE RTRIM COLLATE BINARY); -- 0ms;
SELECT -1903093547 COLLATE RTRIM FROM t0, rt1, vt0, rt0 WHERE ((((~ (0.025667459329018927)))*(((NULL) NOT NULL)))) GROUP BY ((((((((vt0.c0)OR(((rt1.c4)>(rt0.c0)))))OR(CAST(rt0.c3 AS BLOB))))OR(((t0.c0) BETWEEN (rt1.c3) AND (rt0.c3)))))AND(CASE WHEN rt1.c3 THEN t1.c69 END)) HAVING ((((t0.c0) IS TRUE)) NOTNULL) ORDER BY (((MAX(rt0.c3, rt1.c2, t0.c0, x'dbea3185')))=(((~ (rt1.c3)))))  NULLS FIRST;SELECT DISTINCT CASE ((rt1.c0)/(vt0.c0))  WHEN x'10a1' THEN (vt0.c0 IN (-1815764250)) END FROM rt0, t1, vt0 WHERE ((('') BETWEEN (x'') AND ('-1654206038')) COLLATE BINARY);SELECT DISTINCT ((((CAST(rt0.c4 AS NUMERIC))AND(CAST(rt0.c3 AS REAL))))OR(MIN(t0.c0))) FROM rt0, vt0, rt1;SELECT TOTAL(((rt1.c2) BETWEEN (0Xffffffffccabef75) AND (rt1.c1))), ((((rt0.c0) NOTNULL))<<(HEX(rt1.c3))), CASE WHEN 'PcG\r∔jO' THEN CASE NULL  WHEN rt0.c0 THEN rt0.c3 END ELSE CASE WHEN rt1.c0 THEN rt1.c0 END END FROM t1, rt0 INDEXED BY i47, rt1 WHERE (((((NULL)OR(CAST(NULL AS INTEGER))))OR(CASE NULL  WHEN x'6f46' THEN '-1866505296' WHEN NULL THEN '-1168427991' WHEN x'' THEN x'' ELSE 8.07479006E8 END)));SELECT DISTINCT (+ ((((x'd7c6364d', t1.c69, '939594222', rt1.c4, rt0.c4, rt0.c1, rt1.c3))>((t0.c0, t1.c69, rt0.c0, rt1.c4, rt1.c1, t0.c0, rt0.c3))))) FROM t1, t0, vt0, rt0, rt1 ORDER BY ((rt1.c4)<(rt0.c0)) ASC, ((((((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c1)))AND(((rt0.c2) ISNULL))))AND(rt1.c1)) DESC; -- 0ms;
SELECT ALL UPPER(CASE rt0.c1  WHEN t1.c69 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt1.c4 END) FROM t1, t0, rt1, vt0;SELECT DISTINCT (~ (COUNT('366682644'))) FROM rt0; -- 2ms;
SELECT (((0.05086576163643408 COLLATE RTRIM))!=((((rt0.c2)>=(rt1.c4))))), 0.870512753253512, CAST(((vt0.c0) NOT NULL) AS NUMERIC) FROM rt1, rt0, t1 WHERE ((((((''))>((0.2643583700991863))))<=((('-412513787') IS TRUE))));SELECT ((CAST(rt0.c4 AS BLOB)) NOT NULL) FROM t1, vt0, rt0, rt1, t0 WHERE ((((-196981446)) NOT BETWEEN (('-1710919357')) AND ((0.7178682190266497))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt1.c1 IN (rt1.c1)))>>(CAST(rt1.c4 AS NUMERIC))), SUM((((rt1.c1))<((rt0.c1)))), ((LIKELY(DISTINCT 0.3146690225144586)) IS TRUE) FROM rt0;SELECT DISTINCT TYPEOF(TOTAL(0.9216305254483645)) FROM t1; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)OR(t0.c0))) FROM vt0, t1, rt0, rt1, t0; -- 0ms;
SELECT ALL ((((NOT (t0.c0))))<((((NULL)>=(t1.c69))))) FROM rt0, rt1, t1, t0; -- 1ms;
SELECT ALL ((CASE WHEN t1.c69 THEN rt1.c3 ELSE rt0.c1 END) NOT NULL) FROM rt0, t1, t0 WHERE (((CAST(0.4621601638616962 AS NUMERIC)) BETWEEN ((('zSI9z梦D91') NOT BETWEEN (0.8280641948880335) AND (x'3943'))) AND (UPPER('0.5226630570208959')))) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((NULL) BETWEEN (rt1.c3) AND (t0.c0))))) ASC;SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((SUM(rt0.c1)))), CAST(CAST(rt1.c3 AS REAL) AS NUMERIC), (+ (((rt1.c0) IS FALSE))) FROM rt1, rt0, t1 WHERE ((- ((('*') BETWEEN (-1.48537657E9) AND (''))))) ORDER BY rt1.c2, ((((t1.c69)IS(rt1.c3)))GLOB((+ (rt1.c2)))); -- 0ms;
SELECT MIN(((rt0.c1)==(rt1.c0))) FROM vt0, t1 INDEXED BY i47, rt1 GROUP BY ((highlight(rt1.c1, rt0.c0, rt0.c1, rt1.c1))!=(t0.c0));SELECT (ABS(rt0.c3) IN ()) FROM t0, rt0, t1, vt0, rt1 WHERE ((((NOT (0.4013504154103519)))-((' ?LLkἦ' IN ())))); -- 0ms;
SELECT ALL 0.5280009349437531, ((((rt1.c3)/('-1923161044'))) IS TRUE), CAST(rt0.c3 AS INTEGER) FROM t1, t0 ORDER BY ((((rt1.c3 COLLATE NOCASE)OR(((rt1.c3)*(rt0.c3)))))AND(CAST(rt1.c1 AS REAL))) ASC  NULLS LAST;SELECT (~ (HEX(DISTINCT rt0.c1))) FROM rt1, t0 WHERE (((TRIM(DISTINCT NULL)) NOT BETWEEN (((x'') ISNULL)) AND ('2q/Ad'))) LIMIT 24484386 OFFSET 467647099;SELECT DISTINCT GROUP_CONCAT(((rt1.c0)<(rt0.c3))) FILTER(WHERE 4.62241637E8) OVER () FROM t1 WHERE (((((0.30656029443678123) ISNULL))<=((('')<(x'c973')))));SELECT DISTINCT CASE WHEN ((rt1.c1) NOT NULL) THEN rt0.c3 COLLATE RTRIM WHEN CASE rt0.c1  WHEN rt0.c0 THEN x'' ELSE t1.c69 END THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2))) WHEN t1.c69 COLLATE RTRIM THEN rt0.c0 WHEN CAST(rt1.c0 AS BLOB) THEN (t1.c69 IN ('569600636', t0.c0, rt1.c3, vt0.c0)) WHEN CASE WHEN t0.c0 THEN t1.c69 ELSE x'' END THEN ((0x7420c37f) IS FALSE) END FROM vt0, rt0 WHERE (CASE WHEN (x'' IN ()) THEN (- ('Y),돔1梦,ⶅ')) WHEN json_quote(NULL) THEN ((x'a465') NOTNULL) WHEN NULL THEN '-YA' COLLATE BINARY ELSE CASE '38573303'  WHEN 0.8397381639924995 THEN '-861147275' END END);SELECT ALL CAST(rt1.c2 AS REAL) COLLATE BINARY, ((rt0.c4 COLLATE NOCASE)<((~ (rt0.c0)))), x'', CAST(((rt1.c1) BETWEEN (rt0.c3) AND (rt1.c2)) AS REAL), (((rt1.c0, rt1.c0, vt0.c0, x'', vt0.c0)) NOT BETWEEN (((t1.c69 IN ()), MAX(rt0.c1), CASE WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN t0.c0 THEN t0.c0 END, LTRIM(rt0.c2, rt1.c0), ((rt0.c4)>=(NULL)))) AND ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c4)), UNLIKELY(rt1.c3), ((t1.c69) NOT BETWEEN (vt0.c0) AND (rt1.c4)), ((0.9702706365436358)LIKE(NULL)), ((((((((((((((((rt0.c1)AND(x'2b60')))OR(rt0.c3)))OR(t1.c69)))OR(t1.c69)))AND(rt1.c3)))OR(rt0.c4)))OR(t1.c69)))OR(rt1.c4))))) FROM t1;SELECT DATE(((t0.c0)==(rt1.c2)), rt0.c2 COLLATE RTRIM, CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt1.c4 WHEN t0.c0 THEN rt1.c4 WHEN vt0.c0 THEN t1.c69 WHEN t0.c0 THEN rt0.c2 ELSE vt0.c0 END) FROM vt0, rt0, rt1, t0 WHERE (((NULL) NOTNULL) COLLATE NOCASE);SELECT DISTINCT SUM(CAST(rt1.c0 AS NUMERIC)) OVER ( GROUPS ((CAST(rt1.c0 AS INTEGER))<=((rt0.c2 IN ()))) PRECEDING) FROM t0 WHERE ((~ (0.4498812689264212)) COLLATE BINARY);SELECT DISTINCT MIN(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0))) FROM rt0, rt1, t0;SELECT PERCENT_RANK() OVER (), ((CASE rt1.c2  WHEN rt0.c3 THEN rt0.c1 END) ISNULL), '' FROM t0, vt0, rt0 GROUP BY ((((((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c4)))AND(rt1.c0)))OR(0.15770634707435371)))AND(rt1.c0)))OR(t0.c0))) BETWEEN (((((((((((((rt1.c4)OR(rt0.c4)))OR(rt0.c2)))AND(rt1.c3)))AND(rt0.c4)))AND(rt1.c3)))AND(vt0.c0))) AND (rt0.c3)) HAVING (((rt1.c0)) NOT BETWEEN (((0xffffffffb47b05cf IN (t0.c0)))) AND ((rt1.c2 COLLATE BINARY)));SELECT LEAD(((CASE rt1.c2  WHEN rt0.c0 THEN rt0.c0 END) IS TRUE), t1.c69, ((((rt1.c0)OR(rt1.c4))) IS FALSE)) OVER ( ORDER BY rt0.c0 ASC) FROM t0, rt1 INDEXED BY i62, t1, rt0, vt0 GROUP BY IFNULL((((rt0.c4)) BETWEEN ((t0.c0)) AND ((rt1.c1))), (NOT (rt0.c2))) ORDER BY ((((((t1.c69)OR(rt0.c3)))OR(rt0.c2))) NOT NULL)  NULLS FIRST, CAST(CASE rt1.c0  WHEN '-50884999' THEN rt1.c2 END AS TEXT) DESC, ((((rt0.c0) BETWEEN (rt0.c4) AND (rt1.c3)))>=(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4))));SELECT DISTINCT (+ (rt1.c1)) COLLATE NOCASE FROM rt1, rt0 WHERE (CASE WHEN 0.9990726703824726 THEN x'' END COLLATE BINARY); -- 0ms;
SELECT ALL vt0.c0, DATETIME(vt0.c0, rt0.c2, t0.c0) COLLATE RTRIM, '-2031307977' FROM rt0, vt0, t0; -- 0ms;
SELECT (~ (CAST(rt1.c2 AS INTEGER))), (LIKELIHOOD(rt1.c4, 0.9812545758030068) IN ()), COUNT(*) FROM rt1, rt0 NOT INDEXED GROUP BY ((rt0.c0)|(rt1.c3)) COLLATE BINARY HAVING ((rt1.c3 COLLATE NOCASE)>(LIKELIHOOD(DISTINCT rt0.c4, 0.4646539306040307))); -- 0ms;
SELECT DISTINCT NULL, (((t0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c3) AND ('1419336469')))) AND ((((rt1.c3)AND('0.5530549936600255'))))), CAST(rt1.c1 AS TEXT), CAST(rt0.c1 COLLATE NOCASE AS REAL), ((('0&', 855113080, rt1.c0, rt1.c1, rt0.c3)) BETWEEN (((((t1.c69))<=((rt1.c0))), CAST(vt0.c0 AS REAL), MAX(rt1.c1), CASE t0.c0  WHEN rt1.c2 THEN rt1.c3 ELSE rt0.c4 END, rt1.c0 COLLATE NOCASE)) AND ((rt1.c3, (((rt1.c2))=((t0.c0))), rt1.c1, ((rt1.c4)IS(0.7324915837678502)), CAST(rt1.c0 AS REAL)))) FROM rt0, t1, vt0, t0, rt1 WHERE (TYPEOF(DISTINCT LIKE('1691619276', 0X171448a4, '5'))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((x'a5bb')IS NOT(rt1.c3))), rt0.c2, CASE WHEN ((rt0.c1)IS NOT(rt1.c4)) THEN (((t1.c69))<=((rt1.c1))) WHEN TRIM(DISTINCT vt0.c0, rt1.c1) THEN SUM(t1.c69) WHEN x'' THEN (rt1.c2 IN ()) ELSE ((rt0.c2) IS TRUE) END FROM rt0, vt0, t1, rt1, t0; -- 0ms;
SELECT DISTINCT rt1.c3 FROM rt0, t0, t1, vt0;SELECT DISTINCT ((COUNT(*)) BETWEEN ((rt0.c2 IN ())) AND (((NULL)<>(rt1.c1)))) FROM t1 NOT INDEXED;SELECT ALL AVG(1.419336469E9) FROM vt0, rt1, rt0, t1, t0 WHERE (('1959929375' COLLATE NOCASE IN ())); -- 0ms;
SELECT ALL CASE ((t0.c0) IS TRUE)  WHEN CAST(rt1.c2 AS REAL) THEN ((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c1)) WHEN ((((rt1.c2)OR(t1.c69)))AND(t1.c69)) THEN CAST(rt0.c3 AS INTEGER) WHEN ((((rt1.c3)OR(rt0.c4)))OR(rt0.c2)) THEN ((rt1.c3) BETWEEN (rt1.c3) AND (rt0.c3)) END FROM t0, t1, rt1;SELECT DISTINCT (NOT (((t0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0)))), '2123696901', ((rt1.c3) NOT NULL) COLLATE BINARY FROM t0, vt0, t1;SELECT ALL (- (((t1.c69) BETWEEN (t0.c0) AND (rt1.c0)))), (rt1.c2 COLLATE BINARY IN ()), rt0.c4, COUNT((rt1.c3 IN (rt0.c2, rt0.c3))), rt1.c4 FROM t0;SELECT ((UNICODE(NULL)) NOT BETWEEN (((rt1.c3) IS FALSE)) AND (((rt1.c2) NOT NULL))) FROM rt1, t0 ORDER BY (CAST(rt0.c1 AS NUMERIC) IN (CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c3 END, ((rt0.c4) IS FALSE)))  NULLS FIRST;SELECT ALL CASE SQLITE_COMPILEOPTION_USED(rt0.c0)  WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c3)AND(rt0.c4)))OR(rt1.c3)) END, (((~ (rt1.c0))) NOT BETWEEN (((rt1.c4) NOT NULL)) AND (rt0.c2 COLLATE NOCASE)), (((((rt1.c3 IN ()))OR(CAST(rt0.c1 AS BLOB))))AND(((t0.c0)IS(t0.c0)))) FROM rt0, rt1, t1, t0, vt0 WHERE (((('659220901')) BETWEEN ((CAST(x'' AS INTEGER))) AND ((((0.6601402864188923) NOT NULL))))); -- 1ms;
SELECT DISTINCT ((0x5dfe247)LIKE(((vt0.c0)GLOB(rt1.c1)))) FROM vt0 WHERE (0.7180552323505605) GROUP BY (+ ('741300786')), ((((rt0.c2)>>(rt1.c4))) IS FALSE), HEX(((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt0.c3))) ORDER BY ((HEX(DISTINCT t1.c69)) NOTNULL) DESC;SELECT DISTINCT ((((rt1.c4 IN (rt0.c1)), UNLIKELY(DISTINCT rt1.c1), ((vt0.c0) NOT NULL)))<((((rt0.c3) NOTNULL), ((((t1.c69)OR(vt0.c0)))AND(rt0.c0)), ((t1.c69) IS FALSE)))) FROM t0 INTERSECT SELECT DISTINCT CAST(((t0.c0)<>(vt0.c0)) AS REAL) FROM rt1, vt0 WHERE (CAST(CAST(NULL AS BLOB) AS NUMERIC));SELECT DISTINCT UNLIKELY(((rt0.c0) NOT BETWEEN (rt1.c0) AND (t0.c0))) FROM t1, rt0, t0, vt0 ORDER BY NULL ASC  NULLS FIRST;SELECT ALL x'81aa' FROM vt0, t0 WHERE (CAST(NULL AS BLOB)) LIMIT -591302953; -- 0ms;
SELECT ALL (((rt0.c4)) NOT BETWEEN (((~ (rt0.c1)))) AND ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) FROM rt0 ORDER BY (((rt1.c1)) BETWEEN (((+ (rt1.c3)))) AND ((rt0.c4 COLLATE BINARY))) ASC, '1452506927';SELECT DISTINCT ((((((rt0.c4)OR(rt1.c0)))OR(rt1.c1))) BETWEEN (AVG(t0.c0)) AND (((rt1.c2)|(rt0.c3)))) FROM rt0 CROSS JOIN t1 ON ((((((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))AND(vt0.c0)))OR(rt1.c4)))-((- (rt0.c3)))) LEFT OUTER JOIN t0 ON x'b7a4' LEFT OUTER JOIN vt0 ON 0x6e3ac293 WHERE (((NULL COLLATE RTRIM)*((((-0.0))<=((x''))))));SELECT DISTINCT ((NULL) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c4))))>>(((((t1.c69)OR(rt0.c2)))OR(rt0.c0)))) FROM vt0, rt1 WHERE ((- ((x'a9c7' IN (0.23031852161884359))))) LIMIT 1419336469;SELECT (- (NULL)) FROM t1, t0; -- 0ms;
SELECT DISTINCT CASE ((rt1.c4) NOTNULL)  WHEN x'0891' THEN ((rt0.c4)-(t1.c69)) END FROM rt0, rt1, t0, t1 ORDER BY (((((rt0.c4, vt0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt1.c2, '-f')) AND ((rt0.c3, rt1.c0, rt0.c3))))<>(rt0.c4)) DESC  NULLS LAST;SELECT COUNT((NOT (rt1.c4))) OVER (), ((((((((rt1.c4)OR((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((0.6139612555474994))))))OR(rt0.c3)))AND(NULLIF(DISTINCT rt0.c4, rt0.c3))))AND(((((rt0.c0)OR(rt0.c4)))AND(rt1.c4)))), t1.c69, rt0.c3, ROW_NUMBER() OVER () FROM t0, vt0, rt1, t1, rt0; -- 1ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN (((((rt0.c3, rt1.c1, rt1.c1)) BETWEEN ((t1.c69, NULL, rt1.c4)) AND ((rt0.c1, t1.c69, rt1.c4))))) AND (((rt1.c1 IN ())))) FROM t1, rt1, t0, rt0 WHERE ((NULL COLLATE NOCASE IN ((('')LIKE(''))))) GROUP BY ((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4))) NOT BETWEEN (((t0.c0)<(rt1.c1))) AND (((rt1.c4) IS TRUE))); -- 0ms;
SELECT ALL ((((rt0.c4) NOT BETWEEN (rt1.c0) AND (t0.c0)))&(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) FROM rt0 WHERE (((SUBSTR(0.2438473994215027, x'')) ISNULL));SELECT DISTINCT (((+ (rt1.c1)))||(CASE WHEN rt0.c3 THEN rt0.c4 END)), CAST(UNLIKELY(rt1.c0) AS NUMERIC), COUNT((rt0.c0 IN ())) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES) FROM t1, vt0;SELECT ((((((((CAST(x'' AS TEXT))AND(((rt1.c0)OR(x'9684')))))OR(((rt0.c1) NOTNULL))))OR(((t0.c0) NOT NULL))))OR(IFNULL(DISTINCT rt1.c0, rt1.c2))), 0.11132399574577978, rt1.c0 FROM rt0, vt0;SELECT ((rt1.c3 COLLATE BINARY)|(UPPER(DISTINCT t1.c69))) FROM rt1, vt0, t0, t1 WHERE (((807479006)+((+ ('>BW_1q騢pv'))))); -- 0ms;
SELECT DISTINCT json((((rt1.c4))<>((rt0.c1)))), TRIM(DISTINCT rt1.c0 COLLATE NOCASE), ((((rt0.c2) NOTNULL)) ISNULL) FROM t0, t1, rt0, vt0, rt1 WHERE (CAST(CAST(-2.031307977E9 AS NUMERIC) AS TEXT)); -- 0ms;
SELECT ((((((((AVG(t0.c0))OR(((((((((rt1.c0)OR(rt1.c3)))OR(t1.c69)))AND(rt0.c4)))AND(vt0.c0)))))OR(TRIM(t0.c0, 0.8725352085128286))))AND(((rt0.c3) BETWEEN (rt1.c4) AND (rt1.c4)))))AND(((NULL)>=(t0.c0)))) FROM t0, rt0, rt1, t1, vt0 WHERE (((CASE x''  WHEN 0X5ad4f329 THEN NULL END) BETWEEN (CASE x'ff26'  WHEN '' THEN x'' WHEN '97222879' THEN 'B丩4S' WHEN '-971992765' THEN x'' ELSE x'' END) AND (CASE WHEN NULL THEN 0.6445966844821637 WHEN 832066441 THEN 1.952534057E9 WHEN 0.542153811978059 THEN x'' WHEN x'' THEN NULL WHEN '1815819938' THEN x'7627' END))) ORDER BY COALESCE(DISTINCT CASE rt1.c3  WHEN '1115458293' THEN rt1.c2 ELSE rt0.c4 END, '?1''', ((rt1.c2)==(rt1.c1)), (t1.c69 IN ())) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND(vt0.c0)))AND(x''))) NOT BETWEEN (((rt0.c4) BETWEEN (rt1.c3) AND (rt0.c1))) AND (((rt0.c3)IS(rt1.c2)))) FROM rt0 WHERE ((((0.646300701964559) IS FALSE) IN ()));SELECT DISTINCT NULL FROM rt1, t0 FULL OUTER JOIN vt0 ON (((CASE WHEN rt0.c1 THEN vt0.c0 END, rt0.c3 COLLATE BINARY, ((rt0.c3) BETWEEN (0.06754391604649046) AND (t0.c0)), ((((vt0.c0)OR(rt1.c1)))AND(rt0.c4)), UNLIKELY(DISTINCT rt1.c2)))==((((rt1.c0)>>(rt0.c2)), LIKELIHOOD(rt1.c0, 0.4617702671200655), ((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c3)), (- (rt0.c2)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) LEFT OUTER JOIN t1 ON CAST(((rt0.c0) IS FALSE) AS NUMERIC) WHERE ((('Twt঴') ISNULL));SELECT DISTINCT (TOTAL(rt0.c1) IN ()) FROM vt0, t1, rt0 WHERE (((((((((((((-1367952940)AND(0.002640373402260532)))OR(x'')))OR('9s,BDh')))OR(0X17dbbb01)))AND((('') NOT NULL))))AND((- (NULL))))); -- 0ms;
SELECT ALL ((((rt1.c3) BETWEEN (x'') AND (NULL)))/(COUNT(rt0.c4))) FROM t0, t1, rt0 ORDER BY CAST(CAST(t1.c69 AS TEXT) AS TEXT) ASC  NULLS FIRST;SELECT ALL CAST(CASE WHEN rt1.c4 THEN t1.c69 END AS BLOB) FROM t0 NOT INDEXED, vt0, rt0, t1, rt1; -- 0ms;
SELECT DISTINCT '' COLLATE NOCASE FROM t1, vt0, rt1, t0, rt0 WHERE ((('1937269699' COLLATE RTRIM) IS TRUE)); -- 0ms;
SELECT ((json_insert(rt0.c0, rt0.c4, t0.c0)) NOT BETWEEN (((rt1.c0)|(rt0.c4))) AND ('366682644')), LTRIM(((((((((t1.c69)AND('1637783813')))AND(rt1.c3)))AND(rt1.c4)))OR(rt0.c1))), CAST((rt1.c3 IN ()) AS NUMERIC) FROM t0, rt1, t1, rt0; -- 0ms;
SELECT DISTINCT json_extract(((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c3)), CASE WHEN rt1.c3 THEN t1.c69 WHEN rt1.c0 THEN rt1.c4 WHEN t1.c69 THEN rt0.c1 ELSE rt1.c1 END) FROM rt0, vt0, rt1, t1 WHERE (((((((((2.09740897E9)OR('V')))AND(0.38061260402449715)))OR(((0.8530887854162871) NOT BETWEEN ('Wy') AND ('0.15770634707435371')))))OR(NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>(rt0.c1 COLLATE RTRIM))) OVER ( ORDER BY rt1.c1 DESC) FROM rt0, t0;SELECT ALL ((t1.c69 COLLATE BINARY)<>(((vt0.c0)||('-1267006001')))), ((NULL) BETWEEN (CASE vt0.c0  WHEN rt1.c3 THEN t1.c69 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c3 ELSE t0.c0 END) AND (((((rt0.c4)AND(t1.c69)))AND('641664823')))), NULL, (NULL IN ()), (- (CAST(vt0.c0 AS REAL))) FROM vt0 WHERE ((((NULL, 0.2965117087560497, -1209505443)) NOT BETWEEN (('-1967517793', 530702518, x'be74')) AND ((NULL, 'HᏯ', 0.4498812689264212))) COLLATE BINARY);SELECT ALL LIKELIHOOD(DISTINCT (((rt1.c3, rt0.c3, rt0.c2))>=((rt1.c2, rt1.c0, rt1.c3))), 0.13056336655790357) FROM t0 WHERE ((~ ((~ (2.134296991E9)))));SELECT ALL GROUP_CONCAT(CASE rt0.c0  WHEN t1.c69 THEN rt0.c1 ELSE rt1.c3 END), ((((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c0))) IS FALSE), ((((load_extension(rt0.c1))OR(((rt1.c3) BETWEEN (rt0.c2) AND (t0.c0)))))OR(((((((((rt1.c2)OR(rt1.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))) FROM vt0, t1, rt1, t0, rt0 WHERE (CAST(x'' AS NUMERIC) COLLATE RTRIM);SELECT DISTINCT CAST((((vt0.c0))<=((rt1.c0))) AS TEXT) FROM rt0, rt1, t1 NOT INDEXED, t0 WHERE ((((((NULL) NOT BETWEEN ('') AND (x'')), ((1.523905321E9)AND(x'')), ((((((((-1097696600)AND(-8.61147275E8)))OR(0xffffffffc57875cf)))AND(0.5032622743425537)))OR(-1981212461))))<((((((((((x'')AND('-1598009182')))OR(x'acd8')))OR(x'0e11')))AND(NULL)), (NULL IN ('1e500', '1350799904')), ((((x'')OR(NULL)))AND(-74289149)))))) GROUP BY (((NOT (t1.c69)))AND(t1.c69 COLLATE BINARY)) HAVING (((NOT (vt0.c0))) IS TRUE);SELECT DISTINCT ((x'') NOTNULL) COLLATE BINARY FROM t1, vt0 GROUP BY (((rt1.c1) BETWEEN (rt0.c0) AND ('.p')) IN ()), LIKELIHOOD(rt1.c0 COLLATE BINARY, 0.25286683862752857), TRIM(rt0.c4) COLLATE BINARY HAVING rt0.c3;SELECT DISTINCT ((((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c0))) IS TRUE) FROM vt0, rt0, t1;SELECT DISTINCT ((((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c4))) NOT BETWEEN (ABS(vt0.c0)) AND (rt0.c2)), ((((rt1.c0)&(rt1.c4)))<>(((t1.c69) BETWEEN (rt0.c2) AND (rt0.c0)))), t1.c69 COLLATE NOCASE FROM t0;SELECT ALL COUNT(rt0.c3) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM t0, rt1 NOT INDEXED, t1, vt0, rt0; -- 0ms;
SELECT DISTINCT MAX((+ (rt0.c4))) FROM rt1 WHERE ((LOWER(x'') IN (((0x258814b7) NOT BETWEEN (NULL) AND ('-1227652719')))));SELECT 0.07119614199424396, SUM((((rt1.c2, rt0.c3, rt0.c0))<=((vt0.c0, rt0.c3, vt0.c0)))), CASE WHEN (((t0.c0))==(('1450191314'))) THEN MIN(rt1.c1) ELSE ((rt0.c3) NOTNULL) END FROM rt0;SELECT (((rt1.c0)*(rt0.c2)) IN ()) FROM rt1, t1, vt0, rt0; -- 0ms;
SELECT DISTINCT rt1.c3 FROM vt0 INDEXED BY i47, t1 CROSS JOIN rt1 ON LOWER(x'') RIGHT OUTER JOIN t0 ON ((0.547433940577161) ISNULL) COLLATE BINARY WHERE (((((((((CASE WHEN x'02fb' THEN 0.009514760159629376 WHEN NULL THEN NULL WHEN NULL THEN NULL ELSE '' END)OR(((NULL) NOT BETWEEN ('x!') AND ('-576848405')))))AND((('Z^')/(445993731)))))OR((('387205284') NOTNULL))))OR(SQLITE_COMPILEOPTION_USED('')))) LIMIT 2134296991 OFFSET 301912744;SELECT STRFTIME(CASE WHEN t0.c0 THEN 'HgLl講>Tu' ELSE rt1.c1 END, ' #㴐g}S⛞', (((rt0.c0))=((t0.c0)))), CAST(CAST(rt1.c4 AS BLOB) AS REAL), ((((((((((rt0.c1)OR(vt0.c0)))AND(t0.c0)))OR(t1.c69)))OR(rt1.c2)))<(((rt1.c2)==(vt0.c0)))) FROM rt1, vt0, rt0, t0, t1 WHERE (((CAST(0.22827728673935688 AS NUMERIC)) NOTNULL)); -- 0ms;
SELECT COUNT((rt0.c1 IN ())) FROM vt0, rt1, rt0, t0 LIMIT -1315856000 OFFSET 773085572; -- 0ms;
SELECT DISTINCT ((((t1.c69))>=(('-1710203814'))) IN ()), ((GROUP_CONCAT(rt0.c1))-(rt0.c3)), MAX(rt0.c0) FROM rt0 NOT INDEXED, t1, rt1, t0 INDEXED BY i47;SELECT ALL ((((rt1.c3) IS FALSE)) IS FALSE) FROM rt1, vt0; -- 0ms;
SELECT MIN(((rt1.c4)||(rt0.c1))) FROM rt0 LIMIT -1227652719;SELECT ALL ((((rt1.c3)AND(t1.c69)))+(((vt0.c0)+(rt0.c1)))), ((((((((CASE t1.c69  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c1 END)OR(((rt1.c1)IS(NULL)))))OR(CAST(vt0.c0 AS TEXT))))OR((NOT (vt0.c0)))))AND(((rt0.c3) BETWEEN (t1.c69) AND (rt0.c3)))), TOTAL(((x'') BETWEEN (rt1.c0) AND (vt0.c0))) OVER () FROM t0, t1, rt1, vt0;SELECT ALL rt0.c1 FROM t1 ORDER BY ((((0X10c35d20) NOT BETWEEN (rt1.c2) AND (t0.c0)))%((- (rt1.c1)))) DESC  NULLS FIRST;SELECT ALL (((COUNT(rt1.c2), (((('-204856214')OR(rt0.c3)))OR(rt1.c3)), (((t1.c69)) BETWEEN ((rt0.c0)) AND ((rt1.c2)))))<=((rt1.c1 COLLATE RTRIM, NULL, NULL))) FROM rt0, t0, t1, rt1, vt0; -- 0ms;
SELECT t0.c0 FROM rt1, t0 LIMIT -990368280 OFFSET 1256474442; -- 0ms;
SELECT DISTINCT json_remove(x'', STRFTIME(rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c4), ((rt1.c3)==(x'5d8f')), rt1.c3), COALESCE(DISTINCT ((rt0.c2)%(vt0.c0)), COUNT(rt1.c4), ((rt1.c2)||(0.6566739375161911)), (((0.951455969407952))>((rt1.c2)))), ((CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c1 END)>=((- (t0.c0)))) FROM rt0, t0, rt1 WHERE (1738430688) ORDER BY MAX(((t0.c0) NOT NULL), ((rt1.c0) NOT NULL), ((rt0.c4) NOT NULL), CASE rt0.c3  WHEN t1.c69 THEN -2031307977 WHEN rt1.c4 THEN rt1.c0 WHEN 0X3b1ac538 THEN t0.c0 ELSE rt1.c3 END) ASC  NULLS LAST;SELECT ALL CASE (rt1.c2 IN ())  WHEN (((rt1.c2))<((vt0.c0))) THEN ((vt0.c0)>=(rt0.c3)) ELSE 0.5363437465393202 END FROM rt1, vt0, t1 WHERE (CAST(NULL COLLATE RTRIM AS REAL));SELECT DISTINCT ((CAST(rt1.c2 AS NUMERIC))GLOB(((rt1.c1) IS TRUE))) FROM t1 WHERE (LOWER((('-757252179')+(NULL))));SELECT DISTINCT (((rt1.c1)) NOT BETWEEN (((((rt1.c2))>((rt1.c2))))) AND ((((t1.c69)<>(t1.c69))))) FROM t1, vt0, rt0 WHERE (((((- (8.32066441E8))))>=((((x'')||(NULL))))));SELECT DISTINCT NULLIF(((((rt0.c3)OR(rt1.c1)))OR(rt1.c1)), ((((((((rt1.c3)OR(rt0.c4)))AND(rt0.c4)))AND(t1.c69)))AND(rt0.c0))) FROM vt0 LIMIT 103245037 OFFSET 1426840945;SELECT DISTINCT ((((((vt0.c0) NOT NULL))OR(HEX(rt1.c3))))OR(MIN(rt1.c3))) FROM t1, t0, vt0, rt1; -- 0ms;
SELECT ALL ((((rt1.c4) IS FALSE))-(((((vt0.c0)OR(rt0.c2)))OR(vt0.c0)))) FROM t1, t0, rt0, rt1;SELECT DISTINCT ((((((((((((rt0.c0)AND(t1.c69)))OR(0.3423562222532336)))OR(((((((((rt0.c3)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c3)))))AND(rt1.c3 COLLATE BINARY)))AND(((rt0.c3) ISNULL))))OR((~ (rt0.c1)))), SUM(CAST(t0.c0 AS REAL)) OVER (), MAX(rt0.c0) FROM t0, rt0 WHERE (((((0.33865986596634645) NOT BETWEEN ('P2') AND (x''))) NOT BETWEEN ('-954241950' COLLATE BINARY) AND ((((('1959929375')OR(NULL)))OR(0.48889168336965416)))));SELECT ((((((rt1.c3)<=(t1.c69)))OR(COALESCE(rt0.c4, rt1.c4))))AND(CASE WHEN NULL THEN rt1.c2 WHEN rt1.c4 THEN x'' WHEN '' THEN rt1.c2 ELSE rt0.c0 END)) FROM vt0, t0, rt1 WHERE (UNICODE(UNLIKELY('')));SELECT ABS(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt0.c4))) FROM rt0;SELECT ALL rt1.c0, COUNT(*), ((((t0.c0) NOTNULL)) NOT BETWEEN (((((rt0.c0)AND(t1.c69)))AND(rt1.c4))) AND (CASE WHEN -576848405 THEN rt1.c2 ELSE rt0.c0 END)) FROM rt1, rt0;SELECT DISTINCT ((vt0.c0)<(rt1.c4)) COLLATE NOCASE FROM rt1, vt0, rt0, t0 LIMIT 1000808192 OFFSET 860083892; -- 1ms;
SELECT SUM(x'0ac3') OVER () FROM rt0, t0, rt1, vt0, t1 WHERE (((0.19383158642088916 COLLATE BINARY)IS NOT(((NULL) IS FALSE)))) ORDER BY (+ (CAST(rt1.c0 AS INTEGER))) DESC  NULLS FIRST; -- 0ms;
SELECT rt1.c1 FROM t1, rt1 WHERE (CASE WHEN 0.4146947529330516 THEN CAST(NULL AS TEXT) ELSE NULL END); -- 0ms;
SELECT DISTINCT ((((rt1.c0)|(rt0.c4)))/(TYPEOF(rt1.c1))) FROM t0, t1, vt0, rt1 WHERE (CAST(((x'')|(0.21378756156221368)) AS BLOB));SELECT DISTINCT json_valid(((t0.c0)&(rt0.c1))) FROM rt1, t0, vt0, t1, rt0; -- 0ms;
SELECT DISTINCT (((((('1452506927')AND(rt1.c3)))OR(rt1.c0))) BETWEEN (((t0.c0) NOT BETWEEN (NULL) AND (rt1.c3))) AND (CASE WHEN rt1.c1 THEN rt0.c4 END)) FROM rt0;SELECT (((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c4 WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt1.c3 END))>=(('5~UOmz*_梦'))) FROM rt1 WHERE ((((((((NULL)) NOT BETWEEN (('')) AND (('pdt)Y&隍%'))))AND(((x'3de5')-(x'')))))AND(((0.25081947298189944) ISNULL)))) LIMIT -1002376450;SELECT ALL (+ (((t0.c0)<<(rt1.c4)))) FROM t0;SELECT (- (0.9309645513809999)), CAST(rt0.c1 AS INTEGER) COLLATE BINARY, CAST((rt1.c0 IN ()) AS TEXT) FROM t0, rt0, rt1, t1 WHERE ((((((~ (NULL)))AND(((('-1e500'))>=((0Xffffffffb6d38191))))))AND((x'' IN (''))))); -- 0ms;
SELECT '' FROM vt0, rt1, t0, rt0 WHERE (((((('<u') NOT BETWEEN ('954870824') AND (1005881673))))<((((NULL)LIKE(0.42310799139706445)))))); -- 0ms;
SELECT ((((rt0.c4)<=('K_'))) IS FALSE) FROM t1, rt1, rt0; -- 0ms;
SELECT CAST(rt0.c4 AS INTEGER) FROM rt1, t1, vt0 LIMIT 484320111 OFFSET 1444675936;SELECT DISTINCT ((((SUM(rt1.c3))AND(((t1.c69)==(rt0.c1)))))AND('!k')) FROM t0, rt0, t1, vt0 WHERE (((((((1704472727) ISNULL))AND(NULL COLLATE NOCASE)))AND(CAST(NULL AS REAL)))) LIMIT -1203510126 OFFSET 807479006;SELECT ((((((((CAST(rt0.c0 AS TEXT))AND((((t0.c0))>((rt1.c4))))))OR(vt0.c0)))OR(CASE WHEN t1.c69 THEN rt0.c3 ELSE rt0.c4 END)))OR(rt1.c2)) FROM t1 WHERE ((((x'e204')) NOT BETWEEN ((CAST(x'251f' AS TEXT))) AND ((CAST('' AS BLOB)))));SELECT DISTINCT (((t1.c69)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) COLLATE BINARY FROM vt0 INDEXED BY i47, t1, t0, rt0, rt1;SELECT LOWER(DISTINCT MIN(rt0.c4)) FROM t0 LIMIT -1227652719 OFFSET 997084845;SELECT DISTINCT CASE WHEN (NOT (rt1.c1)) THEN CAST(rt0.c1 AS REAL) END FROM vt0, rt0;SELECT DISTINCT COUNT(CAST(rt0.c4 AS REAL)), (~ ((- (t1.c69)))), LENGTH(rt0.c0 COLLATE BINARY) FROM t0;SELECT ALL GROUP_CONCAT(((rt0.c1)<<(rt0.c3)) COLLATE NOCASE), (((0x5adbbedd)) NOT BETWEEN ((((rt0.c2)|(rt0.c4)))) AND (((rt1.c1 IN ())))), (((((rt0.c2)OR(vt0.c0)))AND(rt1.c4)) IN ()) FROM vt0;SELECT DISTINCT t1.c69 FROM t0 LIMIT -1543360559;SELECT DISTINCT TRIM((rt0.c2 IN ())) FROM vt0, rt0, rt1, t0, t1 WHERE (CAST(((NULL)IS NOT('}Hl*')) AS INTEGER)) ORDER BY ((((t0.c0) NOTNULL)) BETWEEN (((rt0.c4) NOTNULL)) AND (rt1.c4)); -- 0ms;
SELECT DISTINCT ((SUM(rt0.c0)) IS TRUE) FROM rt0 NOT INDEXED, t0, t1; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)OR(rt1.c3)))OR(rt0.c0)))==((rt1.c3 IN (t1.c69)))) FROM rt0, t1, rt1 WHERE (CASE x''  WHEN CASE WHEN '-861147275' THEN 0xffffffffe2dfff42 WHEN '' THEN x'' WHEN x'be8a' THEN 0.6669801112112537 END THEN ((x'f8af') BETWEEN (5.79572742E8) AND (NULL)) ELSE (7.823844E8 IN ()) END); -- 0ms;
SELECT DISTINCT ((rt1.c2)!=(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) FROM vt0, rt1, rt0, t1 LIMIT 1333423643; -- 0ms;
SELECT DISTINCT COALESCE(GROUP_CONCAT(vt0.c0), TRIM(DISTINCT rt1.c3)) FROM t0, rt1, rt0, t1 WHERE (((('482657863', '1198060102', x'')) BETWEEN ((((-7.5986041E8)||(x'')), (((NULL)) BETWEEN ((NULL)) AND ((1242293885))), ('1169906335' IN ()))) AND ((CAST(0.2571812048267117 AS NUMERIC), (+ (NULL)), ((-1136751600)<<(1444675936))))));SELECT DISTINCT CASE rt0.c0  WHEN rt1.c4 THEN x'' END COLLATE RTRIM, rt1.c3, (- ('A,u_m!&g')) COLLATE BINARY FROM t1, t0, rt0, vt0, rt1 WHERE (CASE WHEN LENGTH(x'') THEN (((593418083, 0.10237441207304088, NULL))!=((x'7e83', 0.3192362919544629, '1452506927'))) WHEN (((0X74614e29, NULL, 0.9468011185853065))<((1186629610, 0.6928511694880862, 0.469275402135632))) THEN ((0.0034838311757063867) ISNULL) WHEN 0.5418583018007899 THEN '2097408970' ELSE (0.0835919462325675 IN ()) END) LIMIT 467647099; -- 0ms;
SELECT ALL (((rt1.c4, rt0.c0, t0.c0)) NOT BETWEEN ((t1.c69 COLLATE NOCASE, ((rt1.c3)-(NULL)), ((t0.c0) NOT BETWEEN (t1.c69) AND (rt0.c2)))) AND ((CAST(vt0.c0 AS NUMERIC), (- (t1.c69)), CASE WHEN rt1.c1 THEN 0.2216244292659909 ELSE rt1.c4 END))) FROM t0, vt0, t1 WHERE (CASE WHEN x'1a14' COLLATE BINARY THEN SQLITE_SOURCE_ID() END);SELECT (((rt0.c0)=(rt0.c2)) IN ()) FROM vt0, rt0 LIMIT 191207261; -- 0ms;
SELECT ((((rt1.c1)GLOB(0.41889474424160034)))=(t1.c69 COLLATE RTRIM)), CAST((vt0.c0 IN ()) AS NUMERIC), CAST(GROUP_CONCAT(t0.c0) AS NUMERIC) FROM t0, vt0, rt1, t1, rt0 WHERE (NULLIF(DISTINCT ((0.8645785185388339) NOT NULL), ((((x'')AND(NULL)))OR('-1627783127')))); -- 0ms;
SELECT (((rt0.c4, rt0.c4, vt0.c0)) NOT BETWEEN (((rt0.c3 IN ()), rt0.c2 COLLATE BINARY, ((rt1.c0) NOTNULL))) AND ((CASE WHEN NULL THEN rt0.c2 WHEN 0x71f8054e THEN rt0.c3 WHEN rt0.c4 THEN rt1.c1 ELSE rt1.c1 END, NULL, NULL))) FROM vt0, rt0 WHERE (((CASE 0.354288956646304  WHEN '-1402270859' THEN NULL ELSE x'' END)||((~ ('0.9398331138528695')))));SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY FROM vt0, rt1, rt0, t0 WHERE ((+ (x''))) LIMIT -1748998445 OFFSET -996846756; -- 0ms;
SELECT DISTINCT (+ (rt0.c2 COLLATE BINARY)), (('-1923161044') IS FALSE), json_remove(CASE WHEN rt0.c4 THEN rt1.c1 ELSE rt0.c0 END, vt0.c0 COLLATE BINARY) FROM rt0, t0, t1, vt0 WHERE (((((((((((NULL)OR(NULL)))AND('1105840799')))AND(NULL)))AND(0x74d2261f)))IS NOT((- (NULL))))) GROUP BY CAST(CAST(rt0.c2 AS TEXT) AS BLOB);SELECT ALL COUNT((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c4)))), CUME_DIST() OVER (), ((((MAX(rt1.c4))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c4)) FROM t0, rt1, rt0, vt0; -- 0ms;
SELECT ALL ((((((((rt1.c0)AND((((rt0.c3, t1.c69, rt1.c2))==((0.9339978533783247, rt0.c0, '-309806439'))))))OR(((t1.c69) NOTNULL))))OR(CASE rt1.c0  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c1 END)))AND(0.593814166915338)) FROM vt0, rt1 WHERE (x'');SELECT ALL CAST(((vt0.c0)*(t0.c0)) AS BLOB), '0.8280641948880335', CAST(((rt1.c4) NOT NULL) AS TEXT) FROM rt1, t1, rt0, vt0 WHERE (((0Xffffffffb4cb3fe0) BETWEEN ('''oFG0+ઍ') AND (x'a34a')) COLLATE RTRIM);SELECT ALL SUM(CAST(t1.c69 AS BLOB)) OVER (), ((((rt1.c2) IS TRUE)) NOTNULL), DENSE_RANK() OVER () FROM rt1, vt0, t1 WHERE ((((NOT (''))) BETWEEN (CASE NULL  WHEN x'' THEN '-204401843' ELSE 0.4612640655182312 END) AND (((((((((NULL)AND(0.9461535089698401)))AND('Y),돔1梦,ⶅ')))OR(0.4558270993199127)))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN ((+ (rt1.c1))) AND (CAST(rt0.c3 AS TEXT))) FROM vt0, rt0, rt1 WHERE (((CHANGES())<=(CAST('aZF]' AS REAL)))); -- 0ms;
SELECT ALL ((((t0.c0)OR(rt1.c4)))OR(rt1.c4)) COLLATE NOCASE FROM vt0, t0, t1, rt0 WHERE (0.5734239513987905);SELECT DISTINCT NULL FROM rt1, t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0) BETWEEN (rt1.c1) AND ('ObI'))) AND (((vt0.c0) BETWEEN (rt0.c4) AND (rt1.c0)))) DESC) FROM vt0, rt0, t1, rt1; -- 0ms;
SELECT ALL 0.05605783155068256 FROM t0, rt1 ORDER BY ''; -- 0ms;
SELECT CAST(((t0.c0)&(rt1.c1)) AS REAL) FROM vt0, t0;SELECT CASE CASE '1452506927'  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c4 END  WHEN (('')GLOB('482657863')) THEN ((0.38061260402449715)<(rt0.c4)) END FROM t0, rt1, t1, vt0, rt0 WHERE ((((((x'')) BETWEEN ((NULL)) AND ((0.3050773261200517))))<(NULL))); -- 0ms;
SELECT ALL (~ (CAST(rt1.c2 AS BLOB))), ((((rt1.c2)AND(((rt1.c2) NOTNULL))))AND(((((((((rt0.c4)OR(rt0.c1)))OR(vt0.c0)))OR(t1.c69)))AND(rt0.c4)))), ((((rt1.c0)-(rt1.c2))) IS FALSE) FROM t1, t0 WHERE ((((('1867920999') BETWEEN ('') AND ('1691619276')))%((((x'')) NOT BETWEEN ((x'00a6')) AND (('-674492188'))))));SELECT DISTINCT ((((((((((rt0.c0)AND(rt0.c3)))OR((1795301648 IN (t0.c0)))))OR(((t1.c69) ISNULL))))OR(LIKELIHOOD(DISTINCT rt1.c0, 0.042808913861393294))))AND(CAST(t0.c0 AS NUMERIC))), ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt1.c4)) COLLATE NOCASE, AVG(rt1.c2) OVER () FROM rt1, t0, rt0, vt0;SELECT DISTINCT AVG(TRIM('')) OVER () FROM t1; -- 0ms;
SELECT DISTINCT (- (CAST(rt1.c3 AS REAL))), ((rt1.c4)AND((0.07992880201956465 IN (t1.c69)))), COUNT(*) OVER (), ((STRFTIME(t1.c69, t1.c69, rt0.c1)) NOT NULL), rt1.c2 FROM t1, rt1 WHERE (TRIM(DISTINCT ((x'')GLOB(0.744360890570369)), ((NULL) NOTNULL)));SELECT DISTINCT MAX(((0.1705774629993132) NOT NULL)) FROM rt0, t0 WHERE (((((((1232222294))>((0X9ba59ac))), UPPER('1772136556'), TYPEOF(DISTINCT 0Xfffffffff88c69e9), CAST(0.3664425725728868 AS TEXT), (((NULL)) NOT BETWEEN ((x'c8a6')) AND ((0x55f2638f)))))<=(((~ (0x69d454f5)), (- ('-1215541160')), '', (('ኀ''')<>(NULL)), ((0.3146690225144586)-(0x460cbf2e)))))); -- 0ms;
SELECT DISTINCT ((((((((rt0.c3)AND(NULL)))AND(rt1.c2)))AND(rt1.c2)))AND(t0.c0)) COLLATE NOCASE, vt0.c0, json_patch((((('i^0?%')OR(rt0.c3)))AND(rt1.c0)), NULL), NTH_VALUE(((vt0.c0) BETWEEN (CAST(t0.c0 AS TEXT)) AND ((t0.c0 IN ()))), ((CASE WHEN vt0.c0 THEN vt0.c0 END)<<(CAST(vt0.c0 AS TEXT)))) OVER (), ((((vt0.c0)-(t0.c0)))=(((((t1.c69)OR(rt1.c4)))AND(rt1.c4)))) FROM vt0, t0;SELECT DISTINCT rt1.c3 FROM t0, rt0, t1 WHERE ('qL8');SELECT DISTINCT rt1.c2 FROM vt0 CROSS JOIN t0 ON ((CAST(rt1.c2 AS BLOB))&((('')OR(rt0.c1)))) WHERE ((((('CB') NOT BETWEEN ('CB') AND (NULL))) NOTNULL)) ORDER BY ((x'')IS(rt1.c4)) COLLATE BINARY ASC  NULLS LAST;SELECT (- (rt1.c1)) COLLATE NOCASE, CASE WHEN CASE WHEN '-864668056' THEN rt1.c3 END THEN ((('0.15770634707435371')) NOT BETWEEN ((rt0.c4)) AND ((rt1.c0))) ELSE rt1.c4 COLLATE RTRIM END, ((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c3)))!=(t0.c0 COLLATE NOCASE)) FROM vt0, t0;SELECT ALL CAST(CAST(rt1.c4 AS REAL) AS REAL) FROM rt0, t0, rt1, t1; -- 0ms;
SELECT CASE (rt0.c1 IN ())  WHEN ((t0.c0)*(rt0.c2)) THEN (rt0.c3 IN (rt1.c2)) WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)) THEN CASE t0.c0  WHEN rt0.c0 THEN t0.c0 END WHEN ((rt1.c2) IS TRUE) THEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (~ (rt0.c1)) END FROM rt1, t1 NOT INDEXED;SELECT ALL ((rt0.c0)>>(0Xffffffffc8ea7b0e)) COLLATE BINARY, rt1.c4, ((((rt1.c0)<<(rt0.c1)))>(COUNT(*))) FROM t1 WHERE (CASE WHEN CAST('u)ur~\[' AS INTEGER) THEN (+ ('855113080')) WHEN NULL COLLATE NOCASE THEN ((-2.82313059E8) NOT BETWEEN (x'') AND (0Xffffffffc65d3ddf)) WHEN UPPER('') THEN (('9979084') BETWEEN (x'') AND (NULL)) ELSE (('1625050815') IS TRUE) END) GROUP BY rt1.c3 COLLATE RTRIM HAVING (~ (((rt0.c2)*(rt0.c1))));SELECT DISTINCT (((((((rt0.c1)AND(rt0.c1)))AND(t0.c0)), (NOT (rt1.c4)), ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c1))))>=((((rt0.c4)AND(rt1.c4)), CAST(rt0.c1 AS INTEGER), ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))), rt0.c2, (((t0.c0 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(rt1.c1 AS INTEGER))) FROM vt0, rt0, rt1 WHERE (((((((NULL)AND(x'')))AND('98558535')))/(('-576848405' IN ())))) ORDER BY '348426103' COLLATE RTRIM DESC LIMIT 1632384376;SELECT (((((t0.c0)) BETWEEN ((rt1.c4)) AND ((rt0.c0)))) ISNULL), ((IFNULL(DISTINCT rt0.c4, vt0.c0)) NOT BETWEEN (t1.c69) AND ((NULL IN (vt0.c0)))), CAST(CASE WHEN rt1.c0 THEN rt1.c4 ELSE rt0.c1 END AS BLOB) FROM rt1, vt0 WHERE (((CASE WHEN '1M' THEN '-366247412' END)>=(NULL COLLATE RTRIM)));SELECT ALL AVG(-763927415) OVER (), COUNT(*), (((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE BINARY FROM t0;SELECT ((((t1.c69)OR(vt0.c0))) NOT BETWEEN ((NOT (rt1.c0))) AND ((((rt0.c0))>=((rt0.c3))))), ((rt0.c1)GLOB((~ (rt0.c0)))), (('-412513787') BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE BINARY FROM t0, t1, vt0;SELECT DISTINCT json(((vt0.c0)<<(t0.c0))) FROM rt0, vt0 INNER JOIN t0 ON (CAST(rt0.c0 AS INTEGER) IN ((~ (rt0.c2)))) WHERE (CAST(NULL AS INTEGER) COLLATE NOCASE); -- 0ms;
SELECT ALL rt0.c4, (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))))|((0.8784361610718885 IN (rt0.c3)))), ((GROUP_CONCAT(rt0.c0)) IS FALSE) FROM vt0, rt0, t1, t0, rt1 WHERE ('-674492188'); -- 0ms;
SELECT DISTINCT CASE WHEN ((((rt1.c3)OR(rt0.c1)))OR(rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE CAST(t0.c0 AS BLOB) END, (((vt0.c0))<((((t1.c69) BETWEEN (t0.c0) AND (rt1.c2))))), t0.c0 FROM t0, rt1, rt0, vt0 WHERE ((('')LIKE(((((x'')OR(x'')))OR(x'')))));SELECT DISTINCT CAST('97222879' AS BLOB) FROM vt0, t0, t1; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN vt0.c0 END) NOTNULL), NTH_VALUE((~ (LIKELY(rt0.c2))), CAST(CASE rt1.c1  WHEN rt0.c0 THEN x'' ELSE vt0.c0 END AS REAL)) OVER (), (((rt1.c0 COLLATE BINARY))<=((rt0.c4))) FROM t0, t1, vt0, rt1, rt0; -- 1ms;
SELECT (NOT (rt1.c0)) COLLATE NOCASE, CASE WHEN '1050772201' THEN CAST(t0.c0 AS INTEGER) WHEN rt1.c4 COLLATE NOCASE THEN ((((0.3821454050518155)AND('482657863')))OR(rt0.c2)) WHEN json_quote(rt0.c3) THEN CASE WHEN rt1.c4 THEN rt0.c3 ELSE t1.c69 END ELSE ((-1992258529)LIKE(t0.c0)) END, MIN(t1.c69) FROM vt0, t1 WHERE (CASE WHEN CASE WHEN NULL THEN x'' WHEN x'beaf' THEN '' WHEN 0X171448a4 THEN 'P2' END THEN (NULL IN (NULL, 1262796352)) ELSE ((((x'4b7d')AND(0.8397381639924995)))OR('-1696781132')) END);SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((((((((((((((0xffffffffe247ab28)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c3)))AND(rt1.c2)))OR(vt0.c0)))) AND ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) FROM t0, rt0, t1 WHERE (CAST((((0.2908661244929872, 0.070243371227114, 0.44103778296136253)) NOT BETWEEN ((0.6764806710403501, NULL, '590225190')) AND ((x'', NULL, 'bnu)/<'))) AS NUMERIC));SELECT COUNT(*) OVER ( PARTITION BY t0.c0, (((rt1.c1 IN (rt0.c1)))&((- (t1.c69)))) ORDER BY CAST(rt1.c4 COLLATE RTRIM AS INTEGER)  NULLS FIRST) FROM rt0, t1, t0;SELECT DISTINCT (- ('')), (((rt0.c3, rt0.c4, t0.c0)) NOT BETWEEN ((((x'') NOTNULL), COUNT(rt1.c1), (+ (rt1.c1)))) AND ((CASE WHEN vt0.c0 THEN rt1.c2 WHEN t1.c69 THEN rt1.c1 WHEN vt0.c0 THEN rt0.c4 END, CAST(rt0.c0 AS TEXT), ((rt0.c2) ISNULL)))), (((vt0.c0) NOT NULL) IN ()) FROM t1, vt0, t0, rt1, rt0 WHERE (((((((((((x'')OR(NULL)))OR(((0.9473679155679854)<>('A0A~(Hi蓨')))))OR((NOT (NULL)))))AND(((0.2965117087560497)<>(NULL)))))AND(((x'')LIKE(x'f16f'))))); -- 0ms;
SELECT DISTINCT ((((rt1.c2)<<(t0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt0.c2 END) AND (rt1.c4)) FROM rt1, vt0, t1, t0, rt0 WHERE (MAX(((0.6915475601140558) IS FALSE), ((x'ab27') IS TRUE), ((NULL)>=(0.19219295606599474)), CAST('-1315856000' AS NUMERIC), (x'' IN ()), ((x'')GLOB(0.16687086226375347)))) ORDER BY (((((rt0.c2) ISNULL)))>(((rt0.c2 IN (0.4248385075839326))))) DESC  NULLS FIRST, RTRIM(CASE WHEN 0.10647194332803711 THEN rt0.c4 WHEN rt1.c4 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN t1.c69 END)  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((rt0.c4 IN (rt1.c0)) IN ()) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((rt1.c3 COLLATE RTRIM)IS(CASE WHEN -958935187 THEN rt0.c3 END));SELECT DISTINCT rt0.c1, CAST(rt0.c0 AS TEXT) COLLATE BINARY, (((NOT (rt1.c0))) NOT BETWEEN (CAST(rt0.c4 AS REAL)) AND (NULL)) FROM vt0;SELECT DISTINCT CASE WHEN ((rt0.c4) ISNULL) THEN (((rt1.c3))>((rt1.c0))) END FROM rt0, rt1, vt0, t0 NOT INDEXED WHERE (x''); -- 0ms;
SELECT ((((rt1.c1)<=(rt0.c2))) BETWEEN (((rt0.c4)|(x'3770'))) AND (TOTAL(NULL))) FROM rt1, vt0, t1 WHERE (((('m' IN ()))%(((0.8263911886089629)OR(NULL)))));SELECT DISTINCT LAG(((CAST(NULL AS TEXT)) NOTNULL), rt0.c3 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE, ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END)LIKE(((vt0.c0)IS NOT(t0.c0))))) OVER ( GROUPS BETWEEN CAST(((rt0.c3)>=(t1.c69)) AS REAL) PRECEDING AND TRIM(CAST(rt1.c2 AS INTEGER), ((rt0.c1)<>(rt1.c1))) FOLLOWING) FROM t0, vt0, t1, rt0 WHERE ((((+ (0.1405136707592275))) NOT BETWEEN (((((0X34f5daa8)OR(0x3b631e64)))OR(0.19468778157865463))) AND ('r	+zU'))); -- 0ms;
SELECT (TOTAL(0.20595335075921395) IN ()), rt1.c2, (((t0.c0, COALESCE(rt0.c3, t0.c0, rt0.c4, rt1.c4, rt0.c2, rt0.c3), (+ (vt0.c0))))<=((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.9196236036029009 END, (((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((t1.c69))), ((vt0.c0) IS FALSE)))), CASE WHEN ((rt0.c4)<(vt0.c0)) THEN (rt0.c4 IN ()) END, CASE (- (rt1.c0))  WHEN rt0.c3 COLLATE RTRIM THEN (((rt0.c0, rt0.c1, rt1.c0))=((vt0.c0, rt1.c1, rt1.c0))) WHEN ((rt1.c4)>=(vt0.c0)) THEN CAST(rt0.c4 AS TEXT) WHEN vt0.c0 THEN (- (rt1.c0)) END FROM rt1, vt0, t0, rt0, t1; -- 0ms;
SELECT ALL (((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c3))) COLLATE NOCASE FROM rt1, t0, vt0 GROUP BY 'qL35gE>F', ((((((((((0.7725837206348577)AND(rt1.c3)))OR(rt1.c0)))AND(t1.c69)))AND(vt0.c0)))%(((((((((((((rt1.c2)AND(vt0.c0)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)))OR(t1.c69)))OR(t1.c69)))), CAST(((rt1.c4)/(rt1.c1)) AS TEXT) HAVING MAX(((((rt0.c4)OR(rt1.c4)))OR(vt0.c0)));SELECT DISTINCT CASE ((rt1.c1) ISNULL)  WHEN x'' THEN CAST(rt0.c1 AS TEXT) ELSE GROUP_CONCAT(rt1.c3) END FROM rt1, vt0 WHERE (((0.6445966844821637)LIKE(0.3048890275215067)) COLLATE NOCASE);SELECT ALL (((((((((('')OR(rt1.c3)))OR(rt0.c3)))AND(t0.c0)))AND(rt0.c0))) IS FALSE) FROM vt0, rt0, t0 LIMIT 78494554;SELECT (NOT (((rt1.c3)>(rt1.c4)))) FROM t0, rt1; -- 0ms;
SELECT ALL (- (COALESCE(DISTINCT rt0.c2, vt0.c0, rt0.c1, rt0.c0))) FROM rt1, t0;SELECT CASE WHEN CASE WHEN rt1.c3 THEN rt1.c2 END THEN (((rt1.c0))<>((rt1.c3))) ELSE CASE WHEN rt0.c1 THEN x'' WHEN NULL THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END END, GROUP_CONCAT(x'') OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP), ((vt0.c0)AND(((((rt0.c0)AND(rt0.c2)))OR(rt1.c1)))), ((CAST(rt0.c2 AS REAL)) NOTNULL), CAST(t0.c0 AS TEXT) FROM rt1, rt0, t0 WHERE ((NOT ((+ ('(ac力(㙨iK'))))) ORDER BY CASE WHEN CAST(rt0.c1 AS TEXT) THEN rt1.c1 END ASC LIMIT -207265651;SELECT DISTINCT ((rt0.c3 COLLATE BINARY) NOTNULL) FROM rt0, t0, rt1, vt0; -- 0ms;
SELECT ALL COUNT(CASE rt1.c2  WHEN rt0.c3 THEN rt1.c4 ELSE rt0.c2 END) OVER () FROM t0, rt1;SELECT DISTINCT ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN 0.6372537279114061 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt1.c1 THEN t0.c0 END) ISNULL) FROM rt1, rt0 ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt0.c3 END) BETWEEN (((rt0.c1) ISNULL)) AND (PRINTF(rt1.c1, t1.c69, rt0.c1))) ASC;SELECT ALL NULL, COUNT(*) OVER (), ((NOT (t0.c0)) IN ()) FROM t1, rt1, t0, rt0; -- 1ms;
SELECT DISTINCT ((((((rt0.c0) NOTNULL))AND((((rt0.c3))==((x'fb9a'))))))AND(((((rt1.c0)AND(rt0.c0)))OR(rt0.c2)))), AVG(CAST(rt1.c1 AS BLOB)) OVER ( ORDER BY (((RTRIM(rt0.c0)))>(('1444675936'))) ASC  NULLS FIRST), COUNT(*) OVER () FROM vt0, rt0, rt1 WHERE ((- (((((0xffffffffe965d396)OR(0.11071494343769184)))OR('sfN7'))))); -- 0ms;
SELECT ALL (((t1.c69)) BETWEEN ((((t0.c0) IS TRUE))) AND (((((rt1.c4, rt0.c3, rt1.c2, rt0.c0, rt0.c1))==((rt0.c1, rt1.c4, rt1.c3, rt0.c2, rt1.c2)))))), ((rt1.c3 COLLATE RTRIM)AND(GROUP_CONCAT(rt0.c3))), ((((((t0.c0)%(rt0.c4)))AND('736874340')))AND(((rt0.c4) NOT NULL))) FROM rt1, vt0;SELECT ALL TOTAL(CAST(rt1.c2 AS REAL)) FILTER(WHERE (- (SQLITE_SOURCE_ID()))) OVER ( ROWS ((CASE WHEN rt0.c2 THEN x'' END)<>(SUBSTR(rt0.c4, rt0.c1))) PRECEDING) FROM rt0, vt0, t0, rt1, t1 WHERE (CASE WHEN NULL THEN ((x'0948') BETWEEN (NULL) AND ('!QZ\r㸰')) WHEN NULL COLLATE BINARY THEN (((0.15150427313132042)) BETWEEN ((1141445170)) AND (('{}'))) WHEN (('674961664')<(0X4b0410da)) THEN (('0.06754391604649046') IS FALSE) WHEN (((('')AND(NULL)))OR(-1.81576425E9)) THEN (0.5975519507083521 IN ()) WHEN ((0X7674921b)<=('-780523336')) THEN (('1417316322')||('')) ELSE ((0.4580816081863899) IS FALSE) END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c0)==(rt0.c1))), 0.05593627636657961, NULL FROM rt1, vt0, t0 WHERE (((NOT (x'')) IN ((('-861147275')/(x'')))));SELECT AVG(((rt1.c1)/(rt0.c1))) OVER () FROM rt0, t1, vt0, rt1, t0 WHERE (CAST(((NULL)AND('-1820202197')) AS INTEGER)); -- 0ms;
SELECT DISTINCT (t1.c69 IN ()) FROM t1, rt1, rt0, t0; -- 0ms;
SELECT ALL ABS(DISTINCT rt1.c2) COLLATE BINARY FROM rt1, vt0, t0, rt0 WHERE ((((- ('+<o\r')))AND(((((((((x'5e90')OR(NULL)))OR(x'')))AND(0.10317006852270394)))AND(NULL))))); -- 0ms;
SELECT ALL (MAX(vt0.c0) IN (CASE WHEN rt1.c4 THEN vt0.c0 END)) FROM rt1, t1, t0, vt0, rt0 GROUP BY (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) IS TRUE) HAVING ((rt1.c4) BETWEEN (t1.c69) AND (rt1.c3)) COLLATE BINARY; -- 0ms;
SELECT ALL (+ ((t1.c69 IN ()))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((rt1.c2) NOT BETWEEN (0.8649232501591024) AND (rt1.c2)), ((((vt0.c0)AND(rt1.c3)))AND(0.5902567669347499)), rt0.c0 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt1.c1, 0.9868049092268143)), (((~ (rt1.c1))) IS TRUE), ((((((((CASE rt0.c3  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)AND(rt0.c3 COLLATE NOCASE)))AND(((rt1.c4)IS NOT(rt0.c3)))))AND((NOT (t1.c69)))))OR(((rt1.c3)>=(rt0.c3)))) FROM t1, rt0 WHERE ('2097408970') ORDER BY ((vt0.c0)<=(((t0.c0) BETWEEN (rt1.c0) AND (t1.c69)))) ASC  NULLS LAST;SELECT DISTINCT t0.c0 FROM rt1, t1 WHERE ((((((('98558535')OR(1849344659)))OR(x''))) NOTNULL));SELECT DISTINCT (((rt0.c1 IN (rt1.c3)))LIKE('-591302953')) FROM rt1, t1, rt0, vt0; -- 0ms;
SELECT ALL ((((((x'')AND(rt1.c1)))AND(((rt1.c3) ISNULL))))OR(rt1.c1 COLLATE NOCASE)), COUNT(*) OVER (), (((- (rt1.c3)))*(((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c3)))) FROM vt0, rt0, rt1, t1 WHERE ((((NULL)) NOT BETWEEN ((((996351588) BETWEEN ('-1181412225') AND (NULL)))) AND ((((NULL) IS TRUE))))) LIMIT 782384400 OFFSET -1136234069; -- 0ms;
SELECT (((rt0.c1 IN (t0.c0, rt0.c2)))-(((rt0.c0) NOT NULL))) FROM t1;SELECT DISTINCT (((((rt1.c4)==(rt1.c4))))>=((0.9216305254483645))) FROM vt0, t0 NOT INDEXED, t1 INDEXED BY i47, rt0;SELECT DISTINCT UPPER(DISTINCT TOTAL(rt0.c2)), ((CAST(vt0.c0 AS NUMERIC))>=((~ (rt0.c4)))), AVG(((((rt1.c3)AND('1948304255')))AND(rt0.c3))) FROM vt0, t1, rt0, t0, rt1; -- 0ms;
SELECT ALL CAST(rt1.c1 AS BLOB) FROM vt0, t0, rt1, t1, rt0; -- 0ms;
SELECT ALL AVG(((rt1.c0)-('Kpw(苬谱'))) COLLATE RTRIM, (((t1.c69)) NOT BETWEEN ((NULL)) AND ((((((rt0.c4)OR(rt1.c0)))OR(0Xffffffffcc763668))))), json(((vt0.c0)>=(rt0.c2))) FROM vt0, t0, t1, rt1, rt0; -- 0ms;
SELECT ALL LAG(json_object(((vt0.c0)<<(rt0.c4)), (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((t1.c69)))), (((((rt1.c1))<=((rt0.c3))))|(rt0.c0 COLLATE RTRIM)), CAST(((rt0.c2)>=(rt1.c2)) AS BLOB)) OVER (), CAST(CAST(rt0.c0 AS TEXT) AS BLOB), ((((rt0.c4, rt1.c3, rt1.c3, rt1.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, t1.c69, rt0.c2, t0.c0, rt1.c0)) AND ((x'', rt0.c0, rt0.c0, t1.c69, x''))) IN ()) FROM rt0, t1, rt1, vt0; -- 0ms;
SELECT ALL (~ (ABS(DISTINCT t1.c69))) FROM t0, rt0, rt1 LIMIT 2071854621;SELECT CAST(rt1.c4 AS INTEGER) FROM t1, vt0, rt0, rt1 GROUP BY (((((((rt0.c1)) BETWEEN ((rt1.c4)) AND ((t0.c0))))OR(CASE rt1.c0  WHEN rt0.c4 THEN rt1.c4 ELSE t1.c69 END)))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4)))), rt0.c1, x'9c77', x'', CASE CAST(rt0.c1 AS TEXT)  WHEN rt0.c4 COLLATE RTRIM THEN ((rt1.c3) IS TRUE) END ORDER BY ((((rt0.c1) NOTNULL))IS NOT(t1.c69 COLLATE NOCASE)) DESC;SELECT DISTINCT (((((vt0.c0)||(rt1.c2))))<=((rt0.c4))) FROM rt0, rt1 CROSS JOIN vt0 ON (((((vt0.c0))=((rt1.c3))))<=(CASE WHEN 0.5895453868469167 THEN rt1.c3 WHEN t1.c69 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c2 END)) WHERE (CASE WHEN '-1369597159' THEN 'n騢Y*eLj' ELSE 1004259893 END COLLATE RTRIM);SELECT ALL RANK() OVER ( GROUPS  CURRENT ROW) FROM t1, vt0 WHERE (((((NULL) IS TRUE))|('0.8949418932737503'))); -- 0ms;
SELECT DISTINCT CASE (rt0.c0 IN ())  WHEN (NOT (rt0.c3)) THEN t1.c69 WHEN rt0.c2 COLLATE BINARY THEN (((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN (('1936695556')GLOB(t0.c0)) THEN CAST(rt1.c2 AS BLOB) ELSE (('')<(rt1.c3)) END FROM t1 CROSS JOIN rt0 ON (((NOT (x'')))>(CAST(rt1.c0 AS BLOB))) FULL OUTER JOIN t0 ON ((((((rt1.c3)) BETWEEN ((t0.c0)) AND ((rt1.c2))), ((rt1.c2)LIKE(rt1.c4)), INSTR(t1.c69, rt1.c4), CASE rt1.c0  WHEN rt0.c3 THEN rt1.c3 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c0 THEN rt1.c1 ELSE rt0.c1 END, ((rt1.c3) BETWEEN (rt0.c0) AND (rt1.c2))))=(((~ (rt0.c1)), ((t1.c69)&(rt0.c3)), ((rt1.c2) NOT NULL), ((((rt0.c3)OR(t0.c0)))OR(vt0.c0)), LIKELIHOOD(rt1.c0, 0.31759287629138433)))) CROSS JOIN rt1 ON vt0.c0 GROUP BY LIKELIHOOD(CAST(vt0.c0 AS BLOB), 0.5467413471107103), (('-1688169898')GLOB(rt0.c2)), ((CAST(rt0.c3 AS INTEGER)) ISNULL) HAVING ((t1.c69 COLLATE BINARY) NOT BETWEEN (t1.c69 COLLATE RTRIM) AND (CAST(rt0.c2 AS REAL)));SELECT ((SUM(rt1.c3))-((rt1.c4 IN ()))) FROM t0, rt1, vt0, rt0, t1 WHERE (CASE NULL  WHEN (~ (NULL)) THEN '-412513787' END); -- 0ms;
SELECT DISTINCT (((rt1.c4 IN ())) BETWEEN (rt0.c2 COLLATE NOCASE) AND ('1845627229')) FROM rt1;SELECT DISTINCT ((((NULL)OR(rt1.c0)))AND(((rt1.c0) NOT BETWEEN (x'2c5be91b') AND (t0.c0)))), ((((0xffffffff8a198483) NOTNULL)) ISNULL), ((CAST(vt0.c0 AS BLOB))>(t1.c69 COLLATE BINARY)), CASE WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END WHEN CAST(t1.c69 AS REAL) THEN rt1.c0 COLLATE BINARY WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt1.c3)) THEN ((NULL)<<(rt0.c2)) ELSE ((rt0.c4)*(rt1.c3)) END, NULL FROM vt0, t0;SELECT DISTINCT CAST((rt1.c0 IN (rt1.c0)) AS REAL), (((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(vt0.c0)))AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c4)))) AND ((-1669054540))), (((HEX(DISTINCT rt1.c4)))>=(((((x'')) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))))) FROM vt0, t0;SELECT ALL ((NULL COLLATE BINARY) BETWEEN (((rt1.c3)*(rt1.c2))) AND ((~ (rt1.c2)))) FROM t0, t1, rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT 0x41b832cd FROM t0, rt0, vt0 WHERE (NULL) GROUP BY NULLIF((rt1.c1 IN ()), ((rt1.c1)IS NOT(rt1.c2))), (((((rt1.c3 IN ()))AND(CASE WHEN rt1.c1 THEN x'' ELSE t0.c0 END)))OR(((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)))), (- (((rt0.c2) IS TRUE))), (((((t1.c69) IS TRUE)))<=((((x'') NOTNULL)))), ((vt0.c0 COLLATE RTRIM)<(((rt0.c2)||(rt0.c2)))), CAST(rt0.c1 COLLATE NOCASE AS NUMERIC), (403282079 IN ((x'' IN ())));SELECT ALL COUNT((+ (rt1.c3))) OVER ( GROUPS  CURRENT ROW) FROM rt0 WHERE (NULLIF(DISTINCT (((NULL)) NOT BETWEEN ((x'8109')) AND ((NULL))), (~ (x'11e1'))));SELECT SUM(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c3 END), 0Xffffffffb4c68106, ((((rt0.c4 IN (rt0.c4, rt1.c4)), rt0.c3, NULLIF(rt0.c4, rt1.c1)))!=((((((rt0.c4)OR(rt0.c0)))OR(rt1.c0)), (((rt1.c2)) BETWEEN ((t1.c69)) AND ((t1.c69))), ((rt1.c3) IS FALSE)))) FROM t1 NOT INDEXED, rt0 WHERE (((((CASE WHEN x'a89c99fe' THEN 0.25260501093448673 ELSE x'143a' END)OR(CASE WHEN x'488561c4' THEN -5.91302953E8 END)))OR(CAST('-1093458507' AS TEXT))));SELECT DISTINCT ((((-591302953)AND(QUOTE(t1.c69))))OR(((((((((rt0.c3)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt0.c0)))), COUNT(*) OVER (), LIKE(((rt1.c0)&(rt1.c1)), (('dPQu<iHi')||(vt0.c0))) FROM rt0, t0 INDEXED BY i62, t1;SELECT ALL AVG(rt1.c3) OVER (), ABS((- (t0.c0))), (((rt0.c1 COLLATE NOCASE, ((('}Hl*', t1.c69, rt0.c0)) NOT BETWEEN ((rt1.c4, t1.c69, rt1.c2)) AND ((rt0.c4, rt1.c3, rt0.c0))), (NOT ('0.6809432179072341'))))<((rt0.c0, LTRIM(rt0.c0, rt1.c1), ((t1.c69) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) FROM rt0, t1, vt0;SELECT MAX(AVG(((rt0.c2) NOTNULL))) FROM t0, rt0, rt1 LIMIT -1392849278 OFFSET -273434599;SELECT ((((rt0.c0)!=(rt0.c1)))<(CASE rt1.c3  WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c1 END)) FROM vt0, t1, t0 WHERE (CHANGES()) GROUP BY (NOT (((rt1.c3)>(vt0.c0)))) HAVING (- (rt1.c1 COLLATE RTRIM));SELECT (((rt1.c4, 0.8280641948880335, rt0.c0, t0.c0, t1.c69)) BETWEEN ((rt1.c4 COLLATE NOCASE, ((0.7055356381279475) IS TRUE), ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)), (- (rt0.c1)), CASE WHEN rt1.c2 THEN rt1.c1 END)) AND ((NULL, ((vt0.c0) NOT BETWEEN (0.12572959455886668) AND ('0.4621601638616962')), ((((((((rt1.c4)OR(rt1.c4)))OR(rt1.c1)))AND('')))AND(rt1.c3)), t1.c69, rt1.c3 COLLATE BINARY))), NTILE(((((rt1.c1))>=((rt0.c2))) IN ())) OVER (), GROUP_CONCAT(IFNULL(rt1.c3, rt1.c0)) FROM vt0, rt0, t1, t0, rt1 WHERE (((CASE WHEN x'be79' THEN '1922464117' WHEN '2134296991' THEN NULL WHEN x'6e16' THEN '0.42310799139706445' END)AND((('>BW_1Q騢PV') BETWEEN (x'') AND ('0.48889168336965416')))));SELECT DISTINCT ((((((((((((CAST(rt0.c1 AS INTEGER))AND(((t0.c0) NOT BETWEEN (rt0.c4) AND (t1.c69)))))OR(rt0.c4 COLLATE RTRIM)))OR(COUNT(rt0.c3))))OR(((rt0.c3) NOTNULL))))AND((rt1.c4 IN ()))))AND(MIN(rt1.c0))) FROM rt1, t0, rt0 WHERE ((((x''))>=((CASE 0x1759a22  WHEN 0.5172242396786252 THEN 'qL35gE>F' ELSE NULL END)))); -- 1ms;
SELECT DISTINCT TOTAL(AVG((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))) FROM vt0, t1, rt0, rt1, t0;SELECT 0x3f9cd6b8 FROM rt0, t0, t1; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT ((rt0.c0) NOT NULL), 0.6670869691224385) FROM rt0, t0, t1, vt0, rt1 WHERE (((CASE x'36a0'  WHEN 1e500 THEN 'HI0' ELSE NULL END)GLOB(((((0X5212804f)AND(x'')))AND(x''))))) UNION ALL SELECT DISTINCT CAST(0.3315165263392402 AS BLOB) FROM rt1, vt0, t1, t0; -- 0ms;
SELECT DISTINCT (t1.c69 COLLATE BINARY IN ()) FROM rt0, rt1, t1 WHERE (((((((NULL) ISNULL))OR((('') BETWEEN (NULL) AND ('-759860410')))))AND((~ (0Xe778b1))))) GROUP BY rt0.c4 HAVING CASE WHEN ((rt0.c0)+(rt0.c1)) THEN (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c4))) WHEN 0.7178682190266497 COLLATE RTRIM THEN ((rt0.c0) NOT BETWEEN ('') AND (t1.c69)) WHEN ((('-1227652719'))=((rt0.c2))) THEN (rt0.c3 IN ()) END; -- 0ms;
SELECT CASE CASE rt1.c0  WHEN rt1.c1 THEN rt0.c1 ELSE t1.c69 END  WHEN ((rt0.c3)IS(rt0.c1)) THEN CAST(x'' AS INTEGER) END, '螖w', 'cb' FROM vt0, rt0, t0 WHERE (NULL);SELECT ALL (((rt1.c1)) BETWEEN (('')) AND ((rt1.c3))) FROM rt0 WHERE (((731250807 COLLATE RTRIM) NOT NULL)) LIMIT 1400852518;SELECT ((((((rt0.c4)AND(t1.c69)))AND(rt1.c2)))&(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c4)))) FROM rt0 WHERE ((NOT (CAST('' AS NUMERIC))));SELECT DISTINCT (TRIM(DISTINCT rt0.c1) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT ((((rt1.c1) ISNULL)) IS FALSE) FROM t1, rt1, rt0, vt0, t0; -- 0ms;
SELECT DISTINCT UPPER(((rt1.c3)<=(rt1.c0))) FROM t1 LEFT OUTER JOIN rt1 ON ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) IN ()) WHERE (((((x'' IN (x'427f', '996351588'))))<=(((((NULL, '-1477331093', '-247970866'))==(('s	*\n', NULL, NULL))))))) LIMIT -1056325554; -- 1ms;
SELECT ALL TYPEOF(DISTINCT ((rt1.c2) BETWEEN (rt0.c3) AND (rt1.c0))) FROM vt0, t1, rt0 NOT INDEXED, rt1, t0; -- 0ms;
SELECT ABS((NOT (t1.c69))), CAST(((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c3)) AS REAL), (((((('Z^')&(rt1.c1)))OR(((rt1.c2)AND(t0.c0)))))OR(((t0.c0)GLOB(rt0.c2)))) FROM t0, rt1;SELECT DISTINCT IFNULL(DISTINCT CASE rt0.c4  WHEN NULL THEN rt0.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c4 END, ((rt0.c3) IS FALSE)), (NOT ((((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((t1.c69))))), CASE ((((rt1.c4)AND('569600636')))AND(rt0.c2))  WHEN CAST(rt1.c4 AS NUMERIC) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c3 END END FROM rt1, t0 WHERE ((((x'')) NOT BETWEEN (((((0.21927774043929282))!=(('832041030'))))) AND (((((-591066978, '97222879', 'i/'))<(('0.9702706365436358', 0.4253981754722138, '1i*EM')))))));SELECT ALL ((((rt0.c2)/(rt0.c3)))>=(CASE WHEN rt0.c2 THEN t1.c69 ELSE NULL END)), (((((NOT (rt1.c3)))AND(rt1.c3 COLLATE RTRIM)))AND(((t1.c69) NOT BETWEEN (rt0.c2) AND (rt1.c1)))), ((rt1.c1)IS(rt1.c2)) COLLATE NOCASE FROM vt0, rt0, t0 NOT INDEXED, t1;SELECT ALL ((((((rt0.c2)OR(rt0.c3)))AND(rt1.c2))) NOTNULL), rt1.c3, CASE WHEN ((rt0.c1) IS TRUE) THEN IFNULL(rt1.c0, rt0.c4) END FROM rt1, t1 WHERE (CASE CASE '-174187235'  WHEN 7.8494554E7 THEN NULL ELSE NULL END  WHEN ((((((((1)AND(0.6441321981721218)))OR('996351588')))AND(NULL)))OR(0xffffffffe13dc436)) THEN ((1.7976931348623157E308) BETWEEN (1734497318) AND (0X0)) WHEN ((x'f74c') BETWEEN (NULL) AND (0.9235090046259339)) THEN (('m?i50䝙') NOT BETWEEN (NULL) AND (0x1b8d3f65)) WHEN ((0.16238970878797865)<<(0Xffffffffbca3c036)) THEN CAST(NULL AS NUMERIC) ELSE ((x'd61f')<=('1324312787')) END) GROUP BY CAST(((rt1.c1) BETWEEN (rt0.c3) AND (rt0.c4)) AS TEXT), ABS(DISTINCT ((rt1.c0)>(x'c05f'))), (((((rt0.c4, rt1.c1, rt1.c2))<((rt1.c0, 0xffffffff8b73ee26, rt0.c3)))) NOT BETWEEN ((('HI0')%('wMt.Z'))) AND (((((vt0.c0)AND(rt1.c4)))AND(rt0.c0)))) HAVING NULL;SELECT ALL ((COUNT(*)) NOT NULL) FROM vt0, rt1 WHERE (CAST(((0X8ef635)<<(0.10333252014229055)) AS TEXT)); -- 0ms;
SELECT DISTINCT CAST(((t0.c0)%(rt0.c0)) AS NUMERIC), MIN((~ (t1.c69))), TOTAL(((rt1.c3)||(rt1.c3))) OVER ( RANGE CAST((rt1.c3 IN ()) AS REAL) PRECEDING EXCLUDE GROUP) FROM t1, rt1, vt0, rt0 WHERE (',*<)');SELECT DISTINCT rt1.c0 FROM t1, vt0, t0 WHERE (CASE x'' COLLATE RTRIM  WHEN ((0.3271012641149056) NOT BETWEEN (NULL) AND ('1222939879')) THEN ((('~0▵GYw'))=((0.6745234063812964))) WHEN ((',p脥')>=(NULL)) THEN '1880836533' COLLATE NOCASE WHEN ((NULL) ISNULL) THEN (((x'3447')) BETWEEN ((NULL)) AND (('-2031246372'))) END);SELECT SUM('[ttZ_z]\r2' COLLATE RTRIM COLLATE RTRIM) OVER (), ((((rt0.c4) BETWEEN (rt0.c0) AND (rt1.c4)))OR(((rt1.c3) ISNULL))), (- (load_extension(rt1.c3, t1.c69))) FROM vt0, t0 WHERE (json_quote((0.7099413873338591 IN ())));SELECT DISTINCT SUM(((((rt1.c1)AND(rt1.c1)))OR(t1.c69))) OVER ( ORDER BY (+ (NULL))) FROM t0 WHERE ('1032457822') ORDER BY ((CAST('-1491570129' AS REAL)) NOT BETWEEN (CAST('xpI' AS BLOB)) AND (STRFTIME(t1.c69, rt1.c0, rt1.c1))) DESC  NULLS LAST LIMIT 659220901;SELECT DISTINCT ((-9.71992765E8) NOTNULL), ((CAST(rt0.c3 AS REAL))LIKE((rt1.c4 IN ()))), SUM(((rt0.c1) ISNULL)), ((SUM(rt1.c0)) NOTNULL), 0X2f22effc FROM rt0, t1, rt1; -- 0ms;
SELECT ((((rt1.c0)*(rt1.c0)))<((rt0.c1 IN ()))) FROM rt1 WHERE (((((0x232e1f26) BETWEEN (0.11132399574577978) AND (0.9587510149708214)))AND(CASE '1066900192'  WHEN -2129637819 THEN 24484386 END))) ORDER BY NULL ASC LIMIT 659220901 OFFSET 888904808; -- 0ms;
SELECT DISTINCT t1.c69 COLLATE NOCASE FROM rt1, t1 WHERE (((((NULL)%(NULL)))OR(0.15729701221211545 COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((((rt1.c1)) NOT BETWEEN ((x'')) AND ((rt0.c4)))))>=((((rt1.c4)>>(rt0.c2))))) FROM t0 WHERE ((~ (((NULL)<=(0.5819963384621478)))));SELECT ((((CAST(rt1.c0 AS REAL))OR(((t1.c69)%(rt1.c2)))))AND((((('')AND(rt1.c1)))AND(rt0.c2)))) FROM rt0, t0, t1, rt1; -- 0ms;
SELECT ((ABS(rt1.c3)) NOT NULL) FROM rt0, t1, rt1 WHERE ((((1.734497318E9, CASE WHEN '505706531' THEN '' WHEN x'' THEN x'' WHEN '0Xb^L' THEN x'' END, ((NULL) ISNULL)))<=(((+ (0.6059964149476532)), CAST(0.3792678069261113 AS NUMERIC), '-763927415' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT (((((rt0.c2 IN ('880774884')))OR(GROUP_CONCAT(rt1.c2))))OR(((((t0.c0)AND(rt1.c3)))OR(rt0.c1)))) FROM t0, vt0, t1, rt0, rt1 WHERE ((-1.227652719E9 IN (-1856301791, '罀')) COLLATE NOCASE) ORDER BY ((rt1.c1) BETWEEN ('-F') AND ((((('!/ky^oQﱖ')AND(rt1.c0)))AND(rt1.c0)))), '-630677185'  NULLS LAST; -- 0ms;
SELECT ((((t0.c0, rt1.c1, t0.c0)) BETWEEN ((t0.c0, rt0.c1, rt1.c4)) AND ((t0.c0, rt1.c2, rt1.c3))) IN (((rt1.c2)IS NOT(rt0.c1)))) FROM t1 WHERE (((x'73c7') IS TRUE) COLLATE NOCASE);SELECT CAST(COUNT(rt0.c0) AS REAL), (((rt1.c0 IN ())) ISNULL), (MAX(rt1.c2) IN ()) FROM t0, rt1, rt0, vt0 WHERE (CASE CASE WHEN 'e~n' THEN 0.8672370604461044 ELSE NULL END  WHEN (+ (',[uGT')) THEN ((1225688311) NOT BETWEEN (x'') AND (0.6550815243524318)) WHEN 0.5527932178126383 COLLATE BINARY THEN (('hCxmj膑Jw_')AND(0.7209576026692505)) WHEN ((x'')<>(0x1e86e891)) THEN ((0X5cb80df) NOT BETWEEN (0.6370193746851257) AND (0.657034031186176)) ELSE ((0.3576915010926065) NOT NULL) END); -- 0ms;
SELECT DISTINCT (- ((rt0.c4 IN (rt0.c3, t1.c69)))) FROM rt0 WHERE ((((NOT ('-1695373103'))) NOT BETWEEN ((((NULL))>((0Xffffffffb90bb21c)))) AND ((('A')+(0.3282324641411416)))));SELECT ALL CASE WHEN highlight('189773312', rt0.c0, rt0.c1, rt1.c3) THEN ((-1) BETWEEN (t1.c69) AND (t0.c0)) WHEN ((vt0.c0)/(t1.c69)) THEN COUNT(rt1.c0) WHEN CASE WHEN rt1.c2 THEN t1.c69 END THEN (((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4))) WHEN ((rt1.c3) IS FALSE) THEN (((rt1.c4))!=((rt1.c4))) WHEN 0.041165763364825136 THEN ((rt0.c1)==(rt1.c3)) END FROM t1, rt0, vt0, rt1 WHERE ('8}') GROUP BY ((((((rt0.c3) ISNULL))OR(((((rt1.c4)AND(vt0.c0)))OR(rt1.c3)))))OR('	*^P+D}''*')) HAVING (LIKELIHOOD(DISTINCT rt1.c1, 0.7517767292914372) IN (CAST(rt0.c0 AS TEXT), ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0))));SELECT LIKELY(rt1.c3 COLLATE RTRIM), (+ (((((rt0.c0)OR(vt0.c0)))AND(rt0.c2)))), FIRST_VALUE((((+ (rt0.c3))) BETWEEN (((((rt1.c1)AND(rt1.c2)))OR(t1.c69))) AND (0.8972810395426118))) OVER () FROM rt1, t1, rt0, vt0, t0 WHERE (CAST(LIKE(0xffffffffe514ed82, x'8695', '-') AS BLOB)); -- 1ms;
SELECT (- (CASE WHEN rt1.c3 THEN t0.c0 ELSE rt0.c4 END)) FROM vt0, rt1, t1, t0;SELECT ALL (- (rt0.c0)) FROM t0;SELECT ((((NULL)<=(rt1.c2)))AND(((((((((((((rt1.c0)AND(rt0.c1)))AND(rt1.c2)))AND(t0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))) FROM t1, rt0;SELECT DISTINCT vt0.c0 FROM rt1, vt0, t0, rt0 WHERE ('245532205'); -- 0ms;
SELECT ALL ((((rt0.c0)GLOB(rt1.c3))) BETWEEN ((NOT (rt1.c0))) AND ((+ (x'')))), TOTAL_CHANGES(), '/,gGue#[' FROM t0, vt0, t1, rt1 WHERE ((0.13437799445424115 IN (0.8857750483715104, '-43137981')) COLLATE BINARY);SELECT ((x'')>=(((rt0.c0)<<(rt0.c0)))), (((rt0.c0)) BETWEEN ((CAST(rt0.c3 AS REAL))) AND ((NULL))), rt1.c3 FROM t0 WHERE ((~ (SQLITE_COMPILEOPTION_USED('P&D>Ng'))));SELECT DISTINCT ((UPPER(DISTINCT x''))OR(LIKELIHOOD(rt1.c3, 0.8692051947817101))) FROM vt0, t0, rt0;SELECT DISTINCT (~ (MIN(rt0.c3))) FROM rt0, t1, rt1, t0, vt0 WHERE (((((9.7222879E7)AND('U챓3rcf')))<=(((0.4146947529330516)&(0.44417317670914913))))); -- 0ms;
SELECT ALL rt1.c4 COLLATE RTRIM FROM vt0 WHERE (CHAR(ABS(1.351027124E9)));SELECT ((((rt1.c0) NOTNULL))OR(((((rt0.c0)OR(0.1937812985692945)))AND(rt0.c1)))), COUNT((('-1093458507')<>(rt1.c0))) OVER (), (~ (rt0.c3)) COLLATE BINARY FROM rt1, t0 WHERE ((((x'')) NOT BETWEEN ((x'')) AND ((CAST('-610512429' AS NUMERIC))))) LIMIT 1131553939 OFFSET -602455674;SELECT DISTINCT SUM(((rt1.c1) IS FALSE)) FROM t1 WHERE (((0.2571541665097181 COLLATE BINARY)GLOB(((x'080a')*('286742918')))));SELECT ALL CAST(CAST('*d' AS INTEGER) AS TEXT), x'', UNLIKELY((t1.c69 IN ())) FROM t0, rt1, vt0; -- 0ms;
SELECT DISTINCT '0.4498812689264212', LAG((x'' COLLATE BINARY IN ()), ((CAST(rt1.c1 AS BLOB))==(t1.c69 COLLATE NOCASE)), ((((vt0.c0)IS NOT(vt0.c0)))GLOB(''))) OVER (), CAST(((((((((0.3207156334177077)OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c2)) AS NUMERIC) FROM vt0, t0, t1, rt1 WHERE (((0.951455969407952 COLLATE BINARY)-(((0.674448860811277)+(''))))); -- 1ms;
SELECT DISTINCT ((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4))) NOT NULL) FROM rt0, t0 WHERE ((((('387205284') IS TRUE))>(((0.1287463922609784)>=(0x5b19aa5f)))));SELECT ALL TOTAL((((0Xffffffffc208b777))<=((rt0.c3)))) FROM t0 INDEXED BY i62, vt0, rt0, rt1 WHERE (((((0X29f4f1ff)<('hi0'))) BETWEEN (0X4528287) AND (((NULL)GLOB(0.6792223167636581)))));SELECT rt0.c4, CASE WHEN CASE WHEN rt0.c0 THEN NULL WHEN t0.c0 THEN vt0.c0 WHEN rt0.c4 THEN t0.c0 END THEN TOTAL(rt1.c3) WHEN (+ (rt1.c1)) THEN (vt0.c0 IN ()) WHEN rt0.c1 THEN ((vt0.c0) NOTNULL) END, ((((((((-1835636570)AND(((t0.c0)!=(NULL)))))OR(((rt1.c4)GLOB(rt0.c4)))))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0)))), TYPEOF(DISTINCT MAX(t0.c0, rt1.c3)), '', (((CAST(x'' AS REAL)))>((CAST(rt1.c2 AS INTEGER)))), (('-1038025242') NOTNULL) FROM t1, rt0, vt0;SELECT DISTINCT CASE ((rt0.c0) NOT NULL)  WHEN ((rt0.c0)LIKE(rt1.c3)) THEN ((rt1.c2)<<(rt0.c4)) ELSE rt1.c1 COLLATE NOCASE END, 0xffffffffc18125ec, (((~ (rt0.c3)))=(CASE rt0.c0  WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c2 THEN vt0.c0 END)) FROM t0, rt1, t1, rt0;SELECT ALL (CAST(rt0.c3 AS NUMERIC) IN ((rt1.c2 IN ()), rt0.c1 COLLATE NOCASE)) FROM t0;SELECT DISTINCT ((((GROUP_CONCAT(rt1.c1))AND(((((rt1.c4)AND('467647099')))AND(NULL)))))AND((rt1.c4 IN ()))), (((~ (rt0.c2))) BETWEEN (((t1.c69)>('590225190'))) AND (CAST(vt0.c0 AS NUMERIC))), '()' FROM t1, rt0 NOT INDEXED, t0, rt1;SELECT ALL '-1941595986' COLLATE NOCASE FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT rt0.c0, CASE WHEN ((rt1.c2)>(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END, ((CAST(t1.c69 AS REAL))&(((rt1.c4) NOT BETWEEN (rt1.c1) AND (0.3884994275209853)))) FROM rt0, vt0, t0, rt1 WHERE ((((NULL)) NOT BETWEEN (((- (x'')))) AND ((ABS(NULL)))));SELECT DISTINCT (((((t0.c0, rt0.c1, '1667281876'))<>((rt0.c1, rt1.c2, rt0.c0))))+(((rt0.c0)%(rt1.c4)))) FROM vt0, t1, rt0, rt1, t0; -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c0 THEN rt0.c0 END IN ()) FROM rt0, rt1 WHERE (CASE ((x'')*('-1923161044'))  WHEN ((((x'f6014ebe')AND(x'')))AND(x'd908')) THEN ('1454562113' IN ()) END); -- 0ms;
SELECT DISTINCT (rt0.c1 COLLATE BINARY IN ()) FROM rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c1)AND(1.948304255E9)))OR(rt0.c2)))OR(rt1.c2)))AND(t0.c0)))>(rt1.c0 COLLATE NOCASE)) FROM rt0, t0, t1, vt0, rt1; -- 1ms;
SELECT DISTINCT (rt0.c2 IN (((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))), HEX(TRIM(rt0.c0, rt1.c2)), ((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))AND(vt0.c0)))OR(rt0.c2)))<>(((((t1.c69)OR(0.03262051260978316)))AND(rt1.c1)))) FROM t0 WHERE ((((('')AND(0.47354644836576176)))OR(121631178)) COLLATE BINARY);SELECT ALL ((CASE WHEN t1.c69 THEN rt0.c1 WHEN t1.c69 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 ELSE t1.c69 END) BETWEEN (SUM(t1.c69)) AND (CAST(rt0.c4 AS REAL))) FROM t1 EXCEPT SELECT ((rt0.c2 COLLATE NOCASE)||(CASE rt1.c4  WHEN t0.c0 THEN rt1.c1 END)) FROM t1, t0, rt0, rt1;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (t1.c69) AND (t0.c0)))||(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0)))) FROM rt1, rt0, t0 WHERE (((((-282313059)LIKE(x'')))<(('185323110' IN ()))));SELECT DISTINCT LIKELIHOOD(rt0.c4, 0.04841987134468084) COLLATE BINARY, GROUP_CONCAT((((rt1.c3))>((vt0.c0)))), CASE WHEN SUM(rt0.c0) THEN CASE WHEN rt0.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c3 THEN t1.c69 END END, (- (rt1.c2)) COLLATE BINARY, CASE rt0.c3  WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN rt1.c2 ELSE t0.c0 END COLLATE RTRIM FROM t0, vt0, rt0, t1, rt1; -- 0ms;
SELECT ALL ((rt0.c4)<<(NULL)) FROM t0, rt0, t1, vt0, rt1 WHERE (NULLIF(DISTINCT x'' COLLATE NOCASE, -1618517219)); -- 0ms;
SELECT ((COUNT(rt1.c0)) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (((rt0.c0)>=('262301900')))) FROM rt1, t1 WHERE (((('')IS NOT(0x460cbf2e)) IN (((NULL)>(NULL)), CAST(NULL AS BLOB)))) ORDER BY json_insert(((rt1.c3)/(rt1.c1)), ((((rt0.c3)OR(t1.c69)))OR(rt1.c4)), ((((rt1.c0)AND(rt1.c0)))OR(rt0.c1))), ((t0.c0 COLLATE NOCASE)IS NOT(0.4597021887441394)) DESC, ((((QUOTE(rt1.c4))AND(x'')))AND((rt0.c0 IN ()))) DESC;SELECT DISTINCT (((rt0.c2 IN ()))*(CAST(rt1.c1 AS BLOB))) FROM rt1; -- 0ms;
SELECT ALL x'', ((((rt0.c2) IS FALSE))<<(((rt0.c1) ISNULL))), AVG((+ (t1.c69))), t1.c69, json_insert(((rt1.c1)>(rt0.c3)), ((rt1.c3) ISNULL), ((rt0.c2) IS TRUE)) FROM vt0, t1, rt0;SELECT DISTINCT (('ጠn')*(AVG(t1.c69))) FROM vt0 WHERE (((NULLIF(DISTINCT x'', 0.6601402864188923))OR(0.3596833806672174 COLLATE BINARY))) UNION ALL SELECT ALL 8.32066441E8 FROM vt0, rt1, t0, t1 WHERE (((((-958935187)AND('')))AND(0.4959579816409867)) COLLATE NOCASE);SELECT ((CASE rt1.c0  WHEN rt0.c4 THEN vt0.c0 END)<=(CAST(rt0.c0 AS TEXT))) FROM t0, rt0 WHERE (((NULL)&(x'57fa')) COLLATE BINARY);SELECT DISTINCT (- ((- (t0.c0)))), CAST(SUM(rt0.c0) AS BLOB), ((rt1.c1 COLLATE RTRIM)AND(CAST(rt1.c4 AS BLOB))) FROM vt0, t0, rt0 WHERE (((((((((((x'')AND(x'')))AND((x'5d13' IN ()))))OR(TRIM(x'', 2.4484386E7))))AND(CASE WHEN NULL THEN x'' END)))AND((NOT (1e500)))));SELECT CASE ((rt0.c3) BETWEEN (rt0.c2) AND (x''))  WHEN (((rt0.c4)) BETWEEN ((rt1.c1)) AND ((rt0.c4))) THEN (rt1.c1 IN (t0.c0)) WHEN ((rt1.c3) BETWEEN (vt0.c0) AND (t0.c0)) THEN CAST(rt0.c1 AS BLOB) WHEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((t0.c0))) THEN NULLIF(rt1.c4, rt1.c4) WHEN ((t0.c0)>=(rt1.c3)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (0.3191942748916019)) WHEN CHAR(rt0.c3) THEN rt0.c1 COLLATE BINARY ELSE CAST(rt0.c1 AS NUMERIC) END, ((rt1.c4 COLLATE RTRIM)IS(((t0.c0)IS NOT(t0.c0)))), t0.c0 FROM rt0, vt0, t1, rt1 WHERE (CASE ((('')) NOT BETWEEN ((NULL)) AND (('-2048777143')))  WHEN (((0.5287209520893316))<=((NULL))) THEN ((NULL)<(0.24263957078624343)) ELSE CASE NULL  WHEN '636781292' THEN x'' WHEN 'I+(5' THEN 0.7572725468401493 WHEN '-674492188' THEN x'' END END);SELECT ALL COUNT(0x696644c3) FROM vt0, rt0, t1 GROUP BY (CAST(rt1.c4 AS BLOB) IN ((((rt0.c0, rt0.c4, rt1.c1)) NOT BETWEEN ((x'', rt0.c1, t1.c69)) AND ((vt0.c0, vt0.c0, rt0.c4))), ''));SELECT DISTINCT (((((((((((((rt0.c2 IN ()))OR(CAST(rt0.c2 AS INTEGER))))AND(LIKELY(DISTINCT rt0.c2))))AND(((((rt0.c4)AND(rt0.c3)))OR(0.05033829247594557)))))AND(((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c3)))))AND(COALESCE(DISTINCT rt0.c0, t0.c0))))OR(0.6095960505541153)) FROM t1 WHERE (CASE ((x'')|(x''))  WHEN CASE NULL  WHEN x'3db5' THEN x'' ELSE 0.6383927313878551 END THEN (- ('}Di2儊')) WHEN (0.3083538475261207 IN ()) THEN ((x'b761') NOT NULL) WHEN CASE WHEN 0.4621601638616962 THEN NULL END THEN ((x'c471')-(0.6801933418708527)) ELSE (NOT ('-0.0')) END) LIMIT -990368280;SELECT DISTINCT TOTAL(((1533932846) IS TRUE)) FROM rt1, t1, t0, rt0; -- 0ms;
SELECT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0)))+(rt0.c3)) FROM t1, vt0, t0, rt0, rt1; -- 0ms;
SELECT (rt0.c1 IN (rt1.c1)) COLLATE BINARY, (((rt0.c4)<(rt0.c2)) IN ((rt1.c3 IN ()), rt1.c0)), (((('280643417')LIKE(rt1.c0)))+(((((rt0.c1)AND(t0.c0)))AND(NULL)))) FROM vt0, rt1;SELECT ALL (((rt1.c3, rt1.c4, rt1.c1, rt1.c3, vt0.c0)) BETWEEN ((((((rt1.c4)OR(rt0.c3)))OR(rt0.c0)), ((rt0.c0)/(rt1.c3)), (((rt1.c3)) BETWEEN ((rt1.c3)) AND ((vt0.c0))), (NOT (NULL)), (~ (t0.c0)))) AND (((rt0.c1 IN ()), (((rt1.c2, rt0.c2, rt0.c0)) BETWEEN (('-810240397', t1.c69, rt0.c3)) AND ((rt1.c2, rt1.c2, rt0.c3))), t0.c0, ((((rt1.c4)OR(rt0.c3)))OR(vt0.c0)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c0))))) FROM rt0, t1 WHERE (((0x232e1f26 COLLATE NOCASE)LIKE((('\nQo/Qa(') NOT BETWEEN (0.8628482622836884) AND (0.20446998529353355)))));SELECT DISTINCT LIKELY(((vt0.c0)OR(NULL))), ((((((((((vt0.c0)OR(vt0.c0)))OR('J3')))OR(rt0.c3)))AND(rt0.c2)))!=(CAST(t1.c69 AS REAL))), AVG(CASE t0.c0  WHEN t0.c0 THEN rt0.c4 END) OVER () FROM rt1, t0;SELECT ALL ((NULL)>>(((rt1.c3)>(rt0.c2)))) FROM rt0, rt1, vt0; -- 1ms;
SELECT (((((((((((t1.c69)AND(rt1.c1)))AND(t0.c0)))OR(t0.c0)))AND(rt1.c2)), rt0.c2 COLLATE NOCASE, LOWER(rt1.c4), CAST(rt1.c0 AS BLOB), (rt1.c4 IN ())))>=((((rt0.c0) NOTNULL), (0.9067210805811915 IN ()), ((rt1.c1)IS NOT(vt0.c0)), rt1.c1 COLLATE BINARY, ((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c4))))), ((((((((((rt0.c0)+(rt0.c3)))AND(((vt0.c0) BETWEEN (rt1.c3) AND ('0.744360890570369')))))AND(((rt1.c0)IS NOT(t0.c0)))))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND((((t0.c0, rt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((-5.76848405E8, vt0.c0, rt0.c2))))), ((UNLIKELY(t1.c69)) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t1.c69)))) AND (t0.c0)) FROM vt0, rt1, t0, t1, rt0 WHERE (',C)j榆%u|O'); -- 0ms;
SELECT ((CAST(rt1.c3 AS TEXT)) BETWEEN ((rt1.c0 IN ())) AND (((((rt0.c1)OR(vt0.c0)))OR(t0.c0)))), (((rt0.c1)) NOT BETWEEN (((- (rt0.c2)))) AND (('807479006'))), ((CASE rt0.c0  WHEN rt1.c3 THEN rt1.c2 WHEN 1523905321 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END)==(((rt1.c0)<(vt0.c0)))) FROM rt1, t0, rt0, t1;SELECT ALL CASE WHEN GROUP_CONCAT(rt1.c3) THEN ((vt0.c0)LIKE(rt0.c1)) WHEN CASE WHEN 5.69600636E8 THEN t1.c69 WHEN 0X78b153ed THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c4 END THEN rt0.c2 COLLATE NOCASE WHEN ((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c3)) THEN ((rt0.c3) ISNULL) WHEN rt0.c3 COLLATE BINARY THEN ((((((((t1.c69)AND(t1.c69)))AND(rt1.c3)))OR(rt1.c4)))AND(rt0.c3)) WHEN 9.39594222E8 THEN ((NULL)|(rt0.c1)) END, '811405830', ((((x'926b')||('-1416463159')))>(CAST('r' AS NUMERIC))) FROM t0;SELECT ALL '<,煃&' FROM t1 WHERE (UNICODE(json(x'0ca5')));SELECT DISTINCT COUNT(rtreenode(rt1.c2, rt0.c2)) FROM t0, t1, rt0, vt0, rt1 WHERE ((((NULL)) BETWEEN (('2097408970')) AND ((x''))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT rt1.c3 FROM t0, t1, rt0, rt1 WHERE (((CASE WHEN '1704472727' THEN '' END)<(((((0.12228045571449753)AND('569600636')))AND(NULL))))); -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE) FROM vt0 GROUP BY (((rt0.c3 IN (rt0.c0, rt0.c0)))IS(x'')), ((TYPEOF(DISTINCT rt1.c4))%(COALESCE(rt0.c0, rt0.c0, rt1.c1, rt1.c0))), ((((((((((((((t1.c69)<<(rt0.c2)))AND(((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c3)))))AND(((rt0.c1) ISNULL))))AND((((rt1.c3, rt1.c3, t0.c0))==((rt1.c0, rt1.c2, rt1.c3))))))OR(((((t1.c69)AND(rt1.c4)))AND(rt1.c4)))))AND(((((rt0.c3)AND(rt1.c3)))AND(rt1.c3)))))OR(((rt1.c1)<=(t1.c69))));SELECT DISTINCT ABS(rt0.c3), ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((((rt1.c4))>=((rt0.c4)))) AND (-1443161117)), COUNT(((((((((rt0.c4)AND(rt1.c4)))OR(rt1.c2)))AND(t0.c0)))AND(rt0.c1))) OVER ( GROUPS rt1.c3 PRECEDING) FROM vt0, t1, rt1, rt0;SELECT ALL CASE WHEN x'' THEN (((t1.c69)) NOT BETWEEN ((rt1.c0)) AND ((NULL))) WHEN ((vt0.c0) NOT BETWEEN (0.4159259524918868) AND (rt1.c4)) THEN rt1.c1 COLLATE BINARY WHEN t1.c69 COLLATE NOCASE THEN ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) END FROM t0, rt0 WHERE ((NOT (0xffffffffb154d071))) GROUP BY ((CASE rt1.c4  WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c0 END) BETWEEN (((t0.c0)OR(rt0.c2))) AND (((1.175240494E9) BETWEEN (rt0.c1) AND (rt1.c1)))), (((rt1.c0)=(rt1.c1)) IN ()), (((rt0.c1))<((rt0.c0))) COLLATE BINARY HAVING (((((rt1.c2))>((t1.c69))))+(CASE WHEN rt0.c2 THEN rt1.c1 WHEN t1.c69 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 END));SELECT DISTINCT (NOT (CASE rt0.c0  WHEN t1.c69 THEN rt0.c3 END)) FROM t0, t1, rt0, rt1 WHERE (((('Ktmonths9n', '0.7475508467975897', '', NULL, 459384862)) BETWEEN (((('1959929375') IS TRUE), NULL COLLATE RTRIM, ('<x<' IN (x'c0375d20')), '-268599583' COLLATE NOCASE, (((NULL))==((8.44629719E8))))) AND ((CASE 0.10340677538860865  WHEN x'' THEN 0.6399259250737739 END, '-1402192964' COLLATE BINARY, ((0.3817824545680004)AND(9.7222879E7)), (NULL IN ()), (('*	AI') BETWEEN (0.4035257928148782) AND ('0.25081947298189944')))))); -- 0ms;
SELECT CAST(vt0.c0 AS BLOB) FROM t1 GROUP BY (((((t0.c0)-(rt0.c3))))>(((((rt0.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0)))))), ((((((vt0.c0)OR('621824051')))AND(t1.c69)))==(rt0.c2)), CASE WHEN (((rt0.c4, rt0.c3, rt0.c2))==((rt1.c2, '', 0x74d2261f))) THEN CAST(rt1.c1 AS INTEGER) END HAVING '0.7475508467975897';SELECT DISTINCT PERCENT_RANK() OVER (), CAST(((rt1.c3)<>(rt0.c3)) AS NUMERIC), RANK() OVER () FROM vt0, rt0, t1, t0, rt1 WHERE (UNICODE(CAST(0Xffffffffbfb3836a AS TEXT))); -- 0ms;
SELECT ALL ((((((rt0.c1)AND(NULL)))AND(vt0.c0))) BETWEEN (((rt1.c3) BETWEEN (t1.c69) AND (rt0.c2))) AND (((vt0.c0)%(rt0.c2)))), '1665223031' COLLATE RTRIM, ((rt0.c1)<(rtreenode(t0.c0, NULL))) FROM t1 WHERE (CASE WHEN (x'ea3d' IN ()) THEN 0.23031852161884359 COLLATE RTRIM END);SELECT DISTINCT ((CASE WHEN t1.c69 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c4 END)<(CAST(rt0.c4 AS TEXT))) FROM rt1, vt0, t1 LIMIT 1523905321;SELECT ALL ((((((t0.c0)AND(vt0.c0)))AND(rt0.c2)))+((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))))), ((rt0.c2)&(t0.c0)) COLLATE RTRIM, MIN(((t1.c69) IS TRUE)) FROM t0, rt1, t1, rt0, vt0 ORDER BY x'' LIMIT -1485376570; -- 0ms;
SELECT DISTINCT (TRIM(rt0.c0, rt0.c0) IN ()) FROM t1, rt1, vt0 WHERE (CAST(CAST('0.2438473994215027' AS TEXT) AS BLOB)); -- 0ms;
SELECT COUNT(rt1.c1) OVER (), rt1.c0, HEX(DISTINCT ((vt0.c0)>(t0.c0))) FROM t0 WHERE (CASE WHEN ('''蓵' IN (x'')) THEN CASE 0.06320393636875243  WHEN NULL THEN NULL ELSE '0.42499873523329734' END END);SELECT DISTINCT LEAD(CASE WHEN ((rt0.c1)%(rt0.c3)) THEN ((((rt1.c2)AND(rt1.c0)))AND(t1.c69)) END, (((- (rt0.c1)))IS NOT(((rt0.c1) IS FALSE))), IFNULL(DISTINCT ((((((((0.14043631595494388)AND(NULL)))OR(rt1.c2)))OR(rt0.c2)))OR(rt0.c0)), ((rt0.c2)/(rt0.c2)))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM vt0, rt0, t1, rt1; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM rt1, t1, vt0, rt0, t0 LIMIT 1014444612 OFFSET 311150350; -- 0ms;
SELECT DISTINCT (CAST(rt1.c4 AS NUMERIC) IN ()), CAST(((rt0.c1)<=(rt1.c0)) AS INTEGER), ((TOTAL(rt0.c1))=(TYPEOF(DISTINCT rt1.c1))) FROM t0, vt0, rt1, t1;SELECT ALL (((x'')) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((((rt1.c1, rt1.c2, rt0.c0)) NOT BETWEEN ((x'', rt1.c3, rt1.c1)) AND ((rt1.c0, rt0.c0, rt1.c1)))))) FROM t0;SELECT ALL COUNT((t1.c69 IN ())) OVER () FROM t1 WHERE (((NULL)IS('tn')) COLLATE BINARY); -- 0ms;
SELECT ALL (((((rt1.c0 IN ()))AND((+ (vt0.c0)))))OR((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))), '*eF''zeT l', ((((vt0.c0)>(t0.c0))) BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CAST(rt1.c4 AS INTEGER))) FROM t1, t0, rt1, rt0 WHERE (((QUOTE('i_㐡<b')) NOT BETWEEN (CASE WHEN 0.4545862606574884 THEN 0.3705826526084881 ELSE 0.5219789762618049 END) AND (x'')));SELECT COUNT(((rt0.c2) NOT NULL)) OVER () FROM vt0, t0, rt0, rt1 WHERE (x'b68a') ORDER BY ((',&Yo') BETWEEN ((t0.c0 IN ())) AND (((rt0.c1) BETWEEN ('HgLl講>Tu') AND (vt0.c0)))), ((((rt0.c4)LIKE(rt0.c1))) BETWEEN (((t1.c69)+(rt1.c1))) AND (CASE WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c2 END)) DESC  NULLS LAST;SELECT DISTINCT COUNT(*) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt1.c2) IS TRUE)) NOT BETWEEN (((rt1.c4) BETWEEN (t1.c69) AND (rt1.c3))) AND (t0.c0 COLLATE RTRIM)) FROM rt0, vt0, rt1, t0, t1 GROUP BY (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c1)<(rt1.c4))) AND ((((rt0.c4, t1.c69, rt0.c1))==((0X31985389, rt1.c0, rt1.c2))))), ((((((((((((((rt1.c0)%(rt1.c3)))OR(rt1.c3)))OR((- (rt0.c4)))))AND(rt0.c2)))OR(x'8237')))OR(CAST(t1.c69 AS INTEGER))))AND(((((((((rt1.c2)OR(rt1.c0)))AND(t1.c69)))AND(vt0.c0)))AND(rt0.c0)))), CASE WHEN rt0.c0 THEN rt1.c0 END COLLATE NOCASE; -- 0ms;
SELECT ALL HEX((x'540c6b9f' IN ())), ((((- (rt0.c1))))>((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt1.c2))))), COUNT(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN '-1301944516' WHEN 4.62241637E8 THEN t0.c0 END COLLATE NOCASE) FILTER(WHERE CASE WHEN (~ (rt1.c1)) THEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c3 END END) OVER (), (- (SUM(rt0.c0))), (((rt1.c2, vt0.c0, rt0.c1)) NOT BETWEEN ((NULL, ((rt0.c4)+(rt0.c1)), x'3148')) AND (((((vt0.c0))=((rt1.c1))), (((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))), 350910468))) FROM rt1, t0, rt0, t1 WHERE ((((x'6581' IN (NULL)))<<(((((x'')AND(NULL)))OR('-727188941')))));SELECT DISTINCT ABS(((t1.c69)LIKE(rt0.c1))) FROM t0 NOT INDEXED RIGHT OUTER JOIN rt1 ON ((((vt0.c0)OR(((((((((NULL)OR(t1.c69)))OR(rt0.c0)))OR(vt0.c0)))AND(rt1.c3)))))OR((rt0.c0 IN ()))) INNER JOIN rt0 ON CASE rt1.c3 COLLATE NOCASE  WHEN t0.c0 THEN (((rt0.c1))=((rt0.c3))) WHEN (rt0.c0 IN ()) THEN (NOT (rt1.c1)) WHEN (((rt1.c4))>((vt0.c0))) THEN ((((rt1.c3)OR(rt1.c1)))AND(vt0.c0)) ELSE (- (rt1.c3)) END LIMIT -1967517793;SELECT DISTINCT highlight(TYPEOF(DISTINCT rt0.c1), ((rt1.c2) IS TRUE), 'ኀ''', (((t0.c0, rt1.c0, t0.c0, rt0.c1, t1.c69)) NOT BETWEEN ((rt1.c2, rt1.c3, rt0.c2, rt1.c0, NULL)) AND ((rt1.c0, rt0.c1, t1.c69, t0.c0, rt0.c3)))) FROM rt0 GROUP BY (+ (NULL)), ((NULL COLLATE RTRIM) IS FALSE), CASE WHEN ((rt0.c0) IS TRUE) THEN CAST(t0.c0 AS INTEGER) END HAVING t1.c69;SELECT SUM(((rt0.c0)LIKE(rt0.c1)) COLLATE BINARY) OVER (), x'', ((((((((NULLIF(rt1.c3, rt1.c0))OR(((((((((t0.c0)OR(NULL)))OR(rt0.c1)))AND(rt0.c1)))AND('')))))OR(rt0.c1)))AND(TRIM(DISTINCT rt1.c1))))AND(((rt0.c0)<(rt0.c2)))) FROM rt1, rt0, t0 WHERE ((513082414 COLLATE NOCASE IN ())) LIMIT 832066441 OFFSET 1886578447; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, rt1, rt0, t0 WHERE (CASE (((('mk廛g2-瀫.詜')OR(NULL)))OR('0.9398331138528695'))  WHEN (((x''))!=(('0.5425521049084197'))) THEN (('') ISNULL) END); -- 0ms;
SELECT DISTINCT COUNT(*), COUNT(*), SUM(LIKELIHOOD(t1.c69, 0.42167559877755556)) OVER () FROM t1, rt0, rt1, t0, vt0 NOT INDEXED LIMIT 832066441; -- 0ms;
SELECT DISTINCT ((rt1.c0)LIKE(rt1.c4)) COLLATE RTRIM FROM t1, rt0 WHERE (CAST(CAST('-1866505296' AS BLOB) AS INTEGER));SELECT DISTINCT ((COUNT(rt1.c1)) IS TRUE) FROM t0, vt0, rt0;SELECT DISTINCT (t0.c0 COLLATE RTRIM IN ()) FROM t1 WHERE (CAST((((((((('0.28566516864697145')AND(0Xffffffffcd761a0e)))OR('-1555866952')))AND(0.9030249061950295)))OR(0.03818094203731115)) AS TEXT)) GROUP BY ((((rt0.c3)AND(vt0.c0)))OR((rt0.c2 IN ()))), (((- (rt0.c1)))*(CASE rt1.c3  WHEN rt1.c0 THEN t1.c69 WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c3 WHEN t1.c69 THEN x'e947' WHEN x'f647' THEN rt1.c3 ELSE rt1.c0 END)), ((TYPEOF(rt1.c0))==(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END));SELECT ALL CAST(((rt0.c0)IS NOT(rt1.c2)) AS TEXT) FROM rt0, t1, rt1, t0 WHERE (CASE WHEN CASE 0.5757393141895005  WHEN 0.7720361067785712 THEN 0.5363437465393202 END THEN '(|' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c4 COLLATE NOCASE THEN ((0.777884509959491) BETWEEN (rt1.c2) AND (rt1.c0)) WHEN (((rt0.c3))=((0.8280641948880335))) THEN ((((t1.c69)AND(rt0.c3)))OR(rt1.c4)) WHEN (rt0.c3 IN ()) THEN rt1.c1 COLLATE RTRIM ELSE ((rt0.c0) ISNULL) END FROM rt1, t1, t0, vt0, rt0 LIMIT 1219588101 OFFSET -724490049; -- 0ms;
SELECT (((((rt1.c0))>((rt1.c1))))-(CASE rt0.c0  WHEN rt1.c2 THEN rt1.c1 ELSE t1.c69 END)) FROM rt1, vt0 WHERE ((CASE 0.8963943360473215  WHEN '807479006' THEN 1676437687 END IN ()));SELECT CAST((- (rt1.c2)) AS INTEGER) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt1.c4) NOT NULL) AS BLOB) FROM t1 NOT INDEXED, rt1, t0 WHERE (((0Xffffffff98eb2a86) IS FALSE)) GROUP BY json_remove(NULL, rt0.c3) COLLATE NOCASE HAVING t0.c0;SELECT ALL ((CASE rt1.c4  WHEN t1.c69 THEN 0.7386325293186708 ELSE rt1.c2 END)<<(COUNT(*))) FROM t0, rt0, rt1, vt0, t1 WHERE (1042246958) ORDER BY (rt1.c1 COLLATE BINARY IN ()) DESC; -- 0ms;
SELECT DISTINCT ((COUNT(*)) IS TRUE), rt0.c1, CAST((((rt0.c4))<>((vt0.c0))) AS BLOB) FROM rt0 WHERE ((('') NOTNULL) COLLATE NOCASE);SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0))))>(((vt0.c0) NOTNULL))) FROM t1 WHERE ('-40094524');SELECT (CAST(0.4621601638616962 AS NUMERIC) IN ()) FROM t0, rt1, rt0 WHERE ('㾟酃'); -- 0ms;
SELECT SUM(((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c0))) FROM rt0, t0;SELECT DISTINCT ((((((rt1.c4)!=(rt1.c1)))OR(((rt0.c1)IS NOT(vt0.c0)))))OR(CAST(t0.c0 AS INTEGER))) FROM rt1, rt0, vt0;SELECT ALL MAX((+ (x''))) FROM t1, rt1, rt0; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c1)GLOB(rt0.c0))) OVER () FROM t1, vt0, t0 WHERE (CASE 0.874636528582457  WHEN ((('r')) BETWEEN ((NULL)) AND ((NULL))) THEN CASE WHEN 'oz.춠c' THEN x'' WHEN x'' THEN '1450641181' WHEN 0.3416710137024581 THEN NULL END WHEN (NOT ('-93062514')) THEN ((-310784075) BETWEEN (NULL) AND ('1208268149')) WHEN DATE('VwF', 0.7874245538958363, NULL, x'3d22', 'BuC') THEN ((0.48453888549736635) NOT NULL) END) GROUP BY CASE CAST(rt0.c1 AS TEXT)  WHEN (rt0.c2 IN ()) THEN rt0.c0 COLLATE NOCASE ELSE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)) END, CAST(((rt0.c1)LIKE(t1.c69)) AS REAL), CASE ((rt0.c0)*(rt0.c1))  WHEN CAST(rt1.c3 AS REAL) THEN JULIANDAY(t1.c69, vt0.c0, t1.c69) WHEN ((t1.c69)&(vt0.c0)) THEN rt0.c0 WHEN (~ (rt1.c0)) THEN ((rt0.c3) NOT BETWEEN (rt1.c0) AND (t0.c0)) END HAVING LIKELIHOOD(CAST(rt0.c4 AS BLOB), 0.7943468469916751);SELECT ((CAST(rt1.c0 AS INTEGER)) IS TRUE) FROM t1, rt1 LIMIT -1760480917; -- 0ms;
SELECT ALL (~ (((((t1.c69)OR(rt0.c0)))AND(rt1.c1)))) FROM t0, rt0, t1, vt0;SELECT TOTAL(((rt1.c1) BETWEEN (rt0.c1) AND (t1.c69))) OVER (), rt0.c0, ((0.3315493520270646) BETWEEN (rt0.c2) AND (((rt1.c3)=(rt0.c2)))) FROM t1, rt1, vt0, t0, rt0 LIMIT 482657863; -- 0ms;
SELECT DISTINCT CAST(rt1.c1 AS INTEGER) COLLATE RTRIM COLLATE RTRIM FROM t1, rt0, rt1, vt0, t0; -- 0ms;
SELECT DISTINCT ('-646003809' IN ()) FROM rt1 GROUP BY CASE WHEN ((t1.c69)OR(rt0.c1)) THEN 0Xffffffffd43b094b ELSE CAST(t1.c69 AS NUMERIC) END;SELECT DISTINCT ((((CASE WHEN rt0.c4 THEN t0.c0 ELSE rt0.c3 END)AND(x'c9f1')))OR('' COLLATE RTRIM)), t1.c69, (NOT (CASE WHEN rt0.c3 THEN t1.c69 ELSE t1.c69 END)) FROM rt0, t1 WHERE ((NOT (CASE WHEN 590225190 THEN 0.10651954510076089 ELSE '' END))) GROUP BY CASE ((('1999242974')) NOT BETWEEN ((rt0.c2)) AND ((t1.c69)))  WHEN ((rt1.c2)+(rt0.c4)) THEN rtreenode(t0.c0, rt1.c4) END, (((rt0.c1 IN ())) BETWEEN (rt0.c2) AND (json_remove(rt1.c1, t1.c69, t1.c69, vt0.c0, rt1.c3, rt1.c2))), ((json_patch(rt1.c3, rt0.c4)) NOTNULL);SELECT ((LOWER(DISTINCT t0.c0))IS NOT(((rt0.c2)-(vt0.c0)))) FROM t0;SELECT ALL CAST(CASE t0.c0  WHEN t1.c69 THEN rt1.c2 END AS BLOB) FROM rt0, vt0 ORDER BY (((((rt1.c3) IS FALSE)))<=(((((rt1.c2, rt0.c0, rt1.c0)) NOT BETWEEN ((rt0.c1, 0.24027323637192854, rt0.c2)) AND ((rt1.c4, vt0.c0, 'UR')))))) DESC  NULLS LAST, CAST(((('-1227652719')) NOT BETWEEN ((rt1.c0)) AND ((rt0.c4))) AS BLOB) ASC  NULLS LAST, rt1.c3 COLLATE RTRIM  NULLS FIRST;SELECT ALL ((((((((((rt0.c0)|(rt1.c4)))AND(((rt1.c0) IS TRUE))))AND((((rt1.c1))>=((vt0.c0))))))AND(((rt0.c4) NOT NULL))))AND(0.11317957075314788)) FROM t1, t0, rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT (0.09481500000571874 IN ()) FROM vt0 WHERE (CASE WHEN (+ (4.67647099E8)) THEN ((x'') NOTNULL) END); -- 0ms;
SELECT DISTINCT ((((rt1.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN (rt0.c1))) AND (UNLIKELY(rt0.c0))), ((((CAST(t0.c0 AS TEXT))AND('150141397')))AND(((rt1.c4)GLOB(rt1.c4)))), ((GROUP_CONCAT(rt0.c4)) ISNULL) FROM t1 WHERE (CASE ((x'') ISNULL)  WHEN (('-596542680')OR('')) THEN (((((((('')OR(x'')))AND(NULL)))OR(0.8633424949611873)))AND(7.823844E8)) WHEN CAST(x'' AS REAL) THEN ((NULL) BETWEEN (x'') AND (0.3538574137342809)) WHEN CAST(200486277 AS NUMERIC) THEN ((NULL)-('')) END);SELECT DISTINCT CAST(rtreenode(t0.c0, '1627056805') AS INTEGER) FROM rt0 LIMIT 1143372197;SELECT DISTINCT ((vt0.c0 IN (rt1.c1)) IN ()) FROM t0, vt0, rt0, t1, rt1 WHERE (((CAST(x'' AS BLOB))IS((((('855113080')AND(0Xffffffffeb67e071)))AND(x''))))); -- 0ms;
SELECT ALL (((rt0.c2 IN ())) ISNULL) FROM rt1, vt0, t1, rt0, t0 WHERE (IFNULL(load_extension(-864668056), '')); -- 0ms;
SELECT (((highlight(rt0.c3, t0.c0, vt0.c0, t0.c0)))<>((load_extension(rt0.c1)))) FROM t1;SELECT ALL t1.c69 FROM t1, vt0, rt0, t0, rt1 WHERE (((((((0.2924687056160795) IS TRUE))AND(((0.8454381263567867) IS TRUE))))AND(((0.783364309336078) BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c0) IS FALSE))OR(ROUND(rt1.c2, rt0.c3))))OR((rt0.c1 IN (rt1.c3, rt0.c4)))), CASE CASE WHEN t0.c0 THEN rt0.c0 END  WHEN (t1.c69 IN (t0.c0, rt0.c2)) THEN CAST(rt0.c2 AS REAL) WHEN ((t1.c69) BETWEEN (vt0.c0) AND (rt1.c3)) THEN ((rt1.c0)/(t0.c0)) WHEN (rt0.c2 IN ()) THEN (((rt1.c1, vt0.c0, t0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((t1.c69, rt1.c1, rt0.c0))) ELSE MAX(rt1.c1) END, ((('-1541108482', vt0.c0, rt0.c4)) BETWEEN ((GROUP_CONCAT(rt0.c2), NULLIF(rt1.c1, '-240854222'), CASE WHEN rt0.c0 THEN x'' WHEN rt0.c3 THEN rt1.c2 WHEN t1.c69 THEN rt1.c1 ELSE rt0.c2 END)) AND (((((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt0.c1))), (((t1.c69)) NOT BETWEEN ((t1.c69)) AND ((rt1.c4))), rt1.c0))) FROM rt0, t0, t1;SELECT DISTINCT LEAD(CASE (rt0.c3 IN ())  WHEN ((rt1.c0)+(rt0.c2)) THEN rt0.c0 COLLATE BINARY ELSE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) END, (~ ((('hL2CwNĜ&')OR(rt0.c2)))), ((((rt0.c2, rt1.c3, rt1.c1))>((rt1.c1, '-1442893448', rt1.c3))) IN ())) OVER () FROM rt0, t0 NOT INDEXED, rt1, vt0 WHERE (((((0X51a503a7) NOT BETWEEN (NULL) AND (0.6667096747014083))) BETWEEN (CASE 0.19134375221741096  WHEN NULL THEN 0.13246188713384566 END) AND (x'9701c0f0' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (NOT ((rt1.c2 IN ()))) FROM vt0, rt0, t0, t1 WHERE (((1632122816) NOT BETWEEN ((NOT (0.4196827887968779))) AND ((('11000122')%(x''))))); -- 0ms;
SELECT DISTINCT (((((rt0.c1)!=(rt0.c4))))>=((((rt1.c0) ISNULL)))), ((TIME(t1.c69, rt1.c3, x'')) ISNULL), ((HEX(DISTINCT rt0.c3))%(rt1.c0 COLLATE NOCASE)) FROM t0, vt0, rt0 WHERE ((((x'')) BETWEEN (('1908058935' COLLATE BINARY)) AND ((((NULL)>=('U&')))))) GROUP BY (((- (-1.710919357E9))) BETWEEN (CASE rt1.c2  WHEN rt0.c4 THEN rt1.c3 ELSE rt0.c2 END) AND (CAST(rt0.c4 AS NUMERIC))), CAST(rt1.c2 AS NUMERIC), x'a9b9', (+ (LIKELY(DISTINCT rt1.c1))), ((((rt0.c3) NOT BETWEEN (rt1.c2) AND (t1.c69)))*(CASE rt0.c4  WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c4 THEN NULL WHEN vt0.c0 THEN rt1.c3 END));SELECT ALL NTILE((rt0.c0 IN (vt0.c0)) COLLATE NOCASE) OVER (), ((((COUNT(rt0.c0))AND((- (rt0.c2)))))AND((rt0.c4 IN ()))), ((((((((rt0.c3 COLLATE RTRIM)OR((((rt0.c3, rt1.c3, rt0.c4))<((rt0.c2, rt1.c2, rt0.c0))))))AND(rt1.c4)))OR(((((((((((((t1.c69)AND(t1.c69)))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c3)))AND(t1.c69)))AND(rt0.c4)))))OR(0xffffffffb94f9b21)) FROM t0, t1, rt1, rt0, vt0 WHERE (((((0.11409024657308153)<(''))) NOT BETWEEN (('844629719' IN ())) AND ((('-485428298') BETWEEN (NULL) AND (0.0393225492090592))))); -- 1ms;
SELECT DISTINCT COUNT(rt1.c1) OVER (), (((((vt0.c0, rt0.c2, rt1.c1)) BETWEEN ((rt0.c2, rt0.c3, rt0.c4)) AND ((rt0.c3, rt1.c2, t1.c69))))LIKE(((rt0.c3) IS FALSE))), json_valid((((rt1.c1, rt0.c0, rt1.c3)) BETWEEN ((rt1.c0, rt0.c0, rt0.c4)) AND ((rt0.c0, rt1.c0, 0.5714891822112053)))), ((t1.c69 IN ()) IN ((rt0.c1 IN ()), ((rt1.c2) IS FALSE))), NTILE(((((rt1.c4)<>(rt1.c1))) ISNULL)) OVER ( ORDER BY ((t0.c0)<>(rt1.c3)) COLLATE RTRIM DESC) FROM t1, vt0, rt1;SELECT DISTINCT CASE (((0.0026127632773033094)) NOT BETWEEN ((t1.c69)) AND ((rt0.c3)))  WHEN ((('8N]\ṫ\3')) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((rt0.c2) NOT BETWEEN (t1.c69) AND ('-1315856000')) END, ((json(t1.c69))!=(((t1.c69)<(rt0.c3)))), (CAST(rt0.c4 AS INTEGER) IN ()) FROM rt1 LIMIT 933553540 OFFSET -47704388;SELECT DISTINCT (((((- (rt0.c3)))AND((rt1.c4 IN ()))))OR((+ (t1.c69)))) FROM rt0, rt1, t1, vt0, t0 WHERE ((((-1.903093547E9 IN (0Xffffffff8aaacc6a))) NOT NULL)) INTERSECT SELECT ((rt1.c1 COLLATE RTRIM)|(((rt0.c2)!=(0.024915117529756392)))) FROM t0 NOT INDEXED WHERE ((((~ ('A,u_m	&g'))) NOT NULL));SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY (((((rt1.c0))>=((rt0.c4)))) IS FALSE) DESC  NULLS LAST, ((((((t1.c69)AND(rt1.c2)))OR(rt1.c2))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))) AND (NULL COLLATE BINARY)) DESC  NULLS FIRST) FROM rt1, rt0, t1 WHERE ((NOT (0.6441321981721218)));SELECT DISTINCT vt0.c0, GROUP_CONCAT(UNLIKELY(rt1.c1)), (((((t1.c69)AND(rt0.c4)), ((rt1.c0)-(rt1.c0)), ((rt1.c4)-(rt0.c0))))=((t1.c69, ((rt0.c3) NOTNULL), ((rt1.c1) NOT NULL)))) FROM rt1, rt0, vt0, t1, t0 WHERE (((((x'', 1.952534057E9, ''))>((0.9587510149708214, NULL, 'ap'))) IN ())) ORDER BY (+ (((t1.c69) BETWEEN (rt0.c0) AND (rt1.c3)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT SUM(t0.c0), (TIME(rt0.c3, rt1.c1, rt0.c1) IN ()), UPPER((rt1.c2 IN (x'75a6'))), ((((rt0.c2)>(rt0.c1))) BETWEEN ((+ (rt0.c3))) AND (CAST(rt0.c4 AS INTEGER))), (((((((((rt0.c3 IN ()))AND(((rt0.c0)AND(t0.c0)))))AND(((rt1.c0) BETWEEN (rt0.c1) AND (t0.c0)))))OR((+ (x'')))))AND(((rt1.c1)LIKE(rt0.c0)))) FROM vt0, t0, rt0, t1, rt1 WHERE ((((UNLIKELY(0.08073264948492576), ((x'')<=('-1089352398')), (NOT (x'')), x'' COLLATE BINARY, ((0.558052014925522) NOT BETWEEN (x'') AND (x''))))>=(((NOT ('-1096611672')), ((((((((NULL)AND(x'd7d9cb1a')))AND(0.7162890710700773)))OR('8SrK')))AND(x'')), (((NULL))>=((0x16e02417))), ((NULL)*(NULL)), (((x'', NULL, x'')) BETWEEN ((NULL, '-1609048184', '(4')) AND ((4.82657863E8, 5.63960101E8, 0.6960487305459486))))))) GROUP BY ((((rt1.c0)-(rt1.c1))) NOT NULL) HAVING (+ (rt1.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT (((t1.c69 IN (rt1.c1)))=(rt1.c1)), ((CASE t1.c69  WHEN rt1.c1 THEN rt1.c2 END) IS FALSE), ((UNLIKELY(rt0.c2))+(GROUP_CONCAT(rt0.c3))) FROM vt0, rt0, rt1, t1, t0 WHERE (CASE ((((NULL)AND('899497869')))OR(0.3191942748916019))  WHEN CASE 0xfffffffff436a3b1  WHEN '0.48889168336965416' THEN 0.31595763033597024 END THEN (- (NULL)) WHEN ((6.59220901E8) BETWEEN ('') AND (NULL)) THEN (NULL IN ()) WHEN (0x4533ade8 IN ()) THEN ((-1.136950057E9) BETWEEN (NULL) AND (x'09c8')) WHEN '0.19383158642088916' COLLATE NOCASE THEN (((('0.06320393636875243')OR('')))OR(1.71474752E8)) WHEN (~ (0.5823902400585063)) THEN (('y),돔1梦,ⶅ')IS NOT('-2098936366')) END); -- 1ms;
SELECT ((((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)))OR(rt0.c4)))OR(rt1.c0)))OR(rt1.c2)))AND(((((rt1.c4)AND(rt1.c4)))AND(rt1.c2)))), COUNT((NOT (rt1.c1))) OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW), (CAST(vt0.c0 AS NUMERIC) IN ()) FROM t0, t1, rt0, rt1, vt0; -- 0ms;
SELECT (t1.c69 COLLATE NOCASE IN ()), json_array((rt0.c2 IN (0.018309701584581672, rt0.c1)), '-663676864'), LAG(((((rt1.c0)IS NOT(t1.c69)))-(((rt0.c2)<=(0.45634843742833786)))), ((((((rt1.c1)AND(t0.c0)))OR(t0.c0)))||(t1.c69)), ((CASE t1.c69  WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c1 END)/(LIKELIHOOD(rt0.c1, 0.00884734612908833)))) OVER () FROM t0, t1, rt1, rt0 GROUP BY '-1710919357' HAVING CAST(((rt1.c1)|(rt0.c4)) AS INTEGER); -- 0ms;
SELECT (- (((x'')OR(rt0.c0)))), GROUP_CONCAT(((rt1.c3)AND(vt0.c0))), ((SUM(rt0.c2)) IS TRUE) FROM t1, t0, rt1, vt0 WHERE ((((+ ('770301455'))) ISNULL));SELECT CASE CAST(t0.c0 AS BLOB)  WHEN rt1.c4 COLLATE NOCASE THEN ((rt1.c3)&(rt0.c3)) ELSE TOTAL(rt0.c3) END, CAST(rt1.c2 AS BLOB) COLLATE RTRIM, ((((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 END) AND ('8T')) FROM rt0, t1, vt0 WHERE ((((-1442125959, 0.06906832761538928, x'e07d')) BETWEEN (((((('A#')AND(NULL)))AND('暀!&帻[7')), (('') IS FALSE), CAST(0.7311579318987462 AS BLOB))) AND ((CASE WHEN 0.9037777326637354 THEN x'' WHEN NULL THEN '-172962769' WHEN 707479363 THEN '-1292816878' ELSE 0.19383158642088916 END, CAST(1788668269 AS TEXT), CASE '1888930809'  WHEN 0.7870914961619283 THEN NULL WHEN '590225190' THEN 0.0621355086295603 WHEN NULL THEN '-1034996299' END)))) LIMIT -412513787;SELECT ALL CAST(CASE WHEN t0.c0 THEN t1.c69 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END AS BLOB) FROM rt1, rt0, t1, t0 FULL OUTER JOIN vt0 ON (((('')AND(vt0.c0)))/(((rt1.c0)%(rt1.c3)))) WHERE (HEX(DISTINCT ((x'')>=(x'e13c64cc')))); -- 2ms;
SELECT DISTINCT (((rt1.c2, NULL, rt1.c2)) NOT BETWEEN ((LIKE(rt0.c0, rt1.c2), ((rt0.c3) BETWEEN (t1.c69) AND (rt1.c0)), LOWER(t0.c0))) AND ((rt0.c3, ((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)), t0.c0))), CASE (((rt1.c3, vt0.c0, rt0.c2))<>((rt0.c1, t1.c69, rt1.c4)))  WHEN json_array(rt1.c3, rt0.c2) THEN rt0.c0 END, AVG(COALESCE(vt0.c0, rt1.c1)) OVER ( RANGE  CURRENT ROW) FROM vt0, rt1, t0, rt0;SELECT ((((rt0.c4) NOT BETWEEN (t1.c69) AND (rt1.c4)))!=((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) FROM rt1, rt0, t0 WHERE ('M猄' COLLATE BINARY);SELECT DISTINCT x'256a', rt0.c2, ((SQLITE_VERSION())>(((rt1.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))), ((((rt1.c0 COLLATE NOCASE)OR((((t0.c0, rt0.c4, rt1.c3))>((rt0.c4, rt0.c0, vt0.c0))))))AND('qR信*\yao')), ((rt1.c4 COLLATE BINARY)>=(rt1.c2)) FROM t0, rt0 WHERE (((((NULL) NOTNULL)) BETWEEN (((NULL)-(0.10391767523658169))) AND ((('\rHp7ἡ') BETWEEN ('2q/ad') AND (x''))))) LIMIT 1351027124 OFFSET -161422984;SELECT ((INSTR(vt0.c0, rt0.c0)) NOTNULL), CUME_DIST() OVER (), CAST(NULL AS NUMERIC) FROM t1, rt0, t0, rt1, vt0; -- 1ms;
SELECT (('X\rld ')>>(rt1.c4)) COLLATE RTRIM, CASE WHEN ((vt0.c0)GLOB(t1.c69)) THEN ((rt0.c4) BETWEEN (NULL) AND (rt1.c1)) ELSE (((rt1.c2))>((rt0.c0))) END, (NOT (((0.8756988775667854)>(t1.c69)))), AVG(((0.8725352085128286) NOT NULL) COLLATE BINARY) OVER (), (rt1.c1 COLLATE RTRIM IN ()) FROM t0, rt0, rt1, t1;SELECT ((rt0.c0)|(t0.c0)) COLLATE RTRIM COLLATE NOCASE, (('BL*Bv}z	') NOT BETWEEN (NULL) AND ((- (x'ed96')))), TOTAL(CASE rt0.c0  WHEN rt0.c3 THEN t1.c69 ELSE t1.c69 END) OVER () FROM t0, rt1, vt0, t1, rt0 WHERE (ABS((((NULL)) BETWEEN ((NULL)) AND ((0.0863337790318528))))) GROUP BY CASE 0.17596393689964507  WHEN NULL THEN rt1.c0 WHEN CASE rt0.c2  WHEN rt1.c4 THEN t0.c0 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c1 THEN x'' END THEN rt0.c4 WHEN CASE WHEN rt1.c4 THEN rt0.c3 ELSE t1.c69 END THEN t1.c69 ELSE ((rt1.c2) IS FALSE) END HAVING ((SUM(vt0.c0)) NOT BETWEEN (((((x'7af2')AND(rt0.c3)))AND(rt0.c4))) AND (CAST(rt1.c4 AS INTEGER))); -- 0ms;
SELECT ALL TYPEOF(rt0.c2) FROM t1, vt0, rt0 WHERE (((((SQLITE_VERSION())AND(CASE WHEN x'' THEN 0.9993774290472103 WHEN 's<A否4' THEN -1.967517793E9 WHEN NULL THEN 1351027124 ELSE NULL END)))AND(SQLITE_COMPILEOPTION_USED(-0.0)))); -- 0ms;
SELECT '' FROM rt0, vt0, t0, rt1, t1; -- 0ms;
SELECT (((vt0.c0 IN ()))IS NOT(((((((((rt1.c2)AND(t0.c0)))AND(vt0.c0)))OR(0.18277506485104578)))OR(rt1.c4)))) FROM rt0 INDEXED BY i62, rt1, vt0, t0, t1 WHERE (CAST(UNICODE(NULL) AS REAL));SELECT DISTINCT ((((rt0.c4) BETWEEN (0.8947393749276427) AND (rt0.c1)))<=(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)))) FROM rt1;SELECT DISTINCT (((((rt1.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((t1.c69, 'o%*', t1.c69)) AND ((rt1.c0, vt0.c0, t1.c69)))) NOT NULL) FROM t1;SELECT DISTINCT NULL, ((rt0.c1) NOTNULL) COLLATE BINARY, (((t0.c0 IN (vt0.c0)))IS(((rt1.c0) NOTNULL))), COUNT((((rt1.c0))<=((NULL)))), SUM(CAST(rt0.c2 AS REAL)) OVER () FROM t1, t0, vt0, rt1, rt0 GROUP BY CASE ((rt1.c1) NOT NULL)  WHEN rt0.c3 THEN CASE WHEN rt1.c2 THEN rt1.c1 END END; -- 0ms;
SELECT DISTINCT ((((rt0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY FROM t0, vt0, rt1, t1, rt0 WHERE ((((-7.5986041E8 IN ())) BETWEEN ((x'0ae2' IN ())) AND (CAST('-161769629' AS BLOB)))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c1) IS TRUE) AS REAL) FROM vt0, rt0, rt1, t1, t0; -- 0ms;
