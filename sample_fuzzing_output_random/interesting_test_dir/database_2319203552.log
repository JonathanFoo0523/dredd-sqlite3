-- Time: 2024/06/07 17:56:48
-- Database: database52
-- Database version: 3.40.0
-- seed value: 2319203552
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INTEGER NOT NULL ON CONFLICT ROLLBACK CHECK ( CAST(((c0) NOT BETWEEN (0.3903454282205585) AND (c0)) AS INTEGER)) UNIQUE PRIMARY KEY AUTOINCREMENT ); -- 0ms;
CREATE TABLE t1 (c0 INT , c1 REAL , c2 INTEGER NOT NULL PRIMARY KEY ASC ON CONFLICT IGNORE UNIQUE ); -- 0ms;
UPDATE t0 SET c0=2062306314; -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (210); -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, order=ASC); -- 2ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1636027514,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -838321690);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59263'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE OR FAIL t1 SET (c1)=(x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE UPDATE OF c0 ON t1 BEGIN DELETE FROM vt0;END; -- 0ms;
PRAGMA main.optimize; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(2062306314) WHERE ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(x'') WHERE ((TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))||(((vt0.c0)|(vt0.c0)))); -- 0ms;
INSERT OR FAIL INTO t1(c0, c2) VALUES ('-2063348646', 200); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET c0=-2134884481; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (773); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL), ('4em'), (NULL); -- 1ms;
INSERT OR IGNORE INTO t1(c2, c1) VALUES (889, '-1636027514'), (851, x''), (7, ''), (384, 0.05997354049140191), (18, -838321690); -- 3ms;
UPDATE OR FAIL t0 SET (c0, c0)=(2009561298, -795982823); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ABORT vt0 SET c0=0.762369302629989 WHERE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.4132134077928594); -- 0ms;
CREATE INDEX IF NOT EXISTS i79 ON t1(((CAST(c0 AS NUMERIC))<(0Xfffffffff42d8005)) ASC,(c2 IN ()) COLLATE RTRIM DESC,((((c1)==(c0)))<=(NULL))) WHERE (((CAST(c2 AS NUMERIC)))<((c2 COLLATE NOCASE))); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (829); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.7348107837350728); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (NULL), (x'2501'), (-836793322); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27291'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-836793322,5');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 452841904); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO t1(c1, c0) VALUES (x'', ''); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(0.3903454282205585) WHERE ((t1.c2)+(t1.c2)) COLLATE RTRIM; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR ABORT INTO t0(c0) VALUES (918), (715), (391); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1, c2) VALUES (0Xffffffffce0839e6, '0.762369302629989', ''); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (578); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE t1 SET c2=2062306314, c2=-1788744185, c2=2009561298 WHERE CAST(SQLITE_COMPILEOPTION_GET(t1.c2) AS REAL); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (-2.063348646E9, 0.7388126066431666); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-1489528190); -- 0ms;
ANALYZE; -- 3ms;
INSERT OR IGNORE INTO t1(c2, c0) VALUES (948, x''), (169, -1636027514), (772, 0x66ca03e6); -- 0ms;
CREATE INDEX i73 ON t0(MAX(c0, c0, c0, c0, c0, c0) COLLATE NOCASE) WHERE c0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(0.9545443090451547, 0X4f10bd16, '\H') WHERE x'' COLLATE RTRIM; -- 0ms;
UPDATE OR FAIL rt0 SET c0='' WHERE (((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c0, 0.49058163807477195, rt0.c1))))*(CAST(rt0.c0 AS REAL))); -- 2ms;
CREATE INDEX IF NOT EXISTS i19 ON t1(CAST(CAST(c0 AS TEXT) AS NUMERIC),(~ ((((c0)) NOT BETWEEN ((c1)) AND ((c1))))) COLLATE BINARY,c1); -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(-795982823, -1832023370) WHERE ((t0.c0)=(t0.c0)) COLLATE NOCASE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1883327885,8');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=(x'', NULL, 0Xffffffffd08e4419); -- 0ms;
INSERT OR IGNORE INTO t1(c0, c1, c2) VALUES (0xffffffffa397feeb, -2.134884481E9, 652); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (754); -- 0ms;
INSERT OR REPLACE INTO t1(c2, c0) VALUES (954, 'NO'); -- 0ms;
REINDEX i79; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.threads; -- 0ms;
DROP INDEX IF EXISTS "i79"; -- 0ms;
ANALYZE; -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
REINDEX RTRIM; -- 0ms;
END; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(x'a93a'); -- 1ms;
VACUUM; -- 5ms;
INSERT OR REPLACE INTO rt0(c2, c0, c1) VALUES ('-1550319893', 0.8735081695333705, NULL), (0.4366528924598485, '0.7388126066431666', 0.7348107837350728), ('', 'W苒bXi0', x'672f'); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL), (x''), (x'5f8f'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE t1 SET c1=x''; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (262), (553), (454); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.21400525850650032); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('-1757802017'), ('7d'), ('-1883327885'), (0.6463109751384963), (-1788744185); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR ROLLBACK INTO t0 VALUES (825), (984), (956); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0x1c943a5e); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (162); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('-2063348646', '[x|/'), (59893186, '-1832023370'), (0.6039905623175312, NULL); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.6463109751384963); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(0.6965272439171439, '[x|/', '0.7388126066431666'); -- 14ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', '-1574921212'); -- 0ms;
ANALYZE i73; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1057603451);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE vt0 SET (c0)=('1326497046') WHERE (- (((vt0.c0)IS NOT(vt0.c0)))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2, c1)=(x'', x'97e4', 0.16005450628026774) WHERE (((0.22625335921598988)|(rt0.c0)) IN (((rt0.c1)LIKE(rt0.c1)))); -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40171'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2009561298,10');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO t1(c1, c2) VALUES (NULL, 60); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1574921212,3');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 6ms;
CREATE INDEX i45 ON t0((((((c0) NOT BETWEEN (c0) AND (c0))))>=((((c0) NOT BETWEEN (c0) AND (c0))))) COLLATE BINARY); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (-1757802017), ('4em'), (''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '17223'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
VACUUM; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE rt0 SET c1=NULL; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '36964'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CASE ((((t1.c1)OR(rt0.c2)))OR(t0.c0))  WHEN (((t0.c0)) BETWEEN ((t1.c0)) AND ((t0.c0))) THEN (t0.c0 IN (rt0.c2, t1.c1)) END, ((((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))<<(x'')), TOTAL(CAST(t1.c2 AS INTEGER) COLLATE BINARY) OVER () FROM t0 WHERE (LOWER(CASE WHEN 0Xfffffffff2bd7bd7 THEN 0.4756815134795135 ELSE x'a96a' END)) LIMIT -836793322 OFFSET -1874184550;SELECT ALL ((rt0.c1)|(((((((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(rt0.c0)))OR(t1.c2)))OR(rt0.c0)))AND(t0.c0)))) FROM rt0, t1 GROUP BY CAST((t1.c0 IN ()) AS BLOB), ((rt0.c1 IN (t0.c0)) IN ()), ((CASE WHEN t1.c1 THEN t0.c0 ELSE rt0.c0 END)||(t0.c0)) HAVING CAST(((t1.c2)GLOB(rt0.c0)) AS NUMERIC) LIMIT 1657985749;SELECT DISTINCT LAG(CASE WHEN CAST(t1.c1 AS INTEGER) THEN LIKELY(DISTINCT rt0.c2) END, CASE ((rt0.c0) IS FALSE)  WHEN UPPER('7d') THEN ((x'') NOT BETWEEN (t1.c2) AND (rt0.c0)) END, HEX((t1.c0 IN ()))) OVER ( RANGE BETWEEN (((rt0.c0 IN ())) ISNULL) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE TIES), ((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(t1.c2)))AND(rt0.c0)) COLLATE RTRIM, (((((rt0.c1)) NOT BETWEEN ((t1.c0)) AND (('-1106457055')))) ISNULL) FROM rt0, t0, vt0, t1 WHERE ('-222463017') LIMIT 1236694295 OFFSET -175711586;SELECT NULL FROM rt0, t0, vt0, t1; -- 0ms;
SELECT DISTINCT (- ((rt0.c1 IN (t1.c1, rt0.c1)))), ((((CAST(t1.c1 AS BLOB))OR((- (rt0.c2)))))OR((((t0.c0)) BETWEEN ((t1.c1)) AND ((rt0.c0))))), ((((rt0.c1 IN (rt0.c2))))<((CAST(rt0.c2 AS BLOB)))) FROM t0, rt0, t1, vt0 LIMIT 1656926377; -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST((((((((('1441029234')OR(t1.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)) AS TEXT)) OVER (), x'', ((CASE 0.8191533794674482  WHEN t0.c0 THEN t1.c2 ELSE vt0.c0 END) IS TRUE) FROM rt0, t1, t0, vt0 ORDER BY ((((t1.c1)) BETWEEN ((rt0.c2)) AND ((t1.c0))) IN ()) DESC; -- 0ms;
SELECT ALL CAST((((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) AS BLOB) FROM vt0, t0;SELECT ALL SUM(((((vt0.c0)AND(rt0.c1)))OR(t1.c0))) OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE NO OTHERS) FROM t1 GROUP BY ((((json_quote(vt0.c0))OR(((vt0.c0)>(rt0.c0)))))AND(CAST(t1.c1 AS TEXT))) HAVING ((CAST(t1.c0 AS NUMERIC)) IS FALSE);SELECT ALL (((t1.c2, t1.c0, t1.c0)) BETWEEN (((NOT (t1.c2)), ((rt0.c0)&(t0.c0)), ((((x'8978')OR(vt0.c0)))OR(NULL)))) AND (((- (vt0.c0)), TOTAL(rt0.c1), ((0x3f09bf7b)=(t0.c0))))) FROM vt0, rt0, t1 WHERE ((- ((('1064133')>>(NULL)))));SELECT ALL (((CAST(rt0.c2 AS INTEGER)))==((((-1.574921212E9)OR(rt0.c0))))), CAST(rt0.c0 COLLATE BINARY AS BLOB), rt0.c1 FROM t0, vt0, rt0, t1; -- 1ms;
SELECT ALL (+ (((rt0.c0)>>(rt0.c1)))) FROM rt0, vt0, t1 WHERE ((((CAST(-1.883327885E9 AS REAL)))>((((-1120567128) NOT BETWEEN ('') AND (NULL)))))); -- 0ms;
SELECT DISTINCT NTILE((~ (((((((((((((t1.c0)OR(t0.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))AND(t1.c2)))AND(''))))) OVER () FROM t1, vt0, t0 WHERE (NULLIF((NULL IN (NULL, NULL)), ((x'') NOT BETWEEN (x'63cc') AND (0.032563870446700616)))) GROUP BY (((t1.c0 IN ()))OR(vt0.c0)); -- 0ms;
SELECT ALL SUM(CASE WHEN rt0.c1 THEN rt0.c0 ELSE t1.c2 END) FROM t1, rt0, vt0 WHERE ((((NULLIF(DISTINCT 0Xffffffff83162ff1, '')))=((HEX('pUlWval'))))); -- 0ms;
SELECT DISTINCT (((t1.c1) IS TRUE) IN ()) FROM t0, vt0 NOT INDEXED, t1; -- 0ms;
SELECT ALL FIRST_VALUE((((NULL))>((t1.c0)))) OVER (), (- (COUNT(*))), COUNT(*) FROM t1 CROSS JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((((t1.c1) NOT BETWEEN (t0.c0) AND (0.49058163807477195)))) AND ((t0.c0))) RIGHT OUTER JOIN t0 ON ((((((((((((CASE WHEN t1.c0 THEN NULL END)OR(((rt0.c0) NOTNULL))))AND((((rt0.c2, t1.c2, rt0.c2)) BETWEEN ((NULL, rt0.c1, rt0.c0)) AND ((t0.c0, rt0.c2, vt0.c0))))))AND((((rt0.c2))<=((t1.c2))))))AND(((rt0.c0) IS FALSE))))OR(('-475543143' IN ()))))AND((+ (t1.c2)))) WHERE ((('811914329')OR((x'c00d' IN ('572097234')))));SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (0x62d2dad5 COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((x'32dc') IS FALSE), MAX(rt0.c1), ((rt0.c1) NOTNULL)))==((x'', ((t1.c0)IS(t0.c0)), ((((((((rt0.c0)OR(t1.c1)))OR(rt0.c0)))AND(t1.c1)))OR(t0.c0))))) FROM vt0;SELECT ((((t0.c0)>(t0.c0))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(t1.c2))) AND (CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN rt0.c1 THEN t1.c0 WHEN t0.c0 THEN t1.c1 END)) FROM t1, vt0 WHERE (CASE WHEN (('-525817831')<(-1.757802017E9)) THEN json_object(0X44f652e2, NULL) WHEN (((0.05152888405694478, NULL, NULL)) BETWEEN ((NULL, -2.22463017E8, '䋊')) AND (('0.032563870446700616', '7d', x'97c5'))) THEN CAST(0.31297497312553113 AS TEXT) WHEN MAX('-525817831', NULL) THEN CAST('ᓥ虗' AS REAL) END);SELECT ((((CASE vt0.c0  WHEN t1.c2 THEN t1.c0 END)AND(((t1.c0) ISNULL))))OR(CAST(t1.c2 AS TEXT))) FROM vt0, rt0;SELECT ALL ((COALESCE(rt0.c2, t1.c0)) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c1) AND (t1.c0))) AND (((x'8c70') IS TRUE))) FROM rt0;SELECT ((((t1.c2)>(vt0.c0)))<<('N0zW!5vId')), IFNULL(DISTINCT t1.c0 COLLATE RTRIM, ((t1.c2)<<(t1.c1))), (((x'1e2a')) NOT BETWEEN (((rt0.c2 IN ()))) AND (((~ ('0.6965272439171439'))))) FROM vt0, t0, rt0;SELECT ALL (((((((rt0.c2, t1.c2, rt0.c2, t0.c0, vt0.c0)) BETWEEN ((rt0.c0, '%Y', t1.c1, rt0.c0, t1.c2)) AND ((rt0.c1, t1.c0, rt0.c0, t1.c2, t0.c0))))OR(rt0.c2 COLLATE BINARY)))AND(MAX(rt0.c2))) FROM rt0, vt0, t1, t0 GROUP BY (((((rt0.c0)AND(t1.c0)))AND(rt0.c1)) IN (CASE rt0.c0  WHEN vt0.c0 THEN t1.c1 END)) HAVING (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((x'', (t0.c0 IN ()), MAX(t1.c0))) AND ((((((vt0.c0)OR(t1.c1)))AND(t0.c0)), json_array(vt0.c0, rt0.c2), CASE WHEN t1.c2 THEN t1.c1 WHEN t0.c0 THEN t1.c0 WHEN rt0.c1 THEN t1.c2 END))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0 WHERE (((CASE -1.98344699E8  WHEN '0.49058163807477195' THEN NULL END)LIKE(NULL))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((((((vt0.c0)OR(t1.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(t0.c0))) OVER () FROM t1, rt0;SELECT ALL (((t1.c0)) NOT BETWEEN ((((t0.c0)LIKE(rt0.c1)))) AND ((((t1.c1) ISNULL)))) FROM vt0, rt0, t1, t0 ORDER BY ((((t1.c2) BETWEEN (t1.c2) AND (t1.c2)))%(CASE t0.c0  WHEN t0.c0 THEN x'' END))  NULLS FIRST; -- 0ms;
SELECT CASE t1.c1  WHEN LIKELY(vt0.c0) THEN CASE WHEN t1.c1 THEN rt0.c2 END WHEN t1.c1 COLLATE NOCASE THEN ((((t1.c1)AND(rt0.c2)))AND(t0.c0)) WHEN 0.9188202337052936 THEN rt0.c2 COLLATE NOCASE END, ((rt0.c1 IN ()) IN (((t0.c0) BETWEEN (t1.c2) AND (t1.c0)))), json(((rt0.c2)/(t1.c1))) FROM rt0, vt0 WHERE (x'');SELECT '' FROM t0, rt0 WHERE (TYPEOF(x'' COLLATE BINARY)); -- 0ms;
SELECT (((rt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN t1.c1 ELSE t0.c0 END)) AND ((((NULL) IS TRUE)))) FROM rt0 GROUP BY CASE WHEN ((t1.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN t1.c0 COLLATE RTRIM END, (((- (rt0.c0)))>=(t1.c0)), (t1.c2 COLLATE BINARY IN ()) HAVING CASE rt0.c2 COLLATE BINARY  WHEN ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) THEN json_array_length(t1.c1, 0.19281317587519797) END;SELECT ((((rt0.c0)AND(((((t0.c0)AND(t0.c0)))AND(t1.c0)))))OR(rt0.c1 COLLATE BINARY)), ((COUNT(rt0.c2))=(CASE WHEN rt0.c1 THEN rt0.c2 END)), COUNT(vt0.c0 COLLATE NOCASE COLLATE NOCASE) FILTER(WHERE (- (((t1.c1)<>(vt0.c0))))) OVER () FROM rt0, vt0 GROUP BY ((t1.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((t1.c1)AND(t0.c0))));SELECT ((CASE WHEN rt0.c2 THEN t1.c2 WHEN rt0.c1 THEN rt0.c1 WHEN t1.c2 THEN 0.8191533794674482 ELSE rt0.c2 END)<=(CASE rt0.c1  WHEN t1.c1 THEN t1.c1 ELSE vt0.c0 END)) FROM vt0, rt0, t1, t0 WHERE ((CAST('-1120567128' AS TEXT) IN ())) GROUP BY ((((t0.c0) BETWEEN (t1.c2) AND (t1.c0)))/(((t1.c2)>=(t1.c1)))); -- 0ms;
SELECT ALL (((t0.c0 IN ())) BETWEEN (((t1.c2)-(rt0.c1))) AND (CAST(t1.c0 AS INTEGER))) FROM vt0 WHERE (IFNULL((~ ('1433359822')), CASE x''  WHEN NULL THEN 'Z~' END));SELECT DISTINCT MAX((~ (t1.c1)), (((0.629129500242302)) NOT BETWEEN ((rt0.c2)) AND ((x''))), (+ (rt0.c0)), ((t1.c2)<(t1.c0))), CAST(SUM(t1.c2) AS NUMERIC), (CASE WHEN t1.c1 THEN rt0.c1 ELSE t1.c2 END IN ()) FROM rt0, t1, t0; -- 0ms;
SELECT DISTINCT t1.c2 FROM t1, vt0, rt0, t0; -- 1ms;
SELECT DISTINCT (((vt0.c0))>((CAST(rt0.c0 AS BLOB)))) FROM t1, vt0, rt0, t0; -- 0ms;
SELECT CASE WHEN TOTAL_CHANGES() THEN ((x'')LIKE(vt0.c0)) ELSE TYPEOF(rt0.c2) END FROM t1, t0 GROUP BY SQLITE_VERSION();SELECT DISTINCT ((CAST(rt0.c2 AS INTEGER))|(CASE vt0.c0  WHEN t1.c2 THEN rt0.c2 END)) FROM t1, vt0 WHERE (CAST((x'68854bc0' IN ()) AS REAL));SELECT ALL (rt0.c1 COLLATE RTRIM IN ()) FROM t0, vt0, rt0, t1 WHERE ((((((x''))>((0X3d4456d3)))) NOT BETWEEN (((((((((0.1446278501354985)OR(NULL)))AND(NULL)))OR(0.9545443090451547)))OR('1326497046'))) AND (((NULL) BETWEEN (x'7645') AND ('1156993762'))))); -- 0ms;
SELECT ((rt0.c0 COLLATE NOCASE) BETWEEN (((((rt0.c1)AND(t0.c0)))OR(1272332721))) AND (((t1.c1) IS TRUE))) FROM t1 WHERE ((((((('-219409233')<<(x'')))AND(((('')) NOT BETWEEN (('')) AND ((x''))))))AND(((NULL)AND(x'')))));SELECT DISTINCT 'B& 9-', ((((((((rt0.c2)OR((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t0.c0))))))OR(((vt0.c0) BETWEEN (0X3064d459) AND (rt0.c1)))))OR(((x'')<=(t1.c1)))))OR(CAST(t1.c0 AS BLOB))), NULL FROM vt0, t0, rt0, t1; -- 0ms;
SELECT ALL ((((rt0.c2) IS TRUE))AND(UNLIKELY(t1.c1))), GROUP_CONCAT(rt0.c0), NULL, ((t1.c2 IN ()) IN (((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))), COUNT(((rt0.c0) BETWEEN (t1.c1) AND (rt0.c2)) COLLATE RTRIM) FROM vt0, t0 INDEXED BY i19, t1 WHERE ((CASE 0.49058163807477195  WHEN x'' THEN NULL WHEN '^' THEN x'' WHEN x'' THEN 0.6818252974153218 ELSE '䋊' END IN ()));SELECT ALL rt0.c0 FROM t0 ORDER BY ((((t1.c1)%(rt0.c0)))GLOB(rt0.c2 COLLATE RTRIM)) ASC  NULLS FIRST;SELECT ALL CASE (((t1.c0, t1.c1, vt0.c0)) NOT BETWEEN ((t1.c2, t0.c0, t1.c2)) AND ((vt0.c0, t1.c0, rt0.c0)))  WHEN (t1.c0 IN ()) THEN CAST(t1.c1 AS REAL) WHEN NULL THEN t0.c0 WHEN (rt0.c1 IN ()) THEN CAST(rt0.c1 AS TEXT) WHEN CASE WHEN rt0.c0 THEN t1.c0 ELSE rt0.c0 END THEN rt0.c0 WHEN ((rt0.c2) IS TRUE) THEN t1.c2 COLLATE BINARY ELSE CASE t1.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END END FROM t0, vt0;SELECT DISTINCT CAST(TOTAL(rt0.c1) AS INTEGER) FROM t1, vt0, rt0 WHERE (0.7375750710374589) GROUP BY (((((rt0.c2) IS FALSE), ((vt0.c0) IS TRUE), ((rt0.c2) IS TRUE), (((t1.c0, t1.c2, ''))<=((rt0.c0, rt0.c0, t1.c2))), ((t0.c0)=(vt0.c0))))<=(((((vt0.c0, t1.c0, rt0.c2))>=((rt0.c2, rt0.c2, vt0.c0))), '嗎9῎3[c6䰊8', ((((((((t1.c1)OR(NULL)))OR(t1.c0)))AND(t1.c0)))OR(t0.c0)), '+a\r iu-', ((rt0.c2) IS FALSE)))), (UPPER(DISTINCT t1.c0) IN ()), ((((rt0.c1) NOTNULL))/(((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c2)))) HAVING (~ (((((rt0.c0)AND(t1.c2)))OR(t1.c0))));SELECT t1.c2 FROM t0, t1, vt0, rt0 WHERE (CAST((NULL IN (x'2547', NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END WHEN (t1.c1 IN (t1.c2)) THEN ((t1.c0)!=(rt0.c1)) WHEN ((vt0.c0)<=(t1.c2)) THEN t0.c0 COLLATE RTRIM ELSE t0.c0 COLLATE BINARY END, LEAD('㚚m', vt0.c0, ((vt0.c0) IS TRUE) COLLATE BINARY) OVER (), NTILE((('|3') BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END) AND (rt0.c2 COLLATE BINARY))) OVER ( PARTITION BY (((vt0.c0 COLLATE BINARY))>((((rt0.c0)>=('G'''))))), (+ (vt0.c0)) COLLATE BINARY) FROM rt0, vt0, t0 WHERE (CAST(((((184528393)AND(NULL)))AND(NULL)) AS TEXT));SELECT DISTINCT (((rt0.c0 COLLATE RTRIM))>((NULL))) FROM rt0, t0, vt0, t1 WHERE (((((0.8813446842364224)>=(0.9288690281481145)))GLOB(CASE WHEN '' THEN 0.6818252974153218 WHEN 'ᓥ虗' THEN x'' WHEN -2.095697935E9 THEN NULL ELSE '1236694295' END))) ORDER BY (((t1.c0)%(vt0.c0)) IN (CAST(rt0.c0 AS REAL))) ASC  NULLS LAST; -- 0ms;
SELECT ALL ((('0.7348107837350728', rt0.c2, t1.c2)) BETWEEN ((TRIM(DISTINCT vt0.c0, t1.c1), ((rt0.c1) IS TRUE), MAX(rt0.c1))) AND (((t1.c0 IN ()), COUNT(*), rt0.c0))) FROM t0;SELECT ((CAST(vt0.c0 AS BLOB))OR(t1.c2)) FROM t0 WHERE ((~ (-580510835 COLLATE NOCASE)));SELECT json_remove(t0.c0, vt0.c0 COLLATE RTRIM, (t1.c2 IN (t1.c2)), ((((t1.c0)OR(rt0.c1)))AND('1812183002')), ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(0.38140563198481514)), UPPER(t1.c1)) FROM vt0, t1;SELECT DISTINCT (((((t1.c1))<((rt0.c0)))) BETWEEN ((- (t1.c0))) AND (LOWER(t1.c0))), ((t1.c1) IS FALSE) COLLATE RTRIM, rt0.c1 FROM vt0, t0 WHERE (TRIM(DISTINCT (('1812183002') NOT BETWEEN (0.3573111168140777) AND (0.8565137639296982))));SELECT DISTINCT json_type(((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2))) FROM t0, rt0 GROUP BY rt0.c2 HAVING ((rt0.c0)GLOB(rt0.c2)) COLLATE NOCASE LIMIT -528330383 OFFSET -307049797;SELECT ALL CAST(0.1446278501354985 AS INTEGER), ((((t0.c0) BETWEEN (x'8793') AND (vt0.c0)))=((vt0.c0 IN ()))), MAX(NULL) COLLATE BINARY FROM rt0, t0, t1 WHERE (((NULL) IS TRUE) COLLATE BINARY);SELECT ALL (NOT (((x'')|(t1.c1)))) FROM vt0 WHERE (((((('\n') NOT BETWEEN ('bꠙ4뽑CjO') AND ('FALSE'))))<((((((0.629129500242302)AND(NULL)))AND(x'018f'))))));SELECT ALL (rt0.c0 COLLATE NOCASE IN ()), ((t0.c0)|(rt0.c2)) COLLATE BINARY, CAST(((rt0.c1)GLOB(t1.c2)) AS INTEGER) FROM vt0 WHERE (TRIM(DISTINCT (x'd2c51e59' IN ('1272332721')), ((NULL) IS FALSE)));SELECT (((t1.c0)) BETWEEN ((AVG(t1.c1))) AND ((t1.c2 COLLATE BINARY))), LEAD(CASE WHEN CASE WHEN t1.c0 THEN rt0.c1 ELSE t1.c2 END THEN 0.611212032337995 WHEN (- (vt0.c0)) THEN t1.c1 WHEN ((((t1.c2)OR(t1.c0)))AND(']Sl')) THEN (t1.c0 IN ()) END, ((LIKE(t1.c2, rt0.c1)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((((t1.c1))<>((rt0.c0))))), ((((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2))) BETWEEN (((rt0.c1)IS(rt0.c0))) AND (vt0.c0))) OVER (), (((~ (''))) BETWEEN ((+ (t0.c0))) AND (PRINTF(t1.c0, t1.c1, 49459322))) FROM t1, rt0, vt0 LIMIT 1326497046;SELECT (NOT ((rt0.c2 IN (rt0.c0, rt0.c1)))) FROM t1;SELECT DISTINCT ((((((vt0.c0)<(t1.c0)))OR((- (t1.c1)))))OR(t1.c2 COLLATE BINARY)) FROM vt0, t1, rt0 WHERE ((((NULL, '-1053129070', '1272332721')) NOT BETWEEN (((('*	')<=('')), (NULL IN (x'')), ((((0.03758728222301533)OR('811914329')))OR(NULL)))) AND ((((x'') IS FALSE), ('-795982823' IN ()), (0.4452264491664626 IN ()))))) ORDER BY ABS(DISTINCT (- (0.3903454282205585)))  NULLS FIRST, (((((((((t1.c2 IN ()))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c2)))))OR(((((((((x'')OR(t1.c0)))OR(rt0.c0)))OR(t0.c0)))OR(rt0.c0)))))OR(-795982823)))OR(rt0.c2));SELECT DISTINCT NTILE(json_quote(((((((((rt0.c2)OR(rt0.c0)))AND(x'')))AND(rt0.c0)))OR(t1.c2)))) OVER ( ORDER BY CHANGES()  NULLS FIRST) FROM t1, vt0, rt0 FULL OUTER JOIN t0 ON 0.8750743850363889 WHERE (((((NULL)<(-1.788744185E9)))GLOB(('᫓se' IN ())))) ORDER BY ((((rt0.c1)) BETWEEN ((t1.c1)) AND ((vt0.c0))) IN ()); -- 0ms;
SELECT (- ((('(7') IS FALSE))), (('572097234')*(((rt0.c1)=(t1.c0)))), CAST(((t1.c2) NOTNULL) AS INTEGER) FROM rt0, vt0, t0 WHERE (x'');SELECT (('0.032563870446700616') IS FALSE), (+ (TYPEOF(DISTINCT rt0.c2))), (((0X49b4d1f5)%(t1.c2)) IN (((((t1.c2)AND(t1.c1)))AND(t1.c2)))), IFNULL(((t0.c0)*(t1.c2)), CASE t1.c1  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c2 ELSE t1.c0 END), UNICODE(((((((((t1.c0)OR(t1.c2)))AND(rt0.c1)))AND(x'577de81c')))AND(t1.c1))) FROM t0 WHERE ((((('184528393')/(NULL))) NOT BETWEEN (CASE WHEN 0.5538002395422852 THEN NULL WHEN 0.3855027730250865 THEN NULL WHEN 0.4452264491664626 THEN 0.9654743353214347 END) AND (((('嗎9῎3[c6䰊8', NULL, 'Wⵆ|')) NOT BETWEEN ((x'', 0.35688456332391283, x'')) AND ((x'c6d3', '-525817831', NULL))))));SELECT ALL (((rt0.c0 IN (t1.c0, rt0.c1))) IS TRUE) FROM rt0, t1, vt0 WHERE ((((0.8467142621267418) IS TRUE) IN ((('*-9>~^뺻\rq') IS TRUE)))); -- 0ms;
SELECT ((DATE(t1.c0, rt0.c1, rt0.c0))==(((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM t0, vt0;SELECT DISTINCT AVG(CAST(t1.c1 AS TEXT)), COUNT(*) OVER (), ((t1.c2)&(t1.c2)) COLLATE BINARY FROM t1, rt0; -- 1ms;
SELECT ((MAX(rt0.c1))>=(t1.c2)), (((((t1.c0 IN (t1.c1)))AND(((rt0.c1)!=(t1.c2)))))OR(x'')), ROW_NUMBER() OVER ( GROUPS  CURRENT ROW) FROM rt0 INDEXED BY i73, t1, t0 WHERE ((NOT (CAST(0.06639442631274806 AS BLOB)))) GROUP BY (vt0.c0 IN ()) COLLATE BINARY, CASE ((rt0.c1)||(rt0.c2))  WHEN vt0.c0 COLLATE NOCASE THEN (((rt0.c0))<>((t1.c0))) END, rt0.c1 HAVING (0.9883277894319444 IN ());SELECT DISTINCT CASE WHEN ((rt0.c2) ISNULL) THEN CASE t1.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t1.c1 WHEN rt0.c0 THEN t1.c1 END WHEN CAST(t1.c1 AS INTEGER) THEN CASE WHEN t0.c0 THEN x'4632' WHEN rt0.c2 THEN t1.c2 WHEN t0.c0 THEN t1.c1 WHEN t1.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE t0.c0 END THEN CAST(vt0.c0 AS INTEGER) ELSE (rt0.c2 IN ()) END FROM vt0, t0, t1, rt0 GROUP BY ((((((rt0.c2)AND(t1.c2)))AND(t1.c2)))*(rt0.c1 COLLATE BINARY)); -- 0ms;
SELECT (((((('184528393')OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (UPPER(0.5819311576496117)) AND ((((t1.c1)) BETWEEN ((rt0.c2)) AND ((t1.c1))))) FROM t1, rt0; -- 0ms;
SELECT ALL rt0.c1 FROM t0, t1, vt0, rt0 WHERE (((((0.820456817109367)GLOB(NULL)))==(((NULL)OR(1.656926377E9))))); -- 0ms;
SELECT ALL CAST((t1.c0 IN ()) AS TEXT) FROM t1 WHERE (NULL) LIMIT 659440162; -- 0ms;
SELECT rt0.c1, CASE ((t0.c0)=(rt0.c2))  WHEN rt0.c1 THEN (t1.c1 IN (t1.c2)) ELSE ((t0.c0)AND(rt0.c0)) END, ((~ (t1.c1)) IN (t0.c0 COLLATE BINARY)) FROM rt0, vt0, t0, t1; -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((- (rt0.c1))) AND (CAST(NULL AS NUMERIC))), ((('s済' IN (t1.c2))) BETWEEN ((vt0.c0 IN ())) AND (((((rt0.c2)AND(vt0.c0)))AND(t1.c0)))), (NOT (((NULL) NOT BETWEEN (rt0.c0) AND (t1.c1)))) FROM t1, rt0, vt0 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN (json_object('1057603451', 'uH^p6MOﲡG', x'', NULL)) AND (CASE WHEN x'2764' THEN 0.5312765696895655 ELSE 0.6999719897168165 END)));SELECT DISTINCT LTRIM(CASE rt0.c2  WHEN rt0.c2 THEN t1.c1 END) FROM vt0;SELECT rt0.c2 FROM t0 WHERE (((((x''))=((NULL))) IN ()));SELECT ALL (((vt0.c0)<=(rt0.c0)) IN ()), (- (t0.c0 COLLATE NOCASE)), TRIM(DISTINCT ((t1.c2)AND(rt0.c2))) FROM t0, t1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE)) NOT NULL) FROM rt0, t0;SELECT DISTINCT rt0.c1 COLLATE RTRIM FROM vt0, t1, t0, rt0 WHERE (DATE((((x'5fd2')) NOT BETWEEN ((5.9893186E7)) AND ((0.810241566971906))), ('TRUE' IN ()), (+ (0.762369302629989)), (('-1734834762') NOT NULL), (('')<(NULL)))); -- 0ms;
SELECT ALL (('2036022691') IS TRUE), '763539622', ((AVG('-803453526'))+(GROUP_CONCAT(rt0.c2))) FROM t0, vt0;SELECT ABS(((t1.c0)*(rt0.c1))) FROM rt0, t1, vt0 WHERE ((((UNICODE('U')))!=(((((('866319521')OR(806556140)))OR(NULL)))))); -- 0ms;
SELECT ALL TOTAL(CHAR(t1.c2)) FROM rt0 WHERE ((+ ((('K|''v') NOTNULL)))) GROUP BY ((CAST(vt0.c0 AS INTEGER))OR((((t1.c1))<>((t1.c2))))) HAVING NULL;SELECT DISTINCT AVG(LIKELY(t0.c0)) FILTER(WHERE NULL) OVER () FROM vt0, t1 WHERE (((UPPER(1599533070))IS NOT((((0.7114694943019299))>=(('-580510835'))))));SELECT ALL ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN ((((t1.c2, vt0.c0, x''))<((t0.c0, rt0.c2, t1.c1)))) AND ('Y+')), (((t0.c0)) NOT BETWEEN (((~ (t1.c0)))) AND ((CAST(NULL AS NUMERIC)))), ((rt0.c1 IN ()) IN ()), (((vt0.c0, NULL, t0.c0)) BETWEEN ((CASE WHEN x'' THEN rt0.c1 END, rt0.c1 COLLATE RTRIM, ((t0.c0)|(rt0.c1)))) AND ((TYPEOF(vt0.c0), ((((t0.c0)AND(t1.c0)))OR(t1.c0)), CASE '1657985749'  WHEN t1.c0 THEN rt0.c1 END))), ((((LIKELIHOOD(rt0.c0, 0.07059747446106379))OR(((rt0.c0)/(rt0.c0)))))OR(CHAR(rt0.c1))) FROM t0, t1 WHERE (((((LIKELY('v\r'))OR((((x'')) BETWEEN ((x'db49')) AND ((NULL))))))AND(((NULL)=(''))))) GROUP BY json_insert(NULL, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((((((((t1.c0)AND(t1.c0)))OR('鋪RsC_n\+')))AND(t1.c2)))OR(t1.c0)), ((t0.c0)>(x'1c69')), '-1617605106'), ((((t1.c0) NOT NULL))>=(t1.c1 COLLATE BINARY)), (CASE vt0.c0  WHEN t1.c0 THEN t1.c2 WHEN 0X5a4a40ba THEN vt0.c0 WHEN rt0.c1 THEN t1.c0 ELSE t1.c0 END IN (t1.c2 COLLATE NOCASE)), (((rt0.c1 IN ())) IS TRUE), ((HEX(t1.c0))>=(CAST(t0.c0 AS INTEGER))) HAVING ((rt0.c1)IS NOT(load_extension(t0.c0, 0.679969347231479)));SELECT DISTINCT ((((rt0.c2 COLLATE NOCASE)OR(COUNT('cu'))))AND(rt0.c2)) FROM vt0, rt0, t1 WHERE (((((NULL) BETWEEN (0.5538002395422852) AND (x'9ead'))) IS FALSE)); -- 0ms;
SELECT ALL ((((t1.c1) IS TRUE))OR(rt0.c0 COLLATE BINARY)), (((SUM(t0.c0)))<=((CAST(t1.c1 AS REAL)))), t1.c2, (((rt0.c0 IN ()))LIKE((((rt0.c1, '-1437963595', t0.c0))>((t1.c0, rt0.c1, rt0.c0))))), FIRST_VALUE(((((vt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c0))) NOT BETWEEN (((t1.c1) IS TRUE)) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND ((0.8647551887946551) IS FALSE) FOLLOWING) FROM rt0, t1, vt0 WHERE ((((((NULL))=(('yY')))) IS TRUE)) GROUP BY (((t1.c2 COLLATE BINARY))<>((LIKELY(DISTINCT t1.c0)))) HAVING '(7';SELECT ALL (~ (((t1.c0)>(rt0.c2)))) FROM vt0, t0, rt0 WHERE ((('2009561298' COLLATE NOCASE) NOT BETWEEN (((0.1471890700420142) BETWEEN (-1.636027514E9) AND ('586597323'))) AND ((~ ('so'))))) LIMIT -1285745435;SELECT DISTINCT x'', NULL, CAST(t1.c0 AS TEXT) COLLATE BINARY FROM t1 ORDER BY ((((((((((((((x'8b0a')OR(t0.c0)))OR(t1.c0)))OR(rt0.c2)))OR(t1.c2)))OR(t0.c0)))OR(rt0.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))) AND (((t1.c2) IS TRUE)));SELECT DISTINCT (t1.c0 IN ()) FROM vt0, t1, t0 WHERE (((NULL)*(x'')) COLLATE NOCASE) LIMIT -755299915; -- 0ms;
SELECT ALL CAST(ABS('LXl') AS INTEGER), ((((t0.c0)+(vt0.c0))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (COALESCE(t1.c0, rt0.c2))), CAST((t1.c1 IN ('')) AS BLOB) FROM rt0, t0 WHERE (0.9624266708803079) ORDER BY t0.c0  NULLS FIRST;SELECT DISTINCT TRIM(DISTINCT CAST(t1.c0 AS INTEGER)), ((((((((rt0.c2)OR(rt0.c1)))AND(t1.c1)))AND(((((rt0.c2)AND(rt0.c0)))AND(x'')))))AND((vt0.c0 IN ()))), COUNT(*), (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN (CAST(x'' AS BLOB), ((NULL) NOT NULL))), json(vt0.c0) COLLATE BINARY FROM rt0, t0, t1, vt0 WHERE ((((~ (x'')))-(((x'')*(-1.757802017E9))))); -- 1ms;
SELECT ALL PRINTF((NOT (479476318))), COUNT(*), (+ (t1.c1)), ((((rt0.c0)=(t0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((x'')) AND ((t1.c0)))) AND (((rt0.c2)%(rt0.c0)))), ((LIKELY(rt0.c1)) IS FALSE) FROM t1, t0 LIMIT 480505389;SELECT DISTINCT (((t1.c1) IS TRUE) IN ()), ((((rt0.c1) ISNULL)) BETWEEN (((vt0.c0)OR(t1.c0))) AND (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))), (((t0.c0)) BETWEEN ((t1.c0)) AND ((t0.c0))) COLLATE NOCASE, ((rt0.c1) BETWEEN (t1.c0) AND (rt0.c2)) COLLATE BINARY COLLATE NOCASE, LAST_INSERT_ROWID() FROM vt0 WHERE (CASE (((('598865750')AND(NULL)))AND(x''))  WHEN ((((0x44f652e2)AND(586597323)))AND(0X77ecce90)) THEN NULL COLLATE RTRIM ELSE (~ (0.7236321368204954)) END);SELECT DISTINCT ((((((((((t0.c0) IS TRUE))OR((((t0.c0, rt0.c0, rt0.c0))!=((t1.c0, rt0.c0, t1.c1))))))OR(((((((((t1.c2)OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))))AND(9223372036854775807)))OR(((t1.c2) ISNULL))) FROM t1, vt0, t0 WHERE (x'');SELECT DISTINCT '' FROM t0, t1 INDEXED BY i19, vt0 ORDER BY CAST((+ (rt0.c0)) AS INTEGER);SELECT DISTINCT TOTAL(((t0.c0) IS TRUE)) OVER (), CASE WHEN TRIM(rt0.c0, x'9002') THEN CASE t0.c0  WHEN t1.c2 THEN rt0.c0 ELSE t1.c0 END END, '-794961183' FROM t1, rt0, t0 WHERE ((0.1867290739044315 IN ()) COLLATE NOCASE) ORDER BY '1108775618' ASC  NULLS FIRST, UNLIKELY(DISTINCT (NOT (vt0.c0)));SELECT (((vt0.c0 IN (t1.c1, t1.c2)))||(((t0.c0) BETWEEN (rt0.c0) AND (t1.c0)))) FROM t0, vt0, t1 GROUP BY (((t1.c1)) NOT BETWEEN ((LIKELIHOOD(t1.c1, 0.8066099122309078))) AND ((CASE t1.c0  WHEN t1.c0 THEN '1236586997' WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 END))) HAVING ((((t1.c2)>(t1.c2))) BETWEEN (((t1.c1)IS NOT(vt0.c0))) AND (rt0.c0));SELECT CAST(((t0.c0) IS FALSE) AS REAL) FROM vt0, rt0, t1 WHERE (((((CAST('1272332721' AS TEXT))OR((((x'0855')) BETWEEN (('LXl')) AND (('-2095697935'))))))AND(CASE 0x78822b20  WHEN '' THEN x'c6e9' WHEN 0.402975610805666 THEN x'161a' WHEN x'' THEN 0.9560294645358399 END)));SELECT x'' FROM vt0, t0, t1 WHERE (((((0.479085503098605) NOT BETWEEN (NULL) AND (0.3855027730250865))) NOT BETWEEN (x'') AND ('2009248103'))); -- 0ms;
SELECT DISTINCT (('47878890') ISNULL) FROM t1, vt0, rt0, t0 WHERE ((NOT (CAST('1514815674' AS REAL)))) ORDER BY rt0.c2 COLLATE RTRIM  NULLS LAST, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL); -- 0ms;
SELECT DISTINCT t1.c1, (((t1.c2 IN ())) BETWEEN (((((t1.c2)OR('598865750')))OR(rt0.c0))) AND (((rt0.c2) IS FALSE))), rt0.c0, (((rt0.c1 IN (t1.c1, rt0.c1))) ISNULL), ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY FROM vt0;SELECT DISTINCT ((t1.c0)GLOB(rt0.c2)) COLLATE NOCASE, CAST((~ (t1.c1)) AS BLOB), AVG(((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0))) FROM vt0, t1;SELECT ALL (- (t1.c0 COLLATE BINARY)) FROM rt0, t0 WHERE (((CASE x''  WHEN x'' THEN '-1550319893' WHEN '-175711586' THEN NULL WHEN '1057603451' THEN '-803453526' ELSE NULL END) NOT BETWEEN ((NOT (x''))) AND (NULL)));SELECT DISTINCT CASE (((t1.c1, t1.c0, t1.c2))>=((t1.c1, t0.c0, t1.c2)))  WHEN '' THEN (((('1433359822')AND(rt0.c0)))AND(rt0.c1)) WHEN rt0.c0 THEN ((((((((t0.c0)OR(t1.c0)))OR(t1.c1)))AND(t0.c0)))AND(t1.c1)) WHEN t1.c1 THEN ((rt0.c1) NOTNULL) END FROM rt0 WHERE (CAST((+ ('\H')) AS REAL)) GROUP BY ((((t1.c2)|(0Xffffffff8f18aca3)))/(CASE rt0.c1  WHEN rt0.c2 THEN '-842405003' END)) HAVING t1.c0;SELECT DISTINCT CAST(((((rt0.c2)OR(t1.c2)))OR(t1.c1)) AS NUMERIC) FROM t0 GROUP BY (((rt0.c1 IN ())) BETWEEN (((rt0.c0) NOTNULL)) AND (((t1.c2) NOT BETWEEN (rt0.c1) AND (t0.c0))));SELECT ALL '-1894208349' FROM rt0 ORDER BY ((((((((CAST('50246322' AS INTEGER))AND(t1.c1 COLLATE RTRIM)))AND((- (t1.c2)))))OR(ABS(t1.c1))))AND(t1.c1 COLLATE NOCASE));SELECT DISTINCT (((NULL))<=((COUNT(*)))), CASE 0.9831436078265995  WHEN ((t1.c0)|(t1.c2)) THEN rt0.c1 COLLATE RTRIM ELSE (((NULL)) BETWEEN ((rt0.c1)) AND ((t1.c2))) END, CAST((rt0.c0 IN ()) AS INTEGER), (~ (((rt0.c1)OR(rt0.c0)))), CAST((~ (vt0.c0)) AS REAL) FROM t0, vt0 WHERE (((((NULL) NOT NULL))<=(CASE WHEN x'' THEN '-1457651171' END)));SELECT DISTINCT ((COUNT(t0.c0)) BETWEEN ((((t1.c1)) NOT BETWEEN ((rt0.c2)) AND (('1272332721')))) AND ((- (rt0.c1)))) FROM rt0, t1 WHERE (((CASE 'SH쾼ᐩoB'  WHEN x'fbfc' THEN 0.5093466900176135 WHEN NULL THEN '*	' WHEN NULL THEN NULL END) NOTNULL)) GROUP BY ((rt0.c2 COLLATE BINARY)+(rt0.c2 COLLATE BINARY)), (((CAST(rt0.c2 AS REAL), 0.5538002395422852, ((t1.c2)<>(t1.c2))))>((((t0.c0)==(vt0.c0)), ((rt0.c2) IS TRUE), ((NULL)%(t0.c0))))), (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0 COLLATE NOCASE))) HAVING ((((x'')<>(vt0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c0) BETWEEN (t0.c0) AND (t1.c2))));SELECT ALL ((((((t1.c2)AND(vt0.c0)))OR(t1.c1))) BETWEEN ((- (rt0.c2))) AND (rt0.c1 COLLATE BINARY)), ((rt0.c0) NOT BETWEEN ((t1.c1 IN ())) AND (rt0.c1 COLLATE NOCASE)), (((((t1.c2))<=((t1.c0))))>>((-1489528190 IN (t0.c0)))) FROM t1, t0, vt0 WHERE ((((((x'6e2c')) NOT BETWEEN ((x'')) AND (('2025566415'))))<('(7')));SELECT DISTINCT ((((rt0.c0)AND(vt0.c0)))GLOB(SUM(t1.c0))), PERCENT_RANK() OVER (), x'a474' FROM t1, t0, vt0, rt0; -- 0ms;
SELECT ALL (- (((rt0.c1) ISNULL))), MAX(((((t1.c0)AND(rt0.c1)))AND(t1.c0))), (((((t0.c0, t1.c0, x'')) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t0.c0, t0.c0, t1.c1)))) ISNULL) FROM t0 WHERE (((((((NULL) NOT BETWEEN (NULL) AND (0.5123248752668355)))AND(CAST(x'844c' AS NUMERIC))))OR(((x'c644039a')!=(x'f996')))));SELECT DISTINCT CAST(t0.c0 COLLATE RTRIM AS TEXT), ((CASE WHEN t1.c2 THEN rt0.c2 ELSE t1.c2 END)!=(((((t1.c2)AND(rt0.c0)))OR(vt0.c0)))), (- (LOWER(''))) FROM t0, vt0, t1, rt0 WHERE (CASE WHEN GLOB('gT', '2047938954') THEN ('482463676' IN (NULL)) END) GROUP BY ((((t1.c1)%(rt0.c0))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c0 END) AND (rt0.c1 COLLATE RTRIM)); -- 0ms;
SELECT ALL TOTAL(((rt0.c1) NOT BETWEEN (x'b565') AND (x''))) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS), '-823838185', (+ (((rt0.c1) NOT NULL))) FROM rt0, vt0, t0, t1 WHERE ((~ (((0xffffffffb58c357a) IS FALSE)))); -- 1ms;
SELECT ALL COUNT(*) OVER () FROM t1 WHERE (((('|3')) NOT BETWEEN ((x'' COLLATE BINARY)) AND ((json(x'ef7a'))))) ORDER BY ((t1.c1 COLLATE NOCASE)/((~ (t0.c0))));SELECT ((((rt0.c2)<=(t0.c0))) BETWEEN (((((((((t1.c0)OR(rt0.c0)))AND(t1.c1)))AND(rt0.c1)))AND(t0.c0))) AND (rt0.c2)) FROM t0, rt0, t1 FULL OUTER JOIN vt0 ON MIN(0.8955079191292385, CASE vt0.c0  WHEN t1.c2 THEN vt0.c0 WHEN -4.75543143E8 THEN vt0.c0 WHEN t1.c2 THEN NULL ELSE t1.c0 END) WHERE ((((NOT (328154268))) NOT BETWEEN ((- (NULL))) AND (((-653603313) NOTNULL)))); -- 0ms;
SELECT DISTINCT (rt0.c2 IN ()) COLLATE BINARY FROM t0 INDEXED BY i19;SELECT load_extension(((((t1.c1)OR(rt0.c0)))AND(rt0.c1))) FROM vt0 NOT INDEXED, t1, t0, rt0 GROUP BY ((((t1.c2) NOT BETWEEN ('') AND (t1.c1)))||(((rt0.c0)/(NULL)))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS BLOB))AND(((t1.c1)%(t1.c2)))), vt0.c0, GROUP_CONCAT(MIN(0.8092229876186898)) FROM t1, t0, rt0 WHERE (((CAST(x'' AS NUMERIC))%((((((((('')OR(NULL)))OR('+a\r iu-')))AND(0.6976230571264724)))OR('-548135928')))));SELECT ALL TOTAL(((NULL)/(rt0.c0))) OVER () FROM vt0 WHERE ((~ (CAST(834654240 AS BLOB)))) GROUP BY ((t1.c1) NOT NULL) COLLATE RTRIM, ((((((rt0.c2, rt0.c0, rt0.c1))=((t0.c0, '-198344699', t1.c0)))))>(((t1.c1 IN ())))), ((NULL) IS TRUE) ORDER BY ((((rt0.c1)IS(t1.c2))) NOT BETWEEN (((t1.c1)*(t1.c2))) AND (((vt0.c0) IS TRUE))) ASC, CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM DESC;SELECT DISTINCT t0.c0 COLLATE BINARY FROM t0, vt0, t1, rt0; -- 0ms;
SELECT RANK() OVER ( ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((0.9493411733105189))))/(((((rt0.c1)AND(rt0.c2)))AND(t1.c2)))) DESC  NULLS LAST), ((CAST(t1.c2 AS TEXT)) ISNULL), ((((((rt0.c0) NOT BETWEEN (t1.c2) AND (t1.c1)))OR(COUNT(rt0.c0))))AND(((vt0.c0)|(rt0.c0)))), AVG(((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))), (- (t1.c2 COLLATE RTRIM)) FROM t0, rt0;SELECT DISTINCT CAST((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) FROM t0, t1, rt0, vt0 WHERE (((((((x'')OR('586597323')))AND(0.31297497312553113))) BETWEEN ('KFqD') AND (LIKELY(NULL)))) ORDER BY ((((((rt0.c2)OR(t0.c0)))AND(rt0.c2)))IS NOT(((((vt0.c0)AND(x'')))AND(rt0.c2)))) DESC; -- 0ms;
SELECT DISTINCT CASE WHEN CASE t1.c1  WHEN NULL THEN rt0.c0 ELSE rt0.c2 END THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c2))) WHEN (((rt0.c2, -251639029, t0.c0))>((vt0.c0, rt0.c2, t0.c0))) THEN CAST(t1.c1 AS REAL) WHEN ((t1.c2)IS NOT(1572517074)) THEN CAST(t0.c0 AS TEXT) END, ((CAST(1.156993762E9 AS NUMERIC)) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (TOTAL(vt0.c0))), CAST(vt0.c0 AS NUMERIC) FROM vt0, t1, rt0, t0 WHERE (((((0.3918782575380527) IS FALSE)) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((SUM(t0.c0))AND(((vt0.c0) NOTNULL))))OR(((rt0.c2)==(t0.c0)))) FROM rt0, t1;SELECT DISTINCT CAST(((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0)) AS TEXT) FROM rt0, t0, vt0 WHERE ((((0.9694445030509513) NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) BETWEEN (rt0.c1) AND (t1.c1)))) FROM rt0, vt0, t1; -- 0ms;
SELECT ALL ((rt0.c1)>>(t1.c1)) COLLATE RTRIM FROM t1 NOT INDEXED, rt0, vt0, t0; -- 0ms;
SELECT CASE (NOT (t1.c0))  WHEN (- (rt0.c1)) THEN t1.c2 COLLATE NOCASE ELSE CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t1.c1 THEN t1.c0 ELSE rt0.c0 END END, CASE NULL  WHEN ((t1.c0)&(rt0.c1)) THEN NULL ELSE (((rt0.c1, vt0.c0, t0.c0))>((t0.c0, rt0.c1, rt0.c2))) END, t0.c0 FROM vt0;SELECT DISTINCT ((rt0.c2 IN (rt0.c1, t1.c1)) IN (((rt0.c0) BETWEEN (t1.c0) AND (rt0.c1)))), (NOT (CAST(rt0.c1 AS REAL))), GROUP_CONCAT(((((((((x'')OR(1915385246)))AND(t1.c0)))OR('-467620443')))OR(rt0.c1))) FROM rt0, t1, t0 NOT INDEXED, vt0; -- 0ms;
SELECT NTH_VALUE((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()), ((LIKELY(DISTINCT rt0.c0))&(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) OVER ( PARTITION BY CAST(NULL AS TEXT), (((t1.c1)) NOT BETWEEN ((((('955663050', t1.c1, 1.433359822E9)) BETWEEN ((t1.c2, vt0.c0, t0.c0)) AND ((vt0.c0, rt0.c2, rt0.c2))))) AND ((rt0.c0)))) FROM t0, rt0;SELECT DISTINCT ((((rt0.c1)==(t0.c0))) NOTNULL), (((0.19677670874305098)OR(t1.c2)) IN (NULL)), x'' COLLATE RTRIM FROM vt0, rt0, t0 WHERE (((((0xffffffffac8a8077) IS TRUE))/((((2692137)) BETWEEN ((x'b318165e')) AND ((x''))))));SELECT SUM(((((((((t1.c2)OR('-1457651171')))AND(t1.c2)))AND(t1.c0)))AND(t1.c1))) OVER (), ((((vt0.c0)>=(x'')))<=(0.8757449730408121)), CASE WHEN CAST(rt0.c0 AS INTEGER) THEN COUNT(rt0.c0) END, (((t1.c1, vt0.c0, t1.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), t0.c0, ('' IN ()))) AND ((((t0.c0)<=(t1.c2)), ((rt0.c0)OR(rt0.c2)), CAST(vt0.c0 AS NUMERIC)))), CASE t1.c2  WHEN TRIM(DISTINCT '鋪RsC_n\+') THEN ((0X5e6810fa) NOT BETWEEN (t0.c0) AND (rt0.c1)) END FROM t0 GROUP BY json_valid(NULL) HAVING CAST(((((rt0.c0)OR(vt0.c0)))AND(t1.c1)) AS REAL);SELECT ALL '㜭㽿wb~D,/B' FROM rt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((-1483752840) BETWEEN (t1.c2) AND (vt0.c0)) THEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(t1.c1)))OR(vt0.c0)) WHEN CASE t1.c2  WHEN t1.c2 THEN vt0.c0 ELSE t1.c1 END THEN ((t1.c1) ISNULL) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END THEN (NOT (t1.c1)) END, (NOT (((((((((-371028787)AND(t0.c0)))AND(t1.c0)))OR(0xffffffffa397feeb)))OR(t1.c1)))), (TRIM(rt0.c2, t1.c2) IN ()) FROM t1;SELECT DISTINCT (((vt0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN t1.c1 ELSE t0.c0 END)) AND ((((t1.c1) NOT NULL)))), ((((MAX(vt0.c0))OR((~ (rt0.c2)))))AND(((vt0.c0) IS FALSE))), ((((t0.c0)AND(t1.c0)))OR(t1.c0)) COLLATE BINARY FROM vt0, rt0, t0 WHERE (CAST(x'b7aa' COLLATE BINARY AS TEXT));SELECT DISTINCT (~ (CASE WHEN rt0.c0 THEN t1.c1 END)), ((rt0.c2)<=(((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)))), DENSE_RANK() OVER () FROM t0, t1 WHERE ((((((0.892057700329474) NOT BETWEEN (0.1675329872851169) AND ('-1883349939'))))<((NULL)))) GROUP BY TOTAL_CHANGES() COLLATE RTRIM, (((vt0.c0 IN ())) IS TRUE), (NOT (NULL));SELECT ALL 0.5538002395422852, SUM((((t0.c0))>=((t1.c2)))), ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (TRIM(rt0.c2, t1.c2)) AND (((rt0.c0)+(t0.c0)))) FROM rt0, vt0, t1, t0; -- 0ms;
SELECT ((COUNT(NULL))LIKE(CASE WHEN rt0.c2 THEN t1.c1 WHEN t1.c2 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)) FROM t1 WHERE ((CASE '1335554907'  WHEN '' THEN 527006664 ELSE '' END IN (((0.9634375692595312) BETWEEN (NULL) AND ('\,~Lk.Ph')))));SELECT (((t1.c0 IN ())) NOTNULL) FROM t1, rt0, vt0, t0; -- 0ms;
SELECT DISTINCT '50246322' COLLATE BINARY FROM t0; -- 0ms;
SELECT ALL ((((rt0.c1)*(0.0955110854590625))) NOT BETWEEN ((('%j^')>=(rt0.c2))) AND ('')) FROM rt0, vt0, t1 WHERE (((('1915385246') NOT NULL) IN ())); -- 0ms;
SELECT ALL (((- (t1.c2))) IS TRUE), COUNT(CASE t1.c0  WHEN t1.c0 THEN 0xffffffff9d67067b END), ((((((((((rt0.c2)GLOB(vt0.c0)))AND((((t0.c0))=((vt0.c0))))))OR((t0.c0 IN (t1.c0)))))AND(((t1.c1) IS FALSE))))OR(((rt0.c0)<<(rt0.c1)))), LTRIM(rt0.c1), CASE ((t1.c1) BETWEEN (t1.c2) AND (rt0.c1))  WHEN x'' COLLATE NOCASE THEN CAST(t1.c2 AS INTEGER) WHEN CAST(t0.c0 AS BLOB) THEN CASE t1.c1  WHEN '-525817831' THEN rt0.c0 END WHEN MIN(vt0.c0) THEN CAST(rt0.c1 AS NUMERIC) END FROM vt0, rt0 WHERE (CASE ((989877811)==(NULL))  WHEN ((0.9050078613454672)/(2021796640)) THEN '' COLLATE BINARY WHEN ((0.999928881595971) NOT BETWEEN (0X2feb2b2) AND (NULL)) THEN ((x'')|(x'')) WHEN ((0.6801164117423747) NOTNULL) THEN (('') NOT BETWEEN (x'') AND (x'')) END) GROUP BY ((t1.c1)LIKE(t0.c0)) COLLATE NOCASE;SELECT t0.c0 FROM vt0, t1 WHERE (((((((0.33193973570465574)OR(1103244614)))AND(0.8467142621267418))) NOTNULL));SELECT (- ((rt0.c0 IN ()))) FROM t1, vt0, t0 WHERE ((((-2096206026 IN (x'ef4d'))) NOT NULL)) LIMIT 337905564 OFFSET -1537281412; -- 1ms;
SELECT ALL CASE WHEN t1.c0 THEN t0.c0 COLLATE BINARY END FROM t1, vt0;SELECT ALL ((((((((t1.c0)OR(t1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(t1.c2)) COLLATE RTRIM FROM t0, vt0 ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))>(rt0.c0 COLLATE BINARY));SELECT MIN(((((t1.c0)OR(279643649)))OR(rt0.c1))), (NOT ((~ (t0.c0)))), ((((((((rt0.c2)AND(rt0.c0)))OR(t1.c2)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2036022691')))))AND('')) FROM t1 WHERE (((CASE WHEN NULL THEN x'' WHEN 1390042322 THEN NULL WHEN '-411848416' THEN 'hI\n\' END) NOT BETWEEN (1272332721 COLLATE BINARY) AND (CAST('-1946374007' AS NUMERIC)))) ORDER BY ((~ (t1.c1)) IN ()) DESC;SELECT ALL ((CASE t1.c2  WHEN t1.c2 THEN rt0.c1 END)-(CAST(t1.c1 AS INTEGER))), CAST(((t1.c2) IS FALSE) AS BLOB), CAST(t1.c1 AS INTEGER) FROM t1;SELECT DISTINCT ((CASE WHEN x'5bbd' THEN rt0.c1 WHEN t0.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN 0.31297497312553113 ELSE t0.c0 END) IS TRUE), COUNT((NOT (rt0.c2))) FILTER(WHERE ']sl') OVER (), t0.c0, (((t0.c0 IN (rt0.c2)))<>(((rt0.c0)<=(t1.c2)))), GROUP_CONCAT(((t1.c1)>=(t1.c1))) OVER () FROM rt0 INNER JOIN t1 ON ((CASE WHEN t1.c1 THEN vt0.c0 WHEN 0.11160229168586311 THEN x'6285' WHEN vt0.c0 THEN t1.c1 END)LIKE((vt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON json_valid(((rt0.c2) NOT NULL)) LEFT OUTER JOIN t0 ON (((~ (t1.c2)))>>('50246322')) WHERE (json_array(CASE NULL  WHEN 152957920 THEN '(' ELSE ']z' END, '0.5093466900176135' COLLATE NOCASE));SELECT ALL '811914329' FROM t1, rt0, vt0, t0 WHERE (CASE (+ (NULL))  WHEN ('?' IN (x'ed6e')) THEN CASE WHEN '480505389' THEN 0xffffffff8e121d0e END END); -- 0ms;
SELECT DISTINCT (+ (((rt0.c0)&(vt0.c0)))) FROM rt0, t0, t1 WHERE (((((((NULL)>>(NULL)))AND((- (x'')))))AND(((((0.7388126066431666)AND(NULL)))OR(NULL)))));SELECT (t1.c2 IN ()) FROM t0, t1 WHERE (CASE WHEN (- (x'')) THEN ((0.6793299615734536) NOT BETWEEN (0.5162775580168977) AND (0.6713435274347505)) WHEN 0.49242425669374357 COLLATE RTRIM THEN ((((0x597b27ec)AND(x'')))OR('<p''5')) WHEN ((0x7a11118a)OR(NULL)) THEN 2.009561298E9 END); -- 0ms;
SELECT DISTINCT CASE WHEN COUNT(rt0.c0) THEN t1.c0 END FROM rt0, t1, vt0 ORDER BY ((CASE t0.c0  WHEN rt0.c1 THEN t0.c0 END)<<(UNLIKELY(t1.c1))) DESC  NULLS LAST;SELECT DISTINCT (((((((t1.c0, rt0.c1, vt0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((t0.c0, vt0.c0, rt0.c2, NULL, vt0.c0, t1.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, NULL, t1.c0, rt0.c2, t1.c0, rt0.c0))))AND(((rt0.c2) NOTNULL))))AND(RTRIM(t1.c0))) FROM vt0, rt0, t0;SELECT DISTINCT RANK() OVER () FROM vt0 WHERE ('\r\r') LIMIT -1560459913; -- 0ms;
SELECT DISTINCT CAST((t0.c0 IN (t1.c1, vt0.c0)) AS REAL) FROM rt0, vt0 ORDER BY ((((((((((rt0.c1) NOT BETWEEN (t1.c2) AND (rt0.c0)))OR(((vt0.c0)<=(t1.c0)))))OR(((rt0.c2)>>(rt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((t1.c0)) AND (('-794961183'))))))OR(rt0.c2)), LTRIM(((((t1.c0)OR(t1.c1)))OR(rt0.c0)), (t1.c1 IN ())), ((json_array_length(''''))=(rt0.c0));SELECT DISTINCT ((SUM(t1.c2)) NOT BETWEEN (STRFTIME(rt0.c2, t1.c1, t1.c2)) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c1 ELSE t1.c1 END)) FROM vt0, t1 LIMIT -251639029;SELECT ((((((t0.c0)AND(t1.c2)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(rt0.c0 COLLATE NOCASE)) FROM t1 GROUP BY (((vt0.c0, vt0.c0, vt0.c0))<((t1.c0, rt0.c0, rt0.c0))) COLLATE NOCASE;SELECT CASE WHEN ((rt0.c2)IS(t0.c0)) THEN GROUP_CONCAT(t0.c0) ELSE (NOT (t1.c0)) END FROM rt0, t0 WHERE (LIKELY(CAST(x'' AS BLOB))) LIMIT 2102836445 OFFSET -1119813496;SELECT DISTINCT ((((((t1.c2)AND(rt0.c1)))AND(vt0.c0))) BETWEEN (HEX(vt0.c0)) AND (vt0.c0 COLLATE BINARY)), (NOT (-5.48135928E8)), CASE ((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(rt0.c1))  WHEN (('Wⵆ|')IS(t1.c1)) THEN ((rt0.c2) NOTNULL) ELSE '33233621' END FROM t0, vt0, rt0, t1; -- 1ms;
SELECT ALL RANK() OVER () FROM rt0, t0; -- 0ms;
SELECT DISTINCT (- (0.1234111234937657)), (((((t0.c0)AND(t0.c0)))AND(vt0.c0)) IN ()), ((t1.c2 COLLATE BINARY)|(SQLITE_COMPILEOPTION_USED(t1.c0))) FROM t0, t1, rt0 WHERE ((((0.30285960852154037 IN ())) ISNULL)) GROUP BY ((CAST(t0.c0 AS NUMERIC)) IS TRUE), CASE WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE t0.c0 END THEN TYPEOF(DISTINCT rt0.c1) ELSE CAST(vt0.c0 AS NUMERIC) END, NULL;SELECT DISTINCT (((((t0.c0)IS(vt0.c0)), ((vt0.c0)+(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN rt0.c0 ELSE x'2a5f' END))!=((rt0.c1 COLLATE BINARY, ((t0.c0) BETWEEN (t1.c0) AND (t1.c1)), (~ (t1.c2))))) FROM vt0, t1, rt0 WHERE (((CASE WHEN 0.8092229876186898 THEN 0.5300229409717471 WHEN 1819911966 THEN NULL WHEN '42061590' THEN x'' END)LIKE(((NULL) NOT BETWEEN ('') AND (NULL))))) GROUP BY (('鋪RSC_N\+' COLLATE BINARY)==((rt0.c0 IN (t1.c1)))), ((((((t1.c0) BETWEEN (t0.c0) AND (t1.c2)))AND(CASE WHEN t1.c2 THEN rt0.c1 ELSE t1.c2 END)))AND(CAST(rt0.c1 AS REAL))), (NOT (CASE WHEN rt0.c0 THEN t1.c0 ELSE t1.c0 END)) ORDER BY CASE WHEN CASE t0.c0  WHEN t1.c0 THEN rt0.c1 END THEN (((t1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) ELSE '' END DESC  NULLS LAST;SELECT ALL CASE (~ (t1.c1))  WHEN TOTAL(t1.c2) THEN CAST(vt0.c0 AS NUMERIC) WHEN COUNT(*) THEN CASE WHEN vt0.c0 THEN NULL WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 END WHEN 0xffffffffe3a7c999 THEN t0.c0 COLLATE BINARY ELSE ((t1.c1) ISNULL) END FROM t1, vt0, t0, rt0 WHERE ((~ (('2082231880' IN ())))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((rt0.c0)%(rt0.c0))) ISNULL)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((x'' IN ())) IS TRUE) FROM t0 WHERE ((((((0.9041574302718519))<=((x'3391')))) BETWEEN (0.0026141427459358546) AND (x''))); -- 0ms;
SELECT ALL (((t1.c2) NOT BETWEEN (rt0.c0) AND (t1.c0)) IN ()) FROM t0, t1, rt0, vt0 WHERE (TYPEOF(DISTINCT (('')||('763539622')))) GROUP BY CAST((+ (t0.c0)) AS TEXT) HAVING (CASE -1481238100  WHEN t1.c2 THEN 0.33193973570465574 ELSE rt0.c1 END IN (((((((((rt0.c2)OR(t1.c2)))AND(t0.c0)))AND(rt0.c2)))OR(vt0.c0)))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t1, rt0, t0, vt0; -- 3ms;
SELECT ALL (+ (((rt0.c2)/(vt0.c0)))) FROM t1, vt0, rt0, t0 WHERE (((RTRIM(NULL))>(((NULL) NOT BETWEEN (1833310197) AND (''))))); -- 0ms;
SELECT ABS(DISTINCT ((rt0.c2)||(rt0.c2))) FROM t1, rt0, t0, vt0 WHERE ((((('*W')LIKE(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE (t0.c0 IN ())  WHEN ((rt0.c1)IS NOT('*덝P')) THEN ((t0.c0)<<(t0.c0)) ELSE (NOT (t1.c2)) END, ((CAST(rt0.c0 AS TEXT)) IS TRUE), ((rt0.c0)<>((rt0.c0 IN ()))) FROM t0, rt0, t1, vt0 WHERE (CASE '1007737839'  WHEN NULL THEN -1.106457055E9 WHEN x'' THEN 0.6793299615734536 WHEN x'' THEN x'' WHEN '' THEN NULL WHEN '1608575692' THEN 0x39002ea6 END COLLATE BINARY) ORDER BY (((((t1.c2)AND(t1.c1)))AND(rt0.c1)) IN (HEX(DISTINCT t1.c2), ((rt0.c0)<(rt0.c0)))), CASE (((x''))!=((t1.c0)))  WHEN ((t1.c2)=(t0.c0)) THEN ((((vt0.c0)OR(t1.c0)))OR(t1.c1)) ELSE ((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t1.c1)) NOT BETWEEN (((~ (rt0.c1)))) AND ((((t1.c2)>(rt0.c2))))), SUM(LIKELY(DISTINCT rt0.c0)) OVER (), DATETIME(((t0.c0)-(NULL)), t0.c0 COLLATE BINARY, SUM(rt0.c2)), NTH_VALUE((('2025566415') NOT NULL), (((t1.c0)) NOT BETWEEN (((t1.c1 IN ()))) AND ((UNICODE(rt0.c2))))) OVER (), ((t1.c1)>>(t1.c1 COLLATE RTRIM)) FROM t0, rt0, t1, vt0;SELECT (NOT (COALESCE(t0.c0, rt0.c1))) FROM rt0, t0, vt0 WHERE (CAST((- (0.459248892205637)) AS BLOB)); -- 0ms;
SELECT DISTINCT (NOT (rt0.c1)) FROM t0, rt0 WHERE (0.8398150044298103) GROUP BY CASE t0.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 WHEN rt0.c0 THEN t1.c2 END COLLATE NOCASE;SELECT DISTINCT t1.c2 FROM t0, t1 WHERE (((103643626 COLLATE RTRIM) IS TRUE)); -- 0ms;
SELECT ((t0.c0) BETWEEN (NULL) AND (NULL)) COLLATE NOCASE, MIN(MAX(0.14929512897580266)), ((((0.011897465801004037)OR(NULL)))AND(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) FROM t0, t1, vt0;SELECT (((vt0.c0) BETWEEN (t1.c0) AND (rt0.c0)) IN (((vt0.c0)<(t1.c0)))) FROM vt0;SELECT ALL vt0.c0 FROM rt0, t0, t1, vt0; -- 0ms;
SELECT DISTINCT CAST(328154268 AS INTEGER), LIKELY(DISTINCT t1.c0 COLLATE NOCASE), CASE ((t1.c0) BETWEEN (t1.c2) AND (t1.c1))  WHEN ((rt0.c1)IS(rt0.c0)) THEN CASE WHEN t0.c0 THEN 0Xffffffffa397feeb WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN vt0.c0 END WHEN UNICODE(rt0.c1) THEN rt0.c1 WHEN (+ (t1.c1)) THEN (t0.c0 IN ()) ELSE TYPEOF(x'f56d002d') END FROM t0, t1 WHERE ((~ ((543342267 IN ())))) ORDER BY ((((((vt0.c0)AND(t1.c2)))OR(rt0.c0)))<>(((rt0.c1)<(vt0.c0)))), ((CAST('132261534' AS TEXT))>>((t1.c2 IN ())));SELECT ALL (((rt0.c0 IN ())) IS FALSE), (((rt0.c2 IN (rt0.c0)))AND(vt0.c0 COLLATE NOCASE)), rt0.c0 FROM vt0, rt0, t0, t1 GROUP BY ((CAST(vt0.c0 AS INTEGER))>((t1.c1 IN ()))) HAVING CAST(NULL AS TEXT) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE) ISNULL), COALESCE(((NULL)IS NOT(rt0.c2)), COUNT(vt0.c0), CAST(NULL AS TEXT), t0.c0 COLLATE BINARY), t1.c0 FROM rt0;SELECT DISTINCT (((NOT (rt0.c0))) BETWEEN (((rt0.c0) BETWEEN (t1.c2) AND (t0.c0))) AND ('1422582947')) FROM t1, t0, vt0, rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN (x'' IN ()) END); -- 0ms;
SELECT DISTINCT ((((t1.c2) ISNULL)) BETWEEN (COUNT('')) AND (rt0.c1 COLLATE NOCASE)) FROM t0, t1, rt0; -- 0ms;
SELECT ((((0.6447329063127559)AND(NULL)))OR(((t1.c1)%(0.8565137639296982)))) FROM vt0, rt0 ORDER BY '280048203' DESC  NULLS FIRST;SELECT DISTINCT ((NULL) NOT BETWEEN (UPPER(DISTINCT rt0.c1)) AND ((- (t1.c1)))), (((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c0))))+(MIN(rt0.c2))), COUNT(CAST(t1.c0 AS NUMERIC)) FROM t0 WHERE (((('-2081677801' IN ())) BETWEEN ((x'' IN ())) AND ((('2021796640') NOT BETWEEN (-2.19409233E8) AND (x'7c26')))));SELECT ALL CAST(CASE t1.c1  WHEN vt0.c0 THEN t1.c2 END AS TEXT), (((((t1.c0)AND(rt0.c2)))AND(rt0.c0)) IN ()), SUM(((rt0.c0) IS TRUE) COLLATE BINARY) OVER (), ((((CAST(NULL AS INTEGER))AND(COUNT(t0.c0))))AND(CAST(rt0.c2 AS TEXT))), '' FROM t0, t1, vt0, rt0 WHERE (((((0.9295943086313312) NOT BETWEEN (NULL) AND (982440084))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS REAL))-(GROUP_CONCAT(rt0.c0))), ((t1.c0)<<(0.8648670298321384)) COLLATE NOCASE, t1.c2 COLLATE NOCASE FROM t0;SELECT CAST('1838015182' AS NUMERIC) FROM vt0, t1, rt0, t0; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE)LIKE(t1.c2 COLLATE NOCASE)), ((((LIKELIHOOD(DISTINCT rt0.c1, 0.5592464793414191))OR(CAST(t1.c1 AS NUMERIC))))OR(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)), (((((~ (rt0.c2)))OR('0.0026141427459358546')))AND((+ ('')))) FROM t0;SELECT DISTINCT CAST(t1.c2 COLLATE NOCASE AS BLOB) FROM t1, vt0, t0; -- 0ms;
SELECT ALL CAST(CAST(rt0.c2 AS REAL) AS INTEGER) FROM vt0, t0, rt0, t1; -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE RTRIM FROM t1, t0, rt0, vt0 WHERE ((((x'')) NOT BETWEEN (((0X138f3c9c IN ('')))) AND (((- (0.3573111168140777)))))); -- 3ms;
SELECT (((((t0.c0)||(t0.c0))))<((TOTAL_CHANGES()))), vt0.c0, (((t1.c2 IN (rt0.c0))) IS TRUE), ((t0.c0)||(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))), MAX(CAST(NULL AS TEXT)) FROM rt0, t1, vt0 WHERE (x'5d8f0bb3');SELECT (((t0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((t1.c0) ISNULL)))) FROM t1, vt0, rt0 GROUP BY (((t1.c1)) BETWEEN ((CASE t0.c0  WHEN '' THEN vt0.c0 ELSE t0.c0 END)) AND ((-3.07049797E8)));SELECT LIKELY(DISTINCT ((rt0.c2)||(NULL))) FROM t0 WHERE (((((x'9e00')-(x''))) ISNULL));SELECT DISTINCT (- ((t1.c0 IN (rt0.c2)))) FROM t0, vt0, t1 WHERE (((7.63539622E8 COLLATE NOCASE)%((((('셠a\r4L')AND(-9.09867433E8)))OR(NULL))))) GROUP BY CASE WHEN (t1.c2 IN (rt0.c0)) THEN ((((t0.c0)AND(rt0.c1)))OR(t1.c0)) END HAVING (((((((((0.47938374216720625 IN (vt0.c0)))OR(((rt0.c1)/(rt0.c1)))))AND((0X5f24077a IN ()))))OR(rt0.c2)))OR(t0.c0 COLLATE NOCASE));SELECT rt0.c2 FROM vt0, t0, t1, rt0 WHERE (x''); -- 0ms;
SELECT ((((t0.c0)*(vt0.c0))) NOTNULL) FROM rt0;SELECT LTRIM(t0.c0) COLLATE BINARY FROM t1, rt0, t0 WHERE (((((1724059186)||('659440162'))) NOT BETWEEN (((0.056235927348365466)<=(NULL))) AND (-7.94961183E8))); -- 0ms;
SELECT ALL FIRST_VALUE(((((((((((t1.c2)OR(t1.c0)))AND(NULL)))AND(t1.c1)))OR(vt0.c0))) BETWEEN (((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c0))) AND (((0.02741455215597144)>(vt0.c0))))) OVER () FROM vt0, t0, t1 WHERE (STRFTIME('kc', '', 0.6447459739428316, '', x'') COLLATE BINARY) LIMIT 806556140; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((+ (rt0.c1)) COLLATE RTRIM) FROM rt0, t0, vt0, t1 WHERE (((((0x1edaf6c4)) NOT BETWEEN (('0.8092229876186898')) AND ((NULL))) IN (json_extract(-1.400209289E9, 0.6779892293223948))));SELECT LAST_VALUE(((CASE WHEN t1.c1 THEN rt0.c1 ELSE -4.75543143E8 END) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t1.c2) IS TRUE)))) OVER (), ((((((((((t1.c2)IS NOT(t1.c2)))OR(CASE WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END)))OR(-1.574921212E9)))OR(NULL)))AND(((t0.c0) ISNULL))), (- (((t1.c1)LIKE(t1.c1)))), GROUP_CONCAT((((t0.c0))<((x'')))), load_extension(((((((((t1.c0)OR(t1.c0)))OR(rt0.c0)))AND(t1.c1)))OR(t1.c1))) FROM rt0 FULL OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (-1403832748) AND (t1.c1)) COLLATE BINARY WHERE (((((0.9714327446990779) BETWEEN (NULL) AND (0.7384404774729446)))LIKE(CHAR(1.656926377E9))));SELECT ALL LOWER(((vt0.c0)IS NOT(t1.c1))) FROM vt0 WHERE (CAST(CASE 'ZM'  WHEN 1.441029234E9 THEN x'' ELSE '-1917677423' END AS BLOB));SELECT DISTINCT HEX(((vt0.c0) NOTNULL)), (((rt0.c2)) NOT BETWEEN ((CAST(NULL AS TEXT))) AND ((((t1.c2) IS TRUE)))), (((t1.c2)OR(rt0.c2)) IN ()) FROM t0, rt0, vt0 WHERE ((((0.9584514161276827)GLOB(0.6171924826738222)) IN ())) ORDER BY (('1441029234')<>(rt0.c0)) COLLATE RTRIM  NULLS FIRST, vt0.c0;SELECT 0.13275464499059042 COLLATE BINARY FROM vt0, rt0, t1; -- 0ms;
SELECT ((CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 END)||(TOTAL(rt0.c2))) FROM vt0;SELECT DISTINCT ((((x'c381')OR(NULL COLLATE NOCASE)))AND(((vt0.c0) NOT NULL))), (((rt0.c0)+(t1.c2)) IN (((0.26531810883921614)LIKE(rt0.c1)), (t1.c2 IN ()))), CAST(rt0.c1 AS NUMERIC) FROM t1, t0, vt0, rt0 WHERE (CAST(((1224900054) NOT BETWEEN ('Dg)bb햬') AND (0.4826570087850407)) AS REAL)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE ((((0.6188558310150422)) BETWEEN ((((('226486461'))<((0.892057700329474))))) AND ((((x'')OR(x'')))))); -- 0ms;
SELECT (t1.c0 IN ()) FROM rt0, vt0, t0; -- 1ms;
SELECT ALL RANK() OVER () FROM t0, t1, rt0, vt0; -- 0ms;
SELECT DISTINCT CASE (((0.17578926832303532, t1.c1, 0.8020276591582629, rt0.c1, 1673439432))!=((rt0.c1, 0X77c2b167, t1.c1, rt0.c1, rt0.c0)))  WHEN CAST(t1.c0 AS REAL) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) WHEN (((t0.c0))>((vt0.c0))) THEN MAX('[5{,n') WHEN rt0.c0 THEN (((t1.c2, rt0.c2, '-135926655')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((t1.c2, rt0.c2, 9.5566305E8))) ELSE ((t0.c0)AND(vt0.c0)) END, (MIN(t1.c0) IN ()), ((((NULL) ISNULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END) AND (HEX(rt0.c2))) FROM vt0, t1, rt0, t0; -- 0ms;
SELECT ((TYPEOF(t1.c2))<<(((rt0.c1)AND(t1.c1)))) FROM t0, rt0, t1, vt0 WHERE ((((((+ (0.7966756341317106)))AND(((0.1471890700420142)IS NOT(NULL)))))AND(NULL))); -- 0ms;
SELECT ALL (NOT (TOTAL(rt0.c2))) FROM vt0, t1;SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c0)))*(((t1.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))), (NULL IN ()), ((((rt0.c1)&(t0.c0))) ISNULL) FROM t1, rt0, vt0, t0 INDEXED BY i19 WHERE (((('0.6039905623175312')LIKE('൤>x&Br%Z')) IN (((((-1757802017)AND(0.07270764567779042)))OR(x'')))));SELECT DISTINCT (- (((rt0.c2) NOTNULL))), '248780660', (('2012008080')/(rt0.c2)) FROM vt0 WHERE (((CAST(0.735177572042161 AS INTEGER))LIKE(NULL COLLATE NOCASE))) ORDER BY json_valid(vt0.c0) COLLATE BINARY LIMIT 1490751193;SELECT CASE ((rt0.c1)<(t1.c1))  WHEN ((rt0.c0)>=(t1.c1)) THEN CAST(rt0.c0 AS BLOB) END FROM rt0, vt0, t1 FULL OUTER JOIN t0 ON (((((((t1.c2))=((t1.c0))))OR((((t1.c0))<((t1.c1))))))OR((- (t0.c0)))); -- 0ms;
SELECT DISTINCT (((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c2)))) NOT BETWEEN (HEX(vt0.c0)) AND (x'')) FROM vt0, rt0, t1; -- 1ms;
SELECT t1.c1, ((((vt0.c0) BETWEEN (t0.c0) AND (rt0.c1)))LIKE(x'')), TRIM(rt0.c2) COLLATE BINARY FROM t0, vt0, t1, rt0 WHERE (((((((((((0.4020184984277727)*(1.156993762E9)))AND(((0.5093466900176135) NOTNULL))))OR(CAST(1.812183002E9 AS NUMERIC))))OR(0.4814211325604508)))AND(0.9746206273600977))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t1 NOT INDEXED WHERE ((((811914329)*(NULL)) IN ())); -- 0ms;
SELECT DISTINCT AVG(((((rt0.c1)OR(vt0.c0)))OR(t1.c2))) OVER (), (('-467620443' IN ()) IN ()), (- ((NOT (rt0.c1)))) FROM t1, t0, rt0, vt0; -- 0ms;
SELECT DISTINCT (((t0.c0)>>(t0.c0)) IN ()) FROM t0, t1 ORDER BY (+ (((0.472972555743398) NOT BETWEEN (rt0.c1) AND (rt0.c2))));SELECT DISTINCT CHANGES(), COUNT(*) OVER (), CAST(CAST(t0.c0 AS REAL) AS NUMERIC) FROM t1, vt0, t0; -- 0ms;
SELECT SQLITE_VERSION() COLLATE BINARY FROM rt0, vt0 WHERE (((x'')+(CASE WHEN '0.8955079191292385' THEN 1.724515302E9 ELSE '0.4366528924598485' END))); -- 0ms;
SELECT DISTINCT (+ (((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) FROM vt0, t1, rt0 WHERE ((((('175351767') NOTNULL)) IS TRUE)) LIMIT 686932930; -- 0ms;
SELECT DISTINCT (((t1.c1 IN ())) NOT BETWEEN (x'') AND ((~ (t1.c0)))) FROM vt0;SELECT DISTINCT (((0Xffffffffab9e8a79)>=(t1.c1)) IN ()) FROM rt0, t1 WHERE ((UPPER(0.22088598379478896) IN ())) LIMIT 1441029234; -- 0ms;
SELECT ALL ((json(t1.c1)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (NULL)) FROM t0, rt0, t1 WHERE ((((SQLITE_COMPILEOPTION_GET('-54190062')))<(((NULL IN ()))))); -- 0ms;
SELECT ALL CAST(rt0.c0 AS REAL) COLLATE RTRIM FROM vt0, t1, rt0, t0 ORDER BY (NOT (((t1.c2)||(t1.c2))))  NULLS LAST, vt0.c0; -- 0ms;
SELECT DISTINCT CASE WHEN 0.3259332590817662 COLLATE BINARY THEN MAX(vt0.c0) WHEN ((t1.c0) BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((((t1.c0)AND(t1.c1)))OR(rt0.c2)) WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 ELSE t1.c0 END FROM t1 WHERE ((NULL IN ()));SELECT DISTINCT CASE ((t0.c0) IS FALSE)  WHEN MAX(t1.c2) THEN (- (t1.c0)) ELSE ((rt0.c0)|(t1.c1)) END FROM vt0, rt0, t1 GROUP BY (((((t0.c0)) BETWEEN ((0.7353320749934183)) AND ((rt0.c2))))OR(((rt0.c2)+(t0.c0))));SELECT CASE CAST(t0.c0 AS TEXT)  WHEN NULL THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c2)==(t1.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN 0.99816909216546 COLLATE RTRIM THEN ((rt0.c1) IS TRUE) ELSE rt0.c1 COLLATE RTRIM END FROM t1, vt0 WHERE ((((((NOT (x'')))AND(((x'1187')>=(x'7b87')))))AND(((((NULL)AND('811914329')))AND(0.2801150227189976))))) EXCEPT SELECT ALL SUM(((rt0.c0)>(t1.c2))) FROM rt0, t1, t0 WHERE (-548135928);SELECT DISTINCT CASE WHEN MAX(rt0.c1) THEN load_extension(vt0.c0, rt0.c1) ELSE (vt0.c0 IN ()) END, (~ (((t0.c0) BETWEEN (rt0.c1) AND (NULL)))), ((NULLIF(t1.c1, t1.c0))>=(CASE t0.c0  WHEN t1.c0 THEN t0.c0 END)) FROM t0;SELECT ALL ((((((((t1.c0)AND((rt0.c2 IN ()))))OR(NULL)))AND(CAST(rt0.c2 AS BLOB))))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))), (~ (((rt0.c2) NOTNULL))), TOTAL(((rt0.c2) BETWEEN ('-909867433') AND (rt0.c1))) FROM t0, vt0, t1;SELECT ALL (NOT ((~ (t1.c1)))), LOWER(DISTINCT t1.c2 COLLATE RTRIM), t1.c0 FROM rt0;SELECT ALL (+ (((rt0.c1) NOT NULL))) FROM vt0, t0;SELECT (- (((vt0.c0)>>(t0.c0)))), '-1688706134', rt0.c0 FROM t1 WHERE (((x'')<(x'')) COLLATE BINARY) GROUP BY (((((t1.c0, t1.c1, rt0.c1)) NOT BETWEEN ((x'', rt0.c0, t0.c0)) AND (('1550891416', vt0.c0, rt0.c0)))) NOT BETWEEN (ABS(DISTINCT t1.c1)) AND ((((t1.c1, vt0.c0, rt0.c2))>((rt0.c0, t0.c0, t1.c2)))));SELECT ALL (((((rt0.c2)) NOT BETWEEN ((t1.c1)) AND ((t0.c0)))) NOTNULL), ((INSTR(t1.c1, vt0.c0)) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((((rt0.c2))<((rt0.c2))))), ((((t1.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)))/(rt0.c1)) FROM vt0, t0;SELECT ALL (rt0.c2 IN ()) COLLATE BINARY FROM vt0, t1, rt0, t0 WHERE ((((((((((0.9212703741397166)AND('1103244614')))AND('1657985749')))OR(x'241cc1e2')))OR('217160333')) IN ())); -- 0ms;
SELECT (((x'', ((t1.c1) BETWEEN (rt0.c2) AND (rt0.c0)), (((t0.c0))==((t1.c1)))))<>((t1.c2 COLLATE RTRIM, ((t1.c1) BETWEEN (vt0.c0) AND (t1.c0)), TOTAL(vt0.c0)))) FROM vt0 WHERE ((('-421683865') NOTNULL)) ORDER BY (((((t1.c2) IS TRUE)))<=(((((rt0.c0))>=((t1.c0))))))  NULLS FIRST, ((((t1.c1) BETWEEN (rt0.c0) AND (rt0.c2))) IS FALSE)  NULLS FIRST;SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((CAST(0.5272614618376655 AS TEXT), ((((0.6205645679579967)AND(x'efce')))AND('J~(P')), rtreenode(x'', NULL)))!=((('#bc焹I' IN (0.35702563491878037)), ((0.2867945875856672)/(0xffffffffb3ac9380)), CASE WHEN '-1605443196' THEN NULL ELSE 0.02741455215597144 END)))); -- 0ms;
SELECT (((rt0.c0 COLLATE NOCASE))>((vt0.c0))) FROM t1, t0 INDEXED BY i19, rt0;SELECT DISTINCT COUNT(t1.c2) OVER ( ORDER BY ((t1.c2) BETWEEN (((rt0.c0) NOT BETWEEN ('799895778') AND (t0.c0))) AND (LTRIM(t1.c0))), (((((- (rt0.c2)))OR(UPPER(DISTINCT vt0.c0))))AND(((t0.c0)/(0.9359218051899628))))) FROM vt0, rt0, t0, t1 GROUP BY (((NULL)) BETWEEN (((NOT (t0.c0)))) AND ((QUOTE(x'f061')))) HAVING MIN(((t0.c0)=(t0.c0))); -- 0ms;
SELECT DISTINCT (NOT (((t1.c0) NOT NULL))) FROM t1; -- 0ms;
SELECT ALL '878362449' FROM t1, rt0, t0, vt0 WHERE ((((- (x''))) NOT BETWEEN ((NOT (0.19258458481278418))) AND (CASE '	垶Q'  WHEN -1050766245 THEN '5z)i' ELSE x'' END))) ORDER BY (((CAST(rt0.c1 AS BLOB)))<(((rt0.c1 IN (t1.c0))))) DESC, ((x'') BETWEEN (((((t0.c0)OR(t1.c0)))OR(t1.c0))) AND (CASE '<1'  WHEN rt0.c1 THEN t1.c2 END)) ASC  NULLS FIRST; -- 0ms;
SELECT ALL SUM(CAST(NULL AS BLOB)) FROM vt0, t1, t0, rt0; -- 0ms;
SELECT DISTINCT vt0.c0, CHAR(t1.c0 COLLATE BINARY), AVG(UPPER(DISTINCT rt0.c1)) OVER () FROM t0, rt0, vt0 GROUP BY CASE WHEN (((t1.c1))<((rt0.c1))) THEN ABS(DISTINCT t1.c0) END HAVING LIKE(t1.c1, t0.c0) COLLATE BINARY;SELECT DISTINCT ((((((((CASE WHEN rt0.c2 THEN t1.c0 END)AND(((t1.c2)<(vt0.c0)))))AND(t1.c0 COLLATE BINARY)))OR(((rt0.c0)>>(t1.c0)))))OR((+ (rt0.c1)))), ((t1.c1)<=(rt0.c0)) COLLATE BINARY, (~ ((~ (rt0.c2)))), ((MIN(t1.c1)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t1.c2) AND (t1.c1))) AND (GROUP_CONCAT(t1.c0))), ((NULL) NOT BETWEEN ((('0.032563870446700616')/(rt0.c1))) AND ((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.8683033516326709))))) FROM t1, vt0, t0 LIMIT -1457651171 OFFSET -1832023370;SELECT ALL ((rt0.c1)LIKE(((t1.c0) NOT NULL))) FROM t0 ORDER BY (((x'', COALESCE(t1.c1, t0.c0), (((t1.c2)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1))), TRIM(t0.c0), ((rt0.c1) ISNULL)))>((rt0.c2 COLLATE BINARY, (rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE t1.c0 END, (~ (0.8025538538656701)), rt0.c2 COLLATE BINARY))), ((((- (rt0.c2)), ((rt0.c2) IS FALSE), LIKELIHOOD(vt0.c0, 0.12966313696469267)))>=((((t1.c2)AND(rt0.c0)), MIN(rt0.c2, rt0.c2), (~ (t1.c1)))))  NULLS LAST;SELECT DISTINCT (~ ((((t1.c0, rt0.c2, vt0.c0))>((rt0.c1, t0.c0, rt0.c2))))), GROUP_CONCAT(CASE rt0.c2  WHEN t1.c2 THEN t1.c2 ELSE vt0.c0 END) OVER (), ((- (rt0.c1)) IN ()) FROM t1, t0;SELECT LAST_VALUE(vt0.c0) OVER (), TRIM(rt0.c0) COLLATE NOCASE, (MAX(t0.c0) IN ()) FROM vt0;SELECT DISTINCT TOTAL(CASE 0.48000175839950376  WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN NULL END) FROM rt0 LIMIT -1617605106;SELECT ALL UNLIKELY(CASE WHEN vt0.c0 THEN t1.c2 END) FROM vt0, rt0 WHERE ((+ (((NULL)&(0.9883277894319444)))));SELECT DISTINCT NULL FROM vt0, t1, t0 WHERE (((('')) NOT BETWEEN ((QUOTE('E+'))) AND ((((((0xffffffff8fbeb273)AND(-136097619)))AND('(P')))))); -- 0ms;
SELECT ALL CAST(((((t1.c0)OR(t1.c0)))OR(NULL)) AS NUMERIC) FROM t0, vt0;SELECT DISTINCT (LOWER(DISTINCT t1.c2) IN ()) FROM vt0 WHERE ((((~ (x'')))+((((x''))<((-1617605106)))))); -- 7ms;
SELECT DISTINCT CASE WHEN ((t1.c2) BETWEEN (t1.c0) AND (t1.c2)) THEN 'e' END, (JULIANDAY(rt0.c1, rt0.c2, rt0.c2) IN ()), (- (rt0.c1)) FROM vt0, t1, t0, rt0; -- 0ms;
SELECT CASE WHEN SUBSTR(rt0.c1, t1.c2) THEN IFNULL(DISTINCT x'', t1.c2) END FROM t1, t0 WHERE ((- (((0.028347359709736786) ISNULL))));SELECT DISTINCT ']' FROM vt0 LIMIT 1537164367 OFFSET 2062306314; -- 0ms;
SELECT DISTINCT LEAD(UNICODE((t1.c1 IN ())), t1.c2 COLLATE BINARY, ((((((t1.c0)OR(t1.c0)))AND(vt0.c0)))<<((~ (t0.c0))))) OVER (), (LIKELIHOOD(NULL, 0.8549917345583437) IN ()), ((GLOB(t0.c0, t1.c1)) BETWEEN ((((rt0.c1, rt0.c2, rt0.c1, rt0.c2, t1.c0))<((t0.c0, t0.c0, rt0.c1, rt0.c1, rt0.c2)))) AND (((vt0.c0)<(t1.c2)))) FROM t1, vt0, t0 GROUP BY (- (t1.c2 COLLATE NOCASE));SELECT DISTINCT NULL, ((((((((((t1.c0)AND(t0.c0)))AND(t1.c0)))OR(t1.c1)))AND(rt0.c1))) ISNULL), json_array_length(TRIM(t1.c0, t0.c0)), AVG(((t1.c1)>>(t1.c1))) OVER ( PARTITION BY ((((rt0.c2) IS TRUE))IS NOT(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN t1.c2 THEN t1.c2 END)), ((TOTAL_CHANGES())&(((((rt0.c0)AND(t1.c2)))OR(t1.c0))))), GROUP_CONCAT(((t1.c0)AND(t0.c0))) OVER ( PARTITION BY ((((rt0.c2) NOT NULL)) NOTNULL), (((rt0.c2 IN ())) BETWEEN ((((0.22546712792252, rt0.c2, x'1e82')) NOT BETWEEN ((t0.c0, vt0.c0, rt0.c2)) AND ((vt0.c0, t1.c1, vt0.c0)))) AND (CASE t1.c1  WHEN rt0.c2 THEN t1.c1 ELSE rt0.c1 END))) FROM t0 WHERE (((TRIM(DISTINCT x'', -5.28330383E8)) NOT BETWEEN (((NULL)GLOB('806556140'))) AND ('\H')));SELECT UPPER(DISTINCT NULL) FROM vt0, t0; -- 0ms;
SELECT GROUP_CONCAT(((t1.c0)%(t1.c2)) COLLATE NOCASE), (~ (CASE WHEN rt0.c2 THEN -415992224 ELSE t1.c1 END)), ((((t0.c0) NOT NULL)) ISNULL) FROM vt0 WHERE (((CAST(x'' AS INTEGER)) IS TRUE));SELECT DISTINCT COUNT(*) FROM t1, vt0, rt0 WHERE ((((((x'')) BETWEEN ((NULL)) AND ((NULL))))+((((x'')) NOT BETWEEN (('Pz')) AND ((0.9532413388202952)))))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), t0.c0, (COUNT(*) IN (((vt0.c0)IS(rt0.c0)))) FROM rt0, t0 WHERE (CASE CAST('-2024128516' AS NUMERIC)  WHEN ((-7.95982823E8) ISNULL) THEN ((((((((NULL)OR('0.8955079191292385')))OR(0.6964474043446903)))AND(0.9050078613454672)))AND('4P,UM2H')) WHEN ((-1974132771) BETWEEN (x'266d') AND (0.9433704789819526)) THEN CASE NULL  WHEN 0.5051284535720592 THEN 1498383636 END WHEN (('u>,jtFFTL') IS TRUE) THEN CAST(-1.285745435E9 AS REAL) END);SELECT (((t1.c0)LIKE(t1.c1)) IN ()) FROM vt0, t1, t0, rt0; -- 0ms;
SELECT MIN(((t1.c2) IS TRUE)) COLLATE RTRIM, CAST(JULIANDAY(t0.c0, rt0.c1, t0.c0, rt0.c0, t1.c2) AS INTEGER), vt0.c0, SUM(SUM(((rt0.c2)&(rt0.c2)))), COUNT(((vt0.c0)>>(t1.c2))) FROM t0 GROUP BY ((COALESCE(t1.c1, vt0.c0, t1.c2, t1.c0)) IS TRUE);SELECT DISTINCT ((rt0.c1) NOTNULL) COLLATE BINARY FROM t1, vt0, rt0, t0 WHERE (((((0X65b8080f)==(NULL)))AND(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT x'e33d' FROM rt0 WHERE (((0.6684989042648257)GLOB(CAST(NULL AS INTEGER)))) ORDER BY t1.c2 COLLATE NOCASE  NULLS LAST;SELECT ALL (((0.7764848281107496 IN ())) IS TRUE) FROM t0, rt0, vt0 WHERE (x'' COLLATE RTRIM) GROUP BY t0.c0, ((((CAST(rt0.c2 AS TEXT))OR(x'')))OR(CASE t1.c0  WHEN t1.c1 THEN t1.c2 WHEN t1.c0 THEN rt0.c0 WHEN t1.c1 THEN rt0.c2 END)), CASE 1854922224  WHEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))) THEN (((rt0.c1))>=((''))) END;SELECT DISTINCT LAST_VALUE(CASE WHEN (t1.c2 IN ()) THEN ((t1.c2) NOT NULL) ELSE ((t1.c0)IS NOT(t1.c2)) END) OVER ( ORDER BY ((((((((CAST(rt0.c0 AS INTEGER))OR(vt0.c0)))AND(((rt0.c0)<>(rt0.c1)))))AND(0x72bd8d41)))AND(((NULL) IS FALSE))) ASC  NULLS FIRST, ((((t1.c1 IN ())))<((rt0.c1 COLLATE NOCASE)))) FROM t1 LIMIT 408133958;SELECT DISTINCT CAST((t0.c0 IN (t1.c2)) AS REAL), ((x'')OR('955663050')), COUNT(((((((((rt0.c0)AND(t1.c0)))AND(rt0.c2)))AND(t0.c0)))AND(rt0.c0))) FROM t1;SELECT DISTINCT (((t0.c0))<=((CASE WHEN 0.6328818198204227 THEN t1.c0 END))) FROM t1, vt0, t0, rt0; -- 0ms;
SELECT DISTINCT TOTAL((t1.c1 IN ())) FROM t0, rt0, t1, vt0 ORDER BY CASE WHEN (((x'2447'))<=((t1.c1))) THEN ((t1.c0) NOTNULL) WHEN TOTAL_CHANGES() THEN (t1.c1 IN ()) WHEN ((0.36543090195450667)==('qG勢')) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN (((rt0.c0)) BETWEEN ((t1.c2)) AND ((rt0.c0))) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) WHEN ((rt0.c2)-(t1.c1)) THEN NULL WHEN CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c1 END THEN CAST(rt0.c1 AS NUMERIC) WHEN ((t0.c0) NOT NULL) THEN CAST(t1.c1 AS NUMERIC) ELSE ((rt0.c2)*(t0.c0)) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT '~.,tl-%4)' FROM vt0; -- 0ms;
SELECT ALL ((((rt0.c1)&(rt0.c1))) NOT NULL) FROM vt0, t0, rt0, t1 WHERE (CAST(CAST(x'' AS BLOB) AS BLOB)); -- 0ms;
SELECT ALL CASE WHEN CAST(t1.c1 AS REAL) THEN ((t1.c2) BETWEEN (t1.c0) AND (NULL)) WHEN ((rt0.c2) NOT NULL) THEN CAST(x'' AS NUMERIC) WHEN t1.c0 THEN (rt0.c0 IN ()) WHEN CASE 632842591  WHEN rt0.c1 THEN rt0.c0 END THEN (((rt0.c0))<((t0.c0))) WHEN (t1.c2 IN (t1.c0, t0.c0)) THEN (+ (t0.c0)) WHEN x'eee2' THEN (~ (t1.c1)) WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c2)) THEN t0.c0 END FROM rt0, t1, t0, vt0 WHERE (CASE WHEN ((x'')+(NULL)) THEN json_quote(x'') WHEN ((1.59953307E9)LIKE('mDzRQ4dua')) THEN '-1942515823' WHEN CAST(x'bb04' AS NUMERIC) THEN (+ ('-449075155')) ELSE CAST(x'' AS NUMERIC) END) ORDER BY CASE WHEN (+ (t1.c0)) THEN rt0.c1 COLLATE BINARY END; -- 0ms;
SELECT (NOT (SUM(rt0.c1))) FROM rt0, t1, t0 WHERE (CAST(CAST(x'310d' AS INTEGER) AS TEXT)); -- 0ms;
SELECT ALL t1.c0 FROM rt0, t0 WHERE (CASE WHEN NULL THEN ((0.7856352917326843) BETWEEN ('228049416') AND ('V')) WHEN ((NULL)IS NOT(NULL)) THEN CASE -1.7976931348623157E308  WHEN 0.6474188192304209 THEN x'' END WHEN SQLITE_COMPILEOPTION_GET(x'') THEN CAST(NULL AS REAL) ELSE NULLIF(DISTINCT x'', -7.95982823E8) END);SELECT DISTINCT ((((rt0.c0 COLLATE NOCASE)AND(x'')))AND(((t1.c1)GLOB(t1.c1)))), (- (t0.c0 COLLATE RTRIM)), (((t1.c2 IN (rt0.c2, t1.c2)))LIKE((rt0.c0 IN ()))), MIN((- (rt0.c2))), 0.44568571136375656 FROM rt0, t1;SELECT ALL (- (((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))) FROM vt0, t1, rt0 WHERE (((NOT (1.027888851E9)) IN (CASE WHEN x'897f' THEN NULL END, ((0.13220910041058176)AND('-1595059208'))))); -- 0ms;
SELECT ALL ((x'') BETWEEN (((0.04534740729373998)>=(t0.c0))) AND ((~ (t0.c0)))), ((0.8757449730408121)IS NOT(((rt0.c0)<<(rt0.c1)))), ((((MAX(vt0.c0))OR(DATETIME(rt0.c1, t0.c0, NULL, rt0.c2, t1.c1))))OR((~ (t0.c0)))) FROM t1, t0, rt0, vt0 WHERE ('') ORDER BY rt0.c2; -- 0ms;
SELECT DISTINCT ((~ (t1.c2)) IN ()) FROM t0, rt0, t1 LIMIT 1514815674; -- 0ms;
SELECT (((vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE, TYPEOF(DISTINCT rt0.c2), MIN(t1.c1))) AND ((NULLIF(DISTINCT t1.c0, t1.c0), 1126311718, (((rt0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c1)))))) FROM vt0 WHERE (CAST((~ (NULL)) AS NUMERIC));SELECT ALL ((ABS(DISTINCT t1.c2)) NOT BETWEEN (((((t0.c0)OR(t1.c2)))AND(x'ac8e'))) AND (NULL)), ((CAST(rt0.c1 AS BLOB)) BETWEEN ((t1.c0 IN (rt0.c0, t1.c1))) AND (((t1.c2)<<(t1.c0)))), (((t1.c1) NOT BETWEEN (vt0.c0) AND (t1.c0)) IN ()) FROM vt0, t1, t0, rt0 WHERE ((((('')IS NOT(-8.03453526E8)))LIKE(CAST('-1549288816' AS TEXT)))) ORDER BY (NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (0.9984034083637012)))); -- 0ms;
SELECT ((((((rt0.c2) IS TRUE))AND(((t0.c0) NOTNULL))))AND(CAST(t1.c0 AS NUMERIC))), CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (t0.c0)) THEN TYPEOF(t1.c2) WHEN (((t1.c1)) NOT BETWEEN ((0xffffffffa384340f)) AND ((t0.c0))) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (t1.c2)) WHEN SUM(t1.c1) THEN rt0.c0 COLLATE RTRIM END, MAX(CAST(NULL AS INTEGER)), ((((COALESCE(t1.c2, rt0.c0, 'v\r', rt0.c1))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND ('-1714336796')))))OR((~ ('-1911001592')))), CASE WHEN (~ (0.8260256138311745)) THEN 305062008 WHEN t1.c0 COLLATE NOCASE THEN ((rt0.c2)IS NOT(rt0.c2)) WHEN ((((vt0.c0)AND(x'caee')))AND(rt0.c0)) THEN t1.c2 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END FROM t0 NOT INDEXED, t1;SELECT (((vt0.c0))>=((MIN(t1.c1)))) FROM rt0, t1, vt0, t0 WHERE ((CASE 328154268  WHEN NULL THEN 0.6463109751384963 END IN ())); -- 0ms;
SELECT COUNT(((t1.c0) ISNULL)) OVER (), ((((t1.c2) NOTNULL)) ISNULL), (((+ (t1.c2)))<(((vt0.c0)/(rt0.c1)))), ((((rt0.c1)IS(x'')))OR(((x'cd59') NOT BETWEEN (t1.c2) AND (t0.c0)))), ((((CASE WHEN t1.c0 THEN t0.c0 ELSE t1.c2 END)OR((rt0.c2 IN (t1.c2)))))AND((rt0.c1 IN ()))), ((((((((((t1.c2)&(rt0.c1)))AND(x'')))AND((+ (t0.c0)))))OR(CASE WHEN t1.c2 THEN vt0.c0 ELSE rt0.c1 END)))OR(((rt0.c0)!=(rt0.c2)))), json_extract((- (t1.c0)), CAST(t0.c0 AS NUMERIC)) FROM vt0, t1, t0;SELECT DISTINCT NTH_VALUE((((('-2027046818')AND(rt0.c2)))AND(vt0.c0)) COLLATE RTRIM, ((t1.c0) NOT BETWEEN (NULL) AND (t1.c2)) COLLATE NOCASE) OVER () FROM t1, rt0, vt0, t0 WHERE ((((- (''))) IS FALSE)); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((t1.c0)+(t1.c2))) NOT BETWEEN (((t1.c1) IS TRUE)) AND (t0.c0 COLLATE RTRIM)), CASE IFNULL(t1.c2, t0.c0)  WHEN vt0.c0 THEN TRIM(t1.c0) END) OVER () FROM vt0, t1, t0 WHERE (NULL); -- 1ms;
SELECT ALL CAST(((rt0.c0) BETWEEN (t1.c0) AND (x'')) AS INTEGER) FROM t1, rt0, t0; -- 0ms;
SELECT DISTINCT AVG(((((((((t1.c2)OR(t1.c0)))AND(vt0.c0)))OR(NULL)))AND(rt0.c2))), ((LOWER(DISTINCT rt0.c2))-(rt0.c1)), ((((rt0.c1)%(rt0.c2))) ISNULL) FROM t1, rt0, vt0, t0 WHERE (CAST(CASE WHEN '' THEN '953742300' END AS BLOB)); -- 0ms;
SELECT ALL UNLIKELY(DISTINCT CAST(t0.c0 AS TEXT)) FROM vt0 WHERE ((((((NULL, '659440162', 0.43047221134567626))!=((-0.0, x'', '-383805178')))) BETWEEN ((((x''))>=((0.6994443448412975)))) AND ((~ (NULL))))) LIMIT 98356398 OFFSET 763539622;SELECT DISTINCT (t0.c0 COLLATE BINARY IN ()) FROM rt0, vt0, t0, t1; -- 0ms;
SELECT DISTINCT (+ (vt0.c0)) FROM vt0 WHERE ((((('now' COLLATE BINARY)AND('')))OR((NULL IN ())))); -- 0ms;
SELECT ALL ((COUNT(t0.c0)) ISNULL), (- ((~ (t1.c0)))), AVG(((((t1.c0)AND(t0.c0)))AND(rt0.c2))) OVER ( ORDER BY ((((((((((x'')AND(t1.c2)))AND(vt0.c0)))OR(t1.c0)))AND(t1.c2))) NOT BETWEEN (((t0.c0)/(t0.c0))) AND (vt0.c0)) ASC  NULLS LAST) FROM vt0;SELECT DISTINCT SUM(CASE WHEN t1.c0 THEN rt0.c2 ELSE t1.c0 END) OVER () FROM rt0 WHERE (CAST(0.0955110854590625 COLLATE BINARY AS INTEGER));SELECT DISTINCT (((NOT (t1.c0))) BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) AND ((rt0.c1 IN ()))) FROM t1, rt0; -- 0ms;
SELECT NULL COLLATE BINARY, ((CAST(t1.c0 AS REAL)) BETWEEN (t0.c0 COLLATE NOCASE) AND (rt0.c1)), (((rt0.c1, (- (rt0.c2)), ((rt0.c2)GLOB(0xffffffffbe0cce21))))<((t1.c1, (((NULL, rt0.c2, t1.c1, '7職', '1288224793'))==((rt0.c0, rt0.c0, t1.c1, rt0.c1, 0xffffffffd4a72e4d))), CASE rt0.c1  WHEN t1.c0 THEN t0.c0 ELSE vt0.c0 END))) FROM t1, t0 LIMIT -483784034 OFFSET 49459322;SELECT DISTINCT ((((((t0.c0) IS FALSE))OR(LIKELY(rt0.c1))))AND(((t1.c2)>=(rt0.c1)))) FROM vt0, rt0 WHERE (CAST(NULL AS REAL)) GROUP BY ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((t0.c0)OR(rt0.c2))) AND ('R_')) ORDER BY (((t0.c0)>>(rt0.c1)) IN ((- (rt0.c2))));SELECT DISTINCT CASE (t1.c2 IN (t1.c0))  WHEN (rt0.c1 IN (t1.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN ((rt0.c2)!=(rt0.c2)) THEN (((t1.c1))==((t1.c1))) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)*(rt0.c2)) ELSE ((-2.134884481E9) NOTNULL) END FROM t0, vt0;SELECT DISTINCT (t1.c0 COLLATE NOCASE IN ((t1.c2 IN (rt0.c1)))), (((CAST(t1.c0 AS NUMERIC), (rt0.c2 IN ()), (((t1.c1))>((rt0.c0)))))==((rt0.c1, CASE rt0.c2  WHEN t1.c1 THEN t1.c2 ELSE vt0.c0 END, (('vᇟ_I'')') NOT BETWEEN (rt0.c1) AND (NULL))))), UNLIKELY(DISTINCT COUNT(*)) FROM vt0;SELECT COUNT(*) OVER () FROM t1, rt0, vt0, t0 WHERE ('⧰5') GROUP BY (((rt0.c0))>((vt0.c0))), '1331769818', x'9403' HAVING SUM((+ (t1.c2))) LIMIT 769421239; -- 0ms;
SELECT DISTINCT (((NULL)!=(vt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (+ (rt0.c0)) THEN t1.c0 WHEN ((((((((t1.c0)AND(rt0.c1)))OR(vt0.c0)))OR(0xec18424)))AND(t1.c2)) THEN CASE WHEN t1.c2 THEN '' WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN rt0.c0 ELSE t0.c0 END WHEN vt0.c0 THEN rt0.c1 COLLATE NOCASE END FROM rt0, vt0, t0 ORDER BY CASE t1.c1  WHEN NULL THEN t1.c1 END COLLATE RTRIM ASC;SELECT DISTINCT 0.8666463762992587, GROUP_CONCAT(json(t1.c1)), ((((rt0.c2) NOT BETWEEN (t0.c0) AND (t1.c0))) ISNULL) FROM t1, t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0) NOT NULL))/(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (0X6cc331ab COLLATE BINARY) AND ((vt0.c0 IN ()))) WHERE (SUBSTR(x'0c67', ('' IN ())));SELECT DISTINCT (NOT (((t1.c0)|(t1.c0)))) FROM vt0, rt0, t1, t0; -- 0ms;
SELECT vt0.c0 FROM vt0, t0, t1 WHERE (((load_extension('+hFv,O<肨', x''))/(x'' COLLATE RTRIM)));SELECT DISTINCT (~ (rt0.c2)) COLLATE BINARY FROM vt0;SELECT DISTINCT AVG((((rt0.c1, t1.c1, vt0.c0)) BETWEEN ((0.4692738374427964, t1.c0, rt0.c0)) AND (('', vt0.c0, t1.c2)))), ((((((((((((vt0.c0)OR(t1.c0)))AND(rt0.c1)))AND((NOT (t1.c0)))))OR(CAST(rt0.c1 AS BLOB))))AND(CASE WHEN NULL THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END)))AND(((rt0.c0)OR(t1.c1)))), (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((x''))))GLOB(CASE t1.c1  WHEN '**Z6\R)' THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) FROM rt0, t1, vt0, t0 WHERE (LIKELIHOOD(DISTINCT ')IL/O', 0.021577642859882062) COLLATE NOCASE); -- 1ms;
SELECT ALL CAST(CASE t1.c2  WHEN rt0.c0 THEN NULL ELSE t1.c0 END AS INTEGER) FROM t0;SELECT DISTINCT FIRST_VALUE(((t0.c0 COLLATE NOCASE) NOT NULL)) OVER () FROM rt0, t1, t0 WHERE (((('J~Hx', '-1538775042', x'9ad3')) NOT BETWEEN ((x'' COLLATE NOCASE, ((0.6354933116715761) NOT BETWEEN ('qCol	.Nvg') AND (x'')), ((2082030659) BETWEEN (NULL) AND (x'')))) AND (((((('')AND(0.26709292678661334)))OR(x'aa9c')), (x'' IN ()), TYPEOF(0.773031560860837))))); -- 0ms;
SELECT ALL 0.9329860883432838, (- (((t1.c1)>(t0.c0)))), LAG(rt0.c0, (+ (('-1285745435' IN (t1.c2)))), ((((t1.c2) IS TRUE))<=(INSTR(t1.c1, t1.c1)))) OVER ( GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW) FROM t1, rt0, vt0 WHERE ('0.4756815134795135');SELECT ((x'cb43') NOT BETWEEN ((+ (t1.c1))) AND ((rt0.c0 IN ()))) FROM t1; -- 0ms;
SELECT CAST((('NO') NOT NULL) AS NUMERIC) FROM vt0, t1, t0 LIMIT -580510835; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t1, rt0, vt0 NOT INDEXED, t0 ORDER BY CASE ((t0.c0)-(rt0.c1))  WHEN '+M' THEN (- (vt0.c0)) ELSE (((('1915385246')OR(rt0.c1)))OR(rt0.c0)) END ASC, t0.c0, json_type(((t0.c0)LIKE(rt0.c0))) DESC; -- 0ms;
SELECT (((((((rt0.c2))<((rt0.c2))))AND((+ (t1.c2)))))OR(0Xfffffffff0602460)) FROM vt0, t0, t1;SELECT CASE ((t1.c0)-(rt0.c0))  WHEN (rt0.c2 IN (t1.c2, t1.c0)) THEN CASE WHEN t0.c0 THEN t1.c1 ELSE '-343594777' END WHEN (t1.c0 IN ()) THEN json_object(t1.c2, t0.c0) WHEN (('2692137')LIKE(vt0.c0)) THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (x'')) END FROM rt0, t1 LIMIT -2107035985;SELECT ((rt0.c2) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE NOCASE FROM rt0, t1, vt0 WHERE ((+ ((- (x'3672')))));SELECT DISTINCT (((rt0.c2 IN (rt0.c2)))<(((rt0.c2)/(t1.c1)))), LEAD(SUBSTR(t1.c1, x'3567') COLLATE RTRIM COLLATE RTRIM, CASE WHEN ((rt0.c1)AND(t1.c2)) THEN rt0.c1 COLLATE NOCASE END, ((((rt0.c0)/(rt0.c1)))<<(NULL))) OVER ( PARTITION BY (((t0.c0) ISNULL) IN ()), ((((((((rt0.c0)OR(t0.c0)))OR(rt0.c1)))OR((t0.c0 IN ('1054856839', t0.c0)))))AND(((((0x29f34481)AND(t1.c0)))OR(rt0.c0))))), NULL, ((((((((t1.c0)AND(rt0.c2)))AND(vt0.c0)))OR(NULLIF(DISTINCT rt0.c0, t1.c0))))OR(SUM(rt0.c2))), (((((t0.c0, t1.c0, vt0.c0)) BETWEEN ((t1.c2, vt0.c0, t0.c0)) AND ((rt0.c0, vt0.c0, rt0.c1)))) NOT BETWEEN (rt0.c2) AND (SUM('-888947506'))) FROM t1, rt0 WHERE ((((((0.2279620220247811)>>(NULL)), (- (x'')), CASE NULL  WHEN x'84cdff63' THEN x'' END, MAX('0.402975610805666', NULL, NULL, 0.1703144294557698), (((x'9808', x'', '507280705')) NOT BETWEEN ((NULL, 'QG勢', '-1617605106')) AND (('', '', 0.30285960852154037)))))=((CASE '-2111604889'  WHEN '2025566415' THEN NULL END, (-352948372 IN (0.26606582403566614)), ((0x140e1dac)>('')), NULL, CAST(x'' AS REAL)))));SELECT ALL ((((((((t1.c1 COLLATE BINARY)AND((- (t1.c0)))))OR(((598865750)>=(t1.c1)))))OR(((t1.c1) ISNULL))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))), (((+ (rt0.c1)))<=(rt0.c0 COLLATE NOCASE)), CAST((t1.c1 IN ()) AS INTEGER), ((LOWER(DISTINCT t1.c2)) NOTNULL), SUM(t1.c1 COLLATE RTRIM) FROM rt0, t0, t1 WHERE (IFNULL(UNLIKELY(DISTINCT 0.7913501248458619), (- ('')))) LIMIT 1817097960;SELECT DISTINCT rt0.c0 FROM rt0, vt0, t1; -- 0ms;
SELECT DISTINCT ((((((1983061600)AND(rt0.c0)))AND(((rt0.c1)LIKE(rt0.c0)))))OR(((t1.c0)GLOB(878725322)))) FROM t1, rt0 LEFT OUTER JOIN t0 ON (CAST(NULL AS NUMERIC) IN ()) RIGHT OUTER JOIN vt0 ON ((((CAST(rt0.c0 AS REAL))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))))AND(t1.c2)) WHERE ((((((0.9511574780479218, NULL, 0.5473128339097321)) BETWEEN ((x'8e7d', 0.1471890700420142, NULL)) AND (('-198344699', '423546459', NULL)))) NOT BETWEEN ((((NULL)) BETWEEN ((x'')) AND ((x'')))) AND (CAST(-836793322 AS BLOB)))) ORDER BY (NOT (rt0.c0)) COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT ((((((-1041034825) NOT BETWEEN (t1.c2) AND (vt0.c0)))OR((~ (t1.c1)))))OR((NOT (rt0.c2)))) FROM vt0, t0, t1, rt0 WHERE ((CAST(0xffffffffac2dbb02 AS TEXT) IN (NULLIF(2021796640, 0X5d47fe77)))); -- 1ms;
SELECT ((((vt0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (UNLIKELY(t0.c0))), GROUP_CONCAT(t1.c2 COLLATE NOCASE COLLATE RTRIM), 0.3437200185116204 FROM vt0, rt0, t1 WHERE (TYPEOF(DISTINCT ((NULL) BETWEEN (x'') AND (NULL))));SELECT DISTINCT (((NOT (vt0.c0))) IS FALSE), CASE (+ (t0.c0))  WHEN ABS(DISTINCT rt0.c1) THEN (((rt0.c2, rt0.c2, t1.c1))>((rt0.c1, rt0.c0, t0.c0))) ELSE '2137021221' COLLATE NOCASE END, '935908369' FROM rt0, vt0, t1, t0 WHERE ((((((((((NULL)AND(x'8886')))AND(0xffffffffcc70c03b)))OR(0X7a11118a)))AND('hI\n\')) IN ())); -- 0ms;
SELECT DISTINCT ((((SUM(rt0.c2))AND(((t1.c2) BETWEEN (t0.c0) AND (rt0.c0)))))AND(((t1.c1) IS FALSE))) FROM vt0, t0, rt0, t1; -- 0ms;
SELECT LAST_VALUE(((((((((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))OR((rt0.c1 IN ()))))AND(t1.c1)))AND(rt0.c1)))AND(((t1.c2) IS TRUE)))) OVER () FROM t0, vt0, rt0, t1 WHERE ((((NOT (NULL)))<<((- (x''))))); -- 0ms;
SELECT LAG(CAST(((((vt0.c0)AND(t1.c1)))AND(vt0.c0)) AS INTEGER), (MIN(rt0.c2, t0.c0, NULL, rt0.c1) IN ((- (rt0.c2)), CAST(vt0.c0 AS TEXT))), ((x'2ccf') IS FALSE)) OVER ( ORDER BY ((((t0.c0) IS TRUE)) NOT NULL) ASC) FROM rt0, t0, t1, vt0; -- 0ms;
SELECT ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (COUNT(*)) AND (TRIM(DISTINCT rt0.c2))) FROM rt0;SELECT DISTINCT CASE WHEN CAST(t1.c1 AS REAL) THEN CASE WHEN vt0.c0 THEN t1.c0 END ELSE (+ (rt0.c0)) END FROM rt0, t1;SELECT DISTINCT 0X65e8741, ((CASE rt0.c0  WHEN rt0.c2 THEN t1.c0 END)>((((rt0.c0))>((rt0.c0))))), ((((((((((t1.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))/(MIN(rt0.c0))), (((rt0.c2)) BETWEEN ((((rt0.c1)|('1649423650')))) AND ((CAST(rt0.c0 AS NUMERIC)))), ((AVG(t1.c0))==(t1.c1)) FROM vt0 INDEXED BY i19 GROUP BY ((TRIM(DISTINCT t1.c1, vt0.c0))/((t0.c0 IN ()))) HAVING json_insert(((t1.c0)IS(rt0.c1)), ((x'0489') NOT BETWEEN (vt0.c0) AND (vt0.c0)), t1.c0 COLLATE BINARY);SELECT DISTINCT TOTAL((- (t0.c0))) OVER ( GROUPS CASE WHEN ((t1.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)) THEN ((t1.c1) NOT NULL) END PRECEDING EXCLUDE CURRENT ROW) FROM rt0 WHERE (TRIM(DISTINCT CAST(NULL AS NUMERIC)));SELECT ((json(t1.c2)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (rt0.c2)) FROM vt0, rt0, t1, t0; -- 0ms;
SELECT DISTINCT ((((((((NULL)AND(CASE t1.c0  WHEN x'' THEN t0.c0 END)))OR(((rt0.c0)>=(t1.c1)))))AND(((((rt0.c1)AND(rt0.c0)))OR(t1.c2)))))OR((((rt0.c0))>((t0.c0))))) FROM t0, t1;SELECT DISTINCT (((CAST(rt0.c1 AS TEXT)))>((((((rt0.c0)AND(t1.c1)))AND(rt0.c0))))), ((+ (vt0.c0)) IN ()), (~ (t1.c2)) FROM t0, vt0, t1, rt0 WHERE (CASE WHEN (((-8.42405003E8)) NOT BETWEEN ((425170868)) AND ((NULL))) THEN NULLIF(DISTINCT x'd194', x'35c9') ELSE CAST(-755299915 AS TEXT) END) ORDER BY (- ((((vt0.c0, NULL, 1514815674))!=((t0.c0, rt0.c0, t1.c1))))) ASC; -- 0ms;
SELECT ROW_NUMBER() OVER ( ORDER BY (((+ (vt0.c0)))|(((t0.c0) NOT NULL)))  NULLS FIRST) FROM rt0 WHERE (((CASE WHEN NULL THEN ',[b y' ELSE -1.120567128E9 END) NOT BETWEEN (CAST(-81270409 AS BLOB)) AND (((0.7463259585589604) IS FALSE)))) ORDER BY (((- (t1.c1))) BETWEEN (((((((((((((t1.c0)AND(x'e0f6')))OR(t1.c1)))AND(rt0.c2)))OR(t0.c0)))AND(vt0.c0)))OR(t1.c2))) AND ((t1.c1 IN ())));SELECT ALL ((((rt0.c0)==(vt0.c0)))>=(rt0.c0)) FROM t0, t1, rt0;SELECT ALL (- (IFNULL(DISTINCT 2009561298, t1.c2))) FROM vt0, t0 WHERE ((((2.009561298E9)AND('')) IN (NULL)));SELECT GROUP_CONCAT(((((rt0.c1)OR(rt0.c2)))OR(t1.c0))) FROM t0, vt0, t1, rt0 WHERE ((((('dw௺V䋊')OR(0.7052626857964623)))IS((((NULL))<((NULL)))))); -- 1ms;
SELECT (((rt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))) COLLATE BINARY FROM vt0, t1 WHERE ((((CASE x''  WHEN 0.4990379756660194 THEN '-823838185' ELSE '1636244758' END))<=(((('*덝p')-(-2.19409233E8))))));SELECT DISTINCT (((vt0.c0)LIKE(rt0.c1)) IN (((t1.c0) BETWEEN (rt0.c1) AND (rt0.c2)), t1.c1 COLLATE RTRIM)), NULL, UPPER(DISTINCT ((rt0.c1) BETWEEN (t1.c0) AND (rt0.c0))) FROM t0, rt0;SELECT ((NULL COLLATE RTRIM) NOT NULL), '', ((((((t0.c0)&(rt0.c1)))OR(((rt0.c2) NOT NULL))))OR(DATE(t1.c1, t1.c2, rt0.c2))) FROM rt0 GROUP BY NULL HAVING (((((((t1.c0)OR(t0.c0)))AND(vt0.c0))))>=((TOTAL(t0.c0))));SELECT (~ ((((t0.c0, x'', t1.c0)) NOT BETWEEN ((t1.c2, t1.c2, '-774304670')) AND ((rt0.c1, t0.c0, rt0.c1))))), CAST(CAST(t1.c1 AS INTEGER) AS TEXT), ((rt0.c2)>=(COUNT(t1.c0))) FROM t1 ORDER BY (t0.c0 IN ()) COLLATE BINARY  NULLS LAST;SELECT ALL COUNT((~ (0.10385217583249295))) OVER ( GROUPS BETWEEN ((((t0.c0)AND(CASE vt0.c0  WHEN t1.c1 THEN t0.c0 END)))OR(((t0.c0)/(rt0.c1)))) FOLLOWING AND ((- (vt0.c0)) IN ()) FOLLOWING), SUM(((((t1.c1)AND(t0.c0)))OR(t0.c0))) OVER ( ORDER BY NULL  NULLS LAST), x'94d3' FROM t0 NOT INDEXED, rt0, t1, vt0; -- 0ms;
SELECT DISTINCT (((((((((((t1.c1)AND(rt0.c2)))OR(t1.c1)))OR(t0.c0)))OR(t0.c0))))<=((HEX(rt0.c0)))) FROM t0;SELECT COUNT(*) FILTER(WHERE ((t1.c1) IS FALSE)) OVER () FROM vt0, rt0, t1 WHERE ((((- (-4.75543143E8))) IS FALSE)) GROUP BY ((t1.c0) BETWEEN (rt0.c1) AND (t1.c1 COLLATE RTRIM)), (((('ﻫ')AND(((((((((t0.c0)OR(vt0.c0)))OR(t1.c0)))OR(rt0.c1)))AND(rt0.c0)))))OR(((t1.c1)<>(t0.c0)))), ((((t1.c0)>(rt0.c1)))<=(SUBSTR(t1.c0, -176447055))), ((LTRIM(t1.c1, rt0.c0)) ISNULL), 1.583878394E9 HAVING (((((t0.c0))<=((rt0.c1)))) BETWEEN ('') AND (LOWER(DISTINCT rt0.c1)));SELECT DISTINCT json_array_length(((rt0.c1)||(rt0.c1))), ((COALESCE(rt0.c2, vt0.c0))GLOB(((rt0.c1)GLOB(vt0.c0)))), (((((((((~ (t1.c1)))AND(((t1.c1) BETWEEN (t1.c0) AND (rt0.c2)))))AND(((vt0.c0)<<(vt0.c0)))))AND(((t0.c0) ISNULL))))AND((~ (vt0.c0)))) FROM t1, vt0, rt0, t0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c1) NOTNULL)  WHEN rt0.c0 THEN CASE WHEN vt0.c0 THEN rt0.c1 END WHEN NULL THEN rt0.c0 WHEN 0.29422910002456315 THEN (('8J') NOT BETWEEN (t1.c1) AND (rt0.c1)) END FROM t0, vt0, rt0 WHERE ((NULLIF(NULL, 3.28154268E8) IN ()));SELECT ((((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0))) NOT BETWEEN ((t1.c1 IN ())) AND ((((''))==((t0.c0))))) FROM vt0;SELECT DISTINCT ((t1.c1 COLLATE NOCASE)>>(((t1.c1)|(rt0.c0)))) FROM t1, t0, vt0 WHERE (NULL);SELECT ALL (~ (LIKELY(t1.c0))), AVG(((((rt0.c2)OR(t0.c0)))AND(rt0.c0))) OVER (), ((SUM(t1.c1))+(CHANGES())) FROM vt0, t0, rt0 WHERE (((((((-1.636027514E9)|(x'4be6')))OR((('Our5') ISNULL))))AND(json_array_length(0.07256877926001948, 'p'))));SELECT DISTINCT ',xDt' FROM rt0, t1; -- 0ms;
SELECT ALL TIME(((rt0.c1) NOTNULL), ((t0.c0) IS FALSE), (((rt0.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))), ((((rt0.c0)OR(1152465053)))AND(NULL)), vt0.c0 COLLATE NOCASE, '1998414361', ((((t1.c2)OR(t0.c0)))AND(t0.c0))) FROM t1;SELECT DISTINCT ((((rt0.c1) IS TRUE))GLOB(x'')), ((CASE WHEN t1.c2 THEN rt0.c0 ELSE t1.c2 END) NOT BETWEEN (AVG(NULL)) AND (((t1.c2)IS(rt0.c2)))), (((~ (t1.c2))) BETWEEN (LOWER(rt0.c2)) AND ((rt0.c0 IN ()))) FROM t0, rt0, vt0, t1 WHERE (((x'd743')IS NOT(((0.31430769358206445)AND(NULL))))) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN ('yMFY7') AND (((rt0.c1) NOTNULL)))  NULLS LAST; -- 0ms;
SELECT ((rt0.c0)!=(t1.c0)) COLLATE NOCASE FROM t0 WHERE (CASE WHEN (x'aa48' IN (0X2d82b0a6)) THEN (+ (NULL)) END) GROUP BY CAST(CASE WHEN rt0.c0 THEN t1.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t1.c2 ELSE t0.c0 END AS NUMERIC) HAVING QUOTE(ROUND(rt0.c1, t1.c1)) ORDER BY (((vt0.c0) ISNULL) IN (x''))  NULLS LAST, ((vt0.c0)>(((((((((rt0.c0)OR(t1.c0)))OR(x'')))OR(rt0.c0)))OR(rt0.c1)))) ASC  NULLS LAST LIMIT 120863476 OFFSET -91271748;SELECT DISTINCT (((TOTAL(t1.c1), (NOT (rt0.c2)), x''))>=((COUNT(*), ((((t1.c2)AND(x'c1bf')))AND(NULL)), highlight(-814381528, rt0.c0, t0.c0, t1.c1)))) FROM vt0, rt0, t1, t0 NOT INDEXED WHERE ((((0.9914902655785425)) NOT BETWEEN ((CASE WHEN 0.9634627322141364 THEN NULL WHEN 'ObN>' THEN 'yt&95O]' WHEN x'e891' THEN 0.2501314746658888 END)) AND ((((x'')/('.?')))))); -- 0ms;
SELECT DISTINCT (('2009561298')OR(rt0.c2)) COLLATE BINARY COLLATE NOCASE FROM t0;SELECT ALL ((CASE t1.c1  WHEN vt0.c0 THEN t1.c0 END)<<(((1894710444) NOT NULL))), ((((t0.c0)AND(t0.c0)))OR(((rt0.c1) BETWEEN (vt0.c0) AND (t1.c2)))), FIRST_VALUE(GLOB(CASE t1.c0  WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN rt0.c2 THEN t0.c0 ELSE t1.c1 END, (rt0.c1 IN ()))) OVER () FROM t0, t1, rt0;SELECT ALL CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))  WHEN ((rt0.c2) BETWEEN (t1.c1) AND (vt0.c0)) THEN LIKELY(-7.95982823E8) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) END, (NOT (CAST(t0.c0 AS INTEGER))), ((t1.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((rt0.c2) IS FALSE))) FROM t1, rt0 WHERE ((((+ (NULL))) BETWEEN (NULL COLLATE RTRIM) AND (x'b408' COLLATE NOCASE))) ORDER BY ((((t1.c1) IS TRUE)) NOT BETWEEN (vt0.c0) AND (rt0.c1))  NULLS FIRST;SELECT DISTINCT (- (t1.c2)) COLLATE BINARY FROM t1, rt0, vt0 GROUP BY rt0.c2 HAVING (((- (t1.c1))) NOTNULL) ORDER BY ((((t1.c0)==(rt0.c1))) BETWEEN (t0.c0 COLLATE NOCASE) AND ((0.19677670874305098 IN ()))), (((~ (t1.c2)))IS NOT((((t1.c2))>=((vt0.c0))))) ASC, ((rt0.c0 COLLATE BINARY)+((((vt0.c0, rt0.c2, t1.c2)) NOT BETWEEN ((t0.c0, t1.c1, t0.c0)) AND ((rt0.c0, rt0.c0, t1.c1))))) LIMIT 2051915728 OFFSET 1047358165;SELECT ALL MIN(t0.c0 COLLATE BINARY) COLLATE BINARY FROM t1, rt0, t0 WHERE (((((((NULL)*(x'')))AND(CAST('0.30285960852154037' AS BLOB))))AND((+ (x''))))) GROUP BY (NOT (((((t1.c1)AND(t0.c0)))OR(vt0.c0)))) HAVING TOTAL(((((((((t1.c0)AND(t1.c0)))OR(t1.c2)))AND(t0.c0)))AND(t0.c0))) COLLATE BINARY;SELECT ALL GROUP_CONCAT(CASE rt0.c1  WHEN t1.c0 THEN vt0.c0 END) OVER ( ORDER BY CAST(rt0.c0 COLLATE RTRIM AS INTEGER) ASC, ((vt0.c0)*(LOWER(DISTINCT t1.c1))) DESC, ((((t0.c0)-(rt0.c0)))AND(CAST(t1.c0 AS BLOB)))  NULLS LAST ROWS TYPEOF(((t1.c2)+(rt0.c0))) PRECEDING), COUNT((((1.057603451E9, rt0.c2, rt0.c0)) NOT BETWEEN ((vt0.c0, t1.c2, t1.c1)) AND ((t1.c2, t1.c0, t1.c1)))), ((JULIANDAY(rt0.c2, t1.c0, t1.c2)) ISNULL) FROM rt0, t0, t1 WHERE (((((((x'9cb43f2a')OR('q')))AND('1441029234'))) NOT NULL)) ORDER BY t0.c0 DESC, ((((vt0.c0)<=(t1.c0)))<((~ (t0.c0)))) ASC  NULLS FIRST;SELECT ((x'') NOTNULL) FROM vt0, t0 WHERE (json_array_length(('572097234' IN ()))); -- 0ms;
SELECT (((rt0.c1 IN ()))-(1e500)) FROM t0, vt0, t1 ORDER BY IFNULL(DISTINCT CASE t1.c0  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END)  NULLS FIRST;SELECT (((SUM(rt0.c0)))<=(((((rt0.c1, rt0.c0, t0.c0)) NOT BETWEEN ((t1.c1, t1.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, t1.c0)))))) FROM t0, t1, vt0, rt0 WHERE ((0Xffffffff97f883b7 IN ()) COLLATE NOCASE); -- 0ms;
SELECT (NOT (SUM(t1.c2))) FROM vt0;SELECT SUM((rt0.c1 IN ())) OVER () FROM t0, t1, vt0, rt0 LIMIT 2692137 UNION SELECT DISTINCT (GROUP_CONCAT('_') IN ()) FROM vt0, t1 WHERE ((((((x'' IN ()))AND(x'' COLLATE NOCASE)))AND(CAST('	^2\n' AS TEXT))));SELECT ALL CASE WHEN t1.c0 COLLATE BINARY THEN t1.c1 END FROM vt0, t1 WHERE (((json_type(0.4250223973312125)) IS FALSE)); -- 0ms;
SELECT LTRIM(CASE WHEN x'' THEN rt0.c2 WHEN x'' THEN t1.c2 WHEN t1.c0 THEN t0.c0 END, ((((vt0.c0)OR(t0.c0)))AND(rt0.c0))) FROM rt0 WHERE ((~ (((-1029050117) BETWEEN (NULL) AND ('G06'))))) GROUP BY ((((((NULL)>>(t1.c1)))OR(COALESCE(DISTINCT rt0.c1, t1.c0))))AND(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c0 END)), ((((t0.c0 COLLATE BINARY)OR(t1.c1 COLLATE RTRIM)))OR((rt0.c2 IN ()))), ((CASE WHEN t1.c2 THEN t1.c1 ELSE rt0.c1 END) NOTNULL) HAVING ((t1.c1)>>(t0.c0)) COLLATE BINARY;SELECT DISTINCT GROUP_CONCAT(CHANGES()) OVER ( ORDER BY (((- (rt0.c2))) NOT BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST) FROM t0, t1 WHERE (((((('4P,UM2H')) NOT BETWEEN ((0Xffffffffe485c45d)) AND (('-1136208432'))))%(CASE WHEN '' THEN 0.19404615143042325 ELSE NULL END)));SELECT DISTINCT ((0.9508411845304111) NOTNULL) FROM t1 FULL OUTER JOIN rt0 ON (((((t1.c2, t1.c1, vt0.c0, t1.c0, t1.c2)) BETWEEN ((t1.c1, rt0.c1, t1.c2, rt0.c0, t0.c0)) AND ((rt0.c0, NULL, vt0.c0, 1.236586997E9, t1.c0)))) IS TRUE) WHERE ((((((((0X2feb2b2, NULL, '1108775618'))>=(('-500095135', '', '1272332721'))))AND(CAST(x'' AS REAL))))AND(((0.4366528924598485) NOT BETWEEN (NULL) AND ('N	'))))) LIMIT -1489817587;SELECT DISTINCT t1.c2, (((((t1.c1, t1.c0, t1.c2)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, t1.c0, vt0.c0)))) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c2) AND (x''))) AND (((t0.c0) ISNULL))), t1.c2 FROM rt0 WHERE (CAST(0xffffffffdb30b8f5 COLLATE NOCASE AS TEXT));SELECT DISTINCT (- (CAST(t1.c2 AS INTEGER))) FROM rt0;SELECT COUNT(MAX((((t1.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))))) FROM vt0, t0, rt0 WHERE ((((('834654240')<<('-708382784')))%(((NULL) IS FALSE))));SELECT ALL CASE x''  WHEN ((((t0.c0)OR(t1.c0)))AND(t1.c2)) THEN CAST(rt0.c0 AS TEXT) END FROM vt0 WHERE ('-846970293');SELECT DISTINCT '1629051849', MIN(((t1.c1)*(rt0.c1))), COUNT(((rt0.c0)IS(t1.c0))) OVER (), TYPEOF(((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2))), NTILE((((((rt0.c0)) BETWEEN ((t1.c2)) AND ((t0.c0)))) IS FALSE)) OVER () FROM vt0, t1, rt0, t0 ORDER BY ((((t1.c0) ISNULL))GLOB((((rt0.c2))>((t1.c1))))) ASC;SELECT DISTINCT (((- (t1.c2))) ISNULL), LEAD(CASE CASE WHEN '0.8813446842364224' THEN rt0.c1 WHEN t0.c0 THEN 0.059179500740392244 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END  WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0)) WHEN (rt0.c0 IN ()) THEN t0.c0 COLLATE RTRIM WHEN highlight(rt0.c2, rt0.c1, rt0.c1, rt0.c2) THEN CASE t0.c0  WHEN rt0.c0 THEN t0.c0 END END, (((((rt0.c1)AND(t0.c0)))AND(rt0.c1)) IN (t0.c0 COLLATE NOCASE)), ((x'ea90')<>((+ (rt0.c1))))) OVER (), rt0.c2 FROM rt0, t0;SELECT COUNT(*) OVER () FROM vt0; -- 1ms;
SELECT TOTAL(((t0.c0)!=(rt0.c1))), rt0.c1, (((vt0.c0)LIKE(rt0.c2)) IN ()) FROM rt0, t0, vt0; -- 0ms;
SELECT ALL ((json(t1.c1))<<(((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))), json_quote(CASE WHEN rt0.c2 THEN rt0.c2 END), t1.c2 FROM t1, vt0, t0 WHERE (((('WL' IN ())) NOT BETWEEN (highlight(x'2b5eee22', x'', NULL, NULL)) AND (x'' COLLATE NOCASE)));SELECT CAST(x'' AS BLOB) FROM vt0, t1, rt0 WHERE (((json_insert(NULL, 0X77c778d2, 0.6773178181506669))<=((~ (NULL))))) GROUP BY t1.c2 HAVING COALESCE(DISTINCT (t1.c1 IN (vt0.c0, '*4<''c')), ((t1.c1) BETWEEN ('-2028857429') AND (rt0.c0))); -- 0ms;
SELECT (((rt0.c0)-(t1.c2)) IN (CASE WHEN rt0.c0 THEN t0.c0 ELSE t1.c1 END)) FROM t1 ORDER BY (((((((t1.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((t1.c0, t1.c0, t1.c2))))OR(json_array(vt0.c0, t0.c0))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE x'' END))  NULLS FIRST, (((0.8323332298062156 IN ())) ISNULL);SELECT DISTINCT STRFTIME((t0.c0 IN ()), (((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), (((t1.c2, rt0.c2, vt0.c0)) BETWEEN ((rt0.c1, rt0.c2, t1.c2)) AND ((rt0.c1, t1.c1, vt0.c0)))), ((((((((t1.c2)OR(t1.c0)))OR(rt0.c1)))OR(((rt0.c1)<(t1.c2)))))OR(AVG('YMD2'))), COUNT(*) OVER ( ROWS (((t1.c1 IN (rt0.c1, t1.c1)))>>(0.9213934986093875)) PRECEDING) FROM t1, t0, rt0, vt0 WHERE (CASE WHEN ((((x'')OR(0.4381688445037708)))OR(NULL)) THEN ((((x'')AND('-1507580607')))AND(1519075639)) ELSE ((0.8565137639296982) NOTNULL) END) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c1)%(0.08860631567673816))) AND (((rt0.c2) BETWEEN (t1.c0) AND (0.8866491959777183))))  NULLS LAST;SELECT DISTINCT ((((COUNT(vt0.c0))OR(((rt0.c1) IS TRUE))))OR(SQLITE_COMPILEOPTION_USED(rt0.c0))) FROM vt0, t1 NOT INDEXED, rt0, t0 WHERE ((+ (0.7849124004018306))); -- 0ms;
SELECT (NOT (rt0.c0)) COLLATE BINARY FROM vt0 WHERE (CAST(0.0026141427459358546 COLLATE RTRIM AS TEXT)) GROUP BY ('-C' IN ((t0.c0 IN (rt0.c0, t0.c0)))) HAVING ((t1.c1 IN (t0.c0)) IN ());SELECT ALL CAST(((((vt0.c0)AND(t1.c2)))AND(x'fc7b')) AS INTEGER) FROM t0, vt0, t1, rt0; -- 0ms;
SELECT ((t0.c0 IN ()) IN (((t1.c2) BETWEEN (rt0.c2) AND (vt0.c0)))) FROM t0, vt0, t1, rt0 WHERE (TRIM(CASE WHEN x'95ab' THEN '\rSWT3Y7	g' END, (('.Wg') IS TRUE))); -- 0ms;
SELECT DISTINCT CAST(UNLIKELY(rt0.c1) AS INTEGER) FROM t0, vt0, rt0, t1 WHERE ((((((((('-213962113')OR(NULL)))OR(NULL)))OR(((x'136e') NOT BETWEEN (x'') AND (NULL)))))OR(CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)>=(rt0.c0))) BETWEEN ((t0.c0 IN ())) AND (CASE rt0.c1  WHEN t1.c1 THEN rt0.c2 END)) FROM vt0, rt0, t0 WHERE (((((NULL COLLATE RTRIM)AND(load_extension(x'ca50', 0.845189726960267))))AND(LAST_INSERT_ROWID()))) ORDER BY ((((('2021796640', t1.c2, vt0.c0, t1.c1, t1.c1))>=((t1.c1, t1.c1, rt0.c2, vt0.c0, t1.c1))))AND(((vt0.c0)IS(rt0.c0))));SELECT ALL rt0.c2, ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE RTRIM FROM t0, t1;SELECT ALL CAST(CASE WHEN rt0.c0 THEN 0.31153140588273875 ELSE rt0.c1 END AS TEXT), LIKELY(((((rt0.c2)OR(rt0.c0)))OR(t0.c0))), ((((((((((t1.c2)OR('-1584314719')))OR(t1.c0)))OR(rt0.c0)))OR(rt0.c1))) BETWEEN ((x'' IN ())) AND (('' IN ()))) FROM vt0, t1, rt0 WHERE ((NOT (((((x'f9fe')OR(0.9681812661277701)))OR('')))));SELECT DISTINCT rt0.c0 FROM vt0, t1, t0, rt0 WHERE (CAST((((x'')) BETWEEN (('-803453526')) AND (('-1645471131'))) AS BLOB)) GROUP BY ((CAST(t0.c0 AS INTEGER)) IS FALSE); -- 0ms;
SELECT DISTINCT CAST(LIKELY(DISTINCT t1.c2) AS REAL), ((SUM(rt0.c0)) BETWEEN ((((1140846664)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND (-8.36793322E8)), (((t1.c1)) BETWEEN ((((0x25ff3a13)|(rt0.c0)))) AND (((+ (NULL))))) FROM rt0 GROUP BY TRIM(ABS(DISTINCT rt0.c1), CAST(t1.c2 AS TEXT)), ((((vt0.c0) IS FALSE))LIKE(((NULL)%(t1.c0)))), ((((t0.c0)+(t1.c1)))%(((t1.c0) ISNULL)));SELECT DISTINCT t0.c0, t1.c2, ((t1.c0)IS(t0.c0)) COLLATE NOCASE, ((((t1.c0)AND(t0.c0)))AND(t1.c1)) COLLATE BINARY, ((rt0.c0)<=(rt0.c0)) FROM rt0, t1, t0, vt0 LIMIT 659440162 OFFSET 2009248103; -- 0ms;
SELECT ALL CAST(((rt0.c1)<>(t1.c2)) AS NUMERIC), NULL, (x'' IN ()) FROM t1, vt0 WHERE ((NOT ((~ (0.5019447666781208)))));SELECT ALL TOTAL((rt0.c2 IN ())) FILTER(WHERE (((((rt0.c0) IS FALSE)))>((((t1.c0)>(vt0.c0)))))) OVER () FROM rt0 WHERE (((((((((((((0.11104962610142954)OR('&P %RV')))OR(x'')))AND('2012008080')))AND(NULL)))OR(LIKELY('2025566415'))))OR(((2021796640)AND(0.4294799289676463))))) LIMIT -1120567128 OFFSET 460675988;SELECT DISTINCT CASE (+ (t0.c0))  WHEN ((t1.c0)!=(rt0.c0)) THEN CASE t1.c0  WHEN '' THEN t0.c0 ELSE t1.c2 END ELSE (NOT (t1.c0)) END FROM t1, t0;SELECT DISTINCT CAST((((t1.c2))=((rt0.c1))) AS TEXT) FROM rt0;SELECT ALL (((((((((((((rt0.c1 IN ()))OR((rt0.c1 IN ()))))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (0.30253947698959505)))))AND(x'dd38')))OR(COUNT(rt0.c1))))OR((t1.c2 IN (t1.c2, t0.c0)))))OR(t1.c1)) FROM t1, vt0, t0, rt0; -- 0ms;
SELECT DISTINCT NULL FROM t0 WHERE (((CASE 'tgTG'  WHEN 0.749162245021374 THEN NULL WHEN -918610261 THEN x'' WHEN x'' THEN 0.4100555353106432 END)AND(((x'') BETWEEN (0.35688456332391283) AND (NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN (((t1.c1))<=((t1.c1))) THEN (~ (t1.c0)) ELSE ((rt0.c2) BETWEEN (x'') AND (rt0.c1)) END FROM t1, t0 LIMIT 1812183002 OFFSET -1738118502;SELECT ((CAST(t1.c2 AS NUMERIC))LIKE(CASE t1.c0  WHEN rt0.c1 THEN t0.c0 ELSE t1.c0 END)) FROM rt0, vt0, t0 WHERE (((('')&(-795710270)) IN ()));SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))&((~ (t1.c0)))), ((((CASE t0.c0  WHEN t1.c2 THEN t1.c2 ELSE rt0.c1 END)AND(COUNT(t1.c1))))OR('')), 0.7342768485935137 FROM t0, t1, vt0, rt0; -- 0ms;
SELECT DISTINCT (('-524374909') IS TRUE) COLLATE BINARY FROM t1, t0 LIMIT 1927347887 OFFSET -1644016175; -- 0ms;
SELECT ((((TOTAL_CHANGES())AND(((t1.c0)<>(t0.c0)))))AND(vt0.c0)), COUNT(LOWER(DISTINCT t1.c1)), ((t0.c0 COLLATE BINARY) NOTNULL) FROM rt0, t0, t1, vt0 WHERE (((((((0.2760230029364137)AND(0X30b6c32c)))AND(x'')))<=('1724515302' COLLATE RTRIM))); -- 0ms;
SELECT ALL 0x682aa441 FROM t1 GROUP BY ((((NULL IN ())))>(((- (rt0.c2))))), UNICODE((((t1.c0))<((t1.c0)))), 0Xffffffff9f954e0e ORDER BY (((t0.c0 IN ()))<>((((t0.c0))>((rt0.c0))))) DESC, (((NULL))>=((((t1.c2)GLOB(t0.c0))))), (((NOT (vt0.c0))) BETWEEN ((((t1.c0)) BETWEEN ((t0.c0)) AND (('N\n]f')))) AND (CASE WHEN t0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST;SELECT ALL ((0.3945225572307691) BETWEEN (rt0.c1) AND (t1.c2)) COLLATE BINARY FROM rt0, vt0 WHERE (((LIKELIHOOD(0Xffffffffcd38030d, 0.8777735642373458)) BETWEEN ((0.89230034503231 IN ())) AND (CAST(NULL AS REAL))));SELECT DISTINCT COALESCE(NULLIF(rt0.c0, t1.c0), ((rt0.c0)GLOB(rt0.c1))) FROM t0, t1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((t1.c2, t1.c0, rt0.c2, t1.c1, rt0.c1)) NOT BETWEEN ((SUM(vt0.c0), ((((t0.c0)OR('뮲wZr2VB8|')))OR(vt0.c0)), CASE WHEN rt0.c0 THEN x'' END, NULL, RTRIM(t1.c1))) AND ((MIN(rt0.c2), ((t0.c0) IS FALSE), ((((vt0.c0)AND(t1.c1)))AND(t1.c2)), CAST(vt0.c0 AS BLOB), '鋪'))) FROM t1 WHERE (((((((NULL)OR(0x7c66baae)))OR(x'')))LIKE(CAST('-864107772' AS REAL))));SELECT DISTINCT (((rt0.c1 IN ())) BETWEEN (CASE WHEN vt0.c0 THEN t1.c2 ELSE t0.c0 END) AND ((t0.c0 IN (t1.c0)))) FROM vt0, t0, t1, rt0 EXCEPT SELECT (+ ((rt0.c2 IN (t0.c0)))) FROM t1, rt0, vt0;SELECT ALL (((rt0.c2, vt0.c0, t1.c2)) NOT BETWEEN (((((vt0.c0))==((t1.c1))), t1.c2, ((rt0.c1) IS TRUE))) AND (((rt0.c2 IN ()), '-1883327885', HEX(rt0.c1)))), ((TOTAL(t1.c2))|(((vt0.c0)<(rt0.c0)))), t1.c2 FROM vt0, t0;SELECT CASE WHEN CASE t1.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END THEN ((rt0.c1)<=(t0.c0)) END, HEX(DISTINCT ((t0.c0)<(rt0.c1))), PERCENT_RANK() OVER ( ORDER BY CAST(((((t1.c0)OR(vt0.c0)))AND(rt0.c0)) AS INTEGER)) FROM vt0 GROUP BY ((((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS INTEGER))))AND((+ (0.8369394662512988)))) HAVING 0.9050078613454672;SELECT ALL (((SUM(t1.c2), ((t1.c2)+(rt0.c2)), '348712166'))<((rt0.c1 COLLATE RTRIM, CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN 'O\r' WHEN rt0.c2 THEN 0.0992720019277823 WHEN rt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END, MAX(rt0.c2)))) FROM rt0, t0, vt0 LIMIT 1434112028;SELECT DISTINCT (((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ()) FROM rt0, t0 LIMIT -673618377; -- 0ms;
SELECT ALL COUNT((rt0.c2 IN (t0.c0))) OVER ( ORDER BY rt0.c0 DESC) FROM t0;SELECT ALL (((rt0.c1) IS TRUE) IN ()), (((t1.c1)) BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))), ROW_NUMBER() OVER ( ORDER BY (((rt0.c1)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((rt0.c2))))) AND ((x'')))  NULLS FIRST), CASE ((t1.c0) NOT BETWEEN (rt0.c0) AND (t1.c0))  WHEN ((vt0.c0) BETWEEN (t1.c0) AND (rt0.c2)) THEN ((t0.c0) BETWEEN (x'') AND (vt0.c0)) ELSE CAST(rt0.c2 AS REAL) END, ((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((((rt0.c0)AND(rt0.c1)))OR(1563337648)))) FROM vt0 WHERE (((TRIM(DISTINCT '-1734834762', 1061422113))OR(((((x'')OR(x'7c5e6f3c')))OR(-1.285745435E9)))));SELECT 0.8012073120493621 FROM rt0 NATURAL JOIN t1 WHERE ((((1800944930 IN ()))+((('1209882218') IS TRUE)))) GROUP BY ((CAST(vt0.c0 AS NUMERIC)) ISNULL), (CAST(rt0.c0 AS REAL) IN (CAST(rt0.c1 AS BLOB), (NOT (t0.c0)))), -1.7976931348623157E308 COLLATE RTRIM HAVING (~ ((rt0.c1 IN (vt0.c0, t1.c0))));SELECT CAST(COUNT(t1.c1) AS NUMERIC) FROM vt0;SELECT (((NOT (rt0.c2)))<<(((((rt0.c0)OR(rt0.c1)))AND(t0.c0)))), (((+ (rt0.c2))) NOTNULL), (((((+ (t1.c2)))OR(t0.c0 COLLATE RTRIM)))OR(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)))) FROM t0, vt0, rt0;SELECT DISTINCT ((COUNT(*))>(vt0.c0)) FROM rt0, vt0 WHERE (CASE WHEN (((0.8565137639296982))>(('1420542640'))) THEN CAST(0.48552408854518503 AS TEXT) END) GROUP BY rt0.c2 HAVING COUNT(CAST(vt0.c0 AS REAL)) ORDER BY (((- (vt0.c0))) NOT BETWEEN ((t1.c2 IN (NULL))) AND ((((t1.c2))<((rt0.c1))))) ASC;SELECT ALL ((CAST(t1.c1 AS INTEGER))<>(t0.c0 COLLATE NOCASE)), CAST((((rt0.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) AS NUMERIC), ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE, AVG((NOT (rt0.c2))), COALESCE(DISTINCT ((0.762369302629989) ISNULL), ((rt0.c0) NOT NULL)) FROM vt0, t1, t0;SELECT ALL UPPER(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (t1.c0))) FROM t0, vt0, t1, rt0 WHERE (((CAST(NULL AS TEXT))=(x''))); -- 0ms;
SELECT DISTINCT ((CAST(t1.c1 AS NUMERIC)) IS FALSE), (+ (((rt0.c2)%(rt0.c0)))), ((((((rt0.c2)OR(vt0.c0)))AND(t1.c1)))*((((t1.c2))>((rt0.c1))))) FROM t1, vt0 WHERE (((((((((((((((x'9800')OR(0x1ab438e3)))OR(NULL)))OR(NULL)))OR(x'')))AND(NULL)))OR(x''))) NOT BETWEEN ((+ (x''))) AND ((~ ('N')))));SELECT ALL GLOB(((NULL)<<(t1.c1)), (((t1.c0, t0.c0, vt0.c0)) NOT BETWEEN ((t1.c1, rt0.c1, t1.c1)) AND ((rt0.c0, rt0.c0, t1.c0)))) FROM t1, rt0;SELECT DISTINCT ((((((((((x'0d0f')|(t1.c0)))AND(CAST(t1.c0 AS TEXT))))AND(((vt0.c0) IS FALSE))))OR(t0.c0 COLLATE RTRIM)))AND((NOT (t1.c0)))), (((((((((((''))<=((t1.c0))))AND(((t1.c2) BETWEEN (x'') AND (t1.c2)))))OR(((rt0.c1)<=(t1.c2)))))OR(t1.c0 COLLATE RTRIM)))OR(COUNT(t1.c0))), ((((rt0.c2) IS FALSE))AND(t1.c0 COLLATE RTRIM)) FROM vt0 NOT INDEXED, t0, t1, rt0 WHERE ((((0.6713435274347505)GLOB(0xffffffffcdc9eb75)) IN ())); -- 0ms;
SELECT DISTINCT CAST(((((((((rt0.c0)AND(t1.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(t1.c2)) AS TEXT) FROM t1, rt0, vt0, t0 ORDER BY ((rt0.c2 COLLATE RTRIM)IS(rt0.c2)) DESC  NULLS FIRST; -- 0ms;
SELECT (((((t1.c0)OR(rt0.c2)))AND(t0.c0)) IN ()), rt0.c0, (- (((0.09179843983597236) IS FALSE))) FROM t0, vt0;SELECT ALL NTILE(((PRINTF(rt0.c0, rt0.c2, rt0.c2))*((rt0.c2 IN ())))) OVER () FROM rt0;SELECT DISTINCT (((((t1.c1)) NOT BETWEEN ((0.914289202690713)) AND ((rt0.c1)))) NOT BETWEEN (t1.c2 COLLATE BINARY) AND ((NOT (t1.c0)))) FROM vt0, t1 WHERE (CASE x'' COLLATE RTRIM  WHEN (('-1617605106') BETWEEN (0Xffffffffb99c2f01) AND (NULL)) THEN ((((NULL)OR('>}캐Jd.')))AND(0.950900661627377)) END);SELECT DISTINCT ((t1.c1)-(((t1.c0)OR(vt0.c0)))) FROM vt0, rt0 WHERE (((((((0.8847755244385854)OR(0.6035560719622217)))OR('-339449968')))>(CASE x''  WHEN '-222463017' THEN '-175711586' WHEN NULL THEN -279747497 WHEN 0.7826726452840368 THEN 5.406366903187854E-4 ELSE -2.22463017E8 END)));SELECT DISTINCT ((((t1.c1) NOT BETWEEN (vt0.c0) AND (NULL))) IS TRUE) FROM vt0 LIMIT 673014345;SELECT ALL CAST(rt0.c0 AS BLOB) COLLATE RTRIM, x'', (CASE t1.c2  WHEN rt0.c2 THEN t1.c1 END IN ()) FROM t1, rt0, vt0, t0 WHERE (UNLIKELY('-1040721431')); -- 0ms;
SELECT ALL ((CASE t0.c0  WHEN t1.c2 THEN vt0.c0 END)/(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN t1.c2 END)) FROM t1 WHERE ((+ (CAST(NULL AS INTEGER))));SELECT ((- (rt0.c1)) IN ()) FROM rt0, t1, t0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))>(t1.c0 COLLATE BINARY)) FROM t0, rt0, t1 WHERE ((((('NV65~')&(0.4876341022942057))) NOT NULL)); -- 0ms;
SELECT DISTINCT (CAST(1156993762 AS BLOB) IN (CASE WHEN t1.c0 THEN vt0.c0 ELSE rt0.c0 END, ((rt0.c2)==(t1.c2)))), ((((((rt0.c0)AND(rt0.c0)))AND(t1.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND ((+ (rt0.c2)))), (((- (vt0.c0)))GLOB(((((t1.c2)AND(rt0.c0)))AND(vt0.c0)))) FROM vt0, rt0 WHERE (CASE WHEN CASE WHEN NULL THEN 'Sx' WHEN '' THEN x'a721' WHEN -8.71700502E8 THEN NULL ELSE '921059137' END THEN (('')OR('qp')) WHEN ((x'')=('p')) THEN UNLIKELY('0.9831436078265995') WHEN ((x'')OR('')) THEN (((x''))<=(('-305493614'))) WHEN CASE WHEN '-1120567128' THEN 0.03714937737777313 WHEN '1864820719' THEN x'' WHEN x'' THEN x'5263' END THEN (0.4432718075098987 IN ()) WHEN (- ('763539622')) THEN x'' COLLATE RTRIM END);SELECT DISTINCT ((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE) FROM rt0, t1;SELECT DISTINCT ((vt0.c0) NOT NULL) FROM rt0 WHERE ((((('[ 	M')-(0.10025125530277412))) NOT BETWEEN (CAST(NULL AS BLOB)) AND ((('QSOK') NOT BETWEEN (x'') AND (x'')))));SELECT DISTINCT ((rt0.c2 IN ()) IN (LIKELY(t1.c0))) FROM t1, vt0 WHERE (json_insert(LIKELIHOOD(DISTINCT '-1103161136', 0.09537027239522755), '-63022272', x''));SELECT DISTINCT NULL FROM vt0, rt0, t1 WHERE ((~ (x'31fe25a1' COLLATE RTRIM))); -- 0ms;
SELECT ALL ((((t0.c0) IS FALSE)) NOT BETWEEN (x'') AND (rt0.c0)) FROM t1;SELECT DISTINCT ((((rt0.c1)IS(t1.c2))) ISNULL), (+ (SQLITE_COMPILEOPTION_GET(t1.c1))), ((CAST(t1.c0 AS NUMERIC))|(PRINTF(vt0.c0))) FROM t0 WHERE (NULL) ORDER BY (NOT ((rt0.c0 IN ()))) DESC  NULLS LAST;SELECT DISTINCT ((((((((((t0.c0)OR(t0.c0)))AND(rt0.c2)))AND('')))OR(rt0.c0)))>('-1959903234' COLLATE NOCASE)) FROM vt0, t1;SELECT (((((((rt0.c2)OR(t1.c0)))OR(NULL))))=(((((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c0)))))) FROM t1, t0;SELECT DISTINCT (+ (t1.c1)) COLLATE NOCASE COLLATE NOCASE FROM t1, t0, vt0, rt0; -- 0ms;
SELECT ALL AVG((rt0.c1 IN ())), CAST(((((t1.c2)AND(t0.c0)))OR(rt0.c2)) AS REAL), TOTAL(AVG(((t1.c0)IS NOT(t1.c1)))) FROM t0 WHERE (CAST('-794961183' AS INTEGER));SELECT DISTINCT ((((((0.17323098298153627)OR(t1.c2)))OR(vt0.c0))) NOT BETWEEN (x'fc05') AND (((t1.c0) NOTNULL))), ((CASE WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((t1.c1 IN ())) AND ((- (t1.c1)))), rt0.c2 FROM t0, rt0, vt0 WHERE ((-130954367 IN ((0.402096501911285 IN ()))));SELECT DISTINCT t1.c1 FROM t1, t0, rt0, vt0 WHERE (((('-1249102470' IN (-1.75711586E8)))<<(((('7C', '929139639', 'WOh^'))!=((0.2589749200450159, NULL, x'')))))); -- 0ms;
SELECT ALL AVG(CAST(t1.c1 AS TEXT)) FROM vt0 WHERE ((((x'')+('PYQ')) IN ((((('-1788744185')AND(0xfffffffff42d8005)))AND(x'0c7d')))));SELECT t1.c0, rt0.c0, COUNT(CASE WHEN t0.c0 THEN vt0.c0 END) OVER () FROM rt0, t0 WHERE (CAST((NULL IN ()) AS TEXT)) GROUP BY vt0.c0 HAVING CAST(((rt0.c0) BETWEEN (t1.c0) AND (vt0.c0)) AS BLOB) LIMIT -1757802017 OFFSET 598865750;SELECT ALL t1.c2 FROM t1, vt0, t0, rt0; -- 0ms;
SELECT ALL t0.c0 FROM vt0;SELECT ((((vt0.c0)IS NOT(t0.c0)))&(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) FROM rt0, vt0, t1 WHERE (((((((((((x'75dc')OR(0.6301624110335653)))OR(NULL)))OR(NULL)))AND(x''))) NOT BETWEEN ((('\6') BETWEEN (0.02741455215597144) AND (-7.95982823E8))) AND (((0.6033331261333722)=(0.8940729691814064)))));SELECT ALL AVG((vt0.c0 IN ())) COLLATE RTRIM FROM rt0, vt0 WHERE (((((x'') BETWEEN (NULL) AND (-813323751)))%(((x'')>=('vY'))))); -- 0ms;
SELECT (((rt0.c0)) BETWEEN ((((((t1.c2)AND(t1.c0)))OR(t1.c0)))) AND ((((t1.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))))), SQLITE_VERSION(), (((t0.c0 IN ()))*(((t1.c1) NOT BETWEEN (t1.c2) AND (rt0.c2)))) FROM vt0;SELECT DISTINCT (((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))<=(((vt0.c0 IN (rt0.c1))))), ((((t1.c2 IN ())))!=((((rt0.c1)/(t0.c0))))), CAST(json(t1.c0) AS REAL) FROM t0, vt0, t1, rt0 WHERE ((+ (CAST(0.8457111433428252 AS BLOB)))) LIMIT 894600941; -- 0ms;
SELECT DISTINCT (- ((rt0.c1 IN ()))), ((((t1.c2)AND(x'1594')))AND(t1.c2)) COLLATE NOCASE, NULLIF(DISTINCT t1.c1, vt0.c0) COLLATE RTRIM FROM vt0, t0, t1, rt0 LIMIT 732672971 OFFSET 936702535; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0, t1 GROUP BY CASE WHEN rt0.c1 THEN ((((((((t0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(t1.c0)))AND(vt0.c0)) END HAVING AVG(((t1.c2)GLOB(t1.c0)));SELECT DISTINCT AVG((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) OVER () FROM vt0, rt0, t0, t1 LIMIT 1395206904 OFFSET -899641112; -- 1ms;
SELECT DISTINCT t1.c2 FROM vt0, rt0, t0 WHERE ((((-1.83202337E9)>>(NULL)) IN (((((0Xffffffffe3270b53)AND(0.7114694943019299)))OR(NULL))))) LIMIT -198344699;SELECT DISTINCT ((t1.c2) NOTNULL) COLLATE BINARY, TYPEOF(t0.c0) COLLATE BINARY, CAST(COUNT(*) AS BLOB) FROM rt0, t1, vt0;SELECT ((t1.c0 IN ()) IN (rt0.c0)), json_valid(CASE WHEN rt0.c2 THEN t0.c0 ELSE vt0.c0 END), CAST('572097234' COLLATE RTRIM AS NUMERIC) FROM t1, rt0, vt0, t0; -- 0ms;
SELECT ALL (((((t1.c2))<((t1.c2)))) ISNULL), LOWER(DISTINCT ((t0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0))), COALESCE(t1.c0, t0.c0 COLLATE BINARY, ((((vt0.c0)AND(t1.c0)))OR(t1.c0)), (t1.c2 IN ()), CAST(t1.c1 AS INTEGER), (((rt0.c2, rt0.c1, rt0.c2))<=((0.1838590658445255, t1.c0, t1.c0)))) FROM t1, rt0, t0, vt0; -- 0ms;
SELECT ALL ((((t1.c1) NOTNULL)) BETWEEN (((rt0.c0) NOTNULL)) AND ((NULL IN (rt0.c2, vt0.c0)))), MIN(((rt0.c1)>(vt0.c0))), ((((NULL) IS TRUE))<<(((t1.c0)IS NOT(rt0.c2)))) FROM vt0, t0, rt0;SELECT DISTINCT TOTAL(CAST(t1.c0 AS REAL)) OVER () FROM t0 NOT INDEXED, t1 INDEXED BY i73, vt0, rt0;SELECT DISTINCT (GROUP_CONCAT(t1.c1) IN ()), ((((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0))) IS TRUE), ((((LIKELY(t1.c1))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))))OR(((t1.c1)||(rt0.c0)))) FROM t0, t1;SELECT DISTINCT CAST(((rt0.c1) BETWEEN (t1.c1) AND (t0.c0)) AS REAL) FROM t1, t0, vt0;SELECT DISTINCT ((((((((((((CAST(rt0.c2 AS BLOB))OR(((((t1.c0)AND(rt0.c0)))AND(rt0.c0)))))AND(((t1.c2) IS FALSE))))OR(CAST(rt0.c1 AS INTEGER))))OR(GROUP_CONCAT(t0.c0))))OR(HEX(t1.c0))))OR(((t1.c2)||(t1.c0)))), (~ (NULL)), (((vt0.c0, t1.c1, rt0.c0)) NOT BETWEEN ((t1.c1, CASE rt0.c2  WHEN rt0.c1 THEN t1.c0 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 ELSE t1.c2 END, CASE WHEN rt0.c0 THEN t0.c0 ELSE vt0.c0 END)) AND ((CASE rt0.c0  WHEN t0.c0 THEN t1.c2 END, COUNT(rt0.c0), ((rt0.c2)&(t0.c0))))), (((((((rt0.c1)OR(t0.c0)))OR(x'')), ((((((((t0.c0)AND(t1.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)), (('0.056235927348365466') NOT BETWEEN (rt0.c1) AND (vt0.c0))))!=(((NOT (t1.c1)), (((t1.c0))==((t1.c2))), ((t1.c0) ISNULL)))), COUNT(CAST(t1.c2 AS INTEGER)), CASE WHEN CAST(t1.c1 AS REAL) THEN CASE WHEN rt0.c1 THEN t1.c1 WHEN -938109921 THEN 1227282918 WHEN t1.c0 THEN rt0.c0 WHEN '878362449' THEN t1.c0 WHEN rt0.c2 THEN vt0.c0 ELSE t1.c2 END ELSE ((vt0.c0) IS TRUE) END, ((IFNULL(0xffffffffcdc9eb75, rt0.c2))|(((t1.c0)%(x'')))) FROM rt0 FULL OUTER JOIN t1 ON (LIKELY(DISTINCT t0.c0) IN ());SELECT DISTINCT (((((vt0.c0)<<('-1296981883'))))>=((CASE t1.c0  WHEN t1.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 END))), ((t0.c0)=(LTRIM(rt0.c0, rt0.c1))), ((x'01e6')%(((rt0.c0)OR(rt0.c2)))) FROM t0, vt0, t1 WHERE (((0.8618499809355786) NOTNULL) COLLATE BINARY COLLATE NOCASE);SELECT ALL COALESCE((rt0.c2 IN (rt0.c0)), ((t1.c1) BETWEEN (rt0.c2) AND (rt0.c1))) FROM vt0, t0, rt0, t1 WHERE (((x'')%(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((vt0.c0)&(4.9459322E7))) NOT BETWEEN (CASE WHEN rt0.c0 THEN t1.c2 ELSE rt0.c1 END) AND (((((t1.c0)AND(rt0.c2)))OR(rt0.c0)))), (rt0.c1 IN ()), (((t1.c0)>(t1.c1)) IN ()) FROM t0, t1, vt0 WHERE (CAST(CAST(0x14315700 AS INTEGER) AS BLOB)) LIMIT 484830460 OFFSET -734009794;SELECT DISTINCT ((((((vt0.c0, rt0.c1, rt0.c0))<>((t1.c2, t0.c0, rt0.c1)))))==((((rt0.c0) BETWEEN (vt0.c0) AND (t1.c1))))) FROM t0, vt0, rt0, t1; -- 0ms;
SELECT ALL ((((((x'')) NOT BETWEEN ((vt0.c0)) AND ((0.5507393607060146))), (rt0.c2 IN ()), CAST(t1.c0 AS BLOB)))==((((((rt0.c2)AND(rt0.c1)))AND(0.9486453609917604)), (- (t0.c0)), t1.c1))) FROM t0, rt0, vt0, t1 GROUP BY LOWER(DISTINCT vt0.c0), ((((t1.c1)*(vt0.c0))) NOT BETWEEN (((t1.c1)GLOB(rt0.c0))) AND (((NULL) BETWEEN (t0.c0) AND (t1.c1)))), CASE CASE WHEN t1.c2 THEN rt0.c2 WHEN t1.c2 THEN rt0.c1 WHEN t0.c0 THEN t1.c2 END  WHEN x'93fb' THEN (((vt0.c0, t0.c0, vt0.c0))>((rt0.c1, vt0.c0, t1.c0))) WHEN ((((x'')AND(rt0.c1)))OR(t1.c0)) THEN ((rt0.c0) IS FALSE) WHEN CAST(vt0.c0 AS TEXT) THEN (((t1.c0))>((NULL))) END; -- 0ms;
SELECT ((((t1.c0)>>(t0.c0))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (TOTAL(rt0.c0))) FROM vt0, t0, rt0, t1 WHERE (((((((0.7375750710374589)<=('')))OR(('' IN ()))))OR(((0X175a2814) NOTNULL)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (t0.c0) AND (t1.c0)))LIKE(SUM(t1.c1))) FROM t1, vt0, t0, rt0 WHERE (CHAR(((0.7238304215184485)<<(0.9936388340222672)))); -- 0ms;
SELECT NULL, ABS(t1.c1) COLLATE NOCASE, CASE WHEN MIN(t0.c0) THEN CAST('40482293' AS BLOB) WHEN NULL COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c0 THEN t1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN t1.c2 THEN t1.c0 END WHEN x'' THEN (('4P,UM2H') NOT BETWEEN (rt0.c0) AND ('')) END FROM t1, rt0, t0 GROUP BY ((((+ (rt0.c1)), '1812183002', ((rt0.c1)>=(NULL))))=((((t1.c1) IS TRUE), CASE t0.c0  WHEN t1.c1 THEN rt0.c2 END, CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) HAVING (+ (LOWER(DISTINCT rt0.c1)));SELECT DISTINCT 'o' FROM vt0, t1, rt0, t0 GROUP BY ((((((rt0.c1)OR(t1.c2)))OR(rt0.c0)))+((((rt0.c1, vt0.c0, rt0.c2))<((t1.c1, vt0.c0, t1.c1))))), ('2136273471' IN ((NOT (rt0.c2)), (- (t1.c1)))), ((((t1.c1) IS TRUE))|(CAST(vt0.c0 AS REAL))) HAVING (~ (((('-1894208349')) BETWEEN ((vt0.c0)) AND ((0.5782672249074052))))) LIMIT -846576583 OFFSET -245281383; -- 0ms;
SELECT ALL LAST_VALUE(((((+ (x'f7b7b7e0'))))>((CAST(t1.c2 AS TEXT))))) OVER () FROM t1; -- 0ms;
SELECT ((CAST(rt0.c1 AS REAL)) IS FALSE), (+ (t1.c2)), CASE WHEN ((t1.c1)>=(rt0.c2)) THEN MIN(vt0.c0) END FROM t0;SELECT ALL MAX(t0.c0), ((AVG(t1.c1)) NOT NULL), (NOT (MAX(rt0.c2))) FROM rt0;SELECT ALL (CAST(vt0.c0 AS BLOB) IN ()) FROM t0, t1 WHERE (CASE (+ ('1009590727'))  WHEN ((NULL)<>(NULL)) THEN (('') NOTNULL) ELSE ((0.8844596249777904)<<(NULL)) END) LIMIT 920795185 OFFSET -1147143578; -- 0ms;
SELECT DISTINCT TOTAL((t0.c0 IN ())) OVER () FROM vt0, t1, rt0 WHERE (0.16341469209019743) GROUP BY 'Vᇟ_I'')' ORDER BY ((((((rt0.c2)OR(t1.c2)))OR(rt0.c2))) BETWEEN (CASE t0.c0  WHEN t1.c1 THEN x'' ELSE t1.c1 END) AND (NULL)) ASC  NULLS LAST;SELECT ALL COUNT(*), (rt0.c2 IN ()) COLLATE NOCASE, COUNT(((t1.c0) NOTNULL)) FROM vt0, rt0, t0 WHERE (CAST(CAST(NULL AS NUMERIC) AS INTEGER)) GROUP BY ((rt0.c2 COLLATE RTRIM) BETWEEN ((0.26386325815642997 IN ())) AND ((((vt0.c0, x'2b94', rt0.c0)) BETWEEN ((t1.c0, rt0.c1, t0.c0)) AND ((t1.c1, t1.c2, t1.c0))))), (((((t1.c1)|(t1.c2))))<=(('356686797'))), (+ (CASE WHEN t0.c0 THEN rt0.c1 END)) HAVING ((((rt0.c0) IS FALSE))<<(((vt0.c0)<(rt0.c2))));SELECT rt0.c1 FROM t0, vt0, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((rt0.c0))) COLLATE NOCASE, NTILE(((rt0.c0)%((t1.c2 IN ())))) OVER (), SUM(((rt0.c0) ISNULL)) OVER () FROM rt0, t1 WHERE ((((((((((('') NOTNULL))OR((~ ('wc')))))OR((+ ('\H{2k|S9')))))AND(CAST(0.6038418586196119 AS BLOB))))AND(LIKELY(0.09232699114896958))));SELECT ALL 0.31700606536576137 FROM t0, t1, vt0 WHERE (((((NULL)%(']蓮2A'))) ISNULL)); -- 0ms;
SELECT ALL CUME_DIST() OVER (), ((CAST(t1.c1 AS NUMERIC)) BETWEEN (MAX(t1.c0)) AND (NULL COLLATE NOCASE)), AVG((t1.c2 IN ())) OVER () FROM t0, rt0, t1, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((((((184528393)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))OR(CASE t1.c1  WHEN vt0.c0 THEN t1.c1 END)))AND(((vt0.c0) NOT BETWEEN (x'') AND (rt0.c0)))) FROM t0, t1, vt0, rt0 WHERE (('겣<i_GO& ' COLLATE RTRIM IN (((((((((0.8684427756250951)AND(x'')))OR(x'')))AND('-1635242593')))OR(x'7d97715f'))))); -- 0ms;
SELECT ((t1.c1) NOT BETWEEN (t1.c0) AND (rt0.c2)) COLLATE RTRIM, NTILE(((CASE t1.c2  WHEN x'' THEN rt0.c1 WHEN -140338924 THEN t1.c1 WHEN t1.c0 THEN rt0.c1 END)!=(rt0.c0))) OVER (), FIRST_VALUE('746251455') OVER () FROM t1, t0, rt0 WHERE ((((-1636027514, 0.49058163807477195, 'Nc')) NOT BETWEEN ((((((NULL)OR(x'')))AND(0.7506639908174297)), CASE ''  WHEN x'' THEN 0X7aec4c0a ELSE NULL END, CAST('4''' AS NUMERIC))) AND ((CAST(0.6219756084799702 AS REAL), CAST(0.3903663691511523 AS REAL), CAST(0.8750743850363889 AS TEXT))))); -- 0ms;
SELECT (((((rt0.c2)OR(rt0.c1)))AND('0.1675329872851169')) IN ()), COUNT(rt0.c0 COLLATE RTRIM) COLLATE RTRIM, t1.c2 FROM t1, vt0, rt0 WHERE (CASE WHEN (((('-1390327872')OR(NULL)))OR(NULL)) THEN (('(7')==(x'')) WHEN (x'' IN ()) THEN (('-2036523836')>('0.47938374216720625')) WHEN (((0.004832876175088763))>((0.10841279788986169))) THEN ((0.3164091921638008) NOT BETWEEN (NULL) AND (NULL)) WHEN ((-1.894208349E9)LIKE(-548135928)) THEN x'' WHEN x'' COLLATE RTRIM THEN ((']Sl') BETWEEN ('^zdi') AND (NULL)) END); -- 1ms;
SELECT DISTINCT RANK() OVER () FROM t0, rt0; -- 0ms;
SELECT ALL IFNULL(COUNT(*), ((t1.c1)!=(t1.c0))) FROM rt0, vt0, t0;SELECT ALL t0.c0, (~ (AVG(rt0.c0))), COUNT(((t1.c0)*(vt0.c0))) FROM t0, vt0, rt0, t1; -- 0ms;
SELECT ALL x'', NULL, RANK() OVER (), SUM(IFNULL(rt0.c2, t0.c0)) OVER (), ((((((t1.c1)AND(rt0.c2)))AND(rt0.c1))) IS TRUE) FROM t1, rt0, t0; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM t1, vt0, rt0 WHERE (NULL); -- 0ms;
SELECT ALL LOWER(DISTINCT (~ (rt0.c2))) FROM rt0, t1 WHERE (CAST((((0.05997354049140191)) BETWEEN ((4.787889E7)) AND ((1.441029234E9))) AS INTEGER)) ORDER BY 0Xffffffffe0825171 DESC, ((((t1.c1)-(rt0.c0))) BETWEEN (((rt0.c1) NOTNULL)) AND (((NULL) BETWEEN (rt0.c0) AND (t0.c0)))), t1.c2 DESC  NULLS FIRST;SELECT DISTINCT ((((((t0.c0)IS(t0.c0)))OR(MAX(rt0.c2))))AND(((t0.c0)-(vt0.c0)))), (+ (t1.c2)) COLLATE NOCASE COLLATE BINARY, CASE WHEN CAST(rt0.c2 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c2 WHEN rt0.c2 THEN '2<' WHEN t1.c1 THEN t1.c1 WHEN rt0.c0 THEN x'' ELSE rt0.c0 END END FROM t1 GROUP BY CHANGES();SELECT DISTINCT -776228482, CAST(CASE WHEN '\rHᇾFSჺ ' THEN t1.c1 END AS NUMERIC), (((t1.c2)) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c1, 0.31004346071439326))) AND ((((rt0.c0)!=(rt0.c1))))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM t0 GROUP BY QUOTE(NULLIF(t1.c2, t0.c0)), (('-2076658281') NOT BETWEEN (UNLIKELY(rt0.c0)) AND ('#U')), rt0.c0;SELECT ALL CASE WHEN (~ (vt0.c0)) THEN ((((rt0.c0)AND(t0.c0)))OR(t1.c1)) ELSE TOTAL(t1.c2) END FROM vt0, t0, t1;SELECT DISTINCT UNLIKELY(DISTINCT ((rt0.c0) NOTNULL)), IFNULL(DISTINCT ((rt0.c1) NOTNULL), rt0.c0 COLLATE RTRIM), ((CAST(t1.c1 AS NUMERIC))>>(((t0.c0)=(vt0.c0)))) FROM t0, vt0, rt0 WHERE ((NOT (((x'')&(x'')))));SELECT ALL NULL, ((((((rt0.c1)>(t1.c1)))AND(CAST(t0.c0 AS NUMERIC))))AND(CAST(t0.c0 AS BLOB))), ((+ (t1.c0)) IN ()) FROM t1, t0, rt0, vt0 WHERE (''); -- 0ms;
SELECT ALL ((t1.c2 COLLATE NOCASE)%(t1.c1 COLLATE BINARY)) FROM t1 WHERE (CAST(json('P') AS REAL));