-- Time: 2024/06/07 10:14:19
-- Database: database27
-- Database version: 3.40.0
-- seed value: 1236255527
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 TEXT , c1 BLOB , c2 BLOB , c3 TEXT , c4 INTEGER  CHECK ( CASE c3 COLLATE NOCASE  WHEN CASE c4  WHEN c1 THEN c2 END THEN CAST(c0 AS BLOB) WHEN CAST(c2 AS INTEGER) THEN ((c2)||(c1)) WHEN (c3 IN ()) THEN CASE c4  WHEN c1 THEN c1 WHEN c3 THEN c0 WHEN c3 THEN c0 WHEN NULL THEN c1 WHEN c1 THEN c0 END ELSE c1 COLLATE RTRIM END)); -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
COMMIT; -- 3ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0xffffffff84bfd7f7), ('-817234757'), (x'6ff8'); -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
PRAGMA temp.cache_spill; -- 1ms;
INSERT OR FAIL INTO t0(c2, c3, c0) VALUES (x'', '-810615702', x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c2) VALUES ('-2067802121'); -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT ((t0.c0)<>(0.9879234684462359)) COLLATE NOCASE FROM t0 GROUP BY ((((t0.c2) IS TRUE))OR(x'')), ((NULL)IS NOT(((t0.c0)>(0.6920105687580406)))), ((((t0.c0)&(-749796222))) BETWEEN (CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c3 THEN t0.c0 WHEN t0.c4 THEN t0.c3 END) AND ((t0.c2 IN (t0.c4, t0.c1)))); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, '2ZNﱪ', 0.5944542761999317, '-749796222', x''), (NULL, '-2067802121', '2ZNﱪ', NULL, '-1690777284'), (NULL, 0.01129807891560819, 'FALSE', '-817234757', '423576922'); -- 1ms;
INSERT OR IGNORE INTO t0(c0, c2, c4) VALUES ('', 0.6920105687580406, x''); -- 0ms;
PRAGMA temp.journal_mode; -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO t0(c4) VALUES (x''); -- 0ms;
ANALYZE v0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB , c1 BLOB , c2 INTEGER ); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c63 TEXT; -- 1ms;
PRAGMA main.threads; -- 1ms;
PRAGMA reverse_unordered_selects; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (''), (x'a24c'); -- 0ms;
DROP VIEW v0; -- 0ms;
PRAGMA stats; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c52; -- 1ms;
VACUUM temp; -- 0ms;
INSERT OR REPLACE INTO t0(c0, c1) VALUES (-8.10615702E8, 0X256d1c97), (0.6154038869130997, '-1885723412'), (0.07160188878293894, NULL); -- 1ms;
INSERT OR ROLLBACK INTO t1(c63, c2) VALUES (NULL, NULL); -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
ALTER TABLE t0 ADD COLUMN c72 TEXT; -- 1ms;
DELETE FROM t0; -- 0ms;
ALTER TABLE t1 RENAME TO t2; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0(c72, c52, c0) VALUES (NULL, '', 0.07160188878293894); -- 0ms;
INSERT OR ABORT INTO t2(c2, c3) VALUES ('', x''); -- 0ms;
INSERT OR FAIL INTO t0(c1, c72, c0) VALUES (-7.49796222E8, '4RN', 0x584a6e91); -- 0ms;
PRAGMA temp.default_cache_size = 502587467; -- 0ms;
INSERT OR REPLACE INTO t2(c63) VALUES (x'8b24'), (NULL), (''); -- 0ms;
PRAGMA temp.defer_foreign_keys = true; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), ('423576922'), (0.01129807891560819); -- 0ms;
INSERT OR IGNORE INTO t2(c0, c3, c4) VALUES (x'807e', NULL, x''); -- 0ms;
UPDATE OR ABORT t0 SET (c72)=(NULL); -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE UPDATE ON t0 BEGIN INSERT OR FAIL INTO t2(c0) VALUES ('*i0KD/}Y');END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA journal_size_limit = 2995358859995341552; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO t2(c1, c3) VALUES (NULL, '4RN'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO t2(c63, c0, c4) VALUES (0.6510002711369991, 0.5944542761999317, 'Mr?a3F5'), ('-1690777284', 280609853, 0.8333373751975187), ('[]', '', '1768610244'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP TABLE IF EXISTS t0; -- 0ms;
REINDEX NOCASE; -- 0ms;
REINDEX; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL ((CASE WHEN t2.c3 THEN t2.c0 ELSE t2.c4 END)&(((t2.c1)-(t2.c2)))) FROM t2; -- 0ms;
SELECT ALL t2.c63 FROM t2 GROUP BY ((t2.c63 COLLATE NOCASE) IS TRUE) HAVING (((t2.c4)AND(t2.c3)) IN ()) LIMIT 1121900172 OFFSET -817234757; -- 0ms;
SELECT ALL t2.c4 FROM t2; -- 0ms;
SELECT -1.690777284E9 COLLATE BINARY, (NOT (CAST(t2.c2 AS TEXT))), AVG(UNLIKELY('c<Z,')) OVER ( RANGE ((((((t2.c63)AND(t2.c63)))OR(t2.c1))) NOT BETWEEN (((t2.c63)!=(''))) AND ((- (t2.c1)))) PRECEDING EXCLUDE CURRENT ROW) FROM t2;SELECT DISTINCT 'f' FROM t2 WHERE (((-2067802121) NOTNULL) COLLATE BINARY); -- 1ms;
SELECT DISTINCT (json_object(t2.c1, t2.c2) IN (CAST(t2.c1 AS REAL), ((((t2.c0)OR(t2.c0)))AND(t2.c0)))) FROM t2;SELECT DISTINCT (((((((((((((((t2.c3)) BETWEEN ((t2.c2)) AND ((0x1df4e04b))))AND(((t2.c2)IS NOT(t2.c1)))))OR('+\')))OR(CASE WHEN t2.c63 THEN t2.c0 END)))OR(((t2.c3)&(t2.c1)))))OR(0.9809592128586525)))AND((t2.c0 IN ()))) FROM t2 WHERE (((+ ('B!nY%u<M)')) IN ())); -- 0ms;
SELECT DISTINCT (((((t2.c1)AND(t2.c1)))OR(t2.c63)) IN ()) FROM t2 NOT INDEXED; -- 0ms;
SELECT ((((t2.c2)IS(t2.c1))) ISNULL), CASE CASE t2.c2  WHEN t2.c4 THEN t2.c3 WHEN t2.c3 THEN t2.c4 WHEN t2.c1 THEN t2.c3 ELSE t2.c0 END  WHEN CAST(t2.c2 AS BLOB) THEN ((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c0)) WHEN (((t2.c2)) NOT BETWEEN (('0.01129807891560819')) AND (('1121900172'))) THEN ((t2.c3)|(t2.c63)) WHEN ((0.26069263593004977)+('\秳Hd6+N?')) THEN CASE WHEN t2.c1 THEN t2.c63 END END, (NOT ((~ (t2.c63)))) FROM t2 WHERE (CASE x'' COLLATE BINARY  WHEN SQLITE_COMPILEOPTION_USED('1\n') THEN (((NULL)) BETWEEN ((x'')) AND ((x''))) WHEN (NOT (x'4f5a')) THEN ((0.40933422529768293)*(NULL)) WHEN ((('-1660480933'))>((NULL))) THEN ((('-2067802121')) BETWEEN ((1456444348)) AND ((x'451d'))) ELSE (('()v/')<=(x'')) END); -- 0ms;
SELECT ALL ((CASE WHEN t2.c1 THEN t2.c0 END) NOT BETWEEN (t2.c0 COLLATE RTRIM) AND (((t2.c0) IS FALSE))) FROM t2; -- 1ms;
SELECT ((((t2.c0)=(t2.c4)))*(MIN(NULL))) FROM t2 WHERE (CAST(((NULL) BETWEEN (0.9029695869248227) AND (0.3683197761113549)) AS BLOB)) ORDER BY ((t2.c4)>((- (t2.c3)))) DESC; -- 0ms;
SELECT DISTINCT ((((((((LIKELY(t2.c0))AND((~ (t2.c0)))))OR(t2.c4)))OR('-1177470717')))AND((((t2.c3, t2.c2, t2.c2)) NOT BETWEEN ((t2.c0, t2.c3, t2.c0)) AND ((t2.c4, t2.c4, t2.c4))))) FROM t2 WHERE (TYPEOF(CAST('' AS INTEGER))); -- 1ms;
SELECT DISTINCT SUM(((t2.c2)IS(t2.c0))) OVER (), t2.c3, CASE CASE t2.c4  WHEN t2.c1 THEN t2.c2 END  WHEN t2.c4 THEN ((t2.c4) BETWEEN (NULL) AND ('~9')) END, ((((((((((t2.c1) NOT BETWEEN (t2.c63) AND (t2.c0)))OR((NOT (x'')))))AND(((t2.c1)<=(t2.c0)))))AND(t2.c3)))AND('GW')), ((((t2.c4) BETWEEN (t2.c2) AND (t2.c4)))%(CAST(t2.c4 AS INTEGER))) FROM t2 WHERE ((((NULL)-(NULL)) IN (CAST(NULL AS TEXT)))); -- 0ms;
SELECT ALL t2.c1 FROM t2 LIMIT 886709840; -- 0ms;
SELECT ALL (COUNT(*) IN ()), TYPEOF(DISTINCT ((t2.c1)/(NULL))), (((t2.c1, t2.c63, t2.c3)) NOT BETWEEN ((t2.c0, t2.c1, t2.c4)) AND ((t2.c3, x'', t2.c2))) COLLATE RTRIM FROM t2 WHERE ((NOT ((('[O')<<(0.3683197761113549))))); -- 0ms;
SELECT DISTINCT ((((t2.c63)IS NOT(t2.c63))) NOT BETWEEN (((t2.c0)<=(t2.c2))) AND ('')) FROM t2 WHERE ((((x'', 1.121900172E9, NULL)) NOT BETWEEN ((((0.8745212569300848) NOT BETWEEN (0.7942072185172946) AND ('-1690777284')), ((0.18896694580569862) ISNULL), ((1267808884)>(-1885723412)))) AND (((((x'', '423576922', '*i0KD/}Y'))<=(('-711604924', NULL, -2.067802121E9))), ((((x'd501')AND(-443677009)))AND('488990161')), CASE x'2496'  WHEN 0.667790839854868 THEN NULL ELSE '\秳hd6+n?' END)))) ORDER BY (((((t2.c2) NOT BETWEEN (t2.c2) AND (t2.c63))))=((((((t2.c1)OR(t2.c4)))AND(t2.c2))))); -- 0ms;
SELECT ALL x'', ((NULL)IS(t2.c3)), SUM(CASE t2.c1  WHEN t2.c3 THEN t2.c63 END) FROM t2 WHERE ((((((301538595) NOT BETWEEN (1456444348) AND (x''))))<=((((((NULL)AND('F}l')))AND(NULL)))))); -- 1ms;
SELECT DISTINCT UNLIKELY(DISTINCT AVG(t2.c1)) FROM t2; -- 0ms;
SELECT DISTINCT ((((t2.c63)<<(t2.c0)))>(COUNT(*))) FROM t2 WHERE (((x'') NOTNULL)); -- 0ms;
SELECT ((((t2.c4))<((t2.c2))) IN ()) FROM t2 WHERE ((((0.024196617784022822)GLOB(x'edbf')) IN (CAST('-859522166' AS TEXT)))); -- 0ms;
SELECT ((CAST(t2.c3 AS BLOB)) BETWEEN (CASE t2.c3  WHEN t2.c1 THEN t2.c0 END) AND (CASE WHEN t2.c2 THEN '0.667790839854868' WHEN t2.c3 THEN t2.c2 WHEN t2.c4 THEN t2.c2 ELSE t2.c4 END)), ((((((((((((((t2.c4)<<(t2.c2)))OR((((x'c614')) NOT BETWEEN ((t2.c4)) AND ((t2.c3))))))AND((t2.c2 IN ()))))AND((((t2.c1, t2.c0, t2.c2, t2.c1, t2.c1))!=((t2.c1, 0X11f91d23, t2.c2, t2.c2, t2.c0))))))AND((((t2.c0, t2.c3, t2.c0, t2.c63, t2.c0, t2.c3, t2.c2)) BETWEEN ((t2.c1, t2.c63, t2.c0, t2.c2, t2.c4, t2.c3, t2.c1)) AND ((t2.c63, t2.c1, '', t2.c63, t2.c1, t2.c4, t2.c1))))))OR(((t2.c0)<>(t2.c2)))))OR(((t2.c1) ISNULL))), COUNT(*) FROM t2; -- 0ms;
SELECT ALL TRIM(DISTINCT CASE WHEN t2.c4 THEN t2.c63 WHEN t2.c1 THEN t2.c4 WHEN t2.c1 THEN t2.c2 ELSE t2.c4 END, t2.c3) FROM t2 WHERE (((((((((x'')OR((('0.18896694580569862') IS FALSE))))AND((NULL IN ('쐽a')))))OR(json_extract('1e500000', '})'))))AND(((x'') BETWEEN (0X6409a806) AND ('-9223372036854775808')))));SELECT GROUP_CONCAT(TOTAL(GROUP_CONCAT(t2.c4))) FROM t2;SELECT ((((t2.c3 COLLATE NOCASE)OR(CAST(t2.c2 AS BLOB))))OR(((t2.c2) NOT NULL))), CAST(((t2.c2) NOTNULL) AS BLOB), ((UNLIKELY(t2.c4))|(((t2.c4) NOT BETWEEN ('R') AND (t2.c3)))), NTH_VALUE(((((0.01129807891560819)>=(t2.c3))) IS FALSE), (~ (((t2.c4) BETWEEN (t2.c0) AND (t2.c63))))) OVER (), t2.c0 FROM t2 WHERE (CASE WHEN IFNULL(x'b1a1', 0x56906293) THEN ((-7.11604924E8)LIKE(-627693224)) WHEN ((('', x'', x'')) BETWEEN (('7/[r0[秳6', NULL, '-550342227')) AND ((0.5944542761999317, x'', x'e095'))) THEN ((((x'7381')AND(5.25564403E8)))AND(0.0)) WHEN UNLIKELY(DISTINCT NULL) THEN HEX(NULL) END); -- 0ms;
SELECT rtreenode(((t2.c63)-(t2.c63)), AVG('RR/W')) FROM t2; -- 0ms;
SELECT ((((t2.c1)AND(((t2.c63) NOT BETWEEN (t2.c0) AND (t2.c4)))))OR((~ (t2.c63)))) FROM t2 WHERE (((NULL IN (NULL)) IN (CASE WHEN x'9d72' THEN -749796222 END))); -- 0ms;
SELECT ALL TOTAL(t2.c0) FROM t2; -- 0ms;
SELECT ALL ((UPPER(DISTINCT t2.c3)) NOT BETWEEN (CASE WHEN t2.c63 THEN x'' ELSE '0.6154038869130997' END) AND ((+ (t2.c3)))) FROM t2 GROUP BY (((NOT (t2.c1))) NOT BETWEEN (((t2.c4) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (t2.c63)); -- 0ms;
SELECT DISTINCT CAST(((((((((t2.c3)AND(t2.c0)))OR(t2.c63)))OR(t2.c3)))OR(t2.c63)) AS NUMERIC) FROM t2 WHERE (((((((((SQLITE_COMPILEOPTION_USED(118219878))OR(NULL)))AND((('-1655398768') NOT NULL))))OR(((NULL)%(NULL)))))AND(((((1835794577)AND(NULL)))OR(''))))); -- 0ms;
SELECT ((CASE WHEN t2.c2 THEN t2.c0 WHEN t2.c2 THEN t2.c4 WHEN t2.c63 THEN t2.c63 END)>=((t2.c4 IN ()))) FROM t2 WHERE (((LIKELY(DISTINCT x'')) IS FALSE)); -- 0ms;
SELECT CAST(((t2.c2)LIKE(t2.c0)) AS NUMERIC) FROM t2 LIMIT -232236183; -- 0ms;
SELECT ALL CAST((- (t2.c2)) AS INTEGER), (((t2.c63)AND(t2.c4)) IN ()), ((CASE WHEN '0.6154038869130997' THEN t2.c3 END) IS FALSE) FROM t2 WHERE ((((CASE x''  WHEN x'fc0b' THEN x'' WHEN -1699934902 THEN x'' WHEN NULL THEN 0X3511689e ELSE NULL END))==((CAST(522436423 AS INTEGER))))); -- 0ms;
SELECT ALL (((('an')AND(((t2.c0) ISNULL))))OR((t2.c1 IN (t2.c0)))) FROM t2 WHERE ((('(5C') NOT NULL)); -- 0ms;
SELECT DISTINCT (((((t2.c2, t2.c4, t2.c63))!=((t2.c63, t2.c3, t2.c4)))) BETWEEN (221424541) AND (((NULL)GLOB(t2.c3)))) FROM t2 WHERE ((((x'')) BETWEEN ((((('2040052133'))<=((x'a4c3'))))) AND (((('-1159567835')||(NULL)))))) ORDER BY ((t2.c63)-((((t2.c63, t2.c3, t2.c3))==((t2.c1, t2.c1, t2.c2))))) DESC; -- 0ms;
SELECT DISTINCT (NOT (t2.c1 COLLATE RTRIM)) FROM t2 WHERE (CAST(((0.9649241084271398)<=(NULL)) AS NUMERIC)) GROUP BY ((((t2.c63) IS FALSE)) BETWEEN ((('') IS FALSE)) AND ('s<Kvd6҂[')) HAVING AVG(((('v7')) NOT BETWEEN ((t2.c4)) AND ((t2.c2)))); -- 0ms;
SELECT DISTINCT t2.c3 FROM t2; -- 0ms;
SELECT DISTINCT ((t2.c1) IS TRUE) COLLATE BINARY COLLATE RTRIM FROM t2 WHERE ((((- (''))) BETWEEN ((('Mr?a3F5')=(NULL))) AND (((NULL)LIKE(0.8159690050727137))))); -- 0ms;
SELECT ALL COUNT(((((t2.c63)AND(t2.c2)))OR(t2.c63))) OVER (), '0.6920105687580406', TOTAL(((t2.c4)>(t2.c1))) OVER () FROM t2; -- 0ms;
SELECT DISTINCT x'', '[7' COLLATE BINARY, (x'fada' IN ((+ (t2.c2)))) FROM t2; -- 0ms;
SELECT DISTINCT (t2.c2 COLLATE RTRIM IN ()) FROM t2 ORDER BY RTRIM(CAST(t2.c3 AS BLOB)); -- 0ms;
SELECT DISTINCT ((CASE t2.c4  WHEN t2.c2 THEN t2.c1 ELSE t2.c4 END) IS TRUE), CASE WHEN ((t2.c2)>>(t2.c3)) THEN (t2.c63 IN ()) END, ((t2.c3 COLLATE NOCASE) NOT BETWEEN ((t2.c0 IN (t2.c4))) AND (t2.c4)) FROM t2 ORDER BY ((t2.c1 COLLATE RTRIM)!=(((t2.c4)==(t2.c63)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t2.c1)*(t2.c2)) THEN CAST(t2.c2 AS NUMERIC) ELSE ((((((((((((t2.c3)OR(t2.c4)))AND(t2.c63)))AND('-1159567835')))AND(t2.c1)))AND(t2.c3)))AND(t2.c4)) END FROM t2; -- 0ms;
SELECT DISTINCT ((((t2.c2)OR(t2.c3)))AND(t2.c63)) COLLATE NOCASE, NULL, ((LIKELIHOOD(t2.c2, 0.07713259679317086)) NOT BETWEEN (((t2.c4) BETWEEN (t2.c4) AND (t2.c63))) AND (((t2.c4) BETWEEN (t2.c63) AND (NULL)))) FROM t2; -- 1ms;
SELECT DISTINCT ((((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c0))) ISNULL) FROM t2 WHERE (((((NULL)>>(0.052692635616231165))) BETWEEN ((((((((('-1660480933')AND(-440137721)))OR('')))OR('')))OR(x''))) AND (0.24775893277827354 COLLATE BINARY))); -- 0ms;
SELECT ALL HEX(DISTINCT t2.c1), t2.c0, 280609853 FROM t2 WHERE ((JULIANDAY(x'', 0.7136247706024742, x'') IN (NULL COLLATE NOCASE, ((x'a1f4') NOT NULL)))); -- 0ms;
SELECT CAST(((t2.c0) IS TRUE) AS INTEGER) FROM t2 WHERE ((((1.18219878E8)) NOT BETWEEN ((((0X7f03101c)>(0.8090198794084437)))) AND (((NOT (x'')))))); -- 0ms;
SELECT CASE WHEN ((t2.c2) NOT BETWEEN (t2.c63) AND (t2.c3)) THEN HEX(t2.c4) END FROM t2; -- 0ms;
SELECT DISTINCT MIN(x'') FROM t2 WHERE ((+ ((('')||('-440137721'))))); -- 1ms;
SELECT ALL CAST(t2.c63 COLLATE BINARY AS BLOB) FROM t2 GROUP BY ((((((((CAST(t2.c4 AS REAL))AND(x'0bab')))OR(t2.c1)))OR(t2.c0)))AND(STRFTIME(t2.c63, t2.c1, t2.c1))); -- 0ms;
SELECT ALL (~ (x'')) FROM t2; -- 0ms;
SELECT ALL t2.c3, (((t2.c2 IN ()))<=(NULL COLLATE NOCASE)), (+ (((((x'')AND(t2.c4)))AND(t2.c0)))) FROM t2; -- 0ms;
SELECT t2.c2 COLLATE BINARY FROM t2 WHERE (((((NULL)&('423576922')))>=(CASE WHEN '1542429876' THEN 0.9253665797138791 ELSE 0.5944542761999317 END))) GROUP BY ((((t2.c3) BETWEEN (t2.c1) AND (t2.c1))) IS TRUE) HAVING ((((t2.c4)<=(t2.c0)))!=(HEX(DISTINCT t2.c1))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t2.c1 THEN t2.c63 ELSE t2.c63 END AS REAL) FROM t2 WHERE ((~ ('488990161' COLLATE NOCASE))) GROUP BY 0Xffffffffb390d345 HAVING SUM(((t2.c0) BETWEEN (t2.c2) AND (t2.c3))); -- 1ms;
SELECT ALL (((t2.c0) BETWEEN (t2.c3) AND (t2.c1)) IN ()) FROM t2 WHERE (0.7689350205059646); -- 0ms;
SELECT DISTINCT CAST(CAST(t2.c0 AS INTEGER) AS REAL) FROM t2 WHERE (((((((((0Xffffffffb1c2fa6d)OR(0.8460831173085787)))AND(0.019113517328620322)))AND((('525564403') NOT NULL))))OR(x'550ec527'))); -- 0ms;
SELECT DISTINCT (((((t2.c3))<=((t2.c0))))<<(CAST(t2.c2 AS INTEGER))) FROM t2 WHERE ((((- (-859522166)))*(x''))); -- 0ms;
SELECT DISTINCT ((t2.c63)||(t2.c1)) COLLATE NOCASE FROM t2 WHERE (((x'9d80') BETWEEN (CASE NULL  WHEN NULL THEN -1.282354363E9 END) AND (((NULL)-('-1690777284'))))); -- 0ms;
SELECT '0.9029695869248227' FROM t2; -- 0ms;
SELECT DISTINCT (('?7O' COLLATE BINARY)&(((t2.c3)!=(t2.c3)))), CAST(((t2.c4)IS NOT(t2.c0)) AS TEXT), (((t2.c1 IN (t2.c4, t2.c63))) NOT NULL), NULLIF(((t2.c1) BETWEEN (t2.c3) AND (t2.c1)), (((t2.c63)) BETWEEN ((t2.c0)) AND ((t2.c2)))), (((((((('-627693224')OR(((((0.06289065327887722)AND(t2.c0)))OR(t2.c2)))))AND(GROUP_CONCAT(t2.c63))))AND(((((t2.c4)AND(t2.c63)))AND(t2.c3)))))AND(CASE t2.c4  WHEN t2.c0 THEN t2.c2 END)) FROM t2; -- 0ms;
SELECT ALL x'35d4' FROM t2 WHERE (x''); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((t2.c1) BETWEEN (t2.c0) AND (t2.c3))) NOT BETWEEN (t2.c2 COLLATE RTRIM) AND (((t2.c0)&(t2.c1)))), (((((t2.c63)) BETWEEN ((t2.c0)) AND ((t2.c63)))) BETWEEN (CAST(t2.c1 AS TEXT)) AND (t2.c63 COLLATE RTRIM))) OVER () FROM t2;SELECT DISTINCT ((NOT (t2.c0)) IN ()), SUM(0.12317866898091834) OVER (), CASE WHEN CAST(627907735 AS REAL) THEN (~ (t2.c4)) ELSE t2.c3 END FROM t2 WHERE (((0.29911797313735844) IS FALSE) COLLATE BINARY); -- 0ms;
SELECT ALL (COUNT(*) IN ((((t2.c3))<(('u&'))))), (((t2.c3, t2.c2, t2.c0, t2.c2, NULL)) NOT BETWEEN ((((t2.c63)IS NOT(t2.c1)), ((((t2.c0)AND(t2.c2)))OR(x'')), (~ (t2.c0)), ((('-1660480933'))>((t2.c4))), ((t2.c0) NOTNULL))) AND ((t2.c63, -8.59522166E8, COUNT(*), (t2.c2 IN ()), ''))), LAG((~ (json_type(t2.c3))), (((((((((((t2.c1))>=((t2.c3))))OR(((((((((t2.c63)AND(t2.c3)))OR(t2.c4)))OR(t2.c1)))AND(t2.c0)))))OR(LIKELY(t2.c1))))OR(((t2.c63) NOT BETWEEN (t2.c63) AND (t2.c3)))))OR(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c63)))), CAST(((t2.c1) ISNULL) AS TEXT)) OVER () FROM t2 WHERE ((((((('-1282354363')!=(NULL)))AND((((NULL))!=((0.8265766455445503))))))AND((((((((('-1564473244')OR(NULL)))OR('0.8090198794084437')))OR(NULL)))AND(0.7633238338103168))))); -- 1ms;
SELECT DISTINCT TOTAL(((t2.c4)-(t2.c3))) FROM t2; -- 0ms;
SELECT DISTINCT AVG((t2.c2 IN (t2.c3, t2.c63))), ((((t2.c0)AND(t2.c0))) IS FALSE), (((t2.c63)) NOT BETWEEN ((CAST(t2.c2 AS BLOB))) AND ((CAST(t2.c1 AS TEXT)))) FROM t2 WHERE (((((NULL) ISNULL)) ISNULL)); -- 0ms;
SELECT MIN((+ (t2.c0))), (t2.c0 IN ()) COLLATE BINARY, LEAD(0.9352012883600026, CASE ((((t2.c63)OR(t2.c63)))AND(t2.c3))  WHEN ((t2.c63) NOT BETWEEN (t2.c3) AND (t2.c2)) THEN ((((((((((((t2.c0)OR(-1885723412)))AND(t2.c0)))AND(t2.c2)))AND(t2.c0)))AND(t2.c3)))OR(t2.c1)) WHEN (+ (t2.c63)) THEN (t2.c1 IN ()) WHEN (t2.c3 IN ()) THEN ((((t2.c4)OR(t2.c1)))OR(t2.c1)) END, CAST(TIME(t2.c63, t2.c1, t2.c4) AS REAL)) OVER (), ((CASE WHEN t2.c2 THEN t2.c0 END) NOT BETWEEN (t2.c1) AND (t2.c4)), CAST(t2.c4 COLLATE RTRIM AS BLOB) FROM t2; -- 0ms;
SELECT DISTINCT (NOT ((t2.c4 IN ()))), ((((t2.c2)) NOT BETWEEN ((t2.c63)) AND ((t2.c0))) IN (CASE x'49d7'  WHEN t2.c63 THEN t2.c4 WHEN t2.c2 THEN '-1660480933' WHEN t2.c63 THEN t2.c0 ELSE t2.c2 END)), HEX(((t2.c4)AND(t2.c1))) FROM t2; -- 0ms;
SELECT (((+ (t2.c4)))>(((t2.c1) NOT NULL))), (((t2.c3 IN ()))<(((t2.c0)OR(t2.c0)))), (((((t2.c2)OR(t2.c63)))AND(t2.c3)) IN ((t2.c63 IN ()))) FROM t2 WHERE (CAST((- (NULL)) AS TEXT)); -- 0ms;
SELECT ALL ((t2.c2 COLLATE RTRIM)<<(((t2.c2) NOT NULL))) FROM t2; -- 0ms;
SELECT GROUP_CONCAT((+ (t2.c2))) OVER () FROM t2; -- 0ms;
SELECT DISTINCT ((t2.c3)IS NOT(1267808884)) COLLATE BINARY, CASE ((t2.c2) NOTNULL)  WHEN CAST(t2.c2 AS TEXT) THEN (~ (t2.c2)) END, (((t2.c1)||(t2.c63)) IN ()) FROM t2; -- 0ms;
SELECT ALL ((((t2.c63)AND(t2.c1)))AND(((t2.c63) IS FALSE))) FROM t2 WHERE (CAST(CASE WHEN '^2' THEN '-1972748705' END AS INTEGER)); -- 0ms;
SELECT (NOT (((t2.c4)>>('0.9649241084271398')))), ((((t2.c2)) NOT BETWEEN ((t2.c63)) AND ((t2.c3))) IN (t2.c2)), (~ (JULIANDAY(t2.c1, t2.c63, t2.c63))) FROM t2; -- 0ms;
SELECT DISTINCT (((t2.c1)) NOT BETWEEN ((CAST(x'b509' AS BLOB))) AND ((((t2.c1) NOT BETWEEN (t2.c63) AND (t2.c0))))) FROM t2 ORDER BY t2.c4 ASC  NULLS FIRST LIMIT -914622256 OFFSET 10062117; -- 0ms;
SELECT DISTINCT (((t2.c3)) BETWEEN (((t2.c63 IN (t2.c0)))) AND (((('k') NOT BETWEEN (t2.c4) AND (NULL))))) FROM t2 WHERE (((((((('pL/i'))>((0.4523597673256221))))OR(CASE 1835794577  WHEN '1570245064' THEN x'' END)))OR(0.8644137969073867 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT 1959362467 FROM t2; -- 0ms;
SELECT DISTINCT AVG(GROUP_CONCAT(t2.c1)) FROM t2 NOT INDEXED WHERE (((CASE x''  WHEN 0.25418701994085147 THEN 0.6709800817740673 WHEN '1452302995' THEN '*I0KD/}Y' WHEN '-627693224' THEN -1.177470717E9 ELSE NULL END)<>(((NULL) NOT BETWEEN (NULL) AND (''))))) UNION SELECT DISTINCT (((NOT ('-550342227'))) IS TRUE) FROM t2 ORDER BY ((t2.c4 IN ()) IN (-1694408962)) ASC, (NOT (CASE t2.c4  WHEN t2.c1 THEN t2.c3 END)) ASC  NULLS FIRST, ((((t2.c0)OR(t2.c4)))AND(t2.c3)) COLLATE BINARY ASC  NULLS LAST LIMIT -1097457645;SELECT DISTINCT MAX(UPPER(t2.c4)) FROM t2; -- 0ms;
SELECT (((t2.c4 IN ()))AND((((''))>=((t2.c2))))), TRIM(DISTINCT CASE NULL  WHEN t2.c2 THEN t2.c4 END), (NOT (CASE WHEN t2.c3 THEN t2.c63 WHEN '750244052' THEN t2.c3 WHEN t2.c1 THEN t2.c2 END)) FROM t2; -- 0ms;
SELECT DISTINCT (((- (t2.c63)))IS NOT(((t2.c3) NOT NULL))) FROM t2 WHERE ((NOT ('1452302995'))); -- 0ms;
SELECT DISTINCT t2.c4, (~ (((t2.c3) NOT NULL))), (t2.c4 IN (((((t2.c1)OR(t2.c1)))AND(t2.c63)))) FROM t2; -- 0ms;
SELECT DISTINCT LAG(((t2.c4 COLLATE RTRIM) IS FALSE), (+ ((t2.c3 IN ()))), (((t2.c3) IS TRUE) IN (CAST(t2.c1 AS INTEGER)))) OVER ( ORDER BY CASE t2.c3 COLLATE RTRIM  WHEN json_extract(t2.c3, t2.c0) THEN t2.c3 END ASC, CAST(((t2.c1)<(t2.c1)) AS REAL)  NULLS FIRST) FROM t2 WHERE (CAST(ROUND(0.49320834130826097, NULL) AS TEXT)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((NOT (t2.c2))) OVER (), (NOT (CASE WHEN t2.c2 THEN t2.c2 END)), t2.c4 FROM t2; -- 1ms;
SELECT CASE WHEN t2.c2 THEN SUM(t2.c0) WHEN t2.c3 COLLATE BINARY THEN t2.c63 COLLATE NOCASE WHEN ((t2.c0)>(t2.c4)) THEN t2.c2 WHEN COUNT(t2.c1) THEN NULL WHEN (t2.c0 IN (t2.c3)) THEN x'' END, ((((((t2.c63) BETWEEN (t2.c2) AND (t2.c2)))OR(((t2.c4)>>(t2.c1)))))OR(((t2.c63)GLOB(t2.c1)))), ((TRIM(DISTINCT x''))IS(AVG(t2.c0))), TRIM(((((x'')AND(NULL)))OR(t2.c0))), NULLIF(DISTINCT t2.c4, (((t2.c63, 's<Kvd6҂[', 1.768610244E9)) BETWEEN ((x'b613', t2.c4, t2.c2)) AND ((t2.c2, t2.c63, t2.c2)))) FROM t2 GROUP BY t2.c1, CASE t2.c2  WHEN t2.c3 THEN t2.c4 END COLLATE BINARY, CASE ((t2.c63) NOT NULL)  WHEN 423576922 THEN ((t2.c3) ISNULL) WHEN (NOT (t2.c3)) THEN ((t2.c4) NOT BETWEEN (t2.c0) AND (t2.c1)) WHEN json_object(t2.c1, t2.c3, t2.c2, t2.c63, t2.c3, t2.c1) THEN ((t2.c2)>(t2.c0)) END HAVING ((((t2.c1)AND(t2.c3)))GLOB(((t2.c1)AND(t2.c3))));SELECT ALL ((NULL) NOT NULL) FROM t2; -- 1ms;
SELECT DISTINCT (((~ (t2.c4)))/(((((t2.c1)OR(t2.c1)))OR(t2.c2)))) FROM t2 GROUP BY (((t2.c2)) NOT BETWEEN ((((t2.c3) IS TRUE))) AND ((CAST(t2.c63 AS TEXT)))), ((((((((CASE t2.c2  WHEN t2.c0 THEN t2.c2 END)AND(t2.c2 COLLATE RTRIM)))AND(t2.c3)))AND(t2.c1)))OR(((t2.c0)OR(t2.c0)))), t2.c63; -- 0ms;
SELECT DISTINCT CASE WHEN (t2.c2 IN ()) THEN ((t2.c4)||(t2.c2)) WHEN ((t2.c0) ISNULL) THEN ((t2.c63) NOT BETWEEN (t2.c1) AND (t2.c0)) WHEN ((t2.c3)%(t2.c4)) THEN CASE WHEN t2.c0 THEN t2.c2 WHEN t2.c2 THEN t2.c63 WHEN t2.c63 THEN t2.c1 ELSE t2.c2 END ELSE '!|LB' END FROM t2 WHERE (((((((((CASE WHEN NULL THEN NULL WHEN NULL THEN 0x1df4e04b WHEN NULL THEN 0.9580956100474783 END)AND((0.6675329305824843 IN ()))))AND(((('502587467')) BETWEEN ((0.07160188878293894)) AND ((-6.27693224E8))))))AND('-635181232')))OR((('-1830633881')GLOB('-1972748705'))))) EXCEPT SELECT DISTINCT ((GROUP_CONCAT(0.17573850057663765)) IS FALSE) FROM t2; -- 0ms;
SELECT DISTINCT (((- (t2.c4))) BETWEEN (((t2.c3)!=(t2.c4))) AND (CASE t2.c4  WHEN t2.c3 THEN t2.c1 END)) FROM t2; -- 0ms;
SELECT (NOT (((((t2.c4)AND(t2.c0)))OR(t2.c3)))), (~ (((t2.c0) BETWEEN (t2.c1) AND (0.15689562164556348)))), t2.c1 FROM t2 WHERE (CASE WHEN IFNULL('-1121341260', '<R\nn&') THEN CAST('' AS NUMERIC) ELSE ((((((((((((1.18219878E8)AND(NULL)))AND(x'')))OR(x'74fc')))AND(x'')))OR('-1885288462')))OR(x'38bc')) END); -- 0ms;
SELECT DISTINCT ((t2.c3) NOT BETWEEN (COUNT(1934128572)) AND ((((t2.c3)) NOT BETWEEN ((t2.c3)) AND ((t2.c0))))) FROM t2; -- 0ms;
SELECT DISTINCT MIN(t2.c3) FROM t2 WHERE ((((('') BETWEEN ('-657405572') AND (x''))) IS FALSE)); -- 0ms;
SELECT ((((t2.c0)>=(t2.c0)))&(((t2.c63) NOT BETWEEN (t2.c63) AND (t2.c1)))), ((LOWER(DISTINCT 0X27f8beb2)) ISNULL), ((CASE t2.c4  WHEN t2.c63 THEN t2.c2 END) NOT BETWEEN (t2.c63 COLLATE BINARY) AND ((t2.c2 IN (t2.c4)))) FROM t2; -- 0ms;
SELECT ALL LOWER((((t2.c4))>((t2.c4)))) FROM t2 GROUP BY (NOT (0.0023407067373952817)); -- 0ms;
SELECT DISTINCT x'' FROM t2 WHERE ((((('[(Y<', 'j(Uja pp_', NULL, '1959362467', NULL)) NOT BETWEEN ((x'', -4.40137721E8, 0xffffffff84bfd7f7, 2060424730, '-1885723412')) AND ((x'', x'f527', 1.121900172E9, '0.26069263593004977', 2.80609853E8))) IN ())); -- 0ms;
SELECT (((((t2.c4)LIKE(t2.c2))))>=(((t2.c3 IN (x'911d'))))), ((((((((((t2.c2) IS FALSE))OR((((('-1590806033')OR(t2.c2)))AND(t2.c1)))))OR(COALESCE(DISTINCT t2.c63, t2.c4))))AND(x'')))OR(((t2.c3) BETWEEN (t2.c3) AND (t2.c4)))), NULL FROM t2; -- 1ms;
SELECT (((((((((t2.c2)OR(t2.c63)))AND(t2.c0)))OR(t2.c2)))OR(t2.c3)) IN ()), (('-1021741752')||('1959362467')), (~ (t2.c3 COLLATE NOCASE)) FROM t2; -- 0ms;
SELECT DISTINCT (+ (((((t2.c63)OR(t2.c63)))AND(t2.c4)))), (((((t2.c63)OR(t2.c4)))AND(t2.c3)) IN (CAST(t2.c1 AS REAL))), (NOT (0.4529862690466041)), HEX(((0Xffffffff954edd06)&(t2.c1))), (((((t2.c63))!=((t2.c63)))) IS TRUE) FROM t2; -- 1ms;
SELECT ((CASE t2.c2  WHEN t2.c4 THEN t2.c63 END) IS FALSE) FROM t2 WHERE ('Z7ꞄT'); -- 0ms;
SELECT ((t2.c1) BETWEEN (CAST(t2.c0 AS NUMERIC)) AND (IFNULL(x'', t2.c4))) FROM t2 LIMIT -1590806033 OFFSET -952483651; -- 0ms;
SELECT ((json_array(886709840, t2.c0)) BETWEEN (TOTAL(t2.c63)) AND (CASE t2.c4  WHEN t2.c2 THEN t2.c63 END)) FROM t2; -- 0ms;
SELECT ALL t2.c63 FROM t2; -- 0ms;
SELECT DISTINCT (((((t2.c2)OR(t2.c0)))AND(t2.c3)) IN ()), CASE (((t2.c0)) BETWEEN ((t2.c4)) AND ((t2.c63)))  WHEN ((t2.c3)/(t2.c4)) THEN (t2.c4 IN (t2.c2, t2.c1)) ELSE CAST(t2.c1 AS REAL) END, (CASE WHEN t2.c1 THEN t2.c1 ELSE t2.c63 END IN ()) FROM t2; -- 0ms;
SELECT (- (COUNT(t2.c0))), (+ (((t2.c2) NOTNULL))), CASE LOWER(DISTINCT t2.c2)  WHEN ((t2.c1)/(t2.c3)) THEN TOTAL(t2.c63) WHEN COUNT(*) THEN COUNT(t2.c63) WHEN (((t2.c2, t2.c4, t2.c4))<((t2.c3, t2.c1, t2.c1))) THEN (t2.c0 IN ()) END FROM t2 WHERE (((CAST(x'029f' AS INTEGER))<>(((('-443677009'))>=((NULL)))))); -- 0ms;
SELECT DISTINCT LIKELY(((t2.c3) ISNULL)) FROM t2; -- 0ms;
SELECT DISTINCT ((((((((((((CAST(t2.c2 AS REAL))OR(((t2.c1) NOT NULL))))AND(GLOB(t2.c63, t2.c1))))AND(t2.c3)))AND(((t2.c4) IS TRUE))))AND(((t2.c4)OR(t2.c3)))))OR((NOT (t2.c63)))), t2.c63, NULL FROM t2 WHERE ((((NULL, x'', '-550342227')) BETWEEN (('2040052133', (NULL IN (NULL)), ((x'5982') NOT NULL))) AND ((CAST(x'' AS BLOB), (-1649882626 IN ()), ((0.9881209265190725) NOT BETWEEN ('堐mE#6.P') AND ('')))))) ORDER BY ((((t2.c3)>(t2.c3)))<<(SQLITE_VERSION())); -- 1ms;
SELECT ALL (((((t2.c2, t2.c2, t2.c3))>=((t2.c2, t2.c0, t2.c2)))) ISNULL), (((t2.c63 IN (t2.c1, t2.c3)))&(CAST('1456444348' AS BLOB))), (+ (CASE x''  WHEN t2.c2 THEN t2.c0 WHEN t2.c3 THEN t2.c0 WHEN t2.c63 THEN t2.c3 ELSE t2.c63 END)) FROM t2 ORDER BY 1525040775 ASC;SELECT DISTINCT json_valid(json_array(t2.c4, t2.c2, t2.c63, t2.c0)), RANK() OVER (), (((t2.c0, t2.c63, t2.c4))==((t2.c2, t2.c2, t2.c4))) COLLATE NOCASE FROM t2; -- 0ms;
SELECT DISTINCT CAST(((((t2.c3)AND(t2.c3)))AND(t2.c63)) AS TEXT) FROM t2 WHERE ((((('525564403') IS FALSE)) IS TRUE)); -- 0ms;
SELECT CAST((t2.c2 IN ()) AS INTEGER), SUM(HEX(DISTINCT t2.c2)) FILTER(WHERE (((t2.c63 IN (t2.c4, t2.c2))) BETWEEN (CASE t2.c63  WHEN t2.c4 THEN t2.c1 ELSE t2.c63 END) AND (((t2.c3) IS FALSE)))) OVER (), (+ (x'')) FROM t2; -- 1ms;
SELECT DISTINCT TOTAL((~ (t2.c63)) COLLATE BINARY) OVER () FROM t2 WHERE (((x'a93cd1cc7ac2')<=(199507584)) COLLATE NOCASE); -- 0ms;
SELECT ALL CAST(((x'') NOT BETWEEN (t2.c63) AND (NULL)) AS TEXT), (((t2.c3)) NOT BETWEEN ((((t2.c3) IS TRUE))) AND (('-1728658891'))), SUM(((t2.c3) IS FALSE)) OVER () FROM t2; -- 0ms;
SELECT (((((t2.c63, t2.c2, t2.c1))>((t2.c3, t2.c0, t2.c4))))>>(((t2.c63) NOT BETWEEN (t2.c3) AND (0.021561468172655363)))) FROM t2 WHERE ((- (((((((((x'')OR(0Xffffffff954edd06)))AND(NULL)))OR(NULL)))AND(0.8666700400778249))))); -- 0ms;
SELECT DISTINCT MAX('0.6510002711369991') FROM t2 WHERE ((((NULL IN ()))*(((((221424541)AND(-627693224)))AND('1508077087'))))); -- 0ms;
SELECT DISTINCT (((((t2.c3))<=((t2.c4)))) NOTNULL) FROM t2; -- 1ms;
SELECT ALL t2.c0 FROM t2 WHERE (((((((((((NULL) BETWEEN ('pL{}') AND (878228845)))OR((- (x'')))))AND(CAST(x'' AS REAL))))OR(((0.7094045442983886) IS TRUE))))OR((+ (0Xffffffffa9885ad1))))); -- 0ms;
SELECT DISTINCT ((t2.c2) NOT NULL), COUNT((+ (t2.c3))), MIN(((((t2.c63)AND(t2.c1)))OR(t2.c1))) FROM t2; -- 0ms;
SELECT DISTINCT CASE ((((t2.c3)OR(t2.c63)))AND(NULL))  WHEN ((t2.c2)/(t2.c3)) THEN CASE WHEN t2.c2 THEN t2.c1 ELSE t2.c3 END END FROM t2; -- 0ms;
SELECT ALL (((((t2.c3)) NOT BETWEEN ((t2.c3)) AND ((t2.c3))))OR(((t2.c63) NOTNULL))) FROM t2 WHERE (((COALESCE(DISTINCT x'', NULL)) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST((('-1021741752')IS NOT(t2.c4)) AS INTEGER), ((t2.c4 COLLATE RTRIM)>=((('nU') ISNULL))), (((t2.c2)%(t2.c1)) IN (MIN(t2.c2))) FROM t2 WHERE (((((NULL)+(x'')))>=((((x'')) BETWEEN (('679217733')) AND ((NULL)))))); -- 0ms;
SELECT IFNULL((((t2.c1))>((''))), ((t2.c63) BETWEEN (t2.c4) AND (t2.c0))) FROM t2; -- 0ms;
SELECT CAST(CAST(t2.c0 AS REAL) AS REAL) FROM t2; -- 0ms;
SELECT DISTINCT ((t2.c3 COLLATE BINARY) BETWEEN (((t2.c63) ISNULL)) AND ((((((((('')AND(NULL)))AND(t2.c3)))OR(t2.c2)))AND(t2.c1)))) FROM t2; -- 0ms;
SELECT (((0xfffffffff4e8a00b IN ())) BETWEEN (HEX(DISTINCT t2.c63)) AND (((((t2.c63)OR(t2.c2)))AND(t2.c1)))), (((((t2.c2) NOTNULL)))<=((((t2.c4) BETWEEN (t2.c4) AND (0.4523597673256221))))), (~ (NULL COLLATE NOCASE)) FROM t2; -- 0ms;
SELECT DISTINCT (~ (t2.c2)) FROM t2 ORDER BY NULL DESC LIMIT 1835794577; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t2 WHERE ((('-914622256')/(0xffffffff8117a22a)) COLLATE NOCASE) ORDER BY CASE t2.c63 COLLATE RTRIM  WHEN ((((((((t2.c63)AND(t2.c3)))OR(t2.c2)))AND(t2.c2)))OR(t2.c0)) THEN t2.c2 WHEN ((1525040775)/(t2.c3)) THEN ((t2.c2)<(t2.c2)) WHEN CASE t2.c2  WHEN t2.c4 THEN t2.c3 WHEN t2.c3 THEN t2.c3 WHEN t2.c2 THEN t2.c3 END THEN ((t2.c3)<(t2.c1)) ELSE (t2.c4 IN (t2.c2)) END DESC; -- 0ms;
SELECT ALL CAST(t2.c4 AS REAL), LAST_VALUE((((((t2.c0)) BETWEEN ((t2.c63)) AND ((t2.c1)))) IS TRUE)) OVER (), ((((t2.c63)OR(t2.c0)))OR(t2.c3)) COLLATE RTRIM FROM t2 WHERE (((('-711604924')) BETWEEN ((((1.267808884E9) NOT BETWEEN (0x33776023) AND ('301538595')))) AND (((((('1853264753')AND('')))OR(-0.0)))))) LIMIT 1831681736 OFFSET 653379489; -- 0ms;
SELECT ALL CAST(t2.c2 AS NUMERIC), ((CAST(x'6cd7' AS NUMERIC)) BETWEEN (x'78ba') AND (((t2.c3)<>(0.8666700400778249)))), COUNT((((t2.c63, t2.c3, t2.c2)) NOT BETWEEN ((t2.c3, t2.c3, t2.c0)) AND (('2009993941', t2.c2, t2.c1)))) FROM t2 WHERE (((NULL)&(NULL)) COLLATE NOCASE) LIMIT 1247234085 OFFSET 1745469127; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t2.c2) BETWEEN (t2.c4) AND (t2.c1)) COLLATE RTRIM) OVER () FROM t2 WHERE ((~ ((- (-1.177470717E9))))); -- 0ms;
SELECT DISTINCT (NOT (((t2.c0)%(t2.c1)))) FROM t2 ORDER BY (((t2.c3, t2.c3, t2.c0)) BETWEEN ((t2.c3, ('-1021741752' IN ()), GLOB(t2.c4, t2.c1))) AND ((((x'e8dc') IS FALSE), t2.c63 COLLATE NOCASE, CAST(t2.c2 AS INTEGER)))) DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT CASE WHEN (t2.c4 IN ()) THEN CASE t2.c0  WHEN t2.c3 THEN NULL END ELSE t2.c4 END FROM t2 WHERE (CASE (((('෇^X')OR(x'')))OR(NULL))  WHEN ((((x'')AND(NULL)))AND(x'')) THEN (('1216546847') NOT NULL) ELSE ((1.0062117E7)LIKE(0.1080579522584878)) END) LIMIT 1820135794 OFFSET -1853617451; -- 0ms;
SELECT ALL (((t2.c4 IN (t2.c0)))IS(AVG(t2.c3))), (- ((t2.c0 IN (t2.c0)))), ((t2.c1 COLLATE RTRIM)IS NOT(('-1060686223' IN ()))) FROM t2; -- 0ms;
SELECT DISTINCT NULL, (((t2.c0)) BETWEEN (((((t2.c2))==((t2.c0))))) AND (((t2.c0 IN ())))), ((((((t2.c2) BETWEEN (t2.c63) AND (t2.c63)))AND((t2.c2 IN ()))))OR(CASE WHEN t2.c1 THEN t2.c63 WHEN '' THEN t2.c2 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)) FROM t2 WHERE ((((0.8200330138683721)>>(NULL)) IN ())); -- 0ms;
SELECT '%MSfeK', CAST(t2.c63 AS NUMERIC), CAST(CAST(t2.c1 AS BLOB) AS NUMERIC) FROM t2; -- 0ms;
SELECT ALL (HEX(t2.c1) IN ()), ((((t2.c63)IS(t2.c2)))<<(NULLIF(DISTINCT t2.c63, t2.c63))), TOTAL(CASE t2.c1  WHEN t2.c1 THEN t2.c4 ELSE t2.c4 END) OVER ( ORDER BY CAST(json_patch(t2.c4, '') AS NUMERIC)  NULLS LAST, ((0.7406302139421047) NOT BETWEEN (t2.c2) AND (t2.c4)) COLLATE BINARY COLLATE BINARY  NULLS FIRST) FROM t2;SELECT (t2.c2 COLLATE RTRIM IN ()) FROM t2 WHERE (((((NULL)IS NOT(-1641981352)))<(((((0xffffffff990ec3f8)AND(0.9767517310734296)))OR(0.8644137969073867))))); -- 0ms;
SELECT ALL AVG('301538595') FROM t2; -- 0ms;
SELECT DISTINCT t2.c1 FROM t2 WHERE ('U1') LIMIT 1835794577 OFFSET -1727085576; -- 0ms;
SELECT (((((t2.c4)-(t2.c0))))>((((((t2.c4)OR(t2.c0)))OR(t2.c3))))) FROM t2 WHERE ((((((NULL) IS TRUE)))!=(((+ ('1678354438')))))); -- 0ms;
SELECT DISTINCT ((t2.c1 COLLATE BINARY)>>(t2.c0 COLLATE BINARY)) FROM t2 WHERE (json_extract(1429828565, NULL, x'', x'') COLLATE BINARY) GROUP BY ((CAST(t2.c2 AS REAL)) NOT NULL);SELECT ALL (AVG(t2.c2) IN (CAST(0.6098071406327256 AS BLOB))), ((x'')<(json_extract(t2.c63, NULL, t2.c63, t2.c3))), CAST(((t2.c63) NOTNULL) AS BLOB) FROM t2 WHERE (((((((((((NULL)OR('1267808884')))AND(NULL)))OR(x'')))AND('pL{}')))|(((((x'cf47')AND(0.9626058614518828)))OR(NULL))))) GROUP BY ((((t2.c2, t2.c2, t2.c4)) BETWEEN ((t2.c1, t2.c0, t2.c0)) AND ((t2.c3, t2.c0, t2.c0))) IN ()) HAVING ((t2.c4)<(t2.c3)) COLLATE RTRIM; -- 0ms;
SELECT HEX(DISTINCT (((t2.c1, t2.c0, -859522166))<>((t2.c3, t2.c0, t2.c63)))) FROM t2 WHERE ((((('~蒵,-낽')!=(NULL)))%(((NULL)-('1975213246'))))); -- 0ms;
SELECT DISTINCT ((CASE t2.c1  WHEN t2.c4 THEN t2.c1 END) ISNULL), (((((t2.c3, t2.c4, t2.c4))>((t2.c3, t2.c2, t2.c0))))|(CAST(t2.c1 AS INTEGER))), (~ (t2.c3 COLLATE RTRIM)) FROM t2; -- 0ms;
SELECT DISTINCT (((NOT (t2.c3))) NOT NULL) FROM t2 LIMIT -658453311; -- 0ms;
SELECT DISTINCT TOTAL(((t2.c63) IS TRUE)) COLLATE NOCASE FROM t2; -- 0ms;
SELECT DISTINCT CAST(t2.c2 AS NUMERIC) FROM t2; -- 0ms;
SELECT TOTAL(CASE WHEN t2.c63 THEN t2.c1 WHEN t2.c4 THEN t2.c2 WHEN t2.c63 THEN t2.c1 END) OVER (), GROUP_CONCAT((~ (t2.c0)) COLLATE RTRIM) OVER (), COUNT(*) OVER () FROM t2 WHERE (NULLIF(((NULL)||(x'8490')), CASE NULL  WHEN x'' THEN NULL END)); -- 0ms;
SELECT (((((t2.c63) IS TRUE)))<=(('1537370384' COLLATE RTRIM))), (((t2.c4))>=(((t2.c0 IN (t2.c3, t2.c3))))), ((CAST(t2.c2 AS BLOB))&(CASE t2.c4  WHEN t2.c2 THEN t2.c2 WHEN t2.c2 THEN t2.c0 WHEN t2.c1 THEN t2.c63 END)) FROM t2; -- 0ms;
SELECT ((((t2.c4) NOT BETWEEN (t2.c1) AND (t2.c4))) NOT BETWEEN (0.7406302139421047) AND ((t2.c4 IN ()))), CAST(((0.1915260168638122) NOT NULL) AS REAL), ((('-1641981352')) BETWEEN ((t2.c4)) AND ((t2.c2))) COLLATE BINARY, ((CASE t2.c1  WHEN t2.c1 THEN t2.c1 WHEN 0.46529280821738817 THEN t2.c2 WHEN t2.c4 THEN t2.c2 ELSE t2.c63 END)=(CASE WHEN t2.c2 THEN t2.c2 ELSE t2.c2 END)), (- (t2.c2 COLLATE RTRIM)) FROM t2 WHERE (((0.1915260168638122) NOT BETWEEN (-1061620553) AND (NULL)) COLLATE BINARY) ORDER BY t2.c2 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (NOT (((t2.c2) NOT BETWEEN (t2.c3) AND (t2.c2)))) FROM t2 WHERE (IFNULL(LIKELY(0.2925416158799652), ((((0.25418701994085147)OR(NULL)))AND('\n')))) GROUP BY (NOT (((t2.c4) NOTNULL))); -- 0ms;
SELECT ((MIN(t2.c1)) IS TRUE) FROM t2 WHERE (((((((NULL) IS TRUE))OR('' COLLATE NOCASE)))AND(((x'')<(x'a86f'))))); -- 0ms;
SELECT DISTINCT (((NULL))<=(((- (t2.c4))))), ((((((((t2.c2)OR(t2.c0)))OR(t2.c2)))OR(t2.c2)))OR(t2.c1)) COLLATE RTRIM, TYPEOF(((t2.c0) NOTNULL)) FROM t2 WHERE (((CASE 0.6392726168272548  WHEN '-1e500' THEN 0.05576248349993418 WHEN '488990161' THEN '1983947875' WHEN NULL THEN '' ELSE 0.8151337152744911 END)>>(((x'ccc8') BETWEEN (x'') AND ('-2067802121'))))); -- 0ms;
SELECT ALL (+ (t2.c4 COLLATE BINARY)), MAX(((t2.c0) IS FALSE)) COLLATE BINARY, (- (t2.c3)) FROM t2 GROUP BY (((((t2.c63)) NOT BETWEEN ((t2.c3)) AND ((t2.c63)))) BETWEEN ((((t2.c2))<((t2.c1)))) AND (CAST(t2.c63 AS NUMERIC))); -- 0ms;
SELECT ALL (((t2.c2 IN ())) NOT BETWEEN ((- (t2.c63))) AND ((t2.c2 IN ()))) FROM t2; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((t2.c63)OR(t2.c2)))AND(t2.c1))) OVER () FROM t2 GROUP BY CASE WHEN t2.c4 THEN ((NULL) BETWEEN (t2.c2) AND (t2.c3)) WHEN ((t2.c1) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN t2.c1 WHEN LIKELIHOOD(t2.c0, 0.9111985581210336) THEN CAST(t2.c3 AS REAL) END HAVING LIKELY(DISTINCT t2.c4); -- 0ms;
SELECT CAST((- (t2.c2)) AS NUMERIC) FROM t2; -- 0ms;
SELECT ALL ((((((t2.c63))>((t2.c4))), (- (t2.c0)), ((t2.c63)GLOB(t2.c0))))<=((((t2.c0) NOTNULL), TRIM(t2.c1, t2.c4), (t2.c3 IN (t2.c0, t2.c4))))), ((((CASE WHEN t2.c1 THEN t2.c63 WHEN -698311949 THEN t2.c63 WHEN t2.c2 THEN t2.c0 ELSE t2.c63 END)AND(((t2.c63) IS TRUE))))AND(TOTAL(t2.c2))), (((COUNT(t2.c0)))<=((t2.c3))), ((((t2.c0) ISNULL)) NOT BETWEEN (((t2.c1)+(t2.c3))) AND (t2.c4 COLLATE RTRIM)), ((CAST(t2.c63 AS REAL))&(((t2.c4) BETWEEN (t2.c1) AND (t2.c2)))) FROM t2; -- 0ms;
SELECT DISTINCT x'' FROM t2 WHERE (MAX(CAST('i' AS INTEGER), x'96bb')); -- 0ms;
SELECT ROUND(CASE t2.c0  WHEN t2.c3 THEN t2.c0 ELSE t2.c1 END, ((t2.c0)<>(0.4384286062697642))) FROM t2; -- 0ms;
SELECT DISTINCT ((((t2.c4) NOT NULL))>=(HEX(t2.c2))) FROM t2 WHERE ((((0xffffffffc3c353b3)+(x'')) IN ())) LIMIT -1180527709 OFFSET -1702809418; -- 0ms;
SELECT ALL ((((((((((t2.c0)AND(t2.c63)))AND(t2.c0)))OR('')))OR(t2.c2))) BETWEEN ((((t2.c0))<((t2.c0)))) AND (((((((((t2.c3)AND(t2.c2)))AND(t2.c0)))AND(t2.c2)))AND(t2.c4)))), (((((((('-232236183')AND(-932429194)))AND(t2.c63)))AND(((t2.c3) BETWEEN (t2.c3) AND (t2.c4)))))OR(CAST(t2.c2 AS BLOB))), ((IFNULL(DISTINCT t2.c1, t2.c63)) BETWEEN (t2.c2 COLLATE NOCASE) AND (t2.c4)) FROM t2 WHERE (CASE WHEN LIKELY(DISTINCT x'') THEN LOWER(DISTINCT '\n6C5^c') ELSE ((((x'')OR(0.024196617784022822)))AND(0.46529280821738817)) END); -- 0ms;
SELECT ((CAST(t2.c3 AS REAL))<=((((t2.c3, t2.c0, t2.c2))<((t2.c3, t2.c63, t2.c0))))), ((COALESCE(t2.c63, t2.c1, t2.c1, t2.c1)) IS TRUE), ((SQLITE_VERSION())IS(CAST(t2.c3 AS BLOB))) FROM t2 WHERE ((((((0.6307381472004229) NOT BETWEEN (0xffffffffc4882f61) AND (-6.35181232E8))))>=((((x'') IS TRUE))))); -- 0ms;
SELECT DISTINCT NTILE(t2.c0) OVER ( ROWS  UNBOUNDED PRECEDING) FROM t2;SELECT ALL ((CASE 'F*Ik줼K],'  WHEN t2.c0 THEN 0Xffffffffd8c0ccc1 WHEN t2.c63 THEN 0Xffffffff8c22bae3 WHEN t2.c3 THEN t2.c2 END)LIKE(NULL)) FROM t2 WHERE (((0x108b4214 IN (x'e1a0')) IN (CAST(0.7283505492900473 AS BLOB)))); -- 0ms;
SELECT ALL TOTAL(CAST(t2.c2 AS REAL)) FROM t2 WHERE (UNLIKELY(((-283724143)IS NOT(483880740)))); -- 0ms;
SELECT ALL ((x'')IS NOT(CAST(t2.c63 AS TEXT))) FROM t2 WHERE ((((('B8uScv	|&')||(1.542429876E9)))||((- (0.7631419832162903))))) GROUP BY ((((0.49320834130826097) NOT BETWEEN (t2.c63) AND (t2.c4)))-(UNLIKELY(DISTINCT t2.c2))) HAVING CASE WHEN CAST(t2.c3 AS INTEGER) THEN ((t2.c3)OR('')) WHEN t2.c1 COLLATE BINARY THEN ((t2.c0)<=(t2.c3)) WHEN t2.c4 COLLATE BINARY THEN ((t2.c4)IS(t2.c4)) ELSE (('-503587473') IS FALSE) END; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t2; -- 0ms;
SELECT AVG(CASE t2.c1  WHEN t2.c3 THEN t2.c3 ELSE t2.c4 END) FILTER(WHERE ((IFNULL(DISTINCT t2.c4, t2.c4)) ISNULL)) OVER (), 0.5218399704554423, COUNT((+ (t2.c2))) FROM t2 WHERE (((((0.0317459556495564) IS TRUE))!=(((-2129157590) NOT NULL)))); -- 0ms;
SELECT ALL (+ (((((t2.c4)OR('-826417651')))AND(t2.c63)))), ((((t2.c4) NOT NULL)) NOT BETWEEN (((t2.c4) BETWEEN (NULL) AND (t2.c63))) AND (t2.c4)), COUNT((((t2.c0))!=((t2.c63)))) FROM t2 WHERE (LIKELIHOOD(((x'40e9')LIKE('-455789700')), 0.0025533039751994835)); -- 0ms;
SELECT ALL ((t2.c4) IS FALSE) COLLATE BINARY FROM t2; -- 0ms;
SELECT ALL SUM(t2.c2) OVER ( GROUPS BETWEEN  CURRENT ROW AND (CAST(t2.c4 AS NUMERIC) IN ()) PRECEDING EXCLUDE NO OTHERS) FROM t2;SELECT ALL AVG(t2.c63) OVER ( RANGE  UNBOUNDED PRECEDING) FROM t2 WHERE (((('GOZ')) NOT BETWEEN ((((((NULL)AND('356543293')))OR(NULL)))) AND ((CAST(x'' AS NUMERIC))))); -- 0ms;
SELECT DISTINCT (~ (COALESCE(DISTINCT t2.c63, t2.c1))), (((t2.c63) NOT BETWEEN (t2.c2) AND (t2.c3)) IN ()), (((((t2.c3)) BETWEEN ((t2.c3)) AND ((t2.c4))))LIKE(((t2.c4)IS NOT(t2.c1)))) FROM t2 GROUP BY CAST(t2.c3 AS BLOB) COLLATE NOCASE HAVING ((MAX(t2.c63)) IS FALSE) ORDER BY CAST(((((t2.c0)AND(t2.c0)))AND(t2.c63)) AS TEXT)  NULLS FIRST; -- 0ms;
SELECT ALL NULL, ((t2.c3) BETWEEN ((+ (t2.c63))) AND (GROUP_CONCAT(t2.c0))), ((((0.28202003262291764)OR(LTRIM(t2.c63, t2.c1))))OR(((t2.c63)IS(t2.c0)))) FROM t2; -- 0ms;
SELECT DISTINCT (AVG(t2.c63) IN ()), t2.c4, CASE WHEN ((t2.c1)AND(t2.c3)) THEN ((((t2.c0)AND(t2.c1)))OR(t2.c0)) ELSE CAST(t2.c3 AS BLOB) END FROM t2 WHERE (TRIM(DISTINCT ((0.8456560497531665)=('-1130573057')))); -- 0ms;
SELECT (('-1590806033') ISNULL), (+ (((t2.c2) ISNULL))), GROUP_CONCAT(((t2.c0) NOT BETWEEN (t2.c3) AND (t2.c1))), (CASE t2.c0  WHEN 0x6d2d3ec8 THEN t2.c0 ELSE t2.c2 END IN ()), CASE 1.216546847E9  WHEN ((t2.c3)GLOB(t2.c3)) THEN (+ (t2.c63)) ELSE NULLIF(t2.c2, t2.c0) END FROM t2; -- 0ms;
SELECT MAX((- (t2.c63))) COLLATE RTRIM FROM t2; -- 0ms;
SELECT TYPEOF(((t2.c63)!=(t2.c4))) FROM t2 WHERE (((0.07089494783294814)>=(CAST(NULL AS BLOB)))) GROUP BY load_extension(t2.c4) COLLATE BINARY HAVING t2.c3; -- 0ms;
SELECT ((ABS(DISTINCT 0.8453213670548059))LIKE(UPPER(t2.c1))) FROM t2 NOT INDEXED ORDER BY (((((t2.c0)) NOT BETWEEN ((t2.c4)) AND ((t2.c3)))) ISNULL) ASC; -- 0ms;
SELECT ALL ((+ (t2.c2)) IN ()) FROM t2 WHERE (((((x'')-(x''))) IS TRUE)); -- 0ms;
SELECT ALL ((0.019113517328620322)>=(((((((((t2.c3)AND(t2.c2)))AND(t2.c4)))AND(t2.c2)))AND(t2.c63)))) FROM t2; -- 0ms;
SELECT ALL t2.c2, COUNT(TYPEOF(DISTINCT t2.c3)), ((((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c3)))<<(((t2.c1) NOT NULL))) FROM t2 WHERE ((((0x33776023 IN ()))IS NOT('웹㎧8I*{' COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((t2.c0) NOT BETWEEN (t2.c3) AND (t2.c1))) IS FALSE) FROM t2 WHERE ((((((x'')OR('-1641981352')))AND(0.18105341269467068)) IN ())); -- 0ms;
SELECT DISTINCT MAX(CASE t2.c63  WHEN t2.c2 THEN t2.c0 WHEN t2.c1 THEN t2.c63 WHEN t2.c2 THEN t2.c4 END) FROM t2; -- 0ms;
SELECT COUNT(highlight(x'1d4f', t2.c2, t2.c2, t2.c2)) OVER ( ORDER BY ((t2.c63 COLLATE NOCASE)||(((((((((t2.c3)OR(t2.c4)))OR(t2.c2)))AND(t2.c0)))OR(t2.c4)))) DESC  NULLS FIRST) FROM t2;SELECT ALL ((((NULL)>=(t2.c2)))IS NOT(TRIM(DISTINCT t2.c63))) FROM t2 WHERE ((((-524602795 COLLATE NOCASE))>((((0.8631568270611014)==(NULL)))))); -- 1ms;
SELECT DISTINCT (x'02eb' IN ()) FROM t2 WHERE (((NULL COLLATE RTRIM)LIKE(CASE WHEN '-284092284' THEN x'1e67' WHEN x'' THEN -6.57405572E8 WHEN NULL THEN x'3c5d' END))); -- 0ms;
SELECT DISTINCT t2.c1 FROM t2; -- 0ms;
SELECT DISTINCT '5h]D' FROM t2 WHERE ((((x'05fd')) BETWEEN (((NULL IN ()))) AND ((CASE 0X6e769371  WHEN 0.4682474614758575 THEN '0.2925416158799652' ELSE x'' END)))); -- 0ms;
SELECT ALL ((CAST(NULL AS NUMERIC))<((((t2.c4, t2.c0, x'7c46'))!=((t2.c4, t2.c4, t2.c2))))), ((CAST(t2.c2 AS TEXT)) NOT BETWEEN ((t2.c2 IN ())) AND (((t2.c3) NOT BETWEEN (t2.c3) AND (t2.c4)))), CAST(CAST(t2.c1 AS NUMERIC) AS BLOB) FROM t2 WHERE ((((((('-1611561713')AND(x'5d3a')))AND(x''))) NOT NULL)) ORDER BY (~ (t2.c2 COLLATE BINARY))  NULLS LAST, ''  NULLS FIRST; -- 0ms;
SELECT CAST(t2.c3 AS TEXT) COLLATE RTRIM FROM t2 WHERE (((((((x'')AND(x'353f')))OR(0.5122580326628198 COLLATE RTRIM)))AND((+ (-1535656616))))); -- 0ms;
SELECT DISTINCT (((((t2.c0)) NOT BETWEEN ((t2.c1)) AND ((t2.c63)))) NOT BETWEEN ((t2.c0 IN ())) AND ('-232236183')), TYPEOF((((t2.c1)) BETWEEN ((t2.c0)) AND ((t2.c4)))), IFNULL(-658453311, (t2.c2 IN (t2.c4, t2.c63))) FROM t2 ORDER BY CASE WHEN (+ (NULL)) THEN t2.c0 ELSE t2.c4 COLLATE BINARY END  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((t2.c0) BETWEEN (((t2.c1)>(t2.c0))) AND ((t2.c1 IN (t2.c3)))) FROM t2 WHERE (json_array_length((('')|(x'')), UPPER(DISTINCT x''))) GROUP BY (NOT ('1445303240')), ((((1170220852)>>(t2.c2))) NOT BETWEEN ('' COLLATE RTRIM) AND ((x'a38c' IN (t2.c63)))), CAST(((t2.c3)|(t2.c3)) AS TEXT);SELECT ALL LAST_INSERT_ROWID() FROM t2 WHERE (((NULL) NOT BETWEEN (0x26f1c7a1) AND (0.13870340112014323)) COLLATE BINARY) GROUP BY (((0Xffffffffc605fe77) ISNULL) IN ()) HAVING MAX((t2.c4 IN (t2.c3))) LIMIT -890549169; -- 0ms;
SELECT ALL (MIN(t2.c2) IN (TOTAL(t2.c3), t2.c2)) FROM t2 WHERE (((('0.8460831173085787')) BETWEEN (((('%AeTZh1') NOT BETWEEN (x'ba14') AND ('(')))) AND (((('') NOT BETWEEN (NULL) AND ('rr/w')))))); -- 0ms;
SELECT DISTINCT (((t2.c1)) BETWEEN ((('-443677009' IN ()))) AND ((NULL))), COUNT(*) OVER (), ((LIKE(t2.c0, t2.c4, 'R')) NOT BETWEEN ((NULL IN (t2.c4))) AND (AVG(t2.c2))) FROM t2 WHERE (CAST((('-1069926942') NOT BETWEEN ('-2067802121') AND (x'')) AS INTEGER)); -- 0ms;
SELECT CASE CASE t2.c0  WHEN t2.c0 THEN t2.c2 END  WHEN (- (t2.c4)) THEN MAX(t2.c0) WHEN ((t2.c63) IS TRUE) THEN t2.c0 WHEN CASE WHEN t2.c0 THEN t2.c3 END THEN ((t2.c3)|(t2.c1)) ELSE CAST(t2.c2 AS REAL) END FROM t2; -- 0ms;
SELECT DISTINCT ((((((((((((t2.c63 COLLATE BINARY)OR(CAST(t2.c0 AS REAL))))OR((- (t2.c63)))))OR(COUNT(*))))OR(CAST(t2.c0 AS NUMERIC))))OR(COUNT(*))))OR(CASE x''  WHEN x'' THEN t2.c1 END)) FROM t2 WHERE (('-878362793' IN ())) LIMIT 846300341 OFFSET -1799604873; -- 0ms;
SELECT DISTINCT TOTAL(0.8421979865925339) FILTER(WHERE -1.649882626E9) OVER () FROM t2 WHERE ((((('1022400662') NOTNULL)) BETWEEN ((((NULL)) BETWEEN (('0.8265766455445503')) AND ((NULL)))) AND (('-610072663' IN ())))); -- 0ms;
SELECT (CAST(t2.c2 AS NUMERIC) IN (((0.06673884014968468)%(t2.c63)))) FROM t2 WHERE ('335202831') GROUP BY CASE WHEN ((t2.c2) BETWEEN (t2.c4) AND (t2.c0)) THEN ((0xffffffffda6eb821) NOT BETWEEN (t2.c0) AND (t2.c63)) ELSE LIKELY(t2.c0) END, t2.c1 COLLATE NOCASE, ((((t2.c3)AND(LOWER(t2.c3))))OR(((t2.c4) BETWEEN (t2.c63) AND (t2.c1)))) HAVING CASE WHEN ((t2.c4) NOTNULL) THEN (((t2.c3))<>((t2.c4))) END; -- 0ms;
SELECT DISTINCT ((t2.c2 COLLATE BINARY) IS TRUE) FROM t2 WHERE (((CAST('Ui[]' AS TEXT))*(CAST('1681089565' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT CAST(CASE t2.c4  WHEN t2.c3 THEN t2.c3 END AS NUMERIC), ((((((t2.c4)AND(t2.c63)))AND(t2.c1))) NOT BETWEEN (t2.c1) AND (((((((((((((0.7325923033467514)AND('')))OR(t2.c3)))AND(t2.c2)))OR(t2.c1)))OR(t2.c4)))OR(t2.c2)))), 0.5122580326628198 COLLATE RTRIM FROM t2 WHERE (((((('琾v	bLS'))<>(('t%VUZ3'))))%(0.15923865768549583))) ORDER BY ((((((((((t2.c63)/(t2.c1)))OR(((t2.c1)>=(t2.c63)))))OR(0Xffffffff91840ad5)))OR(t2.c1 COLLATE NOCASE)))AND(((t2.c63) ISNULL))) DESC; -- 0ms;
SELECT DISTINCT ((TOTAL(t2.c63)) NOT BETWEEN (SUM('et.\rTo')) AND (t2.c0 COLLATE BINARY)), t2.c63, COUNT((x'' IN ()) COLLATE RTRIM) FROM t2 WHERE (((((((((((x'114e') IS TRUE))OR((((''))<(('-1121341260'))))))AND(((NULL)%(NULL)))))AND(((((((((NULL)AND(NULL)))AND(x'')))OR('20334921')))AND(-938724314)))))OR((0Xffffffffa40885c8 IN (x'', 'XQ'))))) GROUP BY CASE WHEN (t2.c3 IN ()) THEN ((t2.c0)/(t2.c0)) WHEN CASE WHEN t2.c3 THEN t2.c3 ELSE t2.c1 END THEN ((t2.c3)||(t2.c4)) WHEN ((t2.c4) BETWEEN ('-1332512540') AND (t2.c63)) THEN LIKELY(DISTINCT t2.c2) ELSE ((x'c2c2')>>(t2.c4)) END HAVING CASE t2.c2 COLLATE BINARY  WHEN t2.c4 COLLATE RTRIM THEN ((((t2.c4)AND(t2.c4)))OR(t2.c0)) END; -- 0ms;
SELECT DISTINCT (((((((((t2.c4 IN ()))AND(((0.9028431432986287) NOT NULL))))AND((NOT (t2.c4)))))AND(t2.c1 COLLATE NOCASE)))OR((1.508077087E9 IN (t2.c4)))) FROM t2 WHERE ((((0.2768495673462049)/('Wቛ')) IN ())) LIMIT 863461411; -- 0ms;
SELECT DISTINCT ((((((((((t2.c2)|(t2.c3)))AND(((t2.c0) NOT BETWEEN (t2.c4) AND (0.928548960579689)))))AND((((t2.c1)) NOT BETWEEN ((t2.c3)) AND ((t2.c3))))))AND(((t2.c63) BETWEEN (t2.c1) AND (0.021977864555156934)))))OR(((t2.c2) ISNULL))) FROM t2 WHERE (((8.8670984E8) NOTNULL)); -- 0ms;
SELECT ((1542429876) BETWEEN (t2.c63 COLLATE NOCASE) AND ((((t2.c2)) BETWEEN ((t2.c4)) AND ((t2.c2))))) FROM t2 WHERE ((~ ('0.2768495673462049')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NTH_VALUE((((((t2.c3 IN (t2.c2)))AND((((t2.c0, t2.c4, t2.c1)) BETWEEN ((t2.c63, t2.c0, x'')) AND ((t2.c0, t2.c4, t2.c2))))))AND((((t2.c4, t2.c1, t2.c2))<>((t2.c1, t2.c63, t2.c2))))), ((t2.c0) BETWEEN (t2.c3) AND (t2.c63)) COLLATE BINARY) OVER () FROM t2 GROUP BY ((((t2.c0, t2.c1, 1975213246)) NOT BETWEEN ((t2.c4, t2.c4, t2.c3)) AND ((t2.c4, t2.c0, '!p'))) IN ());SELECT ALL SUM(INSTR(t2.c1, t2.c3)) OVER () FROM t2 WHERE (((((x'7f9c')>(0X3458b56d))) BETWEEN (CAST(x'' AS TEXT)) AND ((((NULL))<>((NULL)))))); -- 0ms;
SELECT (CAST(t2.c4 AS TEXT) IN ()) FROM t2 LIMIT 502587467; -- 0ms;
SELECT ALL CASE t2.c0  WHEN ((NULL) ISNULL) THEN t2.c1 COLLATE BINARY WHEN t2.c4 THEN ((t2.c3)IS(t2.c3)) WHEN (((777180054, t2.c0, t2.c1)) NOT BETWEEN ((t2.c0, t2.c1, t2.c3)) AND ((t2.c2, 'qUZ9Hk5a', t2.c1))) THEN (NOT (t2.c63)) END FROM t2 LIMIT -1460747467; -- 0ms;
SELECT DISTINCT TOTAL(((t2.c1) IS TRUE)) FROM t2 WHERE (((NULLIF(1.99507584E8, 0xffffffff8f9a24ec)) BETWEEN ((('堐xuTm槖K|8') IS TRUE)) AND (LTRIM(x'')))) ORDER BY (((((t2.c4, t2.c63, t2.c3)) BETWEEN ((t2.c2, t2.c4, t2.c1)) AND ((t2.c3, t2.c4, t2.c3))))<=((t2.c4 IN ())))  NULLS FIRST; -- 0ms;
SELECT DISTINCT -1713652317 FROM t2 WHERE (((x'' COLLATE BINARY)==(CASE WHEN NULL THEN 'uTBag}en~' ELSE '63怋3' END))); -- 0ms;
SELECT ALL (~ ((+ (t2.c1)))) FROM t2 ORDER BY NULL  NULLS LAST, t2.c0 DESC  NULLS LAST; -- 0ms;
SELECT COUNT(*) OVER () FROM t2; -- 0ms;
SELECT DISTINCT CASE WHEN CASE t2.c63  WHEN t2.c0 THEN t2.c1 ELSE t2.c1 END THEN UPPER(DISTINCT t2.c3) END, ((((((t2.c2) NOT NULL))AND(CASE WHEN t2.c4 THEN t2.c1 END)))AND(((t2.c2)>(t2.c3)))), t2.c63 FROM t2; -- 0ms;
SELECT DISTINCT ((((t2.c2)-(t2.c63))) BETWEEN (t2.c0 COLLATE BINARY) AND (CAST(t2.c63 AS INTEGER))) FROM t2 WHERE (json_insert(0.6315642128634816, (+ ('1508077087')), (((-443677009)) BETWEEN ((NULL)) AND ((x''))), ((-2.12915759E9) NOT BETWEEN (x'') AND (x'')), ((((x'1b09')AND(0.0037635152662038873)))AND(NULL))));SELECT DISTINCT (((t2.c4)) NOT BETWEEN (((+ (t2.c3)))) AND ((((((t2.c1)OR(t2.c1)))AND(t2.c63))))), UNLIKELY(DISTINCT t2.c4 COLLATE NOCASE), t2.c2 FROM t2 WHERE (SQLITE_COMPILEOPTION_USED(((((0.9972302056765238)OR('0.24775893277827354')))AND(x'')))); -- 0ms;
SELECT (((((t2.c0))<>((t2.c63)))) NOT BETWEEN (CAST(t2.c1 AS BLOB)) AND ((((t2.c63)) BETWEEN ((t2.c4)) AND ((t2.c0))))), LOWER(DISTINCT ((NULL)<=('a0{s'))), (+ (GROUP_CONCAT(t2.c3))), NTH_VALUE(NULL, (((- (t2.c1)))<(((t2.c0)%(t2.c2))))) OVER (), AVG((- (t2.c0))) FROM t2 WHERE ((((((((((((NULL))==((''))))OR('&W')))OR((('522436423') BETWEEN ('1853264753') AND ('1977150098')))))AND(((((0.7429589049266387)AND(NULL)))AND(NULL)))))OR(LTRIM(x'')))) LIMIT 1552616013;SELECT ALL (NOT ((NULL IN (t2.c2, t2.c2)))) FROM t2; -- 0ms;
SELECT DISTINCT (((((t2.c4))<=((NULL))))+(t2.c3 COLLATE NOCASE)) FROM t2; -- 0ms;
SELECT ALL (((((t2.c1)) BETWEEN ((t2.c63)) AND ((t2.c1)))) IS TRUE), t2.c4, (((t2.c2, t2.c0, t2.c63)) NOT BETWEEN ((((t2.c2) BETWEEN (t2.c63) AND (t2.c0)), TOTAL(t2.c1), ((((t2.c4)OR('')))OR(t2.c1)))) AND ((CAST(t2.c1 AS INTEGER), ((t2.c0)IS(0.38926732276698384)), t2.c3))) FROM t2; -- 0ms;
SELECT DISTINCT (((((t2.c2) BETWEEN (t2.c1) AND (t2.c1))))==((((t2.c4) NOTNULL)))), TOTAL((((t2.c4))<=((t2.c0)))) OVER (), ((((t2.c3, t2.c63, t2.c0, 'i6', t2.c4))<=((NULL, t2.c1, t2.c63, t2.c3, t2.c0))) IN (((t2.c2)<(t2.c3)))) FROM t2 WHERE (UNICODE(CAST(x'' AS INTEGER))); -- 1ms;
SELECT CAST(t2.c4 AS BLOB) FROM t2 WHERE (CAST(((((NULL)AND(NULL)))OR(NULL)) AS REAL)); -- 0ms;
SELECT ALL TOTAL(((t2.c4) ISNULL)), (((t2.c4) IS FALSE) IN ()), (((TOTAL(t2.c2)))<=((CASE t2.c63  WHEN t2.c1 THEN t2.c4 END))) FROM t2 WHERE (highlight(((((NULL)OR(NULL)))AND('')), TRIM(NULL, 1.121900172E9), ((('1235882060'))<((0xffffffffbfc3531c))), ((x'')>(18050773)))) ORDER BY t2.c1 DESC  NULLS FIRST;SELECT DISTINCT t2.c4 COLLATE RTRIM FROM t2; -- 0ms;
SELECT DISTINCT AVG((- (x''))) OVER ( ORDER BY ((((t2.c0) NOTNULL))IS(((t2.c4) NOTNULL))), ((((((t2.c3)AND(t2.c3)))AND((((t2.c3)) NOT BETWEEN ((t2.c2)) AND ((t2.c4))))))AND(((t2.c3)|(t2.c2)))), CASE WHEN CAST(t2.c2 AS INTEGER) THEN (((t2.c2))<=((t2.c1))) END), (((- (t2.c0)))+(t2.c2 COLLATE NOCASE)), (~ (CAST(t2.c4 AS REAL))) FROM t2; -- 1ms;
SELECT DISTINCT ((((t2.c2)OR(t2.c0))) ISNULL) FROM t2 WHERE (CASE WHEN (- ('1216546847')) THEN ((((((((NULL)OR('Eu|Mr&4')))AND(NULL)))AND('')))AND('-275576882')) ELSE ((0.5898443512566087)&(-1.7976931348623157E308)) END) ORDER BY ((((t2.c3 COLLATE RTRIM)OR('')))OR(0xffffffffa57894f9))  NULLS FIRST; -- 0ms;
SELECT GROUP_CONCAT(COALESCE(DISTINCT t2.c2, t2.c0)) OVER () FROM t2 LIMIT -1556624282; -- 0ms;
SELECT ALL TOTAL(((t2.c1)<=(t2.c4))) OVER ( ORDER BY ((((- (t2.c1))))<=((STRFTIME(t2.c4, t2.c63, t2.c63, t2.c0, t2.c1)))) DESC  NULLS FIRST, (t2.c0 IN (t2.c63)) COLLATE RTRIM ASC) FROM t2; -- 4ms;
SELECT DISTINCT (~ (((((((((t2.c63)AND(t2.c1)))AND(t2.c0)))AND(t2.c1)))OR(t2.c4)))), ((((t2.c2)&(t2.c4))) NOT BETWEEN ((((t2.c2)) NOT BETWEEN ((t2.c2)) AND ((t2.c63)))) AND (MIN(1.853264753E9))), CAST(t2.c4 AS NUMERIC) FROM t2 ORDER BY ((t2.c63 COLLATE NOCASE)GLOB((t2.c63 IN ()))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(CAST((((x'')) NOT BETWEEN ((t2.c3)) AND ((t2.c63))) AS INTEGER)) OVER (), ((CAST(t2.c1 AS TEXT)) NOT BETWEEN (t2.c63) AND (((t2.c0) BETWEEN (t2.c2) AND ('67507003')))), RANK() OVER () FROM t2 WHERE ((((((((x'2861fb22')) NOT BETWEEN ((0.26122694318391715)) AND ((')b/{.'))))OR(CAST('' AS BLOB))))OR(((0.19842847844916456)LIKE('-1155561334'))))); -- 0ms;
SELECT DISTINCT (t2.c2 COLLATE BINARY IN ()), json_object((t2.c0 IN ()), ((t2.c1)IS NOT('-1601439973'))), (- (t2.c4 COLLATE RTRIM)) FROM t2 GROUP BY ((t2.c0 IN ()) IN ()), ((((t2.c63)>(t2.c2)))!=((((t2.c3, t2.c1, t2.c1))<((t2.c63, t2.c63, x''))))), CASE WHEN ((t2.c1)<<(t2.c3)) THEN ((NULL) NOT BETWEEN (t2.c2) AND (t2.c4)) ELSE t2.c63 END HAVING (((t2.c3, UPPER(t2.c0), ((t2.c1) IS FALSE)))<>((((x'')<=(t2.c2)), ((t2.c3)||(t2.c1)), t2.c4)));SELECT ALL (((~ (t2.c1))) IS FALSE) FROM t2 WHERE ('-105266461'); -- 0ms;
SELECT (((+ (t2.c63)))*(CASE WHEN t2.c63 THEN t2.c63 WHEN t2.c3 THEN t2.c63 WHEN 0.031155322162755406 THEN t2.c1 ELSE t2.c2 END)) FROM t2 WHERE ((((~ (0.20214935061017603))) IS TRUE)); -- 0ms;
SELECT DISTINCT '1975213246' FROM t2 WHERE (CAST('~I/' AS REAL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE WHEN (((t2.c4))==((t2.c3))) THEN ((t2.c1)==(t2.c63)) END FROM t2 WHERE (CASE ((0.06507946828746713) NOTNULL)  WHEN CAST(x'3c23' AS INTEGER) THEN ((x'') ISNULL) END); -- 0ms;
SELECT DISTINCT load_extension(((t2.c63) NOT BETWEEN (t2.c0) AND (t2.c3)), ((t2.c1)>>(t2.c3))) FROM t2 WHERE ((- (x''))) ORDER BY ((((((NULL)OR(t2.c0)))AND(t2.c2))) IS FALSE)  NULLS FIRST LIMIT 682895148; -- 0ms;
SELECT DISTINCT t2.c63 FROM t2 WHERE (-1.010609229E9); -- 0ms;
SELECT (((CAST(t2.c2 AS BLOB)))>=(((((t2.c2, t2.c0, t2.c2)) BETWEEN ((t2.c4, t2.c0, t2.c0)) AND ((t2.c3, '438280548', t2.c2)))))), ((((((t2.c2)AND(t2.c1)))OR(t2.c63))) ISNULL), ((CASE WHEN t2.c63 THEN t2.c0 END)/(((t2.c0)&(t2.c3)))) FROM t2; -- 0ms;
SELECT ALL SUM(CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c3 THEN -1.885288462E9 WHEN t2.c0 THEN t2.c1 END) OVER () FROM t2 WHERE ((((~ (NULL)))!=(((NULL)>(0.46553175089824694))))); -- 0ms;
SELECT '', ((CASE WHEN t2.c3 THEN t2.c0 ELSE t2.c2 END) NOT BETWEEN ('Z7ꞄT') AND (CASE WHEN t2.c1 THEN t2.c63 WHEN t2.c2 THEN t2.c0 WHEN t2.c4 THEN t2.c0 WHEN t2.c63 THEN t2.c3 WHEN t2.c1 THEN t2.c3 WHEN t2.c63 THEN NULL WHEN t2.c2 THEN t2.c0 ELSE t2.c1 END)), COUNT(((t2.c0) IS FALSE)) FROM t2 WHERE (((LTRIM('863461411'))>>(x''))); -- 0ms;
SELECT DISTINCT MIN(MAX(t2.c1) COLLATE RTRIM) FROM t2 ORDER BY ((NULLIF(DISTINCT t2.c0, t2.c63)) BETWEEN (((t2.c4) ISNULL)) AND (((t2.c3)<('\n突')))) ASC;SELECT DISTINCT (((CAST(t2.c63 AS BLOB), (((t2.c0, t2.c0, t2.c2))>((t2.c2, t2.c0, t2.c0))), (t2.c1 IN ()), (+ ('-1488212652')), ((t2.c63) BETWEEN (t2.c4) AND (x''))))==((t2.c63, AVG(t2.c2), t2.c63 COLLATE RTRIM, (t2.c63 IN ()), CASE WHEN t2.c3 THEN t2.c3 END))) FROM t2 WHERE (((2.80609853E8 COLLATE NOCASE) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((t2.c0)OR(t2.c0)))OR(t2.c63)))==((((t2.c63, t2.c1, t2.c2))!=((t2.c0, t2.c1, t2.c3))))) FROM t2 WHERE (((NULL)LIKE(0.06507946828746713)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (- (rtreenode(t2.c3, t2.c0))) FROM t2 WHERE (((TYPEOF(DISTINCT NULL)) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((t2.c2)<<(t2.c2))) BETWEEN ((t2.c3 IN (t2.c1, t2.c0))) AND ((+ (t2.c3)))), FIRST_VALUE(x'') OVER (), (- (t2.c2)) COLLATE RTRIM FROM t2 WHERE (((((CAST('\nY' AS NUMERIC))AND((- (0.7608198945359586)))))AND(((x'') NOTNULL)))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t2; -- 0ms;
SELECT DISTINCT ((((CASE t2.c1  WHEN t2.c2 THEN t2.c4 ELSE t2.c63 END)AND(((0.6193269371323159) BETWEEN ('2130907164') AND (t2.c3)))))OR(CASE WHEN t2.c63 THEN t2.c2 WHEN t2.c3 THEN t2.c63 WHEN t2.c3 THEN t2.c63 END)) FROM t2 WHERE (((((NULL) NOT BETWEEN (x'') AND (0.8914828441607986)))%((NULL IN (x'', NULL))))); -- 0ms;
SELECT DISTINCT COUNT(t2.c0), (((t2.c0)<(t2.c1)) IN ()), ((((t2.c0)<=(0x5299f54b))) NOT BETWEEN (CASE t2.c63  WHEN NULL THEN t2.c3 END) AND (((t2.c4)+(t2.c1)))) FROM t2 WHERE (x'') ORDER BY (((t2.c1)) BETWEEN ((0.17573850057663765)) AND ((((t2.c0) BETWEEN (t2.c2) AND (t2.c2))))) DESC, (((((t2.c0)) NOT BETWEEN ((t2.c63)) AND ((t2.c3)))) IS FALSE)  NULLS FIRST, CASE WHEN t2.c1 COLLATE RTRIM THEN (~ (t2.c0)) ELSE ((t2.c3) BETWEEN (t2.c0) AND (t2.c0)) END  NULLS FIRST; -- 0ms;
SELECT LAST_VALUE(CASE (~ (t2.c4))  WHEN ((t2.c1)GLOB('-372841338')) THEN ((t2.c0)LIKE(t2.c2)) ELSE (((t2.c3))<((t2.c0))) END) OVER () FROM t2 WHERE (CASE WHEN ((0.8644137969073867) NOT BETWEEN (0.13870340112014323) AND (NULL)) THEN CASE NULL  WHEN x'1f95' THEN NULL ELSE NULL END END); -- 0ms;
SELECT DISTINCT TOTAL((((NULL))>((x'59b10bc1')))) FILTER(WHERE CASE WHEN (t2.c63 IN ()) THEN t2.c3 END) OVER (), (NOT ((((t2.c63))>=((t2.c63))))), (((((t2.c2 IN ()))OR(((((((((t2.c2)AND(t2.c3)))AND(t2.c3)))AND(t2.c2)))AND(t2.c3)))))AND(NULLIF(t2.c1, t2.c4))) FROM t2 GROUP BY IFNULL(t2.c2, t2.c63); -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()), ((((t2.c0)<(t2.c1))) NOTNULL), ((MAX(t2.c0))>=(HEX(t2.c4))) FROM t2 WHERE (((0X1b50cb7c COLLATE NOCASE)%(0X4a574825))) GROUP BY ((CAST(t2.c4 AS BLOB)) NOT BETWEEN ((((t2.c0))<=((t2.c2)))) AND (((((t2.c4)OR(t2.c0)))AND(t2.c1)))); -- 0ms;
SELECT DISTINCT (((t2.c0) NOT BETWEEN (t2.c3) AND (t2.c1)) IN ()) FROM t2 WHERE (((NULL) NOT BETWEEN (x'') AND ('0.06507946828746713')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((((((t2.c2)AND(t2.c3)))OR(t2.c0))))>=((((t2.c4) NOT BETWEEN (t2.c63) AND (''))))), CASE NULL  WHEN ((((NULL)OR(t2.c1)))AND(t2.c63)) THEN COUNT(*) ELSE t2.c3 END, (((~ (t2.c1))) NOT NULL) FROM t2 WHERE (((((((((((0.9480687909403527)OR('1599971570')))OR(NULL)))OR(x'c33c')))OR(0.37026447798160966))) NOT NULL)) ORDER BY ((((t2.c3) IS FALSE)) IS TRUE), ((((t2.c1) IS FALSE))OR(t2.c0)) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (t2.c63 IN ()) FROM t2 WHERE (((('-334843431')) BETWEEN ((x'')) AND (((('-2105632227')AND(0.26069263593004977)))))) ORDER BY (((((((((((t2.c1)OR(t2.c1)))OR(t2.c1)))OR(t2.c1)))OR(t2.c63))))>=(((t2.c0 IN (t2.c4, t2.c1)))))  NULLS LAST LIMIT 890333342; -- 0ms;
SELECT ALL TOTAL(((t2.c63)LIKE(x'4346'))) FROM t2; -- 0ms;
SELECT (((+ (t2.c1)))OR(x'')) FROM t2 WHERE (((-1.282354363E9 COLLATE RTRIM)<=(0.08000615771629227 COLLATE NOCASE))); -- 0ms;
SELECT ((MIN(t2.c4))AND((((x'4ec5')) BETWEEN ((t2.c63)) AND ((t2.c0))))) FROM t2 WHERE (0x25fccec9); -- 0ms;
SELECT ALL (((t2.c4 IN ()))IS NOT(CASE t2.c3  WHEN t2.c1 THEN t2.c1 ELSE t2.c2 END)) FROM t2; -- 0ms;
SELECT ALL TOTAL_CHANGES() COLLATE RTRIM FROM t2 WHERE ((((0.6473997526537991)>>(NULL)) IN ())); -- 0ms;
SELECT DISTINCT (((t2.c3, t2.c0, t2.c63)) NOT BETWEEN ((CASE WHEN t2.c1 THEN t2.c63 ELSE t2.c63 END, SUM(t2.c4), ((NULL)AND(t2.c63)))) AND ((CAST(t2.c1 AS NUMERIC), TOTAL(t2.c2), ((t2.c63)-(t2.c4))))) FROM t2 GROUP BY ((((t2.c1) BETWEEN (t2.c0) AND (t2.c0)))<>(((t2.c2) BETWEEN (0.36259996628687985) AND (0xffffffffc02d27c9)))), ((((t2.c0) BETWEEN (t2.c0) AND (t2.c2))) ISNULL), (t2.c0 COLLATE BINARY IN ()); -- 0ms;
SELECT DISTINCT (((0.6992831960094932, ((t2.c4) NOT BETWEEN (t2.c2) AND (t2.c4)), ((t2.c3) NOT NULL)))<=(((t2.c1 IN ()), SUM(t2.c2), ((t2.c3) NOTNULL)))), '-123363649', ((CASE WHEN t2.c1 THEN t2.c4 END)+(x'')) FROM t2; -- 0ms;
SELECT ((((CASE WHEN t2.c3 THEN '-1340789676' WHEN t2.c3 THEN t2.c63 WHEN t2.c4 THEN NULL ELSE NULL END)OR(t2.c1)))AND(CASE t2.c3  WHEN t2.c4 THEN t2.c4 END)) FROM t2 GROUP BY (((t2.c4)>>(t2.c1)) IN ()); -- 0ms;
SELECT CASE WHEN CAST(t2.c4 AS INTEGER) THEN CAST(t2.c3 AS REAL) END FROM t2 WHERE ((~ (((0X1df4e04b)<>(0.8373146180307628))))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(t2.c3 AS INTEGER) THEN (+ (t2.c2)) WHEN t2.c4 COLLATE NOCASE THEN (- (t2.c2)) WHEN ((((t2.c2)OR(t2.c3)))AND(t2.c4)) THEN ((t2.c2)-(t2.c63)) WHEN (+ (t2.c1)) THEN ((((t2.c63)AND(1.768610244E9)))AND(t2.c3)) WHEN CAST('0.024196617784022822' AS REAL) THEN 0.3931540145073815 END, ((IFNULL(DISTINCT t2.c1, t2.c3))GLOB(((t2.c4) NOT BETWEEN (t2.c0) AND (t2.c1)))), t2.c4 FROM t2 WHERE ((((~ (x'')))<<((0.6669352905135243 IN ())))); -- 0ms;
SELECT t2.c0, (((t2.c0 COLLATE NOCASE))==(((((t2.c4, t2.c4, t2.c4))>=((0.9849449767089508, t2.c1, t2.c1)))))), TOTAL(((t2.c63) BETWEEN (t2.c63) AND (t2.c63))) COLLATE RTRIM FROM t2 WHERE (CAST(CASE 0X643aaf8b  WHEN 1110747420 THEN '1835794577' ELSE x'c658' END AS BLOB)) GROUP BY CASE WHEN t2.c63 THEN TYPEOF(DISTINCT x'b530') ELSE ((t2.c0)*(x'7777')) END HAVING t2.c63; -- 0ms;
SELECT DISTINCT -1.885288462E9 FROM t2 LIMIT -107250979 OFFSET -1123232500; -- 0ms;
SELECT CASE WHEN (- (t2.c0)) THEN (((t2.c63))!=((t2.c2))) WHEN ((t2.c2)==(-658453311)) THEN CAST(t2.c2 AS NUMERIC) WHEN (((t2.c4)) BETWEEN ((x'd274')) AND ((t2.c0))) THEN t2.c0 COLLATE BINARY END FROM t2 WHERE ((((x'' IN ())) BETWEEN ((((x''))=((0X2e0da7b4)))) AND (CASE 0.004240516648593817  WHEN 0Xffffffffd53339f7 THEN x'' END))); -- 0ms;
SELECT DISTINCT ((0.4504186401954592) NOTNULL) FROM t2 WHERE (TRIM(DISTINCT ((((((((x'')OR(NULL)))OR(NULL)))AND('905642791')))AND('2106165226')))) GROUP BY (((((t2.c0)AND(t2.c2)))OR(t2.c4)) IN ()), CAST(TRIM(t2.c63) AS BLOB), t2.c3 HAVING ((t2.c3)OR(SUM(t2.c2))) LIMIT -1115282173; -- 0ms;
SELECT ALL ((SUBSTR(t2.c4, t2.c63))||((NOT (t2.c3)))), NULL, LIKELY(((t2.c2) NOT NULL)) FROM t2; -- 0ms;
SELECT ((((t2.c0) ISNULL))&(json_insert(t2.c4, t2.c4, t2.c2))) FROM t2; -- 0ms;
SELECT DISTINCT (+ (t2.c0)) FROM t2; -- 0ms;
SELECT FIRST_VALUE(MIN(((NULL)/(t2.c0)), CASE WHEN 0.2990058645886431 THEN t2.c4 ELSE t2.c4 END)) OVER ( ORDER BY ((((CAST(t2.c3 AS NUMERIC))AND(((t2.c2) IS FALSE))))OR((('') BETWEEN (t2.c0) AND (t2.c3)))) DESC  NULLS LAST) FROM t2 WHERE (CAST(((x'')<(NULL)) AS BLOB)); -- 1ms;
SELECT (+ (t2.c63)) COLLATE NOCASE, ((((t2.c3) NOT BETWEEN (t2.c0) AND (t2.c2)))<<(((t2.c3) NOT NULL))), DENSE_RANK() OVER () FROM t2; -- 4ms;
SELECT ALL ((((((((t2.c4)OR(t2.c63)))OR(t2.c3)))AND(AVG(t2.c4))))AND(((t2.c4) BETWEEN (t2.c3) AND (t2.c1)))), 1017460878, (NOT (((t2.c3)||(t2.c63)))) FROM t2 WHERE ((((('-882946677'))>((x''))) IN (CASE WHEN '' THEN x'' ELSE 0.14940623639410333 END))); -- 0ms;
SELECT DISTINCT AVG(CASE t2.c3  WHEN NULL THEN t2.c1 WHEN t2.c3 THEN t2.c1 WHEN t2.c4 THEN t2.c4 ELSE t2.c2 END), NTILE((t2.c2 IN ())) OVER (), CASE WHEN t2.c0 COLLATE RTRIM THEN (NOT (t2.c3)) WHEN GROUP_CONCAT(t2.c0) THEN ((t2.c63) ISNULL) WHEN (+ (t2.c3)) THEN t2.c2 COLLATE RTRIM END FROM t2 WHERE ((((NULL) IS FALSE) IN ('T' COLLATE RTRIM, (((NULL)) BETWEEN ((266157685)) AND ((NULL)))))) ORDER BY (((t2.c2, t2.c0, t2.c63)) BETWEEN ((t2.c4, t2.c4 COLLATE NOCASE, LOWER(t2.c2))) AND (((t2.c63 IN ()), x'', (t2.c4 IN ()))));SELECT ALL CASE WHEN (~ (t2.c2)) THEN CAST(t2.c0 AS TEXT) END FROM t2; -- 1ms;
SELECT DISTINCT (NOT (TYPEOF(DISTINCT NULL))), ((((t2.c1) NOT BETWEEN (t2.c63) AND (t2.c2))) NOTNULL), ((t2.c63)<(t2.c0)) COLLATE NOCASE FROM t2; -- 0ms;
SELECT DISTINCT MIN(t2.c2) FROM t2; -- 0ms;
SELECT ALL CAST(0Xffffffffe0f3e2fc AS NUMERIC), t2.c2, json_valid(-1021741752) FROM t2; -- 0ms;
SELECT UPPER(t2.c3 COLLATE RTRIM) FROM t2 ORDER BY ((CAST(t2.c1 AS BLOB))>((t2.c63 IN ()))), (((t2.c1 IN ()))<<('-304624620')) ASC; -- 0ms;
SELECT ((((CASE WHEN t2.c3 THEN t2.c2 ELSE t2.c0 END)AND(TYPEOF(t2.c0))))OR((- (t2.c0)))), ROUND(((((t2.c1)AND(t2.c1)))AND(t2.c0)), NULL), QUOTE(((t2.c4)<<(t2.c0))) FROM t2 WHERE (((((x'')IS NOT(x'728f')))>=(CAST(x'a515' AS REAL)))) ORDER BY CASE WHEN (t2.c2 IN ()) THEN ((t2.c2)IS NOT(t2.c2)) ELSE t2.c0 COLLATE RTRIM END DESC  NULLS LAST; -- 0ms;
SELECT ALL CAST(((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c1)) AS REAL) FROM t2; -- 1ms;
SELECT DISTINCT NTH_VALUE(t2.c2, ((t2.c0)-(x'')) COLLATE NOCASE) OVER () FROM t2;SELECT ALL ((COUNT(*))|(CAST(0.20631274445426684 AS REAL))) FROM t2 WHERE (((x'' COLLATE NOCASE)<>(('y}' IN ())))) ORDER BY ((((((t2.c1)AND(x'3374')))AND(t2.c1))) NOT BETWEEN (((t2.c2) NOT BETWEEN (t2.c63) AND (t2.c2))) AND (LIKELY(DISTINCT t2.c1))) DESC  NULLS LAST; -- 0ms;
SELECT ((((((t2.c63)AND(t2.c4)))AND(t2.c1))) IS FALSE) FROM t2; -- 0ms;
SELECT DISTINCT (((t2.c4)&(t2.c0)) IN (((t2.c2)>(t2.c3)), ((t2.c2) BETWEEN (t2.c63) AND (t2.c1)), t2.c2 COLLATE BINARY)) FROM t2 WHERE (CASE (((((((('x}V*p<')AND(x'95da')))OR('')))OR('_*~tZFv1C')))AND(-1748508265))  WHEN UNLIKELY(DISTINCT NULL) THEN (x'5689' IN ()) WHEN (('3mWCy K|<') NOT BETWEEN (-5.50342227E8) AND (x'')) THEN ((x'')-(NULL)) WHEN NULL COLLATE NOCASE THEN ('-1789993722' IN (x'')) END) GROUP BY (((((NOT (t2.c2)))AND(CASE WHEN t2.c4 THEN t2.c1 END)))OR(((t2.c4)OR(x'')))), NULL, ((((((t2.c63) IS FALSE))OR(((t2.c2)>>(t2.c0)))))AND((((t2.c4))>=((t2.c4))))) HAVING (((~ (t2.c3)))<(((t2.c1) BETWEEN (t2.c1) AND (t2.c3)))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((-1.649882626E9 COLLATE NOCASE) BETWEEN ((((t2.c0))>((t2.c4)))) AND ('-1830633881'))) OVER (), ((t2.c3)||((((t2.c63))<=(('-1885723412'))))), GROUP_CONCAT(((t2.c1) BETWEEN (t2.c3) AND (t2.c63))) FILTER(WHERE (- (CASE WHEN t2.c2 THEN t2.c63 WHEN t2.c4 THEN t2.c63 WHEN t2.c1 THEN t2.c3 ELSE '-1886937883' END))) OVER () FROM t2 WHERE (CASE WHEN NULL COLLATE BINARY THEN CASE 1.745469127E9  WHEN 0.893919120909712 THEN '' ELSE 0.9546636003983598 END END); -- 0ms;
SELECT ALL MAX(((((((((t2.c1)OR(t2.c2)))AND(t2.c0)))OR(t2.c4)))OR(t2.c4))) FROM t2 WHERE (((NULL)>=(x'')) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((t2.c3) NOTNULL))|(0.9494360951588298)) FROM t2; -- 0ms;
SELECT (((((((((((t2.c63)OR(t2.c3)))OR(t2.c63)))AND(t2.c1)))OR('-4}'))))>=((((t2.c1)GLOB(t2.c4))))), t2.c2, t2.c1 FROM t2 WHERE ((885245832 IN ('xZG57l')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((t2.c3)OR(t2.c0)))OR(t2.c1)))==((t2.c2 IN ()))), ((0.41854592949331204)&(0.26069263593004977)), t2.c0 FROM t2; -- 0ms;
SELECT (~ ((~ (t2.c1)))), COUNT(*) OVER (), NULL FROM t2; -- 0ms;
SELECT DISTINCT ((t2.c1) NOT BETWEEN ((t2.c4 IN (t2.c63))) AND (CAST(t2.c4 AS NUMERIC))), ((COUNT(t2.c2)) ISNULL), (((t2.c0)) BETWEEN ((CASE t2.c3  WHEN t2.c1 THEN t2.c0 ELSE t2.c2 END)) AND ((MIN(t2.c63)))) FROM t2; -- 0ms;
SELECT ALL COUNT(*) FILTER(WHERE (((('627907735')OR(((t2.c63) NOT BETWEEN (t2.c4) AND (t2.c63)))))AND(((t2.c3)>(t2.c2))))) OVER ( PARTITION BY (((CAST(t2.c1 AS BLOB), (t2.c4 IN ()), ((t2.c1)IS NOT(t2.c4))))<=((IFNULL(t2.c4, t2.c4), 0.34637557791730367 COLLATE NOCASE, ABS(DISTINCT t2.c3)))), ((t2.c2) NOT BETWEEN (NULL) AND (t2.c0)) COLLATE RTRIM) FROM t2 ORDER BY CAST(((t2.c1) NOT BETWEEN (t2.c0) AND (t2.c0)) AS NUMERIC) ASC; -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT t2.c63))IS(TRIM(t2.c63))) FROM t2; -- 0ms;
SELECT ALL (((((t2.c1) NOTNULL), (t2.c4 IN (t2.c0)), ((t2.c4) NOT BETWEEN (t2.c4) AND (t2.c4))))<=((CAST(t2.c2 AS INTEGER), CASE 0.47589313106098785  WHEN t2.c1 THEN t2.c3 END, ((t2.c0)%(t2.c1))))) FROM t2 WHERE (CHANGES()); -- 0ms;
SELECT (~ (t2.c3 COLLATE RTRIM)) FROM t2 WHERE (((0.8776087024278928) NOT NULL) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT ALL x'' FROM t2 WHERE (CAST((((x''))<((x''))) AS REAL)); -- 0ms;
SELECT ALL COUNT(((t2.c4) NOT NULL)) OVER (), t2.c4, t2.c2 FROM t2 WHERE ((~ (((0Xffffffffc89598ea)-(x''))))); -- 0ms;
SELECT DISTINCT (((t2.c2)) BETWEEN ((json_array_length(t2.c3, t2.c0))) AND ((t2.c2 COLLATE BINARY))), 0.42304613299393334, NTILE(json(((((t2.c1)AND(t2.c4)))AND(t2.c1)))) OVER () FROM t2 WHERE ((NOT ((0Xffffffff9aad0d4a IN ()))));SELECT DISTINCT (NOT (((t2.c0) NOT BETWEEN (NULL) AND (t2.c4)))) FROM t2; -- 0ms;
SELECT ALL TOTAL(((t2.c1) IS TRUE)), (((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c63)))) BETWEEN (AVG(t2.c1)) AND (((((t2.c1)OR(t2.c1)))OR(0.849412637177752)))), TRIM((((t2.c63))<>((t2.c1))), (- (''))) FROM t2 WHERE ((CASE WHEN 'N㙱*[c㻈' THEN '	殃uy.i' END IN ())); -- 0ms;
SELECT DISTINCT SUM((((t2.c0)) BETWEEN ((t2.c3)) AND ((t2.c2)))), load_extension(((((((((t2.c0)AND(t2.c1)))AND(t2.c0)))OR(t2.c1)))OR(t2.c3))), ROW_NUMBER() OVER () FROM t2 WHERE (CASE WHEN CAST(0.5893930536751976 AS NUMERIC) THEN 0X2a4d0620 END) LIMIT -1564473244 OFFSET 488990161;SELECT UNLIKELY(((((t2.c3)OR(t2.c1)))OR(t2.c3))) FROM t2 WHERE ((((~ (0x6de6e4a9))) NOTNULL)); -- 0ms;
SELECT (((((t2.c4 IN ()))OR(((t2.c4)==(t2.c3)))))OR(t2.c3 COLLATE NOCASE)) FROM t2; -- 0ms;
SELECT ALL COUNT(*) FROM t2 WHERE ((((x'9882df62', x'ad0f', -1116719010, NULL, 0.5255679999188907)) BETWEEN ((621543830 COLLATE RTRIM, LIKELIHOOD(DISTINCT x'', 0.8335039138187215), ('1759475175' IN (NULL)), CAST(0.545045942142678 AS REAL), ((((((((x'')OR(NULL)))OR(x'')))AND(NULL)))AND(NULL)))) AND (((-8.17234757E8 IN (0X6e389e7c)), ((NULL)&(NULL)), (('1216546847')IS(x'd38a')), (x'' IN ()), x'c1a1' COLLATE NOCASE)))); -- 0ms;
SELECT ALL (((NOT (t2.c0))) NOT BETWEEN (((((t2.c2)OR(t2.c1)))AND(t2.c3))) AND ((- (t2.c4)))) FROM t2; -- 0ms;
SELECT DISTINCT COUNT(((t2.c63) IS TRUE)) FROM t2 WHERE (CAST(((((x'')OR('?-B_C+')))OR(629377123)) AS NUMERIC)) GROUP BY (((t2.c0)) NOT BETWEEN ((json_type(t2.c2))) AND ((((t2.c2)>=(t2.c3))))) HAVING json_object(GLOB(t2.c63, t2.c4), t2.c2 COLLATE BINARY, (((t2.c4)) BETWEEN ((t2.c3)) AND ((t2.c2))), SUBSTR(t2.c63, t2.c3));SELECT DISTINCT CAST(AVG(t2.c3) AS NUMERIC) FROM t2 WHERE (CAST(json_patch('-817234757', NULL) AS BLOB)) GROUP BY CAST((((t2.c63, t2.c3, t2.c63))<((t2.c3, t2.c63, t2.c3))) AS NUMERIC) HAVING NULL; -- 0ms;
SELECT (((+ (t2.c1))) NOT BETWEEN (((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c2))) AND ('-445084634')) FROM t2; -- 0ms;
SELECT '0.7689350205059646', CAST('-1010609229' AS TEXT), ((((((t2.c2) NOTNULL))OR(MAX(t2.c1))))OR(((t2.c4) NOT BETWEEN (t2.c3) AND (t2.c63)))) FROM t2 LIMIT 799795375; -- 0ms;
SELECT DISTINCT ((((t2.c1) NOTNULL))<=(t2.c0)), UNICODE(((t2.c1)==(t2.c3))), ((GROUP_CONCAT(t2.c3)) NOT NULL) FROM t2; -- 0ms;
SELECT ALL ((CASE WHEN t2.c0 THEN t2.c3 END) NOT BETWEEN ((((t2.c0, t2.c1, t2.c2))<=((t2.c63, t2.c63, t2.c63)))) AND ((0.31443808426738207 IN ()))) FROM t2 WHERE (((((x'')<<('i떇㗞W4)A'))) NOT BETWEEN ('' COLLATE BINARY) AND (x''))) ORDER BY (t2.c3 IN (t2.c3)) ASC  NULLS FIRST; -- 1ms;
SELECT NULL FROM t2 LIMIT -635355640 OFFSET 636044243; -- 0ms;
SELECT ALL 0.3339262351909805 FROM t2; -- 0ms;
SELECT ALL ((((t2.c63)-(t2.c2))) NOT NULL) FROM t2 WHERE ((((0.6780363280280346)) BETWEEN ((691492880)) AND (((+ (0.9770289015453191)))))) ORDER BY ((((((((((((t2.c3)AND(t2.c1)))AND(t2.c1)))OR(t2.c63)))AND(t2.c2)))AND((NOT (t2.c63)))))AND(CASE t2.c3  WHEN t2.c1 THEN t2.c1 WHEN t2.c2 THEN t2.c4 WHEN t2.c2 THEN t2.c2 WHEN t2.c4 THEN '*u6T' WHEN '' THEN t2.c3 ELSE t2.c4 END))  NULLS LAST; -- 0ms;
SELECT DISTINCT QUOTE((((t2.c63)) NOT BETWEEN ((t2.c1)) AND ((t2.c4)))) FROM t2 WHERE ((NULL IN ())); -- 0ms;
SELECT ALL ((((t2.c3)OR(0.8297351259327364))) BETWEEN (CASE t2.c4  WHEN t2.c3 THEN t2.c3 END) AND ((t2.c4 IN ()))), ((((((t2.c4)/(t2.c4)))AND(AVG(t2.c4))))OR(((((((((t2.c63)OR(t2.c63)))AND(t2.c4)))AND(t2.c0)))OR(t2.c63)))), (((t2.c1) ISNULL) IN (((NULL) IS TRUE))) FROM t2; -- 0ms;
SELECT ((t2.c4) NOT BETWEEN (t2.c0) AND (t2.c1)) COLLATE NOCASE FROM t2 WHERE ((('2009993941') NOTNULL) COLLATE RTRIM); -- 0ms;
SELECT NULLIF(CAST(t2.c63 AS BLOB), 1.7976931348623157E308), ((((t2.c0 COLLATE BINARY)OR(CHAR(t2.c3))))AND((((((((('-1531874145')AND(t2.c4)))AND(x'')))AND(t2.c1)))OR(t2.c0)))), (((t2.c63))=((((t2.c2) ISNULL)))) FROM t2 WHERE ((((((((((((0.7086189631233987)) NOT BETWEEN ((NULL)) AND ((0.18876569432704882))))OR((0.01714722625467846 IN ()))))AND(((1492336315) IS TRUE))))AND(((('2088086238')) BETWEEN ((0.49160232590496555)) AND (('0C7SgPE9'))))))OR(((x'8eb07726d278') IS TRUE)))); -- 0ms;
SELECT CASE t2.c2  WHEN (('')/(t2.c1)) THEN ((t2.c63) IS FALSE) ELSE (~ (t2.c2)) END FROM t2; -- 0ms;
SELECT DISTINCT CASE WHEN NULL COLLATE NOCASE THEN (~ (t2.c2)) WHEN (((t2.c0)) BETWEEN ((t2.c2)) AND ((NULL))) THEN (t2.c2 IN (t2.c3)) WHEN t2.c3 THEN ((t2.c63) IS FALSE) END, ((TRIM(DISTINCT t2.c0, t2.c2))*(((((t2.c2)AND(t2.c1)))AND(t2.c63)))), ((((x'')&(t2.c1)))>(((t2.c0)/(t2.c63)))) FROM t2 ORDER BY ((((t2.c63) BETWEEN (t2.c1) AND (t2.c3)))*(CAST(t2.c0 AS TEXT))) DESC  NULLS LAST LIMIT -2129157590 OFFSET 1934128572; -- 0ms;
SELECT DISTINCT (- (MAX(t2.c3, t2.c4))) FROM t2 WHERE (x''); -- 0ms;
SELECT CHAR(CAST('' AS BLOB)), ((((t2.c3)GLOB(t2.c1)))LIKE((NOT (t2.c1)))), 0xffffffffd8c0ccc1 FROM t2; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM t2 WHERE (LIKELIHOOD(DISTINCT NULL COLLATE NOCASE, 0.49460500554759657)); -- 0ms;
SELECT CAST(TYPEOF(DISTINCT t2.c2) AS NUMERIC) FROM t2 WHERE (CASE WHEN 0.04623882384644806 THEN '' END COLLATE BINARY); -- 0ms;
SELECT ALL CAST(((t2.c0)!=(t2.c0)) AS REAL) FROM t2; -- 0ms;
SELECT DISTINCT CAST(((t2.c1)OR(t2.c0)) AS NUMERIC) FROM t2 ORDER BY (((t2.c1 IN ()))==(t2.c63)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (- (((((((((t2.c3)OR(t2.c1)))AND(t2.c1)))AND(t2.c1)))OR(t2.c3)))), ((DATETIME(t2.c63, t2.c2, t2.c3))>(CAST(t2.c3 AS TEXT))), NULL FROM t2 ORDER BY CASE WHEN ((t2.c1) NOT BETWEEN (t2.c63) AND (t2.c4)) THEN CAST(t2.c63 AS BLOB) END ASC  NULLS LAST, (+ (t2.c63 COLLATE BINARY))  NULLS LAST; -- 0ms;
SELECT COUNT(((t2.c1)||(t2.c4))) FILTER(WHERE CAST((- (t2.c4)) AS INTEGER)) OVER ( PARTITION BY (((((t2.c0)==(t2.c1)), CAST(t2.c1 AS BLOB), t2.c1))==((CASE t2.c0  WHEN t2.c2 THEN t2.c3 END, ((((t2.c4)OR(t2.c3)))OR(t2.c63)), CASE WHEN t2.c2 THEN t2.c4 WHEN t2.c4 THEN t2.c2 WHEN t2.c63 THEN t2.c3 WHEN t2.c4 THEN t2.c1 WHEN t2.c2 THEN 0.07160188878293894 ELSE t2.c1 END))), (((t2.c63)<<(t2.c2)) IN (((t2.c4)-('')), '-654783084', x''))) FROM t2 GROUP BY NULL HAVING CASE WHEN ((t2.c63) ISNULL) THEN CASE t2.c0  WHEN t2.c4 THEN t2.c1 END END; -- 0ms;
SELECT ALL (LIKE(t2.c2, x'', '0') IN ((t2.c1 IN ()), (((t2.c2))=((t2.c4))))) FROM t2 WHERE (((CAST('0.8200330138683721' AS NUMERIC)) NOT NULL)); -- 0ms;
SELECT DISTINCT MIN(((t2.c1) IS FALSE) COLLATE NOCASE), CASE WHEN 1.0062117E7 THEN 1.835794577E9 END COLLATE RTRIM, COUNT(*) OVER () FROM t2; -- 0ms;
SELECT DISTINCT (('1024236379') NOT BETWEEN (((t2.c4) NOT BETWEEN (t2.c2) AND (t2.c1))) AND (t2.c2 COLLATE BINARY)) FROM t2 WHERE ((((((('')OR(x'')))OR(x'')))IS(((x'')=(''))))); -- 0ms;
SELECT DISTINCT ((((t2.c0, t2.c63, t2.c0))<=((t2.c2, t2.c0, t2.c2))) IN ()) FROM t2 WHERE (CASE ((x'')<=('-38444890'))  WHEN (NULL IN ()) THEN CAST('-1450681647' AS INTEGER) WHEN (((NULL, NULL, x'56bf'))=((0.3169507286856923, x'', 0.6989060438588306))) THEN CAST(0.29845210703111313 AS BLOB) WHEN (NULL IN ()) THEN 'm3疼c' COLLATE NOCASE END); -- 0ms;
SELECT SQLITE_VERSION() FROM t2 NOT INDEXED WHERE (((((NULL)&('-1468748927'))) BETWEEN ((((0.9503854663510535))>=(('범M')))) AND (TYPEOF('973812879')))); -- 0ms;
SELECT DISTINCT (((NULL, CASE WHEN t2.c1 THEN t2.c1 WHEN t2.c3 THEN t2.c3 WHEN t2.c63 THEN t2.c3 END, MIN(t2.c0)))>(((- (t2.c1)), (((t2.c0))!=((t2.c4))), t2.c4 COLLATE BINARY))) FROM t2 WHERE (CAST((~ (x'')) AS BLOB)); -- 0ms;
SELECT DISTINCT (((t2.c1)LIKE(t2.c3)) IN ()) FROM t2; -- 0ms;
SELECT NULL FROM t2 WHERE ((((((((((('|^1') IS FALSE))AND(((NULL)>>(x'')))))OR(ABS(DISTINCT x''))))OR((NULL IN ()))))AND(CASE WHEN 0X485d6228 THEN NULL END))); -- 0ms;
SELECT (((t2.c0)) NOT BETWEEN (((((t2.c2))>((t2.c1))))) AND ((CAST(t2.c4 AS INTEGER)))), t2.c4, (((t2.c3)) NOT BETWEEN (((((t2.c2))<=((t2.c3))))) AND ((((t2.c4) NOTNULL)))), ((((((t2.c2)OR(-1.728658891E9)))OR(t2.c0)))==((t2.c2 IN ()))), CASE ',y'  WHEN (((x'4a1a', t2.c2, t2.c1))<=((t2.c1, t2.c63, 'kXn'))) THEN NULL END FROM t2 WHERE (LIKELIHOOD(CAST(NULL AS NUMERIC), 0.8767647948959354)); -- 0ms;
SELECT DISTINCT t2.c0, CAST(CASE t2.c2  WHEN '-1531897023' THEN t2.c3 END AS TEXT), IFNULL(DISTINCT ((((t2.c1)AND(t2.c0)))OR(t2.c2)), 0.2925416158799652) FROM t2 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT CAST(((t2.c0) NOT BETWEEN (t2.c3) AND (t2.c1)) AS NUMERIC) FROM t2; -- 0ms;
SELECT ((((((((((('-550342227', t2.c63, t2.c1)) NOT BETWEEN ((t2.c2, t2.c1, t2.c2)) AND (('-1970853560', t2.c63, t2.c0))))AND((t2.c4 IN ()))))OR(((t2.c2) NOTNULL))))AND(t2.c4)))OR(((t2.c3)+(t2.c2)))) FROM t2; -- 0ms;
SELECT DISTINCT MAX((+ (t2.c2))), ((((t2.c4) NOT NULL))>>((((t2.c1, t2.c0, t2.c4))>=((t2.c3, t2.c4, t2.c4))))), t2.c2 FROM t2 LIMIT 1815947463; -- 0ms;
SELECT ((((t2.c3) NOT NULL)) BETWEEN (t2.c3 COLLATE NOCASE) AND ((t2.c3 IN ()))), CASE t2.c4  WHEN t2.c3 COLLATE NOCASE THEN CASE WHEN 0.4052011808557058 THEN t2.c63 END ELSE t2.c2 COLLATE RTRIM END, (((((((NULL))>((t2.c3))))OR(0.24264266951825342)))AND(x'')) FROM t2 WHERE (CASE WHEN CAST(0.7379431830656358 AS BLOB) THEN (('-2054942647') BETWEEN ('tA	春K') AND (0.17631611109508805)) END) LIMIT 2060424730; -- 0ms;
SELECT (((((t2.c3)) BETWEEN ((t2.c1)) AND ((t2.c0))))&(CASE t2.c2  WHEN t2.c3 THEN NULL WHEN t2.c63 THEN t2.c63 WHEN t2.c2 THEN t2.c0 END)) FROM t2 WHERE ((((((((((+ ('110991542')))OR(0.13566560819328966)))OR('㹍V6' COLLATE RTRIM)))OR((0.40933422529768293 IN ()))))OR((0.5936855851610863 IN ())))) ORDER BY x'50e8' ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE WHEN x'' THEN t2.c1 ELSE t2.c2 END) NOT NULL) FROM t2 WHERE (((((x'17ca') BETWEEN (x'') AND ('-1564473244'))) IS TRUE)); -- 0ms;
SELECT DISTINCT (~ ((t2.c1 IN (t2.c63, t2.c1)))) FROM t2 WHERE (CASE WHEN CASE WHEN '溜	QhwyIJ?' THEN '1572666797' ELSE x'3153' END THEN CAST(NULL AS REAL) END) ORDER BY ((t2.c1 COLLATE RTRIM) NOT NULL)  NULLS FIRST, DATETIME(t2.c1, CASE WHEN NULL THEN t2.c2 WHEN t2.c4 THEN t2.c0 WHEN t2.c2 THEN t2.c2 END, (((t2.c2))<>((t2.c0)))), CAST((((('[kM>*BR')OR(t2.c1)))OR(t2.c0)) AS REAL) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((t2.c1) ISNULL))/(COUNT(*))), ((((t2.c0) NOT NULL))|(((t2.c0)IS(t2.c1)))), 0X27f8beb2, FIRST_VALUE((((((t2.c1, t2.c63, t2.c0))<=((t2.c63, t2.c1, t2.c1)))) BETWEEN ((((t2.c63))=((t2.c2)))) AND ((((t2.c3))<((t2.c63)))))) OVER (), (~ (CAST(t2.c3 AS INTEGER))) FROM t2 ORDER BY LOWER(DISTINCT (((t2.c2))>((t2.c63)))) DESC LIMIT -1021741752 OFFSET -543748665; -- 0ms;
SELECT DISTINCT t2.c4, ((t2.c2)|(t2.c0)), t2.c4 FROM t2; -- 0ms;
SELECT SUM(((t2.c2) NOT BETWEEN (t2.c0) AND (t2.c63))) COLLATE RTRIM FROM t2 WHERE (LAST_INSERT_ROWID() COLLATE RTRIM) GROUP BY ((((t2.c3 IN ())))>((CAST('-1201690570' AS TEXT)))), ((((((((((t2.c4) BETWEEN (t2.c2) AND (t2.c1)))AND(((t2.c3) IS TRUE))))OR(CAST(t2.c1 AS INTEGER))))OR(((t2.c4)/(t2.c2)))))OR((((t2.c1)) NOT BETWEEN ((t2.c4)) AND (('~4iTo{}'))))), ((('lX')) BETWEEN ((CAST(t2.c63 AS TEXT))) AND ((((t2.c3) IS TRUE)))); -- 0ms;
SELECT DISTINCT (~ (((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c3)))), t2.c63, (((t2.c1)=(t2.c3)) IN ()) FROM t2; -- 0ms;
SELECT CASE CAST(t2.c3 AS INTEGER)  WHEN ((t2.c2) NOT NULL) THEN ((t2.c4) BETWEEN (t2.c63) AND (t2.c1)) END FROM t2 ORDER BY ((t2.c4)AND(CASE '0.24775893277827354'  WHEN t2.c1 THEN x'' ELSE t2.c63 END))  NULLS LAST; -- 0ms;
SELECT DISTINCT CHANGES() FROM t2 WHERE (CAST(((NULL) IS TRUE) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((- (t2.c1)))<('ui')) FROM t2 WHERE (MIN(((((0xffffffffb371a13f)OR(1855823911)))AND('')), (((x''))!=(('-1303136351'))))); -- 0ms;
SELECT DISTINCT (((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c2)))) NOT BETWEEN ((t2.c63 IN ())) AND ((((t2.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c3))))) FROM t2; -- 0ms;
SELECT (((t2.c3)) BETWEEN ((((t2.c0) IS TRUE))) AND ((t2.c0))) FROM t2 WHERE (((((NULL)IS(0.1607416504319784)))>>(NULL))); -- 0ms;
SELECT ((CAST(t2.c4 AS INTEGER))%(t2.c63)), ((UNLIKELY(DISTINCT t2.c3))<((- (t2.c3)))), ((((((((t2.c2)OR(0.9352012883600026)))AND(((t2.c3) IS FALSE))))OR(t2.c1)))OR(((t2.c63)+(t2.c63)))) FROM t2; -- 0ms;
SELECT AVG(TOTAL_CHANGES()) FILTER(WHERE CASE x'' COLLATE BINARY  WHEN CASE WHEN t2.c0 THEN t2.c4 WHEN t2.c4 THEN t2.c1 WHEN t2.c63 THEN t2.c1 ELSE t2.c0 END THEN (((t2.c4, t2.c2, t2.c2)) BETWEEN ((t2.c63, t2.c3, t2.c63)) AND ((t2.c63, t2.c3, t2.c1))) ELSE (((t2.c1))>((t2.c4))) END) OVER () FROM t2 WHERE (CASE WHEN '1549819519' COLLATE BINARY THEN (- (0.5300461073557811)) END); -- 0ms;
SELECT DISTINCT (t2.c1 IN ()) COLLATE BINARY FROM t2 WHERE ((((x'')>>(0.7586046533526738)) IN ())); -- 0ms;
SELECT DISTINCT ((((t2.c3)>(t2.c3)))IS NOT(0.7831017962556919)) FROM t2; -- 0ms;
SELECT DISTINCT (((- (t2.c4)))>=(t2.c1 COLLATE NOCASE)), UNLIKELY(DISTINCT (t2.c0 IN ())), (((t2.c3 IN (t2.c2, t2.c3)))<(CAST(t2.c1 AS REAL))) FROM t2 EXCEPT SELECT DISTINCT ((t2.c0 COLLATE RTRIM) NOTNULL), ROW_NUMBER() OVER (), CUME_DIST() OVER () FROM t2 ORDER BY t2.c1  NULLS FIRST, ((((((((t2.c4)OR(t2.c4)))AND(t2.c3)))AND(((t2.c63) NOT NULL))))OR(((((((((t2.c1)OR(0.05576248349993418)))AND(t2.c1)))AND(t2.c63)))AND(t2.c4)))) DESC  NULLS FIRST, CAST(t2.c4 AS NUMERIC);SELECT DISTINCT (((((t2.c0)) BETWEEN ((t2.c4)) AND ((t2.c3))))<((~ (t2.c0)))) FROM t2; -- 0ms;
SELECT DISTINCT ((((t2.c63)OR(t2.c4)))OR(t2.c3)) COLLATE NOCASE, (t2.c2 IN (t2.c2)) COLLATE RTRIM, (CAST(t2.c1 AS INTEGER) IN ()), x'', COUNT(*) OVER ( GROUPS (((COALESCE(DISTINCT t2.c4, t2.c3, '-109946481', t2.c3)))!=(((t2.c1 IN ())))) PRECEDING) FROM t2;SELECT DISTINCT ((((CAST(t2.c4 AS TEXT))AND((t2.c0 IN (NULL)))))AND(((t2.c0)<<(0.9138612131485638)))) FROM t2; -- 1ms;
SELECT DISTINCT CAST((((NULL)) BETWEEN ((t2.c1)) AND ((t2.c0))) AS REAL) FROM t2; -- 0ms;
SELECT DISTINCT SUM((((t2.c0)) BETWEEN ((t2.c3)) AND ((t2.c2)))) OVER () FROM t2 WHERE (((('1537370384' IN ())) ISNULL)); -- 0ms;
SELECT DISTINCT ((2002072020 COLLATE BINARY)IS NOT(CAST(t2.c3 AS NUMERIC))) FROM t2 WHERE (CASE CAST(0.09849669541645512 AS INTEGER)  WHEN (1.537370384E9 IN ()) THEN ((('S9')) NOT BETWEEN (('0.07089494783294814')) AND (('|^1'))) ELSE CAST('1975213246' AS BLOB) END); -- 0ms;
SELECT SUM(((((((((x'872cfaa2')OR(t2.c0)))OR(t2.c4)))OR(t2.c0)))OR(t2.c63))) OVER () FROM t2 WHERE (CAST(((x'1f49f837') IS TRUE) AS NUMERIC)) GROUP BY (((((t2.c4)<=(x'9ca0'))))<(((((t2.c2))<=((t2.c63)))))); -- 0ms;
SELECT DISTINCT (((((x'' IN ()))OR(((t2.c4)&(t2.c2)))))OR(t2.c1)), (~ (t2.c0)) COLLATE NOCASE, (((t2.c4 IN (t2.c63))) NOT BETWEEN (CAST(t2.c2 AS BLOB)) AND (t2.c63 COLLATE RTRIM)) FROM t2 ORDER BY ((((t2.c1) NOT BETWEEN (t2.c4) AND (-2116816996)))>((t2.c0 IN (t2.c4, t2.c4))))  NULLS LAST, CASE WHEN TRIM(DISTINCT t2.c63) THEN (NOT (t2.c2)) END; -- 0ms;
SELECT DISTINCT (((((((((((t2.c3, t2.c4, t2.c1)) NOT BETWEEN ((x'', t2.c2, -1532348933)) AND ((0.2993957762726396, t2.c3, t2.c2))))OR(((NULL) BETWEEN (t2.c63) AND (t2.c3)))))AND(CAST(t2.c63 AS INTEGER))))OR((NOT (t2.c2)))))AND((NOT (NULL)))) FROM t2 GROUP BY ((((((t2.c63)OR(t2.c4)))AND(t2.c63))) IS TRUE); -- 0ms;
SELECT ALL (((((t2.c4) NOT BETWEEN (t2.c3) AND (''))))<=((((t2.c2)>>(t2.c3))))) FROM t2; -- 0ms;
SELECT DISTINCT (((t2.c0, t2.c4, t2.c0, t2.c1, t2.c1, t2.c0, t2.c3)) BETWEEN ((((t2.c1)>=(t2.c4)), CASE WHEN t2.c1 THEN t2.c1 WHEN x'4ff1' THEN t2.c0 WHEN t2.c4 THEN t2.c4 ELSE t2.c3 END, TOTAL(t2.c4), CASE t2.c63  WHEN '6LgM' THEN t2.c4 END, (((t2.c3))>=((0Xffffffff861e013d))), DATETIME(t2.c1, t2.c4, t2.c0), ((((t2.c3)OR('')))OR(t2.c0)))) AND ((json_object(t2.c63, t2.c1), CAST(t2.c3 AS INTEGER), GROUP_CONCAT(t2.c0), ((t2.c1)=(t2.c1)), (t2.c2 IN ()), ((t2.c4)>(t2.c4)), (+ (t2.c1))))) FROM t2;SELECT DISTINCT ((CASE WHEN t2.c0 THEN t2.c4 END)>>(NULLIF(t2.c63, x''))), PERCENT_RANK() OVER (), t2.c63 FROM t2; -- 0ms;
SELECT ((MIN(t2.c63))IS NOT((~ (t2.c63)))) FROM t2; -- 0ms;
SELECT ALL json_extract(CASE WHEN t2.c1 THEN t2.c1 WHEN t2.c4 THEN t2.c63 WHEN t2.c3 THEN t2.c4 ELSE t2.c2 END, ((t2.c4)<(t2.c4))), (~ (t2.c1)) COLLATE BINARY, COUNT(0.04376418992067821) OVER (), ((((t2.c3) IS TRUE)) IS TRUE), CAST(CAST(t2.c0 AS TEXT) AS NUMERIC), t2.c0, (((t2.c0)%(t2.c63)) IN ()) FROM t2; -- 0ms;
SELECT ((((NULL) ISNULL))LIKE(((((t2.c2)AND(t2.c63)))AND(x'')))) FROM t2 GROUP BY ((t2.c4)<=(CASE WHEN t2.c0 THEN t2.c63 END)) HAVING (+ (NULLIF(t2.c0, x'e786'))); -- 0ms;
SELECT ALL LAG(CAST(t2.c4 AS REAL) COLLATE BINARY COLLATE NOCASE, ((TRIM(t2.c1)) BETWEEN (-4.43677009E8) AND ((t2.c1 IN ()))), (- (t2.c0 COLLATE BINARY))) OVER ( GROUPS (NOT (((t2.c1) NOT BETWEEN (t2.c63) AND (t2.c0)))) PRECEDING) FROM t2 WHERE ((((x'')) BETWEEN ((UNLIKELY(x''))) AND ((((('0.7631419832162903', ',F', x'')) BETWEEN (('-1381647732', NULL, NULL)) AND ((NULL, '1570245064', 0.09606122594058863))))))); -- 0ms;
SELECT ALL t2.c63 FROM t2; -- 0ms;
SELECT ALL CASE WHEN ((t2.c63) ISNULL) THEN (((t2.c4, t2.c0, t2.c4, t2.c4, t2.c0)) NOT BETWEEN ((t2.c63, -1739668872, t2.c4, t2.c2, t2.c0)) AND ((t2.c2, t2.c2, t2.c4, t2.c63, t2.c3))) END, ((((((t2.c0)AND(t2.c2)))OR(t2.c63))) IS TRUE), t2.c2 FROM t2 WHERE ((((x'056d', x'17bf54de', '', x'106e', NULL)) NOT BETWEEN ((0.5223525492848026, ((NULL)>=('')), NULL, x'' COLLATE NOCASE, (((((((('')AND(0.3729784362493116)))OR(NULL)))OR('''l7VG')))AND(0.36500052925164006)))) AND ((CAST('' AS INTEGER), (((('Y#?')AND('^&]ZGA')))OR('0.19842847844916456')), NULL COLLATE NOCASE, ((((0X54daacbb)OR(0.8666700400778249)))AND(x'')), (((NULL)) BETWEEN ((x'295c')) AND ((''))))))); -- 0ms;
SELECT DISTINCT t2.c3 FROM t2 ORDER BY ((t2.c4)LIKE((- (t2.c63))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((LIKE(t2.c3, t2.c2))OR(CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c63 THEN t2.c4 WHEN t2.c63 THEN t2.c2 END)))OR(t2.c0)) FROM t2 WHERE (((CAST('1340540894' AS TEXT))=(UPPER(x'')))); -- 0ms;
SELECT DISTINCT t2.c2 FROM t2 WHERE (''); -- 0ms;
SELECT DISTINCT ((t2.c4) NOTNULL), (t2.c0 COLLATE RTRIM IN (((t2.c1) BETWEEN (t2.c0) AND (t2.c3)))), CAST(SUM(NULL) AS REAL) FROM t2; -- 0ms;
SELECT ALL (~ (((t2.c1)OR('1763637773')))), ((((((t2.c63)&(t2.c1)))AND(((t2.c63) BETWEEN (t2.c0) AND (t2.c3)))))OR(((t2.c3) ISNULL))), ROW_NUMBER() OVER (), ABS(DISTINCT LTRIM(t2.c3)), CASE WHEN t2.c4 COLLATE RTRIM THEN '-*Xk' WHEN ((t2.c4)-(NULL)) THEN CAST(t2.c2 AS NUMERIC) WHEN CASE WHEN t2.c63 THEN t2.c63 END THEN t2.c63 END FROM t2 WHERE (((CAST('0.7633238338103168' AS NUMERIC))-((((('1035744928')OR(0.33501875852469476)))AND('1138561305'))))); -- 0ms;
SELECT DISTINCT (((((0.3280256691343817)IS NOT(t2.c1))))<(((((t2.c2))<((t2.c1)))))) FROM t2 WHERE ((((0.5068455565051404)) NOT BETWEEN (((637497058 IN ()))) AND ((CASE NULL  WHEN NULL THEN NULL END)))); -- 0ms;
SELECT DISTINCT (- (0X68080712)) FROM t2; -- 0ms;
SELECT DISTINCT (((((((((+ ('\r')))OR(CAST(t2.c63 AS REAL))))OR(((t2.c63)LIKE(t2.c4)))))OR(SUM(t2.c63))))OR(((t2.c2)<=(t2.c63)))) FROM t2; -- 0ms;
SELECT DISTINCT NULL, (- (t2.c3)), t2.c4 FROM t2; -- 0ms;
SELECT ALL (((((((((t2.c4 IN (t2.c1, t2.c4)))AND((t2.c4 IN ()))))AND(TOTAL(t2.c63))))AND(((t2.c2) NOTNULL))))AND((t2.c4 IN ('')))) FROM t2 WHERE (((((0xffffffff92e2be67) NOTNULL)) NOTNULL)) GROUP BY ((((LTRIM(t2.c0, t2.c63))AND(((x'c4c6')<>(t2.c2)))))OR(t2.c63)), (((t2.c3 IN ())) BETWEEN (t2.c0 COLLATE BINARY) AND (CASE t2.c3  WHEN t2.c0 THEN '1820135794' END)), ((t2.c3)LIKE(t2.c63)) COLLATE RTRIM, ((CASE t2.c4  WHEN t2.c1 THEN t2.c4 END)>>((+ (t2.c63)))), ((NOT (t2.c3)) IN ()) HAVING ((((((t2.c63)OR(t2.c63)))OR(t2.c0))) ISNULL); -- 0ms;
SELECT DISTINCT ((t2.c1)>=(COUNT(*))) FROM t2; -- 0ms;
SELECT ((((t2.c1)>=(t2.c2)))=(((t2.c2) NOT BETWEEN (t2.c2) AND (t2.c1)))) FROM t2 WHERE (CAST(CAST(0xffffffffbd29b0b4 AS TEXT) AS INTEGER)) LIMIT -1564473244; -- 0ms;
SELECT DISTINCT (CASE t2.c63  WHEN t2.c3 THEN t2.c4 END IN ((('-1119665235') NOT NULL), ((t2.c0) NOT NULL))) FROM t2 WHERE (((CASE 0.6427682056770968  WHEN x'' THEN 0.42712047232422057 END)<<(CASE WHEN x'' THEN 0.20039815543895445 END))); -- 0ms;
SELECT CAST(((((t2.c0)AND(t2.c0)))OR(t2.c63)) AS NUMERIC) FROM t2; -- 0ms;
SELECT ALL ((UPPER(',N'))<<(((t2.c0) NOT BETWEEN (t2.c4) AND ('1247234085')))) FROM t2 WHERE ((+ (('j(Uja pp_' IN ())))); -- 0ms;
SELECT ALL 0.5985846928844007 FROM t2 LIMIT 1863391133; -- 0ms;
SELECT DISTINCT NULL, (t2.c1 IN (CASE t2.c4  WHEN t2.c3 THEN t2.c0 END, TOTAL(NULL))), (((t2.c1)) BETWEEN (((((t2.c63))>=((t2.c0))))) AND ((((t2.c4)IS NOT(t2.c63))))) FROM t2 INTERSECT SELECT CASE ((t2.c63)%(t2.c4))  WHEN ((t2.c0)IS NOT(t2.c4)) THEN ((-9.52483651E8)==(t2.c2)) ELSE (NOT (t2.c2)) END, TOTAL(t2.c63 COLLATE RTRIM COLLATE BINARY), ((t2.c2)==(t2.c4)) COLLATE NOCASE FROM t2 WHERE ((NOT (CHAR('1284827217')))); -- 0ms;
SELECT ALL (((((t2.c4))==((t2.c0))))%(CASE t2.c2  WHEN t2.c4 THEN x'' END)) FROM t2; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t2.c1 IN ())) OVER (), (((((NOT (t2.c0)))OR(rtreenode(t2.c4, t2.c63))))AND(((t2.c4) NOT BETWEEN (t2.c0) AND (t2.c63)))), (- (((t2.c2)+(t2.c0)))) FROM t2 WHERE ((((x'')<=(0.06673884014968468)) IN (NULL, (~ (1.267808884E9))))) ORDER BY ((((((((((((((t2.c3)<=(t2.c0)))OR(LIKELIHOOD(DISTINCT t2.c1, 0.021037518818808443))))AND(t2.c3)))AND(((t2.c2)==(t2.c63)))))AND(t2.c63 COLLATE BINARY)))AND(t2.c0 COLLATE BINARY)))OR(x'')) ASC, ((CAST(t2.c4 AS REAL))||(LIKELIHOOD(t2.c63, 0.04380530467184274))) ASC; -- 0ms;
SELECT ALL ((t2.c1 COLLATE NOCASE)==(TRIM(DISTINCT t2.c63))) FROM t2 WHERE ((- ((((NULL))>=((x'4f3b')))))) GROUP BY ((CASE WHEN t2.c3 THEN t2.c2 END) ISNULL) HAVING (- (SUM(t2.c4))); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_GET(t2.c1) COLLATE RTRIM FROM t2 WHERE ((('-550342227')AND((('-812925254') NOT NULL)))); -- 0ms;
SELECT ALL CAST(MIN(t2.c63) AS TEXT) FROM t2 WHERE ((('})')*(HEX('1858099729')))); -- 0ms;
SELECT DISTINCT (((t2.c63, t2.c0, t2.c4, t2.c63, t2.c63)) BETWEEN ((t2.c4 COLLATE RTRIM, JULIANDAY(t2.c4, t2.c0, t2.c4), ((t2.c1) NOTNULL), ((t2.c2) NOT NULL), (- (t2.c3)))) AND ((((t2.c1) NOTNULL), t2.c2, (t2.c3 IN ()), (t2.c0 IN ()), (('1831681736') ISNULL)))) FROM t2; -- 0ms;
SELECT DISTINCT TOTAL(((t2.c4)LIKE(t2.c1))) FROM t2 LIMIT 1113029970; -- 0ms;
SELECT DISTINCT (((CAST(t2.c0 AS TEXT)))<((t2.c0))), COUNT(((t2.c63) BETWEEN (t2.c63) AND (t2.c63))), (((t2.c63, ((((t2.c2)AND(t2.c1)))OR(t2.c1)), x'', CASE 0.8106154511212764  WHEN t2.c1 THEN t2.c3 WHEN t2.c1 THEN NULL WHEN t2.c2 THEN t2.c63 ELSE t2.c63 END, ((t2.c0) IS TRUE)))=((((((((((NULL)OR(t2.c0)))OR(t2.c1)))OR(t2.c0)))OR(t2.c2)), '2009993941', ((((t2.c1)AND(t2.c3)))AND(t2.c3)), MIN(t2.c0), (((t2.c2, t2.c3, t2.c1)) NOT BETWEEN ((t2.c63, t2.c4, t2.c3)) AND (('''', '', t2.c63)))))) FROM t2; -- 0ms;
SELECT DISTINCT MAX(((t2.c63)<=(t2.c4))) FROM t2 WHERE ((((0.2536113291600234, x'', 0.4523597673256221)) NOT BETWEEN (((((0X5253b44a)) BETWEEN ((NULL)) AND (('1835794577'))), (('')LIKE(0Xffffffff8f9a24ec)), (((0.46529280821738817)) NOT BETWEEN ((NULL)) AND (('-2020928101'))))) AND ((('\' IN ()), (('670613170') NOT NULL), (('\n') NOT BETWEEN ('-711604924') AND (x'')))))); -- 0ms;
SELECT ROUND(CAST(t2.c63 AS TEXT), (t2.c1 IN ())), ((t2.c1)+(0.5122580326628198)) COLLATE RTRIM, MAX(((t2.c4)+(NULL))) COLLATE BINARY FROM t2 WHERE (CASE WHEN CASE WHEN NULL THEN 0.6033667479002041 WHEN NULL THEN 0.5198986494010924 WHEN 0Xffffffffc0b8f4b7 THEN NULL WHEN NULL THEN '1143977275' WHEN x'' THEN '{_7/wy(' END THEN (x'' IN ()) ELSE ((((x'')AND(0X5bef9cb4)))AND(NULL)) END); -- 0ms;
SELECT ALL '梞m' FROM t2 WHERE (CASE ((NULL) NOT BETWEEN (0.8822567040739121) AND (')WI%g'))  WHEN 0Xffffffffa2c00864 COLLATE NOCASE THEN CASE 0xffffffffc21ff31d  WHEN '-1346285197' THEN NULL ELSE '-1159567835' END END); -- 0ms;
SELECT ALL CASE (t2.c1 IN (t2.c3, t2.c1))  WHEN (+ (t2.c0)) THEN TRIM('-657405572') ELSE t2.c63 COLLATE BINARY END FROM t2; -- 0ms;
SELECT DISTINCT CAST(t2.c0 AS BLOB) COLLATE RTRIM FROM t2 WHERE (load_extension((NULL IN ()), ((x'') NOT BETWEEN (NULL) AND (0x10b9c43d))));SELECT DISTINCT CASE HEX(DISTINCT -1.312621971E9)  WHEN (((t2.c3)) BETWEEN ((t2.c4)) AND ((t2.c0))) THEN MAX(-1097457645) WHEN 0Xffffffffe1941c4c THEN ((t2.c63) BETWEEN (t2.c1) AND (t2.c1)) WHEN 0.3430159113313199 THEN LIKELIHOOD(t2.c0, 0.9508747334368152) END FROM t2 WHERE ((((('1934128572') NOT BETWEEN ('118219878') AND (0X20e70cd3)))|(((0.6709800817740673)OR(NULL))))); -- 0ms;
SELECT ((t2.c0)AND(t2.c63)) COLLATE BINARY FROM t2; -- 1ms;
SELECT DISTINCT CASE WHEN (t2.c3 IN (t2.c1)) THEN ((t2.c4) IS TRUE) WHEN ((t2.c1)<(t2.c4)) THEN 'CX8t/<N' WHEN ((((((((t2.c63)AND(t2.c63)))OR(x'2e1b')))OR(t2.c63)))OR(t2.c4)) THEN MAX(t2.c4) END FROM t2 WHERE (((((0X9a01dfc) NOTNULL)) BETWEEN ('1983947875') AND (0.6315642128634816))); -- 0ms;
SELECT DISTINCT (CASE '1'  WHEN t2.c4 THEN t2.c1 ELSE t2.c1 END IN ()) FROM t2 WHERE (CAST('' COLLATE BINARY AS TEXT)); -- 0ms;
SELECT ALL CASE WHEN t2.c3 THEN (- ('JU')) WHEN (((t2.c1)) NOT BETWEEN ((t2.c4)) AND ((0.9534225280678628))) THEN ((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c4)) WHEN ((t2.c1) IS FALSE) THEN (t2.c63 IN (x'')) ELSE t2.c4 END, ((NULL)<<((((((((('-1121341260')AND(t2.c0)))AND('1983947875')))AND(0.5054719857931116)))OR(t2.c1)))), IFNULL(DISTINCT ((t2.c63) IS TRUE), MAX(t2.c1)) FROM t2; -- 0ms;
SELECT (NOT ((('啭''') IS FALSE))), ((NOT (t2.c2)) IN ()), (NOT (t2.c1)) FROM t2 WHERE ((((((0.7406302139421047, 0.8460831173085787, 0Xffffffffe25982fc)) BETWEEN (('H3ꀋ70G9G	', NULL, '}4')) AND ((NULL, 0Xffffffffda962958, '-1238741417')))) NOTNULL)); -- 0ms;
SELECT DISTINCT (- (t2.c2)) COLLATE BINARY FROM t2 LIMIT 468594992; -- 0ms;
SELECT ALL LEAD(((CAST(t2.c4 AS REAL))|(COALESCE(t2.c1, 0.2768495673462049))), COALESCE(DISTINCT ((t2.c3) NOTNULL), t2.c0 COLLATE NOCASE), ((((((((((t2.c0)<>(t2.c0)))OR(CAST(t2.c2 AS NUMERIC))))OR(((NULL)>=(t2.c2)))))OR((- (t2.c3)))))AND(CAST(t2.c3 AS BLOB)))) OVER ( RANGE BETWEEN ((CASE t2.c0  WHEN t2.c63 THEN t2.c1 ELSE t2.c4 END)+(CAST(NULL AS BLOB))) PRECEDING AND t2.c0 FOLLOWING) FROM t2 WHERE (((CAST(x'' AS INTEGER)) NOT BETWEEN (((('0.9253665797138791')) BETWEEN ((NULL)) AND ((0.4529862690466041)))) AND (CAST(0.021977864555156934 AS REAL))));SELECT DISTINCT (~ (((t2.c3)>(t2.c3)))) FROM t2 WHERE (CAST(((((((((-543748665)AND('2129092106')))OR(0x4b2cd501)))AND(0X158902be)))AND(6.9149288E8)) AS TEXT)); -- 0ms;
SELECT ALL (('0.7631419832162903')*(((((t2.c1)OR(x'')))OR(-1.159567835E9)))), ((((((t2.c1)OR('')))OR(''))) IS FALSE), (t2.c63 IN (t2.c1)) COLLATE BINARY FROM t2 WHERE ('7796845'); -- 0ms;
SELECT ALL t2.c4, t2.c2 COLLATE BINARY, '' FROM t2; -- 0ms;
SELECT DISTINCT (((((t2.c2 IN ()))OR(CASE t2.c2  WHEN t2.c3 THEN t2.c1 WHEN t2.c4 THEN t2.c0 WHEN t2.c4 THEN '-1853617451' ELSE t2.c0 END)))AND(t2.c1 COLLATE RTRIM)), ROW_NUMBER() OVER (), (NOT (t2.c63)) COLLATE BINARY, t2.c63, NULL FROM t2 WHERE (((((0.6505333845261172)AND(((x'') NOT NULL))))AND(((x'83087cff') BETWEEN (x'6f4d') AND (NULL))))); -- 0ms;
SELECT DISTINCT CASE LIKELIHOOD(t2.c3, 0.5507646997342376)  WHEN ((t2.c3)<(t2.c63)) THEN t2.c3 END, ((((((t2.c2, t2.c1, t2.c63))<=((t2.c0, t2.c2, t2.c63))), t2.c3, t2.c0 COLLATE RTRIM))>=(((('u葎')<=(t2.c1)), ABS(t2.c1), SUM('1081816718')))), ((t2.c4 COLLATE BINARY)>((NOT (t2.c4)))) FROM t2 WHERE ('-914622256'); -- 0ms;
SELECT CAST((~ (t2.c1)) AS BLOB), CASE t2.c3  WHEN t2.c2 THEN t2.c2 END COLLATE NOCASE, TOTAL(t2.c0) OVER ( ORDER BY (((((t2.c4)OR(t2.c4)))OR(t2.c63)) IN ())  NULLS FIRST) FROM t2; -- 0ms;
SELECT t2.c3, ((CAST(t2.c4 AS BLOB)) BETWEEN (((t2.c63) BETWEEN (t2.c63) AND (0.0023407067373952817))) AND (t2.c0 COLLATE NOCASE)), json_array(((t2.c63)<<(t2.c63)), ((t2.c3)AND(t2.c0))) FROM t2; -- 0ms;
SELECT DISTINCT (((AVG(t2.c63)))=((((t2.c3)>(t2.c1))))), ((LOWER(t2.c3))>>(((t2.c3) NOT NULL))), TOTAL((t2.c63 IN ())) OVER () FROM t2 WHERE ((+ (CASE WHEN NULL THEN x'f2aa' WHEN x'' THEN NULL WHEN 0.0 THEN '808684008' ELSE x'' END))) GROUP BY PRINTF(((t2.c2)>=(t2.c4)), t2.c4, ((t2.c3)>(t2.c2)), ((t2.c0) BETWEEN (t2.c3) AND (t2.c1)), ((t2.c4) BETWEEN (t2.c3) AND (t2.c2))) HAVING CASE t2.c2  WHEN CAST(t2.c2 AS TEXT) THEN ((x'')<(t2.c1)) ELSE CAST(t2.c4 AS INTEGER) END; -- 0ms;
SELECT ALL CAST(((t2.c3) NOT BETWEEN (t2.c2) AND (t2.c0)) AS NUMERIC), (((t2.c63)) NOT BETWEEN (((t2.c63 IN (t2.c3)))) AND ((t2.c4 COLLATE NOCASE))), INSTR((t2.c0 IN (t2.c3, t2.c4)), CAST(t2.c0 AS NUMERIC)) FROM t2; -- 0ms;
SELECT ALL ((((CAST(t2.c4 AS REAL))OR((~ (NULL)))))OR(((t2.c4)>>(t2.c3)))), t2.c2, ((((t2.c1 COLLATE RTRIM)OR(CAST(t2.c63 AS NUMERIC))))AND('-1061620553')) FROM t2 WHERE (((load_extension('', NULL)) ISNULL));SELECT ((t2.c63) BETWEEN (((t2.c4)*(t2.c63))) AND ((+ (t2.c3)))) FROM t2; -- 0ms;
SELECT DISTINCT CAST(t2.c1 COLLATE BINARY AS INTEGER), MIN(((t2.c3) IS TRUE), CASE t2.c2  WHEN t2.c3 THEN t2.c4 WHEN t2.c63 THEN t2.c0 WHEN t2.c2 THEN t2.c2 END), COUNT(((t2.c0) BETWEEN (t2.c0) AND (t2.c2))) COLLATE BINARY FROM t2 WHERE (CASE (x'' IN ())  WHEN (((''))<>((x''))) THEN ((((NULL)OR('-698311949')))OR(NULL)) END) GROUP BY (((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c0)) IN (t2.c1)); -- 0ms;
SELECT (((t2.c3, t2.c63, t2.c2)) NOT BETWEEN ((t2.c63, t2.c2, t2.c63)) AND ((t2.c0, t2.c4, t2.c1))) COLLATE BINARY FROM t2 GROUP BY (((((t2.c0 IN ()))AND(load_extension(t2.c3))))AND(NULL)) HAVING ((((x'ac69') BETWEEN (t2.c1) AND (t2.c63))) BETWEEN (CAST(t2.c0 AS TEXT)) AND (((t2.c2)+(NULL)))) LIMIT 1267808884 OFFSET 154706656;SELECT ALL LIKE(CASE WHEN t2.c63 THEN t2.c4 END, (((t2.c0))=((t2.c1)))) FROM t2 WHERE ((NULLIF(DISTINCT 0.6616563294966804, 0xffffffffaa9b74c7) IN (((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT UNLIKELY(((t2.c2) IS TRUE)) FROM t2 WHERE (x'') ORDER BY (HEX(t2.c3) IN ()) LIMIT -1379045323 OFFSET 971345194; -- 0ms;
SELECT DISTINCT ((((t2.c2) NOT NULL))>=(HEX(t2.c4))), ((('') BETWEEN (t2.c63) AND (t2.c4)) IN ((~ (t2.c4)))), TRIM(COUNT(*)) FROM t2; -- 0ms;
SELECT DISTINCT SUM((+ (t2.c1))) FROM t2; -- 0ms;
SELECT ALL ((((t2.c63)|(t2.c1))) NOT BETWEEN (AVG('P[')) AND (MIN(t2.c1))) FROM t2 WHERE (((0.7918350014076955 COLLATE BINARY)<((NOT (x''))))); -- 0ms;
SELECT DISTINCT (((CASE x'3b5242e0'  WHEN t2.c2 THEN t2.c63 ELSE t2.c3 END))!=((((((t2.c1)AND(t2.c0)))AND(t2.c0))))) FROM t2 LIMIT 1572382341 OFFSET 0; -- 0ms;
SELECT DISTINCT ((((t2.c0)>(t2.c3))) NOT BETWEEN (x'd578') AND (UPPER(DISTINCT t2.c4))) FROM t2 WHERE ((- ((('653379489') NOT BETWEEN (-8.59522166E8) AND ('c*uY}B?'))))) LIMIT 1250691884 OFFSET 1668095733; -- 0ms;
SELECT DISTINCT ((t2.c2) BETWEEN (t2.c63) AND (t2.c2)) COLLATE RTRIM FROM t2 WHERE ((((- (NULL))) BETWEEN ((~ ('()'))) AND ((((1.0062117E7)) NOT BETWEEN (('堐ME#6.P')) AND ((NULL)))))); -- 0ms;
SELECT t2.c63, LENGTH(CAST(t2.c4 AS INTEGER)), ((((NULL)OR(CAST(t2.c4 AS BLOB))))AND(CASE WHEN t2.c3 THEN t2.c63 WHEN t2.c2 THEN t2.c2 WHEN t2.c63 THEN t2.c0 ELSE t2.c2 END)) FROM t2; -- 1ms;
SELECT ALL (((((t2.c3)) NOT BETWEEN ((t2.c63)) AND ((t2.c2))))LIKE(((t2.c2)*(t2.c2)))), '-1885723412', SUM(CAST(t2.c2 AS TEXT)) OVER () FROM t2 WHERE (json_array_length(((0.8605008001541958) NOT NULL))); -- 0ms;
SELECT (((((+ ('RR/W')))OR(((t2.c3)AND(t2.c63)))))OR(((t2.c63) BETWEEN (t2.c0) AND (t2.c0)))) FROM t2; -- 0ms;
SELECT DISTINCT CASE WHEN x'6e34' COLLATE BINARY THEN CASE t2.c1  WHEN t2.c4 THEN t2.c4 WHEN '~1' THEN t2.c2 WHEN t2.c1 THEN t2.c1 ELSE 1280872655 END END FROM t2 WHERE (((CAST('c<z,' AS TEXT)) BETWEEN (CASE NULL  WHEN -1942220324 THEN 0xffffffffa33bcb23 END) AND (((((0.7635562249379031)OR(x'8ff957ee')))OR('5+'))))); -- 0ms;
SELECT '*r' FROM t2 WHERE (NULL COLLATE RTRIM) LIMIT -88849541 OFFSET -876441447; -- 0ms;
SELECT ALL ((((((t2.c4)<<(t2.c4)))OR(CAST(t2.c0 AS BLOB))))AND(COUNT(t2.c0))), t2.c63, ((((CASE WHEN t2.c63 THEN t2.c1 ELSE t2.c2 END)AND(AVG(t2.c4))))OR(((t2.c3) BETWEEN (t2.c4) AND (t2.c1)))) FROM t2; -- 0ms;
SELECT DISTINCT CASE ((t2.c63)-(t2.c4))  WHEN ((t2.c3)OR(t2.c0)) THEN NULL END FROM t2; -- 0ms;
SELECT ALL ((((t2.c2)IS(t2.c4)))GLOB(LTRIM(t2.c63))) FROM t2 WHERE (((0.5458691836924151 IN ()) IN ())) LIMIT -914154359; -- 0ms;
SELECT ALL '-1073170042' FROM t2 WHERE (((('1934128572' IN ()))==(('' IN (NULL, NULL))))); -- 0ms;
SELECT t2.c2, CASE (t2.c4 IN (t2.c4))  WHEN ((((t2.c1)AND(t2.c4)))OR(t2.c4)) THEN ((t2.c2)GLOB(t2.c0)) WHEN (t2.c0 IN (NULL)) THEN ((t2.c2)/(t2.c3)) WHEN (~ (t2.c4)) THEN t2.c4 END, CASE WHEN COUNT(t2.c3) THEN ((t2.c2)-(t2.c1)) END FROM t2 WHERE ('-657405572'); -- 1ms;
SELECT ALL NTILE(((t2.c0 COLLATE RTRIM)-(((t2.c1) NOT NULL)))) OVER () FROM t2 WHERE (json_valid((+ (NULL)))); -- 0ms;
SELECT DISTINCT ('-1690777284' IN ()) COLLATE RTRIM, x'', GROUP_CONCAT(((t2.c2) BETWEEN (t2.c63) AND (t2.c1))) OVER () FROM t2 WHERE (CASE WHEN (('-1564473244')==('M>hB')) THEN (('0.20214935061017603')OR(1.835794577E9)) ELSE ((('84', x'', 0X7bea22cc))>((x'', NULL, 689336113))) END) GROUP BY CASE ((((((((x'')AND(t2.c1)))AND(t2.c63)))OR(NULL)))OR(t2.c63))  WHEN CASE t2.c2  WHEN t2.c2 THEN t2.c1 END THEN CAST(t2.c3 AS TEXT) WHEN NULL THEN x'1f40' WHEN t2.c2 COLLATE BINARY THEN '0.0023407067373952817' END, (((t2.c4) BETWEEN (t2.c3) AND (t2.c2)) IN ()), ((((t2.c63)-(t2.c63)))%(LOWER(t2.c0))) LIMIT 670613170; -- 0ms;
SELECT DISTINCT ((t2.c3)AND(t2.c0)) COLLATE RTRIM COLLATE RTRIM FROM t2 WHERE (((('1959362467', x'', NULL)) BETWEEN ((((NULL) NOTNULL), 'swM둋', HEX(x''))) AND ((('0.9028431432986287' IN ()), (((('0.46553175089824694')OR(NULL)))AND('')), NULL COLLATE RTRIM)))) ORDER BY (((((((((((t2.c4)) NOT BETWEEN ((t2.c0)) AND ((t2.c3))))OR(((((t2.c63)OR(t2.c63)))AND(t2.c2)))))AND(((((((((t2.c0)OR(t2.c4)))OR(NULL)))AND(t2.c63)))OR(t2.c63)))))OR(((t2.c1)LIKE(t2.c2)))))OR((((t2.c1, t2.c3, t2.c3))<>((t2.c3, t2.c4, t2.c63))))); -- 0ms;
SELECT DISTINCT ((((t2.c2)IS(t2.c63))) BETWEEN (CASE WHEN t2.c3 THEN t2.c2 WHEN 1918411485 THEN t2.c4 WHEN NULL THEN t2.c3 ELSE t2.c0 END) AND (t2.c1 COLLATE RTRIM)) FROM t2 ORDER BY CASE (((t2.c63, t2.c0, t2.c63, t2.c0, t2.c63)) NOT BETWEEN ((t2.c0, t2.c3, t2.c1, t2.c4, t2.c63)) AND ((t2.c4, t2.c2, '?뽇', t2.c3, t2.c63)))  WHEN (NOT (t2.c2)) THEN t2.c4 COLLATE NOCASE WHEN ((t2.c1)GLOB(0.8200330138683721)) THEN ((((t2.c1)AND(t2.c3)))OR(t2.c0)) WHEN CAST(t2.c2 AS NUMERIC) THEN ((t2.c3) ISNULL) WHEN 891587573 THEN ((t2.c0)||(t2.c0)) WHEN CAST(t2.c2 AS TEXT) THEN (t2.c1 IN ()) END ASC  NULLS FIRST, t2.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT (- (t2.c1 COLLATE BINARY)) FROM t2 WHERE ((((x'' IN ()))IS NOT(((x'') BETWEEN ('-1021741752') AND (x''))))); -- 0ms;
SELECT DISTINCT 1570245064 FROM t2 WHERE (CAST((('x}V*p<') IS TRUE) AS BLOB)) LIMIT -1659132028; -- 0ms;
SELECT ALL (CASE t2.c2  WHEN t2.c4 THEN t2.c0 WHEN t2.c1 THEN t2.c63 WHEN t2.c2 THEN t2.c1 END IN ()), (((t2.c2 COLLATE BINARY))=((CASE WHEN t2.c2 THEN t2.c1 ELSE t2.c63 END))), CASE NULL  WHEN (~ (t2.c1)) THEN (t2.c2 IN (t2.c1, t2.c63)) END FROM t2; -- 0ms;
SELECT CASE MAX(-6.57405572E8)  WHEN CAST(t2.c1 AS REAL) THEN IFNULL(t2.c63, t2.c3) END FROM t2; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t2 WHERE (((SQLITE_COMPILEOPTION_USED(0.07160188878293894)) IS TRUE)); -- 0ms;
SELECT (NOT (ROUND(0.46529280821738817, t2.c63))) FROM t2 WHERE ('') ORDER BY TYPEOF(DISTINCT ((t2.c1)OR(t2.c3))); -- 0ms;
SELECT ALL COUNT(*) FROM t2 GROUP BY t2.c3; -- 0ms;
SELECT DISTINCT CASE WHEN t2.c1 THEN t2.c3 COLLATE NOCASE ELSE t2.c3 COLLATE RTRIM END FROM t2 GROUP BY (t2.c63 IN (((t2.c2) ISNULL), (t2.c0 IN ()))), (((((t2.c0, 0.7360433445209559, t2.c0)) BETWEEN ((t2.c0, t2.c3, t2.c63)) AND ((NULL, t2.c0, t2.c0))))>=(t2.c63)), ((((((((((((t2.c0)AND(t2.c0)))AND(t2.c63)))AND(t2.c2)))AND(t2.c4)))AND((~ (t2.c2)))))OR(((t2.c2)LIKE(t2.c4)))); -- 0ms;
SELECT DISTINCT (MIN(t2.c4) IN (CAST(t2.c3 AS NUMERIC))) FROM t2 GROUP BY '0㑻d_'; -- 0ms;
SELECT DISTINCT t2.c2, LOWER((((NULL)) BETWEEN ((t2.c1)) AND ((0.21376951775702946)))), (((('3An') IS TRUE))>>(CAST(t2.c1 AS TEXT))) FROM t2 WHERE (CAST('TvM弍.⤔3t ' COLLATE BINARY AS TEXT)) LIMIT 1657935973 OFFSET -618506367; -- 0ms;
SELECT CAST((((t2.c63, t2.c3, t2.c0)) NOT BETWEEN ((t2.c4, t2.c3, t2.c2)) AND (('1622652953', t2.c2, t2.c4))) AS REAL) FROM t2; -- 0ms;
SELECT DISTINCT ((((t2.c4)||(t2.c63)))=(CASE WHEN t2.c2 THEN t2.c3 WHEN t2.c0 THEN NULL WHEN t2.c3 THEN t2.c63 END)) FROM t2 LIMIT -232680789; -- 0ms;
SELECT DISTINCT (NOT ((- (t2.c0)))) FROM t2 WHERE ((((((('-914622256') ISNULL))OR((NOT (NULL)))))OR(((x'8308') IS TRUE)))) ORDER BY '1677397371'  NULLS FIRST, (((t2.c3 IN (t2.c3, t2.c2)))>>(json(t2.c2)))  NULLS FIRST; -- 0ms;
SELECT ALL LIKELY(MIN(x'')) FROM t2 WHERE (((((CASE '-1748857391'  WHEN -1.728658891E9 THEN NULL END)OR(((x'') NOTNULL))))AND('-1733447742' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((((t2.c4) BETWEEN (t2.c0) AND (t2.c1)))OR((t2.c63 IN (t2.c3)))))OR(((t2.c0)%(t2.c4)))) FROM t2 WHERE (0.10434916216587597); -- 0ms;
SELECT DISTINCT ((((t2.c3)AND(((((((((t2.c63)OR(t2.c1)))OR(t2.c2)))AND(t2.c63)))OR(t2.c63)))))AND(CASE WHEN t2.c4 THEN t2.c63 WHEN t2.c3 THEN t2.c63 WHEN t2.c1 THEN t2.c0 ELSE t2.c4 END)), FIRST_VALUE((+ (t2.c2))) OVER (), ('' IN ()) FROM t2 WHERE ((~ (((0.19842847844916456) NOT NULL)))) LIMIT 83071438 OFFSET 1975417582; -- 0ms;
SELECT DISTINCT ((((((t2.c63)||(t2.c63)))OR(((((t2.c0)AND(t2.c4)))AND(x'')))))OR(CASE WHEN 0.30359012273465924 THEN t2.c4 ELSE t2.c63 END)) FROM t2; -- 1ms;
SELECT DISTINCT (((CASE NULL  WHEN t2.c1 THEN t2.c1 WHEN t2.c3 THEN t2.c0 WHEN t2.c2 THEN t2.c63 WHEN t2.c63 THEN t2.c3 WHEN t2.c0 THEN t2.c0 ELSE 1.570245064E9 END))!=((((t2.c1) BETWEEN (t2.c2) AND (t2.c63))))), ((AVG(0.5868983158043231)) IS FALSE), (((('Kyohk')OR(t2.c0 COLLATE NOCASE)))OR(t2.c3 COLLATE BINARY)) FROM t2 WHERE ((CAST(NULL AS NUMERIC) IN ())); -- 0ms;
SELECT DISTINCT CAST(((t2.c2) NOT BETWEEN (t2.c2) AND (t2.c0)) AS REAL) FROM t2 WHERE (((0xfffffffff2285b69) BETWEEN (0xffffffffe58e06af) AND (1946471726)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (~ (((t2.c1) IS FALSE))) FROM t2; -- 0ms;
SELECT (((((t2.c63 IN (t2.c63)))OR(((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c63)))))AND(SQLITE_COMPILEOPTION_USED(t2.c63))) FROM t2 WHERE ((((('1698381696' IN ('%iⱑW'))))<((((x'')-(-1.061620553E9)))))); -- 0ms;
SELECT ALL COUNT((NOT (t2.c3))), ((((t2.c0)) NOT BETWEEN ((t2.c4)) AND ((t2.c3))) IN (MAX(t2.c3))), CAST(((t2.c2) BETWEEN (t2.c1) AND (t2.c3)) AS REAL) FROM t2 WHERE (CAST(CASE WHEN x'c3df' THEN 0.2625024612373993 END AS INTEGER)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT('1267808884') FROM t2 WHERE ((((((((((((((((('-762955890')AND(0.165589321992607)))OR(0.7446335020615579)))AND('-1972748705')))OR(NULL)))OR(GLOB(x'47d2', NULL))))AND((((('')AND(0.0514035034896132)))AND(x'')))))OR((('') IS FALSE))))AND(((0.837928851871165) ISNULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN LOWER(-658453311) THEN CASE NULL  WHEN t2.c63 THEN t2.c4 END WHEN ((t2.c0)+(NULL)) THEN (0.08679771553097171 IN ()) WHEN CASE t2.c1  WHEN t2.c3 THEN t2.c0 END THEN CASE t2.c4  WHEN t2.c2 THEN t2.c63 ELSE t2.c1 END ELSE ((t2.c0) NOT NULL) END FROM t2 ORDER BY ((t2.c2) NOT NULL) COLLATE BINARY ASC; -- 0ms;
SELECT DISTINCT (0.020961233828006076 IN (t2.c0)), NTH_VALUE(LOWER(((t2.c4)|(t2.c1))), (((t2.c2 IN ()))==((NOT (t2.c63))))) OVER (), CAST(((t2.c63) BETWEEN (t2.c4) AND (t2.c0)) AS NUMERIC) FROM t2;SELECT ALL (- ('Hjh')), (((((~ ('*!')))AND(TYPEOF(t2.c0))))AND(t2.c3 COLLATE NOCASE)), CAST(((x'3ce0')GLOB(t2.c2)) AS BLOB) FROM t2 WHERE ((((('2060847333')AND(-1.659132028E9))) IS TRUE)); -- 0ms;
SELECT ALL LAST_VALUE(json_patch(((((((((t2.c63)OR(t2.c4)))OR(t2.c4)))OR(t2.c1)))AND(t2.c1)), ((t2.c63) NOT BETWEEN (0.22298665278831797) AND (t2.c63)))) OVER ( ROWS  UNBOUNDED PRECEDING), t2.c63, ((((((((t2.c3)OR(t2.c63)))AND(t2.c1)))AND(((((((((x'')OR(0Xfffffffffe941f7e)))AND(t2.c63)))AND(t2.c4)))AND(t2.c3)))))AND((('1508077087')>>(t2.c1)))) FROM t2 WHERE (((COALESCE(DISTINCT '', x'acaf', x'', '', NULL, 0.29212617337821467))<=(CAST(x'' AS BLOB)))); -- 0ms;
SELECT DISTINCT TOTAL(t2.c0) OVER () FROM t2; -- 0ms;
SELECT DISTINCT 'FALSE' FROM t2 WHERE (UNLIKELY(DISTINCT (NULL IN ()))); -- 0ms;
SELECT DISTINCT t2.c63 FROM t2; -- 0ms;
SELECT ((t2.c4 COLLATE BINARY)==(x'')) FROM t2 WHERE (((((NULL) BETWEEN (NULL) AND (NULL)))>=(((((x'')OR(0.11963086210954232)))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((t2.c4)OR(CAST(t2.c2 AS INTEGER))) FROM t2; -- 0ms;
SELECT DISTINCT CASE ((t2.c63) NOT BETWEEN (t2.c2) AND (t2.c63))  WHEN 0.8914828441607986 THEN ((NULL) NOT BETWEEN (t2.c2) AND (t2.c1)) ELSE ((((((((t2.c1)AND(t2.c1)))AND(t2.c0)))AND(t2.c2)))AND(t2.c63)) END FROM t2 WHERE (((CAST(0.6064804038560571 AS REAL))-((((x'')) BETWEEN ((x'')) AND (('')))))); -- 1ms;
SELECT DISTINCT COALESCE(DISTINCT t2.c63 COLLATE BINARY, ((0.3964644605370262) BETWEEN (t2.c3) AND (t2.c1))) FROM t2; -- 0ms;
SELECT DISTINCT (NOT (((t2.c63)-(t2.c2)))) FROM t2 WHERE (((((0.06555014896824596)AND(x'03ae')))AND('-443677009')) COLLATE BINARY); -- 0ms;
SELECT (NOT (t2.c63)) FROM t2 WHERE ((((0x3878fd60 IN (x'59c6')))IS NOT((((((((('280609853')AND('ap')))OR(0.8897306624452993)))AND('')))OR(NULL))))); -- 0ms;
SELECT DISTINCT (((('2037358805') NOT NULL))>((~ (t2.c0)))), MIN(x''), LOWER(DISTINCT t2.c3) COLLATE RTRIM FROM t2 WHERE ((CASE WHEN 'et.\rto' THEN 0.696945639805655 ELSE 0.7703456825932588 END IN ())) GROUP BY CAST(((t2.c2) BETWEEN (t2.c3) AND (x'')) AS INTEGER) HAVING MAX(SUM((+ (t2.c2))));SELECT ALL (~ (((0.262465446945616)|(t2.c0)))), ((((((t2.c0)>=(t2.c4)))OR(((0.9985930572342262)OR(t2.c3)))))AND(0.3423044955630373)), 0.08454814533389476, t2.c1, '0.06507946828746713' FROM t2 WHERE (((((x'')) NOT BETWEEN ((0.27316979001675235)) AND (('-1641981352'))) IN ((x'' IN ())))); -- 0ms;
SELECT DISTINCT ((((((((UPPER(t2.c2))AND(t2.c3)))OR(CAST(t2.c63 AS TEXT))))OR(CAST(t2.c0 AS BLOB))))OR(CAST(t2.c63 AS INTEGER))) FROM t2 WHERE (((('A[vImFPW', x'', NULL)) NOT BETWEEN (((~ (0.03992815750606249)), CAST(1452302995 AS TEXT), '0.6193269371323159')) AND (((('438338840')%(NULL)), CAST(NULL AS TEXT), (+ (0.9141344565350458)))))); -- 0ms;
SELECT ((CASE t2.c1  WHEN t2.c63 THEN t2.c3 ELSE t2.c3 END) NOTNULL), CASE WHEN TOTAL_CHANGES() THEN CAST(t2.c3 AS REAL) WHEN t2.c3 COLLATE BINARY THEN SUM(t2.c2) WHEN (((t2.c4, t2.c2, t2.c0)) BETWEEN ((t2.c4, t2.c1, t2.c63)) AND ((t2.c3, NULL, t2.c2))) THEN t2.c2 COLLATE NOCASE WHEN ((('0.6709800817740673')) BETWEEN ((t2.c1)) AND ((t2.c1))) THEN t2.c63 COLLATE RTRIM WHEN ((((t2.c0)OR(t2.c1)))OR(t2.c0)) THEN ((t2.c63) IS TRUE) ELSE t2.c0 END, (((t2.c1)) NOT BETWEEN (((('') BETWEEN (t2.c2) AND (t2.c2)))) AND ((1.835794577E9))), ((((((t2.c4)OR(t2.c4)))OR(t2.c1)))AND((('-1210047223')<<(t2.c3)))), (((((t2.c63)GLOB(0.9486517254144436))))<((t2.c1))) FROM t2; -- 0ms;
SELECT ((MIN(t2.c3))!=(((((x'')OR('Pn\n')))AND(t2.c2)))), CASE t2.c2 COLLATE BINARY  WHEN ((t2.c3)<<(t2.c3)) THEN CASE t2.c63  WHEN t2.c63 THEN t2.c1 END END, ((t2.c63) IS FALSE) FROM t2 WHERE ((NOT (-7.49796222E8))); -- 0ms;
SELECT DISTINCT ((((((((t2.c3 COLLATE RTRIM)AND(((('-96711500', t2.c1, t2.c1)) NOT BETWEEN ((t2.c4, t2.c1, t2.c4)) AND ((t2.c4, '1542429876', NULL))))))OR(CASE t2.c63  WHEN t2.c2 THEN t2.c4 WHEN t2.c4 THEN t2.c63 WHEN t2.c3 THEN t2.c1 END)))AND(((t2.c0) IS TRUE))))AND('橧iO9' COLLATE NOCASE)) FROM t2; -- 0ms;
SELECT ALL COUNT(((t2.c4) NOT BETWEEN (t2.c63) AND (t2.c63))) OVER () FROM t2; -- 0ms;
SELECT DISTINCT CAST(((t2.c1) NOTNULL) AS INTEGER), ((((t2.c1) IS FALSE))IS((NOT (t2.c0)))), ((t2.c0)>((t2.c2 IN (t2.c2, -1770229361)))) FROM t2 WHERE ((((((((('')OR('1e')))AND(NULL)))AND(((0.0923721869593338) IS FALSE))))OR((('Cn') NOT BETWEEN ('1481272977') AND (x''))))); -- 1ms;
SELECT (((SUM(t2.c4)))>((MIN(t2.c3)))), ((((t2.c1)OR(t2.c1))) NOTNULL), ((t2.c3) IS FALSE) COLLATE BINARY FROM t2 WHERE (((((('{%')<=(x''))))==((((-6.27693224E8) NOT NULL))))) LIMIT 740599188 OFFSET 1913731099; -- 0ms;
SELECT ALL t2.c4, x'', MIN(((t2.c63)/(t2.c0))) FROM t2; -- 0ms;
SELECT DISTINCT TOTAL('488990161') OVER () FROM t2 WHERE ((((('*?') IS TRUE)) BETWEEN ((('0.019113517328620322') NOTNULL)) AND (((0.13147238735625644) NOTNULL)))) LIMIT 1983947875 OFFSET 697675965; -- 0ms;
SELECT ALL CASE WHEN TOTAL(t2.c2) THEN ((((t2.c1)OR(t2.c63)))OR(t2.c1)) WHEN (('-1643771916') BETWEEN (t2.c63) AND (t2.c1)) THEN (NOT (t2.c3)) WHEN ((((t2.c0)AND(t2.c1)))AND(t2.c3)) THEN ((((t2.c63)OR(t2.c63)))AND(t2.c1)) END FROM t2 WHERE ((((x'')<=('-1312621971')) IN ())); -- 0ms;
