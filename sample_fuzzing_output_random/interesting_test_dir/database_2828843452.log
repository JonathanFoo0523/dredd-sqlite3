-- Time: 2024/06/07 06:30:06
-- Database: database52
-- Database version: 3.40.0
-- seed value: 2828843452
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 18ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x''); -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1885037528,8');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.6846476621214269), (0.44063923713959385), ('Z5'); -- 2ms;
VACUUM; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.44063923713959385); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (NULL), ('1398163511'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.41447730379738934), (0.28496852326006916), ('*t'); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('1398163511'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0='97', c0=x''; -- 2ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 544083594); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (''); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0, c0)=(NULL, x'6721') WHERE (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
UPDATE OR ABORT vt0 SET c0='' WHERE ((CAST(vt0.c0 AS TEXT)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(0.13742090542358965))) AND (((vt0.c0)==(vt0.c0)))); -- 0ms;
PRAGMA recursive_triggers = true; -- 0ms;
UPDATE vt0 SET c0='z5', c0='1015552495'; -- 8ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.22902824817669565); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x'9d2a'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1885037528'); -- 8ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=NULL, c0=-1855983162, c0=2124308120; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.8758767925032811); -- 3ms;
PRAGMA short_column_names = true; -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
UPDATE OR FAIL vt0 SET c0='1015552495' WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0)); -- 6ms;
PRAGMA wal_autocheckpoint = -4094437262226122296; -- 0ms;
END; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0X53564837); -- 0ms;
UPDATE vt0 SET c0=309760822; -- 1ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1739734913);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1122910028); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE main; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='Z5', c0='㰢2w/䠷}l'; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0, c0, c0)=(0.7886775726981402, NULL, '1015552495', 'Jf', 0.1072997752556718); -- 0ms;
END; -- 8ms;
PRAGMA main.busy_timeout = 0; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c0)=(0.13742090542358965); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (-1855983162); -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x'5ec1'); -- 1ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2105448198); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '17110'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1398163511,7');\n; -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (1.739734913E9); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.032360736969388904), (x'80d1'), (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62235'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE vt0; -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('309760822'); -- 0ms;
UPDATE rt0 SET (c1)=(0.41447730379738934) WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ()); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('1888373739'), (((CASE NULL  WHEN x'3070' THEN 0.07172685188414996 WHEN NULL THEN NULL WHEN x'4aa6c1d5' THEN '1739734913' ELSE x'' END)>>(x''))), ('dSp,'); -- 6ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 8ms;
UPDATE vt0 SET (c0)=('1015552495'); -- 1ms;
UPDATE OR REPLACE vt0 SET c0='nM{c7NaNcg*', c0='1739734913', c0=NULL; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1 UNINDEXED, c2 UNINDEXED); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.7413307233399095, x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
VACUUM; -- 3ms;
INSERT OR IGNORE INTO vt0 VALUES ('Y)'), ('-1790286790'), (x''); -- 1ms;
END; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1, c2) VALUES (1.355562018E9, 0.032360736969388904), ('M', 0.0874560893078059), (x'', 103266838); -- 6ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=625415943,14');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
PRAGMA legacy_file_format; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '24705'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 20ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('1348608662'); -- 0ms;
REINDEX; -- 8ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 REAL , c1 REAL , c2 BLOB ); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
REINDEX; -- 10ms;
PRAGMA integrity_check; -- 0ms;
UPDATE OR REPLACE vt1 SET c2=0.4626653866921103, c2=NULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
PRAGMA temp.mmap_size = 1981198435038722729; -- 0ms;
INSERT OR REPLACE INTO vt1(c2) VALUES (x''); -- 0ms;
ANALYZE main; -- 11ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (~ (CAST(t0.c0 AS TEXT))) FROM vt0, vt1 GROUP BY ((x'')&(((NULL) IS TRUE)));SELECT DISTINCT CASE WHEN t0.c0 THEN AVG(t0.c0) END, ((((vt1.c2)LIKE(vt0.c0))) IS FALSE), vt0.c0, DATE(((t0.c2) ISNULL), MAX(t0.c1, t0.c1, t0.c1, ''), vt1.c0 COLLATE NOCASE, CAST(t0.c1 AS NUMERIC), MAX(t0.c0)), ((((t0.c0))>((vt1.c2))) IN (((vt0.c0) NOTNULL))) FROM t0 WHERE (CAST((x'' IN ()) AS NUMERIC));SELECT DISTINCT (t0.c0 IN (t0.c1)) COLLATE BINARY FROM t0, vt1, vt0 WHERE (('103266838' IN ())); -- 0ms;
SELECT t0.c2 FROM vt0, vt1 WHERE ((((((('-338578525') BETWEEN (0.31133502426529625) AND (0.8758767925032811)))AND(CASE WHEN '1703358773' THEN 0.09238542067709854 ELSE 0.8175316570491388 END)))AND((((x''))<=(('u㘇'))))));SELECT DISTINCT '97' FROM t0 WHERE ((- (IFNULL(DISTINCT NULL, NULL)))); -- 0ms;
SELECT LEAD(CAST(t0.c1 COLLATE RTRIM AS INTEGER), ((+ (t0.c0)) IN ()), CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)) OVER () FROM vt1, t0, vt0 WHERE (((CASE WHEN x'' THEN -1375299460 ELSE '*t' END) IS FALSE)); -- 1ms;
SELECT ALL CAST(CAST(vt0.c0 AS REAL) AS REAL), (+ (t0.c2)) COLLATE NOCASE, SUM((t0.c0 IN ())) FROM vt0, vt1 WHERE ((((('0.8758767925032811') IS FALSE)) NOTNULL));SELECT DISTINCT AVG((+ (vt1.c1))) OVER () FROM vt0 WHERE (((((NULL) NOTNULL)) BETWEEN (CASE '-1855983162'  WHEN x'c1b2' THEN x'' END) AND ((- ('0.13742090542358965')))));SELECT DISTINCT vt1.c0, MIN((((vt1.c2, t0.c2, t0.c0))<((t0.c0, vt1.c2, vt0.c0)))), ((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((t0.c0))) IN ()) FROM t0, vt0 WHERE (CASE ((x'eb1b') IS FALSE)  WHEN NULL THEN CASE 0.22902824817669565  WHEN 'f{' THEN '1888373739' END WHEN (~ (NULL)) THEN CASE NULL  WHEN -1885037528 THEN NULL END WHEN ((NULL)IS NOT(-1924543386)) THEN LOWER(DISTINCT 0.48400046321671475) ELSE ((NULL) NOT BETWEEN (0.20982713126065244) AND (NULL)) END);SELECT DISTINCT t0.c1, SUM(TYPEOF(vt1.c0)) OVER (), CASE WHEN ('-1324879781' IN (-1.885037528E9, vt1.c1)) THEN CASE WHEN t0.c2 THEN t0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN '1888373739' ELSE vt1.c1 END ELSE CAST(t0.c0 AS BLOB) END FROM vt1, vt0 WHERE (((((((((((((CASE '1888373739'  WHEN x'' THEN NULL WHEN x'' THEN x'0e4d' WHEN '488060423' THEN 0.3825134686336945 ELSE '1585036339' END)OR(CAST(x'' AS BLOB))))OR((('')/(NULL)))))AND(((NULL)||('-309493554')))))OR(CAST(NULL AS INTEGER))))OR((+ (NULL)))))AND(CAST('-1855983162' AS TEXT))));SELECT ALL (((+ (vt1.c0))) BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (CAST(t0.c0 AS REAL))) FROM vt1, t0, vt0 WHERE (((CAST(x'' AS INTEGER))==(x''))) ORDER BY ((((CASE WHEN vt1.c0 THEN t0.c1 END)AND(vt1.c2 COLLATE RTRIM)))OR((((vt1.c2, t0.c1, vt1.c1))<=((t0.c1, t0.c2, t0.c1))))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((x'3155')IS NOT(vt1.c2))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0)-(t0.c2)))) FROM vt1, vt0 WHERE (((NULL COLLATE BINARY) ISNULL));SELECT DISTINCT t0.c2, CAST(vt1.c2 AS NUMERIC) COLLATE BINARY, LAG(t0.c2 COLLATE BINARY, (+ (t0.c1)) COLLATE RTRIM, t0.c1) OVER () FROM t0 WHERE (TYPEOF(NULL));SELECT ALL MIN((+ (t0.c0))) FROM vt0, vt1;SELECT ALL 0Xffffffffebd1b3a3, ((IFNULL(0.7598025421917233, t0.c2)) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(vt0.c0)) AND (0Xffffffff99e3d671)), ((AVG(vt1.c2)) BETWEEN (IFNULL(DISTINCT vt1.c0, t0.c0)) AND (t0.c0 COLLATE NOCASE)) FROM vt1, t0, vt0 WHERE (-1885037528); -- 0ms;
SELECT DISTINCT (((t0.c1 IN ())) BETWEEN (CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END) AND (MAX(t0.c2))), (('') NOT NULL) COLLATE BINARY, TRIM(DISTINCT (~ (t0.c0))) FROM vt1, t0 WHERE (((((NULL) NOT NULL)) IS TRUE)) GROUP BY ((((t0.c1)LIKE(vt1.c2)))GLOB(((vt1.c0) NOTNULL))) HAVING CAST('-2067141567' AS REAL) COLLATE BINARY; -- 0ms;
SELECT DISTINCT t0.c0 COLLATE NOCASE FROM vt0 WHERE ((((('1682216474') NOT NULL))*(CASE '1355562018'  WHEN NULL THEN 0.035073775799429385 WHEN 1.03266838E8 THEN NULL WHEN 1889398093 THEN x'' END)));SELECT (json_array(vt1.c2, t0.c2, t0.c2, t0.c2) IN ()), (((+ (NULL)))LIKE('BMZzB' COLLATE NOCASE)), AVG(vt1.c0) FROM vt1, t0, vt0; -- 0ms;
SELECT DISTINCT MIN(CAST(vt1.c2 AS REAL)) FROM vt1, t0, vt0; -- 0ms;
SELECT DISTINCT ((t0.c0)>>(vt0.c0)), DENSE_RANK() OVER ( ROWS t0.c0 PRECEDING EXCLUDE GROUP), vt0.c0 FROM t0;SELECT DISTINCT SUM(((vt0.c0) IS TRUE)) FILTER(WHERE ((((vt1.c2)OR(vt1.c1)))AND(vt1.c2)) COLLATE RTRIM) OVER () FROM t0, vt1 WHERE (LIKELIHOOD(DISTINCT (-250645571 IN (-338578525)), 0.2742594802712439));SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((vt1.c0))), ((NULLIF(t0.c0, t0.c1)) IS FALSE), CASE WHEN (x'28d4bce6811b' IN (vt1.c0)) THEN CAST(0.20441051594565995 AS REAL) END FROM t0, vt0;SELECT vt1.c2 COLLATE NOCASE FROM vt1, t0 WHERE ((NOT (CAST(0.8813632680574165 AS TEXT)))); -- 1ms;
SELECT ALL (((t0.c0)AND(x'')) IN ()) FROM vt0, vt1 WHERE (((((('\㵼Xg#M')) NOT BETWEEN (('m⊖XihgtS⠾')) AND ((NULL)))) IS TRUE)) UNION SELECT ((((vt1.c2) NOTNULL))-((((t0.c1, t0.c1, '1015552495'))<((vt1.c2, t0.c2, vt1.c1))))) FROM vt0, vt1, t0; -- 0ms;
SELECT ALL (((('-1924543386' IN ()), CASE WHEN vt1.c0 THEN 'nYeao*BY' END, 'bmzzb'))>((((vt0.c0) IS TRUE), ((vt1.c1) NOT BETWEEN (t0.c2) AND (vt1.c2)), (- (''))))) FROM t0, vt0, vt1 WHERE (x'bec4'); -- 0ms;
SELECT CUME_DIST() OVER () FROM vt0; -- 0ms;
SELECT ALL (((((vt1.c0)<(t0.c1))))==(((((t0.c1))<=(('m⊖xihgts⠾')))))), COUNT(IFNULL(DISTINCT 'aN庘d[\', t0.c0)) OVER (), x'' FROM t0, vt1 WHERE (IFNULL((NOT ('1937585852')), x'' COLLATE RTRIM)); -- 1ms;
SELECT IFNULL(((vt1.c0) IS FALSE), ((((vt1.c1)OR(vt0.c0)))OR(t0.c2))) FROM vt0, vt1 WHERE ((+ (((NULL) BETWEEN ('853281715') AND (0.4626653866921103))))) GROUP BY 0Xffffffffa9dd3487 HAVING (((- (x'249c')))!=((((t0.c1, t0.c2, vt1.c0)) BETWEEN ((vt1.c1, 979403061, NULL)) AND ((t0.c0, vt1.c0, t0.c1)))));SELECT ALL ((((t0.c1) NOT BETWEEN (vt1.c2) AND (t0.c0)))>(((t0.c0)<(vt1.c2)))), MAX(json_object(vt1.c0, t0.c1)), SUM((vt1.c0 IN (vt1.c2))) FROM vt0 NOT INDEXED, vt1;SELECT DISTINCT (+ (LOWER(vt1.c1))) FROM vt0, t0 WHERE ((((- (''))) ISNULL));SELECT DISTINCT (((rtreenode(t0.c1, t0.c0), (- (t0.c1)), ((NULL) NOT BETWEEN (vt1.c0) AND (NULL))))<((CAST(vt1.c0 AS TEXT), TOTAL(t0.c1), ((vt1.c1) IS TRUE)))), ((x'')GLOB('EsnYRC凷70')), (((vt1.c0)) NOT BETWEEN ((((vt1.c1)%(vt1.c0)))) AND (((vt1.c0 IN ())))), ((LIKELY(vt1.c1))IS NOT(((vt0.c0)<=(vt1.c1)))), (((t0.c0) ISNULL) IN ()) FROM t0 WHERE (((((((((IFNULL(DISTINCT '0.6846476621214269', 0.8813632680574165))AND((('-305540363') NOT NULL))))OR(CAST(NULL AS REAL))))OR((((x'', '-1713121679', x'6ca9'))<(('0.41447730379738934', NULL, x''))))))AND((((((((('977247976')OR(NULL)))AND(0X4d537425)))OR(0.44063923713959385)))OR('168116652')))));SELECT DISTINCT TOTAL(CAST(t0.c2 AS INTEGER)) OVER () FROM vt1, t0, vt0 WHERE (((((NULL) NOTNULL))GLOB((0.7717064872133207 IN ())))); -- 0ms;
SELECT TOTAL(CAST(vt1.c0 AS BLOB)) OVER () FROM vt0, t0;SELECT ((((((vt1.c0) NOT NULL))OR(TOTAL(t0.c2))))AND((- (vt1.c2)))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT json_patch((t0.c0 IN ()), CASE t0.c1  WHEN t0.c1 THEN vt1.c2 ELSE vt1.c0 END) FROM t0, vt1, vt0 WHERE (CAST(x'' AS BLOB) COLLATE BINARY); -- 0ms;
SELECT DISTINCT MAX(UPPER(DISTINCT t0.c1)) FROM t0; -- 0ms;
SELECT DISTINCT (((vt1.c0)/(t0.c0)) IN ()) FROM vt1, t0, vt0 WHERE (((((0.21058364337882374 IN ())))<((((((((((((((-1.924543386E9)OR('\㵼xg#m')))AND(NULL)))AND(x'')))OR(NULL)))OR(-1127840527)))AND(x'')))))); -- 0ms;
SELECT DISTINCT (((((vt1.c0)%(t0.c2))))<>((MAX(t0.c1)))) FROM vt0, vt1 WHERE (('撄胎X3쪗' COLLATE RTRIM IN ()));SELECT DISTINCT (((vt0.c0, vt1.c2, t0.c2)) NOT BETWEEN (((t0.c1 IN ()), NULL COLLATE NOCASE, 'NYEAO*BY')) AND ((GROUP_CONCAT(t0.c2), vt0.c0, ((t0.c2)AND(t0.c1))))), CASE WHEN (vt0.c0 IN ()) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN t0.c0 THEN COALESCE(t0.c2, t0.c1) WHEN AVG(vt1.c1) THEN LIKELY(DISTINCT vt1.c2) ELSE TRIM(t0.c1) END, (- (vt1.c1 COLLATE BINARY)) FROM t0, vt1, vt0 WHERE (((0.4626653866921103)||(((((((((0X623d0c4)AND(0.9129471052204802)))AND(-3.09493554E8)))AND(x'7e64')))AND('-0.0'))))) LIMIT -232495641; -- 0ms;
SELECT ALL ((vt1.c1) NOTNULL) COLLATE NOCASE FROM vt0, t0;SELECT DISTINCT CASE NULL  WHEN (((vt1.c0, 1628122451, NULL, t0.c2, NULL)) NOT BETWEEN ((t0.c1, vt1.c0, t0.c1, vt1.c2, t0.c2)) AND ((vt1.c2, t0.c0, vt0.c0, t0.c2, vt1.c2))) THEN (t0.c2 IN (vt1.c0)) END FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT ((511663502) ISNULL) FROM vt1, vt0, t0 WHERE ((((x'cd5e' IN ('-925887313'))) NOTNULL)); -- 0ms;
SELECT DISTINCT '625415943' FROM t0, vt0; -- 0ms;
SELECT DISTINCT vt1.c2, NULL, (((vt1.c1)|(t0.c2)) IN ()) FROM vt0, t0, vt1; -- 1ms;
SELECT DISTINCT ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (vt1.c0) AND ((~ (vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c1 IN ()))GLOB(((((vt0.c0)AND(t0.c1)))OR(t0.c1)))) FROM vt1, t0, vt0 WHERE (((CASE WHEN 441408244 THEN 1443594983 ELSE x'' END) ISNULL)); -- 0ms;
SELECT ((((t0.c2)IS(t0.c0))) IS TRUE), COUNT((((t0.c1))==((vt1.c1)))) OVER (), (((t0.c1))==((vt1.c0))) COLLATE NOCASE FROM vt1, t0, vt0 LIMIT 807897245 OFFSET 1011463691; -- 0ms;
SELECT ALL ((CASE vt1.c1  WHEN vt1.c2 THEN vt1.c0 END)<<(NULL)) FROM t0, vt1, vt0; -- 0ms;
SELECT ALL (((t0.c2)IS('0.035073775799429385')) IN (SUM(t0.c0))) FROM vt0, t0 WHERE (CAST(NULL AS NUMERIC) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN vt1.c2 THEN vt0.c0 END) FROM t0, vt0, vt1 WHERE (TYPEOF((- ('')))); -- 0ms;
SELECT SUM(((t0.c2)<('309760822'))) OVER ( ORDER BY (((t0.c1) ISNULL) IN (NULL, vt0.c0 COLLATE RTRIM))  NULLS LAST) FROM vt0, vt1;SELECT DISTINCT ((LIKELIHOOD(0.35555832306785573, 0.4413545924973582)) IS FALSE) FROM vt1, vt0, t0 ORDER BY ((((CAST(vt1.c0 AS BLOB))AND(0.4728087019623314)))OR((vt1.c0 IN (vt0.c0))))  NULLS FIRST, CAST(((((((((vt1.c2)AND(vt0.c0)))OR(vt1.c1)))OR(t0.c1)))OR(vt1.c2)) AS REAL) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (t0.c2 IN ()) COLLATE NOCASE, LENGTH(((((((((vt1.c0)AND(vt0.c0)))AND(x'')))OR(vt1.c2)))AND(vt1.c1))), (((((((vt0.c0)OR(vt1.c2)))AND(NULL))))<>((CAST(t0.c0 AS NUMERIC)))) FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN (((((vt1.c1, t0.c2, t0.c2))<((t0.c0, vt1.c2, t0.c2))))) AND ((((((t0.c1)OR(vt0.c0)))OR('1682216474'))))) FULL OUTER JOIN vt1 ON (((vt1.c2 IN ())) NOTNULL) WHERE ((((74327381)) BETWEEN (((0.0014219176235337194 IN (NULL)))) AND ((CASE '1628122451'  WHEN x'' THEN 0x1045c27c ELSE '' END))));SELECT DISTINCT (((t0.c1 IN (vt0.c0, 0.19154852441331827)))<<(CAST(t0.c2 AS TEXT))), ((COUNT(t0.c2))/(CAST(vt1.c0 AS INTEGER))), 1244964883 FROM t0, vt0 WHERE ((((((-3.05540363E8)) NOT BETWEEN ((1.297314853E9)) AND ((1.03266838E8)))) NOT BETWEEN (((((((((NULL)OR(0.5364540245701486)))AND(0.781785352425779)))AND('ﾚ*L!RL')))AND(-1.79028679E9))) AND (LIKELIHOOD(8.53281715E8, 0.1447552607623106))));SELECT x'324c', ((vt0.c0)<<(t0.c1)) COLLATE BINARY, TOTAL(((t0.c0)IS(vt1.c0))) OVER () FROM t0 INNER JOIN vt0 ON 0.9657491334044696 RIGHT OUTER JOIN vt1 ON (((NULL)>>(NULL)) IN ()) WHERE (((((('0.3825134686336945', '178215673', 'h+Ppu?P1')) NOT BETWEEN ((NULL, 0.6345830918259502, x'')) AND ((0Xffffffff85eeb4e7, '', '-338578525'))))>(((((0.6314131589262497)OR(0.22902824817669565)))AND(x'7ec6d49d'))))); -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE RTRIM IN ()), (((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((t0.c2))))==(highlight(t0.c0, vt0.c0, '', vt1.c0))), ((t0.c2 COLLATE NOCASE) BETWEEN (((((((((0xffffffffed8d80ce)OR(NULL)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c1))) AND (t0.c1 COLLATE BINARY)), ((((vt1.c0)OR(vt1.c2)))AND(vt1.c0)) COLLATE BINARY, LIKELIHOOD(CAST(vt0.c0 AS NUMERIC), 0.37834601370630394), (~ (((t0.c0) IS TRUE))), TOTAL(CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c1 END) OVER () FROM t0 ORDER BY ((((vt1.c1)|(vt1.c2))) NOT BETWEEN (json_extract(vt1.c1, t0.c2)) AND (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;SELECT ((((t0.c1))>=((vt0.c0))) IN ()) FROM t0, vt0; -- 0ms;
SELECT ALL (((((t0.c1))<((vt1.c2))))&(vt0.c0)) FROM vt1, t0;SELECT DISTINCT CAST(vt1.c2 COLLATE NOCASE AS NUMERIC) FROM vt0, t0, vt1; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt1 WHERE ((CASE x''  WHEN x'' THEN '1888373739' ELSE NULL END IN ())) ORDER BY (((((vt1.c0, vt1.c2, t0.c0))==((t0.c2, t0.c0, vt1.c2)))) IS TRUE) ASC  NULLS FIRST, CAST(-512731142 AS INTEGER);SELECT DISTINCT ((t0.c2)||(((((vt1.c1)AND(vt1.c1)))OR(vt1.c2)))) FROM vt1;SELECT DISTINCT ((((((NULL))==((vt1.c1)))))<((COUNT(*)))) FROM vt0, vt1, t0 ORDER BY CAST((+ (t0.c1)) AS BLOB)  NULLS FIRST LIMIT -1215183323 OFFSET 1146089634; -- 0ms;
SELECT DISTINCT vt1.c2 FROM vt1; -- 0ms;
SELECT DISTINCT ((CAST(vt1.c2 AS NUMERIC)) NOT BETWEEN (((vt1.c1)<>(vt1.c1))) AND ((+ (t0.c1)))), COUNT(*), JULIANDAY(((((t0.c2)OR(vt1.c1)))OR(vt0.c0)), ((t0.c1)/(t0.c2)), CAST(x'' AS NUMERIC)) FROM t0, vt0, vt1 LIMIT -2086379515; -- 0ms;
SELECT (TRIM(t0.c0) IN ()), ((+ (x'3761')) IN ()), (((vt1.c1)) BETWEEN ((((t0.c1)/(vt1.c0)))) AND (('uN'))), TRIM(((t0.c2) BETWEEN (t0.c1) AND (t0.c1))), x'' FROM t0, vt1; -- 0ms;
SELECT ALL ((((((vt1.c1) IS TRUE))AND(CAST(vt0.c0 AS NUMERIC))))AND((NOT (vt1.c1)))) FROM t0, vt1, vt0 WHERE ((((('1244964883') ISNULL)) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN CAST(x'' AS NUMERIC) ELSE TRIM(t0.c0, t0.c1) END FROM vt0 LIMIT 1628122451 OFFSET 505332331;SELECT CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN CASE t0.c1  WHEN vt1.c2 THEN t0.c2 WHEN vt1.c1 THEN vt1.c2 WHEN t0.c0 THEN vt1.c1 END WHEN LIKE(vt1.c1, vt1.c1) THEN vt1.c1 COLLATE NOCASE WHEN ((t0.c1)IS NOT(x'44fa')) THEN (+ (vt1.c1)) ELSE (t0.c2 IN ()) END FROM vt1;SELECT DISTINCT (('1925725911')<<((((vt1.c2, vt1.c0, vt1.c2))>((t0.c0, vt1.c2, vt1.c1))))) FROM vt0, t0, vt1 WHERE (((CAST(x'' AS BLOB)) BETWEEN ((NULL IN ())) AND (0x737d36bc))); -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((x'150a')) AND ((((vt1.c2) IS FALSE)))), LAG(CASE WHEN ((x'')/(t0.c1)) THEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) WHEN vt0.c0 THEN (~ (vt0.c0)) WHEN (t0.c0 IN ()) THEN t0.c2 COLLATE BINARY WHEN CAST(0.9821876706299837 AS NUMERIC) THEN vt0.c0 COLLATE NOCASE WHEN CASE WHEN t0.c0 THEN t0.c1 END THEN t0.c2 ELSE t0.c1 END, ((((t0.c2)IS(t0.c1)))LIKE(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c1)))AND(t0.c0)))AND(t0.c0)))), TYPEOF(((t0.c1)>(vt0.c0)))) OVER ( GROUPS  UNBOUNDED PRECEDING), TOTAL(((t0.c1) NOT NULL)) OVER () FROM vt0, t0 ORDER BY CAST(((((t0.c2)OR(t0.c0)))AND(vt0.c0)) AS INTEGER) DESC  NULLS FIRST, UNLIKELY(CAST(vt1.c2 AS TEXT)) DESC  NULLS LAST;SELECT ((+ (vt1.c0)) IN (vt0.c0, vt1.c1)), ((vt1.c2 IN (t0.c2)) IN ()), (((vt1.c0 COLLATE BINARY, CASE vt0.c0  WHEN x'' THEN vt1.c1 ELSE t0.c2 END, CAST(vt1.c1 AS INTEGER)))<=((((vt0.c0) ISNULL), t0.c0, AVG(t0.c2)))) FROM t0, vt1 WHERE (((((-1.215183323E9)&(x'')))<(((('-1358270515')) BETWEEN ((0x52d2d71f)) AND ((0.3825134686336945))))));SELECT (((t0.c2) IS FALSE) IN ()) FROM t0, vt0; -- 0ms;
SELECT DISTINCT json_quote((((vt1.c1))>=((t0.c1)))) FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0))) NOT BETWEEN ((NOT (t0.c1))) AND (TOTAL(NULL))) FROM vt1 WHERE ((((((((((('撄胎X3쪗')OR(x'')))AND(NULL)))OR('4t')))AND('1628122451')))*(0.25030445853131056 COLLATE BINARY))) LIMIT 417763990 OFFSET -159094125;SELECT CASE WHEN ((t0.c2) ISNULL) THEN AVG(vt1.c0) END, ((CAST(t0.c1 AS NUMERIC))!=((vt0.c0 IN (vt1.c1)))), (CASE vt1.c2  WHEN t0.c0 THEN vt0.c0 ELSE NULL END IN (t0.c0 COLLATE RTRIM)) FROM t0 WHERE (((NULL) IS TRUE) COLLATE RTRIM) LIMIT 86912658;SELECT DISTINCT 8.6912658E7, CASE CASE WHEN t0.c1 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END  WHEN CAST(t0.c0 AS REAL) THEN ((t0.c2)<>(x'')) END, (((((0.9657491334044696) BETWEEN (vt0.c0) AND (vt1.c0)), '', (~ (t0.c2))))>((json_extract(vt0.c0, t0.c0, t0.c1, t0.c1), ((((((((t0.c1)OR(t0.c2)))AND(vt1.c2)))OR(t0.c1)))OR(vt1.c1)), ((t0.c1)OR(vt0.c0))))), NULL, 0X48fea935 FROM vt1, vt0, t0 ORDER BY CAST(((vt1.c2) IS FALSE) AS TEXT); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) ISNULL) THEN vt1.c0 COLLATE RTRIM END, ((((((((((t0.c2) NOT BETWEEN (t0.c0) AND (vt1.c1)))OR(((((t0.c2)AND(vt1.c0)))OR('325042911')))))AND((((vt1.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))))AND((~ (vt0.c0)))))AND(CASE t0.c1  WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c0 END)), TOTAL(CAST(t0.c2 AS TEXT)) FILTER(WHERE PRINTF(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)), ((vt1.c2) NOT BETWEEN (t0.c2) AND ('')), ((0.8194049006981776)AND(vt0.c0)))) OVER () FROM vt0;SELECT TOTAL(NULL) OVER () FROM vt0, t0; -- 0ms;
SELECT ALL CAST(t0.c0 COLLATE NOCASE AS INTEGER) FROM vt0 WHERE ((('aㄵDuᶜA8d檓') NOT NULL) COLLATE RTRIM);SELECT DISTINCT (((vt1.c2 IN (t0.c2)))<=(SUM(t0.c2))) FROM vt1, t0 GROUP BY (((vt1.c2 IN ())) NOT NULL) HAVING ((((vt1.c1)<<(vt1.c0))) IS TRUE) ORDER BY ((((vt1.c2) NOT NULL)) NOT BETWEEN (HEX(vt1.c2)) AND (t0.c1)), (((vt0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c1 THEN t0.c0 WHEN t0.c1 THEN vt1.c1 END)) AND ((((vt1.c0)*(vt1.c2))))) ASC LIMIT 1691192504;SELECT DISTINCT -1445120889 FROM vt0 WHERE (LIKELY((('0.41447730379738934') BETWEEN (0xfffffffff10f73bd) AND ('-1445120889')))); -- 0ms;
SELECT ALL (vt1.c0 IN ()) COLLATE BINARY FROM vt1, vt0, t0 GROUP BY CAST(t0.c0 AS TEXT) COLLATE BINARY ORDER BY 0.13742090542358965  NULLS FIRST, NULL COLLATE BINARY, t0.c2  NULLS FIRST; -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), (t0.c2 IN (t0.c2)) COLLATE BINARY, ((((t0.c2)||(t0.c0)))/('103266838')) FROM vt1 WHERE ((- ((('')GLOB(NULL))))) LIMIT 1656372412 OFFSET -1217229509;SELECT ALL COUNT(t0.c1) OVER ( ORDER BY (- (((vt1.c0) ISNULL))) DESC), ((((((((((vt0.c0)!=(vt1.c2)))AND(((((t0.c0)OR(vt1.c1)))OR(t0.c2)))))OR(((t0.c0) BETWEEN (vt0.c0) AND ('h+ppu?p1')))))AND(0.4692951787870032)))AND(vt1.c1 COLLATE NOCASE)), json_valid(MIN(vt1.c0)) FROM vt0, t0 WHERE (((NULL)/(DATETIME(-1881851231, '()xzuZk', x''))));SELECT ((t0.c0) BETWEEN (t0.c2 COLLATE BINARY) AND (((-1445120889) ISNULL))), DENSE_RANK() OVER (), (- (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))) FROM vt1, vt0, t0 WHERE (CHANGES()); -- 0ms;
SELECT DISTINCT NULL, ((((t0.c2)-(vt1.c1)))-('-1326239016')), ((CASE t0.c0  WHEN '1854322496' THEN t0.c2 ELSE t0.c2 END) BETWEEN (((t0.c1) NOTNULL)) AND (((t0.c1)IS NOT(t0.c0)))) FROM t0, vt0 WHERE (((((((((((((CASE WHEN 0.23215838708289505 THEN NULL WHEN '103010500' THEN '626623526' WHEN x'' THEN x'' ELSE -129284367 END)AND(((x'b326') IS TRUE))))OR(((x'9db9') NOT BETWEEN ('Pn8嫴s') AND (NULL)))))AND((((119519815, 0.15328504865034465, 0.042024276600838295)) NOT BETWEEN ((x'', 0.625097662846353, 8.53281715E8)) AND ((0.9821876706299837, x'b7bd', 618598753))))))AND((((NULL, -32363343, x''))>((NULL, 0.7931541535882252, 0.0874560893078059))))))OR(JULIANDAY('189984371', x'', NULL))))AND((((NULL)) BETWEEN ((0.08051559013740639)) AND (('1389549343'))))));SELECT DENSE_RANK() OVER () FROM vt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((+ (vt1.c0)) IN (((((t0.c1)OR(t0.c2)))OR(t0.c2)))) FROM vt0, vt1 WHERE (CASE WHEN 0.8887920241150866 COLLATE NOCASE THEN CAST(NULL AS BLOB) END);SELECT DISTINCT SUM(LIKELIHOOD(DISTINCT vt1.c0, 0.18402274497161675)) FROM vt1 WHERE (CAST(NULL AS INTEGER)); -- 0ms;
SELECT DISTINCT (((((((((t0.c1 IN ()))OR(0xfffffffffb5ee6de)))OR(((((t0.c2)OR(t0.c2)))OR(t0.c0)))))AND(((vt0.c0)IS(vt0.c0)))))AND(vt1.c0)), (((vt1.c0) NOT NULL) IN (((((vt1.c2)OR(t0.c0)))AND(vt1.c0)))), TOTAL(UNLIKELY(t0.c0)) FROM vt0, vt1 WHERE ((((((((((0.8194049006981776)OR(-1361036028)))OR(0.6934487445118805)))AND('1%')))OR('-430765874')) IN ()));SELECT (+ ((('2047475610')IS(NULL)))), ((((t0.c2) BETWEEN (vt1.c2) AND (vt0.c0))) NOT NULL), CAST(((vt1.c2)||(vt0.c0)) AS INTEGER) FROM vt1 WHERE (UPPER((+ ('247844320'))));SELECT DISTINCT MIN((NOT (t0.c2))) COLLATE BINARY FROM vt1 WHERE ((NOT ((NULL IN ())))) GROUP BY ((vt0.c0 COLLATE RTRIM)<>((~ (t0.c2)))) HAVING GROUP_CONCAT((~ (t0.c0))) LIMIT -1177628037;SELECT ALL COUNT(((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE BINARY) FROM t0, vt1;SELECT DISTINCT CAST((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS TEXT) FROM vt0, vt1 WHERE (UPPER(x''));SELECT 0.40544902960767026, (((vt1.c2 IN ()))<(CAST(vt0.c0 AS BLOB))), (~ (0.9167838512678685)) FROM vt1;SELECT DISTINCT LOWER(UPPER(vt0.c0)), (CAST(vt1.c2 AS BLOB) IN (((t0.c0)-(vt1.c2)), ((vt1.c0)&(vt1.c1)))), TOTAL(((vt1.c0)IS NOT(NULL))) COLLATE NOCASE FROM vt1, vt0 LIMIT -447356732 OFFSET 1826397166;SELECT DISTINCT ((CASE WHEN x'' THEN vt0.c0 END) IS TRUE) FROM vt0 WHERE (CASE ((NULL) ISNULL)  WHEN 0Xffffffffd327a4fd COLLATE RTRIM THEN (('-2097282069')<(0.6934487445118805)) ELSE (((439910027)) NOT BETWEEN (('^%K')) AND ((NULL))) END); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 ORDER BY (((JULIANDAY(vt0.c0, vt1.c0, vt1.c0), ((vt1.c1)==(vt0.c0)), CAST(t0.c2 AS TEXT)))<=((CASE WHEN vt1.c0 THEN vt1.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 END, (t0.c0 IN ()), (NOT (vt1.c1))))), (((- (t0.c1))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))  NULLS FIRST;SELECT ALL ((((((((((vt1.c2) NOTNULL))OR(((vt0.c0)|(vt1.c2)))))OR((- (vt1.c2)))))OR(((t0.c1)AND(vt0.c0)))))AND(((t0.c2)+(vt0.c0)))) FROM vt1 WHERE (CAST(((x'') IS TRUE) AS REAL)) LIMIT 1398163511 OFFSET 1353671812;SELECT ALL (('-786940198')<=(t0.c2)), ((CASE WHEN vt1.c0 THEN t0.c2 ELSE vt1.c1 END) BETWEEN ((- (vt1.c1))) AND (((vt1.c1)IS(t0.c1)))), t0.c2 FROM vt0, vt1 WHERE ((((0.26388185004058384 IN ()))<>(STRFTIME(x'', 0.9657491334044696, NULL, 0.8492984246700028, 0.09633204177710941))));SELECT ALL ((CAST(vt1.c0 AS BLOB)) NOT NULL) FROM t0 WHERE ((('-1568053316')>>(((((0.8148484161723708)AND(x'd5dbaa6a')))AND(x'')))));SELECT DISTINCT LAG((((t0.c0)) NOT BETWEEN (((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))) AND ((((t0.c1)GLOB(t0.c1))))), (NOT (CASE WHEN t0.c2 THEN t0.c0 END)), ('-786940198' IN ((+ (vt1.c0))))) OVER () FROM t0, vt0, vt1 WHERE (((((((NULL)AND(x'')))AND('-691883975'))) BETWEEN (((((0Xfffffffff53fc8f3)OR(NULL)))AND(994646053))) AND ((((('')OR('')))AND(8.6912658E7))))); -- 0ms;
SELECT DISTINCT (((+ (vt1.c1)))IS NOT(((vt1.c1) BETWEEN (t0.c2) AND (t0.c1)))) FROM vt1 WHERE (((0.9667480674312809 COLLATE NOCASE)&(NULL COLLATE BINARY))) EXCEPT SELECT DISTINCT load_extension(RTRIM(t0.c2)) FROM t0, vt0 WHERE (CASE WHEN ((('1908994915')) NOT BETWEEN ((-392504433)) AND ((NULL))) THEN (((0.2999011148426709))<>(('0.21058364337882374'))) END);SELECT NULL FROM vt0, t0; -- 0ms;
SELECT (((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0)) IN ()) FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT ((((((vt1.c2)AND(t0.c1)))OR(vt1.c1))) BETWEEN (((((t0.c1)OR(t0.c0)))OR(vt1.c1))) AND (((t0.c2)GLOB('0.40544902960767026')))) FROM t0 NOT INDEXED, vt0, vt1 ORDER BY (((((t0.c0, '1703358773', x''))>=((t0.c0, vt0.c0, t0.c0))))GLOB((t0.c1 IN ())))  NULLS FIRST; -- 0ms;
SELECT ALL ((((((((((t0.c0)&(t0.c1)))OR(MAX(t0.c2))))OR(((vt1.c0)>>(t0.c1)))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(LIKELIHOOD(t0.c0, 0.3208335503105132))) FROM t0 WHERE (PRINTF(NULL, 0.5849110538184542, NULL COLLATE BINARY));SELECT COUNT(((vt1.c1)<>(vt1.c2))) OVER (), ((t0.c0)IS(vt0.c0)) COLLATE NOCASE, ((((t0.c2 COLLATE RTRIM)AND((((t0.c1))<(('-273829714'))))))AND(TRIM(DISTINCT vt1.c1, 0.20982713126065244))) FROM vt0, vt1, t0 WHERE (((IFNULL(DISTINCT '0.032360736969388904', NULL)) NOT NULL)); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT ((vt1.c0) BETWEEN (x'') AND (vt0.c0)), 0.11668335725312518), t0.c1, ((UNLIKELY(t0.c0))==((((vt1.c2, x'', t0.c1)) BETWEEN ((t0.c2, vt1.c0, vt1.c0)) AND ((t0.c0, t0.c1, vt1.c2))))), 0.37659978059482324, (NOT (x'')) COLLATE BINARY FROM vt1, t0, vt0 WHERE ((((x'')) NOT BETWEEN ((((0X46e2555) NOTNULL))) AND (((('zE\r袡M t\r') BETWEEN ('sj') AND ('&[uOL>')))))) GROUP BY ((- (t0.c2)) IN ()) HAVING CASE COUNT(vt1.c1)  WHEN ((t0.c0) IS TRUE) THEN ((t0.c1)+(NULL)) END; -- 1ms;
SELECT DISTINCT ((vt1.c2 COLLATE BINARY)AND(CASE WHEN t0.c2 THEN NULL WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 END)) FROM vt0 WHERE (('y؃\n' COLLATE RTRIM IN (((0.28581804334308314) IS FALSE))));SELECT DISTINCT t0.c1 FROM vt0;SELECT DISTINCT ((0.9682681953953157)IS NOT(CAST(t0.c2 AS REAL))) FROM t0 WHERE (((NULLIF('1541006321', '-2067141567')) NOT BETWEEN ((('656905099')AND(''))) AND (((((x'')OR(-1326239016)))AND(x''))))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)>=(((vt0.c0) BETWEEN (t0.c0) AND (vt1.c1)))), '325448088', RANK() OVER () FROM vt0, vt1, t0 WHERE (((((((((NULL)AND(NULL)))OR(NULL)))OR(NULL)))AND(x'')) COLLATE BINARY); -- 0ms;
SELECT ALL ((((t0.c0)OR(vt1.c0)))<<(CAST(vt1.c0 AS REAL))), ((MIN(t0.c0)) BETWEEN (((((vt1.c2)AND(vt0.c0)))AND(vt1.c0))) AND (((vt0.c0) NOT NULL))), MAX(CAST(vt1.c0 AS BLOB)) FROM vt0, t0;SELECT DISTINCT ((((vt1.c2 COLLATE NOCASE)OR(MIN(t0.c1))))OR(TRIM(t0.c0))) FROM t0 WHERE (((CAST('-828920377' AS TEXT))|(((NULL)GLOB(x'')))));SELECT DISTINCT ((((((NULL) NOT NULL))AND(t0.c1)))AND(vt1.c2)) FROM vt0;SELECT ALL CASE WHEN ((vt1.c2)LIKE(vt1.c2)) THEN ((vt1.c2) BETWEEN (vt1.c2) AND (t0.c1)) WHEN MAX(x'') THEN (((t0.c0))>=((t0.c2))) WHEN (NOT (t0.c1)) THEN vt0.c0 ELSE CAST(NULL AS TEXT) END, ((((COUNT(vt1.c2))OR(t0.c2)))AND(t0.c0)), CAST((NULL IN ()) AS INTEGER) FROM vt1, t0, vt0; -- 0ms;
SELECT ALL ((((t0.c1) BETWEEN (vt1.c0) AND (NULL)))+(((vt1.c1) IS TRUE))) FROM vt0, vt1, t0; -- 0ms;
SELECT DISTINCT (NOT (0X5b621bd0)) FROM vt0; -- 0ms;
SELECT CASE 1.011463691E9  WHEN ((((((((t0.c1)AND(t0.c0)))AND(vt1.c0)))AND(t0.c1)))OR(vt0.c0)) THEN TYPEOF(t0.c0) ELSE (vt1.c0 IN (t0.c2)) END FROM vt0, vt1;SELECT SUM(MAX((((vt1.c0, vt1.c1, vt1.c2))<((t0.c1, vt0.c0, t0.c0))))) FROM t0, vt0, vt1 WHERE (((((((((((NULL)AND(NULL)))AND(NULL)))OR(0.05382881397290218)))AND(0.4822631474786684))) BETWEEN (CASE WHEN x'' THEN x'' END) AND (CAST('-1646734897' AS NUMERIC))));SELECT DISTINCT ((vt1.c2) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((-1770035280)) AND ((t0.c2)))) AND (((((t0.c2)AND(t0.c2)))OR(t0.c1)))) FROM t0 WHERE (0Xffffffffd85270c1) ORDER BY ((((vt1.c1) NOT BETWEEN (t0.c2) AND (vt1.c2)))<<(CAST(vt0.c0 AS TEXT)))  NULLS LAST;SELECT ALL CASE WHEN ((((x'')AND(vt1.c0)))AND(t0.c2)) THEN NULL WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)) THEN CASE t0.c0  WHEN vt0.c0 THEN NULL WHEN t0.c0 THEN t0.c2 WHEN vt1.c1 THEN t0.c2 WHEN vt1.c0 THEN t0.c2 WHEN t0.c2 THEN vt1.c1 ELSE vt0.c0 END WHEN 309760822 THEN vt1.c1 ELSE ((vt0.c0)|(t0.c0)) END FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, vt1, t0 ORDER BY (NOT (CASE WHEN -1.881851231E9 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN vt1.c2 ELSE t0.c2 END)) ASC  NULLS LAST; -- 2ms;
SELECT DISTINCT (NULL IN ()) FROM t0, vt0; -- 0ms;
SELECT ALL COUNT(((((((((vt1.c2)AND(vt1.c2)))OR(vt1.c0)))AND(1.628122451E9)))AND(t0.c0))) FROM vt1, t0 WHERE ((~ ((('1982583567') IS FALSE)))); -- 0ms;
SELECT ((((((((((((vt1.c0)AND(t0.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(t0.c1)))OR(vt1.c0 COLLATE NOCASE)))AND(((t0.c1) ISNULL))), (((((vt1.c2))<((t0.c1)))) ISNULL), COUNT(*) OVER () FROM vt1 WHERE (((((NULL)>(0.5132000198445912)))-(0.5870018793854269 COLLATE BINARY))) LIMIT 2047475610 OFFSET -1885037528;SELECT DISTINCT json_patch(((vt1.c1)<=(t0.c0)), MAX(vt0.c0, vt1.c0)) FROM t0;SELECT t0.c2, COUNT(*) OVER (), CASE CASE t0.c2  WHEN vt1.c0 THEN vt1.c2 END  WHEN 0.28496852326006916 THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) WHEN CAST(t0.c1 AS REAL) THEN ((t0.c0)&(vt1.c1)) WHEN CAST(t0.c0 AS INTEGER) THEN (('1389549343') NOT BETWEEN (vt0.c0) AND (t0.c1)) ELSE CAST(t0.c1 AS INTEGER) END FROM vt0, vt1;SELECT DISTINCT NULL, t0.c0, (+ ((((vt1.c0)) BETWEEN ((2.4784432E8)) AND ((vt1.c0))))) FROM t0, vt1 WHERE (((((((((((((CAST('F_e7' AS NUMERIC))OR((((0.5766196094003313)) NOT BETWEEN (('436338053')) AND ((NULL))))))AND(TRIM(x''))))OR(((((((((0x7a09ff9a)AND(x'92de')))OR(NULL)))OR('|')))AND(x'618d')))))OR(((0.0874560893078059) IS TRUE))))AND(CAST('1691192504' AS TEXT))))AND((x'' IN ())))); -- 0ms;
SELECT DISTINCT (((((((vt1.c0, vt1.c1, t0.c1))>=((t0.c2, vt1.c0, t0.c0))))AND(t0.c0)))OR(GROUP_CONCAT(t0.c2))) FROM vt0, vt1, t0; -- 1ms;
SELECT DISTINCT (NOT (AVG(vt1.c0))) FROM t0, vt1, vt0 GROUP BY ((((t0.c1)<>(t0.c2))) ISNULL) HAVING x''; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0, t0 WHERE (1.19519815E8 COLLATE BINARY); -- 0ms;
SELECT ((vt0.c0) ISNULL) FROM t0, vt0 WHERE (((((TRIM(x'aca5'))OR('zE\r袡M t\r' COLLATE BINARY)))AND((NOT (0.18340360774555997))))); -- 0ms;
SELECT DISTINCT t0.c1 FROM vt1, t0 WHERE ((((ABS(DISTINCT x'061b')))==(((0.48400046321671475 IN (NULL, NULL)))))); -- 0ms;
SELECT DISTINCT vt1.c1, ROW_NUMBER() OVER (), AVG((((NULL)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) FROM vt0 LIMIT -1639159364;SELECT DISTINCT ((((625415943) ISNULL)) NOT BETWEEN (((vt1.c2)%(t0.c1))) AND ((~ (vt1.c1)))), json_remove(((vt1.c1) ISNULL), ((t0.c0)<(vt1.c2))), (ABS(vt1.c2) IN ()) FROM vt1;SELECT DISTINCT '-1713121679' FROM t0; -- 0ms;
SELECT DISTINCT COUNT((t0.c2 IN ()) COLLATE BINARY) OVER () FROM vt1, t0 WHERE (CASE WHEN ((NULL) NOTNULL) THEN (-1.217229509E9 IN ()) END) ORDER BY (t0.c0 IN ()) COLLATE RTRIM, CASE TRIM(vt1.c2, vt1.c2)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)) THEN CAST(t0.c2 AS NUMERIC) ELSE ((6.26623526E8) NOT BETWEEN (t0.c1) AND (vt1.c2)) END, ((((((((((vt1.c0)AND(t0.c2)))AND(vt1.c1)))AND(x'06b6')))AND(vt1.c2))) BETWEEN ((+ (vt1.c2))) AND ((((x'')) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;SELECT ((((vt1.c1 COLLATE NOCASE)OR(LIKELIHOOD(vt0.c0, 0.742315339929311))))AND(CHANGES())) FROM vt1, t0 WHERE (((((2051022945)OR('-512731142')))||(((((8.07897245E8)OR(0.11964753912947734)))OR('')))));SELECT CASE (NOT ('-1375299460'))  WHEN t0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN ((((((((((((((((t0.c2)AND(vt1.c2)))AND(vt0.c0)))OR(t0.c0)))OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(t0.c2)) THEN ((t0.c2)*(vt1.c2)) WHEN (((t0.c2, vt1.c1, NULL)) NOT BETWEEN ((t0.c2, t0.c2, x'')) AND ((t0.c2, vt1.c0, vt1.c1))) THEN COUNT(vt1.c2) END FROM vt0, vt1;SELECT ALL CAST((vt1.c2 IN ()) AS BLOB), (NOT ((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))), ((~ (0.21833731707774973)) IN (vt1.c1 COLLATE BINARY, CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN 0x5442738e ELSE vt1.c2 END)) FROM t0;SELECT ALL (((CAST(t0.c1 AS TEXT), '6_', ((vt1.c0)-(vt1.c2)), ((vt1.c1)GLOB(-2.73829714E8)), (- (t0.c1))))>((((((((((t0.c1)AND(t0.c1)))AND(x'')))AND(vt1.c2)))OR(t0.c1)), vt1.c1, COALESCE(DISTINCT t0.c0, t0.c1), CASE WHEN x'' THEN t0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c1 THEN vt1.c1 END, '86912658'))) FROM t0;SELECT (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND ((-1595129280))), (vt1.c1 COLLATE NOCASE IN (((vt1.c2)-('7|nq)C8')))), ((((((vt1.c1)AND(t0.c2)))AND(t0.c1))) IS TRUE) FROM t0, vt0 WHERE (CASE (NOT (''))  WHEN ((NULL) BETWEEN ('\J1槩') AND ('2鶪>+')) THEN CAST('' AS INTEGER) ELSE ((x'3eee')<('쪗}2')) END);SELECT (NOT (TYPEOF(DISTINCT t0.c1))), (- ((t0.c1 IN ()))), (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c2)))) NOT BETWEEN (ABS(t0.c2)) AND (vt0.c0 COLLATE RTRIM)) FROM vt0, t0, vt1; -- 0ms;
SELECT (('1244964883') NOT NULL) FROM vt1; -- 0ms;
SELECT CAST(t0.c1 COLLATE BINARY AS TEXT) FROM t0, vt1, vt0 WHERE (((((('-32363343')OR(0.8355017911682384)))OR(x'f06c')) IN ())); -- 0ms;
SELECT DISTINCT CASE 0.6179234086602554 COLLATE BINARY  WHEN ((0.27552945279558927) NOTNULL) THEN 'rAR>1H.	' ELSE t0.c2 COLLATE NOCASE END FROM vt0 WHERE (CAST(CAST(69195049 AS REAL) AS REAL));SELECT vt1.c2 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE FROM vt0, t0, vt1; -- 0ms;
SELECT ALL ((vt1.c0) IS FALSE) COLLATE RTRIM, LIKELIHOOD(DISTINCT COUNT(vt1.c1), 0.43339929669043786), (((CASE t0.c1  WHEN t0.c1 THEN vt1.c2 END, SQLITE_COMPILEOPTION_USED(vt0.c0), ((0x64cd8cb8)<(vt1.c2))))<((t0.c0, json_array(vt1.c2, vt0.c0, t0.c1, x''), LOWER(t0.c2)))) FROM t0;SELECT ALL (((CHANGES()))>=((((((vt1.c1)AND(t0.c1)))OR(t0.c2))))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((LIKE(vt1.c0, t0.c2))AND((-2.086379515E9 IN (vt1.c0)))) FROM vt1 WHERE (CASE CASE 0.22670013463459993  WHEN NULL THEN NULL END  WHEN ((((((((0.5270708095567977)AND(0.32189335810551634)))AND('g-(/D|u')))AND(0.21833731707774973)))OR('X''ho<')) THEN '993557364' ELSE x'' END) LIMIT -175195480;SELECT ALL CAST(((t0.c0)&(t0.c0)) AS BLOB), t0.c2, LAST_VALUE(LOWER(DISTINCT vt1.c2 COLLATE NOCASE)) OVER () FROM t0, vt0, vt1; -- 0ms;
SELECT DISTINCT COUNT('') OVER (), RANK() OVER (), NTH_VALUE((((((vt1.c1))<>((t0.c0))))GLOB(CASE WHEN vt1.c2 THEN t0.c0 WHEN vt1.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN vt1.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c0 THEN 0.7154156815660767 END)), CASE ((t0.c2) BETWEEN (0.3825134686336945) AND (t0.c2))  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0))) THEN t0.c2 END) OVER (), ((((((((((vt1.c2)OR('0.4822631474786684')))OR('2036196824')))AND(vt0.c0)))AND(t0.c1)))AND(((vt1.c0)<=(vt1.c0)))), (CAST(vt0.c0 AS TEXT) IN ()) FROM vt1, t0 WHERE (CASE WHEN ('[]|Xkq' IN ()) THEN (NOT ('-1239056566')) WHEN (('-1444377728')==('-129284367')) THEN ((((NULL)AND(-9.25887313E8)))AND(NULL)) WHEN ((0.017320762139863666)GLOB(x'3cd6')) THEN (+ (0xffffffffdc5fd5b7)) END) ORDER BY t0.c1 DESC  NULLS FIRST;SELECT DISTINCT LEAD(json_type(((((((((vt0.c0)AND(vt1.c2)))AND(vt1.c2)))OR(vt1.c1)))OR(vt1.c1))), (((~ (vt1.c1))) ISNULL), CASE (vt1.c0 IN (vt0.c0))  WHEN (vt1.c1 IN (vt0.c0, vt0.c0)) THEN ((vt1.c2)*(vt0.c0)) WHEN (vt1.c2 IN (vt1.c0)) THEN ((vt1.c2)>=(vt0.c0)) WHEN (vt1.c2 IN (vt1.c2)) THEN vt1.c0 COLLATE NOCASE ELSE vt1.c2 COLLATE BINARY END) OVER () FROM vt0, vt1 WHERE (((x'' COLLATE BINARY)-(CAST('-32363343' AS BLOB)))); -- 1ms;
SELECT DISTINCT vt1.c2 FROM t0;SELECT ALL ((((CAST(t0.c0 AS INTEGER))OR(HEX(DISTINCT vt1.c0))))OR(((t0.c0)<=(vt0.c0)))) FROM t0, vt1, vt0; -- 0ms;
SELECT t0.c1, ((t0.c0) IS FALSE), '' FROM t0, vt0 WHERE ((NOT ((((('D4#FzR')OR(NULL)))OR(1.7976931348623157E308))))); -- 1ms;
SELECT ALL (((t0.c1)) NOT BETWEEN ((MAX(t0.c2))) AND ((SQLITE_SOURCE_ID()))), (((vt1.c2, vt0.c0, t0.c1)) BETWEEN ((vt0.c0 COLLATE RTRIM, ((vt1.c0) IS TRUE), vt1.c2)) AND ((CAST(t0.c2 AS REAL), 0.03765086011500052, UPPER(DISTINCT t0.c0)))), ((NULL) NOT NULL) FROM vt0, vt1, t0 WHERE (CAST(CAST(x'' AS INTEGER) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c2 END)AND(((-305540363) BETWEEN (vt1.c0) AND (vt1.c2)))))AND(load_extension(x'', vt1.c1))) FROM vt1, t0, vt0 WHERE ((NOT (CAST(0.9308952468749173 AS TEXT)))); -- 0ms;
SELECT DISTINCT (((((t0.c1)<=(vt1.c0))))<((((t0.c0) ISNULL)))), ((((0.20916544329355868) BETWEEN (0.7861220597036804) AND (t0.c0)))*((('^XlKgQ')+(vt1.c2)))), json_quote(vt0.c0 COLLATE RTRIM), DENSE_RANK() OVER ( ROWS BETWEEN CAST((NOT (vt1.c0)) AS INTEGER) FOLLOWING AND 0.5455704735599424 COLLATE RTRIM FOLLOWING EXCLUDE GROUP), CAST(GROUP_CONCAT(vt1.c0) AS REAL) FROM vt1, t0, vt0; -- 0ms;
SELECT (((((vt0.c0)) NOT BETWEEN ((vt1.c2)) AND ((t0.c0))))|((t0.c1 IN ()))), ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (MIN(t0.c0)) AND (t0.c2)), vt1.c2 FROM vt1;SELECT DISTINCT (NOT (-2.32495641E8)) FROM vt0 NATURAL JOIN vt1 GROUP BY ((((vt1.c1)>=(vt1.c0))) NOT NULL); -- 1ms;
SELECT DISTINCT '829078408' FROM vt1, t0 WHERE (((CAST(NULL AS TEXT))|((((0.6283998625964086)) NOT BETWEEN ((1.389549343E9)) AND ((NULL)))))); -- 0ms;
SELECT ((((((((((vt1.c1)OR(vt0.c0)))AND(x'')))OR(vt0.c0)))AND(vt1.c0))) IS TRUE) FROM vt0, vt1, t0; -- 0ms;
SELECT (((vt1.c2)) BETWEEN ((json_remove(vt1.c0, vt1.c1))) AND ((JULIANDAY(vt0.c0, vt1.c0, vt1.c1)))) FROM vt1 WHERE ((((0.08043197531998081)<=(0.29560818357305674)) IN ()));SELECT ALL ((CASE t0.c1  WHEN vt1.c0 THEN vt1.c1 END)>(vt1.c0 COLLATE RTRIM)), (0.4689279971313314 IN ()), CASE ((vt1.c0)>>(vt1.c2))  WHEN ((t0.c1) BETWEEN (vt1.c2) AND (vt1.c1)) THEN t0.c1 ELSE ((t0.c2) NOT NULL) END FROM vt0, vt1, t0 WHERE (((UPPER(x'')) BETWEEN ((x'' IN ())) AND ((NOT (-1972991839))))) ORDER BY vt1.c0  NULLS LAST; -- 2ms;
SELECT ALL ((vt1.c2) NOT NULL) COLLATE NOCASE FROM t0 WHERE (CASE WHEN ((0.5270708095567977) NOT NULL) THEN CAST(NULL AS NUMERIC) WHEN (((x'868a4dff'))<((0.9667480674312809))) THEN (x'' IN ('7|nq)C8')) WHEN (('-1283533773') BETWEEN (0.48407163423520505) AND (NULL)) THEN ((1888373739)GLOB(NULL)) ELSE ((NULL)/(-2.32495641E8)) END);SELECT DISTINCT ((((AVG(vt1.c0))OR(((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c2)))))AND(CAST(vt1.c2 AS TEXT))) FROM t0 ORDER BY CASE WHEN HEX(DISTINCT t0.c0) THEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE CASE WHEN vt1.c2 THEN t0.c2 END END  NULLS FIRST, ((~ (t0.c0)) IN ());SELECT DISTINCT t0.c1 FROM t0, vt1 WHERE (((UPPER(DISTINCT -1.855983162E9)) IS TRUE)) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE RTRIM DESC  NULLS FIRST, CAST((t0.c1 IN (t0.c1)) AS BLOB) DESC  NULLS LAST; -- 0ms;
SELECT (('-691883975')>((vt1.c1 IN ()))), (- (((((t0.c2)OR(vt1.c1)))OR(vt0.c0)))), CAST((0.7481199764731845 IN (vt1.c0)) AS REAL) FROM t0, vt0 ORDER BY ((t0.c1) IS FALSE) COLLATE BINARY DESC  NULLS LAST;SELECT DISTINCT ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((t0.c2)-(t0.c2)))), (((CAST(vt0.c0 AS BLOB)))<=(((vt0.c0 IN ())))), (((0.6423498455589189) IS TRUE) IN (((t0.c2)>=(vt1.c1)), x'8db3')) FROM vt0, t0 WHERE (((((1015552495) BETWEEN ('1224649013') AND (NULL))) BETWEEN ((- (NULL))) AND (((x'6e06') NOT BETWEEN ('') AND ('1691192504')))));SELECT DISTINCT (((IFNULL(vt1.c0, t0.c1)))=((((vt1.c0) BETWEEN (vt1.c1) AND (t0.c2))))) FROM t0, vt0, vt1 WHERE (PRINTF(((x'')=(x'')))); -- 0ms;
SELECT (+ (CAST(t0.c2 AS BLOB))) FROM vt1;SELECT ALL ((((((((((((CASE WHEN t0.c0 THEN 0.5889492973793156 WHEN vt1.c1 THEN vt1.c1 WHEN t0.c1 THEN vt1.c2 ELSE vt1.c2 END)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END)))OR((x'33ed' IN ()))))AND(CAST('4 ' AS INTEGER))))OR(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 END)))AND(((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))))OR(vt1.c2)), (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), (~ (vt0.c0)) FROM t0, vt0;SELECT ((((t0.c0)IS NOT(t0.c1)))+(((t0.c1) NOTNULL))), SUM(CASE t0.c1  WHEN x'7c7e' THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN t0.c2 ELSE x'' END), ((vt1.c1 COLLATE RTRIM)<((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))))) FROM t0, vt1 WHERE (((((NULL) NOT BETWEEN (0.4822631474786684) AND (NULL))) BETWEEN ((('-1535925725') NOT NULL)) AND ('-316722863' COLLATE RTRIM))); -- 0ms;
SELECT ALL AVG((- (vt1.c1))) FROM vt1 ORDER BY (~ (vt1.c2)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT SUM(((((((((vt1.c2)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c2))) OVER () FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT (((NULL) IS FALSE) IN ()), (((((((((((((((vt0.c0)) BETWEEN ((vt1.c2)) AND ((vt0.c0))))AND(0.9667480674312809)))AND((t0.c2 IN (t0.c0)))))OR(t0.c0)))AND(((vt1.c0)>(t0.c0)))))AND(CASE t0.c0  WHEN vt1.c2 THEN vt1.c0 END)))AND(vt1.c1 COLLATE NOCASE)), ((t0.c2) NOTNULL) COLLATE NOCASE FROM vt0 GROUP BY CAST(((t0.c0)<>(vt0.c0)) AS INTEGER), ((((vt1.c1)GLOB(0.25030445853131056))) NOTNULL), ((((vt0.c0)AND(t0.c0)))OR(vt1.c2)) COLLATE RTRIM ORDER BY (((t0.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c2))) COLLATE BINARY, (((((vt1.c1))!=((t0.c1)))) ISNULL) ASC;SELECT DISTINCT CASE WHEN ((1691192504)LIKE(t0.c2)) THEN ((vt1.c2)<<(t0.c2)) ELSE CAST(vt1.c2 AS BLOB) END FROM t0, vt1, vt0; -- 1ms;
SELECT DISTINCT ((((t0.c0)>(vt0.c0)))*(((vt1.c1) ISNULL))), ((((0xffffffffe4e9d6a3)OR(vt1.c0 COLLATE BINARY)))OR(((vt0.c0)LIKE(vt0.c0)))), CAST(vt0.c0 AS NUMERIC) FROM vt1;SELECT vt0.c0, '-1352511783', vt1.c2 FROM t0 ORDER BY -1542513252 ASC;SELECT ALL ((vt1.c1 COLLATE RTRIM) IS FALSE), ((((t0.c2)*(vt1.c1))) BETWEEN (t0.c1 COLLATE NOCASE) AND (NULL)), (- (IFNULL(DISTINCT t0.c0, t0.c2))) FROM vt1 ORDER BY CASE ((t0.c2)OR(t0.c1))  WHEN (((t0.c2, t0.c0, vt1.c1)) NOT BETWEEN ((t0.c1, t0.c1, vt0.c0)) AND ((t0.c2, t0.c0, t0.c0))) THEN x'' END;SELECT DISTINCT ((CAST(vt1.c0 AS NUMERIC))<<(json_patch(vt1.c2, t0.c0))) FROM vt1, vt0, t0; -- 0ms;
SELECT ALL ((((CAST(vt1.c2 AS NUMERIC))AND((~ (t0.c0)))))AND(t0.c0)) FROM vt0, t0, vt1; -- 0ms;
SELECT ((((((((((vt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)))OR(AVG(t0.c2))))OR(((t0.c1)<<(vt1.c0)))))OR(x'')))OR(COUNT(t0.c2))) FROM t0;SELECT DISTINCT CASE (('-2047953689')<(vt1.c0))  WHEN t0.c0 COLLATE BINARY THEN CASE t0.c2  WHEN t0.c2 THEN 'onow23' ELSE '994646053' END WHEN vt1.c2 THEN ((vt1.c1)OR(t0.c2)) WHEN vt1.c0 THEN '' END FROM vt1;SELECT DISTINCT 'cR' FROM vt1, t0 WHERE (CASE WHEN (~ (0.827249835188389)) THEN TYPEOF('-2067141567') END) LIMIT 387514700 OFFSET -49627726; -- 0ms;
SELECT ALL (- (t0.c2 COLLATE BINARY)) FROM vt1, t0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt1.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))), CAST((vt1.c0 IN ()) AS REAL), (- ((t0.c1 IN ()))) FROM vt1;SELECT DISTINCT MIN(((((((((vt1.c1)OR(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(t0.c2))) FROM t0, vt0, vt1 ORDER BY CAST('-2001975742' AS INTEGER) ASC, CASE WHEN ((t0.c0) NOTNULL) THEN ((t0.c0) IS TRUE) ELSE vt1.c2 COLLATE BINARY END DESC, (((vt1.c1)) NOT BETWEEN (((vt1.c1 IN ()))) AND ((CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN vt0.c0 THEN vt0.c0 END))) ASC; -- 0ms;
SELECT DISTINCT ((((t0.c2) IS FALSE))-(((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c2)))OR(t0.c1)))) FROM t0 NOT INDEXED, vt0, vt1 WHERE (CASE WHEN NULL THEN x'' END COLLATE BINARY); -- 0ms;
SELECT CASE WHEN CAST(vt1.c1 AS BLOB) THEN COUNT(vt0.c0) ELSE t0.c1 END, (((t0.c0 IN ())) NOTNULL), ((MAX(vt1.c0))>((((vt1.c2))==((vt1.c1))))) FROM vt0, vt1 GROUP BY ((NULL) BETWEEN (vt1.c0) AND (t0.c1)) COLLATE NOCASE HAVING (((((vt0.c0))>((vt0.c0))))|(((x'') IS TRUE)));SELECT (((~ (t0.c1))) BETWEEN ((~ (vt1.c1))) AND (LOWER(vt0.c0))) FROM t0 WHERE ((- ('^ꠓ')));SELECT vt1.c0 FROM vt0, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT (- ((t0.c2 IN ()))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ABS((vt1.c1 IN (t0.c0, vt1.c2))), COUNT(*), ((((t0.c2) ISNULL)) NOT NULL), (((NOT (vt1.c1)))<=(0.4613260947654939)), (((vt1.c1)) BETWEEN ((MAX(t0.c2))) AND ((vt0.c0 COLLATE BINARY))) FROM vt1, t0, vt0; -- 0ms;
SELECT DISTINCT (- (t0.c0)), (((CASE WHEN t0.c2 THEN vt1.c0 ELSE t0.c1 END))<=((((vt1.c0)!=(vt0.c0))))), (((vt0.c0 COLLATE BINARY, (- (vt1.c0)), MAX(vt1.c1)))==(((vt1.c1 IN ()), (~ (t0.c2)), (('0.09238542067709854') NOT BETWEEN (t0.c0) AND (0.3328451370104646))))) FROM t0, vt1 WHERE (((CAST(x'7b84c094' AS NUMERIC))LIKE((('-1742792008')IS(x'')))));SELECT ALL ((0.837161226667076) ISNULL) COLLATE NOCASE, CAST(((((t0.c2)OR(t0.c1)))AND(t0.c0)) AS REAL), ((((((t0.c1)AND(vt0.c0)))OR(t0.c1))) NOT NULL) FROM vt1 WHERE (LAST_INSERT_ROWID());SELECT DISTINCT (+ (t0.c1)) COLLATE RTRIM FROM t0, vt0 WHERE ((+ ('1443594983'))); -- 0ms;
SELECT (NULL IN ((t0.c0 IN (vt1.c2, vt1.c1)))) FROM t0 WHERE (JULIANDAY(CAST('x''ho<' AS NUMERIC), ((((0.8118270518126992)OR(0.09238542067709854)))OR('撄胎x3쪗')), NULL COLLATE RTRIM, UNLIKELY(x''), (+ ('1072993947')))) LIMIT 178215673 OFFSET 854539644;SELECT ALL (((vt1.c0)) NOT BETWEEN ((CASE WHEN 0.04672860720970795 THEN vt0.c0 END)) AND (((t0.c0 IN (vt1.c0))))), ((((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))&(HEX(''))), (((COUNT(*), CAST(t0.c1 AS REAL), ((t0.c2) NOT BETWEEN (vt1.c2) AND (NULL))))!=((((vt1.c1)<(vt1.c1)), CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 ELSE vt1.c2 END, ((t0.c0) ISNULL)))) FROM t0, vt0 WHERE (((LENGTH('now')) IS FALSE));SELECT ((((((vt1.c2) BETWEEN (t0.c1) AND (t0.c1)))AND(((t0.c0)||(vt1.c0)))))AND(CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c1 END)) FROM vt0, t0, vt1 WHERE ((((x'' IN ()))<=(((NULL) NOT BETWEEN (1.03266838E8) AND (0X135fc2df))))); -- 0ms;
SELECT DISTINCT ((((vt1.c1)||(t0.c0)))>=((t0.c1 IN ()))), CAST(CAST(vt1.c1 AS NUMERIC) AS INTEGER), (((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))))OR(TRIM(DISTINCT vt1.c0, '875205615'))) FROM vt1 WHERE (((((('322459377')) NOT BETWEEN (('-2047953689')) AND (('1585036339'))))+(((x'') BETWEEN (0.07235679363579095) AND (x'df0e'))))) ORDER BY ((x'019c')*(((vt0.c0)GLOB(vt1.c0)))) DESC  NULLS FIRST;SELECT ALL vt1.c0, CASE LOWER(t0.c2)  WHEN UNICODE(vt1.c2) THEN ((((vt1.c2)AND(vt1.c1)))AND(x'd7a5')) ELSE t0.c1 END, ((TOTAL(0.4678502750481188))&((((t0.c1))<=((vt1.c2))))) FROM t0, vt0 WHERE (CASE json(0X51b421cf)  WHEN (((x''))<=((x''))) THEN CAST(x'' AS BLOB) ELSE (('0.8887920241150866')*(x'')) END);SELECT CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN 617935355 THEN vt1.c0 WHEN vt1.c2 THEN vt0.c0 ELSE NULL END AS REAL) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT CASE WHEN vt1.c0 THEN 0.3286385842553482 ELSE t0.c0 END, ((((t0.c1)OR(t0.c0)))AND(t0.c0))) FROM t0, vt0, vt1 GROUP BY TRIM(DISTINCT vt1.c0 COLLATE BINARY); -- 0ms;
SELECT ALL ((SQLITE_SOURCE_ID())*(((t0.c2)LIKE(t0.c0)))), ((0.6195479645676123)OR(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c2)))), ((((vt0.c0) BETWEEN (t0.c1) AND (t0.c1)))<<(0.6399107393156457)) FROM t0, vt1, vt0 WHERE (LIKELY(DISTINCT (('')*(x'')))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))AND((+ (t0.c1)))))OR((+ (t0.c1)))))AND(CASE t0.c1  WHEN vt1.c1 THEN vt1.c0 END)))OR(t0.c1 COLLATE NOCASE)), ((((((((((NULL)OR(t0.c1)))AND(NULL)))OR(vt1.c0)))AND(x''))) BETWEEN (((vt0.c0)GLOB(NULL))) AND (NULL)), CASE WHEN AVG(vt0.c0) THEN CAST(vt1.c1 AS BLOB) WHEN ((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))) WHEN CAST(t0.c0 AS REAL) THEN (((vt1.c0)) BETWEEN ((t0.c1)) AND ((t0.c1))) WHEN ((t0.c2) NOT NULL) THEN x'' WHEN vt0.c0 COLLATE BINARY THEN (((t0.c2))<((t0.c1))) ELSE CASE WHEN vt0.c0 THEN 178215673 ELSE vt1.c0 END END FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN 'nV' THEN t0.c1 ELSE vt0.c0 END AS REAL), COUNT(*), SUM((((0.48400046321671475))>=((t0.c0)))) OVER () FROM vt0, t0, vt1; -- 0ms;
SELECT LAG(vt1.c2, ((t0.c0)>>(t0.c2)) COLLATE BINARY, x'') OVER (), NULLIF(((vt1.c1) BETWEEN (t0.c0) AND (t0.c0)), CASE vt1.c0  WHEN t0.c2 THEN vt1.c0 END), CASE WHEN ((((t0.c0)AND(t0.c2)))OR(0X4e40a54a)) THEN NULL END FROM vt1, t0 WHERE (CASE (('-253267804') ISNULL)  WHEN ((NULL)*('')) THEN ((((x'')OR(0.058228656105674625)))OR(6.25415943E8)) WHEN (~ (6.26623526E8)) THEN '-2047953689' COLLATE BINARY WHEN COALESCE(x'', x'') THEN (('h+Pgu?P1')+(x'')) END) ORDER BY t0.c0 ASC, ((CAST(0.5647132517639059 AS TEXT))>>((t0.c2 IN (vt0.c0)))) DESC  NULLS FIRST, CAST(((((vt1.c0)OR(t0.c1)))AND(t0.c1)) AS TEXT)  NULLS LAST;SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST((~ (0.7869801081434848)) AS INTEGER)); -- 0ms;
SELECT vt1.c0, ((((((vt1.c2)OR(vt1.c2)))OR(vt1.c0)))AND((((t0.c2))<((vt1.c2))))), ((CAST(vt1.c0 AS INTEGER)) NOTNULL) FROM t0 WHERE (CAST(-1.217229509E9 AS TEXT));SELECT ALL ((((t0.c0)) BETWEEN ((vt1.c2)) AND ((vt1.c0))) IN ()), vt0.c0, CAST(COUNT(t0.c1) AS TEXT) FROM vt1 WHERE ((- (CASE 'Ἒo'  WHEN '-159094125' THEN '-402810257' END)));SELECT ALL (((vt1.c2)) NOT BETWEEN ((((t0.c0) BETWEEN (NULL) AND (t0.c0)))) AND (((vt1.c0 IN ())))) FROM vt1, t0, vt0 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM); -- 0ms;
SELECT AVG(IFNULL(vt1.c0, t0.c2)) OVER () FROM t0, vt0 WHERE (((((((((((x'b46b')AND(0.28496852326006916)))AND(0.8118270518126992)))OR('411746619')))AND(0X539dd1ea)))<=('' COLLATE RTRIM)));SELECT DISTINCT ((((vt0.c0) ISNULL))/(t0.c1)), PERCENT_RANK() OVER (), CAST(x'' AS REAL) COLLATE BINARY FROM vt0;SELECT DISTINCT vt0.c0 FROM t0, vt1;SELECT DISTINCT ((((vt1.c2)-(vt1.c0))) IS FALSE) FROM t0, vt0 LIMIT 103010500;SELECT DISTINCT (COALESCE(vt0.c0, vt1.c2) IN ()) FROM vt1, t0; -- 0ms;
SELECT DISTINCT PRINTF((+ (t0.c0))) FROM vt0 WHERE ((((x'')/(NULL)) IN ()));SELECT ALL COUNT((((vt0.c0, t0.c0, vt1.c1)) NOT BETWEEN ((t0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1)))) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE CURRENT ROW), ((((AVG(t0.c2))OR(((0.5364540245701486)<(x'')))))OR(CASE vt1.c1  WHEN t0.c1 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END)), GROUP_CONCAT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))) FROM vt1, t0 WHERE (CASE ((745301765) ISNULL)  WHEN ((NULL) NOT NULL) THEN ((x'') ISNULL) ELSE 'i' END);SELECT DISTINCT (((vt0.c0 IN (vt1.c1, vt1.c0))) NOTNULL), LOWER((t0.c2 IN (vt1.c1))), RANK() OVER () FROM vt0, t0 WHERE ((((('-1972991839') NOT BETWEEN ('782349054') AND (NULL)))|((NULL IN ()))));SELECT DISTINCT ((((SUM('1224649013'))AND(((((((((t0.c0)AND('-750039736')))OR(t0.c0)))AND(vt0.c0)))AND('')))))OR(((t0.c2) IS TRUE))) FROM vt1, t0, vt0 WHERE (((CAST(0.3803973250317224 AS NUMERIC)) BETWEEN ('-691883975' COLLATE BINARY) AND (('853281715' IN ())))); -- 0ms;
SELECT DISTINCT ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) COLLATE RTRIM, ((IFNULL(DISTINCT t0.c1, vt1.c2)) BETWEEN (COUNT(*)) AND (INSTR(t0.c1, t0.c2))), (((t0.c2))==((t0.c1))) COLLATE BINARY FROM vt0, vt1;SELECT DISTINCT t0.c0 FROM vt1, t0, vt0 WHERE ((((0.4665104001212558 IN ()))<(CAST(x'' AS REAL)))) LIMIT 1485708077; -- 0ms;
SELECT ALL CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN vt1.c0 WHEN t0.c1 THEN vt1.c2 END COLLATE NOCASE FROM vt1, t0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END THEN ((t0.c0)<<(t0.c1)) END FROM vt0, t0, vt1 WHERE (((0.7481199764731845)==(0.9457934714247593)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT '-1215183323' COLLATE NOCASE, (COUNT(*) IN ()), LAG(((CASE WHEN vt1.c1 THEN vt1.c1 END)|(((vt0.c0)||(vt1.c2)))), NULL, ((((0Xffffffff98565925)<=(vt1.c2)))==(((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2))))) OVER ( PARTITION BY HEX(DISTINCT (+ (t0.c2))), (((vt1.c1 IN ()))<<(CAST(t0.c1 AS REAL)))) FROM vt1, vt0 WHERE (1903811912);SELECT DISTINCT (((t0.c0 IN ()))||((~ (vt0.c0)))) FROM t0, vt0, vt1 LIMIT 320907859; -- 0ms;
SELECT (CAST(vt1.c1 AS REAL) IN ()) FROM vt0, vt1, t0 LIMIT -703902328 UNION SELECT CAST(t0.c1 AS REAL) COLLATE NOCASE FROM vt0, vt1, t0 WHERE ((((('1682216474')OR('1805842417')))AND(x'')) COLLATE RTRIM);SELECT ALL (((((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (json_remove(vt1.c0, vt1.c1)) AND ((+ (vt0.c0)))) FROM vt0, t0;SELECT (((t0.c1, vt1.c2, t0.c1)) NOT BETWEEN ((((((((((t0.c1)OR(vt0.c0)))AND(vt1.c2)))OR(0.8797373477472783)))OR(t0.c1)), (((vt1.c2, vt1.c0, vt1.c2))>((vt0.c0, t0.c2, vt0.c0))), COUNT(*))) AND ((CASE t0.c2  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c2 END, (((t0.c2)) BETWEEN ((t0.c1)) AND ((vt1.c1))), LIKELIHOOD(DISTINCT t0.c2, 0.8468675275297526)))) FROM t0, vt1, vt0 WHERE ((('1434380143' COLLATE RTRIM)&(((((((((x'c729')OR(x'')))AND(NULL)))AND(x'')))AND(x''))))); -- 0ms;
SELECT DISTINCT (+ (((t0.c1)+(vt1.c1)))), CAST(NULLIF(vt1.c2, vt1.c0) AS TEXT), vt1.c1 FROM vt0, vt1, t0 WHERE (((((~ ('819163808'))))>(((NOT (NULL)))))); -- 0ms;
SELECT DISTINCT ((((((((((NULL)*(NULL)))AND(CAST(vt0.c0 AS NUMERIC))))AND((((vt1.c0))!=((vt0.c0))))))OR(CAST(vt1.c2 AS BLOB))))OR((t0.c0 IN ()))) FROM vt0;SELECT ((((((((t0.c0)OR(RTRIM(vt1.c1))))AND(TOTAL(t0.c2))))AND(((t0.c0) IS FALSE))))AND(x'')), ((((CAST(vt1.c2 AS BLOB))OR(((((((((x'')OR(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c2)))))AND(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END)), x'75d8' FROM vt0, t0, vt1 WHERE ((((813729483)) NOT BETWEEN (((('-1377939946')<<('')))) AND (((NULL IN (0xffffffff83f8a0c6)))))); -- 0ms;
SELECT (NOT (CAST(vt0.c0 AS TEXT))) FROM vt1, vt0, t0 WHERE ((- (NULL))); -- 0ms;
SELECT DISTINCT TOTAL(((((((((NULL)OR(vt0.c0)))OR(t0.c1)))OR(vt1.c2)))AND(t0.c0))) FROM vt1, vt0 WHERE ((CASE WHEN NULL THEN 0.7491142754203122 ELSE NULL END IN ()));SELECT DISTINCT NULL, ((((vt0.c0)%(vt1.c0))) ISNULL), ((((((t0.c2)AND(vt1.c1)))AND(vt1.c1)))LIKE(((t0.c2) IS TRUE))), x'', 0.9254454951133797 FROM vt0, vt1 WHERE ((((((NULL) NOTNULL), IFNULL(0.9145016834551379, x''), (((x'')) BETWEEN ((x'')) AND (('ᶜ')))))=((((0.5604347457314263) ISNULL), NULL COLLATE RTRIM, 'm9ydbX'))));SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c2) AND (0.13742090542358965))) BETWEEN ((~ (vt0.c0))) AND (((((((((vt1.c1)AND(t0.c2)))OR(t0.c1)))OR(t0.c2)))OR(t0.c1)))) FROM t0, vt0, vt1 WHERE (CAST((('->') BETWEEN (NULL) AND (x'')) AS REAL)); -- 0ms;
SELECT SUM((((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c1)))) OVER (), (((~ ('+^')))%((((t0.c2, t0.c2, t0.c0, vt1.c2, t0.c0))<>((vt0.c0, vt0.c0, t0.c0, t0.c1, vt1.c2))))), (NULLIF(DISTINCT t0.c2, t0.c1) IN ()) FROM t0, vt1, vt0 WHERE (0.8303900026725702); -- 0ms;
SELECT DISTINCT CASE ((vt1.c0)AND(t0.c2))  WHEN vt1.c0 COLLATE BINARY THEN SQLITE_SOURCE_ID() WHEN vt0.c0 THEN CAST(vt1.c2 AS TEXT) WHEN (+ (1787839711)) THEN ((t0.c0)>(vt1.c2)) WHEN (vt1.c1 IN (vt1.c1)) THEN CASE t0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END WHEN (vt0.c0 IN (vt1.c0, vt1.c0)) THEN (~ (vt1.c2)) END FROM t0 WHERE ((((('1585036339')<<('D4#FZR'))) BETWEEN (CAST('-1132736079' AS BLOB)) AND (((NULL) IS TRUE))));SELECT ALL ((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((vt1.c0)*(t0.c2))) AND ((+ (t0.c1)))), vt1.c2, NTILE(CAST((+ (vt0.c0)) AS NUMERIC)) OVER ( ORDER BY -1557963610  NULLS LAST) FROM vt1, vt0, t0 WHERE ((((('U,,%vbH釢')AND(-786940198)))>>(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT CAST(CAST(NULL AS BLOB) AS REAL) FROM vt0, vt1, t0; -- 0ms;
SELECT SUM(t0.c2) OVER () FROM vt1, t0 GROUP BY LIKELIHOOD(DISTINCT CASE t0.c1  WHEN t0.c2 THEN vt1.c1 WHEN t0.c0 THEN vt1.c0 WHEN t0.c2 THEN vt1.c2 END, 0.5568197488150313) HAVING ((t0.c1) IS FALSE); -- 0ms;
SELECT ALL NTH_VALUE(((((t0.c0)<(t0.c2))) NOT NULL), NULLIF(((vt0.c0) BETWEEN (t0.c1) AND (vt0.c0)), '\㵼Xg#M')) OVER (), AVG(json_insert(t0.c1, vt1.c2, vt1.c1)), ((t0.c0)IS NOT(((vt1.c0)GLOB(t0.c0)))) FROM vt0, t0 WHERE (((((-9.75482377E8)LIKE(0.39778309597679473))) BETWEEN ((~ (0.3594587182063055))) AND (CASE '*h0qj_鑶2'  WHEN 'M' THEN '0.4689279971313314' WHEN -1138832745 THEN '-1796391062' WHEN '' THEN NULL ELSE x'' END)));SELECT DISTINCT (~ (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))), NTH_VALUE(((((((t0.c1)|(vt1.c1)))OR(((vt1.c2)*(t0.c0)))))OR(t0.c1)), ((NULL) NOT NULL)) OVER (), AVG(((vt0.c0) NOT BETWEEN (t0.c2) AND (-273829714))) OVER ( RANGE ((((t0.c0) NOT NULL))*(((vt1.c0)||(vt1.c1)))) PRECEDING EXCLUDE CURRENT ROW) FROM vt0, t0, vt1 WHERE ((+ (CAST(x'3a4a' AS BLOB)))) LIMIT 1677722217 OFFSET 1506247581;SELECT (((vt1.c1))=((vt1.c1))) COLLATE RTRIM FROM vt0 ORDER BY vt0.c0, (+ ('-32363343'))  NULLS LAST;SELECT DISTINCT (((vt1.c2))>=((LOWER(vt1.c0)))) FROM t0, vt0 WHERE ((((0.23962022604394106, 0.4260120524592641, NULL)) NOT BETWEEN (((x'' IN ('?H濍Il1!aq')), ((0.7208069261355512)=(0.2972522226130869)), (- (0.13751578495462335)))) AND ((CAST(NULL AS INTEGER), CAST(',' AS NUMERIC), (('G+-%\r')=(0.14738124171406375))))));SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((~ ((- (NULL))))); -- 0ms;
SELECT (((((vt1.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))) NOTNULL) FROM vt1, t0 WHERE (((4.41408244E8 COLLATE NOCASE)<>((('1854322496') NOTNULL))));SELECT ALL COUNT(*) OVER ( ORDER BY (CAST(t0.c0 AS REAL) IN ())) FROM vt1, vt0, t0 WHERE (CASE ((0xffffffffb115222e)IS NOT(x''))  WHEN (('G-(/D|U')IS NOT(0.44063923713959385)) THEN ((NULL)*('1888373739')) END) LIMIT -517543941 OFFSET -309493554; -- 0ms;
SELECT DISTINCT ((((vt1.c1)||(t0.c1))) IS TRUE) FROM vt1, t0 WHERE (((SQLITE_COMPILEOPTION_GET('i㘇'))*(0X8d4dcfd COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((((((((((((vt1.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(t0.c1)))OR(vt1.c2)))%(((t0.c0)||(vt1.c1)))), (~ ((t0.c0 IN ()))), AVG(TOTAL(((vt0.c0)GLOB(t0.c1)))) FROM vt1 WHERE (0Xffffffff9c91e8de);SELECT DISTINCT ((((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0))) BETWEEN (COUNT(t0.c2)) AND ((((vt0.c0, t0.c1, t0.c0))<((vt1.c0, vt0.c0, t0.c2))))) FROM t0, vt0 WHERE (((((((((((NULL)AND(NULL)))AND(NULL)))OR(x'')))AND('IkV'))) NOT BETWEEN ((~ ('-2067880888'))) AND (CASE NULL  WHEN x'4ce4abe5' THEN '735594538' WHEN 'IM' THEN '' WHEN NULL THEN '1166461741' ELSE 0.5663086664439712 END))) GROUP BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (vt1.c2 COLLATE NOCASE) AND (0.7786444111835893)), (NOT (x'ada2')), '0.8194049006981776' HAVING CAST(t0.c1 AS REAL);SELECT (((t0.c1 IN (vt1.c2, t0.c0)))/((vt1.c0 IN ()))), ((((vt1.c1)>>(vt1.c1)))IS NOT(((vt1.c1)+(vt1.c1)))), ((((((((((NULL)OR(vt1.c0)))OR(vt1.c2)))AND(t0.c2)))AND(vt1.c1)))>=(t0.c1 COLLATE BINARY)) FROM vt1, t0 WHERE (TYPEOF(((((((((NULL)AND(NULL)))OR('14n')))OR('189984371')))AND(0.6423498455589189)))); -- 1ms;
SELECT NULL FROM vt0, t0; -- 0ms;
SELECT DISTINCT CAST(MAX(x'') AS NUMERIC) FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT CAST(((vt1.c1) NOTNULL) AS BLOB) FROM vt0, vt1, t0 WHERE (((((0.026233320176134)GLOB(2034378679)))||(((NULL) NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((((t0.c2)AND(vt1.c2)))AND(t0.c0))) NOTNULL) FROM t0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((((((((vt1.c2)AND('9f')))AND(vt1.c0)))OR(vt1.c2)))OR(vt1.c1)))OR(t0.c0)))OR(vt1.c1)))>=(((((vt1.c1)AND(vt1.c2)))OR(vt1.c1)))) FROM t0, vt0 WHERE (((LOWER(DISTINCT x'a75d')) BETWEEN ((('') BETWEEN (NULL) AND (''))) AND (CASE WHEN '-1361036028' THEN ')\n, Nb' WHEN -237815891 THEN '994646053' WHEN x'e1a5' THEN x'' ELSE NULL END))) ORDER BY t0.c2  NULLS LAST, ((CASE WHEN t0.c0 THEN t0.c0 END)OR('l⊖l䛱QU' COLLATE BINARY)) DESC;SELECT DISTINCT TOTAL(COALESCE(t0.c1, vt1.c1)) FROM vt1, vt0;SELECT DISTINCT 0.48219075372699316 FROM vt0, t0 WHERE ((((0.06614373657134875)) BETWEEN (((NOT (x'8177')))) AND ((NULL COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT MAX(x'0fed') FROM vt0 WHERE (''); -- 0ms;
SELECT DISTINCT (((CAST(t0.c0 AS REAL)))<=((IFNULL(NULL, vt0.c0)))) FROM vt1, t0, vt0 GROUP BY TRIM((t0.c1 IN ())); -- 0ms;
SELECT DISTINCT (((vt1.c1, t0.c1, '0-')) BETWEEN ((vt1.c0, (- (vt1.c1)), IFNULL(DISTINCT t0.c2, t0.c2))) AND ((((((vt1.c1)OR(vt0.c0)))OR(vt1.c0)), (~ (0.11715549821833982)), t0.c1))), (NOT (vt1.c0 COLLATE RTRIM)), t0.c0, vt0.c0, ((t0.c0) NOT BETWEEN (x'6b56') AND (((vt1.c2) BETWEEN (0X3027889d) AND (0.20916544329355868)))) FROM vt0, vt1, t0 WHERE ((('1770357027') NOT BETWEEN (1.739734913E9) AND ('-536709054')) COLLATE BINARY) ORDER BY TYPEOF(DISTINCT ((((((((0.20553606224800747)OR(vt1.c0)))OR(t0.c1)))AND(t0.c1)))AND(vt1.c2)))  NULLS FIRST; -- 0ms;
SELECT (NOT (((vt1.c2) IS TRUE))), (((((vt1.c0 IN ()))OR(((((((((((((vt1.c0)OR('1656372412')))AND(vt1.c2)))OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))))OR(((vt1.c1) NOT NULL))), MIN(((vt0.c0)>(t0.c2))) FROM vt1;SELECT vt1.c2 FROM t0, vt0, vt1 GROUP BY (NOT (vt1.c0)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (t0.c2) AND (1585036339)) COLLATE NOCASE FROM vt1, vt0 WHERE (((((((((NULL COLLATE NOCASE)OR((~ (NULL)))))AND(((0xfffffffff83dffb7) BETWEEN (NULL) AND (NULL)))))OR((((0.6585006186017138))>((x''))))))OR(((((((((((((NULL)OR(0.911573783364731)))AND(0.7703069330854098)))OR(0.9079876642499969)))OR('撗unr?7e怅')))AND(0.7886775726981402)))AND('-1425551332')))));SELECT DISTINCT CASE WHEN (((vt1.c0))>=((''))) THEN DATE(vt1.c1, t0.c1, t0.c0, vt1.c0, vt1.c0) WHEN ((t0.c1)+(vt1.c0)) THEN ((t0.c2)!=(t0.c0)) WHEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)) THEN ((t0.c1)IS(t0.c1)) ELSE 0.23437775899270563 END, (((vt1.c2)) BETWEEN ((((vt1.c2) IS FALSE))) AND ((vt1.c2 COLLATE BINARY))), -77791435 FROM vt0, t0, vt1 WHERE (((((CAST('' AS INTEGER))OR(NULL)))AND('-1379667658' COLLATE NOCASE))) LIMIT 711588994 OFFSET -1055286082; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt1.c1) AND (t0.c1)) AS TEXT) FROM vt0, t0;SELECT ALL ((((+ (t0.c2)), (((vt0.c0)) BETWEEN (('ᅡz')) AND ((t0.c2))), CAST(t0.c1 AS INTEGER)))!=((((((((((((((t0.c2)AND(t0.c0)))OR(t0.c1)))AND(vt1.c1)))AND(t0.c1)))AND(vt1.c1)))AND('-105029095')), CASE vt1.c2  WHEN 0.7381690337934305 THEN NULL END, CAST(vt0.c0 AS INTEGER)))) FROM t0, vt0 WHERE (((x'c72b') NOT BETWEEN (CASE WHEN '-691883975' THEN '-1463331173' WHEN '103010500' THEN '' WHEN '439056911' THEN 'g-(/D|u' ELSE 0.4822631474786684 END) AND (CASE WHEN '顼b*Fq]x-' THEN 1707882039 ELSE 0.8892033997513296 END))) GROUP BY vt1.c2;SELECT ALL (CASE vt1.c2  WHEN vt1.c2 THEN t0.c0 END IN ()), (+ (COUNT(vt1.c0))), (((vt1.c1)) BETWEEN ((NULL)) AND ((((((((((((((t0.c2)AND(vt1.c1)))OR(t0.c2)))AND(vt1.c1)))AND(t0.c1)))AND(t0.c1)))AND(t0.c0))))) FROM vt1 NOT INDEXED, vt0, t0 WHERE (((((0Xffffffffcbe5e936) BETWEEN ('l51**V') AND (0.674853693084284)))OR('y' COLLATE BINARY))); -- 0ms;
SELECT ((((t0.c1)IS NOT(vt1.c1)))||(AVG(t0.c2))), (((((t0.c1 IN ()))OR(((vt0.c0)=(t0.c1)))))AND(TRIM(DISTINCT vt0.c0, t0.c2))), ((((((NULL) BETWEEN (t0.c1) AND (vt1.c2)))OR(ABS(t0.c0))))OR(TYPEOF(DISTINCT t0.c0))) FROM vt1, vt0;SELECT DISTINCT ((((((vt0.c0)OR(t0.c1)))OR(vt1.c0))) IS TRUE), ((vt1.c1 COLLATE BINARY) BETWEEN (CASE t0.c2  WHEN t0.c2 THEN vt1.c1 ELSE vt0.c0 END) AND (((vt0.c0)>('')))), (~ (TRIM(DISTINCT vt1.c0, t0.c0))) FROM vt0, vt1, t0; -- 0ms;
SELECT DISTINCT (- (((vt1.c1)-(NULL)))) FROM vt0, t0, vt1; -- 0ms;
SELECT DISTINCT IFNULL('', CAST(t0.c2 AS TEXT)), (((vt1.c2 IN ()))<>(MIN(0Xfffffffff6846a93))), t0.c1 FROM t0; -- 0ms;
SELECT ALL ABS(DISTINCT ((0.021683238608973365)+(vt1.c2))), (((((((t0.c0, vt1.c0, t0.c1))<>((vt1.c1, t0.c0, t0.c2))))OR(vt1.c1)))AND(((vt0.c0) NOTNULL))), '' FROM t0;SELECT DISTINCT CASE WHEN CASE WHEN vt1.c1 THEN t0.c0 END THEN TRIM(DISTINCT t0.c1, vt1.c2) ELSE ((vt1.c0)||(t0.c0)) END FROM vt0, t0 WHERE (CAST(CASE 0.8966464830987471  WHEN 511663502 THEN 0.9132856767006146 ELSE NULL END AS REAL));SELECT ALL ((((((((CASE WHEN vt0.c0 THEN vt1.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END)AND(((vt1.c0) NOT NULL))))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c1 AS REAL))))AND(CAST(vt1.c0 AS BLOB))) FROM vt0 WHERE (((CAST(1826397166 AS INTEGER)) NOTNULL)) LIMIT -1022319524 OFFSET -1103982794;SELECT DISTINCT ((vt1.c1 IN ()) IN ((((t0.c0))<=((0.9129471052204802))))) FROM vt1, vt0, t0 WHERE (TRIM(DISTINCT ((((NULL)AND('\n <햄i')))OR('>')), ((('')) BETWEEN (('168116652')) AND ((NULL))))); -- 0ms;
SELECT ALL (((x'') IS FALSE) IN (((((((((vt1.c1)AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))AND(vt1.c1)))) FROM t0, vt1 WHERE ((((x'') NOT BETWEEN ('y5p') AND (0.27112797565985736)) IN ())); -- 0ms;
SELECT (((- (vt1.c1)))+((NOT (vt1.c2)))) FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((vt1.c0 IN ())), (- (MAX(0.07081657502940686))), ((CASE vt1.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN NULL THEN t0.c2 END) IS FALSE) FROM vt0, t0;SELECT ALL (((vt1.c0) IS TRUE) IN ()) FROM t0 WHERE ((((('1937585852')) BETWEEN ((0x2d93e5aa)) AND (('1703358773'))) IN ())); -- 0ms;
SELECT DISTINCT ((((json_patch(vt0.c0, vt0.c0))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(vt0.c0)), ((((t0.c2))<=((t0.c0))) IN ()), (+ (vt1.c1)) FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((((((((((vt1.c1) IS FALSE))AND(x'')))AND(COUNT(*))))OR(x'e492')))AND(((vt1.c0) IS FALSE))))OR(vt1.c1)))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt1 WHERE (((((x'') BETWEEN (x'') AND (x'')))==((626623526 IN ()))));SELECT (NOT ((((t0.c2))<=((vt0.c0))))), (((+ (vt1.c1)))>(((NULL) BETWEEN (vt0.c0) AND (vt1.c2)))), SUM(x'cc95') FROM vt1 WHERE (((((('1781773340')GLOB(NULL))))<((((NULL) NOTNULL)))));SELECT DISTINCT ((((t0.c2)/(vt1.c2))) NOT BETWEEN (CAST(t0.c2 AS BLOB)) AND (((vt1.c1)+(vt0.c0)))) FROM vt0 WHERE ((((((((((((('-1445120889')AND('1908994915')))OR('u㘇')))OR('-2007545777')))OR(0.6260273402367841)))AND(((((1123219440)AND(NULL)))OR(x'')))))AND(((('', '46355619', '-1361036028'))<=((x'', '210834608', NULL))))));SELECT DISTINCT CASE (t0.c1 IN (vt1.c1))  WHEN ((t0.c2) NOTNULL) THEN NULL END FROM t0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((LIKELIHOOD(DISTINCT t0.c0, 0.785931107884532))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)))OR(((((vt0.c0)OR(t0.c2)))AND(t0.c0)))))OR(NULL)) FROM vt1, t0 NOT INDEXED, vt0 WHERE (((((((x'b167') BETWEEN (')PR') AND (NULL)))OR((x'' IN ()))))OR(((0.6542685669922398)GLOB(0.7419775422663024))))); -- 0ms;
SELECT DISTINCT ((0.7427499604064361 COLLATE NOCASE)<<(CAST(vt1.c1 AS NUMERIC))) FROM vt1, t0, vt0 GROUP BY 'o!d5(<X' HAVING ((CASE WHEN t0.c0 THEN t0.c2 END)|(((t0.c0)OR(t0.c0)))); -- 0ms;
SELECT DISTINCT (((t0.c2 IN ())) NOT BETWEEN (CASE vt1.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) AND ((((vt0.c0, t0.c1, vt1.c1))<((t0.c2, vt0.c0, vt1.c2))))) FROM vt1;SELECT 0X7f3c41df FROM t0, vt1, vt0 WHERE ((CASE WHEN '-404091290' THEN '+y' END IN ())); -- 0ms;
SELECT DISTINCT vt1.c2, ((TRIM(DISTINCT vt0.c0, t0.c1)) NOT BETWEEN ((((vt1.c1, vt1.c2, t0.c0))<((t0.c1, vt0.c0, '-180369165')))) AND (CASE '-521611661'  WHEN t0.c0 THEN vt1.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN vt1.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)), ((CAST(vt0.c0 AS REAL))<=(((vt1.c0) IS FALSE))) FROM t0 WHERE ((((('S13W') IS TRUE))GLOB(((x'42e155c4')>(0Xffffffff93de2886))))) UNION ALL SELECT DISTINCT ((CAST(vt1.c2 AS REAL)) IS TRUE), (NOT ((NOT (t0.c1)))), CAST((NOT (vt1.c1)) AS TEXT) FROM vt0 LIMIT 180252067;SELECT DISTINCT vt1.c0 FROM vt1, t0, vt0; -- 0ms;
SELECT DISTINCT (- (t0.c2)), ((((0x67b23f81 COLLATE RTRIM)OR(((vt1.c2)=(vt1.c1)))))AND((+ (vt1.c0)))), RANK() OVER (), ((vt1.c1 COLLATE RTRIM) BETWEEN (0x36de1090) AND (((vt0.c0)LIKE(vt1.c0)))), (((~ (t0.c1))) NOTNULL) FROM t0 WHERE ('1305532626');SELECT ALL (((+ (t0.c0))) NOTNULL), ((((((((CASE vt1.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE t0.c2 END)OR(COUNT(*))))OR(((vt0.c0)==('')))))OR((vt0.c0 IN (x'')))))AND(((vt1.c1)AND(t0.c0)))), ((((t0.c2)IS NOT(t0.c2)))GLOB(CASE WHEN x'' THEN vt1.c1 ELSE t0.c2 END)) FROM vt1, vt0 WHERE (COALESCE(((1.925725911E9)/(0.23123708411583865)), ((((7.4327381E7)AND(x'')))OR(x'8149')), '-180369165' COLLATE RTRIM, (((x'8b3f3674'))!=(('-250645571')))));SELECT DISTINCT ((((t0.c2)OR(t0.c1))) NOT BETWEEN (((vt1.c1)=(t0.c1))) AND (vt1.c2)) FROM vt0, t0, vt1 WHERE (((~ ('-994364099')) IN ())); -- 0ms;
SELECT DISTINCT MIN(LIKELIHOOD(DISTINCT t0.c0, 0.8043878893923087)), ((vt1.c2 COLLATE RTRIM) NOT NULL), vt1.c1 FROM vt0, t0;SELECT DISTINCT ((CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (MIN(t0.c0)) AND (((vt1.c2)AND(vt1.c1)))) FROM vt1;SELECT ALL ((+ (t0.c0)) IN ()) FROM t0, vt1, vt0 WHERE ((((((('''~') BETWEEN (0x41bb4550) AND (x'')))AND((0.6179234086602554 IN ()))))AND((x'84ce' IN ())))) GROUP BY vt1.c1 HAVING ((((vt1.c2)IS(vt0.c0))) IS FALSE); -- 1ms;
SELECT (NOT ((vt1.c1 IN (vt0.c0)))), UPPER(CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END), ((((t0.c0))<>((vt1.c2))) IN ()) FROM vt1;SELECT DISTINCT CAST(((vt0.c0)-(x'ba62')) AS NUMERIC) FROM vt0, t0 GROUP BY DATE((vt1.c1 IN ()), (((t0.c2)) NOT BETWEEN ((0.6226788025624175)) AND ((vt1.c1))), NULL, ((((vt0.c0)AND(vt0.c0)))OR(vt1.c2)), vt1.c0 COLLATE RTRIM), '', (-3.05540363E8 COLLATE BINARY IN ());SELECT DISTINCT CASE ((x'44574c77')>>(vt1.c1))  WHEN ((t0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) THEN GROUP_CONCAT(vt1.c2) WHEN MIN(vt1.c1, x'', vt1.c1, vt1.c1) THEN t0.c1 WHEN ((t0.c0) NOT BETWEEN (vt1.c2) AND (t0.c1)) THEN MAX(vt1.c1) ELSE ((t0.c1) NOTNULL) END FROM vt0, vt1;SELECT DISTINCT t0.c2 FROM t0, vt1 ORDER BY vt1.c0; -- 0ms;
SELECT ALL CASE WHEN (NOT (t0.c0)) THEN ((vt1.c1) IS FALSE) WHEN ABS(DISTINCT t0.c2) THEN ((t0.c2)/(vt1.c1)) WHEN ((((vt1.c0)AND(vt1.c0)))AND(t0.c1)) THEN vt1.c2 COLLATE RTRIM END FROM vt0 WHERE ((((-18740934)||(0.15872753055789812)) IN ()));SELECT ALL (((0xffffffffeffb560c IN ())) IS TRUE) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)AND(vt0.c0)))&(LENGTH(t0.c1))) FROM vt1;SELECT DISTINCT ((((- (vt1.c0))))>=(('557994893'))), (((vt1.c2))<=((vt0.c0))) COLLATE RTRIM, CHANGES() FROM vt0;SELECT ALL (~ (SQLITE_SOURCE_ID())) FROM t0 WHERE (CAST(x'b0e8' AS TEXT) COLLATE BINARY) ORDER BY (((0xffffffffa28967bc IN (0.23857717864883))) BETWEEN ((+ (vt0.c0))) AND (t0.c2)) ASC  NULLS LAST, CASE WHEN CHANGES() THEN LIKELY('GF?_h6') WHEN (((t0.c1, vt0.c0, t0.c0, t0.c1, 0xffffffffd1183eda))<=((t0.c0, t0.c2, t0.c2, vt1.c2, vt1.c0))) THEN (vt1.c2 IN ()) WHEN ((((((((((((x'')OR(0.18340360774555997)))AND(t0.c1)))AND(t0.c2)))OR(t0.c0)))OR(t0.c2)))AND(t0.c1)) THEN (((t0.c2))=((t0.c0))) END ASC;SELECT DISTINCT (((((t0.c2) BETWEEN (vt1.c0) AND (t0.c1))))<(((- (vt0.c0))))), (+ (vt1.c1)) COLLATE NOCASE, (((((vt1.c0)AND(vt1.c0)))AND(t0.c0)) IN (CAST(vt0.c0 AS INTEGER))) FROM t0;SELECT ((CAST(t0.c0 AS NUMERIC))<=(((((((((767118086)OR(t0.c2)))AND(t0.c2)))AND(vt1.c0)))OR(t0.c1)))) FROM vt0, t0;SELECT GROUP_CONCAT(COALESCE(x'', t0.c2, vt1.c1, vt1.c0)) OVER () FROM t0 WHERE (((ABS(x'')) NOT BETWEEN (((0.8180764688594729) IS TRUE)) AND ((('')%(x'')))));SELECT DISTINCT ((((((x'') ISNULL))OR(((vt1.c1) IS FALSE))))AND((((t0.c0, NULL, -6.91883975E8))<((vt1.c2, vt1.c2, t0.c1))))), MIN((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0)))), (NOT (((t0.c0)>(vt1.c2)))) FROM vt1 WHERE (((1539330740)IS NOT('')) COLLATE RTRIM);SELECT DISTINCT (~ (CASE WHEN vt1.c1 THEN vt1.c2 END)) FROM vt1 WHERE (CAST(JULIANDAY(0.034039933509630194, 'X''ho<', x'') AS INTEGER)) GROUP BY ((((vt1.c1) ISNULL)) NOT BETWEEN (CASE t0.c0  WHEN vt1.c1 THEN vt0.c0 END) AND (t0.c2)) HAVING (vt1.c2 COLLATE BINARY IN ());SELECT DISTINCT CASE (t0.c0 IN (vt0.c0))  WHEN t0.c0 THEN CAST(t0.c1 AS INTEGER) WHEN ((vt1.c0)AND(vt1.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c2)) WHEN ((t0.c1)|(vt1.c2)) THEN ((vt1.c0) IS FALSE) WHEN (vt1.c2 IN ()) THEN (t0.c1 IN ()) WHEN (- (vt1.c1)) THEN COUNT(*) ELSE t0.c2 END, (((((vt1.c1, x'', 0.03071328529067019))<((vt0.c0, 1.888373739E9, vt1.c1)))) IS FALSE), (('')IS NOT(t0.c2)) COLLATE BINARY FROM vt0 LEFT OUTER JOIN vt1 ON ((CASE t0.c0  WHEN 'q' THEN vt1.c0 WHEN t0.c2 THEN vt1.c0 WHEN vt1.c0 THEN x'' ELSE vt1.c1 END)AND((vt1.c1 IN ()))) FULL OUTER JOIN t0 ON 0x3debf3fa COLLATE RTRIM COLLATE BINARY ORDER BY t0.c1 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((((((('∞\rSI	5')OR(vt1.c2)))AND(t0.c1)))OR(vt1.c0)))OR(vt1.c2)))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c2)))) FROM t0 FULL OUTER JOIN vt0 ON (~ (((t0.c0) IS TRUE))) WHERE (('-925887313' IN ()) COLLATE NOCASE);SELECT DISTINCT (((t0.c0, t0.c1, vt1.c0, t0.c1, t0.c2)) BETWEEN ((MIN(vt0.c0), 1739734913 COLLATE NOCASE, (('-650283758') BETWEEN (t0.c0) AND (t0.c1)), (~ (t0.c1)), MAX(t0.c0))) AND ((((vt1.c0) NOT NULL), CHAR('죆*', t0.c2, vt1.c0), ((vt0.c0) NOTNULL), ((((t0.c1)AND(t0.c0)))OR(vt1.c2)), vt1.c0))), CAST(t0.c0 COLLATE BINARY AS NUMERIC), ((0.9775742799069148) BETWEEN (MAX(vt1.c1)) AND ((NOT (vt1.c1)))) FROM vt1;SELECT DISTINCT (('')&(((vt1.c2)>>(t0.c2)))), CAST(IFNULL(vt1.c1, vt1.c2) AS INTEGER), RTRIM(((vt1.c1)<<(vt0.c0))) FROM vt1 LIMIT -1 OFFSET 70814420;SELECT DISTINCT (((((t0.c0)|(vt1.c2))))>=((CASE x''  WHEN x'11f2' THEN t0.c0 END))) FROM vt0, vt1, t0 WHERE (((((((NULL)OR(-1127840527)))OR('onow23')))!=('' COLLATE NOCASE))) ORDER BY ((((((((((t0.c1) BETWEEN (vt1.c2) AND (vt1.c1)))OR(x'')))AND((NOT (vt1.c1)))))OR(((t0.c0) NOTNULL))))AND(CAST(t0.c1 AS REAL)))  NULLS FIRST, (- (((((NULL)AND(vt1.c2)))OR(vt0.c0)))) ASC; -- 0ms;
SELECT CASE WHEN ((vt1.c0)|(0.042572568691359614)) THEN x'47f9' ELSE ((((vt1.c2)AND(vt1.c1)))OR(t0.c1)) END FROM vt1, t0 WHERE (PRINTF(LTRIM('U,,%vbH釢', ''))); -- 0ms;
SELECT ((((vt1.c1 IN (t0.c2))))>((CAST(vt1.c1 AS TEXT)))) FROM vt0, t0 WHERE (((CAST(0.6934487445118805 AS REAL))/(CASE WHEN '-1756731732' THEN '-1881851231' WHEN '' THEN 0.5296197098588441 WHEN 0.1972057641749143 THEN x'1170' ELSE '142356829' END)));SELECT DISTINCT ABS(((vt1.c1)AND(t0.c0))) FROM t0, vt1 LIMIT 1115269281; -- 0ms;
SELECT ((((((((((((((t0.c0)/(vt1.c1)))OR(((NULL)<(vt0.c0)))))OR(((vt1.c1)<=(vt0.c0)))))OR(t0.c2 COLLATE BINARY)))AND(((vt1.c0)+(vt1.c1)))))OR((~ (t0.c1)))))OR(0.41177511840506886)) FROM vt0, t0 WHERE (CASE WHEN 0.13742090542358965 THEN '86912658' WHEN NULL THEN '1948826038' WHEN 0.05258440683049692 THEN NULL ELSE x'' END COLLATE BINARY) GROUP BY t0.c2, (((~ (t0.c1))) IS FALSE), (((vt1.c1)) BETWEEN ((('-975482377' IN ()))) AND ((vt1.c1 COLLATE NOCASE)));SELECT ALL GROUP_CONCAT((((vt1.c0))<>((vt1.c2)))) FILTER(WHERE TRIM(DISTINCT ((((((((t0.c2)OR(t0.c2)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c2)), CAST(0.3402339080196489 AS BLOB))) OVER (), (UNLIKELY(vt1.c1) IN (COUNT(*))), NULL, (((t0.c0 IN ()))IS NOT((t0.c2 IN ()))), (((vt1.c0 IN ())) NOT BETWEEN (LOWER(DISTINCT vt1.c1)) AND (SQLITE_COMPILEOPTION_USED(vt0.c0))) FROM vt0 WHERE (CAST(-1.713121679E9 AS REAL));SELECT ALL ((vt1.c0)<=(vt1.c2)) COLLATE NOCASE, ((((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))) BETWEEN (((vt1.c2)==(vt1.c2))) AND ((NOT (vt1.c2)))), CASE WHEN vt1.c2 THEN t0.c1 ELSE vt1.c1 END COLLATE NOCASE FROM vt0, t0;SELECT ((SUM(vt1.c1)) BETWEEN (((vt1.c2) ISNULL)) AND (SUM(t0.c0))), ((((((0.09634958894952161)OR('625415943')))AND('>w鹷9n(')))>=(MAX(t0.c0, vt1.c1))), ((((((((((vt1.c1) IS TRUE))OR('-1533213723')))AND(CAST(vt1.c2 AS NUMERIC))))AND(((((vt1.c0)OR(t0.c1)))OR(t0.c0)))))AND(COUNT(*))), t0.c1, SUM(((((vt1.c1)OR(t0.c2)))OR(vt1.c2))) FROM vt0;SELECT ALL (((((vt0.c0)OR(t0.c1)))OR(t0.c2)) IN ()) FROM vt0, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), CAST((NOT (vt1.c2)) AS NUMERIC), ((0Xffffffff8bb2283e)%(((((t0.c2)AND(t0.c2)))AND(vt1.c1)))), CASE NULL  WHEN ((((((((vt1.c0)OR(t0.c0)))AND(t0.c2)))OR(vt1.c1)))AND(t0.c1)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c0)) END, ((json_array(vt1.c2, t0.c1)) BETWEEN (CASE '1304957144'  WHEN t0.c1 THEN vt0.c0 WHEN 0.3187650243363104 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END) AND (((x'') BETWEEN (t0.c2) AND (t0.c1)))) FROM t0, vt1;SELECT '437689932' FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(x'') COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((vt1.c2) BETWEEN (t0.c1) AND (t0.c0)) IN ()) FROM vt0, t0; -- 0ms;
SELECT ALL CAST(((vt1.c1)%(vt0.c0)) AS TEXT) FROM t0, vt1 WHERE (((((((0.6846476621214269)OR('1691192504')))OR(x'')))>=(('[' IN ()))));SELECT DISTINCT (NOT (CAST(vt1.c0 AS BLOB))), (('9{73')IS(((vt0.c0)*(t0.c1)))), NULLIF(((t0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)), t0.c0 COLLATE BINARY) FROM vt1;SELECT ALL CASE WHEN vt1.c0 THEN (vt1.c0 IN ()) ELSE (NOT (t0.c0)) END, ROW_NUMBER() OVER ( RANGE  UNBOUNDED PRECEDING), LEAD(HEX(DISTINCT vt0.c0) COLLATE RTRIM, INSTR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(NULL)))AND(vt0.c0))), ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'ef069a4d')))>>(((vt0.c0)GLOB(vt0.c0))))) OVER () FROM vt0 LIMIT 1876974772;SELECT ALL ((vt1.c2 COLLATE BINARY)==((((vt1.c0))<((vt0.c0))))) FROM t0, vt1;SELECT DISTINCT ((((CAST(0.19201125941410557 AS TEXT))OR((+ (t0.c1)))))AND(CASE WHEN t0.c0 THEN vt1.c1 END)) FROM t0, vt0, vt1 WHERE (CASE (((0.12865811569782015))=((0xffffffffffffffff)))  WHEN ((x'7996')/(-1.326239016E9)) THEN ((x'')%(NULL)) WHEN (NULL IN ()) THEN DATETIME(0xffffffffe5bb7576, 0.07883090057662134, NULL, 'D캗', x'') WHEN (('-93127387') NOT NULL) THEN 0X275779c1 ELSE ((0.3066474614982553)IS NOT('szc\nFTc	y')) END); -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)IS(vt1.c0)) AS TEXT) FROM vt0, t0, vt1; -- 0ms;
SELECT DISTINCT ((((t0.c1 COLLATE NOCASE)AND(CAST(t0.c1 AS BLOB))))AND(CASE t0.c1  WHEN t0.c1 THEN vt1.c1 ELSE vt0.c0 END)), '1434989884', t0.c1 FROM vt1 WHERE ((((('2094476528')AND(NULL)))AND('^XlKgQ')) COLLATE NOCASE);SELECT DISTINCT CAST(CAST(vt0.c0 AS BLOB) AS BLOB) FROM vt1, vt0, t0 WHERE ('168447054'); -- 0ms;
SELECT DISTINCT COUNT(*), (((((t0.c1)LIKE(vt0.c0))))<((CAST(vt1.c2 AS REAL)))), CASE WHEN (vt1.c2 IN ()) THEN NULL END, CAST((((t0.c0))<>((t0.c2))) AS TEXT), CAST(((vt0.c0)||(vt0.c0)) AS REAL) FROM t0 ORDER BY 1826397166 DESC, t0.c0 DESC  NULLS FIRST;SELECT ((0.9062812091798569) BETWEEN (0.9308952468749173) AND (COALESCE(DISTINCT vt0.c0, t0.c2))) FROM t0, vt0, vt1; -- 0ms;
SELECT CASE CASE vt0.c0  WHEN 0.9675319690902461 THEN vt0.c0 ELSE t0.c2 END  WHEN (((t0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0))) THEN CASE vt1.c2  WHEN t0.c1 THEN t0.c1 END ELSE CASE WHEN vt1.c0 THEN vt1.c1 END END FROM t0;SELECT ALL TOTAL(CAST('853281715' AS TEXT)) FROM t0 WHERE (((('0.22670013463459993')) BETWEEN ((((NULL)/(-1011918240)))) AND (((('') ISNULL))))); -- 0ms;
SELECT DISTINCT (('y') BETWEEN (NULL COLLATE BINARY) AND (t0.c1)) FROM vt0, t0 LIMIT -431383203; -- 1ms;
SELECT ((((t0.c1)||(t0.c1))) BETWEEN (vt1.c0 COLLATE BINARY) AND (t0.c0)), ((((vt1.c1)GLOB(vt0.c0)))!=((((t0.c0))!=((NULL))))), CASE ((vt1.c2) ISNULL)  WHEN ((x'')>(vt1.c1)) THEN (+ (vt0.c0)) WHEN t0.c1 COLLATE BINARY THEN (vt1.c0 IN (t0.c0)) WHEN ((x'')*(vt1.c1)) THEN ((vt1.c0) IS FALSE) ELSE (('-338578525') NOT NULL) END FROM vt1;SELECT DISTINCT GROUP_CONCAT(vt1.c2) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((+ (vt1.c2)))>(x'')) ORDER BY ((vt1.c1 COLLATE RTRIM) IS TRUE) DESC; -- 0ms;
SELECT ALL CAST((((t0.c1, t0.c1, vt1.c1)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c1, vt1.c2, 'ﾚ*l!rl'))) AS NUMERIC) FROM t0 NOT INDEXED, vt1, vt0 ORDER BY ABS(DISTINCT 0.5749144328852396)  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((((vt1.c0)<=(t0.c0)))) AND ((CAST(vt1.c2 AS TEXT)))), (((vt1.c1, vt1.c1, vt1.c2)) BETWEEN ((t0.c2, JULIANDAY(t0.c1, vt1.c1, t0.c0, t0.c1, vt1.c0), ((vt1.c0)<(vt1.c0)))) AND (((- (t0.c0)), CHANGES(), CASE WHEN vt1.c2 THEN t0.c0 END))), MAX(vt1.c1, ((t0.c0) NOT BETWEEN (t0.c1) AND (vt1.c2))) FROM vt1, vt0, t0 WHERE (((('626623526')<>(331251069)) IN ())); -- 0ms;
SELECT DISTINCT CASE SUM(t0.c2)  WHEN (t0.c0 IN ()) THEN vt1.c2 END FROM vt1, vt0 WHERE (CAST(0.9308952468749173 COLLATE BINARY AS TEXT));SELECT ALL (NOT (((t0.c0) NOT BETWEEN ('1*)') AND (vt0.c0)))) FROM t0 WHERE (NULL) LIMIT 1244964883 OFFSET -305540363;SELECT DISTINCT ((GROUP_CONCAT(t0.c0)) NOT BETWEEN (AVG(t0.c1)) AND ((((vt0.c0))>((t0.c1))))), 0.19154852441331827, ((CASE WHEN vt1.c2 THEN 1.854322496E9 END)>=('0.9657491334044696')) FROM vt1;SELECT DISTINCT -224492454 FROM t0, vt0 WHERE ((- (1.888373739E9))); -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0)IS(vt0.c0)))), ((NULL COLLATE BINARY) BETWEEN (NULL) AND (vt1.c1)), (((((vt1.c2, vt1.c2, t0.c1))<=((NULL, t0.c2, t0.c1))))<(LIKE(t0.c1, vt1.c1, '껷'))) FROM t0, vt1;SELECT ALL (((~ (vt0.c0)))IS(MAX(t0.c2))) FROM vt0, vt1 WHERE (LIKELY((('-180369165') IS FALSE))) LIMIT 119519815 OFFSET -1326239016;SELECT DISTINCT (((t0.c2)) NOT BETWEEN (((~ (vt1.c0)))) AND ((COUNT(vt0.c0)))) FROM vt0, vt1, t0 WHERE ('*4g') GROUP BY CAST(((t0.c1) ISNULL) AS INTEGER) HAVING ((t0.c2) BETWEEN (vt1.c2) AND (vt1.c2)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT COUNT(*), LAST_VALUE((+ (IFNULL(vt1.c2, vt1.c0)))) OVER (), vt1.c2 FROM vt1; -- 0ms;
SELECT DISTINCT (CASE WHEN t0.c0 THEN 0.581155156134285 ELSE vt1.c2 END IN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) FROM vt0, vt1, t0 WHERE (((((0.6050030241649408) NOTNULL))<(((NULL)<<(1123974157))))); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN ((vt0.c0)+(t0.c1)) END FROM vt1 NOT INDEXED, t0, vt0; -- 0ms;
SELECT ALL t0.c1 FROM vt0;SELECT (NOT (t0.c2)), FIRST_VALUE(CHAR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), '-691883975', ((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))) OVER (), CASE WHEN vt1.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c2)) WHEN t0.c2 COLLATE BINARY THEN ((vt1.c0)<(1.854322496E9)) WHEN vt1.c0 THEN COUNT(-678661090) ELSE ((vt1.c2) IS TRUE) END FROM t0;SELECT DISTINCT 0.6298730570692587, ((CAST(vt1.c1 AS INTEGER)) NOT NULL), (CASE t0.c2  WHEN t0.c1 THEN vt1.c2 END IN ()) FROM vt1, vt0 GROUP BY (((CASE vt1.c2  WHEN t0.c0 THEN t0.c1 END))<=((vt1.c1 COLLATE RTRIM))), (~ (t0.c1)) COLLATE RTRIM, (vt1.c1 COLLATE NOCASE IN (((t0.c2)<(vt1.c0)))), (vt1.c0 IN (t0.c2)), ((((((vt1.c1)IS(vt1.c0)))AND((- (vt1.c1)))))OR(CAST(vt0.c0 AS TEXT))) HAVING ((((vt1.c1) ISNULL)) BETWEEN ((((vt1.c2, vt1.c0, t0.c2)) BETWEEN ((vt1.c1, vt0.c0, vt0.c0)) AND ((t0.c2, t0.c0, vt1.c1)))) AND ((t0.c1 IN ())));SELECT 0.017320762139863666 FROM vt0, t0, vt1 WHERE ((((0.0714546708927315 IN (0.5872708791066582))) NOT NULL)); -- 0ms;
SELECT (t0.c2 IN ()) COLLATE BINARY FROM vt1, vt0 WHERE (((((((NULL)AND(0.6283998625964086)))AND('䵀,'))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (t0.c2) AND (vt1.c0)) COLLATE BINARY, (t0.c1 IN ()), ((0.7773655574607119) ISNULL) FROM t0, vt0 WHERE ((+ (((0.0)>(NULL)))));SELECT ((((vt1.c1) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (CASE WHEN vt1.c0 THEN t0.c0 END) AND (CAST(vt1.c1 AS BLOB))), ((((vt1.c2) IS FALSE)) ISNULL), CASE '-1817580241'  WHEN ((((t0.c1)OR(NULL)))AND(t0.c2)) THEN ((t0.c2)OR(vt1.c1)) ELSE ((t0.c2) NOT NULL) END FROM t0, vt0, vt1 WHERE (CASE (('We5092733759588912167:700:-6037912541381785035:147:1972T161:1976--4884802801409098343T1761101615389984278 lB') BETWEEN (0.15328504865034465) AND (x''))  WHEN NULL THEN 'V溜D' COLLATE NOCASE ELSE (~ (x'0516')) END); -- 0ms;
SELECT ALL MAX(vt1.c2 COLLATE RTRIM) FROM vt1 ORDER BY ((vt1.c0) BETWEEN ('纋4fbw嫴A') AND ((- (NULL))))  NULLS LAST, (((- (vt1.c0)))>=((((t0.c1, t0.c0, vt1.c2)) BETWEEN ((vt1.c0, t0.c0, -73727324)) AND ((t0.c1, t0.c1, vt1.c1))))) ASC;SELECT ((vt1.c1)==((~ (t0.c0)))) FROM vt0, t0, vt1; -- 0ms;
SELECT ALL (NOT (vt1.c1)) COLLATE RTRIM, (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN NULL THEN t0.c1 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN t0.c0 END)) AND ((((((t0.c1)AND(t0.c0)))OR(t0.c1))))), TOTAL(((vt0.c0)=(vt1.c2))) OVER () FROM t0 ORDER BY vt1.c0;SELECT DISTINCT x'e8a4' FROM vt1, vt0, t0 WHERE (LIKELIHOOD(CASE '-232495641'  WHEN NULL THEN 0.7316287856489042 WHEN NULL THEN NULL WHEN NULL THEN 0.7717064872133207 ELSE x'' END, 0.17082278046195598)) ORDER BY CASE WHEN (t0.c0 IN ()) THEN IFNULL(DISTINCT 'Ge', 0.5298210191476599) ELSE CASE vt1.c0  WHEN '119519815' THEN vt0.c0 END END  NULLS FIRST, (((((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c2)))) NOT BETWEEN (((vt1.c2)LIKE(vt0.c0))) AND (((((((((((((t0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(t0.c2)))AND(t0.c2)))AND(vt1.c2)))AND(vt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((vt1.c2 IN ())) FROM vt1; -- 0ms;
SELECT (+ (MAX(t0.c0))), NTILE((- ((NOT (t0.c0))))) OVER (), (+ ((vt1.c1 IN (0.9657491334044696)))) FROM vt0, t0, vt1 WHERE (UPPER(TRIM(0x26b5d99f, 'zE\r袡M t\r')));SELECT ((TRIM(DISTINCT vt0.c0, t0.c2)) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND ((((t0.c1))>=((x''))))), 2.12430812E9, CASE WHEN CAST(vt1.c0 AS BLOB) THEN t0.c0 COLLATE NOCASE END, (((((((t0.c0))=((vt1.c1))))AND('-842229161')))OR(vt1.c2)), RANK() OVER () FROM vt0, t0;SELECT vt1.c2 FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((t0.c1) BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (SUM(vt0.c0)) AND (((vt1.c1) NOT BETWEEN (vt1.c2) AND (t0.c1)))) FROM t0 WHERE ((((((('0.6314131589262497')) BETWEEN (('-126486332')) AND ((NULL))), CAST(-1324879781 AS REAL), (- (x''))))>=((((0.8197617579831507) IS TRUE), CAST(x'' AS NUMERIC), (0X35f365c4 IN ())))));SELECT ((((((((((t0.c2) NOT NULL))OR(((t0.c2)-(t0.c0)))))OR(((((t0.c1)AND(vt0.c0)))AND(t0.c1)))))OR(TOTAL(vt1.c0))))AND(TRIM(t0.c2, vt1.c2))) FROM vt1, t0 WHERE ((((x'' IN (x'')))OR((((x'', 0xffffffff82fe03eb, 0.017320762139863666))<((x'', 0.49344705551256085, NULL))))));SELECT t0.c1, (GROUP_CONCAT(t0.c0) IN ()), vt1.c2 COLLATE RTRIM FROM vt0, vt1;SELECT TOTAL(IFNULL(x'', t0.c2)) OVER () FROM vt0, t0, vt1; -- 0ms;
SELECT DISTINCT (((+ ('dSp,')))GLOB(((t0.c0)OR(vt1.c2)))) FROM vt0, t0, vt1 WHERE (((('247844320' IN ())) NOTNULL)); -- 0ms;
SELECT ALL RANK() OVER (), vt0.c0, (((0.0852167728252814 IN ()))IS NOT(CAST(vt1.c0 AS NUMERIC))), CASE WHEN ABS(DISTINCT vt1.c2) THEN (t0.c1 IN ()) END, (((vt1.c1, t0.c2, -1821213643)) BETWEEN ((vt1.c1, t0.c2, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c2))) COLLATE NOCASE FROM t0 WHERE ('-888422507');SELECT DISTINCT AVG(((((vt0.c0)OR(t0.c1)))AND(vt1.c2))) OVER ( RANGE BETWEEN (- ((vt0.c0 IN ()))) PRECEDING AND 0x3f3b0555 PRECEDING EXCLUDE CURRENT ROW) FROM t0, vt1 NOT INDEXED, vt0;SELECT DISTINCT (((- (vt0.c0))) BETWEEN (CASE WHEN t0.c1 THEN t0.c1 END) AND (vt1.c1)), (((((t0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c2))))>>(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END)), CAST(((vt1.c2)=(t0.c0)) AS BLOB) FROM t0;SELECT ALL (vt0.c0 IN ()), COUNT(*) OVER (), (- (((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt0.c0)))) FROM vt1, vt0, t0 WHERE (((((x'')<>(NULL)))&((('0.26388185004058384') BETWEEN (0.8751448578912694) AND ('M'))))); -- 0ms;
SELECT DISTINCT COUNT(LIKELIHOOD(vt1.c0, 0.09994203210884212) COLLATE NOCASE) OVER (), ((((vt1.c2)LIKE(t0.c2)))>>((((vt0.c0))>=(('618598753'))))), (((vt1.c2 IN ()))>=(CASE WHEN t0.c2 THEN vt1.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((((-447356732)) NOT BETWEEN (((- (NULL)))) AND (('0.0014219176235337194'))));SELECT LAST_VALUE(CAST((((t0.c0)) NOT BETWEEN (('')) AND ((t0.c0))) AS NUMERIC)) OVER () FROM vt1, t0, vt0; -- 0ms;
SELECT DISTINCT AVG((((vt1.c1))<>((t0.c1)))) FROM vt1;SELECT DISTINCT (((((vt1.c2)) BETWEEN ((NULL)) AND ((t0.c1)))) NOT BETWEEN ((((t0.c0))>=((vt1.c0)))) AND (((((vt1.c1)OR(t0.c2)))OR(t0.c2)))) FROM vt0, t0 WHERE (((((NULL) IS TRUE))>=(NULL))) GROUP BY (CAST(vt1.c1 AS REAL) IN ()), ((((CAST(vt1.c0 AS BLOB))AND((((t0.c1)) BETWEEN ((t0.c0)) AND ((vt1.c2))))))OR((((t0.c0))<=((vt0.c0))))), t0.c0;SELECT DISTINCT vt1.c2, CASE WHEN CAST(t0.c2 AS BLOB) THEN 0.25448841563133695 END, (~ (AVG(vt1.c2))) FROM vt1, vt0, t0 WHERE (((((x'')AND(0.8887920241150866)))AND(0.9667480674312809)) COLLATE RTRIM); -- 0ms;
SELECT CUME_DIST() OVER () FROM t0, vt1 WHERE ((((((((((((0.831060944139704)OR(x'')))AND(x'')))OR(0.46697309662875786)))AND(0.6712112052589673))))!=(((- (0.1738601045473952)))))) LIMIT -1282849851 OFFSET 557906641; -- 0ms;
SELECT ALL MIN(x'9838') FROM vt0, t0, vt1; -- 0ms;
SELECT ((0.015465977603803749) NOTNULL), SUM(CAST(t0.c1 AS INTEGER)), ((vt1.c0 COLLATE NOCASE)>((('103266838') BETWEEN (vt1.c0) AND (vt1.c2)))) FROM vt1, vt0;SELECT (((((+ (t0.c2)))OR(t0.c2 COLLATE RTRIM)))OR(((0Xffffffffe88e2039) NOT BETWEEN (t0.c1) AND (vt1.c1)))) FROM vt0;SELECT DISTINCT ((CASE WHEN t0.c2 THEN vt0.c0 WHEN vt1.c1 THEN t0.c1 WHEN vt1.c1 THEN t0.c0 WHEN t0.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)IS NOT(CAST(t0.c1 AS INTEGER))), CASE ((t0.c1)-(vt1.c2))  WHEN (t0.c1 IN ()) THEN 1656372412 END, rtreenode(NULLIF(t0.c2, t0.c1), (vt1.c0 IN ())) FROM vt1;SELECT DISTINCT (((('8')&(t0.c2)))IS NOT((t0.c2 IN ()))) FROM vt1, vt0, t0 WHERE (((CASE WHEN NULL THEN 0X386020ec END) IS TRUE)) ORDER BY (((((vt0.c0)GLOB(t0.c1)), (vt1.c2 IN ()), SQLITE_SOURCE_ID(), ((vt1.c2) BETWEEN ('-1096152303') AND (vt0.c0)), t0.c2))>=((CAST(vt1.c1 AS REAL), ((vt1.c2)||(vt0.c0)), ((((t0.c1)AND(t0.c1)))OR(t0.c0)), CAST(t0.c0 AS REAL), ((t0.c0) NOT BETWEEN (t0.c0) AND (x'')))))  NULLS FIRST, NULL DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT MAX('TRUE'), ROW_NUMBER() OVER (), 0.09633204177710941 FROM vt1; -- 0ms;
SELECT DISTINCT (((~ (vt1.c1))) IS FALSE) FROM vt0;SELECT 'X~)Gw>-玺d', (+ (((((vt0.c0)AND(t0.c2)))AND(vt0.c0)))), (((vt1.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN 0.6610926934218496 ELSE vt1.c0 END)) AND ((((vt1.c1)/(vt0.c0))))) FROM vt1, vt0, t0 ORDER BY ((CASE WHEN vt1.c2 THEN vt1.c0 END) ISNULL); -- 0ms;
SELECT ALL LOWER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c1 ELSE t0.c2 END), (CASE t0.c2  WHEN vt1.c2 THEN t0.c0 ELSE vt1.c0 END IN (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END)), vt1.c0, AVG('恺6') OVER (), (+ ((((t0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))))) FROM t0 WHERE ((('!4⺒,US4') IS TRUE) COLLATE RTRIM) GROUP BY (vt0.c0 IN ()) COLLATE NOCASE;SELECT ((load_extension(NULL))!=(vt1.c1)) FROM vt0, t0, vt1 WHERE (((CASE WHEN NULL THEN NULL WHEN NULL THEN '' WHEN 0.40547500368786493 THEN NULL END) BETWEEN (((x'0d29')<(1628122451))) AND (CAST(NULL AS TEXT)))); -- 0ms;
SELECT ALL (- ((vt1.c0 IN (vt1.c1, vt1.c1)))) FROM t0, vt1, vt0 ORDER BY ((((((vt1.c1)<=(vt1.c2)))AND(((t0.c0)|(t0.c0)))))AND(vt0.c0 COLLATE BINARY))  NULLS FIRST; -- 1ms;
SELECT DISTINCT (NULL IN ()) FROM vt0 WHERE (((CAST('' AS REAL))>(NULL))); -- 0ms;
SELECT DISTINCT '^XlKgQ' FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN vt1.c1 THEN t0.c0 END)IS(COUNT(vt1.c2))), ((vt1.c2) NOT BETWEEN (vt0.c0) AND (t0.c1 COLLATE BINARY)), ((vt0.c0)>(t0.c2)) COLLATE NOCASE FROM vt0 WHERE (((((CASE WHEN '0.48400046321671475' THEN x'' WHEN 0.9863241436365622 THEN NULL WHEN NULL THEN NULL WHEN 0x17e47582 THEN '-1586023999' WHEN x'' THEN 0.07559423244735275 END)AND(CAST(0.20441051594565995 AS INTEGER))))OR((NOT ('')))));SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((TOTAL(t0.c1)))) FROM vt1;SELECT ALL (NOT ((((t0.c0)) BETWEEN (('')) AND ((t0.c2))))) FROM vt0, vt1 WHERE ((('0.6423498455589189' IN ()) IN (((NULL)GLOB(x'')))));SELECT ALL vt1.c1 FROM vt0, vt1; -- 0ms;
SELECT CAST((vt0.c0 IN ()) AS REAL) FROM t0 WHERE ((((0Xffffffff954a643a IN (0xffffffffd2300151))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((t0.c2) NOT NULL)) BETWEEN (0.8529699110099244) AND (((vt1.c0)>=(vt0.c0)))) FROM t0 WHERE (((((((NULL)GLOB('-925887313')))AND((((NULL))!=((-804954038))))))AND(((0.6349709416461712) NOTNULL))));SELECT ALL vt1.c0 FROM vt0, t0, vt1 WHERE ((((CASE WHEN x'd8e0' THEN '0.05382881397290218' ELSE 0X1b5902be END, (((('B%{ꎾt')OR(0.12320870443546672)))OR(NULL)), ((NULL) NOTNULL)))<((((('-2067141567')) NOT BETWEEN ((x'58b8')) AND ((-250645571))), (('-338578525')/(x'ac4b')), ((0x67b23f81)<>(-1885037528)))))); -- 0ms;
SELECT ALL (- (LTRIM(vt1.c0))) FROM vt1, vt0 WHERE (((((NULL) NOT BETWEEN (NULL) AND (x'')))>>((('-1790286790')<<(x''))))) ORDER BY HEX(DISTINCT ((vt1.c2)IS NOT(vt1.c1))) DESC  NULLS FIRST, (((t0.c2)GLOB('4 ')) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE (((x'9fd8'))<((t0.c2)))  WHEN x'6747' THEN ((vt1.c0)%(vt1.c2)) END FROM t0 WHERE ((+ ((- ('')))));SELECT ALL TOTAL((NOT (t0.c2))) OVER () FROM vt0, t0 WHERE (CAST(TYPEOF(DISTINCT 0.16792048702509987) AS INTEGER)); -- 0ms;
SELECT ALL ((~ (635081582)) IN ()), '909538248', ((((t0.c2 IN ())))==((UPPER(DISTINCT vt0.c0)))) FROM vt0, t0 ORDER BY (((t0.c0 IN ()))-(vt0.c0)); -- 0ms;
SELECT TYPEOF(0.6195479645676123) FROM vt0, vt1, t0 WHERE (CAST((('')+(1125375676)) AS TEXT)); -- 0ms;
SELECT ALL (vt1.c0 COLLATE NOCASE IN ()) FROM vt0, vt1 WHERE (((((('0.23215838708289505' IN ()))AND(UPPER(x'771b'))))OR((- (NULL))))); -- 0ms;
SELECT ALL (((((((t0.c1)) BETWEEN ((vt1.c2)) AND ((t0.c0))))AND((NOT (t0.c2)))))OR(t0.c0 COLLATE RTRIM)) FROM t0;SELECT DISTINCT ((((((vt1.c0)IS(vt1.c1)))AND(CAST(vt1.c1 AS NUMERIC))))AND(((vt1.c1) BETWEEN (t0.c2) AND (t0.c2)))) FROM t0, vt0 WHERE ((~ ((NULL IN ()))));SELECT DISTINCT CASE WHEN (vt1.c0 IN (vt0.c0)) THEN COALESCE(vt0.c0, t0.c1, t0.c2, vt0.c0) ELSE CAST(vt1.c1 AS REAL) END FROM vt1, t0, vt0 GROUP BY (((vt0.c0 IN ())) NOT NULL) HAVING ((((CAST(vt1.c0 AS INTEGER))OR(json_type(t0.c2))))AND(((((vt0.c0)AND(t0.c2)))AND(vt1.c2)))); -- 0ms;
SELECT ALL CASE WHEN ((vt1.c1) ISNULL) THEN t0.c1 END FROM vt1, t0, vt0; -- 0ms;
SELECT ALL TYPEOF(DISTINCT t0.c0 COLLATE RTRIM) FROM t0, vt1, vt0 WHERE (((('365605154')) BETWEEN ((((NULL)>=(0.18340360774555997)))) AND (((((-2.32495641E8, '', 0.20970850693307674)) BETWEEN ((NULL, '2鶪>+', 0.42589118638156354)) AND ((x'', 0.48400046321671475, x'b9a2'))))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt1.c1)OR(vt1.c1))) FROM vt0, vt1 ORDER BY ((0.7481199764731845) BETWEEN (t0.c0) AND (t0.c1)) COLLATE RTRIM DESC;SELECT ALL ((((vt1.c2)<>(vt1.c0)))>(UPPER(vt1.c0))), TYPEOF(LIKELIHOOD(DISTINCT t0.c2, 0.13519945855688908)), ((vt1.c1) BETWEEN (vt1.c1) AND (t0.c0)) FROM vt1 WHERE (((x'') IS TRUE) COLLATE RTRIM) ORDER BY json_array_length((NOT (vt1.c1)), CAST(x'' AS TEXT)) ASC;SELECT ((((vt1.c1)||(t0.c1)))<(((vt0.c0) BETWEEN (t0.c2) AND (vt1.c2)))) FROM vt1, vt0;SELECT (((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(vt0.c0)) FROM vt1 WHERE (0X52d2d71f) LIMIT 2138578815 OFFSET -1093833315;SELECT DISTINCT ((((((vt1.c1) NOT NULL))AND(((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))AND(vt1.c2)))AND(x'')))))AND(vt1.c1 COLLATE RTRIM)) FROM vt1, t0, vt0 WHERE ((x'' COLLATE NOCASE IN (((((NULL)AND(NULL)))OR('-186670796'))))); -- 0ms;
SELECT CASE WHEN vt1.c2 COLLATE RTRIM THEN 0x40223f58 END, (('')<<(CAST(vt1.c0 AS BLOB))), (NOT ((vt0.c0 IN (t0.c2)))) FROM vt1 WHERE (((((x'b966')<<(NULL)))%(((0.02394864056376189) BETWEEN (x'') AND (x''))))) GROUP BY vt1.c2, ((((t0.c0) BETWEEN (vt0.c0) AND (vt1.c2))) ISNULL), vt0.c0 LIMIT -1918172496 OFFSET 1628122451;SELECT COUNT(*) FROM vt1, vt0, t0 LIMIT 1350311621; -- 0ms;
SELECT ALL (((LOWER(t0.c1), ((vt0.c0) IS TRUE), CAST(vt1.c0 AS BLOB)))=((vt0.c0 COLLATE BINARY, GROUP_CONCAT(t0.c2), CASE WHEN vt1.c2 THEN vt1.c1 END))) FROM vt0, t0;SELECT ALL GROUP_CONCAT((('') BETWEEN (t0.c0) AND (t0.c2))) OVER (), PERCENT_RANK() OVER (), ((CAST(t0.c2 AS INTEGER)) NOT NULL) FROM vt0 WHERE ((((((NULL)) NOT BETWEEN ((1385516745)) AND ((0.007017341404177757))))IS NOT((('')IS('')))));SELECT ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (((((vt1.c2)AND(t0.c1)))AND(t0.c0))) AND (COUNT(t0.c1))) FROM vt0, vt1 WHERE (CAST(((((0.7140188415234178)OR(NULL)))OR('-129284367')) AS REAL)) LIMIT 1989804474;SELECT DISTINCT ((((((((((vt0.c0)AND(vt1.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c1))) IS FALSE) FROM vt1 WHERE (CASE WHEN CASE WHEN '{.V\Xq礼' THEN x'' END THEN ((0.16873918628978868)/(NULL)) WHEN (('0.5455704735599424')GLOB(-1324389429)) THEN NULL WHEN CAST(-806280029 AS REAL) THEN (- ('\r띀by ^I')) ELSE (+ (0.625097662846353)) END) ORDER BY (('-925887313')<<(vt1.c2 COLLATE BINARY));SELECT ALL NULL FROM vt0; -- 0ms;
SELECT DISTINCT (((+ (0X7d4d3d47)))%(vt1.c2 COLLATE BINARY)), (((vt0.c0)) NOT BETWEEN ((CAST(t0.c2 AS TEXT))) AND ((((((((((((((vt1.c1)AND(vt0.c0)))AND(NULL)))AND(x'6d4e')))OR(t0.c1)))OR(t0.c1)))OR(t0.c2))))), SUM(((((vt0.c0)AND(vt1.c1)))OR(t0.c2))) FROM t0, vt0, vt1; -- 0ms;
SELECT MIN(((vt1.c1) NOT NULL)) FROM vt0, vt1, t0 LIMIT -32363343 OFFSET 131919077; -- 0ms;
SELECT ALL CAST((vt1.c1 IN ()) AS NUMERIC), AVG(HEX(vt1.c1)), DENSE_RANK() OVER () FROM vt0, t0, vt1 WHERE ((((0.9836222191835035, ')p췠cR#', x'', x'', NULL)) BETWEEN ((((NULL)<(x'17bd')), '0-' COLLATE RTRIM, 'n>', ((NULL) NOTNULL), CAST(NULL AS NUMERIC))) AND (('' COLLATE NOCASE, ((((((((0.870667643080165)AND(x'e5e5a50e')))OR(x'')))OR(0.8467525776155366)))OR('yjlE	0{')), (0.5591995392171282 IN ()), (- (0.19782526295773117)), (NOT (0.2341515903791721)))))); -- 0ms;
SELECT DISTINCT ((- (vt1.c0)) IN ()) FROM vt0, vt1 WHERE ((- (((x'') NOT BETWEEN (NULL) AND (0.18035487519012428))))); -- 0ms;
SELECT ((((vt1.c2) IS FALSE)) ISNULL) FROM vt1 WHERE (CAST(CASE WHEN '-309493554' THEN '' ELSE -1367578465 END AS BLOB)); -- 0ms;
SELECT DISTINCT ((((((((vt1.c0)OR(t0.c1)))OR(vt1.c0)))AND(NULL)))AND(((vt0.c0)OR(t0.c1)))) FROM vt0;SELECT ((((t0.c2)OR(t0.c2))) IS TRUE) FROM vt1, t0; -- 0ms;
SELECT DISTINCT '', (((((vt1.c0))<=((t0.c0)))) ISNULL), ((CAST(t0.c1 AS BLOB))IS NOT(((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))) FROM vt1, vt0 WHERE (LIKELIHOOD(DISTINCT (('g-(/D|u') NOT BETWEEN (NULL) AND (NULL)), 0.11636591275166397));SELECT DISTINCT COUNT(((t0.c0)%(vt0.c0))) COLLATE NOCASE, ((vt1.c0) NOT NULL) COLLATE NOCASE, PERCENT_RANK() OVER () FROM t0, vt0 WHERE (((CASE WHEN x'' THEN x'' END) IS TRUE));SELECT vt0.c0 FROM vt0, vt1, t0; -- 0ms;
SELECT (~ (t0.c1)) COLLATE NOCASE FROM vt1, t0 WHERE ((('DK') NOT BETWEEN (((('')) BETWEEN ((x'')) AND ((NULL)))) AND (CAST(x'' AS BLOB)))); -- 0ms;
SELECT DISTINCT (~ (vt0.c0)) FROM vt1, t0;SELECT (((vt1.c1)>(t0.c2)) IN ()) FROM t0; -- 0ms;
SELECT CASE (vt0.c0 IN (vt1.c0))  WHEN ((((vt0.c0)OR(t0.c1)))OR(t0.c2)) THEN t0.c2 ELSE ((0.39789033011847663) NOTNULL) END FROM t0 WHERE (CAST(CASE WHEN 0xffffffff9545d0c6 THEN '-1951258562' WHEN NULL THEN NULL WHEN 0.7918364829268457 THEN NULL ELSE NULL END AS TEXT)) ORDER BY (((vt1.c1 IN ()))||(CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST, ((((vt1.c0) BETWEEN (0.6028913166111318) AND (vt1.c1)))>((vt1.c0 IN (vt0.c0)))), NULLIF(vt1.c2, vt0.c0) COLLATE RTRIM  NULLS LAST;SELECT DISTINCT (((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((1634100017, (~ (vt1.c1)), CAST(vt1.c2 AS REAL))) AND ((json_extract(t0.c0, t0.c1), (+ (vt1.c1)), (((t0.c0, t0.c0, t0.c1)) BETWEEN ((x'', vt1.c2, vt0.c0)) AND ((vt1.c0, t0.c2, vt1.c2)))))), (((- (t0.c2)))<=(((vt1.c0)&(vt1.c2)))), (((((t0.c2)&(t0.c0))))<>((((t0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) FROM t0, vt0, vt1 WHERE (((CAST(NULL AS REAL))LIKE(-201174786 COLLATE RTRIM))); -- 0ms;
SELECT ALL (- (((vt0.c0)-(t0.c2)))) FROM vt1, t0, vt0 WHERE (CASE NULL  WHEN '-1257941199' THEN NULL ELSE -6.91883975E8 END COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (0.7192397980863472) AND (((((t0.c0)AND(t0.c2)))OR(vt1.c2)))), ((CAST(vt1.c2 AS BLOB)) NOTNULL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0)GLOB(t0.c2)) ELSE ((vt1.c0)||(t0.c1)) END, ((((t0.c1) IS TRUE))>((vt0.c0 IN ()))), LAST_VALUE((((((((((vt0.c0)OR(t0.c1)))OR(t0.c1)))AND(vt0.c0)))OR(t0.c2)) IN (t0.c2, highlight(vt0.c0, t0.c1, x'7f1d', t0.c1)))) OVER () FROM vt0, t0 GROUP BY CASE ((((NULL)AND(0.5999792413359261)))OR(1.826397166E9))  WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t0.c1, vt1.c0, vt0.c0))) END;SELECT DISTINCT AVG(CASE WHEN vt1.c1 THEN vt1.c1 ELSE -1693513220 END COLLATE NOCASE), (MIN(vt1.c1) IN ()), ((((((((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c1)))AND(((vt0.c0) IS FALSE))))AND(((((vt0.c0)AND(vt1.c2)))OR(t0.c2)))))OR((((NULL))=((vt1.c1))))))AND(((((vt1.c1)AND(t0.c1)))AND(0.6272369392200537)))) FROM vt1, vt0, t0; -- 0ms;
SELECT (NOT (t0.c0 COLLATE BINARY)), TOTAL(((t0.c1) ISNULL)), LEAD(((t0.c2)!=(t0.c1)) COLLATE BINARY, (NOT (((t0.c2) IS FALSE))), ((((((t0.c2)AND(t0.c0)))AND(t0.c1)))>(0Xffffffffb84b96ef))) OVER (), CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM, (((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2)))) ISNULL), (((NOT (vt1.c0)))IS NOT(vt1.c0)), ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END)OR(((vt1.c2)&(t0.c2)))))OR(((t0.c2) ISNULL))) FROM t0 GROUP BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((t0.c0) IS TRUE))) HAVING MIN(((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)));SELECT ROW_NUMBER() OVER () FROM vt1, vt0 WHERE (CASE WHEN '' THEN x'' END COLLATE BINARY) LIMIT 1644920727; -- 0ms;
SELECT LIKELY(DISTINCT ((t0.c0) IS FALSE)), NTH_VALUE(CAST(vt0.c0 COLLATE RTRIM AS BLOB), ((CAST('1355562018' AS NUMERIC))>(vt1.c2))) OVER (), ((UNLIKELY(DISTINCT t0.c0)) BETWEEN ((((t0.c2))>=((vt1.c1)))) AND (((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c2)))) FROM vt1, vt0, t0 WHERE (1.703358773E9) LIMIT 468826529; -- 1ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) AND ((((t0.c1) IS TRUE)))), vt1.c1, ((((((NULL) NOT NULL))AND(t0.c2)))OR(SUM(vt1.c2))) FROM t0, vt1 WHERE (((((NULL) NOT BETWEEN (x'') AND ('1854322496')))-(CAST(0.395821896920561 AS REAL))));SELECT DISTINCT FIRST_VALUE(CASE WHEN 0.6423498455589189 THEN ((t0.c0)GLOB(NULL)) ELSE ((((((((vt0.c0)AND(vt1.c0)))OR('H㚄')))AND(vt1.c0)))OR(vt1.c1)) END) OVER ( GROUPS  CURRENT ROW EXCLUDE TIES) FROM t0, vt1, vt0 WHERE (UPPER(json(0.4728087019623314))) GROUP BY ((((((((((x'b4e4e875') NOT BETWEEN (t0.c1) AND (vt1.c1)))OR(((vt1.c1)OR('-175861047')))))AND(CAST(vt1.c1 AS TEXT))))OR(x'd2aa')))OR(((vt1.c0)<<(vt1.c2)))); -- 0ms;
SELECT DISTINCT CAST(((((((((vt0.c0)AND(vt1.c0)))OR(t0.c1)))OR(5028239)))AND(vt1.c1)) AS INTEGER), CUME_DIST() OVER (), x'' FROM t0, vt1 WHERE (((('M9YDBX' IN ()))LIKE((((('a&AVU')OR(NULL)))OR(x'')))));SELECT ALL SQLITE_VERSION() FROM vt0; -- 0ms;
SELECT (- (((vt1.c1)&(vt0.c0)))) FROM vt1, vt0 WHERE (HEX(CASE 0.37384177808445784  WHEN x'' THEN x'' WHEN NULL THEN NULL WHEN 0.8995944132583416 THEN 0.3975658215599448 ELSE 0X12769336 END)); -- 0ms;
SELECT DISTINCT CASE WHEN ((((t0.c2)AND(t0.c2)))AND(t0.c2)) THEN ((0.15890353769797838)-(t0.c0)) ELSE (- (t0.c1)) END, ((((((((((((((((vt1.c1)AND(vt1.c2)))AND(vt1.c1)))OR(t0.c0)))OR(t0.c0)))AND(vt1.c2)))AND(vt1.c0)))OR(((0.29420843270763286)IS(vt0.c0)))))OR((((vt0.c0, vt1.c0, vt1.c0))>=((t0.c2, t0.c1, vt1.c1))))), LAST_VALUE('168116652') OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM t0;SELECT ((CASE vt1.c1  WHEN vt0.c0 THEN NULL END) NOT BETWEEN (((((vt1.c1)AND('1355562018')))OR(t0.c1))) AND (((((t0.c0)AND(t0.c1)))OR(vt0.c0)))), x'3623', QUOTE(0.3210233922599608 COLLATE NOCASE) FROM vt1, vt0, t0 GROUP BY LENGTH(((((vt1.c1)OR(t0.c2)))AND(vt1.c1))); -- 0ms;
SELECT ALL (NOT (((((((((vt1.c1)AND(t0.c0)))OR(t0.c0)))OR(vt1.c1)))AND(vt1.c0)))) FROM vt0, vt1 WHERE (CASE WHEN (((x'', x'', -2.50645571E8))!=(('pIS鏌UK0헮', '(%L', x''))) THEN ('0.6283998625964086' IN (x'ebd1', 0.20627762224440338)) WHEN ((((((((0.20187620238989623)OR(NULL)))OR(0.39222017715873514)))OR('➰0烰')))AND(0.4122407601605116)) THEN ((NULL) ISNULL) WHEN '' COLLATE RTRIM THEN ((0.3918642544832588) BETWEEN (x'') AND (0.278108564216328)) ELSE x'' COLLATE RTRIM END);SELECT DISTINCT (((x'' IN (t0.c0, t0.c0))) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (7.4327381E7 COLLATE NOCASE)), SUM((~ (vt0.c0)) COLLATE RTRIM), ((vt1.c0)||(vt1.c0)) COLLATE BINARY FROM t0, vt0 ORDER BY ((((+ (t0.c1)), ((t0.c1)-(vt1.c2)), '1475123581'))>((vt1.c2, (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))), ((vt1.c1) IS FALSE)))) ASC;SELECT ALL (+ (vt0.c0 COLLATE RTRIM)) FROM t0 GROUP BY (((~ (vt1.c0)))<<(((((vt1.c2)AND(vt1.c1)))OR(vt1.c0)))), CASE ((vt1.c0) NOT NULL)  WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c2)>>(vt1.c1)) ELSE (+ (t0.c0)) END, (((~ (vt1.c1)))+(vt1.c2 COLLATE NOCASE));SELECT COUNT(*), ((((vt0.c0))>((t0.c1))) IN ()), PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT ((((((t0.c2) NOT BETWEEN (vt1.c0) AND ('-1458125244')))AND(((vt1.c0) ISNULL))))OR((t0.c0 IN ()))) FROM vt1, vt0 WHERE (((RTRIM(0.7983191329337034))||('1881888084')));SELECT ALL t0.c0 FROM t0 GROUP BY ((((CAST(t0.c0 AS TEXT))AND(CASE WHEN vt1.c0 THEN vt1.c2 END)))AND(CASE WHEN vt0.c0 THEN vt1.c2 WHEN t0.c2 THEN t0.c1 WHEN vt1.c0 THEN t0.c0 ELSE t0.c1 END)) HAVING t0.c1;SELECT ((0.33980743517563394)-(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)) FROM vt0, t0 WHERE (CASE WHEN ((((x'')OR(0.738569294238091)))OR('nM{c7NaNcg*')) THEN ((NULL)&(x'7586')) ELSE ('BMZzB' IN (NULL, 822602987)) END);SELECT ALL ((t0.c0 IN (t0.c2)) IN ()) FROM vt0 WHERE ((UNLIKELY(DISTINCT x'') IN ())); -- 0ms;
SELECT ((vt1.c1)||(402369412)) COLLATE NOCASE FROM vt1, t0, vt0 WHERE ((~ ((0.056102149269949386 IN ())))) LIMIT -1542513252; -- 0ms;
SELECT DISTINCT ((vt1.c1) BETWEEN (MAX(vt1.c0)) AND (vt1.c0 COLLATE RTRIM)), ((t0.c1) IS FALSE) COLLATE BINARY, LEAD((((CASE vt0.c0  WHEN t0.c1 THEN t0.c0 END))<>((((t0.c1)*(t0.c1))))), CASE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN ((t0.c1)%(t0.c2)) THEN (~ (t0.c1)) ELSE (((t0.c2, 'Ym_HD', t0.c2, 0.35234240753475143, t0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c0, t0.c1, t0.c0)) AND ((t0.c0, t0.c2, t0.c2, -2.32495641E8, t0.c2))) END, CAST(((t0.c2)AND(t0.c1)) AS TEXT)) OVER () FROM t0, vt0 NOT INDEXED;SELECT ((((((((CAST(vt1.c1 AS NUMERIC))AND(((vt0.c0)IS NOT(t0.c2)))))AND(((t0.c1) ISNULL))))OR(((((vt0.c0)AND(t0.c2)))AND(vt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt1.c2) AND (t0.c1)))), ((UNLIKELY(DISTINCT t0.c2)) NOT BETWEEN (((vt1.c1)>(vt1.c0))) AND (COALESCE(vt1.c1, vt1.c0))), CASE TOTAL(t0.c0)  WHEN CASE vt1.c0  WHEN vt1.c2 THEN t0.c0 ELSE t0.c1 END THEN ((((vt1.c2)AND(vt1.c0)))OR(vt1.c2)) END FROM vt1, vt0 GROUP BY ((INSTR(t0.c1, vt0.c0)) NOT BETWEEN (LTRIM(x'')) AND (((('', NULL, vt1.c1)) BETWEEN ((t0.c0, vt1.c2, vt1.c2)) AND ((vt0.c0, vt1.c0, t0.c0))))) HAVING ((((((((((t0.c0) BETWEEN (vt1.c1) AND (t0.c2)))AND(0.6179234086602554)))AND(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)))AND('643739532')))AND(((vt1.c1)|(t0.c2)))) ORDER BY ((((((((((t0.c0)OR(vt0.c0)))AND(t0.c1)))OR(vt1.c1)))AND(vt1.c0))) IS TRUE) ASC  NULLS LAST;SELECT CAST(ABS(t0.c2) AS TEXT) FROM t0, vt1 WHERE ((('/e3' COLLATE NOCASE) BETWEEN ((('-215720108')/(x''))) AND (UNLIKELY(0.8492984246700028)))) GROUP BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB), ((((t0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c2)))<=(CASE WHEN t0.c0 THEN t0.c0 END)), ((CASE t0.c2  WHEN vt1.c0 THEN vt1.c1 END) IS TRUE), ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))) ISNULL), (highlight(vt1.c1, vt1.c2, vt1.c0, t0.c0) IN ()) HAVING -328219767 COLLATE BINARY ORDER BY ((t0.c2)+(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;SELECT DISTINCT LOWER(DISTINCT CAST(vt1.c1 AS TEXT)) FROM vt0, vt1 WHERE ((((x'' COLLATE RTRIM))>((((0x697d26c2)!=('∞\rSI	5')))))); -- 0ms;
SELECT DISTINCT ((MIN('-1862172898')) NOTNULL) FROM t0 INTERSECT SELECT DISTINCT (~ (0.2590380889416489)) FROM vt0 WHERE (CASE WHEN ((0.9211417130587108) BETWEEN (x'') AND ('<i*l^H{)|')) THEN ((0.8118270518126992)>=(x'7e7d')) END); -- 0ms;
SELECT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))), ((vt1.c2)-(vt1.c1)), ((vt1.c1)>>(t0.c1))))<=(((+ (vt0.c0)), SUM(t0.c1), (t0.c2 IN ())))), COUNT((t0.c1 IN ())), t0.c1 FROM t0, vt1, vt0; -- 0ms;
SELECT ALL ((((vt1.c2) BETWEEN (t0.c1) AND (t0.c0))) NOTNULL) FROM vt0 WHERE (CASE WHEN (+ ('-309493554')) THEN (+ ('859974174')) ELSE 0.9961733517522164 END) ORDER BY ((json_patch(t0.c1, vt1.c0)) BETWEEN ((((t0.c0)) BETWEEN ((NULL)) AND ((x'')))) AND (((t0.c1)GLOB(vt1.c2)))) DESC;SELECT DISTINCT ((CAST(vt1.c1 AS REAL)) NOTNULL) FROM t0;SELECT SUM(CASE WHEN t0.c1 THEN '8*\n' END) FILTER(WHERE t0.c0) OVER ( GROUPS BETWEEN NULL FOLLOWING AND (((t0.c1, (((t0.c0)) NOT BETWEEN ((1.585036339E9)) AND ((t0.c2))), ((x'') NOT BETWEEN (t0.c0) AND (vt1.c2))))<=((vt1.c2 COLLATE RTRIM, ((t0.c0) NOT NULL), ((vt0.c0)IS NOT(t0.c1))))) PRECEDING), ((COUNT(*)) NOT NULL), COUNT(*) OVER (), (((((((vt1.c2)AND(t0.c2)))OR(vt1.c1))))>((CASE WHEN t0.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c2 WHEN -305540363 THEN vt1.c2 ELSE t0.c1 END))), ((vt0.c0)>>((((t0.c2))<>((t0.c0))))) FROM vt0, vt1 GROUP BY 0x35f3bbc2;SELECT ALL ((CASE t0.c0  WHEN vt1.c2 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN '' END) NOT BETWEEN (vt1.c2) AND (t0.c1)) FROM vt0, vt1 WHERE (CASE WHEN 0X7fbc315d COLLATE BINARY THEN ((1.854322496E9) NOT NULL) END);SELECT ALL TOTAL((((t0.c1, t0.c0, 0.31133502426529625)) BETWEEN ((vt1.c2, vt1.c1, t0.c1)) AND ((vt1.c2, t0.c2, vt1.c0)))) FROM vt0, t0, vt1; -- 0ms;
SELECT DISTINCT MIN(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) FROM vt1 WHERE (((('\J1槩' IN (1.691192504E9, '-883433854'))) NOT NULL)) GROUP BY ((vt0.c0 COLLATE RTRIM) NOTNULL), 4.41408244E8, TYPEOF(-1855983162) HAVING (CASE t0.c1  WHEN vt1.c0 THEN t0.c2 END IN ());SELECT DISTINCT (((vt1.c0)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN (('439910027')) AND ((t0.c0))))) AND ((vt0.c0))), (SUM(vt0.c0) IN (((t0.c1) IS FALSE))), ((COUNT(vt0.c0))&((((t0.c0)) BETWEEN ((t0.c2)) AND ((vt1.c1))))) FROM t0;SELECT DISTINCT (((t0.c1, vt1.c1, t0.c1)) BETWEEN ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c2 END, NULLIF(DISTINCT vt1.c2, t0.c0), t0.c2)) AND (((vt0.c0 IN ()), (vt1.c2 IN ()), (vt1.c1 IN (vt0.c0))))), t0.c2, CAST(GROUP_CONCAT(t0.c1) AS REAL) FROM t0, vt1, vt0; -- 0ms;
SELECT (((((t0.c2) NOTNULL)))>((vt1.c2 COLLATE BINARY))) FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT CASE vt1.c0  WHEN t0.c0 THEN t0.c2 ELSE vt1.c0 END COLLATE NOCASE FROM t0, vt1, vt0 WHERE (x'5f10' COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE (~ (vt1.c1))  WHEN CAST(t0.c2 AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (t0.c1) AND (vt1.c0)) ELSE ((((t0.c2)OR(vt1.c2)))AND(x'')) END, RANK() OVER (), NULL FROM vt1, t0, vt0 WHERE (((((((x'65eb') NOTNULL))AND('#_' COLLATE NOCASE)))AND(((0.07771945733439822)<(0.7154156815660767))))) LIMIT 1928398657; -- 0ms;
SELECT DISTINCT NULL, CAST(((t0.c1)GLOB(t0.c1)) AS NUMERIC), CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c2)))AND(vt1.c0)))OR(x'f235')) THEN ((((((((((((t0.c2)AND('-975482377')))OR('T')))OR(vt1.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c2)) WHEN ((t0.c1)AND(0.816732747282453)) THEN ((NULL)/(t0.c2)) WHEN CASE t0.c2  WHEN 0.6846476621214269 THEN vt0.c0 END THEN 0xffffffffefadb0ae ELSE ((NULL) NOT BETWEEN (vt1.c1) AND (t0.c1)) END FROM t0, vt1, vt0 WHERE (TYPEOF(((0.4635506149685723) NOT BETWEEN ('~') AND (0.10270321897737988)))); -- 0ms;
SELECT DISTINCT ((((0.30703782648016076) ISNULL)) NOTNULL) FROM vt1; -- 0ms;
SELECT CASE x''  WHEN ((vt0.c0)LIKE(vt1.c0)) THEN ((vt1.c2)-(vt1.c1)) WHEN DATE(t0.c2, vt1.c0, vt1.c0) THEN GROUP_CONCAT(t0.c2) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN (((t0.c2, t0.c2, 0.8553885990719479))!=((325042911, t0.c0, t0.c1))) ELSE (((vt1.c0))>=((vt1.c2))) END FROM t0, vt1 WHERE (CASE WHEN (((x'df65')) NOT BETWEEN (('o|]s 1')) AND ((x''))) THEN CAST(0.9821876706299837 AS REAL) ELSE ((NULL) IS TRUE) END);SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((t0.c2))) FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c1 END THEN ((vt1.c0)-(x'')) END FROM vt1, t0, vt0 WHERE ((CASE WHEN NULL THEN 168116652 WHEN x'ce66' THEN 0x17712466 WHEN x'a8a8' THEN '-232495641' ELSE '' END IN ())); -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS NUMERIC), vt1.c0, CAST(((vt1.c0) ISNULL) AS TEXT) FROM vt0, vt1 WHERE ((((('')>>('NmV깫hj9')))&(((NULL)GLOB(0.4988012540872113))))); -- 0ms;
SELECT DISTINCT (((((((t0.c0))<((t0.c1))))AND(t0.c2)))AND(((vt1.c0) BETWEEN (t0.c2) AND (vt0.c0)))) FROM vt0, vt1;SELECT ALL (NOT (((vt1.c2)IS(vt1.c2)))), ((TRIM(t0.c2, vt1.c1)) BETWEEN (CAST(x'707d' AS REAL)) AND ((vt0.c0 IN (vt1.c2, vt1.c1)))), ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt0.c0))) BETWEEN ((t0.c1 IN ())) AND ((((t0.c0))<=((0.45925231822314905))))) FROM t0, vt1;SELECT CASE vt1.c2  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE FROM vt0;SELECT t0.c2 FROM vt0, vt1, t0; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT (vt0.c0 IN (t0.c0)), 0.42072052100637936) FROM t0 WHERE (((1656372412)*(((x'f936')IS NOT('1889398093')))));SELECT DISTINCT CAST((vt0.c0 IN ()) AS BLOB) FROM t0, vt0 GROUP BY CAST(((t0.c2) BETWEEN (vt0.c0) AND (vt1.c1)) AS INTEGER);SELECT DISTINCT PERCENT_RANK() OVER ( GROUPS BETWEEN (((vt1.c0 IN (vt1.c0)))IS((~ (vt0.c0)))) PRECEDING AND (((vt1.c1)) NOT BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) FOLLOWING EXCLUDE CURRENT ROW) FROM vt1 WHERE ((((+ (0.05359228474114175)))<<(('3[Qu' IN ())))); -- 0ms;
SELECT ALL ((TOTAL(t0.c2))==(((vt1.c2)+(t0.c0)))) FROM t0, vt1, vt0; -- 0ms;
