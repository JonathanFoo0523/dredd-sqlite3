-- Time: 2024/06/07 17:54:40
-- Database: database1
-- Database version: 3.40.0
-- seed value: 1144487801
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 1ms;
ROLLBACK TRANSACTION; -- 4ms;
INSERT OR IGNORE INTO t0 VALUES ('RG-x'); -- 0ms;
ANALYZE t0; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c0=x''; -- 0ms;
ALTER TABLE t0 ADD COLUMN c88 INTEGER; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c88)=(NULL, 0.10475022663692202) WHERE ((((t0.c88)IS(t0.c88))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO t0(c88, c0) VALUES ('0.10475022663692202', NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c88) VALUES (x'e12d'); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
PRAGMA automatic_index; -- 0ms;
END; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c65; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR REPLACE t0 SET c88=x'e699'; -- 0ms;
INSERT OR REPLACE INTO t0(c65) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c88=0x2a8a6130 WHERE (((t0.c88)) BETWEEN ((0.8338966828112913)) AND (((~ (t0.c88))))); -- 0ms;
PRAGMA secure_delete; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c88, c65, c65)=(x'', 0.9843578979282892, x''); -- 0ms;
UPDATE t0 SET c65=x'2b39' WHERE t0.c88; -- 0ms;
UPDATE OR REPLACE t0 SET c88=x'', c65=7.1371192E8; -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('', 0.7076812722690585); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c65='TRUE', c88='-717867164', c88=NULL, c65='X{^]'; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO t1(c65) VALUES ('713711920'); -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c10 REAL; -- 0ms;
UPDATE OR IGNORE t1 SET (c10)=(NULL); -- 0ms;
REINDEX RTRIM; -- 0ms;
DELETE FROM t1; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c10=0.7692369108168181, c65=NULL WHERE ((t1.c10)%(t1.c88)) COLLATE RTRIM; -- 0ms;
UPDATE t1 SET c10=0.18484238244411477, c10=7.1371192E8, c88=0.9843578979282892; -- 0ms;
PRAGMA cache_spill = 8855925184274238996; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
UPDATE t1 SET (c10, c88)=(0.7076812722690585, '1395070157') WHERE (~ (NULL)) COLLATE RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'') WHERE (((((((((NOT (t1.c65)))AND(((t1.c65)==(t1.c65)))))AND((t1.c65 IN ()))))AND(CASE t1.c65  WHEN t1.c88 THEN t1.c65 END)))AND((((t1.c88)) NOT BETWEEN ((t1.c65)) AND ((t1.c88))))); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
PRAGMA stats; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
PRAGMA secure_delete = true; -- 0ms;
PRAGMA optimize; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL t1 SET c88='713711920'; -- 0ms;
INSERT OR IGNORE INTO t1(c65, c88) VALUES (NULL, NULL); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR IGNORE t1 SET c65='TOKC', c88=0.7692369108168181; -- 0ms;
UPDATE t1 SET (c88)=(NULL) WHERE ((+ (t1.c88)) IN (((t1.c65) NOT BETWEEN (t1.c88) AND (t1.c88)))); -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c88=713711920; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '791808981 unordered noskipscan'); -- 0ms;
CREATE INDEX i30 ON t0(c65 COLLATE BINARY ASC,(~ (CAST(c88 AS BLOB))) COLLATE RTRIM ASC); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
PRAGMA temp.recursive_triggers; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42531'); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(x''); -- 0ms;
ALTER TABLE t0 ADD COLUMN c45 TEXT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c45 TO c25; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE t0 SET c65='1395070157', c25='750121820', c65=0.10475022663692202 WHERE ((((t0.c25)||(t0.c25)))>>(CASE WHEN t0.c65 THEN t0.c25 ELSE t0.c25 END)); -- 0ms;
UPDATE OR FAIL t0 SET c88=0.6802665628838531; -- 0ms;
UPDATE vt0 SET c0=NULL WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()); -- 0ms;
ALTER TABLE t0 ADD COLUMN c90 BLOB COLLATE RTRIM; -- 1ms;
ANALYZE; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ABORT vt0 SET c0=x'2a57'; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (1.7976931348623157E308); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
PRAGMA cache_size = -3825124235862506687; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT t0.c65, MAX(JULIANDAY(rt0.c1, rt0.c1, vt0.c0)), ((CAST(rt0.c0 AS INTEGER)) NOTNULL) FROM rt0, t0, vt0 WHERE ((((((NOT (0.5494738522986655)))OR((('1160408166')LIKE(x'')))))OR(CAST(NULL AS BLOB)))); -- 1ms;
SELECT (((rt0.c2 IN ())) NOT BETWEEN ((((t0.c88, rt0.c1, t0.c25)) BETWEEN ((t0.c65, rt0.c0, rt0.c0)) AND ((vt0.c0, t0.c25, rt0.c0)))) AND (((t0.c88) IS FALSE))) FROM vt0, t0;SELECT DISTINCT ((((rt0.c0)<<(t0.c25)))*(((rt0.c1) BETWEEN (t0.c25) AND (vt0.c0)))) FROM vt0, t0 WHERE (((((x'') NOT BETWEEN (0.3753316309744319) AND ('6_^!9N'))) NOTNULL));SELECT (~ (t0.c90 COLLATE RTRIM)) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT (((((t0.c90)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (0.9937822790093984) AND (((t0.c65)<(rt0.c1)))) FROM vt0, rt0;SELECT GROUP_CONCAT(rt0.c1) COLLATE BINARY FROM rt0 WHERE ((- ((~ (''))))); -- 0ms;
SELECT DISTINCT ((((775398506) IS TRUE))*((rt0.c1 IN ()))), ((UNLIKELY(rt0.c2))IS(((rt0.c0) NOTNULL))), t0.c65 FROM vt0, t0;SELECT DISTINCT CAST(COUNT(*) AS BLOB) FROM t0, rt0, vt0; -- 0ms;
SELECT ALL (CASE WHEN t0.c25 THEN vt0.c0 WHEN t0.c88 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c88 END IN ()) FROM t0 GROUP BY ((t0.c25) NOTNULL), (((((((t0.c90))<=((rt0.c2))))OR(0.32134318371318593)))OR(((vt0.c0)<=(t0.c88)))), UPPER((t0.c90 IN ()));SELECT DISTINCT t0.c65, UPPER(DISTINCT ((vt0.c0) IS FALSE)), ((((t0.c25)IS NOT(vt0.c0))) NOTNULL) FROM rt0 WHERE (('-1243116631' COLLATE NOCASE IN ()));SELECT DISTINCT '让U\n0?ᓍ', ((COUNT(t0.c88))%(vt0.c0 COLLATE BINARY)), ((((((rt0.c1) NOT NULL))OR(((((((((t0.c90)OR(rt0.c1)))AND(vt0.c0)))OR(x'')))OR(t0.c88)))))AND(((rt0.c2) BETWEEN (t0.c65) AND (NULL)))) FROM t0, vt0;SELECT ((rt0.c2)>>(((rt0.c2) IS TRUE))) FROM rt0 LIMIT -717867164 OFFSET -524793107; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c25) NOT BETWEEN (rt0.c1) AND (t0.c90))) OVER () FROM t0 INDEXED BY i30, vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c1 AS REAL) AS NUMERIC) FROM rt0 WHERE (x'fffb' COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((-1.243116631E9 COLLATE NOCASE)>=(((((vt0.c0)OR(rt0.c2)))AND(t0.c65)))) FROM t0;SELECT ALL (((((t0.c88)OR(0.23971033958169263)))AND(t0.c25)) IN ()) FROM rt0, t0 WHERE (((((json(x''))OR(x'')))OR(((0x532714cd)LIKE(0.45779326171769485)))));SELECT ALL (NULL IN ()), SUM(((((vt0.c0)OR(vt0.c0)))OR(rt0.c0))), ((t0.c88 COLLATE NOCASE)GLOB(CAST(775398506 AS INTEGER))) FROM t0, vt0, rt0 WHERE (((((((x'')AND(x'2a5d')))AND('vI辐?'))) ISNULL)) GROUP BY SUBSTR(((rt0.c0) NOT BETWEEN (t0.c65) AND (rt0.c1)), ((vt0.c0)&(t0.c25))); -- 0ms;
SELECT DISTINCT -383262921 FROM vt0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (((0.7076812722690585) ISNULL)) AND (((x'') ISNULL)))) ORDER BY t0.c25 ASC  NULLS LAST;SELECT NULLIF(((NULL) NOT BETWEEN (rt0.c0) AND (t0.c88)), (~ (0.6725071382455929))) FROM vt0, rt0 WHERE (((((NULL) NOT NULL))IS NOT(((NULL)&(0X2a8a6130)))));SELECT DISTINCT GROUP_CONCAT(((t0.c65) NOT NULL)) OVER ( ORDER BY (((rt0.c0) IS FALSE) IN ())), RANK() OVER (), 0.037841281489633394, (+ (((t0.c65) ISNULL))), CASE ((rt0.c2)<=(t0.c88))  WHEN (+ (rt0.c2)) THEN vt0.c0 COLLATE RTRIM ELSE ((((t0.c88)OR(rt0.c2)))AND(t0.c88)) END FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)|(0.8768317323075948))) BETWEEN ((+ (t0.c65))) AND (1.395070157E9)) FROM vt0 WHERE (NULL);SELECT ALL (((t0.c25) NOT NULL) IN ()) FROM vt0, t0 ORDER BY rt0.c2 DESC  NULLS LAST;SELECT ALL MAX(((rt0.c2)LIKE(t0.c25))) FROM rt0;SELECT DISTINCT CAST(((t0.c88) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), CAST((t0.c88 IN (t0.c25)) AS REAL), LOWER(rt0.c0) COLLATE BINARY FROM vt0, t0, rt0 INDEXED BY i30 WHERE (CAST(0xffffffffe0b84aed COLLATE RTRIM AS BLOB)) ORDER BY CAST(t0.c90 COLLATE BINARY AS TEXT) DESC, ((((t0.c90)GLOB(t0.c90)))<>(0.09923789851161524))  NULLS LAST, (CASE WHEN '1395070157' THEN vt0.c0 WHEN rt0.c0 THEN t0.c25 WHEN t0.c88 THEN t0.c90 ELSE vt0.c0 END IN ())  NULLS FIRST;SELECT DISTINCT CASE ((t0.c90)/(t0.c88))  WHEN ((rt0.c1) IS TRUE) THEN CAST(t0.c88 AS REAL) WHEN CAST(t0.c65 AS BLOB) THEN CASE WHEN rt0.c0 THEN t0.c88 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c88 THEN rt0.c2 END WHEN json_extract('yX', '1395070157', vt0.c0, rt0.c2) THEN ((((((((((((rt0.c0)OR(vt0.c0)))AND(t0.c25)))OR(0.3473340495565779)))OR(rt0.c0)))AND(t0.c88)))OR(0.7794248731340198)) WHEN COALESCE(vt0.c0, t0.c90) THEN CAST(t0.c65 AS BLOB) WHEN 0X4dfa6cf3 THEN ((rt0.c0)>=(rt0.c0)) ELSE DATE(NULL, t0.c65, t0.c90) END FROM rt0;SELECT CAST(UPPER(t0.c90) AS TEXT) FROM rt0, t0 WHERE (CASE ((('-1811962065', 0.8107877730381695, 0.9946533453620118, x'', 1160408166)) NOT BETWEEN (('', x'cde1cfb7', '}{u]Rk', -7.17867164E8, 'yx')) AND ((x'', NULL, '1160408166', -1717941416, NULL)))  WHEN CAST('' AS NUMERIC) THEN (('245469072')||(x'033f')) ELSE (('1726113607') NOT NULL) END); -- 1ms;
SELECT DISTINCT (((((0.15678396717675336) NOTNULL)))==((-912995021))) FROM vt0, t0, rt0 WHERE (0.5939848674472186); -- 0ms;
SELECT COUNT('-20502699') OVER (), (((((t0.c88))>((t0.c25))))AND(x'')), NTILE(((((((t0.c25)<(t0.c65)))OR(((((t0.c88)OR(t0.c25)))OR(t0.c25)))))AND(TRIM(DISTINCT t0.c88, t0.c90)))) OVER () FROM t0 WHERE (TYPEOF(((x'') NOT NULL))) UNION SELECT DISTINCT (~ (((t0.c90) ISNULL))), (((((((((+ (t0.c25)))OR(CAST(rt0.c2 AS INTEGER))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0)%(t0.c90)))))OR(CHAR(vt0.c0, rt0.c0, rt0.c2))), GROUP_CONCAT(x'dc43') FROM t0;SELECT ALL ((t0.c90 IN (t0.c65)) IN ()) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN (-697877636) AND ((- (rt0.c0)))) FROM t0 WHERE ((~ ((x'0930' IN ()))));SELECT ALL ((((rt0.c1) NOT BETWEEN (t0.c88) AND (rt0.c1)))||((((t0.c65, rt0.c1, vt0.c0)) NOT BETWEEN ((t0.c88, t0.c88, vt0.c0)) AND ((t0.c88, rt0.c1, rt0.c1))))) FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((((((((x'2fe2')OR(0.5238145963596352)))AND(-1417936425)))AND('353091677')))OR('1395070157'))));SELECT DISTINCT (((('')AND(((((0.6360239269765237)AND(t0.c65)))OR(rt0.c1)))))AND('fc}!~')) FROM t0;SELECT ((((rt0.c1, t0.c25, '-782011425', vt0.c0, t0.c25)) BETWEEN ((t0.c88, rt0.c0, 0.7076812722690585, '-1394843816', t0.c90)) AND ((t0.c90, t0.c65, t0.c65, t0.c90, t0.c88))) IN ()) FROM vt0, rt0, t0 WHERE (LIKELIHOOD(DISTINCT (('}{u]rk')>(1630146355)), 0.6981934561930542)); -- 0ms;
SELECT ALL ((((((((t0.c25)OR(rt0.c0)))OR(t0.c65)))OR(t0.c88)))AND(t0.c25)) COLLATE NOCASE, (- (((((((((vt0.c0)OR(t0.c65)))OR(t0.c88)))AND('N4[5oN')))OR(rt0.c2)))), CAST(((x'') IS FALSE) AS REAL) FROM t0;SELECT DISTINCT ((((((rt0.c2) IS TRUE))OR(((rt0.c2) NOT BETWEEN (t0.c88) AND (rt0.c1)))))AND(((rt0.c1)IS(rt0.c0)))) FROM t0 LIMIT 791808981;SELECT (t0.c25 IN ()) COLLATE BINARY, rt0.c0, ((((rt0.c1) BETWEEN (0xffffffffb5e78ba9) AND ('791808981'))) NOT BETWEEN ((((t0.c90)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (CASE WHEN t0.c90 THEN rt0.c2 END)) FROM vt0 NATURAL JOIN t0 WHERE (((NULL) NOTNULL));SELECT DISTINCT CAST(COUNT(rt0.c0) AS NUMERIC) FROM rt0, t0, vt0 WHERE (((((((x'a1a5')OR('')))OR('-56691586')))<(((0.5366736135220925)|(x''))))) GROUP BY (+ (TRIM(DISTINCT x'd031', t0.c65))); -- 0ms;
SELECT DISTINCT t0.c65 FROM rt0, t0, vt0; -- 0ms;
SELECT (((rt0.c1)) BETWEEN ((CAST(t0.c25 AS REAL))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END))) FROM t0, rt0 WHERE ((NOT ('')) COLLATE RTRIM); -- 0ms;
SELECT NULL, (((rt0.c1)/(t0.c90)) IN ()), (~ (CAST(t0.c25 AS TEXT))) FROM vt0;SELECT CAST((NOT (0.6088221033036526)) AS BLOB), vt0.c0, ((MAX(t0.c65))AND(((rt0.c2) IS FALSE))) FROM rt0;SELECT DISTINCT ((rt0.c0)>>(rt0.c0)) COLLATE BINARY FROM t0 WHERE (((0.8505913756068331 COLLATE RTRIM)<<((((x''))>((NULL)))))) ORDER BY CASE (- (''))  WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (t0.c90)) THEN (t0.c25 IN (t0.c90)) ELSE (- (rt0.c2)) END ASC  NULLS FIRST;SELECT ALL ((t0.c90 IN ()) IN ()) FROM rt0, t0, vt0 WHERE ((((('P貧')AND(0.20547885818860823)))LIKE(CAST(NULL AS TEXT)))); -- 0ms;
SELECT ALL (vt0.c0 IN ()), CAST((((t0.c65, rt0.c2, rt0.c1)) BETWEEN ((x'2906', 2066041255, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))) AS BLOB), ((((t0.c25)!=(t0.c88)))IS(COUNT(*))) FROM rt0, vt0 GROUP BY ABS(((t0.c25) BETWEEN (t0.c65) AND (t0.c65))), NULLIF(((t0.c90)<<(t0.c25)), (t0.c65 IN ())), ((((((rt0.c1) IS TRUE))AND(NULLIF(rt0.c1, rt0.c2))))AND(t0.c88 COLLATE BINARY)) HAVING x'';SELECT ALL LAG(((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2))) BETWEEN (((vt0.c0)*(vt0.c0))) AND (json_object(rt0.c1, rt0.c1))), ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))), (CAST(rt0.c1 AS NUMERIC) IN ())) OVER (), t0.c25, (((json_quote(t0.c90)))<=((COUNT(rt0.c0)))) FROM rt0, vt0;SELECT ALL NULL, json_array(((rt0.c0) ISNULL), t0.c25), ((((t0.c25 COLLATE NOCASE)OR((('xPmLfDv\r') NOT NULL))))OR(((((((((vt0.c0)OR(NULL)))AND(rt0.c2)))AND(t0.c90)))OR(vt0.c0)))) FROM vt0, rt0, t0 WHERE (COALESCE(((((((((((((((((NULL)OR(x'')))AND(x'')))AND('')))OR(NULL)))OR(-56691586)))OR('-1792949423')))AND('')))AND(-9.12995021E8)), 0.5536288052531043)) LIMIT -745583027; -- 1ms;
SELECT ALL t0.c88 FROM t0, vt0, rt0 ORDER BY ((((CASE t0.c25  WHEN t0.c88 THEN t0.c90 END)OR((((t0.c88, t0.c88, t0.c25))!=((t0.c25, rt0.c2, t0.c90))))))OR(((rt0.c0) IS FALSE))), (DATETIME(rt0.c0, rt0.c0, t0.c65) IN ()) DESC  NULLS FIRST, (((t0.c90)OR(t0.c65)) IN ()); -- 0ms;
SELECT DISTINCT (- (t0.c88)), (NOT ((- (t0.c25)))), ((((rt0.c0)IS(t0.c88))) IS FALSE) FROM vt0, rt0;SELECT ALL CASE WHEN (+ (t0.c65)) THEN (t0.c65 IN ()) WHEN ((t0.c25) NOT BETWEEN (t0.c25) AND (NULL)) THEN ((rt0.c1)IS NOT(0.7004783493432654)) WHEN t0.c65 COLLATE RTRIM THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((t0.c65))) END, (((TOTAL(t0.c90), CASE vt0.c0  WHEN t0.c88 THEN t0.c90 ELSE t0.c88 END, LIKELIHOOD(DISTINCT vt0.c0, 0.24931339388732254)))==((((t0.c88)>(rt0.c1)), CASE t0.c90  WHEN rt0.c1 THEN rt0.c2 WHEN t0.c25 THEN t0.c25 WHEN t0.c90 THEN t0.c88 ELSE 'y)Mz%4' END, UPPER(DISTINCT rt0.c2)))), x'', CAST(0.7912440983635449 AS INTEGER), CASE COALESCE(DISTINCT 'hw', vt0.c0)  WHEN ((rt0.c2) BETWEEN (t0.c65) AND (t0.c88)) THEN LENGTH(rt0.c2) ELSE MAX(t0.c88) END FROM vt0 WHERE ((((('e)妡>K\r-')/('245469072')))<=(TRIM(DISTINCT -2.0502699E7, NULL)))) ORDER BY ((TRIM(DISTINCT NULL, t0.c90))==(rt0.c2 COLLATE NOCASE)) DESC;SELECT DISTINCT ((MAX(t0.c90)) NOT BETWEEN (NULL) AND ((rt0.c1 IN ()))) FROM vt0 WHERE ((((~ (NULL)))/(rtreenode('e', 'a\rUW|Ttc')))) ORDER BY CAST((t0.c65 IN ()) AS TEXT) ASC LIMIT -1803482300;SELECT ALL GROUP_CONCAT((t0.c88 IN ())), TOTAL(CAST(t0.c65 AS REAL)) FILTER(WHERE CASE ((NULL) NOTNULL)  WHEN x'' THEN CAST(rt0.c1 AS INTEGER) ELSE (((t0.c25))<((t0.c90))) END) OVER (), LAST_VALUE(CASE WHEN vt0.c0 THEN ('' IN (rt0.c2)) ELSE ((((t0.c25)AND(t0.c25)))OR(t0.c65)) END) OVER ( ORDER BY (((rt0.c1 IN ())) IS TRUE) ASC  NULLS LAST) FROM vt0, rt0, t0 GROUP BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE t0.c88 END) IS TRUE); -- 0ms;
SELECT DISTINCT ((((((rt0.c1) IS TRUE))AND(TOTAL(t0.c90))))AND(LTRIM(vt0.c0, t0.c88))) FROM vt0, rt0 WHERE ((((0xffffffffe7b9b51c)) NOT BETWEEN ((((((0.4717110004683208)AND('')))OR(x'')))) AND ((CAST(0.6360239269765237 AS INTEGER)))));SELECT DISTINCT (((- (t0.c65)))|(vt0.c0)) FROM vt0 FULL OUTER JOIN t0 ON 0.698748942384912; -- 0ms;
SELECT DISTINCT CAST(LOWER(t0.c90) AS NUMERIC) FROM t0, rt0, vt0 WHERE ((CASE '2줇AIzP\r5?'  WHEN 0.027675024177876484 THEN '&' ELSE 0.8531496099642872 END IN ())) ORDER BY (t0.c90 IN ()) COLLATE NOCASE ASC; -- 0ms;
SELECT ALL (((t0.c88 IN ())) BETWEEN (((rt0.c0)<(rt0.c2))) AND (((x'') BETWEEN (rt0.c2) AND (rt0.c0)))) FROM rt0, t0; -- 0ms;
SELECT ALL CAST(CASE t0.c25  WHEN t0.c65 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN 634258944 ELSE rt0.c1 END AS TEXT), ((((((((((((((rt0.c1)OR(rt0.c1)))OR(t0.c90)))OR(NULL)))OR(rt0.c0)))AND(t0.c65)))OR(t0.c90))) NOT BETWEEN (CASE t0.c25  WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN vt0.c0 WHEN t0.c88 THEN '-1394843816' END) AND (((vt0.c0)%('0.45779326171769485')))), ((((((t0.c25)AND('0.7076812722690585')))OR(t0.c88))) NOT NULL) FROM rt0, t0 WHERE (((('x') NOT BETWEEN (x'') AND ('-1243116631')) IN (NULL COLLATE RTRIM)));SELECT ALL ((((((rt0.c2)OR(t0.c25)))AND(t0.c25))) NOT BETWEEN (CASE '-712488875'  WHEN t0.c90 THEN vt0.c0 WHEN t0.c90 THEN t0.c65 WHEN t0.c25 THEN rt0.c1 ELSE t0.c25 END) AND (((t0.c65)!=(t0.c90)))) FROM rt0;SELECT ALL (t0.c90 IN ()) COLLATE RTRIM FROM t0 WHERE (((NULL COLLATE RTRIM)&(''))); -- 0ms;
SELECT ((rt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c0))<>((x'b7c7')))) AND ((NOT (t0.c88)))) FROM vt0 NOT INDEXED;SELECT DISTINCT COUNT(CASE WHEN rt0.c1 THEN rt0.c0 WHEN t0.c65 THEN t0.c65 WHEN vt0.c0 THEN rt0.c2 WHEN t0.c90 THEN vt0.c0 WHEN t0.c90 THEN vt0.c0 ELSE rt0.c1 END) OVER () FROM rt0, vt0, t0 WHERE (CASE WHEN ((((NULL)OR(x'')))AND(x'')) THEN ((0.8531496099642872) BETWEEN (NULL) AND ('-1717941416')) ELSE ('0.10475022663692202' IN ()) END) ORDER BY (((t0.c88)) NOT BETWEEN ((CASE WHEN x'' THEN t0.c25 WHEN t0.c88 THEN t0.c88 WHEN t0.c90 THEN rt0.c1 ELSE '2066041255' END)) AND (((~ (t0.c25))))); -- 0ms;
SELECT DISTINCT (('634258944') NOTNULL), CASE WHEN CAST(t0.c88 AS INTEGER) THEN MAX(t0.c25) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) WHEN ((((vt0.c0)OR(t0.c25)))OR(vt0.c0)) THEN (t0.c65 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c88)) THEN ((t0.c25) NOT BETWEEN (rt0.c0) AND (t0.c90)) WHEN (t0.c88 IN ()) THEN (t0.c90 IN ()) END, (((~ (t0.c65)))+((NOT (vt0.c0)))) FROM vt0, rt0, t0 WHERE (((x'')AND(x'88a9')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE ((t0.c25) IS TRUE)  WHEN UPPER(t0.c88) THEN ((t0.c90)||(t0.c90)) WHEN UPPER(DISTINCT rt0.c1) THEN (((x'b814')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN (- (t0.c65)) THEN SUM(rt0.c0) ELSE CAST(t0.c90 AS TEXT) END FROM t0, vt0 WHERE ((((1087906555, 1876803701, 1788349346)) BETWEEN ((CHANGES(), (('0.6360239269765237')>>(NULL)), ((NULL) NOT BETWEEN ('<S') AND (-608899701)))) AND ((((0X17e765de)+('-782011425')), ((NULL) IS TRUE), (('PzLvyU') IS TRUE)))));SELECT DISTINCT AVG(t0.c90) OVER ( ORDER BY (((((((t0.c88)AND(t0.c25)))AND(vt0.c0))))>((CAST('2085973312' AS BLOB)))) ASC  NULLS LAST) FROM rt0 WHERE (LIKELY((('X{^]') IS FALSE)));SELECT ((((((t0.c65)OR(t0.c88)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))))AND(((((((((vt0.c0)AND(t0.c88)))OR(t0.c88)))AND(t0.c65)))OR(rt0.c2)))) FROM rt0 WHERE ((((-6.08899701E8, '', NULL)) NOT BETWEEN ((((0.9937158834909268)|(NULL)), x'' COLLATE NOCASE, ((('-1446164725'))>=((-912995021))))) AND ((CASE WHEN 0.6088221033036526 THEN 2.45469072E8 END, DATE(NULL, NULL, NULL), ((0xffffffff81dfec1c) IS TRUE)))));SELECT DISTINCT rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (rt0.c1 IN ()) FULL OUTER JOIN vt0 ON (~ (0.9937822790093984)) GROUP BY ((vt0.c0) NOTNULL) COLLATE RTRIM HAVING ((t0.c90) BETWEEN (rt0.c1) AND (t0.c88)) COLLATE RTRIM COLLATE BINARY; -- 0ms;
SELECT ALL (+ ((vt0.c0 IN ()))) FROM rt0 WHERE ((('') IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c88) IS TRUE) THEN ((t0.c25)<(t0.c25)) END FROM vt0, rt0, t0 WHERE ((((x'')) NOT BETWEEN (((((0X6fddc075))<((0.711399690082518))))) AND (((x'446000b2' IN ()))))); -- 0ms;
SELECT ((t0.c88) NOT BETWEEN (ROUND(t0.c90, rt0.c1)) AND (rt0.c0 COLLATE RTRIM)) FROM t0, vt0, rt0 WHERE (CASE ((x'7a7f') NOT BETWEEN ('-1803482300') AND (0.4725744058064525))  WHEN (+ (NULL)) THEN (('Uq')<(x'')) WHEN ((x'')AND('401040862')) THEN TOTAL_CHANGES() WHEN (('ኣ')&('545226493')) THEN x'213fbc80' WHEN ((x'6055') BETWEEN (0.4964486784850509) AND (0.5494738522986655)) THEN CAST(x'' AS NUMERIC) WHEN ((('-316708021')) BETWEEN ((-2136455730)) AND ((0X207f7efd))) THEN ((x'')&(209856078)) END); -- 0ms;
SELECT (((((rt0.c2)>(t0.c88))))<((((((((((t0.c25)OR(rt0.c1)))OR(vt0.c0)))OR(0X79a1867a)))OR(t0.c65))))) FROM t0, rt0, vt0 WHERE ((- ((0.7574912998195642 IN (NULL, NULL))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((rt0.c1)AND(rt0.c0)))AND(t0.c90))) OVER () FROM rt0;SELECT ALL CASE WHEN (('459705511') NOT NULL) THEN '-0.0' WHEN COUNT(*) THEN QUOTE(rt0.c2) WHEN 0.8505913756068331 THEN MIN(t0.c88) ELSE ((t0.c65) IS TRUE) END FROM rt0;SELECT ALL ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c88))) ISNULL) FROM t0, vt0 WHERE ((((0.7446762187276752)|(x'6b3c')) IN ()));SELECT DISTINCT HEX(DISTINCT ((((t0.c65)AND(rt0.c0)))OR(rt0.c2))) FROM vt0, rt0, t0 WHERE (CAST(0.42280854291355063 COLLATE NOCASE AS NUMERIC)); -- 0ms;
SELECT ALL (('245469072') ISNULL) FROM vt0, t0; -- 0ms;
SELECT GROUP_CONCAT(((t0.c90)!=(t0.c88))) FROM rt0, vt0, t0; -- 1ms;
SELECT ALL ((NULL)<=('')) FROM vt0, rt0 WHERE (((((('') ISNULL), '228740662' COLLATE NOCASE, NULL COLLATE NOCASE))>=((((-2.13645573E9)IS NOT('2줇AIZP\r5?')), ((0X300beabe)>>(0Xffffffffe039c028)), UPPER('*p}(RRh('))))); -- 0ms;
SELECT DISTINCT CAST(((t0.c88) ISNULL) AS REAL) FROM rt0, t0 GROUP BY (((NOT (rt0.c1))) IS FALSE), CASE WHEN ((t0.c90) NOT NULL) THEN ((((t0.c65)OR(t0.c90)))AND(rt0.c0)) WHEN x'bfa4ae93' COLLATE RTRIM THEN ((t0.c25) BETWEEN (t0.c90) AND (t0.c88)) WHEN ((t0.c25)IS(t0.c65)) THEN json_type(t0.c88) WHEN CASE WHEN rt0.c0 THEN t0.c88 END THEN rt0.c0 COLLATE NOCASE WHEN ((t0.c88)+(rt0.c1)) THEN (((t0.c88)) NOT BETWEEN ((t0.c25)) AND ((t0.c25))) END, (+ (((rt0.c0) IS TRUE))) HAVING ((((CAST(t0.c65 AS INTEGER))OR(((-1.717941416E9)+(rt0.c2)))))AND(CAST(vt0.c0 AS TEXT)));SELECT DISTINCT ((0.37947202946738134)<<(4.01040862E8)), (((((((((((((t0.c90 IN (t0.c90)))AND(CASE t0.c65  WHEN t0.c88 THEN t0.c90 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN t0.c90 ELSE t0.c88 END)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((((vt0.c0)OR(t0.c88)))OR(t0.c65)))))AND(CAST(t0.c90 AS NUMERIC))))OR(((rt0.c1)/(NULL)))))OR((- (t0.c25)))), rt0.c1 FROM rt0;SELECT (((t0.c25 IN ())) NOTNULL) FROM rt0 GROUP BY x'' HAVING ((((vt0.c0)<>(vt0.c0)))+((~ (t0.c90))));SELECT DISTINCT LEAD(((((t0.c88) ISNULL))<<(CAST(vt0.c0 AS TEXT))), CAST(((t0.c88) NOT BETWEEN (t0.c88) AND (vt0.c0)) AS NUMERIC), ((CASE WHEN t0.c65 THEN t0.c65 END) NOT BETWEEN (((t0.c25) NOTNULL)) AND (vt0.c0 COLLATE BINARY))) OVER () FROM vt0, t0; -- 0ms;
SELECT (((((((t0.c65)OR(vt0.c0)))OR(rt0.c2))))<((-1.417936425E9))) FROM rt0, vt0, t0; -- 0ms;
SELECT CASE vt0.c0  WHEN t0.c90 THEN t0.c65 WHEN t0.c65 THEN t0.c65 WHEN t0.c88 THEN rt0.c2 WHEN t0.c88 THEN '' WHEN x'' THEN rt0.c1 END COLLATE NOCASE, ((((((rt0.c2))>((rt0.c1)))))<((CAST(t0.c25 AS INTEGER)))), (((- (t0.c90))) NOTNULL) FROM rt0, vt0, t0; -- 0ms;
SELECT ALL MAX(IFNULL(t0.c88, t0.c65), rt0.c2) FROM rt0, vt0, t0 WHERE ('0.15678396717675336'); -- 0ms;
SELECT DISTINCT ((rt0.c1) IS TRUE) COLLATE NOCASE, CUME_DIST() OVER (), (((-1.811962065E9 IN (t0.c65))) IS FALSE), MAX(rt0.c0) COLLATE RTRIM, (NOT (((rt0.c2)GLOB(x'fb8b')))) FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT 0.6778803045041918 FROM rt0, vt0, t0 WHERE ((((('-407259876')||('0.42280854291355063')))<(((NULL)/('0.37947202946738134'))))); -- 0ms;
SELECT 1970251381, CAST((t0.c65 IN (rt0.c1, t0.c90)) AS BLOB), ((t0.c90)IS(rt0.c2)) FROM rt0, t0 INDEXED BY i30, vt0 WHERE (NULL); -- 0ms;
SELECT ((COALESCE(rt0.c1, t0.c90))+(CAST(vt0.c0 AS BLOB))) FROM t0 LIMIT 1081317096 OFFSET 2066041255;SELECT DISTINCT ((((((((((vt0.c0) BETWEEN (t0.c90) AND (rt0.c2)))AND(((rt0.c1)<=(rt0.c1)))))OR(((t0.c88)>(t0.c88)))))AND((t0.c88 IN ()))))OR((t0.c90 IN ()))), CAST((t0.c90 IN ()) AS REAL), (((((t0.c90)!=(t0.c25))))<((((t0.c90)LIKE(t0.c88))))) FROM rt0 WHERE ((((185171568) NOT BETWEEN ('UiF''dj') AND ('698307661')) IN ())) ORDER BY ((((t0.c88)<(0xffffffffad5cce2c))) NOT NULL), ((((vt0.c0)-(vt0.c0))) ISNULL) DESC;SELECT DISTINCT ((((((((QUOTE('-1417936425'))OR(CAST(rt0.c1 AS REAL))))OR(((vt0.c0) IS TRUE))))AND(AVG(t0.c88))))OR(((vt0.c0) IS TRUE))) FROM vt0, t0 WHERE (((((NULL) IS TRUE))<((+ (1.009982478E9))))) GROUP BY (CAST(rt0.c1 AS BLOB) IN ()), CAST(((((t0.c88)OR(t0.c90)))OR(t0.c90)) AS BLOB), (((t0.c65)) NOT BETWEEN (('A歋pTA(c#')) AND ((UNICODE(rt0.c0))));SELECT DISTINCT (rt0.c2 IN (t0.c25, t0.c25)) COLLATE NOCASE, ((((rt0.c0)<(t0.c90)))IS(CAST(NULL AS BLOB))), LIKELIHOOD(DISTINCT ((vt0.c0)+(t0.c90)), 0.7736190196727859) FROM rt0, vt0, t0 WHERE (((CAST(-212394697 AS REAL))%(((NULL)IS(0Xffffffffd9e11942))))); -- 1ms;
SELECT SUM(IFNULL(rt0.c1, rt0.c0)) OVER ( ORDER BY (NOT ((((t0.c90))<>((t0.c90)))))  NULLS LAST, ((((((t0.c25)OR(rt0.c1)))AND('-1254794849'))) NOT BETWEEN (((((t0.c88)OR(rt0.c2)))AND(t0.c25))) AND ((- (rt0.c2))))  NULLS LAST), CASE ((((rt0.c2)OR(t0.c88)))AND(t0.c25))  WHEN ((t0.c90) ISNULL) THEN t0.c90 ELSE AVG(t0.c88) END, DATETIME(x'', CAST(rt0.c0 AS INTEGER), (+ (t0.c25)), (t0.c25 IN ()), NULL) FROM rt0, t0, vt0 WHERE (((((((((CAST(0.3753316309744319 AS BLOB))OR(((x'8723')>=('♎(U|^')))))OR('*bHC	fg浀q')))OR('698307661')))AND(NULL COLLATE NOCASE))) LIMIT 964605654 OFFSET 1036340418; -- 0ms;
SELECT DISTINCT TOTAL(((9.64605654E8) BETWEEN (vt0.c0) AND (rt0.c1))) OVER () FROM t0, vt0, rt0 WHERE ((((' \<1Y', '-1792949423', 936774101)) BETWEEN ((((0x299f544d)==(0.03977908632438287)), (('')<>(NULL)), (+ ('')))) AND ((x'' COLLATE NOCASE, x'', (+ ('-669903720')))))); -- 0ms;
SELECT ((((0.6773100873282903)||(t0.c90)))>(rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE (CAST(((x'')GLOB(NULL)) AS INTEGER));SELECT DISTINCT ((t0.c65) IS TRUE) COLLATE BINARY FROM t0, rt0; -- 0ms;
SELECT CAST(CAST(rt0.c1 AS REAL) AS INTEGER) FROM vt0 WHERE (CAST('135321823' AS INTEGER));SELECT ALL (((NULLIF(DISTINCT t0.c88, t0.c88)))>=((CAST(t0.c88 AS BLOB)))), TOTAL(CASE t0.c90  WHEN t0.c88 THEN t0.c90 END) OVER (), ((0.15678396717675336)LIKE(GROUP_CONCAT(rt0.c2))), CASE WHEN 6.98307661E8 THEN t0.c25 COLLATE BINARY WHEN CAST(t0.c90 AS INTEGER) THEN ((NULL)AND(rt0.c2)) WHEN ((t0.c65)=(t0.c65)) THEN 'T' WHEN rt0.c1 COLLATE BINARY THEN x'' WHEN ((NULL)>>(rt0.c0)) THEN (((t0.c90))<((t0.c90))) ELSE -530388861 END, (LAST_INSERT_ROWID() IN (((t0.c88)<>(rt0.c1)))) FROM rt0;SELECT DISTINCT (rt0.c0 IN ()), COUNT(t0.c90), CASE WHEN vt0.c0 THEN t0.c90 ELSE t0.c90 END COLLATE NOCASE FROM rt0, t0;SELECT DISTINCT ((((((rt0.c1)OR(rt0.c2)))AND((vt0.c0 IN ()))))AND(((rt0.c1)IS(t0.c65)))) FROM t0 INDEXED BY i30, rt0, vt0 WHERE (CAST(CASE NULL  WHEN x'' THEN NULL ELSE 'fWU-m}&<{' END AS TEXT)); -- 0ms;
SELECT ((CASE WHEN rt0.c2 THEN '' END) BETWEEN (((((((((((((rt0.c0)AND(t0.c25)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0)))OR('-274745293')))OR(rt0.c1))) AND (x'')) FROM rt0, t0, vt0 GROUP BY CAST(((t0.c25)||(0.5324695314482208)) AS BLOB); -- 0ms;
SELECT ALL RANK() OVER () FROM t0 WHERE (((CAST(-697877636 AS NUMERIC)) NOT BETWEEN (((('i^^D')) NOT BETWEEN ((0Xffffffffb535599f)) AND ((NULL)))) AND (x'6f1c'))); -- 0ms;
SELECT DISTINCT (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c88)))) BETWEEN (((rt0.c1) BETWEEN (t0.c88) AND (t0.c90))) AND (0.5238145963596352)) FROM t0, rt0 LIMIT -1417936425; -- 0ms;
SELECT ALL COUNT(*), x'', json_quote(((((t0.c88)OR(vt0.c0)))AND(rt0.c0))) FROM vt0, t0;SELECT ALL (- (CAST(t0.c65 AS BLOB))) FROM vt0 WHERE ((- (('-657831322' IN ('kDwM'))))) GROUP BY ((((t0.c88))<=((t0.c88))) IN ()), ((((rt0.c2)AND(NULL)))AND((NOT (t0.c25)))), ((((((((((((((rt0.c1)AND(t0.c90)))AND(t0.c25)))AND(rt0.c0)))AND(rt0.c2)))AND(t0.c65)))AND(rt0.c1)))LIKE((- (rt0.c1)))) HAVING COUNT(*);SELECT DISTINCT UNLIKELY(CASE rt0.c2  WHEN t0.c25 THEN t0.c88 END) FROM t0 WHERE ((- ((((('')OR(0.011525959143418474)))AND('')))));SELECT DISTINCT (((~ (rt0.c1))) BETWEEN ((NOT (NULL))) AND (rt0.c2)), LEAD(LAST_INSERT_ROWID(), ((((t0.c88)OR(t0.c25)))|((((t0.c88)) BETWEEN ((t0.c88)) AND ((rt0.c0))))), (+ (((t0.c65)%(t0.c88))))) OVER ( ORDER BY t0.c90  NULLS LAST, rt0.c0  NULLS FIRST), NULL FROM rt0, t0 WHERE (CAST((NULL IN ()) AS BLOB)); -- 0ms;
SELECT ALL (x'' COLLATE RTRIM IN (((((t0.c88)OR(-496318201)))AND(rt0.c1)))) FROM vt0, t0, rt0; -- 1ms;
SELECT ALL t0.c25 FROM vt0, rt0;SELECT CAST(AVG(t0.c88) AS REAL), COUNT(-757470099) OVER (), CASE WHEN vt0.c0 COLLATE NOCASE THEN (- (rt0.c1)) ELSE (((rt0.c0)) NOT BETWEEN ((t0.c88)) AND ((vt0.c0))) END FROM vt0;SELECT t0.c88 FROM t0, rt0, vt0 WHERE (CASE CASE '-1352060593'  WHEN 0.6062403676128861 THEN x'' ELSE 0.9843578979282892 END  WHEN ((0.20117753629637025) NOTNULL) THEN (('') BETWEEN (x'') AND (NULL)) END) GROUP BY ((CAST(rt0.c2 AS INTEGER))&(((((rt0.c1)OR(NULL)))AND(rt0.c2)))), ((((t0.c88)%(x'')))-(((((rt0.c2)AND(t0.c25)))AND(t0.c90)))), (CASE 0.331161390890668  WHEN rt0.c2 THEN rt0.c0 END IN ()) HAVING (TYPEOF(rt0.c2) IN ()); -- 0ms;
SELECT ((('1353748718'))>=((NULL COLLATE NOCASE))), ((((rt0.c1)==(t0.c88))) BETWEEN (TOTAL(rt0.c1)) AND (((vt0.c0) NOT BETWEEN ('\') AND (vt0.c0)))), AVG(((('-608183800')) NOT BETWEEN ((t0.c25)) AND ((vt0.c0)))) OVER () FROM t0, rt0, vt0 WHERE ((+ ((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((((((((CAST(t0.c25 AS INTEGER))AND(((((((((vt0.c0)OR(t0.c90)))OR(t0.c90)))AND(x'2926')))OR(t0.c90)))))AND((rt0.c1 IN ()))))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE WHEN t0.c90 THEN x'' END)) FROM t0 WHERE ((((0.5494738522986655)) NOT BETWEEN ((0.6778803045041918)) AND ((x''))) COLLATE BINARY) LIMIT -725370194 OFFSET 2085973312;SELECT DISTINCT ((((rt0.c1) ISNULL)) NOT NULL) FROM vt0 WHERE (TRIM(DISTINCT (((x'4abe'))<((0.7177601096947714)))));SELECT DISTINCT ((((SQLITE_COMPILEOPTION_USED(t0.c90))AND(CASE WHEN rt0.c2 THEN t0.c90 END)))OR(CAST(t0.c25 AS INTEGER))) FROM t0, vt0, rt0 INDEXED BY i30 WHERE ((((((((((((('1395070157')AND(0.7906790793006118)))AND('-45551745')))AND(0.5324695314482208)))OR('-1512493089')))AND(x'5da3')))OR((('-316708021') BETWEEN ('-1672988579') AND (0.7352716795160182)))));SELECT t0.c88 FROM vt0;SELECT DISTINCT CASE WHEN CASE WHEN rt0.c0 THEN t0.c88 END THEN ((((((((t0.c25)AND(t0.c25)))AND(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)) ELSE CAST(t0.c25 AS REAL) END, ((rt0.c0)LIKE(t0.c65)) COLLATE BINARY, json_array(CASE WHEN t0.c25 THEN 0.2993866265364189 WHEN rt0.c2 THEN vt0.c0 WHEN 127019907 THEN rt0.c1 ELSE rt0.c1 END, (t0.c25 IN ())) FROM rt0, t0 WHERE ((((NULL)/(0Xffffffff8afccb97)) IN ()));SELECT 0.09261298705730825 FROM rt0, vt0 WHERE (((((NULL)!=(NULL))) ISNULL)); -- 0ms;
SELECT ALL (NOT ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c65))))), COALESCE(t0.c90, CAST(rt0.c0 AS TEXT)), (((NOT (rt0.c1))) IS TRUE), NULL, TOTAL_CHANGES() FROM rt0;SELECT ALL ((CAST(t0.c65 AS INTEGER))GLOB(((0.3658701730649264)IS NOT(t0.c88)))), CASE WHEN NULL THEN (vt0.c0 IN ()) END, (((CAST(t0.c88 AS NUMERIC)))==((LIKE('353091677', t0.c65, '-')))) FROM vt0, t0, rt0 GROUP BY '1395070157', CASE WHEN vt0.c0 THEN rt0.c1 WHEN t0.c65 THEN t0.c88 WHEN vt0.c0 THEN t0.c65 ELSE t0.c90 END COLLATE NOCASE, (((vt0.c0)) BETWEEN (((((rt0.c1, t0.c25, t0.c88, t0.c88, t0.c90, t0.c88, t0.c88))>=((vt0.c0, vt0.c0, vt0.c0, rt0.c1, NULL, rt0.c2, t0.c25))))) AND ((LOWER(t0.c25)))); -- 1ms;
SELECT ALL t0.c90, (((t0.c65)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((vt0.c0)==('-2136455730'))))), t0.c65 FROM t0, vt0 WHERE ((CAST(0.8973531261700167 AS TEXT) IN ((('0.09261298705730825')<>(NULL)))));SELECT ALL (((vt0.c0)|(rt0.c0)) IN (((((vt0.c0)OR(t0.c25)))OR(t0.c25)))) FROM rt0, vt0, t0 WHERE ((((x'', NULL, x'', 0.9662715814097388, '*P}(RRH(')) NOT BETWEEN ((x'' COLLATE BINARY, CASE WHEN NULL THEN NULL ELSE NULL END, CASE 0.8946343993310062  WHEN NULL THEN '' END, ((0xffffffffad755378)=('713711920')), ((((((((NULL)AND('')))OR('')))AND(x'')))AND(0.9843578979282892)))) AND ((('1031035167' IN ()), ((((x'398c')AND('B')))OR(NULL)), CASE x''  WHEN 0.11900713421363407 THEN 0xfffffffff8bc31a7 ELSE 0Xffffffffcf72e10c END, CAST(NULL AS REAL), (((('')AND(NULL)))OR(NULL)))))) GROUP BY ((((((t0.c25)OR(rt0.c0)))AND(x'dae2')))&(((t0.c65) NOT NULL))) HAVING (((rt0.c0 IN ()))LIKE((- (0.33739857560535713)))); -- 0ms;
SELECT DISTINCT (((t0.c65, t0.c65, '736751891', rt0.c2, t0.c88, rt0.c1, rt0.c0)) BETWEEN ((((t0.c65)>>(vt0.c0)), 0.751781997669795, GROUP_CONCAT(rt0.c2), (NOT (t0.c90)), (+ (t0.c65)), CAST(rt0.c2 AS REAL), MIN(rt0.c2, t0.c88, rt0.c1, vt0.c0))) AND ((((t0.c90)/(t0.c90)), ((t0.c88) ISNULL), 9.36774101E8, ((rt0.c0)*(t0.c25)), ((t0.c25)IS NOT(t0.c88)), (rt0.c1 IN (t0.c88)), LOWER(t0.c65)))) FROM t0, rt0 WHERE ((((((('-501110379') ISNULL))OR((x'' IN ()))))AND(((0.08418085322296398)+('-1512493089'))))) LIMIT 664178534;SELECT DISTINCT (((t0.c88 IN (rt0.c2, rt0.c1)))>>((((vt0.c0))<=((t0.c25))))) FROM t0, vt0, rt0 WHERE ((((('*bHC	fg浀q') BETWEEN (NULL) AND (x'')))LIKE(((-1649743457)/(0.711399690082518))))); -- 0ms;
SELECT ((((((((t0.c65)OR((t0.c25 IN ()))))AND(((vt0.c0)GLOB(vt0.c0)))))OR(((rt0.c0)||('1876803701')))))AND(CAST(vt0.c0 AS TEXT))) FROM vt0 GROUP BY (((t0.c90)) NOT BETWEEN (((((t0.c90, rt0.c2, rt0.c1)) NOT BETWEEN ((t0.c90, t0.c25, rt0.c0)) AND ((rt0.c1, t0.c65, t0.c65))))) AND ((CAST(NULL AS NUMERIC)))), x'', CASE WHEN ((t0.c25) NOT BETWEEN (t0.c88) AND (rt0.c0)) THEN 0.48144987936255235 END, (+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c25)))), (((((t0.c25)<<(rt0.c1))))>=((NULL COLLATE RTRIM)));SELECT ((((rt0.c1)%(NULL))) BETWEEN (CAST(t0.c88 AS INTEGER)) AND (((rt0.c0) BETWEEN (t0.c65) AND (vt0.c0)))) FROM t0 WHERE (((((load_extension('1353748718'))AND((~ ('2xwQT^tU-')))))OR(NULL)));SELECT ALL TOTAL(((((t0.c65)OR(0.3859709772676724)))AND(rt0.c2)) COLLATE BINARY) OVER () FROM t0 WHERE (((((('1081505724' IN ()))OR(json_remove(0.30632680990289674, 0Xffffffffa13eeaa9))))AND(json_array_length(x'', NULL))));SELECT (((((- (vt0.c0)))OR(rt0.c0 COLLATE RTRIM)))OR(ROUND(rt0.c0, vt0.c0))) FROM vt0, t0 WHERE ((((~ ('675740178')))>(CAST(NULL AS INTEGER))));SELECT DISTINCT CASE (+ (t0.c65))  WHEN CAST(NULL AS INTEGER) THEN rt0.c1 COLLATE NOCASE ELSE CASE WHEN 'fG}' THEN t0.c25 WHEN 'rB[]' THEN t0.c88 WHEN t0.c88 THEN vt0.c0 WHEN rt0.c1 THEN '1329857844' WHEN rt0.c2 THEN t0.c90 ELSE rt0.c0 END END FROM t0, vt0;SELECT DISTINCT '' FROM rt0, vt0, t0; -- 0ms;
SELECT json_quote((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2)))), (((vt0.c0)GLOB(vt0.c0)) IN ()), 0xfffffffff2ca26bc, AVG(((rt0.c0)%(rt0.c0))), (t0.c88 IN (0.743165715946376)) FROM rt0, t0, vt0 WHERE ((('' COLLATE BINARY)>=(CAST(0.17289453475921102 AS TEXT)))); -- 0ms;
SELECT (- ((((rt0.c2, vt0.c0, rt0.c2))<>((rt0.c2, t0.c65, rt0.c2))))), ((((((((vt0.c0)OR(t0.c65)))OR(t0.c90)))OR(((x'') IS FALSE))))OR(MIN(t0.c25))), CAST((~ (t0.c90)) AS BLOB) FROM rt0, vt0, t0 WHERE (((NULL COLLATE RTRIM) IS TRUE)); -- 0ms;
SELECT DISTINCT (- (CAST(t0.c90 AS BLOB))) FROM vt0 WHERE (((((((0.5353562673259339)*('楗k!')))OR(((NULL)<=(0.5903790042056511)))))AND(((('iS<A|CRE')) BETWEEN ((x'f207')) AND ((2.066041255E9))))));SELECT DISTINCT CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE t0.c25 END COLLATE BINARY FROM rt0, vt0, t0 WHERE ((((+ (0xffffffffd3cec899))) IS FALSE)); -- 0ms;
SELECT DISTINCT UPPER(MIN(t0.c88, vt0.c0)) FROM vt0, t0; -- 0ms;
SELECT ALL CASE (+ (t0.c65))  WHEN ((t0.c25) BETWEEN (vt0.c0) AND (t0.c25)) THEN ((rt0.c1) IS TRUE) END FROM rt0 ORDER BY t0.c25;SELECT COUNT(rt0.c0) OVER ( ORDER BY (((t0.c90)) BETWEEN ((((t0.c88) NOT BETWEEN (t0.c90) AND (t0.c65)))) AND ((t0.c25 COLLATE RTRIM))) DESC, CASE WHEN (~ (rt0.c0)) THEN ((((((((((((t0.c65)OR(t0.c25)))AND(t0.c88)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)) ELSE ((((vt0.c0)AND(t0.c90)))AND(-712488875)) END ASC, TRIM(DISTINCT t0.c65 COLLATE NOCASE, (((t0.c25))<=(('KM	')))) ASC) FROM rt0;SELECT IFNULL(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)), x'84e2') FROM rt0 WHERE (CASE WHEN x'' COLLATE NOCASE THEN '{0Is' END);SELECT DISTINCT NULL, -1717941416, COUNT(*) FROM rt0, t0; -- 0ms;
SELECT ALL ((((t0.c65)) BETWEEN ((rt0.c1)) AND ((t0.c90))) IN ()) FROM t0, vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((((t0.c65) IS TRUE))) AND ((0.3658701730649264))) FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT json_array_length(((t0.c88) NOT BETWEEN (t0.c88) AND (rt0.c0)), (rt0.c2 IN ())) FROM vt0 LIMIT -186674376;SELECT DISTINCT COUNT(((x'9305')OR(t0.c25))) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0, vt0 WHERE (CASE x'' COLLATE BINARY  WHEN (- (x'')) THEN -4.5551745E7 COLLATE NOCASE ELSE 0.4469895996387482 END);SELECT ALL ((rt0.c2)>(((t0.c90) BETWEEN (t0.c25) AND (NULL)))) FROM vt0;SELECT DISTINCT (~ (vt0.c0)) FROM vt0 NOT INDEXED, t0, rt0 GROUP BY (((((t0.c65)OR(t0.c88))))<(((~ (rt0.c2))))), (~ ('3x)dn\' COLLATE BINARY)), (rt0.c0 IN ()) COLLATE BINARY HAVING ((((t0.c65) BETWEEN (t0.c65) AND ('-736986258')))>(((t0.c88)|(NULL)))); -- 0ms;
SELECT ((((((((((t0.c90) NOT NULL))OR(((t0.c25) IS TRUE))))OR(t0.c65 COLLATE NOCASE)))AND(0.09261298705730825)))AND(HEX(rt0.c0))) FROM rt0 LIMIT -1990730394;SELECT DISTINCT (- (CAST(t0.c25 AS TEXT))) FROM vt0, t0 ORDER BY ((((rt0.c0) IS TRUE))*(CASE WHEN vt0.c0 THEN 0Xffffffff8ba161ba WHEN t0.c90 THEN vt0.c0 WHEN rt0.c1 THEN t0.c88 END)) DESC LIMIT -685576733 OFFSET 566340642;SELECT ALL ((vt0.c0)OR(CAST(t0.c25 AS REAL))) FROM rt0 WHERE ((((((0X3610950f)) BETWEEN ((0.35738144796196825)) AND ((NULL))))>(ROUND(NULL, NULL))));SELECT (- (((((t0.c25)OR(rt0.c0)))OR(t0.c65)))) FROM rt0 WHERE ((('-133084581') NOT BETWEEN ('2125189956') AND (NULL)) COLLATE NOCASE) GROUP BY (CAST(t0.c88 AS REAL) IN (CASE WHEN t0.c25 THEN t0.c90 WHEN t0.c88 THEN vt0.c0 WHEN rt0.c1 THEN t0.c25 WHEN t0.c65 THEN rt0.c2 WHEN t0.c65 THEN t0.c90 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c90 THEN rt0.c0 ELSE rt0.c1 END)) HAVING (TRIM(t0.c88) IN ());SELECT DISTINCT NTH_VALUE((((((t0.c88)>=(t0.c65)), ((t0.c90)IS NOT(rt0.c1)), (((t0.c65))>((NULL))), vt0.c0 COLLATE NOCASE, (t0.c25 IN ())))<=((ROUND(vt0.c0, rt0.c0), ((NULL)<>(t0.c88)), SQLITE_VERSION(), ((((rt0.c1)AND(t0.c90)))AND(rt0.c0)), x'e6e3' COLLATE NOCASE))), rt0.c0) OVER () FROM vt0, rt0, t0 WHERE (((CASE WHEN x'' THEN 1876803701 ELSE '-1129484234' END) NOTNULL)); -- 0ms;
SELECT ALL ((TOTAL(rt0.c0)) BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c2 AS TEXT))) FROM rt0; -- 0ms;
SELECT ALL SUM(((t0.c25) ISNULL)), (- (vt0.c0)), ((((((((t0.c88)OR(rt0.c2)))AND('566340642')))AND(CASE WHEN t0.c25 THEN t0.c65 ELSE t0.c90 END)))AND((((rt0.c2)) BETWEEN ((t0.c90)) AND ((rt0.c2))))) FROM rt0, vt0, t0 GROUP BY ((LTRIM(rt0.c1))%(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))); -- 0ms;
SELECT ALL CAST((- (rt0.c1)) AS REAL) FROM t0 WHERE (CASE WHEN 0.7906790793006118 COLLATE NOCASE THEN (((('')OR(NULL)))AND(NULL)) END);SELECT ((((((t0.c25)AND(vt0.c0)))AND(rt0.c1)))*(((t0.c90)<=(t0.c65)))), ((((rt0.c0)<=(rt0.c0)))AND(((rt0.c0) ISNULL))), ((t0.c65) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM FROM vt0, t0 NOT INDEXED ORDER BY ((((rt0.c2)-(t0.c90))) BETWEEN (((t0.c25) IS FALSE)) AND (((((t0.c88)OR(rt0.c1)))OR(rt0.c1)))), ((((rt0.c1) IS TRUE))!=(NULL)) DESC  NULLS LAST, (((+ (t0.c90)))==(CAST(t0.c65 AS REAL))) ASC  NULLS FIRST, ((rt0.c0)>>(((rt0.c1)OR(t0.c88))));SELECT DISTINCT rt0.c2 FROM t0, vt0;SELECT ALL ((CASE vt0.c0  WHEN t0.c90 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (((((vt0.c0)AND(rt0.c1)))AND(t0.c88))) AND (((('545226493', rt0.c0, t0.c65)) BETWEEN ((rt0.c1, rt0.c0, '788388627')) AND ((rt0.c2, rt0.c0, t0.c90))))), AVG(((((NULL)OR(rt0.c1)))OR(vt0.c0))) COLLATE RTRIM, LOWER(DISTINCT t0.c65), t0.c65, ((MAX(vt0.c0)) NOTNULL) FROM vt0 NOT INDEXED, rt0, t0 WHERE ((((~ (NULL)))OR(TRIM(0.42280854291355063, NULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN (((x'')) BETWEEN ((NULL)) AND ((rt0.c0))) THEN (('')>=(rt0.c2)) ELSE x'' END FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT ((((((t0.c25) BETWEEN (t0.c90) AND (t0.c90)))OR((((t0.c90)) NOT BETWEEN ((rt0.c1)) AND ((t0.c90))))))AND(vt0.c0)), SUM(CAST(vt0.c0 AS INTEGER)), (NOT (((vt0.c0)AND(vt0.c0)))) FROM rt0, t0, vt0 WHERE (((0.3496598450838083) IS FALSE) COLLATE BINARY); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(TYPEOF(rt0.c2)) OVER () FROM rt0, t0, vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM t0, rt0 WHERE (((('-262262144')GLOB(NULL)) IN ())); -- 0ms;
SELECT DISTINCT '713711920' FROM vt0; -- 0ms;
SELECT DISTINCT ((~ (t0.c65)) IN ()) FROM vt0; -- 0ms;
SELECT CASE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))  WHEN (t0.c88 IN ()) THEN CASE WHEN t0.c65 THEN t0.c90 ELSE t0.c65 END ELSE rt0.c0 END FROM rt0 WHERE (CAST(((((((((x'')OR(NULL)))OR(0.7812451527516376)))AND(NULL)))OR(')r u(')) AS INTEGER));SELECT NTH_VALUE(((rt0.c0)>=(rt0.c0)) COLLATE RTRIM, NULL) OVER ( RANGE CASE WHEN ((rt0.c0)%(-1804886317)) THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c25 THEN rt0.c2 WHEN vt0.c0 THEN t0.c25 ELSE t0.c88 END END PRECEDING EXCLUDE NO OTHERS) FROM vt0, rt0;SELECT (- (rt0.c2)) FROM t0, rt0, vt0 WHERE (json_array_length((+ ('TOKC')), (((NULL)) BETWEEN ((0.2759459798593691)) AND (('1814679416')))));SELECT DISTINCT ((t0.c90 COLLATE NOCASE)<<((t0.c88 IN (t0.c88, NULL)))) FROM vt0, rt0 WHERE (CAST((((-5.24793107E8, x'', NULL))<=((0.037841281489633394, x'8ad6', '+'))) AS INTEGER));SELECT DISTINCT CASE WHEN ((t0.c25) NOT BETWEEN (t0.c88) AND (NULL)) THEN CASE WHEN rt0.c1 THEN t0.c25 ELSE vt0.c0 END END FROM vt0 WHERE (-1674723613);SELECT DISTINCT ((((rt0.c1)AND((~ (vt0.c0)))))AND(t0.c65 COLLATE NOCASE)) FROM rt0;SELECT DISTINCT ((+ (rt0.c1)) IN (((t0.c88)*(rt0.c1)))) FROM vt0 WHERE (CASE CASE WHEN NULL THEN '1100285110' WHEN NULL THEN 0.9925164987626808 WHEN NULL THEN '' END  WHEN (~ ('')) THEN (((-2.74745293E8, 664031906, NULL, x'', x'1d92'))<(('', x'', '-1556895555', '', 0.7856391324771892))) WHEN (('0.3753316309744319')>>(x'')) THEN CAST(NULL AS NUMERIC) WHEN ((x'')|(NULL)) THEN 0.3232282302708036 COLLATE BINARY WHEN CASE WHEN '' THEN 0.9757121084292252 WHEN '/7' THEN 0.11324340021394164 WHEN 1.395070157E9 THEN '' ELSE -56691586 END THEN 0.4168801661241206 COLLATE RTRIM WHEN (('k9') IS TRUE) THEN ((NULL) ISNULL) ELSE ((x'50ce')/(9.36774101E8)) END);SELECT CASE ((rt0.c2)&(rt0.c0))  WHEN rt0.c1 THEN ((((rt0.c2)OR(t0.c25)))AND(t0.c65)) ELSE rt0.c2 END, (((((rt0.c2)%(rt0.c1))))<=((CAST(rt0.c0 AS INTEGER)))), LIKE((~ (t0.c88)), NULLIF(vt0.c0, t0.c65)) FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT (+ (((t0.c90) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((((('-850357688')) NOT BETWEEN ((NULL)) AND ((NULL)))) IS FALSE)) GROUP BY ((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN t0.c25 THEN x'' WHEN rt0.c0 THEN t0.c65 END)AND((NULL IN ()))))AND((((t0.c88)) NOT BETWEEN ((t0.c65)) AND ((t0.c65))))))OR(((rt0.c2)<=(t0.c90)))))OR((+ (rt0.c1)))) HAVING (CAST(t0.c90 AS REAL) IN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))));SELECT ALL COUNT(CAST(t0.c25 AS BLOB)) OVER () FROM vt0, rt0;SELECT DISTINCT CAST(((rt0.c0)>(rt0.c2)) AS REAL), (((vt0.c0)) BETWEEN ((CASE t0.c25  WHEN t0.c90 THEN 0.9941607753480185 WHEN rt0.c0 THEN t0.c90 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c65 END)) AND ((t0.c90))), ((highlight(NULL, rt0.c2, '83', t0.c65))<>((t0.c90 IN (rt0.c2)))) FROM vt0 LIMIT -1990730394 OFFSET -741779039;SELECT '-1672988579' FROM rt0; -- 0ms;
SELECT ALL x'' FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT ((rt0.c1) ISNULL) FROM vt0;SELECT DISTINCT CAST((+ (rt0.c0)) AS TEXT) FROM vt0, rt0, t0 WHERE (((((((((((((-2.11603146E9)OR(-9223372036854775808)))AND('0.4168801661241206')))OR(0.7153783303701502)))AND(LOWER(DISTINCT NULL))))OR(((((x'4961175e')AND(-1.394843816E9)))OR('Ln')))))AND((((0.20117753629637025, '*bHC	fg浀q', 1970276073))<>((0.2801841790534715, NULL, NULL)))))); -- 1ms;
SELECT (((NOT (t0.c65))) NOT BETWEEN ((t0.c25 IN (rt0.c1))) AND ((- (t0.c65)))) FROM rt0 WHERE ((CAST(2053005696 AS REAL) IN ()));SELECT ALL CAST((NOT (vt0.c0)) AS BLOB), json_array(CAST(rt0.c0 AS NUMERIC), ((NULL) IS TRUE)), vt0.c0 FROM vt0;SELECT DISTINCT ((CASE rt0.c2  WHEN t0.c25 THEN rt0.c2 ELSE rt0.c1 END)IS((('709765496')+(1.036340418E9)))), 0X3d74591f, ((('4 ')+(t0.c88)) IN ()) FROM t0 WHERE (((UNLIKELY(DISTINCT -1417936425))>>(((('-141798084', 0.4987767537101473, x'')) NOT BETWEEN ((NULL, 0.5238145963596352, '-221632836')) AND ((x'5719', '{%LikSV', 1481346409))))));SELECT DISTINCT (~ ((((t0.c90)) BETWEEN ((t0.c65)) AND ((rt0.c1))))) FROM rt0, vt0 WHERE ((CAST(0.002562027218077856 AS NUMERIC) IN ()));SELECT ((rt0.c2) NOT NULL), (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))<(((((NULL))<((t0.c90)))))), ((((((rt0.c2) NOT BETWEEN (t0.c25) AND (t0.c90)))AND('|n\rD흨l!7b' COLLATE NOCASE)))OR(((rt0.c2)&(rt0.c1)))) FROM rt0;SELECT ALL CASE WHEN ((rt0.c0)IS(t0.c65)) THEN CASE WHEN t0.c90 THEN rt0.c2 END ELSE IFNULL(DISTINCT t0.c88, '''*H') END FROM vt0 FULL OUTER JOIN rt0 ON TRIM(DISTINCT (((x'', t0.c25, rt0.c0))!=((x'', t0.c25, t0.c90))), ((t0.c65)!=(rt0.c0))) WHERE (((CASE WHEN 0x16c2fd89 THEN x'aef2' WHEN x'163d' THEN '' WHEN '' THEN '' ELSE ' Br''?X' END)/(((x'')>>('0.7692369108168181')))));SELECT DISTINCT t0.c88 FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT ((TOTAL(x''))AND(t0.c88)) FROM vt0, t0; -- 0ms;
SELECT ALL ABS(DISTINCT (((NULL))>=((rt0.c1)))) FROM rt0, vt0, t0 WHERE (CAST(((x'') NOT BETWEEN ('1691577225') AND ('2줇aizp\r5?')) AS BLOB)); -- 0ms;
SELECT DISTINCT t0.c25 FROM vt0;SELECT (- (((t0.c88)GLOB(rt0.c0)))) FROM t0;SELECT ALL ((t0.c88)+(CAST(t0.c88 AS REAL))) FROM vt0, rt0 WHERE (((((((0.12371115604958682)AND(0Xffffffffbf8fcf4b)))AND(((((-8.14554868E8)OR('1081505724')))OR('223817917')))))OR((-2116031460 IN ('ṛ	j&XBLfk')))));SELECT ((CAST(t0.c88 AS INTEGER))!=((+ (rt0.c1)))) FROM rt0 WHERE (LIKELIHOOD((((0.6121540767322579)) NOT BETWEEN ((0.13765430159875947)) AND ((x''))), 0.6847456913900768)) ORDER BY ((((((((CAST(t0.c90 AS TEXT))OR(((rt0.c2) NOT BETWEEN (t0.c90) AND (t0.c88)))))AND((((t0.c88))<=((NULL))))))AND(((t0.c25) NOT BETWEEN (rt0.c1) AND (NULL)))))OR((~ (t0.c90))));SELECT (((t0.c88)) NOT BETWEEN ((((rt0.c2) ISNULL))) AND ((TOTAL(rt0.c1)))), (((t0.c90) NOT BETWEEN (rt0.c0) AND (vt0.c0)) IN ()), (((t0.c65)) NOT BETWEEN ((((((((((rt0.c1)AND(rt0.c0)))AND(t0.c65)))OR(vt0.c0)))OR(rt0.c1)))) AND ((HEX(rt0.c1)))) FROM rt0, vt0 INDEXED BY i30, t0 WHERE (CAST(-889445646 COLLATE BINARY AS REAL));SELECT CAST(((t0.c90)/(rt0.c2)) AS TEXT), rt0.c0 COLLATE RTRIM, ((((((((((rt0.c0)OR(rt0.c2)))AND(t0.c25)))AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((((rt0.c1, vt0.c0, t0.c65)) NOT BETWEEN ((NULL, rt0.c0, t0.c25)) AND ((rt0.c2, t0.c90, rt0.c0)))) AND (((t0.c65) NOT NULL))) FROM vt0, t0, rt0 WHERE ((NOT (0.48853997725784526))); -- 0ms;
SELECT ALL NTILE(CASE WHEN x'' THEN IFNULL(DISTINCT t0.c65, t0.c90) ELSE t0.c90 COLLATE BINARY END) OVER (), SUM(CAST(t0.c88 AS TEXT)) OVER (), CASE ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))  WHEN AVG(t0.c25) THEN CAST(t0.c65 AS BLOB) END, NTH_VALUE(t0.c88, IFNULL((t0.c65 IN ()), (((t0.c65))=((t0.c90))))) OVER ( RANGE BETWEEN (- ((((t0.c88, rt0.c1, t0.c90, 0.9258284892750042, 0x5acaef99))>((rt0.c1, rt0.c2, t0.c88, t0.c25, t0.c88))))) PRECEDING AND x'' COLLATE BINARY PRECEDING), ((((((((((t0.c88)||(t0.c88)))AND((rt0.c1 IN (t0.c90)))))AND((rt0.c2 IN (t0.c65)))))AND(CAST(t0.c25 AS INTEGER))))OR((((rt0.c0))>((t0.c90))))) FROM t0 NOT INDEXED WHERE ((((x'', x'', 'Mo愰')) BETWEEN (((((NULL))<((0.338193490099182))), (NULL IN ()), CASE WHEN 18415759 THEN x'' ELSE 0Xffffffffa5d92fdf END)) AND (((('὜&')*(0.47251248413656555)), (x'' IN ('135321823')), '791808981' COLLATE BINARY))));SELECT ALL (((((vt0.c0)) BETWEEN ((0.09245182619029058)) AND ((t0.c65)))) IS FALSE) FROM rt0, vt0 ORDER BY (((CASE NULL  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c90 WHEN t0.c65 THEN t0.c88 ELSE '' END))==((vt0.c0)))  NULLS FIRST, CASE MIN(t0.c65, rt0.c0)  WHEN t0.c90 COLLATE BINARY THEN (- (rt0.c2)) END DESC;SELECT DISTINCT ((rt0.c0) IS TRUE) FROM vt0, rt0 WHERE (((0.8901567389787843) NOTNULL) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((t0.c90) IS TRUE))GLOB(t0.c90)) FROM rt0, vt0;SELECT ALL CASE ((rt0.c2)OR(vt0.c0))  WHEN ((x'a25f')==(vt0.c0)) THEN (rt0.c2 IN ()) ELSE ((t0.c88) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END, ((UNLIKELY(DISTINCT t0.c88))|(((rt0.c0) IS FALSE))), vt0.c0 FROM rt0, t0, vt0 ORDER BY ((COALESCE(t0.c25, rt0.c1))>>((rt0.c1 IN ()))), (0.3496598450838083 IN ()) COLLATE RTRIM ASC  NULLS FIRST; -- 0ms;
SELECT ((((t0.c90)) NOT BETWEEN ((rt0.c1)) AND ((t0.c25))) IN ()) FROM vt0, t0 WHERE (((('-407259876')<>(NULL)) IN (((x'')IS NOT(566340642))))); -- 1ms;
SELECT ((GROUP_CONCAT(rt0.c2)) BETWEEN (((t0.c25) BETWEEN (rt0.c0) AND (t0.c90))) AND (CAST(rt0.c0 AS INTEGER))), HEX((t0.c88 IN ())), vt0.c0 FROM rt0, vt0 WHERE ((+ ((~ (x'f3e0')))));SELECT (t0.c25 COLLATE NOCASE IN ()), rt0.c2, ((((rt0.c2)||(x'')))IS NOT((+ (vt0.c0)))) FROM vt0;SELECT DISTINCT CAST(NULL AS REAL) FROM t0, rt0 WHERE (CASE WHEN '&_t''Ao75' THEN x'' WHEN x'' THEN '353091677' WHEN -669903720 THEN x'ed4f' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (NOT (CAST(t0.c90 AS REAL))) FROM t0 WHERE ((+ (CASE NULL  WHEN 0.257583728069682 THEN x'' ELSE 0Xffffffffe64af6c2 END))); -- 0ms;
SELECT DISTINCT (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c88)))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((t0.c90) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) FROM rt0 WHERE ((((('')<=(x'')))*((0.11744173246840328 IN ()))));SELECT DISTINCT vt0.c0 FROM vt0, rt0; -- 0ms;
SELECT ALL LAST_VALUE(0.30499664488955425) OVER () FROM vt0 WHERE ((((x'') BETWEEN (x'8d05') AND (NULL)) IN ())) LIMIT 127662020 OFFSET -416965284; -- 0ms;
SELECT (rt0.c0 IN (CASE WHEN rt0.c2 THEN t0.c25 ELSE t0.c65 END)) FROM t0, vt0;SELECT (~ (((vt0.c0) ISNULL))), CAST((vt0.c0 IN ()) AS BLOB), t0.c90, AVG(rt0.c2), TIME(CAST(t0.c65 AS BLOB), SUBSTR(t0.c65, t0.c25), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c90 END) FROM vt0, rt0 WHERE (((((185171568) IS FALSE))=((x'6025' IN (0.5343334683603554, x'8faf')))));SELECT DISTINCT (- (CAST(t0.c25 AS BLOB))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))>(-1.352060593E9)) FROM t0, rt0; -- 0ms;
SELECT UNLIKELY((((-5.6691586E7)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) FROM vt0, rt0 WHERE (((('1544084987' IN ()))!=((('2040628858')<(0.6238881149346525))))) GROUP BY CASE WHEN ((vt0.c0) ISNULL) THEN t0.c90 WHEN ((rt0.c0)-(x'9c66')) THEN CASE t0.c65  WHEN t0.c88 THEN t0.c88 END WHEN LIKELIHOOD('664178534', 0.9331636337090804) THEN ((t0.c65) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END HAVING COUNT(*);SELECT ALL CASE WHEN CAST(t0.c65 AS TEXT) THEN CASE t0.c88  WHEN t0.c65 THEN 6.64178534E8 END END FROM t0, rt0, vt0 LIMIT -530388861; -- 0ms;
SELECT DISTINCT (((((rt0.c2, t0.c88, rt0.c2))=((t0.c88, t0.c65, t0.c88)))) NOTNULL) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL), ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (COUNT(rt0.c1)) AND ((((rt0.c2, rt0.c1, vt0.c0))<((t0.c65, rt0.c1, t0.c25))))), ((((((x'16ea')AND(t0.c88)))AND(((((((((((((rt0.c0)OR(rt0.c0)))OR(t0.c88)))AND(vt0.c0)))OR(0.7270982302508738)))OR(t0.c88)))OR(rt0.c0)))))OR('-1262384805')) FROM t0, rt0 WHERE ((~ (((((((((x'')AND(0X595f5251)))AND('{0is')))AND(')r u(')))AND(NULL)))));SELECT DISTINCT CAST(t0.c90 AS NUMERIC) FROM t0; -- 0ms;
SELECT ((((NULL)IS NOT('0.11744173246840328')))-(((rt0.c2) BETWEEN (t0.c90) AND (rt0.c1)))) FROM vt0;SELECT ALL (((((rt0.c2))<((t0.c65)))) NOT BETWEEN (CASE t0.c88  WHEN t0.c88 THEN t0.c25 END) AND (NULL)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0, rt0, vt0 WHERE (((0.6150236482933941)!=(0.3414437651691036 COLLATE RTRIM))) LIMIT -2065235533; -- 0ms;
SELECT ALL ((((rt0.c1)!=(vt0.c0)))IS NOT((((t0.c25, t0.c65, t0.c25)) NOT BETWEEN ((t0.c65, t0.c65, vt0.c0)) AND ((rt0.c1, t0.c25, vt0.c0))))) FROM rt0 WHERE ((((((((((NULL)AND('')))OR('-2136455730')))OR(x'8ef7')))OR(NULL)) IN ())) GROUP BY (CASE t0.c90  WHEN -6.081838E8 THEN t0.c65 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN NULL END IN ()), 0.45214986603255536, (((t0.c25 IN ('750121820')))&(t0.c90)) HAVING (((~ (vt0.c0))) BETWEEN (LOWER(t0.c90)) AND (((((rt0.c1)AND(t0.c25)))OR(t0.c88))));SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0, rt0, t0 WHERE (((CAST('89946699' AS BLOB)) IS FALSE)); -- 0ms;
SELECT DISTINCT t0.c65 FROM t0 WHERE ((- (((x'') IS TRUE)))) LIMIT -653151766; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 COLLATE RTRIM AS BLOB) FROM rt0, t0, vt0 WHERE (((NULLIF('', NULL)) NOTNULL)) ORDER BY x'', CAST(0X22e99355 AS NUMERIC) ASC, rt0.c2; -- 0ms;
SELECT DISTINCT (((+ (rt0.c0))) IS TRUE), AVG(t0.c65) COLLATE RTRIM, (((CAST(rt0.c0 AS TEXT)))<((CAST('0.7906790793006118' AS TEXT)))) FROM vt0, rt0, t0; -- 0ms;
SELECT ALL COUNT(*), ((rt0.c1) NOT NULL) COLLATE RTRIM, (((((t0.c90, t0.c88, t0.c65)) NOT BETWEEN ((rt0.c1, t0.c25, t0.c65)) AND ((t0.c65, t0.c90, rt0.c0))))<<((+ (t0.c25)))) FROM t0, vt0, rt0; -- 0ms;
SELECT ALL (((t0.c88)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) FROM rt0, vt0;SELECT DISTINCT (((x''))>((SUM(vt0.c0)))), CAST(x'244c' AS NUMERIC), ((((((((((((((t0.c90)AND(t0.c65)))OR(t0.c88)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c2)))OR(t0.c65))) NOTNULL) FROM rt0, vt0, t0; -- 0ms;
SELECT '-1254794849', CAST(((t0.c88)<>(rt0.c0)) AS REAL), rt0.c2 FROM rt0, t0, vt0 INDEXED BY i30;SELECT DISTINCT COUNT(((t0.c25) BETWEEN (NULL) AND (rt0.c1))) OVER ( ORDER BY ((CAST(rt0.c2 AS TEXT))>=(CAST(rt0.c0 AS BLOB)))  NULLS LAST), (((x'' IN ())) IS FALSE), (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c65))))*(t0.c65 COLLATE NOCASE)) FROM vt0, t0 WHERE ((ABS(DISTINCT x'') IN ()));SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, t0; -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN ((((t0.c25)-(rt0.c2)))) AND ((TRIM(rt0.c2, t0.c65)))), ROW_NUMBER() OVER (), ((((TRIM(DISTINCT rt0.c1))OR(TYPEOF(t0.c90))))AND(TOTAL(t0.c25))) FROM t0, vt0 WHERE (((NULL)<<((((('vPSL')AND('-2040704582')))AND(0.11324340021394164)))));SELECT t0.c88 FROM vt0, t0, rt0; -- 0ms;
SELECT (CASE WHEN vt0.c0 THEN t0.c90 ELSE rt0.c0 END IN ()) FROM rt0, vt0; -- 0ms;
SELECT ALL CAST(rt0.c0 AS INTEGER), ((('') NOT NULL) IN ()), (UPPER(t0.c90) IN ()) FROM rt0, t0 WHERE ((((('')IS NOT('r{l{')))IS((- ('ϔ['))))); -- 0ms;
SELECT DISTINCT CASE (~ (t0.c88))  WHEN AVG(t0.c90) THEN ((((rt0.c2)OR(t0.c25)))AND(vt0.c0)) ELSE TRIM(DISTINCT t0.c90, rt0.c1) END, ((0x47cb505) BETWEEN (((t0.c25) ISNULL)) AND (((t0.c25)OR(rt0.c2)))), (~ (CASE vt0.c0  WHEN rt0.c1 THEN t0.c88 ELSE rt0.c2 END)), CASE WHEN QUOTE(t0.c65) THEN COUNT(rt0.c2) ELSE ((rt0.c1)<(rt0.c1)) END, (((~ (rt0.c2)))-(((t0.c25)<(t0.c65)))), CHANGES() COLLATE RTRIM, AVG(t0.c90) FROM rt0 INDEXED BY i30, t0, vt0 WHERE (((((NULL) BETWEEN (0.285136824763913) AND (x'dfd3f344')))<<((((x''))>=(('-795922788'))))));SELECT DISTINCT vt0.c0 FROM vt0 ORDER BY x'' COLLATE RTRIM; -- 0ms;
SELECT ALL TRIM(DISTINCT CAST(NULL AS TEXT)) FROM t0 WHERE (json_object((+ ('FALSE')), ((NULL) NOTNULL), ((0.20699492060111813) NOT NULL), (((('')OR(x'')))AND('0.7076812722690585'))));SELECT ((((t0.c90) NOT NULL))>(MAX(t0.c65))) FROM vt0, rt0;SELECT CASE WHEN CAST(t0.c88 AS BLOB) THEN (('*bHC	fg浀q')-(t0.c88)) ELSE ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) END, RANK() OVER (), ((((CAST(t0.c90 AS REAL))AND((t0.c90 IN ()))))OR((rt0.c0 IN ()))) FROM t0, rt0, vt0; -- 0ms;
SELECT ALL COUNT(CASE WHEN t0.c90 THEN rt0.c1 ELSE rt0.c2 END) OVER () FROM rt0 WHERE ((((+ ('0.13765430159875947'))) NOT BETWEEN ((~ ('970885795'))) AND (((NULL)IS NOT('')))));SELECT HEX(DISTINCT t0.c88) FROM rt0;SELECT DISTINCT ((t0.c25)LIKE(((((t0.c65)AND(rt0.c2)))OR(t0.c88)))) FROM rt0, vt0, t0; -- 0ms;
SELECT ((CAST(t0.c88 AS BLOB))>>(t0.c25)), ((((rt0.c1)-(rt0.c2)))>>(CAST(t0.c90 AS TEXT))), (CASE t0.c90  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c65 WHEN vt0.c0 THEN rt0.c0 ELSE '| V3T%' END IN ()) FROM vt0, t0, rt0 WHERE ((('973020732')+((('') BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT CASE WHEN TRIM(rt0.c0) THEN CASE rt0.c2  WHEN t0.c65 THEN t0.c90 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c25 END ELSE CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN t0.c65 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE 0.72613902360716 END END FROM t0, rt0 GROUP BY (((t0.c90)) BETWEEN ((((t0.c25)==(t0.c88)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));SELECT ALL NULL FROM t0, rt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0, t0, rt0; -- 1ms;
SELECT DISTINCT CAST(CAST(t0.c88 AS NUMERIC) AS NUMERIC) FROM vt0;SELECT DISTINCT ((CASE WHEN t0.c90 THEN t0.c88 END) NOT NULL), LAST_VALUE(CASE WHEN ((t0.c90)IS(rt0.c0)) THEN t0.c25 WHEN CAST(rt0.c2 AS BLOB) THEN CASE t0.c65  WHEN t0.c25 THEN rt0.c2 END WHEN (rt0.c2 IN ()) THEN ((t0.c88)==(rt0.c1)) END) OVER (), (+ (COUNT(t0.c65))) FROM t0, rt0 WHERE (CASE WHEN (((0X57332f99))>=((x''))) THEN CASE WHEN -56691586 THEN x'' END WHEN ((((((((x'817b')OR(NULL)))OR(0.46991786772834765)))OR(x'7bd3')))OR(-135210971)) THEN (('-1803482300') NOT NULL) WHEN (+ (NULL)) THEN ((0.5903790042056511)||(0.339391291883679)) END); -- 0ms;
SELECT DISTINCT COUNT(((((((((t0.c25)OR(rt0.c0)))AND(t0.c90)))AND(t0.c90)))OR(t0.c88))) OVER () FROM t0, rt0 NOT INDEXED WHERE (((((NULL COLLATE BINARY)OR(((NULL) NOT BETWEEN (x'') AND (NULL)))))OR(((0x810d8df)<>(NULL))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(TOTAL(t0.c25)) COLLATE BINARY FROM rt0, t0 GROUP BY ((((rt0.c0)/(x'2ffe')))|(load_extension(t0.c88))), t0.c65, (x'' COLLATE NOCASE IN ((t0.c25 IN (x'', rt0.c1)), (~ (rt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))) HAVING CAST(json_array(t0.c90, t0.c90) AS INTEGER);SELECT SUM(x'') FROM rt0; -- 0ms;
SELECT ALL ((t0.c65)LIKE(vt0.c0)) COLLATE NOCASE FROM vt0, t0, rt0 WHERE ((((('(b6gD䁋^5' COLLATE BINARY)AND(CAST('O~7贱3V' AS INTEGER))))AND(((NULL) IS TRUE)))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt0, t0 LIMIT 1175182978 OFFSET 1950786385; -- 0ms;
SELECT DISTINCT LIKE(((((((((t0.c65)OR(t0.c88)))OR(rt0.c0)))AND(t0.c88)))AND(rt0.c0)), CASE t0.c65  WHEN rt0.c1 THEN t0.c25 END, '7') FROM vt0 INDEXED BY i30, t0;SELECT ALL LAG(t0.c25, ((((t0.c88)GLOB(rt0.c0))) BETWEEN (((rt0.c0)>(rt0.c1))) AND (CASE WHEN rt0.c1 THEN t0.c65 ELSE rt0.c1 END)), (((rt0.c2) BETWEEN (t0.c25) AND (t0.c90)) IN (0.7177601096947714))) OVER () FROM rt0, t0 WHERE (((CAST(x'3152' AS TEXT)) ISNULL)); -- 0ms;
SELECT DISTINCT 0.728798703118557 FROM t0, rt0, vt0; -- 0ms;
SELECT ALL NULLIF(-933134324, ((t0.c25) NOT BETWEEN (vt0.c0) AND (t0.c90))) FROM vt0 WHERE (((('u彘', '-1210313135', '1290349268'))>=(('272531510', NULL, NULL))) COLLATE NOCASE);SELECT DISTINCT (((CASE rt0.c0  WHEN t0.c25 THEN rt0.c2 WHEN t0.c90 THEN t0.c90 WHEN t0.c65 THEN rt0.c2 END))<((0.3738624784966883 COLLATE BINARY))) FROM vt0, rt0, t0; -- 0ms;
SELECT ((((((((((t0.c90)OR(t0.c90)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))GLOB(NULLIF(DISTINCT rt0.c1, t0.c25))) FROM vt0 WHERE ((((1765585860))<(((- (NULL))))));SELECT DISTINCT t0.c90 FROM rt0, vt0 LIMIT 1630146355;SELECT json_insert(t0.c88, t0.c65, (~ (vt0.c0))) FROM vt0, t0, rt0; -- 0ms;
SELECT ALL UPPER((rt0.c2 IN ())) FROM vt0, t0; -- 1ms;
SELECT rt0.c2 FROM vt0, rt0, t0 WHERE (('P貧' COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT COUNT(((t0.c25)/(t0.c90))) FROM t0 WHERE ((((('S-GI') ISNULL))LIKE((('1839627592')<>(-2027189180))))); -- 0ms;
SELECT (CAST(t0.c65 AS TEXT) IN ()) FROM t0; -- 0ms;
SELECT ALL (((rt0.c1, rt0.c2, t0.c88, rt0.c1, 1818016211)) NOT BETWEEN ((CAST(0.257583728069682 AS NUMERIC), UPPER(DISTINCT rt0.c0), (rt0.c2 IN (rt0.c2, t0.c90)), ((0.6970338367327124)&(t0.c88)), (t0.c88 IN (0.8628826670303879, t0.c25)))) AND ((rt0.c1 COLLATE BINARY, rt0.c1 COLLATE BINARY, ((rt0.c1)%(t0.c90)), ((((((((t0.c65)AND(t0.c25)))AND(t0.c88)))AND(t0.c25)))OR(rt0.c2)), ((rt0.c0)>=(rt0.c1))))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT x'b796' FROM t0 ORDER BY t0.c25 ASC; -- 0ms;
SELECT ((((t0.c25) NOT NULL))IS NOT(t0.c88 COLLATE BINARY)) FROM vt0 WHERE (CAST('806087358' COLLATE NOCASE AS TEXT));SELECT ALL AVG(((((t0.c25)OR(rt0.c2)))AND(t0.c90))) OVER () FROM rt0, t0, vt0; -- 1ms;
SELECT DISTINCT NULL FROM rt0, vt0; -- 0ms;
SELECT ALL ((((((((NULL)OR(CASE t0.c65  WHEN t0.c65 THEN rt0.c0 END)))OR(((t0.c65) IS TRUE))))OR(((rt0.c1)!=(rt0.c2)))))AND(0.7314518592986613 COLLATE NOCASE)) FROM rt0, t0, vt0; -- 0ms;
SELECT HEX(DISTINCT (NOT (0.4279079808192625))) FROM t0, rt0, vt0 WHERE (((((NULL) NOT BETWEEN ('') AND (x''))) IS FALSE)); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (CAST((~ (NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT x'', UNICODE(((NULL)=(rt0.c2))), (NOT (TRIM(rt0.c2, t0.c25))) FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT (((t0.c25 IN ())) BETWEEN (((((rt0.c0)OR('-1394843816')))OR(vt0.c0))) AND (((vt0.c0)>>(NULL)))) FROM t0, rt0 WHERE (((((NULL) IS FALSE)) BETWEEN ((+ (x''))) AND ((('Mo愰') BETWEEN ('[t') AND (0xffffffffd3dae59a)))));SELECT ((SUM(t0.c25))%((NOT (t0.c90)))) FROM vt0, rt0, t0; -- 1ms;
SELECT ALL x'', MIN('-56691586'), (((~ (vt0.c0))) NOTNULL) FROM t0, vt0, rt0 WHERE ((((('1104870940')IS(0.6923640953582697)))<>(((0.31305873421588104) IS FALSE)))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), (((TYPEOF(DISTINCT rt0.c1), (t0.c25 IN (t0.c88)), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))>((((NULL)|(rt0.c1)), rt0.c0, ((t0.c25) ISNULL)))), ((((((((vt0.c0 COLLATE BINARY)AND(COUNT(*))))OR(((rt0.c1) IS TRUE))))OR(((rt0.c2)>(rt0.c2)))))AND(((t0.c90)|(rt0.c1)))) FROM t0, rt0 WHERE (CASE ''  WHEN x'c521' THEN 0.0557966672413992 ELSE x'd4d4' END COLLATE BINARY);SELECT DISTINCT LIKELY(CASE vt0.c0  WHEN t0.c65 THEN 0.5272920287122373 WHEN 0.02673894929116538 THEN t0.c90 WHEN rt0.c0 THEN t0.c90 END), ((t0.c88) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE RTRIM, CAST(MIN(rt0.c0, vt0.c0, rt0.c2, x'') AS REAL), (((((vt0.c0, '0.09261298705730825', rt0.c2)) NOT BETWEEN ((rt0.c2, NULL, vt0.c0)) AND ((t0.c25, t0.c90, t0.c25))))<>(CAST(rt0.c2 AS INTEGER))), ((CASE WHEN t0.c65 THEN t0.c88 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN NULL ELSE t0.c25 END) NOT NULL) FROM rt0, vt0;SELECT ALL ROUND(rt0.c0, t0.c90), COUNT((vt0.c0 IN ())), (((~ (t0.c65))) BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (t0.c88))) AND (x'')) FROM t0 WHERE ((((((((1.85171568E8, '', 95017993))==((NULL, 0xffffffffa9cd470b, '-782011425'))))AND((('-970630310') NOT BETWEEN ('-20502699') AND ('좙H')))))AND((((NULL)) NOT BETWEEN (('390424274')) AND ((x''))))));SELECT (NOT ((- (t0.c65)))), (((((vt0.c0 IN ()))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c1)), DATETIME(CASE WHEN rt0.c1 THEN vt0.c0 ELSE t0.c88 END, ((rt0.c1)>(rt0.c1)), ((((((((t0.c65)OR(t0.c25)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))), ((CASE WHEN vt0.c0 THEN t0.c65 END) BETWEEN (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(t0.c65)))OR(vt0.c0))) AND ((((rt0.c2)) NOT BETWEEN ((t0.c90)) AND ((t0.c25))))), ROW_NUMBER() OVER () FROM t0, rt0, vt0 WHERE (((((~ (0X6163b2e9)), (NOT (0x5df66421)), '-20502699'))!=((NULL COLLATE NOCASE, (- (x'')), ((((NULL)AND(x'91d5')))AND(NULL)))))); -- 1ms;
SELECT ALL LAG(((0.054536037674383975) IS FALSE) COLLATE RTRIM, CASE CAST(rt0.c0 AS NUMERIC)  WHEN rt0.c2 COLLATE RTRIM THEN t0.c65 ELSE ((((t0.c65)OR(rt0.c1)))OR(rt0.c0)) END, (COALESCE(DISTINCT rt0.c2, t0.c90) IN ())) OVER () FROM rt0, t0, vt0; -- 0ms;
SELECT ALL x'', (((t0.c65 IN ())) IS TRUE), ((COUNT(rt0.c0))!=(((x'')LIKE(rt0.c1)))) FROM rt0, t0, vt0 WHERE ((NULL IN ())) LIMIT 2128514905; -- 0ms;
SELECT DISTINCT (((rt0.c1, MAX(vt0.c0), (((t0.c65))>=((rt0.c2)))))<>((COUNT(t0.c90), ((rt0.c0) NOT BETWEEN (t0.c90) AND ('-745583027')), TOTAL(t0.c90)))) FROM rt0, vt0, t0 WHERE ((('') NOT NULL) COLLATE BINARY); -- 0ms;
SELECT t0.c25, NTILE(CAST(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)) AS INTEGER)) OVER (), JULIANDAY((('Jj') NOT BETWEEN (t0.c88) AND (t0.c25)), (NOT (t0.c65)), ((t0.c25)%(t0.c90)), CASE rt0.c1  WHEN t0.c90 THEN rt0.c0 WHEN '-O.' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 END, NULL) FROM vt0, rt0 WHERE (((((((NULL)GLOB(1.35321823E8)))AND((((0.5745746913294068, NULL, '-669903720'))<>((NULL, 0.8352049889111944, x'dfb7'))))))AND((('2147023214')AND('')))));SELECT ((CAST(t0.c65 AS TEXT)) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND (((rt0.c0) IS TRUE))) FROM t0, rt0 GROUP BY (((t0.c65)>(rt0.c0)) IN (NULL)) HAVING CASE WHEN ((rt0.c1) NOT NULL) THEN LIKELIHOOD(DISTINCT rt0.c0, 0.058228423584665956) ELSE t0.c90 COLLATE NOCASE END; -- 1ms;
SELECT DISTINCT ((((rt0.c0) ISNULL))GLOB(((t0.c65)%(t0.c90)))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT COUNT(((('(~6*', rt0.c1, rt0.c2))>=((rt0.c1, rt0.c1, rt0.c0)))) FILTER(WHERE CAST(t0.c88 AS INTEGER)) OVER (), TOTAL(COUNT(MAX(rt0.c1, '-516921659', rt0.c0, t0.c65))), (~ (rt0.c1 COLLATE RTRIM)) FROM vt0 LEFT OUTER JOIN rt0 ON x'93a2' WHERE (UPPER((((''))<>((0.42280854291355063)))));SELECT ALL (((0X150bc05d) ISNULL) IN ()), ((x'' COLLATE RTRIM)>((((t0.c90))>((t0.c88))))), (((t0.c90 IN ()))<=(TRIM(DISTINCT t0.c88))) FROM t0 ORDER BY json_object(((rt0.c2) NOTNULL), (t0.c90 IN ())) ASC  NULLS LAST LIMIT 1081505724;SELECT DISTINCT ((rt0.c1) NOT BETWEEN (t0.c88) AND (rt0.c0)) COLLATE NOCASE FROM t0 WHERE (CAST(CAST('1726113607' AS INTEGER) AS NUMERIC));SELECT ALL ((((((t0.c88)AND(t0.c25)))OR(rt0.c2)))+(((t0.c88)%(vt0.c0)))) FROM t0 WHERE ((((CAST(NULL AS INTEGER)))<=(((1154908963 IN ('MO愰', '-815254827'))))));SELECT ALL (~ ((+ (t0.c90)))), ((((((rt0.c1)AND(t0.c25)))AND(vt0.c0))) IS TRUE), (- (rt0.c0 COLLATE RTRIM)), CAST(((rt0.c2)<>(0.3913475095958969)) AS NUMERIC), (((rt0.c2)) BETWEEN ((t0.c88 COLLATE BINARY)) AND ((((t0.c90)>(t0.c90))))) FROM t0, vt0, rt0 WHERE ((((((((((('-1254794849')*(x'7cba')))OR((-366652537 IN ()))))OR((((((((('K2tH')OR(NULL)))OR('750121820')))AND(4.01040862E8)))AND(NULL)))))AND('566340642')))AND(CASE NULL  WHEN NULL THEN NULL END))); -- 0ms;
SELECT DISTINCT ((t0.c88)IS(vt0.c0)) COLLATE NOCASE, json_array((((vt0.c0))>((rt0.c0))), (- (t0.c65))), (- (8.06087358E8)) FROM rt0, vt0, t0 ORDER BY (((((rt0.c2)>=(t0.c25))))>=((((rt0.c0)/(t0.c65))))) DESC  NULLS FIRST, CASE (NULL IN ())  WHEN (t0.c90 IN (rt0.c1)) THEN ((rt0.c2) NOT NULL) WHEN ((((rt0.c1)AND(t0.c25)))OR(vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) WHEN DATE(t0.c25, vt0.c0, t0.c65) THEN ((rt0.c1)!=('1009982478')) ELSE (((vt0.c0))==((rt0.c2))) END ASC  NULLS FIRST; -- 0ms;
SELECT (NOT (x'410d')) FROM rt0, t0 WHERE (CASE ((NULL) NOT BETWEEN (0.6773100873282903) AND (x''))  WHEN (((NULL)) NOT BETWEEN (('')) AND ((NULL))) THEN 0.05722353399654123 WHEN NULL THEN ((((((((x'05c6')AND('1808127285')))OR(1985414201)))AND(0.27470752667648)))OR(x'4a0d')) WHEN CAST(x'9f79' AS BLOB) THEN NULLIF(4.01040862E8, NULL) END); -- 0ms;
SELECT ALL (((- (rt0.c1))) BETWEEN (rt0.c1) AND (((rt0.c1) NOT BETWEEN (t0.c88) AND (rt0.c0)))) FROM vt0 WHERE ('') GROUP BY ((t0.c88 COLLATE BINARY) ISNULL);SELECT DISTINCT ((((rt0.c0)>(0.9354781992854443)))/((((t0.c25, t0.c90, rt0.c2)) NOT BETWEEN ((rt0.c2, t0.c65, t0.c88)) AND ((t0.c65, rt0.c2, rt0.c2))))) FROM rt0, t0 LIMIT -1055529945 OFFSET -1672988579; -- 1ms;
SELECT ALL (~ (t0.c88)) FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((((t0.c90) IS FALSE))) AND ((CAST(t0.c25 AS BLOB))));SELECT ((((t0.c88) BETWEEN (rt0.c2) AND (vt0.c0)))<<(((rt0.c1)||(rt0.c1)))), ((((rt0.c0)>(vt0.c0)))<=(LOWER(rt0.c2))), ((t0.c88 COLLATE NOCASE)*(((rt0.c2)&(x'8779')))) FROM rt0;SELECT DISTINCT ((((((((CASE WHEN t0.c88 THEN t0.c65 END)AND(SUM(rt0.c0))))AND(CAST(t0.c90 AS INTEGER))))OR(CASE vt0.c0  WHEN t0.c25 THEN t0.c90 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c88 ELSE t0.c25 END)))AND(((rt0.c2)AND(rt0.c1)))), ('' IN (((rt0.c2) NOT NULL), (((t0.c65)) NOT BETWEEN ((t0.c65)) AND ((t0.c65))))), LIKELIHOOD(t0.c88, 0.33440082527059967) COLLATE RTRIM FROM vt0 WHERE (CAST(((((NULL)OR(-1418717723)))OR('23192545')) AS INTEGER));SELECT FIRST_VALUE(json_type(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) OVER () FROM vt0 WHERE (CASE WHEN (x'' IN ()) THEN (('Ii') BETWEEN (NULL) AND ('0&')) END); -- 0ms;
SELECT DISTINCT ((((MAX(t0.c65))OR(MAX(t0.c90))))OR((~ (t0.c88)))) FROM rt0, t0, vt0 WHERE (NULL); -- 0ms;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST(x'0954' AS REAL)) NOTNULL)); -- 0ms;
SELECT CAST(((((((((t0.c25)AND(vt0.c0)))OR(t0.c25)))AND(rt0.c2)))AND('-725370194')) AS TEXT), AVG(CASE WHEN t0.c90 THEN t0.c88 ELSE t0.c65 END) OVER (), ((((t0.c65)) NOT BETWEEN ((t0.c25)) AND ((t0.c25))) IN ((- (rt0.c2)))) FROM vt0, rt0;SELECT TOTAL(((rt0.c1) BETWEEN (t0.c65) AND (t0.c90))) OVER ( ORDER BY '&珟%z'  NULLS FIRST, (IFNULL(DISTINCT t0.c65, vt0.c0) IN ()) ASC) FROM rt0, vt0 ORDER BY (((~ (rt0.c0)))%((NOT (t0.c88)))) ASC;SELECT DISTINCT ((COUNT(t0.c88)) IS FALSE) FROM rt0, t0 WHERE (CASE '-741779039'  WHEN x'' THEN 0.3166745277775894 ELSE -0.0 END COLLATE BINARY); -- 0ms;
SELECT DENSE_RANK() OVER ( ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN x'' ELSE json_array(rt0.c2, t0.c25, '', t0.c88) END ASC  NULLS FIRST, NULL COLLATE RTRIM, (('-O.') BETWEEN (((rt0.c2) IS FALSE)) AND (0.12758562627198056))  NULLS LAST) FROM rt0 INDEXED BY i30, vt0 WHERE ((+ (0.5324695314482208)));SELECT ALL ((~ (rt0.c1)) IN ()), GROUP_CONCAT(((t0.c90) NOT BETWEEN (t0.c25) AND (t0.c25))), (((((rt0.c2)AND(t0.c25)))AND(rt0.c0)) IN (ABS(DISTINCT t0.c88))) FROM vt0, t0;SELECT DISTINCT CASE WHEN rt0.c0 THEN ((((((((t0.c88)OR(t0.c65)))AND(vt0.c0)))OR(rt0.c2)))AND(t0.c90)) ELSE x'2d1c' END FROM t0, vt0, rt0 WHERE (CHAR(TRIM(DISTINCT 0xffffffffae9a634e, x''))); -- 0ms;
SELECT DISTINCT COUNT(*), ((((CAST(rt0.c2 AS INTEGER))OR(CAST('aK<' AS NUMERIC))))AND((NOT (rt0.c0)))), NTH_VALUE(((rt0.c0)<(rt0.c0)) COLLATE BINARY, ((CASE t0.c90  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c88 THEN t0.c88 ELSE t0.c65 END)>=(CAST(rt0.c0 AS INTEGER)))) OVER ( ORDER BY ((SQLITE_COMPILEOPTION_USED(x'')) BETWEEN (378959162) AND (rt0.c1 COLLATE BINARY)) DESC, ((((t0.c25)-(vt0.c0))) ISNULL) DESC) FROM vt0, rt0, t0;SELECT DISTINCT rt0.c1, COUNT(*) FILTER(WHERE rt0.c2) OVER (), SUM(CAST(t0.c88 AS NUMERIC)) FROM rt0, t0, vt0 LIMIT -736986258; -- 0ms;
SELECT ALL (((t0.c90)) NOT BETWEEN ((CAST(x'420f' AS BLOB))) AND ((CAST(t0.c88 AS INTEGER)))) FROM vt0, rt0, t0; -- 0ms;
SELECT ((((vt0.c0)IS NOT(t0.c90))) BETWEEN ((('za7Yc3')%(0.983283187676116))) AND (((t0.c88) IS FALSE))), GROUP_CONCAT('1857097231') OVER (), (((+ (rt0.c2)))<=(AVG(rt0.c0))) FROM vt0, rt0 WHERE (LIKELIHOOD((~ ('698307661')), 0.6523959224276515)) LIMIT -807277837 OFFSET 1207759900;SELECT DISTINCT ((CAST(0.38797446211534936 AS NUMERIC)) ISNULL) FROM t0, vt0, rt0 WHERE ((- (LTRIM('')))) ORDER BY ((((((((vt0.c0)AND(rt0.c0)))AND(t0.c25)))AND(((t0.c88) NOT BETWEEN (rt0.c0) AND (t0.c65)))))AND(HEX(t0.c90))) ASC; -- 0ms;
SELECT DISTINCT SUM((+ (t0.c25))), GROUP_CONCAT(((rt0.c2) BETWEEN (vt0.c0) AND (t0.c65))), ((CAST(rt0.c0 AS TEXT))<=(('' IN ()))) FROM rt0, t0 WHERE (CAST('-261893417' AS REAL) COLLATE NOCASE) LIMIT 1184439125 OFFSET -407259876;SELECT DISTINCT TRIM(NULL, (+ (rt0.c1))), COUNT(*), NULL FROM rt0, t0, vt0 WHERE (((-1800730527) IS TRUE)) LIMIT -613946496 OFFSET -1498927239; -- 0ms;
SELECT DISTINCT LOWER(((rt0.c1)>>(rt0.c0))), LAG((NOT ((t0.c90 IN ()))), (((((((((vt0.c0)AND(0x7d4018cd)))OR(t0.c65)))OR(t0.c88)))AND(t0.c88)) IN ((t0.c25 IN ()))), ((((vt0.c0)IS NOT(x''))) NOT NULL)) OVER ( ROWS CAST(((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c65)) AS REAL) PRECEDING), ((CASE t0.c25  WHEN t0.c65 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN t0.c90 THEN t0.c88 END)LIKE((((rt0.c2))>((t0.c65))))) FROM vt0, t0 INDEXED BY i30;SELECT SUM(((NULL)LIKE(rt0.c0))) OVER () FROM t0;SELECT ALL ((rt0.c1 COLLATE NOCASE)OR((rt0.c1 IN (0xffffffffab7c01d7, t0.c65)))), ((((((t0.c90)/(vt0.c0)))AND(GROUP_CONCAT(t0.c25))))OR(((t0.c88) ISNULL))), 'uJV鿝#*' FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN ('~蜝AW-}䝵rS') AND (x'')))-(((t0.c90)<<(t0.c88)))), NTILE(CAST((rt0.c0 IN (956226211, rt0.c0)) AS TEXT)) OVER (), (NOT (t0.c25)) FROM rt0, vt0;SELECT STRFTIME(TOTAL(t0.c25), x'' COLLATE RTRIM, x'8094') FROM rt0 WHERE ((+ (((((((((1.081505724E9)AND('q''')))AND('&珟%z')))OR('-336297255')))AND(NULL)))));SELECT DISTINCT ((vt0.c0)=(t0.c65)) COLLATE BINARY FROM rt0, t0;SELECT CUME_DIST() OVER (), ((((rt0.c2)) BETWEEN ((t0.c90)) AND ((rt0.c1))) IN (((t0.c25)|(rt0.c0)))), ((t0.c88)||(((t0.c65) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) FROM rt0 GROUP BY CASE WHEN TYPEOF(rt0.c2) THEN ((vt0.c0)LIKE(rt0.c1)) WHEN ((t0.c65)LIKE(t0.c88)) THEN x'' WHEN rt0.c0 THEN NULL ELSE CAST(t0.c65 AS BLOB) END;SELECT ALL (~ (HEX(DISTINCT t0.c90))), ((- (rt0.c1)) IN (t0.c88)), COUNT(((rt0.c0)IS(t0.c65))) FROM vt0 WHERE ((((CAST(NULL AS TEXT)))=(((('-1251720383') BETWEEN ('o1') AND ('-323292966')))))) GROUP BY 0.8973531261700167, TRIM(((((rt0.c2)OR(rt0.c2)))OR(t0.c65)), (((rt0.c0)) NOT BETWEEN ((t0.c65)) AND ((t0.c25)))), CAST(CASE WHEN t0.c90 THEN 0.23757668311507885 END AS BLOB) HAVING GROUP_CONCAT(((t0.c65)!=(t0.c90))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c90)))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c25)))), ((TYPEOF(t0.c25))&(((('YM', rt0.c2, NULL)) NOT BETWEEN ((rt0.c1, rt0.c1, t0.c25)) AND ((t0.c90, rt0.c2, t0.c25))))) DESC  NULLS FIRST, (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((((t0.c88)<<(rt0.c1)), ((t0.c90)==(NULL)), t0.c90)) AND (((t0.c25 IN ()), (((vt0.c0, t0.c88, NULL)) NOT BETWEEN (('-657831322', rt0.c0, t0.c25)) AND ((t0.c88, t0.c90, t0.c88))), CAST(vt0.c0 AS INTEGER)))) DESC;SELECT ((t0.c90 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)IS NOT(vt0.c0))) AND ((((t0.c25))<((t0.c25))))) FROM vt0, t0 WHERE (((CASE WHEN NULL THEN 0X7fffffffffffffff END)%((('딻u{I') IS TRUE))));SELECT DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c65)) COLLATE NOCASE, rt0.c2, t0.c88, (((((rt0.c1))=((t0.c65)))) NOT BETWEEN ((- (rt0.c1))) AND ((((t0.c88, rt0.c0, vt0.c0))!=((vt0.c0, rt0.c0, rt0.c2))))), ((CASE t0.c25  WHEN t0.c90 THEN rt0.c1 ELSE NULL END) NOT BETWEEN ((t0.c88 IN ())) AND (AVG(vt0.c0))) FROM vt0 WHERE (((((((((((x'')OR(0.8954436624639359)))OR('1884001532')))AND(1750832909)))AND('964605654'))) NOT BETWEEN ((('1971776547') NOT BETWEEN (x'') AND (''))) AND (((-7.57470099E8) BETWEEN (0.39518876565744554) AND ('-127912174'))))) ORDER BY (((((NOT (vt0.c0)))AND((((t0.c65, t0.c90, rt0.c2))<>((t0.c90, rt0.c0, t0.c25))))))AND((((t0.c25, t0.c25, ','''))<((t0.c25, t0.c88, t0.c90))))), ((((((('1726113607')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((t0.c25) NOT BETWEEN (t0.c88) AND ('1788349346')))))AND(vt0.c0)) ASC;SELECT ((AVG(t0.c88))>>(LIKELIHOOD(rt0.c1, 0.023813570856235255))), CAST(MAX(t0.c88) AS INTEGER), (((((t0.c88))>((rt0.c0)))) BETWEEN (UNLIKELY(DISTINCT t0.c25)) AND (((rt0.c1)OR(1879460290)))) FROM t0 WHERE (((CAST(0.7717430770379707 AS TEXT))-(((x'') BETWEEN (x'') AND (0.2993866265364189))))) GROUP BY ((((((((vt0.c0)AND(t0.c65)))OR(rt0.c0)))AND(json_insert(rt0.c2, t0.c25, t0.c25))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (t0.c90)))) HAVING ((CAST(t0.c65 AS INTEGER)) NOT BETWEEN (((t0.c25)<(t0.c25))) AND ((t0.c88 IN ())));SELECT NULL FROM rt0, t0, vt0 WHERE (CASE (((('Jࡂw4<?YY')AND('1395070157')))AND(x'229e'))  WHEN '-1512493089' COLLATE NOCASE THEN ((((NULL)OR('Lt1dK珟')))OR('ಠ\r+Z%猎漕i0')) ELSE ((('+AQC\rIf'))<=((0.002562027218077856))) END) INTERSECT SELECT DISTINCT ((((((t0.c25) IS TRUE))OR(x'')))AND(CASE WHEN vt0.c0 THEN rt0.c0 END)) FROM vt0;SELECT DISTINCT ((((t0.c88)>(t0.c25)))>(LIKE(t0.c90, vt0.c0, 'k'))) FROM t0, rt0 WHERE (((('W1') IS FALSE) IN ((((('-382805625')OR(0.3753316309744319)))AND(x'54c3')), (-1.952357958E9 IN (0.03808359205264378)))));SELECT DISTINCT CAST((+ (t0.c25)) AS REAL) FROM rt0 WHERE ((((('-814554868')<=(x'')))>((((''))>((x''))))));SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN (((((7.5012182E8)AND(rt0.c1)))OR(t0.c25))) AND ((NOT (vt0.c0)))) FROM vt0 WHERE (((('1588076162')IS(NULL)) IN ()));SELECT DISTINCT TOTAL(IFNULL(DISTINCT t0.c25, rt0.c1)) FILTER(WHERE CASE WHEN ((t0.c90)|(rt0.c0)) THEN t0.c65 COLLATE NOCASE WHEN ((t0.c25) BETWEEN (vt0.c0) AND (t0.c25)) THEN ((t0.c88) ISNULL) WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN ((t0.c25) IS FALSE) ELSE rt0.c0 END) OVER () FROM vt0;SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((LOWER(t0.c90))) AND (('806087358'))) FROM rt0, t0, vt0 LIMIT -1352060593 OFFSET -1042874081; -- 0ms;
SELECT DISTINCT ((CAST(t0.c88 AS NUMERIC))&('t<')) FROM t0, vt0 NOT INDEXED WHERE (((x'')-('*p&(RRh(' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT LAG(CAST(t0.c25 AS BLOB), ((((t0.c88) BETWEEN (t0.c65) AND (t0.c25)))>=(GLOB(t0.c65, t0.c88))), ((((t0.c25)IS NOT(t0.c90))) BETWEEN (((t0.c25) BETWEEN (t0.c65) AND (t0.c90))) AND (NULL))) OVER () FROM t0, vt0 WHERE (((((0.7771935183142865) IS FALSE)) NOTNULL)); -- 1ms;
SELECT ALL CASE CASE WHEN t0.c90 THEN rt0.c2 ELSE t0.c90 END  WHEN SQLITE_COMPILEOPTION_USED(rt0.c1) THEN ((rt0.c2)IS(rt0.c0)) WHEN ((t0.c25) NOT NULL) THEN ((t0.c25) BETWEEN (t0.c88) AND (rt0.c2)) WHEN CAST(t0.c25 AS BLOB) THEN (x'bce8' IN (-986146121)) WHEN -6.57831322E8 THEN AVG(vt0.c0) WHEN (- (vt0.c0)) THEN (t0.c25 IN ()) ELSE ((vt0.c0) IS FALSE) END FROM vt0, rt0, t0 WHERE (((LIKELIHOOD(x'', 0.8380232793036635))GLOB((NOT ('-561633275'))))); -- 0ms;
SELECT CASE ((t0.c25) BETWEEN (t0.c90) AND (t0.c90))  WHEN CAST(t0.c88 AS TEXT) THEN (((vt0.c0, rt0.c2, rt0.c2))>((rt0.c2, rt0.c2, vt0.c0))) ELSE ((t0.c88)>>(vt0.c0)) END, (- (AVG(rt0.c1))), ((CAST(vt0.c0 AS REAL))>=(IFNULL(t0.c25, t0.c65))) FROM vt0;SELECT ALL CASE ((t0.c65) IS TRUE)  WHEN (NOT (t0.c90)) THEN -196060391 ELSE t0.c65 END FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c1) BETWEEN (((rt0.c0)&(rt0.c1))) AND (((rt0.c2)&(t0.c88)))) FROM rt0, vt0, t0 WHERE (((((((((((('-745583027', NULL, '1876803701'))>((NULL, 0.7084405925177291, '0.8505913756068331'))))AND((x'92ad' IN ('-1997910290')))))AND((((0.27576190957757196, '-1672988579', '1/')) BETWEEN ((0.8385713702108546, NULL, NULL)) AND ((0Xffffffffed1f6b4b, x'', 491541941))))))AND((((0.8355703753429802))<((0.7542567727546465))))))AND((0xffffffffd541ff40 IN ())))); -- 0ms;
SELECT DISTINCT MIN(((t0.c90)*(rt0.c0)), (((t0.c90, t0.c90, t0.c25)) NOT BETWEEN ((t0.c65, t0.c65, t0.c88)) AND ((t0.c90, vt0.c0, vt0.c0)))) FROM t0, vt0;SELECT DISTINCT NULL FROM vt0, t0, rt0; -- 0ms;
SELECT (- (CASE t0.c25  WHEN t0.c25 THEN rt0.c1 WHEN t0.c25 THEN t0.c90 WHEN t0.c88 THEN t0.c90 ELSE vt0.c0 END)) FROM vt0, rt0;SELECT ALL CAST(CAST(t0.c90 AS TEXT) AS TEXT), ((((rt0.c1) BETWEEN (t0.c25) AND (vt0.c0))) NOTNULL), CASE CASE WHEN t0.c25 THEN t0.c90 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN x'8098' WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN ((t0.c65) BETWEEN (t0.c25) AND (t0.c90)) THEN CASE vt0.c0  WHEN t0.c90 THEN vt0.c0 ELSE rt0.c1 END WHEN ((rt0.c1) NOT BETWEEN (t0.c25) AND (t0.c88)) THEN ((NULL) IS TRUE) WHEN (~ (t0.c65)) THEN LIKELIHOOD(t0.c90, 0.68664223597559) ELSE rt0.c0 COLLATE RTRIM END FROM rt0, t0, vt0 WHERE (CAST(NULL AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((t0.c65 IN ())) NOT NULL), ((t0.c90)%(t0.c25)) COLLATE NOCASE, COUNT(((rt0.c1) BETWEEN (t0.c90) AND (t0.c90))) FROM t0, vt0 WHERE ((x'' IN ((('쮗') NOT BETWEEN (0.5324695314482208) AND ('x')))));SELECT DISTINCT x'8a87' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT MAX(((rt0.c2)<(0.46585018795223465))) FROM vt0, t0, rt0 WHERE (((('-669903720', x'', x''))>(('K<J%', NULL, 0.3641311652085307))) COLLATE BINARY) GROUP BY ((((((((((t0.c25) BETWEEN (t0.c65) AND (t0.c25)))OR(x'')))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE '-1174511356' END)))OR(CAST(t0.c25 AS BLOB))))AND((NOT (t0.c88)))), CASE WHEN (((t0.c25)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN (~ (t0.c25)) END, ((((vt0.c0)OR(rt0.c1)))OR(vt0.c0)) COLLATE NOCASE HAVING CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(NULL)))OR(-6.85576733E8)))AND(t0.c25)) THEN CAST(NULL AS INTEGER) ELSE AVG(vt0.c0) END; -- 0ms;
SELECT ALL (- ((t0.c90 IN ()))), 0.5267311399281259, (- (MIN(rt0.c1))), ((((0.5240866897574374)IS NOT(rt0.c1))) NOTNULL), SUM(rt0.c1 COLLATE BINARY COLLATE NOCASE) OVER ( PARTITION BY (t0.c65 IN ()), ((vt0.c0)AND(x'')), NULL, CAST(((rt0.c2)<<(t0.c65)) AS NUMERIC)) FROM vt0, rt0, t0 WHERE ((((-700331365)>(x'3671')) IN ())); -- 1ms;
SELECT DISTINCT AVG((((-0.0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c88)))) FILTER(WHERE (((((((((((t0.c65)) NOT BETWEEN ((t0.c25)) AND ((rt0.c0))))AND(((((t0.c65)AND(rt0.c1)))OR(rt0.c0)))))AND(((t0.c90)OR(t0.c65)))))AND(((((((((((((t0.c88)AND('sC')))AND(vt0.c0)))OR(t0.c88)))OR(t0.c90)))AND(NULL)))AND(t0.c90)))))OR(((((rt0.c0)OR(vt0.c0)))OR(t0.c88))))) OVER (), (((t0.c65)) BETWEEN ((CAST(t0.c88 AS REAL))) AND ((((t0.c88) BETWEEN (t0.c90) AND (rt0.c0))))), AVG('-669903720') OVER () FROM t0;SELECT DISTINCT CASE WHEN SUM(rt0.c0) THEN ((((((((((((rt0.c0)OR(t0.c25)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(t0.c65)))OR(t0.c90)) WHEN CAST(rt0.c0 AS TEXT) THEN ((t0.c65)IS NOT('4Qaq晴2')) WHEN ((vt0.c0) BETWEEN (t0.c25) AND (rt0.c2)) THEN ((t0.c65) NOT NULL) ELSE (rt0.c1 IN (rt0.c0)) END FROM t0, rt0, vt0 WHERE ((((~ ('O|5v#')))<=(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT (((rt0.c1))=((t0.c25))) COLLATE BINARY FROM vt0, t0 WHERE (((1329857844 IN ()) IN ()));SELECT DISTINCT 0.6517920340143736 FROM vt0, rt0 WHERE ('-725370194'); -- 0ms;
SELECT SUM(CASE WHEN vt0.c0 THEN t0.c90 ELSE rt0.c2 END) OVER ( PARTITION BY t0.c88, NULL) FROM vt0 CROSS JOIN t0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) ISNULL)) AND (DATETIME(rt0.c1, t0.c65, rt0.c0))) CROSS JOIN rt0 ON (CASE WHEN rt0.c2 THEN t0.c65 WHEN t0.c88 THEN t0.c90 WHEN t0.c88 THEN t0.c25 ELSE rt0.c1 END IN ()); -- 1ms;
SELECT ((((t0.c25) ISNULL)) NOT BETWEEN ((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((t0.c90, t0.c65, rt0.c0)) AND ((rt0.c0, rt0.c1, t0.c88)))) AND (((rt0.c0)GLOB(rt0.c2)))), ((((0.47729027458548956)AND((NOT (rt0.c2)))))AND(t0.c65 COLLATE RTRIM)), DENSE_RANK() OVER () FROM vt0 GROUP BY '郮kcDn', rt0.c0, (0.35935503599504526 IN (((vt0.c0)GLOB(rt0.c0)), 0X1ba6cca4));SELECT ALL CAST(((t0.c65) IS FALSE) AS TEXT), (((((((t0.c25)OR(t0.c65)))OR(rt0.c1)), t0.c88 COLLATE NOCASE, (+ (t0.c90))))=((vt0.c0, CAST(NULL AS INTEGER), rt0.c0))), CAST((((vt0.c0)) BETWEEN ((') ')) AND ((rt0.c0))) AS NUMERIC) FROM rt0, t0;SELECT ALL AVG(NULL) OVER () FROM vt0, rt0, t0 WHERE ((((((x'')) NOT BETWEEN ((x'')) AND ((x'2284'))))==(TRIM('')))); -- 0ms;
SELECT ALL TOTAL((- (rt0.c0))) FROM t0, rt0, vt0 WHERE (((((664178534) NOT BETWEEN (x'e472') AND ('')))%(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT x'', ((((t0.c65)<=('[]')))>=((+ (vt0.c0)))), CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM, ((NULLIF(vt0.c0, vt0.c0)) IS TRUE), ((NULL) NOT NULL) FROM vt0, rt0, t0 WHERE ((((((x'55cd967d'))>=(('TRUE'))))>(((((NULL)OR('353091677')))OR(NULL))))); -- 0ms;
SELECT ALL ((((t0.c88)<=(0.025282204953759324)))||(vt0.c0 COLLATE BINARY)) FROM vt0, rt0;SELECT ((CASE t0.c65  WHEN t0.c65 THEN t0.c88 ELSE t0.c90 END)%(((t0.c25) NOT NULL))), (~ (0x248fa325)), MIN(((rt0.c1) BETWEEN (t0.c65) AND (t0.c65))) FROM vt0, t0, rt0 WHERE (((CAST(0X2be9f113 AS BLOB)) BETWEEN (((x'') ISNULL)) AND (((((NULL)OR(0.25103022404983244)))AND('s&o7xoe*L'))))) ORDER BY (((~ (t0.c25))) ISNULL) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c0)OR(t0.c25)))AND(vt0.c0)) THEN COUNT(*) WHEN QUOTE(t0.c65) THEN ((t0.c65) BETWEEN (NULL) AND (t0.c88)) WHEN rt0.c2 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c65 END ELSE (t0.c65 IN (t0.c25, t0.c88)) END FROM rt0, vt0, t0 WHERE ((((NULL COLLATE NOCASE))>(((((NULL, '1294192859', x'')) BETWEEN (('nowNkY(i}', NULL, 0.30762537360307307)) AND (('0.8505913756068331', 0.025769640210689504, '-383262921'))))))); -- 0ms;
SELECT ALL (- (((vt0.c0)<(rt0.c1)))) FROM rt0 WHERE (((LOWER(NULL))<<('Ac' COLLATE BINARY)));SELECT ALL (~ (RTRIM(t0.c90))) FROM t0, vt0, rt0 WHERE (''); -- 0ms;
SELECT ((NULL) NOT NULL), (((vt0.c0)) BETWEEN ((((t0.c90)>(rt0.c1)))) AND ((((t0.c88) NOT NULL)))), COUNT(*) FROM rt0, vt0;SELECT DISTINCT (- ((((rt0.c0)) NOT BETWEEN ((t0.c65)) AND ((rt0.c0))))), LTRIM(459705511, (((rt0.c2))<=((vt0.c0)))), IFNULL(DISTINCT ((((rt0.c1)AND(rt0.c1)))AND(t0.c88)), (+ (rt0.c2))) FROM rt0 INDEXED BY i30, vt0, t0 WHERE (CASE WHEN CASE 0.591466540284862  WHEN 'tq1䐈' THEN NULL ELSE '4BqKr' END THEN TRIM('!&C᥂+9P2q') END) GROUP BY (CASE NULL  WHEN t0.c90 THEN t0.c88 END IN ()), CAST((~ (t0.c65)) AS TEXT), rt0.c0;SELECT ALL (((((vt0.c0) ISNULL)))>=((((t0.c90) BETWEEN (t0.c90) AND (t0.c25))))) FROM rt0 ORDER BY ((((((t0.c65)==(t0.c65)))OR(NULL)))OR(t0.c25 COLLATE RTRIM)) ASC;SELECT ((((t0.c88)AND(vt0.c0)))OR(t0.c88)) COLLATE BINARY FROM vt0, rt0 WHERE (((0.6084147273452084) IS TRUE)) ORDER BY rt0.c2 ASC  NULLS FIRST;SELECT DISTINCT ((((((((t0.c88)AND(t0.c90)))AND(t0.c65)))AND(vt0.c0)))AND(t0.c90)) COLLATE BINARY, (NOT ((((t0.c88)) BETWEEN (('-978672793')) AND ((t0.c25))))), ((- (t0.c90)) IN (((((t0.c90)AND(vt0.c0)))OR(vt0.c0)))), rt0.c2, json_valid(t0.c90) COLLATE BINARY FROM vt0, rt0, t0 WHERE (CAST(x'' AS REAL)); -- 0ms;
SELECT NULL COLLATE BINARY, CAST(((t0.c88) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB), '', DENSE_RANK() OVER (), (load_extension(t0.c25, rt0.c0) IN (((t0.c88)OR(t0.c88)))) FROM rt0 WHERE (((((((((((((0.49851005195201215)AND('QmM<RR浀7')))AND(NULL)))AND((+ ('-1204069974')))))AND('')))OR(((0.35738144796196825)<>(NULL)))))OR((('') BETWEEN ('6[2c') AND (0.728264126913878))))) ORDER BY json_patch(t0.c65, rt0.c1 COLLATE BINARY);SELECT ALL FIRST_VALUE(((0.8887978614907596)OR(t0.c90)) COLLATE BINARY) OVER () FROM t0 ORDER BY CASE (t0.c88 IN ())  WHEN ((rt0.c2)<(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((((rt0.c1)OR(vt0.c0)))OR(t0.c25)) END DESC;SELECT CASE ((NULL) NOTNULL)  WHEN ((rt0.c2)!=(rt0.c0)) THEN t0.c65 COLLATE RTRIM END FROM rt0 WHERE (((((((NULL)AND(x'')))OR(0.24528992373005565))) NOT BETWEEN (((((0.7004783493432654)AND(x'')))OR(NULL))) AND (('0.7912440983635449' IN ()))));SELECT DISTINCT CASE 0xffffffffea9831f3  WHEN rt0.c0 COLLATE NOCASE THEN (- (t0.c88)) END FROM t0;SELECT ALL CAST(LIKELIHOOD(t0.c88, 0.00406750041079762) AS BLOB) FROM rt0 WHERE (((('566340642', 0.011525959143418474, '-697877636')) BETWEEN ((0X1346a272 COLLATE BINARY, '0.6773100873282903', ((NULL)<=(0.8888712348115846)))) AND ((CASE 0.41134911328955115  WHEN '' THEN 'Ga[y' ELSE '379915412' END, ((('', x'', ''))=((x'f986', x'', NULL))), (('\r^\tD''')GLOB(0.09245182619029058))))));SELECT DISTINCT CASE WHEN t0.c25 THEN (t0.c88 IN ()) END, ((((t0.c88)OR(rt0.c2)))OR(t0.c90)) COLLATE BINARY COLLATE RTRIM, ((UPPER(DISTINCT t0.c88))IS(((0.23397285547663094)/(0.5996571598200056)))) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (t0.c88) AND (rt0.c0)))>=(((t0.c90)LIKE(t0.c88)))) FROM t0, rt0 WHERE (((((-5.6691586E7) BETWEEN (x'362f') AND (0.7451421261570614)))*((('\r<2h')%(0.9443980492376978))))) LIMIT 968973007; -- 0ms;
SELECT DISTINCT ((((((((AVG(t0.c90))AND(((rt0.c0)*(rt0.c1)))))AND(((rt0.c1) NOT BETWEEN ('Fj5p&') AND (t0.c90)))))OR(((((((((t0.c65)AND('pp?)<GL')))AND(t0.c65)))OR(t0.c88)))AND(NULL)))))OR(rt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((- ((('')>=('')))));SELECT (((0X31e7b8eb, rt0.c2, vt0.c0, t0.c65, t0.c25)) BETWEEN ((CAST(rt0.c1 AS REAL), CAST(t0.c90 AS REAL), ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))OR(t0.c90)))OR(rt0.c1)), t0.c88 COLLATE NOCASE, COUNT(rt0.c2))) AND (('-501110379', (rt0.c0 IN (rt0.c2)), GROUP_CONCAT('{}'), MAX(rt0.c1), ('-1181180418' IN ())))), LIKELY(DISTINCT MIN(rt0.c1)), ((((vt0.c0)AND(rt0.c2))) NOT BETWEEN (((((t0.c88)OR(t0.c88)))AND(t0.c25))) AND (((((((((t0.c25)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))) FROM rt0, vt0;SELECT ALL ((((((((((((((((((((COUNT(*))AND((((t0.c90))>((t0.c88))))))OR((((vt0.c0)) NOT BETWEEN ((t0.c25)) AND ((t0.c90))))))OR(t0.c90)))AND(t0.c65)))OR(t0.c90 COLLATE BINARY)))OR(GROUP_CONCAT(vt0.c0))))AND(((rt0.c2)IS NOT(t0.c90)))))AND(((t0.c90)<(rt0.c2)))))AND((('-1243116631') NOTNULL))))AND(CAST(t0.c65 AS NUMERIC))), (((IFNULL(rt0.c0, '')))<((((rt0.c1)OR(vt0.c0))))), CAST(COUNT(*) AS REAL) FROM rt0, vt0, t0 WHERE ((NULL COLLATE RTRIM IN ())) ORDER BY TYPEOF(DISTINCT ((t0.c65) IS TRUE))  NULLS FIRST, ((((t0.c25)>(rt0.c0)))-(TYPEOF(DISTINCT vt0.c0))); -- 0ms;
SELECT ALL LOWER(DISTINCT CAST(0.8107877730381695 AS BLOB)), ((t0.c90)*(((NULL)==(t0.c65)))), (((t0.c65))==((vt0.c0))) COLLATE BINARY FROM vt0, rt0, t0 WHERE (((('1329857844' IN ()))!=(CASE 0.22458625478938254  WHEN x'06fe663f' THEN '-20502699' ELSE 0Xffffffff9809f4f4 END))); -- 0ms;
SELECT DISTINCT ((('964605654'))<=((((t0.c65)/(t0.c65))))), 0.5238145963596352, (((t0.c88))==((CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE t0.c88 END))) FROM rt0 WHERE ((~ ((('IK\nK') NOTNULL))));SELECT ALL ((((rt0.c0) NOT NULL))+(CAST(vt0.c0 AS NUMERIC))) FROM rt0, t0, vt0 WHERE (CAST(((((0.3884368932726363)AND(0.4469895996387482)))AND(552483011)) AS BLOB)); -- 0ms;
SELECT ALL GROUP_CONCAT((rt0.c1 IN (t0.c25))), ((NULL COLLATE NOCASE)%(t0.c65)), x'' FROM vt0;SELECT DISTINCT ((((((t0.c90)AND(vt0.c0)))OR(rt0.c1))) BETWEEN ((NOT (vt0.c0))) AND (((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0, t0 WHERE (((((CASE 'ꪍjd!|NaN5'  WHEN 0.46033423725203226 THEN x'b135' END)AND(((0.6605084862905297)*('1724563761')))))AND((('xLk#^t3E') BETWEEN (-1.254794849E9) AND (NULL)))));SELECT (((vt0.c0)) NOT BETWEEN ((COALESCE(t0.c65, NULL))) AND ((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c65))))) FROM t0, vt0, rt0 WHERE (CASE WHEN LIKELY(DISTINCT NULL) THEN (NULL IN ()) WHEN ((((NULL)AND(x'442f')))OR(0.40348304061945905)) THEN (~ (0.9371255625448949)) WHEN ((((((((0.5238145963596352)AND(-995904497)))OR(NULL)))AND(-6.85576733E8)))AND(6.64178534E8)) THEN CASE -5.01110379E8  WHEN 1011272911 THEN NULL END END); -- 0ms;
SELECT (CAST(t0.c25 AS NUMERIC) IN ()), ((((x'')OR(t0.c88)))+((('')>>(t0.c90)))), ((((((rt0.c1))==((vt0.c0))), ((((t0.c65)AND(t0.c25)))OR(t0.c25)), ((t0.c65) BETWEEN (t0.c90) AND (t0.c65)), ((((t0.c90)AND(t0.c65)))AND(t0.c25)), ((rt0.c2)IS(t0.c25))))<((((t0.c25)|(rt0.c2)), rt0.c1 COLLATE NOCASE, t0.c65 COLLATE BINARY, ((t0.c90) BETWEEN (t0.c65) AND (rt0.c0)), ((t0.c88) NOT NULL)))) FROM t0, rt0 WHERE (((((((((NULL)OR('-1843145404')))OR(x'')))AND(((((((((0.257583728069682)OR(0.11744173246840328)))OR(0.3095450615379728)))OR('')))AND(NULL)))))OR((NULL IN ()))));SELECT DISTINCT x'' FROM t0, vt0 WHERE ((((0.03133428870131216) NOT BETWEEN (NULL) AND ('cz')) IN (1934827155 COLLATE NOCASE))); -- 4ms;
SELECT DISTINCT ((((((t0.c88)OR(0.2912659335331441)))OR(rt0.c1))) BETWEEN ((((t0.c65))==((t0.c25)))) AND (CAST(rt0.c2 AS BLOB))), (((vt0.c0)) BETWEEN ((((vt0.c0)!=(t0.c25)))) AND (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c25)))))), ((((rt0.c2) NOT NULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND (rt0.c0 COLLATE RTRIM)) FROM t0 WHERE (((((x'') BETWEEN (348614007) AND (NULL))) ISNULL)) ORDER BY ('2083842051' COLLATE BINARY IN (rt0.c0)) ASC  NULLS FIRST, (((t0.c25, rt0.c2, t0.c25)) NOT BETWEEN (((~ (t0.c88)), CASE WHEN t0.c90 THEN t0.c25 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c88 THEN rt0.c2 ELSE rt0.c2 END, CAST(rt0.c1 AS BLOB))) AND ((ROUND(vt0.c0, rt0.c0), CASE rt0.c1  WHEN t0.c88 THEN t0.c65 END, CASE t0.c88  WHEN 'a\rUW|Ttc' THEN t0.c90 WHEN t0.c88 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END))) ASC, (SQLITE_SOURCE_ID() IN ())  NULLS FIRST;SELECT DISTINCT x'f20f' FROM t0, rt0, vt0; -- 0ms;
SELECT ALL LAG((((t0.c88)||(x'94b4')) IN ()), TRIM(DISTINCT rt0.c2 COLLATE NOCASE), ((CASE WHEN vt0.c0 THEN rt0.c1 ELSE 0.8505913756068331 END)IS NOT((- (rt0.c0))))) OVER () FROM t0, vt0, rt0 WHERE ((((((((((((((+ (NULL)))AND(CASE x''  WHEN 0.6360239269765237 THEN 0.5662444128173514 ELSE '806087358' END)))AND(((0xf1614fa) NOTNULL))))AND((0.9228174743193241 IN (0.5734386971606654, 0xfffffffffc0f5a35)))))AND(CAST(x'' AS BLOB))))AND(CAST(-7.12488875E8 AS REAL))))OR((- (-1.7976931348623157E308))))); -- 0ms;
SELECT DISTINCT ((rt0.c1)>(((rt0.c2)/(rt0.c1)))) FROM t0;SELECT DISTINCT CASE 0.9615112773598066  WHEN ((t0.c90)AND(NULL)) THEN x'c86d' ELSE CASE x''  WHEN t0.c65 THEN t0.c90 ELSE t0.c25 END END FROM rt0 WHERE ((- (CAST(0.18484238244411477 AS REAL))));SELECT DISTINCT (+ (((t0.c65) BETWEEN (t0.c88) AND (rt0.c0)))), MIN((rt0.c1 IN (t0.c65, t0.c88))), MAX(CASE t0.c88  WHEN t0.c90 THEN rt0.c0 END) FROM t0, vt0 WHERE (CAST(x'' AS BLOB) COLLATE BINARY);SELECT DISTINCT CAST(((t0.c25)||(vt0.c0)) AS NUMERIC) FROM t0, rt0 WHERE ((NULL COLLATE BINARY IN ()));SELECT ((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c88)))!=((('()')GLOB(rt0.c2)))) FROM vt0, t0;SELECT DISTINCT COUNT(*) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT (((x'') NOT BETWEEN (rt0.c1) AND (NULL)) IN ()) FROM rt0 WHERE ((CASE x''  WHEN '-1203211257' THEN 0.41467621382382214 WHEN NULL THEN NULL WHEN 0.5830585705444987 THEN 2.45469072E8 ELSE NULL END IN ())); -- 0ms;
SELECT DISTINCT ((((t0.c25 COLLATE NOCASE)OR(t0.c88 COLLATE RTRIM)))OR(((vt0.c0)<>(rt0.c2)))) FROM rt0, t0, vt0 WHERE ((- (((((0.9757121084292252)OR(x'')))OR(NULL))))); -- 0ms;
SELECT DISTINCT ((((((((rt0.c1)AND(rt0.c2)))AND(t0.c25)))AND(rt0.c2)))OR(t0.c88 COLLATE BINARY)) FROM t0, vt0;SELECT ALL (TOTAL(t0.c25) IN ()), '좙H' COLLATE NOCASE, CASE CASE rt0.c2  WHEN t0.c90 THEN rt0.c1 ELSE rt0.c0 END  WHEN TOTAL('185171568') THEN ((rt0.c0) IS TRUE) WHEN ((('-608183800', t0.c88, rt0.c1)) BETWEEN ((rt0.c0, t0.c65, vt0.c0)) AND ((t0.c65, t0.c65, vt0.c0))) THEN ((t0.c88)IS(rt0.c0)) WHEN CASE WHEN 0.642101142642003 THEN vt0.c0 END THEN ((t0.c90) BETWEEN (rt0.c2) AND ('')) ELSE CAST(rt0.c1 AS TEXT) END FROM t0 WHERE ((- ('0.9937822790093984')) COLLATE NOCASE);SELECT DISTINCT (NOT (((t0.c90) BETWEEN (rt0.c2) AND (t0.c88)))) FROM t0, rt0; -- 0ms;
SELECT ALL RANK() OVER ( ROWS (((((t0.c25, 9.64605654E8, rt0.c2, rt0.c0, rt0.c0))<>((t0.c25, t0.c65, t0.c88, rt0.c0, t0.c88)))) IS FALSE) PRECEDING), (((((t0.c90) IS TRUE)))>=(((((t0.c65))<>((rt0.c2)))))), ((NULL) BETWEEN (t0.c88) AND (t0.c25)) COLLATE NOCASE, ((CASE rt0.c1  WHEN vt0.c0 THEN t0.c65 WHEN t0.c65 THEN t0.c65 WHEN rt0.c2 THEN vt0.c0 END) IS FALSE), ((t0.c88)&(CASE t0.c65  WHEN t0.c90 THEN vt0.c0 ELSE rt0.c1 END)) FROM t0 WHERE ('-657831322');SELECT DISTINCT (CAST(t0.c90 AS REAL) IN ()) FROM t0, vt0, rt0; -- 3ms;
SELECT DISTINCT CAST((t0.c90 IN ()) AS INTEGER) FROM vt0; -- 0ms;
SELECT ALL (((CASE WHEN rt0.c0 THEN t0.c90 WHEN rt0.c1 THEN '1815401781' WHEN rt0.c2 THEN t0.c90 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c25 THEN rt0.c1 END))=(((+ (rt0.c2))))) FROM t0 LIMIT 839318084 OFFSET 1498139188;SELECT DISTINCT RANK() OVER (), rt0.c2, (((rt0.c1))<=((((rt0.c0)|(rt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE))/(((((((((vt0.c0)AND(t0.c25)))AND(t0.c90)))OR(rt0.c0)))OR(0.425005398554528)))) FROM rt0 WHERE ((CAST('-1166333346' AS INTEGER) IN ()));SELECT ALL ((((((t0.c88))=((t0.c90)))))<=((CASE WHEN t0.c25 THEN t0.c90 ELSE t0.c88 END))), json_insert(GROUP_CONCAT(t0.c25), ((vt0.c0)LIKE('gV+')), ((((((((((((vt0.c0)AND(rt0.c0)))AND(t0.c65)))OR(rt0.c0)))AND(vt0.c0)))OR(t0.c90)))OR(NULL))), TOTAL(((t0.c90)|(t0.c25))) OVER () FROM rt0;SELECT ALL LIKELIHOOD(DISTINCT NULL, 0.5575675023323389) FROM t0, rt0 WHERE ((((NULL) NOT BETWEEN (x'') AND ('sw_p}D')) IN (((((((((1813799536)AND(0.1902929658937631)))OR('HNq')))OR('')))OR(NULL)), (+ (0.8830059361856047))))); -- 0ms;
SELECT ((TRIM(DISTINCT t0.c25, rt0.c1))*(((rt0.c1) BETWEEN (rt0.c2) AND (t0.c90)))) FROM t0;SELECT ALL ((HEX(rt0.c0))>(rt0.c1)) FROM rt0, vt0 WHERE (UPPER(DISTINCT ((x'') BETWEEN (0.7004783493432654) AND (0x27968f66)))); -- 0ms;
SELECT ALL ((((((0Xffffffffab7efa81, rt0.c0, rt0.c1))<=((vt0.c0, rt0.c2, t0.c25))), CASE rt0.c1  WHEN t0.c65 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END, (((t0.c65)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((0Xffffffffd8121498, ((((t0.c25)AND(x'')))OR(rt0.c0)), json_array(t0.c88, vt0.c0, t0.c90, rt0.c2)))) FROM vt0, t0, rt0 WHERE (CASE WHEN ((((' /')AND(0.6088221033036526)))OR('')) THEN ((((((((NULL)OR('545226493')))OR('0*')))OR('')))AND('')) ELSE RTRIM(0xffffffffd5363764) END); -- 0ms;
SELECT ALL rt0.c0, (((vt0.c0 IN ())) NOT BETWEEN (((t0.c25)+(t0.c88))) AND (((vt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c90)))), (((((0.04045053326050663 IN (t0.c25, 0.6948849839409326)))AND((((rt0.c0))<>((t0.c25))))))OR(CAST(rt0.c0 AS BLOB))) FROM rt0 LIMIT -1612486297;SELECT COUNT((((vt0.c0))>((t0.c88)))) OVER () FROM t0, rt0, vt0 GROUP BY CASE UNLIKELY(vt0.c0)  WHEN ((t0.c90)OR(t0.c25)) THEN ((t0.c65) IS FALSE) ELSE (t0.c88 IN ()) END HAVING ((x'') NOT BETWEEN (((t0.c90) NOT BETWEEN (750121820) AND (t0.c90))) AND (0.689209424548054 COLLATE BINARY)); -- 0ms;
SELECT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c25))) IN ()) FROM t0, vt0 WHERE (CASE WHEN ((('/\n')) BETWEEN ((0.2727391316315192)) AND (('R'))) THEN x'6049c5df' COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT CASE WHEN x'' THEN (t0.c25 IN (rt0.c0)) END FROM vt0, rt0, t0 WHERE (((((CAST('490070595' AS NUMERIC))AND(7.36751891E8)))OR(CAST('-608899701' AS REAL)))); -- 0ms;
SELECT DISTINCT (~ (((t0.c88) IS TRUE))) FROM vt0, rt0;SELECT DISTINCT ((LENGTH(t0.c90)) NOT BETWEEN ((~ (t0.c25))) AND ((vt0.c0 IN (vt0.c0, rt0.c1)))) FROM rt0, vt0 WHERE (CAST((((('xOzErRAO')AND(NULL)))OR('-741779039')) AS REAL));SELECT DISTINCT ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN 0.9681864142684704 THEN rt0.c0 END)=((NOT (vt0.c0)))) FROM vt0, t0 WHERE ((((NULL)||(x'')) IN ()));SELECT DISTINCT ((t0.c88) IS TRUE), (((t0.c65 IN ()))<=(t0.c25 COLLATE RTRIM)), ((CAST(NULL AS REAL)) BETWEEN (((((t0.c90)AND(rt0.c0)))OR(t0.c65))) AND (((NULL)+(t0.c65)))) FROM rt0, vt0 WHERE (LENGTH(''));SELECT DISTINCT ((CAST(x'' AS NUMERIC))>(MIN('-2119528021'))), (+ (CAST(rt0.c2 AS INTEGER))), '' FROM vt0, rt0 WHERE (((x'' COLLATE BINARY)LIKE(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((- (rt0.c2))))=((((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c2))))) FROM vt0, t0, rt0 LIMIT -1717941416; -- 0ms;
SELECT ALL rt0.c2, ((json_valid(t0.c90))OR(CAST(t0.c25 AS INTEGER))), MAX(CASE rt0.c0  WHEN rt0.c1 THEN t0.c25 END) FROM rt0, t0, vt0; -- 0ms;
SELECT SUM(0.47251248413656555 COLLATE RTRIM) OVER (), ((x'') BETWEEN (((NULL) BETWEEN (t0.c65) AND (x''))) AND (t0.c88 COLLATE NOCASE)), ((TOTAL(t0.c90)) ISNULL) FROM t0 LIMIT 1177459320 OFFSET 1510214580; -- 0ms;
SELECT rt0.c2, (((~ (rt0.c2)))>=((rt0.c0 IN ()))), ((((t0.c88) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((t0.c90)>(rt0.c2))) AND (((rt0.c0)*(rt0.c0)))) FROM rt0, t0, vt0; -- 1ms;
SELECT ALL TOTAL_CHANGES(), (+ (CASE WHEN rt0.c2 THEN t0.c88 WHEN t0.c88 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)), (((rt0.c1 IN ())) NOT BETWEEN ((- (t0.c88))) AND (((rt0.c2) NOTNULL))), ((((NULL)*(t0.c90)))LIKE(TYPEOF(vt0.c0))), 0.6725071382455929 FROM vt0, rt0 WHERE (((('')) BETWEEN ((0.5212880547677496)) AND ((NULL))) COLLATE BINARY);SELECT FIRST_VALUE(HEX(((t0.c88) NOTNULL))) OVER () FROM vt0, t0 WHERE ((((('1491761972' COLLATE BINARY)AND((((NULL))=((''))))))AND((('-1338272612')IS(1350725432))))); -- 0ms;
SELECT (t0.c65 IN ()), (((t0.c25)) NOT BETWEEN ((t0.c65)) AND (('-290385584'))), CASE rt0.c2  WHEN rt0.c1 THEN t0.c25 END COLLATE RTRIM FROM rt0, vt0, t0 WHERE (LOWER(((-424122126) ISNULL))) GROUP BY ((json_remove(rt0.c1, t0.c25)) IS TRUE) HAVING rt0.c0; -- 0ms;
SELECT DISTINCT '-760343901', ((- (0.12371115604958682)) IN (((-180667504) NOT BETWEEN (t0.c25) AND (rt0.c2)))), ((((((t0.c25)OR(t0.c88)))AND(t0.c90))) NOTNULL) FROM rt0, vt0, t0 WHERE (NULLIF(CASE 0.8151926672352644  WHEN x'' THEN '-1976099465' ELSE x'' END, (- ('')))) LIMIT -2116031460; -- 0ms;
SELECT DISTINCT (((t0.c65)|('1662191189')) IN (((rt0.c1)|(t0.c65)))) FROM vt0;SELECT ALL ROW_NUMBER() OVER () FROM t0 WHERE ((((+ (0.7004783493432654))) BETWEEN (((('T')) NOT BETWEEN ((x'7943')) AND ((x'951a')))) AND ((((('')AND('\r')))OR(-1.254794849E9))))); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c2) NOTNULL) THEN (((rt0.c1, t0.c65, t0.c90))<((t0.c25, t0.c25, t0.c88))) WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (t0.c25)) THEN ((((((((t0.c65)OR(t0.c25)))OR(NULL)))AND(0.5198891257259883)))OR(rt0.c2)) WHEN ((t0.c88) IS FALSE) THEN COUNT(*) END, CASE ((((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(t0.c90))  WHEN LOWER(DISTINCT rt0.c2) THEN CASE WHEN rt0.c1 THEN t0.c90 END END, ((t0.c25 COLLATE BINARY) IS TRUE) FROM vt0, rt0, t0 WHERE (CAST(((0.5171381907529701) IS FALSE) AS NUMERIC)) ORDER BY CASE (NOT (t0.c25))  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE 1115061812 END THEN CASE WHEN t0.c88 THEN t0.c88 ELSE rt0.c2 END ELSE HEX(x'') END; -- 0ms;
SELECT ((((((t0.c25) IS TRUE))OR(CASE WHEN t0.c25 THEN t0.c88 ELSE vt0.c0 END)))AND((((rt0.c1))<>((t0.c90))))) FROM rt0, t0, vt0 WHERE ((0.16422550207305342 IN ()) COLLATE BINARY); -- 0ms;
SELECT CASE WHEN (rt0.c1 IN ()) THEN ((t0.c25)>=(rt0.c1)) END FROM vt0, t0 INDEXED BY i30 WHERE ((((x'') BETWEEN (0.7352716795160182) AND (0.45731923614050807)) IN (ABS(NULL)))) GROUP BY ((((t0.c25)OR(0.5730007677134665))) NOT BETWEEN (TRIM(rt0.c0)) AND ((NOT (t0.c25))));SELECT ALL (((~ (rt0.c1))) NOT NULL) FROM rt0 WHERE (LIKELY(DISTINCT CASE ''  WHEN 0.1374448196307423 THEN '-85381773' WHEN x'' THEN x'' WHEN 0X2be9f113 THEN 0.12013525358768484 ELSE 0.5073517031149176 END)); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(rt0.c0) COLLATE BINARY FROM t0;SELECT DISTINCT IFNULL(NULL, (vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT t0.c90 FROM rt0, t0 NOT INDEXED; -- 0ms;
SELECT ALL COUNT(*) OVER (), ((QUOTE(t0.c25)) IS FALSE), t0.c65 FROM vt0, t0, rt0; -- 0ms;
SELECT ALL t0.c25 FROM rt0 WHERE (((((x'9c2d')*('h~LWqNz<'))) NOT BETWEEN (((NULL) BETWEEN ('0.33739857560535713') AND ('1-500000*E'))) AND ((- (-342941297))))) ORDER BY t0.c65 ASC;SELECT DISTINCT t0.c90 FROM vt0, rt0, t0; -- 0ms;
SELECT NTILE((((((- (t0.c90)))AND(SQLITE_VERSION())))OR(((t0.c25) NOT NULL)))) OVER (), ((NULL)AND(((t0.c65)/(rt0.c2)))), ((CAST(vt0.c0 AS NUMERIC))||(8.06087358E8)) FROM vt0, t0 WHERE (((NULL IN (x'd9da')) IN ())) LIMIT -56691586;SELECT DISTINCT ((CASE rt0.c2  WHEN t0.c88 THEN NULL END)||(((rt0.c2) BETWEEN (t0.c25) AND (rt0.c0)))) FROM rt0, vt0, t0 WHERE (CAST((((NULL))<(('-1497935128'))) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((rt0.c1) IS FALSE))<>(((((((((((((((((vt0.c0)AND(t0.c65)))OR(rt0.c0)))AND(rt0.c1)))OR(t0.c25)))AND(t0.c25)))AND(vt0.c0)))AND(t0.c65)))OR(rt0.c0)))) FROM t0 WHERE ('now');SELECT ALL 4.01040862E8, (MIN(vt0.c0) IN ()), CAST(IFNULL(t0.c65, t0.c88) AS NUMERIC) FROM t0, rt0 INDEXED BY i30 ORDER BY ((JULIANDAY(vt0.c0, vt0.c0, t0.c65, t0.c90, t0.c88))<=(((t0.c65) BETWEEN (rt0.c2) AND (rt0.c1)))), ((((((rt0.c2) NOT BETWEEN (t0.c65) AND (vt0.c0)))AND((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((t0.c65))))))AND(x'')), ((((vt0.c0)*(t0.c65))) NOT NULL) LIMIT 1296010589 OFFSET 811263262;SELECT (t0.c90 COLLATE BINARY IN ()) FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c25 AS BLOB) AS TEXT) FROM vt0 WHERE ((((0.33583560073086083 IN ()))&((NOT (NULL))))) ORDER BY CAST(((t0.c25)+(t0.c25)) AS NUMERIC)  NULLS LAST;SELECT ALL CAST(((((rt0.c1)OR(vt0.c0)))OR(t0.c90)) AS NUMERIC) FROM rt0, t0, vt0; -- 0ms;
SELECT ALL CASE WHEN t0.c90 THEN CAST(rt0.c0 AS BLOB) END, (NOT (CAST(t0.c65 AS REAL))), NULL FROM rt0, vt0;SELECT DISTINCT (- (TYPEOF(rt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c90 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (t0.c25) AND ((- (vt0.c0)))) FROM rt0, vt0;SELECT DISTINCT CAST('	<rQ''&xN' AS NUMERIC) FROM t0, rt0 WHERE ((('FALSE')|(1945560483)) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT 0xffffffffab7c01d7 FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT ((UPPER(t0.c65)) NOT NULL), (((((+ (t0.c90)))OR(((t0.c65)|(vt0.c0)))))OR((((t0.c90)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))), CASE WHEN (+ (rt0.c0)) THEN ((t0.c65) NOT NULL) WHEN 1011067893 THEN (NOT (t0.c90)) WHEN (((t0.c25, t0.c25, rt0.c0))<>((t0.c65, t0.c88, t0.c88))) THEN '>	' END FROM t0, rt0 ORDER BY ((t0.c65)&(t0.c88)) COLLATE NOCASE ASC;SELECT ALL (('')IS NOT(MAX('yX'))), (((((t0.c25))<((t0.c65)))) BETWEEN ('U[gaR	') AND ((t0.c25 IN ()))), rt0.c1 FROM rt0, vt0, t0 WHERE ((((((0X32d6c013)) BETWEEN (('-1990730394')) AND ((x'cab0'))))=(((((x'')AND(NULL)))AND('1566872951'))))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) ISNULL) FROM vt0, t0, rt0 WHERE (CAST(((((((((0X37d609d5)AND(0X9d73875)))AND(0.7953241043179601)))AND('1833518247')))OR(0.7120516114908474)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((CAST('-316708021' AS TEXT)) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((t0.c90)GLOB(rt0.c2)))), ((rt0.c2 COLLATE NOCASE)GLOB((t0.c25 IN (t0.c90, rt0.c2)))), GROUP_CONCAT((('-912995021') NOT BETWEEN (t0.c88) AND (rt0.c1))), ((t0.c25)||(((t0.c25)>(rt0.c2)))), LAST_VALUE(((((vt0.c0)IS(vt0.c0)))*(''))) OVER () FROM vt0 WHERE (((((TYPEOF(-2.21632836E8))OR(((NULL)&(0xea18f90)))))OR(((0.25370702102095377)*(x'b0ac'))))) GROUP BY (CASE rt0.c0  WHEN t0.c90 THEN vt0.c0 WHEN t0.c65 THEN t0.c90 WHEN '-776463713' THEN rt0.c1 END IN (CAST('h.' AS INTEGER))) HAVING ((((rt0.c2) IS FALSE))+(NULL));SELECT ALL ((CAST(t0.c25 AS NUMERIC)) NOT NULL), ((((t0.c65) ISNULL))<(((t0.c90) IS TRUE))), ((+ (vt0.c0)) IN (UNLIKELY(DISTINCT rt0.c0))) FROM t0;SELECT ALL GROUP_CONCAT(((rt0.c0) NOTNULL)) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN t0.c25 THEN vt0.c0 WHEN t0.c65 THEN 0.34520195444575086 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY FROM vt0 WHERE (('t瞼4&byRD' IN ()) COLLATE RTRIM) ORDER BY (((t0.c65)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((CASE WHEN t0.c65 THEN t0.c25 WHEN t0.c88 THEN t0.c88 WHEN t0.c88 THEN t0.c90 END)))  NULLS LAST;SELECT DISTINCT CAST((((rt0.c1))==((t0.c25))) AS BLOB), LOWER(((t0.c88) BETWEEN (vt0.c0) AND (rt0.c0))), ABS(CAST(rt0.c0 AS REAL)) FROM rt0;SELECT DISTINCT LAST_VALUE('ouZw') OVER (), GROUP_CONCAT(CAST(NULL AS BLOB)), ((((((((((((rt0.c0)AND(t0.c90)))OR(rt0.c2)))OR(((rt0.c0)IS NOT(rt0.c2)))))OR(((rt0.c1)OR(t0.c65)))))OR(TOTAL(t0.c25))))OR(rt0.c1)) FROM t0, vt0 WHERE (((((('2066041255', 1232717842, 0Xffffffffb2f44a47))>((x'a567', NULL, x'')))) BETWEEN (((x'') IS FALSE)) AND ((x'' IN ())))) GROUP BY (((t0.c65)) NOT BETWEEN (((((t0.c25, rt0.c1, t0.c65))!=((rt0.c1, rt0.c0, vt0.c0))))) AND (((- (t0.c25))))), ((((vt0.c0)%(rt0.c0)))OR(((rt0.c2)LIKE(rt0.c2)))), ((CAST(rt0.c1 AS NUMERIC))+((vt0.c0 IN ()))), rt0.c2, ((((((t0.c25) IS TRUE))OR(CAST(t0.c90 AS NUMERIC))))AND(((t0.c90)<>(t0.c65))));SELECT ((CASE WHEN vt0.c0 THEN rt0.c1 END)%(MIN(rt0.c0))), NULL, CASE CASE WHEN t0.c90 THEN t0.c65 END  WHEN (NOT (t0.c90)) THEN ((x'') NOT NULL) END FROM rt0, vt0, t0 WHERE (NULL) LIMIT -1112782803 OFFSET -608183800; -- 1ms;
SELECT DISTINCT ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) COLLATE RTRIM FROM vt0;SELECT 0.30504471833972424, (((+ (t0.c65))) NOT NULL), ((t0.c90) NOT BETWEEN ((NOT (t0.c25))) AND (vt0.c0)) FROM vt0, rt0;SELECT DISTINCT CAST(t0.c25 COLLATE RTRIM AS REAL), ((((t0.c65)IS(rt0.c0))) NOT BETWEEN (NULLIF(t0.c90, rt0.c2)) AND ((t0.c90 IN ()))), AVG(((rt0.c2)&(vt0.c0))) OVER () FROM rt0, t0, vt0; -- 0ms;
SELECT ALL TOTAL(CAST(-683931213 AS REAL)) FROM rt0, t0, vt0 WHERE ((((x'')GLOB('9)')) IN ())); -- 0ms;
SELECT DISTINCT CASE ((x'7da4') NOT BETWEEN (x'') AND (t0.c25))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN t0.c90 WHEN vt0.c0 THEN rt0.c2 WHEN t0.c65 THEN t0.c88 ELSE t0.c90 END THEN vt0.c0 END FROM rt0, t0, vt0; -- 0ms;
SELECT ((TYPEOF(rt0.c2)) IS FALSE) FROM t0;SELECT ALL AVG((((x'', vt0.c0, t0.c90))<=((t0.c25, NULL, t0.c25)))) FROM rt0 WHERE ((((('0.711399690082518') BETWEEN ('-2040779938') AND (NULL)))<((+ ('-274745293')))));SELECT ALL ((vt0.c0)<('3/	SZ')) COLLATE RTRIM, (t0.c25 COLLATE BINARY IN ()), GROUP_CONCAT((((t0.c65))>((rt0.c2)))) FROM vt0, t0, rt0 WHERE (CAST(((x'') NOT BETWEEN (NULL) AND (NULL)) AS BLOB)); -- 1ms;
SELECT ALL 0.9925164987626808 FROM t0 WHERE ('') ORDER BY ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) IN ((((('4r')AND(t0.c65)))AND(t0.c90)), NULL)), (CASE WHEN rt0.c2 THEN t0.c65 END IN (GLOB(vt0.c0, rt0.c1)))  NULLS LAST;SELECT ALL (((~ (rt0.c0))) NOTNULL), (((- (rt0.c1)))/(((t0.c25)IS NOT(vt0.c0)))), (((t0.c25) BETWEEN (rt0.c0) AND (t0.c65)) IN ()), RANK() OVER (), SUM(CASE t0.c65  WHEN t0.c88 THEN t0.c88 ELSE t0.c88 END) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))IS(COUNT(*))), ((SUM(t0.c65))LIKE(LIKELY(vt0.c0))), (((((rt0.c0))!=((rt0.c1))))+((((rt0.c0)) BETWEEN ((NULL)) AND ((t0.c88))))) FROM rt0, t0;SELECT DISTINCT 0.18143909868660157 FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE vt0.c0 COLLATE RTRIM  WHEN rt0.c0 THEN ((((vt0.c0)OR(t0.c88)))AND(rt0.c1)) WHEN (((vt0.c0)) NOT BETWEEN ((t0.c65)) AND ((rt0.c1))) THEN (- (rt0.c2)) WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c0) NOT NULL) ELSE (((t0.c65))<((t0.c25))) END FROM vt0 WHERE ((TYPEOF(DISTINCT NULL) IN (CAST(-245313368 AS REAL))));SELECT ALL ((((t0.c65) BETWEEN (t0.c90) AND (t0.c88)))>(((t0.c88) NOT BETWEEN (t0.c88) AND (rt0.c0)))) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (- (t0.c90)) THEN -2.0502699E7 END FROM vt0, rt0, t0; -- 0ms;
SELECT (((t0.c65 COLLATE RTRIM))<>((CAST(t0.c88 AS NUMERIC)))), (((t0.c25, t0.c25, vt0.c0)) NOT BETWEEN (((+ (t0.c25)), ((t0.c88)<>(t0.c25)), ABS(DISTINCT t0.c88))) AND ((t0.c90 COLLATE RTRIM, ((rt0.c0) ISNULL), t0.c88))), (((+ (rt0.c2)))IS NOT(((vt0.c0)!=(vt0.c0)))) FROM t0, rt0 WHERE (((TYPEOF(DISTINCT x'a796')) BETWEEN ((('0.18484238244411477')OR(0.7984729795058267))) AND (0.037841281489633394 COLLATE BINARY)));SELECT (((((NULL)OR(t0.c88)))OR(t0.c25)) IN ()), ((UPPER(DISTINCT rt0.c0))>((((t0.c90)) NOT BETWEEN ((t0.c90)) AND ((rt0.c1))))), t0.c25, AVG(CASE '0.4964486784850509'  WHEN t0.c88 THEN t0.c65 ELSE t0.c25 END) OVER ( GROUPS  UNBOUNDED PRECEDING), ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) FROM vt0, rt0;SELECT DISTINCT ((CASE WHEN t0.c90 THEN NULL WHEN rt0.c2 THEN 0.20081912620187026 WHEN rt0.c1 THEN '936774101' END)<<(((t0.c90) NOT BETWEEN (rt0.c1) AND (t0.c65)))), CASE WHEN ((rt0.c2)IS(t0.c65)) THEN CASE WHEN t0.c90 THEN t0.c90 ELSE t0.c88 END END, CASE WHEN ((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)) THEN ((t0.c25) ISNULL) WHEN NULL THEN ((rt0.c1)>(t0.c25)) WHEN ((t0.c90) BETWEEN (rt0.c0) AND (vt0.c0)) THEN (((vt0.c0, rt0.c1, '936774101')) BETWEEN ((t0.c25, t0.c90, t0.c88)) AND ((t0.c65, vt0.c0, rt0.c1))) ELSE (('K2tH') BETWEEN (t0.c25) AND (x'')) END FROM rt0 GROUP BY 0xffffffffd2d9ec6d HAVING (((CASE rt0.c0  WHEN t0.c65 THEN t0.c25 WHEN rt0.c2 THEN t0.c90 WHEN rt0.c0 THEN t0.c88 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c25 THEN vt0.c0 ELSE t0.c90 END, ((rt0.c1)<=(t0.c25)), CASE vt0.c0  WHEN t0.c65 THEN rt0.c2 END))<=(((- (t0.c90)), NULLIF(t0.c25, t0.c25), CAST(t0.c88 AS TEXT))));SELECT DISTINCT ((((t0.c90) NOTNULL)) NOT BETWEEN (CASE WHEN x'' THEN t0.c90 ELSE rt0.c1 END) AND (t0.c88)), ((x'') NOTNULL), (LOWER(vt0.c0) IN (NULL)) FROM vt0 INDEXED BY i30, t0, rt0 WHERE ((((('736751891')<=(0xffffffffed1f6b4b)))=((~ ('0.7177601096947714')))));SELECT DISTINCT vt0.c0, CAST(((((((((((((((((t0.c88)AND(rt0.c0)))OR(t0.c90)))OR(rt0.c2)))AND(vt0.c0)))OR(t0.c88)))AND(rt0.c2)))OR(t0.c90)))AND(8.06087358E8)) AS INTEGER), LTRIM((rt0.c0 IN ())) FROM rt0, t0 LIMIT 1916539724 OFFSET -741779039;SELECT ((NULL COLLATE BINARY)%(rt0.c0 COLLATE NOCASE)) FROM t0;SELECT DISTINCT CUME_DIST() OVER (), ((((t0.c90)<(NULL))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CASE WHEN t0.c25 THEN x'26c8' END)), COUNT('CX%8') FILTER(WHERE t0.c65 COLLATE BINARY) OVER ( ORDER BY (+ (CASE WHEN 9.64605654E8 THEN rt0.c1 WHEN t0.c25 THEN t0.c25 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)) ASC, (((((t0.c65)|(vt0.c0))))>((((((t0.c25)AND(rt0.c1)))OR(t0.c25)))))  NULLS FIRST) FROM t0, vt0 WHERE (((0.33016535744249975 COLLATE RTRIM)+(((('鹝cvFR')) NOT BETWEEN ((x'')) AND ((NULL)))))) GROUP BY ((((t0.c90)OR(t0.c65)))AND(t0.c90)) COLLATE BINARY, json_type(CAST(t0.c88 AS TEXT)), ((CASE t0.c88  WHEN t0.c90 THEN rt0.c0 END) BETWEEN (rt0.c2) AND ((((rt0.c0, t0.c25, rt0.c1)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((x'6eec', t0.c65, t0.c90))))), 1.395070157E9, NULLIF((t0.c90 IN (rt0.c1, vt0.c0)), ((((t0.c90)OR(t0.c25)))OR(rt0.c0))) LIMIT 775398506;SELECT DISTINCT rt0.c0 COLLATE RTRIM FROM t0, vt0 LIMIT 1719374150 OFFSET -1352060593;SELECT DISTINCT (((rt0.c2) ISNULL) IN (t0.c25 COLLATE NOCASE)) FROM vt0, t0, rt0 WHERE (((((('bvu~eE\r4r', x'f269', NULL))!=((x'b613', 6.64178534E8, 0Xffffffff93ffa72f))))GLOB(((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT CAST((+ (vt0.c0)) AS INTEGER) FROM vt0, t0 ORDER BY (((t0.c88)) NOT BETWEEN ((UNLIKELY(rt0.c2))) AND ((((t0.c90)/('p\n2kmmp[')))));SELECT ALL LOWER(((2080839792)>=(rt0.c0))), CASE WHEN (((t0.c65))<>((t0.c65))) THEN rt0.c2 COLLATE BINARY WHEN ((t0.c90) BETWEEN (t0.c88) AND (rt0.c2)) THEN t0.c88 WHEN CAST(vt0.c0 AS REAL) THEN ((((rt0.c0)AND(t0.c88)))AND(rt0.c2)) WHEN ((rt0.c1)IS NOT(rt0.c2)) THEN 'o1' WHEN ((t0.c88)OR(t0.c88)) THEN (vt0.c0 IN ()) END, COUNT(*) FROM rt0;SELECT ALL highlight(json_insert(0.7297687903890256, t0.c90, rt0.c0, t0.c65, t0.c88), (('0\rMPtp!vy')+(rt0.c1)), COUNT(x'cd3d'), MAX(NULL, t0.c25)) FROM rt0 WHERE (x'48c9');SELECT DISTINCT CAST(rt0.c1 COLLATE RTRIM AS BLOB) FROM t0, rt0, vt0 WHERE ((((('-212394697') NOT NULL)) IS TRUE)) ORDER BY (((rt0.c1) ISNULL) IN ()) DESC; -- 0ms;
SELECT DISTINCT ((CASE t0.c65  WHEN rt0.c1 THEN t0.c90 ELSE rt0.c1 END)&(CASE WHEN t0.c90 THEN t0.c25 ELSE rt0.c1 END)) FROM rt0, vt0, t0; -- 0ms;
SELECT NULL, ((((((t0.c88)AND(rt0.c2)))AND(vt0.c0)))&(((rt0.c1)IS(rt0.c0)))), (CAST(rt0.c1 AS TEXT) IN ()) FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c0 AS TEXT))OR(MAX(0X770024bb))))AND(((((t0.c65)OR(t0.c25)))AND(t0.c65)))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0, t0 WHERE (((NULLIF('0.48144987936255235', 'ኣo')) ISNULL)); -- 0ms;
SELECT ALL x'f22f' FROM rt0, vt0 WHERE ('Fi困'); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT CAST(vt0.c0 AS REAL)) FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(t0.c90 AS NUMERIC)) FILTER(WHERE CAST(((((((((t0.c25)OR(t0.c25)))AND(t0.c88)))OR(t0.c88)))AND(rt0.c0)) AS NUMERIC)) OVER (), ROW_NUMBER() OVER (), ROW_NUMBER() OVER ( PARTITION BY ((((NULL)AND((((0.36432681788670485)) BETWEEN ((t0.c90)) AND ((t0.c90))))))OR(((rt0.c1)LIKE(rt0.c0)))), (((~ (rt0.c2))) IS TRUE) ORDER BY CAST(((rt0.c0)IS(rt0.c1)) AS INTEGER) ASC, ((t0.c88) NOTNULL) COLLATE RTRIM) FROM vt0 GROUP BY ((((rt0.c1)+(t0.c88)))IS(NULL)), ((CASE t0.c90  WHEN vt0.c0 THEN t0.c88 ELSE rt0.c1 END)+((((t0.c65))>=((t0.c90))))), CASE WHEN (NOT (t0.c90)) THEN rt0.c0 ELSE ((t0.c65) BETWEEN (rt0.c2) AND (t0.c90)) END;SELECT CASE ((x'')+(rt0.c2))  WHEN ((rt0.c1)/(t0.c88)) THEN MAX('-528648889') END, (CAST(t0.c88 AS NUMERIC) IN ()), AVG(((x'')<(t0.c88))) OVER ( ORDER BY (((t0.c65)) NOT BETWEEN ((CASE t0.c88  WHEN t0.c90 THEN t0.c90 END)) AND ((CASE WHEN t0.c88 THEN vt0.c0 WHEN t0.c90 THEN rt0.c0 WHEN rt0.c2 THEN t0.c65 ELSE rt0.c1 END)))  NULLS LAST RANGE BETWEEN '-725370194' PRECEDING AND  UNBOUNDED FOLLOWING) FROM vt0 WHERE ((((NULL))>((x''))) COLLATE RTRIM) UNION ALL SELECT ALL ((GROUP_CONCAT(rt0.c2))>>(LIKE(t0.c65, rt0.c0))), ((((((((((t0.c25) NOTNULL))AND((rt0.c0 IN ()))))OR(SUM(vt0.c0))))OR(CAST(rt0.c0 AS BLOB))))OR((((('2117049037')OR(t0.c25)))AND(t0.c88)))), ((((((t0.c25)-(t0.c25)))OR(rt0.c2 COLLATE RTRIM)))AND(CASE t0.c65  WHEN t0.c65 THEN 0xffffffff95fceb2f ELSE t0.c65 END)) FROM t0;SELECT DISTINCT ((('L4')OR(rt0.c1)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT (((t0.c25, (('77764112') BETWEEN (t0.c65) AND (t0.c88)), x'effb'))<((MAX(2141917785), SUM(t0.c65), ((((rt0.c0)OR(t0.c65)))AND(-1.352060593E9))))) FROM vt0, t0 WHERE (((((0.4725744058064525) BETWEEN (0.04394239787240495) AND (x'')))GLOB(((((((((NULL)AND(x'')))OR(x'')))OR(NULL)))OR(1611267717)))));SELECT CUME_DIST() OVER (), json_remove(((t0.c25)-(rt0.c1)), (rt0.c1 IN ())), ((t0.c25) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (CAST(t0.c88 AS REAL))) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)>=('Uq')) AS NUMERIC) FULL OUTER JOIN vt0 ON (((0x397eb6d6))>=((rt0.c0))); -- 0ms;
SELECT DISTINCT COUNT('-1276178389') OVER () FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT t0.c65, MIN(CASE WHEN rt0.c0 THEN '' ELSE t0.c25 END), ((CASE WHEN vt0.c0 THEN '' END)&(CASE t0.c88  WHEN t0.c88 THEN t0.c90 END)) FROM t0;SELECT ALL ((vt0.c0 COLLATE RTRIM) IS FALSE), SUM(t0.c90) OVER (), (- (AVG(vt0.c0))) FROM t0, rt0;SELECT DISTINCT CASE ((t0.c88)IS(vt0.c0))  WHEN t0.c88 COLLATE BINARY THEN ((vt0.c0) NOTNULL) END FROM rt0 WHERE (CASE ((('}|')) BETWEEN ((-1197066877)) AND (('')))  WHEN -1.7976931348623157E308 COLLATE BINARY THEN ((0.08418085322296398) NOT BETWEEN (0Xd4c0a70) AND (x'')) END) GROUP BY json_array_length((((rt0.c1))==((t0.c65))), (+ (-1811962065)));