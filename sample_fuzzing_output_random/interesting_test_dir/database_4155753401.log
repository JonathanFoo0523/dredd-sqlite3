-- Time: 2024/06/07 12:15:33
-- Database: database1
-- Database version: 3.40.0
-- seed value: 4155753401
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 5ms;
PRAGMA soft_heap_limit = 3596579038496404043; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE vt1 SET (c0)=('n\n9Bq*ﳁ9*') WHERE vt1.c0; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET c2='q뉋u	뉋|' WHERE (((+ (rt0.c0))) BETWEEN (rt0.c0) AND (NULL)); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=0.412092917110621; -- 0ms;
PRAGMA temp.automatic_index = true; -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=9'); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL (((rt0.c0 IN (rt0.c2, rt0.c2))) ISNULL) FROM rt0, vt1 GROUP BY (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()), ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2))) BETWEEN (vt1.c0) AND ((+ (vt1.c0)))), CAST(vt1.c0 AS REAL) HAVING LIKELIHOOD(((rt0.c0) NOTNULL), 0.09120331358154166); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '30331'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA mmap_size; -- 0ms;
UPDATE vt1 SET c0=0.412092917110621; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
UPDATE OR FAIL vt1 SET c0=0x2f6669f6 WHERE x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '8251'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1470942049);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1356052421); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=15'); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF INSERT ON v0 FOR EACH ROW  WHEN (v0.c0 IN ()) COLLATE BINARY BEGIN UPDATE OR IGNORE rt0 SET (c0)=(0X2f6669f6) WHERE (- (CAST(rt0.c0 AS REAL)));INSERT OR FAIL INTO vt1 VALUES (0.7856772457932145);SELECT RAISE(IGNORE);END; -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt1 SET c0='1404257153'; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA automatic_index = true; -- 1ms;
END TRANSACTION; -- 0ms;
END; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.7856772457932145); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 4ms;
COMMIT; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE temp; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('1470942049') WHERE '0.7856772457932145'; -- 0ms;
PRAGMA short_column_names; -- 0ms;
UPDATE vt1 SET (c0, c0)=('p)', 1.470942049E9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1734931029); -- 4ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1835276760); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 888895653); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1513094337,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1283546865); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 TEXT ); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=337206683 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=2004928752 unordered noskipscan'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.journal_mode = WAL; -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA temp.cache_spill = 5225206168170030680; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2040662215,15');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1473328225); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=458177604,9');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL, c1='1513094337' WHERE (((rt0.c0 IN ()))IS(rtreenode(rt0.c0, rt0.c2))); -- 0ms;
PRAGMA main.incremental_vacuum; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END; -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 2ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 822094035); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 3ms;
DROP VIEW v0; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='>_''oDm' WHERE (~ (-2.040662215E9 COLLATE NOCASE)); -- 1ms;
DELETE FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END IN ()); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL ((((((rt1.c3)OR(rt1.c1)))OR(((rt1.c1) NOTNULL))))AND((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c1))))), ((((rt1.c3)>(rt0.c1)))IS((('') BETWEEN (0xffffffff865df739) AND (rt1.c0)))), CASE WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt1.c2)IS NOT(rt1.c2)) ELSE ((rt1.c1)<>(vt1.c0)) END FROM rt0, vt1, vt0, rt1; -- 1ms;
SELECT DISTINCT (((LOWER(DISTINCT rt0.c1), CASE WHEN rt1.c2 THEN rt0.c1 END, ((rt0.c1)|(rt1.c2))))=((((vt0.c0)/(vt0.c0)), (- (rt1.c2)), ((((vt1.c0)OR(vt0.c0)))AND(rt1.c0))))) FROM vt0;SELECT DISTINCT (- ((rt0.c2 IN (rt0.c0, rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT (((vt1.c0)) NOT BETWEEN ((((rt1.c0) IS TRUE))) AND ((CAST(vt0.c0 AS TEXT)))), ((rt1.c0 COLLATE RTRIM)IS('-1403653220')), CAST(rt1.c2 AS REAL) COLLATE BINARY FROM vt0, rt0;SELECT ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (x'a3cc')) FROM vt1, vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN MAX(rt1.c3) THEN ((rt0.c1)||(rt0.c0)) WHEN (- (rt1.c0)) THEN NULLIF(DISTINCT vt1.c0, rt1.c2) WHEN x'81a2' THEN (rt0.c1 IN ()) END FROM rt0, vt0 WHERE (((((NULL)-(0xffffffffb80f0b5d))) IS FALSE)) GROUP BY (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) IN ());SELECT DISTINCT LOWER(DISTINCT 0x111f1572) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (('1470942049')AND(((vt1.c0)&(rt0.c2)))), (((vt1.c0)) BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1))))), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE RTRIM FROM vt0, vt1, rt0 LIMIT -270615453 OFFSET -2094400423;SELECT (((rt1.c0))<=((rt0.c1))) COLLATE BINARY FROM rt1, vt1;SELECT DISTINCT 'LB-InfinitypG' FROM rt1 WHERE (((((((((('244566678')AND(0.29346630836387844)))OR('p)')))OR('')))AND(NULL)) IN (((x'b70c') ISNULL), ((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c2 AS TEXT)  WHEN 2.004928752E9 THEN ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)) WHEN (NOT (rt0.c2)) THEN ((rt0.c1)AND(rt1.c2)) WHEN ((vt1.c0) ISNULL) THEN CHAR(rt1.c2) ELSE 0X7f796810 END, (+ ('')), (((((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))))/(((0.5071157004412817) BETWEEN (rt1.c3) AND (rt1.c1)))) FROM rt1, vt1 WHERE (CASE WHEN (- (-2.70615453E8)) THEN ((NULL) NOTNULL) END);SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1, rt1 NOT INDEXED ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT CAST((((rt0.c1, rt1.c3, vt1.c0))!=((rt0.c0, rt0.c1, rt0.c0))) AS BLOB) FROM rt1, rt0, vt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((rt1.c2)+(rt1.c3))) BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0))) AND ((('')<<(rt1.c3)))), (((- (rt0.c0)))<(rt1.c0)), (((rt1.c0 IN ()))|(((rt0.c0)>>(vt1.c0)))) FROM rt1 WHERE (CAST(((NULL)/(152818639)) AS NUMERIC)) GROUP BY (((rt1.c2)) NOT BETWEEN (('2116989588' COLLATE BINARY)) AND ((((x'') BETWEEN (rt1.c0) AND (rt1.c2)))));SELECT ALL ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c3)))|(((rt1.c2)OR(vt0.c0)))), ('208270122' IN ()), CAST((~ (vt0.c0)) AS BLOB) FROM rt1;SELECT ((HEX(rt0.c0))GLOB((rt1.c1 IN ()))) FROM vt1;SELECT ALL CASE (('458177604')|(vt1.c0))  WHEN ((rt0.c2)||(rt0.c2)) THEN ((((rt1.c1)OR(rt0.c1)))OR(vt0.c0)) END FROM rt1;SELECT ALL (((- (x'eb3b'))) ISNULL), rt0.c1, ((HEX(DISTINCT rt1.c2)) NOT BETWEEN (-1484104929) AND (((rt0.c1)+(vt1.c0)))) FROM vt1, rt1, rt0 WHERE (CASE WHEN (('')|(NULL)) THEN ((((0.6716951718287186)AND(x'')))OR(0.7216739730381762)) WHEN (('244566678') NOT NULL) THEN (x'' IN (-1797957197)) WHEN (((x''))=((x'cf12'))) THEN ((x'')IS(0.08247298046817086)) END); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt1.c3)))OR(vt0.c0)))IS((vt1.c0 IN ()))), LTRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))), ((((rt1.c1) BETWEEN (rt1.c3) AND ('-1541404426')))>>(NULL)) FROM rt0, vt0, rt1 WHERE (load_extension(((0.25389171530819843)<('w폏')), ((x'')>('n\n9bq*ﳁ9*')))); -- 0ms;
SELECT SQLITE_VERSION(), ((((vt1.c0)<=(rt1.c0))) BETWEEN ((((rt0.c0))<((vt0.c0)))) AND (((((((((rt0.c2)OR(rt0.c0)))AND(NULL)))AND(rt1.c2)))OR(vt0.c0)))), ((vt0.c0) IS TRUE) FROM rt0 GROUP BY CAST(((rt1.c2)<>(0.8338582777157124)) AS NUMERIC) HAVING ((COALESCE(vt0.c0, 'qꮠ43>않I+'))&(((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))));SELECT DISTINCT (((+ (rt0.c0))) NOT BETWEEN (LIKELIHOOD(x'', 0.33373173676377177)) AND ('6W')) FROM vt0 WHERE ((((+ (0.5071157004412817))) NOT NULL));SELECT DISTINCT CAST(((rt1.c2) NOT NULL) AS TEXT), ((((x'')AND(rt0.c2))) IS FALSE), CASE rt0.c0  WHEN x'' THEN rt1.c1 END COLLATE RTRIM FROM vt1 WHERE (LIKELY((((('1513094337')OR(x'3833')))OR(NULL)))) LIMIT -1403653220 OFFSET -1802353356;SELECT DISTINCT NULLIF(DISTINCT HEX(rt0.c1), ((rt1.c0) ISNULL)), CASE WHEN (((rt1.c0, vt1.c0, rt0.c0))<((rt1.c1, rt0.c1, rt1.c0))) THEN 0xffffffffbe36c8b2 WHEN CAST(vt1.c0 AS BLOB) THEN ((((((((rt0.c0)AND(vt0.c0)))OR(rt1.c0)))AND(rt0.c2)))OR(rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN (NOT ('')) WHEN ((((rt1.c2)OR(rt0.c0)))AND(rt0.c1)) THEN (- (rt0.c2)) WHEN (('4鋈4<') IS TRUE) THEN CASE WHEN vt0.c0 THEN rt1.c3 END ELSE (((vt0.c0))>=((rt1.c1))) END, ((((vt1.c0)*(rt0.c0))) NOTNULL), x'', 0.5065627666349796 FROM vt0, rt1, vt1 WHERE ((((x'')>>(NULL)) IN (CASE '-66140854'  WHEN '''B' THEN x'24f5' ELSE 0.872104962626213 END)));SELECT ALL DENSE_RANK() OVER (), ROW_NUMBER() OVER (), 0.04837161623101194, 0.16845593308289653, LENGTH((rt0.c1 IN ())) FROM rt1, vt1 ORDER BY rt1.c2, ((vt1.c0 COLLATE BINARY)<(IFNULL(rt0.c2, rt1.c0)));SELECT DISTINCT '>_''oDm' FROM rt0, vt0, vt1; -- 0ms;
SELECT (('3596579038496404043') NOT BETWEEN (NULL) AND (rt1.c3)) COLLATE BINARY, (((rt0.c1)) BETWEEN ((TRIM(rt0.c2))) AND ((NULL COLLATE RTRIM))), (CAST(vt0.c0 AS TEXT) IN ()), GROUP_CONCAT(x''), MAX(CAST(vt1.c0 AS NUMERIC)) FROM vt0 GROUP BY CASE (NOT (vt0.c0))  WHEN x'' THEN (~ (rt1.c0)) WHEN NULL THEN CASE WHEN x'105a' THEN vt1.c0 ELSE rt0.c2 END WHEN json_array_length(rt1.c2) THEN ((vt0.c0)/(rt0.c2)) END;SELECT ALL NULL FROM vt1, rt0, vt0, rt1; -- 0ms;
SELECT ((((rt0.c2) ISNULL))/(MAX(vt0.c0))) FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON CAST((((vt0.c0, 0x31e99d947c31b24b, 'I''#aㅪCO', rt0.c1, rt1.c1)) BETWEEN ((rt1.c2, NULL, rt1.c1, rt0.c1, rt0.c2)) AND ((rt1.c3, rt1.c2, rt0.c1, rt0.c2, rt0.c0))) AS INTEGER) CROSS JOIN vt0 ON ((((vt0.c0)LIKE(rt1.c1)))<>((+ (x'')))) WHERE ((((((((((- (x'')))OR((((0.08151352713064142, '1072341450', x''))<((408148063, x'', 0Xffffffffbbfcce8e))))))OR((('-1484104929')IS NOT(x'')))))OR((('+DrcQ#')>(1531414096)))))OR(CASE ''  WHEN NULL THEN 0X1853d85f END)));SELECT ALL ((vt1.c0) NOT NULL) COLLATE RTRIM FROM vt1 WHERE ((('' IN ()) IN ((~ (-1057757671))))); -- 1ms;
SELECT rt0.c2, HEX(DISTINCT CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 END), CASE WHEN (((x''))<>((rt1.c0))) THEN x'' ELSE vt0.c0 END FROM vt0, rt1 WHERE ((- (((0.5467825472698732) NOT BETWEEN ('-2094400423') AND (-1.869245752E9)))));SELECT DISTINCT (((rt1.c3) IS TRUE) IN ()) FROM rt0, rt1, vt1; -- 0ms;
SELECT ALL TRIM(DISTINCT CASE WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL ELSE rt0.c0 END) FROM vt1, rt0, vt0 WHERE (NULL);SELECT COUNT(*) FROM vt0; -- 0ms;
SELECT ALL (((+ (rt1.c0)))OR('-1797957197')) FROM vt1, rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0)) IN ()) FROM vt0, vt1 GROUP BY (((((rt1.c0))>=((rt1.c3))))>(vt0.c0 COLLATE BINARY)) HAVING (~ (((rt1.c0) NOTNULL))) ORDER BY (+ (((rt0.c2)&(rt0.c2)))) DESC  NULLS LAST;SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((MIN(rt1.c0))) AND ((vt0.c0 COLLATE BINARY))) FROM vt1 WHERE (((('|B', 0.25389171530819843, 1.513094337E9)) NOT BETWEEN ((-1270697691, (((x''))>=((x''))), ((0.8747010826500607) NOTNULL))) AND ((((0.7995367576128224) BETWEEN (x'93f0ecb6') AND ('+drcq#')), ((((0.916801514800753)OR(0.5979064591562921)))AND('1404257153')), (('-1869245752')>('QD^W#\nr|')))))) GROUP BY (+ ((~ (rt0.c1)))) ORDER BY (((((rt1.c3)/(rt1.c1)), ((((rt0.c2)OR(rt1.c3)))OR(rt1.c1)), ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3))))<>((((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c3 WHEN rt0.c0 THEN rt0.c0 END, CHAR(0x4ee7af98, vt1.c0, rt1.c3, vt0.c0, vt1.c0))));SELECT ALL ((((((((((rt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(x'')))%(((vt1.c0)>(0.9384378032888125)))) FROM rt1, vt1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c1) BETWEEN (x'') AND (rt1.c2)) IN ()), ((((((rt1.c2)=(rt1.c3)))AND((+ (rt0.c0)))))AND((NOT (rt1.c3)))), ((rt1.c2)+(CASE WHEN '-66140854' THEN rt1.c1 ELSE rt0.c0 END)) FROM rt0, rt1 GROUP BY ((((rt0.c1) NOT NULL))-(rt1.c1)) HAVING ((((rt1.c0) NOT NULL)) NOTNULL); -- 0ms;
SELECT DISTINCT CASE rt1.c1 COLLATE NOCASE  WHEN ((rt0.c1)GLOB(vt1.c0)) THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c0) NOT BETWEEN (0.6606090097640636) AND (rt1.c0)) THEN IFNULL(DISTINCT rt0.c1, rt0.c2) WHEN ((rt1.c1) IS TRUE) THEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)) END FROM vt0;SELECT DISTINCT COALESCE(((vt0.c0)GLOB(rt1.c3)), (- (rt1.c1))) FROM vt1, rt0;SELECT DISTINCT rt1.c1 FROM vt0;SELECT DISTINCT ((((rt1.c1)+(vt0.c0)))AND((rt0.c0 IN (vt0.c0)))) FROM rt1, rt0, vt0, vt1 WHERE (CASE WHEN '2063112945' COLLATE NOCASE THEN (+ ('751463313')) WHEN (((NULL))>((0X7bbe0715))) THEN CASE WHEN '-1403653220' THEN 'qꮠ43>않i+' WHEN 0.8565677085932073 THEN NULL WHEN '' THEN x'' END WHEN (- (-1.270697691E9)) THEN ((x'fb6b')<<(NULL)) ELSE (((('-392101080')OR(x'92bd')))OR(x'')) END); -- 0ms;
SELECT DISTINCT (+ (CASE WHEN rt1.c0 THEN rt1.c1 END)) FROM vt0 WHERE ((((((x'ee21') NOT NULL)))==((x'' COLLATE RTRIM)))) GROUP BY (('') NOTNULL);SELECT ALL (CASE WHEN rt0.c2 THEN rt0.c2 END IN ()) FROM rt1, vt1, rt0, vt0 WHERE (((((((0.9663757142551027) BETWEEN (0.38929748194966685) AND ('㷠V~a')))OR((0.4701618369176065 IN ()))))AND(((0.8140566044332909) BETWEEN (123159338) AND (0.7312543715160217))))); -- 0ms;
SELECT ((((((((((rt1.c1)IS NOT('616152852')))OR(((((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(x'')))OR(vt0.c0)))OR(rt0.c2)))))AND(((vt1.c0) IS TRUE))))AND(NULL)))OR(((rt0.c1)*(rt1.c1)))) FROM rt0, vt1;SELECT ((x'') BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE BINARY FROM vt0, rt1, vt1 WHERE ((((((0X7c26f428)OR(0.9171339144263346)))OR('-B')) IN (((0.5193319534583087) BETWEEN (NULL) AND (0x13e3b01e)), CASE WHEN x'3648' THEN 2003879269 ELSE '-139191342' END)));SELECT ALL FIRST_VALUE((((+ (rt0.c2)))>=(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) OVER (), AVG(((x'')*(rt0.c0)) COLLATE RTRIM) FILTER(WHERE (NOT ((- (rt0.c1))))) OVER ( ORDER BY vt0.c0 ASC, (((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())), ((rt1.c1) NOT NULL) COLLATE BINARY, (rt1.c0 COLLATE RTRIM IN ()), (((- (rt1.c0)))||(CAST(rt0.c2 AS INTEGER))) FROM rt0, vt0 ORDER BY (((NULL)) BETWEEN ((((rt0.c0)*(rt0.c0)))) AND (((~ (0X1c520821)))))  NULLS FIRST;SELECT DISTINCT CASE SUM(vt1.c0)  WHEN ((rt0.c2)*(rt1.c3)) THEN rt0.c2 ELSE GROUP_CONCAT(rt0.c1) END FROM vt1, rt0, rt1 WHERE ((COALESCE(DISTINCT 0X1853d85f, x'') IN ())); -- 0ms;
SELECT (NOT (CAST(vt1.c0 AS REAL))) FROM rt0, vt1, rt1, vt0; -- 0ms;
SELECT '1245647683', ((((COUNT(*))AND(((rt0.c2)*(rt0.c0)))))AND((+ ('901226346')))), json_array_length(rt1.c0 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1))) FROM rt0, rt1 WHERE (JULIANDAY(((1.470942049E9)IS(NULL)), (((0X7af89af1))>=(('K^DM!V茜 5'))), ((((((((-1237866955)OR(NULL)))OR(x'9f13')))AND('')))AND('H')), (((NULL, x'6923da32', '1394168675')) BETWEEN ((0.14949024750532047, '2138662928', NULL)) AND ((NULL, 0.8140566044332909, 0.6716951718287186))), (('-1403653220')|(NULL)))); -- 0ms;
SELECT DISTINCT SUM((((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) OVER () FROM rt0, rt1, vt0, vt1 GROUP BY (((- (rt1.c1)))GLOB(((rt0.c2) IS FALSE))), (((rt1.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c3))) COLLATE BINARY, LTRIM((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))); -- 0ms;
SELECT DISTINCT x'ffc9100f' FROM vt0, rt1; -- 0ms;
SELECT ALL CAST((('4鋈4<') NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS REAL), ((MIN(rt0.c1))IS NOT(x'')), ((((vt1.c0 COLLATE BINARY)AND(MAX(rt0.c2))))OR(((rt0.c0) NOT NULL))) FROM vt0, rt1, vt1, rt0; -- 1ms;
SELECT ALL COUNT(*), (- ((- (vt0.c0)))), ((((rt1.c0)=(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((vt1.c0 IN ()))), ROW_NUMBER() OVER (), (((~ (vt1.c0)))-(CASE WHEN vt1.c0 THEN '2063112945' END)) FROM vt0, vt1 WHERE ((- (CASE WHEN 0X111f1572 THEN 'Hg' END)));SELECT DISTINCT (((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c2)))OR(rt1.c0)))OR(rt0.c0)) IN ()) FROM vt0, vt1, rt1, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((((((((~ (rt0.c0)))AND(((rt0.c1)==(vt0.c0)))))AND(((NULL)IS(vt0.c0)))))AND(((((x'')AND(rt1.c2)))AND(vt1.c0)))))OR(CAST(rt1.c3 AS NUMERIC))), (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2)), ((vt1.c0)|(rt0.c2)), rt0.c1)) AND (((vt0.c0 IN (rt0.c1, rt1.c1)), CASE rt1.c2  WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END, ((rt1.c1)-(rt1.c2))))), (((((rt0.c2, rt1.c2, vt1.c0))>=((rt1.c1, rt1.c2, rt1.c1)))) IS TRUE) FROM rt1, rt0;SELECT (((rt1.c0)) NOT BETWEEN ((((rt0.c2)<(NULL)))) AND (((+ (rt0.c2))))), TOTAL_CHANGES(), (((((((((rt1.c2 IN ()))OR(MIN(vt0.c0))))AND(UNLIKELY(DISTINCT rt0.c2))))AND((+ (rt0.c2)))))AND((vt0.c0 IN ()))), (~ (CASE vt0.c0  WHEN vt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)), ((json(NULL))==(LIKELIHOOD(vt1.c0, 0.6546402051586027))) FROM rt1, vt0, vt1;SELECT DISTINCT ((CAST(rt0.c2 AS INTEGER))LIKE((vt0.c0 IN (rt1.c2)))) FROM rt1, vt1 WHERE ((-1.39191342E8 COLLATE BINARY IN ()));SELECT DISTINCT vt1.c0 FROM vt0, rt1 WHERE ((+ (((NULL) IS FALSE))));SELECT DISTINCT SUM(((rt1.c1) NOT NULL)) OVER ( ORDER BY ((rt1.c1 COLLATE BINARY)IS NOT(rt1.c2 COLLATE NOCASE)), '-773217104'  NULLS LAST, ((rt1.c3 COLLATE BINARY)<=((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((vt1.c0)))))), 0.412092917110621, (~ ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) FROM vt1;SELECT DISTINCT (NOT ((+ (rt1.c0)))) FROM rt1, vt0, vt1, rt0 GROUP BY rt0.c1 COLLATE RTRIM; -- 0ms;
SELECT ALL CASE (rt1.c1 IN (rt0.c1))  WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN AVG(vt1.c0) END FROM vt0, rt1, vt1, rt0 WHERE ((+ ((('n\n9Bq*ﳁ9*')+(x'c5e7337b'))))) GROUP BY ((UPPER(rt0.c1))==('p)')); -- 5ms;
SELECT DISTINCT ((((rt1.c3)>>(rt0.c2)))>(CASE 0.21135468759688447  WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c3 END)) FROM rt1, rt0 LIMIT -1078504172 OFFSET -1541404426; -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE NOCASE) BETWEEN ((~ (rt1.c3))) AND ((((rt1.c2, vt1.c0, rt1.c3))<((rt1.c3, rt0.c1, rt1.c0))))) FROM rt0, vt1;SELECT DISTINCT ((((((((rt1.c3 COLLATE BINARY)OR(((vt1.c0)/(rt0.c2)))))OR((rt0.c1 IN ()))))AND(rt1.c3)))AND(rt1.c2)), ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))IS NOT((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))), CAST(((rt0.c0)&(vt0.c0)) AS INTEGER) FROM rt0 WHERE ((((((((((- (0.45853842360070884)))OR(LAST_INSERT_ROWID())))OR((',!&	&Uhz' IN ('')))))OR(((0.5866780125539163) NOTNULL))))AND((((0.6043544649495511)) BETWEEN (('458177604')) AND ((0.695043558969599))))));SELECT DISTINCT ((ABS(DISTINCT rt1.c2))<<(((((rt1.c0)AND(rt0.c0)))OR(rt1.c3)))) FROM vt1, rt0, rt1 LIMIT -1938941070; -- 0ms;
SELECT DISTINCT (((rt1.c0)==(rt1.c2)) IN ()) FROM vt1, rt0, vt0, rt1; -- 0ms;
SELECT ALL ((((rt0.c1)OR(CAST(rt1.c0 AS TEXT))))AND(((rt1.c0)<('458177604')))) FROM vt1;SELECT DISTINCT (((((+ (rt1.c1)))AND(NULL COLLATE RTRIM)))AND(CAST(rt1.c1 AS REAL))) FROM rt0, vt1, rt1 WHERE (TRIM((((('')AND(NULL)))AND(NULL)))); -- 0ms;
SELECT ((((((((GLOB(rt0.c1, rt0.c1))OR(CAST(rt1.c3 AS NUMERIC))))AND(CASE WHEN rt1.c3 THEN rt0.c2 ELSE rt1.c3 END)))AND(LOWER(DISTINCT rt0.c1))))OR(MAX(x'62d9'))), ((((vt0.c0)IS NOT(vt1.c0)))IS(CAST(rt1.c2 AS REAL))), (((((vt0.c0)AND(vt0.c0)))AND(rt0.c2)) IN ()) FROM rt1, vt1, rt0, vt0 WHERE (((CASE 1172965134  WHEN 0.9663757142551027 THEN 0.020162058499822444 END) NOTNULL)); -- 0ms;
SELECT ALL 0x422a3de0, CAST(rt0.c2 COLLATE BINARY AS NUMERIC), CASE rt0.c1  WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END COLLATE NOCASE, CASE QUOTE(rt1.c1)  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt1.c2)) END, ((RTRIM(vt0.c0)) NOT BETWEEN (CASE NULL  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END) AND (((vt1.c0) ISNULL))) FROM rt1, vt0;SELECT DISTINCT CUME_DIST() OVER ( ORDER BY (((rt1.c2, rt1.c0, rt0.c2)) NOT BETWEEN ((((((vt1.c0)AND(rt1.c3)))OR(vt0.c0)), rt1.c2, (((rt1.c2, rt1.c0, vt1.c0))>=((rt1.c1, vt1.c0, rt1.c0))))) AND ((((rt1.c2)OR(rt0.c1)), ((((((((rt0.c1)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))AND(vt0.c0)), CASE 'Y'  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN 0.5080832661449085 ELSE rt1.c3 END))), TRIM(DISTINCT (- (rt1.c1)), ((rt0.c2) NOT NULL))  NULLS LAST) FROM rt1 ORDER BY (+ (((vt1.c0) ISNULL)));SELECT DISTINCT NTILE(CAST(CAST(rt1.c3 AS BLOB) AS TEXT)) OVER ( GROUPS CASE WHEN UNLIKELY(rt1.c2) THEN PRINTF(rt1.c1) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN TRIM(rt0.c1) WHEN ((rt0.c0)AND(rt1.c1)) THEN ((((rt1.c1)AND('408148063')))AND(NULL)) END PRECEDING EXCLUDE TIES) FROM rt1; -- 0ms;
SELECT ((LOWER(vt0.c0)) NOT BETWEEN (rt1.c2) AND (((rt0.c1) IS TRUE))) FROM rt0 WHERE (CASE WHEN (- ('')) THEN TRIM(DISTINCT 0.8039826505246974) END);SELECT DISTINCT (+ (SUM(rt1.c1))) FROM vt1, vt0, rt1 WHERE ((('0.7856772457932145' COLLATE BINARY)<>(((NULL) BETWEEN ('r') AND (2.44566678E8))))); -- 0ms;
SELECT DISTINCT (('1615966192') BETWEEN (rt1.c3) AND (rt1.c3)) COLLATE RTRIM FROM rt0 WHERE ((((LIKELY(DISTINCT x'')))<=(('-麆''{㱄~JAr' COLLATE RTRIM))));SELECT (((vt1.c0 IN (rt1.c3))) BETWEEN (CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c1 END) AND (TRIM(0xffffffffc8cf874d))), (rt0.c1 IN ()), ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))<=(((vt1.c0) BETWEEN (rt0.c2) AND (NULL)))) FROM rt1, rt0, vt0 LIMIT 1394168675;SELECT ALL (((rt0.c2 IN (rt1.c1, '21127226')))>((((rt0.c0))>=((rt1.c3))))), TYPEOF(DISTINCT TRIM(DISTINCT vt0.c0, '-1647891649')), ((((rt1.c1)>>(rt1.c3))) NOT NULL), CAST(CASE rt1.c0  WHEN vt0.c0 THEN rt0.c1 END AS NUMERIC), json_insert(NULLIF(rt0.c0, rt0.c0), '-2013628459' COLLATE RTRIM, x'c7ae30b3') FROM vt0;SELECT ALL ((((rt1.c2)/(rt0.c2))) NOT BETWEEN (CHANGES()) AND ((- (rt1.c2)))) FROM vt0 WHERE (((((- ('lL\niu'))))<((x''))));SELECT ((((rt0.c1)||(rt0.c0))) ISNULL) FROM vt0 WHERE (NULL);SELECT ALL (((rt1.c0 IN ())) IS TRUE), SUM(CAST(x'3b23' AS BLOB)), x'' FROM rt1, vt1, vt0, rt0 WHERE (json_insert(((((NULL)OR(1.470942049E9)))AND(0.35586647125386495)), '1245647683', CASE WHEN NULL THEN '' WHEN '-687101024' THEN NULL WHEN x'' THEN x'4b20' END));SELECT CAST((((rt1.c3))>((rt0.c0))) AS REAL), TOTAL(COUNT(*)), '927756776' FROM rt1 ORDER BY ((CASE rt1.c3  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END)||(((((((((rt1.c2)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(vt0.c0))))  NULLS FIRST;SELECT ALL MIN(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))) FROM rt0, vt0 WHERE (LOWER(((x'') NOTNULL))); -- 0ms;
SELECT DISTINCT (((rt0.c1, rt1.c2, rt1.c1)) BETWEEN ((CASE vt1.c0  WHEN rt1.c1 THEN rt0.c1 END, rt1.c1, rt1.c0)) AND ((rt1.c3 COLLATE BINARY, ((((rt1.c3)OR(rt1.c1)))AND(vt1.c0)), rt0.c2 COLLATE RTRIM))) FROM rt1, vt1;SELECT ALL TOTAL(NULL COLLATE NOCASE) OVER () FROM vt0, vt1, rt1, rt0 WHERE (CAST(json_remove('746949739', x'') AS TEXT)) LIMIT 1119198235 OFFSET -1998725883;SELECT ALL ((CAST(rt1.c0 AS TEXT)) NOT NULL) FROM vt0, rt0, rt1, vt1; -- 1ms;
SELECT DISTINCT 0.6802135959390373 FROM vt0, rt1, vt1, rt0 WHERE ((NOT (CASE WHEN '' THEN 337206683 WHEN NULL THEN NULL WHEN NULL THEN 0.11896172193329835 ELSE 9.01226346E8 END))); -- 1ms;
SELECT DISTINCT TOTAL(((rt1.c1)<<(vt0.c0))) OVER () FROM vt1, vt0, rt1, rt0 WHERE (((CASE 0.5080832661449085  WHEN -1.797957197E9 THEN '-610065519' END)<((- ('-46340639'))))); -- 0ms;
SELECT DISTINCT (~ (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) FROM rt1 WHERE (((0X93c867c) IS TRUE) COLLATE NOCASE) LIMIT 198802139; -- 0ms;
SELECT DISTINCT 0.05232416381442806 FROM rt1, vt1 WHERE (CAST(((x'')>(x'a2cef691')) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((rt1.c1)-(rt1.c0))) NOTNULL) FROM vt0, vt1 WHERE (((((NULLIF('\rqJ~', x'97f9'))AND(MIN(-2141695561, x'0185'))))AND(((0x14195d9b)&(x'')))));SELECT DISTINCT rt0.c0 FROM vt0, vt1;SELECT ALL (CASE rt0.c0  WHEN rt1.c1 THEN rt1.c0 END IN ()), vt1.c0, CAST(rt1.c2 AS NUMERIC) COLLATE NOCASE, LAST_VALUE(x'') OVER (), CASE (~ (rt0.c2))  WHEN ((rt1.c2) BETWEEN (rt0.c1) AND (vt1.c0)) THEN ((((vt0.c0)OR(rt0.c2)))OR(x'')) END FROM vt0, rt0 WHERE (((0.7000665028921634) ISNULL) COLLATE RTRIM COLLATE BINARY);SELECT (((~ (rt1.c1)))/(rt0.c1)) FROM vt1;SELECT DISTINCT rt1.c1 FROM vt1, rt1 WHERE (TRIM(DISTINCT (NOT (0.4701618369176065)), (((('198802139')OR(0.236880534590031)))OR('-2040662215')))); -- 0ms;
SELECT DISTINCT (((rt1.c1)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((CASE WHEN rt0.c0 THEN rt1.c3 ELSE rt1.c0 END))) FROM rt0, rt1, vt1; -- 0ms;
SELECT ALL COUNT((rt1.c2 IN ())) OVER () FROM rt0; -- 0ms;
SELECT ALL FIRST_VALUE(((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))||(UPPER(rt0.c0)))) OVER () FROM vt0, vt1, rt0 WHERE (((((CAST(0.8016767282488119 AS BLOB))OR((~ (x'817d')))))OR(('h#z' IN ())))); -- 0ms;
SELECT DISTINCT ((CASE 408148063  WHEN rt1.c2 THEN vt1.c0 ELSE rt1.c1 END) NOTNULL) FROM vt1, rt0, vt0, rt1 GROUP BY ((((rt1.c0) BETWEEN (rt0.c2) AND ('-1103705934'))) NOT BETWEEN ((((rt1.c0, vt1.c0, vt1.c0))<((rt0.c0, rt1.c3, vt0.c0)))) AND (vt1.c0 COLLATE BINARY)) HAVING (- ((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))); -- 0ms;
SELECT ALL (((('') ISNULL)) ISNULL), x'' COLLATE NOCASE, SUM(CAST(rt1.c2 AS TEXT)) FROM vt1, rt1, rt0 WHERE (((0.6768181977244413) ISNULL) COLLATE RTRIM) GROUP BY -1280474340 HAVING ((((rt1.c1)&(x'c223'))) BETWEEN (rt1.c3 COLLATE NOCASE) AND (((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))));SELECT ALL (+ (((((((((rt1.c3)AND(2.063112945E9)))OR(x'04ba')))OR(rt1.c1)))AND(rt1.c3)))) FROM vt0;SELECT DISTINCT (((rt1.c0)|(NULL)) IN ()) FROM vt1, rt1, rt0 WHERE ((CASE '1058343564'  WHEN NULL THEN NULL END IN ((- ('1965985692'))))); -- 0ms;
SELECT DISTINCT (((LTRIM(rt1.c2, rt0.c2), '1531414096' COLLATE BINARY, (((rt1.c2, vt1.c0, NULL)) BETWEEN ((vt1.c0, rt1.c1, vt1.c0)) AND ((rt1.c3, rt1.c0, 0xfffffffff7ac5045)))))<=((((vt1.c0)*('751463313')), CAST(rt1.c2 AS REAL), load_extension(vt1.c0, rt1.c0)))), rt1.c3, CASE 0.9663757142551027  WHEN GROUP_CONCAT(rt1.c1) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE LOWER(rt0.c2) END, ((CAST(rt0.c2 AS TEXT))*(vt1.c0 COLLATE BINARY)), (((((((((((('-18741369')OR(vt0.c0)))OR(x'')))OR(rt1.c1)))AND(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))AND((~ ('-1517749858')))) FROM rt1, vt0, rt0, vt1; -- 0ms;
SELECT DISTINCT (((rt1.c0)>=(vt1.c0)) IN (((rt1.c3) IS TRUE), (- (vt1.c0)))), CASE ((rt1.c0) NOTNULL)  WHEN (((rt0.c0))>=((rt0.c1))) THEN (((rt1.c1, rt0.c0, '')) BETWEEN ((rt0.c0, rt1.c0, rt1.c3)) AND ((rt1.c3, vt1.c0, rt1.c0))) ELSE rt0.c1 END, ((((((((((((rt0.c2)AND(rt1.c2)))OR('qꮠ43>않i+')))AND(rt1.c3)))OR(vt0.c0)))OR(((rt1.c0) NOTNULL))))OR(CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE '2138662928' END)) FROM rt1, vt0 WHERE (((LIKELIHOOD(DISTINCT 0Xffffffffa2a8c5ac, 0.22524268549491033)) NOT NULL));SELECT DISTINCT ((((((rt1.c1) IS TRUE))AND(rt1.c3)))OR(NULL)) FROM rt1, vt0, rt0, vt1 WHERE ((((((NOT (')m')))OR(x'')))OR('r' COLLATE NOCASE))) ORDER BY ((CAST(rt1.c0 AS BLOB)) NOTNULL) DESC  NULLS LAST, CASE WHEN '\￿>)V\rᕲ' THEN (((rt0.c1)) BETWEEN ((vt0.c0)) AND ((x'e961b15f'))) ELSE (NOT (vt0.c0)) END DESC; -- 3ms;
SELECT ALL json_insert(((vt1.c0) NOT NULL), (rt1.c1 IN (rt1.c0, vt1.c0)), CAST(rt0.c0 AS INTEGER)) FROM vt0, vt1, rt0 WHERE (CASE (('[pl~*^st') BETWEEN ('1994828290') AND (0.4744910587818699))  WHEN (((((((('123159338')AND(NULL)))AND(NULL)))OR(x'')))AND('-1403653220')) THEN CAST(-831693316 AS REAL) WHEN (NOT (NULL)) THEN CAST('' AS REAL) WHEN 0.9100654021830303 COLLATE NOCASE THEN NULL COLLATE NOCASE END) GROUP BY rt1.c0 COLLATE NOCASE;SELECT DISTINCT (rt0.c2 IN ()) FROM vt1 WHERE (((0.5071157004412817) NOT BETWEEN (((((NULL)AND(x'')))OR('-1034187762'))) AND ((- ('-1403653220'))))); -- 0ms;
SELECT (((rt0.c2) BETWEEN (vt1.c0) AND (rt1.c2)) IN ()), (((0x382d9e8e)*(rt1.c3)) IN (((rt0.c2)<=(rt0.c2)))), (NOT (((rt1.c2)+(rt1.c1)))), '5Y-kZW', TOTAL(((rt1.c2)-(vt1.c0))), ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(CAST(vt0.c0 AS TEXT))))AND(((rt0.c0)<<(rt1.c2)))), (CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 ELSE rt1.c3 END IN ()) FROM vt1, rt1, vt0, rt0 WHERE ((+ (x''))); -- 0ms;
SELECT ALL (rt0.c0 IN ()) COLLATE NOCASE FROM rt0, vt0, vt1, rt1; -- 0ms;
SELECT TRIM(CASE rt0.c1  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c3 END) FROM rt1 WHERE (CAST(CAST(0.19459254272182436 AS NUMERIC) AS REAL));SELECT UPPER(DISTINCT NULL) FROM vt0, vt1, rt0 UNION SELECT DISTINCT CAST((rt1.c3 IN (rt0.c0, vt0.c0)) AS BLOB) FROM vt0, vt1, rt0 ORDER BY ((JULIANDAY(rt0.c1, 0xffffffffa015e0b2, rt1.c3)) IS FALSE) ASC, CASE ((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))  WHEN TRIM(DISTINCT rt0.c0, rt0.c1) THEN rt0.c1 COLLATE NOCASE ELSE rt1.c3 END;SELECT vt0.c0 FROM vt1, vt0 WHERE ((((((((('5{g,%')AND(0.16928796430424076)))OR(x'ce81200e')))OR(NULL)))OR(((0.7961862734483488) NOT BETWEEN (x'') AND (0.8745738856868841))))) GROUP BY CAST(((rt0.c1) NOT BETWEEN (rt1.c0) AND (0.7021666982141503)) AS TEXT);SELECT DISTINCT ((((((rt1.c2)AND(rt0.c0)))AND(rt0.c2))) IS FALSE) FROM rt1, rt0 WHERE (x'd003') ORDER BY (+ (((rt1.c2)%(rt1.c3)))) DESC, ((1531414096)%((rt1.c1 IN ())))  NULLS LAST, (~ (((rt1.c2)IS NOT(rt1.c3))))  NULLS FIRST LIMIT 1994828290; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)>=(rt0.c1 COLLATE BINARY)) FROM vt1, vt0, rt1, rt0 WHERE ((((NULL) NOT BETWEEN ('>%v5O''gA') AND (x'')) IN ())); -- 0ms;
SELECT ALL x'', ((((((((NULL)OR((~ (rt0.c1)))))OR((vt1.c0 IN ()))))OR((rt1.c0 IN ()))))AND((((('-0.0')OR(rt0.c0)))AND(vt0.c0)))), (+ ((rt1.c0 IN (rt1.c2)))) FROM vt0, vt1 ORDER BY (((rt0.c0)) NOT BETWEEN ((rt1.c2 COLLATE RTRIM)) AND (((rt1.c0 IN (rt0.c1, rt0.c1)))));SELECT DISTINCT ((TOTAL(rt0.c1))<(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c0)))), CASE COUNT(rt0.c1)  WHEN ((rt0.c0) NOT NULL) THEN ((rt1.c1)|(rt1.c0)) WHEN CAST(rt0.c2 AS TEXT) THEN rt1.c1 WHEN (((rt0.c1, rt1.c3, rt0.c1))>((vt1.c0, rt1.c1, rt0.c0))) THEN (rt1.c1 IN ()) ELSE (((vt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) END, ((((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)))GLOB(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c3 END)) FROM vt0, rt1, rt0, vt1 WHERE (UNLIKELY(DISTINCT (0.6081326465080835 IN ()))); -- 0ms;
SELECT DISTINCT ((((TRIM(rt0.c1))AND(AVG(rt0.c0))))OR(vt0.c0)) FROM rt1 WHERE (NULL);SELECT DISTINCT SQLITE_VERSION() FROM vt0 WHERE (json_extract((('1058343564') NOT NULL), CAST(0.9254609295108727 AS BLOB), (((x'')) BETWEEN (('''뚢')) AND (('282341516'))), (0X143aa636 IN ())));SELECT DISTINCT ((((rt1.c0, 'UZY~5K4}C', rt1.c0))<=((rt1.c1, vt1.c0, vt1.c0))) IN ((- (rt0.c2)))), -2094400423, IFNULL(DISTINCT rt0.c0, rt0.c0) COLLATE BINARY FROM vt0, rt1, vt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c3 FROM vt1, rt0;SELECT DISTINCT COUNT(*) OVER () FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON x'' FULL OUTER JOIN vt1 ON rt1.c3 LIMIT 128771899; -- 0ms;
SELECT DISTINCT (((((((rt0.c1, rt0.c1, vt0.c0))!=((rt1.c3, rt1.c2, rt1.c3))))AND((x'' IN ()))))AND(((rt1.c0)IS(vt1.c0)))) FROM rt1, vt0, rt0 FULL OUTER JOIN vt1 ON NULL; -- 0ms;
SELECT DISTINCT CASE (rt0.c1 IN ())  WHEN ABS(vt1.c0) THEN TOTAL(rt0.c2) ELSE json_array_length(rt0.c1, vt0.c0) END FROM vt0, rt0, vt1, rt1 WHERE (((((0X62f22aec) BETWEEN (x'') AND (x'8c97')))>((x'5ad5' IN ())))) GROUP BY (CAST(rt0.c0 AS REAL) IN ()); -- 0ms;
SELECT ALL (((x'', TRIM(vt0.c0), CAST(rt1.c2 AS REAL)))<>((vt0.c0, MIN(x''), (~ (rt1.c2))))) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT CAST(((((0.08151352713064142)OR(rt0.c2)))OR(NULL)) AS NUMERIC) FROM vt0, rt0 LIMIT 128771899; -- 0ms;
SELECT rt0.c1 FROM rt1, vt1 NOT INDEXED, vt0 WHERE (((0.7505700601036931 COLLATE NOCASE) NOT NULL));SELECT DISTINCT CASE ((rt0.c1) BETWEEN (vt1.c0) AND (rt1.c1))  WHEN ((vt0.c0)>=(rt1.c1)) THEN CASE vt1.c0  WHEN rt1.c3 THEN rt1.c3 END END, ((CAST(rt0.c2 AS NUMERIC)) IS FALSE), ((((rt1.c0)%(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c0))) AND (COUNT(vt0.c0))) FROM rt0, vt1;SELECT DISTINCT LAG(((((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN '3%S<\r&' WHEN rt1.c3 THEN rt0.c2 ELSE '891708472' END)OR(((((((((rt1.c1)OR(rt1.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt1.c0)))))OR(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c1)))), ((((0.7379650627193882)OR(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR(CAST(rt1.c0 AS NUMERIC))), (((((vt1.c0)+(rt1.c3))))<=((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)))))) OVER () FROM rt0, vt0, vt1, rt1; -- 0ms;
SELECT CASE WHEN CASE rt0.c1  WHEN rt1.c3 THEN rt0.c1 ELSE rt1.c2 END THEN ((rt0.c1)/(rt0.c1)) ELSE MIN(rt1.c3) END, ((ABS(DISTINCT vt0.c0)) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(rt1.c2))) AND (LOWER(vt1.c0))), ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) BETWEEN ('0.6802135959390373') AND (x'')) FROM rt0 WHERE ((((('N6')&(0.7856772457932145)))+((~ (-1533969911)))));SELECT ALL RANK() OVER ( PARTITION BY CAST(CASE vt0.c0  WHEN 0.5472115461110114 THEN rt0.c2 ELSE rt1.c1 END AS REAL), CAST((rt0.c2 IN (rt0.c1)) AS INTEGER), '<죰㫝Oc5kb', (((((vt0.c0))<=((rt0.c1)))) NOTNULL)), ((((rt0.c2) IS TRUE)) NOTNULL), (((rt1.c0)) NOT BETWEEN ((((vt0.c0)GLOB(rt1.c1)))) AND ((rt1.c1))) FROM vt0, vt1 WHERE (CAST(((NULL)==(NULL)) AS BLOB));SELECT (((rt1.c3)||(rt0.c0)) IN (((rt1.c2)<>(x'')), CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END)) FROM rt1, vt0, rt0 WHERE (((1470942049)<(x'5bdf' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CASE ((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c2))  WHEN ((((((((rt0.c1)AND(rt0.c2)))AND(vt1.c0)))OR(0.77553492992627)))OR(vt0.c0)) THEN (((rt1.c2, rt1.c0, rt0.c2)) NOT BETWEEN ((rt1.c2, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c0, rt1.c3))) END FROM vt0, vt1, rt1 WHERE (CASE ((((((((((((0.6817220709690346)OR(NULL)))AND('M呄f^Ab1*')))AND(NULL)))OR(x'')))OR('0.6716951718287186')))AND(0.3697940299958755))  WHEN ((NULL)-(NULL)) THEN ((NULL) NOT BETWEEN (NULL) AND (0.06387939666591436)) END) GROUP BY ((((((rt0.c2) IS FALSE))AND(((rt1.c0) IS FALSE))))OR(((vt1.c0) BETWEEN (rt0.c0) AND ('1660037868'))));SELECT COUNT(((rt1.c2)AND(rt0.c0))) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ABS((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c1)))) FROM rt1, vt0, rt0, vt1 WHERE ((('&(u%' COLLATE BINARY)<(((x'')AND(''))))); -- 0ms;
SELECT (((((((rt0.c0)OR('0.29346630836387844')))AND(rt1.c3))))=((vt1.c0))) FROM vt1, vt0 WHERE ((((1962270947))==(('-831693316'))) COLLATE NOCASE) ORDER BY (NOT (((rt1.c0)!=(rt1.c1)))) DESC  NULLS LAST, (- ((~ (vt1.c0))));SELECT DISTINCT vt0.c0 FROM vt0, rt0, rt1, vt1 WHERE (LOWER(((NULL)AND('\rfW')))); -- 0ms;
SELECT DISTINCT CASE WHEN (- (vt0.c0)) THEN ((rt0.c2) NOTNULL) END FROM vt1, vt0, rt1, rt0 WHERE (('&(u%' COLLATE BINARY IN (((']c\')>=(0.6817220709690346))))) GROUP BY (0.35327399555360417 IN (rt0.c1)) HAVING json_quote(COUNT(*)); -- 0ms;
SELECT rt0.c1 FROM vt0, rt0, vt1, rt1 WHERE ((((NULL)) BETWEEN ((CAST(NULL AS BLOB))) AND (((~ (x'')))))) ORDER BY (((rt1.c2 IN (rt1.c1))) IS TRUE) ASC  NULLS FIRST, CAST(CAST(vt0.c0 AS REAL) AS INTEGER); -- 1ms;
SELECT DISTINCT ((((rt0.c2) NOTNULL)) ISNULL) FROM vt1, vt0 WHERE (((((('', NULL, -1057757671))=((-2044590936, 0.4598456352677299, -1.802353356E9)))) BETWEEN (((0Xffffffffff7c744d) NOT NULL)) AND ((- ('|#?㻼P1')))));SELECT DISTINCT ((((rt1.c1) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (rt0.c1)), COUNT(((vt0.c0)LIKE(rt1.c3))) OVER (), (((rt1.c2) IS TRUE) IN ()) FROM vt1 WHERE (-83227045);SELECT ALL NULL, (~ (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c1 END)), (CASE WHEN NULL THEN rt1.c0 WHEN vt1.c0 THEN x'' WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c3 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE rt1.c3 END IN ()) FROM vt1, rt0, rt1 LIMIT -386886266; -- 0ms;
SELECT DISTINCT vt1.c0 FROM rt1, rt0 WHERE (CASE WHEN NULL COLLATE RTRIM THEN CAST(NULL AS REAL) END);SELECT ALL (((rt0.c2, rt1.c0, rt0.c2)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)), ((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((x''))))) AND ((((rt1.c2) IS FALSE), ((((((((vt1.c0)OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c3)))OR(vt1.c0)), rt1.c0 COLLATE NOCASE))), (NOT (((rt0.c0)GLOB(vt0.c0)))), ((SUM(''))=(((rt1.c3) NOTNULL))) FROM vt0, vt1, rt1 GROUP BY ((((((((((rt0.c0)AND(rt1.c0)))AND(rt1.c3)))AND(rt0.c2)))AND(vt1.c0))) BETWEEN (CASE rt1.c3  WHEN rt0.c2 THEN vt1.c0 ELSE vt0.c0 END) AND (json_patch(rt1.c3, vt0.c0))) HAVING (((vt1.c0))<>((rt1.c0))) COLLATE BINARY;SELECT DISTINCT (((((rt0.c2)<=(rt1.c1)), ((('0.35327399555360417')) BETWEEN ((vt0.c0)) AND ((rt0.c0))), 0.35164578023674997, ((rt0.c0)<<(rt1.c1)), (((rt1.c1))!=((rt0.c0)))))<((((((vt1.c0)OR(rt1.c1)))AND('0.5467825472698732')), ((((((((rt1.c0)AND(rt0.c0)))AND(rt0.c2)))OR(rt1.c3)))AND(rt0.c1)), (((vt1.c0))=((vt0.c0))), ((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)), (rt0.c2 IN ())))) FROM vt1, vt0 WHERE (((('-2040662215')+(x'bd74d905')) IN ()));SELECT DISTINCT CAST(((rt1.c2) ISNULL) AS REAL), SUM(CAST(rt0.c0 AS TEXT)), ((0.46578342005062134)||(vt0.c0 COLLATE BINARY)), ((((rt0.c0) NOT BETWEEN (rt1.c1) AND (NULL))) BETWEEN (((vt1.c0) ISNULL)) AND ((((vt1.c0))>=((rt0.c2))))), (((NULL, ((rt1.c1)IS(vt0.c0)), (((rt0.c1, rt1.c2, rt1.c0))<>((rt0.c0, rt1.c3, vt1.c0)))))!=((((rt0.c2)==(rt0.c2)), (('2082927656') ISNULL), ((rt1.c1)OR(rt1.c0))))) FROM vt1, vt0, rt0;SELECT ALL (('') NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CASE rt1.c1  WHEN rt1.c1 THEN NULL END)) FROM vt1, rt1, vt0, rt0 LIMIT 1062756398; -- 0ms;
SELECT ALL ((((rt1.c1) IS TRUE)) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (NULL)) FROM rt1, rt0, vt1; -- 0ms;
SELECT ALL CAST(((NULL) IS FALSE) AS INTEGER), (- (CAST(rt0.c1 AS INTEGER))), ((CASE rt0.c1  WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) IS FALSE) FROM vt1, rt1, rt0, vt0 LIMIT 1123823279 OFFSET 1404257153; -- 1ms;
SELECT DISTINCT (rt0.c0 IN ()) FROM vt1, rt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c3)*(vt1.c0))) NOT BETWEEN (((rt1.c2)|(rt0.c0))) AND ((((rt1.c2))<=((vt0.c0))))) FROM rt0 WHERE (x'94fe');SELECT DISTINCT CAST(rt0.c2 COLLATE BINARY AS TEXT) FROM vt0, rt0, vt1, rt1 WHERE (CASE WHEN NULL THEN x'' ELSE '' END COLLATE BINARY) LIMIT -488134034 OFFSET 1078937475; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(SQLITE_SOURCE_ID()) FROM vt0; -- 0ms;
SELECT DISTINCT (((((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c2)), CASE rt1.c3  WHEN rt1.c0 THEN vt0.c0 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 ELSE x'9ee0' END, rt0.c2))<=((AVG(vt1.c0), LIKELY(rt1.c1), NULL COLLATE NOCASE))) FROM vt0 NOT INDEXED, rt0, rt1, vt1; -- 0ms;
SELECT DISTINCT ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT BETWEEN ((~ (rt1.c1))) AND (rt1.c0)), ((((rt0.c1) NOT NULL))<<(rt0.c0)), ((CASE 0.3697940299958755  WHEN rt0.c2 THEN vt1.c0 END)<=(((0.019559964463782054)GLOB(rt0.c1)))) FROM vt0, vt1, rt1;SELECT (((rt0.c2, rt0.c1, rt1.c2)) NOT BETWEEN (((~ (rt0.c2)), MIN(vt1.c0), TRIM(DISTINCT rt1.c2))) AND ((CAST(rt1.c0 AS REAL), rt1.c0 COLLATE NOCASE, 0.5080832661449085))) FROM rt0 WHERE (((('DzC', 0xffffffffdf9a6c28, NULL)) NOT BETWEEN (((((0.4598456352677299, 0.35327399555360417, '1917438968'))<>(('0.7505700601036931', '1062756398', NULL))), CASE WHEN x'4e0c' THEN 0.2762517085181929 END, (('TRUE')+('0.7856772457932145')))) AND ((((NULL)>>('0')), ((-1291897226)+(0.23811472142551393)), (((x'')) NOT BETWEEN (('	H')) AND (('')))))));SELECT ALL (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))))OR(CASE rt0.c2  WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt0.c0 END)) FROM rt1, vt1, rt0 WHERE (((((0.6624857456297762)&(-2141695561))) NOT NULL)); -- 0ms;
SELECT ALL ((rt0.c1) IS TRUE) FROM rt0, vt1, vt0, rt1; -- 0ms;
SELECT CASE ((((((((rt0.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(vt0.c0))  WHEN CAST(rt1.c1 AS TEXT) THEN TOTAL_CHANGES() WHEN DATE(vt0.c0, 0.10977867334789337, rt0.c2) THEN ((vt1.c0)||(rt1.c2)) WHEN rt0.c1 COLLATE NOCASE THEN LOWER(DISTINCT 0.9501041839080053) END FROM vt0, rt0;SELECT DISTINCT ((((((0.8635108039179292))<>((rt0.c0))), COUNT(*), rt1.c0 COLLATE NOCASE))<=((rt0.c1, ((vt1.c0) NOT NULL), rt0.c2))) FROM vt0, vt1, rt0, rt1; -- 1ms;
SELECT DISTINCT NTILE(((~ (rt1.c0)) IN (CASE WHEN rt1.c3 THEN vt1.c0 END, 0.16845593308289653))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM vt1 CROSS JOIN rt0 ON '198802139' LEFT OUTER JOIN rt1 ON ROUND(((rt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)), rt0.c0 COLLATE BINARY) FULL OUTER JOIN vt0 ON CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) AS NUMERIC); -- 0ms;
SELECT NULL COLLATE RTRIM, ((GLOB(vt1.c0, rt0.c1))|(rt1.c3 COLLATE RTRIM)), rt1.c2 FROM rt0, rt1, vt0 WHERE (((('-687101024')IS NOT('')) IN ()));SELECT ALL SUM(((vt1.c0)>=(vt1.c0))) FROM rt1, vt1, rt0, vt0; -- 0ms;
SELECT TOTAL(((rt1.c3) IS FALSE)) OVER (), (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN '-1406042814' THEN rt1.c1 WHEN x'da6e' THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c2 END IN ()), (((rt0.c1)) BETWEEN ((0.38929748194966685)) AND ((CASE WHEN rt0.c1 THEN 1640678103 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt1.c1 END))) FROM rt0, vt0;SELECT DISTINCT (NOT (((((rt1.c0)AND(rt1.c3)))AND(rt0.c0)))), ((GROUP_CONCAT(rt1.c2))>>(CAST(rt1.c3 AS INTEGER))), (CAST(rt0.c2 AS TEXT) IN ()) FROM rt1, vt0 WHERE (((x'97dd')%(NULL)) COLLATE RTRIM);SELECT DISTINCT (rt1.c0 IN (((rt1.c2)GLOB(vt0.c0)), CASE rt1.c2  WHEN vt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c2 WHEN NULL THEN rt1.c0 END)), (((rt1.c0)) BETWEEN ((x'')) AND (((NULL IN ())))), DATE(LIKELY(rt1.c2), MAX(vt1.c0), rt1.c0 COLLATE RTRIM) FROM vt0, rt0;SELECT ((((rt1.c3)==(rt1.c0)))*(((rt0.c2) BETWEEN (rt1.c0) AND (vt0.c0)))) FROM rt1, rt0, vt0 WHERE ('1965985692'); -- 0ms;
SELECT ALL (((vt0.c0 IN (rt0.c0))) IS TRUE), (+ (CAST(rt0.c2 AS REAL))), 0.6656830616570278 FROM rt0, vt1, rt1 WHERE (((((x'1cd3') IS TRUE)) NOT BETWEEN (CAST(NULL AS REAL)) AND (((0.9850208322448732) IS FALSE))));SELECT DISTINCT ((vt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))) AND ((('') BETWEEN (rt1.c1) AND (rt0.c2)))) FROM vt1, rt1, rt0;SELECT DISTINCT ((((vt0.c0)!=(rt1.c2))) BETWEEN (CAST(rt1.c1 AS NUMERIC)) AND (((((rt0.c2)OR(rt1.c2)))AND(vt1.c0)))) FROM rt0, vt1, vt0 WHERE (((((CAST(0.3039091086071133 AS INTEGER))OR(0.1148703038680634 COLLATE RTRIM)))AND(CASE 0.4626605326998362  WHEN 0.0 THEN '-83227045' ELSE '746949739' END)));SELECT DISTINCT (rt0.c0 IN ()) FROM rt0, vt1, rt1 WHERE (((((((((((NULL) NOT BETWEEN (NULL) AND (NULL)))AND(((((((((x'')OR('\r+s^h/')))AND('/~\r')))AND(0.7435910687834831)))AND(1.110064608E9)))))OR(CAST(NULL AS REAL))))OR(CASE x''  WHEN '333688862' THEN 0.3467927709167502 WHEN 337206683 THEN x'1afa' WHEN '-1869245752' THEN NULL END)))OR(((((NULL)AND(0X7bbe0715)))AND(x''))))); -- 1ms;
SELECT (((((rt1.c3) BETWEEN (rt0.c2) AND (rt0.c2))))>=((((rt1.c1) NOT NULL)))), (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)) IN ()), MIN((((rt1.c2))=((rt0.c1)))) FROM vt1, rt1, vt0, rt0 WHERE (((((('2005010461')) NOT BETWEEN (('1614705642')) AND ((x'373a')))) ISNULL)) ORDER BY CASE WHEN ((((rt1.c2)AND(rt0.c1)))AND(rt1.c3)) THEN CASE WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c0 END WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)) THEN (rt1.c3 IN (rt0.c1)) WHEN CAST(x'562d' AS INTEGER) THEN json_extract(rt1.c2, 1.54961532E8, vt0.c0, rt1.c2) ELSE (('Wt') BETWEEN (vt1.c0) AND (rt1.c3)) END DESC  NULLS FIRST; -- 0ms;
SELECT ((((rt1.c0)!=('Q1&j7SX')))-((rt1.c2 IN ()))) FROM vt1;SELECT DISTINCT '-1270697691', CASE WHEN (rt1.c1 IN ()) THEN UPPER(rt1.c2) WHEN ((('-687101024', rt1.c2, vt0.c0))=((rt1.c2, rt1.c3, rt1.c3))) THEN TOTAL(rt1.c2) WHEN rt0.c0 THEN (rt0.c0 IN (vt1.c0)) ELSE rt1.c1 END, ((((0.9501041839080053) ISNULL)) NOT NULL) FROM vt0, rt0 WHERE (((((NULL) IS FALSE)) NOTNULL)) GROUP BY ((((rt0.c1)>(vt0.c0))) NOT BETWEEN (((rt1.c3)>(rt1.c2))) AND (rt0.c2 COLLATE NOCASE));SELECT ALL (+ ((NOT (rt0.c2)))) FROM vt0, vt1 WHERE ((~ ((- (NULL))))) GROUP BY (+ ((((vt0.c0))<((rt0.c2)))));SELECT CASE WHEN rt1.c2 THEN rt0.c0 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN vt1.c0 END COLLATE BINARY, (((-1609178958 COLLATE RTRIM))<=((((rt1.c0)%(rt1.c2))))), ((((((-1034187762)<=(rt1.c2)))AND(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN x'' WHEN rt1.c3 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c2 END)))OR(rt0.c2 COLLATE NOCASE)) FROM rt0, vt0, vt1, rt1; -- 0ms;
SELECT DISTINCT (((('-1340263259')AND((~ (rt1.c2)))))AND(vt0.c0)) FROM rt1, vt1 WHERE (((((NULL)-(NULL)))OR((('qd^w#\nr|')<('-773217104'))))) LIMIT 751463313 OFFSET 1857118136;SELECT DISTINCT ((MIN(rt1.c1, rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((x'') NOTNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c0)))), LEAD('891708472', ((rt1.c2) IS TRUE) COLLATE NOCASE, CAST(((((rt1.c3)AND(rt0.c2)))AND(rt0.c1)) AS TEXT)) OVER (), LIKELIHOOD(DISTINCT vt0.c0, 0.12442214834041454) COLLATE RTRIM FROM rt1, vt1, rt0, vt0 WHERE ('1513094337'); -- 0ms;
SELECT (- (((vt0.c0)GLOB(rt1.c2)))) FROM vt1, rt1, rt0;SELECT ALL ((rt1.c2) IS FALSE) FROM rt0, vt1, rt1, vt0 WHERE ((('P.E渃Q')==((((3.596579038496404E18)) BETWEEN (('^i')) AND ((-42901318)))))); -- 0ms;
SELECT DISTINCT (- ((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c3))))) FROM rt0, vt1, vt0;SELECT ALL (MIN(rt0.c2) IN ()) FROM rt1, rt0, vt0 WHERE (LTRIM(((NULL)OR(x'')), CASE WHEN x'43c4' THEN NULL END)); -- 0ms;
SELECT DISTINCT (~ ((((rt1.c3, rt0.c0, vt1.c0)) BETWEEN ((rt1.c2, rt0.c2, rt1.c1)) AND ((rt0.c2, rt0.c1, rt0.c1))))), (+ (COUNT(*))), CASE ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3))  WHEN CASE WHEN rt0.c0 THEN rt1.c3 ELSE vt1.c0 END THEN 0.23190204077765575 WHEN ((((rt1.c2)AND(rt0.c0)))OR(rt0.c1)) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt0.c1)) WHEN ((rt1.c2)&(rt0.c0)) THEN CASE vt1.c0  WHEN rt0.c0 THEN rt1.c1 END END, CAST((NOT (rt0.c0)) AS TEXT), rt1.c2, rt1.c0, ((((((rt1.c1) NOT NULL))AND(COUNT(rt1.c2))))OR(CASE rt0.c0  WHEN rt1.c3 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c0 ELSE vt0.c0 END)) FROM vt0, rt0 LIMIT 1872438486 OFFSET 452296913;SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN ('112078695') AND (((rt1.c1) IS FALSE))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT '0.7435910687834831' FROM vt0, rt1, rt0, vt1 GROUP BY ((((rt1.c0)==(rt0.c1)))<((NOT (rt1.c1)))); -- 0ms;
SELECT IFNULL(CASE WHEN rt0.c1 THEN rt1.c3 END, (((rt0.c0, vt1.c0, rt1.c2))==((rt0.c0, rt1.c1, rt0.c1)))) FROM vt1, vt0, rt1 WHERE (((((((((((((x'5704')AND(0Xffffffff8f8349da)))AND(NULL)))AND(-6.87101024E8)))OR(x'08403582')))OR(((x'') NOTNULL))))AND(0.17510326576314905 COLLATE BINARY)));SELECT DISTINCT COUNT(*) FROM rt1; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN (rt1.c2, vt1.c0)) AS INTEGER), DENSE_RANK() OVER (), TOTAL(((rt0.c2)LIKE(rt1.c0)) COLLATE BINARY) FROM vt1, rt0, rt1;SELECT DISTINCT ((rt0.c0)>=('T')) FROM rt1, rt0 WHERE (CAST(CAST(0.16845593308289653 AS NUMERIC) AS REAL)); -- 0ms;
SELECT DISTINCT ((((-1202066429 COLLATE BINARY)OR('')))OR((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt1.c0))))) FROM rt0, vt1, vt0 LIMIT -1565997652 OFFSET -1103705934;SELECT ALL ((((((((NULLIF(DISTINCT vt0.c0, rt0.c1))OR((('-83227045') BETWEEN (rt1.c3) AND ('~z]>')))))OR(((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))))AND(((vt1.c0)==(vt0.c0)))))OR((((rt1.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))))) FROM rt0, rt1, vt0, vt1 WHERE ((((~ (x'')))LIKE((((0.444685064478883))<>((x'')))))) UNION ALL SELECT DISTINCT ((((rt1.c2) BETWEEN (rt0.c0) AND (vt1.c0)))<=(COUNT(rt1.c1))) FROM rt0 NOT INDEXED, vt0 WHERE ((((0.9139096334457808))<((((x'')<(NULL))))));SELECT ((((rt1.c3)AND(((rt1.c3) IS FALSE))))AND(rt1.c0)), ((((rt0.c0)IS NOT(rt0.c0)))<=(CAST(rt0.c0 AS REAL))), ((((rt0.c0) IS TRUE)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c2 THEN vt1.c0 END) AND (SUM(rt1.c1))), (+ (COUNT(*))), LAST_VALUE(SQLITE_VERSION()) OVER () FROM vt0, rt1 WHERE (CAST(((0x1b1637c2)-('1B閆%慗CN')) AS NUMERIC));SELECT ALL ((('f4w)0W')||('-1154427003')) IN (CASE rt1.c0  WHEN vt1.c0 THEN vt0.c0 END, rt1.c3 COLLATE BINARY)) FROM vt0, vt1 UNION SELECT DISTINCT ((((vt1.c0) NOT NULL))>>(SUM(rt0.c1))) FROM vt0, rt1, vt1 WHERE (CASE WHEN CAST('1962270947' AS NUMERIC) THEN ((0.23230930247076165)%(0.9260318455000156)) WHEN (0.444685064478883 IN ()) THEN ((NULL)-(x'a8de')) WHEN ((0.8687791271338672) ISNULL) THEN CASE WHEN x'' THEN -1185664662 ELSE 0.5699327152658991 END END) ORDER BY rt1.c2 DESC;SELECT DISTINCT ((((((rt1.c2) NOTNULL))OR(INSTR(vt1.c0, rt1.c1))))OR(COUNT(rt1.c2))) FROM vt0, rt0, rt1, vt1 WHERE ((- ((NULL IN ())))); -- 0ms;
SELECT LEAD((+ (rt1.c1)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)*((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c1))))), rt0.c2) OVER (), LAG(CASE ((rt1.c1)AND(rt1.c0))  WHEN LIKELIHOOD(DISTINCT rt1.c0, 0.9513723820227555) THEN CASE WHEN rt1.c2 THEN rt0.c0 ELSE vt1.c0 END END, ((((rt0.c0)=(rt1.c2))) ISNULL), (- (CAST(0.04654977214602163 AS NUMERIC)))) OVER (), (- (SUM(rt0.c2))) FROM rt0, vt1, vt0, rt1; -- 1ms;
SELECT DISTINCT (NOT (0.46578342005062134)), (+ (NULLIF(rt0.c1, rt1.c3))), ((rt0.c2 COLLATE RTRIM) NOT NULL) FROM rt1 WHERE (LENGTH(((0.4744910587818699)IS('4.jaG	6(C'))));SELECT DISTINCT (((((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt1.c0, rt1.c3, rt0.c0)) AND ((rt1.c3, vt0.c0, vt0.c0))))AND(((rt1.c1)OR(rt0.c1)))))OR(CAST(vt1.c0 AS REAL))) FROM vt1, rt0, vt0, rt1 WHERE ((0.3582547388537731 COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT AVG(INSTR(vt1.c0, rt0.c1)) FROM rt1, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0))) NOT BETWEEN (((x'acb2ae79')>>(-418557161))) AND ((~ (rt1.c0))));SELECT ALL (0.3231019889050021 IN ()), CASE (- (rt0.c2))  WHEN CASE rt1.c1  WHEN 'w' THEN rt1.c0 ELSE rt0.c0 END THEN LIKE(rt0.c2, vt1.c0) WHEN ((rt0.c2)IS NOT(vt1.c0)) THEN CASE rt1.c3  WHEN '-139702203' THEN rt0.c2 ELSE rt1.c2 END WHEN LIKELY(DISTINCT rt1.c1) THEN CASE x''  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END ELSE ((vt0.c0) NOT NULL) END, ((x'3b2d') BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c1))) AND (LIKELIHOOD(DISTINCT rt1.c3, 0.03476723791410852))) FROM vt0, vt1, rt1 GROUP BY CAST(x'' AS REAL) HAVING (~ (((((rt0.c2)OR('+Q3v~')))AND(rt0.c0)))) ORDER BY ((((((rt1.c1)OR(vt1.c0)))OR(vt0.c0))) IS TRUE) DESC  NULLS FIRST;SELECT DISTINCT (~ (((vt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c0)))) FROM rt1, vt1;SELECT DISTINCT ((((((rt1.c1)IS NOT(rt1.c0)))OR(((((rt1.c2)OR(vt1.c0)))OR(rt1.c3)))))AND(((((rt1.c1)OR(x'db69')))AND(rt1.c1)))) FROM rt0, vt0;SELECT DISTINCT (rt1.c3 COLLATE NOCASE IN ((+ ('-610065519')))), CAST((- (rt1.c1)) AS BLOB), (~ (ABS(vt0.c0))) FROM rt1, vt1, rt0, vt0; -- 0ms;
SELECT DISTINCT SUM(((vt1.c0)<=(rt1.c0))) OVER () FROM rt1;SELECT DISTINCT ((((vt1.c0 IN ())))<>((COALESCE(rt1.c1, vt0.c0)))) FROM rt0, rt1, vt1 WHERE (CASE (((NULL))!=(('1994828290')))  WHEN (('Q7') BETWEEN ('um') AND ('0.412092917110621')) THEN 0.48535814897510854 COLLATE NOCASE END) GROUP BY (((- (rt0.c2))) BETWEEN (((rt0.c2)%(vt0.c0))) AND ((NOT (rt1.c3))));SELECT ALL ((((((((((((rt0.c2)OR(rt1.c2)))OR(0.8193565735717776)))OR(vt0.c0)))AND(rt0.c1)))OR(CAST(NULL AS INTEGER))))OR(rt0.c1 COLLATE BINARY)) FROM rt1, vt1;SELECT DISTINCT (+ (COUNT(rt1.c1))) FROM rt0 LEFT OUTER JOIN vt0 ON (((((((vt0.c0)AND(rt0.c1)))AND(0.3455998185142063)), ((rt0.c2)==('gUy')), ((rt1.c2) NOT NULL)))!=((((((rt1.c2)AND(rt0.c2)))OR(vt1.c0)), ((vt1.c0)/(vt0.c0)), '')));SELECT rt0.c1, ((vt0.c0)>=((NOT (vt0.c0)))), (((rt0.c0)GLOB(rt1.c0)) IN ()) FROM vt1, rt1, vt0, rt0 ORDER BY (((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))-((rt1.c1 IN ()))) ASC, ((x'') BETWEEN (((((((((((((rt1.c3)AND(rt0.c1)))AND(vt0.c0)))AND('891708472')))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1))) AND (rt0.c1))  NULLS LAST; -- 0ms;
SELECT ALL ((CASE rt0.c1  WHEN rt1.c0 THEN rt1.c2 ELSE vt1.c0 END) ISNULL) FROM vt0, rt0, vt1 CROSS JOIN rt1 ON ('' IN ((((vt1.c0, vt0.c0, rt1.c3)) BETWEEN ((rt1.c1, rt1.c3, rt1.c1)) AND ((rt1.c3, rt1.c2, '-1280474340'))), (((rt1.c3, NULL, rt1.c0)) NOT BETWEEN ((rt0.c1, rt1.c1, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c3))))) LIMIT 1994828290; -- 0ms;
SELECT (((((rt1.c0 IN (vt1.c0)))AND(((-763461500)&(vt0.c0)))))AND((rt1.c3 IN ()))) FROM rt0, vt1, rt1 WHERE (((((NULL)LIKE(x'')))==(((x'')LIKE(0xffffffffb5dde20b))))); -- 1ms;
SELECT ALL CAST(((vt1.c0)AND(rt1.c2)) AS NUMERIC), ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((rt1.c3, rt1.c2, rt1.c3))) IN ()), CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)) THEN (vt0.c0 IN ()) END FROM vt1, rt1, vt0 GROUP BY ((((((((((vt0.c0)AND(rt1.c0)))OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1))) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt1.c2) ISNULL)));SELECT SUM(((vt0.c0)IS(rt1.c3))), ((((-1062537901)*(rt1.c0))) IS FALSE), ((CASE WHEN rt1.c1 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN x'' WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c3 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL), rt0.c2, (((rt1.c3)) NOT BETWEEN ((((rt0.c0)IS(rt1.c1)))) AND ((rt0.c2))) FROM rt1, rt0, vt1 WHERE (LOWER((('%?4241189T565-326-1847 z~<')||(NULL)))) LIMIT -1990717667 OFFSET 1965985692;SELECT ALL MIN((NOT ('''NC㻖搸{紲T')), rt1.c1) FROM vt1 WHERE (('''nc㻖搸{紲t' IN ()) COLLATE NOCASE);SELECT (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))IS NOT(CAST('8C' AS INTEGER))), ((rt0.c1 COLLATE BINARY) NOTNULL), ((((((((vt1.c0)OR(vt0.c0)))OR(rt1.c2)))OR(CAST(rt1.c3 AS TEXT))))OR((~ ('154961532')))) FROM vt1, rt0, rt1 WHERE (0.3231019889050021);SELECT ((((((((((((((((rt1.c1)OR(rt1.c2)))AND(vt1.c0)))AND(vt1.c0)))AND(rt1.c1)))AND(((rt0.c0)OR(rt1.c2)))))AND(((vt0.c0)<>(rt0.c1)))))OR(-1122930718)))AND((~ (vt0.c0)))) FROM rt1;SELECT DISTINCT (- ((~ (rt1.c0)))) FROM rt1 FULL OUTER JOIN vt0 ON (((((rt1.c2)AND(rt1.c1)))AND(rt1.c3)) IN ()) CROSS JOIN vt1 ON 0.34810905600360786; -- 0ms;
SELECT DISTINCT TOTAL(((rt1.c0)&(rt0.c0))) OVER (), (rt1.c0 COLLATE NOCASE IN (UNLIKELY(rt0.c2))), ((x'eea8') NOT BETWEEN (SUM('1965985692')) AND (((vt1.c0)>(rt1.c2)))) FROM rt0 NOT INDEXED, vt0 WHERE ((x'd3b4' COLLATE NOCASE IN ((((('333688862')OR('-552628538')))AND(NULL)), ((NULL)AND('-1730909165'))))) ORDER BY ((((rt0.c2) IS TRUE))|(((((vt1.c0)AND(rt1.c0)))AND(vt1.c0)))) DESC LIMIT -1869245752;SELECT DISTINCT SUM(((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2))) FROM rt0, vt0, vt1;SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c1 THEN rt1.c0 END) NOT NULL) FROM rt0, rt1, vt0, vt1 WHERE (CAST(CASE WHEN 0.08626173474368115 THEN 0.0 ELSE 6.16152852E8 END AS INTEGER)) LIMIT -2892460; -- 0ms;
SELECT ALL COALESCE(DISTINCT ((rt0.c1) NOT BETWEEN (rt1.c3) AND ('545808523')), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))), (+ (vt0.c0)) COLLATE BINARY, MAX(rt1.c0) FROM vt1, rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)) IN ()), (~ ((((rt1.c1, vt1.c0, rt0.c0))<((rt0.c1, rt1.c0, rt1.c2))))), (((rt1.c2, 0.3170784948871188, rt1.c2)) NOT BETWEEN (((((vt1.c0, rt1.c1, rt1.c0))>((rt1.c1, vt1.c0, rt0.c1))), CAST('198802139' AS TEXT), CAST(rt0.c1 AS TEXT))) AND ((CAST(rt0.c2 AS INTEGER), rt0.c0 COLLATE BINARY, ((((((((rt0.c0)OR('1401160744')))OR(rt0.c0)))OR(rt1.c1)))AND(rt0.c1))))) FROM rt1;SELECT ALL ((((rt1.c3)AND(rt1.c2)))AND(rt0.c0)) COLLATE RTRIM FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND(rt1.c3)))OR(vt0.c0)))>=('2076051221')) FROM vt0, vt1, rt1, rt0 WHERE ((((LIKELY(0.3379924830453739), CAST('' AS NUMERIC), CAST(x'9e1e' AS REAL)))>(('' COLLATE BINARY, ((NULL)>>(0X7de9cb8e)), ((7.9524095E8) NOT BETWEEN ('') AND (NULL)))))) GROUP BY ((LOWER(DISTINCT rt1.c0))/(((rt0.c0)>=(vt1.c0)))); -- 1ms;
SELECT ((UPPER(NULL))<(((rt1.c1) IS TRUE))) FROM rt1; -- 0ms;
SELECT DISTINCT NTILE((((('1199596673', rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c1, vt1.c0))) IN ())) OVER ( RANGE BETWEEN  CURRENT ROW AND (~ (DATE('-1541404426', vt1.c0, rt1.c1))) FOLLOWING EXCLUDE NO OTHERS), (+ ((rt0.c0 IN ()))), (rt1.c3 COLLATE NOCASE IN ()) FROM rt0, vt1, vt0 WHERE (CAST((0.31884406003987953 IN ('-2040662215')) AS NUMERIC));SELECT DISTINCT CAST(CAST(rt0.c0 AS BLOB) AS BLOB), (((~ (rt0.c0)))GLOB(((((rt1.c1)OR(rt0.c2)))AND(rt1.c0)))), ((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (COUNT(rt1.c0)) AND (CASE WHEN rt0.c1 THEN rt1.c1 END)) FROM vt0, rt0, rt1, vt1 WHERE ((- ('+Q3v~'))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)-(rt0.c0)) THEN vt0.c0 END FROM rt1 ORDER BY ((((((rt0.c1)>=(rt1.c2)))AND(vt1.c0 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE));SELECT DISTINCT TOTAL(CAST(rt1.c0 AS REAL)) FROM rt1 WHERE (CAST((- (0.48535814897510854)) AS INTEGER)); -- 0ms;
SELECT (((((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c3 THEN vt1.c0 ELSE rt0.c2 END, (rt1.c1 IN (rt1.c3, rt0.c0))))<((((vt1.c0)*(rt1.c2)), (NOT (vt0.c0)), CASE WHEN rt1.c0 THEN x'' WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c1 END))) FROM vt1, rt1, vt0;SELECT DISTINCT ((((((((CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END)AND(((((rt1.c2)AND(rt0.c0)))OR(vt0.c0)))))OR(((vt1.c0)>=(rt1.c1)))))AND(((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(AVG(rt1.c0))) FROM vt1, vt0 WHERE (UPPER(DISTINCT CASE NULL  WHEN x'' THEN '-2141695561' ELSE 1404257153 END));SELECT DISTINCT CAST(rt0.c0 AS INTEGER) FROM vt1 WHERE (((CAST('' AS REAL))<<(CASE NULL  WHEN 1.52818639E8 THEN '282341516' END)));SELECT DISTINCT (+ (CAST(x'a866' AS NUMERIC))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt1.c0)AND(vt0.c0)))AND(rt0.c0)) THEN ((((((((rt0.c1)AND(rt1.c3)))OR(NULL)))OR(rt0.c2)))OR(rt0.c2)) WHEN ((rt1.c1)|(rt1.c2)) THEN CASE rt1.c1  WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN vt0.c0 THEN 0.4841680914327311 ELSE NULL END WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)) THEN MIN(rt0.c0) END FROM rt0, vt1 WHERE (CAST(HEX(DISTINCT NULL) AS INTEGER));SELECT DISTINCT (+ ('-313109436')) FROM rt1, vt1; -- 0ms;
SELECT ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE NOCASE FROM rt1 WHERE (((CAST('hM䤂G' AS BLOB)) NOT NULL));SELECT DISTINCT CASE WHEN ((((rt1.c3)AND(rt1.c0)))AND(rt1.c2)) THEN rt0.c2 COLLATE BINARY ELSE (vt0.c0 IN (vt0.c0)) END FROM rt1;SELECT DISTINCT ((NULL)IS(((rt0.c0) IS TRUE))) FROM rt1 WHERE (((((0xf2ef366)IS(x'')))OR(NULL)));SELECT DISTINCT rt1.c3 FROM vt1, rt1, rt0, vt0 WHERE (CAST(((x'')GLOB('sVa*')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((SQLITE_COMPILEOPTION_USED(rt1.c3))=(((vt0.c0)&(0.23190204077765575)))), (((~ (vt1.c0)))GLOB(NULL)), ((((rt0.c0) NOT NULL))||(CAST(rt0.c2 AS INTEGER))) FROM vt1, rt0, rt1;SELECT SQLITE_SOURCE_ID(), '1172965134', (((CAST(rt1.c3 AS REAL)))>=((rt0.c0 COLLATE RTRIM))) FROM rt0, vt1 WHERE (((((((((((((x'b6e0c2f0')OR('-1938941070')))OR('0.16845593308289653')))AND(LAST_INSERT_ROWID())))AND(LIKELY(DISTINCT 0.27434805125162987))))OR(CAST(NULL AS INTEGER))))AND(((NULL) IS FALSE)))) ORDER BY (NOT (CASE WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST LIMIT 1470942049 OFFSET 1062756398;SELECT ALL (((((rt1.c2)AND(rt1.c3)))OR(vt0.c0)) IN ()) FROM vt1, rt0, rt1; -- 0ms;
SELECT TOTAL(((rt1.c3)%(rt0.c2))) FILTER(WHERE (('1914154813')<<(((rt1.c3)>(rt1.c0))))) OVER () FROM vt0, vt1, rt1 GROUP BY ((CAST(rt1.c0 AS INTEGER)) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (TYPEOF(DISTINCT x''))), LIKELIHOOD(((((rt0.c2)AND(vt0.c0)))AND(rt1.c2)), 0.9276995224051052), (((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c0)))) ISNULL) HAVING (((SUM('968561038'), ((NULL) ISNULL), ((NULL)OR(rt0.c2)), rt1.c0, (~ (rt0.c0))))>=((((vt1.c0)<=(vt1.c0)), (((rt1.c3))<((rt0.c1))), ((rt0.c1)>=(rt1.c3)), MIN(rt1.c3), rt1.c0)));SELECT DISTINCT ((rt1.c3 COLLATE NOCASE)<>(((vt0.c0)&(rt1.c2)))) FROM rt0, vt0, rt1, vt1 WHERE (CAST(((x'')AND(-1270697691)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((((((((vt1.c0 IN ()))OR(rt0.c1 COLLATE RTRIM)))OR(((vt0.c0)-(rt0.c1)))))OR((NOT (NULL)))))OR((- (rt0.c2)))), (((~ (rt1.c2))) NOT BETWEEN (LIKELY(DISTINCT rt0.c0)) AND ((rt1.c1 IN (rt0.c1)))), CAST((rt1.c3 IN (rt1.c3)) AS REAL) FROM vt0, rt1, rt0, vt1 WHERE (((((1660286075)<<(x'')))&(NULL))); -- 0ms;
SELECT ALL ((SUM(rt1.c1))|(NULL)) FROM vt0, rt0, rt1; -- 0ms;
SELECT LOWER(DISTINCT TRIM(rt1.c3, rt1.c0)) FROM vt1;SELECT LIKELIHOOD((((rt1.c2, rt0.c2, rt1.c0))<=((rt1.c2, vt0.c0, rt0.c1))), 0.6300211108612321), ((rt1.c3)<<(x'')) COLLATE NOCASE, ((((rt1.c3) IS TRUE))%(CHAR(rt1.c3))) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))) FROM rt0, vt0, vt1, rt1 WHERE (CASE '-B'  WHEN 0.6116734773848489 THEN NULL WHEN '0.23190204077765575' THEN '-328416450' WHEN '' THEN '1058343564' END COLLATE NOCASE); -- 1ms;
SELECT DISTINCT 0.5392870602465231 FROM vt0, rt0 INNER JOIN vt1 ON '2071361044'; -- 3ms;
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((~ (CAST(x'' AS BLOB)))); -- 1ms;
SELECT SUM((~ (rt1.c3)) COLLATE NOCASE), ((CAST(rt1.c2 AS REAL))*((rt1.c3 IN ()))), ((((rt1.c0)/(rt1.c1))) NOT NULL) FROM vt0, rt0 WHERE ((((('-40845172')) NOT BETWEEN ((x'')) AND ((0.9832255911526004))) IN (((NULL) NOTNULL))));SELECT CASE WHEN CAST(rt0.c2 AS INTEGER) THEN (('-538204930')IS(rt1.c3)) END FROM rt0, vt1, vt0, rt1 WHERE ((+ ((~ (0.5699327152658991))))) GROUP BY CASE WHEN rt0.c1 THEN json_type(rt1.c3) END; -- 0ms;
SELECT (NOT (vt0.c0 COLLATE NOCASE)), (((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))==(((rt1.c2)GLOB(rt0.c2)))), (+ (0Xfffffffff6587a4d)) FROM vt0, vt1, rt0;SELECT ALL (((rt1.c3 IN ())) ISNULL) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((vt1.c0)AND(rt1.c3)))OR(rt1.c2)))OR(rt0.c0)))AND(rt1.c1)))<>(rt1.c1 COLLATE BINARY)) FROM rt1, rt0, vt0 GROUP BY (- (SQLITE_COMPILEOPTION_USED(0.48535814897510854))), ((((rt0.c2)LIKE(rt1.c2))) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (rt1.c0)), rt1.c1 ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB), ((CAST(rt0.c1 AS NUMERIC)) BETWEEN (vt0.c0) AND (CAST(rt1.c1 AS REAL))) DESC  NULLS FIRST;SELECT GROUP_CONCAT(((rt1.c0)IS(rt1.c2))) OVER ( ORDER BY TYPEOF(rt1.c0 COLLATE BINARY), (((vt1.c0)) NOT BETWEEN (((((rt1.c1))<>((rt0.c0))))) AND (('131718550')))) FROM vt0, rt0, vt1, rt1; -- 1ms;
SELECT CAST(((rt0.c2)/(vt0.c0)) AS TEXT), ((((rt1.c1)*(rt0.c2)))&(((rt1.c2) NOT BETWEEN (0.4873851382364842) AND (rt0.c1)))), (((((rt1.c1, vt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c3, rt1.c2, x''))))>>(((rt1.c2) NOT BETWEEN (x'af76') AND (rt0.c2)))) FROM vt0 WHERE (CAST(CAST(-1202406015 AS REAL) AS BLOB));SELECT DISTINCT ((((NULL) ISNULL))IS NOT((('_^*3_o')AND(rt0.c1)))), RANK() OVER (), vt0.c0 FROM rt0, rt1, vt0, vt1 WHERE (CAST(((x'7127')>('1874714693')) AS REAL)); -- 1ms;
SELECT ALL ((rt1.c3) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE RTRIM FROM rt0, vt1, vt0, rt1 WHERE (CASE ('fR]u' IN ())  WHEN ('' IN ()) THEN ((0x4b5635f6) NOT BETWEEN ('H)䌪TZd') AND (NULL)) END) LIMIT -1772603052; -- 0ms;
SELECT DISTINCT ((rt1.c2)>>(0.08151352713064142)) FROM rt0, vt1;SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0))) NOT NULL), vt0.c0, ('k栐e#Lv' COLLATE BINARY IN ()) FROM rt0, rt1, vt0 WHERE (((('\rfW', -1.647891649E9, 0.801982919115604))=(('', 0.4830264401477301, NULL))) COLLATE NOCASE); -- 0ms;
SELECT ((COUNT(*)) ISNULL), COUNT(((rt0.c2)&(NULL))), 0.8118556154705521 FROM vt0, rt0, rt1, vt1; -- 0ms;
SELECT DISTINCT CAST(rt1.c3 AS TEXT), TRIM(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c2 END, COUNT(*)), ((((vt0.c0) IS FALSE)) NOTNULL) FROM vt1, rt0 WHERE (CAST(ABS(DISTINCT '339387958') AS TEXT));SELECT (((((((((rt1.c0 IN (rt1.c3)))AND(((rt0.c2) IS TRUE))))OR((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((vt1.c0))))))AND(((rt1.c3) ISNULL))))AND(CAST(rt0.c1 AS NUMERIC))), LIKELIHOOD(CASE rt0.c0  WHEN '1801666193' THEN rt1.c3 WHEN '0.19459254272182436' THEN 0x35d286d9 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END, 0.5283992931484816), ((rt0.c1 COLLATE NOCASE) IS FALSE) FROM rt0, vt0, rt1 WHERE (CASE WHEN (NOT (',_')) THEN (((('')OR('ሾA_Cz*H')))OR('iU')) WHEN ((NULL)*('[]')) THEN (0xfffffffffa593038 IN ('795240950', NULL)) WHEN '244566678' THEN (('1072341450') ISNULL) END) LIMIT 942513806;SELECT ALL (((0.9738538311049235 IN ())) NOT BETWEEN (((rt1.c0)>>(rt0.c2))) AND ((((rt0.c1, rt0.c1, vt1.c0)) BETWEEN ((vt1.c0, rt0.c1, rt0.c0)) AND ((rt1.c1, rt1.c2, '0.2762517085181929'))))) FROM rt1, rt0 WHERE (x'' COLLATE NOCASE);SELECT x'', CASE WHEN MIN(rt0.c2) THEN load_extension(vt1.c0, rt0.c2) WHEN (((rt1.c2))<=((vt1.c0))) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN HEX(x'') THEN (NULL IN (vt1.c0)) ELSE ((((((((rt1.c0)OR(vt1.c0)))OR(rt1.c1)))AND(rt1.c0)))AND(rt0.c0)) END, ((((rt1.c1)<(vt0.c0)))<=(((((rt1.c1)OR(vt0.c0)))AND(rt0.c0)))) FROM rt0, rt1 ORDER BY (TYPEOF(DISTINCT rt1.c3) IN ()) DESC;SELECT ((((rt1.c1)OR(NULLIF(rt1.c1, rt1.c0))))AND((~ (rt1.c1)))), CASE WHEN COUNT(vt1.c0) THEN vt0.c0 COLLATE NOCASE WHEN (rt0.c2 IN (vt0.c0, rt0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c3 THEN '\r(' WHEN rt0.c1 THEN rt1.c3 END THEN CASE rt1.c0  WHEN rt0.c1 THEN rt1.c0 END END, CASE WHEN (NOT (vt1.c0)) THEN rt1.c1 COLLATE BINARY WHEN GROUP_CONCAT(rt0.c2) THEN ((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0)) WHEN LOWER(DISTINCT rt0.c2) THEN UNLIKELY(DISTINCT rt0.c1) ELSE vt0.c0 COLLATE BINARY END FROM rt0, rt1;SELECT vt1.c0 FROM vt0, vt1, rt1, rt0 NOT INDEXED WHERE ((NOT (('2004928752' IN ())))) GROUP BY CAST(CAST(rt1.c1 AS INTEGER) AS REAL), ((LIKELY(rt1.c2)) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND ((((rt1.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))), (rt1.c2 IN ()) COLLATE RTRIM COLLATE BINARY ORDER BY (((rt1.c2)<=(vt0.c0)) IN ())  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ (COUNT(*))) FROM vt0, vt1, rt1, rt0 WHERE (CAST(((0.48535814897510854) NOTNULL) AS TEXT)); -- 0ms;
SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN 2076051221 ELSE rt0.c2 END)AND(((rt1.c3)IS(rt1.c3)))))OR(rt1.c1)) FROM rt0, vt0, rt1 GROUP BY (((rt1.c2) IS FALSE) IN ());SELECT ALL COUNT(*), ((((((((((((((vt0.c0)AND(rt0.c1)))OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c1)))AND(vt0.c0)))AND(rt1.c1)))/(vt0.c0)), GLOB(((vt0.c0)||(rt1.c3)), (rt1.c2 IN ())) FROM rt0, vt1, rt1;SELECT ((CASE vt1.c0  WHEN '-R' THEN rt1.c0 WHEN rt0.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c3 END)&((NOT (rt0.c1)))), ((CASE rt0.c2  WHEN '-549987945' THEN rt1.c2 END)||(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1)))), (('')/(rt0.c0 COLLATE NOCASE)) FROM vt0, rt1;SELECT DISTINCT TOTAL(NULL) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((rt1.c2) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (rt1.c0 COLLATE RTRIM)) FROM vt1, rt0 LIMIT -1802353356;SELECT DISTINCT (+ (((vt0.c0) ISNULL))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS TEXT))<<(CASE rt0.c1  WHEN x'' THEN 1.245647683E9 WHEN vt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN vt1.c0 END)) FROM vt0, rt1;SELECT ALL (((((vt0.c0)OR(vt0.c0)))OR(rt1.c1)) IN ()) FROM vt0; -- 0ms;
SELECT ALL ((((MIN(rt1.c1))AND(((rt0.c0)*(rt1.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) FROM rt1, vt0, vt1;SELECT ALL ((((rt1.c1)OR(rt1.c3))) IS TRUE) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((CAST(rt1.c1 AS NUMERIC))OR(x'69c31030')))OR(rt1.c0)), UNLIKELY((+ (rt1.c1))), ((((NULL))<=((vt1.c0))) IN ()) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c1, rt0.c0, rt1.c0)) BETWEEN (((('-358664153')<(rt1.c0)), CAST(rt0.c0 AS NUMERIC), COUNT(*))) AND ((SUBSTR(rt1.c3, rt1.c0), x'', ((rt1.c1) ISNULL)))) FROM vt0, rt1;SELECT DISTINCT (((- (vt1.c0)))GLOB((((rt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, NULL)) AND ((rt1.c1, 0.12489052330639583, rt1.c2))))) FROM vt1, vt0, rt0;SELECT ALL (((rt1.c3, rt0.c0, rt1.c0)) NOT BETWEEN ((0.5479758879566754, UNLIKELY(DISTINCT rt0.c0), ((0.3353161803207989)/(rt1.c3)))) AND ((((rt1.c2) IS FALSE), 1228495185 COLLATE RTRIM, rt1.c3 COLLATE NOCASE))) FROM vt1 NOT INDEXED, rt1;SELECT ALL ((CASE WHEN 0.05207829648462137 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN ((((vt1.c0, 0.7697584368390796, rt0.c0)) BETWEEN ((x'b52c', -358028087, rt1.c1)) AND ((vt0.c0, rt1.c3, rt1.c1)))) AND (rt0.c2)) FROM vt0;SELECT COUNT(*) OVER () FROM rt0, vt0 WHERE (CASE WHEN CAST(NULL AS NUMERIC) THEN CAST(',_' AS INTEGER) ELSE (((x''))<=((x''))) END); -- 0ms;
SELECT DISTINCT (((GROUP_CONCAT(rt0.c2)))<=((((vt0.c0)*(rt1.c3))))) FROM vt0 NATURAL JOIN rt0;SELECT ((ABS(DISTINCT rt0.c0)) IS TRUE) FROM rt0, vt1, rt1, vt0 WHERE (CASE (NULL IN ())  WHEN ((('weekday', '', x''))>((x'', '-h', NULL))) THEN ((0.2379549356138606) NOT BETWEEN (0.526810089461925) AND (x'')) END); -- 1ms;
SELECT DISTINCT (((~ (rt1.c3))) NOT BETWEEN (MAX('208270122', rt0.c0)) AND (UNLIKELY(rt0.c2))) FROM rt0, vt1;SELECT DISTINCT (((((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt1.c0)))OR(x'')))OR(rt0.c1)))OR(rt1.c3)))AND(rt1.c0)))AND(rt0.c2)) IN ()) FROM rt1; -- 1ms;
SELECT ALL rt0.c2 FROM vt1, rt1, vt0 GROUP BY rt1.c3 HAVING CASE WHEN AVG(rt0.c0) THEN (((vt0.c0))<>((rt1.c2))) ELSE COUNT(rt0.c1) END;SELECT DISTINCT (+ (((0.1847487377685555) BETWEEN (rt1.c1) AND (rt1.c1)))) FROM rt1, vt0, vt1, rt0 WHERE (load_extension(CASE WHEN '408148063' THEN '' ELSE x'8120' END)) GROUP BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((vt1.c0 COLLATE RTRIM))) HAVING (((NULL COLLATE BINARY))!=((COUNT(*)))); -- 1ms;
SELECT DISTINCT rt1.c0 FROM rt0 INNER JOIN vt0 ON ((((rt1.c3) NOTNULL)) ISNULL) RIGHT OUTER JOIN rt1 ON (((rt0.c0)|(rt1.c2)) IN ()) WHERE ((((NOT (0.8512671170618918))) BETWEEN ((((0.7000665028921634))<((x'')))) AND (((((0.7221757089486602)AND('500832123')))AND(''))))) ORDER BY ((((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))OR(CAST(vt1.c0 AS TEXT))))AND(CAST(rt0.c0 AS NUMERIC))) ASC;SELECT (~ (LOWER(DISTINCT rt0.c2))) FROM rt0, rt1 WHERE (CASE '>'  WHEN '1212993416' THEN '282341516' ELSE -2.141695561E9 END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((rt1.c3)AND(vt0.c0)))AND(rt1.c0)) COLLATE BINARY FROM rt1 WHERE (((((((((0.19156882913850592)OR(475138081)))AND(x'')))AND('oRTqRo')))AND('rq*꟧?')) COLLATE RTRIM);SELECT DISTINCT (rt1.c0 IN ()) FROM vt0, rt0, vt1 WHERE (((CAST(0.3155812384812484 AS BLOB)) ISNULL)); -- 0ms;
SELECT DISTINCT ((NULL)%(CASE '224584417'  WHEN rt1.c3 THEN rt0.c1 END)) FROM rt0, vt1, vt0, rt1 INTERSECT SELECT DISTINCT CAST(CASE WHEN rt1.c3 THEN rt1.c0 END AS REAL) FROM vt0;SELECT DISTINCT ((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(rt0.c2 COLLATE RTRIM)))AND((NOT (rt1.c2)))), CAST(LOWER(rt0.c0) AS TEXT), (((NOT (rt1.c2)))<=(ABS(rt1.c1))) FROM rt0 WHERE (CASE WHEN (('0.08247298046817086')+(-8.3227045E7)) THEN ((x'')AND(NULL)) WHEN (2.44566678E8 IN (NULL)) THEN ((0.2886599186161569) BETWEEN (0.2837651831497384) AND (NULL)) WHEN 'I' THEN ((x'') NOT BETWEEN ('-1609178958') AND (NULL)) END);SELECT DISTINCT COALESCE(DISTINCT ('B]' IN ()), rt0.c0 COLLATE BINARY, ((rt1.c0)AND(rt1.c1)), rt1.c3 COLLATE BINARY), ((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(NULL)))OR(rt1.c2)))*(((((rt1.c0)AND(rt0.c1)))OR(rt1.c1)))), CAST(((rt1.c2) ISNULL) AS NUMERIC) FROM rt1;SELECT DISTINCT (~ ((~ (rt0.c1)))) FROM rt0, vt0, vt1 WHERE (CASE ((0.14066817316614633)+(0.46809551868597776))  WHEN ((x'')GLOB('880731077')) THEN LIKELY(DISTINCT 0.22362100584159184) WHEN ((0.6403705872822167) NOT BETWEEN (NULL) AND (NULL)) THEN ('-953895262' IN ()) WHEN -46340639 COLLATE BINARY THEN (((NULL))<=((x''))) ELSE (('+Tcd') NOT BETWEEN (0X30c35fdb) AND ('21127226')) END); -- 0ms;
SELECT ALL (NOT (((((1003500961)OR(rt0.c0)))AND(vt0.c0)))) FROM rt0, vt1, vt0, rt1 WHERE (CAST(((x'')+('-1103705934')) AS TEXT)); -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN (((((vt0.c0, rt1.c2, x''))<=((vt0.c0, rt1.c3, rt1.c0))))) AND ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) FROM vt0, vt1;SELECT DISTINCT ((+ (vt0.c0)) IN ()) FROM vt0, vt1, rt0, rt1 WHERE ((((((NULL))==((NULL))))>=(x'5c5e' COLLATE NOCASE))) GROUP BY (TYPEOF(DISTINCT rt1.c1) IN ()), (~ (((rt0.c1) NOTNULL))), (- (rt1.c1)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (+ (rt0.c1 COLLATE RTRIM)) FROM rt0, vt0, rt1; -- 0ms;
SELECT ALL ((((COUNT(NULL))AND(((NULL)<=(rt1.c1)))))OR((- (rt1.c3)))) FROM rt0, vt0, rt1, vt1 WHERE (x'626f5dc8'); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((rt0.c0)=(rt1.c3))) FROM rt1, vt0;SELECT CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END COLLATE RTRIM FROM rt0 NATURAL JOIN vt0;SELECT DISTINCT TOTAL(TRIM(rt0.c0, vt0.c0)) OVER () FROM vt0;SELECT ALL COALESCE(CAST(NULL AS INTEGER), ((rt1.c2) NOTNULL)), -1846737637, (((CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 END))<((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c0))))), CAST((- (rt1.c2)) AS TEXT), CAST(CASE rt1.c1  WHEN rt1.c0 THEN vt1.c0 ELSE rt0.c2 END AS INTEGER) FROM rt0, vt0, rt1, vt1 GROUP BY (((((+ (rt0.c1)))OR(TYPEOF(DISTINCT '339387958'))))AND(CASE WHEN rt1.c2 THEN NULL ELSE vt0.c0 END)), TYPEOF('795240950'), ((((rt0.c0) IS TRUE))<(((('475138081')) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2))))) HAVING CAST(NULL AS INTEGER); -- 0ms;
SELECT DISTINCT ((((((rt1.c0)OR(rt0.c1)))AND(vt1.c0))) BETWEEN (MAX(rt0.c1)) AND (COUNT(*))), (((vt1.c0 IN ()))/(CAST(vt1.c0 AS REAL))), ((((((((((vt0.c0)OR(vt1.c0)))OR('')))OR(rt1.c0)))AND(vt0.c0)))+(CASE WHEN rt0.c1 THEN rt1.c0 END)) FROM vt1, rt1, rt0, vt0 ORDER BY (+ (((rt1.c0)<<(rt1.c1)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((COUNT(*))OR(((rt1.c0)>(rt1.c0)))) FROM vt0, rt1 WHERE (((CASE WHEN 0.886161577073616 THEN -1.39702203E8 ELSE 927756776 END)+(CASE 0.9912490660968999  WHEN -468450181 THEN x'' END))); -- 0ms;
SELECT DISTINCT 0.04654977214602163, ((((CASE WHEN rt1.c1 THEN '0.45853842360070884' WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN NULL END)OR(CASE vt1.c0  WHEN rt1.c2 THEN rt0.c0 END)))AND((rt1.c0 IN (rt0.c1, rt1.c0)))), ((((x'7bc3') NOT BETWEEN (rt1.c1) AND (rt1.c0)))IS(CAST(rt0.c0 AS REAL))) FROM vt1, vt0;SELECT DISTINCT GROUP_CONCAT(((vt0.c0) ISNULL)) FILTER(WHERE (~ ((rt0.c2 IN ())))) OVER (), NULL, ((((rt1.c2)<(rt1.c3)))||(CAST(rt1.c2 AS NUMERIC))) FROM vt1, rt0 WHERE ('87495916');SELECT ALL (((('-1731592944')*(rt0.c0)))=((((rt0.c1, vt0.c0, NULL)) BETWEEN ((rt1.c3, rt0.c0, rt1.c0)) AND ((rt0.c0, rt1.c2, rt0.c1))))) FROM vt1, rt0, rt1;SELECT DISTINCT ((rt0.c1)IS(rt1.c3)) COLLATE RTRIM FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))>>((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))), ((((((rt1.c1) IS FALSE))OR(vt1.c0 COLLATE NOCASE)))OR(COUNT(rt1.c3))), ((rt1.c1) BETWEEN (((rt1.c2)|(vt0.c0))) AND (json_array(rt1.c0, vt0.c0, '3596579038496404043', rt0.c1, rt0.c2, rt1.c2))) FROM rt1, rt0, vt0 GROUP BY ((0.6817220709690346)GLOB(json_array(vt1.c0, rt1.c1))) HAVING ((((rt0.c2) BETWEEN (0.4434022126733923) AND (rt0.c2))) NOT BETWEEN (((rt1.c3)>=(rt1.c0))) AND (vt1.c0));SELECT DISTINCT LIKELIHOOD(((rt1.c0)-(rt0.c1)), 0.9671977908660435) FROM rt1 WHERE ('HE	9');SELECT DISTINCT '-' COLLATE BINARY FROM vt1, rt0, rt1; -- 0ms;
SELECT LEAD((((((rt1.c0))>((rt0.c2)))) BETWEEN (vt0.c0) AND (IFNULL(rt1.c0, rt1.c3))), (rt1.c1 COLLATE BINARY IN ((+ (rt1.c2)))), (NOT (HEX(DISTINCT vt0.c0)))) OVER ( ROWS  UNBOUNDED PRECEDING), ((((((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)))AND(((rt1.c1)OR(vt0.c0)))))AND((- (rt1.c3)))), CASE WHEN rt1.c2 THEN vt1.c0 COLLATE BINARY WHEN ((x'') BETWEEN (vt1.c0) AND (rt0.c0)) THEN (((vt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, '-139702203', rt0.c1))) WHEN CAST(rt1.c1 AS BLOB) THEN rt0.c1 COLLATE NOCASE END FROM rt0, vt0 NOT INDEXED, rt1;SELECT DISTINCT -1416577594, CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c2 END THEN 0.1265505311178714 END, ((((rt0.c2 COLLATE NOCASE)OR(UPPER(rt0.c1))))OR((rt1.c1 IN (rt1.c0, rt1.c0)))) FROM vt1, rt1;SELECT DISTINCT (((vt1.c0) IS FALSE) IN ()) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c0)|(rt0.c0)) END FROM vt1, rt0 WHERE ((+ ((((NULL)) NOT BETWEEN (('1110064608')) AND ((0.3582547388537731))))));SELECT ALL ((((((((((rt1.c1)OR(vt0.c0)))AND(rt0.c0)))OR((- (rt1.c3)))))OR(rt0.c0)))AND(CASE rt1.c1  WHEN rt1.c0 THEN rt0.c2 END)) FROM vt0, rt1, rt0, vt1 WHERE (CASE WHEN '-706449474' THEN '333688862' WHEN 0.5099519190909215 THEN 2138662928 WHEN -231987873 THEN '0.9260318455000156' END COLLATE RTRIM); -- 1ms;
SELECT DISTINCT ROUND(CAST(rt1.c3 AS INTEGER), rt1.c0 COLLATE NOCASE), CASE (~ (rt1.c3))  WHEN LIKE(rt0.c0, rt1.c1) THEN (NOT ('')) WHEN MAX(rt0.c1) THEN ((rt1.c3) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN 0X5c742748 THEN SUM(rt1.c1) ELSE ((rt1.c2) NOT BETWEEN (0X491926e0) AND (vt1.c0)) END, SUM(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 WHEN x'' THEN rt1.c3 END) OVER () FROM rt1, vt1, vt0, rt0; -- 0ms;
SELECT NTH_VALUE(((((rt0.c1)AND(vt0.c0))) ISNULL), CASE WHEN CAST(rt0.c1 AS REAL) THEN LIKELIHOOD(DISTINCT vt1.c0, 0.12995038178245077) ELSE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END) OVER ( ORDER BY CASE (NOT (rt1.c1))  WHEN (rt0.c1 IN (rt1.c0, rt1.c3)) THEN CASE WHEN vt0.c0 THEN rt1.c2 END ELSE ((rt0.c0)<(rt1.c0)) END ASC  NULLS LAST ROWS  CURRENT ROW) FROM vt0, vt1, rt0 WHERE (CAST(CASE NULL  WHEN x'fed6d228' THEN x'a781' END AS BLOB)) GROUP BY (('') NOT NULL);SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2)OR(rt1.c1)))AND(rt1.c1)) IN ()), TOTAL(CAST(rt1.c1 AS REAL)) OVER (), (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((((rt0.c0)GLOB(rt1.c3)), ((rt1.c0)<<(rt0.c1)), ((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))) AND ((vt1.c0 COLLATE RTRIM, ((rt1.c3)!=(rt0.c0)), COUNT(*)))) FROM vt0, rt0, rt1, vt1 WHERE (((x'')IS NOT(NULL COLLATE NOCASE))); -- 1ms;
SELECT ABS(0.6094961791918567), ((((((((CAST(rt0.c0 AS BLOB))AND(AVG(rt1.c2))))OR(((rt1.c0)<>(rt0.c1)))))AND(((rt1.c3) NOTNULL))))OR((- (rt0.c2)))), (((rt1.c3 IN (rt1.c3, rt1.c2))) BETWEEN ('560022991') AND (((rt0.c0) IS TRUE))) FROM rt1 WHERE (((((0.17309104443312395)OR('128771899')))OR(3.33688862E8)) COLLATE BINARY) LIMIT -270615453;SELECT ALL SUM(CASE WHEN rt0.c1 THEN rt0.c1 END) OVER () FROM rt0, vt0, rt1, vt1 WHERE (TIME(CAST('' AS REAL), ((NULL) IS FALSE), LIKELIHOOD('-831693316', 0.7491219470403866))); -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c1 AS TEXT))OR(ABS(rt0.c0))))OR(TYPEOF(x''))) FROM vt1 WHERE (((((((0.24086370158390347)%(0.7046278222100911)))AND((~ (x'')))))OR((- (x''))))) GROUP BY (((x'' IN ())) NOT NULL), ((x'')IS NOT(CASE rt0.c0  WHEN vt0.c0 THEN rt1.c3 END)), rt0.c1 HAVING (NOT (CAST(rt1.c2 AS REAL)));SELECT DISTINCT (rt0.c1 IN ()) FROM vt1, rt1, vt0; -- 0ms;
SELECT (((rt0.c0 IN (rt0.c1))) IS FALSE) FROM vt0, rt1, rt0, vt1 WHERE (((NULL COLLATE BINARY) NOT BETWEEN (((-2.49258362E8)<=(x''))) AND (x''))) LIMIT -215642150 OFFSET -726623918; -- 0ms;
SELECT ALL ((0xffffffffeb25337e) ISNULL) FROM rt1, vt1, vt0, rt0 GROUP BY ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE), json_valid(CAST(rt1.c2 AS REAL)), CASE ((rt1.c3)LIKE(vt0.c0))  WHEN LIKELIHOOD(rt0.c0, 0.5742836237408436) THEN ((0.4276232468922714)<<(NULL)) WHEN IFNULL(DISTINCT rt1.c2, rt1.c3) THEN rt0.c1 COLLATE BINARY WHEN (vt1.c0 IN ()) THEN (rt0.c1 IN ()) ELSE ((rt0.c0) IS FALSE) END HAVING (((rt0.c1 IN ())) NOT BETWEEN ((rt1.c3 IN ())) AND (CAST(rt1.c2 AS INTEGER))); -- 0ms;
SELECT (~ (rt1.c3)) COLLATE RTRIM COLLATE NOCASE FROM vt1, rt1 WHERE ((~ (446495245)) COLLATE NOCASE); -- 0ms;
SELECT ALL NULL, ((((vt1.c0)>>('498887597')))<(((rt0.c2)GLOB(rt1.c0)))), (('-1457651723') NOT BETWEEN (((rt0.c0)%(vt1.c0))) AND (x'')) FROM rt1, vt0, rt0, vt1 WHERE (CAST(TRIM(0.4367463414202407) AS BLOB)); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c2) ISNULL) THEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) WHEN ((rt1.c1)>>(vt1.c0)) THEN '' COLLATE BINARY WHEN ((vt1.c0) NOTNULL) THEN TOTAL(rt0.c1) ELSE CASE WHEN 0.6081326465080835 THEN rt0.c0 END END, COUNT(vt0.c0) OVER ( ORDER BY (NOT (CAST(rt0.c2 AS TEXT))), (((((vt1.c0)OR(rt0.c2)))OR(rt0.c2)) IN ()) DESC), (((vt1.c0)) BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (0.14265104148018992))))) FROM rt0, vt1, rt1 WHERE ((((x'')) BETWEEN ((((x'e4a4') BETWEEN (x'') AND (NULL)))) AND ((CASE WHEN '' THEN ' Jt\' END))));SELECT vt0.c0 FROM rt0 GROUP BY (((2076051221 IN ())) IS FALSE), vt0.c0, (- (ABS(rt1.c0)));SELECT ALL (((0.35586647125386495)||(rt1.c2)) IN ()) FROM rt1; -- 0ms;
SELECT ALL CAST(((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c0)) AS TEXT), ((((rt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) NOTNULL), (((rt1.c3)) NOT BETWEEN ((((vt1.c0)OR(vt1.c0)))) AND ((244566678))) FROM rt1 NOT INDEXED, vt0, vt1, rt0; -- 0ms;
SELECT ALL (((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND (('-1802353356'))))<=((NOT (vt0.c0)))), (((0.7846710812723474)) NOT BETWEEN ((((rt1.c2) IS FALSE))) AND ((((rt0.c0)<>(vt0.c0))))), (('2116989588') NOT NULL), (((rt1.c2)) NOT BETWEEN ((rt1.c0 COLLATE NOCASE)) AND (((rt1.c0 IN ())))), ((HEX(rt0.c1))>=(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) FROM vt1, vt0;SELECT DISTINCT ((((rt1.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c1, rt1.c2, rt0.c0)) AND ((vt1.c0, x'30f7', x'', rt1.c0, rt0.c1))) IN (((rt1.c1) IS TRUE))) FROM rt1, vt0 WHERE ((((CASE WHEN x'' THEN NULL WHEN 'dD gO*0)+' THEN 0.7188632494411618 WHEN -1.141059954E9 THEN x'90e3' ELSE '472937558' END))<(((+ (x'3434'))))));SELECT DISTINCT GROUP_CONCAT((NOT (rt1.c2)) COLLATE BINARY) OVER () FROM vt1, rt0 WHERE (((((0xfffffffffc425547) BETWEEN ('er') AND ('373795108')))&((x'' IN ()))));SELECT DISTINCT (+ (((((rt1.c2)AND(rt0.c0)))AND(rt0.c0)))) FROM vt1, rt0, vt0, rt1 WHERE (CAST((((0.8149273687968345)) BETWEEN ((1058343564)) AND ((x''))) AS BLOB)); -- 0ms;
SELECT LIKE(vt1.c0 COLLATE RTRIM, x'', 'I'), ((((rt1.c2)+(rt0.c1)))IS((((rt1.c2, vt0.c0, rt0.c0, rt1.c2, rt1.c3, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c2, rt1.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c0, x'2612')) AND ((vt0.c0, rt1.c2, rt0.c2, vt1.c0, rt1.c1, rt0.c1, rt1.c2))))), ((((rt1.c0)>=(rt0.c1))) IS TRUE) FROM vt1, rt1 WHERE ((('-313109436' COLLATE NOCASE) NOT BETWEEN ((~ ('-1034187762'))) AND ('MQ''ipL')));SELECT ALL ((x'8d71')<<(0.4841680914327311)) FROM vt1 WHERE ((((((('4G%6Pw周')OR('')))AND(x'')))=(CAST('2076051221' AS INTEGER)))) ORDER BY INSTR(rt1.c1 COLLATE RTRIM, ((((((((rt1.c3)AND(vt0.c0)))AND(rt1.c0)))AND(rt1.c2)))AND(vt0.c0)));SELECT ALL (((((vt1.c0) BETWEEN (rt1.c2) AND (0.46408869358617233)), x'6477ae19', rt1.c3))!=(((((rt1.c0))!=((rt0.c1))), LOWER(DISTINCT -1189808390), CASE rt1.c0  WHEN rt0.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN '' THEN rt1.c0 ELSE '1931614539' END))) FROM rt1, vt0, vt1, rt0 WHERE (((((((((((-313109436)<>(0.23811472142551393)))AND((('-1704116484') IS FALSE))))AND(ABS(NULL))))OR((('C+Lc') NOT BETWEEN (x'') AND ('')))))OR(CAST(x'46ba' AS TEXT)))) GROUP BY TRIM(vt1.c0) COLLATE BINARY; -- 0ms;
SELECT load_extension(x'', rt1.c3), COUNT(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) OVER (), LTRIM(DATE(rt1.c3, rt0.c1, rt1.c3)) FROM vt1, rt1;SELECT ALL AVG((rt1.c0 IN ())), ((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE RTRIM, GROUP_CONCAT(((rt0.c1) NOT NULL)) FROM vt0 WHERE ((NOT (NULL COLLATE RTRIM))) GROUP BY (((rt1.c2)) BETWEEN ((NULL)) AND (((~ (vt0.c0)))));SELECT DISTINCT ((((((vt1.c0)AND(rt1.c1)))AND(rt0.c0))) NOT NULL) FROM vt0 WHERE (((((((0x4f99c234)OR(-1.541404426E9)))OR('')))AND((((0.5979064591562921))<=((NULL))))));SELECT CAST(CASE vt1.c0  WHEN rt1.c1 THEN NULL ELSE rt1.c0 END AS REAL), GROUP_CONCAT(-7.73217104E8), rt0.c1 FROM rt0, vt0, rt1;SELECT DISTINCT rt1.c3, CAST(vt0.c0 AS BLOB) COLLATE RTRIM, (((vt1.c0)<=(rt0.c1)) IN ()) FROM rt1, vt1, rt0 WHERE (((((x'')+(x'')))OR((((('')OR(NULL)))OR(1346003597))))) GROUP BY (((((((((('~') BETWEEN (rt1.c3) AND (x'52f8')))OR(0.41626649635759816)))AND(((rt0.c0)>>(rt1.c3)))))OR(((rt1.c0)IS NOT(rt1.c0)))))OR(rt0.c1 COLLATE NOCASE)) HAVING (((((rt1.c1, vt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, vt1.c0, rt0.c2)) AND (('y.', rt1.c2, rt0.c0))))%(((NULL) BETWEEN (vt1.c0) AND (vt1.c0))));SELECT DISTINCT vt0.c0, ((((rt1.c0)>(rt1.c0)))AND(NULLIF(DISTINCT rt1.c0, rt1.c2))), ((rt1.c0)GLOB(rt0.c2)) COLLATE BINARY, ((CAST(rt0.c1 AS REAL))/((- (rt1.c1)))), CASE WHEN (((rt1.c2))>((rt1.c3))) THEN 'b4DGfie㷠' WHEN CAST(vt0.c0 AS REAL) THEN ((rt0.c2) IS TRUE) WHEN ((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c3)) THEN ((rt1.c3)IS(rt1.c0)) END FROM rt0, vt1, vt0, rt1 ORDER BY (+ ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))  NULLS FIRST; -- 0ms;
SELECT ALL (((vt1.c0)) BETWEEN (((x'' IN (rt0.c0, rt0.c1)))) AND ((((rt1.c0) ISNULL)))) FROM rt0, vt0, rt1 ORDER BY (NOT (DATE(vt0.c0, 0.7519688776439073, '-2127638468'))) ASC;SELECT DISTINCT rt0.c1, (((rt1.c2, rt1.c3, rt0.c0)) BETWEEN ((CASE WHEN '' THEN vt1.c0 ELSE vt1.c0 END, ((rt1.c0) ISNULL), ((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))) AND ((((rt0.c2)|(rt1.c2)), (((rt1.c1, rt1.c2, rt0.c1, rt0.c1, vt1.c0)) NOT BETWEEN ((0.05257747121514922, vt0.c0, vt1.c0, rt0.c0, rt0.c1)) AND ((rt1.c2, rt0.c0, rt1.c2, rt1.c1, rt1.c3))), ((rt1.c0) IS TRUE)))), ((((rt0.c0) ISNULL))==(UPPER(rt0.c2))) FROM vt0, rt1 WHERE (((NULL)<>((NULL IN ())))) LIMIT -257527674 OFFSET -1517749858;SELECT NTH_VALUE(((((rt0.c0)>=(rt1.c0))) IS FALSE), (x'' IN ())) OVER () FROM rt1, vt0, rt0 WHERE ((('3Kh%Wb9' COLLATE BINARY) NOT NULL)); -- 1ms;
SELECT DISTINCT (((((NULL) NOT NULL)))!=((rt0.c0 COLLATE BINARY))), (((+ (rt0.c2))) NOT BETWEEN (((rt1.c1)%(rt1.c1))) AND (((rt1.c1) IS TRUE))), (+ (CASE WHEN '339387958' THEN rt1.c2 END)) FROM vt1, rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, vt1, vt0, rt1 WHERE (CASE WHEN 0X3777a5ef COLLATE BINARY THEN ('' IN ('-773217104')) WHEN ((NULL)<(-229907590)) THEN (- ('Q*!>x얧㫙')) WHEN CASE WHEN 0.07578997895354034 THEN '0￿cL' ELSE x'' END THEN CASE WHEN x'' THEN 0.05026198841508733 END ELSE LENGTH(NULL) END); -- 0ms;
SELECT ALL CAST(rt1.c0 AS NUMERIC) FROM vt0, vt1, rt1, rt0 WHERE ((((((0.7013289207858658)>>('3%S<\r&'))))<>((((x'933a') BETWEEN ('1119198235') AND (')m')))))); -- 0ms;
SELECT ALL ((rt1.c0 COLLATE RTRIM)*(GROUP_CONCAT(rt0.c2))), (((((vt1.c0))<((rt1.c1))))%(((rt1.c3) NOT NULL))), (NOT (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)) FROM vt1, rt1 WHERE ((((('dD gO*0)+')<<(x'')))>>(CASE WHEN 0Xbd97adb THEN NULL END))) GROUP BY HEX(vt0.c0), (~ (COALESCE(0X77f94c4c, 0.7312604489971839, vt0.c0, vt0.c0))), ((((vt0.c0)<=(rt1.c0)))<(((((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)))AND(0.969625462553228)))OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c1)))) ORDER BY CHANGES()  NULLS FIRST;SELECT DISTINCT IFNULL(DISTINCT ((rt0.c0)==(NULL)), ((((rt1.c2)OR(rt1.c2)))OR(rt1.c1))), ((((rt1.c3)OR(rt0.c2))) ISNULL), AVG(vt1.c0) OVER () FROM rt0, rt1, vt1 GROUP BY (((rt0.c0) IS TRUE) IN (((rt0.c2) NOT BETWEEN (vt1.c0) AND (x'')))), ((((((0.9764763433181864) ISNULL))OR(NULL)))AND(rt0.c2)), ((((rt1.c3)+(rt1.c0))) NOT BETWEEN (rt0.c2) AND ((((rt1.c3))>=((vt1.c0))))) HAVING rt0.c2; -- 0ms;
SELECT DISTINCT ('115426197' COLLATE BINARY IN (CASE WHEN vt0.c0 THEN rt0.c0 END, ((rt1.c3) IS FALSE))) FROM vt1, vt0, rt0;SELECT SUM(((rt1.c3) NOT NULL)) OVER ( ORDER BY ((((NULL) IS TRUE))>(((vt0.c0) NOTNULL))) DESC) FROM vt1, rt0, rt1, vt0 WHERE ((((x'0d57' IN ())) NOT BETWEEN (NULLIF('^卣Y2T7C', 0.6128943590108441)) AND (CASE WHEN '' THEN NULL ELSE NULL END))); -- 0ms;
SELECT LIKELIHOOD(CAST(rt1.c1 AS BLOB), 0.23601980776246212) FROM vt1, vt0, rt0, rt1 WHERE (UNICODE(((x'ef90')+(0x53195363)))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c0 THEN 'kJ{Kx''\r' WHEN (rt0.c1 IN ()) THEN (NULL IN ()) WHEN TYPEOF(vt1.c0) THEN COALESCE(DISTINCT rt0.c2, rt1.c2) ELSE ((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c2)) END, CASE WHEN (NOT (rt1.c0)) THEN ((((0.2123036341754202)AND(rt0.c1)))OR(rt1.c0)) END, RTRIM(((rt1.c1) BETWEEN (rt1.c0) AND (1.245647683E9))), AVG(((rt1.c2)OR(rt1.c1))) FILTER(WHERE ((((1804782237)AND((- (rt1.c2)))))AND(UNLIKELY(rt0.c1)))) OVER (), CAST(LOWER(vt0.c0) AS BLOB) FROM rt0, vt1 WHERE (((((0.04837161623101194)%(-1666321502))) IS FALSE));SELECT DISTINCT CASE WHEN (((vt0.c0))<=(('-1998725883'))) THEN rt0.c0 ELSE MAX(rt1.c1) END, CAST((rt1.c0 IN ()) AS INTEGER), (NOT ((NOT (rt0.c0)))) FROM vt1, rt1, vt0;SELECT ALL CAST((rt0.c0 IN ()) AS BLOB) FROM vt1, rt0 WHERE (((0.08247298046817086)LIKE(0Xffffffffeee8b277)) COLLATE NOCASE) EXCEPT SELECT ALL '' FROM rt0 WHERE (((UPPER(0.6745602860014809)) NOT NULL)); -- 1ms;
SELECT DISTINCT ((((vt1.c0) IS FALSE))/(rt0.c0 COLLATE RTRIM)), (vt1.c0 COLLATE RTRIM IN (((((rt0.c0)OR(rt0.c2)))AND(rt1.c0)))), (((rt1.c1)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3)))) AND ((MAX(rt0.c0)))), ((rt1.c3) IS FALSE) COLLATE BINARY, CASE WHEN rt1.c2 COLLATE NOCASE THEN CAST(vt0.c0 AS BLOB) ELSE ((vt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)) END FROM rt1;SELECT ALL ((((rt1.c3) IS FALSE)) NOTNULL), rt0.c2, CAST(CASE rt1.c2  WHEN vt0.c0 THEN rt0.c1 END AS NUMERIC) FROM vt1, rt1, vt0, rt0 WHERE (((('cD')AND(1.513094337E9)) IN ())); -- 0ms;
SELECT DISTINCT ((rt0.c0 IN (-1.541404426E9, 1.52818639E8)) IN ()) FROM vt1 WHERE (LOWER(DISTINCT ((x'1ec4') BETWEEN (0.9131573563197122) AND (x'')))); -- 0ms;
SELECT DISTINCT CAST((rt0.c1 IN (rt0.c2, rt1.c2)) AS INTEGER), NULL, CAST(((rt0.c2)&(rt0.c2)) AS TEXT) FROM vt1, rt0 ORDER BY (((vt1.c0)-(rt0.c1)) IN ())  NULLS LAST;SELECT DISTINCT ((((vt1.c0) ISNULL))IS((rt0.c1 IN ()))), ((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))!=(((((((((((((rt1.c2)OR(rt0.c1)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c3)))OR(rt1.c3)))), ((((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((rt0.c1)|(rt0.c2)), CASE rt1.c0  WHEN rt0.c0 THEN rt1.c1 ELSE 0.5928686935245753 END, (- (vt0.c0)), INSTR(rt0.c2, rt1.c3), ((((vt0.c0)OR(rt1.c2)))OR(rt0.c1)), ((x'') BETWEEN (rt1.c0) AND (rt1.c2))))==(((((rt0.c2, rt1.c3, vt1.c0)) BETWEEN ((rt1.c1, vt0.c0, rt1.c2)) AND ((vt1.c0, vt0.c0, rt0.c0))), (('527169472') NOT NULL), 6.16152852E8, ((rt0.c1)&(rt1.c1)), vt0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c2 END, ((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) FROM rt1 WHERE (((((((0.08473136008522575)<(NULL)))OR((- ('tF뼔p)f')))))AND((- ('-1221530969')))));SELECT DISTINCT (((((rt1.c2) NOT NULL)))<>(((rt1.c1 IN (rt0.c1))))) FROM vt0, rt0, rt1, vt1 WHERE ((((x'')==(NULL)) IN ())) ORDER BY JULIANDAY(((((rt1.c3)AND(rt0.c0)))AND(x'c777')), (+ (rt0.c0)), LOWER(x''), ((rt1.c1)+(rt0.c1)), CAST(rt1.c3 AS NUMERIC))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN rt1.c3 THEN vt1.c0 END) IS FALSE), (vt1.c0 IN ()), ROW_NUMBER() OVER () FROM rt0, vt1 WHERE ('-610065519');SELECT DISTINCT CASE WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)) ELSE (('鐋J쪖L乽T') NOT BETWEEN (rt1.c3) AND (rt1.c2)) END FROM vt0, vt1, rt0 WHERE (CASE (1982893307 IN (NULL))  WHEN ((x'0bf6')<<('G㮝')) THEN ((((((((7.46949739E8)AND(0.8744976428843879)))OR(NULL)))AND(x'')))OR(x'')) END);SELECT ALL ((((rt0.c1) IS TRUE))=(((0.09818481883273722) IS TRUE))), 0.8193565735717776, (((((rt1.c1 IN ()))OR((rt1.c2 IN (rt0.c1)))))AND(((rt0.c1)>=(rt1.c0)))) FROM rt1, vt0 GROUP BY CAST(((NULL)&(rt0.c0)) AS REAL), ((~ (rt0.c2)) IN ()), (((rt1.c3)) BETWEEN ((0Xffffffff94617874)) AND ((((vt1.c0)>>('0.6656830616570278'))))) HAVING ((((((rt0.c0) IS FALSE))OR('-687101024')))AND(CASE rt0.c2  WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c2 END));SELECT ALL (((rt0.c1) BETWEEN (vt0.c0) AND (rt1.c1)) IN ()) FROM rt1, vt0 NOT INDEXED WHERE (((CASE NULL  WHEN 0.4701618369176065 THEN 0xffffffffc895715d ELSE 0.950411583131173 END)IS(CAST(NULL AS TEXT)))) ORDER BY (NOT ((rt0.c2 IN ()))) DESC  NULLS LAST; -- 0ms;
SELECT ALL rt0.c2, ((rt0.c0 COLLATE BINARY)-(CAST(rt0.c1 AS BLOB))), ((SUM(rt1.c0)) NOT BETWEEN (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0))) AND (x'' COLLATE RTRIM)), ((((((((((rt1.c3)AND(rt1.c0)))OR(MIN(rt1.c0))))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))AND(ABS(rt0.c0))))OR(((rt0.c0) ISNULL))), LIKE(rt0.c1, rt1.c0, '0') COLLATE NOCASE FROM vt0, vt1, rt0 NOT INDEXED WHERE (((((CAST('1947651664' AS TEXT))OR(((((0.45853842360070884)AND(0.9038363146230396)))OR(NULL)))))OR(((0.9402248249813264) BETWEEN ('21127226') AND (x''))))) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC;SELECT DISTINCT (((rt0.c2, 0.9933887283438081, rt1.c2)) NOT BETWEEN ((((vt0.c0) IS TRUE), ((rt0.c1)||(rt0.c1)), CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c3 END)) AND (((rt1.c0 IN ()), CAST(x'' AS NUMERIC), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END))), ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((vt0.c0)GLOB(rt1.c1)))), ((((vt1.c0)=(rt0.c0)))=(AVG('>_''odm'))) FROM vt1 WHERE (((((9.01226346E8) IS TRUE)) NOTNULL));SELECT ALL RANK() OVER () FROM rt1, vt1, vt0 CROSS JOIN rt0 ON (((((x'9b4b'))>((rt1.c1)))) IS FALSE) WHERE (0xffffffffb4c13fe2); -- 1ms;
SELECT ALL (((((rt1.c3, rt0.c1, rt0.c0))>((rt1.c3, rt1.c1, rt0.c2))))AND(LENGTH(rt1.c0))), AVG((((vt0.c0, rt0.c0, rt1.c2))=((0Xfffffffff5b8eba5, rt0.c0, rt1.c3)))), ((((rt0.c1) IS TRUE))AND(vt1.c0)) FROM rt0, vt0, rt1;SELECT ALL ((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)) COLLATE NOCASE FROM vt0, rt1, rt0;SELECT GROUP_CONCAT(((((rt0.c0)AND(rt0.c1)))AND(rt1.c2))) OVER () FROM vt1 WHERE (CASE ((((NULL)OR(NULL)))OR(-1918903964))  WHEN '' THEN ((x'41e4') BETWEEN (0.6802135959390373) AND (NULL)) ELSE '' COLLATE BINARY END);SELECT DISTINCT (((vt1.c0)) BETWEEN ((0Xffffffffbca73061)) AND ((((vt0.c0) ISNULL)))) FROM rt1, vt0, rt0;SELECT DISTINCT SUBSTR((- (rt0.c0)), (rt0.c1 IN ())) FROM rt1, vt0, vt1, rt0 WHERE (((CAST('0.6606090097640636' AS NUMERIC))-((((NULL))<((x'')))))); -- 0ms;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1; -- 0ms;
SELECT (~ (COALESCE(rt1.c3, rt1.c3))) FROM vt0, rt1, vt1; -- 1ms;
SELECT DISTINCT 'zNrQE' FROM vt0 INNER JOIN rt0 ON rt0.c2 WHERE ((((((x'1ab06b59', NULL, x''))>((NULL, x'', '-8620979')))) NOT BETWEEN ((0x76e6aa02 IN ())) AND (((1861568314) NOT BETWEEN (-1104386019) AND (2058350747))))); -- 0ms;
SELECT DISTINCT (((rt1.c2))<((-1179617788))), 0.9207963372954677, ((SUM(vt1.c0))>=(vt1.c0)), ((CASE WHEN NULL THEN 0.5868907626128874 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) NOT NULL), ((((rt0.c0)IS NOT(NULL)))||(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 END)) FROM rt1, rt0, vt0, vt1 GROUP BY ((((rt1.c3)%(rt0.c2)))&(COALESCE(DISTINCT rt0.c0, rt1.c2))) LIMIT -2118159999 OFFSET 1531582695; -- 0ms;
SELECT ((MIN(rt1.c2)) NOT BETWEEN (rt1.c3) AND ((((rt1.c2, rt0.c0, rt1.c0, rt1.c0, '-1206973603'))<=((rt0.c0, '1119198235', rt1.c0, rt0.c0, rt0.c2))))) FROM rt0 WHERE ((((x'') BETWEEN (NULL) AND (0.016062637244047773)) IN ()));SELECT DISTINCT (((vt0.c0 IN ())) NOT NULL), (CAST(rt0.c2 AS INTEGER) IN ((('z''i')<<(rt1.c0)))), ((((TRIM(x''))AND('1163323591')))AND(((((0X4ee7af98)AND(rt0.c0)))AND(rt1.c0)))) FROM rt1, rt0 WHERE ((NOT (NULL)) COLLATE NOCASE); -- 1ms;
SELECT ((((((((AVG(rt0.c2))AND(((((rt1.c3)OR(rt0.c0)))OR(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE)))OR(((NULL)||(rt0.c1)))))OR(((rt0.c2) NOT NULL))) FROM vt1, rt1, rt0, vt0; -- 0ms;
SELECT ((((NULLIF(rt0.c2, vt0.c0))OR((- (rt0.c1)))))AND(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) FROM rt0, vt1 WHERE ((((('S/') ISNULL))<=((0.08151352713064142 IN ()))));SELECT DISTINCT TRIM(DISTINCT rt1.c1) COLLATE NOCASE FROM vt1, rt1, rt0; -- 0ms;
SELECT DISTINCT (- (CAST(rt0.c1 AS NUMERIC))), (((rt1.c0, rt1.c3, rt1.c1)) BETWEEN (((0.0028020790731819734 IN (vt0.c0)), (- (rt0.c1)), x'')) AND ((((rt1.c0) IS FALSE), ((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)), (~ (rt1.c2))))), (((((NOT (rt1.c1)))AND(CAST(vt1.c0 AS BLOB))))OR(((rt1.c2)>(rt0.c0)))) FROM rt1, rt0, vt0, vt1 WHERE (NULL); -- 0ms;
SELECT ALL ((((rt1.c3) NOT NULL))+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) FROM rt1;SELECT DISTINCT MIN(rt1.c0) COLLATE BINARY COLLATE RTRIM FROM vt1, rt1, rt0, vt0; -- 1ms;
SELECT DISTINCT ((((((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(vt0.c0)))OR(vt0.c0)))OR((((0Xffffffffbfb75514)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))), vt0.c0, (((rt0.c1)) BETWEEN ((vt0.c0)) AND ((NULL))) FROM rt0;SELECT DISTINCT CAST(vt0.c0 AS INTEGER) COLLATE BINARY FROM rt1, rt0, vt1 WHERE (CASE 0.5035128138119986  WHEN NULL THEN '' WHEN -1553952399 THEN NULL WHEN 0.4797979372837796 THEN x'' WHEN NULL THEN 0.7856617468833041 WHEN NULL THEN NULL ELSE 0x566a86e8 END COLLATE NOCASE) ORDER BY CASE ((vt0.c0)<(rt0.c1))  WHEN x'' THEN (((rt0.c0, rt1.c2, rt0.c2))!=((rt0.c0, rt0.c1, rt0.c0))) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN (rt0.c0 IN ()) WHEN (((0X5c6e45e9, rt1.c1, 0.8565677085932073, rt1.c1, vt0.c0))>((rt0.c2, rt1.c3, rt0.c2, vt0.c0, rt0.c1))) THEN CAST(rt0.c1 AS BLOB) ELSE CASE WHEN rt1.c3 THEN rt1.c1 END END ASC, CASE CASE rt0.c2  WHEN rt1.c1 THEN rt1.c1 END  WHEN ((rt1.c0) NOT NULL) THEN CAST(vt0.c0 AS BLOB) ELSE vt0.c0 COLLATE RTRIM END  NULLS FIRST, (((((NULL))>((rt0.c0)))) NOT BETWEEN (x'') AND (((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))));SELECT ALL MAX(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c3 THEN rt0.c0 END) FROM rt1 WHERE (CAST((((x'36e4', '', 0Xfffffffffd8979a8))>((0X305c23a0, NULL, x'b13ee748'))) AS BLOB)) ORDER BY IFNULL(DISTINCT '-1063222477' COLLATE BINARY, CAST(NULL AS TEXT));SELECT DISTINCT (((MAX(rt1.c3)))<=((rt1.c0 COLLATE BINARY))) FROM vt0, rt0, rt1, vt1 WHERE (CAST(((NULL) BETWEEN (0X7696989c) AND (NULL)) AS REAL)); -- 0ms;
SELECT TOTAL(x'1d9a'), rt0.c1, ((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END)||(x'933d')) FROM vt1 WHERE (x'4851');SELECT (vt1.c0 IN ()) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL (NOT (rt0.c0 COLLATE BINARY)) FROM rt1, vt1, rt0, vt0 LIMIT -1527049127 OFFSET 298226265; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt1; -- 0ms;
SELECT DISTINCT SUM((((NULL)) NOT BETWEEN (('B]')) AND ((rt0.c0))) COLLATE BINARY) OVER ( ORDER BY ((((((((((rt0.c2)AND(rt1.c2)))OR(((vt0.c0) IS TRUE))))AND(CHAR(rt1.c1))))AND(vt1.c0)))AND(rt1.c2 COLLATE NOCASE)) ASC) FROM vt1, vt0, rt1;SELECT DISTINCT LAG(x'', ((((((((x'' COLLATE RTRIM)OR(IFNULL(rt0.c0, rt0.c2))))OR(CAST(rt0.c1 AS INTEGER))))OR((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, '751463313', rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1))))))AND(((rt0.c1)-(rt0.c1)))), (('-925923507') NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END) AND (rt0.c1))) OVER ( PARTITION BY CAST(CAST(vt0.c0 AS TEXT) AS REAL), ((((rt0.c1)OR(((vt1.c0) IS TRUE))))OR(UNLIKELY(rt1.c2))), (((rt1.c1) NOTNULL) IN (rt1.c0)), CASE (+ (rt0.c1))  WHEN CASE rt1.c0  WHEN NULL THEN rt1.c2 ELSE rt1.c0 END THEN rt0.c0 COLLATE RTRIM WHEN rt0.c2 THEN LIKELIHOOD(0.9463378025862847, 0.3610521794994275) WHEN (- (rt1.c0)) THEN NULL ELSE ((rt1.c1)IS NOT(rt1.c3)) END, vt0.c0, CASE WHEN ((rt0.c0)&(rt1.c2)) THEN 0xffffffffb3abf5f5 WHEN IFNULL(DISTINCT rt1.c1, rt0.c0) THEN (((vt1.c0))<((rt1.c2))) WHEN (((((((('408148063')OR(vt1.c0)))OR(rt1.c1)))AND(vt0.c0)))AND(rt0.c2)) THEN ((vt1.c0)+(vt1.c0)) END ORDER BY ((0.77553492992627) IS FALSE) ASC) FROM vt1, rt0;SELECT DISTINCT TOTAL(vt1.c0) FROM vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((((((rt1.c1)AND(rt1.c3)))AND(rt0.c1)), ((((((((rt0.c2)OR(rt1.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt1.c1)), NULL))!=(((+ (rt1.c2)), vt0.c0, SUM(rt1.c0)))) FROM rt1, rt0 ORDER BY COALESCE((((rt1.c2))<((rt1.c0))), ((rt1.c0)<(rt0.c1))) DESC  NULLS LAST LIMIT 1940228100 OFFSET -2091722852;SELECT ((((((rt0.c1)AND(rt0.c2)))AND(vt1.c0))) NOT BETWEEN (SQLITE_VERSION()) AND (((rt1.c1)%(rt0.c2)))) FROM vt1, vt0, rt0, rt1; -- 0ms;
SELECT ALL (((((rt0.c1, vt0.c0, rt1.c3)) NOT BETWEEN ((0.24261670517300804, rt1.c3, rt1.c3)) AND ((rt1.c3, rt1.c0, rt0.c2)))) NOT NULL), (~ (TIME(rt1.c2, rt0.c2, vt1.c0))), (((((vt0.c0, vt1.c0, rt1.c2)) NOT BETWEEN ((rt0.c1, rt1.c3, rt1.c3)) AND ((rt0.c0, rt1.c1, NULL))))|((((rt0.c1, rt1.c3, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt1.c1)) AND ((rt1.c3, vt0.c0, rt0.c2))))), UPPER((((rt0.c0, vt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c0, rt1.c3, rt1.c0)) AND ((rt1.c0, rt0.c1, rt1.c1)))), rt0.c1 FROM rt0, rt1, vt1 LIMIT 2082927656;SELECT DISTINCT CAST(HEX(rt0.c2) AS NUMERIC) FROM rt0 WHERE (((((((((((',')&(-2.141695561E9)))OR(((((((((NULL)OR(x'0540470c')))OR('')))AND(-727325574)))OR(x'')))))OR((('w{')LIKE(NULL)))))OR((- ('K4')))))OR(CAST('-386886266' AS BLOB)))) GROUP BY (- ((- (rt1.c1)))) HAVING '0.3039091086071133';SELECT ALL LAST_VALUE((((vt1.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(rt0.c1)))) AND ((CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)))) OVER () FROM rt0, vt0, vt1 WHERE (((((((357151845)OR(795240950)))AND('337206683')))>((x'e0c5' IN (0.28444033391415613))))) GROUP BY (((((rt1.c0)AND(x'')))AND(rt1.c2)) IN ()), '~/E', (((rt0.c0, rt0.c2, vt1.c0, NULL, vt0.c0)) BETWEEN (((((0X22bf745f)) BETWEEN ((vt0.c0)) AND ((rt1.c3))), ((vt0.c0)>(rt1.c0)), rt1.c2 COLLATE RTRIM, (- (rt1.c1)), ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) AND ((x'', ((rt0.c0) NOT NULL), rt1.c1 COLLATE NOCASE, CAST(NULL AS INTEGER), ((vt0.c0)IS(rt1.c0))))) HAVING COUNT(*);SELECT rt1.c1 FROM vt1, rt1, vt0 WHERE (0X1647cbf1) ORDER BY ((rt1.c0) ISNULL); -- 0ms;
SELECT DISTINCT LEAD((((rt1.c2)) NOT BETWEEN ((('' IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0))))), CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c2 ELSE x'' END COLLATE RTRIM, (DATE(NULL, rt1.c0, rt1.c1, rt1.c3, vt1.c0) IN ())) OVER () FROM rt1, vt1, rt0; -- 1ms;
SELECT DISTINCT (NOT (CAST(rt0.c0 AS BLOB))), (NULL IN ()), TYPEOF(rt0.c0), ((((rt1.c3)|(rt1.c2)))IS NOT((vt0.c0 IN ()))), ((((rt1.c2)OR(rt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((rt0.c2 IN (vt1.c0)))) FROM vt0 RIGHT OUTER JOIN vt1 ON 0.4325202610546657 INNER JOIN rt1 ON x'' WHERE (((LAST_INSERT_ROWID())&(((NULL) BETWEEN (x'78f1') AND (0.5171176316104136)))));SELECT (NOT (LIKELY(DISTINCT rt0.c2))) FROM rt1, vt0;SELECT LAST_VALUE(CAST((+ (vt1.c0)) AS REAL)) OVER ( ORDER BY ((((CASE rt1.c1  WHEN rt0.c2 THEN rt0.c2 END)AND(((rt1.c1) IS FALSE))))AND((rt1.c1 IN ())))  NULLS LAST, (((rt0.c0) IS TRUE) IN ())  NULLS LAST, ((((rt1.c0)>(rt1.c1)))|(NULL))) FROM vt1;SELECT DISTINCT CASE ((vt0.c0)<<(rt0.c0))  WHEN TOTAL(rt1.c2) THEN rt1.c0 COLLATE NOCASE ELSE ((x'') NOT NULL) END FROM rt0 WHERE ((0X78000fd9 IN ())) ORDER BY (((vt1.c0, ((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c1)), ('茷g' IN (1394168675, rt1.c1)), CAST(rt1.c2 AS BLOB), (rt1.c3 IN (vt1.c0, rt0.c0, rt0.c0))))==((rt1.c0 COLLATE RTRIM, rt0.c1, ((rt1.c0) IS TRUE), (('Uv&') IS TRUE), ((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0)))));SELECT ALL (((((rt1.c1 IN ()))OR(((rt1.c0)<(rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) FROM vt1 WHERE (((('-1938941070'))<((426392285))) COLLATE NOCASE);SELECT DISTINCT CASE WHEN ((rt1.c2)LIKE(rt1.c0)) THEN (((rt0.c2))=((rt0.c0))) ELSE ((rt1.c3)IS(rt1.c2)) END FROM rt0, vt0, rt1, vt1; -- 0ms;
SELECT ALL rt0.c2, (((rt1.c1)) BETWEEN ((((rt1.c3) NOT NULL))) AND (((vt0.c0 IN ())))), '-1206973603' COLLATE RTRIM FROM vt1, rt1, rt0, vt0 WHERE ((((x'')) NOT BETWEEN ((json_valid(x'5e79'))) AND (((('1172965134')AND('~|r+')))))) GROUP BY ((((((rt1.c0)AND(0Xffffffffc2010ccf)))OR(vt1.c0)))>>(CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt0.c0 END)); -- 0ms;
SELECT CAST((rt0.c0 IN ()) AS NUMERIC) FROM vt0 WHERE (CASE WHEN ((NULL)|(NULL)) THEN ((0.9100654021830303) NOT BETWEEN (x'') AND (x'e286f3c5')) ELSE CASE WHEN NULL THEN -1422491157 WHEN 0.019559964463782054 THEN '6^' WHEN 0.9608463029963268 THEN 0Xffffffff9b14e0b3 END END); -- 0ms;
SELECT DISTINCT (COUNT(*) IN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2)), COUNT(rt0.c1))) FROM vt1, rt1, rt0, vt0 WHERE (((((x'') IS TRUE)) BETWEEN ((('')AND(x'541d6f39'))) AND (CASE WHEN '-1852531196' THEN NULL ELSE '1631763592' END))); -- 0ms;
SELECT DISTINCT CAST((- (vt0.c0)) AS REAL), (((json_object(rt1.c3, vt1.c0)))>=((((rt1.c3)OR(rt1.c1))))), CAST(NULL AS NUMERIC) FROM rt0, vt0, rt1, vt1; -- 0ms;
SELECT (((vt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE BINARY, ((((rt1.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) IN ()), CASE CASE WHEN rt1.c0 THEN rt1.c1 END  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END THEN ((vt1.c0)|(rt1.c3)) END FROM vt0, rt1, vt1;SELECT DISTINCT ((rt0.c1)*((- (rt0.c2)))), CAST(COUNT(*) AS NUMERIC), (('-597218036')<<(((rt1.c3)<>(rt1.c2)))) FROM vt1, rt1, vt0, rt0 WHERE (MIN((((0.5150630463821905)) NOT BETWEEN ((NULL)) AND ((','))), (((0.3394302551973579)) NOT BETWEEN (('-299497595')) AND ((NULL))))) LIMIT 1190347715; -- 0ms;
SELECT rt1.c1 FROM rt0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN (((x''))>=((795240950))) END);SELECT DISTINCT ((((rt1.c1, rt1.c2, '')) NOT BETWEEN ((rt0.c0, rt0.c2, rt1.c0)) AND ((rt0.c1, rt1.c1, rt1.c1))) IN ()) FROM vt1, rt1 WHERE (CAST((- ('1281282911')) AS INTEGER)); -- 0ms;
SELECT CAST(CASE rt1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt0.c2 END AS NUMERIC), ((((((((CASE x'a34a'  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN 0.236880534590031 WHEN rt0.c1 THEN 'H~' WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c3 END)AND(((rt1.c3) NOTNULL))))OR(((rt0.c1)AND(rt0.c2)))))OR((NOT (rt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (rt1.c1)))), vt1.c0 FROM rt1 WHERE (((NULL COLLATE BINARY) NOTNULL));SELECT ((TRIM(DISTINCT rt0.c0))+(vt1.c0 COLLATE RTRIM)) FROM rt1, vt1 GROUP BY (((((rt0.c1))<>((rt1.c1))))>=(((rt1.c2) NOTNULL)));SELECT DISTINCT ((((rt1.c0)IS(rt1.c3)))<(((((((((((((vt0.c0)AND(rt0.c0)))OR(206865503)))OR(rt1.c2)))AND(rt1.c2)))OR(NULL)))OR(rt1.c3)))) FROM rt0, vt1, vt0;SELECT DISTINCT NULL, ((CAST(rt0.c2 AS BLOB))>>(x'')), (((((rt0.c0, vt1.c0, vt1.c0))<((rt0.c0, vt0.c0, vt1.c0))))IS NOT(CASE WHEN rt1.c3 THEN rt1.c3 END)), (((rt0.c2 COLLATE RTRIM))>(('0.34810905600360786'))), (~ ((+ (rt0.c2)))) FROM vt1, vt0, rt1, rt0 WHERE ((NOT (((0.20474243824133875) NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT MAX(((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c3))), TOTAL(CAST(rt1.c3 AS INTEGER)), (((rt0.c2, 0.6392128492224409, rt1.c3)) BETWEEN ((((vt1.c0) BETWEEN (rt0.c1) AND (vt0.c0)), vt1.c0, '-139191342')) AND ((TOTAL(rt0.c0), (~ (rt0.c0)), ((rt1.c0)<<(rt1.c2))))) FROM vt0, vt1, rt0 WHERE (rtreenode((- (3.37206683E8)), ((('-831693316')) NOT BETWEEN ((NULL)) AND ((0.3248271182233404)))));SELECT ROW_NUMBER() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt0.c1 THEN 'EObj' WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt1.c0 ELSE vt0.c0 END AS REAL) FROM vt1 GROUP BY (((rt0.c0 IN ()))&(((rt1.c1)==(rt1.c1)))) HAVING (((~ (rt1.c0))) ISNULL);SELECT DISTINCT x'', TOTAL((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))), ((((json_quote(vt1.c0))OR(CAST(rt0.c1 AS REAL))))OR(CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c0 END)), ((((((rt1.c0)OR(0.8565677085932073)))AND(vt1.c0))) NOT BETWEEN (x'eb04') AND (((rt1.c2)+(rt0.c1)))), CASE WHEN CAST(rt0.c2 AS REAL) THEN CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 END END, ABS(DISTINCT json_valid(rt1.c3)), x'' FROM rt0 LIMIT -1237866955;SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)AND(6.16152852E8)) FROM vt0, vt1, rt0, rt1 WHERE (((-1198296035 COLLATE NOCASE) NOT BETWEEN (CAST(1696288374 AS BLOB)) AND ((0.7433324361944496 IN ())))) ORDER BY ((((CASE WHEN rt1.c0 THEN rt1.c2 END)AND(((rt1.c2)>(rt1.c2)))))AND(rt1.c2 COLLATE BINARY)) DESC; -- 1ms;
SELECT DISTINCT (SUM(rt1.c3) IN ((rt0.c2 IN ()))) FROM rt1, vt0 WHERE (((NULL COLLATE BINARY) NOTNULL)); -- 0ms;
SELECT ALL 1479506421, ((((rt1.c2) IS FALSE))GLOB((rt0.c0 IN ()))), ((rt1.c1 IN ()) IN ()) FROM vt1, rt0, vt0, rt1 WHERE (CASE CAST(NULL AS REAL)  WHEN SQLITE_SOURCE_ID() THEN ((NULL) NOT BETWEEN (NULL) AND (x'')) WHEN ((0.9994782990221556)&(0.06387939666591436)) THEN (+ ('''')) WHEN (((NULL, 0Xffffffffc0f3e619, 0.9615886797069364))<=((1962270947, x'', -1.647891649E9))) THEN (('') IS FALSE) ELSE (~ (NULL)) END); -- 0ms;
SELECT SUM(LIKE(rt1.c2, rt0.c0, '0')) FROM rt0, vt0, vt1, rt1 ORDER BY (NOT (CAST(x'' AS NUMERIC)))  NULLS LAST; -- 0ms;
SELECT (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)), ((rt1.c0)OR(rt1.c1)), vt1.c0 COLLATE NOCASE)) AND ((vt0.c0, ((rt1.c1)IS NOT(rt1.c0)), CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c3 ELSE rt0.c2 END))), (~ (((vt1.c0)<=(vt0.c0)))), ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3))) ISNULL) FROM rt0, vt1 LIMIT 1755796340 OFFSET -2040662215;SELECT DISTINCT CAST((((rt1.c1, rt0.c1, vt0.c0, rt0.c2, rt1.c3)) BETWEEN ((rt0.c1, rt1.c2, rt0.c1, vt1.c0, rt1.c1)) AND ((rt1.c2, vt1.c0, vt0.c0, vt1.c0, rt1.c3))) AS BLOB) FROM rt1, rt0;SELECT DISTINCT (rt0.c2 IN (MAX(rt0.c2))), (TOTAL(rt1.c1) IN ()), COUNT(*) OVER ( ORDER BY '-461233054') FROM vt0, vt1 WHERE (((((((NULL)AND('927756776')))OR(0X7af89af1))) NOT NULL));SELECT ALL ((((vt1.c0)<<(rt0.c2)))>=((+ (rt1.c3)))) FROM rt1;SELECT DISTINCT ((((rt1.c0) IS FALSE))<<((((rt1.c3, rt0.c1, vt1.c0))=((rt1.c1, rt1.c2, '-1730574437'))))), '0B', TOTAL((rt1.c3 IN ())) OVER () FROM rt0, vt0, vt1, rt1 WHERE (0.4917573505562731); -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c0 END) OVER () FROM vt1, rt0 NATURAL JOIN rt1 WHERE ((((((('-870540614', 0.6556043403727173, 1961437378, '', NULL))<=((x'', '),#\nI', NULL, '>k', NULL)))))!=((COALESCE('', 0.9171339144263346))))) GROUP BY (((vt1.c0 IN ())) IS FALSE) HAVING rt0.c2; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS NUMERIC)) IS FALSE) FROM vt1 WHERE ((((TRIM(DISTINCT 'Q7'), load_extension(x''), '' COLLATE RTRIM))>=((((0.872104962626213) NOT BETWEEN ('-814562009') AND ('Gs.\n')), rtreenode('0.8745738856868841', 'b咽'), '%WfkoDV#')))) LIMIT -869903612;SELECT ALL CAST((+ (rt0.c1)) AS TEXT) FROM rt0 WHERE (CASE WHEN (((-781619225)) NOT BETWEEN (('1072341450')) AND ((''))) THEN (x'' IN ()) WHEN ((-2.70615453E8) BETWEEN (NULL) AND (x'')) THEN (((NULL)) NOT BETWEEN (('1')) AND ((NULL))) WHEN CASE x'cab2'  WHEN '-1609178958' THEN x'' WHEN '>k' THEN NULL WHEN 0.195474672831071 THEN x'4e75c349' END THEN (('-18741369')*(x'')) END); -- 0ms;
SELECT ALL CAST(CASE WHEN rt1.c2 THEN rt0.c1 END AS NUMERIC) FROM vt1 FULL OUTER JOIN rt1 ON (((rt0.c1, (rt1.c2 IN ()), CASE WHEN rt1.c0 THEN rt1.c0 END))<=((((rt1.c1)-(rt1.c2)), ((vt1.c0)IS NOT(vt1.c0)), vt1.c0 COLLATE NOCASE))) CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN (((~ (rt0.c0)))) AND ((rt1.c2))) WHERE (CASE (('둨⟐Sp쪖') IS TRUE)  WHEN (((0.2536469353597357)) BETWEEN ((NULL)) AND ((x''))) THEN (- ('')) END);SELECT ALL (x'38dc' IN ()) FROM vt0, rt0 WHERE (((((((NULL)OR(NULL)))OR('-2013628459')))LIKE(CAST(0.9139096334457808 AS BLOB)))); -- 0ms;
SELECT ALL (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((((rt1.c1)OR(vt1.c0)))OR('190602692')), (((rt0.c0))>((rt1.c2))), rt0.c2)) AND ((GROUP_CONCAT(rt0.c0), json_array_length(rt0.c0), (rt1.c1 IN ())))) FROM rt1, vt1;SELECT (((CAST(rt1.c2 AS REAL)))<=((CASE WHEN rt0.c1 THEN rt1.c3 END))), CUME_DIST() OVER (), ((((((vt0.c0)AND(rt0.c2)))OR(rt1.c1)))<=(((((((((rt1.c2)AND(NULL)))OR(rt1.c2)))OR(rt1.c3)))OR(vt0.c0)))) FROM rt0, vt1, vt0, rt1 WHERE ((((((NULL)) NOT BETWEEN (('-2094400423')) AND ((x'9286'))))>((('-773217104') IS FALSE)))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), ((((rt1.c3) IS FALSE)) ISNULL), ((((x'')<(rt0.c2))) BETWEEN (((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c1))) AND (HEX(rt0.c1))) FROM rt0, vt1, rt1;SELECT DISTINCT x'' FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (0xffffffffef1537cf IN ()) COLLATE RTRIM, TOTAL(CAST(rt0.c2 AS INTEGER)) OVER (), json_valid(((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c2))) FROM rt1, vt0, vt1 ORDER BY 1323806616  NULLS FIRST;SELECT DISTINCT CASE WHEN ((rt1.c0) IS TRUE) THEN (rt1.c2 IN ()) END FROM vt0, rt0, rt1, vt1 WHERE ('\mo'); -- 0ms;
SELECT ALL CASE CASE WHEN rt1.c0 THEN rt1.c3 END  WHEN ((vt0.c0) NOTNULL) THEN ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END, RANK() OVER (), COUNT(CAST(vt1.c0 AS INTEGER)) OVER ( ORDER BY CAST(rt1.c0 AS BLOB) COLLATE NOCASE  NULLS FIRST, CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN json_patch(rt0.c1, rt0.c1) WHEN CAST(rt1.c3 AS BLOB) THEN vt0.c0 WHEN ((((((((rt1.c2)AND(rt1.c3)))AND(vt0.c0)))AND(rt0.c1)))AND(vt1.c0)) THEN vt0.c0 COLLATE BINARY END  NULLS FIRST), CASE WHEN ((((vt1.c0)OR(vt1.c0)))OR(rt1.c2)) THEN ((0.25609060097803216)GLOB(rt1.c1)) WHEN (+ (vt1.c0)) THEN (((rt1.c1))<=((rt0.c1))) WHEN ((rt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) THEN ((NULL)&(rt0.c1)) ELSE rt1.c1 END, CAST(CAST(x'' AS INTEGER) AS NUMERIC) FROM rt0, vt1, rt1;SELECT ALL CAST(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) AS INTEGER) FROM vt0, vt1, rt1 ORDER BY ((LENGTH(rt1.c1)) BETWEEN ((NOT (vt0.c0))) AND ((NOT (rt1.c3))));SELECT DISTINCT ((CAST(rt1.c1 AS INTEGER))<=((NOT (rt0.c0)))), CASE vt1.c0  WHEN ((rt1.c2) ISNULL) THEN (NOT (rt0.c0)) WHEN '504251669' THEN CASE 0.4626605326998362  WHEN vt0.c0 THEN vt0.c0 END WHEN rt1.c3 COLLATE BINARY THEN vt1.c0 END, TOTAL(CASE rt1.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c3 END) FROM vt0, rt1;SELECT DISTINCT (+ ((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c3))))) FROM rt1, vt0, rt0, vt1 WHERE (((((((0X3f58602e)AND(NULL)))OR('1874714693'))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS TEXT))LIKE(rt0.c1)) FROM vt1, rt0, vt0, rt1 WHERE ((((-1.797957197E9, 1472467482, '927756776', '1513094337', '\n6ⴢt')) BETWEEN ((((NULL)-('')), ((x'') NOT BETWEEN ('-1280474340') AND (0.7435910687834831)), TYPEOF(DISTINCT '-317045471'), ((0.5108719132424614)GLOB(1100810688)), ((((((((1927854240)OR(x'186d')))OR(NULL)))OR('u!')))AND(0.060657359973604996)))) AND ((CASE WHEN NULL THEN x'1037' ELSE 0.8504269265821639 END, TRIM(4.58177604E8), CASE x'ffb1'  WHEN 1e500 THEN x'ca62' ELSE NULL END, ((NULL)>>('}y_LN')), ((x'') NOT BETWEEN (NULL) AND ('wf')))))); -- 0ms;
SELECT ALL (+ (CASE WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c2 END)) FROM vt0, rt1, rt0 WHERE ((0.5569324601477789 IN ())) GROUP BY x'' HAVING CAST(json_array(rt0.c2, vt0.c0) AS TEXT); -- 1ms;
SELECT DISTINCT rt1.c2, LIKELY((~ (rt1.c0))), ((TYPEOF(rt1.c3)) ISNULL) FROM vt0 WHERE ((- (0.23734201940204458)) COLLATE BINARY);SELECT ALL (((rt1.c0 IN ())) BETWEEN (((vt0.c0)GLOB(rt1.c0))) AND (CASE rt1.c2  WHEN 0.02462674194634462 THEN vt0.c0 END)) FROM rt1, vt1, rt0, vt0 WHERE (((x'')/(0.8910677088901151)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOTNULL)) BETWEEN (((rt1.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) AND (rt0.c1)), LEAD(x'', ((((CAST(vt1.c0 AS BLOB))AND(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))AND(x'')), (((vt1.c0)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((((vt1.c0) ISNULL))))) OVER (), LAG(((vt1.c0)/(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))), ((((vt1.c0) NOT NULL))IS((vt1.c0 IN (vt1.c0, x'')))), (('뀞W㴁') BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE WHEN 1.98802139E8 THEN vt1.c0 END))) OVER () FROM vt1 WHERE (339387958) LIMIT 1626363147 OFFSET 419900872;SELECT DISTINCT rt1.c0 FROM vt0, rt1, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c0)+(rt1.c1)) THEN ((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt0.c2)) WHEN (((rt1.c2))<=((rt0.c0))) THEN MAX(vt1.c0) WHEN CASE rt0.c0  WHEN rt1.c3 THEN rt0.c2 END THEN rt0.c1 COLLATE BINARY ELSE (((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c1))) END FROM vt0, vt1 WHERE (NULLIF(DISTINCT CAST(NULL AS REAL), IFNULL(DISTINCT '0.4701618369176065', 'c')));SELECT DISTINCT GROUP_CONCAT((rt1.c3 IN (vt1.c0))) FILTER(WHERE ((CASE WHEN vt1.c0 THEN 0.3379924830453739 ELSE vt0.c0 END)IS NOT((+ (vt1.c0))))) OVER () FROM rt1, rt0 GROUP BY QUOTE(CASE rt0.c1  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt1.c3 END), CAST(vt1.c0 AS INTEGER) COLLATE RTRIM, (+ (rt1.c3)) COLLATE BINARY COLLATE RTRIM;SELECT DISTINCT rt1.c1 FROM vt1;SELECT COUNT((((vt0.c0, '鋕2', rt1.c1, rt1.c3, rt0.c2))<=((rt1.c0, vt0.c0, rt0.c0, rt1.c2, rt0.c2)))), (+ (((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c3)))), (NOT (((rt1.c0)GLOB(rt1.c1)))) FROM vt1, rt0, rt1, vt0 WHERE (0.8787843665773739); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)|(rt1.c1))) OVER () FROM vt1, rt0, rt1;SELECT DISTINCT COUNT(((((rt1.c2)OR(rt0.c2)))OR(rt1.c3))) FROM rt1, vt0, rt0, vt1; -- 0ms;
SELECT ALL COUNT(((rt0.c1) NOT NULL)) OVER () FROM vt1, vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT ABS(vt0.c0) COLLATE RTRIM FROM rt0;SELECT ALL 0Xffffffff824c7519, ((CAST(vt0.c0 AS INTEGER)) IS TRUE), ((((rt1.c0)|(rt0.c2)))!=(rt1.c0 COLLATE RTRIM)), (CAST(rt1.c3 AS NUMERIC) IN ()), (rt0.c0 COLLATE RTRIM IN (CHAR(rt1.c2), NULL)) FROM rt0, rt1, vt1, vt0; -- 0ms;
SELECT ((0.9139096334457808)IS(vt1.c0)) COLLATE BINARY, CASE vt1.c0 COLLATE BINARY  WHEN ((rt1.c0) NOT NULL) THEN AVG(NULL) ELSE ((rt0.c1)!=(vt0.c0)) END, (rt1.c1 IN ()) FROM rt0;SELECT DISTINCT ((((rt1.c2)<<(rt0.c2))) BETWEEN (((rt0.c2)-(rt0.c1))) AND (UNLIKELY(rt1.c3))) FROM rt1, rt0 WHERE (CASE (('') NOT BETWEEN (NULL) AND (x''))  WHEN CASE '208270122'  WHEN 0.35164578023674997 THEN 0.6309015748882804 ELSE '1594621246' END THEN GLOB(NULL, 0.9171339144263346) END); -- 0ms;
SELECT ((((((((NULL)OR(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))OR(rt1.c1)) COLLATE BINARY FROM rt0;SELECT DISTINCT (NOT (UNLIKELY(DISTINCT rt1.c0))) FROM rt1, rt0 WHERE (((CAST(x'' AS NUMERIC))AND((NULL IN ())))); -- 0ms;
SELECT DISTINCT NULL COLLATE NOCASE, NULLIF((vt1.c0 IN ()), ((((rt0.c1)OR(0x25bfb5ca)))AND(rt1.c3))), (((((vt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c2)))) IS FALSE) FROM vt1 WHERE ((+ ((~ (' jt\'))))) ORDER BY (GLOB(rt1.c2, rt1.c3) IN (((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1)))) ASC, ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE '1963469018' END) BETWEEN ((0.465230357588133 IN ())) AND (((vt1.c0) ISNULL))) DESC LIMIT -1919689279 OFFSET 1445115651;SELECT ALL ((((((((((rt1.c1)OR(rt1.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(vt1.c0)))|(CASE rt0.c0  WHEN vt0.c0 THEN rt1.c3 ELSE vt1.c0 END)), CASE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0)))  WHEN rt1.c0 COLLATE RTRIM THEN GROUP_CONCAT(rt0.c0) END, CAST(rt0.c1 AS TEXT) COLLATE NOCASE FROM rt1, vt1;SELECT DISTINCT (((NOT ('')))IS NOT(((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c0)))), COUNT(*) OVER (), rt0.c0 FROM vt0 WHERE ((((0Xffffffff94f5aa03)-(x'99d9')) IN (CAST(0.7172753299638264 AS REAL), (NOT (-1384060910)))));SELECT DISTINCT json_patch((vt1.c0 IN ()), (((vt0.c0, rt1.c3, rt0.c0)) NOT BETWEEN ((rt1.c3, vt0.c0, rt1.c2)) AND ((vt0.c0, rt1.c0, rt0.c2)))) FROM vt0, rt0, vt1 WHERE (((((NULL)/(x'')))==(((NULL)LIKE('')))));SELECT ALL ((((((((((((NULL)OR(rt1.c0)))AND(rt1.c0)))AND(NULL)))AND(((vt1.c0)|(NULL)))))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) FROM rt0, rt1, vt0, vt1 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3)))) NOT NULL) ASC  NULLS LAST, (+ (rt0.c0)) DESC; -- 0ms;
SELECT DISTINCT SUM(CAST(rt1.c1 AS INTEGER)) FROM vt1, rt1 WHERE ((~ (CASE WHEN 1671495325 THEN 'ꚉji6u5' WHEN x'' THEN NULL WHEN -1587289598 THEN NULL END))); -- 0ms;
SELECT DISTINCT (NOT (((('1660037868'))<=((rt0.c0))))) FROM vt1, rt0, rt1 WHERE ((((+ ('䫮'))) NOT BETWEEN (CASE -1141059954  WHEN NULL THEN 0.09585919043965474 WHEN '0.8039826505246974' THEN 'TyB' WHEN x'' THEN 6.16152852E8 ELSE NULL END) AND (1949319309))); -- 0ms;
SELECT (((rt1.c3 COLLATE RTRIM))<>((TOTAL(rt1.c3)))) FROM rt0, rt1 WHERE (((CAST(0.11896172193329835 AS NUMERIC)) BETWEEN (((x'418a') NOTNULL)) AND (((((((((NULL)OR(0x7929ecc4)))OR(NULL)))OR('-313109436')))AND('诽L㓣->އsO'))))); -- 0ms;
SELECT ((x'')/(rt1.c0)) FROM rt1, vt0 WHERE ((((NULL)) NOT BETWEEN (((((NULL))>=((NULL))))) AND (('1323806616')))); -- 0ms;
SELECT ((COUNT(*))!=((('') NOTNULL))) FROM rt0, rt1, vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(((rt1.c1)IS(rt1.c3))) OVER ( PARTITION BY (('333688862') NOTNULL), (((((rt1.c3 IN ()))AND(((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))))OR((rt0.c0 IN ())))) FROM vt0, rt0, rt1 WHERE ('hQ') ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c1))))<>((((('1539359405')OR(rt0.c1)))AND(rt1.c3)))) ASC  NULLS LAST; -- 0ms;
SELECT TOTAL(rt1.c2) FROM rt0, vt0 ORDER BY ((((rt1.c2) NOTNULL))>(((rt1.c3) IS TRUE))) ASC;SELECT ALL (((rt1.c1 COLLATE BINARY))>(((rt0.c1 IN (vt1.c0))))), (((rt0.c2 COLLATE RTRIM))>((((rt1.c0)LIKE(rt0.c2))))), CASE WHEN (2.138662928E9 IN (vt1.c0)) THEN CAST(x'' AS TEXT) END FROM vt1, rt1, vt0, rt0; -- 0ms;
SELECT ALL CAST(((rt0.c0)IS NOT(vt0.c0)) AS NUMERIC), (((((rt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)), vt1.c0 COLLATE BINARY, ((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c1))))>=(((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))), ((rt0.c1)*(vt1.c0)), (- (vt1.c0))))), AVG(TRIM(DISTINCT rt1.c0)) OVER () FROM rt0, vt0, vt1;SELECT DISTINCT ((((~ (rt1.c1)), rt1.c1, (((rt0.c1, rt1.c1, NULL))>=((rt0.c2, rt1.c3, vt1.c0)))))<=((((rt1.c1)>(rt0.c0)), vt1.c0 COLLATE BINARY, IFNULL(DISTINCT rt0.c2, rt1.c1)))) FROM rt1, rt0;SELECT ((((UPPER(rt1.c0))OR(((rt0.c2)AND(rt1.c2)))))OR((((rt1.c2))>=((vt0.c0))))), (((AVG(vt0.c0)))>=((CAST(vt1.c0 AS NUMERIC)))), (((rt0.c0, rt1.c2, vt1.c0)) BETWEEN ((CAST(rt1.c1 AS TEXT), ((rt0.c2) NOTNULL), (rt0.c1 IN ()))) AND ((vt0.c0, vt0.c0 COLLATE BINARY, IFNULL(DISTINCT rt1.c0, vt1.c0)))), (+ (0X550647f5)), rt1.c2 FROM rt0, rt1, vt0 ORDER BY ((((-771141291)AND((((rt0.c2))>=((vt1.c0))))))OR(((rt0.c2)<<(rt1.c0))))  NULLS LAST, (((rt0.c2)>>(rt0.c0)) IN ()), (((((vt0.c0)<(rt0.c0))))<((x''))) DESC;SELECT ALL ((CAST(0.8227152868707107 AS TEXT)) BETWEEN (vt0.c0) AND (vt0.c0)) FROM vt0, vt1; -- 0ms;
SELECT ALL (((((((((((vt1.c0)OR(vt1.c0)))OR(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)), COUNT(rt0.c0), (rt0.c0 IN ()), COUNT(*), CAST(rt1.c2 AS REAL)))<>((rt0.c0 COLLATE BINARY, vt0.c0 COLLATE RTRIM, ((rt0.c0) NOT NULL), 152818639, CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END))), COUNT(*) OVER ( ROWS  CURRENT ROW), (+ (((0.58250821437426) NOT NULL))) FROM rt1;SELECT DISTINCT ((vt0.c0) IS FALSE) COLLATE BINARY FROM vt1, vt0 WHERE (-17678309); -- 0ms;
SELECT DISTINCT (NOT (rt0.c2)) FROM rt1, rt0; -- 0ms;
SELECT ALL LIKELIHOOD(GROUP_CONCAT(rt0.c2), 0.3590201639472006) FROM rt0, rt1 WHERE ((((1.245647683E9)) NOT BETWEEN ((((((((((((((0.3558013420624184)AND(1.99482829E9)))AND(0Xffffffffbbfcce8e)))OR(NULL)))AND('')))AND(0.5265555775405685)))AND('-992354147')))) AND ((NULL)))); -- 0ms;
SELECT DISTINCT rt1.c2 COLLATE BINARY FROM vt1;SELECT DISTINCT rt0.c2 FROM rt1, vt1, rt0, vt0; -- 0ms;
SELECT ALL ((rt1.c0 COLLATE NOCASE) BETWEEN (NULL) AND (((rt0.c1)/(rt0.c0)))), ((rt1.c1) BETWEEN (((((rt1.c0)OR(rt1.c3)))AND(rt1.c0))) AND (TRIM(rt1.c0))), rt1.c1 COLLATE RTRIM FROM vt1 WHERE ((((NULL COLLATE BINARY))<((STRFTIME(x'32a1', 0.03199257469951344, -1938941070)))));