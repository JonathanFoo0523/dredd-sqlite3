-- Time: 2024/06/07 00:31:57
-- Database: database73
-- Database version: 3.40.0
-- seed value: 3804346673
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (x'', 0.24661715752634517); -- 1ms;
PRAGMA temp.cache_spill = true; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('0.24661715752634517'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c3, c4) VALUES ('-681916801', 0.24661715752634517, 0.8693005168111586, NULL), (0.27867905633758017, 0.328203957427626, NULL, 0.13783704223897675), (0.567877366532243, x'', x'', x''); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 13ms;
ANALYZE vt0; -- 11ms;
DELETE FROM vt0; -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.567877366532243); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT DISTINCT (((x'7ec1')) BETWEEN ((MAX(rt0.c1, rt0.c2, rt0.c0, rt0.c1))) AND ((((rt0.c4) IS FALSE)))) FROM vt0, rt0 WHERE (NULL); -- 0ms;
VACUUM main; -- 1ms;
PRAGMA stats; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'943b', 'lAJ왿㲴q', 0.15478323828521556, NULL, '(e'), (0.13783704223897675, 0.21243765385768687, x'', NULL, '-681916801'), (0.567877366532243, 0.13783704223897675, x'f782', 0.7110218020480735, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 1ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 2ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (0.5559283261523001, -6.81916801E8, x'', 0.3793280869912595, '-681916801'); -- 1ms;
PRAGMA incremental_vacuum; -- 0ms;
ANALYZE rt0; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2) VALUES ('0.3793280869912595', '-681916801'), (x'', ''), ('(E', NULL); -- 0ms;
INSERT OR ABORT INTO rt0(c4, c3, c1) VALUES ('1024364378', NULL, '+b5#qz7{B'), ('1585098471', '-681916801', 0.6503138419018891), (0.14797597470668822, '', x'75c1a001'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 INSTEAD OF INSERT ON v0 FOR EACH ROW  BEGIN DELETE FROM rt0 WHERE ((CAST(rt0.c3 AS BLOB)) NOTNULL);END; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c3, c0, c1) VALUES (NULL, x'9fe0', 0.04421189725605279, (((((NULL IN ()))AND((('1585098471') IS TRUE))))OR(((NULL) ISNULL)))), (x'1128', 0Xffffffffd48b282c, -6.81916801E8, ''), (x'c31d', NULL, '-1950830829', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4) VALUES (NULL, '1068796218'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('330385681', x'dc3b', '', '', 0X5e7aaee7); -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR REPLACE INTO rt0(c4) VALUES (NULL), ('yV'), (x''), ('1462458636'), (''); -- 7ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1585098471);\n; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.45621932104573804); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (1508726527), ('8'), (-7.29077716E8); -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('330385681'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES ('-729077716', 0.9050458902292335, NULL, '1068796218', ''); -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c1) VALUES (1068796218, '-681916801'); -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c1) VALUES (NULL, x''); -- 0ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES (NULL, (CAST(x'19ef' AS REAL) IN ((NOT ('160738118')), (('-1502508303') BETWEEN (0.5559283261523001) AND (x''))))), (NULL, x''), ('>w', 0.8693005168111586); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c2) VALUES ('1462458636', '618111428', ''); -- 0ms;
PRAGMA main.ignore_check_constraints = true; -- 0ms;
REINDEX; -- 0ms;
DROP VIEW v0; -- 0ms;
ANALYZE; -- 0ms;
REINDEX  vt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1502508303 unordered'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1502508303'), (x''), (3.30385681E8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c0) VALUES (x'd481', '01F'), (x'', 0.16611471205792738), (x'', NULL), (x'', x'74d8'), ('-1502508303', 1.462458636E9); -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES ('1024364378', x'', NULL); -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES (NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) BETWEEN (x'') AND (NULL)))); -- 0ms;
PRAGMA temp.threads = 5915361015233421657; -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES ('-1237299323', x'', 'Bo<%'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR REPLACE INTO rt1(c0) VALUES (NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (x''), (9223372036854775807); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (CAST((((0Xffffffffd48b282c, '479179521', '330385681', x'', NULL))<((0X24d7a1c4, NULL, '', '160738118', x'c91c'))) AS INTEGER)); -- 6ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 COLLATE NOCASE AS REAL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT LIKE(((rt1.c0) IS TRUE), CAST(rt1.c2 AS REAL)), HEX(DISTINCT ((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c0))), CASE CAST(rt0.c4 AS NUMERIC)  WHEN (rt0.c3 IN ()) THEN x'' WHEN MAX(rt0.c1) THEN (rt0.c4 IN (rt1.c2)) WHEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt1.c1)) THEN LOWER(rt0.c1) WHEN ((vt0.c0)-(0.09450441546413735)) THEN ((((rt1.c2)AND(rt0.c0)))OR(rt1.c2)) WHEN (rt0.c0 IN (rt0.c2)) THEN ((rt1.c1) ISNULL) END, rt1.c0, ((((rt0.c0)LIKE(rt0.c0)))<(rt0.c1 COLLATE BINARY)) FROM rt0, rt1, vt0 ORDER BY CAST(((((((((((((rt1.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt1.c0)))AND(rt0.c1)))AND(rt1.c2)) AS REAL) ASC; -- 1ms;
SELECT rt0.c3 FROM rt0, vt0, rt1 WHERE ((((NULL IN (NULL)))+(CASE '34pX'  WHEN x'b989' THEN NULL ELSE NULL END))); -- 0ms;
SELECT DISTINCT CASE WHEN (((rt1.c1))<((rt1.c2))) THEN (rt1.c2 IN ()) WHEN ((rt1.c0) NOTNULL) THEN rt1.c0 COLLATE NOCASE WHEN LIKELY(rt0.c2) THEN NULL ELSE MIN(-1779238851) END FROM rt0, vt0, rt1; -- 0ms;
SELECT ALL TYPEOF(DISTINCT rt0.c0 COLLATE RTRIM), ((CAST(rt0.c3 AS INTEGER)) IS TRUE), (CASE 0.8693005168111586  WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END IN (GROUP_CONCAT(rt0.c2))) FROM rt0, vt0 NOT INDEXED WHERE (CASE WHEN (((0.0749588441359259)) NOT BETWEEN ((0Xfffffffffb710013)) AND ((1585098471))) THEN (NOT (x'')) WHEN -7.6480493E7 COLLATE NOCASE THEN CASE x'aca0'  WHEN NULL THEN 0.4497403675112581 WHEN NULL THEN NULL WHEN 2059619940 THEN '()' ELSE '^~C\r' END WHEN CASE NULL  WHEN '330385681' THEN 0.04540628071409447 END THEN (+ (NULL)) ELSE (+ ('')) END);SELECT ((((rt0.c4)IS(NULL)))OR(0.8489842920829554)) FROM vt0, rt1, rt0 WHERE ((((0.03617270922315241)) BETWEEN ((('' IN ()))) AND ((((('pg௨X/'))<>((''))))))); -- 0ms;
SELECT ALL ((((((((((rt0.c3)OR(rt1.c0)))AND(vt0.c0)))AND(rt1.c2)))OR(vt0.c0)))LIKE((+ (rt0.c1)))) FROM rt1, rt0 INNER JOIN vt0 ON IFNULL(x'', (rt0.c4 IN (rt1.c1))); -- 0ms;
SELECT DISTINCT ((0.04404434306252658 COLLATE NOCASE) NOT BETWEEN (CAST(x'ce53' AS BLOB)) AND (rt0.c4 COLLATE RTRIM)), CASE CAST(rt1.c1 AS NUMERIC)  WHEN ((rt0.c0)IS(vt0.c0)) THEN GROUP_CONCAT(rt0.c4) ELSE CAST('' AS INTEGER) END, json_array(((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)), '-681916801') FROM rt0, rt1, vt0 GROUP BY ((CASE WHEN rt1.c2 THEN NULL END) NOTNULL), CAST((('-890741727') IS FALSE) AS INTEGER), ((CAST(rt0.c0 AS INTEGER))>=(((rt0.c0) NOTNULL))) HAVING json(rt0.c3) COLLATE BINARY COLLATE RTRIM; -- 2ms;
SELECT DISTINCT NULL FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((((((rt0.c4)AND((+ (rt0.c1)))))OR(0.910729897749508)))OR(rt0.c3)))AND((('')IS(rt0.c2)))), AVG((((((((('1585098471')OR(rt0.c1)))OR(rt0.c0)))OR(rt1.c0)))OR(rt0.c0))), (MAX(rt1.c0) IN ()) FROM vt0, rt0 WHERE (((((x'8527') NOT NULL)) NOT BETWEEN ((('-37378530') BETWEEN (NULL) AND (454863602))) AND (((NULL) ISNULL))));SELECT TRIM(DISTINCT rt1.c0, ((((rt0.c0)OR(rt0.c4)))AND(rt1.c0))) FROM vt0, rt0, rt1 WHERE (TYPEOF(DISTINCT '(e') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((rt0.c2)+(rt0.c1)) COLLATE RTRIM, ((((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c0))) BETWEEN ((NOT (rt0.c2))) AND (((rt0.c4)AND(rt1.c1)))), NULLIF(DISTINCT '', LIKE(rt0.c2, 1.462458636E9)) FROM rt1 ORDER BY ((NULL) NOT BETWEEN ((((rt0.c2))==((rt0.c1)))) AND ('-1802433133')) DESC  NULLS LAST;SELECT DISTINCT rt0.c1, (+ (((vt0.c0)>>(rt1.c0)))), (((rt1.c1)) NOT BETWEEN (((rt0.c3 IN (rt0.c4)))) AND ((NULL))) FROM rt1, rt0;SELECT ALL ((((((((((vt0.c0) ISNULL))AND(((rt0.c2)<=(rt0.c4)))))AND(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(SUM(rt1.c2))))AND(rt0.c3)) FROM vt0;SELECT (((NULL IN ()))IS((rt0.c3 IN ()))) FROM vt0 WHERE (((CASE 0.10139060921895438  WHEN x'' THEN 0.39519209899253993 ELSE NULL END) BETWEEN ((('')<(x''))) AND (((x'')=('330385681'))))); -- 1ms;
SELECT DISTINCT rt0.c2, NTH_VALUE(CASE CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END  WHEN rt1.c2 THEN ((((rt1.c2)AND(rt1.c0)))OR(rt1.c0)) END, ((((vt0.c0)+(vt0.c0))) BETWEEN (LIKELIHOOD(rt1.c0, 0.6763590348130021)) AND (CAST('sDWY褺' AS REAL)))) OVER (), CASE rt0.c1  WHEN rt1.c1 THEN ((((rt0.c3)OR(rt1.c0)))OR(rt1.c0)) ELSE (- (rt1.c0)) END FROM vt0, rt1;SELECT DISTINCT (((vt0.c0) NOT BETWEEN ('1381452770') AND (rt1.c0)) IN ()) FROM rt0 WHERE (CASE WHEN '9' COLLATE NOCASE THEN CASE WHEN 0X52574be2 THEN NULL WHEN 1585098471 THEN x'' WHEN x'' THEN NULL ELSE x'' END END); -- 0ms;
SELECT ALL (TRIM(rt0.c1) IN ()) FROM vt0 WHERE (LIKELY(0x672b43c3 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c2)OR(rt1.c2)))OR(rt0.c0)))AND(rt1.c1)))OR(rt0.c4)))|(((((((((rt0.c4)AND(rt0.c1)))AND(rt1.c1)))OR(rt0.c0)))AND(vt0.c0)))), (((('-52245886')AND(rt0.c3)))AND(x'a160' COLLATE RTRIM)), ((((rt0.c2) IS FALSE))>=((rt1.c0 IN ()))), CAST((((rt0.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS NUMERIC), (~ ((((rt1.c1))>=((rt0.c2))))) FROM rt0, vt0, rt1; -- 0ms;
SELECT (((((((x'', rt1.c2, x'735a'))=((rt0.c0, vt0.c0, rt0.c0))))OR(CAST(rt1.c1 AS INTEGER))))AND(rt0.c2)) FROM rt1, vt0 INNER JOIN rt0 ON ((((((rt1.c0)OR('')))AND(rt1.c2))) BETWEEN (CASE rt0.c1  WHEN rt1.c1 THEN rt0.c4 WHEN rt0.c0 THEN NULL WHEN NULL THEN rt1.c1 ELSE rt0.c4 END) AND (((rt1.c2)<(rt0.c3)))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN rt0.c0 WHEN rt1.c0 THEN rt1.c1 END AS REAL) FROM rt1 WHERE (((('\n{')) BETWEEN ((('(e' IN (NULL)))) AND (((((x''))>=((0.9146463244770098)))))));SELECT DISTINCT GROUP_CONCAT(((((((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))OR(rt1.c0)))AND(rt0.c3)))AND(rt0.c2))) OVER () FROM vt0, rt0, rt1; -- 4ms;
SELECT DISTINCT (NOT (CASE WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt1.c0 END)) FROM vt0 CROSS JOIN rt0 ON CAST(rt0.c3 AS NUMERIC) COLLATE NOCASE COLLATE BINARY ORDER BY ((((-52245886)AND(((rt1.c1) NOTNULL))))AND((rt0.c1 IN ())))  NULLS LAST;SELECT DISTINCT GROUP_CONCAT((((0.9519496370205766, rt0.c4, rt1.c1)) BETWEEN ((rt0.c3, rt0.c1, rt1.c0)) AND ((rt0.c4, vt0.c0, rt0.c1)))) FROM rt0, vt0, rt1 WHERE (((((NULL) NOT BETWEEN (x'') AND (x'')))LIKE(CAST(0.024200685490232132 AS BLOB)))) GROUP BY (~ (rt1.c2)) COLLATE BINARY, CAST(((rt0.c1)>(vt0.c0)) AS BLOB), (((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((x''))))IS((((rt1.c2, rt0.c1, rt0.c1))<=((rt1.c0, rt0.c4, rt0.c0))))) ORDER BY NULL COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT ((x'd40c') NOT NULL) FROM vt0, rt0; -- 0ms;
SELECT DATETIME(rt1.c0 COLLATE NOCASE, ((0.0749588441359259) BETWEEN (rt0.c0) AND (rt0.c1)), (vt0.c0 IN (rt0.c0)), ((rt0.c0)IS NOT(rt1.c2)), highlight(vt0.c0, rt1.c1, rt0.c4, rt0.c4)) FROM vt0, rt1 WHERE ((- (((NULL) NOT BETWEEN ('1轚') AND (NULL))))) ORDER BY (((rt1.c1 IN (rt1.c2)))<(((rt0.c3)<(rt0.c4))));SELECT DISTINCT ((load_extension(rt0.c4)) NOTNULL), ((((rt0.c0) ISNULL)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (MIN(rt1.c1))), ((((CAST(rt1.c2 AS INTEGER))AND(CAST(vt0.c0 AS NUMERIC))))AND(((rt0.c2)+(rt0.c2)))) FROM rt0;SELECT DISTINCT ((((rt1.c1) IS TRUE)) NOTNULL) FROM vt0 GROUP BY ((((rt0.c4)LIKE('ugL\'))) NOTNULL), rt0.c0, CAST(rt0.c1 AS TEXT) COLLATE RTRIM;SELECT ((SQLITE_SOURCE_ID())-((((rt0.c4)) BETWEEN (('-1459114554')) AND ((rt0.c3))))), NULL, GROUP_CONCAT((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c1)))) OVER () FROM rt0, vt0 WHERE ((((((((((((NULL, NULL, '618111428')) BETWEEN ((x'', 1.60738118E8, 'G')) AND ((x'', NULL, x''))))OR(((x'') NOTNULL))))AND(highlight(0.7935493704905523, 'W껧{諱hafa}', 'B竣', '1585098471'))))AND((x'' IN ()))))OR(((NULL)%('')))));SELECT ((MIN(vt0.c0)) NOT BETWEEN ((NOT (rt0.c3))) AND (((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) FROM rt0 WHERE (((x'ea7b')<<('1307745773' COLLATE BINARY))) LIMIT 2004056803 OFFSET -1502508303;SELECT (- (IFNULL(DISTINCT rt0.c2, rt1.c2))), '', ((CAST(rt0.c1 AS TEXT))>=(rt1.c2)) FROM vt0, rt0 LIMIT -1744854743 OFFSET 1159645155;SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 WHERE (highlight((((x'1c1d', x'', 'N5J/'))<(('64642893', NULL, 0.30605456617719895))), (NOT (0.9077506693510364)), ((1.039731688E9) IS FALSE), ((1855473178)OR(NULL))));SELECT DISTINCT ((SUM(rt1.c2))&(((((rt0.c2)OR(rt0.c1)))OR(NULL)))) FROM vt0;SELECT (- (COUNT(*))) FROM vt0, rt0, rt1 ORDER BY CASE (+ (rt0.c3))  WHEN x'2046' THEN CASE '-1249393232'  WHEN rt0.c3 THEN rt0.c2 END END, (TYPEOF(vt0.c0) IN ()) DESC  NULLS FIRST, (rt0.c3 IN (rt0.c4)) COLLATE RTRIM DESC; -- 0ms;
SELECT ALL ((((CASE WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c1 END)AND((((rt1.c2))<=(('943761926'))))))AND(rt1.c2)), ((((((rt0.c0) IS FALSE))AND(((((rt1.c1)AND(rt1.c2)))AND(rt0.c4)))))OR(((rt1.c0)/(rt1.c0)))), GROUP_CONCAT((((rt1.c1, rt0.c4, rt1.c1)) BETWEEN ((vt0.c0, rt1.c2, rt0.c0)) AND ((rt0.c4, rt0.c4, rt0.c1)))) FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_USED((('-530285020')-(NULL))));SELECT ALL rt0.c3 FROM vt0, rt0 WHERE (PRINTF('1508726527' COLLATE NOCASE)) LIMIT 1381452770 OFFSET 639253684; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt0, rt1, vt0 WHERE (((((NULL) NOT BETWEEN (0Xffffffffb52669c8) AND (x'084e'))) BETWEEN (((NULL)<<(NULL))) AND (CASE NULL  WHEN 'y-~[n唈|h(' THEN '0.8489842920829554' WHEN '-1950830829' THEN NULL WHEN NULL THEN '-1779238851' END))); -- 0ms;
SELECT ALL NTILE((((x''))<=((((rt0.c2)|(rt0.c2)))))) OVER (), NULL, ((((((rt0.c4) IS TRUE))OR((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))))AND(CAST(rt0.c0 AS INTEGER))) FROM rt0 WHERE (((CASE WHEN 0.2786898061407257 THEN '댁2>' ELSE x'' END) NOT NULL)) ORDER BY CASE rt1.c2  WHEN SQLITE_VERSION() THEN ((((rt1.c0)AND(rt1.c2)))AND(rt0.c0)) ELSE CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c0 END END;SELECT DISTINCT (~ ((rt1.c1 IN ()))) FROM rt0, vt0 WHERE (((NULL) NOT NULL)); -- 0ms;
SELECT ((-9223372036854775808) NOT NULL) COLLATE RTRIM FROM rt1 WHERE (LOWER(DISTINCT ((0.9463183422336697)<(0.048633707161253814)))) LIMIT 1359866322 OFFSET 842684077; -- 0ms;
SELECT (((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((''))))IS NOT(((x'')<=(rt0.c4)))), FIRST_VALUE(rt1.c0) OVER (), TRIM((NOT ('eH'))) FROM vt0, rt1;SELECT ALL (+ (((('_Pz'))<>((rt0.c4))))) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)OR(rt0.c2)))!=(CAST(rt1.c2 AS INTEGER))) FULL OUTER JOIN vt0 ON ((LIKELY(rt0.c3))<>(IFNULL(DISTINCT rt0.c3, vt0.c0))) WHERE (-1097025751) ORDER BY ((((rt0.c1, rt0.c1, vt0.c0, rt0.c4, rt1.c1)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c3, rt1.c2, rt0.c3, rt0.c0, rt0.c0))) IN (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) ASC; -- 5ms;
SELECT ALL ((rt0.c0)IS(LIKELY(DISTINCT rt0.c4))), NULL, (((rt1.c1) NOT NULL) IN ()) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT CAST('-104584017' AS BLOB) COLLATE BINARY, (((rt0.c0 IN (rt0.c2))) BETWEEN (((((((((rt1.c0)OR(rt1.c1)))AND(vt0.c0)))AND(rt1.c0)))AND(rt0.c0))) AND (CASE WHEN rt1.c2 THEN x'' ELSE vt0.c0 END)), FIRST_VALUE(CAST(rt1.c0 AS NUMERIC)) OVER () FROM rt1 WHERE (((NULL) IS TRUE) COLLATE BINARY);SELECT DISTINCT GROUP_CONCAT((rt0.c3 IN ())) OVER () FROM rt1, rt0, vt0 WHERE ((((('639253684' IN (0.7860724793268014, NULL))))>((CAST(0.05863495340761249 AS INTEGER))))) LIMIT 192123260; -- 0ms;
SELECT DISTINCT SUM((- (rt1.c0))) OVER ( ORDER BY (((((((((rt0.c2 IN ()))AND(x'dd9d')))AND((((rt0.c2))!=((rt1.c0))))))AND(((rt1.c0)<>(rt0.c2)))))AND((+ (rt1.c2)))) ASC), CUME_DIST() OVER (), (NOT (((rt1.c2) ISNULL))) FROM rt1, vt0; -- 0ms;
SELECT ALL CASE ABS(rt1.c2)  WHEN ((rt0.c3) NOTNULL) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN '583314594' END ELSE ((rt1.c0)!=(vt0.c0)) END, LAG(CASE rt0.c3  WHEN ((('1159659630')) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))) THEN ((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) ELSE ((NULL)+(rt1.c1)) END, ((((rt1.c2) BETWEEN (rt1.c2) AND (0.022028254697854854)))<<((- (rt0.c0)))), x'' COLLATE BINARY) OVER (), (~ (rt0.c4 COLLATE BINARY)) FROM rt1, vt0, rt0 WHERE (UPPER(CASE WHEN 1160444955 THEN 0.16611471205792738 ELSE x'875e' END)); -- 1ms;
SELECT DISTINCT ((((((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(json_type(rt1.c0))))AND(((rt1.c0) ISNULL))) FROM rt0, vt0, rt1 WHERE ((((x'81da' IN ())) NOT BETWEEN (HEX(DISTINCT 'J99[X')) AND (0.7110218020480735))); -- 0ms;
SELECT CASE WHEN ((((rt1.c2)OR(rt0.c0)))OR(rt1.c1)) THEN rt0.c4 ELSE ((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)) END, '842684077', ((COUNT(vt0.c0))IS((((vt0.c0))!=((0X3c882638))))) FROM rt0;SELECT (CAST(rt0.c4 AS TEXT) IN ()) FROM rt1, rt0 LIMIT -581434175; -- 0ms;
SELECT ALL rt0.c3 FROM vt0, rt1 WHERE (x'c2a8f7f2');SELECT ALL CASE WHEN rt1.c0 THEN ((rt1.c1)<=(rt0.c3)) END FROM rt0 WHERE (CAST((('-1779661819')|('1359866322')) AS BLOB));SELECT DISTINCT (((rt0.c2)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((CASE '\n{'  WHEN rt0.c4 THEN NULL ELSE rt1.c2 END))) FROM rt1, rt0, vt0 WHERE (((((0Xa33ca84)LIKE(x'')))!=(((-1.779238851E9) NOT BETWEEN ('Wv') AND (x''))))) GROUP BY (rt1.c2 IN ()), ((CASE 0.8711549348916638  WHEN rt1.c0 THEN 1.585098471E9 WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 END)<>(((((rt1.c1)OR(rt0.c1)))OR(x'63d6')))), (NOT (CASE WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c4 END)) HAVING (((((rt1.c0) IS FALSE)))<>(('-1216379556' COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT (('-991912140')-((-3.737853E7 IN ()))) FROM rt0, vt0, rt1 GROUP BY (((((NULL)IS(rt1.c0)), ((vt0.c0)+(rt0.c0)), (+ (rt0.c1))))<((((x'') BETWEEN (rt0.c4) AND (0Xffffffffaac53d73)), ((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c1)), (NOT (rt1.c2))))) HAVING (COUNT(rt1.c0) IN ()); -- 4ms;
SELECT DISTINCT CASE (((rt0.c3)) BETWEEN ((rt1.c0)) AND ((vt0.c0)))  WHEN (~ (rt0.c0)) THEN (rt0.c0 IN ()) WHEN rt0.c1 COLLATE RTRIM THEN MAX(rt1.c2) WHEN (+ (rt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN (((vt0.c0, rt0.c2, rt0.c4))>=((rt0.c2, NULL, 'j('))) THEN COUNT(*) WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN rt0.c4 END, vt0.c0, rt1.c1 FROM rt0, rt1, vt0 WHERE (((CASE WHEN x'3e834169' THEN '1970415235' ELSE x'' END) BETWEEN (TIME(NULL, x'', NULL)) AND ((('-1237299323') IS TRUE)))); -- 0ms;
SELECT CASE WHEN CASE rt0.c4  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c0 END THEN COUNT(*) ELSE UPPER(rt0.c2) END FROM vt0, rt1 WHERE (CASE WHEN NULL THEN 0.06714593063265328 END);SELECT DISTINCT ((((CAST(rt0.c0 AS REAL))OR(((rt1.c0)GLOB(rt1.c2)))))OR('1245102220')), (((((rt0.c1, rt0.c1, rt0.c4, rt0.c1, rt0.c4))>=((rt1.c2, rt0.c0, rt1.c2, rt1.c2, rt1.c1))))OR(0.4630481369574275)), AVG(SQLITE_VERSION()) OVER () FROM rt0, vt0, rt1 WHERE (LIKELIHOOD(LIKELIHOOD(NULL, 0.20712060179938163), 0.23210908768295924)); -- 0ms;
SELECT ALL ((rt0.c1) NOT NULL) FROM rt1 GROUP BY rt1.c2;SELECT DISTINCT CASE CAST(rt0.c0 AS REAL)  WHEN ((0.8157827574189593) NOTNULL) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c1 END END FROM rt0, rt1 WHERE (((x'') IS TRUE));SELECT ALL (((((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c0)))) ISNULL) FROM rt1;SELECT ((((vt0.c0)||(rt0.c1))) BETWEEN (CAST(rt0.c4 AS NUMERIC)) AND (-1.097025751E9)), (+ ((rt0.c2 IN ()))), ((CAST(x'' AS TEXT)) NOT NULL) FROM rt1, rt0 LIMIT 1596617522 OFFSET -2006297119;SELECT ((CAST(vt0.c0 AS NUMERIC))||(CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 WHEN x'' THEN rt0.c1 WHEN rt1.c2 THEN -7.29077716E8 END)) FROM vt0, rt0, rt1 WHERE (MAX(CASE WHEN x'c702' THEN NULL WHEN '' THEN 0Xffffffffbbb0590b WHEN '\n獘\n瘲l)Q)' THEN NULL END, ((NULL)>(0Xffffffff95ec8405)))); -- 0ms;
SELECT DISTINCT SUM(0.10139060921895438) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT ((((((((((((((((rt1.c1)OR(vt0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))AND(((rt0.c4) NOT NULL))))AND((rt1.c2 IN ()))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c0 END)))AND(((rt0.c1) IS FALSE))) FROM rt1, rt0 NOT INDEXED; -- 0ms;
SELECT ALL (('2059188407')>((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL ((rt0.c1 IN ()) IN ()) FROM vt0 WHERE ((('80]Qv囿') ISNULL)); -- 0ms;
SELECT ALL (- (UPPER(rt0.c2))) FROM vt0 WHERE ((- (((NULL) BETWEEN (x'') AND (x'')))));SELECT DISTINCT (((('b5')) BETWEEN ((rt0.c1)) AND ((rt1.c0))) IN ()) FROM rt1, rt0, vt0 WHERE (CAST('-1165417647' AS BLOB)); -- 0ms;
SELECT DISTINCT x'' COLLATE RTRIM FROM vt0, rt1, rt0; -- 1ms;
SELECT ALL ((x'') IS FALSE) COLLATE NOCASE FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL CASE WHEN (rt0.c2 IN ()) THEN 0.7681242615396768 ELSE (- (rt1.c1)) END, -1.802433133E9, ((rt0.c3)<(rt0.c3)) COLLATE RTRIM FROM rt1;SELECT (- (((rt1.c0) NOT BETWEEN (NULL) AND (',a')))) FROM rt0;SELECT ((((rt0.c0)IS NOT(rt1.c2)))GLOB(rt0.c2)), (((((rt1.c2)LIKE(rt1.c0))))>=((TOTAL(rt0.c4)))), (~ (NULL)) FROM rt1, vt0 WHERE ((((NULL)!=(0X6e0c5ce4)) IN ())) GROUP BY ((rt0.c1)OR(rt1.c0)) COLLATE RTRIM COLLATE RTRIM HAVING ((((0.7734106092684396) NOTNULL))+(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1))));SELECT DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)) COLLATE BINARY FROM vt0 ORDER BY ((x'')+(CHAR(rt0.c2))) ASC  NULLS LAST;SELECT ALL (((((rt0.c3)AND(NULL)))AND(rt1.c1)) IN (((((rt1.c0)AND(rt0.c4)))OR(vt0.c0)))) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT SUM((rt1.c1 IN ())) FROM vt0, rt1, rt0 WHERE (LOWER(DISTINCT ((NULL)<=(NULL)))); -- 0ms;
SELECT ALL TRIM(DISTINCT (rt0.c0 IN (rt0.c4))) FROM rt0, rt1; -- 0ms;
SELECT ALL (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c3 END)), (((+ (rt1.c0)))/(GROUP_CONCAT(rt1.c0))), ((((((((((((((((GROUP_CONCAT(rt0.c3))OR((((rt0.c0))<=((0Xffffffffc7a0c225))))))OR(rt0.c3 COLLATE BINARY)))AND(CASE WHEN rt0.c3 THEN rt0.c1 END)))OR(NULL COLLATE RTRIM)))AND(((454863602)+(rt0.c4)))))OR(CASE rt0.c3  WHEN rt1.c1 THEN vt0.c0 END)))AND(((((((((rt0.c1)OR('7ꉺ')))OR(rt1.c0)))AND(x'a28dec0d')))OR('>F*u[7')))))OR(MIN(rt1.c1))), (+ (rt0.c3)), CASE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c2))  WHEN rt1.c2 COLLATE NOCASE THEN 0.3302831901314678 END FROM rt0, rt1 GROUP BY ((rt0.c4)<(((0.866390685311523)GLOB(rt0.c3)))), (((rt1.c0)<=(rt0.c2)) IN ()), rt1.c1;SELECT DISTINCT ((((rt0.c0)OR(COUNT(*))))OR(MIN(rt0.c0))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT '-1459114554' FROM vt0 ORDER BY ((((((rt1.c2)AND(rt0.c4)))AND(rt1.c0))) NOT NULL) ASC, x'' ASC  NULLS LAST, rt0.c0 DESC  NULLS FIRST;SELECT NULL FROM rt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt1 WHERE (((0.8564390973400803) ISNULL) COLLATE NOCASE); -- 0ms;
SELECT (((rt0.c1 IN ())) NOT NULL) FROM vt0, rt1; -- 0ms;
SELECT ALL CASE (((rt0.c0))>((vt0.c0)))  WHEN ((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c0)))AND(rt1.c0)) THEN ((rt0.c0)&(rt0.c3)) END FROM rt1;SELECT ALL CASE WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c4 THEN rt1.c0 ELSE rt0.c3 END THEN COALESCE(DISTINCT x'81a7', vt0.c0) WHEN rt0.c1 THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END WHEN CAST(vt0.c0 AS TEXT) THEN (rt0.c1 IN (rt0.c2, rt1.c0)) ELSE (~ (rt0.c4)) END FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT (NOT (((x'') NOT NULL))) FROM vt0, rt0 ORDER BY (((~ (rt1.c1))) NOT BETWEEN (((rt0.c0)<=(rt1.c1))) AND ((((rt0.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) DESC  NULLS FIRST;SELECT ALL ((((((((((('NR#')) BETWEEN ((rt0.c3)) AND ((rt1.c0))))AND(((((rt0.c4)AND(rt1.c0)))AND(rt1.c2)))))OR(rt0.c4)))OR(rt1.c1)))OR(((rt1.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)))) FROM rt0, rt1 NATURAL JOIN vt0 WHERE (((((NULL) IS TRUE)) NOT BETWEEN (((0.5634057539370387)>(NULL))) AND (((NULL) NOT BETWEEN (NULL) AND (0.6476409801736469))))) GROUP BY HEX(((rt0.c2) IS FALSE)); -- 0ms;
SELECT NULL FROM rt0 WHERE (x'' COLLATE BINARY); -- 0ms;
SELECT DISTINCT (NOT (AVG(rt0.c0))) FROM rt1, rt0, vt0 WHERE (((+ ('QbW')) IN ())); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)OR(rt1.c2)))AND(-1779661819))) NOT BETWEEN ((((vt0.c0))>((rt0.c4)))) AND (json_valid(vt0.c0))) FROM rt0, rt1;SELECT rt1.c1 FROM rt0;SELECT DISTINCT (((((rt0.c1)OR(vt0.c0)))AND(rt1.c2)) IN ()) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT (((((rt0.c2)/(rt0.c2)), ((((rt0.c2)AND(rt1.c0)))OR(rt0.c1)), rt0.c2))=((CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END, rt0.c2, CASE WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c0 END))) FROM rt0, vt0 NATURAL JOIN rt1; -- 0ms;
SELECT COUNT(((rt0.c2) BETWEEN (rt0.c3) AND ('5Y௨'))) OVER ( ORDER BY (+ ((rt1.c0 IN ()))), rt0.c3, ((rt0.c4) BETWEEN (0.810132680203949) AND (NULL))  NULLS LAST), SUM((NOT (rt0.c4))) OVER (), ((((CAST(rt0.c2 AS NUMERIC))AND(CASE WHEN rt0.c0 THEN x'' ELSE rt1.c2 END)))OR((+ (rt0.c4)))) FROM vt0, rt1, rt0 WHERE (LENGTH(('-2113187658' IN ()))) ORDER BY ((((((((rt1.c1)OR(CASE rt1.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 END)))AND(((rt1.c1)<=(rt1.c1)))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))OR(((rt0.c1) IS FALSE))) ASC  NULLS LAST, ((((rt0.c1)%(vt0.c0)))IS(rt1.c1)) DESC; -- 6ms;
SELECT vt0.c0 COLLATE NOCASE FROM rt1, rt0, vt0 WHERE ((NULL IN ())) GROUP BY (rt0.c4 IN ()) COLLATE NOCASE, (((((rt0.c4 IN ()))AND(((((rt1.c1)AND(rt0.c2)))OR(vt0.c0)))))OR(SQLITE_COMPILEOPTION_GET(rt1.c2))), ((rt0.c1)<('#')) COLLATE BINARY HAVING ((((((((((((((((rt1.c0)AND(rt1.c1)))OR(rt0.c0)))OR(((rt1.c2)/(rt1.c2)))))AND(CAST(rt1.c2 AS REAL))))AND(((rt0.c2)|(rt0.c0)))))AND(((((rt1.c2)OR(rt1.c2)))OR(rt0.c4)))))OR(((rt0.c3)>=(rt0.c1)))))OR(vt0.c0)); -- 0ms;
SELECT DISTINCT CASE 'ᯇ'  WHEN rt0.c1 THEN (rt0.c2 IN ()) ELSE ((rt0.c2) NOTNULL) END FROM vt0 ORDER BY -1.744854743E9, CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c0 END COLLATE BINARY DESC;SELECT DISTINCT ((rt1.c0 COLLATE BINARY) BETWEEN (rt1.c1 COLLATE NOCASE) AND (NULL)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT TYPEOF((+ (rt0.c3))) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL x'' FROM rt1 WHERE (((((CAST(0.8321255934934992 AS TEXT))AND(((0.15668954641239052)=(0.9703915598169248)))))AND((~ ('e#lp\ge'))))) ORDER BY ((x'051f') NOT NULL); -- 0ms;
SELECT DISTINCT ((~ (rt1.c1)) IN ()) FROM rt1, vt0 WHERE ((((('-106925327') NOT BETWEEN ('') AND (x'')))/(((((((((((((NULL)OR('-1180603180')))AND(0.39661858885172874)))AND(1.359866322E9)))AND('')))AND('2139640603')))AND(NULL))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c2)IS(rt0.c0))) AND (((vt0.c0)*(rt0.c1)))) DESC;SELECT DISTINCT (((((vt0.c0)OR(rt1.c2)))AND(rt0.c4)) IN ()), (((CAST(vt0.c0 AS REAL)))<=((NULL))), ((((SUM(vt0.c0))OR((rt0.c4 IN ()))))OR(0.7973261563844671)) FROM rt1, rt0 WHERE (((CAST('227971780' AS BLOB))>>((~ (NULL)))));SELECT ALL (((NOT (vt0.c0)))AND(TRIM(rt0.c0))) FROM rt0 WHERE (LIKE(-1.429914253E9 COLLATE NOCASE, ((('-1779661819')) BETWEEN ((NULL)) AND ((NULL)))));SELECT COUNT(CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c4 END) FROM rt1, rt0; -- 0ms;
SELECT rt0.c0, JULIANDAY(GLOB(rt0.c3, rt0.c3), ((vt0.c0)AND(rt0.c2)), ((rt1.c1) BETWEEN (rt0.c2) AND ('0.16611471205792738'))), NULLIF(rt0.c2, rt0.c4) COLLATE NOCASE FROM rt1, vt0, rt0 WHERE ((((('227971780')) NOT BETWEEN (('-890741727')) AND ((NULL))) IN ())); -- 0ms;
SELECT GROUP_CONCAT((~ (rt0.c1))) OVER () FROM rt1, rt0, vt0; -- 1ms;
SELECT DISTINCT ((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))!=(((rt1.c2)+(rt1.c0)))) FROM vt0, rt0 GROUP BY LTRIM(rt0.c1 COLLATE RTRIM), ((CAST(vt0.c0 AS INTEGER))<=(x'')), CASE (('639253684')IS(rt1.c0))  WHEN ((vt0.c0)GLOB(rt0.c2)) THEN (rt1.c0 IN ()) WHEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)) THEN rt0.c4 WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN IFNULL(DISTINCT NULL, rt1.c0) END;SELECT ((((rt0.c1)OR(vt0.c0)))LIKE(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)))), ((((((((((((((rt1.c1)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c3)))OR(rt1.c2)))OR(rt1.c0)))AND(rt0.c1))) NOT BETWEEN (ABS(rt1.c1)) AND (UNLIKELY(0.0790328658183237))), DATETIME((~ (vt0.c0)), ((rt0.c4) IS TRUE), (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), COUNT(rt1.c0), (rt0.c2 IN (rt1.c1))) FROM vt0, rt0 LIMIT -1429914253;SELECT DISTINCT CAST(((((vt0.c0)OR(0xfffffffff95a5508)))AND(rt0.c4)) AS BLOB), (((rt0.c0)&(x'')) IN ()), COUNT((~ (rt0.c4))) OVER () FROM rt1, rt0;SELECT DISTINCT rt1.c0, CASE WHEN '\n獘\n瘲l)q)' THEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt1.c0)))OR(rt0.c3)))OR(rt0.c0)) END, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE NOCASE FROM vt0, rt1 WHERE ((- (CAST('-890741727' AS REAL))));SELECT ALL ((((((rt0.c2)AND(rt1.c1)))AND(rt0.c2))) NOTNULL), (((((~ (rt1.c0)))OR(((rt1.c0)*(rt1.c0)))))OR(rt0.c3 COLLATE BINARY)), (+ (rt1.c0)) COLLATE BINARY FROM vt0 WHERE ((x'deee' COLLATE NOCASE IN ()));SELECT ((NULL) NOT BETWEEN (((rt1.c0)AND(rt0.c3))) AND (((rt0.c4)>(rt1.c1)))) FROM rt0 WHERE (CASE WHEN NULL THEN CASE WHEN '-52245886' THEN 0.1956977891493875 WHEN '''<' THEN NULL WHEN 240553803 THEN '639253684' END END);SELECT ALL (vt0.c0 IN (rt0.c4)) COLLATE BINARY, ((CAST(vt0.c0 AS INTEGER))<=(((rt0.c3)%(rt0.c4)))), ((((((((COUNT(rt1.c0))OR(rt0.c2 COLLATE BINARY)))AND(vt0.c0)))AND(json_remove(rt0.c4, rt0.c3))))AND(CAST('-52245886' AS NUMERIC))) FROM vt0, rt1, rt0 WHERE (CAST((('') NOT BETWEEN (x'8eec') AND (0.04540628071409447)) AS REAL));SELECT ALL ((((rt1.c0) NOTNULL))%(((rt0.c4)>=(rt0.c2)))) FROM vt0, rt0, rt1 WHERE (CASE WHEN '0' THEN x'' ELSE 0.22446999310154914 END COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt1.c1)IS NOT(rt1.c1)) IN ()) FROM rt1 WHERE (SUBSTR(UNLIKELY(NULL), CASE WHEN NULL THEN 0.04540628071409447 END)) GROUP BY ((((vt0.c0)>(rt0.c3))) BETWEEN ((((rt1.c2))>=((rt0.c4)))) AND (rt1.c1 COLLATE NOCASE)) HAVING ((rt1.c1)*((rt1.c2 IN ())));SELECT DISTINCT rt1.c1 FROM rt0 WHERE (CASE WHEN LIKELIHOOD(0xffffffffa1796476, 0.3751148173476131) THEN (((NULL))<=((''))) END) GROUP BY UPPER(DISTINCT rt0.c0) COLLATE BINARY HAVING (((rt1.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((CAST(rt0.c2 AS NUMERIC))));SELECT ALL (NOT ((+ ('981458551')))) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT '-584879639', ((x'') IS TRUE), (rt1.c2 IN (vt0.c0, rt0.c3)) COLLATE NOCASE FROM vt0, rt0, rt1 WHERE (((INSTR('t4', x''))!=(((((0.8920548912610711)AND('-945765851')))AND(''))))) GROUP BY rt0.c0, (((((((rt0.c4, rt1.c2, rt0.c4)) NOT BETWEEN ((rt1.c0, vt0.c0, rt0.c1)) AND ((rt0.c0, rt1.c2, rt1.c1))))AND(NULL)))AND(((rt1.c1)||(rt0.c0)))), ((rt0.c1) NOT NULL); -- 3ms;
SELECT COUNT(*), ((CASE rt1.c0  WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END) BETWEEN ((((rt0.c2))>((rt0.c3)))) AND (((0.2278182271700162) ISNULL))), (((- (rt1.c2))) NOTNULL), CAST(CASE rt0.c2  WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN 0.5824140628397281 WHEN rt0.c0 THEN rt0.c0 END AS BLOB), rt1.c0 FROM vt0 WHERE ((((('tjb~')IS NOT(0.9836909908037489)))IS((((NULL, '-246262950', 0.5810842153668745)) BETWEEN ((x'a107', NULL, x'')) AND ((x'', x'', 'm*'))))));SELECT (((vt0.c0) NOT NULL) IN ()) FROM vt0 WHERE (LOWER(DISTINCT ((NULL) BETWEEN (NULL) AND (NULL)))); -- 0ms;
SELECT DISTINCT (+ (((rt0.c0) IS TRUE))), FIRST_VALUE(((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))LIKE((NOT (rt0.c1))))) OVER (), TOTAL(((rt1.c0) IS TRUE) COLLATE BINARY) OVER () FROM rt1, vt0, rt0; -- 1ms;
SELECT DISTINCT ((rt1.c2)||(rt1.c0)), ((((((rt0.c3) NOTNULL))OR((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt1.c0, rt0.c0)) AND ((vt0.c0, rt1.c2, rt1.c1))))))AND((((rt0.c2))>((rt1.c0))))), ((((- (rt1.c0))))>((rt0.c4))) FROM rt0 WHERE (CAST(CAST(-1.502508303E9 AS REAL) AS TEXT)) LIMIT 123314810;SELECT (((rt0.c2 IN (rt0.c0))) NOT NULL) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL CASE WHEN NULL THEN (NOT (rt1.c2)) ELSE ((rt0.c1)>=(rt0.c1)) END FROM vt0, rt1;SELECT DISTINCT NTILE(((rt0.c4) NOTNULL) COLLATE NOCASE) OVER (), rt0.c1, NTILE(((CASE WHEN rt0.c3 THEN '2004056803' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 END) NOT BETWEEN (IFNULL(vt0.c0, rt1.c1)) AND (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt1.c1))))) OVER ( GROUPS BETWEEN CAST(((vt0.c0)%(rt0.c2)) AS BLOB) FOLLOWING AND  CURRENT ROW EXCLUDE NO OTHERS), ((((((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c4)))AND(rt0.c1 COLLATE NOCASE)))AND((rt0.c3 IN (rt1.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c3 ELSE rt1.c2 END)))OR((+ (vt0.c0)))), ((((IFNULL(DISTINCT rt0.c4, rt1.c0))AND(CAST(rt0.c1 AS REAL))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))) FROM rt1, vt0, rt0 WHERE (CASE (~ (x'8058'))  WHEN IFNULL(DISTINCT NULL, 0.4590055487647674) THEN CASE WHEN 0.8393635683496979 THEN NULL WHEN NULL THEN x'' WHEN 0.35326966711877794 THEN 2.2797178E8 ELSE NULL END WHEN ((((x'')AND(NULL)))OR(-1.097025751E9)) THEN (('-347757619') IS TRUE) WHEN x'' COLLATE BINARY THEN ((((NULL)OR(x'')))AND(x'')) END);SELECT DISTINCT ((((0.3248752563021563)<=(rt0.c4))) NOTNULL) FROM rt1 WHERE ((((((((((('1596617522')OR(0.45621932104573804)))OR(x'')))OR(1.068796218E9)))AND(x''))) IS FALSE));SELECT ALL ((((((rt0.c0)<=(rt0.c3)))AND(CASE WHEN '7<W&N}{4g' THEN rt0.c4 END)))AND(0.7734106092684396)) FROM vt0, rt0 WHERE ((~ (COALESCE('2139640603', x'5355')))); -- 0ms;
SELECT DISTINCT (- (3.30385681E8)) COLLATE RTRIM, rt0.c4, CAST(((rt1.c2)+(rt0.c2)) AS INTEGER) FROM rt0, vt0;SELECT DISTINCT MIN(COUNT((rt1.c0 IN (rt1.c1)))), rt1.c1, DENSE_RANK() OVER () FROM rt0, rt1;SELECT DISTINCT (- (CAST(rt0.c3 AS REAL))), CAST(((vt0.c0) NOTNULL) AS BLOB), x'' COLLATE RTRIM FROM rt1, rt0;SELECT ALL TOTAL('xa') OVER () FROM vt0, rt1, rt0 WHERE (((UNLIKELY(x'')) ISNULL)); -- 0ms;
SELECT ALL NULL, rt0.c0, (((rt1.c0))<(((+ (NULL))))) FROM vt0, rt1 ORDER BY ((vt0.c0)>>(2.40553803E8)) COLLATE NOCASE COLLATE BINARY  NULLS LAST;SELECT ALL LIKELY(vt0.c0 COLLATE NOCASE) FROM vt0, rt1, rt0 ORDER BY (((rt0.c2))==((rt0.c0))) COLLATE RTRIM; -- 1ms;
SELECT DISTINCT (- (((((((((rt0.c4)OR(rt1.c2)))OR(rt1.c2)))AND(vt0.c0)))AND(rt1.c2)))) FROM vt0;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) ISNULL) FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((rt0.c2)>>(rt1.c0))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c4)))) AND (((((rt0.c2)AND(rt1.c2)))AND(NULL)))) WHERE ((((NOT (''))) BETWEEN (0.6427353295100134) AND (((0.866390685311523)>=('((qB%o{'))))) GROUP BY (((rt1.c2, 0X42a491d1, rt1.c1)) NOT BETWEEN ((x'', rt0.c4, vt0.c0)) AND ((rt0.c0, NULL, rt0.c2))) COLLATE BINARY; -- 1ms;
SELECT ALL UPPER(DISTINCT (NOT (rt0.c4))) FROM vt0;SELECT ALL FIRST_VALUE(((rt1.c1) NOT BETWEEN (CASE rt1.c1  WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c0 WHEN '422515622' THEN rt0.c2 ELSE NULL END) AND ((NOT (rt1.c1))))) OVER (), ((0.1766804913195883)+(vt0.c0)) COLLATE RTRIM, ((CASE rt1.c1  WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c2 END) BETWEEN (MAX(rt0.c2)) AND (((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c1)))) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) BETWEEN (ABS(rt1.c1)) AND (((vt0.c0) NOT NULL))), (((~ (rt0.c3))) NOTNULL), (NOT ('-832465260')) COLLATE RTRIM FROM rt0 WHERE (((NULL COLLATE RTRIM)%(('' IN ())))) GROUP BY (((- (0X55502c81))) ISNULL), (- (CAST(rt0.c3 AS INTEGER))), CAST(rt1.c1 COLLATE BINARY AS BLOB) HAVING TOTAL('1258875919');SELECT DISTINCT ((((CAST(rt1.c0 AS REAL))OR(((((rt0.c3)AND(rt0.c4)))AND(rt1.c1)))))AND(TOTAL(NULL))) FROM rt1, rt0 WHERE ((((NULL IN ())) NOT BETWEEN (CASE WHEN -2123304321 THEN 0.8157827574189593 END) AND (NULL))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((rt0.c0) NOT NULL))LIKE(((rt0.c3) NOT NULL)))) OVER () FROM rt1, rt0, vt0 WHERE (LOWER(0.37276983119874285) COLLATE RTRIM); -- 1ms;
SELECT ALL vt0.c0 FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL LAG(NULL, TYPEOF(vt0.c0) COLLATE BINARY, ABS(((rt0.c1) NOT BETWEEN (rt0.c4) AND (NULL)))) OVER () FROM rt0, vt0; -- 1ms;
SELECT DISTINCT CAST(((((((((rt0.c3)AND(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c1)) AS NUMERIC) FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)), vt0.c0, ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2))))<=(((((x'', rt0.c2, rt0.c3))>((rt0.c1, 1.462458636E9, rt1.c0))), SQLITE_SOURCE_ID(), ((rt0.c2) ISNULL)))) RIGHT OUTER JOIN rt1 ON CASE WHEN '' THEN 0.6427353295100134 END WHERE ((((((NULL)) NOT BETWEEN (('-537026380')) AND ((x''))))/('2059619940')));SELECT ALL CAST(((rt1.c2)%(rt0.c0)) AS TEXT) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT NULL)) IS FALSE) FROM rt1, vt0, rt0 WHERE ((((763755331))<((''''))) COLLATE NOCASE COLLATE RTRIM) GROUP BY (CASE rt1.c2  WHEN 'l{' THEN rt0.c1 END IN (((vt0.c0)OR(555182227)))), (NOT (CASE NULL  WHEN rt1.c2 THEN rt0.c4 ELSE x'' END)), CASE WHEN ((rt0.c4) BETWEEN (rt1.c0) AND (rt1.c2)) THEN CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c4 END ELSE ((((rt0.c3)AND(rt0.c1)))OR(rt1.c1)) END ORDER BY (((rt0.c3 IN ()))<<((- (rt0.c3)))); -- 2ms;
SELECT DISTINCT (- ((+ (rt1.c2)))) FROM vt0 WHERE (((((0.9463183422336697) IS FALSE)) BETWEEN (((NULL)>>(NULL))) AND (((0x510de9d2)<=(0X1bdd8349)))));SELECT DISTINCT (~ (CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c2 END)) FROM rt1 NATURAL JOIN vt0;SELECT DISTINCT (- (rt0.c1 COLLATE NOCASE)) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c0)OR(rt0.c4)))AND(rt0.c2)) AS BLOB) FROM rt0, vt0 LIMIT 2016249593 OFFSET -890741727; -- 0ms;
SELECT LAST_VALUE((((((((((vt0.c0 IN ()))AND(vt0.c0 COLLATE NOCASE)))AND('')))AND((NOT (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) OVER () FROM vt0 LIMIT -1647456116 OFFSET -1460537914; -- 0ms;
SELECT DISTINCT CAST((NOT (rt0.c0)) AS BLOB) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (CAST((+ ('-890741727')) AS REAL)); -- 0ms;
SELECT ALL CUME_DIST() OVER (), NULL, ((rt0.c3) NOTNULL) FROM rt1 WHERE (1.508726527E9);SELECT DISTINCT CASE WHEN CASE WHEN rt0.c1 THEN rt1.c0 WHEN -1982106126 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END THEN ((rt0.c2) ISNULL) END, ((((((rt0.c3)||(rt0.c0)))OR(0.9544776466896799)))AND((((rt1.c1, rt0.c2, x'')) BETWEEN ((rt1.c0, rt0.c2, rt1.c0)) AND ((rt0.c1, 0.6214703502056289, rt0.c1))))), (~ (NULL COLLATE NOCASE)) FROM rt0, rt1, vt0 WHERE ((-832465260 IN ('583314594')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c3) NOT NULL)) OVER (), ((((((((TOTAL(0.8363935292468895))AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((rt1.c1) BETWEEN (rt0.c2) AND (vt0.c0)))))OR(((rt0.c4) NOT NULL))), (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((CAST(rt1.c0 AS REAL), (rt0.c0 IN ()), (- (rt0.c4)))) AND ((((rt0.c0) ISNULL), ((((rt0.c2)OR(rt1.c2)))AND(rt0.c1)), rt1.c2 COLLATE BINARY))) FROM rt0 WHERE (TRIM(((NULL) BETWEEN (x'8388') AND ('0.37276983119874285'))));SELECT DISTINCT ((rt1.c2) IS TRUE), CAST(((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c1)) AS BLOB), 'VIrUꏍZ9f' FROM rt1, rt0 WHERE (CAST((('-2031394751')<=(x'1ede')) AS INTEGER)) LIMIT 2139640603; -- 0ms;
SELECT DISTINCT (((((rt0.c4))<=((rt1.c2))))+(((vt0.c0)-(rt1.c1)))) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (~ (GROUP_CONCAT(rt1.c0))), TOTAL(json_valid(rt0.c3)) OVER (), (((- (NULL)))*(((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) FROM rt0, rt1 WHERE (((x'' IN (0.9470138315044591)) IN ()));SELECT ((((rt1.c1)<=(rt0.c0)))<>(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) FROM vt0 GROUP BY (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0 COLLATE BINARY))), (((((rt0.c0))>=((x'6341'))))%(json_array(rt0.c2, rt1.c1, x'', vt0.c0))), (NOT (((rt0.c3) BETWEEN (rt0.c3) AND (vt0.c0)))) HAVING CASE ((((rt0.c3)OR(rt0.c0)))AND(vt0.c0))  WHEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c1)) THEN LTRIM(rt0.c4, rt1.c0) ELSE (rt0.c2 IN ()) END;SELECT ALL CASE ((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c3))  WHEN ((rt0.c2)/(rt1.c2)) THEN ((rt1.c0)IS NOT(rt0.c4)) ELSE ((((rt0.c3)OR(rt0.c3)))AND(rt1.c0)) END FROM rt1, rt0, vt0 WHERE ((((x'4f51' IN ()))<=(NULL))); -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1, rt0, vt0 NOT INDEXED WHERE (((((((((((0.4760718943861453) IS FALSE))AND(CASE x'1dc0'  WHEN '-1744854743' THEN NULL ELSE 0.485287561836811 END)))AND(CAST(NULL AS REAL))))OR((((-1844285219)) BETWEEN ((x'6b7f')) AND (('YV'))))))OR(QUOTE('943761926')))); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c1 AS INTEGER) AS BLOB) FROM rt0, rt1 WHERE (((CASE '0.5634057539370387'  WHEN 'ꥑ^' THEN -977592629 ELSE x'' END)=(((0Xffffffffe67abfae)+(NULL))))); -- 0ms;
SELECT ALL QUOTE((rt0.c3 IN ())), ((CASE rt1.c1  WHEN rt0.c0 THEN rt0.c3 END)IS(HEX(rt0.c1))), ((((((((((((((((rt1.c1)OR(rt0.c0)))OR(rt0.c0)))OR(json_insert(rt1.c0, rt0.c1, rt0.c3))))AND('')))OR(TRIM(rt0.c0))))OR(CAST(rt1.c2 AS REAL))))OR(((((rt0.c0)OR(-1123021515)))AND(rt0.c0)))))AND(((rt0.c1)IS(rt0.c1)))) FROM rt0, rt1, vt0 LIMIT -581434175 OFFSET -1383886772;SELECT DISTINCT CASE CASE vt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END  WHEN ((((((((rt1.c2)AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(rt0.c4)) THEN rt0.c4 END, CAST(((vt0.c0)-(rt1.c0)) AS BLOB), (- ('74130860')) FROM rt0, rt1 WHERE ((- (((x'') NOT BETWEEN (0.03617270922315241) AND (x'3cc7')))));SELECT ALL ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (vt0.c0) AND (CAST(rt0.c2 AS BLOB))) FROM rt0, vt0, rt1 GROUP BY (('-1396270448')*(((rt0.c4)OR(rt1.c2)))); -- 1ms;
SELECT SUM(((rt1.c2) IS FALSE)) OVER (), (- (((rt1.c1) NOT BETWEEN (rt1.c1) AND (0.005302277769929975)))), rt0.c2 FROM rt1, vt0, rt0 GROUP BY (rt0.c0 COLLATE BINARY IN (((((rt0.c2)OR('-1202307661')))AND(rt1.c2)), CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN '	2F\ry	' WHEN rt0.c2 THEN rt1.c0 END)) HAVING (rt1.c2 IN (rt1.c1)) COLLATE RTRIM ORDER BY CAST((+ (rt1.c1)) AS INTEGER) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT (((~ (rt0.c2)))>=(((rt0.c4)<(0.7475608840813961)))), ((((((((x'')OR(((rt0.c0) NOTNULL))))AND((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(CAST(rt0.c0 AS TEXT))))OR(INSTR(rt1.c1, rt0.c0))), ((((rt0.c3) IS TRUE))OR(x'')) FROM rt1, rt0; -- 0ms;
SELECT ALL (~ (((((vt0.c0)OR(vt0.c0)))OR(rt0.c3)))) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT (- (LIKELY(DISTINCT NULL))) FROM vt0 WHERE (CAST(CASE WHEN '-1941740976' THEN 0.7474219790559989 ELSE '-2031394751' END AS REAL)) UNION ALL SELECT DISTINCT ((((rt0.c4)GLOB(rt0.c2))) NOT BETWEEN (((((NULL)OR(rt1.c1)))OR(rt1.c2))) AND ((((rt1.c1))<=((vt0.c0))))) FROM rt0, rt1, vt0 WHERE (((((((-1.123021515E9)>>('Infinity')))AND((('G->/萅94c,')||(1.9212326E8)))))AND('-616799847' COLLATE NOCASE))) LIMIT 1872680582 OFFSET 51017266; -- 0ms;
SELECT ((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)))OR(2134332576)))AND((((rt1.c2, rt0.c2, rt1.c1))>=((vt0.c0, x'9d1ec265', rt1.c2))))), CASE WHEN rt0.c4 THEN ((((rt0.c0)OR(rt1.c0)))OR(rt0.c4)) END, PERCENT_RANK() OVER () FROM rt1 LIMIT 1959790716 OFFSET -1206703781;SELECT rt0.c3 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((NULL)) AND ((((x'')/(rt0.c2))))) FROM vt0, rt0 WHERE (CASE ((((x'')OR(-1589727484)))AND('2016249593'))  WHEN CAST(x'' AS BLOB) THEN (((NULL))<=((0xffffffffa8f1f5c6))) END) GROUP BY ((((UPPER(rt0.c0))AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c2)*(rt1.c1)))), ((HEX(rt0.c1)) NOT BETWEEN ((rt1.c2 IN (rt0.c3, rt0.c1))) AND (((rt0.c2)>(rt0.c0)))), (((((rt0.c1)AND(rt0.c4)))AND(rt1.c1)) IN ());SELECT ALL ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) IS FALSE) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN NULL THEN rt0.c4 ELSE rt1.c0 END) NOT NULL), ((rt0.c4)-(rt0.c1)) COLLATE BINARY, CAST(((rt1.c0)||(rt0.c1)) AS INTEGER), ((((rt0.c3)>=(rt0.c4))) NOTNULL), (((CASE NULL  WHEN '-1184796759' THEN rt0.c0 ELSE rt1.c1 END, json_valid(rt0.c2), ((rt1.c2) IS FALSE), rt0.c1 COLLATE BINARY, rt0.c1))<(((rt0.c2 IN ()), CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c2 END, UPPER(vt0.c0), ((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c2)), ((rt1.c0)AND(rt0.c3))))) FROM vt0, rt0 WHERE ((((('-1e500') ISNULL))>>(CASE 'm*'  WHEN NULL THEN -227967533 ELSE 0.24404981300488426 END)));SELECT ALL ((((((((((rt1.c0)OR(rt1.c1)))OR(rt0.c4)))OR(rt0.c4)))AND(0.0035754906205757164)))IS(((rt1.c1)LIKE(rt0.c4)))) FROM vt0 ORDER BY (NOT (((rt0.c3)>>(vt0.c0)))), (((rt1.c0 COLLATE RTRIM))>=((((rt0.c1)||(rt1.c1)))))  NULLS FIRST LIMIT -1930661805;SELECT DISTINCT (((((rt1.c0)AND(rt0.c3)))OR(rt0.c2)) IN ()) FROM vt0, rt1, rt0 LIMIT 1730888643 OFFSET 263152385; -- 0ms;
SELECT ALL AVG(((rt1.c1)-(rt0.c3))) FILTER(WHERE ((rt0.c2) IS FALSE) COLLATE NOCASE) OVER () FROM rt1, rt0, vt0; -- 0ms;
SELECT (((rt0.c1)) BETWEEN ((NULL)) AND (((rt0.c2 IN ())))) FROM rt0, rt1 NATURAL JOIN vt0 WHERE ((NOT (((NULL) NOT BETWEEN (0.21571844711091792) AND (0Xffffffffdce01c13))))); -- 1ms;
SELECT DISTINCT CAST(((((rt0.c1)AND(rt0.c3)))OR(rt1.c0)) AS REAL), CASE WHEN (((rt0.c4, vt0.c0, rt0.c1)) NOT BETWEEN ((-1.216379556E9, rt1.c0, rt0.c0)) AND ((NULL, rt0.c2, rt1.c1))) THEN CAST(rt1.c2 AS REAL) END, (+ ((~ (vt0.c0)))) FROM vt0;SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((rt1.c1 COLLATE BINARY)) AND (((rt0.c2 IN (rt0.c3))))) FROM rt1, vt0, rt0 WHERE (((((((-1146070773)>=('-1731499916')))AND(-1.383886772E9)))OR(rtreenode('<ꏍl', 40718521)))) LIMIT 1006871601; -- 0ms;
SELECT ALL (((((rt0.c2)IS NOT(rt1.c2)), UNLIKELY(DISTINCT rt1.c1), CASE rt0.c4  WHEN x'e3d5' THEN rt0.c2 END))<((rtreenode(NULL, rt1.c0), ((rt1.c1)=(rt0.c0)), (rt1.c0 IN ())))), x'', (((((rt0.c0)OR(vt0.c0)))AND(rt1.c2)) IN ()) FROM rt0;SELECT ((NULL)<<(LIKE(rt0.c2, rt1.c0))) FROM vt0;SELECT DISTINCT ((((rt0.c3)<=(vt0.c0)))>=((((rt1.c0))>((rt1.c0))))) FROM vt0;SELECT DISTINCT ((((rt0.c0) IS TRUE))<=(((rt0.c1)<(rt0.c2)))) FROM rt0 WHERE (IFNULL(DISTINCT (('tV')>=('SDWY褺')), ((((NULL)OR(NULL)))OR(x'')))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END) NOT BETWEEN ((- (vt0.c0))) AND (rt0.c0)) DESC  NULLS LAST, rt0.c4  NULLS LAST, LOWER(DISTINCT CAST(rt1.c1 AS REAL)) ASC;SELECT DISTINCT TYPEOF(DISTINCT (rt1.c2 IN ())) FROM vt0; -- 0ms;
SELECT ALL MIN(MIN(((vt0.c0)/(rt1.c2)))) FROM rt0, vt0 WHERE (((NULL) IS TRUE));SELECT DISTINCT '401091737' FROM rt1, vt0, rt0 WHERE (((((CAST(NULL AS NUMERIC))OR((~ (0xffffffffeb45a3cd)))))AND((('1269858086') NOT BETWEEN ('-1443716603') AND (0.764572119885196))))) LIMIT -350718870; -- 0ms;
SELECT DISTINCT (((('+.') IS FALSE))OR(((((rt1.c2)OR(vt0.c0)))OR(rt1.c2)))) FROM rt1, vt0; -- 1ms;
SELECT DISTINCT CAST(rt0.c2 AS TEXT), (((vt0.c0)GLOB(rt0.c2)) IN ()), ((HEX(rt1.c1))=(rt0.c4 COLLATE NOCASE)) FROM rt1, rt0; -- 0ms;
SELECT ALL NULL, ((((-1156340976)AND(((((rt0.c4)AND(vt0.c0)))OR(rt0.c3)))))AND(CASE WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c4 END)), (NOT (rt1.c0)) COLLATE RTRIM FROM rt1, vt0 WHERE (json_extract(((0.5614116250774766) IS TRUE), CASE WHEN x'' THEN -2006297119 WHEN 0Xffffffffde1cb41d THEN NULL WHEN NULL THEN '1856787997' ELSE NULL END));SELECT DISTINCT (~ (NULL)), LAST_VALUE(LOWER((rt0.c0 IN ()))) OVER (), 0.24108068052511944 FROM vt0, rt1, rt0 WHERE ((~ (0.44296529103027893 COLLATE RTRIM))); -- 1ms;
SELECT (((rt0.c1)) NOT BETWEEN ((json_extract(rt0.c4, rt0.c2))) AND ((((rt0.c2)IS NOT(rt1.c2))))) FROM rt0 WHERE ((((555182227) IS FALSE) IN ())) LIMIT 231662539 OFFSET -1123021515;SELECT ((((LOWER(vt0.c0))OR(CAST(NULL AS BLOB))))OR(((rt0.c2)<=(rt1.c0)))), CASE ((rt1.c1)<(rt0.c2))  WHEN MIN(rt0.c4) THEN rt1.c2 COLLATE RTRIM ELSE rt0.c4 END, CASE COUNT(*)  WHEN (rt1.c0 IN (rt0.c3, rt0.c0)) THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c3 END END, ((((CAST(vt0.c0 AS BLOB))OR(COUNT(*))))AND(TYPEOF(rt0.c0))), rt1.c2, CAST((((rt0.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) AS TEXT), (((((((((((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2))))AND(((rt0.c3)>=(0.7603472557997812)))))OR((rt1.c2 IN ()))))AND((((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))))OR((+ (x'')))))OR(AVG(rt0.c4))))AND((- (rt0.c4)))) FROM vt0, rt1 WHERE (NULLIF(-6.81916801E8, (x'4451' IN ()))) GROUP BY ((((rt1.c2) BETWEEN (1730888643) AND (rt1.c0))) NOTNULL), CAST(rt1.c0 AS REAL) COLLATE NOCASE, ((((((((CAST(0.400743284153529 AS BLOB))OR(NULL)))OR(((rt1.c0)==(rt0.c1)))))AND((+ (rt0.c1)))))OR((rt0.c3 IN ()))) HAVING TRIM(DISTINCT CASE WHEN rt0.c4 THEN rt1.c1 ELSE rt0.c1 END);SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c2 END)OR((('') IS TRUE))))OR(rt0.c0 COLLATE NOCASE)) FROM rt0 CROSS JOIN rt1 ON TOTAL_CHANGES() COLLATE BINARY GROUP BY CAST(((rt0.c0)||('-1459114554')) AS REAL) HAVING UPPER((- (rt1.c1))) LIMIT -1616292994 OFFSET 1382453191; -- 0ms;
SELECT DISTINCT HEX(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 END), '(o-', rt1.c0 FROM rt1;SELECT DISTINCT TOTAL(CAST(rt0.c0 AS NUMERIC) COLLATE BINARY) OVER (), COUNT(CASE rt0.c0  WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c1 END COLLATE BINARY) OVER (), CASE 0X1dea7d7e  WHEN ('' IN ()) THEN NULLIF(DISTINCT NULL, rt0.c4) WHEN (rt1.c1 IN (rt0.c2, vt0.c0)) THEN MIN(NULL) WHEN ((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END, x'', '-2123304321' FROM rt1 GROUP BY CAST((- (rt0.c1)) AS TEXT), rt1.c2, CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)) THEN (NOT (rt1.c0)) END HAVING ((((rt0.c2) IS TRUE))GLOB(vt0.c0));SELECT ALL (((HEX(rt1.c0)))<((CASE WHEN x'' THEN vt0.c0 END))) FROM rt1, vt0 ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((NULLIF(rt0.c2, x''))GLOB(((((rt1.c1)AND(1039731688)))AND(rt1.c2)))) FROM rt1, rt0 WHERE (CAST(CASE 0x46b25ac  WHEN x'922c' THEN NULL END AS INTEGER)); -- 0ms;
SELECT DISTINCT rt1.c1, LAST_VALUE(rt0.c1) OVER (), (NOT (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) FROM rt0 GROUP BY CASE WHEN (- ('ෂ')) THEN 0x22d946a5 ELSE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END HAVING rt1.c0;SELECT CASE (NOT (0.06714593063265328))  WHEN rt0.c4 THEN ((rt0.c2) NOTNULL) ELSE rt0.c0 COLLATE NOCASE END FROM vt0, rt1;SELECT DISTINCT CASE GROUP_CONCAT(rt1.c0)  WHEN 'I^%EsnYe' THEN ((rt0.c1)>=(rt1.c0)) ELSE ((((rt0.c0)OR(rt0.c3)))AND(NULL)) END, DATE(rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt1.c1 END, (NOT (0.44296529103027893))), vt0.c0 FROM rt0 WHERE ((('-26621216') BETWEEN (0.7734106092684396) AND (0.6592497183757474)) COLLATE NOCASE);SELECT DISTINCT LAG(NULL, (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt1.c0))) COLLATE RTRIM, CAST(UNLIKELY(DISTINCT rt1.c0) AS NUMERIC)) OVER (), ((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE rt0.c1  WHEN rt1.c2 THEN rt0.c0 END)), GLOB(CASE rt1.c0  WHEN rt0.c4 THEN '-1123021515' END, (rt0.c4 IN ())) FROM rt0, vt0, rt1 WHERE (-1.165417647E9) ORDER BY '~ah7lIj_f'; -- 3ms;
SELECT DISTINCT rt1.c2 FROM rt0, rt1 LIMIT -1429914253; -- 0ms;
SELECT CASE WHEN rt1.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt1.c2 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END COLLATE NOCASE FROM vt0, rt1, rt0 WHERE ((- ((- (0.549758553182158))))) GROUP BY (((rt1.c2)) BETWEEN ((((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))) AND ((218955747))) HAVING (((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ()); -- 1ms;
SELECT ((MAX(rt1.c0))IS((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0))))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt1.c1, rt0.c3, rt1.c2))>=((-1460537914, rt1.c1, rt0.c0))))), (('1508726527') ISNULL) FROM vt0, rt0, rt1 WHERE (((((x'') BETWEEN (x'b4b0f030') AND (0.6636772399462473))) NOT BETWEEN (IFNULL(DISTINCT -1647456116, -2031394751)) AND (((NULL) IS FALSE)))) GROUP BY SUBSTR(rt1.c1, ((((((((rt0.c0)AND(rt0.c3)))AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c0))); -- 0ms;
SELECT ALL LAG((((((rt0.c4))<=((rt0.c0))))+(((rt0.c3) ISNULL))), (('') IS TRUE), ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM) OVER () FROM rt0 WHERE (CASE WHEN CASE x''  WHEN x'' THEN x'' ELSE 1486597705 END THEN ((x'') NOT NULL) ELSE NULL COLLATE BINARY END); -- 0ms;
SELECT CASE WHEN (NOT (rt1.c1)) THEN 'ox' ELSE ((rt0.c4)==(rt1.c1)) END FROM vt0, rt0 WHERE (((+ (NULL)) IN ())) GROUP BY ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c1 END)|((rt0.c2 IN (rt0.c2))));SELECT DISTINCT COUNT('-10475648') OVER () FROM rt0, vt0, rt1; -- 1ms;
SELECT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST(IFNULL(rt0.c0, rt0.c4) AS TEXT), TOTAL(((((NULL)AND(rt0.c1)))OR(rt0.c4))) OVER ( PARTITION BY ((rt1.c0) IS FALSE), ((((((((((((rt0.c0 COLLATE BINARY)AND(-347757619 COLLATE NOCASE)))OR((((rt0.c2, rt1.c2, rt1.c0))<=((rt0.c1, rt0.c4, rt1.c0))))))AND(((rt0.c2)AND(rt1.c1)))))AND((NOT (rt0.c1)))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))AND(((rt1.c2) NOT NULL))) ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt1.c1 END), ((((rt0.c2)IS(rt1.c0)))&((rt0.c3 IN (x'4287')))) DESC RANGE BETWEEN  CURRENT ROW AND (((((rt0.c3)OR(vt0.c0)))OR(rt0.c0)) IN ()) FOLLOWING), ((CAST(vt0.c0 AS REAL))+(CAST(rt0.c4 AS BLOB))), rt1.c2, ((((CAST(rt1.c0 AS REAL))AND(rt0.c3)))AND(NULL)) FROM rt0, vt0 WHERE (0.5371516857284095);SELECT CASE NULL  WHEN rt0.c2 COLLATE NOCASE THEN GROUP_CONCAT(rt0.c2) END FROM rt1, vt0, rt0 WHERE ((~ (((((((((((((NULL)OR(x'8705')))OR('g^')))AND(-3.47757619E8)))OR(x'')))AND('0.7734106092684396')))OR('1970415235'))))); -- 1ms;
SELECT DISTINCT rt1.c1 FROM vt0;SELECT DISTINCT ((((rt1.c2)IS NOT(rt0.c4))) IS FALSE), (((NOT (rt1.c2)))OR((((rt0.c4, vt0.c0, rt1.c2))<>((rt0.c2, rt0.c1, rt1.c0))))), (~ (x'')) COLLATE BINARY FROM rt0, rt1, vt0 WHERE (((((((NULL)AND('-1429914253')))OR('YuB')))IS NOT(((((((((-719748862)AND(NULL)))OR('FA')))AND('0.6427353295100134')))OR(NULL))))); -- 0ms;
SELECT ALL CAST(x'' AS NUMERIC) FROM rt0, vt0, rt1 WHERE ((((0.3103655820995075 IN ()))-(((0.5734169876880205)>(-1255773752))))); -- 0ms;
SELECT ((((0.79206859338458)>>(rt0.c0))) NOT NULL) FROM rt0, rt1 WHERE (NULL); -- 0ms;
SELECT 0.49613292252322616 FROM rt1, vt0, rt0 WHERE (((((((0.4641567796658562)%(NULL)))AND(((x'') BETWEEN ('-2063579208') AND (x'6ff6')))))OR('-1146460051'))); -- 0ms;
SELECT ALL ((GLOB(rt1.c1, rt1.c0)) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c4) NOT BETWEEN (rt0.c2) AND (0.31689545671944963)))) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL (((rt1.c1)) NOT BETWEEN (((((((((('-37378530')OR(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)))OR(rt1.c1)))) AND ((AVG(rt0.c4)))) FROM rt0, rt1, vt0 WHERE (x''); -- 1ms;
SELECT ((((((rt0.c0)OR(0.2337245489628914)))AND(rt1.c0))) NOT BETWEEN (((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))), ((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)) COLLATE BINARY, (rt1.c2 IN ()) COLLATE RTRIM FROM rt0, rt1;SELECT ((((rt0.c1)LIKE(rt0.c0))) BETWEEN (((rt0.c2)>>(rt0.c1))) AND (((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c0)))) FROM vt0 WHERE ((('-1619511415' COLLATE BINARY)GLOB(((-1251270671) ISNULL)))) LIMIT -823617362 OFFSET 358662380;SELECT ALL ((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))GLOB(LIKELIHOOD(rt0.c2, 0.09083730228477815))) FROM vt0, rt1 WHERE ((('764845180' COLLATE BINARY)<<(UNLIKELY(0.1765284826717347)))) GROUP BY (((- (rt0.c0)))>((((rt0.c1, rt0.c3, rt1.c2))>((rt1.c2, rt0.c1, 2076570694))))), '-428163154' COLLATE BINARY, CASE CAST(vt0.c0 AS INTEGER)  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN rt1.c1 COLLATE BINARY END HAVING ((rt0.c3) ISNULL) COLLATE NOCASE COLLATE NOCASE;SELECT ALL rt1.c2 FROM rt1, vt0, rt0 WHERE (x'') LIMIT 555182227 OFFSET 1039812832 UNION SELECT DISTINCT ((((rt0.c3)/(rt1.c0)))+(((rt1.c1)OR(rt0.c2)))) FROM rt0, vt0 WHERE (CASE ((NULL) ISNULL)  WHEN ((NULL)IS('n-')) THEN '1轚' END);SELECT DISTINCT ROW_NUMBER() OVER (), ((rt1.c2 IN ()) IN ()), (((rt1.c1)IS NOT(rt0.c3)) IN ()), -818647761, ((((vt0.c0)OR(rt1.c1)))OR(rt1.c2)) COLLATE RTRIM FROM rt0, vt0 WHERE ((((842684077, '-1', x'856e')) NOT BETWEEN ((((0x4df29ded)+('nz6㭣')), NULL COLLATE RTRIM, CASE 1732032705  WHEN NULL THEN NULL WHEN NULL THEN 'DZ夌2' WHEN 'ꌦ)*''' THEN 0.7603472557997812 ELSE NULL END)) AND ((0.022028254697854854, CASE WHEN 0.9836909908037489 THEN x'' ELSE NULL END, (((0.8072355860683956)) BETWEEN ((NULL)) AND ((x'')))))));SELECT DISTINCT COUNT(0.09450441546413735) OVER () FROM rt0 WHERE ((('-863146334')>=(ROUND('f+', x'04a6')))); -- 0ms;
SELECT rt1.c2 FROM rt0;SELECT ((((rt0.c3)AND(0.06714593063265328)))OR(rt0.c3)) COLLATE BINARY FROM rt0, vt0, rt1 WHERE ((('-1982106126')>(0.7758821637292364)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((rt0.c3)%(rt1.c1)) COLLATE RTRIM FROM rt0, rt1, vt0; -- 0ms;
SELECT TRIM(x'') FROM rt0, vt0; -- 1ms;
SELECT ALL TOTAL(((((rt1.c1)AND(rt1.c2)))OR(rt0.c4))) OVER () FROM rt0, rt1, vt0 WHERE (CAST(CAST(NULL AS NUMERIC) AS INTEGER)); -- 0ms;
SELECT ((rt0.c4 COLLATE RTRIM)&(CAST(rt1.c0 AS INTEGER))), rt0.c2, (- (NULL)) FROM rt1;SELECT ALL AVG(UNLIKELY(rt0.c4)), HEX(DISTINCT ((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c2))), 0.3768358550554628 FROM rt0 WHERE ((((0.9109662812322459))!=(('2059619940'))) COLLATE BINARY);SELECT TOTAL_CHANGES() FROM vt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c2) NOT BETWEEN (rt0.c4) AND (x''))) IS FALSE) FROM rt0;SELECT ALL TOTAL(((((rt0.c4)AND(rt0.c3)))OR(rt0.c4))), x'24d3', MIN((((rt0.c1))=((rt0.c3)))), 0.7696096322724697, (NULL COLLATE RTRIM IN ()) FROM vt0, rt0; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM rt0, vt0, rt1; -- 1ms;
SELECT ALL PERCENT_RANK() OVER ( ORDER BY ((rt0.c3 COLLATE RTRIM)|((NOT (rt1.c0))))  NULLS FIRST) FROM rt1 GROUP BY ((TRIM(rt1.c0))=(CAST(rt0.c0 AS BLOB))), ((0.567877366532243)GLOB((('ng') NOT BETWEEN (rt0.c2) AND (rt0.c3)))), (- (rt1.c2)) HAVING SUM((~ (rt0.c1)) COLLATE NOCASE);SELECT DISTINCT rt1.c1 FROM vt0 GROUP BY STRFTIME(((rt1.c0)*(rt0.c4)), ((rt0.c2)LIKE(rt0.c4)), CAST(vt0.c0 AS REAL));SELECT DISTINCT -6.81916801E8 FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3) IS FALSE)) NOT BETWEEN (CAST('-890741727' AS INTEGER)) AND (((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) FROM rt1, rt0; -- 0ms;
SELECT (TRIM(rt0.c0, rt1.c0) IN ()) FROM rt1 WHERE (SQLITE_COMPILEOPTION_USED((('}zN&3w\t5')*(0xffffffff9024ddb3)))); -- 0ms;
SELECT TRIM(DISTINCT rt0.c2, rt0.c4) COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT ALL TOTAL(((rt0.c4)>=(rt0.c1))) COLLATE BINARY FROM vt0, rt1;SELECT DISTINCT ((x'') IS TRUE) FROM vt0, rt0 WHERE (((0.15193394730112875)LIKE((('-1237299323')GLOB(NULL))))); -- 0ms;
SELECT ((rt0.c3 COLLATE BINARY)%(-1.779238851E9)) FROM rt1, vt0 WHERE (IFNULL(DISTINCT '0.0790328658183237', 0.9330149458845207) COLLATE RTRIM) LIMIT -625555883;SELECT DISTINCT ((- (rt0.c1)) IN ()) FROM vt0, rt0 LIMIT 1142159089; -- 0ms;
SELECT ALL NULL FROM rt1, rt0 WHERE ((- (NULL))); -- 0ms;
SELECT ALL (((rt0.c3)>=(rt0.c0)) IN (CAST(rt1.c0 AS NUMERIC), (- (rt0.c2)), ((((rt1.c0)AND(rt0.c0)))AND(rt0.c1)))) FROM rt1 WHERE (((CASE NULL  WHEN 0.9913152649948827 THEN 0.9583557819096821 ELSE x'' END) ISNULL)) LIMIT 837439744 OFFSET 639253684;SELECT ALL ((((rt0.c4)&(rt0.c3)))&(((rt0.c1)>>(rt0.c4)))) FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL ((((((x'') BETWEEN (rt0.c2) AND (rt0.c4)))AND(rt1.c0 COLLATE BINARY)))AND(((rt0.c4) NOT NULL))), SUM(HEX(DISTINCT rt0.c4)) OVER ( PARTITION BY ((((0.6100393950688976)OR((rt0.c1 IN ()))))OR((NOT (rt1.c0)))), ((SQLITE_COMPILEOPTION_GET(rt0.c2)) NOT BETWEEN (rt0.c1) AND (x'058e')) ROWS BETWEEN CASE WHEN rt0.c1 COLLATE NOCASE THEN rt0.c4 ELSE (('')OR(rt0.c1)) END FOLLOWING AND (+ (CAST(rt1.c0 AS INTEGER))) FOLLOWING), ((((rt0.c3)IS(rt1.c2))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND ('ww')) FROM rt1, rt0, vt0 WHERE (((((((((((x'271b')/(NULL)))OR(CAST(x'' AS BLOB))))AND(CASE '846597876'  WHEN '1e500' THEN 0.8042329112125485 WHEN 0.9243296149716643 THEN x'' WHEN '3t' THEN NULL END)))OR((((0.21243765385768687))<=((x'797c'))))))OR((',aof)9' IN ()))));SELECT DISTINCT SUM(((rt0.c3)<>(rt0.c4))) FILTER(WHERE ((((rt1.c1)AND(vt0.c0)))OR(rt1.c1)) COLLATE NOCASE) OVER (), SUM((((vt0.c0)) BETWEEN ((rt0.c4)) AND ((rt1.c0)))) OVER (), (((((rt0.c2)OR(rt0.c3))))>=((HEX(rt0.c4)))), TOTAL(((rt1.c1) IS FALSE)), ((((rt1.c2) IS TRUE)) ISNULL) FROM vt0, rt1, rt0 WHERE (UPPER(CAST(x'edf1' AS REAL))) LIMIT -1249393232; -- 0ms;
SELECT ALL (NOT (AVG(rt0.c3))) FROM rt0 WHERE (x'') ORDER BY JULIANDAY(((rt1.c1)-(NULL)), ((((rt0.c2)OR(rt1.c0)))AND(rt1.c2)), (rt0.c1 IN ()));SELECT DISTINCT CASE ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN COUNT(rt1.c0) THEN (rt1.c0 IN (rt0.c2)) ELSE '1152926591' END FROM rt0, vt0 WHERE (2004056803) GROUP BY ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c2)))||(rt1.c1)) HAVING ((((UPPER(DISTINCT rt0.c4))OR(CAST(' x1' AS TEXT))))OR(((rt1.c1) IS TRUE)));SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c0) AS BLOB) FROM rt0, rt1, vt0 GROUP BY '1683329925', ((0x14aba120)-((((rt0.c4))>=(('0.328203957427626'))))), ((((((((rt0.c0 COLLATE NOCASE)OR(((((NULL)OR(0.9050458902292335)))OR(rt0.c0)))))AND(json_extract(rt1.c1, rt1.c0, rt1.c2, rt0.c3, rt0.c3, x'bc4c'))))AND(CAST(rt1.c1 AS NUMERIC))))OR(COALESCE(vt0.c0, rt1.c1)));SELECT CASE WHEN (('')<<(rt0.c2)) THEN ((rt0.c4)GLOB(vt0.c0)) ELSE CAST(NULL AS BLOB) END, ((((rt0.c2))>=((rt0.c1))) IN ()), vt0.c0 COLLATE NOCASE, CASE (~ (rt0.c2))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1)) END, (((NOT (rt0.c2))) NOT BETWEEN (COUNT(*)) AND (((rt0.c4)<(rt1.c0)))) FROM vt0 ORDER BY CAST(load_extension(rt0.c4) AS BLOB)  NULLS FIRST, (+ (NULLIF(vt0.c0, rt0.c2))) ASC;SELECT ((((rt0.c0) IS FALSE))+(CAST(rt1.c1 AS INTEGER))) FROM rt1 WHERE (((NULL COLLATE NOCASE) NOTNULL));SELECT 0.14253321919383366 FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt0, rt1 WHERE ((((((+ ('-1539586099')))AND('4CoLಮ*偐S')))AND(((x'3d67')<=(x'')))));SELECT DISTINCT (NOT (((rt0.c1)&(rt1.c2)))) FROM rt0 WHERE ((CASE WHEN x'' THEN '1923100658' END IN ()));SELECT DISTINCT rtreenode(CAST(rt1.c0 AS TEXT), (~ (rt0.c3))), ROW_NUMBER() OVER (), COUNT(*) FROM rt1, rt0 ORDER BY PRINTF(rt1.c2, (('\rZ')IS NOT(rt1.c0)), CAST(rt0.c3 AS REAL)), ('-249536701' IN ()) DESC; -- 0ms;
SELECT ALL (rt1.c2 IN ()) COLLATE RTRIM FROM rt1, rt0, vt0; -- 0ms;
SELECT (((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((x''))) COLLATE BINARY, (((((rt0.c0)OR(rt1.c2)))AND(rt0.c2)) IN ()), ((CAST(rt1.c1 AS INTEGER)) IS FALSE) FROM rt0, rt1 WHERE (((NULL)<>(((((x'd024')OR(x'')))OR(NULL))))) GROUP BY vt0.c0, (((rt1.c1) NOT NULL) IN ()), (+ (vt0.c0)) COLLATE BINARY;SELECT rt1.c1, ((rt1.c2 COLLATE RTRIM) NOT NULL), ((CASE rt0.c0  WHEN rt0.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL ELSE rt1.c0 END) IS FALSE) FROM rt0, rt1 WHERE (CAST((NOT (NULL)) AS INTEGER)); -- 0ms;
SELECT ALL COUNT(((rt0.c1) IS FALSE)), CASE rt0.c1  WHEN rt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY, (~ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) FROM vt0 WHERE ((NOT (0x6e0c5ce4 COLLATE BINARY)));SELECT DISTINCT rt0.c2 FROM vt0 ORDER BY LAST_INSERT_ROWID();SELECT DISTINCT (- (((rt1.c2)&(rt1.c2)))) FROM rt1, vt0, rt0 WHERE (((CAST(1.159645155E9 AS REAL))GLOB(CAST(0.465474680069177 AS INTEGER)))) GROUP BY (((((rt0.c1)>>(rt0.c2))))<=(((NOT (vt0.c0))))) HAVING rt0.c0; -- 1ms;
SELECT ALL ((MAX(rt1.c2)) NOTNULL) FROM rt1 WHERE ((((((('-1383125803') IS FALSE))AND(0.601301884033513 COLLATE RTRIM)))OR(((((x'b111')AND(NULL)))AND(x'b44d'))))); -- 0ms;
SELECT DISTINCT HEX((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((x'')))) FROM rt0, vt0, rt1 WHERE (NULL); -- 1ms;
SELECT DISTINCT ((((rt0.c2)%(rt0.c0))) BETWEEN (LIKELIHOOD(DISTINCT rt0.c2, 0.08003129987108526)) AND (((((((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c4)))AND(rt0.c1)))) FROM rt0, vt0, rt1; -- 0ms;
SELECT ((CAST(vt0.c0 AS INTEGER))%((rt0.c2 IN ()))) FROM vt0, rt1, rt0 WHERE (TRIM(DISTINCT ((NULL) ISNULL))); -- 0ms;
SELECT rt0.c3, CASE UNLIKELY(DISTINCT rt0.c0)  WHEN ((rt0.c1) IS TRUE) THEN (~ (vt0.c0)) END, ((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))*((((rt0.c2))<((rt0.c4))))) FROM rt0 WHERE (CAST('1068796218' AS NUMERIC));SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL))-(vt0.c0)) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT SUM((rt1.c0 IN ())) OVER () FROM rt0, rt1 WHERE ((('-971312558' COLLATE NOCASE)>>(CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT rt1.c1 FROM vt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c3)>>(rt0.c1)))<(CAST(rt1.c1 AS INTEGER))) FROM rt1 WHERE (((((NULL) NOTNULL)) NOTNULL));SELECT ((((MAX(rt0.c3))OR(((rt0.c4)GLOB(vt0.c0)))))OR(ROUND(rt0.c4, rt0.c2))), ((((((x'5951')AND(x'7e87')))OR(rt1.c2)))<(IFNULL(DISTINCT vt0.c0, rt0.c2))), CASE WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END COLLATE RTRIM, AVG(GROUP_CONCAT((('袊M!J<ⶍ') IS FALSE))), LIKELIHOOD(DISTINCT ((rt0.c4)/(rt1.c2)), 0.5869124499090763) FROM rt1, rt0, vt0 WHERE (((((((NULL)>=(x'')))OR(((0.3432175101849817) IS TRUE))))OR(CASE '-425911353'  WHEN 'MN' THEN 0.3271300705564102 WHEN '1024364378' THEN '-887397064' WHEN x'' THEN NULL WHEN 0.1947428351231656 THEN '' WHEN 0.11448454194825108 THEN NULL END))) ORDER BY UNLIKELY(((((rt0.c3)AND(rt0.c4)))AND(rt1.c2))) ASC;SELECT (+ (rt0.c3 COLLATE RTRIM)) FROM rt1, vt0 WHERE (0.2596456114701371);SELECT DISTINCT NULL FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT (((((NULL) IS FALSE), rt1.c1, ((rt0.c1)GLOB(x'')), (NOT (rt0.c2)), ((NULL) IS TRUE)))>=((CASE WHEN rt0.c0 THEN x'' END, ((rt0.c3)<=(rt0.c1)), SUM(rt0.c0), (~ (rt0.c0)), (~ (rt0.c1))))) FROM vt0, rt0;SELECT DISTINCT TOTAL(CAST(rt0.c2 AS NUMERIC)) OVER () FROM vt0, rt0, rt1 WHERE (x'') LIMIT -1429618147 OFFSET 1973284219; -- 0ms;
SELECT DISTINCT CAST(((rt1.c1)<(rt0.c3)) AS NUMERIC) FROM rt1, rt0, vt0 WHERE ((((('i') IS TRUE)) NOT BETWEEN (((NULL)IS NOT(0.27867905633758017))) AND ((('2056395152') BETWEEN (0.4868719082932861) AND ('727179064'))))); -- 0ms;
SELECT DISTINCT ((((rt0.c4)==(rt1.c1))) BETWEEN (((((NULL)OR(rt1.c0)))AND(rt0.c2))) AND (rt1.c0)), (- ((+ (rt0.c0)))), (NULLIF(DISTINCT 'X!P?s\-q', rt0.c4) IN ()) FROM rt0, vt0, rt1; -- 0ms;
SELECT (~ ((+ (rt0.c2)))) FROM rt0, rt1, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT FIRST_VALUE((((((rt1.c0)) BETWEEN ((rt0.c3)) AND ((rt1.c0)))) NOT BETWEEN (NULL) AND (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) OVER () FROM vt0, rt1, rt0 UNION SELECT DISTINCT CAST(((((rt0.c2)AND('-1009421499')))AND(rt0.c3)) AS REAL) FROM rt1, rt0, vt0; -- 2ms;
SELECT DISTINCT CAST(rt1.c0 AS TEXT) COLLATE NOCASE, (((rt0.c3 IN ())) IS TRUE), ((CAST(rt1.c0 AS TEXT))IS((NOT (rt0.c0)))) FROM vt0, rt1;SELECT ALL ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c4)))IS NOT(load_extension(rt0.c1, rt0.c3))), SUM(((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c4)))OR(vt0.c0)))OR('-1429914253')))AND(rt0.c1))) OVER (), ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c0 END) BETWEEN (((((vt0.c0)AND(rt1.c2)))OR(rt0.c4))) AND (MIN(rt0.c1))) FROM rt0;SELECT DISTINCT ((((((rt0.c0)AND(rt0.c0)))AND('-1557639338')))AND(((rt0.c3)-(rt1.c0)))), LIKELY(DISTINCT COUNT(*)), COUNT(*) OVER ( ORDER BY rt0.c3 ASC, ((((0.46610322769612866)&(rt0.c4))) NOT NULL) DESC, (rt0.c1 IN ()) DESC) FROM vt0 WHERE (CAST(CASE WHEN NULL THEN '1258875919' END AS TEXT));SELECT DISTINCT rt1.c1 FROM rt1, vt0, rt0 WHERE ((((x'0511', 0.3793280869912595, '')) NOT BETWEEN (((0.4641567796658562 IN ()), CASE WHEN 0X3bfb62a1 THEN 1481965861 ELSE 563772290 END, 0.9260448438343251 COLLATE RTRIM)) AND ((CASE NULL  WHEN 0xffffffffd48b282c THEN 0.9198188024131647 END, (('1378052804') NOT BETWEEN (x'c9d266cc') AND (x'97e3')), ((0.13783704223897675) NOT NULL))))) GROUP BY ((CAST(NULL AS TEXT))=(((rt1.c2)OR(rt0.c1)))) HAVING ((COUNT(*))>>(vt0.c0 COLLATE BINARY)); -- 0ms;
SELECT CASE ((((((((((((rt1.c0)AND(rt0.c3)))AND(rt0.c3)))OR(rt1.c2)))OR(vt0.c0)))OR(rt0.c4)))OR(rt0.c3))  WHEN ((rt1.c0)AND(rt1.c0)) THEN (((rt1.c0, rt0.c0, vt0.c0)) BETWEEN ((rt0.c3, rt1.c2, rt0.c3)) AND ((rt0.c1, -5.3028502E8, vt0.c0))) ELSE rt0.c3 END FROM rt1, rt0, vt0 WHERE (((json_array_length('')) ISNULL));SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((((rt1.c0)<(rt0.c1))))), (((rt0.c3 IN ()))+(((rt1.c2)IS NOT(rt1.c2)))), ((COALESCE(rt0.c3, '8	.', vt0.c0, rt1.c2)) NOT BETWEEN (TOTAL(vt0.c0)) AND (INSTR(rt1.c0, rt1.c0))) FROM rt0, rt1, vt0 ORDER BY (((rt0.c1 IN ())) IS FALSE)  NULLS LAST; -- 1ms;
SELECT (((((rt0.c0, rt0.c1, vt0.c0))==((vt0.c0, rt0.c2, vt0.c0))))/(rt1.c2 COLLATE BINARY)), (- ((rt0.c0 IN (rt1.c0)))), (~ ((rt0.c4 IN ()))), NTILE(((((rt1.c0)&(rt1.c2)))+(LIKELY(rt1.c2)))) OVER (), ((CHAR(rt0.c4, rt1.c2, vt0.c0))|(MIN(rt0.c0, rt0.c1))) FROM rt1, vt0 WHERE (UNLIKELY(DISTINCT ((((583314594)OR(-1802433133)))AND(x''))));SELECT DISTINCT ((GROUP_CONCAT(vt0.c0)) BETWEEN (CASE rt0.c4  WHEN '' THEN rt0.c3 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c0 END) AND (rt1.c2 COLLATE BINARY)) FROM vt0, rt0 WHERE (((((NULL)>>(NULL))) BETWEEN ((((x''))>=((0.9386832924861644)))) AND (-1585879946)));SELECT DISTINCT (((CAST(rt1.c2 AS NUMERIC)))==(((NULL IN ())))) FROM rt0, rt1, vt0 ORDER BY CAST(rt0.c0 AS REAL) DESC; -- 1ms;
SELECT DISTINCT TRIM(DISTINCT CAST(rt1.c1 AS TEXT)) FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL ((GROUP_CONCAT(rt0.c1))>(NULLIF(rt0.c3, rt0.c3))) FROM vt0;SELECT x'' COLLATE NOCASE, GROUP_CONCAT(vt0.c0), CAST(((((rt0.c2)AND(vt0.c0)))OR(rt1.c0)) AS TEXT) FROM rt1, vt0 LIMIT 267355208 OFFSET -1460537914;SELECT NTILE(CASE WHEN rt0.c0 THEN ((rt0.c1)-(rt1.c1)) ELSE rt0.c1 COLLATE NOCASE END) OVER (), SUBSTR(CASE rt0.c4  WHEN vt0.c0 THEN rt1.c0 ELSE rt0.c0 END, COUNT(vt0.c0)), TOTAL(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN '-1463397506' WHEN NULL THEN rt1.c1 ELSE rt1.c0 END) OVER () FROM rt1, rt0 WHERE ((HEX(DISTINCT '639253684') IN ('VxghYꆕn')));SELECT DISTINCT TOTAL(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c4))) OVER ( ORDER BY rt0.c1 DESC  NULLS FIRST), CASE WHEN (~ (rt1.c0)) THEN ((vt0.c0)<>(rt0.c0)) END, CAST(rt0.c4 AS TEXT) FROM rt0;SELECT ALL (NOT ('')) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)))=(((rt1.c1)IS('-537026380')))) FROM vt0, rt1 WHERE (((((x'') IS FALSE))%(((x'')IS NOT(1830232162))))) ORDER BY ((rt1.c0) IS FALSE) ASC;SELECT DISTINCT LIKE(rt1.c0 COLLATE NOCASE, CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c2 END, 'r'), COUNT(*), ((((rt0.c1))>=((rt0.c1))) IN ((x'c7f9' IN (rt1.c1, rt0.c0)))) FROM rt0 WHERE (((((CASE 1111255948  WHEN -1094484891 THEN 'n?' WHEN NULL THEN -1429002119 WHEN 0.35834806672554487 THEN '0.2278182271700162' ELSE '' END)OR(TRIM(DISTINCT NULL))))AND(((1.039731688E9)-(-2123304321))))) LIMIT 6135628;SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c4 END)<=(CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c0 WHEN x'' THEN rt0.c3 WHEN vt0.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 ELSE rt0.c4 END)), AVG(CAST(rt0.c3 AS BLOB)) OVER (), LEAD(rt1.c0, (+ (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)), rt1.c2) OVER () FROM rt1, vt0 WHERE (json_remove(((1752139448)|(x'')), NULL, (('1608518883') IS TRUE), ((-1767908149) BETWEEN ('-1750353236') AND (0.6773924865147374))));SELECT CAST((((rt0.c0))=((vt0.c0))) AS INTEGER) FROM vt0;SELECT DISTINCT CAST(((rt0.c2)|(rt0.c4)) AS BLOB) FROM rt1, vt0, rt0 WHERE (((CAST(x'' AS TEXT))-((('^	 /+%EᎦ\') NOT NULL)))) GROUP BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.7063823434454439))*(json_valid(rt1.c2))), (((('0.15478323828521556')AND(TYPEOF(rt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)))), (CASE rt1.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c2 END IN (((rt0.c0)<=(rt0.c1)), rt0.c4 COLLATE BINARY)) HAVING (+ (((rt1.c2)&(rt0.c0)))); -- 5ms;
SELECT DISTINCT ((('c//')) BETWEEN ((rt0.c2)) AND ((rt0.c0))), (+ (CAST(rt0.c0 AS REAL))), FIRST_VALUE(COALESCE(vt0.c0 COLLATE BINARY, vt0.c0, CAST(vt0.c0 AS NUMERIC), LIKE(vt0.c0, vt0.c0))) OVER ( ORDER BY ((((((((((((((((((rt0.c2)OR('-1733119164')))OR(rt0.c1)))OR(x'')))OR(rt0.c0)))OR(rt1.c1)))AND(vt0.c0)))AND(NULL)))AND(rt1.c1)))|(((rt0.c3) ISNULL))) DESC, UNLIKELY((+ (vt0.c0))) DESC) FROM vt0 WHERE (((UPPER('-1651887388'))<=(CAST(NULL AS BLOB))));SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN NULL WHEN rt1.c2 THEN 'FZ\r#3' END)==((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c2))))) FROM rt0, vt0;SELECT DISTINCT COUNT(CAST(rt0.c4 AS INTEGER)) OVER () FROM rt0 WHERE (((CAST(1.9212326E8 AS BLOB)) NOT BETWEEN ((('-2031769185') BETWEEN ('0') AND (0xffffffff95f2f83d))) AND (((x'') BETWEEN ('') AND ('450099824'))))); -- 0ms;
SELECT (~ ((('2108626010')*(rt1.c0)))) FROM rt0;SELECT DISTINCT ((CAST(rt0.c3 AS INTEGER))=(((rt0.c0)LIKE(rt0.c0)))) FROM rt0, vt0, rt1; -- 0ms;
SELECT ((x'' COLLATE RTRIM) NOT NULL) FROM rt1, vt0, rt0; -- 0ms;
SELECT SUM(0.3116062399155761) OVER () FROM rt0, vt0, rt1; -- 1ms;
SELECT DISTINCT JULIANDAY(CAST(rt1.c1 AS NUMERIC), ((rt0.c2)-(rt0.c3)), (((rt1.c0, rt0.c3, rt1.c1)) BETWEEN ((rt0.c3, rt1.c0, rt0.c3)) AND ((rt1.c1, rt0.c2, rt1.c1)))), (((NULLIF(rt1.c0, rt0.c4), (~ (rt0.c1)), 0Xffffffff9a7ca12e))<=((((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c2)), CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 END, NULL))), ((MAX(rt0.c3))IS(NULL)) FROM rt1 WHERE (CASE WHEN 'Gv褺*' THEN '1258875919' COLLATE RTRIM WHEN ((7.413086E7)%(0.2700988532858368)) THEN 0xffffffffc7a0c225 WHEN CASE WHEN NULL THEN 0.45392402498362106 WHEN -5.57340335E8 THEN '1159645155' WHEN '\6쪄PB' THEN NULL ELSE NULL END THEN ((NULL) NOTNULL) ELSE CASE '%x'  WHEN 's*' THEN 0.21731761900345115 END END);SELECT DISTINCT (((0.6637380137557778, rt1.c0, rt0.c2)) BETWEEN ((CAST('1024364378' AS NUMERIC), TOTAL(rt0.c3), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c4)))) AND ((rt0.c1, TOTAL(rt0.c0), (- (rt1.c1))))) FROM rt0, vt0, rt1 WHERE ((~ ((-3.737853E7 IN ('0.5734169876880205'))))); -- 5ms;
SELECT DISTINCT COUNT(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0))) OVER ( ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c0)<=(rt0.c1)))) AND (((rt1.c1 IN ()))))) FROM vt0, rt1;SELECT (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c1))) COLLATE NOCASE FROM rt0 WHERE (((NOT (NULL)) IN (((NULL)GLOB(0.35326966711877794))))); -- 0ms;
SELECT DISTINCT '0.6427353295100134' FROM vt0, rt1, rt0 WHERE ('B&'); -- 0ms;
SELECT NULL, ABS(DISTINCT COUNT(rt0.c2)), ((((((vt0.c0)AND(rt1.c2)))AND(x'1de7')))IS NOT(((rt0.c3)OR(rt0.c3)))) FROM vt0, rt0, rt1 WHERE (((((((((((0xffffffff9e7ea99a) ISNULL))AND((('639253684')-(NULL)))))OR((- (x'14c5')))))AND(((x'') NOTNULL))))OR((((x'a586', 0Xffffffffad713054, NULL))!=((x'', '479179521', 0Xffffffff97ffa129)))))) LIMIT -1761095393; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, rt1, vt0; -- 1ms;
SELECT COUNT(((((rt0.c4)OR(rt0.c1)))AND(rt1.c2))) OVER () FROM rt0, rt1 WHERE ((((((x'', NULL, '-2006297119'))<((0.9029337119359238, x'', NULL)))) BETWEEN (((NULL) NOT NULL)) AND (((((0.024200685490232132)AND(0.3591780826919302)))AND('763755331'))))); -- 0ms;
SELECT DISTINCT (TOTAL(rt0.c2) IN ()) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT NULL, ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))AND(((rt0.c1)>=(rt1.c2)))))AND(CASE WHEN NULL THEN rt0.c1 ELSE rt1.c2 END)), LIKELIHOOD(DISTINCT ((((rt0.c3)OR(rt0.c1)))OR(0.6354046055632152)), 0.5532603692464766) FROM rt1, vt0 LIMIT -111520504;SELECT DISTINCT CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN CAST(rt1.c0 AS NUMERIC) END, ((((rt0.c1) ISNULL))AND(CAST(vt0.c0 AS TEXT))), NULLIF(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c1)), CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END) FROM rt0, vt0;SELECT ALL (((((((((~ (rt1.c0)))OR((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c2, rt0.c0, rt1.c1))))))OR(SUM(vt0.c0))))AND((rt0.c0 IN (rt0.c1, vt0.c0)))))AND(CAST(rt1.c2 AS INTEGER))) FROM rt0, rt1, vt0 LIMIT 1834972462 OFFSET -212181192; -- 1ms;
SELECT DISTINCT ((((((((((((CAST(rt1.c2 AS REAL))OR((((rt1.c2, rt0.c1, rt1.c1)) BETWEEN ((rt1.c0, rt0.c4, rt1.c2)) AND ((vt0.c0, rt0.c1, rt0.c4))))))AND(rt0.c4 COLLATE RTRIM)))AND(rt1.c1)))AND(0X21176893)))OR((((rt1.c1, rt1.c0, 0Xffffffffb9be9f24)) BETWEEN ((rt0.c4, rt1.c1, rt0.c2)) AND ((rt0.c3, rt0.c4, vt0.c0))))))AND(rt1.c0 COLLATE RTRIM)) FROM vt0, rt0;SELECT ('m[P	>gz' IN ()) FROM rt1, vt0 GROUP BY ((rt0.c4 COLLATE RTRIM) BETWEEN (UNLIKELY(DISTINCT rt0.c0)) AND (((rt0.c4)>>(rt0.c2)))), CASE ((rt0.c4) BETWEEN (rt1.c1) AND (vt0.c0))  WHEN rt0.c0 THEN ((((NULL)OR(rt0.c0)))OR(rt0.c4)) WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt0.c2 END THEN ((rt0.c0) NOT NULL) WHEN rt1.c2 COLLATE RTRIM THEN (((rt0.c1))<((rt0.c1))) ELSE rt0.c4 COLLATE BINARY END, 0.38619940898193206, CASE WHEN rt1.c0 THEN rt1.c2 END COLLATE BINARY, rt0.c4 COLLATE BINARY HAVING ((((rt1.c2)OR(rt0.c3)))OR(rt1.c1)) COLLATE RTRIM;SELECT ALL (NOT (CAST(rt1.c2 AS TEXT))) FROM rt0, rt1 WHERE ((((((NULL) BETWEEN ('489585454') AND (x'afb1'))))<=((((((x'')AND(x'')))AND(x'7772')))))); -- 0ms;
SELECT DISTINCT (((rt0.c3))=((rt0.c1))) COLLATE RTRIM FROM vt0, rt1 WHERE ('1160444955');SELECT ALL SUM(((vt0.c0)>>(rt0.c4))) OVER () FROM rt0 WHERE (0.4788866998793696);SELECT DISTINCT CASE (rt1.c1 IN ())  WHEN CASE WHEN rt1.c2 THEN 879751514 END THEN ((rt1.c0)IS NOT(rt0.c0)) ELSE AVG(rt0.c1) END FROM rt1 WHERE (((((((NULL)AND('467501897')))AND(x'')))+(((x'a9a0')<<(NULL))))) LIMIT 2415335;SELECT DISTINCT GROUP_CONCAT(((rt0.c3) NOT NULL)) OVER () FROM vt0;SELECT ALL CAST(rt0.c0 AS TEXT) FROM rt0 GROUP BY ((CASE WHEN rt0.c0 THEN rt1.c2 END) IS FALSE) HAVING 0.1729658819495653;SELECT ALL (((rt1.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((0x3cdca4d4, (((rt0.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))), ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((((rt1.c0))>((rt0.c3))), ((rt0.c0)<=(rt0.c4)), ((rt0.c1)-(rt0.c2))))), (((vt0.c0)) NOT BETWEEN ((MIN(rt1.c0))) AND ((CAST(rt0.c0 AS BLOB)))), TOTAL(((rt0.c1) NOT BETWEEN ('') AND (rt0.c3)) COLLATE NOCASE) OVER ( ORDER BY ABS(((rt0.c2) IS TRUE)), '271793901' ASC), ((((rt1.c1) NOT BETWEEN (x'3dbc') AND (rt0.c2)))AND(x'')), COUNT(LIKELIHOOD(rt0.c1, 0.9070172175836331)) FROM rt1, vt0, rt0 WHERE (((((x'')OR(0.5100815624583719)))OR('lW')) COLLATE BINARY); -- 1ms;
SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB))OR(((rt0.c4)<(vt0.c0)))), FIRST_VALUE(((rt1.c1) BETWEEN (rt1.c2) AND ('-0.0')) COLLATE BINARY) OVER ( RANGE  UNBOUNDED PRECEDING), ((rt0.c2 COLLATE NOCASE)*((- (rt0.c3)))) FROM rt1 WHERE ((((((x'', NULL, 0.9743827343920244)) NOT BETWEEN ((NULL, NULL, '74130860')) AND ((x'002a', 'IG', 'pmf3BWR⻿'))))*(((0x46a06eb7)==('1469386910')))));SELECT ((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0))) NOT NULL), ((((((((((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c0)))OR(CAST(0.9544776466896799 AS INTEGER))))OR(0.43988109291820576)))OR(CAST(rt1.c2 AS INTEGER))))AND(ABS(DISTINCT rt0.c2))), rt0.c0 FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT (((+ (rt1.c2))) NOTNULL) FROM rt1, rt0, vt0 LIMIT 464982959 OFFSET -977592629; -- 0ms;
SELECT DISTINCT rt1.c1 FROM vt0;SELECT ALL NULL, (NOT ((vt0.c0 IN (rt0.c1, rt0.c3)))), CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c0 END COLLATE BINARY FROM rt0, vt0, rt1 WHERE (((NULL)&((- ('|#'))))); -- 0ms;
SELECT AVG(((rt1.c1) NOTNULL)) FROM rt1 WHERE ((((x'', 0.013067178447168093, '-1802433133', x'', x'')) BETWEEN ((NULL, CASE NULL  WHEN 0.33127126050248334 THEN x'' WHEN NULL THEN '' WHEN x'd9a2' THEN 0.4022247873185544 ELSE '-1196850277' END, ((x'') BETWEEN (7.413086E7) AND (-4.25911353E8)), CAST('' AS REAL), (('171166340')*('0.0749588441359259')))) AND ((CAST('1051902168' AS BLOB), CAST(x'' AS NUMERIC), ('' IN (NULL)), ((x'') NOT BETWEEN (NULL) AND (',&')), ((NULL) BETWEEN (NULL) AND ('2004056803')))))); -- 0ms;
SELECT ALL ((rt0.c4 COLLATE NOCASE)OR((rt1.c1 IN (rt1.c1, rt0.c0)))), CAST(rt0.c1 COLLATE BINARY AS NUMERIC), ((((rt0.c0)>>(rt0.c4)))*((rt0.c1 IN (rt1.c1, rt0.c2)))) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT rt0.c1 COLLATE NOCASE FROM rt1, vt0, rt0; -- 0ms;
SELECT COUNT(*) OVER () FROM rt1 WHERE (CASE ((x'')LIKE(0X30a7632))  WHEN (~ ('0.5634057539370387')) THEN 0.37111650221145775 COLLATE NOCASE WHEN (((-1497124696))>((1.15965963E9))) THEN ((0.5487789244299317) BETWEEN ('0.005302277769929975') AND (0Xfffffffffb710013)) WHEN ((-919270139)>=(x'')) THEN 0X66992b37 COLLATE BINARY END); -- 0ms;
SELECT ((NULL)<((+ (rt0.c1)))), (((NOT (rt0.c1)))>((((rt1.c0, rt0.c1, '0.485287561836811'))>((rt1.c0, rt0.c2, rt0.c0))))), HEX(rt1.c1 COLLATE BINARY) FROM rt1, rt0, vt0 WHERE ((- ('-1383886772' COLLATE BINARY))); -- 0ms;
SELECT ALL (((0.7926450205670287)) BETWEEN ((((rt1.c2) IS FALSE))) AND ((TOTAL('-530285020')))) FROM vt0, rt1, rt0; -- 1ms;
SELECT ALL (((('A!2LU')GLOB(rt1.c2)))=(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1)))) FROM rt1;SELECT (((+ (rt1.c1))) IS TRUE) FROM vt0, rt0, rt1 WHERE (((CAST(NULL AS REAL)) BETWEEN ((~ (0.3732778070514582))) AND (LIKELY(DISTINCT '1925182119')))); -- 0ms;
SELECT GROUP_CONCAT(x'') OVER (), ((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c4)))||((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))), ((((CASE WHEN rt1.c1 THEN rt1.c2 END)AND(((((0.9146463244770098)AND(rt0.c0)))OR(rt0.c3)))))OR(CASE rt0.c0  WHEN '0.39661858885172874' THEN rt0.c3 END)) FROM rt0, vt0, rt1; -- 2ms;
SELECT ((MIN(NULL))==(rt0.c0)) FROM rt1, rt0; -- 0ms;
SELECT ALL RANK() OVER () FROM rt1; -- 0ms;
SELECT LEAD(((((((vt0.c0) IS FALSE))AND(vt0.c0)))OR('')), ((CAST(rt0.c4 AS NUMERIC))>(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 END)), vt0.c0) OVER () FROM rt0, vt0 WHERE (((((NULL)>=('-侅X+孠N'))) NOTNULL)) LIMIT 523774686; -- 0ms;
SELECT DISTINCT LTRIM(rt1.c2) FROM rt0 NOT INDEXED ORDER BY (((((rt0.c4) NOTNULL)))>=(((((0.33323177017967565, rt1.c1, rt1.c0))<((rt0.c1, rt0.c1, rt1.c2)))))) DESC  NULLS FIRST;SELECT DISTINCT (~ (CAST('-1460537914' AS INTEGER))), (((NOT (rt0.c1))) NOT BETWEEN (CASE rt0.c3  WHEN vt0.c0 THEN rt1.c1 ELSE rt0.c2 END) AND (SUM(rt1.c1))), PERCENT_RANK() OVER () FROM vt0, rt1 WHERE (CAST(((((x'')OR('-1359520618')))OR(x'ad1c')) AS NUMERIC));SELECT ((((((vt0.c0)OR(rt1.c2)))OR(rt0.c4))) NOT NULL) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))&(CAST(vt0.c0 AS INTEGER))) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT INSTR(-583787237, CAST(rt1.c2 AS BLOB)) FROM vt0 WHERE (('1039731688' IN ()));SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0)))*(rt1.c2 COLLATE RTRIM)) FROM rt1, vt0 WHERE (((CASE 0.9519496370205766  WHEN '	w' THEN NULL WHEN x'' THEN NULL WHEN NULL THEN '-1396270448' END) IS TRUE)) GROUP BY CASE WHEN (((rt1.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt1.c0, rt1.c0)) AND ((rt0.c1, rt0.c1, rt1.c1))) THEN ((rt0.c4) NOTNULL) ELSE (rt0.c0 IN (rt0.c2)) END HAVING (0x7f93a8f1 IN ()) LIMIT 1352059329;SELECT ALL (((~ (rt1.c1)))+(((rt0.c4)<(rt0.c0)))) FROM rt1, vt0, rt0 LIMIT -472058261; -- 1ms;
SELECT DISTINCT rt1.c2 FROM rt0, vt0, rt1 WHERE ((((((0.9766086565244341))<((0x63e5ae5f))))<((x'' IN (0.8321255934934992))))) GROUP BY CAST((+ (rt0.c3)) AS TEXT); -- 0ms;
SELECT CASE CASE WHEN rt1.c2 THEN rt0.c4 END  WHEN CASE rt0.c3  WHEN vt0.c0 THEN '842684077' ELSE rt0.c0 END THEN (rt0.c4 IN ()) WHEN rt1.c0 COLLATE BINARY THEN ((rt1.c2) NOTNULL) WHEN (rt1.c1 IN ()) THEN (rt1.c2 IN (vt0.c0)) ELSE CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END END, AVG(CAST(rt1.c1 AS NUMERIC)) OVER ( ORDER BY vt0.c0 ASC  NULLS LAST), (rt1.c1 COLLATE NOCASE IN (TRIM(DISTINCT 0.1956977891493875, NULL), rt1.c0)), ((((((((((0.6762133590845635)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c3))) BETWEEN (rt0.c1) AND (rt0.c1)), NULL FROM rt1;SELECT DISTINCT COUNT(*) OVER (), rt1.c0, ((((((rt0.c4)/(rt0.c1)))OR(((rt0.c2) NOT NULL))))OR(GROUP_CONCAT(rt1.c2))) FROM rt1;SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt1; -- 0ms;
SELECT ALL TOTAL(MAX((((vt0.c0))>=((rt0.c3))))), (NOT (0x1)), (((rt0.c2)) BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((x'08b4' COLLATE RTRIM))) FROM vt0, rt0, rt1 WHERE (x'e6e5');SELECT DISTINCT x'' COLLATE RTRIM FROM vt0, rt0, rt1 ORDER BY CASE WHEN ((rt1.c1)/(rt0.c0)) THEN ((((((((((((rt0.c0)AND(rt1.c2)))AND(rt1.c0)))AND(rt0.c4)))OR(rt1.c0)))OR(rt1.c1)))AND(rt0.c4)) ELSE ((rt1.c1)/(rt0.c1)) END ASC; -- 0ms;
SELECT DISTINCT COUNT(CAST(rt1.c0 AS INTEGER)) OVER ( PARTITION BY CASE WHEN ((x'')OR(rt1.c2)) THEN CASE WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c1 END WHEN LTRIM(rt0.c4) THEN ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c3)) THEN rt0.c3 COLLATE BINARY ELSE '1911095073' END, CAST(((rt0.c2) NOTNULL) AS TEXT)), rt0.c3, (SQLITE_COMPILEOPTION_GET(rt0.c4) IN ()) FROM vt0 WHERE (STRFTIME(COALESCE(DISTINCT '-991912140', x''), (('78461470') NOT BETWEEN ('1855473178') AND (-8.90741727E8)), ((1999336280)>=('')), CAST('0.04540628071409447' AS INTEGER), ((-2031394751)OR(0.5084562027354608))));SELECT CUME_DIST() OVER () FROM rt0; -- 1ms;
SELECT ((((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c0)))AND(vt0.c0)))OR(rt1.c0)))GLOB(GROUP_CONCAT(vt0.c0))) FROM vt0, rt0 GROUP BY CASE CASE rt0.c4  WHEN rt1.c1 THEN rt0.c3 WHEN rt1.c1 THEN '''' WHEN vt0.c0 THEN vt0.c0 ELSE '.l' END  WHEN NULL THEN (- (rt0.c2)) ELSE CASE WHEN rt1.c0 THEN rt0.c3 END END;SELECT DISTINCT json_array_length((rt1.c0 IN ())), UPPER(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c3 END), ((((((((LENGTH(rt0.c0))AND(((((((((((((1999336280)AND('')))AND(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c0)))))OR((NOT (rt0.c0)))))OR((((rt0.c0))=((rt0.c0))))))AND(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)))) FROM rt0 GROUP BY (((CAST(rt0.c3 AS NUMERIC)))<((CASE WHEN x'' THEN rt1.c0 ELSE rt0.c1 END))) ORDER BY ((CAST(rt0.c3 AS BLOB))<=(((rt0.c4)*(rt1.c2)))), (NOT (rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST;SELECT DISTINCT SUM(ABS(DISTINCT rt0.c0)) OVER () FROM rt0, vt0, rt1 GROUP BY CASE (rt1.c0 IN ())  WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt1.c0 END THEN ((rt0.c2)>=(vt0.c0)) END; -- 1ms;
SELECT DISTINCT (CAST(rt1.c2 AS INTEGER) IN ()), PERCENT_RANK() OVER (), ((rt0.c3 COLLATE BINARY)||(((0.14784539995403279) BETWEEN (rt1.c2) AND (rt0.c2)))) FROM rt1, rt0, vt0; -- 3ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0, rt0 WHERE ((NOT (CASE 0.11481339934291157  WHEN NULL THEN x'' WHEN NULL THEN 0.6816758945667171 WHEN 0.005302277769929975 THEN 0.3585338901482549 WHEN x'' THEN 0Xe568f4b WHEN 1745124571 THEN 0.604554893370095 ELSE '' END))); -- 0ms;
SELECT DISTINCT CASE ((rt0.c1)<>(rt0.c4))  WHEN rt1.c1 THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)) ELSE 6.39253684E8 END FROM vt0;SELECT MIN(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END) FROM rt0, vt0 LIMIT -1095161890 OFFSET 467501897; -- 0ms;
SELECT ((((CAST(rt0.c1 AS TEXT))OR(((rt1.c1)|(rt1.c2)))))AND(((((rt1.c0)AND(rt0.c1)))OR(vt0.c0)))) FROM vt0;SELECT (((('') ISNULL))LIKE(((rt0.c3) NOTNULL))), SUM(0.4447078345295008), (((CASE WHEN rt1.c2 THEN -90415989 END))>=(((rt0.c3 IN (rt1.c2))))) FROM rt0, rt1 WHERE ((((0.5366541894922252)) NOT BETWEEN (((NULL IN ()))) AND (((((1.855473178E9))!=((0.38173491489175215))))))); -- 0ms;
SELECT DISTINCT NULL, CASE COUNT(rt0.c0)  WHEN (NOT (rt1.c2)) THEN NULL WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c2)>(rt1.c1)) WHEN ((x'') NOT BETWEEN (rt0.c3) AND (rt1.c2)) THEN (rt0.c2 IN (rt0.c2)) END, CAST(rt0.c4 AS NUMERIC) FROM rt0, rt1; -- 0ms;
SELECT ALL (((CAST(rt0.c0 AS TEXT)))<((CASE WHEN rt0.c2 THEN -1844285219 ELSE rt0.c3 END))), ((CAST(vt0.c0 AS BLOB)) NOT NULL), COUNT(*) FILTER(WHERE ((((((rt1.c2)OR(rt1.c2)))OR(rt0.c3)))AND(((((rt1.c1)AND(rt0.c1)))OR(rt1.c1))))) OVER (), (NOT (AVG(rt0.c4))), DATE(COUNT(vt0.c0), vt0.c0 COLLATE BINARY, (- (rt0.c0)), ((rt1.c2)&(rt0.c2)), rt0.c3) FROM rt0, vt0 WHERE (((((((0.44608525780195596)||('KI~-t45F䗩')))AND(((((NULL)AND(x'')))AND(NULL)))))OR((('-1123021515')|(NULL)))));SELECT ALL HEX(UNLIKELY(rt0.c2)) FROM rt1, vt0, rt0 WHERE (CAST(((((((((((((0.08344977954873778)AND(0X42b1af86)))AND(4.79179521E8)))AND('')))AND(NULL)))OR(NULL)))OR(NULL)) AS REAL)); -- 0ms;
SELECT (((vt0.c0, rt1.c2, rt1.c1)) BETWEEN ((((rt0.c2)>(rt0.c3)), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END, (((rt0.c4))>((rt0.c2))))) AND (('', rt0.c4 COLLATE BINARY, CAST(rt0.c1 AS TEXT)))), ((rt1.c0) ISNULL), CUME_DIST() OVER (), CASE CAST(rt0.c4 AS TEXT)  WHEN (NOT (479179521)) THEN 'KWᜦc' WHEN (NOT (rt1.c0)) THEN TOTAL_CHANGES() WHEN UPPER(DISTINCT vt0.c0) THEN ((0.16457476346056565)AND(rt1.c2)) ELSE CAST(vt0.c0 AS REAL) END, NULL COLLATE BINARY FROM rt0, rt1, vt0 WHERE ((~ ((NULL IN ())))); -- 2ms;
SELECT DISTINCT (((((rt1.c0, rt0.c3, rt0.c4)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((vt0.c0, 0x1ce0d647, rt1.c1))))IS NOT(rt1.c0 COLLATE NOCASE)), 'g', (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c4))))<=((- (rt1.c0)))) FROM vt0, rt1, rt0 WHERE (LOWER((('777635822')*('ol')))); -- 0ms;
SELECT ((((((((rt0.c2)AND(rt0.c4)))OR(vt0.c0)))AND(rt1.c1)))AND(rt1.c1)) COLLATE NOCASE, (+ (((rt0.c1)IS NOT(rt0.c1)))), CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c3 COLLATE NOCASE ELSE TOTAL(rt0.c2) END FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c2 AS NUMERIC))<=((rt0.c0 IN (rt0.c2)))) WHERE (json_array_length(0x61638577, x'') COLLATE NOCASE);SELECT DISTINCT ((((rt1.c2) IS FALSE)) NOTNULL) FROM rt0 WHERE (x'') ORDER BY IFNULL(rt1.c0, ((vt0.c0)AND(rt1.c1))) DESC, rt0.c1  NULLS LAST;SELECT DISTINCT (('665078551')<>((rt0.c4 IN ()))) FROM rt1, vt0 WHERE (CAST(CAST(NULL AS INTEGER) AS BLOB)); -- 0ms;
SELECT ((((((rt0.c3) NOT NULL))OR(rt1.c2)))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)) FROM rt1, rt0 WHERE (((((('471077909')) NOT BETWEEN ((0xffffffff95ec8405)) AND ((0.494488999657165))))>((('Bo<%')!=(0.39442177118806077))))) ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt1.c2 END) ASC  NULLS FIRST, rt0.c3; -- 0ms;
SELECT DISTINCT LEAD(CAST(-1.097025751E9 AS TEXT) COLLATE RTRIM, ((CAST(rt0.c1 AS TEXT)) NOTNULL), ((((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c0))) IS FALSE)) OVER () FROM vt0, rt1, rt0 WHERE (''); -- 1ms;
SELECT ALL CAST(((rt1.c0)LIKE(rt0.c2)) AS REAL), rt1.c2, rt0.c3 FROM rt0, vt0;SELECT ALL ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c1 END) NOT BETWEEN (CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END) AND (((rt1.c1) NOT BETWEEN (x'5d0a') AND (rt0.c3)))), (((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4)))) NOT NULL), ((rt1.c1)!=(rt1.c0)) FROM vt0, rt1, rt0 WHERE (''); -- 0ms;
SELECT ((CASE WHEN rt0.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END) NOT NULL), ((CAST('1596059524' AS BLOB)) NOT BETWEEN (((rt1.c2) ISNULL)) AND (((rt0.c2)>>(rt1.c0)))), ((rt1.c1 COLLATE RTRIM)!=(CAST(NULL AS NUMERIC))) FROM rt1 WHERE (((0.3611472802827048)IS NOT('')) COLLATE BINARY COLLATE NOCASE);SELECT ALL ((((1969847521)OR('傶s.y')))OR(('' IN ()))) FROM vt0; -- 0ms;
SELECT ALL NULL, 0x55d169f7, AVG(0.10139060921895438) FROM rt1, vt0; -- 0ms;
SELECT '2059188407' FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT UPPER(((rt0.c0)>=(rt1.c1))), '', ((vt0.c0 COLLATE RTRIM) NOTNULL) FROM rt0, vt0 WHERE (CAST(CASE 0.12828175947754894  WHEN 4.67501897E8 THEN NULL ELSE -1900295076 END AS NUMERIC));SELECT ALL CAST(CAST(rt1.c0 AS REAL) AS INTEGER), IFNULL(DISTINCT ((rt1.c2) NOTNULL), (NOT (rt1.c0))), TOTAL((+ (rt1.c0))) FROM vt0 WHERE (CASE WHEN (- (0.5038931506565799)) THEN LOWER(0Xffffffffc7a0c225) WHEN CASE WHEN '-603349303' THEN NULL END THEN ((('-164896458')) BETWEEN ((NULL)) AND ((x''))) WHEN CASE NULL  WHEN NULL THEN '1839212289' END THEN -239495300 COLLATE NOCASE WHEN CASE NULL  WHEN NULL THEN '1338321168' END THEN ((NULL)<(0X5549d27c)) WHEN 0.739227624172462 THEN 0.16888415145282232 ELSE ((((x'0bed')AND(NULL)))OR(x'')) END) EXCEPT SELECT DISTINCT GROUP_CONCAT(((rt1.c2)AND('-1e500'))), ((0.7681242615396768)<=((rt0.c3 IN ()))), (((((((((rt1.c2 IN ()))OR(INSTR(rt1.c2, rt1.c2))))OR(x'')))OR(CAST(rt1.c2 AS BLOB))))AND(rt0.c0)) FROM rt1, vt0, rt0 WHERE (CASE WHEN TRIM(NULL, 1508726527) THEN '1494432018' COLLATE BINARY ELSE CAST(0.3000519734360544 AS INTEGER) END) LIMIT 1982742003;SELECT DISTINCT (CAST(rt1.c0 AS REAL) IN ()) FROM rt0, vt0 WHERE (CAST(((NULL) ISNULL) AS TEXT)) LIMIT 1189805704; -- 0ms;
SELECT DISTINCT CASE MAX(rt0.c3)  WHEN ((rt1.c1)||(rt1.c2)) THEN (NOT (rt0.c0)) ELSE '-1146070773' COLLATE NOCASE END FROM rt0, vt0, rt1 WHERE (((TOTAL_CHANGES())GLOB(UNLIKELY(DISTINCT x'd61b')))); -- 1ms;
SELECT ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE -1802433133 END)<(NULL)) FROM vt0;SELECT DISTINCT (+ (AVG(0.05161704945387702))), ((0.5099366836326557) IS TRUE) COLLATE NOCASE, MAX(LOWER(rt0.c3)) FROM rt1, rt0, vt0; -- 1ms;
SELECT CAST(((rt0.c2)-(rt0.c0)) AS TEXT) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL ((((rt0.c1) IS TRUE))<=(LAST_INSERT_ROWID())) FROM rt1, rt0, vt0 WHERE ((((((('')OR(0.9544776466896799)))OR('*aHs')))/(CAST(NULL AS NUMERIC)))) ORDER BY CAST(((rt0.c4)<(rt0.c4)) AS REAL)  NULLS FIRST, (((rt1.c1)) BETWEEN ((((rt0.c2)GLOB(vt0.c0)))) AND ((((((rt0.c2)OR(rt0.c4)))AND(vt0.c0))))) DESC; -- 0ms;
SELECT ALL (((rt0.c3, 'B)', rt1.c2)) BETWEEN ((rt0.c4, CASE WHEN rt0.c3 THEN rt1.c0 END, ((rt0.c2)==(rt1.c1)))) AND ((CAST(rt1.c1 AS NUMERIC), ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c2)==(rt0.c2))))), 0xffffffffbd1cc4d4, CAST(rt0.c4 AS REAL) COLLATE RTRIM FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL (((rt0.c0, rt0.c4, NULL)) NOT BETWEEN ((NULL, (~ (rt1.c0)), (rt0.c1 IN ()))) AND ((x'', ((((((((rt0.c3)OR(rt1.c0)))OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c2)), ((0.21023942267247453) ISNULL)))), CAST(0.5524641782064893 AS TEXT), CASE WHEN ((vt0.c0)||(rt1.c0)) THEN vt0.c0 END FROM rt0, rt1 WHERE (COALESCE(DISTINCT 0.3441463258154501, '-557340335') COLLATE RTRIM);SELECT (((rt1.c1, rt1.c2, '550177758')) NOT BETWEEN ((rt1.c2, HEX('qX'), ((rt0.c2) IS FALSE))) AND ((rt0.c4, ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c1))))), (((rt0.c2 COLLATE RTRIM))<((CASE vt0.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END))), (((rt1.c2 IN ())) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (CAST(rt1.c2 AS BLOB))) FROM rt1 NOT INDEXED WHERE ((~ (((x'') ISNULL)))) GROUP BY CASE WHEN 4.22515622E8 COLLATE NOCASE THEN CAST(rt0.c2 AS NUMERIC) WHEN ((rt1.c1) ISNULL) THEN ((vt0.c0)<(rt0.c4)) WHEN 0.17902558400390922 THEN ((rt1.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END HAVING ((((rt0.c3)+(rt1.c0)))||(0.2801499484412928));SELECT DISTINCT CASE ((((rt1.c1)AND(rt0.c1)))AND(rt0.c2))  WHEN ((((rt0.c0)AND(rt1.c0)))OR(rt0.c2)) THEN vt0.c0 ELSE (((rt0.c0))>=((rt0.c2))) END, SUM(((0xffffffffce619694) NOT NULL)), rt1.c0, (NOT (((((rt0.c1)OR(x'')))OR(rt0.c4)))), CAST(rt0.c4 COLLATE RTRIM AS INTEGER) FROM rt0;SELECT DISTINCT ((((rt1.c1) ISNULL))&(CASE rt0.c4  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)), ((((rt0.c1)|(rt0.c4)))<=(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)))), MIN(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END) FROM vt0, rt1, rt0 WHERE (CAST('330385681' AS NUMERIC) COLLATE RTRIM) GROUP BY rt1.c0 HAVING ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt1.c2)))AND(rt1.c0)))AND((NOT (NULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c2))>((rt0.c4))) COLLATE NOCASE FROM vt0;SELECT DISTINCT 'E㐊', (~ (((rt0.c1)LIKE(rt0.c0)))), CAST(((((rt0.c2)OR(rt1.c2)))AND(rt1.c2)) AS TEXT), CASE WHEN ((rt1.c0)<<(rt1.c0)) THEN ((rt0.c3)<>(rt0.c0)) END, ((((((rt1.c0) NOT NULL))OR(((rt0.c1) NOT NULL))))AND(((rt0.c2) NOT BETWEEN (x'00b2') AND (rt0.c4)))) FROM vt0, rt0, rt1 WHERE (((('802968739' IN ()))==(x''))); -- 1ms;
SELECT DISTINCT '', ((TOTAL(rt1.c0)) BETWEEN (((vt0.c0) NOTNULL)) AND (((rt0.c0) ISNULL))), ((x'')IS(((rt1.c1) IS FALSE))) FROM rt0;SELECT ALL ((((vt0.c0) NOTNULL)) ISNULL) FROM rt0, rt1 WHERE ((((((((NULL))<>(('-1647456116'))))OR(JULIANDAY(x'', x'', NULL))))AND(((x'5d3e') NOT BETWEEN (0.5371516857284095) AND (NULL)))));SELECT ALL ((((rt0.c3 COLLATE RTRIM)AND(0.005302277769929975)))OR(AVG(rt1.c2))) FROM rt0, rt1; -- 0ms;
SELECT ALL vt0.c0 FROM rt1 LIMIT 243637111 OFFSET 479179521;SELECT DISTINCT (NOT (TOTAL(rt0.c0))), (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt1.c1 END IN ((((rt0.c3, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt1.c2, rt0.c2))))), ((MIN(vt0.c0)) NOTNULL) FROM rt1, rt0, vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(rt1.c2 AS NUMERIC)) OVER () FROM vt0 WHERE (((+ (0.3899089248723011)) IN ())) ORDER BY ((NULL COLLATE NOCASE) NOT BETWEEN ((~ (rt1.c1))) AND (rt0.c3));SELECT DISTINCT (((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c2)), 0.24788435296302036, MAX(''))) AND ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END, 0.38613089715704596, MIN(rt0.c0)))) FROM rt0;SELECT ALL (((rt0.c2)) BETWEEN ((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c2 END)) AND ((rt0.c1 COLLATE RTRIM))) FROM vt0, rt1;SELECT DISTINCT CAST(NULL AS INTEGER), LIKELIHOOD(DISTINCT rt1.c2, 0.11787626730729128), rt1.c0 FROM vt0 WHERE (CASE (('>(')>=(NULL))  WHEN x'' THEN CAST('-1036081884' AS BLOB) END) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c2 END)&(((((vt0.c0)AND(rt0.c1)))OR(rt1.c1))))  NULLS LAST;SELECT DISTINCT 0.05472619250863875 FROM vt0, rt1 NOT INDEXED, rt0; -- 0ms;
SELECT ALL CASE WHEN (rt0.c4 IN ()) THEN CASE rt0.c2  WHEN rt1.c1 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c2 WHEN '908062681' THEN rt0.c0 END WHEN rt1.c1 THEN TYPEOF(rt0.c4) WHEN ABS(vt0.c0) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END ELSE (rt1.c0 IN (rt1.c2)) END FROM vt0, rt1, rt0 WHERE (CAST(((((NULL)OR('ꂴW겸_q敳?ꇄh')))AND('0.9463183422336697')) AS NUMERIC)) GROUP BY (((rt0.c4, rt0.c4, rt0.c1, rt1.c1, rt1.c1, rt0.c3, rt1.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (NULL)), ((rt0.c3) NOTNULL), (+ (rt1.c2)), COALESCE(rt0.c0, rt1.c2), (((rt0.c2, rt0.c4, rt1.c2))<>((rt1.c1, rt1.c0, rt1.c2))), NULL, 0.9773220115353084)) AND (((+ (rt0.c2)), ((rt0.c3) IS TRUE), ('797102866' IN ()), ((((rt0.c1)OR(rt1.c0)))AND(0.03617270922315241)), ((((rt1.c2)AND(rt0.c0)))AND(rt0.c1)), NULL, json_valid(rt1.c0)))), (+ (CASE WHEN rt0.c2 THEN rt0.c3 ELSE x'5b34' END)), ((((((((((rt0.c1)OR(0.49497748701743727)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))+(0.7539834531695732)) HAVING ((CASE rt1.c2  WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c2 END)||(CASE 0.4786431206254804  WHEN 0.22566433820906995 THEN rt0.c4 END)); -- 0ms;
SELECT ALL (TOTAL(rt0.c3) IN ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((0.36459337815875825))), x'')) FROM vt0, rt1;SELECT CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))) THEN ((rt0.c1) IS FALSE) WHEN rt1.c2 COLLATE NOCASE THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) WHEN ((rt0.c4) IS TRUE) THEN LAST_INSERT_ROWID() END, ((((x'5284')-(rt0.c3)))<(((vt0.c0)IS(rt1.c1)))), ((CASE '[]'  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt0.c0)*(NULL)))) FROM vt0, rt0, rt1 WHERE (x''); -- 0ms;
SELECT DISTINCT CAST(rt1.c2 AS NUMERIC) FROM rt0, rt1 WHERE ((TRIM(DISTINCT '-455738725') IN ())); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) ISNULL), ((MAX(rt0.c1))/(vt0.c0)), ((((((((((((((((rt0.c4)AND(CAST(0.35424117857950643 AS NUMERIC))))AND(((rt0.c4)|(NULL)))))OR(json_insert(rt0.c4, rt0.c3, rt1.c2))))AND(MIN(rt0.c4))))AND((- (rt0.c0)))))AND(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt1.c1)))OR(rt0.c1)))))AND(((rt0.c0)AND(rt1.c2)))))OR(((rt0.c2)<>(rt0.c2)))) FROM rt0, rt1 WHERE (x'');SELECT ((('i'))>=((((rt0.c4)-(rt1.c0))))), ((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))>=((rt1.c0 IN (rt1.c0, vt0.c0)))), ((((((vt0.c0)AND(rt1.c2)))OR(rt1.c2))) NOT BETWEEN (json(rt1.c1)) AND (((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)))) FROM vt0;SELECT DISTINCT (rt0.c4 IN ()) COLLATE NOCASE FROM rt1 WHERE (((x'') BETWEEN (8.42684077E8) AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT TRIM(DISTINCT COUNT(*)) FROM rt1, rt0, vt0; -- 1ms;
SELECT DISTINCT ((((((((((rt0.c2)AND(rt1.c1)))AND(rt0.c4)))AND(rt1.c0)))OR(rt0.c3)))!=(MAX(rt0.c0))), CASE rt0.c0 COLLATE NOCASE  WHEN NULL THEN CASE rt0.c0  WHEN rt1.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 ELSE 0.20368581139968656 END ELSE ABS(NULL) END, ((CAST(rt0.c2 AS NUMERIC)) NOT NULL) FROM rt0, rt1, vt0 WHERE (((((((NULL) ISNULL))OR(-1959456093 COLLATE RTRIM)))AND(((0.5292178069681482)IS('pu!F)Gb{7'))))); -- 0ms;
SELECT DISTINCT ((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(((rt0.c1) NOT NULL))))OR(((rt1.c0)>=(rt1.c0)))))OR(json_array(rt0.c0, rt0.c4))))OR(rt0.c1 COLLATE NOCASE)), ((NULL) IS FALSE), ((rt1.c0 COLLATE NOCASE) IS TRUE) FROM rt0 WHERE ((('')!=('')) COLLATE RTRIM COLLATE RTRIM);SELECT ((((((rt0.c1) BETWEEN (rt1.c2) AND (NULL)))AND((- (rt1.c0)))))OR(MAX(rt1.c1))) FROM rt0, rt1, vt0 WHERE ((- ((((('Y]')AND(-437826697)))OR('-537026380'))))); -- 0ms;
SELECT CAST(CAST(rt1.c1 AS REAL) AS BLOB) FROM rt0;SELECT ALL (((((((((rt1.c1 IN (rt0.c2)))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(rt1.c2 COLLATE NOCASE)))OR((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(CAST(rt1.c1 AS INTEGER))), (- (((rt0.c4)<>(rt0.c4)))), ((rt0.c3 COLLATE NOCASE) BETWEEN (rt0.c2) AND ((((0.21533367445246043, rt0.c1, vt0.c0))=((rt1.c2, rt0.c0, rt1.c2))))) FROM vt0, rt1, rt0 WHERE (CAST(((x'') IS TRUE) AS NUMERIC)) LIMIT -996129433 OFFSET -859321355; -- 0ms;
SELECT 0.5493667449652578 FROM rt1, vt0; -- 0ms;
SELECT ((((((((vt0.c0)AND(rt1.c1)))AND(NULL)))AND(rt1.c2)))AND(rt1.c2)) COLLATE BINARY FROM rt0, vt0, rt1 WHERE ((('' COLLATE RTRIM)LIKE((NOT (x'4ad3'))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c1)) AS INTEGER) FROM rt0, rt1, vt0 WHERE (CAST('64642893' AS BLOB) COLLATE RTRIM) GROUP BY DATE((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((vt0.c0))), 0.7363837533403927 COLLATE BINARY, (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))); -- 1ms;
SELECT LEAD(rt1.c2, (((((rt0.c3))=((rt1.c0))))>(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt1.c1 THEN rt1.c1 END)), ((((rt0.c0) IS TRUE))IS(((rt0.c4)*(rt1.c2))))) OVER (), (((- (rt1.c1)))<<(((rt0.c1) BETWEEN (rt1.c2) AND (vt0.c0)))), ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2))) NOT BETWEEN (((x'')LIKE(rt0.c3))) AND (((rt1.c1) NOT BETWEEN (rt0.c3) AND (NULL)))) FROM vt0, rt1, rt0 WHERE ((((NULL, x'', 'hek*c}~隡')) BETWEEN ((CAST(x'' AS REAL), CASE WHEN '-1000166269' THEN NULL END, CAST(NULL AS REAL))) AND ((CASE NULL  WHEN 'I)T팳lOFF烝' THEN '1653284575' ELSE NULL END, CASE WHEN -1405111109 THEN 0.15668954641239052 ELSE -1779661819 END, (- ('7ꉺ')))))); -- 0ms;
SELECT ((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c3)))OR(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))))AND((~ (rt0.c4)))), (((vt0.c0, x'', vt0.c0)) NOT BETWEEN (((rt1.c2 IN (rt0.c0)), (((vt0.c0, rt0.c4, rt0.c1, vt0.c0, rt1.c1)) BETWEEN ((vt0.c0, x'', rt0.c0, rt0.c4, rt1.c1)) AND ((vt0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c2))), CAST(rt0.c1 AS REAL))) AND ((json_array_length(rt1.c0, rt0.c1), 0.5458145270344065 COLLATE NOCASE, rt0.c1 COLLATE NOCASE))), CASE (rt0.c2 IN ())  WHEN rt0.c3 THEN CASE rt0.c3  WHEN NULL THEN rt0.c1 ELSE rt1.c0 END WHEN TOTAL(rt0.c3) THEN rt0.c4 WHEN rt0.c1 COLLATE RTRIM THEN rt0.c4 COLLATE BINARY END FROM vt0, rt0 WHERE (((((((((((((0.5824140628397281)AND(x'56579148')))OR(NULL)))OR(((x'') NOTNULL))))OR((('FALSE') IS FALSE))))OR(CAST(-2.113187658E9 AS NUMERIC))))AND((- (0.4286732160267135)))));SELECT FIRST_VALUE(json_quote(((rt0.c1) NOTNULL))) OVER (), TOTAL(((((rt1.c0)AND(x'')))AND(rt0.c1))) OVER (), rt1.c2, ((((rt0.c2)+(rt1.c1))) BETWEEN ((NOT (rt1.c2))) AND (PRINTF(vt0.c0))), ((rt1.c2) NOT BETWEEN (((rt1.c0) BETWEEN (vt0.c0) AND (-5.3702638E8))) AND ((('')GLOB(rt1.c2)))) FROM rt0, rt1, vt0 WHERE (((+ (0.2278182271700162)) IN ())); -- 0ms;
SELECT ALL ((((((((((((((((rt0.c0)OR(rt0.c3)))OR(rt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c4)))AND(rt0.c1)))OR(rt1.c1)))AND(NULL)) COLLATE BINARY FROM rt1, rt0 WHERE (((CAST(68030250 AS REAL))>=(((((0.2953585082072967)OR(NULL)))AND(0.2245913062893985))))) ORDER BY (~ ((NOT (rt0.c2))));SELECT DISTINCT ((('{%HB}')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) COLLATE RTRIM FROM rt1 WHERE (((+ (NULL)) IN (((x'')<(0.13937871073406016)), ((('-1146070773', NULL, 'ꢤd')) BETWEEN ((x'', '1840493781', x'e88a')) AND ((x'', '296730813', 0.7493278055725174)))))) ORDER BY CASE WHEN ((rt1.c0) ISNULL) THEN 1.039731688E9 COLLATE RTRIM ELSE ((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c1)) END ASC;SELECT DISTINCT ((CASE rt1.c2  WHEN NULL THEN rt0.c4 ELSE rt1.c1 END)<<(CASE x''  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)), rt1.c2, CAST(0.0910090877557922 AS REAL) FROM vt0 LIMIT 1547008684 OFFSET 192123260;SELECT CAST((((rt0.c2))!=((rt0.c1))) AS INTEGER), ((CAST(vt0.c0 AS NUMERIC))AND(AVG(rt0.c2))), (((rt0.c2 IN (rt1.c1))) IS TRUE) FROM rt1, vt0 ORDER BY rt1.c2  NULLS FIRST;SELECT ALL ((((rt1.c0) IS FALSE))*(SUM(rt0.c0))) FROM rt0;SELECT DISTINCT COUNT(((rt1.c0) NOT BETWEEN (rt0.c3) AND (0.9265560123797454)) COLLATE BINARY) OVER ( RANGE  CURRENT ROW), ((((rt0.c0)>=(vt0.c0)))&('0.5734169876880205')), GROUP_CONCAT((rt1.c0 IN ('yN6꺪&鯄'))) FROM rt1, rt0, vt0; -- 1ms;
SELECT DISTINCT (((rt0.c3 COLLATE BINARY, CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END, (rt0.c2 IN (rt0.c4, rt0.c1))))!=((rt1.c2 COLLATE RTRIM, ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c1)), CAST(rt0.c0 AS BLOB)))) FROM rt0, rt1;SELECT DISTINCT ((((x'' COLLATE RTRIM)AND((vt0.c0 IN (rt0.c4)))))AND(CASE WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c2 END)) FROM vt0, rt0;SELECT DISTINCT (((+ (0.3446271369302427))) BETWEEN (MAX(rt1.c1)) AND (CAST(rt0.c0 AS REAL))) FROM rt0 FULL OUTER JOIN rt1 ON rt0.c2 CROSS JOIN vt0 ON ((((vt0.c0) IS TRUE)) NOT NULL); -- 0ms;
SELECT ALL (((GROUP_CONCAT(NULL)))==((0.02393763056085141))), rt0.c3, ((((rt0.c2)OR('8ṰjG纙')))AND((rt0.c4 IN (rt1.c1)))) FROM rt1, rt0, vt0 GROUP BY LTRIM(CASE rt0.c3  WHEN vt0.c0 THEN rt1.c0 END, ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))), ((vt0.c0) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c2 END) AND (CAST(vt0.c0 AS NUMERIC))), (~ (rt1.c0)); -- 2ms;
SELECT DISTINCT COUNT(TRIM(rt0.c2, rt0.c4)) OVER (), AVG(((rt0.c3) ISNULL)) OVER (), ((rt0.c4)IS NOT(rt0.c0)) COLLATE NOCASE FROM rt1 WHERE ((((((((((('')<=('1830818421')))AND((('') NOT BETWEEN (0.0700269015263667) AND (0x428f6d46)))))OR(((('440194', -1.255773752E9, x'')) BETWEEN ((0.6949792676751121, x'cd78', x'3d4a')) AND (('-890741727', x'62c6', x'98c8'))))))OR(CASE '-1502508303'  WHEN 0.47259731357346224 THEN '' END)))AND(((x'')%(NULL)))));SELECT ((((vt0.c0) ISNULL))<((((rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c1, rt1.c0))))) FROM rt0, rt1 WHERE (((((NULL))<=((0.43593232432968887))) IN ()));SELECT DISTINCT COALESCE(CAST(rt0.c1 AS REAL), 0.4363490718638984) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL ((((((((rt0.c1)OR(((rt0.c3)|(vt0.c0)))))AND(CAST(rt0.c0 AS REAL))))OR((rt0.c3 IN ()))))AND((((rt0.c0))==((rt0.c3))))) FROM rt1;SELECT DISTINCT vt0.c0 FROM rt1;SELECT DISTINCT ((((vt0.c0)==(rt0.c3))) NOTNULL), CASE CASE rt1.c2  WHEN x'' THEN vt0.c0 END  WHEN ((rt0.c3)&(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt1.c1) AND ('夋 ')) ELSE CASE rt1.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c3 END END, ((((rt1.c1) NOT NULL))<>(((rt1.c2)IS(rt0.c3)))) FROM rt1, rt0;SELECT LIKELIHOOD(DISTINCT CAST(rt0.c0 AS NUMERIC), 0.1147193846833825) FROM vt0, rt0 WHERE (CASE CAST(0.9391255952604325 AS TEXT)  WHEN 0.028919568588361644 COLLATE RTRIM THEN '8	.' COLLATE RTRIM ELSE (('-1123021515')<(x'')) END); -- 0ms;
SELECT DISTINCT ((((0.07557341751022373)|(rt1.c1))) ISNULL) FROM rt0, rt1 WHERE (CAST((('') BETWEEN ('-347757619') AND (x'76d6')) AS TEXT)); -- 0ms;
SELECT ALL CAST(CASE rt0.c4  WHEN rt1.c0 THEN '' WHEN vt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c4 END AS REAL), ((((vt0.c0)>=(rt1.c1))) ISNULL), NULLIF(DISTINCT rt1.c2, rt0.c0) COLLATE BINARY FROM vt0, rt0, rt1; -- 0ms;
SELECT (((vt0.c0, rt0.c2, rt0.c3)) BETWEEN ((MIN(rt0.c4), ((rt0.c1) ISNULL), TRIM(rt0.c4))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c1)), UPPER(vt0.c0), ((((rt0.c3)AND(vt0.c0)))OR(rt0.c2))))), ((rt0.c3)LIKE((+ (rt0.c0)))), (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END, LAST_INSERT_ROWID(), COALESCE(DISTINCT rt1.c1, rt1.c2)))<=((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c0)), LOWER(rt0.c1), ((rt0.c0) ISNULL)))) FROM vt0, rt0;SELECT CAST(rt0.c4 AS BLOB) FROM vt0, rt1 WHERE (MIN(NULL, '鿚w') COLLATE NOCASE) ORDER BY ((((rt0.c4)!=(rt0.c2)))+(((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c2)))OR(rt0.c0)))) DESC  NULLS LAST;SELECT DISTINCT ((rt0.c1)OR(COUNT(rt0.c2))), rt0.c1, rt1.c0 FROM vt0, rt1 WHERE (CASE (('1508726527') ISNULL)  WHEN (NOT (NULL)) THEN (- (1269537387)) END) LIMIT 120314847;SELECT DISTINCT (((NOT (rt0.c2)))IS NOT(((rt1.c0)<(rt1.c2)))), rt0.c1 COLLATE NOCASE, CASE WHEN AVG(rt0.c4) THEN ((x'')GLOB(rt0.c4)) END, CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END COLLATE BINARY, ((((rt0.c0)<=(0.10413885644095366))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0))) AND ((((rt0.c3, rt0.c4, rt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt1.c1, rt1.c1, rt0.c3))))) FROM vt0, rt0, rt1 WHERE (((('|6')==('467501897')) IN ('-1741352399'))) ORDER BY (((NOT (rt0.c1))) BETWEEN (x'') AND (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c4)))); -- 0ms;
SELECT ALL NULL FROM rt0, rt1 WHERE (CAST(((0.04404434306252658)IS('-863669251')) AS INTEGER)); -- 0ms;
SELECT ((((((rt0.c2)>(rt1.c1)))AND(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)))AND(((rt0.c0)=(rt0.c1)))) FROM rt1, rt0 WHERE (((0.9608129088862069) NOT NULL)) LIMIT 1160444955 OFFSET -104584017;SELECT DISTINCT (((+ (rt0.c3)))AND(CASE WHEN rt1.c2 THEN rt0.c4 END)) FROM rt0, vt0, rt1 NOT INDEXED WHERE (CAST(((((((((x'')AND('-1971225906')))AND('m')))OR(NULL)))AND(x'')) AS REAL)) GROUP BY (((rt1.c2) IS FALSE) IN (((((x'4faf2813')AND(rt0.c3)))AND(vt0.c0)))), TYPEOF(DISTINCT CASE rt0.c4  WHEN rt1.c2 THEN rt0.c0 ELSE vt0.c0 END), 0.26394026306925544 HAVING ((((((((NULL)OR(rt0.c0)))AND(rt1.c2)))OR(((rt0.c0)<=(rt0.c2)))))AND(((((((((rt0.c4)AND(rt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c2)))); -- 0ms;
SELECT ALL LTRIM(((vt0.c0)<=(rt0.c3))) FROM rt1, rt0, vt0; -- 0ms;
SELECT CAST((((vt0.c0, rt1.c0, rt0.c4))<((rt0.c3, rt0.c2, rt0.c4))) AS INTEGER), (((rt1.c0)<=(rt0.c3)) IN ()), GROUP_CONCAT((~ (rt1.c0))) FROM rt1, rt0, vt0 WHERE (((((((((((0x261a3cb4) BETWEEN (0X5c471df0) AND (x'')))AND((+ (0.44296529103027893)))))OR((x'' IN ()))))AND(CAST(NULL AS NUMERIC))))OR(((((((((0xfffffffffce2ca82)OR(x'')))AND('981458551')))OR(NULL)))OR('ZNsl\Yd'))))); -- 0ms;
SELECT DISTINCT NULLIF('X!P?s\-q', ((rt0.c2) NOT BETWEEN (rt0.c4) AND (x''))) FROM rt1, rt0 LIMIT 555182227 OFFSET 1973399575; -- 0ms;
SELECT NULL FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL (((vt0.c0)<=(rt0.c3)) IN ((~ (rt0.c3)))) FROM rt0, rt1 GROUP BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c1)))=(((((((((rt1.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))AND(NULL)))) HAVING (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt1.c2))))|(CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN 0.4700704754550443 WHEN rt1.c0 THEN rt1.c0 END));SELECT DISTINCT ((((((((CAST(rt0.c3 AS NUMERIC))OR((- (rt0.c1)))))OR(rt1.c1)))OR((((rt1.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))))OR(CAST(NULL AS INTEGER))) FROM rt1, vt0, rt0 WHERE (NULLIF(DISTINCT (~ (-1647456116)), ((NULL)/('.B')))); -- 0ms;
SELECT CAST(0x994ab46 AS NUMERIC), COUNT(*) FILTER(WHERE ((0.39305106774892173) NOT BETWEEN (CASE rt1.c0  WHEN rt0.c3 THEN NULL END) AND (NULL))) OVER (), CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN ((0.3406515988140726)=(rt1.c2)) ELSE rt0.c2 COLLATE RTRIM END FROM rt0 WHERE (((((0Xffffffff905269f7)OR(CASE '0.04421189725605279'  WHEN 'p' THEN '203700555' END)))OR(x'83e0' COLLATE NOCASE)));SELECT DISTINCT CASE (((rt0.c0, rt1.c1, rt1.c2, vt0.c0, rt0.c0))<((rt1.c1, 'm蒊v잪7L', rt0.c1, rt0.c0, rt1.c2)))  WHEN ((rt1.c2)>(rt0.c2)) THEN (rt1.c1 IN ()) END FROM rt1, vt0, rt0 WHERE (((load_extension(x''))GLOB((((1.60738118E8, x'f1fc', '-679032289'))>=(('䱝', '722129357', 0.9493715354723937)))))) LIMIT -1170840176 OFFSET -39483649;SELECT ALL ((((rt1.c1)|(vt0.c0))) IS FALSE) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))))<((rt0.c4))) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL (NOT (((rt0.c0)AND(rt0.c4)))) FROM rt0, rt1, vt0 WHERE (((((((NULL)OR(131789642)))OR('-1779238851'))) IS TRUE)) GROUP BY vt0.c0; -- 1ms;
SELECT DISTINCT (((rt0.c4) ISNULL) IN ()) FROM rt0, rt1 WHERE (CAST(((0.30605456617719895) BETWEEN (0.5901293754404798) AND ('-2123304321')) AS INTEGER)); -- 0ms;
SELECT rt0.c4 COLLATE BINARY FROM vt0, rt1 WHERE (x'' COLLATE RTRIM);SELECT DISTINCT ((((((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c2)))OR(ABS(DISTINCT rt0.c2))))AND(((rt1.c2) IS FALSE))) FROM rt0 LIMIT 1948853486 OFFSET -1502603118;SELECT DISTINCT (((- (rt0.c2))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 END) AND (COUNT(rt1.c0))) FROM vt0, rt0;SELECT ALL LAG(((CAST(rt0.c0 AS NUMERIC)) IS TRUE), (((NULL COLLATE RTRIM))<=((((rt0.c1)%(rt0.c4))))), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE RTRIM COLLATE BINARY) OVER (), NTILE(((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)) COLLATE BINARY) OVER (), CASE WHEN vt0.c0 THEN rt1.c2 END COLLATE NOCASE FROM rt0;SELECT MAX(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) FROM rt1, rt0, vt0 ORDER BY (((+ (rt1.c0)))||(rt1.c2 COLLATE BINARY))  NULLS LAST, CASE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))  WHEN (- (vt0.c0)) THEN rt0.c2 COLLATE NOCASE END  NULLS LAST; -- 0ms;
SELECT ((((((rt1.c1)>>(rt1.c0)))OR((((rt0.c2, rt0.c1, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt0.c3)) AND ((rt0.c4, '1596797308', rt0.c1))))))OR((((rt1.c2, rt1.c0, rt0.c1))<=((rt0.c0, rt0.c1, x''))))) FROM vt0;SELECT AVG(CAST(rt0.c1 AS TEXT) COLLATE NOCASE) FROM vt0 GROUP BY ((CAST(rt1.c0 AS REAL)) BETWEEN ((((rt1.c2, x'', rt0.c0))<((rt1.c2, rt0.c1, rt1.c0)))) AND (((rt0.c2)%(rt1.c0)))), INSTR(CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN '1678612443' THEN rt0.c3 ELSE rt0.c4 END, (rt0.c4 IN ())), STRFTIME(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)), (~ (vt0.c0)), ((((((((vt0.c0)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2))), ((((0x46b25ac)=(rt0.c4)))OR(((vt0.c0)<=(rt1.c0)))), ((((rt1.c0) IS FALSE)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c0 END) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) HAVING ((((-2.123304321E9)AND(rt0.c4))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c0))) AND (((((0x572b590c)OR(rt0.c3)))OR(rt0.c1)))) ORDER BY (((rt0.c0)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c2)));SELECT DISTINCT CAST(NULL AS INTEGER) FROM rt0; -- 0ms;
SELECT ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c4)))OR(((rt1.c0) ISNULL))))OR(((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))AND(rt0.c4)))AND(rt0.c4)))))AND('t')))OR((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))), CAST(json_quote(rt0.c1) AS REAL), ((((x'')==(rt0.c3))) NOT BETWEEN (((NULL)LIKE(rt1.c0))) AND (x'9e91')) FROM vt0 WHERE ((+ ((('527763290') NOT NULL))));SELECT DISTINCT vt0.c0, ((AVG(rt0.c1))&(((rt1.c2) IS FALSE))), (+ ((((rt1.c1)) BETWEEN ((rt1.c2)) AND (('GJgdM'))))), COUNT(CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c0 END) OVER (), (((((((((~ (rt0.c4)))OR(((rt1.c2)/(rt1.c2)))))OR(CAST(rt1.c2 AS TEXT))))OR((- (rt1.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN rt1.c0 WHEN '1052060470' THEN rt0.c0 END)) FROM rt0, vt0 WHERE (CHANGES()) LIMIT 1159645155 OFFSET 774185529;SELECT ALL (((- (rt0.c4)))=(0.34034451448272773)), GROUP_CONCAT(0.6713681571833217) OVER (), ((rt0.c4 COLLATE RTRIM)<((((('^k')OR(rt0.c4)))AND(rt1.c1)))) FROM rt1, rt0, vt0 ORDER BY (x'' COLLATE BINARY IN (((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0)), (NOT (rt0.c3)))) ASC  NULLS LAST; -- 35ms;
SELECT DISTINCT json_remove(((rt0.c2) IS TRUE), ((rt1.c2)=(vt0.c0)), ((((rt0.c3)AND(rt0.c4)))OR(rt1.c1)), COUNT(*), rt1.c2 COLLATE RTRIM, CAST(rt1.c1 AS BLOB)) FROM rt1, vt0;SELECT ALL ((((rt1.c0 IN ())))<>((0.810132680203949))) FROM vt0, rt0 WHERE ((((('2059188407') IS FALSE))<<(((NULL)LIKE(-5.3702638E8))))); -- 0ms;
SELECT ALL GROUP_CONCAT(LIKELIHOOD(rt1.c1, 0.9022901427338538)), x'', (+ ('1159645155')) COLLATE BINARY FROM vt0, rt1, rt0 WHERE (CAST(CASE WHEN x'' THEN x'' WHEN 0.322067171404246 THEN 6.18111428E8 WHEN '-583888755' THEN 'wO꘨' WHEN x'' THEN NULL WHEN NULL THEN '-991912140' END AS TEXT)); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c4 END) IS TRUE) FROM rt0;SELECT 0.8713303501317964 FROM vt0, rt1 LIMIT -1310795439; -- 1ms;
SELECT ALL ((rt0.c2)>(((rt1.c2) NOT NULL))) FROM rt1, vt0 ORDER BY (((0.27309979737441314) IS FALSE) IN ()) DESC, (+ (((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))) ASC  NULLS FIRST;SELECT DISTINCT SUM(((rt0.c4) IS TRUE)) OVER (), (((x'' IN (rt0.c1, rt1.c1)))IS(CASE rt0.c3  WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c0 END)), (~ (((rt0.c2)<(rt0.c3)))), ((CAST(rt0.c1 AS BLOB))|(((rt0.c4)-(rt0.c4)))), ((CAST(rt1.c1 AS INTEGER))<<((((rt1.c0, rt1.c1, vt0.c0)) BETWEEN ((rt0.c3, rt0.c0, rt1.c2)) AND ((rt0.c3, rt1.c2, rt0.c4))))) FROM rt0, rt1;SELECT DISTINCT ((((((rt0.c3) NOTNULL))AND(LTRIM(rt1.c2, rt1.c1))))AND('-1502508303')) FROM rt0 NATURAL JOIN vt0 WHERE (UPPER(CASE '1585098471'  WHEN '1015555640' THEN '0.27867905633758017' ELSE 0.966257713447786 END));SELECT DISTINCT COALESCE(DISTINCT ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), COUNT(vt0.c0)) FROM rt0, vt0; -- 0ms;
SELECT ALL TOTAL(((((rt0.c4)AND(rt0.c0)))AND(rt0.c0))) FROM vt0, rt1;SELECT DISTINCT ((((rt1.c2)>=(rt0.c4)))AND(rt0.c0)) FROM rt1 WHERE (((((NULL) IS TRUE)) IS TRUE)) ORDER BY rt1.c1;SELECT ALL AVG('51017266') FROM rt1, rt0, vt0; -- 0ms;
SELECT (+ (NULL)) FROM vt0, rt1; -- 0ms;
SELECT (- (((rt0.c1)=(rt0.c1)))) FROM rt1 WHERE ((LIKELY(DISTINCT '') IN ()));SELECT DISTINCT ((((((rt0.c3) NOT NULL))AND(((rt0.c3) NOTNULL))))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))) FROM vt0, rt0 GROUP BY CAST(((rt0.c4) NOT NULL) AS REAL), ((0x78a1d598)>(rt0.c1)), '-1390719250', '1362685445', (((NULL))=((rt0.c2))) COLLATE BINARY HAVING (((+ (vt0.c0))) NOT BETWEEN ((((('-1069079282')OR(' x1')))OR(x''))) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)); -- 1ms;
SELECT DISTINCT ((((((rt0.c0)OR(rt1.c0)))OR(rt0.c1)))<>((NOT (rt1.c2)))) FROM rt0, vt0, rt1 WHERE (((0X4b08ec0f COLLATE RTRIM)=(CAST(NULL AS REAL)))); -- 0ms;
SELECT (+ ((x'' IN ()))) FROM rt1, rt0 WHERE (CAST(LOWER('-1382936701') AS NUMERIC)) GROUP BY highlight(((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c1)), rt0.c4, TRIM(rt0.c0), json_valid(rt1.c2)), ((((((rt1.c2)AND(0.19826326486520562)))AND(rt1.c1)))&(((rt0.c2)%(x'')))), (~ (((rt0.c2)AND(rt0.c3)))) ORDER BY rt0.c4 DESC  NULLS FIRST;