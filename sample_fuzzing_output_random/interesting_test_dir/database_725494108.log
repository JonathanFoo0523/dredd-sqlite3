-- Time: 2024/06/07 06:32:55
-- Database: database8
-- Database version: 3.40.0
-- seed value: 725494108
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, , columnsize=1); -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0x69119216), ('%	,^2'), (0.3689407988875858); -- 2ms;
ANALYZE; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, languageid="lid"); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END COLLATE RTRIM; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR REPLACE INTO vt1(c0, lid) VALUES (0.3689407988875858, '鈖킧g[|'), (0.701700563809785, NULL), ('1762759190', '%	,^2'), ('66PFA', NULL), (NULL, '1762759190'); -- 1ms;
UPDATE OR REPLACE vt0 SET c0=NULL; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 4ms;
UPDATE OR FAIL vt1 SET (lid)=(x''); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt1 SET (lid, c0)=('鈖)쮫', 0.7474961212783565) WHERE CAST(LIKELY(vt1.lid) AS TEXT); -- 0ms;
REINDEX  vt1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT OR IGNORE INTO vt1(lid) VALUES ('t梓pltQ'), (0Xffffffffd6d76893), ('kTI\n'), (x''), (x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.8026401388606356); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -552525443);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43525'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1708643287); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 1ms;
PRAGMA journal_mode; -- 0ms;
INSERT OR IGNORE INTO vt1(lid) VALUES (0.8428718768279934); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1027428935'), (x'1af2'), (x''); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (-2141802448); -- 0ms;
INSERT OR IGNORE INTO vt1(lid) VALUES (x'6beb'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
PRAGMA main.stats; -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1762759190'); -- 0ms;
UPDATE OR ABORT vt0 SET c0='()' WHERE ((((vt0.c0)LIKE(x''))) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES ('/oP<)ME?', 0.2783273584783814); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x'b534'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1794792273); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt1 SET (lid)=(NULL) WHERE ((vt1.lid)*(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)); -- 0ms;
PRAGMA main.soft_heap_limit = 0; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA mmap_size; -- 2ms;
PRAGMA reverse_unordered_selects; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
UPDATE vt1 SET lid=0.6048171448663844, c0=NULL; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.005278155138055851; -- 1ms;
UPDATE vt0 SET c0=''; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0, lid) VALUES (25180265, 0.13589888773947978); -- 0ms;
PRAGMA main.checkpoint_fullfsync = false; -- 0ms;
DELETE FROM vt1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1130013905);\n; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES ((((- (2.5180265E7))) IS FALSE), '-976272988'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0xffffffffa4ff5f4e); -- 0ms;
REINDEX; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (0.005278155138055851), ('-1027428935'), (25180265); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA optimize; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES ('QEf)4', NULL), (NULL, 'aVg5/'), ('-307806033', 0.49611668470315196); -- 0ms;
INSERT OR ROLLBACK INTO vt1(lid) VALUES ('-615589428'), (0.13589888773947978), (-1420778517); -- 16ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x''); -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES ('', '-976272988'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('Xb'); -- 5ms;
UPDATE OR FAIL vt1 SET (lid)=(x'016b') WHERE CASE ((vt1.c0)||(vt1.c0))  WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)) THEN (vt1.c0 IN ()) ELSE vt1.c0 END; -- 7ms;
ROLLBACK TRANSACTION; -- 1ms;
COMMIT; -- 0ms;
PRAGMA temp.ignore_check_constraints = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1130013905);\n; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-552525443 noskipscan'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 3ms;
INSERT OR IGNORE INTO vt1 VALUES ('', ''), ('T', x''), (0.7004458560521731, 0.17456481277647629); -- 1ms;
INSERT OR ABORT INTO vt1(lid, c0) VALUES ('0.6048171448663844', 0.005278155138055851); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE vt1 SET (lid)=(0.7004458560521731) WHERE (((x'', vt1.lid, vt1.c0)) NOT BETWEEN ((vt1.lid, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.lid, vt1.c0))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO vt1(lid, c0) VALUES (NULL, x''), (x'', '62200582'), (0.7004458560521731, 'Bw'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 157602954); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
PRAGMA mmap_size = -6339103866945238082; -- 0ms;
UPDATE vt1 SET lid='' WHERE (vt1.lid COLLATE BINARY IN ((+ (NULL)), (NOT (NULL)))); -- 0ms;
UPDATE vt1 SET c0=x'', lid=NULL; -- 0ms;
INSERT OR IGNORE INTO vt1(lid) VALUES (0.9005724291108442), (x''), (NULL), ('1514456640'), ('-552525443'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=953896651 unordered'); -- 13ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT ((((vt1.lid)%(vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((vt0.c0 IN ()))) FROM vt1, vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1574449648); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=(-2.635005E7, '', x'2e69'); -- 1ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ((((vt0.c0)+(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (AVG(v0.c0))) FROM v0;SELECT DISTINCT ((((((vt1.c0)OR(vt0.c0)))AND(x'')))>(vt1.lid COLLATE RTRIM)) FROM vt0 WHERE (((-307806033) NOT BETWEEN (0.4729676779152058 COLLATE RTRIM) AND (NULL)));SELECT ALL ((vt1.c0) NOT BETWEEN (vt1.lid) AND (x'788e')) COLLATE NOCASE FROM vt0, v0, vt1 WHERE (TRIM((((('62200582')AND(x'')))AND(-122425009)))); -- 0ms;
SELECT ALL ((AVG(vt0.c0)) ISNULL), (NOT (vt1.lid)), (NOT ((vt0.c0 IN ()))) FROM vt0, v0 WHERE (LENGTH(NULL));SELECT TOTAL(((v0.c0) IS FALSE)) FROM v0 WHERE (TRIM(DISTINCT CAST('/]egeᬆ' AS TEXT))); -- 0ms;
SELECT DISTINCT CAST(((v0.c0)IS(v0.c0)) AS NUMERIC) FROM vt0;SELECT ALL (((v0.c0 IN ())) ISNULL) FROM v0 LIMIT -26350050; -- 0ms;
SELECT (ABS(vt1.lid) IN ()) FROM v0, vt0, vt1 WHERE (((((((0.7600162054539586)>=(x'd773')))AND((((-1047834378, NULL, x'', -307806033, NULL)) NOT BETWEEN (('2044650206', NULL, x'ca7b', '', '9PR+b%[N*')) AND ((x'', x'', NULL, '1660860456', '25180265'))))))AND(((x'') NOT NULL)))); -- 0ms;
SELECT CASE WHEN ((vt0.c0) IS FALSE) THEN ((v0.c0)/(vt1.lid)) END, ((((((((((vt1.c0)OR(vt1.lid)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)))>(((vt0.c0)-(0.7004458560521731)))), GLOB(((v0.c0) IS FALSE), NULL) FROM vt1, vt0 WHERE ((((x'5500', '953896651', '⳩')) BETWEEN ((((-1.130013905E9)>>(1420333803)), ((x'')/('0.7600162054539586')), ((0x78e86a14) NOT NULL))) AND ((((x'') NOT BETWEEN ('-26350050') AND (0.10465425207836032)), CASE WHEN '' THEN NULL WHEN '2044650206' THEN -6.90526061E8 WHEN 0.9177999662764865 THEN 'aVg5/' ELSE NULL END, CASE WHEN '1863067' THEN 0.9177999662764865 END)))) LIMIT 1207553257;SELECT ALL (~ (((((((((vt1.c0)OR('')))AND(v0.c0)))AND(vt1.c0)))OR(vt1.lid)))) FROM v0, vt0;SELECT ((((vt0.c0) ISNULL)) IS TRUE), (- (COUNT(NULL))), COUNT(*) FROM vt1, vt0 WHERE (((0.5831737183830125 IN ()) IN ())) ORDER BY (vt1.lid IN ()) COLLATE NOCASE ASC  NULLS LAST, (((v0.c0 IN ('968493195')))OR(ABS(DISTINCT v0.c0))) ASC  NULLS LAST;SELECT PERCENT_RANK() OVER () FROM v0, vt1, vt0 WHERE ((((NULL)) NOT BETWEEN ((((0.49611668470315196) IS TRUE))) AND ((((0.005278155138055851)<(0.7474961212783565)))))) LIMIT -1526767794 OFFSET 1420333803; -- 0ms;
SELECT (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))) AND ((+ (v0.c0)))), (v0.c0 IN ()), SUM(CAST(vt1.c0 AS REAL)) FROM vt1, v0; -- 1ms;
SELECT ALL (vt1.lid COLLATE RTRIM IN (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) FROM vt0, v0, vt1 ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt1.lid END) BETWEEN (0.5654477833779596) AND ((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN (('1462151126', v0.c0, v0.c0)) AND ((vt1.lid, vt0.c0, vt1.lid)))))  NULLS FIRST; -- 131ms;
SELECT DISTINCT ((((vt1.lid)>=(v0.c0))) NOT NULL), GROUP_CONCAT(((vt1.lid) IS TRUE)), CAST(0.09140815871832586 AS TEXT) COLLATE NOCASE FROM v0, vt0, vt1 WHERE (((CASE NULL  WHEN '-703257172' THEN x'' ELSE x'' END)AND(((x'')||(NULL))))); -- 0ms;
SELECT DISTINCT vt1.lid, (((((v0.c0)>>(vt0.c0)), ((vt1.lid)IS(vt0.c0)), ((vt0.c0) IS FALSE)))<>(((((vt1.lid, vt1.lid, vt1.c0))<=((vt1.lid, vt1.c0, vt1.c0))), LIKE(vt1.c0, vt1.c0, 'I'), ((vt0.c0)LIKE(vt1.lid))))), ((NOT (v0.c0)) IN ()) FROM vt0, vt1 ORDER BY (((vt0.c0))<((NULL))) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST, ((((ABS(vt0.c0))AND((((NULL)) BETWEEN ((vt1.c0)) AND ((v0.c0))))))OR(CASE '-26350050'  WHEN vt1.lid THEN v0.c0 ELSE v0.c0 END)), ((((vt1.c0)OR(((vt1.c0)+(vt1.c0)))))AND(((vt1.lid)-(v0.c0))))  NULLS LAST;SELECT ALL CAST(((v0.c0)*(NULL)) AS INTEGER) FROM vt0;SELECT DISTINCT NTILE(CAST((NOT (v0.c0)) AS BLOB)) OVER (), INSTR((~ (v0.c0)), ((((v0.c0)AND(vt1.c0)))AND(NULL))), ((((vt1.lid COLLATE BINARY)OR(((vt1.lid)%(vt1.lid)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) FROM v0 WHERE (0.7657698050932327);SELECT DISTINCT ((((vt0.c0)+(vt0.c0)))GLOB((v0.c0 IN ()))) FROM v0, vt1;SELECT DISTINCT COUNT(((NULL)<(vt1.c0))), vt1.lid COLLATE BINARY, (+ (x'')) FROM v0;SELECT ALL CAST(((vt1.lid)AND(vt0.c0)) AS BLOB) FROM vt1, vt0, v0 WHERE ((((((x'')>=(x''))))>(((('2127312398')>(0.4774945741534311)))))); -- 0ms;
SELECT ALL SUM(TOTAL(TOTAL(v0.c0))), ((((vt1.c0) BETWEEN (v0.c0) AND (vt1.lid)))&((((vt0.c0))<=((vt1.c0))))), CASE vt1.lid COLLATE BINARY  WHEN ((((((((((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))AND(0xffffffffa6f780df)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.lid)) THEN (vt0.c0 IN ()) WHEN CAST(v0.c0 AS TEXT) THEN CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END WHEN vt1.lid THEN LTRIM(v0.c0) WHEN vt0.c0 THEN ((v0.c0)>>(vt1.lid)) WHEN CASE WHEN vt1.lid THEN vt1.lid ELSE vt0.c0 END THEN (vt1.lid IN (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) THEN -8.58313495E8 COLLATE RTRIM WHEN (vt1.lid IN (vt1.lid)) THEN vt1.c0 ELSE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) END FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt1.lid)))AND(vt0.c0)))) AND ((((((vt1.c0)OR(NULL)))AND(vt0.c0))))) DESC  NULLS LAST;SELECT ((('-1493729057', (- (-1.526767794E9)), (+ (v0.c0))))<>(((+ (NULL)), ((((((((vt1.lid)OR(vt1.c0)))AND(vt0.c0)))AND(v0.c0)))AND(vt1.c0)), CAST(vt1.c0 AS BLOB)))), ((v0.c0 COLLATE NOCASE) NOTNULL), ((v0.c0)|(((vt1.c0) IS TRUE))), ((COUNT(vt0.c0)) NOTNULL), vt0.c0 FROM v0, vt0 WHERE (SQLITE_COMPILEOPTION_USED((('-1027428935')|(NULL)))) LIMIT -1130013905 OFFSET 508279220;SELECT ALL CASE WHEN v0.c0 THEN x'859a' END COLLATE NOCASE FROM v0; -- 0ms;
SELECT ALL AVG(-5.52525443E8) FROM v0, vt0 WHERE (((CAST(NULL AS BLOB)) ISNULL)) LIMIT -9223372036854775808; -- 1ms;
SELECT CASE WHEN ((((x'')AND(vt1.lid)))AND(vt1.c0)) THEN json_insert(vt1.lid, vt1.lid, vt1.c0) ELSE (((vt0.c0))=((vt1.lid))) END FROM vt1, v0 WHERE (CASE CAST(x'' AS TEXT)  WHEN (((-1447319068)) BETWEEN (('')) AND (('O#'))) THEN NULLIF(NULL, x'86c0') END);SELECT ALL (((((v0.c0, v0.c0, vt1.lid)) BETWEEN ((v0.c0, v0.c0, vt1.lid)) AND ((v0.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ((+ (vt1.lid)))) FROM vt1 WHERE (CAST((((381757401)) NOT BETWEEN (('1288090690')) AND ((-1311368294))) AS REAL));SELECT DISTINCT ((((vt1.c0 IN (vt1.c0))))>=((HEX(vt0.c0)))) FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT (((- (vt1.lid))) NOT NULL) FROM vt1, v0, vt0 WHERE ((((1096299594 IN (0.7004458560521731))) IS FALSE)) LIMIT 798729013; -- 0ms;
SELECT COALESCE(((((v0.c0)AND(vt1.c0)))OR(vt1.lid)), vt1.c0, CAST(vt0.c0 AS REAL), ((((vt1.lid)OR(v0.c0)))AND(0.09751218078747848))) FROM vt0, v0 WHERE (LOWER(((NULL)GLOB(x'6fd7')))) ORDER BY UNLIKELY(DISTINCT ((vt1.c0)IS NOT(vt1.c0)));SELECT DISTINCT ((vt0.c0 IN ()) IN (vt1.lid COLLATE NOCASE, (~ (vt1.c0)))) FROM vt0, v0 WHERE ((((((x'')OR(x'')))OR(0Xffffffff913780b3)) IN ()));SELECT ALL (((vt1.c0) ISNULL) IN ()) FROM v0; -- 1ms;
SELECT DISTINCT UNLIKELY(((vt0.c0)OR(vt1.lid))) FROM vt1 WHERE (((((((0.7324451334579536)=(0X3f1deeaa)))AND((('Knyr') NOT BETWEEN (x'') AND (809214088)))))OR((('pxMᮚ')%(0xffffffffe2cb9ed3)))));SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.lid THEN vt1.lid ELSE 0.8365621207698094 END)) AND ((COUNT(*)))) FROM vt1, vt0 WHERE ((((NULL)-(0.8848419676995295)) IN ())); -- 0ms;
SELECT GROUP_CONCAT(((((vt1.c0)OR(vt1.lid)))OR(vt1.lid))) COLLATE NOCASE FROM v0, vt0, vt1 LIMIT -1983243411 OFFSET -1601762028; -- 23ms;
SELECT AVG(CAST(vt1.lid AS NUMERIC)) OVER () FROM v0;SELECT DISTINCT NULL FROM v0, vt0, vt1 WHERE ((((((x'' IN ()))OR((('-1907313662') BETWEEN (x'643b') AND (x'd4f0')))))OR(TRIM(DISTINCT NULL)))); -- 1ms;
SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT DISTINCT (vt1.lid IN ()) COLLATE BINARY FROM v0, vt1, vt0 GROUP BY CAST(vt1.c0 COLLATE RTRIM AS INTEGER) HAVING CASE WHEN ((('QEf)4', vt1.lid, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((v0.c0, '-489972013', 0X1593d136))) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)) ELSE (+ (v0.c0)) END; -- 45ms;
SELECT DISTINCT ((((0.9204140925397336)<<(vt1.c0)))<<(((((1.096299594E9)AND(vt0.c0)))AND(v0.c0)))) FROM vt1, vt0, v0 WHERE ((~ (((x'') NOT BETWEEN (0.044585247157531205) AND (''))))); -- 0ms;
SELECT ALL ((0.453538527805435)*((NOT (v0.c0)))) FROM v0, vt0, vt1; -- 0ms;
SELECT ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) AND (((((vt1.c0)OR(vt1.lid)))OR(vt0.c0)))), 0.7069080691598943, ((((((((NULL)AND(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN '|8' THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END)))AND((((vt0.c0, x'', v0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, vt1.c0, vt0.c0)) AND ((vt1.lid, vt1.c0, vt1.c0, v0.c0, v0.c0))))))AND((v0.c0 IN ()))))AND(((vt1.lid) BETWEEN (vt1.c0) AND (vt1.lid)))) FROM v0 GROUP BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT) HAVING ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(vt1.c0));SELECT CAST((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) AS TEXT), ((GROUP_CONCAT(vt0.c0)) BETWEEN (NULL COLLATE BINARY) AND (LIKELY(vt1.lid))), (+ (vt1.lid COLLATE BINARY)) FROM vt0, v0, vt1 WHERE ((((((((((('-1400599128')AND('-1858633549')))OR(0.7299245450919283)))OR(x'')))AND(0.7447579438958154)))/((~ (0.678471065069483))))); -- 17ms;
SELECT ALL PERCENT_RANK() OVER ( RANGE vt1.lid PRECEDING) FROM v0, vt0, vt1;SELECT DISTINCT ((TOTAL(vt1.lid)) IS TRUE) FROM vt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN ((((v0.c0)OR(vt1.lid)))OR(vt1.c0)) END, '1574569529', TOTAL(((vt0.c0)OR(vt0.c0))) FROM vt1, v0, vt0 LIMIT -1931230176; -- 23ms;
SELECT ALL (NOT (CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END)) FROM v0, vt1, vt0 WHERE (CAST(3.62008886E8 COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE NOCASE)+(vt0.c0)), (((- (v0.c0)))GLOB(v0.c0)), ((((((vt1.lid)>=(v0.c0)))OR(((((v0.c0)AND(vt1.lid)))AND(vt1.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt1, vt0;SELECT ((CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) IS TRUE) FROM vt1;SELECT ((CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 END)>(((vt1.lid)|(vt0.c0)))) FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT (((((vt1.c0) IS TRUE)))>=(((v0.c0 IN ())))) FROM vt1; -- 0ms;
SELECT ((((v0.c0) IS FALSE)) ISNULL) FROM v0 WHERE ((((-5.52525443E8, x'3cb003b2', NULL)) BETWEEN ((-1004763546 COLLATE BINARY, ((('')) NOT BETWEEN (('-401355861')) AND ((0.9245549189872763))), ((0.2783273584783814) BETWEEN (0.3488569488933556) AND (x'4aeb')))) AND ((COALESCE(DISTINCT '㽔', '508279220', '', ''), (NOT ('-218940909')), (0.7447579438958154 IN ()))))); -- 0ms;
SELECT ALL ((vt0.c0) ISNULL), ((((v0.c0)<(vt1.c0)))IS NOT(CASE WHEN v0.c0 THEN vt1.lid WHEN vt0.c0 THEN v0.c0 WHEN '&1' THEN v0.c0 ELSE v0.c0 END)), ((vt1.c0 COLLATE NOCASE) BETWEEN (CASE vt1.c0  WHEN '' THEN vt1.c0 ELSE vt1.c0 END) AND (CASE WHEN vt1.lid THEN vt0.c0 END)) FROM vt0, vt1, v0 WHERE ((((+ (NULL))) BETWEEN (x'') AND (CHAR('')))); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt0;SELECT DISTINCT CASE (vt1.lid IN ())  WHEN CASE vt1.lid  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.c0 THEN vt1.c0 END THEN ((((((((vt1.lid)AND(v0.c0)))AND(v0.c0)))AND(vt1.lid)))OR(vt0.c0)) END FROM v0;SELECT DISTINCT FIRST_VALUE((((CASE v0.c0  WHEN vt1.lid THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.lid ELSE vt1.lid END, ((((vt1.lid)OR(0.09140815871832586)))OR(vt1.c0)), ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=((vt1.c0 COLLATE NOCASE, CASE vt1.lid  WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE v0.c0 END, ((vt1.c0) NOTNULL))))) OVER () FROM vt1, v0; -- 9ms;
SELECT DISTINCT (((vt0.c0 IN ()))LIKE(vt1.c0)) FROM v0;SELECT ALL COUNT(CAST(v0.c0 AS TEXT)) FROM v0, vt1, vt0 WHERE (((((0.017765028338038058) IS FALSE)) NOT BETWEEN (((0.7474961212783565)-(''))) AND ((x'f93f' IN ())))); -- 30ms;
SELECT DISTINCT CASE vt1.c0  WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) THEN TYPEOF(v0.c0) ELSE ((vt1.lid)|(vt1.lid)) END FROM vt0;SELECT ((AVG(vt1.lid)) NOT NULL) FROM v0, vt0, vt1 WHERE ((((((((109791632))==((0.26202924173261133))))OR(0.984845366224662)))AND(CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT MAX(v0.c0) FROM vt0, vt1, v0 WHERE ((+ (CAST(NULL AS BLOB)))) ORDER BY CAST(((vt1.lid)*(NULL)) AS INTEGER) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT CHAR(vt1.c0), CASE WHEN vt1.lid THEN x'3f4e' END), CASE WHEN CAST(vt0.c0 AS REAL) THEN NULL END, ((vt1.c0)-(v0.c0)) COLLATE NOCASE FROM vt0;SELECT ALL (~ (((vt1.c0) IS TRUE))) FROM v0, vt1 WHERE (((CASE NULL  WHEN 0.15045083912193036 THEN x'' ELSE 0xffffffffa0870d14 END) IS FALSE)); -- 0ms;
SELECT ALL ((((v0.c0)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) FROM vt0, v0 WHERE (((((((((-1804314277)AND(x'9cba')))OR(x'')))AND(STRFTIME(1.420333803E9, x'20e2', NULL, x'', 1.420333803E9))))OR(CASE NULL  WHEN '0.8428718768279934' THEN 'PYvaA' ELSE 'J[' END)));SELECT ALL (((v0.c0)>>(v0.c0)) IN (((((vt1.lid)OR(vt0.c0)))AND(v0.c0)))), RANK() OVER (), (- (((vt1.c0) IS FALSE))) FROM vt0, vt1, v0 NOT INDEXED ORDER BY CASE ((vt1.c0)|(324728773))  WHEN v0.c0 COLLATE RTRIM THEN (((v0.c0)) BETWEEN ((vt1.lid)) AND ((NULL))) END; -- 94ms;
SELECT COALESCE(CASE WHEN vt1.lid THEN vt1.c0 ELSE v0.c0 END, MIN(vt1.c0)) FROM vt0, vt1 GROUP BY ((load_extension(vt1.lid, vt1.c0))==(v0.c0)), ((((0.1466989206934538)AND(CAST(NULL AS BLOB))))AND((vt0.c0 IN (vt1.c0)))), (((NULL) BETWEEN (vt0.c0) AND (v0.c0)) IN ((((vt1.lid, vt1.lid, vt1.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt1.c0)) AND ((vt1.lid, vt1.c0, vt1.c0))), vt0.c0 COLLATE BINARY)) HAVING ((CASE WHEN NULL THEN x'' WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid ELSE v0.c0 END)||(((vt0.c0)%(v0.c0))));SELECT (((-4.89972013E8))>(((vt1.c0 IN ())))) FROM vt0, v0, vt1; -- 0ms;
SELECT DISTINCT TOTAL(((vt1.c0) BETWEEN (vt1.c0) AND (NULL))) FILTER(WHERE CAST(CASE vt1.c0  WHEN v0.c0 THEN vt1.lid ELSE v0.c0 END AS NUMERIC)) OVER () FROM v0 ORDER BY ((((NULL)%(vt0.c0))) NOTNULL)  NULLS FIRST, x''  NULLS FIRST;SELECT ALL (vt0.c0 COLLATE RTRIM IN ()) FROM vt1 NOT INDEXED GROUP BY vt1.lid HAVING COUNT(((v0.c0)<<(NULL))) LIMIT -1439972767 OFFSET -941563599;SELECT DISTINCT (((vt0.c0)) BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((vt1.lid COLLATE RTRIM))) FROM vt1, v0 WHERE (UPPER(DISTINCT '9453396' COLLATE RTRIM)) LIMIT -1326066101 OFFSET 329757838;SELECT ((vt1.c0)==(TRIM(DISTINCT vt1.c0))) FROM v0 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 END IN ())  NULLS LAST;SELECT DISTINCT ((((vt1.lid)/(vt0.c0)))IS NOT('v' COLLATE RTRIM)) FROM v0, vt1 WHERE (((CASE x'4ee1'  WHEN '' THEN 704944097 WHEN 0.9726106166431989 THEN x'87ed' WHEN x'' THEN NULL ELSE x'' END)|(CAST(0.7875238696260533 AS REAL))));SELECT CAST(vt1.lid COLLATE NOCASE AS TEXT) FROM vt0 ORDER BY 0.5468465614349752 DESC  NULLS LAST, (NOT (((vt1.c0) ISNULL))) DESC  NULLS LAST, ((((((v0.c0)AND(vt1.lid)))OR(v0.c0 COLLATE RTRIM)))AND((v0.c0 IN ())))  NULLS LAST;SELECT CASE WHEN (vt1.c0 IN (vt1.lid)) THEN ((vt0.c0)*(v0.c0)) END FROM vt1;SELECT DISTINCT (~ (((vt1.c0) BETWEEN (vt0.c0) AND (v0.c0)))) FROM vt0, v0, vt1; -- 1ms;
SELECT DISTINCT AVG(((((vt1.lid)AND(v0.c0)))OR(vt1.lid))) OVER ( PARTITION BY (((((((((v0.c0)OR(v0.c0)))OR('()')))AND(v0.c0)))AND(vt1.c0)) IN ()), (((((x''))<((vt0.c0))))IS(vt1.c0)), (((('1083822847') NOT BETWEEN (vt0.c0) AND (vt0.c0)))%(((vt1.lid)LIKE(v0.c0)))), vt1.lid) FROM vt0;SELECT ALL ((((v0.c0) ISNULL))-(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (highlight(CAST(-4.01355861E8 AS TEXT), CAST(0.8026401388606356 AS BLOB), ((0.10414645380307563) IS FALSE), CAST(0.30648429680548184 AS BLOB)));SELECT ALL FIRST_VALUE(CAST(((vt1.c0)/(vt1.c0)) AS INTEGER)) OVER () FROM v0, vt1 NOT INDEXED, vt0; -- 35ms;
SELECT DISTINCT CAST(((vt1.lid) IS TRUE) AS INTEGER) FROM vt0, vt1 WHERE (CASE WHEN CAST(311103331 AS REAL) THEN CASE WHEN 0.017765028338038058 THEN '-319326505' WHEN -41041851 THEN 1.28809069E9 WHEN x'' THEN 1.574569529E9 ELSE 's)LT_s' END WHEN (((0.9204140925397336)) BETWEEN ((-1360446803)) AND ((NULL))) THEN ((NULL)|(NULL)) WHEN (('2042997596') NOT NULL) THEN ((0.8379616020912988) NOT BETWEEN (NULL) AND (x'')) ELSE 0.851433470177434 END) LIMIT 1462151126 OFFSET 2126780584; -- 0ms;
SELECT DISTINCT CAST(COUNT(vt1.lid) AS REAL), COUNT(CASE WHEN vt1.c0 THEN vt0.c0 END), ((vt1.c0)>=(vt0.c0)) COLLATE NOCASE, CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE v0.c0 END THEN vt1.c0 ELSE ((NULL) NOT BETWEEN ('-976272988') AND (vt1.lid)) END, ((((((((((v0.c0)AND('')))OR(vt0.c0)))AND(vt1.lid)))OR(vt1.lid))) NOTNULL) FROM v0, vt0 ORDER BY (((vt0.c0))<=((v0.c0))) COLLATE BINARY DESC;SELECT ALL ((TOTAL(0.33960603710270487))<>(vt1.lid COLLATE NOCASE)) FROM v0 WHERE ((((0.4774945741534311)) BETWEEN (('0.5468465614349752' COLLATE BINARY)) AND ((((((0.678471065069483)AND('-615589428')))AND(NULL)))))) LIMIT 1388842919;SELECT DISTINCT TOTAL(-1.931230176E9) FROM vt0 WHERE (((((CAST(NULL AS TEXT))OR(((x'') NOT BETWEEN (NULL) AND ('1388842919')))))OR(CAST('-1131954211' AS REAL)))); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN ((- (vt1.lid))) AND ((+ (0x22db92d2)))), v0.c0, ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN (vt1.lid, ''))) AND (2.126780584E9)) FROM vt0, v0 WHERE (0.12815744870297086);SELECT DISTINCT ROW_NUMBER() OVER ( GROUPS  CURRENT ROW), GROUP_CONCAT(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0))), CAST((~ (vt0.c0)) AS BLOB) FROM v0 WHERE ((((((603428364) BETWEEN (1.083822847E9) AND ('66PFA'))))<(((('-355271627') NOT BETWEEN (NULL) AND (''))))));SELECT ALL vt0.c0, (((((((((vt0.c0 IN ()))AND(vt1.lid)))AND(MIN(vt1.lid))))OR(((vt0.c0) NOT NULL))))AND(vt1.c0 COLLATE NOCASE)), UNLIKELY(DISTINCT vt1.c0) FROM vt0, v0;SELECT CASE WHEN STRFTIME(vt1.lid, vt0.c0, v0.c0) THEN (vt0.c0 IN ()) ELSE ((v0.c0) IS FALSE) END FROM v0, vt0 WHERE (NULL) ORDER BY CAST('-2121561543' AS BLOB) DESC;SELECT (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.lid)))) NOT BETWEEN ((('')GLOB(NULL))) AND (((vt1.lid)!=(v0.c0)))) FROM v0, vt1, vt0; -- 0ms;
SELECT ALL HEX(((((v0.c0)AND(v0.c0)))AND(vt1.lid))), (+ ((vt0.c0 IN (v0.c0)))), NULL FROM vt1, v0 WHERE (json_patch(((((0xffffffff99cc9a85)OR(x'')))AND(NULL)), CASE WHEN 603428364 THEN '9223372036854775807' ELSE 'FALSE' END));SELECT ALL json_remove((vt0.c0 IN ()), ((vt0.c0) ISNULL)) FROM vt0;SELECT DISTINCT ((((vt1.lid) NOT BETWEEN (vt0.c0) AND ('N梓pltQ')))+(MIN(vt0.c0))) FROM v0 WHERE (((((0.21962519482287912) IS TRUE))LIKE((- ('?.A\nj펭\n薿')))));SELECT ALL (((vt1.lid)) BETWEEN ((CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 END)) AND ((NULL))) FROM vt0, v0;SELECT DISTINCT INSTR(COUNT(*), (~ (v0.c0))) FROM v0 WHERE (CAST(((x'')IS(NULL)) AS INTEGER)); -- 0ms;
SELECT ALL CAST(COALESCE(DISTINCT v0.c0, vt1.lid) AS BLOB), SUM((((vt0.c0))>((v0.c0)))) OVER ( GROUPS  UNBOUNDED PRECEDING), ((((CAST(vt1.lid AS BLOB))AND('0.7657698050932327')))OR((+ (v0.c0)))), ((vt1.lid)|(((((((((0.47022933496544816)AND(vt0.c0)))AND(v0.c0)))AND(vt1.lid)))AND(vt1.lid)))), PRINTF(vt0.c0 COLLATE NOCASE) FROM vt1 WHERE (((((0xffffffff9474595b)AND(((((x'f23f')AND(0.4833318750022595)))OR('')))))OR((('1189818629')<=(0.47022933496544816)))));SELECT ALL DATE((+ (vt1.c0)), CASE WHEN vt1.lid THEN vt1.c0 ELSE v0.c0 END, (((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0)))) FROM vt0, v0 WHERE (((((('902239984'))=((-2.18940909E8))))IS NOT(((('ⶀynr')) NOT BETWEEN ((x'')) AND ((x'd27d'))))));SELECT ALL vt1.c0, (((vt1.lid)) NOT BETWEEN (((~ (v0.c0)))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.lid))))), vt0.c0 FROM vt1 WHERE (((((((((((x'')AND(x'')))AND(0.9461453995910909)))AND(0.25743990144121764)))OR(1931597515)))<(((((0.7799207569911373)AND('/OP<)ME?')))OR(NULL)))));SELECT DISTINCT ((- (vt1.lid)) IN (((((vt1.lid)OR(vt0.c0)))AND(0xffffffffb723d3ad)))) FROM vt0, v0, vt1 WHERE (((x'' IN ()) IN ((0.8408921662689967 IN ())))); -- 0ms;
SELECT DISTINCT (((~ (vt1.c0))) BETWEEN (COALESCE(vt0.c0, x'', v0.c0, v0.c0)) AND (vt1.c0 COLLATE NOCASE)) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0 IN ()) IN ()) FULL OUTER JOIN v0 ON '-552525443'; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt1.lid))=((vt1.c0, vt0.c0, v0.c0))))|((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))))) FROM vt1, vt0, v0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((CAST(vt1.lid AS REAL)))) FROM v0, vt1, vt0 WHERE (((((('<	Td'))!=((x'8739')))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c0)IS(vt1.c0))))), ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.lid WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END)<=(((((vt1.c0)AND(vt1.lid)))AND(vt1.c0)))), COUNT(*) FROM vt0 WHERE (((NULLIF(3.11103331E8, 'o6)J{ལeH'))!=(((('P')) NOT BETWEEN ((x'')) AND (('371028967'))))));SELECT (~ (CAST(vt1.lid AS BLOB))), AVG(CAST(v0.c0 AS REAL)) OVER (), (+ ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))), CAST(v0.c0 AS BLOB) COLLATE RTRIM, TOTAL(((vt1.c0)&(vt1.lid)) COLLATE NOCASE) OVER () FROM vt0;SELECT DISTINCT ((((vt1.c0)OR(vt0.c0))) NOTNULL) FROM vt1;SELECT DISTINCT 0Xffffffffdbdcff34, ((CASE WHEN v0.c0 THEN v0.c0 END)+(AVG(vt0.c0))), CASE vt1.lid  WHEN vt1.lid THEN vt1.lid END COLLATE RTRIM FROM vt0, vt1 WHERE (json_object('883613398' COLLATE NOCASE, (('Lc5')OR(0.3253617083911706)))) GROUP BY CASE (vt0.c0 IN ())  WHEN ((vt1.c0)|(vt1.lid)) THEN (vt1.lid IN (vt1.lid)) ELSE (vt1.lid IN ()) END;SELECT ALL CASE WHEN ((vt0.c0)>(vt1.lid)) THEN vt1.lid COLLATE RTRIM ELSE ((vt0.c0)||(vt1.lid)) END, v0.c0 COLLATE NOCASE, vt1.lid, 'R1nZ', LAST_VALUE((v0.c0 IN ())) OVER () FROM v0;SELECT ALL COUNT((v0.c0 IN ())) FROM vt0 WHERE (CASE 'v'  WHEN NULL THEN -772586834 ELSE x'147c' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT 0.7750626338427478 COLLATE RTRIM FROM vt1, v0 WHERE (0.712518717673261); -- 0ms;
SELECT ALL (((vt1.c0 IN (vt1.lid, 0.9704657686405503))) ISNULL) FROM vt0, v0, vt1; -- 0ms;
SELECT ALL AVG(((((vt1.c0)OR(v0.c0)))OR(vt0.c0))) OVER ( RANGE x'b05e' PRECEDING EXCLUDE CURRENT ROW) FROM v0 WHERE (((((((0xffffffffccd72ce9)AND('Z^')))AND(0.4729676779152058))) NOT BETWEEN ((('927116053')IS(0.9177999662764865))) AND ((('2031023395') BETWEEN (x'') AND (x'')))));SELECT CAST(CASE WHEN vt1.lid THEN v0.c0 ELSE vt1.lid END AS BLOB) FROM v0, vt0 WHERE (NULL);SELECT DISTINCT ((CAST(953896651 AS BLOB))IS(CAST(vt1.lid AS NUMERIC))), ((vt1.c0) IS TRUE) COLLATE NOCASE, ((CAST(NULL AS REAL))>=(CAST(vt1.lid AS INTEGER))), json_array_length(((vt1.c0) IS FALSE)), ((((v0.c0) IS FALSE)) ISNULL) FROM vt0, v0 WHERE (((SQLITE_SOURCE_ID()) NOTNULL));SELECT DISTINCT CAST(vt1.lid AS NUMERIC) COLLATE RTRIM FROM v0 WHERE (((((-1.544105817E9)) NOT BETWEEN (('0.3689407988875858')) AND (('H''qoOf-'))) IN ((('0.3488569488933556') NOT BETWEEN ('b]') AND ('')))));SELECT DISTINCT ((CAST(vt1.lid AS INTEGER)) BETWEEN (UPPER(DISTINCT v0.c0)) AND (MIN(vt1.c0))) FROM v0 WHERE (((((((1863067.0) BETWEEN (x'') AND (-41041851)))AND(TYPEOF(NULL))))OR('-1268933763' COLLATE BINARY)));SELECT DISTINCT TYPEOF(((v0.c0) ISNULL)) FROM vt1, vt0 GROUP BY TYPEOF(vt1.c0 COLLATE NOCASE), CAST(((vt0.c0)OR(0xffffffff8056b030)) AS NUMERIC), CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)<<(vt1.c0)) WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(v0.c0 AS BLOB) WHEN ((vt1.lid) NOT NULL) THEN SUBSTR(v0.c0, vt1.lid) END HAVING CAST((vt0.c0 IN (-997160990)) AS NUMERIC);SELECT ALL (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0;SELECT DISTINCT (NOT ((v0.c0 IN ()))) FROM vt1, v0; -- 0ms;
SELECT DISTINCT MIN((NOT (v0.c0))), (((((vt0.c0))==((vt1.c0)))) NOT BETWEEN (((x'')>=(vt1.c0))) AND (IFNULL(v0.c0, vt0.c0))), CAST(((vt1.c0) BETWEEN (vt1.lid) AND (vt0.c0)) AS REAL) FROM vt1, v0;SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((0x79dee2de)) AND ((v0.c0)))) IS TRUE) FROM vt0, vt1, v0 WHERE (((('1197264636')) BETWEEN ((CASE NULL  WHEN 0.23372154972108095 THEN NULL END)) AND ((CASE WHEN 0X76495441 THEN '炍V垙뼋Is' ELSE '907753648' END)))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( PARTITION BY (- (((v0.c0)<(v0.c0)))), CASE ((((((((v0.c0)AND(vt1.lid)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0))  WHEN 0.5067787126903538 COLLATE RTRIM THEN NULL WHEN CAST(vt1.lid AS NUMERIC) THEN vt1.lid COLLATE BINARY WHEN (NOT (vt0.c0)) THEN ((vt0.c0)>(vt1.lid)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) END) FROM v0, vt0, vt1 ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND ('-1714644347')))<<((NOT (v0.c0)))) ASC  NULLS FIRST; -- 257ms;
SELECT ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS BLOB))) FROM v0 WHERE ((((NOT ('쐠W9}+V,鯛i'))) NOTNULL));SELECT ALL TRIM(0xffffffffc2c2adb9), CAST((vt1.lid IN ()) AS INTEGER), (((json_quote(vt1.c0), HEX(DISTINCT '-2121561543'), ((((v0.c0)OR(v0.c0)))OR(vt1.c0))))==((((v0.c0)LIKE(v0.c0)), 0.4996937279019774, 0.6033830976027351))) FROM vt1, v0, vt0;SELECT DISTINCT (((vt0.c0, CAST(vt1.c0 AS TEXT), (NOT (x''))))<>((TOTAL(vt1.c0), CASE WHEN vt1.lid THEN vt0.c0 END, CAST(vt1.lid AS BLOB)))) FROM vt1, v0, vt0 WHERE ((CAST(0Xffffffff927b19c5 AS REAL) IN (((((((((x'')OR('')))AND(x'')))OR('671477839')))OR('968244268'))))); -- 0ms;
SELECT DISTINCT (((vt0.c0 COLLATE BINARY, '', CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOTNULL), ((((v0.c0)AND(vt0.c0)))OR(vt0.c0))))<=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (- (v0.c0)), (NOT (NULL)), 0.5402093547580146, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) FROM v0, vt1, vt0 WHERE (CASE (NOT (NULL))  WHEN (((0.7588961323764392, 0.6809099216460477, x'')) BETWEEN ((NULL, -3.07806033E8, 0.4184570215080168)) AND ((-1.829519605E9, x'', -144661210))) THEN ((x'') IS FALSE) WHEN (('')AND(x'')) THEN (NULL IN (x'')) WHEN (((0x303ba088)) NOT BETWEEN ((1184222868)) AND ((x'6f91'))) THEN (('R4_YmZ+(㖱') NOT BETWEEN (0.8963157590801408) AND (0.4101374135682089)) ELSE (('0.7447579438958154')>=(723316747)) END) LIMIT 1597166827 OFFSET 1651556856; -- 30ms;
SELECT CAST((((x'', vt1.c0, vt1.lid)) NOT BETWEEN (('', vt1.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))) AS TEXT), v0.c0, CAST(((vt1.c0)GLOB(vt1.c0)) AS NUMERIC) FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt1.lid)) BETWEEN ((((vt0.c0)<<(v0.c0)))) AND ((((vt0.c0) IS TRUE)))) FROM v0, vt0, vt1; -- 0ms;
SELECT (~ (((vt1.lid)||(vt1.c0)))), 0.3540641224646107, (((x'', (vt1.c0 IN ()), TYPEOF(DISTINCT vt1.c0)))<((vt0.c0 COLLATE NOCASE, vt0.c0, ((vt0.c0) NOTNULL)))) FROM vt0 WHERE ((((NOT (x'')))>>(json_object(0.7636040433065489, '220518182', NULL, 0.42140536584806854))));SELECT DISTINCT CUME_DIST() OVER (), AVG((v0.c0 IN (vt1.lid, v0.c0))), ((vt0.c0) BETWEEN (COUNT(*)) AND (((vt0.c0) ISNULL))) FROM vt0, v0 WHERE (CASE WHEN CAST(0.7863276100651506 AS TEXT) THEN ('' IN (x'', NULL)) WHEN ((0.9586184296142195) NOT BETWEEN (-1601762028) AND (NULL)) THEN CASE -279697178  WHEN NULL THEN 'dmkEuI5' END WHEN x'25eae9c7' COLLATE BINARY THEN CAST('-1326066101' AS TEXT) END);SELECT DISTINCT GROUP_CONCAT(CAST(vt1.c0 AS BLOB)) OVER (), x'', 0x1ef64b8a, CAST(((v0.c0)=(vt1.c0)) AS BLOB), CASE (x'0899' IN ())  WHEN LIKELIHOOD(DISTINCT vt1.lid, 0.5095439248300706) THEN (((vt1.c0))>=((v0.c0))) ELSE COALESCE(DISTINCT x'a201', v0.c0, vt1.c0, vt1.lid) END FROM v0;SELECT DISTINCT CAST(((v0.c0)>=(vt1.lid)) AS BLOB) FROM vt1;SELECT ALL LAST_VALUE(vt0.c0) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM vt0 WHERE (((((x'') ISNULL))>>(((((x'')AND(-1935725307)))AND(x''))))) EXCEPT SELECT DISTINCT (- (((((((((vt1.c0)AND('0-_ ')))AND(v0.c0)))AND(vt1.c0)))AND(vt0.c0)))) FROM vt1, vt0;SELECT CAST(((619492770) NOT NULL) AS TEXT), CAST(((vt1.c0)>(vt1.c0)) AS INTEGER), (((((('644674423')OR(vt1.lid)))OR(vt0.c0))) NOT NULL) FROM vt0, v0;SELECT DISTINCT MAX(((((vt1.c0)OR(v0.c0)))AND(vt1.c0))) FROM vt0 NOT INDEXED, v0, vt1 WHERE (CAST((x'' IN ()) AS REAL)); -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE WHEN ((v0.c0) IS FALSE) THEN ((v0.c0)OR(vt1.lid)) END, (((vt1.lid, '-41041851', vt1.c0)) BETWEEN (('Lc5', ((((v0.c0)OR(vt1.lid)))OR(v0.c0)), vt1.lid COLLATE RTRIM)) AND ((((v0.c0) NOTNULL), ((vt1.lid) IS TRUE), ((v0.c0)<(v0.c0)))))) OVER () FROM v0, vt1 ORDER BY ((vt1.lid)OR(vt1.lid)) DESC;SELECT ALL LAST_VALUE(((((((((IFNULL(vt0.c0, v0.c0))AND(CAST(x'' AS INTEGER))))AND(((((v0.c0)AND(vt0.c0)))OR(924329352)))))AND(((v0.c0)<>(vt0.c0)))))OR(v0.c0 COLLATE RTRIM))) OVER (), COUNT('a%%jOK戝sW') OVER (), (((vt0.c0 IN ())) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 END) AND (((vt0.c0) ISNULL))) FROM v0, vt0 WHERE ((((((NULL))>=((0.6040801219957022)))) NOT NULL)) LIMIT -1632057267;SELECT (((vt0.c0, vt1.lid, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.lid)) AND ((vt0.c0, v0.c0, vt1.lid))) COLLATE RTRIM FROM vt1, v0, vt0 WHERE (((CAST('' AS NUMERIC)) BETWEEN (((0.6574184376765781)AND(NULL))) AND ((NOT (''))))); -- 0ms;
SELECT DISTINCT (((((((v0.c0)AND(vt1.lid)))OR(vt1.c0))))<>((CAST(vt1.lid AS NUMERIC)))) FROM vt0, v0 CROSS JOIN vt1 ON ((((((((((vt1.lid)AND(vt1.c0)))AND(((vt1.c0) NOT NULL))))AND(0.22682801680879894)))OR((~ (vt1.lid)))))AND(LTRIM(vt1.c0, v0.c0))); -- 61ms;
SELECT ((CAST(vt1.c0 AS TEXT))IS(MIN(vt1.lid))) FROM vt1, v0 WHERE (((((x'') NOT NULL))-((((x'')) BETWEEN ((0.046358661363973264)) AND ((x'6944')))))); -- 0ms;
SELECT DISTINCT CAST(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB) FROM vt0 WHERE ((((CASE NULL  WHEN NULL THEN x'e3ec85c9' WHEN NULL THEN 3.11103331E8 WHEN NULL THEN '1420333803' ELSE 0.7069080691598943 END))>=((CASE WHEN 0x5a44c640 THEN '1514456640' ELSE '᲻S8' END))));SELECT DISTINCT (((x'')) BETWEEN (((((0.37876782060789305)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((((((((vt1.lid)AND(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(v0.c0))))), CAST(vt0.c0 AS TEXT), 0.2144726025060404 FROM vt1;SELECT ALL (vt1.lid COLLATE BINARY IN (UNLIKELY(v0.c0))) FROM v0, vt0, vt1 WHERE ('T*t%'); -- 0ms;
SELECT ALL (~ (CAST(vt1.lid AS REAL))) FROM vt1, v0 WHERE (((((x'')OR((('1729150385') ISNULL))))AND(((NULL)IS NOT(0xffffffffce3f17ec))))); -- 0ms;
SELECT ((((vt1.c0) NOT NULL))==((~ (0.2654029450161265)))), (CASE vt0.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END IN (((vt0.c0) BETWEEN (vt1.lid) AND (v0.c0)), ((vt1.lid) IS TRUE))), ((((x'')>(vt1.lid)))%(CAST(vt1.lid AS NUMERIC))) FROM vt1, v0, vt0 WHERE (x'a48f'); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)LIKE(((vt1.lid)/(vt1.c0)))), ((MAX(vt0.c0))LIKE(((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c0)))), CASE WHEN ((vt0.c0)<(vt1.c0)) THEN CHANGES() ELSE ((v0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) END FROM v0, vt0 WHERE (CASE WHEN (+ (NULL)) THEN LIKELY(DISTINCT x'') ELSE CASE ''  WHEN 0.20804893154426207 THEN NULL END END);SELECT DISTINCT ((((((((((((((((((vt1.lid)AND(vt1.c0)))AND(vt1.lid)))OR('1931597515')))AND(vt1.lid)))OR(v0.c0)))AND(vt1.lid)))AND(0.7474961212783565)))OR(vt0.c0))) BETWEEN (CHANGES()) AND (vt1.c0 COLLATE RTRIM)) FROM vt0, vt1, v0; -- 1ms;
SELECT DISTINCT (- (((vt0.c0)!=(v0.c0)))), AVG(((((vt1.lid)OR(v0.c0)))AND(vt0.c0)) COLLATE RTRIM) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW), ((vt1.lid)<=(((((((((v0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) FROM v0, vt1 WHERE ((((((NULL)) BETWEEN (('Z^')) AND ((NULL))))!=('-41041851' COLLATE BINARY)));SELECT DISTINCT v0.c0 FROM v0 ORDER BY v0.c0 COLLATE BINARY ASC; -- 0ms;
SELECT ALL (((((((((((((~ (vt0.c0)))AND('1799174474')))AND(((((((((vt0.c0)OR(vt1.lid)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(x'')))AND(((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))))AND(((vt1.lid)|(0.8026401388606356)))))OR(0.153889329936709 COLLATE NOCASE)) FROM vt1, v0;SELECT (+ (CAST(vt0.c0 AS INTEGER))), (((- (vt1.c0)))OR((NOT (vt1.c0)))), ((((json_object(vt0.c0, vt0.c0))OR(((vt0.c0) ISNULL))))OR('927116053')) FROM v0, vt1, vt0;SELECT DISTINCT ((((vt0.c0)+(vt1.lid))) NOT NULL) FROM vt0, vt1 WHERE ((((((- ('')))OR(((0.28238475855250655) ISNULL))))OR(x''))); -- 0ms;
SELECT ALL ((((vt1.c0)AND(COUNT(vt1.lid))))AND(CAST(v0.c0 AS INTEGER))) FROM vt1 WHERE ((CAST(x'' AS REAL) IN ())) LIMIT 655718953;SELECT DISTINCT ((((vt1.lid)IS(vt1.c0)))/(vt1.lid)) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.lid) IS TRUE))GLOB(vt1.lid)) FROM vt0 WHERE (CAST(((x'3e29e6c3')|(NULL)) AS REAL));SELECT DISTINCT (((vt1.c0)==(NULL)) IN ()) FROM v0 WHERE (json_array_length(((NULL)+('')))); -- 0ms;
SELECT ALL ((((vt1.lid)<>(v0.c0)))|(((vt1.c0)LIKE(v0.c0)))) FROM v0;SELECT (+ (x'')) FROM v0; -- 0ms;
SELECT DISTINCT CAST(((vt1.lid) IS TRUE) AS REAL) FROM vt0, v0;SELECT DISTINCT vt0.c0 FROM vt0, vt1 LIMIT -1829519605 OFFSET 531565935; -- 1ms;
SELECT DISTINCT COUNT(*) FROM vt0, vt1, v0 WHERE (((((CAST(-307806033 AS TEXT))AND((- ('-307806033')))))AND(((0.701700563809785)<('0.7069080691598943'))))); -- 6ms;
SELECT DISTINCT RANK() OVER () FROM vt1, vt0, v0; -- 14ms;
SELECT ALL NTH_VALUE((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ()), NULL) OVER () FROM vt0;SELECT (((- (vt1.lid))) NOT BETWEEN (((((((((vt1.lid)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.lid))) AND ((('1D')AND(v0.c0)))), v0.c0, x'' FROM vt0, v0;SELECT DISTINCT 0X13a7b48e FROM vt0, vt1, v0; -- 0ms;
SELECT ALL (~ (v0.c0)) COLLATE BINARY FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS(v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (UNLIKELY(vt1.lid))) FROM v0, vt0, vt1 WHERE (((NULL) NOTNULL)); -- 0ms;
SELECT DISTINCT (CAST(vt1.c0 AS TEXT) IN ()) FROM vt1, vt0 WHERE (((('-1027428935', NULL, '-462399501')) BETWEEN ((CASE NULL  WHEN 0.44177725490246933 THEN x'f6c58d8c' ELSE x'' END, CAST(-1447319068 AS REAL), 0Xffffffffbf0ac393 COLLATE NOCASE)) AND ((((0.6900955769183911)IS NOT(0Xffffffffe3e94736)), (((x''))==((0X77abc0d5))), (+ (x'')))))); -- 0ms;
SELECT 0.04431527827714832 FROM v0, vt1 GROUP BY COALESCE((((vt0.c0, v0.c0, vt1.lid, vt0.c0, vt1.c0))<((vt1.c0, vt1.lid, vt1.lid, vt0.c0, vt1.lid))), ((vt1.lid)>>(0.5504839050447261))) HAVING ((((v0.c0)%(vt1.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (((((vt1.lid)AND('?#t>h*q}r')))OR(v0.c0))));SELECT x'83a4' FROM v0, vt0, vt1 ORDER BY ABS((((vt1.c0, vt1.lid, v0.c0, v0.c0, vt0.c0))>=((vt1.c0, v0.c0, vt1.c0, v0.c0, v0.c0)))) DESC; -- 26ms;
SELECT ALL vt1.c0, HEX(((0.9776644361809872) ISNULL)), (((v0.c0, vt1.lid, vt1.c0)) NOT BETWEEN ((((vt1.lid)GLOB(vt1.c0)), CAST(vt1.lid AS TEXT), ((vt1.lid) NOTNULL))) AND ((CASE WHEN vt0.c0 THEN v0.c0 END, vt1.lid COLLATE NOCASE, ((vt1.lid) NOT NULL)))), CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (NOT (v0.c0)) THEN (((0.6911506541268838))<((vt0.c0))) ELSE SUM(v0.c0) END, (- (v0.c0)) FROM vt1, v0 ORDER BY LIKELIHOOD(DISTINCT CAST(vt1.lid AS INTEGER), 0.4403114599406275)  NULLS LAST;SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN 'Y-*1&N' WHEN vt1.lid THEN vt1.lid WHEN 0.8779415671875996 THEN v0.c0 END) NOT BETWEEN (((NULL) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (((v0.c0)IS NOT(vt0.c0)))) FROM vt1;SELECT DISTINCT json_type(COUNT(*)), x'', ((vt1.c0 COLLATE RTRIM)AND(vt1.c0)) FROM vt1 WHERE (CASE (('-1187730342') IS FALSE)  WHEN ((x'0cab') BETWEEN (0.8933695166541861) AND (-4.01355861E8)) THEN ((NULL)+('\r')) END); -- 0ms;
SELECT ALL ((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM FROM vt1, vt0, v0 ORDER BY ((CAST(v0.c0 AS REAL))%(CASE WHEN v0.c0 THEN 0.9737309267416021 WHEN vt1.lid THEN '-1062238785' WHEN vt1.lid THEN vt0.c0 END)), ((v0.c0 COLLATE BINARY)*(0xffffffffe207ffdb))  NULLS FIRST; -- 66ms;
SELECT ALL ((vt1.lid) ISNULL) COLLATE BINARY, TRIM(SUM(vt0.c0), (+ (v0.c0))), MIN(v0.c0) FROM v0, vt0, vt1; -- 28ms;
SELECT COUNT(CAST(vt1.lid AS TEXT)) FROM v0, vt0;SELECT DISTINCT ((((IFNULL(DISTINCT vt1.c0, v0.c0))OR(((v0.c0)OR('324728773')))))AND(CASE WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END)) FROM vt0, v0, vt1 WHERE ((((NOT (0.3401875595397915))) NOT BETWEEN ((~ ('0.4184570215080168'))) AND ((0.01979427991026783 IN ())))); -- 1ms;
SELECT DISTINCT COUNT(CAST(vt0.c0 AS BLOB)) FROM vt0, v0 GROUP BY ((((vt1.lid)<(vt0.c0))) NOT BETWEEN (LTRIM(vt0.c0, vt0.c0)) AND (vt1.lid)) HAVING (((vt0.c0 IN ()))<>(((((vt1.c0)AND(vt1.c0)))AND(vt1.lid))));SELECT v0.c0 FROM vt0;SELECT CASE WHEN CAST(x'' AS BLOB) THEN CASE vt0.c0  WHEN vt1.lid THEN NULL ELSE vt1.lid END ELSE (vt0.c0 IN (vt1.lid)) END FROM v0 GROUP BY CAST(v0.c0 AS INTEGER) COLLATE BINARY, vt1.lid, (((vt1.lid)) NOT BETWEEN (((((vt0.c0, vt1.lid, v0.c0))<>((vt1.lid, vt0.c0, vt0.c0))))) AND ((0.8383601790579862))) HAVING (((vt0.c0)) NOT BETWEEN ((((vt1.c0)!=(v0.c0)))) AND (((vt0.c0 IN (vt1.lid, vt1.lid)))));SELECT ALL (- (vt1.lid)) COLLATE NOCASE COLLATE BINARY FROM vt1, v0; -- 0ms;
SELECT DISTINCT COUNT(((v0.c0)<<(vt0.c0))) OVER ( ORDER BY ((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.lid)))AND(vt0.c0)))OR(vt1.c0)))>=(CASE WHEN '0.046358661363973264' THEN vt0.c0 END))  NULLS FIRST, x'' DESC  NULLS LAST), ((x'') NOT BETWEEN (((vt1.lid) IS FALSE)) AND ('1526886541')), ((vt0.c0 COLLATE NOCASE) ISNULL), GROUP_CONCAT(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))) OVER ( ORDER BY ((((vt0.c0)IS NOT(v0.c0)))=(CAST('1996342250' AS BLOB))) ASC), (((~ (v0.c0)))*(vt1.c0 COLLATE RTRIM)) FROM vt0, v0, vt1 WHERE ((((('773846705')<('455359485'))) ISNULL)); -- 0ms;
SELECT DISTINCT vt1.c0 FROM v0, vt0 WHERE (CASE CAST(0.9327364463041946 AS BLOB)  WHEN ((('-606273740'))<=((x''))) THEN (+ ('ꬕﱌZ')) ELSE (((((((('0.017765028338038058')AND(NULL)))AND('-336476241')))AND('212022543')))AND(NULL)) END);SELECT ALL CAST(MAX(v0.c0) AS TEXT) FROM vt0, vt1, v0 WHERE (((((0.1721957700083755 COLLATE RTRIM)OR(((NULL) IS TRUE))))AND((NULL IN (NULL, NULL, x''))))); -- 0ms;
SELECT ALL ((((vt1.lid) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((0.3455488738100597 IN ())) AND (((((x'c2e0')AND(vt1.lid)))AND(vt0.c0)))) FROM vt1 WHERE (((x'')<(((x'')&(0.5248518175449739)))));SELECT DISTINCT ((((vt1.c0)IS NOT(v0.c0)))*(CASE WHEN x'' THEN vt1.lid END)) FROM vt1;SELECT DISTINCT MAX((NOT (vt1.c0))), ((((((((((v0.c0)>('722983747')))OR(((((v0.c0)OR(vt1.lid)))OR(vt1.c0)))))OR(CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt0.c0)<<(vt1.lid)))))OR(((v0.c0)>=(vt0.c0)))), vt0.c0 FROM vt1, v0, vt0 WHERE ((('' COLLATE BINARY)<=(((((0.736974629333556)AND('-218940909')))AND(x''))))) LIMIT -1897728171; -- 0ms;
SELECT ALL ((((((((CAST(vt0.c0 AS REAL))AND(((vt0.c0)%(vt0.c0)))))OR(TOTAL(vt0.c0))))AND((((NULL)) NOT BETWEEN ((v0.c0)) AND ((vt1.lid))))))OR(CASE v0.c0  WHEN v0.c0 THEN x'' END)) FROM v0, vt0, vt1; -- 10ms;
SELECT DISTINCT x'' FROM vt0; -- 0ms;
SELECT ALL load_extension((vt0.c0 IN (vt1.c0))) FROM vt1, v0;SELECT DISTINCT x'', CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC), 0.6193683364049523 FROM vt1;SELECT DISTINCT '0-_ ' FROM v0 WHERE ((((+ (0.46583791595872026))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((vt1.c0)LIKE((- (v0.c0)))) FROM v0, vt0;SELECT ((((v0.c0)%(vt1.c0))) IS TRUE) FROM vt1, vt0;SELECT ((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.lid WHEN v0.c0 THEN vt1.lid WHEN 0xffffffffb723d3ad THEN vt0.c0 WHEN vt1.lid THEN v0.c0 END)<>(ABS(NULL))), ((v0.c0 COLLATE BINARY)<=(((((v0.c0)OR(vt0.c0)))OR(v0.c0)))), v0.c0 FROM vt0, v0, vt1 WHERE (((('809214088')&(0.3565078367148653)) IN (((x'04f5') BETWEEN (NULL) AND (x''))))); -- 0ms;
SELECT DISTINCT 0X676c4884 FROM vt0, v0, vt1 WHERE (TYPEOF(NULL COLLATE NOCASE)) LIMIT -1868369077 OFFSET 1697787102 EXCEPT SELECT DISTINCT vt1.c0 FROM vt1 ORDER BY 'u_', HEX(((x'')%(vt1.c0)));SELECT ALL '134504199' FROM vt1 WHERE (CAST((('')!=(NULL)) AS REAL)); -- 0ms;
SELECT (v0.c0 COLLATE RTRIM IN ()), ((((vt0.c0)=(vt1.lid)))IS((+ (vt0.c0)))), CAST(v0.c0 AS NUMERIC) FROM vt0, vt1 WHERE ((NOT ((~ (0.13192408289888502)))));SELECT DISTINCT COALESCE(AVG(v0.c0), ((vt1.lid) IS TRUE)) FROM vt0, vt1, v0 WHERE (CASE ((x'')OR('-552525443'))  WHEN ((x'') IS FALSE) THEN CAST('p' AS BLOB) END); -- 0ms;
SELECT ((TOTAL_CHANGES())IS(COUNT(*))), LIKE('2062746807', LIKELIHOOD(DISTINCT vt0.c0, 0.7457511539604085)), vt0.c0 FROM vt0, v0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT v0.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) FROM vt1, v0, vt0 WHERE (((NULL COLLATE NOCASE)|(LOWER(x'2dcc')))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(((vt1.lid) IS FALSE), 0.3823448182511343) FROM vt1, v0; -- 0ms;
SELECT NTILE((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.lid))))==(CAST(NULL AS BLOB)))) OVER ( RANGE BETWEEN 'd8~?B6z5 ' PRECEDING AND  UNBOUNDED FOLLOWING), vt1.lid COLLATE BINARY, COUNT((~ (vt1.lid))) OVER () FROM vt0, vt1, v0 WHERE (CASE ((0xffffffff885d35a6)*('1660860456'))  WHEN 0.6934153654783305 THEN '-1645706821' ELSE CASE ''  WHEN 'DMKEUI5' THEN 'È~\r_oM>-' END END) EXCEPT SELECT ((((vt1.lid IN ())))>=((vt1.lid))), FIRST_VALUE(CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) OVER ( RANGE BETWEEN vt1.c0 PRECEDING AND (((+ (vt0.c0)))%(((('1123658731', v0.c0, x'')) BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((v0.c0, vt0.c0, vt1.c0))))) PRECEDING EXCLUDE NO OTHERS), (NOT (COUNT(vt0.c0))) FROM v0 WHERE (((((NULL) NOT BETWEEN (0.3889766722271899) AND (x'')))|(((0X4f589f22) NOT BETWEEN ('571859851') AND (x'4699'))))) LIMIT 2107767396;SELECT ALL CAST(vt0.c0 AS TEXT), vt0.c0, AVG(((vt1.c0)>(v0.c0))) OVER () FROM vt0, vt1, v0 WHERE (CASE WHEN 0.17023533946778036 THEN x'' ELSE 0.819580750652746 END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT vt0.c0 FROM v0 WHERE (((((x'db3b') NOT NULL)) NOT BETWEEN ((0.978390412551613 IN ())) AND (((NULL) NOT NULL))));SELECT (NOT (HEX(vt1.lid))) FROM v0, vt0, vt1 WHERE ((((((x''))<((x'15f282ab'))))>('2127312398' COLLATE BINARY))); -- 1ms;
SELECT DISTINCT AVG((((vt1.lid, vt1.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0, v0.c0)) AND ((vt1.c0, vt1.lid, vt1.lid)))) FROM v0, vt1, vt0 WHERE (((((NULL) ISNULL)) NOTNULL)) GROUP BY ((vt0.c0)+(vt1.lid)) COLLATE BINARY; -- 33ms;
SELECT DISTINCT CAST(vt1.lid AS NUMERIC) COLLATE RTRIM FROM vt1, vt0 NOT INDEXED WHERE ((((NULL IN ('754825666')))IS NOT((~ ('-976272988'))))) ORDER BY ((((((vt1.lid)<(vt1.lid)))AND(CAST(vt0.c0 AS INTEGER))))AND(CAST(vt0.c0 AS NUMERIC))) ASC; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) NOTNULL))OR(TYPEOF(DISTINCT vt1.lid))))AND(((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)))), ((((vt1.c0) NOTNULL)) NOT NULL), ROW_NUMBER() OVER () FROM vt0 WHERE ((((((('ⅽ蕎bz') NOT BETWEEN ('>}9Ks\') AND ('-1050413166')))AND((('%P')AND('')))))OR((+ (0Xffffffffc49087e2)))));SELECT (((NOT (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END)), (- (((vt0.c0)>=(vt0.c0)))), ((((vt1.c0) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((vt1.lid) IS FALSE)) AND (((vt1.lid)<(vt1.c0)))), (~ (((vt1.lid) NOT NULL))), (((CAST(vt1.lid AS NUMERIC)))==((COALESCE(vt1.c0, vt1.lid, vt1.lid, NULL)))), ((((vt1.lid) NOT BETWEEN (v0.c0) AND (vt1.lid)))IS(vt0.c0)), ((TYPEOF(vt1.c0)) NOTNULL) FROM vt0, v0;SELECT ALL (+ (v0.c0)) FROM v0, vt0 LIMIT -1360446803 OFFSET 289397000; -- 1ms;
SELECT DISTINCT CASE MAX(v0.c0)  WHEN ((((NULL)AND(vt1.lid)))OR(vt0.c0)) THEN (- (vt0.c0)) END FROM vt1;SELECT SUBSTR(((v0.c0)LIKE(v0.c0)), (((x''))>((vt1.c0)))), LAST_INSERT_ROWID(), ((vt0.c0 IN ()) IN ()) FROM vt0, v0;SELECT DISTINCT ((v0.c0) IS FALSE), CASE WHEN ((vt0.c0)+(vt1.c0)) THEN (vt0.c0 IN ()) END, CAST(((((v0.c0)AND(v0.c0)))AND(vt1.c0)) AS NUMERIC), ((((vt0.c0)<(v0.c0)))OR(((vt0.c0)=(vt1.lid)))), AVG(CASE WHEN v0.c0 THEN vt1.lid ELSE vt0.c0 END) FROM vt1;SELECT DISTINCT MIN(CAST(x'' AS NUMERIC)), (((v0.c0))>=(((('G5')!=(vt0.c0))))), vt1.c0 FROM vt0, v0, vt1; -- 8ms;
SELECT DISTINCT NTH_VALUE(v0.c0, CASE WHEN ((v0.c0) NOTNULL) THEN CAST(v0.c0 AS BLOB) ELSE TYPEOF(v0.c0) END) OVER (), CASE WHEN (((vt1.c0))!=((vt1.c0))) THEN CAST(vt1.c0 AS REAL) WHEN (((vt0.c0))<=((vt1.lid))) THEN CASE 0.9732882268816916  WHEN 6.2200582E7 THEN vt1.c0 ELSE vt0.c0 END WHEN LOWER(vt0.c0) THEN vt1.lid WHEN vt0.c0 COLLATE RTRIM THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt1.lid) AND (v0.c0)) THEN HEX(v0.c0) ELSE vt0.c0 COLLATE NOCASE END, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (((((vt1.c0)OR(v0.c0)))OR(v0.c0))) AND (((vt1.c0)IS(0.4515301441019871)))), (((((NOT (vt1.lid)))AND((vt1.c0 IN ()))))AND(((vt0.c0)||(vt1.lid)))), ((((vt1.c0)IS(v0.c0))) NOT BETWEEN (CAST(vt1.lid AS TEXT)) AND (((vt0.c0) ISNULL))) FROM v0;SELECT DISTINCT ((vt1.lid)<((- (vt0.c0)))), json_insert((((NULL, v0.c0, v0.c0, vt1.c0, vt0.c0))<((vt1.lid, vt1.c0, vt1.lid, vt1.lid, NULL))), vt0.c0, ((vt1.lid)>=(vt1.c0))), CUME_DIST() OVER () FROM vt0, vt1 LIMIT 739661101 OFFSET 1083822847;SELECT DISTINCT CUME_DIST() OVER () FROM v0, vt0 WHERE (((((((((((NULL) NOT NULL))OR((('0.9005724291108442') BETWEEN ('580378676') AND (0.2774519263224591)))))OR(CASE WHEN NULL THEN 0.026282653377477927 WHEN x'' THEN -1.526767794E9 WHEN NULL THEN NULL ELSE 0.7800928902732162 END)))OR((('/oP<)ME?')IS('Knyr')))))AND('0.8408921662689967' COLLATE RTRIM))) GROUP BY CASE WHEN (+ (vt0.c0)) THEN -1312471623 ELSE ((((vt0.c0)OR(vt1.c0)))AND(v0.c0)) END, ((CASE x''  WHEN vt1.lid THEN vt1.c0 WHEN vt0.c0 THEN '#G?邪' WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(v0.c0)), ((vt0.c0 COLLATE RTRIM)%(vt1.c0 COLLATE NOCASE)) HAVING LOWER(DISTINCT (((vt1.lid))>=((vt1.lid)))) LIMIT -55339124 OFFSET 341959498;SELECT ALL ((v0.c0)AND(NULL)), CASE WHEN v0.c0 THEN ((v0.c0) IS FALSE) ELSE UNLIKELY(DISTINCT vt1.lid) END, CASE WHEN ((v0.c0)/(v0.c0)) THEN CASE NULL  WHEN vt1.c0 THEN vt1.lid ELSE vt0.c0 END END FROM v0 NOT INDEXED;SELECT DISTINCT (((v0.c0, 0.8675292868190636, v0.c0)) BETWEEN ((QUOTE(vt1.c0), (((vt1.lid)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((((((((((vt0.c0)OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid))))) FROM vt1, v0 LIMIT 9223372036854775807 OFFSET 1078811683;SELECT DISTINCT ((MIN(vt0.c0)) BETWEEN (((((vt1.lid)AND(vt0.c0)))AND(vt1.c0))) AND ((((vt1.c0))<((vt1.lid))))) FROM vt0, v0, vt1; -- 10ms;
SELECT DISTINCT ((COUNT(*))-(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END)) FROM v0, vt1 WHERE ((((((((((NOT (NULL)))AND(((8.09214088E8)<=('')))))AND(((x'') NOTNULL))))OR(((0.0074957526844331435)<(x'a87003be')))))OR((((('x4NX*FP)')AND(x'')))AND(NULL))))); -- 1ms;
SELECT ALL ((x'')GLOB(TOTAL(v0.c0))) FROM vt1, vt0 WHERE ('66PFA') ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST LIMIT -1027428935;SELECT DISTINCT CASE (((vt0.c0))>=((vt0.c0)))  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN v0.c0 WHEN ((v0.c0)<(vt1.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN CASE vt0.c0  WHEN vt1.lid THEN vt0.c0 END THEN NULL END FROM v0, vt1, vt0 WHERE (((((x'2d34')/(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((CASE WHEN vt1.c0 THEN NULL END))) FROM vt0, vt1; -- 0ms;
SELECT ((((((vt1.lid) BETWEEN (vt1.c0) AND (vt1.lid)))AND(vt0.c0 COLLATE NOCASE)))OR(((0.01979427991026783)>=(vt0.c0)))), ((UNLIKELY(v0.c0))>>(vt1.lid)), ((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))&(CAST(vt1.c0 AS NUMERIC))) FROM vt1, vt0, v0 WHERE ('1388842919') ORDER BY (('-1531358463')<=(((v0.c0) BETWEEN (vt1.lid) AND (v0.c0)))) ASC; -- 82ms;
SELECT DISTINCT ((((((v0.c0)OR(x'9a8a')))OR(v0.c0))) IS TRUE) FROM vt1 WHERE (((0.4419352133221708)IS(NULL)) COLLATE RTRIM) GROUP BY ((((((vt0.c0)AND(vt1.c0)))OR(((vt0.c0)|(vt1.lid)))))OR(((((vt1.lid)OR(v0.c0)))AND(vt1.c0)))) ORDER BY ((((UNLIKELY(DISTINCT v0.c0))OR(((vt0.c0)||(x'ea61')))))OR(((v0.c0) IS FALSE)))  NULLS FIRST, CASE CASE WHEN 0.8657899915195086 THEN vt0.c0 ELSE vt0.c0 END  WHEN vt1.lid THEN (('sqXU3 ') BETWEEN (vt1.c0) AND (vt0.c0)) END ASC  NULLS FIRST;SELECT ALL v0.c0, v0.c0, ((vt1.c0 COLLATE NOCASE)==(((vt1.lid) NOT NULL))) FROM vt0 LIMIT 268482763 OFFSET -2116554328;SELECT ((((vt1.c0) NOTNULL))GLOB(COUNT(vt0.c0))) FROM vt0, v0, vt1; -- 9ms;
SELECT CASE WHEN (vt0.c0 IN ()) THEN COUNT(vt1.c0) ELSE x'' END FROM v0, vt1, vt0 WHERE (ABS((~ ('')))) ORDER BY (((vt1.lid)LIKE(v0.c0)) IN ()); -- 9ms;
SELECT DISTINCT ((NULL) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((('缐H[04]B&'))>=((v0.c0))))), 0.5227188043151564, CASE WHEN (NULL IN ()) THEN (6.71477839E8 IN (v0.c0, NULL)) WHEN CAST(vt1.lid AS TEXT) THEN CASE WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN (0.35841953359598744)) ELSE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0, v0 RIGHT OUTER JOIN vt1 ON CAST(((v0.c0)LIKE(v0.c0)) AS BLOB) WHERE ((CAST(NULL AS REAL) IN ())); -- 0ms;
SELECT DISTINCT (NULL IN ()), NULL, v0.c0 FROM vt1 WHERE (('-1856114884' COLLATE RTRIM IN ()));SELECT DISTINCT CAST((NOT (vt1.lid)) AS REAL) FROM v0, vt1 WHERE ((('jB6WEv酝金')==(((x'') NOT NULL)))); -- 0ms;
SELECT ALL vt0.c0 FROM vt1, v0 WHERE (((((0.23822802266139964)IS NOT(NULL))) NOTNULL));SELECT -1544105817, (((v0.c0) NOTNULL) IN (CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN 0.22682801680879894 THEN vt1.lid ELSE vt1.c0 END)), (+ (CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt1.lid THEN v0.c0 END)) FROM vt0 ORDER BY (((((((vt1.lid)AND(vt1.lid)))OR(vt0.c0))))<=((((v0.c0)AND(vt0.c0))))) ASC;SELECT DISTINCT (((((vt1.lid)AND(v0.c0)))OR(v0.c0)) IN ()) FROM vt0, v0, vt1; -- 0ms;
SELECT INSTR(load_extension(v0.c0, NULL), ((vt1.lid)/(vt0.c0))), CASE WHEN vt1.lid THEN (vt0.c0 IN ()) WHEN TOTAL(v0.c0) THEN (+ (vt1.c0)) WHEN AVG(vt0.c0) THEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) END, TYPEOF(DISTINCT 0Xffffffffac848da8) FROM vt0, vt1, v0 EXCEPT SELECT DISTINCT ((CASE vt1.lid  WHEN vt0.c0 THEN vt1.lid ELSE v0.c0 END) BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(x''))) AND (((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))OR(x'')))AND(vt1.c0)))), GROUP_CONCAT((((vt1.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt1.c0)))) FILTER(WHERE CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 COLLATE RTRIM WHEN (NOT (v0.c0)) THEN TRIM(vt1.c0) WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0) NOT NULL) END) OVER (), NULL FROM vt1;SELECT (- (CAST(v0.c0 AS INTEGER))), CAST(((v0.c0)GLOB(vt1.c0)) AS REAL), CAST(CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN '-315937666' WHEN vt1.lid THEN vt1.c0 ELSE NULL END AS TEXT) FROM vt0 WHERE ((NOT (json_patch(x'40ee', x'a368'))));SELECT DISTINCT HEX(DISTINCT (vt0.c0 IN ())) FROM v0, vt1 WHERE (CASE CAST('1083822847' AS NUMERIC)  WHEN (0.9922855781284631 IN (NULL)) THEN CAST(x'' AS INTEGER) WHEN (- (x'')) THEN ((x'6601')<<(-4.01355861E8)) WHEN ((0.21352447618979942) BETWEEN (0x4864803) AND ('J)w\n2')) THEN (('-2129698394')<<(0.07496051426370576)) END); -- 0ms;
SELECT DISTINCT ((0.9033038990070774)%(0Xffffffffa703bc55)), CASE WHEN ((vt1.lid) BETWEEN (v0.c0) AND (v0.c0)) THEN 'aT' ELSE '-1062238785' COLLATE NOCASE END, SUM(CAST(v0.c0 AS INTEGER)) FROM v0, vt0, vt1 LIMIT 15920881 OFFSET 1056196502; -- 19ms;
SELECT ALL ((((v0.c0)&(vt0.c0))) BETWEEN ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(vt1.lid AS TEXT))), ((((((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE BINARY, ((vt0.c0) BETWEEN ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((((vt0.c0)OR(v0.c0)))AND('0.8383601790579862')))) FROM v0 WHERE (((((((x'9253')+(NULL)))AND(((0.3594018813136255) BETWEEN (x'') AND (NULL)))))OR(CASE NULL  WHEN -1.837426235E9 THEN x'' WHEN 0.33960603710270487 THEN '-1176831859' WHEN '1514456640' THEN 0xffffffffc4ced394 END)));SELECT ALL ((((vt1.c0)LIKE(v0.c0))) IS FALSE), ((((vt1.c0) BETWEEN (vt1.lid) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (CASE v0.c0  WHEN ']+' THEN vt1.lid ELSE 'x{a80' END)), '0.7069080691598943' COLLATE BINARY FROM vt0;SELECT ROW_NUMBER() OVER () FROM vt0, vt1 WHERE (((((0Xffffffffbb28fa5c) BETWEEN ('1e500') AND ('#g?邪')))>((+ (0.10425762741239974))))); -- 0ms;
SELECT DISTINCT ((vt1.c0 IN ()) IN (((vt1.c0)/(v0.c0)))) FROM vt0, vt1, v0; -- 0ms;
SELECT ALL x'' FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN x'63cd' THEN x'' WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)AND(vt1.lid)) WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)) THEN CAST(vt1.c0 AS TEXT) END RIGHT OUTER JOIN vt1 ON ((((vt1.c0) IS FALSE))IS NOT(((((vt0.c0)OR(v0.c0)))AND(vt1.lid)))) WHERE (((('362008886')) BETWEEN ((((x'') NOTNULL))) AND ((CASE 0.851433470177434  WHEN 0.7021107604824409 THEN 'lj쉡7' WHEN x'0246cea8' THEN '-1222388819' WHEN '' THEN -1.268933763E9 ELSE NULL END))));SELECT ALL v0.c0 FROM vt0, v0 GROUP BY ((CASE WHEN vt0.c0 THEN v0.c0 END)<>(((vt1.c0) NOT BETWEEN (vt1.lid) AND (v0.c0)))) HAVING CAST('-260245076' AS BLOB);SELECT ((((COUNT(v0.c0))OR(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(vt0.c0)), (((vt1.c0, vt0.c0, v0.c0)) BETWEEN ((((((vt0.c0)OR(vt1.c0)))OR(v0.c0)), vt1.lid, CAST(vt0.c0 AS NUMERIC))) AND ((((((v0.c0)OR(v0.c0)))AND(0.8718062346988955)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.lid)))OR(vt1.c0)))OR(v0.c0)), ((vt1.lid)IS('1402:'))))), MIN(CASE WHEN vt1.lid THEN vt1.lid ELSE vt0.c0 END) FROM vt1 WHERE ((NOT (CAST('561991638' AS NUMERIC))));SELECT ALL SUM(LOWER(v0.c0)), (+ ((v0.c0 IN ()))), ((UPPER(DISTINCT vt1.c0)) ISNULL) FROM vt1, vt0, v0 ORDER BY CASE WHEN ((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)))OR(vt1.c0)) THEN (((v0.c0))<((vt0.c0))) ELSE UNICODE(vt0.c0) END DESC  NULLS FIRST; -- 18ms;
SELECT DISTINCT CAST('1540248701' AS REAL), (((vt1.c0)) NOT BETWEEN ((((-1494205939) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt1.lid) NOT NULL)))), (x'a09d' IN ()) FROM vt1, vt0, v0; -- 0ms;
SELECT DISTINCT v0.c0 FROM v0, vt0, vt1 WHERE ((((NULL)) NOT BETWEEN (((((((((('j)w\n2')OR(0.17402427522511066)))OR(-1400599128)))OR(x'2644')))AND(NULL)))) AND (((('\rr') IS TRUE))))); -- 0ms;
SELECT DISTINCT COALESCE(vt1.c0, vt1.c0) COLLATE NOCASE FROM v0 ORDER BY v0.c0  NULLS FIRST;SELECT ALL ((((v0.c0) BETWEEN (v0.c0) AND (x'566f')))>(vt0.c0)) FROM vt0, vt1, v0; -- 0ms;
SELECT CASE NULL  WHEN (NOT (vt1.lid)) THEN ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE '' END FROM v0 WHERE (((CAST('FALSE' AS BLOB))>>((('ZฆrhSIbW[')>('58674365')))));SELECT DISTINCT TYPEOF(((vt1.lid)>>(0.3638363478696488))) FROM vt0, vt1, v0 WHERE (UNLIKELY(DISTINCT (+ (NULL)))); -- 0ms;
SELECT ALL SUM(LENGTH(v0.c0) COLLATE BINARY) OVER () FROM v0, vt0 WHERE ((((('')IS NOT(1574569529)))<=(CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT AVG(((vt1.lid)%(vt1.c0))) FROM vt1, vt0, v0 GROUP BY (((((vt1.lid)AND(vt1.c0)))AND(v0.c0)) IN (LENGTH(vt1.lid), ((vt0.c0)>=(vt0.c0)))) HAVING vt0.c0; -- 47ms;
SELECT DISTINCT ((vt1.lid)>((~ (vt1.c0)))) FROM vt1, v0, vt0 WHERE (CAST(NULL AS NUMERIC)); -- 1ms;
SELECT ALL ((((((v0.c0)OR(vt1.c0)))AND(vt0.c0))) BETWEEN ('850458831') AND (LIKELIHOOD(DISTINCT vt1.c0, 0.5172920469777291))), HEX(((((NULL)AND(6.71477839E8)))AND(vt1.c0))), LIKELY(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) FROM v0, vt0;SELECT DISTINCT (((((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(SUM(v0.c0))))OR((v0.c0 IN (vt1.lid)))) FROM vt1, v0 WHERE ((((0.9036016001704913)) BETWEEN ((CASE '1406674387'  WHEN NULL THEN 885436758 ELSE 0.5018753645663162 END)) AND ((CASE WHEN '9*H[\n&9|E' THEN NULL ELSE 'x&' END))));SELECT DISTINCT ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))AND(((vt1.c0)-(vt0.c0)))))OR(((((-1055289871)AND(vt1.lid)))AND(v0.c0)))) FROM vt1, vt0 WHERE (CAST((((1073099050, NULL, '-1004763546'))>=(('a8ꏫ2k', NULL, x''))) AS NUMERIC));SELECT DISTINCT COUNT(((v0.c0)<<(v0.c0))) FROM vt0, vt1;SELECT ALL CASE ((vt0.c0) BETWEEN ('') AND (0.8209796441951384))  WHEN ((vt0.c0) BETWEEN ('	(L>') AND (v0.c0)) THEN (~ (vt0.c0)) WHEN GROUP_CONCAT(vt1.lid) THEN ((vt1.lid)-(v0.c0)) WHEN CASE WHEN vt0.c0 THEN vt1.lid WHEN vt1.c0 THEN vt1.lid WHEN vt1.c0 THEN v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) WHEN v0.c0 COLLATE BINARY THEN ((x'') NOTNULL) WHEN vt0.c0 COLLATE NOCASE THEN (~ (v0.c0)) ELSE CAST(vt1.lid AS INTEGER) END FROM vt0, v0, vt1 WHERE (CAST(0.9180495726509758 AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((((vt1.lid)AND(vt1.c0)))OR(vt0.c0)))|(v0.c0)) FROM v0, vt0 WHERE (CASE LOWER(940767142)  WHEN x'2f14' THEN CASE WHEN '2054157215' THEN x'' WHEN 0.11568482922306922 THEN 0.8784903522168444 WHEN 0xffffffffa907c8fe THEN 'mfw0#*>' END WHEN COALESCE('-1439972767', 9.53896651E8, x'39fd', '') THEN ((('1260090171')) NOT BETWEEN ((1133499999)) AND ((NULL))) WHEN CASE 'x㡩u'  WHEN x'344d' THEN 0.42140536584806854 END THEN NULL COLLATE NOCASE ELSE (('-1447319068')<('1416099787')) END) LIMIT 324728773;SELECT DISTINCT CASE ((vt1.c0) BETWEEN ('\') AND (v0.c0))  WHEN CASE WHEN NULL THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN ((vt1.lid)>=(vt1.lid)) WHEN ((v0.c0)%(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)) THEN ((vt0.c0) IS TRUE) ELSE CASE WHEN vt0.c0 THEN v0.c0 END END, ((COALESCE(DISTINCT vt0.c0, NULL, vt1.c0, vt0.c0)) NOT BETWEEN ((+ (vt1.lid))) AND (CAST(vt1.c0 AS REAL))), (((vt0.c0) BETWEEN (vt0.c0) AND ('310008775')) IN ()) FROM vt0, v0, vt1 WHERE (rtreenode(NULLIF(DISTINCT x'', 'PYvaA'), CAST('' AS REAL))); -- 0ms;
SELECT DISTINCT (((((((((vt0.c0 IN ()))AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(vt0.c0)))OR(vt0.c0)))AND(SUM(vt1.c0))) FROM vt0 WHERE ((((('抳')IS NOT(x'2bdd'))) IS TRUE));SELECT SQLITE_VERSION(), ((1.05892625E9)<(CAST(vt0.c0 AS REAL))), ((((((((CAST(vt0.c0 AS REAL))OR(COUNT(*))))OR((v0.c0 IN ()))))OR((vt1.lid IN (vt0.c0, v0.c0)))))AND(TOTAL(vt1.lid))) FROM vt1, v0 WHERE ((('-1447319068' COLLATE BINARY)IS(x'3ad2' COLLATE NOCASE))) LIMIT -853772479 OFFSET -1155752429;SELECT DISTINCT (((v0.c0 IN (vt1.lid))) ISNULL) FROM vt0, vt1 WHERE (CASE WHEN CASE '580378676'  WHEN 0.12137140779034028 THEN NULL END THEN (('545370854') NOT NULL) ELSE (x'' IN ()) END);SELECT (((MAX(v0.c0), ((vt1.c0) NOT BETWEEN ('8aZk*') AND (vt0.c0)), ((v0.c0)OR(vt0.c0)), (vt1.lid IN (vt1.lid)), MIN('1126526352')))>=((-1.931230176E9, ((vt1.lid) BETWEEN (vt1.lid) AND (v0.c0)), 'g', CAST(v0.c0 AS INTEGER), SUM(vt1.c0)))) FROM vt1, vt0, v0; -- 22ms;
SELECT DISTINCT CASE WHEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)) THEN '1526886541' COLLATE BINARY END FROM vt1, vt0 NOT INDEXED, v0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)&(vt0.c0)) COLLATE NOCASE) OVER (), ((vt1.c0) IS TRUE), (((v0.c0)) NOT BETWEEN ((vt1.lid COLLATE BINARY)) AND (((+ (vt1.lid))))), vt1.c0, CASE WHEN COUNT(*) THEN CAST(vt1.lid AS INTEGER) ELSE vt1.c0 END FROM v0, vt1, vt0 WHERE ((((((~ (NULL)))OR(((1984517185) NOT BETWEEN (0.992640902839677) AND ('-65840056')))))OR(((x'')AND(NULL))))); -- 0ms;
SELECT LAG((((v0.c0)=(v0.c0)) IN ()), (((vt1.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((vt0.c0) IS FALSE)))), CASE UNLIKELY(DISTINCT v0.c0)  WHEN (vt1.c0 IN (NULL)) THEN 0.29495413861216147 WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN UNICODE(vt1.lid) WHEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((((((((vt1.lid)AND(x'3181')))AND(v0.c0)))AND(vt1.lid)))OR('-1397464855')) ELSE ((vt0.c0) IS FALSE) END) OVER () FROM vt1, vt0, v0 WHERE (STRFTIME(((('907753648')) BETWEEN ((x'3121')) AND ((6.71477839E8))), (('903972395') NOTNULL), (('}莰y6]FId') NOTNULL))); -- 0ms;
SELECT vt1.c0 FROM vt0 WHERE (CAST(x'' AS REAL));SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)|(((vt1.lid) NOTNULL))), PERCENT_RANK() OVER (), x'' FROM vt1, vt0, v0; -- 19ms;
SELECT ((((vt0.c0) NOTNULL))&(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)), ((CAST(vt0.c0 AS INTEGER)) IS FALSE), ((CAST(vt0.c0 AS NUMERIC))<>((vt1.c0 IN (vt1.c0)))) FROM v0 LEFT OUTER JOIN vt0 ON ((vt1.c0 IN ()) IN ()) WHERE ((((((0.11609093074402521)) BETWEEN ((x'')) AND (('5H/ᡲQT*'))))<=(ABS(DISTINCT 'jh4MDR')))) LIMIT 2063770972 OFFSET 1869657725;SELECT DISTINCT ((UPPER(0.580445171119739))-('-489972013')) FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT (+ (TOTAL(v0.c0))), CASE (x'' IN ())  WHEN GROUP_CONCAT(NULL) THEN (+ (vt1.c0)) WHEN 'NC+' THEN (- (x'')) WHEN vt1.c0 THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN TRIM(vt0.c0, vt1.c0) THEN (~ (vt1.lid)) WHEN x'' THEN ((((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)) END, GROUP_CONCAT((vt0.c0 IN ())) OVER () FROM v0, vt0;SELECT DISTINCT (((v0.c0)<>(vt1.c0)) IN ((v0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((0.02829106201921372)) AND ((vt1.c0))))), (- (((vt0.c0)<=(vt0.c0)))), ('0.4184570215080168' IN ()) FROM v0, vt0, vt1; -- 0ms;
SELECT ((('0.044585247157531205')) BETWEEN ((((vt0.c0)-(v0.c0)))) AND (((~ (vt1.c0))))) FROM vt1, vt0 WHERE (((((NULL) NOT BETWEEN ('-332617820') AND (0.2010850599071532))) BETWEEN (((x'')AND('1824350232'))) AND ((- (2073434816)))));SELECT ALL CASE ((vt0.c0)<(vt1.c0))  WHEN vt0.c0 THEN LIKELY(v0.c0) ELSE vt1.c0 COLLATE NOCASE END FROM vt1 WHERE ((((NOT (0X54a892eb))) ISNULL));SELECT ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))/(CASE WHEN vt1.c0 THEN vt1.lid ELSE x'6e03' END)), AVG((vt1.c0 IN ())) OVER (), (- (COALESCE(v0.c0, vt1.lid, vt0.c0, vt1.c0))) FROM v0, vt1 WHERE (CAST(0.9737309267416021 COLLATE RTRIM AS INTEGER));SELECT DISTINCT load_extension(MAX(vt1.c0)) FROM vt0;SELECT DISTINCT CAST(((((vt1.c0)AND(0.37876782060789305)))OR(vt0.c0)) AS INTEGER) FROM v0 WHERE (CAST(((-9.76272988E8) NOTNULL) AS TEXT)) GROUP BY (((((- (v0.c0)))AND(((((v0.c0)AND(vt1.lid)))AND(vt1.lid)))))OR(TRIM(vt1.c0, vt1.c0))) HAVING (((vt1.lid)<>(v0.c0)) IN ());SELECT COALESCE('', CASE WHEN vt1.lid THEN v0.c0 WHEN vt1.lid THEN vt0.c0 WHEN 0.26202924173261133 THEN vt1.lid END, v0.c0, ((vt1.c0)%(v0.c0))) FROM vt0, v0, vt1; -- 0ms;
SELECT ALL (NOT (x'')) FROM vt0, vt1, v0 WHERE (((x'')/(json_object(x'c112', NULL))));SELECT SUBSTR(CAST(vt0.c0 AS REAL), vt0.c0 COLLATE RTRIM) FROM v0;SELECT (((vt0.c0)) BETWEEN (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((x''))), x'1aff621b', COUNT(((((v0.c0)AND(vt1.lid)))AND(vt1.lid))), ((((vt1.lid) NOT BETWEEN (v0.c0) AND (v0.c0)))<=(vt1.c0)), (vt0.c0 IN ()) COLLATE RTRIM FROM vt0, vt1 WHERE (CAST(CASE WHEN '568488433' THEN 0X625f3c04 WHEN '-941563599' THEN 0.49611668470315196 WHEN 0.4930410667123989 THEN NULL END AS INTEGER)) ORDER BY COALESCE(DISTINCT (((vt1.lid)) NOT BETWEEN ((v0.c0)) AND ((vt1.lid))), (((0.32183138927751853, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, vt1.c0, v0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, '', vt1.lid))), vt0.c0 COLLATE NOCASE, (vt1.c0 IN ())) ASC, ((vt1.c0 COLLATE BINARY)&(CAST(vt1.c0 AS INTEGER))) DESC;SELECT DISTINCT CAST(((vt1.c0) NOT BETWEEN (vt1.lid) AND (v0.c0)) AS REAL), COUNT(*) OVER (), v0.c0, CHANGES(), PERCENT_RANK() OVER () FROM v0, vt1; -- 4ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)<<(v0.c0))) AND (((((v0.c0)OR(vt0.c0)))OR(vt1.lid)))) FROM vt1, v0, vt0 LIMIT 704944097 OFFSET -319326505; -- 0ms;
SELECT ALL HEX(((vt1.lid) IS FALSE)) FROM v0, vt1 WHERE (((('-1147292682')AND('>\r')) IN ())) ORDER BY CAST(((vt1.lid) NOT NULL) AS TEXT) ASC LIMIT 1359326487 OFFSET 25180265; -- 0ms;
SELECT ALL CASE vt1.c0  WHEN v0.c0 THEN '9+' ELSE vt0.c0 END COLLATE NOCASE, MIN(vt0.c0), CASE ((((vt1.lid)OR(vt1.lid)))AND(v0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((((v0.c0)OR(vt1.c0)))OR(vt0.c0)) END FROM vt1, vt0, v0; -- 9ms;
SELECT ALL (~ ((vt1.lid IN ()))) FROM vt1, vt0, v0 WHERE (0.12709162823107434); -- 0ms;
SELECT DISTINCT (+ (((vt1.c0) NOTNULL))) FROM vt0 WHERE (((((((((x'')OR('2044650206')))AND('')))OR(x'')))OR('\*''gJYE')) COLLATE RTRIM COLLATE NOCASE);SELECT DISTINCT MAX(TOTAL_CHANGES()) FROM vt0, v0, vt1; -- 6ms;
SELECT DISTINCT CAST(CASE x'7507'  WHEN vt1.lid THEN vt0.c0 END AS INTEGER) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT (((('+' COLLATE BINARY)AND(((vt1.lid) NOTNULL))))AND((vt1.lid IN (NULL)))), ((vt0.c0)OR(vt0.c0 COLLATE NOCASE)), CASE WHEN vt1.c0 THEN STRFTIME(vt0.c0, vt1.lid, v0.c0) END FROM vt1 ORDER BY ((((((-355271627)AND('0|嬯wJ')))AND(vt1.c0)))GLOB(((v0.c0) NOTNULL))) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ()) DESC, 'I7p\Y'''  NULLS LAST;SELECT ((((v0.c0))<((vt1.lid))) IN (((((((((vt1.lid)OR('-1758425998')))AND(vt0.c0)))OR(vt1.lid)))AND(v0.c0)), COUNT(*))) FROM vt0, vt1;SELECT ((((((v0.c0))==((vt0.c0))), CAST(vt0.c0 AS TEXT), ((vt1.c0) IS FALSE), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.lid THEN vt1.c0 WHEN v0.c0 THEN '1424360173' WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END, DATETIME(vt1.c0, v0.c0, v0.c0, v0.c0, vt0.c0)))<=(('-441779483', x'', vt0.c0 COLLATE NOCASE, CAST(vt1.c0 AS INTEGER), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)))AND(v0.c0)))OR(v0.c0)))OR(vt1.lid))))) FROM vt1;SELECT DISTINCT (((((((NULL, vt1.lid, v0.c0)) NOT BETWEEN ((vt1.lid, vt1.c0, v0.c0)) AND ((v0.c0, v0.c0, vt1.lid))))AND(vt0.c0)))AND(((vt1.c0)<<(vt1.lid)))), MIN(NULL), ((((vt0.c0)+(vt0.c0))) NOT BETWEEN (((vt0.c0)|(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))) FROM v0 ORDER BY vt1.c0 ASC;SELECT DISTINCT TOTAL(x'') OVER (), CAST((vt1.lid IN (vt1.lid, vt1.lid)) AS BLOB), (((vt1.lid, ((((v0.c0)OR(vt1.c0)))OR(vt0.c0)), SUM(x''), ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((v0.c0)LIKE(v0.c0))))<>((((vt1.lid)<(vt1.lid)), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.lid, v0.c0, 0.262029119750282)) AND ((v0.c0, vt1.lid, vt0.c0))), (NOT ('-373533963')), vt1.c0 COLLATE NOCASE, (((vt1.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0)))))) FROM vt0, vt1, v0 WHERE (('0.1721957700083755' IN (((x'') NOT BETWEEN (x'') AND (x''))))) GROUP BY CASE WHEN (~ (v0.c0)) THEN ((v0.c0)<=(v0.c0)) WHEN ((v0.c0)<=(v0.c0)) THEN ((vt1.c0)/(vt0.c0)) WHEN ((x'')LIKE(vt1.lid)) THEN ((-1606405553)>=(v0.c0)) ELSE CASE '1083822847'  WHEN v0.c0 THEN vt1.lid ELSE 0.5529281926799261 END END, (((NOT (vt1.c0)))GLOB(v0.c0)), ((('-1983243411', vt1.lid, NULL)) NOT BETWEEN (((vt0.c0 IN (vt1.lid, vt1.lid)), ((vt1.c0)AND(vt1.lid)), (('-971392937')<<(vt0.c0)))) AND ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c0)), ((((v0.c0)OR('798729013')))AND(v0.c0)), vt1.c0))) HAVING 'Ｔ*~8%k>'; -- 0ms;
SELECT DISTINCT CASE WHEN ((x'') BETWEEN (v0.c0) AND (v0.c0)) THEN 'tE' ELSE (((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END, ((CAST(vt1.lid AS REAL))LIKE((NOT (v0.c0)))), (vt0.c0 IN ()) FROM vt1, v0 WHERE ((((('-1763893178')%(x'c9a3'))) BETWEEN (((NULL) BETWEEN ('') AND (0.690737013075863))) AND ((1420333803 IN ()))));SELECT DISTINCT COUNT(((vt1.lid) IS TRUE)) OVER (), (~ (((v0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)))), ((((v0.c0 COLLATE NOCASE)AND(AVG('R'))))OR(((x'')||(vt1.c0)))) FROM vt1 WHERE (((CAST(NULL AS NUMERIC)) NOT BETWEEN (CASE '됂쮫'  WHEN '' THEN NULL WHEN 0.5636150562331449 THEN 'X<' WHEN x'ef64' THEN x'df94' END) AND (((x'ee77')==('-858313495')))));SELECT AVG(CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE) FROM vt1 GROUP BY (((vt1.lid)) NOT BETWEEN ((((vt1.lid)IS(vt0.c0)))) AND ((0x361b38b0)));SELECT DISTINCT HEX(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.lid))) FROM vt1;SELECT DISTINCT ROW_NUMBER() OVER () FROM v0, vt0, vt1 LIMIT 912657974 OFFSET 198502427; -- 30ms;
SELECT DISTINCT CASE WHEN MIN(v0.c0) THEN CAST(vt0.c0 AS INTEGER) ELSE ((v0.c0)*(vt1.c0)) END, CAST(vt1.c0 COLLATE NOCASE AS REAL), ((TOTAL(vt1.c0))+((((v0.c0))<=((v0.c0))))), (((vt1.lid) ISNULL) IN ()), MIN(COUNT(CAST(v0.c0 AS NUMERIC))) FROM v0;SELECT ((vt1.lid COLLATE RTRIM)>>(MAX(vt1.c0))) FROM v0, vt1, vt0 INTERSECT SELECT ALL CAST(v0.c0 COLLATE NOCASE AS INTEGER) FROM v0; -- 9ms;
SELECT DISTINCT ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (HEX(vt1.lid))) FROM v0;SELECT ALL LENGTH((+ (vt0.c0))), LAG((+ ((((v0.c0, v0.c0, '-2141802448'))<((vt0.c0, vt0.c0, v0.c0))))), 0.8933695166541861 COLLATE BINARY COLLATE BINARY, ((((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, x'')) AND ((v0.c0, '-1526767794', vt0.c0)))))>(((v0.c0 IN ()))))) OVER (), AVG(vt1.c0) COLLATE BINARY COLLATE RTRIM FROM vt0, v0 WHERE (((((((0.4833318750022595) NOT BETWEEN (NULL) AND (x'')))AND(('-1420778517' IN ()))))OR(((((x'')OR('-1311368294')))OR(x'ca5f52550101')))));SELECT DISTINCT (- ((+ (vt1.c0)))), ((v0.c0)LIKE(((((((((v0.c0)OR(v0.c0)))OR(vt1.lid)))AND(vt0.c0)))OR(v0.c0)))), vt1.lid, ((((vt1.lid IN ())))==(((v0.c0 IN ())))), DENSE_RANK() OVER () FROM vt0 ORDER BY ('1389013773' IN ())  NULLS FIRST;SELECT ((((vt1.lid) IS TRUE))<=((NULL IN (vt0.c0)))), ((vt0.c0 COLLATE NOCASE)IS(((((vt1.lid)OR(vt1.c0)))OR(vt0.c0)))), ((((v0.c0) BETWEEN (x'') AND (vt1.lid))) BETWEEN (COUNT(*)) AND (((vt0.c0)||(v0.c0)))) FROM vt1, vt0, v0 WHERE ((('') NOT BETWEEN ((((0.32709984094224476, 0Xffffffff89dfca26, 'at'))>((NULL, '0.26202924173261133', 0.6467098616368666)))) AND (((('彎 ', 5.71859851E8, x''))<=(('-1222388819', '397677006', 0.7909062206276761)))))); -- 6ms;
SELECT DISTINCT ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY, (((v0.c0)==(v0.c0)) IN (((vt1.c0) NOTNULL))), json_type(((vt1.c0)|(vt1.lid))) FROM vt0, v0, vt1; -- 0ms;
SELECT ALL GROUP_CONCAT((~ (0x731699dc))) FROM v0, vt0; -- 1ms;
SELECT DISTINCT (((((((((~ (vt1.c0)))OR(((vt1.c0)>=(v0.c0)))))OR(GROUP_CONCAT(vt0.c0))))AND(AVG(-997160990))))AND(((((vt1.c0)OR(NULL)))AND(vt1.lid)))), NULLIF((~ (v0.c0)), vt1.c0), ((((COALESCE(vt1.lid, vt1.lid))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))) FROM vt1, vt0, v0 WHERE (TYPEOF(DISTINCT '2064223917' COLLATE NOCASE)); -- 0ms;
SELECT CASE vt1.c0 COLLATE RTRIM  WHEN SUM(v0.c0) THEN ((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END FROM vt1 ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE, (((v0.c0 COLLATE NOCASE))<=(((('371028967')*(v0.c0))))) ASC;SELECT SUM(((((((((vt0.c0)OR(vt1.lid)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))) FROM v0;SELECT DISTINCT json_object((('-1698930988') IS FALSE), ((vt1.c0)==(v0.c0))) FROM vt0 WHERE (((CAST(1135831936 AS BLOB)) ISNULL)) GROUP BY TOTAL_CHANGES() HAVING ((((((((((v0.c0)||(x'')))AND(((v0.c0) NOT NULL))))OR(COUNT(*))))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.lid)||(vt1.lid))));SELECT ALL (((v0.c0)) BETWEEN (((((NULL))==((vt1.lid))))) AND (('-1995094798'))) FROM vt0, v0, vt1 WHERE (((x'6049' COLLATE RTRIM)IS(((NULL) IS TRUE)))); -- 0ms;
SELECT ALL (-1.131954211E9 IN ()) FROM vt0, vt1 WHERE ((NULL IN ())) GROUP BY (((vt0.c0)*(vt0.c0)) IN (vt1.c0)); -- 0ms;
SELECT DISTINCT ((NOT (vt1.c0)) IN ()) FROM vt1, v0 WHERE ((((((x'')>(0Xffffffff8b3bdf0b))))>((1462151126 COLLATE BINARY)))); -- 0ms;
SELECT ALL COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt1, v0; -- 0ms;
SELECT NULL COLLATE RTRIM, (((v0.c0, v0.c0, vt1.c0)) BETWEEN ((LIKELIHOOD(vt1.lid, 0.3237968049144807), ((v0.c0) IS TRUE), '1324404208')) AND ((LOWER(DISTINCT vt1.lid), CASE WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END, CASE vt0.c0  WHEN vt1.lid THEN v0.c0 ELSE v0.c0 END))), ((vt1.c0 IN ()) IN (AVG(vt1.c0), TRIM(vt1.c0, vt1.lid))) FROM vt0;SELECT DISTINCT GROUP_CONCAT(TRIM(DISTINCT vt0.c0)) FROM v0 WHERE ((- (CASE ''  WHEN x'' THEN 0.45576574343954046 END)));SELECT CAST(NULL AS BLOB) FROM vt1, vt0, v0 WHERE (((((NULL)LIKE('%'))) NOT BETWEEN (CASE WHEN x'4a26' THEN 0.254346582950685 WHEN 0.2378920872122704 THEN 0.15423573035961347 WHEN 243235287 THEN '-941563599' ELSE 1790704909 END) AND ((((('/*,n')OR(x'')))AND('C|x'))))); -- 0ms;
SELECT DISTINCT x'd5d6' FROM vt0; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN (vt0.c0, vt1.c0))) BETWEEN (LIKELIHOOD(vt1.c0, 0.32834679903878894)) AND ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM v0, vt1, vt0 LIMIT 583855282 OFFSET 1821058838; -- 26ms;
SELECT (vt0.c0 COLLATE BINARY IN (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt1 WHERE ((- (((0.5394822462473036)LIKE(-1.983243411E9)))));SELECT ALL CASE vt0.c0  WHEN ((v0.c0)/(vt1.lid)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) ELSE (((vt0.c0, vt1.lid, v0.c0)) NOT BETWEEN ((v0.c0, vt1.lid, vt1.lid)) AND ((vt1.c0, vt0.c0, vt1.lid))) END FROM vt1 ORDER BY (((vt1.c0)) BETWEEN (((('580001678')*(vt1.lid)))) AND ((highlight(vt1.lid, '-564835236', vt1.lid, NULL)))) ASC  NULLS FIRST;SELECT DISTINCT (('') NOT BETWEEN (((((vt1.lid)AND(vt1.lid)))OR(vt1.c0))) AND (((vt1.lid) IS FALSE))), (((((v0.c0 IN (vt1.lid, vt1.lid)))AND(CAST(vt1.lid AS INTEGER))))AND(vt0.c0)), ((((v0.c0)!=(vt0.c0)))<(((vt0.c0) ISNULL))), '554531141', (((((v0.c0)OR(vt1.lid)))AND(vt0.c0)) IN ()) FROM v0, vt1 LIMIT 1543188154 OFFSET 1574569529;SELECT (((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) COLLATE NOCASE COLLATE RTRIM FROM vt1, vt0, v0 WHERE (((((('')) BETWEEN ((NULL)) AND (('704944097'))))<<((('1~cck)')AND(NULL))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt1.lid AS BLOB)) OVER (), CAST((+ (vt0.c0)) AS REAL), ((vt0.c0)*(vt1.c0)) COLLATE RTRIM, ((((json_type(-1.130013905E9))AND(((0x135af7c5)==(vt1.c0)))))OR(vt1.c0)), v0.c0 FROM vt1, v0;SELECT DISTINCT ((vt1.lid) NOT BETWEEN (((vt0.c0)AND(v0.c0))) AND ((- (vt1.lid)))), ((LIKELIHOOD(DISTINCT vt1.c0, 0.4103199471081347))OR(((((vt0.c0)AND(vt1.lid)))AND(vt1.lid)))), NULL FROM vt0 NOT INDEXED LEFT OUTER JOIN v0 ON '381757401' UNION ALL SELECT CASE ((((NULL)AND(vt1.lid)))OR(vt1.lid))  WHEN (((vt1.lid))>((0.04431527827714832))) THEN TOTAL(vt1.c0) END, TRIM(DISTINCT (((0.12377757913510545)) BETWEEN ((vt1.lid)) AND ((vt0.c0)))), ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(SUM(vt1.c0))))AND('')))AND((NULL IN ()))))AND(vt1.lid COLLATE RTRIM)) FROM v0 GROUP BY (((((vt0.c0))>=((v0.c0)))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (NULL));SELECT ((CASE WHEN v0.c0 THEN '-941563599' END) ISNULL) FROM v0, vt1, vt0 WHERE (((((MAX('-606273740', 0.08478715097642908, -6.38691431E8, '-1268933763'))OR(CASE WHEN x'45155c53' THEN 0.9620855450486296 ELSE 0.5158808650745129 END)))OR((('pxmᮚ')IS(-1086738431))))); -- 0ms;
SELECT ((vt1.lid)>(CAST(vt1.lid AS INTEGER))) FROM vt1, vt0, v0 WHERE ((((((NULL)AND(0.29400660613041907)))AND(x'f03f')) IN ('4' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT TOTAL(CAST(x'' AS REAL)), (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))<=(((vt1.c0) BETWEEN (vt1.lid) AND ('')))), LAG(CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT), (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(0.8604822028170389))))<((HEX(DISTINCT vt0.c0)))), vt1.c0) OVER (), AVG((- (v0.c0))) COLLATE NOCASE, ((vt0.c0 IN ()) IN ()) FROM vt1, vt0, v0 UNION ALL SELECT ALL 'Rynt4}3q', ((((((0.10999129053815682)!=(v0.c0)))OR(CAST(vt1.c0 AS TEXT))))OR((+ (vt0.c0)))), load_extension(TYPEOF(DISTINCT vt0.c0)), (((((vt0.c0)AND(NULL)))AND(vt1.lid)) IN ()), (('lV~lhWQI') NOT BETWEEN (((v0.c0) IS TRUE)) AND (NULL COLLATE RTRIM)) FROM vt1 WHERE (((((('E	' IN ('1790881519')))AND((((0.2564205677194733, NULL, 1.014209499E9))!=(('1096299594', x'', x''))))))OR((- (NULL))))) GROUP BY ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((v0.c0))) IN ((vt1.c0 IN ()), (- (vt1.lid)))) ORDER BY x''  NULLS FIRST;SELECT CASE 1.09791632E8 COLLATE NOCASE  WHEN ((vt0.c0)>=(vt0.c0)) THEN GROUP_CONCAT(vt1.lid) END, vt1.c0, 0.17052942680343364 FROM vt1;SELECT DISTINCT CAST(v0.c0 AS BLOB) COLLATE BINARY FROM vt0, v0 NOT INDEXED, vt1 WHERE ((+ ((((x'')) NOT BETWEEN ((x'')) AND ((x'63ce')))))); -- 0ms;
SELECT DISTINCT CAST(TOTAL(vt1.lid) AS INTEGER) FROM vt1 WHERE (x''); -- 0ms;
SELECT CASE WHEN TRIM(DISTINCT v0.c0, vt1.lid) THEN (NOT (vt0.c0)) END, ((((vt0.c0) NOT BETWEEN (vt1.lid) AND (v0.c0)))AND(GROUP_CONCAT(vt0.c0))), ((CASE WHEN v0.c0 THEN vt0.c0 END)LIKE(CASE WHEN vt0.c0 THEN v0.c0 END)) FROM vt0, vt1, v0 WHERE (((((((0.24330688745567897)OR(0.3899492586286687)))OR(x''))) ISNULL)); -- 0ms;
SELECT ALL CAST(vt1.c0 COLLATE BINARY AS TEXT), (CASE WHEN '2126780584' THEN v0.c0 END IN ()), ((((((((((vt0.c0) NOT NULL))OR(((vt1.lid)/(x'')))))OR(GROUP_CONCAT(vt0.c0))))AND(((v0.c0) NOTNULL))))AND((((vt0.c0, v0.c0, vt1.lid)) NOT BETWEEN ((vt1.c0, NULL, vt1.lid)) AND ((v0.c0, v0.c0, v0.c0))))) FROM vt1, v0, vt0; -- 10ms;
SELECT DISTINCT (((vt1.c0 IN ()))<(NULLIF(vt1.lid, v0.c0))), vt0.c0, '0.9327364463041946' FROM v0 WHERE (UPPER(DISTINCT ('0.8428718768279934' IN ()))) LIMIT -829595765;SELECT ALL ((CASE WHEN v0.c0 THEN vt1.lid WHEN vt0.c0 THEN v0.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt1.lid END) NOTNULL), ((CAST(vt1.c0 AS BLOB)) NOTNULL), (((((vt1.lid)>=(vt0.c0))))<((((vt1.c0)LIKE(vt0.c0))))), vt1.lid, CAST(vt1.c0 AS TEXT) FROM vt0, vt1, v0 WHERE ((((COALESCE(0.5098836659272412, '477599724', '98465709', '798729013'), CASE WHEN '' THEN NULL WHEN -1156352591 THEN NULL WHEN 0.7290629264074028 THEN 0.3540641224646107 ELSE x'' END, json_array('_', '1740746896')))>=(('798729013', ((238581653)IS(x'0883')), CASE WHEN '960157647' THEN x'41b0e4ef' ELSE NULL END)))); -- 0ms;
SELECT ALL DENSE_RANK() OVER ( ORDER BY (- ('-279640407')) ASC  NULLS FIRST) FROM vt1; -- 0ms;
SELECT INSTR(HEX(vt1.c0), vt1.c0) FROM vt0, vt1; -- 0ms;
SELECT INSTR(((((vt1.lid)AND(vt1.c0)))AND(vt1.lid)), MAX(vt0.c0)) FROM vt1, v0, vt0 WHERE ((((('362008886')GLOB('')))OR(((-2.141802448E9)!=(NULL))))); -- 0ms;
SELECT DISTINCT json_valid((vt1.c0 IN ())) FROM vt1, vt0; -- 1ms;
SELECT ((vt1.c0)<=(((((((((vt0.c0)AND(v0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(v0.c0)))) FROM v0, vt1;SELECT DISTINCT ((((vt1.c0) NOT NULL)) ISNULL), NULL, TOTAL(((vt1.lid)LIKE(vt1.lid))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((((vt1.c0 COLLATE BINARY)AND(((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))))AND(((NULL)IS(vt1.c0)))) FROM vt1 WHERE ((((CASE x''  WHEN '-1004763546' THEN '0.9245549189872763' ELSE 1742262621 END))<>(((('929312801')OR(-505885826)))))); -- 0ms;
SELECT DISTINCT (((((vt0.c0)>(v0.c0)), (NOT (vt1.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.lid))))>((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)), ((0.8701907656675753) ISNULL), TOTAL(vt1.c0)))) FROM v0, vt0;SELECT DISTINCT vt0.c0, (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), CASE WHEN MAX(vt1.lid) THEN vt1.c0 WHEN ((((((((0.17764870751529982)OR(vt0.c0)))OR(vt1.c0)))OR(0.8391446889859572)))OR(vt0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN (NOT (vt0.c0)) THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt1.lid)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 END THEN (vt1.c0 IN (vt1.lid, vt1.c0)) WHEN ((vt0.c0)AND(vt1.lid)) THEN CAST(v0.c0 AS NUMERIC) ELSE NULL END FROM v0, vt1, vt0 WHERE (((((0.9968955167348547) NOT BETWEEN (x'ce58') AND (x'')))=((('()') ISNULL)))); -- 0ms;
SELECT DISTINCT CAST((+ (v0.c0)) AS INTEGER), ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(COUNT(v0.c0))))AND((vt1.c0 IN ()))), ((((((((((vt1.lid)AND(v0.c0)))AND(vt1.lid)))AND('-334431442')))OR(vt1.c0)))IS((vt1.c0 IN (vt1.c0, vt0.c0)))), vt0.c0, (+ ((~ (vt1.c0)))) FROM vt0, vt1 WHERE (((CAST(0X156c485f AS TEXT))>=(((x'') NOTNULL))));SELECT DISTINCT CAST((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((v0.c0))) AS TEXT) FROM vt1, vt0 WHERE (CASE (((((((('-1439972767')AND('')))OR('K')))OR(0.22207842923486143)))OR('-1493729057'))  WHEN (((NULL)) BETWEEN ((NULL)) AND (('Unqњs'))) THEN TRIM(0X64492d2f, '1240825875') WHEN 'C St4	P' COLLATE BINARY THEN LIKE(x'', x'', '8') WHEN ((NULL)<(NULL)) THEN (- (x'')) ELSE ((NULL) NOT BETWEEN (x'') AND (NULL)) END);SELECT CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)) WHEN (((vt1.lid, NULL, vt1.c0))>((vt1.lid, vt1.c0, vt1.c0))) THEN (- (v0.c0)) WHEN ((vt1.lid) IS TRUE) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((v0.c0)IS NOT(vt0.c0)) THEN vt1.lid WHEN ((((vt1.lid)AND(v0.c0)))AND(vt1.c0)) THEN (((vt0.c0)) NOT BETWEEN ((0Xfffffffffd8dc045)) AND ((vt0.c0))) ELSE SUM(vt0.c0) END FROM vt1, vt0, v0 WHERE ('-4iU\r7LC掦'); -- 10ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM vt1, v0 LIMIT 907304207 OFFSET -1447319068; -- 0ms;
SELECT vt1.c0 FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT (+ (CASE WHEN 'wkH珁q6' THEN vt0.c0 ELSE vt0.c0 END)), MIN(CASE WHEN vt1.lid THEN vt1.lid WHEN v0.c0 THEN '{h,o鮙䢿u' WHEN vt1.c0 THEN vt1.lid ELSE 1.096299594E9 END), (+ (load_extension(v0.c0))) FROM vt1, v0;SELECT ALL COUNT((+ (vt0.c0))) FROM vt0, vt1, v0; -- 9ms;
SELECT ALL ((-1420778517) BETWEEN ((((vt1.lid))<>((NULL)))) AND (AVG(vt1.c0))) FROM vt1, v0, vt0 ORDER BY (((- (vt1.lid))) IS TRUE)  NULLS LAST; -- 9ms;
SELECT ((((v0.c0))<=((vt1.c0))) IN (((v0.c0)==(vt1.c0)))), (+ ((vt1.lid IN ()))), ((NOT (vt1.c0)) IN ()) FROM v0, vt0, vt1 WHERE ((('') IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(vt1.lid) IN ()) FROM vt1; -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE) FROM vt0, v0, vt1 WHERE ((((((((((NOT (x'')))AND(((((((((NULL)OR(x'')))OR('')))OR(-1320961722)))AND(0x903f54)))))AND(CAST('-2132980506' AS NUMERIC))))AND(0.4901455317608282)))OR(CASE 0.2994400638701291  WHEN x'' THEN 0.7560698054272869 END))); -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))), 0.754420809330018, CASE ((v0.c0)>>(v0.c0))  WHEN ((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)) THEN ((vt1.lid)||(vt1.lid)) END, COUNT(*), v0.c0 FROM vt1;SELECT ALL (- (vt1.lid)) COLLATE BINARY FROM vt1, vt0, v0 WHERE (((0x1c7e1bc0 IN ()) IN (((x'')/('2044650206'))))); -- 0ms;
SELECT ALL (- (CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid ELSE v0.c0 END)) FROM vt0, vt1;SELECT DISTINCT (NOT ((vt1.lid IN ()))) FROM vt0, vt1, v0; -- 0ms;
SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (x''))) NOT BETWEEN (v0.c0) AND ((+ (vt1.lid)))), ((((v0.c0) ISNULL)) ISNULL), (v0.c0 COLLATE NOCASE IN (((vt0.c0) IS TRUE))), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))%(vt1.c0 COLLATE NOCASE)), (NOT (x'063a' COLLATE BINARY)) FROM vt1;SELECT DISTINCT CAST(QUOTE(v0.c0) AS REAL) FROM vt1, vt0, v0 GROUP BY ((vt1.c0 COLLATE BINARY) IS TRUE) HAVING (((('1984517185')OR(vt1.lid))) BETWEEN ((vt1.lid IN ())) AND (((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))); -- 25ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM v0 WHERE (LOWER(CAST('' AS BLOB))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt1, v0 WHERE ((+ (((NULL) NOT BETWEEN ('!)(䣢') AND (1991054243))))) LIMIT 1189818629 OFFSET -1439972767; -- 0ms;
SELECT SUM((('1951255814')OR(vt0.c0))) FROM vt1 WHERE (CAST(((NULL)OR('')) AS REAL)) GROUP BY CASE WHEN vt1.lid COLLATE NOCASE THEN (((vt1.c0))<=((vt0.c0))) END, (x'' IN ()), NULL;SELECT ALL CAST(((vt1.lid) IS FALSE) AS NUMERIC) FROM vt0 NATURAL JOIN vt1 WHERE ('1762759190') GROUP BY highlight(((vt1.c0)OR(v0.c0)), CAST(vt1.lid AS TEXT), vt1.lid COLLATE NOCASE, ((((v0.c0)OR(v0.c0)))OR(NULL)));SELECT DISTINCT (NOT (((vt1.c0)+(v0.c0)))), CASE (NOT (vt1.c0))  WHEN (((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) THEN ((v0.c0) IS FALSE) END, ((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE RTRIM FROM v0;SELECT DISTINCT (MAX(vt0.c0) IN ()), (((vt1.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)))) AND ((NULL))), FIRST_VALUE((CAST(vt0.c0 AS TEXT) IN (SQLITE_COMPILEOPTION_GET(vt0.c0)))) OVER () FROM v0, vt0 WHERE (CASE load_extension(x'')  WHEN CAST(NULL AS BLOB) THEN CAST(x'' AS NUMERIC) END);SELECT GROUP_CONCAT(((vt0.c0) IS TRUE)) OVER () FROM vt0 WHERE ((((((x'', 0.9005724291108442, 'Ju!c\rZ2M'))==(('TSld*', 0.005955918394345061, x''))))-(TRIM(DISTINCT '1043391608', 0.42140536584806854)))); -- 0ms;
SELECT ((CAST(v0.c0 AS BLOB))-(vt1.c0)) FROM vt0, vt1 WHERE (CAST(NULL AS TEXT) COLLATE RTRIM);SELECT DISTINCT ((((vt1.lid)) BETWEEN (('cTmve&')) AND ((vt1.lid))) IN (v0.c0 COLLATE RTRIM)), UPPER(DISTINCT x''), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE FROM vt0, v0, vt1; -- 0ms;
SELECT ALL (- (((vt1.lid) IS TRUE))), PRINTF(((vt1.lid) NOT NULL)), CAST((vt0.c0 IN ()) AS REAL) FROM v0;SELECT DISTINCT ((((vt1.c0)IS(-489972013)))+((((vt1.lid, vt1.c0, vt1.lid))>((vt1.lid, vt0.c0, x''))))) FROM vt0, vt1, v0 LIMIT -1471096817; -- 0ms;
SELECT ALL 0.20673989125736247 FROM vt1 WHERE (((CASE 0.945544174461418  WHEN x'' THEN '-161898193' END)|(((x'ce4e')<=(0X7b3fbc8b))))); -- 0ms;
SELECT ALL ((((((((((((x'')OR(vt0.c0)))OR(v0.c0)))OR(CASE WHEN vt1.c0 THEN v0.c0 END)))AND(((((v0.c0)AND(vt1.c0)))OR(v0.c0)))))AND(CASE WHEN vt1.lid THEN '3\r' WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END)))AND(CAST(vt1.c0 AS INTEGER))) FROM v0 LIMIT -1907313662;SELECT DISTINCT IFNULL(DISTINCT CASE vt1.lid  WHEN NULL THEN v0.c0 ELSE v0.c0 END, CAST(v0.c0 AS BLOB)) FROM vt0, v0 LIMIT 25180265;SELECT DISTINCT AVG(x'') OVER () FROM v0 WHERE (x'') GROUP BY vt1.lid, ((vt1.lid COLLATE NOCASE) ISNULL), (- ((v0.c0 IN ()))), ((((vt0.c0) IS FALSE))LIKE(((v0.c0)IS(vt1.lid)))), (((vt0.c0)) BETWEEN (((+ (0.3577742841608781)))) AND ((((vt1.c0) ISNULL))));SELECT DISTINCT ((-17712281) BETWEEN ((vt1.lid IN ())) AND ((vt1.c0 IN ()))) FROM vt0, v0, vt1; -- 0ms;
SELECT RTRIM(vt0.c0) FROM v0 ORDER BY CASE CASE WHEN 0.8365621207698094 THEN vt1.lid ELSE vt0.c0 END  WHEN vt0.c0 THEN ((vt1.c0)<=(vt1.c0)) WHEN v0.c0 THEN CASE v0.c0  WHEN vt1.c0 THEN vt1.lid END WHEN vt1.c0 THEN (((v0.c0))<=((vt1.lid))) END ASC  NULLS FIRST;SELECT DISTINCT ((MIN(vt1.c0))*(((vt0.c0)/(vt1.lid)))) FROM vt0 WHERE (TYPEOF((~ ('1981957801'))));SELECT ((vt0.c0) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((vt1.lid))==((vt1.lid))))), CAST((((v0.c0))<((v0.c0))) AS BLOB), (CASE vt0.c0  WHEN vt0.c0 THEN vt1.lid END IN ()) FROM vt1, vt0 WHERE (CASE ((((((((0.34203630330664625)OR(x'c1da8467')))OR(1690811152)))AND('8	 F9M')))AND(0.5222897426924831))  WHEN ((((((((x'')OR(493454766)))AND(1.014209499E9)))OR(-3.19326505E8)))OR('j+ERZ,')) THEN ((-1601762028)%('2031023395')) ELSE (-552525443 IN ()) END);SELECT ALL json_extract(vt1.lid COLLATE RTRIM, ((vt0.c0)>>(vt0.c0))) FROM vt1 WHERE ((+ ((+ ('qZ')))));SELECT ((+ (vt1.lid)) IN ()) FROM vt1, v0, vt0 WHERE (IFNULL((- (x'')), (NOT (0.49750418077394265)))) ORDER BY vt1.lid  NULLS LAST; -- 0ms;
SELECT ALL (((((((((((('')OR(vt1.c0)))OR(v0.c0)))AND(((((((((v0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(x'1232')))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.36177124621912915))))AND(((v0.c0) NOT BETWEEN (NULL) AND (vt1.lid)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)), NULL, '681077295' COLLATE BINARY FROM vt1, v0;SELECT DISTINCT LAST_VALUE((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.lid COLLATE BINARY)))) OVER ( GROUPS  CURRENT ROW) FROM vt0, vt1, v0; -- 22ms;
SELECT vt1.c0, AVG(((vt0.c0) IS FALSE)) OVER (), ((((((((((vt1.lid) IS TRUE))AND(((v0.c0)IS(vt1.c0)))))AND(vt0.c0)))OR(x'5df90bd1')))AND((((vt1.lid, vt1.lid, '-1659534122')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.022382869352969292, vt1.lid, v0.c0))))) FROM vt0, vt1, v0 GROUP BY v0.c0 ORDER BY ((vt1.c0 COLLATE BINARY)=(((vt1.c0)*(vt1.c0)))) DESC, (CASE v0.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END IN ()), ((((NULL COLLATE BINARY)OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0) IS FALSE))) ASC  NULLS FIRST; -- 36ms;
SELECT ALL ((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) COLLATE RTRIM FROM vt1, v0, vt0; -- 1ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN v0.c0 END)IS(CAST(vt1.c0 AS INTEGER))), AVG(x'') OVER ( PARTITION BY (- (CAST(v0.c0 AS NUMERIC))), (((((((((((vt0.c0))<>((vt1.c0))))AND(((vt1.c0)LIKE(v0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))))AND(IFNULL(vt0.c0, vt1.c0))))AND(((v0.c0) NOTNULL)))), ((LOWER(vt0.c0)) IS TRUE) FROM vt1, vt0 WHERE (((CASE WHEN NULL THEN '/啘~-' ELSE NULL END)LIKE((('qdR<\r3m')/(x'')))));SELECT DISTINCT ((((v0.c0 COLLATE BINARY)OR(((0.4184570215080168) BETWEEN (v0.c0) AND (vt1.c0)))))AND(((vt1.lid)/(v0.c0)))) FROM vt1;SELECT (((((((vt0.c0, v0.c0, vt1.c0)) BETWEEN ((vt0.c0, x'', vt1.c0)) AND ((vt0.c0, vt1.lid, x'71d7'))))OR('575507044')))AND((~ (vt1.lid)))) FROM vt1, v0;SELECT DISTINCT COUNT(*) FROM v0, vt0, vt1 WHERE ((((NULL) NOTNULL) IN ())); -- 0ms;
SELECT ALL (((vt1.c0 COLLATE BINARY))<=((CAST(vt1.lid AS BLOB)))) FROM v0 WHERE ((((NULL, x'69eb', 0.3060368640381905, x'', x''))>((x'', x'ade1', NULL, NULL, x'5604'))) COLLATE BINARY);SELECT ALL GROUP_CONCAT((((vt0.c0))>=((vt1.c0)))) OVER (), (((vt1.lid IN (v0.c0, vt1.c0)))OR(v0.c0 COLLATE RTRIM)), MIN(((vt0.c0)&('D''3a*'))) FROM vt0, vt1 WHERE (0.9704657686405503);SELECT DISTINCT x'' COLLATE RTRIM FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT ((((-594695233)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(((((((((((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))) FROM vt0, vt1, v0; -- 0ms;
SELECT ALL (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((NULL, NULL, vt0.c0)) AND ((vt1.lid, vt1.c0, v0.c0))) COLLATE NOCASE FROM vt1, v0 WHERE ((('-772586834' IN ()) IN ())) GROUP BY (((vt1.lid, vt1.c0, vt1.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.lid END, CASE WHEN v0.c0 THEN vt1.c0 END)) AND (((+ (vt1.c0)), vt1.c0 COLLATE RTRIM, LIKELIHOOD(vt0.c0, 0.957953139435165)))) HAVING SUM(vt1.lid COLLATE RTRIM) COLLATE NOCASE;SELECT (((+ (v0.c0))) NOT NULL), ((((vt1.lid)!=(vt1.c0)))AND(COUNT(*))), DENSE_RANK() OVER () FROM v0, vt1, vt0 WHERE (((('0.5831737183830125')AND('1080190558')) IN ())); -- 0ms;
SELECT ALL RANK() OVER () FROM vt0 WHERE (((CAST(NULL AS BLOB)) ISNULL)); -- 0ms;
SELECT DISTINCT CAST(LIKELIHOOD(vt0.c0, 0.07138682390651274) AS TEXT) FROM vt0 WHERE ((((((~ (NULL)))AND((('')IS(NULL)))))AND('' COLLATE RTRIM))) GROUP BY CAST((((vt0.c0, v0.c0, vt0.c0))!=((vt0.c0, vt1.lid, v0.c0))) AS NUMERIC);SELECT ALL ((TOTAL(vt1.lid))AND(json_extract(v0.c0, vt1.c0, vt0.c0, '-606273740'))) FROM v0 LIMIT 1254009301 OFFSET 198697922;SELECT (('-615589428')<>(((vt1.lid)IS(v0.c0)))) FROM vt1;SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))/((v0.c0 IN ()))) FROM vt1, vt0;SELECT DISTINCT CAST((vt1.lid IN (vt1.lid)) AS BLOB) FROM vt0, v0 WHERE ((CASE NULL  WHEN NULL THEN '-1983243411' END IN ()));SELECT (NOT (LIKELIHOOD(vt1.lid, 0.9759150500824394))) FROM v0, vt0 WHERE (CAST(((0.7930676915349552)OR('0.17456481277647629')) AS BLOB)) UNION SELECT DISTINCT '' FROM v0, vt1 WHERE (((((((x'')AND(NULL)))AND(''))) NOT BETWEEN ((NOT (NULL))) AND (0.0263523496174084 COLLATE NOCASE)));SELECT ((CAST(vt0.c0 AS REAL)) NOT NULL) FROM vt1, v0, vt0 WHERE ((((((x'')) BETWEEN ((x'')) AND ((0.9722308986419468)))) BETWEEN (CASE WHEN 0.3741757276877159 THEN NULL WHEN 0.2592678568823915 THEN 0X54a892eb WHEN NULL THEN 0.4672378093160102 ELSE 'LC\r' END) AND (((NULL)=(362008886))))); -- 0ms;
SELECT ALL (-1.326066101E9 IN (NULLIF(vt1.c0, vt0.c0))), (((v0.c0)IS(-6.15589428E8)) IN ()), CAST(((((((((((((vt1.lid)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt1.lid)))AND(vt1.lid)) AS TEXT) FROM v0, vt0, vt1; -- 0ms;
SELECT UPPER(CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END) FROM vt1, vt0, v0 WHERE (CASE WHEN ((1014209499) NOT BETWEEN (0.9511477704670387) AND ('')) THEN TRIM('i{*&g-xqG') ELSE LIKE('		k4', -1675670769, '9') END) ORDER BY COALESCE(vt0.c0 COLLATE NOCASE, CAST(vt1.lid AS TEXT))  NULLS LAST; -- 0ms;
SELECT ALL vt0.c0 FROM vt0, v0; -- 0ms;
SELECT ALL NULL, ((json_type(vt0.c0)) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt1.c0)), ((GROUP_CONCAT(vt0.c0)) NOT NULL) FROM v0;SELECT DISTINCT (((('798729013')OR(v0.c0))) NOT BETWEEN (MIN(x'')) AND (AVG(vt1.lid))) FROM vt1, v0, vt0; -- 10ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt1.lid WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(NULL)) FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT CAST(DATETIME(vt0.c0, vt1.c0, v0.c0) AS NUMERIC), ((v0.c0 COLLATE NOCASE) NOTNULL), -1106722779 FROM vt1, v0;SELECT CAST(((((((((vt0.c0)OR(vt0.c0)))OR('324728773')))AND(vt1.lid)))OR(vt1.c0)) AS BLOB) FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(x'' COLLATE NOCASE AS BLOB), (('24' IN ()) IN ()), TOTAL((vt1.c0 IN ())) OVER () FROM v0, vt1, vt0; -- 15ms;
SELECT DISTINCT LEAD((((x''))<((CAST(vt0.c0 AS BLOB)))), (~ (((vt0.c0)<(vt0.c0)))), ((NULL) BETWEEN (CASE 0.07734406084283618  WHEN vt0.c0 THEN x'' END) AND ((((v0.c0))>=((vt0.c0)))))) OVER (), (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()), (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) IS FALSE) FROM vt0, v0 WHERE ((+ ('{E}eR1z'))) LIMIT 2110532029 OFFSET 379388632;SELECT DISTINCT json_extract((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))), vt1.c0, (((vt0.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))), CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 END), COUNT(*) OVER (), (LOWER(DISTINCT vt1.c0) IN ((vt1.lid IN ()))) FROM v0 WHERE (((((((((((((NULL)AND(0x0)))AND(x'2186')))AND(((('?y'))<=((0.4132444297614033))))))OR(('DiH8' IN ()))))AND(((((((((NULL)AND(x'8068')))AND('1660860456')))AND(NULL)))AND('')))))OR((NOT (0.3079119579824381)))));SELECT CAST((+ (vt1.lid)) AS NUMERIC) FROM v0, vt1; -- 0ms;
SELECT ((vt0.c0 IN ()) IN ()) FROM vt1, v0 WHERE ((1514456640 IN ()) COLLATE RTRIM) LIMIT -211783342 OFFSET 1855717224; -- 0ms;
SELECT DISTINCT (((vt0.c0, v0.c0, vt0.c0)) BETWEEN (((((vt1.c0, vt1.c0, vt1.lid)) NOT BETWEEN ((vt0.c0, '197139692', vt1.c0)) AND ((vt1.lid, 0.404908747065978, v0.c0))), CASE vt1.c0  WHEN vt1.lid THEN vt1.lid END, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) AND ((((((((((vt1.lid)OR(NULL)))OR(vt1.c0)))AND(x'68e4')))OR(vt1.c0)), (vt0.c0 IN ()), MAX(vt1.c0)))) FROM v0 WHERE (((('-1837426235')) BETWEEN ((CASE 0.46356754753241947  WHEN 0.819160783432247 THEN '\r' ELSE 0.7372094160778144 END)) AND ((((0x54d7809a)IS(0.15847892485295667))))));SELECT DISTINCT ((TRIM(DISTINCT v0.c0)) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) FROM vt1, vt0 WHERE (CASE (((NULL))<((809214088)))  WHEN (0.1681401590556233 IN ()) THEN ('1762759190' IN ()) END);SELECT DISTINCT ((((((((((((vt1.c0)AND(vt1.lid)))OR(v0.c0)))OR(vt1.lid)))AND(vt1.c0)))OR(vt1.c0)))AND(NULL)) COLLATE RTRIM FROM v0;SELECT ALL (((''))>=((((vt1.lid) NOTNULL)))) FROM v0, vt1, vt0 WHERE ((((((('')OR('A๩~')))OR('212807040')))<=(((-698454793) BETWEEN ('飄<X<戙)\rq') AND (-245877982))))); -- 0ms;
SELECT DISTINCT CAST(((v0.c0) ISNULL) AS REAL) FROM vt0 WHERE ((NULL COLLATE NOCASE IN ()));SELECT DISTINCT CASE COUNT(v0.c0)  WHEN ((vt1.lid)IS(vt1.lid)) THEN (~ (vt1.c0)) END FROM v0 WHERE (((('^兼')<<(0.3084815988269918)) IN (((((0.7788147375340304)AND(0.6195780380590755)))AND('1243622168')), 0.7588469616005385))) LIMIT 1472972231 OFFSET -1526767794;SELECT DISTINCT (((v0.c0)&(vt1.c0)) IN (((((vt1.c0)OR(vt1.lid)))OR(vt1.c0)))) FROM vt0, v0 WHERE ((((('')<(x'')))-((('') IS FALSE))));SELECT DISTINCT (((vt1.lid IN ()))AND((vt1.c0 IN ()))) FROM v0, vt1; -- 0ms;
SELECT ALL ((((v0.c0) BETWEEN (vt1.c0) AND ('?gs?~?^/'))) BETWEEN (vt1.lid) AND (((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))) FROM v0, vt1, vt0 WHERE (CASE (('-690526061') NOT NULL)  WHEN TOTAL_CHANGES() THEN (((('-1544105817')OR(0xffffffff89c4ab16)))OR(0xffffffffdbdcff34)) WHEN 0.7004458560521731 THEN (('2042997596')==(x'6603')) WHEN x'5af7' THEN (~ ('')) ELSE '-38648834' END); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) ISNULL) THEN ((vt1.lid) ISNULL) END FROM vt0 WHERE ((((((0.5379106965363314)) NOT BETWEEN (('?ꏫ')) AND ((NULL)))) IS TRUE));SELECT (CASE WHEN vt1.c0 THEN NULL END IN ()), TYPEOF(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0))), (~ (((vt0.c0)>>(v0.c0)))) FROM vt0, vt1 WHERE (CAST((('') NOT BETWEEN (0.25714689661003165) AND ('1083822847')) AS INTEGER));SELECT (CAST(vt0.c0 AS REAL) IN ()) FROM v0 GROUP BY (- ('0.9737309267416021')), ((CASE vt1.c0  WHEN vt1.c0 THEN '-1837426235' END)<<(((((((((vt0.c0)AND(vt1.lid)))OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))), NULL;SELECT CAST((((vt1.lid, vt0.c0, NULL))>=((vt1.c0, vt1.lid, vt0.c0))) AS TEXT) FROM vt0, vt1, v0; -- 0ms;
SELECT ALL SUM(((vt1.lid) IS TRUE)), (((vt1.lid)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((CASE v0.c0  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END))), '0.701700563809785' FROM vt0 ORDER BY CAST(COALESCE(DISTINCT vt1.c0, vt0.c0, vt0.c0, vt1.c0) AS REAL);SELECT (((vt1.c0, vt1.lid, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY COLLATE NOCASE FROM vt1, v0 WHERE (((CASE x''  WHEN 0Xfffffffff57b768b THEN '-1601762028' WHEN 0.08839089664085642 THEN x'' WHEN NULL THEN NULL ELSE NULL END)GLOB(CAST(1310976658 AS REAL)))) GROUP BY ((CAST(vt1.lid AS INTEGER))GLOB('r')), vt1.lid COLLATE RTRIM, CAST(vt1.lid AS TEXT) COLLATE RTRIM HAVING (- (COUNT(*)));SELECT DISTINCT ((HEX(v0.c0))<=(((v0.c0)=(vt0.c0)))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1, v0, vt0; -- 0ms;
SELECT ALL TRIM(v0.c0) FROM vt0, vt1 GROUP BY ((CASE WHEN vt1.lid THEN v0.c0 END) IS FALSE), ((((0.7875238696260533)<=(v0.c0)))LIKE(((((((((vt1.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt1.lid)))OR(v0.c0)))), (~ (((((vt1.lid)AND(vt1.c0)))AND(vt0.c0))));SELECT LAST_VALUE(((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))IS(((x'') NOT BETWEEN (vt1.lid) AND (vt1.lid))))) OVER () FROM vt1, vt0, v0 WHERE ((((x'80c5e6c2') NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT ((((vt1.c0 IN ())))>(((v0.c0 IN ())))) FROM vt1, vt0 WHERE ((('vH\r8lqpg%')*('-1017945958')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.lid))))*((((vt1.lid))<=((vt0.c0))))) FROM v0, vt0;SELECT DISTINCT ((36238200)OR((~ ('y')))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT (('蔓OkEu O![' IN ()) IN ((((vt1.lid, 'R|kFw', vt0.c0))>=((vt0.c0, v0.c0, vt0.c0))), GLOB(vt0.c0, v0.c0))) FROM vt1, v0;SELECT DISTINCT (((((((((((vt1.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)), GROUP_CONCAT(vt1.c0), SUM(v0.c0)))<>((v0.c0, ((vt1.c0)%(vt0.c0)), (~ (v0.c0))))) FROM v0, vt1, vt0; -- 21ms;
SELECT ALL (((vt1.c0))!=(((((2.042997596E9))>=((v0.c0)))))), ((UNLIKELY(vt1.c0)) NOTNULL), ((SUM(vt0.c0)) IS FALSE) FROM v0, vt0, vt1 GROUP BY CASE ((vt1.c0)IS(v0.c0))  WHEN vt1.lid COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM WHEN v0.c0 THEN vt1.c0 COLLATE NOCASE WHEN x'' THEN vt1.c0 END, ((((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))) IS FALSE), ((((v0.c0)<=(v0.c0))) IS FALSE) HAVING vt0.c0; -- 91ms;
SELECT DISTINCT (+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) FROM v0, vt1 LIMIT -1639035085;SELECT RANK() OVER () FROM vt0 WHERE (CAST('' AS REAL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT -1.931230176E9 FROM v0, vt1 WHERE (CASE WHEN ((NULL) BETWEEN (0.7139839691482278) AND (NULL)) THEN ((((0X76495441)OR(-627717691)))AND(0.772071477818706)) END) UNION ALL SELECT DISTINCT ((TOTAL(vt1.c0)) NOT BETWEEN ((vt1.c0 IN ())) AND (((v0.c0)LIKE(vt1.c0)))) FROM vt0, v0, vt1 WHERE ((('') BETWEEN (CASE WHEN x'17b1' THEN 0.5848414349022399 ELSE x'2b4c' END) AND ((0.20804893154426207 IN ())))) LIMIT -2028448791; -- 1ms;
SELECT ALL NTILE((((((vt1.lid) NOT BETWEEN (NULL) AND (vt0.c0))))>(((~ (v0.c0)))))) OVER (), CASE CAST(vt0.c0 AS TEXT)  WHEN ((((((((vt1.lid)OR(v0.c0)))AND(x'')))OR(vt1.c0)))AND(v0.c0)) THEN CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END ELSE vt1.c0 END, (((vt1.c0)>=(v0.c0)) IN ()), vt1.lid, ((((((((vt0.c0)OR(CASE 0.21962519482287912  WHEN vt1.lid THEN vt1.lid END)))OR(CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 END)))OR(CAST(vt1.c0 AS BLOB))))OR(CAST(vt1.lid AS INTEGER))) FROM vt0, v0, vt1 WHERE ((((CAST('.' AS REAL)))<=((((0.9657385713976961)<<('~K//,\nc')))))) ORDER BY CASE WHEN ((vt1.c0)+(vt1.lid)) THEN vt1.c0 COLLATE RTRIM WHEN CASE WHEN vt0.c0 THEN vt1.lid END THEN ((('', vt1.lid, v0.c0))>((vt1.c0, vt0.c0, vt1.c0))) WHEN ((v0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) THEN NULL END;SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.lid))) AND (load_extension(vt1.lid, vt1.lid))) FROM vt1, v0 LIMIT 1695756620;SELECT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) NOT BETWEEN ((v0.c0 IN ())) AND (COUNT(vt1.c0))), ((vt1.lid)>=(vt0.c0)) COLLATE NOCASE, (((('1595404251') BETWEEN (vt1.lid) AND (vt1.lid)))IS NOT(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) FROM vt1 WHERE (((((0.08905427874208005) BETWEEN (x'') AND (0.09751218078747848)))>(CASE WHEN -1.22425009E8 THEN '-1940639009' END)));SELECT DISTINCT vt1.lid FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT (((NULL IN ()))%(COUNT(*))), (~ (json_array_length(vt1.c0))), (((((vt1.lid)%(vt1.c0))))>((SQLITE_COMPILEOPTION_USED(vt0.c0)))), (- (-312800770)), CAST((vt1.c0 IN ()) AS REAL) FROM vt1, v0 WHERE ((- (7.98729013E8 COLLATE RTRIM)));SELECT DISTINCT ((((HEX(DISTINCT vt0.c0))AND(TOTAL(v0.c0))))OR(((vt1.c0)==(0.7004458560521731)))), (~ (((vt1.c0)|(0.9591848967890334)))), LIKELY(v0.c0) FROM v0 CROSS JOIN vt1 ON ((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END)%((- (vt1.c0)))) WHERE ((- (((x'') NOT NULL))));SELECT ((vt0.c0 IN ()) IN (((v0.c0) BETWEEN (vt1.lid) AND (v0.c0)), (v0.c0 IN ()))) FROM vt1, vt0 LIMIT -1420778517 OFFSET -1062238785;SELECT ALL v0.c0 FROM v0, vt1 WHERE (CASE WHEN json_patch('1762759190', '') THEN CAST(0.42140536584806854 AS BLOB) END) GROUP BY LTRIM((vt0.c0 IN ())) HAVING ((((v0.c0, vt1.lid, 0.03293458972285834))>=((0.24234358776131382, vt0.c0, vt1.c0))) IN ()) ORDER BY ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE), ((((vt1.lid)AND(CAST(vt1.lid AS BLOB))))OR(CAST(v0.c0 AS REAL))) ASC  NULLS FIRST;SELECT DISTINCT ((((v0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0))) ISNULL) FROM v0, vt0, vt1 WHERE (((((((0.3540641224646107)IS NOT(578836260)))OR(CAST(0.7588961323764392 AS NUMERIC))))AND((((('^NWnQD4z')AND(0xffffffffa0c84fa3)))OR(''))))); -- 0ms;
SELECT DISTINCT ((x'')OR(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))) FROM v0 WHERE (((((((NULL)<<(0.21962519482287912)))OR((('1981107792')*('329757838')))))AND(((x'') BETWEEN (0.1743103898357492) AND ('y(G)q)*ꗆ'))))) ORDER BY (+ (534624549))  NULLS FIRST, ((((((((v0.c0)OR(vt1.lid)))AND(vt1.lid)))OR(((vt1.c0) NOT BETWEEN (vt1.lid) AND (v0.c0)))))AND(v0.c0)), (((vt1.lid)>>(v0.c0)) IN ()) ASC;SELECT v0.c0 FROM vt0, vt1, v0 WHERE ((((x'')) BETWEEN (((((('1817509822')AND('TY')))AND(NULL)))) AND ((CASE '362008886'  WHEN x'' THEN 0.9156156001921534 END)))); -- 0ms;
SELECT DISTINCT ((((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)AND(NULL))) AND (vt1.c0 COLLATE BINARY)), ((((((vt1.lid)>>(vt1.c0)))OR(((vt0.c0)%(vt1.lid)))))OR(((vt1.c0)IS NOT(vt1.c0)))), ((((v0.c0)-(vt0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.lid)>=(vt0.c0)))) FROM v0, vt0, vt1 WHERE ((NULL COLLATE RTRIM IN ())) ORDER BY (((vt1.lid, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((- (v0.c0)), UPPER(DISTINCT vt1.c0), (((vt0.c0, vt0.c0, vt1.c0))>((v0.c0, vt1.c0, vt1.lid))), CASE vt0.c0  WHEN vt1.lid THEN 0x5bf10b9 ELSE v0.c0 END, v0.c0)) AND (((((vt0.c0, vt1.lid, v0.c0, vt1.c0, -4.1041851E7)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt1.lid, vt1.lid, v0.c0, ')y', vt1.c0))), (vt0.c0 IN (vt1.c0)), ((v0.c0)<>(vt1.c0)), vt1.c0, CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE v0.c0 END))) ASC; -- 1ms;
SELECT CASE ((vt0.c0)IS NOT(vt1.c0))  WHEN ((v0.c0)!=(vt0.c0)) THEN SQLITE_SOURCE_ID() WHEN (('ꭜ(')AND(0.06022761716177105)) THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN '-355271627' THEN ((vt0.c0)>(vt1.c0)) END FROM vt1;SELECT DISTINCT (NOT (v0.c0)) FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt1.lid WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END) ISNULL), (- (((((((((((((vt1.lid)AND('r%')))AND(vt1.lid)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(v0.c0)))), ((v0.c0)GLOB(UNLIKELY(vt1.c0))), vt1.c0, ((((vt1.lid) NOT BETWEEN (vt0.c0) AND (1.014209499E9)))AND(((((vt1.c0)AND(v0.c0)))AND(vt1.lid)))) FROM vt0, vt1;SELECT DISTINCT x'', CAST(((((v0.c0)OR(v0.c0)))OR(vt1.lid)) AS NUMERIC), ((((((((CASE vt1.c0  WHEN '2031023395' THEN vt1.c0 END)AND(LOWER(vt1.c0))))AND(((((((((((((vt0.c0)OR(vt1.lid)))AND(vt0.c0)))OR(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.lid)))))AND(((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))))AND(((vt1.lid) BETWEEN (v0.c0) AND (vt1.c0)))), (NOT (-1.047834378E9)), ((vt0.c0)%(vt1.c0)) COLLATE RTRIM FROM v0 WHERE (((INSTR(x'', NULL))LIKE((((0.2678802139489209, 'NJavDmUt', NULL))>((NULL, '-2099667645', x'08b7'))))));SELECT CAST(CAST(v0.c0 AS INTEGER) AS BLOB) FROM v0, vt0; -- 0ms;
SELECT DISTINCT '95499801', (((((vt1.c0)>(vt1.lid)), ((vt0.c0) NOT NULL), vt1.lid, ((v0.c0)<(vt0.c0)), COUNT('GG}')))<>(((vt0.c0 IN (vt1.lid, vt0.c0)), ((NULL)<<(vt1.c0)), ABS(DISTINCT vt0.c0), CASE vt0.c0  WHEN vt1.c0 THEN NULL WHEN vt1.lid THEN x'' WHEN vt1.lid THEN vt0.c0 END, vt1.c0))), CAST(NULL AS TEXT), (('-107153208') NOT BETWEEN ((v0.c0 IN ())) AND (vt0.c0 COLLATE NOCASE)), FIRST_VALUE((~ (v0.c0))) OVER ( RANGE BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE TIES) FROM v0, vt0 WHERE ((- (NULLIF(NULL, '훾'))));SELECT DISTINCT ABS(SUM(vt1.c0)), (+ ((((v0.c0))>=((vt1.lid))))), SUM(LIKELY(vt0.c0)), ((v0.c0) NOTNULL), json_array_length((v0.c0 IN (vt1.c0)), (((('<^')AND(vt1.c0)))OR('y-*1&n'))) FROM v0 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS TEXT) DESC;SELECT DISTINCT ((COUNT(*))+(vt0.c0 COLLATE RTRIM)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0)==(v0.c0)))-(CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c0 END)), 0x68b4990, GROUP_CONCAT(CAST(vt1.c0 AS INTEGER)) OVER () FROM vt1, vt0, v0 WHERE ((((x'')) NOT BETWEEN (('' COLLATE BINARY)) AND ((NULL)))); -- 0ms;
SELECT ALL (((((vt1.c0) NOTNULL)))<(((~ (vt1.c0))))), 0X4a912906, ((((((vt1.lid)AND(vt1.lid)))AND(vt0.c0)))>=(CASE v0.c0  WHEN vt1.lid THEN v0.c0 END)) FROM vt0, v0, vt1 GROUP BY ((CAST(v0.c0 AS TEXT)) BETWEEN ((vt1.lid IN (vt1.c0, v0.c0))) AND ('Lc5')) HAVING TRIM(DISTINCT ((v0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)), ''); -- 53ms;
SELECT SUM(((vt1.c0) NOT NULL)) OVER ( ORDER BY ((~ (vt0.c0)) IN ()) ASC  NULLS FIRST), CASE ((v0.c0)-(vt0.c0))  WHEN vt1.lid COLLATE RTRIM THEN ((vt1.c0)&(v0.c0)) END, (((CASE WHEN v0.c0 THEN 0.956703517450694 ELSE vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt1.c0)), MIN(v0.c0)))<>((vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE, -347505093))) FROM vt0, v0, vt1 WHERE (((ABS(0.9893171771644552)) BETWEEN (CASE WHEN 0.10937334225801154 THEN 0x554e0f23 END) AND ('-1311368294'))); -- 1ms;
SELECT DISTINCT NTH_VALUE(((vt1.c0 COLLATE NOCASE)=(COALESCE(DISTINCT vt1.lid, vt1.lid, vt1.c0, vt1.lid))), vt1.c0) OVER () FROM vt1 LIMIT 2028497428 OFFSET 1574569529;SELECT ALL MAX(((vt0.c0) NOT NULL)) FROM vt0, vt1 LIMIT -703257172 OFFSET -1222388819; -- 0ms;
SELECT ALL NTH_VALUE((+ ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))), (((vt1.lid) NOT NULL) IN ())) OVER (), GROUP_CONCAT(vt1.lid) OVER (), (((UNLIKELY(DISTINCT '-1378566005')))<=((vt0.c0 COLLATE BINARY))) FROM vt1, v0, vt0;SELECT ALL TOTAL(((((v0.c0)OR(vt0.c0)))AND(vt0.c0))) OVER () FROM v0 WHERE (((json_object(0.42140536584806854, 0.5439269073692873, 0.4182102801573693, '-353839127'))<<(UPPER(NULL))));SELECT ((((vt1.c0)>>('-1447319068')))OR(LOWER(DISTINCT v0.c0))) FROM vt0 WHERE ('-976272988') ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN (+ (vt0.c0)) THEN vt1.lid WHEN vt0.c0 THEN QUOTE(v0.c0) WHEN x'a482' COLLATE RTRIM THEN CASE WHEN vt1.lid THEN v0.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END ELSE (- (vt1.c0)) END ASC  NULLS FIRST;SELECT DISTINCT ((vt1.lid COLLATE NOCASE) BETWEEN ((+ (vt0.c0))) AND ((+ (vt0.c0)))) FROM v0, vt1, vt0 WHERE ((((NULL)) BETWEEN ((CAST('290000301' AS BLOB))) AND ((((0x5c841d43) IS FALSE))))) GROUP BY (NOT (((vt1.c0) ISNULL))) HAVING (((~ (vt1.c0)))>=((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))); -- 0ms;
SELECT DISTINCT ((((((((vt1.lid COLLATE NOCASE)OR(((vt1.lid) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND((((vt1.c0, vt1.c0, v0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt0.c0, vt1.lid, vt1.c0))))))OR(MIN(v0.c0))))OR(TOTAL(vt1.lid))), x'', LOWER('-1235276688') FROM vt1, vt0, v0 WHERE ((NOT (((-526764987)+(802496504))))) ORDER BY (((((~ (v0.c0)))OR(v0.c0 COLLATE BINARY)))AND((NOT (vt0.c0)))), CASE ((v0.c0)IS(vt0.c0))  WHEN ((vt1.lid)/(vt0.c0)) THEN ((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN '_n' THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN (vt1.lid IN ()) THEN (vt0.c0 IN (vt1.c0)) END, ((((vt0.c0)IS(vt0.c0)))<<(vt1.lid)) DESC  NULLS FIRST; -- 1ms;
SELECT ALL SUM(((vt0.c0)-(vt0.c0))), CASE WHEN ((vt1.c0) IS TRUE) THEN RTRIM(vt1.c0) WHEN (~ (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((968493195)) AND ((vt1.lid))) WHEN ((((((((vt1.lid)AND(NULL)))OR(vt0.c0)))OR(0.5352193224529413)))AND(vt0.c0)) THEN (vt0.c0 IN (v0.c0, vt1.lid, vt1.lid)) WHEN ((vt1.lid)-(vt1.c0)) THEN GROUP_CONCAT(v0.c0) WHEN CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((vt1.c0)IS(vt1.c0)) ELSE ((vt1.lid)%(vt1.lid)) END, CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.lid, vt1.lid, -1837426235)) AND ((vt1.lid, vt1.c0, vt1.c0))) THEN ((vt0.c0)IS NOT(vt1.lid)) END FROM vt1 WHERE (((((('173017466'))<((NULL)))) NOT NULL));SELECT DISTINCT (((NOT (vt1.lid)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) FROM vt0, vt1, v0 WHERE (((x'')>=(0.4103425104812699)) COLLATE BINARY) GROUP BY CASE WHEN x'6af8' THEN ((0.8858530711485423)*(v0.c0)) WHEN ((vt1.c0)IS(v0.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END, ((LIKELY(0Xffffffffb45d9b7d))>>(((v0.c0)||(v0.c0)))), ((vt1.lid) BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)); -- 74ms;
SELECT (('0')<=(NULL)) COLLATE RTRIM FROM vt0 WHERE ((((((NULL) IS TRUE)))!=((((-1061442329) IS TRUE))))) GROUP BY vt0.c0 HAVING ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.lid))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (vt1.c0))));SELECT ALL ROW_NUMBER() OVER () FROM vt0 WHERE (((((NULL)||(x'18a1'))) NOT BETWEEN ((('')<=('0.6574184376765781'))) AND (LIKE(0Xffffffffc7e0e131, x'8a94')))); -- 0ms;
SELECT CASE WHEN MIN(vt1.lid) THEN (vt1.lid IN ()) END, (~ (((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))), ((NOT (v0.c0)) IN (ABS(vt1.lid))) FROM v0 WHERE (((((-1.004763546E9) BETWEEN (x'd314') AND ('^6\A秿R')))-(NULL COLLATE NOCASE)));SELECT DISTINCT SUM(CASE vt1.lid  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 END), ((vt1.lid)AND(vt1.lid)) COLLATE RTRIM, CAST(vt0.c0 COLLATE NOCASE AS NUMERIC) FROM vt0, vt1 NOT INDEXED, v0 WHERE (((0.4274592360319389)AND(2028497428))); -- 26ms;
SELECT ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid))) BETWEEN (((vt1.c0)-(v0.c0))) AND (((vt1.lid) BETWEEN ('''I[]') AND (NULL)))) FROM vt1, v0 WHERE ((((('-505969566' IN ()), (~ (x'')), 0.019779444210404895 COLLATE BINARY))!=(((NOT (-1.130013905E9)), CHANGES(), 'X!a[\rs}V?' COLLATE BINARY))));SELECT ((vt1.lid)>>('')) FROM vt0 WHERE (0.6274912244029646) ORDER BY (((((vt1.c0, vt0.c0, v0.c0))>=((vt1.lid, vt0.c0, vt1.c0)))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (NULL)) DESC  NULLS LAST, (~ (((vt1.lid) NOT BETWEEN (vt1.c0) AND (v0.c0)))) ASC  NULLS FIRST;SELECT CASE WHEN ((v0.c0)GLOB(v0.c0)) THEN IFNULL(v0.c0, v0.c0) END FROM v0, vt1, vt0; -- 0ms;
SELECT COUNT(*) FROM vt1, vt0, v0 GROUP BY UPPER(vt1.lid) COLLATE BINARY; -- 17ms;
SELECT DISTINCT ((((vt0.c0)AND(vt1.c0)))AND(vt1.lid)) COLLATE NOCASE, ((((v0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)))==(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))), (((0.9631999845789544, vt0.c0, v0.c0)) BETWEEN (((vt1.lid IN ()), GROUP_CONCAT(v0.c0), UNLIKELY(vt0.c0))) AND ((((vt1.lid)IS NOT(v0.c0)), ((vt1.c0)IS(vt1.lid)), MAX(v0.c0)))) FROM vt1, v0, vt0 WHERE (((((((((CASE NULL  WHEN NULL THEN NULL WHEN '' THEN NULL WHEN '0.3401875595397915' THEN '' END)AND(((((0.6603678889534175)AND('g2N')))AND(1)))))OR(CAST(x'' AS TEXT))))AND(')䆓' COLLATE RTRIM)))AND(CASE WHEN '-1749363588' THEN NULL ELSE x'' END))); -- 1ms;
SELECT ALL ((vt0.c0 COLLATE BINARY)&(UNLIKELY(v0.c0))) FROM v0, vt1;SELECT DISTINCT ((UPPER(vt0.c0)) IS FALSE), json_type(HEX(vt1.lid)), ((('RI''w*5\n{T'))<((GROUP_CONCAT(vt1.lid)))) FROM vt1, vt0 WHERE (((((NULL) NOT BETWEEN ('8	') AND (0.07827352232516027)))||(((NULL)!=(0.6900955769183911))))) GROUP BY (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((DATETIME(vt1.c0, vt1.lid, vt1.lid)))); -- 0ms;
SELECT ALL vt1.c0 FROM v0;SELECT ((((v0.c0))>((v0.c0))) IN ((vt0.c0 IN (-1.714644347E9)))), (((- (v0.c0))) NOT BETWEEN ((vt1.lid IN (vt1.lid))) AND (CAST(vt1.lid AS NUMERIC))), v0.c0 FROM vt0, vt1, v0 WHERE (((('-1164145650')) BETWEEN (((0.10414645380307563 IN ()))) AND ((UNLIKELY(DISTINCT x''))))) GROUP BY NULL HAVING CAST(((vt0.c0)>=(vt0.c0)) AS INTEGER); -- 21ms;
SELECT DISTINCT v0.c0 FROM v0; -- 0ms;
SELECT ALL SUM('') OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM vt0, vt1 WHERE (((0.36312041634617787) BETWEEN ('EmMIq1z') AND (1.189818629E9)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((-1094428282) IS FALSE), NULL, rtreenode((vt1.lid IN ()), (((x'b750', vt0.c0, vt0.c0, vt1.lid, vt0.c0, v0.c0, v0.c0))==(('2Ven', vt1.c0, vt1.lid, vt1.c0, vt1.lid, vt1.c0, v0.c0)))) FROM vt1 WHERE ((((0.9177999662764865)) NOT BETWEEN ((x'')) AND ((('㑡*,V0}2[0' IN ())))));SELECT DISTINCT CAST(vt0.c0 COLLATE BINARY AS TEXT) FROM vt1 WHERE ((((NULL)) BETWEEN ((LOWER(DISTINCT NULL))) AND ((('RO' IN ())))));SELECT DISTINCT v0.c0 FROM vt1 LIMIT 1862345792;SELECT DISTINCT CAST(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))|(((((((((vt1.lid)OR(vt1.c0)))AND(v0.c0)))AND(vt1.lid)))OR(vt0.c0)))) FROM vt1;SELECT CAST(CAST(vt1.lid AS INTEGER) AS NUMERIC) FROM vt1 WHERE (((((((0.05094891729747264)IS NOT(x'94fd')))AND((- (NULL)))))AND(((((x'a42e')OR(-3.19326505E8)))OR(''))))); -- 0ms;
