-- Time: 2024/06/07 17:54:40
-- Database: database14
-- Database version: 3.40.0
-- seed value: 1144487814
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
CREATE TABLE t1 (c0 INTEGER COLLATE RTRIM ); -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('If,'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE LOWER(DISTINCT vt0.c0 COLLATE NOCASE); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=('2142639021'); -- 0ms;
UPDATE OR FAIL t1 SET c0=NULL, c0=0.15877997586397663; -- 0ms;
UPDATE OR IGNORE t1 SET c0=2.142639021E9; -- 1ms;
PRAGMA main.defer_foreign_keys = true; -- 0ms;
ALTER TABLE t1 ADD COLUMN c56 INT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0x7fb613ad), ('ᎭM'), ('880821658'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='*fh^>X᠂', c0=x'', c0=0.056880047959112945 WHERE json_array_length((+ (vt0.c0)), ((vt0.c0)-(vt0.c0))); -- 0ms;
UPDATE OR REPLACE t1 SET c0=0X7fb613ad, c0=-2069215985; -- 0ms;
UPDATE OR IGNORE t1 SET c56=NULL WHERE t1.c56; -- 0ms;
PRAGMA wal_autocheckpoint = 6028849907335583958; -- 0ms;
INSERT OR ROLLBACK INTO t1(c0, c56) VALUES (0.7216722375304907, '70927845'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1852557478);\n; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-828957352); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-6.3838003E8), ('*^'), ('-2069215985'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (''); -- 1ms;
UPDATE OR FAIL vt0 SET c0=0.22194783669223916 WHERE (((- (vt0.c0))) NOTNULL); -- 0ms;
REINDEX; -- 0ms;
PRAGMA incremental_vacuum(-638380030); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (0.15877997586397663), ('0.056880047959112945'); -- 0ms;
ALTER TABLE t1 ADD COLUMN c34 INTEGER; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO t1(c56, c0, c34) VALUES (0.8560023381048996, '0.7216722375304907', -918962190), (1.852557478E9, 0.15877997586397663, NULL), (0.3115634251762964, 7.0927845E7, '880821658'); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('738940120'), ('	㰔Ji-^s1'), ('738940120'), (x''), ('FALSE'), ('X㘌m|kg삾RQ'), (x'e18a'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i25 ON t1((NOT (((((c34)AND(c56)))AND(c56)))) COLLATE BINARY,CAST(c34 AS INTEGER) COLLATE NOCASE,c34 DESC) WHERE ((((((((((((c56)AND(c34)))AND(c0)))OR(c0 COLLATE RTRIM)))OR(((c0) BETWEEN (c0) AND (c34)))))AND(((c0)+(c0)))))AND((x'' IN ()))); -- 1ms;
UPDATE OR ABORT t1 SET c34='ᎭM', c0='' WHERE CAST((('559934118') BETWEEN (t1.c56) AND (t1.c34)) AS INTEGER); -- 0ms;
END; -- 1ms;
INSERT OR ABORT INTO t1(c56) VALUES (0.24288561929025687), (x''), (0.6862118526066833); -- 1ms;
PRAGMA main.legacy_file_format = false; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
END; -- 0ms;
PRAGMA incremental_vacuum(70927845); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('xlNnᎭN㘌.I') WHERE (((vt1.c1)) NOT BETWEEN ((((vt1.c1)/(vt1.c1)))) AND ((((((((((vt1.c1)OR(vt1.c0)))OR(NULL)))OR(vt1.c1)))AND(vt1.c0))))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 1ms;
PRAGMA cache_size = 0; -- 0ms;
UPDATE t1 SET c34='527775244', c0=0.03107634911930357 WHERE ((((+ (t1.c0)), CAST('-0.0' AS TEXT), 0Xffffffffa0015cae))<((7.0927845E7, ABS(x''), (((t1.c34))=((t1.c56)))))); -- 1ms;
UPDATE OR REPLACE vt1 SET c1=0.29688174240873644 WHERE ((((((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(QUOTE(0.9993556332274273))))OR((NOT (vt1.c0)))); -- 0ms;
DELETE FROM vt1; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0, c1) VALUES ('*fh^>X᠂', NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.15877997586397663); -- 0ms;
PRAGMA incremental_vacuum(771364247); -- 0ms;
REINDEX NOCASE; -- 0ms;
VACUUM main; -- 1ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ABORT INTO vt1(c1) VALUES ((~ (((((((((1962711099)OR('1046677139')))AND('1852557478')))OR(x'49eb')))OR(5.59934118E8))))); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('559934118'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'3a37'), ('905250302'), (NULL); -- 0ms;
DROP INDEX IF EXISTS "i25"; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-638380030,3');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=0.06271828203874386, c1=NULL, c0=x'' WHERE CAST(((vt1.c1)>(vt1.c0)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO t1(c56, c0) VALUES ('', x'a4bd'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, +c5 INTEGER ); -- 1ms;
INSERT OR IGNORE INTO t1(c56) VALUES (''); -- 1ms;
PRAGMA temp.integrity_check; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (0.6885736808721639 IN ()) FROM vt1, rt0 LIMIT -918962190; -- 0ms;
SELECT 0X6de58ed2 FROM vt0, t1 WHERE ((((('J삾e	Lbt1')OR(NULL))) NOT BETWEEN (('713539774' IN ())) AND ((((((((('bFCY')OR(-1697460567)))OR(NULL)))OR('S\')))OR(0.22194783669223916))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c5)) NOT BETWEEN (CAST(x'' AS NUMERIC)) AND (CASE WHEN t1.c56 THEN vt1.c1 ELSE rt0.c5 END)), CAST(t1.c56 AS TEXT) COLLATE BINARY, ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 END)OR(vt1.c0)))OR((((rt0.c1, vt1.c1, vt1.c1))>=((0xffffffff84aa450f, rt0.c3, rt0.c0))))) FROM t1 LIMIT 1104590175;SELECT vt0.c0 COLLATE RTRIM, CAST(((vt1.c0)!=(t1.c0)) AS NUMERIC), LAG(0.5469971597085698, json_extract(((NULL) BETWEEN (rt0.c2) AND (rt0.c0)), (((rt0.c2))==((vt1.c0)))), (((('\뛝')AND(vt1.c1)))OR(rt0.c4)) COLLATE RTRIM) OVER (), LAST_INSERT_ROWID(), ((rt0.c1) BETWEEN (((t1.c56) NOT NULL)) AND ('214019163')) FROM rt0, vt1;SELECT DISTINCT rt0.c4 FROM rt0, vt1, t1 WHERE ((((0Xffffffffcdc22580 IN ())) NOTNULL)); -- 0ms;
SELECT ALL SUM(((rt0.c0)<=(rt0.c2))) FROM vt0, vt1 WHERE (UPPER(((NULL) ISNULL)));SELECT DISTINCT NULL, ((CAST(vt0.c0 AS NUMERIC))&(((((vt1.c0)AND(rt0.c3)))OR(rt0.c2)))), COUNT(*), (((((((((((t1.c56)OR(rt0.c4)))AND(rt0.c1)))AND(x'2797033d')))AND(-1015749224))))=((CASE vt1.c1  WHEN rt0.c4 THEN vt1.c0 END))), CASE ((rt0.c5) BETWEEN (t1.c56) AND (rt0.c5))  WHEN (~ (t1.c56)) THEN ((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) WHEN (('') NOT BETWEEN (t1.c0) AND (rt0.c4)) THEN ((vt0.c0)IS NOT(rt0.c4)) WHEN '1104590175' COLLATE NOCASE THEN ((rt0.c3)==(rt0.c1)) ELSE rt0.c2 END FROM vt0;SELECT DISTINCT ((((rt0.c4 IN ())))>(((((rt0.c5))<=((rt0.c3)))))) FROM vt0 WHERE (((CAST(0.9211608747854253 AS TEXT)) NOT BETWEEN (((NULL)||(1.046677139E9))) AND ((('663862863')+(x'2695')))));SELECT DISTINCT (NOT (((((t1.c0)AND(vt0.c0)))AND(vt1.c1)))), (((((NULL IN ()))AND((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))))OR(t1.c56)), t1.c56 FROM vt0, t1, rt0 WHERE ((((((((((((0.18635590684826386))>=((0Xffffffffcdc22580))))AND((('1024433638') NOT BETWEEN ('1852557478') AND (NULL)))))AND(CAST(0.8480301005509477 AS REAL))))OR(CAST('' AS BLOB))))OR((NOT (-2.069215985E9))))) LIMIT -1545965680;SELECT DISTINCT CASE WHEN ((t1.c56) NOT NULL) THEN rt0.c3 ELSE vt1.c0 END FROM vt0, rt0, vt1, t1; -- 0ms;
SELECT DISTINCT vt1.c1, ((((vt1.c0)!=(vt1.c1))) IS TRUE), GROUP_CONCAT(LIKELIHOOD(rt0.c0, 0.579520659884052)), ((((rt0.c5) NOT BETWEEN (t1.c0) AND (rt0.c3)))AND(((vt1.c0) NOT NULL))), ((905250302)==(((rt0.c1) NOTNULL))) FROM t1, vt0, vt1, rt0 WHERE (0xffffffff9de9a715); -- 1ms;
SELECT TOTAL((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))), rt0.c4, LIKELIHOOD((((vt0.c0, t1.c56, rt0.c5)) NOT BETWEEN ((t1.c0, t1.c34, rt0.c4)) AND ((t1.c0, rt0.c5, t1.c34))), 0.13712669518643694) FROM vt0, vt1, rt0;SELECT (((vt1.c1) BETWEEN (rt0.c0) AND (vt0.c0)) IN ()) FROM vt0 WHERE ((- (((('-1610523474'))<=((1391197625)))))) GROUP BY ((((t1.c56)*(rt0.c2)))IS(((((((((t1.c0)AND(vt1.c1)))OR(rt0.c0)))OR(t1.c34)))OR(vt0.c0)))), ((((rt0.c5) IS TRUE))>>(CAST(rt0.c4 AS INTEGER))), (((vt0.c0)) NOT BETWEEN ((((t1.c0) BETWEEN (t1.c34) AND (t1.c0)))) AND ((CAST(vt1.c0 AS TEXT))));SELECT DISTINCT CAST(((x'') IS TRUE) AS INTEGER), ((((t1.c0)>(rt0.c0)))%(HEX(DISTINCT rt0.c0))), ((((rt0.c1)&(rt0.c4))) NOT NULL), CASE WHEN ((t1.c0)&(rt0.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c34)) END, TOTAL(((rt0.c1)>>(rt0.c2))) OVER ( GROUPS BETWEEN CAST(((rt0.c3)+(rt0.c1)) AS BLOB) FOLLOWING AND (NOT (((rt0.c5)IS(rt0.c1)))) PRECEDING) FROM t1, vt1 WHERE (((((NOT ('-1567461961'))))<=((CAST(0.7670951490702702 AS REAL)))));SELECT (((rt0.c4)) NOT BETWEEN ((((rt0.c5)|(t1.c56)))) AND ((TOTAL(vt1.c0)))) FROM t1, vt1, vt0, rt0 WHERE ((('812977582')%(NULL)) COLLATE BINARY COLLATE RTRIM); -- 1ms;
SELECT DISTINCT x'cb22' FROM t1, rt0 ORDER BY 0.8480301005509477 COLLATE NOCASE ASC  NULLS FIRST; -- 0ms;
SELECT ((((rt0.c5)|(rt0.c4)))>(CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) FROM vt1, vt0, rt0, t1 LIMIT 0 OFFSET -219719091; -- 0ms;
SELECT DISTINCT (ABS(vt1.c1) IN ()), ((t1.c56 IN ()) IN ()), TOTAL((rt0.c1 IN ())) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(MAX(((t1.c56) IS FALSE))), TOTAL((NOT (t1.c56))) FILTER(WHERE ((((((t1.c0)OR(t1.c0)))AND(rt0.c3))) BETWEEN (load_extension(vt1.c0, NULL)) AND (t1.c56 COLLATE RTRIM))) OVER (), (((NOT (rt0.c0)))>=((((rt0.c4, rt0.c0, rt0.c4))<=((t1.c34, t1.c56, t1.c56))))) FROM t1;SELECT DISTINCT (('-1540185381')/(((t1.c56) NOT BETWEEN (rt0.c5) AND (rt0.c3)))), vt0.c0, SUM(('Q25+ZIF' IN ())) OVER () FROM vt1 ORDER BY (((rt0.c3 IN ()))>(vt0.c0))  NULLS LAST;SELECT DISTINCT (+ ((t1.c56 IN ()))) FROM rt0, vt1 WHERE (CAST(CASE WHEN -638380030 THEN '0.8560023381048996' ELSE NULL END AS INTEGER)); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0 GROUP BY ((CASE WHEN vt1.c1 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN ((~ (rt0.c2))) AND (((rt0.c3) NOTNULL))) HAVING (((((t1.c0, vt0.c0, rt0.c1))>((rt0.c2, rt0.c4, rt0.c4))))==((((t1.c34, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c5, rt0.c0)) AND ((rt0.c3, vt1.c1, vt1.c1))))) LIMIT 2142639021 OFFSET -615031842;SELECT DISTINCT ((((rt0.c5)+(vt0.c0)))%(((vt1.c1)>>(t1.c0)))) FROM t1, vt0, vt1 WHERE (LIKELY('1843760850'));SELECT ALL COUNT(((rt0.c3)=(vt0.c0))) COLLATE NOCASE FROM t1 LIMIT -1886024751;SELECT DISTINCT CASE (+ (vt1.c0))  WHEN (((rt0.c5)) BETWEEN ((t1.c34)) AND ((t1.c56))) THEN (((rt0.c3))<=((rt0.c2))) ELSE '1540651206' END, ((x'' COLLATE BINARY) ISNULL), (((((rt0.c4))<(('1048432896'))))GLOB((- (vt1.c0)))) FROM vt0 WHERE (CASE WHEN CAST(NULL AS BLOB) THEN (NOT ('1048432896')) WHEN CAST(x'b01d' AS TEXT) THEN CASE WHEN '1208905733' THEN 0.9612163514221245 END WHEN ((((x'efe5')AND(0.9292201518832547)))OR('')) THEN CAST(NULL AS BLOB) END);SELECT DISTINCT GROUP_CONCAT(((t1.c0)||(rt0.c4))) COLLATE NOCASE FROM vt1, rt0, t1 WHERE (CAST(x'' COLLATE RTRIM AS NUMERIC)); -- 0ms;
SELECT ((highlight(rt0.c3, t1.c56, vt1.c0, t1.c34)) IS FALSE), '1391197625' COLLATE BINARY, vt1.c0 FROM vt1, vt0, t1;SELECT ALL ((rt0.c4)==(rt0.c3)) COLLATE RTRIM FROM rt0, t1, vt0 ORDER BY LENGTH(((rt0.c5)/(rt0.c1))) LIMIT 1955011303; -- 1ms;
SELECT DISTINCT RTRIM((((t1.c0))<((t1.c0)))) FROM t1, rt0 WHERE ((((x'', 0.29688174240873644, '')) BETWEEN (('713539774', (((0.9211608747854253))==((x''))), ('-222720711' IN ()))) AND ((0xfffffffffa35bc78 COLLATE RTRIM, ((((0.3735337866424332)OR('gmA7aI')))OR(851949917)), ((x'07c5') IS TRUE))))) GROUP BY ((x'') IS FALSE), QUOTE('-1610523474'), vt1.c1 HAVING 'l2';SELECT ALL (NOT (((vt1.c0)-(vt1.c1)))), RANK() OVER (), json(vt1.c1 COLLATE BINARY) FROM vt1 WHERE (x''); -- 0ms;
SELECT ALL SUM((- (t1.c0))) FROM t1, rt0 WHERE ('bFCY') GROUP BY (NOT ((vt1.c1 IN ()))) HAVING ((((CAST(t1.c0 AS TEXT))OR((~ (0.8187799174310831)))))OR((((rt0.c1, NULL, rt0.c2, t1.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, t1.c56, '*fh^>X᠂', t1.c34, rt0.c2)) AND ((vt0.c0, rt0.c2, vt1.c1, t1.c56, t1.c34)))));SELECT DISTINCT ((((NOT (t1.c0)), ((vt1.c1)IS(x'')), ((((t1.c56)AND(rt0.c2)))OR(rt0.c1))))>((DATETIME(rt0.c5, rt0.c3, t1.c34), (- (rt0.c3)), ('gma7ai' IN ())))) FROM vt1 LIMIT -828957352 OFFSET 2140405563;SELECT ALL ((((rt0.c4) NOTNULL))<((vt1.c1 IN ()))), (((vt1.c0)) NOT BETWEEN ((((rt0.c4)=(rt0.c1)))) AND ((0.3845134088297081))), CAST(rt0.c3 AS BLOB) FROM vt0, vt1, rt0 WHERE (CAST(LOWER('%\r') AS INTEGER)); -- 0ms;
SELECT DISTINCT ((CAST(7.0927845E7 AS NUMERIC))<(((((((((rt0.c2)AND(rt0.c4)))OR(x'062c')))AND(rt0.c4)))AND(vt1.c1)))), (~ (rt0.c2 COLLATE NOCASE)), ((((t1.c34) IS TRUE)) NOT BETWEEN (((x'') NOT NULL)) AND (((((x'')OR(vt0.c0)))OR(rt0.c5)))) FROM rt0;SELECT ALL CAST((((vt0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c4))) AS INTEGER), (((rt0.c0)) BETWEEN ((CAST(t1.c56 AS NUMERIC))) AND ((((t1.c56) ISNULL)))), (+ ((~ (vt1.c0)))) FROM vt0, vt1;SELECT DISTINCT ((((t1.c56)<=(t1.c34))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN rt0.c4 THEN rt0.c0 ELSE t1.c0 END)) FROM vt0, vt1, t1, rt0; -- 0ms;
SELECT ALL (((((rt0.c1) BETWEEN (NULL) AND (rt0.c1))))<(((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))), NULLIF(DISTINCT json_patch(rt0.c2, vt1.c0), CASE WHEN rt0.c3 THEN '-479603507' ELSE rt0.c1 END), CASE ((((rt0.c1)AND(rt0.c3)))OR(x''))  WHEN vt1.c1 THEN json_extract(rt0.c4, rt0.c0) END FROM vt0, t1 WHERE ((((((-1021489951)OR('')))AND(x'')) IN ())) LIMIT -1697460567 OFFSET 655582301;SELECT DISTINCT RANK() OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW) FROM vt0, vt1, rt0, t1 WHERE (CAST(((0.6902742233750125)||(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE RTRIM)<<(CAST(rt0.c1 AS TEXT))) FROM rt0 GROUP BY (+ (CAST(t1.c56 AS TEXT))) LIMIT 1046677139;SELECT DISTINCT (- (CASE rt0.c4  WHEN vt0.c0 THEN NULL WHEN t1.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c1 END)), CASE WHEN COUNT(*) THEN ((rt0.c4)==(t1.c34)) ELSE (((rt0.c5)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) END, CASE WHEN ((rt0.c3) NOTNULL) THEN CAST(rt0.c5 AS REAL) END FROM vt0, t1, vt1, rt0 WHERE (CASE WHEN (('')-('2142639021')) THEN '-378913772' COLLATE RTRIM END); -- 0ms;
SELECT ALL ((((CASE WHEN t1.c56 THEN rt0.c2 END)AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))AND(((rt0.c2)OR(rt0.c2)))) FROM vt0, rt0, t1 GROUP BY (~ (((t1.c56) IS FALSE))), ((((NULL)%(''))) BETWEEN ((- (-9223372036854775808))) AND ((((vt1.c0)) NOT BETWEEN ((t1.c56)) AND ((rt0.c5))))), ((((((rt0.c0, vt1.c1, -1105966560)) BETWEEN ((vt0.c0, t1.c0, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c3))), vt1.c1, ((vt1.c0) NOT BETWEEN ('*|m#擗') AND (t1.c34))))<>((((((((((t1.c34)OR(vt0.c0)))AND(vt0.c0)))OR(t1.c34)))AND(rt0.c0)), ((rt0.c4) NOT NULL), CAST(rt0.c3 AS INTEGER))));SELECT ALL ((('0.8560023381048996')) BETWEEN ((LIKELY(rt0.c5))) AND ((((rt0.c4)&(rt0.c0))))) FROM t1, vt0, vt1, rt0 WHERE (((((((0.3779598907626922) NOT BETWEEN (9.05250302E8) AND (NULL)))OR(((x'4767')<=(x'')))))AND(((NULL) IS FALSE)))); -- 0ms;
SELECT ((CAST(vt0.c0 AS REAL))>(((vt1.c0)+(rt0.c5)))) FROM vt0, rt0 RIGHT OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN rt0.c3 THEN vt1.c0 END)) AND ((rt0.c1 COLLATE NOCASE))) LEFT OUTER JOIN vt1 ON SQLITE_VERSION() WHERE ((((((-2010551335 IN ()))AND((+ (NULL)))))OR(((0Xffffffffa71f57ce) BETWEEN (0.03621512643210267) AND (0.3115634251762964)))));SELECT DISTINCT (((~ (t1.c0)))GLOB((~ (t1.c56)))) FROM t1, vt1, rt0, vt0 LIMIT -1567461961; -- 0ms;
SELECT DISTINCT (((rt0.c4)) BETWEEN ((RTRIM(rt0.c4))) AND (((~ ('812977582'))))), NTH_VALUE((vt0.c0 COLLATE RTRIM IN (((vt0.c0)AND(vt0.c0)), vt0.c0)), ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))>((((vt0.c0)<=(vt0.c0)))))) OVER (), ((((t1.c56)IS(rt0.c1)))&(COUNT(vt1.c0))) FROM vt0;SELECT DISTINCT ((((rt0.c3) IS FALSE)) NOT BETWEEN ((NOT (rt0.c0))) AND ((rt0.c2 IN ()))) FROM t1, rt0 WHERE (CAST(((0.8228957089651392) NOT BETWEEN ('-1540185381') AND (0.7216722375304907)) AS INTEGER)); -- 1ms;
SELECT CASE WHEN ((rt0.c2)LIKE(rt0.c0)) THEN vt1.c1 COLLATE NOCASE WHEN ((rt0.c1) BETWEEN (t1.c34) AND (x'54d2')) THEN TRIM(t1.c34) WHEN TOTAL(rt0.c3) THEN TOTAL(rt0.c3) ELSE CASE vt1.c1  WHEN t1.c0 THEN rt0.c2 END END, NULL, t1.c56 FROM t1, vt0, vt1;SELECT DISTINCT (~ (vt1.c0)) COLLATE NOCASE FROM vt0, vt1, rt0, t1 WHERE (CASE WHEN (('1104590175')<<(x'')) THEN ((((((((NULL)AND(x'')))AND(0.03107634911930357)))OR(0.012222606212232923)))AND(NULL)) END); -- 0ms;
SELECT ((rt0.c3 COLLATE BINARY)*('')) FROM vt0 WHERE ((((8.80821658E8)GLOB(0xffffffffa0015cae)) IN ()));SELECT ((GROUP_CONCAT(rt0.c2))>=(COALESCE(DISTINCT t1.c0, rt0.c0))) FROM t1, rt0, vt0; -- 1ms;
SELECT ALL ((CAST(rt0.c0 AS BLOB))&(((rt0.c5)<=(vt1.c0)))) FROM t1, vt0 ORDER BY CASE WHEN TIME(t1.c56, rt0.c1, rt0.c1, vt1.c1, rt0.c2) THEN CASE WHEN vt1.c1 THEN rt0.c0 ELSE t1.c0 END WHEN (((rt0.c5)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) THEN ((((((((rt0.c5)OR(rt0.c1)))OR(rt0.c2)))OR(x'')))OR(rt0.c0)) WHEN ((((((((((((rt0.c2)AND(vt1.c1)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c5)))AND(vt1.c1)))AND(t1.c56)) THEN ((rt0.c4) ISNULL) END ASC;SELECT DISTINCT ((SUM(rt0.c0))OR(((vt1.c0) NOT BETWEEN (t1.c34) AND (rt0.c5)))) FROM t1, vt0, rt0, vt1; -- 0ms;
SELECT DISTINCT ((0.5431025338726104 COLLATE NOCASE)%(CASE rt0.c0  WHEN vt1.c1 THEN rt0.c5 END)) FROM t1, vt1, rt0, vt0; -- 3ms;
SELECT COALESCE(DISTINCT 0X2b62d661, ((((vt1.c0)OR('851949917')))AND(rt0.c1)), (((t1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c1))) FROM vt0, vt1, rt0 LIMIT 409728885;SELECT DISTINCT COUNT(((rt0.c0)%(rt0.c3))), (+ (((((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))AND(vt1.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(vt0.c0)))), ((((TRIM(vt0.c0))OR(rt0.c0)))OR(((((t1.c0)AND(rt0.c1)))OR(t1.c56)))) FROM vt0;SELECT ALL LEAD((((rt0.c0)||(rt0.c2)) IN ()), CASE ((rt0.c0) IS FALSE)  WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c5)LIKE(t1.c0)) WHEN ((t1.c0) BETWEEN (rt0.c1) AND (rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (rt0.c5) AND (t1.c0)) WHEN (((x'1d2b'))>((rt0.c2))) THEN (+ (rt0.c4)) END, (((+ (t1.c56)))<((((rt0.c1))>=(('-1999334647')))))) OVER () FROM t1, rt0; -- 0ms;
SELECT ((CAST(rt0.c5 AS BLOB))<<((rt0.c5 IN ()))), ((rt0.c3 COLLATE BINARY) BETWEEN (vt0.c0) AND ((((t1.c0))!=((rt0.c4))))), rt0.c3, GROUP_CONCAT(((rt0.c4) IS FALSE)) OVER ( ORDER BY ((((rt0.c4) NOT NULL)) NOT BETWEEN (((((vt1.c1)OR(t1.c34)))AND(t1.c0))) AND (((rt0.c1)LIKE(vt0.c0))))  NULLS FIRST, (~ ((((t1.c0))!=((rt0.c5)))))), (json_quote(vt1.c1) IN ()) FROM rt0, vt1, vt0 NOT INDEXED, t1; -- 0ms;
SELECT ((((rt0.c0, rt0.c5, t1.c56))<>((t1.c0, vt1.c1, rt0.c0))) IN ((vt1.c0 IN ()))), ((LIKE(rt0.c0, NULL, 'b'))>(vt1.c0)), SUM(COUNT(*)), ((vt0.c0) NOTNULL), (((((rt0.c3))<=((rt0.c5))))>((+ (rt0.c2)))) FROM rt0, vt0 WHERE (((((NULL)OR(x'90d2' COLLATE RTRIM)))AND((((x'5812')) BETWEEN ((x'')) AND ((NULL))))));SELECT ROW_NUMBER() OVER (), CAST('w' COLLATE RTRIM AS TEXT), ((((vt1.c0) ISNULL))/(((t1.c56)>=(rt0.c2)))), ((((rt0.c0)>=(vt0.c0)))IS(0.9542022093231256)), t1.c56 FROM vt0, t1, rt0;SELECT DISTINCT ((((((((((((((((((rt0.c3)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(t1.c34)))OR(t1.c34)))OR(rt0.c4))) NOT NULL) FROM t1, rt0 ORDER BY ((((t1.c34)|(rt0.c2))) BETWEEN (((rt0.c3)/(rt0.c4))) AND (vt1.c0 COLLATE RTRIM))  NULLS FIRST LIMIT -556977796;SELECT DISTINCT (~ (rt0.c3 COLLATE BINARY)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((AVG(rt0.c1))AND(rt0.c1)))OR((- (rt0.c1)))) FROM t1 WHERE (CAST(CASE -403769787  WHEN 868363340 THEN 0.09284799740427196 END AS REAL));SELECT ALL CAST(rt0.c1 AS INTEGER) COLLATE RTRIM FROM t1, vt0, rt0 WHERE ((- (((x'') NOT BETWEEN (1585699287) AND ('1476220553'))))); -- 0ms;
SELECT DISTINCT (((x'40f0')) BETWEEN ((vt0.c0)) AND ((rt0.c5))) COLLATE RTRIM FROM vt1, rt0 LIMIT 2048437173 OFFSET -673231737;SELECT (((((((rt0.c3, rt0.c3, rt0.c0))==(('', rt0.c4, rt0.c3))))OR(((rt0.c5)/(t1.c34)))))OR(((rt0.c2) IS TRUE))) FROM vt1 WHERE ('1058379637') LIMIT -219719091 OFFSET 1517854465;SELECT ALL LIKELIHOOD(CAST(t1.c0 AS REAL), 0.4988824057775978) FROM rt0, t1, vt1, vt0 WHERE (CASE WHEN ((0.790193985446406)=(NULL)) THEN -4.79603507E8 ELSE CAST(-1697460567 AS NUMERIC) END); -- 0ms;
SELECT DISTINCT ((((x'')IS(t1.c0)))%(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), GROUP_CONCAT((((t1.c56)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), ((CHANGES()) NOTNULL) FROM vt0 WHERE (((((NULL)<>(0.7301495512940392))) IS FALSE));SELECT DISTINCT (((((((rt0.c5))==((t1.c34))))AND(COALESCE(NULL, rt0.c0))))OR(((rt0.c3)OR(vt1.c0)))) FROM rt0, vt1;SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((((0.7670951490702702)AND('Jae	Lbt1')))OR('-96276417'))))>=((((x'')+(0x1f75360c)))))) ORDER BY CAST(((vt1.c1)>>(vt0.c0)) AS TEXT) DESC;SELECT DISTINCT ((((rt0.c2) NOT NULL)) NOT NULL), (((t1.c0)) BETWEEN ((((0.025510995218824273) ISNULL))) AND ((((NULL) NOTNULL)))), ((((MIN(t1.c56))OR(((((t1.c34)AND(rt0.c2)))OR(rt0.c3)))))AND(CAST(vt0.c0 AS NUMERIC))) FROM vt1, vt0 ORDER BY (NOT (((t1.c56)/(t1.c56))));SELECT DISTINCT (((vt0.c0))>((t1.c34))) COLLATE BINARY, ((((((((((vt0.c0)LIKE(rt0.c4)))OR((- (t1.c34)))))AND(((vt1.c0) IS TRUE))))AND('')))OR(rt0.c3)), 0.5542444152344529 FROM t1, vt0 WHERE (((('444696936' IN ()))AND((('655582301') ISNULL))));SELECT x'' FROM vt1, t1, vt0, rt0 WHERE ((((1.104590175E9)) BETWEEN ((IFNULL(DISTINCT x'', x'89e9bd95e36e'))) AND ((CAST(0.5431025338726104 AS BLOB))))); -- 0ms;
SELECT ALL (((t1.c0, rt0.c5, t1.c0, '%\r', rt0.c2)) BETWEEN ((t1.c0, rt0.c5 COLLATE BINARY, (- (rt0.c2)), ((rt0.c2)+(vt0.c0)), CASE vt1.c0  WHEN rt0.c3 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c5 WHEN rt0.c2 THEN t1.c56 ELSE vt0.c0 END)) AND ((rt0.c1 COLLATE BINARY, vt0.c0, CASE rt0.c2  WHEN rt0.c5 THEN rt0.c3 END, ((t1.c34)/(t1.c34)), 0.9697770432611565))) FROM rt0, vt1, vt0, t1 WHERE ((((CASE WHEN '}s' THEN 0.29739753186839346 END))<((0.12713325873873493 COLLATE BINARY)))); -- 0ms;
SELECT TOTAL(((rt0.c5) ISNULL)) OVER () FROM vt1, t1 WHERE (CAST((0.8252540201731905 IN ()) AS INTEGER));SELECT ALL NULL, CASE WHEN (((rt0.c2, rt0.c2, rt0.c4))>((rt0.c0, rt0.c4, rt0.c3))) THEN (vt1.c1 IN (rt0.c3)) ELSE (- (t1.c34)) END, (((vt0.c0, rt0.c2, t1.c56)) NOT BETWEEN ((('0.06271828203874386' IN (rt0.c1)), ((rt0.c3)|(rt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (0.6862118526066833)))) AND ((((((((((rt0.c0)AND(rt0.c3)))OR(vt1.c1)))AND(vt1.c0)))OR(rt0.c0)), 0.7103014159249136 COLLATE BINARY, x''))) FROM t1, vt0 LIMIT -638380030 OFFSET 880821658;SELECT ALL CAST(((vt1.c1)&(t1.c56)) AS REAL) FROM vt0, rt0, vt1 WHERE ((((('0.6902742233750125') NOT BETWEEN (0.6404507637452161) AND (0.9542022093231256))) ISNULL)) LIMIT -2066319696 OFFSET 1585699287;SELECT DISTINCT ((0.3384038118046103) ISNULL) COLLATE BINARY COLLATE BINARY FROM rt0, t1, vt1; -- 0ms;
SELECT ((t1.c0)-(rt0.c5)) COLLATE RTRIM FROM vt1 INTERSECT SELECT ALL (CASE vt0.c0  WHEN rt0.c0 THEN t1.c56 WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN x'626e' ELSE rt0.c4 END IN ()) FROM rt0, vt1 WHERE (x'') LIMIT 1298857132;SELECT ((((((((((((rt0.c3)AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c1)))AND(t1.c56)))OR(CAST(rt0.c2 AS TEXT))))AND(0X30750dae)), CAST(CASE '38537132'  WHEN t1.c0 THEN t1.c34 ELSE rt0.c3 END AS REAL), (((t1.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ()) FROM rt0, vt0, t1 WHERE (((IFNULL(DISTINCT x'', NULL))||(((('1852557478'))<=((x'06d414ea')))))) GROUP BY ((((rt0.c2)|(t1.c56))) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c1))) AND (CAST(t1.c56 AS BLOB)));SELECT DISTINCT ((t1.c56 COLLATE RTRIM) BETWEEN (((0.433228495919481) BETWEEN (0.77569918894972) AND (vt1.c1))) AND ((((vt0.c0, t1.c0, rt0.c5))>=((rt0.c4, t1.c34, rt0.c0))))) FROM t1, vt1, rt0, vt0 WHERE ((~ (((NULL)<>(0.5167361265074162))))); -- 0ms;
SELECT ALL CAST(rt0.c1 AS BLOB), (((((rt0.c5)AND(0.6485559610328497)))OR(x'')) IN ()), t1.c0 FROM t1, rt0, vt1, vt0; -- 0ms;
SELECT ALL COUNT(*) FILTER(WHERE ((x'' COLLATE RTRIM) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c3) IS FALSE)))) OVER (), (- ((+ (t1.c0)))), CASE WHEN (~ (vt0.c0)) THEN CASE rt0.c5  WHEN rt0.c0 THEN vt1.c1 END END, COUNT(*) OVER (), (NOT (0.18289208004853452)) FROM vt0, t1, rt0, vt1 WHERE (CASE (- (NULL))  WHEN 0.05104528461646052 COLLATE NOCASE THEN ((0.27287744308578665) BETWEEN ('-1744998157') AND (x'')) ELSE (('')+(NULL)) END) GROUP BY (((rt0.c3)) NOT BETWEEN (((- (vt1.c1)))) AND ((((rt0.c3) IS FALSE)))), CAST((+ (vt0.c0)) AS TEXT), ((((((((((0.8560023381048996)GLOB(rt0.c1)))OR(CASE WHEN rt0.c4 THEN rt0.c2 ELSE t1.c0 END)))OR(rt0.c2)))AND(((t1.c0)+(vt1.c0)))))OR((((('-1251517241')AND(rt0.c4)))OR(t1.c34)))), ((((vt1.c0) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c5))) AND (LIKE(rt0.c5, t1.c56))), LIKELY(DISTINCT rt0.c0) COLLATE BINARY HAVING COUNT(t1.c56); -- 0ms;
SELECT DISTINCT json_array(t1.c0, t1.c34) COLLATE BINARY FROM rt0 WHERE ((('851949917')-('se(rL')));SELECT UPPER(((t1.c56)>=(rt0.c1))), CAST(NULL AS NUMERIC), (((~ (rt0.c4))) NOT BETWEEN (0.8048709862573499) AND ((((vt1.c0, rt0.c3, t1.c34))<((t1.c56, t1.c0, vt1.c0))))) FROM rt0 ORDER BY ((((rt0.c3)!=(t1.c0)))IS NOT(TRIM(t1.c56, rt0.c0)));SELECT ALL ((((((rt0.c3)||(vt1.c0)))AND(INSTR(rt0.c2, t1.c56))))AND(t1.c0)) FROM t1, vt1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((t1.c0))<>((vt0.c0))) IN ()) FROM vt0, rt0, vt1, t1 WHERE ((('1104590175')IS(((-1.251517241E9) NOT BETWEEN (x'') AND (x'395a'))))); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c2)GLOB(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (t1.c34)) WHEN ((t1.c0) NOTNULL) THEN (vt1.c0 IN ()) WHEN GLOB(t1.c56, rt0.c0) THEN ((t1.c0) NOTNULL) ELSE GROUP_CONCAT(rt0.c5) END FROM rt0, t1, vt0, vt1 WHERE (((((x'') NOT BETWEEN (4.44696936E8) AND (''))) NOT BETWEEN (('1' IN ())) AND (((((0.9612163514221245)OR(NULL)))OR(0X52ebfdb9))))) ORDER BY CASE ((rt0.c5)<>(rt0.c4))  WHEN LIKELY(rt0.c4) THEN ((((t1.c0)OR(t1.c0)))AND(vt1.c1)) END, HEX((- (rt0.c5))) ASC  NULLS LAST; -- 0ms;
SELECT MIN(0.5330235364473043), (((t1.c56)) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND (((((t1.c56)) NOT BETWEEN ((vt1.c1)) AND ((0.20726948161795022)))))), CUME_DIST() OVER ( ORDER BY NULL DESC  NULLS LAST) FROM vt1, vt0;SELECT DISTINCT CASE (vt0.c0 IN ())  WHEN (+ (NULL)) THEN ((vt1.c1)==(rt0.c0)) END, CAST(((vt1.c0) IS FALSE) AS NUMERIC), CAST(((rt0.c5) NOT NULL) AS BLOB) FROM rt0, t1;SELECT AVG(((((vt1.c1)AND(rt0.c5)))OR(t1.c56))) FILTER(WHERE UPPER(LAST_INSERT_ROWID())) OVER () FROM vt0, rt0, t1 WHERE (0.3880031239025885);SELECT COUNT(CASE NULL  WHEN NULL THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE) OVER (), '1498488176', (- (((rt0.c0) NOT BETWEEN (rt0.c5) AND (t1.c34)))) FROM vt1;SELECT ALL CASE WHEN (t1.c34 IN ()) THEN x'a4f6' END, CASE WHEN ((t1.c0) IS FALSE) THEN QUOTE(t1.c34) ELSE CAST(t1.c56 AS TEXT) END, COALESCE(((rt0.c3)IS(vt1.c0)), (rt0.c1 IN ())) FROM vt0, rt0, t1, vt1 GROUP BY ((rt0.c4) IS FALSE) LIMIT 1046677139 OFFSET -1144410881; -- 0ms;
SELECT x'6471', (+ (vt1.c1 COLLATE BINARY)), vt0.c0 FROM vt0, vt1, t1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c5)|(rt0.c0)) COLLATE NOCASE COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, rt0, t1, vt1; -- 0ms;
SELECT ALL (((rt0.c3, vt0.c0, rt0.c1)) BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c1 WHEN t1.c56 THEN rt0.c4 WHEN t1.c0 THEN rt0.c1 ELSE vt1.c1 END, (t1.c56 IN (rt0.c0)), (rt0.c3 IN ()))) AND (((((vt1.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c1))), (t1.c56 IN (x'', rt0.c5)), ((NULL)|(rt0.c0))))) FROM vt1 WHERE (CASE COALESCE(DISTINCT '-1758778901', 0.876365306583107)  WHEN ((NULL)>>(x'')) THEN (x'26d0662b8230' IN ()) ELSE (('-1382609097') BETWEEN (1601027977) AND (0xffffffffc939bff2)) END);SELECT DISTINCT (~ (SUM(rt0.c5))), ((((rt0.c4 IN ())))<=((((rt0.c5)AND('(Q⊆\ns'))))), ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (((vt1.c0)LIKE(rt0.c0)))), UNLIKELY(CASE rt0.c3  WHEN vt0.c0 THEN vt0.c0 END), ((((((rt0.c3)AND(t1.c56)))AND(vt1.c0)))IS NOT(AVG(rt0.c1))) FROM rt0, vt1 GROUP BY '䩏>Pj' HAVING TYPEOF(DISTINCT CASE WHEN t1.c0 THEN rt0.c5 ELSE NULL END);SELECT (((((rt0.c3)AND(rt0.c4)))OR(vt1.c0)) IN (SUM(rt0.c0))), COUNT('-795795624') OVER (), vt1.c1 FROM rt0, vt1, vt0, t1 WHERE ((((x'', 0.26543082450515887, '-684070370', NULL, 1.298857132E9)) BETWEEN ((CASE ''  WHEN x'' THEN '' ELSE 0.7439463950431243 END, '', 0xffffffff8885fb3c, (('') BETWEEN (x'') AND ('1747925763')), ('hTbw~ꋛr0d' IN ()))) AND (((0.3730411205942026 IN ()), ABS(''), ((0.9527767730121184)GLOB(x'')), ((x'')+(x'')), ((x'') BETWEEN (NULL) AND (NULL)))))) GROUP BY ((((((rt0.c0)>=(vt1.c1)))AND((- (vt0.c0)))))AND(CAST(rt0.c5 AS REAL))); -- 0ms;
SELECT DISTINCT CASE t1.c56  WHEN rt0.c2 THEN x'62d0' END COLLATE NOCASE, (+ ((((NULL, rt0.c0, t1.c56))>((vt0.c0, t1.c0, rt0.c1))))), TOTAL(((((vt0.c0)AND(vt1.c1)))OR(rt0.c1))) OVER () FROM t1, rt0, vt1, vt0 WHERE (CASE (('0.29688174240873644')IS(x''))  WHEN (((NULL)) NOT BETWEEN ((NULL)) AND ((0.5077548083694945))) THEN (- (0.38901731228965775)) WHEN ((x'') NOT NULL) THEN NULL WHEN (((0X3ba4e248))<=((0.26859124134935386))) THEN '' COLLATE RTRIM ELSE (('-1886024751') BETWEEN (x'') AND ('ZT')) END); -- 0ms;
SELECT ALL ((((((((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(rt0.c3)))IS NOT(((((vt1.c0)OR(rt0.c5)))OR(rt0.c0)))) FROM t1, vt0, vt1, rt0 WHERE (INSTR(PRINTF(x''), (NOT (0x0)))); -- 0ms;
SELECT DISTINCT (((vt1.c1)) BETWEEN ((CAST(t1.c0 AS TEXT))) AND ((rt0.c4 COLLATE NOCASE))) FROM t1, rt0, vt0, vt1; -- 0ms;
SELECT PERCENT_RANK() OVER ( PARTITION BY t1.c34, ((CASE WHEN vt0.c0 THEN t1.c56 END)IS(CAST(vt1.c0 AS NUMERIC)))), CUME_DIST() OVER (), GROUP_CONCAT(((rt0.c2)LIKE(rt0.c2))) OVER ( ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c5))))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST) FROM rt0, vt0, vt1 WHERE (((('Xf' IN ()))<=(((x'')OR(2.048437173E9)))));SELECT (+ (((t1.c34)+(t1.c0)))) FROM rt0, vt0, vt1, t1 WHERE ((((x'')) NOT BETWEEN ((((('cᭂ)+3(*)-ꮵ'))<=((0.7773666856248487))))) AND (((('')IS NOT('1200026755')))))); -- 0ms;
SELECT MAX(CAST(rt0.c5 AS NUMERIC)) FROM vt0, vt1 WHERE ((((('') NOTNULL)) BETWEEN (((2.140405563E9) IS FALSE)) AND ((0.9440633119801108 IN ())))) LIMIT -1021489951 OFFSET 27255713;SELECT DISTINCT rt0.c0 FROM t1 WHERE (NULLIF(CASE WHEN '' THEN NULL END, CASE '-0.0'  WHEN -31851645 THEN '70927845' END)) LIMIT 1905314983 OFFSET -1273501068;SELECT DISTINCT (~ (0.3507870620986886)), (((NULL)&(t1.c0)) IN ()), (((((rt0.c3))<=((rt0.c2)))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c5 THEN x'c03410b2' WHEN rt0.c2 THEN t1.c34 ELSE vt1.c0 END) AND ((rt0.c1 IN (t1.c56)))) FROM t1, rt0 WHERE (((((((NULL, x'', x'')) BETWEEN (('Be''LD', '1167936802', 0X3e630693)) AND (('-1886024751', '(Q⊆\ns', 0Xfffffffffd8bd7d0)))))!=(((((('')AND('qAv%ḁPNqz')))OR(0.31142405478411805)))))) GROUP BY ((- (t1.c56)) IN ());SELECT DISTINCT ('0.3115634251762964' IN ()) FROM vt1, rt0, t1 LIMIT 825642333 OFFSET 1519619720; -- 0ms;
SELECT NTH_VALUE(CAST((t1.c0 IN (rt0.c1, rt0.c3)) AS INTEGER), NULL) OVER () FROM t1, rt0; -- 0ms;
SELECT CAST(NULL AS REAL) FROM vt1, vt0 NOT INDEXED, t1, rt0 WHERE (((+ (NULL)) IN (-1545965680 COLLATE BINARY))) LIMIT -1635115519; -- 1ms;
SELECT DISTINCT SUM((- (t1.c34))) OVER () FROM rt0, t1, vt0, vt1 WHERE ((((((0.22194783669223916) BETWEEN (0xffffffffcd45ad00) AND (0.48946319546454453))))<=((((((0.5077548083694945)OR(0.18323011911454645)))OR(NULL)))))) ORDER BY ((((rt0.c2, vt1.c1, rt0.c3)) BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c0, rt0.c2, rt0.c5))) IN (CAST(rt0.c3 AS INTEGER)))  NULLS LAST, (((~ (t1.c34)))<>(CAST(rt0.c2 AS NUMERIC))); -- 3ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN t1.c56 END) IS FALSE), '-1697460567', CASE WHEN ((t1.c0) ISNULL) THEN (NOT (0.9946691307978119)) WHEN ((t1.c34) ISNULL) THEN ((rt0.c3) IS FALSE) WHEN ((rt0.c2)-(rt0.c2)) THEN CASE WHEN t1.c56 THEN rt0.c1 ELSE rt0.c4 END END FROM vt0 LIMIT -1381481500;SELECT DISTINCT CASE WHEN json_valid(rt0.c4) THEN ((((t1.c56)OR(t1.c34)))OR(t1.c56)) END, MAX(TYPEOF(vt1.c1)) COLLATE NOCASE, (((+ (rt0.c3)))*(CASE rt0.c4  WHEN t1.c0 THEN rt0.c2 ELSE t1.c34 END)) FROM rt0 WHERE ((((((x'')AND(0.014322044118291188)))AND(NULL)) IN ((('')%('w}'))))) ORDER BY ((((((((rt0.c5)OR(vt1.c0)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)) COLLATE NOCASE COLLATE RTRIM  NULLS LAST, ((((vt0.c0) NOT NULL)) IS TRUE)  NULLS LAST;SELECT DISTINCT (CAST(vt1.c0 AS TEXT) IN ()) FROM t1, vt0, rt0, vt1; -- 0ms;
SELECT x'', CAST(t1.c56 COLLATE BINARY AS REAL), (((((t1.c34)) BETWEEN ((t1.c34)) AND ((rt0.c3))))&(((rt0.c1)IS NOT(0.6407598008867699)))) FROM vt1, vt0, rt0, t1; -- 0ms;
SELECT (((((NOT (0.1488210357907963)))OR(((t1.c56) BETWEEN (NULL) AND (rt0.c1)))))AND((NOT (rt0.c3)))), vt1.c0, ((((CAST(rt0.c4 AS BLOB))OR((rt0.c2 IN (vt1.c1)))))AND(((rt0.c4) NOT BETWEEN (t1.c0) AND (vt1.c0)))) FROM vt1 WHERE (CASE IFNULL('.D῕>^', NULL)  WHEN ((2048437173) NOT NULL) THEN ((('-1148236157', NULL, ')칚'))>(('U0L>E', x'', NULL))) WHEN json_extract(NULL, x'') THEN ((NULL)<>('801220048')) WHEN (('-795795624') IS TRUE) THEN (((NULL))<=(('-725208785'))) END) LIMIT -526301177;SELECT vt1.c0 FROM rt0, vt1 WHERE ((((x'') NOT NULL) IN (IFNULL(0.270661343529214, 0.5286855844834135), (('w뛝 涷T䪴Fk')|(NULL))))); -- 0ms;
SELECT FIRST_VALUE(((CAST(0.6841084691670917 AS REAL)) IS TRUE)) OVER ( ORDER BY (((((rt0.c4)) BETWEEN ((t1.c34)) AND ((t1.c0))))<=((rt0.c1 IN ()))) DESC, ((((NULL) IS TRUE))LIKE(((rt0.c5) BETWEEN (t1.c34) AND (rt0.c5)))), NULL  NULLS FIRST RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt0, vt1, vt0, t1; -- 0ms;
SELECT ALL CAST((rt0.c5 IN ()) AS REAL), ((LIKELIHOOD(DISTINCT vt1.c0, 0.03476135086457355)) BETWEEN ((rt0.c3 IN (rt0.c5))) AND ((NOT (rt0.c5)))), (((vt0.c0)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((((vt1.c1) NOTNULL)))) FROM rt0, vt1;SELECT ((GROUP_CONCAT(vt0.c0)) BETWEEN ('CGIA*K') AND (((rt0.c5) BETWEEN (vt0.c0) AND (x'f837')))) FROM vt0, rt0, t1, vt1 WHERE ((ABS(0.6636351714261187) IN (0Xffffffffb5c0377f))) LIMIT 477830710; -- 1ms;
SELECT DISTINCT CAST(json(t1.c34) AS INTEGER) FROM vt1, t1, rt0, vt0 WHERE (((((json_array('1585699287', 0.34162028025260327))OR(((0.5073248207058612) IS FALSE))))OR(((x'') IS FALSE)))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)>>(vt0.c0)) AS TEXT), CASE ((rt0.c5) IS FALSE)  WHEN rt0.c4 THEN (((rt0.c4)) BETWEEN ((NULL)) AND ((vt1.c1))) ELSE ((rt0.c0) IS TRUE) END, ((NOT (vt1.c0)) IN ()) FROM vt0, vt1;SELECT DISTINCT x'' FROM vt0, t1 WHERE (CAST(x'' COLLATE NOCASE AS REAL)); -- 0ms;
SELECT ((((((-1.021489951E9) NOT BETWEEN (rt0.c0) AND (rt0.c4)))OR((- (rt0.c1)))))AND(json_array_length(vt0.c0))) FROM rt0, vt1, vt0 WHERE ((((((-1.7976931348623157E308) NOTNULL)))<>(('ᎭM' COLLATE BINARY)))); -- 0ms;
SELECT ALL UPPER(DISTINCT COALESCE(t1.c56, rt0.c5)) FROM vt1, vt0 WHERE (((((((((((((((((x'8b2a010a')OR(NULL)))OR(0.876365306583107)))OR(NULL)))OR(-1378952422)))OR((NULL IN ()))))AND((('-1015749224')LIKE(0.9292201518832547)))))OR(((0.7991600119556885) NOT BETWEEN (x'') AND (x'')))))AND(RTRIM(0.508181292325214))));SELECT ALL rtreenode((((t1.c34, 7.0927845E7, t1.c56))<((rt0.c3, t1.c0, t1.c0))), CASE rt0.c0  WHEN vt1.c0 THEN t1.c56 ELSE rt0.c2 END) FROM vt0 WHERE (CAST(x'' AS NUMERIC) COLLATE BINARY);SELECT DISTINCT '-705784222', (CAST(t1.c34 AS TEXT) IN ()), ((CASE t1.c34  WHEN t1.c0 THEN vt1.c0 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c2 THEN t1.c56 ELSE rt0.c3 END)<=(COALESCE(DISTINCT vt1.c1, rt0.c5))) FROM vt0 WHERE ((+ (x'' COLLATE RTRIM))) GROUP BY CAST(((((t1.c0)AND(0.5286855844834135)))AND(rt0.c1)) AS INTEGER);SELECT ALL CASE (vt1.c0 IN ())  WHEN ((rt0.c5) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN CASE rt0.c0  WHEN t1.c34 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN rt0.c4 THEN t1.c0 WHEN vt1.c0 THEN t1.c34 WHEN t1.c56 THEN t1.c56 END END, rt0.c3, ((t1.c0)!=(rt0.c4)) COLLATE RTRIM FROM rt0, vt0;SELECT DISTINCT (+ (vt0.c0 COLLATE NOCASE)) FROM rt0, vt0, t1 WHERE ((((((0Xffffffff92fa531d)OR(0x57534998)))AND(0.976821982663665)) IN ())) ORDER BY (((NOT (rt0.c1))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c1)))); -- 0ms;
SELECT ALL (((vt0.c0, rt0.c4, rt0.c4)) NOT BETWEEN ((((((((((rt0.c3)OR(rt0.c2)))OR(t1.c56)))OR(t1.c0)))AND(rt0.c2)), COUNT(rt0.c1), LIKELY(rt0.c0))) AND ((UNLIKELY(vt1.c1), ((vt1.c0) BETWEEN ('B唔]881') AND (t1.c0)), (NOT (rt0.c1))))) FROM vt1, t1, vt0 INNER JOIN rt0 ON ((((rt0.c0) ISNULL)) BETWEEN (((rt0.c2)IS(0.08086812594871584))) AND ((('-852384733') BETWEEN (rt0.c3) AND (vt1.c0)))) WHERE ((- (x'')) COLLATE RTRIM); -- 0ms;
SELECT ((((((x'')|(rt0.c4)))OR((rt0.c0 IN ()))))AND(0.06271828203874386)), ((((((((rt0.c2)OR(NULL)))OR(rt0.c4)))OR(((t1.c34) IS TRUE))))OR(CAST(rt0.c4 AS TEXT))), (((t1.c34)) NOT BETWEEN ((MIN(t1.c56))) AND ((t1.c34 COLLATE NOCASE))), ((((((rt0.c4)OR(rt0.c2)))AND(t1.c56))) IS TRUE), (((vt0.c0 IN ())) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c0)))) AND ((((((((('^')OR(rt0.c1)))AND(vt0.c0)))OR(t1.c34)))OR(NULL)))) FROM vt0 NOT INDEXED, rt0, t1, vt1 WHERE ('-1205247318'); -- 0ms;
SELECT DISTINCT (((t1.c56, '-222720711', 1.585699287E9)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM, vt1.c1, ((t1.c56) IS FALSE))) AND ((((t1.c56)OR(rt0.c3)), '%阭V', ((rt0.c0)|(rt0.c2))))) FROM vt0, rt0 WHERE ((((('-1815757813') NOTNULL)) IS TRUE));SELECT rt0.c0 COLLATE NOCASE, ((CAST(vt1.c1 AS REAL)) NOT BETWEEN ((((vt1.c1, vt0.c0, NULL))<=((t1.c34, vt1.c1, rt0.c2)))) AND (((t1.c0) BETWEEN (vt1.c0) AND (x'')))), 0.052147856407883775 FROM vt0;SELECT ALL (((rt0.c3 IN ()))||(rt0.c2 COLLATE BINARY)) FROM vt0, vt1, rt0 WHERE (((((x'9a6b') IS TRUE))/((+ (x'dde811c6'))))) LIMIT -261040673; -- 0ms;
SELECT DISTINCT ((CASE t1.c34  WHEN t1.c34 THEN 'dk7D' END)==((((rt0.c5))>((t1.c0))))), NULL, ((((((((((((CAST(rt0.c2 AS BLOB))OR(CAST(rt0.c5 AS NUMERIC))))OR(((vt1.c1) NOTNULL))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c34)))))OR(vt0.c0 COLLATE NOCASE)))OR((((vt1.c1)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c2))))))OR(SUM(t1.c56))) FROM t1, vt1, rt0, vt0 WHERE (NULLIF(-96276417 COLLATE BINARY, ((((0.9211608747854253)AND('g#9B')))OR(x'')))); -- 0ms;
SELECT DISTINCT IFNULL(COALESCE(rt0.c1, rt0.c1, vt1.c0, vt1.c1), rt0.c0) FROM rt0;SELECT DISTINCT (((rt0.c3)GLOB(NULL)) IN ()), ((((CAST(rt0.c1 AS TEXT))AND(((t1.c56)GLOB(x'')))))OR(((rt0.c5)IS NOT(rt0.c3)))), (NOT (((vt1.c0) IS TRUE))), ((((((((rt0.c4)OR(((rt0.c5)<('-48216229')))))AND(x'')))OR(rt0.c2)))OR(CASE -8.42914432E8  WHEN rt0.c3 THEN rt0.c4 WHEN t1.c56 THEN rt0.c4 WHEN vt1.c1 THEN rt0.c5 END)), (((~ (t1.c56)))AND(CAST(rt0.c1 AS TEXT))) FROM t1 WHERE (((((0Xffffffff9fd7476c)OR(x'3601'))) NOT BETWEEN ((- (NULL))) AND ((0.7184284521644209 IN ()))));SELECT CASE WHEN SUM(rt0.c2) THEN (~ (t1.c34)) ELSE ((rt0.c4)IS NOT(rt0.c3)) END FROM vt0 WHERE ((((((((((((('m)#<w')AND(x'')))OR(NULL)))OR(CAST(NULL AS REAL))))AND(0Xffffffffdf6d9c07)))OR(CASE WHEN 0.12007235654183979 THEN x'7ecc' WHEN '-1105966560' THEN x'' WHEN x'd0f7c91a' THEN 8.6836334E8 ELSE x'8af7' END)))AND(((NULL)>('-2066319696')))));SELECT DISTINCT PERCENT_RANK() OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM vt0, vt1, t1 WHERE (CASE 0.8392260631562425  WHEN 0.18323011911454645 THEN '-781124688' WHEN NULL THEN NULL WHEN x'' THEN NULL END COLLATE BINARY) GROUP BY x'', (+ (0.7376757924739807)), ((((0.20726948161795022) IS TRUE))=((vt1.c1 IN ()))) ORDER BY CAST(x'4fe2' AS REAL) DESC  NULLS LAST, '1301840173' DESC, CASE ((385348007) NOT BETWEEN (rt0.c5) AND (rt0.c3))  WHEN ((rt0.c3)<(vt0.c0)) THEN vt1.c0 COLLATE BINARY ELSE CASE WHEN rt0.c4 THEN t1.c56 END END ASC  NULLS LAST LIMIT -2110991187 OFFSET 526531666;SELECT DISTINCT (((((rt0.c4 IN ()))AND((vt1.c0 IN (vt1.c0, 0.8284391129816348)))))AND(rt0.c4 COLLATE NOCASE)) FROM vt1, vt0 WHERE (((((((((((x'')<<('N(')))AND((('')LIKE('-673231737')))))OR(x'' COLLATE NOCASE)))AND((((('-74196762')AND(0.33228418295733053)))AND('')))))OR(((-1179875432)<('258677570'))))); -- 0ms;
SELECT ALL (((vt1.c1)||(t1.c34)) IN (vt1.c1, IFNULL(rt0.c0, rt0.c1))), ((((((vt1.c1) NOTNULL))OR((((vt0.c0)) BETWEEN ((t1.c34)) AND (('-1886024751'))))))AND(((rt0.c2) NOT NULL))), rt0.c3 FROM t1 WHERE (((((NULL)/(0.8384492927944528)))&((~ (x'')))));SELECT ALL ((rt0.c3 COLLATE NOCASE)|(LIKELIHOOD(rt0.c4, 0.4231120866081858))) FROM vt1, t1, vt0;SELECT CASE ((((((((rt0.c2)AND(x'')))OR(t1.c34)))OR(t1.c56)))AND(vt1.c1))  WHEN rt0.c0 THEN ((((((((0.35842692141996935)AND(vt0.c0)))OR(rt0.c5)))OR(rt0.c3)))AND(rt0.c3)) END, NULL, vt0.c0 FROM rt0, t1, vt1;SELECT (~ (t1.c34)) COLLATE BINARY FROM rt0, vt1;SELECT ALL SUM((- (rt0.c3))) OVER () FROM t1, vt0;SELECT ALL ((t1.c34)OR(rt0.c0)) COLLATE NOCASE FROM t1 WHERE (((((TYPEOF(NULL))AND(((NULL) BETWEEN (0.8399517594189436) AND (0.9612163514221245)))))AND(((x'')/(NULL))))) LIMIT -243505961 OFFSET -1765124410;SELECT (((((t1.c56, t1.c0, rt0.c3))<=((rt0.c2, t1.c56, vt0.c0)))) BETWEEN (((((((((rt0.c5)OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c0)))OR(t1.c0))) AND ((- (vt1.c0)))), ((CAST(rt0.c1 AS BLOB))<=((((t1.c0, rt0.c1, t1.c56))>=((-2.43505961E8, rt0.c0, rt0.c2))))), ((rt0.c4 IN ()) IN ()) FROM rt0, vt0, t1, vt1; -- 1ms;
SELECT ALL ((t1.c0) NOT BETWEEN (((vt1.c1)<(vt0.c0))) AND (CAST(rt0.c2 AS BLOB))), GROUP_CONCAT(UNLIKELY(DISTINCT rt0.c2)), (((+ (rt0.c1))) BETWEEN (((rt0.c0) NOTNULL)) AND (((vt1.c1)/(rt0.c5)))) FROM vt0, rt0, vt1 WHERE (((((((((((x'')AND(0X3b9e5cf7)))AND('-681762170')))AND(0.5183168552601792)))OR(0.5183168552601792)))<=(((0.532028078180824)<(NULL)))));SELECT AVG(CAST(t1.c56 AS REAL)) FROM rt0, vt0 WHERE (CASE WHEN CAST(x'' AS REAL) THEN ('-942300526' IN (0.4835353318370412, x'')) END);SELECT DISTINCT (((((rt0.c3)OR(rt0.c2)))AND(t1.c34)) IN (MIN(rt0.c4))) FROM rt0, t1 NOT INDEXED, vt1; -- 0ms;
SELECT DISTINCT json_array_length(rt0.c4) FROM vt1, vt0 WHERE (((((((0.2177189136797395)+(0.9701060024715239)))OR(((((((((x'')OR(NULL)))AND(0x34c2d2f5)))OR(1200026755)))OR('')))))AND(x'7ce4' COLLATE RTRIM))) ORDER BY (- ((((rt0.c0, vt1.c1, vt1.c1, vt0.c0, rt0.c2)) NOT BETWEEN ((t1.c56, vt1.c0, t1.c34, vt1.c1, rt0.c1)) AND ((vt1.c0, t1.c0, vt1.c0, t1.c56, vt0.c0)))))  NULLS FIRST, CASE (~ (x''))  WHEN (~ (rt0.c4)) THEN ((7.0927845E7)&(rt0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c3) ISNULL) WHEN ((rt0.c2)%(t1.c34)) THEN vt0.c0 END  NULLS LAST;SELECT CAST(((((rt0.c4)OR(rt0.c3)))OR(vt1.c0)) AS INTEGER), x'1d0c', (((json_extract(rt0.c2, vt1.c1)))>(('C2gZE'))) FROM t1, rt0, vt0 WHERE ((NOT (CAST('49329573' AS NUMERIC))));SELECT DISTINCT 1.058379637E9 FROM t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((t1.c34)OR(vt1.c1)))OR(rt0.c4))), ((((((((CASE WHEN t1.c34 THEN t1.c34 END)OR(CASE vt1.c1  WHEN rt0.c5 THEN t1.c0 ELSE rt0.c5 END)))AND(((t1.c34)GLOB(t1.c34)))))OR(((x'') BETWEEN (rt0.c3) AND (rt0.c0)))))AND(TRIM(rt0.c1))), CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC) FROM vt0;SELECT DISTINCT LAST_VALUE(rt0.c2) OVER ( ORDER BY (((t1.c56)) NOT BETWEEN (('-393245144')) AND ((((rt0.c3)&(rt0.c3))))) DESC, IFNULL(rt0.c1, LOWER(rt0.c2)) ASC RANGE CASE rt0.c0  WHEN CASE t1.c34  WHEN rt0.c0 THEN rt0.c5 ELSE t1.c0 END THEN 'ZT' ELSE LIKELY(DISTINCT vt1.c0) END PRECEDING EXCLUDE GROUP) FROM vt0, rt0, t1, vt1 WHERE ((((('727897697') NOT BETWEEN (x'') AND (x''))) NOT BETWEEN (load_extension(-219165094, '-403769787')) AND ((('1476220553') ISNULL)))) LIMIT 2104074654 OFFSET 717416432;SELECT (- (vt1.c1)) FROM vt0, t1, vt1 WHERE ((((('334405650') BETWEEN ('') AND (''))) BETWEEN (NULLIF(NULL, 0.8810738504819907)) AND (((0.3900495045154543)-(x'7f15'))))); -- 0ms;
SELECT ((0.941959680637539 COLLATE NOCASE)/(((rt0.c3)*('0.0')))) FROM vt1, rt0, vt0 GROUP BY CAST(CAST(rt0.c3 AS REAL) AS BLOB) HAVING CAST(x'' AS REAL); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) IS TRUE), ((((rt0.c4)>=(t1.c0)))&(CASE WHEN t1.c34 THEN rt0.c5 ELSE t1.c56 END)), LOWER(DISTINCT x'dc91') FROM vt0, rt0 WHERE (x'');SELECT DISTINCT LAG(CAST((rt0.c2 IN (rt0.c4)) AS INTEGER), COALESCE(DISTINCT ((rt0.c1)*(rt0.c2)), CAST(rt0.c1 AS REAL), CASE rt0.c4  WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c4 END, LIKE(NULL, rt0.c3)), ((CAST(rt0.c1 AS BLOB)) ISNULL)) OVER ( ORDER BY (((rt0.c3)) BETWEEN ((((t1.c0) BETWEEN (t1.c34) AND (vt1.c1)))) AND (((rt0.c4 IN ()))))), ROW_NUMBER() OVER ( GROUPS BETWEEN  CURRENT ROW AND (((CASE WHEN rt0.c5 THEN rt0.c5 ELSE vt1.c0 END))<=((GLOB(rt0.c1, rt0.c0)))) FOLLOWING EXCLUDE TIES), MAX(AVG(rt0.c3)) FROM rt0 WHERE ((((- ('1852557478'))) NOT NULL)) ORDER BY LIKE(rt0.c3, ((t1.c56) NOT BETWEEN (NULL) AND (rt0.c2)), '0')  NULLS FIRST;SELECT DISTINCT ((((t1.c34)||(vt0.c0)))|(CASE WHEN t1.c34 THEN vt1.c0 END)) FROM vt1 WHERE (((NULL) BETWEEN ((((0.9322912993080862)) NOT BETWEEN ((NULL)) AND ((x'')))) AND (((('s6u1UqHs')) BETWEEN ((x'')) AND (('{}'))))));SELECT CAST(COUNT(rt0.c5) AS BLOB) FROM t1, vt0, rt0 WHERE (((PRINTF(0Xffffffffe8994550, 1438781782, x'', x'c09b', NULL)) BETWEEN (('2140405563' IN ())) AND (((NULL)/(0.2581558227058225))))); -- 0ms;
SELECT DISTINCT ((((((((CASE vt1.c1  WHEN rt0.c4 THEN t1.c56 WHEN vt1.c1 THEN t1.c0 WHEN vt1.c1 THEN rt0.c0 END)OR(((t1.c56) NOT BETWEEN (vt1.c1) AND (t1.c56)))))OR(rt0.c3)))OR(COUNT(rt0.c0))))AND(0.2625859015850023)), (t1.c0 IN (CAST(rt0.c4 AS NUMERIC))), json(t1.c56) COLLATE BINARY FROM t1, vt1, rt0, vt0 WHERE ((+ (CAST(NULL AS NUMERIC)))) ORDER BY ((rt0.c4)AND(rt0.c2)) COLLATE BINARY DESC  NULLS LAST, (((((+ (vt1.c0)))OR(((rt0.c0)%(vt1.c1)))))AND((NOT (t1.c0)))) DESC, x'' ASC  NULLS LAST; -- 0ms;
SELECT (~ (NULL)), NULL, TOTAL(((rt0.c3) NOT BETWEEN (rt0.c5) AND (NULL))) OVER ( ORDER BY ((((rt0.c5)>(0x73cd6234)))<>(vt1.c1 COLLATE NOCASE))  NULLS FIRST, vt0.c0 ASC  NULLS LAST) FROM rt0, t1, vt0, vt1; -- 0ms;
SELECT ALL (rt0.c0 IN ()) FROM vt0, vt1 WHERE (((0.2475346955781289) NOT NULL) COLLATE NOCASE); -- 0ms;
SELECT ALL CASE WHEN vt1.c1 THEN (t1.c34 IN ()) ELSE ((((((((rt0.c0)AND(NULL)))AND(x'')))OR(vt1.c0)))OR(rt0.c2)) END FROM rt0, vt1 WHERE ((NOT ((+ (x''))))); -- 0ms;
SELECT ((vt1.c0 COLLATE NOCASE) NOT NULL) FROM vt1, t1, rt0 WHERE (((((NULL)+(NULL)))-(((x'') NOTNULL)))) ORDER BY CASE WHEN (((vt1.c0, rt0.c2, vt0.c0, '', rt0.c3))>=((rt0.c2, rt0.c5, rt0.c2, t1.c0, rt0.c5))) THEN ((t1.c34) NOT NULL) ELSE ((((((((((((((((t1.c56)AND(vt0.c0)))AND(vt1.c1)))OR(rt0.c3)))AND(rt0.c4)))OR(t1.c34)))OR(rt0.c3)))OR(t1.c34)))AND(t1.c34)) END DESC;SELECT ALL ((CAST(rt0.c4 AS BLOB))|(CASE rt0.c3  WHEN vt1.c1 THEN rt0.c2 ELSE t1.c56 END)), RANK() OVER (), '-403769787' FROM vt1, rt0, vt0 WHERE (NULL) LIMIT -1384835780;SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)*(((vt1.c0)||(0.8228957089651392)))) FROM vt0 WHERE (x'');SELECT ALL ((COUNT(vt0.c0)) BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN 0Xffffffffa2926db7 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t1.c34 ELSE vt0.c0 END) AND (x'')) FROM t1, vt0;SELECT ALL CASE WHEN (rt0.c3 IN ()) THEN t1.c56 WHEN ((rt0.c2)AND(t1.c34)) THEN CAST(rt0.c0 AS INTEGER) WHEN TRIM(-6.8176217E8, 0.35028894397579247) THEN ((((t1.c0)OR(vt1.c0)))AND(rt0.c3)) ELSE GROUP_CONCAT(rt0.c2) END, ((CAST(rt0.c1 AS INTEGER)) BETWEEN (TOTAL(0xffffffffa682db42)) AND ((rt0.c1 IN ()))), (((~ (vt1.c1)))*(INSTR(t1.c34, 0.8301982427216748))) FROM vt1, t1;SELECT ALL ((t1.c34 COLLATE NOCASE)GLOB(((rt0.c3) NOT NULL))), ((0x30750dae)<(0.689030084243182)), (((((t1.c0))=((rt0.c3)))) NOT NULL) FROM rt0, t1; -- 0ms;
SELECT DISTINCT ((((CASE WHEN vt0.c0 THEN t1.c0 END)AND((+ (rt0.c4)))))OR(t1.c0)) FROM t1, vt1, rt0 INNER JOIN vt0 ON CAST(NULL AS REAL) WHERE (CASE ((NULL)*('?LY6V'))  WHEN ((((NULL)AND('毙-')))OR(1.275916007E9)) THEN ((x'')>('-1148236157')) ELSE UPPER('-2112063296') END) LIMIT 1104590175; -- 0ms;
SELECT ALL (-793376036 IN (((((t1.c0)OR(rt0.c1)))AND(t1.c34)))) FROM rt0 CROSS JOIN t1 ON (((('-1584039597') ISNULL))=((2048437173 IN ()))) WHERE ((((((NULL IN ('1592112861', '-1382609097')))AND((((NULL)) BETWEEN ((0.3803687114232649)) AND ((0Xffffffffa3a44aa6))))))AND((('-219719091')<=(0X67360f28))))); -- 0ms;
SELECT ALL TOTAL((((rt0.c2)) NOT BETWEEN ((vt1.c1)) AND ((NULL)))) FILTER(WHERE (((x'', vt0.c0, t1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((449079111) IS FALSE), (vt1.c0 IN ()), ((((((((t1.c34)AND(rt0.c3)))AND(rt0.c0)))AND(vt1.c1)))AND(rt0.c4)), ((vt1.c0) BETWEEN (rt0.c0) AND (t1.c56)), (rt0.c1 IN ()))) AND ((CASE WHEN rt0.c1 THEN t1.c56 END, ABS(DISTINCT rt0.c2), (NOT (vt1.c0)), NULL, ((x'')<<(rt0.c4)))))) OVER () FROM t1;SELECT DISTINCT vt1.c1, (~ (MAX(rt0.c0))), ((JULIANDAY(rt0.c2, NULL, rt0.c2, vt0.c0, rt0.c1))>>(((rt0.c5) ISNULL))) FROM vt0, vt1, rt0, t1; -- 0ms;
SELECT DISTINCT LAG(rt0.c3 COLLATE BINARY, (+ (CAST(rt0.c5 AS NUMERIC))), (((((((((((((((rt0.c5)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR(rt0.c0)))OR(CASE NULL  WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c5 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END)))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 WHEN x'' THEN vt0.c0 ELSE rt0.c0 END)))OR(rt0.c2)))AND(rt0.c1 COLLATE NOCASE)))OR(CASE WHEN rt0.c5 THEN 0Xffffffffebac67ce END))) OVER () FROM rt0, vt0 WHERE ((((('-795795624') ISNULL))-((('')%(NULL))))); -- 0ms;
SELECT DISTINCT ((t1.c56)>(t1.c56)) COLLATE BINARY FROM vt1, rt0, vt0;SELECT ALL ((- (rt0.c4)) IN (UNLIKELY(DISTINCT rt0.c0), rt0.c3 COLLATE RTRIM)) FROM t1, vt1 WHERE ((((- (0X1034d2d3))) IS TRUE)) GROUP BY CASE WHEN ''' ' THEN TRIM(rt0.c1) END;SELECT ALL t1.c56 FROM vt1, vt0, rt0 WHERE (((x'')==('-681762170')) COLLATE NOCASE) GROUP BY vt0.c0 HAVING (UPPER(rt0.c2) IN ());SELECT ((('K~K0p')) BETWEEN ((((rt0.c5)IS(rt0.c1)))) AND ((CAST(t1.c0 AS INTEGER)))) FROM vt0 WHERE ((('-1470177763')OR((x'3dea' IN ()))));SELECT ((((GROUP_CONCAT(rt0.c0))OR((((t1.c0))>=((rt0.c5))))))AND(SUM(rt0.c0))) FROM vt1, vt0, t1, rt0 WHERE (((((0.06854368924144116) NOT NULL)) NOTNULL)) GROUP BY ((t1.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c5))) AND (json_extract(rt0.c3, vt1.c0))); -- 0ms;
SELECT DISTINCT ((((((vt1.c1)OR(t1.c0)))OR(vt0.c0))) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (CAST(rt0.c0 AS TEXT))), (+ (rt0.c0 COLLATE RTRIM)), ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c5))) NOT BETWEEN (rt0.c4) AND (((vt1.c1) NOT NULL))) FROM vt1 WHERE ((0.45193273767612174 IN ()));SELECT DISTINCT ((STRFTIME(rt0.c0, '459466638', t1.c56))-(highlight(vt1.c0, rt0.c4, t1.c34, rt0.c2))) FROM vt0;SELECT DISTINCT vt1.c0 FROM vt1, t1 LIMIT 1024433638 OFFSET 812977582; -- 0ms;
SELECT DISTINCT ABS(((rt0.c1) BETWEEN (t1.c56) AND (t1.c34))) FROM vt1, vt0, rt0, t1 WHERE (0.1614210044620895); -- 0ms;
SELECT DISTINCT MIN(CASE x''  WHEN rt0.c1 THEN rt0.c5 END, (vt1.c1 IN ())), ((-1015749224) IS FALSE), CAST(CAST(vt1.c0 AS BLOB) AS REAL), ((((((((CAST(rt0.c3 AS INTEGER))AND(MAX(''))))AND(CAST(rt0.c3 AS REAL))))AND(rt0.c2)))AND((+ (rt0.c0)))), NTILE(CASE UNLIKELY(rt0.c0)  WHEN ((t1.c56)<(rt0.c4)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((t1.c56) NOTNULL) THEN (((rt0.c4)) BETWEEN ((t1.c0)) AND ((NULL))) WHEN ((rt0.c0) ISNULL) THEN ((rt0.c2) BETWEEN (t1.c56) AND (rt0.c4)) END) OVER ( ORDER BY (0.03107634911930357 IN (((((rt0.c0)AND('-684070370')))OR(vt1.c1))))  NULLS LAST) FROM t1, rt0 WHERE ((x'e6e0' COLLATE RTRIM IN ()));SELECT DISTINCT LIKELY(((t1.c34) IS TRUE)) FROM rt0, t1 WHERE (((((x'')/(0Xfffffffff2bd444c)))>=(((NULL) BETWEEN ('663862863') AND (0.06479965831276091))))); -- 0ms;
SELECT rt0.c5, ((rt0.c1)=(t1.c0)) COLLATE RTRIM, ((((rt0.c0)*(NULL))) IS FALSE) FROM vt0 GROUP BY (((((rt0.c4, vt0.c0, 0.29454266894649983, t1.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, vt1.c1, rt0.c5, 0.6373697342628089)) AND ((rt0.c4, 'Av', rt0.c2, vt1.c0, vt1.c0)))) NOT BETWEEN (LIKELY(DISTINCT rt0.c4)) AND (((rt0.c4)-(rt0.c3))));SELECT (((((rt0.c0))<=((t1.c56))))<=((rt0.c4 IN (rt0.c5)))) FROM t1, vt0, rt0 WHERE ((((+ (x'bf4d')))>=((- ('se(rL'))))); -- 1ms;
SELECT ALL NULLIF(((vt0.c0) IS TRUE), ((t1.c34) NOTNULL)), vt0.c0, (((vt1.c1))=(((((rt0.c4)) NOT BETWEEN ((rt0.c5)) AND (('-1540185381')))))), (((((vt1.c1)IS(t1.c0))))>=(((((rt0.c3)) BETWEEN ((t1.c34)) AND ((vt1.c1)))))), LOWER(IFNULL(rt0.c3, vt0.c0)) FROM vt1, t1, vt0 ORDER BY CAST((((rt0.c5)) NOT BETWEEN ((t1.c0)) AND ((x'5cb59738'))) AS BLOB) DESC  NULLS FIRST, RTRIM(rt0.c3) DESC  NULLS LAST;SELECT ((((vt1.c0) NOT BETWEEN (t1.c0) AND ('0.3735337866424332')))LIKE(CAST(rt0.c2 AS REAL))) FROM rt0, vt1, t1 WHERE (highlight(NULL COLLATE NOCASE, NULL, (((((((('709754538')AND(4.09728885E8)))AND(x'')))OR('')))OR(x'e625')), CAST(0.9370068195446505 AS TEXT)));SELECT DISTINCT ((((NULLIF(rt0.c0, rt0.c2))AND((NOT (NULL)))))OR(((rt0.c1)<(rt0.c5)))) FROM t1 WHERE (((x'' IN ()) IN ((('xF4q9f䲇')IS(x'')), (+ (0Xffffffffe6a6ed34)))));SELECT ((((rt0.c1) BETWEEN (t1.c0) AND (t1.c56))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((t1.c56) ISNULL))), (((((- (rt0.c5)))AND(((t1.c0) BETWEEN (NULL) AND (rt0.c2)))))AND(NULL)), CAST(QUOTE(rt0.c3) AS BLOB) FROM vt0, rt0, vt1, t1 WHERE (((0X27ba383d)%((((('1517854465')OR('-378913772')))AND(x''))))); -- 1ms;
SELECT DISTINCT ((vt1.c1) IS FALSE), rt0.c5, (((((((('lo&x!c]')OR(((vt1.c0)*(vt0.c0)))))AND(t1.c0 COLLATE RTRIM)))OR(0xffffffffe458b0cf)))OR(((NULL)<(rt0.c3)))), ((-1538536737) NOT BETWEEN (((0.4752678529606543) NOT NULL)) AND (((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))), '' FROM rt0, vt1, vt0 LIMIT -443511583 OFFSET -1824921688;SELECT ((+ (rt0.c2)) IN ()) FROM t1, rt0 WHERE ((((('㠎6qc0L') BETWEEN ('510417461') AND ('-2115455394')))OR(((0.003963865916531306)GLOB(''))))); -- 0ms;
SELECT 0.4091830729245186 FROM rt0, vt0, vt1 ORDER BY (((rt0.c2))>((((t1.c0)&(vt0.c0))))) DESC;SELECT ALL (rt0.c4 IN ((((t1.c0))>((vt1.c0))), (t1.c0 IN (rt0.c5)))) FROM rt0, t1, vt0, vt1; -- 0ms;
SELECT ALL ((t1.c0 COLLATE BINARY) ISNULL), GROUP_CONCAT(vt1.c0) OVER (), AVG(((vt1.c1)=(rt0.c3))) FROM t1 WHERE (CAST(x'b39b' AS REAL) COLLATE NOCASE) UNION ALL SELECT DISTINCT (((((vt0.c0))>((rt0.c5))))AND(CASE rt0.c0  WHEN rt0.c3 THEN t1.c0 WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c3 THEN t1.c34 END)), CAST(rt0.c5 COLLATE NOCASE AS INTEGER), ((1.7976931348623157E308) IS FALSE) FROM vt0, t1;SELECT ALL ((((-1e500)) NOT BETWEEN ((t1.c56)) AND ((t1.c0))) IN ()) FROM rt0, vt0, t1, vt1 WHERE (((((((0.9374701717927858)OR(-1363608885)))AND('2Y(轏Y')))>>((~ (0.18323011911454645))))); -- 0ms;
SELECT (((CAST(rt0.c0 AS INTEGER)))==((((rt0.c5)+(8.6836334E8))))) FROM t1 WHERE (json_array_length(((x'') BETWEEN (x'1614') AND (0.6598880452227466))));SELECT DISTINCT CAST(((vt1.c1)>(rt0.c1)) AS BLOB) FROM t1, vt1, rt0 WHERE (CAST((NOT ('1501812423')) AS NUMERIC)) ORDER BY ((CAST('	Q8' AS TEXT)) NOT BETWEEN ((NOT (rt0.c3))) AND ((((t1.c56, 0.8707885769463592, rt0.c1))<>((NULL, t1.c34, t1.c0)))))  NULLS FIRST; -- 0ms;
SELECT ALL CUME_DIST() OVER (), (CASE WHEN vt1.c0 THEN rt0.c1 WHEN t1.c34 THEN rt0.c5 WHEN 0.6407598008867699 THEN '-1148236157' WHEN rt0.c5 THEN t1.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END IN ()), ((TYPEOF(t1.c56))||((rt0.c5 IN ()))), ((-243505961 COLLATE NOCASE)|(t1.c34)), CASE WHEN (NOT (t1.c0)) THEN (rt0.c0 IN (vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END FROM rt0, vt1, vt0, t1 WHERE ((+ (((((x'4a34')OR(0Xfffffffff2e75a4d)))OR(x''))))); -- 0ms;
SELECT DISTINCT 0.05876515147051853, SUM(((((((((rt0.c1)AND(rt0.c5)))AND(vt1.c1)))AND(rt0.c4)))OR(NULL))) OVER ( GROUPS t1.c56 PRECEDING EXCLUDE GROUP), (((vt1.c1)) NOT BETWEEN ((COUNT(*))) AND (((+ (rt0.c3))))) FROM t1 LIMIT -842914432 OFFSET -828957352;SELECT DISTINCT '-1838416760' FROM t1, vt0 WHERE ((((('5Nx') NOTNULL))&(((x'') NOTNULL)))); -- 0ms;
SELECT DISTINCT CAST((NOT (rt0.c3)) AS REAL) FROM vt0, rt0 ORDER BY IFNULL(rt0.c3, rt0.c0) COLLATE BINARY DESC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (t1.c0) AND (t1.c56))) BETWEEN ((+ (t1.c0))) AND ((- (rt0.c0)))), NULL;SELECT DISTINCT (((+ (vt0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (vt1.c0) AND (0Xffffffffdb575bde))) AND ((((('0.3384038118046103')OR(rt0.c4)))AND(t1.c56)))) FROM t1, rt0, vt1, vt0 WHERE ((+ (NULL))) ORDER BY ((NULL) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c1) NOT BETWEEN (rt0.c5) AND (x'')))) DESC; -- 0ms;
SELECT (589115167 IN (((vt1.c1)IS NOT(t1.c34)), '1596710404')) FROM t1, vt1, rt0; -- 0ms;
SELECT DISTINCT MAX(IFNULL(t1.c0, rt0.c0)) COLLATE RTRIM, rt0.c5 COLLATE NOCASE, (~ (CASE WHEN vt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN vt1.c1 END)), GROUP_CONCAT(rt0.c5) OVER (), CASE WHEN rt0.c4 THEN LIKELY(rt0.c3) END FROM rt0 WHERE ((((NULL)) BETWEEN ((CAST(NULL AS INTEGER))) AND ((CASE x''  WHEN '1905314983' THEN 'L!C' END))));SELECT ALL COUNT(*) OVER () FROM rt0, t1, vt0 WHERE ((((NULL COLLATE NOCASE))=(((((((((('')AND('1934388554')))AND(0.6609508039959565)))AND('537465557')))AND(0.13348373982599082)))))); -- 0ms;
SELECT ALL LAG(((((NULL)AND((((vt1.c1, rt0.c1, t1.c56))<((vt1.c0, t1.c34, vt1.c1))))))AND((rt0.c3 IN ()))), ((((((rt0.c4) BETWEEN (t1.c34) AND (t1.c56)))AND(0xffffffffb6715d27)))AND(((((rt0.c4)AND(rt0.c5)))OR(rt0.c2)))), CAST(t1.c56 AS INTEGER) COLLATE RTRIM) OVER () FROM vt1, rt0, vt0, t1; -- 0ms;
SELECT DISTINCT load_extension(rt0.c3 COLLATE BINARY, COUNT(NULL)), ((((rt0.c2)>>(rt0.c3)))&(t1.c56 COLLATE BINARY)), TOTAL((+ (vt0.c0))) OVER ( ORDER BY (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) IN ()) ASC), ((rt0.c4 COLLATE NOCASE)<((- (t1.c0)))), CUME_DIST() OVER ( ROWS (- (CAST(rt0.c5 AS TEXT))) PRECEDING) FROM vt0, t1 NATURAL JOIN vt1;SELECT ((t1.c0 COLLATE BINARY) NOTNULL) FROM vt0, t1, rt0 WHERE ((((('-1381481500') BETWEEN (0.03293135366690525) AND (x'f0f9')))-((+ (-9.6276417E7))))); -- 1ms;
SELECT DISTINCT (~ (COUNT(*))), ((CASE t1.c34  WHEN rt0.c0 THEN vt1.c0 END) BETWEEN (((vt0.c0)>=(vt1.c1))) AND (((vt1.c1)GLOB(rt0.c4)))), CAST(json_array(rt0.c0, vt1.c1, t1.c56, t1.c34) AS TEXT) FROM t1, rt0, vt1 NOT INDEXED WHERE ((((((x'' IN ()))OR(TRIM(DISTINCT NULL, x''))))OR((((NULL, '-1610523474', 0.983779106646133))=((NULL, 0.8674865090005631, NULL)))))) ORDER BY SQLITE_SOURCE_ID(), STRFTIME((rt0.c3 IN (t1.c56)), ((rt0.c1)OR(t1.c34)), '1905314983', (((rt0.c5, t1.c34, rt0.c4)) BETWEEN ((rt0.c4, 0X385e5405, rt0.c3)) AND ((rt0.c0, t1.c34, vt1.c1))), CAST(vt1.c0 AS TEXT)) DESC  NULLS LAST, CASE WHEN ((t1.c34) ISNULL) THEN ((((((((rt0.c4)OR(vt1.c1)))AND(vt0.c0)))AND(rt0.c5)))OR(rt0.c5)) END ASC;SELECT 0.07334821828600602 FROM t1 LEFT OUTER JOIN rt0 ON (- (CASE WHEN rt0.c2 THEN '^d' ELSE rt0.c4 END)) FULL OUTER JOIN vt1 ON (((t1.c56) NOT BETWEEN (vt1.c0) AND (rt0.c0)) IN (t1.c34)) RIGHT OUTER JOIN vt0 ON ((((vt1.c0)IS NOT(rt0.c3))) ISNULL) ORDER BY TRIM(DISTINCT ((vt1.c1)>>(t1.c0))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT (0.9631715754893496 IN ()) FROM vt1; -- 0ms;
SELECT TRIM(CASE vt1.c1  WHEN t1.c34 THEN rt0.c0 ELSE t1.c56 END, COALESCE(vt0.c0, rt0.c1)), ((TOTAL(vt0.c0)) NOT BETWEEN ((((NULL))==((rt0.c2)))) AND (((rt0.c1)/(rt0.c2)))), CUME_DIST() OVER () FROM vt1, vt0, rt0, t1 WHERE ((((x'3937')) NOT BETWEEN ((((((NULL)AND(x'04a0')))OR(x'eb0934b1')))) AND ((CAST(0Xffffffff92f2104f AS INTEGER))))) GROUP BY '-479603507', ((CAST(rt0.c5 AS REAL)) IS TRUE), IFNULL(rt0.c4 COLLATE RTRIM, (~ (0X1a652e2b))); -- 0ms;
SELECT ALL CAST(((rt0.c5)&(vt1.c0)) AS INTEGER) FROM t1, vt1;SELECT DISTINCT DENSE_RANK() OVER () FROM t1, vt1, rt0; -- 0ms;
SELECT DISTINCT ((((vt1.c1) NOT NULL))>=((t1.c34 IN ()))), ((((((vt1.c1) IS FALSE))OR(rt0.c4 COLLATE BINARY)))OR((rt0.c1 IN (rt0.c2)))), rt0.c4 FROM t1, rt0, vt0;SELECT DISTINCT CAST(t1.c56 AS BLOB) FROM vt1, vt0, t1 WHERE (((((0.9092602180155219) IS TRUE)) BETWEEN (((NULL) NOT BETWEEN (NULL) AND (-918962190))) AND (((x'd2fb3e59') NOTNULL)))); -- 0ms;
SELECT DISTINCT rt0.c5 FROM vt1, rt0; -- 0ms;
SELECT ALL CAST((NOT ('1208905733')) AS NUMERIC), COUNT(CAST(rt0.c2 AS BLOB) COLLATE RTRIM), (((((vt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))) IS TRUE) FROM rt0, t1 WHERE (((((((1361336032)>>(NULL)))OR(((((((((NULL)AND('\')))AND(x'')))AND(NULL)))OR('1096969145')))))OR(CASE 0.8364122927009809  WHEN 0.7154474337982828 THEN x'' WHEN 0x24c28f57 THEN 0.9843096317510371 WHEN 0.14327861967742084 THEN NULL WHEN '-243505961' THEN 0.2771126037592564 WHEN x'' THEN x'' END))) GROUP BY (((0.934801854045449, rt0.c3, rt0.c2)) BETWEEN ((((vt0.c0) BETWEEN (t1.c0) AND (rt0.c4)), CAST(t1.c56 AS INTEGER), ((t1.c56)AND(rt0.c3)))) AND ((vt0.c0, CAST(rt0.c0 AS INTEGER), rt0.c1))), ((((((rt0.c0)!=(t1.c0)))OR(((0.9211608747854253) ISNULL))))AND(rt0.c1)), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c56)))IS(rt0.c4 COLLATE RTRIM)) HAVING ((0Xffffffffcf381a76) NOTNULL);SELECT DISTINCT HEX((- (t1.c34))) FROM rt0, vt1 LIMIT -1895083687;SELECT DISTINCT ((AVG(t1.c0))<(((((rt0.c4)OR(t1.c0)))AND('-96276417')))) FROM t1, rt0 WHERE (((LIKELIHOOD(DISTINCT 0xffffffff8f958bd1, 0.5195503174687932)) ISNULL)); -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c5)) COLLATE BINARY FROM vt0;SELECT DISTINCT t1.c34 FROM vt0, t1; -- 0ms;
SELECT NTH_VALUE(CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY, x'') OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4)==(t1.c34)))OR((t1.c34 IN (rt0.c1)))) FROM vt1, rt0, t1; -- 0ms;
SELECT DISTINCT ((((NULL IN ())))!=((((rt0.c3)&(t1.c34))))), AVG(((rt0.c3)|(rt0.c0))), CASE WHEN CASE WHEN vt1.c0 THEN rt0.c4 END THEN ((rt0.c5)IS(0xffffffff850ecd3b)) ELSE ((vt1.c1) NOT BETWEEN (rt0.c5) AND (t1.c34)) END FROM vt0 LIMIT 148369866;SELECT DISTINCT ((CASE t1.c0  WHEN vt0.c0 THEN t1.c34 ELSE rt0.c0 END)==(t1.c34)) FROM vt0, t1, rt0, vt1; -- 0ms;
SELECT CASE WHEN ((t1.c34)*(vt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE t1.c56 END END FROM rt0, t1;SELECT DISTINCT (((rt0.c4) NOT BETWEEN (rt0.c5) AND (vt0.c0)) IN (x'')), ((((t1.c56) NOTNULL))*(rt0.c4)), (((vt1.c0) NOT NULL) IN ()) FROM rt0;SELECT DISTINCT CASE t1.c56  WHEN vt1.c1 THEN t1.c34 ELSE t1.c34 END COLLATE RTRIM FROM t1, vt0, vt1, rt0 WHERE ((('')IS(0.1823545756313938)) COLLATE NOCASE); -- 0ms;
SELECT (~ (LIKELY(rt0.c2))) FROM t1, rt0, vt0 WHERE (((((0Xffffffffc74e6f9a) NOT BETWEEN (x'') AND ('')))OR((((x'ed42')) BETWEEN ((NULL)) AND ((-718917501)))))); -- 0ms;
SELECT (((('825642333') BETWEEN (vt0.c0) AND (rt0.c2))) IS FALSE) FROM t1 WHERE (((((0X24c07ac)*(NULL)))%(UPPER(DISTINCT 0.9322912993080862))));SELECT ((((t1.c56) NOT BETWEEN (NULL) AND (rt0.c3))) ISNULL), ((x'') BETWEEN (json_quote(t1.c34)) AND (((vt1.c0)AND('-992609341')))), ((COUNT(*)) NOT BETWEEN ((('1e500') IS TRUE)) AND (((t1.c0)<<(0.2206026669825235)))), (((((vt0.c0, rt0.c4, NULL))>=((rt0.c1, vt1.c1, rt0.c4)))) BETWEEN (((vt1.c0) NOTNULL)) AND (((((((((vt1.c0)AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(0.15454541798174148)))), ((rt0.c5)>>(rt0.c0)) COLLATE NOCASE FROM vt1, vt0 FULL OUTER JOIN t1 ON CASE WHEN '0.0' THEN ('	㰔ji-^s1' IN ()) ELSE ((((rt0.c2)AND(vt1.c1)))OR(NULL)) END WHERE (0.44747581865495245 COLLATE NOCASE);SELECT ALL COUNT(vt1.c1) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT MAX(((vt1.c0)LIKE(rt0.c4))), CASE (rt0.c4 IN (rt0.c2))  WHEN TOTAL(rt0.c1) THEN COUNT(rt0.c3) END, ((rt0.c5 COLLATE BINARY) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c3 ELSE vt1.c1 END) AND (CAST(rt0.c2 AS TEXT))) FROM rt0;SELECT DISTINCT ((-7.25208785E8 COLLATE RTRIM)/(((rt0.c2)*(rt0.c0)))), (- (((rt0.c2)&(t1.c56)))), (((t1.c34) NOT BETWEEN (rt0.c0) AND (t1.c0)) IN ()) FROM rt0, vt1, t1 WHERE (((1.298857132E9) IS TRUE)) ORDER BY CAST((((vt1.c1)) BETWEEN ((t1.c0)) AND ((vt1.c0))) AS TEXT) ASC; -- 0ms;
SELECT DISTINCT (NOT (vt1.c1 COLLATE BINARY)), ((CAST(x'f7eb5dff' AS REAL))>>(((((vt0.c0)OR(rt0.c2)))OR(rt0.c5)))), (- (rt0.c5)) FROM rt0, vt1, vt0 WHERE ((CAST(-2010551335 AS BLOB) IN (((NULL)>(0.03504758372400496))))); -- 0ms;
SELECT DISTINCT rtreenode((+ ('')), CAST(t1.c0 AS TEXT)), AVG((- (rt0.c4))) OVER (), t1.c56 FROM t1, rt0, vt1, vt0 WHERE ((((((NULL)) NOT BETWEEN ((x'')) AND ((x''))))+(((((-2069215985)OR('-2008832821')))OR(0Xffffffff88296bd9))))); -- 0ms;
SELECT DISTINCT (CASE rt0.c3  WHEN vt1.c1 THEN vt1.c1 END IN ()) FROM rt0, vt0, t1, vt1; -- 0ms;
SELECT DISTINCT (((vt0.c0) NOTNULL) IN ()) FROM vt1, t1, vt0, rt0 ORDER BY (((~ (vt0.c0)))IS(CASE WHEN t1.c34 THEN rt0.c1 END)) DESC, ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 END)<<(CASE WHEN rt0.c4 THEN 0.5209255441333472 WHEN rt0.c2 THEN rt0.c3 WHEN 0.27279015656206207 THEN t1.c56 ELSE rt0.c3 END))  NULLS LAST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt1.c0) NOT NULL)) OVER () FROM t1, vt1, rt0, vt0 ORDER BY rt0.c3, ((((((vt1.c1)AND(t1.c0)))AND(vt1.c1))) NOTNULL); -- 0ms;
SELECT CAST(0.9923478691465443 AS TEXT) FROM t1, vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT CASE CASE vt1.c0  WHEN vt1.c1 THEN rt0.c4 END  WHEN ((((t1.c56)AND(rt0.c3)))AND(rt0.c0)) THEN (((rt0.c1))==((vt1.c1))) WHEN t1.c0 THEN CASE WHEN t1.c34 THEN rt0.c2 END WHEN (vt1.c0 IN ()) THEN t1.c0 COLLATE NOCASE WHEN (vt1.c1 IN (vt1.c1, rt0.c3)) THEN (- (rt0.c3)) WHEN ((((((((2125327955)AND(t1.c34)))OR(rt0.c2)))AND('')))OR(t1.c34)) THEN ((vt1.c1)<<(t1.c56)) ELSE 0.3711305389781857 END, ((((((vt1.c0)OR(rt0.c5)))AND(0.8863670991185053)))<>(((rt0.c4) IS TRUE))), rt0.c2 FROM vt1, vt0, rt0 WHERE ((('U0L>E') NOT BETWEEN ('拦3롃6') AND (-1.251517241E9)) COLLATE NOCASE) LIMIT 1654625705;SELECT GROUP_CONCAT((((rt0.c2, vt0.c0, rt0.c5)) BETWEEN ((t1.c56, vt1.c1, rt0.c3)) AND ((rt0.c3, -7.95795624E8, rt0.c5)))) FROM t1 CROSS JOIN rt0 ON CASE WHEN t1.c34 THEN CASE t1.c34  WHEN rt0.c4 THEN x'' WHEN rt0.c4 THEN rt0.c0 WHEN vt1.c1 THEN vt1.c0 END WHEN CAST(rt0.c4 AS NUMERIC) THEN (+ (rt0.c1)) WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c3) IS FALSE) ELSE t1.c34 COLLATE BINARY END CROSS JOIN vt1 ON (((vt0.c0 COLLATE NOCASE))>=((vt1.c0 COLLATE RTRIM))) WHERE ((~ (x'')) COLLATE NOCASE) LIMIT 512101809 OFFSET -1144410881;SELECT 0.16072787025323465 FROM vt0, t1, rt0, vt1 WHERE ((((- (x''))) IS TRUE)) GROUP BY ((CASE WHEN rt0.c1 THEN 'bFCY' ELSE rt0.c2 END) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt1.c1)<=(rt0.c4)))) HAVING (~ (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c3)))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t1.c56 WHEN t1.c34 THEN vt1.c1 END) BETWEEN (((((rt0.c4)OR(t1.c0)))OR(rt0.c2))) AND (CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c5 THEN t1.c0 WHEN NULL THEN rt0.c5 ELSE '|㴼^딝^ΐ' END)); -- 0ms;
SELECT ALL rt0.c2 FROM t1, vt1, rt0; -- 0ms;
SELECT DISTINCT ((t1.c34)>(rt0.c1)) COLLATE BINARY FROM rt0;SELECT ALL CASE WHEN '655582301' THEN rt0.c3 COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN HEX(DISTINCT t1.c56) WHEN CAST(vt0.c0 AS BLOB) THEN vt1.c0 ELSE ((t1.c34)>>(rt0.c2)) END FROM vt0, rt0 GROUP BY rt0.c2 HAVING TYPEOF(DISTINCT (rt0.c0 IN ()));SELECT DISTINCT CAST(vt1.c0 AS INTEGER) FROM vt1, t1, rt0, vt0; -- 0ms;
SELECT AVG(COUNT(*)), ((CAST(t1.c56 AS BLOB))|(((t1.c0)<=(rt0.c3)))), (~ (x'')) COLLATE RTRIM, CASE ((t1.c34)GLOB(rt0.c4))  WHEN ((rt0.c1)%(rt0.c5)) THEN AVG(vt1.c1) ELSE (t1.c34 IN (t1.c56)) END, CASE WHEN vt0.c0 COLLATE RTRIM THEN CASE rt0.c3  WHEN NULL THEN vt0.c0 END WHEN (rt0.c1 IN ()) THEN (NOT (vt0.c0)) WHEN CASE t1.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c4 END THEN ((rt0.c0)&(rt0.c0)) ELSE '-638380030' END FROM rt0, vt1;SELECT DISTINCT ((((rt0.c0)*(rt0.c5))) IS TRUE), x'3880', CAST(((((t1.c56)OR(vt1.c0)))AND(t1.c0)) AS TEXT) FROM rt0;SELECT ALL LAG(((((((((CAST(rt0.c2 AS INTEGER))OR((rt0.c0 IN ()))))OR(NULL)))OR(rt0.c0 COLLATE BINARY)))AND((NOT (rt0.c2)))), ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0)))<(0Xffffffffffb803ed)), (((((rt0.c4, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c5, rt0.c1, rt0.c2))))*(((rt0.c0)LIKE(rt0.c5))))) OVER (), t1.c56, ROW_NUMBER() OVER () FROM rt0;SELECT ALL CASE (vt1.c1 IN ())  WHEN t1.c0 COLLATE NOCASE THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE t1.c34 END WHEN CAST(rt0.c0 AS BLOB) THEN '738940120' WHEN ((vt1.c0)GLOB(vt1.c1)) THEN ((rt0.c1)>=(vt1.c0)) END FROM vt0 GROUP BY t1.c34, (((('-296269233') NOT NULL))IS((((vt1.c0, '-1830648785', t1.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((t1.c34, vt1.c0, rt0.c3))))), LOWER(CAST(vt1.c1 AS INTEGER)) HAVING ((((((t1.c56)%(rt0.c5)))OR(CASE WHEN rt0.c5 THEN t1.c56 END)))AND(LTRIM(rt0.c1, t1.c0))) ORDER BY CAST(((t1.c56)<(rt0.c4)) AS BLOB) DESC  NULLS LAST;SELECT DISTINCT NTH_VALUE((((NOT (rt0.c0)))>=(((rt0.c1)/(rt0.c0)))), ((rt0.c1 COLLATE BINARY)+(((rt0.c1)*(rt0.c4))))) OVER () FROM vt0, rt0 NOT INDEXED WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT DISTINCT LAST_VALUE(((CAST(rt0.c3 AS INTEGER)) NOTNULL)) OVER () FROM vt0, rt0, t1, vt1 INTERSECT SELECT DISTINCT (((rt0.c1 IN ()))>>(CAST(rt0.c5 AS BLOB))) FROM vt0, vt1, t1 WHERE (CASE WHEN '5|连AUlo<' THEN ('905250302' IN ()) ELSE COALESCE('0.9542022093231256', x'') END);SELECT DISTINCT (((~ (rt0.c3)))>>(TRIM(DISTINCT rt0.c5, t1.c0))), ((((-1815908933) BETWEEN (t1.c56) AND (t1.c0))) NOT BETWEEN (MIN(rt0.c4, rt0.c4)) AND ((('1498488176') BETWEEN (vt1.c0) AND (vt0.c0)))), 0.38901731228965775 FROM t1, vt1, vt0 GROUP BY (- ((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0))))), LOWER((NOT (t1.c56))), ((((vt1.c1)%(vt1.c1))) NOT BETWEEN ((+ (t1.c0))) AND (((rt0.c3) IS TRUE))) ORDER BY ((TRIM(DISTINCT '0.5469971597085698', t1.c34)) NOT NULL)  NULLS LAST;SELECT ALL 214019163 FROM vt0; -- 1ms;
SELECT DISTINCT rt0.c2 FROM vt0 ORDER BY (((((((((-905875374)AND(vt0.c0)))AND(0.9070952916532691)))OR(vt0.c0)))AND(vt1.c1)) IN ()) DESC  NULLS LAST;SELECT rt0.c0 FROM vt1;SELECT DISTINCT ((rt0.c3) NOT NULL) COLLATE BINARY FROM t1;SELECT DISTINCT x'', CAST((rt0.c1 IN (t1.c0)) AS NUMERIC), UPPER(DISTINCT (((rt0.c3)) NOT BETWEEN ((x'0645')) AND ((vt1.c1)))) FROM vt0 WHERE (((0.97839089864901) BETWEEN (('okP\rgPH' IN ())) AND (UNLIKELY(x'e00f'))));SELECT LAG(1.51961972E9, (~ (rt0.c4)) COLLATE NOCASE, ((((((((CAST(rt0.c4 AS INTEGER))OR(rt0.c1)))AND(LAST_INSERT_ROWID())))OR(rt0.c1 COLLATE BINARY)))OR(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))OR(vt0.c0)))AND(t1.c56))))) OVER () FROM t1, vt0, rt0; -- 0ms;
SELECT DISTINCT '-1015749224', (((vt0.c0 IN ()))-(CASE rt0.c4  WHEN t1.c34 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c5 WHEN t1.c34 THEN t1.c34 END)), CASE WHEN ((vt0.c0)GLOB(rt0.c4)) THEN rt0.c1 COLLATE BINARY ELSE ((rt0.c4)%(rt0.c5)) END FROM t1, vt0, vt1, rt0 WHERE (((((LTRIM(0.9676477897952444))AND(CAST('1208905733' AS INTEGER))))OR(json_valid(x'ed38')))) ORDER BY TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (t1.c56) AND (rt0.c3)), ((rt0.c4) BETWEEN (rt0.c2) AND (vt0.c0))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT (CASE rt0.c1  WHEN vt1.c0 THEN 0Xfffffffff08c099a ELSE rt0.c1 END IN ()) FROM t1; -- 0ms;
SELECT DISTINCT ((((rt0.c1)/(rt0.c4))) BETWEEN (rt0.c5) AND (((t1.c0) IS FALSE))), CASE WHEN 0.7196779835688674 THEN ABS(rt0.c0) WHEN IFNULL(vt0.c0, t1.c34) THEN ((vt1.c1)OR(vt0.c0)) WHEN rt0.c1 THEN rt0.c0 WHEN ((rt0.c2)OR(rt0.c5)) THEN '' WHEN (+ (rt0.c4)) THEN ((vt1.c0)GLOB(vt1.c1)) ELSE (((t1.c0))>=((vt1.c0))) END, ((((((t1.c0)GLOB(vt1.c0)))AND(((NULL)=(vt1.c0)))))OR((t1.c34 IN (rt0.c3)))) FROM vt0;SELECT ALL (((+ (vt1.c1))) BETWEEN (0Xffffffffa2926db7) AND (CAST(rt0.c0 AS BLOB))), (COUNT(*) IN (((t1.c34) NOT BETWEEN (t1.c0) AND (vt0.c0)))), (+ (0.02702227708380034)) FROM t1, vt1;SELECT DISTINCT ((CASE WHEN '0.9440633119801108' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c0 WHEN x'6f54050d' THEN rt0.c3 WHEN vt0.c0 THEN vt1.c1 ELSE rt0.c3 END)!=(((rt0.c0)/(rt0.c0)))) FROM t1, vt1, rt0 WHERE (CASE ((x'') BETWEEN ('1309342528') AND (x'23ce'))  WHEN ((-256267673)<=(NULL)) THEN (('-2723730') NOT NULL) ELSE ((1.200026755E9)-(x'5cc0')) END);SELECT (CAST(rt0.c0 AS BLOB) IN (((rt0.c4)<=(rt0.c5)))) FROM vt1, t1 WHERE (0.9119372676492618) ORDER BY '0.270661343529214' DESC  NULLS FIRST;SELECT ALL (((- (rt0.c2)))>(CAST('' AS INTEGER))) FROM vt0;SELECT DISTINCT NULL FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c0)AND(rt0.c2)))AND(vt1.c0)) AS REAL), (((rt0.c0) BETWEEN (2142987844) AND (t1.c34)) IN ()), t1.c0 FROM vt1 WHERE ((((NULL)|(x'')) IN ()));SELECT ((((rt0.c0) IS FALSE))+('-1532648876')) FROM vt0 GROUP BY rt0.c1, vt1.c0, (~ (CASE WHEN rt0.c1 THEN vt1.c1 END));SELECT DISTINCT ((NULLIF(rt0.c2, rt0.c1))>=(t1.c56)) FROM t1, vt0, vt1 WHERE (DATETIME(((NULL) BETWEEN (-1752218502) AND (0.48946319546454453)), CASE '825642333'  WHEN '%S' THEN NULL WHEN NULL THEN 1841842127 WHEN '-219719091' THEN NULL ELSE NULL END, (~ (NULL))));SELECT CAST(((t1.c56)|(vt0.c0)) AS REAL) FROM t1 WHERE (CASE WHEN CASE WHEN '0.976821982663665' THEN -556977796 ELSE '' END THEN 0.6858727122596139 COLLATE BINARY WHEN CASE WHEN x'' THEN 'B\' WHEN 2119317038 THEN 0xffffffff8e596217 WHEN NULL THEN NULL WHEN NULL THEN '-2109890633' WHEN 0X2fc1a5d0 THEN 'Tq' WHEN 0.3949428939063482 THEN x'' WHEN 0.21260030869569135 THEN 0.8099689625080377 END THEN ((NULL)=('\\nw7P')) WHEN x'' THEN CAST('2112625080' AS BLOB) ELSE CAST(0.24288561929025687 AS INTEGER) END);SELECT rt0.c4, TOTAL_CHANGES(), ((((t1.c56)|(NULL))) BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(0.532028078180824 AS REAL))) FROM vt1, rt0, vt0, t1 WHERE ('m2&x x' COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (~ (TOTAL('-1697460567'))) FROM rt0 WHERE (UPPER(DISTINCT ((('-2066319696')) NOT BETWEEN ((x'')) AND (('0.7670951490702702'))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1 GROUP BY ((((((((((((t1.c0)OR(((t1.c34) NOTNULL))))OR(rt0.c0)))OR((rt0.c3 IN ()))))AND((~ (t1.c0)))))OR(836281333)))AND(CAST(t1.c0 AS TEXT))) HAVING (((((((rt0.c2))<((t1.c56))))AND((- (rt0.c4)))))OR(COUNT(*)));SELECT DISTINCT CAST((((t1.c34, rt0.c2, t1.c0)) BETWEEN ((vt0.c0, rt0.c2, NULL)) AND ((t1.c56, vt1.c0, rt0.c4))) AS NUMERIC), ((rt0.c3) BETWEEN (TYPEOF(vt1.c0)) AND (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 END)), ((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c0)))AND(vt1.c1))) BETWEEN (CASE WHEN NULL THEN rt0.c5 WHEN rt0.c0 THEN t1.c56 WHEN t1.c34 THEN rt0.c2 ELSE vt0.c0 END) AND (((rt0.c1)IS NOT(vt1.c1)))) FROM rt0, vt1, t1, vt0; -- 0ms;
SELECT (((rt0.c3 IN (rt0.c1))) IS FALSE) FROM vt1, t1 WHERE (CAST(((x'')<=(NULL)) AS BLOB));SELECT DISTINCT DENSE_RANK() OVER () FROM vt1, t1, rt0 ORDER BY t1.c56 COLLATE BINARY  NULLS FIRST, x'' ASC, (((t1.c56 IN (t1.c34))) IS FALSE) DESC; -- 0ms;
SELECT COALESCE((rt0.c2 IN ()), 0.9670200808958883 COLLATE RTRIM) FROM vt0, vt1 WHERE (((CAST(0.8128827688773385 AS INTEGER)) NOTNULL)) LIMIT -1795791698; -- 1ms;
SELECT ALL CAST(CAST(rt0.c0 AS TEXT) AS BLOB), COUNT(((vt1.c1)>=(t1.c56))), (~ (t1.c34)) FROM rt0, vt0;SELECT ALL CAST((((rt0.c4, rt0.c4, vt1.c0)) NOT BETWEEN ((rt0.c4, 0.9280603797656953, rt0.c2)) AND ((t1.c34, t1.c0, vt1.c1))) AS NUMERIC) FROM vt1, t1;SELECT DISTINCT CASE (((rt0.c2)) BETWEEN ((rt0.c5)) AND ((vt0.c0)))  WHEN 1045553574 THEN ((((t1.c0)AND(t1.c56)))OR(rt0.c3)) WHEN (((t1.c0))<((t1.c56))) THEN (((vt1.c0, t1.c0, 0xfffffffff2efce5a)) BETWEEN ((rt0.c0, t1.c56, rt0.c4)) AND ((t1.c34, 0.9523409156592039, rt0.c0))) WHEN CASE WHEN vt1.c1 THEN t1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END, ((rt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((rt0.c4)|(rt0.c1)))), ((HEX(DISTINCT t1.c34))%(((t1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)))) FROM vt1;SELECT DISTINCT COUNT(*) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND (((((rt0.c2)>(rt0.c1)), ((rt0.c1) NOT BETWEEN (0.007895310675050005) AND (rt0.c5)), '-681286207'))>=((((((vt0.c0)AND(rt0.c4)))OR(vt0.c0)), ((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), LTRIM(rt0.c4, rt0.c3)))) FOLLOWING EXCLUDE NO OTHERS), t1.c34, TOTAL(NULL) OVER () FROM vt1, t1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((json_extract('867930180', rt0.c2)))) FROM vt1, vt0 WHERE (NULLIF(DISTINCT CAST('-97141640' AS INTEGER), NULL));SELECT DISTINCT (((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c5)) IN ('-1758778901')), (((- (t1.c0)))<=((- (vt1.c0)))), ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN t1.c56 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c3 END) NOTNULL), PERCENT_RANK() OVER (), (CAST(vt1.c0 AS NUMERIC) IN ()) FROM vt0 GROUP BY ((((vt0.c0) IS FALSE))AND(vt1.c0 COLLATE RTRIM)), (((~ (rt0.c3))) IS FALSE), ((CASE t1.c0  WHEN vt1.c1 THEN t1.c0 ELSE rt0.c5 END) BETWEEN ((~ (rt0.c5))) AND (((vt1.c1)|(x'e4e8')))) ORDER BY (((t1.c34, t1.c34, rt0.c1)) NOT BETWEEN ((((rt0.c4)|(t1.c0)), ((rt0.c0)&(t1.c34)), ((193458301) BETWEEN ('1') AND (rt0.c0)))) AND ((CASE rt0.c1  WHEN rt0.c4 THEN 905250302 WHEN 0x6a2a727b THEN x'' WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END, ((x'') BETWEEN (rt0.c2) AND (rt0.c4)), ((t1.c34) ISNULL))))  NULLS FIRST;SELECT ((((vt1.c0)<=(rt0.c1))) BETWEEN (((vt1.c0) ISNULL)) AND (json_array(t1.c34, vt1.c0))) FROM vt1, vt0, rt0, t1; -- 2ms;
SELECT DISTINCT CAST(x'' AS NUMERIC), json_quote(t1.c34 COLLATE NOCASE), MIN(LTRIM(vt1.c1)) FROM vt0, vt1;SELECT ALL (((rt0.c1 IN ()))GLOB(rt0.c0 COLLATE RTRIM)), vt1.c0, CASE (+ (t1.c0))  WHEN CASE WHEN rt0.c2 THEN x'' END THEN LTRIM(vt1.c1) ELSE ((rt0.c1) NOTNULL) END, CAST(((vt1.c1) BETWEEN (t1.c34) AND (vt1.c1)) AS TEXT), NULL FROM t1, vt0, rt0, vt1 WHERE (MIN(((0X7aa33e8c) BETWEEN (NULL) AND (NULL)), 0.8546649787725383 COLLATE NOCASE, CAST(x'' AS INTEGER), ((0x3f939573)=('')))); -- 0ms;
SELECT DISTINCT AVG(((x'b4f7')%(rt0.c4))), (((rt0.c5))>=((((t1.c34)/(rt0.c1))))), (((('-681762170')||(rt0.c5)))/('\\nW7P')) FROM rt0 WHERE (json_extract(CASE x''  WHEN '' THEN x'' END, 'Ry'));SELECT LIKE('-1251517241', ((rt0.c3)>(rt0.c4)), '-') FROM vt0, rt0 WHERE (CASE 0.022294561431445037  WHEN NULL THEN 0.27739549091311166 WHEN x'' THEN '' WHEN x'' THEN NULL END COLLATE NOCASE); -- 1ms;
SELECT DISTINCT '' FROM vt1, t1 WHERE (CASE ((0.014733571216938413)>('1921196251'))  WHEN CASE '-1291562110'  WHEN 1208905733 THEN x'13dc' END THEN ((x'') IS TRUE) END); -- 0ms;
SELECT ((((((rt0.c1)/(vt0.c0)))OR(((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))))AND((NOT (t1.c0)))) FROM vt0, vt1, t1 WHERE ((~ (0.9542022093231256)) COLLATE RTRIM) LIMIT -1251517241;SELECT DISTINCT (~ (((t1.c56)-(vt0.c0)))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((((rt0.c1))=((rt0.c3)))) BETWEEN (LIKELY(t1.c56)) AND (CASE WHEN t1.c34 THEN rt0.c4 ELSE rt0.c5 END)) FROM t1, vt1 WHERE (json_array_length((('-716608137') BETWEEN (214019163) AND (-1609667732)), CAST(0.31142405478411805 AS NUMERIC)));SELECT DISTINCT (((NOT (rt0.c4)))>(((rt0.c4)IS(rt0.c4)))) FROM t1 WHERE (((((((((CASE x''  WHEN '-2119445925' THEN x'' END)OR((('')OR(0.9015951662226557)))))OR((((x'c275'))<>(('-1545965680'))))))OR((((x'')) NOT BETWEEN ((1879400281)) AND ((NULL))))))AND(((0.48792995572034414) NOT BETWEEN (0.10352567018208592) AND (NULL)))));SELECT DISTINCT (('-828957352')>(vt1.c0)) COLLATE BINARY FROM t1, vt1, rt0, vt0; -- 0ms;
SELECT LIKELIHOOD(DISTINCT (rt0.c2 IN ()), 0.9621734100293441) FROM vt0, t1, rt0 WHERE ((('')LIKE(((0.26859124134935386)&(x''))))); -- 0ms;
SELECT DISTINCT ((((((((((((CASE rt0.c5  WHEN t1.c0 THEN vt1.c1 WHEN '27255713' THEN t1.c34 WHEN t1.c34 THEN vt0.c0 END)OR(((((((((rt0.c4)AND(rt0.c2)))OR(t1.c0)))OR(t1.c0)))OR(vt1.c0)))))AND((vt1.c0 IN (rt0.c1)))))OR(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))AND(((((((((t1.c34)AND(rt0.c4)))AND(t1.c56)))OR(rt0.c2)))AND(rt0.c4)))))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c56)))))AND(((((((((((((vt1.c1)OR(rt0.c3)))AND(vt0.c0)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)))OR(t1.c56)))), vt1.c1, ((((((-1.015749224E9)AND(vt1.c0)))OR(t1.c34)))OR((NOT (vt1.c0)))) FROM t1, rt0;SELECT ALL '-1420248215' FROM vt0, rt0, t1 WHERE (CASE WHEN (NULL IN ()) THEN ((0.3297374745533266) IS TRUE) WHEN (x'264f' IN ()) THEN x'a92f' WHEN ((x'bae1b194')AND(-5.56977796E8)) THEN ((((((((NULL)AND('-735859149')))OR(-684070370)))OR('70927845')))AND('')) ELSE LIKELY(NULL) END); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c4 THEN t1.c34 END COLLATE RTRIM FROM rt0, vt1, vt0, t1 WHERE (((((NOT (x''))))==((CAST(0.28791256339976856 AS NUMERIC))))); -- 0ms;
SELECT DISTINCT ((((rt0.c5) BETWEEN (rt0.c3) AND (t1.c34))) IS TRUE) FROM rt0 GROUP BY vt0.c0 HAVING '],es▿(';SELECT DISTINCT CAST((t1.c0 IN (t1.c56)) AS REAL), 0Xfffffffff88012d2, vt0.c0 FROM vt0;SELECT DISTINCT NULL, PRINTF((vt1.c1 IN ())), rt0.c5 FROM vt0, rt0 WHERE ((((('-296311069')>('-684070370'))) BETWEEN (((((1.498488176E9)OR(NULL)))OR(0.5614047611335954))) AND (TYPEOF(DISTINCT NULL)))); -- 0ms;
SELECT x'' FROM t1 ORDER BY ((((t1.c34)OR((((rt0.c1))<=((rt0.c4))))))AND(rt0.c5)) ASC;SELECT AVG((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) OVER ( ORDER BY ((((rt0.c3)|(rt0.c3)))&(rt0.c4))  NULLS FIRST, '880821658' ASC) FROM rt0, t1;SELECT ALL DENSE_RANK() OVER ( ORDER BY ((CAST(vt1.c0 AS NUMERIC))&(-851071744)) GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt0, t1, rt0 WHERE ('\Q');SELECT ALL UNLIKELY(0xffffffff932bd790), (((rt0.c3))=((((vt1.c0)=(rt0.c0))))), (((+ ('')))/(rt0.c1 COLLATE NOCASE)) FROM vt1, vt0 ORDER BY ((((t1.c56) NOT BETWEEN (rt0.c5) AND (rt0.c4)))>>(((t1.c56) ISNULL))), CASE ((((((((t1.c34)AND(rt0.c1)))OR(t1.c56)))OR(rt0.c5)))OR(vt0.c0))  WHEN (- (rt0.c4)) THEN (+ (vt1.c0)) WHEN (((rt0.c5))<((rt0.c1))) THEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN LTRIM(t1.c0) ELSE (((rt0.c4))<((rt0.c0))) END  NULLS LAST;SELECT ALL GROUP_CONCAT((((-628006934))>=((0.052147856407883775))) COLLATE BINARY) OVER () FROM rt0, t1 GROUP BY ((((((((((rt0.c0)<=('214019163')))AND(rt0.c3)))OR((- (rt0.c1)))))AND((rt0.c0 IN ()))))AND(((vt1.c1) BETWEEN (vt0.c0) AND (t1.c56)))) HAVING '2048437173';SELECT DISTINCT ((rt0.c5 COLLATE RTRIM) BETWEEN (CASE rt0.c5  WHEN rt0.c4 THEN t1.c56 END) AND ((((rt0.c0, t1.c34, vt0.c0)) NOT BETWEEN ((vt1.c0, rt0.c1, t1.c56)) AND ((t1.c34, t1.c34, t1.c0))))) FROM rt0 WHERE (TRIM(DISTINCT CAST(NULL AS REAL))) ORDER BY (- (0.8560023381048996)) COLLATE RTRIM COLLATE NOCASE  NULLS LAST, ((((((rt0.c4)OR(rt0.c5)))OR(rt0.c1))) NOT BETWEEN (json_array_length(t1.c0, rt0.c2)) AND (CAST(t1.c56 AS BLOB))) DESC  NULLS FIRST, CASE WHEN CASE vt1.c1  WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c0 END THEN TIME(t1.c56, t1.c34, rt0.c5) WHEN NULLIF(vt1.c0, rt0.c2) THEN (- (rt0.c4)) WHEN (((t1.c0))>((rt0.c5))) THEN CAST(1.962711099E9 AS INTEGER) ELSE CASE WHEN t1.c56 THEN t1.c56 WHEN rt0.c1 THEN rt0.c4 WHEN t1.c0 THEN rt0.c4 ELSE rt0.c1 END END ASC;SELECT DISTINCT CASE WHEN rt0.c5 COLLATE NOCASE THEN ((rt0.c4) NOT NULL) ELSE load_extension(t1.c34, rt0.c5) END FROM vt0, t1, rt0, vt1 LIMIT 788149828 OFFSET -9223372036854775808; -- 0ms;
SELECT DISTINCT rt0.c5, NULL, ((((vt1.c0 IN (t1.c56)), ((t1.c0) NOTNULL), SUM(rt0.c1)))<((((x'') IS FALSE), (t1.c0 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) FROM t1 GROUP BY (((t1.c56)>>(rt0.c1)) IN ()) HAVING CAST((((rt0.c1))!=((t1.c56))) AS BLOB);SELECT DISTINCT AVG((((rt0.c2, rt0.c3, rt0.c5)) NOT BETWEEN ((rt0.c0, vt1.c0, rt0.c5)) AND ((rt0.c0, rt0.c0, vt1.c0)))) OVER () FROM t1, rt0, vt1; -- 0ms;
SELECT DISTINCT CASE (((rt0.c3, rt0.c1, rt0.c5))<((t1.c0, t1.c34, rt0.c3)))  WHEN vt1.c0 COLLATE RTRIM THEN (t1.c34 IN ()) WHEN (t1.c0 IN (NULL)) THEN 0Xffffffffb463ca36 WHEN NULL THEN ((vt1.c0) ISNULL) ELSE CASE WHEN rt0.c1 THEN rt0.c2 ELSE t1.c56 END END FROM vt0 WHERE (CAST(ABS(DISTINCT NULL) AS TEXT));SELECT DISTINCT CAST(0.8466102852050008 AS BLOB), ((t1.c56 COLLATE RTRIM)%(LTRIM(rt0.c4, vt0.c0))), (vt1.c0 IN ()) COLLATE BINARY FROM vt1;SELECT DISTINCT (rt0.c4 COLLATE NOCASE IN ()) FROM vt0, rt0 WHERE (NULL); -- 0ms;
SELECT ALL (rt0.c0 IN ()), CASE WHEN NULL THEN rt0.c3 COLLATE RTRIM END, ((t1.c34)%((rt0.c4 IN ()))) FROM vt0 WHERE (LIKELY(DISTINCT (((0.762736599542558)) NOT BETWEEN ((NULL)) AND ((0.7965600264130466)))));SELECT DISTINCT ((((~ (rt0.c5))))<>((((vt1.c1)LIKE(rt0.c3))))), x'', CASE WHEN (((t1.c34, vt1.c1, t1.c0)) BETWEEN ((rt0.c0, rt0.c1, t1.c34)) AND ((vt0.c0, rt0.c4, t1.c56))) THEN (+ (vt0.c0)) END FROM vt1 WHERE ((NOT ((+ (-1.015749224E9)))));SELECT DISTINCT ((((((((((((CAST(vt1.c1 AS TEXT))OR(UNLIKELY(x''))))OR(((1534487652) BETWEEN (rt0.c3) AND (t1.c0)))))AND(((0.703796276826371) NOT BETWEEN (rt0.c2) AND (vt1.c0)))))AND((- (rt0.c1)))))AND(CAST(t1.c56 AS REAL))))AND((rt0.c0 IN ()))) FROM vt0 WHERE ((((((((((((NULL, NULL, NULL)) BETWEEN ((NULL, 0.9677267729748895, 0Xffffffffcdc22580)) AND ((0.3300428788509542, 6.63862863E8, 0.4517433271674245))))OR(CASE NULL  WHEN '1448885702' THEN '2091659109' ELSE '!8' END)))AND((('\nO') BETWEEN (NULL) AND ('-2026461394')))))OR(((((0.041245608096400654)AND(NULL)))AND(NULL)))))AND(((NULL) BETWEEN (-1.273501068E9) AND (''))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) BETWEEN (vt0.c0) AND (t1.c34)) AS REAL) FROM vt0, t1, rt0, vt1 WHERE (CAST(((0.5893855507514019)<<('JW')) AS INTEGER)) ORDER BY LIKELIHOOD(DISTINCT ((rt0.c4) IS TRUE), 0.1547856568674012)  NULLS FIRST; -- 0ms;
SELECT ALL SQLITE_SOURCE_ID(), (((('H')OR((rt0.c3 IN ()))))OR(CAST(rt0.c0 AS BLOB))), ((((((vt1.c0)AND(rt0.c1)))AND(t1.c34)))|(UNLIKELY(t1.c0))) FROM rt0, t1, vt0;SELECT DISTINCT NTH_VALUE((((0Xb39ade4 IN (rt0.c2)))GLOB((- ('-1090152126')))), json_extract(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c1, (+ (vt1.c1)), x'd6ac1ebf')) OVER ( PARTITION BY CASE ((t1.c0)=(t1.c0))  WHEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c56)) THEN ((t1.c34) NOT NULL) WHEN vt1.c1 THEN (((t1.c34, rt0.c1, rt0.c2))>((t1.c0, rt0.c0, t1.c34))) WHEN (NULL IN ()) THEN ((rt0.c2) BETWEEN (t1.c0) AND (vt1.c1)) ELSE 5.27775244E8 END, (((((vt1.c0)) BETWEEN ((rt0.c5)) AND ((NULL)))) ISNULL)), ((rt0.c1) ISNULL), ((vt1.c1)==(GROUP_CONCAT(-6.3838003E8))) FROM rt0, vt1 WHERE ((((x'3d23' IN ())) IS FALSE)) GROUP BY SQLITE_SOURCE_ID();SELECT ((COUNT(-2075625353)) BETWEEN (((((vt1.c0)OR(x'')))OR(rt0.c3))) AND ((((rt0.c2))>((rt0.c1))))) FROM vt0;SELECT DISTINCT (TOTAL(vt0.c0) IN ()) FROM vt0, t1, vt1; -- 0ms;
SELECT ((((vt1.c1)OR(1020200718)))AND(MAX(t1.c34))), TOTAL(((((x'')OR(rt0.c0)))OR(rt0.c5))), CAST(((t1.c56)+(vt0.c0)) AS REAL) FROM t1, vt1 WHERE (((((NULL)%(0x3ba4e248))) NOTNULL)) GROUP BY ((-3.1851645E7) NOT NULL);SELECT DISTINCT (((((t1.c56, t1.c34, rt0.c2))=((rt0.c5, vt1.c1, vt0.c0))))>=(((t1.c56) BETWEEN (rt0.c3) AND (0.5031170606716271)))) FROM vt1, rt0 WHERE ((~ (CAST(x'2dd1' AS TEXT)))) ORDER BY ((TYPEOF(vt1.c0)) IS FALSE) DESC  NULLS FIRST;SELECT t1.c0 FROM t1, vt0, rt0, vt1 WHERE ((((~ ('9껲4D>')))+(8.6836334E8 COLLATE RTRIM))); -- 0ms;
SELECT ALL GROUP_CONCAT(((vt1.c1)=(vt1.c1))), (((TYPEOF(DISTINCT vt1.c0)))>=((((rt0.c4)<(NULL))))), (((rt0.c1)) NOT BETWEEN ((((('-2004485316')) NOT BETWEEN ((t1.c56)) AND ((rt0.c1))))) AND ((COUNT(t1.c56)))) FROM rt0, vt0 WHERE ((((0.303062092534217 IN (x'')))-(((x'a01c') ISNULL))));SELECT AVG((- (rt0.c4))) FILTER(WHERE ((t1.c0) NOTNULL) COLLATE BINARY) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt0;SELECT ALL (((((rt0.c5))>=((rt0.c3))))%(t1.c34 COLLATE NOCASE)) FROM vt0, vt1, rt0;SELECT DISTINCT CASE WHEN ABS(vt1.c0) THEN ((((rt0.c5)OR(vt1.c1)))AND(rt0.c2)) ELSE ((t1.c0) BETWEEN (NULL) AND (rt0.c4)) END, LAST_VALUE(((((((((rt0.c4 COLLATE NOCASE)OR(((rt0.c5)OR(t1.c56)))))AND(t1.c56 COLLATE RTRIM)))OR(rt0.c2 COLLATE BINARY)))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c5))))) OVER ( ORDER BY ((rt0.c3)+(vt1.c1)) COLLATE NOCASE ASC), (+ (AVG(vt1.c0))) FROM vt1, t1, rt0 WHERE ((NOT (((((((((-1.697460567E9)AND(NULL)))AND('0q.2u.+})')))AND('Q樐Gc9')))OR('117470478'))))); -- 1ms;
SELECT ALL COALESCE(rt0.c5, t1.c0) COLLATE NOCASE FROM rt0, vt0 WHERE (load_extension(1167936802) COLLATE NOCASE);SELECT DISTINCT GROUP_CONCAT(((t1.c34)/(rt0.c0))) FROM t1, vt0, vt1, rt0; -- 0ms;
SELECT ALL (NOT (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) FROM vt1, rt0;SELECT DISTINCT (((((x'', vt1.c0, rt0.c2))<=((t1.c34, 0.8477346017870517, rt0.c3))))GLOB((NOT ('LQ')))) FROM rt0 WHERE (((((((((NULL)OR('Ax')))OR('-1468833079')))OR((('0.3779598907626922')IS('{}')))))OR(x'' COLLATE BINARY)));SELECT CASE LIKELY(DISTINCT vt0.c0)  WHEN (+ (vt1.c0)) THEN (x'' IN (rt0.c2)) END FROM t1 WHERE (((((x'c03a') BETWEEN (0.6432010906848126) AND (0x3075c556)))!=((('-819077752')>>('WI9!7Hqc'))))) LIMIT -842914432;SELECT DISTINCT (((~ (rt0.c2)))>(0.3605925234656383)) FROM vt0, vt1, t1 ORDER BY (((~ (t1.c56)))OR(((t1.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2)))) DESC  NULLS FIRST, (('*|vK(KR}W') ISNULL) DESC;SELECT (GLOB(t1.c34, t1.c0) IN ()) FROM vt1, t1, vt0 GROUP BY (((((rt0.c4)OR(rt0.c0)))AND(t1.c34)) IN ()), (+ (CASE vt1.c1  WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c5 ELSE vt0.c0 END)), (- (CASE WHEN t1.c34 THEN x'a698' END)) HAVING ((((rt0.c3) NOT NULL))IS(rt0.c3 COLLATE NOCASE));SELECT DISTINCT rt0.c4, 0Xffffffffce971d58, 0.6157071948319908 FROM rt0, vt0 WHERE (((CAST(0.3735337866424332 AS REAL)) BETWEEN (x'') AND (CASE WHEN '' THEN '-1201547822' END))); -- 0ms;
SELECT DISTINCT json_object(CASE WHEN x'dd15' THEN t1.c34 WHEN rt0.c5 THEN NULL WHEN rt0.c3 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c5 THEN vt1.c1 ELSE rt0.c4 END), COALESCE(MAX(rt0.c0), ((vt1.c1) IS FALSE), MIN(rt0.c5), (rt0.c2 IN (t1.c56))), (- ((t1.c34 IN ()))), LEAD(x'', ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))IS NOT((((vt1.c0))<=(('lw('))))), (((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))==((vt1.c0)))) OVER (), AVG(((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2))) OVER () FROM vt1 WHERE ((0 IN ()) COLLATE BINARY);SELECT ALL ((((rt0.c4))<((t1.c0))) IN ()) FROM vt1, rt0, t1, vt0 WHERE ((((0.22194783669223916) BETWEEN (NULL) AND ('첧U')) IN ())) ORDER BY ((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c5)))OR(((rt0.c2) ISNULL))))AND(((rt0.c4)IS NOT(rt0.c1)))) DESC  NULLS LAST LIMIT -321816140 OFFSET 1167936802; -- 0ms;
SELECT DISTINCT '' FROM vt0, vt1; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<(0.7103014159249136 COLLATE RTRIM)), LIKELY(((rt0.c1) NOTNULL)), LIKELIHOOD((~ (vt0.c0)), 0.6737170695604482) FROM t1;SELECT DISTINCT (((((t1.c34))>((x'a9dc')))) NOT BETWEEN (((rt0.c5)/(rt0.c2))) AND (t1.c0 COLLATE BINARY)) FROM rt0;SELECT ((rt0.c1) BETWEEN (rt0.c4) AND (x'')) COLLATE BINARY FROM vt1, rt0, vt0, t1 WHERE ((((('-684070370')) BETWEEN ((NULL)) AND (('1046677139'))) IN (((x'')-(0.3061936564218244))))); -- 0ms;
SELECT COUNT(x'') OVER () FROM vt1 LIMIT -1489929214; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN (t1.c56, t1.c0)))LIKE(((vt0.c0)AND(t1.c56)))), CAST(t1.c0 AS INTEGER), GROUP_CONCAT(NULL) FROM t1 WHERE (NULL);SELECT (((vt1.c0)) BETWEEN ((CASE WHEN rt0.c4 THEN vt1.c1 ELSE 0.8543288258477517 END)) AND ((((vt1.c0)>>(vt0.c0))))), AVG(((((vt0.c0)OR(t1.c56)))AND(rt0.c3))) FILTER(WHERE (CASE rt0.c4  WHEN rt0.c5 THEN vt0.c0 END IN ())) OVER (), CASE SUBSTR(rt0.c5, rt0.c3)  WHEN COALESCE(DISTINCT 0.48946319546454453, vt1.c1) THEN vt1.c0 COLLATE RTRIM END FROM t1, vt1, rt0 WHERE ((NULL COLLATE RTRIM IN ()));SELECT DISTINCT COUNT(*) FROM rt0; -- 0ms;
SELECT ALL ((GROUP_CONCAT(vt0.c0))&(((rt0.c2)-(rt0.c2)))), CAST(CASE WHEN t1.c0 THEN rt0.c1 ELSE rt0.c2 END AS REAL), ((UPPER(rt0.c2))!=((rt0.c2 IN ()))), ((t1.c34 COLLATE BINARY) IS TRUE), (((((((((rt0.c3 IN ()))AND(CAST(t1.c34 AS REAL))))OR(((vt1.c1) NOT BETWEEN (t1.c34) AND (rt0.c1)))))OR((NOT (vt0.c0)))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (t1.c34)))) FROM rt0, vt0, t1, vt1; -- 0ms;
SELECT DISTINCT CASE vt1.c0  WHEN (~ (vt0.c0)) THEN ((((rt0.c2)OR(rt0.c4)))OR(rt0.c1)) END, '', vt1.c1 FROM vt1, rt0 WHERE ((((((('\')|(0.46595764300919484)))OR(LTRIM(-626752425, 0.7361886802333125))))OR('LK睆' COLLATE RTRIM)));SELECT ALL (('384285114') BETWEEN (((vt1.c1) NOTNULL)) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END)) FROM vt0, vt1 RIGHT OUTER JOIN t1 ON CASE WHEN CASE rt0.c1  WHEN vt1.c1 THEN t1.c0 ELSE vt1.c1 END THEN (((NULL, rt0.c0, vt1.c0))=((x'', rt0.c3, rt0.c0))) ELSE CAST(rt0.c2 AS REAL) END;SELECT DISTINCT (((0.016833992303325163 COLLATE RTRIM, rt0.c4, CASE rt0.c4  WHEN x'' THEN t1.c0 WHEN '1724145239' THEN vt1.c1 WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c5 END))>=((('-430385171' IN ()), LIKE(rt0.c5, 'EdCI4', '摝'), CASE rt0.c5  WHEN rt0.c3 THEN t1.c34 ELSE rt0.c4 END))) FROM vt1, vt0, rt0 LIMIT 1851163955 OFFSET -296269233;SELECT ALL COUNT(((((t1.c0)OR(rt0.c0)))AND(rt0.c3))) FILTER(WHERE NULL) OVER () FROM vt0, vt1 WHERE (HEX(DISTINCT ((((x'14f9')AND(0.130534903860416)))OR(NULL))));SELECT DISTINCT ((((rt0.c1) ISNULL))-((rt0.c2 IN (vt1.c0)))) FROM rt0, vt0, t1, vt1 WHERE ((~ (NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((((vt0.c0)GLOB(t1.c0)))OR(((-6.73231737E8)||(vt1.c0)))))AND(CASE vt1.c1  WHEN rt0.c4 THEN rt0.c1 END)) FROM rt0, t1, vt1 WHERE ((((0X4d6afcac, NULL, '-1902201409')) BETWEEN ((((x'')||(x'')), (+ ('286974017')), ((x'') NOT BETWEEN (1747530575) AND (0Xffffffffa4f6ea50)))) AND ((((-1.10596656E9) BETWEEN ('214019163') AND ('655582301')), (~ ('1298857132')), -6.73231737E8))));SELECT 'Y9' FROM t1 WHERE (HEX((-1382609097 IN ()))) LIMIT 2140405563; -- 0ms;
SELECT ALL CASE ((NULL) NOT BETWEEN (t1.c0) AND (vt0.c0))  WHEN COUNT(rt0.c3) THEN ((NULL)GLOB(rt0.c1)) END, (('1') BETWEEN (((rt0.c2)IS(rt0.c4))) AND ((NOT (rt0.c5)))), COUNT(((t1.c0)*(x'')) COLLATE NOCASE) OVER () FROM vt0, vt1 UNION SELECT ALL ((((t1.c56) ISNULL))-(((t1.c56)+(t1.c56)))), CAST(CAST(t1.c34 AS REAL) AS INTEGER), (ABS(DISTINCT NULL) IN ()) FROM vt1, vt0, rt0, t1 WHERE (CAST(CAST('-1486353758' AS REAL) AS REAL));SELECT ALL (+ (rt0.c0 COLLATE NOCASE)) FROM t1, rt0 WHERE (0.17204175003515754) LIMIT -611777721 OFFSET 1519619720; -- 0ms;
SELECT DISTINCT ((MIN(t1.c56)) BETWEEN ((~ ('q25+zif'))) AND (t1.c34 COLLATE BINARY)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (NOT ((('-1524029024')<>(rt0.c2)))), COUNT(CAST(NULL AS TEXT) COLLATE BINARY), vt1.c0, PERCENT_RANK() OVER (), MAX((NOT (t1.c34))) FROM vt1;SELECT DISTINCT ((x'')%(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END)) FROM vt1, rt0, vt0, t1; -- 0ms;
SELECT DISTINCT CAST(ABS(rt0.c4) AS TEXT) FROM vt1, rt0 WHERE ((((((((((~ ('0.22194783669223916')))OR((('')*(NULL)))))OR((((0.2922500590351067, NULL, '0.8480301005509477')) NOT BETWEEN ((-9.1896219E8, -1645631723, x'66b1fcdc')) AND ((x'', NULL, '-2029232707'))))))AND('Be''LD')))AND(json_array_length(x'')))) LIMIT -1416988652 OFFSET 398948863; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (rt0.c5) AND (vt1.c0)) AS REAL) FROM rt0, vt1;SELECT DISTINCT (((vt1.c1, (((t1.c0))<((vt0.c0))), (((t1.c0))<=((rt0.c0)))))<>((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), CAST(t1.c34 AS INTEGER), ((vt1.c0) IS FALSE)))) FROM vt1, rt0;SELECT DISTINCT ((((rt0.c0) IS FALSE))<<(((rt0.c4)<<(rt0.c5)))) FROM rt0, vt1, vt0, t1 WHERE (((('or', NULL, NULL)) NOT BETWEEN ((CAST(x'' AS REAL), NULL, CASE WHEN 0.979406827318804 THEN 0.7137494604017348 WHEN -1200184899 THEN x'' WHEN -39792611 THEN x'' ELSE x'b709' END)) AND ((json_array_length('2141600020', ''), (('-1148236157')<(x'')), (('1601027977') IS TRUE)))));SELECT ALL COUNT(*) OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL SUM(((rt0.c2) IS TRUE)) FROM t1, rt0; -- 0ms;
SELECT DISTINCT TOTAL(COALESCE(rt0.c2, 0.8127229560569292)) FILTER(WHERE (((((rt0.c1 IN ()))OR(((((t1.c0)AND(rt0.c0)))OR(vt1.c0)))))AND(((((((((((((vt1.c1)AND(t1.c0)))OR(rt0.c5)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4))))) OVER ( ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c5)) AS INTEGER) DESC) FROM vt0, vt1, rt0 ORDER BY (- (t1.c56 COLLATE BINARY)) DESC;SELECT DISTINCT ((LIKELY(vt0.c0))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.6863818286984754))), MIN((- (vt1.c0))), ((vt1.c0) BETWEEN (rt0.c4) AND (vt1.c0)) COLLATE NOCASE, ((((vt0.c0)<(rt0.c4)))/(CAST(t1.c0 AS NUMERIC))), ((TRIM(rt0.c0)) NOT BETWEEN ('-918962190') AND (CASE vt1.c0  WHEN '1852557478' THEN t1.c0 END)) FROM t1, vt1, rt0 WHERE (((((1e500) ISNULL)) NOT NULL));SELECT MAX(CASE rt0.c5  WHEN vt1.c1 THEN '' END) COLLATE RTRIM FROM vt0, vt1 WHERE (TOTAL_CHANGES());SELECT DISTINCT '', rt0.c0, CAST(rt0.c3 AS BLOB) FROM rt0, vt1, t1 WHERE (((LIKELIHOOD(-6.3838003E8, 0.38884941604011236)) ISNULL)); -- 0ms;
SELECT DISTINCT (((((((((((('')OR(rt0.c1)))AND(vt0.c0)))AND(((rt0.c1) NOT BETWEEN (vt1.c0) AND (t1.c0)))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((t1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))))AND(vt1.c0)) FROM vt0, t1, rt0;SELECT DISTINCT (- (((t1.c56) NOT BETWEEN (t1.c0) AND (rt0.c0)))) FROM vt1, vt0, t1, rt0 WHERE ((((-6.8407037E8, x'', 0.8003019646701065, '1585699287', 0.7801068659012625)) BETWEEN ((((NULL) BETWEEN (x'') AND (NULL)), CASE x''  WHEN '0.7184284521644209' THEN x'bf3d' END, 0.9469783944875055 COLLATE BINARY, (0.45101948357278676 IN ()), (((NULL)) NOT BETWEEN (('oMKkD')) AND ((x''))))) AND ((((NULL) NOT BETWEEN (NULL) AND ('Oe')), ((((((((((((((((NULL)OR(NULL)))OR('')))OR('xq軒厐BL6e')))OR('-673231737')))AND(x'')))AND(NULL)))OR('4/')))OR(NULL)), (('\nl')AND(0.7433561021254862)), 0.5726772256440696 COLLATE BINARY, (NULL IN ()))))); -- 0ms;
SELECT DISTINCT TOTAL(TRIM(rt0.c5)) FILTER(WHERE (((vt1.c0, rt0.c1, t1.c56)) NOT BETWEEN (('zAC|{Z［译v', ((t1.c56) ISNULL), CASE rt0.c3  WHEN 0.5077548083694945 THEN x'' ELSE rt0.c4 END)) AND ((((rt0.c4) BETWEEN (t1.c56) AND (vt1.c1)), TRIM(DISTINCT t1.c56, rt0.c4), (((rt0.c5))<((t1.c0))))))) OVER ( ROWS  CURRENT ROW), ((CAST(0.35118092842980553 AS TEXT))|('kg')), ((vt1.c0) BETWEEN (rt0.c5) AND (t1.c56)) COLLATE RTRIM FROM rt0, vt1, vt0, t1 WHERE (((((((((((-146380894)AND(0xfffffffff287b845)))OR('0.26859124134935386')))OR('o]e[r+A')))OR(NULL)))GLOB(((NULL) BETWEEN (0.27401178018691696) AND ('444696936'))))); -- 0ms;
SELECT ALL (((NOT (t1.c34))) IS FALSE) FROM vt1, vt0 WHERE (((TRIM('룏﹓O>L'))>((482310806 IN ())))) GROUP BY (((vt1.c0 COLLATE BINARY, rt0.c4 COLLATE RTRIM, CASE WHEN rt0.c4 THEN rt0.c5 ELSE t1.c0 END))>((x'', (((((((((((('727897697')OR(vt0.c0)))AND(vt1.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(t1.c56)))AND(0Xffffffffd18134c5)), ((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c3)))));SELECT DISTINCT ROW_NUMBER() OVER (), NULL, NULL FROM rt0, vt1; -- 0ms;
SELECT DISTINCT NTH_VALUE(((CAST(vt1.c1 AS TEXT)) NOT BETWEEN (((((940182543)OR(vt1.c1)))AND(t1.c0))) AND (ABS(t1.c56))), (((NOT (vt1.c0)))>>(((t1.c0) NOT BETWEEN (vt1.c1) AND (x''))))) OVER (), (((((t1.c34)<=(t1.c56))))<(((((rt0.c3))<((rt0.c0)))))), CASE WHEN TOTAL(0.37455231113242093) THEN (vt0.c0 IN (rt0.c4, vt1.c1)) ELSE (((rt0.c5))>(('880821658'))) END, 0.22151567292138719, COUNT(*) FROM vt0, t1, vt1;SELECT DISTINCT FIRST_VALUE(COALESCE(((t1.c0) BETWEEN (rt0.c2) AND (rt0.c5)), load_extension('0.790193985446406'))) OVER (), SUM('663862863'), NTILE((((((((t1.c56, t1.c0, rt0.c1)) NOT BETWEEN ((t1.c34, rt0.c0, rt0.c5)) AND ((rt0.c3, rt0.c4, rt0.c5))))AND((+ (rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (x'0d9c') AND (rt0.c5))))) OVER () FROM t1, rt0;SELECT ((ABS(rt0.c5)) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (SQLITE_VERSION())), ((((((((vt1.c1)OR('yQ')))AND(vt1.c1)))AND(vt0.c0)))OR(rt0.c4)) COLLATE RTRIM, (((CASE WHEN 0.4227817906891813 THEN rt0.c4 ELSE rt0.c2 END))<=((((rt0.c1)-(rt0.c0))))) FROM vt0;SELECT ALL (((((rt0.c5) NOTNULL), ((rt0.c5)AND(t1.c56)), (~ (vt1.c1))))<>((json_quote(vt1.c0), (((rt0.c1))>((vt1.c1))), ((vt1.c1) IS FALSE)))) FROM rt0;SELECT ALL t1.c56 FROM vt0, vt1, rt0, t1 WHERE (CAST(CAST('	?vt' AS REAL) AS BLOB)); -- 0ms;
SELECT '521286756', ((((((((CASE WHEN x'c7b5' THEN rt0.c1 WHEN x'' THEN vt1.c1 WHEN vt0.c0 THEN t1.c56 ELSE vt1.c1 END)AND(0.6556463623143917)))AND((rt0.c3 IN ()))))OR((+ (rt0.c2)))))OR(((t1.c0)-(rt0.c3)))), DENSE_RANK() OVER () FROM vt1, t1, rt0 WHERE (GLOB(0.11866438252003286, CAST(NULL AS INTEGER))); -- 0ms;
SELECT ALL (((COUNT(rt0.c3), ((t1.c34) IS FALSE), ((vt1.c1)=(vt1.c0))))<(((~ (rt0.c2)), COUNT(t1.c0), IFNULL(0.7955523215325633, t1.c0)))) FROM vt1, t1, vt0, rt0; -- 0ms;
SELECT LTRIM('i', 0.7216722375304907) COLLATE RTRIM, (CAST(rt0.c0 AS INTEGER) IN ((((t1.c34)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))), CASE WHEN ((rt0.c2)>>(rt0.c4)) THEN x'' END, (+ (((vt0.c0)LIKE(t1.c34)))), ((((((((((((((t1.c56)AND(t1.c0)))OR(vt1.c0)))AND(rt0.c4)))AND(rt0.c4)))AND(t1.c34)))AND(rt0.c1))) BETWEEN (load_extension(rt0.c3, rt0.c2)) AND (((t1.c56) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) FROM vt0 WHERE ((x'b769' IN ())) LIMIT -681762170;SELECT DISTINCT (NOT (((t1.c34) IS FALSE))) FROM vt1, vt0;SELECT ALL (((((rt0.c1, rt0.c4, vt1.c0, t1.c34, t1.c34)) NOT BETWEEN ((x'', rt0.c4, vt1.c0, NULL, vt1.c0)) AND ((vt0.c0, '1831051579', vt1.c0, vt0.c0, rt0.c2))))IS NOT(CAST(t1.c34 AS BLOB))) FROM vt0 GROUP BY ((((vt1.c0)OR(LOWER(t1.c34))))OR(rt0.c2 COLLATE NOCASE)) HAVING (((t1.c56 IN ()))>>('-225635711'));SELECT 1.747925763E9, CAST(((NULL) NOT BETWEEN (rt0.c5) AND (rt0.c0)) AS NUMERIC), CASE CAST(rt0.c4 AS TEXT)  WHEN t1.c0 THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END WHEN (rt0.c5 IN ()) THEN ((t1.c0) IS TRUE) WHEN (((0.26381228740388274)) BETWEEN ((rt0.c0)) AND ((vt1.c0))) THEN (vt0.c0 IN ()) ELSE (rt0.c4 IN ()) END, CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c1)) THEN (t1.c56 IN ()) ELSE (vt0.c0 IN ()) END, t1.c34 FROM rt0, t1, vt0, vt1 GROUP BY ((('m\v\nw' COLLATE RTRIM))=((((x'9637') NOTNULL)))); -- 0ms;
SELECT CASE WHEN (rt0.c5 IN ()) THEN COUNT(*) END FROM rt0 CROSS JOIN vt0 ON LOWER(((rt0.c1)>(rt0.c3))) WHERE (0.976821982663665) GROUP BY '-1568542770' HAVING (- (t1.c56 COLLATE BINARY));SELECT ALL ((t1.c0) NOT NULL) FROM vt1, vt0, rt0, t1; -- 0ms;
SELECT DISTINCT NTH_VALUE('-1e500' COLLATE RTRIM, (~ (((t1.c34)<<(t1.c0))))) OVER () FROM t1, vt0 WHERE (((json(x'')) NOT BETWEEN (0.6078430977770461) AND (((((((((x'4f1b')OR(x'')))AND(0.9738288766381734)))AND(444696936)))OR(NULL)))));SELECT DISTINCT vt1.c0, rt0.c4, ((((((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)OR(((rt0.c1) BETWEEN (rt0.c5) AND (t1.c0)))))AND(CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN 0.18938849775944178 WHEN rt0.c5 THEN rt0.c0 END)))OR(CASE rt0.c5  WHEN vt0.c0 THEN t1.c0 END)))AND(NULL)) FROM vt0, t1, rt0 WHERE ((~ ((('803') BETWEEN (0.70024061618742) AND (0.15053741944112609)))));SELECT ALL 0.5250584034909479 FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT t1.c56 FROM vt0 WHERE ((((((x''))<((''))))==((((0.35758353290194544)) NOT BETWEEN ((NULL)) AND ((0.056880047959112945)))))) LIMIT -1900858620 OFFSET 675834828;SELECT ((((((rt0.c3)AND(t1.c0)))AND(t1.c0))) NOT BETWEEN (MAX(t1.c0)) AND (CAST(vt1.c1 AS TEXT))) FROM vt0 ORDER BY (((rt0.c4)) BETWEEN ((vt1.c0)) AND ((0.22412852001640227))) COLLATE NOCASE ASC  NULLS FIRST LIMIT 950778649;SELECT ((((vt1.c0)%(vt0.c0)))+(t1.c56 COLLATE NOCASE)) FROM t1 WHERE (((('-!x*%{M0', 0.5366367500913422, NULL)) BETWEEN ((CAST('-483318370' AS INTEGER), (0.11075540648963689 IN ()), x'd10a07df' COLLATE NOCASE)) AND ((CAST(0.9211072044585321 AS NUMERIC), CASE NULL  WHEN NULL THEN NULL END, CAST(0.19866290890754346 AS REAL)))));SELECT ((((GROUP_CONCAT(t1.c0))OR(((t1.c0)>=(rt0.c0)))))AND(((rt0.c3) ISNULL))) FROM rt0, t1, vt1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c0)LIKE(vt1.c0)) THEN ((rt0.c0)>(rt0.c0)) END FROM vt1, t1 WHERE (0.8953227977891947);SELECT DISTINCT ',S%v' FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT ((((vt0.c0)%(rt0.c4)))>=(((((rt0.c2)OR(0.6881894454274806)))AND(t1.c0)))) FROM rt0, vt1, vt0, t1 WHERE (CASE WHEN ((x'') NOT BETWEEN (NULL) AND ('O')) THEN ((0xffffffffa71f57ce) BETWEEN (x'') AND (1.962711099E9)) ELSE x'' END); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)|((+ (x'')))) FROM vt0, rt0, vt1 LIMIT 38537132 OFFSET -296269233; -- 4ms;
SELECT DISTINCT (((((t1.c34 IN ()))AND(vt0.c0)))AND(CAST(vt1.c0 AS INTEGER))), (NOT (vt1.c1)), 't/!YZ\r' FROM rt0;SELECT ALL ((((((vt1.c1)||(rt0.c0)))AND(QUOTE(t1.c0))))AND(vt1.c1)) FROM vt1 FULL OUTER JOIN t1 ON (~ (((((NULL)AND(vt0.c0)))OR(t1.c34)))) LEFT OUTER JOIN vt0 ON (('SG''᠂') NOTNULL) INNER JOIN rt0 ON ((((t1.c56)<<(rt0.c1)))IS(rt0.c1));SELECT DISTINCT CAST(rt0.c1 AS BLOB) COLLATE RTRIM FROM t1, rt0 WHERE (HEX(DISTINCT CAST(0x16a86361 AS INTEGER))); -- 0ms;
SELECT CASE vt1.c1  WHEN vt1.c0 THEN rt0.c4 END COLLATE BINARY FROM rt0, t1, vt1 WHERE (0.601572734540474); -- 0ms;
SELECT DISTINCT (((SQLITE_VERSION(), ((rt0.c3) BETWEEN (rt0.c3) AND (t1.c0)), json(vt1.c1)))<((NULL, ((t1.c0) BETWEEN (vt0.c0) AND (rt0.c0)), SQLITE_COMPILEOPTION_USED(rt0.c4)))) FROM vt0, t1, rt0, vt1; -- 1ms;
SELECT '\n' FROM rt0, vt1, t1, vt0 WHERE ((NOT (NULL))); -- 0ms;
SELECT DISTINCT ((((((rt0.c2)OR(rt0.c1)))OR(vt1.c1)))/(((((rt0.c0)AND(rt0.c4)))AND(rt0.c5)))), (vt1.c0 IN ()) COLLATE BINARY, ((rt0.c5 COLLATE BINARY)==((('F5')/(vt1.c1)))) FROM vt0, vt1 WHERE ((~ (((((0xffffffffe7b1f699)AND(0.5071503227736635)))AND(x'')))));SELECT ALL (((((vt1.c1)=(rt0.c2))))!=((TRIM(rt0.c0)))) FROM rt0, vt1, vt0 WHERE (((0.3183503277748948 IN ()) IN ())) LIMIT -1103990296 OFFSET -1442460810; -- 0ms;
SELECT DISTINCT ((((((((0X8bdebde)AND((~ ('0.27287744308578665')))))OR((- (vt1.c0)))))OR(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c2 AS NUMERIC))), ((((((((MAX(vt0.c0, rt0.c5))AND(CASE rt0.c5  WHEN t1.c56 THEN rt0.c3 END)))OR(((rt0.c5)>(x'')))))OR(LIKELY(DISTINCT vt1.c0))))AND(((rt0.c3)-(rt0.c1)))), t1.c34 FROM vt0, rt0 NOT INDEXED, vt1 WHERE (((((~ (NULL))))=((UNLIKELY(DISTINCT 0X643dce52)))));SELECT ((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN (((t1.c56) BETWEEN (rt0.c1) AND (t1.c0))) AND ((x'' IN (x'', vt1.c1)))) FROM rt0, t1, vt1, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((((vt1.c0 IN (rt0.c0)))OR(CASE t1.c0  WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c4 WHEN t1.c56 THEN vt1.c1 ELSE rt0.c4 END)))AND(GROUP_CONCAT(rt0.c5))), MAX((+ (t1.c56))), (((rt0.c4 IN (vt1.c1)))==(NULLIF('', vt0.c0))) FROM t1, rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT (((t1.c0)) NOT BETWEEN (((t1.c34 IN (0.8401960557146805)))) AND (((vt0.c0 IN ())))) FROM t1, vt0, vt1, rt0; -- 1ms;
SELECT ((((rt0.c1)OR(((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)))))AND(((((t1.c0)AND(vt1.c0)))OR(x'd21c')))) FROM vt0 ORDER BY ((CAST(vt1.c1 AS REAL)) NOT NULL) LIMIT 1649815453 OFFSET 655582301;SELECT DISTINCT -2.19165094E8 FROM vt1, vt0, t1 WHERE (CASE (x'' IN (-1.54596568E9, '-1502704440'))  WHEN (((-268013564))==((-1126857529))) THEN (('G') BETWEEN ('38537132') AND (0xffffffffbb8c32d5)) ELSE (~ (0.5131676930709235)) END); -- 0ms;
SELECT DISTINCT CAST((((rt0.c5))<>((vt1.c1))) AS REAL) FROM t1 ORDER BY ((rt0.c2) NOT BETWEEN (vt1.c1) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS LAST;SELECT DISTINCT COUNT(((t1.c56)IS(vt1.c1))) FROM vt1;SELECT DISTINCT '8zX,0^ ', ((((((((((((((((t1.c0)OR(rt0.c3)))OR(t1.c0)))OR((NOT (rt0.c4)))))OR(((t1.c56)/(0.20726948161795022)))))OR(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END)))OR((- (vt0.c0)))))OR(t1.c0 COLLATE NOCASE)))OR((- (t1.c34)))), AVG(CASE WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 END) OVER () FROM vt1 WHERE ((((NULL)) NOT BETWEEN (((((0x5a938e88)) BETWEEN (('-834408909')) AND (('45804803'))))) AND ((CASE 0xffffffff82153647  WHEN NULL THEN NULL ELSE 'TG' END)))) ORDER BY ((((LOWER(vt0.c0))AND(((rt0.c3)%(t1.c56)))))AND(CAST(t1.c56 AS REAL))) ASC  NULLS LAST, CAST(((rt0.c5) BETWEEN (rt0.c4) AND (t1.c56)) AS NUMERIC);SELECT ALL CAST((rt0.c1 IN ()) AS TEXT), CAST(CASE WHEN rt0.c3 THEN vt1.c1 END AS BLOB), (((((rt0.c1))<=((vt1.c0))))GLOB(((t1.c34) NOTNULL))) FROM t1, vt0 WHERE (CAST(('1515947795' IN ()) AS INTEGER));SELECT ALL ((((vt1.c1)>(t1.c34)))|(rt0.c2)) FROM t1, vt1, rt0; -- 0ms;
SELECT '409728885' COLLATE NOCASE, -150120321, TYPEOF(DISTINCT CASE WHEN 0X176d8e7d THEN rt0.c1 ELSE vt1.c1 END) FROM vt0 WHERE (((('w', NULL, -1177464345)) NOT BETWEEN ((CAST(0.6714734206188319 AS INTEGER), (('a9twHTwN{') NOTNULL), ((((0.7773666856248487)OR(x'')))AND('-41166896')))) AND (((((0.3380183792572917, x'', '30483472')) BETWEEN ((0.7553594465473132, x'f2de', '')) AND ((x'', '1N', NULL))), -263174230 COLLATE RTRIM, ((((((((0.9910837564662247)AND(NULL)))AND(0x670202db)))OR(NULL)))OR(x'38bc0559'))))));SELECT DISTINCT (((t1.c56 IN ()))/(((rt0.c1)>>(rt0.c2)))) FROM t1, vt0 WHERE ((('') BETWEEN (x'6626') AND (NULL)) COLLATE RTRIM) GROUP BY 0x1c3b9636 HAVING ((((((rt0.c5)AND(rt0.c0)))AND(vt0.c0))) IS TRUE);SELECT DISTINCT ((UPPER(rt0.c5))>(((rt0.c0) NOT BETWEEN (t1.c0) AND (vt1.c1)))), ((((rt0.c0)<(rt0.c4))) NOTNULL), (((((rt0.c4)) BETWEEN ((t1.c56)) AND ((rt0.c0))))>=(rt0.c3 COLLATE BINARY)), (+ (rt0.c3 COLLATE RTRIM)), (((t1.c0)) BETWEEN ((CAST(vt1.c1 AS NUMERIC))) AND ((((t1.c34) NOTNULL)))) FROM vt0 WHERE (((0.16088562648980076) NOT BETWEEN ('') AND (NULL)) COLLATE BINARY);SELECT DISTINCT CASE WHEN vt0.c0 COLLATE NOCASE THEN rt0.c2 COLLATE RTRIM ELSE ((vt1.c1)&(rt0.c1)) END FROM t1, vt1 LIMIT 258677570;SELECT ALL t1.c0 COLLATE NOCASE FROM rt0, vt1;SELECT DISTINCT LIKELIHOOD(vt1.c1, 0.7908413663009493) COLLATE NOCASE, 0.24288561929025687, CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE FROM rt0, vt0, t1, vt1 WHERE (CAST(((NULL)<=('r{')) AS INTEGER)); -- 0ms;
SELECT ALL CASE WHEN ((t1.c34) IS FALSE) THEN ((rt0.c0)*(rt0.c2)) END, (((x'daa31eab' IN ()))IS(((NULL) IS TRUE))), (('0.6404507637452161' COLLATE BINARY) BETWEEN ((+ (rt0.c3))) AND ('m{')) FROM rt0, vt1, vt0 WHERE (((((((x'')LIKE(0.9918837397079402)))AND(((NULL)<('')))))OR((~ ('\')))));SELECT ALL CASE WHEN (((rt0.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN ('Y^E8c' IN (vt0.c0, rt0.c5)) END, ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL), NULL FROM vt0, rt0 NOT INDEXED, t1 WHERE ((- ((((0.41916583948186914))<=((x''))))));SELECT -9.6276417E7, CASE WHEN 0xffffffff972b29eb THEN MAX(rt0.c4) END, MAX(((((rt0.c1)AND(t1.c0)))OR(rt0.c1))) FROM t1, rt0; -- 3ms;
SELECT ((((((((((rt0.c1) IS TRUE))OR(rt0.c3)))AND(CAST(rt0.c0 AS NUMERIC))))AND((- (x'')))))OR(CASE x''  WHEN t1.c56 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN t1.c34 ELSE '-2004485316' END)), ((((CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c5 END)OR(AVG(rt0.c5))))OR(((vt0.c0)>(x'f3e4')))), MAX(CAST(t1.c56 AS BLOB)) COLLATE NOCASE FROM rt0, vt0, vt1 WHERE ((TYPEOF('1440500509') IN ((~ (0.18948819429913866)), ((0.26299398034359067) BETWEEN ('-1080151865') AND (0.28902732498323225)))));SELECT NULL, CAST(CASE vt1.c0  WHEN t1.c0 THEN x'a87d' END AS REAL), TRIM(DISTINCT CAST(vt1.c0 AS NUMERIC)) FROM t1, vt0, rt0;SELECT DISTINCT CAST(((vt1.c1) NOTNULL) AS REAL), ((((((vt1.c0)OR(vt1.c1)))OR(rt0.c5))) IS FALSE), (((t1.c34)OR(vt0.c0)) IN (CASE WHEN t1.c34 THEN t1.c34 ELSE rt0.c5 END)) FROM vt1, vt0, rt0, t1; -- 0ms;
SELECT DISTINCT SUM((vt1.c0 IN ())) FILTER(WHERE ((((vt1.c1)*(rt0.c4))) NOTNULL)) OVER () FROM vt1 WHERE (((((0.8432560119403173 COLLATE NOCASE)OR(0.7519462819950018)))AND((~ (x'')))));SELECT DISTINCT AVG(((t1.c34)||(rt0.c1))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM vt1 LIMIT -346034257 OFFSET -1348074752;SELECT MAX(COUNT((((0Xffffffffdd2c4ebe)) BETWEEN ((x'34b0')) AND ((0.24640682511617717))))) FROM t1 ORDER BY (NOT (vt1.c0 COLLATE RTRIM)) ASC  NULLS LAST;SELECT ALL ((NULL) BETWEEN (((rt0.c0) BETWEEN (t1.c0) AND (t1.c56))) AND (((rt0.c5) IS FALSE))) FROM vt1 ORDER BY ((((((vt1.c0)<=(rt0.c4)))AND(((t1.c0)OR(rt0.c1)))))OR('')) DESC;SELECT DISTINCT GROUP_CONCAT(((vt0.c0) NOT BETWEEN (')l') AND (vt1.c1))) FROM rt0;SELECT DISTINCT CASE MAX(NULL)  WHEN COUNT(*) THEN (rt0.c4 IN (vt0.c0)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c3 END END FROM rt0, vt1, vt0, t1 WHERE (((ABS('-1545965680'))IS(HEX(x'e708')))); -- 0ms;
SELECT DISTINCT ((CAST(t1.c0 AS TEXT)) NOTNULL) FROM vt0 WHERE ((- (((NULL) IS TRUE)))) INTERSECT SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))OR(LOWER(t1.c34))))OR(t1.c56 COLLATE RTRIM)) FROM vt0;SELECT DISTINCT ((((rt0.c2) IS TRUE))GLOB((((NULL)) BETWEEN ((x'a1fd')) AND ((rt0.c2))))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((TRIM(DISTINCT NULL, rt0.c5)) BETWEEN (vt1.c1 COLLATE BINARY) AND (((vt1.c1)*(rt0.c5)))), ((((NULL) NOT BETWEEN (rt0.c4) AND (vt0.c0)))|(((t1.c56)-(vt0.c0)))), ((((CAST(rt0.c5 AS NUMERIC))AND((rt0.c5 IN (vt0.c0)))))OR(((x'') IS FALSE))) FROM rt0, vt0, t1 NOT INDEXED WHERE ((('') IS FALSE)) ORDER BY (((8.25642333E8)) BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)) AND ((json_array_length(rt0.c3)))) DESC  NULLS FIRST, ((t1.c56)IS(rt0.c2)) COLLATE BINARY  NULLS FIRST;SELECT DISTINCT GROUP_CONCAT((NOT (t1.c34)) COLLATE BINARY) OVER (), CAST((+ (0xffffffffc939bff2)) AS NUMERIC), CAST((NOT (rt0.c2)) AS TEXT) FROM vt1 WHERE ((NOT ((((2.048437173E9))==(('1117672422'))))));SELECT DISTINCT TOTAL((NOT (rt0.c1))) FROM rt0, vt0, t1, vt1 WHERE (((-1.635115519E9)<>(CASE WHEN 'Z]SD턀iE(' THEN 0.052147856407883775 ELSE '0.025510995218824273' END))) LIMIT 1317645912 OFFSET -301755802; -- 0ms;
SELECT ALL CAST((~ (t1.c34)) AS INTEGER) FROM t1, vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(rt0.c5 AS INTEGER), UNLIKELY(((t1.c0) NOTNULL)), (- ((((t1.c34, vt1.c0, '-1758778901')) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((vt0.c0, t1.c0, rt0.c3))))) FROM vt0, rt0, vt1;SELECT ALL (('0.9993556332274273')==(((rt0.c2) BETWEEN (NULL) AND (vt0.c0)))) FROM t1 WHERE (TRIM(NULL) COLLATE RTRIM);SELECT DISTINCT COUNT(rt0.c3) FROM rt0, vt1 ORDER BY CAST((t1.c34 IN ()) AS NUMERIC) DESC, ((((rt0.c2)*(vt1.c0)))!=(CASE rt0.c3  WHEN t1.c56 THEN vt1.c1 END))  NULLS LAST;SELECT DISTINCT AVG(rt0.c2) OVER ( ORDER BY (((0.9071058254610875, rt0.c3, -1.697460567E9)) BETWEEN ((t1.c34 COLLATE RTRIM, (rt0.c0 IN (rt0.c1, vt0.c0)), CASE rt0.c0  WHEN t1.c0 THEN rt0.c4 ELSE vt0.c0 END)) AND (((rt0.c2 IN (rt0.c4)), CASE vt1.c0  WHEN rt0.c4 THEN rt0.c5 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 END, (NOT (vt1.c1))))) ASC) FROM vt0;SELECT ALL CAST(((rt0.c0) IS TRUE) AS NUMERIC) FROM vt0;SELECT DISTINCT (NOT (rt0.c0 COLLATE BINARY)), UNLIKELY(DISTINCT ((t1.c0)IS(rt0.c3))), (((NOT (t1.c56)))|(t1.c56 COLLATE NOCASE)) FROM rt0, vt1, vt0 WHERE (((('0.5431025338726104' COLLATE RTRIM))=((('08zx' IN ())))));SELECT ALL SUM(0x3e7dd100) OVER ( ORDER BY (((vt1.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)) AND ((((vt0.c0)<<(t1.c56)))))  NULLS FIRST, (- (CASE WHEN rt0.c4 THEN rt0.c4 ELSE NULL END)) DESC GROUPS  UNBOUNDED PRECEDING) FROM vt1 WHERE (rtreenode(CAST(NULL AS TEXT), '1046677139')) GROUP BY (((NOT (rt0.c2))) BETWEEN (MIN(rt0.c1, t1.c56, rt0.c5, rt0.c0)) AND (((t1.c34) NOTNULL))) HAVING ((((t1.c0) BETWEEN (t1.c56) AND (vt0.c0)))IS NOT((+ (t1.c34))));SELECT DISTINCT rt0.c3 FROM vt1, vt0;SELECT DISTINCT x'' FROM rt0, t1, vt0 WHERE ((((((''))==((0Xffffffffeb86f2a7)))) NOT BETWEEN (((x'')<(x''))) AND (((x'')LIKE(NULL))))); -- 1ms;
SELECT DISTINCT (vt1.c1 COLLATE NOCASE IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT (+ ((((rt0.c0, rt0.c1, rt0.c3))=((rt0.c0, rt0.c1, rt0.c4))))) FROM t1, rt0 WHERE ('UjF *k') ORDER BY rt0.c3 ASC  NULLS LAST; -- 0ms;
SELECT ALL (NOT (((vt1.c1) NOTNULL))), ((0.31142405478411805)AND((NOT ('1005067910')))), t1.c56 FROM vt1, rt0, t1, vt0; -- 0ms;
SELECT DISTINCT CAST(((0.03892609967419847) NOT BETWEEN (rt0.c5) AND (vt1.c1)) AS NUMERIC) FROM vt0, rt0 WHERE (CAST((NULL IN ('1104590175', '1955011303')) AS INTEGER)) LIMIT -1644581208 OFFSET -1695613981;SELECT NULLIF(DISTINCT HEX(rt0.c4), (((vt1.c0))<((t1.c34)))) FROM vt0, vt1;SELECT ALL t1.c34 FROM vt1 FULL OUTER JOIN rt0 ON (NOT ((vt1.c1 IN ()))) CROSS JOIN t1 ON CASE WHEN ((t1.c56) BETWEEN (t1.c56) AND (t1.c56)) THEN vt1.c1 COLLATE RTRIM END ORDER BY TYPEOF(DISTINCT (- (vt1.c0))) ASC; -- 0ms;
SELECT DISTINCT (+ (LIKE(rt0.c0, vt0.c0, 'r'))) FROM vt1 ORDER BY ((LIKELY(DISTINCT vt1.c0)) IS FALSE), rt0.c3 ASC  NULLS FIRST, json_array(((((vt1.c1)OR(rt0.c3)))AND(vt1.c0)), ((rt0.c2)GLOB(vt0.c0)))  NULLS FIRST;SELECT ALL ((GROUP_CONCAT(t1.c34))<=(STRFTIME(0x4c8b7eff, t1.c34, 0xffffffff84157e6d, rt0.c2, rt0.c4))) FROM t1, rt0, vt0; -- 0ms;
SELECT ALL (0.326715866733602 IN ((((rt0.c0, rt0.c0, rt0.c4))>=((t1.c0, rt0.c2, rt0.c3))))), ((((((vt0.c0) IS FALSE))OR((NOT (t1.c0)))))OR(SUM(NULL))), (((CAST(rt0.c4 AS INTEGER)))!=((((t1.c34) NOT BETWEEN (rt0.c4) AND (rt0.c0))))), ((CAST(vt0.c0 AS NUMERIC)) IS FALSE), ((GROUP_CONCAT(rt0.c1)) NOT BETWEEN (CASE WHEN vt1.c1 THEN rt0.c4 END) AND (TOTAL(t1.c0))) FROM t1;SELECT DISTINCT 'OE', ((TOTAL(rt0.c2))|('-474797764')), ((((rt0.c1)==(t1.c56)))<((+ (t1.c34)))) FROM t1, vt0 ORDER BY vt1.c1, ((((t1.c56) ISNULL))LIKE(CASE '-96276417'  WHEN rt0.c1 THEN t1.c56 END)) DESC, CASE ((((((((vt1.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(t1.c0))  WHEN (t1.c34 IN ()) THEN ((vt0.c0)*(rt0.c2)) END;SELECT ALL ((((vt1.c1) NOT NULL))*(rt0.c4)) FROM rt0, t1 ORDER BY (((((0.035948960595335366) IS FALSE)))>(((vt0.c0 IN ())))) DESC;SELECT ALL (CASE WHEN vt0.c0 THEN rt0.c3 END IN ((~ (rt0.c0)))) FROM rt0, t1, vt1 WHERE (((((((x'0352')OR(x'')))OR(x''))) NOT BETWEEN (((0.616361995353856) NOTNULL)) AND (((x'161f') IS FALSE)))) GROUP BY json_valid(NULL);SELECT DISTINCT ((((rt0.c0)LIKE(rt0.c5))) NOT NULL) FROM vt0, t1 WHERE (((x'9dbe') BETWEEN (0.9208305105048369) AND (0X23ae6166)) COLLATE NOCASE);SELECT (+ (rt0.c0)) FROM vt1, rt0, vt0, t1 WHERE ((~ ((('sRBOa')<<(0.5045469750641773))))) GROUP BY (((((rt0.c5)||(0.4855392992470656)), (((NULL)) BETWEEN ((t1.c34)) AND ((t1.c56))), rt0.c4 COLLATE NOCASE))=((((NULL)OR(x'db88')), ((vt1.c1) NOT NULL), ((vt0.c0) NOT NULL)))) ORDER BY ((((((rt0.c5) NOTNULL))AND(((vt1.c1) NOTNULL))))OR(((t1.c0)<<(t1.c34))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt0.c0)>>(t1.c0)) IN ()) FROM t1, rt0; -- 0ms;
SELECT DISTINCT (+ (rt0.c1)) COLLATE NOCASE FROM t1, vt1, rt0 WHERE (TYPEOF((NOT (x'88b5')))); -- 0ms;
SELECT json_array(((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c2)), ((vt0.c0) ISNULL)) FROM t1, vt0, vt1 WHERE ((('')/(x'7778f789')) COLLATE RTRIM);SELECT DISTINCT CAST(CAST(vt1.c0 AS BLOB) AS TEXT) FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c1 RIGHT OUTER JOIN vt1 ON (NOT (x'')) LIMIT -1273501068 OFFSET 49441227; -- 1ms;
SELECT DISTINCT ((UPPER(t1.c56)) NOT BETWEEN (json_type(rt0.c2)) AND ((((rt0.c4, rt0.c5, rt0.c1))<>((vt1.c0, '', rt0.c0))))) FROM t1, vt0 ORDER BY (+ (t1.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((vt1.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_valid(t1.c34)))  NULLS FIRST;SELECT ALL CASE t1.c56  WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN t1.c0 THEN rt0.c2 END COLLATE RTRIM FROM vt0, vt1;SELECT ((rt0.c5)>(rt0.c4)) COLLATE NOCASE FROM vt0;SELECT DISTINCT CASE WHEN (((rt0.c4, t1.c34, rt0.c1, 0.6404507637452161, t1.c56)) BETWEEN ((rt0.c3, t1.c34, rt0.c2, 'jj', rt0.c2)) AND ((vt1.c1, rt0.c1, rt0.c1, rt0.c5, t1.c56))) THEN ((t1.c0)||(rt0.c0)) WHEN ((vt1.c1) NOT NULL) THEN (+ (t1.c34)) WHEN CASE vt0.c0  WHEN t1.c56 THEN 0.2177189136797395 ELSE rt0.c4 END THEN ((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c1)) END FROM vt0, vt1;SELECT CAST(rt0.c4 COLLATE RTRIM AS NUMERIC) FROM vt1, rt0 GROUP BY (((((rt0.c5))>=((t1.c56)))) NOT BETWEEN (((vt0.c0)IS(rt0.c4))) AND (((rt0.c1)>(t1.c56)))) HAVING (((vt0.c0 IN ()))%((rt0.c5 IN ()))) ORDER BY TYPEOF(DISTINCT rt0.c2) COLLATE RTRIM ASC, (t1.c34 IN ((rt0.c0 IN ())))  NULLS FIRST LIMIT 1905314983;SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE ((- (0Xffffffffaa90b628)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((vt1.c0)+(rt0.c3)))OR(LOWER(rt0.c4))), (- (((rt0.c5) IS FALSE))), vt1.c0 FROM vt1 RIGHT OUTER JOIN t1 ON (((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))<(x'30b6')) FULL OUTER JOIN rt0 ON (((((vt1.c1) ISNULL), rt0.c0 COLLATE BINARY, (rt0.c4 IN ())))!=((CAST(rt0.c4 AS NUMERIC), (NOT (rt0.c0)), (rt0.c2 IN ())))) WHERE (((((('-1314664231')>=('798844927'))))>((((NULL)%(NULL)))))) ORDER BY rt0.c5 ASC  NULLS FIRST;SELECT DISTINCT COUNT(((((((((rt0.c4)OR(rt0.c5)))OR(rt0.c1)))OR(t1.c56)))OR(rt0.c5))) OVER (), SUM(LTRIM(rt0.c5, rt0.c2)), CAST(x'6a32' AS NUMERIC) FROM t1, vt1, rt0, vt0; -- 0ms;
SELECT ALL (rt0.c4 IN ()) COLLATE BINARY COLLATE NOCASE FROM vt1 WHERE (((('2M3	OG')) NOT BETWEEN ((((0.24943072575072756)/(NULL)))) AND ((NULL COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS BLOB))%(TOTAL(rt0.c0))), ((rt0.c3) IS TRUE) COLLATE RTRIM COLLATE BINARY, CASE AVG(t1.c34)  WHEN LIKE(rt0.c3, vt0.c0, '>') THEN (t1.c0 IN ()) END FROM vt1;SELECT DISTINCT CASE (+ (rt0.c3))  WHEN ((rt0.c0) NOT BETWEEN (t1.c56) AND (0.5250333050275391)) THEN (vt0.c0 IN (t1.c56)) ELSE DATE(t1.c0, rt0.c4, rt0.c4) END, CASE rt0.c4 COLLATE NOCASE  WHEN CASE rt0.c2  WHEN vt1.c0 THEN vt1.c1 END THEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 END ELSE ((vt1.c1)*(vt1.c1)) END, ((~ (rt0.c2)) IN ()) FROM vt1, t1;SELECT CASE WHEN x'' THEN t1.c56 END COLLATE NOCASE, ((('-1021600395' IN ())) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN t1.c56 ELSE vt1.c0 END) AND (((vt0.c0)<=(rt0.c1)))), CASE WHEN rt0.c1 THEN x'' ELSE ((t1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) END FROM rt0, t1 WHERE ((ABS('LZ') IN ()));SELECT DISTINCT ((((((rt0.c0)AND(t1.c34)))AND(rt0.c3))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((NOT (rt0.c1)))), 0.9299942836381183, t1.c0 FROM t1, rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c1 END)<=(((((t1.c56)AND(rt0.c0)))OR(vt1.c1)))) FROM t1, rt0, vt1; -- 0ms;
SELECT ((SQLITE_COMPILEOPTION_USED(rt0.c4)) NOTNULL), LEAD(CAST(vt1.c1 COLLATE BINARY AS BLOB), t1.c56, '2138636595') OVER (), TOTAL((((t1.c0))!=((t1.c0)))) FROM t1, vt1 WHERE ((((((0.8743598196389221))=(('qV')))) ISNULL));SELECT CASE WHEN MIN(rt0.c0) THEN t1.c34 COLLATE RTRIM ELSE vt1.c1 COLLATE BINARY END FROM t1 WHERE ((((NULL)) NOT BETWEEN ((x'')) AND ((((((0.8055365370567943)OR('')))AND('1154574741')))))) LIMIT -1863115145 OFFSET 1374372018;SELECT DISTINCT ((((rt0.c2)&(rt0.c3)))IS(((rt0.c1)GLOB(vt0.c0)))) FROM vt0, rt0, t1, vt1 WHERE (CASE ((NULL)&('Qx'))  WHEN ((0.5542444152344529)GLOB(NULL)) THEN NULL COLLATE BINARY END); -- 0ms;
SELECT DISTINCT ((((((t1.c0)AND(t1.c34)))AND(x'af1f')))/(CASE WHEN vt0.c0 THEN rt0.c3 END)) FROM vt0, rt0, t1, vt1 GROUP BY ((CASE WHEN rt0.c1 THEN rt0.c4 END)<<(ABS(DISTINCT rt0.c5))), (CASE t1.c34  WHEN vt0.c0 THEN rt0.c0 END IN (((rt0.c1)AND(t1.c34)), rt0.c5)), ((SQLITE_SOURCE_ID()) NOT NULL), ((((IFNULL(DISTINCT rt0.c2, vt1.c1))AND(CAST(rt0.c2 AS INTEGER))))AND(((t1.c34)-(rt0.c1)))), ((TRIM(vt1.c1, t1.c0)) IS FALSE) HAVING '1943590866'; -- 1ms;
SELECT DISTINCT AVG((~ (NULL))) FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt1.c1 IN (rt0.c1)))OR('1843760850')))AND(json_extract(vt1.c0, rt0.c4, rt0.c4, vt1.c1))) FROM rt0, vt1, vt0, t1; -- 0ms;
SELECT DISTINCT ((((((vt1.c0) NOT BETWEEN (t1.c34) AND (rt0.c3)))AND((NOT (rt0.c1)))))OR(CASE rt0.c1  WHEN vt0.c0 THEN vt1.c0 END)) FROM rt0, t1, vt0 WHERE (CASE (('655582301') BETWEEN (NULL) AND (NULL))  WHEN CASE WHEN x'' THEN 0.6122953528005243 END THEN '' COLLATE RTRIM END);SELECT ((rt0.c4 IN ()) IN (vt1.c0 COLLATE BINARY, rt0.c2)) FROM t1 WHERE ((((0.4028162413018571, x'e1ac', '0.8228957089651392')) NOT BETWEEN ((rtreenode(x'', 0.2202082300320224), (NOT (-705518311)), CASE x''  WHEN NULL THEN 0.6874095970292731 WHEN 0.4216500002265916 THEN '768622273' WHEN NULL THEN x'' END)) AND (((((('-1491118130')OR('Ⱄ8BNFj')))AND('')), (~ (0.983042865168121)), ((('905250302', '-382760376', NULL))<>(('-615031842', x'e819', 0X5505b32c)))))));SELECT ALL 0.2880712636134266, LAST_VALUE((((rt0.c1 IN ())) IS TRUE)) OVER (), (((((((((((vt1.c1)) NOT BETWEEN ((rt0.c5)) AND ((t1.c56))))OR((+ ('g6')))))OR(CASE WHEN vt1.c0 THEN t1.c0 ELSE t1.c34 END)))AND(((vt1.c1)%(rt0.c0)))))OR(AVG(t1.c56))) FROM vt1, vt0, rt0;SELECT DISTINCT COUNT(((rt0.c4)-(vt0.c0))) FROM rt0, vt0 WHERE (((json_array_length(x'452e', 'ant]DP')) BETWEEN ((538054791 IN ())) AND (x'8161' COLLATE NOCASE)));SELECT (- (rt0.c2)) COLLATE BINARY, TYPEOF(((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2))), (((((rt0.c3, rt0.c0, vt1.c1))==((t1.c0, rt0.c0, rt0.c1)))) IS FALSE), ((((vt1.c1) NOT BETWEEN (t1.c56) AND (rt0.c1)))>>(0.48946319546454453)), LAG(((CASE WHEN vt0.c0 THEN t1.c34 ELSE vt1.c0 END) IS FALSE), '-1188496799' COLLATE BINARY, ((((CAST(t1.c0 AS NUMERIC))AND(vt0.c0)))OR(vt1.c1 COLLATE RTRIM))) OVER (), TOTAL(('v' IN (rt0.c3))), PRINTF(0.22627296422559695) COLLATE RTRIM FROM vt1, rt0, t1, vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt1, vt0, rt0, t1 WHERE (CASE 0.6635233914165023  WHEN 0.8612252607012123 THEN NULL ELSE 0.7509068881968824 END COLLATE NOCASE) EXCEPT SELECT CASE WHEN GROUP_CONCAT(vt0.c0) THEN SUM(t1.c56) WHEN ((vt1.c0) BETWEEN (rt0.c5) AND (rt0.c2)) THEN ((0xffffffff97fd70f3) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((vt1.c1)||(vt1.c0)) THEN ((vt1.c1) IS TRUE) ELSE (~ (NULL)) END FROM t1 WHERE (((CASE WHEN x'' THEN 0.38529673682145027 END) NOTNULL));