-- Time: 2024/06/07 09:27:02
-- Database: database31
-- Database version: 3.40.0
-- seed value: 2103870931
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 INTEGER , +c4 BLOB ); -- 1ms;
INSERT OR REPLACE INTO rt0(c1, c0) VALUES ('঩O*', NULL), (NULL, x'da0f'), (NULL, '1177141941'); -- 2ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (1066313609); -- 0ms;
VACUUM; -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('?El![N0Fg', NULL, x'', '঩O*', x'82d3', 0.05942367740308596, 0.05942367740308596))<>((0.8736907707495587, 0.8460642199211681, NULL, 'UmL#F3', NULL, '0', x'')))) NOTNULL); -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
DROP TABLE rt1; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL) WHERE (rt0.c0 COLLATE BINARY IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)IS NOT(rt0.c2)))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'', c2=0.267901313510037; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c0, c2)=(x'', NULL, x'') WHERE ((((rt0.c1)AND((~ (rt0.c1)))))OR(rt0.c1)); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (0.8212262448827428, '', x''); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', 0X2fa6ea33, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (x'', NULL), (x'f886', x'de0c'), (0X2f6878f6, NULL); -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA temp.short_column_names = true; -- 0ms;
PRAGMA main.secure_delete = false; -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('0.8736907707495587', x'', x''), (x'', NULL, NULL), (0.05942367740308596, '591072374', 0X4629c2b5); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES (0.9774857192051294, x''), (0.9370890143233179, '-1955781083'), (x'', 'i'); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0) VALUES (NULL, '[ToLofIj1'); -- 0ms;
PRAGMA application_id = 3919133227342325723; -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (7.99468083E8), ('0.8736907707495587'), (x''), (''), (0xffffffffb667d5ed); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=''; -- 1ms;
REINDEX; -- 0ms;
ANALYZE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='TRUE'; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES ('%f', '', x'00e4'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0.01745248955126122); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('', '঩O*'), (0.8582677085118636, '0.9370890143233179'), (350055421, ''); -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('1633062193'); -- 0ms;
PRAGMA temp.default_cache_size = -558102103; -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-449124311 sz=-558102103 unordered'); -- 3ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1, c2 UNINDEXED); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES ('-558102103', x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'', x'', -558102103); -- 3ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
REINDEX RTRIM; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES ('867015398', 0.6145876050034182); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2, c0) VALUES (x'', 0.847170079214117, 0Xffffffffdebc09a9); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES ('Zᠶo1iq''Si', x''); -- 1ms;
PRAGMA shrink_memory; -- 0ms;
END; -- 0ms;
PRAGMA cache_spill; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT RANK() OVER () FROM vt0, rt0 ORDER BY ((((((vt0.c1)<=(rt0.c1)))OR(((rt0.c0)|(vt0.c0)))))AND((vt0.c2 IN ())));SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END)GLOB(CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE ((((NULL)IS(x'041eddb8')) IN ())) ORDER BY GLOB((-1.914628042E9 IN ()), CAST(rt0.c1 AS NUMERIC)) DESC  NULLS LAST;SELECT CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c0) NOT NULL) ELSE rt0.c2 END FROM rt0, vt0 LIMIT -136783494; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS INTEGER) COLLATE NOCASE FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c2)))||((~ (rt0.c0)))), ((((((vt0.c1)AND(vt0.c0)))OR(rt0.c1))) BETWEEN ((((vt0.c2))<((vt0.c0)))) AND (ABS(vt0.c1))), IFNULL(DISTINCT (rt0.c0 IN (rt0.c1)), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))), -1654458651, rt0.c2 FROM vt0, rt0 ORDER BY (rt0.c2 IN ()) DESC  NULLS LAST, (((((('\%v?Y+')||(rt0.c0)))AND(((rt0.c0)!=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(rt0.c0)))) ASC, rt0.c2  NULLS FIRST LIMIT 1177141941 OFFSET -1955781083; -- 0ms;
SELECT ALL json_object(((rt0.c0) ISNULL), (rt0.c2 IN (0Xffffffffe53ae829)), (vt0.c1 IN (vt0.c0)), ((((rt0.c0)OR(vt0.c2)))AND('\x'))) FROM rt0, vt0 WHERE (((0.4270800104304303)<<(NULL)) COLLATE NOCASE) ORDER BY LIKELIHOOD('795375862', 0.4958795824065233) ASC; -- 0ms;
SELECT DISTINCT QUOTE(((rt0.c1)GLOB(rt0.c1))) FROM rt0 GROUP BY (NOT (CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) HAVING TRIM(CAST(vt0.c2 AS NUMERIC), ((NULL) IS FALSE));SELECT (((((rt0.c1))<>((vt0.c2))))%(SUBSTR(rt0.c2, 0.01745248955126122))), ((vt0.c2)<=(rt0.c0)) COLLATE RTRIM, MAX(((vt0.c0)>=(rt0.c1))) COLLATE RTRIM FROM rt0, vt0 GROUP BY (((rt0.c1 IN (vt0.c0))) ISNULL) ORDER BY ((((((((rt0.c0)OR(((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND('')) DESC  NULLS LAST, (((vt0.c0)/(vt0.c2)) IN ())  NULLS FIRST, rt0.c1 DESC  NULLS LAST; -- 0ms;
SELECT ALL (((rt0.c0 IN (vt0.c1))) NOT BETWEEN ((((rt0.c2, vt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))) AND ((- (vt0.c0)))) FROM rt0;SELECT DISTINCT ((MAX(rt0.c2))GLOB(CAST(vt0.c0 AS TEXT))) FROM rt0, vt0 WHERE (NULLIF(DISTINCT (((((((('?el![n0fg')OR(0X7d5698ce)))OR(-1877094363)))AND('')))OR('I.y')), (('禱>%,')>=(0.8582677085118636)))); -- 0ms;
SELECT ((vt0.c0) NOT NULL) COLLATE BINARY FROM vt0; -- 0ms;
SELECT (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c2))) AND ((((vt0.c2))<((vt0.c1))))) FROM rt0 WHERE (UPPER(DISTINCT (((x'7ba0'))<=((NULL)))));SELECT ALL ((((rt0.c2)-(rt0.c2))) IS FALSE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS BLOB))AND(GROUP_CONCAT(rt0.c1))))OR(((vt0.c1)|(rt0.c2)))), '', ((rt0.c2) ISNULL) COLLATE BINARY, (((((rt0.c1) BETWEEN (x'') AND (rt0.c1)), (((vt0.c1))>=((rt0.c2))), (+ (rt0.c2))))>((((rt0.c0)<=(vt0.c2)), SUM(vt0.c2), ((vt0.c1) ISNULL)))), (((0.09253107105893432, (vt0.c1 IN ()), rt0.c2))<((((rt0.c1)AND(vt0.c1)), CAST(rt0.c2 AS REAL), (rt0.c1 IN ())))) FROM vt0 WHERE (((((CASE '1593267268'  WHEN NULL THEN '664790405' END)OR(((NULL) NOT BETWEEN (NULL) AND ('I.Y')))))AND((8.67015398E8 IN (NULL)))));SELECT ALL x'' COLLATE NOCASE FROM vt0 WHERE (((('795375862' IN (0.8212262448827428)))+(((((x'')AND(NULL)))OR(NULL))))); -- 1ms;
SELECT DISTINCT CAST(rt0.c2 AS REAL) FROM rt0 WHERE (0x720374bf) GROUP BY (~ (((((rt0.c0)AND(vt0.c0)))AND(vt0.c2)))), ((((vt0.c0)<>(vt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) AND (((rt0.c2)>(vt0.c2)))), (((vt0.c0)IS(rt0.c1)) IN ());SELECT ALL load_extension((rt0.c2 IN (rt0.c0, rt0.c1))), ((((vt0.c0)>>(rt0.c0))) BETWEEN (((((rt0.c0)OR(vt0.c1)))AND(rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)), vt0.c0 FROM vt0, rt0 WHERE ((((NULL, '', '330700448')) BETWEEN ((LIKELY(NULL), ((0.2536726513253399)>>(0.5981872522872954)), (- (0.43008993745045154)))) AND (((('1912829119')||('-1234709011')), ('87660429' IN ()), (('') BETWEEN (0.19601223479357455) AND ('~>h9ApeL')))))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c2 END)%(0.6122088555945101)) ASC  NULLS LAST; -- 1ms;
SELECT NULL FROM rt0, vt0 WHERE (CASE ((NULL) IS TRUE)  WHEN (NULL IN ()) THEN ((NULL) IS FALSE) ELSE '2102827214' COLLATE BINARY END); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN 'M	ijQ' WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c2 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 END) NOT NULL) FROM vt0 WHERE (((((((((((x'2d88')OR(x'e4ba')))OR('-1654458651')))AND(NULL)))OR(0.31478913961982524))) IS TRUE));SELECT DISTINCT CASE WHEN rt0.c2 THEN CAST(rt0.c0 AS BLOB) WHEN COUNT(*) THEN ((rt0.c1) ISNULL) WHEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)) THEN (- (rt0.c2)) WHEN 0.18026312722593285 THEN ((vt0.c0) NOTNULL) WHEN vt0.c0 COLLATE BINARY THEN NULL ELSE (vt0.c0 IN (rt0.c1)) END FROM vt0 WHERE (((NULL)IS NOT(-1.654458651E9)) COLLATE RTRIM) ORDER BY ((vt0.c1)AND(ABS(vt0.c1))) ASC LIMIT 1066313609 OFFSET 2049228730;SELECT DISTINCT UNICODE(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END), 'cN~', ((CASE WHEN rt0.c0 THEN 8.7660429E7 WHEN vt0.c1 THEN NULL WHEN rt0.c1 THEN vt0.c2 ELSE rt0.c2 END) IS TRUE) FROM rt0 WHERE (CAST(((NULL)<=('Yc')) AS REAL));SELECT DISTINCT vt0.c0 FROM vt0, rt0; -- 0ms;
SELECT ALL 0xffffffff9d62f6e5 FROM rt0, vt0; -- 0ms;
SELECT vt0.c0, (((vt0.c0)) BETWEEN ((x'')) AND (((- (vt0.c1))))), NULL FROM vt0 GROUP BY ((CAST(vt0.c0 AS REAL))!=(vt0.c0 COLLATE BINARY)) HAVING TOTAL_CHANGES() ORDER BY (((json_array_length(vt0.c1)))<>((rt0.c1 COLLATE BINARY)));SELECT ALL ((LIKELIHOOD(DISTINCT rt0.c1, 0.7241090293439248))IS NOT((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))), COUNT(*), ((((((vt0.c1) IS TRUE))AND(vt0.c0)))OR(((rt0.c0)LIKE(vt0.c1)))) FROM vt0 WHERE (((((((NULL)AND(0.4270800104304303)))AND(NULL))) IS FALSE));SELECT ALL ROW_NUMBER() OVER ( ORDER BY ((rt0.c0)<(vt0.c0)) COLLATE NOCASE  NULLS LAST, ((((rt0.c2)<<(vt0.c2)))%(((vt0.c0)IS NOT(vt0.c0))))  NULLS LAST) FROM vt0, rt0 WHERE (x'7b59'); -- 0ms;
SELECT ALL RANK() OVER (), ((NULL COLLATE BINARY)%(vt0.c0 COLLATE BINARY)), GROUP_CONCAT(CASE 'f风|	'  WHEN x'' THEN vt0.c2 END) OVER (), (((((vt0.c1))<=((rt0.c2))))GLOB(CAST(rt0.c1 AS NUMERIC))), MAX(((vt0.c2)>('!gcvmR%'))) FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c2 IN ()))+(CASE WHEN rt0.c0 THEN 0.022303603487492274 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c2 END)); -- 1ms;
SELECT ALL x'' FROM vt0, rt0; -- 0ms;
SELECT rt0.c2 FROM rt0, vt0 WHERE (((((0.3992645732307871)IS(-1788117475)))<(CAST(779339331 AS INTEGER)))); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((NULL COLLATE BINARY))<=((0.09248550776626596 COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT CAST(((((rt0.c2)AND(vt0.c1)))OR(vt0.c0)) AS REAL), (((vt0.c2))>=((vt0.c2))) COLLATE NOCASE, (((((0.3992645732307871)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (vt0.c0)), ((((((((((((((rt0.c1)OR(rt0.c2)))OR(vt0.c2)))AND('>SaI(,I蚻')))AND(vt0.c1)))OR('-1736184570')))AND(rt0.c2))) ISNULL), ((((rt0.c2) ISNULL))GLOB(((vt0.c0) IS FALSE))) FROM vt0, rt0 WHERE (((((x'')<>(0.06632043176392144))) ISNULL)) LIMIT -1880197291 OFFSET 215607665; -- 0ms;
SELECT ALL ((((((vt0.c0)AND(x'')))OR(NULL))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((rt0.c0 IN ()))) FROM rt0, vt0; -- 0ms;
SELECT 0.594153796816287, ((((rt0.c0)AND((~ (vt0.c2)))))AND(CHAR(vt0.c2))), GROUP_CONCAT(((rt0.c0)-(vt0.c0))) FROM rt0 WHERE (CAST((('') NOT BETWEEN (0x279fe585) AND ('-1736184570')) AS TEXT));SELECT TOTAL((rt0.c2 IN (vt0.c1))) OVER (), DENSE_RANK() OVER (), CASE WHEN ((rt0.c2)/(NULL)) THEN ((((rt0.c2)AND(rt0.c0)))AND(vt0.c2)) END FROM vt0;SELECT DISTINCT ((((rt0.c2)>(rt0.c0))) BETWEEN (((vt0.c2)%(vt0.c1))) AND (((rt0.c2) NOTNULL))) FROM rt0 ORDER BY ((((vt0.c1)IS NOT(vt0.c1)))AND((((rt0.c2))==((rt0.c2)))))  NULLS LAST, NULL ASC  NULLS LAST LIMIT 383446643 OFFSET 664790405;SELECT DISTINCT (rt0.c1 IN ()), COUNT('㕻I'), TOTAL(vt0.c1) OVER ( ORDER BY CASE UNLIKELY(407025887)  WHEN ((((rt0.c1)OR(vt0.c1)))AND(vt0.c2)) THEN (+ (vt0.c1)) ELSE vt0.c2 COLLATE RTRIM END DESC, ((((((vt0.c2)AND(vt0.c0)))AND(vt0.c0))) NOTNULL)) FROM vt0 WHERE (COALESCE(x'', 0X2e73c643) COLLATE RTRIM);SELECT ALL vt0.c2 FROM vt0 WHERE ((((((('?_')AND('')))AND(0x720374bf)))LIKE(((0x3aaa293c) NOT BETWEEN (x'') AND (''))))); -- 0ms;
SELECT DISTINCT MIN((((vt0.c1, 0.8212262448827428, rt0.c1)) BETWEEN ((vt0.c2, rt0.c2, vt0.c1)) AND ((vt0.c1, rt0.c2, '-1696960796')))) FROM rt0 LIMIT 1789589959 OFFSET -136783494;SELECT DISTINCT CAST((NOT (rt0.c0)) AS TEXT) FROM rt0; -- 0ms;
SELECT AVG(((((rt0.c1)AND(vt0.c0)))AND(vt0.c1))) COLLATE BINARY FROM rt0;SELECT DISTINCT ((((rt0.c2 COLLATE BINARY)AND(((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c2)))))OR(((rt0.c1)||(vt0.c1)))) FROM vt0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((((vt0.c1)OR(rt0.c0)))OR(0.06168992048483146))) BETWEEN (4.07025887E8) AND (CAST(vt0.c2 AS TEXT))) FROM vt0 WHERE (((((0.5644304707756276)>=('-1271034371')))<(CAST(NULL AS BLOB))));SELECT ALL LEAD(((rt0.c2)||(rt0.c1)) COLLATE RTRIM, rt0.c2, (((((rt0.c0)>>(rt0.c1))))>((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CASE COUNT(rt0.c2)  WHEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(x'')))AND(vt0.c0)) THEN rt0.c2 ELSE CAST(vt0.c2 AS TEXT) END FROM vt0;SELECT DISTINCT ABS((vt0.c2 IN (rt0.c0))) FROM rt0, vt0 WHERE (CASE WHEN NULL COLLATE BINARY THEN CAST(NULL AS REAL) END) GROUP BY (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c1 END IN ((+ (rt0.c1)))) HAVING SUM(((vt0.c1)>(vt0.c1))); -- 0ms;
SELECT DISTINCT COUNT((vt0.c2 IN ()) COLLATE RTRIM) FILTER(WHERE vt0.c0) OVER () FROM rt0;SELECT ALL (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c1)=(vt0.c0)), '799468083')), ((rt0.c0)==((rt0.c2 IN (vt0.c1)))), CAST(GROUP_CONCAT('UmL#F3') AS REAL), (((((rt0.c1, rt0.c0, NULL)) NOT BETWEEN (('', vt0.c1, NULL)) AND ((vt0.c2, NULL, rt0.c2))))-(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c1)))AND(vt0.c0)))), TOTAL(((vt0.c1)>(vt0.c1)) COLLATE NOCASE) OVER ( ORDER BY CAST(CAST(vt0.c2 AS NUMERIC) AS NUMERIC)  NULLS LAST, CAST(vt0.c1 AS REAL) COLLATE BINARY  NULLS LAST RANGE ((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(HEX(DISTINCT rt0.c2))))AND(((((rt0.c2)OR(rt0.c0)))AND(vt0.c2)))))OR(((vt0.c2)>(rt0.c2)))))AND(x'072f')) PRECEDING) FROM rt0 WHERE ((((x'e55e' IN ()))||(load_extension(x'', 0.5644304707756276)))) GROUP BY ((((rt0.c0)GLOB(rt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c2 COLLATE RTRIM)) LIMIT 1143711381;SELECT DISTINCT CAST(((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS REAL), CASE WHEN RTRIM(vt0.c1) THEN (~ (rt0.c1)) END, NULL COLLATE NOCASE FROM vt0 WHERE (CASE WHEN (NOT (NULL)) THEN ((NULL) NOT NULL) WHEN (~ (NULL)) THEN 0.2557044593005725 COLLATE BINARY WHEN (('*') NOTNULL) THEN ABS(0.11415839406542316) ELSE (+ ('')) END);SELECT DISTINCT IFNULL(((0.8460642199211681) BETWEEN (vt0.c2) AND (rt0.c0)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) FROM vt0, rt0 WHERE ((((((NULL)) NOT BETWEEN ((NULL)) AND ((x''))))%(GLOB(7.79339331E8, '-558102103')))); -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN NULL THEN vt0.c0 END) NOT BETWEEN (COUNT(*)) AND (((rt0.c0) IS TRUE))) FROM vt0 WHERE (CASE WHEN (~ (NULL)) THEN -519816362 END);SELECT MIN(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c2))) FROM rt0 WHERE (LTRIM((-511684130 IN ()), 4.07025887E8)) LIMIT 993950907 OFFSET 435655885;SELECT DISTINCT (((vt0.c1 IN ()))IS NOT(GLOB(rt0.c1, rt0.c0))), CAST(((vt0.c2)>=(vt0.c0)) AS NUMERIC), ((CASE WHEN rt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 END)&(((rt0.c0)||(rt0.c2)))) FROM rt0 WHERE (((((x'') IS FALSE)) BETWEEN (CAST(x'9046' AS REAL)) AND ((0.2940302651533159 IN (0.13022707242812603))))) GROUP BY x'', (0.04012202132936038 IN ()), x'60d94c9e', (((CAST(rt0.c2 AS INTEGER), ((vt0.c0)>=(rt0.c1)), (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))>((((((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)), CASE vt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN rt0.c2 THEN vt0.c2 ELSE vt0.c0 END))), UNLIKELY(((rt0.c1)LIKE(rt0.c2))) LIMIT 1593267268 OFFSET -1227437562;SELECT DISTINCT (((~ (vt0.c0)))==(DATETIME(vt0.c0, rt0.c2, rt0.c1))) FROM rt0 WHERE (CAST(CAST(x'' AS TEXT) AS TEXT));SELECT (((x'6207', rt0.c0, rt0.c2)) NOT BETWEEN (((vt0.c0 IN (rt0.c1)), NULL COLLATE BINARY, ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c2)))) AND ((x'', rt0.c2 COLLATE RTRIM, vt0.c2))), LAG(CASE WHEN (- (rt0.c1)) THEN ((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(0.7261426068023171)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)) WHEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) THEN (((rt0.c2, rt0.c1, NULL, rt0.c1, rt0.c2))<((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt0.c1))) WHEN '1066313609' THEN NULL COLLATE BINARY ELSE UNLIKELY(DISTINCT rt0.c0) END, ((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (NULL)), (load_extension(rt0.c1) IN ())) OVER ( RANGE  CURRENT ROW), SUM(UPPER(DISTINCT rt0.c2)) FROM rt0 WHERE ((('1593267268' COLLATE RTRIM) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (CAST(0xffffffff8fee7755 AS NUMERIC)))) GROUP BY ((json_array(vt0.c1, rt0.c0, rt0.c2, vt0.c1))==(CAST(vt0.c0 AS NUMERIC)));SELECT DISTINCT 1.912829119E9 FROM rt0, vt0; -- 0ms;
SELECT ((TRIM(rt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND ((((vt0.c0))<((vt0.c2))))) FROM rt0;SELECT ((COUNT(vt0.c0))>(CASE vt0.c0  WHEN vt0.c1 THEN rt0.c1 END)) FROM rt0 WHERE (((CASE WHEN 53557342 THEN '1''.|Fi' ELSE '-1200160330' END) BETWEEN (((x'1cacc368')/(0.665026899451372))) AND (((NULL) ISNULL)))) GROUP BY (((rt0.c0)<=(x'')) IN ()), (((vt0.c2 IN (vt0.c2)))<(((0.7069477633631092)IS NOT(vt0.c0)))), '-1271034371';SELECT ALL ((rt0.c1 IN (rt0.c0)) IN ()), (~ (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c2)))), ((vt0.c2)|(COUNT(vt0.c0))) FROM rt0, vt0 WHERE ((((('87660429')>>(0.16225680325474023))) BETWEEN ((((('}dbEFUf풇-')OR('0.04012202132936038')))OR(NULL))) AND (((NULL)LIKE(1623230139))))); -- 0ms;
SELECT DISTINCT ((LOWER(rt0.c2))&(RTRIM(vt0.c2))), (((vt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB), (+ (vt0.c2)), vt0.c0)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN -1464297812 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, rt0.c0 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL))))), ((json_type(vt0.c1))<(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 END)) FROM vt0, rt0 WHERE ((- (((((-1496961349)OR('1763467355')))OR('&h'))))); -- 0ms;
SELECT ALL ((json_insert(rt0.c2, vt0.c1, 0.8138099877863942, vt0.c2, rt0.c1))%(CASE rt0.c2  WHEN vt0.c1 THEN x'' END)) FROM rt0 WHERE (-511684130);SELECT ALL TRIM(DISTINCT ((rt0.c2)OR(rt0.c1)), CAST(vt0.c0 AS BLOB)), ((rt0.c1 IN ()) IN (SUM(rt0.c2))), json_object(CASE rt0.c1  WHEN vt0.c2 THEN rt0.c1 ELSE vt0.c0 END, AVG(vt0.c2), ((vt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)), x'6f9ccc45', CAST(vt0.c2 AS REAL)) FROM vt0, rt0;SELECT vt0.c1 FROM vt0, rt0 WHERE (CASE WHEN (('664790405')LIKE(NULL)) THEN LOWER('') ELSE x'96ea' END); -- 0ms;
SELECT DISTINCT LEAD(((x'a7fc') ISNULL), vt0.c0, (NULL IN ())) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT (((vt0.c0 IN ()))>(CASE WHEN vt0.c2 THEN vt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)) FROM vt0, rt0 WHERE (CASE (('lGvG/룟D6')%(0x1d6ed7b3))  WHEN ((0x9420d3a) NOT BETWEEN (0.594153796816287) AND (-1227437562)) THEN ((664790405)IS NOT(x'50b2')) ELSE (('UmL#F3')=('1043456588')) END) LIMIT -1730650379; -- 0ms;
SELECT DISTINCT (((((((('')OR(vt0.c0)))OR(0.9747504446343842)))OR(vt0.c0)))AND(rt0.c1)) COLLATE RTRIM FROM rt0;SELECT DISTINCT ((CAST(vt0.c2 AS NUMERIC))/((rt0.c0 IN (vt0.c2)))), GROUP_CONCAT(COUNT(*)), ((((LIKELIHOOD(rt0.c1, 0.6174641924181319))OR((- (rt0.c2)))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM vt0;SELECT DISTINCT (((rt0.c2)) BETWEEN ((vt0.c0)) AND (((+ (vt0.c2))))) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((((vt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c1, vt0.c2, vt0.c0))) IN ()) FROM rt0 ORDER BY TRIM(DISTINCT rt0.c0 COLLATE NOCASE) ASC, (~ (((vt0.c1)>(vt0.c0)))), LOWER(DISTINCT CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN rt0.c0 END);SELECT DISTINCT CASE WHEN ((((((((vt0.c0)OR(vt0.c1)))AND(rt0.c0)))OR(vt0.c1)))OR('-1e500')) THEN ((0X1842b8df) BETWEEN (vt0.c2) AND (vt0.c0)) END, DATETIME((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))), COUNT(vt0.c2), ((vt0.c0)>=(rt0.c0)), TOTAL(rt0.c0), (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0)))), COALESCE(CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END, AVG(rt0.c0)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 IN ()) IN ()) FROM vt0, rt0 GROUP BY CAST(((vt0.c2) ISNULL) AS TEXT), (('') NOT BETWEEN ((- (rt0.c0))) AND (CAST(rt0.c0 AS REAL))), ((((rt0.c0) IS TRUE)) NOT BETWEEN ('amF2U') AND (((NULL) BETWEEN (rt0.c1) AND (rt0.c2)))) HAVING (((((((((rt0.c1 IN (rt0.c0)))AND(((rt0.c0) NOTNULL))))OR(((x'd4ec')<(rt0.c0)))))AND(((vt0.c2) NOTNULL))))OR(((vt0.c1)/(rt0.c2)))); -- 1ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, rt0.c1))==((rt0.c0, rt0.c0, vt0.c1)))) NOTNULL) FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS REAL))>>((rt0.c0 IN ()))); -- 0ms;
SELECT (+ (((vt0.c0)+(rt0.c1)))) FROM vt0;SELECT DISTINCT (((vt0.c1 IN ())) BETWEEN ((rt0.c2 IN (vt0.c1))) AND (rt0.c2 COLLATE BINARY)) FROM vt0, rt0 ORDER BY ((CAST(rt0.c2 AS TEXT)) NOT NULL) ASC; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((x'250d5cf4')<>(x''))) ISNULL)); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), CAST(json_object(rt0.c1, rt0.c1) AS NUMERIC), (((rt0.c0 IN (rt0.c0)))>=(0.09352688177668567)) FROM vt0 WHERE (CAST(((NULL)IS(0xffffffffae7290c3)) AS NUMERIC));SELECT ALL (~ (((rt0.c2)<>(rt0.c1)))) FROM vt0, rt0 GROUP BY ((((0xffffffff8de5be5c) IS FALSE)) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS BLOB))), (((vt0.c1) NOTNULL) IN ()), 'E?6酈5愰i', ((((rt0.c1)AND((rt0.c2 IN ()))))AND(((vt0.c2)==(rt0.c1)))), ((((vt0.c2)OR(vt0.c1)))AND(rt0.c0)) COLLATE BINARY;SELECT ((IFNULL(vt0.c2, vt0.c0))>=(CASE rt0.c1  WHEN NULL THEN rt0.c0 END)) FROM vt0 WHERE (CAST(CASE 0.2536726513253399  WHEN '郃l' THEN x'' WHEN NULL THEN '<bZ#[],(%3' WHEN x'' THEN '805087703' ELSE NULL END AS TEXT));SELECT ALL 'K)oPB#Y].' FROM rt0, vt0; -- 1ms;
SELECT ALL ABS(((vt0.c0)<=(vt0.c0))) FROM vt0 WHERE (CAST(x'' AS NUMERIC) COLLATE NOCASE) ORDER BY CAST(((vt0.c0) IS FALSE) AS BLOB) ASC  NULLS FIRST; -- 0ms;
SELECT ALL COUNT(((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) FROM rt0, vt0 GROUP BY (((vt0.c0)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (x'a738') AND (rt0.c0)))) AND ((vt0.c0 COLLATE BINARY))), (((vt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c1) IS FALSE), NULLIF(rt0.c0, rt0.c0), (rt0.c1 IN ()))) AND ((TRIM(vt0.c2), ((((vt0.c2)OR(rt0.c2)))AND(vt0.c0)), 8.7660429E7))), (((rt0.c1)) NOT BETWEEN ((ABS(DISTINCT rt0.c0))) AND (((NOT (rt0.c2))))) HAVING ((rt0.c0)IS NOT((~ (rt0.c1)))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c2 THEN 233784841 COLLATE BINARY END FROM vt0 NOT INDEXED, rt0; -- 1ms;
SELECT ((((((rt0.c1) NOT NULL))AND(AVG(rt0.c2))))OR(((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))), ((((((rt0.c0)AND(vt0.c1)))OR(vt0.c2)))=(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END)), TOTAL((- (vt0.c2)) COLLATE RTRIM) FROM rt0, vt0 WHERE (CASE ((NULL) NOT NULL)  WHEN ((NULL) BETWEEN (1789589959) AND (x'')) THEN '?El![N0Fg' COLLATE RTRIM ELSE CAST(NULL AS TEXT) END) LIMIT -679902107; -- 0ms;
SELECT ALL ((((((rt0.c0)LIKE(vt0.c1)))AND(vt0.c2 COLLATE BINARY)))OR((~ (rt0.c2)))) FROM vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c1)>(rt0.c0))))) DESC  NULLS LAST, NULL DESC  NULLS LAST; -- 0ms;
SELECT CAST(CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) FROM vt0, rt0; -- 0ms;
SELECT json_object(CASE WHEN vt0.c2 THEN rt0.c0 END, ((rt0.c0)/(rt0.c1))) FROM vt0, rt0;SELECT DISTINCT '-1914323364' FROM vt0 WHERE (CASE ((x'') IS TRUE)  WHEN ((NULL) NOT BETWEEN (x'') AND (NULL)) THEN (('0.8582677085118636') NOT NULL) WHEN CAST(x'' AS BLOB) THEN (('') NOT BETWEEN (0X10a8dcb9) AND (0.9800058150481082)) WHEN (0.5718979547343827 IN (NULL)) THEN (((x'2f1d')) NOT BETWEEN (('HQ^')) AND ((1177141941))) ELSE ((0.5025435131954367) BETWEEN (0X620530de) AND (0.20767462590963193)) END); -- 0ms;
SELECT DISTINCT CAST(0Xffffffffd046ec26 COLLATE NOCASE AS NUMERIC), CAST(((vt0.c2)IS(rt0.c0)) AS NUMERIC), UNLIKELY(DISTINCT (- (vt0.c2))) FROM rt0, vt0 WHERE ((~ (json_array_length(x'4895e7c7')))) ORDER BY vt0.c2, GLOB(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c2 ELSE rt0.c0 END, ((rt0.c1)<>(vt0.c1))) DESC LIMIT -1728374754;SELECT ((rt0.c2)+((vt0.c1 IN ()))) FROM vt0 WHERE (((((NULL)IS('799468083'))) BETWEEN (IFNULL(DISTINCT NULL, 0.6782715735415766)) AND ('')));SELECT DISTINCT RANK() OVER (), ((((vt0.c2) ISNULL)) NOT NULL), ((vt0.c0)<=('0.05942367740308596')) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ((rt0.c2) IS FALSE) COLLATE BINARY FROM rt0, vt0 WHERE ((((HEX(0.18162123045524547)))<>(((((x''))<(('-1689563542'))))))) LIMIT -49276387 OFFSET 1644507358; -- 1ms;
SELECT DISTINCT CAST((((vt0.c2))<(('435655885'))) AS BLOB), ((CAST(rt0.c1 AS REAL))<(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 END)), LIKELY(NULLIF(rt0.c1, rt0.c1)) FROM rt0 WHERE (CASE (('Vyv6\r9')/('-136783494'))  WHEN (- ('0.06168992048483146')) THEN HEX('924735629') END);SELECT ((((rt0.c2) IS FALSE))-(vt0.c0)), ((((rt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (rt0.c1)), CASE vt0.c0  WHEN ((vt0.c2)IS(rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1)) ELSE ((rt0.c0)OR(rt0.c0)) END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT LAG(CASE ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (~ (vt0.c0)) END, (((rt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), CASE '-1941577786'  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END, rt0.c0)) AND ((((vt0.c2) NOTNULL), (((NULL, vt0.c1, rt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c1, vt0.c2, rt0.c1))), (~ (rt0.c0))))), NULL) OVER ( ORDER BY ((rt0.c1) ISNULL) ASC) FROM vt0, rt0; -- 0ms;
SELECT ((((((((((vt0.c2)<>(NULL)))OR((((rt0.c0, rt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c0))))))OR(rt0.c1)))AND(MIN(rt0.c2))))AND(COUNT(*))) FROM rt0, vt0 WHERE (((CASE '-1197820279'  WHEN x'' THEN 0X3ac102a0 END)*(CAST(484554166 AS NUMERIC)))) LIMIT 1535542243 OFFSET -890294942; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c2)))OR(((vt0.c2)+(vt0.c0)))))OR(rt0.c1)))AND(((((((((rt0.c2)AND(vt0.c2)))OR(rt0.c0)))OR(0.11858049080734023)))AND(vt0.c1)))))AND(CAST(rt0.c1 AS REAL))) FROM rt0, vt0 GROUP BY ((((vt0.c2)<=(rt0.c0))) BETWEEN (UPPER(DISTINCT vt0.c1)) AND (rt0.c0 COLLATE RTRIM)) LIMIT 220243251 OFFSET -1787806264; -- 0ms;
SELECT DISTINCT MAX((+ (vt0.c2))) FROM rt0;SELECT ALL (((rt0.c0, rt0.c0, 0.7069477633631092, '', vt0.c1)) NOT BETWEEN ((NULLIF(DISTINCT vt0.c1, rt0.c0), (~ (vt0.c2)), (- (rt0.c0)), vt0.c1 COLLATE BINARY, (+ (rt0.c0)))) AND ((vt0.c1, ((rt0.c0)IS NOT(vt0.c1)), ((rt0.c0)|(rt0.c1)), ((rt0.c0) IS FALSE), LIKELY(DISTINCT rt0.c1)))) FROM rt0;SELECT DISTINCT (((CAST(vt0.c1 AS INTEGER), (('l8Snhl')-(vt0.c1)), x''))<((((((((((436757250)OR(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)), (((rt0.c1))>((rt0.c2))), ((vt0.c0) NOT NULL)))) FROM vt0, rt0; -- 1ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((MAX(rt0.c1)))) FROM vt0, rt0 WHERE (((((x'')<<(x'3fb1')))>=((('') IS FALSE)))) INTERSECT SELECT DISTINCT GROUP_CONCAT(((rt0.c1) IS TRUE)) OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((NULL)) BETWEEN ((((rt0.c2)<=(rt0.c1)))) AND ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1))))) FROM rt0 WHERE ((((((x'')!=('^G5'))))=(((-331515775 IN ())))));SELECT DISTINCT CASE (((rt0.c0))>((rt0.c1)))  WHEN ((((((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) THEN AVG(x'') ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c1)) END, (((vt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((0x545025ab)%(vt0.c0))))), ((COUNT(*)) NOT BETWEEN (MAX(rt0.c2, vt0.c0)) AND (UPPER(vt0.c2))) FROM vt0 WHERE (x'') LIMIT -1819702536 OFFSET 2102827214;SELECT DISTINCT 87749720 COLLATE BINARY COLLATE RTRIM, ((((vt0.c0) IS TRUE)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((7.95375862E8)))) AND (SQLITE_COMPILEOPTION_GET(rt0.c2))), CAST(((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) AS TEXT) FROM vt0, rt0; -- 0ms;
SELECT ALL CAST(vt0.c2 COLLATE BINARY AS REAL) FROM vt0 WHERE (LAST_INSERT_ROWID()) GROUP BY ((((CASE WHEN rt0.c2 THEN vt0.c0 END)AND(((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR(0.47666755690062934)))))AND((((rt0.c1))!=((vt0.c0)))));SELECT DISTINCT (rt0.c0 COLLATE NOCASE IN (((vt0.c0) BETWEEN (x'') AND (rt0.c1)))) FROM rt0, vt0 WHERE (json_array_length(((x'')*(x'')))); -- 0ms;
SELECT DISTINCT ((+ (vt0.c1)) IN ()) FROM rt0 LIMIT -1736184570 OFFSET -2057296731; -- 0ms;
SELECT DISTINCT (((vt0.c2 IN (rt0.c2)))<(CASE WHEN rt0.c1 THEN vt0.c2 ELSE '1454640264' END)), x'', CAST(vt0.c2 COLLATE RTRIM AS REAL), (((rt0.c0) IS FALSE) IN ()), CASE WHEN ((rt0.c1)AND(vt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE rt0.c2 END FROM rt0;SELECT DISTINCT highlight(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE vt0.c2  WHEN rt0.c1 THEN rt0.c0 END, COALESCE(DISTINCT vt0.c2, vt0.c0), rt0.c2) FROM rt0;SELECT DISTINCT ((((rt0.c1) NOTNULL))IS(SQLITE_SOURCE_ID())) FROM vt0, rt0 WHERE (((0.22114602283689466 IN ()) IN ())) INTERSECT SELECT DISTINCT CAST(((vt0.c1)>>(0.2881478057391872)) AS REAL) FROM vt0, rt0 WHERE (CAST(CASE ''  WHEN '-800658394' THEN x'' WHEN NULL THEN 0.8505465379767626 WHEN NULL THEN x'' END AS NUMERIC)); -- 0ms;
SELECT DISTINCT (~ (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)), (((((rt0.c1))<((rt0.c1))))GLOB(((rt0.c1)<=(rt0.c1)))), ((((PRINTF(vt0.c1, vt0.c1, rt0.c1))OR((((vt0.c1, vt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c2, vt0.c2)) AND ((vt0.c1, rt0.c2, x''))))))AND(CASE WHEN rt0.c2 THEN vt0.c1 END)) FROM rt0 WHERE (PRINTF((- (x'c12c896ce9d9'))));SELECT (((((vt0.c2)AND(vt0.c0)))AND(rt0.c0)) IN ()), 0.6423282465243677, CAST((vt0.c0 IN (rt0.c1, vt0.c2)) AS REAL) FROM vt0;SELECT DISTINCT json_valid(((vt0.c0)=(vt0.c0))), (((vt0.c2 COLLATE NOCASE))==((((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0))))), json_object(vt0.c1, vt0.c1) COLLATE NOCASE COLLATE BINARY FROM vt0;SELECT DISTINCT (rt0.c2 COLLATE RTRIM IN ()) FROM vt0, rt0 WHERE (CAST(x'' COLLATE BINARY AS BLOB)); -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN (((~ (0.05576153594005451)))) AND ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))))) FROM vt0 GROUP BY (((((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c2)), (rt0.c1 IN (vt0.c1)), CAST(rt0.c0 AS NUMERIC)))==(((NOT (vt0.c1)), CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN -2069278131 WHEN rt0.c0 THEN rt0.c0 END, CAST(rt0.c2 AS REAL)))) HAVING '';SELECT ALL COUNT(*) OVER (), CAST((rt0.c1 IN ()) AS NUMERIC), CASE ((((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c2))  WHEN vt0.c2 COLLATE BINARY THEN (((rt0.c1))=((rt0.c0))) ELSE CASE rt0.c0  WHEN rt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END END, ((vt0.c0) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (((((((((((((rt0.c1)OR(rt0.c2)))OR(NULL)))AND(rt0.c1)))AND(NULL)))AND(rt0.c1)))AND(x'')))), ((((((((((rt0.c0)GLOB(vt0.c1)))AND(NULL COLLATE RTRIM)))AND((- (rt0.c0)))))AND((vt0.c2 IN ()))))AND(CAST(vt0.c1 AS REAL))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NULLIF(vt0.c1 COLLATE RTRIM, (((vt0.c0))>((vt0.c1)))), rt0.c0, ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND ((~ ('-1269941538')))) FROM vt0 WHERE (CAST((('')+(NULL)) AS REAL));SELECT DISTINCT LIKELIHOOD(ABS(DISTINCT vt0.c1), 0.08237643006499407), COUNT((((vt0.c1, rt0.c1, 0.05942367740308596))<((rt0.c0, vt0.c0, vt0.c2)))) OVER (), (~ (x'')) FROM rt0;SELECT ALL MAX(((rt0.c2)+(rt0.c1))) FROM rt0, vt0 WHERE ((((((((((((('' COLLATE BINARY)OR((((NULL))<((-1831724759))))))AND((('-2057296731') NOTNULL))))OR(((0.7538498951153563)<<('')))))OR(((0.9631036608992606)<=(0.05761437749318454)))))OR(((NULL)>(x'')))))OR(('' IN ())))); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (NULL COLLATE BINARY))) GROUP BY NULL; -- 0ms;
SELECT ((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(((vt0.c1)/(vt0.c2)))))OR(vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT ALL (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((rt0.c1)||(rt0.c2)))) FROM vt0 WHERE (((0Xffffffffce8ea823) NOT BETWEEN ((('') NOTNULL)) AND (LTRIM('1640400451')))) GROUP BY ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c2 ELSE vt0.c0 END)LIKE(x'')) HAVING (((((((((rt0.c2 IN ()))AND(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(ABS(rt0.c0))))AND(((((NULL)AND(vt0.c1)))AND(vt0.c1)))))AND(vt0.c1 COLLATE RTRIM)) ORDER BY ((((0.41241670139948094)OR(rt0.c2)))AND(rt0.c2)) COLLATE NOCASE ASC LIMIT 1396385992;SELECT DISTINCT ((((rt0.c1) BETWEEN (vt0.c0) AND (x''))) NOT NULL) FROM vt0, rt0 ORDER BY rt0.c1; -- 0ms;
SELECT ALL ((((rt0.c1)IS NOT(vt0.c0)))*((rt0.c1 IN ()))), (+ (vt0.c0)) COLLATE RTRIM, (((rt0.c2)) BETWEEN ((vt0.c2)) AND ((CASE vt0.c2  WHEN rt0.c1 THEN NULL ELSE vt0.c2 END))) FROM vt0 WHERE ((((('SU䩔㸾c?')AND('1593267268')))OR(NULL)) COLLATE RTRIM);SELECT DISTINCT (((vt0.c2 IN ()))==(CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END)), (((rt0.c2)) NOT BETWEEN ((((vt0.c0)/(rt0.c2)))) AND ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 END))), rt0.c1 FROM vt0, rt0 WHERE (((((NULL) NOT BETWEEN (0Xffffffffd148668b) AND (x''))) BETWEEN ((((x'a848')) BETWEEN ((NULL)) AND (('')))) AND ((- ('805087703'))))); -- 0ms;
SELECT ALL ABS(DISTINCT (((rt0.c1, rt0.c2, vt0.c2))<=((x'9b92', rt0.c2, rt0.c0)))) FROM vt0, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (vt0.c1 COLLATE NOCASE IN (rt0.c0)), ((((((rt0.c0)OR(vt0.c2)))OR(rt0.c2))) BETWEEN (UPPER(vt0.c2)) AND (LIKELY(DISTINCT vt0.c0))), FIRST_VALUE(LIKELIHOOD(DISTINCT rt0.c2, 0.981221170910856) COLLATE NOCASE) OVER ( ROWS BETWEEN ((((rt0.c1)OR(rt0.c2)))IS(((rt0.c2)<=(NULL)))) PRECEDING AND ((json(NULL)) IS FALSE) PRECEDING) FROM rt0;SELECT (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN '-2069278131' END))) FROM rt0 WHERE (CAST(0Xffffffffc13be167 COLLATE BINARY AS INTEGER)) LIMIT -1739750806 OFFSET 1593267268;SELECT vt0.c2 FROM rt0, vt0; -- 0ms;
SELECT x'92bf' FROM rt0 WHERE ((+ (-661653078)) COLLATE RTRIM); -- 1ms;
SELECT ALL ((NOT (vt0.c2)) IN (((rt0.c1) IS TRUE), ((vt0.c2)/(rt0.c1)))), SUM(CASE WHEN vt0.c2 THEN x'' ELSE vt0.c2 END), (((vt0.c2)) BETWEEN (((vt0.c1 IN ()))) AND ((((vt0.c0) NOT NULL)))) FROM rt0, vt0 WHERE (((('1286510762')) BETWEEN (((('TRUE')>=(0.951260440376138)))) AND ((CASE NULL  WHEN NULL THEN x'' END)))) GROUP BY (~ (('1510227651' IN (vt0.c1)))); -- 0ms;
SELECT DISTINCT (((((vt0.c2)IS NOT(vt0.c0))))>=((vt0.c1))) FROM vt0, rt0 WHERE ((((NOT ('-1787806264')))LIKE(CASE WHEN 795375862 THEN NULL ELSE '>PKN2*.ʠt' END))) ORDER BY ((((((((TYPEOF(DISTINCT x''))OR(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))))OR(vt0.c2)))AND((- (vt0.c0)))))AND(LOWER(DISTINCT rt0.c1)))  NULLS FIRST; -- 0ms;
SELECT ALL (((((vt0.c0)/(vt0.c2))))<((('9?.f?%' IN ())))), NULL, (((((rt0.c2 IN ()))OR(rt0.c1 COLLATE RTRIM)))OR(IFNULL(rt0.c0, vt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(x'' COLLATE BINARY AS NUMERIC) FROM rt0; -- 0ms;
SELECT ALL SUM(((rt0.c2)|(rt0.c0))) OVER () FROM rt0, vt0 WHERE (((((CAST(NULL AS BLOB))OR(('1043456588' IN (0.18162123045524547)))))AND(((x'')/('1591799750'))))) GROUP BY CAST(1.454640264E9 AS BLOB); -- 0ms;
SELECT DISTINCT AVG((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE BINARY) FROM vt0, rt0 WHERE ((+ (('' IN ())))); -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((vt0.c1)-(vt0.c0)) IN ()), (((((vt0.c1, rt0.c1, rt0.c1, vt0.c1, rt0.c2))>((rt0.c2, vt0.c1, rt0.c1, rt0.c1, rt0.c0)))) NOTNULL), '-1730650379' FROM vt0 LEFT OUTER JOIN rt0 ON (((((((((rt0.c2 IN ()))OR(((vt0.c1)<(vt0.c2)))))AND(rt0.c1)))AND(CAST(rt0.c2 AS TEXT))))OR(CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END)); -- 0ms;
SELECT ALL ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN ((((vt0.c2))>=((vt0.c0)))) AND (IFNULL(DISTINCT vt0.c0, vt0.c1))) FROM rt0 WHERE ((('' COLLATE BINARY) NOTNULL));SELECT CAST(GROUP_CONCAT(rt0.c1) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT (LOWER(vt0.c2) IN (CASE WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END)) FROM vt0;SELECT DISTINCT ((((rt0.c1)AND(vt0.c2)))OR(vt0.c2)) COLLATE BINARY FROM rt0;SELECT ALL SUM(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END) FROM vt0 WHERE ((+ (CAST(x'' AS NUMERIC)))) GROUP BY CASE WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)) THEN ((vt0.c2)>=(vt0.c2)) END HAVING (COUNT(rt0.c1) IN ());SELECT DISTINCT SUM(((vt0.c2) BETWEEN ('') AND (vt0.c1))) FROM vt0, rt0 WHERE ((NOT ((('쀴U') NOT NULL)))); -- 1ms;
SELECT ALL ((((((vt0.c0)*(vt0.c0)))OR(((((vt0.c1)OR(rt0.c1)))OR(vt0.c1)))))OR((rt0.c1 IN ()))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT HEX(DISTINCT CAST(vt0.c1 AS NUMERIC)) FROM vt0; -- 0ms;
SELECT ALL COUNT(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0))) OVER () FROM vt0, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)OR(CASE WHEN rt0.c0 THEN 0X233b0c76 END)))AND(((((rt0.c2)OR(vt0.c2)))AND(vt0.c2)))), (+ (IFNULL(DISTINCT vt0.c1, vt0.c0))), 1.414538667E9 FROM vt0 WHERE (LIKELY(CASE x''  WHEN '&DKO' THEN 928972472 ELSE 0xffffffff910d3dcb END)) GROUP BY ((((rt0.c1)LIKE(rt0.c2)))LIKE(SQLITE_VERSION())), ((vt0.c2 COLLATE NOCASE)/(CASE WHEN vt0.c2 THEN vt0.c1 END)), ((rt0.c2 COLLATE RTRIM)<=((((rt0.c1))>=((vt0.c0)))));SELECT (((((- (rt0.c1)))AND(((rt0.c2)<(rt0.c1)))))OR(rt0.c0 COLLATE BINARY)) FROM rt0 GROUP BY (((vt0.c2))!=((rt0.c0 COLLATE BINARY))), ((((rt0.c1)LIKE(vt0.c2))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c1))) AND ((('') NOTNULL))), (- (vt0.c0 COLLATE BINARY));SELECT DISTINCT (+ (vt0.c2)), (vt0.c1 COLLATE BINARY IN ()), (CAST(rt0.c1 AS NUMERIC) IN (MIN(vt0.c0), COALESCE(vt0.c2, vt0.c1, vt0.c1, vt0.c0, vt0.c2, rt0.c2))) FROM vt0 WHERE ((((('')+(NULL))) NOT BETWEEN (LOWER('')) AND ((+ (x'')))));SELECT json_type(vt0.c1 COLLATE RTRIM) FROM vt0 WHERE (DATE((NOT (0.04534326163660596)), (~ (x'7d1a')), (0.20767462590963193 IN (NULL, x'9aa95fae')), NULL COLLATE BINARY, json_valid(x''))); -- 0ms;
SELECT ALL CASE ((vt0.c0)IS(vt0.c0))  WHEN (((vt0.c1))>((rt0.c1))) THEN ((rt0.c2)>(vt0.c0)) WHEN json_array_length(rt0.c2) THEN rt0.c1 WHEN (rt0.c2 IN (rt0.c0, rt0.c2)) THEN vt0.c0 END FROM rt0 WHERE ((CAST(0Xffffffff8b6d2625 AS NUMERIC) IN ()));SELECT DISTINCT (('/W')IS((((rt0.c2, rt0.c2, vt0.c0, vt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c2, vt0.c1, vt0.c2, vt0.c0)) AND (('-1197820279', vt0.c1, rt0.c1, rt0.c0, rt0.c2))))), RANK() OVER ( ORDER BY NULL  NULLS LAST), ((CAST(rt0.c2 AS NUMERIC)) NOTNULL) FROM rt0, vt0 ORDER BY (CAST(rt0.c2 AS INTEGER) IN (((((((((((((vt0.c1)OR(rt0.c0)))AND(x'')))AND(rt0.c1)))AND(0.3992645732307871)))AND(rt0.c2)))AND(vt0.c0))))  NULLS LAST, CAST(((rt0.c1)!=(vt0.c2)) AS REAL); -- 0ms;
SELECT DISTINCT (((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c1))))>((COUNT(vt0.c2)))) FROM rt0;SELECT DISTINCT ((vt0.c0 IN ()) IN ()) FROM vt0 WHERE (((CASE WHEN x'' THEN 0.40878914022221835 END) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((((((('Wj,[F|') ISNULL))AND((NOT (vt0.c1)))))AND((- (vt0.c1)))))AND(((((vt0.c1)OR(vt0.c1)))AND(rt0.c1)))))AND(COALESCE(rt0.c2, rt0.c1))) FROM vt0 WHERE (((((((((((NULL)AND(NULL)))AND(-1240164178)))OR(-1e500)))AND('}+t')))|(x'' COLLATE NOCASE)));SELECT DISTINCT ((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c2 THEN rt0.c2 WHEN 0.31478913961982524 THEN vt0.c2 WHEN vt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END)LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) FROM rt0;SELECT ((((((((((rt0.c2) IS TRUE))OR(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND((0x10d6bca0 IN ()))))AND((vt0.c0 IN (rt0.c0)))))AND(CAST(rt0.c2 AS TEXT))) FROM vt0, rt0 LIMIT 53557342; -- 0ms;
SELECT (((('0.01745248955126122')!=(rt0.c2)))*(CASE rt0.c2  WHEN x'' THEN rt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END)) FROM rt0 WHERE (IFNULL(((NULL) IS TRUE), ((NULL)<(NULL))));SELECT ((((rt0.c2) NOT BETWEEN (vt0.c2) AND (rt0.c0))) NOTNULL) FROM rt0 GROUP BY x'', ((- (rt0.c0)) IN (CAST(vt0.c1 AS TEXT))), rt0.c0 HAVING (- (((rt0.c1)||(vt0.c0))));SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((((((((CASE NULL  WHEN NULL THEN '{劉ଲQCr' ELSE x'cd27ed24' END)AND(0.7759481051159235)))AND((+ (0.6094195917358536)))))AND(CASE WHEN x'b03a' THEN 0.28710933811978134 ELSE NULL END)))OR(((((x'')AND(NULL)))AND(0.9529017067742719))))); -- 1ms;
SELECT ALL NULL, (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))/((~ (vt0.c0)))), ((0.7989406674689341)>(MAX(vt0.c0))) FROM vt0 WHERE (((((NULL) NOT BETWEEN (0.29920919635805865) AND (NULL))) NOTNULL));SELECT ALL CAST(rt0.c0 AS INTEGER) FROM vt0 WHERE (CAST(('-1053040281' IN (0.4843959724742647)) AS REAL));SELECT DISTINCT ((((((((CAST(vt0.c1 AS TEXT))AND(CAST(rt0.c1 AS TEXT))))OR(SUM(NULL))))OR(CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END)))AND(0.41241670139948094)) FROM vt0, rt0 WHERE ((NOT (CASE WHEN 'UML#F3' THEN x'' WHEN 0.37294160111674834 THEN 'ಈA' WHEN 0.4861629478937203 THEN 0X35e5aff6 END))) ORDER BY (((((rt0.c0))!=((vt0.c2))))LIKE(((vt0.c1)IS NOT(rt0.c2)))) DESC; -- 0ms;
SELECT (NOT (CAST(rt0.c1 AS REAL))) FROM rt0, vt0 WHERE ((('' COLLATE BINARY)==((('_\*L') NOT BETWEEN (x'fd7c') AND ('>MZ<'))))) GROUP BY (((rt0.c2, ((0.018663337813229597)!=(rt0.c1)), ((((((((vt0.c2)AND(vt0.c0)))AND(0.19432798780630633)))OR(vt0.c0)))AND(vt0.c2))))>=((vt0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((rt0.c0)OR('1021157211'))))) HAVING (((vt0.c1)) NOT BETWEEN ((COUNT(rt0.c2))) AND ((''))) ORDER BY ((vt0.c2)+(rt0.c2)); -- 0ms;
SELECT GROUP_CONCAT((((rt0.c0))<>(('YDH')))) FROM rt0; -- 0ms;
SELECT (((((((((vt0.c1 IN ()))AND(ABS(vt0.c2))))AND(NULL)))OR((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, vt0.c1, rt0.c2)) AND ((rt0.c0, vt0.c1, rt0.c1))))))OR(((vt0.c2)<<(vt0.c2)))), CASE CASE WHEN 0.8747785705051236 THEN rt0.c2 END  WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c1)<(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))) END, CASE AVG(rt0.c1)  WHEN (((vt0.c1))>=((rt0.c0))) THEN ((rt0.c2) NOT NULL) END FROM rt0, vt0 ORDER BY ((rt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)GLOB(-650666772))) AND (UNLIKELY(vt0.c1)))  NULLS FIRST LIMIT -1831724759 OFFSET -669335190; -- 0ms;
SELECT DISTINCT ((((rt0.c1)OR(MAX('e?6酈5愰i'))))AND(GROUP_CONCAT(vt0.c0))) FROM vt0 LIMIT 1069949189;SELECT DISTINCT CASE WHEN CASE WHEN vt0.c2 THEN vt0.c1 WHEN 0.12606046334002197 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN (rt0.c0 IN ()) END FROM rt0 WHERE (CAST(((x'')LIKE(0.7722390749711509)) AS NUMERIC));SELECT rt0.c0, (x'' IN ()), CAST(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT) FROM vt0, rt0 WHERE ('M	ijQ'); -- 1ms;
SELECT CAST((((0.3992645732307871))<((vt0.c0))) AS REAL), ((((((((((vt0.c1) ISNULL))AND(((((vt0.c2)AND(vt0.c0)))OR(rt0.c2)))))OR(HEX(vt0.c1))))AND(AVG(rt0.c2))))AND(6.94894142E8)), (((rt0.c1 IN ()))IS(LIKELIHOOD(rt0.c0, 0.9976216769724402))), ((SUM(vt0.c2))||((rt0.c2 IN (rt0.c1)))), ((((0.7822069351602445) NOT BETWEEN (rt0.c2) AND (vt0.c0))) NOT BETWEEN (CASE WHEN x'' THEN vt0.c1 ELSE vt0.c2 END) AND (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0 WHERE (CAST('-1332486559' AS INTEGER) COLLATE NOCASE) GROUP BY ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)))|(((rt0.c2)LIKE(rt0.c0)))) HAVING ((((CAST(rt0.c2 AS NUMERIC))AND(x'')))AND(((rt0.c2) IS FALSE))) ORDER BY NULL  NULLS LAST;SELECT ((MAX(vt0.c0)) ISNULL), MIN(CASE '-2007898914'  WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE 0.4160867961326634 END), '-840993404', RANK() OVER (), x'' FROM vt0;SELECT DISTINCT TOTAL(((rt0.c2) NOTNULL)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT vt0.c2, (('㕻I')>(UPPER(rt0.c1))), GROUP_CONCAT(TOTAL((rt0.c0 IN ()))) FROM vt0, rt0;SELECT ((vt0.c2) IS FALSE) COLLATE BINARY, ((((x'') BETWEEN (rt0.c2) AND (x'')))<=((rt0.c0 IN (vt0.c1)))), CAST(((vt0.c2)&(rt0.c0)) AS REAL) FROM vt0, rt0 GROUP BY rt0.c1 HAVING (((CAST(rt0.c2 AS NUMERIC)))<(((vt0.c2 IN ())))); -- 1ms;
SELECT DISTINCT '928972472' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT 's*TIc' FROM rt0, vt0 LIMIT 435655885 OFFSET 2091323996; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS NUMERIC))*(CAST(vt0.c0 AS REAL))) FROM vt0, rt0 ORDER BY vt0.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(rt0.c0) FROM vt0;SELECT ALL TIME(CAST(rt0.c1 AS INTEGER), (((vt0.c1))<((rt0.c1))), vt0.c2, (((rt0.c1))<((rt0.c0))), CAST(rt0.c1 AS BLOB), CASE WHEN vt0.c0 THEN vt0.c0 END, ((rt0.c0)OR(rt0.c2))) FROM rt0 WHERE ((CAST(8.7660429E7 AS REAL) IN ()));SELECT DISTINCT '' FROM vt0, rt0; -- 0ms;
SELECT ((((vt0.c0)AND(rt0.c2)))<(rt0.c2)), CAST('0.5718979547343827' AS BLOB), ((((((((((NULL) IS FALSE))OR(HEX(rt0.c0))))AND((- (vt0.c1)))))OR(CASE WHEN rt0.c2 THEN 0.8637589479258293 WHEN x'7dc7' THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN NULL WHEN rt0.c0 THEN '-558102103' ELSE rt0.c0 END)))OR(CASE WHEN rt0.c2 THEN vt0.c2 END)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT LAG(LIKELY(DISTINCT rt0.c2), CAST(x'9c6a' AS REAL), CASE WHEN rt0.c0 COLLATE RTRIM THEN NULL END) OVER () FROM vt0, rt0; -- 1ms;
SELECT ALL (((rt0.c1, rt0.c2, vt0.c2)) BETWEEN (('-449124311', MAX(0.9906107119052449), ((rt0.c1)/(rt0.c2)))) AND ((COUNT(rt0.c1), TOTAL(vt0.c2), CASE vt0.c1  WHEN '' THEN vt0.c1 END))) FROM rt0, vt0 WHERE ((((0.0750293570024132)IS NOT(6.94894142E8)) IN ())); -- 0ms;
SELECT DISTINCT (((+ (rt0.c0)))|(TRIM(DISTINCT rt0.c0))) FROM vt0, rt0 WHERE (((((((NULL) BETWEEN (NULL) AND (0xfffffffff31dff53)))OR((('') BETWEEN (x'') AND (x'')))))OR(-1138548860))); -- 0ms;
SELECT ALL ((((rt0.c2)AND(rt0.c2 COLLATE RTRIM)))OR(x'')) FROM rt0; -- 0ms;
SELECT ALL ((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 END) NOT NULL), ROW_NUMBER() OVER (), (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))))=((COUNT(rt0.c1)))) FROM rt0 WHERE (((QUOTE(x'')) ISNULL));SELECT ALL (((((rt0.c2)OR(rt0.c2)))OR(vt0.c1)) IN (rt0.c2 COLLATE RTRIM)) FROM rt0 WHERE (0.5322725680678974);SELECT DISTINCT (((vt0.c1)+(rt0.c1)) IN (GROUP_CONCAT(vt0.c2))) FROM vt0, rt0 WHERE (((((((((0.5184121345320669)AND(0.42643902577542736)))OR(NULL)))OR(SQLITE_COMPILEOPTION_GET('樷4|vS'))))OR(((NULL) BETWEEN (0.11415839406542316) AND ('CC'))))) ORDER BY (- ((((vt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((vt0.c0, '', rt0.c0))))) DESC  NULLS LAST, ((rt0.c2)|(((vt0.c1) NOT BETWEEN (vt0.c0) AND ('')))) ASC, ((vt0.c1) NOTNULL) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((rt0.c1 IN ()))OR(((vt0.c2) NOT NULL))))AND((((rt0.c1, '꧗!', rt0.c1))==((rt0.c0, vt0.c0, rt0.c0))))) FROM rt0, vt0; -- 0ms;
SELECT ALL ((vt0.c1)<((((vt0.c1))>((rt0.c0))))) FROM rt0 GROUP BY (((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))<=((((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))AND('{O|QR5V')))OR(vt0.c1))))), (((CAST(rt0.c1 AS INTEGER)))<((((vt0.c0)*(rt0.c2))))), (((((vt0.c2 IN ()))OR(CAST(vt0.c1 AS TEXT))))OR(((rt0.c0)||(vt0.c1)))) HAVING '-1293793977';SELECT ALL CASE '928972472'  WHEN LAST_INSERT_ROWID() THEN CASE WHEN -661653078 THEN vt0.c2 END WHEN (- (rt0.c1)) THEN (~ ('-1190019406')) WHEN '⍫' THEN vt0.c1 COLLATE BINARY END FROM rt0, vt0 WHERE (CASE (+ (NULL))  WHEN CASE WHEN 0.9191500543410904 THEN 'y9' ELSE NULL END THEN ((((((((0Xfffffffff1cf8b81)OR(0.16820673221198934)))OR('233784841')))AND('2102827214')))OR(NULL)) ELSE CAST(0X55c93c3d AS TEXT) END) ORDER BY (((((((((((rt0.c0)AND(x'')))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c2)), x'd878', vt0.c1 COLLATE RTRIM))!=(((NOT (0xffffffffd229ddab)), (rt0.c0 IN ()), ((((NULL)OR(rt0.c0)))AND(rt0.c0)))))  NULLS FIRST; -- 1ms;
SELECT ((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c2)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN 0.42739314752282886 WHEN vt0.c1 THEN vt0.c1 END)))AND((vt0.c0 IN ()))), rtreenode(((((((((rt0.c1)OR(NULL)))AND(vt0.c0)))AND(vt0.c2)))OR(rt0.c0)), (((rt0.c0, rt0.c0, rt0.c2))<>((rt0.c0, '-406330569', '')))), vt0.c2 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((SUM(NULL)) NOT NULL) FROM vt0, rt0 WHERE (json_array_length(((('_|)4')) NOT BETWEEN ((x'')) AND ((-331515775))))); -- 0ms;
SELECT (((rt0.c1)) BETWEEN ((rt0.c2)) AND (((- (rt0.c2))))) FROM rt0; -- 0ms;
SELECT COUNT(((((vt0.c0)AND('')))AND(rt0.c2))) OVER (), ((((((((((vt0.c2)LIKE(vt0.c2)))AND(((0X496ac034)<=('-1788117475')))))OR(((NULL) NOT NULL))))OR(((rt0.c2)IS NOT(rt0.c2)))))AND(COUNT(vt0.c0))), ((SUM(rt0.c0))IS(rt0.c2)), IFNULL(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN rt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END, COUNT(vt0.c2)), (((('0.8212262448827428')%(vt0.c1))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (vt0.c0)) FROM rt0;SELECT ALL (vt0.c1 IN ()) COLLATE RTRIM FROM rt0, vt0; -- 1ms;
SELECT ALL ((((json_remove(rt0.c1, vt0.c1))OR(vt0.c1 COLLATE BINARY)))OR(MAX(vt0.c0))), '', (((+ (rt0.c0)))>(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0;SELECT DISTINCT '330700448', 'Uu\#' COLLATE BINARY, x'' FROM rt0, vt0 WHERE (((((((x'2585')AND(x'38cb')))OR(x'')))>=((~ (0.9047327432272366))))); -- 0ms;
SELECT CAST('' COLLATE BINARY AS INTEGER) FROM vt0, rt0 GROUP BY (((((vt0.c2))<((vt0.c1)))) NOTNULL); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c2)) IS FALSE), LAG(((CAST('>MZ<' AS NUMERIC))=(rt0.c1 COLLATE BINARY)), ((rt0.c2 COLLATE BINARY)/(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))), ((((((rt0.c1)AND(rt0.c0)))OR(0.30291389192230356))) NOT BETWEEN ((((rt0.c0, rt0.c0, rt0.c0))=((rt0.c1, -1931700700, rt0.c2)))) AND (rt0.c0 COLLATE RTRIM))) OVER (), COUNT(CAST(rt0.c2 AS REAL)), ((CASE WHEN vt0.c2 THEN rt0.c0 END) NOT BETWEEN (('e?6酈5愰i' IN (rt0.c1))) AND (CAST(vt0.c1 AS BLOB))), LAG(((((rt0.c1) ISNULL))<=(rt0.c1 COLLATE RTRIM)), IFNULL(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 END, CAST(rt0.c0 AS BLOB)), CASE ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))  WHEN (- (NULL)) THEN ((rt0.c0)GLOB(rt0.c0)) WHEN ABS(rt0.c1) THEN (+ (rt0.c0)) WHEN ((rt0.c2)GLOB(rt0.c0)) THEN ((rt0.c0)-(rt0.c2)) ELSE rt0.c1 END) OVER () FROM rt0 WHERE (((((('')) NOT BETWEEN (('0.06632043176392144')) AND ((-944766323))))&((('7ʇ') IS TRUE))));SELECT ALL CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) AS INTEGER) FROM rt0;SELECT ALL SQLITE_VERSION() FROM vt0 WHERE ((- (CASE NULL  WHEN NULL THEN 1677834723 WHEN x'1c78' THEN '-2074004788' WHEN x'570c' THEN NULL END))); -- 0ms;
SELECT ALL ((vt0.c2 COLLATE RTRIM)LIKE(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(vt0.c2)))), CAST(((805087703)%(vt0.c0)) AS NUMERIC), ((((vt0.c0)<(vt0.c0)))==(((vt0.c2) NOT NULL))) FROM vt0 WHERE (((CAST(x'' AS TEXT))=(CASE WHEN -1.654458651E9 THEN NULL WHEN NULL THEN NULL WHEN '-1730650379' THEN NULL WHEN 'Qഺf2銳G^OE' THEN 0.3311992888522175 WHEN NULL THEN x'' END)));SELECT DISTINCT CAST(CAST(vt0.c2 AS NUMERIC) AS NUMERIC) FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((vt0.c0)GLOB(vt0.c2))) NOTNULL) FROM rt0;SELECT ALL (((vt0.c1)) BETWEEN ((HEX(rt0.c0))) AND ((rt0.c0))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT TOTAL(0.47666755690062934) FROM rt0 WHERE (CAST(((0x47c5e5c1)>=(x'')) AS BLOB)) GROUP BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (TRIM(rt0.c1, '-800658394')) AND (CAST(x'4b8a' AS INTEGER))), (((vt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (0.7605936876782832)))) AND ((vt0.c2))), ((CAST(rt0.c1 AS INTEGER))*(((rt0.c0) IS FALSE))) HAVING ((((SUM(rt0.c0))OR((NOT (vt0.c1)))))OR(((((vt0.c2)OR(rt0.c1)))OR(vt0.c1))));SELECT ((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c0))) IS FALSE) FROM rt0 WHERE (((CASE WHEN x'' THEN NULL END) BETWEEN ((+ ('1284063768'))) AND (CASE WHEN 0Xffffffffe53ae829 THEN -1.053040281E9 END)));SELECT ((((rt0.c1)/(rt0.c2))) NOT BETWEEN (HEX(DISTINCT rt0.c2)) AND (json_insert(rt0.c2, rt0.c2, vt0.c2))) FROM rt0, vt0 NOT INDEXED WHERE ((+ (CASE WHEN '-m,h<' THEN '' ELSE '87660429' END))) ORDER BY CASE WHEN CASE vt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE NOCASE END  NULLS LAST;SELECT DISTINCT (CAST(rt0.c0 AS NUMERIC) IN (CAST(rt0.c0 AS REAL), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)), ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) IN ()), (- (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c2)>=(vt0.c2))) OVER () FROM rt0 WHERE (((0.9638572485675508) BETWEEN (CAST('924735629' AS INTEGER)) AND ((('1e500') BETWEEN (0.2979897824587373) AND (x'71a2'))))) INTERSECT SELECT (((rt0.c2, (+ (rt0.c2)), ((vt0.c1)-(vt0.c0))))>=((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), ((vt0.c1) ISNULL), UNICODE(rt0.c2)))) FROM rt0;SELECT DISTINCT NTILE('') OVER () FROM vt0, rt0 WHERE (CAST((((NULL, 4.3675725E8, 1.588283988E9)) NOT BETWEEN (('[]', 2102827214, '')) AND ((x'', x'220a', 'M'))) AS TEXT)) LIMIT 779558786 OFFSET 948942125; -- 0ms;
SELECT DISTINCT ((((((((COUNT(*))OR(((vt0.c1)<<(0.02608222365114643)))))OR((NOT (rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)))))AND(CAST(x'' AS TEXT))) FROM vt0, rt0; -- 0ms;
SELECT ALL (((~ (rt0.c1)))+(COUNT(*))), ((CAST(vt0.c1 AS TEXT)) BETWEEN (HEX(DISTINCT rt0.c2)) AND (((((((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(NULL)))), vt0.c0 FROM rt0, vt0 WHERE ((((NULL)) BETWEEN (('Xm' COLLATE BINARY)) AND (((-4.9276387E7 IN ()))))) ORDER BY (+ (((vt0.c2) BETWEEN (vt0.c0) AND (0.1749013735691547)))) DESC, ((((rt0.c2)!=(x''))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (x''))  NULLS FIRST, '1396385992' COLLATE NOCASE DESC  NULLS LAST, ((((((((((vt0.c2)>=(NULL)))AND('0.31478913961982524')))OR((vt0.c1 IN ()))))OR(((rt0.c2)>=(vt0.c0)))))OR(((vt0.c0)|(vt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0;SELECT ALL (((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((((rt0.c1) NOT NULL), CASE NULL  WHEN vt0.c1 THEN '1985018852' END, (~ (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((vt0.c0) IS FALSE), CAST(0.7360586707933302 AS REAL)))), ((((vt0.c0)OR(rt0.c0)))>=(GROUP_CONCAT(vt0.c1))), ((((((((((rt0.c1)*(vt0.c1)))OR(((((vt0.c2)AND(rt0.c1)))OR(0X1fb880e1)))))OR(COUNT(*))))AND(CAST(vt0.c1 AS REAL))))OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))), TOTAL(((((vt0.c2)AND(rt0.c0)))OR(vt0.c1))) OVER (), CASE vt0.c0  WHEN rt0.c1 THEN vt0.c2 WHEN rt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END COLLATE RTRIM COLLATE NOCASE FROM vt0 WHERE (((1697651057) NOT BETWEEN (47978719) AND (NULL)) COLLATE NOCASE) GROUP BY ((SQLITE_SOURCE_ID())OR((((vt0.c2, vt0.c1, rt0.c0, vt0.c0, vt0.c2)) BETWEEN ((vt0.c0, vt0.c0, vt0.c2, vt0.c0, rt0.c0)) AND ((vt0.c2, rt0.c2, vt0.c2, '-1262121615', rt0.c2))))), ((((vt0.c2) NOT NULL)) IS TRUE), vt0.c1 HAVING 0.6209744435583952 COLLATE BINARY;SELECT DISTINCT ((((0.27211772725969374)AND(rt0.c1 COLLATE NOCASE)))AND(((0.8558295570371033) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((IFNULL(DISTINCT x'', rt0.c0))OR(((rt0.c0) NOT NULL))) FROM vt0, rt0 WHERE ((- (NULL COLLATE RTRIM))); -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))-(NULLIF(NULL, vt0.c2))), (((vt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE NOCASE, COUNT(*) COLLATE NOCASE, rt0.c1, IFNULL(CASE WHEN rt0.c0 THEN 1017510873 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN rt0.c2 END, ((rt0.c0) IS FALSE)) FROM rt0;SELECT DISTINCT (((~ (rt0.c2))) BETWEEN (((vt0.c1)|(rt0.c2))) AND (((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c1)))) FROM rt0 ORDER BY ((NOT (vt0.c1)) IN ()) ASC  NULLS LAST;SELECT ALL ((((vt0.c2) NOTNULL)) NOT NULL) FROM vt0, rt0 NOT INDEXED; -- 1ms;
SELECT (NULL COLLATE BINARY IN ()), COUNT(((vt0.c1) ISNULL)), ((((vt0.c2)<(rt0.c2)))*(NULL COLLATE BINARY)) FROM rt0;SELECT ALL x'59b2' FROM rt0, vt0 WHERE (((('7ʇ' IN (0.8212262448827428, 'wbLQ\(K3U')))GLOB((('808662884')%(0.12636641738836862))))); -- 0ms;
SELECT ALL ((AVG(rt0.c2))>>(((rt0.c0)GLOB(vt0.c0)))), CAST((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) AS REAL), vt0.c1 FROM rt0, vt0; -- 0ms;
SELECT ALL ((((((vt0.c1)-(vt0.c0)))OR(((vt0.c2)==(rt0.c0)))))OR(((vt0.c2) NOTNULL))) FROM vt0 WHERE ((((((NULL))>((x''))))&(('?톌%u.t' IN (NULL, 0.8042473195811152)))));SELECT DISTINCT (((vt0.c0, vt0.c2, 0.9459860549759804)) BETWEEN ((0X7fffffffffffffff, x'', GROUP_CONCAT(vt0.c2))) AND ((vt0.c2, (- (rt0.c1)), (vt0.c1 IN (rt0.c2, vt0.c1))))) FROM rt0 LIMIT -1831724759;SELECT (((rt0.c1) NOTNULL) IN ()) FROM rt0, vt0; -- 0ms;
SELECT ALL CASE WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN vt0.c0 WHEN ((((rt0.c1)OR(rt0.c1)))OR(vt0.c2)) THEN rt0.c1 WHEN ((vt0.c2)&(rt0.c2)) THEN ((((((((rt0.c0)AND(vt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)) END FROM vt0 WHERE ((~ (CAST(NULL AS INTEGER)))) ORDER BY (~ (CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST, -1e500, CAST(CASE x''  WHEN rt0.c2 THEN vt0.c2 END AS REAL);SELECT CAST(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 END AS TEXT) FROM vt0 WHERE ((((NULL, -1859073486, NULL)) BETWEEN ((((x'92ee35a3') IS FALSE), (('')AND('-1730650379')), LIKELIHOOD(x'ee82', 0.7405900205382724))) AND ((x'311f', 0.9319362439328259 COLLATE RTRIM, ((((((((NULL)OR(0.6946055544704226)))AND('0.6122088555945101')))OR('-1736184570')))OR(x'')))))) LIMIT -836339024 OFFSET 1117694671;SELECT DISTINCT ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)))OR(((vt0.c2)*(vt0.c0)))), rt0.c0 COLLATE BINARY, (NOT ((- (rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT TOTAL(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM) FROM rt0, vt0 WHERE ('1588283988'); -- 0ms;
SELECT ((vt0.c1)>=(((rt0.c1) NOT NULL))), ((((vt0.c1)AND(vt0.c1)))OR(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))), ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))<<((((vt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, -1458159474, rt0.c2)) AND ((rt0.c0, vt0.c1, rt0.c2))))) FROM rt0;SELECT ALL CAST(SUM(vt0.c2) AS NUMERIC), CAST(x'c395' AS INTEGER), ((vt0.c1 COLLATE RTRIM)-(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)))) FROM rt0 INNER JOIN vt0 ON ((((rt0.c1)<<(rt0.c0)))|(((((((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))) GROUP BY '947998822'; -- 0ms;
SELECT CASE MIN(vt0.c1)  WHEN TYPEOF(rt0.c0) THEN ((rt0.c2)!=(rt0.c0)) ELSE ((rt0.c2)>(vt0.c1)) END FROM rt0;SELECT DISTINCT ((((CASE WHEN vt0.c2 THEN rt0.c2 END)OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))OR((((vt0.c2))>((rt0.c1))))) FROM vt0 WHERE (CAST((('-511684130')<=(NULL)) AS INTEGER));SELECT ALL (((vt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((CASE vt0.c1  WHEN vt0.c2 THEN x'' ELSE rt0.c1 END))), CAST('>PKN2*.ʠt' AS INTEGER), (((NOT (rt0.c1))) NOT NULL) FROM vt0;SELECT ((((((((CASE WHEN vt0.c2 THEN rt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)||(rt0.c0)))))OR(((vt0.c2) IS TRUE))))OR(CAST(vt0.c2 AS TEXT))))OR('>sai(,i蚻' COLLATE NOCASE)) FROM vt0;SELECT DISTINCT CASE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN rt0.c0 THEN ((rt0.c0)||(vt0.c1)) WHEN 'eU|86mfC' THEN (((vt0.c0))>=((vt0.c0))) WHEN AVG(x'') THEN ((rt0.c1) NOT NULL) ELSE CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN '0Z' THEN vt0.c1 END END FROM vt0 WHERE ((x'' IN ())) GROUP BY '820415300', (~ (((((rt0.c1)OR(rt0.c1)))AND(vt0.c1)))), rt0.c1;SELECT rt0.c2 FROM rt0, vt0 WHERE (CASE WHEN ((NULL)%(x'')) THEN (((('0.04534326163660596')OR('-1736184570')))AND(x'6d4a')) WHEN '-519816362' COLLATE BINARY THEN (~ ('wj,[f|')) WHEN 'ಈA' COLLATE RTRIM THEN ((0.12389983048986164) NOTNULL) ELSE ((((((((0X4c10d487)OR('')))AND(0Xffffffffc563336d)))AND(0.8253353831373087)))AND('쿞i')) END); -- 0ms;
SELECT DISTINCT rt0.c0, (((NOT (rt0.c1))) BETWEEN ((('1413206394') BETWEEN (rt0.c2) AND (rt0.c1))) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c2)))OR(rt0.c0)))), LIKELIHOOD(CAST(vt0.c2 AS TEXT), 0.08147972368039991) FROM vt0, rt0 WHERE ((CAST(x'' AS BLOB) IN (load_extension(0.41863650012352194, '1286510762'))));SELECT ((SUM(vt0.c1))>>((('5L') IS TRUE))) FROM vt0 GROUP BY ((rt0.c0 COLLATE BINARY) ISNULL), ((((rt0.c1)) BETWEEN ((0.1034405097001293)) AND ((vt0.c0))) IN (rt0.c2)), (((((rt0.c0 IN ()))OR((('*]')>>(rt0.c2)))))AND((x'528a' IN (vt0.c2))));SELECT (((rt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c2)) IN (CAST(rt0.c2 AS BLOB))) FROM vt0, rt0 WHERE ((~ (NULL))); -- 0ms;
SELECT (rt0.c2 IN ()) COLLATE NOCASE FROM rt0, vt0; -- 0ms;
SELECT ALL CAST(((vt0.c0)<(rt0.c1)) AS BLOB), (((((vt0.c2)OR(rt0.c0)))OR(rt0.c1)) IN ()), (((rt0.c2)) BETWEEN ((((rt0.c2)<<(rt0.c1)))) AND ((vt0.c2 COLLATE RTRIM))) FROM rt0, vt0 WHERE ((((((NULL) BETWEEN ('p  -S-& ӓ') AND (0xffffffffa6c62ebb))))==((((x'') ISNULL))))) ORDER BY NULL DESC; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((0.719376474449972)%(rt0.c2)))) AND (((((rt0.c2, vt0.c2, vt0.c1))<=((rt0.c0, rt0.c1, rt0.c2)))))) FROM vt0 WHERE (CAST(CHAR(0Xfd316d9) AS REAL));SELECT DISTINCT (((((vt0.c2 IN ()))AND((+ (rt0.c1)))))OR(((rt0.c2) IS TRUE))), vt0.c2, ((rt0.c1) BETWEEN ('쿞i') AND (INSTR(rt0.c0, rt0.c0))) FROM rt0 NOT INDEXED, vt0; -- 0ms;
SELECT ALL vt0.c2, (~ (rt0.c2)), ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c2)))IS NOT((- (rt0.c1)))) FROM rt0;SELECT ((((json_remove(rt0.c1, rt0.c1, vt0.c1, rt0.c1))AND(ABS(DISTINCT rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) FROM vt0;SELECT DISTINCT x'' COLLATE BINARY, ((MAX(rt0.c1)) NOT BETWEEN (UPPER(rt0.c2)) AND (((((((((((((vt0.c2)AND(vt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c2)))AND(vt0.c0)))), (rt0.c1 COLLATE BINARY IN (rt0.c2, ((((((((vt0.c1)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))) FROM vt0 WHERE ((((+ (NULL))) BETWEEN ((x'' IN ())) AND (((x'') ISNULL))));SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))) COLLATE RTRIM, (+ (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))), rt0.c2 FROM rt0, vt0 WHERE ((((NULL))>=(((((('꠻(Lc]啣㷡愰')OR(NULL)))OR(x'eaec')))))) GROUP BY (('1789589959')AND(0.2551280554464683)) HAVING ((MIN(rt0.c0)) NOT BETWEEN ((NOT (rt0.c1))) AND ((NOT (vt0.c1)))); -- 0ms;
SELECT ALL RANK() OVER ( PARTITION BY UPPER(DISTINCT ((((((((((((rt0.c0)OR(rt0.c1)))OR(vt0.c1)))OR(NULL)))AND('!粻')))OR(rt0.c0)))AND(rt0.c2))), (NOT (vt0.c2 COLLATE NOCASE))) FROM vt0, rt0 WHERE (((((((NULL)<>('279502009')))OR((('')-('-1937288708')))))AND(CAST('E4' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (~ (((rt0.c2)<>(vt0.c1)))), ((CAST(rt0.c2 AS REAL))<>(rt0.c0 COLLATE NOCASE)), x'' FROM vt0 GROUP BY ((vt0.c1 COLLATE NOCASE) ISNULL), NULL, CASE ((rt0.c1)<>(rt0.c0))  WHEN (vt0.c2 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN rt0.c1 END WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) WHEN json_quote(vt0.c0) THEN ((rt0.c0)>(vt0.c2)) ELSE ((((rt0.c1)OR(rt0.c2)))AND(vt0.c1)) END LIMIT 454494680;SELECT DISTINCT LIKELY(DISTINCT rt0.c0 COLLATE BINARY) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT NULL) IN ()) FROM vt0, rt0; -- 0ms;
SELECT ((((vt0.c1)<<(vt0.c1))) NOTNULL), ((+ (rt0.c0)) IN ()), (+ (GROUP_CONCAT(rt0.c2))) FROM vt0;SELECT ALL (((NOT (vt0.c2))) ISNULL) FROM vt0, rt0 WHERE (((x'') NOTNULL) COLLATE RTRIM) GROUP BY CAST(((rt0.c1) ISNULL) AS TEXT); -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END) IS TRUE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c2)IS NOT(rt0.c0)) ELSE rt0.c0 END FROM vt0;SELECT DISTINCT MIN(SQLITE_SOURCE_ID()) FROM vt0 WHERE (((NULL)<(x'9223')) COLLATE NOCASE) ORDER BY (- ((rt0.c0 IN ()))) DESC; -- 0ms;
SELECT ((LOWER(rt0.c1))*((((rt0.c0))<((rt0.c0))))) FROM rt0 LIMIT -2059200288 OFFSET -1249873560; -- 0ms;
SELECT ((UNLIKELY(DISTINCT rt0.c0)) IS FALSE) FROM rt0 LIMIT 1244494009 OFFSET -962723638; -- 0ms;
SELECT json_remove((rt0.c1 IN ()), (- (vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT (COUNT(rt0.c1) IN (((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)))) FROM vt0, rt0 WHERE ((NOT ('1569507106' COLLATE BINARY))); -- 1ms;
SELECT DISTINCT '' FROM vt0, rt0 WHERE ((((0.09282156822525722)) NOT BETWEEN ((((NULL)IS NOT('0.0750293570024132')))) AND ((COALESCE(DISTINCT 2.102827214E9, '1561000389'))))); -- 0ms;
SELECT ALL (((((rt0.c2, rt0.c0, ''))<=((rt0.c0, vt0.c0, rt0.c1)))) ISNULL), CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c1)=(vt0.c1)) END, vt0.c2 FROM vt0;SELECT DISTINCT NULLIF(CAST(vt0.c0 AS TEXT), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c2)))), PERCENT_RANK() OVER (), (- (((((vt0.c2)OR(rt0.c1)))OR(rt0.c1)))) FROM vt0, rt0 ORDER BY ((((rt0.c0)IS(rt0.c1))) IS TRUE) ASC  NULLS LAST LIMIT 1630624863; -- 0ms;
SELECT ALL ((vt0.c2 COLLATE RTRIM)<(vt0.c2 COLLATE NOCASE)), vt0.c2 COLLATE BINARY, (((rt0.c0 IN ())) IS TRUE) FROM vt0, rt0; -- 0ms;
SELECT ((((vt0.c2) NOTNULL)) IS TRUE), SUM(((vt0.c0) NOT BETWEEN (NULL) AND (0.31019351095482717))) OVER (), CASE x''  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c0)<=(0.8393324158390891)) END FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c2; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY FROM rt0, vt0 WHERE (((((((0.24606502928564444)>('')))AND(CASE ' ,3[r琇恛䥆_'  WHEN 0.5160836592111201 THEN -1356273548 ELSE x'' END)))AND(((0.8514999777950549)||('E?6酈5愰I'))))); -- 0ms;
SELECT rt0.c0 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (~ ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))), rt0.c2, (((vt0.c1, rt0.c0, vt0.c1)) BETWEEN ((((((rt0.c1)AND(rt0.c0)))AND(vt0.c2)), (((rt0.c2, rt0.c1, rt0.c0))<((0x539978d, vt0.c2, rt0.c1))), vt0.c1)) AND ((x'', 'ms', (vt0.c0 IN ())))) FROM rt0, vt0; -- 1ms;
SELECT ((((rt0.c2) BETWEEN (vt0.c2) AND (rt0.c0)))>>(((rt0.c2)*(vt0.c2)))) FROM vt0, rt0 WHERE (((((NULL)<<(1.633062193E9))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((vt0.c1, (((rt0.c1))>((rt0.c0))), (rt0.c1 IN ())))!=((x'', rt0.c2, CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) FROM vt0, rt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(rt0.c2)))) AND (((rt0.c1 IN ())))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT MIN(vt0.c2), (((rt0.c2))<((vt0.c0))) COLLATE NOCASE, x'' FROM vt0;SELECT ALL MIN(vt0.c2), ((ABS(vt0.c0)) BETWEEN (AVG(vt0.c2)) AND (SUM(rt0.c0))), (- (((((rt0.c0)OR(vt0.c2)))OR(vt0.c1)))), (+ (MIN(rt0.c0))), (rt0.c0 IN ()) FROM vt0, rt0; -- 1ms;
SELECT AVG(((vt0.c1) NOT NULL)) OVER (), ((((vt0.c0)AND('435655885')))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c2 THEN rt0.c1 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)), (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c2) NOT NULL), ((vt0.c0) NOT BETWEEN (0x5b8683e3) AND ('圫2')), CAST('985727648' AS REAL))) AND (((((vt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c2))), ((vt0.c2)<(rt0.c2)), CAST(rt0.c0 AS TEXT)))) FROM vt0 WHERE (x'');SELECT DISTINCT (NOT (vt0.c1 COLLATE BINARY)), ((CAST(rt0.c0 AS NUMERIC))>=('0i')), ((CASE WHEN vt0.c1 THEN '&dko' ELSE rt0.c1 END) NOT BETWEEN ((NOT (rt0.c0))) AND ((- (rt0.c1)))) FROM vt0, rt0 GROUP BY ((vt0.c1)AND(vt0.c2)) COLLATE RTRIM HAVING NULL; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0, rt0 WHERE (((CAST(0.08546552776851835 AS BLOB)) BETWEEN (NULLIF(DISTINCT NULL, 0.8106543660031168)) AND (CAST('87749720' AS INTEGER)))); -- 0ms;
SELECT DISTINCT (- ((((NULL, rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((vt0.c1, rt0.c0, rt0.c0, vt0.c1, x'', vt0.c2, rt0.c1)) AND ((rt0.c0, vt0.c2, vt0.c2, vt0.c2, rt0.c2, vt0.c0, rt0.c2))))) FROM rt0, vt0 WHERE (LOWER((((NULL)) NOT BETWEEN ((x'')) AND (('兹oi'))))); -- 0ms;
SELECT (((('')<=(rt0.c0)))>(NULL)) FROM vt0, rt0; -- 0ms;
SELECT ((((CAST('1678377530' AS TEXT))AND(x'')))AND((rt0.c2 IN (vt0.c1, rt0.c2, 0.40324063993666237)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((0.44721545730403833)%(((vt0.c0)AND(vt0.c1)))) FROM vt0 LIMIT -1313573463 OFFSET 1454640264; -- 0ms;
SELECT CUME_DIST() OVER ( RANGE ((((rt0.c2)<=(vt0.c0)))|(CASE vt0.c1  WHEN 0.6277865847989837 THEN vt0.c0 END)) PRECEDING EXCLUDE GROUP) FROM vt0;SELECT DISTINCT (((((rt0.c2, 's~{c', '805087703')) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2)))) IS TRUE) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((MAX(vt0.c1))&(((vt0.c1)==(rt0.c0)))), ((x'0349')!=(rt0.c1)) COLLATE BINARY, CAST(((rt0.c0)IS NOT(rt0.c1)) AS BLOB), (((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c1)))AND(rt0.c2)))OR(rt0.c0)) IN (((rt0.c2) NOT BETWEEN (vt0.c1) AND ('(D-e')), rt0.c2 COLLATE BINARY)), CAST((((rt0.c0, rt0.c1, vt0.c1))>((rt0.c1, rt0.c1, vt0.c0))) AS INTEGER) FROM vt0 ORDER BY CAST(((vt0.c2)/(rt0.c1)) AS BLOB)  NULLS FIRST;SELECT ((vt0.c0)%(vt0.c2)) COLLATE RTRIM FROM vt0, rt0 WHERE (-1.689563542E9); -- 0ms;
SELECT DISTINCT (((((1775863512 IN ()))AND(vt0.c1 COLLATE RTRIM)))AND(CASE NULL  WHEN vt0.c2 THEN vt0.c0 END)), ((vt0.c1) IS FALSE) COLLATE NOCASE, ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((vt0.c2) BETWEEN (NULL) AND (NULL)), (rt0.c1 IN ())))>=((rt0.c2, ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c2)), AVG(rt0.c1)))) FROM rt0, vt0 WHERE (CAST(json_valid(9.24735629E8) AS TEXT)); -- 4ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE))<<((- (rt0.c2)))) FROM rt0, vt0 ORDER BY (-1.941577786E9 IN ()) DESC  NULLS FIRST LIMIT 1768960394 OFFSET -2007898914; -- 0ms;
SELECT ALL ((NOT (vt0.c0)) IN (0.18162123045524547 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c2)OR(vt0.c0)))OR(rt0.c2))) NOTNULL) FROM rt0 WHERE ((CAST(-816227966 AS BLOB) IN (((x'') NOT BETWEEN (0.04012202132936038) AND (-1.234709011E9))))) ORDER BY ((HEX(vt0.c2))/((- (vt0.c2)))) ASC  NULLS FIRST;SELECT DISTINCT UPPER(DISTINCT (('C') NOT NULL)) FROM rt0; -- 0ms;
SELECT COUNT('924735629') OVER ( ORDER BY ((CASE WHEN rt0.c0 THEN vt0.c2 END)%(((rt0.c1)=(rt0.c2))))  NULLS FIRST, vt0.c2 DESC  NULLS FIRST, rt0.c1 ASC  NULLS LAST) FROM rt0, vt0 ORDER BY (((CAST(vt0.c2 AS INTEGER), CAST(rt0.c1 AS TEXT), ((vt0.c0) ISNULL)))>((CASE vt0.c0  WHEN vt0.c2 THEN '2075335558' END, NULL, vt0.c0 COLLATE BINARY))); -- 0ms;
SELECT ('y\' IN ()), ROUND(SUM(rt0.c0), (('0.4861629478937203')/(vt0.c0))), TOTAL((((vt0.c1))>=((vt0.c1)))) FROM rt0 WHERE ((((NULL IN ())) NOT BETWEEN (NULL COLLATE RTRIM) AND (CASE '-661653078'  WHEN 0.06454963880491671 THEN x'' WHEN x'' THEN '' WHEN 912350476 THEN 0.9288533096025913 END))) GROUP BY (((rt0.c1) BETWEEN (vt0.c0) AND (x'')) IN (CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) LIMIT 1406760171;SELECT ALL ((vt0.c1) NOT BETWEEN (((rt0.c1)<=(x'fda2'))) AND (((rt0.c2) ISNULL))) FROM vt0 WHERE ((((((((NULL)) NOT BETWEEN ((0x73cc58ec)) AND ((NULL))))OR((('-1948502056') IS TRUE))))OR(NULL COLLATE NOCASE)));SELECT (((CASE WHEN NULL THEN vt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 END, '-1093386602', ((rt0.c1) BETWEEN (0.45217435507112214) AND (NULL)), ((vt0.c0) ISNULL), UPPER(vt0.c0)))>=(((((vt0.c0))<=((vt0.c1))), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), vt0.c1 COLLATE BINARY, ((vt0.c2)|(rt0.c1)), ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM rt0;SELECT DISTINCT ((UPPER(vt0.c2)) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c2 END)<(vt0.c1 COLLATE NOCASE)) FROM vt0 WHERE (CASE WHEN 0.4008372448255988 COLLATE BINARY THEN (((x'')) NOT BETWEEN ((NULL)) AND (('-1914628042'))) ELSE (((0.5678894455274869))=(('1802960039'))) END);SELECT DISTINCT AVG(CASE vt0.c2  WHEN rt0.c1 THEN vt0.c2 END) OVER ( PARTITION BY (((vt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c2))))), x'6b25'), ROW_NUMBER() OVER (), CAST((((rt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) AS REAL) FROM rt0, vt0 GROUP BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC) ORDER BY LOWER(ABS(rt0.c1))  NULLS LAST; -- 1ms;
SELECT DISTINCT ((CAST(vt0.c2 AS TEXT)) BETWEEN (((((vt0.c2)OR(rt0.c2)))AND(vt0.c1))) AND (((rt0.c0)<>(rt0.c2)))) FROM vt0, rt0 WHERE ((LIKELY(DISTINCT 'H[q') IN ())); -- 0ms;
SELECT DISTINCT MAX(((vt0.c0) IS TRUE)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOTNULL))*(((((0.407177355032731)AND(rt0.c1)))OR(vt0.c2)))) FROM vt0, rt0 GROUP BY ((CASE WHEN vt0.c0 THEN NULL ELSE rt0.c1 END)*(vt0.c1 COLLATE BINARY)), ((CAST(rt0.c2 AS INTEGER))<=(rt0.c2 COLLATE NOCASE)), ((LIKE(vt0.c0, vt0.c2))<(((rt0.c1)&('591072374')))) HAVING ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c1)))+((rt0.c2 IN ()))); -- 0ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE NOCASE AS NUMERIC), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM, (((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((((((vt0.c0)OR(0.7348862957783641)))AND(rt0.c1)), rt0.c1, NULL)) AND ((((vt0.c1) IS FALSE), ((x'468b') ISNULL), MIN(rt0.c0)))) FROM rt0, vt0 WHERE (CAST(COALESCE(DISTINCT 0xffffffffb3624d4b, '376885615') AS BLOB)); -- 1ms;
SELECT ((((vt0.c0)||(rt0.c1)))IS NOT(MIN(rt0.c0, rt0.c2))) FROM rt0, vt0 WHERE (((((-511684130) NOTNULL)) NOT BETWEEN (((((((((-1697985559)OR(0.2881478057391872)))OR(0x702b535b)))AND(x'f21a')))OR(0.16225680325474023))) AND ((((x'25f8', 0x4e67147d, '1466868940', NULL, '-1032208859')) BETWEEN (('53557342', 0.5738801973871848, NULL, 'sCG쨆', x'')) AND ((NULL, '-2100280223', 'Gb떶eNv>&k', '郃l', '694894142')))))) GROUP BY (rt0.c0 IN (((vt0.c2)>=(rt0.c2)))); -- 0ms;
SELECT CAST(vt0.c1 AS BLOB) COLLATE BINARY FROM rt0;SELECT DENSE_RANK() OVER ( ORDER BY ((((rt0.c0)>(rt0.c1)))*(((0.02606192749566505) IS TRUE))) DESC) FROM vt0;SELECT (~ (vt0.c2)) FROM rt0;SELECT DISTINCT NULL FROM rt0, vt0 WHERE (LTRIM(x'', 0.19157178535335362) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((((TRIM(DISTINCT vt0.c2))AND(((rt0.c1) IS TRUE))))OR(((rt0.c0)||(rt0.c0)))))AND(rt0.c0 COLLATE NOCASE)))OR(CAST(vt0.c0 AS NUMERIC))) FROM rt0, vt0; -- 0ms;
SELECT ALL IFNULL(DISTINCT vt0.c1, rt0.c0 COLLATE NOCASE), ((((((((((rt0.c0)AND(rt0.c1)))OR(vt0.c1)))OR(x'')))AND(rt0.c0))) NOT BETWEEN (ABS(rt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), (ABS(DISTINCT rt0.c1) IN ()) FROM rt0, vt0 WHERE ((((((x'', x'5038', 0.7239128085374693, '', NULL))<=((0.05576153594005451, x'b008', 0.40422314356437916, NULL, '1276171399')))) IS TRUE)) ORDER BY CAST(((vt0.c2)<=(vt0.c2)) AS NUMERIC); -- 0ms;
SELECT CAST(((vt0.c1) BETWEEN (vt0.c2) AND (rt0.c0)) AS REAL), CASE WHEN vt0.c0 COLLATE RTRIM THEN rt0.c1 WHEN rt0.c2 THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)) WHEN ('-449124311' IN ()) THEN LOWER(rt0.c0) END, ((0.31215769821318295)GLOB(((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c2)))AND(NULL)))) FROM vt0 WHERE ((((((0xffffffffafb9c2a4)*(2049799700))))>=((CAST(NULL AS NUMERIC)))));SELECT ALL (((NULL)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((x''))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM, (((((rt0.c1)!=(rt0.c1))))>=((((rt0.c1) NOT BETWEEN ('v,}p)A') AND (vt0.c2))))) FROM rt0 WHERE (((((1474059212)AND(NULL)))OR('C')) COLLATE RTRIM);SELECT DISTINCT (- (rt0.c2)) FROM vt0, rt0 WHERE (x'') ORDER BY (((rt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c2)) IN ((+ (vt0.c1)))); -- 0ms;
SELECT CUME_DIST() OVER () FROM rt0; -- 0ms;
SELECT ALL (- (((vt0.c2) IS FALSE))), ((((vt0.c2) IS TRUE)) ISNULL), (((vt0.c0 IN (rt0.c2, rt0.c2))) NOT BETWEEN (ABS(DISTINCT vt0.c1)) AND (vt0.c0)) FROM rt0;SELECT DISTINCT ((TRIM(DISTINCT vt0.c1))LIKE(((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)))) FROM vt0 WHERE (((((((0.6423282465243677)!=(0.9325724104175019)))OR('-1433186459')))OR((0.1391937161076212 IN ()))));SELECT DISTINCT ((MAX(vt0.c2)) IS TRUE) FROM vt0 WHERE (RTRIM((('\rhD+_?') NOT NULL))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END THEN NULL COLLATE RTRIM END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT vt0.c0, (vt0.c0 COLLATE BINARY IN (CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c2 END)), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (CAST(rt0.c2 AS REAL))) FROM vt0, rt0 WHERE ((('y\') BETWEEN (0x645f0eb6) AND (x'')) COLLATE BINARY); -- 0ms;
SELECT ALL (NOT (0.04374642766191228)), ((rt0.c1 COLLATE RTRIM)>>((x'a031' IN (rt0.c0, vt0.c0)))), (- (CASE WHEN x'' THEN rt0.c1 WHEN vt0.c2 THEN '0.7722390749711509' WHEN rt0.c2 THEN rt0.c0 END)) FROM vt0, rt0; -- 0ms;
SELECT rt0.c1, 0.730397873519213, (((((vt0.c1))>=((rt0.c1))))==(vt0.c0 COLLATE BINARY)) FROM rt0;SELECT PERCENT_RANK() OVER () FROM rt0, vt0 WHERE (CAST(LIKELIHOOD(DISTINCT NULL, 0.15662089045117478) AS NUMERIC)) GROUP BY (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN (((vt0.c1) BETWEEN (NULL) AND (vt0.c2))) AND (NULL)) LIMIT 2095417851; -- 0ms;
SELECT DISTINCT (((NULL IN ()))<<(CASE WHEN rt0.c1 THEN -1914628042 ELSE rt0.c0 END)), (+ (rt0.c1)) COLLATE RTRIM, (((((vt0.c0)AND(vt0.c1)))AND(rt0.c1)) IN ()) FROM rt0 LEFT OUTER JOIN vt0 ON '-679902107' WHERE (((((((' *,gA숯HiT')OR(-1293444671)))OR(0.5736792729286131)))=(''))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) ISNULL) AS TEXT) FROM rt0 WHERE ((~ (((((((((NULL)OR('')))AND(NULL)))OR('1043456588')))OR('1702242606'))))); -- 0ms;
SELECT ALL CAST(((vt0.c1) ISNULL) AS NUMERIC) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT LTRIM(((rt0.c0)%(vt0.c0)), (('-1955781083')IS NOT(vt0.c0))), (~ ((rt0.c0 IN ()))), GROUP_CONCAT(GROUP_CONCAT(UPPER(DISTINCT vt0.c0))), ((('1789589959')) NOT BETWEEN (((((rt0.c0))==((-1.496961349E9))))) AND ((((rt0.c2)=(vt0.c0))))), rt0.c2 FROM vt0 WHERE ((((('-1374638193') ISNULL))/((((x'', NULL, x'', x'', 0.7630161262553949)) NOT BETWEEN ((NULL, 'A', 0.2515552553996083, x'', x'')) AND (('w]\nXr⒥(o\n', 0x1ce1b5b6, -5.58102103E8, '8z2).', 0Xffffffffd6d26ffe)))))) ORDER BY ((rt0.c1 COLLATE NOCASE)&(vt0.c1));SELECT ALL (((((((((vt0.c2)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) IN ()), LIKELY(((vt0.c2) NOTNULL)), 0.16584794748421539, (((((((x'')OR(vt0.c0)))OR(vt0.c1))))=((((rt0.c1)>(rt0.c2))))), ((((((((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))AND(((vt0.c2)GLOB(rt0.c0)))))AND((vt0.c0 IN (rt0.c1, vt0.c2)))))OR(HEX(DISTINCT vt0.c2))))AND(CAST(NULL AS BLOB))) FROM rt0;SELECT ALL (((- (rt0.c0))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c1)), AVG(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END) OVER (), rt0.c1, ((((rt0.c2)&(vt0.c0))) NOT BETWEEN (AVG(rt0.c0)) AND (-5.03416399E8)), COUNT(*) FROM rt0 WHERE (((((('')) BETWEEN (('1051825841')) AND (('')))) NOT BETWEEN (((NULL) NOT BETWEEN (0x303fc3f7) AND (x'dc58'))) AND (TYPEOF(DISTINCT x''))));SELECT DISTINCT (((((vt0.c0))=((rt0.c0)))) NOTNULL) FROM vt0, rt0 WHERE (CASE -1.788117475E9  WHEN '-511684130' THEN '' END COLLATE BINARY); -- 0ms;
SELECT ALL (((vt0.c0 IN (rt0.c0))) BETWEEN ((vt0.c2 IN ())) AND ('-1831724759')) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((COUNT('')) NOT NULL), CAST(((((rt0.c0)AND(rt0.c1)))OR(vt0.c2)) AS INTEGER), UNLIKELY(vt0.c2) COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT ALL ((((rt0.c2)=(vt0.c0))) NOTNULL) FROM vt0, rt0; -- 0ms;
SELECT ALL MIN(NULL), rt0.c1, vt0.c2 FROM rt0, vt0; -- 0ms;
SELECT COUNT((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))), ((((rt0.c1)||(vt0.c0)))>>(TOTAL(vt0.c2))), CAST(LTRIM(vt0.c2, rt0.c1) AS NUMERIC) FROM vt0 GROUP BY CAST(((rt0.c0) ISNULL) AS INTEGER), COALESCE(((rt0.c1)=(rt0.c2)), (vt0.c0 IN ()), NULL, CASE vt0.c2  WHEN rt0.c2 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))), LIKELY(DISTINCT NULL);SELECT DISTINCT (((rt0.c0 IN ())) ISNULL) FROM rt0, vt0 WHERE ((((('') NOT BETWEEN (x'') AND ('-1137673610')))<=((((-8.90294942E8)) BETWEEN ((-1943179696)) AND ((x'')))))) LIMIT 759260490 OFFSET 1454640264; -- 1ms;
SELECT TOTAL(((vt0.c1) NOTNULL)) FROM rt0 ORDER BY UNLIKELY(TRIM(vt0.c2));SELECT DISTINCT LAST_VALUE(CASE rt0.c1 COLLATE BINARY  WHEN x'' THEN rt0.c1 END) OVER () FROM vt0, rt0 WHERE (((((0X7d9a1e7a) BETWEEN ('X虃aT\rCQm') AND ('1231732788')))<((('E*햲&b')<>(''))))); -- 0ms;
SELECT DISTINCT (+ (CAST(vt0.c0 AS TEXT))), '867015398', (((((((((vt0.c2)AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c2)) IN (((vt0.c2)<<(rt0.c0)))) FROM vt0 WHERE ((((0X237d5536)>>('-1e500')) IN ((- (x'')), CAST(x'' AS INTEGER))));SELECT DISTINCT ((((rt0.c1)OR(vt0.c2)))AND((~ (rt0.c1)))) FROM vt0, rt0 WHERE (((((0.7265187374510588)&(0.546897599678132))) BETWEEN (('^7AuO6o' IN ())) AND (((((x'4ced')OR(NULL)))AND(NULL))))); -- 0ms;
SELECT DISTINCT (~ ((rt0.c0 IN ()))) FROM vt0, rt0 WHERE (CASE 0xffffffff901dd025  WHEN CASE 0x9420d3a  WHEN '1588283988' THEN NULL WHEN '{plԵ騜' THEN 0.18032172533464985 WHEN 0.18073923235625677 THEN x'' ELSE 0.9076050739549099 END THEN LIKELIHOOD(DISTINCT NULL, 0.1857586433267583) ELSE (x'f0353268' IN ('53557342')) END); -- 0ms;
SELECT DISTINCT ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)OR(LIKELY(rt0.c1))))OR(((vt0.c1)||(rt0.c2)))) FROM vt0 WHERE ((((0.3430194570135702 IN ()))IS(((x'') NOT NULL))));SELECT ALL ((MAX(vt0.c0)) NOT BETWEEN ((rt0.c0 IN (NULL))) AND ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))), COUNT(')') OVER (), CAST(((((rt0.c2)OR(vt0.c2)))OR(rt0.c2)) AS REAL) FROM rt0, vt0 WHERE (((CASE x''  WHEN '>SaI(,I蚻' THEN NULL END) NOT BETWEEN (((('2100096981', x'8704', NULL))>((0Xffffffffae7290c3, -1972466218, NULL)))) AND (0.7306719491838434))) LIMIT -563759775; -- 1ms;
SELECT DISTINCT CAST(((vt0.c1)OR(rt0.c1)) AS NUMERIC), -1125998332, CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c2))  WHEN ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(vt0.c1)))AND(rt0.c2)) THEN ((vt0.c2) IS TRUE) ELSE ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c2)) END FROM vt0, rt0 WHERE (((('1143711381') NOT BETWEEN ('685053309') AND (0.10075823902339254)) IN ())); -- 0ms;
SELECT DISTINCT (((((((vt0.c0, vt0.c2, 0.7261426068023171, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, vt0.c1, vt0.c2, vt0.c1, vt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1, rt0.c0, 1286510762))))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOT NULL))) FROM rt0 WHERE (((((-558102103) BETWEEN (NULL) AND (0.7744876359358094))) BETWEEN ((('1343372657')&(0x511cd640))) AND (CAST(x'' AS NUMERIC))));SELECT DISTINCT CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c2) IS FALSE) WHEN ((vt0.c1)!=(rt0.c2)) THEN (+ (rt0.c1)) WHEN ((rt0.c2)|(vt0.c1)) THEN LIKE(vt0.c1, rt0.c0, 'l') END FROM rt0 LIMIT -49276387;SELECT ALL (((((- (rt0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))AND(rt0.c0 COLLATE BINARY)) FROM vt0 WHERE (((((0X46d68257)IS('鷿')))*((('-1385509002') ISNULL))));SELECT DISTINCT (((((rt0.c1 IN ()))OR(((((rt0.c2)AND(vt0.c2)))OR(vt0.c0)))))AND(((vt0.c2)+(vt0.c0)))) FROM vt0, rt0 WHERE (CASE WHEN ((x'') NOT BETWEEN ('') AND (x'')) THEN CASE WHEN '0' THEN x'' ELSE 'QW*H' END WHEN CASE WHEN NULL THEN x'' ELSE 0.2979897824587373 END THEN CAST(0.8404880992296391 AS REAL) WHEN (('1547198531') NOT BETWEEN ('779339331') AND ('220243251')) THEN CAST(x'' AS NUMERIC) END); -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 ELSE NULL END AS BLOB) FROM vt0, rt0 WHERE ((+ (((((NULL)AND('')))AND(NULL))))); -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN vt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END)OR(((((vt0.c0)OR(rt0.c2)))AND(vt0.c1)))) FROM vt0;SELECT DISTINCT (CASE WHEN vt0.c1 THEN NULL END IN (rt0.c0 COLLATE NOCASE)) FROM vt0, rt0 WHERE (((LOWER(x''))||((('-1269941538')!=(0.4980817162223786))))); -- 0ms;
SELECT DISTINCT TOTAL(('-1496961349' IN (vt0.c0, vt0.c1)) COLLATE BINARY) OVER ( ORDER BY ((vt0.c0)IS NOT(rt0.c0))  NULLS LAST), CAST(AVG(vt0.c0) AS NUMERIC), (((rt0.c0)<<(rt0.c2)) IN ()) FROM vt0 WHERE (CASE WHEN ('-1819702536' IN ()) THEN (~ ('-712379869')) ELSE ((NULL) BETWEEN (0X45795d57) AND (x'')) END) ORDER BY CASE ((vt0.c1) NOTNULL)  WHEN ((((rt0.c0)OR(vt0.c2)))AND(0.6911465309388698)) THEN (((rt0.c2, vt0.c2, rt0.c2))==((vt0.c1, vt0.c0, rt0.c2))) ELSE (((rt0.c1, 0.5425747798630325, vt0.c1))<((rt0.c0, x'52b2', vt0.c2))) END ASC;SELECT ((((vt0.c1) IS FALSE)) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((~ (rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((((((rt0.c2)OR(rt0.c0)))AND(NULL)))OR(vt0.c2)))AND(vt0.c1))) OVER () FROM rt0, vt0 WHERE (CASE WHEN ((NULL)-(401253473)) THEN ((x'') NOT NULL) WHEN ((((']<')AND(NULL)))OR(NULL)) THEN ((NULL) BETWEEN (NULL) AND ('H[q')) WHEN TYPEOF(-1941577786) THEN CASE 0.03005240043108426  WHEN 591072374 THEN '625259963' ELSE x'de97' END END); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c2) IS TRUE) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) WHEN ((rt0.c2)>(rt0.c0)) THEN (NOT (rt0.c0)) WHEN ((rt0.c2)%(vt0.c0)) THEN vt0.c2 WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (NULL)) THEN 0.41241670139948094 WHEN CAST(rt0.c2 AS TEXT) THEN (((vt0.c0, vt0.c1, rt0.c1))<((vt0.c1, rt0.c2, vt0.c2))) ELSE vt0.c2 END FROM rt0, vt0 WHERE (((COALESCE(DISTINCT '-1271034371', '')) BETWEEN ((0.8596049192193203 IN (0xfffffffff1fe7ee4, x''))) AND ((((NULL))<((1076668003)))))); -- 0ms;
SELECT DISTINCT AVG(CAST(rt0.c0 AS TEXT) COLLATE BINARY), '<4rX\n?ຈ', (~ (CASE WHEN vt0.c1 THEN rt0.c2 ELSE '&w' END)) FROM vt0, rt0 GROUP BY UPPER(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))); -- 0ms;
SELECT DISTINCT (NOT ('E5S9')) FROM rt0 WHERE ('0.8042473195811152'); -- 0ms;
SELECT DISTINCT NTILE(x'236a') OVER (), (- (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))), ((CASE WHEN vt0.c2 THEN 0.16204080271294796 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c2 THEN rt0.c1 END) ISNULL) FROM rt0 WHERE ((CASE x''  WHEN '樷4|vS' THEN 0.18816954219667392 ELSE x'' END IN ()));SELECT DISTINCT COUNT(*), ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (TOTAL(vt0.c1)) AND ((rt0.c1 IN ()))), x'be59' FROM rt0;SELECT DISTINCT (((0.4385106948898042)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE rt0.c1 END)) AND ((CASE vt0.c0  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN rt0.c0 THEN rt0.c2 END))), ((((TOTAL(vt0.c1))OR((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))))OR(((rt0.c0) BETWEEN (0.608254750073559) AND (vt0.c0)))), (- (rt0.c1)) COLLATE BINARY FROM vt0, rt0 WHERE ((((((NULL)) BETWEEN (('407025887')) AND ((6.64790405E8)))) IS FALSE)); -- 0ms;
SELECT ALL rt0.c2 FROM vt0;SELECT ALL ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((rt0.c1) NOT BETWEEN ('-885820773') AND (vt0.c2)))GLOB(((rt0.c0)<<(rt0.c1)))), (+ (((vt0.c2) NOTNULL)))) OVER () FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(CAST(vt0.c1 AS INTEGER))); -- 0ms;
SELECT DISTINCT (- ((+ (rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (0.05638262582239284); -- 0ms;
SELECT DISTINCT (~ (GROUP_CONCAT(vt0.c2))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((((rt0.c1))<((vt0.c2))))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)))OR(vt0.c2)) FROM rt0, vt0; -- 0ms;
SELECT ((rt0.c2) NOT BETWEEN (json(rt0.c2)) AND (((vt0.c1)IS(vt0.c2)))) FROM rt0 WHERE ((- (json_extract('', '1222847641', 0.07546609886294342, 8.05087703E8))));SELECT DISTINCT (((vt0.c1 IN ()))|(rt0.c0 COLLATE RTRIM)) FROM vt0 GROUP BY CASE (('')IS(vt0.c0))  WHEN (vt0.c0 IN ()) THEN (+ (rt0.c0)) END HAVING x'';SELECT ((((rt0.c2)AND(rt0.c0))) ISNULL) FROM vt0 LIMIT -481220221 OFFSET -1858750235;SELECT ALL UNLIKELY((rt0.c1 IN ())) FROM vt0; -- 1ms;
SELECT vt0.c1 FROM rt0, vt0 WHERE ((('-997183752' IN ()) IN ())); -- 0ms;
SELECT DISTINCT (((((vt0.c2))==((vt0.c1)))) BETWEEN ((rt0.c0 IN ())) AND ((((vt0.c0, NULL, vt0.c2))>=((vt0.c2, rt0.c1, rt0.c0))))) FROM vt0 WHERE (((json_array_length(0xffffffffc49c1858, 0.6741550462017212))IS NOT((('-49276387')==(0.8161465769538635)))));SELECT CAST(((vt0.c2) NOT NULL) AS INTEGER) FROM vt0 LIMIT -842416173 OFFSET 1800164626; -- 0ms;
SELECT DISTINCT CASE MIN(rt0.c2)  WHEN ((((((((vt0.c2)AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)) THEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(vt0.c2)))OR(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((rt0.c2))<((vt0.c2))) WHEN ((((((((rt0.c2)OR(0X31714c8d)))AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)) THEN ((rt0.c0)=(rt0.c0)) ELSE ((vt0.c2)OR(rt0.c1)) END FROM rt0 WHERE (((NULL) NOTNULL) COLLATE NOCASE);SELECT DISTINCT ((((vt0.c2)*(rt0.c0))) NOTNULL) FROM vt0 LIMIT -1269941538 OFFSET -1667196606;SELECT COALESCE(DISTINCT vt0.c0 COLLATE RTRIM, CAST(rt0.c2 AS BLOB)), ((NULL) BETWEEN (((rt0.c2)GLOB(0X4d4f9b3b))) AND (UNICODE(rt0.c2))), MIN(CAST(rt0.c0 AS BLOB)) FROM vt0, rt0 WHERE (((NULL)+(((0Xffffffff9ada6ee4)IS NOT('ഺ%'))))) GROUP BY ((((vt0.c1) NOT BETWEEN ('-1200160330') AND (rt0.c2))) BETWEEN ((vt0.c2 IN ())) AND (((x'') BETWEEN (vt0.c1) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT json_insert((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))), CAST(rt0.c0 AS BLOB), 0.3081092494423322), ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c1 END)&(((((rt0.c2)AND(vt0.c2)))OR(vt0.c2)))), (CAST(vt0.c0 AS REAL) IN ()) FROM rt0;SELECT DISTINCT vt0.c2 FROM rt0, vt0 WHERE ((((CAST(-1.696960796E9 AS BLOB), CAST(NULL AS TEXT), (('985727648') ISNULL)))>=(((0.6222456718819651 IN ('0.4160867961326634', -1778770382)), (x'' IN ('')), ((((((((0.27211772725969374)OR(x'4a99')))OR(x'')))OR('-519816362')))AND(0.7685350451692776)))))) ORDER BY rt0.c0, ((vt0.c1) IS FALSE) COLLATE BINARY DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((vt0.c0)GLOB(vt0.c0)))LIKE(CAST(rt0.c0 AS REAL))) FROM rt0 WHERE (CASE WHEN x'' THEN 0xffffffff934968d1 ELSE x'9654' END COLLATE NOCASE);SELECT MAX(CAST(rt0.c0 AS REAL)) COLLATE NOCASE, PERCENT_RANK() OVER (), (((((vt0.c1, rt0.c2, rt0.c0))<=((vt0.c2, vt0.c2, vt0.c0)))) NOT BETWEEN (vt0.c2 COLLATE RTRIM) AND (COUNT(*))) FROM vt0 WHERE (((((((((0.29869047138421745)AND('-1912216088')))AND(x'dc9c')))OR('0.9370890143233179' COLLATE NOCASE)))OR(((x'3e00')&(NULL)))));SELECT DISTINCT CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ((rt0.c1)-(rt0.c2)) THEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN x'' COLLATE RTRIM THEN (rt0.c1 IN ()) WHEN ROUND(vt0.c0, rt0.c0) THEN vt0.c0 COLLATE NOCASE END, CAST((rt0.c1 IN ()) AS TEXT), GROUP_CONCAT(((rt0.c2)>=(rt0.c0))) OVER ( ORDER BY ((rt0.c2)>=(vt0.c0)) COLLATE RTRIM  NULLS LAST, (((rt0.c1, rt0.c0, '?f}Kqn*7', vt0.c0, rt0.c1, rt0.c2, vt0.c2)) BETWEEN ((vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (((rt0.c0))<=((rt0.c2))), CAST(rt0.c1 AS REAL), 0.1792786274022865, ((x'') NOT BETWEEN (rt0.c0) AND (x'a2273ee7')))) AND ((CAST(NULL AS BLOB), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((x'')|(rt0.c1)), ((rt0.c1) NOT NULL), 0.25973146955185666 COLLATE NOCASE, CAST(rt0.c1 AS INTEGER), UPPER(rt0.c2)))), rt0.c1 COLLATE BINARY  NULLS LAST) FROM rt0 WHERE (IFNULL(DISTINCT (((0.5636810428037898)) BETWEEN ((0.1764769779863694)) AND ((NULL))), (((NULL))<((NULL)))));SELECT DISTINCT (~ ((0.1211044998442461 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((CASE vt0.c2  WHEN '1354236095' THEN NULL END)AND(((rt0.c0)>=(vt0.c2)))))OR((rt0.c0 IN ()))))AND((vt0.c2 IN (rt0.c0)))))OR('')) FROM rt0;SELECT ALL ((MAX(vt0.c2)) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (rt0.c1 COLLATE NOCASE)) FROM rt0, vt0 WHERE (((((x'')<<('-1675197085')))LIKE(CASE WHEN '1396385992' THEN 0x5512793a END))) LIMIT -1233839168 OFFSET -1696960796; -- 0ms;
SELECT NULL FROM rt0; -- 0ms;
SELECT ALL ((((((((((((x'')OR(rt0.c1)))OR(vt0.c1)))OR((~ (0X6d342f7b)))))OR(SUM(vt0.c2))))AND(((((rt0.c0)OR(0xffffffffb09cf4b3)))AND(vt0.c2)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 END)), '', HEX(rt0.c1) COLLATE BINARY FROM vt0, rt0 LIMIT -1730650379 OFFSET -112134429; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NULL)AND(x'')) IN ())); -- 0ms;
SELECT DISTINCT x'' FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT ALL CAST(((vt0.c0) BETWEEN (0.33246979216154904) AND (vt0.c1)) AS TEXT) FROM rt0, vt0 WHERE (((1.633062193E9) IS FALSE) COLLATE NOCASE) LIMIT 596352006 OFFSET -246405605; -- 0ms;
SELECT ((CAST(vt0.c1 AS BLOB)) IS FALSE), ((SUM(vt0.c2))<=(MIN(rt0.c0, vt0.c1))), ((load_extension(vt0.c0, vt0.c1))%((vt0.c1 IN ()))) FROM rt0 GROUP BY CASE WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END COLLATE RTRIM;SELECT COUNT(*) OVER () FROM rt0 ORDER BY 0xffffffffdc2253fc ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (NOT (((((((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT ALL CASE WHEN ROUND(vt0.c0, vt0.c2) THEN CHANGES() END, x'', (((rt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT))) AND (((- (rt0.c0))))) FROM rt0, vt0 GROUP BY ((((((((rt0.c0)OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)))AND(CAST(rt0.c0 AS BLOB))))OR(NULL)))AND(LIKE(vt0.c2, x''))), rt0.c2, (((((vt0.c2)AND(rt0.c2)))OR(vt0.c2)) IN ()) HAVING CAST(CAST(rt0.c0 AS TEXT) AS REAL) ORDER BY CASE ((vt0.c0)-(rt0.c0))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)) THEN (vt0.c0 IN (rt0.c0, rt0.c2)) END  NULLS LAST; -- 1ms;
SELECT DISTINCT (NOT (((rt0.c1)||(vt0.c1)))), (((vt0.c0) IS FALSE) IN ((((rt0.c2, rt0.c0, rt0.c2))>((vt0.c0, 3.30700448E8, rt0.c2))), ((rt0.c1)LIKE(vt0.c2)))), ((((rt0.c0)IS('Gr')))IS NOT(NULL)) FROM rt0, vt0 WHERE (CASE WHEN ((-5.03416399E8) NOT BETWEEN (-1053040281) AND (NULL)) THEN (((('}z 𥉉q6P')OR(x'b997')))AND(NULL)) END) LIMIT 1510227651 OFFSET 753491248; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) BETWEEN (x'2c7a') AND (vt0.c0))) FROM rt0, vt0 WHERE (((NULL)&(0.2345504791501165)) COLLATE BINARY COLLATE RTRIM) ORDER BY ((((rt0.c1)>=(NULL)))IS(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c2 END))  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ (vt0.c2)) COLLATE BINARY FROM rt0, vt0; -- 0ms;
SELECT ALL (((vt0.c2)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c2) IS TRUE)))) FROM rt0, vt0 GROUP BY (vt0.c1 IN ((rt0.c2 IN ()))), HEX(DISTINCT vt0.c2) COLLATE RTRIM, CASE WHEN (((vt0.c2))<((NULL))) THEN CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN 0.7538498951153563 WHEN rt0.c0 THEN vt0.c2 ELSE vt0.c0 END WHEN 0x38e380ff THEN ((((vt0.c1)AND(vt0.c1)))AND(rt0.c2)) WHEN CAST(1e500 AS TEXT) THEN ((vt0.c0)|(rt0.c0)) WHEN ((rt0.c1)-(rt0.c0)) THEN load_extension(-1.955781083E9) WHEN vt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN vt0.c2 THEN ((vt0.c2)>>(vt0.c2)) ELSE rt0.c0 COLLATE NOCASE END HAVING (((((((rt0.c2))=((rt0.c0))))OR(((x'') NOTNULL))))OR(((rt0.c1)LIKE(rt0.c2)))); -- 0ms;
SELECT GROUP_CONCAT((((rt0.c0, rt0.c1, rt0.c1))!=((x'', rt0.c0, vt0.c1)))) OVER () FROM vt0 WHERE (CASE 0.02608222365114643  WHEN NULL THEN NULL ELSE 620306014 END COLLATE RTRIM) GROUP BY ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))) ISNULL);SELECT DISTINCT (CAST(rt0.c2 AS REAL) IN (((rt0.c0)IS NOT(vt0.c1)))), LIKELY(DISTINCT CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c1 END), RANK() OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((rt0.c1)-(rt0.c0)), vt0.c0, 0.5420996477006632))<((((vt0.c0) IS FALSE), rt0.c0 COLLATE BINARY, (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (NOT (((('', NULL, vt0.c2))>=((rt0.c2, rt0.c1, rt0.c0))))) FROM vt0;SELECT (vt0.c2 COLLATE BINARY IN (((rt0.c0) IS TRUE))) FROM vt0 WHERE (CAST(((x'1bcf')IS NOT(NULL)) AS INTEGER));SELECT NULL, TYPEOF(((vt0.c2) NOT NULL)), -1843339498 FROM rt0 WHERE (((('竢')) NOT BETWEEN (((('')*('350055421')))) AND ((NULL)))) GROUP BY CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1)))  WHEN rt0.c0 THEN vt0.c1 WHEN ((rt0.c0) IS TRUE) THEN 0X5eab4a54 WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c2)) THEN (+ (rt0.c1)) ELSE (NOT (rt0.c1)) END LIMIT 1026758537;SELECT (((vt0.c1))=((CAST(rt0.c1 AS REAL)))), TOTAL(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) OVER (), CASE WHEN (((-1.819702536E9))<((vt0.c1))) THEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) WHEN (- (rt0.c1)) THEN (0.2453247025352031 IN (rt0.c0)) WHEN ((vt0.c0)>>(rt0.c1)) THEN ((rt0.c2) IS TRUE) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c2)))|((rt0.c1 IN (rt0.c2, vt0.c0)))) FROM vt0;SELECT DISTINCT 0.15561805907836135 FROM rt0, vt0 ORDER BY CAST(CASE WHEN 0.7261426068023171 THEN vt0.c0 END AS NUMERIC) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT SUM(-1.197820279E9), COUNT(*), CAST(((vt0.c2) IS TRUE) AS BLOB) FROM rt0 GROUP BY CASE 0.4240859264774841  WHEN ((('bX䇺xc', vt0.c1, rt0.c0))<=((vt0.c2, rt0.c2, vt0.c2))) THEN ((rt0.c0)-(vt0.c2)) ELSE ((((vt0.c0)AND(vt0.c1)))OR(rt0.c2)) END LIMIT 1076655274 OFFSET 203608499;SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT CAST(((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)) AS NUMERIC), ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (x''))) AND (((x'') IS TRUE))), vt0.c0, (((vt0.c1 IN (rt0.c2)))LIKE((((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c2, vt0.c2, vt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c0))))), '' COLLATE BINARY FROM rt0, vt0 GROUP BY (('UU') NOTNULL); -- 0ms;
SELECT ALL ((SQLITE_SOURCE_ID()) IS FALSE), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL), ((rt0.c0)AND(CAST(rt0.c1 AS INTEGER))) FROM rt0, vt0 ORDER BY rt0.c2 ASC; -- 0ms;
SELECT DISTINCT SUM(CASE WHEN vt0.c2 THEN '593978279' WHEN rt0.c1 THEN '-0.0' WHEN vt0.c2 THEN rt0.c0 ELSE rt0.c1 END) OVER (), vt0.c2, ((MAX(vt0.c0))LIKE(rt0.c1 COLLATE RTRIM)) FROM rt0 WHERE ((~ (((0.7984007452199847) NOT BETWEEN (x'2c909121') AND (NULL))))) GROUP BY vt0.c2 ORDER BY rt0.c2 ASC  NULLS LAST;SELECT SUM((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE ((((0.0811712690431814)||('1845411384')) IN ((((0.9188235829412253)) BETWEEN ((-258509568)) AND ((x''))), CAST(x'' AS TEXT)))); -- 0ms;
SELECT ALL '*%ZHn{', ((0.01876821387156591) ISNULL), (((- (rt0.c2)))&(0.2038064930533554)) FROM vt0 WHERE (((((NULL)OR(0xffffffff92d21929)))OR(NULL)) COLLATE NOCASE COLLATE BINARY) LIMIT 52086457 OFFSET -54279573;SELECT DISTINCT rt0.c1 FROM vt0;SELECT GROUP_CONCAT(((rt0.c1) IS TRUE)) FROM rt0 WHERE (((((0.9631036608992606)OR(NULL)))*(((0.8280285041740849)OR(0.16523570450354164))))) ORDER BY CAST((vt0.c1 IN ()) AS INTEGER)  NULLS FIRST; -- 1ms;
SELECT DISTINCT IFNULL(0.8527267936682595, (((vt0.c1))<=((rt0.c2)))) FROM rt0 WHERE ((((('vJBgNy7\') IS FALSE)) BETWEEN ((((0x9420d3a)) NOT BETWEEN ((NULL)) AND ((x'')))) AND (CASE ''  WHEN NULL THEN 0.42597261278016196 END)));SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 LIMIT 656711951 OFFSET 591072374; -- 0ms;
SELECT DISTINCT ((((- (vt0.c1))))==((((rt0.c0)>>(rt0.c1))))), TRIM(((vt0.c2) BETWEEN (vt0.c0) AND (NULL))), ((((((((((vt0.c2)LIKE(rt0.c1)))OR((vt0.c2 IN ()))))AND(CASE WHEN vt0.c2 THEN vt0.c1 ELSE x'16a4' END)))AND(((vt0.c0)IS NOT(vt0.c2)))))OR(CAST(rt0.c2 AS INTEGER))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (+ (CAST(vt0.c2 AS BLOB))), (((((rt0.c2 IN ()))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (rt0.c0) AND (0.7766970350307955)))), ((((rt0.c2)GLOB(vt0.c0))) IS TRUE) FROM rt0, vt0 WHERE (((((((0xbce103c)>>(0.021253640593673517)))OR(((x'9e2b')*('G}')))))OR((x'' IN ())))); -- 0ms;
SELECT ((CASE '1763467355'  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c2 END)OR(UPPER(-1.955781083E9))), IFNULL(DISTINCT '-1739750806', ((rt0.c1)<>(rt0.c1))), ((NULL)>=((((rt0.c2, vt0.c2, rt0.c0)) BETWEEN ((vt0.c1, rt0.c2, -1.496961349E9)) AND ((vt0.c1, vt0.c0, rt0.c1))))), (((NULL)) NOT BETWEEN ((COUNT(rt0.c0))) AND ((vt0.c2 COLLATE NOCASE))), (+ ((((('wU')AND(vt0.c2)))AND(rt0.c2)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT DISTINCT ((MAX(vt0.c1))AND(TOTAL(rt0.c1))), CASE rt0.c1  WHEN (1.454640264E9 IN (rt0.c1)) THEN (~ (vt0.c2)) ELSE ((vt0.c0)||(vt0.c2)) END, TYPEOF(rt0.c1) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT '-136783494', SUM(((vt0.c2) NOTNULL)), AVG(((((vt0.c0)AND(rt0.c1)))OR(vt0.c1))) OVER () FROM rt0;SELECT ALL ((((vt0.c0 COLLATE NOCASE)OR((vt0.c2 IN ()))))AND(((rt0.c1) IS FALSE))), ((rt0.c0 COLLATE NOCASE) NOT BETWEEN ((('inC蚻B')GLOB(vt0.c1))) AND (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 END)), ((((((vt0.c0)AND('0.9638572485675508')))OR(rt0.c2)))!=(NULLIF(DISTINCT rt0.c2, vt0.c1))), LAST_VALUE(((((((((((((((vt0.c1)OR(rt0.c0)))OR(0x4871a9e4)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND('155323706'))) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) OVER (), (((((((((((('nku}gG9')AND(rt0.c2)))AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(UPPER(NULL))) FROM vt0, rt0 WHERE (UNICODE((((0.9083662638502589))!=(('-34259900'))))) LIMIT 2069175647 OFFSET 1681405868; -- 0ms;
SELECT DISTINCT (((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))>>(((('-1730650379'))>((vt0.c0))))), (- (CASE vt0.c0  WHEN vt0.c1 THEN rt0.c1 END)), ((((rt0.c2) BETWEEN (vt0.c2) AND (rt0.c0))) IS TRUE) FROM vt0 WHERE ((~ (((3.83446643E8)<=(x'833f'))))) LIMIT 1983549531 OFFSET -716905591;SELECT ((((rt0.c0)=(rt0.c1)))||(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) FROM rt0; -- 0ms;
SELECT (((((vt0.c1)<<('-879358846')), (((vt0.c0))<=((x'52c547f8'))), MAX(vt0.c2)))<=((rt0.c1 COLLATE RTRIM, SUM(rt0.c1), (((vt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) FROM vt0 LIMIT 1234791901 OFFSET -15789502;SELECT AVG((vt0.c1 IN (vt0.c1, vt0.c1))), NTH_VALUE((((rt0.c1 COLLATE RTRIM))<(((- (rt0.c2))))), (((((((((+ (rt0.c0)))AND(((rt0.c0) NOT NULL))))AND((rt0.c0 IN (rt0.c1)))))OR(CAST(rt0.c0 AS BLOB))))AND(CAST('w^' AS REAL)))) OVER ( ORDER BY (((('MS') ISNULL))IS NOT((('bG|&O	I') NOT BETWEEN (vt0.c0) AND (vt0.c2))))  NULLS FIRST), (((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c1)) IN ()) FROM rt0 WHERE ((('-715508494' COLLATE NOCASE)LIKE((- (NULL)))));SELECT DISTINCT RANK() OVER () FROM vt0 WHERE ((+ (NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((rt0.c0 IN ())))!=((SUM(vt0.c2)))) FROM rt0;SELECT DISTINCT ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (SUM(vt0.c2)) AND (rt0.c2 COLLATE RTRIM)), CAST(((rt0.c2) NOTNULL) AS REAL), ((CASE WHEN rt0.c2 THEN vt0.c2 WHEN -800658394 THEN vt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE '~>h9apel' END)<>(((vt0.c2)*(vt0.c2)))) FROM rt0, vt0 WHERE (CASE WHEN (((x''))=((NULL))) THEN ((((x'')AND('H*')))AND(x'')) WHEN ((x'') IS FALSE) THEN (+ (x'')) WHEN CASE 'kbER曲,R'  WHEN '-848504050' THEN x'd077' WHEN 0.7989406674689341 THEN 0.7001211374923332 WHEN x'5f9e' THEN x'cbdb' END THEN ((-1.689563542E9)&(NULL)) ELSE (('3D') NOTNULL) END); -- 1ms;
SELECT ALL (((vt0.c1 IN ())) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL vt0.c2 FROM vt0 GROUP BY ABS(DATETIME(rt0.c1, vt0.c0, rt0.c0));SELECT ALL TOTAL(UPPER(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)) IN ()) FROM vt0 WHERE ((((('Tw')AND(((0.9863335046112006) BETWEEN ('-1955781083') AND ('5^')))))AND((NOT (x''))))); -- 0ms;
SELECT DISTINCT vt0.c0, ((CAST(NULL AS BLOB))<=((vt0.c2 IN ('-1220583120')))), CAST(vt0.c0 AS TEXT) COLLATE BINARY FROM rt0 WHERE (NULL);SELECT DISTINCT rt0.c2 COLLATE NOCASE FROM rt0, vt0; -- 0ms;
SELECT ALL CAST((- (0.4861629478937203)) AS INTEGER), FIRST_VALUE(((vt0.c1 COLLATE NOCASE) NOT NULL)) OVER (), LOWER(DISTINCT ((vt0.c1)OR(vt0.c1))) FROM rt0, vt0 WHERE (((CASE WHEN '2050035313' THEN x'' END) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS BLOB), NULL, ((rt0.c1)<=(rt0.c2)) COLLATE BINARY FROM vt0, rt0 GROUP BY (((NOT (vt0.c0))) NOT NULL) ORDER BY (((((rt0.c2 IN ()))OR(CAST(vt0.c0 AS TEXT))))OR(0x5da786ba)) DESC, ((((rt0.c2) NOTNULL)) IS FALSE) DESC; -- 0ms;
SELECT ALL (((vt0.c1)<<(rt0.c1)) IN (((vt0.c1) NOT NULL))) FROM rt0, vt0 WHERE (CASE LIKE(0.09527783262389433, 0xffffffffdebc09a9)  WHEN CAST(NULL AS TEXT) THEN ((2.33784841E8)IS(x'e9968a71')) WHEN '924735629' COLLATE NOCASE THEN (+ ('iT*,㉘')) WHEN ((((((((NULL)OR(NULL)))OR('>pkn2*.ʠt')))AND('঩WeE')))OR('ot')) THEN (((0.04265738995971269)) BETWEEN (('-387926769')) AND ((NULL))) ELSE ((NULL) NOT BETWEEN (x'9dbe') AND ('+')) END); -- 0ms;
SELECT ALL vt0.c2 FROM vt0 WHERE ((CHAR('831841823') IN ())) ORDER BY (((+ (vt0.c1))) BETWEEN (((rt0.c2)>>(rt0.c1))) AND (((vt0.c2) BETWEEN (rt0.c1) AND (vt0.c2)))) ASC  NULLS LAST;SELECT ALL rt0.c1 FROM vt0;SELECT DISTINCT '4{mc}' COLLATE BINARY FROM rt0, vt0; -- 1ms;
SELECT ALL TRIM(((vt0.c2)IS NOT(0.7997914257382985))), ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE, ((vt0.c0) IS FALSE) COLLATE NOCASE FROM vt0, rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS BLOB) THEN IFNULL(vt0.c1, rt0.c1) END ASC  NULLS LAST, ((550189012) NOT NULL)  NULLS LAST; -- 3ms;
SELECT DISTINCT CAST(vt0.c1 AS TEXT), NULL, (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((x''))))AND(rt0.c2)))OR(('' IN ()))) FROM vt0, rt0 WHERE (CAST((~ ('-1050741261')) AS TEXT)); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c2 COLLATE NOCASE) AND (((rt0.c0)<<(vt0.c0)))) FROM vt0 WHERE (x'');SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c2))) BETWEEN (CASE vt0.c2  WHEN vt0.c0 THEN 0.5820182679199941 ELSE vt0.c1 END) AND ((('1143711381')>(rt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT ALL (+ (((rt0.c0)|(rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL LEAD(((((vt0.c0) IS FALSE)) NOTNULL), CASE ((x'')AND(vt0.c0))  WHEN (('-2069278131')OR(vt0.c0)) THEN (1746633323 IN (vt0.c1)) ELSE ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) END, ((json_extract(vt0.c0, vt0.c2, vt0.c2, vt0.c2))+((+ (vt0.c0))))) OVER () FROM vt0 WHERE (((((NULL) NOT BETWEEN ('2049228730') AND ('809827959'))) BETWEEN (CASE '虃>'  WHEN '0.9631036608992606' THEN NULL END) AND (CASE '1031656745'  WHEN -1.73618457E9 THEN '7x' END))) GROUP BY CASE ((NULL) IS TRUE)  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (-2.007898914E9)) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c2)) END HAVING COALESCE(NULL, ((vt0.c0)<=(vt0.c1)));SELECT DISTINCT LAG(((CAST('-1880197291' AS INTEGER))*(((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM)), CAST((vt0.c2 IN ()) AS INTEGER)) OVER () FROM vt0 WHERE (CASE (x'' IN ())  WHEN ((0Xffffffff964ccbd9)*('y]')) THEN -1702133776 WHEN TRIM('1763467355', 0.344446548755842) THEN (('1439235549') NOT NULL) WHEN (((NULL, 0.11649535498707864, '1510227651'))>((x'', 4.84554166E8, '}{J~'))) THEN CASE WHEN 0X2a37ed20 THEN NULL WHEN x'fb07' THEN '],b滧j' WHEN NULL THEN x'782e6fbe' ELSE '' END ELSE x'11f5' COLLATE NOCASE END) ORDER BY ((((rt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))<=(CAST(vt0.c1 AS NUMERIC)));SELECT GROUP_CONCAT(((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))) FROM vt0 WHERE (((CAST(NULL AS TEXT))%(CAST(1595918298 AS INTEGER)))) LIMIT 1164020186 OFFSET 1355303039;SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT ((0.7769692758990239 IN ())))); -- 0ms;
SELECT DISTINCT ((vt0.c2)-(rt0.c0)) COLLATE BINARY FROM rt0, vt0 GROUP BY ((((((((NULL COLLATE RTRIM)OR((((vt0.c1))<((rt0.c0))))))OR(((rt0.c2)%(x'')))))OR(CASE vt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END)))OR(((vt0.c2) NOT BETWEEN (rt0.c2) AND (x'')))); -- 0ms;
SELECT ALL COUNT(*) OVER ( PARTITION BY ((vt0.c2)AND(rt0.c2)) COLLATE BINARY, ((((rt0.c2))<>((vt0.c0))) IN ())) FROM rt0, vt0 WHERE (((((((((CASE 0xffffffffd046ec26  WHEN x'' THEN 0.38306198800259095 ELSE '279502009' END)AND(CASE WHEN x'ca4c' THEN x'' ELSE '985727648' END)))AND((('')GLOB(0.6014114126916767)))))AND(((x'')&(0.8748892680238114)))))AND((', 8F౶' IN ())))) GROUP BY (((((rt0.c0))==((vt0.c2))))IS(vt0.c1)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(NULL)))AND(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((0.09738903972705137 IN (0.07714497327105507, NULL)) IN ((('mqQ') IS TRUE)))); -- 0ms;
SELECT ALL json_quote(COUNT(vt0.c0)), ((HEX(vt0.c1))|((+ (rt0.c1)))), vt0.c0 FROM vt0 WHERE ((((CASE WHEN x'' THEN NULL ELSE '-15932305' END))<((NULL)))) ORDER BY ((((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c2 END)AND(NULL)))AND(((rt0.c1) IS TRUE))), ((((((((('1066313609')OR(rt0.c0)))OR(vt0.c2)))AND(rt0.c1)))OR(rt0.c0)) IN ()) ASC  NULLS FIRST;SELECT ALL '9223372036854775807' FROM vt0, rt0; -- 0ms;
SELECT ALL (rt0.c0 IN ()) COLLATE BINARY COLLATE BINARY FROM vt0, rt0 WHERE (((('-783784309')) BETWEEN ((((x'82bc')<(0Xffffffff8851e4de)))) AND ((((0.5470984600779545) NOT BETWEEN (x'ef2c') AND ('r?')))))); -- 0ms;
SELECT AVG(CAST(rt0.c2 AS REAL)) OVER (), (- (vt0.c1)) COLLATE BINARY, ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))!=(SQLITE_COMPILEOPTION_GET(vt0.c0))) FROM rt0, vt0 WHERE (((((x'd7fec263') NOT BETWEEN (x'') AND ('dᤩvMTae'))) ISNULL)); -- 0ms;
SELECT COUNT(CASE WHEN rt0.c2 THEN vt0.c1 WHEN 0.18121685040601176 THEN rt0.c0 WHEN '{Y' THEN NULL ELSE vt0.c2 END) FROM rt0 WHERE ((((x'' IN (0xffffffff92d21929))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(-1294179521)) AND (CAST(0.9491313253809424 AS TEXT))));SELECT (((- (rt0.c2)))==((NOT (rt0.c2)))) FROM rt0 WHERE (((((('^1^+K', 0.786737331060969, 0.22114602283689466))<>((-1661349993, NULL, '1640400451'))))IS(((((((((x'')OR(NULL)))OR(NULL)))OR(x'cf23')))AND('-257514817'))))) ORDER BY 0.14997513344456603 ASC  NULLS LAST; -- 0ms;
SELECT GROUP_CONCAT(vt0.c1) OVER () FROM rt0, vt0 WHERE ((((((0.8811481279161842, 0.05942367740308596, 0.5739946477520813, 0Xffffffff8851e4de, '0.267901313510037'))!=((x'', x'', 1.59179975E9, 0Xfffffffffba1f56a, '}'))))+(((NULL) IS FALSE)))); -- 0ms;
SELECT ((((vt0.c2) NOT NULL)) IS FALSE) FROM rt0;SELECT ALL CAST(((rt0.c2) NOTNULL) AS TEXT), ((COUNT(vt0.c1))>(LIKELY(vt0.c0))), ((rt0.c0 COLLATE BINARY) IS TRUE) FROM rt0 NOT INDEXED, vt0; -- 1ms;
SELECT DISTINCT ((CHANGES()) NOT NULL) FROM rt0, vt0 LIMIT 215607665; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY LIKELIHOOD((((rt0.c2))>=((rt0.c2))), 0.20716969548142283)), COUNT(*), ((CAST(vt0.c0 AS INTEGER)) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CAST(rt0.c2 AS BLOB))) FROM vt0, rt0 GROUP BY vt0.c0, (((- (vt0.c1))) NOT NULL), (((vt0.c1)&(rt0.c2)) IN ()) HAVING ((((('0.7069477633631092')!=(rt0.c2))))<((rt0.c0))) ORDER BY NULL ASC  NULLS LAST, ((vt0.c1)LIKE(vt0.c2)) COLLATE RTRIM, (NOT (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST; -- 0ms;
SELECT ALL TRIM(DISTINCT rt0.c1 COLLATE RTRIM) FROM rt0 RIGHT OUTER JOIN vt0 ON ((('z0''	)㕻E*%' IN ())) NOT BETWEEN ((NOT (vt0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))); -- 1ms;
SELECT DISTINCT MAX('87660429') FROM vt0, rt0; -- 0ms;
SELECT UNLIKELY(DISTINCT (~ (vt0.c2))), rt0.c1, rt0.c2 COLLATE NOCASE, rt0.c0, (((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))GLOB(((vt0.c0)%(vt0.c0)))), CUME_DIST() OVER ( ORDER BY CAST(((rt0.c2) ISNULL) AS REAL)  NULLS LAST), GROUP_CONCAT(vt0.c0) OVER () FROM vt0, rt0 LIMIT 1231732788 OFFSET -1677505462; -- 0ms;
SELECT ALL ((LAST_INSERT_ROWID()) IS FALSE) FROM rt0 ORDER BY CASE WHEN CAST(vt0.c2 AS TEXT) THEN CAST(rt0.c2 AS INTEGER) ELSE (~ (vt0.c0)) END ASC  NULLS LAST;SELECT DISTINCT ((vt0.c1 IN (rt0.c1, vt0.c0)) IN (((rt0.c0)/(vt0.c1)))), CASE WHEN MAX(rt0.c2) THEN ((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)) ELSE CAST('ujPaQۜ' AS INTEGER) END, UNLIKELY(rt0.c2) COLLATE NOCASE FROM rt0;SELECT DISTINCT '', ((rt0.c1) IS FALSE) COLLATE RTRIM, CAST(vt0.c2 AS INTEGER) COLLATE NOCASE FROM rt0, vt0 LIMIT -984169720; -- 0ms;
SELECT DISTINCT CASE (- (rt0.c1))  WHEN TOTAL(vt0.c1) THEN (((rt0.c1))<=((vt0.c1))) END FROM rt0 WHERE ((- ((0.10672534384965171 IN ()))));SELECT DISTINCT (+ (((vt0.c2) ISNULL))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (- (((x'') NOTNULL))) FROM vt0, rt0 WHERE (CASE WHEN (('')*('{,')) THEN ((0.2288762140229913) BETWEEN (x'') AND ('')) ELSE 0.6174004697458286 COLLATE BINARY END); -- 0ms;
SELECT DISTINCT (x'2c33' IN ((((rt0.c0, vt0.c2, rt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, rt0.c1)) AND ((vt0.c2, 0x10a8dcb9, vt0.c1))))) FROM vt0 WHERE (((((NULL)|(0.2557044593005725))) NOT BETWEEN (((('146335278')) BETWEEN (('')) AND ((NULL)))) AND ((('0.5025435131954367') ISNULL))));SELECT DISTINCT ABS(DISTINCT SUM(vt0.c1)) FROM rt0;SELECT ALL ((((((rt0.c2)<=(rt0.c0)))OR(vt0.c2 COLLATE BINARY)))AND(((vt0.c1) IS TRUE))), CAST(((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC), CASE (vt0.c0 IN ())  WHEN LOWER(DISTINCT rt0.c0) THEN (((rt0.c0, rt0.c1, vt0.c0, rt0.c2, 'AI|')) NOT BETWEEN (('0.7759481051159235', vt0.c0, vt0.c2, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c2, vt0.c2, rt0.c1, rt0.c1))) END FROM rt0, vt0 WHERE (CAST(CAST(0.8516504269450442 AS TEXT) AS REAL)); -- 0ms;
SELECT DISTINCT ABS(COUNT(*)), (TOTAL(vt0.c2) IN ()), ((((((((((rt0.c0)==(vt0.c2)))AND((rt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(rt0.c2)))AND((rt0.c2 IN (rt0.c0)))) FROM vt0, rt0 WHERE ((((CASE x'bf27'  WHEN 0.9774857192051294 THEN '1177141941' WHEN 0.11424775414535526 THEN 'B' WHEN 0X40b584b9 THEN 0.7853022102760824 ELSE 0x6aaaf9c7 END))>=(((('IU') IS FALSE))))); -- 0ms;
SELECT DISTINCT CAST(0.17948152354261326 AS NUMERIC) FROM rt0, vt0 WHERE ((((('-503416399') IS TRUE)) NOTNULL)); -- 0ms;
SELECT DISTINCT SUM(((rt0.c2)<(vt0.c2))) OVER () FROM vt0 WHERE ((((((9.28026952E8 IN ()))OR((0.564222324797809 IN ('1747646631', 0.28578753092268594)))))AND(CASE x'329a'  WHEN x'' THEN -396416008 END)));SELECT DISTINCT 0.8212262448827428 FROM vt0 WHERE (CAST(0.8460642199211681 COLLATE RTRIM AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((vt0.c1)||(rt0.c0)))>=(CAST(rt0.c2 AS NUMERIC))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT rt0.c1, CAST((- (rt0.c0)) AS TEXT), ((UNLIKELY(vt0.c1))%(((vt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c0)))) FROM vt0 ORDER BY (~ (((((((((rt0.c1)OR(vt0.c2)))OR('')))AND(vt0.c0)))OR(vt0.c1)))) ASC  NULLS FIRST;SELECT ((rt0.c1 COLLATE RTRIM)>>(TOTAL(vt0.c2))) FROM rt0;SELECT (((rt0.c2)) NOT BETWEEN (((+ (vt0.c0)))) AND (((~ (rt0.c2))))), 1.454640264E9, (((vt0.c2 IN (rt0.c1))) NOT NULL) FROM rt0, vt0 WHERE (CAST(NULL AS BLOB)); -- 0ms;
SELECT (((NOT (vt0.c1))) NOTNULL) FROM rt0 ORDER BY (((rt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))) COLLATE RTRIM ASC;SELECT DISTINCT ROW_NUMBER() OVER (), '-1664770658', NULL FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (UPPER(DISTINCT rt0.c2) IN (((vt0.c1)||(rt0.c0)))), CASE WHEN rt0.c0 THEN ((((((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) END, ((((((vt0.c2)OR(vt0.c2)))AND(rt0.c2)))=(vt0.c2)), ABS(DISTINCT TYPEOF(vt0.c0)), ((0.022303603487492274 COLLATE BINARY)*((((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))) FROM vt0, rt0 WHERE (json('-1368223549' COLLATE BINARY)); -- 1ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN (+ (vt0.c0)) WHEN (rt0.c2 IN (rt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN ((((((((rt0.c1)AND(vt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c1)) END FROM rt0 WHERE ((((NULL IN ()))AND(ROUND('-460626753', NULL))));SELECT DISTINCT ((((vt0.c1)>>(rt0.c1)))-((rt0.c1 IN ()))), ((CAST(rt0.c2 AS REAL))&(0.09616396914153091)), (((~ (rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c2)))) FROM rt0 WHERE ((((0.9370890143233179)) BETWEEN (((NULL IN (x'')))) AND (((('215607665')==(NULL))))));SELECT ALL CASE rt0.c2  WHEN ((vt0.c2)!=(vt0.c1)) THEN ((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c1)) WHEN ((vt0.c1)!=(rt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c0 END WHEN TRIM(rt0.c0) THEN COALESCE(rt0.c2, rt0.c0, rt0.c1, vt0.c1) ELSE TOTAL(rt0.c1) END, ((vt0.c2 COLLATE BINARY)!=(((vt0.c2) IS TRUE))), ((((vt0.c0) IS FALSE)) NOT BETWEEN (COUNT(vt0.c2)) AND (SUM(vt0.c0))) FROM vt0, rt0 WHERE (((CASE WHEN x'7369' THEN NULL WHEN x'' THEN '-1227437562' WHEN '1143711381' THEN 'CC' END)>>(CAST(1.510227651E9 AS BLOB)))); -- 0ms;
SELECT DISTINCT ((-9223372036854775808) NOT BETWEEN (((rt0.c2)<>(vt0.c2))) AND ((NOT (vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT ALL highlight(COUNT(*), ((vt0.c1) ISNULL), ((rt0.c0)GLOB(vt0.c1)), CAST(rt0.c0 AS INTEGER)) FROM vt0, rt0 WHERE (((((('-1736184570')) BETWEEN (('-1739750806')) AND (('3d')))) BETWEEN ((0x3a6d372d IN ())) AND (((((x'')OR(NULL)))AND(0X545025ab)))));SELECT ALL ((((((((((vt0.c2)AND(rt0.c0)))AND(vt0.c2)))OR(vt0.c0)))OR(rt0.c1))) BETWEEN (vt0.c2 COLLATE RTRIM) AND ((rt0.c1 IN ()))) FROM rt0, vt0 WHERE (((((x'') BETWEEN ('1640400451') AND (NULL)))||(CASE WHEN 0.267109686508031 THEN '-972200622' END))); -- 0ms;
SELECT ALL (((rt0.c0 IN ()))/(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c2 END)) FROM vt0, rt0 WHERE (CASE WHEN CASE WHEN '8z2).' THEN '270308224' WHEN '' THEN NULL WHEN 0.05761437749318454 THEN 9.24735629E8 ELSE NULL END THEN x'' WHEN (('-1153781946') BETWEEN (0xd20a533) AND (0.31523059517223917)) THEN json_type(-337334019) WHEN NULL COLLATE BINARY THEN (+ (' ddzbw/9')) WHEN CASE WHEN '407025887' THEN 0.9970259957579052 ELSE x'575b' END THEN ((0.42643902577542736) IS FALSE) WHEN ((('968600452'))>=((NULL))) THEN ((x'9a23')>(0.6252718706874578)) END); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN ((~ (rt0.c0))) AND (json_object(vt0.c1, vt0.c0))) FROM vt0, rt0 WHERE (LIKELIHOOD(LOWER('-2057984841'), 0.6645699105652504));