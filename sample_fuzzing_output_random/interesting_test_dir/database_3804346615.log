-- Time: 2024/06/07 00:31:56
-- Database: database15
-- Database version: 3.40.0
-- seed value: 3804346615
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, , columnsize=0); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (''), (NULL), (0.24602652848797246); -- 1ms;
UPDATE OR REPLACE vt0 SET c0='367979141'; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=367979141, c0=0.8605991659041174; -- 1ms;
UPDATE OR ABORT vt0 SET c0='b*', c0='*3u櫓LF', c0=x'5866' WHERE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE OR FAIL vt0 SET c0=x'e4b7', c0='a3v', c0=x'f3f3' WHERE ((vt0.c0)<=(vt0.c0)) COLLATE RTRIM; -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1522551773); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.617189954355779), ('477291468'), (0xffffffffb1bde7c0); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x'1195'; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.3667515001460814 WHERE ((((((((((((((vt0.c0) NOT NULL))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)OR(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) ISNULL))); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
END; -- 5ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(0.3667515001460814) WHERE ((((LOWER(DISTINCT vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))); -- 0ms;
REINDEX; -- 5ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 2024573780);\n; -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
UPDATE vt0 SET (c0)=(0.4467944313147043); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='''z', c0=x'1bc0', c0=NULL WHERE ((vt0.c0 IN ()) IN ()); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.8605991659041174, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 4ms;
UPDATE OR IGNORE rt0 SET c0=0x34909ec6; -- 0ms;
UPDATE rt0 SET c0=NULL WHERE (((rt0.c2, rt0.c1, x'f9fd')) BETWEEN ((rt0.c1 COLLATE RTRIM, TRIM(DISTINCT rt0.c2), (rt0.c0 IN ()))) AND ((((rt0.c1) IS TRUE), ((rt0.c1) IS TRUE), rt0.c1))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.596120655339314); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA main.automatic_index = true; -- 0ms;
UPDATE OR FAIL vt0 SET c0=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 16ms;
ANALYZE vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0, c0)=(x'0188', x'', 0.03679884476204853) WHERE CASE WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 ELSE vt0.c0 END; -- 0ms;
UPDATE vt0 SET c0=x''; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT '1618547180' FROM rt0 LIMIT 293328429 OFFSET -1816180492; -- 0ms;
REINDEX; -- 4ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c0)=('127104448') WHERE vt0.c0; -- 0ms;
REINDEX; -- 0ms;
ANALYZE v0; -- 0ms;
UPDATE rt0 SET (c0, c1)=('', NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 4ms;
END; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 953329226); -- 14ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '4008'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.18181542678540674) WHERE CASE ((vt0.c0) NOTNULL)  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN NULL ELSE vt0.c0 COLLATE BINARY END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=('H)', NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19315'); -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1816180492'), (x'ab91'), (0.05680416458920834); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(0.568982823754285, x'add29598', x'') WHERE LIKELY(x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3368'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1602364813); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=1.27104448E8 WHERE (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN (rt0.c0)))) AND ((CAST(rt0.c0 AS NUMERIC)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '39804'); -- 4ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DROP VIEW v0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.8066879416160976); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1051761973);\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c2) VALUES (x'', '⥞mMm&Vﱾ', 0.884236124723772); -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((x'bbac' COLLATE RTRIM, (rt0.c0 IN ()), CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)) AND ((CASE rt0.c2  WHEN 477291468 THEN rt0.c2 ELSE rt0.c1 END, COUNT(*), ((('_4櫓y3P!oY'))<=((rt0.c0)))))), ((+ (rt0.c1)) IN ()), ((((rt0.c2 IN ()), CAST(rt0.c2 AS REAL), ((rt0.c2)-(rt0.c2))))>((((rt0.c1)>>(vt0.c0)), (rt0.c0 IN ()), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) FROM vt0, rt0 WHERE (((((CAST(0X1c72e3cc AS INTEGER))AND((0.16136603809712058 IN (0.7810839268071327)))))AND(CAST(0.9754102533577648 AS BLOB)))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)&(NULL))) BETWEEN ((rt0.c2 IN ())) AND (rt0.c0 COLLATE BINARY)) FROM vt0, rt0 ORDER BY load_extension(((rt0.c2)+(rt0.c2)))  NULLS FIRST;SELECT DISTINCT ((rt0.c1) BETWEEN (((rt0.c0) ISNULL)) AND (-1977763955 COLLATE RTRIM)) FROM rt0 WHERE (((((CASE WHEN -1341605132 THEN 0x745f6ebe ELSE '*3u櫓LF' END)AND(x'')))OR(CAST('Yp' AS INTEGER)))); -- 0ms;
SELECT DISTINCT AVG(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0))) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (+ (rt0.c2 COLLATE NOCASE)) FROM vt0, rt0; -- 0ms;
SELECT ALL COUNT(*) OVER ( ORDER BY ((NOT (rt0.c1)) IN ()) ASC  NULLS FIRST, (((((((((('193056907') NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(CAST(0xffffffffafe8165f AS INTEGER))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c2)LIKE(rt0.c1)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST), (+ (0.020740731969580484)), LAG(((((((((IFNULL(vt0.c0, vt0.c0))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)GLOB(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))), vt0.c0, CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN MIN(vt0.c0, x'', vt0.c0, vt0.c0) END) OVER () FROM vt0;SELECT ALL (NOT (vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT (+ (rt0.c1)) FROM vt0, rt0; -- 0ms;
SELECT ((CASE WHEN 0.7521488544007788 THEN rt0.c2 ELSE 0.10892497869398021 END) IS TRUE) FROM vt0, rt0 WHERE ((((NOT (0Xffffffff84401212)))<((('-1816180492')+(NULL))))) LIMIT 417240161; -- 0ms;
SELECT ALL ((((rt0.c0) IS FALSE)) NOT BETWEEN (((x'')GLOB(rt0.c0))) AND ((~ (rt0.c2)))) FROM vt0, rt0 WHERE ((NOT ((-2076175854 IN (x''))))); -- 2ms;
SELECT ALL NULLIF(rt0.c1, IFNULL(DISTINCT rt0.c2, rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT (((((- (rt0.c0)))AND((vt0.c0 IN ()))))OR(((vt0.c0)>(rt0.c1)))) FROM vt0;SELECT DISTINCT (((rt0.c1 IN ()))IS NOT(vt0.c0 COLLATE BINARY)) FROM rt0, vt0; -- 0ms;
SELECT NULL, (((((rt0.c0)*(rt0.c2))))=((((((((((rt0.c2)AND(NULL)))OR(vt0.c0)))OR(x'38f0')))OR(rt0.c0))))), CASE WHEN CAST(rt0.c0 AS REAL) THEN MAX(rt0.c0) END FROM rt0, vt0 WHERE (4.17240161E8); -- 0ms;
SELECT COUNT(rt0.c2) OVER () FROM rt0, vt0 WHERE (((((((x'58bc')) NOT BETWEEN ((NULL)) AND ((NULL)))))=(((+ (0.9746687979819362)))))) ORDER BY JULIANDAY(((vt0.c0)<(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), ((vt0.c0) IS FALSE))  NULLS FIRST; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS INTEGER))IS NOT(((rt0.c0)<<(rt0.c1)))) FROM vt0;SELECT ALL (((rt0.c2)) NOT BETWEEN (((rt0.c1 IN (vt0.c0)))) AND ((rt0.c0))) FROM vt0, rt0 WHERE (0X3c4cac03); -- 0ms;
SELECT ALL ((((rt0.c0) NOTNULL))&(CAST(rt0.c1 AS TEXT))), CASE WHEN rt0.c1 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END ELSE (NOT (rt0.c2)) END, (CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE x'' END IN ()) FROM rt0; -- 0ms;
SELECT 0.11140093164569775 FROM rt0, vt0; -- 0ms;
SELECT ALL CAST(((((rt0.c1)OR(1620841553)))AND(rt0.c2)) AS INTEGER) FROM rt0 CROSS JOIN vt0 ON ((vt0.c0) NOTNULL) WHERE (((LOWER(x''))>=((('1785752851')<<('1618547180'))))); -- 0ms;
SELECT DISTINCT ABS(CAST(rt0.c1 AS REAL)) FROM vt0;SELECT DISTINCT SUM((NOT (vt0.c0))) FROM rt0, vt0 WHERE ((((((((((0.22679195539324293 IN ()))AND(((NULL)*(x'')))))OR(NULL COLLATE RTRIM)))AND(CAST(0.840050463469297 AS TEXT))))OR(CASE NULL  WHEN 0xffffffffb5f230fc THEN x'' WHEN 0.42491835185415716 THEN '	d*&kx\rxO' WHEN '⥞mMm&Vﱾ' THEN NULL ELSE 8.81893062E8 END))) ORDER BY LOWER(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0))) LIMIT -437112780 OFFSET -981166549; -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN '-1774687533' THEN rt0.c1 END)+('760588874')) FROM vt0, rt0 WHERE ((('-1898893772')/(((0.18181542678540674) NOT BETWEEN (NULL) AND (x''))))) ORDER BY vt0.c0  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt0.c1) NOTNULL)) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c1)OR(rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE highlight(rt0.c1, rt0.c2, vt0.c0, vt0.c0)  WHEN (((rt0.c2))<>((0.8136413869344915))) THEN ((vt0.c0) NOTNULL) WHEN -1743131137 THEN (((vt0.c0))<=((NULL))) WHEN ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(vt0.c0)) THEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END ELSE ((rt0.c2) ISNULL) END FROM rt0, vt0 ORDER BY ((CAST(rt0.c1 AS BLOB))LIKE(CASE WHEN rt0.c0 THEN NULL WHEN vt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) ASC, CAST(((vt0.c0)LIKE(rt0.c2)) AS TEXT) DESC  NULLS FIRST;SELECT DISTINCT ((rt0.c0) IS FALSE), CAST(CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END AS BLOB), (+ (LIKE(rt0.c0, rt0.c2))) FROM vt0 WHERE (((((((((((0.9901523819857541) IS FALSE))AND((NOT (NULL)))))AND((('') IS TRUE))))OR(LIKELIHOOD(DISTINCT x'', 0.4900831435000309))))OR(((x'4d8d')>>(x'')))));SELECT ALL ((293328429)==(((x'f42a') NOT BETWEEN (rt0.c2) AND (vt0.c0)))) FROM vt0, rt0 ORDER BY (NOT (CASE WHEN x'' THEN 0.8066879416160976 END)) LIMIT 187861725; -- 0ms;
SELECT ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<((CASE WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))) FROM vt0 WHERE (((((((x'4304260d')AND(x'')))OR(x'aaeb'))) ISNULL)) GROUP BY (((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))=((((0X307b7c18) BETWEEN (rt0.c2) AND (rt0.c1)))));SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE (json_type(('' IN ()))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt0 WHERE ((CASE WHEN '' THEN -1.343744417E9 WHEN x'' THEN x'' WHEN 0.047281201598094236 THEN x'' ELSE x'' END IN ())); -- 0ms;
SELECT SUM(((((0.766261305414585)OR(vt0.c0)))AND(rt0.c0))) OVER ( PARTITION BY ((vt0.c0)<(rt0.c1)) COLLATE RTRIM, CASE WHEN ((vt0.c0) NOTNULL) THEN UNLIKELY(vt0.c0) END), CASE WHEN CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE '-750388098' END THEN ((vt0.c0) NOTNULL) WHEN ((rt0.c2)GLOB(rt0.c1)) THEN CASE x'8865'  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 END WHEN TYPEOF(rt0.c2) THEN (((rt0.c2))>((rt0.c0))) END, ((((((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))AND(NULL)))AND((((rt0.c2))<((vt0.c0))))))OR(((vt0.c0) ISNULL))))OR(CASE WHEN rt0.c2 THEN x'' END)) FROM vt0, rt0 WHERE (((x'') IS FALSE)); -- 0ms;
SELECT DISTINCT ((rt0.c2)+(SQLITE_SOURCE_ID())) FROM vt0, rt0 WHERE ((((- ('o?')))-((((-546365509))<((NULL)))))) ORDER BY ((((rt0.c0) ISNULL)) ISNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL) FROM rt0;SELECT COUNT(*) OVER (), (((vt0.c0)<>(rt0.c1)) IN ()), (((CAST(rt0.c0 AS NUMERIC), ((rt0.c1) ISNULL), rt0.c2, ((rt0.c1)%(rt0.c0)), ((((((((rt0.c0)AND(rt0.c1)))AND(0.07101696922195355)))OR(0.6010990976871132)))AND(rt0.c2))))==((AVG(rt0.c1), vt0.c0 COLLATE BINARY, CAST(rt0.c1 AS NUMERIC), (vt0.c0 IN ()), (('\B') NOT BETWEEN (vt0.c0) AND (rt0.c2))))), (rt0.c2 COLLATE RTRIM IN ()), ((((rt0.c1)<<(rt0.c2)))IS(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) FROM vt0 ORDER BY CAST((rt0.c1 IN ()) AS TEXT)  NULLS FIRST, (rt0.c2 IN ()) ASC  NULLS LAST LIMIT 154680880 OFFSET -603977805;SELECT x'', UPPER(CAST(vt0.c0 AS REAL)), NTH_VALUE((CAST(rt0.c2 AS INTEGER) IN (vt0.c0)), (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) IN ((vt0.c0 IN (rt0.c2))))) OVER () FROM vt0, rt0;SELECT DISTINCT CAST(rt0.c0 AS REAL) FROM vt0 LIMIT 2011624929;SELECT DISTINCT CASE 't2!v'  WHEN ((rt0.c1) ISNULL) THEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END WHEN ((rt0.c2) NOT NULL) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END WHEN rt0.c2 THEN ((vt0.c0) ISNULL) WHEN CASE WHEN -968151993 THEN rt0.c1 END THEN json_object(vt0.c0, rt0.c2) WHEN (((vt0.c0, rt0.c2, rt0.c2))<>((rt0.c2, rt0.c1, rt0.c1))) THEN IFNULL(rt0.c1, vt0.c0) ELSE COUNT(rt0.c1) END, COALESCE(SUM(rt0.c1), rt0.c0 COLLATE RTRIM), ((GROUP_CONCAT(rt0.c0))*('1e500')) FROM vt0 WHERE (((((NULL)OR(x'11bc')))AND((NOT (2.93328429E8)))));SELECT DISTINCT rt0.c2 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c2 AS TEXT)) OVER () FROM rt0, vt0 WHERE (((((0.06833337596533973) BETWEEN ('0.766261305414585') AND (NULL))) NOT BETWEEN (((('*3U櫓LF', 0Xffffffffee884e45, '-981166549'))>(('?Y', x'', 0.047281201598094236)))) AND (((x'a813cbc7')|(0.4656319036083594))))); -- 0ms;
SELECT (NOT (vt0.c0)) COLLATE RTRIM FROM rt0, vt0 WHERE ((CASE WHEN x'' THEN 0.10581881453094877 ELSE 'eL#,<㆛D' END IN ())) ORDER BY (((rt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))) AND ((((rt0.c2)-(rt0.c0))))) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((- (vt0.c0)))>>(GROUP_CONCAT(rt0.c2))), ((((((0.32384555125782144) ISNULL))OR((rt0.c2 IN ()))))AND((rt0.c0 IN ()))), (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ((((vt0.c0))<=((rt0.c1))), vt0.c0 COLLATE BINARY)) FROM vt0, rt0 WHERE (((CAST(NULL AS NUMERIC)) BETWEEN ('᧿(\mW\n' COLLATE NOCASE) AND ((('p|') BETWEEN (0.9400778759433974) AND (NULL))))) LIMIT 68193192; -- 0ms;
SELECT (((((vt0.c0))>((rt0.c0)))) ISNULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT vt0.c0, (~ (((vt0.c0) ISNULL))), CAST(x'd49d' COLLATE BINARY AS BLOB) FROM rt0;SELECT DISTINCT CAST(((rt0.c0) ISNULL) AS NUMERIC), CAST(((vt0.c0)>=(rt0.c2)) AS TEXT), CAST(CAST(vt0.c0 AS REAL) AS INTEGER) FROM rt0, vt0 WHERE ((((((((x'c0e3')AND(NULL)))OR(NULL)), '357301097', ((NULL) BETWEEN (NULL) AND (x''))))<((((0.047281201598094236) NOT BETWEEN (1.706766747E9) AND (0.6910671947259327)), NULL, HEX(x''))))); -- 0ms;
SELECT ALL (~ (rt0.c0)) COLLATE RTRIM, ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))>>(((rt0.c0)%(rt0.c0)))), rt0.c1 FROM rt0, vt0 WHERE (CASE WHEN ((('-282137133', x'4a86', NULL, NULL, -380522169)) NOT BETWEEN ((x'', '	!', '2011624929', 'Y7x(Ek8', x'')) AND ((0.8801391517143177, 0.3957271619187862, NULL, '<x2IC\rJ짯f', '0.568982823754285'))) THEN HEX(x'') ELSE (('1805184889')-('-1242418948')) END) LIMIT -1341605132; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c2)GLOB(NULL)))), TOTAL((NOT (rt0.c0))) COLLATE NOCASE, ((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)))OR(vt0.c0))) ISNULL) FROM vt0 WHERE ((('eꍛ^渉' COLLATE NOCASE) BETWEEN (((x'')|(''))) AND (((0.7871268950118164) NOT BETWEEN (x'') AND (NULL)))));SELECT DISTINCT x'4bcc' FROM rt0, vt0 WHERE (NULL) GROUP BY SQLITE_SOURCE_ID(), CASE (((rt0.c2, vt0.c0, rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, 0.32384555125782144, rt0.c2, vt0.c0, rt0.c2)))  WHEN (rt0.c2 IN (rt0.c1)) THEN ((rt0.c0)&(rt0.c0)) END, (((rt0.c2 IN ())) BETWEEN (((((rt0.c2)OR('632960602')))OR(rt0.c1))) AND (load_extension(vt0.c0, rt0.c0))), ABS(DISTINCT rt0.c2), (((rt0.c0 IN (rt0.c2)))GLOB(((rt0.c1)>=(rt0.c2)))); -- 1ms;
SELECT DISTINCT ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()) FROM rt0 WHERE ((((x'' IN (0.3667515001460814)))GLOB(((NULL)AND('-122369874'))))); -- 0ms;
SELECT DISTINCT 0.568982823754285 FROM vt0, rt0 WHERE (((ABS('239126078')) NOT BETWEEN (((NULL)GLOB(x'20e1'))) AND (CAST(x'' AS TEXT)))) UNION ALL SELECT DISTINCT ((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END)OR(((rt0.c2)&(vt0.c0)))))AND(NULL COLLATE RTRIM)) FROM vt0, rt0 WHERE (((CAST(0.49870963643075406 AS INTEGER)) ISNULL)); -- 0ms;
SELECT DISTINCT (((((((rt0.c0)) NOT BETWEEN (('-603977805')) AND ((rt0.c0))))AND(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN 0.08155356417224557 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))), AVG(COUNT(*)), ((((((rt0.c1)OR(rt0.c2)))AND(vt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((rt0.c2)>=(vt0.c0)))) FROM vt0;SELECT DISTINCT ((ROUND(rt0.c0, rt0.c2))IS((x'' IN (rt0.c2)))) FROM vt0, rt0 WHERE ((((('Xt') NOT NULL)) NOT BETWEEN (('' IN (x'', '-750388098'))) AND (CASE -1551956951  WHEN '' THEN '733699645' END))); -- 0ms;
SELECT (((CAST('813399064' AS BLOB)))>=((CASE WHEN rt0.c0 THEN NULL END))) FROM rt0, vt0 WHERE (((CAST(NULL AS TEXT)) NOTNULL)); -- 0ms;
SELECT CASE rt0.c2  WHEN NULL THEN rt0.c2 END COLLATE NOCASE FROM vt0, rt0 WHERE ((((NULL IN (0X6bd6ef1a)))-(((x'') BETWEEN (0.3849546085567712) AND ('1809248026'))))); -- 0ms;
SELECT NULL, (((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) BETWEEN (((0Xb328add)>(rt0.c1))) AND ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))), ((((rt0.c0) IS FALSE))<<(((rt0.c1) NOT BETWEEN (0.11140093164569775) AND (vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT UPPER(((rt0.c0)/('5'))) FROM vt0, rt0 WHERE ((((((NULL)) NOT BETWEEN ((985601000)) AND ((x''))))!=(((540094587) BETWEEN ('316198062') AND (x''))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)OR('-1977763955')))AND(rt0.c2)))<<((vt0.c0 IN (rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT ((rt0.c0) IS FALSE) COLLATE RTRIM, SUM(TYPEOF(vt0.c0)), ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)!=(rt0.c0)) FROM rt0 NOT INDEXED WHERE ((((((NULL) NOT BETWEEN (0.7957177015778313) AND ('1096255293'))))=(((NOT (NULL))))));SELECT ALL ((((rt0.c1) NOT NULL))OR(CAST(rt0.c0 AS REAL))), ((CASE rt0.c2  WHEN 'D!R' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (rt0.c0) AND (GROUP_CONCAT(vt0.c0))), '-122369874', CASE WHEN 0.28321750931959355 THEN (~ (rt0.c1)) END, CASE MIN(vt0.c0)  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((vt0.c0)&(vt0.c0)) ELSE SQLITE_VERSION() END FROM rt0 WHERE ((- (((((((((0Xffffffffafe8165f)AND('We^')))OR(154680880)))OR(x'2b1f559a')))AND(x'8487'))))) LIMIT -1549612561;SELECT ALL rt0.c1 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM, CAST(((rt0.c1)>>(rt0.c1)) AS TEXT), rt0.c0 COLLATE BINARY FROM rt0, vt0 WHERE ((- (CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL))*(x'')) FROM rt0 WHERE (((('-723721217')) NOT BETWEEN ((x'' COLLATE RTRIM)) AND (((0.4902726461724525 IN ())))));SELECT DISTINCT ((((((0X117bd62d)OR(vt0.c0)))AND(rt0.c1)))OR(((rt0.c2)+(vt0.c0)))) FROM vt0 GROUP BY vt0.c0;SELECT DISTINCT AVG(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0))) OVER () FROM rt0; -- 0ms;
SELECT ALL TOTAL(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) COLLATE RTRIM, ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c0)), SUM((+ (rt0.c0))) FROM rt0;SELECT DISTINCT ((((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE FROM rt0, vt0 WHERE (RTRIM(CHAR(NULL))); -- 0ms;
SELECT ALL ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2))) ISNULL) FROM vt0, rt0 WHERE ((+ (((0x65ed3c17) NOT BETWEEN (-2102669968) AND (-741500566))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)-(rt0.c2))) BETWEEN (TOTAL(rt0.c0)) AND (CAST(rt0.c2 AS BLOB))) FROM vt0;SELECT DISTINCT CAST(CASE '-750388098'  WHEN '	!' THEN rt0.c0 END AS REAL) FROM rt0; -- 0ms;
SELECT ALL CAST(((rt0.c1)>>(rt0.c0)) AS TEXT) FROM rt0, vt0; -- 0ms;
SELECT (((NULL))>(((0.8044102381948346 IN ())))), ABS(SUM(vt0.c0)), ((((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND (('-1774687533', rt0.c2, NULL)))))=((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) FROM vt0, rt0 WHERE (((CASE '	!'  WHEN 0.5284700348003487 THEN '.Hp' WHEN 293328429 THEN -260833708 WHEN x'' THEN '莫RX_F 녇o' WHEN '2011624929' THEN x'' WHEN NULL THEN -2.82137133E8 END)%(CAST('' AS TEXT)))); -- 0ms;
SELECT ALL TRIM(((rt0.c1)/(vt0.c0))) FROM rt0, vt0 WHERE ((((('8') NOT BETWEEN (NULL) AND ('0.8136413869344915'))) NOT BETWEEN (CASE NULL  WHEN -1152295056 THEN NULL ELSE NULL END) AND ('366388834'))); -- 0ms;
SELECT rt0.c0 FROM vt0;SELECT LIKELY(load_extension(vt0.c0, rt0.c1)) FROM vt0;SELECT ALL CAST(((rt0.c1) NOT NULL) AS INTEGER) FROM rt0 WHERE (((((NULL) BETWEEN (NULL) AND (x'9b07'))) ISNULL)); -- 0ms;
SELECT DISTINCT (((x'313a' IN (rt0.c2)))IS(((vt0.c0) ISNULL))) FROM rt0;SELECT DISTINCT '*Y' FROM vt0, rt0 WHERE (((json(NULL))IS((~ (0x67fb9ae7))))) LIMIT 1524186718 OFFSET 729101961; -- 0ms;
SELECT DISTINCT ((((((rt0.c1) IS TRUE))AND('193056907' COLLATE RTRIM)))AND(((rt0.c2)IS(rt0.c0)))) FROM rt0, vt0 WHERE (((('0.05680416458920834')) NOT BETWEEN (('286596876' COLLATE NOCASE)) AND (((((((((('6if[F_')AND(0Xffffffffee884e45)))AND(x'')))AND('eL#,<㆛D')))OR(NULL)))))); -- 1ms;
SELECT DISTINCT ((((rt0.c0)>=(vt0.c0)))||(rt0.c2 COLLATE BINARY)), ((((rt0.c0) NOTNULL)) NOT BETWEEN (MIN(rt0.c1)) AND (((vt0.c0)IS NOT(vt0.c0)))), 0.514671850305187 FROM rt0 WHERE ((NOT (NULL)) COLLATE RTRIM);SELECT DISTINCT (((vt0.c0)AND(rt0.c1)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT ALL AVG((((rt0.c0, rt0.c0, rt0.c0))=((NULL, vt0.c0, rt0.c1)))) FROM vt0 WHERE ('-1603020015') GROUP BY ((((rt0.c2) IS FALSE))LIKE(((vt0.c0)-(rt0.c0)))), ABS(DISTINCT ((((((((rt0.c0)AND(vt0.c0)))OR(345467011)))OR(vt0.c0)))OR(rt0.c1))), json_array_length(IFNULL(rt0.c1, rt0.c2), rt0.c2) ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT) ASC  NULLS FIRST;SELECT DISTINCT LEAD((((((rt0.c1)>>(rt0.c2))))>((((((rt0.c2)OR(rt0.c0)))AND(NULL))))), CASE WHEN CAST(rt0.c1 AS BLOB) THEN (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1))) ELSE CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END END, (NOT (((rt0.c1) NOT BETWEEN (0.6488522371042442) AND (rt0.c1))))) OVER () FROM rt0 WHERE (((((x'')IS NOT(x'a975')))&(CAST(x'' AS BLOB)))); -- 0ms;
SELECT DISTINCT ((x'4079')IS NOT(rt0.c1)) FROM vt0, rt0 WHERE (x'') LIMIT 1952411326 OFFSET -1600298463; -- 1ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((+ ('-239851170')))%(2.39126078E8 COLLATE RTRIM))); -- 0ms;
SELECT LIKELY(DISTINCT (+ ('395724044'))), ((('' IN ())) NOTNULL), (NOT (((rt0.c0)GLOB(vt0.c0)))), (~ (NULLIF(rt0.c2, rt0.c1))), 'H)' FROM vt0 GROUP BY (NOT (((rt0.c0) ISNULL)));SELECT DISTINCT (rt0.c1 IN ()) FROM rt0, vt0 WHERE (((((x'')AND(x'')))OR(0xe40c63e)) COLLATE RTRIM) GROUP BY ((ABS(DISTINCT rt0.c1))IS((+ (rt0.c2)))), vt0.c0, CASE WHEN (((rt0.c0))<=((rt0.c2))) THEN ((rt0.c1)/(rt0.c0)) END HAVING -9.68151993E8; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) FROM rt0, vt0 WHERE ('68193192'); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY ((((((rt0.c1))<((rt0.c1))), rt0.c1, (- (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((vt0.c0) IS TRUE)))<=((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, (+ (rt0.c2)), ((rt0.c1)+(vt0.c0)), CASE WHEN rt0.c1 THEN rt0.c1 END, ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))  NULLS LAST) FROM vt0, rt0; -- 0ms;
SELECT (+ (CAST(rt0.c2 AS BLOB))) FROM rt0, vt0; -- 0ms;
SELECT ALL 0.5231118345957048 FROM rt0, vt0; -- 1ms;
SELECT ALL ((CAST(rt0.c2 AS BLOB))<<(CASE WHEN rt0.c0 THEN vt0.c0 ELSE x'' END)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT MAX(1559904107), rt0.c2, (- ((+ (-652613459)))) FROM rt0 WHERE (CAST(IFNULL(68193192, NULL) AS BLOB)) GROUP BY CAST(((vt0.c0)/(rt0.c1)) AS INTEGER);SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))<<(CASE WHEN vt0.c0 THEN rt0.c1 END)), CAST((NOT (rt0.c1)) AS NUMERIC), (rt0.c0 COLLATE RTRIM IN ()), (((((NOT (rt0.c2)))OR(((((((((((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)))))AND(DATETIME(vt0.c0, rt0.c2, rt0.c2))), CAST(CASE WHEN vt0.c0 THEN rt0.c2 END AS INTEGER) FROM rt0, vt0 WHERE (((((('1524186718'))==(('')))) BETWEEN (('J'',R*H0&' IN ())) AND ((~ (0.2810942924084908))))) GROUP BY (((((rt0.c1) IS TRUE), CAST(rt0.c0 AS TEXT), rt0.c1))<((CAST(0.20003753561888094 AS NUMERIC), ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), (rt0.c1 IN ())))), CAST(((rt0.c2)%(rt0.c2)) AS TEXT), ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)%(((((rt0.c2)OR(-539190470)))OR(rt0.c1)))) HAVING ((((ABS(vt0.c0))AND(MAX(rt0.c0))))AND((+ (rt0.c1)))); -- 0ms;
SELECT DISTINCT (((rt0.c1, (~ (vt0.c0)), (rt0.c1 IN ()), ((rt0.c0)<<(vt0.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))>=((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)), CAST(rt0.c0 AS TEXT), (NOT (rt0.c2)), ((rt0.c2)&(0.18181542678540674)), ((rt0.c2)<=(rt0.c0))))), GROUP_CONCAT(((rt0.c1)&(vt0.c0))) OVER ( RANGE BETWEEN rt0.c2 FOLLOWING AND  CURRENT ROW), (((- (rt0.c0))) BETWEEN (((vt0.c0)IS NOT(rt0.c0))) AND (((rt0.c1) BETWEEN ('-1823885451') AND (rt0.c1)))) FROM vt0;SELECT DISTINCT (('-319464987')LIKE(((rt0.c0)-(vt0.c0)))) FROM rt0, vt0 WHERE ('Sl*Э!'); -- 0ms;
SELECT ALL (NOT ((~ (rt0.c0)))) FROM vt0, rt0 WHERE ((((0.32617162095688657)*(0X645df169)) IN ())); -- 0ms;
SELECT ALL rt0.c2, ((TRIM(rt0.c2)) NOTNULL), LEAD(3.57301097E8, ((((vt0.c0) IS TRUE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)), (((- (vt0.c0)))%(vt0.c0 COLLATE NOCASE))) OVER ( ORDER BY (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c2))))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END))  NULLS FIRST) FROM vt0 WHERE (0X77e6f5e1);SELECT DISTINCT ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))|((+ (rt0.c1)))) FROM rt0 LIMIT 127104448;SELECT DISTINCT (NOT (((rt0.c2)=(rt0.c0)))) FROM vt0 GROUP BY 0.007182596127575991 HAVING (CASE WHEN '' THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN ());SELECT (- (((rt0.c0) NOTNULL))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT rt0.c2 COLLATE NOCASE, (((rt0.c1))<=((rt0.c0))), (((rt0.c1))<((rt0.c0))), ((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0))) FROM rt0, vt0 GROUP BY (((NOT (rt0.c0))) NOTNULL); -- 0ms;
SELECT ALL 0.025262373096959556 FROM rt0 ORDER BY ((((((vt0.c0)AND(rt0.c0)))AND(rt0.c0))) NOTNULL) ASC  NULLS FIRST;SELECT ALL ROW_NUMBER() OVER ( GROUPS  CURRENT ROW) FROM rt0 GROUP BY rt0.c2; -- 0ms;
SELECT DISTINCT ((((vt0.c0)>=(vt0.c0))) NOTNULL) FROM rt0;SELECT ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE FROM rt0 WHERE (CAST(((((((((NULL)OR(NULL)))OR(x'')))OR('?e')))AND('316198062')) AS REAL)); -- 1ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN ((((rt0.c2, vt0.c0, vt0.c0))=((rt0.c2, rt0.c2, vt0.c0)))) AND (CAST('286596876' AS TEXT))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c1 AS TEXT)  WHEN ((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)) THEN vt0.c0 END, ((((0Xffffffffb6f80039)AND(((vt0.c0) IS FALSE))))OR(((NULL)%(rt0.c0)))), ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) NOTNULL), 'sB' COLLATE NOCASE, LIKELIHOOD((((rt0.c1))>=((rt0.c0))), 0.9541442237110486) FROM vt0;SELECT (+ ((- ('417240161')))) FROM vt0 WHERE (CAST((- (x'8d01')) AS INTEGER)); -- 0ms;
SELECT DISTINCT NTH_VALUE(NULL, (((+ (rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (rt0.c0))) OVER (), ((INSTR(rt0.c0, rt0.c2)) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (rt0.c0)), (- (((rt0.c0)>=(vt0.c0)))) FROM rt0, vt0 WHERE (((LTRIM(x'c97e'))%(((x'') NOT NULL)))); -- 0ms;
SELECT ALL CASE ((vt0.c0) BETWEEN (rt0.c2) AND (x'2866'))  WHEN ((vt0.c0)<=(vt0.c0)) THEN rt0.c0 COLLATE RTRIM END FROM rt0, vt0 WHERE (((('0.9754102533577648')IS NOT(x'')) IN ())); -- 0ms;
SELECT ALL 537916225 FROM rt0, vt0 WHERE (ABS(x'fb85') COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt0.c2 THEN '\n>' ELSE -601549748 END THEN TOTAL(rt0.c1) ELSE ((vt0.c0)*(rt0.c1)) END, COUNT(rt0.c1) OVER ( PARTITION BY ((rt0.c0) IS FALSE) COLLATE RTRIM, ('D!R' COLLATE RTRIM IN ())), ((((vt0.c0) NOT NULL)) NOT NULL) FROM rt0, vt0; -- 0ms;
SELECT 8.81893062E8, (((+ (rt0.c2)))GLOB(LIKELIHOOD(rt0.c2, 0.7348626358226239))), (((vt0.c0))>=((rt0.c0))) COLLATE RTRIM FROM rt0 WHERE (((((CAST(0.45278171373741427 AS BLOB))OR(((x'') IS TRUE))))AND(((-2.076175854E9) NOT BETWEEN (x'ad23') AND ('1620841553')))));SELECT ALL (+ (((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))) FROM rt0 GROUP BY rt0.c1 HAVING (CAST(0.16203353221667305 AS REAL) IN (((rt0.c0) NOTNULL), ((-1.341605132E9)AND(vt0.c0))));SELECT (((rt0.c1)*(rt0.c1)) IN (GROUP_CONCAT(rt0.c0))), CUME_DIST() OVER ( RANGE BETWEEN ((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) COLLATE RTRIM FOLLOWING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS), LEAD((((x'50f3' COLLATE NOCASE))<((rt0.c0))), ((((rt0.c1))<((rt0.c1))) IN ()), (- (rt0.c1 COLLATE BINARY))) OVER () FROM rt0 WHERE (((COALESCE(NULL, '', NULL, x''))|((0.9584911946383569 IN ())))) LIMIT 1014178774;SELECT ((rt0.c2)GLOB(vt0.c0)) COLLATE BINARY, SUM((~ (rt0.c0))) OVER (), (((rt0.c0, NULL, (((((((('SW譔')OR(rt0.c2)))OR(x'64e5')))OR(rt0.c1)))AND(rt0.c2))))<=((((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)), rt0.c0 COLLATE NOCASE))), rt0.c0, ((((((((((rt0.c1) NOT NULL))AND(((rt0.c0) NOTNULL))))OR((((vt0.c0))!=((rt0.c0))))))AND(((rt0.c2)OR(763245138)))))OR(((NULL)%(rt0.c2)))) FROM vt0 ORDER BY ((-1.774687533E9)>(CAST(rt0.c1 AS INTEGER)));SELECT DISTINCT x'', ((rt0.c2 COLLATE BINARY) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (0.9958985998146056)), vt0.c0 FROM rt0, vt0 ORDER BY vt0.c0 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)) IN ()) FROM rt0, vt0 WHERE ((~ ((('')/(x''))))); -- 0ms;
SELECT DISTINCT (x'67f1' IN ()) FROM vt0, rt0 WHERE ((('-768186953' COLLATE NOCASE)+(CASE '-419418617'  WHEN 0.5877224764068245 THEN '' ELSE NULL END))) GROUP BY ((((((('{O'))=((rt0.c0))))OR(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c1 AS REAL))) HAVING (((((rt0.c1) IS FALSE), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), 0.6163226036673152))<>((((rt0.c2)<(rt0.c1)), COUNT(rt0.c1), ((rt0.c0) IS FALSE)))) ORDER BY ((((0.4768158265636887 IN ())))>((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)))  NULLS FIRST; -- 1ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, rt0 WHERE (((((NULL)<(NULL))) NOT BETWEEN (((0.045142060921531835)/(''))) AND (((((0.20003753561888094)AND(1315298042)))OR(x'def6'))))); -- 0ms;
SELECT DISTINCT CAST(SUM(rt0.c1) AS NUMERIC), HEX(((rt0.c2)IS(rt0.c2))), ((CAST(rt0.c2 AS NUMERIC))>=(x'')) FROM vt0, rt0 ORDER BY (- (rt0.c0)) DESC; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))&((rt0.c0 IN ()))) FROM rt0 GROUP BY CASE CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END  WHEN ((rt0.c0)-(vt0.c0)) THEN CASE 0.8801391517143177  WHEN rt0.c1 THEN rt0.c0 END ELSE ((vt0.c0)/(NULL)) END, (((rt0.c1, CAST(rt0.c1 AS BLOB), ((0.507598085960048) IS FALSE)))>((((vt0.c0)-(rt0.c1)), CAST(rt0.c2 AS REAL), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))), (((+ (rt0.c1))) NOTNULL) HAVING CASE WHEN rt0.c2 THEN CHANGES() END;SELECT DISTINCT '-1225260999' FROM rt0, vt0; -- 0ms;
SELECT ALL ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) COLLATE RTRIM, 0.2810942924084908, x'' FROM vt0;SELECT CAST(LAST_INSERT_ROWID() AS REAL) FROM rt0 WHERE (LENGTH((NOT ('')))); -- 1ms;
SELECT DISTINCT (((rt0.c0) NOTNULL) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT (((((((rt0.c1))<>((rt0.c2))))OR(COUNT(*))))OR((NOT ('{eR')))), (vt0.c0 IN ()), GROUP_CONCAT(rt0.c1 COLLATE NOCASE) FROM rt0, vt0; -- 0ms;
SELECT ALL CASE ((rt0.c1)IS(0.6657544114772542))  WHEN vt0.c0 COLLATE BINARY THEN CAST(rt0.c0 AS TEXT) WHEN ((vt0.c0)*(rt0.c2)) THEN rt0.c2 WHEN (((rt0.c1))>=((vt0.c0))) THEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) ELSE CAST(vt0.c0 AS INTEGER) END FROM vt0 WHERE (((((((x'')AND(0.882011464390999)))OR(-1242418948)))IS(CASE WHEN x'' THEN x'' END)));SELECT ALL ((- (rt0.c1)) IN ()), (((rt0.c1 IN ())) NOT NULL), json_array((NOT (rt0.c2)), 345467011) FROM vt0;SELECT DISTINCT (+ (COUNT(vt0.c0))), (((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)) IN ()), CAST(json_insert(rt0.c2, rt0.c1, rt0.c2, rt0.c0, rt0.c2) AS BLOB) FROM vt0, rt0 WHERE (((IFNULL(DISTINCT '-912327989', 0.766261305414585)) NOT BETWEEN ((((767664670)) BETWEEN (('1282657416')) AND (('365927648')))) AND (((('-2102669968')) NOT BETWEEN ((0.557450898485297)) AND ((0.8184992014119091)))))) GROUP BY CAST(vt0.c0 COLLATE BINARY AS BLOB), (NOT (CASE rt0.c1  WHEN vt0.c0 THEN '365927648' ELSE rt0.c0 END)), CAST(vt0.c0 COLLATE RTRIM AS BLOB);SELECT ALL '1689599259' FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c0))==((rt0.c1))) COLLATE RTRIM FROM rt0, vt0 WHERE (((CASE WHEN NULL THEN x'' ELSE x'f9e8' END) NOT BETWEEN (CAST(x'' AS TEXT)) AND ((- (0X4b2d9ab))))) GROUP BY (NOT ((('')||(rt0.c1)))) HAVING LIKELIHOOD(x'', 0.18476814908204775); -- 0ms;
SELECT DISTINCT LOWER(rt0.c2 COLLATE NOCASE), TRIM(((rt0.c0) NOT NULL)), rt0.c1 FROM vt0, rt0 WHERE (((((((0Xffffffff8e652c52)AND(x'fdd4')))OR(x'')))==(x'4645' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT x'' FROM vt0, rt0; -- 0ms;
SELECT ALL ((((((rt0.c1)IS(vt0.c0)))OR((((vt0.c0))>((vt0.c0))))))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) FROM rt0;SELECT LIKELY((((rt0.c1, '187861725', rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0)))) FROM vt0, rt0 WHERE ((((x'0395')) BETWEEN (((((0.167464059443989)) NOT BETWEEN ((0.34258083078464563)) AND ((-1494702605))))) AND ((((6.8193192E7) NOT BETWEEN ('193991933') AND ('*Y')))))); -- 0ms;
SELECT rt0.c1, (((NOT (rt0.c0))) ISNULL), '-1451074053' FROM vt0 WHERE (LIKELIHOOD(DISTINCT (NOT (2.02457378E9)), 0.5340919559228502));SELECT ALL ((vt0.c0 IN ()) IN ()) FROM rt0 WHERE (((((0.046206603694857185) NOT NULL)) NOT BETWEEN (((0.33181110806281033)&(8.81893062E8))) AND (((x'')+('eb'))))); -- 0ms;
SELECT ALL ((((rt0.c0) NOT BETWEEN ('') AND (vt0.c0))) IS FALSE) FROM vt0;SELECT COALESCE(DISTINCT rt0.c2 COLLATE RTRIM, rt0.c2 COLLATE NOCASE), COUNT(*) OVER (), ((rt0.c2) IS FALSE) FROM vt0, rt0 ORDER BY (- (((rt0.c1) NOTNULL))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ (LOWER(vt0.c0))) FROM rt0 WHERE (CASE WHEN ((NULL)GLOB(NULL)) THEN (('*') BETWEEN ('aS') AND (-2.102669968E9)) END);SELECT ALL rt0.c2 FROM rt0, vt0 WHERE (((((NULL)IS(0x4b2d9ab)))!=((x'' IN (-1549612561, -4.19418617E8))))); -- 0ms;
SELECT DISTINCT CAST((~ (rt0.c2)) AS BLOB), RANK() OVER (), (((rt0.c1)-(rt0.c0)) IN (CAST(rt0.c0 AS BLOB), AVG(rt0.c0))) FROM vt0, rt0 GROUP BY (((- (rt0.c0)))/(x'')); -- 0ms;
SELECT DISTINCT TOTAL((((rt0.c0, rt0.c1, rt0.c2))<>((vt0.c0, vt0.c0, vt0.c0)))) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0, rt0 WHERE (((CAST(-1507210533 AS REAL)) IS FALSE)) LIMIT 479451571 OFFSET -680604782; -- 0ms;
SELECT (+ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) FROM vt0 WHERE (((((((((0.7191510783850905)OR('')))OR(NULL)))AND(((x'')/(x'')))))AND(((NULL)+(NULL)))));SELECT ALL (((~ (vt0.c0))) BETWEEN ('362725806') AND (((((vt0.c0)AND(NULL)))AND(rt0.c2)))), ((((rt0.c0)<>(-405311713)))GLOB(0Xffffffffbef8875d)), CUME_DIST() OVER () FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT '1683878249', 0.5121379307911801)) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((rt0.c0)) BETWEEN ((0.38954109444628016)) AND ((vt0.c0)))) ISNULL) FROM vt0, rt0 WHERE ((((0.31475987440556996, NULL, '0*U*'))<=((0.38953980182298886, NULL, '1706766747'))) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (CAST('' AS INTEGER) COLLATE RTRIM); -- 0ms;
SELECT NULLIF(rt0.c2, ((rt0.c2) NOT NULL)) FROM vt0;SELECT DISTINCT ((((vt0.c0)LIKE(rt0.c1))) IS TRUE), (((((('')AND(rt0.c0)))AND(vt0.c0))) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (AVG(rt0.c2))), CAST(((vt0.c0) NOT NULL) AS REAL) FROM rt0, vt0 WHERE (0X3c7323d6); -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt0, rt0 INTERSECT SELECT ((TIME(rt0.c0, rt0.c0, rt0.c1)) IS TRUE) FROM vt0;SELECT DISTINCT '881893062' FROM rt0 WHERE (((x'') NOT BETWEEN (0.28321750931959355) AND (x'')) COLLATE BINARY) ORDER BY rt0.c1; -- 0ms;
SELECT ((((((rt0.c0)OR(rt0.c2)))AND(((rt0.c2)=(rt0.c0)))))AND(((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))), ((GLOB(rt0.c1, rt0.c2)) BETWEEN ('68193192') AND ((~ (rt0.c1)))), x'cbc9' FROM vt0 WHERE (((0.4050757342973581 COLLATE NOCASE) ISNULL));SELECT DISTINCT 'Tp4gy', COALESCE((rt0.c2 IN ()), CASE rt0.c1  WHEN rt0.c1 THEN '-1603020015' END), CASE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END  WHEN (NOT (x'')) THEN CASE rt0.c1  WHEN rt0.c2 THEN NULL ELSE rt0.c0 END END FROM rt0 WHERE ((((UPPER('907549779'), (+ (NULL)), ((x'')-(x''))))!=((((NULL) BETWEEN ('sl*э!') AND ('-1540779572')), CASE WHEN x'' THEN NULL ELSE 0.4259306318929569 END, ('883849531' IN (NULL))))));SELECT DISTINCT COUNT(LOWER('')) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((INSTR('F8', rt0.c0), ((vt0.c0) IS TRUE), ((rt0.c2)|(rt0.c1)))) AND ((CASE 'oHc'  WHEN rt0.c0 THEN rt0.c2 END, '-2136554215', ((rt0.c1)OR(rt0.c1))))) FROM rt0 WHERE (((((('', NULL, '')) NOT BETWEEN ((x'2ce2', 0.26290737830437205, 0.11633731560374572)) AND ((x'0df0', x'9a75', 0.5083732914634067)))) NOT BETWEEN (CASE 0X412d82ea  WHEN 0.858079289574631 THEN 0.9779004042807472 END) AND (((NULL) NOT BETWEEN (0.5093869925612029) AND (-1816180492)))));SELECT DISTINCT CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS INTEGER), ((((((vt0.c0)AND(rt0.c1)))AND(rt0.c2))) BETWEEN (SUM(rt0.c1)) AND (((((((((rt0.c1)OR(rt0.c0)))AND(NULL)))OR(vt0.c0)))AND(x'')))), (+ ((((rt0.c1))<((rt0.c1))))) FROM rt0, vt0 WHERE (((((x'')OR(CAST(NULL AS INTEGER))))AND(((((x'')OR('366388834')))OR(0.3326828233303406))))); -- 0ms;
SELECT ALL CAST(3.16198062E8 AS BLOB), CAST(TRIM(DISTINCT rt0.c2, 1.03378441E8) AS NUMERIC), ((((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)))-(((rt0.c2) BETWEEN ('') AND (rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (- (-260833708)) FROM rt0, vt0 WHERE (0.5001910756742175); -- 0ms;
SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (0.352669034471472); -- 0ms;
SELECT ALL (NOT (NULL)), AVG('-2017733823') OVER (), load_extension((vt0.c0 IN ())) FROM vt0 WHERE ((- ((- ('_4櫓y3p!oy'))))); -- 0ms;
SELECT DISTINCT ((rt0.c0)||(TYPEOF(DISTINCT rt0.c2))) FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c0))<((rt0.c0)))) ISNULL), ((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))<=(vt0.c0)), rt0.c2 FROM rt0, vt0 WHERE (((((x'')!=(x'')))>(LIKELIHOOD(DISTINCT 0.16136603809712058, 0.16923364211745606)))); -- 0ms;
SELECT ALL ((((((x''))<>((NULL))), (~ (rt0.c1)), ((rt0.c1) NOTNULL)))<((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)), COUNT('187861725'), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) FROM vt0 WHERE ((((+ ('1e500')))IS NOT((((x'fe52', NULL, 0.6286202519993705)) NOT BETWEEN ((-1152295056, 'hP,o&''as', x'')) AND ((0.650057774656532, 0.03679884476204853, NULL))))));SELECT (((('D!R')||(rt0.c1))) IS TRUE), SUM((NOT (rt0.c0))) FILTER(WHERE ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE BINARY))) OVER (), CASE ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))  WHEN ((rt0.c2)|(rt0.c2)) THEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN rt0.c2 COLLATE RTRIM THEN ((vt0.c0)GLOB(rt0.c2)) WHEN CHANGES() THEN NULLIF(rt0.c0, rt0.c1) WHEN ((vt0.c0)>=(rt0.c1)) THEN ((rt0.c0) NOT NULL) END FROM rt0, vt0 WHERE ((((((NULL))>=(('-49824532'))))|((+ (NULL))))); -- 1ms;
SELECT ALL (((((((rt0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c1, vt0.c0, rt0.c1))<((x'147e', rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c1, ''))))AND(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0)))))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))) FROM rt0, vt0 NOT INDEXED WHERE (((json_array_length(NULL)) BETWEEN ((- (x''))) AND (((('^S\rn0诌ꩊ䮦')) BETWEEN ((x'361b')) AND (('686521551')))))) ORDER BY rt0.c0 ASC  NULLS LAST; -- 0ms;
SELECT ALL ((((rt0.c0)-(rt0.c2))) IS FALSE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)%(rt0.c2)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN '1809248026' END) FROM rt0 WHERE (((((x'12c8')OR(NULL)))>((~ ('0.596120655339314'))))) ORDER BY NULLIF(((vt0.c0)|(rt0.c2)), '1929534764')  NULLS FIRST, ((rt0.c2)<(((rt0.c0) NOT NULL))) LIMIT -260474387;SELECT MAX(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END) FROM vt0, rt0 WHERE (((((NULL)IS(0.7752229226276722)))>=((+ (-1204056437))))) LIMIT -1727079156; -- 0ms;
SELECT ALL CAST((+ (NULL)) AS BLOB) FROM rt0 WHERE (CAST(CASE WHEN NULL THEN 0.1937011095234351 WHEN '' THEN 0.8115470626785127 WHEN NULL THEN 0.39704832745657603 ELSE '-1090468581' END AS BLOB)); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c2)) IS FALSE) FROM vt0 LIMIT 967510061;SELECT DISTINCT ((vt0.c0) NOTNULL), COUNT(((NULL)*(rt0.c1))) OVER ( ROWS BETWEEN ABS(DISTINCT rt0.c0 COLLATE BINARY) PRECEDING AND ((((rt0.c2) IS TRUE))>=(((rt0.c2)IS NOT(rt0.c1)))) PRECEDING EXCLUDE TIES), TOTAL(CAST(rt0.c1 AS TEXT)) FROM vt0, rt0;SELECT DISTINCT ((((((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c1)))OR(NULL)))OR((rt0.c0 IN ()))))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0 WHERE ((((('') NOT NULL)) BETWEEN (((0.1372710252452246) IS TRUE)) AND ((NOT (4.77291468E8)))));SELECT DISTINCT CASE WHEN COALESCE(vt0.c0, rt0.c0) THEN ((rt0.c2) IS TRUE) END FROM vt0;SELECT ALL TOTAL(x'd914') OVER () FROM vt0, rt0 WHERE ((((('112553455' COLLATE RTRIM)AND((((1097478415)) NOT BETWEEN (('277053064')) AND ((NULL))))))OR((- (0.34258083078464563))))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 THEN ((rt0.c1) IS FALSE) WHEN (~ (rt0.c1)) THEN ((rt0.c2) IS FALSE) WHEN ((rt0.c1) NOT NULL) THEN ((vt0.c0) ISNULL) ELSE (rt0.c1 IN (rt0.c1)) END FROM rt0;SELECT DISTINCT (+ (CASE WHEN rt0.c2 THEN rt0.c1 END)) FROM vt0;SELECT ALL ((x'8b26') BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((rt0.c0 IN (rt0.c1)))), (- (json_object(rt0.c1, NULL))), ((COUNT(rt0.c0)) NOT BETWEEN (((rt0.c0)<=(vt0.c0))) AND (((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((x'')OR(rt0.c1)))IS NOT(UPPER(DISTINCT rt0.c2))), CASE WHEN HEX(rt0.c1) THEN ((rt0.c2)<<(NULL)) ELSE rt0.c0 END FROM vt0;SELECT DISTINCT ('<x2IC\rJ짯f' IN ()), ((rt0.c1 COLLATE RTRIM)*(JULIANDAY(rt0.c0, rt0.c1, NULL))), SUM(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END) FROM vt0, rt0; -- 0ms;
SELECT x'' FROM rt0, vt0 WHERE (CASE WHEN (('6,gVx')IS(x'')) THEN (((('-961563203')OR(0Xffffffff93bf48f4)))AND(0x50917178)) ELSE ((((NULL)OR(x'')))AND(0.6657544114772542)) END) GROUP BY '1680174580'; -- 0ms;
SELECT DISTINCT ((((NOT (rt0.c2))))>=((rt0.c0 COLLATE BINARY))) FROM rt0 WHERE (CAST((('-1738628443') NOT BETWEEN ('+e') AND ('0.5877224764068245')) AS BLOB)); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, rt0 WHERE (((CAST(NULL AS REAL)) NOT BETWEEN (INSTR(0x2f7ceff0, '-1232357881')) AND (json_extract(x'', NULL, '1)aWC', '-929384495')))) ORDER BY (((((rt0.c0)!=(rt0.c2))))>=((((((((((0.047281201598094236)AND(rt0.c2)))OR(vt0.c0)))OR(x'e8c0af66')))AND(rt0.c1)))))  NULLS LAST;SELECT DISTINCT ((((((((((rt0.c2)%(vt0.c0)))OR(x'a3cb')))OR(rt0.c1)))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)))AND(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(x'9f9e')))) FROM rt0 WHERE ((('0.0' IN ()) IN (json_object('881893062', '', 0.22640021932294363, '540094587'))));SELECT rt0.c1 FROM rt0, vt0; -- 0ms;
SELECT (- (CAST(rt0.c2 AS BLOB))) FROM rt0, vt0; -- 0ms;
SELECT ALL ((SUBSTR(rt0.c0, vt0.c0))IS NOT(CAST(vt0.c0 AS NUMERIC))), (((vt0.c0, rt0.c2, rt0.c0)) BETWEEN (((- (rt0.c1)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END, LIKELIHOOD(DISTINCT x'', 0.02558146834554076))) AND (((+ (vt0.c0)), ((rt0.c1)%(-1676899754)), x''))), CAST(((rt0.c1)<=(rt0.c1)) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (~ ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) FROM rt0, vt0 LIMIT -2139038678 OFFSET 1483944103; -- 0ms;
SELECT ALL RANK() OVER () FROM rt0, vt0 WHERE (((x'fc28')LIKE(0.6142804296972854)) COLLATE NOCASE); -- 0ms;
SELECT ALL CASE WHEN CAST('n' AS REAL) THEN CASE WHEN rt0.c1 THEN -1506079331 ELSE -1816180492 END WHEN CAST(rt0.c1 AS NUMERIC) THEN MIN(rt0.c2) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt0.c0) ISNULL) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END, ((CAST(rt0.c2 AS REAL))/((NOT (rt0.c2)))), CAST((NOT (rt0.c2)) AS TEXT), ((NULL) IS TRUE), ((((rt0.c2) NOT NULL))&(0.3445675140988752)) FROM rt0;SELECT ALL CASE ((rt0.c1)!=(rt0.c1))  WHEN (~ (' +e')) THEN rt0.c1 COLLATE BINARY WHEN vt0.c0 COLLATE NOCASE THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END, ((+ (rt0.c0)) IN (((rt0.c2)>>(rt0.c2)), CAST(rt0.c0 AS NUMERIC))), (~ ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0))==((rt0.c0))) IN ()); -- 0ms;
SELECT rt0.c1 COLLATE BINARY, MAX(CAST(vt0.c0 AS TEXT)), (((((((rt0.c0))<>((rt0.c0))))AND(((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))))AND((- ('ous')))) FROM vt0 GROUP BY CAST(((rt0.c2)+(vt0.c0)) AS BLOB) LIMIT 1096255293;SELECT ALL ((COUNT(rt0.c2))<(rt0.c2)) FROM rt0 LIMIT -1451219120; -- 0ms;
SELECT ((((((vt0.c0)LIKE(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))) FROM rt0 LIMIT -1815930154 OFFSET -1729719509;SELECT DISTINCT CAST(x'' AS BLOB), CASE ((vt0.c0)*(rt0.c1))  WHEN json_object(rt0.c0, rt0.c2) THEN rt0.c0 WHEN LENGTH(rt0.c0) THEN rt0.c0 WHEN COUNT(*) THEN ((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)) ELSE (+ (rt0.c0)) END, ((- (rt0.c1)) IN ((~ (rt0.c2)), ((rt0.c2)AND(rt0.c2)))) FROM vt0, rt0;SELECT COUNT(*) OVER () FROM rt0, vt0; -- 1ms;
SELECT ALL ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((((((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c1)))AND(vt0.c0))) AND (vt0.c0)), '-1441924022', rt0.c1, ((((((vt0.c0)>=(vt0.c0)))AND(((rt0.c1)AND(rt0.c2)))))AND(CASE WHEN '簘i' THEN vt0.c0 ELSE NULL END)), ((((rt0.c0)-(rt0.c2)))>(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) FROM vt0;SELECT DISTINCT NULL, x'df26', (MIN(rt0.c2) IN ((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, vt0.c0))))) FROM vt0, rt0 WHERE (((((LTRIM('}-6'))OR((('	BNAP')||(x'')))))OR((((x'', NULL, NULL, '537916225', 'D#'))<=((1549811241, -122369874, NULL, 0.006414628034612235, NULL)))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2)==(rt0.c1)) COLLATE BINARY) FROM vt0, rt0; -- 0ms;
SELECT (((rt0.c1)) NOT BETWEEN (((vt0.c0 IN (rt0.c1)))) AND ((CAST(rt0.c1 AS INTEGER)))) FROM vt0 WHERE (((((((0.5877224764068245)AND('Tu')))AND(0.7498912489360626))) IS TRUE));SELECT DISTINCT CASE WHEN ((rt0.c0)<>(x'da03')) THEN ((-405550015)||(vt0.c0)) END FROM rt0 WHERE ((~ (NULL)));SELECT ALL IFNULL(vt0.c0, (+ (vt0.c0))), GROUP_CONCAT((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) OVER (), ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((vt0.c0)<(rt0.c1))) AND (TRIM('881706696'))) FROM rt0;SELECT DISTINCT '-1527946450' FROM vt0; -- 0ms;
SELECT ALL ((rt0.c2 COLLATE BINARY) BETWEEN ('-1197259691') AND (((rt0.c0) IS FALSE))) FROM vt0, rt0; -- 0ms;
SELECT x'73ac' FROM vt0, rt0 WHERE (((((NULL) BETWEEN ('1367865158') AND (0X24c38128)))+(TYPEOF(NULL)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((((rt0.c1, rt0.c1, rt0.c2))>=((rt0.c2, rt0.c1, x''))))))  NULLS FIRST, ((((((rt0.c2)AND(rt0.c2)))OR(0.791607648933123)))<((((rt0.c0))>((vt0.c0))))), ((LIKELY(DISTINCT rt0.c0))IS(rt0.c0)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (NOT (NULL)), (((((rt0.c2)||(rt0.c0))))>=(('0.6163226036673152'))), ((rt0.c2) ISNULL) COLLATE RTRIM FROM vt0, rt0 WHERE (((986491846 IN ()) IN ())); -- 1ms;
SELECT ALL LEAD(CAST(rt0.c2 AS BLOB), (- (((vt0.c0)*(rt0.c2)))), STRFTIME(((-4.3711278E8) BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c1)<=(rt0.c2)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c1) NOTNULL), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE x'' END)) OVER ( PARTITION BY (((~ (rt0.c1)))|(CAST(rt0.c0 AS BLOB))), ((vt0.c0 COLLATE BINARY)>=(0.793120862472945)) ORDER BY (((NOT (vt0.c0)))=('᧿(\mW\n' COLLATE BINARY)) ASC  NULLS LAST) FROM vt0, rt0; -- 0ms;
SELECT ALL ((((rt0.c2)&(rt0.c0))) BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c0) NOTNULL))), (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) BETWEEN ((x'' IN (rt0.c1))) AND (vt0.c0)), 0.2556325336459996, (NOT (CAST(rt0.c0 AS REAL))), ((((vt0.c0)OR(rt0.c2)))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c0) OVER () FROM rt0, vt0 WHERE ((((('94170978') IS FALSE)) NOT BETWEEN (LOWER(DISTINCT 'y久')) AND (CAST('' AS BLOB)))); -- 0ms;
SELECT ALL ((COUNT(rt0.c1))%(((vt0.c0)>(rt0.c2)))) FROM vt0 GROUP BY 0.4240230540419523 HAVING NULL;SELECT DISTINCT LEAD('ZF', (NULL IN ()), 'J'',R*H0&') OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT load_extension(rt0.c0 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))), x'', CAST(((rt0.c0) IS FALSE) AS NUMERIC) FROM vt0, rt0;SELECT DISTINCT COUNT(*) OVER ( GROUPS  CURRENT ROW), ((((((NULL)OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)))), (NOT (((vt0.c0)-(NULL)))) FROM rt0, vt0 ORDER BY (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, (+ (rt0.c1)), (- (0Xffffffffa3a2c9ef)))) AND ((((rt0.c1)>=(rt0.c1)), NULL, (NOT (rt0.c0))))), ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOTNULL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN rt0.c2 END AS TEXT) FROM rt0 WHERE (json_patch((~ (x'')), '' COLLATE NOCASE)) ORDER BY rt0.c0  NULLS LAST;SELECT LIKE(((rt0.c2) ISNULL), CAST(rt0.c2 AS REAL), 'r'), ((rt0.c2)IS(rt0.c1)) COLLATE RTRIM, COUNT(*) OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW) FROM vt0, rt0 LIMIT 883622957; -- 0ms;
SELECT ALL 'pE', ((((rt0.c0) ISNULL)) NOT NULL), AVG(((vt0.c0)-(rt0.c2))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((-1512978334)<(rt0.c1)) COLLATE RTRIM) OVER () FROM rt0 WHERE (CAST((('1315298042') NOT BETWEEN ('3') AND (0.6142804296972854)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((rt0.c2)OR(vt0.c0)))/('193991933')), ((((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))<(((rt0.c1) NOT NULL))), ((LOWER(DISTINCT rt0.c2)) BETWEEN ((vt0.c0 IN ())) AND (NULL)) FROM vt0 WHERE (((GLOB(x'bd85', x''))||('(x' COLLATE BINARY)));SELECT DISTINCT MAX(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT ALL rt0.c0, (rt0.c2 IN ()) COLLATE RTRIM, ((TRIM(DISTINCT rt0.c2))=((((rt0.c2, rt0.c2, NULL)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)OR(vt0.c0)))OR(0.2232288189167444)) COLLATE RTRIM COLLATE NOCASE, CAST((rt0.c0 IN (rt0.c1)) AS REAL), (((((rt0.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c0, vt0.c0, rt0.c1)))) BETWEEN (((NULL)&(rt0.c1))) AND (LTRIM(vt0.c0))) FROM vt0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (UPPER(DISTINCT '')) AND ((('0NtXk|')GLOB('-716019710')))));SELECT ALL TOTAL((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) OVER (), (((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((vt0.c0)-(rt0.c0)), ((rt0.c0) NOTNULL), 'hs䙽')) AND ((x'c043', rt0.c2 COLLATE NOCASE, ((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c0))))), LEAD(rt0.c0, ((CAST('' AS REAL))>>(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))), CASE (vt0.c0 IN ())  WHEN (- (rt0.c1)) THEN CHAR(rt0.c2) WHEN vt0.c0 THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND ('nUe,]*')) WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE LIKELY(DISTINCT rt0.c2) END) OVER (), (((NOT (x''))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))), vt0.c0 FROM vt0, rt0 WHERE ((((((-1.743131137E9)) NOT BETWEEN ((NULL)) AND (('6}k''kv&Q-'))))-('' COLLATE BINARY))) ORDER BY ((rt0.c2 COLLATE BINARY)<>(CASE WHEN rt0.c1 THEN rt0.c2 END))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((~ (rt0.c1)))<(((vt0.c0)<(rt0.c1)))) FROM vt0, rt0 GROUP BY CAST('-1341605132' AS NUMERIC), (NOT (SUBSTR(rt0.c0, rt0.c2))), TRIM(DISTINCT (((rt0.c1))<=((rt0.c2)))) HAVING (((~ (0.21790750303161477)))=(CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END)); -- 0ms;
SELECT DISTINCT COUNT(rt0.c2) OVER ( ROWS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING) FROM rt0 LIMIT 746533904; -- 0ms;
SELECT ALL AVG(((rt0.c1)=(vt0.c0))), PERCENT_RANK() OVER ( PARTITION BY (((rt0.c1) BETWEEN (rt0.c2) AND ('')) IN ()), (~ ((NOT (rt0.c0))))), ((AVG(rt0.c0)) BETWEEN ((NOT (rt0.c1))) AND (((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0, rt0 LIMIT 1958027954 OFFSET -1668284976; -- 0ms;
SELECT DISTINCT ((UPPER(rt0.c2)) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))*(CAST(rt0.c0 AS BLOB))) FROM rt0;SELECT DISTINCT (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((vt0.c0)|(rt0.c2)))) FROM rt0, vt0 WHERE (((((x'') ISNULL)) NOTNULL)); -- 0ms;
SELECT DISTINCT AVG(SUM(((rt0.c0) NOTNULL))) FROM vt0 WHERE ((- (CAST('1028335976' AS INTEGER))));SELECT ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))&(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT GROUP_CONCAT((((vt0.c0))=((x'')))) OVER () FROM rt0 LIMIT 2058849209;SELECT (CAST(rt0.c1 AS REAL) IN (rt0.c2)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))AND(((rt0.c0)LIKE(rt0.c0)))), ((((rt0.c1 COLLATE NOCASE)AND(rt0.c0 COLLATE NOCASE)))AND((('-260833708')|(NULL)))), LOWER(load_extension(rt0.c2, rt0.c0)) FROM vt0 WHERE (((-1614227890)<=(0.4184384861575078)) COLLATE BINARY);SELECT ((rt0.c0 COLLATE NOCASE)OR(CAST(rt0.c0 AS REAL))), QUOTE((((vt0.c0))<((vt0.c0)))), TOTAL(((rt0.c2) NOT BETWEEN (-7.50388098E8) AND (rt0.c0)) COLLATE BINARY) FROM rt0, vt0 WHERE (CASE WHEN (('0.4768158265636887')%(NULL)) THEN x'' WHEN ((NULL)=(NULL)) THEN ((0.860144482627301) BETWEEN (0.5833341066571417) AND (0.956647665432466)) WHEN (((('-2076175854')AND(0.9056362362648186)))AND(NULL)) THEN (~ (0.24551335348236203)) END) GROUP BY rt0.c1; -- 0ms;
SELECT DISTINCT (((((((((((((('PJ')AND(vt0.c0)))AND('979251814')))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))+(COUNT(*))) FROM vt0 WHERE (CASE WHEN ((x'2875')<(NULL)) THEN ((767664670)<>(NULL)) WHEN (NULL IN ('')) THEN (((-906098878)) BETWEEN ((NULL)) AND ((x''))) WHEN ((((NULL)OR(0.07101696922195355)))OR(x'e67b')) THEN (('N''') NOT NULL) END);SELECT DISTINCT (('邩g\n''R')GLOB((- ('477291468')))), (((CAST(rt0.c1 AS BLOB)))<=((rt0.c2))), ((((0X11151f0c)LIKE(rt0.c1))) IS FALSE), CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN CAST(vt0.c0 AS NUMERIC) THEN 0Xfffffffff39d86c7 WHEN ((rt0.c0) IS TRUE) THEN ((vt0.c0)%(rt0.c2)) END, CAST('881893062' AS INTEGER) FROM vt0 WHERE (CASE WHEN (('I+u}絷W(/)o') BETWEEN (NULL) AND ('ឝ<Pl,Rw')) THEN (((x'')) BETWEEN (('1743390508')) AND ((x'5ef6'))) WHEN NULL COLLATE RTRIM THEN (+ ('-573668437')) WHEN -1939573907 COLLATE NOCASE THEN ('?Bs5%!\r' IN ()) END);SELECT DISTINCT ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)OR(rt0.c2)))OR(((rt0.c0)+(rt0.c2)))) FROM rt0 WHERE (CASE ((NULL) NOT NULL)  WHEN ((NULL) NOT BETWEEN ('-1891029626') AND (x'5cb2a98a')) THEN ((1.014178774E9)*('0.07101696922195355')) WHEN LTRIM(x'', 0.08920284858199645) THEN CASE x''  WHEN NULL THEN -7.68186953E8 WHEN x'' THEN x'' WHEN NULL THEN NULL ELSE NULL END WHEN ((x'693a6cc4')LIKE(0.39063737775004836)) THEN (((((((('367979141')AND(-1774687533)))AND(NULL)))OR('')))AND(x'')) END) ORDER BY CAST(((rt0.c1)&(rt0.c2)) AS INTEGER) DESC  NULLS LAST, ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((rt0.c2)%(rt0.c1))) AND (((rt0.c1)+(rt0.c1))))  NULLS FIRST; -- 0ms;
SELECT ALL CASE (~ (rt0.c0))  WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END END FROM rt0 LIMIT 1011657731;SELECT DISTINCT ((((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt0.c1)IS NOT(vt0.c0)))))AND(NULL)), (((vt0.c0 COLLATE RTRIM))!=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END))), CAST(CAST(rt0.c0 AS INTEGER) AS REAL) FROM rt0 INNER JOIN vt0 ON (+ ((+ (rt0.c1)))) WHERE (((((LAST_INSERT_ROWID())OR((1.61854718E9 IN (x'', NULL)))))OR(CAST(0.3326828233303406 AS BLOB)))) GROUP BY (+ ((- (rt0.c2)))) HAVING (+ (((vt0.c0)<(rt0.c0)))); -- 1ms;
SELECT DISTINCT ((rt0.c1)+(vt0.c0)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(0X7022a60b)))AND(x'')) THEN rt0.c1 COLLATE NOCASE ELSE rt0.c1 END FROM rt0;SELECT DISTINCT ((TOTAL(rt0.c0)) NOTNULL) FROM vt0 ORDER BY CAST(CASE 0.0049858043033231825  WHEN rt0.c2 THEN rt0.c1 END AS NUMERIC)  NULLS LAST;SELECT ALL (x'4bc6' IN ()) FROM rt0, vt0 WHERE (IFNULL((('f0') BETWEEN (NULL) AND ('_籔b!)FJt)')), LIKELY(DISTINCT 0.2221331226596457))) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt0.c0)>>(rt0.c1)))==(((vt0.c0) IS TRUE))) FROM vt0 WHERE (((GLOB('763245138', NULL)) NOT BETWEEN (('0.352669034471472' IN ())) AND ('985601000' COLLATE NOCASE)));SELECT ALL ((CAST(rt0.c1 AS TEXT))||(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) FROM vt0 WHERE ((NULL IN ()) COLLATE RTRIM);SELECT DISTINCT ((rt0.c0)-(GLOB(rt0.c1, vt0.c0))), ((((rt0.c2) ISNULL))>>(rt0.c0)), DENSE_RANK() OVER ( GROUPS ((((((vt0.c0)GLOB(vt0.c0)))OR(((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c0)))AND(NULL)))AND(vt0.c0)))))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) PRECEDING EXCLUDE GROUP) FROM rt0 WHERE (((-920919214) NOT BETWEEN (((NULL) NOT BETWEEN ('193056907') AND (''))) AND (((0.3333854579479588)IS('')))));SELECT ALL ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) COLLATE RTRIM, CAST(rt0.c2 AS TEXT), (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2 COLLATE BINARY))) FROM vt0 WHERE (((CASE WHEN 0.08347132891951348 THEN '-319464987' ELSE 0.5654369478390332 END) IS TRUE));SELECT DISTINCT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<>(((rt0.c2 IN ())))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT QUOTE((((rt0.c0))<>((rt0.c0)))) FROM vt0, rt0 WHERE (0Xffffffffc14f62cb); -- 0ms;
SELECT ALL (UPPER(rt0.c2) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT 'Q.J', rtreenode(((((rt0.c0)OR(rt0.c0)))OR(x'')), rt0.c1 COLLATE RTRIM), (((- (rt0.c1)))IS NOT((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) FROM rt0; -- 0ms;
SELECT ALL ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))*((rt0.c2 IN ()))), COUNT(*), ((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)) COLLATE NOCASE FROM vt0, rt0 LIMIT 352278399; -- 1ms;
SELECT ALL rt0.c2 FROM vt0 WHERE (((UPPER(0X1799aa2c)) NOT NULL)) ORDER BY (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)||(vt0.c0)), (NULL IN ())));SELECT AVG(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) OVER () FROM vt0;SELECT (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(0xfffffffff1b4295e))) AND (CASE rt0.c1  WHEN '0.557450898485297' THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END)) FROM rt0;SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((~ (rt0.c2)))>(rt0.c2 COLLATE NOCASE)) FROM vt0, rt0 WHERE (((((((0Xffffffffe836d1c8)+(NULL)))AND(((x'')%('1819871616')))))AND(''))) LIMIT -603977805; -- 0ms;
SELECT DISTINCT (rt0.c1 IN ()) COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>>(MAX(rt0.c1))) FROM vt0, rt0 GROUP BY (((NOT (rt0.c2))) NOTNULL); -- 1ms;
SELECT ALL ((load_extension(rt0.c1))GLOB(NULL)) FROM rt0 WHERE ((+ ((- ('-1312954432')))));SELECT DISTINCT (rt0.c0 COLLATE BINARY IN ()) FROM rt0, vt0 WHERE (((CASE 253909446  WHEN x'884e' THEN NULL END)OR(((0.23100025463706364)>(1.315298042E9))))); -- 0ms;
SELECT NTH_VALUE((((rt0.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, '1096255293')) AND ((vt0.c0, vt0.c0, rt0.c0)))))), CASE WHEN (- (vt0.c0)) THEN ((rt0.c0)<=(rt0.c2)) END) OVER () FROM rt0, vt0 WHERE (((((x''))<=((0X394a1795))) IN ())); -- 0ms;
SELECT ALL rt0.c0, GROUP_CONCAT(CAST(rt0.c0 AS BLOB)), CAST(SUM(rt0.c1) AS TEXT) FROM vt0 WHERE (((((('292089384') NOT BETWEEN ('35072337') AND ('0.03679884476204853'))))>(((('P!1~C')OR(x'')))))) LIMIT -1383604510;SELECT rt0.c0 FROM rt0 WHERE (((('?')) BETWEEN ((((x'')>=('-1494702605')))) AND (((~ ('')))))); -- 0ms;
SELECT ALL COUNT(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT (((rt0.c2))>((rt0.c1))) COLLATE RTRIM, ((PRINTF(rt0.c1))>>(TOTAL(rt0.c2))), ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((NOT (vt0.c0)))))AND(SUM(0.514671850305187))) FROM rt0 WHERE ((NOT (RTRIM(802686171)))) GROUP BY (((rt0.c0)+(rt0.c2)) IN (((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)))) HAVING rt0.c1;SELECT DISTINCT ((rt0.c0) NOT NULL) COLLATE RTRIM FROM vt0, rt0 WHERE ((NOT ((+ ('-1913462885'))))); -- 0ms;
SELECT DISTINCT CASE (((vt0.c0))==((rt0.c1)))  WHEN ((vt0.c0)IS(vt0.c0)) THEN (rt0.c0 IN (rt0.c1)) END FROM rt0;SELECT ((vt0.c0)-(rt0.c2)) COLLATE BINARY, ((((vt0.c0)*(rt0.c2)))<<(((rt0.c2) BETWEEN (vt0.c0) AND (0.17184773441056267)))), COUNT(*) OVER ( GROUPS ((CASE WHEN rt0.c0 THEN vt0.c0 END)-(((rt0.c2) BETWEEN (rt0.c2) AND (NULL)))) PRECEDING EXCLUDE CURRENT ROW) FROM rt0 WHERE (('斷' IN ()));SELECT DISTINCT AVG(vt0.c0) FROM vt0 WHERE ((('932743208') ISNULL)); -- 0ms;
SELECT ALL (((((rt0.c2 IN ()))AND(0.996705086945776)))AND(((vt0.c0)>>(rt0.c1)))), ((SUM(rt0.c2)) ISNULL), CHANGES(), CASE NULL COLLATE RTRIM  WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END, (vt0.c0 IN (rt0.c1)) COLLATE NOCASE FROM rt0 WHERE (((((('-409670486') NOTNULL), ('-1898893772' IN ()), ('' IN ())))>(('-2102669968' COLLATE BINARY, (NOT (NULL)), ((0.33293048211215226) NOTNULL)))));SELECT DISTINCT GROUP_CONCAT(x'c2fb5807') FILTER(WHERE ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL)) OVER () FROM rt0 WHERE (IFNULL(DISTINCT ((((0.8733567581296925)AND(3.65927648E8)))OR(NULL)), ((NULL) IS TRUE))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))<<(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))), vt0.c0, ((((((((CAST(rt0.c0 AS REAL))AND(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))))OR(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))) FROM vt0, rt0 LIMIT -727736318; -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ('78829995', rt0.c2)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT MAX(RTRIM(vt0.c0)) FROM rt0, vt0 WHERE ((CAST(NULL AS BLOB) IN ())); -- 1ms;
SELECT ALL CAST((~ (vt0.c0)) AS INTEGER) FROM rt0, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0)))>=((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c1, rt0.c2))))) FROM vt0;SELECT DISTINCT ((0.2784538782795264)>>(NULL)), ((UNLIKELY(rt0.c0))AND(CAST(rt0.c1 AS INTEGER))), ((((((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)))AND(((rt0.c1) ISNULL))))AND((((rt0.c2))>=((vt0.c0))))))AND(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c0)-(0.047281201598094236)))))OR(((vt0.c0)<=(rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT ALL (((((rt0.c0))>((vt0.c0))))<>((((rt0.c0))=((rt0.c0))))) FROM rt0 WHERE (CASE WHEN '0.26290737830437205' THEN 0.7873285977472004 ELSE NULL END COLLATE BINARY);SELECT NULL FROM vt0 WHERE ((~ ('' COLLATE NOCASE))); -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM) IS FALSE) FROM vt0 WHERE (CAST(((0.8184992014119091) NOTNULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN ()) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT (((AVG(rt0.c0), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END, (0.5178644161948988 IN (rt0.c1))))!=((((vt0.c0) NOT BETWEEN (x'0d6b') AND (rt0.c1)), rt0.c1 COLLATE BINARY, ((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))) FROM vt0;SELECT DISTINCT '0.05680416458920834' FROM vt0 WHERE (((CAST(NULL AS REAL))>>(0.02831645891733159))); -- 0ms;
SELECT DISTINCT ABS(x'0de9') FROM vt0; -- 0ms;
SELECT (((0xffffffffde0c2408)) NOT BETWEEN (('-704118025')) AND ((rt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c2) ISNULL)), CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL), ((((rt0.c0)OR(rt0.c1)))>=('-358515733')) FROM vt0 WHERE (CAST((+ (x'')) AS BLOB)) ORDER BY CAST(((rt0.c0)<=(rt0.c0)) AS TEXT)  NULLS LAST;SELECT ALL ((((((((rt0.c0 COLLATE NOCASE)OR(MAX(rt0.c2))))AND((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((rt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) FROM rt0;SELECT (- (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN x'2235ba5b' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) FROM vt0 WHERE (CASE CAST(0.37413468881430556 AS REAL)  WHEN ((NULL)=('Wk')) THEN ((((x'')OR('')))OR(x'')) END);SELECT '~*3Vb' FROM vt0, rt0 WHERE (((0.013420931423116511)-(((NULL) BETWEEN (x'') AND ('-189519970'))))); -- 0ms;
SELECT ((((((rt0.c0)>(rt0.c1)))OR('-9223372036854775808')))AND((rt0.c2 IN (vt0.c0, rt0.c2)))) FROM vt0, rt0; -- 0ms;
SELECT ALL ((((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM FROM rt0, vt0 LIMIT -1494702605 OFFSET -1743131137; -- 0ms;
SELECT ALL TOTAL(CAST(rt0.c0 AS TEXT)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((((CAST(vt0.c0 AS BLOB))OR(((rt0.c0)||(rt0.c2)))))OR(TYPEOF(DISTINCT rt0.c1))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))))AND(((rt0.c1) NOTNULL))), LIKELIHOOD(DISTINCT SUM('-506108851'), 0.6044082465849276), ((7.8829995E7) BETWEEN ((rt0.c1 IN ())) AND (MIN(rt0.c1))) FROM vt0;SELECT DISTINCT CASE WHEN (- (vt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE (('-99507176') NOT BETWEEN (vt0.c0) AND (rt0.c0)) END, x'', ((((CAST(rt0.c2 AS INTEGER))OR(((((x'4b1a')AND(0.4166167143627447)))AND(x'')))))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) FROM vt0 WHERE ((((-1768718222)+('?e')) IN (((NULL)<(NULL)))));SELECT ALL SUM((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) OVER (), (+ (SQLITE_COMPILEOPTION_USED(vt0.c0))), (- (((rt0.c1)/(vt0.c0)))) FROM vt0, rt0 ORDER BY (rt0.c0 COLLATE RTRIM IN (TYPEOF(rt0.c1))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT LTRIM(UPPER(0.778503918380666)) FROM rt0 WHERE ((((((0.34258083078464563 IN ()))AND((('&[^0') ISNULL))))AND(((((x'')AND('2024573780')))AND(NULL))))); -- 0ms;
SELECT ALL ((rt0.c2) NOTNULL) COLLATE RTRIM FROM vt0 GROUP BY NULL HAVING ((+ (rt0.c0)) IN (HEX(DISTINCT rt0.c2)));SELECT DISTINCT FIRST_VALUE(json_array_length(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c0)+(rt0.c2)))) OVER () FROM vt0, rt0;SELECT LAST_VALUE(rt0.c0) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((LOWER(rt0.c2))OR(((((0.6250017893572684)AND('0.5284700348003487')))OR(rt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.07269221233774481))) FROM vt0;SELECT ALL (((((vt0.c0)*(vt0.c0))))<>(((+ (rt0.c2))))) FROM vt0, rt0 WHERE (((((0.5611635803222913) BETWEEN (0.5231118345957048) AND (NULL)))<=((('') BETWEEN ('') AND (-1343744417))))); -- 0ms;
SELECT ALL ((rt0.c1)!=(0.9400778759433974)), NULL, CAST(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c0)) AS NUMERIC) FROM vt0, rt0 WHERE (((((-1519065772) NOT NULL))IS('-1743131137'))); -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((LIKE(rt0.c1, rt0.c0, '1')))) FROM vt0, rt0 WHERE (UNLIKELY(DISTINCT (((((((('-122369874')OR(-293056955)))OR(0.9911836741277319)))AND('')))OR('0.507598085960048')))); -- 0ms;
SELECT DISTINCT (CAST(rt0.c2 AS INTEGER) IN ()), rt0.c1, CASE NULL  WHEN (- (rt0.c0)) THEN ((rt0.c1)>(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END FROM vt0 WHERE ((- (CAST(NULL AS INTEGER))));SELECT LOWER(DISTINCT LIKELY(rt0.c0)), LOWER(((vt0.c0)%(rt0.c2))), 0.3465916415146032 COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((((rt0.c0)LIKE(rt0.c2))) BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c0)/(rt0.c1))))) OVER () FROM rt0; -- 1ms;
SELECT DISTINCT (((vt0.c0)!=(rt0.c1)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c0) NOT NULL)))) FROM rt0, vt0 WHERE (((NULL)OR(-512950627)) COLLATE RTRIM COLLATE RTRIM) LIMIT 1011657731 OFFSET 1858528563; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)*(rt0.c2)) AS INTEGER) FROM rt0, vt0 EXCEPT SELECT DISTINCT (((rt0.c0 IN (vt0.c0)))OR((((rt0.c1, vt0.c0, rt0.c0, rt0.c1, vt0.c0))<((rt0.c1, rt0.c1, vt0.c0, rt0.c1, vt0.c0))))) FROM vt0 GROUP BY (((((rt0.c2))<((rt0.c1)))) ISNULL) HAVING ((NOT (rt0.c0)) IN (vt0.c0 COLLATE RTRIM));SELECT ((CASE WHEN rt0.c2 THEN vt0.c0 END) IS FALSE) FROM rt0;SELECT ALL UNLIKELY(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END) FROM rt0, vt0 GROUP BY ((rt0.c1 IN (rt0.c0, rt0.c2, NULL)) IN ()) HAVING CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) IS FALSE) AS BLOB) FROM rt0, vt0 WHERE ((((((x'30ad')OR(x'142f')))OR('T')) IN ())) ORDER BY (((rt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0)IS(rt0.c0))))) DESC  NULLS LAST; -- 1ms;
SELECT ALL (((0.4050757342973581))<>((CAST(vt0.c0 AS TEXT)))) FROM vt0 WHERE (json_array_length(CAST(x'' AS NUMERIC), CAST(-1.898893772E9 AS REAL)));SELECT DISTINCT (((vt0.c0)) BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((rt0.c0))) FROM rt0 WHERE (COALESCE(((NULL)>(7.8829995E7)), (0.725079117877209 IN (x'')), (0.7959770240161209 IN ('ᷓ''~<H', '-981166549')), (- (''))));SELECT ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c1)|(rt0.c0)))) FROM rt0 LIMIT -1416171019; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, rt0 WHERE (((x'33ee' COLLATE BINARY) BETWEEN ((x'12b7' IN ())) AND ((('')/(0.35484388282455315))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2))>((NULL))) IN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (rt0.c0 IN (rt0.c1)))) FROM vt0;SELECT (~ (((rt0.c1)||(rt0.c0)))), ((rt0.c2)|(rt0.c0)) COLLATE NOCASE COLLATE NOCASE, CAST(((rt0.c2) NOT NULL) AS TEXT) FROM rt0 WHERE (CAST(CASE WHEN '' THEN 0.29914362214411194 END AS INTEGER)); -- 0ms;
SELECT DISTINCT (~ (0.8413074091349727 COLLATE BINARY)) FROM vt0 WHERE (((((('Y-', x'', 1.7976931348623157E308)) NOT BETWEEN ((-2061435182, NULL, x'')) AND ((-985671910, NULL, NULL)))) BETWEEN ((((('')OR(0.03459428941972631)))AND('+e'))) AND ('445226848' COLLATE RTRIM))) LIMIT 898513195; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt0.c0))>((vt0.c0)))) OVER () FROM vt0, rt0 WHERE ((((NULL)) BETWEEN ((LIKE('I+u}絷W(/)o', 0.2898372089628023, 's'))) AND ((TRIM(DISTINCT x''))))); -- 0ms;
SELECT DISTINCT COUNT((NOT (rt0.c0))), ((vt0.c0 COLLATE NOCASE)IS((rt0.c1 IN (rt0.c1)))), (((rt0.c0 IN ()))>=(rt0.c0)) FROM vt0 WHERE (((((((((((x'')OR('-/i,')))AND(NULL)))OR(0.7759172495634817)))OR(''))) BETWEEN ((('-1905972142') IS FALSE)) AND ((((x'', x'', '284228329')) NOT BETWEEN ((0X18bd56d3, 0.3833553921615157, '')) AND (('Oᑮ&', NULL, NULL))))));SELECT ALL ((rt0.c1) NOT NULL) COLLATE RTRIM FROM rt0, vt0 ORDER BY INSTR('-1312954432', json_array_length(rt0.c2))  NULLS LAST, CASE WHEN vt0.c0 THEN ((vt0.c0)IS(rt0.c0)) END DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT (((((1402563618) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<=((CHANGES()))) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(json_quote(rt0.c2)) OVER (), ((((rt0.c0) IS TRUE)) ISNULL), (((rt0.c1 IN ()))/(NULL)) FROM vt0, rt0; -- 0ms;
SELECT ALL AVG(((((vt0.c0)OR(rt0.c0)))AND(rt0.c2))), ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))OR(((rt0.c2)|(rt0.c2)))))AND(COUNT(*))), ((CAST(rt0.c1 AS REAL)) ISNULL), COUNT(rt0.c2) OVER (), (CAST(rt0.c2 AS REAL) IN ()) FROM vt0;SELECT CAST(((rt0.c2)>>(vt0.c0)) AS NUMERIC) FROM rt0;SELECT DISTINCT TOTAL(CAST(x'dc73' AS BLOB)), ((((vt0.c0) IS TRUE))AND((NOT (rt0.c2)))), ((((rt0.c2)AND(rt0.c0))) IS TRUE) FROM vt0, rt0 WHERE ((- (((0.24602652848797246) BETWEEN (NULL) AND ('91566678'))))); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c2 THEN vt0.c0 END) BETWEEN (x'edc7') AND (((rt0.c1) NOTNULL))), (+ (x'')), SUM(LIKELIHOOD(rt0.c0, 0.5556466823665263)) FROM rt0, vt0 WHERE ((((NOT (0.11720431303672418)))%(((7.8829995E7) IS FALSE)))) LIMIT -1; -- 0ms;
SELECT DISTINCT NTILE('') OVER (), UPPER(DISTINCT HEX(rt0.c0)), AVG(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE ((((x'b2f2') BETWEEN (NULL) AND (x'3774')) IN (0.4091692731806926)));SELECT DISTINCT (- (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))), (- (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END)), (((- (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))), (+ (GROUP_CONCAT(rt0.c1))), ((rt0.c2 COLLATE BINARY)OR(COUNT(*))) FROM vt0;SELECT AVG(((rt0.c2) ISNULL)) OVER () FROM rt0 WHERE ((((0.38953980182298886)) NOT BETWEEN ((x'144e')) AND (((((NULL)) BETWEEN ((-0.0)) AND (('-1600298463'))))))); -- 0ms;
SELECT DISTINCT AVG((0x362b81ca IN (rt0.c1, vt0.c0))) OVER (), rt0.c2, ((((vt0.c0)-(rt0.c1)))>>(CAST(rt0.c1 AS TEXT))) FROM vt0 WHERE (UNLIKELY(DISTINCT (('f{d') BETWEEN (x'') AND (x''))));SELECT ALL ((((rt0.c1)&(rt0.c0)))LIKE((rt0.c1 IN (rt0.c0)))) FROM vt0, rt0 WHERE (CAST(UPPER(DISTINCT 0Xffffffffe1b70c04) AS REAL)); -- 0ms;
SELECT ALL (((rt0.c0, rt0.c1, NULL)) BETWEEN ((((rt0.c1) NOT BETWEEN (-1.551956951E9) AND (1148089548)), MIN(rt0.c2), (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((x'5268', CAST(rt0.c1 AS REAL), rt0.c1))), ((((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))LIKE(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))), (((rt0.c2)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) FROM vt0, rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)/((((vt0.c0))>((vt0.c0))))) ASC  NULLS LAST, CAST((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS REAL)  NULLS LAST, (((CASE WHEN rt0.c2 THEN ')rzI_' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))>=(((- (rt0.c1))))); -- 0ms;
SELECT DISTINCT (rt0.c2 IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((+ (x''))) LIMIT 1744542439 OFFSET 1217862670; -- 0ms;
SELECT ALL CAST((rt0.c2 IN ()) AS TEXT) FROM vt0, rt0 LIMIT 1086310631; -- 0ms;
SELECT DISTINCT (((+ (vt0.c0))) IS TRUE) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT AVG((rt0.c1 IN (rt0.c0))) OVER () FROM vt0;SELECT ALL CASE (((rt0.c2)) NOT BETWEEN ((0Xfffffffff073fe54)) AND ((rt0.c1)))  WHEN ROUND(x'', rt0.c2) THEN MIN(vt0.c0) END, '''' COLLATE BINARY, SUM(rt0.c0) FROM rt0, vt0 WHERE (x''); -- 0ms;
SELECT rtreenode((rt0.c1 IN ()), ((vt0.c0)>=(rt0.c2))) FROM vt0 WHERE (((((NULL) NOT BETWEEN ('-885924926') AND (NULL)))+((('1994339572') NOT BETWEEN ('B䫓~') AND ('-1312954432')))));SELECT DISTINCT ((((vt0.c0) ISNULL))||((vt0.c0 IN ()))) FROM rt0 WHERE ((((((x'f2c3', x'', '825454355'))<=((x'c853', x'', 0X745f6ebe))))OR(INSTR('53756583', '-1230219884'))));SELECT DISTINCT ((CASE 0Xffffffffb65cf762  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)-(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT '-1836260656' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, rt0 WHERE (0.4275959824851876) ORDER BY ((((NULL)OR(UPPER(rt0.c1))))OR(((rt0.c1) NOTNULL))), CHAR(rt0.c2 COLLATE RTRIM) DESC; -- 0ms;
SELECT ALL 697795531 FROM rt0, vt0 WHERE (CASE WHEN (((''))<>((''))) THEN ((NULL) IS FALSE) ELSE (((NULL, '-1151780664', NULL))>((x'', 0.024240360874326905, '-447082002'))) END) ORDER BY ((((rt0.c1) ISNULL))>>(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))), SUBSTR(((((rt0.c2)AND(vt0.c0)))AND('Dy*qS>')), ((rt0.c2) NOT BETWEEN (vt0.c0) AND ('B*褛F'))) ASC; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0 WHERE ('');SELECT ALL x'' FROM vt0; -- 0ms;
SELECT ALL ((rt0.c1)>>(MIN(rt0.c0))), ((rt0.c0)%(rt0.c0)) COLLATE BINARY, CASE WHEN 0.29026835290762987 THEN CASE WHEN NULL THEN vt0.c0 END WHEN '293328429' THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) WHEN rt0.c2 THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(rt0.c2 AS NUMERIC) END FROM rt0, vt0 WHERE ((((('d#') NOT BETWEEN ('') AND (x'daca'))) NOT BETWEEN (CAST(4.17240161E8 AS TEXT)) AND (((NULL)LIKE(x'ff14'))))); -- 0ms;
SELECT vt0.c0, ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (rt0.c0) AND (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END)), ((((rt0.c2) BETWEEN (vt0.c0) AND (x''))) IS TRUE) FROM vt0 WHERE ((((('1722736208'))<>((0.8044076633509232))) IN ()));SELECT ((((rt0.c0)-('-723721217'))) NOTNULL) FROM rt0 LIMIT -1977763955; -- 0ms;
SELECT ((TRIM(vt0.c0, rt0.c1))>=(TYPEOF(rt0.c1))), ((((((0.7188611921181769) BETWEEN (vt0.c0) AND (rt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)))OR('-293056955')), ((((vt0.c0)>(rt0.c1)))<>((('78829995')||(rt0.c2)))), ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)<(GROUP_CONCAT(rt0.c0))), FIRST_VALUE(rt0.c2) OVER ( ORDER BY ((rt0.c1)>>(0xffffffff84bccdc7)) COLLATE BINARY) FROM rt0, vt0; -- 0ms;
SELECT DENSE_RANK() OVER ( PARTITION BY COALESCE(DISTINCT ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)), 'r?'), ((+ (rt0.c1)) IN (ABS(rt0.c0))) ORDER BY json_valid(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))) ASC) FROM vt0;SELECT DISTINCT rt0.c0 FROM rt0, vt0; -- 0ms;
SELECT ((((TRIM(vt0.c0, rt0.c0))AND(CAST(rt0.c0 AS INTEGER))))OR(0.9746687979819362)) FROM vt0;SELECT DISTINCT x'96d5', (((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END, (vt0.c0 IN ()), (~ (vt0.c0)))) AND ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c2)LIKE('')), rt0.c2))), ((((('502734785') BETWEEN (vt0.c0) AND (rt0.c1))))<((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) FROM vt0 ORDER BY (+ (((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.09524029691066815)))) DESC LIMIT 608045641;SELECT DISTINCT ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))<=(((rt0.c0)>(rt0.c2)))) FROM rt0 GROUP BY (((vt0.c0 IN ()))<(((rt0.c1) ISNULL))) HAVING (((rt0.c2)) BETWEEN ((((('985601000', rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((x'', rt0.c0, rt0.c2))))) AND ((((rt0.c0) NOT NULL))));SELECT DISTINCT (~ (CASE WHEN vt0.c0 THEN x'' END)) FROM vt0, rt0; -- 0ms;
SELECT ALL ((((rt0.c0)=(rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c2) IS FALSE))) FROM vt0, rt0 LIMIT 268842549 OFFSET -1977763955; -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE ((CASE 0.882011464390999  WHEN 0.8154773430018993 THEN 'NJ' END IN ())) GROUP BY x''; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOTNULL)) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (rt0.c1 COLLATE NOCASE)) FROM rt0 WHERE (CAST((((0.8098233493342014)) BETWEEN ((NULL)) AND ((0.5231118345957048))) AS REAL)); -- 0ms;
SELECT ALL CASE WHEN (((rt0.c2))<((rt0.c2))) THEN rt0.c0 COLLATE BINARY ELSE (((vt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c0))) END, ((MAX(rt0.c2)) IS TRUE), (- ((('nཱL﹔W-Kv') IS TRUE))) FROM vt0 WHERE (((rtreenode(2.011624929E9, x'95a5'))>=(CAST(0x11354adf AS NUMERIC)))) GROUP BY ((rt0.c0 COLLATE NOCASE) IS FALSE) ORDER BY '1605524457' ASC, CASE CASE WHEN rt0.c0 THEN rt0.c1 END  WHEN ((rt0.c0) NOTNULL) THEN CASE WHEN 0.6954529545328765 THEN vt0.c0 END ELSE ((rt0.c1)-(rt0.c1)) END  NULLS LAST;SELECT ALL CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(rt0.c1 AS TEXT) ELSE ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) END FROM vt0, rt0 WHERE ((((NULL) BETWEEN (x'') AND (' ᅏl')) IN (CASE NULL  WHEN -2.3985117E8 THEN 0.916379002958299 WHEN 0.7340178575275672 THEN NULL WHEN '-2104807920' THEN 0.567084683460184 ELSE x'' END))); -- 1ms;
SELECT (((rt0.c1))<((((rt0.c2) NOTNULL)))) FROM rt0, vt0 WHERE (((CASE WHEN x'' THEN '' WHEN '-1816180492' THEN 0.557450898485297 WHEN x'' THEN '' WHEN -1194340671 THEN NULL WHEN 0.12029102126713409 THEN x'' ELSE NULL END)IS NOT('' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))))==((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))))) FROM vt0 WHERE ((((((NULL) NOTNULL)))<((((NULL) BETWEEN (1.282657416E9) AND (NULL))))));SELECT DISTINCT UPPER(rt0.c0) COLLATE RTRIM FROM vt0 WHERE ((((CASE 0.45355511761593503  WHEN NULL THEN NULL ELSE '\r#%#Q?8k' END))==((((286596876)LIKE(0.33181110806281033))))));SELECT ALL CAST(rt0.c0 AS TEXT) FROM vt0, rt0 WHERE (((('1786209504')>>(x'')) IN (((x'19a9')=(-1542506067))))) GROUP BY TRIM(((vt0.c0)-(rt0.c1))), ((((vt0.c0) ISNULL))LIKE(PRINTF('-122369874'))), CAST(CASE rt0.c2  WHEN 0.47291814292086054 THEN rt0.c0 END AS NUMERIC) HAVING (NOT ('\r!')); -- 0ms;
SELECT DISTINCT ((((rt0.c2, vt0.c0, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, 0xfffffffff8b4c8ae, vt0.c0, rt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c0))) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((NULL IN ())) OVER (), CAST((~ (rt0.c0)) AS NUMERIC), GROUP_CONCAT(MIN(COUNT(vt0.c0))) FROM rt0, vt0 WHERE ((((('⚰t')OR('-981166549')))OR(NULL)) COLLATE BINARY);SELECT DISTINCT ((((vt0.c0)||(rt0.c0))) ISNULL) FROM vt0 WHERE (TRIM(((x'') NOTNULL))) LIMIT -1524161248;SELECT DISTINCT (- (((rt0.c0)OR(vt0.c0)))) FROM vt0 WHERE ((((((('-1816180492')AND(x'')))OR(x'a160')))>(NULL COLLATE RTRIM))) GROUP BY vt0.c0;SELECT ALL (((vt0.c0 IN ()))||(((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))), ((rt0.c1)=((rt0.c1 IN ()))), CASE ((vt0.c0) NOT NULL)  WHEN ((((((((-1677450618)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)) THEN rt0.c0 END FROM rt0 GROUP BY (((((x''))>((NULL)))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2))) AND (CASE rt0.c2  WHEN rt0.c1 THEN x'' ELSE rt0.c0 END)) HAVING ((((((((rt0.c1)OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((vt0.c0) NOT NULL))))AND(rt0.c1 COLLATE RTRIM)))OR(vt0.c0)) LIMIT 1649617429;SELECT ALL CASE WHEN (NOT (rt0.c1)) THEN COUNT(*) END FROM vt0, rt0 GROUP BY ((x'' COLLATE NOCASE) NOTNULL) HAVING (((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END))<((TOTAL(rt0.c2)))); -- 0ms;
SELECT ALL (- (CAST(rt0.c2 AS TEXT))) FROM rt0 WHERE (JULIANDAY((((0.7028214737782442)) NOT BETWEEN ((NULL)) AND ((0.5250686780946897))), ABS(DISTINCT NULL), (('-1133924209')>>(x'5df2')))) LIMIT 286596876; -- 0ms;
SELECT DISTINCT ((((rt0.c1)IS NOT(rt0.c1)))AND(rt0.c1)) FROM vt0;SELECT DISTINCT GROUP_CONCAT(COUNT(((rt0.c0)/(rt0.c2)))) FROM rt0 WHERE (((NULL) NOTNULL));SELECT 0.7558098142625568 FROM rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(x'3ab9')))>>((((vt0.c0))==((rt0.c1))))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (AVG(vt0.c0)) AND (DATETIME(rt0.c2, vt0.c0, vt0.c0, rt0.c0, rt0.c0))), 0xffffffffdf6f1fbb FROM vt0, rt0 LIMIT 779543045 OFFSET -1223536706; -- 0ms;
SELECT DISTINCT DATE(((rt0.c2) NOTNULL), ((rt0.c2)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC)), ((CAST(rt0.c0 AS BLOB)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (COUNT(*))), SQLITE_SOURCE_ID() FROM rt0, vt0 WHERE (((0.800622930678574)|((NULL IN ())))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL COUNT(0.44367127328658484) FROM rt0, vt0; -- 0ms;
SELECT (((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN '1750217325' WHEN rt0.c2 THEN vt0.c0 WHEN '-1446942365' THEN rt0.c2 END, ((vt0.c0)<<(vt0.c0)), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))) AND (((rt0.c2 IN (rt0.c0, rt0.c0)), SUM(rt0.c2), (rt0.c0 IN (vt0.c0, rt0.c2))))) FROM vt0;SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END) IS FALSE) FROM vt0, rt0; -- 0ms;
SELECT ((vt0.c0) IS TRUE) COLLATE RTRIM, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))IS NOT(COUNT(*))), rt0.c1 FROM rt0;SELECT CAST(TOTAL(rt0.c1) AS BLOB) FROM vt0, rt0; -- 0ms;
SELECT ALL rt0.c1, rt0.c2, ((0.6488522371042442) NOT BETWEEN (0.9985616437747915) AND (vt0.c0 COLLATE BINARY)) FROM vt0, rt0 WHERE ((CASE WHEN 0.05680416458920834 THEN '' ELSE x'' END IN ())) ORDER BY (((((rt0.c1, rt0.c2, rt0.c2))=((rt0.c0, rt0.c1, rt0.c0)))) IS FALSE) ASC, 0.5927025145055282 DESC, ((((vt0.c0)IS NOT(vt0.c0))) NOT NULL) DESC; -- 0ms;
SELECT DISTINCT MIN(((vt0.c0)IS NOT(rt0.c1)) COLLATE NOCASE) FROM vt0, rt0 WHERE (TYPEOF(121587850 COLLATE NOCASE)) GROUP BY ((vt0.c0 COLLATE NOCASE)>>(rt0.c0)) ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((vt0.c0)AND(rt0.c1)) COLLATE BINARY, ((((rt0.c2)IS NOT(rt0.c0))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)))), 0.07401833306404293 FROM rt0, vt0 WHERE ((+ (((('y\rl~', NULL, '-H', x'', x'77d1')) BETWEEN ((0.6420194767672449, x'', -63916084, '7', NULL)) AND ((x'f832', '0', '813399064', x'10e4', '-1119389234')))))) GROUP BY json_patch(rt0.c2, (((rt0.c2, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c2, vt0.c0)))) LIMIT 632960602 OFFSET 1; -- 0ms;
SELECT ((((rt0.c1))=((''))) IN ()), GROUP_CONCAT(rt0.c1) OVER ( PARTITION BY ((((((rt0.c2) NOT NULL))OR(((rt0.c2) IS FALSE))))OR(((vt0.c0)==(rt0.c2)))), ((TIME(rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c2, '<2', rt0.c1))GLOB(CAST(rt0.c2 AS REAL)))), CUME_DIST() OVER (), '', (~ (-1743131137)) FROM rt0, vt0 WHERE ((((('283749239')<(x'de0b'))) BETWEEN (((x'') BETWEEN (0.858079289574631) AND ('1096255293'))) AND ((('') NOT BETWEEN (x'633f') AND (0x1d852037))))) GROUP BY rt0.c1, rt0.c1, vt0.c0 HAVING rt0.c2; -- 0ms;
SELECT DISTINCT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<=((('Xhyv+Q' IN ())))) FROM vt0 WHERE ((((0.7744598963379141)) NOT BETWEEN (((('-53304120')&(NULL)))) AND ((x'' COLLATE BINARY))));SELECT ALL (CAST(rt0.c2 AS NUMERIC) IN (((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)))), (- (((x'')%(rt0.c2)))), CASE WHEN 0Xfffffffffb270d27 THEN (+ (rt0.c1)) WHEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND('812774240')))AND(x'')) THEN (((rt0.c0, rt0.c2, vt0.c0))!=((rt0.c0, rt0.c0, rt0.c1))) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN CAST(x'4a01' AS REAL) WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END THEN AVG(rt0.c1) WHEN x'' THEN rt0.c2 ELSE TOTAL(vt0.c0) END FROM vt0 WHERE (((((((((((0.4011756223916195)OR(x'')))OR(0.16631210336096114)))AND('xMG')))AND(0.8394832581709747)))<>(((x'')IS NOT(x'940c')))));SELECT DISTINCT (((((rt0.c2))<((rt0.c0)))) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((((rt0.c0)LIKE(rt0.c0)))) AND ((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c2))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c0) NOT NULL)) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0, rt0; -- 0ms;
SELECT ALL (~ (((rt0.c2)-(rt0.c2)))), (((((rt0.c2 IN ()))AND(((rt0.c0)%(rt0.c0)))))OR(SUM(rt0.c2))), ((((rt0.c2) IS FALSE))<>((NOT (vt0.c0)))) FROM vt0, rt0 WHERE ((+ (NULL))); -- 1ms;
SELECT DISTINCT ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)AND(COUNT(*))))OR(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((CAST(0.7810839268071327 AS BLOB))<=(((x'') IS TRUE))));SELECT ALL CAST(((vt0.c0)>>(0x6a706d13)) AS TEXT) FROM vt0, rt0 WHERE ((CASE WHEN 0.3667515001460814 THEN NULL END IN ())); -- 0ms;
SELECT ALL CAST(((NULL)!=(rt0.c0)) AS TEXT) FROM vt0, rt0 WHERE (-546365509) ORDER BY UNLIKELY(DISTINCT (((rt0.c1))=((rt0.c0)))); -- 0ms;
SELECT DISTINCT (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '*{IuRAYX' ELSE vt0.c0 END))!=((((rt0.c1)>>(rt0.c1))))) FROM vt0 WHERE (((((('PQ')) NOT BETWEEN ((x'b4c9')) AND ((0.8491758269394399))))/(((-1.225260999E9) NOT BETWEEN (x'') AND (NULL)))));SELECT DISTINCT CASE CAST(rt0.c2 AS TEXT)  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 WHEN ((rt0.c1) IS FALSE) THEN (((vt0.c0))>((rt0.c2))) WHEN (rt0.c0 IN ()) THEN ((x'')*(rt0.c1)) END FROM vt0, rt0 WHERE (((NULL)+('Du^*D4'))) GROUP BY (NOT (((rt0.c2) IS FALSE))), (rt0.c2 IN ()) COLLATE RTRIM, (LIKELY(rt0.c1) IN ()) HAVING CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) AS NUMERIC); -- 0ms;
SELECT CHANGES(), ((MAX(rt0.c2, rt0.c1))|(vt0.c0 COLLATE NOCASE)), GROUP_CONCAT(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END), (((+ (vt0.c0)))IS(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)), ((((((((rt0.c1)OR(((vt0.c0) IS TRUE))))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)/(rt0.c0)))))OR(UNLIKELY(DISTINCT vt0.c0))) FROM vt0, rt0 WHERE (CASE WHEN ((1.7976931348623157E308) BETWEEN ('') AND (-755021780)) THEN (0.5987295730617342 IN ()) WHEN x'' COLLATE RTRIM THEN CASE 0.5093869925612029  WHEN '760588874' THEN 'QpO' END WHEN (NULL IN ()) THEN ((('rua\nr[', NULL, 0Xffffffffafe8165f)) NOT BETWEEN (('s?K5-', '', 'rua\nr[')) AND ((x'', NULL, NULL))) WHEN UPPER(0.38954109444628016) THEN CAST('' AS BLOB) WHEN (((0.1039730551502881))<((-2.60833708E8))) THEN TYPEOF(0.09636943974464696) ELSE ((-968151993) NOT BETWEEN (0.5471864028626917) AND (NULL)) END); -- 0ms;
SELECT CAST(LAST_INSERT_ROWID() AS BLOB) FROM vt0; -- 0ms;
SELECT (((((vt0.c0)>>(NULL))))==((CASE rt0.c1  WHEN rt0.c1 THEN '' ELSE rt0.c2 END))) FROM rt0 WHERE (json_array_length(IFNULL(DISTINCT NULL, ' G')));SELECT ALL CAST(CAST(rt0.c0 AS TEXT) AS INTEGER), (((vt0.c0)) NOT BETWEEN ((((((((((0.48512116053227505)OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2)))) AND (((((rt0.c1))<((vt0.c0)))))), ((((((((((rt0.c0)>(rt0.c2)))AND(CAST(rt0.c2 AS REAL))))OR(((rt0.c0)*(rt0.c1)))))OR((((vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((x'bfe9', rt0.c2, 0.6277115076749116)) AND ((rt0.c2, rt0.c1, vt0.c0))))))AND((vt0.c0 IN ()))) FROM rt0 WHERE (LIKELIHOOD(((NULL)OR('-1242418948')), 6.810291480392472E-4));SELECT DISTINCT ((((rt0.c2) ISNULL))=(rt0.c0)) FROM vt0, rt0 WHERE (LOWER((+ ('')))); -- 1ms;
SELECT DISTINCT (((((((((((((('-940016962')AND(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(vt0.c0))) IS FALSE), vt0.c0, ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((rt0.c1)>(rt0.c1)))) FROM rt0 WHERE (CASE (- (NULL))  WHEN '' THEN ((('9)>DfN\n'))==((NULL))) WHEN ((x'3265')<<(x'0bb3')) THEN (~ (0.08816902164036966)) WHEN CASE WHEN '0.10581881453094877' THEN x'' ELSE '' END THEN TRIM(DISTINCT '417240161', 0.9367711609758176) ELSE ((x'2f95')<(x'')) END);SELECT '1559904107' FROM vt0, rt0 WHERE (((((((((0.006414628034612235)OR(x'' COLLATE NOCASE)))OR(((((((((0x6bd6ef1a)OR('1312131031')))AND(0.46189966281014516)))OR(-1.816180492E9)))AND(1.805184889E9)))))OR((NULL IN ()))))OR(((2056298287)-(NULL))))); -- 0ms;
SELECT DISTINCT rt0.c1, 0xffffffffe9d3290f, ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))AND(((rt0.c0) ISNULL))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)) FROM rt0, vt0; -- 0ms;
SELECT x'', CASE (NOT (rt0.c2))  WHEN MAX(rt0.c0) THEN (((rt0.c1))==((rt0.c0))) END, (((DATETIME(rt0.c0, rt0.c2, rt0.c2), NULL, (- (vt0.c0))))<=((rt0.c0 COLLATE NOCASE, (((x'', rt0.c0, '1769554681'))<((vt0.c0, vt0.c0, rt0.c0))), (rt0.c0 IN ())))) FROM rt0, vt0 WHERE (LIKELY(DISTINCT (((('228092574')AND(0.14678950053773432)))AND(x'675c')))); -- 0ms;
SELECT AVG(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN 0xffffffffd4dce3ff THEN rt0.c2 WHEN '-814963006' THEN rt0.c1 ELSE rt0.c2 END), TRIM((NOT ('1204210530'))), ((json_insert(rt0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c1, rt0.c1, rt0.c1))%(CASE rt0.c2  WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)), CASE (- (0xffffffffa073db11))  WHEN (rt0.c2 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END ELSE CAST(rt0.c2 AS REAL) END, (((rt0.c0 IN ())) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((rt0.c2 IN (rt0.c0)))) FROM rt0;SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1))))<>((((rt0.c0)<(rt0.c2))))) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (0.015883143701756475) AND (vt0.c0 COLLATE NOCASE)) WHERE (((((0.2993439880866784 COLLATE RTRIM)OR(((NULL)+(x'')))))AND(((('1868240470'))>((x'9e9a1bad')))))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))*(COUNT(vt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT SUM((~ (rt0.c2))) FILTER(WHERE CASE WHEN ((vt0.c0) IS TRUE) THEN (((rt0.c1, rt0.c0, vt0.c0))>=((rt0.c0, rt0.c1, rt0.c2))) END) OVER (), COUNT(((((rt0.c0)AND(vt0.c0)))OR(rt0.c0))), (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN (((((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, rt0.c1))), ((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)), rt0.c1 COLLATE RTRIM)) AND ((((((((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)), (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), ((rt0.c0)OR('A\'))))) FROM vt0, rt0 LIMIT 5667353; -- 0ms;
SELECT ALL ((((vt0.c0)-(rt0.c2)))LIKE(CAST(rt0.c1 AS REAL))), rt0.c2, LIKELIHOOD(vt0.c0, 0.06413091108673141) COLLATE NOCASE FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT ALL CAST(((vt0.c0) BETWEEN ('ot+,') AND (rt0.c1)) AS BLOB) FROM rt0 WHERE (((((CASE WHEN x'' THEN 0.9766378611208884 ELSE x'4b62' END)OR(-2115347982)))AND(CAST('' AS BLOB))));SELECT ((((COALESCE(rt0.c0, rt0.c1))AND(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(vt0.c0)))))AND(((rt0.c0)/(x'cc70')))) FROM vt0, rt0 WHERE (((CAST('?q~ﳴRiVEr' AS REAL))<=((x'' IN ())))); -- 0ms;
SELECT ALL ((TRIM(DISTINCT rt0.c0)) BETWEEN (((0x14976883) BETWEEN (0.5284700348003487) AND (rt0.c2))) AND ((rt0.c2 IN ()))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c1)<=(x'7396'))), CAST('莫RX_F 녇o' AS REAL), (((((rt0.c1, rt0.c2, vt0.c0))==((rt0.c1, rt0.c1, vt0.c0)))) IS TRUE) FROM rt0, vt0 WHERE (CASE WHEN ('' IN (NULL)) THEN CASE WHEN x'' THEN x'' WHEN NULL THEN x'' WHEN NULL THEN NULL ELSE 0.6818715504442308 END END) LIMIT -994945298 OFFSET -1093245004; -- 1ms;
SELECT ((CAST(rt0.c2 AS BLOB))/(((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT ALL CAST((+ (rt0.c2)) AS REAL) FROM vt0;SELECT DISTINCT CAST((0Xffffffffef1be6cf IN (rt0.c0, rt0.c1)) AS NUMERIC) FROM rt0 WHERE (((((((((json_valid(-1551956951))OR(CAST(0x5f3e3510 AS NUMERIC))))OR(((0.568982823754285) BETWEEN (-1589718651) AND (-2.60833708E8)))))AND((NOT (x'78d0')))))OR((('3	䗠#uV')OR(NULL))))); -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN x'' ELSE rt0.c2 END) IS TRUE), MIN(ABS(vt0.c0)), (((((((((((rt0.c2))!=((rt0.c0))))AND(rt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(NULL COLLATE BINARY)))AND(SUM(vt0.c0))) FROM vt0;SELECT DISTINCT ((COUNT(rt0.c1))AND(vt0.c0)) FROM vt0, rt0 WHERE (((('sXㅿ7S', x'', '0.9400778759433974')) BETWEEN ((TRIM(DISTINCT x'', NULL), ('819045360' IN ()), 0.6378075047701327 COLLATE NOCASE)) AND ((((x'') NOT BETWEEN ('298947145') AND (x'4dce')), CAST('760588874' AS INTEGER), json_quote('%, '))))); -- 0ms;
SELECT DISTINCT (MIN(vt0.c0) IN ()) FROM vt0; -- 1ms;
SELECT ALL CAST(json(rt0.c1) AS INTEGER) FROM vt0, rt0 WHERE ((- ((NULL IN ('883622957'))))); -- 0ms;
SELECT ALL CASE (((0X2d7e3252))<((vt0.c0)))  WHEN 0.5420638199403458 THEN UNICODE(rt0.c0) ELSE ((rt0.c1)>=(rt0.c1)) END FROM rt0;SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) NOT NULL), (((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), (((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c0)) AND ((vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c2)))), ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN 0.701061798470577 THEN rt0.c1 END) BETWEEN (SUM(vt0.c0)) AND (((rt0.c2)%(rt0.c2)))), GROUP_CONCAT(COUNT(*)) FROM vt0, rt0 ORDER BY vt0.c0 DESC  NULLS FIRST, ((((((((vt0.c0)OR(rt0.c1)))OR((rt0.c1 IN (0.052243938992430516)))))AND((rt0.c0 IN (rt0.c2)))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) ASC;SELECT ALL (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) FROM vt0, rt0 GROUP BY ((rt0.c2 IN ()) IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN (rt0.c2)))>=(rt0.c0 COLLATE NOCASE)) FROM rt0, vt0; -- 0ms;
SELECT ALL GLOB(CASE WHEN rt0.c0 THEN rt0.c0 END, ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))), COUNT(*) OVER (), ((rt0.c0)|(x'a1aabf6f')) COLLATE RTRIM FROM rt0, vt0; -- 0ms;
SELECT (((((vt0.c0, vt0.c0, vt0.c0, rt0.c0, rt0.c0))>((rt0.c1, '293328429', rt0.c0, rt0.c1, rt0.c0))))+(rt0.c1 COLLATE NOCASE)) FROM vt0;SELECT ALL (- ((((rt0.c2))<((rt0.c1))))), rt0.c0, (+ (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((((CASE x'a135'  WHEN 0.277557011822094 THEN vt0.c0 ELSE vt0.c0 END)OR(((rt0.c1) ISNULL))))OR((- (rt0.c2)))))AND(((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))))AND((rt0.c2 IN (vt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT ((TRIM(DISTINCT rt0.c1, vt0.c0))<>(MAX(rt0.c1))) FROM rt0, vt0 WHERE (CAST(1783890189 AS REAL)); -- 0ms;
SELECT DISTINCT 0.29140569790992343, GROUP_CONCAT(CAST(rt0.c1 AS REAL)) OVER (), ((((SQLITE_COMPILEOPTION_GET('1072599502'))AND((((rt0.c2))<=((vt0.c0))))))AND(CAST(rt0.c0 AS BLOB))) FROM vt0, rt0 WHERE ((((NULL)=('-1977763955')) IN ())); -- 0ms;
SELECT (((rt0.c2 IN ())) NOTNULL) FROM vt0, rt0 WHERE (CAST(0X696c9ba8 AS TEXT)); -- 0ms;
SELECT DISTINCT (- (CAST(rt0.c2 AS REAL))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0) IS FALSE) COLLATE BINARY, CASE SQLITE_COMPILEOPTION_USED(vt0.c0)  WHEN (((rt0.c0))=((rt0.c0))) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN MAX(rt0.c1) THEN ((NULL)IS NOT(rt0.c0)) WHEN ((rt0.c1) ISNULL) THEN MIN('-419418617') WHEN rt0.c2 COLLATE BINARY THEN ((vt0.c0)>(rt0.c1)) WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c1 COLLATE BINARY END, ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) ISNULL) FROM rt0 WHERE ((CAST(0.06833337596533973 AS INTEGER) IN ()));SELECT DISTINCT LEAD((~ (CAST(vt0.c0 AS NUMERIC))), ((NULL IN ()) IN ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))), ((((CASE WHEN vt0.c0 THEN 193056907 ELSE vt0.c0 END)AND(x'')))AND((((vt0.c0))<=((vt0.c0)))))) OVER (), ((((rt0.c1)!=(rt0.c0)))LIKE(((((((((((((rt0.c2)OR(rt0.c0)))AND('now')))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))), CAST(rt0.c2 AS TEXT), 0X3460e0c1 COLLATE BINARY, ((((TYPEOF(0.009787525513402673))AND(rt0.c0 COLLATE BINARY)))OR(SQLITE_COMPILEOPTION_GET(rt0.c0))) FROM vt0;SELECT vt0.c0 FROM vt0, rt0 WHERE (((COALESCE(0.3991469560351282, 0.025262373096959556))%(((x'') NOTNULL)))); -- 0ms;
SELECT (((((rt0.c2)GLOB(vt0.c0)), 0.7373081291242944 COLLATE NOCASE, ((rt0.c0)IS NOT(rt0.c0))))!=(((rt0.c1 IN (rt0.c1, vt0.c0)), NULL, COUNT(vt0.c0)))), ((SQLITE_COMPILEOPTION_GET(rt0.c1))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)), '-1000883406' FROM rt0;SELECT ALL ((CAST(rt0.c2 AS TEXT))|(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))) FROM vt0;SELECT DISTINCT LAST_VALUE(CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) AS REAL)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (CASE 0.8790396190925952  WHEN rt0.c0 THEN rt0.c0 END IN (((rt0.c2)>(rt0.c0)))), NULL, (((vt0.c0)<=(vt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c1) NOT NULL), ((rt0.c0)|(rt0.c2)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END))!=((MAX(rt0.c0), (rt0.c2 IN ()), 'pe'))) FROM rt0 LIMIT -2068755743;SELECT DISTINCT ((TOTAL(rt0.c0)) NOTNULL), (((rt0.c1 COLLATE BINARY))<>((ABS(DISTINCT rt0.c0)))), CASE '-539190470'  WHEN rt0.c2 THEN rt0.c0 END COLLATE BINARY FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (- (rt0.c1 COLLATE NOCASE)) FROM rt0, vt0 WHERE (LIKELIHOOD(CASE x''  WHEN 0X70af80 THEN NULL END, 0.4474392749571279)); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT (vt0.c0 IN (rt0.c0, rt0.c1))), (- (rt0.c1)) COLLATE RTRIM, (((+ (rt0.c2))) BETWEEN (((rt0.c2) IS FALSE)) AND (CASE WHEN x'' THEN rt0.c2 END)) FROM vt0 WHERE (((((0.8066879416160976)==('0.352669034471472'))) IS FALSE));SELECT ALL (NOT ((((rt0.c1))<=((vt0.c0))))) FROM rt0, vt0 WHERE ((((x'' IN ())) NOTNULL)) ORDER BY CAST(((vt0.c0)>(rt0.c1)) AS REAL) DESC; -- 0ms;
SELECT ALL vt0.c0, COUNT(*), 'cxF5(3''鳠' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((MIN(vt0.c0)) ISNULL) FROM rt0;SELECT ALL HEX(((((rt0.c0)AND(vt0.c0)))OR(rt0.c2))), CAST(rt0.c1 AS TEXT), 0.5386560434984813 FROM vt0, rt0; -- 0ms;
SELECT rt0.c1 FROM vt0, rt0 WHERE (TOTAL_CHANGES()); -- 1ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))>>((((rt0.c0, 1129888167, rt0.c2, vt0.c0, rt0.c0))<>((rt0.c0, rt0.c1, vt0.c0, rt0.c1, rt0.c2))))) FROM vt0;SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (UNLIKELY(TRIM(DISTINCT 0.9344147027385784, NULL))) LIMIT -239851170; -- 0ms;
SELECT CASE CAST(x'' AS INTEGER)  WHEN ((vt0.c0)<=(rt0.c2)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (rt0.c2 IN ()) THEN ((vt0.c0)<<(vt0.c0)) WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END WHEN TIME(rt0.c2, rt0.c0, rt0.c1, -1.774687533E9, rt0.c2) THEN ((rt0.c2)<=(NULL)) WHEN rt0.c0 COLLATE BINARY THEN LIKELIHOOD(rt0.c2, 0.8723413686397595) ELSE (((0.05807652153803822, rt0.c0, 'E6塅'))<=((rt0.c2, rt0.c0, rt0.c2))) END, (+ (((rt0.c2) IS TRUE))), x'2f67e61a' COLLATE NOCASE FROM rt0 ORDER BY (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE -5.73668437E8 END))>=((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))) ASC  NULLS FIRST, UNLIKELY(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST;SELECT ALL NULL FROM rt0 WHERE (CAST(((((0.270176915004118)OR('103378441')))OR(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT CASE 0.884236124723772  WHEN (vt0.c0 IN ()) THEN (- (vt0.c0)) WHEN (- (rt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)) WHEN (rt0.c2 IN ()) THEN CAST(rt0.c0 AS REAL) WHEN (NOT (vt0.c0)) THEN TRIM(rt0.c2) END FROM vt0 WHERE (CASE WHEN CAST('-199740560' AS BLOB) THEN ('}tzPLv' IN ()) END);SELECT DISTINCT (((rt0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c2, rt0.c2)))), (((((rt0.c1, vt0.c0, rt0.c2))>((vt0.c0, rt0.c0, rt0.c0)))) BETWEEN ((- (rt0.c1))) AND (CAST(rt0.c2 AS REAL))), 0.9116363546657145 COLLATE NOCASE FROM vt0, rt0; -- 1ms;
SELECT DISTINCT CASE ((rt0.c0)||(rt0.c0))  WHEN ('' IN ()) THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END END FROM rt0 WHERE (((CASE WHEN 0.046217162485636676 THEN NULL ELSE 484489452 END)IS(MAX(NULL, '582567275', x'a7bb', 0.6397244170109792)))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, rt0 WHERE ('-122369874'); -- 0ms;
SELECT DISTINCT ((NULL) BETWEEN (((rt0.c2)>=(rt0.c0))) AND ((((vt0.c0))=((vt0.c0))))) FROM rt0, vt0 WHERE ((- (((((x'')OR('813399064')))AND(x'e3e0a772'))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))LIKE((vt0.c0 IN ()))) FROM vt0, rt0 WHERE (0.136600570424378); -- 0ms;
SELECT COUNT(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) OVER () FROM vt0 ORDER BY TYPEOF(DISTINCT 0.514671850305187 COLLATE BINARY)  NULLS FIRST;SELECT DISTINCT rt0.c2, CASE CAST(rt0.c1 AS BLOB)  WHEN ((vt0.c0)<=(vt0.c0)) THEN rt0.c1 COLLATE NOCASE END, CAST(rt0.c2 COLLATE BINARY AS NUMERIC) FROM vt0 LIMIT -1743131137;SELECT DISTINCT LAST_VALUE('1273195452') OVER (), CASE WHEN ((vt0.c0)&('')) THEN CAST(rt0.c2 AS TEXT) ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END, COUNT(((vt0.c0)/(rt0.c1))) FROM vt0 LIMIT 1524186718;SELECT DISTINCT ((CASE WHEN vt0.c0 THEN '154680880' END)>>(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)), (((vt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1))) COLLATE NOCASE, rt0.c1 FROM rt0 WHERE (((((+ (NULL))))>(((((x'4ae9', NULL, '1565328607'))<((x'', 0X7d44f8c9, 0.7329894588397984)))))));SELECT ALL ((((vt0.c0)*(vt0.c0))) BETWEEN ((~ (rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))) FROM rt0 WHERE ((((((x'c89e') ISNULL), ((0.9505502795246026)<=(NULL)), ('邩g\n''R' IN ('103378441'))))!=((NULL COLLATE RTRIM, (-3.19464987E8 IN ()), '.Y'))));SELECT ALL ((((rt0.c1) IS FALSE)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (rt0.c0 COLLATE NOCASE)) FROM rt0, vt0; -- 0ms;
SELECT ALL (((((x'')OR(rt0.c1)))OR(rt0.c2)) IN ()), rt0.c2, ROW_NUMBER() OVER () FROM rt0, vt0 WHERE ((~ (JULIANDAY(x'', 0.08877908291767045, -664737974)))); -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT ALL CUME_DIST() OVER ( ORDER BY ((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c1)))OR((rt0.c2 IN ()))))AND(rt0.c1)) ASC  NULLS LAST), (- (CASE WHEN rt0.c1 THEN rt0.c0 END)), (((rt0.c0) IS FALSE) IN (x'')) FROM vt0 WHERE (881893062);SELECT ALL CAST(((x'') ISNULL) AS TEXT) FROM vt0 WHERE (x''); -- 0ms;
SELECT FIRST_VALUE(CASE WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0)+(vt0.c0)) WHEN json_object(vt0.c0, vt0.c0) THEN ('1805184889' IN ()) WHEN NULL THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) OVER (), ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))OR(CAST(vt0.c0 AS BLOB))), CAST(((vt0.c0)!=(rt0.c1)) AS NUMERIC) FROM vt0 WHERE ((~ (('757100191' IN (0Xfffffffff8b4c8ae)))));SELECT DISTINCT '㚉좮' FROM rt0 WHERE ((('1011657731') BETWEEN (x'') AND (NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)IS(rt0.c1)))OR(0.9088718606258167)))OR(((((((((rt0.c1)OR(5.37916225E8)))OR(0.7521488544007788)))AND(rt0.c2)))AND(rt0.c0)))), (((((rt0.c2)=(rt0.c2))))=((CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))), ((((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(0.7960862780972618)))AND(rt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c2)LIKE('-1e500')))) FROM vt0 WHERE ((((0.507598085960048)) NOT BETWEEN ((((0.5284700348003487) BETWEEN (0.6896578257606227) AND (-206497598)))) AND ((0.32384555125782144))));SELECT DISTINCT (MIN(rt0.c2, rt0.c2, rt0.c2, vt0.c0) IN ()) FROM vt0; -- 0ms;
SELECT ALL NULLIF(((0.6889337239283514)>>(rt0.c2)), rt0.c0), rt0.c2, SUM(GROUP_CONCAT((NOT (rt0.c1)))), ((((((rt0.c2)IS NOT(rt0.c2)))AND(MIN(NULL))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))), (((rt0.c2 IN ()))GLOB(ABS(rt0.c0))) FROM vt0, rt0;SELECT ALL IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), '') FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE (((CAST(0.1955137557916259 AS BLOB)) NOT BETWEEN (LIKE(x'', 'X', '6')) AND (((((x'')AND(x'')))OR(0.10698332898924201))))) ORDER BY (PRINTF(rt0.c2) IN ()) ASC  NULLS LAST; -- 0ms;
SELECT CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((vt0.c0) IS FALSE) WHEN CASE x''  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c1)AND(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END THEN (NOT (rt0.c1)) END, (((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(((rt0.c2)<=('Is㪅X T')))))AND((~ (vt0.c0)))), (((vt0.c0 IN ()))&(vt0.c0 COLLATE NOCASE)) FROM rt0;SELECT DISTINCT FIRST_VALUE(((((vt0.c0)*(vt0.c0)))AND(vt0.c0 COLLATE NOCASE))) OVER () FROM vt0 WHERE (((((NULL)GLOB(0xffffffff809e2028))) ISNULL)) GROUP BY (- (load_extension(0xffffffffc7bffc1d)));SELECT ((rt0.c0)-(rt0.c1)) COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE CASE rt0.c0  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 END  WHEN (rt0.c0 IN ()) THEN ((rt0.c2)>>(rt0.c0)) END, TOTAL(CAST(rt0.c2 AS TEXT)) OVER (), HEX(DISTINCT (((vt0.c0, 'V,', vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, 1706766747)) AND ((rt0.c0, rt0.c2, rt0.c2)))) FROM vt0 LIMIT -1507210533 OFFSET 1486030873;SELECT TOTAL_CHANGES(), CASE WHEN ((((x'065a')OR(rt0.c1)))AND(rt0.c0)) THEN ((vt0.c0)+(rt0.c2)) END, CAST((((rt0.c1, rt0.c2, rt0.c0))>=((vt0.c0, rt0.c1, rt0.c2))) AS NUMERIC) FROM rt0, vt0 WHERE ((((x'', NULL, '')) NOT BETWEEN (((x'8b75' IN ()), (('-658822469') NOT BETWEEN (NULL) AND (NULL)), CAST(x'' AS INTEGER))) AND (((((NULL))=(('1689599259'))), CASE x''  WHEN x'' THEN x'' WHEN 'Tw' THEN NULL WHEN NULL THEN NULL ELSE 0.06843582820193839 END, 'ZF' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT (- ((+ (vt0.c0)))) FROM vt0 WHERE ((NOT (((NULL)|(0.4544738293290892))))); -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c2 AS NUMERIC))OR((~ (rt0.c1)))))AND((vt0.c0 IN ()))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((+ (vt0.c0))) NOT BETWEEN ((rt0.c1 IN (rt0.c1, x'07ed6265'))) AND (((rt0.c2)IS('2126039707')))), ((CAST(vt0.c0 AS NUMERIC))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), MIN(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0))) FROM vt0;SELECT ALL (NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)))), CAST(NULLIF(vt0.c0, NULL) AS BLOB), (((vt0.c0)==(rt0.c1)) IN ()) FROM vt0 WHERE (CAST(((x'') ISNULL) AS INTEGER));SELECT ALL MIN(CASE WHEN vt0.c0 THEN 'o''ᳮ㌰' WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c1 ELSE rt0.c0 END), CAST((((rt0.c2, rt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c1))) AS BLOB), ((((NULL) NOT NULL))=(CASE '-1225260999'  WHEN vt0.c0 THEN rt0.c2 END)) FROM rt0, vt0; -- 1ms;
SELECT ALL ((GROUP_CONCAT(rt0.c0))OR((+ (rt0.c0)))), TOTAL(((rt0.c2) NOTNULL)), (((vt0.c0)IS(rt0.c1)) IN (json_array_length(rt0.c1, vt0.c0))), NULL, (((0.514671850305187)) NOT BETWEEN ((')pf-V^')) AND ((NULL))) FROM rt0;SELECT COUNT(((((rt0.c1)AND(vt0.c0)))OR(vt0.c0))) OVER () FROM rt0;SELECT DISTINCT TOTAL(rt0.c1) OVER () FROM vt0 WHERE (((((NULL) ISNULL)) NOT BETWEEN (((0.5723245022414296)<=(NULL))) AND (((('oF')) BETWEEN ((x'')) AND (('-317812619'))))));SELECT ((((rt0.c2)<(rt0.c1))) BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS REAL))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)=(rt0.c1)) IN (MIN(rt0.c0))) FROM rt0, vt0 WHERE (((CASE WHEN 0xffffffffa634e2ec THEN NULL ELSE 0.006947793756179044 END) NOT BETWEEN (CASE WHEN NULL THEN 451416235 END) AND (((1618547180) ISNULL)))); -- 0ms;
SELECT DISTINCT vt0.c0, 'Wz', ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))GLOB(rt0.c1 COLLATE BINARY)) FROM rt0, vt0; -- 0ms;
