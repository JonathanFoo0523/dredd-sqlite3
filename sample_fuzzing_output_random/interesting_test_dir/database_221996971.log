-- Time: 2024/06/07 17:25:58
-- Database: database71
-- Database version: 3.40.0
-- seed value: 221996971
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT ); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, +c3 BLOB ); -- 0ms;
END; -- 1ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(0.5367806855044969, 0.9980211949450608); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''); -- 0ms;
UPDATE OR FAIL t0 SET c0='0.5367806855044969' WHERE ((((t0.c0)<=(t0.c0))) BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND ((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))); -- 0ms;
END TRANSACTION; -- 4ms;
ALTER TABLE t0 ADD COLUMN c81 REAL; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c81 TO c84; -- 9ms;
UPDATE OR IGNORE rt1 SET c3='' WHERE ((UPPER(rt1.c3))|(((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c3)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c84)=(NULL, ''); -- 0ms;
INSERT OR REPLACE INTO rt1(c3) VALUES (x''); -- 0ms;
UPDATE OR IGNORE t0 SET c84='i', c84=0.4545116118477073 WHERE CAST(((t0.c84) NOTNULL) AS INTEGER); -- 0ms;
UPDATE rt1 SET (c0)=('314650034') WHERE ((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 WHEN '314650034' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c3 END)|(((0x7bbddd87)*(rt1.c1)))); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'c57f', 0.6924228469876992); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES (NULL, ''); -- 0ms;
UPDATE OR ABORT t0 SET c0=0X12c12db2, c0=NULL, c0='!rR' WHERE (((((('*t')OR(t0.c0)))OR(t0.c0)))*(0Xffffffffc720ebd5 COLLATE BINARY)); -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO t0(c0, c84) VALUES (0.6560535266054401, 0.7833596794101255), (x'', 0x32d5384f), (0.6018216139737728, 0.17207135589862776); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (0.9980211949450608), (x'8b33'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET (c0, c0)=(0.30384823983690223, x''); -- 1ms;
UPDATE OR ROLLBACK t0 SET (c0)=(x'') WHERE (((t0.c84) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c60 BLOB; -- 1ms;
END; -- 0ms;
DROP TABLE rt1; -- 0ms;
REINDEX  t0; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c60, c84) VALUES (786927664, 0.06890608246726038, 0.278763961632877), (448144565, '1476127344', 4.48144565E8), (NULL, x'', '1669199971'), ('', 0.06890608246726038, 0x7ba74cc9), (x'', 0.7252410905263046, 0.5688861163236973), (0.4643395693766158, 0.8044624027122674, '174505389'), ('-1976165935', 0.5688861163236973, NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c84) VALUES (NULL), (0Xffffffffae4ce572), ('-558055938'); -- 0ms;
UPDATE OR IGNORE t0 SET c60=x''; -- 0ms;
PRAGMA main.mmap_size = -2857110387061799879; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c60) VALUES (0.06890608246726038, '2074561737'); -- 0ms;
UPDATE t0 SET c60='786927664'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1990582085', x'c1bf', 0.20663378943378718); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0x673f4ef1, NULL, '532022221'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR REPLACE t0 SET c0=x'c252', c0='', c0=-5.58055938E8 WHERE (((NULL IN ())) NOT NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO t0(c60, c0, c84) VALUES (NULL, 0.9244522241369222, 0.30384823983690223); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(0Xffffffffb803de00) WHERE ((((t0.c60)) BETWEEN (('1546535911')) AND ((t0.c84))) IN ()); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE t0 SET c60='448144565' WHERE (((t0.c60))==((t0.c84))) COLLATE RTRIM; -- 0ms;
PRAGMA temp.threads; -- 0ms;
PRAGMA journal_mode; -- 0ms;
INSERT OR FAIL INTO t0(c60, c84, c0) VALUES ('[pf,<dsU', x'', '314650034'), (x'78ad95b2', 0.4212979970520082, 0.02399718520933969), (NULL, '-2147395590', x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET c84=NULL WHERE (((((t0.c84)OR(t0.c0)))OR(t0.c60)) IN ()); -- 0ms;
ALTER TABLE t0 ADD COLUMN c52 TEXT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
UPDATE t0 SET (c84)=(0X7ba74cc9); -- 11ms;
UPDATE t0 SET c0=NULL, c0=x''; -- 1ms;
VACUUM main; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c60) VALUES (x'5167'); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(x'') WHERE '2009171172'; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR REPLACE t0 SET (c0, c60)=(NULL, '-9223372036854775808') WHERE CASE ((x'0591') NOT BETWEEN (t0.c60) AND (t0.c60))  WHEN t0.c84 THEN (((t0.c84, t0.c84, t0.c0)) NOT BETWEEN ((t0.c84, NULL, t0.c84)) AND ((t0.c0, 0.621324758811005, NULL))) ELSE ((t0.c0)+(t0.c84)) END; -- 0ms;
REINDEX; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c75 BLOB; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.20663378943378718; -- 0ms;
PRAGMA main.busy_timeout = 10000; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
UPDATE OR IGNORE t1 SET c75=NULL, c60='-954143787' WHERE ((((((((x'')OR(NULL)))OR(((t1.c84) IS FALSE))))AND(((((t1.c75)AND(t1.c60)))AND(t1.c75)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c84)))); -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ((((t0.c60) IS TRUE)) NOT BETWEEN (t0.c75 COLLATE NOCASE) AND (TOTAL(t0.c84))), CASE WHEN ((t0.c60)AND(t0.c75)) THEN ((t0.c60) BETWEEN (t0.c0) AND (t0.c60)) ELSE (((t0.c60)) BETWEEN ((t0.c0)) AND ((t0.c60))) END, (NOT (((t0.c0) BETWEEN (t0.c84) AND (t0.c0)))) FROM t0 WHERE (CASE SQLITE_SOURCE_ID()  WHEN CAST('*z3' AS REAL) THEN ((0.8788812283099391)<=(-1.207706112E9)) WHEN CASE WHEN -866838732 THEN 1852849079 ELSE 0.7252410905263046 END THEN (('448144565') ISNULL) WHEN 'EGM''al' THEN CAST('' AS TEXT) ELSE (((0.5727984042237347, 'PIq[Bb', -1325967323)) BETWEEN ((NULL, x'', 'EGM''AL')) AND ((2076040583, '*t', -1507725644))) END) GROUP BY t0.c75 LIMIT -150822574; -- 1ms;
SELECT ((TIME(t0.c0, t0.c0, 0xffffffff85822b8f, t0.c0, -1316752569))!=(((t0.c84) BETWEEN ('-1587864379') AND (t0.c0)))), ((CASE t0.c60  WHEN t0.c60 THEN t0.c0 END)+(((t0.c60)&(t0.c0)))), ((('-1587864379')) NOT BETWEEN (('-1207706112')) AND ((CAST(t0.c75 AS INTEGER)))) FROM t0 WHERE (((CASE NULL  WHEN '-}M' THEN x'27450f03' ELSE 0.7187944452913124 END)&(((((NULL)OR(x'')))OR(4.48144565E8))))) GROUP BY ((TRIM(t0.c60)) NOT BETWEEN (((((t0.c84)AND(t0.c75)))AND(t0.c0))) AND (((t0.c60) NOT NULL))) ORDER BY (CASE t0.c60  WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN NULL WHEN t0.c60 THEN t0.c0 END IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((t0.c0)!=(x''))) IS TRUE) FROM t0; -- 0ms;
SELECT SUM(((t0.c75) NOT BETWEEN (t0.c60) AND (0xffffffff85822b8f))) OVER ( RANGE  CURRENT ROW), TOTAL(CASE t0.c84  WHEN t0.c60 THEN t0.c75 END COLLATE BINARY) OVER ( ROWS (((t0.c75)) BETWEEN ((((((t0.c84)OR(t0.c84)))OR(t0.c0)))) AND ((t0.c84 COLLATE BINARY))) PRECEDING), t0.c75 FROM t0;SELECT (- (((((t0.c84)AND(t0.c60)))AND(t0.c75)))) FROM t0 WHERE ((((x'b13e')) NOT BETWEEN (((('kI9G[]') BETWEEN (NULL) AND (x'')))) AND ((((-1.990582085E9)>(NULL)))))) ORDER BY (((NOT (t0.c60)))-(HEX(DISTINCT t0.c84))) DESC; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c84 AS REAL) AS TEXT), (CAST(t0.c0 AS TEXT) IN ()), MAX(CASE WHEN NULL THEN t0.c0 ELSE t0.c60 END, ((t0.c0)&(t0.c84))), (((t0.c0) ISNULL) IN ()), t0.c84 FROM t0 WHERE ((+ (NULL)) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((((t0.c60)AND(t0.c0)))OR(t0.c84)))IS('-954143787')) FROM t0 WHERE ((((('^b*8<%') IS FALSE)) NOT NULL)) ORDER BY (((((((t0.c75))>=((t0.c84))))AND(x'56ca')))AND((+ (t0.c60)))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY ((t0.c75 COLLATE NOCASE)-(0xffffffffb0f75825)), ((((x'')AND(((t0.c84)IS(t0.c84)))))AND(((t0.c84)>=(t0.c60)))) ASC  NULLS FIRST) FROM t0 WHERE (((((((((((0.11191826972770391) IS TRUE))AND((((NULL))<=(('*Thg-㏋₻N'))))))OR((((('-239147197')AND(0.5479160717665496)))AND(NULL)))))AND((+ (NULL)))))OR(NULLIF(NULL, NULL)))); -- 0ms;
SELECT CASE WHEN ((((x'')OR(t0.c84)))OR(t0.c0)) THEN ((((t0.c84)OR(t0.c84)))AND(t0.c84)) WHEN '*Z3' THEN t0.c84 COLLATE NOCASE WHEN CAST(t0.c75 AS TEXT) THEN t0.c0 COLLATE RTRIM ELSE (~ (t0.c0)) END FROM t0; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(LIKELIHOOD(DISTINCT t0.c0, 0.19417618907227896)) OVER ( ORDER BY ((((t0.c75)=(t0.c60)))!=(((t0.c60)+(t0.c60))))) FROM t0 LIMIT -1785116479; -- 0ms;
SELECT DISTINCT ((((((t0.c60)AND(NULL)))AND(t0.c75)))OR(((t0.c0) NOTNULL))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c84)) NOT BETWEEN ((t0.c75)) AND ((t0.c60))) IN ()) FROM t0 WHERE (((('>T', '\nN', NULL)) BETWEEN (((~ ('')), 0.5477658548587265, ((0.621324758811005) ISNULL))) AND ((NULL COLLATE NOCASE, ((('')) BETWEEN (('0.7187944452913124')) AND ((x''))), ((x'')<<(x'ad17')))))); -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM t0 WHERE ((- (((0.4758205284480691) BETWEEN (0.27911468207404644) AND (NULL))))); -- 0ms;
SELECT DISTINCT (- (UPPER(DISTINCT t0.c0))) FROM t0 WHERE ((((('-954143787')AND('^붭')))AND(x'b5bd')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT 'ⳛ1몔' FROM t0; -- 0ms;
SELECT FIRST_VALUE(0.38434713445138335 COLLATE RTRIM) OVER ( ORDER BY CAST(0x1efb07d9 AS INTEGER) DESC  NULLS LAST) FROM t0 WHERE (((((x'2a06') NOT BETWEEN ('-783921886') AND ('732326083'))) NOTNULL)) GROUP BY ((((t0.c84) IS FALSE)) BETWEEN ('u^wgRv₻') AND (t0.c84 COLLATE NOCASE)) ORDER BY (((t0.c84) NOT BETWEEN (t0.c0) AND (t0.c60)) IN (((t0.c75) IS FALSE), ((t0.c60) NOT BETWEEN (t0.c75) AND (t0.c60)))) DESC  NULLS LAST; -- 0ms;
SELECT ALL 2127840824, CAST(SQLITE_COMPILEOPTION_USED(t0.c75) AS BLOB), ((((t0.c0)AND(t0.c84 COLLATE BINARY)))OR(t0.c0 COLLATE RTRIM)) FROM t0 WHERE (((IFNULL(946967809, x''))GLOB(CASE WHEN x'' THEN '<U+aMHlD' END))); -- 0ms;
SELECT DISTINCT ((((((((0Xffffffff84529e08)OR(t0.c75)))AND(((t0.c0)<<(t0.c75)))))AND((((t0.c75))>=((t0.c75))))))AND(GLOB(t0.c84, t0.c60))) FROM t0 WHERE (CASE WHEN ((x'')!=(0x223fdec4)) THEN ((NULL) BETWEEN (x'ad79') AND (NULL)) WHEN ((2.127840824E9) NOT BETWEEN (NULL) AND ('')) THEN x'' COLLATE BINARY WHEN json_remove(NULL, NULL) THEN ((0.935137503847334) BETWEEN (x'') AND ('bc')) END); -- 1ms;
SELECT DISTINCT CAST(CAST(t0.c75 AS INTEGER) AS TEXT), CASE WHEN COUNT(*) THEN (t0.c75 IN (t0.c84, t0.c75)) ELSE CASE WHEN t0.c84 THEN t0.c60 ELSE t0.c84 END END, (((- (t0.c84)))OR(t0.c84 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT DISTINCT (- (((t0.c0) NOTNULL))) FROM t0; -- 0ms;
SELECT t0.c84 FROM t0; -- 0ms;
SELECT ALL ABS(DISTINCT t0.c60 COLLATE RTRIM) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(0.4709123228948916 AS BLOB))/(((t0.c60) BETWEEN (t0.c0) AND (t0.c75)))) FROM t0 ORDER BY (((((((((((t0.c60)) NOT BETWEEN ((t0.c60)) AND ((t0.c0))))AND(CASE WHEN t0.c75 THEN t0.c84 ELSE t0.c60 END)))OR(CAST(t0.c60 AS BLOB))))AND(t0.c60 COLLATE RTRIM)))AND((t0.c75 IN ()))) ASC  NULLS FIRST;SELECT DISTINCT ((x'') BETWEEN ((t0.c84 IN (t0.c0))) AND ((((NULL, t0.c60, t0.c0))>=((t0.c84, t0.c84, t0.c84))))) FROM t0 WHERE ((~ ('jT'))); -- 0ms;
SELECT ALL COUNT(((t0.c0) BETWEEN ('-492490324') AND (t0.c60))) OVER () FROM t0 ORDER BY CAST(((t0.c0)AND(x'')) AS TEXT) ASC; -- 0ms;
SELECT DISTINCT CAST(((t0.c84)<(t0.c60)) AS INTEGER), (~ (LIKELY(t0.c60))), (NOT (MAX(t0.c84))) FROM t0; -- 0ms;
SELECT ALL ((((t0.c0)*(t0.c60))) IS TRUE) FROM t0 LIMIT 438833601 OFFSET 1155774597; -- 0ms;
SELECT DISTINCT ((0X2b6ab464)!=(0.39326520430403233)) FROM t0; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT ((json_extract(t0.c75, t0.c0, t0.c60, t0.c60))||((- (t0.c75)))) FROM t0; -- 0ms;
SELECT ALL CAST(((t0.c0) BETWEEN (t0.c84) AND (t0.c60)) AS BLOB) FROM t0; -- 0ms;
SELECT ALL ((UNLIKELY(DISTINCT t0.c60))GLOB(((((t0.c0)OR(t0.c0)))AND(t0.c0)))), CAST(CASE t0.c75  WHEN t0.c60 THEN NULL END AS NUMERIC), LEAD((((0.07790319477026286) NOT NULL) IN ()), t0.c84, ((((((t0.c0)>(t0.c84)))AND((NOT (t0.c84)))))OR(''))) OVER (), TOTAL(json_quote(t0.c75) COLLATE BINARY), ((x'3592b3fa') IS TRUE) FROM t0 WHERE (UPPER(((x'')<<('-492490324')))); -- 1ms;
SELECT DISTINCT ((((t0.c60)OR(t0.c60)))AND(t0.c0)) COLLATE NOCASE FROM t0 GROUP BY (((((((((((t0.c0))=((t0.c60))))OR(t0.c0 COLLATE RTRIM)))AND((- (NULL)))))AND(CAST(t0.c75 AS TEXT))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c75)))), ((CAST(t0.c0 AS BLOB)) NOTNULL), (((((((t0.c75)OR(t0.c75)))AND(t0.c75))))=((((t0.c0) NOTNULL)))); -- 0ms;
SELECT ALL (((t0.c60)-(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))>=(((0x17b8c6f4) NOT BETWEEN (t0.c75) AND (t0.c60)))), MIN(TYPEOF(DISTINCT t0.c75)), ((((((((t0.c84)AND(t0.c75)))AND((t0.c75 IN ()))))OR(t0.c0)))AND(((t0.c84) NOT NULL))) FROM t0 WHERE (((((NULL)IS NOT('1732202225')))>(('' IN ())))); -- 0ms;
SELECT DISTINCT (- ((t0.c75 IN ()))), rtreenode(x'', ''), (((((x'') BETWEEN (t0.c0) AND (t0.c75))))<=((t0.c60 COLLATE BINARY))), (((t0.c84)) BETWEEN ((((t0.c84) IS FALSE))) AND ((((t0.c0) BETWEEN (t0.c84) AND (t0.c84))))), ((((((((t0.c84)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM FROM t0 WHERE (0.7492998793907909) LIMIT -971044232; -- 0ms;
SELECT DISTINCT (((t0.c84 IN ())) NOT NULL) FROM t0 NOT INDEXED ORDER BY ''  NULLS LAST; -- 0ms;
SELECT ALL ((AVG(NULL)) NOT BETWEEN (CAST(t0.c60 AS NUMERIC)) AND (((t0.c60)LIKE(t0.c60)))) FROM t0 WHERE (CASE (- (NULL))  WHEN CASE ''  WHEN 'LBkj(TO' THEN 0.8557318296049912 ELSE '' END THEN ((-1220320438) IS TRUE) WHEN ((x'')+(x'50396172')) THEN CAST(x'' AS BLOB) WHEN load_extension(7.28413284E8) THEN ((((0.4218567377236161)OR(',~P~')))OR(-815662969)) END);SELECT (+ ((NOT (t0.c0)))) FROM t0 WHERE (x'') GROUP BY json_quote(CAST(t0.c0 AS BLOB)) HAVING ((((t0.c60)|(t0.c0))) NOTNULL); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c75 THEN t0.c60 ELSE t0.c60 END COLLATE BINARY, ((UNLIKELY(t0.c75))IS((((t0.c0)) NOT BETWEEN ((t0.c60)) AND ((t0.c0))))), ((((((((GROUP_CONCAT(t0.c60))OR(CAST(t0.c75 AS TEXT))))OR(LIKE(t0.c0, t0.c75, 'n'))))AND(LOWER(DISTINCT t0.c75))))OR((('Clߙ-Jw') IS TRUE))) FROM t0; -- 1ms;
SELECT ALL ((((+ (t0.c60)), ((t0.c0)+(t0.c75)), COUNT(*)))<=((t0.c60, TYPEOF(DISTINCT 0.8520586746989804), CAST(t0.c0 AS INTEGER)))), (((t0.c84 IN (t0.c84, t0.c0))) BETWEEN ((+ (NULL))) AND (t0.c84 COLLATE NOCASE)), ((CAST(t0.c84 AS BLOB))>=(t0.c75)) FROM t0 WHERE (((UPPER(DISTINCT x''))>((NULL IN ())))); -- 0ms;
SELECT SUM((((t0.c60)) NOT BETWEEN ((t0.c75)) AND ((t0.c0)))), 1390856111, AVG(t0.c75) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS REAL)) IS FALSE) FROM t0 WHERE ((((((('1337792674')OR(0.7692302187943432)))AND('')))<<(0.4060813534467358 COLLATE RTRIM))); -- 0ms;
SELECT ALL (- (t0.c60 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT ALL NULL FROM t0 WHERE (('7|d' IN ())); -- 0ms;
SELECT ALL (('뢅#') IS TRUE) FROM t0; -- 0ms;
SELECT ALL ((t0.c84 COLLATE BINARY) IS FALSE) FROM t0 WHERE (0Xffffffff895a20bb); -- 0ms;
SELECT DISTINCT ((CAST(t0.c60 AS BLOB)) IS FALSE), x'', ((GROUP_CONCAT(t0.c60)) BETWEEN (((t0.c75) ISNULL)) AND (CAST(t0.c60 AS INTEGER))) FROM t0; -- 0ms;
SELECT RANK() OVER () FROM t0 WHERE (((((x'')GLOB(x'')))<<((('') IS TRUE)))); -- 0ms;
SELECT ALL TYPEOF(t0.c75 COLLATE BINARY), CASE WHEN (((t0.c60))<((t0.c84))) THEN CAST(t0.c84 AS BLOB) ELSE SUM(t0.c60) END, 0.8120843832609412 FROM t0;SELECT (((((('0.20663378943378718') NOT BETWEEN (t0.c60) AND (t0.c75)))AND(((t0.c60) IS TRUE))))AND((((t0.c75, t0.c75, t0.c0))>=((t0.c75, t0.c0, t0.c84))))) FROM t0 WHERE ((((- (1.390856111E9)))<(((1762159343)>('2076040583'))))); -- 0ms;
SELECT DISTINCT ((((CASE WHEN t0.c0 THEN t0.c75 ELSE t0.c75 END)OR((((t0.c60, t0.c60, t0.c60))<((t0.c0, t0.c0, t0.c0))))))OR(SUM(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT (+ (MIN(t0.c0))) FROM t0 WHERE (json_quote(((x'') IS FALSE))); -- 1ms;
SELECT TRIM(DISTINCT rtreenode(t0.c84, t0.c60), CASE WHEN t0.c84 THEN t0.c75 END) FROM t0; -- 0ms;
SELECT DISTINCT t0.c75 FROM t0; -- 0ms;
SELECT ((((((t0.c84)AND(t0.c84)))OR(t0.c0))) BETWEEN (((t0.c75) NOT BETWEEN (t0.c0) AND (t0.c75))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c60)))) FROM t0; -- 0ms;
SELECT DISTINCT '728413284' FROM t0 WHERE (CASE ((0.6893003943577908) NOT BETWEEN ('~oA㏋/') AND (0.17207135589862776))  WHEN ((0.48808952330964295)AND(0X5692ec16)) THEN ((((x'3230e48c')AND(NULL)))AND(NULL)) END) GROUP BY (((+ (t0.c84))) NOT BETWEEN (CAST(t0.c60 AS REAL)) AND (((t0.c75) NOT NULL))), LIKELIHOOD(DISTINCT ((NULL)&(t0.c75)), 0.7738478478332548), (((~ (x'')))OR(t0.c75)), ((((t0.c75)+(t0.c0))) IS TRUE), ((('') IS FALSE) IN (t0.c75)) HAVING (((t0.c0 COLLATE BINARY, LTRIM(t0.c0, t0.c60), x'', CASE WHEN t0.c75 THEN t0.c60 END, ((t0.c0)-(t0.c60))))>((json_quote(t0.c60), ((t0.c0) NOT BETWEEN (NULL) AND (t0.c60)), CAST(t0.c75 AS INTEGER), AVG(t0.c60), ((((t0.c84)AND(t0.c60)))AND(t0.c75))))); -- 0ms;
SELECT t0.c75 FROM t0; -- 0ms;
SELECT ALL (((((t0.c60)) NOT BETWEEN ((t0.c75)) AND ((t0.c60)))) IS TRUE), (TOTAL(t0.c0) IN ((~ (t0.c84)), json_patch(t0.c84, t0.c84))), '' FROM t0; -- 0ms;
SELECT COUNT(CASE t0.c75  WHEN t0.c0 THEN t0.c60 END) OVER () FROM t0 WHERE ('gXP੸%k'); -- 0ms;
SELECT ALL ((((TRIM(DISTINCT t0.c75, t0.c75))OR(((((((((t0.c75)OR(x'')))AND(t0.c84)))AND(t0.c0)))OR(t0.c84)))))AND((t0.c0 IN ()))) FROM t0 WHERE ((((-377632227 IN ('稪xX%GK', 0.29617219969085806)))>>(((((-216596859)OR(0xffffffffab87712a)))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((((t0.c84) NOT BETWEEN (t0.c60) AND (t0.c0)))>>((NOT (t0.c60)))) FROM t0; -- 0ms;
SELECT ALL ((((((t0.c0)%(t0.c84)))OR((~ (t0.c75)))))AND(7.32326083E8)), t0.c0, ((0.44417172378578107) BETWEEN (CAST(t0.c0 AS TEXT)) AND ((((('-1525706615')AND(t0.c84)))OR(t0.c84)))) FROM t0; -- 0ms;
SELECT ALL CAST(-942061201 AS INTEGER) FROM t0 WHERE ((((0X2b6ab464)) NOT BETWEEN ((CAST(0Xffffffff9fae32ca AS REAL))) AND ((NULL COLLATE RTRIM)))); -- 0ms;
SELECT CASE WHEN (((t0.c84))>=((x''))) THEN (((t0.c84, 'R+CsbJ]*-', t0.c84)) BETWEEN ((t0.c75, t0.c75, t0.c0)) AND ((t0.c60, x'', t0.c0))) ELSE COUNT(t0.c60) END FROM t0; -- 1ms;
SELECT ((t0.c60)IS NOT(CAST(t0.c60 AS BLOB))) FROM t0 WHERE ((((3.97985524E8 COLLATE RTRIM))<>(((((('-783921886')AND(x'')))AND(-1.507725644E9)))))); -- 0ms;
SELECT DISTINCT (((CAST(t0.c60 AS INTEGER), ((t0.c0)GLOB(t0.c60)), ((t0.c84) NOT BETWEEN (t0.c60) AND ('/zE'))))<((t0.c60 COLLATE NOCASE, ((t0.c75)<(t0.c60)), ((t0.c84)OR('1337792674'))))), (((+ (t0.c60)))AND(0.8259082724022)), CAST(((((t0.c0)AND(t0.c60)))AND(t0.c84)) AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT ((((CASE t0.c75  WHEN t0.c0 THEN t0.c75 END)OR(UPPER(t0.c0))))OR(COUNT(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c60, t0.c75)) BETWEEN ((TYPEOF(t0.c0), t0.c75 COLLATE NOCASE, ((t0.c60)/(t0.c0)))) AND ((TOTAL(NULL), t0.c75, ((t0.c75) IS TRUE)))) FROM t0 WHERE ((((x'08aa')) NOT BETWEEN (((('-}M')/('-278945441')))) AND ((((1337792674)|('-1417187030')))))) ORDER BY MIN(t0.c60, (t0.c75 IN (t0.c60, t0.c75)), ((t0.c75) NOT BETWEEN ('궍O+ahߙ') AND (t0.c75)), '') ASC  NULLS LAST, COALESCE(t0.c84, (((t0.c75)) BETWEEN ((t0.c0)) AND ((t0.c60))), CAST(t0.c60 AS INTEGER), LIKELY(DISTINCT t0.c84)) ASC, ((((t0.c75) IS FALSE))*((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c84))))) ASC, CASE WHEN t0.c60 COLLATE NOCASE THEN t0.c0 END DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((TOTAL(t0.c84))OR(((t0.c60) NOTNULL))))OR(0X2ee79030)) FROM t0 WHERE (ABS(DISTINCT NULLIF(DISTINCT x'', ''))); -- 0ms;
SELECT ALL (((t0.c75)) NOT BETWEEN ((((((((((t0.c0)OR(t0.c75)))AND(t0.c75)))OR(t0.c60)))OR(t0.c0)))) AND ((CAST(t0.c0 AS TEXT)))) FROM t0 WHERE (((CAST(NULL AS NUMERIC)) BETWEEN (NULLIF(DISTINCT 8222433, NULL)) AND (((((((((x'')OR('-619791724')))OR(NULL)))OR(0.2894562517075825)))AND('-216596859'))))); -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c84) BETWEEN (t0.c75) AND (t0.c84)) COLLATE BINARY) OVER () FROM t0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY (((LIKELY(t0.c60)))<>((((t0.c0) NOT BETWEEN (t0.c75) AND (t0.c84))))), ((((CASE t0.c0  WHEN x'' THEN t0.c60 WHEN t0.c75 THEN t0.c60 WHEN t0.c75 THEN t0.c60 ELSE 0.15239235727318912 END)OR(t0.c84 COLLATE RTRIM)))AND(t0.c75)) DESC  NULLS LAST, (((('(')OR(CAST(t0.c60 AS NUMERIC))))AND(((t0.c0)<=(NULL))))) FROM t0 WHERE ((- ((((x'5cf7'))<>((x'')))))); -- 1ms;
SELECT DISTINCT TOTAL(((((t0.c84)OR(t0.c0)))AND(t0.c60))) FROM t0 WHERE (LIKELIHOOD((((0.0)) BETWEEN (('rrd')) AND (('+Y'))), 0.9464654992898908)); -- 0ms;
SELECT (- (t0.c60 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((((((((x'0213')OR('-1813201312')))AND(0xffffffffcdf933dd)))AND(x'')))AND(0.6560535266054401)))AND('')))AND(x'de3a'))))) LIMIT 1420666705; -- 0ms;
SELECT DISTINCT LAG(((CAST(NULL AS REAL))*(load_extension(t0.c60, t0.c75))), (((t0.c60)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c60) AND (t0.c0)))) AND ((((t0.c84)==(0x556fd27e))))), (((((t0.c0, t0.c0, t0.c0))>((0.34194669158222646, t0.c84, t0.c0))))*(x''))) OVER () FROM t0 WHERE (CAST((('piq[bb')>>(1155774597)) AS BLOB)); -- 0ms;
SELECT ((CASE WHEN t0.c84 THEN t0.c0 ELSE t0.c75 END)GLOB((~ (t0.c0)))) FROM t0 WHERE ((((((((0.1760996576219448)OR(NULL)))AND(0.17141243659786376)), (((8.52834383E8)) NOT BETWEEN (('-783921886')) AND ((0.255853131807227))), ((NULL)+('RS{*15^?')), TRIM(DISTINCT 0.8145531566398091, x''), '' COLLATE RTRIM))>=(('./' COLLATE BINARY, CASE 0.7524679575372535  WHEN x'72c6' THEN NULL WHEN 0.1461670321268299 THEN '#H' WHEN 2074561737 THEN x'' ELSE NULL END, CAST('90' AS BLOB), ((NULL) BETWEEN (x'') AND (NULL)), ('1852849079' IN ()))))); -- 0ms;
SELECT DISTINCT TOTAL(x'ebfd'), NULL, (((~ (t0.c84))) NOT BETWEEN (load_extension(t0.c0, t0.c84)) AND (AVG(t0.c84))) FROM t0 WHERE ((((NULL IN (-839306275))) ISNULL));SELECT ALL ((NULL)+((((NULL, t0.c84, t0.c75))>=((t0.c84, t0.c0, t0.c75))))) FROM t0; -- 0ms;
SELECT ALL (CAST(t0.c60 AS INTEGER) IN ()) FROM t0 WHERE (((((0.8120843832609412)=(0.8372484310223359))) ISNULL)) LIMIT -1629266145; -- 1ms;
SELECT ALL (((t0.c0 IN ())) ISNULL), (+ ((((('')AND(t0.c60)))AND(t0.c84)))), ((t0.c60)>(t0.c84)) COLLATE BINARY FROM t0 WHERE (CASE '>PHP#'  WHEN 0xffffffffa621eeb4 THEN '-954143787' WHEN x'' THEN 5.32022221E8 WHEN 0X637df863 THEN x'e4a6' ELSE 0xffffffffe08da33a END COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((0.6819134883614563 IN (t0.c75, t0.c60))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (CASE t0.c60  WHEN t0.c0 THEN t0.c0 END)) FROM t0 LIMIT -899957287; -- 0ms;
SELECT DISTINCT AVG(CASE t0.c75  WHEN x'' THEN t0.c75 WHEN t0.c60 THEN t0.c60 WHEN t0.c84 THEN t0.c75 ELSE t0.c0 END) FROM t0 WHERE (('-783921886' IN ())); -- 0ms;
SELECT ALL ((((((t0.c75)OR(t0.c60)))OR(t0.c75))) IS FALSE) FROM t0 ORDER BY (t0.c60 COLLATE RTRIM IN ()); -- 0ms;
SELECT DISTINCT (((~ (t0.c60))) NOT BETWEEN (((t0.c84) ISNULL)) AND (((((t0.c60)OR(t0.c0)))OR(t0.c75)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((t0.c75)AND(t0.c60)))OR(t0.c0)))OR(t0.c0)))AND(t0.c84)) COLLATE RTRIM FROM t0 WHERE ((((NULL IN ())) NOTNULL)) ORDER BY t0.c84  NULLS LAST LIMIT -67533961 OFFSET -1629266145; -- 0ms;
SELECT DISTINCT ((t0.c60)LIKE(LIKELIHOOD(t0.c0, 0.8589621621903962))) FROM t0; -- 0ms;
SELECT DISTINCT json((((t0.c60))!=((t0.c0)))), (~ (((t0.c84) NOT BETWEEN (x'') AND (x'')))), (((((NULL)) NOT BETWEEN ((t0.c84)) AND ((t0.c75))))LIKE(0x7b2ca8b7)) FROM t0 WHERE ((~ (CAST(x'' AS NUMERIC)))) ORDER BY ((((((t0.c60) NOT BETWEEN (t0.c75) AND (t0.c0)))OR('314650034')))OR(((t0.c60)<(t0.c60))))  NULLS FIRST, ((((t0.c84 IN (t0.c0, t0.c84)), (('2066524343')IS NOT(t0.c75)), (((t0.c0)) NOT BETWEEN ((t0.c75)) AND ((x'')))))<((NULLIF(t0.c84, x'326e'), (t0.c60 IN ()), ((t0.c60) NOT BETWEEN (t0.c84) AND (t0.c75))))) ASC, ((((((((((((0.6893003943577908)AND(t0.c75)))OR(t0.c0)))AND('1155774597')))OR(t0.c0)))OR(368004129)))OR(t0.c84)) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT COUNT(CASE t0.c75  WHEN t0.c84 THEN t0.c0 WHEN t0.c60 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) FROM t0; -- 0ms;
SELECT t0.c75, CASE ((t0.c60) BETWEEN (t0.c0) AND (t0.c75))  WHEN ((t0.c84) NOTNULL) THEN CHANGES() WHEN ((t0.c75) BETWEEN (t0.c84) AND (t0.c84)) THEN ((t0.c60)>>(t0.c0)) WHEN ((t0.c84)*(-2108606865)) THEN CASE WHEN t0.c0 THEN t0.c60 END ELSE LAST_INSERT_ROWID() END, ((x'') BETWEEN ((t0.c75 IN ())) AND (((((((((t0.c0)OR(t0.c75)))AND(t0.c0)))OR('?\Ro-| (,')))AND(t0.c60)))) FROM t0 ORDER BY (((~ (t0.c75))) NOTNULL) DESC LIMIT -2120865959; -- 1ms;
SELECT DISTINCT (t0.c0 IN ()), SUM((NOT (t0.c0))), ((((((t0.c75)OR(t0.c75)))AND(t0.c84))) IS FALSE) FROM t0 LIMIT 852834383 OFFSET 1732202225; -- 0ms;
SELECT DISTINCT t0.c60 FROM t0; -- 0ms;
SELECT ALL CAST((t0.c84 IN ()) AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT '' FROM t0 WHERE (CAST((((0.39326520430403233)) NOT BETWEEN ((-67533961)) AND ((NULL))) AS BLOB)); -- 0ms;
SELECT GROUP_CONCAT(((t0.c84)<<(t0.c0))) OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE CURRENT ROW), IFNULL(JULIANDAY(t0.c75, t0.c60, t0.c84), (('h*E₻W⑇N45') NOT BETWEEN (1.420666705E9) AND (t0.c75))), GROUP_CONCAT((((t0.c60)) BETWEEN ((t0.c84)) AND ((t0.c84)))) FILTER(WHERE (('9223372036854775807')IS(((t0.c60) IS TRUE)))) OVER ( ROWS  CURRENT ROW) FROM t0 WHERE (((TRIM(x'', NULL)) BETWEEN (LTRIM(x'd942', NULL)) AND (((0.751840972859324)>('7aS+4Hr'))))); -- 0ms;
SELECT ALL (((((t0.c0) NOTNULL)))>=(((- (t0.c0))))), 0.8469154393169878, (((+ (t0.c75)))+((NOT (t0.c75)))) FROM t0 WHERE ((((((NOT (NULL)))OR(NULL COLLATE BINARY)))AND((- (0.46922523209910516))))) LIMIT -971044232 OFFSET -799813389; -- 0ms;
SELECT (DATE(t0.c60, t0.c0, t0.c84) IN (CAST(t0.c0 AS TEXT), 'D#hL\n[GM')) FROM t0 WHERE ('') ORDER BY (((t0.c60)+(t0.c84)) IN (((t0.c60)OR(t0.c84))))  NULLS LAST; -- 0ms;
SELECT ALL ((((NULL) NOT BETWEEN (t0.c84) AND (t0.c0))) NOT BETWEEN (((t0.c75) NOT BETWEEN (t0.c75) AND ('1433391742'))) AND ((t0.c84 IN ()))) FROM t0 WHERE ((+ (('-1314336312' IN ('574611140', 0.056155225350897675))))); -- 0ms;
SELECT DISTINCT CASE (((t0.c60))>=((t0.c84)))  WHEN (((t0.c75))<((t0.c0))) THEN ((t0.c75)*(t0.c75)) END FROM t0; -- 0ms;
SELECT ALL CAST(((((t0.c60)AND(t0.c60)))OR(t0.c75)) AS REAL) FROM t0; -- 0ms;
SELECT DISTINCT t0.c84 FROM t0 WHERE (2066193528); -- 0ms;
SELECT DISTINCT ((((t0.c84)AND(t0.c75)))OR(t0.c84)) COLLATE RTRIM FROM t0 ORDER BY NULL  NULLS FIRST, ((CASE t0.c60  WHEN t0.c75 THEN '' ELSE t0.c0 END) BETWEEN (((t0.c60)/(t0.c0))) AND ('')) ASC, CAST(t0.c75 COLLATE RTRIM AS INTEGER) DESC; -- 0ms;
SELECT ((((t0.c84 IN (t0.c60, t0.c60))))>=((SUM(t0.c75)))), ((((t0.c75) NOT BETWEEN (t0.c0) AND (t0.c60)))<((t0.c75 IN ()))), t0.c60 FROM t0; -- 0ms;
SELECT (((((t0.c75, t0.c84, t0.c84, t0.c75, t0.c75))!=((t0.c75, t0.c60, '-971044232', t0.c75, t0.c75))))IS NOT(((t0.c60)IS NOT(t0.c0)))) FROM t0 WHERE (CASE WHEN '''5D%' THEN ((x'') NOT BETWEEN (NULL) AND (0.4167622247163907)) ELSE CASE WHEN x'0e5b' THEN NULL END END); -- 0ms;
SELECT ALL t0.c75 FROM t0 WHERE (0.08369370456509051 COLLATE BINARY); -- 0ms;
SELECT LOWER(DISTINCT NULL) FROM t0; -- 0ms;
SELECT DISTINCT ((AVG(t0.c84))>(MAX(t0.c60))) FROM t0 WHERE (((((((0.00919737369293716)OR(-6.7533961E7)))AND(NULL))) NOT BETWEEN ((- (x''))) AND (x'e309'))); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM t0 WHERE ('a'); -- 0ms;
SELECT DISTINCT (((t0.c75 IN ()))|(((((t0.c75)AND(t0.c60)))OR(t0.c0)))), ROW_NUMBER() OVER (), NULL FROM t0 WHERE (((((CAST(0.4624878986967902 AS NUMERIC))OR(((NULL) NOTNULL))))OR(SQLITE_COMPILEOPTION_GET(x'')))); -- 0ms;
SELECT DISTINCT SUM(CAST(t0.c75 AS REAL)) OVER () FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c60 COLLATE BINARY AS NUMERIC), COUNT(*) OVER (), (((('902968541')/(t0.c84)))>(TOTAL(t0.c75))) FROM t0 ORDER BY ((t0.c75 COLLATE RTRIM)==(((t0.c84)GLOB(t0.c84)))) DESC, ((t0.c75 COLLATE RTRIM) IS TRUE) DESC, CAST(t0.c84 AS INTEGER) COLLATE NOCASE; -- 0ms;
SELECT x'', RANK() OVER ( PARTITION BY x'', ((TRIM(t0.c0, t0.c84))==((NOT (t0.c75))))), CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CASE WHEN t0.c75 THEN t0.c84 ELSE x'9282' END ELSE LIKELIHOOD(t0.c75, 0.17534407010684205) END FROM t0 WHERE ((((0X719e7cf5, '_BT', NULL)) BETWEEN ((((x'') BETWEEN (1268891962) AND ('1221522949')), ((0x2c42cc84) BETWEEN ('zvQ+X^#P[') AND ('')), (NOT ('-1949131972')))) AND (((0Xffffffff93ecbe60 IN ()), (((NULL))<>((0Xbbe7a2a))), json_remove(NULL, '?gucFPGal'))))) LIMIT -1823672954; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c75 THEN t0.c84 WHEN t0.c60 THEN t0.c0 WHEN t0.c0 THEN t0.c75 WHEN t0.c0 THEN t0.c60 WHEN t0.c75 THEN t0.c0 END COLLATE NOCASE FROM t0 WHERE ((CASE '*d燊-{jFH㡏'  WHEN NULL THEN x'' ELSE x'' END IN (NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL (((t0.c75)) NOT BETWEEN ((((((((((t0.c0)AND(t0.c0)))AND(t0.c84)))OR(t0.c84)))OR(NULL)))) AND ((((t0.c0)!=(t0.c75))))) FROM t0 GROUP BY CASE (t0.c0 IN (t0.c0))  WHEN t0.c75 COLLATE RTRIM THEN (((t0.c60, t0.c84, t0.c60)) BETWEEN ((t0.c60, t0.c84, t0.c84)) AND ((t0.c75, t0.c0, t0.c75))) ELSE t0.c84 COLLATE BINARY END, (((((- (x'')))AND((t0.c75 IN (t0.c0, t0.c60)))))AND(((t0.c0)<(t0.c0)))), (((t0.c0 IN (x'')))<(((t0.c0)-(t0.c75)))); -- 0ms;
SELECT DISTINCT ((t0.c84 COLLATE BINARY)AND(((t0.c75)+(0.9960806804011466)))) FROM t0; -- 0ms;
SELECT DISTINCT (t0.c84 IN ()) COLLATE NOCASE COLLATE BINARY, (SUM(t0.c84) IN (COUNT(t0.c84), 0.8359568223143335)), t0.c0, '', x'' FROM t0 WHERE (CAST(1025361157 AS NUMERIC)) GROUP BY (NOT ((((t0.c75)) BETWEEN ((t0.c60)) AND ((''))))), t0.c84, ((t0.c60 IN ()) IN ()) HAVING ((t0.c84)LIKE(t0.c0)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT load_extension(((t0.c84)=(t0.c84))) FROM t0 WHERE (((+ (NULL)) IN ())) GROUP BY ((((t0.c0)GLOB(t0.c0)))>>(CASE t0.c60  WHEN t0.c0 THEN t0.c60 WHEN t0.c84 THEN t0.c60 WHEN t0.c75 THEN t0.c0 ELSE t0.c84 END)) HAVING ((CASE t0.c0  WHEN t0.c75 THEN t0.c84 ELSE t0.c60 END)%('')); -- 1ms;
SELECT GROUP_CONCAT((t0.c75 IN ())), t0.c84, ((((t0.c75)OR(t0.c0)))OR(t0.c84)) COLLATE RTRIM FROM t0 GROUP BY ((UPPER(t0.c84)) IS TRUE); -- 0ms;
SELECT (((- (t0.c84)))&(CAST(x'' AS BLOB))) FROM t0 WHERE (CHAR(((((((((x'')OR(NULL)))OR(x'')))OR(0Xffffffffc720ebd5)))OR(-6.7533961E7)))); -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c0) AND (0.24201005098870199))) ISNULL) FROM t0; -- 0ms;
SELECT ALL ((((((t0.c0)OR(x'')))AND(x'')))AND((+ (t0.c84)))), LEAD(t0.c75, 'D#hL\n[GM', TRIM(((x'')|(t0.c60)), ((t0.c75) BETWEEN (t0.c75) AND (t0.c0)))) OVER (), SUM(x'') OVER () FROM t0; -- 0ms;
SELECT ((((CASE t0.c84  WHEN t0.c0 THEN t0.c60 END)AND((((t0.c75))<((t0.c84))))))AND(t0.c60)), t0.c60, ((IFNULL(DISTINCT 0.6740543908168671, t0.c84))*(((t0.c84) NOT BETWEEN (t0.c60) AND (t0.c75)))) FROM t0 LIMIT -1827613550; -- 0ms;
SELECT ALL t0.c0 FROM t0 WHERE (((x'') ISNULL) COLLATE BINARY COLLATE RTRIM) GROUP BY (+ (CASE t0.c75  WHEN t0.c75 THEN t0.c0 ELSE t0.c0 END)) HAVING CASE CAST(t0.c0 AS NUMERIC)  WHEN ((x'2f79')<>(t0.c84)) THEN ((t0.c0) BETWEEN (t0.c75) AND (t0.c60)) WHEN (NOT (t0.c60)) THEN ((((((((t0.c84)OR(t0.c75)))AND(t0.c0)))AND(0.5309948102897925)))OR(t0.c60)) WHEN CASE t0.c84  WHEN t0.c60 THEN t0.c60 ELSE t0.c75 END THEN t0.c75 ELSE CASE WHEN t0.c75 THEN t0.c0 ELSE t0.c75 END END; -- 0ms;
SELECT ((((((t0.c0) NOT BETWEEN (t0.c75) AND (t0.c60)))AND(((0.12741636895573816)<=(x'2836')))))AND(((((t0.c84)OR(t0.c75)))OR(t0.c0)))), (((((((t0.c60, t0.c75, t0.c84)) NOT BETWEEN ((t0.c0, t0.c60, t0.c84)) AND ((t0.c75, t0.c75, 2009171172))))AND(AVG(x''))))AND(CAST(t0.c60 AS REAL))), COUNT(*) FILTER(WHERE '-619791724') OVER () FROM t0; -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c60))) BETWEEN (AVG(t0.c60)) AND ((((t0.c75))=((t0.c84))))), COUNT(*), ((((t0.c0)GLOB(t0.c75))) NOT BETWEEN (AVG(t0.c60)) AND ((t0.c75 IN (t0.c75)))) FROM t0 ORDER BY (((((t0.c60) NOT NULL), CASE t0.c75  WHEN t0.c84 THEN t0.c0 ELSE t0.c84 END, CAST(t0.c0 AS NUMERIC)))<=((t0.c0, (NOT (t0.c60)), t0.c0))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT LTRIM((- (t0.c75)), TRIM(DISTINCT t0.c60)) FROM t0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT (t0.c84 IN ())) FROM t0 WHERE (CASE NULL  WHEN 0.6711048435202764 THEN '786927664' ELSE 'n몔V' END COLLATE NOCASE) LIMIT -566277429 OFFSET -216596859; -- 0ms;
SELECT DISTINCT (t0.c60 COLLATE BINARY IN ()), NULL COLLATE RTRIM, (((('')/(t0.c0)))OR(((((((((t0.c84)AND(t0.c60)))AND(t0.c0)))OR(t0.c0)))OR(t0.c84)))) FROM t0 LIMIT -343302841 OFFSET 1762159343; -- 0ms;
SELECT (t0.c60 COLLATE RTRIM IN ()) FROM t0 LIMIT 9223372036854775807 OFFSET -1824803960; -- 0ms;
SELECT DISTINCT CASE t0.c60  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM COLLATE RTRIM, ((((((((t0.c60)OR((~ (t0.c84)))))AND(UPPER(DISTINCT -2034250608))))AND(((t0.c60)||(t0.c75)))))OR(CASE WHEN t0.c75 THEN t0.c75 END)), ((t0.c0) BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c60))) AND (CHANGES())) FROM t0; -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT t0.c60))+(NULL)) FROM t0 WHERE (CAST((0.3756737115751051 IN ()) AS BLOB)); -- 0ms;
SELECT DISTINCT TOTAL((t0.c0 IN ())) OVER () FROM t0 WHERE (CAST(NULLIF(DISTINCT x'', 1.762159343E9) AS NUMERIC)); -- 1ms;
SELECT ALL ((((((t0.c0)<=(t0.c60)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0)==(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT CASE ((t0.c84)OR(NULL))  WHEN ((t0.c0) NOT BETWEEN (t0.c60) AND (0.12741636895573816)) THEN ((t0.c84)>>(t0.c0)) WHEN ((t0.c0)+(t0.c60)) THEN (t0.c60 IN ()) WHEN CASE t0.c84  WHEN t0.c0 THEN t0.c84 ELSE t0.c60 END THEN ((t0.c60)+(t0.c84)) END FROM t0 WHERE (((((((0.16147287433325797) BETWEEN ('-566277429') AND ('')))OR((((240599966, 0.9130616132917725, x'')) NOT BETWEEN ((NULL, x'', '\nbykFX')) AND ((0.9976894963230003, x'', x''))))))OR((((0.9819734022396841)) BETWEEN ((NULL)) AND ((0.1760996576219448)))))) ORDER BY ((t0.c60 IN ()) IN ()) ASC; -- 0ms;
SELECT DISTINCT UPPER(CASE t0.c75  WHEN t0.c75 THEN t0.c75 END) FROM t0; -- 0ms;
SELECT DISTINCT (- (t0.c0)) COLLATE NOCASE FROM t0 LIMIT -1967070606 OFFSET 626275275; -- 0ms;
SELECT ALL ((((((t0.c75)>=(t0.c75)))OR(MIN(t0.c84))))AND(CHANGES())) FROM t0 GROUP BY LIKELY(((t0.c75)>>(t0.c75))), CAST(CAST(t0.c75 AS REAL) AS BLOB), (- (TRIM(t0.c60))) HAVING t0.c75 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) NOT BETWEEN (t0.c60) AND (t0.c84))) OVER () FROM t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((CAST('' AS NUMERIC))AND((t0.c75 IN (t0.c0, t0.c60)))))OR((t0.c84 IN ()))) FROM t0; -- 0ms;
SELECT ALL ((((('U#	W#s4') NOTNULL), t0.c60, t0.c0 COLLATE NOCASE, ((t0.c75)%(t0.c84)), TYPEOF(x'')))>=((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c84)), (~ (t0.c84)), -1.914393203E9, ((t0.c60) ISNULL), CAST(t0.c75 AS BLOB)))) FROM t0 ORDER BY ((CASE WHEN t0.c75 THEN t0.c84 ELSE t0.c75 END)<(((t0.c75)%(0xffffffffe020d58f)))) DESC; -- 0ms;
SELECT DISTINCT t0.c75 FROM t0 WHERE (-8.99957287E8); -- 0ms;
SELECT DISTINCT AVG((+ (t0.c0))) OVER () FROM t0 ORDER BY (- (x''))  NULLS FIRST, -2.108606865E9 DESC, CAST(TRIM(t0.c84) AS TEXT) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((t0.c75 COLLATE BINARY) NOTNULL) FROM t0 WHERE (((0.7238488202445885)>>(((x'fc63a1c9')|('0.11191826972770391'))))); -- 0ms;
SELECT DISTINCT t0.c84, (CASE WHEN t0.c84 THEN t0.c0 WHEN t0.c84 THEN t0.c75 WHEN t0.c75 THEN x'' END IN ()), ((((((t0.c84)AND(t0.c84)))AND(t0.c60))) ISNULL) FROM t0 WHERE (ABS('蝦WQz' COLLATE RTRIM)); -- 0ms;
SELECT ALL ((((((t0.c84)OR(t0.c84)))OR(t0.c75))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))>=((t0.c60, t0.c60, t0.c60)))) AND (TOTAL_CHANGES())), (NOT (CAST(t0.c0 AS NUMERIC))), ((((((((CASE t0.c60  WHEN t0.c84 THEN t0.c75 ELSE t0.c0 END)AND(((t0.c0)||(t0.c0)))))AND(((((t0.c84)OR(t0.c60)))AND(t0.c84)))))OR(((((t0.c60)OR(NULL)))OR(t0.c75)))))AND(((((t0.c75)OR(t0.c84)))OR(t0.c0)))) FROM t0 WHERE ((~ (((0.719046827735784) ISNULL)))) ORDER BY ((CASE t0.c75  WHEN t0.c0 THEN t0.c75 ELSE t0.c60 END)-(t0.c60)) DESC; -- 0ms;
SELECT ((((((t0.c84) BETWEEN (t0.c60) AND (t0.c0)))OR(CASE t0.c75  WHEN t0.c84 THEN t0.c75 END)))AND(((t0.c75) NOT BETWEEN (t0.c84) AND (t0.c84)))) FROM t0; -- 0ms;
SELECT DISTINCT JULIANDAY(((t0.c60)%(t0.c0)), CAST(x'ace4' AS TEXT), x'0c46'), -968382533, (CAST(t0.c60 AS REAL) IN ()) FROM t0 LIMIT -57924537 OFFSET -227802707; -- 1ms;
SELECT ((((t0.c60)<=(t0.c84)))<<(((((((((t0.c84)OR(t0.c84)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)))) FROM t0; -- 0ms;
SELECT DISTINCT (('+Y')GLOB((((('')AND(t0.c0)))AND(t0.c0)))), MIN(((t0.c60)<=(t0.c75)), (t0.c60 IN (t0.c75))), LAG((t0.c60 COLLATE BINARY IN ()), CAST(t0.c84 AS BLOB) COLLATE BINARY, ((((((t0.c75)AND(t0.c60)))AND(t0.c60))) NOTNULL)) OVER () FROM t0 LIMIT -1525706615; -- 0ms;
SELECT ALL 'Hs' FROM t0 WHERE ((((NULL IN (0X1739dd30)))AND(('-968382533' IN ())))); -- 0ms;
SELECT (((x'' IN (t0.c60)))&(t0.c84 COLLATE BINARY)) FROM t0 WHERE ((NOT ((('턅k')IS NOT('-2001854580'))))); -- 0ms;
SELECT DISTINCT ((((t0.c0, t0.c75, t0.c75))<=((t0.c75, t0.c0, t0.c84))) IN ()) FROM t0 WHERE (CAST(NULL AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((t0.c60) BETWEEN (COUNT(*)) AND (UPPER(t0.c60))), CASE WHEN ((t0.c75)IS NOT(x'')) THEN ((t0.c75)*(t0.c75)) WHEN ((t0.c0)!=(t0.c0)) THEN CAST(t0.c75 AS NUMERIC) WHEN COUNT(t0.c0) THEN ((0.5631353013525047)<>(t0.c75)) ELSE CASE t0.c0  WHEN t0.c84 THEN t0.c0 END END, COUNT(*) OVER () FROM t0; -- 0ms;
SELECT ((((t0.c84)==(t0.c0)))LIKE(((t0.c75) NOT BETWEEN (t0.c0) AND (t0.c0)))), (((+ (t0.c60)))<=(CAST(t0.c75 AS BLOB))), (((t0.c75 IN (t0.c75, t0.c0))) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(((t0.c75)+(t0.c0))) OVER () FROM t0 WHERE ((- (0.10808469186574055 COLLATE BINARY))); -- 0ms;
SELECT ((CAST(t0.c60 AS NUMERIC)) NOT BETWEEN ('1052707784') AND (UNLIKELY(t0.c84))) FROM t0 LIMIT -2141365665; -- 0ms;
SELECT ALL 0.04345146464033156 FROM t0 WHERE (((((0.5693252565066158) IS FALSE)) BETWEEN (((x'314a')-('l䏧'))) AND ((- (''))))); -- 0ms;
SELECT ALL ((TOTAL(t0.c75)) BETWEEN (((t0.c75) NOT BETWEEN (t0.c75) AND (t0.c84))) AND (CAST(t0.c75 AS INTEGER))) FROM t0; -- 0ms;
SELECT DISTINCT (('ZB^ZcK') ISNULL), ((((((t0.c84) NOT BETWEEN (t0.c75) AND (t0.c0)))AND(((t0.c84)>(t0.c60)))))AND(CAST(t0.c84 AS TEXT))), ((CAST(t0.c75 AS BLOB)) BETWEEN ((t0.c0 IN ())) AND (t0.c75 COLLATE NOCASE)) FROM t0 WHERE (DATE(NULL, ((NULL)!=(NULL)), (((0.27911468207404644)) BETWEEN (('-1370692238')) AND (('&C#%t/c'))))) ORDER BY ((((((((((NULL)<<(t0.c84)))OR(CASE WHEN t0.c84 THEN t0.c75 END)))AND(((t0.c0)|(t0.c75)))))AND(CASE WHEN t0.c60 THEN t0.c84 WHEN '1476127344' THEN t0.c75 WHEN t0.c84 THEN t0.c75 ELSE t0.c60 END)))AND((NOT (t0.c75)))) DESC, ((t0.c0) NOT BETWEEN (t0.c75) AND (t0.c75)) COLLATE RTRIM; -- 0ms;
SELECT ALL CAST(CAST(t0.c75 AS INTEGER) AS BLOB) FROM t0; -- 0ms;
SELECT ALL CAST(((t0.c84) IS TRUE) AS TEXT) FROM t0; -- 1ms;
SELECT DISTINCT 'xI6' FROM t0; -- 0ms;
SELECT DISTINCT NTH_VALUE((((t0.c60)%(t0.c75)) IN ()), CAST(((t0.c60)>(t0.c75)) AS INTEGER)) OVER () FROM t0 WHERE (CAST(CAST(x'df25' AS TEXT) AS TEXT)); -- 0ms;
SELECT ALL CAST((~ (t0.c75)) AS NUMERIC) FROM t0; -- 0ms;
SELECT ALL ((((((t0.c84)OR(t0.c75)))OR(t0.c75))) NOT BETWEEN ((t0.c0 IN (t0.c75, 0.7674288567302704))) AND (CAST(t0.c75 AS TEXT))) FROM t0; -- 0ms;
SELECT DISTINCT (- (t0.c75 COLLATE RTRIM)), ((((t0.c84)>=(t0.c0)))!=(TOTAL_CHANGES())), (((+ (t0.c84)))<<(((t0.c84)<>(t0.c84)))) FROM t0; -- 0ms;
SELECT CASE WHEN MIN(t0.c0) THEN CAST(t0.c60 AS INTEGER) ELSE (t0.c75 IN (t0.c60)) END FROM t0; -- 0ms;
SELECT DISTINCT ((609239343)%(0.5603778486466822)), CAST(NULL AS NUMERIC), COUNT(((((t0.c60)AND(t0.c75)))OR(t0.c0))) OVER (), CASE LIKELY(DISTINCT t0.c75)  WHEN (((t0.c75))<((t0.c60))) THEN (((('-1990582085')OR(t0.c75)))AND(t0.c75)) WHEN ((t0.c0) ISNULL) THEN ((((t0.c75)AND(t0.c60)))OR(t0.c75)) WHEN GROUP_CONCAT(t0.c60) THEN t0.c75 END, (((t0.c84)) NOT BETWEEN ((((((t0.c0)OR(t0.c75)))AND('0V')))) AND ((CASE t0.c84  WHEN t0.c84 THEN t0.c84 END))), ((t0.c84)IS NOT(((t0.c0)IS(t0.c84)))), ((((t0.c60)+(t0.c84)))>>(((((t0.c0)AND(t0.c60)))AND(t0.c75)))) FROM t0 WHERE ((((('') IS FALSE)) BETWEEN (TYPEOF('0.8557318296049912')) AND (((x'')-(0.8145531566398091))))); -- 0ms;
SELECT DISTINCT MIN(t0.c0 COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c60 END) FROM t0 WHERE (((-591957001)==((('Xr')=(697182102))))); -- 0ms;
SELECT DISTINCT ((t0.c84 COLLATE NOCASE)&(UNICODE(t0.c60))) FROM t0 WHERE (((((0Xffffffffc17c960d IN ())))=((((1566789264) NOT NULL))))); -- 0ms;
SELECT DISTINCT (((t0.c60 IN (t0.c84, t0.c0)))||(TOTAL(t0.c60))) FROM t0; -- 0ms;
SELECT ALL ((((t0.c60) BETWEEN (t0.c84) AND (t0.c60))) NOT BETWEEN ((- (t0.c84))) AND (TOTAL(t0.c84))) FROM t0; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID(), (- (CAST(t0.c60 AS BLOB))), (((((t0.c0) BETWEEN (t0.c0) AND (t0.c84))))>((t0.c60 COLLATE NOCASE))) FROM t0; -- 0ms;
SELECT ALL UNICODE((((t0.c84)) BETWEEN ((t0.c60)) AND ((t0.c0)))) FROM t0 LIMIT 240599966 OFFSET 146271514; -- 0ms;
SELECT ALL ((t0.c75 COLLATE RTRIM)IS(MAX(t0.c84))), (CAST(t0.c60 AS NUMERIC) IN ()), ((CAST(t0.c75 AS NUMERIC)) NOT BETWEEN (t0.c75) AND (((((((((t0.c75)OR(t0.c84)))AND(t0.c75)))OR(t0.c60)))AND(t0.c0)))) FROM t0 LIMIT 732326083; -- 0ms;
SELECT DISTINCT CAST(((((t0.c75)AND(t0.c75)))OR(t0.c84)) AS NUMERIC), ((((t0.c75)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY, t0.c75 FROM t0 WHERE (((x'5a09')==(((x'7e06')AND(x''))))); -- 0ms;
SELECT ALL ABS(((t0.c84)>>(t0.c0))), ((CASE t0.c75  WHEN t0.c0 THEN t0.c75 END) NOT BETWEEN ('0.4624878986967902') AND (NULL)), '0.9244522241369222' FROM t0; -- 0ms;
SELECT ALL 0.5193141293282345 FROM t0 WHERE ((- ('101397742')) COLLATE BINARY) LIMIT -2108606865; -- 0ms;
SELECT ALL t0.c0 FROM t0 WHERE (TYPEOF(((x'6c3f')>>(NULL)))); -- 0ms;
SELECT DISTINCT MIN(t0.c75, ((t0.c60)==(t0.c84))), ((NULL) NOTNULL), ((CAST(t0.c60 AS BLOB)) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c75)IS NOT(t0.c60))) ISNULL) FROM t0 ORDER BY (((t0.c0 IN (t0.c84))) NOT NULL); -- 0ms;
SELECT DISTINCT ((((t0.c0)>>('')))>(((t0.c0) NOT NULL))) FROM t0 WHERE ((((('')OR(0X2f06f9dd)))AND('-1417187030')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((-1.220320438E9 COLLATE NOCASE) NOT NULL) FROM t0 WHERE ((((('-866838732')<=('-1116999452')))+((('oP+B') IS TRUE)))); -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN '?~43\r\r' THEN t0.c60 ELSE t0.c75 END COLLATE RTRIM) OVER () FROM t0; -- 0ms;
SELECT ALL CAST(((t0.c60) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT) FROM t0 WHERE (((((NULL) ISNULL)) BETWEEN (RTRIM('692117113')) AND (CAST(0.7281894707592204 AS INTEGER)))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0 GROUP BY ((TYPEOF(t0.c84)) NOT BETWEEN ((((t0.c75))!=((t0.c0)))) AND (t0.c75 COLLATE BINARY)) HAVING ((((((((((t0.c60)AND(NULL)))OR(t0.c75)))OR(t0.c0)))OR(t0.c84))) IS TRUE) LIMIT 2127840824; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), t0.c75, ((((0Xffffffff8bd29b3c)+(t0.c75))) IS TRUE) FROM t0 WHERE (CASE (~ (NULL))  WHEN CASE 'wHమq'  WHEN x'' THEN NULL ELSE NULL END THEN ('' IN ()) END); -- 0ms;
SELECT ALL TYPEOF(DISTINCT (t0.c60 IN ())) FROM t0; -- 0ms;
SELECT ALL DENSE_RANK() OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW) FROM t0; -- 0ms;
SELECT UNLIKELY(DISTINCT ((('(I蝦질ㆬ'))!=((t0.c60)))), (((~ (t0.c60))) IS FALSE), (((((NULL)-(t0.c75)), CAST(t0.c60 AS NUMERIC), t0.c75 COLLATE NOCASE))<=(((+ (t0.c60)), (((t0.c75, t0.c84, t0.c75))<>((t0.c84, t0.c60, t0.c75))), ((t0.c84) NOT BETWEEN (t0.c0) AND (t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT TRIM((t0.c75 IN ())), LEAD((+ (CASE WHEN t0.c84 THEN t0.c84 END)), TRIM((~ (t0.c60))), (((((((t0.c0)OR(t0.c75)))AND(t0.c84)), (((x''))<=((t0.c60))), ((t0.c60)+(t0.c75))))<((CASE WHEN t0.c84 THEN t0.c60 ELSE t0.c75 END, STRFTIME(t0.c75, 0.9244522241369222, t0.c60), CAST(x'd28a' AS NUMERIC))))) OVER (), (((((((((~ (t0.c60)))OR(((NULL) NOTNULL))))OR(((((((((t0.c60)OR(t0.c0)))AND(t0.c75)))AND(t0.c60)))AND(t0.c0)))))AND((NOT (t0.c60)))))AND(((t0.c0)>>(t0.c60)))) FROM t0 GROUP BY CASE t0.c0  WHEN t0.c60 THEN t0.c60 WHEN t0.c0 THEN t0.c84 WHEN t0.c0 THEN t0.c60 END COLLATE RTRIM HAVING ((((((t0.c60)AND(t0.c84)))OR(t0.c0)))<<(TRIM(DISTINCT t0.c75, t0.c60))) ORDER BY ((((((((((t0.c75)<(t0.c60)))OR((((t0.c75))<((t0.c0))))))OR(((((t0.c75)AND(t0.c75)))OR(t0.c84)))))AND(((t0.c75) IS TRUE))))OR((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c60)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT RANK() OVER ( ORDER BY ((((((t0.c84)OR(t0.c75)))AND(t0.c0)))=(t0.c75))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c84)!=(t0.c75))) ISNULL), FIRST_VALUE(json_type((t0.c84 IN ()))) OVER (), (NOT (t0.c84)), ((x'')<<(t0.c84)) COLLATE RTRIM, GROUP_CONCAT(((t0.c84) NOT BETWEEN (NULL) AND ('26364668'))) FROM t0 ORDER BY ((((((t0.c75)AND(t0.c84)))OR(t0.c84))) NOT BETWEEN (IFNULL(t0.c84, t0.c60)) AND ((t0.c0 IN ()))) ASC  NULLS LAST; -- 0ms;
SELECT t0.c60 FROM t0; -- 0ms;
SELECT ALL ((x'' COLLATE RTRIM)&((((t0.c75, t0.c75, t0.c84)) BETWEEN ((t0.c60, t0.c60, t0.c75)) AND (('-1629266145', t0.c75, '-2120865959'))))), GROUP_CONCAT(((t0.c0)LIKE(t0.c60)) COLLATE BINARY), (((((((t0.c60)) NOT BETWEEN ((t0.c75)) AND ((t0.c0))))AND(((((t0.c75)AND(t0.c84)))OR(t0.c84)))))AND(((((((((t0.c60)OR(t0.c60)))OR(t0.c84)))OR(t0.c0)))AND(t0.c75)))) FROM t0 ORDER BY CAST(LTRIM(t0.c0) AS NUMERIC) ASC  NULLS FIRST, (t0.c0 IN ()), ((((t0.c60)<=(t0.c84)))>(x'')) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((t0.c75 IN ()))<>((~ (t0.c84)))) FROM t0 ORDER BY ABS(UNICODE(t0.c75)); -- 0ms;
SELECT DISTINCT CASE (+ (t0.c60))  WHEN NULL THEN CASE t0.c84  WHEN t0.c75 THEN t0.c60 END ELSE t0.c75 END, COUNT(((t0.c60) BETWEEN (t0.c0) AND (t0.c75))), ((t0.c75) ISNULL) FROM t0 WHERE (((((NULL) BETWEEN ('	WnT1') AND ('-971044232'))) NOT NULL)); -- 0ms;
SELECT TYPEOF(((t0.c0) NOT BETWEEN (t0.c84) AND ('歅k'))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c60 AS BLOB), CASE WHEN MIN(t0.c0) THEN (((t0.c84, t0.c75, t0.c75))>((t0.c75, t0.c60, t0.c75))) WHEN (((t0.c60)) BETWEEN (('-968382533')) AND ((t0.c75))) THEN CAST(t0.c60 AS TEXT) WHEN ((t0.c75)==(t0.c84)) THEN CAST(t0.c75 AS TEXT) ELSE ((t0.c0)LIKE(t0.c84)) END, ((CASE WHEN '檢#\r0Ea8' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c84 ELSE x'' END) NOT NULL) FROM t0 UNION SELECT DISTINCT (t0.c60 COLLATE NOCASE IN (((t0.c84) BETWEEN (t0.c0) AND (t0.c84)))), LAST_VALUE(QUOTE(((t0.c0)*(t0.c60)))) OVER (), ((1.669199971E9) BETWEEN (LIKE(t0.c0, t0.c0)) AND (('Ye% ' IN ()))) FROM t0 ORDER BY ((t0.c0) NOT NULL) ASC  NULLS FIRST;SELECT ALL CAST((('-185809979') NOTNULL) AS REAL) FROM t0; -- 0ms;
SELECT COALESCE(DISTINCT CASE WHEN t0.c84 THEN t0.c60 ELSE t0.c0 END, ((t0.c75) BETWEEN (t0.c60) AND (t0.c0)), CAST(t0.c75 AS REAL), t0.c60), TOTAL((((t0.c75, NULL, t0.c84)) BETWEEN ((t0.c75, t0.c75, t0.c60)) AND ((t0.c0, t0.c60, t0.c84)))), ((RTRIM(t0.c84)) BETWEEN (((t0.c75)%(t0.c60))) AND (((t0.c75)<(t0.c60)))) FROM t0 WHERE (((CAST('' AS BLOB))<=(((x'c95f') BETWEEN ('-2117066983') AND (NULL))))) LIMIT 1926573835; -- 0ms;
SELECT DISTINCT t0.c75, (((t0.c60) NOT BETWEEN (t0.c0) AND (x'')) IN (MIN(t0.c60))), (((t0.c60))<>((TOTAL(t0.c75)))) FROM t0 WHERE ((('1025361157') NOT BETWEEN ('') AND (x'2cc1')) COLLATE BINARY); -- 0ms;
SELECT ALL CASE ((t0.c75)>(t0.c0))  WHEN t0.c0 COLLATE BINARY THEN t0.c75 COLLATE BINARY END FROM t0 WHERE ((((+ ('3z.^'))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((t0.c75 COLLATE NOCASE) NOT BETWEEN (((t0.c60) BETWEEN (t0.c60) AND (t0.c75))) AND (CASE WHEN t0.c75 THEN '-1587864379' END)) FROM t0 WHERE (CASE WHEN (~ ('')) THEN (((NULL))>(('-839306275'))) WHEN ((((x'')AND('-1325967323')))AND(x'')) THEN ((NULL)<=('0')) WHEN json_insert(x'', 0Xffffffff934cf586, '7AS+4HR') THEN (- (x'0fe7')) END); -- 0ms;
SELECT LAG(CAST(t0.c75 AS INTEGER), ((((t0.c84) ISNULL))>>('[pf,<dsu')), ((((t0.c84) IS FALSE)) NOT BETWEEN (0.8372484310223359) AND ((((t0.c60))<=((t0.c75)))))) OVER () FROM t0 WHERE (UPPER((((NULL))=(('852834383'))))); -- 0ms;
SELECT ((JULIANDAY(t0.c75, t0.c0, t0.c60, t0.c60, t0.c75)) BETWEEN (((t0.c75) BETWEEN (0.7397932092427815) AND (t0.c60))) AND (CASE WHEN t0.c0 THEN '' ELSE t0.c60 END)) FROM t0 WHERE ((((- (NULL))) NOT BETWEEN ((((0.6502798882047781, x'f910', NULL))=((NULL, '*Thg-㏋₻N', x'')))) AND ((('-1949131972')%(-441576890))))) ORDER BY CAST(t0.c75 AS NUMERIC) ASC, (CAST(t0.c75 AS INTEGER) IN ())  NULLS LAST, -1116999452 COLLATE BINARY DESC;SELECT ALL NULL, CUME_DIST() OVER (), (((((((t0.c75, '532022221', t0.c75))<((t0.c60, t0.c60, t0.c0))))AND(((t0.c84) NOTNULL))))AND(CASE t0.c84  WHEN t0.c60 THEN t0.c60 END)) FROM t0 WHERE ((CASE WHEN 0.36711244221701733 THEN '1915643759' ELSE '-1617583562' END IN (CASE WHEN '1732202225' THEN 0x2c9693a END))); -- 0ms;
SELECT ALL CASE WHEN ((((((((0.5731999823667286)AND(t0.c0)))OR(t0.c60)))OR(t0.c84)))OR(t0.c75)) THEN ((t0.c0) IS TRUE) WHEN CASE t0.c84  WHEN t0.c75 THEN t0.c0 ELSE t0.c0 END THEN CASE t0.c60  WHEN t0.c0 THEN t0.c84 END WHEN ((t0.c0)LIKE('-216596859')) THEN HEX(t0.c84) ELSE CASE WHEN t0.c84 THEN t0.c75 WHEN t0.c75 THEN x'a9e8' WHEN t0.c75 THEN t0.c0 END END FROM t0 WHERE (((((((-1259318070) BETWEEN ('-86442679') AND ('942756326')))OR((('qhl')GLOB(NULL)))))AND(((x'')||('-2124076871'))))); -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY t0.c0  NULLS LAST RANGE  UNBOUNDED PRECEDING) FROM t0; -- 0ms;
SELECT ALL ((((t0.c75)>(t0.c0))) NOT BETWEEN (t0.c84) AND (COUNT(*))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((t0.c75)OR(t0.c60)))AND(t0.c0)))OR((t0.c84 IN ()))))AND((- (t0.c84)))) FROM t0; -- 0ms;
SELECT ((((t0.c84) NOTNULL))OR(COUNT(*))), ((0x42f446cd) NOTNULL), ((((t0.c75)OR(0.3487837770881914)))AND(t0.c0)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT CASE CASE t0.c84  WHEN t0.c0 THEN t0.c84 WHEN t0.c0 THEN t0.c0 WHEN t0.c84 THEN t0.c60 END  WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c75) AND (t0.c84)) ELSE MIN(t0.c84) END FROM t0; -- 0ms;
SELECT DISTINCT ((((NOT (t0.c0))))=((((t0.c75)%(t0.c75))))) FROM t0 WHERE (((0.9823729553839592 COLLATE BINARY)<>(('-2055066737' IN ())))); -- 0ms;
SELECT DISTINCT ((((t0.c60)|(t0.c84)))<=((('-2071923696') BETWEEN (t0.c84) AND (t0.c60)))), ((HEX(DISTINCT t0.c60)) IS FALSE), GROUP_CONCAT(((t0.c75) IS FALSE) COLLATE NOCASE) FROM t0; -- 0ms;
SELECT ALL SUM((~ (NULL))) FROM t0 WHERE (((((((((CASE 0.8558885590485088  WHEN x'e1bae5c3' THEN '3ꖈ' ELSE x'eea052c2' END)AND(((x'')<('%+''A￿n㓂3.')))))OR(('' IN ()))))OR(CAST(x'' AS TEXT))))OR((((('E&%src')AND(0.541515832062249)))OR(''))))) LIMIT -799813389; -- 0ms;
SELECT DISTINCT (((t0.c0)!=(592988979)) IN ()), x'', CAST(((((t0.c0)OR(t0.c60)))AND(NULL)) AS TEXT) FROM t0 ORDER BY (((t0.c75)) BETWEEN (((t0.c60 IN ()))) AND ((COALESCE(t0.c60, t0.c75))))  NULLS LAST, (- (((t0.c0)&(t0.c75)))); -- 0ms;
SELECT (~ (t0.c75)), COUNT(((t0.c75)IS(t0.c60))) OVER (), GROUP_CONCAT((t0.c0 IN (t0.c75))) OVER () FROM t0 WHERE ((NULL COLLATE NOCASE IN ((((NULL, '7AS+4HR', NULL)) BETWEEN ((0.28284629565366926, '', '{bM_')) AND ((x'', NULL, '-1356556293')))))); -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c60, t0.c60)) BETWEEN ((CAST(t0.c84 AS BLOB), t0.c60, (((t0.c84)) BETWEEN ((t0.c84)) AND ((t0.c75))))) AND ((TRIM(DISTINCT t0.c75), CASE WHEN t0.c0 THEN t0.c0 END, (NOT (t0.c0))))) FROM t0 WHERE (((CASE WHEN '\nbykfx' THEN '8222433' END)==(((x'')IS NOT(NULL))))); -- 0ms;
SELECT json_quote(CAST(t0.c75 AS BLOB)) FROM t0; -- 1ms;
SELECT ALL GROUP_CONCAT(COUNT(*)), IFNULL(t0.c84, ((((t0.c0)OR(t0.c75)))AND(t0.c0))), (((NOT (t0.c0))) ISNULL) FROM t0 ORDER BY t0.c0  NULLS FIRST, ((CHANGES())<<(t0.c84)) DESC, ((CAST(t0.c84 AS TEXT))<((- (t0.c60)))) DESC  NULLS FIRST;SELECT DISTINCT ((((t0.c60)%(t0.c84)))>=(((t0.c60)GLOB(t0.c60)))) FROM t0; -- 0ms;
SELECT DISTINCT ((HEX(t0.c84)) NOT BETWEEN (t0.c84) AND (0.07790319477026286)) FROM t0; -- 0ms;
SELECT ((((((((((((x'beb0')AND((((t0.c0, t0.c60, t0.c60)) BETWEEN ((t0.c60, t0.c60, t0.c84)) AND ((t0.c75, t0.c60, t0.c0))))))AND(SUBSTR(t0.c75, t0.c0))))OR(((t0.c0)&(t0.c84)))))AND(COUNT(*))))OR((+ (t0.c0)))))AND('-120176475')) FROM t0 GROUP BY ((CAST(t0.c75 AS REAL)) IS FALSE); -- 0ms;
SELECT DISTINCT SUM(((t0.c60) IS FALSE) COLLATE NOCASE) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c60))>=((t0.c75))) FROM t0 WHERE (ABS(DISTINCT 0.10679903894104581 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT CAST(t0.c84 AS REAL) COLLATE NOCASE, (((t0.c0) IS TRUE) IN ()), (CASE t0.c60  WHEN t0.c60 THEN t0.c84 ELSE t0.c75 END IN (((t0.c60)||(t0.c75)))) FROM t0 WHERE ((~ ('850234787' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((CASE '-1571432987'  WHEN t0.c84 THEN 0.49345867158931567 ELSE t0.c84 END)|(CASE t0.c75  WHEN t0.c75 THEN t0.c0 END)), ROW_NUMBER() OVER (), (('1965446341')&(t0.c84)) COLLATE NOCASE FROM t0 WHERE ((x'' IN ()) COLLATE BINARY); -- 0ms;
SELECT ALL ((((CAST(t0.c0 AS BLOB))AND((- (t0.c60)))))AND(((t0.c84) BETWEEN (t0.c60) AND (t0.c75)))), SUM(((t0.c60)AND(t0.c0))) OVER (), ((((((((((((t0.c75)OR(t0.c60)))OR(t0.c75)))OR((((t0.c60, t0.c0, t0.c60)) NOT BETWEEN ((t0.c60, t0.c0, t0.c84)) AND ((t0.c60, t0.c84, t0.c75))))))OR(((t0.c0) BETWEEN (t0.c60) AND (t0.c0)))))OR(CASE t0.c84  WHEN t0.c84 THEN t0.c75 ELSE t0.c0 END)))AND(((t0.c60) NOT NULL))) FROM t0; -- 0ms;
SELECT DISTINCT 0.8427963647654748 FROM t0 GROUP BY '-1935955183' ORDER BY CASE ((t0.c60)LIKE(t0.c84))  WHEN (t0.c60 IN ()) THEN ((((((((t0.c75)OR(t0.c0)))OR(t0.c60)))AND(t0.c84)))AND(t0.c84)) ELSE (NOT (t0.c60)) END ASC; -- 0ms;
SELECT DISTINCT (((~ (t0.c60))) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT TOTAL(CAST(t0.c75 AS BLOB)) OVER ( PARTITION BY CASE LTRIM(t0.c60, t0.c0)  WHEN ((((((((0.7618408814919969)OR(t0.c75)))OR(t0.c0)))OR(t0.c84)))OR(t0.c0)) THEN t0.c60 COLLATE BINARY ELSE (+ (t0.c75)) END, ((((((((((t0.c84)OR(t0.c84)))AND(-1827613550)))AND(t0.c0)))OR(t0.c0)))&(((NULL) IS TRUE)))) FROM t0 WHERE ((((NULL, 0.5771922693501611, '211317194')) NOT BETWEEN (('-1417187030', CAST(x'' AS INTEGER), (('1444837140')*(0.7234098563379041)))) AND (((((NULL)) NOT BETWEEN ((0x1a2811c1)) AND ((NULL))), -1.990582085E9, CASE 0xffffffffc4a93426  WHEN 1e500 THEN '1803642521' ELSE '' END)))); -- 0ms;
SELECT DISTINCT ((((t0.c75)!=(t0.c75))) NOT BETWEEN ((((t0.c0))>=((t0.c75)))) AND (((t0.c75) NOT BETWEEN (x'') AND (t0.c0)))), (((((t0.c0, t0.c84, t0.c60)) BETWEEN ((t0.c84, t0.c60, t0.c75)) AND ((t0.c0, t0.c60, t0.c84))))+(((t0.c84) NOT BETWEEN ('-538185515') AND (t0.c0)))), ((((t0.c60)OR(t0.c60))) IS FALSE) FROM t0 ORDER BY CAST('-942061201' AS TEXT) ASC  NULLS LAST; -- 1ms;
SELECT HEX(DISTINCT (((t0.c60))>((t0.c60)))) FROM t0 WHERE ((('島z') NOTNULL)); -- 0ms;
SELECT ALL ((NULL) IS FALSE), CAST(t0.c0 AS TEXT) COLLATE NOCASE, AVG((- (t0.c60))) OVER () FROM t0 WHERE (((CAST('-rs<y-?' AS NUMERIC))OR(((NULL) BETWEEN (1546535911) AND (NULL))))); -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c60)IS NOT(t0.c0))) OVER (), (- (((t0.c75) NOT BETWEEN (t0.c0) AND (t0.c0)))), SUBSTR(t0.c75, NULL) FROM t0 WHERE ((((((0.8120843832609412) IS TRUE)))<((-1990582085 COLLATE BINARY)))); -- 0ms;
SELECT ALL ((CAST('0.541515832062249' AS BLOB)) NOTNULL) FROM t0 GROUP BY CASE t0.c0  WHEN t0.c60 THEN t0.c0 WHEN t0.c0 THEN t0.c84 WHEN t0.c84 THEN t0.c75 END COLLATE NOCASE, CASE WHEN ((t0.c84)GLOB(t0.c60)) THEN t0.c60 COLLATE NOCASE ELSE (t0.c75 IN ('')) END, t0.c75 HAVING ((((CAST(t0.c84 AS TEXT))OR((((t0.c60, t0.c84, t0.c0)) BETWEEN ((t0.c0, t0.c75, t0.c75)) AND ((t0.c75, t0.c75, t0.c84))))))AND(((t0.c0)||(t0.c60)))); -- 0ms;
SELECT ALL CUME_DIST() OVER (), (((t0.c75 IN ())) NOTNULL), (((0.5382081011489328)-(t0.c0)) IN ()) FROM t0 WHERE (((',~P~')GLOB(((0.05520162073189616) NOT NULL)))) LIMIT 819602382 OFFSET -566277429; -- 0ms;
SELECT DISTINCT ((((((((((t0.c84)<>(t0.c84)))OR((((NULL)) BETWEEN ((t0.c84)) AND ((t0.c75))))))AND(((t0.c75) NOTNULL))))AND(SUM(t0.c0))))AND(((t0.c84) BETWEEN (t0.c84) AND (t0.c84)))), (((0.8372484310223359 IN ()))&(((((t0.c75)AND(t0.c0)))OR(t0.c75)))), (+ (t0.c60)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c0)>=(t0.c84)))OR(((t0.c84) BETWEEN (t0.c84) AND (t0.c0)))))OR((- (t0.c75)))), (- ((NOT ('-1468965442')))), (~ (t0.c75 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c75) IS FALSE) COLLATE BINARY FROM t0 WHERE (((((7.42575236E8) NOT BETWEEN (0.42471278612909635) AND (NULL))) NOTNULL)); -- 0ms;
SELECT COUNT(*) OVER () FROM t0 WHERE ((((('K1>w*') NOTNULL))-(NULL COLLATE BINARY))) LIMIT -223879146; -- 0ms;
SELECT DISTINCT CASE t0.c0  WHEN t0.c60 THEN t0.c0 WHEN t0.c84 THEN t0.c75 WHEN t0.c75 THEN 'P5l7*缗f<' ELSE t0.c75 END COLLATE NOCASE, ((((((((CAST(t0.c75 AS TEXT))AND(((t0.c84)LIKE(t0.c84)))))AND((NOT (t0.c75)))))OR((- (t0.c84)))))OR(CASE NULL  WHEN NULL THEN t0.c0 END)), t0.c60, CASE ((((t0.c60)OR(t0.c0)))OR(t0.c84))  WHEN ((t0.c75)<=(t0.c75)) THEN ((t0.c75)>=(t0.c84)) WHEN ((t0.c75)==(t0.c75)) THEN t0.c75 COLLATE NOCASE WHEN COUNT(t0.c0) THEN (t0.c60 IN (t0.c60, t0.c60)) ELSE ((t0.c0) NOT BETWEEN (t0.c84) AND (t0.c0)) END, CAST(UNICODE(t0.c0) AS INTEGER) FROM t0; -- 0ms;
SELECT '848396365' FROM t0 WHERE (((LIKELIHOOD(0.433592068649409, 0.8667733109200151))<(0X2ef6f090 COLLATE RTRIM))); -- 0ms;
SELECT GROUP_CONCAT((((t0.c60))>((0Xfffffffff3856564)))), ((t0.c75 COLLATE BINARY) BETWEEN (((t0.c84)AND(t0.c84))) AND (t0.c0)), ((CASE WHEN t0.c84 THEN t0.c0 WHEN t0.c84 THEN t0.c60 WHEN 0.7187944452913124 THEN 0Xffffffffefde4228 END) NOT BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ()))), ((((t0.c0) ISNULL)) NOTNULL), CAST(t0.c60 COLLATE BINARY AS TEXT) FROM t0; -- 0ms;
SELECT (((t0.c60)) BETWEEN (((((t0.c75))<((t0.c60))))) AND (((((t0.c84, NULL, t0.c84, t0.c0, 0.5479160717665496))!=((t0.c84, '2a0lw6x', t0.c84, t0.c75, t0.c60)))))) FROM t0; -- 0ms;
SELECT x'' FROM t0 WHERE (((CAST('' AS INTEGER)) NOT BETWEEN (((((NULL)OR('1452469270')))OR(0.5929761660396217))) AND (0.7348200802787394 COLLATE RTRIM))); -- 0ms;
SELECT ALL CASE WHEN (((t0.c84))>((t0.c0))) THEN ((t0.c0) BETWEEN (t0.c75) AND (t0.c84)) WHEN ((((t0.c60)AND(t0.c75)))AND(t0.c60)) THEN ((0.49345867158931567) NOT NULL) WHEN CAST(t0.c84 AS TEXT) THEN AVG(t0.c75) END FROM t0 WHERE (CAST((x'' IN ()) AS INTEGER)); -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS INTEGER), COUNT((t0.c0 IN ())) OVER (), (((t0.c84 IN ()))+(t0.c84)) FROM t0 ORDER BY CASE WHEN '-1141833838' THEN CAST(t0.c84 AS INTEGER) ELSE ((t0.c0)/(t0.c84)) END ASC; -- 0ms;
SELECT DISTINCT ((t0.c75) BETWEEN ((((t0.c75))<>((t0.c60)))) AND (MIN(t0.c60))) FROM t0 WHERE (((('Ev')) BETWEEN (((NULL IN ()))) AND (((~ (x'cad1')))))); -- 0ms;
SELECT DISTINCT ((NULL) NOTNULL) FROM t0; -- 0ms;
SELECT ((COUNT(t0.c0)) IS TRUE) FROM t0 LIMIT 1027348676; -- 0ms;
SELECT DISTINCT (((TRIM(t0.c75)))<=((CAST(t0.c60 AS INTEGER)))) FROM t0 ORDER BY CAST(TYPEOF(DISTINCT t0.c0) AS TEXT); -- 0ms;
SELECT DISTINCT (((-1.46985765E8)) NOT BETWEEN ((((((t0.c60)AND(t0.c0)))AND(t0.c84)))) AND ((((t0.c75)&(t0.c60))))), (((2.11317194E8, ((t0.c0)==(t0.c84)), (~ (t0.c60))))<>((((t0.c84)-(t0.c0)), ((((((((t0.c75)OR(t0.c0)))OR(t0.c0)))AND(766083763)))OR(t0.c75)), (((t0.c60, t0.c0, NULL))<=((t0.c0, t0.c75, t0.c60)))))), GROUP_CONCAT(CAST(t0.c75 AS BLOB)) FROM t0 ORDER BY (TRIM(t0.c75) IN (((t0.c84)IS(t0.c0)), (+ (t0.c60)))) DESC  NULLS LAST; -- 0ms;
SELECT (NOT (((t0.c84) NOTNULL))), ((((((((t0.c75 COLLATE NOCASE)AND(((t0.c60) BETWEEN (t0.c75) AND (t0.c0)))))OR(((t0.c75) BETWEEN (t0.c75) AND (t0.c75)))))AND(((((((((t0.c0)OR(t0.c0)))AND(t0.c60)))AND(t0.c84)))AND(x'')))))OR((+ (t0.c84)))), LOWER(DISTINCT ((t0.c0)IS(t0.c84))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c75)+(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN ((t0.c75)) AND ((t0.c84))), COUNT(t0.c75), ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c75 THEN t0.c60 WHEN t0.c60 THEN t0.c0 END)OR((t0.c84 IN (t0.c84, t0.c84)))))AND(((0.5892318368559611) BETWEEN (t0.c75) AND (t0.c75)))) FROM t0 WHERE ((((((x'' IN (x'')))AND((((('C#')OR(0xffffffff933bb388)))AND(0.7797146708759929)))))AND(x''))); -- 0ms;
SELECT ((((1.025361157E9)AND(MIN(t0.c75))))AND(COUNT(t0.c60))) FROM t0 WHERE ((- (((0.671417977965484)/(0xfffffffffb6a785a))))); -- 0ms;
SELECT DISTINCT COUNT(t0.c84) OVER () FROM t0; -- 0ms;
SELECT DISTINCT SUM(((t0.c0)&(t0.c75))) OVER ( PARTITION BY t0.c60, CASE WHEN t0.c84 THEN (t0.c84 IN (NULL)) ELSE (((t0.c75))<=((t0.c75))) END), ((COUNT(t0.c60)) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c60)))) AND ((t0.c0 IN ()))), CAST(t0.c75 AS NUMERIC) COLLATE RTRIM FROM t0 LIMIT -2034250608 OFFSET 2066193528; -- 0ms;
SELECT CUME_DIST() OVER () FROM t0 NOT INDEXED; -- 0ms;
SELECT (- (CAST(t0.c60 AS REAL))), x'0567', NULL FROM t0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t0 WHERE (CASE WHEN ((x'') IS TRUE) THEN TRIM(x'') WHEN '' THEN ((0.4545116118477073) NOTNULL) WHEN (- (NULL)) THEN CASE WHEN '' THEN NULL WHEN '-1907011402' THEN 0x7d568956 WHEN '(o/' THEN '' END END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t0.c0 IN ())) FROM t0; -- 0ms;
SELECT ((((t0.c84) NOT BETWEEN ('263901445') AND (t0.c60)))OR((t0.c75 IN ()))) FROM t0 NOT INDEXED WHERE (CASE CAST(NULL AS BLOB)  WHEN ((NULL)*(0.11604510163709292)) THEN (('397985524') ISNULL) ELSE (('1740469211')-(NULL)) END) ORDER BY json_array_length(t0.c75); -- 0ms;
SELECT DISTINCT ((((t0.c0) ISNULL)) BETWEEN (CAST(t0.c84 AS TEXT)) AND (((t0.c75) BETWEEN (t0.c0) AND (t0.c75)))) FROM t0 ORDER BY CASE ((t0.c84) NOTNULL)  WHEN LOWER(t0.c75) THEN ((t0.c75) IS TRUE) WHEN SQLITE_COMPILEOPTION_USED(t0.c60) THEN (t0.c0 IN ()) WHEN ((t0.c0)AND(t0.c84)) THEN ((t0.c84)IS(t0.c84)) ELSE ((t0.c84) BETWEEN (t0.c0) AND (t0.c75)) END DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(t0.c60 COLLATE NOCASE) FROM t0 WHERE (CASE WHEN ((0.4040305993859151) BETWEEN (-1153749577) AND (x'66631d17')) THEN ((NULL) NOTNULL) ELSE ((NULL) NOTNULL) END); -- 0ms;
SELECT DISTINCT t0.c75 FROM t0 LIMIT 1234794306 OFFSET -1630963182; -- 0ms;
SELECT ALL (+ (((t0.c84) BETWEEN (t0.c60) AND (t0.c60)))) FROM t0; -- 0ms;
SELECT ALL NULL FROM t0; -- 0ms;
SELECT DISTINCT (((((((t0.c0)AND(t0.c60)))AND(t0.c0)), CASE WHEN t0.c60 THEN t0.c60 END, (t0.c75 IN ())))<=((((t0.c75) BETWEEN (t0.c60) AND (t0.c60)), CASE WHEN t0.c0 THEN t0.c60 ELSE t0.c75 END, (NOT (t0.c60))))), CASE ((t0.c84)=(t0.c60))  WHEN ((t0.c0)-(t0.c0)) THEN CAST(t0.c60 AS BLOB) WHEN ((0.28156617717898424) IS TRUE) THEN (~ (t0.c60)) WHEN t0.c60 COLLATE NOCASE THEN NULL COLLATE NOCASE ELSE ((t0.c0)AND(t0.c60)) END, ((((0.6598781194051425)) BETWEEN ((t0.c84)) AND ((t0.c84))) IN ()) FROM t0 WHERE ((((x'6043')>>(x'')) IN ())); -- 0ms;
SELECT DISTINCT 0Xffffffff8de4ad8d FROM t0 WHERE ((- ((x'' IN ('-57924537'))))); -- 0ms;
SELECT ALL ((json_object('926744089', 'V彷'))AND(t0.c84 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT CASE ((t0.c0) NOTNULL)  WHEN CASE t0.c75  WHEN t0.c84 THEN t0.c75 END THEN (t0.c84 IN ()) WHEN CAST(t0.c60 AS INTEGER) THEN (((t0.c60))<=((t0.c60))) WHEN t0.c84 COLLATE BINARY THEN UPPER(DISTINCT t0.c75) END, (((t0.c84) NOT BETWEEN (t0.c75) AND (t0.c60)) IN ()), t0.c60 FROM t0 WHERE ((((0xffffffffa50f9089)<<(x'ac1c')) IN ())); -- 0ms;
SELECT LIKELY(t0.c84) COLLATE BINARY FROM t0 NOT INDEXED; -- 0ms;
SELECT ((t0.c60)>=(t0.c84)) COLLATE RTRIM FROM t0 GROUP BY CASE WHEN CAST(t0.c75 AS TEXT) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c60 ELSE t0.c60 END ELSE (x'' IN ()) END HAVING COUNT(*); -- 0ms;
SELECT ALL '-377632227', CAST(t0.c75 AS TEXT), FIRST_VALUE(LTRIM(t0.c60)) OVER (), ROW_NUMBER() OVER (), (NOT (CAST(t0.c84 AS REAL))), UNLIKELY(((t0.c75) BETWEEN (t0.c60) AND (t0.c0))), CAST(((t0.c0)OR(t0.c0)) AS BLOB) FROM t0 WHERE (((CAST('-971044232' AS INTEGER)) IS FALSE)); -- 0ms;
SELECT ALL ((((((NULL) IS FALSE))AND(((((t0.c75)OR(t0.c75)))OR(t0.c84)))))AND(0.15362747211131367)) FROM t0 GROUP BY DATETIME(((t0.c75) NOT BETWEEN (t0.c0) AND (t0.c60)), ((t0.c0) IS FALSE), CAST(t0.c0 AS INTEGER)), CAST(((t0.c60) NOT BETWEEN (t0.c0) AND (t0.c75)) AS TEXT), CAST(((t0.c84)LIKE(t0.c0)) AS TEXT), ((x'') NOT NULL), (((((t0.c84, NULL, t0.c60)) BETWEEN ((t0.c75, x'1976', t0.c75)) AND ((t0.c75, t0.c75, t0.c0)))) BETWEEN (NULL) AND (((t0.c75) ISNULL))); -- 1ms;
SELECT DISTINCT ((((((0.587766198817008)OR(t0.c75)))OR(t0.c60))) ISNULL), NULL, t0.c0 FROM t0 WHERE ((((((1.420666705E9)) BETWEEN ((NULL)) AND ((0Xffffffffa621eeb4))))||(((NULL)&('1728423579'))))); -- 0ms;
SELECT t0.c75, (~ (t0.c84)) COLLATE BINARY, ((0xfffffffff29dc4c9)IS(t0.c60)) COLLATE BINARY FROM t0 WHERE (((- (x'2272')) IN ())); -- 0ms;
SELECT DISTINCT '397985524' COLLATE NOCASE FROM t0 WHERE (((((CASE WHEN x'fc71' THEN 0.3644507198475979 END)AND(((0X4ca6be3a)+(x'')))))AND(('!Tn)kz ' IN ())))) ORDER BY CASE (+ (t0.c0))  WHEN CAST(t0.c60 AS NUMERIC) THEN ((t0.c60) NOT BETWEEN (NULL) AND (t0.c60)) ELSE CAST(t0.c84 AS NUMERIC) END  NULLS FIRST, ((((((((((t0.c60)OR(t0.c0)))OR(COALESCE(DISTINCT t0.c0, t0.c84))))OR(((t0.c75)<>(t0.c60)))))AND(CAST(t0.c75 AS TEXT))))OR((t0.c0 IN ())))  NULLS FIRST LIMIT -1100254030; -- 0ms;
SELECT ALL (~ (TOTAL(t0.c84))) FROM t0 WHERE ((NOT ((~ (-2.074960376E9))))) LIMIT -2034250608 OFFSET 1220892664; -- 0ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN ((NOT (t0.c60))) AND ((t0.c60 IN ()))), CAST(COUNT(*) AS INTEGER), CASE WHEN CAST(t0.c84 AS REAL) THEN t0.c75 END FROM t0 WHERE (CASE 0.5434229338521208 COLLATE NOCASE  WHEN NULL THEN CASE WHEN '182652028' THEN x'' WHEN NULL THEN x'' WHEN x'' THEN 0.1129369765429612 ELSE NULL END ELSE (('982211071')*(0x53488688)) END); -- 0ms;
SELECT DISTINCT ((((CAST(t0.c84 AS NUMERIC))AND(SUM(''))))OR(-278945441)), TOTAL(CAST(t0.c60 AS BLOB)) OVER (), (((t0.c75, t0.c75, t0.c0)) BETWEEN ((((((t0.c0)AND(t0.c60)))OR(t0.c0)), (t0.c84 IN (t0.c84, t0.c0)), ((t0.c60) NOTNULL))) AND (((((t0.c84))>((t0.c0))), ((t0.c75) BETWEEN (t0.c60) AND (t0.c84)), ((t0.c60)<('0.6740543908168671'))))) FROM t0 GROUP BY ((((t0.c84)=(t0.c84)))==(t0.c84)) HAVING (((t0.c0 IN ()))<<(((t0.c0)*(t0.c0)))); -- 0ms;
SELECT COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM t0; -- 0ms;
SELECT ((((t0.c0)OR(t0.c75)))OR(t0.c60)) COLLATE BINARY FROM t0 WHERE ((((LIKELIHOOD(-4.92490324E8, 0.049391955837029156)))<=((CASE WHEN 0.6355877445333767 THEN 'k' WHEN NULL THEN NULL WHEN '' THEN x'' ELSE '728413284' END)))) GROUP BY (((t0.c0)) BETWEEN ((t0.c75)) AND ((t0.c75))) COLLATE NOCASE; -- 1ms;
SELECT DISTINCT AVG(CASE WHEN t0.c75 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c84 THEN t0.c60 END) FROM t0 WHERE (((HEX('404907958'))&(((((NULL)OR('0.38434713445138335')))OR('-1824803960'))))) GROUP BY CASE (((t0.c60))==((t0.c0)))  WHEN t0.c75 COLLATE NOCASE THEN (((t0.c60))>((t0.c75))) WHEN ROUND(t0.c84, t0.c0) THEN (((t0.c84))<((t0.c60))) WHEN CAST(t0.c84 AS BLOB) THEN ((t0.c75) ISNULL) ELSE CASE x''  WHEN NULL THEN t0.c84 WHEN t0.c60 THEN t0.c60 WHEN x'' THEN x'' WHEN t0.c84 THEN t0.c84 WHEN t0.c0 THEN t0.c60 ELSE t0.c0 END END, (((+ (t0.c0))) NOT BETWEEN ((- (t0.c75))) AND ((+ (t0.c0)))), (CASE WHEN t0.c0 THEN t0.c60 WHEN t0.c60 THEN NULL WHEN t0.c60 THEN t0.c75 ELSE t0.c0 END IN ()) HAVING ((((t0.c75) BETWEEN (x'') AND (t0.c75)))>=(CASE WHEN t0.c84 THEN t0.c75 END)) LIMIT -399462744 OFFSET 1666607282; -- 0ms;
SELECT DISTINCT NULL, NTILE((NOT (((t0.c84)<>(t0.c84))))) OVER (), PERCENT_RANK() OVER () FROM t0 WHERE (((CAST(x'' AS TEXT)) IS TRUE)) LIMIT 391073922; -- 0ms;
SELECT ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c60))), (NULL IN (t0.c0)), (t0.c0 IN ())))<=(('(ᖫ' COLLATE NOCASE, t0.c60, ((t0.c75)>>(t0.c84))))) FROM t0 WHERE (CAST(NULL AS BLOB) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE UPPER(((t0.c0)OR(t0.c84)))) OVER () FROM t0 WHERE ('璿I'); -- 0ms;
SELECT GROUP_CONCAT(ABS(t0.c84)) OVER (), (NULL IN ((t0.c75 IN ()), (t0.c84 IN ()))), IFNULL(((((t0.c60)AND(t0.c75)))OR(t0.c84)), load_extension(t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c75)OR(t0.c84)))OR(t0.c75)))+(t0.c84 COLLATE RTRIM)), SUM(((((((((t0.c0)AND(t0.c0)))AND(t0.c84)))AND(t0.c60)))AND(t0.c60))) OVER (), (TOTAL(t0.c84) IN ()), CASE (((t0.c84))>=((t0.c60)))  WHEN (((t0.c0))<=((t0.c75))) THEN '1852849079' ELSE ((t0.c84)<(t0.c84)) END, LAST_VALUE(0.8552741719297932) OVER ( ORDER BY (+ ((((t0.c75, t0.c84, t0.c84, t0.c75, 'rU'))<((t0.c0, t0.c0, 1910527644, 'wHమq', t0.c75))))) GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM t0; -- 1ms;
SELECT ALL CAST(CASE WHEN t0.c84 THEN t0.c60 ELSE t0.c75 END AS BLOB) FROM t0 ORDER BY (- (-1976165935));SELECT ALL (((((t0.c84)) NOT BETWEEN ((t0.c75)) AND ((t0.c60)))) NOTNULL) FROM t0 WHERE (((1375888598) NOT BETWEEN (x'') AND (NULL)) COLLATE NOCASE) ORDER BY ((t0.c84) NOT BETWEEN (t0.c0) AND (x'')) COLLATE NOCASE COLLATE BINARY ASC, CAST(t0.c84 AS TEXT) COLLATE BINARY; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t0.c84 IN ()) COLLATE RTRIM) OVER (), ((CASE NULL  WHEN '[R48~V╮b' THEN t0.c0 END)<=(AVG(t0.c84))), (((t0.c75 COLLATE NOCASE))=((0Xffffffffb3165bb4))) FROM t0 WHERE ((IFNULL(DISTINCT NULL, NULL) IN ())); -- 0ms;
SELECT CUME_DIST() OVER () FROM t0 WHERE (ABS(DISTINCT (~ (x'')))) GROUP BY ((((t0.c84)) BETWEEN ((t0.c75)) AND ((t0.c60))) IN ()); -- 0ms;
SELECT DISTINCT (((CASE WHEN t0.c84 THEN '^' WHEN t0.c84 THEN t0.c0 WHEN t0.c0 THEN 0.069013278057236 ELSE t0.c0 END, AVG(t0.c84), AVG(t0.c75)))!=((((t0.c0)>=(t0.c0)), ((t0.c0) BETWEEN (t0.c60) AND (t0.c60)), CASE WHEN t0.c75 THEN t0.c75 END))) FROM t0 WHERE (((- ('-2061285677')) IN ())); -- 0ms;
SELECT NULL FROM t0; -- 0ms;
SELECT t0.c75, (((t0.c84)) BETWEEN (('')) AND (((((t0.c60))<=((0.4563655114794477)))))), CAST(t0.c75 AS REAL) COLLATE NOCASE FROM t0 NOT INDEXED GROUP BY CASE t0.c60  WHEN t0.c84 THEN t0.c75 ELSE t0.c0 END COLLATE BINARY, t0.c0, (((t0.c0 IN ())) ISNULL), (((((t0.c75) NOT BETWEEN (t0.c75) AND (t0.c75))))!=(((('}')|(t0.c0))))), ((((((((((((((((t0.c75)AND(0xfffffffff5d09dad)))AND(t0.c84)))AND((((t0.c0, t0.c84, t0.c84, t0.c0, t0.c75))<=((t0.c75, t0.c0, t0.c84, t0.c84, t0.c0))))))OR(CASE WHEN t0.c84 THEN t0.c60 END)))OR((+ (t0.c84)))))AND(((t0.c60) BETWEEN (t0.c60) AND (t0.c0)))))OR(x'' COLLATE RTRIM)))AND(((t0.c75) BETWEEN (t0.c75) AND (x'')))) HAVING ((((((x'') BETWEEN (t0.c0) AND (t0.c60)))AND(COUNT(t0.c75))))OR(((t0.c75) IS TRUE))); -- 0ms;
SELECT (((((t0.c75))<((0.07876439896659382)))) BETWEEN (CAST(t0.c75 AS NUMERIC)) AND (TIME(t0.c84, t0.c84, t0.c84, t0.c0, t0.c75))), (CASE WHEN t0.c60 THEN t0.c60 END IN (SQLITE_COMPILEOPTION_GET(t0.c75))), (((((NOT (t0.c75)))OR(GROUP_CONCAT(t0.c0))))AND(CAST(t0.c60 AS TEXT))) FROM t0; -- 0ms;
SELECT ALL t0.c60, CASE (t0.c75 IN (t0.c75))  WHEN ((t0.c0)-(t0.c75)) THEN (((t0.c75)) NOT BETWEEN ((t0.c75)) AND ((t0.c84))) ELSE t0.c84 END, TOTAL(CAST(t0.c0 AS NUMERIC)) OVER () FROM t0 WHERE (((((NULL)+(-5.7924537E7))) IS FALSE)) LIMIT -1005653879; -- 1ms;
SELECT DISTINCT t0.c84 FROM t0 WHERE ((('-39055496' IN ()) IN ())); -- 0ms;
SELECT DISTINCT (~ ((- (t0.c0)))) FROM t0; -- 0ms;
SELECT CASE ((t0.c75)||(t0.c0))  WHEN 0.4402152397763729 THEN ((t0.c60) NOT NULL) ELSE t0.c84 END, ((MAX(t0.c0))<=(x'')), CASE WHEN COUNT(*) THEN (~ (t0.c75)) END FROM t0 WHERE ((((CAST(0.1963939122449454 AS INTEGER)))>=((0.11145810030154601)))); -- 0ms;
SELECT DISTINCT ((((t0.c60) NOT NULL))<=(('5CN}[3wI' IN ()))) FROM t0 WHERE (CAST((('[므]') BETWEEN (0.6984389602420805) AND (NULL)) AS NUMERIC)) GROUP BY (((t0.c60, t0.c75, t0.c84))>=((t0.c0, t0.c84, t0.c75))) COLLATE BINARY HAVING NULL; -- 0ms;
SELECT DISTINCT ((((0.23926367933720283)-(t0.c60)))>=((- (t0.c0)))) FROM t0; -- 0ms;
SELECT ALL (((t0.c75 COLLATE RTRIM))<>((((t0.c84)<=(t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT (((((((t0.c0))<=((t0.c84))))OR(((t0.c84) NOT BETWEEN (t0.c60) AND (t0.c60)))))OR((((t0.c0, t0.c60, t0.c0)) BETWEEN ((t0.c75, x'', t0.c0)) AND ((t0.c60, t0.c60, t0.c84))))), (+ ((t0.c0 IN ()))), CASE WHEN (- (t0.c60)) THEN ((t0.c84)||(t0.c60)) ELSE ((t0.c84) BETWEEN (NULL) AND (t0.c84)) END FROM t0 WHERE (CASE ((x'5226')|(''))  WHEN (('0.04345146464033156')+(0.7946742221380676)) THEN ((-577412132)<(NULL)) ELSE ((0.4046001282559937)&(0.18528071400315904)) END) ORDER BY ((CASE t0.c75  WHEN t0.c0 THEN t0.c0 END) NOT NULL) DESC  NULLS FIRST, CAST(((t0.c75)>>(t0.c60)) AS TEXT) LIMIT 1366366229; -- 0ms;
SELECT DISTINCT SUM(t0.c75 COLLATE RTRIM COLLATE RTRIM) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c84 COLLATE NOCASE) NOT NULL) FROM t0 WHERE (((x'0000')!=(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (t0.c84 COLLATE NOCASE IN ()), SUM(((((1.155774597E9)AND(t0.c0)))AND(t0.c60))), x'' FROM t0 LIMIT 1952366415; -- 0ms;
SELECT CAST(t0.c60 AS INTEGER) COLLATE NOCASE, NULL, ((((((((((t0.c0) NOT BETWEEN (t0.c0) AND ('0.4643395693766158')))OR(CASE WHEN t0.c60 THEN t0.c84 WHEN t0.c75 THEN t0.c0 WHEN t0.c0 THEN t0.c60 ELSE t0.c60 END)))OR(t0.c75 COLLATE NOCASE)))AND(CAST(t0.c84 AS NUMERIC))))OR(((t0.c75)!=(t0.c84)))) FROM t0 WHERE (((-762536224) BETWEEN (x'024c') AND ('438833601')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((t0.c60)|(t0.c75)) COLLATE NOCASE FROM t0; -- 1ms;
SELECT DISTINCT ((((json_array_length(t0.c0, t0.c84))OR((+ (t0.c0)))))AND(CAST(t0.c75 AS REAL))), '%3*v	䎞', HEX((~ (t0.c0))) FROM t0 WHERE ('-1101285168' COLLATE BINARY) GROUP BY t0.c60, ((ABS(DISTINCT x'ea22')) NOTNULL), ((((x'')|(t0.c0)))<<(CAST(t0.c60 AS INTEGER)));SELECT DISTINCT UPPER(t0.c84) FROM t0 WHERE ((NOT ((('-216596859') NOTNULL)))); -- 0ms;
SELECT ALL ((((((((((((t0.c84)OR(t0.c0)))OR(t0.c60)))AND(t0.c60)))OR(t0.c75)))OR(CASE WHEN t0.c84 THEN t0.c60 END)))AND(((t0.c75) IS TRUE))), t0.c84, (((((- (t0.c75)))OR(t0.c84 COLLATE NOCASE)))OR(t0.c75)) FROM t0 GROUP BY ((((t0.c84) NOT BETWEEN (t0.c75) AND (t0.c0)))>((+ (t0.c84)))) HAVING t0.c84; -- 0ms;
SELECT ALL ('-876279248' IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c75 AS TEXT))&(((((t0.c84)OR(t0.c60)))OR(t0.c0)))), ((((((((((t0.c75)OR(t0.c0)))AND(t0.c0)))AND(t0.c84)))OR(t0.c60)))%(COUNT(*))), ((t0.c75 COLLATE BINARY)IS(((t0.c60)>>(t0.c60)))) FROM t0 WHERE ((((0X6dbd7d04)GLOB('')) IN (x''))); -- 0ms;
SELECT ALL CASE WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c75)>>(t0.c60)) END FROM t0 LIMIT 438833601 OFFSET -971044232; -- 0ms;
SELECT DISTINCT SUM(ABS(DISTINCT t0.c75)) FILTER(WHERE TRIM((t0.c75 IN ()))) OVER () FROM t0; -- 0ms;
SELECT ((((t0.c84)GLOB(t0.c75)))||(t0.c60)), (((((t0.c60))<((t0.c0)))) ISNULL), (((((t0.c84)) NOT BETWEEN ((t0.c75)) AND ((t0.c75))))*(t0.c75 COLLATE RTRIM)) FROM t0 WHERE (((('-844504071')>>('?઄')) IN ())) LIMIT -1944517771 OFFSET -985760058; -- 0ms;
SELECT DISTINCT CASE WHEN ((NULL) IS FALSE) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c84 END ELSE ((((t0.c60)OR(t0.c0)))AND(t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT (NOT (((t0.c84)GLOB(t0.c75)))) FROM t0; -- 0ms;
SELECT DISTINCT (((('sR')<<(t0.c84)))||(MIN(x''))) FROM t0; -- 1ms;
SELECT ALL (((t0.c60)/(t0.c60)) IN ()), COUNT(*), NULLIF(((((((((((((t0.c75)OR(0.13257290108324216)))OR(t0.c60)))OR(t0.c84)))AND(t0.c84)))OR(t0.c84)))AND(t0.c60)), (t0.c0 IN ())), ((t0.c84)>=(TRIM(DISTINCT t0.c0))), (((((t0.c60, t0.c0, t0.c75)) NOT BETWEEN ((t0.c75, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))IS NOT(t0.c60 COLLATE RTRIM)) FROM t0 WHERE (((highlight(x'2546', NULL, '714356400', x'')) IS FALSE));SELECT COUNT(*) FROM t0 WHERE (((((NULL)<(0.9175864539762136))) ISNULL)); -- 0ms;
SELECT (t0.c60 IN ()) COLLATE RTRIM FROM t0 WHERE (CAST((0X77463a31 IN (0.15239235727318912)) AS INTEGER)); -- 0ms;
SELECT DISTINCT '725484881', ((CAST(t0.c75 AS NUMERIC)) NOT BETWEEN (((t0.c60) NOT BETWEEN (t0.c0) AND (t0.c75))) AND (t0.c0 COLLATE NOCASE)), (((t0.c60, 0.6893653506354522, t0.c60)) BETWEEN (((((t0.c60, t0.c75, x'cb98', t0.c60, t0.c0)) BETWEEN ((t0.c84, t0.c75, t0.c75, t0.c84, t0.c75)) AND ((t0.c84, t0.c0, t0.c75, '', t0.c75))), ((((((((t0.c75)OR(t0.c84)))AND(t0.c60)))OR(t0.c60)))OR(t0.c0)), ((t0.c84)OR('')))) AND ((RTRIM(t0.c60), ((t0.c0) NOT BETWEEN (t0.c84) AND ('-990147151')), ((t0.c60) BETWEEN (-1.7976931348623157E308) AND (t0.c60))))) FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c75) BETWEEN (t0.c84) AND (t0.c60))) OVER () FROM t0 WHERE ((((NULL IN ()))<(('-377632227' IN ())))); -- 0ms;
SELECT DISTINCT ((json_remove(1221522949, t0.c84)) NOT BETWEEN ((t0.c75 IN ())) AND (CAST(t0.c75 AS BLOB))), t0.c0, ((((NOT (t0.c75)), ((((((((t0.c0)OR(t0.c0)))AND(t0.c75)))OR(t0.c84)))AND(t0.c60)), CAST(t0.c0 AS BLOB), (((t0.c84)) NOT BETWEEN ((t0.c84)) AND ((t0.c84))), MAX(t0.c75)))>((((t0.c84) NOTNULL), (NOT (t0.c84)), (((t0.c75))==(('1420666705'))), (t0.c60 IN (t0.c0)), CAST(-1.220320438E9 AS BLOB)))) FROM t0 WHERE ((+ ((+ (x''))))) LIMIT 1773679165 OFFSET 9223372036854775807; -- 0ms;
SELECT ALL ((t0.c75)>(CAST(t0.c84 AS INTEGER))) FROM t0 WHERE (CASE WHEN CAST(0.8073551871821781 AS REAL) THEN ((x'88d0') ISNULL) WHEN ((0.10015970898408444) NOT NULL) THEN ((0x6e53afac)OR(NULL)) WHEN (('-1976165935')<=('')) THEN (('mPIUhr ')==(x'')) END) LIMIT 628461632 OFFSET -556585964; -- 0ms;
SELECT DISTINCT ((('>[1,v%燊oX', NULL, t0.c0)) BETWEEN ((((t0.c0)IS NOT(t0.c75)), 0.1318545155852906 COLLATE RTRIM, t0.c60)) AND ((CAST(t0.c60 AS TEXT), t0.c0 COLLATE RTRIM, (+ (0.8357837648600137))))) FROM t0; -- 0ms;
SELECT ALL (((t0.c75 COLLATE BINARY, ((t0.c75) NOT BETWEEN (t0.c75) AND ('')), (~ (t0.c60)), x'9883', ((t0.c60)%('-1000155599'))))>((((t0.c0) NOTNULL), ((t0.c75)>(t0.c75)), COUNT(*), ((t0.c84) IS TRUE), x''))), NULL, ((((('626275275' IN (t0.c60, t0.c84)))AND(CAST(0.8120843832609412 AS BLOB))))AND(CASE WHEN t0.c60 THEN t0.c84 WHEN t0.c0 THEN t0.c84 WHEN t0.c0 THEN t0.c60 WHEN t0.c75 THEN t0.c84 WHEN t0.c60 THEN t0.c0 END)) FROM t0 WHERE (CAST(CAST('' AS BLOB) AS INTEGER)); -- 1ms;
SELECT DISTINCT ROUND((t0.c84 IN ()), MIN(-6.7533961E7)) FROM t0 WHERE (((((0xffffffffaad946b1)>(0Xffffffffb45d8a85)))*((~ (NULL))))); -- 0ms;
SELECT ((t0.c75) NOTNULL) FROM t0 WHERE (((((((x'')|('稪xX%GK')))OR((((x'38e7')) BETWEEN ((0X73eb0c8f)) AND ((NULL))))))AND((('574611140') NOT BETWEEN (56063548) AND (NULL))))); -- 0ms;
SELECT ((t0.c0 COLLATE RTRIM)LIKE(((t0.c60)IS(x'03bf')))) FROM t0; -- 0ms;
SELECT ALL (~ (t0.c75)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN t0.c84 THEN t0.c60 ELSE t0.c84 END) FROM t0 WHERE (((((((0.8960009081548082)) BETWEEN ((NULL)) AND ((0.48703880119757803)))))>=(((+ (x'')))))) LIMIT 1657291139; -- 0ms;
SELECT ALL ((t0.c0) NOT BETWEEN (((t0.c60) ISNULL)) AND (IFNULL(DISTINCT t0.c60, t0.c0))) FROM t0 WHERE ((+ (CASE WHEN 'G*D''' THEN 'X-x#_' ELSE x'' END))); -- 0ms;
SELECT DISTINCT t0.c0 COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c60)||(0.22725685923807792))) IS FALSE), CASE (- (0.2880443408392762))  WHEN CASE WHEN '' THEN t0.c60 END THEN ((t0.c60)LIKE(t0.c84)) WHEN CASE t0.c75  WHEN t0.c84 THEN t0.c0 ELSE t0.c60 END THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c60))) WHEN ((t0.c60) IS FALSE) THEN ((t0.c84)>=(t0.c84)) END, ABS(GROUP_CONCAT(t0.c75)) FROM t0 GROUP BY ((t0.c75) IS FALSE) COLLATE BINARY, ((((t0.c84)/(t0.c84)))-(((t0.c75)|(t0.c60)))), (+ ((t0.c60 IN (t0.c0)))) ORDER BY ((t0.c60 COLLATE BINARY) NOT BETWEEN (CASE WHEN t0.c60 THEN t0.c60 END) AND (CASE WHEN t0.c60 THEN t0.c84 END)) DESC  NULLS FIRST; -- 0ms;
SELECT CAST(((((t0.c84)AND(t0.c0)))AND(t0.c60)) AS TEXT) FROM t0 GROUP BY ((((((((((t0.c84) BETWEEN (t0.c60) AND (t0.c0)))AND(((((t0.c75)OR(t0.c84)))OR(x'')))))AND(448144565)))OR(((t0.c84)<<(t0.c0)))))OR((+ (t0.c60)))), ((((t0.c60)<<(t0.c84)))OR(CAST(t0.c0 AS NUMERIC))), (((t0.c75)IS(t0.c75)) IN ()); -- 0ms;
SELECT DISTINCT ((t0.c84 COLLATE NOCASE)&((t0.c60 IN ()))) FROM t0; -- 0ms;
SELECT ALL ((CAST(t0.c84 AS TEXT))*(((t0.c0)<(t0.c0)))) FROM t0; -- 0ms;
SELECT LIKELIHOOD(COUNT(t0.c0), 0.34404262348915626), ((CASE t0.c75  WHEN t0.c0 THEN t0.c60 WHEN t0.c60 THEN t0.c75 WHEN t0.c84 THEN t0.c60 END)<(((t0.c84) BETWEEN (t0.c60) AND (t0.c84)))), ((((t0.c84)-(t0.c0))) NOT NULL) FROM t0 WHERE (x'') LIMIT 1613108316 OFFSET -150822574; -- 0ms;
SELECT DISTINCT ((t0.c84 COLLATE RTRIM)||(((t0.c60) IS FALSE))) FROM t0; -- 0ms;
SELECT MAX(t0.c75) FROM t0 WHERE (((((x'd278')OR(0X353dd643))) IS FALSE)); -- 0ms;
SELECT ALL TOTAL(((((((((t0.c60)AND(t0.c75)))OR(t0.c75)))OR(t0.c60)))OR(t0.c60))) OVER ( ORDER BY t0.c60, LOWER(CAST(t0.c84 AS TEXT))  NULLS FIRST, t0.c60  NULLS FIRST), t0.c60, CAST(CASE WHEN t0.c75 THEN t0.c75 END AS NUMERIC) FROM t0 WHERE ((((+ (x'')))||((((('⣆攠')OR(x'6954')))OR('#['))))); -- 0ms;
SELECT DISTINCT t0.c84 COLLATE RTRIM FROM t0 WHERE (((((0.7372785512631952, NULL, 0.8018980074051582)) NOT BETWEEN ((0.5520857379230244, NULL, '1732202225')) AND ((x'', '0.9960806804011466', 'B逰<#'))) IN ())); -- 0ms;
SELECT (((((t0.c0 IN ()))AND(((t0.c75)OR(t0.c84)))))OR('-146985765')) FROM t0; -- 0ms;
SELECT DISTINCT CAST(0.40936505145107027 AS NUMERIC), LTRIM(LIKELIHOOD(t0.c60, 0.27753424203707266)), -2082432083 FROM t0 UNION ALL SELECT DISTINCT COUNT(*) OVER (), CAST(json_extract(t0.c60, t0.c75, t0.c60, t0.c84) AS INTEGER), (- (t0.c60)) COLLATE NOCASE FROM t0 ORDER BY (((((((NULL)) NOT BETWEEN ((t0.c84)) AND ((945530225))))OR(((t0.c0) NOT BETWEEN (t0.c60) AND (t0.c75)))))OR((((t0.c84))<=((t0.c60)))));SELECT DISTINCT ('' IN ()) FROM t0 WHERE ((((((0.9210640335596381, 0.12416823780479636, -2.034250608E9))>((NULL, -55650785, '0.6893003943577908'))))/(TRIM(DISTINCT x'')))); -- 0ms;
SELECT DISTINCT (- (CASE 0Xffffffffdc8a7032  WHEN t0.c0 THEN t0.c84 END)) FROM t0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT (((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c84)))), TOTAL(((t0.c0) NOT BETWEEN (t0.c84) AND (t0.c75))), CAST(MIN(t0.c84) AS BLOB) FROM t0 WHERE (((((((((0x44e3b885)AND(1629001291)))AND(x'af37')))AND(x'' COLLATE BINARY)))AND((0.6868551603039338 IN ('-464743571'))))); -- 0ms;
SELECT (- (COUNT(*))) FROM t0; -- 0ms;
SELECT DISTINCT ((0.8991274497964074) NOT BETWEEN (CASE WHEN NULL THEN t0.c84 WHEN t0.c75 THEN t0.c60 WHEN x'' THEN 0x561af778 ELSE t0.c0 END) AND ((((t0.c60, t0.c84, t0.c84, t0.c60, t0.c0, t0.c60, t0.c60))<>((t0.c84, t0.c84, 'pfM*1!髜*e', t0.c60, 'V㏝kP_4_A*', t0.c84, t0.c0))))), json_patch(CASE t0.c0  WHEN t0.c0 THEN -1939210135 ELSE t0.c84 END, CASE t0.c84  WHEN t0.c84 THEN t0.c75 WHEN t0.c84 THEN t0.c0 WHEN t0.c75 THEN t0.c0 ELSE t0.c75 END), '-866838732' FROM t0; -- 0ms;
SELECT DISTINCT t0.c84 FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c84 COLLATE BINARY) BETWEEN (((t0.c60) NOT BETWEEN (t0.c0) AND (t0.c60))) AND (CASE WHEN t0.c84 THEN t0.c60 END)) FROM t0 WHERE (CAST(NULL AS INTEGER) COLLATE BINARY); -- 0ms;
SELECT DISTINCT TOTAL(t0.c84) OVER () FROM t0 WHERE ((NOT (x'' COLLATE RTRIM))) GROUP BY '3zt#O' HAVING ((t0.c0) NOT NULL) ORDER BY (((((t0.c60)<(t0.c60)), ABS(t0.c0), ((t0.c84) IS FALSE)))>((UNLIKELY(t0.c84), ((NULL) BETWEEN (x'cb94') AND (t0.c0)), 0xffffffff926f6678))) LIMIT -558425174; -- 0ms;
SELECT DISTINCT STRFTIME(CAST(t0.c60 AS BLOB), CAST(t0.c75 AS NUMERIC), t0.c75) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c75 COLLATE BINARY AS REAL) FROM t0 WHERE (((((((((CASE x'7853'  WHEN '-1827613550' THEN '' END)AND(((x'') BETWEEN ('-474519771') AND ('k|l웴 Hh>M')))))OR((('') NOT NULL))))AND((+ ('now')))))OR(((0Xffffffffe9667aed)GLOB(NULL))))); -- 0ms;
SELECT ALL (((t0.c60 IN ()))IS NOT(((t0.c75) BETWEEN (t0.c75) AND (t0.c84)))), (((((- (t0.c0)))OR('dS')))AND(t0.c60)), t0.c84, ((CAST(t0.c75 AS TEXT)) NOT NULL), COUNT((NOT (t0.c75))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT -1512633195, ((t0.c75 COLLATE NOCASE) IS TRUE), ROW_NUMBER() OVER () FROM t0; -- 0ms;
SELECT ALL (+ (MIN(t0.c75))), ((~ (t0.c75)) IN ()), CASE WHEN MAX(x'ef1d') THEN ((NULL) IS FALSE) ELSE ((t0.c84)-(t0.c75)) END FROM t0 WHERE ((((CASE WHEN NULL THEN x'' END))=(('' COLLATE NOCASE)))); -- 0ms;
SELECT ALL (- (0.43022052742105676)) FROM t0; -- 0ms;
SELECT DISTINCT ((x'') IS TRUE) FROM t0 WHERE (((CAST('V<7fKB#' AS TEXT)) NOT BETWEEN (((NULL)%(x'8f4dadbd'))) AND (197032490 COLLATE BINARY))) LIMIT 1367047196; -- 0ms;
SELECT ALL CASE WHEN (((t0.c75))=((t0.c0))) THEN t0.c84 COLLATE BINARY END FROM t0 WHERE (CAST(CAST(0x7b279c78 AS NUMERIC) AS INTEGER)); -- 0ms;
SELECT ALL t0.c84, NULL, ((CASE t0.c84  WHEN t0.c0 THEN t0.c60 ELSE t0.c84 END)LIKE(((t0.c60)==(t0.c84)))) FROM t0 WHERE (((((((((((0xe46a4a9) BETWEEN ('0.6502798882047781') AND (x'')))AND(((((((((x'')OR(0.7633796214603518)))AND('')))OR(x'')))OR('KU')))))OR(387853227 COLLATE RTRIM)))OR((+ (0.7380918886402912)))))OR(0.5151813126847364))) GROUP BY ((((((t0.c75)<(t0.c75)))AND(((t0.c0) IS TRUE))))OR((t0.c0 IN (t0.c0, t0.c84)))) HAVING t0.c75; -- 0ms;
SELECT DISTINCT DATETIME(t0.c84 COLLATE RTRIM, CAST(t0.c60 AS REAL), ((t0.c75)*(t0.c75)), ((t0.c60)>(t0.c60)), (((t0.c84))>((x'')))) FROM t0; -- 0ms;
SELECT ALL CAST((NOT (t0.c60)) AS BLOB), ((((t0.c0) NOTNULL)) BETWEEN (t0.c75) AND (COALESCE(t0.c75, t0.c75))), ((t0.c60) IS FALSE) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ((NULL)LIKE(t0.c60)) FROM t0; -- 0ms;
SELECT DISTINCT t0.c60 COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT CASE WHEN t0.c75 THEN '2063522670' END, SUM(t0.c84)) FROM t0 WHERE (((((CASE WHEN NULL THEN NULL WHEN 0X448471e2 THEN '587631763' WHEN '0.6893003943577908' THEN -1387656940 WHEN NULL THEN NULL WHEN 0.03166684466635117 THEN NULL WHEN x'' THEN '595875603' WHEN 0.8044624027122674 THEN '855082430' ELSE '2076040583' END)OR(CASE WHEN 0Xffffffff85468147 THEN NULL WHEN x'' THEN NULL WHEN x'e017' THEN x'' END)))OR(((0.48808952330964295)%('<]'))))) GROUP BY ((INSTR(t0.c60, t0.c60)) IS TRUE) HAVING SUM(json_extract(t0.c60, t0.c60));SELECT ALL CASE WHEN ((((t0.c60)AND(t0.c84)))AND(t0.c0)) THEN ((t0.c84) BETWEEN (t0.c60) AND (t0.c0)) WHEN (((('278591318')OR(t0.c0)))AND(t0.c75)) THEN (~ (t0.c0)) WHEN t0.c60 THEN (((t0.c84))>((t0.c60))) END FROM t0 WHERE (((NULL) NOT BETWEEN (x'7c0c') AND (0.48808952330964295)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c75 THEN t0.c60 END)IS('-1325967323')) FROM t0 WHERE (TRIM(DISTINCT (- ('')), (NULL IN (0.3770324312096477)))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0; -- 0ms;
SELECT ALL HEX(DISTINCT MIN(t0.c60, t0.c60)) FROM t0 WHERE ((((((-1976165935))=((NULL))))||(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((((-31875543)||(t0.c75))))<((CASE t0.c0  WHEN t0.c60 THEN t0.c0 WHEN t0.c84 THEN t0.c60 WHEN t0.c60 THEN t0.c0 ELSE t0.c84 END))) FROM t0 LIMIT -343302841 OFFSET 633716995; -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (0x198424d) AND (t0.c75)))=(t0.c60)), (LENGTH(t0.c84) IN ()), (((((((((((((((t0.c0, t0.c84, t0.c60)) BETWEEN ((t0.c75, t0.c60, t0.c0)) AND ((t0.c0, t0.c60, 'ⳛ1몔'))))AND(((((t0.c75)AND(t0.c75)))OR(t0.c60)))))AND(MIN(t0.c0))))OR(json_quote(t0.c75))))AND(((t0.c60) NOT NULL))))OR(((((t0.c60)AND(t0.c0)))OR(t0.c0)))))OR(((t0.c84)-(t0.c60)))) FROM t0 WHERE ((NOT (((x'c476')%('946967809'))))); -- 0ms;
SELECT COUNT(*) FROM t0 LIMIT 626275275; -- 0ms;
SELECT CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c84)) AS NUMERIC) FROM t0; -- 0ms;
SELECT ALL highlight((t0.c60 IN ()), TRIM(DISTINCT t0.c60, t0.c84), t0.c60 COLLATE BINARY, t0.c75) FROM t0 WHERE ((- (x''))); -- 0ms;
SELECT ALL ((CAST(t0.c60 AS TEXT))||(CAST(t0.c75 AS BLOB))), AVG(-714680854), SUM(0.8266333174706425) OVER () FROM t0 WHERE (CASE (('TXww')&(0.6420759153852302))  WHEN (+ ('')) THEN (((((((('-2106920899')OR(x'')))OR('-1105593099')))OR(0.43944647270215054)))AND(NULL)) END); -- 2ms;
SELECT GROUP_CONCAT(CAST(t0.c75 AS INTEGER)) FROM t0 ORDER BY (((CAST(t0.c84 AS INTEGER)))>((((t0.c84)<(t0.c60))))) ASC  NULLS FIRST; -- 0ms;
SELECT (~ (((t0.c84) NOT NULL))) FROM t0 WHERE ((CASE 0.07288870649170731  WHEN -42532815 THEN '*⼘' END IN ())); -- 0ms;
SELECT DISTINCT CASE (t0.c0 IN ())  WHEN (t0.c0 IN (t0.c0)) THEN (((t0.c84)) NOT BETWEEN (('00?')) AND ((0.6415564930316815))) END FROM t0 WHERE (CASE CAST(NULL AS TEXT)  WHEN CAST('5' AS NUMERIC) THEN 'PS' WHEN ((((x'')AND(NULL)))OR(0.03382522317589898)) THEN ((x'')<(NULL)) WHEN (x'' IN ('?(bL]#*')) THEN (- (0.6334291521921694)) END); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c75 THEN ((t0.c75)AND(t0.c75)) WHEN LTRIM(t0.c60, t0.c60) THEN (((t0.c0)) BETWEEN ((t0.c84)) AND ((t0.c60))) WHEN AVG(t0.c0) THEN MAX(t0.c60) ELSE (t0.c75 IN ()) END FROM t0 WHERE (CAST(RTRIM(0.39326520430403233) AS BLOB)); -- 0ms;
SELECT ('\r Crl_' IN ()) FROM t0 GROUP BY '^b*8<%' HAVING (((t0.c84)) BETWEEN ((((t0.c84)|(t0.c60)))) AND ((((t0.c0) NOT BETWEEN (t0.c75) AND (t0.c75))))); -- 0ms;
SELECT DISTINCT CAST((((('9>jTP')OR(t0.c75)))OR(t0.c60)) AS INTEGER) FROM t0 WHERE ((((('!આ')<(''))) ISNULL)); -- 0ms;
SELECT ALL ((-5.58055938E8)-(UPPER(DISTINCT t0.c75))), ((0x2c6ae18) NOT BETWEEN (COALESCE(t0.c84, t0.c0)) AND (((t0.c75) NOT BETWEEN (t0.c75) AND (t0.c75)))), (((((((t0.c75))!=((x''))))AND((((t0.c84)) BETWEEN ((t0.c60)) AND ((t0.c84))))))AND(((((((((t0.c75)AND(t0.c60)))AND(t0.c75)))OR(t0.c75)))AND(t0.c60)))) FROM t0; -- 0ms;
SELECT ALL NULL COLLATE RTRIM FROM t0; -- 0ms;
SELECT (+ (((((t0.c60)OR(t0.c75)))AND(x'')))), ((((CAST(t0.c60 AS TEXT))AND(((((t0.c60)AND(t0.c0)))AND(t0.c75)))))OR(((t0.c84) IS TRUE))), x'' FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c60 IN (t0.c84))) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c84 AS TEXT) COLLATE NOCASE FROM t0 WHERE (CAST(((NULL)>('2076040583')) AS REAL)); -- 0ms;
SELECT '-1813201312', ((((((((t0.c75)OR(((t0.c84)/(t0.c75)))))OR(0.7618408814919969)))OR(t0.c0)))OR(t0.c84)), UPPER(((t0.c60) BETWEEN (t0.c60) AND (t0.c0))) FROM t0 WHERE ((((((((((('-1370692238')AND('Id')))OR(NULL)))AND(NULL)))OR(NULL))) IS FALSE)); -- 0ms;
SELECT ((((t0.c60)IS(t0.c84))) BETWEEN (((t0.c0) BETWEEN (t0.c60) AND (t0.c60))) AND (t0.c84 COLLATE BINARY)) FROM t0 WHERE ((((x'', -527588550, 'd!', -1248938659, x'')) NOT BETWEEN ((TYPEOF('-1436231219'), (((x''))<(('8222433'))), ((0.39599797797049774) NOT NULL), ((x'') NOT BETWEEN (0xffffffffe0a7d389) AND ('1284129406')), (((NULL)) BETWEEN ((-2.034250608E9)) AND ((1.906212085E9))))) AND ((NULLIF(DISTINCT NULL, NULL), CAST('-809049866' AS BLOB), ((0.9011523935790542)IS NOT(x'e4e4')), CAST('h|1&o&JH' AS TEXT), (((((((('2127840824')AND(NULL)))AND(0.08369370456509051)))OR(-476542430)))OR(x'')))))); -- 0ms;
SELECT DISTINCT ((t0.c0) BETWEEN (((t0.c75) BETWEEN (t0.c84) AND (t0.c84))) AND ((~ (t0.c84)))), (((t0.c0))<(((t0.c0 IN ())))), -1.629266145E9 FROM t0 WHERE ('135727906'); -- 0ms;
SELECT AVG(t0.c0), LEAD(('574611140' IN ()), ((t0.c75 COLLATE NOCASE) NOT NULL), (NOT (CASE t0.c75  WHEN x'' THEN t0.c0 WHEN t0.c60 THEN t0.c75 WHEN t0.c60 THEN x'' ELSE t0.c75 END))) OVER ( ORDER BY CASE WHEN (t0.c84 IN ()) THEN ((t0.c75)>=(t0.c60)) END ASC, ((((((((((t0.c60) ISNULL))AND(((161475165) NOTNULL))))OR(t0.c60 COLLATE BINARY)))AND(UNICODE(t0.c0))))OR(CAST(t0.c84 AS TEXT)))  NULLS FIRST, CASE UNLIKELY(DISTINCT t0.c75)  WHEN ((t0.c0)%(t0.c75)) THEN ((t0.c84)<=(t0.c60)) END DESC), (((LIKELIHOOD(t0.c75, 0.05847930363056131)))>=((AVG(t0.c84)))) FROM t0 GROUP BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c60)))||(t0.c0)), CASE WHEN (~ (t0.c84)) THEN (NOT (t0.c60)) END, ((((-1.990582085E9)OR(((t0.c84)>(t0.c84)))))OR(CASE WHEN t0.c0 THEN t0.c75 WHEN t0.c84 THEN t0.c75 WHEN x'' THEN t0.c75 WHEN t0.c60 THEN t0.c0 WHEN t0.c0 THEN t0.c60 ELSE t0.c75 END)), '/^5hs', t0.c75 HAVING ((json_remove(t0.c75, t0.c60, t0.c60, t0.c75))|(((t0.c84) IS FALSE))) LIMIT 304657865; -- 0ms;
SELECT DISTINCT ((t0.c75)%(((t0.c84) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (((((x'')-(199143130)))OR(((0.9435013435123317) NOT BETWEEN (0.8268867583759424) AND (438833601))))) ORDER BY ((((CASE t0.c60  WHEN t0.c75 THEN t0.c75 ELSE t0.c84 END)OR(((t0.c60)>(t0.c75)))))AND(((t0.c75)*(t0.c0)))), CASE ((((t0.c0)AND(t0.c0)))AND(t0.c75))  WHEN 0.442243879436518 THEN t0.c75 ELSE ((t0.c0) NOT BETWEEN (t0.c75) AND (t0.c84)) END  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t0.c75)) BETWEEN ((((t0.c75) BETWEEN (t0.c60) AND (t0.c60)))) AND ((((t0.c60)||(t0.c75))))), CASE NULL  WHEN ((t0.c84)*(t0.c75)) THEN ((t0.c0)<=(t0.c75)) ELSE x'' COLLATE RTRIM END, t0.c60 FROM t0 ORDER BY 0.652006594198939, '397985524'  NULLS FIRST; -- 0ms;
SELECT (((t0.c60) IS FALSE) IN (((t0.c0)&(t0.c84)), (((t0.c0))>=((t0.c75))))) FROM t0; -- 0ms;
SELECT (((((('')AND(t0.c60)))AND(((t0.c60)*(t0.c60)))))AND(t0.c75)) FROM t0 GROUP BY NULL, ((HEX(t0.c0))<<('\2e')), 0.09955991240475714 HAVING ((((t0.c60)AND(GLOB(t0.c0, t0.c75))))OR(x'')); -- 0ms;
SELECT DISTINCT t0.c75 FROM t0 WHERE (((((((NULL)/('+lN8')))OR(UPPER(DISTINCT x''))))OR(''))) GROUP BY t0.c84 HAVING (((((t0.c75))>((t0.c75)))) NOT BETWEEN (t0.c60) AND (((t0.c0)*(t0.c0)))); -- 0ms;
SELECT ALL (((((t0.c0, t0.c75, x'41ba')) BETWEEN ((t0.c84, NULL, t0.c0)) AND ((t0.c0, t0.c84, t0.c84)))) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT x'' FROM t0 WHERE ((('dE.B￿' COLLATE NOCASE) NOT BETWEEN (((x'') NOT BETWEEN (x'7f0d') AND (-5.2758855E8))) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((t0.c60 IN (t0.c60)))-(t0.c0 COLLATE RTRIM)), (((t0.c75 IN ())) IS TRUE), ((((((((((t0.c84)%(t0.c75)))OR((t0.c0 IN ()))))AND((t0.c84 IN ()))))AND(((t0.c0)&(x'')))))AND((((t0.c60)) BETWEEN ((t0.c84)) AND ((t0.c75))))) FROM t0 WHERE (TRIM(DISTINCT 0.12741636895573816) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((x'b1ea' IN ()) IN (((t0.c60) NOT NULL))), ((((((((COUNT(*))AND(((t0.c60)<=(0.7727513039742923)))))AND(((t0.c84) NOT BETWEEN (t0.c75) AND (t0.c60)))))AND(CASE t0.c0  WHEN t0.c60 THEN t0.c0 ELSE t0.c84 END)))AND((NOT (t0.c60)))), (x'' IN (((((t0.c60)OR(t0.c84)))OR(t0.c0)))) FROM t0 WHERE (((((4.38833601E8) BETWEEN (0.43333903981456723) AND (0.28079040707621705)))<=(LIKELY(x'')))); -- 0ms;
SELECT DISTINCT CAST((NOT (t0.c60)) AS REAL), MAX(((((t0.c0)OR(t0.c60)))OR(t0.c0))), ((((((((t0.c0)OR(CAST(x'' AS BLOB))))OR((x'' IN (0.4719756463761471)))))OR(((((t0.c60)OR(t0.c0)))AND(t0.c84)))))AND(((t0.c75) NOT BETWEEN (t0.c60) AND (t0.c60)))) FROM t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 ORDER BY ((CASE t0.c75  WHEN t0.c84 THEN t0.c84 END) NOT BETWEEN (CASE WHEN t0.c75 THEN t0.c60 ELSE t0.c75 END) AND ((- (t0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (((CAST('-1716615519' AS NUMERIC), NULL, ((t0.c60)|(t0.c60)), ((((NULL)AND(t0.c60)))OR(t0.c0)), t0.c60 COLLATE BINARY))>((CAST(t0.c75 AS REAL), ((t0.c60) BETWEEN (t0.c0) AND (t0.c0)), CASE t0.c0  WHEN t0.c60 THEN t0.c0 WHEN t0.c0 THEN t0.c75 WHEN t0.c84 THEN t0.c84 ELSE t0.c0 END, (t0.c60 IN (0.5822352171689409, NULL)), ((t0.c60) NOTNULL)))) FROM t0 WHERE ((((NULL)OR(0Xffffffffe08da33a)) IN (CAST('1209149570' AS NUMERIC), (- (0xffffffff97775065))))) LIMIT 574611140; -- 1ms;
SELECT DISTINCT LIKELY(((((t0.c75)AND(t0.c60)))AND(t0.c60))), NTILE((((CASE t0.c60  WHEN t0.c0 THEN t0.c0 ELSE t0.c84 END))>=((CASE t0.c84  WHEN t0.c75 THEN t0.c60 ELSE t0.c75 END)))) OVER (), (((t0.c60, t0.c60, t0.c84, t0.c84, t0.c60, '519768025', '314650034')) NOT BETWEEN ((CAST(t0.c60 AS TEXT), LIKELY(DISTINCT t0.c0), ((t0.c0) BETWEEN (t0.c0) AND (0.38434713445138335)), ((((t0.c75)OR(t0.c75)))AND(t0.c0)), CASE WHEN t0.c84 THEN t0.c75 ELSE t0.c84 END, ((t0.c0) NOT BETWEEN (t0.c84) AND (t0.c84)), (t0.c0 IN (t0.c60, t0.c60)))) AND ((((t0.c0)OR(t0.c60)), CASE t0.c75  WHEN t0.c84 THEN t0.c60 END, (- (t0.c60)), (((t0.c75))<=((t0.c75))), t0.c0 COLLATE RTRIM, GROUP_CONCAT(t0.c0), ((t0.c0)=(t0.c84))))) FROM t0 WHERE (CAST(((0.16720661883273136) NOT BETWEEN (x'732d') AND (NULL)) AS REAL));SELECT ALL ((CASE WHEN NULL THEN t0.c84 END) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c60)IS(t0.c60)) IN ((t0.c75 IN (t0.c0, t0.c60, t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (~ (t0.c75 COLLATE BINARY)) FROM t0 WHERE ((NULL COLLATE BINARY IN (((((0.6427642102563352)OR(NULL)))AND('2129744289')), 0.17152111835485817))); -- 0ms;
SELECT DISTINCT (((t0.c75) BETWEEN (0.14565287924066928) AND (t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c75)-(t0.c75))) OVER ( RANGE  CURRENT ROW) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c84, '1326973632', t0.c0))>=((t0.c60, 0.3456296534488983, t0.c84))) IN ()), NULL, COUNT(*) FROM t0; -- 0ms;
SELECT ALL (((t0.c84, t0.c84, t0.c0)) BETWEEN ((((((((((t0.c75)AND(t0.c84)))AND(t0.c60)))AND(t0.c0)))OR(t0.c84)), ((t0.c84) NOT NULL), (t0.c0 IN ()))) AND ((((t0.c60)&('.95sm*')), CAST(t0.c84 AS NUMERIC), TOTAL(t0.c84)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((+ (t0.c60))))<=((t0.c84))), t0.c0, x'a7ef' FROM t0 WHERE (MIN((+ (x'cb04')), UPPER(0Xffffffffe7a4058c))); -- 0ms;
SELECT ((((t0.c75) NOTNULL)) IS TRUE) FROM t0 WHERE ((((((0.23424061832116516)>>(''))))!=(((((((((('0.5727984042237347')OR(NULL)))OR(-2101348735)))AND(NULL)))AND('1732202225')))))); -- 0ms;
SELECT ALL (~ (((t0.c84) BETWEEN (t0.c60) AND (t0.c84)))), CASE WHEN ((t0.c75)/(t0.c60)) THEN ((((t0.c60)OR(t0.c60)))OR(t0.c60)) WHEN ((t0.c0)>=(t0.c75)) THEN CASE t0.c60  WHEN t0.c84 THEN t0.c60 WHEN t0.c84 THEN t0.c0 WHEN t0.c60 THEN x'' END WHEN (0.4628768057988263 IN ()) THEN ((t0.c60)>>(0.9980211949450608)) END, CASE COUNT(*)  WHEN t0.c84 COLLATE BINARY THEN (((t0.c84))>=((t0.c0))) WHEN ('ꚤBx3.璪[' IN (t0.c75)) THEN IFNULL(t0.c60, t0.c84) WHEN CAST(t0.c60 AS NUMERIC) THEN t0.c60 END FROM t0; -- 0ms;
SELECT DISTINCT GLOB(LAST_INSERT_ROWID(), (((t0.c0))>=((t0.c0)))), DENSE_RANK() OVER (), CAST(CAST('' AS BLOB) AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT t0.c60, ((t0.c75 COLLATE NOCASE) NOTNULL), PERCENT_RANK() OVER ( ORDER BY (((t0.c84 IN (t0.c75))) BETWEEN (t0.c84) AND ((t0.c75 IN ()))) ASC, ((('-2056811289' COLLATE NOCASE))<((CASE t0.c84  WHEN t0.c0 THEN t0.c75 ELSE t0.c75 END))) DESC  NULLS FIRST) FROM t0 WHERE (CAST(((((NULL)OR(0.971997069886038)))AND(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT (((t0.c60)) BETWEEN ((t0.c60 COLLATE RTRIM)) AND ((t0.c60 COLLATE RTRIM))) FROM t0 WHERE ((((x'' IN ())) BETWEEN (0.4371451677060929 COLLATE BINARY) AND (CASE WHEN NULL THEN 3.14650034E8 ELSE x'' END))) GROUP BY CASE ((t0.c84) IS FALSE)  WHEN ((((t0.c75)OR(t0.c60)))OR(0.2577568881411636)) THEN ((((((((t0.c60)AND(t0.c0)))AND(t0.c0)))AND(t0.c75)))OR(t0.c60)) END, ((((t0.c84)*(NULL))) BETWEEN (((t0.c0)&(t0.c60))) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c84)))OR(t0.c75)))AND(t0.c0)))), '1521 265--8731417518101760401-' HAVING t0.c75; -- 0ms;
SELECT DISTINCT ((((t0.c60) IS TRUE))>=(UNLIKELY(t0.c75))), (MAX(t0.c84) IN ()), (~ (((t0.c84) IS TRUE))) FROM t0; -- 0ms;
SELECT ALL ((STRFTIME(t0.c0, t0.c75, t0.c84, t0.c75, t0.c84)) ISNULL) FROM t0 WHERE (((((-1131544542) NOT BETWEEN ('-1587864379') AND (0Xffffffff934cf586)))-((('') NOTNULL)))); -- 0ms;
SELECT ALL TOTAL(((t0.c84) BETWEEN (t0.c60) AND (t0.c60))) FROM t0 WHERE (0.6018216139737728); -- 0ms;
SELECT ALL ((((t0.c75)>=(t0.c0)))%('6qs')) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( RANGE BETWEEN  CURRENT ROW AND ((t0.c84) NOT BETWEEN (((t0.c0)IS(t0.c60))) AND ((('1762159343') BETWEEN (t0.c75) AND (t0.c0)))) FOLLOWING) FROM t0;SELECT TOTAL(((t0.c60) BETWEEN (t0.c84) AND (NULL))) OVER () FROM t0 WHERE ((((x'')) BETWEEN ((CASE 0X73eb1b3b  WHEN '2063522670' THEN '-942061201' END)) AND ((CAST(-2.055066737E9 AS INTEGER))))); -- 0ms;
SELECT DISTINCT (((NOT (t0.c0))) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS INTEGER) COLLATE BINARY FROM t0; -- 0ms;
SELECT ALL ((((t0.c84) NOT NULL))<(((t0.c84) NOT BETWEEN (t0.c60) AND (t0.c0)))), HEX(DISTINCT ((t0.c60) BETWEEN (t0.c0) AND (t0.c60))), CASE WHEN ((t0.c60)<=(t0.c0)) THEN ((t0.c75)/(t0.c84)) WHEN ((((((((t0.c0)AND(t0.c84)))AND(t0.c84)))OR(t0.c60)))OR(t0.c75)) THEN ((t0.c0)IS(t0.c84)) WHEN (t0.c75 IN ()) THEN (NULL IN ()) ELSE t0.c75 END FROM t0; -- 0ms;
SELECT ALL '4miO--kIe' FROM t0 WHERE (((CAST(0.031973702647578595 AS INTEGER))==(TYPEOF(DISTINCT 0.6845366366635269)))) ORDER BY CAST(((t0.c60) IS FALSE) AS REAL); -- 0ms;
SELECT DISTINCT CAST(((('3784258545444169054-374T-8170570462660278709T6213056332488685371 162T5426765079838691685-1888T-2415524259817025598-1935:'))<=((t0.c60))) AS INTEGER) FROM t0 WHERE (((('-680968525')) NOT BETWEEN ((((((NULL)OR(x'b3c8')))AND(0.12741636895573816)))) AND (((((0.3756737115751051)) BETWEEN ((x'')) AND ((0.9037734531178873))))))); -- 0ms;
SELECT DISTINCT (('-2089311069') NOT BETWEEN (((t0.c75) NOT NULL)) AND (((t0.c60)>=(t0.c84)))), LAG(0.980871470574679, ((((t0.c75)OR(t0.c0)))-(CAST(t0.c75 AS BLOB))), ((((((((((t0.c60) IS FALSE))OR(CAST(t0.c0 AS BLOB))))AND(t0.c84)))AND(((t0.c0) NOT NULL))))OR(((t0.c0)IS NOT(t0.c60))))) OVER (), ((((t0.c0)<<(t0.c60)))-(CASE WHEN 2128156325 THEN NULL END)) FROM t0 WHERE (HEX(CAST(-129034686 AS TEXT))); -- 0ms;
SELECT LAST_VALUE(UNLIKELY((((t0.c60, t0.c60, t0.c84)) NOT BETWEEN (('jP', t0.c60, 0.21977820591149377)) AND ((t0.c0, t0.c75, t0.c75))))) OVER () FROM t0; -- 0ms;
SELECT CAST(((t0.c0) IS FALSE) AS INTEGER), CAST(t0.c75 AS INTEGER) COLLATE NOCASE, 0.4089726122014282 FROM t0 GROUP BY (((((((t0.c75)OR(t0.c60)))AND(t0.c60)), x'6fa2', ((((((((t0.c75)OR(t0.c84)))AND(t0.c0)))AND(t0.c84)))OR(t0.c60))))!=((CAST(t0.c0 AS NUMERIC), t0.c60, (((t0.c75, t0.c60, NULL)) BETWEEN ((t0.c75, t0.c60, t0.c75)) AND ((x'', t0.c84, t0.c84)))))), (LIKELY(t0.c60) IN (((t0.c75) ISNULL))), t0.c75 HAVING (((t0.c75))<((t0.c75))) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
SELECT ((COUNT(*)) IS FALSE) FROM t0 GROUP BY t0.c75 COLLATE BINARY, CAST(((t0.c60)||(t0.c0)) AS TEXT), HEX(DISTINCT (t0.c0 IN (t0.c75, t0.c60))), t0.c75, ((COALESCE(t0.c75, t0.c60)) BETWEEN (CAST(t0.c60 AS TEXT)) AND (t0.c84)); -- 0ms;
SELECT t0.c0, CAST(t0.c84 AS BLOB), ((((((t0.c75)>=(t0.c84)))OR(CASE t0.c60  WHEN '-1303923025' THEN t0.c84 ELSE t0.c75 END)))OR(CASE 0.597840216178519  WHEN t0.c0 THEN t0.c75 END)), ((CAST(t0.c60 AS REAL)) IS FALSE), (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c75))))IS(CAST(x'' AS NUMERIC))), CAST(((((t0.c84)AND(t0.c0)))AND(0x7b279c78)) AS BLOB), (~ (LIKELY(t0.c75))) FROM t0; -- 1ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0 WHERE (((((CAST(NULL AS REAL))OR(((x'd605')GLOB('0.7252410905263046')))))AND(CASE 'I'  WHEN NULL THEN x'' WHEN 1906212085 THEN '2066193528' WHEN x'' THEN 'o\r' END))); -- 0ms;
SELECT CAST(COUNT(*) AS INTEGER) FROM t0 ORDER BY (- ((t0.c60 IN (t0.c60)))) ASC; -- 0ms;
SELECT ALL NULLIF(DISTINCT t0.c84 COLLATE NOCASE, CAST(t0.c75 AS REAL)) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c84)>=(t0.c60)) IN ()) FROM t0 WHERE (((2.074561737E9 COLLATE BINARY) NOT BETWEEN ((~ (NULL))) AND (((NULL)-(-0.0))))); -- 0ms;
SELECT DISTINCT (((((t0.c0 IN ()))AND(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c60)))), TRIM(DISTINCT (((t0.c0))>=((t0.c0))), ((((t0.c84)AND(t0.c84)))OR(t0.c75))), COUNT(((t0.c0)=(0x6e703bb7))) FROM t0; -- 0ms;
SELECT DENSE_RANK() OVER () FROM t0 WHERE ((((((- ('\rUaph.N|4')))AND(((x'') NOT BETWEEN ('-664059118') AND (0.8520586746989804)))))AND(CASE '-558055938'  WHEN 'FALSE' THEN x'' WHEN '' THEN NULL WHEN x'51c0' THEN NULL ELSE '519768025' END))); -- 0ms;
SELECT CASE ((((t0.c75)AND(t0.c60)))AND(x''))  WHEN ((t0.c60) ISNULL) THEN CAST('gXP੸%k' AS NUMERIC) WHEN ((t0.c60)+(t0.c84)) THEN ((t0.c0) NOTNULL) WHEN NULLIF(DISTINCT NULL, t0.c60) THEN t0.c60 END, t0.c0, GLOB(t0.c0, x'' COLLATE RTRIM) FROM t0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT TOTAL(NULL)) FROM t0 WHERE (CASE ((0x5872b95f)<(x''))  WHEN (-1528006112 IN ()) THEN CAST(NULL AS TEXT) END); -- 0ms;
SELECT JULIANDAY(CAST(t0.c0 AS NUMERIC), CASE t0.c75  WHEN t0.c75 THEN t0.c0 END, ((t0.c84) NOTNULL), CASE t0.c84  WHEN t0.c75 THEN t0.c0 WHEN t0.c84 THEN t0.c60 WHEN t0.c75 THEN t0.c75 ELSE t0.c60 END, (((t0.c0, 0.14238723359905958, t0.c0)) BETWEEN ((t0.c75, t0.c84, t0.c75)) AND ((t0.c60, x'', t0.c60))), CAST(t0.c84 AS TEXT), CAST(t0.c60 AS NUMERIC)) FROM t0 WHERE (CASE WHEN ((0.5193141293282345)>>(NULL)) THEN ((NULL)>=(0.8750380375139314)) ELSE ((NULL) BETWEEN (0.5220109320189904) AND (NULL)) END) UNION SELECT (((CAST(t0.c84 AS NUMERIC)))>((((t0.c75)<(t0.c75))))) FROM t0 WHERE (CASE WHEN ((('0.04345146464033156'))>=(('-829516713'))) THEN (NOT ('0~/t')) ELSE (+ (0.5071053905214614)) END); -- 0ms;
SELECT DISTINCT '.N' FROM t0; -- 0ms;
SELECT ALL ((((t0.c60)<=(t0.c84)))LIKE(json_extract(t0.c0, 0x4f9343d))), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c84)))/((NOT (t0.c0)))), x'df3e' FROM t0 LIMIT -2034250608 OFFSET 2026855495; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN 0.5329498794536686 THEN t0.c75 WHEN t0.c75 THEN t0.c84 WHEN t0.c60 THEN '211317194' WHEN '139906093' THEN t0.c75 WHEN t0.c60 THEN t0.c75 END) OVER () FROM t0 GROUP BY t0.c60; -- 0ms;
SELECT DISTINCT ((((t0.c75 COLLATE BINARY)OR((((t0.c60, t0.c0, t0.c84)) NOT BETWEEN ((0.6697599715852556, t0.c60, t0.c75)) AND (('-971044232', t0.c0, t0.c84))))))AND(((t0.c75)>(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT CASE '2009171172'  WHEN (NOT (t0.c84)) THEN LIKELY(t0.c75) ELSE ((((t0.c60)OR(t0.c60)))AND(t0.c84)) END FROM t0 ORDER BY (t0.c0 COLLATE NOCASE IN ())  NULLS FIRST, t0.c75 COLLATE RTRIM; -- 4ms;
SELECT (SQLITE_VERSION() IN ()) FROM t0 WHERE (CAST(0.9668593289975271 COLLATE BINARY AS REAL)); -- 0ms;
SELECT ALL ((NULL IN ()) IN ()) FROM t0 ORDER BY x'cbbd'  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t0.c75)) BETWEEN ((((((t0.c84)OR(t0.c0)))AND(NULL)))) AND ((((t0.c60) IS FALSE)))) FROM t0 WHERE ((((((x'7a06')AND('P\&H5,0>')))OR(0Xffffffffc720ebd5)) IN ())); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((((t0.c0)AND(t0.c60)))AND(t0.c0))) FROM t0 WHERE (CASE NULL  WHEN 0xffffffffef5fa15f THEN NULL ELSE NULL END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((t0.c0)OR(t0.c75)))OR(t0.c84)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c75)>(t0.c60)) AS INTEGER), (~ (SUM(t0.c0))), ((~ (t0.c0)) IN ()), (CAST(t0.c0 AS REAL) IN ()), (((t0.c84 IN ())) BETWEEN (((((x'')AND(t0.c84)))AND(t0.c75))) AND ((t0.c84 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT SUM((t0.c75 IN ())) OVER (), ((CAST(t0.c84 AS INTEGER))<((- (t0.c84)))), (COUNT(*) IN ()) FROM t0; -- 0ms;
SELECT ALL ((t0.c84) NOT BETWEEN (t0.c60) AND (t0.c84)) COLLATE RTRIM, (- (((((((((t0.c84)AND(t0.c75)))AND(t0.c75)))OR(t0.c0)))AND(t0.c0)))), ((CASE t0.c84  WHEN t0.c0 THEN t0.c84 END) BETWEEN (NULL) AND ((- (t0.c84)))) FROM t0 WHERE (HEX((~ (0.6838172235359457)))) GROUP BY ((((t0.c0 COLLATE NOCASE)OR(((t0.c84) NOT NULL))))AND(((t0.c84)LIKE(t0.c0)))), CASE UNLIKELY(t0.c75)  WHEN (((t0.c60)) BETWEEN ((t0.c0)) AND ((t0.c60))) THEN ((((((((t0.c0)OR(t0.c84)))OR(t0.c0)))OR(0.8427963647654748)))AND(t0.c84)) ELSE t0.c84 COLLATE BINARY END, ((((TRIM(t0.c75))AND(CASE WHEN t0.c75 THEN t0.c0 END)))AND(CASE WHEN t0.c75 THEN t0.c84 END)) HAVING ((((t0.c0)>(t0.c75))) BETWEEN (((t0.c75) ISNULL)) AND (t0.c60)) LIMIT -492490324; -- 0ms;
SELECT DISTINCT ((COALESCE(t0.c0, t0.c75)) BETWEEN (TYPEOF(DISTINCT t0.c0)) AND ((((t0.c84, '1519510858', t0.c60)) BETWEEN ((t0.c84, t0.c60, t0.c84)) AND ((t0.c84, t0.c60, t0.c60))))) FROM t0 WHERE (CASE WHEN ((NULL) BETWEEN (x'') AND (NULL)) THEN ((0.36711244221701733)IS NOT(x'a1a7')) WHEN GLOB('-852433342', '') THEN ((NULL)%('')) WHEN CAST(NULL AS REAL) THEN ('-1152541120' IN (NULL, x'')) END); -- 0ms;
SELECT DISTINCT ((CAST(t0.c75 AS TEXT)) NOTNULL) FROM t0 WHERE (((NULL) IS FALSE) COLLATE RTRIM) LIMIT -783921886 OFFSET -1180901760; -- 0ms;
SELECT ALL (+ (NULLIF(DISTINCT t0.c75, t0.c75))), NULLIF(CASE t0.c84  WHEN t0.c75 THEN t0.c60 END, CASE WHEN t0.c60 THEN x'260c' END), ((((((((COUNT(t0.c75))OR(((t0.c75) NOT BETWEEN (x'') AND (t0.c75)))))AND((t0.c75 IN (t0.c84)))))OR('1650511006')))OR(LOWER(DISTINCT t0.c0))) FROM t0 GROUP BY (((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)) IN ()) LIMIT -239147197; -- 0ms;
SELECT DISTINCT ((((t0.c84)&(t0.c75)))<((+ (NULL)))) FROM t0; -- 1ms;
SELECT DISTINCT ((((t0.c60)) BETWEEN ((t0.c0)) AND ((t0.c75))) IN ()), CAST(COUNT(0.6560875410614814) AS REAL), ((x'') NOT BETWEEN ((x'' IN ())) AND (t0.c84)) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 COLLATE BINARY FROM t0; -- 0ms;
SELECT ALL CASE WHEN ((t0.c60) BETWEEN (t0.c75) AND (t0.c75)) THEN ((t0.c60) BETWEEN (t0.c84) AND (t0.c75)) WHEN (t0.c60 IN ()) THEN ((t0.c60) NOT BETWEEN (t0.c0) AND (t0.c60)) WHEN HEX(DISTINCT x'd2ab') THEN (~ (t0.c84)) ELSE CASE WHEN t0.c60 THEN t0.c75 ELSE t0.c84 END END FROM t0 WHERE (x'1c67'); -- 0ms;
SELECT ((x'')>>(t0.c0)) FROM t0 WHERE ((((((((((NULL IN ()))OR(ABS(''))))OR(((((((((0.3388701496317591)OR(-1.46985765E8)))AND(-9.54143787E8)))OR(NULL)))AND(0.17411461394771965)))))AND(-8.15662969E8)))OR(((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT MAX(((((((((t0.c75)AND(t0.c60)))AND(t0.c0)))AND(NULL)))AND(t0.c0))), (((t0.c84)==(t0.c84)) IN (t0.c75 COLLATE RTRIM, (+ (t0.c75)))), CASE CAST(t0.c60 AS BLOB)  WHEN t0.c84 THEN x'' WHEN (((t0.c75))>((0xfffffffffc3c87eb))) THEN GROUP_CONCAT(t0.c0) WHEN ((t0.c60)>>(t0.c60)) THEN (~ (t0.c75)) END FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c84 IN (t0.c84)))IS NOT(((((t0.c60)OR(t0.c0)))OR(t0.c84)))) FROM t0; -- 9ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT ALL ((t0.c0 COLLATE RTRIM)/((+ (t0.c0)))) FROM t0 WHERE (COALESCE((('-1325967323') IS TRUE), CAST('-?e' AS NUMERIC))); -- 0ms;
SELECT ((('')) BETWEEN ((((t0.c0) BETWEEN (t0.c84) AND (t0.c0)))) AND ((((t0.c84)!=(t0.c75))))) FROM t0 WHERE ((- (((0Xffffffffa7f530a8) NOTNULL)))); -- 0ms;
SELECT DISTINCT (((CAST(t0.c84 AS INTEGER)))>=(((NOT (t0.c84))))), CAST(((('0.6502798882047781')) NOT BETWEEN ((t0.c0)) AND ((t0.c60))) AS TEXT), ((((t0.c60, t0.c75, t0.c75)) NOT BETWEEN ((t0.c0, t0.c60, t0.c60)) AND ((t0.c84, t0.c84, t0.c84))) IN ()) FROM t0; -- 0ms;
SELECT ((((t0.c0) BETWEEN (0.9205955241712582) AND (t0.c84))) ISNULL), CASE (- (t0.c84))  WHEN ((t0.c0)OR(t0.c75)) THEN t0.c0 COLLATE NOCASE END, ((t0.c60 COLLATE RTRIM) NOT NULL) FROM t0; -- 0ms;
SELECT DISTINCT 0.9154868223758329 FROM t0 WHERE ((+ ((NOT (NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN (t0.c84 IN (t0.c75, t0.c0)) THEN NULL ELSE 2.074561737E9 END, (~ ((- (t0.c0)))), UNLIKELY(DISTINCT ((t0.c84)-(t0.c60))) FROM t0 WHERE (CAST(LAST_INSERT_ROWID() AS NUMERIC)) GROUP BY CASE CASE WHEN t0.c84 THEN t0.c75 END  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c84 END THEN TYPEOF(DISTINCT t0.c75) WHEN CAST(t0.c75 AS REAL) THEN UPPER(DISTINCT t0.c0) WHEN (NULL IN ()) THEN t0.c75 END HAVING (~ (((((((((t0.c60)AND(t0.c84)))OR(t0.c60)))OR(t0.c84)))AND(t0.c60)))); -- 0ms;
SELECT ALL ((((((t0.c60)IS(t0.c60)))OR(LIKE(t0.c75, t0.c0))))OR(((t0.c60) NOT BETWEEN (t0.c0) AND (t0.c60)))), LAST_VALUE(LIKELY(((t0.c0)|(t0.c75)))) OVER (), (((((+ (t0.c0)))AND(((t0.c75)AND(t0.c0)))))OR(CASE t0.c60  WHEN t0.c0 THEN t0.c60 ELSE t0.c75 END)) FROM t0 LIMIT -752008626; -- 0ms;
SELECT t0.c84 FROM t0 WHERE (((('1254061279' IN ()))>((('1477065686') ISNULL)))); -- 0ms;
SELECT ((((t0.c60)<(t0.c0)))==(((((t0.c84)OR(t0.c0)))AND(t0.c84)))) FROM t0 ORDER BY (+ (((t0.c0)/(t0.c84))))  NULLS LAST; -- 0ms;
SELECT ALL ((((((t0.c60)OR(NULL)))AND(t0.c60)))IS NOT((((t0.c84))>=((t0.c75))))) FROM t0; -- 0ms;
SELECT DISTINCT json_valid(CAST(t0.c84 AS BLOB)), SUM(CAST(t0.c75 AS NUMERIC)) OVER ( ROWS BETWEEN ((((t0.c75)LIKE(t0.c75)))-((NOT ('2009171172')))) PRECEDING AND t0.c75 PRECEDING), (~ (t0.c84 COLLATE BINARY)) FROM t0 WHERE ((((x'')-(-968382533)) IN (CASE WHEN 0.3717624646256982 THEN 0.1319466273525538 WHEN 1.221522949E9 THEN '-1210257228' WHEN 0.2540804336711008 THEN NULL ELSE x'057a' END))) ORDER BY COALESCE(DISTINCT SQLITE_VERSION(), ((t0.c75) NOT BETWEEN (t0.c84) AND ('ft_G'))) ASC  NULLS FIRST, (- (CAST(t0.c60 AS NUMERIC))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT x'' FROM t0; -- 0ms;
SELECT (((NOT (t0.c84)))IS(CAST(t0.c0 AS NUMERIC))) FROM t0; -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(t0.c75) IN ((NOT (t0.c60)))) FROM t0; -- 0ms;
SELECT DISTINCT LAG((((((t0.c0)OR('P5l7H缗f<')))AND(t0.c75)) IN (((t0.c75) IS TRUE))), ((((t0.c75)<<(t0.c75)))GLOB(((t0.c84) BETWEEN (t0.c75) AND (0.29521914380795433)))), (((t0.c0, t0.c0, t0.c60)) NOT BETWEEN ((((t0.c60) IS TRUE), CASE WHEN t0.c60 THEN t0.c0 END, SQLITE_COMPILEOPTION_USED(t0.c84))) AND ((t0.c60, ((t0.c0)>=(t0.c0)), ((t0.c60) BETWEEN (t0.c84) AND (t0.c60)))))) OVER () FROM t0 WHERE ((NOT (CAST('430254158' AS NUMERIC)))); -- 0ms;
SELECT CASE WHEN x'2966' THEN t0.c60 ELSE ((t0.c84) IS FALSE) END, COUNT(((t0.c0) BETWEEN (t0.c60) AND (t0.c75))), SUM(((0.5634548046679332) BETWEEN (t0.c84) AND (t0.c84))) OVER (), (~ (((t0.c84) IS TRUE))), (((t0.c60 IN ())) NOT BETWEEN (0.4545116118477073) AND (CAST(t0.c60 AS INTEGER))) FROM t0; -- 0ms;
SELECT CAST(t0.c0 AS TEXT) FROM t0 GROUP BY (((t0.c75, x'71fa', t0.c0, t0.c60, t0.c75)) BETWEEN (((((t0.c60, t0.c0, t0.c0, t0.c75, NULL)) NOT BETWEEN ((t0.c60, t0.c60, t0.c75, '-1914393203', t0.c60)) AND ((t0.c60, t0.c0, t0.c84, t0.c0, t0.c60))), ((0.14848793640342473) IS FALSE), t0.c75, t0.c84 COLLATE NOCASE, ((t0.c0) BETWEEN (t0.c60) AND (t0.c84)))) AND ((t0.c60, CASE t0.c84  WHEN t0.c75 THEN t0.c60 ELSE t0.c0 END, (+ (t0.c60)), ((((t0.c75)AND(t0.c84)))AND(t0.c75)), ((t0.c60) BETWEEN (t0.c84) AND (t0.c0))))), ((((t0.c60)OR(t0.c75)))AND(t0.c0)) COLLATE RTRIM, CASE ((t0.c60) IS TRUE)  WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0)=(t0.c84)) END; -- 0ms;
SELECT CASE WHEN ((t0.c0)GLOB(t0.c60)) THEN LIKELIHOOD(t0.c75, 0.0366401859184714) ELSE (((t0.c60, t0.c84, t0.c60))>((t0.c0, t0.c0, t0.c75))) END FROM t0 ORDER BY CASE t0.c60  WHEN ((((t0.c84)OR(t0.c84)))OR(t0.c84)) THEN (NOT (t0.c60)) ELSE t0.c75 COLLATE BINARY END, ((CHANGES()) ISNULL) DESC  NULLS FIRST; -- 1ms;
SELECT ALL COUNT(*) OVER (), 0.6740543908168671, ((((NULL) BETWEEN (t0.c0) AND (0xffffffffef75bafd)))<<(((t0.c60)IS NOT(t0.c0)))) FROM t0 WHERE (((ABS(DISTINCT 1.433391742E9)) BETWEEN (CAST('' AS REAL)) AND (((('[>'))<=(('')))))) GROUP BY '2009171172', CAST(CASE t0.c84  WHEN t0.c60 THEN t0.c0 WHEN t0.c60 THEN t0.c84 WHEN t0.c75 THEN t0.c75 ELSE t0.c75 END AS REAL), ((t0.c0) IS FALSE) HAVING (((((((((((((((t0.c75)OR(t0.c75)))AND(t0.c75)))AND(t0.c0)))OR(t0.c75)))AND(t0.c84)))OR(t0.c60))))>=(((+ (t0.c75))))); -- 0ms;
SELECT ALL MIN(x'', t0.c0 COLLATE NOCASE) FROM t0; -- 0ms;
SELECT '-492490324', ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c84))) IN ()), TOTAL(t0.c75) COLLATE NOCASE COLLATE BINARY FROM t0 WHERE (CAST((((0Xc9871ca, NULL, x'')) NOT BETWEEN ((0x67f121e8, x'ee57', -3.77632227E8)) AND ((NULL, 'UⳛO+捊c', 0.5397620826387386))) AS TEXT)) GROUP BY ((NULL) IS TRUE), CASE WHEN ((t0.c0)+(t0.c84)) THEN ((((t0.c60)OR('\rG')))AND(t0.c75)) END, ((((t0.c84 IN (x''))))<((((((t0.c84)AND(t0.c0)))OR(t0.c60))))) HAVING (((t0.c75)OR(t0.c84)) IN ()); -- 0ms;
SELECT COUNT(*), (((('1268891962')AND(t0.c84)))IS(((t0.c0)IS NOT(t0.c0)))), (((NULL IN (t0.c75, t0.c60))) NOT BETWEEN (CASE WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN NULL WHEN t0.c0 THEN t0.c60 ELSE t0.c60 END) AND (((((t0.c60)OR(t0.c0)))AND(t0.c75)))) FROM t0; -- 0ms;
SELECT DISTINCT AVG(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS) FROM t0 WHERE ((((('oU\''PI-nv')+(NULL))) NOT NULL)); -- 0ms;
SELECT CAST(t0.c84 AS REAL), TOTAL(GROUP_CONCAT(t0.c60 COLLATE BINARY)), COUNT(*), COUNT(*), PERCENT_RANK() OVER () FROM t0;SELECT DISTINCT COUNT(*) OVER () FROM t0; -- 1ms;
SELECT DISTINCT (((t0.c60 IN ())) BETWEEN ((+ (t0.c84))) AND (t0.c75)) FROM t0; -- 0ms;
