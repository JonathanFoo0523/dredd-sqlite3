-- Time: 2024/06/07 09:30:05
-- Database: database47
-- Database version: 3.40.0
-- seed value: 1755113447
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES ('\&\rU'); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('\&\ru'), (NULL), (x''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), ('-374038234'), ('~dk8'); -- 1ms;
REINDEX  vt0; -- 1ms;
PRAGMA journal_size_limit = 0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL), (NULL), (-3.74038234E8); -- 6ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1482219778);\n; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('\&\rU'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 7ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
PRAGMA temp.mmap_size = -5639509468808344483; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (-1.482219778E9); -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.08889535876184984); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'193aa65b'), (x''), (-1.482219778E9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
UPDATE vt0 SET c0='-374038234'; -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (''), (NULL), (NULL); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('0'), (''), (x''); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.38521205402685754); -- 0ms;
PRAGMA main.busy_timeout = 0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-374038234,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('263854824'); -- 0ms;
PRAGMA defer_foreign_keys; -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 0ms;
DELETE FROM vt0; -- 0ms;
PRAGMA temp.optimize; -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('0.08889535876184984'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.7518580439492325); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.8274787060317061), (''), (-3.74038234E8); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (263854824); -- 10ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (x''), ('-1139379889'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.secure_delete = true; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x'452d'); -- 16ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29823'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (''), (NULL), (-3.74038234E8); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 879104304); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x'00ae'); -- 22ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29562'); -- 13ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('263854824'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=862930009,4');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA temp.default_cache_size = 263854824; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT CASE WHEN TOTAL_CHANGES() THEN ((((t0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) END, (((t0.c0)<=(vt0.c0)) IN ()), ((vt0.c0 COLLATE RTRIM) NOT NULL) FROM vt0, t0; -- 0ms;
SELECT ALL (((((t0.c0 IN (t0.c0)))OR(vt0.c0)))OR(MIN(vt0.c0))), ((vt0.c0 COLLATE RTRIM) BETWEEN (TOTAL(t0.c0)) AND (((t0.c0)OR(t0.c0)))), CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE FROM vt0, t0 LIMIT -2122854124; -- 1ms;
SELECT CAST(vt0.c0 AS TEXT), x'', ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((+ (t0.c0))) AND ((+ (vt0.c0)))) FROM vt0 WHERE (((((((x'')AND(x'f5b3')))AND('K*')))||(CASE NULL  WHEN x'' THEN 0.53265576960685 ELSE '|H5S' END))) ORDER BY ((t0.c0 COLLATE NOCASE)||(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST, t0.c0  NULLS FIRST;SELECT ALL ((t0.c0) BETWEEN (vt0.c0) AND ((((t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, t0.c0, t0.c0, vt0.c0)) AND ((NULL, t0.c0, t0.c0, vt0.c0, t0.c0))))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, t0; -- 0ms;
SELECT 2.63854824E8 FROM t0, vt0 WHERE (((CAST(0Xffffffffbc16714f AS BLOB))%(((0.7231530464766055) IS TRUE)))); -- 0ms;
SELECT DISTINCT (((t0.c0) IS TRUE) IN ()), ((CASE WHEN vt0.c0 THEN t0.c0 END) IS FALSE), ((((((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)OR((NOT (t0.c0)))))AND('')))OR((((t0.c0))<>((t0.c0))))))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))) FROM vt0, t0 WHERE (CASE WHEN (- (x'b656')) THEN (('') BETWEEN (x'f5c8') AND (538266895)) END) ORDER BY t0.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT t0.c0, json_quote(AVG(vt0.c0)), vt0.c0 FROM vt0;SELECT CAST(((t0.c0) ISNULL) AS REAL) FROM t0, vt0; -- 0ms;
SELECT DISTINCT TOTAL((vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0, vt0; -- 1ms;
SELECT DISTINCT (NOT (t0.c0)) COLLATE RTRIM FROM t0, vt0 WHERE (((('R~')<('823447763')) IN (NULLIF(DISTINCT NULL, 0.5080182323187492)))) GROUP BY t0.c0, (((PRINTF(t0.c0, 5.38266895E8, t0.c0)))>(((((vt0.c0))>((t0.c0)))))), (((~ (vt0.c0)))!=(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) HAVING (((vt0.c0) IS TRUE) IN ()); -- 0ms;
SELECT DISTINCT x'', vt0.c0, ((((AVG(t0.c0))AND(((t0.c0)<=(t0.c0)))))AND((vt0.c0 IN ()))) FROM vt0, t0 WHERE (((('') NOT NULL) IN (0.7231530464766055))); -- 0ms;
SELECT ((t0.c0)>=('|h5s')) COLLATE RTRIM COLLATE BINARY, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND ((vt0.c0 IN (t0.c0, t0.c0)))), vt0.c0 FROM vt0, t0; -- 0ms;
SELECT (COUNT(vt0.c0) IN ()) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (+ (CASE t0.c0  WHEN vt0.c0 THEN NULL WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)) FROM t0;SELECT (((NULL, t0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(t0.c0)), (NOT (vt0.c0)), MAX(t0.c0))) AND ((NULL, '-921357485', x''))) FROM t0;SELECT ALL (+ (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))||(CAST(vt0.c0 AS NUMERIC))) FROM t0, vt0 LIMIT -827673018 OFFSET -2122854124; -- 0ms;
SELECT ALL AVG(JULIANDAY(t0.c0, t0.c0, t0.c0)) OVER (), x'', CASE WHEN CAST(t0.c0 AS TEXT) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END FROM t0, vt0 WHERE (((((NULLIF(0.7518580439492325, NULL))AND('xt')))OR(((NULL) NOT BETWEEN ('698064596') AND (x''))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY 0.3099138379814026  NULLS FIRST, vt0.c0 DESC  NULLS FIRST ROWS (((t0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)<=(vt0.c0))))) PRECEDING EXCLUDE TIES) FROM vt0, t0; -- 0ms;
SELECT x'' FROM t0; -- 0ms;
SELECT ALL vt0.c0 FROM t0 WHERE ((((((0.8443561543968033)<=(x''))))<=((((NULL) IS FALSE)))));SELECT ((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))LIKE(vt0.c0)) FROM vt0 WHERE ((((((0X1f35c7ae IN ()))AND((- ('\ns')))))OR(0.731654014376012)));SELECT t0.c0 COLLATE NOCASE FROM vt0 LIMIT -1226197391 OFFSET -1482219778;SELECT ALL SQLITE_COMPILEOPTION_GET(((t0.c0)*(vt0.c0))) FROM vt0, t0 NOT INDEXED WHERE ((((CAST(0.6960469043354897 AS NUMERIC)))==(((+ (',EW')))))); -- 0ms;
SELECT DISTINCT (- (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), t0.c0, ((((vt0.c0) NOT NULL))||((vt0.c0 IN ()))) FROM t0, vt0 WHERE (x'5372'); -- 0ms;
SELECT DISTINCT NTILE(((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))IS NOT(vt0.c0))) OVER () FROM t0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), 0.3609040019104912, '577435452' FROM t0, vt0; -- 0ms;
SELECT ALL SUM(x'') OVER ( PARTITION BY (~ (vt0.c0)) COLLATE BINARY, ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) NOT BETWEEN (LTRIM(vt0.c0)) AND ((NOT (t0.c0))))), CAST(vt0.c0 COLLATE NOCASE AS TEXT), HEX(t0.c0) FROM t0, vt0 WHERE ((((((((('')OR(CASE WHEN NULL THEN 0x336f4459 WHEN x'd78f' THEN x'' WHEN x'' THEN 0.695865698362749 END)))OR(((x'') IS FALSE))))OR(((((((((NULL)OR('-1482219778')))OR(0.5222139843707815)))AND(NULL)))OR(NULL)))))AND(('*(~m͚|	F' IN ())))); -- 0ms;
SELECT DISTINCT ((t0.c0) NOTNULL) COLLATE BINARY FROM vt0;SELECT DISTINCT (((((x'684e' IN ()))OR(0.7690460077150385)))AND('1e500' COLLATE BINARY)), t0.c0, (NOT (((t0.c0)OR(t0.c0)))), CAST(0.7231530464766055 AS NUMERIC) COLLATE NOCASE, LENGTH((t0.c0 IN ())) FROM vt0;SELECT DISTINCT (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((TOTAL_CHANGES(), ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((x'4cf6') IS TRUE))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), (NOT (vt0.c0)), CAST(vt0.c0 AS INTEGER)))) FROM t0 NOT INDEXED, vt0 WHERE ((((((NOT (NULL)))AND((NOT ('6>A')))))AND(((NULL) NOT BETWEEN ('') AND (NULL))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL) DESC; -- 0ms;
SELECT DISTINCT COUNT(((t0.c0)/(vt0.c0))) FROM t0, vt0 WHERE (((((NULL)|('-2103971167')))|((NOT (''))))); -- 0ms;
SELECT DISTINCT CAST(t0.c0 COLLATE BINARY AS NUMERIC) FROM t0; -- 0ms;
SELECT RANK() OVER () FROM vt0 ORDER BY vt0.c0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)GLOB('\ns')))-(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM t0, vt0 WHERE ((0.9229175682081143 IN ()) COLLATE BINARY); -- 1ms;
SELECT DISTINCT LAST_VALUE(((((((t0.c0)!=(0.8506233667471385)))AND(((t0.c0)OR(t0.c0)))))OR(((t0.c0)OR(t0.c0))))) OVER ( ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE RTRIM  NULLS LAST, ((((t0.c0)GLOB(vt0.c0)))<=(vt0.c0 COLLATE RTRIM)) DESC, ((SQLITE_COMPILEOPTION_USED(t0.c0))||(vt0.c0 COLLATE NOCASE)) ASC), ((CAST(vt0.c0 AS NUMERIC)) IS TRUE), (CAST(t0.c0 AS REAL) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM t0;SELECT DISTINCT FIRST_VALUE((- ((~ (t0.c0))))) OVER ( GROUPS CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE PRECEDING), ((((0.8794335103636861)<(t0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), (t0.c0 IN ((t0.c0 IN ()))) FROM t0;SELECT DISTINCT CASE WHEN 'Qt' THEN ((t0.c0)AND(-261049170)) WHEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) THEN vt0.c0 WHEN json_array(t0.c0, t0.c0) THEN '' WHEN (NULL IN ()) THEN ((vt0.c0)<>(t0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) ELSE ((x'6eee') BETWEEN (vt0.c0) AND (t0.c0)) END, AVG((- (t0.c0))) OVER (), ((((((((vt0.c0)AND(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)))AND((('-1173624327') IS FALSE))))AND(CAST(vt0.c0 AS REAL))) FROM vt0 WHERE (x'2f8d');SELECT ALL (((t0.c0)>=(vt0.c0)) IN (((t0.c0) IS FALSE))), ((((CAST(t0.c0 AS TEXT))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(CAST(t0.c0 AS NUMERIC))), (DATE(0Xffffffffd0588aa6, t0.c0, vt0.c0) IN ()) FROM vt0, t0; -- 0ms;
SELECT DISTINCT 'ybQ5', ((((((((x'' COLLATE BINARY)OR(((t0.c0)-(vt0.c0)))))OR(((((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(0x38497f9d)))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(MAX(vt0.c0))))AND(HEX(DISTINCT vt0.c0))), ((((vt0.c0) ISNULL)) IS FALSE) FROM vt0 GROUP BY vt0.c0;SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)>=(((((t0.c0)AND(t0.c0)))OR(vt0.c0)))), vt0.c0, (((t0.c0)) NOT BETWEEN ((COUNT(t0.c0))) AND ((((vt0.c0)*(vt0.c0))))) FROM vt0 WHERE (json_array_length(5.77435452E8 COLLATE NOCASE)) ORDER BY ((((x'')AND(t0.c0)))AND(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;SELECT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(x'')) IN (t0.c0)), (((0.7231530464766055)) NOT BETWEEN ((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))) AND ((CASE WHEN vt0.c0 THEN 0xfffffffff17dcfad WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE x'' END))), SUM((((x'6d0f', vt0.c0, t0.c0))!=((t0.c0, '-1139379889', t0.c0)))) FROM t0;SELECT ALL (((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)))OR(vt0.c0)) IN ()) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE) BETWEEN ('-261049170') AND ((t0.c0 IN ()))) FROM vt0, t0; -- 0ms;
SELECT (((t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND (((t0.c0 IN (t0.c0, t0.c0))))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (~ (CASE WHEN t0.c0 THEN vt0.c0 END)), ((((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))AND(0.528716716082932))) NOT NULL), vt0.c0 FROM t0, vt0 WHERE (((((((((((((CASE -1.319941953E9  WHEN x'fa29' THEN -767521422 ELSE '-1319941953' END)OR(((('0.38521205402685754')) BETWEEN ((0.6976297746607376)) AND ((x'6239'))))))OR((('') BETWEEN (0x48667d43) AND ('턔')))))AND(CASE x''  WHEN 0.53265576960685 THEN x'03d0' WHEN 0.9520266746558017 THEN '>{ rN\r' WHEN 's' THEN '' WHEN x'20a111bc' THEN NULL WHEN NULL THEN '-921357485' ELSE x'c2e6' END)))OR((((-1493148706)) BETWEEN ((2.63854824E8)) AND ((NULL))))))OR(('-715160431' IN (-1463759691, '862930009')))))OR(((x'') BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT ALL NULLIF(DISTINCT CAST(vt0.c0 AS NUMERIC), (- (vt0.c0))) FROM t0;SELECT ALL COUNT(CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) OVER () FROM vt0;SELECT DISTINCT (NOT (((vt0.c0)GLOB(t0.c0)))), CAST(((vt0.c0) NOT NULL) AS BLOB), DENSE_RANK() OVER () FROM t0, vt0 WHERE (((CAST(0.5222139843707815 AS TEXT))>(TOTAL_CHANGES()))); -- 0ms;
SELECT ALL ((((t0.c0) IS TRUE))|(((t0.c0)!=(t0.c0)))) FROM t0, vt0 WHERE (((- ('-1463759691')) IN ())); -- 0ms;
SELECT DISTINCT LEAD(((vt0.c0)==(CAST(t0.c0 AS BLOB))), (((t0.c0)AND(t0.c0)) IN ()), (((vt0.c0) NOTNULL) IN ())) OVER ( PARTITION BY ((((vt0.c0) IS TRUE))&(-2122854124)), (NULL IN ())), ((CAST(vt0.c0 AS TEXT)) NOT NULL), ((((((((((((((t0.c0)<(vt0.c0)))AND((((t0.c0))>=((t0.c0))))))OR(vt0.c0)))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND(((vt0.c0)>(vt0.c0)))))AND('263854824')))AND((((NULL, t0.c0, t0.c0))!=((vt0.c0, t0.c0, x''))))), ((GROUP_CONCAT(t0.c0))!=(vt0.c0)), ((((0.06796338583878159)OR(CAST(t0.c0 AS REAL))))OR(t0.c0 COLLATE NOCASE)) FROM t0, vt0; -- 0ms;
SELECT ((((t0.c0) IS FALSE))+((vt0.c0 IN ()))) FROM vt0 WHERE (((((x'feb4')OR((- (-1.630932238E9)))))AND(0.2062013947142297))) LIMIT -1395631820;SELECT DISTINCT '-1998581866' FROM vt0, t0; -- 1ms;
SELECT ((((t0.c0)AND(t0.c0)))OR(vt0.c0)) COLLATE RTRIM FROM t0 WHERE (((((((((('2106524387')OR(0.9461255655582395)))OR(x'5a8a')))OR(x'ee5d')))OR('0.8443561543968033')) IN ()));SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC)) NOTNULL), TRIM((((vt0.c0, vt0.c0, vt0.c0))=((-7.15160431E8, vt0.c0, vt0.c0)))), NTILE(((((t0.c0)%(t0.c0))) BETWEEN (0.8412698140518724) AND (t0.c0 COLLATE RTRIM))) OVER () FROM t0 WHERE ((((~ (x'')))||((0.8969921004211086 IN (0.3616269517163615)))));SELECT DISTINCT ((((t0.c0)IS NOT(vt0.c0))) ISNULL) FROM vt0 LIMIT -1433866321 OFFSET -1226197391;SELECT ALL (((t0.c0)*(vt0.c0)) IN ()), CAST('' COLLATE BINARY AS NUMERIC), NULL FROM t0, vt0 GROUP BY ((((+ (t0.c0)), (NOT (t0.c0)), (- (NULL)), TOTAL_CHANGES(), (NOT (vt0.c0))))==((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, CAST(t0.c0 AS NUMERIC), (((t0.c0, t0.c0, vt0.c0))<((vt0.c0, vt0.c0, 0.26893746061526247))), CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) HAVING ((((vt0.c0)LIKE(t0.c0)))-(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))); -- 1ms;
SELECT DISTINCT AVG(CAST(vt0.c0 AS NUMERIC)) OVER ( ROWS (~ (((t0.c0)<=(t0.c0)))) PRECEDING EXCLUDE CURRENT ROW) FROM vt0 WHERE ((((NULL IN (NULL, 538266895)))*(((x'')||(''))))); -- 0ms;
SELECT (((NOT (t0.c0))) NOT BETWEEN (((x'') BETWEEN (vt0.c0) AND (vt0.c0))) AND (((t0.c0) ISNULL))) FROM vt0, t0 WHERE (((((x'')AND(NULL))) NOT BETWEEN (x'' COLLATE BINARY) AND (('523618222' IN ())))); -- 0ms;
SELECT DISTINCT ((t0.c0)>(vt0.c0)) COLLATE BINARY FROM vt0 WHERE ((+ (((x'') NOT BETWEEN ('466186116') AND (NULL)))));SELECT DISTINCT (~ (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END)), ((((vt0.c0)%(t0.c0))) IS FALSE), CAST(vt0.c0 COLLATE BINARY AS INTEGER) FROM vt0 WHERE (((CAST('-827673018' AS NUMERIC))LIKE(('^Fw꣬' IN ()))));SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS BLOB) FROM t0, vt0 WHERE ((('-80380842')/('<Y*vJ')) COLLATE BINARY); -- 1ms;
SELECT ALL NTILE(t0.c0) OVER ( PARTITION BY (((t0.c0, vt0.c0, t0.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, vt0.c0 COLLATE NOCASE, CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END, CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END, ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0) ISNULL), (t0.c0 IN ()), 0.9528982170813923, ((x'2c032140') IS FALSE), ((((vt0.c0)AND(t0.c0)))OR(x''))))), LIKE(((vt0.c0)||(vt0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), '-')) FROM t0, vt0 WHERE ((((~ (NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT TYPEOF(((vt0.c0)LIKE(t0.c0))), (((((vt0.c0) IS TRUE), MIN(t0.c0), NULL, vt0.c0 COLLATE RTRIM, CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END))<((CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, SUM(vt0.c0), vt0.c0 COLLATE BINARY, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END, t0.c0))), FIRST_VALUE(UNLIKELY(((NULL)IS(t0.c0)))) OVER () FROM t0, vt0 WHERE ((((0xffffffffb6e9b671)LIKE(NULL)) IN ())) EXCEPT SELECT DISTINCT AVG(((((vt0.c0)AND(t0.c0)))AND(t0.c0))), AVG((((t0.c0))==((t0.c0)))), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE) FROM vt0, t0 WHERE (((((x'')<<(NULL))) NOT BETWEEN (NULLIF(0.8794335103636861, 'o	ႚHUmY''^')) AND (((NULL) NOT BETWEEN ('') AND (NULL))))) GROUP BY CAST(((vt0.c0) ISNULL) AS INTEGER), (('1183730310')||((NOT (t0.c0)))), vt0.c0 HAVING ((MIN(t0.c0))/(CAST(t0.c0 AS INTEGER))) LIMIT 862930009 OFFSET -799503706; -- 0ms;
SELECT DISTINCT vt0.c0, COUNT(*) OVER ( ORDER BY ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0)))))  NULLS LAST, ((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))), (+ (((vt0.c0) NOT NULL))) FROM t0 WHERE (CASE COALESCE(x'', '156839956', NULL, 0.6976297746607376)  WHEN CAST(NULL AS NUMERIC) THEN (('-243413075') BETWEEN (NULL) AND (-1482219778)) WHEN ((('M5'))=((NULL))) THEN CAST('[H' AS REAL) WHEN ((0.8443561543968033) IS TRUE) THEN ((0X27237a28)GLOB(0X48667d43)) END);SELECT DISTINCT ((t0.c0) IS FALSE) FROM t0 WHERE (CAST(((((x'e7f2ad93')AND('-875134004')))AND(0xffffffffe9b4a126)) AS REAL)); -- 0ms;
SELECT ALL CASE WHEN ((0.45204599443767046) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END FROM vt0, t0 GROUP BY ((((((vt0.c0)AND(t0.c0)))OR(x''))) NOT NULL); -- 0ms;
SELECT ALL ((((vt0.c0)=(t0.c0))) NOT NULL) FROM t0;SELECT DISTINCT (((vt0.c0 COLLATE BINARY))>=((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) FROM t0, vt0 WHERE ((- (((((NULL)AND(x'')))OR(x'd023'))))); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt0 WHERE (CAST((('')OR('E璙y')) AS TEXT)) GROUP BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC); -- 0ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN (t0.c0 COLLATE NOCASE) AND ((('')*(t0.c0)))) FROM t0, vt0; -- 0ms;
SELECT ALL (((((vt0.c0 IN (t0.c0, t0.c0)))AND(((t0.c0)<=(vt0.c0)))))OR(0.9766730988339004)) FROM t0;SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (LIKE(vt0.c0, t0.c0)) AND ((- (t0.c0)))), ((((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0)==(t0.c0)))))OR(((t0.c0)%(vt0.c0)))), CASE WHEN t0.c0 THEN vt0.c0 END COLLATE RTRIM FROM vt0 WHERE ((((((('-1442626462') IS TRUE))AND(((x'e096')>=(NULL)))))AND(((NULL)GLOB('-1463759691')))));SELECT ((CASE WHEN x'' THEN t0.c0 END) BETWEEN ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) AND ((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, vt0.c0))))) FROM t0, vt0 GROUP BY 0.5663045810477086; -- 1ms;
SELECT DISTINCT (((((~ (t0.c0)))AND(-1.433866321E9)))OR(((('FALSE')) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))), NULLIF((((t0.c0))!=((vt0.c0))), ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))), ((CAST(vt0.c0 AS TEXT)) IS TRUE) FROM t0 GROUP BY ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END) ISNULL), CAST(CASE vt0.c0  WHEN t0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END AS NUMERIC), ((('5141657', 0.6771614042109577, vt0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER), LOWER(t0.c0), ((((t0.c0)OR(vt0.c0)))AND(t0.c0)))) AND (((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, ((vt0.c0) ISNULL))));SELECT '1501842651', CASE WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)&(t0.c0)) END, ((vt0.c0 COLLATE BINARY) NOT BETWEEN (SUM(t0.c0)) AND ((t0.c0 IN (vt0.c0)))), 0.09191351199142073, NULLIF(((t0.c0) NOT NULL), vt0.c0 COLLATE BINARY) FROM vt0, t0 LIMIT -1611438249 OFFSET -1582082808; -- 0ms;
SELECT DISTINCT (- (vt0.c0)), ((((vt0.c0)&(t0.c0))) IS TRUE), CASE WHEN t0.c0 THEN (((vt0.c0))<=((vt0.c0))) ELSE vt0.c0 END FROM vt0, t0; -- 0ms;
SELECT ((vt0.c0)IS NOT(t0.c0)) COLLATE NOCASE, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)*(CAST(0.38521205402685754 AS BLOB))), (((NULL))<=((UPPER(vt0.c0)))) FROM t0, vt0; -- 0ms;
SELECT COUNT((+ (vt0.c0))) FILTER(WHERE '') OVER () FROM t0 LIMIT -1073724614;SELECT DISTINCT CASE (~ (t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END THEN ((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END END, ((0Xffffffffd55f8491)+(((vt0.c0) NOTNULL))), (+ (json_remove('2106524387', vt0.c0))) FROM vt0, t0 WHERE ((((((+ (NULL)))AND(CAST(NULL AS TEXT))))AND((NOT (0.12398090505808923))))); -- 0ms;
SELECT DISTINCT 1518534207 FROM t0, vt0; -- 0ms;
SELECT SUM(t0.c0) OVER () FROM vt0, t0 WHERE ((((((((('0.6976297746607376' COLLATE NOCASE)AND(((-178523597)>=(x'')))))OR(((NULL)LIKE(x'')))))OR(0.4891903126319682)))AND(CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT AVG((t0.c0 IN ())) OVER () FROM vt0 GROUP BY (((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) AND ((((t0.c0)|(vt0.c0)), ((t0.c0) IS FALSE), ((vt0.c0)<>(vt0.c0))))), UNLIKELY(((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))), vt0.c0 HAVING (NOT (((((((((vt0.c0)OR(t0.c0)))OR('-2122854124')))AND(vt0.c0)))OR(t0.c0))));SELECT DISTINCT ((0.8456257822857851) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((((vt0.c0, t0.c0, vt0.c0))<((vt0.c0, t0.c0, vt0.c0))))), (- (vt0.c0 COLLATE BINARY)), NULL FROM t0;SELECT DISTINCT '-1111825293' FROM vt0, t0 WHERE (((((x'e25b')IS(1214676291)))GLOB(load_extension('263854824', 0.44808891711236754))));SELECT DISTINCT ((CAST(vt0.c0 AS TEXT))*(TOTAL_CHANGES())) FROM vt0 WHERE ('1506996027'); -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN ()), ((((vt0.c0)OR(x'f90f')))AND(vt0.c0)), (((vt0.c0, t0.c0, t0.c0))<=((vt0.c0, vt0.c0, t0.c0))))) AND ((((t0.c0) NOTNULL), t0.c0 COLLATE NOCASE, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(((vt0.c0)!=(vt0.c0)))))AND(((t0.c0)<(vt0.c0)))) FROM vt0;SELECT DISTINCT COUNT(t0.c0), GROUP_CONCAT(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES), (+ (json_array(vt0.c0, t0.c0))) FROM t0 WHERE (TYPEOF((('~KB') NOT BETWEEN ('538266895') AND ('823447763'))));SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC))<=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END ELSE 0.10192490390065767 END FROM t0, vt0; -- 0ms;
SELECT ALL (((SUM(vt0.c0)))!=((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))), t0.c0, NTH_VALUE(((t0.c0)/('⛁(mN%0xDZ')), ((t0.c0) ISNULL)) OVER (), 0.8274787060317061, (((((((('0.3099138379814026')AND(CAST('1040278150' AS TEXT))))AND(vt0.c0 COLLATE NOCASE)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) FROM t0;SELECT DISTINCT NTH_VALUE(x'', CASE WHEN CAST(t0.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN ('	\u') AND (x'b3d7')) WHEN ((t0.c0)>>('')) THEN CASE WHEN vt0.c0 THEN 0xffffffffd3fbb7e8 ELSE vt0.c0 END WHEN ABS(t0.c0) THEN CASE t0.c0  WHEN '/ﴂ' THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN 0.9993501590787277 ELSE vt0.c0 END ELSE ((NULL)%(vt0.c0)) END) OVER () FROM t0, vt0 WHERE (CASE WHEN NULL THEN 0.7231530464766055 WHEN '-799503706' THEN NULL WHEN '1781388814' THEN '1034516083' WHEN x'' THEN 0.38975476159919964 WHEN 0.20509517624459206 THEN x'' ELSE x'' END COLLATE BINARY) ORDER BY (((vt0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, (x'a87e' IN ()), TRIM(vt0.c0))) AND (((((t0.c0, vt0.c0, t0.c0))>((-1.493148706E9, vt0.c0, vt0.c0))), CAST(vt0.c0 AS TEXT), '-1442626462'))) ASC; -- 0ms;
SELECT COUNT(((((vt0.c0)OR('')))AND(vt0.c0))) FROM vt0, t0; -- 0ms;
SELECT ALL CAST((- (vt0.c0)) AS TEXT), CASE ((NULL)+(t0.c0))  WHEN ((t0.c0)GLOB(t0.c0)) THEN ((((t0.c0)OR(vt0.c0)))OR(t0.c0)) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN UNLIKELY(vt0.c0) WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, IFNULL(t0.c0, CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.6771614042109577 THEN t0.c0 END) FROM t0 WHERE ('1501842651' COLLATE RTRIM);SELECT DISTINCT ((CAST(0X27caa0b2 AS REAL)) IS TRUE), ((((x'')&(t0.c0))) IS TRUE), load_extension(CASE WHEN t0.c0 THEN t0.c0 END) FROM t0 GROUP BY (((0.38975476159919964 IN ())) NOT BETWEEN (CHANGES()) AND (((x'') NOT BETWEEN (t0.c0) AND (t0.c0)))) LIMIT 577435452 OFFSET 649739219;SELECT DISTINCT MAX(((((vt0.c0)OR(vt0.c0)))AND(t0.c0))) FROM t0;SELECT DISTINCT (('-1776244500')!=(vt0.c0)), ((((((0.4062753276031098)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) AND (t0.c0 COLLATE NOCASE)), t0.c0, vt0.c0, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE FROM t0, vt0 WHERE (((((-1630932238)-(x'03d3'))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL), LIKELY(NULL), CUME_DIST() OVER (), t0.c0, (t0.c0 IN (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) FROM vt0, t0 WHERE (CASE WHEN (('Udk ') IS TRUE) THEN ((x'6d61')||('')) END); -- 0ms;
SELECT ALL GROUP_CONCAT(CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END) OVER ( ORDER BY (((((((((~ (vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND((- (t0.c0)))))OR(IFNULL(DISTINCT t0.c0, vt0.c0))))OR(CAST(0X561f21bf AS INTEGER))) ASC) FROM vt0, t0; -- 0ms;
SELECT ALL CAST(((vt0.c0)||(vt0.c0)) AS REAL) FROM vt0, t0 WHERE (((LTRIM(0xffffffffe7d5a8ca, '0.5222139843707815'))OR(((2.106524387E9) NOT NULL)))) GROUP BY CAST(((((t0.c0)OR(vt0.c0)))AND(t0.c0)) AS NUMERIC), (((NULL))<>((((t0.c0) IS FALSE)))), CASE WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0))<=((vt0.c0))) ELSE ((t0.c0)<<(vt0.c0)) END; -- 0ms;
SELECT DISTINCT vt0.c0, CUME_DIST() OVER (), CHANGES() FROM vt0, t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM vt0 GROUP BY ((vt0.c0) NOT NULL), LIKE(-2.103971167E9, CAST(NULL AS NUMERIC), 'E'), (((t0.c0, vt0.c0, NULL)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)), load_extension(t0.c0), ((((t0.c0)AND(t0.c0)))OR(vt0.c0)))) AND ((LOWER(DISTINCT vt0.c0), vt0.c0, HEX(vt0.c0)))) HAVING ((((NULL)OR(x'')))AND(t0.c0 COLLATE RTRIM));SELECT t0.c0 FROM vt0, t0 ORDER BY vt0.c0 ASC  NULLS FIRST; -- 0ms;
SELECT (((((((t0.c0)OR(vt0.c0)))OR(t0.c0)), (((vt0.c0))=((vt0.c0))), MAX(t0.c0)))<((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END, (((vt0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ('' IN (0.8970745298030712))))), (((((vt0.c0)AND(t0.c0)))AND(vt0.c0)) IN ()), (+ (AVG(t0.c0))) FROM t0;SELECT (((CAST(t0.c0 AS TEXT)))<=((CAST(t0.c0 AS TEXT)))) FROM vt0, t0 WHERE ((NOT (NULL)) COLLATE BINARY COLLATE RTRIM) ORDER BY json_array_length(1314632667); -- 0ms;
SELECT ALL ((('jgpz ^6', t0.c0, t0.c0)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)), (((vt0.c0))<(('P4f%3弧0'))), ((vt0.c0)>=(t0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), ((((vt0.c0)OR('0.20509517624459206')))AND(vt0.c0)), MIN('')))), ((((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE x'' END)OR(vt0.c0)))AND(t0.c0 COLLATE BINARY)), (vt0.c0 IN (vt0.c0)) COLLATE NOCASE, (((vt0.c0, t0.c0, vt0.c0, t0.c0, '1040278150')) NOT BETWEEN ((SUM(x''), CAST(x'' AS REAL), 0.36541907688357256, (((0.7406423300934096))<=((x'2c23'))), ABS(vt0.c0))) AND ((((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS NUMERIC), (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))), TOTAL(CASE WHEN t0.c0 THEN vt0.c0 END) OVER () FROM t0, vt0 ORDER BY ((((t0.c0)=(vt0.c0)))OR((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))), ('-1935798603' IN ()) DESC  NULLS LAST; -- 0ms;
SELECT ALL CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE ((t0.c0) IS FALSE) END FROM t0, vt0; -- 0ms;
SELECT vt0.c0 FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) IN ()), (+ (((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))), DENSE_RANK() OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM t0 WHERE (((((NULL) BETWEEN (-1.139379889E9) AND (x'2526'))) BETWEEN ((('\&\rU')|(5.38266895E8))) AND ((((x'2db4')) BETWEEN ((0.3851520781966844)) AND ((x''))))));SELECT DISTINCT 0.0 COLLATE NOCASE, CAST(MIN(0.5414159927249161) AS REAL), MAX(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), t0.c0 COLLATE RTRIM, CAST(t0.c0 AS INTEGER), MAX(NULL), CASE WHEN t0.c0 THEN t0.c0 END, t0.c0 COLLATE NOCASE) FROM t0 WHERE (((x'' COLLATE RTRIM) NOT BETWEEN ((+ (x''))) AND (((0.3851520781966844) IS TRUE))));SELECT ALL GROUP_CONCAT((((t0.c0))>=((t0.c0)))) OVER ( RANGE BETWEEN CAST(CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END AS BLOB) PRECEDING AND (+ ((+ (vt0.c0)))) PRECEDING EXCLUDE NO OTHERS) FROM t0, vt0;SELECT ALL ((TOTAL(t0.c0)) NOTNULL) FROM t0 WHERE ((((((x'') ISNULL)))<=((((((NULL)AND(NULL)))OR(0Xffffffff9ff36757)))))); -- 0ms;
SELECT DISTINCT CASE WHEN x'd556' THEN ((vt0.c0)<=(vt0.c0)) END FROM t0, vt0; -- 0ms;
SELECT (((t0.c0) NOT BETWEEN (0.2046197452251114) AND (vt0.c0)) IN ()) FROM vt0, t0; -- 0ms;
SELECT ALL (~ (vt0.c0 COLLATE RTRIM)) FROM t0 GROUP BY ((((vt0.c0)>>(t0.c0)))AND(((vt0.c0)%('-290037638')))), CAST(vt0.c0 AS BLOB) COLLATE RTRIM, 0.716936076780583 LIMIT -1538897262 OFFSET 1820023294;SELECT DISTINCT FIRST_VALUE(vt0.c0) OVER (), CAST(SQLITE_SOURCE_ID() AS BLOB), ((((x'')OR(((vt0.c0) IS TRUE))))OR(CAST(vt0.c0 AS INTEGER))) FROM t0, vt0 WHERE (CAST(((538266895) NOT NULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c0) FILTER(WHERE (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) OVER (), vt0.c0, (((- (vt0.c0))) IS TRUE), ((t0.c0)OR(AVG(-1.482219778E9))), (((t0.c0 IN ())) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((~ (t0.c0)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((TRIM(vt0.c0, t0.c0), ((((x'')AND(-1582082808)))OR(t0.c0)), t0.c0))<=((((vt0.c0) NOT NULL), ((vt0.c0) NOTNULL), ((t0.c0)IS NOT(vt0.c0))))) FROM t0, vt0 WHERE (('-2122854124' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT (~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0, vt0 GROUP BY (((vt0.c0 COLLATE BINARY))=((CAST(0.38521205402685754 AS BLOB)))) HAVING CAST((NULL IN ()) AS BLOB) ORDER BY vt0.c0 ASC, t0.c0 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((~ (t0.c0))) BETWEEN (((t0.c0)+(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((x'6c4759f6')) AND ((vt0.c0))))) FROM t0;SELECT DISTINCT (- ((vt0.c0 IN ()))) FROM t0 WHERE (((x'f165')>>('U''')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (~ (((vt0.c0)||(t0.c0)))) FROM t0, vt0 WHERE (TYPEOF(DISTINCT ((0.03860260402709703) ISNULL))); -- 0ms;
SELECT DISTINCT SUM(0.9390507765440687), ((t0.c0) IS FALSE) COLLATE NOCASE, CASE WHEN (NOT (t0.c0)) THEN (+ (t0.c0)) ELSE COUNT(vt0.c0) END FROM vt0;SELECT DISTINCT UPPER(DISTINCT MAX(vt0.c0)) FROM vt0, t0 WHERE (CASE WHEN CASE WHEN '1518534207' THEN x'' ELSE -715160431 END THEN (0.15634392133550057 IN ()) ELSE ((0x203f6bcf) IS FALSE) END); -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))||(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM t0, vt0 WHERE ((((((-1.582082808E9)AND(''))))<>(((((('')AND('-586274183')))OR('')))))); -- 0ms;
SELECT ALL TOTAL_CHANGES(), NULL, ((((t0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM, CAST(((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)) AS NUMERIC), t0.c0 FROM t0, vt0 WHERE (0Xb24754); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)<<(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0)>>(vt0.c0)) ELSE ((vt0.c0)LIKE(t0.c0)) END FROM t0 WHERE (((((((('xt')OR(0.05129764015906424)))OR('yW<Ȭ')), ((NULL) NOTNULL), CASE WHEN x'' THEN x'698c' ELSE 'n䌸p' END))<>((CAST(0xffffffffc2064655 AS BLOB), (~ ('')), CAST(0.5501728316062717 AS NUMERIC)))));SELECT DISTINCT (vt0.c0 IN ()), LAST_VALUE((((vt0.c0) IS TRUE) IN ())) OVER (), ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)-(COUNT(*))) FROM vt0;SELECT SQLITE_COMPILEOPTION_GET(((((vt0.c0)OR(vt0.c0)))AND('667590834'))) FROM t0, vt0 WHERE (((((('m-oI>3'))<(('726467418')))) NOT BETWEEN (NULL) AND (((NULL)>=(0.5194659322218047))))) LIMIT -105456982 OFFSET 865246197; -- 0ms;
SELECT DISTINCT ((((vt0.c0)/(vt0.c0))) ISNULL), ((((ABS(DISTINCT 'Ogw^waND'))OR((+ (t0.c0)))))OR(UNLIKELY(vt0.c0))), (((vt0.c0)) BETWEEN ((((t0.c0)<=(t0.c0)))) AND (((((t0.c0))>((vt0.c0)))))) FROM t0;SELECT GROUP_CONCAT(vt0.c0), ((x'') NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))), (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))), CASE GROUP_CONCAT(t0.c0)  WHEN x'ba5f' THEN ((t0.c0) NOT NULL) WHEN t0.c0 THEN (((t0.c0))=((vt0.c0))) WHEN ((t0.c0)IS NOT(vt0.c0)) THEN (((vt0.c0))<((vt0.c0))) ELSE CAST(vt0.c0 AS REAL) END, (((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)), (NOT (vt0.c0)), CAST(vt0.c0 AS TEXT))) AND ((t0.c0 COLLATE NOCASE, ((t0.c0)>(t0.c0)), ((vt0.c0)&(t0.c0))))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), LAG((~ (CASE t0.c0  WHEN vt0.c0 THEN '-49926963' ELSE vt0.c0 END)), ((((((((CAST(t0.c0 AS INTEGER))OR((t0.c0 IN ()))))AND(((t0.c0)<=(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(CAST(t0.c0 AS INTEGER))), ((((vt0.c0) ISNULL)) NOT NULL)) OVER (), (((vt0.c0 IN ()))<=(CASE WHEN '-1538897262' THEN t0.c0 WHEN x'' THEN vt0.c0 WHEN 0.7809839910276081 THEN vt0.c0 END)) FROM t0, vt0 WHERE (((('.LXN뙱ྖJ' IN ())) BETWEEN (((x'')*(x''))) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT SUM(((t0.c0)>(vt0.c0))) OVER () FROM t0, vt0 WHERE ((((('') IS TRUE))>(TOTAL_CHANGES()))); -- 0ms;
SELECT TOTAL(((t0.c0) IS TRUE)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((t0.c0) NOTNULL) COLLATE RTRIM FROM t0, vt0 WHERE (CASE WHEN (((((((('1251081307')AND('-1463759691')))AND('')))OR(x'a587')))AND('')) THEN CASE WHEN '|' THEN '0.3616269517163615' WHEN NULL THEN '?\r3趋' WHEN -799503706 THEN '523618222' END ELSE (((x'424f'))=((0.8456257822857851))) END); -- 0ms;
SELECT ALL CHAR(SUM(t0.c0)) FROM t0, vt0 WHERE (((((x'')OR((('1154467912') NOT BETWEEN (0.02075668733325864) AND (x'')))))AND((('now')!=(NULL))))); -- 0ms;
SELECT '' FROM t0; -- 0ms;
SELECT ALL (((vt0.c0 IN ())) BETWEEN ('') AND (CAST(vt0.c0 AS INTEGER))), CASE (~ (t0.c0))  WHEN t0.c0 COLLATE BINARY THEN CAST('1951406118' AS BLOB) ELSE SUM(t0.c0) END, (+ ((vt0.c0 IN ()))) FROM t0, vt0 WHERE (PRINTF((('-767521422')IS NOT(0.5457230643150552)))) ORDER BY (((t0.c0, 0.8789659618144282, x'fee3a416')) NOT BETWEEN (((NOT (vt0.c0)), (NOT (t0.c0)), TIME(t0.c0, t0.c0, vt0.c0))) AND ((NULL, CASE t0.c0  WHEN t0.c0 THEN 0.12398090505808923 ELSE vt0.c0 END, (t0.c0 IN ())))) ASC; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL))AND(((vt0.c0) ISNULL))), PRINTF(t0.c0, t0.c0, t0.c0) COLLATE RTRIM, TRIM(SUM(t0.c0)) FROM vt0, t0 WHERE (x'5fff'); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) NOTNULL), ((((TOTAL(vt0.c0))AND(COUNT(vt0.c0))))OR(vt0.c0)), ((CAST(t0.c0 AS TEXT))>=(CASE WHEN t0.c0 THEN vt0.c0 END)), TOTAL(x''), (((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FROM vt0 WHERE (CASE (('-	lB-') BETWEEN ('XI%') AND (''))  WHEN CAST(NULL AS REAL) THEN CASE 'EaP* ന4I'  WHEN 2144388641 THEN 1796738344 ELSE NULL END ELSE SQLITE_SOURCE_ID() END) GROUP BY t0.c0 HAVING CASE t0.c0  WHEN (((('郂v6F_e5')AND(vt0.c0)))AND(t0.c0)) THEN JULIANDAY(NULL, t0.c0, vt0.c0) WHEN 0.8274787060317061 THEN (~ (t0.c0)) WHEN NULL THEN (NOT (t0.c0)) ELSE (((vt0.c0, t0.c0, vt0.c0))==((t0.c0, vt0.c0, vt0.c0))) END ORDER BY (((((((((((('\n>o)^꺺1F\')AND(vt0.c0)))AND(0.12628044611412326)))OR(t0.c0)))AND(t0.c0)))AND((t0.c0 IN (t0.c0, t0.c0)))))OR(vt0.c0 COLLATE BINARY)) DESC, ((TYPEOF(vt0.c0)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) AND (((vt0.c0) NOTNULL))) ASC, RTRIM(((('1258956481')) BETWEEN ((vt0.c0)) AND ((t0.c0))))  NULLS LAST;SELECT DISTINCT COUNT(*) OVER () FROM t0; -- 1ms;
SELECT NULL FROM vt0, t0 WHERE (((((((((CAST(NULL AS REAL))AND((x'41c3' IN ()))))AND(CASE WHEN x'' THEN 0.5939253072409143 END)))AND(((x'')<(NULL)))))OR(((0X54897b8) BETWEEN (0.9229175682081143) AND ('1e500'))))) GROUP BY ((((- (vt0.c0))))=((((t0.c0)|(t0.c0))))), x'', INSTR(CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END, LIKELIHOOD(DISTINCT vt0.c0, 0.027603760619085427)) ORDER BY ((t0.c0 COLLATE BINARY)>>((t0.c0 IN ())))  NULLS LAST; -- 0ms;
SELECT DISTINCT x'1f99d282', LEAD((((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t0.c0)))) IS FALSE), (((((t0.c0, vt0.c0, vt0.c0))<((t0.c0, t0.c0, t0.c0)))) IS TRUE), ((ABS(DISTINCT t0.c0))-(((vt0.c0) IS FALSE)))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), (~ (((vt0.c0)GLOB(t0.c0)))) FROM t0, vt0; -- 0ms;
SELECT CASE WHEN ((vt0.c0)>>(t0.c0)) THEN ((vt0.c0)|(vt0.c0)) ELSE TOTAL(t0.c0) END, (((NOT (vt0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CAST(vt0.c0 AS NUMERIC))), (~ (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) FROM t0 WHERE ((((+ (NULL)))>>(((-1609889605) NOTNULL))));SELECT ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) BETWEEN (CASE x'265f9769'  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((t0.c0) ISNULL))) FROM t0;SELECT (CAST(vt0.c0 AS REAL) IN ()), CASE ((((vt0.c0)AND(t0.c0)))AND(x'a8fd'))  WHEN CAST(t0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE t0.c0 END ELSE ((t0.c0)*(t0.c0)) END, ((CAST(t0.c0 AS TEXT)) IS FALSE) FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) IS TRUE);SELECT DISTINCT COUNT(((t0.c0) IS TRUE)) OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(x'') FROM t0 WHERE (-1039776171); -- 1ms;
SELECT ((((t0.c0) ISNULL)) NOT BETWEEN (151621003 COLLATE NOCASE) AND ((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))), AVG(CAST(t0.c0 AS NUMERIC)), LEAD((((NULL IN ()))+((('SZv{hz쮅') NOTNULL))), 0Xffffffff9ff36757, (((CAST(t0.c0 AS INTEGER)))=((((vt0.c0)GLOB(vt0.c0)))))) OVER (), COUNT(CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END) COLLATE RTRIM, (- (CAST(t0.c0 AS TEXT))) FROM vt0, t0 LIMIT -1325726698; -- 0ms;
SELECT NULL FROM t0 ORDER BY CASE CASE vt0.c0  WHEN '667590834' THEN t0.c0 ELSE t0.c0 END  WHEN LIKELY(DISTINCT vt0.c0) THEN ((t0.c0) ISNULL) WHEN ((vt0.c0)<=(t0.c0)) THEN 'e!}o[' WHEN ((((x'')AND(vt0.c0)))OR(t0.c0)) THEN t0.c0 ELSE 0.2801420070051057 END  NULLS FIRST;SELECT ALL CAST(CAST(vt0.c0 AS REAL) AS BLOB) FROM vt0 WHERE (((('816866464')*(x'db03')) IN (CAST(1944203529 AS INTEGER)))) LIMIT 1010699444; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY)) AND (((t0.c0 IN (t0.c0, t0.c0))))), SQLITE_VERSION(), (CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END IN ()) FROM vt0 WHERE (LOWER(UNLIKELY(0xffffffff9290183e)));SELECT ALL ((((SUM(t0.c0))AND(vt0.c0 COLLATE RTRIM)))AND(((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))) FROM t0 WHERE ((('345771009' IN ()) IN ((x'' IN ()), (('AIlR_X') IS FALSE)))) LIMIT -1463759691 OFFSET -573526134;SELECT DISTINCT CASE WHEN (+ (vt0.c0)) THEN (0.7259828796959038 IN ()) ELSE ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) END, ((t0.c0 COLLATE RTRIM)/(CAST(vt0.c0 AS BLOB))), t0.c0, (((('')AND(t0.c0 COLLATE RTRIM)))AND(t0.c0)), CAST(SUM(t0.c0) AS INTEGER) FROM t0, vt0; -- 0ms;
SELECT ALL ((SUM(t0.c0))<=(IFNULL(t0.c0, vt0.c0))) FROM vt0, t0 WHERE (((((NULL COLLATE NOCASE)AND(((x'2284') BETWEEN (-2045422279) AND (x'9c46')))))OR((((NULL, NULL, '-1039776171')) NOT BETWEEN ((0.5024276706743201, NULL, 0.138157488081195)) AND ((NULL, '-1039776171', '-1925095138')))))); -- 1ms;
SELECT ALL ((((vt0.c0) NOT NULL))OR(((vt0.c0)/(t0.c0)))) FROM vt0 WHERE ((((x'fef4' IN ()))IS NOT((((' q'))==((NULL))))));SELECT DISTINCT (((t0.c0) ISNULL) IN ()), CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((t0.c0)==(t0.c0)) END, ((CAST(t0.c0 AS NUMERIC)) BETWEEN (((vt0.c0)<=(t0.c0))) AND (vt0.c0 COLLATE BINARY)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT 0xffffffff81847790 COLLATE NOCASE FROM t0, vt0 WHERE (((((('-799503706'))!=((0X1872d7af)))) NOT NULL)) ORDER BY CAST((vt0.c0 IN (t0.c0)) AS TEXT) ASC  NULLS FIRST; -- 0ms;
SELECT ALL vt0.c0 FROM vt0, t0; -- 0ms;
SELECT ALL CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END COLLATE BINARY, t0.c0, RANK() OVER () FROM vt0 WHERE ((((~ (NULL)))+(((NULL) NOT BETWEEN (x'') AND ('')))));SELECT ((((((((CAST(t0.c0 AS TEXT))OR(CAST(vt0.c0 AS BLOB))))AND(CAST(-144079005 AS NUMERIC))))OR(((t0.c0)>>(vt0.c0)))))AND((~ (vt0.c0)))), (((+ (t0.c0))) NOTNULL), (vt0.c0 COLLATE NOCASE IN (vt0.c0 COLLATE RTRIM)) FROM vt0, t0 WHERE (UNLIKELY(DISTINCT CAST('1444719679' AS NUMERIC))); -- 0ms;
SELECT ALL CASE WHEN t0.c0 THEN NULLIF(t0.c0, t0.c0) WHEN (~ (vt0.c0)) THEN (- (x'9253')) WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN t0.c0 COLLATE NOCASE THEN (~ (0.3099138379814026)) WHEN (+ (vt0.c0)) THEN CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END, (((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ()), LEAD((+ (1.251081307E9)), t0.c0, json_object(((t0.c0) NOT NULL), ((vt0.c0)IS(t0.c0)))) OVER () FROM t0, vt0;SELECT ALL ((t0.c0)LIKE(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (COALESCE((((0.4891903126319682, '', x'cb827e78'))<=((NULL, 0xffffffffde5a5055, NULL))), ((NULL) BETWEEN (0xffffffff9fec5b6c) AND (x'')))) GROUP BY IFNULL(x'8148', t0.c0 COLLATE RTRIM) LIMIT 1444880831 OFFSET -2109874619; -- 1ms;
SELECT ALL SQLITE_VERSION() FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) AS INTEGER), t0.c0, 0.2824340240426384 FROM t0, vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)IS(vt0.c0)) AS BLOB) FROM t0 WHERE (CASE -7.15160431E8 COLLATE NOCASE  WHEN ((x'b8de')*('')) THEN (NOT (0.3846591769363079)) WHEN (x'' IN ()) THEN ((x'')||(NULL)) WHEN ABS(DISTINCT '51656929') THEN ((NULL) IS TRUE) WHEN (('>{ rN\r')<=('1357817127')) THEN TRIM('(<ࢻH') WHEN (NULL IN ()) THEN (((NULL))=((-1.935798603E9))) ELSE '-233002786' COLLATE BINARY END);SELECT HEX(vt0.c0 COLLATE NOCASE) FROM t0, vt0 GROUP BY (((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), vt0.c0, CASE '0.9390507765440687'  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) END; -- 0ms;
SELECT ALL ((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((((t0.c0)AND(t0.c0)))AND(vt0.c0)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((GROUP_CONCAT(NULL))) AND ((((((vt0.c0)OR(t0.c0)))AND(t0.c0))))) FROM t0 GROUP BY (((t0.c0))<((vt0.c0)));SELECT ALL t0.c0 FROM t0 WHERE ((((('|uaM\Nd') NOT BETWEEN (x'') AND (0X471bbd57)))GLOB(((NULL) ISNULL)))) ORDER BY CAST(CAST(t0.c0 AS REAL) AS REAL) LIMIT 9223372036854775807; -- 0ms;
SELECT DISTINCT 0Xffffffffdb71f5a8 FROM t0 WHERE (CAST(CASE -1472530029  WHEN 0.1377706136068908 THEN 0.637709421760554 ELSE x'' END AS BLOB)); -- 0ms;
SELECT vt0.c0 FROM vt0 GROUP BY (- (CASE t0.c0  WHEN t0.c0 THEN '823447763' WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)) LIMIT -1699859328 OFFSET 1781388814;SELECT GROUP_CONCAT('1518534207') OVER ( ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY, (((((1506996027)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(((((vt0.c0)AND(vt0.c0)))AND(t0.c0))))) FROM t0 WHERE ((((('-1516732689')LIKE(0X226af73c))) NOT BETWEEN ((('323')>(x''))) AND (((0.10192490390065767) IS TRUE)))) GROUP BY ((((t0.c0) ISNULL))-((~ (t0.c0)))) HAVING (~ (t0.c0));SELECT DISTINCT (~ (((NULL) NOT NULL))) FROM t0, vt0 WHERE (((((+ (1221679796)), CAST(0xffffffffa7005bde AS BLOB), LIKELY(0.043211427657128265)))!=((((((NULL)AND('-318842419')))AND('-1733513602')), ((NULL)<=(1501842651)), ((0.03860260402709703) NOT BETWEEN (649739219) AND (0x6713d34)))))) GROUP BY (((((t0.c0)AND(0.07799031133851797)))OR(t0.c0)) IN ()), CAST(CAST(vt0.c0 AS REAL) AS REAL), (((t0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((LIKELY(DISTINCT vt0.c0)))), ((vt0.c0) NOT NULL), vt0.c0 HAVING ((CASE WHEN vt0.c0 THEN '䑙I' END)<=(((((t0.c0)OR(0.8250453475013377)))OR(t0.c0)))); -- 0ms;
SELECT DISTINCT (+ (t0.c0)), SUM(((t0.c0) BETWEEN ('-996104957') AND ('-380703419'))) OVER (), (NOT (((vt0.c0)>=(vt0.c0)))), TRIM(((t0.c0)AND(t0.c0)), TRIM(DISTINCT t0.c0, t0.c0)), ((((NULL)AND(t0.c0)))AND(((('1951406118')) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) FROM t0 WHERE (NULL);SELECT DISTINCT SQLITE_SOURCE_ID() FROM vt0, t0 WHERE ((((NULL)IS NOT('-921357485')) IN ())) GROUP BY (((((((('474366776')OR(CAST(t0.c0 AS NUMERIC))))OR((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))OR(('1395238923' IN ()))))AND(CASE WHEN vt0.c0 THEN x'' ELSE t0.c0 END)); -- 0ms;
SELECT DISTINCT ((vt0.c0) IS FALSE) FROM t0;SELECT ALL vt0.c0 COLLATE BINARY COLLATE RTRIM, ((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))IS('633733676')), '' FROM vt0, t0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB) COLLATE RTRIM, '0.05129764015906424', (((((vt0.c0))==((vt0.c0)))) IS TRUE) FROM vt0 WHERE (((x'')LIKE(0.9993501590787277)) COLLATE RTRIM); -- 1ms;
SELECT (- (CAST(vt0.c0 AS BLOB))), CASE (t0.c0 IN (vt0.c0, vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))<=((t0.c0))) WHEN CAST(-1170954703 AS BLOB) THEN ((vt0.c0)<<(t0.c0)) WHEN ((((vt0.c0)OR(t0.c0)))OR(t0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE (((vt0.c0, t0.c0, vt0.c0))<=((t0.c0, NULL, NULL))) END, ((vt0.c0)<=(vt0.c0)) COLLATE RTRIM, ((vt0.c0 COLLATE BINARY)>(((vt0.c0) ISNULL))), CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)/(t0.c0)) END FROM vt0, t0 WHERE (CAST((((x'', x'5d80', x'')) BETWEEN (('', NULL, x'646a')) AND ((' [f%3弧0', NULL, NULL))) AS REAL)); -- 0ms;
SELECT DISTINCT ((t0.c0) NOT NULL), (((vt0.c0 IN ()))||(((vt0.c0)||(vt0.c0)))), (~ (CAST(vt0.c0 AS BLOB))) FROM t0, vt0 GROUP BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE) HAVING CAST('^|' AS REAL); -- 0ms;
SELECT CAST((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS INTEGER) FROM vt0 WHERE ((((((1328514612, NULL, x''))<>((0.716936076780583, 0x1cc7106c, x''))))<=(((0.2852224615911749) IS TRUE)))) INTERSECT SELECT ALL COUNT(((vt0.c0) IS FALSE)) FROM vt0;SELECT ALL GROUP_CONCAT(NULL), (MIN(t0.c0) IN (((t0.c0) NOT NULL))), (- (CAST(t0.c0 AS NUMERIC))) FROM t0, vt0 WHERE (((((NULL) NOT NULL))!=('1251081307'))); -- 0ms;
SELECT CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END AS REAL) FROM t0;SELECT ((~ (t0.c0)) IN ()) FROM t0, vt0 ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST; -- 0ms;
SELECT ALL '' FROM vt0, t0 WHERE (((((((((((0.6818693220164036)!=(x'')))OR(CAST('-1089994741' AS REAL))))OR(LIKELY(-254142834))))AND(((x'e1df')*(0.0018876234261181457)))))AND(2.63854824E8))); -- 0ms;
SELECT COUNT(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt0 WHERE (((((CAST('-410376277' AS NUMERIC))OR(0X4f821be0)))OR((('11683668') BETWEEN ('') AND (0.3016564971756017)))));SELECT ALL (NOT ((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))) FROM t0 ORDER BY ((t0.c0) BETWEEN ('-715160431') AND (vt0.c0)) ASC, (((0.716936076780583))<=(((- (t0.c0))))), ((((t0.c0)IS(vt0.c0)))>((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC  NULLS LAST;SELECT ALL ((((((((((t0.c0)OR(x'')))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))+(CAST(vt0.c0 AS NUMERIC))) FROM t0;SELECT (((vt0.c0, '0.9520266746558017', t0.c0)) NOT BETWEEN ((('-405428022' IN ('865246197')), ((t0.c0)<<(vt0.c0)), DATETIME(t0.c0, vt0.c0, t0.c0))) AND ((((t0.c0) IS FALSE), SUM(vt0.c0), CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))), (((vt0.c0 COLLATE NOCASE))!=(((vt0.c0 IN ())))), COUNT(*) OVER () FROM vt0, t0 WHERE ((NOT (((0.9520266746558017)<('-798342140'))))); -- 0ms;
SELECT DISTINCT (((CASE NULL  WHEN vt0.c0 THEN t0.c0 END))<=((CAST(vt0.c0 AS TEXT)))) FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (t0.c0) AND (-1226065599))) IS FALSE);SELECT DISTINCT (((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), (t0.c0 IN ()), AVG(t0.c0))) AND (((((t0.c0))<((vt0.c0))), (t0.c0 IN ()), ((vt0.c0)*(vt0.c0))))), ((((t0.c0)>>(vt0.c0)))>(CAST(NULL AS INTEGER))), ((((('1293081404' IN ()))OR(vt0.c0)))OR((NOT (t0.c0)))) FROM t0, vt0 WHERE (((0.9796528965677578 COLLATE BINARY) NOT BETWEEN ((NOT (0.8703912306751781))) AND (CAST(0xffffffff98769250 AS BLOB)))) LIMIT -2115109368; -- 0ms;
SELECT CASE ((t0.c0)GLOB(vt0.c0))  WHEN ((vt0.c0)/(vt0.c0)) THEN (t0.c0 IN ()) ELSE (+ (vt0.c0)) END, ROW_NUMBER() OVER ( RANGE BETWEEN (vt0.c0 IN (vt0.c0)) FOLLOWING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP), CUME_DIST() OVER () FROM t0 WHERE (CAST((((NULL)) NOT BETWEEN (('1621158115')) AND (('0.05129764015906424'))) AS BLOB));SELECT ALL ((((vt0.c0)<>(t0.c0)))+((vt0.c0 IN (vt0.c0, t0.c0)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((((t0.c0)AND(t0.c0)))AND(vt0.c0)) IN ()) FROM t0, vt0; -- 0ms;
SELECT ALL ((((TOTAL(t0.c0))OR(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)))AND(GROUP_CONCAT(vt0.c0))) FROM t0;SELECT DENSE_RANK() OVER () FROM vt0 WHERE (CASE WHEN -707846120 THEN '-928785963' END COLLATE RTRIM); -- 1ms;
SELECT DISTINCT ABS(DISTINCT ABS(t0.c0)) FROM vt0;SELECT TOTAL(t0.c0) FROM t0; -- 0ms;
SELECT DISTINCT CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE RTRIM, (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()), TOTAL(0.6446851723686959) FROM vt0 WHERE (((('P1\RoXi')) BETWEEN (((0.6764694044165984 IN ()))) AND (((- (x''))))));SELECT DISTINCT COUNT(*) FROM vt0, t0 WHERE (((((((((TRIM(DISTINCT x'40eb'))OR(((('688891811')) NOT BETWEEN ((-1979433794)) AND ((x''))))))OR(CASE '+(iu'  WHEN NULL THEN x'' ELSE NULL END)))OR((('s1Bk') IS FALSE))))OR(CAST(x'c561' AS INTEGER)))); -- 0ms;
SELECT ALL t0.c0 FROM vt0, t0; -- 0ms;
SELECT ALL CAST((NOT (t0.c0)) AS NUMERIC) FROM vt0, t0 ORDER BY (((+ (vt0.c0))) BETWEEN ((t0.c0 IN ())) AND (t0.c0 COLLATE NOCASE))  NULLS FIRST, CASE WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) ELSE LTRIM(t0.c0) END  NULLS LAST, ((((((((vt0.c0)OR((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((t0.c0)IS(t0.c0)))))AND(-1909872072))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) IS FALSE) FROM t0, vt0 WHERE ((('-1173624327') NOT BETWEEN (TRIM('1717086205')) AND (0x3abe785 COLLATE NOCASE))) LIMIT -173211080; -- 0ms;
SELECT DISTINCT ((x'')%((~ (vt0.c0)))) FROM t0, vt0 WHERE ((((('' IN (''))))=((CAST('0.6446851723686959' AS INTEGER))))) ORDER BY ((((vt0.c0)&(vt0.c0))) NOT NULL) DESC, CASE ((vt0.c0) NOT NULL)  WHEN ((((((((vt0.c0)AND('-105456982')))AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)) THEN CAST(t0.c0 AS TEXT) ELSE vt0.c0 COLLATE RTRIM END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((NULL)*('649739219')) COLLATE NOCASE) ORDER BY ((t0.c0) NOT BETWEEN (UNLIKELY(t0.c0)) AND (((t0.c0) ISNULL))); -- 0ms;
SELECT ALL ((t0.c0 IN ()) IN ()), ((((vt0.c0)>=(vt0.c0)))+((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))), CASE t0.c0 COLLATE RTRIM  WHEN GROUP_CONCAT(vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END FROM t0 WHERE ((((5.38266895E8)) BETWEEN (('-315372667' COLLATE NOCASE)) AND (('1183730310')))) LIMIT 410179503;SELECT ALL CAST((((('0.06796338583878159')OR(vt0.c0)))OR(vt0.c0)) AS BLOB) FROM t0;SELECT DISTINCT ((((((vt0.c0) IS TRUE))OR(x'')))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), 'v2+괠#/K寞ີ' COLLATE NOCASE, CASE (((t0.c0))>((t0.c0)))  WHEN vt0.c0 THEN vt0.c0 END FROM t0, vt0 ORDER BY ((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(t0.c0 AS INTEGER))))OR((('156839956') IS TRUE))), ((0Xffffffffdc66c758)*(((vt0.c0) IS FALSE))), CAST('-1463759691' COLLATE BINARY AS INTEGER); -- 0ms;
SELECT DISTINCT (((538266895)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((x'') ISNULL)))) FROM t0;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))IS NOT(CAST(vt0.c0 AS REAL))) FROM vt0, t0 WHERE (((NULL) IS TRUE)); -- 1ms;
SELECT DISTINCT (((- (t0.c0))) IS FALSE), RANK() OVER (), CAST('i[-N' AS REAL) FROM t0, vt0 WHERE ((((NULL IN ()))AND((+ (x''))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM t0 NOT INDEXED, vt0 WHERE (((CAST(0.7363193032636607 AS NUMERIC))AND(((((((((x'2fff')OR(NULL)))AND(x'b511')))OR('1506996027')))OR(''))))) GROUP BY (- (((t0.c0)<<(t0.c0)))) HAVING ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB((vt0.c0 IN ()))) LIMIT -60016100; -- 0ms;
SELECT DISTINCT ((('t', vt0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS REAL), t0.c0, vt0.c0)) AND ((((vt0.c0)+(vt0.c0)), LOWER(vt0.c0), CASE t0.c0  WHEN vt0.c0 THEN '0.08889535876184984' END))) FROM t0;SELECT ALL (+ (((((t0.c0)OR(vt0.c0)))AND(t0.c0)))), CASE WHEN ((vt0.c0)>>(t0.c0)) THEN (t0.c0 IN ()) WHEN CAST(0.3616269517163615 AS REAL) THEN CAST(t0.c0 AS TEXT) WHEN x'6a88' THEN t0.c0 COLLATE RTRIM END, (GROUP_CONCAT(t0.c0) IN ()) FROM vt0, t0 WHERE ((((NOT (x'1a59'))) NOT BETWEEN ('7h郂QbVc{') AND (STRFTIME(NULL, NULL, -7.15160431E8)))); -- 1ms;
SELECT ALL ((NULL) NOT BETWEEN (MAX(t0.c0)) AND (TOTAL(vt0.c0))), (((((t0.c0))<>((t0.c0))))>>(((t0.c0) NOT NULL))), (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('e82vP]'))))OR((- (vt0.c0)))))AND(((vt0.c0)<=(vt0.c0)))), (((('q+jsF', t0.c0, t0.c0, vt0.c0, t0.c0)) BETWEEN ((t0.c0, x'436f6c6f', t0.c0, t0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, t0.c0, vt0.c0))) IN ()), ((vt0.c0 COLLATE NOCASE)%(LIKELY(vt0.c0))) FROM vt0, t0 WHERE (((((x'')<(0.6572097576453665)))LIKE(LOWER(x'')))); -- 0ms;
SELECT COUNT(*) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((((t0.c0)LIKE(t0.c0))))>=(((- (vt0.c0))))) FROM vt0, t0; -- 0ms;
SELECT CASE WHEN CAST(vt0.c0 AS REAL) THEN ((((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)))AND(0.34621395629374974)))AND(t0.c0)))AND(vt0.c0)) WHEN ((t0.c0)|(vt0.c0)) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(t0.c0 AS BLOB) THEN TOTAL(vt0.c0) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END FROM vt0, t0; -- 0ms;
SELECT CAST(NULL AS REAL) FROM vt0, t0; -- 0ms;
SELECT (NOT (((t0.c0)*(t0.c0)))), ((((((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((+ (t0.c0)))))OR(AVG(vt0.c0))))AND(((vt0.c0)&(vt0.c0)))))AND((~ (t0.c0)))), ((CAST(t0.c0 AS TEXT))|((((t0.c0))>=((x'448e'))))) FROM t0 ORDER BY TYPEOF(t0.c0) ASC  NULLS FIRST;SELECT ALL ((((((((t0.c0 COLLATE NOCASE)AND(((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(COUNT(*))))OR((vt0.c0 IN (t0.c0)))))AND(((vt0.c0) ISNULL))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((((t0.c0)OR(t0.c0)))AND(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ((((t0.c0) NOT NULL)) ISNULL), ((CAST(t0.c0 AS NUMERIC))%(vt0.c0 COLLATE BINARY)), (((((((((((((((vt0.c0, t0.c0, '0.043211427657128265', vt0.c0, t0.c0)) BETWEEN ((vt0.c0, x'e41b', vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, t0.c0, t0.c0, vt0.c0))))OR(((0.4185934249282819) BETWEEN (t0.c0) AND (t0.c0)))))AND((vt0.c0 IN ()))))OR((- (t0.c0)))))AND(((vt0.c0) IS FALSE))))OR(t0.c0)))AND(vt0.c0)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<(t0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((- (t0.c0)))), ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END)OR(((vt0.c0)>=(t0.c0)))), (+ (((vt0.c0)||(vt0.c0)))) FROM t0 ORDER BY ((vt0.c0) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) AND ((~ (vt0.c0)))) DESC  NULLS FIRST;SELECT (((t0.c0))=(((- (vt0.c0))))) FROM t0 WHERE (CAST(NULL COLLATE BINARY AS INTEGER));SELECT DISTINCT ((((-1.073724614E9)AND('-767521422')))AND(NULL COLLATE BINARY)) FROM t0 GROUP BY ((NULL)|((NOT (vt0.c0))));SELECT (((vt0.c0) IS FALSE) IN ()) FROM t0 WHERE ((((+ ('-1965683571')))-((x'' IN (x'', '660445869'))))); -- 0ms;
SELECT CAST(CASE WHEN t0.c0 THEN t0.c0 END AS INTEGER) FROM vt0, t0 GROUP BY ((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((((vt0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, vt0.c0, t0.c0, 'o!ZfPeA')))) AND (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)) HAVING (((((t0.c0) ISNULL)))<=(((- (t0.c0))))); -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM t0, vt0 WHERE ((((NULL)!=(x'')) IN ())); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT ((((vt0.c0)OR(t0.c0)))OR(t0.c0))), vt0.c0, ((((('-49926963', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))!=(((vt0.c0) IS TRUE))) FROM vt0 WHERE ((NOT ((~ (12087006)))));SELECT DISTINCT MAX(((t0.c0) ISNULL)) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((x'') ISNULL) FROM vt0 ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM DESC;SELECT DISTINCT CAST(((vt0.c0) ISNULL) AS TEXT) FROM vt0 WHERE ((((((('-2103971167') NOT NULL))OR(CAST(x'' AS REAL))))OR(CASE WHEN '523618222' THEN NULL WHEN NULL THEN 0.07799031133851797 WHEN '662003495' THEN x'' ELSE NULL END))); -- 1ms;
SELECT DISTINCT vt0.c0 COLLATE RTRIM FROM vt0 WHERE ((((('-1202509784'))<=(('twP8~U#P'))) IN ((NOT ('1214676291')), ((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)OR((((vt0.c0, vt0.c0, t0.c0))>=((t0.c0, vt0.c0, vt0.c0))))) FROM t0, vt0 WHERE ((('-1955165286') BETWEEN (0.3825841152216769) AND ('0.043211427657128265')) COLLATE BINARY) LIMIT 1635653463; -- 0ms;
SELECT (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))<((MAX(vt0.c0)))) FROM t0 WHERE (((((((((((((0.10192490390065767)OR(-1454384720)))OR(0.34392014281692895)))AND(0.05856018542279162)))AND('')))AND((NOT ('-573526134')))))AND((- (x'97e8')))));SELECT DISTINCT ((((CAST('-73906041' AS BLOB))OR(vt0.c0 COLLATE RTRIM)))OR(NULL)), MAX(((t0.c0)<<(t0.c0))), x'1113' FROM t0 WHERE (((((0.9716279908426713)IS NOT('#(_?sqxs'))) NOT BETWEEN ((('')>('-1750467095'))) AND (('-1786009550' IN ()))));SELECT DISTINCT vt0.c0 FROM vt0 WHERE (-4.9926963E7); -- 0ms;
SELECT ALL ((((GROUP_CONCAT(vt0.c0))OR(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))OR((NOT (1944203529)))) FROM t0 WHERE ((((('-261049170')>>(x''))) IS FALSE));SELECT DISTINCT ((t0.c0)>=(vt0.c0)) COLLATE BINARY FROM t0 GROUP BY CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END THEN t0.c0 COLLATE BINARY ELSE (t0.c0 IN (vt0.c0)) END HAVING CAST(vt0.c0 AS BLOB) ORDER BY vt0.c0 ASC;SELECT ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN x'1b59' THEN vt0.c0 END)>=(((((vt0.c0)AND(t0.c0)))AND(t0.c0)))) FROM vt0, t0; -- 0ms;
SELECT ((((json_extract('', t0.c0))AND(((t0.c0) IS FALSE))))AND((((vt0.c0))>((t0.c0))))) FROM t0 WHERE (x'94e1');SELECT DISTINCT json_array((('641480112')>=(vt0.c0)), (vt0.c0 IN ()), vt0.c0 COLLATE NOCASE, (vt0.c0 IN (t0.c0)), ((vt0.c0)/(vt0.c0)), vt0.c0) FROM vt0, t0 WHERE ((((NULL, x'', NULL)) BETWEEN (((~ (x'')), (('-728459310') NOT BETWEEN ('-1273588899') AND (0.6973918517638634)), ((NULL)/(NULL)))) AND (((('zJ') NOT NULL), CAST(-1.7762445E9 AS TEXT), ((NULL)IS NOT('5141657')))))); -- 0ms;
SELECT CAST((vt0.c0 IN (t0.c0, NULL)) AS REAL), ((TOTAL(t0.c0))OR(((('-1538897262', vt0.c0, t0.c0))!=((t0.c0, vt0.c0, vt0.c0))))), MAX(LTRIM(vt0.c0)) FROM t0 WHERE (((('-1515291854')%(NULL)) IN (((((NULL)OR(x'bf38')))OR(0.7259828796959038)))));SELECT DISTINCT (NOT (((((t0.c0)OR(t0.c0)))OR(vt0.c0)))) FROM t0, vt0 GROUP BY (NOT ((((vt0.c0))==((t0.c0))))) ORDER BY CASE CAST('r50p{' AS BLOB)  WHEN vt0.c0 COLLATE NOCASE THEN ((NULL)>>('BAwK')) WHEN ((0.6743345712826614) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN ((t0.c0)-(vt0.c0)) THEN ((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)) END ASC, (- (((vt0.c0)%(t0.c0)))) ASC; -- 1ms;
SELECT TOTAL(((t0.c0) NOT NULL)) OVER (), CAST(vt0.c0 COLLATE NOCASE AS REAL), '1183730310' FROM t0 WHERE (CAST((- (x'')) AS REAL)) GROUP BY (~ (((t0.c0) BETWEEN (t0.c0) AND ('1796738344'))));SELECT CAST(((vt0.c0) NOT BETWEEN (0.2185409800990663) AND (vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((x'') IS FALSE)); -- 0ms;
SELECT MIN(((0.6433735495995695) IS TRUE)) FROM t0 WHERE ((((NOT (x'64f9fa02')))<(UNLIKELY(DISTINCT '')))) LIMIT -1274012569; -- 0ms;
SELECT ALL rtreenode(vt0.c0, vt0.c0) COLLATE BINARY COLLATE BINARY, CAST((vt0.c0 IN (x'0ab6')) AS REAL), (((vt0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((CAST(vt0.c0 AS NUMERIC)))) FROM t0 WHERE ((x'' IN ()) COLLATE RTRIM);SELECT DISTINCT ((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((t0.c0)*(t0.c0)))), load_extension(((vt0.c0)>=(vt0.c0))), PERCENT_RANK() OVER () FROM vt0, t0;SELECT ALL TOTAL(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))), COALESCE(CAST(vt0.c0 AS NUMERIC), ((vt0.c0)==(vt0.c0))), (((((+ (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR((((vt0.c0, vt0.c0, vt0.c0))<>((t0.c0, t0.c0, t0.c0))))) FROM vt0, t0; -- 0ms;
SELECT ((vt0.c0) IS TRUE) COLLATE NOCASE, SUM(CASE WHEN vt0.c0 THEN vt0.c0 END), NTILE(NULL) OVER ( ROWS BETWEEN ((((vt0.c0)>=(vt0.c0))) IS TRUE) FOLLOWING AND  UNBOUNDED FOLLOWING) FROM t0;SELECT ALL '0.1377706136068908' FROM t0; -- 0ms;
SELECT ALL 0.4898246522578257 FROM t0, vt0; -- 0ms;
SELECT ALL ((((((((NULL)AND(vt0.c0 COLLATE BINARY)))AND((+ (vt0.c0)))))OR(CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(x'')), TYPEOF(COUNT(*)), ((t0.c0 IN ()) IN ()), AVG(((t0.c0) ISNULL)) FILTER(WHERE t0.c0) OVER (), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((CAST(t0.c0 AS NUMERIC)))) FROM t0, vt0 WHERE ((((((('1097738722')&('')))OR(-995177483 COLLATE NOCASE)))OR(((((0.018926997873972895)OR('')))OR('0.8703912306751781'))))) GROUP BY (((t0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((vt0.c0 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((((t0.c0)>>(NULL)))AND(t0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))), t0.c0, INSTR(((t0.c0) IS TRUE), CAST('0.5222139843707815' AS NUMERIC)) FROM vt0, t0 WHERE (SQLITE_COMPILEOPTION_GET(0.4008283082898454 COLLATE RTRIM)) LIMIT -1622280483; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), (+ (((t0.c0) IS FALSE))), CAST(vt0.c0 AS NUMERIC) FROM vt0;SELECT ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)|(CASE vt0.c0  WHEN x'' THEN 0xffffffffd0588aa6 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END)), ((COALESCE(DISTINCT vt0.c0, vt0.c0, '+3', t0.c0))&((((0.3399336521519126)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))), (PRINTF(vt0.c0) IN (((vt0.c0)==(t0.c0)))), NULLIF(((t0.c0) IS FALSE), CAST(t0.c0 AS TEXT)), (((CASE WHEN t0.c0 THEN 0.2753929871099853 END))<((vt0.c0))) FROM vt0 WHERE (CASE WHEN 0.5067689642413887 THEN SQLITE_SOURCE_ID() WHEN ('.}{Vb' IN ()) THEN ((x'f552') IS TRUE) WHEN (('0.15634392133550057') BETWEEN ('喇[') AND (0.9553718887730258)) THEN x'' COLLATE RTRIM END);SELECT (((0X6c7b59fe)OR(t0.c0)) IN ()) FROM t0 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN ((NULL) IS TRUE) ELSE UNLIKELY(x'') END); -- 0ms;
SELECT DISTINCT ((((t0.c0) IS FALSE))<<((+ (vt0.c0)))) FROM t0;SELECT ALL ((LIKELY(t0.c0)) BETWEEN (MIN(t0.c0)) AND (((NULL) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0, vt0 WHERE (((((x'')/(0.7596139827671049))) NOT BETWEEN (((1.827712698E9)|('1845033035'))) AND (((-1830225605)+(NULL))))) GROUP BY ((((((((('' IN ()))OR(((vt0.c0) IS TRUE))))AND(CAST(t0.c0 AS REAL))))AND(((vt0.c0)<>(t0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) HAVING ((((('')OR(t0.c0)))OR(vt0.c0)) IN ()); -- 0ms;
SELECT ALL NULL, ((LIKELY(DISTINCT 'p[ez')) BETWEEN (((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0))) AND ((((vt0.c0))!=((t0.c0))))), (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) NOT BETWEEN (NULL) AND (0xffffffffd55f8491)) FROM t0 WHERE (((SQLITE_COMPILEOPTION_USED(0.183215294197544)) NOTNULL)) GROUP BY load_extension(((vt0.c0)%('0.6433735495995695'))) HAVING ((((((((CAST(vt0.c0 AS INTEGER))OR((~ (t0.c0)))))AND(x'')))OR(t0.c0 COLLATE RTRIM)))OR(((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c0))));SELECT DISTINCT HEX(DISTINCT (('1183730310')LIKE(vt0.c0))) FROM vt0, t0 LIMIT 996330994; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))AND(0.03683419765649876)), ((NULL)!=(vt0.c0)) COLLATE RTRIM, CASE MAX(t0.c0)  WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN t0.c0 THEN vt0.c0 END FROM vt0, t0 WHERE (((CAST(NULL AS NUMERIC))>((~ (-1.538897262E9))))) GROUP BY vt0.c0 HAVING (TRIM(DISTINCT t0.c0, t0.c0) IN ()); -- 0ms;
SELECT DISTINCT LIKE(((t0.c0) BETWEEN (vt0.c0) AND (0.9551146175526423)), (+ (t0.c0)), '0') FROM t0;SELECT ALL DENSE_RANK() OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(t0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE (t0.c0 IN ()) END, (+ (((((vt0.c0)OR(t0.c0)))OR(t0.c0)))), ((((vt0.c0) ISNULL)) NOTNULL) FROM vt0;SELECT DISTINCT PERCENT_RANK() OVER (), SUM((NOT (t0.c0))) OVER (), (((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) NOT NULL) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) IN ()), '1704612276', COUNT(((t0.c0)IS NOT(t0.c0))) OVER ( ORDER BY x'' COLLATE RTRIM) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) AND (((vt0.c0)%(vt0.c0)))) FROM vt0 WHERE (CAST((('-530214672')>>(NULL)) AS REAL));SELECT (~ (vt0.c0)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT x'3f68', (NOT ((- (t0.c0)))), (((((t0.c0, t0.c0, t0.c0))==((vt0.c0, t0.c0, t0.c0))))=(CAST(0.5609293422176895 AS REAL))) FROM t0 WHERE (CASE WHEN (('bp?,hAt	')>('-1111825293')) THEN CAST('' AS TEXT) END);SELECT DISTINCT MIN('1321357123'), (((((-4.9926963E7)AND(t0.c0))))>=((((t0.c0)IS NOT(vt0.c0))))), CAST((((0.34031243342395956))<((t0.c0))) AS TEXT) FROM vt0 WHERE ((((('')|('-917754356')))IS(CASE WHEN 0.23158281971601047 THEN '1796738344' ELSE NULL END)));SELECT COUNT(TYPEOF(vt0.c0)) OVER () FROM vt0 ORDER BY ((t0.c0 COLLATE RTRIM)==(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;SELECT DISTINCT ((((t0.c0)!=(t0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (t0.c0)), ((vt0.c0) NOT BETWEEN (((((t0.c0)OR(t0.c0)))OR(vt0.c0))) AND (t0.c0)), LAG(((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN (t0.c0) AND ((t0.c0 IN (t0.c0, t0.c0)))), CASE WHEN TYPEOF(t0.c0) THEN t0.c0 COLLATE NOCASE END, 0xffffffffe8dabc2d) OVER (), ((0.5024276706743201) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (COUNT(*))), AVG(((vt0.c0)+(vt0.c0))), AVG(x''), (((CAST(t0.c0 AS NUMERIC)))<>((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))) FROM t0;SELECT DISTINCT (((t0.c0)>(vt0.c0)) IN ()) FROM t0 WHERE ((NOT (0.5689035564226165 COLLATE RTRIM))); -- 0ms;
SELECT ALL ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END) BETWEEN (MIN(t0.c0)) AND (CASE WHEN 0.4733572973158572 THEN vt0.c0 ELSE vt0.c0 END)) FROM t0 WHERE ((CAST(816866464 AS NUMERIC) IN ()));SELECT DISTINCT CASE vt0.c0 COLLATE RTRIM  WHEN NULL THEN CAST(t0.c0 AS TEXT) END, (((t0.c0) NOTNULL) IN (((x'') BETWEEN (t0.c0) AND (t0.c0)), t0.c0)), ((TOTAL(vt0.c0))||(((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))), UNLIKELY(((vt0.c0)>>(t0.c0))), TOTAL(0Xffffffff91d79ed4) COLLATE BINARY COLLATE BINARY FROM vt0 WHERE ((CASE 0.9393397604061683  WHEN 0x4e7499 THEN -1.609889605E9 END IN (NULL COLLATE NOCASE)));SELECT DISTINCT (((- (vt0.c0)))+(vt0.c0 COLLATE RTRIM)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))%(MAX(vt0.c0))), (((vt0.c0)) BETWEEN (((NULL IN ()))) AND ((((((t0.c0)AND(t0.c0)))AND(t0.c0))))), t0.c0 FROM vt0 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT t0.c0, vt0.c0, vt0.c0 FROM t0 WHERE (CASE CASE WHEN x'' THEN x'' WHEN x'' THEN 'aI+Z' WHEN '{}' THEN 0X25c6022c END  WHEN (('7') NOT NULL) THEN ('0.637709421760554' IN ()) WHEN (+ (0.5765435530572222)) THEN (((x'', x'6a3e', 0.8974998566903525))<=((x'', 0X336f4459, -0.0))) WHEN ((((NULL)AND(0.4185934249282819)))OR(1541631239)) THEN CASE 0.6838114215165317  WHEN '-1147720995' THEN 0.6764694044165984 WHEN x'2537' THEN x'' WHEN '' THEN '1807498488' END ELSE 'xi%' END) ORDER BY x'35b1' DESC  NULLS FIRST;SELECT ((NOT (vt0.c0)) IN (AVG(t0.c0))), '-1039776171' COLLATE RTRIM, MIN(((t0.c0) IS TRUE)) FROM vt0 WHERE (((0.695865698362749)*(0X37c21af0)) COLLATE NOCASE);SELECT DISTINCT UNLIKELY(vt0.c0) COLLATE RTRIM FROM vt0, t0 ORDER BY ((CAST(x'' AS NUMERIC))<>(json_quote(vt0.c0)))  NULLS FIRST;SELECT (((('-715160431', t0.c0, vt0.c0))<((vt0.c0, t0.c0, vt0.c0))) IN ()) FROM vt0 ORDER BY ((((((((t0.c0 COLLATE BINARY)AND(((vt0.c0)=(vt0.c0)))))AND((((NULL, t0.c0, vt0.c0))==((t0.c0, vt0.c0, vt0.c0))))))OR(vt0.c0)))AND(NULL)) ASC;SELECT DISTINCT load_extension(t0.c0 COLLATE RTRIM), CASE ((vt0.c0) BETWEEN (vt0.c0) AND (-1.83605037E9))  WHEN '-1671718442' THEN NULL WHEN ((t0.c0)GLOB(vt0.c0)) THEN ((vt0.c0)>>(vt0.c0)) WHEN (NOT (vt0.c0)) THEN '88643512' END, t0.c0 FROM vt0, t0;SELECT ALL TRIM(DISTINCT COUNT(*), ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), LOWER(COUNT(*)), (+ (((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))), ((((t0.c0)>=(vt0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((vt0.c0 IN ()))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB(((((((((-1.925095138E9)AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))) FROM vt0;SELECT DISTINCT COUNT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM t0;SELECT DISTINCT NULL FROM t0, vt0 WHERE ((~ ((('') NOT BETWEEN ('0.53265576960685') AND ('WG'))))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT) ASC; -- 0ms;
SELECT DISTINCT (+ (t0.c0)) COLLATE NOCASE, STRFTIME((t0.c0 IN ()), TOTAL(t0.c0), (vt0.c0 IN ())), COUNT(*) OVER () FROM vt0, t0; -- 0ms;
SELECT ALL (- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)) FROM vt0, t0; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)&(vt0.c0))), ((((ABS(DISTINCT t0.c0))AND((('-715160431') ISNULL))))OR(t0.c0 COLLATE RTRIM)), CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)OR(t0.c0)))AND(t0.c0)) END FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((((NULL, vt0.c0, vt0.c0))>=((t0.c0, NULL, t0.c0)))) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE '156839956' END)<=(DATE(vt0.c0, vt0.c0, t0.c0))), LEAD(vt0.c0, ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL), ((vt0.c0) ISNULL) COLLATE NOCASE) OVER () FROM vt0 WHERE (CASE ((('238451638')) BETWEEN ((x'')) AND ((0.526800916272137)))  WHEN ((('1e500')) BETWEEN (('-1611482498')) AND ((''))) THEN ((1.214676291E9)GLOB('-1867746095')) END);SELECT DISTINCT CAST((((t0.c0))<=((vt0.c0))) AS REAL) FROM t0, vt0 WHERE (((((((NULL)/(0.7491356829969558)))OR(((x'')GLOB(x'b55f')))))OR(((0Xffffffffc2064655)|(0xffffffffbea8900a))))); -- 0ms;
SELECT ((((vt0.c0)/(t0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (UPPER(DISTINCT 1317213902))), ((t0.c0)<<(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))), LIKELIHOOD(((((vt0.c0)OR(t0.c0)))AND(t0.c0)), 0.24056976312189193) FROM t0, vt0; -- 1ms;
SELECT DISTINCT ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END)*((- (vt0.c0)))) FROM vt0, t0 WHERE ((((((NULL)) BETWEEN (('~ZR	')) AND (('667590834')))) BETWEEN (CAST('' AS REAL)) AND ((('-1998581866')|(0.05856018542279162))))) GROUP BY CAST(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS TEXT), CASE WHEN vt0.c0 THEN HEX(t0.c0) END, 0x774bf193 COLLATE BINARY HAVING (+ (CAST(1671179223 AS REAL)));SELECT DISTINCT (((NOT (vt0.c0)))*(((vt0.c0)/(t0.c0)))) FROM t0 ORDER BY ((t0.c0 IN ()) IN (vt0.c0))  NULLS LAST;SELECT (~ (t0.c0 COLLATE NOCASE)) FROM vt0 WHERE (CAST(((0x299b9ed4) NOT BETWEEN (NULL) AND ('NaN.H')) AS NUMERIC));SELECT ALL ((CAST(vt0.c0 AS REAL)) NOTNULL) FROM vt0; -- 0ms;
SELECT NULL FROM t0 WHERE ((((0xffffffffcd1651cc) NOT NULL) IN ((x'9b72' IN ())))); -- 0ms;
SELECT ALL t0.c0 FROM t0, vt0; -- 0ms;
SELECT ALL ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) FROM vt0, t0 WHERE (((((1506996027)IS('ym')))+(x''))); -- 0ms;
SELECT ALL t0.c0 FROM vt0, t0 ORDER BY json_object(((t0.c0) IS TRUE), ((vt0.c0)AND(vt0.c0)));SELECT ALL (- (((t0.c0)GLOB(t0.c0)))) FROM vt0 WHERE (x'');SELECT t0.c0 FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE)OR(CAST(t0.c0 AS BLOB))) FROM t0; -- 0ms;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY ((t0.c0 COLLATE NOCASE)+(((vt0.c0) NOTNULL))); -- 0ms;
SELECT (((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))AND(CAST(t0.c0 AS REAL))))AND(CASE '-315372667'  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(vt0.c0)))OR(t0.c0 COLLATE RTRIM)) FROM vt0, t0 WHERE (x'' COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM t0, vt0 WHERE (CAST(x'' AS TEXT)) GROUP BY ((vt0.c0) ISNULL) COLLATE RTRIM HAVING LIKELY(DISTINCT COUNT(t0.c0)); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL))<=(vt0.c0 COLLATE RTRIM)) FROM t0, vt0 WHERE ((~ (json_extract(NULL, 0.36152463826816417)))) GROUP BY CAST((t0.c0 IN ()) AS BLOB), (((NOT (t0.c0))) NOTNULL), (((t0.c0)<=(vt0.c0)) IN ()) HAVING (((((t0.c0)OR(vt0.c0))))<=((((t0.c0)IS(vt0.c0))))); -- 0ms;
SELECT DISTINCT ((((((((CAST(vt0.c0 AS REAL))AND(CAST(t0.c0 AS INTEGER))))AND((vt0.c0 IN (t0.c0, 'jX')))))OR(MAX(vt0.c0))))OR((vt0.c0 IN ()))) FROM vt0, t0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE (rtreenode((('Oi')IS NOT('0.3616269517163615')), NULL COLLATE BINARY)); -- 0ms;
SELECT (((((((vt0.c0)OR(t0.c0)))OR(vt0.c0))))<=((vt0.c0 COLLATE RTRIM))) FROM t0 WHERE ((((((NULL)) BETWEEN (('5141657')) AND ((x'')))) NOT BETWEEN (CASE WHEN '|8124213235798615451-1671TD' THEN x'c8b7' END) AND (CAST(NULL AS INTEGER))));SELECT ((CAST(vt0.c0 AS REAL)) BETWEEN (CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) ISNULL))) FROM t0, vt0; -- 0ms;
SELECT CUME_DIST() OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((- (vt0.c0)))LIKE(GROUP_CONCAT(t0.c0))) FROM vt0, t0 WHERE (((((('' IN (x'')))AND((('Q6喥CzVU')>>(NULL)))))OR(PRINTF(0.8412698140518724)))); -- 0ms;
SELECT ALL ((vt0.c0)-(vt0.c0)) COLLATE BINARY FROM t0, vt0; -- 0ms;
SELECT ALL x'', ((vt0.c0)+(MIN(t0.c0))), ((((vt0.c0) NOT NULL)) NOT BETWEEN (t0.c0) AND (((t0.c0) NOTNULL))) FROM t0 LIMIT 260310763 OFFSET 1402630174;SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'1c91')) AS INTEGER) FROM t0 WHERE (((CHANGES()) BETWEEN ((((('1827062144')OR(NULL)))AND(x''))) AND (((x'716d') ISNULL))));SELECT ALL ((CAST(t0.c0 AS BLOB))<=((((t0.c0))>((vt0.c0))))) FROM vt0, t0; -- 0ms;
SELECT ((((CAST(t0.c0 AS REAL))AND(((x'') BETWEEN (t0.c0) AND (vt0.c0)))))AND((((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, t0.c0, vt0.c0))))) FROM t0 WHERE ((((((((((x'')AND(-4.9926963E7)))OR(x'91ab')))AND(88643512)))AND(0.7943632462551763)) IN (((NULL)LIKE(NULL)))));SELECT ALL COUNT((+ (vt0.c0))) OVER () FROM vt0, t0 WHERE ((-80380842 IN ()) COLLATE RTRIM); -- 0ms;
SELECT ALL (NOT ((- (vt0.c0)))), (((vt0.c0 IN ()))>(((t0.c0)OR(vt0.c0)))), AVG(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) OVER () FROM t0 WHERE ((((((x'', 0.6559798584449243, '1688894655', NULL, -1.05456982E8)) NOT BETWEEN (('30989843', '1280692443', '6>A', -498634302, 0.6006667337339837)) AND (('-1897650236', 'rk', 0X73e23109, 1444758171, 0.37737380763474815))))&(CASE NULL  WHEN '1271290217' THEN '' WHEN '-153375285' THEN '' WHEN x'' THEN '1506996027' END)));SELECT NULL, (+ (t0.c0)) COLLATE BINARY COLLATE RTRIM, FIRST_VALUE(0Xaf273bf) OVER (), (- (TOTAL(t0.c0))), (((NOT (vt0.c0))) BETWEEN (0.9315999138023339) AND (TYPEOF(t0.c0))) FROM t0, vt0 WHERE (CASE ((((((((0.33148929967290797)OR(0.64532537677637)))OR(NULL)))OR(x'')))AND('ㄉwK\r'))  WHEN ((NULL)=('')) THEN (((('-129396974')AND(NULL)))AND(250019206)) WHEN (x'70b4' IN ()) THEN CASE 0.6332389058679199  WHEN 0X5b4ce63f THEN '0.5080182323187492' END WHEN 'hourskV蒑' COLLATE NOCASE THEN CAST(0.9476475954334157 AS TEXT) ELSE ((x'664a')|('-1281850456')) END); -- 0ms;
SELECT DISTINCT NTH_VALUE(((CAST(vt0.c0 AS INTEGER))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE ((0x1cb71430) IS TRUE)  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN CASE x'd64c'  WHEN '-57603280' THEN vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END) OVER ( ORDER BY ((((vt0.c0)LIKE(vt0.c0)))>>(((t0.c0) IS TRUE))) ASC) FROM vt0 WHERE (CASE CASE NULL  WHEN NULL THEN '' WHEN x'' THEN 0.39315276522639087 WHEN 'oE8\r<ZC>' THEN NULL END  WHEN (0.8381331201578418 IN ()) THEN LIKELIHOOD(x'acaa', 0.9918284692431919) END);SELECT ALL CAST(t0.c0 AS REAL), (((vt0.c0)) NOT BETWEEN ((json(vt0.c0))) AND ((0.702295148968072))), ((HEX(vt0.c0))OR((vt0.c0 IN ()))) FROM vt0 WHERE (0.9528982170813923);SELECT DISTINCT ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)*(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((TYPEOF(vt0.c0))/(CAST(t0.c0 AS NUMERIC))) FROM t0 WHERE ('1e500') GROUP BY vt0.c0;SELECT SUM(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END) COLLATE NOCASE FROM t0 WHERE (DATE(x'866d', ((x'') NOTNULL), ((x'') NOT BETWEEN (NULL) AND ('156839956')), CAST('1040278150' AS REAL), ('' IN ())));SELECT CASE WHEN ((vt0.c0)!=(vt0.c0)) THEN ((t0.c0) ISNULL) ELSE x'' END, COUNT(((vt0.c0)>>(t0.c0))) OVER (), CAST((((vt0.c0)) NOT BETWEEN ((x'0e88')) AND ((vt0.c0))) AS TEXT) FROM t0, vt0 WHERE (((((NOT (0Xffffffffbc54a75a)), ROUND(0x7fffffffffffffff, NULL), CAST(NULL AS TEXT)))>(((+ (0.9735310086517116)), 0.7227301048277349 COLLATE NOCASE, CAST(NULL AS TEXT))))) GROUP BY t0.c0 HAVING CASE WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)+(vt0.c0)) ELSE t0.c0 COLLATE BINARY END; -- 0ms;
SELECT CUME_DIST() OVER ( ORDER BY '0.5457230643150552' ASC  NULLS FIRST RANGE ((((t0.c0 IN ())))>((((((vt0.c0)AND(vt0.c0)))AND(t0.c0))))) PRECEDING) FROM t0 GROUP BY ('' COLLATE BINARY IN ()); -- 0ms;
SELECT DISTINCT x'' FROM t0, vt0; -- 0ms;
SELECT ((((t0.c0) IS TRUE))>>((t0.c0 IN ()))) FROM t0 WHERE ((- ('[' COLLATE RTRIM))); -- 0ms;
SELECT ((NULL)<<(((((t0.c0)AND(t0.c0)))OR(vt0.c0)))) FROM vt0;SELECT ALL TOTAL(((x'') NOT BETWEEN (vt0.c0) AND (t0.c0))) OVER (), (((((vt0.c0)&(t0.c0)), t0.c0, vt0.c0))<=((NULL, NULL, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))), NTH_VALUE(CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN '' ELSE (('')|('-2072803696')) END, CASE t0.c0  WHEN (vt0.c0 IN ()) THEN ((t0.c0) IS TRUE) WHEN (- (t0.c0)) THEN (NOT (t0.c0)) WHEN ((vt0.c0)<<(t0.c0)) THEN ((t0.c0)>(vt0.c0)) END) OVER ( ORDER BY (+ (((vt0.c0)*(t0.c0)))) DESC  NULLS LAST) FROM vt0, t0 WHERE (((CASE 'EMf'  WHEN NULL THEN 0X7c61e906 END) BETWEEN (0.2616926662125245 COLLATE RTRIM) AND ((NOT (0.40746367755937607))))); -- 0ms;
SELECT DISTINCT ((((t0.c0)||(t0.c0))) NOT BETWEEN (TRIM(-1111825293)) AND ((((t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, t0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, vt0.c0, t0.c0, vt0.c0))))), GROUP_CONCAT(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0))), MIN(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) FROM t0, vt0; -- 0ms;
SELECT (((((t0.c0 IN (t0.c0)))AND(SUM(vt0.c0))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) FROM vt0, t0 WHERE ((((NULL IN ())) BETWEEN (('K' IN ())) AND ((((('yo>Fl)w]')AND('q6喥czvu')))AND(-315372667))))); -- 0ms;
SELECT ((((CAST(vt0.c0 AS REAL))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS REAL))), ((((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN (t0.c0)))))AND((+ (vt0.c0)))))AND(x'f2f8')), (((((vt0.c0) BETWEEN (0.7688076945991237) AND (vt0.c0))))>=((((t0.c0) IS TRUE)))) FROM t0 WHERE (((NOT (NULL)) IN ()));SELECT DISTINCT CAST(t0.c0 AS INTEGER) COLLATE RTRIM FROM vt0 ORDER BY LIKELIHOOD(0.8519342761900367, 0.43532252479503775) DESC;SELECT DISTINCT ((vt0.c0)IS NOT(t0.c0)) COLLATE BINARY FROM vt0 WHERE (((((NULL COLLATE NOCASE)AND(0Xffffffffc93004e2)))AND(((0.6415654458463032) NOT BETWEEN (NULL) AND ('795888323')))));SELECT (((CAST(t0.c0 AS NUMERIC)))>(((t0.c0 IN ())))), (((((((vt0.c0)OR('\+F[B襉O}Q')))AND(t0.c0))))>=(((vt0.c0 IN ())))), CASE WHEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(t0.c0 AS TEXT) ELSE t0.c0 END FROM t0 WHERE ((((('-1463759691') IS FALSE)) BETWEEN (CASE WHEN 0xffffffff97d8a7ba THEN NULL END) AND (((NULL)=(0.2129116876698418)))));SELECT DISTINCT AVG(CASE WHEN t0.c0 THEN '-827673018' END) FROM t0; -- 0ms;
SELECT ALL COUNT(*) OVER ( ORDER BY CAST((vt0.c0 IN ()) AS INTEGER), STRFTIME(((((t0.c0)OR(x'946a')))OR(vt0.c0)), ((1245123328) NOT NULL), ((t0.c0)IS NOT(vt0.c0))) DESC  NULLS FIRST, LOWER(DISTINCT x'3023')  NULLS LAST), '鷢r(kI眆', t0.c0, (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()), ((((t0.c0)-(t0.c0))) BETWEEN ((((vt0.c0))==((t0.c0)))) AND (NULL)) FROM t0, vt0 WHERE (0.756656742857837) GROUP BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0)*(t0.c0))) AND (0.42150601308163116)), (+ (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))), (((vt0.c0))<=((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))); -- 0ms;
SELECT ALL ((t0.c0 COLLATE BINARY) BETWEEN ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND ((- (t0.c0)))), (CAST(t0.c0 AS NUMERIC) IN ()), TOTAL(((t0.c0) IS FALSE)) OVER () FROM vt0, t0 WHERE (((NULL COLLATE BINARY) NOT BETWEEN ((('1313572504')/(-817826918))) AND (((-864559388) IS FALSE)))); -- 0ms;
SELECT 0.8421517098447097 FROM t0, vt0; -- 0ms;
SELECT ((NULLIF(vt0.c0, t0.c0)) IS TRUE) FROM t0 LIMIT 1246253801;SELECT DISTINCT (((vt0.c0) ISNULL) IN ()) FROM t0 WHERE ('0 '); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((-752540079)OR(0.27353320363793077)))AND('-1925095138')))OR(0.7338816851658903)))AND(x''))) ISNULL)) LIMIT -1353001172 OFFSET -1585009896; -- 0ms;
SELECT TOTAL(0.35502510994521175) FROM t0 WHERE ((((((((0xffffffffda693e5b)AND('1632404415')))OR(NULL))))=((((((6.56636456E8)OR(0.031585201598350654)))AND(NULL)))))); -- 0ms;
SELECT ALL (((vt0.c0 IN ()))GLOB(json_valid(t0.c0))) FROM vt0, t0 LIMIT -552074937; -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))||(((((t0.c0)AND(vt0.c0)))OR(t0.c0)))) FROM vt0 WHERE (CAST((NULL IN (x'', x'')) AS BLOB)) LIMIT -1925095138 OFFSET 1944203529;SELECT ALL TOTAL(((vt0.c0)-(t0.c0))) OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((COUNT(t0.c0))>(t0.c0)) FROM vt0, t0 WHERE (LOWER((('1034210353')<=(0.9867713272055295)))) LIMIT 774475594 OFFSET 11683668; -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN 'Q%n' WHEN x'dcad' THEN t0.c0 END, ((vt0.c0)/(x'')), vt0.c0 COLLATE RTRIM))!=(((+ (t0.c0)), ((vt0.c0)/(vt0.c0)), (((t0.c0))<=((t0.c0)))))) FROM vt0;SELECT ((((((t0.c0)==(t0.c0)))AND(((vt0.c0) NOTNULL))))AND((t0.c0 IN ()))) FROM vt0 ORDER BY ((SQLITE_COMPILEOPTION_USED(t0.c0))<>(((vt0.c0)<(t0.c0)))), t0.c0;SELECT ALL ((t0.c0 COLLATE BINARY)/((t0.c0 IN ()))) FROM vt0, t0 LIMIT 345771009; -- 0ms;
SELECT DISTINCT AVG((((NULL)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) OVER () FROM t0 ORDER BY (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ()) ASC  NULLS LAST;SELECT ALL (- ((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((0.1380084321931121, t0.c0, vt0.c0))))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((((t0.c0))<((t0.c0)))) NOT BETWEEN (CHAR(t0.c0)) AND (((t0.c0) IS FALSE)))) OVER ( ORDER BY CASE WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN ((('')) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) WHEN ((vt0.c0)+(t0.c0)) THEN (~ (t0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c0)<<(vt0.c0)) END ASC) FROM t0;SELECT DISTINCT ((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))|(NULL)) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS INTEGER) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT RANK() OVER (), ((((((vt0.c0)IS NOT(t0.c0)))OR((~ (t0.c0)))))OR(t0.c0)), CASE vt0.c0  WHEN ((vt0.c0)>(vt0.c0)) THEN ((t0.c0) NOTNULL) WHEN '1506996027' THEN ((vt0.c0)LIKE('-1111825293')) WHEN vt0.c0 COLLATE BINARY THEN ((t0.c0) IS TRUE) ELSE '-1998581866' END FROM vt0, t0 WHERE (CAST(((NULL) IS FALSE) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((('0.6572097576453665')AND(0.7422745757655215))) IS FALSE) FROM vt0, t0 WHERE ((- ('/ﴂ'))); -- 0ms;
SELECT (((CAST(vt0.c0 AS BLOB)))=((SUM(t0.c0)))) FROM t0, vt0; -- 0ms;
SELECT ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN '1304103263' END)<<(((vt0.c0) NOT BETWEEN (NULL) AND (t0.c0)))) FROM vt0;SELECT CASE WHEN t0.c0 THEN x'd123' END, (+ (vt0.c0 COLLATE NOCASE)), ((((((((CAST(vt0.c0 AS REAL))AND(((t0.c0) ISNULL))))AND((t0.c0 IN ()))))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)) FROM t0, vt0 WHERE ((+ ((- ('674006686'))))) GROUP BY (- (CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)); -- 0ms;
SELECT DISTINCT IFNULL(((0.03305948923643687) NOT BETWEEN ('972712386') AND (vt0.c0)), COUNT(*)), '-1336117149', (((t0.c0, vt0.c0, vt0.c0, NULL, vt0.c0)) BETWEEN (((((vt0.c0))>(('717145640'))), (vt0.c0 IN ()), (((t0.c0))<((t0.c0))), ((vt0.c0)<=(vt0.c0)), '*m')) AND ((ABS(t0.c0), (((vt0.c0))<>((t0.c0))), ((t0.c0) BETWEEN (vt0.c0) AND ('-1456918248')), '^f', vt0.c0 COLLATE BINARY))) FROM vt0 WHERE ((((NOT (733067843))) NOT BETWEEN (((x'') NOT NULL)) AND (1132622547)));SELECT ALL MAX(MAX((((('1820023294')OR(t0.c0)))AND(t0.c0)))) FROM t0;SELECT ALL ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))%(CAST(t0.c0 AS TEXT))) FROM vt0 WHERE ((((((('') NOT NULL))OR(NULL)))OR((((('896975942')OR(0.08889535876184984)))OR(0Xffffffffbc16714f)))));SELECT DISTINCT CASE MAX(t0.c0)  WHEN (- (t0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (+ (vt0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END WHEN vt0.c0 THEN (- (t0.c0)) END FROM t0;SELECT ALL CAST(('>_' IN ()) AS BLOB) FROM vt0 WHERE (((((x'') NOT BETWEEN (NULL) AND ('|8124213235798615451-1671TD')))&(((((0.8337179510582607)OR(NULL)))AND(''))))); -- 0ms;
SELECT ALL (((((t0.c0) IS FALSE)))>=((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))), '', ((vt0.c0 COLLATE RTRIM)+(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END)) FROM vt0, t0 ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END END DESC, CASE WHEN ((t0.c0)<=(t0.c0)) THEN ((t0.c0) NOTNULL) WHEN (((((((('5141657')OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN t0.c0 COLLATE RTRIM ELSE t0.c0 END  NULLS LAST; -- 0ms;
SELECT DISTINCT (NOT (json_patch(vt0.c0, vt0.c0))) FROM t0 WHERE ((((NOT (x'1397')))LIKE((x'6d96ddb7' IN ()))));SELECT DISTINCT CAST((((vt0.c0, t0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC) FROM t0 NATURAL JOIN vt0 LIMIT 2080206821; -- 0ms;
SELECT ALL '1585375655' FROM vt0 WHERE ((((- (NULL))) NOT BETWEEN (CAST('' AS NUMERIC)) AND ((((-715160431))<=(('')))))); -- 0ms;
SELECT DISTINCT DATETIME(((((t0.c0)OR(t0.c0)))OR(vt0.c0)), 'f+0\hE]', ROUND(vt0.c0, vt0.c0)) FROM t0;SELECT ((((((((CASE vt0.c0  WHEN t0.c0 THEN '0.44808891711236754' END)AND(t0.c0 COLLATE NOCASE)))AND(vt0.c0)))OR('m#Oyb')))OR(((vt0.c0)GLOB(t0.c0)))) FROM t0, vt0; -- 0ms;
SELECT ALL highlight((((x'')) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), CAST(t0.c0 AS INTEGER), ((vt0.c0) NOT BETWEEN (t0.c0) AND (x'f35e7c82')), vt0.c0) FROM t0, vt0;SELECT ALL SUM(CASE WHEN NULL THEN vt0.c0 END) OVER (), ((((t0.c0) IS FALSE))-(((NULL)AND(t0.c0)))), ((NULL) NOT NULL), vt0.c0, x'338f' COLLATE NOCASE FROM t0, vt0 WHERE (((((0.8808940314261855)<<('0.8703912306751781')))!=(CASE WHEN 0xffffffff91b13770 THEN x'' WHEN '	AyK>' THEN '' WHEN x'' THEN '466186116' END))) GROUP BY (UNLIKELY(t0.c0) IN ()) HAVING (json_array_length(vt0.c0) IN (vt0.c0)); -- 0ms;
SELECT ((t0.c0)IS NOT(TRIM(DISTINCT vt0.c0))) FROM t0 WHERE ((~ (CAST(x'ae3e' AS TEXT))));SELECT ALL ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE, MAX(((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(t0.c0))) COLLATE BINARY, COUNT(t0.c0), NULL, (((((vt0.c0))=((t0.c0)))) IS TRUE) FROM t0 WHERE (((((NULL)AND(-8.75134004E8 COLLATE RTRIM)))AND((- (x'')))));SELECT ALL ((LOWER(t0.c0)) NOTNULL) FROM vt0, t0 WHERE ((('-688641810')|(0Xffffffffc9153353)) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE)) BETWEEN (MIN(t0.c0)) AND (((vt0.c0)%(t0.c0)))) FROM vt0 GROUP BY (((('891749158')OR(SQLITE_VERSION())))AND(CAST(t0.c0 AS INTEGER))) HAVING (((- (vt0.c0)))LIKE(((NULL) BETWEEN (vt0.c0) AND (t0.c0)))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN NULL WHEN LIKELIHOOD(NULL, 0.9439916861976241) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)&(t0.c0)) THEN (t0.c0 IN (vt0.c0)) ELSE ((t0.c0)LIKE(t0.c0)) END  NULLS FIRST;SELECT ALL NULLIF(DISTINCT t0.c0, ((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0))) FROM t0;SELECT DISTINCT ((((vt0.c0 COLLATE BINARY)OR((- (t0.c0)))))AND(((vt0.c0)>>(vt0.c0)))), (((('0.9766730988339004')==(t0.c0))) BETWEEN (MIN(t0.c0)) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))), (vt0.c0 IN ()) COLLATE NOCASE FROM vt0;SELECT DISTINCT ((UPPER(vt0.c0))<=((vt0.c0 IN (NULL, t0.c0)))) FROM t0 GROUP BY (((('4Y''Y''k蠤')OR(((vt0.c0)GLOB(t0.c0)))))OR((t0.c0 IN ()))), '-1325726698', (((~ (t0.c0))) NOT BETWEEN (COALESCE(DISTINCT t0.c0, t0.c0)) AND (vt0.c0));SELECT ALL (GROUP_CONCAT(vt0.c0) IN (((((t0.c0)OR(vt0.c0)))OR(vt0.c0)), t0.c0 COLLATE BINARY)) FROM vt0 UNION SELECT ALL t0.c0 COLLATE BINARY FROM t0, vt0;SELECT DISTINCT AVG(CAST(vt0.c0 AS INTEGER)) FROM t0, vt0 WHERE ((+ (('愞/\nTC಴\nt' IN ())))); -- 0ms;
SELECT DISTINCT TOTAL(((((vt0.c0)OR(t0.c0)))AND(vt0.c0))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS INTEGER) FROM t0, vt0 WHERE ('1820023294'); -- 0ms;
SELECT LIKELIHOOD(t0.c0 COLLATE RTRIM, 0.013516765834286404), (- (vt0.c0)), (((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END)) AND ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) FROM vt0, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((t0.c0)<=(vt0.c0)))||(json_extract(vt0.c0, t0.c0))) FROM vt0;SELECT ALL ((vt0.c0) BETWEEN (((t0.c0)<=(t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))), ((NULL)<(((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, '*(~m͚|	F', ((((ABS(DISTINCT vt0.c0))OR(GROUP_CONCAT(t0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT LAST_VALUE((~ (vt0.c0 COLLATE NOCASE))) OVER ( ORDER BY (+ ((('1430629490')==(vt0.c0)))) DESC, '1034516083'  NULLS FIRST), ((((t0.c0)!=(vt0.c0))) NOT NULL), (((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1781388814'))))OR((((-1.226197391E9, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t0.c0))))) FROM vt0 WHERE (JULIANDAY(TYPEOF(1.56839956E8), ((NULL)/(0.8932061219077393)), ('' IN (0.4065629858134202))));SELECT ALL (((t0.c0)) BETWEEN ((vt0.c0)) AND ((0.017057842769135356))) COLLATE NOCASE FROM t0 WHERE (CASE ((-1167136723) NOT BETWEEN (NULL) AND (''))  WHEN x'42ac' COLLATE BINARY THEN ((x'5743')|(NULL)) END);SELECT DISTINCT ((((vt0.c0)!=(0.7608619638954025))) NOT NULL), (((- (vt0.c0)))OR(x'')), CAST(((t0.c0)>=(t0.c0)) AS INTEGER) FROM vt0 WHERE (((CASE WHEN NULL THEN '' WHEN '0.0' THEN 'AIlR_X' WHEN '633733676' THEN '' WHEN x'1156' THEN 0.6575551480543428 WHEN NULL THEN 0.3578593209173643 END)/(LOWER(x''))));SELECT DISTINCT TOTAL(CAST(vt0.c0 AS REAL)) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS), CASE WHEN MIN(vt0.c0) THEN '-2079911744' WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN MAX(t0.c0) WHEN ((NULL) BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0, vt0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))) WHEN (((t0.c0, t0.c0, vt0.c0)) BETWEEN ((-9223372036854775808, t0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t0.c0))) THEN (((('-105456982')OR(0.9022246184945565)))AND(vt0.c0)) WHEN '-1493148706' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END, t0.c0 FROM vt0, t0 WHERE (((((((((2.63854824E8 COLLATE NOCASE)OR((- ('263854824')))))OR(((778990660) IS TRUE))))OR(CASE WHEN 1.56839956E8 THEN x'' WHEN 0.7015327902941135 THEN '1672814191' WHEN 503610657 THEN x'' ELSE -1012762968 END)))OR((((0x25c6022c)) BETWEEN (('306686925')) AND (('Jl')))))); -- 0ms;
SELECT ALL ((((t0.c0) IS FALSE)) NOT BETWEEN (((((t0.c0)AND(t0.c0)))OR(vt0.c0))) AND (CAST(t0.c0 AS REAL))), (((((t0.c0))<=((0.09655559787709844)))) IS FALSE), (((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0)|(vt0.c0))))), ((((vt0.c0)AND((- (t0.c0)))))OR((~ (vt0.c0)))), t0.c0 FROM t0, vt0 WHERE ((((((('410179503') NOT BETWEEN (0Xffffffffbe1aec4a) AND ('OGW^WAND')))OR(((((x'')OR('9)')))OR('-1538897262')))))OR(NULL))) ORDER BY SQLITE_COMPILEOPTION_GET(x'') LIMIT 823447763; -- 1ms;
SELECT ((((vt0.c0)&(vt0.c0)))<<(t0.c0)) FROM t0;SELECT '', ((vt0.c0) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (UPPER(vt0.c0))), ((((t0.c0) ISNULL))LIKE(((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(NULL)))AND(t0.c0)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE CASE t0.c0  WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c0)<(vt0.c0)) ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END) OVER () FROM vt0, t0 WHERE (CAST(CASE WHEN 0Xffffffffbd627a29 THEN NULL ELSE '633733676' END AS INTEGER)); -- 0ms;
SELECT ALL UPPER(t0.c0 COLLATE RTRIM) FROM vt0 WHERE (CAST(json_insert(x'', x'0419', NULL, -531961411, 0x601b3322, 0.8250453475013377, NULL) AS TEXT));SELECT (rtreenode(t0.c0, t0.c0) IN ()), COUNT(*) COLLATE BINARY, CAST(TOTAL(t0.c0) AS TEXT) FROM t0, vt0; -- 0ms;
SELECT (((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT '-738478104' FROM t0, vt0; -- 0ms;
SELECT LEAD(((vt0.c0)AND(CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (t0.c0 COLLATE BINARY IN ()), (NOT (NULL))) OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS NUMERIC) FROM t0 WHERE (CAST(json_extract(0.2941648126209824, '_B') AS INTEGER));SELECT DISTINCT ((vt0.c0)<<((NOT (vt0.c0)))) FROM t0 WHERE (LIKELIHOOD(DISTINCT ((0.05129764015906424) NOT BETWEEN ('jgpz ^6') AND (NULL)), 0.12149251768168856)) ORDER BY (((~ (vt0.c0))) IS TRUE) DESC  NULLS LAST;SELECT ALL CAST('1314632667' AS REAL) FROM t0 WHERE (((((0.5401823436186233)+(NULL))) IS TRUE)); -- 0ms;
SELECT (((~ (t0.c0)))+(TRIM(vt0.c0))), ((x'') NOTNULL), ((t0.c0 COLLATE NOCASE) ISNULL) FROM t0;SELECT DISTINCT ((((((t0.c0) IS TRUE))OR(((t0.c0)IS NOT(vt0.c0)))))OR((vt0.c0 IN ()))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT AVG(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM t0 NOT INDEXED, vt0 WHERE ((((('') BETWEEN ('') AND (0.048746686011239104)))<=(TRIM(0x6bd57f27)))); -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN ((vt0.c0)-(x'')) THEN NULL END FROM vt0; -- 0ms;
SELECT ((COUNT(*))>(CAST(t0.c0 AS REAL))) FROM vt0 WHERE (NULLIF(((NULL)||(0X299b9ed4)), (- (x''))));SELECT ALL DENSE_RANK() OVER () FROM t0, vt0 WHERE ((+ (((NULL) BETWEEN ('NOW') AND (''))))); -- 0ms;
SELECT (((((vt0.c0))!=((t0.c0)))) BETWEEN (((0x5d224d82) NOT BETWEEN (vt0.c0) AND (t0.c0))) AND (((t0.c0)>>(t0.c0)))), AVG(((vt0.c0)<=(t0.c0))), ((('')>=(vt0.c0)) IN (((t0.c0) IS TRUE))) FROM vt0, t0 WHERE (((((('523618222', NULL, 0.05856018542279162))=(('v~*', NULL, '1569713736'))))<=(((x'53d3') NOT BETWEEN (-1977479966) AND (933190234))))) GROUP BY ((x'')/('.QC0')), (- (LIKELY(DISTINCT x''))), 'eu>HH'; -- 1ms;
SELECT ALL t0.c0 FROM t0, vt0 WHERE (CASE WHEN ((((x'')AND(x'6549')))AND(NULL)) THEN ((((0.3774562412506871)AND(0X9098d8b)))OR(0.7992447214280132)) ELSE ((x'e6b05210')||(0.6327597288763986)) END) LIMIT -837587647; -- 0ms;
SELECT ALL CASE ((t0.c0) NOTNULL)  WHEN CAST(t0.c0 AS INTEGER) THEN CAST(vt0.c0 AS NUMERIC) END, TOTAL(AVG(t0.c0) COLLATE RTRIM), CASE WHEN ROUND(vt0.c0, t0.c0) THEN JULIANDAY(t0.c0, vt0.c0, 0.2067852912764574, vt0.c0, 0x2d47dcf) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END FROM vt0, t0;SELECT DISTINCT (((((x'', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, x'', t0.c0)))) BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(vt0.c0))) AND (COUNT(*))) FROM vt0 LEFT OUTER JOIN t0 ON (NOT (vt0.c0)) WHERE ((- (((((x'')AND(x'')))OR(0Xffffffff8177d114))))); -- 0ms;
SELECT (+ (NULL)) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT('i[-n') FROM vt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) END FROM vt0, t0 WHERE (((0xffffffff8e235bbb) IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) THEN ((vt0.c0) NOTNULL) ELSE CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.2785221015448155 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END END, ((((('0.07799031133851797')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(t0.c0))) AND (((vt0.c0)>(vt0.c0)))), CAST(((('E!}O[', vt0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c0))) AS INTEGER) FROM vt0 WHERE (CAST((~ (x'')) AS NUMERIC));SELECT DISTINCT (((((((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND (('2^'))))OR(json_object(vt0.c0, NULL, vt0.c0, t0.c0))))OR(0.3434501928955679)))OR(UPPER(vt0.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), TRIM(((t0.c0)IS NOT(t0.c0))), CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC), ((CAST(t0.c0 AS INTEGER)) NOT NULL), CAST(((t0.c0) IS FALSE) AS REAL) FROM vt0, t0 WHERE (CASE ((((NULL)AND('-1896451057')))AND(0.8482064360941204))  WHEN (('-1776244500')||(-1222747067)) THEN -1407639730 COLLATE NOCASE WHEN (((0.7266348618702937))!=((NULL))) THEN '-1232734445' WHEN x'' COLLATE RTRIM THEN ((NULL)GLOB(x'5337c2ee')) END); -- 0ms;
SELECT (NOT (((t0.c0) NOT BETWEEN (x'') AND (t0.c0)))), ((ABS(DISTINCT vt0.c0))IS(vt0.c0 COLLATE BINARY)), CUME_DIST() OVER () FROM vt0, t0 ORDER BY (- (vt0.c0 COLLATE RTRIM)) ASC; -- 0ms;
SELECT DISTINCT ((((LIKELY(DISTINCT vt0.c0))AND(((vt0.c0)>=(t0.c0)))))OR(COUNT(vt0.c0))) FROM t0;SELECT DISTINCT ((((vt0.c0))<=((vt0.c0))) IN ()), vt0.c0, (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(CAST(vt0.c0 AS BLOB))))AND(t0.c0)) FROM vt0 WHERE ((((((((('Z*x.Dq')OR(x'')))AND(0.2824340240426384)))OR('-2072197909')))AND('-866256446')) COLLATE RTRIM);SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 WHERE ((((CAST('860773604' AS BLOB), (('') NOTNULL), ((x'2a14')||(x''))))<>((0.4146695968699736, ((x'')<<('')), CASE WHEN 0.528716716082932 THEN 0Xe4deed2 WHEN x'' THEN x'' WHEN x'd5d2' THEN 876838491 ELSE x'' END)))); -- 0ms;
SELECT DISTINCT ((((((0.2333610755907357)>(t0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (0.3851520781966844)))))AND(MAX(vt0.c0))), DATE(((t0.c0)>>(0.04267227375801286)), (+ (vt0.c0)), (NOT (667590834))), (((0.8506233667471385))>=((vt0.c0))) FROM t0, vt0; -- 1ms;
SELECT DISTINCT ((((t0.c0)%(t0.c0))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (0xfffffffff7e8f3ed)) FROM vt0;SELECT (MAX(vt0.c0) IN ()), LAST_VALUE(CASE WHEN (vt0.c0 IN (625353134)) THEN vt0.c0 COLLATE NOCASE ELSE (((t0.c0))<(('4k.1'))) END) OVER ( ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS INTEGER) DESC), SUM(t0.c0) OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT (HEX(NULL) IN ()) FROM t0 WHERE (((((NULL)-('ym'))) IS TRUE)); -- 2ms;
SELECT DISTINCT (~ (((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))), COUNT(*) OVER (), (~ (vt0.c0)) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c0)!=(t0.c0)) IN ()) ORDER BY 410179503 COLLATE RTRIM, (((- ('!\r')))/(((vt0.c0)AND(t0.c0)))) ASC;SELECT DISTINCT json_insert(AVG(t0.c0), vt0.c0, (((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) ISNULL)) FROM vt0, t0 WHERE (((0.03344419447012792)/(x'b69f' COLLATE RTRIM))); -- 0ms;
SELECT (((t0.c0)LIKE(t0.c0)) IN ()) FROM vt0 WHERE (CAST((NOT (x'')) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)OR(((t0.c0)IS(t0.c0)))))OR(CAST(t0.c0 AS BLOB))), MIN((((vt0.c0))<((vt0.c0)))), ((((t0.c0) IS FALSE))>=(((vt0.c0)LIKE(vt0.c0)))) FROM t0, vt0 WHERE (CAST((((0.9632007794457538))=(('1518534207'))) AS NUMERIC)); -- 0ms;
SELECT ALL CAST(LIKE(t0.c0, vt0.c0, '5') AS INTEGER) FROM vt0;SELECT ALL DENSE_RANK() OVER ( RANGE (((((vt0.c0))<=((t0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END) AND (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) PRECEDING) FROM vt0;SELECT DISTINCT ((COUNT(*))IS NOT((0.36039984176833073 IN ()))) FROM t0 WHERE ((((('[H')==(x'533f')))%(((x'8ee1007b') NOT BETWEEN (NULL) AND (''))))) ORDER BY ((((vt0.c0)IS NOT(t0.c0)))*(t0.c0 COLLATE BINARY)), (((t0.c0)/(vt0.c0)) IN ()) DESC  NULLS FIRST;SELECT DISTINCT (((vt0.c0 IN ())) NOT NULL) FROM t0, vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((vt0.c0 IN (((vt0.c0)|(vt0.c0)), ((('')) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) OVER () FROM t0, vt0 WHERE (((('')) NOT BETWEEN ((0x4f6d9e73 COLLATE RTRIM)) AND (((((('-715160431')AND(0.5744992411482127)))OR(x'')))))) ORDER BY x''  NULLS FIRST; -- 0ms;
SELECT DISTINCT (- (CAST(t0.c0 AS NUMERIC))), CASE CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END  WHEN (t0.c0 IN ()) THEN PRINTF(t0.c0) ELSE ((t0.c0) NOTNULL) END, CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) FROM t0, vt0 WHERE ((((x'')) NOT BETWEEN ((4.10179503E8)) AND ((0.7141127713178932))) COLLATE BINARY) GROUP BY CAST(((vt0.c0) BETWEEN ('-49926963') AND (t0.c0)) AS INTEGER); -- 0ms;
SELECT DISTINCT CAST(((t0.c0) NOT NULL) AS REAL) FROM vt0, t0 WHERE (((((x'7831')OR(((0.30203236578514825) ISNULL))))AND(CASE x''  WHEN NULL THEN '-1974470302' ELSE 435309445 END))); -- 0ms;
SELECT ALL ((NULL) IS TRUE) FROM t0; -- 0ms;
SELECT CASE WHEN x'' THEN NULL ELSE vt0.c0 END COLLATE NOCASE, (((~ (NULL)))>(CAST(t0.c0 AS TEXT))), (((vt0.c0 IN ()))>(json_array_length(t0.c0, t0.c0))) FROM vt0;SELECT (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))&(TRIM(DISTINCT t0.c0, vt0.c0))) FROM vt0 WHERE ((((((x'')) NOT BETWEEN ((x'')) AND ((0.7235320596319981))))>=(((0.4361459332640607)||(x'')))));SELECT SUM((t0.c0 IN ())) OVER () FROM t0 WHERE (CASE WHEN ((((((((NULL)OR(NULL)))OR(NULL)))OR('-290037638')))OR('1871208203')) THEN ((NULL)/(x'f07a7f53')) ELSE CASE WHEN 'yW<Ȭ' THEN 0.3547182837575036 ELSE NULL END END) ORDER BY UPPER(CAST(t0.c0 AS INTEGER))  NULLS LAST; -- 0ms;
SELECT QUOTE(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN '''첵EmV혎뾚' THEN t0.c0 END) FROM vt0;SELECT SQLITE_VERSION(), CAST((+ (vt0.c0)) AS BLOB), COUNT(*) OVER () FROM t0, vt0 UNION ALL SELECT DISTINCT CASE vt0.c0  WHEN (((t0.c0))>=((vt0.c0))) THEN ((1.314632667E9) NOTNULL) ELSE CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END END, ((UPPER(DISTINCT t0.c0)) NOT BETWEEN ('523618222') AND ((NOT (t0.c0)))), ((t0.c0) NOTNULL) COLLATE RTRIM FROM vt0, t0 WHERE ((~ (((((NULL)OR('i\n~BC,')))OR('\nE'))))); -- 0ms;
SELECT ALL ((CAST(t0.c0 AS TEXT))GLOB(((vt0.c0) ISNULL))) FROM t0 WHERE ((x'' IN ()));SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END AS REAL) FROM vt0 NOT INDEXED, t0 WHERE ((((('984583270', '', '466186116')) BETWEEN (('RUx+%', 0.3574187958914229, 594943703)) AND ((6.49739219E8, '-738478104', NULL))) IN ())); -- 0ms;
SELECT (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)) FROM vt0, t0; -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((CAST(vt0.c0 AS NUMERIC)))) FROM vt0, t0 WHERE (CAST(((NULL)IS(0.4942914603401698)) AS BLOB)); -- 0ms;
SELECT ALL COUNT(*), (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((TRIM(t0.c0, t0.c0)))), (+ ((x'' IN (t0.c0)))), ((((vt0.c0)OR(vt0.c0 COLLATE RTRIM)))OR(((t0.c0)>=(vt0.c0)))), (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND((NOT (x'')))))OR(CAST(vt0.c0 AS INTEGER))) FROM vt0, t0 WHERE ((CAST(0.5607954206556931 AS NUMERIC) IN ())); -- 0ms;
SELECT DISTINCT (~ (RTRIM(vt0.c0))) FROM vt0 WHERE (((((x'')LIKE(x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))%(vt0.c0)) FROM vt0, t0 GROUP BY (((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB))) AND ((vt0.c0 COLLATE RTRIM))) ORDER BY (((((t0.c0) NOT NULL)))>((((vt0.c0)%(t0.c0))))) DESC  NULLS FIRST, (((vt0.c0)<<(vt0.c0)) IN (((vt0.c0) IS TRUE), x''))  NULLS FIRST; -- 0ms;
SELECT ((((COALESCE(DISTINCT t0.c0, vt0.c0, t0.c0, t0.c0))OR((vt0.c0 IN ()))))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))) FROM t0 WHERE (((((x'') BETWEEN (x'') AND (x'1811')))*((((0.07799031133851797))>=(('5141657')))))) LIMIT 33092567 OFFSET 798773877;SELECT DISTINCT NULL COLLATE NOCASE COLLATE BINARY FROM vt0 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT AVG((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) OVER (), UPPER(DISTINCT t0.c0), ((((vt0.c0) NOT NULL)) NOT NULL) FROM vt0, t0; -- 0ms;
SELECT LIKELY(DISTINCT ((t0.c0)=(vt0.c0))), (CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))), NTH_VALUE((NOT (((vt0.c0) IS FALSE))), (((- (vt0.c0))) ISNULL)) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0 WHERE (-3.15372667E8);SELECT '吢' FROM vt0 WHERE ('0.9520266746558017'); -- 0ms;
SELECT DISTINCT ((((CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)OR(COUNT(vt0.c0))))AND(6.33733676E8)) FROM t0, vt0 WHERE (((((0.981982829739936) NOT BETWEEN (0.4240363899469969) AND ('0.8250453475013377'))) NOT BETWEEN (((0.9378451880171995)LIKE(x''))) AND (((NULL) NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS TEXT) FROM t0;SELECT LEAD((((t0.c0)>>(t0.c0)) IN (t0.c0)), ((((t0.c0))>((t0.c0))) IN (t0.c0)), UNLIKELY(DISTINCT t0.c0 COLLATE BINARY)) OVER () FROM t0 WHERE (json_object('-1925770158', UPPER(0X54897b8))); -- 0ms;
SELECT ALL ((((t0.c0)%(vt0.c0)))OR(t0.c0 COLLATE NOCASE)) FROM t0 ORDER BY ((((vt0.c0)IS NOT(t0.c0)))<<(SQLITE_COMPILEOPTION_GET(vt0.c0)))  NULLS FIRST;SELECT ALL ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((((vt0.c0, vt0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, x'b475', vt0.c0)))) AND (UPPER(t0.c0))), ((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (((t0.c0)+(t0.c0)))), SUM(0.7676874469625693) FILTER(WHERE (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) COLLATE NOCASE) OVER ( ORDER BY CAST('Zm|園h' AS REAL) DESC) FROM t0, vt0 WHERE ((((NULL)) BETWEEN ((x'511e')) AND ((x''))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 LIMIT -715160431; -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL) FROM t0 WHERE (CAST(NULL AS BLOB) COLLATE NOCASE) ORDER BY (((t0.c0)>(t0.c0)) IN ()) ASC, (((((((((((((~ (vt0.c0)))AND(((t0.c0)%(t0.c0)))))OR((+ (vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(NULL)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN 0.7511598826311702 END)) LIMIT -1538897262;SELECT DISTINCT (((((((t0.c0)OR(vt0.c0)))AND(t0.c0)), SUM(vt0.c0), ((0Xffffffffed482fc0)/(0.28296554857832357)), ((t0.c0) NOT BETWEEN (NULL) AND (vt0.c0)), ((vt0.c0)%(vt0.c0))))>((LTRIM(vt0.c0), ((vt0.c0)>=(0.8274787060317061)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)), 0.44280492630698964))) FROM vt0, t0 GROUP BY (((vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ())))) HAVING ((((t0.c0) NOT NULL)) NOT BETWEEN (((t0.c0) ISNULL)) AND (((vt0.c0) NOT NULL))); -- 0ms;
SELECT ALL (((t0.c0)-(t0.c0)) IN ()) FROM t0, vt0 WHERE ((((('')OR(x'')))AND(NULL)) COLLATE RTRIM) GROUP BY (('1154467912') BETWEEN ('-243413075') AND ('u')), (NOT (((vt0.c0) IS TRUE))), (t0.c0 IN ()) COLLATE BINARY; -- 0ms;
SELECT DISTINCT CASE WHEN (t0.c0 IN ()) THEN t0.c0 ELSE ((vt0.c0)IS NOT(t0.c0)) END, ((((vt0.c0 IN (t0.c0, vt0.c0))))!=(((- (t0.c0))))), t0.c0, ((NULL)IS(NULL)), ((((vt0.c0)<(vt0.c0)))IS(((NULL)LIKE(t0.c0)))) FROM t0 ORDER BY (t0.c0 COLLATE NOCASE IN ((((vt0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))), ((t0.c0)%(vt0.c0)))) DESC  NULLS FIRST;SELECT t0.c0, (((- (vt0.c0))) NOTNULL), CAST(GROUP_CONCAT(t0.c0) AS REAL) FROM t0, vt0 WHERE ((CASE WHEN x'' THEN NULL WHEN NULL THEN 0.211230338705368 WHEN 1944203529 THEN '-827673018' END IN (938464780, ((0.9968746041062759)-('1314632667'))))); -- 0ms;
SELECT (((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '뎙VNZd)B')) AND ((vt0.c0, t0.c0, vt0.c0))) COLLATE BINARY FROM t0, vt0 WHERE (CAST('-243413075' AS BLOB)); -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((- (0.22063693399024864))) AND ((- (vt0.c0)))), ((((t0.c0) NOT NULL))IS NOT(((vt0.c0)/(t0.c0)))), (+ ((((vt0.c0, 0.29002179486661195, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))) FROM t0 INTERSECT SELECT DISTINCT (('1035435529')==(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), t0.c0, GROUP_CONCAT((- (vt0.c0))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM vt0, t0 WHERE (((((((0.5060086972306003)OR(0.875563664908837)))AND(NULL)))*((('-1288013525')<=(NULL))))) GROUP BY x'' HAVING CASE WHEN NULL THEN (~ (vt0.c0)) ELSE ((t0.c0)*(vt0.c0)) END;SELECT ALL (((((0.9475287827466425)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (t0.c0 COLLATE RTRIM) AND ((+ (t0.c0)))) FROM vt0;SELECT (t0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE FROM t0, vt0 ORDER BY LIKELY(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END) ASC  NULLS LAST; -- 0ms;
SELECT ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END)&(((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))), CHANGES(), GROUP_CONCAT(t0.c0) OVER () FROM vt0 GROUP BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)) END HAVING LTRIM(t0.c0 COLLATE RTRIM) ORDER BY CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) AS REAL) ASC  NULLS LAST;SELECT DISTINCT MIN(((t0.c0)>=(t0.c0))) FROM vt0, t0 WHERE ((((((NULL))>(('1251081307')))) NOT NULL)); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0))) IS TRUE) FROM t0, vt0 WHERE (TIME(((x'26e2') NOT BETWEEN ('Otr') AND ('')), ABS(DISTINCT '0.53265576960685'), (((0x5a82fe3f)) NOT BETWEEN ((NULL)) AND (('-774480917'))), ((('-79578144'))>=((x'4840'))), ((0.8970745298030712) BETWEEN (0Xffffffffe36bbd0c) AND (804267841)), (((x'ac89'))<=((x''))), ((('-765154260', NULL, '-405428022'))<((0.34054971060817085, '819518893', '839264604'))))) GROUP BY ((((((((((((CAST(vt0.c0 AS TEXT))AND(ABS(vt0.c0))))AND(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR((((t0.c0, t0.c0, t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0, t0.c0, vt0.c0))))))OR(((t0.c0)<=(NULL)))))OR(t0.c0)))OR(((t0.c0)IS(vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)AND(COALESCE(vt0.c0, '+vNз4Bq'))))OR(0.45701248102837144)) FROM vt0 WHERE ((((x'2d47')) BETWEEN ((((NULL)&(0x25c6022c)))) AND ((NULL COLLATE NOCASE))));SELECT ((TIME(t0.c0, t0.c0, vt0.c0)) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((vt0.c0) IS FALSE))), ((vt0.c0) ISNULL), ((((vt0.c0)OR(vt0.c0)))+(t0.c0)) FROM t0, vt0; -- 0ms;
SELECT ALL ((vt0.c0)==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)) FROM t0;SELECT (((((vt0.c0))>((x''))))+(((NULL)>(t0.c0)))) FROM vt0, t0 WHERE (((((('11683668') BETWEEN (NULL) AND ('584143932')), CAST('{Y(f' AS TEXT), (~ ('1952972034'))))>((x'ac58' COLLATE BINARY, '%hL3~' COLLATE RTRIM, (((('-827673018')AND(x'')))OR('li戍^	# Km')))))); -- 0ms;
SELECT ALL DENSE_RANK() OVER ( ORDER BY x'f04f' COLLATE RTRIM ASC  NULLS FIRST, t0.c0, ((vt0.c0 COLLATE RTRIM)AND((((t0.c0))<((t0.c0))))) ASC) FROM vt0;SELECT DISTINCT GROUP_CONCAT((1.944203529E9 IN ())), ABS((t0.c0 IN ())), 'aW' FROM vt0, t0 GROUP BY ((~ (vt0.c0)) IN ()) HAVING CAST(LIKELY(DISTINCT t0.c0) AS TEXT); -- 0ms;
SELECT ALL CASE WHEN (t0.c0 IN ()) THEN AVG(vt0.c0) WHEN MIN(vt0.c0, vt0.c0) THEN (~ (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END THEN (t0.c0 IN ()) END, CAST(((('-1319941953'))<((t0.c0))) AS BLOB), ((0.07457709677554258)LIKE(((t0.c0)IS(t0.c0)))) FROM t0 WHERE (CASE WHEN ((NULL) ISNULL) THEN (0.9500608122733105 IN ()) WHEN (('!P')>=(NULL)) THEN CASE x''  WHEN 1560203475 THEN NULL ELSE '' END WHEN ((NULL)||('G謳')) THEN (('-1433866321')IS NOT(x'0de6be87')) ELSE 0.528716716082932 END);SELECT DISTINCT NULL FROM vt0 WHERE (((x'')LIKE((- (1830911396))))); -- 0ms;
SELECT CAST('(v_v(' AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((vt0.c0, '''r~pSgfB', t0.c0))>((t0.c0, vt0.c0, t0.c0))) THEN CAST(vt0.c0 AS NUMERIC) END FROM t0 WHERE (x'aa7c8777') LIMIT -805727825 OFFSET -251563081;SELECT DISTINCT (((((+ (t0.c0)))OR(((((NULL)AND(vt0.c0)))AND(vt0.c0)))))OR(((t0.c0) IS TRUE))), (+ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))), ((((vt0.c0)&(x''))) IS FALSE) FROM t0, vt0 WHERE (CAST('1941944850' COLLATE NOCASE AS REAL)); -- 0ms;
SELECT DISTINCT CASE 0.3851520781966844  WHEN ((((vt0.c0)AND(t0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (~ (t0.c0)) END FROM t0, vt0 WHERE ((((((((('')AND(x'')))AND(' 幟[]')))AND(0.5150392868263058)))AND('')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT vt0.c0 COLLATE NOCASE) FROM t0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN t0.c0 ELSE vt0.c0 END COLLATE RTRIM FROM vt0, t0 WHERE ((((((NOT (NULL)))AND(((0.8438232811503389) NOT NULL))))OR(((x'78cc')<(NULL))))); -- 0ms;
SELECT DISTINCT CAST(AVG(x'24cd') AS INTEGER) FROM vt0, t0 GROUP BY (t0.c0 IN ()) COLLATE BINARY, ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((NOT (t0.c0)))), CASE CAST(vt0.c0 AS REAL)  WHEN ((t0.c0) IS TRUE) THEN CAST(vt0.c0 AS BLOB) WHEN (~ (t0.c0)) THEN (t0.c0 IN ()) WHEN ((0.2736686558251715)GLOB(t0.c0)) THEN NULL END, vt0.c0, vt0.c0; -- 0ms;
SELECT DISTINCT ((UNLIKELY(DISTINCT vt0.c0))/((~ (t0.c0)))) FROM t0;SELECT ALL (((MAX(t0.c0, vt0.c0)))>=((t0.c0 COLLATE BINARY))) FROM t0 WHERE ((((((- ('')))AND((0.8334036187280647 IN ()))))AND(((x'8404') BETWEEN (0.8412698140518724) AND (x'')))));