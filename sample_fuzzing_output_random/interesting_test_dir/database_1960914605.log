-- Time: 2024/06/07 10:21:46
-- Database: database5
-- Database version: 3.40.0
-- seed value: 1960914605
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB , +c4 REAL ); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
PRAGMA default_cache_size = -1252189807; -- 7ms;
PRAGMA main.cell_size_check; -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 1ms;
PRAGMA temp.short_column_names; -- 0ms;
ANALYZE temp; -- 1ms;
DROP TABLE IF EXISTS rt0; -- 1ms;
VACUUM main; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum(-2046119994); -- 1ms;
INSERT OR FAIL INTO rt1(c2, c0, c1) VALUES ('M', 'M', '-1252189807'), (x'89b6', 0x6e0ddde7, 0.522502079639218), (NULL, x'2d9a', 0.10172220835609391); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c1, c2, c0) VALUES ('{', -1457877002, x''); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c1, c2) VALUES (0.502797668727821, NULL, 0.10172220835609391); -- 4ms;
INSERT OR FAIL INTO rt1(c2, c0) VALUES ('-1252189807', 0Xffffffff84dee776), ('', NULL), ('B''', 0.10172220835609391); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES (x'7774', '-1e500'); -- 0ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES (x'80b6', x'', -2073069106); -- 0ms;
PRAGMA stats; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA main.integrity_check; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2, c0) VALUES (x'', 'm', NULL), (x'6c99', x'', x'bccd'), ('-1457877002', '-1494589093', '-258176127'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt1 VALUES ('&', NULL, 'C>U'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES (0.9956172945860118, x'ab47'); -- 0ms;
PRAGMA temp.default_cache_size = -258176127; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
ANALYZE temp; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-258176127 unordered noskipscan'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (NULL, NULL, '-765920011'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=654019827 unordered noskipscan'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
PRAGMA cache_spill; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'bef9' THEN x'' END) NOT BETWEEN ((- (0.684297383334986))) AND ((((-7.65920011E8, 0.42151819356840525, x''))=((-1.7976931348623157E308, 0.6941798409235896, ''))))); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT ((((rt1.c0) IS FALSE))GLOB(((rt1.c1) NOTNULL))), rt1.c0, ((NULL) IS FALSE) FROM rt1 WHERE (CASE WHEN ((NULL)-(x'')) THEN ((((0.42151819356840525)OR(0X5603707c)))AND('4I7_Dx]')) ELSE '-1252189807' END); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(x''); -- 1ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 INT ); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
PRAGMA cache_size = -8946197161567268581; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt1(c0, c1) VALUES (x'a1bd', NULL); -- 0ms;
INSERT OR ABORT INTO rt1(c1) VALUES ('-1252189807'), (NULL), (NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (((((- (x'')))AND(((rt1.c1)GLOB(rt1.c0)))))OR(((rt1.c1)LIKE(rt1.c0)))), CASE WHEN CAST(rt1.c2 AS INTEGER) THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) WHEN rt1.c0 THEN ((rt1.c2)*(rt1.c2)) WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c0, rt1.c1, rt1.c0))>=((rt1.c2, rt1.c2, rt1.c1))) ELSE ((rt1.c1)+(0.6991975121965253)) END, (- (((rt1.c2) NOT NULL))) FROM rt1; -- 0ms;
SELECT COUNT(((rt1.c1) ISNULL)) FROM rt1 WHERE ((((('-*H땏I\r') ISNULL)) NOT BETWEEN (CASE 1516917992  WHEN x'' THEN NULL ELSE 'C>U' END) AND ((((0.619075035098255))<((0.26038447635712914)))))); -- 0ms;
SELECT (((rt1.c0)&(rt1.c0)) IN (((0.7562704323275583) NOT BETWEEN (rt1.c1) AND (rt1.c2)))), ((((CAST(rt1.c1 AS BLOB))OR((NOT (rt1.c0)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))), COUNT((+ (rt1.c0))) OVER () FROM rt1 WHERE ((UNLIKELY(DISTINCT x'') IN (0.5913999107709718 COLLATE NOCASE, CASE '1846402535'  WHEN '' THEN 'k1Xe' ELSE ' o}P}' END))); -- 0ms;
SELECT DISTINCT (NOT ((((rt1.c1))<((rt1.c2))))) FROM rt1 WHERE (1846402535) LIMIT -1016626916 OFFSET 236304310; -- 4ms;
SELECT DISTINCT (CAST(rt1.c2 AS NUMERIC) IN ()) FROM rt1 ORDER BY ((TRIM(DISTINCT rt1.c0, rt1.c0))IS NOT(rt1.c2 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT UNICODE(rt1.c1 COLLATE RTRIM), CAST(((0.11706491876042602)<>(rt1.c2)) AS REAL), ((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))==((rt1.c2 COLLATE BINARY))) FROM rt1 GROUP BY ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) IN (GLOB(rt1.c2, rt1.c2))) HAVING (((rt1.c1)-(rt1.c2)) IN ()); -- 0ms;
SELECT ALL NULLIF(-2073069106, 2037047543) FROM rt1 WHERE ((((NULL)) BETWEEN ((((0.7562704323275583)||('-1156991665')))) AND ((((0.529955454789088)||(0.43796814392886796)))))); -- 0ms;
SELECT ((((rt1.c1) IS FALSE)) IS FALSE) FROM rt1 WHERE (((((((((((((((((0.26145524432379585)AND(0.5913999107709718)))AND(NULL)))AND(-1e500)))AND('s薔')))OR(NULL)))OR('-1494589093')))AND(LOWER('[<D__*u%'))))OR(((('0.42151819356840525'))==(('XQXzv)iaE')))))); -- 0ms;
SELECT LIKELY(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c1))), ((('⼉', rt1.c0, rt1.c2)) NOT BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c0) AND ('')), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)), ((rt1.c2) NOT NULL))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN 0X7406d8df WHEN rt1.c2 THEN rt1.c0 WHEN NULL THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END, CAST(rt1.c1 AS REAL), LOWER(DISTINCT rt1.c1)))), ((CAST(rt1.c1 AS BLOB)) NOT BETWEEN (rt1.c2) AND (MIN(rt1.c2))) FROM rt1 WHERE (((CAST('-463958638' AS BLOB)) NOT BETWEEN (NULLIF(DISTINCT x'', x'')) AND (((0.529955454789088) IS TRUE)))); -- 0ms;
SELECT ALL CASE WHEN ((((rt1.c2)AND(rt1.c0)))OR(471256782)) THEN CAST(rt1.c2 AS BLOB) END FROM rt1 NOT INDEXED WHERE ((((NULL IN ('-1156991665')))>=((+ ('-293101930'))))); -- 0ms;
SELECT ((-1.0046138E8 IN (rt1.c0, rt1.c0)) IN ()) FROM rt1 WHERE ((((x'')) BETWEEN (('')) AND ((0X524ec6e5))) COLLATE RTRIM); -- 1ms;
SELECT ALL CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS BLOB) FROM rt1 WHERE (((0Xffffffff84dee776 COLLATE BINARY)AND((('-1282619186') NOT BETWEEN ('1016153210') AND ('Xy5'))))) GROUP BY CASE WHEN LIKELY(DISTINCT rt1.c1) THEN (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) END HAVING (('1297256984')OR(((rt1.c2)=(rt1.c0)))) LIMIT 1551899299 OFFSET 410882973; -- 0ms;
SELECT ALL x'da05' FROM rt1; -- 0ms;
SELECT DISTINCT (- (((rt1.c0) IS TRUE))) FROM rt1; -- 0ms;
SELECT ALL (((rt1.c2)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((rt1.c0 COLLATE RTRIM))) FROM rt1 WHERE (CASE CAST(0.840597233987329 AS TEXT)  WHEN (('0.10172220835609391') NOT BETWEEN (x'') AND (NULL)) THEN ((x'')<=(-2065766538)) WHEN CASE NULL  WHEN x'4e26' THEN 0.824432607172677 ELSE 0xffffffff8aa56cda END THEN x'' COLLATE BINARY WHEN LOWER(NULL) THEN ((('-1495186765'))<((NULL))) ELSE '427843486' COLLATE RTRIM END); -- 0ms;
SELECT ALL ((CASE 0Xffffffffa6ea615b  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)-(TOTAL(rt1.c0))) FROM rt1 WHERE (((((((x'')<<(0.6954855382158797)))AND('')))OR((+ (0.5199590027894186))))); -- 0ms;
SELECT ((((((rt1.c1))<=((rt1.c2))), rt1.c2 COLLATE BINARY, ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))>((((rt1.c2)+(rt1.c2)), (rt1.c1 IN ()), (rt1.c1 IN (rt1.c0, '(킞'))))) FROM rt1; -- 0ms;
SELECT CASE WHEN ((rt1.c2)IS(rt1.c0)) THEN '410882973' WHEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN NULL THEN rt1.c2 ELSE rt1.c0 END THEN ((('p?', rt1.c0, rt1.c0))<=((rt1.c2, rt1.c1, rt1.c2))) WHEN ((rt1.c0)&(rt1.c2)) THEN AVG(rt1.c2) WHEN (NOT (rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND ('')) WHEN ((x'') NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((rt1.c1)-(rt1.c0)) ELSE ((rt1.c1) IS FALSE) END FROM rt1; -- 1ms;
SELECT DISTINCT (((rt1.c2) NOTNULL) IN ()), COUNT(((0.40897892913313316)||(rt1.c2))), CAST(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS BLOB), (((rt1.c2)) NOT BETWEEN ((MAX(rt1.c2))) AND ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))))), (((0.7021370439260153))<>((rt1.c0))) FROM rt1 WHERE (((('', 0.22368169029455465, 0.934190411024817)) NOT BETWEEN (((((('1758249706')AND(0.5199590027894186)))AND('-1661058287')), x'f583', ((NULL) IS TRUE))) AND ((((('')) BETWEEN ((x'')) AND ((''))), ((0.29178661116211635) IS TRUE), (- (x'')))))); -- 0ms;
SELECT (((- (rt1.c0)))*((((rt1.c1))!=((rt1.c2))))), GROUP_CONCAT(((0.9320356072932917) NOTNULL)), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END COLLATE BINARY FROM rt1 WHERE (0xffffffffc367811c) LIMIT -1441084165 OFFSET 1758249706; -- 0ms;
SELECT CASE WHEN rt1.c1 COLLATE RTRIM THEN ((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)) END, (((((rt1.c2)/(rt1.c0))))>((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))))), (COUNT(*) IN ('1380894437')) FROM rt1 WHERE (((((((((((0.502797668727821)!=(-1.252189807E9)))AND(CAST(1.44306598E9 AS BLOB))))OR(CASE 'Rxx&+'  WHEN x'' THEN x'' END)))AND(((x'') NOT BETWEEN ('') AND (0.03390937214083789)))))OR((((('-1016626916')OR(-1.494589093E9)))AND(0.7814385668132572))))); -- 1ms;
SELECT ALL ((CASE WHEN '-1494589093' THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0))) AND (((rt1.c1) ISNULL))), (- (((rt1.c0)+(rt1.c0)))), (((0x7972a542))!=((MAX(rt1.c0)))) FROM rt1; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (CAST((~ (x'')) AS BLOB)); -- 0ms;
SELECT DISTINCT rt1.c1, (((rt1.c2)) BETWEEN (('2037047543')) AND (('*J'))), ((((rt1.c1) IS TRUE))AND(LOWER(DISTINCT rt1.c1))) FROM rt1 GROUP BY (((~ (rt1.c2))) NOT BETWEEN ((((rt1.c0))<((rt1.c1)))) AND (rt1.c1 COLLATE RTRIM)); -- 1ms;
SELECT NTILE(((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN (((1.297256984E9)>>(rt1.c0))) AND (HEX(rt1.c0)))) OVER (), MAX(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END), ((~ (rt1.c2)) IN ()), TYPEOF(PRINTF(rt1.c1, 0.5498080078169717, rt1.c2, '-190714301', rt1.c0)), LENGTH(rt1.c0) COLLATE NOCASE FROM rt1;SELECT ALL NULL FROM rt1; -- 0ms;
SELECT ALL (NOT (json_remove(rt1.c1, rt1.c0))) FROM rt1 WHERE ((0Xb396d07 IN ())) GROUP BY (rt1.c2 IN ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((NULL))), (~ (rt1.c2)))) HAVING ((UNLIKELY(DISTINCT rt1.c1)) IS TRUE); -- 0ms;
SELECT COUNT(rt1.c0), LIKELIHOOD(((rt1.c2) IS TRUE), 0.21225771556198414), CAST(CAST(rt1.c1 AS BLOB) AS NUMERIC) FROM rt1 WHERE ((((((('1794379357')AND(x'34bd')))AND('tW죎E!)s')))/(load_extension(NULL))));SELECT PERCENT_RANK() OVER () FROM rt1 WHERE ((((((('j?x4L洇1ㄅ2')AND('1418123054')))OR(NULL)))<<(CAST(x'84d4' AS REAL)))); -- 0ms;
SELECT ALL (+ (rt1.c2)), (((rt1.c0)) NOT BETWEEN ((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))) AND ((CASE rt1.c1  WHEN rt1.c2 THEN x'3744' ELSE rt1.c1 END))), ((rt1.c1)LIKE(rt1.c2)) COLLATE NOCASE FROM rt1 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c2 END) NOT BETWEEN (rt1.c1) AND (((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))), ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))<=(((rt1.c0) IS FALSE)))  NULLS FIRST, (NOT (((rt1.c1)AND(rt1.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM rt1 WHERE (CASE WHEN CASE NULL  WHEN x'' THEN x'' WHEN x'' THEN x'8564' WHEN x'' THEN 'Xy5' ELSE 4.71256782E8 END THEN NULL ELSE NULL END); -- 1ms;
SELECT ALL NTILE((((((NULL))!=((rt1.c0))))*(CASE WHEN rt1.c1 THEN rt1.c0 END))) OVER () FROM rt1 WHERE (((NULL)%('0.42151819356840525')) COLLATE NOCASE); -- 0ms;
SELECT ((NOT (rt1.c1)) IN (CASE WHEN rt1.c1 THEN rt1.c2 WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)) FROM rt1; -- 0ms;
SELECT ALL ((MIN(rt1.c1))*(rt1.c2)) FROM rt1 WHERE (CAST(((((x'b28b')AND(NULL)))AND(x'')) AS INTEGER)) ORDER BY ((((rt1.c2)IS NOT(rt1.c2))) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c2)=(NULL)))) DESC  NULLS LAST, '' DESC, ((rt1.c0)AND(rt1.c2)) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT ALL CAST(((rt1.c0) IS TRUE) AS NUMERIC) FROM rt1 WHERE (((LENGTH(2.3630431E8))/((~ (x''))))); -- 0ms;
SELECT DISTINCT NULL FROM rt1 WHERE (x'bcf7eebd'); -- 0ms;
SELECT NULLIF(((rt1.c2)>=(rt1.c2)), ((('\k'))==((NULL)))), COUNT(*) COLLATE NOCASE, (~ (((rt1.c2) IS FALSE))) FROM rt1 WHERE ((IFNULL(0.3866780196255619, 0.26038447635712914) IN ())); -- 0ms;
SELECT DISTINCT (((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))AND((rt1.c2 IN ()))))OR((rt1.c0 IN ()))), rt1.c0, CASE CASE WHEN rt1.c1 THEN rt1.c2 END  WHEN rt1.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) ELSE CAST(0.2363750473537065 AS NUMERIC) END FROM rt1 ORDER BY SQLITE_COMPILEOPTION_GET(x'') COLLATE BINARY; -- 0ms;
SELECT DISTINCT SUM(rt1.c2), ((x'')GLOB(CAST(rt1.c1 AS INTEGER))), ((rt1.c1) BETWEEN (((rt1.c0) IS FALSE)) AND (json_array_length(rt1.c2))) FROM rt1; -- 0ms;
SELECT rt1.c1 FROM rt1 WHERE ((((((((('725378249')OR(NULL)))AND('Rxx&+')))OR(CAST('-1376473601' AS INTEGER))))AND((((NULL, '8', '1946605791')) NOT BETWEEN ((1.758249706E9, x'', '[<D_/*u%')) AND ((433300589, 0.03390937214083789, 'mfwg')))))); -- 0ms;
SELECT DISTINCT LEAD(CASE NULL  WHEN rt1.c1 THEN rt1.c1 END, json_array_length(rt1.c2, (((rt1.c0))=((rt1.c1)))), (((('684208389')/(rt1.c2))) BETWEEN (CHAR(rt1.c1)) AND (x''))) OVER () FROM rt1 WHERE (LOWER(((x'8ca7') ISNULL))); -- 1ms;
SELECT ((rt1.c1)<=(0.47923999816858043)), x'633b', LIKE(1788466584, ((NULL)|(rt1.c2)), '7') FROM rt1 WHERE ((((x'')+('1855067421')) IN ())) LIMIT -927951923; -- 0ms;
SELECT DISTINCT rt1.c1, UPPER(DISTINCT ((0.6266436094906825)+(rt1.c2))), (NOT (((rt1.c2)<<(rt1.c1)))) FROM rt1; -- 0ms;
SELECT ALL (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))<=((rt1.c0 IN (rt1.c2)))), SUM(((rt1.c0)&(rt1.c0))) OVER (), rt1.c1 FROM rt1 WHERE (IFNULL(STRFTIME('iJ''', 0.9048925732760652, ''), ((((x'')AND('-663835147')))OR('')))) LIMIT -293101930; -- 0ms;
SELECT ALL CASE (((rt1.c0, rt1.c2, rt1.c2))==((rt1.c2, rt1.c2, rt1.c2)))  WHEN (((rt1.c0))>((rt1.c0))) THEN (~ (rt1.c2)) ELSE ((rt1.c0) NOTNULL) END FROM rt1; -- 0ms;
SELECT (((((rt1.c2, rt1.c0, rt1.c1))!=((rt1.c0, rt1.c2, rt1.c0))))AND(AVG(rt1.c1))) FROM rt1; -- 0ms;
SELECT ((CAST(rt1.c0 AS BLOB)) IS TRUE) FROM rt1; -- 0ms;
SELECT rt1.c0 FROM rt1 WHERE (IFNULL(((x'') NOTNULL), NULL COLLATE RTRIM)) GROUP BY ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND ('*랶''7')) HAVING (((CAST(rt1.c0 AS INTEGER)))>=(((rt1.c2 IN ())))); -- 0ms;
SELECT DISTINCT SUM(((rt1.c0)/(rt1.c1))), (((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) IN ()), ((COUNT(*)) IS FALSE) FROM rt1 WHERE (0.8887544494218257) GROUP BY (((rt1.c1)) BETWEEN (((rt1.c2 IN ()))) AND ((rt1.c0))) HAVING (~ (((((((((0.46384049815456985)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))); -- 1ms;
SELECT DISTINCT (((NOT (rt1.c0)))|(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) FROM rt1; -- 0ms;
SELECT DISTINCT load_extension(rt1.c1) COLLATE RTRIM FROM rt1 WHERE ((((('839393190') NOT BETWEEN (0.2538201126702322) AND (']W[L^ '))) BETWEEN (CHAR(x'')) AND (CASE 0.26038447635712914  WHEN NULL THEN NULL WHEN ']' THEN '' WHEN 'L''ﴝB\r' THEN NULL ELSE x'' END))) GROUP BY ((CASE NULL  WHEN rt1.c1 THEN rt1.c2 END)IS(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 ELSE NULL END)), IFNULL(rt1.c2, ((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(NULL))), (- ((((rt1.c0, rt1.c0, 0Xffffffffd66682ff, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c1, rt1.c1, rt1.c1))))) HAVING (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) COLLATE BINARY LIMIT 1047966464 OFFSET -1; -- 1ms;
SELECT NTH_VALUE((x'' IN ()), (((- (rt1.c0)))>=(rt1.c1 COLLATE NOCASE))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM rt1 LIMIT -2065766538 OFFSET 427843486; -- 0ms;
SELECT ALL CAST((~ (rt1.c0)) AS TEXT) FROM rt1 WHERE ((- ((('1297256984')OR(''))))) LIMIT -1661058287 OFFSET -417672668; -- 0ms;
SELECT ALL '0.7562704323275583' COLLATE NOCASE, rt1.c2, CASE WHEN ((rt1.c2) IS TRUE) THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END ELSE CAST(rt1.c2 AS TEXT) END FROM rt1 WHERE (CAST(NULL COLLATE NOCASE AS TEXT)); -- 0ms;
SELECT DISTINCT ((rt1.c0 COLLATE BINARY)|(COUNT(*))) FROM rt1; -- 0ms;
SELECT DISTINCT 0.04566634207861975 FROM rt1 WHERE (((NULL)>(CASE NULL  WHEN -558576988 THEN NULL END))); -- 0ms;
SELECT COUNT(((((rt1.c2)OR(rt1.c1)))OR(rt1.c2))) FROM rt1; -- 1ms;
SELECT DISTINCT ((((rt1.c0) IS FALSE))-((((rt1.c1)) BETWEEN (('1090118851')) AND ((rt1.c0))))) FROM rt1; -- 0ms;
SELECT ALL ((((GROUP_CONCAT(rt1.c2))AND(((rt1.c1)LIKE(rt1.c2)))))OR(CAST(rt1.c1 AS TEXT))) FROM rt1 WHERE (((((0.0664798064006068 COLLATE BINARY)OR(((-9223372036854775808) BETWEEN ('5R') AND (x'42a5')))))AND((+ (x''))))) GROUP BY ((CASE WHEN rt1.c0 THEN 0xffffffff9cfe4311 END) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) AND (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) HAVING (~ (CASE WHEN rt1.c0 THEN rt1.c1 END)); -- 0ms;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NULL)IS NOT(0.36649217814456236)) IN ())); -- 0ms;
SELECT ALL NULL COLLATE BINARY, (((rt1.c2) IS TRUE) IN ()), ((TYPEOF(rt1.c0))>=(((rt1.c2)-(rt1.c1)))) FROM rt1 WHERE ('gJ'); -- 0ms;
SELECT DISTINCT (((COALESCE(rt1.c2, rt1.c0)))>((CASE WHEN rt1.c2 THEN rt1.c1 END))) FROM rt1 WHERE ((((' o}P}')) BETWEEN (((NOT ('1207025093')))) AND (((('-624619884')<=(0.5014410119616266)))))); -- 1ms;
SELECT ALL (NOT (((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))) FROM rt1 WHERE ((((+ ('t(qNP'))) BETWEEN ((('632592041') NOT BETWEEN ('0.840597233987329') AND (x''))) AND (CASE WHEN '272170269' THEN NULL WHEN 'Hd_좚2z' THEN x'ed0d' WHEN NULL THEN '.2' ELSE NULL END))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS INTEGER)) IS FALSE) FROM rt1 WHERE (((((NULL) NOT BETWEEN (0.6956225364996887) AND (NULL)))==(((NULL) NOTNULL)))) GROUP BY ((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))<<((rt1.c2 IN ()))) ORDER BY ((((CASE WHEN rt1.c2 THEN NULL END)AND((rt1.c2 IN ()))))AND((((('')AND(0x524ec6e5)))AND(rt1.c0))));SELECT ALL (TOTAL(rt1.c1) IN (rt1.c1)) FROM rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((((((UPPER(rt1.c0))AND(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))AND(((rt1.c2)||(rt1.c1)))))OR(((rt1.c0)AND(rt1.c1)))))AND(rt1.c1 COLLATE BINARY)), rt1.c0, RANK() OVER ( ORDER BY ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))/(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN NULL END))) FROM rt1 WHERE (((((CAST(NULL AS INTEGER))AND(((x'')-(x'b258')))))OR(LIKELIHOOD('379281571', 0.6904325922557375)))); -- 0ms;
SELECT rt1.c0, rt1.c0, ((((rt1.c0)>>(rt1.c1)))IS NOT(CAST(rt1.c1 AS TEXT))) FROM rt1 WHERE ('#E') GROUP BY ((((((((CAST(rt1.c2 AS INTEGER))OR((((rt1.c2, rt1.c0, rt1.c2))>((rt1.c2, rt1.c2, rt1.c2))))))AND(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(CAST(NULL AS REAL))))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))); -- 0ms;
SELECT DISTINCT ((((rt1.c1))>((rt1.c0))) IN ()) FROM rt1 ORDER BY CASE WHEN NULL THEN (rt1.c2 IN ()) END ASC  NULLS LAST, (((NOT (rt1.c2))) IS FALSE) ASC  NULLS LAST, (((rt1.c2)) BETWEEN ((json_valid(rt1.c1))) AND ((((rt1.c0) IS FALSE)))) DESC  NULLS FIRST LIMIT 1016153210 OFFSET 826814032; -- 0ms;
SELECT ALL rt1.c2, ((rt1.c1)||(SQLITE_SOURCE_ID())), CAST('*랶''7' AS INTEGER) FROM rt1 GROUP BY (((((0.26340002275747987, rt1.c0, rt1.c2))>(('FALSE', rt1.c0, rt1.c0)))) ISNULL) HAVING MAX(x'67c1'); -- 0ms;
SELECT DISTINCT (((LIKELY(DISTINCT rt1.c1), (NOT (rt1.c2)), ROUND(rt1.c1, rt1.c0)))>((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)), rt1.c2, (+ (rt1.c2))))), ((((rt1.c2 COLLATE NOCASE)AND((- (rt1.c0)))))AND(rt1.c2)), ((((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)))>>(CAST(rt1.c0 AS TEXT))) FROM rt1 WHERE (CASE ((NULL)>=(0.6781370661292809))  WHEN (((NULL, x'', 0.781338489825151))==((-1.661058287E9, '-939086623', x''))) THEN ((((NULL)AND(NULL)))OR(NULL)) END) GROUP BY CAST((rt1.c2 IN ()) AS INTEGER), (CAST(0.7787391847899693 AS INTEGER) IN (CAST(rt1.c0 AS BLOB))), CASE WHEN ((rt1.c0) NOT NULL) THEN TYPEOF(rt1.c2) END; -- 0ms;
SELECT DISTINCT ((AVG(rt1.c0)) NOT NULL) FROM rt1; -- 0ms;
SELECT ALL AVG(((rt1.c1) NOT BETWEEN (-5.58576988E8) AND (rt1.c0))) FROM rt1 WHERE (((((0.684297383334986) BETWEEN (0x668a0f62) AND (NULL))) BETWEEN ((- ('빻Zc6k'))) AND (((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)AND((rt1.c0 IN (rt1.c2, rt1.c0)))))AND((((rt1.c1, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, '1788466584', rt1.c1)) AND ((rt1.c2, rt1.c1, rt1.c0))))), ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2))) ISNULL), rt1.c1 FROM rt1 WHERE (((((0.6849664559091562) BETWEEN ('') AND (x'')))>=(CAST('1728795033' AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN (x'') AND (rt1.c2)) FROM rt1; -- 1ms;
SELECT ALL (- (((rt1.c2) ISNULL))) FROM rt1 LIMIT -719679527; -- 0ms;
SELECT ALL COUNT((- (rt1.c1))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c0) IS FALSE)) BETWEEN (((rt1.c1)=(rt1.c2))) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END)) FROM rt1 WHERE (CAST(CAST(NULL AS BLOB) AS NUMERIC)); -- 0ms;
SELECT ALL TOTAL(SUM(rt1.c2)), (((NOT (rt1.c1))) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (((rt1.c0) ISNULL))), (+ (x'')) FROM rt1 WHERE ((((NULL, 0xffffffffbe22c284, x'')) NOT BETWEEN ((((NULL) NOT BETWEEN (0.967821942112431) AND ('684208389')), (('') ISNULL), (~ ('I')))) AND (((+ (NULL)), (((x'ef6d')) BETWEEN ((0.17737945173955394)) AND ((x'ddfa'))), (('0.10172220835609391') NOT BETWEEN (NULL) AND (''))))));SELECT DISTINCT ((((((((CASE 0.6954855382158797  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN '' WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN 0.3299891417769373 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)AND((rt1.c2 IN ()))))OR(((0.09115565875104426) NOT BETWEEN (0Xffffffff8d2243fe) AND (rt1.c1)))))OR(COUNT(rt1.c0))))AND((- (0.5962279518628248)))) FROM rt1 WHERE (CASE WHEN (~ ('0.502797668727821')) THEN (('.G') NOTNULL) ELSE NULLIF(DISTINCT 0.619075035098255, x'f379') END); -- 0ms;
SELECT TOTAL(CASE WHEN rt1.c2 THEN -1618489186 END) OVER () FROM rt1 WHERE (CASE WHEN (- ('')) THEN (- (NULL)) WHEN CAST(NULL AS REAL) THEN (('-1441084165')<=('0.9320356072932917')) WHEN CAST(6.84208389E8 AS TEXT) THEN ((x'')&('')) ELSE CASE WHEN '-326763336' THEN -1457877002 END END) ORDER BY rt1.c1 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((UNICODE(rt1.c2))GLOB(((rt1.c2) NOT NULL))) FROM rt1; -- 0ms;
SELECT DISTINCT x'34b3', AVG((x'' IN (rt1.c2))) OVER (), CASE WHEN rt1.c0 THEN ((rt1.c1) BETWEEN (NULL) AND (rt1.c2)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (0xdb0b6ab)) THEN rt1.c1 COLLATE RTRIM WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN CAST(rt1.c1 AS BLOB) END FROM rt1 NOT INDEXED; -- 0ms;
SELECT ALL ((GROUP_CONCAT(rt1.c0)) IS FALSE), ((AVG(rt1.c2)) NOTNULL), NTILE(CASE WHEN ((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END ELSE ((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)) END) OVER ( ORDER BY COALESCE(DISTINCT (rt1.c1 IN ()), HEX(rt1.c1))  NULLS LAST, ((ABS(DISTINCT rt1.c2))|(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))  NULLS LAST) FROM rt1;SELECT DISTINCT ((TOTAL(rt1.c1)) NOT BETWEEN (HEX(rt1.c2)) AND (SUM(rt1.c0))) FROM rt1 WHERE (((((x'')<=(0Xffffffff9cfe4311))) NOT BETWEEN (((0.9429741740853597) IS FALSE)) AND ((('1074729041')+(''))))) LIMIT -1420317102; -- 0ms;
SELECT (((((rt1.c0) ISNULL), rt1.c0, (((rt1.c0))>=(('z⨞*|ceSᓮ')))))<((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)), ((rt1.c2) NOTNULL), ((NULL) NOTNULL)))), ((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, 'N3rl')) AND ((rt1.c1, rt1.c1, rt1.c2))) IN ()), CAST(((rt1.c1) NOTNULL) AS NUMERIC) FROM rt1 WHERE ((((((((0.6050975822098572))!=((NULL))))OR((((NULL)) BETWEEN ((1632568862)) AND (('1632568862'))))))OR(((NULL) NOT BETWEEN (x'0692') AND (''))))); -- 1ms;
SELECT ALL (((('k1Xe')OR(rt1.c1))) BETWEEN (((rt1.c1)<=(rt1.c0))) AND (rt1.c1)) FROM rt1 LIMIT 1658642422 OFFSET -765920011; -- 0ms;
SELECT DISTINCT ((rt1.c2)=(CAST(rt1.c2 AS TEXT))) FROM rt1 WHERE (LIKELIHOOD(DISTINCT 0.6023540311223395, 0.773178391366224) COLLATE BINARY) GROUP BY (+ (((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))), (+ ((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))), '-1527677466' HAVING ((((rt1.c2) NOTNULL))==(-558576988)); -- 0ms;
SELECT ALL (((rt1.c1, rt1.c1, rt1.c0, rt1.c2, rt1.c2)) BETWEEN (((+ (rt1.c1)), TRIM(rt1.c1), (rt1.c1 IN ()), ((0.9235939557993491) BETWEEN (rt1.c1) AND (rt1.c2)), rt1.c0)) AND ((((rt1.c1)AND(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END, LIKELIHOOD(DISTINCT rt1.c0, 0.4736336146324569), ((x'f84b')AND(rt1.c1)), highlight(rt1.c0, rt1.c1, rt1.c1, rt1.c0)))), COUNT(*), ((((((rt1.c0) BETWEEN ('1855067421') AND (rt1.c2)))OR(((rt1.c1)OR(rt1.c0)))))OR((rt1.c1 IN ()))) FROM rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS TEXT))=(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))), RANK() OVER ( ORDER BY CASE WHEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)) THEN ((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)) ELSE (('13479350') NOT BETWEEN (rt1.c2) AND (rt1.c1)) END DESC, (((~ (rt1.c0))) NOTNULL)  NULLS LAST), NULL FROM rt1; -- 0ms;
SELECT ALL (((((((((+ (rt1.c0)))AND(((0.7100300241142706)LIKE(rt1.c0)))))AND(rt1.c0 COLLATE BINARY)))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))OR(((rt1.c1)AND(rt1.c2)))), load_extension(rt1.c1) COLLATE NOCASE, ((((((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND(rt1.c0)))OR(((rt1.c1) IS FALSE))))OR(HEX(4.33300589E8))))OR(CAST(rt1.c2 AS TEXT))) FROM rt1 NOT INDEXED WHERE (LIKELIHOOD(NULL, 0.17177984958792847) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1))  WHEN ((((rt1.c2)AND(0.5464410236056031)))OR(rt1.c1)) THEN ((rt1.c2)LIKE(rt1.c2)) END FROM rt1 WHERE ((((NOT (NULL)))<<((~ (NULL))))) GROUP BY highlight((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), rt1.c2, (rt1.c2 IN ()), ((NULL) IS TRUE)) HAVING STRFTIME(((rt1.c0)/(rt1.c2)), rt1.c2 COLLATE BINARY, (rt1.c1 IN (rt1.c1))); -- 0ms;
SELECT (((NULL IN ()))|(((rt1.c1)+(rt1.c1)))) FROM rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT DATETIME(rt1.c2 COLLATE NOCASE, ROUND(rt1.c2, rt1.c2), (rt1.c0 IN ()), rt1.c1 COLLATE NOCASE, rt1.c1 COLLATE NOCASE, MIN(rt1.c1), TRIM(rt1.c1)), '-1661058287', ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))<=(((0.37743474712434166) NOTNULL))) FROM rt1 WHERE (CAST(0x6cdb83fc AS BLOB) COLLATE BINARY); -- 0ms;
SELECT DISTINCT UNLIKELY(NULLIF(rt1.c1, rt1.c2)), DENSE_RANK() OVER (), CAST(CAST(rt1.c0 AS INTEGER) AS BLOB) FROM rt1 LIMIT 1516917992; -- 0ms;
SELECT DISTINCT ((rt1.c2)AND((((rt1.c1))>((rt1.c2))))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((-2.046119994E9)OR(rt1.c0)))>=(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)) FROM rt1 WHERE (CAST(((x'0fb9')GLOB('')) AS REAL)); -- 0ms;
SELECT rt1.c1 FROM rt1; -- 0ms;
SELECT DISTINCT 118472315 FROM rt1 WHERE (CAST(json_type(NULL) AS BLOB)) LIMIT 1443065980; -- 0ms;
SELECT DISTINCT ((((rt1.c0) IS FALSE)) BETWEEN (rt1.c1) AND (AVG(rt1.c1))) FROM rt1 WHERE (((((('118472315' IN (500753221)))OR((((x'', x'', '1893567138'))!=((NULL, x'', 0.14121116563736613))))))AND((('?\')IS NOT(0xffffffff8fc7c1a9))))); -- 0ms;
SELECT DISTINCT (- (0.38321369024575613)) FROM rt1; -- 0ms;
SELECT ALL CUME_DIST() OVER ( ORDER BY 0.34913833523332205 DESC  NULLS FIRST) FROM rt1 WHERE (HEX(((((x'')OR('1380894437')))OR(x'')))); -- 0ms;
SELECT DISTINCT (+ (CASE WHEN rt1.c0 THEN rt1.c0 END)) FROM rt1; -- 1ms;
SELECT ALL CAST(rt1.c1 AS NUMERIC) FROM rt1 WHERE (((TRIM(DISTINCT '-37513806'))<((- ('1425966259'))))); -- 0ms;
SELECT ((rt1.c2)&(((rt1.c1)/(rt1.c0)))) FROM rt1 WHERE (CASE WHEN ((NULL) BETWEEN (0.10172220835609391) AND ('477267348')) THEN -1105018236 COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT (NOT (((rt1.c2)>(0.3930787829539537)))), (((rt1.c2 IN ()))>>((rt1.c1 IN ()))), MIN((~ (rt1.c1))) FROM rt1 LIMIT 1175257358; -- 0ms;
SELECT ALL (~ (0.5343758925825052)) FROM rt1 WHERE ('-109069311'); -- 0ms;
SELECT ALL rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c0 COLLATE NOCASE)OR(rt1.c1 COLLATE RTRIM)))OR(((rt1.c1) NOT NULL))) FROM rt1 WHERE (((((1.297256984E9) BETWEEN ('1510787875') AND (x'd00db782')))GLOB(CASE NULL  WHEN 0.18645136906929682 THEN x'641a' WHEN NULL THEN 1094861484 WHEN 1342569197 THEN '-1547879270' ELSE x'c1de' END))) LIMIT 186187190; -- 0ms;
SELECT DISTINCT ((((rt1.c0)>>(rt1.c2)))=((rt1.c0 IN ()))) FROM rt1 WHERE (CAST(((NULL) NOT BETWEEN (0.4885271316674854) AND (2.29684907E8)) AS NUMERIC)); -- 0ms;
SELECT ((- (rt1.c2)) IN ()) FROM rt1 GROUP BY CASE ((rt1.c0) NOTNULL)  WHEN ((rt1.c1)-(rt1.c2)) THEN ((rt1.c1)IS NOT(rt1.c1)) WHEN (((rt1.c1, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, rt1.c1))) THEN JULIANDAY(rt1.c1, rt1.c2, rt1.c1) WHEN ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)) THEN load_extension(rt1.c0, rt1.c0) ELSE (((rt1.c1, rt1.c2, rt1.c1, rt1.c2, rt1.c2))>=((rt1.c0, rt1.c1, rt1.c2, rt1.c2, rt1.c2))) END; -- 0ms;
SELECT DISTINCT CASE (((0.6266436094906825))<=((rt1.c2)))  WHEN ABS(rt1.c1) THEN ((rt1.c1)LIKE(rt1.c2)) ELSE 0.9320356072932917 END FROM rt1; -- 1ms;
SELECT DISTINCT ((TOTAL(rt1.c0))<<(((rt1.c1)>(rt1.c1)))) FROM rt1 WHERE (((((('j?0*J') ISNULL)))>(((('1./M[Q')*(0.6941798409235896)))))); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT rt1.c0 COLLATE NOCASE, COUNT(rt1.c2)) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((- (0xffffffff9aac99b0))) GROUP BY CASE (((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, '2124240654')) AND ((rt1.c1, rt1.c2, rt1.c1)))  WHEN (rt1.c0 IN ()) THEN rt1.c1 COLLATE BINARY END HAVING CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) AS REAL); -- 0ms;
SELECT ALL ((((CAST(rt1.c1 AS BLOB))OR(((rt1.c0)>=(rt1.c1)))))AND(0x55815430)) FROM rt1; -- 0ms;
SELECT ((((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)))IS(AVG(rt1.c1))) FROM rt1 WHERE (((CAST(0.7562704323275583 AS INTEGER))*((0Xffffffffc4193b95 IN ())))); -- 1ms;
SELECT DISTINCT (NOT (rt1.c0)) FROM rt1 WHERE (IFNULL(x'', 1720211408) COLLATE NOCASE); -- 0ms;
SELECT ALL NTILE((((rt1.c2 IN (rt1.c0)))==((((rt1.c2))<=((rt1.c2)))))) OVER () FROM rt1 WHERE ((NOT ((('|u\nU ') IS TRUE)))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c2)>=(rt1.c0)) AS REAL), (NOT (((rt1.c0)IS(rt1.c2)))), GROUP_CONCAT(((rt1.c0) IS TRUE)) FROM rt1 WHERE (((NULL COLLATE BINARY)>((((x'd5bc'))>((2.037047543E9)))))); -- 0ms;
SELECT DISTINCT AVG((- (rt1.c1))) OVER ( ORDER BY (NOT (rt1.c2)) DESC  NULLS LAST) FROM rt1 WHERE ((((('-1282619186')IS('839393190')))<>(CAST(NULL AS TEXT)))); -- 1ms;
SELECT rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT NTILE((- (rt1.c0 COLLATE NOCASE))) OVER () FROM rt1;SELECT (((CAST(rt1.c1 AS NUMERIC)))=((STRFTIME(rt1.c2, rt1.c1, rt1.c2, rt1.c2, rt1.c1)))), CAST((((rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c1))) AS NUMERIC), MAX((rt1.c2 IN ())) FROM rt1; -- 0ms;
SELECT DISTINCT ((NULL)=(ABS(NULL))), CASE WHEN 1883560054 THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c2 WHEN ((NULL)<>(rt1.c1)) THEN CAST(rt1.c1 AS REAL) ELSE CAST(rt1.c0 AS INTEGER) END, ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (rt1.c0) AND (load_extension(rt1.c2))) FROM rt1 WHERE ('1726607457');SELECT DISTINCT NTH_VALUE(COALESCE(DISTINCT ((('TRUE', rt1.c2, rt1.c2))<=((rt1.c2, rt1.c1, rt1.c0))), ((rt1.c0)IS(rt1.c2))), ((((rt1.c2)-(rt1.c2))) NOTNULL)) OVER () FROM rt1 GROUP BY ((((rt1.c1)||(rt1.c0))) NOT BETWEEN (rt1.c1) AND ((((rt1.c1))>=((rt1.c2))))), ((((rt1.c2)<(rt1.c0))) NOT BETWEEN (((((rt1.c1)AND(rt1.c2)))OR(rt1.c1))) AND ('FALSE')), (((rt1.c1)) BETWEEN ((TYPEOF(DISTINCT rt1.c0))) AND ((((0.5343758925825052) ISNULL)))) HAVING ((((rt1.c0) BETWEEN ('') AND (rt1.c0)))IS NOT(LTRIM(rt1.c1))); -- 0ms;
SELECT ALL (rt1.c1 COLLATE RTRIM IN ()), LOWER(DISTINCT MAX('433300589')), (NOT (rt1.c1 COLLATE NOCASE)) FROM rt1 WHERE (((((((((((x'')AND('.*')))OR(x'')))OR('')))AND(NULL)))IS NOT((((NULL, 'O劫', '')) BETWEEN ((x'', '1370606044', 0.9786531240865407)) AND ((-684235624, 0.8462208517678462, 0.9853326509321279)))))); -- 1ms;
SELECT DISTINCT ((rt1.c1 COLLATE RTRIM)||((NOT (rt1.c2)))), ((rt1.c1 COLLATE BINARY)>=(COUNT(*))), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN '1604565913' THEN rt1.c2 ELSE rt1.c0 END COLLATE RTRIM FROM rt1 WHERE (((((NULL COLLATE NOCASE)OR(CASE NULL  WHEN NULL THEN 0x5005faed ELSE NULL END)))AND(((-1088449882)*(x''))))) GROUP BY (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END IN ()), ((x'')<((NULL IN ()))), ((rt1.c0) IS FALSE), ((CAST(rt1.c1 AS INTEGER))<((- (rt1.c2)))), CASE (~ (rt1.c2))  WHEN (rt1.c2 IN ()) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c0 COLLATE RTRIM WHEN ((rt1.c2) NOT NULL) THEN rt1.c0 COLLATE BINARY ELSE CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END END HAVING MAX(CASE WHEN rt1.c0 THEN rt1.c0 END); -- 0ms;
SELECT ALL ((((((((((((((rt1.c0)-(rt1.c1)))OR(COUNT(-1252189807))))OR(rt1.c2)))OR((rt1.c0 IN ()))))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((rt1.c0) IS TRUE))))AND(('-1' IN (rt1.c0)))), ((UPPER(rt1.c2))AND(((rt1.c2)<(rt1.c0)))), ((((((((((rt1.c2)>(rt1.c2)))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))))OR(CAST(0.9903282389156123 AS NUMERIC))))AND(((((rt1.c2)AND('1297256984')))OR(rt1.c2)))))AND(((rt1.c1) ISNULL))) FROM rt1 WHERE ((((((-1618489186)<<(NULL))))>(((((0.7148436016027121, NULL, x'')) BETWEEN ((NULL, 236304310, 1221996611)) AND ((NULL, 0.05818942634421531, 0.02450859666676397))))))) GROUP BY ((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)) COLLATE BINARY, (((((rt1.c2))>((rt1.c0))))>=((((rt1.c1)) BETWEEN ((rt1.c0)) AND (('h6cXDou'))))), (- (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))), (((CAST(rt1.c1 AS TEXT)))<=(((((((((('-1968870182')AND('177870388')))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c1))))), (((- (rt1.c0))) NOT BETWEEN ('') AND ((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))); -- 0ms;
SELECT (- ((rt1.c1 IN ()))), SUM(CAST(rt1.c0 AS TEXT)) OVER ( ORDER BY ((rt1.c2)<=(x'a1b4')) ASC), RTRIM((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c1)))) FROM rt1 WHERE ((((((x'')||(x''))))<=(((('1114049581') BETWEEN (NULL) AND (x'')))))); -- 0ms;
SELECT DISTINCT RTRIM(x'153f') FROM rt1 WHERE ((((NULL)) NOT BETWEEN ((((x'')<>(x'')))) AND ((0.9192386758362812 COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c2)AND(rt1.c0)))AND('')))OR(rt1.c2)))OR(rt1.c1)))&(LIKELIHOOD(rt1.c0, 0.6353931530819774))), (+ (rt1.c0)), ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2))) IS FALSE), (+ (((rt1.c2) BETWEEN (rt1.c1) AND (x'')))), ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))AND(NULLIF(rt1.c2, rt1.c1))))AND(LIKELIHOOD(NULL, 0.1329376787278872))) FROM rt1; -- 0ms;
SELECT SUM((rt1.c0 IN ())), (UPPER(rt1.c1) IN ((rt1.c2 IN ()))), ((NOT (rt1.c1)) IN ('1632568862')) FROM rt1; -- 0ms;
SELECT ALL CAST(CAST(rt1.c1 AS NUMERIC) AS TEXT) FROM rt1 WHERE (-697924865) GROUP BY CASE WHEN LIKELIHOOD('1525018892', 0.5209072239928579) THEN ((((((((rt1.c1)OR(NULL)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)) END HAVING rt1.c2; -- 0ms;
SELECT DISTINCT 'Ps' FROM rt1 ORDER BY ((rt1.c1)+(rt1.c0)) COLLATE NOCASE  NULLS LAST, ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))/(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) DESC; -- 0ms;
SELECT ((((((((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))OR('')))OR(rt1.c1)))OR(rt1.c2))) BETWEEN ((rt1.c0 IN (rt1.c0))) AND ((rt1.c1 IN ()))) FROM rt1 WHERE (((CASE WHEN '1707590568' THEN 0.02758551415109689 END) IS FALSE)); -- 0ms;
SELECT DISTINCT x'cda6' FROM rt1 ORDER BY ((((rt1.c0)IS(rt1.c0))) NOT BETWEEN (rt1.c1) AND ((((rt1.c1, rt1.c1, rt1.c1))=((rt1.c0, rt1.c0, rt1.c0)))))  NULLS FIRST; -- 0ms;
SELECT ALL (((rt1.c2, rt1.c2, rt1.c0)) BETWEEN ((((rt1.c0)AND(rt1.c2)), 0x414242ac, CAST(rt1.c0 AS TEXT))) AND ((SUM(rt1.c1), (((rt1.c1))<=((rt1.c2))), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END))) FROM rt1 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT DISTINCT (+ (rt1.c2 COLLATE NOCASE)) FROM rt1 WHERE (((((ABS(DISTINCT 1666574263))OR((~ (NULL)))))AND(x''))) GROUP BY ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))) AND ((+ (rt1.c2)))) HAVING CAST(((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)) AS INTEGER); -- 0ms;
SELECT DISTINCT (+ (UNLIKELY(0.9903282389156123))), COUNT(((rt1.c0)|(NULL))), COUNT(*) FROM rt1; -- 0ms;
SELECT ((((((((CAST(rt1.c0 AS BLOB))OR(((rt1.c1)OR(rt1.c2)))))OR((NOT (rt1.c0)))))AND(((rt1.c0)=(rt1.c1)))))OR((('J?X4L洇1ㄅ2')<=(rt1.c1)))), (((rt1.c0)) BETWEEN ((((0x7406d8df) NOT BETWEEN (0.13242306113521218) AND (rt1.c2)))) AND (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))), CAST((((rt1.c1, rt1.c2, rt1.c0))<((rt1.c1, rt1.c2, rt1.c2))) AS BLOB) FROM rt1 GROUP BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN TYPEOF(rt1.c1) ELSE ((rt1.c2)||(rt1.c2)) END; -- 0ms;
SELECT ALL ((rt1.c1 COLLATE RTRIM) NOTNULL) FROM rt1 WHERE (((((NULL))==((x'e574'))) IN ())); -- 0ms;
SELECT DISTINCT ((((rt1.c2) ISNULL))/(((((rt1.c2)AND(2138910890)))OR(rt1.c1)))) FROM rt1 WHERE (((((- (0X6e0ddde7)), ((('쟎5/ibt1&閲', '', '0.9320356072932917', '2120022368', x''))<=(('-1527677466', '-1081691568', '', '2072445761', x'a0b9'))), ((0x2e93398c) IS FALSE)))<=(((((2.037556546E9)) NOT BETWEEN ((x'4010')) AND ((NULL))), CASE WHEN 'Baq	LGqSq' THEN 0.8547022623155788 ELSE '1764373961' END, ((((((((NULL)AND(x'e216')))OR(x'')))AND('')))AND('')))))) GROUP BY JULIANDAY(((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))OR(1.425966259E9)))OR(rt1.c1)), rt1.c0 COLLATE BINARY, CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END, CAST(rt1.c0 AS BLOB), (+ (rt1.c2))) ORDER BY ((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)) COLLATE BINARY  NULLS FIRST, ((((rt1.c2) ISNULL))IS(((((rt1.c1)OR(rt1.c1)))AND(rt1.c2))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (~ (((rt1.c2) IS TRUE))) FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c0, rt1.c0, rt1.c2))<((rt1.c0, rt1.c0, rt1.c2))))IS(((rt1.c1)/(rt1.c0)))) FROM rt1; -- 0ms;
SELECT ALL (((rt1.c1))<((((rt1.c2)==(rt1.c0))))), ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (CASE rt1.c1  WHEN rt1.c0 THEN 1898131209 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END)), TOTAL(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))), ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))IS((rt1.c2 IN ()))), ((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))/(rt1.c2)) FROM rt1 GROUP BY CASE ((rt1.c2)>(rt1.c2))  WHEN '421074457' THEN GLOB(rt1.c0, 2.29684907E8) END, (((rt1.c1)>(rt1.c0)) IN ()), CASE LOWER(DISTINCT rt1.c0)  WHEN ((rt1.c1) NOT NULL) THEN json_insert(rt1.c0, rt1.c0, rt1.c1) END HAVING CASE (+ (rt1.c0))  WHEN rt1.c0 COLLATE BINARY THEN ((rt1.c0)+(rt1.c2)) WHEN CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END THEN ((rt1.c2)||(1826325500)) WHEN rt1.c0 COLLATE BINARY THEN ((rt1.c2)-(rt1.c1)) END; -- 1ms;
SELECT ALL RANK() OVER () FROM rt1 WHERE (CAST('-1156991665' AS NUMERIC) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((rt1.c0 IN ()))OR(((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))))AND((+ (rt1.c2)))) FROM rt1; -- 0ms;
SELECT (- (((rt1.c0) NOT NULL))) FROM rt1 WHERE (((((('-1715053798')) NOT BETWEEN ((0.027443354627343708)) AND ((NULL))))OR((((x''))<>((63411006)))))); -- 0ms;
SELECT AVG(LIKELY(0.4426380171616937)), (((CASE WHEN rt1.c2 THEN rt1.c0 END))<((0.18347281564057605))), RANK() OVER () FROM rt1 WHERE (((((x'') NOT BETWEEN (0X2b3c64c9) AND (0.8570890117434974)))OR(CASE WHEN NULL THEN x'' WHEN '1967896319' THEN 0.8204937121379089 WHEN 0.10357403540207066 THEN 289871490 END))); -- 0ms;
SELECT UPPER(DISTINCT ((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) FROM rt1 WHERE (((((0.10769237272613474) IS FALSE))<=(0.033555924862174735))); -- 0ms;
SELECT ALL ((RTRIM(rt1.c2))<(((rt1.c0)<(rt1.c0)))), ((((((((((((rt1.c1)OR(rt1.c2)))OR(1.074729041E9)))OR(((rt1.c1)==(rt1.c1)))))AND(GROUP_CONCAT(rt1.c0))))AND(x'')))AND((rt1.c0 IN ()))), MIN(CAST(rt1.c0 AS TEXT)) FROM rt1; -- 0ms;
SELECT DISTINCT (+ ((- ('X?S')))) FROM rt1 WHERE (((CASE WHEN '' THEN x'' ELSE NULL END)<<((((((((('1016153210')OR(NULL)))AND(NULL)))OR(x'1c10')))AND('.&V,7'))))); -- 1ms;
SELECT ALL (((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)) IN ()), MIN(rt1.c2, 0.3386243084180438), (- (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) FROM rt1; -- 0ms;
SELECT ALL ((rt1.c1 COLLATE RTRIM)OR(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))), (~ (rt1.c2 COLLATE BINARY)), ((x'c013')<<(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))) FROM rt1 WHERE ((+ ((- (NULL))))) LIMIT 1340559845; -- 0ms;
SELECT DISTINCT NULL FROM rt1 WHERE (((((((((((NULL)AND(NULL)))AND(1921601804)))OR(0.09933208891565404)))OR('3꟩G4fF'))) NOT BETWEEN (LIKELY(DISTINCT 0.47640852387959454)) AND ((((((((('VgL)')AND('7s')))AND(x'')))OR(NULL)))OR('-2121785388'))))); -- 0ms;
SELECT DISTINCT ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))=(((rt1.c2) NOT NULL))), ((rt1.c2) NOT BETWEEN (TYPEOF(DISTINCT rt1.c2)) AND (rt1.c0)), ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))+(((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))) FROM rt1; -- 0ms;
SELECT DISTINCT (- (((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))) FROM rt1 ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END) NOTNULL) ASC  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN (~ (rt1.c2)) THEN rt1.c1 ELSE CAST(NULL AS TEXT) END FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1; -- 0ms;
SELECT ALL ((rt1.c2) NOT NULL) FROM rt1 WHERE (((LIKELY(DISTINCT 0.3586381299141719))!=(((NULL) BETWEEN ('-293101930') AND (0.2363750473537065))))); -- 0ms;
SELECT ((COUNT(rt1.c1))*(((rt1.c0) IS FALSE))), CAST(rt1.c0 AS TEXT), rt1.c2 FROM rt1 WHERE (((CASE 0.33939143273636774  WHEN 1726607457 THEN NULL WHEN 0.9837090877413189 THEN 0 WHEN 0.9500350073881696 THEN x'' END) ISNULL)) ORDER BY (x'c1f0' IN ()) ASC LIMIT 1342569197 OFFSET -37513806; -- 0ms;
SELECT DISTINCT TOTAL(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT MAX(AVG(((rt1.c2)|(rt1.c2)))), ((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))GLOB(((rt1.c1)<>(rt1.c2)))), 0.278468512318802 FROM rt1 WHERE (CASE ((1.883560054E9)<=(0.14121116563736613))  WHEN (- (NULL)) THEN CAST(0.7610134182215552 AS BLOB) END) ORDER BY (((NOT (rt1.c2))) IS TRUE);SELECT CAST(rt1.c1 AS TEXT) FROM rt1 WHERE ((((0.4426380171616937) ISNULL) IN (((((((((0.6731172106293634)OR(0X1dd8e345)))OR('pWf')))OR(x'')))AND('0.38321369024575613'))))); -- 0ms;
SELECT GROUP_CONCAT(x'') OVER () FROM rt1 WHERE (CAST(((((((((0.8547022623155788)AND('-1130511469')))OR(x'9a8648a2')))AND(0.583256186643562)))OR('-1233344365')) AS BLOB)) LIMIT 1226366635 OFFSET -832997364; -- 0ms;
SELECT ALL TOTAL(MIN((rt1.c1 IN ()))) FROM rt1;SELECT ALL DATETIME(CAST(rt1.c0 AS NUMERIC), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END, CHAR(rt1.c0)), (NOT ((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c1))))), ((CAST(rt1.c2 AS BLOB)) BETWEEN (((rt1.c0) IS FALSE)) AND (SQLITE_VERSION())) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c0)))OR(((rt1.c0)<(rt1.c0)))))OR(((rt1.c1)<<(rt1.c0)))) FROM rt1 WHERE (CASE WHEN (NOT ('(''8gh')) THEN UNLIKELY(NULL) WHEN CASE WHEN x'' THEN '1758249706' ELSE '	' END THEN json_valid(2.3630431E8) WHEN CASE WHEN '+<\' THEN 0xffffffffd2a76917 ELSE '' END THEN ((((NULL)AND('-26100021')))OR(0xffffffffb388ae0e)) END) ORDER BY rt1.c1 DESC, CAST((~ ('')) AS INTEGER)  NULLS FIRST; -- 1ms;
SELECT (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))AND((NOT (rt1.c1)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)))IS(((rt1.c2) IS TRUE))), (- (PRINTF(rt1.c2))), CASE x'e904'  WHEN AVG('1980176669') THEN rt1.c1 ELSE ((rt1.c1)-(rt1.c0)) END FROM rt1 LIMIT 858717728 OFFSET 13479350; -- 0ms;
SELECT rt1.c0 FROM rt1 WHERE (x'cea2'); -- 0ms;
SELECT DISTINCT ((0.19065397527976347) NOT BETWEEN ((((', ')) BETWEEN ((rt1.c0)) AND ((rt1.c1)))) AND ((((rt1.c2))=((rt1.c0))))) FROM rt1; -- 0ms;
SELECT ALL ((((((((((((CAST(rt1.c1 AS TEXT))OR((rt1.c2 IN ()))))AND(((rt1.c1) NOTNULL))))AND(0.2897337728183069)))AND(rt1.c0)))AND((~ (rt1.c0)))))OR(0.6781370661292809)), COUNT(*) OVER (), TRIM(DISTINCT CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END) FROM rt1 GROUP BY CASE WHEN TYPEOF(DISTINCT rt1.c1) THEN rt1.c0 COLLATE RTRIM END HAVING rt1.c2; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS INTEGER)) BETWEEN (rt1.c0) AND (MAX(rt1.c2, rt1.c0))) FROM rt1 WHERE (((((0.13242306113521218) IS FALSE))<>((('')>(''))))); -- 0ms;
SELECT ALL CHAR(MIN(rt1.c1)) FROM rt1; -- 0ms;
SELECT CASE ((rt1.c1)GLOB(rt1.c2))  WHEN LAST_INSERT_ROWID() THEN CAST(rt1.c1 AS TEXT) END FROM rt1; -- 0ms;
SELECT ALL (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2))))=(((rt1.c0 IN (rt1.c1))))) FROM rt1 WHERE ((~ (((0.03771757295161593)!=(0Xffffffffaa1accfb))))); -- 0ms;
SELECT (((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((CAST(rt1.c2 AS INTEGER), 0.4827707671426833 COLLATE BINARY, '*J')) AND ((CASE 0.5354853285453348  WHEN rt1.c2 THEN rt1.c0 END, (rt1.c2 IN ()), LTRIM(rt1.c2)))) FROM rt1 LIMIT -1257793983 OFFSET 1059000318; -- 1ms;
SELECT DISTINCT CAST(((rt1.c2) NOT NULL) AS BLOB) FROM rt1 LIMIT -663835147; -- 0ms;
SELECT DISTINCT JULIANDAY(rt1.c1 COLLATE NOCASE, ((rt1.c2) IS FALSE), (rt1.c0 IN (rt1.c2))), (MAX(rt1.c1, rt1.c2) IN (((rt1.c0) IS FALSE), (((rt1.c1, 'f徇t)I', rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, x''))))), ((((rt1.c0) IS TRUE)) NOTNULL) FROM rt1 LIMIT 1720211408; -- 0ms;
SELECT COUNT(*) OVER () FROM rt1 WHERE ((((0.8230287425041212 IN (0.5477153130011333)))|(CASE x''  WHEN NULL THEN -1.7976931348623157E308 WHEN '160683412' THEN 0.11706491876042602 WHEN x'' THEN '500753221' END))); -- 0ms;
SELECT (rt1.c0 IN ()) COLLATE BINARY COLLATE BINARY FROM rt1 WHERE (((((0Xffffffffab4679cf) IS FALSE)) IS TRUE)); -- 0ms;
SELECT CASE (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))  WHEN rt1.c1 COLLATE NOCASE THEN ((rt1.c1)<=(rt1.c0)) ELSE COUNT(rt1.c1) END, TOTAL(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 END), rt1.c0 FROM rt1 ORDER BY (((rt1.c2)) BETWEEN ((((rt1.c0)&(rt1.c0)))) AND ((((',Pxzj﫭Ok')GLOB(rt1.c2))))); -- 1ms;
SELECT DISTINCT (NOT (rt1.c0)) COLLATE NOCASE COLLATE RTRIM, GROUP_CONCAT(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))), CASE ((rt1.c0) NOT NULL)  WHEN TRIM(DISTINCT rt1.c2) THEN CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END END FROM rt1 WHERE (0X22739597) LIMIT -444533433 OFFSET 216320617; -- 0ms;
SELECT ALL rt1.c0 FROM rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END) OVER () FROM rt1 WHERE ('433300589') LIMIT 705424980 OFFSET 1788466584; -- 0ms;
SELECT DISTINCT (- (TRIM(rt1.c1, rt1.c0))) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(rt1.c0 AS INTEGER) COLLATE NOCASE FROM rt1; -- 0ms;
SELECT COUNT(*) FILTER(WHERE rt1.c0) OVER ( PARTITION BY ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))))OR((NULL IN ()))), MAX('Eo[\>', ((rt1.c0)IS NOT(rt1.c0))), ((((TRIM(DISTINCT rt1.c1))OR((+ (rt1.c2)))))AND(((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))), (((~ (rt1.c0))) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (''))) FROM rt1 WHERE ((- (((1.207025093E9)>(x''))))) LIMIT -509360286; -- 1ms;
SELECT DISTINCT CAST((NOT (rt1.c2)) AS NUMERIC), ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN (0.5343758925825052) AND ((~ (rt1.c1)))), ((((NULL) BETWEEN (rt1.c2) AND (rt1.c1)))*((rt1.c0 IN ()))) FROM rt1 ORDER BY TRIM(DISTINCT ((rt1.c0) IS FALSE))  NULLS FIRST; -- 0ms;
SELECT ALL (('0.2363750473537065')IS(rt1.c1)) FROM rt1 WHERE (((((x'20a7')>>(0.7427209842590362)))IS NOT((('qUb')LIKE(x''))))); -- 0ms;
SELECT DISTINCT TOTAL((x'' IN ())) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)) IN ()), ((((rt1.c0) NOT NULL)) NOT BETWEEN (load_extension(rt1.c2, rt1.c2)) AND (COUNT(*))), ((SQLITE_SOURCE_ID()) ISNULL), (((rt1.c2)OR(rt1.c2)) IN ()), FIRST_VALUE((+ (x''))) OVER () FROM rt1;SELECT DISTINCT rt1.c0 FROM rt1; -- 0ms;
SELECT ALL ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0))) BETWEEN (IFNULL(rt1.c0, rt1.c0)) AND (DATE(rt1.c2, rt1.c2, rt1.c0))) FROM rt1 GROUP BY NULLIF(((rt1.c1) IS TRUE), ((x'') BETWEEN (rt1.c2) AND (rt1.c2))), ((highlight(rt1.c1, rt1.c0, rt1.c2, NULL))<<(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)), CASE CAST(rt1.c1 AS BLOB)  WHEN (~ ('654019827')) THEN ((-1.527677466E9)IS NOT(rt1.c1)) WHEN (- (rt1.c2)) THEN ((rt1.c1)%(rt1.c2)) WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)) THEN ((0.36270973682777863)&(rt1.c2)) ELSE (- (0Xffffffffa3bd3c9a)) END HAVING MIN(0xffffffffe38a5392);SELECT DISTINCT 0xffffffffc367811c, (((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)), 0.520230372390308, ((rt1.c0)%(x'')), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)), AVG(rt1.c1)))==((((rt1.c0) IS FALSE), CAST(rt1.c2 AS INTEGER), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)), ((rt1.c2)>>(rt1.c2)), '1094861484'))), LIKELIHOOD(rt1.c1 COLLATE NOCASE, 0.8678276471740259) FROM rt1; -- 0ms;
SELECT DISTINCT ((- (rt1.c2)) IN (rt1.c1 COLLATE NOCASE, GROUP_CONCAT(x'9437'))), (((('-1661058287') NOTNULL))&(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))), (((rt1.c1 IN ())) NOT BETWEEN ('-98791813' COLLATE NOCASE) AND ((- (x'')))) FROM rt1 GROUP BY TRIM(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)), CAST(rt1.c1 AS NUMERIC)), rt1.c1, ((0.2066114064325797)<((+ (rt1.c0)))) HAVING (((rt1.c1, rt1.c2, rt1.c2)) NOT BETWEEN ((MIN(rt1.c1), ((rt1.c1)>(rt1.c2)), (((rt1.c0)) NOT BETWEEN (('0.8204937121379089')) AND ((rt1.c2))))) AND (((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c2))), ((x'')=(rt1.c1)), (((rt1.c1, rt1.c0, rt1.c2))!=((rt1.c2, rt1.c2, rt1.c1)))))); -- 1ms;
SELECT DISTINCT CAST(CAST(rt1.c1 AS NUMERIC) AS TEXT), QUOTE(((rt1.c2) IS FALSE)), CASE WHEN (('0.033555924862174735') NOTNULL) THEN rt1.c0 WHEN rt1.c2 THEN ((rt1.c2) NOT NULL) WHEN (- (x'15869a11')) THEN rt1.c1 END FROM rt1 WHERE (((((((NULL)OR('884897210')))AND(NULL)))%('1074729041'))) LIMIT -1581406952; -- 0ms;
SELECT DISTINCT ((((((((0.4654297554874469)AND(UPPER(rt1.c1))))OR((rt1.c0 IN (rt1.c0)))))OR((rt1.c2 IN ()))))OR(((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))) FROM rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT CAST(((rt1.c1)>>(rt1.c2)) AS NUMERIC), COUNT(((rt1.c2)/(rt1.c1))), (((((((((((x''))<((rt1.c0))))AND(((rt1.c1)>(rt1.c0)))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END)))OR(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)), ((((rt1.c0) NOTNULL))OR(((rt1.c2) IS TRUE))), (~ (((rt1.c1)<=(rt1.c1)))) FROM rt1 WHERE (CASE WHEN (((x'66f1')) BETWEEN ((0.7048476943229256)) AND ((NULL))) THEN CAST(x'5de4' AS INTEGER) WHEN (((0.1695785426049483)) NOT BETWEEN ((NULL)) AND ((NULL))) THEN 0xffffffffbe22c284 WHEN x'' THEN (0.934190411024817 IN ('-373197147')) ELSE CAST(x'' AS INTEGER) END); -- 0ms;
SELECT DISTINCT (((rt1.c0 IN ())) IS TRUE), (((rt1.c0)) NOT BETWEEN (((((0.847438001903858)) BETWEEN (('')) AND ((rt1.c0))))) AND ((rt1.c2))), (((CASE WHEN NULL THEN rt1.c0 END))<=((rt1.c1))) FROM rt1; -- 0ms;
SELECT ALL 0.9782659510893447 FROM rt1; -- 0ms;
SELECT ALL rt1.c0 FROM rt1 WHERE (CAST(0.36000955305521765 AS REAL)) GROUP BY (+ (CAST(rt1.c0 AS TEXT))), (CASE WHEN '-2074403070' THEN rt1.c2 ELSE rt1.c2 END IN ()), ((NULL) BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(rt1.c1))) AND (((((x'53ae')AND(rt1.c1)))AND(rt1.c0)))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT (((rt1.c0, rt1.c0, rt1.c1))>((rt1.c0, rt1.c0, rt1.c0))), 0.7574706732650811) FROM rt1 GROUP BY UPPER(DISTINCT (NOT (rt1.c0))), (((rt1.c2, rt1.c1, rt1.c0, rt1.c2, rt1.c0)) BETWEEN (((+ (rt1.c0)), CAST(NULL AS INTEGER), ((rt1.c2) BETWEEN (rt1.c2) AND ('-326763336')), ((rt1.c0)/(rt1.c1)), (rt1.c1 IN ()))) AND ((rt1.c2 COLLATE BINARY, 0.619075035098255, CAST(0.4421623255879472 AS TEXT), (((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))), ((rt1.c1)|(rt1.c2))))), CASE CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END  WHEN ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)) THEN CASE WHEN rt1.c2 THEN rt1.c0 END ELSE (1584239167 IN ()) END HAVING (((0.30759211848025125, ((rt1.c2)<<(rt1.c0)), NULL))<=((CAST(NULL AS INTEGER), SUM(rt1.c1), rt1.c0 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c1 AS BLOB)) BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))) AND ((0.8731926256111129 IN ()))) FROM rt1 WHERE ((((CAST(NULL AS TEXT)))<>((((-1397642782) NOT NULL))))) ORDER BY ((((rt1.c1)LIKE(rt1.c0))) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 END) AND (rt1.c2)) DESC, ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)) COLLATE RTRIM ASC; -- 1ms;
SELECT ALL ((('m', NULL, rt1.c2)) BETWEEN ((CAST(rt1.c2 AS TEXT), SUM(rt1.c0), LENGTH(rt1.c2))) AND ((CASE rt1.c0  WHEN rt1.c2 THEN x'' WHEN rt1.c2 THEN 0.7068658494899366 WHEN rt1.c1 THEN rt1.c0 END, (((x''))>=((rt1.c2))), ((((((((rt1.c1)OR('♥-Tbp')))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c0))))) FROM rt1 ORDER BY rt1.c2 DESC LIMIT 2124240654 OFFSET 1434539056; -- 0ms;
SELECT DISTINCT (0.8036483177588339 IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT AVG(CASE rt1.c2  WHEN rt1.c0 THEN '	]' WHEN NULL THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END) OVER (), PERCENT_RANK() OVER ( ORDER BY (+ (((rt1.c1)GLOB(rt1.c0))))  NULLS FIRST), ((((GROUP_CONCAT(rt1.c1))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt1.c1)IS(rt1.c2)))) FROM rt1 WHERE (CAST((0.355600171860053 IN ()) AS REAL)); -- 0ms;
SELECT ((((((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(((rt1.c0) NOTNULL))))OR(rt1.c0 COLLATE BINARY)), (- ((((rt1.c2, rt1.c2, rt1.c2))>=((0x41ff87b2, rt1.c1, rt1.c2))))), rt1.c0 FROM rt1 WHERE (CAST(((x'') IS TRUE) AS TEXT)); -- 0ms;
SELECT DISTINCT '1826180406' FROM rt1 LIMIT -1112868999 OFFSET -1775687138; -- 0ms;
SELECT CAST((+ (rt1.c2)) AS BLOB) FROM rt1 WHERE ((((('186187190') NOT NULL)) ISNULL)); -- 0ms;
SELECT ALL CUME_DIST() OVER ( ORDER BY ((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2))) IS TRUE)) FROM rt1; -- 0ms;
SELECT DISTINCT (('1207025093')IS(rt1.c0 COLLATE NOCASE)) FROM rt1 WHERE ((((CAST(0.6374878114846346 AS REAL), (- ('1943373755')), ((477267348)||('1990710839'))))>=((((((((((0x62dcdff6)OR('-1441084165')))OR(NULL)))AND(NULL)))AND(6.84208389E8)), CAST('-1016626916' AS INTEGER), SQLITE_VERSION())))); -- 1ms;
SELECT DISTINCT (rt1.c2 IN (rt1.c0, rt1.c1)) COLLATE BINARY FROM rt1 ORDER BY (((rt1.c1) ISNULL) IN (CAST(rt1.c2 AS TEXT))) DESC, CASE CAST(rt1.c1 AS BLOB)  WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c1) IS FALSE) ELSE ((rt1.c2)LIKE(0X271106b2)) END DESC  NULLS LAST; -- 0ms;
SELECT ((COUNT(*))LIKE(((rt1.c2)IS(rt1.c0)))) FROM rt1; -- 0ms;
SELECT DISTINCT CAST((rt1.c0 IN ()) AS REAL) FROM rt1; -- 0ms;
SELECT ALL ((CAST(rt1.c1 AS REAL)) BETWEEN (AVG(rt1.c1)) AND (UNICODE(rt1.c1))) FROM rt1 GROUP BY CASE ((((rt1.c2)AND(rt1.c0)))AND(x''))  WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) THEN CAST(rt1.c2 AS TEXT) WHEN (rt1.c2 IN ()) THEN ((rt1.c0) IS FALSE) WHEN (rt1.c1 IN ()) THEN ((((x'')OR(rt1.c1)))OR(rt1.c2)) ELSE (NOT (0x5aca44d0)) END HAVING NULLIF(DISTINCT (rt1.c1 IN ()), (rt1.c0 IN (rt1.c0))); -- 0ms;
SELECT ((((rt1.c2)-(x''))) BETWEEN (((rt1.c1)>(rt1.c0))) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) FROM rt1 ORDER BY ((((rt1.c0) IS FALSE))<=((NOT (rt1.c0))))  NULLS FIRST; -- 0ms;
SELECT ALL (((rt1.c2 IN ()))-(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))) FROM rt1 WHERE (((((0.8518424893215524)!=(''))) NOT BETWEEN ((('[M^^Rᒼ') BETWEEN (NULL) AND (NULL))) AND (CAST(x'' AS TEXT)))); -- 1ms;
SELECT ALL (((~ ('839393190'))) NOT NULL), '1551899299', (+ (HEX(rt1.c2))) FROM rt1 WHERE (CASE WHEN ((1171366800) BETWEEN (NULL) AND (x'a3c7')) THEN (('25584348') ISNULL) ELSE (('J~g{KM ') ISNULL) END); -- 0ms;
SELECT ((((((rt1.c1)>=(rt1.c1)))OR(CAST(rt1.c0 AS BLOB))))OR((NOT (rt1.c0)))) FROM rt1; -- 0ms;
SELECT '-2046119994' FROM rt1; -- 0ms;
SELECT ALL (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) COLLATE BINARY FROM rt1 WHERE (TRIM(((x'') IS TRUE))) LIMIT 1610449234 OFFSET 1146764072; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE (0.4053146303492734); -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c1) BETWEEN ('-1376473601') AND (rt1.c2))))>(((((rt1.c2))<>((rt1.c1)))))) FROM rt1 LIMIT 379281571; -- 0ms;
SELECT DISTINCT ((LIKELY(rt1.c2)) BETWEEN (0.8410081941404506 COLLATE BINARY) AND (TOTAL_CHANGES())) FROM rt1; -- 1ms;
SELECT ALL COUNT(0Xffffffffc72d14ee) OVER () FROM rt1 WHERE ((((((((((('-293101930')AND(-1932931863)))AND(NULL)))AND(0.502797668727821)))AND(x'f42a'))) NOT BETWEEN (CAST('<>-?ﰢ' AS REAL)) AND ((((((((('l⺈m^4ᑘظ')OR(x'')))AND('-1695251656')))AND(x'')))AND('-417672668'))))); -- 0ms;
SELECT CASE WHEN (((rt1.c1))<=((rt1.c0))) THEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END WHEN (rt1.c1 IN ()) THEN rt1.c0 COLLATE RTRIM WHEN ((x'') IS TRUE) THEN (NOT (rt1.c2)) ELSE AVG(rt1.c0) END FROM rt1 ORDER BY ((((rt1.c2)!=(rt1.c1))) NOTNULL); -- 0ms;
SELECT ((CASE NULL  WHEN rt1.c2 THEN rt1.c0 END)IS NOT(((rt1.c1)>>(NULL)))) FROM rt1 NOT INDEXED WHERE ((((('0.10357403540207066') ISNULL)) IS TRUE)); -- 0ms;
SELECT ALL TOTAL(((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))) OVER ( ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN 'dqO\r3/鵹Qg' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END AS REAL), CAST((+ (rt1.c0)) AS REAL) ASC  NULLS FIRST, ((rt1.c0) IS FALSE)  NULLS FIRST) FROM rt1 WHERE ((((((((('684208389')AND(NULL)))AND(x'1f6071e0')))AND((NULL IN (x'')))))OR(((NULL) NOT BETWEEN (x'') AND (NULL))))); -- 1ms;
SELECT ALL (NOT ((rt1.c1 IN ()))) FROM rt1 ORDER BY ((((((((((rt1.c0)+(rt1.c2)))AND(((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))))OR(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END)))AND((('-1968870182')<=(rt1.c1)))))AND((((NULL, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((0.37743474712434166, rt1.c1, rt1.c0))))) ASC  NULLS FIRST, LIKELY(DISTINCT (rt1.c1 IN ())), (((((rt1.c2, rt1.c1, rt1.c2))>=((rt1.c0, rt1.c0, rt1.c2)))) NOT BETWEEN (x'') AND (((rt1.c2)||(rt1.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt1.c2 IN (rt1.c0)))LIKE((~ (rt1.c2)))), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE BINARY COLLATE BINARY, (((rt1.c2) NOTNULL) IN ()), CASE rt1.c1 COLLATE BINARY  WHEN (rt1.c1 IN ()) THEN rt1.c1 COLLATE NOCASE WHEN COALESCE(0.7168184214609373, rt1.c2, rt1.c0, rt1.c2) THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) WHEN IFNULL(rt1.c2, rt1.c0) THEN rt1.c1 END, CAST(((rt1.c2)LIKE(rt1.c1)) AS TEXT) FROM rt1 WHERE ((((+ (x''))) NOT BETWEEN ('') AND (CAST(NULL AS INTEGER)))) LIMIT 1320616826 OFFSET -277431746; -- 0ms;
SELECT (- (((rt1.c2)>(rt1.c0)))), 0Xffffffffadf4adff, (+ (COUNT(*))) FROM rt1 WHERE (CASE WHEN '1016153210' THEN x'' ELSE x'709b' END COLLATE RTRIM) ORDER BY (((SQLITE_COMPILEOPTION_USED('[0\n/g0Od(')))<((((rt1.c1) NOTNULL))))  NULLS FIRST; -- 0ms;
SELECT (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))<=(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)) FROM rt1 WHERE (json_extract(ABS(DISTINCT x''), (x'' IN ())));SELECT ALL ((rt1.c1) NOT NULL) FROM rt1 WHERE (((CASE WHEN 1068573882 THEN NULL WHEN '-1578150618' THEN x'14b0' WHEN NULL THEN NULL WHEN '1998192536' THEN 0.87796973967263 WHEN x'' THEN x'' ELSE x'6e8e' END) NOTNULL)); -- 0ms;
SELECT DISTINCT UPPER(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) FROM rt1 WHERE (((((((NULL) NOT BETWEEN (NULL) AND ('0.47923999816858043')))OR(((x'') NOT NULL))))AND(CASE 'NV\'  WHEN NULL THEN NULL END))); -- 0ms;
SELECT DISTINCT (((rt1.c1)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((rt1.c2))) FROM rt1 WHERE (((((1.418123054E9) NOTNULL)) NOT BETWEEN (((NULL)<=(NULL))) AND (((NULL) BETWEEN (x'') AND ('O劫'))))); -- 0ms;
SELECT DISTINCT CASE (rt1.c0 IN (rt1.c2))  WHEN ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)) THEN CASE rt1.c0  WHEN '725378249' THEN rt1.c2 END END FROM rt1 WHERE ((((('puj픤)dlE') IS FALSE)) NOTNULL)) GROUP BY TYPEOF(DISTINCT rt1.c2); -- 1ms;
SELECT ALL ((COUNT(*))<=(NULL)) FROM rt1 WHERE (((((0Xffffffffee879e96 COLLATE RTRIM)AND(((0X47f1bdc5) NOT BETWEEN ('-1441084165') AND (881957179)))))OR(((x'')AND(NULL))))); -- 0ms;
SELECT x'', ((((rt1.c0))=((x''))) IN (AVG(rt1.c0), (rt1.c2 IN (rt1.c1, rt1.c1)))), CAST(rt1.c1 COLLATE BINARY AS BLOB) FROM rt1; -- 0ms;
SELECT ALL (((TOTAL(rt1.c2)))>=((((0.9172781771452764)/(rt1.c2))))), ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END) BETWEEN (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN 1327032634 THEN rt1.c1 WHEN '-338049641' THEN rt1.c1 END) AND (((('7X')) BETWEEN ((rt1.c2)) AND ((rt1.c2))))), rt1.c0 COLLATE RTRIM, CASE WHEN (- (rt1.c1)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END, FIRST_VALUE(CAST('1826325500' AS BLOB)) OVER () FROM rt1; -- 0ms;
SELECT ((((((rt1.c0)==(rt1.c2)))AND(((rt1.c2)|(rt1.c1)))))AND(CAST(rt1.c2 AS BLOB))), MAX(TOTAL(rt1.c0), (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)), IFNULL(DISTINCT x'', rt1.c2)), (((((rt1.c0))<((rt1.c1)))) BETWEEN (x'') AND (x'')) FROM rt1 WHERE ((((+ (NULL)))+((+ (x'02b5'))))); -- 0ms;
SELECT DISTINCT ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))>>(((rt1.c0) NOTNULL))) FROM rt1 WHERE ((NOT ((((('H')OR(x'')))OR('1826325500'))))); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))/(UPPER(rt1.c2))) FROM rt1; -- 0ms;
SELECT DISTINCT ((CAST(NULL AS REAL)) NOT BETWEEN (COALESCE(rt1.c0, rt1.c0)) AND (((rt1.c2) IS FALSE))) FROM rt1; -- 0ms;
SELECT DISTINCT (((- (0x1c728594)))|((rt1.c2 IN ()))) FROM rt1; -- 0ms;
SELECT (((NOT (rt1.c2)))=('')) FROM rt1 WHERE ('976930970'); -- 0ms;
SELECT ALL x'e571' FROM rt1; -- 0ms;
SELECT DISTINCT MAX(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))), DENSE_RANK() OVER (), (CAST(rt1.c1 AS TEXT) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT (+ (rt1.c0)) FROM rt1 WHERE (CAST((('g<f늠+R赦n') ISNULL) AS NUMERIC)); -- 1ms;
SELECT DISTINCT rt1.c0 FROM rt1; -- 0ms;
SELECT (((rt1.c2)) BETWEEN ((SUM(rt1.c1))) AND ((((((rt1.c0)AND(NULL)))OR(rt1.c0))))) FROM rt1 WHERE (((CASE WHEN 0.1930954885079471 THEN '1297256984' WHEN 0.18347281564057605 THEN x'1b59' WHEN x'' THEN 0.2405595863631511 END)GLOB(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT CAST(('1622387431' IN ()) AS BLOB) FROM rt1 WHERE ((((x'' IN ())) IS FALSE)) GROUP BY CASE CASE WHEN rt1.c1 THEN rt1.c1 END  WHEN (((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c1))) THEN (('-2127856389')*(rt1.c1)) WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((rt1.c1) NOTNULL) WHEN ((((((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)) THEN '1589480763' END, rt1.c0, (~ (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) HAVING ((rt1.c0) ISNULL); -- 0ms;
SELECT (((((rt1.c1)<=(rt1.c1))))<=((x''))), ((rt1.c0 IN ()) IN ()), CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN rt1.c2 WHEN ((rt1.c0)+(rt1.c2)) THEN 0.8690962339584193 WHEN ((((((((rt1.c2)AND(932845152)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)) THEN CAST(rt1.c0 AS BLOB) END FROM rt1; -- 0ms;
SELECT ALL ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END) AND (GROUP_CONCAT(rt1.c2))) FROM rt1; -- 0ms;
SELECT x'' FROM rt1 WHERE (((((((1652618865)AND(x'')))OR(x'5fce70ad'))) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST(((((rt1.c0)AND('0.8887544494218257')))AND(rt1.c0)) AS INTEGER) FROM rt1 WHERE (CASE WHEN ((x'bfbc1e44') NOT BETWEEN ('-1952050273') AND (1364838870)) THEN CAST('' AS TEXT) ELSE ((x'') NOT BETWEEN ('-2046119994') AND (0.6670136220995809)) END); -- 0ms;
SELECT ALL ((rt1.c1)/(rt1.c0)) COLLATE BINARY, ((PRINTF(rt1.c2))=(((rt1.c0)<(rt1.c2)))), NULL COLLATE NOCASE FROM rt1; -- 0ms;
SELECT DISTINCT (+ (((rt1.c1)IS(rt1.c2)))), ((rt1.c2 COLLATE RTRIM) NOT BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))) AND (((627274895) NOT BETWEEN (NULL) AND (0.8187880709967248)))), AVG(CASE WHEN rt1.c1 THEN rt1.c0 END) OVER ( ORDER BY CAST(((rt1.c1)>>(rt1.c2)) AS REAL)  NULLS LAST) FROM rt1; -- 0ms;
SELECT DISTINCT (((NULL, TOTAL(rt1.c0), rt1.c2 COLLATE BINARY))<=((MAX(rt1.c2), (((rt1.c2, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, '', rt1.c2)) AND ((rt1.c0, rt1.c1, NULL))), rt1.c1))) FROM rt1 WHERE (x'02db') GROUP BY LOWER(DISTINCT ((rt1.c0)GLOB(rt1.c1))); -- 1ms;
SELECT ALL SQLITE_SOURCE_ID(), CASE CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END  WHEN ((((((((rt1.c1)OR(rt1.c2)))OR(x'1d3a071c')))AND(rt1.c1)))AND(rt1.c0)) THEN ((rt1.c0)IS NOT(rt1.c0)) WHEN (((rt1.c0, rt1.c1, rt1.c2))<((x'', rt1.c2, rt1.c2))) THEN (rt1.c1 IN ()) WHEN (x'' IN ()) THEN CAST(NULL AS TEXT) WHEN (NOT (rt1.c2)) THEN ((rt1.c2) BETWEEN ('(d') AND (rt1.c0)) WHEN rt1.c0 THEN (((rt1.c1, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c0, 1.846402535E9))) ELSE CASE WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END END, ((- (0.5100092068887341)) IN (JULIANDAY(rt1.c0, rt1.c0, rt1.c1))) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(((rt1.c0) NOT NULL)) FILTER(WHERE ((((-267538362)OR(823182385)))AND(rt1.c0)) COLLATE BINARY) OVER () FROM rt1; -- 0ms;
SELECT ALL GROUP_CONCAT(rt1.c1) FROM rt1 ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN (TYPEOF(NULL)) AND (rt1.c1)) ASC; -- 0ms;
SELECT COALESCE(DISTINCT TRIM(rt1.c0), rt1.c1 COLLATE NOCASE, '2128867085', ((rt1.c1)GLOB(rt1.c1))) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c1, CASE rt1.c2 COLLATE NOCASE  WHEN ((rt1.c1)||(rt1.c0)) THEN rt1.c1 ELSE ((rt1.c2) IS TRUE) END, ((((rt1.c2 COLLATE RTRIM)OR(CASE WHEN rt1.c2 THEN rt1.c0 END)))OR(((0.44474933219539403) ISNULL))) FROM rt1 WHERE ((((((x'241bce66', 'r', x''))>(('0.7112340208676706', NULL, '725378249')))) BETWEEN ((('')<=(0.619075035098255))) AND (('' IN (NULL))))); -- 0ms;
SELECT DISTINCT (NOT (CAST(rt1.c1 AS TEXT))) FROM rt1 WHERE (CAST(CASE WHEN x'' THEN NULL END AS NUMERIC)); -- 0ms;
SELECT ALL rt1.c2 FROM rt1 WHERE (((((((((((NULL)/(NULL)))AND((+ (x'')))))AND(CAST('-1791079281' AS NUMERIC))))OR((- (0.41265323318292946)))))AND((('') ISNULL)))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c1)||(rt1.c2)) AS TEXT) FROM rt1; -- 0ms;
SELECT DISTINCT (((NOT ('')))=((NOT (rt1.c2)))) FROM rt1 WHERE (CASE (('-1441084165')-(0.529955454789088))  WHEN (- (NULL)) THEN (~ (0.06280106530727203)) WHEN ('1207025093' IN ()) THEN (- (0Xffffffff9ffea091)) WHEN (('-2121133340') IS FALSE) THEN TYPEOF(DISTINCT 0.6686377033469092) END); -- 0ms;
SELECT DISTINCT json_array(QUOTE(rt1.c1), rt1.c2 COLLATE NOCASE), (((rt1.c0)) NOT BETWEEN (((('a*')|(rt1.c0)))) AND ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))), AVG(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))) FROM rt1; -- 0ms;
SELECT ALL rt1.c1 FROM rt1 WHERE (((0.3280398205410441 COLLATE NOCASE)<('*|9E' COLLATE BINARY))); -- 1ms;
SELECT ALL ((((rt1.c1)-(rt1.c2))) NOT BETWEEN ((rt1.c0 IN ())) AND (rt1.c2)) FROM rt1 WHERE ((((('톥u')%(-37513806)))GLOB((NOT (x''))))); -- 0ms;
SELECT DISTINCT HEX(DISTINCT UPPER(DISTINCT rt1.c1)) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))>=(rt1.c1 COLLATE RTRIM)) FROM rt1 WHERE (LOWER(DISTINCT (((((((('j?0*J')AND(0X387a04db)))AND('0.09115565875104426')))OR('0.824432607172677')))AND('<>-?ﰢ')))) LIMIT -248320440 OFFSET 1846402535; -- 0ms;
SELECT DISTINCT (NOT (((NULL) NOT NULL))) FROM rt1; -- 0ms;
SELECT (((TOTAL(x'ee0e')))<=((LOWER(rt1.c1)))) FROM rt1; -- 0ms;
SELECT NULL, ((((rt1.c1, rt1.c2, rt1.c2))<>((rt1.c0, rt1.c2, rt1.c1))) IN ()), (((- (rt1.c2))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))), RANK() OVER ( PARTITION BY (((~ (rt1.c0)))%(CAST(rt1.c1 AS INTEGER))), ((((((rt1.c0, rt1.c2, rt1.c0))=((rt1.c2, 0.9030296495991408, rt1.c1)))))<>((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))), ((0Xffffffff84dee776) IS TRUE) COLLATE NOCASE, CASE WHEN ((rt1.c0)OR(rt1.c0)) THEN CAST(rt1.c2 AS NUMERIC) ELSE TOTAL(rt1.c0) END, (+ ((rt1.c2 IN ()))) FROM rt1; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)), 0.3010329420347757) FROM rt1 WHERE (((0.43477380972375523) ISNULL) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT (+ (((rt1.c0) NOTNULL))), ((NULLIF(DISTINCT rt1.c2, rt1.c2))IS(rt1.c1 COLLATE RTRIM)), ((rt1.c2) ISNULL) FROM rt1 WHERE (CASE x'44da'  WHEN NULL THEN -1334572905 ELSE x'' END COLLATE RTRIM) ORDER BY (+ (CASE WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END))  NULLS FIRST, CAST(rt1.c2 AS INTEGER) COLLATE RTRIM DESC, 0.1148418293143727 COLLATE NOCASE DESC; -- 0ms;
SELECT DISTINCT rt1.c1, '1448634592', ((NULL)<=(NULL)) FROM rt1 WHERE (((((TRIM(DISTINCT NULL, x''))OR(((NULL)/('-463958638')))))OR(CASE WHEN x'111d' THEN 0.11078509643489254 WHEN NULL THEN 0X5603707c WHEN NULL THEN NULL WHEN 1090118851 THEN '0.40897892913313316' WHEN -6.24619884E8 THEN '0.7562704323275583' ELSE NULL END))); -- 0ms;
SELECT ALL (NOT (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)), COUNT((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2)))), (((x'') NOT BETWEEN (rt1.c2) AND (rt1.c0)) IN ()) FROM rt1 WHERE (((0.33145023106012783)-(0.0)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (STRFTIME(rt1.c2, rt1.c1, rt1.c2, rt1.c0, rt1.c2) IN ()) FROM rt1; -- 0ms;
SELECT ((((((((((rt1.c2)+('')))OR((((rt1.c1))>((rt1.c2))))))AND(MAX(rt1.c0))))OR(((rt1.c2)/(rt1.c1)))))AND(CAST(rt1.c2 AS NUMERIC))) FROM rt1 WHERE (((-1766962925) NOT BETWEEN (json('356443586')) AND (((0Xffffffffd51a8fd9)OR(NULL))))) LIMIT -463958638 OFFSET 1010693743; -- 0ms;
SELECT DISTINCT ((((NULL)AND(rt1.c1))) NOT NULL), ((((((rt1.c0)GLOB(rt1.c0)))OR(SUM(rt1.c1))))OR(0.22368169029455465)), (- (((rt1.c0)-(rt1.c1)))) FROM rt1; -- 0ms;
SELECT ((TOTAL(rt1.c0)) NOT NULL) FROM rt1 WHERE (((x'b927' COLLATE RTRIM)IS NOT((((x'', NULL, NULL, NULL, 1.418123054E9))<=((x'', 0.5799894342229105, '-1942886676', -1034449543, NULL)))))); -- 1ms;
SELECT DISTINCT ((CAST(rt1.c2 AS BLOB)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c1)|(rt1.c0)))), CASE (rt1.c2 IN (rt1.c0))  WHEN (((rt1.c1))=((rt1.c0))) THEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)) ELSE LOWER(rt1.c2) END, GLOB(UPPER(DISTINCT rt1.c0), CAST(rt1.c2 AS TEXT)) FROM rt1 WHERE (ROUND((+ (0.3168178810062374)), '-1566687470')); -- 0ms;
SELECT (((rt1.c1 IN ())) NOT BETWEEN (rt1.c0) AND ((- (rt1.c2)))) FROM rt1 WHERE (((((((((((((json_valid('xG'))AND(((x'9872') ISNULL))))OR(NULL COLLATE NOCASE)))OR(-37513806)))AND('-1911411313')))OR(((0.06977317564353613)IS(NULL)))))AND((~ (x'bc60'))))); -- 0ms;
SELECT CAST('-2065766538' AS REAL) FROM rt1 WHERE ((((0.684297383334986)) NOT BETWEEN ((x'')) AND ((1.01615321E9))) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT DISTINCT LAG(SQLITE_COMPILEOPTION_USED(rt1.c1 COLLATE RTRIM), '\rY', CAST(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END AS BLOB)) OVER (), CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS TEXT), (CASE rt1.c1  WHEN 'O}' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END IN ()) FROM rt1 NOT INDEXED; -- 1ms;
SELECT (rt1.c1 COLLATE NOCASE IN ()) FROM rt1 WHERE (ABS(((NULL) ISNULL))); -- 0ms;
SELECT LAG(((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END) NOT BETWEEN ('1074729041') AND (((rt1.c1) NOT NULL))), NULLIF(((rt1.c0)*(rt1.c2)), ((((rt1.c2)AND(rt1.c2)))AND(rt1.c1))), x'4c55' COLLATE BINARY) OVER () FROM rt1 WHERE (((((0.07900428235420875 IN ()), ((x'2c55')IS('哨>')), 'X	e-\n', x'', (~ (x''))))<=((((NULL) NOT BETWEEN ('471256782') AND (0x3a36d501)), CASE ''  WHEN x'4f0f' THEN x'' END, ((((NULL)AND(0.30549791105913493)))OR(x'')), CAST('*!''oZ6' AS INTEGER), -1551247911)))) ORDER BY (((((rt1.c2, rt1.c0, rt1.c0))<((rt1.c1, rt1.c2, rt1.c1)))) NOT NULL) ASC; -- 0ms;
SELECT ALL ((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE, CAST(0.5414268696418604 AS NUMERIC), (rtreenode(rt1.c1, rt1.c1) IN ()) FROM rt1 WHERE ((((~ (NULL)))OR((x'' IN ())))); -- 0ms;
SELECT DISTINCT SUM(CASE '-703398520'  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END) OVER () FROM rt1 WHERE ((((CASE '0.6731172106293634'  WHEN 0.3586381299141719 THEN 0x6399d990 WHEN NULL THEN '645055988' WHEN 0.275456159736152 THEN 0Xffffffffaacac83d ELSE x'5c4c' END))>((HEX(NULL))))); -- 1ms;
SELECT ((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1))) NOT BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(rt1.c0))) AND ((+ (998057748)))), NULL, ((QUOTE(x'05fd'))<<(rt1.c2 COLLATE NOCASE)), (((rt1.c0 IN ())) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (NULL)), ((((rt1.c0)>(rt1.c0))) ISNULL) FROM rt1 WHERE (CAST('?' AS REAL) COLLATE RTRIM) ORDER BY (~ (LIKELY(DISTINCT rt1.c1)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (NOT (CAST(NULL AS REAL))), (- (CAST(rt1.c0 AS REAL))), (((((rt1.c0))<>((rt1.c2))))%(((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)))) FROM rt1 WHERE (CASE WHEN x'' THEN -1156991665 END COLLATE NOCASE); -- 0ms;
SELECT ALL CASE rt1.c0 COLLATE BINARY  WHEN (((rt1.c2, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c0))) THEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END END FROM rt1 WHERE (((0.47640852387959454 COLLATE RTRIM)GLOB(((NULL) NOT BETWEEN ('-84259128') AND (x''))))) LIMIT -624619884; -- 0ms;
SELECT DISTINCT (((('1551899299')GLOB(rt1.c2)))GLOB(rt1.c1 COLLATE NOCASE)) FROM rt1 LIMIT -1770528150; -- 1ms;
SELECT ALL MAX(rt1.c1, rt1.c1), ((AVG(118472315))GLOB(rt1.c1 COLLATE RTRIM)), TOTAL(NULLIF(DISTINCT rt1.c1, rt1.c2)) FROM rt1 WHERE ('1175257358') GROUP BY rt1.c2; -- 0ms;
SELECT DISTINCT SUBSTR(((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)), ((x'') IS FALSE)) FROM rt1 WHERE (((((((((((((x'' COLLATE BINARY)OR(-966653375 COLLATE BINARY)))AND(0xffffffffa4f17de6)))AND(((((NULL)OR(x'')))OR(x'0383')))))AND((('.G') NOT NULL))))OR(((NULL)LIKE(NULL)))))AND(('T弧s 뱉' IN ())))); -- 0ms;
SELECT ALL ((SUBSTR(rt1.c2, rt1.c0))AND(x'')) FROM rt1 WHERE (((((((((((NULL)/(88687949)))OR(((((((((((((0x7a154803)AND(0xffffffffe7b1ddac)))OR(NULL)))OR('')))AND('0.19065397527976347')))OR(0.22696348837498503)))AND(-1.495186765E9)))))AND(CAST(x'0452' AS REAL))))AND((x'' IN ()))))AND((+ (0x53dc980d))))); -- 0ms;
SELECT ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)<<(rt1.c0 COLLATE NOCASE)), rt1.c0, ((((((((CAST(rt1.c1 AS NUMERIC))AND(((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))))OR(0x2b3c64c9)))OR(((rt1.c2)|(NULL)))))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) FROM rt1 WHERE ((((((x'' IN ()))OR(((5.00753221E8)<('2110163713')))))OR(('|u\nU ' IN ())))); -- 0ms;
SELECT ALL TOTAL_CHANGES() FROM rt1 WHERE (((((((((((((((208129487)AND(NULL)))AND(((((((((0.7249298113765714)AND(x'')))OR(x'ffd9')))AND('PQ&F]')))OR('0.9500350073881696')))))AND(CASE WHEN x'' THEN 0X2a3f964d ELSE '-1428123943' END)))OR(((NULL) BETWEEN (NULL) AND ('YRn4EQ u')))))AND(HEX(NULL))))AND((('-1016626916')>=(NULL)))))OR(TIME('-953346834', x'f6d27e8f', 2.124240654E9, x'78ed5737', NULL)))) ORDER BY (+ (TRIM(rt1.c2, rt1.c1))) ASC  NULLS LAST; -- 0ms;
SELECT ALL highlight((((-1495186765)) BETWEEN ((rt1.c2)) AND ((rt1.c1))), CAST(rt1.c2 AS REAL), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)), (rt1.c1 IN ())) FROM rt1;SELECT ALL TOTAL(CASE rt1.c1  WHEN rt1.c1 THEN 0.6862876889999603 ELSE rt1.c1 END) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt1.c0) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT (((rt1.c1))>=((rt1.c1)))) FROM rt1 WHERE (((CASE WHEN 1.551899299E9 THEN '341217090' END) BETWEEN (CAST(0.12783537796734024 AS TEXT)) AND (0.18347281564057605 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((rt1.c2, rt1.c0, rt1.c2)) BETWEEN (('', ((rt1.c1) NOT NULL), ((rt1.c0) ISNULL))) AND ((rt1.c2 COLLATE NOCASE, ((rt1.c0)*(rt1.c2)), ((rt1.c2) IS FALSE)))) FROM rt1 WHERE ((('874475018' IN ('[<D__*u%', 0.904324829597201)) IN (CAST(NULL AS BLOB)))); -- 0ms;
SELECT ALL (((x'')) NOT BETWEEN (((~ (rt1.c1)))) AND ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))) FROM rt1 WHERE (((CAST(NULL AS REAL))|(x''))) LIMIT 614859826; -- 0ms;
SELECT DISTINCT ((((((rt1.c0)<=(rt1.c0)))OR(x'')))AND(CASE '0.10172220835609391'  WHEN rt1.c0 THEN rt1.c2 END)) FROM rt1 NOT INDEXED WHERE ((((('') IS FALSE)) NOT NULL)) ORDER BY 0.5154481746227952 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT json_remove(((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)), (('')IS NOT(rt1.c2)), '', rt1.c0) FROM rt1 WHERE ((((NULL IN (0.9457752330609375))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((rt1.c2))>((rt1.c2))) COLLATE NOCASE FROM rt1 WHERE (0.7166102438298402); -- 0ms;
SELECT DISTINCT NULLIF(((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)), ((rt1.c2)OR(rt1.c1))) FROM rt1; -- 0ms;
SELECT rt1.c2, ((rt1.c2) IS TRUE), (- (rt1.c2 COLLATE BINARY)), ((rt1.c2)==(((rt1.c2)&(rt1.c2)))), ((((CAST(x'9364' AS BLOB))AND(rt1.c1 COLLATE NOCASE)))OR(rt1.c0 COLLATE RTRIM)) FROM rt1 WHERE (('1048109036' IN ()) COLLATE BINARY) GROUP BY CAST((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) AS TEXT) HAVING ((((rt1.c0)>>(rt1.c2))) NOT NULL); -- 0ms;
SELECT ALL (- (((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))) FROM rt1; -- 0ms;
SELECT ALL CASE WHEN ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)) THEN (((rt1.c1))!=((rt1.c0))) ELSE rt1.c1 END FROM rt1; -- 0ms;
SELECT DISTINCT '-291583196', ((CAST(rt1.c0 AS INTEGER)) NOT BETWEEN (((rt1.c2)=(rt1.c1))) AND ('0.4885271316674854')), ((((((((((NULL) IS FALSE))OR(((rt1.c1)IS NOT(rt1.c2)))))OR(rt1.c1)))AND((((rt1.c2, '417930436', rt1.c2))==((rt1.c2, rt1.c2, rt1.c0))))))AND(DATE(rt1.c1, rt1.c0, rt1.c2))) FROM rt1 WHERE (4.27843486E8); -- 0ms;
SELECT DISTINCT (((rt1.c0 IN ())) IS TRUE), SUM((((rt1.c1))!=((rt1.c2)))) OVER (), (+ (CAST(rt1.c2 AS REAL))) FROM rt1 WHERE (((NULL)LIKE(0x668857d0)) COLLATE NOCASE); -- 0ms;
SELECT (~ (((((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c2) NOT NULL)) IS FALSE) FROM rt1 WHERE (x''); -- 1ms;
SELECT DISTINCT ((CAST(rt1.c0 AS NUMERIC)) BETWEEN (((((rt1.c1)AND(NULL)))OR(rt1.c2))) AND (MIN(rt1.c1))) FROM rt1 WHERE (((IFNULL(DISTINCT '830409577', 0.9792804859971322)) IS TRUE)); -- 0ms;
SELECT DISTINCT (((0.10769237272613474)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c1)))) AND ((CASE WHEN rt1.c1 THEN rt1.c2 END))) FROM rt1 WHERE ((NOT (((0.41535331626547056)GLOB(1977595122))))); -- 0ms;
SELECT ALL ((((SQLITE_COMPILEOPTION_USED(rt1.c2))OR((NOT (rt1.c0)))))AND(((rt1.c1)+(rt1.c1)))) FROM rt1 WHERE (CASE WHEN -719679527 COLLATE NOCASE THEN ((((NULL)OR('0.17737945173955394')))AND(NULL)) WHEN (((x''))!=((0.38321369024575613))) THEN ((((((((0.37743474712434166)AND(NULL)))AND('-1420317102')))AND(x'')))OR(x'83a1')) WHEN (('-832814647')&('O')) THEN NULLIF(x'', NULL) ELSE ((NULL)==(x'')) END); -- 0ms;
SELECT DISTINCT (~ (SQLITE_COMPILEOPTION_USED(rt1.c1))) FROM rt1 GROUP BY CAST(UPPER(rt1.c2) AS INTEGER), CAST(((rt1.c0)==(rt1.c1)) AS NUMERIC), ((rt1.c0) IS FALSE), (((((((((rt1.c1 IN (rt1.c0, rt1.c0)))AND((((('O劫')AND(rt1.c1)))OR(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)))OR(NULL)))AND(rt1.c2)), ((((NULLIF(DISTINCT rt1.c1, rt1.c2))AND(((rt1.c1) NOT NULL))))AND(NULL)); -- 0ms;
SELECT DISTINCT ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN 'Ro1' THEN rt1.c0 END)AND(((rt1.c2)*(rt1.c0)))))OR(UPPER(rt1.c2))) FROM rt1 WHERE (((((0.04733082791504439))>=((x''))) IN ((('188312839') ISNULL)))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt1; -- 0ms;
SELECT ALL (((rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM)) AND (((((rt1.c2))=((rt1.c2)))))), '0.5498080078169717', TYPEOF((- (rt1.c2))) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c2) IS TRUE) IN ()), MAX(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))), CASE WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c2) ISNULL) ELSE ((rt1.c2)+(rt1.c2)) END FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>((((rt1.c2))==((rt1.c2))))) FROM rt1 LIMIT -1004979307; -- 0ms;
SELECT DISTINCT (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) IN ((0.6869003145299627 IN ()), CASE rt1.c2  WHEN '1855067421' THEN rt1.c0 ELSE rt1.c2 END)) FROM rt1 WHERE ((((~ (0X3e76b300)))*(x''))); -- 0ms;
SELECT DISTINCT CAST(rt1.c0 COLLATE RTRIM AS TEXT) FROM rt1; -- 0ms;
SELECT (((rt1.c2)) BETWEEN ((((rt1.c2)AND(x'bc55')))) AND ((((rt1.c0)+(rt1.c2))))) FROM rt1 WHERE ((((- (0.049517441217388436)))-('' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt1.c1 IN ())), ((CASE WHEN rt1.c2 THEN NULL END) BETWEEN ((NULL IN (rt1.c0))) AND (CAST(rt1.c1 AS BLOB))), (NOT ('483320355')) COLLATE NOCASE, rt1.c0, CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM FROM rt1 WHERE ((NOT (LOWER('{&#S3IyT')))); -- 0ms;
SELECT (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND (((((rt1.c1, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c2, rt1.c1, NULL)))))) FROM rt1 LIMIT -689939603; -- 0ms;
SELECT DISTINCT LENGTH(((((((((rt1.c0)OR(rt1.c2)))OR(x'7c48')))OR(rt1.c2)))OR(rt1.c2))) FROM rt1 WHERE (((((')m_') BETWEEN (NULL) AND (x'')))IS(((NULL)>=(x'abb2'))))) LIMIT -1829704470 OFFSET -483705813; -- 0ms;
SELECT DISTINCT (((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)) IN (LIKELIHOOD(rt1.c2, 0.20559206323932377))), CASE WHEN CHAR(rt1.c0) THEN AVG(rt1.c0) ELSE GROUP_CONCAT(rt1.c1) END, (~ (CAST(rt1.c2 AS NUMERIC))) FROM rt1 WHERE ('-591006757'); -- 0ms;
SELECT DISTINCT ((((rt1.c2) IS TRUE)) NOT BETWEEN (rt1.c1) AND (CAST(rt1.c0 AS BLOB))), json_array(CAST(rt1.c2 AS REAL), ((rt1.c2)<>(rt1.c2)), 0Xffffffffc3e57923, ((rt1.c2) IS TRUE)), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY FROM rt1 NOT INDEXED; -- 0ms;
SELECT CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c1)-(NULL)) ELSE ((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)) END FROM rt1 WHERE (((('-1400136048' COLLATE NOCASE))>=(((('n1쇷9') BETWEEN (x'') AND (NULL)))))); -- 0ms;
SELECT DISTINCT ((((rt1.c2)>=(rt1.c2))) NOTNULL) FROM rt1; -- 0ms;
SELECT ALL NULL, CAST((rt1.c0 IN (rt1.c1)) AS REAL), ((((rt1.c1)>=(rt1.c0)))<>((((rt1.c1))==((rt1.c2))))), (((('1418123054')OR(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND((rt1.c0 IN ()))), json_object(rt1.c1, rt1.c1, rt1.c2, rt1.c1) COLLATE BINARY FROM rt1 WHERE (((CAST(x'' AS INTEGER))<(((('j圎)')) NOT BETWEEN (('500753221')) AND (('O0WA'))))));SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt1.c0) AND ('0.6849664559091562')))<<((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) FROM rt1 WHERE (0X1038fd1d) ORDER BY CAST(rt1.c1 COLLATE BINARY AS TEXT)  NULLS LAST; -- 0ms;
SELECT ALL ((TOTAL(rt1.c1))<=(rt1.c1)), RANK() OVER (), (((- (rt1.c1)))+(rt1.c2 COLLATE NOCASE)), rt1.c1, RANK() OVER () FROM rt1 WHERE (json_extract(((x'')>(0.5047306332537542)), CAST('' AS BLOB)));SELECT DISTINCT CAST((- (rt1.c0)) AS TEXT) FROM rt1 LIMIT -1818665456 OFFSET 1510787875; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS REAL)) BETWEEN ((+ (rt1.c0))) AND (rt1.c1 COLLATE RTRIM)) FROM rt1 WHERE (TYPEOF(DISTINCT (x'' IN ()))) ORDER BY ((((((rt1.c0)GLOB(rt1.c0)))AND((((('1883560054')OR(rt1.c1)))OR(rt1.c1)))))OR(rt1.c2)) LIMIT -463958638; -- 0ms;
SELECT ALL json_valid(((rt1.c1) ISNULL)) FROM rt1 WHERE ((((x'' IN ())) IS FALSE)); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)<=((- (rt1.c1)))) FROM rt1 ORDER BY (rt1.c0 COLLATE RTRIM IN (rtreenode(rt1.c1, rt1.c2)))  NULLS FIRST, ((LIKELIHOOD(rt1.c2, 0.8298375784149181))|((((rt1.c1))>((rt1.c1))))) DESC, (NULL IN (((rt1.c2) NOTNULL), ((0.4367190837773385) NOTNULL))) DESC  NULLS FIRST; -- 0ms;
SELECT ((((rt1.c0)&(rt1.c0))) NOT NULL) FROM rt1; -- 0ms;
SELECT ALL ((0Xffffffffff5ff8f4) BETWEEN (CASE WHEN rt1.c2 THEN '1310340846' END) AND (((rt1.c2) BETWEEN (rt1.c0) AND (0.20190678659708472)))), (((rt1.c0)) NOT BETWEEN ((LIKE(rt1.c1, rt1.c1))) AND ((CASE WHEN 0.9470124236668764 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 END))), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END COLLATE BINARY FROM rt1; -- 0ms;
SELECT ALL (((((((((rt1.c0)OR('-1991933282')))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)) IN (rt1.c0, ((rt1.c1) IS FALSE))) FROM rt1 WHERE ((NULL COLLATE RTRIM IN ())) GROUP BY (('') NOT BETWEEN (rt1.c1) AND (rt1.c1 COLLATE RTRIM)), x'288c', ((((x'') NOT BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (((rt1.c1)/(rt1.c1))) AND (rt1.c1)) HAVING CASE WHEN ((rt1.c0) NOT NULL) THEN CAST(rt1.c2 AS REAL) WHEN ((rt1.c0)LIKE(rt1.c0)) THEN (rt1.c0 IN (rt1.c2)) WHEN (((rt1.c2))>=((rt1.c1))) THEN CAST(rt1.c2 AS REAL) WHEN ((rt1.c1) NOT NULL) THEN rt1.c2 WHEN ((rt1.c2)>=(-191973123)) THEN NULL END; -- 0ms;
SELECT DISTINCT RTRIM((rt1.c0 IN ())), COUNT(*), (((rt1.c2)) BETWEEN (((- (rt1.c1)))) AND ((-6.63835147E8))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1) IS TRUE)) IS FALSE), (~ (rt1.c2 COLLATE BINARY)), UPPER(DISTINCT (rt1.c1 IN ())) FROM rt1 WHERE (((CASE WHEN x'7a22' THEN NULL WHEN NULL THEN 'a*' WHEN 0.5962279518628248 THEN 0.9804466405040205 WHEN 0.17737945173955394 THEN x'' WHEN 0.0586953244471099 THEN NULL END) BETWEEN (((0x716f700e) BETWEEN (x'4d2f') AND (NULL))) AND (CASE NULL  WHEN x'' THEN 0.05003786973613755 WHEN NULL THEN NULL WHEN 0Xffffffffe061a0bf THEN 0.3765984935422372 WHEN x'' THEN 0.13669135729098092 WHEN '-796629943' THEN -9.53346834E8 END))); -- 1ms;
SELECT DISTINCT ((rt1.c0)*(rt1.c2)) COLLATE BINARY FROM rt1; -- 0ms;
SELECT ((((rt1.c2)/(rt1.c0)))IS NOT(SUM(NULL))), ((((rt1.c0)==(rt1.c1))) ISNULL), CAST(((('382132800', rt1.c2, rt1.c1)) NOT BETWEEN (('991644860', rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c0, rt1.c0))) AS BLOB), ((((rt1.c2)%(rt1.c0))) NOTNULL), ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))&(((rt1.c1)<(rt1.c2)))) FROM rt1 WHERE ((- ((('-1547879270')<=(x''))))) ORDER BY ((CAST(rt1.c1 AS INTEGER))%(((((rt1.c0)OR(0.8702031357946383)))AND(rt1.c1))))  NULLS FIRST; -- 0ms;
SELECT rt1.c0 FROM rt1 WHERE (((((x'')/(0xffffffff99a3f1d7))) BETWEEN ((('684208389') NOTNULL)) AND (0.023104172567586345 COLLATE RTRIM))); -- 0ms;
SELECT (((rt1.c1 IN ()))IS(rt1.c1)), rt1.c0, GROUP_CONCAT(RTRIM(rt1.c2)) FILTER(WHERE ((CAST(rt1.c2 AS TEXT))LIKE(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END))) OVER () FROM rt1 WHERE ((((x'', NULL, '-Infinity')) BETWEEN (((x'dcc7d5bc' IN (x'')), ((x'82c7778c') NOTNULL), CASE WHEN '-83778732' THEN NULL WHEN x'' THEN '1895743793' WHEN 0x400f1051 THEN NULL END)) AND ((CASE '؞sxLg'  WHEN x'' THEN 0.6268340056114828 ELSE -1940234896 END, (((0.6785877616643772)) NOT BETWEEN ((0.42432428043872195)) AND ((1.347935E7))), NULL)))); -- 1ms;
SELECT DISTINCT ((json_quote(rt1.c0))<(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))) FROM rt1 WHERE (CAST((('儹}brrLqgC') NOT BETWEEN ('E3\rpመ''') AND (x'')) AS REAL)); -- 0ms;
SELECT (- (((rt1.c2)+(rt1.c2)))) FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c0 THEN GROUP_CONCAT(rt1.c1) ELSE CASE rt1.c1  WHEN x'' THEN rt1.c2 ELSE rt1.c2 END END, CAST((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c2))) AS INTEGER), CAST(rt1.c0 AS REAL), ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN ((rt1.c2 IN ())) AND ((((0.636851637444088)) NOT BETWEEN ((rt1.c2)) AND ((x''))))), rt1.c1 COLLATE RTRIM FROM rt1 WHERE ((((1768995449 IN ()))!=(NULL))); -- 0ms;
SELECT DISTINCT TOTAL((~ (rt1.c1))) OVER (), (((rt1.c2)) NOT BETWEEN ((((rt1.c2)IS(rt1.c1)))) AND ((((rt1.c1)-(NULL))))), NTH_VALUE((((+ (rt1.c2))) BETWEEN (TRIM(rt1.c1, rt1.c1)) AND (((rt1.c2)&(rt1.c1)))), (('166335700') NOT BETWEEN (((((rt1.c1)OR(rt1.c0)))OR(rt1.c0))) AND (CASE WHEN rt1.c0 THEN rt1.c0 ELSE NULL END))) OVER ( ORDER BY ((((rt1.c2) NOT NULL)) NOT NULL) DESC  NULLS FIRST, ((((((0X370d1ed6)&(0.5199590027894186)))OR(CAST(rt1.c2 AS TEXT))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))))), ((CASE rt1.c1  WHEN rt1.c2 THEN 'n9繲9k,lg' ELSE rt1.c2 END) IS FALSE), SUM(CAST(rt1.c0 AS REAL)) FROM rt1 WHERE (-1.90714301E8) LIMIT -258176127 OFFSET -558576988;SELECT DISTINCT CASE WHEN ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)) THEN CASE rt1.c1  WHEN x'' THEN rt1.c2 END ELSE ((rt1.c0) BETWEEN (rt1.c1) AND (NULL)) END FROM rt1; -- 0ms;
SELECT DISTINCT ((x'') BETWEEN ((~ (rt1.c2))) AND (CAST(rt1.c1 AS INTEGER))) FROM rt1 WHERE ((((0.6630740302278012, x'42fe', 1.342569197E9)) BETWEEN (((((NULL)) NOT BETWEEN (('O')) AND ((0.3332103325768637))), (('-2015160683')GLOB(x'')), 0.2656039470921304)) AND ((CAST(x'' AS REAL), CASE 'R%'  WHEN '' THEN x'' WHEN x'' THEN 'f6' WHEN x'' THEN x'ea79' ELSE x'' END, (('L''ﴝB\r') BETWEEN ('_&') AND (0.6266436094906825)))))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt1 WHERE (CAST((((0.8451475666395908)) BETWEEN ((x'')) AND ((x''))) AS BLOB)); -- 0ms;
SELECT DISTINCT LEAD(((((rt1.c0)*(rt1.c0))) BETWEEN ('-1622871420' COLLATE RTRIM) AND (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))), CASE 0Xfffffffff09c968a  WHEN ((NULL)GLOB(rt1.c0)) THEN ((rt1.c0) IS FALSE) ELSE ((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)) END, ((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0))) IS TRUE)) OVER () FROM rt1; -- 0ms;
SELECT ((((((rt1.c0)>=(rt1.c0)))OR(((399531038) IS FALSE))))OR(CASE WHEN rt1.c0 THEN rt1.c0 WHEN '-1661058287' THEN rt1.c2 WHEN rt1.c2 THEN '' ELSE rt1.c2 END)), COUNT(rt1.c0), ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)|(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) FROM rt1 WHERE (CAST(NULL COLLATE BINARY AS BLOB)); -- 0ms;
SELECT ALL IFNULL(rt1.c2, rt1.c1) COLLATE NOCASE FROM rt1 WHERE (x'caf3'); -- 1ms;
SELECT DISTINCT rt1.c2, ('N[' COLLATE BINARY IN (rt1.c0 COLLATE RTRIM)), 813224843 FROM rt1 WHERE (CAST((-1495186765 IN (NULL, x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((NULLIF(rt1.c1, rt1.c0))*(((rt1.c2)IS(x'')))), CUME_DIST() OVER (), (((~ (rt1.c0))) BETWEEN (CAST(rt1.c0 AS REAL)) AND (CASE WHEN rt1.c2 THEN rt1.c2 END)) FROM rt1 WHERE (((((((x'')AND(-6.24619884E8)))AND(6.54019827E8))) NOT NULL)); -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST(CASE 0X359647d8  WHEN rt1.c2 THEN rt1.c2 END AS INTEGER)) OVER () FROM rt1 LIMIT -363545497 OFFSET 1856753177; -- 0ms;
SELECT LIKELIHOOD(((rt1.c1)-(rt1.c0)), 0.34405582592911377) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c0)&(rt1.c0)))<>(0.02111534978515428)), (- (NULLIF(x'', rt1.c2))), (((((rt1.c2) IS FALSE)))>((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(UPPER(rt1.c0) AS BLOB), (NOT (((rt1.c0)>>(rt1.c1)))), CAST(LTRIM('', rt1.c0) AS BLOB) FROM rt1; -- 0ms;
SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)OR(STRFTIME(rt1.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c2))))OR(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))) FROM rt1; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt1.c1)-(rt1.c2))) OVER () FROM rt1; -- 0ms;
SELECT ((((rt1.c0) NOTNULL))||(DATE(x'85de', rt1.c0, rt1.c0, rt1.c2, rt1.c0))) FROM rt1 WHERE (((('-M,' IN ())) NOTNULL)) LIMIT 719954581 OFFSET -1070536671; -- 0ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((0.5727741824296145 COLLATE NOCASE)) AND (('2123828442'))), rt1.c2, ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)>=(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c2 IN (rt1.c2)))LIKE(MIN(rt1.c2))) FROM rt1; -- 0ms;
SELECT DISTINCT CAST((rt1.c0 IN ()) AS NUMERIC), CASE ((rt1.c1) IS TRUE)  WHEN SUBSTR(rt1.c0, rt1.c0) THEN CASE WHEN '/e+' THEN rt1.c1 END ELSE ((rt1.c1)AND(rt1.c1)) END, COUNT(MAX((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) FROM rt1 ORDER BY CHANGES()  NULLS FIRST;SELECT rt1.c2, CAST(LIKELIHOOD(NULL, 0.5030494709583326) AS TEXT), ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))<(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END)) FROM rt1 WHERE (((((((-558576988)AND('894202468')))AND(0X0)))-((('-2065766538') NOT NULL)))); -- 0ms;
SELECT DISTINCT (((rt1.c2)<<(rt1.c0)) IN (GROUP_CONCAT(rt1.c2), rt1.c2 COLLATE BINARY)) FROM rt1; -- 0ms;
SELECT DISTINCT ((MIN(rt1.c2)) IS TRUE), MAX(rt1.c1), ((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))<<(((1418123054) IS FALSE))) FROM rt1 WHERE (CASE WHEN NULLIF(DISTINCT -2.065766538E9, '0.03390937214083789') THEN ((NULL)!=(x'')) ELSE ((NULL)IS NOT('-731200712')) END); -- 0ms;
SELECT ALL ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c0)))<=(((rt1.c0)<=(rt1.c2)))), ((((x'9b5b')AND(((rt1.c1) ISNULL))))OR((((rt1.c0, rt1.c2, x'')) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c2))))), (((- (rt1.c0)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), LOWER(DISTINCT RTRIM(rt1.c0)), ((((((rt1.c1) NOTNULL))OR(((0.7081986923858834) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN '''n_GFy0bw' THEN rt1.c1 END)) FROM rt1 WHERE (COALESCE(((((((((0.583256186643562)AND('')))AND(x'')))OR(0X3a3ac89a)))AND(0.9283403745251472)), (NULL IN ()))) LIMIT 1632568862; -- 4ms;
SELECT ALL rt1.c2 FROM rt1 WHERE ((((NULL IN ())) NOT BETWEEN (0.37743474712434166) AND ('1794379357'))); -- 0ms;
SELECT ALL CASE WHEN 0x2abeb467 THEN (- (rt1.c1)) END, ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE RTRIM, ((TOTAL(rt1.c1))||(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) FROM rt1; -- 0ms;
SELECT COUNT(*) FROM rt1 WHERE ((((0.005258762207398959)) BETWEEN (((('')IS(NULL)))) AND ((((0.08746589569374341)<(0.4416606631069957)))))); -- 0ms;
SELECT DISTINCT ((((rt1.c1 IN (rt1.c0, rt1.c0))))<((CAST(NULL AS REAL)))) FROM rt1; -- 0ms;
SELECT DISTINCT TOTAL(((rt1.c0) NOTNULL)) OVER () FROM rt1; -- 0ms;
SELECT (((rt1.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c1, rt1.c1, rt1.c0)) AND ((NULL, rt1.c2, '0.26145524432379585'))) COLLATE NOCASE FROM rt1 WHERE ((CASE WHEN x'7bc8' THEN 3.79281571E8 WHEN NULL THEN x'7a18' WHEN NULL THEN x'' END IN ())); -- 0ms;
SELECT ALL CAST((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS BLOB) FROM rt1; -- 0ms;
SELECT rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (CASE WHEN ((NULL)|(x'')) THEN ((x'') IS FALSE) ELSE CAST(0.8706659963900993 AS NUMERIC) END) ORDER BY rt1.c2  NULLS LAST; -- 0ms;
SELECT ALL ((((GROUP_CONCAT(rt1.c1))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))))AND((((rt1.c0))>((rt1.c1))))) FROM rt1; -- 0ms;
SELECT DISTINCT 0.33939143273636774 FROM rt1; -- 0ms;
SELECT ((((rt1.c0)||(rt1.c0))) NOT BETWEEN (((rt1.c0)*(rt1.c1))) AND (NULL)), ((((((rt1.c2)AND(rt1.c2)))OR(rt1.c0)))AND(LIKELIHOOD(DISTINCT rt1.c0, 0.458589558243676))), ((((((rt1.c1)+(rt1.c0)))AND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((NULL))))))OR(((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c0, (((((NULL, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, 0.34329311510749083)) AND ((rt1.c0, rt1.c1, x''))))IS NOT((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))), (((rt1.c0)) BETWEEN ((((rt1.c1)IS NOT(rt1.c1)))) AND (((rt1.c1 IN ())))) FROM rt1; -- 0ms;
SELECT ALL ((rt1.c1) IS TRUE) COLLATE BINARY FROM rt1 WHERE (((LIKE('qF9', 0.4083538696596698, 'o'))-((+ (x'dd11'))))) UNION ALL SELECT DISTINCT load_extension(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)), rt1.c2) FROM rt1 GROUP BY ((((rt1.c1)LIKE(rt1.c1)))<(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))));SELECT DISTINCT TOTAL(((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))AND(x'')))OR(rt1.c0))) OVER () FROM rt1 WHERE (CAST(((1453174163) IS FALSE) AS INTEGER)) ORDER BY CAST(((((rt1.c2)AND(rt1.c0)))AND('-30567343')) AS TEXT); -- 0ms;
SELECT DISTINCT (- ((('-893311709')IS(rt1.c0)))) FROM rt1; -- 1ms;
SELECT DISTINCT ((1.434539056E9) IS FALSE) FROM rt1 ORDER BY rt1.c2 ASC LIMIT -2021209558 OFFSET 9223372036854775807; -- 0ms;
SELECT rt1.c2, ((rt1.c2)LIKE(rt1.c0)) COLLATE BINARY, (((rt1.c2)<=(x'10df')) IN ()) FROM rt1 ORDER BY ((rt1.c0)>=(((rt1.c1) IS FALSE)))  NULLS FIRST, (x'' IN ()) DESC, UNLIKELY(DISTINCT ((rt1.c2) IS FALSE)) DESC  NULLS FIRST; -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY (NOT ((~ (rt1.c2)))) DESC), ((((COUNT(*))AND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((0.13523104841984512))))))AND(0.781338489825151)), (NOT (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) FROM rt1 WHERE ((((('-1276338053') NOT BETWEEN (x'') AND (NULL)))-(((NULL)<=('-749287649'))))); -- 0ms;
SELECT TOTAL(((rt1.c0)/(rt1.c2))) FROM rt1 WHERE (IFNULL(-6.97924865E8 COLLATE BINARY, ((NULL) NOT BETWEEN (NULL) AND ('477267348')))); -- 0ms;
SELECT ALL ((((rt1.c0)OR(rt1.c1)))OR((- ('')))) FROM rt1; -- 0ms;
SELECT ((rt1.c2 COLLATE RTRIM)+(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c1, (rt1.c2 IN (rt1.c1, rt1.c1)) COLLATE NOCASE, AVG(CASE WHEN rt1.c1 THEN rt1.c0 END) OVER () FROM rt1 WHERE ((CAST(NULL AS INTEGER) IN ())) LIMIT -2065766538 OFFSET -293101930; -- 0ms;
SELECT DISTINCT CAST(rt1.c2 AS INTEGER) COLLATE BINARY FROM rt1 WHERE ((-1.105018236E9 COLLATE BINARY IN ())); -- 0ms;
SELECT CASE WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) ELSE rt1.c2 END FROM rt1; -- 0ms;
SELECT DISTINCT (((NULL, ((x'')&(rt1.c1)), CAST(rt1.c1 AS REAL)))=((TRIM(DISTINCT rt1.c1, rt1.c0), ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))AND('0.934190411024817')), ((((0.8481513850352342)AND(rt1.c1)))AND('1893567138'))))) FROM rt1 LIMIT -9223372036854775808; -- 0ms;
SELECT LEAD((((rt1.c1)) NOT BETWEEN (((~ (rt1.c2)))) AND ((rt1.c1))), (((rt1.c2 IN (rt1.c1)))*((((rt1.c0, rt1.c2, rt1.c1, NULL, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1, rt1.c1, rt1.c0))))), ((CASE WHEN 0x6ec6c95a THEN NULL ELSE rt1.c1 END)OR((- (rt1.c2))))) OVER ( ORDER BY (rt1.c2 IN ())  NULLS LAST) FROM rt1 WHERE (((((0.3505992701863263)OR(x'')))AND('-2046119994')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))AND(CAST(rt1.c1 AS INTEGER))))OR('-讁P')) FROM rt1 WHERE (CASE WHEN ((1057677652) IS TRUE) THEN (-1485104769 IN ()) ELSE ((0.007615363028137367)+('')) END); -- 0ms;
SELECT ALL ((rt1.c2)<(rt1.c0 COLLATE BINARY)) FROM rt1 GROUP BY ((PRINTF(rt1.c2)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (CASE WHEN rt1.c0 THEN rt1.c0 END)) HAVING CAST(x'' AS NUMERIC) LIMIT 1394130824 OFFSET 1437655168; -- 1ms;
SELECT ALL FIRST_VALUE(CASE WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c2) NOTNULL) WHEN LIKELIHOOD(rt1.c0, 0.591958253958881) THEN '-1441084165' WHEN rt1.c0 THEN (+ (NULL)) END) OVER () FROM rt1 WHERE (CASE WHEN (1.788466584E9 IN ()) THEN ((1.380894437E9) IS FALSE) ELSE json_array('%Uu', '') END); -- 0ms;
SELECT DISTINCT CASE WHEN ((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)) THEN COUNT(*) ELSE ((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)) END FROM rt1; -- 0ms;
SELECT ALL rt1.c1 COLLATE NOCASE FROM rt1 WHERE ('.*') ORDER BY (- (CAST(rt1.c2 AS BLOB))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt1.c2)&(rt1.c2))) NOT NULL) FROM rt1; -- 0ms;
SELECT ALL GROUP_CONCAT(rt1.c1 COLLATE BINARY), (~ (((rt1.c2)AND(rt1.c0)))), ((((rt1.c0)<>(rt1.c0)))AND(CAST(rt1.c1 AS BLOB))), ((((rt1.c2)<(rt1.c1)))LIKE(x'')), ((AVG(rt1.c1)) BETWEEN ((rt1.c2 IN ())) AND (AVG(x''))) FROM rt1 WHERE (((((((((((0.276469603532709) BETWEEN (0.581847716496646) AND (NULL)))OR((('m0cꙥy,)') BETWEEN ('1330587333') AND ('')))))OR(CASE '1352704386'  WHEN 236304310 THEN NULL END)))OR((('1016153210')LIKE(x'b836e2f1')))))AND(CASE 1525579310  WHEN x'' THEN x'' ELSE '1758249706' END))); -- 1ms;
SELECT ALL ((((rt1.c2) NOT BETWEEN (0.43827876695241574) AND (rt1.c0))) ISNULL) FROM rt1 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((rt1.c1) IS TRUE)) ISNULL) FROM rt1 ORDER BY CAST(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB); -- 0ms;
SELECT DISTINCT (CASE rt1.c2  WHEN x'' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c0)AND(CAST(rt1.c2 AS TEXT))))AND(((rt1.c1) BETWEEN (x'') AND ('75322060')))) FROM rt1 WHERE (((((((x'')<>('')))AND(NULL)))OR('' COLLATE BINARY))); -- 0ms;
SELECT ALL NULLIF(CASE WHEN rt1.c2 THEN rt1.c1 END, GROUP_CONCAT(rt1.c0)) FROM rt1 WHERE ((((('92396693')&(x'b015'))) NOT NULL)) ORDER BY CASE WHEN rt1.c1 THEN (rt1.c1 IN ()) WHEN rt1.c2 THEN x'' WHEN (('T(QNP') IS TRUE) THEN (((rt1.c2))<((rt1.c1))) END DESC; -- 0ms;
SELECT ALL STRFTIME(CASE WHEN rt1.c2 THEN rt1.c1 WHEN '632592041' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END, rt1.c0 COLLATE BINARY, rt1.c1, (rt1.c0 IN ()), (rt1.c0 IN (rt1.c2))), GROUP_CONCAT(((rt1.c0)-(rt1.c2))) OVER (), ((rt1.c1 COLLATE NOCASE)IS((NOT (rt1.c2)))) FROM rt1; -- 1ms;
SELECT ALL json_quote(rt1.c2), CAST(((x'7a60')/(rt1.c2)) AS BLOB), SUM(((rt1.c1) IS TRUE)) COLLATE RTRIM FROM rt1 WHERE ((((-1.54787927E9, NULL, -9.27951923E8)) BETWEEN ((((NULL)/('/컎')), x'0bfd', x'09f7')) AND (((x'' IN (x'')), (('_h3') NOT BETWEEN ('-542069644') AND (')2NK*圖g')), CASE WHEN '' THEN x'395b' END)))) GROUP BY (+ (rt1.c0)); -- 0ms;
SELECT (((rt1.c1 IN ()))-((- (rt1.c1)))) FROM rt1 ORDER BY LIKELIHOOD('1628160167' COLLATE RTRIM, 0.36705922889881626)  NULLS FIRST, ((((((rt1.c1)%(rt1.c2)))AND((rt1.c0 IN ()))))AND(((rt1.c0)AND(rt1.c2)))) DESC;SELECT ALL (- (CASE WHEN rt1.c0 THEN rt1.c1 END)) FROM rt1; -- 0ms;
SELECT DISTINCT (MIN(rt1.c2) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(x'') FROM rt1 WHERE (UPPER(((NULL)<<(x'')))) ORDER BY LOWER(DISTINCT ABS(DISTINCT rt1.c0)) ASC; -- 0ms;
SELECT (((((rt1.c1 IN ()))OR(CAST(rt1.c0 AS BLOB))))AND(GLOB(rt1.c1, rt1.c1))), COUNT(*), rt1.c1 FROM rt1 ORDER BY ((((TRIM(DISTINCT rt1.c1))OR(CASE 0x787c6185  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)))AND(((rt1.c2)>>(rt1.c1)))) DESC; -- 0ms;
SELECT ALL CAST(CASE rt1.c1  WHEN 1768264543 THEN rt1.c2 END AS BLOB), CAST(((rt1.c1)|(rt1.c1)) AS BLOB), AVG(SUM('')) FROM rt1 GROUP BY (((rt1.c2 IN ()))>>(((rt1.c2) IS FALSE))) HAVING ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))||(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END));SELECT ALL (((- ('q6')))/(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))) FROM rt1 GROUP BY (rt1.c1 IN ((((8.3939319E8)) BETWEEN ((rt1.c0)) AND ((rt1.c1))), CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END)), ((((((((((((x'')AND(rt1.c1)))AND(rt1.c1)))OR(((rt1.c0) IS TRUE))))OR(rt1.c1 COLLATE BINARY)))OR((-6.24619884E8 IN ()))))AND((((rt1.c2))<((rt1.c0))))), ((ABS(rt1.c2))=(((((rt1.c0)OR('-418194015')))OR(-1.105018236E9)))); -- 0ms;
SELECT DISTINCT rt1.c2, MIN(((rt1.c2)==(rt1.c2))), ((((rt1.c2)>>(rt1.c0))) IS FALSE) FROM rt1 GROUP BY ((((rt1.c0) IS TRUE)) NOT NULL); -- 0ms;
SELECT ALL CASE MAX(0.3414659965412157)  WHEN NULLIF(rt1.c0, '0.9048925732760652') THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) WHEN (('XK')GLOB(rt1.c1)) THEN (((('-383471752')OR('1748266636')))AND(rt1.c2)) WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE x'' END THEN ((rt1.c1)<(rt1.c1)) ELSE (rt1.c0 IN (rt1.c1)) END, rt1.c2, AVG('-1666041') OVER () FROM rt1; -- 0ms;
SELECT ALL ((rt1.c2) IS FALSE), CUME_DIST() OVER (), rt1.c2 COLLATE BINARY FROM rt1 WHERE (((((((0.2292695290551764) BETWEEN (x'') AND ('-1762708535')))AND((((0.026754952931412168)) BETWEEN ((1.946605791E9)) AND (('.2'))))))OR(((0.5072022975706966)OR(NULL))))) LIMIT 938196018; -- 0ms;
SELECT (~ (((rt1.c2)>(rt1.c1)))) FROM rt1 WHERE (x''); -- 0ms;
SELECT ((((rt1.c0)LIKE(rt1.c2)))!=(AVG(rt1.c1))), LIKELY((rt1.c2 IN ())), rt1.c0 FROM rt1; -- 0ms;
SELECT ALL COUNT(CASE WHEN rt1.c0 THEN rt1.c0 END) OVER ( PARTITION BY '', ((((rt1.c0)<<(rt1.c2))) IS FALSE) ORDER BY CASE WHEN rt1.c1 THEN rt1.c0 ELSE NULL END COLLATE RTRIM DESC  NULLS FIRST RANGE  CURRENT ROW EXCLUDE TIES) FROM rt1; -- 0ms;
SELECT ALL (CAST(x'' AS BLOB) IN ((((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c0))))) FROM rt1 GROUP BY rt1.c0, ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOT NULL), CAST(0.33939143273636774 AS INTEGER) HAVING (- (((rt1.c0)<<(rt1.c2)))) LIMIT 1920552374; -- 0ms;
SELECT DISTINCT (~ (((rt1.c0)+(rt1.c1)))) FROM rt1; -- 4ms;
SELECT ALL CAST(((rt1.c2)IS NOT(rt1.c1)) AS INTEGER) FROM rt1; -- 0ms;
SELECT ALL rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))||(rt1.c2 COLLATE NOCASE)) FROM rt1 ORDER BY CAST(CASE WHEN rt1.c2 THEN rt1.c0 END AS REAL)  NULLS FIRST; -- 0ms;
SELECT ((rt1.c0 COLLATE RTRIM)LIKE(((rt1.c1) IS TRUE))) FROM rt1; -- 0ms;
SELECT DISTINCT (((((((((((((x'a1e05dc8')OR(rt1.c2)))OR('?\n>%cT킽KA')))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))OR('2037556546')) IN ()) FROM rt1 WHERE (((x'fbc8' COLLATE NOCASE) NOT BETWEEN (CAST(0.5497061359660028 AS BLOB)) AND (((0.2764286466255874) BETWEEN (0.824432607172677) AND (NULL))))); -- 1ms;
SELECT CAST(CAST(rt1.c2 AS TEXT) AS INTEGER) FROM rt1 GROUP BY (((rt1.c1 IN ()))GLOB(rt1.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT 0.22368169029455465 FROM rt1; -- 0ms;
SELECT ((+ (rt1.c1)) IN (rt1.c2, MAX(rt1.c1))), '੺,', GROUP_CONCAT(NULL) FILTER(WHERE (rt1.c2 IN ())) OVER () FROM rt1 WHERE ((((('AXrB扲xTG') IS FALSE))<(((NULL) BETWEEN (NULL) AND (NULL))))) GROUP BY LIKELY(DISTINCT rt1.c2) COLLATE BINARY, ((COALESCE(rt1.c0, rt1.c1))<<((~ (rt1.c2)))), ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1))) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))); -- 0ms;
SELECT DISTINCT ((json_insert(rt1.c2, rt1.c0, 0.08400936249482605)) IS FALSE) FROM rt1 WHERE (CAST((x'a29972da' IN ()) AS TEXT)); -- 0ms;
SELECT ALL rt1.c0, ((rt1.c0 COLLATE NOCASE)IS NOT(rt1.c1)), ((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)>(LTRIM(0.2453529202926381, rt1.c0))) FROM rt1 WHERE ('眭['); -- 1ms;
SELECT (~ ((NOT (rt1.c0)))) FROM rt1 WHERE ('-1661058287'); -- 0ms;
SELECT ALL ((('')) BETWEEN ((MAX(rt1.c1))) AND (((NULL IN (rt1.c0))))) FROM rt1 WHERE (TRIM((('f&') NOT BETWEEN ('684208389') AND (NULL)))); -- 0ms;
SELECT AVG(NULL) OVER (), (NOT (MIN(rt1.c2))), COUNT(*) COLLATE BINARY FROM rt1 WHERE (CASE WHEN (x'' IN ()) THEN x'' COLLATE BINARY ELSE (((x'7686')) BETWEEN ((0xffffffffe0084efc)) AND ((x''))) END); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1 LIMIT -1282619186 OFFSET -2065766538; -- 0ms;
SELECT (NOT (GROUP_CONCAT(rt1.c2))), rt1.c0, ((((rt1.c2) BETWEEN (4.27843486E8) AND (rt1.c2))) ISNULL) FROM rt1 ORDER BY (((~ (0.9967168965418167))) BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))) AND ('ud!켘>*?G'))  NULLS LAST; -- 0ms;
SELECT ALL ((((rt1.c1)AND(rt1.c1)))OR(NULL)) COLLATE NOCASE, COUNT(*) COLLATE BINARY, ((CAST(rt1.c1 AS NUMERIC))||(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)) FROM rt1; -- 1ms;
SELECT DISTINCT (((rt1.c2)<(rt1.c1)) IN (rt1.c2)) FROM rt1 WHERE (((ABS(DISTINCT x''))|(((((x'')AND(0.5233689855594614)))AND(x''))))); -- 0ms;
SELECT ALL rt1.c1 COLLATE BINARY FROM rt1 WHERE (ABS(((NULL) NOT BETWEEN (1.720211408E9) AND (0.17585769430550502)))) GROUP BY ((((rt1.c1) NOT NULL))IS(((rt1.c1)<=(rt1.c1)))), CASE (- (rt1.c0))  WHEN ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)) THEN ABS(rt1.c1) ELSE COALESCE(DISTINCT rt1.c1, rt1.c1) END, ((((rt1.c1)/(rt1.c0))) ISNULL) ORDER BY '' LIMIT -768941794 OFFSET 1510787875; -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c2 THEN x'' WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END COLLATE BINARY FROM rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((((rt1.c2) IS FALSE))AND((NOT (rt1.c0)))))AND(MIN(rt1.c2))), ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))IS(SUM(rt1.c0))), ((GROUP_CONCAT(rt1.c2))LIKE(rt1.c2)) FROM rt1 ORDER BY NULL ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((((SUM(rt1.c1))OR(MAX(rt1.c1))))OR(((rt1.c2)IS NOT(rt1.c0)))), (- ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((NULL))))), COALESCE(((rt1.c0) NOT NULL), rt1.c1, rt1.c1, ((((rt1.c2)AND(rt1.c2)))AND(rt1.c0))), (+ (((rt1.c1) BETWEEN (rt1.c1) AND (0.6344560119009152)))), (- (rt1.c0 COLLATE RTRIM)) FROM rt1 WHERE (((NULL) NOT BETWEEN ('') AND (x'')) COLLATE BINARY) GROUP BY rt1.c0; -- 1ms;
SELECT ((COUNT(rt1.c1))||((rt1.c2 IN ()))), ((((rt1.c1)IS NOT(rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0)==('eRK짤0')))), AVG(((rt1.c0)GLOB(rt1.c0))) OVER (), LOWER(DISTINCT CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END), rt1.c1 FROM rt1 WHERE (((CASE NULL  WHEN NULL THEN '' ELSE 0.4040866932258387 END)LIKE(((0.45569480959067166) NOT BETWEEN (0.9506785214516795) AND (''))))); -- 0ms;
SELECT DISTINCT (((((- ('-')))OR(CAST(rt1.c1 AS INTEGER))))OR((((rt1.c1))<((rt1.c0))))), UPPER(rt1.c0) COLLATE BINARY, ((((rt1.c2)||(rt1.c0))) NOT BETWEEN ((~ (rt1.c1))) AND (((rt1.c1)||(rt1.c1)))) FROM rt1 WHERE ((((+ (1366263244))) NOT BETWEEN (NULL COLLATE BINARY) AND (((NULL) BETWEEN (-930359883) AND ('iJ'''))))); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))/(CAST(rt1.c1 AS TEXT))), CAST(CAST(rt1.c0 AS NUMERIC) AS BLOB), COUNT(((rt1.c2)LIKE('-60089753'))) OVER () FROM rt1 WHERE ((((x'' IN ())) BETWEEN (((x'') NOT NULL)) AND ((x'' IN ())))) ORDER BY ((((((((x'')OR(((rt1.c2) IS FALSE))))AND('1788466584')))AND(CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND((('1619411871') ISNULL))) DESC; -- 0ms;
SELECT ((((rt1.c2)GLOB(rt1.c0)))<<(((rt1.c0)&(rt1.c2)))), ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))|(((rt1.c2) BETWEEN (rt1.c0) AND (x'')))), TYPEOF(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))) FROM rt1 WHERE (((((('[X<m]y')) BETWEEN ((1.883560054E9)) AND ((0Xffffffffa570df25)))) IS FALSE)); -- 0ms;
SELECT DISTINCT 0.9660364969601111 FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c2)%(rt1.c2)) THEN (+ (rt1.c2)) ELSE ((((rt1.c0)OR('1175257358')))OR(NULL)) END, ROW_NUMBER() OVER (), ((rt1.c1 COLLATE RTRIM) BETWEEN ('1380894437') AND ((rt1.c1 IN ()))), CAST(((rt1.c2) NOTNULL) AS BLOB), (~ (((rt1.c2) ISNULL))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c0)>(x'')))AND(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))))AND(((rt1.c1)<=(rt1.c1)))))AND(((rt1.c0)<(rt1.c1)))))AND(((rt1.c2)<=(rt1.c2)))) FROM rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((('㡢/1')OR(rt1.c2)))OR(rt1.c1))) OVER () FROM rt1 WHERE ((0.331395702616161 IN ())); -- 0ms;
SELECT COUNT(*) FROM rt1 WHERE ((x'' IN (x'74d1', '[0\n/g0od(')) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((rt1.c2) IS FALSE)) NOT NULL) FROM rt1 WHERE ((- (DATE(0xffffffffebb37f9b, NULL, '632592041')))); -- 0ms;
SELECT DISTINCT ((((NOT (rt1.c2))))<((CAST(x'd594' AS BLOB)))) FROM rt1; -- 0ms;
SELECT DISTINCT x'3befce3c8681' FROM rt1 WHERE ((((((0.9500376612152958)+(x'')), ((NULL)<<('-1627064813')), (('j.y솩l<&z.') NOT BETWEEN (x'') AND (x''))))<>(((NOT (NULL)), CASE WHEN '-429767354' THEN 0.9427685687727557 END, (NULL IN ()))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((('N\# S'))!=((rt1.c2)))) FROM rt1; -- 0ms;
SELECT ALL json_valid(((rt1.c1)LIKE(rt1.c0))) FROM rt1 GROUP BY (((rt1.c0)) BETWEEN (((- (rt1.c0)))) AND (((NOT (rt1.c2))))), (((NOT (rt1.c2))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (CAST(rt1.c0 AS BLOB))), CASE WHEN ((rt1.c1) IS TRUE) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END WHEN ABS(DISTINCT rt1.c0) THEN rt1.c0 COLLATE BINARY WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN (((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) ELSE (~ (rt1.c1)) END; -- 1ms;
SELECT DISTINCT COUNT((((rt1.c0)) BETWEEN (('')) AND ((rt1.c1)))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1)&(rt1.c2))) NOTNULL), NTH_VALUE(((((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)))<<((((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c2))))), (1.01615321E9 IN (CAST(rt1.c1 AS REAL), ((rt1.c2)IS(rt1.c0))))) OVER (), rt1.c1 FROM rt1;SELECT DISTINCT CAST(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END AS REAL), (+ ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))), COUNT(NULLIF(rt1.c2, rt1.c2)) FILTER(WHERE CAST(rt1.c2 AS TEXT) COLLATE BINARY) OVER ( PARTITION BY LIKELIHOOD((((rt1.c1, rt1.c0, rt1.c0))>=((rt1.c0, rt1.c1, rt1.c2))), 0.7663609234291733), (((((((rt1.c2))<>((rt1.c1))))AND((('䌑\r0Y')IS(rt1.c2)))))OR((+ (rt1.c0)))) ORDER BY (- (LIKELY(DISTINCT rt1.c2)))  NULLS LAST) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END AS REAL) FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN TRIM(rt1.c2, NULL) THEN ((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) END, ((((((rt1.c2)OR(1.720323938E9)))AND(rt1.c1))) BETWEEN ((rt1.c0 IN (rt1.c0))) AND (SUM(rt1.c1))), NULLIF(rt1.c0 COLLATE BINARY, ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) FROM rt1 WHERE (('-131313527' IN ('-1748963657')) COLLATE RTRIM) LIMIT 1422935123 OFFSET 1437944527; -- 0ms;
SELECT DISTINCT TOTAL((NOT (rt1.c2))) COLLATE NOCASE FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt1.c2 AS REAL) THEN NULL END FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c2, SUM(((rt1.c2)&(rt1.c1))) OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE GROUP), ((rt1.c1) IS TRUE) FROM rt1; -- 0ms;
SELECT CAST(AVG(rt1.c2) AS TEXT) FROM rt1 WHERE ((NOT ((((0.1768029478345402))>((NULL)))))); -- 0ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((x'35fa6237')) AND ((x'deea'))) COLLATE NOCASE FROM rt1 WHERE ((((0.9281066587865571 IN ()))>((+ (x''))))); -- 0ms;
SELECT ALL ((((((4.77267348E8) IS TRUE))AND(CAST(rt1.c1 AS REAL))))OR((- (rt1.c1)))) FROM rt1; -- 0ms;
SELECT DISTINCT LEAD(CASE WHEN CAST(rt1.c2 AS REAL) THEN (((rt1.c1, rt1.c1, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c2))) WHEN COALESCE(rt1.c1, rt1.c0) THEN rt1.c2 WHEN LOWER(rt1.c2) THEN (NOT (rt1.c1)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END, json_array(rt1.c1, rt1.c2) COLLATE NOCASE, ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND((+ (rt1.c2))))) OVER ( ORDER BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END)IS((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('d峴싪', 0.8398628159616829, rt1.c1)) AND ((rt1.c1, rt1.c2, rt1.c0))))), (~ (rt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST, (json_object(rt1.c1, rt1.c2) IN ())  NULLS LAST) FROM rt1 GROUP BY ((rt1.c1) NOT BETWEEN (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2))) AND (((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)))) HAVING ((x'')LIKE(rt1.c0)) LIMIT -1494589093 OFFSET -1645456917; -- 0ms;
SELECT DISTINCT ((rt1.c2) BETWEEN (MIN(rt1.c1)) AND (0.027443354627343708)) FROM rt1 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN (((0x243dcaf8, -1847936352, 0.6694606199787977))<=((x'', x'', '-719679527'))) THEN ((x'') NOT BETWEEN (1047966464) AND ('0.10769237272613474')) END) ORDER BY (+ (rt1.c0)) COLLATE RTRIM, ((x'') NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (((((x'791a')OR(rt1.c2)))OR(rt1.c2))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((('706088679')!=(rt1.c1)))OR((+ (rt1.c0)))))AND(((rt1.c2)+(rt1.c0)))) FROM rt1 WHERE (-1827515007); -- 0ms;
SELECT ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN ()), CASE ((rt1.c1)&(rt1.c0))  WHEN json(rt1.c2) THEN ((rt1.c0)GLOB(rt1.c2)) END, CASE ((rt1.c2)%(rt1.c2))  WHEN ((rt1.c1) NOTNULL) THEN (((rt1.c2))>=((rt1.c0))) WHEN ((0.5241921840658548)=(rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) WHEN (NOT (rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END END FROM rt1 WHERE (CAST(CAST(0.2069022280073739 AS BLOB) AS TEXT)); -- 0ms;
SELECT TRIM(DISTINCT ((rt1.c0) NOT NULL)) FROM rt1 WHERE ((('1768732053' COLLATE NOCASE) IS TRUE)); -- 1ms;
SELECT ALL 0x55815430 FROM rt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN '410882973' THEN rt1.c2 END)+((rt1.c1 IN ()))), x'', ((((INSTR(rt1.c1, rt1.c0))OR(((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))))AND(COUNT(*))) FROM rt1 ORDER BY (((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))<>((((rt1.c2)<<(rt1.c0))))); -- 0ms;
SELECT ALL TOTAL(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) OVER (), rt1.c0, ((((((rt1.c1)IS NOT(rt1.c0)))AND((rt1.c0 IN (rt1.c2)))))OR((('-502546277') IS FALSE))) FROM rt1 WHERE (((HEX(DISTINCT 1.510787875E9)) BETWEEN (('OS烆E' IN ())) AND ('e\n'))); -- 0ms;
SELECT ALL (rt1.c0 IN (rt1.c0)) COLLATE NOCASE FROM rt1; -- 0ms;
SELECT (((((rt1.c0)>>(rt1.c1)), ((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND('-1964435508')))OR(rt1.c0)), (((0Xffffffffc806ace1))>=((rt1.c0)))))>(((- (rt1.c1)), COUNT(rt1.c2), 0.4708118744701757))) FROM rt1 WHERE ((((((2079290335) NOT BETWEEN (0.38321369024575613) AND (0.439547309687341))))>((CAST(0.26340002275747987 AS BLOB))))); -- 0ms;
SELECT ALL ((((x'')AND(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM, TOTAL(((rt1.c0)>(rt1.c0))), (((NOT (rt1.c1)))>>(((rt1.c1) ISNULL))) FROM rt1 WHERE ((+ (((0.5699020773974466)<(0.301794504253976))))) ORDER BY CASE (rt1.c0 IN ())  WHEN ((rt1.c1)||(rt1.c0)) THEN (rt1.c2 IN (rt1.c1)) ELSE CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END END ASC, '-247318596'  NULLS LAST; -- 1ms;
SELECT DISTINCT ((x'')*(-1.420317102E9)) FROM rt1 WHERE (TRIM(DISTINCT CASE 0.2243031692968076  WHEN 0.807255395262611 THEN NULL END, CAST(NULL AS BLOB))) LIMIT -1972275388; -- 0ms;
SELECT DISTINCT CAST(((rt1.c2) NOT NULL) AS REAL) FROM rt1 GROUP BY x'59c15841' HAVING MAX(((rt1.c0)>(rt1.c1))); -- 0ms;
