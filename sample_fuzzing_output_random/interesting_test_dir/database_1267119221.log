-- Time: 2024/06/07 19:53:23
-- Database: database21
-- Database version: 3.40.0
-- seed value: 1267119221
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 7ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', x'28fc', 0.3731750250942014), ('1G', '-805699280', x''), ('1g', NULL, x''), ('a0_RİLLX', x'', 'XmnN'), (0X7f76c7d7, 0.9914914779614544, x''); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT ALL AVG(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))), CASE WHEN (rt0.c1 IN ()) THEN (NOT (rt0.c0)) END, ((ABS(DISTINCT rt0.c0)) NOTNULL) FROM rt0 ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY ASC  NULLS FIRST; -- 0ms;
ANALYZE v0; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES (NULL, x'a2f9'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2, c0) VALUES (0X7f76c7d7, '2138490839', 1290488740); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2, c1) VALUES (x'fc52', ',', x''); -- 0ms;
VACUUM main; -- 3ms;
COMMIT TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt49 USING fts5(c0); -- 5ms;
INSERT OR IGNORE INTO vt49 VALUES ('2138490839'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO vt49(c0) VALUES ('1064142961'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt49(vt49, rank) VALUES('automerge', 7); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='?pG', c0=NULL; -- 1ms;
INSERT OR ABORT INTO rt0(c1) VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('akz)'); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.threads; -- 0ms;
INSERT OR IGNORE INTO vt49(c0) VALUES (x''); -- 0ms;
END; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
PRAGMA main.application_id; -- 0ms;
INSERT INTO vt49(vt49, rank) VALUES('merge', -805699280);\n; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE main; -- 2ms;
INSERT OR IGNORE INTO vt49(c0) VALUES (x''); -- 0ms;
PRAGMA mmap_size = 78594209910584152; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
SELECT rtreecheck('rt0'); -- 1ms;
UPDATE OR REPLACE rt0 SET (c2)=(0X4ceb4ba4) WHERE ((((rt0.c2 COLLATE NOCASE)OR((NOT (rt0.c2)))))OR(((((rt0.c2)AND(0.9914914779614544)))OR(rt0.c1)))); -- 0ms;
UPDATE vt49 SET (c0)=(0.9876707681507871); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE vt49 SET c0=NULL, c0='9' WHERE load_extension(((vt49.c0)IS(vt49.c0)), vt49.c0); -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=(0x4ceb4ba4); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('1064142961') WHERE ((0.9876707681507871)<=(((rt0.c0)<<(rt0.c0)))); -- 1ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (0x38f55ff1); -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (0.9914914779614544); -- 0ms;
INSERT OR ROLLBACK INTO vt49(c0) VALUES (0.13721617168084932); -- 2ms;
DROP VIEW v0; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt49(vt49) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt49(c0) VALUES (x'e9b45735'), (x''), (x''), (NULL), (0.9497348902954934); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, 0.651599003277866, 0.35335538191852944), ('-805699280', x'', 0Xfffffffff19fc7a7), (1.29048874E9, NULL, NULL); -- 4ms;
INSERT OR FAIL INTO rt0 VALUES (NULL, 0.4993125865308309, 0.9876707681507871), ('1290488740', x'e58c', '1290488740'), (NULL, '{衱U', '渚oM^'), (NULL, 0.11575073485992826, x'3347'), (0.3000855733121257, '␃&C0N1O', x''); -- 1ms;
PRAGMA incremental_vacuum(-326530514); -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF UPDATE ON v0 FOR EACH ROW  WHEN RTRIM(((v0.c1) IS TRUE)) BEGIN SELECT RAISE(ROLLBACK, 'asdf');END; -- 1ms;
COMMIT; -- 0ms;
PRAGMA main.locking_mode = EXCLUSIVE; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (0.4634643544575502, 486491344, NULL); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0, c2) VALUES (CAST((((0Xffffffffc33a9df2))<=((0.7139821945542631))) AS BLOB), 'y?1)&*Ab\n', 0.651599003277866), ('PA', 0.11574320027823803, 'pa'), (x'51a3', NULL, '486491344'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', NULL, NULL); -- 0ms;
PRAGMA reverse_unordered_selects; -- 1ms;
ANALYZE rt0; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES ('', 0.674999390742386), ('-1e500', '<-	l'), (NULL, x''); -- 0ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  vt49; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (NULL, x'bfdf', 0.11574320027823803); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt49', 'null', ' sz=-221300301 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE vt49 SET c0=4.86491344E8, c0=NULL, c0=' J' WHERE (((+ (vt49.c0))) BETWEEN (((vt49.c0)*(vt49.c0))) AND (0xffffffffa1ad0dd9 COLLATE NOCASE)); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL CAST((((-120372, v0.c0, rt0.c1))<=((vt49.c0, v0.c2, x''))) AS NUMERIC), ((LOWER(rt0.c1)) BETWEEN (CAST(v0.c1 AS NUMERIC)) AND (CAST(9.55604977E8 AS INTEGER))), x'' FROM t0 WHERE ((((0x14c6726d)IS NOT('-1247741370')) IN ()));SELECT (((((rt0.c2)<=(t0.c0))))<>((COUNT(*)))) FROM rt0, vt49;SELECT DISTINCT CAST(TOTAL(rt0.c0) AS NUMERIC), t0.c0, 0.9875824084627507 FROM vt49 GROUP BY ((0.8545661258614929)LIKE((v0.c0 IN ()))) HAVING ((t0.c0)<=(NULLIF(DISTINCT t0.c0, x'')));SELECT NTILE((NOT (CAST(979961219 AS TEXT)))) OVER ( ORDER BY ((((rt0.c2)%(rt0.c2))) ISNULL)  NULLS LAST, v0.c2) FROM v0 WHERE (TRIM(DISTINCT ('-528654874' IN ('')), CASE NULL  WHEN 0x5ac64f9f THEN x'e954' END));SELECT ALL ((((((((((t0.c0)AND('743852697')))AND(v0.c2)))OR(rt0.c0)))AND(v0.c2)))GLOB(x'')), (((MIN(v0.c2)))>=(((NOT (rt0.c0))))), (((v0.c0)) BETWEEN ((CAST(NULL AS INTEGER))) AND ((SUM(v0.c1)))) FROM v0, rt0, t0 WHERE (((((((NULL)AND('1865573221')))AND(x''))) NOT BETWEEN (0.285007442131165) AND (((((((((0.2831789039798681)AND(x'')))AND('-1582494247')))AND(x'')))AND(0X20bd2403))))); -- 0ms;
SELECT DISTINCT GLOB(TRIM(DISTINCT vt49.c0, t0.c0), ((((((((v0.c0)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(t0.c0))), rt0.c1, (~ (CAST(rt0.c0 AS NUMERIC))) FROM rt0 WHERE ((((((((('')OR('uh')))OR(-2.21300301E8)))OR(NULL)))OR(x'')) COLLATE BINARY);SELECT ((((rt0.c1) IS FALSE))*(((v0.c2)<<(rt0.c0)))) FROM t0, rt0, vt49 WHERE ((~ ((((NULL)) BETWEEN ((3.48549741E8)) AND ((NULL))))));SELECT ALL (NOT (((v0.c2)*(t0.c0)))) FROM rt0, t0;SELECT DISTINCT (~ (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)) FROM vt49 GROUP BY (t0.c0 IN ((t0.c0 IN (rt0.c0)))) HAVING (((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), MIN(rt0.c0), x''))<>((((t0.c0)>(t0.c0)), 0.2917553140829243, ((((((((v0.c2)OR(rt0.c2)))OR(v0.c1)))AND(vt49.c0)))AND(v0.c1)))));SELECT DISTINCT PERCENT_RANK() OVER () FROM vt49, t0, rt0, v0 WHERE (((CASE '*?'  WHEN '3)r^!F' THEN 0X38f55ff1 ELSE '' END) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((((vt49.c0)OR(v0.c0)))OR(v0.c0)))<(CHANGES())) FROM t0;SELECT DISTINCT ((((rt0.c2) NOT NULL)) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) AND (CASE WHEN ' J' THEN vt49.c0 END)), CAST(((rt0.c1)>>(rt0.c0)) AS NUMERIC), v0.c1 FROM t0, v0, rt0 GROUP BY (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END IN ()), CASE WHEN ((v0.c1) IS FALSE) THEN ((('-1247741370')) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) ELSE v0.c1 END, x'50b9c96f', (~ (((vt49.c0)<<(v0.c1)))), ((rt0.c0)&(v0.c2)) COLLATE BINARY HAVING (((+ (rt0.c1))) NOT BETWEEN (((rt0.c0)LIKE(v0.c0))) AND (rt0.c1));SELECT ((COALESCE(DISTINCT v0.c0, v0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((rt0.c2) ISNULL)) AND (CASE WHEN v0.c0 THEN vt49.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c2 THEN vt49.c0 END)), (((((rt0.c1) BETWEEN (v0.c0) AND (v0.c1))))>=((x''))), (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c2)) IN ()) FROM t0, vt49, v0;SELECT DISTINCT AVG((- (v0.c2))) FROM t0 WHERE (CAST(0X2c564a99 AS TEXT) COLLATE BINARY);SELECT ALL CASE (((rt0.c1, v0.c1, v0.c2))>((rt0.c1, v0.c1, rt0.c1)))  WHEN ((rt0.c1) BETWEEN (v0.c2) AND (v0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (v0.c2)) END FROM vt49, rt0, v0, t0; -- 0ms;
SELECT DISTINCT (((+ (-221300301)))>>((((vt49.c0, v0.c2, rt0.c1)) BETWEEN ((v0.c1, vt49.c0, NULL)) AND ((t0.c0, v0.c1, t0.c0))))) FROM t0, rt0, v0;SELECT ((('-117675990', rt0.c0, rt0.c1)) BETWEEN ((CASE v0.c2  WHEN v0.c2 THEN rt0.c0 END, (+ (t0.c0)), ((v0.c2)OR('1064142961')))) AND ((SUM(v0.c1), v0.c2 COLLATE BINARY, v0.c0))), ((((NULL) NOT BETWEEN (vt49.c0) AND (v0.c0)))==(((rt0.c2)&(rt0.c2)))), CAST((((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) AS REAL) FROM vt49 WHERE (0.9530806259953258);SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) IS TRUE) FROM t0, v0, vt49 WHERE ((('0.4634643544575502') BETWEEN (NULL) AND (NULL)) COLLATE NOCASE);SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((0.7281782402180448)) AND ((((t0.c0) BETWEEN ('0.3731750250942014') AND (t0.c0))))) FROM vt49 WHERE ((((((((NULL)) NOT BETWEEN (('._2AP3{Z')) AND ((x''))))OR(CAST('1865573221' AS NUMERIC))))OR(CASE -3.26530514E8  WHEN NULL THEN '' ELSE NULL END)));SELECT NTH_VALUE(v0.c0, CASE ((t0.c0)<<(v0.c0))  WHEN CASE WHEN rt0.c1 THEN t0.c0 END THEN LOWER(rt0.c1) WHEN ((v0.c1) NOT BETWEEN (vt49.c0) AND ('1290488740')) THEN ((v0.c0)-(rt0.c2)) WHEN ((((v0.c2)OR(rt0.c2)))OR(t0.c0)) THEN (rt0.c0 IN ()) END) OVER (), 0.003579385678104896, (((vt49.c0)) BETWEEN (('2138490839')) AND (((((v0.c2))>((t0.c0)))))) FROM vt49, v0, rt0, t0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c1)|(v0.c2))) OVER ( RANGE ((v0.c1)!=(((rt0.c2) IS FALSE))) PRECEDING) FROM vt49 RIGHT OUTER JOIN t0 ON ((((((v0.c2)OR(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (v0.c1) AND ((~ (rt0.c2)))) FULL OUTER JOIN v0 ON ((((v0.c2)GLOB(vt49.c0))) IS TRUE) GROUP BY ((((CASE v0.c1  WHEN v0.c0 THEN rt0.c1 END)OR('486491344')))AND(CAST('1639782737' AS INTEGER))) HAVING CASE t0.c0 COLLATE RTRIM  WHEN ((((rt0.c1)AND(v0.c1)))OR(rt0.c0)) THEN (vt49.c0 IN ()) END;SELECT ((((v0.c2) BETWEEN (t0.c0) AND (rt0.c0)))%((0.9554152282023525 IN ()))), COUNT(((v0.c1) ISNULL)), CASE (vt49.c0 IN ())  WHEN ((v0.c1)%(rt0.c0)) THEN ((v0.c1) BETWEEN (v0.c2) AND (v0.c1)) WHEN ((t0.c0)>=(rt0.c2)) THEN ((v0.c2) BETWEEN (rt0.c0) AND ('')) WHEN ((t0.c0)>(t0.c0)) THEN ((rt0.c2)GLOB(x'32af')) END FROM rt0, vt49 WHERE ('143738855') GROUP BY (v0.c1 IN (rt0.c2)) COLLATE BINARY, (((((NOT (v0.c2)))AND(((rt0.c2) BETWEEN (v0.c0) AND (v0.c1)))))OR((v0.c0 IN (v0.c1)))), CAST(rt0.c1 COLLATE BINARY AS INTEGER);SELECT ((CASE WHEN rt0.c2 THEN 0.9497348902954934 ELSE rt0.c0 END) IS FALSE) FROM t0, rt0, vt49, v0; -- 0ms;
SELECT DISTINCT COUNT(((v0.c1)/(rt0.c0))) OVER ( ROWS  CURRENT ROW), (NOT ((v0.c2 IN ()))), ((((~ (v0.c2))))>((''))) FROM v0;SELECT CASE 0.6133603094030683  WHEN ((x'4e60')<(vt49.c0)) THEN rt0.c0 COLLATE NOCASE WHEN (('-1414556647') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((vt49.c0)<=(rt0.c1)) WHEN ((rt0.c2) IS FALSE) THEN (+ (0.09447715586765049)) ELSE rt0.c1 COLLATE RTRIM END, (((~ (0.7595637021679147))) NOT NULL), (NOT ((vt49.c0 IN ()))) FROM rt0, vt49, v0, t0; -- 1ms;
SELECT LIKELY(DISTINCT CAST(rt0.c1 AS INTEGER)) FROM t0, v0, rt0, vt49 WHERE ((((((('-120372')OR(0.9876707681507871)))OR(-538864425))) BETWEEN ((((-1.1767599E8)) NOT BETWEEN ((0.4662688758742033)) AND ((0xffffffffeb70a7ae)))) AND (((NULL)&(NULL))))); -- 0ms;
SELECT DISTINCT ((v0.c2)&('-531722972')) FROM vt49, t0, rt0, v0 WHERE (0.5236534218105949); -- 0ms;
SELECT ALL (NOT (('tV' IN (v0.c0)))) FROM t0, vt49;SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY ((((t0.c0) IS TRUE)) BETWEEN (rt0.c1) AND (CAST('-1078162750' AS NUMERIC)))  NULLS FIRST, t0.c0 DESC  NULLS LAST) FROM v0 WHERE (0.20273367956142907);SELECT ALL (((- (x'c70b'))) IS FALSE) FROM v0; -- 0ms;
SELECT DISTINCT MIN(((v0.c0) IS FALSE)) COLLATE BINARY FROM vt49;SELECT DISTINCT (+ ((- (v0.c0)))), CUME_DIST() OVER (), GROUP_CONCAT(((v0.c1)<<(v0.c2))) OVER ( ROWS ((LOWER(DISTINCT x'77f7'))<(((rt0.c2)!=(v0.c0)))) PRECEDING EXCLUDE CURRENT ROW) FROM vt49, rt0, t0, v0; -- 0ms;
SELECT DISTINCT v0.c2, ((((((x'') ISNULL))AND((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))))))AND(CAST(0xffffffffc754ca14 AS REAL))), (((rt0.c0, v0.c2, v0.c1, v0.c1, vt49.c0)) BETWEEN ((LIKELIHOOD(t0.c0, 0.9186783130929472), CAST(vt49.c0 AS BLOB), CASE WHEN vt49.c0 THEN v0.c0 WHEN t0.c0 THEN rt0.c1 WHEN v0.c2 THEN t0.c0 END, (((v0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, v0.c1, rt0.c1)) AND ((v0.c2, rt0.c2, v0.c2))), (((0.35335538191852944))<>((rt0.c0))))) AND ((((rt0.c2)>>(v0.c0)), (((vt49.c0, v0.c2, v0.c1, t0.c0, t0.c0)) BETWEEN ((rt0.c0, v0.c2, rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, vt49.c0, rt0.c1, t0.c0, t0.c0))), '0.2917553140829243', (t0.c0 IN ()), (((v0.c1, t0.c0, v0.c2))>((rt0.c0, rt0.c0, vt49.c0)))))) FROM vt49, v0, rt0, t0 WHERE (-538864425); -- 0ms;
SELECT DISTINCT 0xffffffff83c8aa09 FROM rt0, vt49, t0 ORDER BY x'' ASC, (CASE WHEN 1.29048874E9 THEN v0.c2 END IN ()), ((((v0.c1) IS FALSE)) BETWEEN (0.11574320027823803) AND (CASE WHEN v0.c1 THEN t0.c0 END))  NULLS LAST;SELECT DISTINCT IFNULL(((v0.c0)GLOB(vt49.c0)), (((v0.c0)) BETWEEN (('_+')) AND ((vt49.c0)))), TRIM((+ (rt0.c0))), CASE (v0.c0 IN ())  WHEN rt0.c0 THEN NULLIF(vt49.c0, rt0.c2) ELSE rt0.c2 COLLATE NOCASE END, ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (TRIM('')) AND (SUM(rt0.c0))), v0.c1 FROM vt49 WHERE (ABS('Ij0tm<v?' COLLATE NOCASE));SELECT ((SQLITE_COMPILEOPTION_GET(rt0.c0))!=(((v0.c1)>=(NULL)))), NTH_VALUE((((rt0.c0) NOT NULL) IN (MIN(rt0.c2, rt0.c1))), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR((('衱b}!i%kws') IS TRUE)))) OVER (), ((((t0.c0)<=(rt0.c0)))==(((v0.c0) NOT BETWEEN (x'') AND (vt49.c0)))) FROM t0, vt49, rt0 WHERE ((+ (CAST(NULL AS TEXT))));SELECT DISTINCT (((vt49.c0)|(v0.c1)) IN ()) FROM v0, rt0, t0 ORDER BY NULLIF(DISTINCT CASE WHEN v0.c2 THEN rt0.c2 END, 0.04486645080287477) ASC  NULLS LAST; -- 1ms;
SELECT (v0.c1 COLLATE NOCASE IN ((~ (v0.c1)))) FROM rt0, vt49 NOT INDEXED WHERE (CAST(LIKELY(DISTINCT NULL) AS NUMERIC));SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)|(((v0.c1) IS FALSE))) FROM vt49, t0, v0, rt0 WHERE (x''); -- 0ms;
SELECT ALL CASE TOTAL(v0.c2)  WHEN CAST(rt0.c2 AS INTEGER) THEN MIN(v0.c0) END, GROUP_CONCAT(CAST(vt49.c0 AS BLOB)), CASE WHEN ((v0.c0)=(rt0.c2)) THEN ((rt0.c0)LIKE(v0.c0)) END FROM v0, vt49;SELECT CAST(((v0.c2) BETWEEN (rt0.c0) AND (v0.c0)) AS TEXT) FROM rt0, v0, t0 GROUP BY ((CAST(vt49.c0 AS BLOB))&(((rt0.c0) NOTNULL)));SELECT DISTINCT (((((((rt0.c1, v0.c1, rt0.c0))<((v0.c1, v0.c0, v0.c2))))AND((v0.c2 IN (vt49.c0, v0.c0)))))OR(((rt0.c0) NOT BETWEEN (vt49.c0) AND (vt49.c0)))) FROM vt49, t0, rt0, v0 WHERE (CAST(LAST_INSERT_ROWID() AS BLOB)); -- 1ms;
SELECT x'' FROM v0 WHERE (CAST(((NULL)<>(x'384a')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT NULL FROM t0, rt0; -- 0ms;
SELECT IFNULL((NOT (rt0.c1)), v0.c0) FROM t0, rt0;SELECT (((- (vt49.c0))) NOT NULL), ((((v0.c2 COLLATE NOCASE)AND(((((((((v0.c1)AND(vt49.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))AND(((((rt0.c0)AND(v0.c1)))AND(t0.c0)))), ((v0.c2)||(v0.c0)) COLLATE RTRIM FROM v0, t0, vt49, rt0 WHERE (CAST((NOT (737659620)) AS NUMERIC)); -- 0ms;
SELECT ALL AVG(ABS(DISTINCT t0.c0)) FROM rt0;SELECT ALL (~ (CAST(v0.c1 AS REAL))) FROM vt49 WHERE (((((0.3000855733121257)IS('0.11575073485992826')))GLOB((NULL IN ())))) GROUP BY (- (v0.c2));SELECT ALL GROUP_CONCAT(v0.c2 COLLATE BINARY) OVER ( RANGE  UNBOUNDED PRECEDING), CASE WHEN (v0.c0 IN ()) THEN GROUP_CONCAT(rt0.c1) WHEN CAST(t0.c0 AS INTEGER) THEN CAST(NULL AS TEXT) WHEN MAX(rt0.c0) THEN (((vt49.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))) ELSE CASE t0.c0  WHEN v0.c2 THEN v0.c2 ELSE t0.c0 END END, vt49.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((rt0.c0)OR(((rt0.c0) ISNULL))))AND(((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c1)))))OR(t0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE BINARY)) INNER JOIN v0 ON CAST((rt0.c2 IN (vt49.c0)) AS REAL) INNER JOIN vt49 ON v0.c1 COLLATE NOCASE GROUP BY ((CASE vt49.c0  WHEN t0.c0 THEN rt0.c0 WHEN 'akz)' THEN rt0.c2 WHEN vt49.c0 THEN v0.c2 ELSE rt0.c0 END) BETWEEN (((rt0.c0) NOTNULL)) AND (vt49.c0 COLLATE BINARY)), CASE WHEN (vt49.c0 IN ()) THEN (NOT (vt49.c0)) END, CAST((- (rt0.c0)) AS INTEGER) HAVING ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR(((v0.c2) NOT NULL))))AND('1780755770'));SELECT ALL ((((v0.c1)LIKE(t0.c0)))=(rt0.c0)) FROM vt49, rt0, v0;SELECT ALL COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL CAST(((vt49.c0)GLOB(rt0.c2)) AS INTEGER), GROUP_CONCAT(COUNT(*)), (((((((v0.c0)OR(t0.c0)))OR(rt0.c1))))>=((((v0.c2) IS TRUE)))) FROM rt0, v0, t0;SELECT ALL ((UNLIKELY(v0.c0)) ISNULL) FROM rt0, vt49 WHERE (((0.42101122983030403) NOT BETWEEN (CASE 0.8855063493811055  WHEN '-295314272' THEN NULL END) AND (((0.7598369679732759) ISNULL))));SELECT (+ (TRIM(DISTINCT rt0.c1))), ((((rt0.c0)<>(rt0.c0)))<((+ (rt0.c2)))), ((((((((NULL COLLATE BINARY)OR((~ (rt0.c2)))))OR(CASE WHEN x'' THEN rt0.c2 ELSE v0.c2 END)))AND((- (x'7e4c')))))OR(((v0.c2)||(v0.c1)))) FROM rt0, vt49 CROSS JOIN v0 ON ((((((rt0.c0)OR(vt49.c0)))OR(v0.c2))) NOT NULL) INNER JOIN t0 ON (((+ (v0.c0))) NOT NULL); -- 0ms;
SELECT ALL (- (v0.c0 COLLATE BINARY)) FROM v0, rt0, t0 WHERE (((0.2681869744039772 IN ()) IN ())); -- 0ms;
SELECT ALL (((143738855, 0.7352405117303774, rt0.c0)) BETWEEN ((((((v0.c1)OR(v0.c2)))AND(v0.c1)), (v0.c0 IN (vt49.c0)), ((rt0.c1)<<(t0.c0)))) AND (((((('[]')OR(t0.c0)))OR(rt0.c0)), v0.c0 COLLATE BINARY, (NOT (v0.c1))))), (((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2)) IN (t0.c0 COLLATE RTRIM)), (SUM(v0.c0) IN (CASE WHEN v0.c2 THEN rt0.c0 WHEN rt0.c1 THEN v0.c2 WHEN v0.c1 THEN rt0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)) FROM v0 WHERE (((0.912635152307897 IN ('967052292', NULL)) IN ())) GROUP BY (((((((((((x'ea25'))>((rt0.c1))))AND(((((vt49.c0)AND(rt0.c0)))AND(x'')))))OR(CASE vt49.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN -2062749260 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(NULL)))OR(((((((((rt0.c2)AND(t0.c0)))AND(vt49.c0)))AND(rt0.c0)))AND(0.11789122862018031)))), CASE ((((0.3706097027830081)AND(rt0.c1)))AND(v0.c2))  WHEN (- (v0.c1)) THEN ((rt0.c2) NOTNULL) ELSE rt0.c1 COLLATE NOCASE END, ((((((((((rt0.c2)OR(t0.c0)))AND(v0.c2)))OR(v0.c2)))OR(NULL)))%(((((((((v0.c2)OR(rt0.c1)))AND(vt49.c0)))AND(rt0.c0)))OR(rt0.c1)))), ((((((((TRIM(DISTINCT t0.c0, rt0.c1))AND(CASE t0.c0  WHEN t0.c0 THEN v0.c0 END)))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))))AND((v0.c1 IN ()))))OR(((vt49.c0)/(vt49.c0)))), (('\nc{o,&^1') BETWEEN (v0.c1) AND ((v0.c0 IN (rt0.c0)))) HAVING CAST(-120372.0 AS TEXT);SELECT DISTINCT NULL FROM v0, rt0; -- 0ms;
SELECT ALL (((CAST(rt0.c2 AS BLOB)))>=((LIKELY(DISTINCT v0.c2)))) FROM rt0, vt49 WHERE (((0.6415373772416278) ISNULL));SELECT CUME_DIST() OVER () FROM v0, rt0 WHERE (NULL); -- 0ms;
SELECT LIKELY(rt0.c2) FROM v0, t0;SELECT ALL (- (-1247741370 COLLATE RTRIM)), (((vt49.c0)) NOT BETWEEN ((((((v0.c2)OR(rt0.c1)))AND(v0.c0)))) AND (((rt0.c1 IN ())))), (NULL IN ()), ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) IS TRUE), ((0.9590111467059209) NOT BETWEEN (MIN(v0.c1)) AND ((~ (t0.c0)))) FROM t0, v0, rt0, vt49 GROUP BY (((rt0.c2) IS FALSE) IN ()); -- 0ms;
SELECT (((v0.c2 COLLATE BINARY))>((vt49.c0))) FROM v0, vt49; -- 0ms;
SELECT ALL ((0.16601768474488432) IS FALSE) FROM t0 WHERE (((((NULL)-(x''))) BETWEEN (((x'')>>(x'd5e4'))) AND ((('') NOTNULL)))); -- 1ms;
SELECT ALL ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)OR(((-653228057)AND(rt0.c2)))))AND(HEX('P%da2㗓P*'))), ((((TOTAL(t0.c0))OR(((rt0.c2)GLOB(vt49.c0)))))AND('Qx')), COUNT(*) OVER () FROM t0, v0, vt49, rt0; -- 0ms;
SELECT ALL (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((v0.c2, v0.c0 COLLATE NOCASE, AVG(v0.c0))) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), ((rt0.c0) NOT NULL), ((((v0.c1)AND(rt0.c2)))OR(v0.c0))))) FROM t0, v0, rt0, vt49; -- 1ms;
SELECT DISTINCT (((- (v0.c1))) IS TRUE) FROM rt0, t0, v0, vt49; -- 0ms;
SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((((((rt0.c1)OR(-2.41186905E8)))AND(rt0.c0)))) AND ((TRIM(v0.c0)))) FROM v0 WHERE (((x'7b49') NOT BETWEEN (0X89147e7) AND (NULL)) COLLATE RTRIM);SELECT ALL COUNT((v0.c0 IN (v0.c0))) OVER () FROM v0; -- 0ms;
SELECT ALL (COUNT(*) IN ()) FROM v0 WHERE (CAST(CAST(0.2926495691782488 AS BLOB) AS INTEGER)); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE CAST(CASE rt0.c0  WHEN t0.c0 THEN v0.c0 WHEN vt49.c0 THEN NULL WHEN 0x13299b0f THEN vt49.c0 WHEN v0.c2 THEN rt0.c0 WHEN rt0.c1 THEN x'' ELSE t0.c0 END AS INTEGER)) OVER (), (((rt0.c1)) BETWEEN (((vt49.c0 IN (rt0.c2, rt0.c0)))) AND ((TYPEOF(DISTINCT -150060475)))), (v0.c1 IN ()) FROM rt0;SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c2)))) NOT NULL) FROM rt0, v0;SELECT DISTINCT LIKELY(DISTINCT ((rt0.c1) IS FALSE)) FROM v0, vt49, t0 INTERSECT SELECT ALL ((CAST(vt49.c0 AS NUMERIC)) NOT BETWEEN (0.4816469657131197) AND (0.23201065856787761)) FROM t0;SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c2) IS FALSE)))) FROM vt49, t0 WHERE ((((CAST('h-\n8^!Ll' AS NUMERIC)))<=((((('-221300301', x'', x'')) NOT BETWEEN ((NULL, -1.414556647E9, '0.3731750250942014')) AND ((x'', 0.7139821945542631, x'')))))));SELECT CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY, (+ (x'')), (((((((((((rt0.c2))<>((rt0.c0))))AND(CAST(rt0.c1 AS INTEGER))))OR(((((((((t0.c0)OR(-6.53228057E8)))AND(t0.c0)))OR(t0.c0)))OR(rt0.c2)))))OR(((v0.c2)+(rt0.c2)))))OR(v0.c0 COLLATE NOCASE)) FROM vt49 WHERE (((((0.24502677163798037) IS TRUE)) NOT BETWEEN ((~ (''))) AND ('-240198304' COLLATE BINARY)));SELECT DISTINCT (NOT (((rt0.c1)>(rt0.c1)))) FROM vt49, t0 WHERE ((((((NULL IN ()))AND(((NULL) ISNULL))))OR(((NULL)>>(x''))))) ORDER BY (((rt0.c2 IN (v0.c1)))>=(((rt0.c2) BETWEEN (1019568634) AND (v0.c0))))  NULLS LAST, rt0.c2 ASC;SELECT DISTINCT COUNT('0.003579385678104896') OVER () FROM t0, v0, rt0, vt49 WHERE (((((801448056) ISNULL)) NOT BETWEEN ((('')>=(x''))) AND (CASE 0.9714215120548869  WHEN 0.9876707681507871 THEN 'asIxV' ELSE NULL END))); -- 0ms;
SELECT ALL LIKELY(CAST(v0.c0 AS NUMERIC)) FROM t0;SELECT DISTINCT CASE WHEN rt0.c1 THEN rt0.c0 WHEN v0.c2 THEN NULL WHEN '-531722972' THEN t0.c0 END COLLATE NOCASE FROM rt0, vt49, v0, t0; -- 0ms;
SELECT DISTINCT x'' FROM v0, vt49, t0 ORDER BY COALESCE(((v0.c2)&(v0.c1)), CASE WHEN rt0.c1 THEN t0.c0 WHEN vt49.c0 THEN v0.c2 WHEN v0.c1 THEN vt49.c0 ELSE rt0.c0 END)  NULLS FIRST;SELECT (((- (vt49.c0)))+(((rt0.c2) NOT BETWEEN (vt49.c0) AND (vt49.c0)))), ((((t0.c0)*(t0.c0)))>(((vt49.c0) ISNULL))), CUME_DIST() OVER () FROM v0 LIMIT -1399665749 OFFSET 342195999;SELECT DISTINCT COUNT(IFNULL(vt49.c0, v0.c1)) FROM v0, rt0;SELECT ALL COUNT(((rt0.c0)|(x''))), ((0.5902541303756239)+((((vt49.c0, x'', rt0.c0))<((vt49.c0, rt0.c1, t0.c0))))), (((((1.019568634E9))!=((v0.c2)))) BETWEEN (((((((((v0.c2)OR(rt0.c2)))AND(0.2926495691782488)))OR(rt0.c0)))AND(rt0.c1))) AND (TRIM(DISTINCT vt49.c0, rt0.c0))) FROM vt49 WHERE ((('1398981051') NOT NULL) COLLATE NOCASE);SELECT DISTINCT (((((((((rt0.c0)OR(x'')))AND(v0.c1)))OR(v0.c2)))AND(v0.c2)) IN ()) FROM vt49, v0, rt0 WHERE (((('-2084001271')|('605350582')) IN ())); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN (rt0.c0 IN ()) THEN -120372.0 WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c1))) WHEN ((v0.c2)+(v0.c0)) THEN ((v0.c2) NOT NULL) ELSE json_valid(rt0.c1) END CROSS JOIN vt49 ON ((((x'')>(NULL))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END) AND ((rt0.c2 IN ()))) RIGHT OUTER JOIN rt0 ON (((((((((((t0.c0, rt0.c1, v0.c2))>((v0.c0, v0.c0, v0.c1))))OR(v0.c0)))OR(v0.c1)))AND((rt0.c1 IN ()))))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))) WHERE (((CAST(0x57fa3622 AS INTEGER))!=((('-1131103243') NOT BETWEEN ('H-\n8^!LL') AND (-1.1767599E8))))) GROUP BY ((((((vt49.c0)>>(v0.c1)))OR(((v0.c1)>(t0.c0)))))OR((- (rt0.c0))));SELECT (((((rt0.c1) IS FALSE), vt49.c0, 'nZ>x9./U#'))>((((((vt49.c0)OR(rt0.c2)))OR(v0.c2)), (v0.c1 IN ()), v0.c2 COLLATE NOCASE))) FROM rt0, vt49;SELECT DISTINCT CAST(rt0.c0 COLLATE RTRIM AS BLOB) FROM vt49, v0, t0 WHERE ((((~ (x''))) IS TRUE));SELECT GROUP_CONCAT(LOWER(v0.c0)) OVER () FROM v0 WHERE (((((NULL) NOT NULL))>((('-950744556') BETWEEN (-5.38864425E8) AND ('# .x4'))))); -- 0ms;
SELECT ALL ((ABS(DISTINCT 0.13645297114697652)) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)&(v0.c2)))), ROUND(((((v0.c2)OR(rt0.c2)))AND(rt0.c2)), (~ (rt0.c1))), (((t0.c0)>>(t0.c0)) IN ()) FROM rt0, t0, vt49, v0; -- 0ms;
SELECT DISTINCT (((((v0.c2)*(NULL))))<=((CASE t0.c0  WHEN vt49.c0 THEN v0.c2 WHEN rt0.c0 THEN '-653228057' WHEN '1518374322' THEN rt0.c0 END))) FROM vt49, t0 WHERE ((((((NULL)) NOT BETWEEN ((0.11710263602574367)) AND ((0X1aef893e)))) NOT BETWEEN (((0.6072972716401474)||(0.3971130160639327))) AND (((NULL)%(0.6597003891844144)))));SELECT rt0.c1, ((CASE WHEN vt49.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN ((~ (rt0.c1))) AND (((vt49.c0) NOT BETWEEN (rt0.c1) AND ('I0sMV<鷲h')))), ((MAX(vt49.c0)) NOT BETWEEN (x'') AND (HEX(v0.c2))) FROM t0, vt49;SELECT ((CASE v0.c1  WHEN NULL THEN v0.c2 WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END)<(((rt0.c0) BETWEEN (vt49.c0) AND (v0.c0)))) FROM t0 WHERE (LIKELIHOOD(CAST(NULL AS TEXT), 0.8091494471583529)) GROUP BY (~ ((vt49.c0 IN ())));SELECT ((x'')|(rt0.c2)) FROM t0, v0 WHERE (CAST(SQLITE_COMPILEOPTION_USED(0.4588855485804122) AS BLOB));SELECT DISTINCT ((((((t0.c0)/(v0.c0)))OR((NOT (rt0.c0)))))OR(((v0.c0)|(v0.c2)))) FROM v0, vt49, t0 WHERE (('O䟧Qk' COLLATE NOCASE IN ()));SELECT ALL ((((v0.c1) NOTNULL))+(((v0.c1) NOT BETWEEN (NULL) AND (rt0.c2)))), t0.c0, CASE (v0.c2 IN ())  WHEN ((t0.c0)>(0.950014730564539)) THEN (NOT (v0.c2)) END, MIN(((rt0.c0)|(rt0.c0))), MAX(COUNT(*) COLLATE BINARY) FROM v0, t0, vt49, rt0;SELECT ALL COUNT(*), DENSE_RANK() OVER (), ((x'572d')LIKE(((v0.c0) BETWEEN (v0.c1) AND (t0.c0)))) FROM t0, vt49, rt0, v0 WHERE ((~ ((0.3210770391333455 IN ())))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c2)) BETWEEN (((((((((rt0.c0)OR(v0.c0)))OR(vt49.c0)))AND(vt49.c0)))OR(x''))) AND (((((v0.c0)OR(rt0.c0)))AND(rt0.c1)))), x'', ((vt49.c0) BETWEEN (((rt0.c0) BETWEEN (v0.c2) AND (v0.c2))) AND ((+ (0.3971130160639327)))), (((~ (vt49.c0))) NOT NULL), DATETIME((((rt0.c1, v0.c0, rt0.c2))=((x'', rt0.c2, rt0.c2))), ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c2)), GROUP_CONCAT(rt0.c2), '486491344', ((((((((rt0.c2)AND('')))AND(v0.c0)))OR(t0.c0)))OR(t0.c0))) FROM vt49, t0, rt0, v0 WHERE (CASE ((0x14c6726d) NOT BETWEEN (x'8c46') AND ('641789325'))  WHEN (+ (0.7598369679732759)) THEN ((x'') BETWEEN ('737659620') AND (0.4295982589702043)) END); -- 0ms;
SELECT DISTINCT (((((vt49.c0) IS FALSE)))<(((NULL IN ())))) FROM t0, v0, vt49, rt0 LIMIT -520845054 OFFSET 348549741; -- 1ms;
SELECT (((rt0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt0.c0) ISNULL)))) FROM vt49, rt0 WHERE (((~ ('321493775')) IN ())) ORDER BY ((((((((CASE NULL  WHEN NULL THEN v0.c0 ELSE vt49.c0 END)OR(((0xffffffffe6c34bd6) IS FALSE))))AND(((rt0.c2) IS FALSE))))AND(((((v0.c1)AND(v0.c1)))OR(rt0.c2)))))OR(((vt49.c0) BETWEEN (v0.c2) AND (vt49.c0))))  NULLS LAST;SELECT DISTINCT ((CASE WHEN vt49.c0 THEN rt0.c1 WHEN t0.c0 THEN v0.c1 WHEN v0.c2 THEN vt49.c0 ELSE rt0.c0 END) NOT NULL), ((v0.c2)IS(CAST(rt0.c2 AS NUMERIC))), CASE WHEN CAST(v0.c0 AS TEXT) THEN NULLIF(vt49.c0, v0.c1) ELSE ((v0.c2) IS FALSE) END FROM vt49;SELECT ALL ((((t0.c0)>=(vt49.c0)))AND(((((((((v0.c2)OR(vt49.c0)))OR(v0.c2)))AND(v0.c0)))OR(t0.c0)))), CAST(((rt0.c2)GLOB(v0.c0)) AS REAL), (+ ((((vt49.c0))>=((vt49.c0))))) FROM v0, t0 WHERE (NULLIF(CASE NULL  WHEN x'' THEN x'' ELSE 9.67052292E8 END, ((('486491344'))=(('x*'))))) ORDER BY (((('558432380' COLLATE BINARY)OR(((vt49.c0)>=(v0.c0)))))AND(((rt0.c1)<=(rt0.c0)))) DESC;SELECT (((vt49.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN v0.c1 END)) AND ((CAST(rt0.c1 AS INTEGER)))), (((((rt0.c0))<=((rt0.c2)))) ISNULL), vt49.c0 FROM t0, vt49 WHERE (((('605350582' IN ()))||(((((((((0.6483713327337046)OR('nZ>x9./U#')))AND(x'')))OR('\rh')))OR('338031545')))));SELECT DISTINCT ((v0.c2) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (v0.c1)), ((((NOT (rt0.c2))))<((((((v0.c1)OR(0X89147e7)))OR(rt0.c0))))), CASE ((vt49.c0) BETWEEN (vt49.c0) AND (v0.c0))  WHEN ((((((((vt49.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(t0.c0)) THEN CAST(rt0.c2 AS BLOB) END FROM vt49 LIMIT -1168461203;SELECT DISTINCT v0.c0 FROM rt0, vt49, t0, v0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ROWS  CURRENT ROW), GROUP_CONCAT(MAX(v0.c0)), ((((vt49.c0)AND(((v0.c1)IS NOT(rt0.c1)))))OR((v0.c0 IN ()))) FROM t0, v0 WHERE (((('' IN ())) NOTNULL)) GROUP BY (((t0.c0)) BETWEEN ((((v0.c2)||(vt49.c0)))) AND (((((0.961221833552479))>((v0.c2)))))) HAVING (((((v0.c1))<=((v0.c0)))) NOT BETWEEN (RTRIM(rt0.c2)) AND (t0.c0 COLLATE BINARY)) LIMIT -531722972;SELECT (((((((((NULL)AND(v0.c1)))OR(v0.c0)))OR(v0.c0)))AND(v0.c1)) IN ()) FROM vt49; -- 0ms;
SELECT ((((v0.c1) BETWEEN (v0.c2) AND ('-538864425'))) BETWEEN (((vt49.c0) NOT NULL)) AND (((v0.c2)+(0.9914914779614544)))), (((((t0.c0 IN ()))OR(rt0.c1)))OR(CAST(vt49.c0 AS INTEGER))), ((((v0.c2) IS TRUE))>=(COUNT(*))), LTRIM(CASE NULL  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END, ((vt49.c0)<<(vt49.c0))), ((((rt0.c0) BETWEEN (rt0.c1) AND ('\꩓i]pQhݛ')))>(CAST(v0.c2 AS TEXT))) FROM t0 WHERE (((((0.7208472011844175 COLLATE BINARY)AND((NOT (0.8970818657257366)))))AND(((((((((NULL)AND(NULL)))AND(x'')))AND(0Xfffffffff70e4245)))OR(0.48346810060647805)))));SELECT DISTINCT ((((t0.c0)>('-528654874'))) BETWEEN (CASE vt49.c0  WHEN rt0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 ELSE t0.c0 END) AND (((vt49.c0) NOT BETWEEN (v0.c1) AND (v0.c1)))), (((((vt49.c0) ISNULL), GROUP_CONCAT(v0.c0), (('^ꨉ')>(v0.c2))))!=(((+ (v0.c2)), ((vt49.c0)=(rt0.c1)), (('') NOT BETWEEN (rt0.c1) AND (rt0.c0))))), v0.c0 FROM v0, t0, vt49;SELECT ALL (((~ (v0.c1))) NOT BETWEEN (CASE WHEN rt0.c1 THEN v0.c2 ELSE rt0.c2 END) AND (((v0.c1) ISNULL))) FROM t0, vt49;SELECT DISTINCT 0.8272968011260912 FROM t0, rt0; -- 0ms;
SELECT ALL ((((((((t0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(SUM(v0.c1))))OR(((v0.c0)&(v0.c0)))) FROM v0, rt0, vt49, t0 WHERE ((- (x'172c')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt49.c0) ISNULL) THEN ((t0.c0)IS NOT(v0.c0)) END FROM v0 INNER JOIN vt49 ON (- (CASE t0.c0  WHEN NULL THEN v0.c1 END)) CROSS JOIN t0 ON ((~ (vt49.c0)) IN ('6뷤.T}4LnP')) RIGHT OUTER JOIN rt0 ON ((vt49.c0)LIKE((- (rt0.c2)))) WHERE ((((NOT (x'5d56a86f'))) NOT BETWEEN (((((NULL)AND('-783118327')))OR('꽹\f|7{zRo'))) AND (CAST('-84432482' AS REAL))));SELECT ALL CASE (rt0.c2 IN ())  WHEN x'' THEN ((((v0.c2)OR(rt0.c1)))OR(rt0.c2)) WHEN CASE WHEN rt0.c0 THEN v0.c0 ELSE NULL END THEN ((((((((t0.c0)OR(rt0.c1)))OR('s7*3')))AND(vt49.c0)))AND(t0.c0)) WHEN ((v0.c1) NOT BETWEEN (rt0.c1) AND (v0.c1)) THEN (v0.c2 IN ()) WHEN ((t0.c0)||(rt0.c2)) THEN CAST(v0.c1 AS REAL) WHEN MAX(t0.c0) THEN v0.c2 COLLATE NOCASE ELSE (((rt0.c0)) BETWEEN ((vt49.c0)) AND ((rt0.c0))) END, (((CAST(t0.c0 AS BLOB)))<=((((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2))))), CASE json_valid(rt0.c2)  WHEN GROUP_CONCAT(v0.c0) THEN ((0.4006303764049942)IS(vt49.c0)) WHEN ((t0.c0) NOTNULL) THEN TOTAL_CHANGES() WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c2)*(v0.c1)) WHEN v0.c2 THEN v0.c2 WHEN CASE WHEN rt0.c0 THEN v0.c2 ELSE v0.c2 END THEN rt0.c0 COLLATE RTRIM ELSE t0.c0 END, AVG(0) OVER (), (((((vt49.c0)<=(v0.c0))))>=(((vt49.c0 IN ())))) FROM rt0, t0, v0, vt49 WHERE ((((HEX(NULL)))<>((CASE WHEN x'' THEN x'' ELSE 761835729 END)))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS BLOB)) ISNULL), TYPEOF(DISTINCT CASE v0.c2  WHEN rt0.c2 THEN NULL ELSE rt0.c1 END), TRIM(MAX(rt0.c2, v0.c1, t0.c0, rt0.c0), ((((v0.c1)AND(57730582)))OR(v0.c1))) FROM v0 WHERE ('-1131103243');SELECT DISTINCT ((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c2 THEN rt0.c1 ELSE vt49.c0 END) NOT NULL) FROM t0, v0, vt49 WHERE (NULLIF(DISTINCT (~ (NULL)), ((((((((NULL)OR(NULL)))AND(x'')))OR(0Xfffffffff3b0eb37)))OR('Z+>K|'))));SELECT DISTINCT CAST(COALESCE(t0.c0, rt0.c1) AS BLOB), ((SUM(v0.c1)) NOT BETWEEN (((v0.c1) BETWEEN (rt0.c1) AND (v0.c1))) AND (((v0.c1) NOTNULL))), ((((((((((((MAX(0.14444515875499875))AND(CAST(v0.c2 AS INTEGER))))AND(v0.c1 COLLATE NOCASE)))AND((((rt0.c1))<=((v0.c2))))))AND((NOT (v0.c1)))))OR(CAST(t0.c0 AS BLOB))))AND((t0.c0 IN ()))) FROM rt0, t0;SELECT ALL UNLIKELY((((v0.c1))==((rt0.c1)))) FROM t0, vt49, v0, rt0; -- 0ms;
SELECT ALL (((v0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c1))) FROM v0, vt49, t0 WHERE ((~ (CAST(NULL AS REAL))));SELECT DISTINCT ((((t0.c0)<>(vt49.c0))) NOT BETWEEN (((v0.c2) IS FALSE)) AND (((v0.c0)<>(rt0.c1)))) FROM rt0 WHERE (CAST((((NULL)) BETWEEN ((x'')) AND ((''))) AS NUMERIC));SELECT DISTINCT NULL, (- (((v0.c1) ISNULL))), (CASE WHEN '0.3000855733121257' THEN v0.c2 END IN ()) FROM v0, t0; -- 0ms;
SELECT (((v0.c2 COLLATE NOCASE))<((CASE WHEN v0.c2 THEN t0.c0 ELSE v0.c0 END))) FROM rt0 NOT INDEXED WHERE (CAST(((x'270b')/('')) AS TEXT));SELECT ALL SUM(NULL) OVER (), ((((v0.c2) NOTNULL)) NOT BETWEEN (((((v0.c2)AND(vt49.c0)))AND(v0.c0))) AND (((((((((rt0.c1)OR(rt0.c0)))OR(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))), COUNT(((rt0.c0)<=(vt49.c0))) FROM v0 WHERE (ABS(DISTINCT CAST(967052292 AS INTEGER))) GROUP BY CASE WHEN (+ (vt49.c0)) THEN TIME(v0.c1, v0.c1, vt49.c0) END, NULL, TRIM(DISTINCT ((v0.c0) NOT NULL)) HAVING CAST((+ (rt0.c2)) AS BLOB) LIMIT -1286420427;SELECT DISTINCT ((((((v0.c1)) BETWEEN ((vt49.c0)) AND ((v0.c1)))))<((((rt0.c1)/(vt49.c0))))), (((NULL, v0.c1, v0.c2)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c0)) AND ((t0.c0, rt0.c2, NULL))) COLLATE NOCASE, HEX(DISTINCT v0.c1 COLLATE RTRIM) FROM v0, t0, vt49, rt0 WHERE ((NOT ((NULL IN ())))); -- 0ms;
SELECT LAST_INSERT_ROWID() FROM vt49, v0, rt0, t0 WHERE ((((((('()') NOT BETWEEN (NULL) AND (0.40903866042438375)))AND(('1780755770' IN ()))))OR((('W#')/('u*''YFU'))))); -- 0ms;
SELECT DISTINCT ((vt49.c0)*((v0.c1 IN ()))) FROM vt49, rt0, v0; -- 0ms;
SELECT DISTINCT MIN(TRIM(DISTINCT v0.c2, vt49.c0)), DENSE_RANK() OVER (), LAST_VALUE(rt0.c2) OVER ( ORDER BY (((v0.c1)) NOT BETWEEN (((- (t0.c0)))) AND ((((((rt0.c0)AND(v0.c2)))AND(rt0.c0))))) ASC, (NOT (((x'')||(rt0.c1)))) ASC) FROM rt0, vt49, v0;SELECT DISTINCT SUM(CASE x'3b7c'  WHEN v0.c0 THEN v0.c1 ELSE rt0.c2 END) OVER ( PARTITION BY -1.425494151E9, ((((rt0.c2)IS NOT(t0.c0))) IS TRUE)), ((((((vt49.c0)AND(vt49.c0)))OR(v0.c1)))>=(CASE rt0.c1  WHEN v0.c1 THEN v0.c0 ELSE vt49.c0 END)), PERCENT_RANK() OVER () FROM vt49, v0, t0;SELECT ALL (((v0.c1)>=(rt0.c0)) IN ()), ((((CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN '-736199925' WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END)OR(((t0.c0) ISNULL))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))), COUNT((v0.c0 IN (t0.c0))) FROM t0, vt49, v0, rt0; -- 0ms;
SELECT UPPER(DISTINCT (((v0.c1, rt0.c1, 'N5'))=((rt0.c2, v0.c0, -2.21300301E8)))) FROM vt49;SELECT DISTINCT SUM(CASE v0.c0  WHEN v0.c0 THEN vt49.c0 END) FROM vt49, t0;SELECT (((rt0.c0, v0.c2, v0.c0)) BETWEEN ((0X1bb3b3da, AVG(NULL), (vt49.c0 IN ()))) AND ((COUNT(*), MIN(t0.c0), (rt0.c1 IN (v0.c1))))) FROM rt0, vt49 WHERE (((((NULL) NOT BETWEEN (-187187740) AND (0.3706097027830081))) IS FALSE)) GROUP BY (t0.c0 IN ());SELECT DISTINCT (((rt0.c2)) BETWEEN (((((rt0.c1))<(('1064142961'))))) AND ((v0.c2))), (((((rt0.c0)<(v0.c2))))<((CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END))), (((v0.c1)) BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((vt49.c0)<<(v0.c2))))) FROM v0, vt49, rt0 WHERE ('' COLLATE BINARY);SELECT DISTINCT (('0.7598369679732759')>(CASE WHEN rt0.c1 THEN rt0.c1 END)) FROM v0, rt0, t0, vt49 WHERE (0.7785141588434367 COLLATE BINARY) LIMIT -1247741370 OFFSET -950744556; -- 0ms;
SELECT ALL ((rt0.c0 COLLATE BINARY) NOT NULL), rt0.c0, MAX(rt0.c2) FROM v0, vt49, t0, rt0 WHERE (((((((((CASE WHEN '' THEN 0.9946403996947835 END)AND(CASE NULL  WHEN 0.3541442599793253 THEN 'Kb	Xo\' END)))OR(COALESCE('955604977', 'Q?YsWyQ', 0.6398247189331171, NULL))))AND('449374395' COLLATE RTRIM)))OR(((NULL)|(0.8626342325161779))))) UNION ALL SELECT DISTINCT (((((rt0.c2))<=((vt49.c0))))==((NOT (v0.c1)))), ((((rt0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (MAX(v0.c2)) AND (NULL)), ((((0.7686406595146272 COLLATE RTRIM)AND(((v0.c0)/(v0.c2)))))OR(((vt49.c0) NOT NULL))) FROM rt0, v0;SELECT DISTINCT ((((rt0.c2)LIKE(rt0.c1))) NOT BETWEEN (MIN(rt0.c1)) AND (CAST(vt49.c0 AS REAL))) FROM vt49, v0, rt0; -- 0ms;
SELECT ALL (((((((((rt0.c1)AND(NULL)))AND('877401094')))OR(vt49.c0)))OR(NULL)) IN ()) FROM v0, rt0, vt49 WHERE (((('.IrZB')) NOT BETWEEN ((((0.14625342794379703) NOT BETWEEN (x'') AND ('-187187740')))) AND (((- (0.38350041329983686)))))); -- 1ms;
SELECT DISTINCT (((t0.c0, vt49.c0, rt0.c1)) NOT BETWEEN ((GROUP_CONCAT(t0.c0), (- (t0.c0)), ((v0.c1)==(v0.c0)))) AND ((((t0.c0)OR(rt0.c1)), ((((((((v0.c1)OR(vt49.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(t0.c0)), t0.c0 COLLATE BINARY))), SQLITE_SOURCE_ID(), ((((rt0.c0)IS NOT(t0.c0))) BETWEEN (json_type(v0.c0)) AND (RTRIM(v0.c1))) FROM t0 LIMIT -117675990 OFFSET -240198304;SELECT ALL (((rt0.c2)) BETWEEN ((v0.c0)) AND (((((v0.c1))<>((rt0.c0)))))) FROM t0, rt0, vt49, v0 WHERE (CASE 0.6928711914110656 COLLATE RTRIM  WHEN NULLIF(DISTINCT 0.43676590501748813, '') THEN ('' IN ()) ELSE ((0.8187088550697457) NOTNULL) END) GROUP BY rt0.c0; -- 0ms;
SELECT DISTINCT ((MAX(v0.c2)) NOTNULL), rt0.c1, CAST(highlight(vt49.c0, x'', rt0.c2, rt0.c2) AS TEXT) FROM v0, vt49, t0 WHERE ((((('YSA8 ~Wg{') NOT BETWEEN ('n|['']I5') AND (NULL)))=(json_insert('1521532429', 'EnP+*n.{倒', x'')))) GROUP BY (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((vt49.c0))))<((~ (rt0.c2)))) LIMIT -1763379659;SELECT DISTINCT COUNT(*) OVER (), (((rt0.c2, (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, v0.c2, v0.c0)) AND (('143738855', v0.c1, v0.c2))), ((vt49.c0)/(v0.c0))))==((((((((((v0.c1)AND(NULL)))AND(4.64761818E8)))OR(rt0.c1)))AND(t0.c0)), rt0.c0 COLLATE RTRIM, ((vt49.c0)<(t0.c0))))), FIRST_VALUE(((CASE WHEN vt49.c0 THEN vt49.c0 ELSE 'ji' END) NOT BETWEEN (CASE WHEN vt49.c0 THEN vt49.c0 WHEN vt49.c0 THEN vt49.c0 WHEN vt49.c0 THEN vt49.c0 ELSE vt49.c0 END) AND (vt49.c0 COLLATE BINARY))) OVER () FROM vt49 WHERE (((0.8666990646305027 IN ()) IN (((NULL) NOT BETWEEN ('-1267291756') AND (0.4006303764049942)), (((NULL)) NOT BETWEEN (('-357877283')) AND ((NULL))))));SELECT DISTINCT (NOT ((((v0.c1)) BETWEEN ((v0.c1)) AND ((vt49.c0))))) FROM t0, rt0, vt49, v0 WHERE (CASE WHEN ((((NULL)OR('0')))OR(2095921692)) THEN (('')<<(0.6797457023481492)) ELSE ((x'c939') BETWEEN (0.8455613540887661) AND ('OS*yJb^j>')) END); -- 0ms;
SELECT ALL (((((v0.c2)/(v0.c2)), ((rt0.c0)IS(vt49.c0)), (rt0.c0 IN (v0.c1))))>((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END, ((rt0.c0)>>(v0.c0)), ((((rt0.c0)AND(t0.c0)))AND(t0.c0))))) FROM rt0 WHERE ((CASE WHEN NULL THEN 4.49374395E8 WHEN '0.3000855733121257' THEN ')I' WHEN x'' THEN 0.558532405155403 WHEN 'L椨fx''!' THEN NULL WHEN NULL THEN NULL END IN ()));SELECT DISTINCT CAST(v0.c2 AS NUMERIC) FROM vt49, t0 WHERE (((((((0.17319522042216684))>(('1327940987')))))<((((((((((0.36447619643653273)OR('451905854')))OR(1.327940987E9)))AND(x'')))AND(-1352292263)))))) LIMIT -613674851;SELECT ALL ((((((v0.c1) BETWEEN (v0.c1) AND (vt49.c0)))AND(MAX(v0.c2))))OR(t0.c0 COLLATE BINARY)) FROM t0 WHERE (((DATETIME(0.3444423516523246, x'', 0.9034643424575832, 0.3444423516523246, NULL)) IS FALSE));SELECT DISTINCT ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (DATE(rt0.c0, v0.c1, v0.c1)) AND (CAST(vt49.c0 AS BLOB))) FROM rt0, v0 WHERE (CASE WHEN CASE -5.20845054E8  WHEN NULL THEN NULL ELSE '-1036687566' END THEN 0.6792458042804002 ELSE (0xffffffff83c8aa09 IN ()) END);SELECT ALL (NOT (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM t0 WHERE (((((0.12676567355122792)/('792649445')))>>(NULL))) GROUP BY CAST(((((t0.c0)AND(vt49.c0)))AND(-633587350)) AS TEXT), CAST(rt0.c2 AS NUMERIC), (((vt49.c0 IN (v0.c0)))>>(SUBSTR(v0.c0, v0.c0)));SELECT ((((v0.c2) ISNULL))AND(AVG(rt0.c2))) FROM v0, vt49, rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS REAL)) BETWEEN (rt0.c2 COLLATE BINARY) AND ((((v0.c2))==((rt0.c0))))) FROM v0 WHERE ((- (LIKE(0.08264601346682077, 0Xffffffffc2356732))));SELECT DISTINCT CAST((rt0.c2 IN (vt49.c0, v0.c0)) AS REAL), COUNT(NULLIF(rt0.c1, vt49.c0)), (((~ (rt0.c0))) BETWEEN (((v0.c1) IS TRUE)) AND (((rt0.c2) BETWEEN (t0.c0) AND (vt49.c0)))) FROM vt49, t0, rt0 WHERE ((((((((((NOT (x'')))OR(((0.5221151765646578) NOT BETWEEN ('') AND (0.7797862141374222)))))OR(CAST(0.3129420982336817 AS REAL))))AND(((x'bc25') IS TRUE))))OR(0.6233753151383492 COLLATE RTRIM)));SELECT DISTINCT CAST((- (rt0.c2)) AS INTEGER) FROM t0, vt49 LIMIT 901743975 OFFSET -1075832915;SELECT ALL CASE WHEN (t0.c0 IN ()) THEN UNLIKELY(rt0.c1) END, CAST(CASE WHEN v0.c2 THEN t0.c0 END AS NUMERIC), TOTAL(vt49.c0) FROM rt0, v0 WHERE (((0.3149749957338459 COLLATE BINARY)<(((NULL) BETWEEN ('%W21') AND (x'1cff')))));SELECT DISTINCT '0.9714215120548869', ((((rt0.c1)>=(v0.c1))) ISNULL), CASE v0.c0 COLLATE NOCASE  WHEN CAST(rt0.c1 AS NUMERIC) THEN (((vt49.c0))<((rt0.c2))) END FROM rt0, vt49, v0, t0 LIMIT -2024113437; -- 0ms;
SELECT DISTINCT ((((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((v0.c1 IN ()))))OR((rt0.c2 IN ()))) FROM rt0, vt49, v0 WHERE (CASE ((((NULL)AND(x'')))AND(0.7085316184937395))  WHEN (('-2052593790')<=(x'efec')) THEN 1639782737 COLLATE BINARY WHEN ((x'')<=(NULL)) THEN (~ ('9B')) WHEN 0.7035442406615428 COLLATE BINARY THEN ((((NULL)OR('-1959653894')))OR(0.16816285374617734)) END) LIMIT -613674851 OFFSET 958197030; -- 0ms;
SELECT DISTINCT NULL COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS BLOB)) BETWEEN (MAX(t0.c0)) AND ((((t0.c0))<((rt0.c1))))), (((((rt0.c2))!=((vt49.c0))))-(NULL COLLATE BINARY)), ((((((((NULL COLLATE NOCASE)AND(((rt0.c2)&(rt0.c2)))))AND(CASE '1616433566'  WHEN rt0.c0 THEN v0.c2 WHEN v0.c2 THEN rt0.c2 WHEN vt49.c0 THEN rt0.c1 END)))AND(((v0.c2)>=(-6.89621549E8)))))OR(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c2 WHEN t0.c0 THEN rt0.c0 END)) FROM t0, vt49, v0 WHERE (((x'')>=(((0.5691874746650408)|(x'')))));SELECT ALL ((((v0.c0)OR(((vt49.c0)+(v0.c1)))))AND(((0.8078411158214862)==('')))) FROM rt0 WHERE ((('')>>('蜧DsT5Xr')) COLLATE NOCASE);SELECT t0.c0, (((((v0.c1)) BETWEEN (('\n6T-)W뚟')) AND ((rt0.c2)))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((0.6928711914110656) IS TRUE))), AVG((- (rt0.c1))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND json_quote((rt0.c1 IN ())) FOLLOWING) FROM v0, t0 NOT INDEXED, vt49 NOT INDEXED WHERE (((x'e0f9')&(((NULL)>>(x'')))));SELECT ALL MIN(((v0.c2)<=(vt49.c0))) FROM rt0, t0, vt49 WHERE ((('')<<(NULL)) COLLATE RTRIM);SELECT ALL ((((v0.c2)IS NOT(v0.c2)))>((~ (rt0.c0)))) FROM rt0 WHERE ((((x'84f3', NULL, 0Xdd84618)) BETWEEN ((((x'')>(0.01835981010216281)), ((NULL)<>('143738855')), x'' COLLATE NOCASE)) AND ((((('')) NOT BETWEEN ((-941934887)) AND ((NULL))), (((((((('2138490839')AND('0.6133603094030683')))AND(NULL)))AND(0.2926495691782488)))AND(NULL)), (((('VxxmQ?]U2')AND(1283670349)))AND(0xfffffffffea7aa53))))));SELECT ALL CAST(v0.c1 COLLATE BINARY AS NUMERIC) FROM v0, rt0 WHERE (((((NOT (x''))))>=((((0.25549021078284495)>(x'')))))) ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c2 THEN NULL WHEN rt0.c0 THEN t0.c0 END))>(((NULL IN ())))) ASC  NULLS LAST;SELECT (((rt0.c2, vt49.c0, v0.c0, vt49.c0, '~4໧Rp|GBg')) BETWEEN ((CASE v0.c2  WHEN rt0.c2 THEN '0.6398247189331171' END, ((rt0.c1)!=(v0.c0)), TOTAL(rt0.c1), rt0.c0, ((v0.c1)||(v0.c1)))) AND (((+ (rt0.c0)), CAST(0xfffffffff23949aa AS NUMERIC), ((vt49.c0)AND(rt0.c0)), rt0.c2, ((((((((vt49.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))))) FROM vt49, t0, v0 WHERE (CASE LOWER(DISTINCT 0.4625649155034456)  WHEN (((''))<(('9'))) THEN ('Dj' IN ()) END) ORDER BY ((rt0.c0 COLLATE RTRIM)IS NOT((((vt49.c0, v0.c0, vt49.c0))>((v0.c2, rt0.c1, x'50e9')))));SELECT DISTINCT ((((((((v0.c0)OR(vt49.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) COLLATE BINARY FROM v0, t0, vt49, rt0 ORDER BY (~ ('901743975')) DESC; -- 2ms;
SELECT ALL ((rt0.c0) NOT NULL) COLLATE BINARY FROM rt0, t0, v0 WHERE (CASE WHEN 0Xffffffffc754ca14 COLLATE RTRIM THEN CAST(0.9098527096642707 AS NUMERIC) WHEN x'' THEN (((x'a048')) BETWEEN (('-OS!')) AND ((x'e843'))) WHEN ((x'5118')*(x'95a5')) THEN ((('-295314272', NULL, '165156156'))>((NULL, '-206509257', x''))) WHEN ((NULL) IS TRUE) THEN (~ ('-1272271491')) WHEN CASE '+''䪙'  WHEN 1122924067 THEN x'' END THEN CAST(NULL AS NUMERIC) WHEN ((NULL)AND(0.1622711190872217)) THEN json_array('', NULL) WHEN ((0.0745299913897648)/('Z뵫 䢙.-K}')) THEN ((NULL)LIKE(NULL)) ELSE (NULL IN ()) END) GROUP BY ((((((v0.c2)+(rt0.c0)))AND(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))))OR(((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))) HAVING (((((v0.c1) NOTNULL)))>=(((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))); -- 0ms;
SELECT json_type(CASE v0.c0  WHEN v0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 ELSE v0.c2 END) FROM vt49, v0, t0, rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT ALL CASE (v0.c1 IN ())  WHEN rt0.c0 COLLATE NOCASE THEN CAST(v0.c2 AS REAL) ELSE PRINTF(v0.c1, rt0.c2, rt0.c0) END FROM v0, vt49, t0, rt0 NOT INDEXED WHERE (((((((0.20243029941173796)) NOT BETWEEN (('1>k')) AND ((NULL))), ((0X2cfe4b3f) IS TRUE), (('533823954') IS TRUE)))>((TRIM(DISTINCT x'', -1.399665749E9), ('R9' IN ()), (+ (0xfffffffff70e4245)))))); -- 0ms;
SELECT DISTINCT CAST((NOT (rt0.c2)) AS BLOB) FROM vt49, rt0, t0, v0 LIMIT -653228057 OFFSET -215080148; -- 0ms;
SELECT NULL, MAX(((v0.c2)IS(vt49.c0))), COUNT(*) FROM v0, t0, rt0, vt49; -- 0ms;
SELECT ((CAST(v0.c1 AS REAL)) IS TRUE) FROM vt49, rt0 WHERE (CAST(CASE WHEN x'42ae' THEN NULL WHEN 0.7870118828914895 THEN x'' WHEN 338031545 THEN x'' ELSE NULL END AS REAL));SELECT ALL x'c1ea' FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST((- (t0.c0)) AS BLOB) FROM vt49 WHERE ((((- ('R>HR'))) BETWEEN (json_array('18郖l', NULL)) AND ((((('1476015650')OR(x'')))AND('ysa8 ~wg{')))));SELECT DISTINCT (((((v0.c1)==(v0.c1))))<=(((((('1722253489')OR(v0.c2)))AND(vt49.c0))))) FROM vt49, v0 WHERE (CASE ((((0.49197460075496047)OR(NULL)))OR('0'))  WHEN x'' THEN NULL COLLATE RTRIM WHEN ((x'')<=(0.7976148192625223)) THEN (NULL IN ()) WHEN ((('', 0.006198603922821011, 0X4ed28162, NULL, '-1606283017')) BETWEEN ((0.2917553140829243, '', 0.23201065856787761, -6.3358735E8, '2137347705')) AND ((NULL, x'', '-1870170665', 0.7426650353189342, -533856678))) THEN ((x'')=(x'')) ELSE NULL COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM vt49 WHERE (CHANGES()) ORDER BY x'9bc7', CASE (rt0.c2 IN ())  WHEN (((vt49.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) THEN HEX(rt0.c1) ELSE (+ (rt0.c2)) END ASC  NULLS FIRST;SELECT ALL (((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))AND((~ (rt0.c0)))) FROM t0, rt0, v0 WHERE (TYPEOF(DISTINCT (+ ('Y_!')))); -- 0ms;
SELECT ALL (CAST(rt0.c2 AS TEXT) IN ()) FROM vt49 WHERE (CASE '-2106749676' COLLATE BINARY  WHEN ((0.5738970684823878) ISNULL) THEN (('-613674851') NOT BETWEEN (-221300301) AND (NULL)) WHEN CAST(NULL AS NUMERIC) THEN ((x'797a')AND('-231126614')) WHEN '' THEN (('*}') NOT NULL) ELSE (('-440335832') NOT NULL) END); -- 0ms;
SELECT DISTINCT (((vt49.c0 IN (v0.c0))) NOT NULL) FROM vt49;SELECT ALL CAST((rt0.c1 IN ()) AS INTEGER) FROM vt49, v0, t0, rt0 WHERE (CHAR(((x'') NOT BETWEEN ('IE#''輳*') AND (-708817515)))); -- 0ms;
SELECT DISTINCT (((v0.c0) IS FALSE) IN (((((rt0.c2)OR(v0.c2)))AND(t0.c0)))), (((v0.c0)) NOT BETWEEN ((0.14444515875499875)) AND ((CASE WHEN rt0.c2 THEN 'J' ELSE vt49.c0 END))), ((json_type(v0.c1))+(CASE v0.c1  WHEN rt0.c2 THEN v0.c1 END)) FROM t0, vt49, rt0, v0 ORDER BY ((((v0.c0))<=((vt49.c0))) IN (rt0.c0))  NULLS FIRST; -- 2ms;
SELECT ALL TOTAL(v0.c2 COLLATE BINARY) FROM v0 WHERE ((('')||('911728367')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((((rt0.c1) IS FALSE))) AND ((MIN(v0.c2)))) FROM rt0, v0 WHERE (((('1522945951')IS(0.6177431157121271)) IN ())); -- 0ms;
SELECT ALL (x'' IN ()), TOTAL(CASE WHEN '	''' THEN v0.c2 ELSE v0.c0 END) OVER (), ((0.11710263602574367) NOTNULL) FROM t0, v0, rt0, vt49 WHERE (LIKELIHOOD(CAST(NULL AS TEXT), 0.9354579994400637)); -- 0ms;
SELECT DISTINCT SUM(((v0.c0)IS(t0.c0))) FROM vt49, t0;SELECT ALL (((vt49.c0, NULL, rt0.c1)) BETWEEN ((((rt0.c0) NOTNULL), ((v0.c0)>=(v0.c1)), ((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) AND ((rt0.c0 COLLATE RTRIM, (((v0.c2)) BETWEEN ((v0.c0)) AND ((t0.c0))), (+ (vt49.c0))))) FROM t0, rt0, vt49 ORDER BY (((rt0.c2, v0.c1, rt0.c2)) BETWEEN ((rt0.c1, v0.c1, rt0.c2)) AND ((rt0.c1, vt49.c0, '0.9590111467059209'))) COLLATE RTRIM ASC  NULLS FIRST;SELECT DISTINCT CASE ((2127386184) IS TRUE)  WHEN ((((((((vt49.c0)AND(v0.c1)))OR(rt0.c2)))OR(v0.c0)))AND(v0.c2)) THEN (~ (rt0.c2)) ELSE CAST(rt0.c1 AS NUMERIC) END FROM t0 WHERE ((((((0Xffffffffeeaf3366) IS FALSE), CAST(0.9702542796815181 AS BLOB), ((-2052593790)*(0.11157919316563158)), UNICODE(x'685b'), ''))<(('eBP.L}' COLLATE BINARY, (('') NOT BETWEEN ('-850962530') AND ('-231126614')), ((NULL) NOT BETWEEN (x'') AND (-9.50744556E8)), 'K!)Z尲c+' COLLATE RTRIM, '[]' COLLATE BINARY))));SELECT ALL (((v0.c2)) NOT BETWEEN ((TOTAL_CHANGES())) AND ((v0.c0 COLLATE BINARY))), (((rt0.c2 IN ())) ISNULL), TOTAL((vt49.c0 IN ())) OVER () FROM t0 WHERE (((CASE x'020d'  WHEN 0.886434012886807 THEN '5{c''Yl짷' WHEN '1065030027' THEN '1037154610' WHEN 'FALSE' THEN 'IR<C0[]	䐓' ELSE NULL END)<<((((0.9294799035912406)) BETWEEN ((0xffffffff8709eae8)) AND ((0Xffffffff82136df0))))));SELECT ALL 0Xfffffffff4d7bde4, TOTAL(0.03867146022704604), CASE (('') IS TRUE)  WHEN AVG(t0.c0) THEN ((v0.c1)||(vt49.c0)) ELSE ((((-1885913902)AND(t0.c0)))AND(v0.c0)) END FROM t0 WHERE (CAST(((((((((((((NULL)OR('-433468777')))OR(x'')))OR('')))OR(NULL)))OR(0X37524668)))AND('')) AS NUMERIC)) ORDER BY ((v0.c2 COLLATE RTRIM)OR((rt0.c0 IN ()))), (((((((((rt0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c0)))OR(vt49.c0)) IN ((vt49.c0 IN (rt0.c2, rt0.c1)))) DESC;SELECT DISTINCT (((- (rt0.c0)))%(((((rt0.c0)OR(rt0.c2)))OR(vt49.c0)))) FROM v0, vt49, t0 LIMIT 1017975123 OFFSET -514622680;SELECT AVG((- (rt0.c1)) COLLATE BINARY), (~ (t0.c0)) COLLATE BINARY, TOTAL(((t0.c0)IS(v0.c1))) FROM v0, vt49, t0, rt0 LIMIT -22566317 OFFSET -706000096 UNION ALL SELECT CAST(MAX(vt49.c0) AS TEXT), NULLIF(t0.c0, (- (t0.c0))), (~ (COUNT(*))) FROM rt0 WHERE (((TRIM(x'', '-1425494151'))<>(((((0.5714409777070425)AND(x'')))AND(NULL)))));SELECT DISTINCT 0x3b58a2fe FROM t0, rt0, v0 GROUP BY CAST(((t0.c0)>(rt0.c1)) AS BLOB), ((CAST(rt0.c2 AS TEXT))|(((0.9281255738819228)|(v0.c0)))), (CASE rt0.c2  WHEN vt49.c0 THEN rt0.c1 ELSE v0.c2 END IN ()); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt49, rt0, v0 WHERE (((((((x'1255')OR(NULL)))AND(0.15108521107009243)))<(((((0xffffffffcdfc5012)OR(NULL)))OR(0.9034643424575832))))); -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN ((TOTAL(v0.c1))) AND ((CASE v0.c2  WHEN x'' THEN v0.c1 ELSE t0.c0 END))) FROM vt49, v0 NOT INDEXED, t0 WHERE (json_patch((~ (-2.40198304E8)), (((449374395, '-241186905', '-1582494247'))<=(('1532031682', 1.47601565E9, 'Qo'))))); -- 0ms;
SELECT ALL ((((((((v0.c1)OR(((rt0.c0)==(v0.c0)))))OR(CASE WHEN t0.c0 THEN v0.c2 ELSE rt0.c2 END)))OR(vt49.c0)))AND(((t0.c0) IS FALSE))) FROM rt0 WHERE ((((1.019568634E9)) BETWEEN ((((0.7289389593677618)-(x'')))) AND ((((x'd4a888ab') NOT NULL)))));SELECT ((v0.c2)IS NOT(((((v0.c1)AND(rt0.c2)))AND(rt0.c0)))), CAST(NULL AS NUMERIC), ((CASE rt0.c2  WHEN v0.c0 THEN vt49.c0 WHEN 's !BX]18''' THEN vt49.c0 WHEN v0.c2 THEN rt0.c0 ELSE v0.c2 END) BETWEEN (((rt0.c0)-('763828111'))) AND (CASE v0.c2  WHEN rt0.c0 THEN v0.c1 WHEN vt49.c0 THEN vt49.c0 WHEN t0.c0 THEN vt49.c0 END)) FROM rt0, v0, vt49, t0 WHERE (CAST(0.22254402008136076 COLLATE RTRIM AS NUMERIC)); -- 0ms;
SELECT CASE ((v0.c1)%(rt0.c0))  WHEN CASE WHEN rt0.c2 THEN '477964332' ELSE rt0.c1 END THEN CAST(v0.c0 AS INTEGER) ELSE x'' END, ((CASE vt49.c0  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN x'ba3b' THEN v0.c0 END)&(0.8386841876218604)), MAX(((t0.c0)<<(v0.c2)), ((9.55604977E8)>=(v0.c1))) FROM vt49, t0 LIMIT -2024113437 OFFSET -1;SELECT DISTINCT ((COUNT(vt49.c0)) IS FALSE) FROM vt49, t0, rt0, v0 GROUP BY v0.c1, ((((NULL)+(v0.c2)))=(NULL)), (NOT (v0.c1)), rt0.c2, ((vt49.c0) IS FALSE) COLLATE RTRIM; -- 1ms;
SELECT DISTINCT ((((rt0.c2)|(rt0.c0)))||(v0.c2 COLLATE RTRIM)) FROM v0, rt0, vt49, t0; -- 0ms;
SELECT ((LOWER(DISTINCT -8.4432482E7)) NOTNULL) FROM vt49, rt0, v0; -- 0ms;
SELECT DISTINCT LEAD(rt0.c2, NULL, (((t0.c0)) BETWEEN ((((((t0.c0)AND(rt0.c2)))OR(t0.c0)))) AND ((((rt0.c2)+(1129115822)))))) OVER (), v0.c0, CAST((NOT (v0.c1)) AS INTEGER) FROM rt0, t0 INTERSECT SELECT DISTINCT v0.c0, (v0.c1 IN ()), LIKELIHOOD(((vt49.c0)<=(rt0.c0)), 0.5822736055216534) FROM vt49, rt0 WHERE ((((x''))<=((TYPEOF(DISTINCT x'1366db18')))));SELECT DISTINCT '0.48346810060647805' FROM vt49 WHERE (((((((((0.8174914741728834)AND('')))OR(NULL)))OR(0.8580507084898491)))AND(x'')) COLLATE RTRIM) LIMIT 2133850155; -- 0ms;
SELECT NULL, TOTAL(((rt0.c0)+(t0.c0))), ((((0X2fc52078)<(v0.c2)))||(HEX(DISTINCT v0.c1))) FROM vt49, t0, rt0;SELECT TOTAL(-5.28654874E8) OVER (), ((CASE WHEN v0.c0 THEN 'P#5흳a[8s' END)<=(ABS(v0.c1))), (CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c2 THEN v0.c1 WHEN '!솻uj%*9⅞' THEN rt0.c0 ELSE vt49.c0 END IN ()) FROM vt49;SELECT ALL CASE CASE t0.c0  WHEN v0.c1 THEN t0.c0 ELSE vt49.c0 END  WHEN CAST(v0.c1 AS NUMERIC) THEN (rt0.c2 IN (v0.c2)) ELSE CAST(rt0.c1 AS BLOB) END FROM rt0, t0 GROUP BY ((CAST(rt0.c2 AS TEXT))|((0.06189292909890731 IN (v0.c0)))) HAVING ((((UNLIKELY(DISTINCT rt0.c1))OR(((rt0.c2)IS NOT(v0.c2)))))OR(((v0.c0)%(rt0.c0)))) ORDER BY json_array_length(0x391ced26)  NULLS FIRST;SELECT TOTAL(((t0.c0)AND(v0.c0))) OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS), '', ((((CAST(v0.c2 AS REAL))AND(((((rt0.c2)OR(rt0.c2)))AND(v0.c0)))))OR(v0.c0)), ((rt0.c1)==(((rt0.c0) IS FALSE))), TRIM(json_patch(vt49.c0, rt0.c1)) FROM vt49, v0, rt0 WHERE (CASE CAST('i*?j l?45' AS REAL)  WHEN (((((((('')AND('1181378856')))AND(NULL)))OR(NULL)))AND(NULL)) THEN ((((((((((((0.015196678573328626)OR(0.2681869744039772)))AND('ntqcb')))AND(0.8070373703859478)))OR(1.398981051E9)))OR(-3.57877283E8)))OR('0.9554152282023525')) ELSE 0X20bd2403 END);SELECT DISTINCT TRIM(DISTINCT ((((vt49.c0)AND(vt49.c0)))OR(v0.c1))) FROM rt0, v0;SELECT ALL TRIM(((((x'')OR(v0.c2)))AND(v0.c2)), (t0.c0 IN ())) FROM v0 GROUP BY (~ (v0.c2 COLLATE BINARY)) HAVING CASE WHEN TOTAL(vt49.c0) THEN CASE vt49.c0  WHEN v0.c2 THEN v0.c2 ELSE t0.c0 END END ORDER BY v0.c1  NULLS FIRST;SELECT DISTINCT (NOT ((~ (rt0.c2)))) FROM v0, rt0, vt49, t0 WHERE (CASE ((NULL) BETWEEN ('⧌D') AND (NULL))  WHEN ((((((((NULL)OR(0.9752085915550982)))OR('1181378856')))AND(x'')))OR(0.9554152282023525)) THEN ((x'')<=('-531722972')) WHEN ((((((((0.648390470974716)OR('-2024113437')))AND(NULL)))AND('-0.0')))OR(0Xffffffffb9b3c18d)) THEN (x'5c6d' IN ('-1548069992')) WHEN ((('|y')) BETWEEN ((x'')) AND (('42274535'))) THEN CASE 0.3711728564788066  WHEN x'' THEN NULL WHEN '' THEN -7.36199925E8 WHEN 0.835925320769579 THEN '-90160505' WHEN x'37eb' THEN x'' WHEN x'' THEN 0x3db77f9d WHEN '' THEN 'n䁸쟗6' WHEN NULL THEN '._2AP3{Z' ELSE '472488609' END WHEN ((x'') BETWEEN (0.2681869744039772) AND ('')) THEN CASE 0.15589161622696124  WHEN NULL THEN 0.36447619643653273 ELSE '' END WHEN (('-1247741370')IS(-2.06509257E8)) THEN ((0.11710263602574367) NOT NULL) ELSE x'' COLLATE NOCASE END); -- 3ms;
SELECT DISTINCT COUNT(((rt0.c1) BETWEEN (rt0.c1) AND (''))) FROM v0 ORDER BY t0.c0 DESC;SELECT (((v0.c2, v0.c1, t0.c0, rt0.c1, rt0.c1, rt0.c1, NULL)) BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (rt0.c0)), ((rt0.c1) IS TRUE), ((v0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)), 0.09447715586765049, ((rt0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((vt49.c0)-(rt0.c2)), rt0.c0 COLLATE BINARY)) AND ((((((rt0.c2)AND(v0.c1)))AND(v0.c1)), (~ (rt0.c1)), ((((((((rt0.c1)OR(rt0.c2)))OR(v0.c2)))AND(vt49.c0)))AND(1600512988)), CAST(vt49.c0 AS NUMERIC), ((v0.c2)!=(vt49.c0)), v0.c1 COLLATE BINARY, (((t0.c0, v0.c1, v0.c0))>=((v0.c1, vt49.c0, v0.c2)))))) FROM rt0;SELECT ((((v0.c0 IN (v0.c1))))<(((- (rt0.c2))))) FROM rt0, v0 WHERE (((((NULL)>('A)*VNu')))>>(0X1bb3b3da))) ORDER BY CAST(CASE v0.c2  WHEN rt0.c0 THEN t0.c0 ELSE rt0.c2 END AS TEXT)  NULLS LAST;SELECT TOTAL((rt0.c1 IN ()) COLLATE BINARY) OVER () FROM t0, vt49, rt0, v0; -- 0ms;
SELECT ALL LAG(((((LIKELY(x''))AND(((((t0.c0)AND(vt49.c0)))AND(9.67052292E8)))))OR((t0.c0 IN (t0.c0)))), (((vt49.c0)) BETWEEN ((((vt49.c0)>(t0.c0)))) AND ((((((t0.c0)AND(vt49.c0)))OR(vt49.c0))))), ((((((((0.11475704416583365)AND(NULL)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (vt49.c0)))))AND((+ (t0.c0)))))AND((((645918159, t0.c0, NULL)) BETWEEN ((t0.c0, vt49.c0, vt49.c0)) AND ((vt49.c0, vt49.c0, t0.c0)))))) OVER () FROM t0 FULL OUTER JOIN vt49 ON t0.c0 LIMIT -471092261; -- 1ms;
SELECT ALL ((((((rt0.c2)=(t0.c0)))OR(HEX(rt0.c0))))OR((t0.c0 IN ()))) FROM t0, v0, rt0; -- 0ms;
SELECT DISTINCT ((((v0.c0)-(v0.c0)))&((~ (t0.c0)))) FROM vt49, t0, rt0 WHERE ((((1950910783)) BETWEEN (((- (NULL)))) AND ((((('h-\n8^!Ll', x'', NULL)) BETWEEN ((-2.31126614E8, NULL, '1181378856')) AND ((0.2829665964265804, x'', 'z/')))))));SELECT DISTINCT ((((((((rt0.c0)AND(((v0.c0) NOT BETWEEN (vt49.c0) AND (v0.c2)))))AND((((t0.c0))>((vt49.c0))))))AND((~ (rt0.c1)))))OR(((rt0.c1) IS TRUE))) FROM v0, t0;SELECT DISTINCT (((~ (NULL))) NOTNULL) FROM v0, t0; -- 0ms;
SELECT DISTINCT CAST(((v0.c1)IS(rt0.c0)) AS INTEGER), CASE ((((v0.c1)AND(rt0.c0)))AND(rt0.c2))  WHEN rt0.c0 THEN v0.c0 COLLATE NOCASE ELSE (rt0.c1 IN ()) END, ((((vt49.c0) NOT BETWEEN (v0.c2) AND (rt0.c2)))&(vt49.c0 COLLATE BINARY)) FROM v0, t0 WHERE ((((('-344938578')==('l]c* f'))) BETWEEN ((NOT ('0%W'))) AND (TRIM('', x'478f'))));SELECT ALL ((v0.c0)OR(((rt0.c1)AND(v0.c0)))) FROM rt0 GROUP BY CAST('-176233623' AS NUMERIC);SELECT DISTINCT (COUNT(*) IN (CAST(t0.c0 AS NUMERIC))) FROM v0 WHERE (((((x'') BETWEEN (x'') AND (NULL)))||(((('H*t+Cx*r', NULL, 769278267)) BETWEEN (('-240198304', '-357877283', x'')) AND ((1521532429, x'', '-653228057'))))));SELECT ALL rt0.c2, (((x'0c69') BETWEEN (v0.c2) AND (v0.c0)) IN ()), COUNT(*) OVER () FROM v0 WHERE ((((x'095e')) NOT BETWEEN ((((((1.865573221E9)AND(NULL)))AND('ni')))) AND ((('0' IN ())))));SELECT ALL ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR((NULL IN ()))))AND(((t0.c0)/(rt0.c2)))) FROM vt49, t0, rt0, v0 WHERE (x''); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM v0, vt49; -- 0ms;
SELECT ALL (NOT ((v0.c1 IN ()))) FROM v0, t0, vt49 WHERE (((('[O')) BETWEEN ((NULL)) AND (('WZoi'))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c0, v0.c2)) BETWEEN (('', (NOT (v0.c0)), TOTAL(t0.c0))) AND ((rt0.c1 COLLATE BINARY, ((rt0.c1) BETWEEN (rt0.c0) AND (vt49.c0)), ((v0.c1) IS TRUE)))) FROM rt0 WHERE (((NULL) BETWEEN (x'') AND ('-1247741370')) COLLATE RTRIM);SELECT DISTINCT (((vt49.c0))<((((v0.c2)GLOB(v0.c0))))) FROM v0, rt0, vt49, t0; -- 0ms;
SELECT DISTINCT (((t0.c0)<<(vt49.c0)) IN (((rt0.c2) ISNULL))), ((((AVG(v0.c1))AND(CASE WHEN v0.c0 THEN t0.c0 END)))AND(rt0.c1 COLLATE NOCASE)), GROUP_CONCAT(((vt49.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) FROM v0, t0, vt49, rt0 WHERE ((((((~ (0.0351283085874734)))OR(((x'228a')IS NOT(0.4495560392815142)))))AND(CASE WHEN '/' THEN 'X5,,EDQ|0' ELSE 0.3537134387202344 END))); -- 4ms;
SELECT DISTINCT ((((v0.c1)-(t0.c0)))GLOB((vt49.c0 IN ()))) FROM rt0 UNION ALL SELECT (+ ((((vt49.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c0))))) FROM t0;SELECT NULL FROM vt49, rt0, v0; -- 0ms;
SELECT (~ (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0, v0, vt49 WHERE ((((((0x4a09501))<>((NULL))))GLOB(json_quote('-1036687566')))); -- 0ms;
SELECT AVG(CAST(-6.89621549E8 AS INTEGER)) OVER () FROM t0, rt0, vt49 WHERE ((((('-206509257') IS TRUE))IS(json_object(NULL, '702834296', '', NULL)))) ORDER BY NULL DESC  NULLS LAST, (- (v0.c0)) COLLATE BINARY  NULLS LAST;SELECT DISTINCT (('413976361')|((- (v0.c1)))), CAST(-6.53228057E8 AS INTEGER), CAST((((rt0.c0)) BETWEEN ((vt49.c0)) AND ((v0.c2))) AS TEXT), CAST(((((t0.c0)AND(v0.c2)))AND(rt0.c0)) AS BLOB), ((CASE v0.c1  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN v0.c1 WHEN t0.c0 THEN rt0.c2 END) IS TRUE) FROM v0, rt0, vt49 WHERE (((x'' COLLATE NOCASE)|(0.3593163546297805 COLLATE RTRIM)));SELECT DISTINCT DENSE_RANK() OVER (), (('?lm&ᕤ') NOTNULL), SUM((rt0.c1 IN ())) FROM t0, rt0, v0 WHERE ((~ (((x'')=('-423408682'))))); -- 0ms;
SELECT ALL ((((((((((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c1)))OR((rt0.c0 IN (t0.c0)))))OR(((rt0.c1) BETWEEN (vt49.c0) AND (rt0.c0)))))AND(((v0.c0)GLOB(v0.c1)))))AND(((v0.c1) NOT BETWEEN (v0.c2) AND (vt49.c0)))), TOTAL('嘸#\rZ寗') OVER (), (((((((v0.c2))>(('136698653'))))OR(((rt0.c1)AND(v0.c2)))))AND((+ (v0.c0)))) FROM rt0, v0;SELECT ALL rt0.c1 FROM rt0, vt49, t0 GROUP BY ((NULL COLLATE RTRIM)+(((((v0.c2)AND(v0.c0)))AND(rt0.c0)))), (- (CAST(t0.c0 AS TEXT))), (((rt0.c0 COLLATE NOCASE, 'Ywm*94', ((vt49.c0) NOT BETWEEN (rt0.c1) AND (0.11575073485992826))))>((v0.c0 COLLATE NOCASE, (x'' IN (rt0.c1)), ((rt0.c1) BETWEEN (NULL) AND (t0.c0))))) HAVING ((('', rt0.c2, rt0.c1)) NOT BETWEEN ((0.5276068475308227, TOTAL(v0.c2), ((rt0.c1)!=(vt49.c0)))) AND ((((rt0.c0) NOT NULL), (((rt0.c0))>=((rt0.c1))), ((t0.c0)IS NOT(v0.c0)))));SELECT ALL CASE rt0.c1 COLLATE RTRIM  WHEN ((v0.c2) NOT BETWEEN (vt49.c0) AND (x'')) THEN rt0.c0 COLLATE BINARY ELSE ((0.6593850007669642)/(x'9ff2')) END FROM vt49, rt0, t0;SELECT DISTINCT (((rt0.c2) NOT BETWEEN (v0.c1) AND (vt49.c0)) IN ((v0.c1 IN ()))), CAST(((v0.c0)|(x'')) AS INTEGER), (+ (((((v0.c1)AND(v0.c2)))AND(x'')))) FROM t0 RIGHT OUTER JOIN v0 ON vt49.c0 WHERE (CAST(CASE WHEN NULL THEN x'eb7d' ELSE x'' END AS BLOB)) GROUP BY x'' ORDER BY CASE (+ (v0.c1))  WHEN CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN t0.c0 END WHEN CASE rt0.c2  WHEN t0.c0 THEN '-1551799450' END THEN ((((((((((((rt0.c0)OR(t0.c0)))AND(v0.c0)))OR(v0.c1)))OR(1503374122)))OR(t0.c0)))AND(v0.c2)) WHEN ((rt0.c2)||(v0.c1)) THEN MAX(v0.c0, v0.c0, vt49.c0, rt0.c1) WHEN ((rt0.c1) BETWEEN (t0.c0) AND (v0.c2)) THEN ((v0.c0)*(v0.c2)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN NULL END THEN (vt49.c0 IN ()) END DESC, (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE DESC;SELECT ALL x'', ((v0.c2) ISNULL), ((COUNT(rt0.c0))%((((rt0.c1, rt0.c0, v0.c0))<((rt0.c2, vt49.c0, rt0.c1))))) FROM v0, vt49 WHERE (CASE 0.6792655844600535 COLLATE NOCASE  WHEN CASE WHEN '0.6398247189331171' THEN '451905854' END THEN (x'8016' IN ()) ELSE CAST('' AS TEXT) END);SELECT DISTINCT v0.c1 FROM t0, rt0 WHERE ((((+ (NULL))) NOTNULL));SELECT ((LIKELIHOOD(DISTINCT v0.c2, 0.44649659112996376)) BETWEEN ((rt0.c1 IN (rt0.c0))) AND (((rt0.c2)|(v0.c1)))) FROM t0, rt0 WHERE (((('-776980373', 0.2895771249190192, x'6cab')) NOT BETWEEN ((((((NULL)AND(0.8794383118186266)))OR('<B\r')), UNLIKELY(x''), (- (NULL)))) AND ((CAST(0.6604640701254471 AS NUMERIC), ((0.6383441658260354) IS FALSE), (NULL IN ())))));SELECT ALL CASE WHEN CASE WHEN 883202382 THEN rt0.c2 ELSE rt0.c1 END THEN MIN(rt0.c2, rt0.c2) END FROM t0, rt0 NOT INDEXED, vt49 GROUP BY 0x7a0a7a96 COLLATE RTRIM HAVING 0.285007442131165;SELECT DISTINCT SUM(((rt0.c1)<<(v0.c2))) FILTER(WHERE ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0))) NOT NULL)) OVER (), MIN((((vt49.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM), CUME_DIST() OVER () FROM v0;SELECT CASE SUM(rt0.c0)  WHEN (- (v0.c2)) THEN ((v0.c2)OR(rt0.c1)) ELSE 0Xffffffffd41e7b0b END FROM v0, vt49, t0;SELECT DISTINCT ((((v0.c2)AND(rt0.c1))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (((((v0.c0)OR(rt0.c0)))AND(rt0.c2)))), CHANGES(), (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) FROM vt49, t0 WHERE ((- ((x'' IN ()))));SELECT ALL ((t0.c0 IN (v0.c0)) IN (json_type(rt0.c2))) FROM t0, v0 NOT INDEXED, vt49, rt0 WHERE (((((((((((0.20273367956142907)AND('')))AND(0.7419808621317948)))AND(0.5492022763159177)))AND(NULL)))%('05' COLLATE RTRIM))); -- 0ms;
SELECT CASE (v0.c2 IN ())  WHEN vt49.c0 COLLATE RTRIM THEN (v0.c1 IN ()) ELSE ((((v0.c2)OR(vt49.c0)))AND(rt0.c0)) END FROM v0 NOT INDEXED, rt0 WHERE (CASE ((NULL) ISNULL)  WHEN (((x'')) NOT BETWEEN ((NULL)) AND ((0xffffffffbfbc8ac2))) THEN ((-1.8718774E8)<(NULL)) END) ORDER BY ((rt0.c2) ISNULL) COLLATE RTRIM DESC  NULLS FIRST;SELECT DISTINCT LOWER(DISTINCT rt0.c0 COLLATE BINARY) FROM vt49, t0, rt0 GROUP BY ((QUOTE(v0.c1))<(((t0.c0) NOTNULL))) HAVING LIKELY(CAST(t0.c0 AS BLOB));SELECT ((((rt0.c0) NOT NULL))||(v0.c0)) FROM vt49, t0 INTERSECT SELECT ALL (- ((vt49.c0 IN ()))) FROM vt49, v0, t0 WHERE (NULL);SELECT (((v0.c2)||(v0.c1)) IN ((('&쉶9\rR')-(rt0.c0)), v0.c0)), (NOT (rt0.c2 COLLATE RTRIM)), CAST(CASE v0.c2  WHEN rt0.c0 THEN vt49.c0 ELSE t0.c0 END AS INTEGER) FROM rt0, vt49, v0, t0 WHERE (((((x'f7c6e7c8')>>(NULL))) NOT BETWEEN (1.78075577E9) AND (((NULL) NOT BETWEEN (NULL) AND ('1599930722'))))); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) NOT BETWEEN (CASE 0.11257567429345228  WHEN v0.c1 THEN t0.c0 END) AND ((NOT (v0.c0)))) FROM vt49, v0, t0 WHERE (((CASE WHEN NULL THEN 0.8976825411261412 WHEN x'' THEN x'' WHEN x'2643' THEN 1283670349 ELSE 0.8545661258614929 END) IS TRUE)); -- 1ms;
SELECT DISTINCT ']q2w' FROM rt0, vt49, t0; -- 0ms;
SELECT DISTINCT ((TYPEOF(DISTINCT rt0.c1))>((((rt0.c1))>=((v0.c0))))) FROM rt0, t0, v0, vt49 LIMIT 1900995905; -- 0ms;
SELECT DISTINCT ((NULLIF(v0.c2, rt0.c0))IS(0x1bb3b3da)), LEAD((((t0.c0 IN ())) IS TRUE), ((((CAST(rt0.c0 AS INTEGER))AND(CASE v0.c2  WHEN v0.c2 THEN vt49.c0 WHEN v0.c2 THEN rt0.c1 WHEN vt49.c0 THEN t0.c0 ELSE vt49.c0 END)))OR(LTRIM(vt49.c0))), (((((vt49.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((vt49.c0, t0.c0, vt49.c0)) AND ((rt0.c1, rt0.c2, rt0.c0))))>>(((rt0.c2) IS FALSE)))) OVER (), LAST_VALUE((NOT (CAST(rt0.c0 AS BLOB)))) OVER () FROM t0, rt0, v0, vt49 WHERE (((CAST(0.6497504551040787 AS TEXT)) NOT NULL)) LIMIT -642304570 OFFSET -1960896770; -- 0ms;
SELECT DISTINCT CAST(CAST('451905854' AS INTEGER) AS NUMERIC) FROM rt0, v0 ORDER BY CAST(((((486491344)OR(t0.c0)))OR(t0.c0)) AS INTEGER) DESC;SELECT DISTINCT ((json_type(rt0.c0)) NOTNULL) FROM rt0, v0, t0, vt49 WHERE ((('-653228057')<<(((((NULL)AND(x'')))AND(NULL))))); -- 1ms;
SELECT CASE ((vt49.c0) NOT NULL)  WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c0 WHEN (NOT (rt0.c2)) THEN ((rt0.c2) NOT NULL) WHEN (((v0.c0, '1843077575', v0.c2))>((0.6517567059042899, v0.c1, v0.c2))) THEN (NOT (vt49.c0)) END FROM t0;SELECT DISTINCT TOTAL(ABS(v0.c0)) OVER (), (~ (COUNT(*))), rt0.c2 FROM t0, v0, vt49;SELECT ALL ((((((((((v0.c1)AND(vt49.c0)))AND(v0.c2)))OR(rt0.c1)))AND(v0.c0)))<>(rt0.c1)) FROM rt0;SELECT ALL ((rt0.c0) BETWEEN (t0.c0) AND (vt49.c0)) COLLATE NOCASE FROM t0, vt49, v0, rt0 WHERE (CASE WHEN 0.674999390742386 THEN ((0.3297442805039069) BETWEEN (0.5242537659494656) AND (NULL)) END) LIMIT -1286766913; -- 0ms;
SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE), ((t0.c0) NOT BETWEEN (CASE v0.c2  WHEN t0.c0 THEN vt49.c0 END) AND (CASE WHEN t0.c0 THEN v0.c1 ELSE rt0.c0 END)), ((t0.c0)>=(v0.c2)) COLLATE RTRIM, (v0.c0 IN ()) COLLATE RTRIM, (((- (t0.c0))) ISNULL) FROM vt49, rt0, v0 WHERE ((((0.8285236462194516 COLLATE RTRIM))==(((('-531722972') BETWEEN (NULL) AND (NULL)))))) LIMIT 397321757;SELECT DISTINCT CASE WHEN rt0.c2 THEN IFNULL(DISTINCT v0.c1, 'zi)[QT') ELSE (v0.c0 IN (rt0.c2, v0.c0)) END FROM v0, t0, rt0 WHERE ((((0Xfffffffff30615ad, x'', x'')) BETWEEN ((x'', ((x'') NOT BETWEEN ('486491344') AND (NULL)), ((0.458751033157514) NOT NULL))) AND ((json_valid(NULL), ((((x'')OR(NULL)))OR(0.13645297114697652)), CAST('*( P䦪' AS BLOB))))); -- 1ms;
SELECT CASE WHEN rt0.c1 THEN ((rt0.c1)<=(v0.c2)) ELSE ((((NULL)OR(rt0.c2)))AND(t0.c0)) END FROM t0, vt49, v0 LIMIT -1790352155 OFFSET 1794649661;SELECT ALL (CAST(rt0.c1 AS REAL) IN (((((t0.c0)AND(rt0.c0)))OR(x'')))), CASE WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE NOCASE ELSE '\rI0p}c?' END, vt49.c0 FROM v0, vt49 WHERE (TRIM(CASE '-22566317'  WHEN NULL THEN NULL ELSE 1172682536 END)) ORDER BY (v0.c1 COLLATE RTRIM IN ()) ASC  NULLS FIRST;SELECT ALL CAST(CAST(v0.c0 AS REAL) AS TEXT), rt0.c2, (((NOT (v0.c0))) NOT BETWEEN (((('', v0.c2, rt0.c2, v0.c1, rt0.c0)) NOT BETWEEN ((vt49.c0, rt0.c1, '0.5691874746650408', rt0.c2, 0.9778697928592563)) AND ((v0.c0, NULL, v0.c0, rt0.c2, t0.c0)))) AND (((v0.c2)GLOB(rt0.c2)))) FROM v0, vt49, t0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((v0.c2, v0.c2, rt0.c2)) BETWEEN ((((((((((t0.c0)OR(v0.c2)))AND(v0.c0)))OR(0.36447619643653273)))OR(rt0.c1)), ((((t0.c0)AND(rt0.c1)))OR(t0.c0)), (x'57d3' IN ()))) AND ((v0.c1, v0.c2, CASE WHEN v0.c1 THEN v0.c1 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt49.c0 END))) FROM rt0, v0, t0 WHERE (NULLIF(DISTINCT LIKELY(DISTINCT -3.26530514E8), ((0.045615580728166516) NOT BETWEEN (0x6185a8f9) AND (-506744170))));SELECT ALL (CAST(rt0.c1 AS BLOB) IN ()) FROM rt0, vt49 LIMIT 801448056; -- 1ms;
SELECT (((v0.c1, v0.c1, rt0.c1)) BETWEEN ((((v0.c0)%(v0.c2)), ((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)), ((t0.c0) BETWEEN (vt49.c0) AND (rt0.c0)))) AND ((CASE vt49.c0  WHEN rt0.c1 THEN v0.c0 WHEN '0.9554152282023525' THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN '-633587350' THEN v0.c2 WHEN '㰂u' THEN v0.c0 ELSE vt49.c0 END, ((((v0.c0)AND(t0.c0)))OR(t0.c0)), -1589790984))) FROM v0, t0, rt0, vt49 WHERE ((((('') NOTNULL))AND(0xffffffffb352c835 COLLATE RTRIM))); -- 0ms;
SELECT ALL ((((((((CAST(x'' AS NUMERIC))OR((t0.c0 IN ()))))AND(v0.c2 COLLATE BINARY)))OR((('1618217840') IS TRUE))))AND('')) FROM rt0, vt49, t0, v0 ORDER BY ((CASE WHEN v0.c2 THEN rt0.c0 END) ISNULL), (((((NULL))==((v0.c0)))) NOT BETWEEN (((((((((v0.c1)AND(v0.c2)))AND(v0.c2)))OR(v0.c0)))OR(v0.c2))) AND (CASE rt0.c2  WHEN t0.c0 THEN vt49.c0 END)); -- 0ms;
SELECT DISTINCT ((((v0.c0)GLOB(rt0.c0))) ISNULL) FROM vt49, v0 WHERE (CAST(((x'351d')<(-0.0)) AS INTEGER));SELECT ALL ((((((((v0.c0)OR(rt0.c2)))OR(v0.c1)))OR(TOTAL(v0.c2))))AND((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt49.c0))))), (((vt49.c0)) BETWEEN ((((rt0.c2)-(rt0.c1)))) AND (((0Xfffffffff6ad340d IN ())))), CASE (~ (v0.c1))  WHEN ((rt0.c2) IS TRUE) THEN GROUP_CONCAT(-150060475) ELSE ((rt0.c1)%(v0.c2)) END FROM v0, rt0;SELECT DISTINCT (- (t0.c0 COLLATE RTRIM)), ((CASE rt0.c0  WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN v0.c1 END)<=((v0.c0 IN ()))), '321493775' FROM vt49 WHERE (((((0.03478578377778607) NOT BETWEEN (NULL) AND (NULL))) BETWEEN ((~ (x''))) AND ((('1476015650') NOT NULL))));SELECT (((((vt49.c0, rt0.c1, 0.12437106280836041, rt0.c2, v0.c1))==((v0.c2, t0.c0, vt49.c0, rt0.c2, '181177636'))))!=(LIKELIHOOD(DISTINCT t0.c0, 0.27810715746833603))) FROM v0 WHERE (CAST(CHAR(x'') AS TEXT));SELECT DISTINCT (((t0.c0 IN ()))>(rt0.c1 COLLATE BINARY)) FROM t0, rt0 ORDER BY NULL ASC; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE)GLOB(((((rt0.c1)OR(rt0.c0)))OR('')))) FROM vt49 WHERE (((('I0sMV<鷲h') IS FALSE) IN ((NOT (0.6026223175606166)), CASE WHEN x'' THEN 'Eq0%IJ!' ELSE NULL END)));SELECT (((t0.c0) ISNULL) IN ((((rt0.c2, NULL, v0.c2)) BETWEEN ((vt49.c0, '侟J]CZFiFi', rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))) FROM v0 NOT INDEXED, t0 WHERE (UPPER(DISTINCT CASE 0x279ef331  WHEN 0.950182674186045 THEN NULL WHEN NULL THEN '-653228057' WHEN 0.012902436303054987 THEN NULL ELSE 0X3059837d END));SELECT DISTINCT x'46ac', LAST_VALUE('-241186905') OVER (), ((COUNT(*)) BETWEEN (((t0.c0)/(rt0.c0))) AND (JULIANDAY(v0.c2, t0.c0, v0.c2))) FROM v0, vt49, rt0;SELECT ALL CASE WHEN CASE WHEN v0.c2 THEN rt0.c2 WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c2 WHEN t0.c0 THEN vt49.c0 END THEN ((((((((rt0.c1)AND(vt49.c0)))AND(vt49.c0)))AND(v0.c0)))OR(rt0.c1)) END, TOTAL(((t0.c0)>=(v0.c0))), NULLIF(((v0.c2) NOTNULL), ((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c1))) FROM t0, vt49, v0, rt0 WHERE (SUBSTR((~ (NULL)), ((((((((-1.31090785E8)OR(NULL)))OR(x'')))AND(NULL)))AND(0.7573936111659411)))); -- 0ms;
SELECT DISTINCT ((~ (NULL)) IN ()) FROM vt49, rt0 WHERE (((x'7d09' COLLATE RTRIM) ISNULL)) LIMIT -1352783572; -- 0ms;
SELECT DISTINCT '-839102446', (((CASE rt0.c1  WHEN rt0.c0 THEN v0.c1 WHEN v0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END))=((COUNT(*)))), CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER) FROM v0, rt0; -- 0ms;
SELECT DISTINCT ((((ABS(rt0.c1))AND(((((((((vt49.c0)AND(vt49.c0)))OR(v0.c2)))OR(rt0.c2)))AND(t0.c0)))))AND(CAST(v0.c2 AS INTEGER))) FROM v0 WHERE (CAST((('-1286420427') BETWEEN (0.2823022637597635) AND (x'd3d9')) AS BLOB));SELECT DISTINCT ((t0.c0)&(rt0.c0)) COLLATE BINARY FROM rt0, v0 WHERE (((UNLIKELY(DISTINCT '-700974638'))<((('-1414556647')||(''))))) LIMIT 1594159539;SELECT ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0))) IS FALSE), CASE ((t0.c0)*(v0.c2))  WHEN json(vt49.c0) THEN MAX(854917891) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) END, NULLIF(((t0.c0) NOT BETWEEN (v0.c0) AND ('	60uliN{')), MIN(rt0.c0)) FROM rt0, v0;SELECT DISTINCT (((rt0.c2) NOT NULL) IN ()) FROM t0 WHERE (((((0.19261423378249065) NOT BETWEEN (-2033592593) AND ('1639782737')))AND(((0.13872317466326867) NOT BETWEEN (x'') AND (x''))))) LIMIT -1199642615; -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt49, t0 WHERE (CAST(x'' AS BLOB) COLLATE NOCASE);SELECT ALL TOTAL(NULL) OVER ( ORDER BY 0xffffffff83c8aa09  NULLS LAST), COUNT(((rt0.c0)*(rt0.c1))) COLLATE RTRIM, '1912148677' FROM v0, t0 WHERE (CASE ((1.572341595E9) IS FALSE)  WHEN ((('&e')) BETWEEN ((0.5330342632798111)) AND ((NULL))) THEN ((x'') BETWEEN (0x1cce2bd2) AND ('U')) WHEN ((0.11881914671987825) IS TRUE) THEN ((NULL) BETWEEN (x'') AND (NULL)) WHEN (((-1480483142))>((x''))) THEN (((NULL)) BETWEEN ((NULL)) AND ((0.3216723807396997))) ELSE ((((1683157607)AND(x'')))OR(NULL)) END) GROUP BY (((((vt49.c0) BETWEEN (rt0.c1) AND (rt0.c2)), (rt0.c1 IN ()), ((v0.c0) BETWEEN (v0.c1) AND (v0.c2))))>((load_extension(v0.c0), (((0.43818561324831806)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))), ((vt49.c0) IS FALSE))));SELECT ((((((((((vt49.c0)AND(t0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN ((t0.c0 IN (rt0.c0))) AND (t0.c0)), ((CAST(rt0.c0 AS TEXT))<>(CAST(rt0.c1 AS BLOB))), json_insert((rt0.c1 IN (rt0.c1, rt0.c0)), ((((t0.c0)OR(v0.c0)))AND(-237497168)), (NOT (-378590865))) FROM rt0, vt49, v0, t0; -- 0ms;
SELECT DISTINCT LAG((CASE rt0.c1  WHEN x'5454' THEN rt0.c1 WHEN rt0.c0 THEN vt49.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN vt49.c0 ELSE v0.c0 END IN ()), LIKELIHOOD((vt49.c0 IN (t0.c0, v0.c0)), 0.5575136022999043), ((((((rt0.c2, rt0.c2, rt0.c2, rt0.c2, t0.c0))!=((v0.c2, rt0.c2, v0.c1, vt49.c0, NULL))), CASE v0.c1  WHEN 'ZX0' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c2 THEN v0.c2 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 END, v0.c1))<=((t0.c0 COLLATE BINARY, ((rt0.c2)>>(rt0.c2)), PRINTF(rt0.c2))))) OVER (), COUNT(*), ((((((rt0.c2)OR(rt0.c1)))AND(-1817808235)))||(((((((((vt49.c0)OR(v0.c1)))AND(v0.c1)))AND(t0.c0)))OR(rt0.c1)))) FROM rt0, t0, vt49, v0 WHERE (((((((((((((0.01759826655311303)OR(0Xffffffffc7734262)))AND('')))OR('|y')))OR((+ ('#꣸\nw*Xt')))))AND((('\n锘')+(x'')))))OR(((0x54a5ae53)OR(0.8998855109418117))))); -- 0ms;
SELECT DISTINCT LTRIM(rt0.c1 COLLATE RTRIM, (vt49.c0 IN ())) FROM v0, rt0, t0; -- 0ms;
SELECT CASE WHEN v0.c1 THEN CASE WHEN v0.c0 THEN t0.c0 END ELSE COUNT(*) END FROM rt0, t0, v0, vt49; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) NOTNULL) AS BLOB), (((((v0.c0))<=((v0.c1)))) NOT BETWEEN (v0.c1 COLLATE RTRIM) AND (((t0.c0)OR(v0.c0)))), (((((rt0.c2))<((v0.c1)))) BETWEEN ((v0.c2 IN (t0.c0))) AND (((rt0.c1)==(v0.c1)))) FROM rt0, t0, v0, vt49 WHERE (((((CASE WHEN 0.42101122983030403 THEN x'd6311928' END)AND((((('-962364452')OR('')))AND(0.8976434303268626)))))AND(NULL))); -- 2ms;
SELECT DISTINCT CASE WHEN ((v0.c2)-(rt0.c1)) THEN 0.19273147570090476 COLLATE RTRIM END, ((((v0.c1)||(t0.c0)))/(((v0.c1)<<(v0.c0)))), '[-{FA7aX' FROM rt0, vt49, t0, v0 WHERE (((((x'') NOTNULL)) ISNULL)) ORDER BY ((- (rt0.c1)) IN ()) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT AVG(v0.c0) FROM t0 WHERE (CASE x''  WHEN 0.9714215120548869 THEN 0.3788055985000255 END COLLATE NOCASE) ORDER BY v0.c1;SELECT DISTINCT LTRIM(0.9554152282023525, ((((v0.c1)AND(v0.c2)))OR(v0.c1))) FROM vt49, rt0, v0; -- 0ms;
SELECT (((''))>(('0.7208472011844175'))), (NOT ('⧌D')), ((((COALESCE(DISTINCT rt0.c2, rt0.c2))OR(((((((((v0.c2)OR(v0.c0)))AND(vt49.c0)))OR(rt0.c0)))OR(v0.c2)))))OR(((rt0.c2)AND(rt0.c1)))) FROM v0, t0, vt49, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((v0.c2)*(rt0.c2)) THEN ((((t0.c0)OR(v0.c0)))AND(rt0.c2)) WHEN ((((v0.c1)AND(v0.c0)))OR(rt0.c0)) THEN INSTR(v0.c1, v0.c0) WHEN NULL THEN t0.c0 END FROM vt49, rt0, t0, v0 WHERE ((NOT (x'' COLLATE NOCASE))); -- 1ms;
SELECT DISTINCT ((((((((rt0.c0)OR(t0.c0)))OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)) COLLATE RTRIM, FIRST_VALUE((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt49.c0))))>=((((v0.c1))<=((vt49.c0)))))) OVER (), PERCENT_RANK() OVER () FROM v0, t0, rt0, vt49 WHERE (((((NULL) NOT BETWEEN (x'') AND (NULL)))<=((+ (NULL))))); -- 0ms;
SELECT DISTINCT (NOT (rt0.c0 COLLATE RTRIM)) FROM t0, vt49, rt0, v0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt49, v0, t0, rt0 WHERE (json_type(((x'')<<(0.6834583202484577)))); -- 0ms;
SELECT DISTINCT (((0x6b734690))=(('yh'))) COLLATE NOCASE, ((((vt49.c0)-(t0.c0)))|(((v0.c1)<<(rt0.c2)))), ((((v0.c0)<<(v0.c2)))<>(((0.7515374237392962) BETWEEN (rt0.c1) AND (t0.c0)))) FROM vt49;SELECT DISTINCT ((NULLIF(rt0.c0, vt49.c0))||(((vt49.c0) IS TRUE))), ((GROUP_CONCAT(v0.c2))/((+ (v0.c1)))), AVG((((vt49.c0))<((v0.c0)))) OVER ( GROUPS  CURRENT ROW) FROM v0, t0, vt49, rt0 WHERE ((NOT ((((('0.912635152307897')OR(0xffffffffcae22ea4)))AND(NULL))))); -- 0ms;
SELECT ((CASE WHEN rt0.c1 THEN v0.c2 ELSE '-2060950393' END) BETWEEN (((v0.c0) NOT BETWEEN (NULL) AND (rt0.c2))) AND (x'efe9')) FROM v0, vt49, t0, rt0 WHERE ((((IFNULL(DISTINCT 754016392, '1-500000'), ((((2.138490839E9)OR(0.948676311867877)))AND(x'')), 449374395 COLLATE RTRIM))>(((~ (x'')), ((-1.959653894E9) NOT BETWEEN ('0.912635152307897') AND (NULL)), ((0.36122321307738503)IS NOT(x'694a44c1')))))); -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN x'' THEN rt0.c2 ELSE t0.c0 END) NOTNULL), AVG(UPPER(DISTINCT t0.c0)) OVER (), ((((('0.25549021078284495') NOT BETWEEN (vt49.c0) AND (v0.c0))))>=((LTRIM(vt49.c0)))) FROM vt49, v0 WHERE ((((('464761818')GLOB(x''))) NOT NULL));SELECT ALL ((COUNT(v0.c1))<<((((rt0.c1))<=((v0.c2))))) FROM t0, v0, vt49, rt0 WHERE (1821900629) ORDER BY NULL; -- 0ms;
SELECT DISTINCT COUNT((NOT (v0.c2))) OVER () FROM v0, rt0 WHERE ((CASE WHEN NULL THEN 1500471027 ELSE '-464106124' END IN (NULL))) LIMIT 1166747183; -- 0ms;
SELECT ((v0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY FROM v0, rt0, t0 WHERE ((((NULL)) NOT BETWEEN ((CAST(x'191c' AS NUMERIC))) AND ((CAST(0.04169371273256661 AS REAL))))); -- 0ms;
SELECT DISTINCT (((0X7d594e8b)) NOT BETWEEN ((((rt0.c2)<=(rt0.c2)))) AND ((t0.c0))), CAST(((t0.c0)IS(rt0.c1)) AS NUMERIC), ((((x'')OR(CAST(rt0.c2 AS BLOB))))AND(0.8585262744914034)), ((+ (v0.c2)) IN ()), ((((((((((v0.c1)AND(v0.c2)))OR(1.7976931348623157E308)))AND(v0.c1)))AND(v0.c0))) NOTNULL) FROM rt0, v0, t0, vt49 WHERE ((NULL IN ())); -- 0ms;
SELECT 0.6815759125687573 FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)>=(v0.c0)))+(((rt0.c0) IS FALSE))) FROM t0, vt49 EXCEPT SELECT ((((t0.c0)LIKE('-1247741370'))) NOT NULL) FROM t0, vt49 WHERE ((('jꬉ2|F{' COLLATE RTRIM) ISNULL));SELECT ((CASE x''  WHEN t0.c0 THEN rt0.c2 ELSE v0.c0 END)AND((('-736199925')>=(rt0.c0)))), rt0.c1, t0.c0 FROM rt0;SELECT ALL CAST(((NULL) NOT NULL) AS INTEGER) FROM v0, t0 WHERE ((((+ (0.24502677163798037)))&(CAST('A\nKb' AS REAL)))); -- 0ms;
SELECT ALL CASE WHEN rt0.c1 COLLATE NOCASE THEN IFNULL(vt49.c0, v0.c0) WHEN ('-543211344' IN (t0.c0, NULL)) THEN COUNT(*) WHEN ((t0.c0) NOT BETWEEN (vt49.c0) AND (v0.c0)) THEN GROUP_CONCAT(rt0.c2) ELSE t0.c0 COLLATE NOCASE END FROM t0;SELECT DISTINCT ((((v0.c0)GLOB(rt0.c2))) NOT BETWEEN ((rt0.c2 IN ())) AND (SUM(rt0.c2))), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((((t0.c0)OR(rt0.c1)))AND(rt0.c0))))), t0.c0 FROM rt0;SELECT ((((t0.c0)AND(t0.c0))) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND (((rt0.c0)/(NULL)))) FROM t0, rt0, v0; -- 0ms;
SELECT DISTINCT AVG((~ (rt0.c2))), v0.c2, (+ (rt0.c2 COLLATE BINARY)) FROM vt49, v0, rt0; -- 0ms;
SELECT ((CASE WHEN NULL THEN v0.c2 WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c1 END)AND(v0.c2 COLLATE NOCASE)) FROM v0, rt0 WHERE (((((0.10160613301925414) NOTNULL))LIKE(NULL COLLATE NOCASE)));SELECT DISTINCT CAST(((rt0.c2)=(v0.c0)) AS TEXT), TOTAL(v0.c2), SUM((((t0.c0))==(('-864042386')))) OVER () FROM rt0 WHERE (LTRIM(NULL, '&*') COLLATE NOCASE) ORDER BY v0.c2 ASC  NULLS LAST;SELECT ALL CAST((~ (rt0.c2)) AS NUMERIC), (((v0.c1, v0.c2, t0.c0)) NOT BETWEEN ((HEX(DISTINCT rt0.c2), CASE WHEN rt0.c2 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt49.c0 THEN rt0.c0 END, '-398872864')) AND ((((v0.c0)/(t0.c0)), v0.c0 COLLATE NOCASE, CASE WHEN rt0.c1 THEN v0.c2 ELSE v0.c2 END))), CASE ((rt0.c2) NOT BETWEEN (v0.c1) AND (t0.c0))  WHEN CAST(x'' AS REAL) THEN CHANGES() WHEN ((rt0.c0) ISNULL) THEN t0.c0 COLLATE NOCASE WHEN CAST(641789325 AS NUMERIC) THEN rt0.c2 END FROM rt0 WHERE ((((('-1376374286')<<(x'')))+(NULL COLLATE NOCASE))) ORDER BY (((NULL COLLATE RTRIM))<=(((~ (t0.c0))))) DESC;SELECT ALL (((NULL)) BETWEEN (((v0.c1 IN ()))) AND ((x''))), (((v0.c1)GLOB(vt49.c0)) IN ()), NULL FROM rt0, v0, t0; -- 0ms;
SELECT DISTINCT LEAD(CAST(((rt0.c2)<=(rt0.c0)) AS TEXT), load_extension((((rt0.c1))!=((vt49.c0))), CASE rt0.c2  WHEN rt0.c2 THEN vt49.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END), (+ (CAST(vt49.c0 AS NUMERIC)))) OVER (), CASE CAST(rt0.c1 AS BLOB)  WHEN LOWER(DISTINCT vt49.c0) THEN t0.c0 COLLATE NOCASE ELSE (+ (rt0.c0)) END, LEAD(((((vt49.c0) NOT BETWEEN (vt49.c0) AND (rt0.c2))) BETWEEN (((((((((vt49.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(vt49.c0))) AND (((vt49.c0)==(rt0.c0)))), ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))), MIN((~ (rt0.c1)), ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))) OVER () FROM rt0, vt49;SELECT DISTINCT t0.c0 FROM rt0 NOT INDEXED, vt49, t0, v0 WHERE (((('', 0.1296984191741516, '-1628855071'))>=((NULL, '-241186905', x''))) COLLATE BINARY) GROUP BY (- (-1460782689 COLLATE RTRIM)); -- 1ms;
SELECT ALL CAST(rt0.c0 AS REAL) COLLATE RTRIM FROM v0 WHERE ((((('2017758912')-(NULL))) NOTNULL));SELECT DISTINCT (((vt49.c0)) BETWEEN ((MIN(rt0.c1))) AND ((CASE v0.c1  WHEN vt49.c0 THEN rt0.c0 WHEN vt49.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) FROM v0, rt0, t0 GROUP BY CASE CASE v0.c2  WHEN rt0.c1 THEN -1366981686 ELSE v0.c1 END  WHEN (rt0.c1 IN ()) THEN LIKELIHOOD(rt0.c1, 0.282827039012125) END HAVING (SUM(rt0.c0) IN ());SELECT DISTINCT (- (LOWER(x''))) FROM vt49, rt0 NATURAL JOIN v0 WHERE ((+ (x'' COLLATE NOCASE))) ORDER BY (+ (CAST(vt49.c0 AS INTEGER))) DESC  NULLS LAST, ((((((((((((((v0.c0)AND(x'74ca')))OR(rt0.c0)))OR(v0.c1)))AND(NULL)))AND(v0.c2)))OR(v0.c0))) IS FALSE)  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((v0.c0 IN ())) OVER () FROM t0, vt49 ORDER BY (((t0.c0)) BETWEEN (((- (v0.c1)))) AND ((((v0.c1) BETWEEN (v0.c2) AND (rt0.c2))))) ASC, x'd607254c' ASC  NULLS FIRST;SELECT GROUP_CONCAT(CAST(rt0.c2 AS REAL)) OVER (), (NOT (rt0.c2)) COLLATE RTRIM, (((v0.c1, rt0.c1, v0.c2, vt49.c0, '-2084001271')) NOT BETWEEN ((NULLIF(DISTINCT rt0.c0, t0.c0), (t0.c0 IN ()), vt49.c0, CAST(v0.c0 AS NUMERIC), ((NULL)<=(rt0.c2)))) AND ((((vt49.c0)*(rt0.c2)), (((rt0.c1))>((v0.c1))), ((v0.c0)-(t0.c0)), UPPER(t0.c0), ((((((((1422957436)AND(v0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(v0.c0))))), (CASE WHEN v0.c0 THEN v0.c1 END IN ()), CASE WHEN COUNT(v0.c0) THEN ((((v0.c2)OR(v0.c1)))AND(v0.c0)) ELSE rt0.c1 END FROM v0, t0, rt0;SELECT ALL ((((((((((((LIKELIHOOD(v0.c1, 0.9774225671288891))AND((NOT (rt0.c1)))))AND((((v0.c0))!=((rt0.c0))))))AND(0x344c1406)))OR((v0.c1 IN ()))))AND((((rt0.c1)) NOT BETWEEN ((vt49.c0)) AND ((rt0.c0))))))AND(GROUP_CONCAT(x''))) FROM vt49 WHERE (((((NULL) NOT BETWEEN ('Y') AND (0.10669312674398168)))AND(MIN(NULL, x'', '0.7598369679732759', NULL))));SELECT ALL MAX(((x'') NOT BETWEEN (vt49.c0) AND (v0.c1))) FROM v0, vt49, t0, rt0; -- 0ms;
SELECT x'', CASE WHEN ((rt0.c1) IS FALSE) THEN ((((NULL)OR(rt0.c0)))AND(v0.c2)) END, '0.8855063493811055' FROM rt0, t0;SELECT DISTINCT NULL FROM rt0, v0, t0 WHERE (HEX(((1.521532429E9)&(0.16601768474488432)))); -- 0ms;
SELECT DISTINCT (((((rt0.c0)>=(v0.c0))))<=((((v0.c2)IS(rt0.c2))))) FROM v0, rt0, t0, vt49; -- 0ms;
SELECT ((((v0.c2)OR(((rt0.c2)>(x'99200cda')))))AND(((rt0.c2)||(rt0.c2)))), 'h-\n8^!Ll', CAST(((rt0.c0) ISNULL) AS NUMERIC) FROM v0, vt49, rt0 WHERE ((NULL COLLATE NOCASE IN ())); -- 1ms;
SELECT ((((rt0.c1, rt0.c2, rt0.c0))>=((rt0.c1, rt0.c2, vt49.c0))) IN ()) FROM vt49, t0 WHERE (((((-6.89621549E8)AND('0.3731750250942014')))+(CAST('0.3149749957338459' AS BLOB)))) LIMIT -1930144187; -- 0ms;
SELECT DISTINCT AVG((NOT (-1.1767599E8))), ((rt0.c1) NOT BETWEEN (CASE v0.c1  WHEN rt0.c1 THEN v0.c1 WHEN vt49.c0 THEN v0.c1 WHEN rt0.c2 THEN t0.c0 END) AND ((((('SJ?4UI#y')AND(v0.c2)))OR(v0.c1)))), vt49.c0, rt0.c2, ((v0.c0) NOT NULL) COLLATE RTRIM COLLATE BINARY FROM t0, vt49, v0, rt0 WHERE (((9.67052292E8 COLLATE RTRIM) IS FALSE)); -- 0ms;
SELECT ALL CAST(0.22747005569471546 COLLATE NOCASE AS REAL) FROM t0, vt49; -- 0ms;
SELECT ALL CAST(((rt0.c2)>>(rt0.c2)) AS BLOB) FROM t0, rt0, vt49 LIMIT 194850060; -- 0ms;
SELECT x'' FROM vt49, v0, rt0 WHERE (((CAST(NULL AS REAL)) ISNULL)) GROUP BY ((((((v0.c1)IS(t0.c0)))AND(((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c1)))))AND(((((rt0.c1)OR(v0.c2)))AND(rt0.c1))));SELECT ALL ((CASE v0.c0  WHEN rt0.c1 THEN x'' WHEN v0.c1 THEN t0.c0 WHEN 0.853166802480818 THEN NULL WHEN vt49.c0 THEN vt49.c0 WHEN v0.c0 THEN t0.c0 END)GLOB(((rt0.c2)>=(rt0.c1)))), (((vt49.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ((- (v0.c2)), ((rt0.c2) NOTNULL))), UNLIKELY(vt49.c0) COLLATE RTRIM FROM vt49;SELECT DISTINCT (((v0.c1 IN ())) IS TRUE) FROM v0, t0 WHERE (CAST(CASE WHEN x'' THEN 0.10177523532400068 END AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0) IS FALSE))OR((~ (v0.c1)))))AND(CAST(t0.c0 AS TEXT))))AND((((rt0.c0, vt49.c0, v0.c2))<=((vt49.c0, '7A', t0.c0))))))OR(((rt0.c2)/(NULL)))) FROM rt0, t0, v0;SELECT DISTINCT (NULL IN (LIKE(vt49.c0, 'x>', '뱵'))) FROM v0 WHERE ((((x'6fd9')<(0.15799599296034028)) IN (1428546500)));SELECT DISTINCT (+ ((('c')||(vt49.c0)))) FROM vt49, v0 WHERE (((CAST(NULL AS NUMERIC)) NOTNULL)); -- 0ms;
SELECT DISTINCT (rt0.c1 IN (rt0.c1)) COLLATE RTRIM FROM vt49 LIMIT -1084981570 OFFSET 1892277189;SELECT ALL ((((((((((((CAST(rt0.c0 AS REAL))AND(CASE WHEN t0.c0 THEN v0.c2 WHEN vt49.c0 THEN v0.c1 WHEN v0.c2 THEN rt0.c2 ELSE v0.c0 END)))AND(CAST(v0.c0 AS NUMERIC))))OR(CAST(t0.c0 AS REAL))))OR(LIKELIHOOD(v0.c0, 0.7781167959032609))))OR((((rt0.c1, rt0.c1, x'')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, vt49.c0, v0.c0))))))OR(CAST(vt49.c0 AS TEXT))), RANK() OVER ( ORDER BY (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()), CASE WHEN CAST(v0.c1 AS REAL) THEN '2\nQX]' END), (((rt0.c0)*(v0.c1)) IN (((vt49.c0) NOTNULL), (+ (vt49.c0)))) FROM vt49;SELECT MAX(v0.c0 COLLATE RTRIM COLLATE BINARY), ((- (rt0.c1)) IN ()), NULLIF(DISTINCT (t0.c0 IN ()), ((((rt0.c0)AND(NULL)))AND(rt0.c0))) FROM v0, t0, vt49, rt0 WHERE ((((x'', 0.039142971054232145, x'')) BETWEEN (('394472274' COLLATE BINARY, (((('')OR(NULL)))OR(0.5511209890084525)), (((('0.8970818657257366')AND(NULL)))OR(NULL)))) AND ((SQLITE_SOURCE_ID(), (((('-1131103243')AND(x'76d7')))AND(x'')), 'A)*VNu' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT FIRST_VALUE((NOT (rt0.c1)) COLLATE RTRIM) OVER (), (((v0.c2)) NOT BETWEEN ((t0.c0)) AND ((CASE WHEN v0.c1 THEN rt0.c0 ELSE rt0.c0 END))), (+ ((- (v0.c1)))) FROM rt0 WHERE ((((('-941934887') BETWEEN (0.2620841810576001) AND (x'')))||(IFNULL(DISTINCT 0.2537667090404696, 'ꦞ>K ᔼh8K')))) UNION ALL SELECT DISTINCT (MIN(v0.c2) IN ()), CAST(x'' AS INTEGER), rt0.c1 FROM vt49, v0, t0, rt0;SELECT ALL (((rt0.c2, rt0.c1, x'')) NOT BETWEEN ((((v0.c0) IS TRUE), (~ (t0.c0)), v0.c0 COLLATE RTRIM)) AND ((((vt49.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CASE WHEN vt49.c0 THEN NULL END, rt0.c1 COLLATE NOCASE))) FROM vt49, t0 WHERE (CASE WHEN ('-1990370630' IN ()) THEN ((((4.86491344E8)OR('| ')))AND(0.6556731140427491)) ELSE CASE WHEN NULL THEN '558432380' WHEN NULL THEN -2.05259379E9 WHEN 0.8545661258614929 THEN NULL WHEN x'' THEN '42274535' WHEN '{8du' THEN x'' END END) ORDER BY t0.c0  NULLS FIRST, NULL COLLATE NOCASE DESC  NULLS LAST, ((((((rt0.c1)AND(v0.c1)))OR('+d4秪HIB{A')))AND(vt49.c0)) DESC;SELECT DISTINCT ((((((((((v0.c1)AND(rt0.c1)))OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))IS NOT(((v0.c1) NOT BETWEEN (vt49.c0) AND (v0.c0)))), (((MIN(vt49.c0), 0.09648792959329267, v0.c0 COLLATE NOCASE, '-950744556', ((rt0.c1)<(v0.c1))))=((CASE x''  WHEN '' THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt49.c0 ELSE v0.c1 END, ((v0.c2)||(v0.c1)), ((rt0.c2)||(vt49.c0)), ((t0.c0) NOT NULL), CASE v0.c2  WHEN v0.c2 THEN t0.c0 END))), GROUP_CONCAT(LIKELY(v0.c1) COLLATE RTRIM) OVER () FROM vt49, rt0, t0;SELECT DISTINCT (NOT (rt0.c0)) COLLATE NOCASE, FIRST_VALUE((((v0.c2, v0.c1, v0.c0, v0.c1, v0.c0)) BETWEEN ((v0.c1 COLLATE NOCASE, CAST(v0.c2 AS NUMERIC), MIN(v0.c1, v0.c0), CAST(v0.c1 AS TEXT), CASE '-2092561092'  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)) AND (((v0.c0 IN ()), ((v0.c0)>>(v0.c1)), (((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c0))), GLOB(v0.c2, v0.c0), ((v0.c1)OR(v0.c0)))))) OVER (), rt0.c1 FROM v0 WHERE ('*4');SELECT DISTINCT COUNT(*) OVER ( RANGE  UNBOUNDED PRECEDING) FROM t0, v0, vt49, rt0 WHERE (((((NULL) NOT BETWEEN ('%W21') AND ('!_p}+i'))) NOT BETWEEN ((('-1078162750')%(x''))) AND (((NULL)||(x''))))); -- 0ms;
SELECT (NOT (((((((((v0.c0)OR(v0.c1)))AND(t0.c0)))AND(v0.c0)))OR(0Xffffffffb6495b08)))) FROM vt49, v0, rt0;SELECT ((HEX(DISTINCT v0.c1))IS((((vt49.c0))<=((v0.c1))))) FROM t0, vt49, v0; -- 0ms;
SELECT ALL 0.7412726021655079 FROM t0, vt49 WHERE ('-284703420'); -- 0ms;
SELECT DISTINCT ((((((v0.c1)OR(rt0.c2)))AND(rt0.c2)))*(((t0.c0)|(rt0.c1)))) FROM v0;SELECT (NOT (rt0.c2)), (((t0.c0, t0.c0, v0.c2)) NOT BETWEEN ((v0.c0, t0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, x''))) COLLATE RTRIM, AVG(CHANGES()) FROM vt49, v0, t0, rt0 WHERE (CAST((((('F䪙?겫o')OR(0.17328059195601297)))AND(x'')) AS BLOB)); -- 0ms;
SELECT DISTINCT (NOT (UPPER(rt0.c1))) FROM rt0, v0, t0, vt49 WHERE ((('91853631') NOT NULL)); -- 0ms;
SELECT AVG((v0.c2 IN (vt49.c0, x'eb8f04bd'))) OVER ( RANGE (~ (((rt0.c1) ISNULL))) PRECEDING EXCLUDE NO OTHERS) FROM vt49;SELECT LEAD(CASE WHEN (0.3706097027830081 IN (t0.c0)) THEN CAST(t0.c0 AS TEXT) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END, (- (t0.c0 COLLATE RTRIM)), (((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(575130708)))OR(t0.c0)))OR(t0.c0)) IN (((t0.c0) NOT BETWEEN (x'') AND (t0.c0)), MAX(x'0687', t0.c0)))) OVER () FROM t0 WHERE (TRIM(((('\[N[*4.s_')) BETWEEN ((0.031205907532628974)) AND ((NULL))))); -- 0ms;
SELECT ALL v0.c0 FROM v0, rt0, t0, vt49 WHERE (IFNULL(CASE WHEN '' THEN x'' END, CASE WHEN x'' THEN '3gY㗓z''' END)) GROUP BY ((rt0.c2 IN ()) IN (0.5755343174803519)); -- 0ms;
SELECT DISTINCT x'' FROM v0, vt49, t0, rt0; -- 0ms;
SELECT DISTINCT (LOWER(DISTINCT 0.9818840677690803) IN ()) FROM v0 LIMIT -1582494247 OFFSET -642814042; -- 0ms;
SELECT DISTINCT CASE '3]\rAFf_A'  WHEN CASE WHEN v0.c1 THEN v0.c2 ELSE 0Xffffffff85d46851 END THEN ((t0.c0) NOTNULL) WHEN (t0.c0 IN (vt49.c0)) THEN CASE WHEN v0.c2 THEN v0.c2 ELSE vt49.c0 END WHEN v0.c1 THEN ((((NULL)AND(v0.c1)))AND(0x1409ce72)) END FROM vt49 WHERE ((('-1666276339' COLLATE BINARY)>(CAST(0X2442c040 AS INTEGER))));SELECT DISTINCT ((COALESCE(rt0.c1, t0.c0)) NOTNULL), (CASE t0.c0  WHEN NULL THEN rt0.c2 END IN ()), SUM(json_array_length(0.8049559773913908) COLLATE BINARY), SUM(((rt0.c1) BETWEEN ('桭?rwnA9') AND (rt0.c2))), NULL FROM t0, vt49, rt0 WHERE ((((((((0.2913069280865529))<=((NULL))))AND((('-613674851') NOT BETWEEN ('546601262') AND (NULL)))))OR(CASE WHEN '' THEN 0.8078411158214862 END))) ORDER BY CASE vt49.c0  WHEN v0.c0 THEN v0.c1 WHEN '' THEN v0.c2 WHEN vt49.c0 THEN v0.c2 END COLLATE BINARY COLLATE BINARY, CHANGES()  NULLS LAST, ((rtreenode(v0.c0, 'YݛNi[{+')) ISNULL);SELECT v0.c0 FROM vt49, t0 WHERE ((((((+ (x'')))AND((('p8u*wO믵{')IS NOT(0.558532405155403)))))AND(((x'') NOT NULL)))) GROUP BY (((((((((NOT (vt49.c0)))OR(((vt49.c0)&('')))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt49.c0)))))OR(((t0.c0)<(v0.c0)))))AND(rt0.c1 COLLATE NOCASE)) HAVING ((((rt0.c1) ISNULL)) BETWEEN (x'd340') AND (((t0.c0)<<(v0.c1))));SELECT ((CHAR(-1600623692)) NOT BETWEEN (NULL) AND ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((t0.c0))))) FROM t0 WHERE (((CASE WHEN -1.352292263E9 THEN '-9223372036854775808' WHEN x'' THEN '232277528' WHEN 0.08128184773733715 THEN '' WHEN x'292d4ea5' THEN '査?Z%M+DW%' WHEN 0Xffffffffc2356732 THEN 0.47127860253054377 END) NOT NULL)) GROUP BY CAST(CASE WHEN v0.c2 THEN '2133850155' ELSE v0.c2 END AS TEXT);SELECT DISTINCT x'' FROM vt49, v0 WHERE (((NULL) BETWEEN (CASE WHEN x'' THEN NULL ELSE NULL END) AND (('1290488740' IN ())))); -- 1ms;
SELECT ((rt0.c2)<(rt0.c1)) COLLATE RTRIM FROM t0;SELECT CASE WHEN (v0.c0 IN ()) THEN json_array(v0.c1, x'a4e6') ELSE ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END, ((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END) ISNULL), 3091385 COLLATE RTRIM FROM rt0, v0, vt49 WHERE (((((0x132760b2)/(x'948e')))>=(((((NULL)AND(556904157)))AND(NULL)))));SELECT ALL MIN(NULLIF(v0.c1, rt0.c1)) FROM vt49;SELECT TOTAL(NULL) FILTER(WHERE NULL) OVER () FROM v0, t0, rt0 WHERE ((('q''') NOT BETWEEN (x'f19b') AND (NULL)) COLLATE RTRIM) ORDER BY CAST(((0.6604711351476996)IS NOT(v0.c1)) AS NUMERIC) ASC; -- 0ms;
SELECT CASE (vt49.c0 IN ())  WHEN (('') ISNULL) THEN CAST(rt0.c2 AS INTEGER) ELSE ((rt0.c1) NOT BETWEEN (t0.c0) AND (vt49.c0)) END FROM v0, t0 GROUP BY CASE v0.c0  WHEN vt49.c0 THEN v0.c1 END COLLATE BINARY;SELECT (((((rt0.c2, v0.c2, rt0.c2)) NOT BETWEEN ((vt49.c0, rt0.c2, vt49.c0)) AND ((rt0.c1, v0.c1, v0.c0))))IS(CAST(v0.c1 AS NUMERIC))) FROM rt0 WHERE (CASE WHEN COALESCE(NULL, 0x5ab0be0d) THEN CASE WHEN 1244561224 THEN 0.40099062484393755 END ELSE (NOT (4.51905854E8)) END) GROUP BY CAST(((vt49.c0)>=(vt49.c0)) AS TEXT) HAVING v0.c2;SELECT (((CASE WHEN v0.c1 THEN vt49.c0 END))<=(((rt0.c1 IN ())))), CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) AS INTEGER), IFNULL(DISTINCT ((rt0.c0)IS NOT(v0.c1)), (~ (rt0.c2))) FROM v0, vt49 ORDER BY rt0.c1;SELECT ALL (((v0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC), ((v0.c2) NOTNULL), NULL)) AND ((((((((((t0.c0)OR('')))OR(x'')))OR(v0.c1)))OR('')), NULL, (t0.c0 IN ())))), ((((((((GROUP_CONCAT(NULL))AND((- (rt0.c2)))))OR((- ('p+p2N_]~I')))))OR(rt0.c2)))OR(((v0.c1)/(0.9554152282023525)))), 0X344ccbda FROM v0, vt49 WHERE (CAST(0.3129420982336817 AS INTEGER) COLLATE NOCASE);SELECT DISTINCT ((((v0.c2)IS NOT(v0.c2)))>>(((vt49.c0) NOTNULL))), ((CAST(v0.c2 AS INTEGER)) NOTNULL), ((rt0.c2 COLLATE RTRIM)/((rt0.c0 IN ()))) FROM v0, rt0, vt49, t0 GROUP BY ((((((((((vt49.c0)AND(x'')))OR(rt0.c1)))AND(v0.c1)))OR(v0.c2))) NOTNULL); -- 0ms;
SELECT DISTINCT CAST(((((v0.c1)AND(t0.c0)))OR(v0.c0)) AS BLOB), v0.c1, AVG(vt49.c0) FROM vt49, rt0 WHERE (CAST(NULL COLLATE NOCASE AS NUMERIC));SELECT CASE rt0.c1  WHEN (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c0))) THEN '-2145548270' ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)) END FROM vt49, t0, v0 WHERE ((((('')+('|')))%(CAST(x'4299' AS NUMERIC))));SELECT DISTINCT ((((0.7887011072622296) NOT BETWEEN (v0.c2) AND (v0.c2))) BETWEEN (MAX(v0.c0)) AND (MAX(-120372.0))), (-147974318 IN ()), ((t0.c0)%(((((((((t0.c0)OR(v0.c1)))OR(v0.c2)))OR(vt49.c0)))OR(rt0.c1)))) FROM t0, v0, vt49 ORDER BY ((((((rt0.c1) BETWEEN (v0.c2) AND (rt0.c2)))OR((((rt0.c0, NULL, rt0.c1))<((v0.c0, v0.c2, rt0.c2))))))OR(((((v0.c1)OR(rt0.c1)))AND(rt0.c2)))) DESC;SELECT DISTINCT (((vt49.c0)) NOT BETWEEN ((((((rt0.c0)OR(v0.c0)))AND(t0.c0)))) AND ((v0.c2 COLLATE NOCASE))) FROM rt0, v0, t0;SELECT DISTINCT ((v0.c2) BETWEEN (rt0.c2) AND (v0.c2)) COLLATE NOCASE, ((CASE WHEN v0.c0 THEN rt0.c2 END)LIKE((- (t0.c0)))), '' FROM t0 WHERE (CAST(804885904 COLLATE NOCASE AS TEXT));SELECT DISTINCT CAST(((v0.c1)AND(NULL)) AS NUMERIC) FROM rt0, vt49, t0 WHERE (CAST(CAST('0.3210770391333455' AS NUMERIC) AS BLOB)) ORDER BY ((((((((CASE v0.c2  WHEN v0.c1 THEN 0.6227104291282977 END)AND(CASE v0.c1  WHEN t0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN rt0.c1 WHEN v0.c1 THEN v0.c2 WHEN rt0.c1 THEN vt49.c0 ELSE v0.c1 END)))OR(CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))OR(x'386f')))AND(((rt0.c1) NOTNULL))), COALESCE(DISTINCT CAST(rt0.c1 AS NUMERIC), TRIM(DISTINCT rt0.c0, v0.c0)) DESC  NULLS FIRST, (((~ (rt0.c1))) NOT BETWEEN (ABS(vt49.c0)) AND (x'c2dc'))  NULLS LAST;SELECT DISTINCT (((rt0.c2) NOTNULL) IN (CAST(rt0.c0 AS INTEGER))) FROM v0, rt0, vt49 WHERE ((((((('1218236055')OR('-960488578')))AND(((x'') BETWEEN (NULL) AND (0.1227005241256861)))))AND(((((x'')AND(792649445)))AND('C\r9LcL0^'))))) LIMIT 673018311; -- 1ms;
SELECT DISTINCT CASE NULL  WHEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))) THEN NULL END FROM v0, vt49, t0, rt0; -- 0ms;
SELECT DISTINCT (((t0.c0) ISNULL) IN ()) FROM v0, t0 WHERE (CASE WHEN CASE WHEN '641789325' THEN NULL END THEN ROUND(0.07657380678195325, NULL) WHEN CAST(x'' AS TEXT) THEN 0Xffffffff80bf28f6 WHEN ((NULL)||('')) THEN CAST('-7' AS NUMERIC) END); -- 0ms;
SELECT TOTAL(CAST(NULL AS BLOB)) OVER ( ORDER BY (+ (rt0.c0))) FROM t0, vt49, rt0, v0 LIMIT 999292406; -- 0ms;
SELECT DISTINCT '395611015', (((v0.c0)) BETWEEN (((((vt49.c0, rt0.c1, v0.c1))<>((v0.c0, v0.c2, rt0.c2))))) AND (((- (rt0.c2))))), TOTAL(CAST(v0.c2 AS BLOB)) OVER () FROM v0 WHERE (json_array_length(x'' COLLATE BINARY));SELECT DISTINCT TOTAL(((rt0.c1)IS(vt49.c0))) FROM vt49, v0, rt0 WHERE (((((((-1286420427)AND('a0_RİLLX')))AND(x'8fb9')))&(CAST('1181378856' AS NUMERIC)))) ORDER BY (((vt49.c0, v0.c0, NULL)) NOT BETWEEN (((vt49.c0 IN (v0.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), ((t0.c0)&(vt49.c0)))) AND ((CAST(rt0.c0 AS NUMERIC), (+ (rt0.c1)), rt0.c0 COLLATE RTRIM)))  NULLS LAST;SELECT CASE WHEN v0.c1 THEN CHANGES() END, '-131090785', ((ABS(rt0.c2)) NOT NULL) FROM t0, rt0 WHERE (CAST(0.7035442406615428 COLLATE BINARY AS NUMERIC));SELECT DISTINCT CAST('-213300082' AS NUMERIC) FROM rt0, v0, vt49, t0 WHERE ((+ ((- (NULL))))); -- 0ms;
SELECT DISTINCT CASE CAST(x'' AS REAL)  WHEN TYPEOF(v0.c1) THEN ((rt0.c1)+(t0.c0)) WHEN x'dd00' THEN ((rt0.c0) IS TRUE) WHEN (v0.c2 IN (vt49.c0)) THEN (rt0.c1 IN ()) WHEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt49.c0))) THEN CASE t0.c0  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END WHEN rt0.c1 COLLATE NOCASE THEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c2)) END FROM v0, vt49 WHERE (((((((((((0.7950859740112954) IS FALSE))OR(CAST(1.181378856E9 AS INTEGER))))AND((NOT (0.8545661258614929)))))OR(((0Xffffffff92af9f8e)%(NULL)))))AND(((0.7180652957477278) BETWEEN ('1290488740') AND (NULL)))));SELECT DISTINCT (((v0.c0))<((CASE WHEN t0.c0 THEN v0.c0 END))) FROM rt0, vt49;SELECT DISTINCT (+ (((v0.c1)*(v0.c1)))) FROM rt0, t0, vt49, v0 WHERE (HEX(((x'')>=(NULL)))); -- 0ms;
SELECT DISTINCT JULIANDAY(((((((((((((vt49.c0)OR(vt49.c0)))OR(vt49.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))OR(rt0.c1)), (((t0.c0))==((vt49.c0))), ((rt0.c0)<=(rt0.c0)), CASE WHEN v0.c2 THEN rt0.c2 WHEN '1283670349' THEN -1.959653894E9 WHEN '' THEN v0.c0 ELSE v0.c1 END, ((((rt0.c1)AND(vt49.c0)))OR(rt0.c0))) FROM vt49, rt0, t0;SELECT ALL CAST(GROUP_CONCAT(NULL) AS TEXT) FROM v0 WHERE (((CAST(NULL AS BLOB))<=(CAST(x'6846' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((((v0.c1)/(v0.c0)))!=(CASE x''  WHEN rt0.c1 THEN rt0.c2 END)), CASE vt49.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN v0.c0 WHEN v0.c1 THEN t0.c0 ELSE v0.c2 END COLLATE BINARY, AVG((- (x'8b27'))) OVER ( ORDER BY NULLIF(DISTINCT ((t0.c0)IS(v0.c2)), ((rt0.c0)==('743852697'))) DESC) FROM v0 WHERE (CAST((('sWSHsZV')<('-1873557410')) AS TEXT));SELECT ALL (((v0.c1)LIKE(rt0.c0)) IN (((vt49.c0) IS TRUE))) FROM vt49, rt0, v0, t0; -- 0ms;
SELECT DISTINCT (+ ('-2088298206')) FROM rt0 WHERE (((('1683195654')) BETWEEN (('486491344')) AND (('*3qvp-'))) COLLATE BINARY) LIMIT 2064044590 UNION SELECT DISTINCT (((v0.c0 IN (rt0.c0)))>=(((((rt0.c1)OR(rt0.c2)))OR(v0.c2)))) FROM rt0, vt49, v0, t0;SELECT DISTINCT (((v0.c1)) NOT BETWEEN (((((t0.c0, v0.c2, rt0.c2)) BETWEEN ((rt0.c2, vt49.c0, rt0.c1)) AND ((v0.c2, rt0.c2, rt0.c2))))) AND ((((vt49.c0) NOTNULL)))) FROM v0, rt0;SELECT ALL CHAR(((((t0.c0)OR(t0.c0)))OR(vt49.c0))) FROM v0 WHERE (LIKELY(((0.8765811969953572) IS TRUE)));SELECT DISTINCT TOTAL(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) FROM t0, v0 WHERE (((((((861416645)OR(x'')))OR(0.5277281018975398))) IS FALSE));SELECT DISTINCT (rt0.c0 COLLATE BINARY IN ((+ (rt0.c2)))) FROM rt0, t0, vt49, v0; -- 1ms;
SELECT DISTINCT (+ (((v0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2)))) FROM vt49, v0, rt0 WHERE ((((((0Xffffffffd92730b5 IN ()))AND((((x'af69')) BETWEEN ((NULL)) AND ((x''))))))OR((('C.ufz#W') BETWEEN (0x38f55ff1) AND ('792649445'))))); -- 0ms;
SELECT 0.7398291386299234 FROM rt0 WHERE (IFNULL(DISTINCT (((0x1aef893e)) BETWEEN ((NULL)) AND ((NULL))), ((NULL) NOT BETWEEN (0xffffffffac92cbab) AND (x'')))); -- 0ms;
SELECT DISTINCT NULLIF(((v0.c1) BETWEEN (t0.c0) AND (v0.c1)), (- (v0.c0))) FROM v0, rt0, t0, vt49 WHERE ((((x'', x'', 0.9380747112467972)) BETWEEN ((x'60c4', 2.138490839E9, 0.6251278651830252)) AND (('郣', x'', x''))) COLLATE NOCASE); -- 0ms;
SELECT TYPEOF(COUNT(*)) FROM rt0 WHERE ((-433754242 COLLATE NOCASE IN (((NULL) NOTNULL)))); -- 0ms;
SELECT ALL ((rt0.c0 IN ()) IN ()) FROM t0, vt49; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c2) NOTNULL))), ((((rt0.c2)-(x'a35e')))||(v0.c2 COLLATE NOCASE)), ((((((rt0.c1)LIKE(rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 ELSE t0.c0 END)))AND(CAST(0.8784168913091003 AS TEXT))), x'', ((CAST(vt49.c0 AS NUMERIC)) NOT BETWEEN (((v0.c1)%(rt0.c1))) AND ((- (rt0.c2)))) FROM vt49, v0, t0, rt0 WHERE (((NULL) BETWEEN ('U葉' COLLATE BINARY) AND ('-150060475' COLLATE RTRIM))); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_USED(CASE WHEN vt49.c0 THEN t0.c0 ELSE v0.c0 END) FROM t0, vt49, rt0 WHERE (((((x'') ISNULL)) IS FALSE));SELECT ALL LEAD(((NULL)!=(((v0.c2)<>(v0.c2)))), (((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))%(((v0.c2)IS(v0.c2)))), CASE CASE WHEN v0.c2 THEN v0.c2 END  WHEN CAST(v0.c1 AS TEXT) THEN CAST(v0.c2 AS BLOB) END) OVER () FROM t0, v0 GROUP BY (NOT (((v0.c1)||(rt0.c1)))) ORDER BY (((v0.c0)<(rt0.c2)) IN ())  NULLS LAST;SELECT ALL CAST(CAST(x'ea19' AS TEXT) AS NUMERIC) FROM t0, vt49, v0, rt0; -- 0ms;
SELECT ALL (((0.3405390286043385 IN (rt0.c0))) BETWEEN (((((rt0.c0)OR(v0.c0)))OR(t0.c0))) AND (COUNT(*))) FROM v0, t0, vt49, rt0 WHERE (((((NULL) BETWEEN (0.041815296587373374) AND ('')))/(((NULL) ISNULL)))) ORDER BY ((((rt0.c2) BETWEEN (v0.c2) AND (rt0.c1)))OR(CAST(vt49.c0 AS REAL)))  NULLS LAST; -- 0ms;
SELECT (((- (rt0.c1)))=((NOT (vt49.c0)))) FROM rt0 ORDER BY SUBSTR(NULL, ((((rt0.c2)AND(rt0.c0)))AND(v0.c2))) DESC, CASE WHEN json_quote(rt0.c2) THEN CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt49.c0 WHEN rt0.c2 THEN rt0.c1 END WHEN CAST(v0.c2 AS TEXT) THEN TRIM(v0.c0, rt0.c2) WHEN TRIM('-340076048', rt0.c1) THEN json_quote(rt0.c0) ELSE x'' END DESC LIMIT 1756983541;SELECT DISTINCT CAST(CASE rt0.c2  WHEN v0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN vt49.c0 WHEN vt49.c0 THEN v0.c2 WHEN v0.c1 THEN vt49.c0 END AS NUMERIC), UPPER(DISTINCT 0.7145560845763897), ((t0.c0 COLLATE NOCASE) BETWEEN ((- (v0.c1))) AND ((- (v0.c2)))) FROM v0, vt49, t0, rt0 WHERE ((((0.5797703433810194)) NOT BETWEEN ((((x'')>>(NULL)))) AND (('2130588175')))); -- 0ms;
SELECT ((rt0.c1)||(rt0.c0)) COLLATE BINARY FROM vt49, v0, t0, rt0 WHERE ((0.9144809444284417 COLLATE NOCASE IN ())) LIMIT 364164615; -- 0ms;
SELECT DISTINCT CAST((((vt49.c0)) NOT BETWEEN ((0xffffffffe0f48902)) AND ((v0.c2))) AS NUMERIC), ((SUM(vt49.c0))>('b}b+')), COUNT(*) FROM rt0, v0, vt49; -- 0ms;
SELECT DISTINCT LAG(((((v0.c0) ISNULL)) IS TRUE), CASE WHEN (v0.c1 IN ()) THEN (NOT (v0.c2)) END, (~ (CAST(NULL AS REAL)))) OVER (), ((LOWER(DISTINCT vt49.c0))!=(vt49.c0 COLLATE RTRIM)), ((COUNT(*))GLOB('')) FROM vt49, v0 WHERE ((~ (NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT SUM(((t0.c0) IS TRUE)) FROM v0, rt0, vt49, t0 LIMIT 244491603 OFFSET 1370069504; -- 0ms;
SELECT DISTINCT CASE WHEN (t0.c0 IN (rt0.c2, t0.c0)) THEN vt49.c0 COLLATE NOCASE END FROM rt0;SELECT CAST((- (v0.c1)) AS INTEGER) FROM vt49, v0; -- 0ms;
SELECT ALL (+ (((v0.c2)&(v0.c2)))) FROM vt49 GROUP BY CASE WHEN ((((v0.c1)OR(rt0.c2)))AND(v0.c2)) THEN CAST(vt49.c0 AS TEXT) END HAVING x'208c';SELECT ALL (((NULL)) BETWEEN ((((rt0.c2)==(rt0.c1)))) AND (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((vt49.c0)))))) FROM vt49, t0, v0 LIMIT -1036687566;SELECT ALL ((((((rt0.c1))<>((rt0.c1)))))>((MAX('555470702')))), NULLIF(t0.c0 COLLATE RTRIM, '1431366615'), CASE WHEN ((v0.c2)=(v0.c2)) THEN (NOT (rt0.c0)) ELSE rt0.c1 COLLATE RTRIM END FROM vt49 WHERE (UPPER(x'addd' COLLATE NOCASE));SELECT ALL COUNT(0.4006303764049942) FILTER(WHERE CAST(CASE WHEN v0.c2 THEN rt0.c2 END AS TEXT)) OVER () FROM vt49, v0 ORDER BY (((t0.c0, t0.c0, rt0.c1, v0.c1, v0.c1)) NOT BETWEEN ((((v0.c2)*(vt49.c0)), ((rt0.c1)>=(v0.c0)), ((v0.c2) BETWEEN (vt49.c0) AND (v0.c2)), 0.3731750250942014 COLLATE RTRIM, ((((t0.c0)OR(t0.c0)))AND(v0.c2)))) AND ((((rt0.c1)|(vt49.c0)), ((x'') IS FALSE), (('-423408682') IS TRUE), ABS(v0.c0), (v0.c1 IN ())))), CASE CASE rt0.c2  WHEN rt0.c1 THEN 0.5064539174268153 ELSE rt0.c1 END  WHEN -506021516 COLLATE BINARY THEN CASE t0.c0  WHEN rt0.c2 THEN v0.c1 ELSE rt0.c1 END WHEN ((v0.c1) IS FALSE) THEN ((rt0.c1)/(1.7976931348623157E308)) WHEN ((vt49.c0)>=(rt0.c1)) THEN CAST(v0.c0 AS INTEGER) WHEN ((((((((rt0.c0)OR(v0.c2)))OR(vt49.c0)))OR(rt0.c1)))AND(v0.c1)) THEN CASE rt0.c2  WHEN v0.c2 THEN NULL ELSE vt49.c0 END WHEN ((v0.c0)*(v0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE t0.c0 END ASC  NULLS LAST;SELECT rt0.c1 FROM vt49, rt0, t0, v0 ORDER BY (+ ('-240198304'))  NULLS FIRST; -- 0ms;
SELECT ALL UNLIKELY(NULL) FROM t0, vt49 WHERE (CAST((((((((('VXXMQ?]U2')OR(0.661819690010546)))AND(0.7132807016432262)))OR(0.4634643544575502)))AND(0.6395913716819183)) AS TEXT)); -- 0ms;
SELECT DISTINCT TYPEOF(((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) FROM t0, rt0;SELECT ALL x'' FROM vt49, t0; -- 0ms;
SELECT DISTINCT COUNT(((v0.c2)<=(v0.c0))) OVER () FROM v0; -- 0ms;
SELECT ALL ((UNLIKELY(DISTINCT rt0.c1))/(((v0.c2)<>(rt0.c0)))) FROM t0 LIMIT 431828937;SELECT ALL TOTAL((- (vt49.c0))) OVER ( RANGE (((t0.c0)) NOT BETWEEN ((rt0.c0)) AND (('-90107366'))) COLLATE NOCASE PRECEDING) FROM rt0, vt49, t0;SELECT DISTINCT rt0.c0 FROM t0 WHERE ('-338477553') GROUP BY (t0.c0 IN ()) COLLATE RTRIM LIMIT 105700184;SELECT TOTAL(((rt0.c1)&(v0.c1))) OVER (), ((((((((((v0.c2)AND(v0.c0)))OR(NULL)))OR('9*RrvQ*')))OR(rt0.c0)))=((v0.c1 IN (rt0.c2)))), CASE WHEN (~ (v0.c0)) THEN t0.c0 COLLATE BINARY WHEN CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((v0.c2) NOT BETWEEN (rt0.c0) AND (vt49.c0)) WHEN (NOT (t0.c0)) THEN '1017021279' WHEN SQLITE_VERSION() THEN (0.08264601346682077 IN ()) WHEN AVG(t0.c0) THEN v0.c2 END FROM vt49;SELECT ALL CASE ((t0.c0) IS FALSE)  WHEN CAST(v0.c2 AS TEXT) THEN CASE WHEN t0.c0 THEN vt49.c0 ELSE v0.c2 END END, TRIM(DISTINCT ((v0.c1)OR(rt0.c2)), t0.c0 COLLATE NOCASE), ((((rt0.c1)<<(rt0.c0))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (rt0.c1 COLLATE NOCASE)) FROM rt0, vt49;SELECT DISTINCT v0.c2 FROM v0 WHERE ((((((('1019568634') BETWEEN ('\eb.?Nc') AND ('uh')))AND((NULL IN ()))))OR((('') IS FALSE)))); -- 0ms;
SELECT ALL NTILE(((((~ (vt49.c0))))>((((vt49.c0)>(vt49.c0)))))) OVER (), PERCENT_RANK() OVER (), (vt49.c0 COLLATE NOCASE IN ()) FROM vt49 WHERE ((((x'')) NOT BETWEEN (((('') BETWEEN ('QO') AND (x'')))) AND ((((((0xffffffffac190ff6)OR(x'')))AND('N)'))))));SELECT 0xffffffffa8625ff8 FROM t0; -- 0ms;
SELECT DISTINCT CAST(vt49.c0 COLLATE NOCASE AS BLOB) FROM vt49, t0, v0, rt0 WHERE ((((('&냑S')AND(x'')))<(UPPER(NULL)))); -- 0ms;
SELECT ALL 'l-' FROM t0, vt49 WHERE (GLOB((NOT ('-671805862')), (NULL IN ()))); -- 0ms;
SELECT DISTINCT (((v0.c0)GLOB(0.7574716567053381)) IN (((((v0.c2)OR(v0.c2)))AND(v0.c0)))) FROM vt49 WHERE (CAST(((((NULL)AND(x'22df')))AND(x'')) AS INTEGER));SELECT ALL GROUP_CONCAT(json_patch(vt49.c0, vt49.c0)) OVER (), CASE v0.c0  WHEN rt0.c0 THEN vt49.c0 END COLLATE BINARY, ((((vt49.c0) NOT BETWEEN (0Xfffffffff36d017b) AND (rt0.c1)))=((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))) FROM rt0, vt49, v0; -- 0ms;
SELECT DISTINCT NULL FROM v0 WHERE (CAST(((0.9005576602038073)*('1398981051')) AS TEXT)); -- 0ms;
SELECT DISTINCT t0.c0 FROM rt0, v0, t0, vt49; -- 0ms;
SELECT DISTINCT (((v0.c2) IS TRUE) IN ('738506656')) FROM v0 LIMIT 901743975 OFFSET 1128572830; -- 0ms;
SELECT DISTINCT (NOT (x'')), (((((rt0.c0, v0.c0, v0.c2)) NOT BETWEEN ((rt0.c2, vt49.c0, vt49.c0)) AND ((x'b628fb8b', v0.c2, rt0.c1))))LIKE(load_extension(v0.c2, rt0.c2))), (~ (LIKELIHOOD(x'22e10aeb', 0.2226291396328044))) FROM rt0, vt49;SELECT DISTINCT ((rt0.c2)IS NOT(rt0.c0)) COLLATE RTRIM FROM v0, rt0 WHERE (LIKELY(CASE 'XmnN'  WHEN 'v1' THEN 0.17050881690951447 WHEN '뾣Rn' THEN NULL WHEN x'' THEN '342195999' ELSE x'' END)) LIMIT 1064142961 OFFSET 435243165; -- 0ms;
SELECT v0.c0, '', NULL FROM v0; -- 0ms;
SELECT ALL (NOT (((vt49.c0)OR(v0.c1)))) FROM vt49, rt0, v0, t0; -- 1ms;
SELECT ALL ((((rt0.c0)<=(rt0.c0))) NOT BETWEEN (COUNT(*)) AND (v0.c2)), ((LENGTH(v0.c0)) NOTNULL), CAST(json_valid(rt0.c2) AS BLOB) FROM t0, vt49, rt0 WHERE ((((CAST(0.23201065856787761 AS TEXT)))>((0X5a0c22fd COLLATE RTRIM)))) LIMIT -1667812983;SELECT DISTINCT ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY COLLATE NOCASE FROM v0, vt49, t0 WHERE ((- (((x'') BETWEEN ('4>i') AND (NULL)))));SELECT DISTINCT ((((((((t0.c0)OR(CASE 0.9435144618963127  WHEN rt0.c0 THEN v0.c2 END)))AND(rt0.c2)))OR(v0.c0)))AND(((v0.c0) NOTNULL))), COUNT(*), (+ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))), (((vt49.c0 IN ()))*(vt49.c0 COLLATE NOCASE)), 0xfffffffff4d7bde4 FROM t0, v0 WHERE (CASE WHEN '8s''.8노' THEN CASE 0.38350041329983686  WHEN '0.6398247189331171' THEN x'' ELSE '2~%\r' END END) GROUP BY '' HAVING NULL LIMIT 2068961325;SELECT DISTINCT (((((v0.c2) ISNULL)))=((CASE WHEN 3290951 THEN rt0.c0 END))), (((v0.c2 COLLATE RTRIM))=((((rt0.c0)!=('-1575323166'))))), ((- (0.6460200276888906)) IN (x'', ((((((((vt49.c0)AND(v0.c1)))AND(rt0.c1)))OR('IQ꩓s')))OR(rt0.c1)))), (+ ((t0.c0 IN ()))), ((((0Xffffffff89483c34)AND(vt49.c0)))OR(v0.c1)) COLLATE RTRIM FROM v0 WHERE (((((NULL) NOTNULL)) BETWEEN (DATE('148398334', NULL, '0.12676567355122792')) AND (((((-2062749260)OR('')))AND(NULL)))));SELECT ALL (- (v0.c0)) FROM rt0, t0, vt49, v0 WHERE ('0.285007442131165'); -- 0ms;
SELECT ((x'') ISNULL), SUM(CAST(rt0.c2 AS REAL)) OVER (), (((CAST(v0.c2 AS TEXT), ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2)), (rt0.c0 IN ())))<=(((((rt0.c0))<=((v0.c1))), ((t0.c0) IS TRUE), json(v0.c1)))) FROM rt0, vt49 LIMIT -901364808 OFFSET -206509257;SELECT ALL MIN(((((rt0.c1)AND(rt0.c1)))AND(v0.c2))), LEAD((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c1)*(rt0.c1)), rt0.c1 COLLATE BINARY, CAST(rt0.c1 AS BLOB))) AND ((((0.9180163273403413) ISNULL), ((1932884179) NOT NULL), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0))))), '0.9714215120548869', ((CAST(rt0.c0 AS BLOB))OR(NULL))) OVER (), (NOT (((vt49.c0) IS FALSE))) FROM rt0 GROUP BY DATETIME(v0.c1 COLLATE NOCASE, 0.6990045098800287, rt0.c2 COLLATE BINARY), CASE WHEN ((((-1425106180)AND(t0.c0)))AND(1780755770)) THEN CASE WHEN NULL THEN vt49.c0 END WHEN (- (v0.c1)) THEN (v0.c2 IN ()) WHEN ((((t0.c0)OR(t0.c0)))AND(vt49.c0)) THEN t0.c0 COLLATE BINARY ELSE ((rt0.c1)IS NOT(rt0.c0)) END, CASE WHEN TRIM(v0.c0) THEN (('-1582494247')IS(v0.c0)) WHEN LOWER(rt0.c0) THEN '-241186905' WHEN CAST(v0.c1 AS TEXT) THEN CASE WHEN NULL THEN rt0.c1 END WHEN ((t0.c0) IS TRUE) THEN ((rt0.c1) IS FALSE) WHEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN (((rt0.c1, vt49.c0, v0.c2, vt49.c0, NULL)) NOT BETWEEN ((rt0.c0, rt0.c1, -1360498040, rt0.c2, v0.c0)) AND ((v0.c1, v0.c2, rt0.c2, v0.c2, t0.c0))) ELSE ((((rt0.c1)OR(vt49.c0)))AND(v0.c1)) END, rt0.c1, TRIM(CAST(rt0.c2 AS TEXT), vt49.c0 COLLATE RTRIM);SELECT DISTINCT (((vt49.c0, v0.c2, v0.c1)) NOT BETWEEN ((((rt0.c2)-(vt49.c0)), (rt0.c2 IN ()), CAST(rt0.c2 AS NUMERIC))) AND ((((v0.c2)<<(rt0.c1)), ((-1267291756) BETWEEN (rt0.c2) AND (rt0.c2)), ABS(rt0.c2)))) FROM t0 WHERE (((0.9450186225870129) NOT NULL) COLLATE BINARY);SELECT vt49.c0 COLLATE NOCASE, ((((vt49.c0)*(rt0.c0))) BETWEEN (((0.39488430390866414) IS FALSE)) AND ((NOT (rt0.c0)))), COUNT(CAST(vt49.c0 AS BLOB)) OVER () FROM v0 WHERE (((((('')>=(NULL))))>(((((-1.399665749E9)) BETWEEN ((NULL)) AND ((0.04767726587342713)))))));SELECT DISTINCT (((v0.c1 COLLATE BINARY))>((CASE WHEN t0.c0 THEN rt0.c1 ELSE v0.c1 END))) FROM t0, vt49, rt0 WHERE (((((((x'')AND(NULL)))AND(x'')))=(CAST(0.24900481895638393 AS INTEGER)))) ORDER BY (~ (((rt0.c2)=(v0.c2)))) ASC;SELECT ALL CAST((~ (t0.c0)) AS NUMERIC), CASE rt0.c0 COLLATE RTRIM  WHEN vt49.c0 THEN (((t0.c0))>=((vt49.c0))) WHEN GROUP_CONCAT(rt0.c1) THEN (rt0.c2 IN (v0.c0, 'Ym')) WHEN (((vt49.c0))<>((v0.c1))) THEN (~ (v0.c2)) WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN (+ (0.29242492965026845)) WHEN ((v0.c2) BETWEEN (rt0.c1) AND (vt49.c0)) THEN CAST(rt0.c1 AS TEXT) END, ((MIN(vt49.c0))||(((v0.c0) NOTNULL))) FROM t0, rt0, vt49 WHERE (CAST((- (x'de78')) AS TEXT));SELECT DISTINCT ((CAST(v0.c1 AS NUMERIC)) IS TRUE), DENSE_RANK() OVER (), ((((v0.c1) NOT NULL))LIKE(CASE 0xffffffffd171bafc  WHEN v0.c2 THEN rt0.c1 WHEN v0.c1 THEN '0.3731750250942014' WHEN rt0.c2 THEN rt0.c0 ELSE v0.c2 END)) FROM vt49, v0;SELECT (+ (GROUP_CONCAT(v0.c0))), (((- (rt0.c0))) BETWEEN (UNLIKELY(rt0.c0)) AND (rt0.c1 COLLATE NOCASE)), ((v0.c0)+(CAST(vt49.c0 AS BLOB))) FROM v0;SELECT DISTINCT (((((t0.c0))>((t0.c0))))/(CASE WHEN v0.c0 THEN rt0.c0 END)), ((AVG(NULL))GLOB(((vt49.c0) IS FALSE))), ((0.3541442599793253) NOTNULL) FROM vt49;SELECT DISTINCT LIKELIHOOD((rt0.c1 IN ()), 0.8645735554941386), ((rt0.c0)<=(LOWER(DISTINCT rt0.c0))), (- (rt0.c0)) COLLATE BINARY COLLATE NOCASE FROM t0, v0, vt49 GROUP BY (((((((rt0.c2, rt0.c2, rt0.c0))<>((t0.c0, rt0.c0, rt0.c1))))AND((((v0.c2, v0.c0, v0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c1)) AND ((rt0.c0, v0.c0, v0.c2))))))AND(NULL)), CAST(CHAR('-1873886589') AS NUMERIC), CAST(v0.c0 COLLATE NOCASE AS BLOB), (((((v0.c1)AND(vt49.c0)))OR(t0.c0)) IN ()), ((((rt0.c0) BETWEEN (NULL) AND (vt49.c0)))IS(((rt0.c0)AND(rt0.c2)))) HAVING (((CASE t0.c0  WHEN rt0.c1 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c1 THEN v0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END, ((((((((v0.c0)AND(rt0.c2)))AND(x'')))OR(rt0.c2)))OR(t0.c0)), TIME(rt0.c2, rt0.c1, '')))<((((((rt0.c0)AND(v0.c1)))AND(rt0.c0)), MIN(rt0.c2), ((v0.c0)LIKE(v0.c1)))));SELECT ALL (- (LOWER(v0.c1))) FROM v0, vt49, t0; -- 0ms;
SELECT ALL MAX((0X23493265 IN ()), vt49.c0 COLLATE RTRIM) FROM t0, rt0, vt49; -- 0ms;
SELECT DISTINCT ((v0.c2) BETWEEN (((rt0.c1) NOT NULL)) AND (NULL)) FROM vt49, rt0 WHERE (CASE WHEN CAST(NULL AS BLOB) THEN CAST('1919489765' AS INTEGER) ELSE ((-2052593790)IS NOT(x'')) END);SELECT DISTINCT (((t0.c0) NOT NULL) IN ()) FROM vt49 LIMIT -633587350 OFFSET -689621549; -- 0ms;
SELECT CASE ((1616433566) BETWEEN (v0.c1) AND (0.0696901667143478))  WHEN MIN(v0.c2) THEN v0.c0 WHEN vt49.c0 COLLATE RTRIM THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)) WHEN ((v0.c0) NOT BETWEEN (x'') AND (v0.c1)) THEN CASE t0.c0  WHEN v0.c2 THEN v0.c1 ELSE rt0.c2 END ELSE t0.c0 COLLATE NOCASE END FROM rt0, vt49 WHERE (CAST(((x'')>=(-2.40198304E8)) AS REAL));SELECT ALL (((rt0.c2)) NOT BETWEEN (((((rt0.c0, vt49.c0, vt49.c0)) NOT BETWEEN ((rt0.c2, t0.c0, t0.c0)) AND ((v0.c2, rt0.c0, rt0.c1))))) AND ((GROUP_CONCAT(v0.c1)))) FROM t0, v0, rt0, vt49 WHERE ((CASE 0xffffffffb47dc752  WHEN x'' THEN x'' END IN ())) ORDER BY (((((t0.c0))=((rt0.c2)))) IS TRUE) DESC, (((((((((((((NOT (rt0.c2)))OR((((vt49.c0, rt0.c1, rt0.c0, v0.c2, v0.c0))!=((rt0.c0, vt49.c0, rt0.c2, x'', rt0.c2))))))OR(v0.c2 COLLATE RTRIM)))AND(((rt0.c2) ISNULL))))OR((((v0.c1, rt0.c1, rt0.c2, v0.c2, rt0.c2))>=((x'bf78', v0.c1, v0.c1, v0.c1, rt0.c1))))))AND(0.6483713327337046)))AND((t0.c0 IN ()))), ((CASE WHEN v0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)AND(((rt0.c1)IS('1360769807'))))  NULLS FIRST;SELECT ALL (((('1639782737') NOT BETWEEN (v0.c2) AND (v0.c0))) IS TRUE) FROM t0 ORDER BY NULL  NULLS LAST;SELECT DISTINCT ((NULL) NOT NULL) FROM v0 WHERE (((((0.5535549585053801)>('1521532429')))GLOB(((NULL)<(0.5902541303756239))))) LIMIT 276278858 OFFSET 605350582; -- 0ms;
SELECT ALL DATETIME((rt0.c1 IN (v0.c0, vt49.c0)), (((v0.c0))!=((v0.c2))), CAST(t0.c0 AS BLOB)) FROM vt49, v0, t0;SELECT ALL CASE (- (v0.c0))  WHEN ((0.7208472011844175)>(rt0.c2)) THEN v0.c0 ELSE ((rt0.c0)AND(rt0.c1)) END, CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC), 0x13299b0f FROM t0, v0;SELECT DISTINCT (((COUNT(t0.c0)))>=((CASE v0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c1 END))) FROM rt0;SELECT DISTINCT (~ (AVG(t0.c0))) FROM v0, t0, vt49 ORDER BY ((('2129209603')IS(rt0.c0)) IN ())  NULLS FIRST, (v0.c1 IN ()), (((((rt0.c1))<>((v0.c1))))GLOB((+ (v0.c0)))) DESC;SELECT '-704387778', (- (rt0.c0 COLLATE BINARY)), ((rt0.c2 COLLATE RTRIM) BETWEEN ((((v0.c2, 0x1551b9fb, t0.c0))<=((t0.c0, rt0.c2, rt0.c2)))) AND (((v0.c1) IS TRUE))), CASE CAST(t0.c0 AS REAL)  WHEN ((v0.c1)<(v0.c1)) THEN (- (NULL)) END, ((CASE v0.c0  WHEN rt0.c2 THEN vt49.c0 ELSE v0.c0 END)/((rt0.c0 IN (v0.c2)))) FROM rt0, t0;SELECT DISTINCT ((((v0.c1) IS FALSE))<=((((t0.c0))>((v0.c2))))) FROM t0, vt49, rt0, v0 WHERE (CAST(CASE x'6f31'  WHEN 0.8779231214380623 THEN '' END AS TEXT)) LIMIT 1929766140; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((((CAST(0.6468563442135571 AS BLOB))OR(0.6183888073739654)))OR(CASE x''  WHEN x'0347' THEN 0.3549231277692293 WHEN NULL THEN NULL WHEN NULL THEN 0X599915b3 END)))OR(-120372)))AND((((-1973293301)) NOT BETWEEN ((NULL)) AND ((0X6fc5d59d)))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((v0.c2) NOT BETWEEN ('{衱U') AND (v0.c2)) THEN (~ ('o]U ')) ELSE x'' COLLATE NOCASE END, LOWER(((t0.c0)IS(-941934887))), rt0.c0, TRIM(CAST(t0.c0 AS REAL)), (((v0.c1, ((v0.c0)<(v0.c0)), ((((((((rt0.c1)AND(rt0.c1)))OR(vt49.c0)))AND(rt0.c0)))OR(t0.c0))))<=(((rt0.c0 IN ()), ((v0.c2) IS FALSE), ((((((((((((rt0.c0)OR(v0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c1))))) FROM vt49, rt0, v0, t0 WHERE (((CASE WHEN '' THEN '-1159208645' ELSE 5.7730582E7 END) IS FALSE)) GROUP BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.5116591459051447))|((rt0.c0 IN ()))); -- 0ms;
SELECT ((((((v0.c1)IS(rt0.c2)))AND(x'b649')))AND((v0.c2 IN ()))) FROM t0, v0 WHERE ((NULL IN ())) ORDER BY (~ ((((t0.c0)) NOT BETWEEN ((vt49.c0)) AND ((0.6928711914110656))))), 0.8320741247749754 ASC;SELECT DISTINCT (((vt49.c0)) BETWEEN ((rt0.c1)) AND ((COUNT(*)))), ((((((((CAST(vt49.c0 AS NUMERIC))AND(v0.c1)))AND(((t0.c0)IS(rt0.c2)))))AND(CAST(t0.c0 AS BLOB))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (x'')))), ((((v0.c0)>>(vt49.c0))) NOTNULL), (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))))>=((''))), CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN vt49.c0 WHEN t0.c0 THEN x'2b15' ELSE vt49.c0 END AS TEXT) FROM rt0, vt49 WHERE (((('-1168461203') IS FALSE) IN ()));SELECT DISTINCT ((((CAST(v0.c0 AS INTEGER))OR(CAST(v0.c1 AS BLOB))))AND((rt0.c0 IN (rt0.c2)))), 0.9023164860676532, (((v0.c1, v0.c0, rt0.c1))<=((v0.c0, rt0.c1, v0.c2))) COLLATE RTRIM FROM t0, vt49, rt0 WHERE (((CAST(650144696 AS INTEGER)) BETWEEN (((('0.24502677163798037', NULL, NULL)) BETWEEN ((NULL, NULL, x'04e5')) AND ((x'', 0.7834358920363125, x'')))) AND (((((NULL)OR('RK*Mf')))OR(NULL)))));SELECT DISTINCT (((t0.c0 IN ()))*(vt49.c0 COLLATE NOCASE)), (MAX(v0.c0) IN ()), CASE ((rt0.c2)IS NOT(v0.c1))  WHEN CASE v0.c1  WHEN t0.c0 THEN v0.c0 END THEN (NOT (v0.c1)) END FROM rt0, t0, v0, vt49; -- 0ms;
SELECT DISTINCT (((~ (rt0.c2)))>>(0.558532405155403)) FROM t0 WHERE ((('0.7598369679732759') BETWEEN (0Xffffffffa474f2e5) AND ('-1473814327')) COLLATE RTRIM) LIMIT -1456716551;SELECT DISTINCT NTH_VALUE(((((NULL, 0.07012514043516482, rt0.c0)) BETWEEN ((vt49.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, vt49.c0))) IN (rt0.c2 COLLATE NOCASE, ((((vt49.c0)OR(rt0.c0)))AND(vt49.c0)))), ABS(rt0.c0)) OVER ( ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(vt49.c0)))*(((v0.c0)IS NOT(v0.c2))))  NULLS FIRST, CASE (v0.c0 IN ())  WHEN (((vt49.c0))>((v0.c2))) THEN LIKE(v0.c2, v0.c2, '0') ELSE t0.c0 END  NULLS FIRST, (((((v0.c1) NOT BETWEEN ('') AND (rt0.c0))))<=((((rt0.c0) BETWEEN (NULL) AND (t0.c0))))) DESC  NULLS LAST), (((v0.c1)) BETWEEN ((CASE v0.c2  WHEN v0.c2 THEN rt0.c0 END)) AND ((((vt49.c0) NOT NULL)))), ((((CASE WHEN vt49.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(((t0.c0) NOTNULL))))OR(CAST(rt0.c1 AS NUMERIC))) FROM rt0, vt49;SELECT ALL COUNT(rt0.c2) FROM vt49, v0 NOT INDEXED, t0, rt0; -- 0ms;
SELECT DISTINCT (((- (rt0.c2))) NOT NULL) FROM v0, t0, rt0, vt49; -- 0ms;
SELECT CASE ((v0.c1)OR(t0.c0))  WHEN IFNULL(v0.c0, v0.c2) THEN 549266435 COLLATE RTRIM END FROM v0, vt49, t0 INNER JOIN rt0 ON CASE WHEN v0.c0 THEN load_extension(t0.c0) WHEN (- (x'')) THEN CAST(v0.c2 AS REAL) WHEN '1234257101' THEN ((rt0.c2)*(vt49.c0)) END WHERE ((NOT (((NULL)<<(NULL))))); -- 0ms;
SELECT ALL ((((rt0.c1) NOT BETWEEN ('-528654874') AND (vt49.c0))) NOT NULL) FROM vt49, rt0, t0, v0 EXCEPT SELECT ALL ((TOTAL(rt0.c2))IS((rt0.c1 IN ()))) FROM rt0, vt49; -- 0ms;
SELECT DISTINCT (((((rt0.c1) NOTNULL)))==((((rt0.c2)<=(x''))))), COUNT(((vt49.c0)!=(rt0.c0))), (((713871602 IN (v0.c2)))&(((t0.c0) NOTNULL))) FROM t0, vt49 WHERE (((((NULL COLLATE NOCASE)AND((((('')OR('1398981051')))AND('-9223372036854775808')))))OR((('U0')<('0.6797457023481492')))));SELECT DISTINCT '<J' FROM vt49, t0, rt0 WHERE (LIKELY('yj|	%R5_/')); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt49; -- 0ms;
SELECT ALL v0.c1 FROM rt0, t0;SELECT DISTINCT (((v0.c0 IN (rt0.c0)))LIKE((v0.c2 IN ()))) FROM v0, rt0, vt49 WHERE (((HEX(x'cf0e')) NOT BETWEEN ((((-1.019568654E9))>=((0Xffffffffd2f416db)))) AND (((-742152613)<<('1522945951'))))) ORDER BY (((((rt0.c0) BETWEEN (v0.c1) AND (vt49.c0)), ((v0.c1)>(rt0.c0)), (((vt49.c0, v0.c2, t0.c0))<>((v0.c2, rt0.c1, rt0.c1)))))>=((TRIM(DISTINCT rt0.c1), (+ (rt0.c1)), ((NULL) BETWEEN (v0.c1) AND (vt49.c0))))), ((v0.c0)<(v0.c0)) COLLATE NOCASE  NULLS FIRST, (((rt0.c1)) BETWEEN (((- (v0.c2)))) AND ((((((v0.c0)AND(rt0.c1)))OR(vt49.c0))))) DESC  NULLS FIRST;SELECT ALL json_extract((+ (t0.c0)), PRINTF(rt0.c0)) FROM t0 GROUP BY CAST('143738855' AS NUMERIC), (NOT (((rt0.c0) IS FALSE))), (((((((((t0.c0)OR(t0.c0)))OR(v0.c1)))OR(v0.c2)))OR(rt0.c1)) IN ()) HAVING (((v0.c0, x'', 0.21503392410187572)) NOT BETWEEN ((((x'') ISNULL), CAST(v0.c2 AS NUMERIC), CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END)) AND (((v0.c0 IN ()), v0.c2, v0.c2)));SELECT ALL (((~ (t0.c0)))=(CASE v0.c1  WHEN rt0.c1 THEN v0.c1 ELSE v0.c2 END)) FROM t0, rt0 WHERE ((('' COLLATE RTRIM) BETWEEN (NULL COLLATE NOCASE) AND (0.08773485324801522)));SELECT DISTINCT ((x'8eeb')<(((v0.c2)<>(rt0.c0)))) FROM rt0, vt49 WHERE ((((-1204095054 IN ())) NOT NULL)) GROUP BY ((((((((((((((((((v0.c0)OR(v0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c2)))OR(v0.c0)))/(LTRIM(0.5002261214492716))) ORDER BY (((v0.c2)<(rt0.c0)) IN ((vt49.c0 IN ()))) ASC, (((rt0.c1)) NOT BETWEEN ((((v0.c0)IS(rt0.c2)))) AND ((0.6072972716401474))) DESC  NULLS LAST, ((CASE t0.c0  WHEN v0.c1 THEN t0.c0 END) NOT BETWEEN (((((((((NULL)AND(v0.c0)))AND(rt0.c0)))OR(v0.c0)))OR(vt49.c0))) AND (((NULL) IS TRUE)))  NULLS LAST;SELECT COALESCE(DISTINCT MAX(v0.c1), COUNT(rt0.c0)) FROM vt49, rt0, v0, t0 ORDER BY ((((t0.c0 COLLATE RTRIM)AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))))AND(CAST(v0.c0 AS BLOB))) ASC  NULLS LAST, (~ (((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c0)))AND(v0.c2)))); -- 0ms;
SELECT DISTINCT ((HEX(rt0.c2))|(((t0.c0)IS NOT(rt0.c0)))), SUM((t0.c0 IN (0.6555761006017351, vt49.c0))), STRFTIME(((((((((t0.c0)OR(rt0.c1)))OR('Gm૱]')))OR(rt0.c2)))AND(t0.c0)), LIKE(rt0.c1, v0.c0, '-'), '1387399059', (NOT (rt0.c1)), ((v0.c2)IS(rt0.c1)), x'5c6b', (((vt49.c0)) BETWEEN ((0x3e565975)) AND ((v0.c2)))) FROM vt49, t0 INNER JOIN v0 ON '761835729' ORDER BY CASE ((rt0.c2) NOT NULL)  WHEN CAST(v0.c1 AS REAL) THEN (~ (rt0.c2)) ELSE CASE WHEN x'' THEN rt0.c1 ELSE v0.c2 END END  NULLS FIRST;SELECT CASE WHEN LIKE(v0.c1, rt0.c1) THEN (((rt0.c2))<((vt49.c0))) WHEN TOTAL(rt0.c2) THEN t0.c0 WHEN 0X67e6ac77 COLLATE NOCASE THEN ((((((((vt49.c0)OR(0.5944029106911554)))OR(v0.c0)))AND(vt49.c0)))OR(v0.c2)) ELSE (('')OR(v0.c1)) END FROM rt0, vt49 WHERE ((NOT (')എ')) COLLATE NOCASE);SELECT ALL ((vt49.c0) NOT BETWEEN (v0.c2) AND (rt0.c1)) COLLATE RTRIM FROM vt49 ORDER BY CASE WHEN TIME(v0.c1, x'7be7', v0.c1, rt0.c1, v0.c1) THEN CAST(vt49.c0 AS TEXT) WHEN PRINTF(rt0.c1, rt0.c0, rt0.c1) THEN ((rt0.c0)AND(t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CAST(v0.c0 AS TEXT) END DESC, ((json_array(v0.c0, NULL))<=((((('')AND(v0.c0)))AND(v0.c1))));SELECT ALL ((((SUM(vt49.c0))AND(((vt49.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((((rt0.c2)OR(v0.c0)))AND(rt0.c0)))) FROM vt49, rt0, t0, v0 WHERE (x''); -- 0ms;
SELECT ALL NULLIF(DISTINCT SUM(NULL), vt49.c0) FROM t0, vt49 WHERE (CAST(((('0.2831789039798681', x'eb4f', '1476015650')) NOT BETWEEN (('-2052593790', NULL, 'RNkMYO.D')) AND (('1780755770', '', '0e'))) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((+ (rt0.c1)))GLOB(CAST(v0.c2 AS INTEGER))) FROM rt0, t0, v0, vt49; -- 0ms;
SELECT DISTINCT ((COUNT(vt49.c0))<>(CASE rt0.c2  WHEN rt0.c1 THEN v0.c1 ELSE t0.c0 END)), CASE WHEN COUNT(v0.c2) THEN json_valid(rt0.c1) END, CAST('449374395' AS BLOB) FROM rt0, vt49 WHERE ((+ (CAST(9.55604977E8 AS TEXT))));