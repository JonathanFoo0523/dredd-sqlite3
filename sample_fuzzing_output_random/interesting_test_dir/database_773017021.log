-- Time: 2024/06/06 01:33:05
-- Database: database21
-- Database version: 3.40.0
-- seed value: 773017021
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 4ms;
CREATE TABLE IF NOT EXISTS t1 (c0 BLOB ); -- 3ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('441189343'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c0=0X1a4c03df, c0=0.6906713929122865 WHERE CAST(UPPER(t0.c0) AS NUMERIC); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c52 INTEGER; -- 1ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES (NULL), ('441189343'), (NULL), (NULL), (NULL); -- 1ms;
DELETE FROM t1 WHERE (((t1.c0)) NOT BETWEEN ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))) AND ((((t1.c0)+(t1.c0))))); -- 1ms;
INSERT OR ABORT INTO t0(c52) VALUES (''), (4.41189343E8), (x'25fb'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(0.45611640843917134) WHERE t1.c0; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL), ('441189343'), ('1786946104'); -- 1ms;
INSERT OR IGNORE INTO t0(c52, c0) VALUES ('1786946104', x''); -- 0ms;
ANALYZE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX  t1; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA optimize; -- 2ms;
ALTER TABLE t0 ADD COLUMN c13 BLOB; -- 0ms;
ANALYZE t1; -- 1ms;
CREATE UNIQUE INDEX i62 ON t0(LIKE(((((NULL)AND(x'')))OR(c13)), (NOT (c0)), '1') COLLATE RTRIM ASC,x'251c' COLLATE NOCASE DESC,((CAST(c0 AS REAL))%(((c52) NOT BETWEEN (c52) AND (c52)))) COLLATE NOCASE); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i86 ON t1(CASE WHEN (c0 IN (c0)) THEN (c0 IN (c0, c0)) END); -- 1ms;
INSERT OR FAIL INTO t1 VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c13, c0, c52) VALUES (NULL, '441189343', 0.23258199587281836), ('1786946104', x'a4a1', 0.618202884496748), (NULL, NULL, NULL), ('', x'', 0.7720117270837566), (NULL, '629891396', x''); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES ('629891396'); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('1786946104'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c13 TO c48; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
REINDEX; -- 7ms;
INSERT OR FAIL INTO rt0(c1) VALUES ('629891396'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2, c1) VALUES (NULL, 0.45611640843917134, NULL); -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES ('441189343'); -- 2ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0Xffffffffdb5a1754); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0) VALUES ('629891396', NULL); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 5ms;
ANALYZE rt0; -- 0ms;
INSERT OR ROLLBACK INTO t0(c52, c48) VALUES (x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (NULL, NULL), (0.6906713929122865, NULL), (NULL, ''); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
CREATE TABLE IF NOT EXISTS t2 (c0 INT NOT NULL ON CONFLICT FAIL CHECK ( ((((((c0)AND(c0)))OR(c0)))AND(((c0) BETWEEN (c0) AND (c0))))) ); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('_(', NULL, '1756676872'), (0.13519157359205058, '', 'uGo᝔hဠ'), ('', NULL, x''); -- 0ms;
PRAGMA integrity_check; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t2(c0) VALUES (NULL), ('ugo᝔hဠ'), (0xffffffff9cabfa02); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES (1.756676872E9), (x'a5d2'), ('2005074502'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0Xffffffffb1b35850), (NULL), (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c52, c0, c48) VALUES (x'', 0.6906713929122865, -6.1485278E8); -- 4ms;
REINDEX i86; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0.04103675289255282, x''), ('-1313646512', NULL), (x'', '-614852780'); -- 3ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (NULL); -- 7ms;
BEGIN EXCLUSIVE TRANSACTION; -- 2ms;
REINDEX; -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR ABORT INTO t0(c52, c48) VALUES (NULL, NULL); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (((rt0.c0))<=((rt0.c2))) COLLATE BINARY FROM rt0, t1 WHERE (IFNULL(CAST(x'dfa7d468' AS BLOB), ((x'') BETWEEN ('rRAl!Yt^&') AND (0.04103675289255282)))); -- 0ms;
SELECT ALL (CASE WHEN t0.c0 THEN t0.c48 ELSE t0.c0 END IN ()), CASE rt0.c2  WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END COLLATE BINARY COLLATE NOCASE, AVG(rt0.c0 COLLATE RTRIM COLLATE BINARY) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0 GROUP BY ((CAST(t0.c52 AS BLOB))==(CASE WHEN rt0.c1 THEN t0.c52 END)), 0.7133314235507634, ((NULL) BETWEEN ('1903355720') AND (((t0.c52)OR(rt0.c2)))) LIMIT 1786946104 OFFSET -627619095;SELECT DISTINCT MIN(json_remove(t1.c0, t0.c0)) FROM rt0, t0, t1;SELECT ALL -6.1485278E8 FROM t1 WHERE (((((~ (-1.313646512E9))))=((NULL COLLATE BINARY)))) LIMIT -1174004750; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, t1, t0 WHERE (((HEX('kaB7uᡨ8'))==(x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) OVER (), ((((t0.c52)%(rt0.c0))) IS FALSE), (((t0.c48 COLLATE NOCASE))>=((((rt0.c0) BETWEEN (t0.c52) AND (t0.c52))))) FROM t0, t1, rt0 WHERE ((((x'')) BETWEEN (((('dJ,G#%')!=(NULL)))) AND (('-627619095' COLLATE BINARY)))) GROUP BY ((x'') ISNULL) HAVING (CAST(rt0.c2 AS NUMERIC) IN (CASE rt0.c0  WHEN t0.c0 THEN t0.c52 ELSE t1.c0 END)); -- 0ms;
SELECT ALL (((t0.c0, t0.c0, '-76738528')) NOT BETWEEN (((((t0.c48))>=((rt0.c2))), ((((((((t1.c0)OR(rt0.c0)))OR(t0.c48)))AND(t0.c0)))AND(t0.c52)), 0xfffffffffa2f9c71)) AND ((((t0.c0)/(rt0.c0)), TOTAL_CHANGES(), (('1370792560') IS FALSE)))) FROM t1, rt0 WHERE ((((((((((('Z|')&(0.6906713929122865)))OR((('0.13519157359205058') NOT BETWEEN ('') AND (441189343)))))OR(CASE WHEN '~O' THEN NULL WHEN '~O' THEN 'kJXeDCg' WHEN '1370792560' THEN 'abW>' ELSE '漏雙B?' END)))AND(CAST(0.4072497534947379 AS INTEGER))))AND(((0xffffffffba061bf2)LIKE(0.981173245306496))))) ORDER BY ((((rt0.c0) ISNULL))<('1756676872')) DESC  NULLS FIRST;SELECT DISTINCT (~ (TOTAL(0.46003578047786153))) FROM t1, rt0, t0; -- 0ms;
SELECT TYPEOF(((t0.c52)IS NOT(-97543055))) FROM t1 LIMIT -627619095 OFFSET -97543055;SELECT DISTINCT NULL, TRIM(rt0.c1), CASE WHEN CAST(t0.c0 AS TEXT) THEN (((rt0.c1))>=((rt0.c2))) ELSE CAST(t0.c48 AS INTEGER) END, RANK() OVER (), rt0.c0 FROM t1, t0 WHERE (CASE (x'' IN ())  WHEN ((NULL)IS(NULL)) THEN CAST(NULL AS NUMERIC) WHEN (+ (NULL)) THEN CASE 'Nw'  WHEN '0.13519157359205058' THEN x'' END WHEN (((((((('')OR(NULL)))OR(x'')))OR(0.4659973425412114)))AND('877672555')) THEN LOWER(DISTINCT '-76738528') ELSE (- (NULL)) END) GROUP BY (NOT (('+I柣M^E' IN ()))), ((((((rt0.c0)AND(t0.c0)))OR(rt0.c0))) IS FALSE), (((t0.c52)) NOT BETWEEN (((rt0.c1 IN ()))) AND (((((t0.c52))<=((t0.c48)))))) HAVING ((CAST(t0.c48 AS REAL)) ISNULL);SELECT DISTINCT CASE ((NULL) NOT BETWEEN (t0.c48) AND (t0.c48))  WHEN ((t1.c0) IS FALSE) THEN CASE t0.c0  WHEN NULL THEN rt0.c2 END END FROM t1, rt0, t0 GROUP BY ((rt0.c0)LIKE(((rt0.c2)%(t0.c48)))); -- 0ms;
SELECT DISTINCT (~ (MAX(t0.c48))) FROM rt0, t1, t0 WHERE ((json_type(NULL) IN ())); -- 0ms;
SELECT ALL (((x'' IN ())) IS TRUE), CASE (((0.612678496514806)) NOT BETWEEN ((x'')) AND ((t0.c0)))  WHEN ((t0.c0)<=(t0.c48)) THEN ((rt0.c2)-(rt0.c2)) END, (('-1576298791') IS TRUE) FROM t1, t0 WHERE (IFNULL((-31706123 IN ()), CASE '-1591540993'  WHEN '-1058022330' THEN NULL WHEN 0.847702696393229 THEN x'' WHEN NULL THEN 1.90335572E9 END));SELECT ((COUNT(rt0.c2)) NOT BETWEEN (COALESCE(DISTINCT rt0.c1, t0.c0)) AND (((t0.c48)IS(rt0.c0)))) FROM t1, t0 ORDER BY (t0.c48 COLLATE BINARY IN ())  NULLS LAST, (((0.46003578047786153)) NOT BETWEEN ((t0.c52)) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))  NULLS LAST;SELECT DISTINCT ((((((t0.c52)%(t0.c48)))AND(CASE t0.c0  WHEN t1.c0 THEN t0.c48 ELSE rt0.c2 END)))OR(CASE WHEN t1.c0 THEN rt0.c0 END)) FROM t0 WHERE (((((NULL) BETWEEN (x'') AND (-1.05802233E9))) IS FALSE));SELECT DISTINCT (((+ (t0.c0)))AND(CASE rt0.c0  WHEN '-1058022330' THEN rt0.c0 WHEN t1.c0 THEN 0.3559996561160341 WHEN x'a8a9' THEN x'' END)) FROM t1, rt0, t0; -- 0ms;
SELECT ALL ((((t0.c0)>>(rt0.c2)))IS NOT(((t0.c48)|(t0.c0)))) FROM t1, rt0 WHERE (LIKE((('b㦱')||(NULL)), (('#zG')%(x'')))) GROUP BY ((rt0.c0)==(t0.c52)) COLLATE RTRIM;SELECT DISTINCT ((((rt0.c0))=((t0.c52))) IN ()) FROM rt0, t0; -- 0ms;
SELECT ALL json_array_length(CAST(t0.c48 AS NUMERIC)) FROM t1 WHERE (HEX(((NULL)|(0X61729578))));SELECT DISTINCT t0.c48, UPPER(DISTINCT (rt0.c0 IN ())), ((t0.c52) NOTNULL) FROM rt0, t1 NOT INDEXED WHERE (((('-97543055' IN ()))LIKE(((((NULL)OR(0.5162528154325496)))OR(x'')))));SELECT DISTINCT (((rt0.c0 IN ()))>=((('8A,顴,s_A1') NOT BETWEEN (rt0.c0) AND (t0.c48)))) FROM rt0, t1, t0 LIMIT 1412728354 OFFSET 948080580; -- 0ms;
SELECT DISTINCT NULL COLLATE RTRIM, ((((((rt0.c0)OR(t0.c52)))OR(t0.c0))) BETWEEN ((- (rt0.c1))) AND (CASE WHEN t1.c0 THEN t1.c0 END)), (NOT ((- (t1.c0)))) FROM rt0, t0, t1 WHERE ('shvwH.{') GROUP BY CAST((rt0.c2 IN ()) AS INTEGER) LIMIT -1420432479; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN t0.c48 THEN t0.c0 WHEN t0.c48 THEN rt0.c1 END)<>((t0.c52 IN ()))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((((t0.c48)AND(rt0.c2)))AND(NULL))), 0.8088981833951251, UNLIKELY(DISTINCT ((rt0.c2) IS TRUE)) FROM rt0, t1, t0; -- 0ms;
SELECT ALL CASE LIKELY(t0.c48)  WHEN ((0x1cd29ece)AND(t0.c52)) THEN (((t0.c48)) BETWEEN ((t1.c0)) AND ((rt0.c0))) ELSE (+ (t1.c0)) END FROM rt0, t1 WHERE ((((NULL)) NOT BETWEEN ((((((((((5.52364003E8)OR('jMf')))AND(0.027211036579046)))OR(NULL)))AND('2059347280')))) AND ((CASE x'105a'  WHEN 0.750847384009895 THEN 'V\n.' END))));SELECT ALL (((('' IN (rt0.c0, rt0.c1))))<((CAST(t1.c0 AS INTEGER)))) FROM t1, t0 WHERE (CASE CASE -31706123  WHEN 0.5315878484559606 THEN NULL END  WHEN x'' COLLATE BINARY THEN ((0.5289823051859797) BETWEEN (x'') AND (x'')) END) GROUP BY (((((rt0.c0) NOTNULL)))<((((((t1.c0)OR(t0.c48)))OR(t0.c48)))));SELECT ((t1.c0 COLLATE NOCASE) BETWEEN (((((rt0.c0)AND(t1.c0)))AND(t0.c0))) AND ((~ (t0.c48)))) FROM t1, rt0, t0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM t1 NOT INDEXED, rt0 WHERE ((((((((((((0x1d070999)AND('0.13519157359205058')))OR(NULL)))OR(x'')))AND(x'ff84')), (- (NULL)), x'' COLLATE RTRIM))<((NULL COLLATE NOCASE, x'' COLLATE RTRIM, (((0.6181110582657111)) BETWEEN (('Z<')) AND ((NULL))))))); -- 0ms;
SELECT DISTINCT ((((((((CAST(t0.c0 AS REAL))OR('290364070')))OR(((('now')) NOT BETWEEN ((t0.c48)) AND ((t0.c0))))))AND((((t0.c0))<((t0.c48))))))OR((((t1.c0, t0.c52, t0.c52)) NOT BETWEEN ((t0.c0, rt0.c1, rt0.c0)) AND (('0', t0.c0, rt0.c0))))) FROM rt0, t1 WHERE (((((((x'') BETWEEN ('') AND (NULL)))OR((NULL IN ()))))AND(((NULL) IS FALSE))));SELECT PERCENT_RANK() OVER ( RANGE  CURRENT ROW) FROM t1; -- 0ms;
SELECT DISTINCT (((((t0.c52)<(x''))))>(((((t0.c48))>((t1.c0)))))) FROM t1 WHERE ((((((NULL, '', NULL)) NOT BETWEEN ((NULL, x'9912', '629891396')) AND (('', '-1666450942', 0.651608737794849)))) ISNULL)) LIMIT -31706123 OFFSET -802157232;SELECT ((((rt0.c1)%(rt0.c1)))!=(t0.c52)) FROM t0 LIMIT -138507825 OFFSET -1646461444;SELECT ((((((rt0.c2)AND(rt0.c0)))AND(t0.c48)))=((t0.c0 IN (t0.c52)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((x'03c6') NOT NULL)) BETWEEN ((t0.c48 IN ())) AND ((+ (t1.c0)))) FROM rt0, t1 WHERE (UNICODE(json_patch(x'9f94', '5?#3')));SELECT DISTINCT NULL, (((rt0.c1 IN ())) ISNULL), ((((rt0.c0) NOT BETWEEN (t0.c48) AND (rt0.c0)))<<(((t1.c0) IS FALSE))) FROM t0, rt0;SELECT '877672555' FROM rt0, t0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0, t1, rt0; -- 1ms;
SELECT DISTINCT (~ (t0.c0)) COLLATE RTRIM FROM rt0, t1, t0; -- 0ms;
SELECT DISTINCT ((((t0.c48)&(rt0.c2))) ISNULL), CASE NULL  WHEN (((rt0.c2, t0.c48, 4.83565262E8))!=((t0.c48, rt0.c0, t0.c52))) THEN rt0.c1 END, rt0.c1 FROM t1 WHERE ((((- ('-1174004750')))<(CAST(x'' AS NUMERIC)))) UNION ALL SELECT DISTINCT ((CAST(t1.c0 AS NUMERIC)) BETWEEN (((((((((rt0.c2)OR(t0.c48)))OR(rt0.c0)))AND(t0.c52)))OR(t0.c48))) AND (rt0.c0 COLLATE NOCASE)), (((((rt0.c1))>((rt0.c0)))) NOT BETWEEN (((t1.c0)>>(rt0.c2))) AND (LOWER(t0.c48))), (t0.c48 IN ()) FROM t1, t0, rt0 WHERE ((-1420432479 IN ((NOT ('\nG')))));SELECT DISTINCT CAST((('V\n.')<(t0.c0)) AS INTEGER) FROM t0 NOT INDEXED, rt0, t1 LIMIT 1815892895 OFFSET 1453019782; -- 0ms;
SELECT DISTINCT ((rt0.c2)-(((rt0.c2) IS TRUE))) FROM t0 WHERE (NULL);SELECT DISTINCT ((((NOT (NULL))))<=(((rt0.c0 IN ())))) FROM t0; -- 0ms;
SELECT DISTINCT (((x''))>((((rt0.c2) NOTNULL)))) FROM t1 WHERE ((LIKELY(DISTINCT 1.453019782E9) IN (TYPEOF(DISTINCT NULL))));SELECT DISTINCT '' FROM t0 WHERE (CAST((x'' IN ()) AS BLOB)) ORDER BY 0.2928096858868089 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c1) IS FALSE)) NOT BETWEEN (COUNT(t0.c0)) AND (CAST(t0.c48 AS TEXT))) FROM t1 WHERE ((((0xffffffffa12302ff)) BETWEEN ((((NULL)>(0.8200328630110416)))) AND ((LIKELIHOOD(x'', 0.4555045395386791))))) ORDER BY (~ (((x'5d03')||(t1.c0)))) DESC  NULLS LAST;SELECT ((((0.879440106061464)OR(t0.c0)))AND((((rt0.c1, rt0.c0, 0Xffffffff87a55238)) NOT BETWEEN ((rt0.c2, t0.c52, t0.c52)) AND ((rt0.c1, rt0.c1, rt0.c1))))) FROM t1, t0, rt0 WHERE ((((((('yQKF4*tc')>=(x'')))OR((((0.8513711972933771)) NOT BETWEEN (('101827889')) AND ((NULL))))))OR(x'' COLLATE RTRIM))); -- 0ms;
SELECT ((CASE x'3c7c'  WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN 'I逼i' THEN t0.c0 END) BETWEEN (((t0.c48) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END)) FROM t1 WHERE (x'b57b') ORDER BY ((CASE WHEN t0.c52 THEN t0.c48 WHEN 'mRFW*n' THEN t1.c0 WHEN t0.c0 THEN NULL WHEN t0.c48 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 END)<<((((rt0.c2, t0.c0, rt0.c0)) BETWEEN ((rt0.c0, t0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, t0.c48))))) DESC;SELECT (+ (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) FROM t0, t1 WHERE (CAST(((-76738528) ISNULL) AS NUMERIC));SELECT DISTINCT ((0.044138926522667266)<>(((t0.c52) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FROM t0, t1, rt0 WHERE ((+ ((('-31706123')IS NOT(792592155))))); -- 0ms;
SELECT rt0.c0 FROM t0, rt0; -- 0ms;
SELECT (4.83565262E8 IN ()) COLLATE NOCASE FROM t0 WHERE ((((0.5037629255833213, -138507825, 1791153645)) BETWEEN ((CASE 0x51b4a270  WHEN 0.8604763866860718 THEN x'5ac1' WHEN NULL THEN 0X73285a08 WHEN 0.13331819120385635 THEN NULL WHEN '' THEN '|C' WHEN 0.8200328630110416 THEN 'U}2w' ELSE '' END, (('') BETWEEN ('1613775516') AND (NULL)), ('TuiFe䍱Q' IN ()))) AND ((CASE 737567012  WHEN '' THEN x'' END, CASE x''  WHEN NULL THEN 'ৃ%KG4]S' ELSE '\nl/O/' END, ((x'1a37e0bb') BETWEEN (0.4051672170998676) AND ('漏雙B?')))))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c52))) OVER (), (((t1.c0)) NOT BETWEEN ((((((t1.c0)AND(rt0.c0)))AND(t0.c48)))) AND ((((rt0.c2) NOT NULL)))), UPPER(NULL) FROM t0, rt0 WHERE (CASE WHEN x'' COLLATE NOCASE THEN (('2027958394') NOT BETWEEN (0.03919793358234058) AND (x'')) ELSE 'O3N' COLLATE NOCASE END);SELECT (((SUM(t0.c0), (((rt0.c0))>=((t0.c48))), t1.c0))=((((t1.c0)AND(t0.c52)), MAX(rt0.c1), AVG(t1.c0)))) FROM t0 WHERE (CASE (((0Xffffffffb48c2c39))>=((0.15318127453874064)))  WHEN '+i柣m^e' COLLATE RTRIM THEN (- ('WSC_ 9')) END) ORDER BY CAST(CASE t0.c0  WHEN t0.c52 THEN rt0.c0 END AS INTEGER)  NULLS FIRST, (~ ((+ (rt0.c0))))  NULLS FIRST;SELECT DISTINCT 0.612678496514806 FROM t0, rt0 WHERE (((((NULL) IS FALSE)) NOT NULL)); -- 0ms;
SELECT COUNT(CAST(t0.c52 AS BLOB)) OVER () FROM t1;SELECT ALL AVG((((t0.c48))>=((rt0.c1)))) FROM t0 NOT INDEXED, rt0; -- 0ms;
SELECT CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN t0.c52 END THEN t0.c48 ELSE CAST(rt0.c2 AS NUMERIC) END FROM t0, t1, rt0 WHERE ((((((('-326265959') IS FALSE))OR((('')+(1304218261)))))AND(CASE 0.1920895504137482  WHEN x'' THEN NULL END))) ORDER BY CASE ((((rt0.c0)AND(t1.c0)))AND(t0.c52))  WHEN CASE WHEN t0.c52 THEN t1.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END THEN ((((rt0.c1)OR(t0.c52)))AND(t0.c0)) WHEN (t0.c52 IN (x'bd28f383', rt0.c0)) THEN (t1.c0 IN ()) WHEN t1.c0 COLLATE RTRIM THEN ((t1.c0)<=(t0.c52)) ELSE ((t0.c52) BETWEEN (t0.c52) AND (t0.c52)) END DESC; -- 0ms;
SELECT ALL x'df8b' COLLATE NOCASE FROM rt0, t1; -- 0ms;
SELECT CAST(t0.c52 AS BLOB) FROM t1 WHERE (((CAST('*\r|gDe' AS BLOB)) ISNULL)) GROUP BY (((t1.c0)) BETWEEN ((CAST(t0.c48 AS REAL))) AND ((CAST(rt0.c0 AS TEXT))));SELECT DISTINCT (((t0.c0)) BETWEEN ((x'')) AND ((((x'') IS FALSE)))), (((((((rt0.c0, rt0.c1, rt0.c1, rt0.c2, t1.c0))>((rt0.c0, t0.c0, rt0.c0, t0.c48, t0.c0))))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(t1.c0)))OR(t1.c0)))))OR(CAST(t0.c0 AS INTEGER))), ((rt0.c0)OR(((t0.c52)<<(t1.c0)))) FROM t0, rt0, t1 GROUP BY (((+ (t0.c52)))||(CAST(0.13389210178447852 AS REAL))); -- 2ms;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN 0Xffffffffd02ac6d4 THEN ('My,)EI' IN (0.879440106061464)) END); -- 0ms;
SELECT DISTINCT (((+ (t1.c0)))IS(x'' COLLATE BINARY)) FROM rt0, t1 WHERE ((((((x'' IN ()))OR((877672555 IN ()))))OR('-2102642771' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (NOT (LOWER(DISTINCT t0.c52))) FROM t0 WHERE (CASE WHEN (((NULL)) NOT BETWEEN ((-3.28320591E8)) AND ((0.879440106061464))) THEN ((0.8832858851140344) IS FALSE) END); -- 0ms;
SELECT DISTINCT (- (rt0.c0)), t0.c52, 0x143b384e COLLATE RTRIM FROM t0 LIMIT 547429157 OFFSET -818418206;SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c1 AS NUMERIC)) FROM t0, rt0 WHERE ((((0xffffffffd81d73c3) NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT CAST((((t0.c0))>((t0.c0))) AS INTEGER), '-1554336938', ((t0.c52 COLLATE BINARY) BETWEEN (CASE t1.c0  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c48 WHEN t1.c0 THEN t0.c52 END) AND (rt0.c0)) FROM rt0, t1, t0; -- 0ms;
SELECT ALL (NOT (x'')) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((AVG(rt0.c2))) AND ((NULLIF(DISTINCT t0.c48, t0.c0)))) FROM rt0 WHERE (((((DATETIME('2x2', '2126563689', NULL))OR(((0.612678496514806) IS TRUE))))OR(('-1589808896' IN ()))));SELECT DISTINCT ((RTRIM(rt0.c1)) NOTNULL) FROM t1 WHERE (CAST(((x'')!=(x'')) AS INTEGER)) ORDER BY ((CAST(NULL AS NUMERIC)) ISNULL), (((t1.c0) NOTNULL) IN ()) ASC, CASE WHEN t0.c52 COLLATE NOCASE THEN ((t0.c52) BETWEEN (t1.c0) AND (rt0.c2)) ELSE ((rt0.c0)AND(rt0.c0)) END;SELECT ALL 0Xfffffffffc96d223 COLLATE RTRIM FROM rt0, t1; -- 0ms;
SELECT ALL (((((rt0.c0, t0.c0, t0.c52))==((t0.c52, t0.c48, rt0.c0)))) NOTNULL) FROM rt0, t1, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)GLOB(t1.c0))) NOTNULL) FROM rt0, t1, t0; -- 0ms;
SELECT ALL ((rt0.c1) BETWEEN ((((t0.c52, rt0.c2, rt0.c0)) BETWEEN ((t1.c0, rt0.c0, t0.c52)) AND ((t1.c0, rt0.c1, t0.c52)))) AND (t0.c0)), ((CAST('2C쌭r2O' AS INTEGER))<(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN t0.c52 THEN t1.c0 WHEN rt0.c2 THEN x'' WHEN t1.c0 THEN t0.c48 WHEN t0.c48 THEN t0.c52 WHEN rt0.c2 THEN t1.c0 WHEN 0X7ec0c969 THEN 'KrOqT' END)), x'' COLLATE NOCASE FROM t0;SELECT DISTINCT SUM((((t0.c48))==((rt0.c0)))) FROM rt0, t0 WHERE (CASE ((((NULL)AND('kab7uᡨ8')))AND('0'))  WHEN ((('0.45611640843917134', x'', 0.5731056851880969)) BETWEEN ((x'ca3d', x'', 0.02734875251716673)) AND ((NULL, NULL, 0.3222979763820317))) THEN ((0X2daed884)/(NULL)) END) GROUP BY (((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(t1.c0)))AND(t0.c52)), CAST(t1.c0 AS TEXT), t0.c0))<((t0.c0 COLLATE BINARY, CASE WHEN NULL THEN t0.c0 ELSE rt0.c1 END, t0.c48))) HAVING (((rt0.c1 IN (t0.c52, t1.c0)))+(LOWER(rt0.c2)));SELECT DISTINCT ((((t0.c52)*(t0.c48))) IS FALSE) FROM rt0 WHERE ((CAST(x'' AS INTEGER) IN ())) GROUP BY CASE WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY;SELECT (((('547429157') IS FALSE))||(((rt0.c2)+(t0.c52)))) FROM t0 LIMIT 2074909749;SELECT DISTINCT ((((rt0.c2) IS FALSE))>=(rt0.c0 COLLATE BINARY)) FROM t0 WHERE (((((((((((('205028643'))==((x''))))OR(CAST(0.016334070612860185 AS INTEGER))))AND((~ ('-1148050058')))))AND(CASE WHEN 0x764869fd THEN '-1945891988' ELSE 0.04415554901542973 END)))AND((((x'48e41c79', '', x'', x'', 0.9385696437213756)) BETWEEN ((0x681d1868, NULL, x'a182', NULL, '629891396')) AND ((NULL, -97543055, NULL, '2027958394', x''))))));SELECT ALL COUNT(*) OVER () FROM t1, rt0 WHERE (CAST('-zU' COLLATE RTRIM AS NUMERIC)); -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM FROM t1, t0 GROUP BY (((rt0.c0 IN ()))>>(((t0.c52)==(t1.c0)))), CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS NUMERIC), (((t0.c52 IN ()))LIKE(NULL)), ((((((((CAST(t0.c52 AS NUMERIC))AND((((t0.c0))>=((t0.c0))))))AND(rt0.c0 COLLATE RTRIM)))OR(CASE WHEN rt0.c2 THEN t0.c52 WHEN t0.c48 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 END)))OR(CAST(t1.c0 AS TEXT))), ((t1.c0 COLLATE RTRIM)GLOB(CAST('' AS NUMERIC))) HAVING ((SQLITE_COMPILEOPTION_USED(NULL))*((t1.c0 IN ())));SELECT DISTINCT CASE ((rt0.c2)LIKE(rt0.c2))  WHEN ((t0.c0) NOT BETWEEN ('WSC_ 9') AND (t0.c0)) THEN CAST(t0.c52 AS TEXT) WHEN CAST(0Xffffffffa13d7100 AS REAL) THEN t1.c0 COLLATE NOCASE WHEN ((t0.c52) BETWEEN (rt0.c2) AND (t0.c0)) THEN t0.c52 ELSE ((t1.c0)<(t1.c0)) END, (+ (-1945891988)), ((x'e84f')>(((rt0.c0)|(t0.c0)))), (- (((((rt0.c2)AND(t0.c52)))AND(rt0.c0)))), CASE rt0.c0  WHEN ((t0.c48)>=(rt0.c2)) THEN ((((t0.c48)OR(t1.c0)))OR(rt0.c0)) END FROM rt0, t1, t0; -- 1ms;
SELECT DISTINCT (((((((((((t0.c0)) NOT BETWEEN ((t0.c48)) AND ((rt0.c1))))AND(x'c5ca')))AND((NOT (t0.c52)))))AND(((rt0.c2)!=(rt0.c0)))))OR(MAX(rt0.c1))) FROM t0 WHERE (CAST((((((((('')AND('792592155')))OR(x'')))OR('792592155')))OR(NULL)) AS TEXT));SELECT DISTINCT 0X0 FROM t0, t1, rt0 WHERE (((((x'c015')OR(-1.646461444E9)))*(((x'')IS(x''))))); -- 0ms;
SELECT ALL ((rt0.c0)>=(((x'') NOTNULL))) FROM t0 WHERE (TYPEOF((('雙㲭') NOT BETWEEN ('o]') AND ('teꑕWldp'))));SELECT DISTINCT (((t1.c0 IN (rt0.c1))) BETWEEN (rt0.c2) AND (COALESCE(t0.c52, t0.c0))) FROM t1, t0 WHERE (NULL) GROUP BY (((t0.c48 IN (rt0.c1)))<>(((((t0.c0)OR(t0.c0)))OR(0x695d94d6)))) HAVING (((t0.c0)) BETWEEN ((SUM(t0.c48))) AND ((x'1d63a3c6')));SELECT CUME_DIST() OVER (), (((NULL IN ()))%(t0.c0)), NTILE(((rt0.c1 COLLATE NOCASE)LIKE(((t1.c0)&(rt0.c2))))) OVER () FROM t1, rt0, t0 GROUP BY CAST(((rt0.c1)&(rt0.c2)) AS BLOB);SELECT DISTINCT PERCENT_RANK() OVER () FROM t1; -- 0ms;
SELECT ALL (- (((((t0.c52)OR(t1.c0)))AND(rt0.c1)))) FROM t1 WHERE ((~ (0.6575173811043246)));SELECT ALL (t1.c0 IN (CASE rt0.c0  WHEN t0.c52 THEN t1.c0 END, t0.c48)) FROM rt0, t1;SELECT CASE WHEN ((rt0.c2)OR(t1.c0)) THEN NULL ELSE ((x'')GLOB(rt0.c0)) END FROM t1 WHERE ((((DATE(1462562790, x'', NULL), (NOT ('1074459426')), CAST('-696019038' AS TEXT)))>=((((-1637190953)GLOB(x'6a51')), (('TuiFe䍱Q') ISNULL), LIKELY(NULL)))));SELECT LAST_VALUE((((t1.c0)) NOT BETWEEN ((((t1.c0) IS TRUE))) AND (((((t1.c0, t1.c0, t1.c0))<=((t1.c0, t1.c0, t1.c0))))))) OVER ( ORDER BY (+ (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST) FROM t1 WHERE (CASE x'e3dc'  WHEN 1214697174 THEN '' ELSE '0.03919793358234058' END COLLATE RTRIM COLLATE BINARY);SELECT DISTINCT (((rt0.c0)IS NOT(rt0.c2)) IN ((t0.c0 IN ()))) FROM rt0; -- 0ms;
SELECT ((t0.c52) NOTNULL) FROM rt0 WHERE (((((((x'')AND(-118410579)))AND(x''))) NOT BETWEEN (CAST(0x5c407c8 AS BLOB)) AND (((x'')+(0.4844514342176135))))) GROUP BY t0.c48, CASE WHEN ((t0.c48) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (('i') BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((t0.c0) IS FALSE) THEN ((rt0.c1) BETWEEN (t0.c48) AND (t0.c0)) WHEN CAST(t1.c0 AS NUMERIC) THEN ((t0.c48)LIKE(t1.c0)) WHEN JULIANDAY(t0.c52, t0.c52, rt0.c0) THEN (((t1.c0, t0.c52, 260343309))>((t0.c48, t0.c0, t0.c0))) WHEN ((rt0.c1)GLOB(t0.c52)) THEN CAST(rt0.c2 AS REAL) END, ((CAST(x'3a15' AS TEXT))||(CASE WHEN rt0.c0 THEN t1.c0 ELSE rt0.c2 END));SELECT DISTINCT CASE (- (t0.c0))  WHEN ((t0.c52)LIKE(t0.c48)) THEN CAST(rt0.c2 AS BLOB) ELSE ((((((((t1.c0)OR(t0.c0)))AND(0.4194008093781386)))AND(rt0.c0)))AND(rt0.c1)) END FROM t0, t1, rt0 WHERE (((('1214697174', x'', '#ZE', '|C', x'6334')) NOT BETWEEN ((((NULL) NOTNULL), SQLITE_COMPILEOPTION_USED(0.21135874650269115), NULL, ('-242106863' IN ()), CASE WHEN -2113694875 THEN NULL ELSE '' END)) AND (((('') BETWEEN (0.6083643367162244) AND ('')), x'8d63b61d' COLLATE NOCASE, HEX(DISTINCT x'75c2'), ((((((((NULL)OR(0.94500640805433)))AND(NULL)))AND(NULL)))OR(NULL)), ((NULL)IS NOT(0.8629139615505128)))))); -- 1ms;
SELECT ALL ((CAST(rt0.c0 AS TEXT))<(rt0.c0 COLLATE NOCASE)) FROM rt0, t0 WHERE (LIKELIHOOD(DISTINCT ((x'') IS FALSE), 0.4887841285020129)); -- 0ms;
SELECT DISTINCT CAST((((508061586))!=((rt0.c2))) AS TEXT) FROM rt0; -- 0ms;
SELECT CASE WHEN ((t0.c48) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE t1.c0 END WHEN (((t1.c0))!=((t1.c0))) THEN COUNT(*) WHEN NULL THEN ((rt0.c1)/(t0.c52)) ELSE rt0.c1 END FROM t1, rt0 WHERE ((((((((0.6158652600669579)) NOT BETWEEN ((1.76774063E9)) AND ((-0.0))))AND((~ ('-1637190953')))))OR(LOWER(-1.17400475E9))));SELECT DISTINCT LOWER(((t0.c0)GLOB(t0.c48))) FROM t1 WHERE (((((-662705549) NOTNULL))|((((NULL)) BETWEEN ((NULL)) AND ((x'b49f'))))));SELECT DISTINCT ((((rt0.c0)OR(t1.c0)))AND(t0.c52)) COLLATE NOCASE FROM rt0, t1;SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c48)) IN ()) FROM t0, t1, rt0 WHERE (((NULL COLLATE RTRIM)|(((('<p(}ﱥN*p')) NOT BETWEEN ((x'')) AND ((x'')))))); -- 0ms;
SELECT ((rt0.c0) IS TRUE) COLLATE BINARY FROM rt0, t0, t1; -- 0ms;
SELECT (((((('-1570847571') NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (NULL) AND (358055895)))))OR(NULL)), GROUP_CONCAT(t1.c0), (NOT (CASE x''  WHEN t0.c52 THEN rt0.c2 END)), ((CASE t0.c52  WHEN t1.c0 THEN x'' END)OR(LIKELY(rt0.c0))), (+ ((t0.c48 IN ()))) FROM t1;SELECT (((('-614852780')OR(t0.c0)))OR(ABS(rt0.c2))) FROM rt0, t1 WHERE (((((x'')-(NULL)))=((- ('-2113694875')))));SELECT ALL ((t0.c48)||(t0.c0)) COLLATE BINARY FROM rt0, t0 WHERE ((((0.1286307003288406, (((NULL)) BETWEEN (('')) AND ((x''))), (('Gai!q4SXH') BETWEEN (0Xffffffffc1dbc98a) AND (0xb0c9d7e))))==(((('0.1286307003288406')!=(NULL)), ((x'') NOTNULL), (((NULL))>(('-641155670'))))))) ORDER BY rt0.c2  NULLS FIRST, SUBSTR(((t1.c0)LIKE(rt0.c0)), ((((t0.c0)AND(rt0.c0)))AND(rt0.c0)))  NULLS FIRST LIMIT 1414943376;SELECT DISTINCT TRIM(DISTINCT ((t1.c0)LIKE(t0.c48))) FROM t1, rt0, t0 WHERE ((((('*Q') IS FALSE))>((('483565262') NOTNULL)))) GROUP BY (((t0.c48, t0.c48, t1.c0)) NOT BETWEEN ((HEX(DISTINCT t0.c52), (- (t0.c48)), x'')) AND (((((rt0.c0)) BETWEEN ((t0.c48)) AND ((rt0.c1))), ((rt0.c1) BETWEEN (rt0.c1) AND (x'')), (+ (rt0.c1))))) HAVING ((((((((t0.c0)AND(rt0.c2)))OR(t0.c48)))OR((((t0.c48))>=((t0.c52))))))OR((0.42164828798899134 IN (-5.7224669E7)))) ORDER BY ((((rt0.c0)) NOT BETWEEN ((-1.265882055E9)) AND ((rt0.c0))) IN ()) LIMIT -1681555714 OFFSET -1423752584; -- 4ms;
SELECT COUNT(MIN(x'5096')) COLLATE BINARY FROM rt0, t1;SELECT CAST(MIN(t1.c0) AS TEXT) FROM t0, t1 WHERE (CASE WHEN ((((0X5b4be78)AND(0.17802887334250594)))AND(0.5075734928965449)) THEN NULL COLLATE BINARY WHEN (('i촽.05Nn') NOT BETWEEN (NULL) AND (NULL)) THEN ((((((((NULL)AND(NULL)))AND('949946057')))AND('389786941')))AND(-1281354901)) WHEN CASE 'L|v䈹AA'  WHEN NULL THEN 0.832026605460257 END THEN CASE NULL  WHEN x'' THEN 0X39b57c END ELSE TRIM(DISTINCT '') END); -- 0ms;
SELECT ((((t0.c0) NOTNULL)) ISNULL) FROM t1 WHERE (((('d', x'', x'94a3')) NOT BETWEEN ((MIN('-1473113117', '-1637190953', 'ﳲmೆ', x'20ee'), ((NULL) BETWEEN ('HQ') AND ('')), (('') NOT BETWEEN (0xffffffff8718e900) AND (x'')))) AND ((((0.7914208203953722)|('948080580')), (- (NULL)), CASE 0.251338549968221  WHEN '5?#3' THEN 0.22515255507233534 END)))) GROUP BY (x'' IN ());SELECT ALL LOWER(CAST(rt0.c1 AS BLOB)) FROM t1 WHERE ((((-1.7976931348623157E308))<((x'4ed3'))) COLLATE BINARY) GROUP BY ((((0.33771463509122746)OR(((t1.c0) ISNULL))))AND((((rt0.c1))>=((rt0.c1))))), (((t1.c0, rt0.c1, rt0.c1, t0.c52, NULL)) NOT BETWEEN ((((((t1.c0)AND(rt0.c0)))AND(rt0.c0)), (((rt0.c2, t0.c48, rt0.c1, rt0.c0, '.&Bz>'))>((rt0.c2, rt0.c2, t0.c52, t0.c0, t0.c48))), t0.c52 COLLATE NOCASE, 1380737405, ((t0.c48)<(t1.c0)))) AND ((((rt0.c2)|(t0.c48)), CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c52 THEN 0.09204745914126267 WHEN t0.c0 THEN rt0.c1 WHEN t0.c48 THEN t0.c0 WHEN rt0.c2 THEN t0.c52 END, ((((t0.c52)OR('7hD{Gu')))AND(t0.c48)), ((rt0.c2)%(t1.c0)), (rt0.c2 IN ())))), ((NULL COLLATE BINARY)IS(ABS(rt0.c0))) HAVING CASE ((rt0.c0) NOTNULL)  WHEN ((-1.652054955E9)!=(rt0.c0)) THEN ((rt0.c2) ISNULL) END LIMIT 1465080944;SELECT (((rt0.c1, x'b5b9', t0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN t1.c0 THEN rt0.c0 ELSE t1.c0 END, t0.c48 COLLATE BINARY, (((t0.c52)) NOT BETWEEN ((rt0.c1)) AND ((t0.c52))))) AND ((CASE WHEN rt0.c1 THEN t0.c0 END, NULL, AVG(rt0.c2)))), (-6.1485278E8 IN (t1.c0)) COLLATE RTRIM, t0.c48 FROM rt0, t0, t1 GROUP BY t1.c0 HAVING ((((t0.c48) NOT BETWEEN (t0.c52) AND (t0.c48)))>(((rt0.c0)GLOB(rt0.c2)))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) NOTNULL) AS TEXT), '-2019208648', ((((t0.c0)OR((- (t0.c52)))))OR(CAST(rt0.c0 AS BLOB))) FROM t0;SELECT DISTINCT ((((rt0.c2) BETWEEN (x'') AND ('')))>>((((t0.c52))<=((rt0.c1))))), (NOT (((rt0.c0)%(rt0.c1)))), 0.8198156521372573 FROM rt0, t0; -- 0ms;
SELECT LOWER(CASE t0.c0  WHEN t0.c48 THEN rt0.c1 END) FROM t1, rt0, t0 WHERE ((NOT ((0.6414223831322382 IN (NULL))))); -- 0ms;
SELECT DISTINCT ((t1.c0)|((~ (rt0.c0)))) FROM rt0, t0 WHERE (((((0Xffffffff948f390a, x'', '	p')) NOT BETWEEN ((NULL, '', NULL)) AND ((0.4830520547391852, NULL, -2113694875))) IN ((~ ('fd')))));SELECT (((t1.c0)) NOT BETWEEN (((t0.c48 IN ()))) AND ((highlight(t0.c0, t0.c0, rt0.c2, t1.c0)))) FROM t0, rt0;SELECT DISTINCT COALESCE(CAST(t1.c0 AS BLOB), MIN(t1.c0)) FROM t0 LIMIT 1304503279 OFFSET -441034931;SELECT DISTINCT ((((x'bf2c') ISNULL)) BETWEEN ((rt0.c0 IN ())) AND (TOTAL(t1.c0))) FROM rt0, t1; -- 1ms;
SELECT ALL ABS(COUNT(*)), ((t1.c0) NOTNULL), ((((rt0.c0)OR(t0.c52)))AND(rt0.c1)) COLLATE NOCASE FROM t1 LIMIT -1292837209;SELECT DISTINCT CASE WHEN rt0.c2 COLLATE BINARY THEN (((t0.c52, t0.c0, t0.c48)) NOT BETWEEN ((t0.c48, t0.c0, t0.c48)) AND ((t0.c0, t1.c0, rt0.c1))) ELSE (('6Y')IS(t0.c48)) END, ((t0.c48) BETWEEN (((t0.c0) ISNULL)) AND ((NOT (t1.c0)))), (((rt0.c0)) BETWEEN ((SUM(t0.c48))) AND ((((((rt0.c0)AND(t0.c48)))AND(rt0.c2))))) FROM t0, t1;SELECT ((((rt0.c0)=(t0.c52))) BETWEEN (HEX(t0.c0)) AND ((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((t0.c48, t0.c48, rt0.c2)) AND ((t0.c48, t0.c52, rt0.c0))))) FROM rt0, t1, t0 WHERE ((NOT ((((NULL)) NOT BETWEEN ((-1893516310)) AND (('40515731')))))) ORDER BY (NOT ((- (t0.c0)))) LIMIT -1173091901 OFFSET -126584076; -- 0ms;
SELECT ALL COUNT((t0.c0 IN (rt0.c2))) COLLATE RTRIM FROM t0, rt0 WHERE ((('1786946104' COLLATE RTRIM) IS TRUE)); -- 0ms;
SELECT ALL COUNT(x'') OVER () FROM t0, t1; -- 0ms;
SELECT ((((CASE rt0.c0  WHEN t0.c0 THEN t0.c48 END)OR(((t1.c0)!=(x'')))))OR(t0.c0 COLLATE NOCASE)), CAST(t0.c48 COLLATE NOCASE AS NUMERIC), (~ ((rt0.c2 IN ()))) FROM t0 WHERE (ABS(DISTINCT CAST(-1.04256063E9 AS TEXT)));SELECT DISTINCT HEX(rt0.c2) COLLATE BINARY FROM t1 WHERE (((((NULL)<=('5?#3')))/((((x''))<=((''))))));SELECT ALL SUBSTR(CAST(t0.c48 AS TEXT), x'9c38'), TOTAL((((t0.c48)) BETWEEN ((rt0.c1)) AND ((t1.c0)))) OVER (), LAST_VALUE(t1.c0) OVER ( ROWS t0.c48 COLLATE BINARY COLLATE BINARY PRECEDING EXCLUDE GROUP) FROM t0, rt0, t1 WHERE (CASE WHEN CAST(x'82db' AS NUMERIC) THEN (('0.612678496514806') NOTNULL) END); -- 0ms;
SELECT DISTINCT (CASE t0.c48  WHEN t0.c0 THEN rt0.c2 ELSE t1.c0 END IN ()) FROM t1; -- 0ms;
SELECT DISTINCT ((t0.c52) NOTNULL) COLLATE BINARY, ((((t1.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c48))) IN ((~ (t0.c48)), ((t0.c48)/(t0.c52)))), (+ (TRIM(t0.c0))) FROM t1 NOT INDEXED, t0 WHERE (CAST('(e' AS BLOB));SELECT DISTINCT ((((t1.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))%(((t0.c52) NOT BETWEEN (rt0.c0) AND (t0.c52)))), ((json_extract(rt0.c1, t1.c0)) ISNULL), (- (MIN(rt0.c0, rt0.c0, rt0.c0, t0.c0))), ((0.649464870543914)||('629891396')) COLLATE RTRIM, ((((x'9c5a')AND((((t1.c0)) BETWEEN ((t0.c52)) AND ((NULL))))))OR(TYPEOF(DISTINCT rt0.c0))) FROM rt0 WHERE (CAST(((x'')-(NULL)) AS BLOB)) LIMIT 1746737256;SELECT DISTINCT CASE WHEN CAST(-1195584295 AS REAL) THEN CAST(rt0.c2 AS INTEGER) END FROM t1;SELECT DISTINCT x'' FROM t1, t0 WHERE ((UPPER(-1250299485) IN ())); -- 0ms;
SELECT ABS(DISTINCT CASE t0.c48  WHEN t1.c0 THEN t0.c48 ELSE rt0.c0 END), (((CASE WHEN t0.c52 THEN rt0.c1 END))<((((-1.281354901E9) BETWEEN (t0.c0) AND (t0.c48))))), CUME_DIST() OVER () FROM t0, t1, rt0 WHERE ((((('96733128')-(0.5142536539883062)))||(((x'')LIKE(''))))) LIMIT 1432195136; -- 1ms;
SELECT DISTINCT (((~ (rt0.c0))) IS FALSE), (((t0.c0)) NOT BETWEEN ((((((t0.c52)OR(rt0.c1)))OR(rt0.c1)))) AND (((- (t1.c0))))), ((((rt0.c1) IS TRUE)) NOT BETWEEN (x'608f') AND (LIKELY('\nl/O/'))) FROM t1, rt0, t0 WHERE ((+ (CAST(0.7299423887086086 AS BLOB)))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1; -- 0ms;
SELECT (- (CAST(t1.c0 AS BLOB))) FROM t1; -- 0ms;
SELECT DISTINCT CAST(IFNULL(DISTINCT rt0.c0, '0.04103675289255282') AS NUMERIC) FROM rt0, t0; -- 1ms;
SELECT ALL ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))=((t0.c48))), CAST(t0.c48 COLLATE NOCASE AS REAL), COUNT(((rt0.c0) BETWEEN (t0.c48) AND (rt0.c0)) COLLATE BINARY) FROM t1, t0;SELECT DISTINCT NULL, ((rt0.c0)/(rt0.c0)) COLLATE NOCASE, CAST(LOWER(DISTINCT rt0.c0) AS REAL) FROM rt0, t1; -- 0ms;
SELECT ALL (~ (((((t0.c48)AND(t0.c48)))AND(rt0.c2)))) FROM rt0, t1, t0; -- 0ms;
SELECT (- (TRIM(rt0.c2))) FROM rt0 LIMIT -1093969737 OFFSET 260343309; -- 1ms;
SELECT DISTINCT (((CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE t0.c48 END))>((((t0.c0)<(rt0.c0))))) FROM rt0 ORDER BY ((((CAST(rt0.c2 AS NUMERIC))AND(((rt0.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(((rt0.c1)>(t0.c48)))) ASC;SELECT ALL (rt0.c1 COLLATE NOCASE IN ()) FROM t0, t1; -- 0ms;
SELECT DISTINCT (- ((+ (t0.c0)))) FROM rt0, t0, t1 WHERE (CAST(((((((((-1384693235)OR(-3.21417156E8)))AND(0.7193133850175365)))OR(0X886539f)))OR(0.9912586655683734)) AS INTEGER)); -- 0ms;
SELECT DISTINCT (~ ((((t1.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))))), t0.c52, SUM(t1.c0) FROM t0 WHERE (ROUND(CASE x''  WHEN '0.5142536539883062' THEN x'0c90' WHEN NULL THEN 0Xffffffffc30d23d0 WHEN 0.5665617767555307 THEN x'' ELSE 'FALSE' END, NULL));SELECT DISTINCT ((rt0.c2)+(CASE WHEN t0.c0 THEN t0.c48 WHEN t1.c0 THEN t1.c0 WHEN rt0.c2 THEN t0.c52 ELSE t1.c0 END)) FROM rt0 WHERE (((CAST('1791153645' AS REAL))*(((((x'')AND('0.6414223831322382')))OR(0.7199153749360161))))) LIMIT 1381453191 OFFSET -1666450942;SELECT DISTINCT (NOT (((rt0.c0)AND(t0.c52)))) FROM t0, rt0; -- 1ms;
SELECT DISTINCT (rt0.c2 COLLATE BINARY IN (((((t1.c0)AND(rt0.c0)))AND(rt0.c2)))), AVG((((rt0.c0))<=((t0.c48)))) OVER (), (NOT ((+ (rt0.c2)))) FROM t1;SELECT DISTINCT t0.c0, ((CAST(t0.c0 AS INTEGER)) ISNULL), ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(t1.c0)))AND(rt0.c2)) COLLATE NOCASE FROM rt0, t0 GROUP BY json_array(((0xffffffffade29ae6)!=(t0.c0)), t0.c52) HAVING (CASE t0.c48  WHEN t1.c0 THEN t0.c52 WHEN t0.c0 THEN t0.c48 WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END IN (NULLIF(DISTINCT t0.c0, t1.c0)));SELECT DISTINCT ((((~ ('0.03919793358234058'))))<=((rtreenode(NULL, t0.c0)))) FROM t1 WHERE (('-437206227' IN ()));SELECT t0.c52 FROM t1, t0 WHERE ((((0.6693692217881387, '0.981173245306496', '-1472447315')) BETWEEN ((0x7ba79b92, '-31706123', 0.3559996561160341)) AND ((x'd105', x'', 0.5616775332997667))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((- (t1.c0)))==(UNLIKELY(DISTINCT rt0.c1))), '', t0.c52 FROM rt0 WHERE ((- (((0.94500640805433) IS TRUE)))) ORDER BY CAST(((t0.c52)<<(t0.c48)) AS INTEGER)  NULLS FIRST;SELECT ((((0)-(t0.c48)))<>((((rt0.c2, t0.c0, rt0.c1)) BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND (('877672555', rt0.c1, t0.c48))))) FROM t1;SELECT DISTINCT ((CAST(t0.c48 AS NUMERIC)) BETWEEN (AVG(t0.c0)) AND (((((t1.c0)OR(rt0.c0)))OR(rt0.c2)))) FROM rt0, t1;SELECT DISTINCT t0.c52, (((((rt0.c2)AND(0x7ec0c969)))OR(t1.c0)) IN ()), RANK() OVER () FROM rt0, t1 LIMIT 2058464644;SELECT DISTINCT ((((x'') ISNULL)) NOT BETWEEN (0.5844385685996135) AND (((rt0.c0)>(x'')))), (+ ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c48))))), (((t0.c52) BETWEEN (t0.c0) AND (rt0.c1)) IN ()) FROM t0, rt0, t1 WHERE (((((0.06796428092912499) BETWEEN (x'9b78') AND (NULL))) NOT NULL)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY (((((rt0.c1))>((rt0.c0))))>(LIKELIHOOD(NULL, 0.3223723169385858)))), (((t0.c0)IS(rt0.c1)) IN ()), CAST(LIKELY(t0.c52) AS TEXT) FROM rt0 WHERE ((((4.87000473E8) BETWEEN (x'') AND (0.7044461408523114)) IN ()));SELECT DISTINCT (+ (COUNT(*))), ((((rt0.c0) NOT BETWEEN (t0.c52) AND (t0.c0))) IS FALSE), ((MAX(0.4659973425412114)) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (CAST(rt0.c1 AS BLOB))) FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT (+ (((t0.c48)*(t0.c0)))) FROM t0 WHERE (LOWER(DISTINCT ('-1265882055' IN ()))); -- 1ms;
SELECT ALL ROW_NUMBER() OVER () FROM rt0, t1 WHERE (CASE ((x'') NOT BETWEEN (0.8345268763674634) AND (x'5f6f'))  WHEN (('-1364553253')OR('1786946104')) THEN ((x'')GLOB(0.7355780358392767)) END); -- 0ms;
SELECT ALL (((- (rt0.c2))) ISNULL) FROM rt0, t0, t1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY ((((('583057924'))>((t0.c48))))|(CAST(rt0.c1 AS TEXT)))  NULLS FIRST) FROM rt0 INDEXED BY i86;SELECT DISTINCT SUM(((t0.c52)&(rt0.c0))) OVER ( RANGE BETWEEN (NOT (((t0.c0)IS(t0.c52)))) FOLLOWING AND t0.c0 FOLLOWING) FROM rt0, t0, t1;SELECT COUNT(*) FROM rt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN (- (rt0.c2)) THEN ((t0.c48)+(rt0.c0)) END, ((CASE WHEN t0.c0 THEN t1.c0 END)+(CAST(rt0.c0 AS BLOB))), (((((rt0.c2))<>((t0.c52)))) NOTNULL) FROM t0, rt0, t1 WHERE (((((NULL)AND(NULL)))AND(x'')) COLLATE RTRIM); -- 0ms;
SELECT (((((((t0.c0)OR(rt0.c0)))OR(t0.c48)), ((rt0.c0)*(NULL)), t1.c0 COLLATE RTRIM))<((t0.c0, (t0.c52 IN ()), (+ (t0.c52))))), TRIM(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), t0.c0), (((t0.c52 IN ()))<>(((rt0.c1) IS TRUE))) FROM t0;SELECT DISTINCT t0.c52 FROM rt0 WHERE (CASE 't2' COLLATE BINARY  WHEN ((0.016334070612860185) NOT BETWEEN (NULL) AND ('1061513360')) THEN CASE -6.27619095E8  WHEN 0.807747724742173 THEN 834749299 END ELSE ((x'')&('N/_-F')) END) LIMIT 1085572737;SELECT ALL rt0.c1, ((((((((((t1.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) BETWEEN (((((((((t0.c52)OR(rt0.c0)))AND(rt0.c0)))AND(t1.c0)))OR(t0.c0))) AND (TOTAL(t1.c0))), ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(((0X1d070999)IS NOT(0.3712071957732729)))) FROM t0;SELECT ALL (((t0.c48)) BETWEEN ((CAST(t0.c0 AS BLOB))) AND (((rt0.c1 IN ())))), json_extract((NOT (rt0.c2)), ((t0.c52) IS FALSE)), SUM(((t1.c0) IS FALSE)) OVER ( ORDER BY ((9.6733128E7)||((NOT (t1.c0))))  NULLS FIRST, ((((((t0.c48))<((t1.c0)))))!=((CASE rt0.c0  WHEN t1.c0 THEN t1.c0 END)))) FROM t1;SELECT DISTINCT AVG(((t0.c48) ISNULL)) FROM rt0, t0, t1 LIMIT 1462562790 OFFSET 629891396; -- 5ms;
SELECT ALL (- (((rt0.c0)IS(rt0.c0)))) FROM rt0 LIMIT 441189343; -- 0ms;
SELECT (((((((((rt0.c0 IN ()))OR((t0.c52 IN (rt0.c0)))))OR(json_array_length(t0.c0, t0.c0))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((((t0.c48)AND(rt0.c0)))OR(rt0.c0)))), NTILE(((rt0.c2) NOT NULL)) OVER ( ORDER BY t1.c0 ASC  NULLS FIRST), FIRST_VALUE(((((rt0.c1) BETWEEN (rt0.c0) AND (t1.c0)))GLOB(x''))) OVER (), ((((((rt0.c2)<<(t0.c52)))AND(((t0.c48) IS FALSE))))OR(CASE WHEN t0.c48 THEN t0.c52 ELSE t0.c48 END)), (((((((((- (rt0.c2)))AND(((rt0.c2) NOT NULL))))OR((t0.c48 IN (t0.c52)))))OR((- (t0.c52)))))OR(((t0.c52)IS NOT(rt0.c1)))) FROM rt0 NOT INDEXED, t1, t0; -- 1ms;
SELECT DISTINCT json_valid((NOT (t1.c0))) FROM t1 CROSS JOIN rt0 ON CASE CASE t1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE t0.c48 END  WHEN (t0.c0 IN ()) THEN ((rt0.c1) IS TRUE) WHEN LIKELY(rt0.c0) THEN ((t0.c52) IS FALSE) WHEN ((NULL)+(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN t0.c48 END WHEN CASE WHEN t1.c0 THEN 0.693762431219385 END THEN x'' WHEN ((((t0.c52)AND(t0.c0)))AND(t0.c0)) THEN (- (t1.c0)) ELSE CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN t1.c0 THEN t0.c48 END END;SELECT DISTINCT (((rt0.c0)) BETWEEN ((((']#Q-U2') BETWEEN (rt0.c0) AND (t0.c52)))) AND ((COUNT(*)))) FROM rt0 WHERE (CASE ((0.42164828798899134) NOT BETWEEN (x'') AND (')<'))  WHEN (((0Xffffffffe5c117a9, 2005074502, 0X54348622))>(('O3N', x'', 0.45611640843917134))) THEN (((0.4072497534947379))<((NULL))) WHEN (('z.w')IS(NULL)) THEN '1589310339' COLLATE RTRIM WHEN x'' THEN CAST('zAe)dZ' AS INTEGER) WHEN ((((((((x'')AND(x'')))AND(0.7988656423302484)))AND(0.5508911740592543)))AND('')) THEN CASE 0.8943525553231099  WHEN 't2' THEN '1214697174' WHEN x'' THEN -1747867700 WHEN x'' THEN NULL ELSE NULL END WHEN CAST(NULL AS TEXT) THEN CASE 'C3)N劐'  WHEN NULL THEN 368294492 END END);SELECT ALL (((- (rt0.c1)))||(NULLIF(t0.c52, rt0.c0))), rt0.c2, IFNULL(DISTINCT t0.c48, CAST(t0.c48 AS NUMERIC)) FROM t0, t1, rt0 WHERE (((((('B2(')=('')), LIKE(x'', x''), (NULL IN ()), CASE WHEN NULL THEN NULL END, UNLIKELY(DISTINCT NULL)))>((CAST(NULL AS BLOB), ((x'8460') NOT NULL), 0.11961707412130318, CASE WHEN '260343309' THEN -1227796468 WHEN '1767740630' THEN -2063095455 WHEN '1791153645' THEN NULL ELSE '	BmM' END, (NULL IN ()))))); -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS INTEGER), CASE WHEN ((rt0.c1) NOTNULL) THEN ((t0.c48) NOTNULL) END, DATE(t1.c0, (t0.c52 IN ()), (NOT (t0.c0)), CAST(t1.c0 AS INTEGER), ((t0.c52)IS('0.750847384009895'))) FROM t0 ORDER BY ((CASE WHEN t0.c52 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (CASE t0.c48  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0xfffffffffe1c33f5 END) AND ('teꑕWldp')) DESC;SELECT DISTINCT STRFTIME(((((rt0.c2)OR(t1.c0)))AND(rt0.c0)), (- (rt0.c0)), ((t0.c52)>(t0.c48)), ((t0.c0)LIKE(t1.c0)), ((t0.c48) ISNULL)) FROM rt0, t1, t0; -- 0ms;
SELECT (((((rt0.c0, t0.c48, t0.c0))<=((t0.c48, t0.c48, rt0.c0))))LIKE(MAX(t1.c0))) FROM rt0;SELECT DISTINCT CAST(CASE WHEN t1.c0 THEN t0.c52 END AS INTEGER) FROM rt0;SELECT (NOT ((((t1.c0))!=((rt0.c1))))), (((((rt0.c1)GLOB(t0.c52))))<=(((NULL IN ())))), (t0.c52 IN ()) FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL))IS NOT(CAST(t0.c52 AS BLOB))), CASE WHEN ((rt0.c0)IS(rt0.c0)) THEN COUNT(*) WHEN (t0.c48 IN ()) THEN '1923469684' WHEN CAST(t0.c52 AS NUMERIC) THEN ((rt0.c2)IS NOT(rt0.c0)) ELSE CASE rt0.c0  WHEN t0.c52 THEN t0.c52 END END, json_quote(rt0.c2 COLLATE RTRIM), '뫘\n#! t', 0.1961296207099804 FROM t0, t1 WHERE (CAST('-1431158528' AS REAL) COLLATE RTRIM);SELECT DISTINCT t0.c52, (((t0.c52))!=((t0.c48 COLLATE NOCASE))), (((rt0.c1) BETWEEN (rt0.c0) AND (t0.c52)) IN ()), (((t0.c48, rt0.c2, rt0.c2, t0.c0, t0.c0)) BETWEEN ((((t0.c52) NOTNULL), ((t1.c0)%(rt0.c2)), ']븑J<b3-', ((((rt0.c1)AND(rt0.c1)))AND(t0.c52)), COUNT(t0.c52))) AND (((- (t0.c0)), CASE t1.c0  WHEN rt0.c0 THEN x'' ELSE t0.c52 END, 0.6405419866961121, NULL, (((t0.c0)) BETWEEN ((t1.c0)) AND ((t0.c48)))))), AVG((NOT (t0.c0))) FROM t0, rt0 WHERE (CASE (('')OR(''))  WHEN CAST(NULL AS REAL) THEN (('1453019782')GLOB(-1496370175)) END) ORDER BY json(rt0.c0)  NULLS FIRST;SELECT DISTINCT ((TOTAL(rt0.c1))&(MAX(rt0.c0))) FROM rt0, t1 GROUP BY t0.c52 HAVING (((0.38104702379744804 IN ()))AND((((t0.c48)) NOT BETWEEN ((t1.c0)) AND ((t0.c52))))) ORDER BY ((CASE WHEN 'k^/t~' THEN t0.c52 END)==(((t0.c52) NOTNULL))) DESC  NULLS FIRST, rt0.c2 COLLATE BINARY, CAST(((t0.c0)=(t0.c48)) AS NUMERIC) ASC;SELECT ALL (((rt0.c0)-(t0.c48)) IN ((t0.c52 IN ()))) FROM t1, rt0 NOT INDEXED, t0 WHERE (((((((((('#' IN ()))OR((('')/('<')))))AND((((-1.666450942E9))==((x''))))))OR(CAST('R' AS NUMERIC))))OR(STRFTIME('0.13519157359205058', 0.3981426791496535, x'46b8')))); -- 0ms;
SELECT ((CASE rt0.c2  WHEN '' THEN rt0.c1 ELSE t0.c48 END) IS FALSE) FROM t0, t1 GROUP BY LIKELIHOOD((((t0.c52, t0.c52, '雙㲭'))>=((rt0.c0, rt0.c1, t0.c52))), 0.9286578207179367);SELECT DISTINCT ((('0>*{')) NOT BETWEEN ((MAX(rt0.c0))) AND ((((rt0.c2) BETWEEN (t0.c0) AND (t1.c0))))) FROM t0 WHERE ((~ (x'' COLLATE BINARY))) ORDER BY ((((((((t0.c48)OR(t1.c0)))AND(rt0.c0)))OR(((t0.c52)&(rt0.c0)))))AND((((t0.c0))<((t0.c52))))) ASC  NULLS FIRST;SELECT DISTINCT ((((t0.c0)OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(rt0.c1 COLLATE BINARY)) FROM rt0, t0, t1 WHERE ((('-1591540993')<<('635253684')) COLLATE BINARY); -- 3ms;
SELECT ALL ROW_NUMBER() OVER (), ((t0.c52 COLLATE NOCASE) NOT NULL), MAX((t0.c0 IN ())) FROM t1, rt0, t0 WHERE (((((NULL)IS NOT(NULL)))LIKE(CASE 0.9781251517662527  WHEN NULL THEN NULL WHEN 0xffffffffd6d88e15 THEN x'845e' WHEN 766433412 THEN 0.13331819120385635 END))); -- 1ms;
SELECT ALL ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE FROM t0 NOT INDEXED, t1, rt0 WHERE ((NOT ((x'' IN ())))); -- 0ms;
SELECT TRIM(DISTINCT (((t0.c0))<((rt0.c2))), ((x'eba9') NOT BETWEEN (rt0.c0) AND (t0.c52))) FROM rt0, t1 WHERE (UNLIKELY(DISTINCT ((x'') NOT BETWEEN (0.7988656423302484) AND (NULL))));SELECT LAST_VALUE(t0.c0) OVER (), (CASE rt0.c2  WHEN t0.c48 THEN rt0.c2 END IN ((t0.c52 IN ()))), t0.c0, CAST(LOWER(DISTINCT rt0.c2) AS TEXT), ((rt0.c0 COLLATE NOCASE)<=((- (rt0.c1)))) FROM t0, t1 WHERE ((((0.34653751757454077))<=(('0.13331819120385635'))) COLLATE RTRIM);SELECT NTH_VALUE((((t0.c48)OR(rt0.c2)) IN ()), (+ (CAST(rt0.c2 AS INTEGER)))) OVER () FROM t1, rt0, t0;SELECT ((((((0x4727b8a6)OR(rt0.c2)))OR(t1.c0)))>>(rt0.c0)) FROM rt0 NOT INDEXED, t1; -- 0ms;
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE WHEN '' THEN NULL WHEN NULL THEN '' WHEN NULL THEN 'oM&' END, (((-614852780)) NOT BETWEEN ((1244217233)) AND (('wsc_ 9'))), '>6!W%!' COLLATE NOCASE, CAST('-1576298791' AS NUMERIC), ((((((((0X28c91a74)AND('\nG')))AND(NULL)))AND(NULL)))AND(x''))))<>((CAST(NULL AS NUMERIC), (x'' IN ()), (+ ('ZU*쓂')), 0.6833980948162971 COLLATE BINARY, ((('737567012')) BETWEEN ((x'')) AND ((x''))))))); -- 0ms;
SELECT CAST(json_extract(t0.c52, t0.c0, t0.c0, rt0.c1, t0.c48, t0.c0) AS INTEGER), FIRST_VALUE(CASE WHEN (~ (t0.c0)) THEN ((t0.c0) IS FALSE) END) OVER (), t1.c0, (((((((((rt0.c2)AND(NULL)))AND('')))AND(rt0.c0)))AND(t0.c0)) IN ((NOT (t1.c0)))), RANK() OVER () FROM t0, t1 WHERE (CAST((((0.1881371230539366)) NOT BETWEEN ((1.01827889E8)) AND ((NULL))) AS REAL)) ORDER BY rt0.c0 DESC  NULLS FIRST;SELECT (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((((t0.c48)|(rt0.c0))))) FROM t1 WHERE (((x'85cb')IS('')) COLLATE BINARY);SELECT DISTINCT (UPPER(DISTINCT rt0.c1) IN ()) FROM rt0, t1 INDEXED BY i86; -- 0ms;
SELECT DISTINCT ((((t0.c48)+(rt0.c2))) NOT BETWEEN ((((t0.c48))<((t0.c0)))) AND (3782012)) FROM rt0;SELECT DISTINCT ((TOTAL_CHANGES()) BETWEEN (((rt0.c2) NOT BETWEEN (x'0363') AND (rt0.c1))) AND (0xffffffff80f04235)), CASE WHEN ((((t0.c52)OR(rt0.c1)))AND(t0.c0)) THEN NULL ELSE TYPEOF(DISTINCT t1.c0) END, 0.5620305261775871 FROM t0, t1 NATURAL JOIN rt0 WHERE (((((NULL)<(0.584914453360906)))<=(((NULL) BETWEEN (NULL) AND (''))))) GROUP BY ((CAST(t0.c0 AS NUMERIC))<=((~ (rt0.c2)))); -- 1ms;
SELECT (~ ((+ (rt0.c0)))) FROM rt0 WHERE (((((x'')*(NULL)))GLOB(CAST('632569479' AS BLOB)))) GROUP BY CASE WHEN CAST(rt0.c1 AS REAL) THEN ((((rt0.c0)OR(t1.c0)))OR(t0.c48)) ELSE ((x'')>(t0.c48)) END;SELECT ALL CASE rt0.c1  WHEN rt0.c2 THEN t0.c52 ELSE t0.c48 END COLLATE BINARY FROM t1, rt0, t0; -- 0ms;
SELECT DISTINCT (NOT (rt0.c2)), 0.3534096778770751 COLLATE RTRIM, ((((t0.c48, t0.c52, t0.c48, t1.c0, rt0.c2))>=((rt0.c1, rt0.c0, t1.c0, t1.c0, rt0.c2))) IN ()) FROM rt0, t1 WHERE ('487000473' COLLATE RTRIM); -- 0ms;
SELECT rt0.c1 FROM t0, rt0; -- 0ms;
SELECT ((rt0.c1) IS FALSE) COLLATE NOCASE, TOTAL(((rt0.c1)>=(rt0.c0))) FILTER(WHERE CAST(((t0.c48) BETWEEN (t0.c52) AND (t0.c52)) AS REAL)) OVER (), ((((((t0.c48)OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (((t0.c48) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (CAST(t0.c0 AS REAL))) FROM t0 INNER JOIN rt0 ON (x'7110' IN ()) COLLATE RTRIM CROSS JOIN t1 ON rt0.c2 GROUP BY ((((((rt0.c2) NOT BETWEEN (t1.c0) AND (t0.c52)))AND(CAST(t0.c0 AS REAL))))OR(CASE WHEN t0.c48 THEN rt0.c2 ELSE rt0.c1 END)) HAVING CAST(1873442231 AS NUMERIC); -- 2ms;
SELECT ALL ((rt0.c1 COLLATE NOCASE) BETWEEN (t1.c0 COLLATE NOCASE) AND (CASE '-326265959'  WHEN rt0.c1 THEN t0.c52 ELSE t0.c48 END)) FROM t1, t0, rt0; -- 0ms;
SELECT ALL (((NOT (NULL))) BETWEEN ((((t1.c0))!=((rt0.c1)))) AND (((((rt0.c1)OR(t0.c48)))AND(t0.c52)))) FROM t1, t0;SELECT DISTINCT RANK() OVER (), ((NULL) BETWEEN (TOTAL(t0.c0)) AND ((+ (t0.c0)))), rt0.c2 FROM t0;SELECT ALL ((rt0.c0)&(((t1.c0) BETWEEN (rt0.c1) AND (t1.c0)))), (CAST(rt0.c2 AS NUMERIC) IN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c52)))), ((rt0.c0) ISNULL) COLLATE RTRIM, ((t1.c0) ISNULL), ((((((((t1.c0)AND(t0.c0)))OR(0.4529337492771308)))AND((((t0.c52, t0.c0, t1.c0)) BETWEEN ((rt0.c2, rt0.c1, t0.c48)) AND ((t0.c48, t0.c52, t0.c52))))))AND((NOT (t0.c0)))) FROM rt0;SELECT DISTINCT AVG((t0.c52 IN ())) OVER () FROM rt0 WHERE (((0.9092800078956422 COLLATE RTRIM)=(CASE WHEN 0.575592796588188 THEN 0.6234551746229824 WHEN x'afd6' THEN NULL WHEN NULL THEN 0.837897894900641 END))); -- 0ms;
SELECT DISTINCT CAST(LAST_INSERT_ROWID() AS REAL) FROM t1 GROUP BY (((rt0.c2) IS FALSE) IN (STRFTIME(rt0.c0, rt0.c1, rt0.c0)));SELECT DISTINCT ((((((((((rt0.c2)AND(t0.c52)))AND(t0.c48)))AND(rt0.c0)))AND(t0.c52)))<<((t0.c52 IN ()))) FROM t1 WHERE (CAST((((x'', x'9cd5', 0.006435587488794692))>=((NULL, 0.6761334346289019, ''))) AS INTEGER));SELECT DISTINCT (((CASE WHEN rt0.c0 THEN x'' END))<((NULL))) FROM rt0, t1, t0 WHERE ((((((('(0')&('*wa')))AND(CASE 0.18853859728659328  WHEN NULL THEN NULL END)))AND(((0.2928096858868089)*(NULL))))); -- 4ms;
SELECT DISTINCT ((((t0.c52)>(t1.c0)))+(rt0.c1)), HEX(DISTINCT ((t0.c52) IS FALSE)), AVG(CAST(rt0.c1 AS TEXT)) FROM rt0, t1 ORDER BY CAST(((t0.c0)<=(rt0.c0)) AS INTEGER);SELECT ALL ((((t0.c0) IS TRUE))<((NOT (t0.c0)))) FROM rt0 WHERE (((('729798571')) BETWEEN (((((0.03995464835386198)) NOT BETWEEN ((',f')) AND ((NULL))))) AND ((((((((((NULL)AND('948080580')))AND(NULL)))OR(NULL)))OR('1815892895')))))) GROUP BY (((((t0.c48))<=((t0.c52)))) NOT NULL);SELECT ALL LENGTH(NULL), CASE rt0.c0  WHEN t1.c0 THEN CASE t0.c0  WHEN rt0.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 ELSE t1.c0 END ELSE GROUP_CONCAT(t0.c52) END, ((MIN(t0.c48)) BETWEEN (((t0.c0)OR(rt0.c0))) AND (((((rt0.c1)AND(rt0.c0)))AND(t0.c0)))) FROM t1, t0, rt0 INDEXED BY i86;SELECT DISTINCT CAST(((rt0.c2)LIKE(t1.c0)) AS INTEGER) FROM t1 WHERE ((((0.879440106061464) BETWEEN (-1712841605) AND ('䫩劐%혔mwZ')) IN (((((0X1947af54)AND(NULL)))AND(x'e17f')), (('7g')<=(-411845463)))));SELECT ALL rt0.c1, CASE WHEN (((rt0.c1))>((rt0.c0))) THEN ((NULL)%(rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN (((rt0.c1))>=((t0.c52))) WHEN ((rt0.c1)AND(rt0.c2)) THEN ((t0.c52)LIKE(NULL)) END, (((SUM(rt0.c1), CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c48 THEN rt0.c2 WHEN rt0.c2 THEN x'' ELSE t0.c0 END, (((((((('0.3534096778770751')AND(rt0.c1)))OR('-424332688')))AND(rt0.c2)))OR(rt0.c1))))<=((CAST(t0.c52 AS INTEGER), (- (rt0.c1)), ''))) FROM rt0;SELECT DISTINCT ((GROUP_CONCAT(rt0.c2))/(((rt0.c0) IS TRUE))), rt0.c1 COLLATE NOCASE COLLATE BINARY, COUNT(((t0.c0) NOT BETWEEN (t0.c48) AND (t0.c48))) OVER () FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((t1.c0 IN ())) BETWEEN (t0.c52 COLLATE RTRIM) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN t0.c52 THEN t1.c0 WHEN rt0.c1 THEN t0.c48 END)) FROM rt0, t0;SELECT DISTINCT CAST((((rt0.c2, x'', rt0.c0)) NOT BETWEEN ((t0.c52, 0.9785899504432327, rt0.c1)) AND ((t0.c48, rt0.c0, rt0.c0))) AS NUMERIC), (- (QUOTE(t1.c0))), (((((rt0.c1 IN (t0.c52)))AND((((rt0.c0)) BETWEEN (('')) AND ((t0.c0))))))OR(((t0.c52)AND('-1174004750')))) FROM t0, rt0, t1; -- 0ms;
SELECT DISTINCT ((CAST(x'' AS BLOB)) IS FALSE) FROM t0 WHERE ((- (CAST(0Xffffffffb62880a0 AS REAL)))); -- 0ms;
SELECT DISTINCT ((((('0.04103675289255282' IN ()))AND(CASE WHEN 0.3550607425636503 THEN rt0.c2 WHEN t0.c52 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c52 END)))OR(((t0.c0)>>(t1.c0)))), (((((t1.c0) BETWEEN (0.4964116251756231) AND ('OrAy 40')), CAST('v4FaE' AS INTEGER), rt0.c2))!=(((- (rt0.c2)), (('-1426777728')AND(rt0.c0)), t0.c48 COLLATE BINARY))), t1.c0 COLLATE BINARY FROM rt0 WHERE (((NULL COLLATE RTRIM)<<(CASE ''  WHEN 1616812520 THEN x'' END))) ORDER BY (((rt0.c0 IN (rt0.c0, rt0.c2))) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t0.c52) IS TRUE))) DESC;SELECT DISTINCT CASE WHEN t0.c48 THEN ((t0.c48)%(t1.c0)) WHEN '-558791393' THEN ((t0.c52) IS TRUE) WHEN CAST(t0.c52 AS BLOB) THEN ((rt0.c2) NOT BETWEEN (t0.c52) AND (t0.c52)) ELSE ((t0.c48) NOT BETWEEN (rt0.c2) AND (NULL)) END, ((t0.c48 COLLATE BINARY) NOT BETWEEN (NULL) AND (((t1.c0)LIKE(t0.c0)))), CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END COLLATE BINARY FROM t1, rt0 GROUP BY NULL HAVING t0.c48 LIMIT 436150571;SELECT DISTINCT CAST(((t0.c48) NOT BETWEEN (rt0.c2) AND (0.8683749225770052)) AS INTEGER), rt0.c2, COUNT(t0.c0) FROM t1, rt0, t0 WHERE ((((('') ISNULL)) IS TRUE)) GROUP BY ((((t0.c52) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ('k^/t~') AND (((rt0.c0)+('')))), ((((-3.28320591E8)!=(0Xffffffffa8f866fb))) IS FALSE), 'io\sFQN'; -- 0ms;
SELECT ALL ((((((((((rt0.c1)<<(t0.c0)))OR((x'af1a' IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((+ (t0.c48)))))OR(((rt0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))) FROM t1, t0;SELECT DISTINCT t0.c52 FROM rt0, t0 WHERE ((UPPER(DISTINCT 0.4194008093781386) IN ())); -- 0ms;
SELECT ALL t0.c48 FROM rt0, t0 LIMIT -727280237; -- 0ms;
SELECT ALL ((((t0.c48)) BETWEEN ((t0.c0)) AND ((t0.c52))) IN (CAST(rt0.c0 AS NUMERIC))) FROM t1 WHERE (((((('-1945891988') NOT BETWEEN (NULL) AND (NULL)), 0.9729453437833984 COLLATE NOCASE, ((x'ac96') IS TRUE), (((NULL))>((NULL))), (x'' IN (0Xffffffffa1dc674b))))=((CAST(0.8943525553231099 AS REAL), CASE WHEN NULL THEN 0x395bcd3d WHEN '' THEN 'b2(' WHEN NULL THEN x'' ELSE -116944487 END, CAST(x'06e3' AS NUMERIC), (((('D	')AND('ORAY 40')))OR('\r&')), TRIM(792592155, '')))));SELECT DISTINCT ((rt0.c1 IN ()) IN ()) FROM t1, t0; -- 0ms;
SELECT DISTINCT (((NULL)&(0.48406236313959494)) IN ()) FROM rt0 WHERE (CAST(((NULL) NOT BETWEEN (0.4844514342176135) AND ('FALSE')) AS TEXT)); -- 0ms;
SELECT DISTINCT (NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))))) FROM rt0, t1, t0; -- 0ms;
SELECT DENSE_RANK() OVER (), ((((t0.c52) NOT BETWEEN (t0.c52) AND (rt0.c1)))AND(json_array_length(t1.c0))), ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN t0.c52 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) IS FALSE) FROM t0 LIMIT -1249435152;SELECT DISTINCT (DATETIME(t0.c52, t0.c0, t1.c0, rt0.c0, t1.c0) IN (t0.c0 COLLATE NOCASE)), SUM(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))), LOWER(((t0.c48) IS FALSE)) FROM t1, t0, rt0 WHERE (CAST(NULL COLLATE BINARY AS TEXT)) ORDER BY ((((rt0.c2)/(t0.c52)))/(CASE rt0.c2  WHEN t1.c0 THEN rt0.c2 END))  NULLS LAST; -- 0ms;
SELECT RANK() OVER () FROM t1; -- 0ms;
SELECT DISTINCT ((AVG(rt0.c0))>>(UNLIKELY(rt0.c0))) FROM t0 NOT INDEXED, t1, rt0 LIMIT 1786946104 OFFSET -1591540993; -- 0ms;
SELECT ALL CASE WHEN ((t0.c0) NOTNULL) THEN ((x'')<=(t1.c0)) ELSE '1903355720' END, LAG(CAST(((((t0.c0)AND(t0.c48)))AND(rt0.c0)) AS BLOB), STRFTIME(COALESCE(DISTINCT NULL, t1.c0, rt0.c0, t0.c0), NULL, CAST(t1.c0 AS NUMERIC)), ('-97543055' IN (((((t0.c48)OR(t0.c52)))AND(rt0.c1))))) OVER (), ((((CASE WHEN t0.c0 THEN t1.c0 END)OR(((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CAST(t0.c52 AS TEXT))) FROM t1, rt0, t0 WHERE ((- (((('1304218261')) BETWEEN (('0.7914208203953722')) AND ((x'')))))) GROUP BY (((rt0.c2 IN ())) NOT BETWEEN ((rt0.c0 IN (rt0.c0, t0.c0))) AND ((NOT (rt0.c1)))) HAVING ((rt0.c1)&(AVG(t0.c48))); -- 0ms;
SELECT ALL (~ (x'')) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN '-462046643' THEN '-2054200601' WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c52)) THEN ((t1.c0) BETWEEN (rt0.c1) AND (t0.c48)) WHEN rt0.c0 THEN (((rt0.c1))<((rt0.c1))) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c52)) END FROM rt0, t0, t1 ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c0) AND ('')))AND(t0.c0 COLLATE RTRIM))  NULLS FIRST; -- 0ms;
SELECT ALL ((((NOT (rt0.c0))))>((((x'') IS FALSE)))) FROM t0, t1 WHERE (((NULL COLLATE BINARY)==(((((NULL)OR(NULL)))OR('\ns')))));SELECT GLOB(AVG(t0.c0), CAST(rt0.c1 AS NUMERIC)) FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT ((((((t0.c48) NOT NULL))AND((((rt0.c2))>=((rt0.c1))))))AND((t0.c0 IN ()))) FROM t0 RIGHT OUTER JOIN t1 ON ((((0.46154141193189036)<(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND ((rt0.c2 IN (t1.c0)))) INNER JOIN rt0 ON 0Xfffffffff191be11;SELECT ALL rt0.c1 FROM t0 WHERE ((((0x74a5f929)&(x'')) IN ())) GROUP BY t1.c0 LIMIT -198804006;SELECT DISTINCT COUNT(t0.c48) OVER () FROM t0, t1, rt0; -- 0ms;
SELECT ALL 0.44193238673205393 FROM t0, rt0; -- 0ms;
SELECT ALL ((((t1.c0) IS FALSE))<>((((t1.c0)) NOT BETWEEN ((t0.c52)) AND ((rt0.c0))))) FROM t0, t1 WHERE ((((~ (NULL)))<<(NULL COLLATE BINARY)));SELECT DISTINCT ((((rt0.c0)AND(t1.c0)))AND(t0.c52)) COLLATE BINARY FROM t1, t0;SELECT DISTINCT ((LIKELY(DISTINCT rt0.c0))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN t0.c48 WHEN t0.c52 THEN t0.c0 ELSE t0.c52 END)) FROM rt0;SELECT DISTINCT (NOT ((t0.c52 IN ()))) FROM rt0 LIMIT 1278990518; -- 0ms;
SELECT (((rt0.c1)) NOT BETWEEN ((t0.c52)) AND ((CASE rt0.c1  WHEN t0.c48 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c48 THEN rt0.c1 END))) FROM rt0, t0, t1 WHERE (x''); -- 0ms;
SELECT ALL (- (((((t0.c48)AND(rt0.c1)))OR(t0.c52)))) FROM t0, rt0, t1; -- 0ms;
SELECT ((COUNT(t0.c0))&(CASE WHEN rt0.c2 THEN t0.c48 END)) FROM rt0, t0, t1 LIMIT 2126563689 OFFSET -1677019687; -- 0ms;
SELECT SUM(((((((((rt0.c1)AND(rt0.c0)))OR(t0.c0)))AND(t1.c0)))OR(t0.c48))) OVER (), 'SN\raW8h^', TOTAL(CAST(t0.c48 AS BLOB)), rt0.c0, ((((rt0.c0)%(t0.c48))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c1)LIKE(rt0.c1)))) FROM t1 WHERE ((- (1633808898)) COLLATE RTRIM);SELECT DISTINCT NULL COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c52)AND(t0.c52)))OR(t0.c48)))AND('-1349720327')))OR(rt0.c0)))/(((x'') ISNULL))), COUNT(*) OVER (), (((((((((+ (t1.c0)))AND(t0.c48)))AND(CAST(t1.c0 AS BLOB))))AND(AVG(t0.c0))))AND(CASE WHEN rt0.c1 THEN 0Xffffffffb81ff069 WHEN t0.c48 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) FROM t1 WHERE (('808052094' COLLATE NOCASE IN (ABS('-1132075941'), ((0.025759264043171526)>=(0.981173245306496)))));SELECT ALL (((t0.c48 IN ())) BETWEEN (((x'')!=(t0.c52))) AND ((rt0.c2 IN ()))) FROM t1 WHERE ((((0.9042538915446361)<<(x'')) IN ()));SELECT DISTINCT ((('2113008334' IN ()))-(SUM(t0.c48))), CAST(load_extension(t1.c0, t1.c0) AS INTEGER), CASE WHEN rt0.c0 THEN ABS(DISTINCT t0.c52) END, ((((rt0.c0) IS FALSE))==(t0.c48)), 0.3778323680368014 FROM t1;SELECT DISTINCT ((((t0.c48)IS(rt0.c0))) NOT NULL), (((- (t0.c48)))==(((t0.c0)-(t0.c52)))), CASE WHEN STRFTIME('~7', 2046316879, rt0.c2) THEN ((t0.c48)GLOB(NULL)) WHEN IFNULL(DISTINCT t0.c48, rt0.c1) THEN ((t1.c0) NOT NULL) WHEN rt0.c0 COLLATE BINARY THEN TRIM(DISTINCT rt0.c0, t0.c0) WHEN (rt0.c1 IN ()) THEN ((rt0.c1)==('')) WHEN (NOT (t1.c0)) THEN t0.c52 ELSE rt0.c0 COLLATE NOCASE END FROM t1, t0;SELECT DISTINCT ((0.6279559223707256)AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c0 END)), ((1634899320) NOT NULL), CAST(t0.c0 AS BLOB) FROM t0 WHERE (((CAST(NULL AS BLOB))-(CASE WHEN '떃GQvJ8''' THEN '509840750' ELSE '' END))) LIMIT -1592252623 OFFSET -1667032514;SELECT (t1.c0 COLLATE NOCASE IN ((((t0.c48))>((t0.c48))), ((rt0.c1) IS FALSE))) FROM t0, rt0;SELECT ALL (~ (CASE rt0.c0  WHEN rt0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 WHEN rt0.c2 THEN 0.6978198198937285 ELSE NULL END)), CAST(CAST(t0.c52 AS NUMERIC) AS TEXT), CAST(TRIM(t0.c52, rt0.c2) AS TEXT) FROM t0, t1 INDEXED BY i86 WHERE (((((~ (0.7906750138740933)), ((0.5667766971513436)<=(0.0)), '953648397'))=(((NULL IN (0.6878409617996921)), (('')&(NULL)), (-3.21417156E8 IN (NULL))))));SELECT DISTINCT x'', NULL, HEX(CAST(t0.c52 AS NUMERIC)) FROM rt0, t1, t0; -- 0ms;
SELECT DISTINCT (((('-1652054955')>('-741040824')))>(CAST(t0.c48 AS BLOB))) FROM t1, t0 WHERE (((((NULL) NOT NULL)) BETWEEN ('RB') AND ((('-1470981151') NOT NULL)))); -- 0ms;
SELECT TOTAL((t1.c0 IN (t0.c48))) OVER () FROM t0, t1; -- 0ms;
SELECT ALL ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((((((rt0.c0)OR(t0.c48)))AND(0.3663648773134395)))OR(t0.c0)))OR(0X78135835))) AND ((rt0.c2 IN (t0.c48, t1.c0)))) FROM rt0, t1, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL))IS((((t0.c48)) BETWEEN ((rt0.c2)) AND ((t0.c0))))), rt0.c2, DENSE_RANK() OVER () FROM rt0, t1 WHERE (((((((NULL, NULL, 0.0847753323280076))<((']#Q-U2', x'', NULL)))))!=(((('ppNCy<') NOTNULL)))));SELECT ((((((((((t1.c0) ISNULL))OR(((rt0.c1)%(x'')))))AND(SUM(rt0.c2))))AND(rt0.c2)))OR(((rt0.c2)/(rt0.c2)))) FROM t1 WHERE ('W⩂w');SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 WHERE ((+ ((((NULL, 0.9725066696541779, '', 0.3306121105392864, x''))<>((NULL, 'U굘,rI6V愤', 9.6733128E7, '2027958394', '<')))))); -- 0ms;
SELECT ALL ((((((rt0.c2) NOTNULL))AND((t0.c48 IN ()))))OR(((t0.c52)>=(t0.c48)))) FROM t1, t0, rt0 ORDER BY (t0.c48 COLLATE NOCASE IN ()), ((~ (t1.c0)) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT CASE t0.c52 COLLATE RTRIM  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((t0.c48) IS FALSE) END, LEAD((TRIM(DISTINCT t1.c0, t0.c52) IN ()), (((rt0.c2 COLLATE RTRIM))>((rt0.c1 COLLATE RTRIM))), CAST(LIKELY(DISTINCT rt0.c1) AS INTEGER)) OVER (), UNICODE(rt0.c0 COLLATE BINARY) FROM rt0, t1 NOT INDEXED, t0 WHERE (((CAST(0.28876487925772665 AS INTEGER)) BETWEEN (CAST(NULL AS NUMERIC)) AND ((x'' IN ('/H', x'ad96'))))); -- 0ms;
SELECT DISTINCT t0.c48 FROM rt0 INNER JOIN t1 ON CAST((rt0.c0 IN (rt0.c2)) AS REAL) GROUP BY LOWER(DISTINCT (((rt0.c2, NULL, rt0.c2)) BETWEEN ((t1.c0, t0.c0, t1.c0)) AND ((t1.c0, t1.c0, rt0.c2))));SELECT DISTINCT ((CASE rt0.c0  WHEN t0.c52 THEN rt0.c2 END)>=(((t0.c0) IS FALSE))) FROM rt0 LIMIT -294168686;SELECT DISTINCT GROUP_CONCAT(((rt0.c2)IS(rt0.c2))) FROM t1, t0 WHERE ((((NOT (1016327297)))<(((NULL) ISNULL)))) GROUP BY LIKELY(((t0.c52)|(x''))) ORDER BY ((t0.c52)IS(rt0.c0)) COLLATE RTRIM ASC  NULLS LAST;SELECT DISTINCT INSTR(LIKELIHOOD(t0.c52, 0.5405241156786518), ((0.9370553661112657)<=(t0.c0))) FROM t1;SELECT LAG((- (rt0.c1)) COLLATE RTRIM COLLATE RTRIM, ((((((((((-2.113694875E9) IS FALSE))OR(((rt0.c2)&(rt0.c2)))))OR(((rt0.c1)IS(t1.c0)))))AND((t0.c52 IN ()))))AND(((((t0.c52)AND(rt0.c2)))OR(rt0.c2)))), ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)OR((t0.c48 IN ())))) OVER (), CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT), SUM(rt0.c1) COLLATE BINARY COLLATE BINARY FROM t0, t1, rt0 WHERE (((((0.8194994349635989)<<(-1173091901)))OR((NULL IN (0.1128179094520595))))); -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN t0.c0 THEN t1.c0 ELSE -437206227 END)/((rt0.c0 IN ()))), HEX(t0.c0) COLLATE BINARY, (((NULL))<=((rt0.c1))) COLLATE NOCASE FROM t1, rt0 ORDER BY 0x5df9541c  NULLS FIRST;SELECT ((((((t0.c0)>(t0.c48)))AND(((rt0.c1)<=(NULL)))))AND('1613775516')) FROM rt0, t1, t0 WHERE ('-641155670') GROUP BY ((t0.c0 COLLATE RTRIM)-(rt0.c2 COLLATE NOCASE)); -- 0ms;
SELECT ALL ((((((((((t0.c48)OR(t0.c0)))OR(rt0.c0)))OR(t0.c48)))OR(rt0.c2)))LIKE(rt0.c2)), CASE CAST(t0.c52 AS REAL)  WHEN rt0.c2 COLLATE BINARY THEN ((t0.c48) NOT BETWEEN (rt0.c2) AND (t0.c48)) ELSE (((rt0.c1))>=((t0.c52))) END, MIN((((t1.c0))>=((t1.c0)))) COLLATE NOCASE FROM t0, rt0, t1 WHERE (((((NULL) IS TRUE)) ISNULL)) ORDER BY ((((rt0.c0) NOT NULL))IS(((t0.c0) BETWEEN (t1.c0) AND (t0.c0)))) LIMIT -1637190953; -- 0ms;
SELECT DISTINCT ((t0.c52)<>((((0xffffffffaadc454b)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))) FROM t1 NOT INDEXED, t0, rt0 WHERE (CAST((0Xffffffffd68397a2 IN ()) AS BLOB)); -- 0ms;
SELECT DISTINCT NTH_VALUE('473573098' COLLATE RTRIM COLLATE NOCASE, ((((rt0.c2)-(rt0.c1)))&(t0.c48 COLLATE RTRIM))) OVER () FROM t0, t1, rt0;SELECT ALL (+ ((t1.c0 IN ()))), NULL, TOTAL(t0.c0), ((MIN(t0.c48))|(((rt0.c0)|(t1.c0)))), (((((rt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))>=((('-616871748') NOT NULL))) FROM t1 LIMIT 1453019782;SELECT DISTINCT ((AVG('358055895')) NOT BETWEEN (((rt0.c0)|(t1.c0))) AND (((t0.c48) NOT NULL))) FROM t0, rt0, t1 WHERE (((-1.17400475E9 IN ()) IN ())) GROUP BY ((CHAR(rt0.c1, rt0.c1, '-1265882055'))IS NOT(((rt0.c1) NOT NULL))) HAVING '-669158461'; -- 2ms;
SELECT DISTINCT ((((((((t0.c52)OR(t0.c48)))AND(rt0.c0)))AND((NOT (rt0.c0)))))AND((- (t0.c52)))) FROM t1, t0 ORDER BY CASE HEX(t0.c52)  WHEN (t0.c48 IN ()) THEN (t1.c0 IN ()) ELSE CAST(t0.c48 AS NUMERIC) END DESC  NULLS FIRST;SELECT DISTINCT ((((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c2)))AND(t0.c0)))OR((((((((('')OR(t1.c0)))OR(t0.c0)))AND(rt0.c2)))OR(t0.c0)))) FROM t1, rt0, t0 WHERE (((((NULL)-('0.8604763866860718')))LIKE('1176031603'))); -- 0ms;
SELECT DISTINCT '997719141', AVG(-6.27619095E8), (~ (0.5142347570962523)) FROM t1, t0, rt0; -- 4ms;
SELECT DISTINCT LAG(CASE WHEN ((rt0.c2)+('kgPNS')) THEN ((rt0.c2)GLOB(t0.c48)) END, 792592155, rt0.c2) OVER (), LAST_VALUE(((((t0.c0)>>(t0.c48))) ISNULL)) OVER (), (((rt0.c0)) BETWEEN ((AVG(rt0.c0))) AND ((((((rt0.c1)AND(t0.c52)))OR(t0.c48))))) FROM rt0 LEFT OUTER JOIN t0 ON x'' INNER JOIN t1 ON (((((rt0.c1))==((rt0.c1)))) BETWEEN (((((rt0.c2)AND(rt0.c2)))OR(t1.c0))) AND (CASE WHEN rt0.c1 THEN t0.c52 WHEN rt0.c2 THEN t0.c52 WHEN x'' THEN rt0.c2 ELSE rt0.c1 END)); -- 0ms;
SELECT ALL ((0.5028684205284762) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((- (rt0.c1)))) FROM t0, t1, rt0 WHERE (((IFNULL(NULL, x'e2c4')) NOT NULL)); -- 0ms;
SELECT DISTINCT (NULLIF(DISTINCT rt0.c2, t0.c48) IN ()) FROM t0 WHERE ((((CASE 0.4505608579400632  WHEN 'oN<M' THEN '	0/+' END, ((((x'')AND('-2m>4|씱p')))OR('')), (('-794533372') NOT BETWEEN (0xffffffffef11dbec) AND (']F'))))!=((((-6.1485278E8) BETWEEN (0x2ebd1f03) AND (NULL)), ((NULL) NOTNULL), ((0.25330207180897835) IS FALSE))))) GROUP BY ((((t0.c52)IS(t1.c0))) NOT BETWEEN (t0.c52) AND (UPPER(rt0.c1))) HAVING SUM((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))));SELECT ((NULLIF(t0.c48, rt0.c2)) BETWEEN (((t1.c0)GLOB(t0.c48))) AND (rt0.c0 COLLATE BINARY)), (~ (JULIANDAY(t0.c52, rt0.c1, rt0.c0))), (CASE WHEN rt0.c1 THEN rt0.c0 END IN ()) FROM rt0 WHERE (CASE WHEN (NOT (0.6145039566263965)) THEN CASE 'zAe)dZ'  WHEN x'' THEN '' ELSE NULL END ELSE ((((NULL)OR(0.7102546348536097)))OR('1997460105')) END);SELECT DISTINCT AVG(QUOTE(2.005074502E9)) OVER () FROM rt0 WHERE ((+ (TRIM(9.49946057E8, x'961b')))); -- 0ms;
SELECT ALL ((((rt0.c0) BETWEEN (t0.c52) AND (t0.c48)))>>(CAST(rt0.c0 AS TEXT))) FROM t1;SELECT ALL COUNT((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) FROM t1, t0;SELECT ALL AVG(COUNT(*)) FROM rt0, t1 WHERE ((((((('0.6575173811043246', NULL, 0.5715099835625838))=(('-669158461', 0Xffffffff82ea5aab, 1.756676872E9)))))=((((NULL) NOT BETWEEN (x'8ac4') AND (1518612063)))))) GROUP BY ((((rt0.c2)GLOB(t0.c48))) ISNULL) ORDER BY (CAST(t1.c0 AS TEXT) IN (((((t1.c0)AND(t0.c48)))OR(rt0.c2)), t0.c0)), (+ (t0.c0));SELECT ((((((((LENGTH('2005074502'))AND(t0.c0)))AND(t0.c48 COLLATE RTRIM)))AND(((rt0.c1) NOTNULL))))OR(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c2)))) FROM rt0, t1, t0 WHERE ((((~ (NULL))) NOT BETWEEN (('' IN ())) AND (((x'7b9d')*('421882864'))))); -- 0ms;
SELECT DISTINCT ((rt0.c0)<>(t0.c0)) COLLATE BINARY FROM t1, t0 WHERE (((UPPER('-1646461444')) ISNULL));SELECT DISTINCT SUM((((rt0.c0))<>((t0.c48)))) FROM rt0, t0, t1; -- 1ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t1 WHERE (((((NULL) NOT BETWEEN (x'aa18') AND (x''))) BETWEEN (0x3f14d395 COLLATE RTRIM) AND (''))); -- 0ms;
SELECT ALL CUME_DIST() OVER (), ((COUNT(*))&(((t1.c0)>>(rt0.c1)))), CAST(json_array_length(rt0.c1) AS NUMERIC) FROM t0;SELECT DISTINCT ((((rt0.c1)IS NOT(rt0.c2)))IS NOT(t1.c0)) FROM t1, rt0, t0 WHERE (((((((((((NULL)AND('')))AND(x'')))OR(0.6921590775947977)))OR(x'b6c2'))) BETWEEN ('3782012') AND ((('1462562790')>>('6b<东'))))); -- 0ms;
SELECT (CAST(rt0.c2 AS INTEGER) IN ()) FROM t0, t1, rt0 WHERE ((ABS(DISTINCT 0.7532389585508523) IN ((((('2005074502')AND(0.06123586569788664)))OR(-1938565436))))); -- 0ms;
SELECT ALL load_extension(t0.c48, CAST(rt0.c1 AS INTEGER)) FROM t1, rt0;SELECT ((((rt0.c1 IN (rt0.c1))))>=((TOTAL(rt0.c2)))) FROM t1 GROUP BY (((rt0.c2)<(t0.c52)) IN (rt0.c2, ((rt0.c2) IS FALSE)));SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c48)))OR((t0.c52 IN ()))))OR(COUNT(t0.c48))) FROM rt0, t0; -- 0ms;
SELECT ((HEX(t0.c0)) BETWEEN (CASE WHEN t0.c52 THEN t0.c0 ELSE NULL END) AND ((('_큉3{Q?') BETWEEN (t0.c52) AND (t0.c52)))) FROM t0 WHERE ((NOT (NULL)) COLLATE RTRIM); -- 0ms;
SELECT COUNT(*) FROM rt0, t1, t0 GROUP BY ABS(TYPEOF(rt0.c2)) LIMIT -857379155 OFFSET 544115766; -- 0ms;
SELECT ALL (('') ISNULL) FROM t0, t1 WHERE (((0.5162528154325496)>>((('-2083082899')<>(0.8627800559207222))))); -- 2ms;
SELECT rt0.c1 FROM t0, rt0, t1; -- 0ms;
SELECT ALL (((t1.c0)<<(t0.c48)) IN (((rt0.c0) NOTNULL))), CAST(x'' AS TEXT), (((t0.c48 IN ()))!=(CASE WHEN t0.c52 THEN t1.c0 ELSE rt0.c0 END)) FROM t1, t0 WHERE (((((('290364070', x'8afe', NULL, 0xffffffffcd5159de, '')) NOT BETWEEN ((0Xffffffffc29af94e, 0.35079624868307946, 0.649464870543914, x'', x'')) AND ((x'', x'791e', 911664891, '-1568297643', x'')))) NOT BETWEEN (((x'')IS(''))) AND (JULIANDAY('1613775516', '629891396', NULL))));SELECT ALL ((((0.1920895504137482) NOT BETWEEN (t0.c48) AND (t1.c0)))<=(((((t1.c0)OR(t0.c52)))AND(t1.c0)))), ((((t0.c0)AND(t0.c48))) NOTNULL), (- (x'')), ((0.920223277071713)>>(((t0.c52)>>(NULL)))), ((((t0.c48) NOT NULL))IS(((rt0.c2) IS FALSE))) FROM t1 WHERE ((~ (CASE WHEN 0.17351332359403004 THEN x'' WHEN 1302464094 THEN x'' WHEN 0x4e7e6d9e THEN 0.9360296937142862 END)));SELECT rt0.c2, ((((t0.c0 IN ())))<>((((t0.c0)<=(x'6b0c'))))), '' FROM rt0 GROUP BY UNLIKELY(DISTINCT t0.c52) HAVING ((((((((((rt0.c2) BETWEEN (t0.c0) AND (t0.c48)))AND(t0.c48)))OR(CAST(t1.c0 AS NUMERIC))))AND(((-2082028635) ISNULL))))OR(GROUP_CONCAT(t0.c0))) LIMIT 1802854231 OFFSET -1591540993;SELECT DISTINCT ((t0.c52 COLLATE BINARY) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((t1.c0 IN ()))), (((t1.c0, rt0.c2, t0.c48)) BETWEEN (((+ (t1.c0)), rt0.c2, rt0.c1)) AND ((rt0.c2, (NOT (rt0.c0)), t1.c0 COLLATE NOCASE))), ((((t1.c0) IS TRUE))GLOB((0.17656910628884448 IN ()))), CAST(t1.c0 AS INTEGER) COLLATE RTRIM, (((((rt0.c0)>>(t0.c52))))>=(((((rt0.c1, t1.c0, 0X510e6655))>((t1.c0, t1.c0, t0.c0)))))) FROM rt0, t0 WHERE ((+ (PRINTF(NULL))));SELECT ((0.36469321214290484)>>(((t0.c52) IS TRUE))) FROM t1, rt0 FULL OUTER JOIN t0 ON rt0.c2 WHERE (((('-1148050058' COLLATE RTRIM, CASE 1.414943376E9  WHEN NULL THEN 0Xffffffffb0684cb9 END, (('tfa''w<')>=(0.5360288247069812))))<>(((((('')OR(NULL)))AND(NULL)), json_patch('', NULL), CAST(0.33771463509122746 AS TEXT)))));SELECT ALL ((rt0.c0) BETWEEN ((- (t0.c0))) AND (TRIM(rt0.c1))) FROM rt0, t0, t1; -- 0ms;
SELECT DISTINCT (((((t0.c48)) NOT BETWEEN ((rt0.c1)) AND ((t0.c52))))*(((t0.c0) IS TRUE))) FROM t1 LIMIT 1414943376 OFFSET 737567012;SELECT DISTINCT ((((t0.c0) NOT NULL)) BETWEEN (((((t1.c0)AND(rt0.c1)))OR(t1.c0))) AND (CAST(t0.c52 AS NUMERIC))) FROM t1, rt0;SELECT ALL (- ((((t0.c52, rt0.c0, NULL))>=(('1320284752', rt0.c1, t1.c0))))), ((NULL)/(CASE t0.c0  WHEN rt0.c1 THEN t0.c48 WHEN t0.c48 THEN t0.c48 WHEN t0.c52 THEN rt0.c1 END)), ((((((rt0.c0)AND(t1.c0)))OR(rt0.c1)))<<((t0.c0 IN ()))) FROM t0 WHERE ('339425358');SELECT ALL ((((((((LIKELY(DISTINCT rt0.c1))AND(rt0.c0)))OR(((((t0.c52)AND(t0.c48)))AND(rt0.c0)))))AND((+ (rt0.c0)))))AND(CAST(t0.c52 AS TEXT))) FROM t0, t1 WHERE (((((((x'', 0X73285a08, '2126563689')) BETWEEN ((x'', 0.431702352484971, NULL)) AND (('', '1108805270', '260343309'))), ((0.11624193375563274) NOT BETWEEN (x'') AND ('101827889')), ((0xfffffffffe1c33f5)*(NULL)), DATETIME(x'', 4.51450996E8, 0.7986633602301354), ((x'')%(NULL))))<=((LIKELIHOOD('0.3981426791496535', 0.5587335551362814), (+ (x'')), ((NULL) NOTNULL), (- (NULL)), ((NULL) NOTNULL))))) GROUP BY 'g', 0x38828fc4, ((((t0.c48)OR(NULL)))OR(CAST(t0.c0 AS INTEGER)));SELECT (((('' IN ())))>=(((t1.c0 IN ())))), x'', IFNULL((((rt0.c1)) NOT BETWEEN ((0.3222979763820317)) AND ((rt0.c1))), CAST(rt0.c1 AS TEXT)) FROM rt0, t1; -- 0ms;
SELECT DISTINCT LAG(((t1.c0)||(rt0.c0)) COLLATE NOCASE, (((CAST(rt0.c0 AS TEXT)))!=(('-1666450942'))), load_extension((((rt0.c2))<=((rt0.c1))))) OVER (), CAST(NULL AS NUMERIC), ((((x'')=('M''i}p鞢Uj'))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2) BETWEEN (t0.c52) AND (rt0.c1)))) FROM t1, rt0 LIMIT 1191483313;SELECT ALL CAST(json_type(rt0.c1) AS NUMERIC) FROM rt0, t0, t1 WHERE ((((x'') BETWEEN (x'') AND (0.7288309396007739)) IN ())) GROUP BY NULL HAVING CASE WHEN rt0.c1 THEN t0.c0 END COLLATE RTRIM; -- 0ms;
SELECT ALL '-1367086232' FROM t0 WHERE (((('-187893623')) BETWEEN ((((NULL) ISNULL))) AND ((((x'') ISNULL))))); -- 0ms;
SELECT ALL ABS(x'') FROM t0 LEFT OUTER JOIN rt0 ON (NOT (t0.c48)) LIMIT -745090357 OFFSET 1613775516; -- 1ms;
SELECT ALL AVG(((t0.c0)=(rt0.c1))) FROM rt0, t1, t0; -- 0ms;
SELECT ALL (~ ((((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))) FROM t0 WHERE ((((0.5289823051859797)<<('-909385466')) IN ())); -- 0ms;
SELECT DISTINCT (((t1.c0)) BETWEEN ((((rt0.c1)>=(t0.c0)))) AND ((((rt0.c1) ISNULL)))) FROM rt0, t1;SELECT 'mRFW*n' FROM rt0, t0 WHERE (((((IFNULL(-1842376521, x'809527b5'))AND((NULL IN ()))))AND((('-1738489298') NOT BETWEEN (x'') AND (NULL))))) GROUP BY ((CASE WHEN rt0.c0 THEN t0.c0 ELSE t0.c52 END)<(t1.c0));SELECT DISTINCT '448638262', ((t1.c0)+(((t0.c48) ISNULL))), x'', (((((t0.c52 IN ()))AND(CAST(rt0.c0 AS INTEGER))))OR(CASE rt0.c2  WHEN t1.c0 THEN 0.9454518256367305 WHEN t0.c52 THEN NULL WHEN t0.c0 THEN t0.c48 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)), t1.c0, SUM(TRIM(DISTINCT t0.c0, x'b474')) OVER (), CAST(((t0.c48)AND(t1.c0)) AS BLOB) FROM rt0, t0, t1; -- 1ms;
SELECT ALL json_remove((t0.c0 IN (t0.c0)), ((t0.c48)>>(t1.c0))) FROM t0, t1, rt0 WHERE ((((- (NULL)))<=((('1459398700') NOT NULL)))) LIMIT 441189343; -- 0ms;
SELECT DISTINCT ABS(((t0.c52)<<(rt0.c1))) FROM t0, t1 CROSS JOIN rt0 ON SQLITE_COMPILEOPTION_GET((((t0.c52)) BETWEEN ((rt0.c0)) AND ((t1.c0)))); -- 1ms;
SELECT ALL ((CASE rt0.c0  WHEN t0.c0 THEN t0.c48 ELSE rt0.c2 END) IS TRUE) FROM t0, t1, rt0 WHERE ((CASE -3.1706123E7  WHEN '-1173091901' THEN '~H' ELSE 0.807747724742173 END IN ())); -- 0ms;
SELECT DISTINCT (~ (CAST(rt0.c2 AS INTEGER))) FROM t0;SELECT ALL ((t0.c52 COLLATE BINARY)>=('')), ((((rt0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))) NOT BETWEEN (((rt0.c1)>(rt0.c2))) AND (((t0.c48) NOT BETWEEN (t0.c52) AND (t0.c0)))), ((((((((CAST(t0.c48 AS INTEGER))AND(((t1.c0) NOTNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c0 END)))OR(((rt0.c2)<<(rt0.c1)))))AND((((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c48))))) FROM rt0, t0, t1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1; -- 0ms;
SELECT 0.17726297313375983 FROM t0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM t0;SELECT ((x'')<(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))), (((((rt0.c1))<>((t0.c48))))<=(0.03919793358234058)), LEAD(-565577880, (((rt0.c1 IN ()))-(((rt0.c2)<(rt0.c0)))), (((rt0.c0)) BETWEEN ((rt0.c0)) AND (((+ (rt0.c1)))))) OVER () FROM rt0 WHERE (UNICODE((NULL IN ())));SELECT DISTINCT ((((rt0.c1) IS FALSE))-(CAST(rt0.c0 AS REAL))) FROM rt0, t1 WHERE ((((('') NOT BETWEEN ('1767740630') AND ('1135729572')))<>(((((((((((((NULL)AND(0.4194008093781386)))AND(x'')))OR('0.7044461408523114')))OR('tL-')))AND(0.15110446759265717)))AND(x''))))) GROUP BY LIKELY(((rt0.c2)GLOB(NULL))); -- 0ms;
SELECT LIKELIHOOD(((NULL)>(rt0.c2)), 0.9992413892189693) FROM t1, t0, rt0 GROUP BY (~ ((- (rt0.c0)))) HAVING (((NULL)) BETWEEN (((((t0.c48, rt0.c2, '券찄EX~')) BETWEEN ((t1.c0, t0.c0, rt0.c0)) AND ((t1.c0, rt0.c1, rt0.c2))))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0))))); -- 0ms;
SELECT DISTINCT (((('712735481')<=(t0.c52))) BETWEEN ((rt0.c2 IN ())) AND (MAX(rt0.c2))), x'', ((((MAX(rt0.c2))AND(AVG(rt0.c2))))AND(t0.c48)) FROM t0 GROUP BY CASE ((((t0.c52)AND(t0.c52)))AND(rt0.c0))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (t1.c0)) THEN CASE WHEN t1.c0 THEN rt0.c1 END ELSE ((t1.c0) IS FALSE) END;SELECT DISTINCT t0.c48, (~ (LIKELY(t0.c48))), SUM(json(rt0.c0)) COLLATE BINARY FROM t1, rt0, t0 WHERE (((0.7890925573166339) NOTNULL) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((rt0.c1)AND(rt0.c0)))GLOB(((t0.c52)|(t0.c48)))), ((x'9301') IS FALSE), (t0.c52 IN ()) FROM t1, rt0;SELECT DISTINCT ((((((rt0.c0)OR(t1.c0)))AND(rt0.c0)))==(((t0.c48) ISNULL))), '(,>,7?G﵏', LAST_VALUE(t1.c0) OVER ( ORDER BY CAST((+ (t0.c48)) AS INTEGER)  NULLS FIRST, ((rt0.c0) NOT BETWEEN (t0.c48) AND (rt0.c1)) COLLATE BINARY ASC  NULLS LAST, ((((t0.c0) IS FALSE))>(x''))  NULLS LAST) FROM t1;SELECT (((CASE WHEN rt0.c0 THEN t1.c0 WHEN t0.c0 THEN rt0.c0 WHEN t0.c48 THEN t1.c0 ELSE t0.c48 END))>=((CASE t0.c52  WHEN t0.c52 THEN t0.c0 ELSE t0.c52 END))) FROM rt0, t0 WHERE (CAST((((x'1b46')) NOT BETWEEN ((0.3421463904846962)) AND ((NULL))) AS TEXT));SELECT ALL t1.c0 FROM t0, t1; -- 0ms;
SELECT ALL (UNLIKELY(DISTINCT 0.514102417151545) IN ()) FROM rt0 INDEXED BY i86, t0;SELECT DISTINCT GROUP_CONCAT((t0.c52 IN ())) FROM rt0; -- 0ms;
SELECT ((((t0.c0) IS TRUE))||(((((((((rt0.c2)AND(0.3534096778770751)))AND(t0.c52)))AND(t0.c0)))OR(t0.c52)))) FROM t1, t0 LIMIT -859608950;SELECT ALL ((CAST(t0.c0 AS INTEGER)) BETWEEN (((t0.c0)<<(rt0.c0))) AND (((3.89786941E8) NOT BETWEEN (t0.c48) AND (rt0.c2)))) FROM t1;SELECT rt0.c2 FROM t1 GROUP BY ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c48)))AND(TRIM(rt0.c2, t0.c48))))OR(((t0.c48) NOT BETWEEN (NULL) AND (rt0.c0)))) HAVING x'';SELECT DISTINCT FIRST_VALUE(((UNLIKELY(t1.c0))<(((t1.c0) IS TRUE)))) OVER () FROM t1; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c0))) NOT BETWEEN (rt0.c2) AND ((0.10695905678396767 IN ()))) FROM t1, rt0 ORDER BY ((((rt0.c2 COLLATE RTRIM)OR((rt0.c1 IN (t0.c48, t0.c0)))))OR(x'6a9e')) LIMIT 487000473;SELECT DISTINCT ((((((rt0.c1))=((t0.c0)))))>=((rt0.c0 COLLATE NOCASE))) FROM t1, rt0 ORDER BY LIKELIHOOD(rt0.c2, 0.2022573669220885) COLLATE NOCASE DESC  NULLS FIRST;SELECT DISTINCT CAST((t0.c0 IN ()) AS REAL) FROM t0, rt0; -- 0ms;
SELECT ALL ((('oM&'))!=(((~ (x''))))) FROM t0; -- 0ms;
SELECT ALL ((((((t0.c48)OR('!7K*u쒭]?')))OR(t0.c48))) BETWEEN ((- (t0.c48))) AND ((NOT (t0.c52)))) FROM rt0;SELECT ALL ((CAST(t1.c0 AS TEXT))+((rt0.c2 IN ()))) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((((((t0.c52)||(rt0.c0)))OR(((((t0.c52)AND(rt0.c0)))OR(t0.c52)))))AND((NOT (t0.c52)))), AVG((((rt0.c2))<=((rt0.c1)))) FILTER(WHERE (- (((((((((t0.c0)AND(t0.c0)))OR(t1.c0)))AND(t0.c52)))AND(t0.c52))))) OVER (), SUM(CAST(rt0.c1 AS INTEGER)) FROM t0, rt0;SELECT DISTINCT rtreenode(t0.c48, t0.c0) COLLATE NOCASE FROM t1, t0 UNION SELECT DISTINCT (((x'7e35')OR(NULL)) IN ()) FROM t0, t1; -- 0ms;
SELECT LIKELIHOOD(TOTAL(t0.c0), 0.8446970018548133) FROM rt0 CROSS JOIN t1 ON ((CAST(t1.c0 AS BLOB)) ISNULL) WHERE (NULL);SELECT ALL (~ (((t0.c0)<<(t0.c48)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((((t0.c52)AND(t0.c0)))AND(t0.c0)))OR(CASE t0.c52  WHEN t0.c0 THEN t1.c0 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c48 WHEN rt0.c0 THEN x'' WHEN t0.c48 THEN rt0.c1 ELSE rt0.c1 END)), DENSE_RANK() OVER (), (((t1.c0)/(rt0.c0)) IN ()) FROM t0, rt0 WHERE ((((('-2133346480'))==(('-555360212'))) IN ()));SELECT rt0.c2 FROM t1;SELECT DISTINCT (rt0.c0 IN ()) COLLATE RTRIM COLLATE NOCASE FROM t1 WHERE ((- (((NULL)=(x''))))); -- 1ms;
SELECT ((TOTAL(rt0.c0)) NOT BETWEEN ((+ (rt0.c0))) AND ((((t0.c52)) BETWEEN ((0.5560721542557666)) AND ((t0.c52))))), t0.c52, MAX(CASE rt0.c1  WHEN t0.c52 THEN t0.c48 WHEN t0.c48 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) FROM t1, rt0, t0 LIMIT 27437508 OFFSET 185376126; -- 0ms;
SELECT DISTINCT (((((t0.c48)) BETWEEN ((rt0.c0)) AND ((t0.c52))))-(t1.c0)), TOTAL(((0.4974216613268414) NOT BETWEEN (t0.c52) AND (rt0.c1))) OVER (), GROUP_CONCAT(CASE t0.c52  WHEN rt0.c0 THEN t0.c52 END COLLATE NOCASE) OVER (), ((((t0.c0)GLOB(rt0.c2))) BETWEEN (((t0.c52) BETWEEN (rt0.c0) AND (t0.c48))) AND ((((NULL))>=((t1.c0))))), ((((((rt0.c2)<(t0.c48)))AND(CAST(rt0.c2 AS BLOB))))AND(((rt0.c2) NOTNULL))) FROM t0, rt0, t1; -- 1ms;
SELECT 0.2686236699813339, (~ (0.9437065079642911)), (((((t1.c0))!=((rt0.c0)))) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c0)*(t0.c48)))) FROM t0, rt0 WHERE (UPPER(x'')) ORDER BY ((0.27431192626345857) NOT NULL) ASC;SELECT ((-76738528)+((t0.c52 IN ()))) FROM t0, rt0, t1 WHERE ((((NULL)IS('-1420432479')) IN ())) GROUP BY ABS(((rt0.c0)>=(rt0.c0))), (TRIM(rt0.c2) IN ((- (rt0.c0)))), t0.c0 HAVING (((((t1.c0)OR(rt0.c0)))AND(t0.c52)) IN ()); -- 0ms;
SELECT DISTINCT AVG(((((t1.c0)AND(t0.c52)))OR(t1.c0))) OVER () FROM t0;SELECT rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT (((((('}NLw攲c3')AND(rt0.c2)))OR(t0.c0)))IS NOT(((t0.c0)<(t0.c48)))) FROM rt0, t0, t1 WHERE ((((((('451450996')-(NULL)))OR((- (NULL)))))OR(((('205028643')) NOT BETWEEN ((0.6338826221251093)) AND ((x'')))))); -- 1ms;
SELECT CASE WHEN CASE WHEN t0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c48)) END FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT t0.c48, ((CASE WHEN rt0.c1 THEN rt0.c0 END)<=(CAST(rt0.c2 AS TEXT))), ((CASE t0.c0  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END) BETWEEN (((rt0.c2)>>('0.745126577715011'))) AND (((t1.c0)!=(t0.c52)))) FROM rt0, t0 WHERE (((((((((((NULL)/(0.9977465004100015)))OR(CASE WHEN '-1472447315' THEN 0.5620305261775871 END)))AND(((('/h', '822947104', '1196418332')) NOT BETWEEN ((NULL, NULL, x'398a')) AND ((0.8688491163735669, x'4dd10216', NULL))))))AND(((NULL)LIKE(NULL)))))OR(0.17405382678337988 COLLATE RTRIM)));SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c48 END)OR(((t1.c0) BETWEEN (rt0.c2) AND (t1.c0)))))AND(((x'') BETWEEN (rt0.c2) AND (t1.c0)))), UPPER((rt0.c0 IN ())), CAST(CAST(t0.c52 AS TEXT) AS INTEGER) FROM t1;SELECT DISTINCT ((((((((t1.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE FROM t0 INDEXED BY i86, rt0, t1 INDEXED BY i86;SELECT DISTINCT MAX(t0.c52), GROUP_CONCAT(((0.5665617767555307) IS TRUE)) OVER (), UPPER(CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c48 THEN t0.c52 ELSE rt0.c1 END) FROM t0, t1, rt0 WHERE (NULLIF(((1.304218261E9)OR(0X7172e748)), CASE ''  WHEN x'b4f7' THEN x'' ELSE NULL END)); -- 0ms;
SELECT ALL CAST(t0.c48 COLLATE NOCASE AS REAL) FROM t0 WHERE (((LIKELY(0.5407048273596655))|(CASE NULL  WHEN '877672555' THEN '' WHEN '2126563689' THEN 0.5791514907087161 WHEN x'' THEN 1 END))); -- 0ms;
SELECT DISTINCT ((((t0.c48)!=(t0.c0)))<>(NULL)) FROM t0, t1 ORDER BY UNICODE(((t0.c52) IS FALSE)) ASC  NULLS LAST, ((((t0.c0) BETWEEN (rt0.c1) AND (t0.c0)))-(((t0.c0) ISNULL))), ((((t0.c48)OR(rt0.c0)))AND(NULL)) COLLATE BINARY ASC;SELECT CASE WHEN (rt0.c2 IN ()) THEN 0.015560819498046219 WHEN CAST(t0.c52 AS REAL) THEN ((rt0.c1) NOT BETWEEN (NULL) AND (t0.c48)) WHEN ((t0.c0)-(rt0.c2)) THEN (((t0.c48)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) END FROM rt0, t0, t1 WHERE ((- ('nowq')) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT TOTAL(((t0.c52) NOT NULL)) OVER ( ORDER BY 9.62317629E8), json_array_length(MIN(t1.c0), ((((t1.c0)AND(rt0.c2)))AND(rt0.c0))), MAX(((rt0.c0)&(t0.c48))) FROM t0, rt0;SELECT DISTINCT CASE LAST_INSERT_ROWID()  WHEN (- (t0.c48)) THEN CASE WHEN t1.c0 THEN rt0.c2 ELSE t0.c48 END ELSE ((rt0.c1)OR(rt0.c2)) END FROM t0;SELECT ALL NTILE(((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) BETWEEN ((((t1.c0))>=((t1.c0)))) AND (t1.c0))) OVER ( ORDER BY x''  NULLS FIRST) FROM t1 WHERE ((((x'')IS('Ut,cU')) IN ())) LIMIT -798368714 OFFSET 1019036529; -- 0ms;
SELECT DISTINCT CASE (~ (t0.c0))  WHEN CAST(t0.c52 AS TEXT) THEN t0.c0 COLLATE BINARY ELSE ((((t0.c52)OR(t1.c0)))OR(t0.c52)) END, ((t0.c48 IN ()) IN ()), CUME_DIST() OVER () FROM rt0, t1, t0 WHERE ((~ ((+ (x'6796'))))); -- 0ms;
SELECT DISTINCT CASE (((rt0.c0))==((t0.c0)))  WHEN (- (t0.c52)) THEN ((((rt0.c1)OR(t0.c52)))OR(rt0.c0)) ELSE x'025c' END, t0.c52, ((t0.c48)<((((rt0.c1))<=((t1.c0))))) FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT ((((CAST(t1.c0 AS TEXT))OR(CAST(rt0.c1 AS REAL))))AND(rt0.c1 COLLATE BINARY)) FROM t0 WHERE (x'');SELECT DISTINCT t1.c0 COLLATE BINARY, x'3a24', COUNT(((((((((rt0.c0)OR(t1.c0)))OR(NULL)))AND(t1.c0)))OR(rt0.c0))) FROM t1 WHERE (CAST((((''))<((''))) AS INTEGER));SELECT (CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 WHEN t0.c48 THEN t1.c0 WHEN rt0.c1 THEN '|YLb' WHEN rt0.c2 THEN t1.c0 WHEN '^；'')荱^j-' THEN rt0.c2 ELSE NULL END IN ()) FROM t0, rt0 WHERE ((json_extract(x'', x'') IN ())); -- 0ms;
SELECT ((t0.c48 COLLATE RTRIM) NOT NULL) FROM t0, t1 WHERE (LIKELIHOOD(DISTINCT (('864977201')/(0X14350c9f)), 0.5485175948276659)); -- 0ms;
SELECT DISTINCT json_patch(((rt0.c1) BETWEEN (t1.c0) AND (t1.c0)), (~ (rt0.c1))) FROM rt0, t1 WHERE ((NOT (((x'') NOTNULL)))); -- 1ms;
SELECT ALL COUNT(((t0.c0)/(t0.c52))), t0.c48, CAST(t0.c52 AS BLOB) COLLATE NOCASE FROM rt0, t0 ORDER BY (((((((t0.c52))!=((t0.c52))))AND(json_extract(t0.c52, t0.c0))))AND(CAST(rt0.c1 AS REAL))) DESC  NULLS LAST; -- 0ms;
SELECT rt0.c0 FROM rt0, t1 WHERE (('487000473' IN ())); -- 0ms;
SELECT ALL ((rt0.c0 COLLATE BINARY) IS FALSE) FROM rt0; -- 0ms;
SELECT ((((0.35361648469701856) NOTNULL)) BETWEEN (rt0.c1) AND (((((((((t0.c0)AND(x'')))OR(t1.c0)))OR(t0.c48)))OR(rt0.c1)))) FROM rt0;SELECT DISTINCT rt0.c0 FROM rt0, t1; -- 0ms;
SELECT DISTINCT ABS(((((t0.c0)OR('months06')))AND(x'6d30'))) FROM rt0;SELECT ALL (((rt0.c2 IN (t0.c52)))<<(((0.7993764212177423) NOT NULL))) FROM t0, rt0 WHERE (CAST(((('%EqIC'))<>(('-89747028'))) AS INTEGER)) GROUP BY ((((((((t0.c52)OR((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CASE WHEN rt0.c0 THEN t1.c0 END)))OR(((rt0.c1)-(t1.c0)))))AND(((rt0.c2) IS FALSE)));SELECT DISTINCT ((((x'')OR(TRIM('-1579839319'))))AND((rt0.c1 IN ()))), ROW_NUMBER() OVER ( PARTITION BY ((((((rt0.c0)AND(t0.c0)))OR(t0.c52))) NOT BETWEEN ((- (rt0.c2))) AND (CASE WHEN t1.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 END)), (((t0.c0, t0.c48, t0.c52)) NOT BETWEEN ((((((t1.c0)AND(t0.c0)))OR(t0.c0)), TYPEOF(rt0.c2), (- (t0.c52)))) AND ((json_valid(t1.c0), (((NULL, rt0.c0, x'', rt0.c1, t0.c52))=((t1.c0, t0.c0, NULL, rt0.c0, t1.c0))), (((t0.c52))>=((rt0.c0)))))), CASE ((t0.c48) NOTNULL)  WHEN ((t0.c0) NOT NULL) THEN ((rt0.c0) IS TRUE) WHEN (((('0.6195839387821813')OR(0.5322084024948984)))OR(t0.c0)) THEN ((t0.c48) BETWEEN (t1.c0) AND (t0.c48)) WHEN ((t0.c0) BETWEEN (t0.c52) AND (t0.c0)) THEN ((t0.c52)||(rt0.c1)) ELSE t0.c48 COLLATE NOCASE END, 'RkỺZHt志K'), CASE (t1.c0 IN ())  WHEN LOWER(rt0.c0) THEN t0.c52 END FROM t1, t0 LIMIT 1264830381;SELECT ALL (((t0.c0 IN ()))>(((t1.c0)+(t1.c0)))) FROM rt0, t1, t0 WHERE (TYPEOF(((0.8467754497543618)AND(-1.666450942E9)))); -- 0ms;
SELECT DISTINCT (((t0.c48)) BETWEEN (((- (rt0.c0)))) AND ((AVG(rt0.c2)))) FROM t0;SELECT DISTINCT ((x'')<=(COUNT(*))) FROM rt0, t1, t0 WHERE ((((((0xffffffffbf233ae9))>((NULL))))IS(((NULL) NOTNULL)))) LIMIT -818418206 OFFSET 1932024328; -- 1ms;
SELECT DISTINCT ((((0X39b57c) ISNULL))LIKE(((((rt0.c1)OR(t0.c0)))OR(t0.c48)))) FROM t0, t1 GROUP BY ((CASE WHEN rt0.c2 THEN t0.c48 WHEN rt0.c0 THEN t0.c52 WHEN t0.c48 THEN t0.c0 END) NOT BETWEEN (rt0.c1) AND (((t0.c52) NOT BETWEEN (t0.c0) AND (t0.c48))));SELECT ALL rt0.c1 FROM t1, t0;SELECT CUME_DIST() OVER ( ORDER BY x'') FROM rt0, t1, t0 WHERE (((CASE WHEN '' THEN 0.9722606103291983 END)||((('월蜶') NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT (((NOT (t0.c0)))=(TOTAL(rt0.c0))), (((rt0.c1)-(rt0.c1)) IN ()), (((((((t0.c48)OR(t0.c52)))AND(NULL)), ((rt0.c1)+(t0.c0)), ((t0.c0) NOT NULL)))<((CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c52 END, CAST(t0.c52 AS REAL), ((NULL)<<(rt0.c2))))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT CAST(CASE t1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END AS TEXT) FROM t1 NOT INDEXED, rt0, t0 WHERE (CAST(CAST(NULL AS NUMERIC) AS REAL)) LIMIT 1367929259 OFFSET 540316362; -- 0ms;
SELECT ((((((t1.c0)<>('997719141')))OR(SUM(rt0.c2))))AND(((t0.c0) IS TRUE))) FROM rt0, t0 WHERE ((((((-783252668)OR(x'')))AND('5?#3')) IN (((('༩z瑓g^n	^', x'dbdb', x''))>((x'', x'b6c7', x'2a4d'))))));SELECT DISTINCT ((((((t0.c0)AND(t0.c48)))AND(t0.c48))) NOT BETWEEN ((t1.c0 IN ())) AND (((t0.c52) NOT BETWEEN (0.3220411657270631) AND (t0.c0)))) FROM rt0;SELECT DISTINCT CAST((((rt0.c1))==((rt0.c0))) AS REAL) FROM t0, rt0, t1; -- 0ms;
SELECT rt0.c0 FROM rt0, t1, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((t0.c48)AND(t1.c0)))OR(rt0.c1)) COLLATE RTRIM FROM rt0 WHERE ((CASE 0.251338549968221  WHEN 0.5596718354824656 THEN x'' ELSE 0.8461814124182337 END IN ()));SELECT DISTINCT CASE (t1.c0 IN ())  WHEN NULL THEN MAX(t0.c48) END FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST((~ (0.3981426791496535)) AS INTEGER) FROM rt0; -- 0ms;
SELECT ALL ((((t0.c48)==(rt0.c1)))!=(((((rt0.c2)AND(rt0.c1)))OR(t1.c0)))) FROM rt0, t1, t0 WHERE (((((x'065e') NOT BETWEEN ('-1281354901') AND (0.43900544508058514))) ISNULL)); -- 0ms;
SELECT DISTINCT TOTAL((t0.c0 IN ())) FROM t0, t1 WHERE (((LOWER('u'))/(((-1e500)+(''))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL)) NOT NULL) FROM rt0, t1; -- 0ms;
SELECT ALL ((t1.c0 COLLATE RTRIM)OR(CAST(t0.c0 AS TEXT))) FROM rt0, t1, t0 WHERE ((NOT (((x'1be1')OR(0.1614049956317528))))); -- 0ms;
SELECT DISTINCT rt0.c1, AVG((rt0.c0 IN ())) OVER (), (((((rt0.c1) IS TRUE)))<=((((((((((rt0.c2)OR(t0.c52)))AND(rt0.c0)))OR(NULL)))AND(t0.c0))))) FROM t0;SELECT DISTINCT ((((((rt0.c0, rt0.c1, t0.c0, rt0.c2, x''))>((rt0.c2, x'6c90', rt0.c0, t0.c0, t0.c0))), NULL, (('.d<sK<-i+')>>(t0.c0))))=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c2 IN (t0.c0))))), SQLITE_VERSION() COLLATE BINARY, rt0.c2, ((((rt0.c1) NOTNULL)) BETWEEN (SUM(t0.c48)) AND (rt0.c2)), TOTAL((((rt0.c2, t0.c48, t1.c0)) NOT BETWEEN ((t0.c52, rt0.c1, rt0.c2)) AND ((NULL, t0.c0, rt0.c0)))) FROM t1 WHERE (CASE CAST('' AS BLOB)  WHEN ((0.3570712430877665) ISNULL) THEN x'75f6' ELSE 0.038923382899947456 COLLATE RTRIM END);SELECT DENSE_RANK() OVER () FROM t0, t1; -- 0ms;
SELECT ALL CAST(((0.3953296701540946) NOT BETWEEN (rt0.c0) AND (t0.c48)) AS NUMERIC), ((((((((((rt0.c2)OR(rt0.c0)))AND(t1.c0)))OR(rt0.c2)))AND('1967690203'))) BETWEEN (x'e5f49507') AND ((('kJXeDCg') BETWEEN (rt0.c1) AND (t1.c0)))), (((rt0.c1) BETWEEN (x'') AND (t0.c52)) IN ((+ (t0.c52)))), ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(862594657 AS INTEGER)) AND ('-0.0')), NTH_VALUE(((CAST(t0.c52 AS REAL)) NOTNULL), (((t0.c52)) BETWEEN ((CASE WHEN t0.c52 THEN t0.c48 WHEN t0.c48 THEN t0.c0 WHEN t0.c48 THEN t0.c0 WHEN t0.c48 THEN t0.c48 WHEN t0.c52 THEN t0.c48 ELSE t0.c52 END)) AND ((((((((((((((t0.c52)AND(t0.c52)))AND(NULL)))AND(t0.c0)))AND(t0.c52)))AND(t0.c0)))AND(t0.c48)))))) OVER () FROM t0;SELECT DISTINCT CAST(CAST('-321417156' AS BLOB) AS TEXT), ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (NULL)))AND(MAX(t0.c48))))OR((~ (t0.c0)))), CAST(HEX(DISTINCT t0.c48) AS NUMERIC) FROM t0 WHERE (((((0.8942124327382915) BETWEEN ('') AND (NULL)))+(x'' COLLATE NOCASE))) GROUP BY (((t0.c48))==((((rt0.c2)+(t1.c0))))), ((((rt0.c0)||(rt0.c1))) BETWEEN ((~ ('1984457213'))) AND ((((rt0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c1))))), ((((t0.c0) BETWEEN (t0.c48) AND (t0.c48)))AND((((t0.c48, rt0.c2, t0.c0)) BETWEEN ((t0.c52, rt0.c0, t0.c48)) AND ((t1.c0, t0.c52, t1.c0))))) LIMIT -484712482;SELECT DISTINCT (((rt0.c2) NOT BETWEEN (t0.c0) AND (t1.c0)) IN (((((t0.c0)OR(t0.c48)))OR(rt0.c1)))) FROM t0, rt0, t1 WHERE (((((0.32945972132456325)) BETWEEN ((x'')) AND ((x'fad5'))) IN (((NULL) NOT BETWEEN (NULL) AND ('-1174004750'))))); -- 0ms;
SELECT DISTINCT t0.c48 FROM t1, t0, rt0 WHERE (((0Xffffffffd0d3e976 COLLATE BINARY) BETWEEN (((('-31706123')) BETWEEN ((0.6141594741187262)) AND ((x'')))) AND (0.5075734928965449))) LIMIT -2019208648; -- 0ms;
SELECT SUM((((t1.c0))<=((t0.c0)))) COLLATE BINARY FROM t0, t1 WHERE ((((0.4829937427612151)) BETWEEN (((+ ('(y,1W')))) AND (((((x''))>=((x''))))))); -- 0ms;
SELECT CAST(((t0.c0) ISNULL) AS REAL) FROM t1, rt0, t0 WHERE (CASE ('-841318' IN (NULL))  WHEN (NULL IN ()) THEN (NOT (0X1388ef45)) ELSE ((((NULL)OR(0.3559996561160341)))AND(x'')) END) LIMIT 201266453 OFFSET -92009739; -- 0ms;
SELECT DISTINCT (((((t1.c0)AND(rt0.c1)))OR(t0.c48)) IN ()), rt0.c1, UNLIKELY(rt0.c0 COLLATE NOCASE) FROM rt0, t1, t0 LIMIT -1281354901 OFFSET 1017768401; -- 1ms;
SELECT DISTINCT rt0.c0 FROM t1 WHERE ((((- (x'')))||(((-72588441) NOT BETWEEN (1.815892895E9) AND (NULL)))));SELECT DISTINCT ((((rt0.c2)%(t1.c0)))&('1332975860')) FROM t0 WHERE ((NOT (('A5' IN ()))));SELECT ALL (- (((((((((((((t1.c0)OR(rt0.c2)))AND(t0.c52)))AND(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))OR(t1.c0)))) FROM rt0;SELECT ((((t0.c48) IS TRUE))AND(0.634169510091593 COLLATE NOCASE)) FROM t0, rt0, t1 WHERE ((((((((((-3.28320591E8 IN (NULL, '1539013188')))OR(-321417156 COLLATE RTRIM)))OR(0.1839711421299437)))OR((('205028643')LIKE(x'')))))OR((('0.04103675289255282')IS(x'bade'))))); -- 0ms;
SELECT 0.27617302938678956, AVG(CASE t0.c48  WHEN t0.c0 THEN '1586287347' WHEN t0.c48 THEN rt0.c0 WHEN x'' THEN NULL ELSE t0.c48 END) OVER (), ((MAX(t1.c0)) NOT NULL), (((t1.c0, t1.c0, x'')) BETWEEN (('964345397', (rt0.c1 IN ()), (NOT (t1.c0)))) AND ((UNICODE(0.475399802336924), ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0)), rt0.c2 COLLATE BINARY))), ((((((((GROUP_CONCAT(-1.7976931348623157E308))AND(((((t0.c0)AND(0.8113750080971904)))AND(rt0.c1)))))OR(x'dc9b')))OR(((rt0.c1)GLOB(t0.c52)))))AND((rt0.c0 IN ()))) FROM t0, t1;SELECT DISTINCT FIRST_VALUE(((rt0.c1)AND(rt0.c2)) COLLATE NOCASE) OVER ( ORDER BY (((((t0.c48 IN ()))AND((t0.c0 IN ()))))AND(((t1.c0)+(t1.c0))))) FROM rt0 WHERE (CASE (((0.6514277114002995)) NOT BETWEEN ((NULL)) AND ((0.5844385685996135)))  WHEN COALESCE(0.8960711378278519, 0.7312369590581367) THEN ((((1947163390)OR(NULL)))OR(x'')) ELSE 0.6405419866961121 COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT LAST_VALUE(CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c2 AS NUMERIC) WHEN NULL THEN x'2414fa5a' WHEN 0Xffffffffaae684b6 THEN ((((rt0.c0)OR(763507206)))OR(rt0.c1)) END) OVER () FROM rt0 WHERE ((((((x'') NOT BETWEEN (x'792f') AND (NULL)), CASE x''  WHEN NULL THEN '*Q' ELSE 0.31370085718651464 END, ((0.2408277857982023) BETWEEN (0Xffffffffda96b077) AND (-1.681555714E9))))<((TRIM(DISTINCT 0X1ad17b90, 'Ꞣ'), ((0.4300475257035121) NOTNULL), UPPER(DISTINCT ''))))); -- 0ms;
SELECT DISTINCT NTILE(UPPER(NULL)) OVER ( ROWS BETWEEN ((t1.c0)&(rt0.c2)) COLLATE BINARY PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM rt0, t0, t1 NOT INDEXED;SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c0 WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END) FROM t1, rt0; -- 1ms;
SELECT (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((CAST(rt0.c0 AS BLOB)))), t0.c52, ((UNLIKELY(rt0.c2)) IS TRUE), (- (((((t1.c0)AND(t0.c52)))OR(t0.c48)))), ((CAST(t0.c52 AS TEXT))AND(((t0.c48)AND(rt0.c2)))) FROM rt0 WHERE ((((((((('737567012')OR(NULL)))OR('Ks')))OR(CASE WHEN 0.021125981395145876 THEN x'1cd9' WHEN x'' THEN 0.33771463509122746 WHEN '-1322364831' THEN NULL END)))AND(CASE ''  WHEN x'' THEN NULL WHEN 0.8088981833951251 THEN '-915058945' WHEN 'Da*c' THEN '1285973854' END))) GROUP BY t0.c0 COLLATE RTRIM LIMIT 1767740630;SELECT DISTINCT NULL, ((CAST(rt0.c0 AS BLOB))&(NULL)), CASE WHEN ((t0.c48)*(rt0.c2)) THEN UPPER(DISTINCT t0.c52) WHEN (((t0.c0))==((t0.c0))) THEN ((t1.c0) ISNULL) WHEN CAST(t1.c0 AS NUMERIC) THEN ((rt0.c2)<>(rt0.c1)) END FROM rt0 WHERE (RTRIM(NULL COLLATE RTRIM));SELECT DISTINCT (((t0.c52)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CASE t0.c48  WHEN t0.c0 THEN 7.37567012E8 WHEN rt0.c1 THEN t0.c48 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) FROM t1 INDEXED BY i86 WHERE ((((5.52364003E8)) NOT BETWEEN ((88808434 COLLATE NOCASE)) AND ((1.412728354E9 COLLATE RTRIM))));SELECT DISTINCT (((CAST(rt0.c0 AS NUMERIC)))>=((rt0.c0 COLLATE NOCASE))) FROM t0, rt0, t1; -- 0ms;
SELECT DISTINCT CAST(((t0.c52)IS(t0.c48)) AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c52)>=(rt0.c2)))OR(NULL)))AND(((t0.c48) BETWEEN ('f	?K&MU3') AND (rt0.c1)))), rt0.c1, (((t1.c0)) BETWEEN (((t0.c0 IN (x'')))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN t0.c48 WHEN rt0.c0 THEN rt0.c0 ELSE t0.c48 END))) FROM t0 WHERE ((((('-242106863') NOT NULL)) IS TRUE));SELECT DISTINCT AVG(COUNT(((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c48)))) FROM t0, rt0 CROSS JOIN t1 ON ((((((((((rt0.c0) NOT BETWEEN (t0.c48) AND (rt0.c2)))OR(rt0.c1 COLLATE NOCASE)))AND(CAST(t0.c0 AS REAL))))AND(NULLIF(DISTINCT rt0.c0, t1.c0))))AND(CASE rt0.c2  WHEN t0.c52 THEN t0.c52 END)) WHERE (((((NULL)IS NOT('0.7914208203953722'))) IS FALSE));SELECT ALL CAST(NULL COLLATE RTRIM AS TEXT) FROM t1 WHERE (((((0.7234550760567385) NOT NULL))IS((+ (NULL))))); -- 0ms;
SELECT t0.c48, AVG((~ (rt0.c0))) OVER (), (NOT (t0.c0 COLLATE BINARY)), CAST(((((t0.c48)AND(rt0.c1)))OR(t0.c0)) AS TEXT), (- (t1.c0 COLLATE RTRIM)) FROM rt0, t0 WHERE (IFNULL(((((1920193102)AND(0.11952439014663252)))OR(0.23639875977331903)), CASE WHEN NULL THEN x'8fc325c2dcde' ELSE '' END)) LIMIT 1462562790 OFFSET -1425664985;SELECT (((0Xffffffffda60e092))>=(((((t0.c48)) NOT BETWEEN ((t0.c0)) AND ((t0.c52)))))) FROM t1;SELECT ALL CUME_DIST() OVER (), AVG(0.5201233060508357) OVER ( ORDER BY (((((rt0.c2))=((t0.c0))))>(((t0.c0) IS TRUE))) DESC, ((((t0.c0) ISNULL))<(CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c52 END)) DESC), CAST(TOTAL(rt0.c2) AS INTEGER) FROM rt0, t1, t0; -- 1ms;
SELECT x'' FROM rt0, t0 WHERE (((((x'')<<(NULL)))LIKE(('BU' IN ())))); -- 0ms;
SELECT DISTINCT t0.c0, (((rt0.c2 IN ()))<=((- (t0.c48)))), (((t0.c0)) BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))) AND ((((t1.c0)<(t0.c48))))) FROM t0 WHERE (((((((((0x59beaf88 COLLATE RTRIM)OR(ROUND(0.3398799609259048, -1887390307))))OR(((NULL)>=(x'')))))AND('-1591540993')))OR(x'' COLLATE NOCASE))) GROUP BY '0.6414223831322382', ((((t0.c48) ISNULL)) IS FALSE), (((~ (t1.c0)))*(((((rt0.c2)AND(t0.c48)))AND(t0.c48))));SELECT (- ((t0.c0 IN ()))) FROM t0, rt0 INDEXED BY i86 WHERE (STRFTIME((((((((('')OR(x'')))OR(1187085678)))AND('')))OR(552364003)), ('1' IN ()), ((NULL) NOTNULL)));SELECT ALL ((COUNT(*))<<(MIN(t0.c48, rt0.c2))), json_valid(TRIM(rt0.c1)), RANK() OVER () FROM rt0, t1;SELECT ((COUNT(*)) BETWEEN (CAST(t1.c0 AS TEXT)) AND (t0.c0 COLLATE NOCASE)), (((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))) COLLATE RTRIM, ((((t0.c48) NOT BETWEEN (rt0.c0) AND (t0.c52)))|(t0.c52 COLLATE RTRIM)) FROM rt0, t0;SELECT DISTINCT NTILE(((NULL) BETWEEN (((rt0.c0)|(rt0.c2))) AND (CAST(t1.c0 AS INTEGER)))) OVER () FROM t0, t1, rt0 ORDER BY (((('mW5sB~t') NOTNULL))+(COALESCE(DISTINCT rt0.c1, '1370792560', t0.c0, rt0.c0))) DESC;SELECT ALL ((((t0.c48)=(t0.c52))) BETWEEN ((rt0.c1 IN ())) AND (((((rt0.c2)OR(rt0.c0)))AND(t0.c0)))) FROM t1, rt0, t0 WHERE (CASE x'' COLLATE BINARY  WHEN ((0.4346914015404716) NOT NULL) THEN (+ (NULL)) ELSE NULL END); -- 2ms;
SELECT DISTINCT ((TOTAL_CHANGES())&(CAST(t0.c52 AS INTEGER))) FROM t0 WHERE ((((((x'') NOTNULL), ((NULL) NOT NULL), ((('If㸹''\t椫'))<=((NULL)))))<((CASE -1042560630  WHEN x'cd3b' THEN 0.2484242096614825 END, json_object(7.92592155E8, '961161496'), (x'' IN ()))))); -- 0ms;
SELECT ((((((((((t0.c52)AND(rt0.c2)))OR(x'')))OR(rt0.c1)))AND(t1.c0)))%(TRIM(t0.c48))) FROM t1, t0, rt0; -- 0ms;
SELECT ALL FIRST_VALUE(((CASE WHEN x'' THEN rt0.c2 END)OR((NOT ('fd'))))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT '' FROM t0, rt0 WHERE ((((('劐1')>(NULL)))+('1815892895'))) GROUP BY CASE ((t0.c52)&(t0.c0))  WHEN (~ (rt0.c0)) THEN (~ (rt0.c2)) ELSE NULL END; -- 0ms;
SELECT DISTINCT ((((rt0.c2 COLLATE BINARY)OR(0.900457948620576)))AND((((x''))<>((rt0.c2))))), (~ (CASE WHEN t0.c52 THEN t0.c0 ELSE rt0.c1 END)), LIKELIHOOD(DISTINCT rt0.c1 COLLATE NOCASE, 0.7612187211453743) FROM t0 GROUP BY (((t0.c48, ((t0.c48)>>(rt0.c1)), t0.c0))=((rt0.c1 COLLATE NOCASE, (- (t0.c48)), ((((((((rt0.c1)AND(t0.c48)))AND(rt0.c2)))OR(t0.c52)))OR(rt0.c0))))), (~ (((NULL)=(rt0.c1)))), (((t0.c48, rt0.c1, t1.c0)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((t1.c0)) AND ((t0.c48))), ((t0.c52) NOTNULL), (t0.c52 IN (t0.c48, rt0.c2)))) AND ((CAST(t0.c52 AS REAL), CAST(t0.c48 AS TEXT), ((((rt0.c2)OR(t1.c0)))AND(rt0.c2))))) HAVING CASE WHEN (- (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c48) AND (t1.c0)) ELSE UPPER(NULL) END ORDER BY ((((t0.c48)<<(rt0.c2)))<('-1479682501')) DESC;SELECT DISTINCT CAST(t0.c52 AS NUMERIC) FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT t0.c52, (+ (CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)), (((NULL IN ()))>>((- (rt0.c1)))) FROM t1, t0, rt0 WHERE (0.07640071072039445); -- 0ms;
SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((((x'ec42') NOTNULL))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) FROM t0, rt0 LIMIT 1383061001 OFFSET -315121349; -- 0ms;
SELECT ALL (t0.c0 IN (rt0.c0)) COLLATE RTRIM FROM t0, rt0; -- 0ms;
SELECT ALL ((((((((t0.c52)OR(rt0.c0)))OR(t0.c52)))AND(((t1.c0) BETWEEN (t0.c0) AND (t0.c52)))))AND(GROUP_CONCAT(t1.c0))) FROM t0, rt0;SELECT COUNT(*) FROM t1, rt0, t0; -- 0ms;
SELECT ((((rt0.c0) IS TRUE))<=(t0.c48)), t0.c48 COLLATE NOCASE, MIN(rt0.c1) FROM t1, rt0, t0 WHERE (((((x'cde6')>=(x''))) IS TRUE)); -- 1ms;
SELECT MIN(((t0.c48)AND(rt0.c0))) FROM t0 CROSS JOIN t1 ON ((((CASE rt0.c0  WHEN rt0.c2 THEN x'' END)OR(COALESCE(DISTINCT rt0.c0, rt0.c0, rt0.c1, t0.c52, rt0.c1, t0.c48, rt0.c2, t1.c0))))AND((t0.c48 IN (t1.c0)))) WHERE (INSTR((+ (0.2822329658315469)), ((x'bff1f679')*(x''))));SELECT TOTAL((+ (t1.c0))) FROM rt0, t1 WHERE (CAST((+ (NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT TOTAL_CHANGES(), ((((CASE rt0.c0  WHEN t0.c48 THEN x'b92c' END)AND((t0.c52 IN ()))))OR(IFNULL(DISTINCT t0.c52, t0.c52))), rt0.c1 FROM t0, rt0; -- 0ms;
SELECT COUNT('|c') OVER ( ORDER BY CAST((- (rt0.c0)) AS TEXT) DESC), COUNT(CASE WHEN t0.c52 THEN t0.c48 WHEN '^R' THEN t1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) OVER (), CASE (((t0.c48, rt0.c0, t0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, t1.c0)) AND ((rt0.c0, t1.c0, rt0.c2)))  WHEN t0.c48 COLLATE RTRIM THEN rt0.c2 WHEN ((((rt0.c2)OR(rt0.c0)))AND(t0.c52)) THEN COUNT(*) WHEN ((rt0.c2) NOT NULL) THEN t1.c0 ELSE ((t1.c0)||(t0.c52)) END FROM t1, rt0 WHERE (CAST(x'' COLLATE RTRIM AS REAL)) ORDER BY 0.7563766188722152 ASC;SELECT ALL (((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)) IN ()) FROM t1; -- 0ms;
SELECT (- (t0.c52)) COLLATE BINARY COLLATE RTRIM FROM t0 WHERE (((((('-1647886925', '1192047911', 0.07497198965873919)) NOT BETWEEN ((666633578, '4_N㾌<BKCi', x'')) AND ((x'b0481ad9', x'', 3.89786941E8))))IS(((-179131774) NOTNULL)))) GROUP BY (((rt0.c0))>(((((t0.c48))=((t0.c0)))))), ((((((rt0.c1)OR(t0.c0)))AND(t0.c48))) IS TRUE), ((rt0.c1 COLLATE BINARY) NOTNULL);SELECT '-614852780' FROM t1, t0; -- 0ms;
SELECT DISTINCT (((t1.c0 IN ()))>>((((t0.c52))>((t1.c0))))) FROM t0 WHERE (((((('-147921947') BETWEEN ('-1030031026') AND ('㊭3~j')), ((0X2a1275a4) ISNULL), (('kjxedcg')||(x''))))<((NULL COLLATE RTRIM, NULL, ((((NULL)AND(-95352373)))AND('912145167'))))));SELECT ALL DENSE_RANK() OVER (), ((((rt0.c2)OR(t0.c0)))>>(TYPEOF(rt0.c0))), ((rt0.c2 COLLATE NOCASE) IS TRUE) FROM rt0, t0; -- 0ms;
SELECT CAST(CASE rt0.c0  WHEN t0.c52 THEN t0.c52 WHEN t1.c0 THEN rt0.c1 WHEN rt0.c2 THEN t0.c48 ELSE rt0.c0 END AS BLOB) FROM t1 LIMIT 850812948 OFFSET -1769046686;SELECT CASE WHEN ((t0.c52) NOT BETWEEN (t0.c48) AND (t0.c52)) THEN t1.c0 COLLATE RTRIM END FROM rt0, t0, t1 WHERE (CASE WHEN (0.0895387595672964 IN ('1561033616')) THEN ((0.05733247946953668) NOT NULL) ELSE ((x'0b45a9d8')IS NOT(NULL)) END); -- 0ms;
SELECT (((~ ('185376126'))) NOT NULL) FROM t0; -- 0ms;
SELECT t0.c0 FROM rt0, t0 LIMIT -620009577 OFFSET -2102642771; -- 0ms;
SELECT LIKELY(DISTINCT (('#趕') IS FALSE)) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS TEXT) FROM rt0, t1, t0 GROUP BY CASE WHEN (((t0.c52, t0.c48, t0.c52))>((t0.c0, t1.c0, rt0.c0))) THEN CASE WHEN t0.c52 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN t1.c0 THEN t0.c48 ELSE t0.c0 END ELSE CASE rt0.c1  WHEN t0.c0 THEN 0x67ed3c62 ELSE t0.c48 END END, CAST(((t0.c0)/(rt0.c2)) AS REAL), ((((t0.c0)%(t0.c48))) BETWEEN ((- (t1.c0))) AND (highlight(rt0.c1, rt0.c0, t0.c0, rt0.c2))) HAVING MIN((((t0.c0, t0.c0, t0.c0))!=((t0.c52, rt0.c2, t0.c0))));SELECT ALL (CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c48 THEN rt0.c1 WHEN t0.c48 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN rt0.c0 END IN ()) FROM t1 ORDER BY ((t0.c48)GLOB(((((t0.c48)OR(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST, ((((((((((rt0.c0)AND(t0.c48)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))) NOT NULL) DESC  NULLS FIRST;SELECT CAST(MIN(x'') AS REAL) FROM rt0 GROUP BY 'Y*DOgwv0' HAVING (NOT (((t0.c48)<<('1453019782'))));SELECT ALL ((rt0.c1) NOTNULL), ((t0.c48 COLLATE BINARY) BETWEEN (((((t1.c0)OR(x'')))OR(t1.c0))) AND (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), x'' FROM rt0;SELECT FIRST_VALUE(rt0.c1) OVER ( RANGE  CURRENT ROW) FROM t1, t0, rt0 ORDER BY ((CAST(t1.c0 AS BLOB))/('-1174004750')) DESC  NULLS LAST; -- 0ms;
SELECT CASE LIKELIHOOD(rt0.c1, 0.34196902851020294)  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN (t0.c48 IN ()) ELSE ((t0.c48)<=(rt0.c2)) END FROM t0, t1, rt0 WHERE (0.804301479355245); -- 0ms;
SELECT (NOT (CAST(t0.c0 AS NUMERIC))), ((((t0.c0 COLLATE RTRIM)AND(((0.7940249481663997)OR(t0.c52)))))OR(((t1.c0) NOT BETWEEN (rt0.c2) AND (x'')))), (NOT (((((((((rt0.c1)AND(t0.c48)))AND(t0.c48)))OR(rt0.c2)))OR(t0.c48)))) FROM t1, rt0;SELECT ((((rt0.c0)||('1370792560'))) BETWEEN (((t0.c0) BETWEEN (x'') AND (t0.c52))) AND (json(t0.c48))) FROM t1, rt0, t0 INDEXED BY i86 ORDER BY UNLIKELY(DISTINCT ((rt0.c2) IS FALSE)) ASC  NULLS FIRST, CAST(CAST(t1.c0 AS INTEGER) AS REAL) DESC;SELECT CASE WHEN rt0.c2 COLLATE BINARY THEN MIN(rt0.c2) END FROM t0;SELECT ALL ((t0.c0) IS TRUE), CAST((((t0.c0, t0.c48, t1.c0)) NOT BETWEEN ((rt0.c0, t1.c0, rt0.c1)) AND ((rt0.c0, t0.c52, t0.c48))) AS TEXT), (NOT (((t0.c52)*(t0.c48)))) FROM t0 WHERE ((+ (CASE WHEN x'' THEN '-2002919212' WHEN 0.8750218089837756 THEN 0.04293108135046819 WHEN '443001712' THEN '-1173091901' ELSE '1483095595' END))) GROUP BY ((((((rt0.c1)OR(t0.c52)))AND(t1.c0)))%(((((((((t0.c0)AND(t0.c52)))AND(t0.c52)))OR(t0.c0)))OR(rt0.c2))));SELECT ALL MAX(CAST(t0.c0 AS REAL)) FROM t1 WHERE (LOWER(NULL) COLLATE RTRIM);SELECT ALL COUNT(((t0.c48)&(rt0.c1))) OVER () FROM t1;SELECT DISTINCT 0.9084998101478446, FIRST_VALUE(ROUND((- (t1.c0)), CASE WHEN t1.c0 THEN t1.c0 END)) OVER ( PARTITION BY ((t0.c48 COLLATE BINARY)||((t0.c48 IN ()))), rt0.c0), ((((t0.c52 IN ('1462562790'))))<=((rt0.c0))) FROM t1 WHERE (((((('1879537622') IS FALSE)))==((((x'ef50') NOT NULL)))));SELECT DISTINCT (((t0.c48 IN ()))|((- (rt0.c1)))) FROM t0, rt0 WHERE (((((((((((NULL) NOTNULL))OR((((NULL, '%V', x'bb4b')) BETWEEN ((NULL, -1158153462, x'')) AND ((x'', '0.02734875251716673', NULL))))))OR((- (NULL)))))OR((('-1228956336') BETWEEN (x'cfe9') AND ('')))))OR(((0.9781251517662527) BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT ALL ((0.17408821192014545) BETWEEN (((((((((t1.c0)OR(t0.c52)))OR(t0.c52)))OR(t0.c52)))AND(t0.c48))) AND (((t0.c52)<=(0.044138926522667266)))) FROM rt0;SELECT ((((t0.c0) IS FALSE)) BETWEEN ((((t1.c0)) NOT BETWEEN ((t0.c48)) AND ((rt0.c1)))) AND (((0.3677779149302999) NOTNULL))) FROM t1 NOT INDEXED, rt0, t0 WHERE (SQLITE_VERSION()); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 COLLATE BINARY THEN ((t1.c0)||(t1.c0)) END FROM rt0, t0;SELECT DISTINCT CAST((t0.c52 IN ()) AS TEXT) FROM t1 WHERE (UNLIKELY(DISTINCT NULL) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ((UPPER(DISTINCT rt0.c1))OR((((t0.c52, t0.c48, t1.c0)) BETWEEN ((t0.c52, t0.c48, rt0.c1)) AND ((t0.c0, t0.c0, t0.c48))))) FROM t0, t1 WHERE ((((x'38c4'))<=((''))) COLLATE NOCASE);SELECT DISTINCT SUM(((rt0.c0)LIKE('')) COLLATE NOCASE) OVER ( RANGE CASE (0.4025214003842589 IN ())  WHEN t1.c0 THEN t1.c0 COLLATE BINARY END PRECEDING EXCLUDE NO OTHERS) FROM rt0, t0, t1 WHERE (x'f62b') ORDER BY (((+ ('GJYLew0')))<(rt0.c0)) ASC;SELECT SUM(((((((((t0.c52)AND(t1.c0)))OR(rt0.c2)))OR(t0.c48)))AND(t1.c0))) FROM t1;SELECT DISTINCT NULL FROM rt0 WHERE (LIKELY((('14382247') BETWEEN ('') AND ('')))); -- 0ms;
SELECT DISTINCT '}u' FROM rt0 WHERE (((((0xffffffff93362fa3)) NOT BETWEEN (('0.0')) AND (('-802502956'))) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN (t0.c52 IN ()) THEN ((x'') NOTNULL) ELSE '1311765103' END, CASE WHEN t0.c48 THEN ((t0.c52)<(t0.c52)) WHEN (((t1.c0))>=((t0.c48))) THEN ((t0.c52) ISNULL) WHEN CAST(t0.c52 AS NUMERIC) THEN NULL END, ((((((x'')AND(t0.c52)))OR(t0.c48)))IS NOT((rt0.c1 IN ()))), CAST(MAX('-1576788517', t0.c52, t0.c48, t0.c0) AS REAL), ((((((t0.c0) ISNULL))AND(((t0.c48)<(rt0.c2)))))AND((NOT (rt0.c2)))) FROM t1, t0, rt0; -- 0ms;
SELECT ALL t0.c0 FROM rt0, t1, t0; -- 0ms;
SELECT ABS(DISTINCT rt0.c2 COLLATE NOCASE) FROM rt0 WHERE ((~ (NULL COLLATE RTRIM))); -- 0ms;
