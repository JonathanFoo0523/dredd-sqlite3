-- Time: 2024/06/07 09:25:19
-- Database: database13
-- Database version: 3.40.0
-- seed value: 222890813
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('>bU'), (NULL), (0.3294481057000186); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c4) VALUES ('-1858617991', 0.4685550654894042, '321350210'); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c3, c4) VALUES (0.4493366815504596, NULL, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0) VALUES ('>bU', 0Xffffffffe4e14972, -1590280954); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c1, c2)=(NULL, NULL, '5j떓ᑗo%q	') WHERE (((((rt0.c3) IS TRUE), TYPEOF(DISTINCT rt0.c4), ('-1590280954' IN ())))==((((('-454997646'))==((rt0.c1))), ((rt0.c1)%(rt0.c2)), SQLITE_COMPILEOPTION_USED(rt0.c1)))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 4ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x''; -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, NULL, x'4e13', 0.012826875876591926, 0xffffffffe6661488); -- 1ms;
PRAGMA main.cell_size_check = true; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM rt0; -- 1ms;
PRAGMA main.locking_mode; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4, c3, c2) VALUES ('yC7^C', 0.22983750196117592, 0xffffffff87c15ee4, '411846513'); -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
PRAGMA journal_mode = MEMORY; -- 0ms;
UPDATE OR IGNORE rt0 SET c4=x'', c4='7lSS)X'; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
UPDATE rt0 SET c2=0.5107065355805235, c4=0.25485354100859736 WHERE NULL; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES ('', '0.4685550654894042', NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1) VALUES (((0.5107065355805235 COLLATE RTRIM) NOT BETWEEN (CASE WHEN x'' THEN 0xffffffffd8d05141 END) AND (((x'')<(0Xffffffffe4e14972)))), x''), (x'', x''), (-657436351, x''); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE rt0 SET c0=x'', c4=NULL; -- 0ms;
UPDATE rt0 SET (c3)=(0Xffffffffeedc0dde) WHERE ((rt0.c2)<((~ (rt0.c4)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3, c0, c1) VALUES (NULL, NULL, x'', '0.4493366815504596'); -- 0ms;
VACUUM main; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-43408584 321350210 unordered noskipscan'); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)>=(rt0.c3)) FROM rt0 WHERE (NULLIF(((((x'6fd2')AND(-657436351)))AND('h^_X!EM')), ((x'') NOTNULL))) ORDER BY '-657436351' ASC  NULLS LAST; -- 1ms;
PRAGMA incremental_vacuum(-43408584); -- 0ms;
UPDATE rt0 SET c4=x'b3fb'; -- 1ms;
REINDEX; -- 4ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c3, c1) VALUES ('-1858617991', x'', NULL, '-287568418'), (0.4685550654894042, x'', 0xffffffffedf63305, NULL), (NULL, 'oqS.', 0.43361761229524176, '!A~''H(|\u'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2=0.24279183330885523, c4=-6.57436351E8, c4='橂*7]橂jgi'; -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c1) VALUES (x'', 0.13546763429361752); -- 0ms;
UPDATE OR IGNORE rt0 SET c4=0.5848813704578492, c1='|SK}o誩'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3, c2, c0)=('', '-657436351', 'F?㴆(? 5.'); -- 0ms;
UPDATE OR REPLACE rt0 SET c1='a', c0='1199233248'; -- 0ms;
UPDATE rt0 SET (c2, c0)=(NULL, NULL) WHERE CAST(CAST(x'5138' AS NUMERIC) AS INTEGER); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=('-657436351') WHERE ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (NULL, x'', '', '1199233248', '-2017370396'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4, c3, c0, c2) VALUES (0.6219897081671011, 0.8514233048563598, -1.858617991E9, '-429517688', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c4) VALUES (0X4705fb3e, NULL, 0.5420284481207365); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1) VALUES (x'', 1.199233248E9), (NULL, 0Xffffffff8a853898), ('?qf-횧/f', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c4, c1, c3, c2) VALUES ('1-500000', x'', '-747211050', '', 0.7666029028790551); -- 0ms;
PRAGMA journal_mode; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('0.6219897081671011'); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3, c0)=('0.7666029028790551', 4.11846513E8); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE rt0 SET c3=0.3067311543325172; -- 1ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=(0Xffffffffe6661488, 565594336, NULL); -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
VACUUM; -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c1)=(x'') WHERE 0.055212033583052045; -- 0ms;
UPDATE OR IGNORE rt0 SET c4='VT', c0=0xfffffffff9158537; -- 1ms;
ANALYZE v0; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
DROP VIEW v0; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('((5')AND(1090657101)) AS REAL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(-2.87568418E8) WHERE t1.c0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c0='', c0=NULL; -- 0ms;
ANALYZE temp; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL CAST(rt0.c3 COLLATE NOCASE AS BLOB), ((rt0.c2) BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((NOT (rt0.c1)))), ((((((-302632187)AND(rt0.c1)))AND(rt0.c3))) NOT BETWEEN (COUNT(*)) AND (COUNT(rt0.c4))) FROM rt0, t1; -- 0ms;
SELECT (((('-1953430275')AND(rt0.c3))) BETWEEN (((rt0.c1)%(rt0.c2))) AND (CAST(t1.c0 AS REAL))), SUM((((rt0.c3, t1.c0, t1.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c1)))) OVER (), CASE WHEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END THEN ((x'') NOTNULL) ELSE (rt0.c4 IN ()) END, json_extract(((rt0.c4)<<(rt0.c3)), SUM(0.39499635387449505)), (CASE t1.c0  WHEN -6.57436351E8 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN 0.6219897081671011 ELSE rt0.c0 END IN ()) FROM rt0;SELECT ALL LIKELIHOOD((x'' IN ()), 0.4302550995875122) FROM rt0, t1; -- 0ms;
SELECT ((((COUNT(*))AND((((rt0.c3))=((rt0.c4))))))OR(((t1.c0)<>(rt0.c2)))), '-1394379154', (NOT (rt0.c4)) FROM t1 GROUP BY CASE WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((rt0.c4)<>(t1.c0)) WHEN (rt0.c1 IN ()) THEN -1953430275 COLLATE RTRIM WHEN NULL THEN (- (rt0.c2)) END HAVING CAST(t1.c0 COLLATE NOCASE AS BLOB);SELECT CAST(NULL COLLATE BINARY AS INTEGER) FROM rt0 WHERE (((PRINTF(0.7668668062968255))-(CASE 0.09051410421546258  WHEN x'' THEN x'65d5' ELSE '-1858617991' END))); -- 0ms;
SELECT DISTINCT ((rt0.c1)+((rt0.c1 IN (rt0.c3, rt0.c1)))), TOTAL(AVG(HEX(DISTINCT x'0e8d'))), ((0x40ee2097) BETWEEN (CAST(rt0.c4 AS NUMERIC)) AND ((((rt0.c4, rt0.c3, rt0.c2))<((rt0.c3, 0Xffffffff898bf761, rt0.c4))))) FROM t1 INTERSECT SELECT (((((rt0.c2)>>(rt0.c4))))<((CASE WHEN '' THEN rt0.c2 ELSE rt0.c4 END))), ((CASE WHEN NULL THEN t1.c0 END) BETWEEN (((rt0.c1)AND(rt0.c4))) AND (((rt0.c1)|(rt0.c0)))), rt0.c0 FROM t1, rt0 WHERE ((+ (x'' COLLATE BINARY)));SELECT DISTINCT (((~ (rt0.c4))) NOT BETWEEN ((((('0.5848813704578492')OR(rt0.c2)))OR(rt0.c0))) AND ((rt0.c0 IN ()))) FROM t1 WHERE ((((((((0.24279183330885523)) BETWEEN ((0.679317362063266)) AND (('i4)5ⴑQ'))))OR(STRFTIME(0.7537319392730605, NULL, '-454997646', NULL, x''))))OR((((0.22983750196117592))<>(('nYi搜eₗ'))))));SELECT DISTINCT ((COUNT(rt0.c3))+(AVG(rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4) ISNULL)) NOT BETWEEN (((x'5143') NOT BETWEEN (rt0.c1) AND (rt0.c4))) AND (GROUP_CONCAT(rt0.c3))) FROM t1, rt0 WHERE (((((0Xffffffffd8d05141) IS TRUE))-((0.010710706331001352 IN ('0.4685550654894042', NULL))))); -- 0ms;
SELECT ((t1.c0 COLLATE RTRIM)==((((NULL, rt0.c4, rt0.c1))>(('H^_X!EM', t1.c0, rt0.c4))))) FROM rt0;SELECT DISTINCT 0X4cd87c15, LIKELIHOOD('', 0.25220086201232206), ((((CASE t1.c0  WHEN rt0.c2 THEN rt0.c2 END)OR(COUNT(rt0.c2))))AND(CASE WHEN t1.c0 THEN rt0.c4 ELSE rt0.c1 END)) FROM rt0;SELECT CAST(SUBSTR(rt0.c4, rt0.c3) AS REAL) FROM rt0 WHERE (CASE WHEN CAST(x'' AS NUMERIC) THEN (0x1d4ae60 IN ()) END); -- 0ms;
SELECT ALL (((rt0.c0 IN ())) BETWEEN ('F?㴆(? 5.') AND (CASE rt0.c2  WHEN rt0.c1 THEN x'' ELSE '419285060' END)) FROM t1, rt0; -- 0ms;
SELECT DISTINCT AVG(JULIANDAY(rt0.c3, rt0.c2, rt0.c0)) OVER ( PARTITION BY (((rt0.c0, rt0.c3, rt0.c2, t1.c0, rt0.c2)) BETWEEN ((rt0.c1, LIKELIHOOD(rt0.c4, 0.5677091514908544), ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c4)), 1289255957, COALESCE(DISTINCT rt0.c1, rt0.c0))) AND ((CASE WHEN t1.c0 THEN rt0.c1 ELSE -2017370396 END, ((rt0.c3)<<(t1.c0)), (((rt0.c4, rt0.c3, rt0.c2))>=((rt0.c1, rt0.c1, rt0.c3))), ((rt0.c1)=(rt0.c3)), CAST(rt0.c4 AS REAL)))), (((((rt0.c3)<=(t1.c0)), ((rt0.c2) BETWEEN (NULL) AND (rt0.c1)), ((((rt0.c1)OR(t1.c0)))AND(rt0.c4))))<=((((t1.c0)&(rt0.c3)), CAST('' AS NUMERIC), 0.9960053724274299 COLLATE BINARY)))), CASE CASE WHEN rt0.c4 THEN rt0.c4 WHEN x'bbc0fc83' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE t1.c0 END  WHEN CAST(x'' AS NUMERIC) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)) THEN GROUP_CONCAT(rt0.c4) WHEN NULL THEN CAST(rt0.c4 AS NUMERIC) ELSE (rt0.c3 IN (x'')) END, ((((t1.c0)<=(rt0.c1)))+((NOT (t1.c0)))) FROM rt0, t1 WHERE (CASE WHEN 0.6408161113615298 THEN NULL END COLLATE NOCASE); -- 0ms;
SELECT ALL (((NOT (rt0.c2)))>(((((t1.c0)AND(t1.c0)))AND(0.982780963287795)))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN t1.c0 WHEN rt0.c1 THEN '0D' WHEN rt0.c1 THEN x'' WHEN NULL THEN 'L&' ELSE t1.c0 END THEN CASE WHEN rt0.c3 THEN t1.c0 ELSE t1.c0 END END, (- (CAST(rt0.c3 AS INTEGER))), (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))>((((rt0.c4, rt0.c2, rt0.c2))==((rt0.c2, rt0.c0, rt0.c3))))), ((LIKELY(0.08430380040555974)) BETWEEN (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END) AND (CAST(rt0.c0 AS INTEGER))) FROM rt0, t1 LIMIT 419285060 OFFSET 541017973; -- 0ms;
SELECT ALL CASE ((rt0.c1) NOT NULL)  WHEN UPPER(rt0.c4) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) ELSE rt0.c0 COLLATE BINARY END FROM rt0, t1 WHERE ((NOT (CASE x'be7a'  WHEN '-769358910' THEN '' ELSE NULL END))); -- 0ms;
SELECT ALL MAX(rt0.c3) FROM rt0, t1; -- 0ms;
SELECT CASE ((rt0.c4)>(rt0.c4))  WHEN ((rt0.c0)*(rt0.c1)) THEN CASE rt0.c3  WHEN rt0.c0 THEN '-657436351' ELSE rt0.c1 END ELSE CASE rt0.c1  WHEN rt0.c3 THEN t1.c0 WHEN rt0.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE rt0.c0 END END FROM rt0, t1 ORDER BY (CAST(rt0.c4 AS REAL) IN ()), ((NOT (rt0.c3)) IN ((NOT (rt0.c3))))  NULLS LAST, (((((rt0.c4)/(t1.c0)), CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE t1.c0 END, ((t1.c0)OR(rt0.c2)), (NULL IN ()), CASE WHEN rt0.c3 THEN 0.6680460014112286 END))>((x'', 0.05408743807656713, (rt0.c3 IN ()), ((rt0.c0) NOT BETWEEN (0.6590860641837845) AND (rt0.c0)), ((t1.c0) ISNULL)))); -- 1ms;
SELECT ((rt0.c1 IN ()) IN ()) FROM t1, rt0 WHERE (((((CASE WHEN 0x3c0da647 THEN '譣\' WHEN -1940375891 THEN '-454997646' WHEN 0.1945440417832539 THEN '' ELSE 0x48414074 END)AND('2038321084' COLLATE BINARY)))OR(CASE NULL  WHEN x'7f142f1b' THEN x'00e9' END))); -- 0ms;
SELECT DISTINCT ((((((rt0.c4)&(rt0.c3)))OR(((rt0.c4) BETWEEN (']lpb,25F') AND (rt0.c3)))))OR((~ (rt0.c1)))) FROM rt0, t1 LIMIT 1623736525; -- 0ms;
SELECT DISTINCT (~ (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))) FROM t1, rt0 WHERE (CAST((((NULL, NULL, 'Ww'))==(('-657436351', x'', ''))) AS BLOB)); -- 0ms;
SELECT ALL json_object(rt0.c2 COLLATE NOCASE, rt0.c4 COLLATE BINARY), ((((rt0.c0) NOT NULL)) NOTNULL), (+ (0.944877207977827)) FROM rt0, t1 ORDER BY ((HEX(DISTINCT rt0.c4)) NOT BETWEEN ((rt0.c4 IN (rt0.c3))) AND (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))) DESC, (NOT ((NOT ('*^rVEꑜ\j')))) ASC  NULLS LAST;SELECT DISTINCT GROUP_CONCAT(((rt0.c2)|(t1.c0))) OVER () FROM t1 GROUP BY CAST(IFNULL(DISTINCT rt0.c3, '') AS INTEGER);SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((rt0.c2)>(t1.c0)))) AND ((((rt0.c0) NOT NULL)))) FROM t1, rt0; -- 0ms;
SELECT ALL ((0.012826875876591926)<(((t1.c0)IS NOT(t1.c0)))) FROM rt0, t1 LIMIT -858068712 OFFSET 1641941072; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT CAST((NOT (rt0.c3)) AS INTEGER) FROM rt0, t1 LIMIT 1639004389; -- 0ms;
SELECT DISTINCT ((rt0.c4) IS FALSE) FROM t1;SELECT DISTINCT ((((((rt0.c0)OR(rt0.c0)))OR(LIKELY(DISTINCT rt0.c2))))OR(rt0.c1)), (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END IN ((+ (rt0.c4)))), (((CASE WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END, t1.c0, NULLIF(rt0.c0, 0X16aeb986), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END, ((((rt0.c0)OR(rt0.c3)))AND(rt0.c3))))>=((rt0.c0 COLLATE BINARY, ((rt0.c2)=(rt0.c4)), CASE WHEN rt0.c4 THEN rt0.c2 END, COUNT(rt0.c3), NULL))) FROM rt0, t1; -- 1ms;
SELECT ALL (((NULL)) NOT BETWEEN (((((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c1, t1.c0, -1327203948))))) AND (((- ('?['))))), ((((rt0.c2)<<(rt0.c0))) NOT BETWEEN (rt0.c3) AND (((rt0.c0) IS TRUE))), ((((t1.c0)OR(rt0.c3)))AND(rt0.c2)) COLLATE NOCASE FROM rt0 WHERE (((CASE WHEN NULL THEN '' ELSE NULL END) NOT BETWEEN ('lr') AND (CASE WHEN x'' THEN NULL ELSE 'L&' END)));SELECT DISTINCT (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))), ((((((((((-1970980712)AND(t1.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))<=((((('')AND(rt0.c4)))OR(rt0.c4)))), ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))<=(((rt0.c0)IS('')))) FROM rt0 WHERE ((((NULL)&('-510202514')) IN ((('xFNO')IS NOT(x'')))));SELECT CAST(((t1.c0) IS FALSE) AS BLOB) FROM t1; -- 0ms;
SELECT DISTINCT ((((rt0.c0)||(t1.c0)))<=(((rt0.c1)OR(rt0.c3)))) FROM rt0, t1; -- 0ms;
SELECT ALL UPPER(DISTINCT (((0.8918933089323806))>((rt0.c3)))) FROM t1, rt0; -- 0ms;
SELECT AVG(GROUP_CONCAT((+ (x'')))) FROM t1 WHERE ((((~ (0.8530975105623253))) IS TRUE)) ORDER BY (((((((('-309752989')AND((rt0.c2 IN (rt0.c3, rt0.c1)))))OR(((rt0.c0)||(rt0.c1)))))OR(((t1.c0) NOT NULL))))OR(CAST(t1.c0 AS BLOB)));SELECT x'' FROM t1; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c3 AS BLOB)) NOT NULL) FROM rt0; -- 0ms;
SELECT CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE FROM rt0, t1 WHERE ((+ ((('-1436443828') BETWEEN (0.36592912973935265) AND (NULL))))); -- 0ms;
SELECT (rt0.c0 IN (rt0.c3, rt0.c1, rt0.c1)) COLLATE NOCASE, ((((0Xffffffffa1363d06)*(rt0.c1))) NOT NULL), json_extract(rt0.c4 COLLATE NOCASE, TRIM(t1.c0)) FROM rt0, t1 WHERE (((((('-43408584')) NOT BETWEEN ((0.042625891228192825)) AND ((NULL)))) NOTNULL)); -- 0ms;
SELECT ALL CASE WHEN (~ (rt0.c2)) THEN 0.7381028844254879 WHEN rt0.c1 THEN SUM(rt0.c2) WHEN (+ (rt0.c0)) THEN 0.24279183330885523 COLLATE NOCASE ELSE ((rt0.c4)OR(rt0.c0)) END, CAST((rt0.c1 IN ()) AS TEXT), LOWER(((rt0.c1)/(rt0.c0))) FROM t1, rt0 WHERE (NULL COLLATE BINARY); -- 0ms;
SELECT ALL ((LOWER(DISTINCT t1.c0))%(((((t1.c0)AND(x'')))AND(rt0.c2)))) FROM rt0;SELECT ALL (((rt0.c4, -1e500, rt0.c2)) NOT BETWEEN ((rt0.c1 COLLATE BINARY, ((t1.c0)LIKE(rt0.c4)), CAST(t1.c0 AS BLOB))) AND ((((t1.c0)||(rt0.c1)), ((((rt0.c4)OR(rt0.c3)))AND(t1.c0)), NULL))) FROM t1, rt0 WHERE (((((CAST('()' AS INTEGER))OR('-2038743047' COLLATE BINARY)))AND((NULL IN ())))); -- 0ms;
SELECT COALESCE((rt0.c4 IN (rt0.c0)), ((rt0.c1)|(rt0.c1))), ((((((((1190329679)OR(CASE WHEN rt0.c1 THEN t1.c0 ELSE t1.c0 END)))OR(((rt0.c1)GLOB(rt0.c0)))))AND(GROUP_CONCAT(rt0.c1))))OR(MAX(rt0.c4))), ((((rt0.c0) BETWEEN (0.1389167566294739) AND (t1.c0)))/(TRIM(DISTINCT rt0.c1))) FROM rt0, t1 WHERE (((NOT (NULL)) IN ())); -- 1ms;
SELECT ALL (NOT (rt0.c2)), (((t1.c0, (NOT (rt0.c0)), ((t1.c0) BETWEEN (rt0.c2) AND (t1.c0))))<>((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END, CAST(t1.c0 AS BLOB), rt0.c1))), ((load_extension(rt0.c4))+(rt0.c1 COLLATE BINARY)) FROM rt0, t1 WHERE ((NOT (LIKE('R/쮌埊%yai', '', 'C'))));SELECT MIN('1920019729'), CASE WHEN ((rt0.c0)OR(rt0.c1)) THEN (- (rt0.c2)) END, rt0.c3, COUNT(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c4)))AND(t1.c0)))OR(rt0.c2))) OVER ( ORDER BY SUBSTR(((rt0.c3)*(t1.c0)), (rt0.c1 IN ())), CASE CAST(rt0.c2 AS TEXT)  WHEN ((((((((rt0.c2)OR(rt0.c0)))AND(t1.c0)))AND(rt0.c1)))OR(rt0.c0)) THEN 4.1928506E8 ELSE rt0.c0 END), CASE (NOT (rt0.c0))  WHEN rt0.c1 THEN (~ (NULL)) ELSE ((t1.c0)<<(rt0.c1)) END FROM rt0, t1 WHERE ((CAST(NULL AS NUMERIC) IN ())); -- 0ms;
SELECT COUNT(CAST('-9223372036854775808' AS TEXT)) OVER (), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM, (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (0.2703654556961871) AND (rt0.c1))))) FROM rt0, t1 GROUP BY CASE -1.858617991E9  WHEN ((((((((rt0.c0)OR(t1.c0)))AND(t1.c0)))OR(x'')))AND(rt0.c3)) THEN CASE WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 ELSE NULL END WHEN COALESCE(rt0.c1, rt0.c1) THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) WHEN rt0.c4 THEN (NOT (rt0.c4)) END; -- 0ms;
SELECT MIN(((rt0.c1) IS TRUE)), ((((rt0.c0)<=(rt0.c3)))IS(((((rt0.c2)OR(rt0.c3)))AND(rt0.c4)))), AVG(rt0.c0) FROM rt0, t1 WHERE (CASE WHEN ((0.010710706331001352) IS TRUE) THEN ((NULL)<<(NULL)) WHEN (((('-1936385202')AND('OL')))OR(-8.58068712E8)) THEN NULL COLLATE BINARY WHEN (('i4)5ⴑq')<=(x'9f01')) THEN (('-858068712') IS FALSE) END) GROUP BY (((((t1.c0) ISNULL)))<=((((rt0.c3) IS TRUE)))), (+ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))), ((UNLIKELY(rt0.c1))||(0Xfffffffff348e038)); -- 1ms;
SELECT (((rt0.c1)) BETWEEN ((((NULL) BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((t1.c0 IN ())))) FROM rt0; -- 0ms;
SELECT DISTINCT 0.6183945397862135 FROM rt0 WHERE ((NOT (0.9970757942493049))) GROUP BY (NOT (((rt0.c0) IS TRUE))); -- 0ms;
SELECT ((((rt0.c4)OR(''))) NOT NULL) FROM rt0 WHERE (((((((-1858617991) IS FALSE))AND(CASE WHEN x'' THEN '-1189183658' WHEN 0.11856962723442566 THEN x'' WHEN 0.36922400498691577 THEN x'' ELSE '''pJ4' END)))OR(((NULL) BETWEEN ('Jt!Xd') AND (0.6305976478826416))))); -- 0ms;
SELECT ((((rt0.c3)<<(rt0.c1))) NOT BETWEEN ((t1.c0 IN (rt0.c0))) AND ((+ (rt0.c3)))), 0.6183945397862135, ((GROUP_CONCAT(rt0.c4)) NOT NULL), ((ABS(rt0.c1))|(((rt0.c1) NOTNULL))), CASE COUNT(*)  WHEN MIN(rt0.c3) THEN '4b5j' WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN ((rt0.c1)%(rt0.c1)) WHEN GROUP_CONCAT('}-y') THEN MIN(0.3294481057000186) ELSE (rt0.c0 IN ()) END FROM rt0, t1 WHERE (CASE (((0.36083963967764476))>=(('')))  WHEN ((NULL) ISNULL) THEN ((0.6447312285839116)&('-1410681453')) END); -- 0ms;
SELECT ((rt0.c3)==(0xffffffffdd928088)) COLLATE NOCASE COLLATE NOCASE FROM t1 WHERE (((((0x3cecaf94)/(NULL)))OR(((((0.4489177731302699)OR('-429517688')))OR(x'b7e9')))));SELECT ((rt0.c1)!=(rt0.c2)) COLLATE BINARY, ((((rt0.c4)+(rt0.c0)))-(rt0.c2 COLLATE BINARY)), CASE (- (rt0.c4))  WHEN (((rt0.c3, rt0.c4, rt0.c1)) NOT BETWEEN ((t1.c0, x'', rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c0))) THEN CASE WHEN rt0.c4 THEN t1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN t1.c0 END WHEN CASE t1.c0  WHEN x'' THEN rt0.c0 ELSE '1600270019' END THEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)) WHEN rt0.c4 COLLATE RTRIM THEN rt0.c3 ELSE CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 ELSE t1.c0 END END FROM rt0, t1 WHERE (TRIM(DISTINCT ((x'')-(NULL)))) ORDER BY rt0.c1; -- 0ms;
SELECT ALL ((rt0.c3)>(x'')) FROM t1;SELECT DISTINCT (+ (CAST(rt0.c0 AS TEXT))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c3)) NOT BETWEEN (('-960449407')) AND ((t1.c0))) AS TEXT), SUM(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) OVER (), (((rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0)))) AND ((((rt0.c1)GLOB(rt0.c0))))) FROM t1, rt0 WHERE (CAST('-1281067941' AS INTEGER)) ORDER BY (((rt0.c4)<(rt0.c1)) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt0.c2 IN ())))>=((CAST(rt0.c0 AS INTEGER)))), ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c3))) IS TRUE), GROUP_CONCAT(((t1.c0)=(rt0.c1))) FROM t1;SELECT DISTINCT rt0.c3 FROM t1, rt0 LIMIT -4865241 OFFSET 70999690; -- 1ms;
SELECT DISTINCT x'', CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC), CASE '-1949261383'  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END COLLATE NOCASE FROM rt0, t1 WHERE (CASE (- (x''))  WHEN ((((((((0X68a713a3)AND('')))OR('130052191')))AND('1007527495')))AND('92079676')) THEN ((NULL)*(x'')) END); -- 0ms;
SELECT CAST(rt0.c2 AS REAL) FROM rt0, t1 WHERE (((('㿹}' IN ())) BETWEEN (((((x'a8f4')OR(x'')))OR(x''))) AND ((+ (0.09051410421546258))))); -- 0ms;
SELECT 'L&' FROM rt0 WHERE (LIKELIHOOD((('os1l') NOTNULL), 0.12212714843527328)) LIMIT -309752989; -- 0ms;
SELECT ALL (- (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)))AND(0.6510764414920274)))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT t1.c0 FROM t1, rt0 WHERE (((((x'a667') BETWEEN (0.6305976478826416) AND ('')))>=(HEX(DISTINCT NULL)))); -- 0ms;
SELECT DISTINCT ((t1.c0 IN ()) IN ()) FROM rt0 WHERE (((((0Xffffffffb86cf79d IN (0.36922400498691577))))!=((((NULL) NOT NULL))))); -- 0ms;
SELECT DISTINCT (+ (CAST(t1.c0 AS TEXT))), (('''	_Q*I5')||(((rt0.c4)GLOB(rt0.c4)))), ((((CASE WHEN t1.c0 THEN rt0.c2 ELSE 0.6408161113615298 END)OR((x'' IN ()))))OR((t1.c0 IN (rt0.c4)))) FROM t1;SELECT DISTINCT ((- (rt0.c0)) IN ()) FROM t1 WHERE (CAST((0.8289168165035167 IN ()) AS BLOB)); -- 0ms;
SELECT CASE ((x'')>(rt0.c0))  WHEN (('')<<(rt0.c3)) THEN ((rt0.c2)+(rt0.c4)) END, (+ (0x2deb0a46)), CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END AS REAL) FROM rt0, t1; -- 0ms;
SELECT DISTINCT ((t1.c0 COLLATE NOCASE) NOT NULL) FROM rt0, t1 WHERE ((((-1.949261383E9, -1949261383, -5.10202514E8)) BETWEEN (((((0Xfffffffff76c5049)) NOT BETWEEN ((x'3abe')) AND ((0.6175492349539436))), CAST(-7.4721105E8 AS INTEGER), (('-1953430275')&(x'')))) AND (((((((((((((('L&')OR(0.012826875876591926)))OR(NULL)))OR(0.416327013553742)))OR(x'')))AND('-577601400')))AND(NULL)), IFNULL(1e500, x''), CASE '-178347996'  WHEN '0.1389167566294739' THEN 0.8093256198980531 END)))) ORDER BY rt0.c3 DESC; -- 0ms;
SELECT DISTINCT ((((rt0.c0)IS(rt0.c3)))IS('196976723')) FROM t1, rt0 LIMIT -255816876 OFFSET 1443489993; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS INTEGER) COLLATE RTRIM FROM rt0, t1 WHERE (((('', '', x'')) BETWEEN (((('?[') IS TRUE), ((1282683331)||(NULL)), (('380549510')<(x'f2372a42')))) AND (((((0.5435696932280897, '960349796', '1914885025', 1.191574334E9, NULL)) NOT BETWEEN ((NULL, 1.946706972E9, 0X1b424dc0, '-1106153140', '0D')) AND ((0.5697370906523159, -1.410681453E9, '-255816876', x'', NULL))), CASE WHEN x'' THEN x'04fb' END, (0.9668914695349315 IN ()))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN '1443489993' THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN t1.c0 WHEN t1.c0 THEN rt0.c4 END)GLOB(((rt0.c1) IS TRUE))), (((rt0.c0 IN ())) BETWEEN (((rt0.c1)IS(t1.c0))) AND ('')), rt0.c4 FROM t1;SELECT LEAD(((0.7735101631712296) IS TRUE), x'70895407', ((rt0.c4 COLLATE RTRIM)/(rt0.c0))) OVER ( ORDER BY '㢘SH', t1.c0 ASC  NULLS FIRST), x'', (- (rt0.c2)) COLLATE NOCASE, (((NULL IN ('1639004389', rt0.c0)))+(((rt0.c3) NOT NULL))), ((UNLIKELY(rt0.c0)) IS FALSE) FROM rt0, t1 WHERE (((x'' COLLATE NOCASE) NOT BETWEEN ((('ꙕ5') BETWEEN (NULL) AND (0.5121238089484368))) AND ((NULL IN (NULL, 0x188c4771))))); -- 0ms;
SELECT ALL ((((rt0.c1)<(rt0.c1)))!=(CAST(rt0.c1 AS BLOB))) FROM rt0, t1 WHERE ((((('-1970980712') BETWEEN (0.946531775013734) AND (NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT (~ (rt0.c1)), CAST(((((t1.c0)AND(rt0.c3)))OR(x'')) AS INTEGER), (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0.9102442674928795 THEN rt0.c1 WHEN rt0.c0 THEN NULL ELSE t1.c0 END)) FROM rt0 WHERE (((x'' COLLATE NOCASE) NOT BETWEEN (UNLIKELY(DISTINCT 0.7666029028790551)) AND (((0X3d3d5cd6)-(NULL)))));SELECT DISTINCT RTRIM(((rt0.c3) NOTNULL)) FROM rt0 WHERE (LIKELY(DISTINCT ((x'')|('-43408584')))); -- 0ms;
SELECT CASE rt0.c0  WHEN GROUP_CONCAT(t1.c0) THEN COUNT(0.038050589473772045) ELSE ((0X5e785da5)>=(t1.c0)) END FROM t1, rt0; -- 0ms;
SELECT ALL ((CASE WHEN '' THEN rt0.c1 END) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN rt0.c4 ELSE rt0.c3 END) AND ((('370327803') IS FALSE))) FROM rt0, t1; -- 0ms;
SELECT CAST(x'' AS TEXT) FROM t1 WHERE (SUBSTR((~ (NULL)), (('0.11856962723442566') BETWEEN ('1060829346') AND (NULL)))); -- 0ms;
SELECT MAX('-847077859') COLLATE NOCASE FROM t1, rt0 WHERE (CASE WHEN (x'b7f3' IN ('-1106153140')) THEN (((((((('{+2\{+')OR(NULL)))AND(0.04855731061698887)))OR(NULL)))OR(0.012826875876591926)) ELSE SQLITE_COMPILEOPTION_USED('1022144404') END) ORDER BY (((NULL, rt0.c4, rt0.c4))>(('휮\nr', rt0.c4, rt0.c1))) COLLATE BINARY  NULLS LAST; -- 0ms;
SELECT DISTINCT x'', TYPEOF(DISTINCT CAST(4.66265685E8 AS TEXT)), SUM(CASE rt0.c2  WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN 'laO' END) FROM rt0 WHERE (CASE NULL  WHEN NULL THEN NULL END COLLATE BINARY);SELECT DISTINCT TOTAL(((rt0.c4)LIKE(t1.c0))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT CAST(0Xffffffffbea159ba AS BLOB) COLLATE RTRIM, GROUP_CONCAT((rt0.c2 IN (rt0.c0, 0.788871859730418))) OVER (), (((((((((NOT (rt0.c0)))AND(COUNT(*))))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN 'X[' THEN -926895795 WHEN rt0.c1 THEN rt0.c0 END)))AND(TOTAL(rt0.c3))))OR(SUM(rt0.c1))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((0.9429056540146461 IN (t1.c0)))%(((x'2b1b')GLOB(t1.c0))))) OVER () FROM t1 WHERE (CAST((x'' IN (0Xffffffffb5c59560)) AS INTEGER)) LIMIT 56119101; -- 0ms;
SELECT ((((rt0.c0) IS TRUE))>=((rt0.c4 IN ()))), ((MIN(rt0.c1))IS NOT((rt0.c3 IN (rt0.c0)))), 0.1344024090640381 FROM t1, rt0 WHERE ((((0.3192293083875358 IN ()))!=(TRIM(x'', -1.7976931348623157E308)))); -- 0ms;
SELECT ALL ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) COLLATE RTRIM, CASE WHEN x'' THEN ((rt0.c3) BETWEEN (x'') AND (rt0.c1)) ELSE (t1.c0 IN (rt0.c2)) END, ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(x'7604')))OR(NULL))) IS FALSE) FROM t1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)<>(rt0.c0)))/(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)) FROM rt0, t1; -- 0ms;
SELECT ALL ((((0.6006018073555601)AND(rt0.c3)))OR(rt0.c4)) COLLATE RTRIM FROM rt0 GROUP BY CASE (((rt0.c2))=((rt0.c0)))  WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c1)||(rt0.c2)) ELSE LIKELIHOOD(rt0.c1, 0.29367368834427465) END HAVING ((((t1.c0)%(t1.c0)))%((((rt0.c3, rt0.c1, rt0.c1))>=((rt0.c4, '554140298', rt0.c4)))));SELECT DISTINCT (CAST(x'' AS REAL) IN (CAST(rt0.c0 AS NUMERIC), ((rt0.c4)<>(rt0.c4)), (+ (rt0.c2)))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT rt0.c1 COLLATE NOCASE FROM rt0, t1; -- 0ms;
SELECT ((rt0.c3 COLLATE BINARY) NOT BETWEEN (ABS(rt0.c4)) AND (CAST(t1.c0 AS REAL))) FROM rt0;SELECT json_type((rt0.c0 IN ())) FROM t1, rt0 WHERE ((((x'6eee')) BETWEEN ((NULL COLLATE NOCASE)) AND (((+ ('110816108')))))); -- 0ms;
SELECT DISTINCT CASE (+ (rt0.c3))  WHEN TOTAL(rt0.c0) THEN rt0.c4 ELSE ((NULL)||(rt0.c3)) END FROM t1, rt0 WHERE (x''); -- 0ms;
SELECT ((CAST(rt0.c2 AS NUMERIC)) NOTNULL) FROM rt0 WHERE (((CAST(x'' AS NUMERIC))LIKE(((0.1663747274532006)OR(''))))) LIMIT -143573566; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c2)OR(rt0.c3)) THEN ((rt0.c4)>(rt0.c2)) ELSE ((rt0.c0)-(x'')) END, json_patch((t1.c0 IN ()), (((rt0.c1)) BETWEEN ((t1.c0)) AND ((rt0.c4)))), ((rt0.c4 IN (rt0.c1)) IN ()) FROM rt0, t1 WHERE ((+ (((x'')<<('[^sPGd'))))) LIMIT -1617557351 OFFSET -178347996; -- 0ms;
SELECT DISTINCT (t1.c0 COLLATE BINARY IN ()) FROM rt0 WHERE (((((((((LIKELY(-1149490418))OR(CASE WHEN '506731003' THEN x'' END)))OR(((NULL)|('684611744')))))OR(CASE WHEN -1.10615314E9 THEN x'5e1f' END)))OR(CHANGES()))); -- 0ms;
SELECT DISTINCT (CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END IN ((NOT (rt0.c4)))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT ((((']_M\nU')AND((((rt0.c3, rt0.c2, t1.c0))>((rt0.c0, rt0.c1, rt0.c3))))))AND(((rt0.c1)*(t1.c0)))) FROM t1, rt0 WHERE (((CAST('466265685' AS TEXT)) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((NOT (rt0.c3))))>=((NULL))), CASE ((rt0.c2) NOT NULL)  WHEN '' THEN MAX(rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c1) WHEN '895334982' THEN ((rt0.c3)<=(0.8316837460011403)) WHEN AVG(t1.c0) THEN (- (t1.c0)) WHEN (t1.c0 IN ()) THEN (rt0.c4 IN (rt0.c2)) WHEN ((rt0.c1)|(t1.c0)) THEN ((((rt0.c2)AND(0.012826875876591926)))AND(t1.c0)) ELSE ((rt0.c3) IS TRUE) END, (rt0.c0 COLLATE NOCASE IN (TYPEOF('FALSE'), COUNT(t1.c0))) FROM t1, rt0 WHERE (CASE ((x'')IS NOT(x''))  WHEN ((NULL) IS FALSE) THEN 'm4' COLLATE NOCASE ELSE ((-1766718398)+(NULL)) END); -- 1ms;
SELECT DISTINCT rt0.c1, (((((((((0.8146472179480388 IN ()))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c4) BETWEEN (t1.c0) AND (rt0.c2)))))AND(((t1.c0)+(t1.c0)))))AND(rt0.c0)), ((((rt0.c1)==(rt0.c1)))||(((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))), ((rt0.c1)>>(TRIM(rt0.c2, t1.c0))), TRIM(rt0.c4, rt0.c4) COLLATE NOCASE FROM rt0, t1 WHERE (((0x2c7533d3 COLLATE NOCASE) NOT BETWEEN ((x'' IN ())) AND ((('/I') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)OR(rt0.c1)))IS NOT(AVG(t1.c0))), (NOT (rt0.c0)) COLLATE RTRIM, CHAR(MIN(-963996334)) FROM t1, rt0 WHERE (((0.03762138625912792 IN (NULL)) IN (((('-255816876'))>=(('-2049213375')))))); -- 0ms;
SELECT DISTINCT COUNT(((((((((rt0.c2)OR(rt0.c0)))AND(t1.c0)))OR('A')))AND(rt0.c2))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt0 WHERE (UPPER(DISTINCT NULL COLLATE BINARY));SELECT ALL (((((t1.c0, rt0.c4, rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c4))!=((t1.c0, rt0.c0, rt0.c4, rt0.c3, t1.c0, rt0.c0, rt0.c2)))) BETWEEN (((((rt0.c3)AND(rt0.c3)))OR(t1.c0))) AND (((rt0.c3)IS NOT(rt0.c2)))) FROM rt0;SELECT DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE BINARY FROM t1, rt0 WHERE (x''); -- 0ms;
SELECT ALL x'' FROM rt0, t1 WHERE (0.09051410421546258); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT MAX(rt0.c2), x''), SUM(((((t1.c0)OR(rt0.c4)))OR(rt0.c4))), (((rt0.c4)) BETWEEN ((((rt0.c1) NOTNULL))) AND ((x''))), ((((COUNT(*))AND(rt0.c0 COLLATE BINARY)))AND(CAST(rt0.c2 AS NUMERIC))), ((((rt0.c1) IS FALSE)) ISNULL) FROM rt0 ORDER BY t1.c0  NULLS LAST;SELECT DISTINCT CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 1.199233248E9 ELSE rt0.c4 END COLLATE BINARY FROM t1;SELECT ((- (rt0.c2)) IN ()), ((('Q.do', rt0.c2, rt0.c3)) NOT BETWEEN ((((((((((NULL)AND(t1.c0)))AND(t1.c0)))OR(rt0.c0)))AND(rt0.c2)), ((rt0.c2)IS NOT(rt0.c4)), ((rt0.c2)GLOB(rt0.c2)))) AND ((CASE rt0.c0  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c1 IN (rt0.c2)), ((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))AND(x'84f3')))AND(rt0.c2))))), ((rt0.c0) BETWEEN (((rt0.c3)IS NOT(t1.c0))) AND ((rt0.c3 IN ('')))) FROM t1, rt0 WHERE (((('', '-143573566', 0Xffffffff933dc00a)) NOT BETWEEN ((346233234, UNLIKELY(DISTINCT 0.5121238089484368), ((x'') BETWEEN (NULL) AND (0x2c7533d3)))) AND ((NULL COLLATE NOCASE, ((8.95334982E8) BETWEEN (0.18056755010069614) AND (0.740175939777047)), CAST('-373064252' AS TEXT))))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS LAST, ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)) COLLATE NOCASE ASC  NULLS LAST, (NOT (rt0.c0 COLLATE NOCASE)) ASC; -- 1ms;
SELECT DISTINCT (((- (rt0.c2)))!=(IFNULL(rt0.c0, t1.c0))) FROM rt0, t1 WHERE ((((('Gw')>(x'')))>>((((((((('')AND('-1079769568')))AND(NULL)))AND('')))AND(NULL))))); -- 0ms;
SELECT ALL LOWER(DISTINCT ((t1.c0)>>(rt0.c3))) FROM t1;SELECT DISTINCT ((-577601400) NOT NULL) FROM rt0, t1 WHERE ((CASE WHEN 0.2854623620830703 THEN 1.027431638E9 WHEN x'' THEN '휮\nr' WHEN 0.7459356134497827 THEN NULL ELSE 0.6202598975521835 END IN ((0xffffffffd2298c7a IN (x'2a69')), (((('-2070688884')OR(NULL)))OR(0.8824119424267516))))); -- 0ms;
SELECT (+ ((rt0.c4 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT '1871571842' FROM t1 WHERE (NULL COLLATE BINARY COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT TIME(((rt0.c1) ISNULL), GROUP_CONCAT(t1.c0), (NOT (rt0.c1))) FROM rt0 LIMIT 1946706972;SELECT DISTINCT ((((CAST(rt0.c4 AS INTEGER))OR(((rt0.c1) IS TRUE))))AND(0.8462640206052896)) FROM t1, rt0 ORDER BY ((((((rt0.c4)OR(t1.c0)))OR(rt0.c4)))<<(rt0.c1)); -- 0ms;
SELECT ALL rt0.c3 FROM t1;SELECT DISTINCT CUME_DIST() OVER (), COUNT(*), (((rt0.c4)LIKE(rt0.c0)) IN ((((rt0.c3)) BETWEEN ((t1.c0)) AND ((NULL))), NULL)) FROM t1;SELECT LAG(((((((((rt0.c0)OR(((rt0.c1) BETWEEN (0.5793977865238514) AND (rt0.c3)))))OR('-1532997300')))OR(CAST(t1.c0 AS TEXT))))OR(((rt0.c4) IS FALSE))), ((CAST(rt0.c4 AS INTEGER)) NOT BETWEEN ((~ (rt0.c0))) AND (((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))), ((rt0.c0)IS(((((((((((((t1.c0)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))OR('')))OR(rt0.c2))))) OVER (), CAST(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c4)) AS BLOB), ((((t1.c0 IN ())))=((rt0.c3))) FROM t1, rt0 WHERE ((+ ((((('1109547567')AND(NULL)))OR('-1981950297'))))) ORDER BY (((LIKE(rt0.c0, rt0.c2)))<((((rt0.c3)%(rt0.c0))))) DESC, (+ (x'7e62' COLLATE RTRIM))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (rt0.c0 IN (rt0.c1, '+9qJ?P.u')) COLLATE RTRIM FROM t1 WHERE (((-3.02632187E8) NOT BETWEEN (x'') AND (0X5ff9599e)) COLLATE RTRIM);SELECT 0xffffffffa99fedbf FROM rt0, t1; -- 0ms;
SELECT DISTINCT NULL FROM t1 WHERE (CASE WHEN json('0qu') THEN ((NULL) BETWEEN (NULL) AND (NULL)) ELSE ((NULL)-(1.282683331E9)) END);SELECT ALL CAST((rt0.c0 IN (rt0.c2, rt0.c3)) AS BLOB) FROM t1 CROSS JOIN rt0 ON CAST(rt0.c1 COLLATE BINARY AS REAL) WHERE (((CASE 'Ꙕ5'  WHEN NULL THEN '1090657101' WHEN '-1936385202' THEN 0.39499635387449505 WHEN NULL THEN 0.2703654556961871 ELSE '-1981950297' END) NOT BETWEEN ((- (-2.017370396E9))) AND (CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT ALL CAST((((rt0.c4, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, t1.c0, '31006555')) AND ((rt0.c2, rt0.c4, rt0.c4))) AS BLOB) FROM t1;SELECT (((- (rt0.c4))) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c4, rt0.c3, t1.c0)) NOT BETWEEN ((rt0.c0, t1.c0, x'6c3383f8')) AND ((rt0.c2, rt0.c1, rt0.c1)))) IS FALSE) FROM t1, rt0 WHERE ('42\a8') ORDER BY '-295539756'  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((t1.c0, rt0.c0, rt0.c3)) BETWEEN ((t1.c0, NULL, rt0.c2)) AND ((rt0.c0, 0.3303314410031798, NULL)))))=((((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) FROM t1, rt0; -- 0ms;
SELECT ((((rt0.c2)GLOB(rt0.c4)))&(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), 'wE2X.{A+&', (~ (rt0.c0 COLLATE RTRIM)) FROM rt0 ORDER BY MAX(rt0.c1 COLLATE NOCASE, LOWER(rt0.c4)) DESC; -- 0ms;
SELECT ALL ((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) FROM rt0, t1 WHERE ((((+ (-8.47077859E8))) BETWEEN (((0.23757510575189145) NOTNULL)) AND ((((('90139859')AND(x'82aac648d39f')))OR(NULL))))) GROUP BY (((((rt0.c4 IN (rt0.c2)))AND(t1.c0 COLLATE RTRIM)))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) HAVING ((((rt0.c3) NOTNULL))/(CAST(rt0.c0 AS REAL))); -- 0ms;
SELECT ALL ((CAST(t1.c0 AS INTEGER)) NOTNULL) FROM t1, rt0 WHERE (CASE (NOT (0Xffffffffd9774f0f))  WHEN (0.5697370906523159 IN (754388305)) THEN NULL COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE BINARY) BETWEEN (((((((((rt0.c3)OR(t1.c0)))OR(t1.c0)))OR(rt0.c1)))OR(rt0.c0))) AND ((NOT (rt0.c3)))), SUM((~ (t1.c0))) OVER (), AVG(((rt0.c1)>(rt0.c0))) FROM t1 WHERE (((((x'') IS TRUE))OR(((((x'')AND(x'')))OR(0.36922400498691577)))));SELECT ALL ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (CAST(0.5118423840585453 AS REAL)) AND (rt0.c2)), 1.920019729E9, CASE rt0.c2  WHEN (rt0.c4 IN ('0.9970757942493049')) THEN CAST(t1.c0 AS TEXT) ELSE CAST(rt0.c3 AS TEXT) END FROM t1 WHERE (NULLIF(DISTINCT 5.65594336E8, (('') ISNULL)));SELECT ((DATETIME(rt0.c1, rt0.c4, rt0.c1))&(rtreenode(rt0.c3, rt0.c0))), MAX(SUM(((rt0.c2) BETWEEN (t1.c0) AND (t1.c0)))), x'' FROM t1 WHERE (((x'' COLLATE NOCASE)||(CASE WHEN x'' THEN 'V/' END)));SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) NOT BETWEEN (TOTAL(t1.c0)) AND (TRIM(DISTINCT NULL, NULL))) FROM t1;SELECT ALL ((MAX(t1.c0)) BETWEEN (-908087516) AND (rt0.c3)), rt0.c0, ((CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END)||(t1.c0 COLLATE BINARY)) FROM t1, rt0 WHERE (CAST(((0xffffffffffb5c327)==(x'')) AS INTEGER)); -- 0ms;
SELECT ALL (rt0.c2 COLLATE BINARY IN ()), NTH_VALUE(((((LIKE(rt0.c0, rt0.c2, '-'))AND((rt0.c0 IN (rt0.c0)))))OR(((t1.c0)IS(rt0.c2)))), (((rt0.c3 IN ()))+(((t1.c0)/(t1.c0))))) OVER ( RANGE  UNBOUNDED PRECEDING), COUNT(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) FROM t1, rt0 WHERE (((((x'') NOT BETWEEN (0.5116005804803536) AND (NULL))) IS TRUE)) ORDER BY (rt0.c1 COLLATE BINARY IN ());SELECT DISTINCT (((TRIM(t1.c0, rt0.c2), ((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)), DATETIME(t1.c0, rt0.c1, rt0.c3, rt0.c1, t1.c0)))>(((rt0.c2 IN ()), MAX(rt0.c4), (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))), ((MIN(t1.c0)) NOT BETWEEN ((('-510202514') BETWEEN (t1.c0) AND (rt0.c1))) AND ((rt0.c1 IN ()))), ((((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c4)))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4)))))AND(LAST_INSERT_ROWID())))AND(((rt0.c0)/(rt0.c0)))) FROM t1;SELECT CUME_DIST() OVER (), (~ (((rt0.c3)|(t1.c0)))), SUM(((((rt0.c1)AND('/b')))OR(rt0.c3))) OVER () FROM rt0, t1 WHERE ((((-387304))<((((((((((0xfffffffff348e038)AND('0.6305976478826416')))OR(0xfffffffff98a07b6)))OR('-1617557351')))AND('aLI,2RB')))))); -- 0ms;
SELECT ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)&(((x'') NOT BETWEEN (t1.c0) AND (rt0.c3)))), ((CAST(rt0.c4 AS INTEGER))IS NOT(rt0.c2)), (((((rt0.c2)AND(rt0.c3)), ABS(DISTINCT rt0.c2), (rt0.c4 IN ())))>((((t1.c0) NOT BETWEEN (0.8631028605947392) AND (rt0.c2)), ((rt0.c2)AND(t1.c0)), rt0.c4))), ((rt0.c4) NOT BETWEEN (rt0.c3) AND (t1.c0)) COLLATE NOCASE, ((CAST(rt0.c4 AS INTEGER))IS(rt0.c0)), ((((rt0.c0) ISNULL)) BETWEEN ((rt0.c0 IN ())) AND (0xffffffffd1c457ca COLLATE RTRIM)), (- (((rt0.c4) NOT BETWEEN (NULL) AND (t1.c0)))) FROM t1;SELECT ALL ((((((rt0.c2)GLOB(rt0.c2)))AND(TOTAL(rt0.c3))))AND(((t1.c0) IS TRUE))), RANK() OVER (), (((rt0.c4))>=((rt0.c2))) COLLATE NOCASE FROM t1, rt0; -- 0ms;
SELECT DISTINCT LIKELY((rt0.c2 IN (t1.c0))), (NOT (((t1.c0) NOTNULL))), NULLIF(DISTINCT rt0.c1, rt0.c0) COLLATE RTRIM FROM rt0 WHERE (((((NULLIF(0X61b138e5, 0xffffffffc01fbc09))OR(((x'') NOTNULL))))AND(((x'') IS FALSE)))) ORDER BY CAST(((t1.c0)==(rt0.c1)) AS BLOB) DESC  NULLS FIRST;SELECT ALL LIKELIHOOD(DISTINCT ((rt0.c3) IS FALSE), 0.3157278870609199) FROM t1, rt0 WHERE (((CASE WHEN 0.1663747274532006 THEN 0.7711759668632813 ELSE NULL END) NOT BETWEEN (CAST(x'b3d7' AS BLOB)) AND ((('-657436351') NOT BETWEEN (x'') AND (NULL))))); -- 1ms;
SELECT (+ (MAX(t1.c0))), TRIM(DISTINCT ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1))), (((((('895334982')OR(t1.c0)))AND(rt0.c2))) NOTNULL) FROM rt0, t1 WHERE ((((('<H|NꈄI반⧚')IS(1.191574334E9)))>=((('1550418161')<<(0.11729289779549923))))) GROUP BY (COALESCE(rt0.c4, rt0.c4) IN ()); -- 0ms;
SELECT DISTINCT (+ (((t1.c0)LIKE(rt0.c3)))) FROM t1, rt0 GROUP BY ((+ (0.7666029028790551)) IN ()) HAVING ((((TOTAL(rt0.c1))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c1 COLLATE NOCASE)); -- 0ms;
SELECT COUNT(*) OVER (), rt0.c2, GROUP_CONCAT(((rt0.c4)/(NULL))) OVER () FROM rt0, t1; -- 0ms;
SELECT ((((rt0.c1) ISNULL)) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (AVG(rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT 'extiU', NULL, ((CASE rt0.c2  WHEN rt0.c4 THEN t1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN t1.c0 ELSE rt0.c3 END)==(((rt0.c4) IS FALSE))) FROM rt0 WHERE (((((x'') BETWEEN (0.06417372793144571) AND (0.526589569640167))) IS FALSE));SELECT ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)))<(((rt0.c3)LIKE(rt0.c4)))) FROM t1, rt0; -- 0ms;
SELECT ALL (((((((((rt0.c4)OR(rt0.c2)))OR(t1.c0)))OR(rt0.c0)))OR(rt0.c0)) IN ((rt0.c3 IN ()), '805452434')) FROM rt0 INNER JOIN t1 ON ((((((((((((PRINTF(rt0.c0))AND(rt0.c0)))AND(((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))))OR(((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))))OR('j3')))AND(ABS(NULL))))OR(rt0.c0 COLLATE BINARY)) WHERE (((CASE -7.6935891E8  WHEN 0.7312434344052074 THEN x'6ea0' END) BETWEEN (-469700213) AND (((((NULL)OR(1199629030)))OR('R+\I3G'))))); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((rt0.c2)LIKE(rt0.c3))) FROM t1, rt0 WHERE (((((CASE '1060829346'  WHEN NULL THEN 'ꙕ5' ELSE x'46c0' END)OR(((((0.8446270600326421)OR(-2.55816876E8)))AND('-1410681453')))))AND(x'3a9b' COLLATE RTRIM))); -- 0ms;
SELECT ALL GROUP_CONCAT(((t1.c0)IS NOT(rt0.c2))) OVER () FROM rt0, t1; -- 0ms;
SELECT ALL json_quote(rt0.c3 COLLATE BINARY), (+ ((~ (rt0.c1)))), rt0.c4 FROM rt0 WHERE ((((- ('1443489993'))) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE (rt0.c0 IN ())  WHEN MAX(rt0.c4) THEN TRIM(DISTINCT rt0.c3) END FROM rt0, t1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1; -- 0ms;
SELECT DISTINCT (- ((NOT (0.8289168165035167)))), ((SQLITE_SOURCE_ID())<((+ (rt0.c0)))), CAST(ABS(rt0.c2) AS BLOB) FROM t1;SELECT ALL ((((t1.c0) IS FALSE)) ISNULL), (- (((rt0.c3)%(rt0.c4)))), COUNT(*) FROM t1 WHERE ((+ ('-797717561')));SELECT DISTINCT ((((((((((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))OR(rt0.c4 COLLATE NOCASE)))AND((NOT (rt0.c3)))))AND((((rt0.c4))!=((rt0.c4))))))AND(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))) FROM rt0, t1 ORDER BY ((CAST(rt0.c4 AS TEXT)) BETWEEN ((('')-(rt0.c1))) AND (((rt0.c0)/(t1.c0))))  NULLS FIRST, rt0.c2  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt0.c0) ISNULL))>>(((rt0.c2)AND(rt0.c0)))) FROM rt0, t1 WHERE (SUBSTR(x'', 5.6119101E7) COLLATE RTRIM); -- 0ms;
SELECT ALL CAST(rt0.c4 AS BLOB) FROM rt0, t1 WHERE ((~ (CASE NULL  WHEN '' THEN NULL END))); -- 0ms;
SELECT rt0.c2, (NOT (rt0.c4)) COLLATE NOCASE, (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END IN ()) FROM t1 WHERE ((((x'')) NOT BETWEEN (((((0.7512434402546138))==((NULL))))) AND ((((('d/'))!=(('1007527495')))))));SELECT DISTINCT ((CAST(rt0.c0 AS TEXT))<(rt0.c0 COLLATE RTRIM)) FROM rt0, t1 WHERE (LOWER(DISTINCT CAST(x'' AS INTEGER))); -- 0ms;
SELECT DISTINCT (('1004015289')*(CAST(rt0.c1 AS REAL))) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS BLOB)) BETWEEN ((~ (rt0.c3))) AND ((+ (rt0.c4)))), (LTRIM(rt0.c4) IN (UNLIKELY(rt0.c0))), AVG((('b')AND(rt0.c3))) OVER () FROM rt0, t1 WHERE (((((-1.327203948E9)) BETWEEN ((NULL)) AND ((x'e47d'))) IN ())); -- 0ms;
SELECT DISTINCT LEAD(CASE WHEN rt0.c2 THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)) ELSE (rt0.c0 IN (rt0.c4)) END, CAST(rt0.c1 AS BLOB), (((t1.c0) IS TRUE) IN ())) OVER (), LIKELY((((rt0.c2)) BETWEEN (('0.8093256198980531')) AND ((rt0.c0)))), ((rt0.c4 COLLATE BINARY) IS FALSE) FROM t1, rt0 WHERE ((- (x'6b0f')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((rt0.c2)AND(rt0.c4)) IN ()) FROM t1 WHERE ((((((('-366141710') BETWEEN ('') AND (0xfffffffff179d0e7)))OR(((0.2854623620830703)<<(NULL)))))AND(((NULL)<<('c{Vr94m]嶥'))))) GROUP BY json_array('1581029676', (NOT (rt0.c2))) HAVING (('') NOT BETWEEN (0.9159866555721407) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0))));SELECT DISTINCT MAX(COALESCE(t1.c0, t1.c0)) FROM t1, rt0 LIMIT -234184981 OFFSET 1282683331; -- 1ms;
SELECT DISTINCT x'0904007e' FROM t1, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c0)!=(rt0.c3)), ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))AND(t1.c0)), CASE WHEN t1.c0 THEN rt0.c3 END))>((SUM(rt0.c4), -2.038743047E9, rt0.c1))) FROM t1, rt0; -- 0ms;
SELECT (- (CAST(rt0.c2 AS TEXT))), NULLIF(DISTINCT (rt0.c2 IN (rt0.c0)), TOTAL(rt0.c1)), CAST(CASE rt0.c4  WHEN '1548375011' THEN rt0.c0 END AS TEXT) FROM t1, rt0 WHERE (x''); -- 0ms;
SELECT CASE WHEN (~ (0.416327013553742)) THEN COUNT(t1.c0) ELSE ((rt0.c3)&(rt0.c3)) END FROM rt0, t1 ORDER BY (rt0.c0 COLLATE NOCASE IN (NULL)) ASC; -- 0ms;
SELECT ALL (((((rt0.c4, rt0.c1, rt0.c0))<>((rt0.c4, rt0.c4, rt0.c4)))) IS FALSE), CAST(rt0.c0 AS BLOB) COLLATE RTRIM, AVG(((t1.c0)/(rt0.c4))) FROM t1;SELECT DISTINCT GROUP_CONCAT((NOT (t1.c0))) OVER (), ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 END)OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))), rt0.c3 FROM rt0;SELECT DISTINCT LOWER(((((rt0.c0)OR(rt0.c0)))AND(1083789941))) FROM t1, rt0; -- 0ms;
SELECT ((rt0.c1)|((((rt0.c0))!=((x'62f6'))))) FROM rt0, t1 GROUP BY ((((((rt0.c2)OR(rt0.c0)))AND(t1.c0))) IS TRUE) HAVING (~ (0.8619355217987908)) ORDER BY (((((((((t1.c0 IN ()))AND(((rt0.c1) NOTNULL))))AND(((NULL)>>(t1.c0)))))AND(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))))OR((('E') ISNULL))) DESC; -- 0ms;
SELECT DISTINCT (('684611744') BETWEEN (((rt0.c4) BETWEEN (t1.c0) AND (rt0.c2))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)), -1.200818275E9, LAST_VALUE(LIKELIHOOD(json_remove(rt0.c3, rt0.c2), 0.5381912468106984)) OVER ( ORDER BY LIKELY(DISTINCT x'a23404b7') ASC  NULLS LAST) FROM t1, rt0 WHERE ((((x'1058' IN ())) NOT BETWEEN (((NULL) NOT NULL)) AND (CASE WHEN '1' THEN 0.5107065355805235 WHEN 0.14906770929378865 THEN 'C)>.' WHEN '[^sPGd' THEN 0.7269720650458773 ELSE x'' END))) ORDER BY 0.2740856137594291  NULLS LAST LIMIT -1015433165 OFFSET -143896503; -- 0ms;
SELECT DISTINCT TRIM(((t1.c0)<<(rt0.c3))) FROM t1 WHERE (IFNULL(CAST(NULL AS INTEGER), ((0.6872304811260735) ISNULL)));SELECT ((((((t1.c0)>>(rt0.c1)))OR(rt0.c4)))OR((((rt0.c0))!=((t1.c0))))) FROM t1 ORDER BY t1.c0 ASC;SELECT (NOT (((((((((rt0.c0)AND(rt0.c4)))AND(t1.c0)))AND(rt0.c1)))AND(t1.c0)))), ((((CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c4 THEN NULL ELSE rt0.c2 END)OR((((0Xffffffffeb7306a7))<((rt0.c4))))))OR(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 WHEN t1.c0 THEN rt0.c4 WHEN t1.c0 THEN rt0.c2 END)), (TOTAL(rt0.c3) IN ()) FROM t1, rt0 LIMIT -1940375891; -- 0ms;
SELECT DISTINCT DATETIME(ABS(rt0.c3), COUNT(*), ((rt0.c4)||(rt0.c2))), 0.9610782248881682, 'l!YZ|챚io', ((((t1.c0)AND(((t1.c0)<(0.62377381553863)))))AND(t1.c0 COLLATE BINARY)), AVG('') OVER () FROM t1 WHERE (((((0.06903762317323014) NOTNULL))-(('-1940375891' IN ()))));SELECT DISTINCT RANK() OVER () FROM rt0 WHERE (DATETIME(x'' COLLATE RTRIM, (('凘oWy灟}')<<(0.1344024090640381)), '-178347996' COLLATE NOCASE)) ORDER BY ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (0.474415462795008) AND (CAST(rt0.c0 AS BLOB))), SUBSTR(x'', rt0.c3 COLLATE RTRIM) DESC  NULLS FIRST; -- 0ms;
SELECT ALL TOTAL((((rt0.c2))<((rt0.c3))) COLLATE RTRIM) OVER (), (- (t1.c0)) COLLATE NOCASE, (((('554140298')-(rt0.c3)))+((rt0.c3 IN (rt0.c3, rt0.c2)))) FROM t1, rt0 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB)) ISNULL), (~ ((rt0.c3 IN (rt0.c4)))), ABS(((rt0.c1) IS FALSE)), ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR((((rt0.c2))<=((t1.c0))))))AND(SUM(rt0.c0))), (((+ (rt0.c3))) BETWEEN (((0.5228014952138857)>(t1.c0))) AND (((rt0.c4)&(rt0.c1)))) FROM rt0;SELECT ((((rt0.c1)!=(rt0.c4)))OR(rt0.c1)) FROM rt0, t1 WHERE (((((x'acce' COLLATE BINARY)AND(('-1970672708' IN ()))))AND((('-1721551631') ISNULL)))) GROUP BY (~ (CASE rt0.c0  WHEN 0.5202342537533299 THEN t1.c0 ELSE x'' END)) HAVING x''; -- 1ms;
SELECT DISTINCT ((rt0.c0) NOT BETWEEN ((((rt0.c1, rt0.c4, rt0.c1))=((rt0.c1, rt0.c1, 'ty')))) AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE t1.c0 END)) FROM t1 WHERE (TRIM(NULL) COLLATE BINARY) ORDER BY json_object(json(rt0.c2), ((rt0.c2)*(rt0.c0)), ((rt0.c4)<<(x'')), HEX(rt0.c2)) ASC;SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((x'')) AND ((json_valid(NULL)))) FROM rt0, t1; -- 0ms;
SELECT ALL (((((NOT (rt0.c1)))AND(rt0.c3 COLLATE BINARY)))AND(rt0.c2 COLLATE RTRIM)), CASE rt0.c3  WHEN rt0.c2 THEN (((rt0.c4))<=((rt0.c2))) WHEN (rt0.c2 IN (rt0.c2, rt0.c2)) THEN INSTR(rt0.c2, rt0.c3) WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c3)!=(rt0.c3)) ELSE '-1281067941' COLLATE NOCASE END, AVG((rt0.c1 IN (rt0.c1, rt0.c2))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON UPPER(((rt0.c1) ISNULL)) WHERE (((((((0.04533007425589364)) NOT BETWEEN (('-225875576')) AND (('1063902790')))))<=(((- ('0.416327013553742')))))); -- 1ms;
SELECT DISTINCT (((((rt0.c1))<=((rt0.c3))))>=(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) FROM t1 ORDER BY rt0.c3;SELECT DISTINCT ((CAST('jFs蓒6X8' AS REAL)) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c1)) FROM rt0 LIMIT -1206795355 OFFSET -1864015269; -- 0ms;
SELECT DISTINCT ((rt0.c4)||(t1.c0)) COLLATE BINARY FROM rt0 WHERE (UPPER('1641941072') COLLATE RTRIM);SELECT DISTINCT (((CAST(rt0.c0 AS INTEGER)))<(((((t1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) FROM t1 WHERE (((((((0.907453766436446)OR('')))AND(0.4205755961265474)))>=(CAST(x'' AS REAL))));SELECT DISTINCT CASE ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0))  WHEN MIN(rt0.c1) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN TRIM(rt0.c3) THEN ((rt0.c0) NOT NULL) WHEN TYPEOF(DISTINCT rt0.c0) THEN rt0.c4 COLLATE RTRIM ELSE (rt0.c0 IN ()) END FROM t1 LIMIT 650857080 OFFSET 333491536;SELECT rt0.c1, ((((AVG(NULL))OR(CAST(rt0.c3 AS BLOB))))AND(NULL)), (((~ (t1.c0))) NOTNULL) FROM t1;SELECT DISTINCT TOTAL(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c2))) FROM t1;SELECT DISTINCT LIKELY(CAST(rt0.c3 AS TEXT)), (+ (((0Xffffffff9339d293)/(t1.c0)))), CUME_DIST() OVER () FROM rt0;SELECT ((((rt0.c3)>(-1.858617991E9)))>=(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))) FROM t1;SELECT ((((((rt0.c2)OR('-302632187')))AND(0.5784527937109879)))%((rt0.c0 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(MIN(x'') AS TEXT), DENSE_RANK() OVER (), ((CAST(0.09051410421546258 AS REAL))%(((((rt0.c3)OR(rt0.c4)))AND(x'')))) FROM t1, rt0 WHERE (((CASE WHEN '-287568418' THEN '201655508' END) NOTNULL)) LIMIT 453106828 OFFSET 352192170; -- 0ms;
SELECT DISTINCT TOTAL(COUNT(*)) FROM rt0, t1;SELECT '-459414047' FROM rt0, t1 WHERE ((((('-0.0')%(''))) BETWEEN ((((((((('')AND(NULL)))OR(NULL)))AND(0xffffffffcb21a4c8)))AND(-1991980149))) AND (((((((((x'3398')AND(NULL)))OR('㢘SH')))OR(NULL)))AND(x''))))); -- 0ms;
SELECT ((((((((t1.c0)AND(rt0.c2)))OR(rt0.c4)))OR(t1.c0)))AND(t1.c0)) COLLATE BINARY, (((((NOT (rt0.c1)))AND(((rt0.c4)<=(t1.c0)))))AND(LOWER(DISTINCT x''))), CHAR(CASE rt0.c4  WHEN rt0.c1 THEN NULL ELSE rt0.c3 END) FROM rt0, t1 WHERE (((CAST('' AS INTEGER)) NOTNULL)); -- 0ms;
SELECT DISTINCT t1.c0, ((rt0.c3)%(rt0.c2)) COLLATE BINARY, ((1626291773 COLLATE RTRIM)<(((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))), ((((rt0.c0) NOT BETWEEN ('1191574334') AND (t1.c0)))<(CAST(t1.c0 AS REAL))), ((CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 END)&('684611744')) FROM rt0 NOT INDEXED WHERE ((((((((((('') IS TRUE))AND('-1970672708' COLLATE NOCASE)))AND(CAST(x'' AS INTEGER))))OR(((NULL)%(NULL)))))AND((((('')AND(NULL)))OR(NULL))))) GROUP BY ((((rt0.c4)OR(t1.c0)))||(((rt0.c3)>=(rt0.c3)))) HAVING ((((rt0.c4)=(x''))) NOT NULL);SELECT ALL SUM(((0.8883750425173156) NOT BETWEEN (rt0.c4) AND (rt0.c4))), COUNT(*), ((((((((((((rt0.c1)AND(rt0.c1)))OR(0.6680460014112286)))OR(rt0.c2)))AND(rt0.c3)))OR(346114282)))AND((NOT (rt0.c0)))) FROM rt0 WHERE ('-769358910') ORDER BY rt0.c1  NULLS LAST, (- (((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c0)))) DESC  NULLS FIRST;SELECT DISTINCT ((((rt0.c3)OR(rt0.c1 COLLATE RTRIM)))OR(0X477ad8e0)) FROM t1 WHERE (CAST(CAST(1600270019 AS NUMERIC) AS REAL)) ORDER BY (~ ((~ (rt0.c4)))) ASC  NULLS FIRST;SELECT DISTINCT ((rt0.c0) BETWEEN (CASE WHEN rt0.c3 THEN t1.c0 END) AND (0.9674979257241177)) FROM t1, rt0 WHERE ((((~ ('-1106153140')))+(((0.8465711210912386)%(x'053e'))))) GROUP BY (((t1.c0)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) AND (((rt0.c0 IN ())))) LIMIT 1584946597; -- 0ms;
SELECT ALL NULL COLLATE RTRIM FROM t1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ()))/(((((((((NULL)AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)))AND(x'')))) FROM t1 WHERE ((1285560720 IN (x'')) COLLATE RTRIM COLLATE NOCASE);SELECT DISTINCT (~ ((~ (x'')))) FROM rt0 LIMIT 1156930317; -- 0ms;
SELECT ALL LENGTH((- (rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((t1.c0 IN ())))>=((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2))))) FROM rt0, t1; -- 0ms;
SELECT (NULL IN (AVG(rt0.c0), CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)) FROM t1, rt0 GROUP BY ((((CASE WHEN rt0.c1 THEN rt0.c4 END)AND(((rt0.c1)||(rt0.c4)))))OR(((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) HAVING ((x'') NOT BETWEEN (((rt0.c2)%(rt0.c3))) AND (COUNT(x''))); -- 0ms;
SELECT ((UPPER(DISTINCT t1.c0))+(x'107d')), rt0.c4, ((((rt0.c3)|(t1.c0))) IS FALSE) FROM t1, rt0 GROUP BY (((NOT (rt0.c3)))>=(((rt0.c2) IS TRUE))) HAVING TOTAL(LOWER(rt0.c4)); -- 0ms;
SELECT DISTINCT ((((t1.c0)OR(rt0.c4)))AND(t1.c0)) COLLATE BINARY, CASE (~ (rt0.c4))  WHEN MAX(rt0.c1) THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END ELSE rt0.c0 END, ((((rt0.c1) NOTNULL)) BETWEEN (t1.c0) AND (rt0.c0)) FROM t1 INNER JOIN rt0 ON (((((((0.7269720650458773)) NOT BETWEEN ((rt0.c2)) AND ((t1.c0))))AND(((t1.c0)+(rt0.c1)))))AND(CAST(t1.c0 AS INTEGER))) GROUP BY (~ (CAST('' AS REAL))) HAVING (~ (NULL)); -- 0ms;
SELECT ALL json_patch(rt0.c2 COLLATE BINARY, ((rt0.c3)GLOB(t1.c0))), CASE WHEN (('-1783305580')<<(rt0.c3)) THEN CAST(rt0.c1 AS TEXT) WHEN ((rt0.c3) NOT NULL) THEN ABS(DISTINCT t1.c0) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c1)>=(rt0.c0)) END, ((rt0.c0)>=(rt0.c2)) COLLATE BINARY FROM rt0 WHERE ((((x'b0a1')!=('2038321084')) IN ()));SELECT DISTINCT '565594336' FROM t1, rt0 ORDER BY ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE NOCASE ASC  NULLS LAST, (~ (rt0.c2)) ASC, rt0.c1 COLLATE RTRIM DESC  NULLS LAST, ((CASE WHEN rt0.c4 THEN t1.c0 END) ISNULL) ASC; -- 0ms;
SELECT DISTINCT (((((t1.c0))=((rt0.c2)))) NOT BETWEEN ((- (rt0.c3))) AND (CASE rt0.c2  WHEN x'' THEN rt0.c2 END)) FROM t1, rt0 WHERE (((- ('')) IN ((- (NULL))))) ORDER BY ((((((((((((((((rt0.c1)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)))AND(CASE WHEN '-E	' THEN rt0.c3 ELSE t1.c0 END)))AND(((rt0.c1) NOT NULL))))OR(((0xfffffffff0c08b54) ISNULL))))AND((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c0)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((t1.c0)) AND (((rt0.c4 IN ())))), ((CAST(rt0.c0 AS BLOB)) BETWEEN (NULL) AND ((t1.c0 IN ()))), GROUP_CONCAT(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) FROM t1, rt0 WHERE ('1443489993'); -- 0ms;
SELECT DISTINCT UPPER(rt0.c1 COLLATE NOCASE), ((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE RTRIM COLLATE RTRIM, rt0.c3 FROM rt0, t1; -- 0ms;
SELECT DISTINCT UNICODE((NULL IN ())) FROM rt0, t1 ORDER BY (+ (((t1.c0) ISNULL))); -- 0ms;
SELECT DISTINCT ((((rt0.c4)GLOB(rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0))) AND ((rt0.c2 IN ()))) FROM rt0, t1 WHERE ((((((x'', 593141404, '0.042625891228192825'))<((NULL, '', 0.36183125026054086)))) BETWEEN ((+ ('1!l峖|fw<'))) AND ((~ (0.7085812983066259))))) ORDER BY (- (((-0.0)&(rt0.c3)))); -- 0ms;
SELECT DISTINCT (~ (((rt0.c4)!=(rt0.c0)))) FROM t1 LIMIT 1112835998 OFFSET 321350210;SELECT DISTINCT LOWER(DISTINCT ((rt0.c2)||(rt0.c3))), (((rt0.c2))==((TRIM(DISTINCT rt0.c3, '560360559')))), CHANGES() FROM t1, rt0 WHERE (CAST(SQLITE_COMPILEOPTION_USED(NULL) AS REAL)) GROUP BY ((CAST(rt0.c4 AS TEXT))*(((rt0.c1) IS TRUE))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS TEXT)) ISNULL) FROM rt0, t1 WHERE ((((0X49804c22)) NOT BETWEEN ((CASE NULL  WHEN 'Tl糁\nk\r' THEN x'' ELSE 0.8627330467583317 END)) AND (('-487065947' COLLATE RTRIM)))) LIMIT 1265570143; -- 0ms;
SELECT ALL AVG(x'') OVER ( PARTITION BY (((((- (rt0.c0)))OR(((rt0.c2) IS TRUE))))OR(CAST(NULL AS INTEGER))), ((((rt0.c0) NOT NULL))>>((rt0.c0 IN ())))), ((rt0.c1 IN ()) IN (MIN(rt0.c4))), SUM((rt0.c2 IN ())) OVER () FROM rt0, t1 WHERE ((((((NULL, NULL, NULL, NULL, NULL)) NOT BETWEEN ((-1858617991, 'S*E', '4', 0.8818328052389897, NULL)) AND (('', x'a406', 0x4e8b73e6, x'', 0xffffffffd003864a))))==((('')GLOB(x''))))); -- 0ms;
SELECT DISTINCT CASE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END  WHEN ((t1.c0) NOTNULL) THEN PRINTF(t1.c0) WHEN MIN(rt0.c2) THEN ((rt0.c0) NOT NULL) WHEN (rt0.c4 IN (rt0.c0, rt0.c0)) THEN AVG(rt0.c3) END FROM t1, rt0 WHERE (((NULL) ISNULL)); -- 0ms;
SELECT ALL (((((rt0.c0)>=(rt0.c1))))>=((rt0.c1))) FROM t1, rt0 WHERE (((((((((CASE x''  WHEN 0.8131573448310181 THEN NULL END)OR((((NULL))==((895334982))))))OR(CAST(x'' AS REAL))))AND(((x'')>>(x'aeaa')))))OR(-1825992773 COLLATE RTRIM))) LIMIT -747211050 OFFSET -1825059214; -- 0ms;
SELECT DISTINCT ((x'98a2')GLOB(LOWER(rt0.c0))) FROM t1, rt0 GROUP BY NULL, IFNULL(DISTINCT CAST(rt0.c3 AS TEXT), ((rt0.c0)<<('-769358910'))), t1.c0; -- 0ms;
SELECT ALL (((rt0.c2 IN ('', rt0.c4)))|(rt0.c4 COLLATE RTRIM)), NULL, (- ((rt0.c3 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT SUM(CASE WHEN rt0.c2 THEN t1.c0 WHEN NULL THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN t1.c0 THEN 0.053077652611970505 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END), UPPER(DISTINCT CAST(rt0.c2 AS TEXT)), MAX(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END) FROM t1;SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((rt0.c4)LIKE(rt0.c0)))) AND ((((rt0.c0)IS(NULL))))), IFNULL(((rt0.c3) ISNULL), ''), CASE rt0.c0  WHEN ((rt0.c4) NOTNULL) THEN t1.c0 WHEN json_patch(rt0.c3, rt0.c0) THEN (((t1.c0, t1.c0, rt0.c4, t1.c0, t1.c0))<((rt0.c4, rt0.c3, rt0.c4, rt0.c4, t1.c0))) WHEN ((rt0.c1) NOT NULL) THEN (((rt0.c0, x'', rt0.c2)) BETWEEN ((0.5208319694461218, rt0.c2, rt0.c0)) AND ((rt0.c2, t1.c0, rt0.c4))) END FROM rt0, t1 WHERE ((((x'')) NOT BETWEEN ((((x'') NOT BETWEEN (0.9960053724274299) AND (x'')))) AND ((CASE -2.87568418E8  WHEN x'' THEN x'edff' ELSE 1824609977 END)))) GROUP BY CAST(((rt0.c0)IS(t1.c0)) AS INTEGER), x'1435', ((CAST(t1.c0 AS TEXT)) IS FALSE), ((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c4)))<<(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)), (((rt0.c4)) BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (t1.c0)))) AND (((NOT (rt0.c1))))); -- 0ms;
SELECT DISTINCT CASE (((rt0.c0, rt0.c0, rt0.c3))<((rt0.c4, NULL, t1.c0)))  WHEN MIN(rt0.c4) THEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(t1.c0)) END, ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) COLLATE RTRIM, (NOT (0.62377381553863 COLLATE BINARY)), (AVG(rt0.c2) IN ()), ((CASE rt0.c4  WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN rt0.c2 WHEN x'' THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (SUM(rt0.c0)) AND (((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) FROM rt0;SELECT DISTINCT COALESCE(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(rt0.c4)))OR(NULL)), ((rt0.c1) NOT BETWEEN (-4.29517688E8) AND (rt0.c3)), highlight(t1.c0, 'bp', rt0.c0, t1.c0), rt0.c4), (((((rt0.c4, rt0.c2, rt0.c0))=((rt0.c3, rt0.c3, rt0.c4)))) NOTNULL), (rt0.c2 IN (json_array_length(rt0.c4, rt0.c3), rt0.c3)) FROM t1, rt0 WHERE ((((-5.776014E8)*(-1164758457)) IN ())) LIMIT -1117499271; -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c4 IN ()) THEN ((rt0.c4)||(rt0.c3)) END FROM t1;SELECT ALL CAST(t1.c0 AS NUMERIC) FROM rt0, t1 ORDER BY ((((((t1.c0)OR(rt0.c2)))OR(rt0.c3)))-(rt0.c4)) ASC  NULLS FIRST, CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)) AS INTEGER) ASC, ((x'55de')LIKE(((rt0.c4)<=(rt0.c0)))) ASC; -- 0ms;
SELECT ALL rt0.c0 FROM rt0, t1 GROUP BY GLOB(NULL, ((t1.c0) ISNULL)) HAVING INSTR(rt0.c4 COLLATE NOCASE, (rt0.c4 IN (NULL))); -- 0ms;
SELECT DISTINCT ((((rt0.c4)<(rt0.c4))) NOTNULL), rt0.c1, ((MIN(rt0.c1))|(9.2079676E7)) FROM t1 LIMIT -178347996;SELECT DISTINCT ((((rt0.c3)>=(rt0.c4)))<=(CASE WHEN rt0.c1 THEN rt0.c3 END)) FROM rt0, t1 WHERE ((((+ (0.4529977556614626)))>>((((('-255816876')AND(x'')))OR(NULL))))) ORDER BY rt0.c0 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt0.c1))>((rt0.c1))) COLLATE BINARY, rt0.c3, (((+ (rt0.c0))) ISNULL) FROM rt0, t1; -- 0ms;
SELECT DISTINCT json_insert(rt0.c1, (- (rt0.c0)), CAST(rt0.c3 AS NUMERIC), ((t1.c0)OR(rt0.c4)), t1.c0) FROM t1;SELECT DISTINCT ((((((((t1.c0)OR(rt0.c1)))OR(rt0.c0)))OR(t1.c0)))AND(rt0.c0)) COLLATE RTRIM, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM, ((- (rt0.c2)) IN ()) FROM rt0 WHERE (0.3506552446432598) LIMIT 895334982 OFFSET 367512873;SELECT DISTINCT (((CASE WHEN rt0.c3 THEN '' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((((rt0.c2)OR(t1.c0)))AND(rt0.c2)), ((rt0.c3)>=(rt0.c0))))<=((((t1.c0)<=(t1.c0)), (rt0.c3 IN ()), ABS(DISTINCT rt0.c0)))), CAST(INSTR(t1.c0, rt0.c3) AS INTEGER), CASE ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))  WHEN HEX(rt0.c4) THEN (('-309752989') NOT NULL) ELSE (rt0.c4 IN ()) END FROM t1, rt0 GROUP BY (NOT (CAST(rt0.c2 AS REAL))); -- 0ms;
SELECT ((((((rt0.c2, t1.c0, rt0.c1)) BETWEEN ((rt0.c0, t1.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0)))))!=((LENGTH(rt0.c4)))), ((rt0.c4) IS FALSE), (((rt0.c0)<=(rt0.c0)) IN ()) FROM t1, rt0; -- 0ms;
SELECT DISTINCT (- (rt0.c3)) FROM rt0, t1 WHERE (((((1.060829346E9)<=('')))/((((((((('''u')OR('PgRDM')))AND('-1949261383')))AND(0.4096820998348095)))OR(x'043a'))))); -- 0ms;
SELECT (((~ (rt0.c1))) NOTNULL) FROM rt0 INNER JOIN t1 ON t1.c0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM t1 GROUP BY rt0.c2 HAVING (((rt0.c2 IN ())) IS FALSE);SELECT DISTINCT COUNT(((rt0.c3) IS FALSE)) OVER () FROM rt0 WHERE ((- (x'')) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT ((((x'')>>(0.12832046160317978)))==(t1.c0 COLLATE NOCASE)), ((((t1.c0)-(rt0.c1))) IS TRUE), x'' FROM t1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3)&(0xfffffffff55ea024)) FROM rt0, t1 WHERE ((((NULL IN ()))OR((((x'', '-1987315871', 0.8898761323772135)) NOT BETWEEN ((0xfffffffff7713dc2, x'', 'a')) AND ((NULL, x'', 1.090657101E9)))))) INTERSECT SELECT DISTINCT ((NULLIF('466265685', rt0.c1)) BETWEEN (MAX(rt0.c2)) AND (((rt0.c3)>=(t1.c0)))) FROM t1, rt0 WHERE (((x'02525635')||(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c0)))>>(((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c3)))), AVG((((t1.c0))<=((rt0.c0)))) OVER (), (NOT (((t1.c0) IS TRUE))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM)&(RTRIM(t1.c0))) FROM t1, rt0 WHERE (CAST(NULL AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT (((((rt0.c0, rt0.c2, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c0, rt0.c3)) AND ((t1.c0, rt0.c2, rt0.c4)))) ISNULL) FROM rt0 WHERE (((((((((((1.289255957E9)<=(x'')))OR(LIKELIHOOD(DISTINCT 0.5748895764452202, 0.7663665838723497))))AND(NULL COLLATE NOCASE)))AND(((('~Z떓go煌)n', NULL, x'd172')) NOT BETWEEN ((NULL, 1.623736525E9, 0.15408347906296405)) AND (('-255816876', '-514580894', '419285060'))))))OR(CAST('' AS REAL))));SELECT COALESCE(CASE WHEN rt0.c4 THEN rt0.c4 END, (((rt0.c3)) BETWEEN ((NULL)) AND ((rt0.c2)))) FROM t1, rt0; -- 0ms;
SELECT (+ (GROUP_CONCAT(rt0.c3))), (- (0.8137652101430294)), (- (SUM(x''))) FROM t1, rt0; -- 4ms;
SELECT DISTINCT ((0.8766516208644999)>>(rt0.c0 COLLATE BINARY)) FROM t1 ORDER BY (~ (((0Xffffffffb86cf79d)GLOB(rt0.c3)))) DESC  NULLS FIRST;SELECT ALL ((rt0.c4) NOT BETWEEN (t1.c0) AND (rt0.c1)) COLLATE BINARY, NTH_VALUE((CASE WHEN x'aa00f25e' THEN rt0.c1 END IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), x'') OVER (), (((~ (rt0.c2))) BETWEEN (CASE x''  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) FROM rt0, t1;SELECT NULLIF(DISTINCT rt0.c1 COLLATE BINARY, (- (rt0.c3))) FROM t1, rt0 WHERE (((((NULL) IS TRUE))IS NOT(((0.3502048150201347)<(NULL))))) LIMIT 285705694; -- 0ms;
SELECT ALL rt0.c4 FROM t1 WHERE (((((x'', NULL, '')) BETWEEN ((0.14867532819885587, NULL, x'777f')) AND ((0.6157189693537861, NULL, x''))) IN ()));SELECT DISTINCT ((((rt0.c3)<(t1.c0))) IS TRUE) FROM rt0;SELECT CASE CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(rt0.c1 AS NUMERIC) END FROM rt0 WHERE (-860502437); -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((COUNT(rt0.c3))) AND ((((rt0.c4) IS FALSE)))) FROM t1 GROUP BY ('' IN (((rt0.c3) BETWEEN (rt0.c3) AND ('ovg')), (rt0.c1 IN ('-634894327')))), (((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c3, rt0.c3)))) NOT BETWEEN (t1.c0) AND ((((rt0.c0))<>((rt0.c4))))), (- (CAST(rt0.c4 AS BLOB)));SELECT DISTINCT (NOT (((rt0.c0)|(x'')))) FROM t1, rt0; -- 1ms;
SELECT ALL ((((COUNT(rt0.c2))OR(0.035067626084037795)))AND(CASE WHEN rt0.c3 THEN rt0.c1 END)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (((rt0.c1) NOT BETWEEN (rt0.c3) AND (t1.c0)))), (((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)) IN ()) FROM rt0, t1 WHERE (LIKELIHOOD(DISTINCT ((NULL)/(x'')), 0.46368761172702433)); -- 0ms;
SELECT ALL (+ (rt0.c2)), CASE WHEN ((rt0.c4) ISNULL) THEN rt0.c2 COLLATE RTRIM END, LAG(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE RTRIM, CASE WHEN ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)) THEN (rt0.c3 IN (rt0.c1)) WHEN 416230939 THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)) WHEN SQLITE_COMPILEOPTION_GET(rt0.c0) THEN CAST(rt0.c2 AS INTEGER) ELSE (x'' IN ()) END, LIKELIHOOD(DISTINCT ((rt0.c1)GLOB(rt0.c2)), 0.5233058802079655)) OVER () FROM rt0 LIMIT -769358910 OFFSET -984956546; -- 1ms;
SELECT DISTINCT load_extension(((rt0.c1)/(rt0.c2)), LTRIM(rt0.c3)), CAST(x'f7f6' COLLATE NOCASE AS REAL), (((rt0.c1)) BETWEEN ((t1.c0)) AND (((((t1.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c0)) AND ((t1.c0, rt0.c1, rt0.c1)))))), ((((CAST(rt0.c3 AS REAL))AND((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((x''))))))OR(((((rt0.c2)AND(rt0.c4)))OR('-530125670')))), 0.6092002492123926 FROM rt0;SELECT ALL ((((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (rt0.c4)) FROM rt0, t1 WHERE (((0.5062558691408706)*((+ (-522878976))))); -- 0ms;
SELECT DISTINCT CASE rt0.c0  WHEN (t1.c0 IN ()) THEN x'' ELSE CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END END FROM t1, rt0 WHERE (CASE CAST('-255816876' AS NUMERIC)  WHEN 0.43454732688196784 THEN CASE WHEN NULL THEN x'a7d9' ELSE 0.05070652206127457 END END); -- 0ms;
SELECT DISTINCT COUNT(((((rt0.c1)OR(0Xffffffff89ddd6a7)))AND(rt0.c4))) OVER () FROM t1, rt0 WHERE (CASE NULL  WHEN CAST(NULL AS BLOB) THEN (((0.4120224859834781))>=((NULL))) END); -- 0ms;
SELECT rt0.c0, (0.2692437874918252 IN ()) COLLATE NOCASE, ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 END)<(NULLIF(rt0.c4, rt0.c3))) FROM rt0, t1; -- 1ms;
SELECT DISTINCT (rt0.c4 IN (((rt0.c1)/(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((SUM(rt0.c2))IS NOT(CAST(rt0.c4 AS TEXT))), (~ ((((t1.c0, rt0.c3, t1.c0))<=((rt0.c1, rt0.c2, rt0.c2))))), rt0.c4 FROM t1 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT SUM(((t1.c0)>>(rt0.c4))) OVER () FROM rt0;SELECT DISTINCT ((((((t1.c0)/(rt0.c3)))OR((- (t1.c0)))))OR(MIN(rt0.c1))), MIN(((rt0.c1)*(t1.c0))), json(SUM(NULL)) FROM rt0, t1 WHERE (((~ (-2.55816876E8)) IN ())); -- 0ms;
SELECT ALL ((((rt0.c4)||(rt0.c2)))>(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) FROM t1;SELECT DISTINCT AVG(TRIM(t1.c0)) OVER () FROM rt0, t1 WHERE ((((((((((((0xffffffffde8c408a))>=((NULL))))AND('ꙕDジ33wK-f')))AND(((((((((((((895334982)OR('ꄰ[\(K/%')))OR(0.3169620804626121)))AND(0Xffffffffd1c457ca)))AND(NULL)))AND('')))OR(NULL)))))OR(((('b')) NOT BETWEEN ((NULL)) AND ((0.8918933089323806))))))AND((NOT ('-1410681453'))))) UNION SELECT DISTINCT ((370327803) BETWEEN (0.8329328417088625) AND ((rt0.c3 IN ()))) FROM t1; -- 0ms;
SELECT DISTINCT ((((((rt0.c4)>(rt0.c2)))AND((((t1.c0))>((t1.c0))))))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) FROM rt0, t1 NOT INDEXED WHERE (((CAST('TeyV' AS BLOB)) NOT BETWEEN ((+ (''))) AND (('-775661622' IN ())))); -- 0ms;
SELECT DISTINCT (((((rt0.c2))<>((rt0.c1)))) NOT BETWEEN ((rt0.c3 IN (t1.c0))) AND ((rt0.c4 IN ()))), MAX(NULL), 0.4274895248130751 FROM rt0, t1; -- 0ms;
SELECT DISTINCT (ABS(DISTINCT x'') IN (NULL)) FROM t1, rt0 WHERE (0.40713448281590825); -- 0ms;
SELECT DISTINCT ((CASE WHEN 0.4040908204652942 THEN rt0.c3 WHEN t1.c0 THEN t1.c0 WHEN rt0.c0 THEN t1.c0 WHEN '-302632187' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 END) IS TRUE) FROM t1;SELECT NTH_VALUE((- (((rt0.c4)/(rt0.c3)))), ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))<(MIN(rt0.c4, NULL)))) OVER ( ORDER BY rt0.c1  NULLS LAST) FROM rt0 WHERE ((+ (HEX(0.9793777180375444))));SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN ((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) AND (((rt0.c0) BETWEEN (rt0.c4) AND (t1.c0)))), LAG(((((t1.c0)-(rt0.c1)))+((t1.c0 IN ()))), NULLIF((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), '-2017370396'), (((((NOT (rt0.c0)))OR(rt0.c2 COLLATE RTRIM)))OR(((((rt0.c1)OR(t1.c0)))OR(t1.c0))))) OVER ( ROWS BETWEEN  CURRENT ROW AND ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN '''u' THEN rt0.c3 WHEN rt0.c1 THEN 0.3378483055472985 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c3)=(rt0.c4))) AND ('')) PRECEDING), x'' COLLATE RTRIM FROM rt0, t1 WHERE ((((LIKELIHOOD(NULL, 0.5722751682809798)))=(((NOT (6.84611744E8)))))) GROUP BY CASE WHEN ((rt0.c2) IS TRUE) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))) ELSE CAST(rt0.c0 AS TEXT) END HAVING rt0.c2;SELECT DISTINCT (((rt0.c0)) NOT BETWEEN (((rt0.c3 IN (rt0.c3)))) AND ((CASE WHEN rt0.c3 THEN '684611744' ELSE rt0.c4 END))), CAST(QUOTE(rt0.c3) AS TEXT), ((rt0.c4 COLLATE NOCASE) BETWEEN (((rt0.c4) NOT NULL)) AND (((rt0.c0) ISNULL))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)/(x'')) AS NUMERIC) FROM rt0, t1 WHERE (((0.9426128231945674 COLLATE RTRIM)!=(((NULL)<('-1970672708'))))); -- 0ms;
SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN ('bK') AND (LIKELIHOOD(DISTINCT t1.c0, 0.8511333247466217))) FROM t1 WHERE (((('' IN ()))*(CASE '癮FN?&vst'  WHEN 1309293265 THEN 'LVp6ꪑXf2' WHEN 0.5121238089484368 THEN x'' WHEN 0.016466611964428113 THEN '-1245342368' ELSE 0.7735101631712296 END)));SELECT DISTINCT ((((((rt0.c3)OR('1443489993')))AND(rt0.c0))) BETWEEN (((rt0.c2)LIKE(rt0.c1))) AND (COUNT(*))) FROM rt0 ORDER BY ((rt0.c2) NOTNULL) COLLATE NOCASE  NULLS LAST, ((((rt0.c4)>(0.09737608702436396)))OR(((rt0.c4) NOT BETWEEN (rt0.c2) AND (x'')))), CASE WHEN CAST(rt0.c3 AS INTEGER) THEN rt0.c3 COLLATE RTRIM WHEN LTRIM(t1.c0, rt0.c1) THEN (((rt0.c1))<>((t1.c0))) WHEN (NOT (rt0.c3)) THEN ((rt0.c0)/(rt0.c0)) ELSE (((rt0.c2))<((rt0.c3))) END  NULLS FIRST LIMIT 1600651696 OFFSET -990567534;SELECT DISTINCT (rt0.c3 COLLATE RTRIM IN ()), (((rt0.c4, rt0.c4 COLLATE RTRIM, ((t1.c0) BETWEEN (rt0.c4) AND (rt0.c0))))==((((rt0.c3)-(rt0.c3)), UNLIKELY(DISTINCT rt0.c3), 0.12183197308522131 COLLATE RTRIM))), (('jUj&Tst\nE') BETWEEN (MAX(t1.c0)) AND (((rt0.c0)<=(rt0.c0)))) FROM t1 WHERE ('-1');SELECT DISTINCT ((rt0.c1 COLLATE BINARY)IS NOT((~ (rt0.c1)))) FROM rt0, t1 WHERE (((CASE WHEN NULL THEN 0.1373382596524746 ELSE 0x38342305 END)/((NOT (NULL))))); -- 0ms;
SELECT DISTINCT AVG(CAST(rt0.c1 AS REAL)) OVER () FROM t1 WHERE (x'') ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))) BETWEEN (rt0.c1) AND (COALESCE(rt0.c0, rt0.c4))) ASC;SELECT ((CASE t1.c0  WHEN t1.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN NULL ELSE rt0.c0 END)LIKE(((rt0.c1) NOT NULL))) FROM rt0;SELECT (MIN(t1.c0) IN ()), (- (rt0.c2)), rt0.c2 FROM t1, rt0 WHERE ((((((0.6861733250823623))>=((0.24279183330885523)))) BETWEEN (((NULL) NOT BETWEEN (NULL) AND (554140298))) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (- (((rt0.c1) ISNULL))), ((GROUP_CONCAT(t1.c0))IS NOT(((rt0.c0) ISNULL))), CASE WHEN (rt0.c4 IN ()) THEN ((rt0.c1)!=(rt0.c3)) WHEN (((rt0.c4))<((rt0.c0))) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) WHEN (((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (0X2deb0a46 IN ('璆c*>%!{[+', rt0.c4)) END FROM rt0, t1 WHERE ((((((x'', NULL, -926895795))<=(('', NULL, 1.289255957E9))))LIKE(CASE ''  WHEN 'ꑜn' THEN x'b7602921' ELSE '' END))); -- 0ms;
SELECT 't5惀8~麬' FROM t1, rt0 LIMIT -892070144; -- 0ms;
SELECT (~ (rt0.c1 COLLATE RTRIM)) FROM rt0, t1; -- 0ms;
SELECT DISTINCT 'Ru8X.' FROM rt0; -- 0ms;
SELECT ALL rt0.c1, ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c3) NOT NULL)) AND (((((rt0.c1)AND(rt0.c1)))OR(rt0.c4)))), ROW_NUMBER() OVER ( ROWS BETWEEN ((((rt0.c0) ISNULL)) NOT BETWEEN (((((((((t1.c0)AND(NULL)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((0.2266054689614806)) AND ((t1.c0))))) PRECEDING AND  UNBOUNDED FOLLOWING) FROM rt0, t1; -- 0ms;
SELECT DISTINCT ((t1.c0) ISNULL) FROM rt0, t1 WHERE (CASE WHEN CASE WHEN 0.24576318463255997 THEN 0.24011211083900874 END THEN (('960349796') NOT BETWEEN (-201358913) AND (0.8386750147087825)) ELSE ((((0Xffffffff96b20442)OR('Ly(u')))OR(NULL)) END); -- 0ms;
SELECT ALL (NOT ((rt0.c4 IN ()))) FROM t1 WHERE ((((-1003162745)) NOT BETWEEN (((- (0Xffffffff96fc2922)))) AND ((((('883260995', '477163209', 'SF')) BETWEEN ((NULL, '5j떓ᑗo%q	', '^nvSof\rc㇃[]')) AND ((-1.936385202E9, '', x'9e91'))))))); -- 0ms;
SELECT ALL NTH_VALUE(json_remove((rt0.c3 IN ()), (rt0.c0 IN (rt0.c2)), CAST(rt0.c2 AS INTEGER), rt0.c3 COLLATE NOCASE, (rt0.c4 IN ()), ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2))), (~ (rt0.c0))) OVER ( ROWS rt0.c2 PRECEDING EXCLUDE GROUP) FROM rt0, t1 ORDER BY ((((rt0.c2)>=(t1.c0)))<=(rt0.c4));SELECT ALL CASE WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c1) NOTNULL) END, SUM((rt0.c2 IN ())), CAST((rt0.c2 IN (rt0.c2)) AS NUMERIC) FROM t1 WHERE (PRINTF((~ (960349796))));SELECT DISTINCT CASE WHEN x'92f81576' THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'')) ELSE (NOT (rt0.c0)) END, (((((t1.c0 IN (rt0.c4)))OR((((NULL)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))))OR(rt0.c3)), ((CAST(rt0.c3 AS INTEGER))GLOB(((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))) FROM t1 WHERE ((NOT (CASE WHEN NULL THEN NULL ELSE NULL END)));SELECT DISTINCT ((((((t1.c0) NOTNULL))OR(rt0.c4)))OR((NOT (rt0.c2)))), CASE WHEN rt0.c3 THEN rt0.c2 WHEN t1.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 END COLLATE BINARY, (NOT ((NOT (rt0.c1)))) FROM t1, rt0 WHERE (((IFNULL(DISTINCT x'', NULL))LIKE(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (- ((rt0.c2 IN ()))), MIN((NOT (rt0.c0))), rt0.c4 FROM rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c4 AS INTEGER))LIKE(((t1.c0)>(rt0.c2)))) FROM t1 WHERE ((((HEX(x'759c'), NULL COLLATE RTRIM, (('0.3067311543325172') BETWEEN ('-1327203948') AND (''))))>=((((0xffffffffabeab593) NOT BETWEEN ('Lj>') AND (0.6646775052267294)), (('dB*G蹉')LIKE(x'')), (((('l!YZ|챚io')OR(0.8514233048563598)))OR('cjeBoY{')))))) LIMIT -1514084629 OFFSET 206010223;SELECT DISTINCT CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS REAL) FROM t1;SELECT ALL (((((x'9a57')||(t1.c0)), ((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)), ((t1.c0)IS NOT(rt0.c4)), ((((0.45636845847385255)AND('-1970980712')))OR(rt0.c1)), ((((rt0.c0)AND(rt0.c2)))OR(t1.c0))))<>((rt0.c4, (~ (rt0.c4)), ((rt0.c3)IS(t1.c0)), CHAR(rt0.c1), ((rt0.c3) NOT NULL)))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT ((((((rt0.c4)AND(t1.c0)))AND(rt0.c4)))/((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))) FROM t1 WHERE ((((((7.7037831E8)) NOT BETWEEN ((NULL)) AND (('Vzᝯ(''ㄷ')))) NOT NULL)) GROUP BY rt0.c3 COLLATE BINARY, CASE ((rt0.c3) NOTNULL)  WHEN (rt0.c0 IN ()) THEN ((t1.c0) ISNULL) ELSE (x'c6da' IN ()) END, CAST(0x7408641c AS BLOB) HAVING ((t1.c0)LIKE(rt0.c1)) COLLATE RTRIM;SELECT CAST(MIN(NULL, rt0.c4) AS BLOB) FROM t1 WHERE (((CASE '684611744'  WHEN '⪯\rdM6''_h-' THEN 0.36653133972147 END)-(((NULL) ISNULL))));SELECT DISTINCT CAST((((rt0.c1))>((t1.c0))) AS TEXT), SUM(rt0.c1 COLLATE BINARY) OVER (), COUNT(*) OVER () FROM rt0 WHERE (((('Rx')) BETWEEN ((CAST(x'c32a' AS REAL))) AND ((((0.37491659126263877)GLOB(-733917557))))));SELECT ALL COUNT(HEX(rt0.c4)) OVER ( ORDER BY CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))  WHEN ((rt0.c4)&(rt0.c0)) THEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE t1.c0 END ELSE ((((t1.c0)OR(rt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST), ((((((rt0.c3)OR(t1.c0)))OR(rt0.c1))) IS FALSE), CASE WHEN SUM(rt0.c2) THEN JULIANDAY(rt0.c1, rt0.c0, rt0.c4) WHEN ((((rt0.c0)AND(t1.c0)))OR(rt0.c0)) THEN (((rt0.c2))<>((rt0.c1))) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c4)*(rt0.c0)) ELSE SUM(rt0.c3) END, rt0.c4 COLLATE RTRIM, ((((rt0.c1) ISNULL))*(CAST(rt0.c4 AS NUMERIC))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT COUNT(((t1.c0) IS FALSE)) OVER () FROM rt0 GROUP BY (((rt0.c4, rt0.c0, rt0.c3)) BETWEEN (((('8b⻃*z	') BETWEEN (0.1740748641752865) AND (rt0.c3)), 0.7786239101471498, (((rt0.c0))==((rt0.c1))))) AND ((((rt0.c2)>(rt0.c3)), (rt0.c3 IN ()), ((rt0.c2) NOT NULL)))), ((((((((UPPER(DISTINCT rt0.c2))AND((rt0.c3 IN ()))))OR(0.8498893730636138)))OR(((((t1.c0)AND(0.021253408098015902)))OR(rt0.c3)))))AND(CASE WHEN rt0.c2 THEN 0.22080515642001386 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END)), (((rt0.c2 IN ())) ISNULL) HAVING CASE WHEN (rt0.c2 IN (rt0.c1)) THEN (t1.c0 IN ()) END;SELECT DISTINCT rt0.c4 FROM t1, rt0; -- 0ms;
SELECT DISTINCT (((t1.c0 IN ()))/(json_array_length(rt0.c3, x''))) FROM rt0 WHERE (CAST(TRIM(0.41744052936483134, '<') AS TEXT));SELECT ALL ((((rt0.c4) ISNULL)) IS FALSE) FROM rt0; -- 0ms;
SELECT ALL ((t1.c0)<(rt0.c2)) COLLATE RTRIM FROM rt0;SELECT ALL (((t1.c0)) BETWEEN ((((rt0.c3)LIKE(rt0.c1)))) AND ((((rt0.c0)+(rt0.c1))))), (+ ((rt0.c0 IN ()))), ((((rt0.c2) BETWEEN (0.09680510526298824) AND (rt0.c3)))*(((rt0.c4)AND(rt0.c0)))) FROM rt0 INNER JOIN t1 ON (((- (rt0.c4))) IS TRUE) EXCEPT SELECT ALL ((rt0.c0)>>(CAST(rt0.c4 AS REAL))), ((0.5118423840585453) IS TRUE), CASE rt0.c1 COLLATE RTRIM  WHEN (- (rt0.c1)) THEN CAST(rt0.c4 AS INTEGER) END FROM t1, rt0 WHERE ((((((('1027431638')OR(x'')))OR(NULL)))OR(CAST(0.48071926373953344 AS REAL)))); -- 0ms;
SELECT COALESCE(DISTINCT ((rt0.c2) NOT NULL), '-847077859', (- (t1.c0)), CASE WHEN NULL THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END) FROM rt0, t1 WHERE ((NOT ((((('pc<I~䷀R᣸')OR(0.9966104740707067)))AND('1051781551'))))); -- 6ms;
SELECT ALL rt0.c1 FROM rt0; -- 0ms;
SELECT ALL (((- (rt0.c4))) NOT NULL) FROM t1 WHERE (((NULL)LIKE('b,jRkc')) COLLATE BINARY);SELECT ALL ((MAX(rt0.c2)) IS FALSE), ((((t1.c0)OR(rt0.c3)))&(CASE WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)), rt0.c3, (rt0.c4 IN ()) COLLATE NOCASE, ((((rt0.c2)-(rt0.c0)))IS(COUNT(*))) FROM t1 NOT INDEXED, rt0; -- 0ms;
SELECT ((((rt0.c0)OR(t1.c0)))AND(rt0.c3)) COLLATE NOCASE FROM rt0 WHERE ((NOT (x'')) COLLATE BINARY);SELECT DISTINCT json_extract(t1.c0, rt0.c1, ((((rt0.c1)AND(t1.c0)))OR(rt0.c1)), ((rt0.c0) NOT NULL)) FROM rt0, t1 WHERE ((((('92079676') BETWEEN (x'0736') AND ('EXTIU')))!=(CAST('Cc\nẓ|#戜{/' AS INTEGER)))) GROUP BY (((~ (rt0.c3)))<>(CAST(rt0.c4 AS NUMERIC))), json_array_length((((rt0.c2))<((rt0.c3))), ((rt0.c4) NOT NULL)), 0.3137443327965641 HAVING NULL; -- 0ms;
SELECT DISTINCT (((((t1.c0)==(rt0.c3))))<>((((rt0.c2)OR(rt0.c0))))), rt0.c3, TRIM(DISTINCT MIN(t1.c0), (- (rt0.c1))) FROM t1;SELECT DISTINCT rt0.c4 COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c4)==(NULL)))=(SUM(rt0.c4))), rt0.c2, 0.45783125443513206 FROM rt0, t1 WHERE (CASE WHEN CAST('^M4' AS NUMERIC) THEN (('++') BETWEEN ('418027764') AND (NULL)) WHEN ((0Xc0aec5d)<('1641941072')) THEN ((1090657101) IS FALSE) WHEN CAST('PX' AS NUMERIC) THEN ((0.6873995749942854) NOT BETWEEN (x'') AND (NULL)) END) LIMIT 1800608538 OFFSET -31623008; -- 0ms;
SELECT ((((CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c3 END)AND(((rt0.c3) IS TRUE))))AND(UNICODE(rt0.c4))) FROM t1, rt0 WHERE ((+ (((0.4159974692084345)<(0Xffffffffc9366601))))) LIMIT -732611256 OFFSET -2008454290; -- 0ms;
SELECT DISTINCT ((((rt0.c1)-(rt0.c1)))>=((((('0.0')AND(rt0.c3)))OR(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL CASE ((((t1.c0)AND(x'5d39')))AND(rt0.c3))  WHEN CAST(rt0.c1 AS REAL) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE (((rt0.c1, rt0.c1, rt0.c1))>((rt0.c3, rt0.c1, rt0.c3))) END FROM t1 WHERE (CAST((NULL IN ()) AS REAL)) LIMIT -1281067941;SELECT DISTINCT TRIM((rt0.c2 IN ()), (rt0.c2 IN ())), ((((rt0.c0)OR(((t1.c0)<(rt0.c2)))))AND((+ (t1.c0)))), ((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c4))) BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) AND (t1.c0)) FROM t1;SELECT CAST((((rt0.c4)) NOT BETWEEN ((0.5655963164496155)) AND ((rt0.c3))) AS NUMERIC) FROM t1;SELECT ALL (((rt0.c3)) NOT BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((rt0.c3) IS FALSE)))) FROM t1, rt0; -- 0ms;
SELECT (rt0.c3 IN ((((t1.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c4, rt0.c1, rt0.c4)) AND ((rt0.c4, rt0.c1, rt0.c4))))) FROM t1 WHERE (((((0x4cd87c15) ISNULL))||(((('', -845463695, '-858068712'))!=((NULL, '-977967533', 0.915547457997513)))))) GROUP BY ((rt0.c1)<=(rt0.c3)) COLLATE NOCASE HAVING CAST(rt0.c1 AS TEXT) COLLATE BINARY LIMIT -551117394 OFFSET 1350713249;SELECT ((((((rt0.c2)AND(rt0.c4)))AND(rt0.c1)))/((((rt0.c4))<=((t1.c0))))) FROM rt0 WHERE (((((((((((((((x'') NOT BETWEEN (0.1091954891204836) AND ('svᡜE7')))AND((('-1987315871') BETWEEN ('aq8ro妯') AND (NULL)))))AND(('' IN ()))))AND((x'' IN ()))))AND((((((((('Vu5/z_')OR(NULL)))OR(0.3155607017908365)))AND(0.461426252653625)))AND('-1327203948')))))OR('380549510')))AND(((NULL) BETWEEN ('b') AND ('1801115628')))));SELECT DISTINCT CASE ((((x'829b')OR(rt0.c2)))AND(rt0.c3))  WHEN (((rt0.c0))<=((rt0.c3))) THEN ((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END FROM t1, rt0 WHERE ((((NULL)) NOT BETWEEN ((((((((((0.09953576570597022)OR(0.1945440417832539)))OR('-Zp\rD6')))OR('-287568418')))OR(x'')))) AND ((x'')))); -- 0ms;
SELECT DISTINCT TOTAL(((((0.32015029824949615)AND(t1.c0)))OR(t1.c0))) FROM t1 WHERE ((LIKELIHOOD(DISTINCT '-1394379154', 0.23712001832512664) IN ())) LIMIT -1109560587 OFFSET -1953964068; -- 0ms;
SELECT ALL NTILE(((((t1.c0)/(t1.c0)))OR(((t1.c0)>(t1.c0))))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW) FROM t1;SELECT (((rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c1))) AND ((((rt0.c3)=(rt0.c2))))), ((((rt0.c2)<(rt0.c4))) ISNULL), (((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN t1.c0 THEN rt0.c4 END)) AND ((COUNT(rt0.c2)))) FROM t1, rt0 WHERE (((((x'') BETWEEN ('') AND (x'')))-(((('-657436351', '2085373784', 0.979594667451175))!=((-2019653057, 0X42db5ab8, '')))))) GROUP BY (((+ (rt0.c0)))>=(CHANGES())) LIMIT 1928189742 OFFSET 1947055311; -- 0ms;
SELECT ALL rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY 0.46175021335640043 ASC  NULLS FIRST) FROM t1 WHERE (CAST((((x'', 0xfffffffff022e32f, NULL))==((0.5498575836397346, 'r?[7', x'426e'))) AS REAL)) ORDER BY (((t1.c0 IN ())) ISNULL) DESC  NULLS LAST, ((LIKELY(DISTINCT rt0.c0)) NOT BETWEEN (((rt0.c3) ISNULL)) AND (NULL)) ASC  NULLS LAST, rt0.c1;SELECT ALL CAST(MAX('1089347735') AS INTEGER) FROM t1, rt0 WHERE ((- ((- (0X13276a42))))) ORDER BY (((~ (rt0.c2))) NOTNULL) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(MAX(rt0.c4) AS BLOB) FROM t1 WHERE ((((('a') IS FALSE)) ISNULL)) ORDER BY (((((((((((((((rt0.c3)AND(rt0.c0)))AND(t1.c0)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c1)))AND(t1.c0)), ((rt0.c3)==(rt0.c0)), CAST(rt0.c0 AS INTEGER), ((((((((t1.c0)OR(t1.c0)))OR('>>')))AND(rt0.c0)))OR(rt0.c2)), ((((rt0.c4)AND(rt0.c0)))AND(rt0.c1))))<=((((((rt0.c4)OR(rt0.c1)))OR(t1.c0)), ((rt0.c0) NOT BETWEEN (rt0.c4) AND ('-747211050')), rt0.c3, CAST(rt0.c1 AS NUMERIC), ((rt0.c2) NOT BETWEEN (NULL) AND (0.6771391327572617))))) ASC  NULLS FIRST;SELECT DISTINCT ((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c4, NULL))) IN ('')) FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))  WHEN (NOT (rt0.c2)) THEN rt0.c0 COLLATE BINARY END FROM t1, rt0 WHERE (CASE ((x'')>(0.03128955972121317))  WHEN ((NULL)<<(x'')) THEN (((0.3303314410031798)) BETWEEN ((NULL)) AND (('#VSMcvO'))) END); -- 0ms;
SELECT 0.991677335999611 FROM t1, rt0; -- 0ms;
SELECT (((rt0.c3)LIKE(rt0.c1)) IN ()) FROM rt0, t1 GROUP BY ((((rt0.c4)GLOB(rt0.c1)))>>(((rt0.c4) NOT NULL))); -- 0ms;
SELECT ALL TRIM(((((NULL)AND(rt0.c3)))AND(rt0.c3))) FROM t1, rt0 GROUP BY ((0.2312769661734133)||((t1.c0 IN ()))), (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) COLLATE BINARY COLLATE RTRIM, (+ (rt0.c1)) COLLATE RTRIM LIMIT -1106153140; -- 1ms;
SELECT DISTINCT '', (((((rt0.c3) IS FALSE), (((x''))>((t1.c0))), rt0.c3))>((((((((((rt0.c2)AND(t1.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(t1.c0)), ((rt0.c4) NOT BETWEEN (rt0.c3) AND ('sf')), ((((((((rt0.c2)AND(t1.c0)))OR(rt0.c2)))OR('/L茞')))OR(t1.c0))))), SQLITE_COMPILEOPTION_GET((((rt0.c2))!=((t1.c0)))) FROM rt0, t1 WHERE (((((NULL) NOT BETWEEN ('56119101') AND ('')))>=((((-1e500)) NOT BETWEEN ((NULL)) AND ((x'd1fb')))))); -- 0ms;
SELECT DISTINCT NTH_VALUE((((TRIM(t1.c0, t1.c0)))<=((t1.c0 COLLATE RTRIM))), ((((((x'')OR(t1.c0)))AND(t1.c0))) BETWEEN (NULLIF(t1.c0, '-1423354801')) AND (t1.c0 COLLATE BINARY))) OVER () FROM t1;SELECT ALL ((((rt0.c0 COLLATE RTRIM)OR(rt0.c3)))OR(((0X1612c0fb) IS TRUE))) FROM rt0, t1 NOT INDEXED; -- 0ms;
SELECT DISTINCT (rt0.c2 IN ()) FROM t1, rt0 WHERE ((('<rj4' COLLATE NOCASE)|((('-143573566')IS NOT(x'2e38'))))); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE BINARY) NOT BETWEEN (AVG(rt0.c1)) AND ((((t1.c0))!=(('28287910'))))), ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END) BETWEEN (((rt0.c1) IS FALSE)) AND ((('iNNVuQiB鎷') NOT NULL))), ((COUNT(rt0.c2))>=((~ (rt0.c2)))) FROM t1, rt0 WHERE (LIKELY(x'') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN (CAST(rt0.c3 AS TEXT), rt0.c4 COLLATE BINARY)) FROM rt0, t1 WHERE (LOWER(DISTINCT TRIM(DISTINCT '745878483'))); -- 0ms;
SELECT (t1.c0 IN ()) COLLATE BINARY, (((((rt0.c0, rt0.c3, rt0.c2))>((rt0.c2, t1.c0, rt0.c1)))) ISNULL), (((+ (rt0.c4)))|(((rt0.c4)*(rt0.c2)))) FROM rt0 WHERE ((((x'')) BETWEEN ((x'' COLLATE BINARY)) AND (((('565594336') NOT BETWEEN ('669020336') AND (''))))));SELECT ALL COUNT(*) OVER () FROM t1 GROUP BY CASE WHEN ((0.11939949528767457)||(t1.c0)) THEN (+ (rt0.c3)) END HAVING ((rt0.c0)*(rt0.c2)) COLLATE NOCASE;SELECT ((((t1.c0)OR(UNLIKELY(DISTINCT rt0.c1))))AND(NULL COLLATE RTRIM)) FROM t1;SELECT ((((((rt0.c1) IS TRUE))OR(((((x'')AND(rt0.c2)))AND(rt0.c1)))))AND(((rt0.c3) NOT NULL))) FROM t1, rt0; -- 0ms;
SELECT ALL CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN t1.c0 ELSE t1.c0 END THEN (NOT (0.6309758197419802)) END FROM rt0 WHERE ((((((((((x'' IN (x'', 'ӽh')))AND(((((0.5118423840585453)OR(339681018)))AND('inKB*')))))AND(TIME('130052191', 0.5296756651736921, x'298f5fe3'))))AND(((0Xffffffff982454f1)*(NULL)))))AND(((0.7381028844254879)|('V4')))));SELECT CAST(NULL AS TEXT) FROM t1, rt0 WHERE (CASE WHEN (('') BETWEEN (NULL) AND (NULL)) THEN (((('E')OR('PkCeI+3*')))OR(NULL)) END); -- 0ms;
SELECT DISTINCT (('-1245342368') NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (MIN(rt0.c2, rt0.c3))), ((((t1.c0)/(rt0.c0)))<=(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)), (((('1949451477')AND(rt0.c4)))AND(((rt0.c4) BETWEEN (t1.c0) AND (t1.c0)))) FROM t1 WHERE ((('-482074516' COLLATE RTRIM)||(CAST('' AS REAL)))) GROUP BY (((((rt0.c2)IS NOT(t1.c0))))<>((CAST(rt0.c2 AS REAL)))), rt0.c1, (- (rt0.c0 COLLATE RTRIM)) HAVING t1.c0;SELECT DISTINCT ((CASE WHEN rt0.c3 THEN t1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END)>=(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))), NULL, ((json_insert(t1.c0, rt0.c1, NULL)) NOT BETWEEN (TYPEOF(rt0.c2)) AND ((((rt0.c4))>=((rt0.c4))))) FROM rt0;SELECT ALL MIN((rt0.c4 IN (rt0.c4))) FROM t1, rt0 WHERE (((('b')) NOT BETWEEN (((0x11c73d5a IN ()))) AND ((1665965735 COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT TOTAL((+ (rt0.c2))) OVER () FROM rt0, t1; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0)) AS TEXT) FROM t1;SELECT DISTINCT (TOTAL(rt0.c1) IN ()), ((rt0.c4) IS TRUE) COLLATE RTRIM COLLATE NOCASE, (~ (((((rt0.c2)OR(t1.c0)))OR(rt0.c2)))) FROM t1 WHERE (((0.7269720650458773) NOT BETWEEN (((x'')<=(0xffffffffe905f260))) AND ((x'' IN ())))) GROUP BY CAST(0x203f4775 AS INTEGER), (rt0.c1 IN (CAST(rt0.c3 AS NUMERIC))), LOWER(DISTINCT ((((rt0.c0)OR(rt0.c3)))OR(rt0.c1))) HAVING TOTAL(((((rt0.c1)OR(NULL)))OR(rt0.c1)));SELECT DISTINCT '' FROM rt0, t1; -- 0ms;
SELECT DISTINCT (((t1.c0 COLLATE BINARY, MAX(rt0.c0), 0.3756974286987316))>((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END, t1.c0 COLLATE BINARY, CASE WHEN rt0.c4 THEN 0.24273675371180048 ELSE rt0.c2 END))) FROM t1, rt0 WHERE (((('-1987315871')) BETWEEN ((')ꗸ')) AND ((CAST(x'' AS REAL))))); -- 0ms;
SELECT (((((- (t1.c0)))AND(0.7272237861327802)))AND(0xffffffffef36494b)) FROM rt0 NOT INDEXED WHERE (((CASE NULL  WHEN 0Xffffffffed898b63 THEN x'' ELSE 0.1344024090640381 END)LIKE((~ ('-595253313'))))) LIMIT 380549510 OFFSET 722911024;SELECT DISTINCT (((rt0.c4 COLLATE BINARY))>((rt0.c1))), NULL, (x'' IN (((rt0.c3) NOT BETWEEN (t1.c0) AND (rt0.c4)), (t1.c0 IN ()))) FROM rt0, t1 GROUP BY ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE t1.c0 END)<>(((rt0.c3)<<(rt0.c1)))) HAVING ((((rt0.c4) NOTNULL)) NOT BETWEEN ((((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c4)) AND ((rt0.c0, rt0.c0, rt0.c0)))) AND (CASE WHEN rt0.c3 THEN rt0.c0 END)); -- 0ms;
SELECT ALL DENSE_RANK() OVER (), (NOT (((rt0.c3) NOTNULL))), LAST_VALUE(((CAST(rt0.c1 AS REAL)) NOT NULL)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT 1.007527495E9, -1081321438, CASE CAST(t1.c0 AS REAL)  WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c1 IN ()) END FROM t1, rt0 WHERE (((((CASE '0.1389167566294739'  WHEN 0.9820346070192868 THEN '' END)OR((- ('-309752989')))))OR(json_array_length(']lpb,25f')))); -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM, '-510202514' COLLATE RTRIM, CAST(NULL AS BLOB))) AND ((((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c2)))OR(t1.c0)))OR(t1.c0)), ((rt0.c1) NOT NULL), rt0.c4))), CAST(((rt0.c2) NOT NULL) AS NUMERIC), ((((NULL)%(rt0.c2))) NOTNULL) FROM rt0, t1 ORDER BY ((((rt0.c0)||(rt0.c0)))IS NOT(NULL)) ASC  NULLS FIRST; -- 1ms;
SELECT ALL ((CAST(rt0.c0 AS INTEGER))%(((t1.c0)GLOB(rt0.c4)))) FROM rt0 WHERE (((((NULL) BETWEEN (0x1a207aee) AND (x''))) NOT NULL));SELECT (((rt0.c0 IN (t1.c0))) NOTNULL), ((((t1.c0 IN ())))<((((((((((rt0.c3)OR(t1.c0)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c2))))), AVG(AVG(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))) FROM t1;SELECT DISTINCT COUNT(*) OVER ( RANGE  CURRENT ROW), LTRIM((((rt0.c0, rt0.c0, rt0.c0))>=((t1.c0, rt0.c2, rt0.c0)))), LAG((((((rt0.c2) NOTNULL), rt0.c1, (rt0.c2 IN ()), CAST(rt0.c1 AS REAL), (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))<=((((((rt0.c4)OR(rt0.c3)))OR(rt0.c2)), (+ (rt0.c2)), ((rt0.c2) BETWEEN (NULL) AND (rt0.c2)), ((t1.c0)OR(0.503354686607507)), ((((((((t1.c0)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1))))), CAST(((((t1.c0)AND(rt0.c3)))AND(rt0.c1)) AS NUMERIC), rt0.c0) OVER (), CASE 745878483  WHEN (rt0.c2 IN ()) THEN ((t1.c0)||(rt0.c1)) WHEN ((NULL) BETWEEN (rt0.c4) AND (rt0.c4)) THEN COUNT(x'8dd0') WHEN CAST(NULL AS BLOB) THEN ((rt0.c4)IS(t1.c0)) END, COUNT(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))) FROM t1, rt0 LIMIT 516617066; -- 0ms;
SELECT DISTINCT (x'' IN (rt0.c2, ((rt0.c3)>(t1.c0)))) FROM t1, rt0 WHERE (LENGTH((((('6煌)_+M2_')AND(x'c41493e0')))AND('321350210')))); -- 0ms;
SELECT DISTINCT CAST(((t1.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) AS TEXT) FROM t1 WHERE (0.4728080793386201) GROUP BY CASE rt0.c0 COLLATE NOCASE  WHEN (('1623736525') NOT BETWEEN (rt0.c2) AND (t1.c0)) THEN t1.c0 END HAVING (rt0.c2 IN ()) COLLATE BINARY LIMIT -1447680972 OFFSET 2085818849;SELECT (NOT (rt0.c3)) FROM t1, rt0 WHERE (((CAST(1.289255957E9 AS TEXT)) NOT BETWEEN (((x'')&('tF'))) AND (LOWER(0.20508174041755023)))); -- 0ms;
SELECT DISTINCT (CAST(rt0.c4 AS BLOB) IN ()) FROM t1 WHERE (((CAST(1027431638 AS TEXT))*(CAST('AB,_瀋BF ' AS INTEGER)))) LIMIT -2122644479; -- 0ms;
SELECT ALL ((CAST(rt0.c4 AS BLOB))LIKE(CAST(t1.c0 AS TEXT))), IFNULL(DISTINCT CAST(t1.c0 AS TEXT), '[S誩R'), (((-1.410681453E9))>=(((- (rt0.c3))))) FROM rt0, t1 WHERE (CASE 'DZ\n'  WHEN x'' THEN '1022144404' WHEN NULL THEN 0.8549418257282055 WHEN x'' THEN '0.416327013553742' ELSE '-1149490418' END COLLATE RTRIM); -- 0ms;
SELECT ((((t1.c0) BETWEEN (NULL) AND (rt0.c3)))IS NOT(LTRIM(rt0.c4))) FROM t1 CROSS JOIN rt0 ON 0Xfffffffff9b4ad45 WHERE (CAST(LIKELY(DISTINCT 'd{') AS NUMERIC)); -- 1ms;
SELECT ALL CASE WHEN ((NULL)/(rt0.c1)) THEN (- (rt0.c2)) WHEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE 869252022 END THEN 0x2107828a WHEN rt0.c3 THEN rt0.c3 ELSE ((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)) END FROM rt0; -- 0ms;
SELECT DISTINCT (- ((NOT (t1.c0)))) FROM t1 WHERE (((((x'') NOT BETWEEN ('321350210') AND (0X757c1d5b)))!=(((x'')OR(x'5241'))))); -- 0ms;
SELECT ((((((((CASE rt0.c1  WHEN t1.c0 THEN 0.6335786627004631 ELSE rt0.c2 END)OR(rt0.c2 COLLATE BINARY)))OR((+ (rt0.c4)))))OR(rt0.c3 COLLATE RTRIM)))AND('냵w')) FROM rt0;SELECT rt0.c3 FROM rt0, t1; -- 0ms;
SELECT DISTINCT ABS(((rt0.c3) ISNULL)) FROM t1 WHERE (((((x'' COLLATE BINARY)AND(((-1.436443828E9) NOT BETWEEN ('aB') AND (NULL)))))OR(LIKE('-1776517912', x'', 'J'))));SELECT ((CAST(rt0.c3 AS NUMERIC))/(rt0.c3 COLLATE BINARY)) FROM rt0, t1 WHERE (('-1226899483' IN ())); -- 0ms;
SELECT DISTINCT (-1.189183658E9 IN ()), CASE rt0.c3  WHEN rt0.c2 THEN t1.c0 END COLLATE NOCASE, rt0.c4 FROM t1;SELECT (((((((((NULL)AND(t1.c0)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c2)) IN ()), CAST(t1.c0 AS INTEGER) COLLATE NOCASE, ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY COLLATE BINARY FROM t1 WHERE (((TYPEOF(DISTINCT x''))+((((0X549691b8, x'', x''))=((NULL, x'f7fe', NULL))))));SELECT ((rt0.c4)<(CAST(rt0.c2 AS NUMERIC))) FROM t1, rt0; -- 0ms;
SELECT ALL (((('-1296328044')OR(rt0.c0))) NOT BETWEEN (TYPEOF(x'56eeb68d')) AND (TOTAL(rt0.c0))) FROM t1, rt0 WHERE (((((0.1951458900809463)AND(0.6719694237476671)))AND(397336456)) COLLATE BINARY) GROUP BY (((NULL)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND (((- (rt0.c4))))) HAVING ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END) NOT NULL); -- 0ms;
SELECT ALL CAST(SUM(rt0.c3) AS NUMERIC) FROM t1, rt0; -- 0ms;
SELECT DISTINCT LEAD(((rt0.c1) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 END) AND (CAST(rt0.c0 AS BLOB))), ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (x''))), ((rt0.c0 COLLATE BINARY)<=(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2))))) OVER () FROM rt0 WHERE (((((((('541017973'))>=((x''))))AND(((x'') ISNULL))))AND(0xffffffffe5924d5f))); -- 1ms;
SELECT DISTINCT AVG(0.596527501749346) OVER ( ROWS  CURRENT ROW) FROM rt0, t1 WHERE (0.38573243372127375); -- 0ms;
SELECT ALL ((((rt0.c3)/(t1.c0)))>=(((rt0.c2)>(rt0.c1)))) FROM rt0 WHERE ((CASE WHEN 'g<' THEN '/I' WHEN 1027431638 THEN '1623736525' WHEN x'' THEN 0.6746102437205476 WHEN -826798706 THEN 'R>FW  ?!2' WHEN x'0200' THEN NULL ELSE x'2b46' END IN ())) ORDER BY (((((((rt0.c2)OR(t1.c0)))OR(rt0.c2))))<(((((rt0.c0))==((rt0.c4)))))) LIMIT 68520779 OFFSET -1043639971;SELECT ((rt0.c1) ISNULL) COLLATE BINARY FROM t1, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)AND(rt0.c1)) AS REAL), NULL, PERCENT_RANK() OVER () FROM rt0 WHERE ((- (NULL)) COLLATE BINARY COLLATE BINARY) GROUP BY CAST(CAST(rt0.c3 AS REAL) AS INTEGER) ORDER BY rt0.c0  NULLS FIRST, ((rt0.c3 IN (rt0.c3)) IN ()) DESC LIMIT -302632187 OFFSET -1568592309; -- 5ms;
SELECT ALL ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))&(x'')) FROM t1;SELECT DISTINCT ((('-1612668255')) NOT BETWEEN (((((NULL, rt0.c2, x'')) BETWEEN ((0.7696300348499022, rt0.c1, 0x51163d26)) AND ((rt0.c0, rt0.c2, t1.c0))))) AND ((('*''2Qi>' IN ())))) FROM rt0;SELECT DISTINCT ((((((rt0.c3)>(rt0.c1)))AND(CASE WHEN rt0.c0 THEN t1.c0 END)))AND(CAST(rt0.c2 AS INTEGER))) FROM rt0, t1 WHERE (0.4415365310326034 COLLATE NOCASE) LIMIT 959008170 OFFSET -2102688322; -- 0ms;
SELECT DISTINCT AVG(MAX((t1.c0 IN ()))) FROM rt0, t1;SELECT DISTINCT COALESCE(MAX(t1.c0), rt0.c4 COLLATE RTRIM), ((((((rt0.c3, rt0.c3, rt0.c3, rt0.c1, t1.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2, rt0.c4, rt0.c1)) AND ((rt0.c4, rt0.c4, rt0.c4, rt0.c3, rt0.c4)))))<=((((rt0.c1)>=(rt0.c1))))), ((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))AND((- (t1.c0)))))OR(TRIM(rt0.c4))) FROM rt0, t1; -- 0ms;
SELECT ((rt0.c4) NOT BETWEEN ((((rt0.c1, rt0.c2, t1.c0))<((rt0.c3, rt0.c1, rt0.c1)))) AND (((t1.c0) NOTNULL))), ((((rt0.c3)LIKE(t1.c0))) NOTNULL), CAST('8I(f87\r' AS INTEGER) COLLATE NOCASE FROM t1, rt0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT CASE t1.c0  WHEN rt0.c3 THEN rt0.c0 WHEN t1.c0 THEN 0.29382960933041735 WHEN rt0.c0 THEN rt0.c4 ELSE 0.39834720450601513 END) FROM rt0, t1; -- 0ms;
SELECT (NOT (LIKELIHOOD(-5.776014E8, 0.794497866674387))) FROM rt0, t1 WHERE ((((x'' IN ()))<(CASE WHEN NULL THEN 2.038321084E9 END))); -- 0ms;
SELECT ((((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))AND(((t1.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))OR((rt0.c2 IN (rt0.c4)))) FROM t1, rt0 WHERE ((~ (CASE WHEN 0.8030853430693649 THEN '-2038743047' END))) GROUP BY 'xE횧gD' HAVING (((rt0.c3)-(rt0.c1)) IN ()); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c4)&(rt0.c0)) THEN TOTAL(rt0.c1) END FROM rt0, t1; -- 1ms;
SELECT COUNT((t1.c0 IN (NULL))) OVER (), (NOT (CASE WHEN rt0.c3 THEN t1.c0 END)), ((((x'9648'))<=((rt0.c0))) IN ()) FROM t1, rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c3)IS NOT(rt0.c1)))OR(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c4)))AND(-1987315871)))OR(rt0.c0)) FROM t1, rt0 WHERE ((~ (x''))); -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE BINARY COLLATE NOCASE FROM rt0, t1; -- 0ms;
SELECT DISTINCT rt0.c4 FROM t1, rt0; -- 0ms;
SELECT DISTINCT (- ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) FROM rt0; -- 0ms;
SELECT ALL (((((((((rt0.c4 IN (rt0.c1, rt0.c3)))OR((rt0.c0 IN (rt0.c2)))))AND((rt0.c3 IN ()))))OR(((rt0.c4)<=(rt0.c1)))))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (t1.c0)))) FROM rt0, t1 WHERE (((((NULL)+(0.2743280322967636))) BETWEEN (CAST(0.81220796313381 AS INTEGER)) AND (CAST(110816108 AS TEXT)))); -- 0ms;
SELECT DISTINCT rt0.c1 COLLATE BINARY FROM rt0; -- 0ms;
SELECT ((NULL) IS FALSE), rt0.c4, ABS((((rt0.c3)) BETWEEN ((rt0.c1)) AND (('1639004389')))), ((((rt0.c4 COLLATE NOCASE)OR(((rt0.c1)OR(t1.c0)))))AND(((rt0.c0)GLOB(rt0.c4)))), (rt0.c0 IN (x'' COLLATE RTRIM)) FROM rt0, t1 WHERE (CAST(',Dy3[' COLLATE BINARY AS NUMERIC)); -- 0ms;
SELECT (((rt0.c0, rt0.c3, NULL)) BETWEEN ((CHAR(rt0.c0), CASE WHEN rt0.c4 THEN t1.c0 ELSE rt0.c4 END, rt0.c3 COLLATE BINARY)) AND ((rt0.c3 COLLATE NOCASE, (('') ISNULL), ((rt0.c1) ISNULL)))), TOTAL(((rt0.c4)<>(rt0.c4))), GROUP_CONCAT(((rt0.c1)>=(rt0.c1))) FROM rt0, t1 WHERE (((('1339787159', NULL, '1915103877')) BETWEEN (((NOT (0x4675a318)), (('|SK}O誩') NOTNULL), (('506731003') BETWEEN (x'') AND (-1936385202)))) AND ((CASE 0x4e709c47  WHEN '2053409496' THEN 0X3b69c9b6 WHEN 'R7' THEN '745878483' WHEN 0xffffffffa00a481d THEN 'ty' END, CASE WHEN '411846513' THEN x'' ELSE '1946706972' END, CAST(0.4006096130257394 AS REAL))))) LIMIT -1200818275 OFFSET 1089347735; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT LIKELIHOOD(DISTINCT rt0.c1, 0.5478469477928234), TRIM(rt0.c3)) FROM rt0, t1 WHERE (((x'' COLLATE RTRIM)<(highlight('-1245342368', 0.43361761229524176, 0.2606861726474573, '-393097203'))));SELECT ALL MIN(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) FROM t1 WHERE (CAST((((NULL))<=((-1587230754))) AS NUMERIC));SELECT ALL 0xffffffff8c5836ad FROM rt0; -- 0ms;
SELECT ALL '', AVG(SUM(AVG(rt0.c0))), LIKELY(TOTAL(rt0.c2)) FROM t1, rt0;SELECT DISTINCT ((COUNT(*)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1) ISNULL))) FROM rt0 GROUP BY ''; -- 0ms;
SELECT DISTINCT ((((rt0.c0) ISNULL)) NOT BETWEEN ((((rt0.c1))<((rt0.c3)))) AND (NULLIF(t1.c0, rt0.c1))) FROM rt0 NOT INDEXED WHERE (((((NULL)==('-657436351'))) NOT NULL)) GROUP BY (~ (rt0.c1));SELECT DISTINCT CAST(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS BLOB) FROM rt0, t1 WHERE (((NULL) IS TRUE)); -- 0ms;
SELECT DISTINCT (((rt0.c4 IN (rt0.c1)))>>(x'')) FROM rt0, t1 WHERE ((~ (UNLIKELY(DISTINCT NULL)))); -- 0ms;
SELECT (((rt0.c2)IS(rt0.c4)) IN ()) FROM rt0, t1; -- 0ms;
SELECT COUNT(((rt0.c4)IS NOT(t1.c0))) FROM rt0, t1 GROUP BY ((CAST(t1.c0 AS NUMERIC)) NOTNULL), '1022144404', ((x'7b1d') IS TRUE); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, t1 WHERE ((- ((~ (NULL))))); -- 0ms;
SELECT TOTAL(CASE rt0.c1  WHEN t1.c0 THEN t1.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN t1.c0 ELSE t1.c0 END) FROM rt0;SELECT (+ (((rt0.c4) NOTNULL))) FROM t1 WHERE (IFNULL(DISTINCT (((0.7007475843813072, x'', 0X3cecaf94))<>((-0.0, '''AEN3	+', '-93323141'))), ((NULL) NOT BETWEEN ('745878483') AND ('\n')))) GROUP BY rt0.c2;SELECT ALL ((CASE rt0.c0  WHEN t1.c0 THEN rt0.c3 ELSE rt0.c3 END) BETWEEN (x'9a77') AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) FROM rt0, t1 ORDER BY (((((rt0.c4) BETWEEN ('(e1~9x') AND (t1.c0)), LIKELY(t1.c0), ((rt0.c2)!=(rt0.c3))))<>((CASE WHEN rt0.c0 THEN 0.9292523572835348 WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c0 END, (+ (rt0.c0)), ((rt0.c1)&(rt0.c0)))))  NULLS FIRST, LIKELIHOOD(((rt0.c4) NOT BETWEEN (rt0.c1) AND (x'')), 0.9225033014838422)  NULLS FIRST, CASE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c3 THEN rt0.c1 END ELSE CASE WHEN rt0.c3 THEN x'' END END ASC  NULLS FIRST, '{e' ASC, (((('-1014863579')AND((((('-230315960')AND(rt0.c0)))AND(rt0.c0)))))OR(((t1.c0) ISNULL))) ASC; -- 0ms;
SELECT CAST(((((rt0.c4)AND(rt0.c3)))OR(rt0.c1)) AS NUMERIC) FROM rt0 WHERE (TYPEOF(DISTINCT (- (-1940375891)))); -- 0ms;
SELECT CAST(NULL AS BLOB), t1.c0, AVG(((rt0.c1) NOT BETWEEN (t1.c0) AND (rt0.c0)) COLLATE RTRIM) OVER () FROM rt0 WHERE (((((x''))<=((0xffffffffae17db12))) IN ()));SELECT ALL CUME_DIST() OVER () FROM t1, rt0; -- 0ms;
SELECT ALL ((- (t1.c0)) IN ()) FROM rt0; -- 1ms;
SELECT ALL rt0.c1 FROM rt0 WHERE (((NULL)GLOB(((0.6305976478826416) ISNULL)))) GROUP BY rt0.c3 HAVING (((NOT (x'34aa'))) BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END) AND (684611744)); -- 0ms;
SELECT ((((rt0.c4)OR(rt0.c3)))IS(rt0.c0 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3)) NOT BETWEEN ((((t1.c0) NOT NULL))) AND ((((rt0.c2) ISNULL)))) FROM rt0;SELECT DISTINCT ((((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL) FROM t1 WHERE (((NULL IN ()) IN ((((('124235428')AND('-1206450179')))OR(NULL)))));SELECT DISTINCT 'Z(' FROM rt0 WHERE ((((('CsI')>>(0.5245799764574633))) NOTNULL)); -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE BINARY, (NOT (rt0.c3)) COLLATE RTRIM, (((((rt0.c3))<((rt0.c1))))LIKE(((NULL)/(t1.c0)))) FROM rt0 WHERE (((-970019760 COLLATE BINARY)AND(TYPEOF(''))));SELECT ALL AVG(((rt0.c4)OR(rt0.c2))), LIKELY(DISTINCT rt0.c3) COLLATE BINARY, (- (rt0.c2)) COLLATE NOCASE FROM rt0, t1 WHERE (((((x'f772')OR(0.4489177731302699)))|(CAST(0.6415855181770607 AS NUMERIC)))) GROUP BY (((x'')) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))) AND ((((t1.c0)IS NOT(rt0.c4))))), ((CASE WHEN t1.c0 THEN rt0.c4 ELSE rt0.c2 END)<=(CAST(rt0.c3 AS REAL))), LIKELY(rt0.c4) COLLATE BINARY ORDER BY CASE WHEN ((rt0.c4)>>(rt0.c4)) THEN CASE rt0.c2  WHEN rt0.c1 THEN x'6952' WHEN rt0.c0 THEN rt0.c4 WHEN t1.c0 THEN rt0.c3 END WHEN rt0.c1 THEN CASE WHEN '1914885025' THEN rt0.c2 ELSE rt0.c3 END WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (t1.c0)) THEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN '璆C*>%!{[+' END END ASC  NULLS LAST, ((CASE rt0.c4  WHEN 'Jt₂\nw%0ᵱ' THEN rt0.c3 END)<<(NULL)); -- 0ms;
SELECT ALL ((t1.c0)>(rt0.c3)) COLLATE BINARY FROM rt0, t1 WHERE (((((x'c0eb') IS TRUE)) IS FALSE)); -- 0ms;
SELECT DISTINCT NULL COLLATE RTRIM, ((TOTAL(rt0.c3)) BETWEEN ((+ (t1.c0))) AND (((rt0.c1)LIKE(rt0.c1)))), (((NOT (rt0.c0))) NOT NULL) FROM t1, rt0 WHERE ((((NULL)+('1282683331')) IN ())) ORDER BY (((((rt0.c2 IN (t1.c0, rt0.c1)))AND(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)), COALESCE(DISTINCT rt0.c3, rt0.c3) COLLATE RTRIM DESC; -- 0ms;
SELECT ALL json_patch((((rt0.c1))=((0X2c7533d3))), ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2))) FROM rt0 LIMIT 1271817005 OFFSET 1639004389; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c0)))||(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)), ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (CASE WHEN t1.c0 THEN rt0.c2 END) AND (0.2117379866440151)), LAST_VALUE(t1.c0) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM t1;SELECT ALL (COUNT(rt0.c3) IN ()), CAST(x'' AS BLOB), CAST(PRINTF(rt0.c2, rt0.c4, rt0.c3) AS TEXT) FROM t1 WHERE (((CASE x'fb99'  WHEN x'cfe7' THEN x'' WHEN NULL THEN x'0b70' WHEN '' THEN '666680741' ELSE NULL END)<>(CAST('-83221137' AS INTEGER))));SELECT (((rt0.c2, rt0.c0, rt0.c4)) BETWEEN ((COUNT(*), MIN(rt0.c2), ((rt0.c3) NOT NULL))) AND (((((rt0.c0, rt0.c2, rt0.c1, t1.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c3, rt0.c1, t1.c0, rt0.c4, ''))), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((rt0.c3)-(rt0.c4))))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT CASE CASE rt0.c0  WHEN rt0.c4 THEN t1.c0 ELSE rt0.c1 END  WHEN LOWER(DISTINCT rt0.c1) THEN CAST(rt0.c3 AS INTEGER) WHEN CASE '1641941072'  WHEN rt0.c2 THEN rt0.c2 END THEN LIKELIHOOD(rt0.c1, 0.6103545070055255) WHEN ((rt0.c2)GLOB(rt0.c1)) THEN 'Dg%4i' COLLATE NOCASE WHEN ((rt0.c4) NOTNULL) THEN ((rt0.c0)|(rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c4)))OR(t1.c0)) THEN ((rt0.c0)GLOB(t1.c0)) ELSE (NOT (rt0.c4)) END, ((((t1.c0))<>((rt0.c1))) IN (CAST(rt0.c0 AS TEXT), GROUP_CONCAT(rt0.c1))), TOTAL(CASE WHEN rt0.c4 THEN rt0.c3 ELSE t1.c0 END) FROM t1 WHERE (((CAST(0.15590035797399593 AS TEXT))>((((('薺(P7|\r2)')AND('61900005')))AND(x''))))) LIMIT 1055617564 OFFSET 27430116;SELECT DISTINCT TRIM((- (rt0.c4))) FROM rt0 ORDER BY rt0.c3 COLLATE NOCASE; -- 0ms;
SELECT DISTINCT LAST_VALUE((((((((((- (rt0.c0)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))))OR('')))AND(((rt0.c1)LIKE(rt0.c3))))) OVER ( ROWS  CURRENT ROW) FROM rt0 WHERE ((((('&z?	Lh')>=(NULL)))-(((((x'')OR('130052191')))OR(x''))))); -- 0ms;
SELECT ALL 'Im￿m' FROM t1, rt0 WHERE (((NULL COLLATE RTRIM) ISNULL)) GROUP BY CAST(CAST(rt0.c2 AS TEXT) AS INTEGER), (- (((rt0.c3)OR(rt0.c0)))), ((((rt0.c2, rt0.c2, rt0.c4))==((t1.c0, 0.09051410421546258, rt0.c4))) IN ((NOT (rt0.c3)), CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 END)); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, t1 WHERE ((((('-769358910')GLOB(0X145d666c))) NOT BETWEEN ((((('id筪k+,r')AND(0xffffffff9c5e1a4b)))OR(x''))) AND (((0.01323547759861543) IS FALSE)))) GROUP BY CHAR((- (t1.c0))) HAVING ((((UNLIKELY(rt0.c3))OR(((((((((rt0.c0)AND(0x1ff27bd5)))OR(rt0.c3)))AND(rt0.c1)))AND('/xB')))))AND(((t1.c0)AND(rt0.c2)))); -- 0ms;
SELECT HEX(json_object(t1.c0, rt0.c0)) FROM rt0, t1;SELECT DISTINCT GROUP_CONCAT(((((rt0.c2)OR(t1.c0)))AND('-1245342368'))) FROM rt0, t1 WHERE (CAST(((-4865241.0)&(x'')) AS INTEGER)) GROUP BY (((((rt0.c1))==((rt0.c0)))) IS FALSE) HAVING CAST(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN NULL ELSE rt0.c4 END AS NUMERIC); -- 0ms;
SELECT ALL rt0.c0, (((((rt0.c0))<=((rt0.c0)))) NOTNULL), CASE WHEN rt0.c3 COLLATE NOCASE THEN (((0.26604741666016085))!=((t1.c0))) ELSE rt0.c1 END FROM t1;SELECT DISTINCT RANK() OVER () FROM t1; -- 0ms;
SELECT ALL CAST(rt0.c3 AS BLOB) FROM rt0 WHERE (CASE (('') NOT BETWEEN ('1212235892') AND ('Rk\n\reIᣈ*'))  WHEN CASE -1.953430275E9  WHEN '-1096721990' THEN x'949f' ELSE 'Hg' END THEN 0.802268243749095 WHEN ((x'cb455011')OR(0xffffffff903ba45c)) THEN (NOT (x'10dc')) WHEN CASE WHEN NULL THEN x'' WHEN '-1936385202' THEN '' WHEN '-775661622' THEN '1928189742' WHEN 'r/쮌埊%yai' THEN x'' WHEN '1920019729' THEN 0Xffffffff88a2cd28 END THEN 0.3045455313086445 COLLATE NOCASE ELSE 0.8361643026775823 COLLATE RTRIM END); -- 0ms;
SELECT LIKELIHOOD(rt0.c3, 0.6250707623167917), TOTAL(((rt0.c2) NOT BETWEEN (t1.c0) AND (0.5911080977256121))), (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN t1.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END, ((((((((t1.c0)OR(rt0.c2)))OR(rt0.c0)))AND(x'')))OR(rt0.c1)), (~ (rt0.c4))))>((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 ELSE rt0.c0 END, NULLIF('', rt0.c4), ((rt0.c3)/(rt0.c0))))) FROM t1 ORDER BY UPPER(0.06417372793144571) COLLATE BINARY LIMIT -1656590071;SELECT ALL NULL COLLATE BINARY, ((((rt0.c0) IS FALSE)) ISNULL), (~ (((rt0.c2)%(NULL)))) FROM rt0, t1 WHERE ((((- ('-1049341191')))>>(CASE NULL  WHEN 0.7727277290929917 THEN NULL WHEN '' THEN 0.5796269023878808 WHEN x'1c41' THEN -1661543185 ELSE x'' END))); -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID(), CAST(CASE WHEN rt0.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END AS REAL), (+ (0.416327013553742 COLLATE RTRIM)) FROM rt0 WHERE (CAST(x'' COLLATE RTRIM AS REAL)) ORDER BY ((((rt0.c1)AND(((((t1.c0)AND(rt0.c0)))AND(rt0.c3)))))AND((rt0.c0 IN (rt0.c3, rt0.c1))))  NULLS LAST, rt0.c0  NULLS FIRST, (((((t1.c0, rt0.c2, rt0.c2))!=((rt0.c3, rt0.c2, rt0.c1))))>(((rt0.c1) IS TRUE)))  NULLS LAST, ((TYPEOF(rt0.c3)) NOT BETWEEN (((((((((rt0.c0)OR(t1.c0)))OR(rt0.c2)))OR(rt0.c4)))AND(t1.c0))) AND (json(t1.c0))) DESC;SELECT ((0X10b909d8)IS NOT((t1.c0 IN ()))) FROM t1; -- 0ms;
SELECT DISTINCT (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 WHEN t1.c0 THEN rt0.c1 WHEN '' THEN rt0.c0 END))>=((CASE t1.c0  WHEN rt0.c3 THEN rt0.c3 END))), ((~ (t1.c0)) IN ()), ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3))) BETWEEN (((((((((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))AND(t1.c0)))OR(rt0.c0)))AND(rt0.c4))) AND (((rt0.c0) NOTNULL))) FROM rt0, t1 WHERE (HEX((('1022144404')>(x'')))); -- 1ms;
SELECT DISTINCT (~ (rt0.c3 COLLATE BINARY)) FROM t1, rt0 LIMIT -1041067244 OFFSET 92867328; -- 0ms;
SELECT (((rt0.c1)&(rt0.c1)) IN ()) FROM rt0, t1 WHERE (((('魌7V\n}+!') NOT BETWEEN ('<yo') AND (x'cf1e4b85')) IN ((((('-1985803452')OR(x'')))AND(0Xffffffff87c15ee4))))) LIMIT -1149490418; -- 0ms;
SELECT DISTINCT MAX((((rt0.c1))=((rt0.c0)))) FROM t1, rt0; -- 0ms;
SELECT NULL, TRIM(DISTINCT HEX(DISTINCT rt0.c0)), NULLIF(((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)), ((((x'')AND(x'')))AND(rt0.c2))) FROM t1 WHERE ((((((-1001678343 IN ()))OR((+ (NULL)))))AND(CAST('c{Vr94m]嶥' AS BLOB))));SELECT '95识I' FROM t1, rt0 WHERE (CAST(((((0.006561762202817678)OR(NULL)))OR(x'b528f6d7')) AS REAL)); -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN (((NOT (rt0.c2)))) AND ((((rt0.c0)AND(t1.c0))))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT (NOT (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) FROM t1, rt0; -- 0ms;
SELECT ((CAST(rt0.c4 AS NUMERIC)) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c1 END) AND (json_remove(rt0.c0, rt0.c0, rt0.c3, rt0.c1))) FROM t1;SELECT DISTINCT (0.1478298328010339 IN (rt0.c0)) COLLATE NOCASE FROM rt0, t1 GROUP BY CAST((NOT (t1.c0)) AS NUMERIC); -- 0ms;
SELECT ALL TOTAL((- (t1.c0))) FROM t1, rt0 WHERE (((CHAR('t')) NOT BETWEEN (CAST(NULL AS TEXT)) AND ((- (''))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1))) IN ()) FROM rt0, t1; -- 0ms;
SELECT ALL ((((MAX(rt0.c0))OR(((t1.c0)OR(rt0.c4)))))AND(rt0.c1 COLLATE NOCASE)) FROM t1;SELECT ALL ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c2) NOT BETWEEN (NULL) AND (t1.c0)))) FROM rt0 WHERE (CASE ((x'e96de231')%(-555781629))  WHEN ((0.1975708632927533) IS FALSE) THEN (~ ('')) WHEN ((0.5610191311151459) NOT BETWEEN (0.9797058728529077) AND ('0.9159866555721407')) THEN MIN(0Xffffffff8c5836ad, '-1302400667', '&WX', 0xffffffff9137bd79) WHEN 0.33688861556035976 THEN 1677269048 ELSE ((-5.776014E8)-(0.05780872615437549)) END);SELECT ALL CAST(rt0.c1 COLLATE BINARY AS TEXT), AVG(ABS(rt0.c0)) OVER (), (- (0.5718337592645247 COLLATE BINARY)) FROM t1 WHERE ((((NULL)) NOT BETWEEN ((((x'8223')%('''7syy?')))) AND ((INSTR(x'', NULL)))));SELECT DISTINCT (((rt0.c3)OR(rt0.c4)) IN (((((((((((((rt0.c3)AND(t1.c0)))AND(t1.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4)))AND(x'66cf')))) FROM rt0, t1; -- 1ms;
SELECT ALL ((((rt0.c0)<<(t1.c0))) NOTNULL), AVG(((rt0.c4)>=(rt0.c2)) COLLATE NOCASE) OVER ( ORDER BY (- (LTRIM(rt0.c4))) ASC  NULLS LAST), (((- (rt0.c0)))<=(((rt0.c2)>>(rt0.c0)))), (((NOT (rt0.c0))) NOTNULL), (- (CASE WHEN t1.c0 THEN rt0.c4 END)) FROM rt0 LIMIT -2048621678 OFFSET -250441441;SELECT ALL rt0.c0 FROM t1;SELECT ALL ((((((rt0.c4)<=(rt0.c4)))AND(((rt0.c1)IS NOT(rt0.c3)))))AND(((rt0.c4)GLOB(x'')))) FROM rt0 LEFT OUTER JOIN t1 ON ((SQLITE_COMPILEOPTION_GET(rt0.c1))-((rt0.c0 IN ()))); -- 0ms;
SELECT ALL LAG(((((rt0.c2) ISNULL))OR((((rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c2))<>((rt0.c4, rt0.c4, rt0.c1, rt0.c4, t1.c0))))), (t1.c0 IN ()) COLLATE NOCASE, ((rt0.c2) IS FALSE)) OVER () FROM rt0, t1 ORDER BY ((0.3397864069883286) NOTNULL)  NULLS LAST, CASE WHEN CASE t1.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN NULL ELSE rt0.c1 END THEN ((rt0.c1)IS NOT(t1.c0)) END  NULLS FIRST LIMIT -2070027468; -- 0ms;
SELECT DISTINCT CASE 0Xffffffffcc9a47d5  WHEN rt0.c2 THEN rt0.c3 WHEN ((rt0.c4) NOTNULL) THEN ((((0.719352264149488)OR(t1.c0)))OR(0.32551185659905424)) WHEN ((t1.c0)&(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) END FROM t1 WHERE ('') LIMIT -271649817;SELECT rt0.c1 FROM t1, rt0; -- 1ms;
SELECT DISTINCT (((((t1.c0 IN ()))AND('1550184356')))AND(AVG(t1.c0))) FROM rt0, t1 WHERE ((((NOT (0Xfffffffff55ea024)))LIKE(RTRIM('1112889751')))); -- 0ms;
SELECT ((((CAST(rt0.c2 AS BLOB))OR((rt0.c2 IN (rt0.c4)))))OR(MIN(rt0.c3))), (((rt0.c0)+(rt0.c1)) IN ()), SUM(NULLIF(DISTINCT rt0.c4, rt0.c0)) FROM t1, rt0; -- 0ms;
SELECT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))IS(CAST(t1.c0 AS BLOB))) FROM rt0, t1; -- 1ms;
SELECT NULL, ((t1.c0 COLLATE BINARY) NOTNULL), UNLIKELY((~ (rt0.c1))) FROM rt0;SELECT DISTINCT ((rt0.c2)&(t1.c0)) COLLATE NOCASE, ((t1.c0 COLLATE NOCASE) IS TRUE), (CASE WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END IN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (t1.c0)))) FROM t1 WHERE ((NULL IN (NULL, 0.7546302963749023)) COLLATE RTRIM);SELECT DISTINCT x'' FROM rt0, t1 WHERE ((((((((1.584946597E9, NULL, '?[')) BETWEEN (('X4W4}K', NULL, NULL)) AND (('70999690', 0x40ee2097, 't6	'))))OR(CAST(429613952 AS BLOB))))AND(CAST('N7' AS REAL)))) LIMIT 402471367 OFFSET -1184623577; -- 0ms;
SELECT ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4))) BETWEEN (CAST(0xba6b270 AS NUMERIC)) AND (CAST(rt0.c1 AS INTEGER))) FROM rt0 WHERE (((((0.22782926695431105)>=(0.06970199802019394)))<=(((((0Xffffffffca7914a1)AND(0xffffffffaf346a2a)))AND(-1949261383))))); -- 0ms;
SELECT CASE ((((NULL)OR('rKGtCwOJ')))OR(NULL))  WHEN CAST(t1.c0 AS NUMERIC) THEN LAST_INSERT_ROWID() ELSE ((t1.c0)>=(rt0.c1)) END, (((rt0.c4)+(rt0.c3)) IN ()), CAST((rt0.c0 IN ()) AS BLOB) FROM t1, rt0 GROUP BY rt0.c4 COLLATE RTRIM; -- 0ms;
SELECT ALL (((t1.c0 IN ())) NOT BETWEEN (NULL) AND (CAST(rt0.c3 AS INTEGER))) FROM rt0, t1 WHERE (((CAST('S*E' AS INTEGER)) IS FALSE)); -- 0ms;
SELECT DISTINCT (((t1.c0 IN ()))*('k')) FROM rt0 LIMIT 1914885025 OFFSET 684611744; -- 0ms;
SELECT DISTINCT (((((((rt0.c1))<>((t1.c0))))OR(((rt0.c4)<=(rt0.c2)))))OR(COUNT(t1.c0))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1, rt0; -- 0ms;
SELECT ALL rt0.c1 FROM t1 WHERE (CAST(NULL AS NUMERIC) COLLATE NOCASE);SELECT ALL (CAST(rt0.c1 AS TEXT) IN ()) FROM t1 ORDER BY CASE (- (rt0.c1))  WHEN CAST(rt0.c2 AS BLOB) THEN NULL WHEN ((rt0.c3)<<(rt0.c0)) THEN (~ (t1.c0)) WHEN rt0.c2 COLLATE BINARY THEN CASE rt0.c2  WHEN t1.c0 THEN NULL WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN t1.c0 END ELSE rt0.c4 COLLATE NOCASE END;SELECT ALL (((TRIM(rt0.c0, '-960449407')))<=(((NOT (rt0.c0))))) FROM t1;SELECT DISTINCT (((rt0.c0)*(rt0.c1)) IN ()), CAST(LENGTH(rt0.c1) AS NUMERIC), rt0.c0 FROM rt0, t1 WHERE (CASE WHEN ('㢘SH' IN ('1920019729')) THEN ((NULL) NOTNULL) END); -- 0ms;
SELECT SUM(SUM(((rt0.c3) NOTNULL))), NULL, (- (((t1.c0)%(rt0.c3)))) FROM t1, rt0;SELECT DISTINCT ((((((rt0.c0)OR(0.774640350156276)))AND(rt0.c3))) NOT NULL), x'', CASE WHEN ((((rt0.c4)OR(rt0.c4)))AND(t1.c0)) THEN (NULL IN ()) ELSE (~ (rt0.c2)) END, DENSE_RANK() OVER (), LENGTH(CAST(rt0.c0 AS BLOB)) FROM rt0 WHERE (COALESCE((~ ('-2017370396')), ((NULL)%(0xffffffffa7a33c4f))));SELECT DISTINCT COUNT(*) OVER () FROM t1; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN (rt0.c1))) BETWEEN (((rt0.c0) IS TRUE)) AND (t1.c0 COLLATE NOCASE)) FROM rt0;SELECT DENSE_RANK() OVER () FROM rt0, t1 GROUP BY ((UPPER(DISTINCT rt0.c0)) NOTNULL); -- 0ms;
SELECT ALL ((rt0.c3 IN ()) IN (CAST(t1.c0 AS TEXT))) FROM t1, rt0; -- 0ms;
