-- Time: 2024/06/07 17:54:40
-- Database: database11
-- Database version: 3.40.0
-- seed value: 1144487811
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, languageid="lid"); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, c1 UNINDEXED); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -2055555381);\n; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=-2.055555381E9; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=-2.055555381E9, c0=0xffffffff857ab6cb WHERE TYPEOF(vt1.c1) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('2025825122', NULL); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL, '804503586'), (NULL, '2025825122'), (-2.055555381E9, '/뛋'); -- 0ms;
UPDATE vt0 SET (lid)=('/뛋') WHERE UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.lid) AND ('-1390066379'))); -- 1ms;
UPDATE OR REPLACE vt0 SET (c0)=(x'9489'); -- 1ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT vt1 SET (c0)=(0.8734775860824093) WHERE ((((((((vt1.c1)AND(NULL)))AND(((vt1.c1)<<(vt1.c1)))))AND(((vt1.c0)<=(vt1.c0)))))OR(0.2865938022268417)); -- 0ms;
PRAGMA temp.cache_size = 0; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(lid) VALUES (NULL), (''), (0.8948068910919236); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
CREATE TEMP TABLE t0 (c0 REAL , c1 TEXT , c2 INT ); -- 0ms;
PRAGMA checkpoint_fullfsync; -- 1ms;
COMMIT; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
PRAGMA cache_spill; -- 0ms;
CREATE INDEX i10 ON t0(CASE WHEN c2 THEN 0xffffffffeafec9f3 ELSE c0 END COLLATE NOCASE COLLATE BINARY,(0.8948068910919236 IN ()) COLLATE NOCASE COLLATE BINARY,(NOT ((('-1390066379') BETWEEN (c0) AND (c0)))) COLLATE RTRIM DESC) WHERE ''; -- 1ms;
UPDATE t0 SET (c0)=(-3.52400909E8); -- 0ms;
INSERT OR FAIL INTO vt1(c1) VALUES ('-1390066379'), (x''), (0.3470066480266064), (0.22797863769947202), (''); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=('-1648389858') WHERE (((0.4280908979802034)*(t0.c1)) IN (((t0.c1)<(t0.c1)), CAST(t0.c1 AS BLOB))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR ROLLBACK INTO t0(c1) VALUES (']zX	U쀢'); -- 0ms;
INSERT OR ABORT INTO t0(c1, c0) VALUES (0.17770800137882414, x''); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i35 ON t0((NOT ('ꢎ')) COLLATE BINARY COLLATE RTRIM DESC,(c2 COLLATE NOCASE IN ()) COLLATE NOCASE,NULL); -- 0ms;
UPDATE t0 SET c2=2.025825122E9; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES ('}ﹷ!HTp]'), (NULL), (''); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2, c2, c0)=(-88788776, 0.14303660370463334, '\rj_\l'); -- 0ms;
REINDEX i35; -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c51; -- 1ms;
UPDATE OR IGNORE vt1 SET c0=0.0; -- 0ms;
ANALYZE t0; -- 0ms;
UPDATE OR IGNORE t0 SET c51='^|f2'; -- 0ms;
ANALYZE t0; -- 0ms;
CREATE TEMPORARY VIEW v0(c0, c1, c2) AS SELECT DISTINCT COUNT(((((vt0.c0)AND(t0.c1)))OR(t0.c51))) OVER (), NULL, (((vt0.c0) NOT NULL) IN (vt0.lid)) FROM t0, vt1, vt0; -- 2ms;
END TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES ('-1139955570', -1455776498); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (((UPPER(NULL))/(((0xfffffffff604aa24) BETWEEN (0.2865938022268417) AND (0.8260899641316318))))); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA main.ignore_check_constraints = false; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (0.870478053399142, '-1455776498'); -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, lid)=(NULL, '') WHERE ((((vt0.lid) IS TRUE)) ISNULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1) VALUES (0X38f54b42); -- 1ms;
ANALYZE t0; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c51 TO c16; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c51 TO c20; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c3; -- 0ms;
ALTER TABLE t0 ADD COLUMN c10 TEXT; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL, '/B'), (0.22797863769947202, (((x'', '', NULL)) NOT BETWEEN (((((x'')) BETWEEN ((NULL)) AND ((0Xb794485))), ((((-1411546640)AND(x'')))OR(x'86e8')), CASE WHEN '}]W1' THEN '' WHEN x'' THEN '5' WHEN NULL THEN x'' END)) AND (((('-288009312')/('955599682')), ((NULL) NOT NULL), '955599682' COLLATE BINARY)))), ('-423825358', -4.6596489E7); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES ('-939211698', '1753025570'); -- 0ms;
PRAGMA cache_size; -- 0ms;
UPDATE t0 SET (c0, c1, c1)=(x'', x'e4e5', x'4827') WHERE ((((t0.c1 COLLATE BINARY)AND(((t0.c51) NOT NULL))))AND(t0.c51)); -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts5(c0, c1, c2 UNINDEXED); -- 0ms;
UPDATE OR ROLLBACK vt2 SET (c2)=(NULL); -- 0ms;
REINDEX i10; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (x'4e03', ''), (NULL, NULL), (0.6188642900302787, 6866346); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c79; -- 1ms;
UPDATE OR IGNORE t0 SET c1='', c51=0.7152818913484869, c79=x'0fbe'; -- 0ms;
INSERT OR FAIL INTO t0(c79) VALUES (1753025570); -- 0ms;
UPDATE OR IGNORE t0 SET (c79, c10)=('514494388', '2025825122'); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (NULL); -- 0ms;
DROP TABLE vt0; -- 0ms;
UPDATE vt1 SET (c0)=(NULL) WHERE CASE WHEN '' THEN vt1.c0 COLLATE BINARY END; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR FAIL vt1 SET (c1)=(NULL); -- 0ms;
REINDEX BINARY; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP VIEW v0; -- 0ms;
SELECT ALL ((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))) ISNULL), vt2.c0, CASE WHEN ((vt2.c2) NOT BETWEEN (vt2.c1) AND (vt2.c1)) THEN CASE WHEN vt2.c1 THEN t0.c51 END ELSE (- (t0.c1)) END FROM t0;SELECT DISTINCT '-101144585' FROM t0, vt1; -- 0ms;
SELECT ALL (((- (vt2.c2)))<>(vt2.c2)), SUM(((t0.c10)>(vt1.c1))), (((((t0.c51) IS TRUE), ((t0.c10) NOT BETWEEN (x'') AND (vt2.c0)), (t0.c51 IN (t0.c10))))<((((((((((vt2.c0)AND(NULL)))AND(t0.c10)))AND(vt1.c1)))OR(t0.c10)), TRIM(DISTINCT vt2.c1, vt2.c2), ((t0.c1)AND(vt1.c1))))) FROM t0 WHERE (CASE (('514494388') NOTNULL)  WHEN ((0.3939713682494216) NOT BETWEEN ('-629683829') AND (NULL)) THEN LIKELY(DISTINCT x'809c') ELSE (('1l01')<=('-1975264607')) END) ORDER BY (- ((NOT (x''))))  NULLS FIRST;SELECT DISTINCT x'e9f280ee' FROM vt2, vt1 INDEXED BY i10, t0 WHERE (CASE ((x'') NOTNULL)  WHEN CASE WHEN 0xffffffffdbff3465 THEN NULL END THEN 0.7152818913484869 END) ORDER BY x''  NULLS LAST;SELECT UPPER(CHAR(t0.c1)) FROM vt1, t0, vt2 WHERE (CASE ('1753025570' IN ())  WHEN CAST(601364631 AS REAL) THEN (((0.22834579331673877))==((x'88ff'))) END) ORDER BY 'T2' DESC  NULLS LAST; -- 0ms;
SELECT ALL (~ (x'')) FROM vt1, vt2, t0; -- 0ms;
SELECT CAST(((((t0.c79)AND(vt1.c0)))OR(vt2.c0)) AS INTEGER) FROM vt2, vt1 WHERE (((x'' COLLATE RTRIM)-(((('}ﹷ!HTp]'))!=((-4.23825358E8))))));SELECT DISTINCT ((vt2.c0 COLLATE RTRIM) NOT BETWEEN (((vt2.c2) IS FALSE)) AND (((t0.c1) IS TRUE))) FROM vt1;SELECT (((rtreenode(vt2.c0, vt2.c1)))>((CASE vt2.c2  WHEN t0.c79 THEN vt2.c2 WHEN t0.c51 THEN 1054987787 WHEN t0.c10 THEN vt2.c0 ELSE vt1.c1 END))) FROM vt1, vt2 WHERE ((- ((((('(2Yhy')OR(x'')))AND(NULL)))));SELECT DISTINCT vt1.c1 FROM t0, vt2, vt1; -- 0ms;
SELECT ((((((((((((vt2.c1)AND(((vt2.c1)GLOB(vt2.c2)))))OR(((vt1.c0)OR(0.09778724882146039)))))AND(COUNT(t0.c79))))OR((~ (vt2.c2)))))AND(((vt2.c2) NOT BETWEEN (t0.c10) AND (t0.c79)))))AND(((vt2.c2) NOTNULL))), CAST(((vt2.c0) NOT NULL) AS BLOB), (((((t0.c51 IN (vt1.c1)))AND(((vt2.c1)<(t0.c10)))))AND(((vt1.c0)<=(vt1.c1)))) FROM vt2;SELECT DISTINCT CASE '-1083021280'  WHEN (((vt2.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt2.c0))) THEN vt1.c1 COLLATE RTRIM ELSE ((t0.c51) IS TRUE) END FROM t0, vt2;SELECT DISTINCT LAG(((CAST(t0.c1 AS TEXT)) NOT BETWEEN (((vt2.c0)GLOB(vt2.c1))) AND (CAST(t0.c10 AS NUMERIC))), (- (vt2.c1 COLLATE NOCASE)), t0.c79) OVER () FROM t0, vt1, vt2; -- 0ms;
SELECT DISTINCT CASE (((vt1.c0)) NOT BETWEEN ((vt2.c2)) AND ((t0.c51)))  WHEN NULL THEN (t0.c10 IN ()) WHEN 0.5239402189221192 THEN NULL WHEN (((t0.c1)) BETWEEN ((vt1.c1)) AND ((t0.c79))) THEN vt1.c1 END FROM vt1 WHERE (((((((x'ae28')OR(x'')))AND(0.031572667960873546))) BETWEEN ((('-1894862436') NOT BETWEEN (0x75e68cc9) AND ('(s(臰N얪ꟷP'))) AND ((('OT.W') IS TRUE))));SELECT DISTINCT vt1.c0, (+ (vt2.c0 COLLATE NOCASE)), (t0.c10 IN ()) COLLATE RTRIM FROM vt2 WHERE ((NOT (((-1894862436)>>(0.870478053399142))))) LIMIT 599064958;SELECT DISTINCT ((t0.c10) NOT NULL) COLLATE NOCASE FROM vt2, vt1 WHERE (((STRFTIME(NULL, 0.054740226117307667, '0.8948068910919236'))GLOB(LIKELY(DISTINCT '')))) GROUP BY t0.c51;SELECT ALL (((((t0.c51 IN ()))OR(((t0.c79) NOT BETWEEN (NULL) AND (vt1.c0)))))OR(((t0.c10) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1, t0 WHERE (((NULL)>>('540404696')) COLLATE RTRIM); -- 0ms;
SELECT t0.c1, (((((((t0.c10)AND(vt2.c0)))AND(vt2.c1))))>=((x'cd35'))), CASE SQLITE_SOURCE_ID()  WHEN CAST(t0.c51 AS NUMERIC) THEN LIKE(vt1.c1, t0.c79, '{') END FROM t0, vt2 INDEXED BY i10, vt1 WHERE (((('1054987787')*(x'')) IN (((x'') NOT BETWEEN ('-597497815') AND (x'')))));SELECT ALL LAST_VALUE(CAST((NOT ('899307957')) AS REAL)) OVER (), vt2.c2, ((((t0.c1)<<(t0.c10))) BETWEEN ((vt1.c1 IN ())) AND (MAX(vt1.c0))) FROM vt1, vt2;SELECT (((t0.c51))>((t0.c51))) COLLATE NOCASE FROM vt2, vt1;SELECT ALL vt2.c2 FROM t0, vt2, vt1 WHERE (CAST(((((x'')OR(0.03623654471023163)))OR('^Nxgrq')) AS INTEGER)) LIMIT 1444209403 OFFSET -167466460; -- 0ms;
SELECT DISTINCT (((vt2.c2)) NOT BETWEEN ((((((t0.c10)OR(vt2.c1)))OR(vt2.c2)))) AND ((((((vt1.c0)OR(vt2.c2)))OR(t0.c10))))) FROM vt1 RIGHT OUTER JOIN vt2 ON (((vt2.c1 IN (t0.c79)))>(((t0.c51)AND(vt2.c2)))) RIGHT OUTER JOIN t0 ON ((((t0.c51) IS FALSE))>>(((vt1.c1) BETWEEN (vt1.c0) AND (t0.c79)))) WHERE (((((x'') BETWEEN (NULL) AND (NULL))) NOT BETWEEN (NULLIF('0.22797863769947202', 0Xfffffffffd38fe77)) AND (((0.6145756554263997) NOT NULL))));SELECT (('0.054740226117307667') BETWEEN (CASE WHEN 'nQ K' THEN vt2.c2 END) AND (INSTR(vt2.c0, t0.c51))) FROM vt2, t0 LIMIT -1625800547; -- 0ms;
SELECT DISTINCT NULL FROM vt1 WHERE (((((0xffffffffdbff3465 COLLATE RTRIM)OR((NOT ('a.')))))OR('KK7+.L'))); -- 1ms;
SELECT DISTINCT (((- (vt1.c1)))GLOB(CASE WHEN vt2.c0 THEN t0.c51 END)) FROM vt1 INDEXED BY i35, vt2, t0 WHERE (((((('1038649341')) NOT BETWEEN ((0.5239402189221192)) AND (('')))) NOT BETWEEN ((('1054987787')<=(''))) AND (CASE NULL  WHEN '-996458462' THEN '' ELSE 0.02919815773493406 END)));SELECT (NOT (((vt2.c1) IS TRUE))), -5.97497815E8, ((((((((((vt2.c2)IS NOT(t0.c1)))OR(0.6369938362501653)))AND((((t0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))OR((NOT ('Xa&6\n')))))AND(CASE t0.c79  WHEN vt2.c0 THEN vt1.c1 END)), ((((((t0.c1)AND(vt2.c0)))OR(t0.c79))) IS TRUE), json_extract(((x'')|(vt2.c2)), vt2.c2, ((vt2.c2) IS TRUE), CAST(t0.c79 AS INTEGER)) FROM t0;SELECT ((vt2.c2)AND(vt2.c1)) COLLATE BINARY, (((vt2.c1)) BETWEEN ((CHAR(t0.c51))) AND ((t0.c1 COLLATE NOCASE))), t0.c1, ((((((((((0.6374750033741784)OR(t0.c10)))AND(vt2.c1)))OR(vt2.c1)))AND(t0.c51))) IS TRUE), ((((1802637707)OR(((-597497815) IS TRUE))))AND(UPPER(DISTINCT t0.c79))) FROM vt1, vt2 WHERE (CAST(0Xffffffffc49b4022 AS TEXT));SELECT DISTINCT (((vt1.c1)) NOT BETWEEN ((TOTAL(vt2.c0))) AND (((NOT (vt2.c2))))) FROM t0, vt2 NOT INDEXED, vt1; -- 0ms;
SELECT 0.010164654280243046 FROM t0, vt2 ORDER BY (((t0.c1)) BETWEEN ((vt1.c1 COLLATE BINARY)) AND (((((1753025570)) NOT BETWEEN ((t0.c10)) AND ((vt2.c2)))))) ASC  NULLS FIRST;SELECT ALL (vt2.c1 IN ()) COLLATE RTRIM FROM vt1, vt2 LIMIT 1679508448 OFFSET -1894862436; -- 0ms;
SELECT DISTINCT MAX(CAST(t0.c79 AS INTEGER)), CAST(t0.c79 AS BLOB), ((CAST(t0.c1 AS NUMERIC))>>(((vt2.c0)=(vt1.c1)))) FROM vt2, vt1, t0 GROUP BY (((vt2.c0, t0.c51, t0.c79)) BETWEEN ((vt2.c2, t0.c1, t0.c1)) AND ((t0.c10, '-1455776498', t0.c79))) COLLATE BINARY COLLATE RTRIM; -- 0ms;
SELECT ALL TRIM((('') NOT BETWEEN (vt1.c0) AND (0xffffffffad317d48)), vt2.c1) FROM vt2 WHERE (((((NULL) ISNULL))*(TRIM(NULL, 'RmNO9洈0!E')))) ORDER BY vt2.c2 DESC;SELECT ALL ((((t0.c79 COLLATE NOCASE)AND(LENGTH(vt1.c0))))AND(-5.97497815E8)) FROM vt1, t0, vt2; -- 0ms;
SELECT vt2.c0 COLLATE NOCASE COLLATE RTRIM FROM vt1 WHERE ((((CAST(NULL AS BLOB), CAST(0.02919815773493406 AS TEXT), ((('ot.w'))!=((0X66895f82)))))==((((((((((0.06545215788329295)AND(NULL)))OR('6866346')))AND('-1389265592')))OR(NULL)), ((0Xffffffff99b529a8)<=('514494388')), x''))));SELECT DISTINCT 0.2117780817464855, CASE WHEN vt2.c2 COLLATE BINARY THEN CASE WHEN vt2.c1 THEN vt2.c2 ELSE x'' END END, CAST(CAST(vt1.c0 AS TEXT) AS TEXT) FROM vt1, vt2 WHERE (NULL); -- 0ms;
SELECT DISTINCT CAST(IFNULL(t0.c51, vt1.c1) AS NUMERIC) FROM vt1, vt2 WHERE (LENGTH(((0.9782448292232878) NOTNULL)));SELECT TRIM(CASE WHEN NULL THEN t0.c51 ELSE t0.c51 END), NULL, (((((vt2.c0)+(t0.c51))))>=((CAST(vt2.c0 AS INTEGER)))) FROM vt1, vt2 WHERE (((((((NULL)OR(0.6960770897600698)))AND('-1100370268')))/(((((((((x'')OR('-878236978')))OR(NULL)))OR('-88788776')))AND(-1.41154664E9))))) GROUP BY CAST((vt2.c1 IN ()) AS NUMERIC), ((t0.c79) IS FALSE) COLLATE NOCASE, LIKELY((vt1.c1 IN (vt2.c0, t0.c51))) HAVING ((((t0.c79)%(vt2.c1))) IS TRUE);SELECT ALL vt2.c2 FROM t0, vt1, vt2 ORDER BY ((((((vt1.c1)AND(t0.c51)))OR(vt2.c1))) IS TRUE) ASC  NULLS LAST, ((vt2.c0) NOTNULL), ((((t0.c51)LIKE(vt2.c1)))|(((t0.c10) IS TRUE)))  NULLS LAST; -- 0ms;
SELECT ALL ((((vt1.c1)IS(x''))) NOT NULL) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt2.c2) NOT BETWEEN (x'') AND (vt2.c0)))!=(((((vt1.c0)AND(t0.c10)))AND(vt2.c0)))), ((((t0.c79) BETWEEN (vt2.c1) AND (t0.c1))) NOT BETWEEN (vt2.c2 COLLATE RTRIM) AND ((- (vt1.c0)))), (((((((((t0.c51 IN ()))OR(TOTAL(vt2.c0))))AND(CAST(vt2.c1 AS NUMERIC))))OR((+ (vt1.c1)))))OR(AVG(t0.c51))), (- (vt2.c0)), (0.975176822316089 IN ()) COLLATE BINARY FROM t0, vt2 WHERE (IFNULL(DISTINCT ((x'') BETWEEN ('') AND (NULL)), x'' COLLATE BINARY));SELECT DISTINCT (((t0.c10))<((json_array(vt2.c1, vt1.c1)))) FROM t0, vt2, vt1; -- 0ms;
SELECT DISTINCT LIKE(((t0.c51) NOT BETWEEN (vt2.c1) AND (vt2.c0)), vt1.c0), CASE vt1.c1  WHEN '0.010164654280243046' THEN vt1.c0 END COLLATE RTRIM, CAST(((vt2.c0) BETWEEN (t0.c51) AND (-9223372036854775808)) AS NUMERIC) FROM vt2, t0, vt1 WHERE (((0.20251069050168258) IS TRUE)); -- 0ms;
SELECT ((MAX(vt1.c1)) NOT BETWEEN ((+ (vt2.c2))) AND (((('FALSE'))<=((t0.c1))))) FROM vt2, t0 WHERE (CAST((('Gji!,') IS TRUE) AS REAL));SELECT GROUP_CONCAT(((vt2.c1) NOT BETWEEN (vt1.c0) AND (t0.c51))) FROM t0, vt2;SELECT DISTINCT (((((t0.c51, vt1.c1, '0.17770800137882414', t0.c51, vt1.c0)) BETWEEN ((vt2.c1, vt2.c1, vt2.c0, t0.c51, t0.c10)) AND ((vt2.c0, t0.c51, vt2.c1, vt2.c0, t0.c51))))&('')), DENSE_RANK() OVER (), ((CAST(t0.c79 AS TEXT)) NOTNULL) FROM vt1, t0 ORDER BY NULL, CAST(((vt2.c0)LIKE(vt2.c2)) AS BLOB) ASC  NULLS FIRST, (((vt1.c0, t0.c10, t0.c10)) BETWEEN (('1129358480', ((((t0.c1)OR(t0.c51)))AND(vt2.c1)), vt1.c0 COLLATE BINARY)) AND (((((('f*~1+^jDR')AND(t0.c1)))OR(vt1.c1)), ((x'') NOT BETWEEN (vt2.c0) AND (vt1.c1)), ((((vt2.c0)OR(t0.c79)))AND(t0.c10)))));SELECT DISTINCT t0.c79, (((vt2.c1 IN ())) NOT BETWEEN (((0.7913887778757989)AND(vt2.c2))) AND (t0.c1)), ((((1.038649341E9)*(0Xffffffffeda08ee7)))||(((0.6188642900302787) NOT NULL))) FROM vt2 ORDER BY CAST(((((((((0.3678858785583341)OR(t0.c51)))AND(t0.c1)))OR(vt2.c0)))AND(t0.c1)) AS TEXT), (~ (t0.c1)) COLLATE BINARY DESC  NULLS FIRST;SELECT DISTINCT 0.5239402189221192 FROM vt2, t0, vt1 WHERE (CAST(('' IN (0X6d0d63d3)) AS BLOB)); -- 0ms;
SELECT DISTINCT (((vt2.c2 IN (vt2.c1, vt2.c1, t0.c1))) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND (((t0.c1)=(vt2.c1)))) FROM vt1, t0, vt2 WHERE (GLOB(((((0.32525878919701967)AND(x'1c2a')))AND(x'')), ABS(DISTINCT 0.2999525839005561))); -- 0ms;
SELECT CAST(t0.c51 COLLATE RTRIM AS NUMERIC) FROM vt2, t0, vt1 WHERE ((((((('O>7%eD')%(0.7414016640644808)))OR((((0.4382384448660154, x'', NULL))>=(('', 0x689ff39f, x''))))))AND(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((SQLITE_SOURCE_ID())OR(MAX(vt1.c1))))AND(((((vt2.c2)OR(t0.c51)))AND(t0.c51)))) FROM t0, vt1, vt2 WHERE (((((-9.39211698E8) BETWEEN ('珥}<552 1463 -7423947801704594338T273-Os9蟽O') AND (0.4394681332398681)))-(-246854629))) ORDER BY ((((vt1.c0 IN ()), CAST(vt1.c1 AS NUMERIC), ((t0.c51) BETWEEN (x'') AND (t0.c10))))>((CAST(t0.c10 AS TEXT), '0.3470066480266064', CASE WHEN vt2.c1 THEN vt1.c0 END))) DESC, x'' DESC  NULLS FIRST, (~ (((((((((t0.c79)AND(t0.c51)))OR(vt2.c2)))OR(vt1.c1)))AND(vt1.c1)))); -- 0ms;
SELECT ALL COUNT(*) FILTER(WHERE (PRINTF(t0.c79) IN (((vt1.c1)IS NOT(vt2.c2))))) OVER () FROM t0, vt1 WHERE (NULL) GROUP BY CASE ((vt1.c1) BETWEEN (vt2.c1) AND (t0.c51))  WHEN ((vt2.c0)>(vt1.c0)) THEN ((((((((vt2.c2)OR(t0.c1)))AND(t0.c10)))OR(vt2.c0)))AND(t0.c10)) WHEN 0.9839600290578064 THEN (((vt2.c0)) NOT BETWEEN ((x'')) AND ((vt1.c1))) WHEN CAST(t0.c10 AS BLOB) THEN CASE t0.c79  WHEN NULL THEN vt2.c0 ELSE vt1.c0 END WHEN ((((((((vt2.c2)OR(x'')))AND(t0.c1)))AND(t0.c1)))AND(vt2.c2)) THEN ((((vt2.c1)OR(vt1.c1)))AND(x'')) WHEN ((t0.c51)>(t0.c79)) THEN ((t0.c10) ISNULL) ELSE ((((t0.c79)OR(vt2.c1)))AND(vt2.c1)) END, UPPER(((vt1.c0)<=(t0.c1))), (((t0.c1)!=(t0.c1)) IN ()), vt2.c2, (+ (TRIM(DISTINCT vt2.c0)));SELECT (- (CAST(t0.c51 AS NUMERIC))), (GROUP_CONCAT(x'') IN ()), (((vt2.c2)) BETWEEN ((GROUP_CONCAT(vt2.c2))) AND ((vt1.c0 COLLATE BINARY))), SUM(((t0.c51)<(t0.c51))) COLLATE RTRIM, CASE WHEN vt2.c0 THEN ((vt2.c0) BETWEEN (vt1.c1) AND (vt2.c2)) WHEN (vt2.c2 IN ()) THEN CAST(vt2.c2 AS INTEGER) WHEN ((t0.c51) NOT BETWEEN (vt1.c1) AND (t0.c1)) THEN '-46596489' ELSE t0.c79 COLLATE RTRIM END FROM vt1, t0, vt2 NOT INDEXED WHERE (((ABS('-2055555381'))>((('')==('672872214'))))); -- 0ms;
SELECT DISTINCT (CASE vt1.c0  WHEN t0.c79 THEN vt1.c1 ELSE t0.c51 END IN ()) FROM vt2, vt1, t0; -- 0ms;
SELECT COUNT(x'') OVER (), LIKELY(DISTINCT ((vt1.c0) BETWEEN (t0.c1) AND (vt2.c0))), ((t0.c79 COLLATE BINARY)<=(((((t0.c10)OR(vt2.c0)))OR(vt2.c2)))) FROM vt1, vt2 WHERE (CAST(DATE('', 'p', 0.4651004659939566) AS INTEGER));SELECT (((t0.c51 IN (vt2.c1)))>=(TRIM(DISTINCT '-2055555381', t0.c10))), LIKELIHOOD(DISTINCT ((t0.c10)OR(vt1.c0)), 0.23931801732256996), vt2.c0 FROM t0;SELECT DISTINCT ((((t0.c1)*(NULL)))=(((((((((vt2.c0)OR(t0.c10)))OR(t0.c51)))OR(t0.c51)))AND(vt2.c2)))) FROM t0, vt1, vt2; -- 0ms;
SELECT CAST((- (t0.c51)) AS TEXT) FROM vt2, vt1 WHERE ((~ (CAST(x'' AS REAL))));SELECT DISTINCT vt2.c2 FROM t0 WHERE ((x'824b3b44' COLLATE NOCASE IN ()));SELECT DISTINCT ((((((((t0.c10)AND(vt2.c1)))AND(0x2dbbd67)))OR(json_object(t0.c51, t0.c51))))OR(((vt1.c1)|(t0.c10)))) FROM vt2, t0, vt1 WHERE (((-167466460)-(NULL)) COLLATE NOCASE) GROUP BY ((0.9791089912247152)<(t0.c10)) COLLATE RTRIM; -- 0ms;
SELECT ((t0.c51)IS((+ (vt2.c1)))) FROM vt1, vt2 WHERE (((((x'')/('2110259522')))%(((((0.2986877844070275)OR(0.9022716883935449)))AND(0.2123044038263595)))));SELECT DISTINCT UNLIKELY(DISTINCT (((vt2.c0))==((vt2.c1)))), (LIKELIHOOD(t0.c10, 0.4906860086827701) IN ()), AVG(LIKELY(t0.c79)) OVER () FROM vt2, vt1 GROUP BY DATETIME(((vt1.c0) ISNULL), t0.c1 COLLATE BINARY, ((t0.c51) NOT BETWEEN (vt2.c2) AND (0Xffffffffad317d48)), NULLIF(t0.c10, t0.c10), CASE t0.c1  WHEN NULL THEN t0.c51 ELSE vt1.c1 END, ((t0.c10) IS TRUE), (((t0.c1, vt2.c1, vt2.c0)) BETWEEN ((vt1.c1, vt2.c0, vt1.c1)) AND ((vt1.c1, t0.c1, t0.c51))));SELECT DISTINCT CASE WHEN CAST(t0.c51 AS NUMERIC) THEN NULLIF(DISTINCT vt2.c1, t0.c79) END FROM vt2 WHERE (NULL);SELECT DISTINCT (((((((('0.9782448292232878')OR(vt2.c2)))OR(NULL)))OR((- (vt2.c2)))))OR(t0.c79)), 0.7369651537533213, CASE MAX(vt2.c2, vt2.c2)  WHEN COUNT(vt2.c1) THEN vt1.c1 COLLATE BINARY END, vt1.c1, (((t0.c51)) BETWEEN ((((t0.c51)|(vt1.c0)))) AND (((((vt1.c1))>((t0.c51)))))) FROM vt2, vt1;SELECT ALL (((t0.c79) BETWEEN (vt2.c2) AND (vt2.c1)) IN ()), LOWER(((((vt2.c1)OR('qe')))AND(t0.c51))), COUNT((vt2.c0 IN ())) OVER () FROM vt2, vt1 WHERE (((CAST(0x55acb0a1 AS TEXT))>((('-1100370268') IS FALSE))));SELECT DISTINCT TRIM(UNICODE(t0.c10)) FROM t0, vt2, vt1; -- 0ms;
SELECT LEAD(0.4298717545298172, CASE (vt2.c2 IN (vt2.c2))  WHEN (t0.c10 IN ()) THEN (((vt2.c2)) NOT BETWEEN ((vt2.c2)) AND ((vt2.c1))) WHEN ((((t0.c1)OR(vt2.c0)))AND(t0.c10)) THEN CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END WHEN NULL THEN ((((((((((((vt2.c2)OR(t0.c10)))OR(t0.c51)))AND(NULL)))AND(t0.c51)))OR(vt2.c1)))OR(t0.c79)) END, CAST(((((((((vt2.c0)OR(t0.c51)))OR(vt2.c1)))AND(t0.c10)))AND(t0.c51)) AS REAL)) OVER () FROM vt1, t0, vt2 WHERE (((NULL COLLATE NOCASE)>>(((0.03084072823582984)>>(2140336189))))); -- 0ms;
SELECT DISTINCT CAST(CAST('' AS INTEGER) AS INTEGER), CASE (~ (t0.c51))  WHEN TYPEOF(DISTINCT vt2.c1) THEN NULL WHEN ((t0.c10)*(t0.c10)) THEN ((vt2.c2)>=(vt2.c1)) WHEN ((t0.c10)%(t0.c51)) THEN CAST(vt2.c1 AS TEXT) ELSE (((t0.c79, vt1.c0, t0.c1))<>((t0.c1, t0.c79, t0.c51))) END, GROUP_CONCAT(CAST(0.7046041837785894 AS INTEGER)) FROM vt1, vt2;SELECT ((HEX(DISTINCT t0.c1))||(((vt2.c1)OR(t0.c10)))) FROM vt1, vt2;SELECT DISTINCT (((GROUP_CONCAT('ᣓ')))<>(((~ (vt2.c1))))), (((- (vt2.c2))) NOTNULL), CAST((- (vt2.c2)) AS NUMERIC) FROM vt1, t0, vt2 WHERE (CAST((((0Xfffffffff9f8a7f7, 0.044168932345288514, NULL)) BETWEEN ((0.8269126049209441, 0.03823086802887099, 0.6145756554263997)) AND ((x'', x'', 0.3208675234793852))) AS TEXT)); -- 0ms;
SELECT CASE GROUP_CONCAT(0X66895f82)  WHEN SUM(t0.c1) THEN vt2.c2 COLLATE NOCASE ELSE CASE WHEN t0.c10 THEN t0.c51 WHEN vt1.c1 THEN vt2.c1 WHEN vt1.c1 THEN t0.c51 ELSE vt1.c0 END END, (+ ((vt1.c1 IN ()))), ((0.6613229023546309) NOTNULL) FROM t0, vt1 WHERE (CAST(CASE WHEN NULL THEN x'' ELSE NULL END AS BLOB));SELECT ALL ((((TYPEOF(vt1.c1))AND(((((vt1.c1)AND(t0.c79)))OR(vt2.c1)))))AND(t0.c1)), (((t0.c10))<((SUM(t0.c10)))), CAST(((((((((vt1.c0)OR(vt2.c2)))AND(vt2.c2)))AND(vt2.c0)))OR(vt1.c0)) AS BLOB) FROM vt1, vt2 WHERE (((CASE 0.37623137953370733  WHEN x'47ec' THEN x'' ELSE x'' END) BETWEEN ((0.40250126182423385 IN ())) AND ((x'56c2' IN ()))));SELECT ALL CAST(vt2.c2 AS NUMERIC) COLLATE RTRIM, CASE WHEN t0.c51 THEN ((vt2.c1) BETWEEN (vt1.c0) AND (t0.c1)) END, TOTAL('') FROM t0 ORDER BY ((t0.c1 COLLATE RTRIM)+((((vt1.c0))<=((vt2.c1))))) ASC;SELECT CAST(-168849165 AS NUMERIC) COLLATE RTRIM FROM vt1, t0, vt2 GROUP BY ((((vt1.c1) BETWEEN (vt1.c1) AND (t0.c79))) NOT BETWEEN (vt2.c0) AND (((vt1.c1) NOT BETWEEN (vt2.c1) AND (t0.c79)))) HAVING (((vt2.c2 IN (vt2.c0)))&(((((vt1.c1)OR(vt1.c0)))OR(t0.c51)))); -- 1ms;
SELECT DISTINCT LIKELY(t0.c1 COLLATE NOCASE) FROM vt2 NOT INDEXED, vt1, t0 WHERE ((((((((((((('-1455776498' COLLATE BINARY)AND(((0.32856230797865105) BETWEEN (0Xffffffffeea66966) AND (NULL)))))OR(0.47178544998821903 COLLATE NOCASE)))OR((NOT ('}]W1')))))AND(((((NULL)AND(0.2999525839005561)))AND(x'')))))AND(18955047)))OR((('0.03823086802887099') NOT BETWEEN ('') AND (0.7694005211531932))))); -- 0ms;
SELECT ALL 0.22806431599041688 FROM t0; -- 0ms;
SELECT DISTINCT ((MIN(vt2.c0)) NOT BETWEEN (((vt2.c0)<>(t0.c10))) AND (((((((((t0.c1)OR(t0.c51)))OR(x'')))OR(vt1.c1)))AND(t0.c1)))), -1.13995557E9, ((CAST(vt2.c0 AS NUMERIC)) NOT BETWEEN (((0.5672098857178137)==(vt1.c0))) AND (((vt2.c1)>>(t0.c79)))) FROM vt1, vt2 WHERE (((((1e500)<>('-1716180568'))) NOT BETWEEN (0.6981515680953788) AND (((((0.5239402189221192)AND('zJtU')))OR(x'')))));SELECT x'fa94', ABS(DISTINCT ((((((((((((vt1.c0)AND(vt2.c2)))OR(t0.c51)))OR(-629683829)))OR(t0.c79)))AND(t0.c10)))OR(vt2.c1))), (- (MAX(vt2.c1))) FROM vt2;SELECT CAST(vt1.c1 AS BLOB) COLLATE NOCASE FROM vt1, t0, vt2; -- 0ms;
SELECT TRIM(DISTINCT CASE t0.c1  WHEN vt1.c0 THEN vt2.c1 END, 0.6981515680953788) FROM t0 WHERE ('');SELECT GROUP_CONCAT(((((vt2.c0)OR(vt2.c0)))OR(t0.c79))) OVER () FROM t0, vt1 WHERE ((- (((x'f985')>>(0.870478053399142))))) ORDER BY ((CASE WHEN vt2.c0 THEN 1456372873 WHEN '-939211698' THEN t0.c1 WHEN t0.c79 THEN t0.c10 ELSE t0.c1 END) BETWEEN ((t0.c79 IN ())) AND (CASE t0.c79  WHEN t0.c1 THEN x'' ELSE vt1.c0 END));SELECT ((((((vt2.c1) BETWEEN (vt1.c1) AND (t0.c51)))AND(((t0.c10)&(t0.c10)))))OR(CAST(vt2.c1 AS REAL))), ((((((((t0.c79)AND(vt1.c0)))OR(0.36715365801482935)))AND(t0.c51)))AND(vt2.c2)) COLLATE RTRIM, ((((t0.c79)%(t0.c51)))||(COUNT(*))) FROM vt1 WHERE (0.9787759098177046);SELECT DISTINCT ((vt2.c2 COLLATE BINARY) NOT BETWEEN (((vt2.c1)GLOB(vt1.c0))) AND (CAST(t0.c10 AS NUMERIC))) FROM t0;SELECT (((NOT (vt2.c1)))<((((t0.c1, x'', t0.c10)) NOT BETWEEN ((vt1.c1, 0.7451335260350523, t0.c79)) AND ((vt1.c1, t0.c79, t0.c79))))) FROM t0, vt2 ORDER BY ((((vt2.c0) BETWEEN (t0.c51) AND (t0.c51)))>=(((t0.c1)|(t0.c79)))) DESC, t0.c1 COLLATE RTRIM DESC  NULLS FIRST;SELECT CAST(CASE WHEN t0.c51 THEN vt2.c1 END AS BLOB), COUNT(*) OVER ( PARTITION BY COALESCE(CASE WHEN t0.c51 THEN vt2.c0 ELSE t0.c1 END, t0.c51), (NOT ((+ (vt1.c1))))), (((((((((((vt1.c0))=((vt2.c2))))OR(vt2.c2)))OR(IFNULL(DISTINCT 'a%P', NULL))))AND((vt1.c1 IN ()))))AND(((t0.c79) NOT BETWEEN (t0.c1) AND (vt2.c1)))) FROM vt1 WHERE ((~ ((NULL IN ()))));SELECT DISTINCT CASE WHEN 0X4f1de3aa THEN ((t0.c79)>>(vt2.c1)) WHEN ((vt2.c2)LIKE(t0.c51)) THEN LTRIM(t0.c79, vt2.c0) WHEN (vt1.c0 IN ()) THEN rtreenode('9Iq', vt1.c1) WHEN CASE t0.c51  WHEN t0.c79 THEN t0.c51 ELSE vt2.c1 END THEN '-173913117' WHEN (-585600166 IN ()) THEN ((vt2.c1)%(vt1.c0)) END FROM vt1 WHERE (((((((0X4ffd9db5))<=((x'6d487659')))))>(((('0.031572667960873546')<('낡(ꆧ)_'))))));SELECT ALL (~ ((((vt1.c0, vt2.c0, t0.c51)) BETWEEN ((x'9c2a', t0.c1, t0.c10)) AND ((vt1.c0, t0.c1, t0.c51))))) FROM vt1, t0, vt2; -- 0ms;
SELECT LAST_INSERT_ROWID() FROM vt2, t0, vt1 WHERE (((x'') IS FALSE)); -- 0ms;
SELECT ALL ((((vt2.c1)&(vt1.c0))) BETWEEN (((((((((t0.c51)OR(t0.c10)))OR(vt1.c0)))OR(t0.c10)))AND(vt2.c0))) AND (NULL COLLATE NOCASE)) FROM t0 WHERE ((((('33905839') IS TRUE)) IS TRUE));SELECT LENGTH(t0.c51) FROM vt2, t0 INNER JOIN vt1 ON (((((vt2.c1) NOT BETWEEN (vt1.c1) AND (t0.c79))))==((((vt2.c2) BETWEEN (t0.c10) AND (-1975264607))))) WHERE ((((((x'', x'', NULL))>=((NULL, 0xffffffffd6fd8331, 0.17946197390857788))))%(((NULL) NOT NULL)))); -- 0ms;
SELECT ALL ((vt1.c0)<<(((vt1.c1) NOTNULL))) FROM vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0))!=((NULL)))) NOT BETWEEN (((0X1eb35a0c) NOT BETWEEN (t0.c51) AND (t0.c51))) AND (((t0.c1)IS NOT(t0.c79)))) FROM vt1, t0 WHERE ((- (((0.6287634236638184) IS FALSE)))); -- 0ms;
SELECT DISTINCT ((((vt2.c0) NOTNULL))==(((t0.c51)+(vt1.c0)))) FROM vt2, vt1, t0; -- 0ms;
SELECT ((MAX(t0.c10))||((~ (t0.c1)))), LAST_VALUE(((vt2.c0)IS NOT(vt2.c2)) COLLATE RTRIM) OVER (), vt2.c1, (NOT ((~ (t0.c51)))), ((t0.c10 COLLATE BINARY) IS TRUE) FROM vt2;SELECT vt1.c1 COLLATE NOCASE FROM t0, vt2, vt1 WHERE ((('-1975264607' COLLATE NOCASE)>(CASE WHEN NULL THEN '2019645849' ELSE x'6970' END))); -- 0ms;
SELECT DISTINCT highlight(((vt2.c2)LIKE(vt2.c1)), (((vt1.c1))>=((vt2.c2))), ((((vt2.c2)AND(vt2.c2)))AND(vt1.c0)), (((t0.c79))<=((t0.c51)))) FROM t0, vt2, vt1 WHERE (((((x'3112') NOT BETWEEN ('3>JFWGQM') AND ('-46596489')))AND((((('428716367')OR(0.03623654471023163)))AND('BLZa+Xd\r'))))) ORDER BY ((((((((vt2.c0)AND(vt1.c1)))OR(t0.c79)))OR(((vt2.c2)=(t0.c1)))))AND(((t0.c51)*(vt2.c2)))) ASC  NULLS FIRST; -- 0ms;
SELECT 5.14494388E8 FROM t0, vt2, vt1 WHERE ((((~ (x''))) NOT BETWEEN ((- ('540404696'))) AND (((0.06545215788329295) IS TRUE)))); -- 0ms;
SELECT DISTINCT SUM(IFNULL(t0.c79, t0.c10)) COLLATE RTRIM FROM vt1, vt2, t0 WHERE ((((((('l+%.?s ')AND(0.9402761027200717)))AND('')))LIKE((('<g+*')<<(0.39597932715391837))))) GROUP BY (((vt2.c1)) BETWEEN ((((vt2.c0)<(vt2.c2)))) AND ((t0.c51 COLLATE NOCASE))) HAVING ((LIKELY(vt1.c0)) NOTNULL); -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS INTEGER))&(NULL)) FROM vt2, vt1 WHERE ((((x'')<<(0.3539985810305294)) IN ())) ORDER BY ((((vt1.c1)|(t0.c79))) BETWEEN ('0.17770800137882414') AND (((((vt2.c0)OR(vt2.c0)))OR(t0.c79))));SELECT (((t0.c79)IS(vt1.c0)) IN ()), COALESCE(DISTINCT vt2.c0, x'', vt1.c1, t0.c10) COLLATE NOCASE, TOTAL(CAST(vt2.c0 AS INTEGER)) FROM t0 WHERE (NULLIF(((-1916350341) BETWEEN (0Xffffffffcba72ace) AND (NULL)), (('-1455776498') NOT NULL))) ORDER BY vt1.c0;SELECT DISTINCT ((CAST(vt2.c0 AS NUMERIC)) NOTNULL) FROM vt1, t0, vt2 WHERE (((((0x664d6a4d)>(x''))) BETWEEN ((x'307c' IN (NULL, NULL))) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((vt2.c1)>=(t0.c1))) NOTNULL) FROM vt2 NOT INDEXED, vt1, t0; -- 0ms;
SELECT DISTINCT (- (((vt2.c0)LIKE(vt2.c1)))) FROM t0, vt2 WHERE (((UNLIKELY(NULL))||(((((((((((((x'')AND('A*Ka쀢YttZ')))OR('-435344433')))AND(x'')))OR(0.07775836028866312)))AND('P')))OR(NULL))))) GROUP BY (('1935256319') NOT NULL); -- 0ms;
SELECT ((((((((((((((t0.c10)<=(vt2.c2)))OR(((vt2.c1) ISNULL))))AND(x'')))AND(NULL)))OR((vt1.c1 IN ()))))OR(CASE t0.c10  WHEN '1634953168' THEN vt1.c0 WHEN t0.c79 THEN vt2.c1 WHEN vt1.c1 THEN vt2.c2 END)))AND(((vt1.c0) NOTNULL))), COUNT((+ (vt2.c0)) COLLATE BINARY) OVER (), ((('' IN (vt1.c0))) BETWEEN (CAST(t0.c51 AS INTEGER)) AND (CAST(vt1.c0 AS TEXT))) FROM vt1 WHERE (((NULL COLLATE NOCASE)OR(((((x'1be3')OR(x'')))OR(NULL)))));SELECT DISTINCT (t0.c1 IN ()) FROM t0 WHERE (CAST(((((x'')AND(0.5215064035348421)))AND(x'f951')) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((CASE WHEN vt2.c2 THEN vt1.c1 ELSE vt2.c1 END)OR(CASE vt2.c1  WHEN vt1.c0 THEN x'e52a' END)))OR(CASE vt1.c0  WHEN t0.c51 THEN t0.c51 ELSE vt2.c1 END)), CAST('-597497815' COLLATE BINARY AS BLOB), CAST((((t0.c1))=((vt2.c0))) AS BLOB) FROM t0 WHERE (((x'') IS FALSE)) ORDER BY ((t0.c51) NOT BETWEEN ((t0.c10 IN ())) AND (NULL)) DESC  NULLS FIRST;SELECT (- (vt1.c0)) FROM t0, vt1 LIMIT -46596489 OFFSET 1716349517; -- 0ms;
SELECT DISTINCT (~ (vt2.c1)) FROM t0 WHERE (NULL COLLATE BINARY) LIMIT -247069413;SELECT ((t0.c51 COLLATE RTRIM) IS FALSE), (x'c156' IN ()), CASE WHEN 0.0965781932815507 THEN NULLIF(t0.c10, vt2.c2) WHEN (((vt1.c0))=((t0.c10))) THEN ((t0.c1)/(x'')) WHEN vt1.c0 COLLATE RTRIM THEN CASE WHEN vt2.c1 THEN t0.c79 ELSE vt2.c2 END END, ((COUNT(t0.c1))<<((t0.c1 IN (t0.c1, vt2.c1)))), (((t0.c10)) NOT BETWEEN ((((t0.c51) ISNULL))) AND ((((t0.c10) BETWEEN (t0.c51) AND (t0.c10))))) FROM vt1, vt2, t0 WHERE ((((('1116229779' IN ())))>=((CAST('' AS REAL))))) LIMIT 1437380769 OFFSET 384783727; -- 0ms;
SELECT DISTINCT ((((((NULL) IS TRUE))OR(t0.c10)))AND(((t0.c51)<(vt2.c1)))) FROM t0, vt2; -- 0ms;
SELECT ALL CAST(MAX(t0.c10) AS REAL) FROM vt2 NOT INDEXED, t0 WHERE ((((((-1.648389858E9))<((x''))))!=((- (x''))))) LIMIT 1679508448 OFFSET -1164805197; -- 0ms;
SELECT DISTINCT ((((t0.c10) NOT NULL))IS NOT(vt2.c2)) FROM vt2 WHERE ((((x'')>(-247069413)) IN ((((0X66895f82)) NOT BETWEEN ((NULL)) AND ((0.044168932345288514))), ((0.9100839511497109)LIKE(0.1574683374680611)))));SELECT DISTINCT ((CASE WHEN 0.6369938362501653 THEN t0.c1 END)>=(((((((((t0.c51)AND(NULL)))AND(vt2.c0)))OR(vt2.c0)))AND(t0.c51)))), (((t0.c10)>>(t0.c51)) IN ()), (((UPPER(DISTINCT vt1.c1)))==((COUNT(NULL)))), (NOT (ROUND(t0.c51, 0Xffffffffb3390ff8))), (- (x'')) FROM vt2, t0, vt1; -- 0ms;
SELECT CASE WHEN TOTAL(t0.c51) THEN (vt1.c1 IN ()) END FROM t0, vt1, vt2 WHERE ((((2.140336189E9))<=((((((0.37634413984789916)AND('h}V\n㵶!Yf媨')))AND('599064958')))))); -- 0ms;
SELECT ALL (((((vt1.c1) NOT BETWEEN (1.755313055E9) AND (t0.c1)), 0.9206705497787308, ((NULL)<(t0.c1))))>(((((vt2.c1, vt1.c1, t0.c51)) NOT BETWEEN ((vt2.c1, vt2.c2, t0.c51)) AND ((t0.c10, vt2.c2, t0.c10))), t0.c51 COLLATE BINARY, (+ (vt1.c0))))) FROM vt1, t0;SELECT ALL ((MIN(vt1.c0))<(TOTAL(vt1.c1))), (((('2079240995')||(t0.c1)))IS NOT('xfS')), ((ABS(t0.c10)) IS FALSE) FROM vt1, t0 WHERE (CASE ((x'b40b')OR(0.45374658759287223))  WHEN NULL COLLATE NOCASE THEN COALESCE(DISTINCT x'', NULL) WHEN (9.55599682E8 IN ()) THEN (('g6r')=(x'189394cb')) WHEN TYPEOF(DISTINCT 0.2970923481869753) THEN (((x'dad2', NULL, 0.41903604013753204, NULL, '-1827863486'))>=((0.10667844503429191, 0x3ba5566d, x'', 0.43877699874816534, '\n/'))) ELSE UPPER(DISTINCT 1872316464) END) ORDER BY ((vt2.c1 COLLATE NOCASE) BETWEEN (vt1.c1) AND (t0.c79 COLLATE NOCASE)) ASC;SELECT TOTAL(((-1065171411)||(vt2.c2))) OVER ( ORDER BY CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (t0.c79)) THEN COALESCE(vt1.c1, vt2.c1, vt2.c0, t0.c51) END), (((NOT (t0.c1)))=((- (t0.c1)))), 0x1ac1296 FROM vt1, vt2, t0; -- 0ms;
SELECT ALL '1634953168' FROM vt1, vt2; -- 0ms;
SELECT DISTINCT LAG((+ (LTRIM(vt2.c0))), (('쮳v_2d+*n') IS FALSE), vt2.c0) OVER ( RANGE BETWEEN ((((((((NULL)AND((+ (t0.c51)))))AND(CASE t0.c1  WHEN NULL THEN vt1.c0 ELSE t0.c10 END)))OR(CASE WHEN t0.c10 THEN vt2.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt2.c0 THEN t0.c1 ELSE t0.c79 END)))AND((~ (vt2.c2)))) PRECEDING AND  UNBOUNDED FOLLOWING) FROM vt2;SELECT DISTINCT ((CASE vt1.c1  WHEN vt2.c1 THEN vt2.c0 ELSE t0.c79 END) NOT BETWEEN (t0.c79 COLLATE NOCASE) AND ('')) FROM t0, vt1, vt2; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0, vt1, vt2 WHERE (((~ ('#쮳')) IN ())); -- 0ms;
SELECT DISTINCT (((t0.c1 IN (t0.c51))) NOT BETWEEN (ABS(x'')) AND (((((vt2.c2)OR(t0.c1)))AND('1239199899')))) FROM vt2, t0, vt1; -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt2, vt1, t0 WHERE (IFNULL(((((((((0.9309594717541952)AND(-1.73913117E8)))OR(NULL)))OR(x'')))OR(NULL)), CAST(NULL AS INTEGER))); -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(t0.c1) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c1)||(vt2.c1)))<<(vt2.c0 COLLATE NOCASE)) FROM t0, vt1 WHERE ((+ (0.43337001016442167)) COLLATE BINARY);SELECT ALL ((((vt1.c1)<=(vt1.c0))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (t0.c79))) AND ((t0.c1 IN ()))), ((((vt2.c1) IS TRUE))LIKE(((t0.c79)>(vt2.c2)))), (((((vt2.c1 IN (vt2.c0)))AND(vt2.c1 COLLATE NOCASE)))OR('-168849165')) FROM vt2, t0, vt1 WHERE (CAST(('-1164805197' IN ('0.6960770897600698')) AS BLOB)); -- 0ms;
SELECT ALL RANK() OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND json_valid(CASE WHEN vt1.c0 THEN vt2.c2 WHEN t0.c10 THEN t0.c79 WHEN t0.c79 THEN vt2.c2 ELSE vt2.c2 END) PRECEDING) FROM t0, vt1, vt2; -- 0ms;
SELECT DISTINCT CASE ((vt2.c1) BETWEEN (vt1.c1) AND (t0.c1))  WHEN ((x'893a')-(t0.c10)) THEN ((((((((vt1.c0)OR(vt2.c1)))OR(vt1.c1)))AND(vt1.c0)))OR('')) WHEN 1.456372873E9 THEN (~ (vt2.c0)) WHEN (((t0.c10, vt2.c0, NULL))!=((vt2.c1, t0.c79, t0.c10))) THEN ((vt2.c2) BETWEEN (vt1.c1) AND (t0.c79)) END FROM t0, vt2, vt1; -- 0ms;
SELECT ALL (~ (t0.c10)) COLLATE NOCASE, 0.200758546841995, GROUP_CONCAT(((NULL) ISNULL)) FROM t0 GROUP BY (((t0.c10, t0.c79, t0.c79)) NOT BETWEEN ((HEX(t0.c51), ((vt2.c2)<<(vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END)) AND (((((t0.c51)) NOT BETWEEN ((vt2.c2)) AND (('I\3J*8䀢'))), ((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c2)))AND(t0.c51)))OR(vt2.c1)), ((t0.c51) NOT BETWEEN (t0.c79) AND (t0.c79)))));SELECT DISTINCT ((((vt2.c0)<=(vt2.c2))) NOT BETWEEN ((t0.c51 IN ())) AND (((((((((t0.c79)AND(t0.c1)))AND(t0.c79)))AND(t0.c79)))AND(t0.c1)))) FROM vt2, t0; -- 1ms;
SELECT DISTINCT MAX(((t0.c1)!=(t0.c51)), GROUP_CONCAT(t0.c79), AVG(t0.c10), COALESCE(DISTINCT t0.c10, vt2.c1), MAX(t0.c79), ((vt2.c2)/(t0.c79))), ((((COUNT(*))AND(((((0.008703328676939348)AND(x'be95')))OR(vt2.c2)))))AND(x'')), (((((((((('')OR(vt2.c2)))AND(t0.c10)))OR(vt1.c0)))OR(t0.c79)))%(((vt1.c0)%(vt1.c0)))) FROM vt1 WHERE (((NOT (0.5558110057675079)) IN (((0.31272024334790405) IS TRUE), ('' IN ()))));SELECT DISTINCT CASE WHEN ((t0.c10) BETWEEN (t0.c51) AND (t0.c1)) THEN ((t0.c1)>(vt2.c1)) WHEN ((vt1.c0)/(x'6db5')) THEN ((t0.c51) IS FALSE) WHEN GROUP_CONCAT(vt2.c2) THEN ((vt2.c2) NOT BETWEEN (t0.c51) AND (vt1.c1)) ELSE CAST(t0.c79 AS NUMERIC) END, (- (t0.c10)) COLLATE BINARY, (+ (vt1.c0)) FROM vt1, vt2, t0 WHERE ((~ (CASE WHEN x'' THEN x'' ELSE 0.9607676669578167 END))); -- 0ms;
SELECT LAG((((t0.c10) IS TRUE) IN ()), NULL, (((t0.c10)) BETWEEN ((CASE t0.c79  WHEN t0.c79 THEN t0.c10 WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN t0.c10 END)) AND ((((t0.c1)>=('c')))))) OVER () FROM t0 WHERE ((+ (UNLIKELY(0.9154759367358076)))); -- 0ms;
SELECT DISTINCT AVG(CAST(1.12935848E9 AS INTEGER)) FILTER(WHERE ((CASE WHEN t0.c79 THEN t0.c51 WHEN t0.c51 THEN t0.c1 WHEN vt1.c1 THEN t0.c10 ELSE vt1.c0 END)<<(CASE WHEN t0.c79 THEN vt2.c2 END))) OVER (), CASE (NOT (vt1.c1))  WHEN (((vt2.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c51))) THEN NULLIF(DISTINCT t0.c51, t0.c79) END, CASE WHEN (NOT (vt1.c1)) THEN INSTR(vt1.c1, vt2.c1) ELSE AVG(t0.c10) END FROM t0, vt1 LIMIT -875165999;SELECT ALL ((0.12077311609639296) IS TRUE) COLLATE NOCASE FROM vt1, t0, vt2; -- 0ms;
SELECT DISTINCT ((((((((((1129358480) ISNULL))OR(CAST(t0.c1 AS BLOB))))AND(t0.c10 COLLATE RTRIM)))AND(SUM(1731457291))))OR('-1083021280')) FROM vt1, vt2;SELECT DISTINCT (t0.c10 IN ()) COLLATE RTRIM, TOTAL(((t0.c10)IS NOT(t0.c79))) OVER ( ORDER BY ((CASE t0.c51  WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (((vt2.c1) IS TRUE)) AND (SQLITE_COMPILEOPTION_USED(NULL))) ASC), 'Quk|)' FROM vt2, t0, vt1 LIMIT -157584308; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((vt2.c1)) AND ((vt2.c1))) COLLATE BINARY FROM vt2, t0 INDEXED BY i10, vt1;SELECT DISTINCT CASE COUNT(*)  WHEN (('-2116587705') NOT BETWEEN (t0.c1) AND (vt2.c1)) THEN GROUP_CONCAT(vt1.c0) ELSE x'' END, ((((('' IN ()))AND(CASE WHEN '' THEN vt2.c2 ELSE t0.c51 END)))OR(MAX(vt2.c1))), (- (((NULL) BETWEEN (NULL) AND (vt2.c2)))) FROM t0, vt1;SELECT ALL ((((((((((t0.c51)<=(vt2.c2)))AND(((vt1.c1)=(vt1.c0)))))AND((~ (t0.c79)))))AND(CASE vt2.c1  WHEN ')io!' THEN vt2.c1 ELSE t0.c79 END)))OR(((vt2.c0)AND('BV{')))), '-2116587705', ((t0.c1)GLOB(0.6446184458946689)) COLLATE RTRIM, vt2.c0, json_insert(0.07525232632412249, CASE vt2.c1  WHEN t0.c1 THEN t0.c10 END, CAST(vt1.c1 AS TEXT)) FROM vt2, vt1;SELECT 0.7740968513563857, ((((((((((((((vt2.c0) BETWEEN (vt2.c2) AND (vt1.c1)))AND(((NULL) BETWEEN (t0.c1) AND (NULL)))))OR(((t0.c79) NOT NULL))))AND(CAST(vt1.c1 AS REAL))))OR(vt2.c1)))OR(((vt1.c1)IS(x'')))))OR((~ (vt1.c0)))), t0.c1, (((~ (0.20251069050168258)))>(json_array_length(t0.c10, vt2.c1))), vt1.c0 COLLATE BINARY FROM vt2, t0, vt1; -- 0ms;
SELECT DISTINCT (NOT (((vt2.c1)-(t0.c79)))) FROM t0;SELECT DISTINCT ((((vt2.c2) IS FALSE)) NOTNULL) FROM vt2, vt1; -- 1ms;
SELECT CAST((- (t0.c51)) AS REAL), 0.975176822316089, COALESCE(DISTINCT CASE t0.c79  WHEN vt1.c0 THEN vt2.c1 WHEN t0.c10 THEN vt2.c2 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END, LOWER(t0.c51)) FROM t0, vt2, vt1 WHERE (CAST(CAST(-813469266 AS TEXT) AS REAL)); -- 0ms;
SELECT DISTINCT (+ ((~ (vt2.c2)))), ((((((t0.c10)AND(vt2.c0)))OR(t0.c51))) NOT BETWEEN (((vt1.c1)%('-597497815'))) AND (((t0.c51) NOT BETWEEN (0.9573732613529545) AND (vt2.c2)))), ((((vt2.c2) IS FALSE))/(((((vt2.c1)OR(t0.c51)))OR(vt2.c2)))) FROM vt1, t0, vt2 WHERE ((((('%M7j#TxᆍK')LIKE(0.19538963064899473)))OR(((0Xffffffffa02470db)*(1714487040))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt2 NOT INDEXED, vt1, t0 WHERE ((- (0.8734775860824093 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT COUNT(((vt2.c2) BETWEEN (vt1.c0) AND (vt2.c0)) COLLATE BINARY) OVER () FROM vt2, vt1 WHERE ((((('눩') IS TRUE))<>(((-1.390066379E9) IS TRUE)))) ORDER BY (~ (UPPER(t0.c1))) DESC, NULLIF(DISTINCT ((t0.c51)*(t0.c10)), HEX(DISTINCT vt1.c1))  NULLS FIRST, ((((vt2.c1) IS TRUE))<(x''));SELECT ((((COUNT(*))OR(((((((((((((vt2.c1)AND(vt1.c0)))OR(t0.c1)))AND(vt2.c0)))AND(vt2.c1)))OR(vt2.c1)))OR(vt2.c1)))))OR(((vt2.c0)*(vt1.c1)))) FROM t0 WHERE (CASE WHEN (+ (0.12580061214563998)) THEN CAST(0.20484101667519516 AS TEXT) END) GROUP BY (((0.9402761027200717)) NOT BETWEEN (('%b┪iNi')) AND ((CASE vt2.c1  WHEN vt2.c2 THEN vt2.c1 END))), ((CAST(x'' AS BLOB)) IS FALSE), ((vt2.c2) NOTNULL) ORDER BY TYPEOF(NULL);SELECT CAST(((((((((t0.c10)AND('鍞pw.-')))OR(vt1.c0)))AND(vt1.c1)))AND(vt2.c0)) AS REAL) FROM vt1, t0;SELECT ALL (((vt1.c1 IN ()))<((((vt1.c0))>((vt2.c1))))) FROM t0 WHERE ((CASE NULL  WHEN x'' THEN NULL WHEN 0.12268540002232375 THEN x'' WHEN '0.3539985810305294' THEN NULL WHEN x'' THEN NULL WHEN 'U''%2r%' THEN '1016308245' END IN ())) LIMIT 515070476;SELECT DISTINCT 0.7125285683138277 FROM vt1, t0, vt2 WHERE (((1233434217 COLLATE BINARY) BETWEEN (((NULL)-(x''))) AND (CAST('X⯏&~Mb3' AS BLOB)))); -- 0ms;
SELECT ALL ((x'905c')*(SQLITE_SOURCE_ID())), ((((vt2.c2)IS NOT(t0.c79)))LIKE(((vt2.c0) NOT NULL))), (((t0.c10))>((t0.c10))) COLLATE RTRIM, CAST(CASE WHEN NULL THEN t0.c10 ELSE vt2.c1 END AS BLOB), (((- (vt2.c1)))>>(CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c51 END)) FROM vt1, t0 WHERE (((((NULL)OR('')))<<(((((((((x'')AND('SG(')))OR(NULL)))AND(NULL)))AND(0.47178544998821903)))));SELECT ALL FIRST_VALUE(((((vt1.c0)AND(t0.c79)))AND(t0.c79)) COLLATE RTRIM) OVER ( ORDER BY (((~ (vt2.c0))) NOTNULL), (((t0.c79) NOT BETWEEN (t0.c10) AND (vt2.c2)) IN ()) DESC) FROM t0, vt2, vt1 WHERE (LIKELIHOOD(DISTINCT CASE 0.4677358276404705  WHEN 0.010164654280243046 THEN x'd55e' END, 0.2041677345030961)) LIMIT -1390060226; -- 0ms;
SELECT ALL ((CAST(x'' AS NUMERIC))|(((t0.c79) BETWEEN (t0.c79) AND (vt1.c0)))) FROM vt1, t0 WHERE (CAST(CAST(0.11915057547715036 AS BLOB) AS REAL)); -- 0ms;
SELECT TOTAL(x'') OVER () FROM vt2, vt1, t0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(0.7715216729090245, 0.9937272615935784) FROM vt2 WHERE ((~ ('C')) COLLATE NOCASE) GROUP BY TOTAL_CHANGES() HAVING ((((((vt2.c1))>((t0.c79)))))>((((0.5846151375886861) BETWEEN (vt2.c2) AND (vt2.c2))))) LIMIT -919959296 OFFSET -464852376;SELECT DISTINCT (((t0.c10, vt1.c0, t0.c10)) NOT BETWEEN (((~ (vt2.c1)), '</Vm4' COLLATE RTRIM, highlight(t0.c10, vt2.c1, vt2.c0, x'5e04'))) AND ((NULL, ((vt1.c1) ISNULL), ((((((((vt1.c1)OR('d퐆zjKds')))OR(t0.c79)))OR(t0.c1)))OR(t0.c51))))), TRIM((((t0.c10, vt1.c1, t0.c1))<>((t0.c51, vt1.c0, vt2.c2))), ((t0.c1)>=(t0.c10))), CASE WHEN ((((t0.c10)OR(NULL)))AND(t0.c51)) THEN ((((vt2.c1)OR(vt2.c2)))OR(vt2.c2)) WHEN (NOT (vt2.c1)) THEN 0xffffffffb9d1d85c WHEN PRINTF(vt1.c1) THEN CAST(vt1.c1 AS INTEGER) END, ((((((vt2.c1)OR(vt2.c2)))AND(vt1.c0)))*((vt2.c1 IN ()))), (NOT (t0.c79)) FROM vt1, t0, vt2 WHERE (((((NULL)AND(x'')))AND(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (~ ((('672872214') IS TRUE))), CAST(vt2.c2 AS NUMERIC), t0.c51, ((((((((vt2.c0)OR('*G|')))OR(vt1.c1)))AND(TYPEOF(DISTINCT vt2.c1))))AND(vt2.c1 COLLATE NOCASE)), CAST(((((((((-1.08302128E9)AND(t0.c1)))AND(vt2.c1)))OR(t0.c79)))OR(vt2.c1)) AS REAL) FROM t0;SELECT DISTINCT vt2.c1 FROM vt1, t0, vt2 ORDER BY t0.c10; -- 0ms;
SELECT DISTINCT (vt2.c0 IN (CASE WHEN t0.c79 THEN vt1.c0 WHEN vt2.c2 THEN t0.c51 WHEN vt2.c2 THEN vt2.c2 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c1 THEN vt2.c0 ELSE vt2.c1 END)) FROM vt2 WHERE (((((('0.07775836028866312')<=(x'')), 0.5094821364573338 COLLATE BINARY, ((0.8734775860824093)LIKE(x'')), CASE 0.2999525839005561  WHEN x'032c' THEN NULL WHEN '' THEN x'' WHEN 0xfffffffff88898bb THEN '515070476' ELSE '-1625800547' END, ((NULL) IS FALSE)))>=((CASE WHEN NULL THEN NULL WHEN NULL THEN 0.8266981234637433 WHEN 313159573 THEN 'W>' END, ((NULL)||(0Xffffffffbd177ee2)), TRIM(x'', x''), x'' COLLATE BINARY, CAST(x'' AS NUMERIC)))));SELECT ALL json_array(CAST(t0.c79 AS REAL), ((t0.c1) BETWEEN (t0.c10) AND (vt2.c1))) FROM t0, vt1 GROUP BY (((NULL, vt1.c0, NULL)) NOT BETWEEN ((((vt1.c0) NOT NULL), ((((t0.c10)AND(t0.c79)))AND(vt1.c1)), ((t0.c10) NOT BETWEEN (x'') AND (vt2.c2)))) AND (((+ (vt2.c2)), (((t0.c1)) BETWEEN ((vt1.c0)) AND ((t0.c79))), (0.7740968513563857 IN ())))) HAVING (((((vt2.c2)AND(vt2.c0)))OR(t0.c51)) IN (((vt1.c0)<<(vt1.c0)), vt2.c0 COLLATE BINARY));SELECT DISTINCT ((COUNT(t0.c10)) NOT BETWEEN (((t0.c51) NOT BETWEEN (t0.c10) AND (vt2.c2))) AND (LOWER(NULL))) FROM t0, vt2 WHERE (CASE '-1664174315' COLLATE BINARY  WHEN ((0.03634583793446977) BETWEEN (x'') AND (0.6588025080430472)) THEN 0x2dbbd67 END); -- 0ms;
SELECT DISTINCT ((('-279172946' IN ()))-((((t0.c10))<>((vt1.c1))))) FROM vt2, vt1 WHERE (CASE NULL COLLATE NOCASE  WHEN (NULL IN ()) THEN (+ (x'')) ELSE LIKELIHOOD(DISTINCT '-1390066379', 0.3583055944771337) END);SELECT ALL NTILE(((0.20484101667519516) NOT BETWEEN ((t0.c79 IN ())) AND ((- (t0.c51))))) OVER ( PARTITION BY json_insert((('{_')GLOB(vt2.c2)), LOWER('\rM,'), t0.c51), ((vt2.c2)>(((vt2.c1) BETWEEN (vt1.c1) AND (t0.c1))))) FROM vt2, t0, vt1 WHERE ((((((((((((((((((('-709625137')OR(x'')))OR(0.9203812085508184)))AND('-1970357649')))AND(NULL)))AND('(Of>y9䚡(')))AND('0.4394681332398681')))OR(0.7181793649152911)))OR('')))LIKE(CAST(NULL AS INTEGER)))); -- 1ms;
SELECT DISTINCT (((CASE WHEN t0.c1 THEN t0.c79 END, CASE t0.c51  WHEN t0.c1 THEN t0.c10 ELSE vt2.c0 END, (((vt2.c1, t0.c10, vt2.c2))<((x'b54e', vt2.c2, t0.c1)))))>((t0.c10, CASE WHEN t0.c1 THEN t0.c10 ELSE '?X_' END, UPPER(DISTINCT vt2.c1)))) FROM t0;SELECT (((((NULL, t0.c10, x''))<((t0.c10, vt2.c1, vt1.c0)))) NOT BETWEEN (CAST(vt2.c2 AS BLOB)) AND (((((((((x'')AND(vt2.c0)))AND(vt2.c1)))OR(vt2.c2)))AND(vt2.c2)))), MIN(vt1.c1), CASE CAST(t0.c79 AS BLOB)  WHEN ((t0.c10)>=(t0.c79)) THEN t0.c10 END, ((((((((t0.c51)OR(t0.c1)))AND('1342021045')))AND(((vt2.c0)>=('899307957')))))AND(((vt1.c1) BETWEEN (t0.c79) AND ('418583920')))), t0.c79 FROM vt2 WHERE (((((x'') NOTNULL)) ISNULL));SELECT DISTINCT (((t0.c51, vt2.c1, t0.c10)) BETWEEN ((((NULL) ISNULL), t0.c10 COLLATE BINARY, 0.11115261378057584)) AND ((vt1.c1 COLLATE BINARY, vt2.c1, (((vt1.c1, t0.c79, vt2.c0))=((vt1.c0, t0.c79, vt1.c0)))))) FROM vt2, vt1, t0 WHERE ((((+ ('0.5239402189221192'))) ISNULL)); -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((COALESCE(t0.c10, t0.c79))) AND ((t0.c51))) FROM t0, vt1 ORDER BY CASE (~ (vt2.c1))  WHEN ((t0.c10)>(t0.c79)) THEN (+ (x'')) END;SELECT DISTINCT CAST(t0.c10 COLLATE RTRIM AS REAL) FROM vt1 RIGHT OUTER JOIN vt2 ON (((t0.c79)) BETWEEN ((((vt2.c0)GLOB(vt2.c0)))) AND ((((vt1.c1)IS NOT(x''))))) FULL OUTER JOIN t0 ON t0.c51 WHERE ((~ ((((x'')) BETWEEN ((x'')) AND (('1484121652'))))));SELECT DISTINCT ((0.5221760551569733)<((((0x6733f10b, vt2.c2, t0.c51)) BETWEEN (('-1894862436', vt2.c1, t0.c1)) AND ((vt2.c0, vt1.c1, t0.c10))))) FROM t0 INDEXED BY i35, vt2, vt1 GROUP BY ((((((vt2.c1)GLOB(vt2.c2)))AND(vt1.c0)))OR(NULLIF(t0.c51, vt1.c0))) HAVING vt2.c1; -- 0ms;
SELECT DISTINCT x'' COLLATE BINARY FROM vt1, vt2 WHERE (('Ny' COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT ((((t0.c1)IS(t0.c1)))||(CASE vt2.c0  WHEN t0.c10 THEN vt2.c1 ELSE vt2.c2 END)) FROM t0 GROUP BY CAST(((vt2.c0) BETWEEN (vt1.c1) AND (t0.c51)) AS INTEGER), NULL, CAST(CAST(vt2.c0 AS INTEGER) AS REAL), ((((vt2.c2) NOT NULL))-(t0.c51 COLLATE RTRIM)), (~ (LIKELIHOOD(t0.c51, 0.1917886951421185))) HAVING CAST((vt1.c1 IN ()) AS REAL);SELECT SQLITE_COMPILEOPTION_USED((t0.c1 IN (0.008521536011209752, t0.c51))) FROM t0 WHERE ((((((0xfffffffffd38fe77) NOT BETWEEN ('') AND ('-1078507876')), x'2645' COLLATE NOCASE, NULL))<>((UPPER(DISTINCT '-706671328'), ((x'41e6') BETWEEN (x'48e3') AND (NULL)), json_valid(0.7721754586019235))))) ORDER BY '-996458462'; -- 0ms;
SELECT DISTINCT ((((((t0.c10) BETWEEN (t0.c10) AND (t0.c1)))AND(json_valid(vt1.c1))))OR(((vt2.c2) BETWEEN (vt1.c1) AND (vt2.c0)))), CAST(IFNULL(DISTINCT vt2.c2, t0.c79) AS NUMERIC), LAG(((CAST(vt2.c1 AS REAL))/(((t0.c1) BETWEEN (vt2.c1) AND (t0.c10)))), (((vt1.c0)/(t0.c1)) IN ()), ((t0.c79) IS TRUE)) OVER () FROM vt1, t0, vt2 WHERE (UNLIKELY(DISTINCT (NOT (NULL)))); -- 1ms;
SELECT DISTINCT (((((vt1.c0)<>(vt2.c1))))==((((((((((vt1.c1)AND(vt2.c1)))OR(t0.c79)))AND(vt1.c1)))OR(t0.c79))))) FROM vt1 NOT INDEXED WHERE (CASE WHEN (NOT ('-1390066379')) THEN ((0.05161019227640462) BETWEEN ('珥') AND (1038649341)) END) ORDER BY (- (((((((((vt2.c2)AND(t0.c1)))OR(vt2.c0)))AND(t0.c79)))AND(t0.c1)))) DESC;SELECT DISTINCT ((-1.7976931348623157E308)GLOB(t0.c79)) FROM t0, vt1 WHERE ((+ (x''))); -- 0ms;
SELECT (((((vt2.c0)AND(t0.c79)))AND(vt1.c0)) IN ()) FROM t0 WHERE ((((~ (NULL))) NOT NULL)) ORDER BY (((t0.c1, 0.22834579331673877, x'', NULL, vt2.c0)) BETWEEN ((((t0.c79) BETWEEN (t0.c1) AND (t0.c1)), (((vt1.c1)) BETWEEN ((t0.c1)) AND ((t0.c51))), ((vt1.c0) BETWEEN (x'06a3') AND (t0.c79)), ((t0.c1) IS FALSE), 0.966963265483939 COLLATE RTRIM)) AND ((((vt2.c0)<=('{{n}')), ((t0.c51)>=('')), CAST(t0.c10 AS BLOB), -1074400180, vt1.c0)))  NULLS LAST, ((vt2.c1 COLLATE NOCASE) BETWEEN ((t0.c51 IN (vt2.c2))) AND (t0.c79 COLLATE BINARY)) DESC  NULLS FIRST;SELECT DISTINCT ((json_valid(t0.c1))IS NOT(((t0.c79)IS NOT(vt2.c2)))) FROM t0 CROSS JOIN vt2 ON 0.3315420869697663; -- 1ms;
SELECT COUNT(*) OVER (), (((t0.c10)>(vt1.c1)) IN ()), AVG((((vt2.c2, t0.c1, 0x68c5aa))>=(('<k_', vt2.c2, vt2.c2)))) FROM vt1, t0 GROUP BY CHAR(t0.c51) COLLATE NOCASE, CASE CAST(NULL AS INTEGER)  WHEN CASE WHEN t0.c79 THEN t0.c10 ELSE vt2.c0 END THEN vt2.c0 COLLATE RTRIM ELSE ((((vt2.c0)OR(t0.c1)))OR(t0.c79)) END, (((NOT (vt1.c1))) NOT NULL);SELECT DISTINCT CASE WHEN CAST(vt1.c1 AS INTEGER) THEN ((t0.c51)<=(t0.c1)) ELSE (t0.c10 IN ()) END FROM vt1;SELECT DISTINCT ((CASE WHEN vt2.c1 THEN t0.c79 END)||((t0.c79 IN (vt1.c1)))) FROM t0 EXCEPT SELECT ALL CUME_DIST() OVER () FROM t0 WHERE (ABS(x''));SELECT DISTINCT (((vt2.c2, '0.5239402189221192', vt1.c1)) BETWEEN (((vt2.c0 IN (t0.c1, vt1.c1)), ((vt2.c1) BETWEEN (vt1.c0) AND (vt2.c1)), ((((((((vt2.c2)AND(t0.c51)))OR(x'')))OR(t0.c1)))OR(vt2.c2)))) AND ((((t0.c10)=(vt2.c0)), HEX(t0.c1), AVG(t0.c10)))) FROM t0;SELECT DISTINCT (((vt2.c2)|(vt1.c0)) IN (t0.c51)) FROM vt1;SELECT CUME_DIST() OVER () FROM t0, vt2, vt1 GROUP BY ((CASE vt1.c0  WHEN t0.c10 THEN t0.c51 END)-(((vt2.c1) NOT BETWEEN (vt1.c0) AND (t0.c1)))), 'Y纠<V', ((CAST(vt2.c1 AS REAL))<(((vt2.c1)>=(0.3701677598202)))) ORDER BY ((t0.c79) NOTNULL)  NULLS FIRST, ((((vt2.c0) NOT BETWEEN (vt2.c2) AND (vt2.c2))) BETWEEN (((vt1.c1)>=(vt1.c0))) AND (-168849165)) ASC; -- 0ms;
SELECT ALL (~ ((- (t0.c51)))), CASE WHEN ((vt2.c2)GLOB(vt2.c0)) THEN ((((vt2.c1)AND(vt1.c1)))OR(vt1.c0)) ELSE t0.c51 COLLATE RTRIM END, ((COALESCE(DISTINCT vt2.c0, NULL)) ISNULL) FROM vt1;SELECT CAST(((vt1.c0)LIKE(t0.c79)) AS INTEGER) FROM vt2, vt1, t0 WHERE ((~ ((('-5e(*o')>(x''))))); -- 0ms;
SELECT CASE WHEN vt2.c1 THEN 0.20076824266084292 WHEN vt2.c2 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt2.c0 THEN t0.c10 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c10 END COLLATE BINARY, CAST(((t0.c10)||(t0.c79)) AS INTEGER), NULL, ((((((((vt1.c1)AND(t0.c51)))AND(vt1.c0)))OR(((t0.c79)!=(t0.c1)))))OR(COUNT(*))), -1.390066379E9 FROM vt2, vt1 WHERE ((((((('-673470597') BETWEEN (0.22834579331673877) AND (x'')))OR((+ (0Xffffffffedd7514e)))))AND(((x'') BETWEEN (x'') AND ('-1965407692'))))) GROUP BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((CASE t0.c51  WHEN vt1.c1 THEN t0.c10 END)));SELECT ((NULL) BETWEEN (t0.c79) AND (vt2.c1)) COLLATE NOCASE FROM t0 WHERE (((((- (NULL))))>=((json_extract(0.9942583930969291, 0.8904695561167247, x'19b7', '')))));SELECT ALL (((NOT ('Y|ae#u]wf')))IS(((vt2.c2) BETWEEN (vt2.c0) AND (t0.c51)))) FROM vt2 WHERE (CAST('-1385296493' AS TEXT));SELECT DISTINCT vt1.c0, (- ((t0.c79 IN ()))), TOTAL((vt1.c0 IN (vt2.c1))) FROM vt2 WHERE ((('-1716180568' COLLATE NOCASE)|((('') NOT BETWEEN (0.3772651795401667) AND (NULL)))));SELECT DISTINCT LEAD(CASE WHEN vt2.c1 THEN CAST(vt2.c0 AS BLOB) WHEN ((t0.c51)<=(t0.c10)) THEN (NOT (vt2.c0)) WHEN ((vt1.c1)-(vt2.c1)) THEN (vt2.c2 IN (t0.c10)) END, ((((((t0.c51)AND(vt2.c0)))OR(((t0.c1) NOT BETWEEN (vt2.c2) AND (t0.c79)))))AND(t0.c51)), vt2.c2) OVER ( ORDER BY ((((((((((((t0.c79)AND(vt1.c0)))AND(t0.c79)))AND(-1622631658)))AND(x'470dc925')))AND(vt2.c0)))OR(t0.c1)) COLLATE BINARY  NULLS LAST, ((t0.c51 COLLATE BINARY)IS(((vt1.c0)<(t0.c79)))) ASC) FROM vt2, t0, vt1 WHERE ((((NOT (0.008703328676939348)))LIKE(((NULL) NOTNULL)))) ORDER BY ((CAST(t0.c79 AS INTEGER))|('<k_')) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t0.c79)) BETWEEN ((((NULL) NOT NULL))) AND ((((vt2.c0)%(t0.c79))))) FROM vt1, t0;SELECT DISTINCT t0.c51, NTILE(((((((vt1.c1)*(t0.c79)))OR(((((t0.c79)OR(vt1.c0)))AND(t0.c10)))))OR(t0.c51))) OVER (), vt2.c1 FROM t0, vt1 WHERE (((('?') BETWEEN ('O>7%ED') AND ('-541997886')) IN (((NULL) BETWEEN (0.7805593771121719) AND (1.720278914E9)))));SELECT DISTINCT (((vt2.c1 IN ()))IS NOT(vt1.c1 COLLATE NOCASE)), SUM((((t0.c51, vt1.c1, '')) NOT BETWEEN ((vt2.c2, vt2.c1, vt2.c2)) AND ((t0.c51, vt1.c0, vt2.c1)))) OVER (), (((CASE vt2.c0  WHEN t0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c1 WHEN vt1.c1 THEN vt1.c0 END, ((t0.c10)IS(vt2.c2)), CASE t0.c79  WHEN 0.7064203591343625 THEN 0.28924271992230244 ELSE vt1.c0 END))<((t0.c10 COLLATE BINARY, x'', ((vt1.c1)/(vt2.c0))))) FROM vt1, vt2;SELECT DISTINCT (((((t0.c51 IN ()))OR(((vt1.c1)&(vt1.c1)))))AND((vt1.c1 IN ()))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((CAST(vt2.c0 AS BLOB))AND(((NULL) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) FROM vt1, vt2 WHERE ((((NULL)) BETWEEN ((CASE NULL  WHEN 0.13738351809221427 THEN '-2116587705' ELSE 1984304914 END)) AND ((((('-1966315799', 0x333a716f, 0.3939713682494216))>=((' !q', NULL, '8OW?'))))))); -- 0ms;
SELECT (~ (((t0.c79) ISNULL))) FROM vt2, t0 WHERE ((((((('')AND('≿즋s1FK')))OR('%b')))IS(CASE WHEN 0Xffffffffa97dd6f6 THEN 0.5215064035348421 WHEN 0.10342764042974562 THEN x'cdb4' WHEN NULL THEN 0x6b8d28af ELSE x'' END))); -- 0ms;
SELECT ALL CASE WHEN CASE WHEN vt1.c1 THEN t0.c1 ELSE vt2.c0 END THEN ((vt2.c0) NOT NULL) ELSE vt1.c1 END FROM t0;SELECT DISTINCT (((((vt1.c1)&(t0.c51))))>=((((vt1.c1) BETWEEN (t0.c51) AND (t0.c10))))) FROM t0, vt1, vt2 WHERE ((((x'', 0.11398037369281566, x'2579')) NOT BETWEEN (((('1731457291')>>(NULL)), CAST('1635138934' AS NUMERIC), (((x'', 'E5', -2.88009312E8)) NOT BETWEEN ((NULL, NULL, '-2095615689')) AND ((0.934234650502409, NULL, -1.894862436E9))))) AND ((((NULL) BETWEEN (0.10714050687079046) AND ('1990813988')), UNLIKELY('V%'), (('') NOT NULL))))); -- 0ms;
SELECT DISTINCT NTILE(CASE CAST(vt1.c1 AS INTEGER)  WHEN ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))OR(0.10038272335163723)))OR(vt1.c1)) THEN CAST(vt1.c0 AS BLOB) ELSE x'' END) OVER () FROM vt1;SELECT ALL RTRIM((((vt2.c2))>((vt2.c2)))) FROM t0, vt1 WHERE ((((((('')AND(x'')))OR(0X198db14f))) NOT NULL));SELECT ALL GROUP_CONCAT(((((vt2.c2)AND(vt2.c2)))OR(vt2.c1))), CASE ((t0.c1) BETWEEN ('茇4') AND (t0.c1))  WHEN TOTAL(vt1.c0) THEN ((((t0.c1)AND(vt1.c1)))AND(vt1.c1)) END, AVG(NULL COLLATE BINARY) OVER ( RANGE  CURRENT ROW) FROM t0;SELECT ((CASE vt2.c0  WHEN t0.c10 THEN t0.c79 WHEN '1802637707' THEN t0.c10 WHEN vt1.c0 THEN t0.c79 ELSE t0.c1 END) NOT BETWEEN (((vt2.c0)+(vt2.c0))) AND (x'')) FROM vt2, vt1, t0; -- 0ms;
SELECT GROUP_CONCAT((('FALSE')/(t0.c1))) FILTER(WHERE ((((t0.c1) IS FALSE)) IS TRUE)) OVER ( PARTITION BY ((t0.c10)LIKE(t0.c79)) COLLATE RTRIM, ((+ (t0.c10)) IN ())) FROM t0, vt2 ORDER BY ((CASE WHEN t0.c51 THEN vt2.c2 WHEN t0.c79 THEN x'' WHEN vt2.c0 THEN t0.c51 ELSE vt2.c0 END) NOT BETWEEN (UNLIKELY(DISTINCT t0.c10)) AND (LTRIM(5.40404696E8, t0.c79))) DESC; -- 0ms;
SELECT ((((t0.c79)IS(vt2.c1)))LIKE((NOT (vt2.c1)))) FROM vt2, vt1 WHERE ((((+ ('1038649341'))) NOT BETWEEN (IFNULL('', '0.0965781932815507')) AND ((('514494388') NOT BETWEEN (0.9333756312990221) AND ('1695681259'))))) GROUP BY ((t0.c1)||((+ (vt2.c2))));SELECT DISTINCT DATE((((t0.c10, t0.c51, vt2.c2)) NOT BETWEEN ((vt2.c2, vt1.c1, t0.c1)) AND ((vt1.c1, t0.c51, vt2.c2))), vt2.c2, ((vt1.c0)*(vt1.c0)), (~ (t0.c79)), (((t0.c79, vt1.c0, t0.c51))=((vt2.c1, t0.c51, vt2.c1)))) FROM t0, vt1, vt2 WHERE (CAST('-2011615002' AS BLOB)); -- 0ms;
SELECT DISTINCT (CASE t0.c51  WHEN vt1.c1 THEN vt2.c1 ELSE vt1.c1 END IN ()) FROM vt2, t0, vt1 GROUP BY CAST(CAST(t0.c79 AS BLOB) AS INTEGER), (('0.975176822316089') IS FALSE), (((((vt1.c1 IN ()))AND(((t0.c10)||(t0.c1)))))OR((vt1.c0 IN ()))) HAVING (((+ (t0.c79))) NOT BETWEEN ((vt2.c2 IN ())) AND ((((t0.c51, t0.c51, vt1.c0))>((NULL, t0.c10, vt1.c1))))); -- 0ms;
SELECT DISTINCT (((((vt2.c0, '?3', '')) NOT BETWEEN ((vt1.c0, t0.c51, vt2.c2)) AND ((vt2.c0, vt2.c2, vt2.c2)))) NOT NULL) FROM vt1, t0, vt2 WHERE ((NULL COLLATE NOCASE IN (((((x'')OR('0.20484101667519516')))OR(x''))))); -- 0ms;
SELECT DISTINCT TOTAL(((vt2.c0) IS TRUE)) OVER () FROM vt1, vt2, t0 NOT INDEXED ORDER BY 0.5648874725893313 LIMIT 898578358; -- 0ms;
SELECT CASE ((x'') ISNULL)  WHEN (((vt1.c1)) BETWEEN ((1708813574)) AND ((vt1.c1))) THEN MIN(vt2.c2, t0.c79) WHEN (~ (vt1.c0)) THEN ((t0.c10)+(t0.c10)) WHEN ((t0.c10) IS TRUE) THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (t0.c10)) ELSE ((t0.c10) NOTNULL) END, MAX(COUNT(*)), GROUP_CONCAT((vt1.c0 IN ())) FROM vt2, vt1, t0 WHERE ((((- (x'')))>=((((0.08107849939443723))==(('c'))))));SELECT DISTINCT CAST(SUM(vt1.c1) AS TEXT), DATE((((vt2.c1, t0.c51, vt2.c0)) BETWEEN ((t0.c51, vt1.c1, t0.c1)) AND ((vt2.c0, vt2.c1, t0.c79))), (+ (vt1.c0)), CAST(t0.c1 AS NUMERIC), ('z' IN ()), ((t0.c10) NOT NULL), CASE vt2.c2  WHEN t0.c79 THEN vt2.c0 END, ((vt1.c1) NOT NULL), COUNT(vt2.c2), CAST(vt2.c0 AS REAL)), NULL FROM vt2;SELECT ((((json_insert(t0.c51, t0.c10, t0.c1))AND(((vt1.c0)>>(vt2.c0)))))OR('m5f7')) FROM t0, vt2, vt1 WHERE (json_type(((NULL)+(1720278914)))); -- 0ms;
SELECT DISTINCT CAST(((t0.c79)+(vt2.c2)) AS REAL) FROM t0 INDEXED BY i35, vt2; -- 0ms;
SELECT DISTINCT vt2.c1 FROM t0 GROUP BY x'2569668b' COLLATE RTRIM;SELECT DISTINCT 'qAcZx' FROM vt2, vt1; -- 0ms;
SELECT DISTINCT vt2.c1 FROM vt1 WHERE ((((LIKELY(x'')))!=(((+ (x'')))))) ORDER BY json_type(json_quote(vt2.c0));SELECT DISTINCT CASE WHEN ((vt2.c0) NOT NULL) THEN CASE vt2.c2  WHEN t0.c51 THEN t0.c1 ELSE t0.c1 END ELSE vt1.c0 COLLATE NOCASE END, ((((vt1.c1 IN ())))>=((((vt1.c0)+(vt2.c0))))), ROW_NUMBER() OVER () FROM t0 WHERE (((CASE WHEN x'' THEN x'' WHEN 0.870478053399142 THEN 0x78615999 WHEN '#!ꆰ&F' THEN x'' ELSE '-2116587705' END)||((NULL IN (-135181501)))));SELECT CAST(t0.c10 AS NUMERIC) COLLATE RTRIM FROM t0, vt2 WHERE (NULL); -- 0ms;
SELECT DISTINCT json_quote(CHAR(vt2.c2)) FROM vt1, vt2, t0; -- 1ms;
SELECT DISTINCT LEAD((((t0.c51 IN ())) NOTNULL), t0.c79, '') OVER () FROM vt1, t0, vt2 WHERE (((((((x'')||(NULL)))AND(('' IN ()))))AND(((0.8000118927400123) NOT BETWEEN (NULL) AND ('XjTr01\n{'))))); -- 0ms;
SELECT DISTINCT (- (((((((((t0.c10)OR(vt2.c2)))AND(vt2.c1)))OR(vt2.c2)))AND(vt2.c1)))) FROM vt1, t0, vt2; -- 0ms;
SELECT ALL (- ((+ (vt2.c1)))) FROM vt1;SELECT DISTINCT ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE t0.c79 END) NOT BETWEEN ((((vt2.c1))==((vt2.c1)))) AND (((((((((0.31821254360530826)AND(vt1.c0)))AND(vt2.c1)))AND(vt2.c1)))OR(vt1.c0)))) FROM t0, vt2, vt1 INDEXED BY i35;SELECT DISTINCT (((((vt2.c0)OR(vt2.c1))))<>((vt2.c1 COLLATE BINARY))) FROM vt1, vt2 WHERE (((((NULL) NOTNULL)) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE WHEN ((((t0.c1)AND(t0.c1)))OR(t0.c51)) THEN HEX(vt2.c0) END FROM vt2, t0 WHERE (CAST('-1010965811' AS REAL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c1) NOT BETWEEN (vt1.c0) AND (321279994))) FROM vt2 CROSS JOIN vt1 ON CASE WHEN ((((t0.c10)OR(vt2.c1)))OR(vt2.c2)) THEN ((t0.c10)IS(vt1.c1)) END WHERE (NULLIF(DISTINCT (+ ('y!	TZ*')), (('') NOTNULL))) GROUP BY (((t0.c51)) BETWEEN ((((vt2.c0) NOT BETWEEN (vt1.c1) AND (t0.c51)))) AND ((CAST(vt1.c1 AS BLOB))));SELECT ALL CASE ((vt1.c0) BETWEEN (vt1.c1) AND (t0.c1))  WHEN CAST(t0.c10 AS TEXT) THEN t0.c1 WHEN ((((vt2.c2)OR(vt2.c1)))OR(vt2.c2)) THEN ((NULL)<=(t0.c79)) WHEN CAST(vt1.c1 AS BLOB) THEN ((vt2.c2) NOT BETWEEN (vt2.c2) AND (vt2.c2)) ELSE TOTAL('fwyX') END FROM vt1, t0, vt2; -- 0ms;
SELECT DISTINCT HEX(DISTINCT TOTAL(x'')) FROM t0, vt2 NOT INDEXED, vt1 WHERE (UPPER(NULL)) GROUP BY CAST(t0.c79 COLLATE BINARY AS INTEGER); -- 0ms;
SELECT DISTINCT ((+ (t0.c51)) IN ()) FROM vt1, t0, vt2 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((((t0.c10, vt2.c2, t0.c1)) NOT BETWEEN ((t0.c1, t0.c79, vt2.c0)) AND ((vt2.c0, vt1.c0, x'4a0a')))) NOT NULL) FROM vt1, t0 WHERE (CAST(0.5072460675690833 AS TEXT));SELECT DISTINCT (NOT (((((t0.c79)AND(t0.c1)))AND(t0.c51)))) FROM vt2, vt1, t0 GROUP BY (NOT ('-1205049533')), ((vt1.c1 COLLATE RTRIM)/((66073854 IN (vt1.c0)))), (((((((vt2.c0))<=((t0.c79))))OR(vt2.c1 COLLATE NOCASE)))OR(CAST(t0.c10 AS TEXT))) HAVING (((- (vt1.c0))) NOT BETWEEN (((NULL) NOTNULL)) AND (vt2.c0 COLLATE NOCASE)); -- 1ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 WHERE (CAST(NULL AS TEXT) COLLATE RTRIM) ORDER BY '1439474684', (~ ((+ (-1.455776498E9)))); -- 0ms;
SELECT (NOT ((NULL IN (vt1.c0)))), CAST(((vt2.c1) NOTNULL) AS REAL), CAST(LIKELY(vt2.c1) AS TEXT), (- (CASE vt2.c0  WHEN x'b0ce' THEN t0.c79 END)), (~ (COUNT('1829594067'))) FROM vt1, t0 WHERE (((((((((102157235)OR(0X6b72118b)))OR(NULL)))AND(((x'18538071')>=('514265724')))))OR(('KN[%*b,閭B' IN ())))) LIMIT -355887992;SELECT DISTINCT (((MAX(t0.c79)))=((((vt2.c1) ISNULL)))) FROM vt1, vt2;SELECT ALL FIRST_VALUE((~ (NULL COLLATE RTRIM))) OVER () FROM vt1, t0, vt2 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT DISTINCT (('t9Z!,')&(((((vt1.c0)OR(vt2.c1)))AND('0.9573732613529545')))), t0.c51, json_quote((+ (t0.c51))) FROM vt2 WHERE ((~ (((('-1074400180', 0.6847497228149441, NULL))>(('1885501134', x'', x'')))))) LIMIT 1390077016;SELECT DISTINCT ((((vt1.c1)<=(t0.c79)))*(CASE WHEN t0.c79 THEN t0.c1 END)), SUM(((vt1.c0) IS TRUE)) OVER ( ORDER BY ((vt1.c1 COLLATE NOCASE)>>(CASE WHEN t0.c79 THEN 0xfffffffffef383b2 ELSE t0.c51 END))  NULLS LAST), ((CAST(vt1.c1 AS BLOB)) BETWEEN (t0.c10) AND ((((t0.c10)) NOT BETWEEN ((vt1.c0)) AND ((t0.c10))))) FROM vt1, t0, vt2 GROUP BY CASE (((vt2.c0))<((t0.c51)))  WHEN ((t0.c51)-(vt1.c1)) THEN ((((((((t0.c1)AND(vt2.c2)))AND(t0.c51)))AND(x'')))OR(t0.c10)) WHEN (~ (t0.c79)) THEN (((t0.c1))>((vt2.c0))) WHEN x'' THEN ((NULL) NOT BETWEEN (vt2.c2) AND (vt1.c1)) WHEN CASE t0.c51  WHEN t0.c51 THEN vt2.c2 END THEN ((t0.c79) BETWEEN (t0.c1) AND ('\')) WHEN ((((((((t0.c51)AND(t0.c79)))AND(t0.c79)))AND(vt2.c2)))OR('8+i''2(e')) THEN ABS(vt2.c0) END HAVING CAST(CAST(vt2.c0 AS BLOB) AS INTEGER); -- 0ms;
SELECT ((((((vt2.c1)AND(vt2.c0)))AND(NULL)))IS NOT(((vt2.c1) IS FALSE))), DENSE_RANK() OVER (), COUNT(GROUP_CONCAT(HEX(vt1.c0))) FROM vt1, t0, vt2;SELECT ALL x'' FROM t0, vt1, vt2 WHERE (((((x'') ISNULL)) NOT BETWEEN (CAST(0.7694005211531932 AS NUMERIC)) AND ('1712194857' COLLATE BINARY))) ORDER BY t0.c10  NULLS FIRST, (((((((t0.c1)) NOT BETWEEN ((t0.c79)) AND ((x''))))AND(((((((((vt2.c2)AND(vt2.c1)))OR(vt1.c0)))AND(vt2.c1)))AND(t0.c79)))))OR(((vt2.c1)!=(t0.c79))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((((((((t0.c1))=((t0.c10))))OR(vt2.c2 COLLATE BINARY)))AND((vt1.c1 IN (x'', vt1.c0)))))OR(NULL)))AND((((vt2.c1))<>((vt2.c0))))) FROM vt1, vt2, t0; -- 1ms;
SELECT ALL COUNT(*) FROM vt1, t0, vt2 WHERE (CAST(NULL AS REAL) COLLATE BINARY) GROUP BY CASE (+ (x''))  WHEN TYPEOF(vt2.c0) THEN ((t0.c79)/(vt1.c0)) ELSE ((((vt1.c1)OR('}]w1')))AND(t0.c51)) END; -- 0ms;
SELECT ALL CASE WHEN ((t0.c1)&(t0.c79)) THEN ((t0.c51) ISNULL) ELSE vt1.c1 END FROM vt2, vt1, t0 LIMIT -1596033622; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM vt1, t0, vt2 WHERE (((-1.861836377E9)<(0.3597265040139893)) COLLATE BINARY) LIMIT -157584308 OFFSET 1720278914; -- 0ms;
SELECT (NULL IN ()), CAST(((NULL)*(t0.c79)) AS INTEGER), TOTAL(vt1.c1) OVER () FROM vt1, t0, vt2 WHERE (((CASE 0.5484231328647744  WHEN NULL THEN x'' ELSE x'' END)>((('0.010164654280243046')|(0.40698076041963693))))); -- 1ms;
SELECT ALL (((((t0.c79)OR(vt2.c1)))AND(t0.c79)) IN ()) FROM vt2, t0; -- 0ms;
SELECT DISTINCT (((NOT (t0.c10))) BETWEEN (((vt2.c0) IS FALSE)) AND (vt2.c2 COLLATE RTRIM)) FROM vt2, vt1 WHERE ((((((NULL)AND(0.8273034212951645)))OR(0.4183813195826207)) IN ()));SELECT (NOT (((t0.c51)LIKE(t0.c51)))) FROM vt1, t0 WHERE (CASE WHEN CAST('1238058100' AS REAL) THEN rtreenode(NULL, 0.755166777218503) ELSE ((NULL)AND(NULL)) END); -- 0ms;
SELECT CASE '-1195961862'  WHEN (t0.c51 IN ()) THEN ((((t0.c1)AND(vt2.c0)))AND(vt1.c0)) ELSE ((((vt2.c2)OR(t0.c10)))OR(vt2.c0)) END FROM vt2, vt1 WHERE (CAST(((x'e1c7')OR('-306547159')) AS REAL)) LIMIT 1481421343 OFFSET -1453696867;SELECT ((UPPER(DISTINCT t0.c51)) NOT NULL), ((vt2.c1 IN (vt1.c1)) IN (0.7517030631525216)), (((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c2 WHEN 'c' THEN vt2.c2 WHEN t0.c10 THEN vt2.c2 ELSE t0.c1 END))=((SUM(vt1.c1)))), NULL, ((((RTRIM(t0.c51))OR((((t0.c10)) BETWEEN ((t0.c79)) AND ((vt2.c1))))))AND((- (t0.c1)))), CAST(AVG(t0.c1) AS REAL), ((((((((((t0.c10) NOT BETWEEN (t0.c1) AND (t0.c10)))AND(((t0.c51)LIKE(t0.c79)))))OR(((((vt1.c1)OR(t0.c1)))AND(vt2.c2)))))OR((vt1.c1 IN (t0.c10)))))AND(((t0.c10) IS TRUE))) FROM vt1, t0 WHERE (1038649341);SELECT DISTINCT MIN((t0.c10 IN ())) FROM vt1; -- 0ms;
SELECT DISTINCT ((((t0.c10)OR(CAST(x'26b8' AS INTEGER))))OR(((((t0.c10)OR(vt2.c0)))AND(t0.c79)))) FROM vt1, t0;SELECT DISTINCT vt2.c0 FROM vt2, vt1 WHERE (((0Xffffffffad8be351) BETWEEN ((('') BETWEEN (NULL) AND ('384783727'))) AND ((x'' IN ())))) LIMIT -341619659; -- 0ms;
SELECT DISTINCT ((((vt2.c1) IS TRUE))>>((((t0.c10, vt2.c2, vt2.c1)) BETWEEN ((t0.c51, x'0267', t0.c51)) AND ((vt2.c1, vt2.c0, t0.c1))))) FROM vt1, t0, vt2 WHERE (CASE x''  WHEN ((NULL)>>(x'')) THEN ((x'')AND(0Xffffffffde931615)) ELSE CAST(NULL AS TEXT) END) INTERSECT SELECT ALL CAST(((vt1.c0) BETWEEN (vt2.c1) AND (t0.c1)) AS NUMERIC) FROM vt2 WHERE (DATE((((x'')) NOT BETWEEN ((x'089c')) AND ((x''))), ((NULL) NOT NULL), ('' IN ()), CASE WHEN NULL THEN 0.8426214402457253 WHEN x'7f97' THEN 0.20033874823159536 WHEN '-1288105992' THEN '1116229779' ELSE -813469266 END, CASE 0.6350638587867431  WHEN '\&G~av_' THEN 0.4486311581765702 ELSE 0.046405519947851026 END)) LIMIT -550855425 OFFSET -804394276;SELECT DISTINCT LTRIM((+ (t0.c10)), ('-1956180788' IN ())), x'', HEX(DISTINCT ((((vt1.c1)AND(vt2.c2)))OR(vt2.c0))) FROM vt1;SELECT ALL CAST(CASE WHEN t0.c10 THEN t0.c79 END AS INTEGER) FROM vt1, t0 WHERE ((IFNULL(x'', 1.720278914E9) IN ())); -- 0ms;
SELECT ALL ((((t0.c10)AND(vt1.c0)))AND(t0.c10)) COLLATE RTRIM FROM vt2;SELECT DISTINCT ((((((((((x'') NOT BETWEEN (t0.c51) AND (x'')))OR((vt1.c0 IN (t0.c79)))))OR(((t0.c51)<=(vt1.c0)))))OR(1.679508448E9)))AND(CASE vt2.c1  WHEN 'O>7%eD' THEN vt2.c2 ELSE vt2.c2 END)) FROM t0, vt1, vt2; -- 0ms;
SELECT ((((((((CASE WHEN vt2.c0 THEN vt2.c2 END)OR((vt1.c0 IN ()))))AND(('-1616330594' IN (vt1.c1)))))OR(((t0.c51)AND(vt1.c1)))))OR(((t0.c1) ISNULL))) FROM vt2, vt1 WHERE (((((x'') NOT NULL)) ISNULL));SELECT TOTAL((~ (vt2.c0))) FROM t0, vt1;SELECT ALL CAST(vt2.c0 AS NUMERIC) COLLATE RTRIM, ((CASE t0.c79  WHEN t0.c79 THEN vt1.c0 END)==((((t0.c51, vt1.c1, -1.894862436E9)) BETWEEN ((vt2.c1, vt2.c2, vt1.c1)) AND ((t0.c10, t0.c51, t0.c1))))), (((((NULL) BETWEEN (vt2.c2) AND (t0.c51))))==((((vt1.c1)OR(vt1.c1))))) FROM vt2 ORDER BY t0.c1  NULLS LAST, CAST((vt2.c0 IN ()) AS INTEGER) ASC;SELECT DISTINCT ((vt1.c1) NOT BETWEEN ((NULL IN ())) AND (vt2.c2)) FROM vt2;SELECT DISTINCT COUNT(vt1.c0 COLLATE RTRIM) FROM vt2, vt1, t0; -- 0ms;
SELECT CASE (- (vt2.c2))  WHEN ((((vt1.c0)OR(vt1.c1)))AND(t0.c1)) THEN highlight(t0.c10, vt2.c1, vt2.c0, vt1.c1) ELSE ((vt2.c1) NOTNULL) END, CASE WHEN ((((((((0.5576341721831503)OR(vt2.c2)))AND(vt2.c0)))OR(t0.c10)))AND(t0.c10)) THEN CAST(vt1.c1 AS NUMERIC) END, ((0.9059375327232597)+(COUNT(t0.c79))) FROM vt2, t0 WHERE (CASE WHEN (0.12580061214563998 IN ()) THEN 51485921 END) GROUP BY ((CASE vt2.c2  WHEN vt2.c1 THEN t0.c79 END)IS(((t0.c1) IS TRUE))), CASE CAST(x'' AS REAL)  WHEN ((vt2.c2) NOT NULL) THEN TYPEOF(DISTINCT vt1.c0) ELSE vt2.c1 END, ((vt1.c0 COLLATE RTRIM)>((+ (NULL)))) HAVING ((((vt1.c1) NOT BETWEEN (vt2.c1) AND (t0.c1))) IS TRUE) LIMIT 44078348;SELECT DISTINCT '' FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((vt2.c0 COLLATE RTRIM)-(((((t0.c1)OR(t0.c51)))AND(vt2.c1)))) FROM vt2, vt1;SELECT ALL (((t0.c79 COLLATE NOCASE, ((vt2.c1)||(vt1.c0)), ((t0.c10) NOT BETWEEN (0X61763d76) AND (t0.c79))))<((CASE WHEN vt1.c0 THEN t0.c1 END, CAST(vt2.c2 AS TEXT), vt1.c1 COLLATE RTRIM))) FROM vt1 ORDER BY IFNULL(DISTINCT ((t0.c79) NOTNULL), IFNULL(DISTINCT 0.45552029524416904, vt2.c2)) DESC  NULLS FIRST LIMIT -145692100;SELECT DISTINCT x'', ((((COUNT(vt1.c0))AND(((vt1.c1)<(vt2.c1)))))AND(COUNT(*))), FIRST_VALUE((((vt1.c0 IN ())) BETWEEN (CASE vt1.c1  WHEN t0.c1 THEN t0.c10 END) AND (t0.c1 COLLATE RTRIM))) OVER () FROM vt1, t0 INDEXED BY i35;SELECT DISTINCT CAST(((vt1.c0)/(vt2.c1)) AS INTEGER) FROM vt2;SELECT DISTINCT t0.c1, (((t0.c10)) BETWEEN ((SUM(t0.c79))) AND (((+ (vt2.c1))))), CASE ((t0.c10)>('KN[%*b,閭B'))  WHEN (- (vt2.c2)) THEN (((t0.c10, vt2.c2, vt2.c2)) BETWEEN ((vt1.c0, 0xffffffffcdaacea3, vt2.c0)) AND ((t0.c79, vt1.c0, t0.c79))) ELSE ((((-9.96458462E8)AND(vt2.c2)))OR(t0.c1)) END FROM vt1, t0;SELECT DISTINCT COUNT(*) FROM vt2; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((((t0.c1)OR(vt2.c1)))AND(vt2.c2))), ((CAST(vt2.c2 AS TEXT))IS NOT((t0.c79 IN (vt1.c0)))), ((vt2.c1) IS FALSE) COLLATE RTRIM FROM vt1, t0, vt2 LIMIT 477554519 OFFSET 1924900919; -- 1ms;
SELECT DISTINCT PERCENT_RANK() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES) FROM vt1, t0, vt2; -- 0ms;
SELECT (((t0.c1) NOT BETWEEN (t0.c1) AND (vt2.c1)) IN ()) FROM t0 WHERE ((((((((((+ ('OXvgg-')))OR(('a.' IN (x'1580')))))AND(((NULL) BETWEEN (x'') AND (NULL)))))AND((+ (NULL)))))AND((NULL IN ())))) LIMIT 1761104013 OFFSET 410916492; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1, vt2, t0 GROUP BY load_extension(((t0.c10)*(t0.c10))), SQLITE_VERSION(), x'215a231d', (NOT ((vt1.c1 IN ()))), (((((vt2.c1 IN (NULL, vt2.c1)))AND(((t0.c10)*(vt2.c2)))))OR(x'436e')); -- 0ms;
SELECT DISTINCT CASE t0.c10 COLLATE BINARY  WHEN '-711528897' THEN t0.c79 COLLATE RTRIM WHEN (vt2.c2 IN (vt1.c1)) THEN '3JSo' WHEN (((((((('1829594067')AND(t0.c51)))OR(t0.c79)))OR(vt1.c1)))AND(t0.c51)) THEN ((t0.c1)||(t0.c51)) ELSE ((((t0.c1)OR(t0.c1)))OR(t0.c1)) END FROM t0, vt2;SELECT DISTINCT PERCENT_RANK() OVER (), CASE WHEN ((((((((t0.c79)AND(t0.c1)))OR('-2116587705')))OR(t0.c51)))AND(vt2.c2)) THEN ((vt1.c1)/(t0.c1)) WHEN (((vt2.c1, t0.c1, t0.c1))=((vt2.c0, vt1.c0, vt1.c1))) THEN ((vt2.c2) NOT BETWEEN (vt1.c0) AND (t0.c1)) WHEN t0.c1 THEN TIME(t0.c79, NULL, t0.c1) ELSE (+ (t0.c10)) END, (((t0.c51) NOT BETWEEN (vt2.c2) AND (vt1.c1)) IN (((vt2.c1)AND(vt1.c1)))) FROM vt2, t0, vt1; -- 0ms;
SELECT ALL vt1.c0, CASE WHEN ((t0.c1)<<(vt2.c2)) THEN ((NULL) NOTNULL) WHEN 'BV{' THEN ((((((((((((t0.c51)OR(vt2.c2)))OR(vt1.c0)))OR(t0.c1)))OR(vt1.c0)))OR(t0.c10)))AND(t0.c79)) WHEN ((vt2.c2)!=(vt1.c1)) THEN (t0.c10 IN ()) END, ((((t0.c79) BETWEEN (vt1.c1) AND ('k!'))) IS TRUE), (NULL IN ()) COLLATE RTRIM, ('-1559373534' IN ()) COLLATE BINARY FROM t0, vt1, vt2; -- 0ms;
SELECT ((GROUP_CONCAT(vt2.c1))>=((~ (t0.c1)))), (NOT (((0.8417458318897869) IS FALSE))), (CASE vt2.c2  WHEN t0.c51 THEN vt1.c1 ELSE '' END IN ()) FROM vt2 WHERE (LIKELIHOOD(x'b1a3', 0.5558496719685418) COLLATE BINARY);SELECT 0.831006165541704 FROM t0, vt1, vt2 GROUP BY (((((t0.c51)OR(0Xffffffffb014bee0)))OR(t0.c79)) IN (vt1.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT (((((vt1.c0 IN (vt2.c2, t0.c51)))OR(vt2.c2)))AND(vt1.c0 COLLATE BINARY)) FROM vt1;SELECT DISTINCT CASE WHEN (vt2.c0 IN ()) THEN ((t0.c10)OR(t0.c51)) END FROM t0, vt2, vt1 ORDER BY CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END THEN (- (t0.c51)) WHEN LAST_INSERT_ROWID() THEN ((vt2.c2)|('/뛋')) WHEN t0.c51 THEN vt1.c0 COLLATE BINARY ELSE (((vt2.c1, t0.c51, vt1.c0)) BETWEEN ((t0.c1, vt1.c0, vt2.c0)) AND ((vt1.c0, t0.c51, t0.c1))) END; -- 1ms;
SELECT ALL (+ (vt1.c0)) COLLATE RTRIM FROM vt2 WHERE (LIKE(x'', x'', '1') COLLATE RTRIM);SELECT DISTINCT ((((vt2.c2)<=(t0.c1)))>=(vt1.c1)) FROM vt2 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS TEXT) ASC  NULLS LAST;SELECT ((t0.c10 COLLATE RTRIM)||(((vt1.c0)+(vt2.c2)))) FROM vt1, vt2 INNER JOIN t0 ON (((vt2.c1)&(t0.c10)) IN ()); -- 0ms;
SELECT ALL (((vt1.c0)OR(vt1.c0)) IN ()), COUNT(*), (((x'f387')) BETWEEN ((AVG(t0.c51))) AND (((((t0.c1, vt2.c0, vt2.c1))<((vt1.c1, vt2.c0, t0.c1)))))), ((((t0.c10) NOT BETWEEN (vt2.c1) AND (vt2.c2))) NOT NULL), (((((((((t0.c1)OR(t0.c10)))OR(vt2.c1)))AND(t0.c51)))AND(t0.c79)) IN ((NOT (t0.c79)))) FROM vt2, t0, vt1 WHERE (((CASE '-1471945864'  WHEN '-1484125920' THEN '672872214' ELSE 0.3477264493645763 END) BETWEEN (((x'')>(NULL))) AND (((NULL) IS FALSE)))) ORDER BY CASE WHEN ((vt1.c0)>>(vt1.c1)) THEN ((t0.c1)|(vt2.c2)) END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c10 THEN ((t0.c1)|(vt2.c1)) END FROM vt2 WHERE ((x'' IN ()));SELECT ALL ((((TYPEOF(vt2.c0))OR((((0x1e4b118d, vt2.c1, vt2.c2)) NOT BETWEEN ((vt1.c1, vt1.c1, vt2.c0)) AND ((vt1.c0, t0.c51, vt1.c0))))))OR(0.692926652949785)), (vt1.c0 IN ()) COLLATE RTRIM COLLATE NOCASE, (t0.c1 IN ()) COLLATE BINARY FROM vt2, t0 WHERE (CAST(((x'')==(0.2970923481869753)) AS REAL));SELECT CASE CASE vt1.c0  WHEN t0.c10 THEN t0.c79 ELSE t0.c10 END  WHEN ((vt2.c0) BETWEEN (vt1.c1) AND (vt1.c0)) THEN ((((t0.c79)AND(vt2.c1)))AND(t0.c10)) END FROM t0;SELECT DISTINCT vt1.c0 FROM t0, vt2, vt1 WHERE (((1.634953168E9)==(0.21828655102841088))); -- 0ms;
SELECT (~ ((+ (t0.c1)))) FROM t0, vt1 WHERE (((IFNULL(0x6c02741e, x'2a0c')) BETWEEN ((((((((('F]S!%1j')OR(0X23d1455d)))AND(0.21318353104525)))AND(NULL)))OR(''))) AND ((- (NULL))))) ORDER BY vt1.c1  NULLS FIRST; -- 0ms;
SELECT (((vt2.c0)) BETWEEN ((CAST(NULL AS NUMERIC))) AND ((((t0.c79) BETWEEN (vt1.c1) AND (t0.c10))))), (~ ((((vt2.c1, t0.c79, vt2.c0, t0.c10, t0.c1))>=((t0.c10, t0.c10, vt2.c2, vt2.c0, vt1.c1))))), NULL FROM vt1, vt2, t0; -- 0ms;
SELECT DISTINCT ((((vt2.c1)<(vt2.c0))) ISNULL) FROM t0, vt2, vt1 WHERE ((('' COLLATE BINARY)==('D' COLLATE BINARY))); -- 0ms;
SELECT CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('1038649341'))) AS INTEGER), CASE WHEN ((((t0.c10)OR(t0.c51)))AND(vt2.c0)) THEN x'' ELSE CASE WHEN vt2.c0 THEN t0.c1 WHEN 0.657171472822315 THEN vt1.c1 WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END END, ((LIKELIHOOD(vt2.c2, 0.8582450854377925)) IS TRUE) FROM t0, vt1 WHERE ((- (UPPER(0.8269126049209441)))) LIMIT -878236978;SELECT GROUP_CONCAT(((vt1.c1)<=(t0.c10))), CHANGES(), ((((((0.6145756554263997))>=((vt2.c0)))))>=((((NULL)%(vt1.c0))))) FROM vt2, t0;SELECT DISTINCT TOTAL(SUM(SQLITE_VERSION())), (CAST(t0.c1 AS BLOB) IN ()), (((~ (vt1.c0))) BETWEEN ((+ (vt2.c0))) AND (((NULL) IS TRUE))) FROM vt1, t0, vt2 WHERE (NULL);SELECT COUNT(*) FROM t0 GROUP BY NULL; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT CASE vt2.c1  WHEN '-688028879' THEN t0.c79 END) FROM t0 WHERE (((((((0.45948563773579987)OR(x'')))AND('-㝒'))) BETWEEN (0.02919815773493406) AND (((x'')<(NULL))))) LIMIT 679566591 OFFSET -546337360;SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY CASE WHEN CAST(t0.c79 AS TEXT) THEN vt2.c1 ELSE CAST(vt2.c0 AS BLOB) END  NULLS LAST), (NOT (t0.c51)), ((vt2.c0)LIKE(vt2.c0)) COLLATE RTRIM FROM vt2, t0 WHERE ((((NOT (0.8678791950481612)))==((x'b0ff' IN ())))); -- 0ms;
SELECT ((vt1.c0) NOT BETWEEN (CAST(vt2.c1 AS TEXT)) AND (vt2.c1 COLLATE NOCASE)) FROM t0, vt1, vt2 WHERE ('599874216'); -- 1ms;
SELECT ALL ((t0.c51)>=(NULL)) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c79)>>(t0.c51)) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT 1.129838178E9 FROM vt2, t0 GROUP BY ((((HEX(DISTINCT t0.c79))OR(((((((((t0.c79)AND(vt2.c1)))AND(vt1.c1)))AND(0.784165389958018)))AND(t0.c10)))))AND(((((((((vt2.c1)AND('0.0965781932815507')))OR(t0.c1)))OR(t0.c79)))AND('1453641800'))));SELECT DISTINCT NULL FROM vt1, t0; -- 0ms;
SELECT DISTINCT vt2.c0 FROM t0, vt2, vt1; -- 0ms;
SELECT DISTINCT (((((((((((('0O0I<<s')AND(t0.c10)))AND(t0.c10)))OR(t0.c1)))OR(vt1.c0)))AND(((NULL) BETWEEN (t0.c1) AND (vt1.c0)))))OR(((vt1.c1)==(vt2.c2)))), COUNT(((((((((vt1.c0)AND(vt2.c2)))AND(x'')))OR(t0.c51)))OR(t0.c10))), (((t0.c1)) NOT BETWEEN (('2019645849')) AND ((vt2.c0))), COUNT(json_valid(t0.c1)) OVER (), vt1.c0 COLLATE RTRIM FROM t0, vt2, vt1 GROUP BY (NOT (LENGTH(t0.c1))), CAST((- (t0.c79)) AS INTEGER), SQLITE_SOURCE_ID(), ((((vt2.c2) NOTNULL)) IS TRUE), (((vt2.c1, '', t0.c1)) BETWEEN ((((((vt2.c2)OR(t0.c51)))AND(vt2.c1)), (vt1.c0 IN (vt2.c0)), CASE vt1.c0  WHEN t0.c79 THEN vt1.c1 END)) AND (((t0.c51 IN ()), ((vt1.c1) NOT BETWEEN (t0.c79) AND (t0.c10)), CAST(vt2.c2 AS TEXT)))); -- 1ms;
SELECT DISTINCT (0.5311114979125213 IN (CASE WHEN vt1.c0 THEN t0.c1 WHEN vt1.c1 THEN t0.c10 WHEN t0.c10 THEN vt1.c1 END)), CAST((t0.c10 IN ()) AS INTEGER), TOTAL(((((vt2.c0)OR(vt1.c1)))AND(t0.c79))) OVER () FROM vt1, vt2 ORDER BY ((((((vt2.c0)AND(t0.c1)))OR(vt2.c1)))=(NULL COLLATE RTRIM))  NULLS LAST LIMIT 1802637707;SELECT DISTINCT CASE WHEN ((('-1390066379'))>((vt2.c2))) THEN x'bd51' ELSE MAX('噭⯏⚬^젾Vhl', t0.c10) END FROM t0, vt2, vt1; -- 0ms;
SELECT (~ (NULL COLLATE BINARY)) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (MAX(t0.c51) IN ()) FROM vt2 WHERE (627395635); -- 0ms;
SELECT DISTINCT ((vt2.c0)IS NOT(vt2.c1)) COLLATE RTRIM FROM t0, vt1 WHERE (((json(x''))/(-0.0))) LIMIT -1851545394;SELECT DISTINCT MIN(CASE vt2.c2  WHEN t0.c79 THEN t0.c79 END) FROM t0, vt2 WHERE ((((NULL, 0.2552035958785449, 'O>7%eD')) NOT BETWEEN ((((NULL)>(NULL)), NULL COLLATE RTRIM, (- (NULL)))) AND ((((x'') NOT BETWEEN (NULL) AND (0.4258047610386081)), CAST('0.054740226117307667' AS NUMERIC), -1.625800547E9 COLLATE RTRIM)))); -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c79)>(x'452a'))), (((((t0.c10)+(t0.c79)), (((t0.c51)) NOT BETWEEN ((t0.c51)) AND ((t0.c10))), vt2.c2))<=((CASE '28054166'  WHEN 'Ho*' THEN vt2.c2 ELSE x'' END, (+ (vt1.c1)), ((vt2.c1) ISNULL)))), ROW_NUMBER() OVER () FROM vt2, t0 WHERE (((((x'')OR('')))IS((- (0.3101471619599242)))));SELECT ((CASE WHEN vt2.c0 THEN t0.c1 ELSE t0.c51 END) NOT BETWEEN (((vt1.c1) NOT BETWEEN (vt2.c0) AND (vt2.c2))) AND (((vt1.c1) NOTNULL))), (+ (0.19538963064899473)), 0.46990048485115765 FROM t0 WHERE (((5.14494388E8) NOT NULL) COLLATE RTRIM);SELECT DISTINCT vt2.c1, (((((~ (t0.c79)))OR(((t0.c51) NOTNULL))))AND(vt1.c1)), ((((x'')AND(CAST(t0.c79 AS REAL))))AND(((t0.c1)!=(vt1.c0)))) FROM t0, vt1, vt2 INDEXED BY i35 WHERE ((((((('428716367')OR(0.8341891720268086)))AND('-1494342611'))) IS FALSE)) LIMIT -597497815;SELECT DISTINCT (~ (((((vt2.c2)AND(NULL)))AND(t0.c1)))) FROM t0, vt2 WHERE (((((('5')) BETWEEN (('2047588238')) AND ((1038649341)))) IS FALSE)) GROUP BY (~ (vt2.c2)) COLLATE NOCASE HAVING json_object(((((((((t0.c79)OR(vt2.c1)))AND(t0.c1)))AND(t0.c51)))OR(vt1.c0)), (vt1.c0 IN ())) ORDER BY ((0x1eb35a0c)|(vt2.c1 COLLATE BINARY));SELECT ALL (((t0.c79)) BETWEEN ((((vt2.c0)|(vt2.c2)))) AND ((CAST(t0.c51 AS BLOB)))) FROM vt1, t0;SELECT DISTINCT AVG(-791221248) FROM vt2, t0 WHERE (((('-1894862436' IN ())) NOT BETWEEN (((('', x'', '_DQVྕ#AaA')) NOT BETWEEN (('1626634784', '0.9782448292232878', '<Gi뇰m\r ^x')) AND ((0.779902932442722, NULL, 'D6yx2T')))) AND ((1.872316464E9 IN ())))) ORDER BY (((t0.c10, t0.c79, t0.c10)) BETWEEN ((vt2.c2, vt2.c0, vt2.c2)) AND ((vt2.c0, t0.c51, vt2.c2))) COLLATE BINARY  NULLS LAST, CASE WHEN (vt1.c1 IN ()) THEN (((t0.c51))>((vt2.c0))) END, MIN(((vt2.c1)=(t0.c51)), CASE WHEN t0.c79 THEN vt1.c1 ELSE vt2.c2 END) DESC  NULLS FIRST;SELECT ALL ((((((((((t0.c10)AND(vt1.c0)))AND(t0.c1)))OR(vt1.c1)))AND(t0.c1)))*((- (t0.c79)))), ((CAST(vt2.c2 AS TEXT))*((vt1.c0 IN ()))), ROW_NUMBER() OVER () FROM t0, vt2, vt1; -- 0ms;
SELECT (~ (((t0.c1) BETWEEN (t0.c79) AND (t0.c51)))), ((MAX(vt1.c1))<=(((t0.c1) IS TRUE))), (t0.c51 IN (vt2.c1, t0.c51)) COLLATE NOCASE, SUM(CAST(0.2999525839005561 AS TEXT)), ((CAST(t0.c1 AS BLOB))-(x'')) FROM vt2, vt1, t0 WHERE (CASE (+ (-9.96458462E8))  WHEN (((('S梿')AND('')))AND(NULL)) THEN ((((((((x'')OR(x'')))OR(x'')))OR(0X8f7d7e0)))AND('i/')) ELSE x'' COLLATE RTRIM END) GROUP BY CASE (vt2.c1 IN ())  WHEN ((t0.c51)IS(vt2.c0)) THEN ((((6866346)OR('o>7%ed')))AND(t0.c1)) END; -- 1ms;
SELECT DISTINCT 0.2616318551226995 FROM t0; -- 0ms;
SELECT ALL CASE (((t0.c10)) NOT BETWEEN ((t0.c79)) AND ((vt2.c0)))  WHEN (((NULL, '-2116587705', vt1.c0))<((vt1.c0, t0.c1, vt1.c1))) THEN ((vt1.c1)<(vt2.c2)) END FROM vt2, vt1 WHERE (((((0.15132971165325848)OR(0.4724124567851956)))AND(',ez[f9v')) COLLATE BINARY COLLATE RTRIM);SELECT DISTINCT (((((((((('-376201040')OR(t0.c79)))OR(vt2.c0)))AND(t0.c1)))OR(vt1.c0)))<>(((t0.c51) IS TRUE))) FROM vt1, vt2, t0 WHERE (TYPEOF(DISTINCT '-435344433')); -- 0ms;
SELECT ALL ((0.8184605166848598 IN ()) IN (t0.c79 COLLATE BINARY)), ((CAST(t0.c51 AS REAL)) NOT BETWEEN (json_type(t0.c79)) AND (((t0.c1) IS TRUE))), (~ (((t0.c79)>=(vt1.c1)))) FROM t0, vt1, vt2 WHERE ('GYk') GROUP BY CASE CASE WHEN vt1.c0 THEN x'' WHEN t0.c10 THEN vt2.c2 WHEN vt2.c0 THEN NULL END  WHEN (((t0.c10)) NOT BETWEEN ((vt2.c2)) AND ((t0.c1))) THEN (+ (vt2.c2)) END ORDER BY (((((((vt1.c1)OR(t0.c1)))AND(vt2.c2))))<=((((t0.c79)%(vt1.c1))))) DESC; -- 0ms;
SELECT ALL LAG((((((t0.c10)) NOT BETWEEN ((t0.c79)) AND ((NULL)))) NOTNULL), (NOT (INSTR(vt2.c0, t0.c79))), ((((t0.c10) BETWEEN (vt2.c0) AND (t0.c1)))/((((vt2.c0))<=((t0.c51)))))) OVER () FROM t0, vt2; -- 0ms;
SELECT DISTINCT ((((COUNT(vt2.c1))AND(((NULL)AND(t0.c10)))))OR(load_extension(vt2.c0))), (+ (((t0.c79) BETWEEN (vt1.c0) AND ('MV{ig')))), COALESCE(DISTINCT (t0.c51 IN ()), 1.038649341E9) FROM vt2;SELECT (HEX(x'') IN ()) FROM vt1, t0, vt2 WHERE ((((((((('102157235' COLLATE NOCASE)AND((('Yu>.')==(x'68a4')))))OR((('-247069413')IS('')))))OR(x'3dba0b41')))OR((('')<>(NULL))))); -- 0ms;
SELECT ((((vt2.c1) IS FALSE))GLOB(((t0.c79)==(vt2.c1)))) FROM vt2 WHERE (CASE WHEN ((NULL)LIKE('-1827863486')) THEN CASE WHEN 0.43877699874816534 THEN 1208570642 END END);SELECT DISTINCT ((((t0.c1)>>('P)'))) IS FALSE) FROM vt2, t0 LIMIT -423825358 OFFSET -874221047; -- 0ms;
SELECT DISTINCT ((((t0.c51)|(vt2.c0))) NOT BETWEEN (((((vt2.c1)OR(vt2.c2)))OR(vt2.c2))) AND (((vt1.c0)*(vt2.c0)))) FROM vt2, vt1 WHERE (((((x'9126')LIKE('t쬧|xBX')))|(((x'') ISNULL))));SELECT DISTINCT x'' FROM vt1, t0, vt2; -- 1ms;
SELECT ((((t0.c10)AND(UNLIKELY(t0.c10))))AND(COUNT(vt2.c0))) FROM vt1, vt2 WHERE (((((('-157584308')&(x''))))!=((('y\뵧\n4r' IN (NULL)))))) LIMIT 899307957;SELECT DISTINCT (~ ((((vt2.c2))=((vt2.c0))))) FROM vt2; -- 0ms;
SELECT DISTINCT ((COUNT(vt1.c0))<=(((((((((((((vt2.c2)AND(vt2.c2)))AND(vt1.c1)))AND(vt2.c1)))OR(vt2.c0)))AND(t0.c1)))OR(vt1.c1)))) FROM vt2, vt1;SELECT DISTINCT ((((((0.45762228114195724)AND(vt1.c0)))OR(t0.c1))) NOT BETWEEN (((vt2.c1)>=(vt1.c1))) AND ((+ (vt1.c0)))) FROM vt2, vt1, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((')/j%eCD-')%(((vt2.c2)|(t0.c51)))) FROM vt1, t0 WHERE (((CASE '293290504'  WHEN x'' THEN 0.5148252767958778 END)*((((NULL)) NOT BETWEEN ((NULL)) AND ((0.22806431599041688))))));SELECT DISTINCT vt1.c1 COLLATE RTRIM FROM t0, vt2 LIMIT -455643153;SELECT DISTINCT NTH_VALUE(TRIM(DISTINCT NULL COLLATE BINARY, vt1.c0 COLLATE RTRIM), ((((((((((vt1.c1)AND(vt2.c1)))AND(vt2.c0)))AND(x'')))AND(vt2.c2))) IS TRUE)) OVER (), ((CAST(vt2.c0 AS TEXT)) IS FALSE), MIN(TOTAL(((t0.c79) NOT BETWEEN ('Jq') AND (t0.c79)))) FROM vt2, vt1 WHERE ('2058492115') LIMIT 1327358890;SELECT DISTINCT (CASE t0.c79  WHEN vt2.c2 THEN '-247069413' END IN ()), ((((vt2.c1) IS TRUE)) BETWEEN ((+ (t0.c10))) AND (CAST(vt2.c0 AS REAL))), (((vt2.c1 IN (t0.c51)))*(vt2.c1)) FROM t0, vt2; -- 0ms;
SELECT DISTINCT t0.c1, ((((t0.c79)AND(t0.c1))) NOT BETWEEN (vt2.c1) AND (TOTAL(vt1.c0))), CASE ((((((((vt2.c1)AND(vt1.c1)))OR(t0.c10)))OR(-1861836377)))OR(t0.c1))  WHEN ((((vt2.c2)AND(vt2.c1)))OR(vt1.c0)) THEN ((t0.c10)<=(t0.c10)) END, (+ (((vt1.c1) NOT NULL))), 0.5413313561637326 FROM vt2, t0, vt1; -- 0ms;
SELECT ALL ((((vt2.c2)AND((vt1.c1 IN (t0.c1)))))AND(759215913)), COUNT(vt2.c2), CAST(t0.c79 AS REAL) COLLATE RTRIM COLLATE RTRIM FROM t0 WHERE (((((0.9116086021026579))==(('TRUE'))) IN ())) LIMIT 45057964 OFFSET -88788776;SELECT DISTINCT ((NULL)GLOB((t0.c1 IN ()))) FROM vt1, t0, vt2 GROUP BY HEX(DISTINCT (NOT (t0.c51))) HAVING ((((t0.c79)GLOB(vt2.c0))) BETWEEN (CASE vt1.c0  WHEN t0.c1 THEN vt1.c1 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c1 THEN vt1.c0 ELSE vt1.c1 END) AND (((t0.c1) ISNULL))) ORDER BY ((((((t0.c79) NOT BETWEEN ('') AND ('0.4394681332398681')))AND(((t0.c79)IS NOT(vt1.c0)))))AND(((t0.c51)&(NULL))))  NULLS FIRST, (((((((((((vt1.c1)) BETWEEN (('')) AND ((t0.c1))))OR(((vt2.c1) NOT BETWEEN (vt2.c1) AND (x'')))))AND(((vt2.c1) NOT BETWEEN (t0.c51) AND (t0.c79)))))AND(((((t0.c1)OR(vt1.c1)))AND(vt1.c0)))))AND((((t0.c10)) NOT BETWEEN ((vt2.c0)) AND (('h'))))) DESC, ((NULL) BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE BINARY; -- 0ms;
SELECT (+ (((((t0.c51)OR(vt1.c0)))AND(t0.c10)))) FROM t0, vt1 WHERE ((+ ((((('-1460280981')AND(x'e8fbd905')))OR(0xffffffffdb79db0d))))); -- 0ms;
SELECT DISTINCT ((((((t0.c79)AND('')))AND(t0.c79))) NOT BETWEEN (AVG(vt2.c0)) AND (((vt2.c0) BETWEEN (vt1.c0) AND (t0.c79)))), ((((((((t0.c10)OR(vt2.c2)))OR(vt1.c1)))OR(t0.c51)))OR(0xffffffffdbecabe9)), ((vt2.c1)==((('pq')<(t0.c10)))) FROM t0, vt1, vt2 GROUP BY (((t0.c51)) BETWEEN ((((vt2.c0) NOTNULL))) AND ((NULL))) HAVING COUNT(*) ORDER BY ((((vt2.c0) IS TRUE)) NOT NULL) DESC; -- 0ms;
SELECT ((vt2.c2)|(vt2.c1)) COLLATE RTRIM, ((CAST(t0.c51 AS REAL)) IS FALSE), t0.c1, ((UPPER(vt1.c1))-((((t0.c10))>=((vt2.c0))))), ((CAST(t0.c1 AS REAL))*(((t0.c1)AND(vt2.c1)))), ((((((((((vt1.c1)AND(vt2.c2)))OR(vt2.c2)))OR(t0.c51)))OR(t0.c10)))>((vt2.c0 IN ()))), ((GROUP_CONCAT(t0.c10))||((vt2.c0 IN (vt1.c1)))) FROM vt1 INDEXED BY i35 WHERE (CAST((('U.')&(0X3f2beb16)) AS BLOB));SELECT ALL (((t0.c51, vt2.c0, t0.c1)) BETWEEN ((ROUND(vt2.c1, NULL), CASE WHEN t0.c79 THEN vt2.c1 WHEN t0.c1 THEN '258293455' WHEN vt1.c1 THEN vt1.c0 END, (NULL IN ()))) AND ((SUM(vt2.c2), CAST(t0.c79 AS NUMERIC), ((x'') NOT BETWEEN (vt1.c0) AND (1.12935848E9))))) FROM vt2, vt1;SELECT (((vt2.c2 IN (t0.c79, t0.c1)))<((vt1.c1 IN (vt1.c1, vt2.c1)))) FROM vt2, t0 WHERE ((((NULL IN (NULL, NULL)))+(CASE WHEN NULL THEN x'8ec6' WHEN x'0804' THEN '955599682' WHEN x'118d' THEN 1339357991 ELSE NULL END)));SELECT ALL TRIM(DISTINCT ((-2060120442) NOT NULL), (('f_') NOT BETWEEN (vt2.c2) AND (vt2.c0))) FROM t0, vt1 WHERE ((((NULL IN ('', NULL))) ISNULL));SELECT DISTINCT ((TOTAL(vt2.c1))-((((vt1.c0, NULL, vt1.c1))>((vt1.c0, vt1.c1, vt2.c0))))) FROM vt2, t0, vt1 WHERE (((CASE WHEN x'4e0b' THEN '3D' WHEN '' THEN NULL WHEN x'8e34' THEN x'' ELSE x'' END) BETWEEN ((x'' IN ())) AND (0x5931bca8 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt2.c0)) NOT BETWEEN (((vt2.c0)>(vt2.c2))) AND (AVG(vt2.c1))) FROM vt1;SELECT DISTINCT ((COUNT(*))==(((t0.c1) NOTNULL))) FROM vt1;SELECT ALL ((0.37634413984789916)*(CASE WHEN t0.c79 THEN vt2.c0 ELSE vt2.c1 END)) FROM vt2, t0 GROUP BY CAST(((t0.c1)GLOB(t0.c1)) AS REAL); -- 0ms;
SELECT ALL (((t0.c79)) NOT BETWEEN (((('8') NOT BETWEEN (t0.c51) AND (vt1.c0)))) AND ((SUBSTR(x'', vt2.c0)))) FROM t0, vt2, vt1 WHERE ((((NULL IN ())) IS FALSE)) LIMIT 1986728513; -- 0ms;
SELECT DISTINCT CAST(((((vt2.c0)OR(vt1.c1)))AND(vt1.c1)) AS REAL) FROM vt1;SELECT DISTINCT CAST(UPPER(vt1.c0) AS REAL), AVG(((x'')IS(vt2.c1))), t0.c10 FROM t0, vt1, vt2 WHERE (CAST(x'' AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT 0.9527999549932668, (~ (UPPER(vt1.c0))), t0.c51 FROM vt1 WHERE (((NULL COLLATE NOCASE) NOT BETWEEN ((('6sꦙi')AND(x'b306'))) AND (((((NULL)OR(-3.08244761E8)))AND(-6.88028879E8)))));SELECT FIRST_VALUE(((vt2.c2 IN ()) IN ())) OVER () FROM vt2, vt1 INDEXED BY i10 UNION ALL SELECT ALL ((((vt1.c0) ISNULL)) NOTNULL) FROM vt1, vt2 LIMIT 765027240;SELECT CAST(t0.c10 COLLATE RTRIM AS TEXT) FROM vt1, vt2 WHERE (CAST(((NULL) NOT BETWEEN (x'') AND (NULL)) AS NUMERIC));SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE) FROM t0, vt2 WHERE ((+ ((((((((((((('102157235')AND(-1.73913117E8)))AND(x'')))OR(0.8260899641316318)))OR('P5Bd)tg6')))OR('-31064408')))OR(-1608135729))))) ORDER BY (((((vt1.c1)) BETWEEN ((t0.c79)) AND ((t0.c79)))) NOT BETWEEN ((~ (vt2.c1))) AND ((+ (x'a7be')))) DESC  NULLS LAST;SELECT DISTINCT CAST(((vt2.c2) NOTNULL) AS BLOB) FROM vt2, t0, vt1; -- 0ms;
SELECT DISTINCT TOTAL((((t0.c79))<((t0.c79)))) FROM vt1, vt2, t0 WHERE (((((0.845920230074965))!=((NULL))) IN ())) LIMIT 1051837416 OFFSET -597497815; -- 0ms;
SELECT GROUP_CONCAT(((vt1.c1)OR(t0.c10))) OVER (), t0.c79, (((1062783628 IN ()))GLOB((- (vt1.c0)))) FROM t0 ORDER BY CASE WHEN CASE WHEN vt2.c1 THEN t0.c10 END THEN CAST(t0.c1 AS INTEGER) ELSE (- (vt2.c0)) END;SELECT DISTINCT ((((0.41921122701749947)/(vt2.c1)))*((t0.c1 IN (vt1.c0, t0.c51, t0.c79)))) FROM vt2, t0, vt1 WHERE (((x'' COLLATE BINARY) NOT BETWEEN (x'') AND ((NOT (-2116587705))))) LIMIT -246854629 OFFSET -246854629; -- 0ms;
SELECT ((IFNULL(DISTINCT vt2.c2, vt2.c1))-((((vt1.c1, vt2.c1, t0.c79))>((0.6002620076152332, vt2.c0, vt2.c0))))), ((vt1.c0)+(((vt2.c0) ISNULL))), 3.3905839E7 COLLATE NOCASE FROM t0, vt2 WHERE (((((-4.35344433E8)IS NOT('')))GLOB((('liE]\')%('-1574620764'))))) LIMIT 1129358480 OFFSET -1625800547;SELECT DISTINCT CAST(((vt2.c1)>(t0.c79)) AS BLOB) FROM vt2;SELECT DISTINCT (vt2.c2 IN ()) FROM vt2, vt1 WHERE (CAST(('0.20251069050168258' IN ()) AS BLOB)); -- 0ms;
SELECT ALL ((TOTAL(t0.c10)) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (LAST_INSERT_ROWID())), COUNT(NULL) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), MIN(CAST(vt1.c0 AS TEXT), GROUP_CONCAT(t0.c10)) FROM t0, vt2, vt1; -- 0ms;
SELECT DISTINCT ((((((t0.c79) ISNULL))OR(((vt2.c2) NOT BETWEEN (t0.c1) AND (vt1.c0)))))OR((+ (vt2.c2)))) FROM vt2, vt1 LIMIT 1731457291;SELECT ((((((vt2.c2)OR(vt1.c0)))AND(t0.c10))) NOTNULL) FROM vt1, vt2 GROUP BY ((((((((((t0.c51)AND(vt1.c1)))AND(t0.c10)))OR(t0.c1)))OR(vt2.c1))) ISNULL) HAVING (- (x'')) COLLATE NOCASE;SELECT NTH_VALUE(json_extract(((vt2.c1)GLOB(vt2.c1)), ((vt2.c0) NOTNULL)), ((((vt2.c1)IS(vt2.c2)))<=((((vt2.c2)) NOT BETWEEN ((vt2.c2)) AND ((vt2.c1)))))) OVER () FROM vt2 WHERE (load_extension(((x'')>=(x'45a9')))); -- 0ms;
SELECT DISTINCT ((vt2.c1)GLOB(t0.c1)) COLLATE BINARY, ((((vt1.c1)OR(((((t0.c1)OR(vt2.c2)))OR(t0.c51)))))AND(((t0.c79)LIKE(t0.c10)))), (((vt1.c0)) NOT BETWEEN (((vt1.c1 IN (t0.c51, t0.c51)))) AND ((CASE vt1.c1  WHEN vt2.c2 THEN x'' END))) FROM vt1 WHERE (((0x31750633 COLLATE BINARY) NOT NULL));SELECT vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT CAST(TOTAL(t0.c79) AS BLOB) FROM vt2 WHERE (((LIKELY('v(Vྉ'))||(NULLIF(DISTINCT NULL, 0.9154759367358076)))) LIMIT -1083021280 OFFSET 1592774706;SELECT DISTINCT t0.c10 FROM t0, vt2, vt1 WHERE (HEX(((((((((0X43488c2f)AND(0.3004130822076162)))AND('')))OR(x'65c1')))OR(0x4350a490)))) ORDER BY ((((((((((t0.c79)*(vt2.c0)))AND((t0.c51 IN ()))))AND((- (t0.c79)))))AND(CAST(t0.c51 AS NUMERIC))))AND(json_valid(vt2.c0))), t0.c1 DESC;SELECT DISTINCT ((x'222c') BETWEEN (t0.c10) AND (t0.c51)) COLLATE NOCASE FROM vt1, t0 WHERE (0X2ff3c022); -- 0ms;
SELECT ALL (((- (vt1.c1))) NOT BETWEEN (vt2.c1) AND (json_remove(vt1.c1, vt1.c1))) FROM t0 ORDER BY (((vt1.c1) NOT NULL) IN (t0.c79)) DESC;SELECT DISTINCT GROUP_CONCAT(((vt2.c2)AND(t0.c51))) FROM vt2;SELECT vt2.c2, ((((vt2.c0)IS NOT(vt2.c2)))+(((vt2.c0) NOT NULL))), ((((t0.c51 IN ())))<((t0.c51))), (~ (t0.c1)) COLLATE RTRIM, UNICODE((((vt1.c1))<=((t0.c79)))) FROM vt1, vt2;SELECT DISTINCT COUNT(*), ((((((0xfffffffff0657f37) NOTNULL))AND(((vt2.c2) IS FALSE))))OR(vt1.c0)), CAST((- (vt2.c2)) AS TEXT) FROM vt2 WHERE ((((((('1687596193')AND(NULL)))AND('-348903675')))IS NOT(x'')));SELECT ((((vt1.c0) NOT NULL))<>(CASE WHEN t0.c10 THEN vt2.c2 WHEN t0.c1 THEN t0.c10 WHEN t0.c51 THEN vt2.c1 ELSE t0.c1 END)), ((vt1.c1) NOT NULL) COLLATE RTRIM, ((t0.c1)>(TRIM(DISTINCT vt2.c1, vt1.c0))) FROM vt2, t0, vt1; -- 0ms;
SELECT DISTINCT NULLIF(((((0Xffffffffab104d86)OR(t0.c10)))OR(NULL)), CASE vt1.c0  WHEN t0.c79 THEN t0.c10 WHEN 0.25923899196540334 THEN t0.c79 WHEN t0.c51 THEN vt1.c1 END) FROM vt1 INDEXED BY i10, vt2, t0;SELECT DISTINCT (((vt2.c0)) BETWEEN ((((t0.c10)IS NOT(vt1.c1)))) AND ((CASE vt2.c0  WHEN vt2.c2 THEN t0.c10 ELSE t0.c1 END))) FROM vt1 WHERE (LIKELIHOOD(DISTINCT CASE x''  WHEN x'04f9' THEN 0.4604110076256588 ELSE 0.9850753771253119 END, 0.4649724908468311));SELECT DISTINCT ((((vt1.c1)OR((NOT (t0.c10)))))OR(CAST(vt1.c1 AS REAL))), ((0Xa1b3800)>(vt2.c1)) COLLATE BINARY, (((~ (t0.c51))) NOT BETWEEN (SUM(vt1.c1)) AND (CAST(vt1.c0 AS REAL))) FROM vt2;SELECT DISTINCT (((vt2.c0 IN (vt2.c0, t0.c51))) NOT BETWEEN (((t0.c10)<(vt2.c0))) AND ((+ (t0.c1)))), (CAST(vt1.c1 AS INTEGER) IN ()), ((CASE vt2.c1  WHEN t0.c10 THEN NULL ELSE vt1.c0 END)-(SUM(t0.c79))) FROM vt1 ORDER BY TRIM(((vt2.c2)+(vt2.c1)))  NULLS FIRST;SELECT DISTINCT (~ (CAST(NULL AS INTEGER))), AVG((+ (t0.c51))) OVER (), CAST((+ (vt2.c1)) AS BLOB) FROM vt1, t0;SELECT DISTINCT CAST(((t0.c1)>>(t0.c10)) AS TEXT) FROM vt2, t0, vt1; -- 0ms;
SELECT ALL ((((((((CASE vt2.c0  WHEN t0.c79 THEN NULL ELSE vt1.c1 END)OR(((t0.c51)IS(vt1.c1)))))AND(((((((((t0.c51)OR(vt1.c0)))AND(t0.c10)))OR(vt2.c1)))OR(t0.c79)))))AND(((t0.c51)<<(vt1.c0)))))OR(((t0.c1) BETWEEN (vt2.c1) AND (vt1.c0)))) FROM vt1, t0, vt2; -- 0ms;
SELECT DISTINCT LAG(CAST(((((((((vt1.c1)AND(t0.c10)))AND(vt2.c0)))AND(vt2.c1)))OR(t0.c79)) AS NUMERIC), CASE t0.c51 COLLATE BINARY  WHEN ((vt2.c1)||(t0.c51)) THEN vt2.c2 COLLATE NOCASE WHEN t0.c10 COLLATE NOCASE THEN ((vt2.c0) NOT BETWEEN (t0.c10) AND (t0.c1)) WHEN (- (t0.c10)) THEN t0.c79 WHEN t0.c10 COLLATE RTRIM THEN ((vt1.c1) ISNULL) WHEN (((t0.c79))>((vt1.c1))) THEN (vt2.c2 IN ()) ELSE ((((((((t0.c79)OR(t0.c79)))OR(t0.c51)))OR(t0.c51)))OR(vt2.c2)) END, ((((vt2.c2)AND(t0.c10)))OR(t0.c10)) COLLATE NOCASE) OVER () FROM t0, vt1, vt2 ORDER BY vt1.c0  NULLS LAST, ((((vt1.c1) IS TRUE))>(json_patch(vt1.c1, vt2.c1))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (((CASE vt1.c1  WHEN t0.c79 THEN vt2.c2 ELSE vt1.c0 END))<=(((((vt2.c1))>((vt2.c1)))))) FROM vt1, t0 WHERE ((~ ((((('')OR('nu')))OR(NULL))))) ORDER BY vt2.c2 DESC  NULLS FIRST;SELECT ALL (((NOT (t0.c51)))GLOB(((vt1.c0)+(t0.c1)))) FROM t0, vt2, vt1 WHERE (json_array_length(((((540404696)OR(x'959d')))OR('')), (+ (-1748093030))));SELECT ALL (((((t0.c79))>((t0.c51)))) BETWEEN (((((0.6372558056439249)AND(t0.c10)))AND(t0.c51))) AND (((vt2.c2)<=(t0.c10)))) FROM vt2, t0, vt1 WHERE ((((0.02407354009097351 IN ())) IS FALSE)) LIMIT 1038649341 OFFSET -1591607604; -- 0ms;
SELECT (((vt1.c1)) BETWEEN ((((vt1.c1) NOT BETWEEN (t0.c51) AND (vt2.c0)))) AND ((((0.7817040842470256)%(vt2.c0))))) FROM vt2 WHERE (JULIANDAY((~ ('T2')), (('872719569') NOTNULL), (('33905839')/(NULL)), ((((NULL)OR(0.5623756143487776)))AND(NULL)), (+ (0Xffffffffe6031267)), (((x'', 0.3104607970542782, 0.6547651426857917))>=((1.872316464E9, '601364631', NULL))), ((x'6e1b') BETWEEN (0.36715365801482935) AND (0.19538963064899473))));SELECT DISTINCT CASE ((vt2.c2) BETWEEN (vt2.c1) AND (vt1.c0))  WHEN ((-157584308)>=(vt2.c1)) THEN CAST(t0.c79 AS NUMERIC) END FROM vt1, t0 WHERE ((~ (NULL COLLATE RTRIM)));SELECT ((vt1.c0)|(t0.c79)) COLLATE BINARY FROM vt2 WHERE ((CASE WHEN NULL THEN x'61b8' WHEN '-488826318' THEN 0.8012957310696894 WHEN 0.3939713682494216 THEN 0.7412762117948627 END IN ()));SELECT (((((((t0.c79)AND(t0.c51)))AND(0xfffffffff9e7d6a6)), (t0.c10 IN ()), ((t0.c51)>(NULL))))<=((NULL, CAST('-688028879' AS INTEGER), t0.c1))) FROM vt2 NOT INDEXED, t0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt2.c1)>>(vt2.c1)) THEN AVG(t0.c79) WHEN ((t0.c1)>(t0.c79)) THEN vt2.c2 COLLATE BINARY WHEN ((t0.c10) NOTNULL) THEN vt2.c0 COLLATE RTRIM END FROM vt1, t0 WHERE ((((NOT (x''))) BETWEEN (('-643615694' IN ())) AND (HEX(NULL)))) LIMIT 1327358890 OFFSET 1099060313;SELECT ALL ((CAST(vt1.c1 AS REAL))!=(x'')), vt1.c1, ((((COALESCE(t0.c79, t0.c51))AND(((vt2.c1) NOT BETWEEN (vt2.c0) AND (NULL)))))AND(x'')) FROM vt1 GROUP BY (~ (CASE WHEN t0.c1 THEN t0.c10 WHEN vt2.c2 THEN vt1.c0 WHEN vt1.c0 THEN t0.c10 END));SELECT ((((((((((((((vt2.c1)AND(vt2.c0)))AND(t0.c1)))AND(vt1.c1)))OR(0.22440953866582547)))OR(0.8711231067533596)))AND(x'')))<<(((t0.c79) BETWEEN (t0.c79) AND (t0.c79)))), (~ (((((vt2.c2)OR(vt1.c0)))AND(t0.c1)))), (NOT (MIN(vt1.c0))) FROM vt2, t0 GROUP BY ((ABS(DISTINCT t0.c79)) NOT NULL) HAVING (+ (RTRIM(vt1.c0)));SELECT ALL (~ (((((t0.c79)AND(vt2.c1)))OR(vt2.c2)))) FROM vt2, t0 WHERE (((((0.7618529194194493)IS NOT('wH')))<=(0.15865664743102303 COLLATE BINARY))) GROUP BY (json_object(vt2.c2, NULL) IN (CAST(vt2.c1 AS NUMERIC), t0.c51)) HAVING ((t0.c51 COLLATE RTRIM) ISNULL); -- 0ms;
SELECT DISTINCT ((x'')OR(((((((((t0.c51)AND(t0.c10)))OR(t0.c1)))AND(t0.c1)))AND(vt2.c0)))) FROM t0, vt2; -- 0ms;
SELECT ALL ((1.239199899E9) IS TRUE), CASE WHEN COALESCE(vt1.c0, t0.c1) THEN t0.c10 COLLATE BINARY END, (~ ((+ (vt1.c1)))) FROM t0, vt1 WHERE ((((- ('1392595714'))) NOT NULL)); -- 0ms;
SELECT ((CASE t0.c79  WHEN vt1.c1 THEN vt1.c1 WHEN t0.c10 THEN NULL WHEN vt1.c0 THEN vt1.c1 END) BETWEEN (COUNT(*)) AND (((vt2.c0)OR('weekday')))), json_quote(NULL), CAST((+ (vt2.c1)) AS BLOB) FROM t0, vt2 WHERE ((+ ((((NULL))>=((0.031572667960873546))))));SELECT (+ ((('')OR(vt1.c0)))), ((CASE t0.c10  WHEN t0.c10 THEN vt2.c2 ELSE t0.c79 END)=(MIN(t0.c10))), (+ (json_array_length(t0.c79))), ((CAST(t0.c1 AS INTEGER))>(ABS(t0.c51))), CASE WHEN NULL THEN (~ (t0.c51)) END FROM t0 WHERE (CAST(NULL AS REAL)) LIMIT -1962913531 OFFSET -1645837352;SELECT NULL FROM vt1, t0, vt2 ORDER BY (- ((((t0.c1)) NOT BETWEEN ((vt2.c0)) AND ((NULL))))) DESC, (((t0.c79 IN (t0.c10, t0.c79)))||(((vt2.c2)/(t0.c1)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT TOTAL(((vt1.c0) IS TRUE)) FROM vt2, t0;SELECT (NOT (SUM(t0.c1))) FROM vt2, vt1, t0 WHERE ((((x'') NOT NULL) IN ())); -- 0ms;
SELECT DISTINCT LEAD(((((+ (t0.c51))))>=((((vt1.c0)=(vt1.c1))))), CAST(CAST(t0.c79 AS REAL) AS NUMERIC), CASE ((vt1.c0)/(t0.c51))  WHEN 0x7359aaff THEN 0.9100839511497109 ELSE ((t0.c1)-(vt1.c0)) END) OVER ( ORDER BY (((t0.c51)) BETWEEN ((t0.c79 COLLATE RTRIM)) AND ((CASE WHEN vt2.c1 THEN vt2.c2 END)))  NULLS FIRST) FROM vt1, t0 WHERE ('33905839');SELECT DISTINCT CASE MAX(t0.c79)  WHEN ((t0.c1) NOTNULL) THEN ((((((((vt2.c2)AND(t0.c51)))OR(vt2.c1)))AND(t0.c79)))AND(vt2.c0)) WHEN (- (vt1.c1)) THEN MIN(vt2.c1) WHEN ((vt1.c0)AND(t0.c79)) THEN (~ (t0.c10)) WHEN ((t0.c79)OR(0.23644818664070755)) THEN 'vB' WHEN (((vt2.c1)) BETWEEN ((vt1.c1)) AND (('672872214'))) THEN ((vt1.c1) NOT NULL) ELSE t0.c10 COLLATE BINARY END FROM vt2;SELECT DISTINCT ((((vt2.c2)GLOB(vt2.c1))) IS FALSE) FROM vt1 WHERE (((((('1000691309', '-57538898', 0xffffffffe328e374)) BETWEEN ((x'd21b', x'', NULL)) AND (('', '-1655132150', x'daf3'))))%(NULL))) GROUP BY CAST(TYPEOF(DISTINCT vt1.c0) AS TEXT) LIMIT -597497815;SELECT DISTINCT TRIM(CASE vt2.c0  WHEN t0.c79 THEN vt2.c0 ELSE vt2.c0 END), COUNT(((t0.c1)%(vt1.c1))) OVER (), ((((CAST(t0.c51 AS INTEGER))OR(((t0.c1) NOT BETWEEN (vt2.c0) AND (t0.c1)))))AND(NULL)) FROM t0, vt2, vt1 WHERE ((((((NULL)&(NULL)), '1yJ}', ((x'') BETWEEN (x'') AND (NULL)), x'' COLLATE BINARY, ((0xfffffffff69b744c)=(NULL))))=(((('1456372873')+('')), (((('-1097408684')OR(NULL)))OR(NULL)), json_patch(NULL, '-423825358'), json_patch('553156999', '375434321'), (NULL IN ()))))); -- 0ms;
SELECT DISTINCT t0.c1 FROM t0, vt1 WHERE ((NOT (0.007793273149327207))); -- 0ms;
SELECT ALL (((vt1.c0, 0.6188642900302787, vt2.c2)) BETWEEN ((((((((((vt2.c0)AND(vt1.c0)))AND(t0.c1)))AND(vt1.c0)))AND(t0.c79)), ((x'84631cf289a1')!=(t0.c10)), HEX(vt1.c0))) AND ((((vt2.c1) NOT BETWEEN (t0.c79) AND (vt1.c1)), ((vt2.c2) BETWEEN (t0.c79) AND (vt2.c1)), CASE vt2.c2  WHEN t0.c51 THEN NULL ELSE t0.c1 END))) FROM vt2, vt1 WHERE (((CAST(0X5c36bb27 AS NUMERIC))>=(((((((((0.5448805147941957)OR(x'')))OR(x'')))AND('>\r h?*nor')))OR(NULL))))) LIMIT 899307957 OFFSET -1322519859;SELECT LIKELY(DISTINCT (vt1.c1 IN ())) FROM t0 INDEXED BY i10, vt1;SELECT CAST(vt2.c0 AS BLOB) FROM t0, vt2, vt1 WHERE ((((((0.3539985810305294))<=((0x3fcd1e73)))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((((((((t0.c1)OR((+ (vt2.c2)))))AND(((vt1.c1)AND(vt2.c2)))))AND(vt2.c0 COLLATE RTRIM)))OR(SUM(vt2.c2))))OR(CASE vt1.c1  WHEN t0.c51 THEN t0.c10 ELSE vt2.c0 END)))AND(vt2.c1 COLLATE BINARY)) FROM vt1, vt2, t0 WHERE (((((CAST('' AS TEXT))OR((('1634953168') IS TRUE))))OR(((0X52cfd8f2) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((t0.c1) NOT NULL) FROM vt2, t0 WHERE (NULLIF(((((NULL)OR(0.36715365801482935)))OR('oxvgg-')), ((x'') NOT NULL))); -- 0ms;
SELECT DISTINCT SUM(((t0.c1)<>(vt2.c0))) FROM t0;SELECT 0.20251069050168258 FROM vt2 WHERE (((0.0591735360422464 COLLATE NOCASE)&(((x'6f85')-(NULL))))); -- 0ms;
SELECT (CASE t0.c1  WHEN t0.c10 THEN vt2.c0 ELSE vt2.c2 END IN ()) FROM vt2 WHERE ((((0.8156483601767092)) BETWEEN ((']')) AND ((x''))) COLLATE RTRIM) GROUP BY (+ ((+ (t0.c51)))) HAVING (((((vt2.c1)IS(t0.c79))))<=((CAST(t0.c51 AS REAL))));SELECT DISTINCT GROUP_CONCAT(((vt2.c0) NOT BETWEEN (0.6021211444691583) AND ('0.3678858785583341'))) OVER ( PARTITION BY (((((((vt2.c1))=((vt2.c2))))OR(CAST(vt2.c1 AS TEXT))))OR(json_patch(vt1.c1, t0.c51))), CASE WHEN vt1.c0 THEN (((('&%ddd')OR(vt1.c0)))OR(vt2.c1)) END) FROM vt2;SELECT ALL ((((((((((vt2.c2)>>(t0.c10)))OR(UNLIKELY(DISTINCT vt1.c0))))OR(0.8914349497979556)))OR(((t0.c51) BETWEEN (t0.c51) AND (vt2.c1)))))OR('-1625800547')), ((vt2.c2 COLLATE BINARY) BETWEEN (x'') AND (vt1.c1 COLLATE NOCASE)), (((NOT (t0.c1))) ISNULL), CAST(((vt1.c1) IS TRUE) AS TEXT), CASE ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))  WHEN vt2.c1 THEN t0.c51 COLLATE NOCASE WHEN vt2.c0 COLLATE RTRIM THEN CAST(vt2.c0 AS TEXT) WHEN (((vt2.c1, vt2.c1, t0.c79)) BETWEEN ((t0.c79, vt1.c1, vt2.c0)) AND ((vt1.c0, vt1.c1, vt1.c0))) THEN 0xffffffffbc0da88e ELSE x'' END FROM vt1, vt2, t0 WHERE ('-353409546'); -- 0ms;
SELECT DISTINCT t0.c10, CASE WHEN COUNT(t0.c1) THEN (0xffffffffa94266b2 IN ()) WHEN ((((((((t0.c1)OR(t0.c51)))AND(vt2.c1)))OR(vt1.c0)))OR(vt2.c2)) THEN ((t0.c51)<=(t0.c10)) WHEN CAST(t0.c1 AS TEXT) THEN ((((((((((((x'')OR(vt2.c0)))OR(vt2.c2)))AND(t0.c1)))AND(t0.c1)))OR(t0.c51)))OR(t0.c1)) ELSE ((((t0.c10)OR(t0.c79)))AND(vt2.c1)) END, ((((vt1.c1) ISNULL))|(vt1.c1 COLLATE NOCASE)) FROM t0, vt1 WHERE (((0.4677358276404705 COLLATE BINARY)IS(((NULL)<<(NULL))))) ORDER BY (- (((vt2.c0) ISNULL))) DESC  NULLS LAST;SELECT ALL NULL COLLATE RTRIM FROM t0 INDEXED BY i10 WHERE (CASE LTRIM('')  WHEN CAST(2.140336189E9 AS TEXT) THEN 0.2970923481869753 ELSE (('') BETWEEN (0.979336725858433) AND (0.0948150735012997)) END);SELECT DISTINCT ((t0.c51 COLLATE RTRIM) IS FALSE) FROM vt1, t0, vt2 WHERE (IFNULL(CAST(x'' AS TEXT), (('F8m')IS(1.978043593E9)))); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c79) NOT NULL)) OVER ( ORDER BY ((CAST(t0.c10 AS TEXT))-(((t0.c1) IS FALSE))), (NOT ((vt2.c1 IN ()))) DESC  NULLS LAST), COALESCE('1129838178', TOTAL(vt1.c0)), COUNT(((((vt2.c0)OR(vt1.c0)))AND(vt2.c1))) OVER () FROM t0, vt2 WHERE (TRIM(DISTINCT (('-1314201011')/(x'35c1')), (+ (0.9402761027200717))));SELECT CASE WHEN vt1.c1 THEN t0.c79 END COLLATE RTRIM FROM t0, vt1 INDEXED BY i10, vt2;SELECT CASE t0.c1 COLLATE NOCASE  WHEN ((t0.c1) NOT NULL) THEN (((t0.c79))>((vt2.c2))) ELSE ((((t0.c1)AND(t0.c10)))OR(t0.c79)) END, (+ (t0.c1)), ((((SUM(vt1.c0))OR(TOTAL(t0.c51))))AND((((vt2.c0))>((vt2.c2))))) FROM t0, vt2 WHERE (IFNULL(DISTINCT ((((0.7804188200867304)AND(NULL)))AND(x'')), (('')>(-1.455776498E9)))) ORDER BY (((t0.c1 IN (vt2.c0)))<('750800077')) ASC;SELECT DISTINCT ((((vt1.c1) BETWEEN (vt2.c2) AND (vt1.c1)))IS NOT(((vt2.c0) NOT BETWEEN (vt2.c1) AND (vt2.c0)))) FROM vt1, vt2, t0 GROUP BY ((((vt1.c1) BETWEEN (vt2.c2) AND (vt2.c2))) BETWEEN (LTRIM(t0.c51, vt2.c1)) AND (((t0.c79) NOT BETWEEN (t0.c10) AND (vt2.c0)))) HAVING AVG(((t0.c79)==(vt1.c1))); -- 0ms;
SELECT DISTINCT SUBSTR((((t0.c1))<((t0.c1))), ((((((((vt2.c2)OR(vt1.c1)))OR(vt1.c1)))AND(t0.c10)))AND(vt1.c1))), ((SUM(t0.c1)) NOT BETWEEN (CAST(vt2.c1 AS TEXT)) AND ((((vt1.c1, vt2.c2, t0.c51))<((vt1.c0, vt1.c0, vt2.c0))))), (((vt2.c2)) NOT BETWEEN ((((t0.c10) NOTNULL))) AND (((t0.c1 IN (t0.c10, t0.c51))))) FROM vt2, vt1;SELECT DISTINCT SUM((((vt1.c0)) NOT BETWEEN ((vt2.c1)) AND (('gC')))), (((CAST(t0.c1 AS INTEGER), ((vt1.c0)>>(t0.c79)), ((vt2.c2)*(vt1.c0))))>(((((vt1.c0))<((t0.c10))), CAST(vt2.c1 AS NUMERIC), (~ (vt2.c1))))), ((((t0.c51) ISNULL))>>(t0.c1 COLLATE NOCASE)) FROM vt2, vt1;SELECT ALL MIN(0.2616879974193761) COLLATE RTRIM FROM vt1 WHERE (((LIKELY(0.0965781932815507)) BETWEEN (((x'')*('-1139955570'))) AND ((((x'b8c0', NULL, NULL))=(('771805975', x'', NULL)))))); -- 0ms;
SELECT DISTINCT ((((t0.c1)<=(0.3470066480266064)))=(((vt1.c1) NOTNULL))), CASE WHEN json_array(t0.c79, t0.c1) THEN vt2.c2 WHEN (('')>(t0.c10)) THEN x'' WHEN ((vt2.c0)AND(t0.c51)) THEN COALESCE(NULL, vt2.c0) ELSE (t0.c51 IN ()) END, CASE (vt2.c0 IN ())  WHEN (((vt2.c1)) NOT BETWEEN ((t0.c79)) AND ((0.8730903544205147))) THEN vt2.c0 WHEN ((vt2.c2)>>(vt2.c2)) THEN GROUP_CONCAT(0.5129237581641563) WHEN (((vt2.c0))>((vt2.c0))) THEN UPPER(vt2.c2) END FROM t0;SELECT (~ (CAST(vt2.c0 AS NUMERIC))) FROM vt2, t0; -- 1ms;
SELECT DISTINCT LAG(CAST(((vt1.c0)&(vt1.c0)) AS BLOB), (((((NOT (t0.c51)))OR(NULL)))OR(NULL)), (CAST(vt1.c0 AS NUMERIC) IN ('0.3539985810305294'))) OVER (), (((vt2.c2)) NOT BETWEEN ((x'')) AND (((vt2.c1 IN ())))), CAST((+ (t0.c51)) AS BLOB) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (vt1.c1) AND (vt2.c0)) COLLATE NOCASE INNER JOIN vt2 ON CAST(ABS(x'd505') AS REAL) WHERE (((((0.16333901425252506)>=(0.09374633823537448)))<<('0.9607676669578167' COLLATE RTRIM))) LIMIT 2019645849;SELECT (((t0.c79) BETWEEN (t0.c1) AND (t0.c51)) IN ()) FROM t0; -- 0ms;
SELECT ALL ((CAST(t0.c79 AS NUMERIC))IS NOT(((((((((vt2.c2)AND(t0.c1)))AND(t0.c10)))OR('-923705936')))AND(vt1.c1)))), json_array_length(DATETIME(vt2.c0, vt2.c1, '1802637707'), CASE WHEN t0.c79 THEN t0.c79 END), (((((0.587340955964355, vt1.c1, t0.c51)) BETWEEN ((vt2.c1, t0.c79, NULL)) AND ((vt2.c2, vt2.c0, t0.c1))))|(CASE WHEN t0.c51 THEN t0.c51 ELSE vt2.c2 END)) FROM vt1, t0;SELECT t0.c1 FROM vt2, t0 UNION SELECT COUNT(((t0.c10)<<(t0.c1)) COLLATE NOCASE) FROM t0, vt1; -- 0ms;
SELECT COUNT(((((vt2.c1)AND(t0.c79)))OR(t0.c1))) OVER ( GROUPS ((CASE WHEN t0.c1 THEN vt2.c0 WHEN vt1.c0 THEN '_%tE]FW⠪' WHEN t0.c1 THEN vt1.c1 END) BETWEEN (CASE WHEN t0.c10 THEN t0.c10 WHEN t0.c10 THEN t0.c51 WHEN vt2.c1 THEN t0.c51 ELSE t0.c1 END) AND ((((NULL)) NOT BETWEEN ((t0.c79)) AND ((0.6057187205678304))))) PRECEDING) FROM vt2 INNER JOIN t0 ON CASE WHEN ((vt1.c0)AND('ML')) THEN t0.c79 COLLATE BINARY ELSE t0.c79 COLLATE NOCASE END INNER JOIN vt1 ON ((((vt2.c2) IS TRUE)) IS TRUE) WHERE (((0xfffffffff2024760) IS TRUE) COLLATE BINARY); -- 0ms;
SELECT ALL SUM((- (vt2.c1))) FILTER(WHERE (((((NOT (vt2.c2)))AND(NULL)))AND(((NULL)IS(vt1.c0))))) OVER () FROM t0, vt1 WHERE (((('' IN ()))==(((x'')&(NULL)))));SELECT ((((((((SUM(t0.c10))AND((t0.c79 IN ()))))OR(((vt2.c2) NOT BETWEEN (t0.c1) AND (vt2.c2)))))AND(LOWER(DISTINCT vt2.c2))))OR(((((t0.c1)OR(vt1.c0)))AND(vt1.c0)))), (CAST(t0.c51 AS TEXT) IN (t0.c79)), '' FROM t0, vt1;SELECT DISTINCT CAST(CASE t0.c79  WHEN t0.c1 THEN t0.c10 ELSE t0.c1 END AS TEXT) FROM vt2, t0 WHERE (((((('') IS FALSE)))>=(((~ (NULL)))))) LIMIT 561317610 OFFSET 2140336189; -- 0ms;
SELECT DISTINCT CAST(x'15bd' AS BLOB), ((vt2.c0) IS FALSE) COLLATE BINARY, ((AVG(vt1.c0)) NOT BETWEEN (CAST(vt2.c1 AS INTEGER)) AND (((((((((vt2.c0)AND(t0.c51)))AND(vt1.c0)))AND(t0.c51)))OR(vt1.c1)))) FROM t0, vt2, vt1; -- 0ms;
SELECT ALL ((((vt2.c1) IS TRUE)) NOT BETWEEN (((t0.c10)GLOB(vt2.c1))) AND ((vt2.c1 IN ()))) FROM vt2;SELECT DISTINCT '1802637707', CAST(CASE WHEN vt2.c0 THEN vt2.c0 WHEN t0.c51 THEN vt1.c0 WHEN vt1.c1 THEN 'L\n' ELSE vt2.c0 END AS INTEGER), LEAD(CAST(vt1.c1 AS REAL) COLLATE BINARY, CAST(CAST(vt1.c1 AS TEXT) AS REAL), (~ ((NOT (t0.c10))))) OVER () FROM vt1, vt2, t0; -- 0ms;
SELECT DISTINCT ((((t0.c1)LIKE(t0.c79)))>(((((((((x'8ddb')OR(vt1.c1)))AND(t0.c10)))AND(t0.c1)))AND(t0.c1)))) FROM vt1 WHERE (((TOTAL_CHANGES()) BETWEEN (((x'')>>(0.38486604044379324))) AND (((x'875c')||(1456372873))))) GROUP BY ((CAST(0.1719409267915305 AS BLOB)) NOTNULL), ((CAST(t0.c51 AS INTEGER))-('[y')), (t0.c51 IN ()) COLLATE RTRIM;SELECT ALL (- (GROUP_CONCAT(vt2.c0))) FROM vt1, vt2, t0 WHERE (TYPEOF(((x'4606')LIKE(x'')))); -- 0ms;
SELECT CASE ((vt2.c1) NOT BETWEEN (t0.c79) AND (t0.c79))  WHEN vt1.c1 COLLATE BINARY THEN CASE t0.c51  WHEN '5R' THEN vt1.c0 ELSE x'8709' END ELSE JULIANDAY(vt1.c1, vt2.c1, -1625800547) END FROM vt2, vt1, t0 LIMIT 2057465783 OFFSET 2076108597; -- 0ms;
SELECT DISTINCT ((- (vt2.c2)) IN (((t0.c51) IS TRUE), ((t0.c10) NOT BETWEEN (t0.c1) AND (vt2.c0)))), COUNT(*), (+ (((vt1.c0) BETWEEN (t0.c51) AND (t0.c79)))) FROM vt2, t0 WHERE (CAST(((x'd074')&('2110259522')) AS REAL));SELECT TOTAL((- (vt2.c1)) COLLATE NOCASE) FROM vt1 WHERE ('z-j}');SELECT (((((((vt1.c0)AND(vt1.c0)))AND(t0.c51))))<((vt1.c0 COLLATE RTRIM))) FROM vt1, vt2, t0 WHERE ((('' COLLATE BINARY) NOT BETWEEN (CASE WHEN 2001238813 THEN 0x1150e8c9 ELSE x'7322b630' END) AND ((NOT (0.028911044246287654))))); -- 0ms;
SELECT ALL ((((vt1.c0)%(t0.c79)))|(CASE vt1.c0  WHEN t0.c51 THEN vt2.c1 END)) FROM vt1 WHERE ((('+U')||(413294211)) COLLATE NOCASE);SELECT DISTINCT t0.c79 FROM t0, vt2 WHERE ((((('[YS)' COLLATE NOCASE)OR(((NULL) NOT NULL))))AND(SQLITE_VERSION()))) LIMIT 899307957 OFFSET 2081962646; -- 0ms;
SELECT DISTINCT ((CAST(t0.c51 AS NUMERIC))&((- (t0.c51)))) FROM vt1, vt2, t0 GROUP BY (((CAST(t0.c1 AS BLOB)))==((((t0.c10) NOT BETWEEN (vt2.c2) AND (vt2.c0))))) HAVING ((CASE WHEN t0.c51 THEN vt2.c2 WHEN vt2.c0 THEN 0Xffffffffb76537fe WHEN vt1.c1 THEN vt2.c2 END)OR(CASE t0.c79  WHEN t0.c51 THEN '5 ' ELSE vt2.c0 END)) LIMIT 806266521 OFFSET 514197778; -- 0ms;
SELECT DISTINCT ((MIN(vt2.c1))%(((vt2.c1)>>(vt2.c2)))) FROM vt2, t0 WHERE (((('0.9206705497787308')) NOT BETWEEN ((((((-167466460)OR(x'')))OR(0.08432347105439142)))) AND (('|6r0gXW')))); -- 0ms;
SELECT ALL UNLIKELY(CAST(t0.c10 AS INTEGER)) FROM vt1;SELECT DISTINCT ((((CAST(vt1.c1 AS INTEGER))OR(vt2.c0)))AND(((vt2.c0)/(vt2.c1)))) FROM vt1 WHERE ((((-1105090595)IS(0.8948068910919236)) IN ()));SELECT DISTINCT COUNT(*) OVER () FROM t0, vt2, vt1 WHERE (((((((NULL))==((x'')))))==(((((x'', x'', 0.6374750033741784))!=((x'0d38', NULL, '3Txt-ES'))))))); -- 0ms;
SELECT DISTINCT ((t0.c79 COLLATE BINARY)IS NOT(((vt2.c0)%('1978043593')))), vt2.c2, CASE ((vt2.c1) ISNULL)  WHEN CASE WHEN vt2.c1 THEN t0.c10 END THEN ((t0.c79) NOT NULL) WHEN MIN(t0.c10) THEN CAST(t0.c1 AS INTEGER) WHEN ((vt1.c1) NOT NULL) THEN ((t0.c10)||(t0.c79)) ELSE UPPER(vt2.c2) END FROM vt2 NOT INDEXED WHERE (((CASE '1714087851'  WHEN 0X51503d0b THEN -46596489 WHEN '-704080269' THEN NULL WHEN 0.1397300531261495 THEN 'Q^<1\gł' END)=(((-8.13469266E8)IS NOT(0.4280908979802034))))) ORDER BY (((vt1.c1) IS TRUE) IN ()) DESC;SELECT ((((~ (vt2.c1))))<((MAX('')))), ((((t0.c1) NOT NULL)) BETWEEN (UNICODE(t0.c51)) AND (vt1.c1)), TOTAL((- (vt1.c1))), SUBSTR((((((((('-1094707926')AND(vt2.c1)))AND(t0.c51)))OR(t0.c10)))AND(t0.c79)), TOTAL(t0.c79)), t0.c1 FROM vt2;SELECT (((vt2.c2) NOT BETWEEN (vt2.c0) AND (t0.c79)) IN (CASE vt2.c1  WHEN vt2.c1 THEN ']ఢVQc\rX\n' WHEN vt2.c0 THEN vt1.c1 WHEN '100771768' THEN t0.c79 ELSE vt2.c1 END)), CASE WHEN (((vt2.c1))>((t0.c51))) THEN x'' END, (CAST(vt2.c0 AS INTEGER) IN ()) FROM t0, vt2, vt1 ORDER BY ((((((((((t0.c10) BETWEEN (t0.c79) AND (0.8367054026724134)))OR(((vt2.c2)LIKE(vt1.c0)))))AND(CASE WHEN vt1.c1 THEN t0.c1 ELSE vt1.c0 END)))OR((- (vt2.c1)))))OR(((vt1.c1) BETWEEN (vt2.c1) AND (t0.c10)))), (+ ((vt2.c1 IN ())))  NULLS LAST, ((((((((x'e75a')OR(((t0.c51) NOT BETWEEN (0.7240997800793669) AND (t0.c79)))))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((((vt2.c1)AND(t0.c1)))OR(vt1.c1)))))AND(((t0.c51)-(t0.c1))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ (((vt1.c1)+(vt1.c0)))) FROM vt2 WHERE ((- ((NULL IN ()))));SELECT DISTINCT COUNT(*) OVER () FROM vt1, vt2 WHERE (CASE ((0.9787759098177046) BETWEEN ('825474856') AND (NULL))  WHEN ((x'')!=(0.2674956563240206)) THEN (NOT (NULL)) ELSE CASE WHEN x'4228' THEN NULL ELSE 1.8955047E7 END END); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((vt2.c1) NOTNULL), ((((t0.c1)AND(vt2.c2)))AND(vt1.c0))), (CAST(t0.c51 AS TEXT) IN ()), (((vt2.c1)) NOT BETWEEN ((x'')) AND ((DATE(NULL, vt1.c0, vt1.c1, vt2.c1, t0.c79)))), (((NOT (vt2.c0))) NOT BETWEEN (LOWER(DISTINCT vt2.c1)) AND (((t0.c79)||(t0.c51)))), (((((vt1.c0) NOTNULL)))!=((((vt1.c0)IS(vt2.c0))))) FROM vt2, t0 WHERE (((('+>CQc꒐z')) NOT BETWEEN ((((0.372358859875887) ISNULL))) AND ((((x'')/('-1313151064'))))));SELECT LIKELY(((t0.c51)>(vt2.c1))) FROM vt2, t0; -- 0ms;
SELECT DISTINCT (NOT (((vt2.c1) BETWEEN (t0.c51) AND (vt1.c0)))), AVG((((vt2.c0))<((vt2.c0)))) OVER (), COUNT(((vt2.c1) NOT NULL)), (((((t0.c51) NOT NULL)))>((vt2.c0 COLLATE RTRIM))), NULL FROM vt1, t0;SELECT DISTINCT (((0.40250126182423385))<((CASE WHEN vt2.c2 THEN vt2.c0 WHEN t0.c10 THEN 0.48110162296081327 WHEN t0.c10 THEN t0.c10 ELSE vt2.c0 END))) FROM vt2 NOT INDEXED, vt1 ORDER BY ((((('-1106220792', t0.c10, vt2.c1, vt2.c1, t0.c79))<((t0.c51, vt1.c1, 9223372036854775807, t0.c1, vt2.c2)))) BETWEEN (((t0.c51) NOT BETWEEN (vt2.c1) AND (vt1.c1))) AND (0.6400186334515804)) DESC;SELECT ((vt2.c0)<=((- (vt2.c1)))) FROM vt1, t0, vt2; -- 0ms;
SELECT ALL NTH_VALUE(x'', (((vt2.c2 IN ())) NOTNULL)) OVER ( PARTITION BY ((vt2.c2) NOT BETWEEN ((~ (t0.c79))) AND (x'')), ((NULL)+(t0.c1 COLLATE NOCASE)) ROWS vt2.c1 PRECEDING) FROM vt2 WHERE ((((((x'a068', 0x33fe266a, '2140336189', '1444209403', '', '', NULL)) BETWEEN (('-1946192923', NULL, 1758997489, NULL, x'552d', '1753025570', NULL)) AND ((x'', '1000691309', 1645125173, NULL, '', '2025525542', '-1905166469'))))IS NOT(CAST('' AS TEXT))));SELECT (+ (TOTAL(1.000691309E9))), TOTAL(CAST(t0.c79 AS INTEGER)), TOTAL((t0.c51 IN ())) FROM vt2 WHERE (((0x42885093)OR(CASE WHEN '-101144585' THEN 0.016525419027246357 END))) LIMIT 1000691309 OFFSET 2110259522;SELECT DISTINCT GROUP_CONCAT((((vt2.c2))=((vt1.c0)))) OVER ( ORDER BY ((0.013761439229728611) IS TRUE) DESC  NULLS LAST), ((((t0.c79) BETWEEN (t0.c10) AND (t0.c10))) IS FALSE), (((((vt2.c2) BETWEEN (vt1.c0) AND (t0.c10)), (t0.c51 IN ()), ((vt1.c0)>(vt1.c0))))<(((NOT (t0.c79)), ((vt2.c1)>=(t0.c51)), json_array_length(0xffffffffd3c5f229, t0.c1)))) FROM t0, vt1;SELECT DISTINCT ((((t0.c51)IS(''))) IS FALSE) FROM t0 WHERE (CASE UNLIKELY(-976538624)  WHEN CAST(NULL AS NUMERIC) THEN CASE NULL  WHEN x'e53ea665' THEN NULL END WHEN 192496773 COLLATE RTRIM THEN (((0xe0bbb)) NOT BETWEEN ((0.3625267721840204)) AND ((0X36bc293a))) WHEN NULL THEN ((NULL) NOT NULL) ELSE ((NULL) BETWEEN (x'') AND (NULL)) END); -- 0ms;
SELECT ALL TYPEOF(DISTINCT (vt2.c1 IN ())) FROM vt2, t0 WHERE (((CASE '-1455776498'  WHEN NULL THEN x'' END)==(x''))); -- 0ms;
SELECT GROUP_CONCAT(CAST(t0.c79 AS NUMERIC)) OVER () FROM vt1, t0 WHERE ((((((((((~ (0.594296933745302)))OR((('')%('0.9022716883935449')))))AND('-939211698' COLLATE RTRIM)))AND(((2140336189) NOT NULL))))OR(CAST(NULL AS NUMERIC)))) GROUP BY ((vt2.c1 IN ()) IN ()) HAVING 0.7822239576026794; -- 0ms;
SELECT DISTINCT ((((CASE WHEN vt2.c0 THEN t0.c10 WHEN vt1.c0 THEN vt2.c1 WHEN vt1.c0 THEN t0.c10 ELSE vt2.c0 END)OR((((t0.c51)) BETWEEN ((t0.c10)) AND ((vt2.c2))))))OR(COUNT(*))) FROM t0, vt2 WHERE ('-1164805197') LIMIT -867439653 OFFSET 33905839;SELECT DISTINCT AVG(((t0.c1) BETWEEN (t0.c51) AND (vt2.c2))) OVER () FROM vt1, t0 WHERE ((((((('Z4|(ayS')AND(5.08236173E8)))AND(x'4f8e'))) BETWEEN (2.140336189E9) AND (NULL)));SELECT COUNT(*) FROM t0, vt2 WHERE ((((((x'2b30'))=(('1716738557'))))%((((''))<=((1444209403)))))) LIMIT 2114358167 OFFSET -660715747; -- 0ms;
SELECT ALL 0.54828014460923, ((((((((((((((((t0.c51)OR(vt2.c0)))OR(NULL)))AND(x'')))OR(vt2.c1)))AND((((vt2.c0, vt2.c2, vt2.c1, t0.c1, t0.c51)) NOT BETWEEN ((t0.c1, vt2.c1, 0.4164211419535915, vt2.c0, vt1.c1)) AND ((t0.c51, vt2.c0, vt1.c0, vt1.c0, t0.c79))))))OR(vt1.c1)))OR(((t0.c79)<('0.7694005211531932')))))OR(((((vt2.c2)AND(t0.c79)))OR(t0.c51)))), GROUP_CONCAT(((vt2.c2)>(vt2.c0))) FROM vt2 WHERE (((UNLIKELY('1978043593')) BETWEEN ((NULL IN ())) AND (CASE WHEN -892297937 THEN NULL END)));SELECT DISTINCT ((((vt2.c0)<('-1827863486')))+((t0.c79 IN (vt2.c0)))) FROM vt2 WHERE (((~ (x'')) IN ()));SELECT DISTINCT '-387162907' COLLATE RTRIM FROM t0, vt1 WHERE (((CASE '-173913117'  WHEN '' THEN '1e500' END)*((+ (0xffffffff8ef0dd59))))); -- 0ms;
SELECT DISTINCT CAST(t0.c79 AS BLOB), (((+ (t0.c51))) NOT BETWEEN ((t0.c10 IN ())) AND (LIKELY(vt2.c1))), 0x6f994830 FROM t0 WHERE (((((1.12935848E9)==(1463289136))) BETWEEN (((1456372873) ISNULL)) AND ((((0.054958217315734914, NULL, 0.7870739770532528)) NOT BETWEEN ((x'', 0.6857741373529649, 0.7529571919038739)) AND ((1476177268, x'29b1', x'')))))) LIMIT 1205168450;SELECT NULLIF(GROUP_CONCAT(vt2.c2), (NULL IN ())) FROM t0, vt2, vt1 WHERE ((+ ('1755154267'))) ORDER BY CASE ((t0.c1)&(t0.c10))  WHEN t0.c79 THEN ((t0.c51) NOTNULL) END DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt2.c2, t0.c10, vt2.c2)) BETWEEN ((t0.c51, vt2.c1, vt1.c1)) AND ((0.8488321469917203, t0.c79, vt1.c0))) IN (0.7468997965019294)) FROM vt2 WHERE ((((((x'')) NOT BETWEEN (('-101144585')) AND ((''))))<(CAST(0.005494245458955271 AS TEXT))));SELECT ((((((((vt2.c2)AND(GROUP_CONCAT(vt1.c1))))OR(((((t0.c51)AND(vt2.c0)))AND(t0.c79)))))OR(0.6442018513157467)))AND(0.35660957756442735)) FROM t0, vt1, vt2 WHERE (((('-713588529' IN (x'')))IS(((x'') NOT BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT MIN(((('1028453727')) BETWEEN ((t0.c51)) AND ((vt2.c1))), 4.28716367E8), CASE WHEN ((vt2.c0)LIKE(vt1.c0)) THEN x'' WHEN vt2.c1 COLLATE NOCASE THEN ((((t0.c79)AND(t0.c1)))OR(t0.c1)) WHEN (NOT (vt2.c0)) THEN ((((vt2.c0)AND(t0.c51)))AND(289575372)) END, ((vt2.c1 IN ()) IN ()) FROM vt2;SELECT DISTINCT TOTAL(((vt2.c2)==(vt1.c0))) FROM vt2, vt1, t0 LIMIT -1816339460 OFFSET -27749572; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt2, vt1 WHERE ((((0X56ce7c89)) NOT BETWEEN ((0.870478053399142 COLLATE BINARY)) AND ((((((0.17924092099846678)OR('1753025570')))OR(0.5998683629981341)))))); -- 0ms;
SELECT DISTINCT ((((((t0.c51)AND(vt2.c1)))AND(t0.c51))) NOT NULL) FROM vt2, vt1, t0 ORDER BY CASE ((vt1.c0)!=(vt2.c1))  WHEN json_type(vt2.c1) THEN CASE t0.c51  WHEN vt1.c1 THEN vt1.c1 ELSE t0.c1 END WHEN ((vt1.c1)&(t0.c79)) THEN vt1.c1 COLLATE NOCASE WHEN (~ (vt1.c0)) THEN ((vt1.c1) NOT BETWEEN (t0.c79) AND (vt2.c1)) WHEN ((vt1.c1)>>(vt2.c0)) THEN (~ (t0.c10)) WHEN (('1755313055')&(vt2.c1)) THEN ((t0.c79) IS FALSE) END DESC  NULLS LAST; -- 0ms;
SELECT ALL ((((((t0.c1)AND(vt2.c2)))OR(t0.c79))) IS FALSE) FROM vt2, t0, vt1 WHERE ((NOT (COALESCE(NULL, 'Ky')))); -- 0ms;
SELECT DISTINCT t0.c1 FROM vt1, vt2 WHERE ((+ (x'' COLLATE RTRIM)));SELECT TOTAL(CAST(t0.c10 AS TEXT)) FROM vt1, t0, vt2 ORDER BY (((((vt2.c2, t0.c51, vt1.c0)) BETWEEN ((t0.c51, vt2.c0, t0.c79)) AND ((t0.c51, t0.c1, vt2.c2))))AND(CASE t0.c79  WHEN t0.c79 THEN vt2.c0 END)), x'', t0.c51 DESC LIMIT 1962123351; -- 0ms;
SELECT ALL MAX((((x'', t0.c1, t0.c1))<=((vt2.c2, t0.c1, t0.c1)))), CASE WHEN CAST(t0.c1 AS NUMERIC) THEN (~ (t0.c51)) ELSE '' END, NTILE('601364631') OVER () FROM vt1, t0 WHERE (0.660093299842648);SELECT DISTINCT CAST(vt2.c2 AS BLOB) COLLATE NOCASE FROM vt1, vt2, t0 ORDER BY (((LOWER(DISTINCT vt1.c0)))>((((0.691828142586241)IS(t0.c79))))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT NTILE(((0.7486961943415512 COLLATE RTRIM) BETWEEN (CAST(vt2.c2 AS TEXT)) AND (((vt2.c0)<=(t0.c51))))) OVER () FROM t0, vt2, vt1 WHERE (CASE WHEN (((0.8060269786143932))<=((NULL))) THEN CAST('6U' AS NUMERIC) END); -- 0ms;
SELECT ALL t0.c51 FROM vt1 CROSS JOIN t0 ON (+ ((((('')AND(t0.c1)))AND(t0.c51)))) WHERE ((((('')OR(0.09140367297738272)))AND('-402193610')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((TRIM(vt2.c0))AND(CAST(t0.c10 AS NUMERIC))))OR(MIN(vt2.c2))) FROM vt2, t0; -- 0ms;
SELECT (CASE WHEN t0.c79 THEN t0.c51 WHEN t0.c10 THEN vt1.c0 WHEN t0.c1 THEN vt1.c0 END IN ()) FROM vt2, vt1; -- 0ms;
SELECT ALL LOWER(DISTINCT ((t0.c10)&(t0.c51))) FROM vt1, t0 GROUP BY 1935256319, (NOT (((vt2.c0)<=(vt1.c0)))), x'' HAVING (((+ (t0.c79))) IS TRUE);SELECT ((((vt1.c1)||(vt2.c0)))<>(((vt2.c0) NOTNULL))) FROM vt2, t0, vt1 WHERE (((((0X9b1ed3f)OR(NULL)))AND(x'')) COLLATE BINARY) ORDER BY ((x'')=(t0.c79)) COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT ALL (((NULL IN (vt2.c1)))==(((t0.c10)=(vt1.c1)))) FROM vt2 WHERE ((0.6282488338530752 IN ()) COLLATE RTRIM);SELECT ALL NTILE(CASE WHEN ((t0.c51) BETWEEN (vt1.c0) AND (t0.c51)) THEN ((((vt1.c0)OR(vt1.c1)))AND(t0.c1)) END) OVER (), ((AVG(t0.c51)) NOT NULL), CASE CASE WHEN t0.c79 THEN t0.c1 END  WHEN UPPER(DISTINCT vt2.c2) THEN ((((vt1.c1)OR(vt1.c0)))OR(t0.c1)) ELSE vt1.c1 END FROM t0, vt2, vt1;SELECT CASE WHEN CAST(vt1.c0 AS REAL) THEN CASE WHEN t0.c79 THEN 0.32856230797865105 WHEN vt1.c0 THEN vt1.c1 WHEN x'' THEN vt2.c0 ELSE vt2.c0 END END, COUNT(*) OVER (), CASE ((')io!') IS TRUE)  WHEN ABS(DISTINCT vt2.c2) THEN ((((vt1.c1)AND(vt2.c0)))OR(vt2.c1)) END FROM t0 WHERE ((CAST(x'' AS INTEGER) IN ()));SELECT DISTINCT (((t0.c1)) NOT BETWEEN ((((((t0.c10)AND(vt2.c2)))AND(vt2.c1)))) AND ((CASE WHEN vt2.c2 THEN '-607022896' WHEN vt2.c1 THEN vt2.c2 WHEN t0.c10 THEN 0.36105600273829397 ELSE t0.c79 END))), ((((CASE WHEN vt1.c1 THEN 0.8771514765003119 END)AND(x'')))OR(CAST(t0.c1 AS BLOB))), ((((t0.c79)AND((((t0.c10, vt2.c2, '1349514415')) NOT BETWEEN ((t0.c79, vt2.c1, t0.c1)) AND ((vt1.c0, vt2.c0, vt1.c0))))))OR(x'e284')) FROM vt2, t0, vt1 WHERE (((((0.05108340703239578) NOTNULL)) NOT BETWEEN (x'303e' COLLATE BINARY) AND (HEX(NULL)))); -- 0ms;
