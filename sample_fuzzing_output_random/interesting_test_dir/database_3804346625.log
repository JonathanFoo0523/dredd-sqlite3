-- Time: 2024/06/07 00:31:56
-- Database: database25
-- Database version: 3.40.0
-- seed value: 3804346625
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.33658922183572304, x'39ae') WHERE ((vt0.c0) IS FALSE) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0x6237cad); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (0.434187639548115), ('102988973'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE vt0.c0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'427f'); -- 0ms;
END TRANSACTION; -- 1ms;
REINDEX; -- 3ms;
INSERT OR IGNORE INTO vt0 VALUES ('102988973'), (x''), (0.434187639548115); -- 7ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA optimize; -- 1ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'9e49') WHERE (((~ (vt0.c0)))%(vt0.c0 COLLATE NOCASE)); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=('2抺B₋緉b') WHERE (((- (vt0.c0)))IS NOT((vt0.c0 IN ()))); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.7911932419063317); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0x418975ed); -- 5ms;
UPDATE OR IGNORE vt0 SET c0='1099527661' WHERE (((+ (vt0.c0))) NOT BETWEEN ((((vt0.c0))=((vt0.c0)))) AND (((vt0.c0)GLOB(vt0.c0)))); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 461840088); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '23237'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
UPDATE vt0 SET c0=NULL WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)%(vt0.c0)))))AND((- (vt0.c0)))); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL), ('-1833235027'), (0.7911932419063317); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='k5JE{a' WHERE (((vt0.c0 COLLATE RTRIM, (+ (vt0.c0)), (((-1.37617269E8, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))>=((CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0, (vt0.c0 IN (vt0.c0, vt0.c0))))); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), (x''), ('?>'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt0 SET (c0, c0)=(0.1884425822159489, x'0283'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('0.7911932419063317'); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(1.099527661E9) WHERE ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 END) AND (((vt0.c0)>>(vt0.c0)))); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(1004697413, 0.39017771036291127, NULL); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x''); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.7594628697421247); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 472796131 sz=-137617269 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.6520599035502364); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), ('416748456'), ('6n'); -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL), (0.37409624448537915), ('*3'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=('hL\_Wjj', x''); -- 5ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0Xffffffff9d058cf5, c0=NULL WHERE ((CASE WHEN vt0.c0 THEN '䦡vO~\P9' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<=((vt0.c0 IN ()))); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.9354868543459716); -- 2ms;
DELETE FROM vt0 WHERE CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0)+(NULL)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (~ (vt0.c0)) WHEN (vt0.c0 IN ()) THEN (~ (vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END; -- 1ms;
REINDEX  vt0; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE CASE (((vt0.c0))<>((vt0.c0)))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) NOT BETWEEN ('w\nng') AND (vt0.c0)) END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 7ms;
UPDATE OR FAIL vt0 SET c0=0X18d713a8 WHERE ((((((((CAST(vt0.c0 AS NUMERIC))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(x'')))OR(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS INTEGER))); -- 1ms;
REINDEX  vt0; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL), (x''), ('0.9354868543459716'), (x''), ('452046302'); -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '57553'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1940879168); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 2ms;
REINDEX; -- 1ms;
ANALYZE vt0; -- 1ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=0.434187639548115 WHERE 0.8301729820460705; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'42f6') WHERE ((vt0.c0)>(ABS('nrFF'))); -- 1ms;
PRAGMA auto_vacuum; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (''), (NULL), (x''); -- 4ms;
INSERT OR FAIL INTO vt0 VALUES (0.5056665873495239), ('1061109713'), (1.004697413E9); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=('鸿c(e/<n귞Z') WHERE vt0.c0; -- 1ms;
UPDATE OR REPLACE vt0 SET (c0, c0)=(NULL, '륦k>I4(~R'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('1625914825'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=1.625914825E9 WHERE 0.7594628697421247 COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='*_ h₋.~	G'; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA journal_mode; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0Xffffffffa7beb617), ('%H>睅0NEWl'), ('452046302'), ('-189416645'), (0x398934ed); -- 0ms;
PRAGMA main.soft_heap_limit = 0; -- 0ms;
UPDATE vt0 SET c0='' WHERE 0Xffffffffa7beb617; -- 0ms;
PRAGMA main.cache_spill = -3730280859803559144; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
PRAGMA incremental_vacuum(-1983368593); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
PRAGMA temp.automatic_index = true; -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (0.7911932419063317); -- 0ms;
DROP TABLE vt0; -- 0ms;
DROP TABLE IF EXISTS rt0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('DdPp'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (NULL), (1755562484), ('8d#E,~^'), (NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34217'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 765296677);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0X3d10d103), (x''), ('1024512259'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
UPDATE vt0 SET (c0)=(0.9574002932471771); -- 2ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET c0=NULL; -- 1ms;
UPDATE vt0 SET (c0, c0, c0)=(0.7911932419063317, x'', x'') WHERE ((((CAST(vt0.c0 AS NUMERIC))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0)); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN TOTAL(vt0.c0) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, ((((AVG(vt0.c0))AND(((vt0.c0)AND(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))), ((((((vt0.c0)|(vt0.c0)))OR((- (vt0.c0)))))OR((NOT (vt0.c0)))) FROM vt0 WHERE (((('Ꭸo\r峱C')) NOT BETWEEN ((INSTR('265835421', '-1233363827'))) AND (((('')LIKE(NULL)))))) LIMIT 1526181736; -- 0ms;
SELECT ALL ((0.2192298948685958) NOT BETWEEN (vt0.c0) AND ('')) COLLATE RTRIM, (((~ (vt0.c0)))OR((vt0.c0 IN ()))), ABS(DISTINCT ((vt0.c0) NOT BETWEEN ('[-,].₋') AND (vt0.c0))) FROM vt0 WHERE (((LIKELIHOOD(x'', 0.3566556449360291)) IS FALSE)); -- 0ms;
SELECT DISTINCT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c0)) FROM vt0 WHERE ((((0.6237437747343626) NOT BETWEEN (x'') AND (NULL)) IN ())) LIMIT -1081438384 OFFSET 1785718292; -- 0ms;
SELECT ALL '' FROM vt0 WHERE (CASE '-1660580619'  WHEN x'' THEN 0.37409624448537915 ELSE '	)*Q7nr''*' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN vt0.c0 WHEN ABS(vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)&(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END, (+ ((+ (vt0.c0)))), (+ ((~ (vt0.c0)))) FROM vt0 WHERE (((NULL COLLATE RTRIM)GLOB(((((-2026377478)OR('da')))AND(NULL))))); -- 1ms;
SELECT ALL (CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END IN ()) FROM vt0; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((x'') ISNULL))), vt0.c0, (((vt0.c0 IN ())) BETWEEN (MAX(vt0.c0)) AND (0.03755434320626583)) FROM vt0 WHERE (CASE ((x'')OR('o[j壋Px%B'))  WHEN ((x'8d47')%(NULL)) THEN CASE WHEN 0.4990549958894799 THEN '2066421032' WHEN -256087699 THEN 0.021552474746384775 WHEN 0.8171806809908486 THEN 0.30292902651192055 WHEN x'949fd052' THEN x'' WHEN 0.9257087863100356 THEN -256087699 ELSE NULL END WHEN ((((((((x'')OR(NULL)))OR(NULL)))OR(x'')))AND(0x6a6fe614)) THEN ((((0.02824863889936713)AND(x'24f7ddbf')))AND(0.49050315190019567)) WHEN (0.3938876132287963 IN ()) THEN CASE WHEN 0X3f3f3fd1 THEN NULL ELSE 'shuP㕝~ঞs奝' END END); -- 0ms;
SELECT ALL (vt0.c0 COLLATE BINARY IN ()) FROM vt0; -- 0ms;
SELECT ALL (((('-1536291788' COLLATE BINARY)OR(((((vt0.c0)AND(x'22ac')))AND(vt0.c0)))))OR(LOWER(vt0.c0))), ((((vt0.c0)OR(NULL)))OR(((vt0.c0)/(vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)+(vt0.c0))))) FROM vt0 WHERE ((((((x'')) NOT BETWEEN (('')) AND ((0.7911932419063317))))GLOB(((((NULL)AND(477215652)))OR(-229375672))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE))IS(vt0.c0)), ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN TOTAL(vt0.c0) THEN ((vt0.c0)/(vt0.c0)) END, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<<((vt0.c0 IN ()))), CAST((((vt0.c0))==((vt0.c0))) AS INTEGER) FROM vt0 WHERE (CASE WHEN CAST(NULL AS REAL) THEN ((x'')/(NULL)) WHEN (('zY''JEim3')=(x'0a2b')) THEN (NULL IN ('/y')) WHEN CASE NULL  WHEN '' THEN 89097015 WHEN NULL THEN 0xfffffffff4b5bb3b WHEN 0.509338956386176 THEN x'de8c' END THEN ((NULL)*(x'cb44')) END); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) IS FALSE), GROUP_CONCAT(((vt0.c0)*(vt0.c0))), CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)>(vt0.c0)) WHEN SUM(vt0.c0) THEN ((vt0.c0)/(vt0.c0)) WHEN TRIM('-1059797734') THEN ((vt0.c0)|(vt0.c0)) ELSE (vt0.c0 IN ()) END FROM vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE)&(vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT COUNT(GROUP_CONCAT((NOT (NULL)))) FROM vt0 WHERE ((+ ((x'' IN (0Xffffffffe6925587)))));SELECT ALL ((((CASE WHEN 0x61134fd7 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) NOT NULL))))AND((NOT (vt0.c0)))), ((((vt0.c0)|(x'ce4a'))) NOTNULL), TOTAL((+ (vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((AVG(vt0.c0))LIKE(CASE WHEN vt0.c0 THEN 0.3470987410160109 END)) FROM vt0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT -1.833235027E9 COLLATE BINARY), (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))>((vt0.c0 COLLATE NOCASE))), CASE ((vt0.c0)*(vt0.c0))  WHEN ((vt0.c0)<=(vt0.c0)) THEN NULL ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0; -- 1ms;
SELECT DISTINCT CASE RTRIM(vt0.c0)  WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN NULLIF(vt0.c0, vt0.c0) THEN vt0.c0 WHEN 0X16fd06b9 THEN TOTAL(vt0.c0) ELSE CAST(vt0.c0 AS NUMERIC) END, ((SUM(vt0.c0))IS NOT((((89097015, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), RANK() OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), vt0.c0, ABS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0)), 0Xffffffff82888848, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))<((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM))) ASC; -- 0ms;
SELECT UNICODE(x'4c3e'), CAST(((vt0.c0)+(vt0.c0)) AS BLOB), CASE vt0.c0  WHEN ABS(vt0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0; -- 0ms;
SELECT (((x'' IN (NULL)))OR(((vt0.c0) IS FALSE))) FROM vt0 WHERE (0.32184197111701207); -- 0ms;
SELECT DISTINCT LIKELIHOOD(((vt0.c0)<>(vt0.c0)), 0.17173641408126505) FROM vt0; -- 0ms;
SELECT DISTINCT ((TIME(vt0.c0, vt0.c0, NULL)) ISNULL) FROM vt0; -- 0ms;
SELECT ALL ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM vt0 WHERE (((-1475651235) NOT NULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))!=(((vt0.c0)GLOB(vt0.c0)))), (((vt0.c0) IS FALSE) IN ()), ((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0) IS TRUE))))OR((((vt0.c0))!=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ((CAST(vt0.c0 AS REAL)) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (vt0.c0)) FROM vt0 WHERE ('0.5056665873495239'); -- 0ms;
SELECT ALL (((CAST(vt0.c0 AS TEXT)))<((((((((((vt0.c0)AND(vt0.c0)))OR(265835421)))OR(vt0.c0)))AND(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC), ((vt0.c0 COLLATE RTRIM)&((- (vt0.c0)))) FROM vt0 GROUP BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL), vt0.c0, SQLITE_COMPILEOPTION_USED(CASE vt0.c0  WHEN 0.9558758577449203 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END); -- 1ms;
SELECT DISTINCT (((((vt0.c0) IS FALSE), (~ (vt0.c0)), vt0.c0))>((((vt0.c0)||(0xfffffffff2540148)), CAST(vt0.c0 AS INTEGER), (((vt0.c0, 0X4aa837dc, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL)))))) FROM vt0 WHERE ('6(zIA&2') GROUP BY (CASE WHEN vt0.c0 THEN x'27e005f3' END IN (((vt0.c0)/(vt0.c0)), vt0.c0 COLLATE RTRIM)) LIMIT 727166073 OFFSET -1440976747; -- 0ms;
SELECT ALL CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) FROM vt0; -- 0ms;
SELECT x'' FROM vt0 GROUP BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL) HAVING LIKELIHOOD((vt0.c0 IN ()), 0.8037395775237537); -- 0ms;
SELECT CAST((vt0.c0 IN ()) AS TEXT) FROM vt0 WHERE (CAST(4.16748456E8 AS INTEGER)); -- 0ms;
SELECT ((vt0.c0 IN (vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))), (MIN(vt0.c0) IN (vt0.c0 COLLATE BINARY)), (- (((vt0.c0)||(vt0.c0)))) FROM vt0 WHERE (('-555143332' IN (x'50af')) COLLATE NOCASE); -- 0ms;
SELECT TOTAL(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) OVER ( PARTITION BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)-(vt0.c0)) ELSE 0.8734676931350372 END ROWS ((vt0.c0) NOT NULL) PRECEDING EXCLUDE GROUP) FROM vt0 WHERE (((((((((0.39017771036291127)AND(4.77215652E8)))OR(x'')))AND(((0.8171806809908486)>(NULL)))))AND(CAST(0.509338956386176 AS NUMERIC)))); -- 0ms;
SELECT GROUP_CONCAT((+ (vt0.c0))) OVER (), vt0.c0, ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0)/('hL\_Wjj')))))OR(((vt0.c0)/(vt0.c0)))) FROM vt0 WHERE (((('zA')) BETWEEN ((CAST(0.6426698287515163 AS NUMERIC))) AND ((((0.4052038122989706) IS TRUE))))); -- 0ms;
SELECT RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (+ (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((((NULL)/(0x27aeef33)))/(CAST(NULL AS BLOB)))); -- 0ms;
SELECT NULL COLLATE BINARY FROM vt0 WHERE (CAST((('-917080139')%(0.6265051740852516)) AS BLOB)); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)LIKE(NULL)) THEN ((vt0.c0)>>(vt0.c0)) WHEN vt0.c0 THEN LIKE(vt0.c0, vt0.c0) WHEN '421902694' COLLATE NOCASE THEN vt0.c0 END FROM vt0; -- 0ms;
SELECT CAST((vt0.c0 IN ()) AS TEXT), (~ (((vt0.c0) NOT NULL))), ((((((((vt0.c0 COLLATE BINARY)AND(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0)))OR(UPPER(vt0.c0))))AND((((vt0.c0, vt0.c0, 0.8973681535270526)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0; -- 1ms;
SELECT LTRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), (((((vt0.c0))=((vt0.c0))))IS(COUNT(vt0.c0))), ((((x'')==(vt0.c0)))-(CAST(vt0.c0 AS INTEGER))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((((vt0.c0, vt0.c0, vt0.c0, 'o[j壋Px%B', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AS REAL), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB), (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT 0.478854511232796 FROM vt0 GROUP BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN (NOT (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6919732430194044) WHEN ((0.4842141650258388) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, CAST(HEX(vt0.c0) AS BLOB), vt0.c0; -- 0ms;
SELECT ALL ((vt0.c0 COLLATE BINARY) BETWEEN (NULL) AND ((vt0.c0 IN ()))) FROM vt0 WHERE (((0Xffffffffc95677b5) NOT BETWEEN (0.9953973098036228) AND (0.07917376250934527)) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT DISTINCT LIKELY(vt0.c0 COLLATE BINARY) FROM vt0 WHERE (((CAST(x'' AS REAL))==(0.969105857534226 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT AVG((+ (-1.081438384E9))) OVER () FROM vt0; -- 1ms;
SELECT ALL LAG(HEX(DISTINCT ((vt0.c0)&(vt0.c0))), ((((vt0.c0) IS TRUE))>=(LIKELY(vt0.c0))), ((((vt0.c0)==(vt0.c0))) NOT NULL)) OVER () FROM vt0 WHERE (((((((((CAST('	0' AS NUMERIC))AND(LIKELY('0.30292902651192055'))))OR((- ('-1527499993')))))OR(((((((((102988973)OR(x'')))AND(x'')))AND(385681081)))AND(x'')))))OR(NULL))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0, vt0.c0)))GLOB(((NULL)/(vt0.c0)))) FROM vt0 GROUP BY ((((((((((vt0.c0) IS TRUE))AND((NOT (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN 0.434187639548115 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) LIMIT -1075501482 OFFSET -1265779348; -- 0ms;
SELECT TRIM(AVG(vt0.c0), (((vt0.c0))>=((vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)|(vt0.c0)) COLLATE BINARY FROM vt0 WHERE ((- ((((('1266552460')AND(0.33658922183572304)))OR(NULL))))) GROUP BY vt0.c0, (~ (vt0.c0)), ((vt0.c0) NOT BETWEEN (0.318100727288649) AND (vt0.c0)) COLLATE RTRIM, (NOT ('385681081')), (~ ((((vt0.c0))>=((vt0.c0))))); -- 0ms;
SELECT COUNT(load_extension(vt0.c0)), (+ (CAST(vt0.c0 AS REAL))), COUNT(*) OVER () FROM vt0;SELECT DISTINCT CASE (vt0.c0 IN ())  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 ELSE ((((vt0.c0)AND(0X398934ed)))OR(vt0.c0)) END FROM vt0 GROUP BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) HAVING (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((x'9f56')-(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0)) FROM vt0 WHERE ((((+ (NULL))) BETWEEN ((('S3F轐q[75') NOTNULL)) AND (CAST(x'' AS INTEGER)))); -- 0ms;
SELECT DISTINCT (~ (ABS(vt0.c0))), (((((((((((NULL)OR(vt0.c0)))OR(0.6789104778883943)))OR(NULL)))OR(vt0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))), COUNT(((vt0.c0) ISNULL)) FROM vt0; -- 1ms;
SELECT DISTINCT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 GROUP BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((- (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) HAVING ((CAST(vt0.c0 AS INTEGER))>(((vt0.c0) BETWEEN (vt0.c0) AND (0.1497552609731978)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)LIKE(vt0.c0))) IS FALSE) FROM vt0 ORDER BY (((NOT (vt0.c0))) IS FALSE) ASC, ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ASC  NULLS LAST; -- 0ms;
SELECT SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS TEXT)) FROM vt0 NOT INDEXED; -- 0ms;
SELECT ALL ((TOTAL(NULL)) ISNULL) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)AND(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-627028176' END END FROM vt0 WHERE (CAST(NULL AS NUMERIC)); -- 0ms;
SELECT ALL (MIN(vt0.c0) IN (((x'9f90') ISNULL), vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (IFNULL(DISTINCT NULL, 0.11807025654570935) COLLATE BINARY) LIMIT 905237200 OFFSET -1767538967; -- 0ms;
SELECT (- (vt0.c0)) FROM vt0 WHERE (((('5L' IN ())) NOT BETWEEN (((((762125920)AND('477215652')))AND(''))) AND (('-1660580619' IN ())))); -- 0ms;
SELECT (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), CAST(((vt0.c0)>>(vt0.c0)) AS INTEGER), CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) WHEN 't9IF4㎴Xg' COLLATE RTRIM THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0) ISNULL) END FROM vt0 LIMIT -1440976747; -- 0ms;
SELECT CASE WHEN ((vt0.c0)|(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS NUMERIC) END FROM vt0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT (('')IS NOT(vt0.c0)), 0.824206704713263), CAST((NOT (vt0.c0)) AS TEXT), UPPER(DISTINCT CAST('-426617465' AS INTEGER)) FROM vt0 WHERE (((CASE WHEN 'J' THEN x'7bca02ae' WHEN 'OGhX7#%' THEN 'RnsSc' WHEN NULL THEN x'' END)/(CASE x''  WHEN 0.9257087863100356 THEN '(xGf|A+鏸' WHEN -1475651235 THEN NULL WHEN x'' THEN 0x7b5ba4ac ELSE 0.6789104778883943 END))); -- 0ms;
SELECT DISTINCT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<(((~ (vt0.c0))))) FROM vt0 GROUP BY ((((vt0.c0)-(vt0.c0))) ISNULL), ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((NOT (vt0.c0))) AND (vt0.c0)), (((- (0.06501444786628374)))IS NOT(((vt0.c0)+(vt0.c0)))); -- 1ms;
SELECT DISTINCT ((((x'')OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((x'')>(vt0.c0)))) FROM vt0 WHERE ((- ((- (x'17c7'))))); -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE (NULL) ORDER BY ((((((vt0.c0)!=(vt0.c0)))AND(0.07917376250934527 COLLATE BINARY)))AND((NOT (vt0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM, '1628655575', TRIM((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.2069229925105991) FROM vt0; -- 0ms;
SELECT DISTINCT '-67947596', ((0Xffffffff856c35b7) ISNULL), ((MIN(vt0.c0)) NOT NULL) FROM vt0; -- 0ms;
SELECT ALL AVG(' zi') OVER (), ((AVG(0.021310776540613086)) IS TRUE), SUM((vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) ISNULL))))AND(NULL)) FROM vt0 ORDER BY ((TYPEOF(DISTINCT vt0.c0))|((('~') IS TRUE))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((((((((vt0.c0))=((1679880021))))AND((+ (vt0.c0)))))OR(((vt0.c0)||(vt0.c0)))))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), '28298099', ((((TRIM(DISTINCT vt0.c0, vt0.c0))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT NULL))) FROM vt0 WHERE (((((CASE NULL  WHEN 'xF' THEN NULL WHEN NULL THEN 0X1c2e4be3 WHEN 0x337f1f5c THEN 0.11336756475806065 ELSE '	0' END)AND(((-1983368593)LIKE(-5.184102E7)))))OR(((NULL) NOT BETWEEN ('<yH*DT~') AND (NULL))))); -- 0ms;
SELECT ALL '⋍u&v_P^', vt0.c0, (((vt0.c0)) BETWEEN ((MAX(vt0.c0))) AND ((vt0.c0 COLLATE BINARY))) FROM vt0 LIMIT 2051381428 OFFSET 2031503467; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (CAST('1755562484' AS BLOB)) LIMIT -1440976747 OFFSET -1511067883; -- 0ms;
SELECT NULLIF(DISTINCT (('_#m')!=(vt0.c0)), vt0.c0) FROM vt0 WHERE (CASE WHEN json_array(NULL, -1110431784, 0.15841433437692132, '0.021552474746384775') THEN CASE WHEN NULL THEN 0.878437156253719 END END); -- 0ms;
SELECT DISTINCT (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, CAST(CAST(vt0.c0 AS BLOB) AS REAL) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(CASE x'8a66'  WHEN 0.8282714655769515 THEN '' ELSE NULL END)); -- 0ms;
SELECT COUNT(*) FROM vt0 WHERE (TRIM((+ (x'')), CASE WHEN x'' THEN '' WHEN NULL THEN x'4908' WHEN x'' THEN 0.5440499906404829 END)); -- 0ms;
SELECT (('1061109713')OR(((vt0.c0) ISNULL))) FROM vt0 WHERE ((('1526181736') BETWEEN (x'5edf') AND (0.3454579394529963)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END THEN (((vt0.c0))>=((NULL))) WHEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 END FROM vt0 WHERE ((((((((((0xffffffffb0a3db4c IN ()))OR(((('-1099554099')) NOT BETWEEN (('-1536291788')) AND (('1004697413'))))))OR((102988973 IN ()))))AND((('-555143332') BETWEEN (x'') AND ('2')))))AND(CAST('-1344014791' AS INTEGER)))); -- 0ms;
SELECT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0 WHERE (((CAST(x'' AS TEXT))%(CASE 1.042372811E9  WHEN '452046302' THEN NULL WHEN '' THEN 2.031503467E9 WHEN '-1734628910' THEN '*B马dn' END))); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS REAL) FROM vt0; -- 0ms;
SELECT ALL (~ (LIKE('gnow7', vt0.c0, '1'))) FROM vt0 WHERE (((CAST('-2104981432' AS BLOB))>>((- (x''))))) ORDER BY 'LOR\9hK[c'  NULLS FIRST, CASE (((vt0.c0, vt0.c0, 1.625914825E9)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (- (vt0.c0)) END  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(-2.29375672E8 AS NUMERIC) COLLATE BINARY FROM vt0 WHERE (LENGTH(((0.9343284081257218)*(x'')))); -- 0ms;
SELECT ((0Xffffffff82888848)>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), 0.4052038122989706, 0.5349694180510004 COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)&(ABS(vt0.c0))) FROM vt0 WHERE (json_quote((('1136409311') NOT BETWEEN (x'') AND (2.082773612E9)))); -- 0ms;
SELECT CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt0 WHERE (0x34c10a85); -- 0ms;
SELECT DISTINCT (((((vt0.c0) IS TRUE)))<=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((((vt0.c0 IN ()))AND(AVG(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(NULL)), NTH_VALUE((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()), (('885066373')||(CAST(vt0.c0 AS INTEGER)))) OVER (), AVG((((NULL, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) OVER () FROM vt0;SELECT DISTINCT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'v!㌧%P,P*' THEN vt0.c0 END IN ()) FROM vt0 WHERE (((CAST(0.8034649972304515 AS BLOB))AND(((((x'')OR(x'')))OR(NULL))))); -- 0ms;
SELECT ((COUNT(vt0.c0))&((vt0.c0 IN (vt0.c0)))) FROM vt0 GROUP BY ((vt0.c0) BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)GLOB(vt0.c0)))); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ((NOT (vt0.c0)))), TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN -2090383330 END), (NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0)) FROM vt0 LIMIT -1398563265 OFFSET -1268713189; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c0)))==((vt0.c0 IN (vt0.c0)))), (- ((vt0.c0 IN (vt0.c0)))), ((((vt0.c0)GLOB(vt0.c0))) ISNULL) FROM vt0 WHERE (TRIM(DISTINCT ((NULL)IS(x'ba36')), ((7.6212592E8)>(NULL)))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) IS FALSE) FROM vt0 WHERE (((((('㫟iQ!-k\N'))<=((NULL))))/(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT NTILE(x'') OVER () FROM vt0;SELECT DISTINCT (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL LTRIM(((vt0.c0) BETWEEN (0.4206386473187166) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT CAST((vt0.c0 IN ()) AS NUMERIC) FROM vt0 LIMIT 1033748500 OFFSET 1622563471; -- 0ms;
SELECT ALL LOWER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c0))<=((vt0.c0))) END FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 LIMIT -680128409; -- 0ms;
SELECT ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))), MAX(vt0.c0), vt0.c0))!=((vt0.c0, CAST(0X5af7af68 AS TEXT), vt0.c0))), ((vt0.c0 COLLATE NOCASE)>>(vt0.c0)), (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL SUM(((vt0.c0) NOTNULL)) OVER () FROM vt0; -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, 1.755562484E9))) COLLATE BINARY FROM vt0 WHERE (((NULLIF('0.1497552609731978', '1e500'))GLOB(('<)&~iz' IN (NULL, NULL))))); -- 0ms;
SELECT DISTINCT load_extension(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), vt0.c0), (((CAST(vt0.c0 AS TEXT), x'', CAST(vt0.c0 AS INTEGER)))<((CAST(vt0.c0 AS NUMERIC), vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), CAST(((vt0.c0)-(vt0.c0)) AS INTEGER) FROM vt0 WHERE (x'fb885453'); -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(INSTR(vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(NULL) FROM vt0 WHERE (json_insert((~ ('762125920')), (+ (0x1751dff7)), (0x65e14f19 IN ())));SELECT ALL (vt0.c0 IN (x'', vt0.c0)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<(vt0.c0)))>(((vt0.c0)+(vt0.c0)))), CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE RTRIM WHEN (((('333821386')AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)-(8.63969116E8)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN MIN(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c0)OR('NRFF')))OR(0.6556843386048247)) THEN TOTAL_CHANGES() END, (('-286922080')>(CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE ((NOT (((NULL)AND(0Xffffffff9fb7d5f2))))) ORDER BY ((((((NULL)AND(0.6307143790221779)))AND(vt0.c0)))IS NOT(TRIM(DISTINCT vt0.c0, vt0.c0))) DESC  NULLS FIRST, (+ (vt0.c0 COLLATE RTRIM))  NULLS LAST, (((((((vt0.c0))>=((vt0.c0))))OR((NOT (0.06501444786628374)))))OR((+ (vt0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt0.c0)AND(vt0.c0)) COLLATE BINARY, (((((vt0.c0))>=((vt0.c0)))) IS TRUE), ((((vt0.c0, vt0.c0, 'BX'))<((vt0.c0, vt0.c0, vt0.c0))) IN ()) FROM vt0 WHERE (CAST((+ (0.878437156253719)) AS TEXT)); -- 0ms;
SELECT DISTINCT (((+ (vt0.c0)))LIKE((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT NULLIF(DISTINCT (+ (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE 0.33292075607942706 END) FROM vt0 ORDER BY (- (((vt0.c0)*(vt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT NULL, (+ (0.0014382214491139855)), COUNT(*) FILTER(WHERE CAST(((vt0.c0) ISNULL) AS NUMERIC)) OVER () FROM vt0 GROUP BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), NULLIF(DISTINCT (vt0.c0 IN ()), CAST(vt0.c0 AS TEXT)), (((- (vt0.c0)))OR(vt0.c0 COLLATE BINARY)), CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) ELSE (NOT (vt0.c0)) END, (~ ((vt0.c0 IN ()))) HAVING ((0.9922805263962886) IS TRUE); -- 0ms;
SELECT ALL CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC), CASE (vt0.c0 IN (vt0.c0))  WHEN TOTAL(vt0.c0) THEN x'' ELSE vt0.c0 END, CAST(((0.45176088838644457) NOT BETWEEN (NULL) AND (vt0.c0)) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT TIME(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>=(vt0.c0)), MIN(vt0.c0), ((vt0.c0) NOT NULL), ((vt0.c0)LIKE(vt0.c0))), ((AVG('1622563471'))<>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))))), (((CASE WHEN vt0.c0 THEN vt0.c0 END))==((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END))) FROM vt0 GROUP BY CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC) HAVING (((((((vt0.c0))<=((vt0.c0))))OR(0.3185737630944768)))OR(((vt0.c0)=(NULL)))); -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)|(vt0.c0)))) FROM vt0 LIMIT 391241719; -- 0ms;
SELECT DISTINCT ((((vt0.c0)||(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((- (vt0.c0)))) FROM vt0 WHERE (CAST(((x'')|(0xffffffffbe7622cd)) AS NUMERIC)) ORDER BY ((((((((CAST('0)u5Du,' AS BLOB))AND(CAST(vt0.c0 AS NUMERIC))))AND(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) IS TRUE))), ((-821626801)IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (NOT (((vt0.c0)<(vt0.c0)))) ASC; -- 0ms;
SELECT ALL (((((vt0.c0 IN ()))AND(NULL)))OR(CAST(vt0.c0 AS TEXT))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (('㫟iq!-k\n'))), CAST((NOT (vt0.c0)) AS TEXT), NULL FROM vt0 WHERE (((((((('-1526046732'))!=(('109012059'))))OR(((0.07084067418427087) ISNULL))))AND(((((0X32200a85)OR(x'a347')))OR('0.9257087863100356'))))); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 END, LAST_VALUE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) OVER ( ORDER BY vt0.c0 DESC, ((vt0.c0) NOTNULL) ASC), ((vt0.c0 IN (vt0.c0)) IN ()), CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) END, CAST(vt0.c0 COLLATE BINARY AS TEXT) FROM vt0 GROUP BY CAST((NOT (vt0.c0)) AS INTEGER) HAVING (((((((((vt0.c0)AND(x'7711')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ((((vt0.c0))>=((vt0.c0))))); -- 0ms;
SELECT ALL AVG((~ (vt0.c0))) OVER (), (- ((- (vt0.c0)))), vt0.c0, (((vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'9c8d' THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE RTRIM))<=((((vt0.c0)*(0.5521169538606794)), vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))), LIKELY(DISTINCT ((vt0.c0) ISNULL)) FROM vt0; -- 0ms;
SELECT LIKELY(DISTINCT vt0.c0) COLLATE RTRIM, NTILE(((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())) OVER (), CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0)==('F9')) END FROM vt0;SELECT ALL AVG(((0.14090932976489112)&(x''))) OVER (), CAST(((vt0.c0)|(vt0.c0)) AS BLOB), CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (~ (NULL)) END FROM vt0 WHERE (((((NULL) NOT BETWEEN (NULL) AND (x'')))>((((('586823309')OR(x'')))OR(-8.21626801E8))))); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((vt0.c0)>(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (((NOT (NULL)))IS(0X78b93f8)) FROM vt0 WHERE ((- ('896390323')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (- ((vt0.c0 IN ()))) FROM vt0 ORDER BY UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC; -- 0ms;
SELECT DISTINCT (- ((vt0.c0 IN ()))) FROM vt0 WHERE ((NOT ((((1136409311, '', x'', 0x5a763e74, '')) NOT BETWEEN ((x'', x'', 0.8876261861024354, '-1419605694', NULL)) AND ((0.03937995422860763, NULL, '1751962137', 0Xffffffffa6b3735b, 0.6886964692273323)))))); -- 1ms;
SELECT DISTINCT ABS(DATE(vt0.c0, vt0.c0, vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((0x1b0f90ad)AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) ISNULL))))OR((+ (vt0.c0)))))AND(((vt0.c0) IS TRUE))), ((vt0.c0)+(vt0.c0)) COLLATE NOCASE, UNLIKELY(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (vt0.c0)) COLLATE RTRIM FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (IFNULL('-555143332', vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END), ((vt0.c0 IN ()) IN ()), (((('-2023957760') ISNULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (LIKELIHOOD('765296677', 0.9566121537478356))) FROM vt0 WHERE ((CAST(-1789514254 AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT 1 FROM vt0 GROUP BY ((((vt0.c0)OR((vt0.c0 IN ()))))OR((~ (vt0.c0)))) HAVING ((x'')==(vt0.c0)); -- 4ms;
SELECT ALL CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) FROM vt0 WHERE ((((((x'fe33e75e') BETWEEN (NULL) AND (NULL))))>((((x'')<<(NULL)))))); -- 0ms;
SELECT ALL vt0.c0, vt0.c0, (vt0.c0 IN ()) FROM vt0 WHERE ((((NULL IN ()))%(((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), CASE ((vt0.c0)-(vt0.c0))  WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (0.1135324447011603) AND (vt0.c0)) WHEN (((vt0.c0))==((vt0.c0))) THEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE COUNT(vt0.c0) END, CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN (vt0.c0 IN ()) END, COUNT(*), ((json(vt0.c0))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN 0.9490295704836103 WHEN vt0.c0 THEN vt0.c0 END)>>((0.5827735691434979 IN ()))), ((vt0.c0) NOTNULL) COLLATE BINARY, CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) NOT NULL) END FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN x'16f035c5' THEN vt0.c0 END) FILTER(WHERE ((((vt0.c0)%(vt0.c0))) IS TRUE)) OVER (), CAST(MAX(vt0.c0) AS TEXT), ((((0.6628918641328394)AND(vt0.c0)))GLOB(((vt0.c0)IS NOT(vt0.c0)))) FROM vt0 WHERE ((~ (0.6265051740852516)) COLLATE BINARY); -- 1ms;
SELECT ALL ((vt0.c0)&(vt0.c0)) COLLATE BINARY FROM vt0 WHERE ((NOT (((NULL)AND(-1.526046732E9))))); -- 0ms;
SELECT ((((vt0.c0) NOT NULL)) NOTNULL) FROM vt0 WHERE (CAST('\nX' AS NUMERIC)); -- 0ms;
SELECT ALL (((((NULL)AND(vt0.c0)))OR('')) IN (((x'')-(vt0.c0)))), 0.33658922183572304, ((vt0.c0 COLLATE BINARY)||((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)|(vt0.c0)) COLLATE BINARY FROM vt0 WHERE (TYPEOF(DISTINCT CASE 'R'  WHEN x'' THEN '1136409311' END)) GROUP BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM, (- (vt0.c0)), TYPEOF(DISTINCT ((vt0.c0) ISNULL)), TIME((- (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(0.5814835251021448)), LIKELIHOOD(DISTINCT vt0.c0, 0.07941431065282589)); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((('0.02824863889936713')OR(0.2782487000313919)) COLLATE NOCASE) GROUP BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((HEX('-294315701')))) HAVING ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS TEXT) FROM vt0 WHERE ((- (0.9023618609281753)) COLLATE NOCASE) GROUP BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))!=(0.0014382214491139855)), ((CAST(vt0.c0 AS INTEGER)) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((~ (vt0.c0)))), CASE WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffff987d60f1))) ELSE NULLIF(vt0.c0, vt0.c0) END LIMIT 1446038071; -- 1ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE))|(((vt0.c0) NOTNULL))) FROM vt0 WHERE (((('-1492845929' IN ())) NOT BETWEEN ((x'' IN ())) AND (x'acd6'))) ORDER BY ((vt0.c0)>>(vt0.c0)) COLLATE BINARY  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt0.c0)<(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(x'a745d816')))) FROM vt0; -- 0ms;
SELECT DISTINCT NTILE(((((vt0.c0)IS NOT(vt0.c0)))LIKE(0.5827735691434979))) OVER ( ORDER BY vt0.c0  NULLS LAST, 0.7248477596750774 ASC  NULLS LAST RANGE  UNBOUNDED PRECEDING) FROM vt0 GROUP BY (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE) HAVING ((CAST(vt0.c0 AS TEXT))>=(ABS(vt0.c0))) LIMIT 74502012; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)&(vt0.c0))) OVER (), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE, ((NULL) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(vt0.c0)) AND (NULLIF(vt0.c0, vt0.c0))) FROM vt0 WHERE ((NOT (0.2710874465137203)) COLLATE NOCASE) GROUP BY CAST((+ (vt0.c0)) AS BLOB), CASE WHEN ((0.32017123521109303)-(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS BLOB) END, (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING CASE ((vt0.c0)*('-1536291788'))  WHEN (('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) END; -- 1ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (UNLIKELY(DISTINCT (((8.63969116E8, x'30c392a7', x'')) NOT BETWEEN ((0.11336756475806065, x'', '')) AND (('()', NULL, '752565160'))))) ORDER BY vt0.c0 ASC  NULLS LAST; -- 5ms;
SELECT DISTINCT (~ ((vt0.c0 IN ()))) FROM vt0 WHERE ((('-2090383330' COLLATE NOCASE)&((('Pu\rH')AND(x'0d96'))))); -- 0ms;
SELECT DISTINCT (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (vt0.c0)) FROM vt0; -- 1ms;
SELECT DISTINCT AVG(((vt0.c0)OR(vt0.c0))) FILTER(WHERE CAST((vt0.c0 IN ('2051381428')) AS BLOB)) OVER (), (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CAST(IFNULL(vt0.c0, vt0.c0) AS NUMERIC) FROM vt0 WHERE (CAST(NULL COLLATE NOCASE AS NUMERIC)) GROUP BY (vt0.c0 IN ()) HAVING (+ (COALESCE(DISTINCT vt0.c0, vt0.c0, 4.54004909E8, NULL))); -- 0ms;
SELECT '-1901575308' FROM vt0; -- 0ms;
SELECT DISTINCT (((((('-1398563265') NOTNULL))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) IS FALSE)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END FROM vt0; -- 0ms;
SELECT NULL FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)LIKE(vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT '1454221523' FROM vt0 WHERE ((('%gJtr')+('F9' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)*(vt0.c0))) IS TRUE) FROM vt0 WHERE (((NULL)>=('217417013')) COLLATE RTRIM); -- 0ms;
SELECT 0Xffffffffd57c97ec FROM vt0 WHERE ((((0.5167385211706277)*(NULL)) IN ())) LIMIT -878274202 OFFSET -1879840063; -- 0ms;
SELECT SUM(((vt0.c0)IS(vt0.c0))) FROM vt0 WHERE (((NULL IN (NULL)) IN ())); -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt0 WHERE (CASE WHEN ((NULL)<=(1.136409311E9)) THEN (('3,') ISNULL) ELSE ((((0.9873404862413312)OR(NULL)))OR(NULL)) END); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (GROUP_CONCAT(vt0.c0))), (NOT (vt0.c0 COLLATE BINARY)), LAG(0.6575240099978424, ((((vt0.c0)-(vt0.c0)))/(vt0.c0)), ((json_quote(vt0.c0)) ISNULL)) OVER () FROM vt0 WHERE ((+ ((NULL IN ())))) LIMIT -1233363827; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) FROM vt0; -- 1ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (LIKELY(vt0.c0))) FROM vt0 WHERE (((NULL) BETWEEN (0.6046224670746901) AND (81014171)) COLLATE NOCASE); -- 0ms;
SELECT ((((((((((vt0.c0)OR(0.9295671945406705)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (TYPEOF('1798828362')) AND (((vt0.c0)IS NOT(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) OVER (), CASE ((vt0.c0)-(vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) END, ((((vt0.c0) NOTNULL))>>(GROUP_CONCAT(vt0.c0))) FROM vt0 GROUP BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM, CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS REAL), ((json_type(vt0.c0)) BETWEEN ('0.3938876132287963' COLLATE RTRIM) AND (((vt0.c0)>(vt0.c0)))), vt0.c0, ((((((vt0.c0) IS TRUE))AND(TRIM(vt0.c0, vt0.c0))))OR((+ (vt0.c0)))) HAVING SUM(COUNT(vt0.c0 COLLATE NOCASE));SELECT ALL ((0.7161482923400379)/(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((vt0.c0)+(vt0.c0)) COLLATE RTRIM, (((vt0.c0)!=(vt0.c0)) IN ()) FROM vt0 GROUP BY ((((vt0.c0) NOT NULL)) NOT NULL), (((vt0.c0 IN (vt0.c0)))*(vt0.c0 COLLATE BINARY)), (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (CAST(vt0.c0 AS REAL))) HAVING (((vt0.c0)<(vt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT ((((0.2710874465137203)<<(vt0.c0)))||(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((NULL)-((x'add2' IN ())))); -- 0ms;
SELECT ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)IS NOT(vt0.c0)))) FROM vt0 WHERE (((CAST(0.5133065330432711 AS NUMERIC)) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN 0.4863277076608735 THEN vt0.c0 ELSE vt0.c0 END)AND(((((vt0.c0)AND(vt0.c0)))AND(NULL)))))AND(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR(vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL))>>(LIKELY(DISTINCT vt0.c0))) FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))-(json(vt0.c0))) ASC, (((CAST(vt0.c0 AS REAL)))<=((vt0.c0 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END) AND (ABS(vt0.c0))) FROM vt0; -- 0ms;
SELECT ((ABS(vt0.c0)) NOT BETWEEN ('1859133777') AND (json_insert(vt0.c0, vt0.c0, vt0.c0))) FROM vt0 WHERE ((((1625914825 IN ())) NOT BETWEEN (((NULL) NOTNULL)) AND ((NULL IN ())))) LIMIT -357272112; -- 1ms;
SELECT ALL COUNT(((vt0.c0) IS TRUE) COLLATE NOCASE) OVER () FROM vt0; -- 0ms;
SELECT ((((((((('9a3jCmb8')OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT vt0.c0, CASE ((vt0.c0)-(vt0.c0))  WHEN (~ (vt0.c0)) THEN (+ (vt0.c0)) END, (- (((vt0.c0) ISNULL))) FROM vt0 GROUP BY ((NOT (vt0.c0)) IN ()) HAVING ''; -- 0ms;
SELECT ALL LAG((CAST(vt0.c0 AS NUMERIC) IN ()), TYPEOF(vt0.c0 COLLATE RTRIM), ((CASE x''  WHEN '_]5' THEN vt0.c0 END) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c0)OR(vt0.c0))))) OVER () FROM vt0 WHERE (((('cuDU(') BETWEEN (NULL) AND ('UQ-,!B')) IN ())); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, 0.7421642898209815)) BETWEEN ((COUNT(*), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), TRIM(vt0.c0, vt0.c0))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0, CAST(vt0.c0 AS BLOB)))) FROM vt0; -- 0ms;
SELECT ALL NULLIF(DISTINCT ((vt0.c0) IS TRUE), ((((vt0.c0)AND(NULL)))AND(vt0.c0))) FROM vt0 WHERE (((((NULL) IS TRUE)) NOT BETWEEN ('') AND (INSTR('-630854807', 'j<')))) GROUP BY ((('', vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ABS(vt0.c0), (+ (vt0.c0)))) AND ((((vt0.c0) ISNULL), vt0.c0 COLLATE NOCASE, (((vt0.c0))==((vt0.c0)))))), '1061109713', (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()); -- 0ms;
SELECT vt0.c0, CAST(((NULL)||(vt0.c0)) AS BLOB), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)/(vt0.c0)), ('GGuSFp^V' IN ()), ((0Xffffffffc8d95931)||(vt0.c0)))) AND ((COUNT(*), GLOB(vt0.c0, vt0.c0), ((vt0.c0) IS FALSE)))) FROM vt0; -- 1ms;
SELECT 'C' FROM vt0 WHERE (CASE WHEN ((x'fc028e0d')+(0.6878077095112123)) THEN JULIANDAY(0Xffffffffa4f43327, NULL, x'', x'', NULL) ELSE ((NULL) NOT BETWEEN ('') AND (x'')) END); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS INTEGER) THEN ((x'e54c') BETWEEN (vt0.c0) AND (vt0.c0)) END, (((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c0))))), CASE vt0.c0 COLLATE BINARY  WHEN LAST_INSERT_ROWID() THEN ((vt0.c0)LIKE(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) WHEN UNICODE('L') THEN vt0.c0 COLLATE BINARY END FROM vt0; -- 0ms;
SELECT x'' FROM vt0; -- 0ms;
SELECT DISTINCT COUNT((~ (vt0.c0))) OVER (), ((((vt0.c0)/(vt0.c0))) IS TRUE), vt0.c0, CASE WHEN (- (vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT NULL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT NULL) THEN load_extension(vt0.c0) END, ((LIKE(vt0.c0, vt0.c0, 'v')) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)<>(vt0.c0)))) FROM vt0; -- 1ms;
SELECT vt0.c0 COLLATE BINARY COLLATE BINARY, ((((vt0.c0)+(vt0.c0))) NOT NULL), ((vt0.c0)IS(vt0.c0)) COLLATE BINARY FROM vt0 GROUP BY ((vt0.c0 COLLATE RTRIM)<>(vt0.c0 COLLATE RTRIM)) HAVING (((vt0.c0)%(vt0.c0)) IN ((NOT (NULL)))); -- 0ms;
SELECT DISTINCT (((NULL))>=((((vt0.c0) ISNULL)))) FROM vt0 WHERE ((('945113505' COLLATE NOCASE)OR(load_extension('<)&~iz')))); -- 0ms;
SELECT ALL NULL COLLATE BINARY FROM vt0 GROUP BY 0x65e14f19 HAVING ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)&('1136409311'))));SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL COLLATE RTRIM) NOTNULL)) ORDER BY (~ (CAST(NULL AS NUMERIC)))  NULLS FIRST; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN (((('-1328951665')<=(vt0.c0)))) AND ((SUM(vt0.c0)))), ((((vt0.c0) ISNULL))GLOB(vt0.c0)), GROUP_CONCAT(((vt0.c0)AND(vt0.c0))) OVER ( ROWS BETWEEN  CURRENT ROW AND ((HEX(vt0.c0)) NOTNULL) FOLLOWING EXCLUDE CURRENT ROW) FROM vt0 ORDER BY ABS(TRIM(vt0.c0));SELECT DISTINCT ((x'')<(((vt0.c0)+(vt0.c0)))), CAST((NOT (vt0.c0)) AS INTEGER), LAG((~ (vt0.c0)), CASE WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'V<qcb#+nj' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.2431351268715899 WHEN 0Xffffffffbe7622cd THEN vt0.c0 WHEN 0.7560694136109395 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ()) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0))<((vt0.c0))) WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((3.91241719E8)) AND ((vt0.c0))) END, ((NULLIF(vt0.c0, vt0.c0))|(NULL))) OVER () FROM vt0; -- 0ms;
SELECT ALL json_insert(json_extract(vt0.c0, vt0.c0), ((vt0.c0)*(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), MAX(vt0.c0), TOTAL(vt0.c0)), ROW_NUMBER() OVER (), (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE NOCASE))<>((CAST(vt0.c0 AS REAL), LIKELY(vt0.c0), 1628655575))) FROM vt0 WHERE (((((NULL IN ())))>((((NULL) BETWEEN (0Xfffffffff723b895) AND ('')))))) GROUP BY CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL) HAVING (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM; -- 0ms;
SELECT ALL MIN(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE ((((('Y?䡮_')AND(x''))) NOT BETWEEN ((NULL IN ())) AND (((x'') IS TRUE)))); -- 0ms;
SELECT ALL (((vt0.c0)>=(vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 LIMIT -1431394519 OFFSET 1773209326; -- 0ms;
SELECT DISTINCT CASE WHEN (- (vt0.c0)) THEN GROUP_CONCAT(vt0.c0) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN COUNT(vt0.c0) WHEN load_extension(NULL) THEN NULL END FROM vt0 WHERE ((((x'f9fd')) NOT BETWEEN (('642867898')) AND ((NULL))) COLLATE BINARY);SELECT DISTINCT ((HEX(vt0.c0))<(AVG(vt0.c0))) FROM vt0 WHERE ((((('1234121555') IS TRUE)) ISNULL)) GROUP BY vt0.c0 HAVING vt0.c0; -- 0ms;
SELECT (CAST(-1225724074 AS NUMERIC) IN (vt0.c0)) FROM vt0 WHERE ((('UlzVSf' COLLATE RTRIM)|(((((-1614815479)AND(NULL)))AND(1086419211))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL) FROM vt0 WHERE ((NOT (CASE WHEN NULL THEN '0.9490295704836103' ELSE NULL END))) GROUP BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN ()))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) HAVING ((((vt0.c0)>(vt0.c0)))+((vt0.c0 IN (vt0.c0)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS INTEGER)), NULL, ((vt0.c0 COLLATE BINARY) IS TRUE), ((((((((CAST(vt0.c0 AS INTEGER))OR((NULL IN (vt0.c0)))))OR(LIKELY(-2.103888547E9))))AND('1517698676')))OR(json_quote(vt0.c0))), (((((696850995) NOTNULL)))=((vt0.c0))) FROM vt0 WHERE (-917080139); -- 0ms;
SELECT DISTINCT ((((x'') BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT x'' FROM vt0 GROUP BY (((((NULL) ISNULL), (vt0.c0 IN ()), (('') IS TRUE)))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), (- (((vt0.c0)OR(vt0.c0)))), ((NULL) IS TRUE); -- 0ms;
SELECT ALL AVG(MAX(((vt0.c0)>(vt0.c0)))) FROM vt0 WHERE (CAST((((1.252538332E9))<((NULL))) AS INTEGER));SELECT ((((vt0.c0) NOT NULL))=(((vt0.c0)>(vt0.c0)))), ((vt0.c0)/(vt0.c0)) COLLATE RTRIM, ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '458901936', vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0))) IN ()), load_extension((~ (vt0.c0)), ((vt0.c0) NOTNULL)), ((((vt0.c0)||(vt0.c0)))>>(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (((((x'')+(9.45113505E8))) NOT BETWEEN ((0.8228081991099682 IN (NULL, 'kYVI7'''))) AND (IFNULL(0X72173b22, 'nT')))); -- 0ms;
SELECT DISTINCT ((((vt0.c0))>((vt0.c0))) IN ()) FROM vt0 WHERE ((NOT ((('863969116')||(1216169148))))) GROUP BY vt0.c0; -- 0ms;
SELECT ALL CAST(CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END AS INTEGER) FROM vt0 WHERE (((((-1480673769) NOT BETWEEN (965293293) AND ('bs')))<>(((NULL)&(0.37840611078712516))))) ORDER BY (((vt0.c0 IN (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (x'' COLLATE BINARY)); -- 0ms;
SELECT ((-684268521)*((vt0.c0 IN ()))) FROM vt0 NOT INDEXED WHERE (((((-1324895473) NOT BETWEEN (-84167503) AND (NULL))) BETWEEN ((~ ('5'))) AND (((((0xffffffffeee5eaa0)OR('')))OR(''))))) GROUP BY NULL HAVING MIN(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))); -- 0ms;
SELECT COUNT(((vt0.c0)&(vt0.c0))) FILTER(WHERE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) OVER (), ((((vt0.c0) IS FALSE)) NOTNULL), ((vt0.c0 COLLATE NOCASE)<(TRIM(DISTINCT 'pM鄼5*W~R', vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT TIME(((vt0.c0)<<(vt0.c0)), ((vt0.c0)%(vt0.c0)), SQLITE_COMPILEOPTION_GET(vt0.c0)) FROM vt0; -- 0ms;
SELECT ((CAST(vt0.c0 AS TEXT))LIKE(((vt0.c0)*(0.9384275847178543)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.7197499651682783))) NOT BETWEEN (COUNT(vt0.c0)) AND (((vt0.c0)<(vt0.c0)))) FROM vt0 LIMIT -386454921 OFFSET 388877948; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC), NTILE(TYPEOF((vt0.c0 IN ()))) OVER (), MIN(NULL) FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST;SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN ()) FROM vt0 WHERE (((-2103888547 COLLATE NOCASE) NOTNULL)) LIMIT 369337506; -- 0ms;
SELECT (x'' IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (- (COUNT(vt0.c0))) FROM vt0 GROUP BY ((vt0.c0) ISNULL), ((0.6628918641328394) NOTNULL), ((((((((vt0.c0)AND(vt0.c0)))OR('Yt9Gf')))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 ORDER BY ((((UNICODE(vt0.c0))OR((NOT (vt0.c0)))))OR(TRIM(DISTINCT vt0.c0, vt0.c0))), ((((vt0.c0) ISNULL))<>('k|'))  NULLS LAST; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((CAST(vt0.c0 AS INTEGER)))) FROM vt0 WHERE (((((((x'') BETWEEN ('la') AND (0.7013826922685086)))OR((('832792298') IS FALSE))))OR(((((x'12c08cef')AND('\j0')))OR(0.15565335448704065))))); -- 0ms;
SELECT DISTINCT (('0.4842141650258388') NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM)) FROM vt0 GROUP BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))); -- 0ms;
SELECT LAG(CAST(0X7c9891ed AS NUMERIC), CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN (vt0.c0)) END, ((vt0.c0) IS FALSE)) OVER ( ORDER BY (((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM)), x'' COLLATE NOCASE DESC, (- ((vt0.c0 IN ())))), ((((vt0.c0) IS TRUE)) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ()))), CASE WHEN ((vt0.c0)>=(x'')) THEN NULL ELSE ((vt0.c0) NOT NULL) END FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) FROM vt0 WHERE ((((x'89ef')) BETWEEN ((((x'') NOTNULL))) AND ((CAST('' AS INTEGER))))) EXCEPT SELECT DISTINCT CUME_DIST() OVER ( ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN (~ (vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END  NULLS LAST) FROM vt0 ORDER BY NULL DESC, ((json_remove(vt0.c0, vt0.c0))AND(((x'33c17154') NOT BETWEEN (vt0.c0) AND (-2.026377478E9)))) DESC;SELECT CAST(AVG(vt0.c0) AS INTEGER), '109012059', (((CAST(vt0.c0 AS TEXT)))<>((CAST(vt0.c0 AS TEXT)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 ORDER BY ((((((((CAST('픿㔴' AS BLOB))AND((- (vt0.c0)))))AND(((vt0.c0)<<(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (~ (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(0.3938876132287963)))AND(vt0.c0)))OR(vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (('-573893856' IN (vt0.c0))) AND ((~ (vt0.c0)))), GROUP_CONCAT(((vt0.c0) ISNULL)), ((((AVG(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((((((- (4.72796131E8)))OR(((NULL) BETWEEN ('') AND ('-2084585642')))))AND(((x'') NOT NULL)))); -- 2ms;
SELECT DISTINCT CASE ((vt0.c0) NOT NULL)  WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE 0.0014382214491139855 COLLATE RTRIM END FROM vt0 WHERE (CAST(LIKELY(DISTINCT x'808f') AS INTEGER)) UNION SELECT DISTINCT ABS((((vt0.c0))>=((vt0.c0)))) FROM vt0 WHERE ((- (('' IN (NULL, 1595677243))))) GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT (((TOTAL(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE 0X599a264d  WHEN vt0.c0 THEN '{NaN}' END))<=((((vt0.c0)<>(vt0.c0)), (((vt0.c0))>=(('945113505'))), CAST(0.7711544152093037 AS BLOB), CAST(vt0.c0 AS TEXT), COUNT(vt0.c0)))) FROM vt0 WHERE (RTRIM(((0.7474568826885306)<(0.45485896878538346)))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)) BETWEEN ((1.136409311E9)) AND ((vt0.c0)))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), (((vt0.c0 IN (vt0.c0)))<>((+ (vt0.c0)))), ((vt0.c0)+(vt0.c0)) COLLATE RTRIM FROM vt0 GROUP BY (+ (x'85af')); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS INTEGER) FROM vt0 WHERE (((1560152478 COLLATE NOCASE) BETWEEN (CAST(1129697740 AS INTEGER)) AND (((NULL) NOT BETWEEN (0.9055086660983892) AND (0.8058697636888196))))); -- 1ms;
SELECT DISTINCT TOTAL((((173887896, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) OVER ( ORDER BY ((vt0.c0)IS NOT(CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, ((CAST(vt0.c0 AS TEXT))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT ((vt0.c0)+(vt0.c0)) COLLATE NOCASE COLLATE RTRIM, (CAST(vt0.c0 AS TEXT) IN ()), ((CAST(vt0.c0 AS NUMERIC))||(CAST(vt0.c0 AS TEXT))) FROM vt0; -- 0ms;
SELECT ALL (+ (((vt0.c0)IS(vt0.c0)))) FROM vt0 WHERE ((~ ('&' COLLATE NOCASE))); -- 0ms;
SELECT ALL COUNT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) OVER () FROM vt0 WHERE (((1978503471 COLLATE BINARY) IS FALSE)); -- 0ms;
SELECT DISTINCT NTH_VALUE(((('JQ')) NOT BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0))))), x'') OVER () FROM vt0;SELECT DISTINCT CAST((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC), CASE WHEN UNLIKELY(vt0.c0) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0)AND(vt0.c0)) THEN ((1995067240) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN MIN('*', vt0.c0, vt0.c0, vt0.c0) THEN IFNULL(vt0.c0, vt0.c0) WHEN (+ (vt0.c0)) THEN COUNT(x'74a1') WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)-(vt0.c0)) ELSE GLOB(vt0.c0, vt0.c0) END, ((((vt0.c0) ISNULL)) BETWEEN ((- (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(x'')))) FROM vt0 WHERE (CAST(CHAR(x'', NULL, NULL) AS BLOB)) LIMIT -1651249472 OFFSET 827931294; -- 0ms;
SELECT DISTINCT CASE WHEN AVG(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) ELSE ((vt0.c0)LIKE(vt0.c0)) END FROM vt0 WHERE (((((((NULL)>>(0.9217049072594928)))AND(('-680128409' IN ()))))AND((((x''))<=(('1805142667')))))); -- 0ms;
SELECT DISTINCT (((vt0.c0, NULL, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.6265051740852516)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM FROM vt0 WHERE (CAST((~ (x'')) AS REAL)); -- 0ms;
SELECT (vt0.c0 COLLATE NOCASE IN ()) FROM vt0 LIMIT 109012059; -- 1ms;
SELECT ALL HEX(DISTINCT vt0.c0) COLLATE BINARY, (~ (((vt0.c0)>(vt0.c0)))), ((((CAST(-436924570 AS REAL))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) NOT NULL))), ((NULL COLLATE NOCASE)GLOB(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), ((((vt0.c0 COLLATE BINARY)AND(x'7af2')))OR(UNLIKELY(vt0.c0))) FROM vt0 WHERE (RTRIM((('') NOT NULL))) LIMIT 965293293; -- 0ms;
SELECT MAX(((vt0.c0)IS NOT(vt0.c0))) FROM vt0 LIMIT 1208189687 OFFSET -1554915312; -- 0ms;
SELECT (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((- ('\r鸿' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CAST(MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0) AS TEXT) FROM vt0 WHERE ((- ((((x''))<((x'd7bd')))))) ORDER BY (+ (CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST, ((vt0.c0)!=(vt0.c0)) COLLATE RTRIM; -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (NULL) AND ('')), (((NULL, vt0.c0, '-426617465')) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)), vt0.c0 COLLATE RTRIM, COUNT(vt0.c0))) AND ((json_insert(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0), ABS(DISTINCT vt0.c0), LTRIM(vt0.c0, vt0.c0)))), AVG((vt0.c0 IN (x''))) OVER (), vt0.c0, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE FROM vt0; -- 1ms;
SELECT (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0)>=(NULL))))), ((CAST(vt0.c0 AS REAL)) BETWEEN (vt0.c0) AND (((0.2386816358588043)<(vt0.c0)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT LAG(CASE ((vt0.c0)<=(vt0.c0))  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) ELSE ((vt0.c0)!=(vt0.c0)) END, ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN 896390323 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ('421902694')), (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) OVER () FROM vt0 WHERE (((((NULL) IS FALSE)) NOTNULL)); -- 0ms;
SELECT ((-621154328)>(SUM(vt0.c0))), ((vt0.c0) ISNULL), (+ (UNLIKELY(DISTINCT ''))) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((((x'')>=(0.32017123521109303)))) AND (((((109012059))<(('l2>-තQ'))))))) LIMIT 1033748500 OFFSET -834759100; -- 0ms;
SELECT ALL MAX(CAST(vt0.c0 AS BLOB)), ((vt0.c0)>>(((vt0.c0)!=(0.7909527516366976)))), CASE ((vt0.c0)IS(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '0.0' ELSE json_object(vt0.c0, vt0.c0) END FROM vt0;SELECT ((((vt0.c0) IS TRUE))!=(vt0.c0 COLLATE RTRIM)), CUME_DIST() OVER ( PARTITION BY vt0.c0, (((vt0.c0)IS(vt0.c0)) IN ())), ((vt0.c0 IN (vt0.c0, vt0.c0)) IN ()) FROM vt0 WHERE (TYPEOF('') COLLATE RTRIM COLLATE BINARY) LIMIT 1285307149 INTERSECT SELECT ALL (((vt0.c0 IN ('2031503467'))) NOTNULL), TOTAL((('336552873')/(vt0.c0))) OVER ( ORDER BY (((- (vt0.c0))) ISNULL) ASC  NULLS LAST, (((((vt0.c0))<((vt0.c0)))) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (UNLIKELY(-1040110875)))  NULLS FIRST, ((((vt0.c0)&(vt0.c0)))>((- (vt0.c0)))) DESC  NULLS FIRST), ((TRIM(vt0.c0, vt0.c0)) IS FALSE) FROM vt0;SELECT ALL (((NOT (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)>(vt0.c0)))), CAST(vt0.c0 AS REAL) COLLATE NOCASE, CAST(((7.65296677E8)+(0.33785176331932254)) AS BLOB) FROM vt0 WHERE (ABS(DISTINCT (('-1734628910')LIKE('1042372811')))); -- 0ms;
SELECT DISTINCT CAST(SQLITE_VERSION() AS NUMERIC), AVG((~ (vt0.c0))), ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(AVG((+ (vt0.c0)))) FROM vt0 WHERE (CAST(((0.13106119453019238) BETWEEN (NULL) AND (x'')) AS REAL)) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC);SELECT COUNT(*) FROM vt0 WHERE (CAST((('-1655468833') NOT NULL) AS TEXT)); -- 0ms;
SELECT COUNT(*) OVER (), CAST((vt0.c0 IN (vt0.c0)) AS REAL), (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)-(7.383467090160689E-5))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN vt0.c0 THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)OR(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN vt0.c0 THEN vt0.c0 END, x'2c5c', AVG(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0 WHERE (((0.1580645044665142 COLLATE RTRIM) BETWEEN ((((NULL))>((0.8782151502634425)))) AND (((350736585)*(583250131))))); -- 0ms;
SELECT DISTINCT (('cuDU(')LIKE(NULLIF(DISTINCT vt0.c0, vt0.c0))) FROM vt0 WHERE (CAST((((0.912119915096197, 'j<', 0.878437156253719, '7', NULL)) NOT BETWEEN ((NULL, NULL, 1.785718292E9, 0.9021774479929712, 0.821469832012848)) AND (('', NULL, 0xffffffffa5eeef15, '', 0.5440499906404829))) AS INTEGER)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))&(json_type(vt0.c0))) FROM vt0; -- 1ms;
SELECT DISTINCT PERCENT_RANK() OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND vt0.c0 PRECEDING) FROM vt0 WHERE (x'') LIMIT -1612362689 OFFSET 1648980980;SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0) NOT NULL))))OR((vt0.c0 IN ()))), (- (CAST(vt0.c0 AS REAL))), COUNT(((vt0.c0) NOT NULL)) OVER () FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(CAST(vt0.c0 AS BLOB)) FROM vt0; -- 0ms;
SELECT (((vt0.c0) NOTNULL) IN ()) FROM vt0; -- 0ms;
SELECT (CAST(vt0.c0 AS REAL) IN ((NOT (vt0.c0)), MAX(vt0.c0))) FROM vt0 WHERE ((((x'')) BETWEEN (((((('-93322012')AND(0.2662268276125853)))AND('1751962137')))) AND (((('2051381428')&(-1.833235027E9)))))) GROUP BY vt0.c0 COLLATE RTRIM, ROUND((+ (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), ((((((((((((((((0.8003995652154777)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)&('-504253353')))))AND(((vt0.c0) NOT NULL))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)&(vt0.c0)))) HAVING NULL COLLATE BINARY LIMIT 642867898 OFFSET 1342821202; -- 0ms;
SELECT DISTINCT (((((((((((vt0.c0)OR(vt0.c0)))AND(-1643609207)))AND(vt0.c0)))AND(vt0.c0)), ((0.87985755474832)LIKE(vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0))))<((vt0.c0, vt0.c0 COLLATE RTRIM, ((vt0.c0) NOTNULL)))) FROM vt0 ORDER BY (((CHAR(vt0.c0)))>(((vt0.c0 IN (vt0.c0, 'zA')))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) NOTNULL) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) WHEN ((vt0.c0) NOTNULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) ELSE (~ (vt0.c0)) END, ((((((vt0.c0)OR('908048331')))OR(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((vt0.c0 IN ()))), RANK() OVER () FROM vt0 WHERE ((NOT ((((0.08122946019885124, '', 0.5250711929723593, NULL, '885066373')) NOT BETWEEN (('씓<x''', '-137617269', NULL, NULL, 0X1b0f90ad)) AND ((NULL, 1088441632, NULL, NULL, '-544230275')))))); -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)LIKE(vt0.c0)))) FROM vt0 WHERE (TRIM(DISTINCT ((x'b7b1') BETWEEN (NULL) AND ('')))) LIMIT 416748456; -- 0ms;
SELECT DISTINCT ((((vt0.c0 IN ())))=(((((vt0.c0))<>((vt0.c0)))))) FROM vt0 WHERE ((((NULL IN ()))<=(NULL))) ORDER BY (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST; -- 1ms;
SELECT DISTINCT ((json_quote(vt0.c0))IS('-421289059')) FROM vt0 WHERE ((((((x'')|(x''))))>((((x'3d27') ISNULL))))) GROUP BY NULLIF(vt0.c0 COLLATE BINARY, x'' COLLATE RTRIM); -- 0ms;
SELECT ((((vt0.c0 COLLATE RTRIM)OR(0X48ec4562)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((('yT' COLLATE BINARY)OR(((vt0.c0) NOTNULL))))OR((((vt0.c0))>=((vt0.c0))))), ((((vt0.c0)%(vt0.c0))) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)), 0X1a6cf78d, ((vt0.c0)AND(((vt0.c0) IS TRUE))) FROM vt0 WHERE (NULL) GROUP BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN x'' THEN vt0.c0 END)) AND ((vt0.c0))); -- 0ms;
SELECT ((vt0.c0 IN ()) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(vt0.c0) OVER () FROM vt0 WHERE (CAST((+ (0.7798555673478574)) AS REAL)); -- 4ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) FROM vt0 WHERE (((((NULL)OR(NULL)))AND('2086773211')) COLLATE NOCASE COLLATE RTRIM) LIMIT 928973727 OFFSET -1243610086; -- 1ms;
SELECT IFNULL(DISTINCT ((vt0.c0)<=(vt0.c0)), CAST(vt0.c0 AS NUMERIC)) FROM vt0 ORDER BY vt0.c0 ASC; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (vt0.c0)), (((vt0.c0)GLOB(vt0.c0)) IN (MIN(vt0.c0))), SUBSTR((vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (-1519341951))) FROM vt0 WHERE ((((((x'')) BETWEEN ((NULL)) AND (('-1536291788'))))<>(((-2029867691) NOT BETWEEN (x'4e1d819d') AND ('1109561054'))))) LIMIT -1317321792 OFFSET -1152509086; -- 0ms;
SELECT DISTINCT ((AVG(vt0.c0)) NOT BETWEEN ((('') IS TRUE)) AND (((vt0.c0)<<(vt0.c0)))), (((vt0.c0 IN ())) BETWEEN (('-1344014791' IN ())) AND (((vt0.c0) NOT BETWEEN (0.23125260420458527) AND (vt0.c0)))), ((SUM(vt0.c0)) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (NULL IN ()) FROM vt0; -- 0ms;
SELECT ALL AVG(CAST(vt0.c0 AS NUMERIC)) FROM vt0 WHERE (1712896418); -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS INTEGER) FROM vt0 WHERE (TRIM(CAST(0.3618172101299848 AS INTEGER))); -- 0ms;
SELECT SUM(PRINTF(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT MIN('-2023957760') FROM vt0; -- 0ms;
SELECT DISTINCT CAST(MIN(vt0.c0) AS REAL), ((((((((vt0.c0 COLLATE RTRIM)AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))AND(((vt0.c0)%(vt0.c0)))))OR((~ (vt0.c0)))))OR((- (vt0.c0)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(CAST(vt0.c0 AS TEXT))), (((vt0.c0 IN (vt0.c0, vt0.c0))) IS TRUE), x'' FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0 IN ()))AND(x'')))AND(TRIM(DISTINCT vt0.c0))), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))), (((vt0.c0)&(vt0.c0)) IN ()) FROM vt0 WHERE (CAST(-2145946707 AS REAL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((vt0.c0)/(vt0.c0)))<<(vt0.c0)), RANK() OVER (), LAG(((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((vt0.c0 IN ()))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM, (((vt0.c0))!=((vt0.c0)))) OVER () FROM vt0 LIMIT 965293293; -- 1ms;
SELECT DISTINCT LIKELY(CAST(vt0.c0 AS BLOB)) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL))||((vt0.c0 IN (vt0.c0)))) FROM vt0 WHERE (((x'') NOT NULL)); -- 0ms;
SELECT ALL (((('-1331438772') NOT NULL)) IS TRUE), (((x'')) NOT BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((vt0.c0 COLLATE NOCASE))), ((TOTAL(vt0.c0)) IS FALSE) FROM vt0 WHERE ((((('1136409311')|('鹧/h[c'))) IS TRUE)); -- 0ms;
SELECT ((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (((x'767c') NOTNULL)) AND ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT ALL json_valid(CAST(vt0.c0 AS TEXT)) FROM vt0 WHERE (((('-2132204510')) BETWEEN (((- (x'c1ca')))) AND ((CASE x''  WHEN 762125920 THEN '181282658' END)))); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM vt0; -- 0ms;
SELECT ALL ((((((((vt0.c0)OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))OR(CASE '1524435779'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ('') LIMIT -726785304 OFFSET -1953453581; -- 1ms;
SELECT CAST(0xffffffff83fc4858 AS INTEGER) FROM vt0 LIMIT -1226239390 OFFSET 1896336032; -- 0ms;
SELECT DISTINCT (('1893067519')OR('-137617269')) FROM vt0; -- 0ms;
SELECT NULL, ((vt0.c0) IS FALSE), (NOT (SUM(vt0.c0))) FROM vt0 WHERE ((((('Jg䦡H/>v>d' IN ('-1814714378'))))!=((CASE WHEN 0x798c591 THEN 0.6108131964044479 WHEN NULL THEN '0.33658922183572304' WHEN x'' THEN '-2090383330' END)))) GROUP BY (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING (((vt0.c0 IN ()))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((vt0.c0) BETWEEN ('-555143332') AND (vt0.c0)) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT STRFTIME(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE FROM vt0 WHERE ((((((((((((('0.5827735691434979')OR(x'')))OR('')))AND('Hd\?')))OR(0.5858875925677937)))AND(387604937 COLLATE RTRIM)))AND((+ (x''))))) LIMIT -1088192520 OFFSET -1068636510; -- 0ms;
SELECT (((vt0.c0 COLLATE BINARY))>=((x''))) FROM vt0; -- 0ms;
SELECT ALL IFNULL(vt0.c0, ((vt0.c0)AND(vt0.c0))), ABS(DISTINCT (+ (vt0.c0))), (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((SUM(vt0.c0)))) FROM vt0 ORDER BY x'27147706' DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR(MAX(vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (((((((('-1e500')AND(((vt0.c0)AND(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN x'3b2e' WHEN 0.11635163622264988 THEN 1017579591 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(905237200)))AND(vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT ((MIN(vt0.c0))LIKE(((vt0.c0) IS TRUE))) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE ((((x'499c')) BETWEEN (('-1797415779')) AND ((x''))) COLLATE NOCASE) LIMIT -568850103; -- 0ms;
SELECT COUNT((- (vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT CAST('-1660580619' AS TEXT) FROM vt0 WHERE (((((((x'') NOT NULL))AND(CASE x''  WHEN '-1536291788' THEN 'VI+10YH' WHEN NULL THEN '-1075501482' WHEN '/y' THEN -1.475651235E9 WHEN NULL THEN '#|' WHEN 0.9023618609281753 THEN '402839866' ELSE 0.5221440765856991 END)))OR(((((((((0.7013826922685086)OR('1628655575')))AND(NULL)))OR(-169872064)))OR(''))))); -- 0ms;
SELECT LAST_VALUE(CAST(vt0.c0 AS REAL)) OVER () FROM vt0; -- 0ms;
SELECT 0.08005811180783273 FROM vt0; -- 0ms;
SELECT ALL RANK() OVER () FROM vt0 NOT INDEXED WHERE ((((0xffffffffaad7371a IN ()))-((+ (0.1716697961543584))))); -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) FROM vt0; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), (((vt0.c0)IS(vt0.c0)) IN ()), (((- (vt0.c0)))>(vt0.c0 COLLATE NOCASE)) FROM vt0 GROUP BY ((((json_quote(vt0.c0))AND(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) ISNULL))), CAST(vt0.c0 AS BLOB), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE RTRIM COLLATE NOCASE HAVING (((((vt0.c0 IN ()))OR(INSTR(0.7932850126680318, vt0.c0))))AND(TRIM(DISTINCT vt0.c0))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c0))<((vt0.c0)))), ((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE, (TOTAL(vt0.c0) IN ()) FROM vt0; -- 0ms;
SELECT ALL CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB) FROM vt0 WHERE ((((((NULL)&(0.2431351268715899)), CASE WHEN x'c13e' THEN 0.2069229925105991 END, (('0.2192298948685958') BETWEEN ('') AND ('JfE{OY')), (('-1833235027') NOT BETWEEN ('5k') AND ('86967599')), CAST('~' AS TEXT)))<=(((x'f113' IN ()), ((('	0')) NOT BETWEEN (('-572262095')) AND ((NULL))), ((((((((NULL)OR(0.8756903965335551)))OR('1088-6837886367801821781-')))AND(NULL)))OR(0.33778939682056675)), load_extension(NULL, NULL), ((x'') BETWEEN (0.4036657691352621) AND ('')))))) LIMIT -877225140 OFFSET 1674081198; -- 0ms;
SELECT ALL (ABS(vt0.c0) IN ()) FROM vt0 ORDER BY (+ (vt0.c0 COLLATE NOCASE)) DESC; -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE (((((0.12921993358688377) NOT BETWEEN (x'') AND (''))) NOT BETWEEN ((~ ('1033748500'))) AND ((('-1987077724') NOT BETWEEN (0x5df1740a) AND ('1314363194'))))) GROUP BY (- (((vt0.c0) NOT NULL))) HAVING COUNT(*) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS NUMERIC), ((TOTAL(vt0.c0)) IS TRUE), ((vt0.c0)!=(vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((((((x'') NOT NULL))OR((+ ('-1725773289')))))AND('-43543564'))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT ALL (+ (vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) NOTNULL)) IS FALSE) FROM vt0; -- 0ms;
SELECT ALL SUM(LIKELY(DISTINCT vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT (((TYPEOF(DISTINCT vt0.c0)))=(((- (vt0.c0))))) FROM vt0 WHERE (CASE (- (0.06248338554021504))  WHEN (((((((('435826117')AND(0.6278986610640903)))OR('243365857')))AND(x'')))AND(NULL)) THEN ((((((((0.9929966900263012)OR('1033748500')))OR(x'4dc3')))OR(0.18652375441739888)))OR('')) ELSE load_extension(x'', x'73ef') END);SELECT DISTINCT CASE ((vt0.c0)|(vt0.c0))  WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN '6P' WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN ((vt0.c0)<(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) WHEN COUNT(vt0.c0) THEN vt0.c0 COLLATE NOCASE END FROM vt0; -- 0ms;
SELECT ALL (vt0.c0 IN (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (NULL COLLATE BINARY) GROUP BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM HAVING ((vt0.c0)>(vt0.c0)) COLLATE NOCASE; -- 1ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS REAL), (((- (vt0.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (MAX(vt0.c0))), GROUP_CONCAT(vt0.c0 COLLATE BINARY) FROM vt0 GROUP BY CAST((+ (vt0.c0)) AS TEXT) HAVING LOWER(SUM(vt0.c0)); -- 0ms;
SELECT DISTINCT 0.5056665873495239 FROM vt0 LIMIT 1023506185; -- 0ms;
SELECT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) FROM vt0 WHERE (((((0X1925b966)IS NOT(NULL)))||((NOT (''))))); -- 0ms;
SELECT DISTINCT CAST(TOTAL(vt0.c0) AS TEXT) FROM vt0 WHERE (x'24f8'); -- 0ms;
SELECT ALL TIME((~ (vt0.c0)), ((vt0.c0)&(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (x'')), SUM(x'')), vt0.c0, x'' FROM vt0 WHERE ((NOT ((~ ('텹ofjaz.'))))); -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT TOTAL(((vt0.c0) NOT NULL) COLLATE NOCASE) FROM vt0; -- 0ms;
SELECT ALL ((((((((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(x'')))))OR(vt0.c0)))OR(0.7803820425843995)))AND(((vt0.c0)*(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE) OVER () FROM vt0 WHERE ((((('1785718292') IS TRUE))AND((0.02824863889936713 IN (NULL))))) ORDER BY ((vt0.c0 COLLATE RTRIM)AND(vt0.c0)), (- (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('1091158332')))OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((NULL))<((vt0.c0))) COLLATE RTRIM FROM vt0 WHERE (json_extract((((0.8447193998578725))<=((NULL))), ((x'')/('1535507890')))) LIMIT -1615342094; -- 1ms;
SELECT DISTINCT (- ((NOT (vt0.c0)))), (((NULL))>((COUNT(x'')))), CASE vt0.c0 COLLATE RTRIM  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE NOCASE, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), IFNULL(DISTINCT vt0.c0, (vt0.c0 IN ())) FROM vt0 WHERE (ABS(DISTINCT (NOT (0.6518057732494665)))); -- 0ms;
SELECT (((((((('-1615342094')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE, CAST(MIN(vt0.c0, vt0.c0) AS TEXT), TRIM(DISTINCT ((vt0.c0)+(vt0.c0))) FROM vt0; -- 0ms;
SELECT FIRST_VALUE((NOT ((vt0.c0 IN (vt0.c0))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((TOTAL(vt0.c0), ((vt0.c0)AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=(((vt0.c0 IN ()), (vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER)))) FROM vt0 WHERE ((((((x'2c65' IN ()))AND(COALESCE(x'9ee4', 0Xfffffffffff8b85a, '&', 71628086))))AND((('')>=('ddpp'))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)+(vt0.c0)) IN (((vt0.c0)>>(vt0.c0)))) FROM vt0; -- 1ms;
SELECT ALL vt0.c0, CAST(((vt0.c0)IS NOT(vt0.c0)) AS REAL), (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN 0.926168751468907 END)) AND ((((vt0.c0)/(vt0.c0))))) FROM vt0 WHERE (((((((651293125)OR('')))AND('2006682566'))) BETWEEN (((((x'')AND(-594246824)))AND(0.39118001265815927))) AND (((0.37967256259045745) IS TRUE)))); -- 0ms;
SELECT DISTINCT NTH_VALUE((((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((((((vt0.c0)OR('N')))AND(x''))))), (+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) OVER (), (((((vt0.c0)) NOT BETWEEN (('')) AND ((vt0.c0))))<<(CASE WHEN vt0.c0 THEN vt0.c0 END)), SUM(x'') OVER () FROM vt0;SELECT DISTINCT (NOT (CAST(vt0.c0 AS NUMERIC))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((((NULL, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))), (~ ('1024512259' COLLATE BINARY)), (((((vt0.c0)||(vt0.c0)), GROUP_CONCAT(vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((vt0.c0, ((((NULL)AND(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE NOCASE))) FROM vt0 WHERE ('-153941045') ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (-1764640194) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST, '1353479715' DESC, (((+ (0.6725775326837657))) NOT BETWEEN (0.37703123872731537) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((0.4194844431116016) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), SUM(vt0.c0) OVER (), (((x'', vt0.c0, NULL)) BETWEEN ((CASE vt0.c0  WHEN '-94280144' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) IS TRUE), CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0)GLOB(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0))) FROM vt0; -- 1ms;
SELECT DISTINCT AVG((~ (vt0.c0))) OVER () FROM vt0 LIMIT -680128409 OFFSET -808652015; -- 0ms;
SELECT DISTINCT JULIANDAY(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)&(vt0.c0))), ((COUNT(vt0.c0)) NOT NULL), ((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0) NOTNULL))))OR(TOTAL(vt0.c0))), CAST((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, 0x398934ed, vt0.c0))) AS TEXT), (vt0.c0 IN ()) COLLATE NOCASE FROM vt0 ORDER BY ((NULL)+(vt0.c0)) COLLATE RTRIM  NULLS LAST, (- (vt0.c0)) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT), LOWER(vt0.c0), (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0) BETWEEN (x'') AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB), CASE WHEN GLOB(vt0.c0, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE vt0.c0 COLLATE BINARY END, vt0.c0 FROM vt0 WHERE ((((0.5098157087571837) IS FALSE) IN ())) GROUP BY (((~ (vt0.c0))) NOT BETWEEN (TRIM(vt0.c0)) AND ((~ (vt0.c0)))) HAVING 0.23651061797566264 ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST; -- 0ms;
SELECT (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((1.09012059E8, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE ((((((x'')) BETWEEN ((x'')) AND ((-1.527499993E9)))) BETWEEN (CASE NULL  WHEN 0.5210802479514388 THEN NULL ELSE x'' END) AND (CASE WHEN 0xffffffffd7761067 THEN '1950574110' END))) ORDER BY ((((vt0.c0)||(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.6913250162246756 END) AND ((((vt0.c0))>((vt0.c0))))) ASC; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (((((vt0.c0 IN ()))AND((~ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0)) NOT BETWEEN ((COUNT(vt0.c0))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))<=((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '391241719' THEN vt0.c0 END))) FROM vt0; -- 0ms;
SELECT COUNT(*) FROM vt0 LIMIT 1879101542; -- 0ms;
SELECT ALL JULIANDAY(json_object(0x718da57a, vt0.c0), TOTAL(vt0.c0), (((vt0.c0))<>((vt0.c0))), ((vt0.c0) NOTNULL), LIKELIHOOD(vt0.c0, 0.7692257603470558), ((vt0.c0) IS TRUE), vt0.c0) FROM vt0;SELECT DISTINCT AVG((~ (vt0.c0))) FROM vt0; -- 1ms;
SELECT DISTINCT CAST(((vt0.c0)IS(vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((CAST(x'7d2558e5' AS BLOB))+((((x'', '', NULL, '1625914825', 'o[j壋px%b')) BETWEEN (('', 0.2242347783319173, 0.7968126595727836, 0Xffffffff9fb7d5f2, '0.1135324447011603')) AND ((0x3e6dbabc, 1517698676, 'rU', '\rCk*', NULL)))))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM DESC  NULLS LAST; -- 0ms;
SELECT ALL ((((((((vt0.c0)OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0)))AND(((vt0.c0) IS FALSE))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CASE json_insert(0.8105526406733704, vt0.c0, vt0.c0)  WHEN NULLIF(vt0.c0, vt0.c0) THEN json_insert(vt0.c0, vt0.c0, vt0.c0) WHEN (+ (0.0529738211278562)) THEN (vt0.c0 IN ()) WHEN NULL COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE GROUP_CONCAT(vt0.c0) END, (((+ (vt0.c0)))<(1900869907)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))LIKE(vt0.c0)), ((((AVG(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(TYPEOF(vt0.c0))) FROM vt0 WHERE (((x'' COLLATE RTRIM) NOT BETWEEN (((NULL) ISNULL)) AND (((0.09763623725185855)-(''))))); -- 0ms;
SELECT DISTINCT TOTAL_CHANGES() FROM vt0 WHERE (((CASE WHEN 1.526181736E9 THEN 1024512259 ELSE x'' END)<<('523820665' COLLATE NOCASE))); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((0.7693985162315833)) AND ((((vt0.c0) NOTNULL)))) FROM vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT ((((vt0.c0)AND('months9Z')))AND(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (MIN(0.4254973496676273 COLLATE NOCASE, ((((NULL)OR(NULL)))OR('v')))); -- 0ms;
SELECT DISTINCT ((((((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0))=((vt0.c0))))))OR(((vt0.c0)>('')))))AND(((vt0.c0)|(vt0.c0)))))AND(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0)-(vt0.c0)))))OR(((vt0.c0) IS TRUE))))AND(ABS(DISTINCT vt0.c0))))AND((~ (vt0.c0)))) FROM vt0; -- 1ms;
SELECT DISTINCT 683318173 FROM vt0 WHERE (((+ ('')) IN (((-1081438384)AND(0X6237cad))))) ORDER BY ((LIKELY(vt0.c0))&(((vt0.c0)%(vt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 WHERE (TRIM(COALESCE(DISTINCT 0x4fa95dff, NULL, -442014425, NULL), ((NULL)&(8.40960645E8)))); -- 0ms;
SELECT ALL NULL, vt0.c0, LAG(vt0.c0, ((((vt0.c0)IS(vt0.c0))) BETWEEN ((- (vt0.c0))) AND ((NOT (vt0.c0)))), ((((((((x'4113')OR(((((vt0.c0)AND(NULL)))AND('V<qcb#+nj')))))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0)||(vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0))))) OVER () FROM vt0 WHERE (CASE WHEN ((x'')LIKE('-111453801')) THEN ((NULL) IS TRUE) WHEN '쫇d' COLLATE NOCASE THEN TYPEOF(DISTINCT NULL) WHEN (NOT (NULL)) THEN CASE WHEN x'' THEN 0Xffffffff8111369b END ELSE CAST(NULL AS INTEGER) END); -- 0ms;
SELECT ALL (~ (x'9054')) FROM vt0 LIMIT 1136409311 OFFSET -2056505929; -- 0ms;
SELECT (((~ (vt0.c0)))LIKE(vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT json_quote(((vt0.c0) NOTNULL)) FROM vt0 WHERE (TRIM(0.6046224670746901)); -- 1ms;
SELECT AVG(((vt0.c0) IS TRUE)) FROM vt0; -- 0ms;
SELECT ALL ((((NULL)OR(vt0.c0)))AND((+ (vt0.c0)))), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (0.042596805930801174)), 0.4793107770828251 COLLATE RTRIM, TOTAL(vt0.c0), ((NULL) NOT NULL), COUNT(x'')))), vt0.c0 FROM vt0 WHERE (((((+ (0x1d4acb88))))>=((-821626801 COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)>=(vt0.c0))) OVER () FROM vt0; -- 2ms;
SELECT ALL ((((vt0.c0)+(vt0.c0)))-(GROUP_CONCAT(vt0.c0))) FROM vt0 WHERE ((~ (CASE WHEN '0.4990549958894799' THEN x'9854' END))) GROUP BY ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY, ((((vt0.c0)AND(((vt0.c0)|(NULL)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (((vt0.c0)<=(0X68ac988b)) IN (((vt0.c0) IS TRUE), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'3f85')))), (- ((NOT (vt0.c0)))); -- 2ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)|(CAST(vt0.c0 AS NUMERIC))), ((((vt0.c0 COLLATE BINARY)AND((- (vt0.c0)))))OR(SUM(vt0.c0))), ((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))&(((vt0.c0)AND(vt0.c0)))) FROM vt0 WHERE ((((((((((('1[kw') ISNULL))OR(0.3658580943510469 COLLATE BINARY)))OR(json_array('-2029826308', NULL, 0X1c2e4be3, NULL))))AND((((0.42006031501457664)) NOT BETWEEN ((x'9645')) AND ((-1756440319))))))OR(((((((((0x65e14f19)AND(0xffffffff82d72b04)))AND(0xffffffffb99a8cef)))OR('')))AND(x''))))); -- 0ms;
SELECT DISTINCT ((SQLITE_COMPILEOPTION_USED(vt0.c0))LIKE(vt0.c0)), ((vt0.c0)AND(vt0.c0)) COLLATE BINARY, PERCENT_RANK() OVER () FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)/((((vt0.c0))>=((vt0.c0))))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT UPPER(vt0.c0) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL HEX(vt0.c0) COLLATE NOCASE FROM vt0 GROUP BY (- (json_valid(vt0.c0))), CAST(((((-50739611)OR(vt0.c0)))OR(1879446514)) AS TEXT), 1.628655575E9; -- 1ms;
SELECT CAST((~ (vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((((CAST(NULL AS REAL))AND(highlight('472796131', 8.63969116E8, '-821626801', '1024512259'))))OR((((x'8b5f'))<(('&厝')))))); -- 0ms;
SELECT ALL (('0.06501444786628374') NOT NULL) COLLATE NOCASE COLLATE RTRIM FROM vt0 WHERE (CASE WHEN load_extension(NULL, -1327522044) THEN CASE 0.7560694136109395  WHEN '333821386' THEN '?U垪!' ELSE 0Xffffffffafe3f639 END WHEN (x'' IN ('')) THEN ('-1620295613' IN ()) WHEN (((((((((((('')OR(0.39017771036291127)))OR(x'ff93')))OR(x'')))OR(x'')))OR(x'')))AND(x'')) THEN (((((((((((('1594353565')AND('')))OR(NULL)))AND(x'')))OR(x'')))AND(0.9462065320210563)))AND(0.9361411066769872)) END);SELECT DISTINCT ((SQLITE_COMPILEOPTION_USED(vt0.c0))<>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (LOWER('8?,%nrYO') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<<(vt0.c0))) NOT NULL), ((vt0.c0)>(((vt0.c0)IS(vt0.c0)))), (~ ((vt0.c0 IN ()))) FROM vt0 WHERE ((~ ((((x'')) BETWEEN ((-6.7947596E7)) AND ((x'')))))); -- 0ms;
SELECT ALL NULLIF(SUM(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), TOTAL(SUM(((vt0.c0)<(vt0.c0)))) FROM vt0 WHERE ((NOT ('0.5133065330432711')) COLLATE BINARY);SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS BLOB) FROM vt0 WHERE ((((((((((('')AND(x'')))OR(NULL)))AND(-2.56087699E8)))OR(x''))) NOTNULL)); -- 0ms;
SELECT ALL vt0.c0, COUNT(((x'') IS FALSE)), ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN '-2118474946' THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (CAST(NULL COLLATE RTRIM AS NUMERIC)); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT CAST((~ (vt0.c0)) AS BLOB) FROM vt0 WHERE (((+ ('auz\')) IN ())) LIMIT 206657240; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (vt0.c0)) COLLATE BINARY COLLATE BINARY FROM vt0; -- 0ms;
SELECT ((((vt0.c0) IS TRUE)) NOTNULL), GROUP_CONCAT(CASE WHEN vt0.c0 THEN vt0.c0 END) OVER (), COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FILTER(WHERE json_remove(((((((((((((vt0.c0)AND(0.6201465575765294)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('o1')))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), (+ (vt0.c0)), (((vt0.c0, '-2118826235', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT CAST(((vt0.c0)-(vt0.c0)) AS REAL), ((vt0.c0) IS TRUE) COLLATE NOCASE, GROUP_CONCAT((vt0.c0 IN ())) OVER () FROM vt0 WHERE (CAST(((0.40594797799039717)%(0.5814835251021448)) AS REAL)) LIMIT 1326502366 OFFSET -682435793; -- 0ms;
SELECT ALL COUNT(*) OVER ( PARTITION BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL)))) AND (vt0.c0 COLLATE BINARY)), (((((vt0.c0) IS FALSE), ((vt0.c0)>(vt0.c0)), (((vt0.c0))>=((vt0.c0)))))!=((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0)||(x'8ab7'))) OVER () FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY DESC  NULLS LAST, ((vt0.c0 COLLATE RTRIM) BETWEEN ((NOT (vt0.c0))) AND ((- (vt0.c0)))) ASC  NULLS LAST LIMIT -1034834247 OFFSET 887485117; -- 0ms;
SELECT ALL SUM(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) OVER () FROM vt0 WHERE ('2121320771'); -- 1ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((((((((0.6667358703348997))<((x''))))OR(CAST(x'789b' AS NUMERIC))))AND(((((((((((((0.14090932976489112)OR(NULL)))OR(-1358810026)))AND(0X4a319fa5)))AND(NULL)))OR('')))AND(0.9430857348603758))))) GROUP BY (NOT (((vt0.c0)&(vt0.c0)))); -- 0ms;
SELECT ALL (((vt0.c0 COLLATE NOCASE))<((vt0.c0 COLLATE NOCASE))) FROM vt0 WHERE (((CAST(x'fc68' AS TEXT))LIKE(CAST('-1099554099' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT 0.09719369561238922 COLLATE RTRIM COLLATE NOCASE FROM vt0 WHERE (LOWER(DISTINCT ((x'') BETWEEN ('U*\?') AND (x'1f1d8fde')))); -- 0ms;
SELECT json_extract(vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0 WHERE ((((((((((NULL IN ()))OR((((0.004444231279745803)) NOT BETWEEN ((x'')) AND (('腾V艰l|&R^-'))))))OR(((x'') ISNULL))))OR(0.9860395616727076)))OR(((1403471167) NOT BETWEEN ('*_ h₋.~	G') AND (-6.80128409E8))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0)<>(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c0)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((((((('')AND(NULL)))AND(0.2211123652708218)))&(CASE NULL  WHEN x'abf3' THEN NULL END))); -- 0ms;
SELECT ((('762616686', ((((vt0.c0)AND(x'')))AND(vt0.c0)), vt0.c0 COLLATE NOCASE, GROUP_CONCAT(vt0.c0), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))<(('-67947596', '1705117526', CASE vt0.c0  WHEN x'' THEN x'' ELSE vt0.c0 END, '()', ((vt0.c0)&(vt0.c0))))) FROM vt0 WHERE (((CASE WHEN '0.2782487000313919' THEN '689078428' ELSE x'' END) NOTNULL)); -- 0ms;
SELECT ALL (((vt0.c0)>>(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL MIN(SUM(CAST(vt0.c0 AS BLOB))) FROM vt0;SELECT DISTINCT ((((vt0.c0)>=(vt0.c0)))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)), (LIKE(vt0.c0, vt0.c0) IN ()), CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT) FROM vt0 LIMIT -1100178688; -- 0ms;
SELECT DISTINCT (~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), ((TYPEOF(DISTINCT vt0.c0))=(json_array('1136409311', vt0.c0))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM FROM vt0; -- 1ms;
SELECT ALL ((vt0.c0 COLLATE BINARY)>>(((vt0.c0) NOTNULL))), (NOT ('[-,].₋')), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<<(((vt0.c0)>(vt0.c0)))) FROM vt0 WHERE ((+ ((NULL IN (NULL, 0.45485896878538346))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)+(vt0.c0))) NOT BETWEEN ('oQ-S)') AND (vt0.c0)), MAX(CASE WHEN vt0.c0 THEN '' END), (((((((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS REAL))))AND((+ (vt0.c0)))))OR((vt0.c0 IN ()))))AND(((vt0.c0)IS(vt0.c0)))) FROM vt0 WHERE ((json_quote('-1615342094') IN ())); -- 0ms;
SELECT DISTINCT (vt0.c0 IN (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((((0.11168812100122594)>>(-1.89416645E8))) NOT BETWEEN (((NULL) BETWEEN (NULL) AND (x''))) AND (CAST(NULL AS INTEGER)))) LIMIT -2023957760 OFFSET -498842649; -- 0ms;
SELECT ALL (NOT (CAST(vt0.c0 AS REAL))) FROM vt0 WHERE (((((NULL)AND(0xffffffffb226c067)))AND(NULL)) COLLATE NOCASE) LIMIT 1024512259; -- 0ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE)>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((vt0.c0) IS TRUE))<(COUNT(vt0.c0))), ((((((((NULL)OR(UNLIKELY(DISTINCT NULL))))AND(vt0.c0)))AND(NULL)))AND(CAST(vt0.c0 AS INTEGER))), (vt0.c0 IN ()), (vt0.c0 COLLATE RTRIM IN (((vt0.c0)/(vt0.c0)), ((vt0.c0) ISNULL))) FROM vt0 WHERE (CASE LIKELY(0.10109761609016943)  WHEN ((('0.7161482923400379')) BETWEEN ((NULL)) AND ((NULL))) THEN ((((0.4175014014534866)AND(NULL)))AND(x'')) END) ORDER BY vt0.c0  NULLS LAST, CAST(vt0.c0 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST, vt0.c0 ASC  NULLS LAST; -- 0ms;
SELECT (((vt0.c0 IN (vt0.c0, vt0.c0)))GLOB((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(MAX(vt0.c0) AS INTEGER), ((((vt0.c0)OR(x'')))AND(vt0.c0)) COLLATE NOCASE, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), COUNT(*), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ())))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)+(vt0.c0)), ((vt0.c0)<>(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((NULL) NOT BETWEEN (vt0.c0) AND (0.7691629490148951))))) FROM vt0 WHERE ((+ (CASE WHEN 0.9479727018429913 THEN '' END))) ORDER BY (((- (vt0.c0)))GLOB(vt0.c0))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS BLOB))AND(CAST(vt0.c0 AS BLOB))))AND(CAST(vt0.c0 AS REAL))) FROM vt0 WHERE ('뗊+?mḐ'); -- 0ms;
SELECT ALL ((((((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0) NOTNULL))))OR(SUM(0.3851509983654825))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)!=(vt0.c0)))) FROM vt0 WHERE (((((NULL)==(x''))) BETWEEN (('765296677' IN ())) AND ((((NULL, x'3bc88a52', '727166073'))<>((0.8271201797870219, '', '741939722')))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 END)-(((vt0.c0)-(vt0.c0)))) FROM vt0 WHERE (((((x'7312') BETWEEN (NULL) AND ('-2026377478')))<=(((((NULL)OR(NULL)))OR(0.6698718390036484))))); -- 0ms;
SELECT DISTINCT (('1108795712') BETWEEN (((x'') NOTNULL)) AND (((vt0.c0) NOTNULL))), (((((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))))>>(vt0.c0)), JULIANDAY(vt0.c0, ((vt0.c0)&(vt0.c0)), ((vt0.c0)LIKE(vt0.c0))) FROM vt0 WHERE (((((+ (NULL))))<=(('*}' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT NTILE(((((vt0.c0)>(vt0.c0))) IS FALSE)) OVER () FROM vt0;SELECT CASE ((vt0.c0)>>(vt0.c0))  WHEN x'' THEN ((0.32219007002196853)||(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.7885058442465198 END END FROM vt0 WHERE (((CASE WHEN '' THEN 0.5889665237286876 WHEN '' THEN NULL WHEN '-1359709025' THEN '' ELSE x'' END) IS FALSE)) GROUP BY CAST((((vt0.c0))=((vt0.c0))) AS BLOB); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (((0.34035034777135276)>=(NULL))))) GROUP BY '1136409311'; -- 0ms;
SELECT ALL (((((vt0.c0))>((vt0.c0)))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c0 COLLATE RTRIM)), COUNT(*) OVER (), CAST(0.7711544152093037 AS NUMERIC) FROM vt0; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((0xffffffffb0a3db4c)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT json_extract(vt0.c0, ((vt0.c0)/(vt0.c0)), (~ (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), AVG(NULL)), ((vt0.c0 COLLATE NOCASE) NOTNULL), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN ('102988973') AND ((vt0.c0 IN ()))), vt0.c0, ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CAST('}8*n''Xm]' AS TEXT) COLLATE NOCASE); -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), (((vt0.c0))<(('yi'))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))), (((NULL)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) AND ((((vt0.c0)>=(vt0.c0))))), CAST(vt0.c0 AS REAL) COLLATE RTRIM FROM vt0 WHERE ((NOT ((((x'')) BETWEEN ((36103191)) AND ((1.785718292E9)))))); -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))||((vt0.c0 IN ()))) FROM vt0 ORDER BY CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ASC; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY ((((((0.689821123536926)AND(vt0.c0)))OR(vt0.c0)))IS((NOT (1.26655246E9)))) DESC, CAST(IFNULL(vt0.c0, vt0.c0) AS BLOB)) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN '1626628768' THEN (NOT (vt0.c0)) END FROM vt0 WHERE (CAST(((NULL)||('c')) AS INTEGER)); -- 0ms;
SELECT ALL (((0.6730360283365528) ISNULL) IN (TOTAL(vt0.c0), CAST(vt0.c0 AS TEXT))), TOTAL(((vt0.c0) ISNULL)), ((((((((((((vt0.c0)AND((vt0.c0 IN (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(MAX(vt0.c0))))AND(COUNT('1502164288'))))AND(CAST(vt0.c0 AS BLOB))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ('1526181736'); -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))) AND (COUNT(vt0.c0))) FROM vt0 WHERE ((((x'' IN (x''))) NOT BETWEEN ((~ (NULL))) AND (((-31710793) BETWEEN (0.16141729861412635) AND ('-1421304066'))))); -- 0ms;
SELECT DISTINCT DATE(((vt0.c0)LIKE(vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)*(vt0.c0)), SUM(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0) IS FALSE))OR(MIN(vt0.c0))))OR(load_extension(vt0.c0))) FROM vt0;SELECT (- (LOWER(vt0.c0))) FROM vt0 WHERE (((((((((0.40448713758076926)AND(0xffffffff9dedbde8)))OR(NULL)))OR(x'')))AND(-1983368593)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NTH_VALUE(((LTRIM(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN (- (vt0.c0)) THEN IFNULL('Jg䦡H/>v>d', vt0.c0) END) OVER () FROM vt0 WHERE (((((NULL) BETWEEN ('eF*Tv☘5') AND (NULL)))<=((NULL IN ())))); -- 0ms;
SELECT DISTINCT CASE ((0.3850142874582796)&(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN (vt0.c0 IN ()) ELSE ((vt0.c0)-(NULL)) END FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0)||(vt0.c0)))) FROM vt0; -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((NULL) NOT NULL)))); -- 0ms;
SELECT NTILE((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE) OVER ( ORDER BY (((vt0.c0) IS FALSE) IN ()) ASC  NULLS LAST), ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)IS NOT(vt0.c0)))))OR(AVG(vt0.c0))))OR(MAX(vt0.c0, vt0.c0))))AND(vt0.c0 COLLATE RTRIM)), COUNT(*) OVER () FROM vt0;SELECT DISTINCT (((vt0.c0) IS TRUE) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY, (((('0.07917376250934527') BETWEEN (vt0.c0) AND ('-1833235027'))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.3906212445355314)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((- (vt0.c0)))) FROM vt0 WHERE (CAST((~ (0Xffffffffc2a602ee)) AS INTEGER)) GROUP BY (- (((vt0.c0)IS NOT(vt0.c0)))), (((~ (vt0.c0))) NOTNULL), (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING vt0.c0; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)>(-1344014791))) FROM vt0 WHERE (((NULL COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0 HAVING (((vt0.c0)IS NOT(NULL)) IN ()); -- 0ms;
SELECT DISTINCT COUNT(((((((((vt0.c0)AND(vt0.c0)))AND('|l6+菴S2e')))OR(vt0.c0)))OR(vt0.c0))) FILTER(WHERE x'3493') OVER () FROM vt0; -- 1ms;
SELECT vt0.c0 FROM vt0 WHERE (((((0X5d559e4b) NOT BETWEEN ('-2026377478') AND (NULL))) BETWEEN (IFNULL('1252538332', '-735326424')) AND (TRIM(0.05835331381295683, x'')))) LIMIT 428096450; -- 0ms;
SELECT DISTINCT (UPPER(DISTINCT vt0.c0) IN ()) FROM vt0 GROUP BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM HAVING (vt0.c0 IN ()) COLLATE RTRIM; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))), ((((vt0.c0)||(vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT))), ((((vt0.c0) NOTNULL))<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (TRIM(NULL, NULL) COLLATE BINARY); -- 0ms;
SELECT ALL TOTAL(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) OVER ( ORDER BY ((((vt0.c0)&(vt0.c0)))>=(vt0.c0 COLLATE NOCASE))  NULLS LAST) FROM vt0 ORDER BY ((TOTAL_CHANGES())|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE NOCASE FROM vt0 WHERE (((CASE WHEN x'e1f2' THEN '-463519317' WHEN NULL THEN x'' WHEN 0X281416a THEN x'ca78' END)IS(((x'')&('o9*9'))))); -- 0ms;
SELECT DISTINCT SUM('-778882436' COLLATE RTRIM COLLATE NOCASE) OVER ( ROWS BETWEEN CASE WHEN vt0.c0 COLLATE NOCASE THEN '-yTCEd' COLLATE NOCASE ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END PRECEDING AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FOLLOWING EXCLUDE NO OTHERS) FROM vt0 WHERE (HEX(json_valid(NULL))) ORDER BY (CASE WHEN vt0.c0 THEN '' ELSE vt0.c0 END IN ()) LIMIT -458838611 OFFSET 965293293;SELECT DISTINCT (CAST(vt0.c0 AS TEXT) IN ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('385681081')))) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0 IN ()))OR(vt0.c0)))AND(((vt0.c0)>>(0.5017145796122813)))) FROM vt0 WHERE (((((CASE WHEN NULL THEN 0.25223745564300315 END)AND('421902694')))OR((NOT ('2082773612'))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))>>(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (CASE WHEN x'27b5' COLLATE RTRIM THEN CASE WHEN 0xffffffff9147e4c9 THEN -1.983368593E9 ELSE 'p|p23lP]' END ELSE NULL COLLATE NOCASE END); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT (((0.18952245027124626)) NOT BETWEEN ((COUNT(0.14025000013382738))) AND ((vt0.c0 COLLATE BINARY))), MIN(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'f07c')))AND(vt0.c0)) COLLATE NOCASE), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT MIN((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '1560152478')))) FROM vt0; -- 0ms;
SELECT DISTINCT ((('-1398563265')) BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY))), (vt0.c0 IN (ABS(DISTINCT vt0.c0))), (((vt0.c0, -1265779348, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), ((((0.7534487932076863)AND(vt0.c0)))OR('913422332')), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((NOT (vt0.c0)), ((vt0.c0)<=(x'')), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 WHERE ((x'' IN (-1265779348, 'T<')) COLLATE BINARY); -- 0ms;
SELECT ALL ((((CAST(vt0.c0 AS TEXT))AND(vt0.c0)))OR(((vt0.c0) NOT NULL))) FROM vt0 WHERE (((CAST(NULL AS TEXT))!=((('') NOT BETWEEN ('905237200') AND (1.785718292E9))))); -- 0ms;
SELECT ALL ((vt0.c0)IS(vt0.c0)) COLLATE NOCASE FROM vt0 LIMIT -1350029324; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<<(vt0.c0)))GLOB(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ROW_NUMBER() OVER (), CAST(vt0.c0 AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)+(vt0.c0)))))AND(vt0.c0)) FROM vt0 LIMIT 702951126 OFFSET 390288502; -- 0ms;
SELECT DISTINCT (NOT (GROUP_CONCAT(vt0.c0))), (vt0.c0 IN ()), (((vt0.c0) IS FALSE) IN ((~ (vt0.c0)), vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((CAST(x'79c7' AS REAL))IS NOT(CAST('' AS REAL)))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)AND(rtreenode(vt0.c0, vt0.c0))) FROM vt0 WHERE ((((+ ('335251033'))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((MIN(vt0.c0))&((((vt0.c0))<>((vt0.c0))))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND ('days')), (((vt0.c0, ((vt0.c0) NOT NULL), ((vt0.c0) IS FALSE)))<>((COUNT(vt0.c0), UNICODE(NULL), (~ (vt0.c0))))) FROM vt0 WHERE (('-1349415405' IN ()) COLLATE NOCASE) LIMIT -1511067883 OFFSET -243343358; -- 0ms;
SELECT ALL 0X5a763e74, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN (vt0.c0 IN (vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END, (((- (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)<(vt0.c0)))) FROM vt0 WHERE ((((NULL, -1.73462891E9, NULL, x'', NULL)) NOT BETWEEN ((((x'') IS FALSE), ((NULL) NOT BETWEEN ('-2056505929') AND (2.125044572521828E-4)), ((((1136409311)AND(NULL)))AND(x'')), CAST(x'' AS INTEGER), (('-2056505929')|(x'')))) AND (((('1326946800')||(x'')), 0x3e9bd207, ((((((((NULL)AND('')))OR(0.398720987492563)))AND(1042372811)))OR(0.3720695513567672)), (((('}%')OR(NULL)))AND(x'')), CASE WHEN 'A*哈ꎽ' THEN NULL ELSE NULL END)))); -- 0ms;
SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL), vt0.c0, ((((NOT (vt0.c0)), ((vt0.c0)>=('-1536291788')), CASE WHEN vt0.c0 THEN 0.6264228708802986 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '214128030' END))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((x'') BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY))) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0 WHERE (CASE '1985518725' COLLATE RTRIM  WHEN NULL COLLATE RTRIM THEN ((x'')<<(-1.059797734E9)) WHEN CAST(x'7d74' AS REAL) THEN NULL WHEN (0.8734676931350372 IN ()) THEN CASE x'd0e1'  WHEN 0xffffffffa80b595d THEN '1811737756' WHEN x'972a' THEN 0.663484852117872 WHEN x'0a37' THEN '-316468794' ELSE 'e	' END WHEN ((NULL) NOTNULL) THEN ((x'd572') NOT NULL) WHEN (NULL IN (NULL)) THEN ('556730363' IN (NULL, 0.327874097551342)) ELSE CASE WHEN '!nwu' THEN '|&,q' END END) ORDER BY IFNULL(DISTINCT vt0.c0, '333821386') DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ (TOTAL(-1.660580619E9))) FROM vt0 WHERE ((- (NULL))); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((~ ((('') BETWEEN ('K	b/j+ᯛl') AND (NULL))))); -- 0ms;
SELECT ALL json_array(((vt0.c0)&(vt0.c0)), CAST(vt0.c0 AS TEXT)), ((SUM(vt0.c0))==((((1776592327)) BETWEEN ((vt0.c0)) AND ((-1075501482))))), COUNT(*), GROUP_CONCAT(HEX(vt0.c0)) OVER (), highlight(((vt0.c0) IS FALSE), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((((((0x491bf86a)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)+(vt0.c0))) FROM vt0 WHERE ((((0.8277370998612779)) BETWEEN (((- (x'01eb')))) AND (((- ('T0?E'))))));SELECT DISTINCT UNICODE(CAST(vt0.c0 AS TEXT)) FROM vt0 WHERE ((((NOT (NULL))) NOT BETWEEN (x'4a05') AND (((NULL) BETWEEN (NULL) AND ('0.2069229925105991'))))); -- 0ms;
SELECT (~ (0.5827735691434979)) FROM vt0 WHERE ((((((NULL)LIKE(x'0177')), CASE WHEN 0X743fc51f THEN x'' ELSE x'3196' END, CAST('' AS INTEGER)))<(('385681081' COLLATE RTRIM, ((x'') NOT BETWEEN ('-1e500') AND (NULL)), CASE WHEN 0.8973681535270526 THEN x'' ELSE 0.5770768221030936 END)))) GROUP BY CAST('-1475651235' AS REAL); -- 0ms;
SELECT (('0.509338956386176') NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'')))AND(vt0.c0))) AND ((~ (vt0.c0)))), ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (vt0.c0)))), LOWER(DISTINCT (((x'9409'))>=((vt0.c0)))) FROM vt0 WHERE (((((('#i1<Kj!', NULL, NULL))<((x'', NULL, '0.6886964692273323'))))/((x'' IN (0xffffffffc44f4c68))))); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM vt0 WHERE ((NOT ((- (-43645586))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)=(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)>>(vt0.c0)))) FROM vt0 WHERE ((((x'')) BETWEEN ((((NULL) IS TRUE))) AND ((CASE x''  WHEN 'Ty_谹>h' THEN NULL WHEN x'' THEN x'a8f5' WHEN '625690152' THEN NULL WHEN '3,' THEN x'fe9b' WHEN x'fbee' THEN '-1833235027' END)))) ORDER BY CASE WHEN INSTR(vt0.c0, vt0.c0) THEN (+ (vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END  NULLS FIRST; -- 0ms;
SELECT ((vt0.c0)-(vt0.c0)) COLLATE RTRIM COLLATE RTRIM FROM vt0 WHERE (CAST(((x'')OR(0.9371272331723667)) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((vt0.c0)!=(((vt0.c0)>=(vt0.c0)))) FROM vt0 WHERE ((((((0.7702842837768789)) NOT BETWEEN ((x'')) AND (('1628717697'))))>>(4.21902694E8))); -- 0ms;
SELECT DISTINCT RTRIM((((vt0.c0))<=((vt0.c0)))), vt0.c0, ((TYPEOF(vt0.c0))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 ORDER BY ((((~ (vt0.c0)), ((vt0.c0)>(vt0.c0)), x''))>((((vt0.c0)+(vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT NULL)))) DESC; -- 1ms;
SELECT DISTINCT CASE LTRIM('\n	', vt0.c0)  WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) NOTNULL) END FROM vt0; -- 0ms;
SELECT (((vt0.c0) NOTNULL) IN ()) FROM vt0 WHERE ((((((((((('') BETWEEN (x'') AND ('[{䅕fwI')))AND(CAST(NULL AS TEXT))))AND(((NULL)OR(0.6354029771109516)))))OR(('1495476506' IN ()))))OR(((x'') BETWEEN (943156797) AND ('577017839'))))); -- 0ms;
SELECT DISTINCT CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 END END, ((((vt0.c0) BETWEEN (vt0.c0) AND (x''))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)GLOB(vt0.c0)))), ((((vt0.c0, vt0.c0, vt0.c0))>=((NULL, vt0.c0, vt0.c0))) IN ()), (((NOT (vt0.c0)))>(COUNT(*))), (((vt0.c0)<(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT CASE WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END FROM vt0 LIMIT 229002372 OFFSET -943785630; -- 0ms;
SELECT ALL (LIKELY(vt0.c0) IN (CAST(vt0.c0 AS INTEGER), ((vt0.c0) IS TRUE))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, COUNT('F0'), ((((((((vt0.c0)OR(vt0.c0)))OR(-1.498188965E9)))AND(vt0.c0)))OR(vt0.c0))))), (+ (MAX(vt0.c0))), vt0.c0 FROM vt0 WHERE (((NULL)IS(((NULL)OR(-1.110431784E9))))); -- 0ms;
SELECT HEX(DISTINCT ((vt0.c0)IS(vt0.c0))), COUNT((vt0.c0 IN ())), TOTAL(ABS(vt0.c0)) OVER () FROM vt0; -- 0ms;
SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 GROUP BY TRIM(DISTINCT ((vt0.c0)OR(0.22146183021708565)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))); -- 0ms;
SELECT DISTINCT ((NULLIF(DISTINCT vt0.c0, vt0.c0)) NOT BETWEEN ((((0xffffffffc0d4c51a)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOTNULL))), COUNT(((((((((0.7161482923400379)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) OVER (), ((vt0.c0) NOT NULL) FROM vt0 LIMIT -805539516; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS BLOB), (~ (((NULL) NOT NULL))), ((((vt0.c0))<((vt0.c0))) IN ()) FROM vt0 WHERE ((+ (((0X2b57ac79)AND(NULL))))) GROUP BY vt0.c0 HAVING IFNULL(((vt0.c0) NOT NULL), (~ (vt0.c0))); -- 0ms;
SELECT (- ((('peS~soV&9') ISNULL))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(NULLIF(vt0.c0, vt0.c0) AS BLOB) FROM vt0 WHERE (((((x'b536') IS FALSE)) ISNULL)); -- 0ms;
SELECT TRIM(vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (0Xfffffffffbf333b4); -- 0ms;
SELECT DISTINCT 0X6c866d29 FROM vt0; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS BLOB)) NOT NULL) FROM vt0 ORDER BY vt0.c0; -- 0ms;
SELECT DISTINCT (- ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))))), (CAST(vt0.c0 AS INTEGER) IN ()), x'' FROM vt0; -- 0ms;
SELECT SUM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)==(vt0.c0)) AS TEXT) FROM vt0 WHERE (CAST((('C') BETWEEN (1042372811) AND (0.5114605617758353)) AS INTEGER)) ORDER BY x'' COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT vt0.c0, vt0.c0, '-426617465' FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((('-1023849966', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN (((vt0.c0))>=((vt0.c0))) THEN CASE '-1441623628'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c0 THEN (+ (vt0.c0)) WHEN 1.26655246E9 THEN CAST(vt0.c0 AS BLOB) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (~ (vt0.c0)) ELSE (+ (vt0.c0)) END, ((((vt0.c0)IS(vt0.c0))) NOT NULL), vt0.c0 FROM vt0 WHERE (((((((((((NULL)>(x'c259c9ef')))OR((((NULL))>((x'148a4b93'))))))AND(0.026863941916232315 COLLATE BINARY)))AND(((('-1440976747'))<=((0.5371261056813834))))))OR(1898490846 COLLATE RTRIM))); -- 0ms;
SELECT vt0.c0 FROM vt0 LIMIT 555620048; -- 1ms;
SELECT DISTINCT (NOT ((vt0.c0 IN ()))) FROM vt0 WHERE (((((0.5071572012233064)>=(x'')))>(''))); -- 0ms;
SELECT DISTINCT (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(COUNT(*) AS TEXT), (+ ((NULL IN ()))) FROM vt0 WHERE (('JHD9i5+K' COLLATE BINARY IN (((' 3') NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT 0.046480269206364166, (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CUME_DIST() OVER () FROM vt0 WHERE (((LOWER('-836275809')) BETWEEN (((0.9355125019454535)||(x'fcd9'))) AND (CHAR(-6.27028176E8)))); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT CAST(vt0.c0 AS TEXT)) FROM vt0 WHERE (((((((0.2596002155730074)AND(x'')))OR('i)3zH,'))) NOT BETWEEN (((0xffffffffafee2311) NOT BETWEEN ('-1331438772') AND (NULL))) AND (((NULL)IS(1.004697413E9))))); -- 0ms;
SELECT ALL CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN AVG(vt0.c0) WHEN LAST_INSERT_ROWID() THEN CAST(vt0.c0 AS INTEGER) WHEN vt0.c0 THEN (- (vt0.c0)) END FROM vt0 WHERE (((('-1')) BETWEEN ((CAST(-2.8692208E8 AS REAL))) AND (((('-1637718530')<=('훉_e8Ul')))))); -- 0ms;
SELECT ALL (vt0.c0 IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE ((- ((((('~7')AND(x'')))AND('157126587'))))) GROUP BY (- ((('-1983368593') BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE LIMIT -905419996; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))AND(((x'') NOTNULL))), (- ((vt0.c0 IN ()))), (NOT ((((vt0.c0)) NOT BETWEEN ((0X7916486b)) AND ((vt0.c0))))) FROM vt0 WHERE (((((0xffffffffcc570d32)>(x''))) IS FALSE)) LIMIT -1 OFFSET -837695672; -- 0ms;
SELECT DISTINCT ((TYPEOF(vt0.c0))|(MAX('1472671329'))) FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))!=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (0.6621539755258533 IN ())  NULLS FIRST; -- 0ms;
SELECT ALL (('934279971')LIKE(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE ((((0xfffffffff33b940e)) BETWEEN ((NULL)) AND (('VqO' COLLATE BINARY)))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
