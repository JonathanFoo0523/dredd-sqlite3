-- Time: 2024/06/07 06:30:06
-- Database: database69
-- Database version: 3.40.0
-- seed value: 2828843469
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 2ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, languageid="lid"); -- 1ms;
UPDATE OR FAIL vt1 SET (lid)=(0.9093257066622188); -- 0ms;
DROP TABLE IF EXISTS vt0; -- 9ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '10905'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 303766611); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '15278'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1778863949);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-773908922,12');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 44677589); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (NULL, NULL, 0.18950146404252466); -- 0ms;
INSERT OR IGNORE INTO vt1(lid) VALUES ('1744830433'), (0.6660898566266613), (NULL); -- 17ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES ('1744830433', ' <R\r'), (1341090521, x''), (NULL, '2031484784'); -- 1ms;
ANALYZE vt1; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, content=''); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (0.8055969857699572, 0.6665861171838351); -- 0ms;
INSERT OR FAIL INTO vt1(c1, lid) VALUES (x'', '1341090521'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 4ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 9223372036854775807);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=0x7915ff70; -- 1ms;
PRAGMA main.integrity_check; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 6ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.31200202498583773 WHERE CASE vt1.lid  WHEN vt1.c1 COLLATE RTRIM THEN x'' END; -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT OR IGNORE INTO vt1(lid, c0) VALUES (NULL, '2031484784'); -- 1ms;
UPDATE OR ABORT vt1 SET c1='!s8 ' WHERE ((CASE vt1.c1  WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END) ISNULL); -- 1ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1384032269); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 15ms;
INSERT OR IGNORE INTO vt1(c0, c1, lid) VALUES (x'', -703180438, x''); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (' <R\r', '-773908922', NULL), (x'', '1744830433', '2036468539'), (NULL, 0.5591460094203607, x''); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL); -- 7ms;
PRAGMA temp.defer_foreign_keys = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=')r'; -- 6ms;
UPDATE OR ABORT vt1 SET c0=x'' WHERE ((('0.5591460094203607') NOT BETWEEN (x'') AND (vt1.lid)) IN (vt1.lid)); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '15395'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE vt1 SET (c0, c0)=(0.2556171273850878, x'') WHERE vt1.c0; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'c525' WHERE vt1.lid; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INTEGER ); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-694445064'); -- 0ms;
CREATE TEMPORARY TRIGGER IF NOT EXISTS tr0 BEFORE INSERT ON t0 WHEN ((((t0.c0)*(t0.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND (((t0.c0)/(t0.c0)))) BEGIN DELETE FROM t0 WHERE (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));END; -- 0ms;
UPDATE OR FAIL t0 SET c0='-773908922' WHERE (((t0.c0)) BETWEEN (('0.2556171273850878')) AND ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))); -- 0ms;
REINDEX  vt0; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt1 SET lid=1.778863949E9; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c1, c1, lid)=(NULL, NULL, 0.4441411170168087) WHERE NULL; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 1ms;
UPDATE OR IGNORE vt1 SET (lid)=(1292933301); -- 2ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (1341090521); -- 10ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 11ms;
UPDATE OR IGNORE vt1 SET lid='1246043052' WHERE ((+ (vt1.lid)) IN ()); -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR FAIL INTO vt1(lid, c1) VALUES (0.2556171273850878, 0.9093257066622188), (NULL, NULL), (NULL, '-703180438'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=(x'8719') WHERE 0.43512027990591473 COLLATE RTRIM; -- 1ms;
REINDEX  vt0; -- 0ms;
INSERT OR FAIL INTO vt1(lid, c0) VALUES (x'', 'Sg'); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (x'', x'', x'ec25'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (x'', ''); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (0.7583998869893177); -- 1ms;
INSERT OR ABORT INTO vt1(c1) VALUES (2.036468539E9), ('1341090521'), (NULL); -- 1ms;
INSERT OR IGNORE INTO vt1(c1, lid) VALUES (x'', '1072260747'); -- 1ms;
UPDATE vt1 SET c1=x'', c1=x'a11d', c0='3tB?r' WHERE CAST(((NULL)+(vt1.lid)) AS NUMERIC); -- 0ms;
INSERT OR REPLACE INTO vt1(lid, c1) VALUES (x'3feed55c', -1737520239), ('-1735695636', '1072260747'), (NULL, 2.031484784E9); -- 0ms;
INSERT OR IGNORE INTO vt1(lid) VALUES (x''); -- 0ms;
UPDATE OR REPLACE vt1 SET c1=x''; -- 1ms;
INSERT OR FAIL INTO vt1(c0, c1, lid) VALUES ('', x'cf82', x''); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.7830101040107917); -- 22ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-842947400'), (0.8055969857699572), (0x6c7ef832); -- 10ms;
ANALYZE sqlite_master; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 7ms;
UPDATE OR REPLACE vt1 SET (c1)=(''); -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=2.036468539E9, c1=NULL; -- 3ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE vt1 SET c0=0x7e41ee03; -- 0ms;
INSERT OR IGNORE INTO vt1(lid, c1) VALUES ('-694445064', '^]'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '28156'); -- 0ms;
UPDATE vt1 SET (lid)=(x'ba4f'); -- 2ms;
UPDATE OR IGNORE vt1 SET lid=0.7830101040107917; -- 1ms;
INSERT OR FAIL INTO vt1(c1) VALUES (x'3404'), (x''), (0.4680755874632273); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.2556171273850878; -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 1ms;
UPDATE OR IGNORE vt1 SET lid=0.5430117705420975 WHERE (((vt1.c0 IN (vt1.c0))) ISNULL); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT LIKELY(vt1.lid) FROM vt0 GROUP BY '-872569465';SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((NULL) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) DESC), CASE WHEN (~ (vt1.c0)) THEN (((vt0.c0, vt1.lid, vt1.c0))<>((vt1.c1, vt1.lid, vt0.c0))) WHEN ((vt1.c0)<(0xffffffffc9c336f7)) THEN (vt1.c1 IN (vt0.c0)) WHEN ((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))OR(vt0.c0)))AND(vt1.lid)) THEN CAST(vt0.c0 AS NUMERIC) ELSE CAST(NULL AS REAL) END, RANK() OVER (), ((((vt1.lid)-(vt0.c0)))GLOB(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))), TIME((((vt0.c0, vt1.lid, vt1.c0)) NOT BETWEEN ((vt1.lid, vt0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt1.lid))), ((vt1.lid)LIKE(vt1.c0)), CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) FROM vt1, vt0 WHERE ((- (((x'bb1c')-(0.8102903397108696))))); -- 0ms;
SELECT ALL ((MAX(vt0.c0)) BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (0.6660898566266613)) FROM vt0;SELECT DISTINCT CAST(vt1.c1 AS TEXT) COLLATE BINARY FROM vt0, vt1; -- 1ms;
SELECT DISTINCT x'' FROM vt1, vt0 WHERE (((((((((CASE x''  WHEN '-872569465' THEN NULL END)AND((('0.4680755874632273') BETWEEN (x'd361') AND ('1246043052')))))OR((x'' IN (x'')))))AND(((((NULL)OR(NULL)))OR('360420754')))))AND(((((NULL)OR(488456366)))OR(NULL))))); -- 0ms;
SELECT ALL (+ ((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt1 WHERE (((((NULL)%('*讑_C'))) NOT BETWEEN ((((('Z0Z<HEW~')OR('')))OR(x''))) AND ((x'a567' IN ()))));SELECT DISTINCT (~ ((NOT (vt0.c0)))) FROM vt1 WHERE (x'9efd');SELECT ALL ((json_array_length(vt0.c0))&((('360420754')<(NULL)))) FROM vt1 WHERE ((((((~ (NULL)))AND(load_extension(' #*wcMf('))))OR('1778863949')));SELECT DISTINCT ((vt1.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0) AND (vt1.c0 COLLATE BINARY)) FROM vt1, vt0 WHERE ((- (((NULL) NOTNULL)))); -- 0ms;
SELECT ALL ('' IN ()) FROM vt0; -- 0ms;
SELECT (((vt1.c0)) BETWEEN (((((vt1.lid, 0.43250535711015337, vt0.c0)) BETWEEN ((-6.94445064E8, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.lid, vt1.c0))))) AND ((json_valid('1707337864')))), LIKE(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c1)), CAST(vt1.c0 AS REAL)), ((((vt1.lid)<(vt1.c0))) BETWEEN (LTRIM(vt1.c1)) AND (((vt1.c0) IS TRUE))) FROM vt0;SELECT ((vt1.lid)==(vt1.c0)), (((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(1e500)))AND(vt1.c1))))>=((((vt1.c1) IS TRUE)))), ((((vt1.c1)OR(vt0.c0)))OR(vt1.c0)) COLLATE RTRIM, AVG(((vt1.c0)GLOB(vt1.lid))) OVER (), ((vt1.c0)>(vt0.c0)) COLLATE BINARY COLLATE BINARY FROM vt0;SELECT COUNT(CHAR(x'', vt0.c0, vt1.c0) COLLATE NOCASE) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND CASE CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END  WHEN ((vt0.c0) ISNULL) THEN LOWER(vt1.c1) END PRECEDING), ((CAST(vt0.c0 AS NUMERIC)) IS FALSE), FIRST_VALUE((((NULL, vt1.c0, vt1.c1)) NOT BETWEEN ((NULL, vt1.lid, vt1.lid)) AND ((vt1.c1, vt1.lid, '-659136800'))) COLLATE NOCASE) OVER () FROM vt1 WHERE (((((x'2489') BETWEEN (-1.737520239E9) AND (0.8528891297916358))) ISNULL));SELECT DISTINCT MIN(((((vt1.lid)AND(vt0.c0)))OR(vt1.c1))), (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))), AVG(vt1.lid) FROM vt0;SELECT (((vt0.c0)<=(0.5997528828121091)) IN (((((((((vt0.c0)AND(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)))AND(vt1.lid)))) FROM vt1, vt0 GROUP BY (((vt0.c0, (((vt1.c1, vt1.lid, vt1.c1)) NOT BETWEEN (('1835551348', vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))), vt1.lid, x'', ((((vt1.c0)OR(vt1.c1)))OR('0+'))))<=(((((vt1.c0))<((x''))), vt1.c1 COLLATE NOCASE, ((vt1.lid)IS NOT(vt1.lid)), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)), ((x'180d') BETWEEN (vt0.c0) AND (vt1.c0))))) HAVING vt1.c0; -- 0ms;
SELECT DISTINCT LAG(((vt1.lid) BETWEEN (((((vt1.c1)OR(vt0.c0)))AND(vt1.c1))) AND ((((vt1.lid))>=((vt1.c1))))), ((vt1.lid COLLATE NOCASE)>(MAX(vt1.c0, vt1.lid, vt1.lid, vt1.lid, vt1.c0, vt0.c0))), CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) OVER (), COUNT(*), ((((vt1.c1) ISNULL))&(((vt1.lid) IS FALSE))) FROM vt0, vt1 ORDER BY vt0.c0 ASC; -- 0ms;
SELECT CAST(vt1.lid AS REAL) FROM vt1, vt0; -- 0ms;
SELECT (((((((vt1.c1)OR(vt1.lid)))AND(vt0.c0)), ((vt0.c0) NOTNULL), ((vt1.c1)GLOB(vt1.c1))))>=(((NOT (vt1.lid)), CAST('' AS TEXT), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) FROM vt0, vt1 WHERE ((- (((NULL)AND(NULL))))); -- 0ms;
SELECT DISTINCT (+ (LIKE(vt1.c1, vt1.lid, '~'))) FROM vt1 ORDER BY CASE WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.c1 AS INTEGER) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((('1607939354'))<((vt1.lid))))<=(COUNT(*))), vt1.c0, (((+ (vt1.c0))) BETWEEN ((NOT (vt1.lid))) AND ((vt1.lid IN ()))) FROM vt1 WHERE ((('643793046')GLOB(((NULL) IS TRUE)))) LIMIT 1627850996; -- 0ms;
SELECT DISTINCT ((((vt1.c0 COLLATE BINARY)OR(((((0.13377239958549136)AND(NULL)))AND(vt0.c0)))))AND(TOTAL_CHANGES())) FROM vt1 FULL OUTER JOIN vt0 ON (NOT (vt0.c0)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT MIN(TRIM(DISTINCT vt1.c0)) FROM vt0;SELECT DISTINCT (((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)) IN ((~ ('z0z<hew~')))), ABS(NULL), UNICODE('1820260402') FROM vt1; -- 0ms;
SELECT TOTAL(((((vt1.lid)OR(vt1.lid)))OR(vt1.c0))) FROM vt1, vt0 WHERE ('?g5D'); -- 0ms;
SELECT (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()), (((NULL)) BETWEEN (((+ (vt1.c1)))) AND ((CAST(vt1.lid AS NUMERIC)))), COUNT(*) OVER () FROM vt1 WHERE ((((((NULL)>('')), ((((0xffffffffffde9ee2)AND(0.5997528828121091)))AND('-580450737')), ((((0X79620b3b)AND(0.4680755874632273)))AND('1072260747'))))!=((((x'') IS FALSE), ((NULL) BETWEEN ('-2065653751') AND ('qN')), (x'' IN ('')))))) LIMIT -531971579; -- 0ms;
SELECT NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))), AVG((~ (vt1.lid))) OVER (), ((((vt1.c0)-(vt1.lid))) NOT BETWEEN (json_quote(vt1.c0)) AND (((vt1.c1)%(vt0.c0)))) FROM vt1;SELECT ALL ((((vt1.c1)OR((vt0.c0 IN ()))))AND(MAX(vt1.c1))), ((vt1.c0)*(vt0.c0 COLLATE RTRIM)), (- ('')) FROM vt0 LIMIT 2081666758 OFFSET -1188376485;SELECT ALL (((vt1.c1 IN (vt1.lid, vt0.c0)))/(LIKELIHOOD(vt1.lid, 0.757911071579702))) FROM vt1 WHERE (((('')) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((((('-1402151549')AND(x'')))OR(NULL))))));SELECT DISTINCT (((vt1.c1)*(vt0.c0)) IN ()) FROM vt0, vt1 WHERE ((((((((((((1.341090521E9)) NOT BETWEEN ((NULL)) AND (('877154108'))))OR(((0.8071610940900983) NOT BETWEEN (NULL) AND (NULL)))))OR((+ (NULL)))))AND((~ ('kk')))))OR(SQLITE_COMPILEOPTION_GET(428979449)))); -- 0ms;
SELECT DISTINCT CASE vt0.c0 COLLATE NOCASE  WHEN ((vt1.c1)LIKE(vt1.c0)) THEN ((vt1.c1)||(vt1.c0)) ELSE ((((vt1.c1)OR('''[#Af')))OR(vt1.c0)) END FROM vt0;SELECT ALL SUM((~ (vt1.c0))) FROM vt0, vt1 WHERE (((((-1.737520239E9) IS FALSE))=((('-773908922')LIKE(x'1764'))))); -- 0ms;
SELECT DISTINCT CAST(HEX(vt1.c0) AS REAL) FROM vt0, vt1 WHERE (((((0xfffffffff9821431)==(NULL))) BETWEEN (((NULL) ISNULL)) AND (((((((((0.7830101040107917)OR(0.6852498412034321)))OR(NULL)))OR(x'a956')))OR(x''))))) LIMIT 643793046; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 LIMIT 1993953360; -- 1ms;
SELECT ALL CAST(((vt0.c0) NOT NULL) AS NUMERIC) FROM vt1;SELECT vt1.c1 FROM vt1, vt0; -- 0ms;
SELECT AVG((+ (vt1.lid))) FROM vt0 WHERE (((('\*\r简~')) NOT BETWEEN ((((NULL) NOTNULL))) AND ((CASE 0.08798932047190888  WHEN NULL THEN '' END)))) ORDER BY ((((vt1.lid) IS FALSE))>=(((((vt1.c0)OR(vt1.lid)))OR('428979449')))) ASC  NULLS LAST;SELECT DISTINCT CASE AVG(vt0.c0)  WHEN HEX(vt1.c0) THEN TRIM(DISTINCT vt1.c1, vt1.lid) WHEN CAST(vt1.lid AS REAL) THEN (+ (vt1.c0)) WHEN vt1.lid COLLATE RTRIM THEN ((vt1.c1)LIKE(vt0.c0)) END, CASE WHEN ((vt0.c0)<<(vt1.c1)) THEN NULLIF(vt0.c0, vt1.lid) WHEN vt1.lid THEN (vt1.lid IN (vt0.c0)) WHEN (((vt1.lid)) NOT BETWEEN ((vt1.c1)) AND ((vt1.lid))) THEN (('N_fX\hwP')%(vt0.c0)) ELSE AVG(vt1.lid) END, (CASE WHEN vt1.c1 THEN '428979449' END IN ()) FROM vt1 LIMIT 876079878 OFFSET 33228445;SELECT DISTINCT ((((vt0.c0 IN ())))<=(((vt1.lid IN ())))), NULL, CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC) FROM vt0;SELECT NULL, vt0.c0, (+ ('xN7')) FROM vt0 LIMIT 1835551348 OFFSET 1849246865; -- 0ms;
SELECT MIN(((1292933301) IS TRUE)) FROM vt0 WHERE (((NULL)&(CAST(NULL AS TEXT)))) GROUP BY (ABS(DISTINCT vt1.c1) IN (((vt1.c0)/(vt0.c0)))), (((vt0.c0)) BETWEEN ((vt1.lid)) AND (((((x'3dbf', vt0.c0, vt0.c0))<=((vt1.c1, vt0.c0, vt1.lid)))))), (((((((((~ (vt1.lid)))AND(json_patch(vt0.c0, vt1.lid))))OR(0.8102903397108696)))OR(IFNULL(DISTINCT vt1.c1, vt1.c1))))AND(''));SELECT (((NULL, vt0.c0 COLLATE BINARY, vt1.c0))<=((CASE WHEN vt1.c1 THEN NULL ELSE vt1.c0 END, MAX(vt0.c0), ((vt1.c0)>>(vt1.c0))))) FROM vt0 WHERE (((('1350043502' IN ())) NOT NULL));SELECT ALL (((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)), NULLIF(vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))))>((CAST(vt1.c1 AS TEXT), ((vt1.c0)-(vt1.lid)), (- (''))))), (((+ (vt1.lid)))!=(CASE WHEN 0x53706ed4 THEN vt1.c0 ELSE vt1.c0 END)), COUNT(*) FROM vt0 WHERE ((((((x'', NULL, ''))<=((NULL, 0.10969205275297722, '-503596132')))) IS TRUE));SELECT GROUP_CONCAT(vt1.lid) OVER () FROM vt0 GROUP BY (((LIKELY(vt1.lid)))<=((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END))) HAVING (+ (CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.c1 END));SELECT DISTINCT (~ (CASE WHEN vt1.lid THEN NULL WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)), NTH_VALUE((((NOT (vt0.c0))) IS FALSE), CASE (+ (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN NULL WHEN ((vt0.c0) NOT BETWEEN (x'') AND (NULL)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(x'c2f1' AS INTEGER) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)GLOB(vt0.c0)) END) OVER ( ROWS BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.15245827211610186 END IN (vt0.c0)) PRECEDING AND TYPEOF(((vt0.c0)&(vt1.c1))) PRECEDING), RANK() OVER () FROM vt0 GROUP BY (~ (LIKELIHOOD(DISTINCT vt1.c1, 0.2529993829031687))) HAVING ((((vt1.c1) IS FALSE)) IS TRUE);SELECT ((((vt0.c0) ISNULL)) NOT NULL) FROM vt1;SELECT (((+ (vt1.lid))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt1.lid COLLATE BINARY)), MAX(CAST(vt1.c1 AS INTEGER)) COLLATE BINARY, (((((((((vt1.c0)OR(vt1.lid)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)) IN ()) FROM vt0, vt1 WHERE ((((CASE WHEN x'd6d5' THEN '145049519' END))>(((- (0.5819874408869283)))))); -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.lid AS REAL) AS BLOB) FROM vt0, vt1 WHERE (((((0.41156960259262665)>>(0.09750222098333206))) IS TRUE)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c0 COLLATE RTRIM) COLLATE BINARY FROM vt1, vt0 WHERE (((x'' COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT DISTINCT LAG((- (UPPER(vt0.c0))), json_array(vt1.c1, vt1.lid) COLLATE BINARY, CAST(vt1.lid COLLATE NOCASE AS NUMERIC)) OVER () FROM vt0, vt1 WHERE ((((~ ('m'))) BETWEEN (IFNULL(NULL, x'4904323a')) AND (((('-531971579', x'', 0.025897883078144224, x'', x''))>((NULL, x'', '-694445064', NULL, x'cda5')))))); -- 0ms;
SELECT DISTINCT MIN((((vt0.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c1)))) FROM vt0, vt1 WHERE (CAST(((NULL) NOT BETWEEN (x'') AND (NULL)) AS TEXT)); -- 0ms;
SELECT ALL (NOT (CAST(vt0.c0 AS REAL))) FROM vt0, vt1 WHERE (((((((((CASE WHEN '0.31200202498583773' THEN -1363461257 ELSE '-1505328672' END)AND(((0.7979031716615594)||('2031484784')))))AND((('-1188376485') NOTNULL))))OR(((NULL)||(NULL)))))AND(((((NULL)OR(x'')))OR('Ꚍ]'))))); -- 1ms;
SELECT ALL (((+ (vt0.c0))) ISNULL) FROM vt1, vt0 WHERE ((((('') BETWEEN (x'3e8c') AND (NULL)))<((2081666758 IN (0X3fe9668b, 0.7495175894420063))))); -- 0ms;
SELECT x'' FROM vt0; -- 0ms;
SELECT ALL ((((((((((vt1.c1) IS FALSE))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 END)))OR(((vt1.c1) NOTNULL))))OR(((((vt1.c0)OR(vt1.lid)))AND(vt0.c0)))))AND((vt1.lid IN ()))), UPPER(DISTINCT ((vt0.c0)<>(vt1.lid))), (~ (((((0.17242153160080276)OR(vt1.lid)))AND('')))) FROM vt0, vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt1.c1 END) BETWEEN (((x'')==(vt1.c1))) AND (CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END)), ((vt1.c1 COLLATE RTRIM) NOT NULL), (~ (((vt1.c1) IS FALSE))) FROM vt1 WHERE (((CAST('-2187550' AS NUMERIC))*((((0.7717639181639651))<=((NULL))))));SELECT CASE (- (vt1.lid))  WHEN SQLITE_COMPILEOPTION_GET(vt1.c0) THEN (NOT (vt1.c1)) WHEN MAX(NULL) THEN ((vt1.lid)<>(vt0.c0)) WHEN (vt1.c0 IN ()) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) NOT NULL) THEN ((vt1.c0)!=(vt1.c1)) WHEN ((('-445101165', vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c1, vt1.lid, 0x6987fdae))) THEN ((vt1.lid)>=(vt1.c0)) END, x'e66c', COUNT(*) OVER () FROM vt1, vt0 WHERE (((~ (NULL)) IN (((x'')&(0x1574fd28)), (((x'', '660954648', NULL)) NOT BETWEEN ((NULL, x'', '1707337864')) AND ((x'123f2fa4', 167206212, x'30c5')))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1 WHERE (((('')|('-1882820534')) IN ())) GROUP BY (CAST(vt1.c0 AS TEXT) IN ()), (((vt1.c1, vt1.c0, NULL, vt1.c1, vt1.lid)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), vt1.lid, ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)), ((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)))) AND ((LENGTH(vt1.lid), ((vt0.c0)IS NOT(vt1.c0)), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c1 IN ()), LIKELY(DISTINCT vt1.c1)))), CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid END COLLATE BINARY COLLATE BINARY, '' COLLATE NOCASE, CAST((- (vt0.c0)) AS REAL);SELECT DISTINCT (((vt1.c0)>>(vt1.c1)) IN ((((vt1.lid))<=((vt1.lid))), vt1.lid COLLATE RTRIM)) FROM vt1 LIMIT 796460120 OFFSET -9108450; -- 0ms;
SELECT NTILE(')4Xl*Z,') OVER () FROM vt0, vt1 WHERE ((((((0xffffffff92f975ee)) NOT BETWEEN ((',B')) AND ((NULL)))) IS FALSE)); -- 0ms;
SELECT DISTINCT (+ ((vt1.lid IN ()))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT ((vt1.lid)OR(vt1.lid)) COLLATE RTRIM FROM vt1, vt0 GROUP BY (((vt1.c1 IN (NULL, vt0.c0)))|(x'')) HAVING ((((((((((((vt1.lid)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR('1849246865')))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))AND((('287391201') IS TRUE))); -- 0ms;
SELECT DISTINCT ((((vt1.c1)IS(vt1.lid))) ISNULL) FROM vt1 NATURAL JOIN vt0; -- 0ms;
SELECT ALL COUNT(0x4e8a7372), (- ((- (vt1.c0)))), (+ (vt1.lid COLLATE BINARY)) FROM vt1, vt0; -- 0ms;
SELECT ((((((1.67206212E8)+(x'')))OR(CAST(vt1.c0 AS TEXT))))OR((- ('-1263745833')))) FROM vt1, vt0 WHERE (((((('0.18950146404252466')) BETWEEN ((0.5711508785705052)) AND (('2016032821')))) BETWEEN ((('877154108')GLOB('~h0l<v጗b'))) AND ((((NULL))<>((1341090521)))))); -- 0ms;
SELECT DISTINCT ((0.5591460094203607) NOT BETWEEN ((vt1.c0 IN ())) AND (CAST(vt1.c1 AS NUMERIC))) FROM vt0 WHERE (((((0.8211385404553386)AND(0xffffffff9abb9deb)))AND(NULL)) COLLATE BINARY);SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC))OR(vt1.c0)), (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)) IN ()), NULL FROM vt1;SELECT DISTINCT ((((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))OR(NULL)))%(((((vt1.lid)AND(vt1.c0)))OR(vt1.c1)))) FROM vt1 LIMIT 1246043052; -- 0ms;
SELECT ((((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((0.6696004944312023 COLLATE RTRIM))) FROM vt0;SELECT NULLIF(DISTINCT ((vt1.c0)||(vt1.c1)), (('') IS TRUE)), FIRST_VALUE(CASE ((vt1.c0)<>(vt1.c0))  WHEN ((vt1.lid)||(vt1.lid)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END) OVER (), (- (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.lid)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT '', SUM(CAST(vt1.c1 AS INTEGER)) OVER (), COUNT(CAST(vt0.c0 AS NUMERIC)) OVER () FROM vt1, vt0 WHERE (((HEX(''))OR(((x'')+(1.246043052E9))))) ORDER BY ((vt1.c0) BETWEEN ((vt0.c0 IN (vt1.c0, vt1.c0))) AND ((vt1.lid IN (vt1.c1, vt1.c1, vt1.c0))))  NULLS FIRST LIMIT -1237499159 OFFSET 38494610; -- 0ms;
SELECT DISTINCT (((((vt1.c1, vt0.c0, vt1.c0))<((vt1.c1, vt0.c0, vt0.c0)))) BETWEEN (NULL) AND (((vt1.c0) NOT BETWEEN (x'') AND (vt1.lid)))) FROM vt0 WHERE (CAST((((('-1206744422')AND(0X3da0ee63)))AND('*e	Y4G#A')) AS INTEGER));SELECT ALL COUNT(*), ((CAST(vt0.c0 AS TEXT)) NOTNULL), CAST((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c1))) AS TEXT) FROM vt0, vt1 WHERE (CASE '0.7583998869893177'  WHEN (('1341090521') NOT BETWEEN ('Hf2AZw]6(') AND (0.34178779313061103)) THEN ((((NULL)OR(0.15120246270904558)))AND(0X3437eb06)) END); -- 1ms;
SELECT DISTINCT ((((vt1.lid)IS NOT(vt0.c0)))LIKE(vt1.lid)), (~ (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)))), vt0.c0 FROM vt0, vt1; -- 0ms;
SELECT ALL x'' FROM vt0 CROSS JOIN vt1 ON CASE WHEN (NOT (vt1.c1)) THEN CAST(vt0.c0 AS REAL) END; -- 0ms;
SELECT CASE WHEN ((vt1.lid) NOT NULL) THEN ((vt1.lid) IS FALSE) END, CAST((- (vt1.lid)) AS BLOB), ((json(vt1.c1)) IS TRUE), (((vt1.c0)) BETWEEN ((LTRIM(vt1.c0, vt1.lid))) AND ((IFNULL(vt1.c0, vt0.c0)))), (~ (((vt1.lid) BETWEEN (vt1.c1) AND (0.5523372806184242)))) FROM vt0, vt1 WHERE (LIKELIHOOD(COALESCE(DISTINCT NULL, 0.9568824321149488), 0.20171572657852477)); -- 0ms;
SELECT DISTINCT LIKELIHOOD(vt1.c1, 0.5612061966583658) COLLATE BINARY FROM vt0, vt1; -- 0ms;
SELECT CAST(((vt0.c0) NOTNULL) AS TEXT) FROM vt0 WHERE (((((x'')AND(TYPEOF(DISTINCT '5<'))))OR(((((x'cea4')OR(NULL)))OR(0Xffffffffc925dd89))))); -- 0ms;
SELECT ALL AVG(((vt1.c0)/(vt1.c0))) FROM vt1 WHERE (((CAST(x'03cc' AS INTEGER)) NOT NULL)) LIMIT -694445064; -- 0ms;
SELECT DISTINCT (((NOT (vt1.lid)))-((+ (vt1.lid)))) FROM vt0;SELECT DISTINCT CASE WHEN ((vt1.lid)IS NOT(vt0.c0)) THEN ((vt1.c1)IS NOT(vt1.c0)) ELSE (vt1.c0 IN ()) END FROM vt0, vt1 WHERE (CAST('[(Je' COLLATE RTRIM AS REAL)); -- 0ms;
SELECT ALL ((((((-760089486)OR(vt1.lid)))AND(vt0.c0))) NOT NULL) FROM vt1, vt0 WHERE (((((NULL)<=(0.5094635221565869))) NOT BETWEEN (CAST(0.4768205479706359 AS TEXT)) AND (CASE WHEN x'' THEN x'' END))); -- 0ms;
SELECT DISTINCT ((((vt1.lid)>=(vt1.c0))) BETWEEN (((vt1.c0)<(vt1.c0))) AND (UNLIKELY(vt1.lid))) FROM vt0 ORDER BY (((vt1.lid) NOTNULL) IN (IFNULL(DISTINCT vt1.c0, '-176952312'), ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0))));SELECT ((((vt1.c0)<>(x''))) IS TRUE) FROM vt0, vt1 WHERE (NULL); -- 0ms;
SELECT vt1.lid COLLATE BINARY COLLATE RTRIM COLLATE RTRIM FROM vt1 WHERE ((((((NULL)) BETWEEN ((x'')) AND ((NULL))))*(x'' COLLATE BINARY))) ORDER BY (((NOT (vt1.lid)))&((~ (vt1.c0))))  NULLS LAST; -- 0ms;
SELECT ((NULL)<(vt1.c0 COLLATE NOCASE)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT HEX(LOWER(vt1.c1)), (((0xffffffffffde9ee2)) BETWEEN (((((x'81a2', vt1.c0, '1459437144')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.lid, 0.4680755874632273, vt1.c1))))) AND (((((vt1.c1, vt1.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c1, vt0.c0, vt0.c0)))))), ((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (vt1.c0) AND (((0.4329278835743694) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0 WHERE (((((((((('1935959973')OR('')))AND(x'')))OR(NULL)))AND(-1402151549)) IN ()));SELECT DISTINCT (+ ((((vt1.lid))!=((vt1.lid))))), (((vt0.c0, vt1.c1, vt1.c0)) NOT BETWEEN (((vt1.c1 IN ()), (((vt0.c0))<=((vt0.c0))), vt1.c0 COLLATE BINARY)) AND ((0.7230224961561604, ((vt1.c1)+(vt0.c0)), (((0X5268b095))>=((vt1.c1)))))), vt1.c1 FROM vt1 WHERE (((CAST(0x49c8bc1c AS BLOB)) BETWEEN (((0.7261261852636183)IS(x''))) AND ((+ (NULL)))));SELECT ALL (((NOT (vt1.c0))) IS FALSE) FROM vt0;SELECT DISTINCT ((vt0.c0 IN ()) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT QUOTE(vt0.c0) COLLATE RTRIM FROM vt1, vt0; -- 0ms;
SELECT CASE WHEN CASE WHEN 0.3826422647820191 THEN vt1.lid WHEN NULL THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 END THEN ((vt0.c0)AND(vt1.c1)) ELSE 0Xffffffffd865a764 END, (((vt1.lid, vt1.c1, vt1.c1)) BETWEEN (((~ (vt0.c0)), x'e59f', MAX(vt1.lid))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.lid)), COUNT(NULL), LTRIM(vt0.c0)))), CAST(LIKELY(vt1.c1) AS BLOB) FROM vt0, vt1 WHERE (0.10969205275297722); -- 0ms;
SELECT DISTINCT (((((vt1.lid)*(vt0.c0)), ((vt1.lid)<=(vt1.c1)), CASE WHEN vt0.c0 THEN vt0.c0 END))<=((CAST(vt1.lid AS REAL), GROUP_CONCAT(vt1.lid), vt1.c1 COLLATE RTRIM))) FROM vt0 GROUP BY (- (CAST(NULL AS INTEGER)));SELECT DISTINCT (((vt1.c0) IS TRUE) IN ()) FROM vt1 WHERE (((load_extension(NULL, NULL)) NOT BETWEEN ((('')!=(0xffffffffd8b0435b))) AND ((0x24b6192 IN ()))));SELECT DISTINCT CASE (+ (vt1.c0))  WHEN ((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.lid)) THEN vt1.c0 WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN vt1.c1 THEN (((vt1.c0))!=((vt1.c1))) END, CAST(((x'43b3') NOT BETWEEN (vt1.lid) AND (vt1.c1)) AS NUMERIC), GROUP_CONCAT(((vt1.c1)IS(vt1.lid))) FROM vt0 WHERE ((((0.9849062164015561)) NOT BETWEEN ((CAST('b)n' AS BLOB))) AND (((((((((('0')AND(x'32ab')))OR('-1505328672')))OR('-445101165')))OR(0.5523372806184242))))));SELECT DISTINCT (0.24602059517727515 IN (vt1.lid COLLATE RTRIM)) FROM vt0, vt1 WHERE ((((((((((('1030784691')AND('264589637')))AND(x'c34d')))AND('\*\r简~')))AND(0.7656213762207331))) NOT BETWEEN ((((NULL)) BETWEEN (('b)n')) AND ((x'')))) AND (CAST('&' AS TEXT)))) LIMIT 1094408157 OFFSET -9108450; -- 0ms;
SELECT DISTINCT ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.lid))) BETWEEN (vt1.c1) AND (((vt1.lid) BETWEEN (vt1.lid) AND (NULL)))), ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))==(((vt0.c0)!=(0.7495175894420063)))), vt1.c0 FROM vt0, vt1 WHERE (CAST(NULL AS INTEGER)); -- 0ms;
SELECT LEAD(vt0.c0, CAST((NOT (vt0.c0)) AS INTEGER), ((((((((vt0.c0 COLLATE BINARY)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((((vt0.c0))<=((vt0.c0))))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)<>(vt0.c0))))) OVER ( ORDER BY (+ (CAST(vt1.c1 AS TEXT)))  NULLS LAST RANGE BETWEEN  CURRENT ROW AND CASE HEX(x'')  WHEN vt0.c0 THEN ((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END FOLLOWING), IFNULL(GROUP_CONCAT(vt1.c0), ((0X3fe9668b) BETWEEN (vt1.c1) AND (vt1.c1))), (((vt1.c0)<=(vt1.c1)) IN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0 WHERE (((((x'')OR(1.778863949E9)))<=('P幤 T*婅')));SELECT DISTINCT vt1.c0 COLLATE NOCASE FROM vt0, vt1 WHERE (((((0Xffffffffe0a54c7b) IS TRUE))-((0.5997528828121091 IN (NULL))))); -- 0ms;
SELECT (((NULL IN (vt1.lid)))&(vt1.c1)), (((CAST(vt1.c1 AS NUMERIC), vt1.c0 COLLATE NOCASE, TOTAL(vt0.c0)))>=((vt1.lid, CAST(vt1.c1 AS NUMERIC), vt1.c0))), (+ ('')) FROM vt1;SELECT DISTINCT CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (NULL)) THEN CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END ELSE ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.lid)) END FROM vt1, vt0; -- 1ms;
SELECT NULL FROM vt0, vt1 WHERE ((((((((((NULL)OR(0X38cabdfd)))OR('')))AND('KKZ[')))AND(NULL)) IN ())); -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0)IS NOT(vt1.c1))) FROM vt0, vt1 WHERE ((((((((x'a751')OR(0.1725238118136928)))AND(0.36266003654989953))))>((CAST('-703180438' AS NUMERIC))))); -- 0ms;
SELECT ALL COUNT(*) OVER ( ORDER BY json_array_length(((vt1.lid) IS TRUE), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) DESC  NULLS LAST), x'', ((((vt1.c0)/(vt0.c0)))+(((vt0.c0) ISNULL))) FROM vt0, vt1 WHERE (x'2faf'); -- 0ms;
SELECT ALL CAST(x'' AS REAL), AVG(MAX((vt1.c1 IN ()))), (2142309816 IN ()) COLLATE BINARY, GROUP_CONCAT(((vt0.c0)||(vt1.lid))), CASE (((vt1.lid, vt1.lid, vt1.c1))<>((x'', vt1.c0, 0.8568582689388424)))  WHEN '1349730216' THEN vt1.c1 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))) THEN vt1.lid WHEN CASE WHEN vt1.lid THEN vt1.c0 END THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE (vt1.lid IN ()) END FROM vt0, vt1 WHERE (CAST('%au' AS NUMERIC));SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN '-920265335' WHEN vt1.lid THEN 'Lq	m]~J' END AS TEXT) FROM vt0, vt1; -- 0ms;
SELECT ALL COALESCE(DISTINCT ROUND(vt1.c0, vt1.c0), ((((vt1.c0)OR(vt0.c0)))OR(2102235969)), (((''))>=((vt1.c1))), ((((vt1.c1)AND('-2187550')))AND(vt1.c1))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (('2036468539')|((+ (vt1.c0)))) FROM vt0, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((((((((vt1.lid)OR(vt1.c0)))OR(0X3c730fee)))AND(vt1.lid)))AND(0.6676403858279129))) ISNULL), (TOTAL(vt1.lid) IN ()), CAST(vt1.c1 COLLATE NOCASE AS INTEGER), CAST(vt1.lid AS BLOB), vt1.c1 FROM vt1, vt0 WHERE ((~ ((('p{~㸩|Al')<>('-1967836921'))))); -- 0ms;
SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid)))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt1.c0 IN ('e%m<')))), (((- (vt1.lid))) NOT NULL), ((CAST(vt1.c1 AS NUMERIC)) IS FALSE) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c1)) NOT BETWEEN ((((vt0.c0)GLOB(vt1.c0)))) AND ((((vt1.c0) IS TRUE)))) FROM vt1 ORDER BY ((((json_object('', vt0.c0, vt0.c0, vt0.c0))AND(((vt1.c1)||(vt1.c1)))))OR(0X191cfe3c))  NULLS FIRST, (((((vt1.c0 IN (vt1.lid)))AND(((((((((vt1.lid)AND(vt1.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)))))AND((vt1.c1 IN ()))) ASC  NULLS LAST;SELECT ((CAST(x'' AS INTEGER)) NOTNULL) FROM vt1 GROUP BY vt1.c0 LIMIT -1138477299; -- 0ms;
SELECT ALL (((NOT (vt1.c1))) IS TRUE) FROM vt1, vt0 ORDER BY 0X7fb10db8 DESC  NULLS LAST LIMIT 42065738 OFFSET 1574969920;SELECT CASE ((((vt1.c0)AND(vt1.c0)))OR('-2187550'))  WHEN -1963872488 THEN GROUP_CONCAT(vt1.c0) ELSE ((vt0.c0) NOTNULL) END FROM vt0 WHERE ((((NULL) NOT BETWEEN (NULL) AND (0.7016873622920982)) IN ()));SELECT ALL (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c1)) AND ((vt1.c0, vt1.lid, vt1.c1))) COLLATE BINARY FROM vt1, vt0 WHERE (CAST(CASE WHEN NULL THEN 1728739374 END AS BLOB)); -- 0ms;
SELECT CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END AS NUMERIC) FROM vt0 WHERE (((((((NULL)OR('360420754')))OR(x''))) NOT NULL)) GROUP BY vt0.c0;SELECT DISTINCT '1935959973' FROM vt1; -- 0ms;
SELECT DISTINCT (- (((vt1.c1) NOT NULL))), (vt1.c1 IN (vt1.c1, NULL)) COLLATE NOCASE, AVG(CASE WHEN vt1.c0 THEN vt1.lid END) OVER ( ORDER BY CAST((0.8090593121102093 IN (vt1.c1, '1237892124')) AS BLOB)) FROM vt1; -- 0ms;
SELECT DISTINCT (((-324393471))>(((vt0.c0 IN ())))) FROM vt1 WHERE ((+ (0X4e8a7372 COLLATE BINARY))) ORDER BY CAST('-1548678807' AS TEXT), vt1.lid ASC; -- 0ms;
SELECT (((vt1.c0, vt1.c0, vt1.c1)) BETWEEN ((((vt1.lid)>>(vt1.c1)), ((vt1.lid) IS TRUE), (NOT (vt1.c0)))) AND ((NULL, CASE vt1.lid  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 ELSE 0xffffffffb962ed82 END, (+ (vt1.lid))))) FROM vt1, vt0; -- 0ms;
SELECT ((CASE vt1.c1  WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN '0.34178779313061103' THEN vt1.lid END) ISNULL), TYPEOF(((vt1.c1)==(vt1.lid))), (' <r\r' COLLATE RTRIM IN ()) FROM vt0;SELECT COUNT(((vt0.c0)%(vt1.c0))) OVER (), MAX(((((vt1.lid)OR(vt1.c1)))OR(vt0.c0))), ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.lid END) IS TRUE) FROM vt0, vt1 WHERE (CAST(((0X34484f3c)|(0.5633561044953463)) AS NUMERIC)) LIMIT 1707337864 OFFSET 1246043052; -- 1ms;
SELECT DISTINCT NULL, (((((vt1.c1)+(x''))))<=((vt0.c0))), CASE WHEN MIN(vt1.c1) THEN (vt1.c1 IN ()) ELSE ((vt0.c0)LIKE(vt1.c0)) END, CAST((- (vt1.c1)) AS BLOB), ((((((((IFNULL(vt1.lid, vt1.lid))OR(NULL)))OR(((NULL)OR(vt1.c1)))))AND((((vt0.c0)) NOT BETWEEN ((0.9574497558518789)) AND ((vt0.c0))))))OR((vt1.lid IN (vt1.lid, vt1.c1)))) FROM vt0;SELECT DISTINCT (((UNICODE(vt1.lid), CASE 'o0FZ)0⯳|'  WHEN vt1.c0 THEN vt1.c0 END, CAST(vt0.c0 AS NUMERIC)))<((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)), CAST(vt1.lid AS BLOB), (+ (vt1.c1))))) FROM vt1, vt0 WHERE (((((NULL) IS FALSE))==((+ (NULL))))) GROUP BY (((((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt1.c0)))), CASE WHEN (vt1.lid IN ()) THEN (vt0.c0 IN ()) WHEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)) THEN (~ (vt1.c1)) WHEN CASE vt1.lid  WHEN vt1.lid THEN vt0.c0 END THEN -1.829145106E9 ELSE (((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))) END, (((- (vt1.c1)))<=(CAST(vt1.c0 AS REAL))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END) FROM vt1, vt0; -- 0ms;
SELECT ALL IFNULL(DISTINCT (+ (vt0.c0)), ((((((((((((vt1.c1)OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))AND(vt1.lid)))OR(vt1.c0)))AND(vt1.lid))) FROM vt0, vt1 WHERE (((((0.43539713766699306) NOTNULL)) NOT NULL)) LIMIT -1833062376 OFFSET 1094408157; -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt0;SELECT DISTINCT ((vt1.lid)>(vt1.lid)) COLLATE BINARY FROM vt1 WHERE (((((0Xffffffffd2d0f358)&(-7.73908922E8))) NOT NULL)) GROUP BY TRIM(DISTINCT x'', ((vt1.lid)-(vt0.c0))) HAVING ((((0.7397239576732637) NOT BETWEEN (vt1.lid) AND (vt1.c0)))IS NOT(vt0.c0));SELECT DISTINCT TOTAL(((vt1.c1) NOTNULL)) OVER () FROM vt0 WHERE (((((((((0.7000932703137038)AND(0.946198699516826)))OR(0.12713010957968351)))AND('GG{zWLHN')))OR('1094408157')) COLLATE RTRIM);SELECT ALL CAST(((vt1.lid)!=(vt1.lid)) AS INTEGER) FROM vt1, vt0; -- 1ms;
SELECT ALL CUME_DIST() OVER (), CAST(COUNT(NULL) AS INTEGER), ((((((((((vt1.c0)*(vt1.c1)))AND(((((vt0.c0)AND(vt1.c1)))AND(vt1.lid)))))OR(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((vt1.lid)-(vt0.c0)))))AND(((vt1.c0)-(vt1.c1)))) FROM vt1, vt0 WHERE ((((((((((((((('877154108') BETWEEN (1030784691) AND (NULL)))AND(((((x'ebfe')OR(NULL)))AND(NULL)))))AND(((NULL)>(NULL)))))OR((('33228445')LIKE(0.1115874913267344)))))OR((('1770519982') BETWEEN ('2036468539') AND (x'8739')))))AND(CASE WHEN '~h0l<v጗b' THEN x'' END)))AND((('''3#')IS(NULL))))); -- 0ms;
SELECT DISTINCT (LIKELIHOOD(vt1.lid, 0.7665763686462547) IN ()) FROM vt1, vt0; -- 0ms;
SELECT ((((vt0.c0) ISNULL))GLOB(vt0.c0)) FROM vt1, vt0; -- 0ms;
SELECT 0Xffffffffa1be79f7 COLLATE NOCASE COLLATE RTRIM FROM vt0, vt1 WHERE ((((('149457320') BETWEEN (x'') AND (NULL))) BETWEEN ((('뻸Y') IS TRUE)) AND (((('-606203629', NULL, 0.6676403858279129)) BETWEEN ((0x20fc1d07, '', 0X157b9592)) AND (('', x'', '~H0L<V጗B')))))); -- 0ms;
SELECT DISTINCT LAG((((vt1.c1 COLLATE BINARY))!=((((2.016032821E9)&(vt1.lid))))), (((~ (vt1.c1))) NOT BETWEEN (HEX(DISTINCT vt1.c1)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.lid WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN x'0769' END)), (((vt1.lid IN (vt0.c0)))>(0.4441545421962423))) OVER () FROM vt1, vt0 WHERE (((((1.459437144E9)-(NULL)))!=((('2102235969') IS FALSE)))); -- 0ms;
SELECT ALL vt0.c0, (((~ (vt1.lid)))-(((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)))), CAST(CASE WHEN vt1.lid THEN vt1.lid END AS BLOB) FROM vt1, vt0 ORDER BY ((((vt1.c0)-(vt1.c0))) IS TRUE); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((CASE WHEN vt1.c1 THEN vt1.lid WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.lid ELSE vt1.c1 END)) AND ((vt1.lid))), CASE WHEN ((((NULL)OR(vt0.c0)))AND(vt1.c1)) THEN ((vt1.c0)&(vt1.c0)) ELSE CAST(vt1.lid AS REAL) END, CASE ((vt1.c0) NOTNULL)  WHEN ((((vt0.c0)OR(vt1.c0)))AND(vt1.c1)) THEN GROUP_CONCAT(vt1.c1) WHEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.lid)) THEN ((vt1.c1)IS NOT(vt1.lid)) WHEN vt1.c0 COLLATE RTRIM THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.lid))) END FROM vt1;SELECT ALL ((((((vt1.c1) IS FALSE))OR((((vt0.c0))<((vt1.c0))))))OR((vt1.c0 IN ()))), (((((vt1.lid)OR(vt1.c1)))AND(vt0.c0)) IN ()), ((643793046) NOT NULL) FROM vt0, vt1 WHERE (((((x'842f56d4')LIKE(0.5989095351608077))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND ((+ (NULL))))); -- 2ms;
SELECT ALL ((((vt1.c0)>=(vt0.c0))) BETWEEN (((vt1.c0)&(vt1.c0))) AND (((vt1.c1)|(vt1.c1)))), vt1.c1, ((((- (vt1.c1))))<((((vt1.c1) IS FALSE)))) FROM vt0, vt1 WHERE (CAST((NOT (x'')) AS TEXT)) GROUP BY (((((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))OR(((vt1.lid)+(vt1.lid)))))AND('-362967172')); -- 0ms;
SELECT DISTINCT (((MAX(vt1.lid)))>((GROUP_CONCAT(vt1.c0)))) FROM vt0 WHERE (NULL);SELECT ALL SUM(CAST(vt1.c1 AS REAL)) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0, vt0.c0, vt1.lid))==((vt0.c0, vt1.lid, vt1.lid))) COLLATE BINARY, ((((((((((NULL)OR(vt1.c1)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.lid)))=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))), ((CASE WHEN vt1.lid THEN vt1.lid END)!=(((vt0.c0)==(vt1.c0)))) FROM vt1, vt0 WHERE (UNLIKELY(((('\n9', '-1281726855', '')) NOT BETWEEN ((x'd7eb', '877154108', '-1039539040')) AND ((x'd8e5', 0.1212233376312567, '-1963872488'))))); -- 0ms;
SELECT CAST(GROUP_CONCAT(vt0.c0) AS INTEGER) FROM vt0, vt1 WHERE (CAST(((NULL) ISNULL) AS BLOB)) INTERSECT SELECT DISTINCT (((+ (vt1.c0)))+(vt1.c0 COLLATE NOCASE)) FROM vt0 WHERE (((((((0.08798932047190888) NOT BETWEEN (x'') AND (NULL)))AND(((NULL)IS NOT(x'b8968883')))))AND(0xffffffffc5a47835 COLLATE RTRIM)));SELECT ALL ((SUM(vt1.lid)) IS TRUE) FROM vt0, vt1 WHERE ((STRFTIME(x'', 0.3826422647820191, x'e381', x'', NULL) IN (((NULL)<<(NULL))))); -- 0ms;
SELECT DISTINCT TRIM((NOT (vt1.lid)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) FROM vt1;SELECT DISTINCT CASE (NOT (vt0.c0))  WHEN ((((vt1.lid)OR(vt0.c0)))OR(vt0.c0)) THEN (NULL IN ()) ELSE (vt1.c1 IN (vt1.lid)) END, IFNULL(((vt0.c0) IS FALSE), CAST('1382592661' AS TEXT)), ((((NULL) BETWEEN ('?Y!0j3E!') AND (vt1.c0)))=(((vt0.c0) IS TRUE))) FROM vt1 WHERE (((((('-1031590966'))>((x'6491'))))LIKE((((NULL)) BETWEEN (('-1694516659')) AND ((NULL))))));SELECT DISTINCT vt1.c1 FROM vt0 WHERE (((((-1931904930)%('y-'))) IS FALSE));SELECT DISTINCT (((vt1.c1)) BETWEEN ((((vt0.c0)|(vt0.c0)))) AND (('G#꩹'))) FROM vt1, vt0 WHERE (((((0.1272140452169992)LIKE(0X7a6fc9c3)))AND(((1434761759) BETWEEN ('1382592661') AND (0.5523372806184242))))) GROUP BY CAST((((NULL, vt1.c1, vt1.lid))<>((vt1.c1, vt0.c0, vt1.c0))) AS INTEGER); -- 0ms;
SELECT DISTINCT (((((vt0.c0))>=((vt0.c0))))>>(((vt1.lid)<(vt1.c0)))), HEX(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1))), x'c301' FROM vt0;SELECT ALL UNLIKELY(DISTINCT CAST(vt1.c1 AS REAL)), CASE WHEN ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (0.41156960259262665)) END, (SUM(vt0.c0) IN (vt1.lid COLLATE BINARY)) FROM vt1 WHERE (CAST(((x'3dc13500') NOT BETWEEN ('/') AND (NULL)) AS BLOB));SELECT DISTINCT CAST('uT^T*' AS INTEGER) FROM vt1 WHERE ((((((((((((((((x'', '1197206213', NULL))!=((x'', -2000189187, x''))))AND(UPPER(-1.07914683E8))))AND(((0.35605120879523877) NOTNULL))))OR(CAST('' AS REAL))))AND((((NULL)) NOT BETWEEN ((0X6b6fc63e)) AND ((0.7580834064719398))))))AND((('-1724220544') IS TRUE))))OR((- ('1728739374'))))); -- 0ms;
SELECT ALL NTH_VALUE(((0.11207579384079114) NOT NULL), (((((+ (vt1.c1)))OR((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))))OR(((vt1.c0) IS FALSE)))) OVER () FROM vt1 LIMIT -1803486621; -- 1ms;
SELECT ALL RANK() OVER (), COUNT(*) OVER ( ORDER BY (((((((((vt1.c1 IN ()))AND((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))))))OR(CAST(vt1.c1 AS TEXT))))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))) DESC, ((((vt1.c1)>(NULL))) IS TRUE) DESC, CAST(vt1.lid AS NUMERIC) DESC), '1782486116' FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.lid)) COLLATE BINARY FROM vt0 GROUP BY ((vt1.lid COLLATE NOCASE)*(((vt0.c0)=(vt1.lid)))) HAVING CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.lid END COLLATE RTRIM;SELECT DISTINCT CASE WHEN (~ (0.1272140452169992)) THEN vt0.c0 ELSE ((vt0.c0)<>(vt1.c0)) END FROM vt1 ORDER BY vt0.c0;SELECT ((CASE 0.7016711289190944  WHEN vt1.lid THEN vt0.c0 END)+(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))), (((vt1.c1, SUM(vt1.c1), ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.lid))))=((((((vt1.c0)AND(vt1.lid)))OR(vt1.c1)), CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 END, vt1.lid))), ((json_extract(vt1.c0, vt1.c1))||((~ (vt1.c1)))) FROM vt1 WHERE ((((x'' IN ())) BETWEEN (((0.05887955652205312)IS NOT(x'bb6a'))) AND (CASE WHEN x'' THEN '왛>c臦\ga' END)));SELECT ALL vt1.lid, MIN(MIN(vt1.c0)) COLLATE BINARY, ((vt0.c0)AND(GROUP_CONCAT(1.399877332E9))) FROM vt1, vt0 WHERE ((('}WQ)㸩hSTl' IN ('-366977436', 1849246865)) IN ())) LIMIT 859658378 OFFSET -63917677;SELECT DISTINCT ((1930602569)>>(((x'bcde')<<(vt1.lid)))), (('Df~읮,')IS NOT(LIKELY(vt0.c0))), (((((0.7072700782405558))<=((NULL))))GLOB(vt1.c1)) FROM vt1;SELECT ALL (((NULL)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) AND ((((((((((vt1.c1)OR(vt1.c1)))OR(vt0.c0)))OR(vt1.lid)))OR(vt0.c0))))), (vt1.c0 COLLATE BINARY IN ((vt1.c1 IN ()))), (((((((((- (vt1.c0)))AND('1778863949')))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((0.04487278396961192))))))AND(CASE WHEN vt1.lid THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.lid)))), ((((((vt1.lid)%(x'9688')))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)), (('') NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.lid))) AND (((vt1.lid)IS NOT(vt1.lid)))) FROM vt1;SELECT COUNT(*) FROM vt1, vt0 WHERE (NULL) GROUP BY ((vt1.lid COLLATE RTRIM)!=(vt1.c0 COLLATE RTRIM)) HAVING (((vt0.c0, vt1.lid, vt1.lid)) NOT BETWEEN ((LENGTH(vt1.c0), (vt0.c0 IN ()), ((vt1.lid)*(vt1.c0)))) AND ((((((((((vt1.c1)OR(vt1.lid)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)), ((((((((vt0.c0)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)), ''))); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT (vt1.lid IN ())) FROM vt0, vt1 ORDER BY ((vt1.c0) NOTNULL) ASC  NULLS FIRST, ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))AND((NOT (vt1.c1)))))AND(((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(SUM(vt1.lid) AS INTEGER) FROM vt0;SELECT ((TOTAL(vt1.c1))>((vt0.c0 IN ()))) FROM vt0 WHERE (CASE ((x'ba88') BETWEEN (x'a50a') AND (x''))  WHEN (0.4768205479706359 IN ()) THEN 'J᧭' WHEN 0.5062914736194659 THEN (+ (NULL)) WHEN CAST('-773908922' AS INTEGER) THEN '0.9849062164015561' COLLATE BINARY WHEN CAST('0.7072700782405558' AS TEXT) THEN (((NULL))<=((-1.404949517E9))) WHEN (0.30569115381482015 IN ()) THEN (((NULL))<((0.6292180708397103))) END) GROUP BY 0.7389389947089204 HAVING CAST(((1.835551348E9)<(vt1.c0)) AS INTEGER);SELECT ROW_NUMBER() OVER () FROM vt1, vt0 WHERE (((~ (0.8698510248452846)) IN (SQLITE_COMPILEOPTION_GET(x''), ((0xffffffffae9e2edf)*(0X602ac1a3))))) LIMIT -197433339; -- 0ms;
SELECT DISTINCT ((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c1))) IN ()), CAST(vt1.c1 COLLATE NOCASE AS TEXT), MIN((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid)))) COLLATE NOCASE FROM vt0;SELECT ((vt1.c0 IN (vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((((vt1.lid))<=((vt0.c0)))) BETWEEN (((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.c1))) AND (CASE WHEN vt1.c1 THEN 0.6913928928814546 WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) FROM vt0 INNER JOIN vt1 ON CASE vt1.c1 COLLATE NOCASE  WHEN ((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt1.c1)) THEN (((vt1.lid, vt0.c0, vt1.lid, x'3bd5', '-1882820534'))<>((vt0.c0, vt1.lid, vt1.c0, vt0.c0, '360420754'))) ELSE vt1.lid COLLATE BINARY END; -- 0ms;
SELECT NULL COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.lid)) NOT BETWEEN ((((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((vt0.c0))) FROM vt1, vt0; -- 0ms;
SELECT ALL (- (vt1.c0)) COLLATE RTRIM, ((vt1.c0) ISNULL) COLLATE NOCASE, ((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))&(((vt1.c1) NOT BETWEEN (0.2040706643381781) AND (vt1.lid)))) FROM vt0, vt1 WHERE (CAST((('1736065913') NOT BETWEEN (x'ec9b') AND ('rx1~	eB.x')) AS NUMERIC)); -- 1ms;
SELECT (((vt0.c0)) BETWEEN (((((vt1.c1))>((vt1.c0))))) AND (((vt1.c0 IN ())))), (~ (CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 END)), COUNT(LIKELY(vt0.c0)) FROM vt1, vt0; -- 0ms;
SELECT ALL '-872569465', ((vt1.c0)==(vt1.lid)) COLLATE RTRIM, vt1.c1, (((vt0.c0 IN ())) IS TRUE), TIME(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)), NULL, ((vt1.c1)>=(vt1.c1))) FROM vt0;SELECT DISTINCT ((vt1.lid) IS FALSE), (((((('Oﹽ.K+.')OR(vt1.c0)))OR(vt1.lid))) IS TRUE), (((((((('')AND((((vt1.c1))=((vt1.c0))))))OR((~ (vt1.lid)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)))) FROM vt1;SELECT DISTINCT (((vt1.c0)) BETWEEN ((((((0X53bf2969)AND(vt1.c1)))AND(vt1.lid)))) AND ((vt1.c0))) FROM vt1 LIMIT 2081666758 OFFSET 1585955501; -- 0ms;
SELECT ((((((vt1.lid)%(vt1.lid)))OR((vt1.lid IN ()))))AND(((vt1.lid)-(vt1.c0)))) FROM vt0, vt1 WHERE (CASE CAST(0.8398895713414378 AS TEXT)  WHEN ((x'6187')&('0.05887955652205312')) THEN ((NULL)>=('-324393471')) WHEN CAST(x'f0f62212' AS REAL) THEN CASE WHEN 'Y䭋j7䋩' THEN '1770519982' WHEN x'' THEN NULL WHEN NULL THEN x'' END WHEN ((((-5.26037893E8)OR(0x5545d038)))OR('2036468539')) THEN CAST(0Xffffffffac0d34cb AS BLOB) WHEN (((0.8029145527945762))>=(('b{'))) THEN 0.5094635221565869 WHEN (('')>=(x'')) THEN CASE WHEN 0.378455546873975 THEN NULL ELSE x'' END ELSE ((NULL) BETWEEN (NULL) AND (NULL)) END); -- 0ms;
SELECT (((((vt1.c1))<((vt1.lid)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((- (NULL)))), ((CASE vt1.c1  WHEN vt1.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) NOT BETWEEN ((NOT (vt1.lid))) AND (CASE WHEN vt1.c1 THEN vt1.c0 END)), ((((vt0.c0)&(vt1.c1))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (MAX(vt1.lid))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT 0.6882254901286281, 0.7562947817449878, (((((vt0.c0)%(vt1.c0)), vt1.c0, ((x'') BETWEEN (vt1.c0) AND (vt1.c1))))!=(((NOT (NULL)), vt1.c1, (((vt1.c0))>((vt0.c0)))))), CASE ((((((((vt0.c0)OR(vt1.lid)))AND(NULL)))AND(NULL)))AND(vt1.c1))  WHEN CASE WHEN vt1.lid THEN vt0.c0 END THEN (- (vt1.lid)) END, LIKELY(DISTINCT ((('-107914683', 0.5590888235393915, vt1.lid))<((vt1.c1, vt1.c0, -9.09953289E8)))) FROM vt0;SELECT ALL ABS(vt0.c0) COLLATE NOCASE FROM vt1, vt0 WHERE (((CAST(x'' AS TEXT)) BETWEEN (CASE WHEN 'n揋ᔘRq9' THEN 'a5L wAm\' WHEN NULL THEN 0.46094605511383346 WHEN NULL THEN NULL ELSE '2102235969' END) AND (TYPEOF(DISTINCT x'')))) LIMIT -1565683883 OFFSET 1033956963; -- 0ms;
SELECT ALL CAST((((vt1.c0))>((vt1.c1))) AS NUMERIC), (((vt0.c0)) NOT BETWEEN (('L3')) AND (((NOT (vt0.c0))))), (NOT (('-1937108549' IN ('-445101165', -2747625.0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CAST((~ (vt1.lid)) AS NUMERIC) FROM vt1, vt0 WHERE (((0x3143c8dd COLLATE BINARY)/(CASE WHEN '\n''8aR[' THEN 0.646086169178126 ELSE x'' END))); -- 0ms;
SELECT ((('1997460993')) BETWEEN ((vt1.lid)) AND ((NULL))) COLLATE NOCASE, vt1.c0, CAST(((vt0.c0)==(vt1.c1)) AS BLOB) FROM vt1, vt0 WHERE (CAST(CAST(-1402151549 AS INTEGER) AS INTEGER)); -- 0ms;
SELECT ALL (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((json_remove(vt1.c0, vt1.c1, vt0.c0, vt0.c0), ((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)), vt1.c1)) AND ((TOTAL_CHANGES(), (vt1.lid IN (vt1.c1)), ((vt1.lid)-(vt0.c0))))) FROM vt0 WHERE ((((('468616186')>=(0.6939820048130909)))!=(CASE WHEN 0.9731275282134955 THEN '\*\r简~' WHEN 0.7873459985272397 THEN '2016032821' WHEN NULL THEN x'' END)));SELECT DISTINCT (((NOT (vt1.lid)))<(((vt1.c1) IS FALSE))), CUME_DIST() OVER (), '%I♵q', (~ ((- (vt0.c0)))), ((CAST(vt1.c0 AS BLOB))&(((vt0.c0)-(vt1.lid)))) FROM vt1;SELECT DISTINCT CAST(MIN(vt1.c0) AS BLOB), ((~ (vt1.c1)) IN ()), vt0.c0 FROM vt0;SELECT SUM(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END), TOTAL((~ (vt0.c0))), NULLIF(DISTINCT CASE WHEN vt1.lid THEN vt1.lid END, CAST(vt1.c0 AS BLOB)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT JULIANDAY((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))), (((('-18439560')OR(vt1.c0)))AND(vt1.c1)), (((vt0.c0))<((vt1.lid)))) FROM vt1, vt0 WHERE ((~ ((((NULL)) BETWEEN ((0x648e451)) AND ((x'')))))) GROUP BY CAST((NULL IN ()) AS INTEGER) HAVING (((((vt1.c1)AND(vt1.c0)))OR(0.5523372806184242)) IN ()); -- 1ms;
SELECT DISTINCT x'' FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt1.c0)LIKE(vt1.lid))))>((vt0.c0 COLLATE BINARY))) FROM vt1 CROSS JOIN vt0 ON (NOT (vt1.lid)) LIMIT -1328722425; -- 0ms;
SELECT ALL SUM(((vt1.lid) ISNULL)), 0.1776730278129277, COUNT(((vt1.c0)&(x''))) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT DISTINCT PRINTF((('532997723') NOT NULL)), ((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('-1919875926')))<(CASE WHEN vt1.lid THEN vt1.c0 WHEN vt0.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.lid END)), (NOT ((~ (vt1.c1)))) FROM vt0 WHERE ((((x'') NOT NULL) IN ()));SELECT DISTINCT (((((vt1.lid, vt0.c0, vt0.c0))<=((vt1.c0, vt0.c0, vt0.c0)))) NOTNULL) FROM vt1, vt0 WHERE (COALESCE((('')+('')), ('1595502506' IN ()))); -- 0ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN (((vt1.c1)>(vt1.c0))) AND (((vt1.lid) IS TRUE))) FROM vt0, vt1 WHERE ((((((- ('1349730216')))OR((('-1402151549')>=('388015756')))))AND(CASE WHEN 532052880 THEN 1479302828 ELSE '1373678247' END))) GROUP BY ((((vt1.c1)<=(vt1.lid)))>=(((vt0.c0) IS FALSE))) HAVING (~ (CAST(vt1.lid AS REAL))); -- 0ms;
SELECT DISTINCT ((vt0.c0)<>(vt1.lid)) COLLATE NOCASE FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((((vt1.c0)OR(vt0.c0)))OR(vt1.lid)) AS TEXT) WHERE ((('-408122277' IN ()) IN ())); -- 0ms;
SELECT ALL GROUP_CONCAT(vt1.lid) FROM vt1 WHERE (((((GLOB('-976625512', '-2747625'))OR(((x'') NOT BETWEEN (NULL) AND (NULL)))))AND(((NULL) BETWEEN ('0.17242153160080276') AND (NULL))))); -- 0ms;
SELECT DISTINCT SUM(((((0.486464905497796)OR(vt1.lid)))AND(0.02398867049524156))) FILTER(WHERE (((vt1.c1)LIKE(vt1.c0)) IN ())) OVER ( ORDER BY ((((vt1.lid)IS(vt1.lid)))IS NOT((((vt1.lid, vt1.c1, vt0.c0))==((vt1.lid, vt1.c1, vt1.c1))))) DESC  NULLS FIRST, 552095940 DESC), COUNT((((('-726746047')OR(vt1.c0)))OR(vt1.c1))), (((((vt1.c0, vt1.c1, vt1.c1))<((vt1.c0, 0.8736793766452542, vt1.lid))))LIKE(vt1.c0)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (NOT (vt1.c0)) COLLATE BINARY, ((((((((x'')AND(((vt1.c0)<>(vt1.c1)))))OR(((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)))))AND(((vt1.c1)<=(vt1.lid)))))OR(((((vt1.c0)OR(0.6112241836259575)))OR(vt1.c1)))), (((vt1.c1)) BETWEEN ((CAST(vt1.c1 AS TEXT))) AND ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.lid))))), ((json_array_length(vt1.c0, vt0.c0)) BETWEEN (((vt1.c0)<(vt0.c0))) AND (vt1.c1)), (((- (vt1.c1)))-((vt1.c1 IN ()))) FROM vt0 NOT INDEXED;SELECT DISTINCT (((GROUP_CONCAT(vt0.c0), json(vt1.c0), json_insert(vt1.c0, vt0.c0, vt1.c0), x'', vt1.c1))<=((CASE vt0.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt0.c0 END, (1264984554 IN ()), (+ (vt1.lid)), vt1.lid COLLATE BINARY, ((((vt1.lid)AND(vt0.c0)))OR(vt1.lid))))), (((- (vt0.c0)))AND(((vt0.c0)||(vt0.c0)))), CASE ((vt1.c1)<<(vt1.c1))  WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt1.c0)>(x'')) END FROM vt1 WHERE ('u9位N鿳m');SELECT DISTINCT (((('1720992331')%(vt1.lid)))!=(CAST(vt1.c1 AS NUMERIC))) FROM vt0;SELECT DISTINCT ((((0X3e4b37c1) IS FALSE)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END) AND (0.9465549390501261)) FROM vt1, vt0 WHERE (((((('488456366') BETWEEN (0.9560127187161107) AND (NULL))))<(((+ ('-2747625')))))); -- 0ms;
SELECT DISTINCT (((vt1.lid)) NOT BETWEEN ((vt1.lid COLLATE NOCASE)) AND ((CASE WHEN vt1.lid THEN vt1.c1 END))) FROM vt0 WHERE (CASE ((NULL) BETWEEN (NULL) AND (''))  WHEN ((('%[9'))<((x''))) THEN CASE WHEN '?Y!0j3E!' THEN -1e500 ELSE 0.2834546768770114 END END);SELECT CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB), HEX(GROUP_CONCAT(vt1.c0)), ((NULL)>>(((vt1.lid) NOT NULL))) FROM vt1, vt0 GROUP BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (CAST(0X4d1098b5 AS REAL)) AND (((vt1.c0)IS NOT(vt1.lid)))); -- 1ms;
SELECT DISTINCT (((vt0.c0 IN ()))=((+ (vt1.lid)))), ((((vt0.c0)!=(vt1.lid)))>(vt1.c0)), ((CAST(vt1.c0 AS REAL)) IS FALSE) FROM vt1 INNER JOIN vt0 ON NULL; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((0x6c7ef832)!=(vt1.lid))) FROM vt0 WHERE (((((0.20061106336075374)*(NULL))) BETWEEN (((x'')GLOB('0.5590888235393915'))) AND (CAST('P幤 T*婅' AS REAL)))) GROUP BY ((vt1.c1 IN (vt1.c1, vt1.c1)) IN ()) ORDER BY (((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0)) IN ());SELECT DISTINCT (vt1.c1 IN ()) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(CASE vt0.c0  WHEN vt1.lid THEN vt0.c0 ELSE NULL END), FIRST_VALUE((vt1.lid IN (CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 END))) OVER (), (vt1.lid IN (vt0.c0)) COLLATE NOCASE FROM vt1, vt0 WHERE (((((0X77d6a378)!=('&J偞*+A'))) BETWEEN (CASE ''  WHEN '1e500' THEN x'' END) AND ((('m')OR(0.35859564925630283))))) ORDER BY SUBSTR(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)), SQLITE_VERSION()) ASC  NULLS LAST; -- 0ms;
SELECT ((((((NULL)AND(vt1.c0)))AND(vt1.c0)))!=('jGI9蚯X')) FROM vt0, vt1 ORDER BY (((((vt1.lid)LIKE(vt1.lid))))>=((NULLIF(DISTINCT vt1.c1, vt1.lid)))) DESC LIMIT 1453685326; -- 0ms;
SELECT DISTINCT (TYPEOF(DISTINCT 0.3076233965287348) IN (NULL)), (((CASE vt1.c1  WHEN vt1.c1 THEN NULL ELSE vt1.c0 END))>((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.lid)))OR(vt0.c0)))OR(vt1.c1))))), MIN((vt1.lid IN ()), (((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.lid))), ((vt0.c0)>(vt0.c0)), ((vt0.c0)>=(vt1.c1))) FROM vt0, vt1; -- 1ms;
SELECT SUM(CAST(vt0.c0 AS NUMERIC)) OVER ( RANGE ((((vt0.c0) NOTNULL))&((((vt0.c0, vt1.c0, vt1.c0))>=((vt1.lid, vt1.c1, vt0.c0))))) PRECEDING EXCLUDE GROUP), CAST(GROUP_CONCAT(x'7d58') AS REAL), vt1.c0 FROM vt1, vt0 WHERE (CASE WHEN (((')O', x'b54c', 0.5386215258122422))<=((NULL, NULL, '4P\nY%'))) THEN (NOT ('-1184699006')) ELSE CAST(0.2556171273850878 AS NUMERIC) END) ORDER BY NULL DESC, 0xffffffff84e0a009;SELECT DISTINCT TYPEOF(CASE 1728739374  WHEN x'' THEN vt1.c0 END) FROM vt1, vt0 WHERE ((x'5024' IN ('Bd\\nx')) COLLATE NOCASE); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(NULL AS REAL) COLLATE RTRIM); -- 0ms;
SELECT ((((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE) FROM vt1 GROUP BY ((((vt1.lid) NOT NULL))>=(vt1.c1)), NULL, (vt0.c0 IN ());SELECT DISTINCT NTILE(((vt1.c0 IN ()) IN ())) OVER (), ((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)) COLLATE RTRIM, COUNT(*) OVER () FROM vt1 WHERE (((((((0xfffffffffdb0a50e)>(NULL)))AND((('1417878423') IS FALSE))))OR(CAST('-2187550' AS NUMERIC))));SELECT ALL (((- (vt0.c0))) ISNULL) FROM vt0, vt1 WHERE ((((('2070123823') NOTNULL))/(((('')) NOT BETWEEN ((NULL)) AND (('')))))) LIMIT -1237499159; -- 1ms;
SELECT ALL (- ((((vt0.c0, vt0.c0, vt1.c0))>=((vt1.c0, vt1.lid, ''))))) FROM vt1, vt0 WHERE (CAST(CASE NULL  WHEN 0.9439147407548769 THEN -4.45101165E8 WHEN 0.7230224961561604 THEN x'1f2c' WHEN NULL THEN 'mA6p+eIjr' WHEN NULL THEN NULL WHEN '-694445064' THEN 'Z#&n?I6' ELSE '' END AS BLOB)); -- 0ms;
SELECT ALL (json_array_length(vt1.c1, vt1.c1) IN ()) FROM vt1, vt0 WHERE (((CASE WHEN 0.5514960177363823 THEN '1094408157' END) BETWEEN ((('')%(NULL))) AND (0.27695444982975026))); -- 0ms;
SELECT ALL CAST(vt1.c1 AS TEXT) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))!=(((vt1.c1)>(vt1.c0)))), (- ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), (((vt1.c1 IN (vt1.c1)))GLOB(((vt1.c0)>(vt1.c1)))) FROM vt1, vt0 WHERE ((((((x'')) BETWEEN (('')) AND ((x''))))AND(((NULL) BETWEEN (0.05887955652205312) AND (-795934779))))); -- 0ms;
SELECT ALL (NOT (UPPER(vt1.c0))), ((CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c1 END) BETWEEN ((NOT (vt1.c1))) AND (((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(0.9202594784536032)))), ((((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)))&(MAX(0.5523372806184242))), MAX((((vt1.c1, vt0.c0, vt1.c1)) NOT BETWEEN ((vt1.lid, vt1.c0, vt1.c1)) AND ((x'', vt1.lid, vt1.c1)))), ((((((vt0.c0)||(vt1.c0)))AND((((('0.6676403858279129')AND(0.37194298852569374)))OR(vt0.c0)))))OR(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT '' FROM vt0 WHERE (CAST(CAST(x'' AS NUMERIC) AS NUMERIC)); -- 0ms;
SELECT ((((vt0.c0)<>(vt1.lid))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.lid THEN vt1.lid END) AND (((((vt1.c1)AND(vt1.c0)))AND(vt0.c0)))) FROM vt0;SELECT CASE ((((((((vt1.lid)AND('')))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c1)IS NOT(vt0.c0)) THEN COALESCE(vt1.c0, vt1.lid, '\n[', vt0.c0) END FROM vt0 WHERE (CASE '-659537061'  WHEN CAST('' AS INTEGER) THEN CASE 0x4fef6ad9  WHEN '-1563652943' THEN NULL END END) ORDER BY (((TRIM(vt1.c1, vt0.c0)))>((CAST(vt1.c0 AS TEXT))))  NULLS LAST;SELECT DISTINCT AVG(((vt1.c1)<(vt1.c1))) OVER () FROM vt1, vt0; -- 1ms;
SELECT ALL ((((((vt1.c1) IS TRUE))AND(((vt1.c0) NOTNULL))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.lid)))), CASE (- (vt1.lid))  WHEN CASE vt0.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt1.c1 AS INTEGER) WHEN LIKELIHOOD(vt1.c1, 0.644744663138754) THEN CASE WHEN vt1.lid THEN vt1.c0 END WHEN 0.8090593121102093 THEN CASE WHEN 'v' THEN vt1.lid ELSE vt1.c0 END ELSE ((vt1.lid)<>(vt1.lid)) END, (vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY FROM vt1 WHERE (ABS(DISTINCT (- (NULL))));SELECT ((vt1.c0)+(vt1.lid)) COLLATE NOCASE FROM vt1 WHERE ((((0.5267722138948285 IN ('q', NULL))) NOT BETWEEN ((('1528146954') NOT BETWEEN ('') AND (x''))) AND (json_valid('*e	Y4G#A')))); -- 0ms;
SELECT ALL ((NULL) IS FALSE) COLLATE NOCASE, (((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)), UNLIKELY(vt1.c1), CASE NULL  WHEN 0x5698dcfa THEN vt1.lid WHEN '-1172166803' THEN vt1.c1 WHEN vt1.c1 THEN vt1.lid END))=((LENGTH(vt1.c1), NULL, CAST(vt1.c1 AS NUMERIC)))), ((((CAST(vt1.c1 AS NUMERIC))OR(vt1.c1)))AND((~ (vt1.c1)))) FROM vt1, vt0; -- 0ms;
SELECT ALL (~ ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) FROM vt0 LIMIT 571634532;SELECT DISTINCT x'1afe', ((vt0.c0) IS TRUE) COLLATE BINARY COLLATE RTRIM, (MAX(vt1.c1) IN ()) FROM vt1, vt0 WHERE (HEX(DISTINCT ((0.3197597373645493) ISNULL))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((((NOT (x'')))>>(NULL))) ORDER BY ((DATETIME(vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c0))<<((NOT (vt1.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (+ (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)))AND(vt1.lid)))AND(vt1.c0)))), vt0.c0 COLLATE BINARY COLLATE RTRIM, SUM(vt0.c0) OVER () FROM vt1 WHERE (x'');SELECT DISTINCT ((TOTAL_CHANGES())IS NOT(COUNT(*))) FROM vt0, vt1 GROUP BY x''; -- 0ms;
SELECT DISTINCT COUNT(MIN((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))) FROM vt0 LIMIT -107914683;SELECT DISTINCT MIN(TYPEOF(vt1.c0)), CAST(CAST(vt1.c1 AS INTEGER) AS REAL), ((((((((((((vt1.c1)OR(vt1.c1)))OR('0.7979031716615594')))AND(vt1.lid)))AND(vt0.c0)))OR(((((vt0.c0)OR(vt1.lid)))AND(vt1.c1)))))OR((~ (vt1.c1)))) FROM vt0;SELECT ALL CAST(((vt1.c1)IS(vt0.c0)) AS REAL), CASE COUNT(vt1.lid)  WHEN CAST(vt1.lid AS BLOB) THEN CASE WHEN x'' THEN vt1.lid WHEN vt1.c0 THEN -659537061 WHEN vt1.lid THEN 'GG{ZWLHN' END END, (NOT (UPPER(vt1.lid))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, vt0.c0, vt1.c1)) AND ((vt1.c1, vt0.c0, vt1.lid))))), (TRIM(DISTINCT vt1.c0, vt1.lid) IN (vt1.c1, (((vt1.c1, vt1.c0, vt0.c0))!=((vt0.c0, vt1.c1, vt1.c0))))), x'' COLLATE NOCASE FROM vt1 WHERE ('796460120');SELECT '1607939354' COLLATE RTRIM FROM vt1, vt0 WHERE (TYPEOF(DISTINCT ((((((((x'256a')OR(0.46373774530564604)))AND('1292933301')))AND(7.9646012E8)))OR(NULL)))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.lid)) AS BLOB), ((COUNT(*))|(CASE WHEN vt1.c0 THEN vt1.c0 END)), ((((CAST(vt0.c0 AS INTEGER))AND(((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))))OR(((vt0.c0)<>(vt1.lid)))) FROM vt1, vt0 WHERE (((('0mnI&dJ	O' IN (NULL)))<<((0.4607144451327838 IN (x''))))) INTERSECT SELECT DISTINCT ((('-1531287932', vt1.lid, NULL)) BETWEEN ((((vt0.c0) IS TRUE), IFNULL(DISTINCT vt1.c0, 0.7717639181639651), ((vt1.lid)AND(vt1.c0)))) AND ((((vt0.c0) ISNULL), ((((vt1.c0)OR(vt1.lid)))AND(vt1.c1)), (NOT (vt0.c0))))), RANK() OVER (), DENSE_RANK() OVER () FROM vt1, vt0; -- 0ms;
SELECT COUNT(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) OVER (), ((((vt1.c0) IS FALSE))%(((vt1.c1)|(vt0.c0)))), COUNT(CAST(vt1.c1 AS BLOB)) OVER () FROM vt1, vt0 WHERE ((CASE ''  WHEN 4.28979449E8 THEN 0x2706a135 WHEN '-1724220544' THEN NULL WHEN 'zu/RmW9-' THEN NULL ELSE 0.19568763555489566 END IN ())); -- 0ms;
SELECT DISTINCT (((vt1.c0)||(vt1.lid)) IN ()) FROM vt0, vt1 WHERE (((CAST('' AS REAL)) NOT BETWEEN (((('lq	m]~j'))>=((x'')))) AND (((0x2c2d27c1) IS TRUE)))) UNION ALL SELECT ((vt1.c1) NOT NULL) FROM vt0 LIMIT -1158992586 OFFSET -1403885787;SELECT IFNULL(DISTINCT ((((vt1.lid)OR(vt1.c0)))OR(vt1.c1)), CASE WHEN vt0.c0 THEN NULL ELSE vt1.c1 END) FROM vt0 WHERE (-760089486);SELECT (((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))))<=(((vt1.c1 IN (vt0.c0, vt1.lid))))), ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt1.c1)AND(vt1.c1)))OR(vt0.c0))) AND (AVG(vt0.c0))), ((((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))IS(CAST(vt1.c1 AS TEXT))) FROM vt1 WHERE (((((((('-814900135'))>=(('sZ'))))OR(CAST(-108915663 AS BLOB))))OR(CAST('-1958451733' AS REAL)))) GROUP BY CASE WHEN ((vt1.c1)-(vt0.c0)) THEN '1728739374' WHEN ((vt1.lid)OR(vt1.c0)) THEN x'' WHEN ((vt1.lid) NOTNULL) THEN CAST(vt0.c0 AS BLOB) WHEN CAST(vt1.c0 AS INTEGER) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) WHEN vt1.c0 THEN '643793046' END HAVING (((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))>(MIN(vt1.c1, vt0.c0)));SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((CASE 0.27376802925443977  WHEN 0.10969147872220153 THEN NULL ELSE NULL END)/((- (0.08204286999183807))))); -- 0ms;
SELECT (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('0.646086169178126', vt1.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) COLLATE RTRIM COLLATE RTRIM FROM vt1;SELECT DISTINCT ((((vt0.c0)<=(vt1.c1)))LIKE(NULL)), rtreenode(((NULL)<(vt0.c0)), 0.3590713457558736), (((NULL))==((CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.lid END))) FROM vt0 CROSS JOIN vt1 ON ((0.02398867049524156) IS FALSE); -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN 0X2f790458 THEN vt1.lid ELSE vt1.lid END)OR(((vt1.lid) NOTNULL))))OR(AVG(vt1.c0))))OR((('42065738') ISNULL))))OR(x'dc31')) FROM vt1 WHERE (CAST(CASE x''  WHEN NULL THEN '970271615' ELSE '0?' END AS NUMERIC)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), NULLIF(CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN vt1.c1 THEN NULL WHEN x'124b3be2' THEN vt1.c1 WHEN NULL THEN vt1.c1 END, COUNT(*)), MAX(((vt1.lid)||(vt0.c0))) FROM vt0 ORDER BY x'', ((vt1.lid COLLATE BINARY)<(((vt1.c1)=(vt1.c0))))  NULLS LAST, (((vt1.lid, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((x'')/(vt1.c0)), ((vt0.c0)||(vt1.c1)))) AND (((+ (vt1.c0)), json_type(vt1.c1), vt1.c1)));SELECT DISTINCT ABS(((((((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) FROM vt1, vt0 WHERE (((CAST('0.35605120879523877' AS BLOB)) NOTNULL)); -- 1ms;
SELECT DISTINCT NULL FROM vt0 WHERE (LTRIM(((0Xffffffffb40332d7)<<('fa(QL믘')), CASE WHEN x'' THEN x'' ELSE x'' END)); -- 0ms;
SELECT ALL (((x'2b68')) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((UPPER(vt0.c0)))) FROM vt1, vt0 GROUP BY (((vt1.lid IN ()))>=((((vt1.lid, vt1.c1, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0))))); -- 0ms;
SELECT DISTINCT SUM(((((vt1.c0)AND(x'fbc8')))AND(0.4441411170168087))) OVER ( ORDER BY ((((vt1.c1)<<(NULL)))|((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.c0)))))  NULLS FIRST), UPPER(vt1.lid), (((((vt0.c0))<=((vt1.lid))))%(MAX(vt0.c0))) FROM vt1;SELECT DISTINCT COALESCE(vt0.c0 COLLATE BINARY, CAST(vt1.c0 AS BLOB)) FROM vt0 WHERE ((((('H{')/(x'a1d9'))) IS FALSE)) LIMIT -1465566035 OFFSET 0;SELECT DISTINCT TOTAL(LIKE(vt1.lid, vt0.c0, ',')) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP), (((NOT (vt1.c1))) BETWEEN (NULL) AND (HEX(vt1.lid))), vt1.c1 COLLATE BINARY FROM vt1 WHERE ((((NOT (0.9752509186868736)))<=(((0.12713010957968351)>=(x'')))));SELECT DISTINCT (((NOT (359988520)))GLOB((vt1.c1 IN (vt0.c0)))) FROM vt1;SELECT (((((vt1.c1) IS TRUE)))<((CASE WHEN vt0.c0 THEN 0.956127570629063 END))) FROM vt0;SELECT ALL ((((((((((vt0.c0)AND(vt1.lid)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.lid)))<<(((vt1.c0)<<(vt1.c1)))) FROM vt0 GROUP BY vt0.c0 ORDER BY CAST(HEX(DISTINCT vt1.c0) AS TEXT) DESC, LIKELIHOOD(DISTINCT CAST(vt1.lid AS INTEGER), 0.19003084044889973) ASC, vt1.c0 DESC  NULLS LAST;SELECT vt0.c0 FROM vt0 GROUP BY LOWER(vt1.lid), ((((vt1.c1)AND((~ (vt1.c0)))))OR(((vt1.lid) NOT NULL))), ((((((((((((vt1.c1 COLLATE BINARY)OR((vt1.c0 IN (vt0.c0, '1310079451')))))OR(QUOTE(vt1.c1))))OR(((((vt1.lid)AND(vt0.c0)))OR(vt1.lid)))))AND(((vt0.c0) ISNULL))))AND((((vt1.lid, NULL, vt1.c1)) BETWEEN ((vt1.lid, vt1.c0, vt0.c0)) AND ((vt1.lid, vt0.c0, vt1.c0))))))OR(((vt1.lid)||(vt1.lid))));SELECT DISTINCT vt1.c0 FROM vt0 WHERE (SUBSTR(((NULL) NOT BETWEEN (0.034770636271575284) AND (1.31769637E9)), ((NULL)*(1.849246865E9)))) GROUP BY (vt0.c0 IN ()) HAVING (((SUM(vt1.c0), 0.9515289258335554, (((vt1.lid))>=((vt0.c0))), '1459437144', ((((vt1.c0)AND(vt1.lid)))AND('r{1b'))))<=((TRIM(DISTINCT vt1.c1), (vt0.c0 IN ()), ((vt1.c0)+(vt1.lid)), '}rZa', ((vt0.c0)+(vt1.c0)))));SELECT ((((vt0.c0)>(vt1.c0)))IS(SUM(vt1.c1))), (((((vt1.c1))>((vt1.c0)))) BETWEEN (-1.138477299E9) AND (COALESCE(DISTINCT vt1.lid, vt1.lid))), HEX(DISTINCT ((vt1.c0) BETWEEN (vt1.lid) AND (vt0.c0))) FROM vt0 WHERE (((((('-920265335', x'4a56', x'')) NOT BETWEEN ((NULL, NULL, '1744830433')) AND ((NULL, 0.05622270696215914, '8I%aJ/Zd'))))>=((('Np') NOT BETWEEN (NULL) AND (x'75ca')))));SELECT ALL (CAST(vt1.c1 AS BLOB) IN ()), COUNT(*) OVER (), CAST(vt1.c1 AS REAL) COLLATE RTRIM COLLATE BINARY FROM vt1, vt0; -- 0ms;
SELECT (((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c1)))) NOT BETWEEN (((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c0))) AND (x'')) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(TYPEOF(DISTINCT 0.405924478013016) AS INTEGER) FROM vt0, vt1 LIMIT 1237892124; -- 0ms;
SELECT AVG(COALESCE(vt1.c0, vt0.c0)) OVER () FROM vt1, vt0 WHERE (((((x'') IS FALSE)) BETWEEN ((+ ('T14O8SO[8'))) AND ((((NULL))<(('7g')))))); -- 1ms;
SELECT DISTINCT ((((((vt0.c0)|('TL잷/TVG\')))OR(vt1.c1 COLLATE BINARY)))AND(AVG(vt1.c0))) FROM vt0;SELECT (('-1882820534')LIKE(CASE WHEN vt0.c0 THEN vt1.lid END)) FROM vt0, vt1 WHERE ((((((0.645979402431223)IS NOT(NULL))))<=((json_array_length(0.3062534456739612))))); -- 0ms;
SELECT DISTINCT COUNT((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((0.7656213762207331)))) FROM vt1 WHERE (CAST(CAST(x'' AS INTEGER) AS REAL)); -- 0ms;
SELECT (((- (vt1.lid)))>=((vt0.c0 IN ()))) FROM vt1, vt0 WHERE (HEX(DISTINCT json_type(NULL))); -- 0ms;
SELECT DISTINCT (((vt1.c1 IN (vt0.c0)))%(vt0.c0)), CAST(COALESCE(DISTINCT vt0.c0, vt0.c0) AS TEXT), NTH_VALUE((((vt1.c1)) BETWEEN ((((vt1.lid)>(vt1.lid)))) AND ((((vt1.c1)AND(vt1.lid))))), CASE WHEN (vt1.lid IN ()) THEN vt1.c1 END) OVER (), CAST(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS TEXT), '-1602735458' FROM vt1;SELECT DISTINCT x'045e' COLLATE BINARY FROM vt0 WHERE (LIKELY((('x3Hyzu')IS('660954648')))); -- 0ms;
SELECT DISTINCT (((vt1.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((vt1.lid))) FROM vt0, vt1 WHERE (('' IN (x'', '-1724220544')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c0)|(vt0.c0)) THEN UPPER(DISTINCT vt0.c0) END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))) OVER () FROM vt1, vt0; -- 1ms;
SELECT DISTINCT ((vt1.c1)IS NOT(vt1.lid)) COLLATE BINARY FROM vt1; -- 0ms;
SELECT ALL SUM(((vt1.c0)>=(x''))) FROM vt1, vt0 WHERE (UPPER(NULLIF(0.0567725642452821, 990758970))); -- 0ms;
SELECT (((((vt1.c1)|(vt1.c0))))<((((((vt1.lid)OR(x'')))OR(vt0.c0))))) FROM vt0 WHERE ((((((((((((((('U+\')<>(0.6676403858279129)))AND(COALESCE(DISTINCT '287391201', 0.6658859407837444))))OR(CAST(0.44359796850141375 AS REAL))))OR(x'a686' COLLATE BINARY)))OR(((0.23457159822503904) NOT BETWEEN (0.946198699516826) AND (x'')))))OR(((x'97c3d135')IS NOT(x'')))))OR(0.35831263464532226))) GROUP BY (((vt1.c0, vt1.c0, vt1.c1)) BETWEEN ((vt1.lid COLLATE RTRIM, CAST(vt1.c0 AS BLOB), ((vt1.lid)=(vt1.c1)))) AND (((('%맚n ') IS FALSE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)), vt1.c1))), '0.15245827211610186', vt1.c0, CASE ((vt1.c0) IS TRUE)  WHEN (vt1.c0 IN ()) THEN -6.591368E8 WHEN (((vt1.c1)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) THEN NULL WHEN '2142309816' THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE ((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)) END, ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))) BETWEEN (1.292933301E9 COLLATE BINARY) AND ((vt1.c1 IN ()))) ORDER BY (((vt1.c0 IN ())) BETWEEN ('2102235969') AND (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;SELECT DISTINCT CASE (((vt0.c0))>((0xffffffffb7b0f0ab)))  WHEN vt1.lid THEN CAST(vt1.lid AS REAL) END FROM vt1, vt0 WHERE (((((('-1363461257'))<=((x''))))IS((('-1188376485')&(''))))); -- 0ms;
SELECT DISTINCT (((CAST(vt1.c0 AS INTEGER), CASE vt1.c0  WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END, ((vt1.lid)IS(vt1.c1))))<(((((vt1.lid, vt1.lid, vt1.lid))>=((vt1.lid, vt1.c0, vt1.lid))), ((vt0.c0) IS TRUE), SUM(vt1.lid)))) FROM vt0;SELECT DISTINCT vt1.c1, ((COUNT(*))LIKE(vt1.c1)), CASE ((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.lid))  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((-569122348))) THEN vt1.c0 COLLATE NOCASE ELSE CASE vt1.c1  WHEN vt1.c1 THEN vt1.lid WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END END FROM vt0 WHERE (((((NULL)-('1446451367'))) NOT BETWEEN ((NOT ('33228445'))) AND ((+ ('643795753')))));SELECT DISTINCT 'Uy&TPn}hi' FROM vt1; -- 0ms;
SELECT ALL CASE WHEN ((vt1.c1)GLOB(vt1.c0)) THEN ((((((((vt0.c0)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END, NULL, CASE WHEN vt0.c0 THEN vt1.c0 END FROM vt0, vt1 WHERE ((((((x'8301') NOTNULL)))>(((('2036468539')||(x'33b5')))))); -- 0ms;
SELECT GROUP_CONCAT(vt1.c0), ((GROUP_CONCAT(vt1.c0)) NOTNULL), IFNULL(DISTINCT vt1.c0 COLLATE NOCASE, (~ (vt1.lid))), ((((((vt1.c0) IS FALSE))AND(((vt1.lid) IS FALSE))))OR(CAST(vt1.c0 AS INTEGER))), ((+ (vt1.c1)) IN ()) FROM vt0;SELECT NULL FROM vt0 WHERE ((json_array_length('-176952312') IN ())); -- 0ms;
SELECT (((- (vt1.c0)))AND((vt0.c0 IN ()))) FROM vt1; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (x''); -- 0ms;
SELECT ALL COUNT(COUNT(*)) FROM vt0, vt1 WHERE ((('>') NOT BETWEEN (NULL) AND ('5翼꼘')) COLLATE RTRIM);SELECT DISTINCT (CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE NULL END IN ()), COUNT(((((vt1.c1)AND(vt0.c0)))OR(vt1.c0))), ((((vt1.c1 COLLATE RTRIM)OR(MIN(vt1.lid))))AND(vt1.lid)) FROM vt0, vt1 LIMIT 1614119227 OFFSET -450146099; -- 0ms;
SELECT CAST(vt1.lid AS NUMERIC) COLLATE NOCASE COLLATE NOCASE FROM vt1 WHERE (((((((((NULL COLLATE BINARY)OR(CASE WHEN '1853470988' THEN NULL WHEN NULL THEN '-1003427659' WHEN 0x5de02240 THEN 38494610 ELSE '1814460691' END)))OR(NULL COLLATE BINARY)))AND(((x'') NOTNULL))))AND((- (-1171317645))))); -- 1ms;
SELECT ALL CAST(vt0.c0 COLLATE RTRIM AS REAL) FROM vt0 LIMIT 1993953360; -- 0ms;
SELECT DISTINCT CASE ((vt1.c0) ISNULL)  WHEN (NOT (vt0.c0)) THEN ((vt1.c0)!=(vt0.c0)) WHEN SUM(vt1.c1) THEN MIN(vt1.c1) WHEN vt1.c1 COLLATE BINARY THEN SUM(vt1.c0) END, (CAST(vt1.c0 AS BLOB) IN (vt0.c0, vt1.c0)), (~ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))) FROM vt0, vt1; -- 0ms;
SELECT vt1.c1 FROM vt1 WHERE ((~ (('1085681931' IN (1.3183012104278635E-4, 0.4011594140021255))))); -- 0ms;
SELECT DISTINCT CASE WHEN vt1.lid COLLATE BINARY THEN ((vt0.c0)>(vt1.c0)) END FROM vt1, vt0 WHERE ((((NOT (0Xffffffffc4008937)))<=(((0.18574701163787866)||(x'e0dc'))))) GROUP BY ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ('1382592661' COLLATE RTRIM) AND (vt1.c0 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE vt1.c0  WHEN ((vt1.c0) NOTNULL) THEN x'' END, ((((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.c0)))))>=((((vt1.lid)AND(vt1.c1)))))) OVER (), ((((vt1.lid)GLOB(vt1.lid))) NOT BETWEEN (MIN(vt1.c0)) AND (vt1.c1)), CASE WHEN ((((vt1.lid)OR('5/鯸D\r鍁Yc')))OR(vt1.c1)) THEN NULL ELSE vt0.c0 END FROM vt0, vt1 WHERE ((+ ((('')>=(0.6688188754226213)))));SELECT (x'' IN ()) COLLATE NOCASE FROM vt0, vt1 WHERE (((((0.33859442852212684))>=((0.7979692516705432))) IN ())); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)&((('aݮ굧') BETWEEN (vt1.c1) AND (x'')))) FROM vt0, vt1 ORDER BY vt1.c1 DESC, TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.lid))) ASC; -- 1ms;
SELECT ALL TOTAL(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))) OVER () FROM vt0 ORDER BY (LIKE(vt0.c0, vt1.c1, '<') IN ())  NULLS LAST, ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE BINARY DESC  NULLS FIRST, vt1.c0  NULLS FIRST;SELECT DISTINCT CAST(CAST(vt1.c1 AS INTEGER) AS INTEGER) FROM vt1 LIMIT 488456366; -- 0ms;
SELECT ALL vt1.c0, ((vt1.c1 COLLATE BINARY)<(CAST(vt1.lid AS NUMERIC))), GROUP_CONCAT(((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))AND(0.7656213762207331)))OR(vt1.c1))) OVER () FROM vt1 WHERE (TYPEOF(CAST(428979449 AS TEXT))); -- 0ms;
SELECT AVG((((vt1.c1, vt1.c1, vt0.c0))<((vt1.lid, vt1.lid, vt1.c1)))) OVER (), ((((((vt0.c0)&(x'')))OR(((vt1.c0) ISNULL))))OR(vt1.c1)), (((vt0.c0)) NOT BETWEEN ((TRIM(DISTINCT vt1.c1, vt1.c1))) AND ((CASE vt1.c1  WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END))) FROM vt1;SELECT DISTINCT vt1.lid COLLATE RTRIM FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END)) AND (((vt1.c0 IN ())))) FROM vt1 WHERE (NULL);SELECT DISTINCT (vt1.lid IN ((vt1.lid IN ()))) FROM vt0, vt1 LIMIT -1237499159; -- 0ms;
SELECT NULL, ((((vt1.lid) IS FALSE))=((((vt1.c1, vt1.lid, vt1.lid)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.c0))))), ((((vt1.lid) BETWEEN (vt1.c1) AND (vt0.c0))) IS TRUE), ((NULL) NOT NULL), CAST(((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)) AS TEXT) FROM vt1 WHERE (CAST((((0.14439786956034384))>(('GsY\r!'))) AS BLOB));SELECT ALL (((CAST(vt1.lid AS TEXT)))!=((0.6171769180702518))) FROM vt0, vt1; -- 0ms;
SELECT AVG(vt0.c0 COLLATE RTRIM) COLLATE RTRIM FROM vt0, vt1 WHERE (((((((((((NULL) NOT BETWEEN (NULL) AND (0.3304860692884325)))OR(IFNULL(NULL, NULL))))OR(((((0.22695055794737606)AND(NULL)))OR(NULL)))))OR(CASE WHEN x'' THEN 0.43539713766699306 ELSE x'e702' END)))AND((~ (0x61a28a09))))); -- 0ms;
SELECT ALL ((vt1.c1)IS(vt0.c0)) COLLATE NOCASE FROM vt1, vt0 LIMIT -1882820534 OFFSET -368970555; -- 0ms;
SELECT DISTINCT (- (TRIM(DISTINCT vt0.c0))), CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) AS INTEGER), (((+ (vt1.c0))) NOT BETWEEN ((((vt1.lid))==((vt0.c0)))) AND (((((vt1.c1)OR(vt0.c0)))AND(vt1.lid)))) FROM vt1 WHERE (NULL);SELECT (((+ (1292933301)))/(vt1.c1)) FROM vt0;SELECT (((((- (vt1.c0)))AND((- (vt1.c1)))))OR(TIME(vt1.c0, vt1.lid, vt1.c1))) FROM vt1; -- 0ms;
SELECT DISTINCT (((- (vt1.lid)))|((((vt1.c0, vt1.c1, vt0.c0)) BETWEEN ((vt1.c1, vt1.lid, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))))), (NOT (COUNT(*))), (+ (CASE WHEN vt1.lid THEN 0.7086566375963446 ELSE vt1.lid END)) FROM vt1, vt0 GROUP BY CAST(vt0.c0 AS NUMERIC) ORDER BY ((((((vt1.c1)<=(vt1.c0)))AND(((vt0.c0)IS(x'')))))OR(CAST(vt1.c1 AS TEXT)))  NULLS LAST, ((((((vt1.c1)OR(vt0.c0)))AND(vt1.lid))) BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c1 AS REAL)))  NULLS LAST LIMIT -1863313714 OFFSET -1414341988; -- 0ms;
SELECT DISTINCT vt1.c0, MIN(vt1.c1 COLLATE BINARY), ((CASE WHEN vt1.c0 THEN NULL END)/(((vt1.c0)=(vt1.c1)))) FROM vt1; -- 1ms;
SELECT (COALESCE(vt1.c0, vt1.c1) IN ()), ABS(vt1.c1 COLLATE RTRIM), ((((((vt1.c1)AND(x'b7f9')))OR(vt1.c0))) ISNULL) FROM vt0 WHERE (QUOTE(TRIM(x'', 0.6939820048130909)));SELECT DISTINCT (((vt0.c0, vt1.c1, '0.7397239576732637')) BETWEEN ((vt1.c0 COLLATE RTRIM, (vt1.c1 IN (vt1.c0)), (vt1.c1 IN (vt1.c1)))) AND (((((vt1.c0))==((NULL))), MIN(vt1.lid), MAX(vt0.c0)))), vt1.c0, MIN(json_array(vt1.lid, '136326912')) FROM vt0;SELECT ALL COUNT(*) OVER () FROM vt1 GROUP BY vt1.c0, CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) THEN vt1.c1 COLLATE BINARY END, CAST(vt1.lid AS INTEGER);SELECT DISTINCT (AVG(vt0.c0) IN ()), ((((vt0.c0)AND(vt1.c1)))OR(vt1.lid)) COLLATE RTRIM, ((('', vt1.c1, vt1.lid)) NOT BETWEEN ((0.18538365550316993, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END, CAST(vt0.c0 AS INTEGER))) AND ((CAST(vt0.c0 AS INTEGER), ((vt0.c0) IS TRUE), SUM(vt1.lid)))) FROM vt0;SELECT ALL CAST(CAST(vt1.c1 AS NUMERIC) AS BLOB) FROM vt1; -- 0ms;
SELECT DISTINCT (~ (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END)), ((vt0.c0) NOTNULL), (NOT ((vt1.c1 IN ()))) FROM vt0 WHERE (CASE '발c'  WHEN 942263245 THEN '0.8398895713414378' ELSE 0.9053552419323798 END COLLATE BINARY);SELECT ALL ((((vt1.c0) BETWEEN (vt1.lid) AND (vt0.c0)))*(x'')), IFNULL((+ (vt1.lid)), ((vt0.c0) NOTNULL)), (~ (((vt1.c0)GLOB(NULL)))), ((((vt1.lid)>>(vt1.c1)))/(((vt1.lid)>=(vt1.lid)))), ((((((x'')OR(vt1.c1)))OR(vt1.c0)))LIKE(vt1.c0 COLLATE NOCASE)), (~ (((((vt1.c1)AND(NULL)))AND(vt1.lid)))), ((((vt1.c0)GLOB(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt1.lid)))OR(vt1.lid))) AND (('-557524330' IN ()))) FROM vt0, vt1; -- 0ms;
SELECT ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)>>(((vt1.lid)/(vt1.c1)))) FROM vt0;SELECT (((vt0.c0) NOTNULL) IN ()) FROM vt1 WHERE (((('')>>(NULL)) IN ())); -- 0ms;
SELECT DISTINCT AVG(CAST(vt1.c1 AS TEXT)) FROM vt1 WHERE ((~ (((')%')||(x''))))); -- 1ms;
SELECT ((+ (vt1.c0)) IN ()) FROM vt0 WHERE ((((((x''))<=((x'ce35')))) ISNULL)); -- 0ms;
SELECT ALL (vt1.c1 COLLATE BINARY IN ()) FROM vt0 WHERE ((((~ (NULL)))>((('0')!=(0.665901088755392))))); -- 0ms;
SELECT DISTINCT (NOT (TRIM(DISTINCT vt0.c0))), AVG(LOWER(DISTINCT vt1.c1) COLLATE NOCASE), (NOT (AVG(vt1.c1))) FROM vt0, vt1 GROUP BY ((((((((((((((((((((vt1.c1)OR(vt0.c0)))OR(vt1.lid)))OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(((((((((vt1.lid)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.lid)))AND(vt1.c0)))))AND(CAST(vt0.c0 AS TEXT))))OR(167206212)))AND(vt0.c0 COLLATE BINARY)), (+ ((~ (vt0.c0)))), (NOT ((vt0.c0 IN ()))); -- 0ms;
SELECT ALL ((vt1.lid) BETWEEN (0.7572122830149763) AND ((- (vt1.lid)))), CUME_DIST() OVER ( ORDER BY (LIKELY(DISTINCT vt1.c1) IN ())  NULLS LAST, LIKELIHOOD(DISTINCT (((vt1.lid, x'977b', vt1.c1))<>((vt1.c1, vt0.c0, vt1.c0))), 0.971557317101099)), 0.04151163490105214 FROM vt1 GROUP BY (NOT (vt0.c0 COLLATE BINARY));SELECT COUNT(*) FROM vt1 GROUP BY '' HAVING ((((vt1.lid)*(vt1.c0)))>=('-664426652')) ORDER BY CASE WHEN vt1.lid THEN NULL WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST, ((((((((0.2087724453735188)AND(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)))))OR((vt1.c0 IN ()))))OR(vt1.lid)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.c0 END)) DESC, (((vt1.lid)OR(vt1.c1)) IN ()) DESC  NULLS LAST;SELECT DISTINCT ((LIKELY(DISTINCT vt1.c1)) NOT NULL) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY UPPER(((vt1.c0)|(vt1.lid))) ASC) FROM vt0 WHERE (CASE WHEN UNLIKELY(x'62e1') THEN (((0.1607653229975493)) NOT BETWEEN ((359988520)) AND ((x'cbca1943'))) ELSE CASE WHEN '1551816044' THEN x'' ELSE 0xffffffff9cb7f223 END END) ORDER BY (NOT (((vt1.c0)LIKE(vt1.lid)))) DESC  NULLS FIRST;SELECT DISTINCT ((((((vt1.c0) IS TRUE))OR(TRIM(DISTINCT vt1.c0))))AND(CAST(0xffffffff95addce7 AS TEXT))) FROM vt1; -- 1ms;
SELECT DISTINCT '1399877332' FROM vt0, vt1 WHERE ((((0.736343558393446, 0xfffffffff9030d9c, 0.7895838458886473)) BETWEEN (((- (x'')), ((((0.8843531639937369)OR(NULL)))AND('犋V&	{崬')), CAST(0X50733fa8 AS TEXT))) AND (((~ (NULL)), CASE NULL  WHEN '-1018316167' THEN 0.4457535723887335 ELSE '6}  0' END, CASE WHEN NULL THEN 0.9500838370713777 ELSE x'' END)))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.lid))) AND (0.8623121116333776)) FROM vt0, vt1 WHERE (((((0.730730926833496) ISNULL))IS((NULL IN (''))))) ORDER BY (((((vt1.lid) NOTNULL)))<>((vt0.c0 COLLATE RTRIM)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt1 WHERE (((((x'11b8' IN (''))))>(((((0.1115874913267344)) NOT BETWEEN (('719022119')) AND ((0.5375436652921807))))))) LIMIT -981888708; -- 0ms;
SELECT ALL CAST(0.5641157224291121 AS BLOB), ((((((((vt1.lid)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0 COLLATE BINARY)))AND(((((vt1.c1)AND(vt1.c1)))AND(x'f816')))), (NOT (((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))) FROM vt0;SELECT DISTINCT ((((vt0.c0)IS NOT(vt1.lid))) NOT BETWEEN ((((vt1.lid, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.lid, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1)))) AND (COUNT(vt1.c0))) FROM vt1 WHERE (((((UPPER(x''))OR(((NULL)||(0.5524039693792842)))))AND('' COLLATE NOCASE)));SELECT ALL ((((- (vt1.c1))))<((((vt1.c0) BETWEEN (0.3305644771774201) AND (vt1.c1))))), CAST(((vt0.c0)>>(vt0.c0)) AS REAL), vt0.c0 COLLATE RTRIM COLLATE NOCASE FROM vt1 GROUP BY ((vt0.c0) BETWEEN ((+ (vt1.c1))) AND (((vt0.c0) NOTNULL))), (((('f6')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ()), (NOT (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))) HAVING (+ (vt1.c0));SELECT DISTINCT TYPEOF(DISTINCT (vt1.c1 IN ())), CASE WHEN GROUP_CONCAT(vt1.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END, (((((vt1.lid))<((vt1.c0))))>>(RTRIM(vt1.c0))) FROM vt0 WHERE ((((((-1.188376485E9)) NOT BETWEEN ((0.5618334765371406)) AND ((x''))))AND(MAX(0.583106835071695, '-1597025428', x'2bf9', '1399877332'))));SELECT '0.8398895713414378' FROM vt0 GROUP BY ((((('')) NOT BETWEEN ((0.9416000685229016)) AND ((vt1.c1)))) NOTNULL) HAVING (NOT (IFNULL(vt1.c1, vt1.lid)));SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))|((~ (vt0.c0)))), ((0.8099036488900092) BETWEEN (((vt1.c0)!=(vt1.c1))) AND ((~ (vt1.lid)))), (- (((vt1.c0) NOTNULL))) FROM vt0 ORDER BY ((CASE x''  WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN 0.5989095351608077 ELSE vt1.lid END) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.lid)>(vt1.c0)))) ASC  NULLS FIRST;SELECT ALL (((((vt1.c1, 0xffffffffffde9ee2, vt0.c0)) NOT BETWEEN ((vt1.c1, '-1206744422', vt1.c1)) AND ((NULL, vt1.c1, vt1.c0)))) ISNULL) FROM vt1 WHERE (((0.10561399547723005) NOT BETWEEN (((0.025897883078144224)||(x''))) AND (CAST(x'e79a' AS BLOB))));SELECT DISTINCT ((((((vt0.c0)/(vt1.lid)))AND(CASE vt1.c1  WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 END)))AND(((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))), (~ (GROUP_CONCAT(x''))), ((CASE WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END)+(((vt0.c0)LIKE(vt1.c1)))) FROM vt0 WHERE (((((((((CASE WHEN x'' THEN '1399877332' ELSE '-176952312' END)OR((((0.9342498669227014, 0Xffffffffd2b1f472, '-1404949517'))>((NULL, 0x764f90ff, '*LU3pf{'))))))AND((x'3f67' IN ()))))OR(CASE x'8d7b'  WHEN 0X6e077c4 THEN x'' ELSE '' END)))AND((~ ('-526037893'))))) GROUP BY (- (x'a570' COLLATE RTRIM));SELECT GROUP_CONCAT((('rln\r臠ࡐa')*(vt1.lid))), ((((0.30569115381482015)%(vt0.c0)))<>(((vt1.c1) NOT NULL))), vt1.c0, vt1.c0, (((((vt1.lid))<=((vt1.c0))))OR(((vt1.c1) IS TRUE))) FROM vt0, vt1 WHERE (((('0.4457535723887335') NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT CAST(COUNT(vt1.c0) AS BLOB) FROM vt0 ORDER BY ((('%<', ((vt1.lid)<(vt1.lid)), CASE vt1.lid  WHEN vt0.c0 THEN '' END, ((vt1.c1)<<(vt1.c0)), ((vt1.lid)IS(vt0.c0))))<((((vt1.c1)IS NOT(vt1.lid)), (((vt1.c0))<((''))), vt1.c1 COLLATE NOCASE, vt0.c0 COLLATE BINARY, CASE vt1.c1  WHEN vt1.lid THEN vt1.c1 WHEN vt1.lid THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END))) DESC  NULLS LAST;SELECT (NOT (((vt0.c0)==(x'')))), CASE vt1.c1  WHEN -2187550.0 THEN x'' END COLLATE NOCASE, ((vt1.lid) NOT NULL) COLLATE RTRIM FROM vt0, vt1 WHERE (((CAST(0.11958484225760824 AS TEXT))==(((-1.188376485E9)<=('\-'))))) GROUP BY CAST(CAST(vt1.lid AS INTEGER) AS REAL), CAST(((((x'')OR(vt1.c1)))AND(vt0.c0)) AS INTEGER), CASE WHEN CAST(vt1.lid AS INTEGER) THEN CAST(vt1.lid AS TEXT) ELSE (((vt1.lid)) BETWEEN ((x'')) AND ((vt1.c1))) END HAVING ((vt1.c1) NOT BETWEEN ((vt1.c1 IN (vt1.c0))) AND (vt1.lid)); -- 0ms;
SELECT DISTINCT ((((((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (NULL)))AND(vt1.lid)))OR((- (vt1.lid)))))AND(CAST(vt1.c1 AS TEXT))))OR((~ (vt1.c1)))), ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE RTRIM COLLATE NOCASE, CAST(vt1.c0 COLLATE BINARY AS TEXT) FROM vt0, vt1 WHERE (CASE ((((((((0.4457535723887335)OR('e.')))OR(x'')))AND(-1427542077)))OR(''))  WHEN CASE NULL  WHEN -1293119215 THEN x'' ELSE NULL END THEN (~ ('')) WHEN (- (269244687)) THEN ((']/u')-(x'')) WHEN (- (0.19478907964536718)) THEN CASE WHEN 0.4768205479706359 THEN '-59380659' WHEN NULL THEN NULL WHEN NULL THEN x'' ELSE 0.8688813959169707 END ELSE json_object('ho', NULL, NULL, '', x'', 876079878) END);SELECT ALL (((vt1.lid) BETWEEN (vt1.c1) AND (0.7825362324774293)) IN ()) FROM vt0; -- 0ms;
SELECT ALL 0x4119041f, (NOT (((vt0.c0) NOTNULL))), ((CASE WHEN vt1.c0 THEN vt0.c0 END)IS(0.2919624895839499)) FROM vt0, vt1 LIMIT -1206744422; -- 0ms;
SELECT DISTINCT (+ (vt1.lid COLLATE BINARY)) FROM vt0;SELECT ALL ((((NULL) BETWEEN (vt1.c1) AND ('0.8102903397108696'))) IS TRUE) FROM vt1 ORDER BY x'' ASC  NULLS LAST; -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY)%(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))) FROM vt1, vt0 WHERE (((((x'5c6d') ISNULL))=(((NULL)<=(0.27887698346365164))))) LIMIT 1993953360 OFFSET 1835551348; -- 0ms;
SELECT ((((vt0.c0) IS FALSE))<=(CAST(vt0.c0 AS NUMERIC))) FROM vt1, vt0 ORDER BY ((((vt0.c0)AND(0.9006444083247263)))AND(vt1.lid)) COLLATE BINARY DESC LIMIT 428979449; -- 0ms;
SELECT '-7324119' FROM vt1, vt0; -- 1ms;
SELECT ALL ((((((((CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid WHEN vt1.c1 THEN vt0.c0 END)AND(vt1.lid)))AND(vt1.c0)))AND(COUNT(*))))AND(((vt0.c0)GLOB(vt1.c0)))) FROM vt1;SELECT x'', MIN(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.lid))), (TOTAL(vt1.c0) IN ()) FROM vt0 ORDER BY CAST(((((vt1.lid)AND(vt1.lid)))AND(vt1.lid)) AS REAL) DESC  NULLS FIRST, LIKELY((NOT (vt1.c1))) ASC;SELECT DISTINCT ((((((vt1.lid) NOT BETWEEN (vt1.c0) AND (x'7b2d')))OR((vt1.c0 IN ()))))OR(vt1.c1 COLLATE BINARY)) FROM vt1, vt0 LIMIT 229682769; -- 0ms;
SELECT DISTINCT 0.24696292270408682 FROM vt0; -- 0ms;
SELECT ((((vt0.c0)|(vt1.lid)))*(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.c1 ELSE vt1.c1 END)) FROM vt1 LIMIT 1292933301 OFFSET -1633615650;SELECT DISTINCT ((((vt0.c0) IS TRUE)) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END) AND (((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))) FROM vt1 NOT INDEXED WHERE (((((0.486464905497796) NOTNULL)) NOT NULL));SELECT DISTINCT ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid))) NOT BETWEEN (((vt0.c0)AND(-246444188))) AND (((vt1.lid) IS FALSE))), ((CAST(vt1.c1 AS INTEGER)) NOT NULL), (~ (((0.20216008951880282)==(vt1.lid)))), (~ (((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)))), ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)IS((~ (vt1.lid)))), (((vt1.c0 COLLATE NOCASE, x'', vt1.c0, vt1.c0, CASE NULL  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c1 END))<((CAST(x'' AS TEXT), ((vt0.c0) NOTNULL), SUM(vt1.lid), CAST(vt1.c0 AS BLOB), ROUND(vt1.lid, vt0.c0)))), ((vt0.c0) IS FALSE) COLLATE BINARY FROM vt1, vt0 WHERE (0.2575708604335881); -- 0ms;
SELECT DISTINCT MIN(((((vt1.lid)AND(vt1.c1)))AND(vt1.c1))), vt0.c0, (((vt1.c1, vt1.c1, vt1.lid))!=((1.341090521E9, '1744830433', vt0.c0))) COLLATE BINARY FROM vt1, vt0; -- 0ms;
SELECT DISTINCT NTILE(CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.lid))) AS REAL)) OVER ( ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt1.c1) NOTNULL)) AND (vt0.c0)) DESC  NULLS LAST) FROM vt1 WHERE ((NOT (((1.246043052E9) BETWEEN (0Xffffffffe04ac205) AND (0.4824077326663483)))));SELECT ALL vt1.c1, ((((NULL IN ())))>(((vt0.c0 IN ())))), ((((vt1.c1) NOT BETWEEN (0.6572604966267273) AND (vt1.c1))) IS FALSE) FROM vt1, vt0 WHERE (((((x'')/(0.2285364664995465))) NOTNULL)); -- 0ms;
SELECT ALL ((((0.23536857028270208)==(vt1.lid)))IS((((vt0.c0, vt1.lid, vt0.c0))<=((vt1.lid, vt1.lid, vt0.c0))))) FROM vt0 LIMIT 472156690 OFFSET 611978828;SELECT DISTINCT SUM(((vt1.c0) NOT NULL)) OVER () FROM vt0;SELECT (0.8769517537054701 IN (vt1.lid)) COLLATE NOCASE, ((((((((((vt1.c1)AND(vt1.c1)))OR(vt1.lid)))AND(vt1.c0)))OR(vt1.c0))) BETWEEN ((((vt1.c1))<=((vt0.c0)))) AND (((((vt0.c0)AND(x'4be5')))OR(vt1.c0)))), 0.33670594490122097 FROM vt1, vt0 WHERE (CASE CASE 0.7878043766434524  WHEN 0X14bfd9c2 THEN 'Y9FBw}c/1' ELSE x'' END  WHEN '' COLLATE RTRIM THEN CAST(x'' AS INTEGER) ELSE ((NULL)<<('1728739374')) END) GROUP BY ((vt1.c0) IS TRUE), NULL, '-1994127404'; -- 0ms;
SELECT ALL (NOT (MAX(vt1.c0))), (((NOT (vt1.c0)))||(((vt1.c1)/(vt1.lid)))), json_insert(((vt1.lid)-(vt1.lid)), ((vt1.lid)&(vt1.lid)), (((1.030784691E9))=((vt1.c0)))) FROM vt1, vt0 WHERE ((((x'cd26')) NOT BETWEEN (((x'' IN ()))) AND ((TRIM(0.9091378922999546, 'JU'))))) LIMIT -703180438; -- 0ms;
SELECT DISTINCT MAX(TOTAL((0.5320095703997032 IN (vt1.c1, vt1.lid)))) FROM vt0, vt1;SELECT (CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.lid WHEN vt1.lid THEN x'' END IN ()), GROUP_CONCAT((vt1.lid IN ())) OVER (), (((- (vt1.c0))) BETWEEN ((vt1.lid IN ())) AND (IFNULL(vt1.c1, vt1.c0))) FROM vt1, vt0 WHERE (((1948156715)&((('-683822675')!=(x''))))); -- 1ms;
SELECT DISTINCT (((((vt1.lid)/(vt1.c0))))>(((vt1.c0 IN ())))) FROM vt0;SELECT DISTINCT 0xffffffffd6fd470e FROM vt0; -- 0ms;
SELECT DISTINCT x'', (CASE WHEN vt1.c0 THEN vt1.c0 END IN (ABS(vt1.lid), (((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c1, vt1.lid, vt1.c0)) AND (('1030784691', '''F', vt0.c0))))), CUME_DIST() OVER () FROM vt1, vt0; -- 0ms;
SELECT vt1.c1 FROM vt0;SELECT DISTINCT vt1.c0, NTILE((((vt0.c0))<>((vt0.c0))) COLLATE BINARY) OVER (), ((vt1.lid)OR(-9108450.0)) COLLATE BINARY FROM vt0 WHERE ((((((('-1398365423')OR(NULL)))AND('wIKlk-')))IS(((NULL)|(0.3245093983499675)))));SELECT ALL ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (LIKELIHOOD(DISTINCT vt1.lid, 0.39687165965011995)) AND (((vt0.c0)IS(vt0.c0)))) FROM vt0;SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))*(COUNT(*))), ((CAST(vt1.lid AS TEXT)) NOT BETWEEN (AVG(vt1.c0)) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), ((HEX(vt1.c1))<>(((vt1.c0)<(vt1.lid)))) FROM vt1 WHERE ((- (((x'') IS TRUE))));SELECT SUM(((((vt1.lid)AND(vt1.c0)))AND(vt0.c0))) OVER () FROM vt0 WHERE ((((2036468539)>=(x'924b')) IN ())) ORDER BY CAST((((vt1.lid)) NOT BETWEEN ((vt1.c1)) AND ((vt1.lid))) AS BLOB) ASC;SELECT vt0.c0 COLLATE NOCASE, ((((vt1.lid)<>(vt0.c0))) NOTNULL), ((((((((NULLIF(vt1.c1, vt1.c1))OR(vt1.c0)))AND((NOT (vt1.c0)))))AND(((1871766125)||(vt1.c1)))))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))) FROM vt1, vt0 LIMIT -1354298423 OFFSET -270173840; -- 1ms;
SELECT ALL CASE WHEN '-1379516171' THEN MAX(vt1.lid) ELSE ((((vt1.c0)OR(vt1.lid)))AND(vt0.c0)) END FROM vt0;SELECT DISTINCT x'7fb6', vt1.c1, ((((CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN x'' END)AND(SUM(vt1.lid))))AND((((vt1.c1)) BETWEEN ((vt1.lid)) AND ((vt0.c0))))) FROM vt0 WHERE (x'') LIMIT -422676818;SELECT ((((vt0.c0)|(vt1.lid))) BETWEEN (TOTAL(vt1.lid)) AND (((vt1.c0)<(vt1.lid)))) FROM vt1, vt0; -- 0ms;
SELECT ((((((((((NULL)>=(vt1.c1)))AND(((-14347343) BETWEEN (vt1.c0) AND (vt1.c1)))))OR(((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))))OR(0.4088025392881336)))AND((- (vt0.c0)))), ((((vt1.c0)<=(vt1.lid)))OR(((((((((vt0.c0)OR(vt1.lid)))AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))), ((((vt0.c0)-(731360448))) NOT BETWEEN (vt1.lid) AND (CAST(vt1.lid AS INTEGER))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c1 COLLATE RTRIM)OR(((((vt1.lid)OR(vt1.c1)))AND(vt1.c1)))))AND(vt1.c0 COLLATE BINARY)) FROM vt1, vt0 WHERE (((((0.2211156770964109)=(0X589d6e47))) BETWEEN ((NOT (NULL))) AND (((NULL)OR(x'a98a'))))); -- 0ms;
SELECT DISTINCT ((((vt1.lid)OR(TOTAL(vt1.lid))))OR((vt1.c0 IN ()))) FROM vt0;SELECT ((vt1.c0) NOT BETWEEN (((vt1.lid) BETWEEN (NULL) AND (vt1.lid))) AND (vt1.lid)) FROM vt0 ORDER BY ((CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 END)-(NULL)), CASE WHEN vt1.lid COLLATE RTRIM THEN vt1.lid ELSE (- ('AW')) END DESC  NULLS LAST;SELECT ALL (- ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (+ (MIN(vt1.c1))) FROM vt1 WHERE ((((((-1237499159 IN (0.4600655630032494, x'')))OR((('j鍁') IS FALSE))))OR(1757608844))); -- 0ms;
SELECT ALL (((CAST(vt0.c0 AS TEXT)))==((vt1.c1 COLLATE NOCASE))) FROM vt1 WHERE (CAST(((0.3958839267156957) BETWEEN (x'') AND (x'324f')) AS INTEGER));SELECT DISTINCT AVG((((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid)))) OVER () FROM vt1;SELECT ((((((((((vt1.c1)<(vt1.c1)))AND((NULL IN (vt0.c0)))))OR(vt0.c0)))OR((((vt1.lid))=((vt0.c0))))))AND(MIN(vt1.c1))), '', CASE WHEN (((vt0.c0))>((vt1.c1))) THEN NULL COLLATE NOCASE WHEN ((((vt1.lid)AND(vt1.lid)))AND(vt0.c0)) THEN ((vt1.c0) IS FALSE) WHEN (((vt1.lid))>=((vt1.c0))) THEN (vt1.lid IN ()) WHEN ((vt1.c1)<<(vt1.c0)) THEN COUNT(vt1.c1) WHEN vt1.c0 THEN '0.8528891297916358' END FROM vt1, vt0 WHERE (CAST((('145049519')>(NULL)) AS REAL)); -- 0ms;
SELECT (vt1.c0 IN ()) COLLATE BINARY, (~ (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END)), CUME_DIST() OVER () FROM vt1 WHERE (CASE WHEN ((0.7016873622920982) IS TRUE) THEN 0.04986843489160797 COLLATE NOCASE ELSE x'9763' END);SELECT ALL (- ((vt1.c0 IN ()))) FROM vt0; -- 0ms;
SELECT ALL CAST(CASE WHEN vt1.c0 THEN vt0.c0 WHEN '-324393471' THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 END AS TEXT) FROM vt0, vt1 LIMIT -2101998590 OFFSET -545787376; -- 0ms;
SELECT ALL ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt0.c0)))/((('442378365') BETWEEN (vt1.c1) AND (vt1.lid)))), 0X4d1098b5, CASE ((((vt1.c0)OR(vt1.c0)))AND(0.04487278396961192))  WHEN CAST(vt1.c1 AS INTEGER) THEN (((vt0.c0))>((NULL))) WHEN CAST(vt0.c0 AS TEXT) THEN COUNT(vt1.c0) WHEN TOTAL(vt1.c0) THEN ((vt1.lid)<(vt1.c1)) END FROM vt0 WHERE ((('n')GLOB('-1134658553')) COLLATE NOCASE);SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((COUNT(vt1.c0))) AND (((vt1.c1 IN ())))) FROM vt0 INNER JOIN vt1 ON (((vt0.c0) NOT NULL) IN ()) WHERE (((((UNLIKELY(DISTINCT 0.6967482579829037))OR((- (0.8293049566025567)))))OR('Sp(ȶ1' COLLATE RTRIM))); -- 0ms;
SELECT COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE TIES) FROM vt1 ORDER BY ((((((((((((NULL)AND(vt0.c0)))AND(vt1.c1)))AND(((vt1.lid)IS(vt1.lid)))))OR((((vt0.c0))<((vt1.c1))))))OR(vt0.c0)))AND(vt1.c1 COLLATE NOCASE)) DESC  NULLS FIRST;SELECT ALL CAST(vt0.c0 AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT '' FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)IS NOT(0.5968462631582296)) IN ((vt0.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) FROM vt1, vt0 WHERE ('1326506576'); -- 0ms;
SELECT DISTINCT TOTAL(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c1 END) FROM vt1, vt0 LIMIT -167477528; -- 0ms;
SELECT ((((vt0.c0)=(vt1.c1)))-(MAX(vt1.c0))), (NOT (((vt1.c1)>>(vt1.c1)))), -2187550.0 FROM vt1 WHERE (((1779860544 COLLATE RTRIM)<>(CAST(NULL AS INTEGER))));SELECT DISTINCT (((vt1.c0, vt1.lid, '-2065653751')) NOT BETWEEN ((x'', CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END, vt1.c1)) AND ((CAST(vt1.c1 AS REAL), CAST('\rA{' AS TEXT), ((vt1.c1)LIKE(-1.833062376E9))))) FROM vt0 WHERE ('651812572');SELECT FIRST_VALUE(0Xffffffffeace42bc) OVER (), (((((((((vt1.c1)OR(vt1.c1)))AND(1349730216)))OR(vt1.c0)))OR(0X62ed9035)) IN (vt1.c0, CAST(vt0.c0 AS TEXT))), LAST_VALUE(((0.6852498412034321)=(UPPER(vt0.c0)))) OVER ( ORDER BY (x'' IN (vt1.c1)), ((((vt1.c1) BETWEEN (vt1.lid) AND (vt1.lid))) NOT NULL)), CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER), 0.31200202498583773 FROM vt0 WHERE ((((((0.4864009692589435 IN ()))OR(LIKELIHOOD(DISTINCT x'', 0.8899514783859332))))AND((('F')AND('500656177')))));SELECT ALL 0.5258449265482247 FROM vt1, vt0 WHERE (((((((x'')AND('')))OR(NULL))) IS TRUE)) ORDER BY vt1.c0 ASC  NULLS FIRST; -- 0ms;
SELECT TOTAL(((vt0.c0)+(vt1.lid))), (((vt0.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(vt1.lid))) AND ((((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))))), (((~ (vt0.c0)))GLOB(SUM(vt1.c1))) FROM vt1;SELECT DISTINCT ((vt0.c0 IN (vt1.lid)) IN ()), (((vt1.lid)) NOT BETWEEN ((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c1)<<(vt1.c0))))), LAST_VALUE((((((vt1.c0, vt0.c0, vt1.lid))==((vt1.c1, vt1.c0, vt1.c0))))-(((((vt0.c0)OR(vt1.c0)))AND(vt1.lid))))) OVER () FROM vt0, vt1; -- 0ms;
SELECT ALL CAST(vt1.lid AS NUMERIC) COLLATE NOCASE COLLATE NOCASE, CAST(vt1.c0 COLLATE BINARY AS INTEGER), FIRST_VALUE(CASE (NOT (vt1.c0))  WHEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((0.08302289515766936))) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN SQLITE_SOURCE_ID() THEN '<' WHEN vt0.c0 THEN ((vt1.c1)AND(vt0.c0)) END) OVER () FROM vt0, vt1; -- 0ms;
SELECT AVG(vt1.lid) FROM vt1 WHERE ('Ci'); -- 0ms;
SELECT ALL (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c0)-(vt1.c0)), vt1.c0, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'fadc'))))) AND ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)), (NULL IN ()), NULLIF(vt1.lid, vt1.lid)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))GLOB(((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)))), ((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (CASE '-1035466182'  WHEN vt1.lid THEN vt1.c1 END) AND ((vt1.c0 IN ()))) FROM vt0 WHERE ((- (CASE WHEN '.i' THEN 0.6000905773760654 END)));SELECT ((ABS(vt1.c1)) BETWEEN (vt1.c1) AND (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) FROM vt0, vt1 GROUP BY ((((CASE WHEN vt1.c0 THEN vt1.c1 END)AND((('-2068660364') BETWEEN (vt1.c1) AND (vt1.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt1.lid)))AND(vt1.c1)))OR(vt1.lid)))) ORDER BY ((((vt0.c0)IS NOT(vt1.lid)))%((+ (vt1.lid))))  NULLS LAST; -- 0ms;
SELECT ((x'a509184c')%('_GNI催0')) FROM vt1 LIMIT -960716122 OFFSET 1770519982; -- 0ms;
SELECT DISTINCT LOWER(((((vt1.lid)OR(vt1.lid)))AND(vt1.lid))) FROM vt1; -- 0ms;
SELECT DISTINCT ((vt0.c0)||(vt1.c1)) COLLATE NOCASE FROM vt1;SELECT '-301570905' FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt0.c0) AND (1375410047)))AND(CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END)))AND(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt1, vt0 GROUP BY ((highlight(vt1.c0, vt1.lid, NULL, vt1.c0)) NOT BETWEEN (((vt1.c1) ISNULL)) AND ((vt0.c0 IN ()))) HAVING (((+ (vt1.c0))) NOT BETWEEN (COUNT(vt0.c0)) AND (((vt1.c0)/(vt0.c0)))); -- 0ms;
SELECT DISTINCT CAST(vt1.c1 COLLATE NOCASE AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT ALL CAST(x'' AS NUMERIC) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT (- (vt0.c0)) COLLATE NOCASE, (+ (((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt0.c0)))), vt1.c1 FROM vt0 ORDER BY TRIM(DISTINCT NULL)  NULLS FIRST, ((((vt1.lid) NOT NULL))<<(vt1.c1));SELECT DISTINCT (IFNULL(vt0.c0, vt0.c0) IN ()) FROM vt0, vt1; -- 0ms;
SELECT (((+ (vt0.c0)))>>((- (vt1.lid)))), CAST(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS INTEGER), TOTAL(((vt1.c1)<(vt1.lid))) COLLATE RTRIM FROM vt0 WHERE (SQLITE_SOURCE_ID());SELECT ALL ((CAST('-760089486' AS NUMERIC)) NOT BETWEEN (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0))) AND (TRIM(vt1.c0, vt1.c0))), 0.23293218088396084, ((((((vt1.c0))<=((vt0.c0)))))<=((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))) FROM vt1;SELECT DISTINCT json_type(((vt1.lid)OR(vt1.c0))) FROM vt0;SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) BETWEEN (NULL) AND ((((vt0.c0))<((vt0.c0))))) FROM vt0;SELECT ALL (((COUNT(*)))<((vt1.lid))), ((((((vt1.c0, vt1.c1, vt0.c0)) BETWEEN ((vt1.lid, vt0.c0, vt1.lid)) AND ((x'', vt1.c0, -9.09953289E8)))))<=((MIN(vt1.c0)))), vt1.c0 COLLATE BINARY FROM vt1;SELECT CASE WHEN ((vt1.c0)LIKE(vt1.lid)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.lid)==(vt1.lid)) THEN ((vt1.lid)/(vt0.c0)) WHEN (- (vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) ELSE ((-197727893)GLOB(vt0.c0)) END FROM vt1, vt0; -- 0ms;
SELECT vt0.c0 FROM vt0, vt1 WHERE (((((((((x'26bd')AND(0.17340364633091798)))OR(x'')))OR((+ (NULL)))))AND(CASE 'Nb%u&'  WHEN 0.7717639181639651 THEN 0.18950146404252466 ELSE x'' END))) ORDER BY ((vt1.c1)%(((vt1.c1)+(vt1.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (~ (CASE WHEN vt1.c0 THEN '1728739374' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid END)), vt1.lid, ((CASE WHEN vt1.lid THEN vt0.c0 END) IS FALSE) FROM vt1 WHERE ((((('m\r(OW')%(264589637))) NOTNULL));SELECT DISTINCT (NOT ((vt1.c1 IN (vt1.c0, vt0.c0)))), ((CAST(vt1.lid AS INTEGER)) BETWEEN (((vt1.c1)<(vt1.c0))) AND (((vt0.c0) IS FALSE))), NTILE((((vt0.c0 IN (vt0.c0))) BETWEEN (TRIM(DISTINCT 2.64589637E8)) AND (vt0.c0 COLLATE BINARY))) OVER () FROM vt0 WHERE (CASE WHEN ((x'') NOT NULL) THEN CASE WHEN '-190430811' THEN '\n' ELSE x'c878' END END);SELECT DISTINCT (((NOT (vt1.c0)))IS((((('1819476945')OR(vt0.c0)))AND(vt1.c1)))) FROM vt0 CROSS JOIN vt1 ON (((((0.31200202498583773))<((vt1.lid)))) BETWEEN ((+ (vt1.c0))) AND (CAST(vt0.c0 AS BLOB))) WHERE ((((('-1180859038') BETWEEN (x'72a4') AND ('L3'))) BETWEEN ((((NULL)) NOT BETWEEN ((NULL)) AND ((NULL)))) AND (((x'')=(NULL))))); -- 0ms;
SELECT ALL ((SUM(vt1.c1))OR(((vt1.c0) ISNULL))) FROM vt0 WHERE (((x'' COLLATE NOCASE) IS FALSE));SELECT ALL ((CASE WHEN vt1.lid THEN 2016032821 ELSE vt0.c0 END) BETWEEN ((+ (x''))) AND (((vt0.c0)!=(vt1.lid)))) FROM vt0;SELECT DISTINCT ((vt1.lid)%(vt0.c0)) COLLATE NOCASE COLLATE RTRIM FROM vt0, vt1; -- 0ms;
SELECT (- (vt0.c0 COLLATE RTRIM)) FROM vt1 ORDER BY (- (vt1.c1)) ASC  NULLS LAST, vt1.c0  NULLS LAST, 'yuAp4';SELECT ALL ((((NULL) NOT BETWEEN (vt1.c1) AND (vt0.c0)))<>(((((vt1.lid)AND(vt1.c0)))AND(vt0.c0)))) FROM vt1, vt0 WHERE (1802321835); -- 1ms;
SELECT DISTINCT (((vt1.c1)) NOT BETWEEN ((((((vt1.lid)AND(vt0.c0)))OR(vt1.c1)))) AND ((x''))) FROM vt1, vt0; -- 0ms;
SELECT (+ ('0.6696004944312023')) FROM vt1 WHERE (((0.8970783162436681)||(x'')) COLLATE NOCASE) ORDER BY ((((vt0.c0)<=(vt1.c0))) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt1.c1))) AND (vt1.c0))  NULLS FIRST;SELECT DISTINCT CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR('')) AS NUMERIC) FROM vt1 WHERE (NULLIF((x'' IN ()), ((((((((((((0.6159334551031673)AND(-7.73908922E8)))AND(0.1298407872353683)))AND(0.3246258310358311)))AND(x'')))OR(-7.03180438E8)))OR('-1229520983'))));SELECT DISTINCT COUNT(*) OVER () FROM vt1, vt0 WHERE ((+ ((((('U''V]B')AND(x'')))AND(''))))); -- 0ms;
SELECT ALL TYPEOF(DISTINCT ((vt1.lid) IS TRUE)), ((COALESCE(vt1.lid, vt1.c0))<(TYPEOF(vt0.c0))), TOTAL(((vt1.c1)<(vt0.c0))) OVER () FROM vt1 NOT INDEXED WHERE ((((('305107638')>(0.7397239576732637))) NOT BETWEEN (((x'') NOT NULL)) AND ((((0.8507312444602064)) BETWEEN (('~{9㡉z')) AND ((-1994516492))))));SELECT NULLIF(MAX(vt1.lid, vt0.c0, vt1.lid, vt1.lid), '-694445064') FROM vt1, vt0; -- 0ms;
SELECT vt0.c0, TRIM(COUNT(vt1.lid), vt1.c0 COLLATE BINARY), (((('-1086996840')<(vt1.c0))) BETWEEN (SUM(vt1.lid)) AND (vt1.c1 COLLATE BINARY)) FROM vt0 WHERE (CASE ((NULL) IS TRUE)  WHEN LIKELIHOOD(DISTINCT -531971579, 0.7920075113758592) THEN ((x'6b93') IS TRUE) WHEN (((x''))<((x'269a'))) THEN ((0.7963698212881686) NOT BETWEEN ('1778863949') AND ('528097127')) WHEN ((('943303232', 0.7990519915043169, 0.32499408238061567)) BETWEEN ((NULL, NULL, '465016916')) AND ((x'342a', x'c712', NULL))) THEN ((-5.31971579E8) NOT BETWEEN (NULL) AND (0.031045822206631657)) ELSE ((0.8568582689388424)=(NULL)) END) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((2.081666758E9)))) AND ((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND (('')))))  NULLS FIRST;SELECT DISTINCT SUM((+ (vt1.c0))) OVER ( ORDER BY (((vt1.lid) BETWEEN (vt1.c1) AND (vt1.lid)) IN ()) ASC), ((x'')AND(((vt0.c0)GLOB('Z#&n?I6')))), ((((((vt0.c0) ISNULL))AND(vt1.c1 COLLATE RTRIM)))AND(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))) FROM vt0 WHERE (CAST((+ (x'')) AS BLOB));SELECT DISTINCT ((((vt1.lid)<(vt1.c0))) ISNULL) FROM vt0 WHERE (((DATE(NULL, 0.009643768001593167, -1833062376)) BETWEEN (CASE WHEN '' THEN 0.3253649380153487 ELSE '' END) AND ((((x'', x'', '''1', NULL, x'acb1')) BETWEEN (('&㶤TO', '>꒸', '3鏵', NULL, NULL)) AND ((NULL, 'c*㾨yE믬,', '', '0.04487278396961192', 0.1272140452169992))))));SELECT CAST(vt1.c0 AS REAL) COLLATE NOCASE FROM vt0 WHERE ((NOT (LIKELIHOOD('sP', 0.45360876096719727))));SELECT CAST((((vt1.lid)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) AS REAL), TOTAL(((vt1.c1)&(vt1.c0))) OVER (), (((vt1.c1)) NOT BETWEEN ((((vt0.c0)>=(vt1.c1)))) AND ((((vt1.lid)>(vt1.lid))))) FROM vt1 WHERE ((NOT (((((NULL)OR(NULL)))AND('-2074203504')))));SELECT (((x'd049' IN ())) NOT NULL), (~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))), ((((vt1.c0)<(vt1.c0)))*(AVG(vt1.c1))) FROM vt0, vt1 WHERE (CASE x'7a86'  WHEN ((9223372036854775807) NOT NULL) THEN (('')<>(NULL)) ELSE ((x'') IS TRUE) END); -- 0ms;
SELECT DISTINCT ((vt1.c1 IN ()) IN ()) FROM vt0, vt1 LIMIT -1184699006; -- 0ms;
SELECT (- (CAST(vt0.c0 AS TEXT))) FROM vt1, vt0 WHERE (x'') ORDER BY CAST(vt1.c1 AS BLOB) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((vt1.c1 IN ())) ISNULL) FROM vt0; -- 1ms;
SELECT ALL x'' FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt0, vt1; -- 0ms;
SELECT (- (((x'db8d')AND(vt1.c1)))), TOTAL(((((vt1.c0)AND(vt1.c1)))AND(vt0.c0))) OVER ( RANGE  UNBOUNDED PRECEDING), (((((((vt1.c0, vt1.lid, vt1.lid))>((vt0.c0, vt1.c1, NULL))))AND(((vt1.c0)OR(vt0.c0)))))AND(((vt1.c0)<<(vt0.c0)))) FROM vt0;SELECT ALL ((CAST(vt1.c1 AS REAL))%(x'ddaf')), SUM(NULLIF(DISTINCT vt1.c1, vt0.c0)), ((((vt1.c1)*(vt1.lid)))%((vt1.lid IN ()))) FROM vt1, vt0 LIMIT 1623937050; -- 0ms;
SELECT DISTINCT ((vt1.lid)<(vt0.c0)) COLLATE RTRIM FROM vt0;SELECT ALL (((vt1.c1)) NOT BETWEEN ((((vt1.c0)%(vt1.c1)))) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))), SUM((((vt0.c0))<=((vt1.c1)))) OVER (), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0x76d95050)) COLLATE RTRIM FROM vt1, vt0 WHERE (UPPER(DISTINCT (('\5')<=(x'')))); -- 0ms;
SELECT '-410801462', ((((((x'') IS TRUE))AND((vt1.lid IN (vt1.c1)))))AND(CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END)), ((COALESCE(vt1.c1, vt0.c0))OR(((vt1.c0)<>(vt1.lid)))) FROM vt0 WHERE (NULL) ORDER BY (((((~ (vt1.c1)))OR(('i6靺䔮Ts' IN ()))))OR(((((vt1.c1)OR(vt1.c0)))AND(x'')))) LIMIT 341943712;SELECT ALL MAX(vt0.c0) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.6620727904364018) COLLATE BINARY FROM vt1, vt0 WHERE ('-486541509'); -- 0ms;
SELECT DISTINCT 0x1229d492 FROM vt0; -- 0ms;
SELECT DISTINCT (((vt1.c1)/(vt1.c1)) IN ()) FROM vt0 WHERE (((((('', -664426652, 1.341090521E9, x'', 0.714731954400534, '靄5䣠PO.餪%D', NULL)) NOT BETWEEN (('', '*堭', NULL, '-9108450', '-1615387816', NULL, '-773908922')) AND ((NULL, x'502c47a6', NULL, 0.055738370728492415, x'', '1935959973', x'404d5643'))))||(CASE 0.27435363422785486  WHEN '-773908922' THEN x'' ELSE 1.399877332E9 END))) GROUP BY '0.2556171273850878' LIMIT 372766775 OFFSET 1716958805; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(CASE '1414646862'  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END AS NUMERIC) FROM vt0 WHERE ((((('0.22869523991295415')||('J㛷gK|b|'))) NOTNULL));SELECT DISTINCT (- (SUM('421330492'))), ((CAST(vt1.lid AS REAL)) ISNULL), CAST(AVG(vt1.c1) AS TEXT), ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1)) COLLATE BINARY, (((+ (vt1.c1))) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c1) AND (''))) AND (TOTAL('-694445064'))) FROM vt1, vt0 ORDER BY (((((vt0.c0))!=((vt1.c1))))AND(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT ((CASE WHEN vt1.lid THEN 0.7497978690161791 WHEN vt0.c0 THEN x'' WHEN 0.06121704199943945 THEN 'EqTC|i|*w' END)GLOB(NULL)) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) BETWEEN (vt1.c1) AND ('aݮ굧')) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END; -- 0ms;
SELECT ALL '' FROM vt1, vt0; -- 0ms;
SELECT CASE 0.2065682918858952  WHEN UNLIKELY(vt1.c0) THEN ((x'') NOTNULL) ELSE x'' END, (((((vt1.c1)%(x'')), (((vt1.lid)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))), vt0.c0))==((((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (vt1.c1 IN ()), CASE WHEN vt1.c1 THEN vt1.c0 END))), ((vt1.lid COLLATE RTRIM) NOT BETWEEN ((((vt1.c0, vt1.lid, vt0.c0))<((vt1.c1, vt1.c1, vt1.c1)))) AND (((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))) FROM vt1, vt0 GROUP BY (((((((vt0.c0)OR('-1263745833')))AND(vt0.c0))))<=(((vt0.c0 IN ())))); -- 0ms;
SELECT DISTINCT (+ (CAST(vt1.c0 AS REAL))), CAST(LOWER(DISTINCT vt0.c0) AS REAL), (+ ((NOT (vt0.c0)))) FROM vt0, vt1 LIMIT 1047322384 OFFSET -1779039819; -- 0ms;
SELECT DISTINCT ((((vt1.c1) IS FALSE)) NOT BETWEEN (TRIM(vt1.c0)) AND ((((vt1.c0, vt1.lid, vt0.c0))<=((vt0.c0, vt0.c0, vt1.lid))))), NULL, CASE vt1.c1  WHEN ((vt0.c0)|(vt1.c1)) THEN ((vt1.c0)AND(vt1.c0)) ELSE (vt1.c0 IN (vt0.c0, vt1.lid)) END FROM vt0 WHERE (('' IN ()) COLLATE RTRIM);SELECT ((vt1.c0)&(0.7501442487623314)) FROM vt1; -- 0ms;
SELECT ((((vt0.c0) ISNULL)) BETWEEN (CASE vt1.c1  WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN '-531971579' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1;SELECT DISTINCT LAST_INSERT_ROWID() FROM vt0 UNION SELECT DISTINCT CAST(CAST(0.8736793766452542 AS NUMERIC) AS NUMERIC) FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((vt0.c0))>((vt1.c1))) AS BLOB) WHERE (CASE WHEN x'661f' THEN ((NULL)>=(0.7979031716615594)) WHEN (('1822366046')!=('op8_')) THEN (('EnY7*࡟o,') NOT NULL) WHEN (x'' IN ()) THEN ((((((((NULL)AND('-1882820534')))OR(x'')))AND('-1735695636')))AND('287391201')) ELSE (- (1182996069)) END); -- 1ms;
SELECT DISTINCT (((((vt1.c1)) BETWEEN ((vt1.lid)) AND ((vt0.c0))))IS NOT(CAST(vt1.lid AS BLOB))) FROM vt1, vt0; -- 0ms;
SELECT ALL CASE WHEN vt1.lid THEN (+ (vt0.c0)) WHEN LOWER(vt0.c0) THEN ((((((((vt1.c1)OR(vt1.lid)))AND(vt1.c1)))AND(vt1.lid)))OR(vt0.c0)) WHEN vt1.c0 COLLATE BINARY THEN (((NULL)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) END FROM vt1 WHERE (((CASE WHEN 0.5443883410358585 THEN 0.5236914697763396 WHEN 0.5789741430528622 THEN 'E\r&<JzU' WHEN 'H{' THEN x'' ELSE '0.8568582689388424' END)&(((((x'')OR(-1.07914683E8)))AND('')))));SELECT DISTINCT UPPER((+ (vt1.c1))) FROM vt0, vt1 WHERE ((('')-(NULL COLLATE BINARY))) GROUP BY 0.22528991627551764, (((vt0.c0 COLLATE BINARY))=((((vt0.c0)||(vt0.c0))))), '1349730216'; -- 0ms;
SELECT ALL ((COUNT(vt0.c0))<=(x'')), SUM(((vt1.c1) BETWEEN ('{}') AND (vt1.lid))) OVER (), CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.lid)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((vt0.c0, vt1.lid, vt1.lid))==((vt1.lid, vt1.c1, vt1.c0)))))=((CASE vt1.c1  WHEN 0xfffffffff573ec08 THEN vt1.c1 END))) FROM vt1 WHERE ((((((x'', NULL, -3.24393471E8)) BETWEEN (('0.43512027990591473', 0.523364562754313, '0.4441545421962423')) AND ((1574969920, ').!4r', '-1735695636'))))%((~ (0X39df1d88)))));SELECT DISTINCT (- (((((vt1.lid)AND(vt1.c1)))OR(vt1.c0)))) FROM vt1, vt0; -- 1ms;
SELECT rtreenode((((vt1.c1))=((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) FROM vt0, vt1 GROUP BY ((((vt1.c1)IS NOT(vt1.c1)))GLOB(((vt1.c0) IS FALSE))); -- 0ms;
SELECT DISTINCT COUNT((vt1.c0 IN (vt0.c0, vt0.c0))) FROM vt1 ORDER BY (((((vt1.c1))<=(('-760089486'))))IS NOT(((vt1.c1)==(vt0.c0))))  NULLS LAST;SELECT ALL vt1.c0, ((((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1))) IS TRUE), ((((vt1.lid))==((vt1.c1))) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT CASE CAST(vt1.lid AS BLOB)  WHEN ((vt1.c1) IS TRUE) THEN CAST('56167472' AS BLOB) END FROM vt0 WHERE ((((NULL, '', '-841200198')) BETWEEN (((+ (0.46487418889477683)), (('177131039') NOTNULL), ((NULL)OR(0Xffffffffa3b10969)))) AND ((LOWER(')p'), NULL, (- (x'f7ae'))))));SELECT DISTINCT COUNT(DATETIME(vt1.c1, vt1.c1, vt1.c1)) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT COUNT((NOT (vt1.lid))) OVER ( ORDER BY (((((((((vt1.c1 IN ()))AND(vt1.c0)))OR(((vt0.c0)<=(vt1.c0)))))AND(((vt0.c0) IS FALSE))))AND(((vt1.c0)=(vt1.c0)))) GROUPS (((vt0.c0)AND(vt1.lid)) IN (vt1.lid COLLATE RTRIM, (vt1.lid IN ()))) PRECEDING), ((GROUP_CONCAT(vt0.c0))<>((vt0.c0 IN (vt0.c0)))), (NOT (vt1.lid)) COLLATE RTRIM FROM vt1 WHERE (TRIM(DISTINCT CASE WHEN x'fad0' THEN 0.00756444613298457 ELSE 0Xffffffffa94b376b END, (((-180757613))<>((x'c458')))));SELECT DISTINCT vt0.c0 FROM vt1;SELECT DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 ELSE '7w' END COLLATE NOCASE FROM vt0, vt1 WHERE (((((NULL)LIKE(NULL)))!=(((((NULL)AND(NULL)))OR(x''))))); -- 0ms;
SELECT ((NOT (vt1.c1)) IN ()) FROM vt0 GROUP BY CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c1)||(vt1.c1)) THEN ((vt1.c1)|(vt1.lid)) END HAVING CAST(LTRIM(vt1.c1, vt1.c0) AS NUMERIC);SELECT json_array_length(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END, ('1094408157' IN ())) FROM vt0 WHERE (((((0.518993282189356)>=(0X35928bb5))) NOTNULL));SELECT vt1.lid FROM vt0 WHERE ((('')<>('')) COLLATE NOCASE);SELECT DISTINCT vt0.c0 COLLATE RTRIM, vt1.c1, 0.39701108388192363 FROM vt0 GROUP BY (((((vt1.c0))<((vt1.c1))))IS(((vt0.c0) NOT BETWEEN (-861092803) AND (vt1.c0)))) HAVING ((((vt1.c1)AND(vt1.lid))) IS FALSE);SELECT DISTINCT ((('-A') BETWEEN (vt1.c0) AND (vt0.c0)) IN ()), ((((((((((NULL) IS TRUE))AND(((vt1.c1)GLOB(vt1.lid)))))OR(AVG(vt1.c1))))AND(GROUP_CONCAT(vt1.lid))))OR(UPPER(vt1.lid))), LIKE(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.lid THEN vt0.c0 WHEN 'Ir' THEN vt1.c0 ELSE vt1.c0 END, CAST(NULL AS REAL), ')') FROM vt0 WHERE (((('742381018' COLLATE RTRIM))<(((('Dq|')OR(x'b96a')))))) GROUP BY ((((((((vt0.c0)OR(vt1.c1)))OR(vt1.lid)))OR(vt1.lid)))OR(((vt1.c1) ISNULL))), vt0.c0, (((vt1.c1)<<(NULL)) IN ());SELECT DISTINCT CAST(((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND('1010802256')))AND(vt1.c0)) AS TEXT) FROM vt0 NOT INDEXED, vt1 WHERE (((((x'') NOTNULL)) BETWEEN ((~ (x''))) AND (((('-107914683')) BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((((x'') ISNULL), 0.1659646351837799 COLLATE RTRIM, ((0x57e24b4f)/(0.11338354828159547))))<>((CASE 0.4741338431031822  WHEN 0.05887955652205312 THEN 0.15698885942454632 ELSE x'' END, ('' IN ()), (NOT (x'5b19')))))) ORDER BY (NOT (HEX(vt1.lid))) DESC, CAST((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.lid, vt0.c0, vt1.lid)) AND ((vt1.lid, vt1.lid, vt1.lid))) AS INTEGER)  NULLS LAST;SELECT ALL AVG(((vt1.c0)|(vt1.c0))) FROM vt0 WHERE ((((0.6352511700836037)) BETWEEN ((((0x123cfc1e) IS TRUE))) AND ((ABS(0X3f61147e)))));SELECT (((vt0.c0 IN (x'', vt1.lid)))-(x'')) FROM vt1, vt0 WHERE (((((((x'')OR('1382592661')))OR(0.1662075870772839)))<(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT 2.64589637E8 FROM vt0, vt1 GROUP BY ((vt1.lid)+(vt0.c0)) COLLATE RTRIM, ((CAST(vt0.c0 AS REAL)) ISNULL), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (1388755345)) AS INTEGER), vt0.c0, COALESCE(((vt1.c1)>>('-0.0')), IFNULL(vt1.lid, vt1.c1)); -- 1ms;
SELECT DISTINCT ((vt0.c0) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt1, vt0 WHERE (((((((((x'')OR('-1967836921')))AND('-445101165')))AND(('+~WP&_''' IN ()))))OR(CASE WHEN 'r ' THEN NULL WHEN 0.22869523991295415 THEN x'' WHEN '1067895778' THEN x'' END))); -- 0ms;
SELECT ALL vt1.c0 FROM vt0 UNION SELECT ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)) COLLATE NOCASE FROM vt1 LIMIT 585485170;SELECT ((((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)))/(CASE vt1.lid  WHEN vt1.c1 THEN x'' END)) FROM vt1 WHERE (((UNLIKELY(DISTINCT x'7971')) IS TRUE));SELECT ALL (~ ((NOT (vt0.c0)))) FROM vt0, vt1 WHERE ((((- ('1468688569'))) BETWEEN ((('~r/bTڝ')-(-5.80450737E8))) AND (CAST(0.8522670312981081 AS TEXT)))); -- 0ms;
SELECT DISTINCT (+ (GROUP_CONCAT(vt1.c0))), (((vt1.c1)GLOB(vt1.lid)) IN ()), TOTAL((vt0.c0 IN ())) FROM vt1; -- 0ms;
SELECT DISTINCT (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))AND((((vt1.c1, vt1.c1, vt1.lid)) BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c1, vt0.c0))))))OR(((vt1.c0)LIKE(vt1.lid)))) FROM vt1;SELECT ((((vt1.c0)/(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND ((+ (vt1.c1)))) FROM vt0 WHERE ((((((0.1115874913267344)IS NOT(0.35353187795654406))))<=((UNLIKELY('(K0S')))));SELECT ALL TRIM(((vt1.c0)-(vt1.lid)), SUM('-136849179')) FROM vt0;SELECT ALL AVG((vt0.c0 IN (vt1.c1))) FROM vt0, vt1 WHERE (((((NULL)<(x''))) NOT BETWEEN (json_quote(NULL)) AND ((('G\b[j') IS TRUE)))); -- 0ms;
