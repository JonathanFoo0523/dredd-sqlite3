-- Time: 2024/06/07 09:13:15
-- Database: database24
-- Database version: 3.40.0
-- seed value: 1948211724
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE t0 (c0 INT , c1 BLOB DEFAULT 373206894 , c2 BLOB ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=x''; -- 0ms;
CREATE UNIQUE INDEX i6 ON t0(c2 ASC,CASE ((c0) ISNULL)  WHEN ((((c2)AND(c2)))OR(c0)) THEN CAST(c1 AS BLOB) WHEN ((c1) NOT NULL) THEN ((x'') ISNULL) WHEN (((c1, c2, '', c2, c0)) NOT BETWEEN ((c0, c2, c2, c2, c0)) AND ((0.5231480077129333, c1, c2, '꣄%!]*꽮2', c0))) THEN CASE WHEN c0 THEN c2 END END ASC,(+ ((((c1, c0, c1))>((c0, c1, c2))))) COLLATE RTRIM) WHERE ((CAST(c2 AS BLOB))=(((x'') NOT BETWEEN (c2) AND (0.5908405798399552)))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c45 TEXT; -- 0ms;
PRAGMA temp.locking_mode = EXCLUSIVE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c56 TEXT; -- 1ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO t0(c56) VALUES (NULL); -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''); -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
PRAGMA recursive_triggers = true; -- 0ms;
INSERT OR ABORT INTO rt1(c0, c2) VALUES (0.08143075036165126, ''); -- 0ms;
CREATE VIRTUAL TABLE rt75 USING rtree_i32(c0, c1, c2); -- 0ms;
INSERT OR ABORT INTO rt75(c0) VALUES (x''); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt75 SET c1=NULL WHERE '373206894'; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ('569813188'), (3.73206894E8), ('꣄%!]*꽮2'); -- 0ms;
INSERT OR ROLLBACK INTO rt75(c1) VALUES (0.8205029687705582), (0.39131356384595306), (x''); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 1ms;
VACUUM temp; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt1 SET c2=x'', c0=NULL, c0=373206894 WHERE 'oj	'; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE UPDATE OF c1 ON t0 BEGIN INSERT OR REPLACE INTO rt1(c2, c1) VALUES (639849365, '_m');SELECT RAISE(ROLLBACK, 'asdf');END; -- 0ms;
UPDATE rt75 SET (c2)=(x''); -- 0ms;
DROP TABLE rt75; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
INSERT OR ROLLBACK INTO t0(c1) VALUES (NULL) ON CONFLICT(c56) DO UPDATE SET c0='1882167258', c1=0.8431801813822463 WHERE ((LIKELIHOOD('(BW0W', 0.5313707779303939)) NOT BETWEEN (((((t0.c2)OR(t0.c1)))AND(t0.c0))) AND ((t0.c2 IN ()))); -- 1ms;
INSERT OR ROLLBACK INTO t0(c45, c2, c0) VALUES (0xffffffffdc7e9325, '639849365', 699587705); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES (0xffffffffae9aff97, NULL), (0.8575269199793086, NULL), ('{}', '!k'); -- 0ms;
INSERT OR ABORT INTO t0(c1, c56, c45) VALUES (x'', '-1369624615', 0.9767674982658378); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
UPDATE OR IGNORE t0 SET c56=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (0.41484932767230975); -- 1ms;
ANALYZE i6; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR ABORT rt1 SET (c1)=(x'') WHERE ((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE rt1 SET (c0)=('-79580632'); -- 1ms;
UPDATE OR ROLLBACK rt1 SET c2='[\n'; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES ('-2015147229', 0.8205029687705582), (NULL, NULL), (0x795249bb, 0.8205029687705582); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT '' COLLATE BINARY FROM t0; -- 1ms;
SELECT (-7.9580632E7 IN (AVG(t0.c45))) FROM t0, rt1 WHERE ((('' COLLATE RTRIM) NOT BETWEEN ((('-1520045673')>=(''))) AND (CASE NULL  WHEN NULL THEN '.' ELSE '-1365573737' END))) GROUP BY '-595684571'; -- 0ms;
SELECT ALL UNLIKELY((((t0.c56, t0.c2, t0.c1)) BETWEEN ((t0.c0, t0.c56, t0.c0)) AND ((rt1.c0, t0.c56, t0.c2)))) FROM rt1;SELECT DISTINCT t0.c56 FROM t0, rt1 WHERE ((((x'' IN ())) BETWEEN (((NULL)<<(0.8911960732852645))) AND ((('-1070068368')+(x'b88d'))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0) BETWEEN (0.5774896704309654) AND (t0.c56)) THEN (((rt1.c1))<((t0.c45))) WHEN TOTAL(rt1.c1) THEN x'' WHEN ((t0.c0) IS TRUE) THEN t0.c45 COLLATE NOCASE ELSE rt1.c2 COLLATE RTRIM END FROM t0 INNER JOIN rt1 ON ((((t0.c1) NOT BETWEEN (rt1.c1) AND (NULL))) BETWEEN (t0.c2 COLLATE BINARY) AND (((rt1.c0)<(t0.c1)))) WHERE (((x'')LIKE(NULL COLLATE NOCASE))) INTERSECT SELECT DISTINCT ((t0.c2) IS FALSE) FROM rt1;SELECT DISTINCT COALESCE((~ (rt1.c2)), t0.c56) FROM rt1, t0 WHERE ((x'' IN ())); -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1, t0; -- 0ms;
SELECT ALL (((('-106818820') BETWEEN (t0.c2) AND (t0.c45)))<((((rt1.c2)) BETWEEN ((t0.c2)) AND ((t0.c45))))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT CASE ((t0.c0)>(rt1.c2))  WHEN (((t0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c2, t0.c1, t0.c56)) AND ((t0.c56, t0.c1, t0.c2))) THEN ((NULL) IS TRUE) END FROM rt1, t0 INDEXED BY i6 WHERE (((x'' COLLATE BINARY)LIKE((((('55831193')OR(x'b24e')))AND('{}')))));SELECT DISTINCT t0.c56 FROM t0; -- 0ms;
SELECT ((((((t0.c56)AND(rt1.c2)))AND(t0.c45)))|(((t0.c45) NOTNULL))), TOTAL((((t0.c2))<((t0.c1)))), NTH_VALUE((((rt1.c1)) BETWEEN ((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))) AND ((((((((((x'')OR(rt1.c2)))OR(rt1.c2)))OR('373206894')))AND(rt1.c1))))), ((rt1.c2) NOTNULL) COLLATE NOCASE) OVER (), ((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c45 THEN rt1.c2 WHEN t0.c2 THEN 0X163eaf6e END)+(MIN(t0.c1))), ((((((t0.c2)||('-1185595252')))OR((t0.c0 IN (rt1.c2)))))OR(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c2)))) FROM rt1;SELECT DISTINCT TOTAL(((rt1.c0) BETWEEN (rt1.c2) AND (t0.c0))) OVER ( PARTITION BY (NOT (((t0.c2) NOTNULL))), (+ ((t0.c0 IN ()))), CASE ((rt1.c2)|(0xffffffffb01e3c84))  WHEN ((rt1.c1) NOTNULL) THEN ((t0.c0)%(rt1.c0)) ELSE x'' END, (((+ (t0.c2))) IS FALSE)) FROM t0 ORDER BY (t0.c56 IN (t0.c0)) COLLATE BINARY ASC  NULLS FIRST;SELECT (((t0.c1, rt1.c1, t0.c0)) BETWEEN ((CAST(t0.c0 AS TEXT), '-1365573737', ((rt1.c1) IS TRUE))) AND ((((t0.c0)<=(rt1.c2)), (NOT (t0.c0)), CASE rt1.c1  WHEN rt1.c0 THEN t0.c2 ELSE t0.c2 END))) FROM rt1, t0 WHERE (((((((NULL)OR('-1365573737')))OR('1055731008'))) NOT BETWEEN ((((NULL))<=(('')))) AND ((('-1365573737') ISNULL)))); -- 0ms;
SELECT DISTINCT ((CASE t0.c56  WHEN t0.c45 THEN t0.c56 ELSE rt1.c0 END) ISNULL) FROM rt1, t0; -- 0ms;
SELECT ALL (+ (t0.c0)) COLLATE BINARY FROM t0 WHERE (((x'966b' IN ()) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN AVG(rt1.c1) THEN ((t0.c1) IS FALSE) WHEN ((((((((((((t0.c0)AND(t0.c56)))AND(t0.c45)))AND(t0.c56)))OR('1778696193')))OR(t0.c56)))AND(rt1.c1)) THEN ((t0.c56)>>(rt1.c2)) WHEN ((t0.c1) NOT NULL) THEN '-106818820' COLLATE NOCASE END FROM t0, rt1 WHERE (((('tma5WJDuH')) BETWEEN ((CAST(x'4b7d7155' AS NUMERIC))) AND ((((NULL)IS NOT(0.8108751156527375)))))); -- 0ms;
SELECT DISTINCT CAST((t0.c2 IN ()) AS BLOB) FROM rt1, t0 WHERE ((- ((('<9|\n#') NOT BETWEEN ('꣄%!]*꽮2') AND (0.5073770274545986))))) ORDER BY (((rt1.c0)=(rt1.c1)) IN (rt1.c0 COLLATE NOCASE, rt1.c0)); -- 0ms;
SELECT DISTINCT CAST((NOT (t0.c56)) AS REAL) FROM rt1;SELECT ALL ((TOTAL(rt1.c0)) NOT BETWEEN (CASE WHEN rt1.c0 THEN t0.c45 ELSE x'7008' END) AND (((t0.c56) IS FALSE))) FROM t0, rt1 WHERE (((((((x'0c82')OR(0.9676760365688916)))AND('1991309122'))) NOT NULL)) INTERSECT SELECT DISTINCT (('-1520045673')AND(rt1.c1)) FROM rt1, t0; -- 0ms;
SELECT ALL ((t0.c45)==(t0.c2)) COLLATE NOCASE, CAST(((t0.c2)<>(t0.c1)) AS TEXT), CAST(t0.c2 AS TEXT) FROM t0 WHERE (UNLIKELY(((((0.17740691165365852)AND(0.3252184157378015)))AND(0.454462439225657)))) GROUP BY ((CAST(t0.c2 AS REAL)) BETWEEN ((('-1735756715') NOT NULL)) AND (CASE WHEN rt1.c1 THEN t0.c0 END)) HAVING CASE WHEN (t0.c45 IN ()) THEN (+ (t0.c0)) WHEN ((((rt1.c1)AND(t0.c56)))OR(rt1.c1)) THEN ((((t0.c2)OR(t0.c56)))OR(rt1.c1)) WHEN NULL THEN ('LU' IN (t0.c0)) END ORDER BY ((TRIM(DISTINCT t0.c56))-(t0.c56))  NULLS FIRST, (((json_insert(t0.c45, t0.c2, '', t0.c0, 0.9051063051785126)))>=((((rt1.c1)>>(t0.c2))))) ASC, CASE (+ (rt1.c0))  WHEN (- (t0.c0)) THEN CAST(t0.c45 AS INTEGER) WHEN ((t0.c2) NOT BETWEEN (rt1.c2) AND (t0.c1)) THEN (~ (rt1.c0)) WHEN CAST(rt1.c1 AS INTEGER) THEN ((t0.c0) NOT BETWEEN (t0.c2) AND (rt1.c0)) ELSE t0.c45 END DESC  NULLS LAST;SELECT DISTINCT NTH_VALUE((((('''枾S(峮vF')OR(t0.c1)))OR(t0.c56)) COLLATE NOCASE COLLATE BINARY, (NOT (0Xffffffff988a7455))) OVER () FROM t0 WHERE ((((('699587705') NOTNULL))*(((-79580632) NOT BETWEEN ('G''*엧C1') AND ('-595684571')))));SELECT DISTINCT 0.027273565287619816 FROM t0; -- 0ms;
SELECT ALL (((t0.c1 IN ()))<<(UPPER(rt1.c0))), UPPER(((t0.c56) BETWEEN (rt1.c0) AND (t0.c56))), UNLIKELY(CAST(rt1.c2 AS INTEGER)), COUNT((NOT (NULL))) OVER ( ORDER BY CAST(NULL AS TEXT) COLLATE BINARY COLLATE RTRIM ASC), (t0.c0 IN (t0.c0, t0.c0)) COLLATE BINARY FROM t0, rt1 ORDER BY ((((x'ea40')OR(0.553118280947498 COLLATE BINARY)))AND(((rt1.c2) ISNULL)))  NULLS LAST; -- 1ms;
SELECT ALL ((((t0.c0)<=(t0.c45)))>(t0.c2 COLLATE NOCASE)) FROM rt1, t0; -- 0ms;
SELECT (((rt1.c2)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((t0.c0))), ROW_NUMBER() OVER (), ((SUBSTR(t0.c2, rt1.c2))-(rt1.c2)), CAST((rt1.c2 IN ()) AS INTEGER), ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((rt1.c2)AND(rt1.c2)))AND('(bw0w'))) AND ((NOT (t0.c45)))) FROM rt1, t0 WHERE (((((((((((NULL)OR('0.8205029687705582')))AND('2023472873')))AND('꣄%!]*꽮2')))AND(0.829924790394947))) IS TRUE)); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (('-1365573737') NOT BETWEEN (CASE 0.18222400033886954  WHEN t0.c56 THEN t0.c0 WHEN t0.c45 THEN t0.c56 WHEN t0.c1 THEN rt1.c2 END) AND (((t0.c2) NOT NULL))), ((((CAST(NULL AS REAL))OR(((t0.c45) NOT BETWEEN (t0.c1) AND (rt1.c0)))))OR(CASE WHEN t0.c45 THEN t0.c0 WHEN rt1.c1 THEN t0.c56 WHEN t0.c45 THEN rt1.c0 ELSE t0.c56 END)), ((CASE WHEN t0.c0 THEN rt1.c0 ELSE t0.c2 END)>=(((t0.c0)>>(NULL)))) FROM rt1, t0; -- 0ms;
SELECT ALL (NOT ((+ (0.9051063051785126)))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT (~ (COALESCE(t0.c45, t0.c0))), LAST_VALUE(LENGTH(((((((((t0.c45)AND(t0.c2)))OR(t0.c45)))AND(t0.c45)))OR(0.17055098771110977)))) OVER (), (((NULL IN ()))>('W	')) FROM t0; -- 0ms;
SELECT DISTINCT NULL FROM rt1, t0 WHERE ((((~ (0.43261543832334637)))<<(((NULL)||('~L i'))))); -- 0ms;
SELECT ALL '-79580632', 1903416161, TOTAL(CAST(t0.c1 AS REAL)) OVER () FROM t0, rt1 ORDER BY (NOT (((((t0.c1)OR(t0.c2)))AND(t0.c56)))) ASC; -- 0ms;
SELECT ALL CASE WHEN ((t0.c0)AND(t0.c56)) THEN rt1.c0 ELSE ((t0.c56)OR(t0.c1)) END FROM t0, rt1 GROUP BY ((((('569813188')) BETWEEN ((t0.c56)) AND ((NULL)))) IS TRUE), CAST(load_extension(rt1.c2) AS NUMERIC), LIKELY(rt1.c1) COLLATE BINARY COLLATE RTRIM HAVING ((CASE t0.c0  WHEN t0.c0 THEN t0.c1 END) NOT BETWEEN (x'e6fce324') AND (((t0.c2) IS FALSE)));SELECT DISTINCT x'' FROM t0 WHERE (((CASE WHEN NULL THEN NULL END) NOT BETWEEN ((~ (0.34609909563824803))) AND ((('H獺')-(x''))))); -- 0ms;
SELECT DISTINCT '+FW+UKx' FROM rt1; -- 1ms;
SELECT ALL ((((t0.c2)*(t0.c0)))&(((t0.c45)GLOB(rt1.c0)))) FROM t0 WHERE (TRIM(DISTINCT ((x'') NOT NULL))) GROUP BY '-595684571';SELECT DISTINCT NTH_VALUE((((rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c1) AND ('')), ((rt1.c1) IS TRUE), (((rt1.c2))==((rt1.c0))))) AND ((CAST(rt1.c0 AS NUMERIC), rt1.c2 COLLATE RTRIM, ((rt1.c1) NOTNULL)))), ((((rt1.c2)+(rt1.c1)))<>((((rt1.c0))<=((rt1.c0)))))) OVER ( ORDER BY ((((rt1.c2)&(t0.c0))) NOTNULL) ASC) FROM rt1;SELECT ALL ((SUM(rt1.c2)) ISNULL) FROM rt1, t0 WHERE ((((((x'')) NOT BETWEEN (('-352947334')) AND ((0.20307997584750392))))*(0.29848532288923))); -- 0ms;
SELECT DISTINCT ((((((rt1.c1)AND(t0.c2)))OR(t0.c0))) BETWEEN (((0Xffffffffae9aff97)|(t0.c56))) AND (CAST(x'50a5' AS REAL))) FROM rt1, t0 WHERE (((+ (0.4090668678340693)) IN (json_array_length('+w/'))));SELECT ALL (((t0.c1 COLLATE NOCASE, ((((((((((((t0.c1)AND(t0.c45)))OR(t0.c56)))OR(rt1.c1)))AND(t0.c2)))OR(t0.c2)))AND(x'')), ((t0.c2)>(0.9912210618028419))))<(((((t0.c56, rt1.c0, rt1.c0)) NOT BETWEEN ((t0.c1, t0.c2, rt1.c0)) AND ((t0.c45, t0.c0, t0.c0))), CAST(rt1.c2 AS BLOB), 0.20626668321684138))) FROM t0, rt1 WHERE (x'fac5'); -- 0ms;
SELECT LEAD((((t0.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((t0.c0, t0.c45, '1991309122')) AND ((rt1.c2, t0.c45, t0.c56))) COLLATE BINARY, (NOT (CAST(t0.c56 AS TEXT))), (((NOT (t0.c2)))<>(((rt1.c0) IS TRUE)))) OVER () FROM rt1, t0; -- 1ms;
SELECT (((((t0.c45, NULL, t0.c56)) NOT BETWEEN ((rt1.c0, t0.c56, rt1.c2)) AND ((t0.c2, t0.c0, t0.c2))))|(-1e500)) FROM t0;SELECT (- (((t0.c2)<(0.2232739474083263)))) FROM rt1 INDEXED BY i6 WHERE (CASE WHEN (((('')AND(x'2f95')))OR(NULL)) THEN 0xffffffffae9aff97 ELSE (+ (NULL)) END) ORDER BY 'Ie1p';SELECT DISTINCT COUNT(*) FROM rt1, t0; -- 0ms;
SELECT ((((rt1.c0) NOT BETWEEN (t0.c2) AND (t0.c1))) NOT BETWEEN (MIN(t0.c56)) AND ((~ (rt1.c0)))) FROM t0, rt1 WHERE ((((('-1735756715')>=('-1369624615')))IS(((0.13485131516863869)GLOB(''))))); -- 0ms;
SELECT DISTINCT CASE CAST(t0.c1 AS NUMERIC)  WHEN ((((rt1.c1)OR('5w')))OR(t0.c2)) THEN CAST('-1340195708' AS INTEGER) ELSE (- (t0.c56)) END, 1991309122, ((CAST(rt1.c0 AS TEXT))IS((NOT (rt1.c1)))) FROM rt1, t0 LIMIT 948047070 OFFSET 2003412820; -- 1ms;
SELECT DISTINCT CAST(((rt1.c2)%(rt1.c1)) AS INTEGER) FROM rt1 WHERE (json_array_length('-168070075', ((0.7387476249271627)<=(1671404458))));SELECT ((IFNULL(t0.c56, t0.c0)) BETWEEN (CAST(rt1.c1 AS TEXT)) AND (rt1.c1)) FROM rt1;SELECT ALL (((rt1.c1 IN ())) NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((((t0.c0))>=((t0.c45))))), CASE WHEN (t0.c2 IN ()) THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c56 END ELSE CAST(t0.c45 AS TEXT) END, ((((t0.c0)%(rt1.c2))) BETWEEN ((~ (t0.c56))) AND (((t0.c2) IS TRUE))) FROM t0, rt1; -- 0ms;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((CASE WHEN '948047070' THEN '7L/2FHq5|' ELSE 0xffffffffbc6a1800 END))<=(((('2035435963') NOT BETWEEN (5.5831193E7) AND (x'')))))) GROUP BY (NOT (((rt1.c0)<=(t0.c56)))), ((((t0.c45) IS TRUE))!=(CAST(t0.c2 AS NUMERIC))), LOWER(t0.c56 COLLATE RTRIM) HAVING ((LIKELY(DISTINCT NULL))!=((((t0.c45)) NOT BETWEEN ((rt1.c0)) AND ((t0.c45))))); -- 1ms;
SELECT ((IFNULL(t0.c45, t0.c1))<(CHANGES())) FROM rt1 NOT INDEXED WHERE (((((('}N4ozꊞ쨿nV') NOT NULL)))<=((TRIM('-328550713')))));SELECT (CASE WHEN rt1.c1 THEN rt1.c2 END IN ((((t0.c56))==((t0.c1))))), CASE (+ (t0.c0))  WHEN ((((t0.c56)OR(rt1.c2)))OR(t0.c45)) THEN (t0.c56 IN ()) ELSE (((rt1.c1))<=((rt1.c1))) END, (- (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c45)))) FROM t0 ORDER BY CHAR((t0.c45 IN ()));SELECT DISTINCT (((t0.c56)) NOT BETWEEN ((t0.c56)) AND ((JULIANDAY(t0.c2, rt1.c2, t0.c56)))), (- (((rt1.c0) NOT BETWEEN (rt1.c2) AND (t0.c1)))), LOWER(rt1.c2) COLLATE BINARY FROM rt1, t0 WHERE ('%'); -- 0ms;
SELECT (+ (((rt1.c0) NOT NULL))), NULLIF(t0.c56 COLLATE RTRIM, (+ (rt1.c1))), (((- (t0.c1)))/(CASE WHEN rt1.c1 THEN t0.c0 END)) FROM t0;SELECT TOTAL(CAST(t0.c2 AS TEXT)), MAX((t0.c1 IN (t0.c56))), '_d&2' FROM rt1 WHERE (CAST(((((NULL)AND(x'')))AND(0.20307997584750392)) AS INTEGER));SELECT DISTINCT ((((t0.c45)+(t0.c0))) NOTNULL) FROM rt1, t0 LIMIT -1217905493 OFFSET 378857400; -- 0ms;
SELECT DISTINCT CAST(MIN(rt1.c0) AS REAL) FROM rt1, t0 WHERE ((~ ((('-840498097') NOT BETWEEN ('-106818820') AND ('2144198408'))))); -- 0ms;
SELECT ALL TOTAL(TYPEOF(rt1.c1)) OVER () FROM rt1 WHERE ((x'' IN (0.9066167261445849 COLLATE BINARY))); -- 0ms;
SELECT ((((rt1.c2)OR(t0.c0)))OR(rt1.c1)) COLLATE BINARY FROM rt1;SELECT DISTINCT ((((t0.c45)/(rt1.c2))) NOTNULL), CASE NULL  WHEN ((0.8431801813822463)GLOB(rt1.c0)) THEN (rt1.c0 IN (rt1.c1)) ELSE TOTAL(t0.c1) END, ((((6.99587705E8)) NOT BETWEEN ((t0.c1)) AND (('-1340195708'))) IN ()), ((MAX(t0.c2))<(((((t0.c0)AND(t0.c0)))AND(t0.c45)))), (+ (((((rt1.c1)AND(t0.c45)))OR(t0.c1)))) FROM t0, rt1; -- 0ms;
SELECT ALL ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)&(((t0.c45)>=('A\.')))), MAX((t0.c56 IN ())), CASE WHEN ((t0.c56)>=('-1217905493')) THEN ((t0.c0) NOTNULL) WHEN (- (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN ((t0.c2)<=(t0.c2)) THEN ((rt1.c2) BETWEEN (NULL) AND (rt1.c2)) ELSE CAST(t0.c56 AS INTEGER) END FROM rt1;SELECT DISTINCT CAST(t0.c2 AS INTEGER) COLLATE BINARY FROM t0 WHERE (CAST(((((1094123706)AND(NULL)))AND('')) AS TEXT)); -- 0ms;
SELECT ALL (((- (t0.c1))) NOT BETWEEN (((((t0.c1)AND(t0.c56)))OR(t0.c0))) AND (rt1.c0)), ((t0.c45)||(t0.c2)), ((((t0.c56) BETWEEN (t0.c45) AND (t0.c56))) IS TRUE) FROM t0, rt1 ORDER BY RTRIM(-1217905493); -- 0ms;
SELECT DISTINCT ((t0.c2) NOT BETWEEN (((t0.c1)IS(NULL))) AND (TYPEOF(DISTINCT t0.c2))) FROM t0 INDEXED BY i6 WHERE (((((0.17740691165365852, x'', 0.947829044835397))>=(('Xs', '832098537', x''))) IN ()));SELECT ALL (~ (0.0789969191232952)) FROM t0; -- 0ms;
SELECT ((SUM(t0.c45))<=(((t0.c56) IS FALSE))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT RANK() OVER ( ORDER BY (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0))) COLLATE BINARY  NULLS LAST, (((((t0.c56, t0.c56, rt1.c1))>=((t0.c1, t0.c1, rt1.c0))))AND((((t0.c0, rt1.c0, t0.c56))>((rt1.c2, x'71dc', rt1.c2))))) ASC  NULLS LAST) FROM t0 WHERE (((CASE WHEN 0.4249608550787909 THEN '20' WHEN NULL THEN '<E' WHEN -271699378 THEN NULL ELSE '' END) IS FALSE));SELECT ALL (((((rt1.c2, t0.c1, rt1.c0, t0.c56, t0.c45))=((rt1.c0, rt1.c1, t0.c2, NULL, t0.c45))))OR(t0.c1 COLLATE BINARY)) FROM rt1, t0 ORDER BY ''  NULLS FIRST; -- 0ms;
SELECT ALL ((((t0.c45) IS TRUE)) NOTNULL), ((+ (rt1.c0)) IN ()), FIRST_VALUE((((rt1.c2)*(t0.c45)) IN ())) OVER () FROM rt1, t0 WHERE (((('(q_tz' IN (x'', 669162031)))>>(('-1217905493' IN (x''))))) ORDER BY ((((((((((((t0.c1)AND('>#{')))OR(rt1.c0)))OR(GLOB(t0.c0, t0.c56))))AND(CASE t0.c45  WHEN t0.c56 THEN rt1.c1 WHEN rt1.c1 THEN x'85a3' WHEN rt1.c1 THEN t0.c0 END)))AND(((((t0.c45)OR(rt1.c0)))OR(0xfffffffff308a29e)))))AND(((t0.c0) NOTNULL))) ASC  NULLS FIRST; -- 0ms;
SELECT ('-968245479' IN ()) FROM rt1, t0; -- 0ms;
SELECT ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c2, rt1.c0)) AND ((t0.c45, x'', t0.c0))) IN ()) FROM rt1, t0; -- 0ms;
SELECT ((+ ('{}')) IN ()) FROM t0, rt1 GROUP BY CASE WHEN CASE rt1.c2  WHEN rt1.c2 THEN t0.c45 WHEN rt1.c2 THEN t0.c2 WHEN t0.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN t0.c1 END THEN ((NULL)AND(t0.c1)) ELSE ((rt1.c2) ISNULL) END HAVING AVG(COUNT(*));SELECT ((CASE t0.c56  WHEN rt1.c1 THEN NULL WHEN t0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c1 ELSE 0.3130946721768192 END) NOT BETWEEN (json_type(t0.c1)) AND (((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT 0.3380124733475294 FROM t0; -- 0ms;
SELECT DISTINCT (((NOT (t0.c0)))GLOB((((t0.c45, t0.c45, t0.c0, t0.c45, t0.c0))<((rt1.c2, rt1.c1, rt1.c1, t0.c45, t0.c0))))) FROM rt1 WHERE ((~ ((((NULL)) NOT BETWEEN ((0X75deadf5)) AND ((NULL)))))) ORDER BY NULLIF((t0.c0 IN ()), NULLIF(DISTINCT rt1.c2, t0.c1));SELECT DISTINCT DENSE_RANK() OVER () FROM t0, rt1 WHERE (x'') ORDER BY ((((t0.c56)OR(0X795249bb)))OR(rt1.c1)) COLLATE RTRIM, ((TOTAL_CHANGES()) NOT BETWEEN ((~ (t0.c2))) AND (rt1.c2 COLLATE RTRIM))  NULLS LAST, CAST(t0.c0 AS BLOB)  NULLS FIRST; -- 0ms;
SELECT DISTINCT MAX(CASE WHEN rt1.c0 THEN rt1.c1 ELSE t0.c56 END) FROM rt1, t0; -- 0ms;
SELECT (((- (t0.c56))) BETWEEN (((t0.c2)OR(rt1.c0))) AND (x'' COLLATE NOCASE)) FROM rt1;SELECT DISTINCT LAG(((((((((((((rt1.c1)AND(t0.c0)))OR(t0.c1)))AND((rt1.c1 IN ()))))AND(((((t0.c56)OR('-924071361')))AND(t0.c0)))))OR((((t0.c0, t0.c0, rt1.c1)) BETWEEN ((t0.c45, t0.c2, rt1.c1)) AND ((t0.c1, rt1.c2, rt1.c0))))))AND(CAST(t0.c56 AS REAL))), ((json_array_length(t0.c56))*(((rt1.c0)/(t0.c1)))), (((t0.c1)|(rt1.c0)) IN ())) OVER () FROM rt1, t0 WHERE (((((NULL IN ()), (NOT (NULL)), TYPEOF(NULL)))<=(((((0.6485819215189504)) BETWEEN (('&}%aG!G')) AND (('948047070'))), NULL, x'')))); -- 0ms;
SELECT DISTINCT (~ ((+ (0X9ced81d)))), (~ (t0.c2)) COLLATE BINARY, CAST(t0.c2 AS BLOB) COLLATE NOCASE FROM rt1, t0 WHERE (((0.8575349863789032 COLLATE BINARY) IS TRUE)); -- 0ms;
SELECT DISTINCT NULL COLLATE BINARY, CASE WHEN CASE WHEN t0.c1 THEN rt1.c1 WHEN rt1.c0 THEN t0.c45 WHEN t0.c0 THEN t0.c1 END THEN ((t0.c1)||(rt1.c0)) WHEN ABS(DISTINCT t0.c0) THEN (NOT (t0.c2)) WHEN COUNT(rt1.c0) THEN CAST(t0.c45 AS INTEGER) ELSE MIN(0.5779333630425708) END, (((t0.c1 IN ())) NOT NULL) FROM rt1, t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((AVG(t0.c0))<(CASE t0.c45  WHEN rt1.c0 THEN t0.c2 ELSE rt1.c0 END)) FROM t0, rt1 WHERE (((CASE '1671404458'  WHEN NULL THEN 0.7182075641680098 WHEN 919356293 THEN 0.13791676825174015 WHEN NULL THEN '' ELSE 'Fp' END)IS(NULL))) ORDER BY ((ABS(DISTINCT t0.c1))<>(CAST(rt1.c2 AS INTEGER))) DESC; -- 0ms;
SELECT DISTINCT (((t0.c56) IS FALSE) IN ()) FROM t0 WHERE (UPPER(DISTINCT 0.6004921258498037) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NULL FROM t0, rt1 WHERE ((((((((((x'')OR(x'')))OR('*weekdayDHя?t䌒b')))AND('3WXP')))OR('705802538')) IN ())) ORDER BY rt1.c0 COLLATE RTRIM ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT t0.c2 FROM rt1, t0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT TOTAL(rt1.c0)), (- (NULL)), (((t0.c0 COLLATE NOCASE))>((((((t0.c45)AND(t0.c2)))OR(rt1.c1))))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c2 AS REAL))-(rtreenode(t0.c45, t0.c2))) FROM t0 WHERE (CAST(((1350768432)||('-1302980812')) AS INTEGER)); -- 0ms;
SELECT ALL (((CAST(rt1.c0 AS INTEGER)))!=(((((t0.c56, t0.c56, t0.c0)) NOT BETWEEN ((rt1.c2, t0.c56, t0.c45)) AND ((t0.c2, rt1.c0, rt1.c1)))))) FROM t0, rt1 ORDER BY CAST(t0.c45 COLLATE RTRIM AS INTEGER); -- 0ms;
SELECT MAX(((t0.c2)LIKE(NULL))) FROM rt1 WHERE (CAST(((x'1cbd') NOT BETWEEN (0.08631133666687396) AND ('2066969463')) AS NUMERIC)) INTERSECT SELECT ((CASE t0.c1  WHEN t0.c56 THEN rt1.c1 ELSE rt1.c0 END)=(((t0.c45)<>(rt1.c1)))) FROM t0, rt1;SELECT DISTINCT t0.c0 COLLATE BINARY, CAST(((((t0.c56)OR(t0.c1)))AND(rt1.c2)) AS NUMERIC), t0.c45 FROM rt1 WHERE ((((0X41285332 COLLATE NOCASE))<((CASE '1497620157'  WHEN '139113385' THEN '' ELSE '/' END)))) GROUP BY t0.c2, (((t0.c56 IN ())) IS TRUE), ((((t0.c1)<<(rt1.c1)))%(CAST(t0.c2 AS NUMERIC)));SELECT DISTINCT FIRST_VALUE(t0.c2) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (t0.c45 COLLATE NOCASE IN ()), (((((rt1.c0 IN ()))OR(AVG(t0.c0))))OR(((t0.c56)>>(0.5772815492947506)))), LAST_INSERT_ROWID() COLLATE NOCASE FROM t0, rt1 WHERE ((((1.903416161E9 IN ())) NOTNULL)); -- 0ms;
SELECT DENSE_RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(t0.c1)))AND(rt1.c2)))AND(t0.c56))) AND (((rt1.c2) IS FALSE))) FROM t0 NOT INDEXED WHERE ((((x'', 0.22348332798235937, NULL)) BETWEEN ((NULL, (((0.07689491481037292)) BETWEEN ((NULL)) AND ((''))), CAST(0.2232739474083263 AS NUMERIC))) AND (((~ (0.3641282778733962)), (('1923153289') ISNULL), CASE x'503a'  WHEN 0X5943debd THEN NULL END)))) GROUP BY (0.4287147344841403 IN ()), (((((((((((((((t0.c45)AND(t0.c2)))OR(t0.c1)))OR(rt1.c0)))AND(1.497620157E9)))OR(t0.c1)))OR(rt1.c0))))>=(('-317200469'))), t0.c2;SELECT (((93846792)) NOT BETWEEN ((CAST(t0.c1 AS TEXT))) AND ((CASE rt1.c0  WHEN t0.c45 THEN NULL ELSE t0.c1 END))) FROM t0, rt1; -- 0ms;
SELECT FIRST_VALUE((- (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN 2002610658 THEN NULL ELSE rt1.c2 END))) OVER () FROM rt1 ORDER BY (- ((((t0.c1))<((t0.c0)))))  NULLS FIRST;SELECT DISTINCT ((((rt1.c0)AND(rt1.c1))) NOT BETWEEN (((t0.c45) BETWEEN (rt1.c0) AND (t0.c45))) AND ((((rt1.c1))<=((t0.c2))))) FROM t0, rt1 WHERE (((('hz') IS FALSE) IN ('jDf'))) GROUP BY ((CAST(rt1.c2 AS REAL)) IS TRUE) HAVING (NULL IN ()) ORDER BY ((CASE t0.c0  WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c2 END)GLOB(json_object(rt1.c0, t0.c1))) ASC; -- 0ms;
SELECT ALL ((((t0.c45) BETWEEN (t0.c0) AND (t0.c1)))IS NOT(json_array_length(t0.c45))) FROM rt1 WHERE (((('-881277647')) BETWEEN (('259731736')) AND ((0x17ef073))) COLLATE BINARY) LIMIT 93846792;SELECT DISTINCT CAST((~ (rt1.c0)) AS NUMERIC), GROUP_CONCAT((- (rt1.c2))) OVER (), (TRIM(DISTINCT t0.c1, t0.c2) IN ()), ((((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c1)))IS NOT(rt1.c2)), NULL COLLATE NOCASE FROM rt1, t0; -- 0ms;
SELECT (((t0.c2 IN ()))>=((NOT (t0.c1)))) FROM rt1, t0 LIMIT 1503822239; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM t0, rt1 WHERE ((((CAST(0X24d8059a AS TEXT), NULL COLLATE RTRIM, LIKELIHOOD('-9223372036854775808', 0.3103408796016156)))>=((((NULL) NOT BETWEEN (x'') AND ('[]5j')), (x'3f15' IN ()), (+ ('>l')))))) LIMIT 1145873420; -- 0ms;
SELECT NULL FROM rt1; -- 0ms;
SELECT ALL GROUP_CONCAT(SUM(t0.c0) COLLATE NOCASE) FROM rt1, t0 WHERE ((~ (CASE WHEN x'' THEN NULL ELSE 0X5943debd END)));SELECT DISTINCT (((((t0.c1)AND(t0.c0)))AND(t0.c1)) IN ()) FROM rt1 WHERE (LIKELIHOOD(DISTINCT (((0.013517826796034527))>((0.7990975353579138))), 0.9130084457115479)); -- 0ms;
SELECT ALL MAX(((rt1.c2) IS FALSE)) FROM rt1 ORDER BY NULL  NULLS FIRST; -- 0ms;
SELECT ((((((((rt1.c1 COLLATE BINARY)OR((~ (rt1.c0)))))AND(MAX(t0.c56))))OR((x'' IN (t0.c2)))))AND(t0.c1)) FROM t0, rt1 ORDER BY (t0.c56 COLLATE NOCASE IN (x'')), rt1.c0 DESC, ((((t0.c45)-(t0.c2))) IS FALSE) ASC LIMIT 947501932 OFFSET 699587705; -- 0ms;
SELECT DISTINCT AVG(CAST(t0.c45 AS REAL)) OVER ( PARTITION BY (- (t0.c56)) COLLATE NOCASE, ((json_type(t0.c56)) NOTNULL)) FROM t0, rt1 WHERE ((-5.95684571E8 IN ())); -- 0ms;
SELECT ALL CAST(CASE t0.c1  WHEN t0.c45 THEN t0.c1 END AS NUMERIC) FROM rt1, t0 GROUP BY ((CASE rt1.c2  WHEN rt1.c1 THEN t0.c1 WHEN t0.c0 THEN x'' WHEN t0.c1 THEN rt1.c2 WHEN '25096307' THEN t0.c1 WHEN t0.c0 THEN rt1.c2 ELSE t0.c0 END)+(CAST(rt1.c0 AS INTEGER))) HAVING (((((t0.c0)OR(rt1.c0)))AND(t0.c0)) IN ()); -- 0ms;
SELECT CAST(t0.c45 AS REAL) COLLATE RTRIM, '/''}', CASE WHEN COUNT(t0.c0) THEN ((t0.c45)>(t0.c1)) END FROM t0, rt1 WHERE (((((((((('-1263971036' IN ()))OR(UPPER(DISTINCT NULL))))AND(x'')))AND(UNLIKELY(x'a2e1'))))OR(((0.18746010076376118) ISNULL)))); -- 0ms;
SELECT ALL rt1.c1 FROM rt1, t0; -- 1ms;
SELECT DISTINCT ((((((((((t0.c0) NOTNULL))AND(t0.c1)))AND((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c56))))))AND(((t0.c56)+(rt1.c2)))))OR(((rt1.c2) BETWEEN (NULL) AND (t0.c45)))) FROM t0, rt1; -- 0ms;
SELECT ALL ((((((t0.c0) IS TRUE))OR(t0.c2 COLLATE NOCASE)))AND(((rt1.c2)&(rt1.c0)))), '' COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE, MAX(CAST(rt1.c0 AS REAL)), ((CAST(rt1.c1 AS TEXT)) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (COUNT(*))), t0.c2 FROM rt1, t0 WHERE ((((((x'eaea' IN ()))OR(rtreenode(0.5022095750832037, ''))))AND((('832098537') IS FALSE)))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), (+ (CAST(rt1.c0 AS NUMERIC))), CASE (((t0.c1))>=((t0.c45)))  WHEN ((((((((rt1.c1)AND(rt1.c1)))AND(t0.c1)))AND(t0.c56)))OR(t0.c45)) THEN ((((rt1.c0)AND(t0.c2)))AND('-402438716')) ELSE LIKELIHOOD(DISTINCT t0.c56, 0.2647139140188427) END FROM rt1;SELECT DISTINCT (((t0.c2)+(rt1.c2)) IN ()) FROM t0 GROUP BY ((t0.c2 COLLATE RTRIM) IS FALSE) HAVING CASE WHEN CAST(-1962822034 AS INTEGER) THEN 0xffffffffed17e7ab WHEN (t0.c56 IN (rt1.c0, t0.c0)) THEN (+ ('-317200469')) WHEN SQLITE_COMPILEOPTION_GET(t0.c0) THEN ((rt1.c1)>>(t0.c45)) ELSE (t0.c2 IN ()) END;SELECT DISTINCT COUNT(*) OVER (), AVG(t0.c0 COLLATE BINARY COLLATE BINARY), ((rt1.c2 COLLATE NOCASE)*((((rt1.c1))<((rt1.c2))))) FROM t0, rt1; -- 1ms;
SELECT DISTINCT (((t0.c0 IN ())) NOT NULL) FROM rt1, t0 WHERE ((((0.8108751156527375, 0Xffffffff858b56be, NULL)) BETWEEN (('', 0xffffffffc0380d70, NULL)) AND ((0.9810057458531, NULL, ''))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN rt1.c2 THEN x'' WHEN 0.1989120681491684 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END) OVER () FROM rt1;SELECT ((rt1.c2 COLLATE BINARY) NOT BETWEEN (CASE rt1.c0  WHEN x'' THEN t0.c1 ELSE t0.c2 END) AND (CAST(t0.c0 AS BLOB))) FROM t0, rt1 WHERE (((((('162945989'))<(('0.4287147344841403')))) NOT NULL)); -- 0ms;
SELECT DISTINCT (((t0.c1)) NOT BETWEEN ((0.4515998462207448)) AND ((('0.18746010076376118' IN (t0.c56, t0.c45))))) FROM rt1 INDEXED BY i6 WHERE (HEX('눨d_B!O'));SELECT ALL t0.c2 FROM t0, rt1 WHERE (CASE ((((NULL)OR('')))AND(0.7128530954269576))  WHEN (((NULL))==((0.4232491373162691))) THEN ((0.6558506537188686)=('U^L/M05')) END); -- 0ms;
SELECT ALL ((t0.c1 COLLATE RTRIM)>=(t0.c0)) FROM rt1, t0; -- 1ms;
SELECT COUNT(((rt1.c1)|(rt1.c2))) FROM t0, rt1 WHERE ((((('1055731008')>>('(*')))<>(7.05802538E8))) ORDER BY ((((((((((rt1.c2)AND(rt1.c2)))OR(x'9199')))AND(t0.c45)))AND(t0.c2))) NOT BETWEEN ((((rt1.c1, rt1.c1, t0.c1))>=((rt1.c2, 0.6558506537188686, t0.c0)))) AND (rt1.c1))  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt1.c2 FROM t0;SELECT DISTINCT NTH_VALUE((NULL IN (((t0.c0)IS NOT(rt1.c0)))), t0.c2) OVER ( ROWS CAST(t0.c0 COLLATE NOCASE AS REAL) PRECEDING) FROM rt1, t0;SELECT ALL ((((rt1.c1)||(t0.c1))) NOT BETWEEN (t0.c45 COLLATE RTRIM) AND (NULL)), AVG(UNLIKELY(t0.c0)) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES), ((((t0.c56)&(t0.c0)))>>(SQLITE_VERSION())) FROM t0;SELECT (((((t0.c56)AND(rt1.c0)))AND(rt1.c1)) IN ()) FROM t0 CROSS JOIN rt1 ON t0.c1 COLLATE RTRIM WHERE (((('0.5779333630425708', NULL, '-168070075', '0.3252184157378015', '569813188')) BETWEEN ((((('-1454479426'))>=((0xffffffffec6ab6c7))), LIKE('', 6.99587705E8), ((((((((0.8369388915408543)OR(NULL)))AND(x'4e19')))AND(x'')))AND(NULL)), (('')>>(NULL)), (- (NULL)))) AND ((CAST(x'' AS BLOB), (((1.055731008E9))<=(('-1520045673'))), ((NULL) NOTNULL), NULLIF(0.4912386264284161, 0.37674448011494), COALESCE(0.062008637413818346, x''))))) LIMIT 1709790675; -- 0ms;
SELECT DISTINCT ((((((t0.c56))==((t0.c45)))))>=((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))AND(t0.c1))))) FROM rt1;SELECT DISTINCT CAST(((t0.c56)>=(NULL)) AS TEXT) FROM rt1, t0; -- 0ms;
SELECT DISTINCT (- (CAST(rt1.c0 AS REAL))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT CASE ('-898217799' IN ())  WHEN AVG(t0.c45) THEN (((t0.c45, t0.c56, rt1.c0))==((t0.c2, t0.c0, t0.c0))) ELSE ((t0.c1) BETWEEN (t0.c45) AND (rt1.c0)) END FROM rt1, t0; -- 0ms;
SELECT ALL x'' FROM rt1, t0; -- 0ms;
SELECT (((((t0.c45)) BETWEEN ((rt1.c1)) AND ((t0.c1)))) IS FALSE), ((((((((DATETIME(rt1.c1, t0.c56, NULL, t0.c2, t0.c0))AND(CAST(t0.c0 AS BLOB))))OR(NULL)))AND(((rt1.c1) ISNULL))))OR(((t0.c1)>(rt1.c1)))), ((((t0.c2) NOT BETWEEN (t0.c45) AND (rt1.c1))) BETWEEN (((t0.c45)<(x'c628'))) AND ((((rt1.c0))>((t0.c45))))) FROM t0;SELECT DISTINCT t0.c1, ((((rt1.c1)>=(rt1.c1)))<<(((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c2)))), ((t0.c0)IS NOT(t0.c1)) COLLATE NOCASE, ((((((((SUM(t0.c56))AND(CHAR(rt1.c1, rt1.c1, t0.c0))))AND(((t0.c2) BETWEEN (t0.c1) AND (rt1.c2)))))AND((+ (t0.c45)))))OR('(q_tz' COLLATE NOCASE)), ((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))<<(CAST(t0.c1 AS TEXT))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT SUM(NULL) OVER ( ORDER BY HEX(((((rt1.c1)OR(t0.c1)))OR(t0.c56))) DESC) FROM t0, rt1 WHERE (((NOT (NULL)) IN ())); -- 0ms;
SELECT CASE WHEN ((t0.c0) ISNULL) THEN COUNT(*) ELSE ((rt1.c1)||(rt1.c2)) END FROM t0, rt1 GROUP BY ((((((rt1.c2))>=((0Xffffffffa7b7b5d3)))))>((CAST(rt1.c2 AS TEXT)))); -- 0ms;
SELECT DISTINCT t0.c0 FROM rt1 WHERE ((NOT ((~ (0.3130946721768192)))));SELECT ((((((t0.c1)=(x'f50da89c')))AND((((t0.c0, t0.c2, t0.c1))=((t0.c1, t0.c56, t0.c2))))))OR(TYPEOF(t0.c0))), CAST(CAST(0.4515998462207448 AS INTEGER) AS REAL), ((- (rt1.c0)) IN ()) FROM rt1 NATURAL JOIN t0 WHERE (LTRIM(CAST('民3' AS BLOB), (((0x639f9baa)) NOT BETWEEN ((0x702f97da)) AND ((0Xffffffffb766cb65))))) LIMIT -52342585; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), SUM(CAST(rt1.c2 AS BLOB)), ((CASE t0.c56  WHEN t0.c0 THEN t0.c2 END)IS NOT(CAST(rt1.c0 AS INTEGER))), (((t0.c56)) BETWEEN ((TOTAL(rt1.c2))) AND (((t0.c56 IN (rt1.c1))))), (~ ((((rt1.c1))>((t0.c56))))) FROM t0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((((t0.c56)OR(t0.c0)))AND(t0.c45))) BETWEEN ((((t0.c56)) BETWEEN ((t0.c1)) AND ((-295782920)))) AND (t0.c0 COLLATE RTRIM)) ASC;SELECT DISTINCT LIKELY(DISTINCT ((t0.c2)IS NOT(rt1.c1))), LAST_INSERT_ROWID(), CAST(CASE rt1.c0  WHEN t0.c45 THEN t0.c45 END AS TEXT), (NOT (CAST(t0.c56 AS REAL))), (((((t0.c45, t0.c45, 1954754489)) BETWEEN ((rt1.c0, t0.c0, t0.c45)) AND ((rt1.c0, t0.c56, rt1.c2)))) IS FALSE) FROM rt1, t0 WHERE (CAST(CASE x''  WHEN '' THEN NULL ELSE 0.2251794724698698 END AS REAL)); -- 0ms;
SELECT 0.4871909343051979 FROM t0, rt1 WHERE ((NOT (('149679505' IN ('%&', 0.5772815492947506))))); -- 0ms;
SELECT UNLIKELY(DISTINCT rt1.c0) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT MIN(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) FROM rt1, t0 LIMIT -1218000027; -- 0ms;
SELECT DISTINCT (+ ((('') ISNULL))) FROM t0, rt1 WHERE ((((~ (NULL)))>=('tmauWzDuH'))); -- 0ms;
SELECT ALL (- (CAST(t0.c56 AS BLOB))) FROM t0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c45))IS NOT(CAST(t0.c56 AS INTEGER))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c2)) NOT BETWEEN ((t0.c45)) AND ((t0.c56)))) NOT NULL) FROM t0, rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c0) IS FALSE) AS BLOB) FROM t0 WHERE (CAST((('o')>(x'893093e6aa40')) AS NUMERIC));SELECT ALL ((((((rt1.c2)<<(rt1.c2)))OR(((rt1.c1)>(rt1.c0)))))OR(DATETIME(t0.c2, t0.c1, t0.c2))) FROM t0, rt1; -- 0ms;
SELECT ALL (((HEX(t0.c45)))==((0x7b4aae4e))) FROM rt1;SELECT ALL MIN(t0.c2) FROM t0; -- 0ms;
SELECT ((((((t0.c2) IS TRUE))OR(((t0.c1)*(t0.c2)))))OR(((((rt1.c0)OR(t0.c0)))OR(t0.c2)))), ((((t0.c45) IS FALSE)) IS TRUE), (((((((((((rt1.c2)AND(t0.c45)))AND(rt1.c0)))OR(t0.c45)))OR(t0.c56)), ((t0.c1) ISNULL), CAST(rt1.c2 AS TEXT)))=((MIN(t0.c56), t0.c0 COLLATE BINARY, t0.c2))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT CAST((((rt1.c0, rt1.c2, NULL)) BETWEEN ((t0.c56, t0.c1, t0.c2)) AND ((rt1.c1, rt1.c0, t0.c0))) AS TEXT) FROM rt1 WHERE (((('-1283355725')) BETWEEN ((STRFTIME('', x'5ae6', x'ff41'))) AND ((((x'')IS NOT(0x36cc4385))))));SELECT t0.c45, '-15162548', (CAST(t0.c1 AS TEXT) IN (((t0.c45)LIKE(0.4012885372017013)))) FROM rt1;SELECT t0.c0 FROM rt1, t0 WHERE ((~ (CASE 3.73206894E8  WHEN NULL THEN x'f4ba' ELSE 0.922214854336562 END))); -- 0ms;
SELECT (((rt1.c2 IN (rt1.c2)))IS NOT((NOT (t0.c2)))) FROM rt1, t0 WHERE (NULL); -- 0ms;
SELECT ALL CASE (rt1.c1 IN (t0.c2, rt1.c2))  WHEN t0.c45 COLLATE BINARY THEN (t0.c2 IN ()) END FROM t0;SELECT ((((rt1.c1)!=(t0.c45))) NOT BETWEEN (rt1.c1) AND (CAST(t0.c1 AS TEXT))) FROM t0, rt1; -- 0ms;
SELECT CASE WHEN ((t0.c56) NOT BETWEEN ('') AND (t0.c0)) THEN rt1.c2 COLLATE NOCASE WHEN ((((rt1.c0)AND(t0.c45)))OR(t0.c1)) THEN AVG(x'3603') WHEN (('-1931494368')LIKE(t0.c1)) THEN ((rt1.c2)>>(t0.c45)) END FROM rt1, t0; -- 0ms;
SELECT DISTINCT LEAD(((t0.c0)AND(((((t0.c1)AND(t0.c56)))OR(rt1.c1)))), ((t0.c45 COLLATE NOCASE)==(((((((((t0.c56)AND(t0.c45)))OR(rt1.c2)))OR(t0.c2)))AND(t0.c1)))), CASE (- (rt1.c1))  WHEN (t0.c1 IN ()) THEN (t0.c0 IN ()) WHEN ((t0.c56)>(t0.c56)) THEN (~ (rt1.c1)) WHEN (t0.c56 IN (0.4515998462207448, t0.c1)) THEN UNLIKELY(DISTINCT t0.c1) ELSE CASE WHEN t0.c56 THEN rt1.c1 END END) OVER ( ORDER BY 979503781) FROM t0, rt1; -- 3ms;
SELECT DISTINCT t0.c45, MAX(((t0.c56)GLOB(rt1.c0))), ((((((((t0.c2)OR(rt1.c0)))OR(t0.c0)))AND(t0.c56)))AND(rt1.c0)) COLLATE RTRIM FROM t0, rt1; -- 0ms;
SELECT ALL ((((((t0.c2)&(t0.c0)))AND(((t0.c56)>>(t0.c0)))))OR(CAST(rt1.c2 AS BLOB))), ((LOWER(rt1.c1)) IS FALSE), ((((CASE rt1.c2  WHEN t0.c2 THEN 0Xffffffffc8ebca3f ELSE rt1.c0 END)OR((rt1.c1 IN ()))))AND(rt1.c1)) FROM rt1 GROUP BY ((NULL) NOT BETWEEN (NULL) AND (((rt1.c2)>=(t0.c56)))) HAVING ((MAX(t0.c0)) IS FALSE);SELECT ALL (((((((((('Wf(\漢Kis')OR(t0.c56)))OR(t0.c2)))OR(rt1.c2)))AND(rt1.c1)))!=(t0.c45 COLLATE BINARY)) FROM rt1 INDEXED BY i6, t0 WHERE (CAST((('0.8575269199793086') NOTNULL) AS INTEGER));SELECT DISTINCT (((SUM(t0.c0), 0 COLLATE NOCASE, (0.35391699825902967 IN ())))==(((0.6722339730972728 IN ()), ((((((((t0.c1)OR(rt1.c0)))AND(t0.c45)))OR(rt1.c1)))OR(x'60ef')), (t0.c45 IN ())))) FROM rt1, t0 WHERE ((- (('0.34609909563824803' IN ())))); -- 1ms;
SELECT ALL ((((rt1.c0) NOTNULL))&(MIN(t0.c56))), CASE CASE t0.c0  WHEN 0.29246510335758835 THEN t0.c1 WHEN t0.c1 THEN NULL WHEN t0.c0 THEN rt1.c2 ELSE t0.c1 END  WHEN (t0.c45 IN (rt1.c2)) THEN ((rt1.c2)/(rt1.c2)) ELSE ((x'')<(rt1.c1)) END, (((((((((NOT (t0.c1)))OR(LIKELY(t0.c56))))OR(((rt1.c1) NOT BETWEEN (t0.c2) AND (rt1.c1)))))OR(CAST(t0.c0 AS BLOB))))OR(CAST('-1302980812' AS BLOB))) FROM rt1 WHERE (0.2017953757691362);SELECT DISTINCT GROUP_CONCAT(((t0.c2) BETWEEN (rt1.c1) AND (rt1.c0))) FROM t0;SELECT DISTINCT COUNT(((t0.c2)||(t0.c1)) COLLATE RTRIM), (+ ('-204046082')), SUM(((t0.c56)%(t0.c45))) FROM rt1 WHERE ((((x'') IS FALSE) IN (CASE '149679505'  WHEN 0.6313044398815079 THEN 1631092965 END, ((0.1541126162388179) BETWEEN ('1880768738') AND (2.00341282E9))))) ORDER BY LIKE(((rt1.c2)+(rt1.c2)), ((t0.c45)=(t0.c0)), '-')  NULLS FIRST;SELECT DISTINCT IFNULL(((((t0.c2)OR(t0.c45)))AND(NULL)), UNLIKELY(DISTINCT rt1.c1)), ((CASE WHEN t0.c45 THEN t0.c2 ELSE rt1.c1 END) BETWEEN ((t0.c1 IN ())) AND (CAST('0.3130946721768192' AS INTEGER))), (((t0.c45 COLLATE RTRIM, ((rt1.c0) NOTNULL), CASE t0.c1  WHEN rt1.c2 THEN rt1.c0 ELSE t0.c2 END))!=(((0Xffffffffb10860d8 IN (t0.c45)), ((t0.c45)=(rt1.c1)), ((t0.c2)||(t0.c1))))) FROM rt1, t0 WHERE (((CASE NULL  WHEN 'k' THEN '' END) NOT BETWEEN (((NULL) NOT BETWEEN ('1778696193') AND (0.28585547068238726))) AND ((('1997607176') BETWEEN (x'') AND ('R,?U5mÅ6'))))); -- 1ms;
SELECT DISTINCT CAST(t0.c0 AS NUMERIC) COLLATE RTRIM FROM t0, rt1 WHERE (CASE WHEN ((NULL)GLOB(NULL)) THEN (((NULL)) NOT BETWEEN ((NULL)) AND (('-1870808761'))) END); -- 0ms;
SELECT DISTINCT (((((t0.c0)IS(t0.c0))))<=(((t0.c0 IN (t0.c45, rt1.c1))))) FROM t0 INDEXED BY i6, rt1 WHERE (((((((x'')OR(7.05802538E8)))OR(x'')))LIKE(LIKELIHOOD(x'dae3', 0.839363152892015))));SELECT DISTINCT ((((rt1.c1)-(rt1.c1))) BETWEEN ((((rt1.c0))!=((t0.c1)))) AND ((((x'74f8')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))), (((x'' IN ())) IS FALSE), (((((rt1.c1)) BETWEEN ((t0.c45)) AND ((rt1.c0))))AND(((rt1.c2) NOTNULL))) FROM t0, rt1; -- 0ms;
SELECT ALL TOTAL(((rt1.c0)AND(t0.c1))) FROM rt1, t0 WHERE (CASE WHEN x'a0b2' THEN NULL END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((t0.c45) IS TRUE) IN ()) FROM rt1, t0 WHERE (CAST((('1011507841') ISNULL) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((LIKE(t0.c0, t0.c45, 'k')) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c45) ISNULL))) FROM rt1, t0; -- 0ms;
SELECT ALL t0.c2, (((((t0.c1 IN ()))AND(x'')))AND((+ (rt1.c1)))), rt1.c0, GROUP_CONCAT(x'') OVER (), CUME_DIST() OVER () FROM rt1;SELECT DISTINCT GROUP_CONCAT((t0.c0 IN ())) OVER ( ORDER BY CAST(((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)) AS TEXT) DESC ROWS BETWEEN  CURRENT ROW AND CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c1)%(t0.c1)) ELSE '-2015147229' END PRECEDING EXCLUDE TIES) FROM rt1 WHERE (UPPER((('-1185595252')<=(x'b925'))));SELECT DISTINCT (((t0.c1)) BETWEEN ((((t0.c45)%(t0.c0)))) AND (((rt1.c1 IN ())))) FROM rt1, t0; -- 0ms;
SELECT ALL rt1.c1, COUNT((((t0.c1, rt1.c0, rt1.c1))<=((t0.c2, t0.c56, '669162031')))) OVER (), (((rt1.c2) ISNULL) IN ()), ((rt1.c0) NOTNULL), SUM(((rt1.c1)LIKE(t0.c1))) OVER () FROM rt1 WHERE (((((NULL) IS FALSE)) NOT BETWEEN ((- ('-1931494368'))) AND (CAST(NULL AS TEXT))));SELECT DISTINCT SUM(t0.c0) OVER () FROM t0 WHERE ((NOT (0X36b1859e COLLATE RTRIM))); -- 0ms;
SELECT '8099681' FROM t0, rt1 WHERE (COALESCE(NULL COLLATE RTRIM, ((0.14012752230802206) NOT BETWEEN (NULL) AND (NULL)), 0.09131613626840673 COLLATE BINARY, ((2.035435963E9) IS FALSE))) ORDER BY CAST(t0.c1 AS TEXT) DESC; -- 0ms;
SELECT DISTINCT (+ (TYPEOF(rt1.c0))) FROM t0 WHERE (0.2159339117010982) ORDER BY (((-1626465695)GLOB(t0.c1)) IN ()) DESC;SELECT DISTINCT CASE UNICODE(t0.c0)  WHEN (rt1.c2 IN (t0.c2, t0.c2)) THEN ((rt1.c0)%(t0.c0)) END FROM rt1 WHERE (NULLIF(((x'') BETWEEN (0.0856763912563574) AND (x'')), (('') ISNULL)));SELECT DISTINCT (((((t0.c56 IN (rt1.c2)))OR(((t0.c45)%(rt1.c0)))))AND(x'')) FROM rt1;SELECT DISTINCT ((CASE t0.c2  WHEN rt1.c0 THEN t0.c56 ELSE t0.c2 END)<<(CASE t0.c45  WHEN t0.c0 THEN rt1.c1 END)), ((CAST(t0.c0 AS REAL)) ISNULL), CASE 0.15267868225426895  WHEN ((t0.c56) NOT BETWEEN (t0.c56) AND (t0.c56)) THEN '0.9912210618028419' WHEN x'' THEN '' COLLATE RTRIM WHEN (((t0.c0)) BETWEEN ((x'')) AND ((rt1.c1))) THEN (+ (t0.c1)) END FROM rt1 WHERE ((- (((x'') BETWEEN (-1415248965) AND ('Xu')))));SELECT DISTINCT ((((t0.c0)OR(((x'') NOT BETWEEN (t0.c0) AND (t0.c1)))))AND((- (t0.c0)))), (~ (rt1.c0)), ((((((((((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))OR(((t0.c1)>(t0.c0)))))AND(LAST_INSERT_ROWID())))AND(CAST(rt1.c2 AS INTEGER))))OR((+ (t0.c0)))))OR(((t0.c56)==('0.6722339730972728')))))AND(CAST(rt1.c0 AS NUMERIC))) FROM t0 WHERE (-295782920);SELECT DISTINCT ((((rt1.c0) BETWEEN (t0.c1) AND (t0.c1))) IS FALSE) FROM rt1 WHERE (((((NULL) NOT NULL)) NOTNULL)) LIMIT 1340365076;SELECT DISTINCT GROUP_CONCAT((((t0.c0))>=((rt1.c1)))) OVER ( RANGE BETWEEN ((((t0.c45) BETWEEN (0.3507147969820579) AND (t0.c0)))AND(((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))) FOLLOWING AND '705802538' FOLLOWING EXCLUDE CURRENT ROW) FROM rt1;SELECT DISTINCT ROW_NUMBER() OVER ( PARTITION BY ((LAST_INSERT_ROWID())IS NOT(((t0.c56)/(t0.c56)))), ((((((t0.c2)AND(t0.c2)))OR(t0.c45))) BETWEEN (((rt1.c1)==(t0.c2))) AND (CASE rt1.c0  WHEN t0.c0 THEN t0.c0 END))) FROM t0;SELECT ALL ((((TYPEOF(t0.c0))AND(((((rt1.c2)AND(t0.c2)))AND(t0.c0)))))OR(t0.c0)), (((t0.c0)<(x'')) IN ()), CUME_DIST() OVER () FROM rt1, t0 WHERE (NULL) LIMIT -968245479 OFFSET -271699378; -- 0ms;
SELECT ALL ((CASE rt1.c1  WHEN t0.c45 THEN t0.c2 END) IS FALSE), ((rt1.c2)>((t0.c56 IN ()))), ((((((((DATETIME(t0.c0, rt1.c2, t0.c1))AND(((rt1.c1) BETWEEN ('n') AND (t0.c2)))))OR(t0.c45)))AND((~ (rt1.c1)))))AND(CASE WHEN t0.c0 THEN t0.c56 ELSE rt1.c2 END)) FROM rt1 WHERE (((CASE WHEN 0.6954944766517512 THEN '-1324850984' ELSE x'' END)-(((((x'')AND(0.9706454129805928)))OR('-1271748516')))));SELECT ALL CAST(((rt1.c0)LIKE(rt1.c2)) AS INTEGER), ((rt1.c0)LIKE(((t0.c56) NOTNULL))), ((rt1.c0 COLLATE BINARY)IS NOT(CAST(rt1.c2 AS REAL))) FROM rt1, t0 WHERE (CAST((x'' IN ()) AS REAL)); -- 0ms;
SELECT ALL (((((t0.c56))<>((t0.c1))))IS NOT(((((t0.c0)AND(t0.c1)))AND(t0.c45)))), x'', CASE WHEN (((t0.c2, 0xffffffffefce324e, t0.c1)) NOT BETWEEN ((t0.c2, rt1.c2, t0.c56)) AND ((t0.c1, '1546183252', t0.c56))) THEN ((rt1.c0)IS(t0.c1)) END FROM rt1, t0 WHERE ((NOT (((NULL) BETWEEN (-1.283355725E9) AND ('-295782920'))))); -- 2ms;
SELECT DISTINCT '' FROM t0 WHERE ((- (LIKELY(1.991309122E9)))); -- 0ms;
SELECT ((((((((((((CASE WHEN x'' THEN rt1.c0 WHEN t0.c2 THEN t0.c56 WHEN rt1.c0 THEN t0.c0 END)AND((((rt1.c1))<=((rt1.c0))))))AND(((t0.c45)&(t0.c45)))))AND(((rt1.c0)%(t0.c1)))))OR(((t0.c2)>>(rt1.c2)))))AND(((t0.c1)-(t0.c2)))))AND(SUM(rt1.c2))) FROM rt1, t0 WHERE ('橄gt*NBvH'); -- 0ms;
SELECT ((((t0.c2)>(t0.c56))) BETWEEN (((rt1.c0)<(t0.c2))) AND (IFNULL(DISTINCT t0.c2, rt1.c2))) FROM t0, rt1 WHERE ((((((x'0ceb', x'', '0.8911960732852645')) NOT BETWEEN (('#3', NULL, 0.5712943802606819)) AND (('8099681', x'', 0Xfffffffff4f7a982))))IS((((('')AND(0.6558506537188686)))OR('-1364075899'))))); -- 0ms;
SELECT DISTINCT HEX(((t0.c1)+(rt1.c2))) FROM rt1, t0 GROUP BY (((t0.c1)) BETWEEN ((rt1.c0)) AND ((t0.c2))) COLLATE NOCASE, (LIKELIHOOD(t0.c56, 0.6747440697789188) IN (rt1.c1 COLLATE RTRIM, json_object(NULL, t0.c56))), SQLITE_SOURCE_ID();SELECT CASE CASE WHEN t0.c1 THEN rt1.c2 END  WHEN ((((rt1.c2)OR(-1.870808761E9)))AND(t0.c56)) THEN (((t0.c2, t0.c1, t0.c56))>=((t0.c56, t0.c1, ''))) END FROM t0, rt1 WHERE (((((x'') NOT BETWEEN (0.4895117341334132) AND ('-459380280'))) NOT NULL)); -- 0ms;
SELECT ALL (+ ('kcWuDrQ*')) FROM rt1 WHERE (json_valid(((0x1694e7b8) IS FALSE))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt1.c0)) NOT BETWEEN ('2144198408') AND (((t0.c56)>=(t0.c56)))) FROM rt1;SELECT ALL TOTAL((t0.c1 IN ())) FILTER(WHERE rt1.c2) OVER () FROM rt1 WHERE (IFNULL((+ (-1.070068368E9)), (x'' IN ()))); -- 0ms;
SELECT (((((rt1.c2)IS('1709790675'))))<((CAST(t0.c0 AS TEXT)))) FROM rt1, t0 WHERE ((~ (((NULL)OR('-238161570'))))) ORDER BY (~ (CASE rt1.c0  WHEN t0.c0 THEN x'' WHEN t0.c2 THEN t0.c56 WHEN t0.c1 THEN t0.c56 ELSE t0.c0 END))  NULLS FIRST; -- 0ms;
SELECT ((((((t0.c1)-(rt1.c0)))AND((((t0.c56)) BETWEEN ((rt1.c0)) AND ((t0.c45))))))AND(((('xU'))>=((t0.c45))))) FROM t0;SELECT DISTINCT ((((t0.c1) BETWEEN (rt1.c0) AND (rt1.c0))) ISNULL), LAG(((CASE WHEN '' THEN '1923153289' END) NOT BETWEEN (((((rt1.c0)AND(rt1.c2)))OR(rt1.c2))) AND (rt1.c2)), ((((rt1.c1) ISNULL))IS(JULIANDAY(rt1.c1, rt1.c2, rt1.c2, rt1.c1, rt1.c2))), ((((rt1.c0))<>((rt1.c0))) IN ())) OVER (), TOTAL(CASE WHEN t0.c45 THEN t0.c45 END) FROM rt1 WHERE (((((CAST(x'a86f' AS INTEGER))AND(((0.011493228748052475)AND(NULL)))))OR((+ (NULL)))));SELECT DISTINCT CASE WHEN ((rt1.c1)|(t0.c45)) THEN ((t0.c0)>(-1.369624615E9)) END FROM t0, rt1 WHERE (((((NULL)AND('162945989'))) NOT BETWEEN (NULL COLLATE NOCASE) AND ((('-968245479')/(1.954754489E9))))); -- 0ms;
SELECT ALL ((((((t0.c2) ISNULL))OR(((rt1.c0) IS TRUE))))OR(((((((((t0.c1)OR(t0.c45)))AND(rt1.c0)))AND(t0.c45)))OR(rt1.c1)))) FROM rt1 WHERE (TYPEOF(DISTINCT (- ('FB.Vz'))));SELECT ALL ((MAX(rt1.c1)) NOTNULL) FROM t0 WHERE (((0.41011949098821165)*(((x'') ISNULL))));SELECT DISTINCT CAST(x'e79b' COLLATE NOCASE AS BLOB) FROM rt1, t0; -- 0ms;
SELECT ALL (('')*(CAST(t0.c2 AS BLOB))) FROM rt1 WHERE ((((0.7727719797698883 COLLATE RTRIM))!=((((2.068491854E9)+(''))))));SELECT DISTINCT (~ (t0.c0)) FROM rt1 WHERE (DATE(((((((((0.43261543832334637)OR(NULL)))OR(0X2174d95b)))AND(NULL)))AND(NULL)), CASE '-898217799'  WHEN x'' THEN x'' WHEN 0.9968615092669069 THEN NULL WHEN 0.6424020348425443 THEN '1407924052' END, ((0.8194827692170432)-('\Ea}do')), ((((NULL)OR(0.6539894186064459)))OR(0.2745398454803383)), (('-271699378')+(x'')))) INTERSECT SELECT ALL (rt1.c0 COLLATE BINARY IN (CASE t0.c45  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN t0.c2 WHEN t0.c1 THEN rt1.c1 ELSE t0.c45 END, ABS(DISTINCT rt1.c0))) FROM rt1 INTERSECT SELECT DISTINCT TYPEOF(rt1.c2 COLLATE BINARY) FROM rt1 GROUP BY (((rt1.c0) IS TRUE) IN ()), t0.c2 COLLATE NOCASE COLLATE RTRIM, (- (rt1.c2));SELECT DISTINCT (((rt1.c1) NOT BETWEEN (t0.c0) AND ('a\.')) IN ()), ((((rt1.c2, t0.c45, t0.c45)) BETWEEN ((rt1.c2, rt1.c1, x'7570cb37')) AND ((x'', rt1.c2, t0.c0))) IN ()), ((((t0.c0) NOT NULL)) NOT BETWEEN (((((t0.c45)AND(t0.c0)))AND(t0.c1))) AND (rt1.c2)), CASE t0.c0  WHEN rt1.c0 THEN t0.c2 END COLLATE BINARY, ((+ (t0.c1)) IN (load_extension(t0.c2))) FROM rt1 ORDER BY t0.c2 ASC;SELECT DISTINCT GROUP_CONCAT(0.578718985438165) OVER () FROM rt1; -- 0ms;
SELECT ALL IFNULL(NULL COLLATE RTRIM, SUM(t0.c0)), ((MIN(t0.c2)) NOT BETWEEN ((x'' IN ())) AND (rt1.c0 COLLATE RTRIM)), MAX(rt1.c1) FROM t0 WHERE (UPPER(2.035435963E9 COLLATE BINARY));SELECT DISTINCT ((MIN(t0.c45))IS NOT(CASE WHEN x'' THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN NULL ELSE rt1.c2 END)) FROM t0;SELECT DISTINCT ((((rt1.c0) IS TRUE))IS(-1217905493 COLLATE RTRIM)) FROM rt1, t0 ORDER BY (((((t0.c45 IN ()))OR((NOT (rt1.c2)))))OR(((t0.c2) NOT BETWEEN (0.7799038138924826) AND (t0.c1)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ (CASE WHEN t0.c45 THEN rt1.c2 ELSE t0.c0 END)), ((x'')>=(t0.c45 COLLATE RTRIM)), LEAD(('' COLLATE NOCASE IN ()), (+ ('-248237497' COLLATE BINARY)), (t0.c2 IN ())) OVER () FROM t0, rt1; -- 0ms;
SELECT ALL ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((t0.c2) IS TRUE)) AND (((t0.c0)LIKE(t0.c2)))) FROM rt1, t0 GROUP BY NULL, CAST(TRIM(DISTINCT rt1.c0, t0.c0) AS INTEGER), t0.c56; -- 0ms;
SELECT DISTINCT CASE (((t0.c0, rt1.c1, rt1.c0)) BETWEEN ((t0.c45, t0.c45, rt1.c0)) AND ((t0.c1, t0.c2, rt1.c0)))  WHEN ((rt1.c0) ISNULL) THEN ((((rt1.c2)OR(t0.c45)))AND(t0.c56)) WHEN ((rt1.c2)&(t0.c2)) THEN (t0.c2 IN (t0.c56, t0.c0)) WHEN ((t0.c1)%(rt1.c2)) THEN rt1.c0 END FROM t0;SELECT SUM((~ (t0.c0))) FROM rt1 WHERE (((0.6809811611558433 IN ()) IN ())) LIMIT 1590194394;SELECT ALL (- (t0.c1 COLLATE RTRIM)) FROM rt1;SELECT CASE WHEN ((rt1.c1) IS TRUE) THEN 'avK-np|' WHEN (((rt1.c2, '-595684571', t0.c2))=((t0.c56, rt1.c2, rt1.c2))) THEN t0.c0 COLLATE RTRIM WHEN (((x'')) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))) THEN (rt1.c1 IN (t0.c56, rt1.c1, t0.c56)) ELSE ((t0.c45)<<(t0.c45)) END FROM rt1 WHERE ((((((NULL))<>(('1011507841'))))AND((NULL IN ()))));SELECT GROUP_CONCAT(((((((((((((t0.c2)AND(t0.c56)))AND(rt1.c1)))AND(t0.c1)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1))) OVER () FROM t0, rt1; -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST(t0.c45 AS INTEGER)) OVER () FROM t0 WHERE ((((0xffffffffdb99864e)) NOT BETWEEN ((((((((((NULL)AND(0.9210964448983258)))AND('')))OR('-1446482927')))AND(x'')))) AND ((CAST(NULL AS NUMERIC))))) GROUP BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c2 WHEN t0.c1 THEN rt1.c1 ELSE t0.c56 END) NOT NULL);SELECT t0.c2 FROM t0 WHERE ((~ ((('-1947127643')IS('5'))))); -- 0ms;
SELECT ALL (- ((((rt1.c0)) BETWEEN ((t0.c56)) AND ((rt1.c1))))) FROM rt1 WHERE (((((0.6033259917224597)OR(NULL)))OR('-1974346507')) COLLATE NOCASE);SELECT (((~ (rt1.c2))) BETWEEN (0x7634fdfe) AND (CAST(rt1.c1 AS TEXT))) FROM t0 WHERE (0.6665562709116047) GROUP BY CASE ((((rt1.c2)AND(t0.c2)))AND(t0.c2))  WHEN t0.c2 THEN CAST(rt1.c2 AS NUMERIC) WHEN ((((rt1.c1)AND(rt1.c1)))OR(t0.c0)) THEN ((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))AND(t0.c45)))AND(t0.c56)) WHEN ((t0.c2)&(t0.c2)) THEN (t0.c1 IN (t0.c0, x'b65f')) END HAVING (((-52342585, rt1.c1, x'')) NOT BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))), ((rt1.c0)IS(t0.c56)), ((t0.c56)LIKE(t0.c2)))) AND ((COUNT(t0.c45), ((rt1.c0)%(t0.c0)), CAST(t0.c0 AS TEXT))));SELECT ((CASE WHEN NULL THEN t0.c2 WHEN t0.c0 THEN t0.c56 WHEN t0.c1 THEN rt1.c1 END)-(x'dfa1' COLLATE BINARY)) FROM rt1 WHERE (CAST(((0.4895117341334132) BETWEEN ('1094362223') AND (0xffffffffb2c83f80)) AS BLOB));SELECT DENSE_RANK() OVER () FROM t0 WHERE ((((+ (x'1541'))) IS FALSE)); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT ((t0.c2) BETWEEN (rt1.c1) AND (t0.c45)), t0.c45), PRINTF(t0.c45, CASE t0.c1  WHEN rt1.c2 THEN rt1.c0 END, (+ (t0.c2))), rt1.c1, ((x'' COLLATE NOCASE)>>(((t0.c1)LIKE(t0.c1)))), (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1)))) NOTNULL) FROM rt1, t0 WHERE (((((0.10467387162966058)=(NULL)))IS(CAST(x'' AS TEXT)))) GROUP BY t0.c56, ((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c2)*(t0.c1))) AND ((NOT (rt1.c2)))), CASE CASE rt1.c0  WHEN rt1.c2 THEN t0.c2 END  WHEN (t0.c1 IN ()) THEN t0.c2 COLLATE BINARY ELSE ((rt1.c1) BETWEEN (rt1.c0) AND (NULL)) END; -- 0ms;
SELECT (NOT (((rt1.c2) NOT BETWEEN (t0.c45) AND (t0.c56)))), ((rt1.c1 COLLATE BINARY) IS TRUE), ((((t0.c1)<=(t0.c0)))>(CAST(0.9726189463080106 AS TEXT))) FROM rt1, t0; -- 0ms;
SELECT ALL CASE MAX(t0.c45)  WHEN CASE WHEN t0.c56 THEN rt1.c2 WHEN rt1.c0 THEN t0.c1 WHEN t0.c56 THEN rt1.c0 WHEN t0.c56 THEN t0.c1 WHEN rt1.c0 THEN rt1.c2 END THEN t0.c56 ELSE CASE t0.c0  WHEN t0.c2 THEN t0.c2 END END FROM rt1, t0 WHERE ((((((34858536)) BETWEEN ((0.7879091415830652)) AND ((NULL)))) BETWEEN (((NULL)|('n'))) AND (((NULL) IS FALSE)))); -- 1ms;
SELECT DISTINCT ((((t0.c45)IS(rt1.c1)))-((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt1.c2))))) FROM t0, rt1 WHERE (SQLITE_COMPILEOPTION_GET((x'' IN (0.624309690964734, NULL)))) GROUP BY CAST((((t0.c2)) BETWEEN ((t0.c56)) AND ((t0.c2))) AS NUMERIC) HAVING CAST(QUOTE('jdf') AS INTEGER); -- 0ms;
SELECT DISTINCT CAST(((((((((x'')AND(rt1.c2)))OR(t0.c56)))AND(t0.c2)))OR(t0.c56)) AS TEXT) FROM t0, rt1; -- 0ms;
SELECT ALL GROUP_CONCAT(NULL) FILTER(WHERE t0.c1) OVER () FROM rt1, t0 WHERE ((((NOT (x'cb3e')))=((+ ('164550685'))))); -- 0ms;
SELECT ALL json_patch(((t0.c45)>=('-1845695527')), (+ (rt1.c0))) FROM t0, rt1 WHERE (SQLITE_COMPILEOPTION_USED(2096724092) COLLATE BINARY); -- 0ms;
SELECT DISTINCT 0X701a40e2 FROM t0, rt1 LIMIT 897308224; -- 0ms;
SELECT ALL NULL FROM rt1 WHERE ((((('xU') NOTNULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT (((((t0.c45)AND(t0.c2)))AND(t0.c56)) IN ()) FROM t0; -- 0ms;
SELECT ALL ((rt1.c2 COLLATE BINARY)AND((((t0.c0))>=((t0.c1))))) FROM t0 WHERE ((+ ((- (6.39849365E8)))));SELECT DISTINCT COUNT(*), ((t0.c56)+(rt1.c2)) COLLATE RTRIM, ((((('0.6313044398815079')IS NOT(rt1.c0))))<(((+ (x''))))) FROM rt1 WHERE (((NULL COLLATE NOCASE)IS(((NULL)/('1671404458')))));SELECT ALL (+ (t0.c2)) COLLATE RTRIM, t0.c2, ((t0.c56)<(UNLIKELY(rt1.c2))) FROM rt1, t0 WHERE (((((0.9593460617639047)%(NULL)))<(0xffffffffb2561734 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (+ ((~ (t0.c1)))), ((t0.c2 COLLATE NOCASE) IS FALSE), (~ ((((t0.c45))<>((t0.c0))))) FROM rt1, t0 GROUP BY ((((CASE t0.c1  WHEN rt1.c2 THEN '2035435963' END)AND(((t0.c45) IS TRUE))))AND(((rt1.c2) NOTNULL))) ORDER BY (((((((((((((((((t0.c2)AND(t0.c1)))AND(NULL)))OR(rt1.c1)))AND(t0.c1)))OR(t0.c56)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)) IN ()); -- 0ms;
SELECT NTILE((((rt1.c0 IN ())) IS TRUE)) OVER () FROM rt1 INDEXED BY i6, t0;SELECT DISTINCT (rt1.c0 COLLATE RTRIM IN ((((t0.c2))!=((NULL))), ((((((((((((t0.c56)OR(x'')))AND(0Xffffffffa523976f)))AND(t0.c56)))AND(rt1.c1)))OR(t0.c45)))AND(rt1.c2)))) FROM t0, rt1 WHERE (((((((('1631092965')OR('-628510597')))OR(0.2232739474083263))))=(('1095999904' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( RANGE BETWEEN ((((((((json_remove(t0.c1, rt1.c0))AND(CAST(rt1.c1 AS TEXT))))AND(TRIM(DISTINCT 0.48198373112419957))))OR((((t0.c0))=((0.8308390255126037))))))AND(((t0.c1)GLOB(x'7377')))) PRECEDING AND  CURRENT ROW EXCLUDE TIES), CHAR(t0.c45) COLLATE BINARY, CASE CAST(t0.c2 AS BLOB)  WHEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 END THEN COUNT(*) ELSE CAST(rt1.c1 AS TEXT) END FROM rt1 WHERE (LIKELIHOOD(DISTINCT (NOT (0xffffffff8cdfbc20)), 0.4354476396571333)) LIMIT -311801764;SELECT ALL LIKELY(DISTINCT (t0.c0 IN ())) FROM rt1; -- 0ms;
SELECT ALL LOWER(MAX(t0.c56)) FROM rt1 WHERE ('?i');SELECT (((t0.c2, t0.c45, 0.38754324490696457)) NOT BETWEEN ((CAST(rt1.c1 AS REAL), (~ (t0.c1)), t0.c1 COLLATE RTRIM)) AND ((t0.c0, ((((((((t0.c45)AND(t0.c45)))AND(rt1.c2)))AND(t0.c0)))OR(t0.c45)), (((t0.c56, t0.c56, t0.c1, rt1.c2, t0.c56, t0.c56, t0.c1)) NOT BETWEEN ((t0.c56, rt1.c0, rt1.c1, t0.c56, rt1.c0, -1659750844, t0.c45)) AND ((t0.c56, rt1.c1, t0.c56, t0.c2, '', t0.c1, rt1.c2)))))), rt1.c1 COLLATE NOCASE, t0.c1 FROM rt1, t0 GROUP BY ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE BINARY HAVING (((rt1.c0, rt1.c1, t0.c1, x'', t0.c2))<>((rt1.c1, t0.c45, t0.c1, rt1.c1, t0.c1))) COLLATE NOCASE ORDER BY ((((t0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) IN (((((((((rt1.c1)OR(t0.c0)))OR(t0.c56)))AND(rt1.c0)))OR(rt1.c1)))) ASC  NULLS LAST; -- 0ms;
SELECT ALL (((((rt1.c0))<=((t0.c45)))) NOT BETWEEN ((((t0.c1))<=((rt1.c0)))) AND ((((t0.c1, t0.c56, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, x'')) AND ((t0.c56, rt1.c1, t0.c56))))) FROM rt1, t0 WHERE (((((x'') IS FALSE))||(((0.07820913449028244) BETWEEN (NULL) AND (-30489203))))); -- 0ms;
SELECT DISTINCT ((LIKELY(rt1.c0))==(t0.c56)), LOWER(NULL), ((t0.c2) NOTNULL), CASE AVG(rt1.c2)  WHEN CASE '93846792'  WHEN rt1.c0 THEN NULL WHEN t0.c45 THEN '<MGd볎Z' WHEN t0.c56 THEN rt1.c0 WHEN t0.c2 THEN t0.c2 WHEN rt1.c2 THEN t0.c2 END THEN (('-1369624615')GLOB(t0.c1)) END, ((NULLIF(DISTINCT t0.c56, rt1.c1)) NOT NULL) FROM t0, rt1 WHERE ((((((((('-15162548')AND(CAST('-1945170205' AS BLOB))))OR('' COLLATE RTRIM)))OR((((('1641362264')OR(x'')))OR('\n)E')))))AND(((0.9241490439309437) BETWEEN ('-295782920') AND (x'91c5'))))); -- 1ms;
SELECT TIME(AVG(t0.c0), ((t0.c45) ISNULL), (((x'6a2c'))<(('')))) FROM t0, rt1 GROUP BY (((((rt1.c0 IN (t0.c2)))OR(((t0.c1) NOT BETWEEN (t0.c56) AND (t0.c45)))))OR(((((((((t0.c2)OR(t0.c1)))OR(x'')))OR(t0.c1)))AND(t0.c56)))), 0.46064525876497553, ((t0.c0 COLLATE RTRIM)GLOB(((t0.c56)>>(rt1.c1)))); -- 0ms;
SELECT DISTINCT ((+ (rt1.c0)) IN ()) FROM t0; -- 0ms;
SELECT 0Xffffffffb4a95524 FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((t0.c0 IN ()) IN ()), CAST(MAX(0.18222400033886954) AS INTEGER), rt1.c0 FROM t0;SELECT ((((IFNULL(rt1.c2, NULL))OR(((t0.c2)|(t0.c1)))))OR((NOT (t0.c2)))) FROM rt1, t0 WHERE (NULL); -- 0ms;
SELECT (~ (TRIM(DISTINCT t0.c1))) FROM t0 WHERE (CAST('' AS TEXT) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((MIN(rt1.c0))AND(rt1.c1 COLLATE RTRIM)))OR((NOT (rt1.c2)))) FROM rt1 WHERE (CAST((('')>=(0x28072ca3)) AS BLOB)); -- 0ms;
SELECT ALL (((t0.c45 IN ()))/(CAST(rt1.c1 AS TEXT))), ((CAST(t0.c56 AS NUMERIC))%(t0.c2)), CASE WHEN rt1.c0 COLLATE BINARY THEN rt1.c1 WHEN ((t0.c45)AND(rt1.c1)) THEN CAST(x'7b13' AS INTEGER) WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)) THEN rt1.c1 COLLATE BINARY ELSE CASE WHEN t0.c45 THEN t0.c1 END END FROM rt1, t0 WHERE ((((('162945989') ISNULL)) NOT BETWEEN (CASE x''  WHEN '-1493953125' THEN NULL ELSE x'a714' END) AND (((0xffffffffa8a526c9)LIKE(NULL))))) GROUP BY SUBSTR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE t0.c2 END, (~ (t0.c0))) HAVING ((((t0.c2 IN ())))=((((t0.c56) BETWEEN (rt1.c2) AND (rt1.c2))))); -- 0ms;
SELECT DISTINCT (((((rt1.c1 IN ()))AND((rt1.c1 IN ()))))AND((~ (rt1.c1)))), (t0.c1 COLLATE RTRIM IN ()), t0.c45, (((('43074322') BETWEEN (rt1.c2) AND (9.47501932E8)))*(t0.c0 COLLATE BINARY)), ((((((((CAST(t0.c0 AS BLOB))AND(CAST(rt1.c1 AS INTEGER))))OR((t0.c1 IN (t0.c1, x'9650')))))OR('!([_I)!Rλ')))OR(((rt1.c0)%(2023472873)))) FROM rt1 WHERE (CASE WHEN (0x775d69e2 IN (NULL)) THEN ((x'') BETWEEN ('>l') AND (x'aa50')) ELSE HEX(x'') END);SELECT ALL ((((((((((((COALESCE(DISTINCT t0.c56, x''))OR(CASE WHEN 0.947829044835397 THEN rt1.c0 ELSE rt1.c2 END)))OR(LOWER(DISTINCT t0.c1))))AND((t0.c1 IN ()))))AND(((((-4.02438716E8)OR(t0.c1)))AND(t0.c45)))))AND(NULL)))AND(CAST(t0.c1 AS REAL))) FROM rt1 WHERE (0.03721721171268533); -- 0ms;
SELECT DISTINCT t0.c2 FROM rt1 GROUP BY CASE WHEN ((rt1.c0)IS NOT(t0.c2)) THEN (- (t0.c56)) ELSE CAST(t0.c2 AS NUMERIC) END, 0.37674448011494, (((rt1.c0) IS TRUE) IN ()) HAVING (((t0.c0)) NOT BETWEEN ((CASE WHEN t0.c2 THEN rt1.c1 ELSE t0.c1 END)) AND (((((t0.c2))=((t0.c2))))));SELECT CAST(CASE t0.c45  WHEN t0.c2 THEN t0.c45 END AS BLOB) FROM t0; -- 0ms;
SELECT (((((rt1.c0)) BETWEEN ((0.5278461967054929)) AND ((t0.c0))))==(t0.c2)) FROM rt1 WHERE (((1722723701) BETWEEN ((((('_+M	AN')AND(NULL)))OR(x'26d5'))) AND (((x'')-(1997607176)))));SELECT ALL (- (((rt1.c2) NOTNULL))) FROM t0, rt1 WHERE (((((x'')>(0.6873115753263811)))==(NULL COLLATE BINARY))); -- 0ms;
SELECT CASE WHEN t0.c45 THEN t0.c0 END COLLATE RTRIM FROM t0 WHERE (((INSTR(NULL, '947501932'))GLOB(CAST(0.8418995810634381 AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((t0.c2 IN ()))LIKE(rt1.c0)) FROM t0 WHERE (NULL);SELECT DISTINCT ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN t0.c1 WHEN rt1.c2 THEN t0.c45 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN t0.c45 THEN rt1.c2 WHEN rt1.c2 THEN NULL END)||(((((t0.c45)AND(rt1.c2)))AND(-2.015147229E9)))), (+ (((t0.c45) NOTNULL))), CAST(CHAR(t0.c56) AS BLOB), DENSE_RANK() OVER (), SUM(rt1.c1 COLLATE NOCASE) FROM t0, rt1; -- 0ms;
SELECT DISTINCT t0.c56 FROM t0, rt1 WHERE ((NOT (0xffffffffa1169489 COLLATE BINARY))) GROUP BY (((((t0.c56)) NOT BETWEEN ((t0.c0)) AND ((rt1.c1)))) ISNULL) ORDER BY SQLITE_COMPILEOPTION_USED((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((MIN(t0.c56)) IS FALSE) FROM t0, rt1; -- 1ms;
SELECT ((rt1.c1 COLLATE RTRIM) BETWEEN (((t0.c45) ISNULL)) AND (LIKELY(DISTINCT t0.c1))) FROM rt1 WHERE (((CASE WHEN NULL THEN x'' ELSE 'Wh(h' END)/((('/') BETWEEN (x'29de') AND ('')))));SELECT DISTINCT ((0xffffffffba355e71)*('1451524844' COLLATE NOCASE)) FROM rt1, t0 LIMIT -390311623 OFFSET 116522041; -- 0ms;
SELECT DISTINCT (((((rt1.c1)) BETWEEN ((t0.c56)) AND ((t0.c2)))) ISNULL), CASE WHEN ((t0.c45)*(t0.c2)) THEN GROUP_CONCAT(t0.c1) END, ((SUM(rt1.c2))-(((t0.c2) ISNULL))) FROM rt1, t0; -- 0ms;
SELECT t0.c0 FROM t0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT ((((0.20307997584750392)OR(x'')))AND(((t0.c1)AND(t0.c56)))), (((t0.c0)||(rt1.c2)) IN ()), (((((NOT (NULL)))OR(((t0.c56)<(t0.c1)))))OR((+ (rt1.c1)))) FROM t0 WHERE ((- (CAST('q	^xk瑅' AS TEXT))));SELECT DISTINCT json_array_length(LIKELY(DISTINCT t0.c45), (NOT (rt1.c1))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((CAST(-986689017 AS BLOB))/(t0.c56 COLLATE NOCASE)) FROM rt1, t0 WHERE (COALESCE(DISTINCT (((NULL)) BETWEEN ((1350768432)) AND ((0.5381865810964647))), 0.7474102436743996 COLLATE NOCASE)); -- 1ms;
SELECT ALL (CASE t0.c1  WHEN rt1.c0 THEN t0.c2 END IN (((((rt1.c0)OR(t0.c56)))OR(t0.c2)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))), x'', rt1.c0 FROM rt1 LIMIT -84519841;SELECT ALL TYPEOF((((rt1.c2))>((t0.c56)))), ((((((rt1.c0)OR(t0.c1)))OR(NULL)))>=(0.554612979658768)), NTH_VALUE(CASE WHEN rt1.c0 THEN rt1.c1 WHEN t0.c45 THEN t0.c1 WHEN rt1.c0 THEN t0.c2 ELSE t0.c45 END COLLATE RTRIM, SQLITE_VERSION()) OVER () FROM t0, rt1;SELECT DISTINCT (((~ (t0.c0))) BETWEEN ((+ (t0.c2))) AND (((rt1.c2) BETWEEN (t0.c2) AND (t0.c0)))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT (((0.8989807847695682)) BETWEEN (('-1148485721')) AND ((((x'') NOT BETWEEN (t0.c1) AND (t0.c1))))) FROM t0 WHERE (((x'') NOT BETWEEN (0.09131613626840673) AND ((('/') BETWEEN (NULL) AND ('o4lJMQﴈrL'))))); -- 0ms;
SELECT DISTINCT ((((t0.c56) NOT BETWEEN (rt1.c0) AND (t0.c1))) BETWEEN ((~ (t0.c0))) AND (t0.c1 COLLATE RTRIM)) FROM rt1 WHERE (((0.18848079708366972) IS FALSE));SELECT ALL (NOT (CASE t0.c56  WHEN rt1.c2 THEN rt1.c1 END)) FROM t0;SELECT ((t0.c56 COLLATE RTRIM)IS NOT(((rt1.c2)==(t0.c1)))) FROM rt1;SELECT (((rt1.c0, t0.c0, rt1.c1)) BETWEEN ((((0X26235395) NOTNULL), CASE t0.c0  WHEN rt1.c1 THEN t0.c56 END, (((t0.c0))<((t0.c0))))) AND ((CASE WHEN t0.c1 THEN rt1.c1 WHEN t0.c56 THEN rt1.c0 WHEN t0.c0 THEN t0.c1 ELSE x'' END, ((t0.c1) ISNULL), UPPER(t0.c45)))) FROM t0;SELECT ((GROUP_CONCAT(rt1.c1)) NOT BETWEEN (((rt1.c1) IS FALSE)) AND (((rt1.c0) BETWEEN (t0.c2) AND (rt1.c0)))), t0.c0, (((((t0.c2)AND(x'')))AND(t0.c56)) IN (((t0.c56)-(t0.c0)))), ((MAX(t0.c1))IS(NULL)), CAST(((0.7727719797698883)/(t0.c2)) AS NUMERIC) FROM t0;SELECT DISTINCT SUM((rt1.c2 IN (t0.c0, t0.c2))) FROM t0 WHERE (LTRIM((((0.7041104735332926, x'', x'c039')) BETWEEN (('j,HhzNus', 0xffffffffe4cc7b70, '-1520659341')) AND ((NULL, x'', NULL))), (('832098537') NOT NULL)));SELECT ALL rt1.c1 FROM rt1, t0 WHERE (('' COLLATE BINARY IN ())); -- 0ms;
SELECT ALL ((((((rt1.c2)OR(t0.c0)))AND(t0.c56))) NOTNULL) FROM t0;SELECT DISTINCT ((((((((((rt1.c2)AND(t0.c56)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1))) IS FALSE) FROM rt1 WHERE (0.9123627297123016);SELECT DISTINCT CAST(((rt1.c0)IS(rt1.c1)) AS TEXT) FROM t0, rt1; -- 1ms;
SELECT CASE WHEN CASE WHEN rt1.c0 THEN t0.c56 END THEN (((t0.c45, t0.c56, t0.c0))==((t0.c1, t0.c56, '0.553118280947498'))) WHEN (((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt1.c2))) THEN ((((((((t0.c1)AND('-971230207')))AND(0x218bc989)))OR('-317200469')))AND(t0.c1)) WHEN x'' THEN (- (0.21632975216157913)) ELSE ((rt1.c2)%(rt1.c2)) END, t0.c45 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE, (((t0.c2)) NOT BETWEEN ((t0.c1)) AND (((('-422740881')<<(rt1.c1))))) FROM t0;SELECT (((((rt1.c1, t0.c56, t0.c56)) BETWEEN ((t0.c1, t0.c0, t0.c45)) AND ((NULL, t0.c2, t0.c1)))) ISNULL), t0.c0, COUNT((- (rt1.c1))) OVER () FROM t0 INDEXED BY i6, rt1;SELECT ALL ((((CASE t0.c1  WHEN t0.c2 THEN rt1.c2 END)AND(UNLIKELY(t0.c56))))OR((((t0.c1))==((rt1.c0))))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT ((((~ (t0.c0))))<>((((rt1.c0) BETWEEN (0.17345323696131798) AND (rt1.c0))))) FROM rt1 WHERE (json_insert(CASE WHEN NULL THEN '919356293' END, ((x'')>('-1626465695')), NULL, ((0xfffffffff6d7293f) ISNULL), x''));SELECT DISTINCT UNLIKELY(TRIM(t0.c2)), ((t0.c56)%(t0.c56)) COLLATE NOCASE, (+ (t0.c0 COLLATE NOCASE)) FROM t0 WHERE (((0.015183079144577949)>((('')/('1968815135'))))); -- 0ms;
SELECT ((CASE t0.c0  WHEN t0.c1 THEN t0.c45 END) BETWEEN (((rt1.c0)<(rt1.c0))) AND (t0.c0 COLLATE BINARY)), ((TOTAL(0.5001556668518764)) BETWEEN ((((0X30919771))!=((t0.c2)))) AND (((t0.c1) NOT NULL))), ((((t0.c56)GLOB(t0.c45)))<>((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c56))))) FROM t0, rt1 WHERE ((((('671248964') NOT NULL)) NOT NULL)) GROUP BY ((ABS(DISTINCT t0.c2))&(((t0.c1) BETWEEN (t0.c1) AND (rt1.c0)))) HAVING ((((((((((((CASE t0.c56  WHEN t0.c56 THEN t0.c0 END)OR(x'')))AND(CAST(rt1.c1 AS BLOB))))OR(-844224749)))OR((- (t0.c2)))))OR(((t0.c56) NOTNULL))))OR(CAST(rt1.c1 AS BLOB))) LIMIT -998039233; -- 0ms;
SELECT CAST(((rt1.c2)||(t0.c1)) AS INTEGER) FROM rt1 ORDER BY CASE WHEN (x'' IN (t0.c56)) THEN '' ELSE SQLITE_COMPILEOPTION_GET(rt1.c0) END  NULLS LAST, json_array_length((t0.c56 IN ()), COALESCE(rt1.c1, t0.c0)) DESC  NULLS LAST LIMIT -508414026;SELECT ALL CASE LAST_INSERT_ROWID()  WHEN ((t0.c45)|(rt1.c0)) THEN (- (rt1.c2)) WHEN ((t0.c2) NOTNULL) THEN ((t0.c2) BETWEEN (rt1.c0) AND (rt1.c1)) WHEN ((t0.c56) NOTNULL) THEN ((t0.c0)<(t0.c1)) WHEN '259731736' COLLATE RTRIM THEN UPPER(DISTINCT rt1.c1) WHEN ((((t0.c2)OR(t0.c2)))AND(rt1.c1)) THEN CAST(rt1.c1 AS INTEGER) ELSE rt1.c2 END FROM rt1, t0 WHERE (CASE WHEN ('u^l/m05' IN ()) THEN CAST('H,X뙮!' AS BLOB) WHEN TRIM(DISTINCT '639849365', x'') THEN ((x'')LIKE(0Xffffffffb0408f21)) WHEN (((('-106818820')OR(x'')))AND('*')) THEN ((((-8.81277647E8)OR(NULL)))OR(0Xfffffffffc0d4a47)) ELSE LAST_INSERT_ROWID() END); -- 0ms;
SELECT (((rt1.c0))<>((t0.c45))) COLLATE RTRIM FROM t0, rt1; -- 0ms;
SELECT DISTINCT 0.5555127122478709 FROM t0, rt1 ORDER BY CASE (~ (t0.c45))  WHEN ((((NULL)OR(t0.c45)))AND('?*Ye')) THEN ((((((((((((rt1.c1)AND('17849359')))OR(rt1.c0)))OR(rt1.c1)))OR(t0.c2)))OR(t0.c56)))OR(t0.c56)) WHEN CASE t0.c45  WHEN rt1.c0 THEN rt1.c0 ELSE 0.6607200923710367 END THEN t0.c1 COLLATE RTRIM WHEN ((rt1.c0) BETWEEN (t0.c1) AND (t0.c1)) THEN ((t0.c1)>=(rt1.c2)) END ASC; -- 0ms;
SELECT ALL (+ ((t0.c56 IN ()))) FROM rt1 WHERE (CAST(((((x'')AND(x'')))AND(0.8340442529512793)) AS BLOB)); -- 0ms;
SELECT ALL COUNT(((rt1.c2) NOTNULL)) FROM rt1, t0 ORDER BY ((((CASE WHEN t0.c45 THEN t0.c0 END)AND(((rt1.c1)||(NULL)))))AND(ABS(t0.c45)))  NULLS LAST; -- 0ms;
SELECT GROUP_CONCAT((~ (t0.c0))), SUM(((rt1.c1)&(t0.c56))) OVER ( ORDER BY ((CAST(rt1.c0 AS BLOB)) BETWEEN ((NOT (t0.c0))) AND (((t0.c1) NOT BETWEEN ('-399492986') AND (rt1.c2)))), t0.c1 DESC  NULLS LAST), CAST(((((t0.c1)AND(t0.c1)))OR(t0.c2)) AS REAL), (((((rt1.c1)IS(t0.c0)), rt1.c2 COLLATE NOCASE, rt1.c1))<=((t0.c45 COLLATE RTRIM, rt1.c1, CASE WHEN rt1.c0 THEN t0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN t0.c56 END))), CASE SUBSTR(rt1.c2, rt1.c0)  WHEN LOWER(t0.c2) THEN ((t0.c0)AND(rt1.c0)) ELSE ((((t0.c45)AND(t0.c2)))OR(NULL)) END FROM rt1 WHERE ((~ (CASE WHEN '' THEN 0.8534965715999316 ELSE '' END)));SELECT DISTINCT NULLIF(DISTINCT ((t0.c2)<=(t0.c0)), (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))) FROM t0;SELECT DISTINCT SUM(((t0.c0) BETWEEN (rt1.c2) AND (rt1.c2))) OVER () FROM rt1 WHERE (CAST(((((((((x'0c62')AND(NULL)))AND(x'')))AND(x'')))AND('1384309592')) AS REAL)) GROUP BY CAST((NOT ('')) AS REAL) HAVING COUNT('767377746');SELECT ALL ((~ (t0.c56)) IN ()) FROM t0; -- 0ms;
SELECT ALL TOTAL(AVG(t0.c45)) FROM t0 WHERE ((((NOT (NULL))) IS FALSE));SELECT DISTINCT ((((rt1.c0)IS(rt1.c1)))+((t0.c1 IN ()))), ((((rt1.c1 COLLATE NOCASE)OR(((t0.c56)>=(t0.c0)))))OR(SUM(t0.c1))), ((x'')AND(t0.c45 COLLATE RTRIM)) FROM t0, rt1 WHERE ((CASE x''  WHEN x'' THEN 832098537 END IN ())); -- 0ms;
SELECT DISTINCT 0.3737648886136524 FROM rt1, t0; -- 0ms;
SELECT DISTINCT SUM(((rt1.c0)<=(rt1.c0))) FROM t0, rt1 WHERE (CASE WHEN CAST(0.7286669254088669 AS INTEGER) THEN (x'' IN ()) ELSE (((0.3739959838999827))>((NULL))) END); -- 0ms;
SELECT DISTINCT (NOT (t0.c2)), NULL, CASE CASE WHEN t0.c45 THEN rt1.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN '1477007913' ELSE rt1.c1 END  WHEN (- (rt1.c0)) THEN ((t0.c1) NOT NULL) WHEN rt1.c1 THEN 0.3507147969820579 WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) THEN ((NULL)*(rt1.c0)) END, ((CAST(t0.c45 AS INTEGER))LIKE(t0.c2)), CUME_DIST() OVER () FROM t0 WHERE (((((-4.02438716E8) ISNULL)) IS TRUE));SELECT DISTINCT ((CAST(t0.c1 AS BLOB)) BETWEEN ((NOT (t0.c56))) AND (IFNULL(t0.c1, t0.c56))) FROM t0 WHERE ((((((('-1043549993') ISNULL))OR((- (0.7086420953464178)))))OR(INSTR(x'', '#襃5V*{_')))); -- 0ms;
SELECT ALL CAST((rt1.c2 IN (t0.c0, rt1.c2)) AS BLOB) FROM rt1 WHERE (TRIM(DISTINCT ((((((((NULL)AND(0x795249bb)))OR(-161388761)))OR(x'')))AND('752873990'))));SELECT ALL x'' FROM rt1, t0 LIMIT 1008118964; -- 0ms;
SELECT DISTINCT LENGTH(json_remove(rt1.c1, rt1.c2)) FROM t0 WHERE (((CAST('1538952534' AS INTEGER))<>(CAST(0.9190087470055439 AS TEXT)))) GROUP BY ((((((((t0.c56)AND('-993322978')))AND(t0.c56)))AND(t0.c45)))OR(t0.c45)) COLLATE NOCASE;SELECT DISTINCT RANK() OVER (), t0.c1, HEX((((rt1.c2, t0.c45, t0.c56))<=(('', t0.c56, rt1.c0)))) FROM rt1, t0; -- 0ms;
SELECT NULL, rt1.c0, 0.44561145657316514 FROM t0, rt1 WHERE (((+ (x'')) IN ((('1659818145')/(NULL))))); -- 0ms;
SELECT ((((t0.c2)OR(t0.c2)))OR(t0.c45)) COLLATE RTRIM FROM rt1 WHERE (((0X17ef073) BETWEEN (CAST(0X163eaf6e AS INTEGER)) AND (('1350768432' IN ('1925:698:452T1497 3989443168107522524:-3549476394431224834 9015083064307375536-1092T'))))) GROUP BY (((MAX(t0.c56, t0.c45)))<=((']|''>')));SELECT (+ (CAST(t0.c56 AS BLOB))) FROM t0; -- 0ms;
SELECT CASE (t0.c45 IN ())  WHEN 0.466872539240766 COLLATE NOCASE THEN rt1.c0 WHEN ((0.32259306895997086) NOT NULL) THEN ((t0.c0)<<(rt1.c0)) WHEN ((rt1.c0) NOTNULL) THEN ((t0.c1)IS(t0.c1)) END FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c45 THEN rt1.c1 WHEN t0.c1 THEN '1795777545' WHEN t0.c45 THEN '' ELSE t0.c0 END)<<(CAST(rt1.c1 AS BLOB))) FROM t0 LIMIT 948047070;SELECT DISTINCT t0.c2, '-1' COLLATE BINARY, LTRIM((t0.c56 IN ())) FROM rt1;SELECT DISTINCT t0.c45 FROM rt1;SELECT DISTINCT LIKE(((((((((t0.c56)AND(rt1.c2)))AND(t0.c56)))OR(rt1.c0)))AND(t0.c56)), t0.c2, '<'), CAST('-947465612' AS NUMERIC) COLLATE NOCASE, CAST(rt1.c2 AS REAL) FROM t0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c1)OR(t0.c2)))OR(rt1.c0)))OR(t0.c45)))AND(rt1.c1)))>('' COLLATE BINARY)) FROM t0, rt1 WHERE (((('1698300101')) BETWEEN ((CASE x''  WHEN x'ff6c' THEN NULL WHEN x'b85d' THEN x'' WHEN '' THEN '919356293' ELSE '(*' END)) AND ((((0.3082469218493058)<=(0.8111911739636868)))))) GROUP BY CAST(t0.c1 AS INTEGER) HAVING ((((((((CAST(rt1.c2 AS NUMERIC))OR((((rt1.c2))>=((t0.c2))))))OR(((t0.c2) NOTNULL))))AND(((rt1.c1) IS FALSE))))OR(NULL)); -- 0ms;
SELECT (((t0.c1, t0.c56, t0.c0, t0.c56, rt1.c1, t0.c45, t0.c1)) BETWEEN ((CASE rt1.c0  WHEN t0.c2 THEN 1.094123706E9 WHEN t0.c1 THEN t0.c0 WHEN t0.c45 THEN t0.c2 ELSE rt1.c1 END, ((rt1.c2) BETWEEN (t0.c0) AND (rt1.c2)), (t0.c2 IN ()), ((t0.c0)IS NOT(t0.c0)), (NOT (t0.c1)), ((rt1.c1) ISNULL), GLOB(t0.c45, t0.c1))) AND (((((rt1.c2)) NOT BETWEEN ((x'')) AND ((t0.c2))), CAST(t0.c45 AS REAL), ((t0.c45)LIKE(rt1.c1)), 'U)', ((((t0.c56)OR(t0.c0)))OR(rt1.c0)), ((rt1.c2) ISNULL), COUNT(*)))), (((((rt1.c1, rt1.c1, rt1.c1))!=(('-840498097', t0.c56, t0.c0))))>(CASE WHEN t0.c1 THEN rt1.c2 ELSE t0.c45 END)), PERCENT_RANK() OVER (), ((((rt1.c1) NOT BETWEEN (t0.c56) AND (0X62fa61b6)))OR((NOT (t0.c2)))), COUNT(*) FROM t0, rt1; -- 0ms;
SELECT ((rt1.c1 COLLATE BINARY)OR((rt1.c0 IN (t0.c0, t0.c56)))) FROM rt1 WHERE ((((((~ (NULL)))OR((NOT (0.3873328369528175)))))AND((('') NOT NULL))));SELECT DISTINCT (((~ (rt1.c1)))<=((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))) FROM t0;SELECT ALL LAG(((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN ((- (t0.c1))) AND ((('569813188') NOT BETWEEN (t0.c45) AND (rt1.c2)))), CAST(((rt1.c1) BETWEEN (t0.c1) AND (t0.c0)) AS TEXT), ((t0.c2) NOT NULL)) OVER () FROM rt1, t0 GROUP BY ((t0.c56 COLLATE RTRIM)IS(CAST(rt1.c1 AS REAL))) HAVING ((((rt1.c1)IS(rt1.c1))) IS TRUE); -- 0ms;
SELECT ALL '_+m	an' FROM rt1 WHERE ((~ (DATE(0.622617330373754, NULL, '1954754489', NULL, 0.6558506537188686)))) GROUP BY (NOT (((t0.c45)IS NOT(t0.c0)))), (~ (CAST(0.9989532513729567 AS BLOB))), '-1704016409';SELECT DISTINCT ((((t0.c45)<=(rt1.c2)))LIKE(((rt1.c2) IS FALSE))) FROM rt1 LIMIT 2035435963;SELECT DISTINCT ((((((t0.c2)OR(t0.c0)))AND(rt1.c1)))!=((((t0.c45))>=((-1446482927))))), TOTAL(GROUP_CONCAT((t0.c56 IN ()))), ((t0.c0 COLLATE NOCASE) BETWEEN (TYPEOF(rt1.c0)) AND (UNLIKELY(t0.c2))) FROM t0;SELECT ((t0.c56) ISNULL) COLLATE BINARY FROM rt1, t0; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM t0, rt1 WHERE (CAST((((0X1991c138)) BETWEEN (('')) AND (('149679505'))) AS INTEGER)); -- 0ms;
SELECT ALL ((CAST(0.24431028007017208 AS TEXT)) BETWEEN (((t0.c56)>(rt1.c1))) AND (TRIM(DISTINCT t0.c2, rt1.c2))) FROM t0, rt1 WHERE (0.336876985990883); -- 0ms;
SELECT DISTINCT (((t0.c2 IN ()))/(((t0.c2)<<(rt1.c0)))) FROM t0 NOT INDEXED, rt1 GROUP BY CAST(((t0.c1)/(t0.c0)) AS BLOB), (((t0.c1)) BETWEEN (((((t0.c0))=((t0.c1))))) AND ((COALESCE(NULL, '%d/B⃒9i#', rt1.c1, rt1.c0)))), (-1.5162548E7 IN ()) HAVING t0.c2; -- 0ms;
SELECT UPPER(((rt1.c2) IS FALSE)), UNLIKELY(((t0.c0) IS TRUE)), CASE WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c1) ISNULL) ELSE ((rt1.c2)==(t0.c0)) END FROM rt1, t0 ORDER BY (((t0.c56))==(('-968245479'))) COLLATE RTRIM, TYPEOF(CASE WHEN x'' THEN rt1.c1 ELSE t0.c56 END) DESC  NULLS FIRST, '⚺m' ASC; -- 1ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY)) AND ((AVG(rt1.c1)))), (((~ (x'')))>(rt1.c0)), CAST(((t0.c0) NOTNULL) AS NUMERIC) FROM rt1 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c56)AND(t0.c0)))OR(t0.c56)))AND(t0.c0)))OR(t0.c45))) IS TRUE) FROM rt1, t0 WHERE (((((((((0xffffffffcae8f32a)OR(CAST(x'4f89' AS TEXT))))AND(ABS(x'b93e'))))OR(-5.10228666E8)))OR((((('&Q')AND(0.8170881869547858)))AND(-1002222325))))); -- 0ms;
SELECT ALL (NOT (NULL)) FROM rt1, t0 WHERE ((((- (0.4973886091178622))) IS FALSE)); -- 0ms;
SELECT ALL ((rt1.c1 COLLATE BINARY)<>(((rt1.c0) NOTNULL))) FROM rt1 WHERE (((((0.13150998452967322)<(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT INSTR((t0.c1 IN ()), ((((x'23fe')AND(t0.c2)))OR(t0.c0))), (((t0.c2)) BETWEEN ((((rt1.c1) NOTNULL))) AND ((t0.c0))), ROW_NUMBER() OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM t0 WHERE (((NOT (NULL)) IN ()));SELECT ALL (((NOT (rt1.c0)))LIKE(((rt1.c1)+(t0.c45)))), 'T', (LIKELIHOOD(DISTINCT NULL, 0.8682156787497869) IN ((t0.c0 IN ()))) FROM t0, rt1 WHERE (CASE (- ('-421339692'))  WHEN CAST('bI' AS TEXT) THEN CAST(x'' AS NUMERIC) ELSE ((x'') BETWEEN (NULL) AND (NULL)) END); -- 1ms;
SELECT DISTINCT ((~ (rt1.c1)) IN ()) FROM rt1; -- 0ms;
SELECT ALL rt1.c0, ((CAST(t0.c2 AS BLOB)) NOTNULL), GROUP_CONCAT(((t0.c45)OR(t0.c0))) OVER () FROM t0;SELECT ((0.8646415960178814) IS FALSE), (((+ (t0.c1))) BETWEEN (CAST(t0.c45 AS TEXT)) AND (CAST(t0.c1 AS NUMERIC))), CAST((rt1.c2 IN ()) AS TEXT) FROM t0 WHERE (((('1882167258')) NOT BETWEEN ((('-1340195708' IN ()))) AND ((CAST(0.7666794571615424 AS BLOB))))) EXCEPT SELECT t0.c56, (((((((t0.c2, t0.c2, NULL))>=((t0.c45, rt1.c0, rt1.c2))))OR(CAST(rt1.c0 AS INTEGER))))OR((rt1.c0 IN ()))), CUME_DIST() OVER () FROM rt1 WHERE ('-1626465695');SELECT ((GROUP_CONCAT('srDjzX抁踦')) NOT BETWEEN (MAX(rt1.c2)) AND ((t0.c45 IN ()))) FROM t0;SELECT ALL ((((rt1.c1)&(rt1.c1)))GLOB(((t0.c45) BETWEEN (rt1.c1) AND (rt1.c0)))), rt1.c1, ((CASE t0.c2  WHEN t0.c45 THEN t0.c45 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN -933573654 END)LIKE((+ (t0.c1)))) FROM t0 WHERE (x'');SELECT DISTINCT COUNT(CASE WHEN t0.c0 THEN NULL WHEN -1.735756715E9 THEN t0.c45 WHEN t0.c56 THEN t0.c45 ELSE rt1.c2 END) FROM t0 ORDER BY ((TYPEOF(DISTINCT t0.c0))>>(CAST(t0.c56 AS INTEGER))) ASC  NULLS LAST, ((t0.c1) NOTNULL) ASC  NULLS LAST;SELECT ALL (CAST(rt1.c1 AS NUMERIC) IN ((rt1.c1 IN (t0.c1)))) FROM rt1;SELECT DISTINCT (((CASE t0.c0  WHEN t0.c0 THEN t0.c56 END, (((rt1.c2))<((t0.c45))), t0.c2))>(((((t0.c45, x'', t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((rt1.c0, 1392422561, rt1.c1))), MAX(t0.c56), rt1.c0 COLLATE BINARY))), ((t0.c1 IN (t0.c0, t0.c2)) IN ()), ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c56))) BETWEEN ((((t0.c1, t0.c0, rt1.c1)) NOT BETWEEN ((t0.c0, t0.c2, t0.c2)) AND ((rt1.c0, t0.c56, t0.c56)))) AND ((+ (t0.c0)))), (((((((t0.c1, t0.c1, rt1.c0)) BETWEEN ((t0.c1, '-559421952', rt1.c2)) AND ((t0.c0, t0.c56, rt1.c2))))AND(SQLITE_COMPILEOPTION_GET(rt1.c2))))AND((- (x'c8a8')))), t0.c0 FROM t0;SELECT ALL CASE ((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))  WHEN ((t0.c0)AND(rt1.c0)) THEN (((t0.c56, t0.c56, t0.c0))>((t0.c2, t0.c1, x''))) ELSE t0.c56 COLLATE RTRIM END FROM rt1, t0; -- 1ms;
SELECT DISTINCT ((LIKELIHOOD(rt1.c2, 0.18696935958773309)) ISNULL) FROM rt1, t0 WHERE (CHANGES()); -- 0ms;
SELECT DISTINCT ((((rt1.c0) ISNULL)) NOT BETWEEN (CAST(t0.c45 AS TEXT)) AND (((((rt1.c2)AND(rt1.c1)))AND(t0.c45)))) FROM t0 WHERE ((((x'', x'', ') ?r4i')) BETWEEN ((0Xffffffffe60a3252, 0.20626668321684138, '2014865103')) AND (('-1481132589', '947501932', ''))) COLLATE RTRIM);SELECT ALL COUNT(*) OVER ( RANGE (t0.c1 IN (NULL)) COLLATE BINARY PRECEDING EXCLUDE GROUP) FROM t0 WHERE (((x'' COLLATE NOCASE) NOT NULL));SELECT DISTINCT (NOT (((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))), (((rt1.c2, rt1.c2, t0.c0)) NOT BETWEEN (((NOT (rt1.c2)), 3.9979805E8, NULL)) AND ((t0.c2, (('-204046082')&(rt1.c2)), 0Xffffffff8ae7d9c5))), ((((json_patch(t0.c45, rt1.c1))OR(((t0.c1) IS TRUE))))AND(((t0.c1)>>(t0.c2)))) FROM t0, rt1; -- 0ms;
SELECT x'', CAST(TYPEOF(DISTINCT t0.c56) AS INTEGER), t0.c45 FROM rt1, t0; -- 0ms;
SELECT DISTINCT rt1.c1, (((~ (''))) NOT BETWEEN (((t0.c1) IS FALSE)) AND (AVG(rt1.c0))), GROUP_CONCAT(((t0.c56)/(rt1.c0))) OVER () FROM rt1;SELECT ((((AVG(t0.c0))OR((((t0.c56, t0.c45, t0.c45))>((rt1.c2, t0.c45, t0.c1))))))AND(GROUP_CONCAT(rt1.c2))) FROM rt1;SELECT ALL ((((rt1.c0) ISNULL)) NOT BETWEEN (((rt1.c1)<=(t0.c0))) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND ('-915379212')))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT ((((t0.c1) ISNULL)) BETWEEN (COUNT(*)) AND (((t0.c1)IS(t0.c56)))) FROM t0, rt1 WHERE ((((((((NULL)OR(54096584)))AND(0.6358969627541833))))<=((((0.1951371887692882) IS TRUE))))) GROUP BY t0.c0 HAVING ((AVG('D{EⵀWfweC'))OR(((rt1.c2)-(8099681)))); -- 0ms;
SELECT ((((t0.c56) BETWEEN (rt1.c2) AND (t0.c1)))/(((t0.c45)GLOB(t0.c1)))), ((ABS(DISTINCT t0.c2)) NOT NULL), ((((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))<(LTRIM(t0.c0))) FROM t0, rt1 WHERE (((((CASE WHEN NULL THEN '688565375' END)OR(((7.05802538E8) NOTNULL))))OR(CAST(x'f7eb' AS NUMERIC)))); -- 0ms;
SELECT CAST(((t0.c1)/(rt1.c0)) AS INTEGER) FROM t0, rt1; -- 0ms;
SELECT DISTINCT CAST((('-1164811919')>(rt1.c0)) AS TEXT), '0.8205029687705582', ((CAST(t0.c56 AS BLOB)) ISNULL) FROM t0 WHERE (CAST(((((NULL)OR('')))OR(163095030)) AS TEXT)) GROUP BY (+ (ABS(rt1.c0)));SELECT ((((rt1.c1) ISNULL)) NOT NULL) FROM rt1, t0; -- 0ms;
SELECT DISTINCT (NULL IN ()), ((((((((((((rt1.c0)AND((((t0.c2, rt1.c1, rt1.c2))<((t0.c1, t0.c56, t0.c2))))))OR((~ (rt1.c2)))))AND(COUNT(*))))AND('-L4V8u3&i')))OR(((rt1.c1)>>(t0.c56)))))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))), COUNT(*) OVER () FROM rt1, t0 WHERE (x'' COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((rt1.c2) NOTNULL) COLLATE NOCASE, json_patch((~ (x'')), ((NULL) IS TRUE)), LTRIM(((t0.c2)%(rt1.c2))) FROM t0;SELECT DISTINCT ((((((((t0.c1)OR(rt1.c0)))AND(t0.c56)))AND((t0.c0 IN ()))))AND((t0.c2 IN ()))), FIRST_VALUE(((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) AND (TRIM(DISTINCT rt1.c0)))) OVER (), ((t0.c1) ISNULL) FROM rt1;SELECT t0.c0 FROM t0 WHERE (CASE WHEN CASE WHEN 0.7727719797698883 THEN '|u' END THEN ((('㺔(B'))<=(('6&gE'))) END); -- 0ms;
SELECT DISTINCT x'' FROM t0, rt1 WHERE ((~ (((((((((x'')AND(NULL)))OR('-79580632')))OR(NULL)))OR(NULL))))) ORDER BY (((t0.c0)) BETWEEN ((((t0.c2) NOTNULL))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ASC, (rt1.c1 IN ('2002610658', '2035435963'))  NULLS LAST, LIKELIHOOD(-2.1753789E8, 0.024229473772891197)  NULLS LAST; -- 0ms;
SELECT (((t0.c45 IN ()))==(((x'')||(rt1.c2)))), ((((t0.c56) IS TRUE)) NOT BETWEEN (((((2.068491854E9)OR(t0.c2)))OR(NULL))) AND (((((rt1.c1)OR(t0.c1)))AND(t0.c1)))), ((((t0.c0) IS FALSE)) NOT NULL) FROM t0, rt1 WHERE (CAST((('-1283355725')LIKE('()')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((0.18746010076376118) NOT NULL) FROM rt1, t0; -- 0ms;
SELECT (((- (rt1.c0)))IS NOT(TRIM(DISTINCT t0.c1, t0.c2))) FROM t0, rt1 WHERE (COALESCE(DISTINCT ((((((((0.33390511348527074)AND(0x2e4fa362)))AND(NULL)))AND(NULL)))AND('-1838964897')), (((1e500)) BETWEEN (('PlgCr')) AND ((0.9570811680677369))))); -- 0ms;
SELECT ALL (((~ (t0.c45))) NOT BETWEEN ((NOT (t0.c0))) AND (ABS(t0.c45))), ((AVG(t0.c1)) NOT BETWEEN (CASE WHEN rt1.c2 THEN t0.c2 END) AND (((((rt1.c1)AND(t0.c56)))OR(t0.c1)))), CAST(CASE t0.c56  WHEN rt1.c2 THEN t0.c1 END AS INTEGER), DENSE_RANK() OVER ( ORDER BY GLOB(((t0.c45)*(rt1.c1)), ((t0.c0) NOT BETWEEN (t0.c56) AND (t0.c0)))  NULLS LAST RANGE  CURRENT ROW EXCLUDE NO OTHERS), (+ (CASE t0.c56  WHEN t0.c0 THEN rt1.c2 ELSE t0.c2 END)) FROM t0, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(0.42575192238086235) FROM t0, rt1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0 CROSS JOIN rt1 ON (((t0.c56 IN ())) ISNULL); -- 0ms;
SELECT ((((rt1.c1)>(t0.c1)))%(CASE WHEN t0.c1 THEN t0.c56 END)), TOTAL(((rt1.c1)>=(t0.c45))), ((((((('-1365573737', rt1.c2, t0.c0)) NOT BETWEEN ((t0.c56, t0.c56, t0.c45)) AND ((rt1.c0, rt1.c2, x''))))OR(rt1.c0)))AND((- (t0.c45)))), ((((t0.c1) NOT BETWEEN (t0.c0) AND (rt1.c2))) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0)))) AND ((((t0.c2, rt1.c2, '869502637'))>((rt1.c0, t0.c45, t0.c56))))), (TOTAL(t0.c2) IN (((t0.c45)>=(t0.c0)))), t0.c45, (rt1.c0 COLLATE NOCASE IN ()) FROM t0;SELECT ALL CAST(((((t0.c45)OR(t0.c1)))AND(t0.c1)) AS REAL) FROM rt1 WHERE (((((((NULL)AND(x'')))OR(NULL))) ISNULL));SELECT ((t0.c2)>(0.646125548114698)) COLLATE NOCASE FROM rt1, t0 WHERE (((0xffffffff8cdfbc20)||(NULL)) COLLATE NOCASE) LIMIT -91544273 OFFSET -1133897728; -- 0ms;
SELECT COALESCE(((t0.c0) IS TRUE), ((0xffffffffa99861e3) BETWEEN (t0.c45) AND (rt1.c1))) FROM rt1, t0 WHERE (CASE CASE WHEN NULL THEN 0.1035061579326888 END  WHEN (NULL IN ()) THEN ((NULL) NOT NULL) WHEN ((((x'')OR('-1520045673')))AND('oN')) THEN CAST('9&' AS BLOB) WHEN 0.2467704589060412 THEN CAST(NULL AS TEXT) ELSE (x'' IN ()) END) LIMIT -207301340 OFFSET 979503781; -- 0ms;
SELECT ((rt1.c1 COLLATE RTRIM)+(t0.c1 COLLATE BINARY)) FROM t0;SELECT DISTINCT CASE MAX(rt1.c1)  WHEN ((t0.c1)==(t0.c45)) THEN ((((((((t0.c45)OR(rt1.c2)))OR(rt1.c1)))AND(NULL)))OR(rt1.c2)) END, ((((((((0.06461079584208518)AND(((((((((t0.c56)OR(rt1.c2)))OR(t0.c1)))OR(t0.c1)))AND(rt1.c2)))))OR(((t0.c56)GLOB(t0.c2)))))OR(((NULL)LIKE(rt1.c2)))))OR((((rt1.c0))>=((t0.c56))))), ((((rt1.c1)OR(((((t0.c1)OR(rt1.c1)))OR(t0.c0)))))OR((~ (t0.c1)))) FROM t0, rt1 WHERE ((~ (0.6273127633699918)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT t0.c2))GLOB((+ (t0.c56)))) FROM rt1 WHERE (-1066209083);SELECT ((((((t0.c56)>(t0.c2)))OR(((('W^', rt1.c2, t0.c1, t0.c1, rt1.c2)) BETWEEN ((t0.c2, t0.c56, t0.c1, '0(^뽮>D', rt1.c0)) AND ((t0.c45, t0.c0, t0.c1, rt1.c0, t0.c1))))))OR((+ (t0.c2)))), (NOT ((- (t0.c0)))), t0.c2, COUNT(*) OVER ( PARTITION BY (- (CASE WHEN t0.c45 THEN t0.c0 ELSE t0.c2 END)), ((t0.c0) BETWEEN (((t0.c56) IS TRUE)) AND ((t0.c2 IN (t0.c45))))), ((rt1.c2 COLLATE NOCASE)>=(((rt1.c1) NOT BETWEEN (t0.c56) AND (t0.c45)))) FROM t0, rt1; -- 0ms;
SELECT ((rt1.c1) ISNULL) COLLATE NOCASE FROM rt1 WHERE (((-2066819462)!=(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE) NOT NULL), ((rt1.c1 COLLATE RTRIM) BETWEEN (CAST(rt1.c1 AS TEXT)) AND ((rt1.c2 IN ()))), HEX(PRINTF(rt1.c1, t0.c56, t0.c2)) FROM t0, rt1 GROUP BY ((((t0.c45) IS TRUE))IS NOT(((t0.c2) NOT BETWEEN (t0.c0) AND (rt1.c2)))), (~ (((t0.c0) NOT BETWEEN ('0.29246510335758835') AND (t0.c2)))), CASE rt1.c0  WHEN ((rt1.c0) BETWEEN (t0.c45) AND (t0.c2)) THEN ((t0.c1)+(rt1.c2)) END; -- 1ms;
SELECT ALL (((rt1.c0)=(t0.c56)) IN (t0.c45)) FROM rt1, t0; -- 0ms;
SELECT DISTINCT CAST((((t0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c0))) AS REAL) FROM t0 INNER JOIN rt1 ON LOWER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c56))) WHERE ((((('1567470289')IS(x''))) BETWEEN (((x'2ceb3e74') IS FALSE)) AND ((((NULL, NULL, 1500012442)) NOT BETWEEN ((x'', NULL, 0X61e9cd35)) AND ((x'', 0.9912210618028419, 0.14169222966380457)))))) GROUP BY ((t0.c0) IS FALSE) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (~ (COUNT('-1931494368'))) FROM t0, rt1; -- 0ms;
SELECT SUM(CAST(t0.c45 AS INTEGER)), CASE WHEN rt1.c1 THEN t0.c45 WHEN t0.c56 THEN t0.c2 WHEN rt1.c0 THEN t0.c45 ELSE t0.c2 END COLLATE BINARY, ((TOTAL(rt1.c1))<=(((rt1.c2)*(t0.c1)))) FROM rt1;SELECT DISTINCT (((t0.c2))<=((CASE t0.c1  WHEN t0.c1 THEN rt1.c1 END))) FROM rt1, t0 WHERE ((((((('c8Ꝕ')AND(NULL)))OR('2017419099')))>=((- ('-2015147229'))))); -- 0ms;
SELECT ((t0.c56)>=((t0.c56 IN (rt1.c2)))), ((rt1.c0 IN ()) IN ()), ((((rt1.c2)%(t0.c1))) NOT BETWEEN (((((((((rt1.c2)OR(rt1.c2)))AND(t0.c0)))AND(t0.c1)))OR(t0.c1))) AND (((rt1.c2)LIKE(t0.c2)))) FROM rt1;SELECT DISTINCT (((((((((NOT (rt1.c0)))OR(((t0.c0)=(0X41285332)))))OR(((rt1.c0) NOT BETWEEN (t0.c2) AND (0xffffffffe80345c4)))))AND((((t0.c56, t0.c45, rt1.c2)) NOT BETWEEN ((t0.c0, rt1.c0, t0.c56)) AND ((t0.c2, t0.c45, t0.c0))))))OR(ABS(rt1.c0))) FROM t0, rt1 GROUP BY (- (json_type(t0.c45))), rt1.c2, CAST((((t0.c56)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS NUMERIC); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN t0.c1 THEN t0.c2 WHEN rt1.c0 THEN t0.c2 WHEN rt1.c1 THEN t0.c2 ELSE rt1.c0 END THEN t0.c56 COLLATE BINARY END, ((('re{Y4' COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c2 THEN t0.c0 WHEN t0.c45 THEN rt1.c0 END, (((rt1.c0, t0.c2, '-79580632'))<=((rt1.c0, rt1.c0, 1.698300101E9)))))>((((t0.c0)&(t0.c0)), UNICODE(rt1.c2), ((t0.c45) NOT NULL)))), (((rt1.c1) BETWEEN (t0.c0) AND (t0.c56)) IN ()) FROM rt1, t0; -- 0ms;
SELECT ALL LAST_VALUE((- (CASE t0.c2  WHEN t0.c45 THEN t0.c2 END))) OVER () FROM t0 WHERE (TYPEOF(DISTINCT (((0.6809811611558433)) BETWEEN ((0.7210059835575666)) AND ((x''))))); -- 0ms;
SELECT ALL TOTAL((+ (rt1.c0))) FROM rt1 GROUP BY (((((t0.c1)) NOT BETWEEN ((t0.c56)) AND ((rt1.c0)))) BETWEEN (((t0.c45) NOT BETWEEN (t0.c0) AND (t0.c45))) AND (((rt1.c1)-('-1283355725')))), (((t0.c1, rt1.c1, t0.c0)) NOT BETWEEN (((- (rt1.c2)), rt1.c0 COLLATE NOCASE, ((t0.c45) ISNULL))) AND ((CAST(t0.c2 AS REAL), ((t0.c0) NOT BETWEEN (rt1.c0) AND (x'9343')), (((t0.c0))!=((rt1.c1)))))), (((~ (t0.c45))) NOT NULL) HAVING SUM(LOWER(t0.c56) COLLATE RTRIM);SELECT ALL ROW_NUMBER() OVER () FROM rt1; -- 0ms;
SELECT ALL ((0.5231480077129333)OR(t0.c0 COLLATE RTRIM)), ((((+ (t0.c1)), GROUP_CONCAT(rt1.c1), ((t0.c2)||(t0.c2)), ((((((((rt1.c2)AND(rt1.c2)))OR(t0.c56)))OR(t0.c45)))AND(t0.c0)), DATE(rt1.c1, x'', t0.c45)))<>((((t0.c0) IS TRUE), ((((((((t0.c1)AND(t0.c1)))OR(t0.c0)))OR('1590665301')))OR(t0.c45)), json_insert(t0.c2, rt1.c1, rt1.c2, t0.c45, t0.c0), CASE t0.c2  WHEN t0.c56 THEN t0.c56 ELSE rt1.c1 END, rt1.c2))), (((t0.c45)) NOT BETWEEN ((((t0.c56) IS FALSE))) AND ((t0.c45))) FROM rt1, t0 WHERE (((((776157750) ISNULL))||((+ (0x7b4aae4e))))); -- 0ms;
SELECT ALL NULL, CASE WHEN CASE WHEN t0.c0 THEN rt1.c2 END THEN ((t0.c45)AND(rt1.c0)) END, ((t0.c1) IS FALSE) FROM t0, rt1; -- 0ms;
SELECT ALL (CASE t0.c56  WHEN t0.c45 THEN t0.c0 END IN ()) FROM t0, rt1 WHERE (load_extension(((x'0561')||(x'c21dfd12')), json_extract('0.829924790394947', x'')));SELECT (+ ((((NULL, rt1.c2, 'n'))<=(('0(^뽮>d', t0.c56, 1.671404458E9))))) FROM rt1;SELECT DISTINCT COALESCE(DISTINCT ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), ((t0.c45)|(t0.c2))) FROM t0 WHERE (((x'' COLLATE BINARY) IS TRUE)); -- 0ms;
SELECT CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 END THEN ((t0.c2)<=(rt1.c1)) ELSE MIN(rt1.c2) END FROM t0, rt1 INDEXED BY i6;SELECT ALL MIN(LENGTH(t0.c0)), CASE WHEN ((rt1.c2)!=(t0.c2)) THEN 0Xffffffffb4ebddc4 END, CASE t0.c56  WHEN t0.c1 THEN 0.8780227430055659 ELSE rt1.c0 END COLLATE BINARY FROM rt1 WHERE ((((((('')OR('1709790675')))OR('-1126906664')))<=('')));SELECT DISTINCT t0.c2 FROM t0; -- 0ms;
SELECT DISTINCT (('2070880039') NOT BETWEEN ((((t0.c45)) BETWEEN ((t0.c0)) AND ((t0.c56)))) AND (((t0.c1)LIKE(t0.c56)))) FROM t0 WHERE (((0.9608096218192378) IS TRUE)); -- 0ms;
SELECT ALL json_extract(SUM(rt1.c2), (0.5680085691583147 IN ())) FROM t0, rt1 INDEXED BY i6 ORDER BY (('-1735756715') NOT BETWEEN ((((t0.c1, t0.c2, t0.c56, t0.c45, rt1.c1)) NOT BETWEEN ((t0.c45, t0.c0, rt1.c2, t0.c56, t0.c0)) AND ((0x62913ebc, t0.c56, t0.c1, t0.c1, rt1.c1)))) AND (rt1.c0 COLLATE NOCASE)) DESC  NULLS FIRST;SELECT ALL (0.014549110619194505 COLLATE BINARY IN (((((rt1.c2)AND(rt1.c1)))OR(t0.c2)))) FROM t0, rt1 ORDER BY CASE WHEN (((t0.c1)) BETWEEN ((0.6134088467171297)) AND ((rt1.c2))) THEN rt1.c0 ELSE DATETIME(t0.c2, t0.c0, t0.c1) END; -- 0ms;
SELECT DISTINCT ((((((t0.c0) NOT BETWEEN (t0.c45) AND (t0.c2)))AND(((t0.c0)IS NOT(rt1.c2)))))OR(CAST(t0.c0 AS TEXT))) FROM t0, rt1; -- 0ms;
SELECT ((((CASE WHEN 0.7344147345753134 THEN x'8682' END)AND(rt1.c1)))AND(rt1.c0)) FROM t0 LIMIT -643796360 OFFSET 1933285504;SELECT ALL CAST(CASE t0.c2  WHEN t0.c45 THEN t0.c1 ELSE t0.c45 END AS NUMERIC) FROM t0, rt1 WHERE ((((x'')+(x'')) IN ())) LIMIT -1446482927 OFFSET -609922392; -- 0ms;
SELECT DISTINCT (+ (((rt1.c0)>=(t0.c1)))) FROM t0;SELECT ALL NTH_VALUE(CAST(CASE t0.c45  WHEN t0.c0 THEN t0.c1 END AS REAL), ((((rt1.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))-(rt1.c0))) OVER (), (((t0.c56)) BETWEEN ((((((NULL)AND(t0.c0)))AND(rt1.c1)))) AND (((rt1.c0 IN ())))), CAST((NOT (rt1.c2)) AS NUMERIC) FROM t0, rt1 ORDER BY ((((CASE x''  WHEN t0.c45 THEN t0.c56 ELSE t0.c45 END)OR((~ (t0.c2)))))AND(rt1.c2 COLLATE NOCASE))  NULLS LAST LIMIT 113242497;SELECT DISTINCT RANK() OVER (), ((((((t0.c0)IS(rt1.c0)))OR(((x'')AND(t0.c0)))))AND((~ (t0.c0)))), x'' FROM t0 RIGHT OUTER JOIN rt1 ON '1671404458' GROUP BY (((((rt1.c0)>(t0.c1))))=(((rt1.c0 IN ())))) HAVING ((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))&(((t0.c45) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) ORDER BY (- (((((((((t0.c56)AND(t0.c1)))OR(t0.c45)))AND(rt1.c0)))AND(rt1.c0)))); -- 0ms;
SELECT DISTINCT (~ ((((NULL, rt1.c1, t0.c0)) BETWEEN ((t0.c0, t0.c1, t0.c45)) AND ((t0.c45, t0.c56, t0.c0))))) FROM t0, rt1 WHERE (CAST(CASE WHEN 'qAyU,''Uo' THEN 0.4481543596797075 END AS INTEGER)); -- 0ms;
SELECT ALL CAST((('-1715564166')||(t0.c0)) AS BLOB) FROM t0; -- 0ms;
SELECT ALL (t0.c56 IN ()) COLLATE NOCASE FROM t0, rt1 WHERE ((~ (((x'') ISNULL)))); -- 0ms;
SELECT DISTINCT CASE rt1.c2  WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END ELSE TYPEOF(9.79503781E8) END FROM t0 LIMIT -1626465695 OFFSET 2147044631;SELECT LAST_VALUE(((CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)LIKE((- (rt1.c2))))) OVER ( ORDER BY t0.c1 COLLATE RTRIM ASC) FROM rt1 WHERE (((0X24d8059a IN ()) IN ((('QsD')IS(x'e4a5')))));SELECT DISTINCT (((((rt1.c2, rt1.c1, rt1.c0))>=((t0.c56, t0.c2, t0.c1))))<=(COALESCE(DISTINCT t0.c1, x''))) FROM t0, rt1; -- 0ms;
SELECT ((((((((((((t0.c56 COLLATE NOCASE)OR('-1424730532')))AND(GROUP_CONCAT(t0.c45))))OR((- (t0.c56)))))AND(TOTAL(t0.c1))))OR(GROUP_CONCAT(rt1.c2))))OR(((((rt1.c0)AND(t0.c1)))OR(rt1.c2)))), ((((0Xffffffffa168671e)AND(t0.c45))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))) AND (0.13995551424932873)), (((((('2119388374')AND(rt1.c2)))AND(t0.c0)))IS(UPPER(t0.c0))), ((CAST(t0.c1 AS TEXT))>(((rt1.c1) NOT BETWEEN (t0.c45) AND (t0.c0)))), GROUP_CONCAT(((((rt1.c2)AND(rt1.c2)))AND(t0.c1))) OVER () FROM t0;SELECT SUM(rt1.c1 COLLATE RTRIM COLLATE NOCASE) OVER () FROM rt1 WHERE ((- (((NULL)>(x'72c0'))))); -- 0ms;
SELECT DISTINCT CAST(('583249768' IN ()) AS REAL) FROM rt1, t0 WHERE (CAST(CAST(0.725593759447938 AS NUMERIC) AS REAL)); -- 0ms;
SELECT UNLIKELY(((t0.c45)AND(rt1.c1))) FROM t0 WHERE (((('' COLLATE NOCASE))<=((('_{C&!_䃢m' IN ())))));SELECT DISTINCT MAX(((t0.c1) BETWEEN (rt1.c1) AND (t0.c1))) FROM t0 WHERE ((~ ((- ('8\n')))));SELECT DISTINCT PERCENT_RANK() OVER () FROM t0, rt1 WHERE (((('&77!' IN ())) NOT BETWEEN ((('+de<')*(0.7265763709725399))) AND (CASE WHEN x'' THEN 0.7086783865891454 END))); -- 0ms;
SELECT ALL MAX((((t0.c2)) NOT BETWEEN ((t0.c45)) AND ((t0.c1)))), (~ (t0.c2)) COLLATE NOCASE, CASE (+ (t0.c45))  WHEN (t0.c0 IN (rt1.c2)) THEN t0.c45 END FROM rt1, t0 WHERE ((((0.30380701055630466 IN ())) BETWEEN (CAST(0.8017384275126337 AS BLOB)) AND ((~ (x'e63d'))))); -- 0ms;
SELECT ALL ((((t0.c45) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE((t0.c0 IN (rt1.c0, x'', rt1.c2)))) FROM t0 GROUP BY ((t0.c1)<<(rt1.c1)) COLLATE NOCASE, CAST(rt1.c0 COLLATE NOCASE AS TEXT), ((t0.c2 COLLATE RTRIM) NOT BETWEEN ((0Xffffffffcde7044f IN ())) AND (t0.c0 COLLATE BINARY)) LIMIT 947501932 OFFSET 1991309122;SELECT DISTINCT TOTAL(CASE WHEN rt1.c2 THEN '-1473022094' END) OVER () FROM rt1, t0 ORDER BY (TRIM(DISTINCT t0.c2) IN (((t0.c2) IS FALSE)))  NULLS FIRST, (NOT (rt1.c0)) COLLATE NOCASE DESC, (((t0.c45)LIKE(rt1.c1)) IN ()) DESC LIMIT 2042531899 OFFSET -1622779275; -- 0ms;
SELECT (((((((((((((rt1.c2 IN ()))OR('-881277647')))AND(CASE WHEN rt1.c1 THEN t0.c56 WHEN t0.c1 THEN rt1.c2 WHEN t0.c56 THEN rt1.c2 ELSE t0.c0 END)))OR(COUNT(*))))OR((((t0.c0))!=((rt1.c0))))))AND(CAST(t0.c1 AS NUMERIC))))AND((t0.c1 IN ()))), ((rt1.c2)<>(t0.c0)) COLLATE BINARY, ((t0.c45) IS FALSE) COLLATE NOCASE FROM t0, rt1 WHERE (CAST('>ncE!ch' AS BLOB)); -- 0ms;
SELECT ALL MAX((- (t0.c56))) FROM rt1, t0; -- 0ms;
SELECT ALL CASE WHEN ((rt1.c1)%(rt1.c2)) THEN (((NULL, rt1.c2, rt1.c2)) NOT BETWEEN ((NULL, rt1.c2, rt1.c1)) AND ((0.712835874272149, rt1.c0, t0.c56))) WHEN ('E8e4RnO_\n' IN ()) THEN (((t0.c2))<((t0.c56))) WHEN AVG(t0.c1) THEN rt1.c1 COLLATE NOCASE ELSE CAST(rt1.c0 AS TEXT) END, ((CAST('' AS REAL))!=(-684892142)), t0.c1 FROM t0;SELECT DISTINCT CASE WHEN CASE WHEN rt1.c1 THEN t0.c56 END THEN '-1931494368' ELSE CASE WHEN t0.c45 THEN t0.c1 END END FROM rt1 ORDER BY (((NULL))<>((t0.c1)))  NULLS LAST;SELECT ALL ((CASE rt1.c1  WHEN t0.c1 THEN NULL END)<=((NOT (rt1.c0)))) FROM rt1;SELECT ((((t0.c2)>(rt1.c2))) NOT NULL) FROM t0, rt1 WHERE ((((CASE NULL  WHEN x'3259' THEN NULL WHEN '-1848374749' THEN x'' WHEN -1.070068368E9 THEN NULL END))>=(((~ ('-103170240')))))); -- 1ms;
SELECT ((((t0.c1) NOTNULL))<>('-2030856571')) FROM t0 WHERE (((((((((((((IFNULL(0.12572215669068398, x''))OR(NULL)))OR((('1997607176')GLOB(0.6809811611558433)))))OR((x'' IN ()))))OR(CAST(x'' AS BLOB))))OR(x'149c')))AND(((NULL)IS NOT(-1735756715))))); -- 0ms;
SELECT DISTINCT ((((t0.c1)*(t0.c2)))IS NOT(((rt1.c0)>(t0.c2)))), COUNT(((rt1.c2)&(x''))) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND ((((rt1.c1) NOT NULL)) IS TRUE) PRECEDING EXCLUDE GROUP), 0.05663169782058086, (rt1.c1 IN ()) COLLATE RTRIM, CASE rt1.c0  WHEN t0.c1 THEN '1778696193' ELSE t0.c1 END COLLATE RTRIM FROM t0 GROUP BY ((((t0.c45)*(t0.c56))) NOT BETWEEN (((rt1.c2) ISNULL)) AND (CASE t0.c2  WHEN 'qayu,''uo' THEN rt1.c0 END)), ((rt1.c0) NOT BETWEEN (((t0.c45) NOT BETWEEN (t0.c56) AND (t0.c1))) AND (rt1.c0 COLLATE NOCASE)), ((rt1.c1)/(json_array(rt1.c1, t0.c1))) HAVING CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c1 THEN ((t0.c56)>=(t0.c1)) END;SELECT DISTINCT ((('1167927571')) NOT BETWEEN ((t0.c0)) AND ((t0.c1))) COLLATE BINARY FROM t0 WHERE (((JULIANDAY(x'20eb', x'', x''))+((('136237808')<(x'1372'))))); -- 0ms;
SELECT DISTINCT 0.22348332798235937 FROM rt1, t0; -- 0ms;
SELECT (((t0.c56))<=((t0.c56))) COLLATE BINARY FROM t0, rt1 WHERE (((-845864434 COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT CAST(((rt1.c0)>>(t0.c45)) AS INTEGER) FROM rt1;SELECT 1.14587342E9 FROM t0, rt1 GROUP BY (((t0.c0 IN ()))>(((t0.c45)>=(t0.c45)))); -- 0ms;
SELECT DISTINCT (NOT ((t0.c2 IN ()))) FROM t0 WHERE (CAST('-1232211975' AS TEXT)); -- 0ms;
SELECT DISTINCT ((((t0.c2)<<(t0.c45)))-(t0.c2)) FROM rt1, t0 WHERE ((((x'd75a' IN ())) NOT BETWEEN (NULL COLLATE RTRIM) AND ((NOT (NULL))))); -- 0ms;
SELECT DISTINCT t0.c1, CASE (t0.c1 IN ())  WHEN ((((((((rt1.c1)OR(t0.c0)))AND(rt1.c2)))AND(t0.c45)))AND(t0.c2)) THEN CASE WHEN rt1.c0 THEN -1.68070075E8 WHEN rt1.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN rt1.c1 THEN 0.7990975353579138 END WHEN t0.c2 COLLATE BINARY THEN ((rt1.c1)IS NOT('0.3252184157378015')) WHEN t0.c1 COLLATE RTRIM THEN t0.c2 END, (((((((((((t0.c0)) BETWEEN ((rt1.c2)) AND ((t0.c0))))OR(CAST(t0.c2 AS BLOB))))AND((((x'ed32'))==((t0.c2))))))AND(((rt1.c0) BETWEEN (t0.c45) AND (rt1.c0)))))OR(t0.c56 COLLATE RTRIM)) FROM t0, rt1 WHERE (((((((0.9066167261445849) NOT NULL))OR((('!([_i)!rλ')>('')))))OR(((x'') IS TRUE)))); -- 0ms;
SELECT DISTINCT 0.6917383150040478 FROM t0, rt1 WHERE ((((x'2e43')) NOT BETWEEN (('-508995658')) AND ((((2068491854) IS FALSE))))); -- 0ms;
SELECT ALL CAST((((rt1.c0)) BETWEEN ((t0.c45)) AND ((rt1.c0))) AS INTEGER) FROM rt1, t0 WHERE (CAST(((-1.263971036E9)&(0.49835745600826986)) AS TEXT)); -- 0ms;
SELECT ALL LAG(NULL, t0.c45, x'fca6') OVER () FROM t0 WHERE (((((x'')<=(x'')))=(IFNULL(DISTINCT x'', '84885313')))); -- 0ms;
SELECT ALL ((((((t0.c2) ISNULL))AND(SQLITE_VERSION())))AND((- (t0.c56)))) FROM rt1 WHERE (((CASE WHEN x'' THEN NULL WHEN '0.922214854336562' THEN x'7bc1' WHEN NULL THEN 0xffffffffc4945c9b ELSE '343256939' END) BETWEEN (((NULL) ISNULL)) AND (CAST(0.5954085077490435 AS REAL)))) LIMIT 1954754489 OFFSET 1669806100;SELECT (((((t0.c45) NOT BETWEEN (t0.c1) AND (t0.c0)), t0.c56 COLLATE BINARY, rt1.c0))>((IFNULL(DISTINCT rt1.c1, 0Xffffffffadbf7e60), (((t0.c0))<((t0.c0))), CHAR(t0.c0, '䃢&D*U0yo', t0.c1, rt1.c2, rt1.c1)))) FROM rt1;SELECT DISTINCT (('-150623934')=((~ (t0.c1)))) FROM rt1 LIMIT -502965819 OFFSET -26790329;SELECT DISTINCT ((((((((((((((rt1.c2)AND(t0.c0)))AND(t0.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(t0.c0)))>>(((((rt1.c0)OR(t0.c1)))OR(t0.c0)))) FROM t0, rt1 NOT INDEXED WHERE ((((NULL)) NOT BETWEEN ((0.7535464508234154)) AND ((LTRIM('%&'))))) ORDER BY (((- (t0.c56)))>>(((t0.c1) NOTNULL))); -- 0ms;
SELECT ALL CASE WHEN t0.c2 COLLATE NOCASE THEN t0.c0 WHEN x'431c' THEN ((rt1.c0) NOTNULL) WHEN (+ (rt1.c2)) THEN ((x'') BETWEEN (t0.c1) AND (rt1.c1)) END, t0.c0, NULL FROM rt1, t0 WHERE ((((0.14012752230802206)) BETWEEN (('99C2tF')) AND ((NULL))) COLLATE RTRIM); -- 0ms;
SELECT ALL CAST((rt1.c0 IN ()) AS REAL) FROM rt1, t0 WHERE (CAST(CAST(NULL AS TEXT) AS TEXT)) LIMIT 18479532; -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0)|(rt1.c0))) FROM rt1 WHERE (0.6580666693807178) LIMIT 1893102871;SELECT ALL GROUP_CONCAT((- (rt1.c1))) OVER (), (((CASE WHEN t0.c2 THEN rt1.c0 END))<>(((NOT (rt1.c2))))), ((MAX(t0.c2))>=(CAST(t0.c0 AS REAL))), rt1.c2, t0.c56 FROM rt1 GROUP BY ((rt1.c2 COLLATE BINARY)/(rt1.c2)) HAVING t0.c0 COLLATE BINARY;SELECT ALL ((rt1.c0 COLLATE RTRIM)<<(t0.c1)) FROM rt1, t0; -- 0ms;
SELECT ((CAST(t0.c0 AS BLOB))||(t0.c45)) FROM rt1 LIMIT -1217905493;SELECT DISTINCT LAST_VALUE((CASE x''  WHEN rt1.c2 THEN t0.c45 WHEN t0.c56 THEN t0.c2 WHEN t0.c56 THEN rt1.c0 END IN ((((rt1.c0, t0.c0, rt1.c2))<=((t0.c0, t0.c2, t0.c2))), LIKELIHOOD(rt1.c2, 0.8836955004937297)))) OVER () FROM t0, rt1 WHERE (((((x'')>(0.9912210618028419)))LIKE(((x'ee15') NOT NULL)))); -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c56 AS REAL) AS NUMERIC), t0.c56, ((t0.c56 IN (rt1.c0)) IN ()) FROM rt1, t0 WHERE ((((NULL, '-969807661', NULL)) NOT BETWEEN (((NULL IN ()), (((x'', NULL, 0.28671693276064525))==((x'a506', -2.1753789E8, -1.283355725E9))), TYPEOF(DISTINCT 0x413700ba))) AND ((CASE ''  WHEN NULL THEN NULL ELSE x'' END, json_quote(0Xffffffffa6f3af01), (((0xffffffffe5c255d9, 0.4643372578246623, 25096307))<(('.421n', 'f匲x', 0X42f3a356))))))); -- 0ms;
SELECT DISTINCT CASE rt1.c1 COLLATE NOCASE  WHEN ((t0.c45)>>(t0.c45)) THEN CASE WHEN t0.c45 THEN t0.c1 END END, ((0.5225048047873772)/(COUNT(rt1.c0))), COUNT(*) OVER (), (((((rt1.c0))>((t0.c56))))>>(((x'')/(rt1.c1)))), COUNT(t0.c2) OVER ( ORDER BY CAST(0x123e37e AS NUMERIC)  NULLS FIRST) FROM t0, rt1 GROUP BY CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c56 ELSE t0.c0 END AS INTEGER), QUOTE(((((t0.c45)OR(t0.c56)))AND(rt1.c1))), 0.03676189324815082; -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT AVG(CAST(t0.c2 AS INTEGER)) FROM t0, rt1 WHERE (((((((-1.283355725E9) NOT NULL))AND(('rP?' IN ('139113385', 0Xffffffffb0efe166)))))AND((((NULL)) BETWEEN ((x'da5f')) AND (('-1185595252')))))); -- 0ms;
SELECT ALL rt1.c1 FROM rt1, t0 WHERE (CAST(CASE WHEN '0.13485131516863869' THEN NULL WHEN 0.46004058566053196 THEN x'' WHEN NULL THEN NULL ELSE 0.46261292866929205 END AS INTEGER)) GROUP BY (+ (rt1.c0)) COLLATE RTRIM, ((((((t0.c2)AND(rt1.c0)))OR(t0.c0))) NOT BETWEEN (((((t0.c45)AND(t0.c2)))OR(t0.c45))) AND (NULL)), t0.c2 HAVING AVG(((((rt1.c0)AND(t0.c2)))AND(t0.c45))); -- 0ms;
SELECT DISTINCT MAX(((t0.c45) NOTNULL)) FROM rt1, t0 GROUP BY (((((t0.c2) NOT BETWEEN (0.041136771516466664) AND (rt1.c1))))<=(((t0.c2 IN ())))), ((((x'') ISNULL))IS(t0.c2)), 625923754 HAVING x'd9d5';SELECT ALL (((rt1.c0)<<(t0.c2)) IN (((((((((t0.c45)AND(rt1.c0)))OR(t0.c56)))AND(t0.c0)))OR(t0.c0)))) FROM t0;SELECT ALL (- (x'')), COALESCE(DISTINCT CAST(t0.c56 AS BLOB), ((rt1.c2)IS NOT(t0.c45))), ((CAST(t0.c45 AS NUMERIC)) ISNULL), MIN(CASE WHEN t0.c0 THEN t0.c2 ELSE rt1.c0 END COLLATE NOCASE), x'' COLLATE NOCASE FROM rt1 WHERE (CASE WHEN ((NULL) BETWEEN (x'') AND ('2117455033')) THEN CASE 0.4987893770592361  WHEN x'd2edafa8' THEN NULL END END);SELECT DISTINCT ((((((((((rt1.c0)OR('960524261')))OR(((rt1.c1)>(NULL)))))AND(t0.c2 COLLATE NOCASE)))OR(t0.c45)))AND((((t0.c1, rt1.c2, t0.c2, t0.c56, rt1.c1))<>((rt1.c1, t0.c45, t0.c2, t0.c1, t0.c0))))) FROM t0, rt1 WHERE ((+ (((((((((0x3eed2d40)OR(569813188)))OR('/')))AND(NULL)))OR('}B9'))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c56) NOTNULL) THEN t0.c45 COLLATE RTRIM WHEN (t0.c56 IN ()) THEN ((rt1.c1)||('⃦79hP')) WHEN '-217537890' THEN ((t0.c2)<(t0.c0)) END FROM t0 WHERE ((((NULL)>=('ZK')) IN ()));SELECT ALL CASE WHEN '-912687725' THEN ((t0.c1) NOT NULL) WHEN '1011507841' THEN ((0.09419002687659672)<=(rt1.c1)) WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE rt1.c0 END THEN ((t0.c1)<(rt1.c0)) ELSE ((t0.c1) NOTNULL) END, ((t0.c56)<=(t0.c2)) COLLATE BINARY, ((rt1.c0) NOT BETWEEN (t0.c2) AND (rt1.c1)) COLLATE RTRIM FROM t0 WHERE (((('li漢')) BETWEEN ((('avK-np|' IN (NULL, 'CᢒeT')))) AND (((- ('639849365'))))));SELECT ((((COUNT(rt1.c0))AND((t0.c0 IN (t0.c2)))))AND(CAST(t0.c0 AS BLOB))) FROM rt1 WHERE ('1698300101');SELECT DISTINCT (CASE rt1.c0  WHEN t0.c45 THEN rt1.c0 END IN ()), (~ (((rt1.c0) NOT BETWEEN (t0.c56) AND (t0.c45)))), (((t0.c45)) NOT BETWEEN (((((t0.c2))=((x''))))) AND ((((t0.c56) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) FROM rt1, t0 WHERE ((((NOT (0X50831730)))>>(((NULL) IS TRUE)))); -- 0ms;
SELECT ALL (NOT (rt1.c0 COLLATE RTRIM)), x'', (NOT ('')) COLLATE RTRIM FROM t0, rt1 WHERE (((CASE x''  WHEN '}sJ4/J怢Ka' THEN '' WHEN '?F' THEN 0.5772815492947506 WHEN '' THEN NULL ELSE 0.7569643888369589 END)IS NOT(0.4313187922482391))); -- 0ms;
SELECT DISTINCT MAX(726146804) FROM t0, rt1 LIMIT 1717723141; -- 0ms;
SELECT AVG(MAX(rt1.c1 COLLATE RTRIM)) FROM rt1;SELECT ((((((((((((((((NULL)OR(rt1.c2 COLLATE BINARY)))OR(((rt1.c2) BETWEEN (t0.c56) AND (t0.c2)))))OR(MAX(t0.c45, t0.c45))))AND(((t0.c2)<=(rt1.c1)))))AND(2029314439)))AND((rt1.c2 IN ()))))AND(highlight(rt1.c2, rt1.c2, t0.c2, t0.c56))))OR(COUNT(t0.c45))) FROM t0 WHERE (CASE (~ (0.02316064046150712))  WHEN (~ (0X23a86345)) THEN ((x'')AND(0Xffffffffd2afe227)) WHEN (NULL IN ()) THEN CASE NULL  WHEN ')h(h' THEN NULL ELSE 0.013271944475066522 END WHEN ((('', 0.7586893103389671, 'R5&zo#G2L')) NOT BETWEEN ((x'7bab', NULL, '2122739395')) AND (('', 0.7384013575785012, '373206894'))) THEN (('-595684571') NOT BETWEEN (0.017496732191657483) AND ('\r_yXb')) ELSE highlight(0X378798bb, '-1481132589', 0xffffffffb4c44e3b, -956787116) END);SELECT ALL ((t0.c1 COLLATE NOCASE) IS FALSE), (((((rt1.c0)AND(t0.c2)))OR(rt1.c0)) IN ((((t0.c45, t0.c56, t0.c2)) NOT BETWEEN ((x'0055', t0.c1, rt1.c1)) AND ((0xffffffffe13bdc70, rt1.c2, t0.c1))))), ((rt1.c0)GLOB(t0.c2)) COLLATE NOCASE FROM t0, rt1 WHERE (((x'' COLLATE RTRIM)*(((((0.36766864825605483)AND(0.9540927821849701)))OR(x'a6b5935c'))))); -- 0ms;
SELECT DISTINCT t0.c56, ((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)) COLLATE RTRIM, ((((CASE rt1.c1  WHEN rt1.c1 THEN t0.c0 END)AND(((rt1.c1) IS TRUE))))AND((- (t0.c1)))) FROM t0 ORDER BY ((((rt1.c1) BETWEEN (t0.c56) AND (t0.c1))) BETWEEN (CAST(t0.c45 AS INTEGER)) AND (CAST(rt1.c0 AS TEXT))) ASC, ((t0.c45)>=(rt1.c2)) COLLATE RTRIM  NULLS FIRST, (~ (DATE(rt1.c0, 0.4367418671179232, rt1.c0)));SELECT ALL TYPEOF((t0.c2 IN ())) FROM t0, rt1; -- 0ms;
SELECT DISTINCT (((+ (t0.c56))) NOT BETWEEN (CASE WHEN t0.c0 THEN rt1.c0 END) AND (t0.c45 COLLATE BINARY)) FROM t0, rt1 WHERE ((- (CAST('r3''[P{' AS BLOB)))); -- 1ms;
SELECT DISTINCT (((t0.c0, t0.c45, t0.c0)) NOT BETWEEN ((t0.c1, rt1.c1, t0.c2)) AND ((t0.c0, rt1.c1, t0.c2))) COLLATE BINARY FROM rt1;SELECT TOTAL(((rt1.c1)-(x''))), (((((t0.c1)*(rt1.c2))))=((json_valid(rt1.c0)))), ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (t0.c2))) NOT BETWEEN (((('''VRol*o'))!=((t0.c56)))) AND (COALESCE(t0.c45, t0.c45))) FROM rt1, t0; -- 0ms;
SELECT ((COUNT(*))GLOB(x'')) FROM rt1 WHERE (x''); -- 0ms;
SELECT t0.c1 FROM t0 WHERE (((((7.05802538E8)AND(-8.40498097E8)))GLOB(NULL))); -- 0ms;
SELECT ALL (((rt1.c2)) NOT BETWEEN ((CASE t0.c0  WHEN rt1.c0 THEN rt1.c2 WHEN t0.c56 THEN rt1.c0 WHEN t0.c0 THEN rt1.c0 WHEN t0.c56 THEN rt1.c2 WHEN rt1.c2 THEN NULL ELSE t0.c56 END)) AND (((((rt1.c0, t0.c2, rt1.c1)) BETWEEN ((t0.c45, t0.c2, x'')) AND ((t0.c45, t0.c56, t0.c56)))))), NTILE((((t0.c1)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((t0.c1) BETWEEN (rt1.c0) AND (t0.c45)))))) OVER (), '443508726' FROM t0, rt1; -- 0ms;
SELECT SUM(CASE WHEN rt1.c2 THEN t0.c1 END) FROM rt1, t0 WHERE (((CASE WHEN x'838e' THEN 'DVU' WHEN x'' THEN x'' WHEN x'' THEN NULL ELSE 0.5289862912609707 END)LIKE(((NULL)AND(x''))))) ORDER BY t0.c0; -- 0ms;
SELECT DISTINCT CAST(((t0.c45) BETWEEN (t0.c1) AND (rt1.c1)) AS REAL), CASE (('406053858')LIKE(t0.c0))  WHEN ((rt1.c2) NOTNULL) THEN NULLIF(DISTINCT t0.c56, t0.c2) END, (((+ (rt1.c1)))!=(((rt1.c1) BETWEEN (t0.c1) AND (rt1.c2)))) FROM rt1, t0; -- 0ms;
SELECT (((((('')AND(rt1.c0)))AND(rt1.c0))) IS FALSE) FROM t0;SELECT DISTINCT ((t0.c1 COLLATE BINARY) NOT BETWEEN (164550685) AND (COUNT(*))), ((t0.c45)<<((- (t0.c2)))), ((((((((CAST(t0.c1 AS BLOB))OR(UNLIKELY(rt1.c0))))AND(rt1.c0)))AND(PRINTF(NULL, rt1.c1, t0.c2))))OR(NULLIF(DISTINCT rt1.c0, rt1.c2))) FROM rt1 WHERE (json_array_length(((((((((x'')OR(x'6cd0')))OR(0.45912996583821564)))OR(x'')))OR('')))) ORDER BY ((((((rt1.c1)&(t0.c56)))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)))OR(((t0.c56) BETWEEN (t0.c1) AND (t0.c45))));SELECT DISTINCT (((t0.c0 IN ())) IS FALSE) FROM rt1; -- 0ms;
SELECT ALL TOTAL(rt1.c0) FROM rt1, t0 WHERE (UPPER((((NULL, 1540535540, NULL))<((x'685a', 0.35391699825902967, 0.7887799628552314))))) LIMIT 948648227; -- 0ms;
SELECT DISTINCT t0.c0 FROM rt1, t0 WHERE (((('1145873420', 2132212779, NULL)) BETWEEN (((('')LIKE(x'')), ((0.0617640457663543) IS FALSE), ((x'') NOT BETWEEN (x'') AND (-1.626465695E9)))) AND ((((0.6234971674452442)==(NULL)), x'' COLLATE BINARY, (('#襃5)*{B')>>(x'')))))); -- 0ms;
SELECT ALL (- (((t0.c1) NOT BETWEEN (rt1.c2) AND (t0.c56)))), ((((rt1.c0 COLLATE BINARY)AND((~ (t0.c0)))))AND(rt1.c1 COLLATE RTRIM)), (((+ (rt1.c1)))<=(UNLIKELY(DISTINCT t0.c45))) FROM rt1 NOT INDEXED, t0 LIMIT -1263971036 OFFSET 2068491854; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS REAL))IS(((((t0.c56)OR(t0.c56)))OR(t0.c2)))), LAST_VALUE(((t0.c1)-(t0.c1)) COLLATE NOCASE) OVER (), NULL FROM t0, rt1 LIMIT -509278234 OFFSET -2123824453; -- 0ms;
SELECT DISTINCT ((((rt1.c1)>>(t0.c1))) BETWEEN (((t0.c45)<(t0.c2))) AND (((t0.c0) IS FALSE))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT x'' FROM t0 WHERE (((((x'')<=(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0; -- 0ms;
SELECT UPPER(((rt1.c0) IS TRUE)) FROM t0 WHERE (CASE 0.34247689690199123 COLLATE NOCASE  WHEN '0.5022095750832037' COLLATE NOCASE THEN ((NULL) IS TRUE) END) GROUP BY (((t0.c0 IN ()))*(CASE rt1.c0  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)), ((CAST(t0.c0 AS REAL))IS NOT(rt1.c1)), ((t0.c45)OR(rt1.c0)) COLLATE NOCASE;SELECT DISTINCT 0.07526857038118395 FROM t0 UNION SELECT 0.10718378915500315 FROM t0 WHERE ((((0.8482035655649554)<=('1-500000')) IN ())); -- 0ms;
SELECT NTILE(((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))*(CASE WHEN '1778696193' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN x'' THEN rt1.c0 ELSE rt1.c1 END))) OVER (), (((t0.c56 IN ()))OR((t0.c45 IN ()))), ((((((t0.c0)OR(t0.c2)))AND(0X7fcddf08)))AND((((rt1.c1)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))) FROM rt1 ORDER BY (((((NOT (t0.c45)))AND((((t0.c0))<=((t0.c56))))))AND(t0.c1)) DESC;SELECT DISTINCT ((((t0.c1 COLLATE NOCASE)AND(AVG(NULL))))AND(((t0.c1)LIKE(0.7774441981533734)))) FROM t0 WHERE (((CAST(0.08631133666687396 AS NUMERIC))%((1.882167258E9 IN ())))) GROUP BY (((((rt1.c1)) NOT BETWEEN ((t0.c45)) AND ((x''))))||(((t0.c0)==(rt1.c2)))), ((t0.c2)LIKE(rt1.c0)) COLLATE RTRIM, ((t0.c45)OR(rt1.c2)) COLLATE BINARY HAVING ((((NULL)GLOB(t0.c45)))>>(t0.c1 COLLATE BINARY));SELECT DISTINCT rt1.c2, 0.10222135901463747, (((x'' IN ())) BETWEEN (SQLITE_VERSION()) AND ((((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c56))))) FROM t0, rt1 WHERE (((TRIM(DISTINCT 'k蝆p|-]V᜴'))==(CASE WHEN x'bdf7' THEN 0.9676760365688916 ELSE NULL END))); -- 0ms;
SELECT COUNT(*) FROM rt1; -- 0ms;
