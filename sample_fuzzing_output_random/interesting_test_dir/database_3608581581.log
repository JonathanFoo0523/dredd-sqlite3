-- Time: 2024/06/07 07:00:56
-- Database: database81
-- Database version: 3.40.0
-- seed value: 3608581581
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c1) VALUES (-2136177586), (NULL), ('-2136177586'); -- 0ms;
INSERT OR FAIL INTO rt1(c0) VALUES (-2.136177586E9), (0.691173943080531), (x''); -- 1ms;
INSERT OR ABORT INTO rt0 VALUES ('', -2.136177586E9, x'0482'); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA default_cache_size = -1612928565; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
INSERT OR ROLLBACK INTO rt1 VALUES ('\n{* c', 0.8093381063990394, '-1321962796'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2) VALUES (x'edec', 0.9510750362779555); -- 0ms;
UPDATE OR FAIL rt0 SET c1=NULL; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum(-1442489136); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1612928565 noskipscan'); -- 0ms;
PRAGMA optimize; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA mmap_size = -3645936142606804549; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=NULL; -- 0ms;
DELETE FROM rt0 WHERE 0.24687262498566476; -- 0ms;
REINDEX; -- 0ms;
DROP TABLE IF EXISTS rt1; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (x''); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL), (x'47d7'), (''); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (NULL), (0.9510750362779555), (x''), (NULL), (x'58e2'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (0xffffffffb13472d4), ('527734170'), ('{e峐^w%G'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('', '1413469851', 0.6917260418722515); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-1675790338' WHERE LIKELY(((rt0.c2)<=(rt0.c0))); -- 0ms;
REINDEX RTRIM; -- 0ms;
PRAGMA cache_size; -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA locking_mode; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE ((- (rt0.c0)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1442489136') NOTNULL)) NOT BETWEEN ((+ ('d('))) AND (NULL COLLATE RTRIM)); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c2)=(-1.646947432E9, x''); -- 1ms;
PRAGMA cache_spill = false; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA cache_spill = 7388044486009851289; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES (NULL, NULL, x'85a4'); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c4, c2, c3) VALUES (x'20b4e4fd', x'e5b3', '-956911349', x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c4, c3) VALUES (NULL, NULL, ''), (x'', 0.901472875607577, 0.13588546172841343), (x'ac55', 0.3432686716026947, NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt1(c4, c1, c3, c2) VALUES (x'', x'e608', '964765418', ''); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (0.5139291576737153, x'c7c3', x'', 0.22422209588575304, -948185552); -- 0ms;
INSERT OR ROLLBACK INTO rt1 VALUES (x'', NULL, -1612928565, x'', 0.4918610674345081); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c2, c0, c1) VALUES ('1e500', 0.7819532531565033, 0.6917260418722515, 'rm}[B3FGu'); -- 0ms;
INSERT OR FAIL INTO rt1(c4, c1, c3, c0) VALUES (x'46aa', 've', 0.1929824288937816, NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('', NULL, x'')) NOT BETWEEN (('aLP栄B', 0.13588546172841343, x'')) AND ((x'', '[楛p[M', '-948185552'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x'75ba'); -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (0.10437423926893907, x'f0de'); -- 0ms;
PRAGMA cache_size; -- 0ms;
COMMIT; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0, c2) VALUES (x'', x'', '-2136177586'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.17973547993295458, NULL), (0xffffffffb13472d4, NULL), (NULL, -1667463343); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA temp.cache_size = -8286294036292898258; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c2) VALUES (NULL, -1.574934181E9); -- 0ms;
PRAGMA locking_mode; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES ('-1744875604', -1.321962796E9); -- 0ms;
UPDATE rt1 SET c2=0.41419547627747566, c1=NULL, c0=0.7927127808356431; -- 0ms;
UPDATE rt1 SET (c3)=(x'20c4') WHERE (((rt1.c3) IS TRUE) IN ()); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (x'', NULL, x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c3) VALUES ('.|BF耞-a', 0.462131996323787), (0.1508235317373291, NULL), ('', '{ub>Y|v??'), (0.46095376528529697, '-729407085'), ('rm}[B3FGu', x''); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL ((((((rt0.c1) NOTNULL))OR(rt0.c2)))OR(rt1.c2)) FROM rt1 WHERE (((x'') NOTNULL)) GROUP BY x'' COLLATE BINARY;SELECT LAST_VALUE(rt0.c2) OVER (), (((((rt1.c4))>((rt1.c1)))) NOT BETWEEN (((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c4))) AND (TYPEOF(DISTINCT rt0.c2))), (- (rt0.c0 COLLATE RTRIM)) FROM rt0 WHERE (((((0.8557143182103597) NOT BETWEEN (0.29541811078219193) AND (0.5924489384110243))) BETWEEN (((NULL) NOT NULL)) AND (((0Xffffffffa220695b)<=(x'')))));SELECT DISTINCT TOTAL(CAST(rt1.c0 AS BLOB)), x'', (((rt1.c2))>((((((rt0.c1)AND(rt1.c2)))AND(rt1.c2))))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) IS FALSE) AS BLOB), NULL, ((((NOT (rt0.c2))))>=((rt0.c1 COLLATE RTRIM))), (((rt1.c1 IN ()))%(AVG(rt1.c0))), ((COUNT(*))&(NULL)) FROM rt1, rt0 WHERE (((0.10437423926893907)GLOB(CAST('rm}[B3FGu' AS REAL)))); -- 0ms;
SELECT ALL CASE rt1.c0  WHEN rt0.c1 THEN 0.8084362556618363 END COLLATE NOCASE FROM rt1, rt0 LIMIT -1442489136 OFFSET 1459061022; -- 0ms;
SELECT ALL SUM((rt0.c0 IN ())) OVER () FROM rt1 WHERE ((NOT (0.42346166430114207)) COLLATE NOCASE) ORDER BY LTRIM((+ (rt0.c0)), rt1.c0);SELECT CAST(('[楛p[M' IN ()) AS REAL), NULLIF(((x'14cb')<=(rt1.c3)), (((rt1.c2))<=((rt1.c3)))), ((((rt1.c4)OR(rt1.c2)))OR(rt1.c2)) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT ALL SUM(HEX(rt0.c1)) OVER () FROM rt0 ORDER BY 0.7819532531565033 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((0.34100349262325136 IN ())) BETWEEN (UNLIKELY(rt0.c2)) AND (rt0.c1)) FROM rt1 WHERE ((+ ((0.8467592036251043 IN ())))) GROUP BY CASE (- (rt0.c1))  WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c0 AS BLOB) WHEN (((rt1.c4)) BETWEEN ((rt0.c1)) AND ((rt1.c3))) THEN ((rt1.c4)>(rt0.c0)) WHEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c4)) THEN ((rt1.c4)IS NOT(rt1.c4)) END;SELECT ((NULLIF('1413469851', 'kDqw!')) BETWEEN (MIN(rt1.c3)) AND (CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt0.c1 THEN NULL ELSE rt1.c2 END)), ((((CASE rt1.c3  WHEN rt1.c4 THEN '^?' ELSE rt0.c0 END)OR(ABS(DISTINCT rt1.c3))))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt0.c0)))), (CAST(rt0.c0 AS BLOB) IN ()) FROM rt1 WHERE ((CASE WHEN NULL THEN x'' ELSE '527734170' END IN ())) LIMIT 1774179911;SELECT ALL json((((rt1.c3, rt1.c3, NULL)) NOT BETWEEN ((rt0.c1, rt1.c4, rt1.c2)) AND ((rt1.c4, rt0.c0, rt0.c0)))) FROM rt0, rt1 NOT INDEXED WHERE (('-956911349' IN (((x'') NOTNULL)))); -- 7ms;
SELECT ALL ((rt0.c1) NOT NULL) FROM rt1;SELECT CAST(((0xffffffffb13472d4)<(rt1.c3)) AS BLOB) FROM rt0, rt1 LIMIT -257453211 OFFSET 1413469851; -- 0ms;
SELECT ALL (((rt1.c0)) BETWEEN ((((rt1.c1)AND(rt0.c2)))) AND (((((rt0.c1, rt1.c4, '1774179911'))<((rt1.c0, rt1.c0, rt1.c1)))))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (~ ((rt0.c2 IN ()))) FROM rt1 WHERE (0.02196791930839359 COLLATE BINARY) GROUP BY LAST_INSERT_ROWID(), rt1.c2, ((((((rt1.c0)-(rt1.c1)))OR(rt1.c2 COLLATE NOCASE)))OR(((rt0.c2) IS TRUE)));SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))/((rt1.c0 IN ()))) FROM rt1 WHERE (((x'a2ad' IN ()) IN ())) LIMIT -850432043 OFFSET 495391948;SELECT 0.7927127808356431 COLLATE BINARY FROM rt0 WHERE (((CAST(0.439166034054563 AS INTEGER)) NOT BETWEEN (((-1.744875604E9) BETWEEN (NULL) AND (x''))) AND (((x'') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL))*(LIKELIHOOD(rt0.c1, 0.7060584237257198))) FROM rt0, rt1 WHERE ((((((0xffffffff960321ca))<=(('-257453211')))) BETWEEN ((NULL IN (x''))) AND ((('0.46095376528529697')<<(1129564627))))) GROUP BY ((rt1.c3)%(rt0.c1)) COLLATE NOCASE HAVING HEX(DISTINCT (('')=(rt0.c0))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(GROUP_CONCAT(rt1.c0), 0.8233221953368769), CAST((((rt0.c0))<>((rt1.c3))) AS TEXT), LEAD(NULL, (('') BETWEEN ((((rt0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, x'25e3', rt0.c1, rt1.c4, rt1.c0)) AND ((rt0.c0, rt0.c1, rt0.c1, rt1.c1, rt1.c3)))) AND (((rt1.c1) ISNULL))), TYPEOF(((rt0.c2) IS TRUE))) OVER () FROM rt0, rt1; -- 1ms;
SELECT ALL NULLIF(COUNT(*), x'e796'), ((((rt1.c2)<('re↓sH1'))) NOTNULL), ((((NULL)>>(rt0.c1)))IS NOT(CASE WHEN rt0.c1 THEN NULL WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c1 END)), ((((rt1.c0)==(rt1.c3)))+(((rt1.c2)>>(rt0.c2)))), (((CASE WHEN rt1.c0 THEN rt0.c1 ELSE 0.9587210539739713 END))!=(((rt1.c2 IN (x'849d'))))) FROM rt1, rt0 WHERE (((((((x'9169')AND('+a')))OR(0.7704611214450147)))<>(((1.129564627E9) NOT BETWEEN ('-719353915') AND (0.7372537146065229))))) GROUP BY ((((((((((((((rt1.c2)-(rt0.c2)))AND(0.20415576465130258)))AND(((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c1)))))AND(CASE rt1.c4  WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END)))AND(CAST(0Xffffffffcd4f6fd5 AS REAL))))OR(0.9195260617004409)))OR((rt0.c2 IN (rt0.c1, rt0.c1)))); -- 0ms;
SELECT COUNT(*), LAG(CASE ((rt1.c4) IS FALSE)  WHEN ((NULL)|(rt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN (NOT (rt1.c0)) THEN 0.15632681166500717 COLLATE NOCASE WHEN (rt1.c1 IN ()) THEN (rt1.c2 IN ()) END, TRIM(DISTINCT CAST(rt1.c1 AS BLOB)), ((rt1.c3) NOT NULL)) OVER (), COUNT(MAX(((((NULL)AND(rt0.c2)))OR(rt1.c3)))) FROM rt1;SELECT ALL ((((rt0.c2 COLLATE RTRIM)OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(((rt1.c1)GLOB(NULL)))), CASE WHEN NULL THEN x'' END, COALESCE(DISTINCT (rt1.c1 IN ()), (rt1.c3 IN ())) FROM rt1, rt0 WHERE (CASE 0.4244218816120101  WHEN NULL THEN '878922488' WHEN 'd(' THEN x'' WHEN x'4be3' THEN 0.47189772236776373 END COLLATE BINARY); -- 0ms;
SELECT ((MAX(rt0.c2)) IS TRUE), (((((((((rt1.c0)AND(rt1.c4)))OR(rt0.c0)))AND(rt1.c0)))OR(rt0.c1)) IN ()), json_remove((((rt1.c4, rt1.c3, rt1.c3))=((rt0.c0, rt0.c0, '-1574934181'))), 0.8011853007782089), ((((json_valid(rt1.c3))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))AND(rt0.c0)), TOTAL(((rt0.c0)%(rt1.c1))) OVER () FROM rt0 WHERE ((+ (x'' COLLATE NOCASE)));SELECT rt1.c4 COLLATE BINARY FROM rt1, rt0 WHERE ((((NULL IN (0.901472875607577, -1.321962796E9))) IS TRUE)); -- 0ms;
SELECT ALL ((COUNT(rt0.c0))IS NOT(CASE rt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)), NULL, (((rt1.c3))<(((((rt0.c1))<((rt1.c0)))))) FROM rt0, rt1 WHERE (((((x'4e59')IS NOT(-889484833))) IS TRUE)); -- 1ms;
SELECT ALL (rt0.c2 IN (rt1.c3)) COLLATE RTRIM FROM rt1, rt0 WHERE (((json_quote(NULL)) NOT BETWEEN (((0.42438444435187794) NOT BETWEEN ('-1999194788') AND (0.18335182374606507))) AND (((((0.6483925009856836)AND(0.058148427781778866)))AND(''))))) GROUP BY ((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c1))) IS FALSE); -- 0ms;
SELECT DISTINCT (COUNT(rt0.c1) IN (rt1.c4)) FROM rt1 WHERE ((((NULL) NOT NULL) IN ()));SELECT ALL NTH_VALUE((((NOT (NULL))) NOT NULL), (((JULIANDAY(NULL, rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c1)))<>((PRINTF(rt0.c2, rt0.c0, rt0.c0))))) OVER () FROM rt0;SELECT DISTINCT CAST(CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 END AS NUMERIC), COUNT(*), rt1.c1 FROM rt0 WHERE (((HEX(NULL))IS((+ (x''))))) GROUP BY CAST(rt1.c3 AS REAL), (~ ((rt1.c1 IN (rt1.c4)))), ((rt0.c0 COLLATE BINARY)<((- (rt1.c4)))) HAVING x'';SELECT DISTINCT CAST((((rt1.c4, rt1.c2, rt0.c1))>((rt1.c1, 0.17973547993295458, rt1.c0))) AS BLOB), rt0.c0, (((((0.012656564818762095))>=((rt1.c2)))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c0)))) AND (((rt0.c2)IS(rt0.c2)))) FROM rt1, rt0 UNION SELECT DISTINCT SUM(((((rt0.c2)OR(rt1.c0)))OR(rt0.c1))), COUNT(((rt1.c4) BETWEEN (rt0.c1) AND (rt1.c3))) OVER ( ORDER BY ((((x'') NOTNULL))||(((x'82ca') NOT NULL)))  NULLS LAST, (- (CAST(rt1.c2 AS INTEGER)))), ((((rt0.c1) IS FALSE))>(COUNT(*))) FROM rt1;SELECT ALL LTRIM(rt0.c0, rt1.c3) COLLATE BINARY FROM rt1;SELECT DISTINCT rt1.c2 FROM rt1, rt0 WHERE (CAST((('-159224844') BETWEEN ('%Dj*f') AND (x'')) AS TEXT)); -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt1; -- 1ms;
SELECT ((((rt1.c1)<(rt1.c2)))=((((rt1.c0, '?-*䵅zZv', rt1.c0))<>((rt1.c2, rt1.c2, rt0.c0))))) FROM rt1;SELECT DISTINCT (((rt1.c1)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((COUNT(*)))), ((((rt1.c1)/(rt1.c1))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (SUM(rt1.c2))), ((CAST(rt1.c2 AS TEXT)) ISNULL) FROM rt1, rt0 WHERE (((((0.23109502091212264) NOT BETWEEN (NULL) AND (0X1d8714cc)))||((('a1') IS FALSE)))); -- 0ms;
SELECT DISTINCT (- ((((rt0.c1, x'', rt1.c1)) NOT BETWEEN ((rt0.c1, NULL, rt1.c4)) AND (('-1185800204', rt1.c3, '[跉(a'))))), (((rt1.c2) NOT BETWEEN ('䫸 ,?EE') AND (rt1.c3)) IN (LOWER(rt0.c0))), ((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(x'')))AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c3)))>=('550052134')) FROM rt1 WHERE (((NULL) NOT BETWEEN (1990860523) AND (3.04215002E8)) COLLATE BINARY) ORDER BY ((rt1.c3) BETWEEN (((((rt1.c4)OR(rt1.c1)))AND(rt1.c4))) AND (CAST(rt1.c3 AS BLOB)));SELECT DISTINCT COUNT(((((rt1.c3)OR(rt1.c3)))OR(rt0.c0))), '865620227' COLLATE NOCASE, (((((rt1.c2)*(rt1.c4))))<=((((rt0.c0) BETWEEN ('-1755019087') AND ('335194003'))))) FROM rt0 WHERE ((NOT (LIKE(0.3326790345003281, 'I࠲f', 'g'))));SELECT (+ (DATE(rt0.c0, 0X631d1f0b, rt0.c2))) FROM rt0, rt1 WHERE ((((((0Xffffffff944888a2) ISNULL)))<=((CASE WHEN 0.5625378087410702 THEN 'd?' WHEN x'' THEN 'r/' WHEN NULL THEN 0xffffffff960321ca ELSE NULL END)))); -- 0ms;
SELECT '-1510995148' FROM rt0; -- 0ms;
SELECT DISTINCT SUM(CAST(rt1.c4 AS INTEGER)) OVER ( ROWS  UNBOUNDED PRECEDING) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT NULL) IN (rt0.c0)) FROM rt1;SELECT DISTINCT (- (rt1.c0)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((CASE WHEN x'' THEN x'' WHEN 0xffffffffa6c1ddcb THEN '-864423016' WHEN x'974a' THEN '-1016817412' ELSE 0.6950700443489713 END)OR((+ (8.65620227E8)))))AND(CASE WHEN 0xffffffff9e4f25bc THEN x'b851' END))); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM rt0, rt1 WHERE ((((((x'')OR(0.002126544802572239))))>((x'')))); -- 0ms;
SELECT DISTINCT (CAST(rt1.c1 AS INTEGER) IN ()) FROM rt0 WHERE ('2102525327'); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ()))/(((rt1.c2)<(rt0.c1)))) FROM rt0;SELECT DISTINCT ((((rt1.c1)%(rt1.c1)))&(CAST(rt1.c3 AS NUMERIC))), (((rt1.c4) BETWEEN (x'') AND (rt0.c2)) IN ()), rt0.c1 FROM rt1 WHERE ((((((0.3148501111096067, x'', 0.5246915640614176, NULL, 0x398126ea))>=((0.6216775806097216, '', 0.40187761892326934, 0.9587210539739713, 0.007736410105401381))))>((('1990860523')IS NOT(x'c1a8'))))) GROUP BY ((CASE WHEN rt1.c4 THEN rt1.c1 ELSE rt0.c2 END) ISNULL), NULL, CASE LOWER(DISTINCT rt1.c4)  WHEN CAST(rt1.c3 AS REAL) THEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c2)) END;SELECT ALL ((rt1.c3 COLLATE NOCASE)*(SUM(rt1.c3))) FROM rt0;SELECT ALL CAST(((((((((rt1.c4)OR(rt1.c0)))AND(rt0.c0)))OR(NULL)))OR('4y谰zbi')) AS INTEGER) FROM rt0 GROUP BY rt0.c2;SELECT NTH_VALUE(CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB), (((((rt1.c4 IN ()))AND(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 END)))OR(((rt1.c3)>(rt1.c3))))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt1;SELECT DISTINCT ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c1 END)AND((rt1.c4 IN ()))) FROM rt1, rt0; -- 0ms;
SELECT (~ ((rt1.c1 IN (rt1.c2)))), COUNT(((rt1.c4)OR(rt1.c4))), COUNT(*) FROM rt1; -- 1ms;
SELECT CASE '8cq/'  WHEN ((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c3)) THEN ((((rt1.c3)OR(rt1.c4)))AND(NULL)) END, LIKELY(UPPER(DISTINCT rt1.c0)), AVG(((-1.321962796E9) BETWEEN (rt1.c0) AND ('8홇idv'))), (((((rt0.c2 IN ()))OR(rt0.c0)))AND((~ (-1269084077)))), CASE WHEN CASE WHEN rt1.c4 THEN rt1.c4 END THEN (rt1.c2 IN ()) END FROM rt1 WHERE (('' IN ()) COLLATE BINARY) GROUP BY ROUND(((rt1.c3) NOT NULL), CASE rt1.c4  WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c4 END), rt1.c0, NULL HAVING CASE WHEN (+ (rt1.c2)) THEN 1990860523 WHEN CAST(rt1.c2 AS REAL) THEN '' WHEN ((((((((((((rt0.c2)OR(rt1.c0)))OR(rt1.c4)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c3)))OR(rt1.c2)) THEN MIN(rt0.c1) END;SELECT DISTINCT LOWER(DISTINCT ((rt1.c3) NOTNULL)) FROM rt0, rt1 WHERE (((NULL) IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((0.41419547627747566)>=('-809987729')) FROM rt1, rt0; -- 4ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT ALL (((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) FROM rt0, rt1 WHERE (((('-2136177586' IN ())) NOT BETWEEN (((NULL)LIKE(NULL))) AND ((('1725164397')<<(NULL))))); -- 0ms;
SELECT rt1.c3 FROM rt0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((- (rt1.c1))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CAST(x'92d1' AS REAL))) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c0 IN ()))&('\Q\r')) FROM rt1, rt0 WHERE (((('默Zi/v''0E螖', NULL, x'5b3b')) NOT BETWEEN (('-948185552', (NOT ('-1755019087')), (((('U	]ừ뇐_ e')OR(x'')))AND(1542175311)))) AND ((((((((((((((NULL)AND('1459061022')))AND('745572608')))AND('1665154080')))OR(0.9287162347502662)))OR(x'')))OR(x'')), CAST(x'' AS TEXT), ((x'') NOTNULL))))); -- 0ms;
SELECT ALL (+ (CASE WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c1 END)) FROM rt0, rt1 WHERE (CAST(0x2607cf22 AS TEXT) COLLATE RTRIM); -- 0ms;
SELECT CASE WHEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END FROM rt0;SELECT DISTINCT ((((rt1.c3) NOT NULL)) IS FALSE), COUNT((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((NULL)))) OVER (), ((((rt1.c1)<=(rt1.c3)))+(rt1.c2 COLLATE NOCASE)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt1.c2, SUM(HEX(rt0.c2)) OVER (), CAST((rt1.c3 IN ()) AS INTEGER) FROM rt1, rt0 WHERE ((~ (((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT HEX((~ (0.45068792108737743))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c1)))>=(CASE rt1.c2  WHEN rt1.c4 THEN rt0.c0 END)) FROM rt1, rt0 WHERE ((((('-647172117')+(1.990860523E9)))LIKE(((x'')=(NULL))))); -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS INTEGER) COLLATE RTRIM FROM rt0 ORDER BY DATETIME((((rt0.c2))>=((rt0.c0))), rt1.c4, CASE WHEN rt1.c3 THEN rt0.c1 END) ASC;SELECT DISTINCT SUBSTR(CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c0 END, rt0.c1 COLLATE RTRIM), ((json_quote(rt1.c2)) IS FALSE), NULL FROM rt1, rt0; -- 0ms;
SELECT ALL CAST(((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c1)) AS INTEGER), x'', (rt1.c2 IN (rt1.c1, rt1.c3)) COLLATE NOCASE, ((CAST(x'' AS NUMERIC)) NOTNULL), (((CAST(rt0.c1 AS INTEGER)))>((CAST(rt0.c2 AS TEXT)))) FROM rt0 WHERE (((((x'0fd3') NOT BETWEEN ('778274710') AND (-9.48185552E8)))-((x'' IN (NULL))))) ORDER BY (((((((('-1510995148')OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c0))))))OR((((rt1.c1, rt0.c2, rt1.c4)) NOT BETWEEN ((rt1.c2, rt1.c4, rt0.c0)) AND ((rt0.c2, rt0.c0, rt1.c4))))))AND((((rt0.c1))>=((rt0.c1))))))OR((rt0.c2 IN ()))) ASC  NULLS LAST;SELECT ALL CASE WHEN ((rt1.c3)<>(x'434b')) THEN ((x'') NOT BETWEEN (rt1.c0) AND (rt1.c3)) WHEN ((rt1.c2)<=(x'')) THEN x'b9b3' WHEN json(rt1.c4) THEN TOTAL(NULL) ELSE MAX(rt1.c3) END FROM rt1 FULL OUTER JOIN rt0 ON ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))<=(x'')); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((CAST(NULL AS REAL))AND(ABS(DISTINCT NULL)))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES), (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 END IN ()), ((MAX(rt0.c1))<<(CAST(rt1.c3 AS INTEGER))) FROM rt0 WHERE (((CASE WHEN 0X77f94107 THEN 0xfffffffff0a79365 WHEN NULL THEN '' WHEN 0xffffffffe5ea06d6 THEN '' END)>(CAST(x'' AS REAL))));SELECT ((((rt0.c1)<(-4.37647658E8)))>>(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c3)))) FROM rt0 GROUP BY (((rt0.c1 COLLATE NOCASE))>(((NOT (rt0.c0)))));SELECT DISTINCT (((((rt0.c1)AND(rt0.c2)))AND(rt1.c4)) IN ()) FROM rt0 ORDER BY (CASE rt0.c2  WHEN rt0.c0 THEN 0.5005755099726754 WHEN rt1.c2 THEN rt0.c1 WHEN 0.9045294120768952 THEN rt1.c0 WHEN x'' THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 END IN (((rt1.c2) IS FALSE))) ASC  NULLS LAST LIMIT -61147737 OFFSET 392676040;SELECT TOTAL(((rt0.c2)<<(rt1.c3))) FROM rt1, rt0; -- 0ms;
SELECT COUNT(*) FROM rt1; -- 0ms;
SELECT (NOT ((('') IS TRUE))), ((rt1.c3)>>((NOT (rt0.c2)))), ((rt1.c3) IS TRUE) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CAST(json_remove(rt0.c1, rt0.c2) AS TEXT) FROM rt1 WHERE (((0.34363662306985443 COLLATE BINARY)AND((('-1510995148')<(0.6051980443699675)))));SELECT ALL '1665154080' FROM rt0; -- 0ms;
SELECT ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE), COUNT(((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c1))) COLLATE RTRIM, CAST((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))) AS BLOB) FROM rt1 WHERE (IFNULL(0Xffffffffa6b56afa, ((NULL) NOT BETWEEN (NULL) AND ('zxO2'))));SELECT DISTINCT MAX((rt0.c0 IN (rt0.c2))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((~ (rt1.c3))) BETWEEN (json_array_length(rt1.c4)) AND (((rt0.c2) ISNULL))) FROM rt0 WHERE ((~ (((x'efaf')>(0.1711536466816156))))) LIMIT 2106283490 OFFSET 1827634660;SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0 WHERE (LIKELY(((((((((0.5527425837538479)AND('n ')))AND('1e500')))AND(x'')))AND(NULL)))); -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE BINARY) NOT BETWEEN (x'') AND (((((rt0.c2)OR(rt1.c1)))AND(NULL)))) FROM rt1;SELECT DISTINCT (((rt1.c2)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((rt0.c0 COLLATE NOCASE))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (~ ((- (rt0.c0)))) FROM rt0, rt1 GROUP BY (((((rt0.c1))==((rt0.c2)))) NOT BETWEEN (RTRIM(x'')) AND ((+ (rt0.c2)))) HAVING (((- (rt0.c2))) BETWEEN (x'') AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END)); -- 0ms;
SELECT TYPEOF(((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))) FROM rt0 WHERE (((((((((((x'')AND(NULL)))AND(NULL)))AND(x'0e14')))AND(0.011021618512486953)))OR((('')!=(x'3fa6')))));SELECT ALL ((CASE WHEN NULL THEN rt1.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CASE WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c0 END) AND (MAX(rt1.c2))) FROM rt0, rt1 GROUP BY ((((rt1.c3) NOTNULL)) BETWEEN (x'' COLLATE NOCASE) AND (((0.5989034834214619)GLOB(rt0.c2)))), CAST('Q瓀mlc3Oh-' AS INTEGER), rt1.c2, CAST((~ (rt0.c0)) AS NUMERIC), (NOT (((rt1.c3) IS FALSE))); -- 1ms;
SELECT ALL CASE ((rt0.c1)-(rt0.c0))  WHEN ((rt1.c4)&(rt1.c3)) THEN UPPER(DISTINCT rt0.c0) WHEN MAX(rt1.c1) THEN (((rt0.c1))>=((rt0.c2))) WHEN ((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c2)) THEN rt1.c4 ELSE ((((((((rt0.c1)OR(0xa799f2f)))AND('-1308510335')))AND(rt1.c1)))AND(rt0.c0)) END, rt1.c3, ((MAX(rt0.c2))>(json_remove(rt0.c1, rt0.c2, x'', rt0.c2))) FROM rt0, rt1;SELECT NTH_VALUE(CAST(rt0.c2 COLLATE RTRIM AS TEXT), (((rt0.c1 IN ())) NOTNULL)) OVER () FROM rt0; -- 0ms;
SELECT 1.116835273E9 FROM rt0, rt1 WHERE ((((0.24605323051264716 IN ())) BETWEEN (0.6051980443699675) AND (CASE ''  WHEN x'' THEN '1793634097' ELSE x'' END))) LIMIT 210161001 OFFSET 1814720687; -- 0ms;
SELECT DISTINCT ((((((rt1.c1)OR(rt0.c0)))AND(rt1.c1)))AND(((rt1.c1)OR('.-l鶝0n^x}')))) FROM rt1 WHERE ((((NULL) IS FALSE) IN ((NOT (0.4770750215082876)))));SELECT DISTINCT COUNT(*) FILTER(WHERE ((NULLIF(NULL, rt1.c2))OR(CAST(rt1.c3 AS REAL)))) OVER () FROM rt0;SELECT DISTINCT ((((rt1.c2)AND(rt1.c1)))AND('0.24605323051264716')) COLLATE BINARY, (((- (rt1.c4)))!=(rt0.c2 COLLATE BINARY)), rt1.c4 FROM rt0, rt1; -- 0ms;
SELECT GROUP_CONCAT(((rt1.c1) NOT NULL)) FILTER(WHERE rt0.c0) OVER () FROM rt1 NATURAL JOIN rt0; -- 0ms;
SELECT ALL (('') NOT NULL) FROM rt1; -- 1ms;
SELECT ALL ('Bv' IN ()) FROM rt0 WHERE ((~ (0.42346166430114207)) COLLATE NOCASE) ORDER BY -68312012  NULLS FIRST, rt1.c0 DESC;SELECT (NOT (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 WHEN x'' THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c4 END)), ((((((((json_array_length('4#uxj谧', rt0.c0))OR(((rt0.c1)AND(rt1.c1)))))OR(SQLITE_SOURCE_ID())))AND((((rt1.c4)) BETWEEN ((rt0.c1)) AND ((rt1.c2))))))OR(TRIM(rt1.c4, rt0.c1))), ((rt1.c1)<(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt0.c2)))) FROM rt1, rt0 NOT INDEXED WHERE (((CASE WHEN '1814720687' THEN x'' END) BETWEEN (((((((((((((x'')OR(x'c6a5')))AND(NULL)))AND(NULL)))OR(NULL)))AND(0.21625665505520164)))OR(''))) AND (((NULL)<('+L'))))) ORDER BY CASE WHEN (- (rt1.c0)) THEN (~ (rt1.c3)) WHEN LOWER(rt0.c2) THEN HEX(0xffffffffa80a2e0e) WHEN (rt1.c4 IN (rt1.c1, rt1.c1)) THEN (rt0.c2 IN ()) END ASC; -- 0ms;
SELECT ALL TOTAL(NULLIF(DISTINCT rt1.c1, rt1.c1)) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c0)) BETWEEN ((((0.5488115289801437) BETWEEN (x'') AND (rt0.c2)))) AND ((SUM(rt0.c1)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT -6.47172117E8, (- ('w_')), (- (rt0.c0 COLLATE RTRIM)), CAST(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)) AS NUMERIC), CAST(CAST(rt1.c0 AS NUMERIC) AS BLOB) FROM rt0;SELECT DISTINCT (((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c2))) COLLATE BINARY FROM rt1 WHERE (CAST(((x'1170') NOT BETWEEN (0.10518535644253313) AND (x'')) AS BLOB)) ORDER BY 0.9044438960408387 DESC, (- ('[ꭲ'));SELECT ALL rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT (NOT (CASE rt0.c2  WHEN rt1.c3 THEN NULL END)) FROM rt0 WHERE (CAST(x'' COLLATE RTRIM AS NUMERIC));SELECT TOTAL_CHANGES(), (0.531083353497355 IN ((NOT (rt1.c3)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c3)))), (((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) IN (((rt1.c3)GLOB(rt1.c2)))) FROM rt1 WHERE (((('kWrf0l')) BETWEEN (((NOT (x'')))) AND (((((-2002661057))<((733316935))))))) GROUP BY CASE WHEN ((((rt0.c1)AND(rt1.c1)))AND(rt0.c1)) THEN ((rt0.c0)>=(rt1.c3)) WHEN TRIM(DISTINCT rt1.c4) THEN ((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)))OR(rt0.c1)))OR(rt1.c2)) WHEN ((rt1.c4)>=(rt1.c2)) THEN NULL END HAVING ((CASE WHEN rt0.c0 THEN rt1.c4 END) NOT BETWEEN ('-308477299') AND (CAST(rt1.c1 AS NUMERIC)));SELECT DISTINCT MAX(CAST(rt0.c1 AS INTEGER)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ABS(rt0.c1 COLLATE RTRIM), (((rt1.c3)) BETWEEN ((rt1.c0)) AND ((json_array_length(rt0.c1, rt1.c1)))), SUM((+ (rt0.c1))) OVER () FROM rt0 WHERE ((- ((((0.5078337554106376, 2.012823815E9, NULL)) NOT BETWEEN (('586610900', NULL, x'')) AND ((x'02ab', '-719353915', NULL))))));SELECT ALL QUOTE(((rt1.c3)<(rt0.c0))) FROM rt0;SELECT ALL ((rt0.c1)|(rt1.c2)) COLLATE NOCASE FROM rt1;SELECT ALL ((((((rt0.c1)+(0.2120550563104936)))AND(((((((((rt1.c1)AND(rt1.c3)))AND(rt0.c2)))OR(rt1.c3)))AND(rt1.c2)))))OR(CAST(rt1.c3 AS TEXT))), CASE ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1))  WHEN (NOT (rt1.c4)) THEN (rt1.c3 IN (rt1.c4)) END, rt1.c1 FROM rt1 GROUP BY (((rt0.c2 IN (rt1.c2, rt1.c2, rt0.c2))) BETWEEN (((((rt0.c0)AND(rt1.c3)))OR(rt0.c2))) AND (rt1.c0)), x'', (((rt0.c2))<>((rt0.c0))) COLLATE NOCASE;SELECT DISTINCT rt0.c0 FROM rt1 WHERE ((((x'' IN (-1691339892)))|((('NSX濕I#p픥') IS TRUE))));SELECT ALL (~ (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 END)), rt1.c0, (CAST('' AS TEXT) IN (LIKELIHOOD(rt0.c1, 0.8461548208041827))) FROM rt0, rt1; -- 0ms;
SELECT ALL ((CAST(rt1.c2 AS TEXT))IS NOT(rt0.c0 COLLATE NOCASE)) FROM rt1, rt0 LIMIT -2094913885; -- 0ms;
SELECT (NOT ((((rt1.c1))<((rt1.c2))))) FROM rt0 WHERE (((CAST(0.46107818859292393 AS REAL))&(0.6495837535848102 COLLATE BINARY)));SELECT DISTINCT LAST_VALUE(((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((rt0.c0 IN ())))) OVER (), CAST((((rt1.c2))>=((rt1.c0))) AS REAL), TOTAL(((((rt1.c1)AND(rt1.c4)))OR(rt0.c2))) OVER () FROM rt0 WHERE ((~ (((x'cb78')||(1.82763466E9)))));SELECT DISTINCT x'34b2', 0.7968941895103644, ((((((rt0.c1)OR(rt0.c2)))AND(rt1.c0))) NOT BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (CAST(rt0.c0 AS REAL))) FROM rt0, rt1; -- 0ms;
SELECT ALL (((((- (rt1.c4)))OR(HEX(DISTINCT rt1.c2))))OR(RTRIM(rt1.c4))), CASE WHEN AVG(rt1.c4) THEN CASE rt1.c3  WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c4 END END, SUM(((rt1.c4)>(rt0.c0))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (('941015842') IS TRUE) FROM rt1 WHERE (((((('878922488')) BETWEEN ((x'')) AND ((NULL))))*(CASE 0.24800742233812711  WHEN 0Xfffffffffa3f24bf THEN 0.7077062764264845 ELSE x'' END))); -- 0ms;
SELECT DISTINCT (rt1.c2 IN ()) COLLATE RTRIM FROM rt0 WHERE (((NULL) BETWEEN (((x'') ISNULL)) AND (((550052134) BETWEEN ('2102525327') AND (1665154080))))) ORDER BY ((UPPER(DISTINCT rt0.c2)) IS FALSE), '' COLLATE NOCASE ASC, ((rt1.c4) BETWEEN (CAST(rt1.c3 AS TEXT)) AND ((~ (-1301503208))))  NULLS LAST;SELECT DISTINCT 0xffffffff94ccd666 FROM rt1; -- 0ms;
SELECT DISTINCT CAST(HEX(DISTINCT rt0.c1) AS BLOB) FROM rt1 WHERE (SQLITE_VERSION());SELECT DISTINCT COUNT(((rt1.c2) IS FALSE)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT COUNT(*), (((rt0.c2))>((json_patch(rt1.c4, rt0.c2)))), SUM(((((rt0.c0)AND(rt1.c3)))OR(rt0.c0))) FROM rt1 WHERE (NULL);SELECT DISTINCT (CAST(rt0.c1 AS TEXT) IN ()), ((NOT (x'')) IN ()), (~ (UNICODE(0.3869216203479915))), (~ (rt1.c4)) COLLATE BINARY, ((((rt0.c2)IS(rt0.c2))) NOT NULL) FROM rt1, rt0; -- 0ms;
SELECT (+ (((rt1.c1)<>(rt0.c1)))), rt1.c2, HEX(-224376666 COLLATE RTRIM) FROM rt0 WHERE (((((0X1ef01ff)>('-1875093694')))||(((0.4680626513418512)>=(5.866109E8)))));SELECT DISTINCT NTH_VALUE((- (((rt1.c3)<(rt1.c0)))), 0.22122722446428067) OVER () FROM rt1;SELECT ALL ((((((((((rt1.c3)/(rt1.c2)))AND(rt1.c1)))AND(HEX(0.7508660999803756))))OR(((rt1.c2)*(rt0.c1)))))AND(((rt1.c3) NOTNULL))) FROM rt1;SELECT ALL rt1.c1 FROM rt0 WHERE ((CASE WHEN 0.43845563710070434 THEN 'hR.E'')8r' WHEN NULL THEN x'' WHEN 0.5989034834214619 THEN '' ELSE 0.9445073982333894 END IN ((((NULL))>=((NULL))))));SELECT DISTINCT (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END IN ()) FROM rt1, rt0 LIMIT -1974697033 OFFSET 804915250; -- 0ms;
SELECT DISTINCT CAST((~ (rt1.c4)) AS NUMERIC) FROM rt1; -- 0ms;
SELECT ALL GLOB(json_object(rt0.c1, rt1.c4, rt1.c2, rt0.c0), ''), AVG(CAST(rt1.c2 AS NUMERIC)) OVER (), (((- (rt1.c1)))&(0.9060322963183579)) FROM rt1, rt0 GROUP BY (((CAST(rt1.c2 AS INTEGER)))>((((rt0.c2)>>(rt0.c1)))));SELECT DISTINCT rt0.c2, ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3)))&(TYPEOF(DISTINCT 0.8647442777967556))), (((((rt1.c4) NOTNULL), ((rt1.c0)<(rt0.c2)), ((rt0.c2)<=(0.22122722446428067))))<(((rt1.c1 IN ()), RTRIM(rt0.c2), (- (rt1.c2))))) FROM rt0 WHERE ((((~ (2.10628349E9))) NOT BETWEEN (CASE 0xfffffffffa8060bb  WHEN 1011719987 THEN NULL WHEN 1840721341 THEN 0.6718646283118975 WHEN x'048b' THEN 0.2946071359994432 ELSE NULL END) AND (((0.7267172554612105) IS FALSE)))) ORDER BY ((((((rt1.c4, rt0.c2, x'', rt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c3, rt0.c1, rt1.c1, rt0.c2)) AND ((x'', rt1.c0, rt0.c2, rt0.c1, rt0.c2)))))>=((((((rt1.c4)OR(rt0.c1)))AND(rt1.c4))))) ASC;SELECT DISTINCT rt0.c1 FROM rt1;SELECT ALL DENSE_RANK() OVER () FROM rt1, rt0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT (((rt1.c0) NOT BETWEEN (-1.498060038E9) AND (rt1.c2)) IN ()) FROM rt0, rt1; -- 0ms;
SELECT ALL (((- (rt0.c2)))-(((rt1.c0) ISNULL))) FROM rt1, rt0; -- 0ms;
SELECT '-1170109392' FROM rt0, rt1 WHERE (GLOB(((x'')%(0.7275222345060928)), (+ (NULL)))); -- 0ms;
SELECT '>.' FROM rt1 WHERE ((((+ ('-1807185758')))<=((((x'24f49671', 1070270348, NULL))<>((x'', 53376192, 0.18766633425013002)))))); -- 0ms;
SELECT ((rt1.c3 COLLATE BINARY)-('1265398163' COLLATE RTRIM)) FROM rt1, rt0; -- 0ms;
SELECT CASE ((rt0.c2)AND(rt0.c2))  WHEN (((rt0.c0))>((rt0.c0))) THEN ((rt1.c4) NOT NULL) ELSE rt1.c2 COLLATE NOCASE END FROM rt1 NOT INDEXED WHERE (UNICODE(('1662852875' IN ())));SELECT DISTINCT ((x'')IS NOT(((rt1.c0) ISNULL))) FROM rt0, rt1; -- 0ms;
SELECT ALL (((((NOT (rt1.c3)))AND(GROUP_CONCAT(rt1.c4))))OR('\r3j')) FROM rt0, rt1 WHERE ((~ ((NOT (0X6db72dbd))))); -- 0ms;
SELECT DISTINCT (((((rt1.c4 IN ()))AND(CAST(rt1.c4 AS INTEGER))))AND((NOT (rt1.c0)))), SUM((((x''))<=((rt1.c1)))) OVER ( ORDER BY (((rt1.c4 IN (rt1.c3))) IS FALSE) DESC  NULLS LAST), PERCENT_RANK() OVER () FROM rt0, rt1 WHERE (CAST('HHCDw)' AS TEXT)); -- 0ms;
SELECT COUNT(TRIM(rt0.c2) COLLATE NOCASE) OVER () FROM rt1, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), IFNULL((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), (('O&') BETWEEN (x'') AND (rt1.c4))), ((rt1.c0)&((NOT (rt0.c1)))) FROM rt1 WHERE (TRIM(DISTINCT IFNULL(NULL, 'gq'), (('-1999194788')>('-389751803')))) ORDER BY (((((rt1.c3))<((rt0.c0)))) NOTNULL) DESC, ((ABS(DISTINCT rt1.c0))<<((NOT (rt0.c2)))) DESC, CAST((~ (rt1.c0)) AS TEXT);SELECT ALL (~ (((rt1.c1) IS FALSE))) FROM rt0, rt1 WHERE (((((x'')>=(NULL))) IS FALSE)) GROUP BY ((((rt1.c2)AND(((((rt1.c3)AND(rt1.c1)))AND(rt0.c2)))))AND((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c0))))), (((((rt1.c3))<((x''))))<(((rt1.c2)=(rt1.c4)))), (('') IS FALSE) HAVING (~ (LIKELY(rt1.c3))); -- 0ms;
SELECT ((NULL)+(rt1.c0)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST('' AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((SUM(rt0.c2))OR(COUNT(*))))AND(((rt1.c2) ISNULL))), AVG(CASE rt0.c0  WHEN rt1.c3 THEN '0.5625378087410702' WHEN rt1.c3 THEN rt1.c0 WHEN '392676040' THEN rt1.c1 END), (TOTAL('<_A>k!/Zm') IN ()) FROM rt0 LEFT OUTER JOIN rt1 ON ((CASE rt1.c2  WHEN rt0.c1 THEN x'099a' WHEN rt1.c3 THEN rt0.c1 WHEN 0.7620813862197177 THEN rt1.c1 END) ISNULL); -- 0ms;
SELECT DISTINCT (((((rt1.c4, rt1.c3, rt0.c1))<((rt1.c2, rt1.c3, rt1.c1)))) NOTNULL), ((((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c2))) BETWEEN (-1919785417) AND ((- (rt1.c1)))), rt1.c3 FROM rt1 WHERE (CAST(((((((((0.34736749063205985)AND(x'')))OR(-8.64423016E8)))AND(x'')))OR(0.16530745612807018)) AS NUMERIC));SELECT DISTINCT (((rt0.c1 IN (rt1.c3))) IS TRUE) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1 IN ())) IS FALSE) FROM rt1, rt0 WHERE ((((((('1698860071', 1.459061022E9, x'')) NOT BETWEEN ((1983087367, '1960906364', NULL)) AND ((7.7827471E8, x'c162', 0.6718646283118975))), (- ('778274710')), 0x69bfd647 COLLATE NOCASE))<((x'28e1', ((x'')>>(0.9893480850995665)), ((x'')<=('')))))); -- 0ms;
SELECT 0.9910699074659054 FROM rt0 LIMIT 304215002; -- 0ms;
SELECT DISTINCT LTRIM(((rt1.c2) IS FALSE)) FROM rt0;SELECT NULL FROM rt1; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL) FROM rt0, rt1 WHERE ((+ (((NULL)&(0Xffffffffa5f00b34))))); -- 0ms;
SELECT DISTINCT (((NOT (rt1.c2)))<>('1459061022')), CAST(MAX(rt1.c0) AS TEXT), ((((((((CAST('t*aoR*?' AS NUMERIC))AND((rt0.c0 IN (rt1.c0)))))OR((rt0.c0 IN ()))))OR(rt0.c0)))OR(rt0.c1 COLLATE NOCASE)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((0.5324146506850184)AND(SUM(rt1.c1))))OR(((rt1.c1)GLOB(rt1.c3)))) FROM rt0, rt1; -- 0ms;
SELECT ALL (((~ (rt1.c2)))|(((((rt1.c4)AND('-729407085')))AND(NULL)))) FROM rt0, rt1 WHERE (CAST(CASE WHEN '-1016817412' THEN 0.2069127868250994 WHEN 0.6495837535848102 THEN NULL WHEN x'' THEN '-437647658' END AS NUMERIC)) LIMIT 895460190; -- 0ms;
SELECT MIN(CAST(rt1.c3 AS NUMERIC)), '804915250', (((rt0.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((((rt0.c0)AND(rt0.c1)), CAST(NULL AS INTEGER), LTRIM(rt1.c4, rt0.c2))) AND ((rt1.c4, (('wE')>>(rt1.c3)), CAST(rt1.c2 AS BLOB)))), RANK() OVER ( GROUPS  UNBOUNDED PRECEDING), (((rt0.c2 IN ('1567764404', rt1.c0)))>(x'89a2')) FROM rt1, rt0 WHERE (((CAST('-1235599785' AS BLOB)) IS TRUE)); -- 0ms;
SELECT ALL TRIM(DISTINCT rt0.c2 COLLATE NOCASE) FROM rt0 WHERE ((- ('1690122832'))) LIMIT 335194003; -- 0ms;
SELECT (((((rt1.c0 IN (rt1.c1)))AND(x'')))AND(rtreenode(0.14906220083040145, rt0.c1))) FROM rt1, rt0 WHERE ((((NULL, '1990860523', -2002661057)) NOT BETWEEN ((CAST(NULL AS INTEGER), (- (0.3801634375142452)), ((0.11987525064952465)<=(1.265398163E9)))) AND (((((0.6642970799696399, NULL, 'CMv9h7ddq')) NOT BETWEEN (('1863859362', '慩22', NULL)) AND ((0.4744915743302389, '1404633406', ''))), ((((0.5527425837538479)AND('1827634660')))OR('')), ('F㆗' IN ()))))); -- 0ms;
SELECT DISTINCT (((-1.875093694E9)AND(rt1.c0)) IN ()) FROM rt0, rt1 WHERE (((CASE NULL  WHEN x'' THEN x'' END)*(((0.7734578400624202) BETWEEN (0.6051980443699675) AND ('cs%⩼鮭1yXx'))))); -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ()), 5.50052134E8, -1.792434787E9 FROM rt0, rt1 WHERE ((((('') BETWEEN (x'') AND (0X6db72dbd)))!=(CASE NULL  WHEN x'e4fc' THEN NULL END))); -- 0ms;
SELECT ALL UNICODE(rt1.c4 COLLATE RTRIM) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT MIN(CASE WHEN rt0.c2 THEN rt1.c2 END) FROM rt0;SELECT ALL ((x'')|(((rt0.c2) ISNULL))) FROM rt1, rt0 ORDER BY CAST((rt1.c3 IN (rt1.c0)) AS TEXT); -- 1ms;
SELECT TOTAL_CHANGES(), MIN(((rt0.c2)<=('-606740371'))), json_remove(CAST(1.662852875E9 AS NUMERIC), ((rt0.c1)<<(rt0.c2))) FROM rt0;SELECT DISTINCT ((((((((((rt1.c4)AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)))AND(NULL))) NOT BETWEEN (((rt1.c0)|(rt1.c0))) AND (PRINTF('0.5139291576737153'))), -1510995148, ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c0)))AND((rt0.c1 IN ()))))OR('{UB>Y|V??')) FROM rt1, rt0 WHERE ((NOT ((('TT?ᇵUNP') BETWEEN (0.7923508881538897) AND (x''))))) GROUP BY ((((((rt1.c0)/(rt0.c1)))AND((NOT (rt1.c3)))))AND(((((rt1.c3)OR(rt1.c1)))AND(rt1.c4)))) HAVING CAST(COUNT(*) AS NUMERIC); -- 0ms;
SELECT DISTINCT highlight(rt1.c3, rt1.c3, rt1.c0, rt0.c1) COLLATE NOCASE FROM rt1 WHERE ((((((NULL)) NOT BETWEEN (('P7A-넋TD꓀')) AND (('1910481913'))))/(CAST('' AS BLOB))));SELECT DISTINCT (~ (((rt1.c3) NOTNULL))) FROM rt1, rt0 WHERE (LOWER(((x'')IS NOT(x'')))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt1.c4 THEN rt1.c3 END AS BLOB) FROM rt1, rt0 WHERE (((CASE WHEN x'' THEN 0x2a94d45 ELSE '-114730645' END)%((~ (x''))))); -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt1.c0 WHEN 0.51222884484698 THEN '-1334775456' WHEN rt1.c2 THEN rt1.c1 END)) AND ((CAST(0.9043032833553737 AS BLOB)))), CASE WHEN rt1.c3 THEN rt1.c1 END COLLATE RTRIM, (- (((rt0.c0)IS NOT(rt1.c3)))) FROM rt1, rt0 WHERE (((((0Xfffffffff2a048a6))!=((NULL))) IN ())) GROUP BY ((rt1.c3)/(rt1.c0)) COLLATE RTRIM; -- 0ms;
SELECT GROUP_CONCAT(STRFTIME(rt0.c2, rt1.c2, rt1.c0)) OVER (), MIN(((rt1.c3)IS NOT(rt1.c4))), ((((((((((rt1.c0)-(rt1.c4)))AND(rt1.c1 COLLATE BINARY)))OR(rt0.c0 COLLATE BINARY)))OR(((rt1.c0)>(rt1.c4)))))OR(((('')) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) FROM rt1 WHERE (((CAST('' AS BLOB)) NOT BETWEEN (CASE WHEN 'SUf,C' THEN '1840721341' ELSE x'8969' END) AND (((((NULL)AND(NULL)))OR('-1612928565')))));SELECT CAST(((rt0.c0)OR(rt1.c1)) AS BLOB) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CHAR(((rt0.c1)AND(rt0.c1))) FROM rt0 WHERE (((NULL COLLATE NOCASE)>(((NULL) NOTNULL)))); -- 0ms;
SELECT ALL ((((NULL)<(rt1.c4))) BETWEEN (MIN(rt1.c0)) AND (((((rt1.c1)AND(rt0.c2)))OR(rt0.c2)))), (((((rt1.c0 IN ()))AND(ABS(DISTINCT rt1.c3))))AND(UNLIKELY(DISTINCT rt0.c1))), NTH_VALUE((((rt1.c0)) BETWEEN (((rt1.c2 IN ()))) AND (((NOT (rt1.c1))))), (((rt1.c2 IN (rt1.c1)))|((rt1.c2 IN ())))) OVER ( ORDER BY (((rt1.c3 IN ())) IS FALSE) DESC  NULLS FIRST) FROM rt1 WHERE (((((('O')AND(2.10161001E8)))OR(NULL)) IN ()));SELECT DISTINCT ((((rt1.c2)>(rt0.c2))) NOT BETWEEN (((0.3148501111096067) BETWEEN (rt0.c1) AND (rt1.c1))) AND ((NOT (rt0.c0)))), (-92249925 IN ()), ((rt0.c0)OR(rt0.c2)) COLLATE RTRIM, ((((((((rt0.c2)AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c4)))OR(rt1.c3)) COLLATE RTRIM, GROUP_CONCAT((- (rt0.c1))) FROM rt1 WHERE ((~ ((((x'58c6')) NOT BETWEEN ((0.22410072238227596)) AND (('|9,CW'))))));SELECT DISTINCT ((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c1)))GLOB(rt1.c0 COLLATE BINARY)), ((LIKELIHOOD(DISTINCT rt1.c0, 0.8809350517095048))GLOB(CAST(0.8304122143023385 AS BLOB))), CAST(((0.6762427635149924) NOT BETWEEN (rt1.c1) AND (0.925661737455396)) AS REAL) FROM rt0 WHERE (((('0.24800742233812711' IN (0.0422862313343505))) NOTNULL)) LIMIT 964765418;SELECT DISTINCT (((CASE rt1.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c0 END))<((MIN(0.8462670603431836)))), SUM(((rt0.c2) NOT NULL)) OVER (), (((- (rt0.c1)))/(CASE WHEN rt0.c0 THEN rt1.c2 END)) FROM rt1 WHERE (CAST(((NULL)IS('zQ')) AS TEXT));SELECT ALL (((rt1.c3, rt0.c2 COLLATE BINARY, (- (rt1.c2))))>=((CASE WHEN rt0.c2 THEN NULL WHEN rt1.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END, ((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c0)), AVG(rt1.c2)))), rt1.c0, FIRST_VALUE(CASE (((rt0.c2, rt0.c1, rt0.c2))>((rt0.c1, rt0.c1, rt0.c1)))  WHEN (rt0.c2 IN ()) THEN json_array_length(rt0.c0) END) OVER ( ORDER BY TIME(CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c4 END, (rt0.c2 IN ()), ((rt1.c4)<>(rt0.c2)), ((rt1.c3)>=(rt1.c4)), 0.12936649403106903)  NULLS LAST, ((COALESCE(rt0.c0, rt1.c3)) BETWEEN (rt1.c3) AND (((((rt1.c3)OR(rt0.c1)))AND(rt0.c0))))  NULLS LAST) FROM rt0 ORDER BY PRINTF(0.25566915990676764 COLLATE BINARY) LIMIT 586610900;SELECT DISTINCT rt1.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c0, rt0.c2, rt1.c2)) BETWEEN (((NULL IN ()), (rt0.c0 IN (rt0.c0, rt1.c4)), CAST(rt1.c0 AS REAL))) AND ((((rt0.c0) NOT NULL), (~ (rt0.c1)), (~ (rt1.c3))))) WHERE ((COALESCE(DISTINCT NULL, 0Xffffffff9dbaa036) IN ())); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c2) AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c2))) AS REAL) FROM rt0 WHERE (((((((x'')&(x'')))OR(((x'')IS('1728488653')))))AND((NULL IN ('-1574934181', '1910787318')))));SELECT ALL (CAST(rt0.c2 AS INTEGER) IN (((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))), rt1.c0, (COUNT(-1.792434787E9) IN (CAST(rt1.c2 AS BLOB))) FROM rt0, rt1 WHERE (TRIM(DISTINCT ((x'') NOT BETWEEN (',	2goD%') AND ('#F>eòW^')), CASE 0x295abc66  WHEN NULL THEN x'3c95' ELSE '/' END)) ORDER BY ((((rt0.c0 COLLATE NOCASE)OR(0xfffffffff442608c)))AND(((rt0.c2)<(rt1.c2))))  NULLS FIRST; -- 1ms;
SELECT (((rt1.c3, '-850432043', rt1.c1)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3))), (rt1.c0 IN (rt0.c2)))) AND ((AVG(rt0.c1), CASE rt0.c2  WHEN rt1.c2 THEN rt0.c0 END, x''))) FROM rt1 WHERE (CAST((('') IS TRUE) AS INTEGER));SELECT DISTINCT LIKELIHOOD(TOTAL(1414902537), 0.453948004475621) FROM rt1; -- 0ms;
SELECT DISTINCT MIN(COUNT(((rt0.c2)OR(rt0.c2)))) FROM rt0 WHERE (((CASE WHEN NULL THEN 0.5482066225562952 ELSE x'e2cd' END) NOT BETWEEN ('') AND (((x'') NOTNULL))));SELECT ALL TOTAL(SUBSTR(rt1.c3, rt1.c1)) FROM rt1, rt0 WHERE (CAST(((NULL) IS TRUE) AS REAL)); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt1 WHERE ((((NULL) BETWEEN (x'') AND ('495391948')) IN ())); -- 0ms;
SELECT ALL (('6q)	狔') IS FALSE), ((((((rt1.c0)OR(rt1.c1)))AND(rt0.c0)))=(CAST(rt1.c0 AS REAL))), '208179900' FROM rt0 WHERE (((('H|1{*yk (' IN ())) IS FALSE));SELECT ALL FIRST_VALUE(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR((((rt0.c1, 'lZ\n㉊Yt?D', rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0))))))AND(rt0.c1))) OVER ( ROWS BETWEEN  CURRENT ROW AND ((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c1 END)LIKE(CAST(0.5481387941915355 AS REAL))) FOLLOWING) FROM rt0 WHERE (((UPPER(NULL))IS NOT(((((-809987729)OR(NULL)))OR('1263616288')))));SELECT DISTINCT rt0.c0 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CASE (((rt1.c4))<=((rt1.c0)))  WHEN CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c3 END THEN ((rt1.c1)+(rt0.c1)) WHEN ((((((((rt1.c4)AND(rt1.c4)))OR(x'')))OR(-1646947432)))AND(rt0.c1)) THEN (rt1.c4 IN ()) WHEN rt1.c0 COLLATE NOCASE THEN (((rt1.c1))>((rt1.c1))) ELSE ((rt1.c4)GLOB(rt1.c0)) END FROM rt0, rt1 WHERE ('I5'); -- 0ms;
SELECT DISTINCT ((((rt1.c0) BETWEEN (rt1.c1) AND (0x10fb6d8a))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt1.c0 END) AND (((rt1.c1) IS FALSE))), (CASE WHEN '' THEN rt0.c2 END IN (HEX(DISTINCT rt0.c0))), ((' ') ISNULL) FROM rt0, rt1 WHERE ((+ (0.5870461346455336)) COLLATE RTRIM); -- 0ms;
SELECT ALL (NOT (rt1.c0)) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT ((((((rt1.c4) ISNULL))AND(rt1.c1)))AND(CAST(rt1.c0 AS NUMERIC))), ((rt0.c0)!=(rt1.c3)) COLLATE NOCASE, COUNT(*) OVER () FROM rt1;SELECT ALL (+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c4)))) FROM rt1, rt0 WHERE (((CASE WHEN 'R z5UH)\n' THEN x'7504' WHEN x'' THEN x'' WHEN 0xfffffffffbeda434 THEN ',Fl*k1h' ELSE 0.07674033900380683 END)<=(NULLIF(DISTINCT 0.18335182374606507, '-757517003')))) ORDER BY ((((((rt1.c1)AND(rt1.c4)))OR(rt0.c1)))<<((- (rt1.c0)))) DESC; -- 0ms;
SELECT ALL json_insert(rt1.c2, rt1.c0, rt1.c1, rt1.c1, rt1.c2) COLLATE RTRIM, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (CAST(rt1.c4 AS BLOB)) AND ((((rt1.c1))<=((rt0.c2))))), CASE ((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))AND(rt0.c0)))OR(''))  WHEN rt1.c0 THEN ((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)) END, ((CAST(rt1.c3 AS NUMERIC)) BETWEEN (COUNT(*)) AND (x'')), 0x41f66804 COLLATE NOCASE FROM rt1, rt0 WHERE ((((+ (x'4530')))>>((((NULL, -1.999194788E9, NULL)) BETWEEN ((x'53b1', NULL, NULL)) AND ((x'9586', '&~', '3>穷')))))); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE rt1.c1) OVER (), ((((((rt0.c2) NOTNULL))OR(AVG(rt1.c0))))AND(((rt0.c0) IS FALSE))), (+ ((rt1.c4 IN ()))) FROM rt1, rt0 NOT INDEXED GROUP BY CASE WHEN ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2)) THEN ((rt0.c1)LIKE(rt0.c0)) ELSE rt0.c1 END HAVING ((CASE rt1.c4  WHEN 0.2120550563104936 THEN rt1.c2 END) BETWEEN ((- (rt0.c0))) AND (((rt1.c3) NOTNULL))); -- 0ms;
SELECT ((NOT (rt1.c4)) IN (((rt0.c0)!=(rt0.c0)))) FROM rt1, rt0; -- 0ms;
SELECT ALL UPPER(NULL) FROM rt0, rt1 WHERE (0.1602651383569601); -- 1ms;
SELECT json_valid(((rt1.c3)-(rt0.c2))) FROM rt0, rt1 NOT INDEXED WHERE (CAST('{/LZG9Ho|' AS REAL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(CAST('.靧&鈼7*Q}X' AS INTEGER) AS TEXT) FROM rt0, rt1; -- 0ms;
SELECT ALL '788-239:0*', rt1.c4, CASE WHEN ((rt1.c0)LIKE(rt1.c2)) THEN MIN(rt1.c3, rt1.c2) END, ((((rt0.c2)>>(rt0.c1)))=(rt1.c1 COLLATE NOCASE)), (((rt0.c2 IN ()))+(((x'') ISNULL))) FROM rt1, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT MIN(((rt1.c0)>>(rt1.c1))) FROM rt0;SELECT COUNT(*) FROM rt0 WHERE ((('}k_' COLLATE BINARY)>>(((x'') BETWEEN (-9.56911349E8) AND (x''))))) LIMIT 485972050 EXCEPT SELECT DISTINCT '-1646947432' FROM rt1 ORDER BY ((rt1.c0 COLLATE RTRIM) IS FALSE);SELECT DISTINCT CASE WHEN ((rt0.c1)!=(rt1.c4)) THEN ((rt0.c2) NOT NULL) END, (((('') BETWEEN (rt0.c1) AND (rt1.c1))) ISNULL), ((((rt1.c2) IS FALSE)) NOT BETWEEN (rt1.c0) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END)) FROM rt1 WHERE ((((-7.19353915E8 IN ())) BETWEEN (CAST(NULL AS TEXT)) AND (NULL COLLATE NOCASE)));SELECT ALL DENSE_RANK() OVER () FROM rt0, rt1 WHERE (CASE WHEN 0.849931344057178 COLLATE RTRIM THEN (~ (0.30969271256720465)) END); -- 0ms;
SELECT DISTINCT rt1.c0, (((rt1.c0)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c0))))), ((((rt1.c4)OR(rt1.c4)))AND(rt1.c2)) COLLATE BINARY FROM rt0, rt1 LIMIT -1675790338 OFFSET -437647658; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c3 AS INTEGER))-(((rt1.c3)<=(rt0.c0)))) FROM rt1, rt0; -- 0ms;
SELECT ((rt1.c3 COLLATE NOCASE) BETWEEN (CAST(rt1.c4 AS TEXT)) AND (((rt1.c0)>>(rt0.c2)))) FROM rt0, rt1 WHERE (((((0.6871393361219592)>(NULL))) BETWEEN (('?*{|Z' IN ())) AND (((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT (CASE rt0.c2  WHEN x'' THEN rt0.c2 ELSE rt0.c1 END IN ((((rt1.c1))>((rt1.c2))), (('D⛪t*')<(x'1e57')))), GROUP_CONCAT(rt1.c4) OVER (), ((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)) COLLATE BINARY FROM rt0, rt1; -- 1ms;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN NULL THEN NULL END)/((('-1345871478') BETWEEN (0.7497379274032713) AND (136299357))))); -- 0ms;
SELECT ALL ((CASE WHEN rt1.c4 THEN rt1.c4 ELSE 0.7353743324582038 END)>=(CASE rt0.c1  WHEN rt1.c0 THEN rt0.c2 END)), (((('q')*(rt1.c4))) NOTNULL), ((((NULL) IS TRUE)) BETWEEN (CAST(0.1508235317373291 AS NUMERIC)) AND ((((rt0.c1, rt1.c3, rt1.c2)) BETWEEN (('uf', rt1.c0, rt1.c2)) AND ((rt1.c4, rt1.c4, rt1.c0))))) FROM rt1 WHERE (((x'6d9f' COLLATE RTRIM) IS FALSE)) GROUP BY ((((((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)))OR(((((rt0.c0)OR(rt1.c4)))OR(rt0.c1)))))AND(((rt1.c4) NOTNULL))) HAVING (~ (rt1.c1 COLLATE RTRIM)) LIMIT 288440203 OFFSET 618527355;SELECT DISTINCT ((NULLIF(rt1.c3, rt0.c0))LIKE(rt0.c1)) FROM rt1;SELECT (((((rt1.c0)AND(0.5839396621537422)))OR(rt1.c0)) IN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c4)))), ((((((((CASE NULL  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c1 END)OR((rt0.c1 IN ()))))AND((rt1.c3 IN ()))))OR(((rt0.c2)<<(rt1.c1)))))AND(((((rt1.c3)AND(rt0.c2)))OR(rt1.c2)))), CASE CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c1 END  WHEN ((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((((rt0.c2)OR(NULL)))AND(rt1.c0)) ELSE (NOT (rt1.c0)) END FROM rt1, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT rt1.c4)) NOT BETWEEN ((~ (rt1.c0))) AND (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt1.c4)))AND(rt1.c4)))) FROM rt0, rt1 WHERE (((((((x'')>=(0.2170392030537579)))AND((('	Fm\')==('553614379')))))AND(((0X41f66804)-(''))))) GROUP BY 0X6b14f086, ((CASE rt0.c0  WHEN rt1.c2 THEN rt0.c2 END) BETWEEN (CASE WHEN rt1.c3 THEN rt0.c1 ELSE rt1.c3 END) AND (LOWER(-7.19353915E8))), ((rt0.c1 IN (rt1.c0)) IN ()) HAVING rt1.c0;SELECT ((CAST(rt1.c2 AS BLOB))/((+ (rt1.c2)))) FROM rt0, rt1 WHERE ((~ ((((((((((((('')OR(x'')))AND(NULL)))OR('1723084031')))AND(-308477299)))AND(x'bd73')))AND(x''))))) GROUP BY PRINTF(CASE rt1.c0  WHEN rt1.c3 THEN rt0.c0 END), ((((rt1.c2)+(rt1.c2)))OR((x'' IN ()))), (('-215917974')OR(((rt1.c3) NOTNULL))) HAVING (((+ (0.21625665505520164)))>=(TYPEOF(DISTINCT rt1.c0))); -- 0ms;
SELECT ALL rt1.c3 FROM rt1; -- 0ms;
SELECT ALL CASE (((rt1.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN rt1.c3 COLLATE RTRIM THEN ((rt1.c4) NOT BETWEEN (rt0.c1) AND (x'')) WHEN rt1.c1 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE WHEN COUNT(rt1.c4) THEN ((rt1.c0) BETWEEN (rt0.c2) AND (rt1.c2)) END FROM rt0, rt1; -- 0ms;
SELECT (NOT (((rt0.c0)IS(rt0.c2)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((AVG(rt1.c0)))>=((((rt1.c0) NOT NULL)))) FROM rt0 WHERE (((0.9445073982333894 COLLATE NOCASE) ISNULL)) LIMIT 53376192 OFFSET -1264881890;SELECT DISTINCT ((((('')) BETWEEN ((rt0.c2)) AND ((rt1.c2)))) IS FALSE) FROM rt0, rt1; -- 0ms;
SELECT ALL ((((rt0.c0)*(0.9872796932489649))) NOTNULL) FROM rt0; -- 0ms;
SELECT ((NULLIF(rt1.c0, rt0.c0))=(rt0.c2 COLLATE BINARY)) FROM rt0 WHERE (((CAST(0.267919751607952 AS INTEGER)) BETWEEN (x'') AND (((NULL) BETWEEN (x'4801') AND (NULL)))));SELECT DISTINCT CASE -1875093694  WHEN CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END THEN TOTAL(rt1.c4) ELSE ((rt1.c0)GLOB(rt1.c4)) END FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt1, rt0 WHERE ((~ (CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT 0.18552585924897813 FROM rt0 WHERE ((((((('-2140654578', 0.439166034054563, '-298401258')) BETWEEN ((0.4179856951825982, NULL, NULL)) AND ((0.6813253587293706, 0X6453aa25, '1459061022')))))>(('1076427330' COLLATE BINARY)))) GROUP BY (('-1497244213')&(rt1.c0)) HAVING COUNT(*);SELECT DISTINCT (+ (((rt0.c2) NOT BETWEEN (NULL) AND ('')))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CAST(0.5962265513381352 AS BLOB) FROM rt1, rt0 WHERE (((((NULL) IS TRUE))<(CAST('' AS TEXT)))); -- 0ms;
SELECT ((((rt0.c2) BETWEEN (rt1.c0) AND (NULL)))LIKE(((rt1.c3) IS TRUE))) FROM rt0, rt1; -- 0ms;
SELECT ((((rt1.c4) NOTNULL)) ISNULL), CASE WHEN ((rt0.c1)!=(rt1.c3)) THEN (rt1.c3 IN ()) WHEN TYPEOF(DISTINCT rt1.c2) THEN ((NULL) NOT NULL) WHEN (((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c2)))OR(NULL)) WHEN (rt1.c0 IN (rt1.c3)) THEN NULL WHEN (~ (rt0.c1)) THEN rt0.c1 END, CAST(x'' AS TEXT) FROM rt0, rt1 WHERE (((UPPER(DISTINCT 0.5078337554106376))>=('-1269084077'))); -- 0ms;
SELECT TOTAL(UNLIKELY(rt1.c0)) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c3, CAST(rt0.c0 AS NUMERIC), ((rt0.c2 COLLATE RTRIM) NOTNULL), ((x'')OR(((rt1.c2)|(rt0.c2)))), CASE CAST(rt1.c1 AS REAL)  WHEN CASE NULL  WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c2 END THEN GROUP_CONCAT(rt0.c1) WHEN NULL THEN ((((rt0.c0)OR(rt1.c2)))OR(rt0.c1)) WHEN TRIM(rt1.c1, rt1.c1) THEN CAST(rt1.c1 AS TEXT) ELSE CAST(rt1.c4 AS REAL) END FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt1.c3, (rt1.c0 IN ()), ((((rt1.c4)|(rt1.c3)))||(((((rt0.c0)AND(rt1.c2)))AND(rt1.c3)))) FROM rt0 WHERE (DATE(((((NULL)OR(0.8647442777967556)))AND('C?MY+혰')), ((0.22122722446428067) NOT NULL), CAST(0.18766633425013002 AS NUMERIC)));SELECT (((rt1.c2)) NOT BETWEEN ((NULL)) AND ((0X63403c20))) FROM rt1, rt0 WHERE (((- (0.3262599858446207)) IN ())); -- 0ms;
SELECT ALL CASE WHEN CAST('' AS NUMERIC) THEN COALESCE(rt1.c4, rt0.c0) END, GROUP_CONCAT((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((NULL)))) OVER (), (CAST(rt1.c0 AS INTEGER) IN ()) FROM rt1;SELECT rt0.c0 COLLATE RTRIM, COUNT(*) COLLATE NOCASE, ((((((rt0.c2) NOT BETWEEN (0.26127423657447135) AND (rt0.c2)))AND(rt0.c1)))OR(TRIM(rt1.c2, rt1.c4))) FROM rt1, rt0 WHERE ((('&R' IN ()) IN ())); -- 0ms;
SELECT DISTINCT (((x'2e91')) BETWEEN ((json_remove(rt0.c0, rt1.c2, rt1.c0, rt1.c3))) AND ((CAST('175742767' AS TEXT)))), COUNT(CAST(rt1.c0 AS BLOB)) OVER (), GROUP_CONCAT(json_object(rt1.c2, rt1.c0)) OVER () FROM rt0 WHERE ((((((('-342782711')AND('-478692211')))AND(x'')))>>(((((((((0.3801634375142452)AND(0.3861070462435383)))AND(0xffffffffb7bb4e1c)))OR('(M{9')))AND(0.007736410105401381)))));SELECT DISTINCT NULL COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2 COLLATE RTRIM)) FROM rt0, rt1 WHERE (((TRIM(DISTINCT -1.792434787E9))<(((NULL)<=('-1352597572'))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))) ISNULL)) OVER () FROM rt1 LIMIT 1954801349 OFFSET 865620227; -- 0ms;
SELECT DISTINCT NTH_VALUE(((rt1.c3)OR(rt1.c1)) COLLATE RTRIM, PRINTF((rt1.c2 IN ()))) OVER ( ORDER BY CAST((((rt0.c2, rt1.c2, NULL))>=((rt1.c2, rt1.c3, rt1.c2))) AS NUMERIC)  NULLS LAST, ((rt1.c4 COLLATE RTRIM) NOT BETWEEN (((rt1.c4)OR(rt1.c1))) AND (CASE WHEN rt0.c2 THEN rt1.c4 ELSE rt1.c1 END))  NULLS LAST) FROM rt1 WHERE ((CAST(x'' AS NUMERIC) IN (((x'') IS TRUE))));SELECT GROUP_CONCAT((rt1.c4 IN ())) FROM rt0, rt1 WHERE ((('dǿ9c') IS FALSE)); -- 0ms;
SELECT DISTINCT ((rt1.c4) NOTNULL) COLLATE RTRIM FROM rt1, rt0 WHERE (CAST(((('_P')) NOT BETWEEN ((NULL)) AND (('1919526466'))) AS BLOB)); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0) BETWEEN (-397186785) AND (rt1.c1)) THEN CAST(rt0.c0 AS INTEGER) ELSE CASE x''  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c2 END END FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((((rt1.c1)AND(rt0.c2)))AND(rt1.c4)) THEN (- ('387006296')) END FROM rt1, rt0 WHERE ((- ((((('0.9060322963183579')AND('-1576739010')))OR(NULL))))); -- 0ms;
SELECT CASE rt1.c4  WHEN SUM(rt0.c2) THEN (rt1.c3 IN ()) ELSE (((rt1.c1))==((rt0.c1))) END FROM rt1 WHERE ((((~ (x'')))OR(CAST(0.7074331482351139 AS TEXT)))) GROUP BY rt1.c2 HAVING (((((rt1.c3) NOTNULL), ((rt1.c0)GLOB(rt1.c2)), (rt1.c4 IN ())))>(((((rt1.c4, rt0.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c3)) AND ((0.10097697703339537, rt0.c2, x'1490'))), ((rt1.c2)+(rt0.c2)), rt1.c0)));SELECT ALL LAG(((rt0.c0 COLLATE BINARY) IS FALSE), (((('-2094913885')AND(rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c2 END)), rt1.c0) OVER ( ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x'')))) IS FALSE) DESC) FROM rt0, rt1 WHERE (json_insert(((('Xn'))=((x''))), (((x'')) BETWEEN (('')) AND (('-480377589'))), CAST(NULL AS BLOB), ((0Xffffffffa497bc60) NOT BETWEEN (NULL) AND (x'c67b')), (- (NULL)))) GROUP BY NULLIF(DISTINCT ((x'') IS TRUE), CAST(rt0.c1 AS TEXT)) HAVING rt0.c2;SELECT COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM rt0; -- 1ms;
SELECT DISTINCT CAST(((rt1.c4)IS NOT(rt0.c2)) AS NUMERIC), CAST(((0.3910030877992292)IS(rt0.c2)) AS REAL), TOTAL(CASE WHEN rt0.c0 THEN rt1.c4 END) OVER () FROM rt0 WHERE (CAST(HEX(NULL) AS TEXT));SELECT DISTINCT ((((NULL) NOTNULL)) NOT NULL) FROM rt1 WHERE (((CASE ''  WHEN 0Xffffffffab96a437 THEN x'' ELSE NULL END)=(CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT AVG(CAST(rt1.c0 AS REAL)), x'', ((((rt0.c1) BETWEEN (NULL) AND (rt1.c2)))<=(rt1.c0 COLLATE RTRIM)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN x'5322' THEN ((rt1.c4) IS TRUE) ELSE '-1637929073' END FROM rt0, rt1; -- 0ms;
SELECT (((((((rt1.c1))>=((rt0.c1))))AND(((rt1.c4)>=(rt0.c1)))))OR(((rt0.c2)-(rt1.c1)))) FROM rt0 GROUP BY (((+ (rt1.c1)))AND(CAST(rt0.c2 AS TEXT))) HAVING (((((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c3))))=((NULL)));SELECT ALL ((x'')*(((rt1.c2)&(rt1.c2)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS TRUE))IS(((rt1.c3)>=(rt0.c1)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()), (- (((('-1e500'))<=((NULL))))), (('0.7372537146065229' COLLATE BINARY) IS TRUE) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT UPPER(((rt1.c0) NOTNULL)) FROM rt0 WHERE (((2.10628349E9 COLLATE RTRIM)+(0.18163504760203542 COLLATE BINARY)));SELECT ALL TOTAL(((rt1.c0)LIKE(rt1.c0))) OVER () FROM rt0;SELECT DISTINCT ((UPPER(DISTINCT rt0.c1)) NOT BETWEEN (((rt1.c0) ISNULL)) AND ((~ (NULL)))) FROM rt0;SELECT DISTINCT RANK() OVER (), (((((NOT (rt1.c1)))OR(COUNT(*))))OR(COUNT(*))), UNLIKELY(DISTINCT '-1475727858') FROM rt1, rt0 LIMIT 1814720687 OFFSET -96525121; -- 1ms;
SELECT DISTINCT (((((rt1.c0) IS TRUE)))>=((NULLIF(rt1.c3, rt0.c2)))) FROM rt1, rt0 ORDER BY CASE (((rt1.c2))=((rt1.c1)))  WHEN ((((((((rt1.c3)OR(rt1.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt1.c0)) THEN UNICODE(rt1.c0) WHEN ((rt1.c1)==(rt1.c0)) THEN json_insert(rt1.c3, rt1.c1, rt0.c1, x'', rt1.c4) WHEN x'' THEN SUBSTR('EHx', rt0.c2) WHEN ((rt0.c2)|(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c2)) WHEN CAST('kjr2hL偓B-' AS INTEGER) THEN ((NULL) ISNULL) ELSE ((rt1.c3)IS NOT(rt0.c0)) END; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt0 WHERE (CAST(TYPEOF(0.22122722446428067) AS NUMERIC));SELECT ALL ((((rt0.c1) NOT NULL)) NOTNULL) FROM rt1 WHERE ((((((((((NULL IN (NULL)))AND((0.9179799522729408 IN ()))))OR(((((((((-0.0)OR(x'7c64')))AND(1.265398163E9)))AND(x'')))OR(NULL)))))OR(CAST('1827634660' AS TEXT))))AND('KBc,is<')));SELECT DISTINCT COUNT((rt1.c4 IN (rt1.c3, rt1.c4))) OVER () FROM rt0, rt1 WHERE ((((CASE WHEN NULL THEN x'a68c' WHEN NULL THEN 0x39c3e426 WHEN 'xSig\pQI' THEN 'G' ELSE 1592821931 END))<>((((NULL) BETWEEN (0.9587210539739713) AND ('446428553')))))) ORDER BY CAST('' AS INTEGER), ((((((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)))OR(((((((((rt0.c0)OR(rt1.c2)))OR(rt1.c4)))OR(x'')))AND(rt1.c2)))))OR(((rt0.c1)<(rt1.c1)))))OR(((rt1.c1)&(rt1.c3)))))AND(((('2033547142')) BETWEEN ((rt0.c2)) AND ((rt1.c1))))); -- 0ms;
SELECT GROUP_CONCAT(((rt1.c1) ISNULL)) FROM rt0, rt1 WHERE ((((- (NULL)))*(((0.012656564818762095)&(x''))))); -- 0ms;
SELECT DISTINCT (((('-1755019087')AND(((rt1.c2)*(rt0.c1)))))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c2)))), '^L\ni⇊bG', CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c0)<(rt1.c1)) ELSE ((rt0.c1) IS TRUE) END FROM rt0;SELECT DISTINCT TRIM(((rt1.c1)AND(rt1.c4)), rt0.c0) FROM rt1 WHERE (3.04215002E8);SELECT DISTINCT LAST_VALUE(x'') OVER () FROM rt0; -- 0ms;
SELECT SUM(((rt1.c4)<(rt1.c0))) FROM rt0, rt1 WHERE (CAST((+ (x'')) AS REAL)) LIMIT 1608900090 OFFSET 263903446; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c1)>>(rt1.c4))) FROM rt1;SELECT ALL CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (x'')) AS REAL) FROM rt0, rt1 WHERE ((((- (x'10b27c18ca6c'))) BETWEEN (((NULL)/(NULL))) AND (TRIM(DISTINCT 769978329)))); -- 0ms;
SELECT DISTINCT (('u%m넋')IS(rt1.c1 COLLATE NOCASE)) FROM rt1 GROUP BY ((CAST(rt1.c0 AS INTEGER)) BETWEEN ((((rt0.c0, 1827634660, rt1.c2))>=((rt0.c1, rt1.c1, '-1061280886')))) AND (rt1.c4)) HAVING ((((((((((rt1.c4)AND(rt1.c1)))AND(rt1.c1)))AND(x'9087')))OR(rt1.c4))) IS TRUE);SELECT ALL TRIM('') FROM rt0, rt1 WHERE ((~ ((0xffffffff8197ed42 IN ())))); -- 0ms;
SELECT rt0.c2 FROM rt1 WHERE (((NULL)<(((x'') BETWEEN (x'') AND (NULL)))));SELECT ((((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))OR(rt1.c3 COLLATE RTRIM)))AND(CAST(rt1.c2 AS REAL))) FROM rt1, rt0 WHERE (CAST(((x'')=('LC\r3*n')) AS REAL)); -- 0ms;
SELECT ((((0xffffffffb8fc9db4 IN (NULL))))<>((((rt0.c1)<<(rt0.c1))))), ((SUM(rt0.c1)) IS FALSE), LAG(CAST(rt1.c4 AS REAL), (+ (TIME(rt1.c4, rt1.c4, rt1.c1))), ((CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END)=((rt1.c3 IN ())))) OVER () FROM rt1 WHERE (((UPPER(DISTINCT NULL))-(CAST(x'b0cf' AS TEXT))));SELECT ALL (((NOT (rt0.c1))) NOTNULL) FROM rt1, rt0 LIMIT 578643153; -- 0ms;
SELECT DISTINCT ((((rt0.c2)GLOB(0.8741939252472437))) BETWEEN ((NOT (0.9687570372433865))) AND (LIKE(rt1.c4, rt1.c1))) FROM rt1, rt0 ORDER BY ((((rt1.c3, '-1574934181', rt1.c4))==((rt1.c0, rt1.c3, rt1.c0))) IN ()) ASC LIMIT 60628199 OFFSET -956911349; -- 0ms;
SELECT DISTINCT CASE ((rt1.c3) NOT NULL)  WHEN (+ (0.9742094853175586)) THEN COUNT(rt0.c0) ELSE (rt0.c0 IN ()) END FROM rt0 WHERE ('0.011021618512486953');SELECT DISTINCT TOTAL(NULL) OVER (), ((((((((((rt1.c4)OR(rt0.c1)))OR(rt1.c2)))OR(rt0.c0)))OR(rt0.c2)))IS NOT(((rt0.c1) IS TRUE))), (('-418294764') BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) IS TRUE))) FROM rt0, rt1 GROUP BY (- (rt1.c3)) COLLATE RTRIM, CASE rt1.c1 COLLATE BINARY  WHEN ((0X4e54818a)>(rt0.c1)) THEN HEX(rt0.c2) WHEN ((((((((rt1.c0)AND(rt1.c3)))OR(rt0.c1)))AND(rt1.c3)))OR(rt0.c1)) THEN ((((rt0.c1)AND(rt1.c4)))AND(rt1.c1)) WHEN ((NULL) NOT NULL) THEN (rt1.c3 IN ()) END, ((rt1.c2) NOT NULL) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c3) IS FALSE) THEN ((rt1.c4) IS TRUE) WHEN ((rt1.c0)<>(rt1.c3)) THEN MAX(rt1.c0) WHEN (rt0.c1 IN ()) THEN (~ (rt0.c2)) END FROM rt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (NULL) AND (5.2773417E8)) THEN ((x'de2a') BETWEEN (x'') AND (x'')) ELSE CAST(x'' AS INTEGER) END);SELECT ALL DENSE_RANK() OVER () FROM rt0, rt1 ORDER BY ((('', rt1.c3, rt0.c1, rt1.c1, rt1.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c2)), ((rt0.c1)>(rt1.c2)), CAST(rt0.c1 AS INTEGER), 1459061022, ((x'') IS FALSE))) AND ((TRIM(DISTINCT rt1.c2, rt0.c2), (~ (rt1.c1)), (- (rt1.c0)), CASE WHEN rt1.c4 THEN 0xffffffffe8c4dc05 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 END, ((rt0.c0)-(rt1.c2))))) ASC  NULLS LAST, ((((((((((((CAST(rt0.c0 AS REAL))AND(CASE rt0.c1  WHEN '4i侬6랈' THEN rt1.c1 ELSE rt1.c0 END)))OR(rt1.c4 COLLATE BINARY)))OR(rt1.c1 COLLATE NOCASE)))AND(CASE rt0.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c1 END)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt1.c1 ELSE 0.29043276472067103 END)))AND(rt1.c3)), ((CAST(rt1.c4 AS BLOB)) IS TRUE); -- 1ms;
SELECT ((MAX(rt1.c2))IS(rt0.c2 COLLATE BINARY)) FROM rt0, rt1; -- 0ms;
SELECT LIKELIHOOD(((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c0)), 0.904823893641517), CASE (- (rt1.c1))  WHEN (NOT ('')) THEN (+ ('-2075891103')) WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c2)) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))) THEN (((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) ELSE CASE rt1.c3  WHEN rt1.c3 THEN rt0.c1 ELSE rt1.c4 END END, rt0.c0 FROM rt0, rt1 WHERE (-9.2249925E7); -- 0ms;
SELECT DISTINCT ((((rt1.c0)%(rt1.c0))) IS FALSE) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((x'')) AND ((((rt1.c0)IS(rt1.c2))))), rt1.c2, ((MIN(rt1.c0)) BETWEEN (CASE rt0.c2  WHEN rt1.c3 THEN rt1.c0 END) AND ((rt0.c1 IN ()))) FROM rt1, rt0 LIMIT -1056515405 OFFSET 1381544913; -- 1ms;
SELECT (NOT (((((rt1.c0)AND(rt1.c3)))OR(rt0.c1)))) FROM rt0 RIGHT OUTER JOIN rt1 ON NULL; -- 0ms;
SELECT ALL TRIM(AVG(rt1.c3), rt0.c1) FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN (NOT (x'')) ELSE NULL END) LIMIT 53376192;SELECT DISTINCT ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt1.c0)<<(rt0.c0))) AND ((((rt1.c1))>=((rt1.c0))))) FROM rt0, rt1 WHERE (LIKELY(((('-141879357')) BETWEEN (('0.7968941895103644')) AND ((NULL))))); -- 0ms;
SELECT ALL CAST(rt1.c2 AS REAL) FROM rt1; -- 0ms;
SELECT DISTINCT (((COUNT(*)))>=((((((rt0.c2)AND(rt1.c2)))OR(rt1.c1))))) FROM rt1, rt0 WHERE ((- (CASE 0.15787622950536284  WHEN '<-4袱' THEN '}.' ELSE '㰘 ,#w<n' END))); -- 0ms;
SELECT COUNT(UNLIKELY(DISTINCT rt1.c4)) OVER (), CASE UNICODE(rt0.c0)  WHEN rt0.c0 COLLATE BINARY THEN CAST(rt1.c2 AS TEXT) WHEN ((rt1.c4) BETWEEN (rt0.c1) AND (rt1.c1)) THEN rt1.c0 WHEN rt0.c0 COLLATE NOCASE THEN ((rt1.c4) BETWEEN (rt1.c0) AND (0.6845045775837818)) END, (CAST(rt0.c2 AS TEXT) IN ()) FROM rt0, rt1; -- 0ms;
SELECT (((rt1.c1)) BETWEEN (((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c4))))) AND ((((rt0.c1)GLOB(rt0.c0))))), UPPER(DISTINCT LIKELY(rt1.c4)), CAST((rt0.c0 IN (rt1.c0, rt0.c1)) AS REAL) FROM rt1 WHERE ((('Ab')>>(-743591579)) COLLATE RTRIM);SELECT DISTINCT HEX(((rt1.c1)IS(0.21520542240972018))), HEX(0xffffffffed9d028d), TOTAL(CAST(rt0.c1 AS BLOB)) FILTER(WHERE (NOT ((- (']C'))))) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND json_object(((rt1.c3)<>(rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c3 END) PRECEDING), (+ (json_extract(rt1.c0, rt1.c3))), ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (COALESCE(DISTINCT rt1.c1, rt1.c1)) AND (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) FROM rt1, rt0 WHERE ((((NULL)GLOB('rp+\n-')) IN ()));SELECT DISTINCT ((((rt0.c0)-(x'6b64')))AND((rt1.c3 IN ()))) FROM rt0 WHERE (((CASE x'23bb'  WHEN 'FV' THEN NULL ELSE NULL END) NOTNULL)); -- 0ms;
SELECT ALL ((rt0.c2 COLLATE BINARY)IS NOT(((rt0.c0) NOTNULL))) FROM rt0, rt1 WHERE (((((((((x'0352')AND(0xffffffffee0378d5)))OR(0.5989034834214619)))AND(CASE WHEN NULL THEN x'' WHEN x'bb79' THEN NULL WHEN x'' THEN '1194562641' ELSE 531261595 END)))AND(''))); -- 0ms;
SELECT ALL (((CAST(rt1.c0 AS REAL)))<((((((((((rt0.c1)OR(rt0.c1)))AND(rt1.c1)))AND(0.2946071359994432)))AND(rt0.c2))))) FROM rt1 WHERE (((CASE WHEN '-693265248' THEN 1.413469851E9 ELSE x'261c' END)%((NULL IN ()))));SELECT ALL x'' FROM rt1 ORDER BY CAST(CAST(rt0.c0 AS NUMERIC) AS BLOB) ASC;SELECT ((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))<=(((rt1.c2)<=(rt1.c0)))), (((rt1.c4, rt0.c2, rt0.c1, rt1.c3, rt1.c4)) BETWEEN ((((rt1.c1) NOT BETWEEN (rt0.c1) AND ('1070270348')), ((((x'9770')OR('70#_')))OR(rt1.c1)), CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c3 END, ((rt1.c2) IS FALSE), (~ (x'')))) AND ((((rt1.c0) NOT NULL), ((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)), '' COLLATE BINARY, CAST(rt1.c3 AS TEXT), (rt0.c0 IN (rt0.c1, rt1.c4))))), 0xfffffffff2a048a6 FROM rt1;SELECT DISTINCT ((NULL) IS TRUE) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT AVG((NOT (0.7183008569275066))) OVER () FROM rt1 WHERE ('-0.0'); -- 0ms;
SELECT DISTINCT (((rt1.c2, x'', NULL)) BETWEEN ((COALESCE(DISTINCT rt1.c2, rt0.c0), ((rt1.c4) BETWEEN (rt1.c4) AND (0.8647442777967556)), ((rt1.c0)OR(rt1.c0)))) AND ((((((rt1.c0)OR(rt0.c0)))OR(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)), rt0.c0 COLLATE RTRIM))) FROM rt1;SELECT DISTINCT ((((((rt0.c2) NOT NULL))AND(GROUP_CONCAT(rt0.c0))))OR(rt1.c0 COLLATE NOCASE)) FROM rt1, rt0 WHERE ((- (SQLITE_COMPILEOPTION_USED(NULL)))); -- 0ms;
SELECT FIRST_VALUE(CAST((- (rt1.c4)) AS TEXT)) OVER () FROM rt1, rt0 WHERE (((((((((((x'f097')-('{ub>Y|v??')))AND((5.866109E8 IN ('.PSJFty텿', x'')))))AND((((x'')) NOT BETWEEN (('0.8557143182103597')) AND ((x'ef937fe8'))))))AND(CASE WHEN NULL THEN NULL END)))OR(NULL))); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM rt1, rt0 WHERE (CAST((((NULL))<((0.03950590303099122))) AS TEXT)); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt1 WHERE (NULL) ORDER BY ((((rt1.c0)AND(rt0.c1)))IS(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 END)), LTRIM(((((0.18875774417610325)AND(rt1.c1)))OR('-1539912722')), LIKELY(rt0.c2)) DESC  NULLS LAST;SELECT DISTINCT LOWER(DISTINCT rt1.c4 COLLATE NOCASE) FROM rt1 WHERE (NULLIF(DISTINCT json_array(NULL, '	vy钩l1fG'), ((((NULL)OR('[홦L')))AND(x'')))); -- 0ms;
SELECT DISTINCT ((NULL) ISNULL) FROM rt0, rt1 WHERE (((((((0.8177694330483621)AND(157755008)))OR(0.43804538881611876))) NOTNULL)); -- 0ms;
SELECT DISTINCT rt1.c4, (((rt1.c0 COLLATE BINARY, (('6L')>>(rt1.c2)), (- (rt0.c2)), (((rt0.c1)) NOT BETWEEN ((',	2god%')) AND ((rt1.c2))), (((rt0.c1))<((x'')))))<=(((rt0.c0 IN ()), CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 END, (- (rt0.c2)), ((rt1.c4) BETWEEN (rt0.c0) AND (rt1.c1)), CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))), ((rt1.c1)GLOB(rt1.c0)) COLLATE BINARY FROM rt1;SELECT DISTINCT ((AVG(rt0.c0))IS NOT(((((((((rt1.c1)OR(rt0.c0)))AND(1.65974472E9)))AND(rt0.c0)))AND(rt0.c0)))), (+ (((rt1.c0)<=(rt1.c0)))), ((MIN(rt0.c1)) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (((x'')<=(rt1.c1)))) FROM rt1, rt0 ORDER BY ABS(0.8852395397261252) ASC  NULLS LAST, ((rt0.c2)IS(rt0.c0)) COLLATE RTRIM ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((LIKE(rt1.c4, 0.5061951013461947, '0'))<(CASE WHEN rt0.c1 THEN rt1.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c4 END)) FROM rt1, rt0 WHERE (('-2020578342' IN (UNLIKELY(DISTINCT -379388800)))); -- 0ms;
SELECT DISTINCT UPPER(SUM(rt0.c2)), (rt0.c2 IN ()) COLLATE BINARY, (((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c1)) IN ()) FROM rt0; -- 0ms;
SELECT CASE (rt1.c2 IN (rt1.c4))  WHEN ((1645459395)<=('')) THEN COUNT(rt1.c0) END, x'', CASE MAX(rt0.c1)  WHEN rt0.c0 THEN '-948185552' COLLATE BINARY WHEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c1)) THEN json_array(rt1.c1, rt0.c2) WHEN (~ (rt1.c3)) THEN (+ (rt0.c1)) WHEN COUNT(rt1.c0) THEN ((rt0.c1)&(rt0.c1)) WHEN CAST(rt1.c1 AS BLOB) THEN TYPEOF(DISTINCT rt0.c1) ELSE ((rt0.c1)IS(rt0.c2)) END, CAST(3.04215002E8 AS NUMERIC), '941015842' FROM rt0 WHERE (((((LIKELY(-774123012))AND(((NULL) BETWEEN (0.08702774709946048) AND (-1173294615)))))OR(((0.20098470451253514) BETWEEN (x'5131') AND (0.5075201197822897))))) GROUP BY (((rt1.c0))>((rt1.c4))) COLLATE RTRIM, ((((rt0.c0)-(rt0.c1))) NOTNULL), COALESCE(DISTINCT (rt0.c1 IN (rt1.c2)), (rt0.c1 IN (rt0.c0, rt1.c1))), ((rt1.c0) NOT BETWEEN (((((((((rt0.c1)AND(rt1.c0)))OR(rt1.c2)))OR(0.7719908256973332)))AND(rt0.c2))) AND (0.39212653752308857)), rt1.c1;SELECT (NOT (NULL)) FROM rt1, rt0; -- 0ms;
SELECT (- ('|g5Z')) FROM rt1, rt0 LIMIT -1974697033 OFFSET -669843984; -- 0ms;
SELECT DISTINCT ((((x'')IS NOT(rt1.c1)))==(((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))), (((((rt1.c4 IN ()))OR(CAST(rt1.c0 AS INTEGER))))AND(((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)))), (((rt1.c4)) NOT BETWEEN ((CASE rt1.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 ELSE rt0.c1 END)) AND ((x''))) FROM rt0, rt1; -- 0ms;
SELECT ALL SUM(CASE rt1.c0  WHEN 'ujq脞C' THEN NULL ELSE rt1.c1 END) FROM rt0, rt1 WHERE (((('0.18335182374606507', 0.13533885914741806, 0xffffffffda3bb094)) BETWEEN ((CAST(0.30699532000658336 AS NUMERIC), ((((((((NULL)OR(x'')))AND(x'6d81')))OR(1.698860071E9)))AND(x'')), ((1229689814) IS TRUE))) AND (((((NULL, x'', NULL))<=(('\n	', 'U1R,-,', 0Xffffffffe98c58d8))), ((NULL) NOTNULL), ((0.1508235317373291)>=(',a')))))); -- 0ms;
SELECT ((((rt1.c0)*(x''))) BETWEEN ((rt1.c3 IN ())) AND (((((((((rt0.c2)AND(rt1.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))), HEX(((rt1.c0)-(x'8e4c'))), ((((rt1.c4)GLOB(rt1.c3))) NOTNULL) FROM rt0 LIMIT -1442489136;SELECT (- ((rt1.c1 IN ()))) FROM rt0 WHERE (CAST(((-1744875604)<(0.7838252036019279)) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((rt0.c0)+(rt0.c2)) COLLATE BINARY, ((((((((rt1.c4)OR(rt0.c0)))AND(rt1.c4)))OR(CASE rt1.c4  WHEN 0xffffffffb13472d4 THEN rt1.c4 WHEN rt1.c3 THEN NULL WHEN rt0.c2 THEN rt1.c0 END)))OR(((rt1.c0)LIKE(rt0.c2)))), (((rt1.c0)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((SUM(rt1.c3)))) FROM rt0 WHERE ((- (((NULL)<(1488822932)))));SELECT DISTINCT ((COUNT(''))OR(COUNT(*))) FROM rt1, rt0 LIMIT -1919785417 OFFSET 1698860071; -- 0ms;
SELECT DISTINCT ((rt0.c1)AND(((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt1, rt0 GROUP BY NULL HAVING ((((((((x'')AND(rt0.c0)))OR(rt0.c0)))OR((((rt0.c2)) NOT BETWEEN ((0.9162541794850251)) AND ((rt1.c4))))))AND(CASE 0.7281409925784085  WHEN rt0.c1 THEN rt1.c2 END)) ORDER BY ((((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2)))==(((rt1.c2)>>(rt0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((CAST(rt1.c3 AS TEXT), 0Xffffffff8e5e5a99, ((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3))))>(((rt1.c0 IN ()), ((rt0.c2)/(rt1.c1)), x'4306'))) FROM rt0, rt1 WHERE (((((('HHCDw)')<=('#F>eòW^'))))>(((('-1875093694') BETWEEN (x'') AND (x'51eb')))))); -- 0ms;
SELECT DISTINCT ((((TRIM(rt1.c4, rt0.c1))AND(PRINTF(rt1.c3, rt1.c2, rt0.c2))))OR(((('1990860523', rt1.c1, rt1.c4))>((rt0.c2, rt1.c2, rt0.c1))))) FROM rt1 WHERE (CASE WHEN CASE WHEN '-649895084' THEN '1508804434' WHEN '' THEN NULL WHEN '' THEN 0X3cf34043 END THEN ((((NULL)OR(0Xffffffffaabac6ce)))AND(x'')) ELSE (((('51R')OR('nsx濕i#p픥')))OR(0.8647442777967556)) END);SELECT ((CASE WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END) IS FALSE) FROM rt1;SELECT DISTINCT RTRIM(((rt0.c1)-('AM'))) FROM rt1 ORDER BY HEX(0.9207169579277722) COLLATE BINARY DESC  NULLS FIRST;SELECT DISTINCT CAST(NULL AS NUMERIC) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT ((rt1.c0)*(rt1.c4)) COLLATE RTRIM COLLATE NOCASE, (- (COUNT(rt0.c2))), CASE (NOT (0xffffffff903c5742))  WHEN MAX(rt1.c2) THEN rt1.c3 WHEN rt1.c3 THEN ((rt1.c0) IS TRUE) WHEN ABS(NULL) THEN COALESCE(DISTINCT 0Xffffffffb26ca318, rt1.c0) END FROM rt0 WHERE (((NULL) NOT BETWEEN ('1691714428') AND (NULL)) COLLATE BINARY);SELECT ALL (((SUM(rt0.c0)))>=((((rt1.c4) ISNULL)))) FROM rt0;SELECT DISTINCT (((rt0.c2) IS TRUE) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) FROM rt1 WHERE (IFNULL(DISTINCT -1.646947432E9 COLLATE BINARY, ((210161001) NOT NULL)));SELECT DISTINCT ((((rt0.c1)AND(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)))))OR(rt1.c0)) FROM rt1;SELECT ALL ((((NOT (rt1.c0))))>=((rt1.c4 COLLATE RTRIM))) FROM rt0 WHERE (((((json_insert(NULL, '964765418', x'', -1744875604, 'd(', '137058281', NULL))OR(('-6' IN ()))))AND(((x'b16d')%(0xffffffffe8c4dc05)))));SELECT '148425312' FROM rt0 WHERE (((((((NULL)LIKE('1725164397')))AND((- (NULL)))))AND(((((x'')OR(NULL)))OR(0.14354958175487276))))); -- 0ms;
SELECT ALL (((COUNT(*)))<>(((+ (rt1.c4))))), ABS(rt0.c2) COLLATE BINARY, LAST_VALUE(rt1.c2) OVER () FROM rt1, rt0 WHERE ((((-1691017935)) NOT BETWEEN ((((0.32170558527236237) ISNULL))) AND (((~ (0.19741613241869183)))))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt1; -- 0ms;
SELECT ((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((((((rt0.c0)OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c2)))AND(x'a192')))) FROM rt1, rt0 NOT INDEXED WHERE (((((((((((0x3d2eb644) IS FALSE))OR((x'' IN ()))))OR((('|EHBl7켢)q')=(1.26997797E8)))))OR('175742767' COLLATE NOCASE)))OR(((NULL)+(x'11546ed8'))))); -- 0ms;
SELECT DISTINCT ((NULLIF(DISTINCT rt0.c1, x''))+((- (rt1.c4)))) FROM rt1 WHERE ((((((NULL) BETWEEN (1325786697) AND (''))))!=(((0.8474948956887128 IN ('1152953600'))))));SELECT (((((((((((rt1.c3)OR(rt0.c2)))AND(rt0.c0)))OR(rt1.c4)))AND(rt1.c0))))<((rt1.c0 COLLATE BINARY))), MAX(((rt0.c1)LIKE(rt1.c3))), (TRIM(rt0.c1, '') IN ()) FROM rt1, rt0 ORDER BY (((((rt0.c2)OR(rt1.c4)))OR(rt1.c4)) IN ()) DESC LIMIT 343377309 OFFSET 638045986; -- 0ms;
SELECT (((((+ (rt1.c0)))OR(((rt1.c1)<>(rt1.c4)))))AND(rt0.c2)), (+ ((((rt1.c2))>=((rt0.c1))))), CASE ((rt1.c0) NOTNULL)  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1) NOT NULL) ELSE 'GV<2' END FROM rt1 WHERE ((NULL IN (json_type(NULL), (((0.2069127868250994))<=((0.6025901971636348))))));SELECT DISTINCT LIKELY(DISTINCT ((rt1.c4) NOT NULL)) FROM rt1; -- 0ms;
SELECT DISTINCT UPPER(rt1.c4) COLLATE RTRIM FROM rt1 WHERE (x''); -- 0ms;
SELECT ((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c0 END) NOT NULL) FROM rt1, rt0; -- 0ms;
SELECT ALL CASE (~ (rt1.c3))  WHEN ((((rt0.c1)AND(rt1.c4)))AND(rt1.c4)) THEN rt0.c0 ELSE ((rt1.c1)GLOB(rt1.c2)) END FROM rt0 WHERE (CAST('-1778179638' AS BLOB));SELECT ALL TOTAL(((rt0.c2) IS FALSE)) OVER () FROM rt1;SELECT TRIM(DISTINCT SUM(rt1.c0), ((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c0))) FROM rt1 WHERE (((((0Xffffffffcf56df8b) NOT BETWEEN (NULL) AND ('a>'))) NOT NULL));SELECT (('')&((rt0.c2 IN (0.4667190909849006)))), ((((((rt0.c1)OR(rt1.c4)))AND(rt1.c1))) BETWEEN (((rt1.c2) IS FALSE)) AND (((((rt1.c3)OR(rt0.c2)))OR(rt0.c1)))), (((NULL))>=(((~ (rt1.c4))))) FROM rt0, rt1; -- 0ms;
SELECT (((rt0.c0)) BETWEEN ((QUOTE(rt1.c1))) AND ((((rt1.c2)&(rt0.c2))))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c0)>(rt1.c0)))!=(((rt0.c1)-(rt0.c1)))), (((rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM)) AND ((rt1.c2 COLLATE RTRIM))), ((((((((((((rt1.c1)AND(rt0.c0)))OR(rt1.c3)))OR(NULL)))OR(rt1.c3)))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c0)))))AND(((rt1.c1) NOT BETWEEN (0.4799667065936907) AND (rt0.c2)))) FROM rt1 GROUP BY (((+ (rt1.c2)))*(CASE rt0.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END)) HAVING TOTAL(((x'') IS FALSE)) LIMIT 1962616400 OFFSET 1830767612;SELECT CAST(((rt1.c1)IS NOT(rt1.c3)) AS INTEGER) FROM rt0 WHERE ((((x'3acf' COLLATE RTRIM, ((0.21625665505520164) NOTNULL), ((x'')IS NOT(NULL))))>((x'', CAST(0.7043436888807072 AS NUMERIC), CAST(NULL AS REAL)))));SELECT DISTINCT CASE 'r/&L'  WHEN CAST('-285263052' AS INTEGER) THEN (rt1.c4 IN ()) WHEN ((rt1.c0)&(rt1.c0)) THEN ((rt1.c3)IS(rt1.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE x'' END THEN NULL ELSE ((rt1.c0)|(rt1.c4)) END FROM rt0, rt1 WHERE ((~ ((NULL IN ())))) GROUP BY '⇊dez[w' HAVING ((((((rt0.c2)GLOB(rt0.c1)))OR(((rt1.c2)>(NULL)))))OR((((NULL, 'd?', rt0.c1, rt1.c1, rt0.c0))>=((rt0.c1, rt0.c0, 0.8269224620496295, rt1.c3, rt1.c3))))); -- 0ms;
SELECT ALL RANK() OVER () FROM rt1 WHERE ((((('1673577685')AND('586610900')))/((((0.7618581875554463)) NOT BETWEEN ((-632844306)) AND ((0.40842173981099006)))))); -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c1)AND(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(x'ac9547f1')))AND(UNLIKELY(rt0.c2))))AND(rt0.c2)), CASE rt1.c4 COLLATE RTRIM  WHEN (rt1.c2 IN ()) THEN (rt1.c0 IN ()) ELSE (((rt0.c1))<((rt1.c1))) END, (rt0.c2 IN (rt0.c2, rt0.c2)) COLLATE RTRIM, LTRIM(((rt1.c4)%(rt1.c0))), rt1.c0 FROM rt0, rt1; -- 0ms;
SELECT ALL ((rt1.c3)GLOB(SUM('1677361182'))) FROM rt0 GROUP BY HEX(CASE WHEN rt1.c0 THEN rt1.c2 ELSE '1725164397' END);SELECT DISTINCT load_extension((rt0.c0 IN ()), '') FROM rt0 WHERE (((x'')OR(NULL)) COLLATE NOCASE COLLATE NOCASE) GROUP BY ((rt0.c0)IS NOT(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt1.c1 END)*(((rt1.c4)==(rt1.c1)))), rt1.c4, ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c4)))>=(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)))) FROM rt1, rt0 WHERE ((((((((x'650985b7')) BETWEEN ((NULL)) AND ((x'7620'))))AND('W5' COLLATE RTRIM)))OR(x'4857'))); -- 0ms;
SELECT ALL ((AVG(rt1.c0))LIKE(((rt1.c1) IS FALSE))) FROM rt1 WHERE (((('-144747912' IN ())) NOT NULL)); -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL) FROM rt0;SELECT ALL (- (rt0.c1 COLLATE BINARY)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((~ (rt0.c2))) BETWEEN (LENGTH(rt1.c4)) AND (((rt0.c2)!=(rt0.c0)))) FROM rt0, rt1 GROUP BY (((~ (rt1.c3)))*(((rt1.c1)<=(rt1.c3)))), ((((((((((((rt1.c4)OR(rt1.c2)))OR(rt0.c0)))OR(rt1.c0)))AND(rt0.c2)))AND(rt1.c0)))OR(rt1.c4)) COLLATE NOCASE, ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c3 END) NOT NULL) HAVING ((CAST(rt0.c2 AS REAL)) NOT NULL); -- 0ms;
SELECT ALL (((NOT (rt1.c2)))||((rt0.c2 IN ()))) FROM rt1, rt0 WHERE (CAST((- (x'')) AS TEXT)); -- 0ms;
SELECT (~ (rt0.c1 COLLATE BINARY)) FROM rt1;SELECT DISTINCT CASE WHEN ((((rt1.c1)OR(rt0.c2)))AND(rt1.c4)) THEN rt1.c1 END, SUM(CAST(rt1.c3 AS INTEGER)) OVER (), ((rt0.c0) NOT BETWEEN (GROUP_CONCAT(rt1.c4)) AND (((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c4)))OR(rt0.c2)))OR(rt0.c2)))), AVG(((rt1.c4) NOTNULL) COLLATE BINARY) OVER (), '-159224844' FROM rt0, rt1 WHERE (((((0.3079933207056388)OR('钇')))<('-626681465' COLLATE NOCASE))); -- 1ms;
SELECT DISTINCT (~ (CASE WHEN -1.999194788E9 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)), (((x'')<(rt0.c2)) IN (((rt0.c2)-(rt1.c2)))), (('p#lvl')IS NOT(CAST(rt1.c3 AS INTEGER))) FROM rt0, rt1 GROUP BY ((((rt1.c4)OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY HAVING LOWER(TRIM(DISTINCT rt1.c2)); -- 0ms;
SELECT LAG((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END IN (((rt1.c4)<=(rt1.c3)), rt1.c4 COLLATE BINARY)), ((('452434433', ((rt1.c3) IS FALSE), (((rt1.c1, x'', rt1.c3)) BETWEEN ((rt1.c0, rt1.c3, rt1.c2)) AND ((rt1.c2, rt1.c3, rt1.c2)))))!=((((rt1.c1)||(rt1.c1)), ((rt1.c2)>(rt1.c0)), (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))))), (((rt1.c3, rt1.c3, rt1.c3)) BETWEEN ((-0.0, rt1.c4 COLLATE RTRIM, x'')) AND (('-287603191', TYPEOF(rt1.c2), (((rt1.c0))>=((rt1.c3))))))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c3, rt1.c1, rt1.c1)) BETWEEN (((rt1.c3 IN ()), COALESCE(DISTINCT rt1.c2, rt0.c1), CAST(rt1.c4 AS BLOB))) AND ((-2.136177586E9 COLLATE RTRIM, (rt0.c0 IN ()), ((rt0.c1)IS(rt0.c0))))), CAST(COUNT(rt1.c3) AS INTEGER), CUME_DIST() OVER () FROM rt1, rt0 WHERE (((((NULL IN (x'26da', '-719353915')), ((0.6263390805467907)!=(NULL)), (0.2086221796577573 IN ())))>=((LIKELIHOOD(DISTINCT '홦k* Kf^', 0.6693769276167936), (~ ('\')), (((0.31417480895141536))=(('Ab'))))))); -- 0ms;
SELECT DISTINCT '|* [}a9]' FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c4 AS REAL))IS NOT((rt0.c0 IN ()))) FROM rt0, rt1; -- 0ms;
SELECT ALL ((CAST(rt1.c2 AS INTEGER)) NOT NULL), ((((rt1.c3 COLLATE RTRIM)OR(((rt1.c3) IS FALSE))))AND(0.3606972993331756)), (((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()) FROM rt0, rt1; -- 1ms;
SELECT TOTAL(((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c0))) OVER () FROM rt1 WHERE (x'');SELECT DISTINCT (- (CASE WHEN rt1.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN '-Infinity' THEN rt0.c2 ELSE rt0.c2 END)) FROM rt1, rt0 WHERE (UNLIKELY(DISTINCT ((NULL) BETWEEN (x'8612') AND ('')))); -- 0ms;
SELECT DISTINCT ((SUM(rt1.c4)) BETWEEN (SUM(rt1.c4)) AND (((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)))), TYPEOF(DISTINCT (((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c0)))), GROUP_CONCAT(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1))) FROM rt1, rt0 WHERE ((((x'' IN ()))<>(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT '1531135840' FROM rt0 WHERE (CASE WHEN CASE WHEN 0.041281602572688536 THEN x'1e79' ELSE 0.03792749534222528 END THEN ((NULL)LIKE(NULL)) END); -- 0ms;
SELECT DISTINCT ((((rt0.c1 COLLATE BINARY)AND(rt0.c2)))AND(CASE WHEN rt1.c0 THEN 0.774031011788844 ELSE rt1.c1 END)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN (((rt1.c3 IN ()))) AND ((TOTAL_CHANGES()))) FROM rt1;SELECT ALL (((((rt0.c0)AND(rt1.c3)))AND(rt1.c1)) IN ()) FROM rt1 WHERE (((9.64765418E8) IS TRUE)); -- 0ms;
SELECT DISTINCT '0jp(a0)', AVG(rt1.c0) OVER (), TOTAL(((rt0.c0)LIKE(rt1.c0))) FROM rt1;SELECT DISTINCT COUNT(CAST(rt1.c2 AS INTEGER)) FROM rt1, rt0 WHERE (load_extension(CAST('58601923' AS BLOB)));SELECT (((rt0.c1)<=(rt1.c2)) IN (((0.10707752652701497) IS FALSE))), NULL, rt0.c1 FROM rt0;SELECT ALL ((rt0.c1) IS FALSE) COLLATE NOCASE FROM rt1 WHERE (CAST((((0Xffffffffe501537f))>((NULL))) AS TEXT)) ORDER BY CAST(((0.7754194709819889)>(rt0.c2)) AS TEXT)  NULLS LAST;SELECT ALL ((rt0.c0) IS FALSE) FROM rt0, rt1 LIMIT -1166807508; -- 0ms;
SELECT DISTINCT '*|mQ昷' FROM rt0, rt1 WHERE ((((((x'') BETWEEN (x'') AND (x''))))=(((NOT ('-1442489136')))))); -- 0ms;
SELECT ((LTRIM(rt0.c2, x'64d9')) BETWEEN (LIKELIHOOD(rt0.c2, 0.3681497507575934)) AND (((x'f31e')>=(rt1.c3)))), CASE WHEN COALESCE(rt1.c0, rt1.c3) THEN UNLIKELY(rt1.c2) WHEN ((rt0.c1)!=(rt1.c2)) THEN ((rt1.c4)>>(rt1.c3)) WHEN ((rt1.c1)||('46T1230 1906T7880791010455153049:-9018157198511499106:-4736356611360535169-8696657576808743197-914520774002192294TPBxA')) THEN ((rt1.c1)>(rt1.c4)) ELSE (rt0.c1 IN ()) END, COUNT(*) COLLATE RTRIM FROM rt0, rt1 LIMIT 739491436 OFFSET 669169279; -- 0ms;
SELECT ALL CAST('0.8647442777967556' COLLATE NOCASE AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN rt1.c1 THEN rt0.c1 END)OR(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((((((rt0.c0)OR(rt1.c1)))AND(rt1.c4)))AND(rt1.c1)))OR(rt1.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND ('UlXj{7')))))OR(NULL)) FROM rt0 GROUP BY rt1.c0, (((((rt0.c1)OR(0.43845563710070434)))OR('-277553654')) IN ()), ((((((((CASE rt1.c4  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)OR(ABS(rt1.c2))))OR(((rt1.c3)>=(rt1.c0)))))OR(((rt0.c2)>(rt1.c0)))))OR(((rt1.c4)-(rt1.c4))));SELECT DISTINCT CAST(rt1.c2 COLLATE NOCASE AS NUMERIC) FROM rt0 ORDER BY (+ (x'd758')) LIMIT -1919785417 OFFSET 1972101937;SELECT TOTAL(rt1.c4 COLLATE RTRIM) COLLATE BINARY, ((((rt1.c1)|(rt1.c3)))*(((rt0.c1)GLOB(rt0.c0)))), ((((rt0.c0) IS TRUE)) IS TRUE) FROM rt0, rt1 WHERE (((NOT ('l&<~')) IN (NULL COLLATE BINARY, ((NULL)>=('-1574934181')), ((NULL) BETWEEN (0X2e638796) AND (0.4918610674345081))))); -- 0ms;
SELECT ALL LEAD((TRIM(DISTINCT rt1.c0, rt0.c1) IN ()), CASE WHEN LOWER(rt1.c1) THEN '-23323493' COLLATE BINARY ELSE x'5c0e' END, ((CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c0 END)>>((rt0.c0 IN ())))) OVER () FROM rt0, rt1 WHERE ((((NULL)) BETWEEN ((('624833004' IN ()))) AND (((((NULL))<>((NULL))))))); -- 0ms;
SELECT DISTINCT ((((rt1.c4)|(rt1.c1))) ISNULL) FROM rt0, rt1 INTERSECT SELECT ALL ((((((rt1.c2)/(rt0.c1)))OR(IFNULL(DISTINCT '1353644633', rt1.c3))))OR(COUNT(*))) FROM rt0 WHERE ((('-1258111180')<((~ ('[跉1a'))))) ORDER BY (((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))), ((CASE rt1.c4  WHEN x'' THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c3 ELSE rt1.c0 END) NOT BETWEEN (rt1.c3) AND (0.45725527026889523)) ASC  NULLS LAST;SELECT DISTINCT ((((335194003)AND(0Xffffffff80ac844e)))AND(rt0.c2)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT (- (CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c1 END)) FROM rt0 WHERE (((((((NULL)*(-1.321962796E9)))OR(LAST_INSERT_ROWID())))AND((- (NULL))))) ORDER BY (NOT (LIKELY(rt0.c1))) DESC, (- (((NULL) NOT BETWEEN (rt1.c2) AND (rt0.c2))))  NULLS LAST, ((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c3)))OR(rt0.c2)))AND(rt0.c2)))LIKE(LIKE(rt0.c1, rt1.c2, 'S')))  NULLS LAST LIMIT -1675790338;SELECT DISTINCT CAST(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 ELSE rt0.c0 END AS TEXT) FROM rt0 NOT INDEXED WHERE ((((0Xffffffffa6b56afa IN (0.03037254665492639, 0.4770750215082876)))OR(0Xffffffffa220695b COLLATE NOCASE)));SELECT (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt1.c3, rt1.c1, rt1.c4)) AND ((rt1.c1, rt1.c2, rt1.c1))) COLLATE BINARY FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ABS((('-308477299') NOT BETWEEN (rt0.c0) AND (rt1.c1))), (((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c3)))) ISNULL), '-2097407203' FROM rt0 LIMIT -1077870486;SELECT ((((rt0.c1)%(rt0.c2))) BETWEEN (((rt1.c4) BETWEEN (rt0.c2) AND (rt1.c1))) AND (((((rt1.c1)OR(rt0.c0)))AND(rt1.c0)))) FROM rt1 NATURAL JOIN rt0 WHERE (CASE '-1185800204'  WHEN (NOT (x'')) THEN CAST(x'' AS REAL) ELSE 'hhxd+H' COLLATE BINARY END); -- 0ms;
SELECT ((rt1.c2 COLLATE BINARY) BETWEEN ((((rt0.c2, '<L4w', rt1.c3))!=((rt1.c2, rt1.c0, rt1.c2)))) AND (((((rt0.c0)OR(rt1.c0)))AND(rt0.c2)))), ((CASE rt1.c0  WHEN NULL THEN '1598457704' END)IS NOT(CASE rt0.c1  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c4 END)), TRIM(x'') FROM rt0;SELECT DISTINCT ((0.4241525138484159)GLOB(DATETIME(rt0.c2, rt1.c0, rt1.c1))), rt0.c2, (((((rt1.c4)OR(rt1.c4)))OR(x'')) IN ()) FROM rt1, rt0 LIMIT -681573656; -- 0ms;
SELECT ALL PRINTF(CASE rt1.c1  WHEN rt0.c2 THEN rt0.c0 END, 0.462131996323787, COUNT(*), ((((rt1.c1)AND(rt1.c3)))AND(rt0.c0)), (((rt1.c0))<((rt1.c0)))) FROM rt1, rt0 WHERE ((- (((x'bfec')LIKE(NULL))))) GROUP BY CAST(((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0)) AS TEXT), rt1.c1, ((((rt1.c1 COLLATE NOCASE)OR(NULL)))AND(CASE WHEN 7.33316935E8 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 'ad' END)) HAVING x'' ORDER BY CAST((((rt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4)) BETWEEN ((rt1.c1, rt0.c2, rt0.c1, rt1.c1, rt1.c3)) AND ((rt1.c4, rt1.c4, rt0.c1, rt0.c2, rt1.c2))) AS INTEGER); -- 0ms;
SELECT DISTINCT ((((((((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 ELSE rt0.c1 END)AND(((rt1.c1)IS NOT(rt1.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.34344904554309064))))OR((NULL IN ()))))AND(((((((((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c1)))AND(rt0.c2)))AND(rt0.c2)))OR('')))OR(rt1.c3)))OR(rt1.c1)))), (((0xffffffff88a1d13f)) NOT BETWEEN ((((((rt0.c2)OR(rt1.c1)))OR(rt1.c1)))) AND ((rt1.c2 COLLATE RTRIM))), CAST(((rt0.c1) NOT NULL) AS INTEGER), ((MIN(0xffffffffbb1f7351)) NOT NULL), (((x'', 'G', rt1.c0, 'Y', rt0.c0)) BETWEEN ((((((((((rt0.c0)OR(rt0.c2)))OR(rt1.c3)))OR(rt1.c3)))OR(rt0.c2)), ((rt1.c2) NOTNULL), ((rt1.c3)=(rt1.c3)), ((((rt1.c0)OR(rt0.c1)))OR(rt0.c1)), rt0.c1 COLLATE BINARY)) AND ((rt0.c2 COLLATE RTRIM, ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c3 END, ((rt1.c0) NOTNULL), ((rt0.c0)LIKE(rt1.c1))))) FROM rt0 WHERE (DATETIME((('')>>('-1318593602')), (((NULL)) NOT BETWEEN ((0x17e3af34)) AND ((NULL))), (NOT (NULL)), highlight(0.1738381209241764, 0Xffffffffbc3c1292, NULL, NULL), x'9c58' COLLATE RTRIM));SELECT DISTINCT SUBSTR(load_extension(rt1.c3, rt1.c4), AVG(rt1.c4)) FROM rt0, rt1 WHERE (((((x'b9aa'))<(('f\r'))) IN (('' IN (NULL, x'')), (('-2086601538') IS TRUE)))) LIMIT -1887989714;SELECT DISTINCT (('-759349115')LIKE(UPPER(rt0.c0))) FROM rt0, rt1 GROUP BY (- (CASE WHEN '550052134' THEN rt1.c0 END)); -- 0ms;
SELECT (+ ((rt1.c2 IN ()))) FROM rt1 WHERE (CAST((((((((('-2057027')AND(0.7275222345060928)))OR(x'')))AND('2106283490')))AND(x'bdae')) AS INTEGER)) GROUP BY (rt0.c2 IN ()), (~ (((x'') NOT NULL))), CASE ((((((((x'')OR(rt1.c0)))AND(rt1.c1)))OR(x'')))AND(rt0.c2))  WHEN ((((rt0.c0)AND('TRUE')))AND(rt1.c0)) THEN ((((rt0.c1)OR(rt0.c2)))OR(rt1.c0)) ELSE (NOT (rt1.c4)) END LIMIT -1016817412;SELECT DISTINCT AVG(((rt1.c0)LIKE(rt1.c2))) FROM rt0 ORDER BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (0.10518535644253313) AND (rt1.c2));SELECT DISTINCT ((((rt0.c0) IS TRUE)) NOT BETWEEN (json_extract(rt0.c0, x'59b9')) AND (CAST(rt1.c1 AS REAL))), AVG(json_valid(rt0.c2)) OVER (), (((((((rt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))))OR(rt1.c4)))AND(MIN(rt0.c2, 0x3e371cc1))) FROM rt1, rt0;SELECT CASE WHEN ((rt0.c0) ISNULL) THEN TRIM(DISTINCT rt1.c2, rt1.c2) WHEN (rt0.c2 IN ()) THEN MAX(rt1.c2) WHEN ((rt1.c2) IS FALSE) THEN UNLIKELY(rt0.c2) END FROM rt0, rt1 WHERE (((((x'') NOT BETWEEN (0X4a976d30) AND ('-1269084077'))) NOT NULL)) GROUP BY (((rt0.c1)>=(rt1.c3)) IN ()), ((((rt1.c0)<=(rt0.c2))) IS TRUE), rt0.c2 HAVING CASE WHEN ((((rt1.c4)OR(rt0.c0)))OR(rt0.c2)) THEN (~ (rt1.c1)) END; -- 0ms;
SELECT DISTINCT CASE ((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c1))  WHEN ((rt0.c2) IS TRUE) THEN CAST(rt1.c2 AS INTEGER) WHEN CAST(rt1.c2 AS REAL) THEN ((rt1.c2)<<(rt1.c1)) WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) THEN rt1.c1 ELSE CAST(rt1.c3 AS NUMERIC) END, MAX((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))), MAX(TOTAL((rt1.c0 IN ()))) FROM rt0 GROUP BY (+ (((rt0.c2) IS FALSE))) HAVING ((((rt1.c4) NOT BETWEEN ('-1638980164') AND (rt1.c0)))<=(((rt1.c1)<<(rt0.c1))));SELECT DISTINCT ((CASE rt1.c1  WHEN rt1.c1 THEN rt0.c2 END)GLOB(LIKELIHOOD(DISTINCT rt0.c1, 0.6253116727751072))) FROM rt1, rt0 LIMIT 2073826284 OFFSET -399826268; -- 0ms;
SELECT ALL rt0.c2 FROM rt1, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c4)))GLOB(CAST(rt1.c4 AS TEXT))) FROM rt0;SELECT ALL 0.22859597666590714 FROM rt0, rt1 WHERE (((((((((1.82763466E9)OR(x'366d')))AND(0xffffffffc6beb716)))OR('脞1ꏍ㍇h발w')))OR(x'b909')) COLLATE BINARY); -- 0ms;
SELECT ALL ((((rt1.c0)IS(rt1.c1)))AND(((rt0.c2)/(rt1.c1)))), ((rt1.c2)||((- (rt1.c0)))), ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c4 END) NOT NULL) FROM rt1 WHERE (TRIM(DISTINCT CAST('wE' AS NUMERIC))) GROUP BY ((0xffffffffb9521ff4)>>((((rt0.c1))>((rt1.c1))))) HAVING ABS(((rt1.c2)=(rt1.c1))) LIMIT -1919785417;SELECT AVG(rt1.c4) FROM rt0;SELECT ALL CASE (+ (rt1.c1))  WHEN ((rt1.c4)*(rt0.c0)) THEN rt1.c4 WHEN (((rt1.c3))!=((rt0.c1))) THEN CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c1 ELSE rt0.c1 END WHEN ((rt1.c0) IS TRUE) THEN CASE WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 END ELSE ((rt0.c1) NOTNULL) END FROM rt1, rt0 WHERE (COALESCE(((x'12cc')||(5.3376192E7)), ((((((((NULL)OR(0.43332903577575577)))AND(-2081438597)))OR(x'')))OR(1.814720687E9)))); -- 0ms;
SELECT DISTINCT (+ (((rt1.c1)<(rt1.c2)))) FROM rt1 WHERE ((~ (CASE 0.7372537146065229  WHEN x'' THEN '-773177081' ELSE 0.4400228684876395 END))); -- 0ms;
SELECT ALL (((rt1.c3)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((((-7.19353915E8) NOT NULL)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt1.c2 AS REAL) THEN UNLIKELY(DISTINCT rt0.c0) END, TOTAL((NOT (rt0.c1))), ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c2))) BETWEEN (CASE rt1.c1  WHEN '936702666' THEN rt1.c2 WHEN rt1.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c1 END) AND (NULL)) FROM rt1 WHERE (((((NULL)AND(x''))) NOTNULL));SELECT ALL ((((rt1.c2) IS TRUE)) NOT BETWEEN (x'') AND (((((rt1.c0)AND(rt1.c2)))OR(rt0.c2)))), (((((rt0.c1, rt0.c0, rt1.c4)) NOT BETWEEN ((rt0.c1, rt1.c1, rt1.c4)) AND ((rt1.c2, rt1.c4, rt0.c1)))) IS FALSE), CAST(json_object(rt1.c3, rt0.c0, rt1.c2, rt0.c1) AS NUMERIC) FROM rt0, rt1;SELECT ALL CASE WHEN ((rt1.c0)<(rt0.c0)) THEN ((((rt1.c1)AND(rt0.c2)))OR(rt0.c1)) END FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((rt1.c2) NOT NULL) COLLATE NOCASE FROM rt1 WHERE (((((((NULL)OR(x'')))AND('-1612928565')))>('-703566955'))); -- 0ms;
SELECT DISTINCT ((((+ (rt1.c4))))=(((- (rt1.c1))))) FROM rt0 WHERE (((((NULL) IS FALSE)) NOT BETWEEN (('-1204539976' IN (x'd624'))) AND ((('') BETWEEN (-8.09987729E8) AND (NULL)))));SELECT DISTINCT SUM(rt0.c1) FROM rt1 WHERE ('cl');SELECT DISTINCT UNLIKELY(DISTINCT '788-239:0*'), '' COLLATE BINARY, ((SUBSTR(rt0.c0, rt0.c2)) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (MAX(rt0.c1))) FROM rt1 NOT INDEXED WHERE ((((('865620227')&(0X3c4d9f33)))<>((('') IS FALSE))));SELECT DISTINCT (((NOT ('lZ\n㉊Yt?D')))%(CAST(rt1.c2 AS INTEGER))), (NOT (NULL)), (((((((rt0.c0, x'', 1696833681))<>((rt1.c4, rt1.c2, rt1.c1))))OR(((((rt1.c2)OR(rt1.c2)))OR('')))))OR(((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c1)))) FROM rt0, rt1; -- 0ms;
SELECT ALL rt1.c3, rt1.c2 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY, (NOT (rt1.c2)) FROM rt1, rt0 LIMIT -719353915 OFFSET -864423016; -- 0ms;
SELECT ALL ((CAST(rt1.c2 AS TEXT)) NOT NULL) FROM rt0, rt1 WHERE ((((json_patch(0.8167024698811, 0xffffffffe5ea06d6)))>=((((-1.919785417E9) NOT BETWEEN ('0.34363662306985443') AND (x'')))))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND ('\n{* c')) WHEN CASE WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c1 END THEN CAST(rt1.c1 AS TEXT) WHEN MIN(rt0.c0) THEN rt0.c0 COLLATE NOCASE END FROM rt0 WHERE ((((NULL)) BETWEEN ((CAST(1459061022 AS REAL))) AND (((('') NOTNULL)))));SELECT ((((rt1.c2) IS TRUE))AND((((rt0.c2))<=((rt0.c1))))) FROM rt1 WHERE (((((0.5625378087410702)-('')))<(((x'dabe') BETWEEN (NULL) AND (0.04627103810218114))))) ORDER BY (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c0 END IN ())  NULLS LAST LIMIT -1638980164;SELECT (((((((((('-1510995148')OR(rt0.c0)))OR(rt0.c1)))AND(rt1.c3)))AND(rt1.c4)))>=(((((rt0.c1)AND(rt1.c2)))AND(rt1.c3)))) FROM rt0;SELECT DISTINCT CAST(rt0.c0 COLLATE BINARY AS INTEGER) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c1))) NOTNULL) FROM rt0;SELECT DISTINCT NTH_VALUE(((-1.7976931348623157E308 COLLATE BINARY) IS FALSE), (((rt1.c2 IN (0.11612851879345698))) NOT BETWEEN (((rt1.c2)LIKE(rt1.c1))) AND ((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((-1.919785417E9)))))) OVER () FROM rt1 WHERE (CASE WHEN (~ ('')) THEN NULL END); -- 0ms;
SELECT ((('(aWc') IS FALSE) IN ()) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c4) NOTNULL))LIKE(TOTAL(rt0.c2))), PERCENT_RANK() OVER (), CAST(((rt1.c0)GLOB(rt1.c1)) AS REAL) FROM rt1 WHERE (0.1637013096022768);SELECT DISTINCT rt1.c4 FROM rt1 WHERE (UPPER(DISTINCT x'')); -- 0ms;
SELECT DISTINCT TRIM((rt0.c1 IN (rt1.c4, rt1.c2)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))) FROM rt1, rt0 WHERE (((NULL)>>(NULL)) COLLATE BINARY); -- 0ms;
SELECT ALL (((rt0.c1, rt0.c1, rt1.c0)) NOT BETWEEN ((((-1.016817412E9)|(rt1.c4)), CAST(rt0.c0 AS BLOB), rt0.c1)) AND ((MIN(rt0.c0), MIN(rt1.c1), TOTAL(rt1.c3)))) FROM rt0, rt1 WHERE (((CAST(0.2069127868250994 AS INTEGER))-((('-1974697033')-(NULL))))) ORDER BY COALESCE(DISTINCT json_array_length(rt1.c2, rt0.c1), ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c3))) DESC  NULLS LAST, (((((((((NOT (rt1.c4)))AND((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))))AND((rt0.c1 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt0.c1)))))OR(((rt0.c2)==(rt1.c2)))) ASC  NULLS LAST; -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0, rt1 WHERE (CAST(0.8543436799263925 AS BLOB)); -- 1ms;
SELECT ALL COUNT(*) OVER () FROM rt1, rt0 WHERE ((('-816659283') BETWEEN (((0Xffffffffd146cd9b)IS NOT(x''))) AND (CASE WHEN -9.6525121E7 THEN NULL END))) EXCEPT SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c0 END) OVER () FROM rt1, rt0; -- 0ms;
SELECT GROUP_CONCAT(((rt1.c4) NOT NULL)) OVER () FROM rt0, rt1; -- 0ms;
SELECT SUM(((rt0.c1) BETWEEN (rt1.c1) AND (''))) OVER () FROM rt0, rt1 WHERE (((CAST(x'' AS BLOB))<(CAST('' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(DISTINCT rt0.c1, 0.8626813816450977))>=(CAST(rt1.c1 AS NUMERIC))), x'', QUOTE(MIN(rt0.c2)) FROM rt1 WHERE (((((((x'') BETWEEN (x'') AND (x'')))OR(NULLIF('', NULL))))OR((('0.6495837535848102') IS TRUE))));SELECT ALL ABS((+ (rt1.c4))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((CAST('527734170' AS TEXT))OR((+ (0.2136156318176956)))))AND((x'' IN (0.5114324024031016, '-956911349'))))) ORDER BY CASE ((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULL THEN ((rt0.c1)>=(rt1.c2)) ELSE ((((rt1.c1)AND(rt0.c2)))AND(rt0.c2)) END, ((((rt1.c1)OR(x'e058')))AND(rt1.c4)) COLLATE NOCASE ASC  NULLS LAST;SELECT DISTINCT ((((('FALSE' IN ()))AND('')))OR((((rt1.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))), ((CAST(rt1.c0 AS TEXT)) NOT NULL), (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c1))))GLOB((- (rt0.c1)))) FROM rt0;SELECT GROUP_CONCAT((rt0.c1 IN (rt1.c1))) OVER (), ((((((((((rt0.c0)||(rt1.c0)))OR(((rt1.c3) ISNULL))))OR(rt1.c4 COLLATE BINARY)))OR(CASE WHEN rt0.c1 THEN rt1.c0 END)))AND(INSTR(rt0.c1, rt1.c2))), ((((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) IN ()) FROM rt0, rt1; -- 0ms;
SELECT ((rt1.c0)+(rt1.c4)) COLLATE NOCASE FROM rt0, rt1 WHERE (IFNULL((+ ('638045986')), ((((x'')OR(x'')))AND(0.2946071359994432)))); -- 0ms;
SELECT LEAD((((rt0.c1)) BETWEEN ((('' IN (rt0.c0)))) AND ((((((rt1.c1)OR(rt1.c4)))OR(-1498060038))))), load_extension(CAST(rt0.c0 AS INTEGER)), ((rt0.c1)<(((rt1.c3)>=(rt1.c4))))) OVER () FROM rt0, rt1;SELECT (CAST(rt0.c2 AS NUMERIC) IN ()) FROM rt0, rt1; -- 1ms;
SELECT DISTINCT COUNT(*), (((((+ (rt0.c2)))AND(rt1.c0)))AND(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c1)))), ((((((((((rt1.c2) IS FALSE))OR(CASE rt1.c2  WHEN '-168828675' THEN rt0.c1 ELSE rt1.c3 END)))AND((NOT (0.8647442777967556)))))OR(CAST(rt1.c0 AS NUMERIC))))OR(((((rt1.c1)AND(rt1.c4)))AND(rt0.c2)))) FROM rt1, rt0 WHERE (CASE WHEN TYPEOF(NULL) THEN CAST(x'' AS REAL) WHEN ((NULL)GLOB(x'')) THEN ((0.007465315905460179) BETWEEN (0Xffffffff8f7a901f) AND (x'5c3af42e')) WHEN x'55a4' THEN '' COLLATE NOCASE ELSE CAST(0.5527425837538479 AS INTEGER) END); -- 0ms;
SELECT DISTINCT ((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END) IS FALSE) FROM rt1, rt0; -- 0ms;
SELECT (((((((((+ (rt1.c1)))OR(CASE x''  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c3 WHEN x'' THEN rt1.c0 WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c0 END)))OR(AVG(rt1.c2))))OR(((('-1041113330'))>((rt1.c3))))))AND(CASE WHEN rt1.c4 THEN rt1.c2 END)) FROM rt0, rt1 WHERE (((CASE 0.8989756010614304  WHEN '얔5' THEN x'6949' WHEN x'' THEN 0.9513637447596234 WHEN x'a6f7' THEN 0X4b2815a END) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOTNULL)) IS TRUE) FROM rt1 WHERE (JULIANDAY(SQLITE_SOURCE_ID(), 0.578495861206807, ((x'') NOT NULL), x'' COLLATE BINARY, TYPEOF(0.40919988696020615)));SELECT (NOT ((NOT (rt0.c1)))) FROM rt1 WHERE ((((('0.20415576465130258' COLLATE BINARY)OR(x'')))AND(((9.41015842E8)>('-1587667466')))));SELECT '' FROM rt0; -- 0ms;
SELECT FIRST_VALUE(LOWER(DISTINCT TOTAL_CHANGES())) OVER ( ORDER BY rt1.c2) FROM rt1; -- 1ms;
SELECT DISTINCT (((((rt1.c2)IS(rt1.c2)), ((1.459061022E9) ISNULL), -6.1147737E7))>((NULL COLLATE NOCASE, ((rt1.c3) ISNULL), IFNULL(DISTINCT rt1.c1, rt1.c1)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c3, ((0.20415576465130258) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c4))) AND ((((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))), SUM(((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4))) OVER (), (((rt1.c0 IN ()))AND(rt0.c0)), ((((((rt0.c2)IS NOT(rt1.c4)))OR(rt1.c2)))AND(CAST(rt1.c2 AS TEXT))), ((((- (rt1.c0)), CAST('OUK\坂' AS REAL), rt1.c3))==(((rt0.c0 IN ()), ((rt1.c1)<=(rt1.c1)), (('2[]I')GLOB(rt0.c0))))), CASE WHEN ((rt1.c1) IS TRUE) THEN (rt1.c4 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c0, '1543301426', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, '1085939320'))) WHEN NULL THEN CAST(rt1.c2 AS BLOB) ELSE LOWER(rt1.c0) END FROM rt1 WHERE (CASE WHEN CAST(0Xffffffffb13472d4 AS INTEGER) THEN ('1721964763' IN ()) ELSE ((((-1769392380)OR(NULL)))AND(NULL)) END);SELECT DISTINCT CAST(rt0.c1 COLLATE RTRIM AS INTEGER) FROM rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c3))))IS(load_extension('-809987729')))  NULLS LAST, UPPER(DISTINCT (NOT (x''))) ASC;SELECT ((rt1.c2)|(rt1.c3)) COLLATE NOCASE, ((rt1.c3 COLLATE NOCASE) ISNULL), x'' FROM rt1 WHERE (json((('')%('鼯a')))); -- 0ms;
SELECT DISTINCT HEX(DISTINCT rt1.c2 COLLATE NOCASE) FROM rt1; -- 0ms;
SELECT ALL (((rt0.c0)>=(rt1.c4)) IN ()) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CASE (~ (rt1.c2))  WHEN (('(If4')%(rt0.c2)) THEN ((rt1.c4)OR(rt1.c0)) ELSE LOWER(rt0.c1) END, ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM, rt1.c3, rt0.c1, SUM(CASE WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c2 END), CAST('1827634660' AS NUMERIC), (((((((((~ (rt0.c2)))AND(CAST(rt1.c4 AS REAL))))OR(COUNT(*))))OR(PRINTF(x''))))OR('941015842')) FROM rt1, rt0 WHERE ((NOT (x''))); -- 0ms;
SELECT DISTINCT ((((+ (rt0.c1))))<=((TOTAL(rt1.c0)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT TRIM(CASE rt1.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c3 END, (((rt0.c1, rt1.c1, rt1.c3, rt0.c0, rt1.c2))<=((rt0.c0, rt1.c4, rt1.c0, rt0.c0, rt0.c2)))), RANK() OVER (), ((((0.929096841558456)=(rt0.c2)))AND(COALESCE(rt1.c2, 0x3dc9ea8c, rt1.c0, rt1.c4))) FROM rt1, rt0 WHERE (((((((((0.6408303567259251)AND((+ (0.3209098995051588)))))OR(CASE 0.6950700443489713  WHEN '' THEN NULL END)))OR((((-1013094796))>=((x''))))))AND(CAST(0x4b6c7193 AS REAL)))) LIMIT 1332588589; -- 0ms;
SELECT DISTINCT NULLIF(x'' COLLATE NOCASE, CAST(rt0.c1 AS NUMERIC)), (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c2))))/((rt1.c4 IN ()))), ((((rt0.c1)%(rt1.c1)))<=(rt0.c2 COLLATE BINARY)) FROM rt1 WHERE (((((('tt?ᇵunp')OR(x'2f78')))OR(0x3fd12468)) IN (-3.08477299E8)));SELECT ALL (((rt1.c4)<=(rt1.c0)) IN ()) FROM rt0, rt1 LIMIT 931767362; -- 0ms;
SELECT DISTINCT (((+ (rt0.c2)))|(((((((((rt0.c1)OR(rt1.c4)))AND(rt0.c0)))OR(rt1.c2)))AND(rt1.c1)))), rt0.c0, (((((NOT (rt0.c2)))AND(((rt1.c1)IS NOT(rt0.c1)))))AND(rt1.c1)) FROM rt0;SELECT DISTINCT (PRINTF(rt0.c0) IN ()) FROM rt0, rt1 WHERE (((((((0.7027658963830755)IS NOT('&	(]\rg4ǿ')))AND(((0.4654061922633915) ISNULL))))AND(((x'1810') NOT BETWEEN (NULL) AND (x''))))); -- 0ms;
SELECT ALL TOTAL(TOTAL(((rt0.c0)-(rt1.c2)))) FROM rt0 WHERE (CASE NULL  WHEN 0Xfffffffffc5af5a7 THEN '8#' ELSE x'' END COLLATE BINARY) GROUP BY NULL;SELECT DISTINCT (((rt0.c1)>(rt1.c4)) IN ()) FROM rt1; -- 0ms;
SELECT ALL NULL FROM rt0; -- 0ms;
SELECT ALL 0.4918610674345081, CAST(CASE WHEN 0.6751017883552956 THEN rt1.c0 END AS REAL), CASE CASE rt1.c0  WHEN rt1.c4 THEN rt0.c1 ELSE rt1.c2 END  WHEN COUNT(*) THEN rt1.c0 WHEN ((rt0.c1)IS NOT(rt0.c1)) THEN (((0xffffffff9e4f25bc))<=((rt1.c1))) WHEN NULLIF(rt1.c0, rt1.c3) THEN ((rt1.c1) ISNULL) ELSE UPPER(DISTINCT rt0.c1) END FROM rt1, rt0 WHERE (NULLIF(((x'')<<(0.9722830391500942)), '0.9045294120768952')); -- 0ms;
SELECT ALL ((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c2)) COLLATE RTRIM, ((((((rt1.c0) IS FALSE))OR(SUM(rt0.c0))))OR(TYPEOF(rt0.c0))), UNLIKELY(rt0.c1) FROM rt1, rt0 WHERE (CASE ((-505739078) BETWEEN (-0.0) AND (NULL))  WHEN x'e06d' COLLATE NOCASE THEN CAST('' AS INTEGER) WHEN ((NULL)IS NOT('1134392060')) THEN ((0.9260628813439513) IS FALSE) WHEN COALESCE(DISTINCT x'4ff0', '', '454751811', x'') THEN (('Du') NOTNULL) END) ORDER BY (((((((((rt1.c4 IN ()))OR(CAST(rt0.c0 AS REAL))))OR(((((rt0.c0)AND('w倆mo7ni(.')))OR(rt1.c2)))))AND(((((rt1.c0)AND(rt1.c0)))OR(0.46095376528529697)))))OR(DATE(rt1.c0, rt1.c3, rt1.c3, rt1.c1, rt0.c1))) DESC  NULLS FIRST, '-1875093694' DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt0, rt1 WHERE (CASE (- (74237265))  WHEN (NULL IN ()) THEN CAST(NULL AS NUMERIC) END); -- 0ms;
SELECT CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (NULL)) AS INTEGER), ((rt0.c0 IN (rt1.c3)) IN ()), ((((rt0.c0)&(rt1.c3))) BETWEEN ((+ (rt0.c1))) AND (CAST(rt1.c3 AS TEXT))) FROM rt1 WHERE ((((('745572608') NOT BETWEEN (x'6eba') AND (NULL)))IS NOT((('FI?') NOT BETWEEN (-1.875093694E9) AND (1.116835273E9)))));SELECT ALL GROUP_CONCAT((('-1321962796') IS FALSE)) OVER () FROM rt1, rt0 WHERE ((((NOT (7.7827471E8)))<(((((x'')AND('878922488')))AND('a-jmbv'))))); -- 0ms;
SELECT DISTINCT (- (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt1, rt0; -- 0ms;
SELECT (((+ (rt0.c2)))!=((rt1.c0 IN ()))), RANK() OVER ( ORDER BY (((((rt1.c4)GLOB(rt1.c3)), CASE WHEN rt0.c0 THEN rt1.c3 WHEN 'k?' THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 END, ((((rt0.c0)AND(rt1.c4)))AND(rt0.c2))))<>((((rt1.c2) ISNULL), ((rt0.c0)GLOB(rt1.c0)), CAST(x'' AS INTEGER))))), (NOT ('')) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT (x'5b94' IN (((((((((rt1.c2)OR(rt0.c1)))OR(rt1.c2)))OR(x'')))OR(rt1.c1)))) FROM rt0 WHERE (((HEX(DISTINCT 0.4680626513418512)) NOT NULL)) GROUP BY (- (((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) HAVING (- (((rt1.c1)||(rt0.c2)))) LIMIT -554670762 OFFSET -1638980164;SELECT DISTINCT ((((((((((rt0.c0) NOT NULL))OR(MAX(rt1.c2))))OR(((rt1.c0)GLOB(rt1.c3)))))AND((rt1.c4 IN ()))))AND(rt1.c2)) FROM rt1; -- 0ms;
SELECT LEAD(((rt0.c1)AND(highlight(rt0.c0, rt0.c2, rt0.c2, rt0.c0))), ((rt0.c1) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c2)*(rt0.c2)))), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1 COLLATE NOCASE)))) OVER (), (('1496929370')<=(((rt0.c1)<(rt1.c0)))), ((NULL)&(x'6a6d')), (NOT (SUM(rt0.c0))), (((((((rt1.c4))<>((NULL))))OR(CAST(rt0.c0 AS REAL))))AND(((rt1.c0) ISNULL))) FROM rt0;SELECT DISTINCT CASE WHEN CASE WHEN rt0.c0 THEN '5z{园}vT' ELSE rt0.c2 END THEN ((rt0.c2)<=(0.5946645330593077)) WHEN ((rt1.c1) IS TRUE) THEN rt1.c2 WHEN TIME(rt0.c2, rt1.c3, rt0.c2) THEN (- (rt0.c2)) ELSE SUM(rt0.c2) END, 1.814720687E9, json_insert(((rt1.c3) BETWEEN (rt0.c2) AND (rt0.c2)), (0X70e0aacc IN (rt1.c3, rt1.c2)), ((0.9690524757909742) IS FALSE)) FROM rt1 WHERE (((((((' ')OR(NULL)))AND(-1.442489136E9)))IS(((0.47201235707615985) IS TRUE))));SELECT DISTINCT (((((((((((((((rt0.c1)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c1)))OR(rt0.c1)))OR(rt1.c4)))AND(rt1.c3)), CASE WHEN x'' THEN rt1.c0 ELSE rt0.c1 END, ((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0)), (NULL IN ()), CASE rt1.c1  WHEN rt0.c0 THEN rt0.c1 END))!=((CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c3 END, (('-238650706') NOT BETWEEN (rt1.c3) AND (rt1.c4)), (+ (rt1.c3)), ((((rt1.c4)AND(rt1.c4)))AND(rt1.c4)), rt0.c1))) FROM rt0, rt1; -- 0ms;
SELECT ((((((rt1.c2)AND(rt1.c2)))AND(rt1.c3)))|(((rt1.c2)<>(rt1.c0)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT '뤫*!d' FROM rt0 WHERE ((0.6707189122647673 COLLATE NOCASE IN ((('2119395114')/(0.37080315565461563))))); -- 0ms;
SELECT LIKELIHOOD(DISTINCT rt1.c1 COLLATE BINARY, 0.36557540600472826), CUME_DIST() OVER (), rt1.c4 FROM rt0, rt1 ORDER BY rt1.c4, (~ (CASE WHEN rt1.c3 THEN rt0.c2 END)) ASC  NULLS FIRST LIMIT 99118935 OFFSET 1757475730; -- 1ms;
SELECT DISTINCT (json_valid(rt1.c4) IN ()) FROM rt0 WHERE (TRIM(((0.6401044366323575) NOT NULL), ((x'7d74')|(NULL)))) ORDER BY 'nh' DESC, (((rt0.c2)LIKE(x'15f9')) IN ()) ASC  NULLS LAST, ((((rt0.c0) IS FALSE))/('-84746268')) DESC; -- 0ms;
SELECT DISTINCT AVG(((rt0.c1) IS TRUE)) OVER ( ORDER BY ((((((rt1.c3)<(rt1.c1)))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c3)))))OR(rt0.c1))  NULLS LAST) FROM rt1, rt0 LIMIT 1789434635 OFFSET -1321962796; -- 0ms;
SELECT (((((rt1.c2)<=(rt1.c1))))>=((((rt1.c1)IS(rt1.c1))))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (- (CAST(rt1.c2 AS TEXT))) FROM rt0, rt1 ORDER BY ((((((((rt1.c0)AND(CASE rt1.c3  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c2 END)))OR(((('-1934498756')) NOT BETWEEN ((rt1.c3)) AND ((0.09716119312766724))))))OR(((rt0.c2)IS(x'802d1f8c')))))OR(CASE WHEN rt1.c4 THEN rt1.c4 END)) ASC  NULLS LAST, ((((rt0.c1)*(rt1.c4)))LIKE(x'')) ASC  NULLS LAST, 0.3615849687379705  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CAST('-159224844' AS INTEGER)) NOT BETWEEN (((((rt1.c4)AND(rt1.c3)))OR(rt1.c3))) AND (((rt1.c2)|(rt1.c3)))), (- (((rt0.c0)IS(rt1.c3)))), ((INSTR(rt1.c2, rt1.c2))&(HEX(DISTINCT rt1.c3))) FROM rt1, rt0 WHERE (((0X58644f57) NOT BETWEEN (0.2588889039723097) AND ('-1798515098')) COLLATE RTRIM); -- 1ms;
SELECT CASE WHEN (((rt0.c2, x'', rt0.c2)) NOT BETWEEN ((rt1.c3, '-1875093694', rt1.c0)) AND ((rt1.c0, rt1.c1, rt0.c0))) THEN (((rt1.c2, NULL, rt1.c4))=((rt0.c2, rt1.c2, NULL))) ELSE ((rt1.c3) ISNULL) END FROM rt1, rt0; -- 0ms;
SELECT DISTINCT COUNT((rt0.c2 IN ())) OVER ( ORDER BY ((((rt1.c2) IS TRUE))==(((((rt0.c2)OR('')))AND(rt1.c4))))  NULLS LAST, rt1.c2 COLLATE RTRIM DESC) FROM rt1, rt0 NOT INDEXED WHERE (CAST('-1755019087' COLLATE NOCASE AS NUMERIC)) ORDER BY rt0.c1, (((rt1.c0 IN ())) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((((((((rt1.c0)OR(rt1.c4)))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c4)))) DESC, ((NULL COLLATE NOCASE) ISNULL); -- 0ms;
SELECT COUNT((+ (rt1.c2)) COLLATE BINARY) FROM rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB)) ISNULL) FROM rt0 GROUP BY (+ (x'')) HAVING ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (x'4b8f') AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c1)))) LIMIT 1027748579;SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT DISTINCT ((IFNULL(DISTINCT 0x70bcea31, rt1.c1))<=(NULL)), rt0.c1, ((((DATETIME(NULL, rt1.c3, rt1.c0, rt0.c2, rt0.c1))OR(CASE rt1.c2  WHEN rt0.c0 THEN x'' ELSE rt1.c3 END)))OR((+ (rt0.c0)))) FROM rt1 WHERE (CASE WHEN (((NULL))==((0.4643064099381484))) THEN 0xffffffffb168a2f3 COLLATE NOCASE END);SELECT ALL rt1.c4 FROM rt0, rt1; -- 0ms;
