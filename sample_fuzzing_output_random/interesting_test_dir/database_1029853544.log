-- Time: 2024/06/07 19:00:33
-- Database: database44
-- Database version: 3.40.0
-- seed value: 1029853544
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=0.3951914331405708; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c2, c3, c4) VALUES (NULL, '', 0.3951914331405708, '-847585579'), ('/', 'a!Fl-I', x'', NULL), (NULL, NULL, 0.34937410129864277, 0.31826107559560735); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c3, c1) VALUES (-414233333, CASE ((NULL)IS(0.6536060877692805))  WHEN CAST('-900938657' AS INTEGER) THEN (~ (x'')) ELSE CAST(x'5966' AS BLOB) END, x'60a9'); -- 1ms;
SELECT rtreecheck('rt1'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 8ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '61815'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c3, c4) VALUES (0.1896189602410936, 0xffffffff91846601, NULL, x'ab20'); -- 1ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x''); -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.4062287210635319), (NULL), (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1286626950); -- 0ms;
INSERT OR FAIL INTO rt1(c0) VALUES (NULL), (0.19035858047087828), (''); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c3) VALUES (0.2659753182695149, x'', x''); -- 0ms;
PRAGMA application_id; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c3, c2) VALUES (0.2659753182695149, 0.8639730599026159, x''); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR ABORT rt1 SET (c2)=('1692878299'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 9ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1173'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 419045098); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
DROP TABLE IF EXISTS vt0; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT LOWER(((((((((rt1.c3)AND(rt1.c4)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c0))) FROM rt1 WHERE ((((((x'a98c')OR('-847585579')))AND(0.9686090721262763)) IN (((NULL)<=(x'fee6')), 0x747caca))); -- 0ms;
SELECT DISTINCT json(((((rt1.c4)AND(rt1.c0)))AND(rt1.c0))) FROM rt1 WHERE (ABS(((x'6df1654d')<>(459491586)))); -- 1ms;
SELECT CASE (rt1.c0 IN ())  WHEN CASE ''  WHEN NULL THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN 0xffffffffe74f4d0b END THEN ((-1.853594111E9)GLOB(rt1.c3)) WHEN DATE(rt1.c0, rt1.c2, rt1.c2) THEN ((((rt1.c4)OR(rt1.c1)))AND(0.8096998128708357)) WHEN ((rt1.c2)>=(rt1.c1)) THEN LOWER(rt1.c0) END FROM rt1; -- 0ms;
SELECT DISTINCT (rt1.c0 COLLATE NOCASE IN ()), NULL, ROW_NUMBER() OVER () FROM rt1; -- 0ms;
SELECT ALL SUM(rt1.c2) OVER () FROM rt1 WHERE ((((((('122145482')OR('7zx#昐U')))OR(-1051447027)))/((('aG') NOT BETWEEN (NULL) AND (x''))))); -- 0ms;
SELECT NULL FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c0)/(rt1.c3))) NOTNULL) FROM rt1 WHERE (((NULL COLLATE RTRIM)%((+ (0xffffffffde3415a6))))); -- 0ms;
SELECT ((((rt1.c3))=((rt1.c0))) IN ()) FROM rt1 WHERE (((((((((((x'')AND(NULL)))OR('7zx#昐U')))OR('-2053074003')))AND(NULL)))IS NOT(CASE WHEN 0X747caca THEN x'' ELSE 0x5dcd683b END))); -- 0ms;
SELECT DISTINCT (~ (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))) FROM rt1 WHERE (TRIM(x'53fe', x'') COLLATE RTRIM) ORDER BY (((((rt1.c2)AND(rt1.c3)), (rt1.c3 IN (rt1.c0)), rt1.c3))==((CASE NULL  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c1 END, ((rt1.c0)!=(rt1.c2)), CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c0 END))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(UPPER(rt1.c0)) FROM rt1 WHERE (((UNICODE(''))*(0xffffffffe74f4d0b))); -- 1ms;
SELECT CASE (((rt1.c1, NULL, rt1.c0))>=((rt1.c1, rt1.c2, rt1.c3)))  WHEN rt1.c2 COLLATE NOCASE THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)) WHEN ((((((((rt1.c4)AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c3)))OR(rt1.c4)) THEN ((rt1.c4) ISNULL) WHEN CAST(rt1.c1 AS NUMERIC) THEN (rt1.c0 IN ()) ELSE (((NULL)) NOT BETWEEN ((rt1.c1)) AND ((x'9045'))) END FROM rt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)||(rt1.c1)), ((SQLITE_VERSION()) IS TRUE), rt1.c1 FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1))=((rt1.c3))) IN ()) FROM rt1 WHERE (((((((((x'2bcb')OR(x'9000' COLLATE BINARY)))OR(CAST('FALSE' AS BLOB))))AND((((-1.051447027E9)) BETWEEN ((NULL)) AND (('616153941'))))))AND(((NULL) NOT BETWEEN ('') AND (''))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt1 WHERE (((NULL COLLATE NOCASE) BETWEEN (((-1.994037744E9)|(''))) AND (CASE NULL  WHEN 0X1924c3fc THEN '1692878299' ELSE NULL END))); -- 0ms;
SELECT ((0.17003532541369948) ISNULL) COLLATE BINARY FROM rt1 WHERE ((NOT (((NULL) BETWEEN (x'') AND (x''))))) ORDER BY (((CAST(rt1.c4 AS NUMERIC)))<>((CAST(rt1.c3 AS INTEGER))))  NULLS LAST; -- 0ms;
SELECT (rt1.c4 COLLATE NOCASE IN ()) FROM rt1 LIMIT -1853594111; -- 0ms;
SELECT ALL MIN((((rt1.c1, rt1.c0, rt1.c0)) BETWEEN ((rt1.c2, rt1.c3, '-696272033')) AND ((rt1.c0, rt1.c1, rt1.c0)))), LEAD(rt1.c3, ((LIKELY(DISTINCT rt1.c4))<(CAST(rt1.c0 AS NUMERIC))), (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ())) OVER (), ((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)) COLLATE RTRIM FROM rt1 WHERE (CASE (((('r[D')OR(NULL)))AND('715054176'))  WHEN ((x'14a2')+(0.30544914028909453)) THEN (+ (x'')) WHEN (+ ('6Jde')) THEN ((x'2c37')>=(NULL)) WHEN (((0.9443797401097781, x'4caf', x'24fd', '406750226', '')) NOT BETWEEN (('Z''昁8', '6jde', NULL, '-1594168313', NULL)) AND ((0xffffffffb24c774b, '', '?[]d', '-900938657', 0x5b7b4db))) THEN (('烙yG -Vy') IS TRUE) ELSE (NOT (NULL)) END); -- 0ms;
SELECT ALL ((SUM(rt1.c2)) IS FALSE) FROM rt1; -- 0ms;
SELECT DISTINCT (rt1.c0 COLLATE BINARY IN (AVG(rt1.c3))) FROM rt1 WHERE ((((((((((616153941)AND(NULL)))OR(NULL)))AND(0xffffffffd10aa70d)))AND(NULL)) IN ())); -- 0ms;
SELECT DISTINCT (~ (((rt1.c2) IS TRUE))) FROM rt1 WHERE (((NULL)GLOB((- (430347088))))); -- 0ms;
SELECT ALL (+ (CAST(x'6d93' AS TEXT))), '', ((((((0.5801314479584648)OR(rt1.c0)))AND(rt1.c1))) IS TRUE), ((CAST(rt1.c2 AS REAL))-(rt1.c2 COLLATE BINARY)), ((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 END)GLOB((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))) FROM rt1; -- 0ms;
SELECT 'b쫊JG' FROM rt1 WHERE (((0.19035858047087828 COLLATE NOCASE) BETWEEN (NULL) AND (((x'') IS FALSE)))); -- 0ms;
SELECT ALL ((('._re'))<=((((((rt1.c4)AND(rt1.c1)))AND(rt1.c3))))) FROM rt1 WHERE (CASE ((NULL)AND('-1915304119'))  WHEN CAST(0Xffffffff8dd6c749 AS NUMERIC) THEN ((1243860325) NOTNULL) END); -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1 GROUP BY (((rt1.c0)GLOB(rt1.c4)) IN ()), CHANGES(), (((rt1.c2)) NOT BETWEEN ((TYPEOF(DISTINCT rt1.c4))) AND ((((rt1.c0)&(rt1.c1))))) HAVING (((rt1.c0 IN (rt1.c3)))<<(((rt1.c0) IS FALSE))); -- 1ms;
SELECT ALL (NOT (LIKE(rt1.c1, rt1.c4))), 0.7125136984442664, CAST(rt1.c1 AS INTEGER) COLLATE BINARY, (((((rt1.c0))<((rt1.c3)))) IS TRUE), (((((NULL, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c3, rt1.c1))))AND(((((((((NULL)OR(rt1.c2)))AND(rt1.c1)))AND(NULL)))OR(rt1.c0)))) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1; -- 0ms;
SELECT (NOT (rt1.c1 COLLATE RTRIM)) FROM rt1 WHERE (ROUND(CASE -4.14233333E8  WHEN '1827568824' THEN -0.0 END, ((('-567011930', 0.5839910671211266, '-787831027'))==((2887184, 0Xffffffffcf1f2e39, 0.8249762164812171))))); -- 0ms;
SELECT CAST((- (rt1.c1)) AS TEXT) FROM rt1; -- 0ms;
SELECT ALL json_array(((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)), COALESCE(DISTINCT rt1.c4, rt1.c2)) FROM rt1 WHERE (CASE (('-2105457478') NOT NULL)  WHEN (((((((('0.9686090721262763')OR(0.5801314479584648)))OR(0.5590143213216093)))AND(0Xffffffffab6139ed)))OR('1347563142')) THEN (((((((('1872626724')AND(NULL)))AND(NULL)))OR(x'')))OR(95925467)) WHEN ((NULL) NOT NULL) THEN ((NULL)>>('')) WHEN ((NULL)IS(x'')) THEN (+ (0.4701487291318249)) ELSE CAST('' AS TEXT) END); -- 0ms;
SELECT DISTINCT ((rt1.c1) ISNULL) FROM rt1 WHERE ((((((((((('0.9686090721262763')LIKE(1289068673)))AND(((NULL) NOT BETWEEN ('RCU.A') AND (NULL)))))OR(CASE 0.2720455111228519  WHEN 1.347563142E9 THEN NULL ELSE 'ㄍ' END)))AND(((NULL)<<(x'8c1b')))))OR(UPPER(DISTINCT '/')))); -- 0ms;
SELECT DISTINCT ((rt1.c0 COLLATE NOCASE)GLOB(((rt1.c1)%(rt1.c3)))) FROM rt1 WHERE ((- (((0Xffffffffd2d1fa3c)>>('-1915304119'))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1; -- 1ms;
SELECT DISTINCT TOTAL(((((rt1.c3)AND(rt1.c1)))AND(rt1.c2))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ((AVG(rt1.c3))*(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1)))), ((rt1.c3 COLLATE BINARY)IS((rt1.c0 IN ()))), CAST(CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN x'c37f' THEN 0xffffffff97351770 WHEN rt1.c2 THEN '0.6536060877692805' ELSE rt1.c1 END AS INTEGER) FROM rt1 WHERE ((~ (((x'')IS(0x45c4917e))))) ORDER BY (rt1.c0 COLLATE RTRIM IN ((((rt1.c4, rt1.c3, rt1.c2)) NOT BETWEEN ((NULL, x'', rt1.c1)) AND ((rt1.c2, rt1.c3, rt1.c3))), (NOT (rt1.c2))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT LAST_VALUE(rt1.c2) OVER () FROM rt1; -- 0ms;
SELECT CAST((NOT (rt1.c3)) AS BLOB), TOTAL(((((rt1.c4)OR(rt1.c2)))OR(rt1.c1))), DENSE_RANK() OVER () FROM rt1 WHERE (((((0.07066297301554159)AND(0.5478087115823663)))AND(0.7411357332276955)) COLLATE NOCASE); -- 0ms;
SELECT GROUP_CONCAT((rt1.c1 IN ())) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT CASE '1314801394'  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))) THEN ((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)) WHEN ((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c0)) THEN (rt1.c4 IN (rt1.c2, rt1.c4)) WHEN HEX(rt1.c2) THEN CASE WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END ELSE rt1.c1 COLLATE RTRIM END, CASE WHEN ((rt1.c2)<>(rt1.c2)) THEN ((rt1.c3)OR(rt1.c0)) ELSE ((rt1.c1) NOT NULL) END, (((rt1.c0)) NOT BETWEEN ((((rt1.c2)<=(rt1.c2)))) AND ((rt1.c4))) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c4)/(rt1.c1)))==(COUNT(*))), ((rt1.c1) NOTNULL), rt1.c3 FROM rt1 WHERE (((((((((((((ROUND('1289068673', x''))AND(DATETIME('*R', '1170510206', 0.1952265524289909, 0.8741957143938555, 'xjZ*', NULL, 'Vpx''k?cU]'))))OR(((0.0687199289994761) NOT BETWEEN (x'') AND (NULL)))))AND(IFNULL(DISTINCT 0.17003532541369948, '-2053074003'))))AND(1845020351 COLLATE NOCASE)))OR(-1609048980)))AND(((0.9774119446738181)>(NULL))))); -- 0ms;
SELECT ALL ((- (rt1.c4)) IN ()) FROM rt1 ORDER BY ((((rt1.c2)GLOB(rt1.c2))) NOT NULL) DESC  NULLS LAST, rt1.c3 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT 1845020351, CAST(CASE WHEN NULL THEN rt1.c2 END AS TEXT), ((((((((((rt1.c1) ISNULL))AND((- (rt1.c0)))))AND(((rt1.c0)GLOB(rt1.c3)))))OR(((rt1.c1)>=(rt1.c1)))))OR((rt1.c2 IN ()))) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE BINARY FROM rt1 ORDER BY MIN((rt1.c1 IN ()), LTRIM(rt1.c3)) ASC, ((((TIME(rt1.c3, rt1.c1, '2887184'))OR(((((rt1.c2)OR(rt1.c0)))AND(rt1.c3)))))AND(((rt1.c3)%(rt1.c1)))); -- 0ms;
SELECT DISTINCT ((((((-7.57990852E8)OR(rt1.c2)))AND(rt1.c1 COLLATE NOCASE)))OR(json_insert(x'8ca2', rt1.c2, rt1.c2))) FROM rt1;SELECT ALL TOTAL(CASE rt1.c4  WHEN 0Xffffffffb0ddc60b THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END) FROM rt1; -- 0ms;
SELECT (- (((rt1.c2)LIKE(rt1.c0)))) FROM rt1 GROUP BY CAST(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END AS TEXT) HAVING TYPEOF(DISTINCT rt1.c1) COLLATE RTRIM; -- 0ms;
SELECT ALL ((MIN(rt1.c4))>(rt1.c4 COLLATE NOCASE)) FROM rt1; -- 0ms;
SELECT ALL rt1.c2 FROM rt1 GROUP BY CASE rt1.c1  WHEN ((rt1.c1) NOT NULL) THEN CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 END WHEN 1.573742651E9 COLLATE NOCASE THEN rt1.c1 WHEN CASE WHEN rt1.c4 THEN rt1.c3 END THEN CASE WHEN rt1.c2 THEN '' WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 END END; -- 0ms;
SELECT rt1.c1 FROM rt1 WHERE (CASE WHEN NULL THEN NULL WHEN x'' THEN x'' WHEN 0.493821916191711 THEN x'' WHEN '1690300500' THEN '-1361074502' WHEN NULL THEN '1690300500' END COLLATE NOCASE); -- 1ms;
SELECT DISTINCT 0.3017910035277901 FROM rt1 WHERE (((x'') NOT BETWEEN (NULL) AND (0x45d754f1)) COLLATE BINARY) ORDER BY UNLIKELY(0.9538313962786584) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT ((rt1.c3)/(rt1.c0)), load_extension(rt1.c4)), ((CAST(rt1.c2 AS INTEGER))LIKE(x'')), GROUP_CONCAT(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c0 END) FROM rt1 GROUP BY (((rt1.c3, rt1.c0, rt1.c1)) BETWEEN ((CASE WHEN rt1.c1 THEN rt1.c0 END, CAST(rt1.c1 AS NUMERIC), CASE 0.8249762164812171  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END)) AND (((rt1.c0 IN ()), CASE rt1.c0  WHEN rt1.c3 THEN '1573742651' WHEN NULL THEN rt1.c4 WHEN rt1.c3 THEN x'' WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c2 END, ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0))))) HAVING CASE WHEN ((rt1.c1)*(rt1.c2)) THEN COUNT(rt1.c3) WHEN AVG(rt1.c4) THEN (- (rt1.c3)) WHEN x'' COLLATE NOCASE THEN ((rt1.c3)>(rt1.c2)) END; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((rt1.c4)<>(rt1.c0))), CAST((rt1.c3 IN ()) AS BLOB), ((((((((((rt1.c3) ISNULL))OR(MIN(rt1.c1))))AND(((rt1.c1)||(rt1.c0)))))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c4 THEN x'' END)))AND(CASE WHEN rt1.c4 THEN rt1.c4 WHEN x'4260' THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 END)), FIRST_VALUE(((((((((((rt1.c2)OR(rt1.c0)))OR(CAST(rt1.c4 AS NUMERIC))))AND(HEX(rt1.c2))))OR(rtreenode(rt1.c4, rt1.c0))))OR(rt1.c0 COLLATE BINARY))) OVER (), rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c0, 0.6063817285161249, DATE(((rt1.c1) NOT NULL), rt1.c0 COLLATE NOCASE, CAST(rt1.c3 AS INTEGER)), (NOT (rt1.c2)), ((((rt1.c4)<(rt1.c1))) NOT BETWEEN (rt1.c3) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))) FROM rt1 LIMIT 1692878299; -- 0ms;
SELECT x'8998', CAST(((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c4)))OR(rt1.c4)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)) AS NUMERIC), ((((SQLITE_COMPILEOPTION_GET(0.9312761344148625))OR(MIN(''))))OR(rt1.c4 COLLATE NOCASE)) FROM rt1 WHERE (((LAST_INSERT_ROWID()) NOTNULL)); -- 1ms;
SELECT ALL AVG(('LPKB Q%F' IN ())) OVER () FROM rt1 WHERE ((~ ((((x'd2c0'))<=((x'')))))); -- 0ms;
SELECT DISTINCT CASE JULIANDAY(rt1.c2, rt1.c4, '')  WHEN ((rt1.c2)LIKE(rt1.c3)) THEN (NOT (rt1.c2)) WHEN CAST(rt1.c2 AS BLOB) THEN (((rt1.c0)) NOT BETWEEN ((0Xffffffffca4cc45f)) AND ((rt1.c3))) WHEN CAST(rt1.c4 AS NUMERIC) THEN COUNT(rt1.c4) END FROM rt1; -- 0ms;
SELECT ALL INSTR(((((0x56c01352)AND(rt1.c0)))OR(rt1.c1)), ((rt1.c3) NOT NULL)) FROM rt1 WHERE (((('-1853594111')) BETWEEN (('-1327643125')) AND (('-1419691539'))) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT LAG(CAST(rt1.c2 AS BLOB), ((CAST(rt1.c0 AS REAL))&((NOT (rt1.c1)))), (((rt1.c0)|(rt1.c0)) IN ((- (rt1.c4))))) OVER () FROM rt1 WHERE (((((-1.594168313E9) NOTNULL)) BETWEEN (((0.9443797401097781) NOT NULL)) AND ((((('-292074242')AND('0.9443797401097781')))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((((((((CAST(rt1.c1 AS TEXT))AND(((((rt1.c3)AND(0Xffffffffaedfa6ba)))AND(rt1.c4)))))OR((((rt1.c1))==((rt1.c4))))))AND(CAST(rt1.c0 AS INTEGER))))AND(rt1.c0 COLLATE BINARY)) FROM rt1 WHERE ((x'' IN ()) COLLATE RTRIM) ORDER BY CASE WHEN ((rt1.c4)==(rt1.c3)) THEN rt1.c0 WHEN ((rt1.c3)>=(rt1.c4)) THEN NULLIF(DISTINCT rt1.c0, rt1.c2) WHEN ((rt1.c1)=(rt1.c2)) THEN ((rt1.c3)GLOB(rt1.c2)) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c0)))>=(((rt1.c0)IS NOT(rt1.c3)))) FROM rt1 WHERE (((CAST(x'' AS INTEGER))IS NOT(((((((((NULL)AND(NULL)))AND(x'e601')))AND(NULL)))OR('-68577609'))))); -- 0ms;
SELECT rt1.c3, (- (rt1.c1)) COLLATE NOCASE, ((((((((LOWER(rt1.c3))AND(COUNT(*))))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c4)))))OR(rt1.c3 COLLATE NOCASE)))OR(x'' COLLATE BINARY)) FROM rt1 WHERE (((1.455428434E9)+(603408836)) COLLATE BINARY COLLATE NOCASE); -- 1ms;
SELECT (rt1.c0 COLLATE RTRIM IN ()) FROM rt1 WHERE ((((((('-1361074502') IS FALSE))AND((0.7125136984442664 IN ()))))AND(NULLIF(1584580547, 0.2886649340157249)))); -- 0ms;
SELECT DISTINCT (rt1.c0 IN ()) FROM rt1 GROUP BY (((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))) IS TRUE), CAST(((rt1.c2) ISNULL) AS INTEGER), CAST(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c3)) AS NUMERIC); -- 0ms;
SELECT DISTINCT (((((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2))))=((((rt1.c1) BETWEEN (rt1.c3) AND (x''))))), (((+ (rt1.c0))) IS FALSE), HEX(DISTINCT TYPEOF(rt1.c0)) FROM rt1 WHERE (CAST(0.5646740915616443 COLLATE BINARY AS BLOB)); -- 0ms;
SELECT ((((((((((((rt1.c2)AND(rt1.c3)))AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c3)))OR(((rt1.c4)||(rt1.c4)))))AND((rt1.c2 IN ()))) FROM rt1; -- 0ms;
SELECT DISTINCT CAST((rt1.c2 IN (rt1.c1)) AS REAL) FROM rt1; -- 0ms;
SELECT ALL (((rt1.c2)) BETWEEN (('' COLLATE NOCASE)) AND ((CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN 37165365 THEN rt1.c4 ELSE rt1.c1 END))) FROM rt1 LIMIT -1994037744 OFFSET -1648391780; -- 0ms;
SELECT DISTINCT '' FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1, NULL, rt1.c0)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC), NULL COLLATE BINARY, ((rt1.c4) IS FALSE))) AND (((0.2633923903619977 IN (rt1.c3)), (NOT (rt1.c1)), (rt1.c0 IN (rt1.c2))))) FROM rt1 WHERE ((~ (((('-820040135', x'', 0.9523916154229676))<((x'5ddd', NULL, NULL)))))); -- 0ms;
SELECT ALL (((rt1.c3)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((((rt1.c0)OR(rt1.c0))))) FROM rt1 WHERE ((((0Xffffffffb9d3c3c2)=(NULL)) IN (((NULL) NOTNULL)))); -- 1ms;
SELECT DISTINCT ((('1694203238' IN ())) NOT BETWEEN (CASE WHEN rt1.c0 THEN 'em9+\r' ELSE rt1.c4 END) AND ((- (rt1.c4)))) FROM rt1 WHERE (((((x'') ISNULL)) NOT BETWEEN ((+ (x''))) AND (0.6393503310493002))); -- 0ms;
SELECT GROUP_CONCAT(((('')) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))), (GROUP_CONCAT(rt1.c0) IN ()), ((CAST(rt1.c2 AS TEXT))LIKE(rt1.c4 COLLATE BINARY)) FROM rt1 WHERE (json_array((~ (2074702650)), ((((-1.7976931348623157E308)OR('c')))AND(x'')))); -- 0ms;
SELECT ALL (- (((rt1.c3)*(rt1.c3)))) FROM rt1 ORDER BY ((((x'')OR((rt1.c0 IN ()))))OR(((rt1.c4)>(rt1.c2))))  NULLS FIRST, CAST(((((rt1.c0)AND(rt1.c1)))AND(rt1.c4)) AS NUMERIC) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((((((((rt1.c4)AND(rt1.c3)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)))||(((((((((rt1.c2)OR(rt1.c4)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c1)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c4)<(rt1.c0)))OR(((rt1.c4) NOT NULL))))OR((rt1.c3 IN ()))), (UPPER(rt1.c1) IN ()), ROW_NUMBER() OVER () FROM rt1 GROUP BY (NOT (rt1.c4)), (CAST(rt1.c1 AS NUMERIC) IN ()), CASE WHEN ((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)) THEN ((rt1.c4)LIKE(rt1.c2)) END, rt1.c2, ((((rt1.c3)==(rt1.c2))) IS FALSE); -- 0ms;
SELECT NTH_VALUE(0.1077321377928333, ((LIKELIHOOD(rt1.c1, 0.2741702545891851)) NOT BETWEEN (0X5e72c7c3) AND (rt1.c4 COLLATE NOCASE))) OVER () FROM rt1 LIMIT -1594168313 OFFSET 440257852; -- 0ms;
SELECT (SQLITE_COMPILEOPTION_GET(x'7bbbe1e1') IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT CAST((((rt1.c1, rt1.c3, rt1.c3))<((rt1.c4, rt1.c1, rt1.c2))) AS INTEGER) FROM rt1; -- 1ms;
SELECT ALL (~ (NULL)), rt1.c3, TYPEOF(CAST(rt1.c0 AS BLOB)), CAST((- (rt1.c1)) AS TEXT), GROUP_CONCAT((rt1.c0 IN ())) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c0)OR(rt1.c2)))OR(NULL))) NOT BETWEEN (json_array(rt1.c1, rt1.c2)) AND ((NOT (rt1.c3)))) FROM rt1 WHERE ((((CASE 'Sb￿qQ_u'  WHEN x'' THEN x'' WHEN -1265555840 THEN 0.5720391066786364 WHEN 0.3477160905895581 THEN '167804939' END, CASE WHEN NULL THEN 0.2403917218193865 ELSE x'' END, json_array(-1.758128272E9, -1672181399)))<=((((x'09c1')/('-559734684')), (0X6bb729b4 IN ()), NULLIF(0.2060911224317099, 'LSV뫏TV()썍5'))))); -- 0ms;
SELECT ALL ((rt1.c1 COLLATE BINARY)>(((((rt1.c3)AND(rt1.c4)))OR(rt1.c0)))) FROM rt1; -- 0ms;
SELECT ALL '37165365' FROM rt1 ORDER BY ((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c0 END)LIKE(ABS(rt1.c2))); -- 0ms;
SELECT DISTINCT CASE ((((((((rt1.c4)AND(rt1.c2)))OR(rt1.c0)))OR(NULL)))AND(rt1.c0))  WHEN ((x'd3b6')>=(rt1.c3)) THEN (+ ('459491586')) WHEN LIKELY(rt1.c2) THEN 0.9530647235297595 WHEN DATE(rt1.c3, rt1.c3, rt1.c0) THEN ((0xffffffffbd01c73a) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4)) COLLATE BINARY FROM rt1 WHERE ((((((((('527164807')OR(NULL)))OR(-238753176)))OR('-1361074502')))OR(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT rt1.c2, ((((((rt1.c4) BETWEEN (rt1.c0) AND (x'')))OR(load_extension(rt1.c2, rt1.c2))))OR(HEX(DISTINCT NULL))), (~ (NULL)), (((rt1.c3)IS(rt1.c1)) IN (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END, CAST(459491586 AS REAL))), (CAST(rt1.c1 AS BLOB) IN ()) FROM rt1 GROUP BY INSTR((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))), ((rt1.c3)<(rt1.c4))) HAVING rt1.c1 LIMIT -1847780247;SELECT DISTINCT ((CAST(rt1.c1 AS TEXT))%(((((rt1.c1)OR(rt1.c1)))OR(rt1.c3)))), CASE WHEN ((((rt1.c2)AND(rt1.c0)))OR(rt1.c4)) THEN ((rt1.c2)*(rt1.c1)) WHEN ((rt1.c4)|(rt1.c4)) THEN ((rt1.c3)!=(rt1.c1)) WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END THEN CAST(rt1.c0 AS REAL) ELSE ((rt1.c2) NOT NULL) END, (((rt1.c3 IN (rt1.c2))) BETWEEN (rt1.c1 COLLATE RTRIM) AND (((rt1.c0) IS FALSE))) FROM rt1 GROUP BY (((((rt1.c0)&(rt1.c2))))>((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) HAVING rt1.c3; -- 0ms;
SELECT ALL ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) IN ((+ (rt1.c3)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS INTEGER))>=(rt1.c2 COLLATE NOCASE)) FROM rt1 WHERE (((293937524)LIKE(301978014)) COLLATE NOCASE); -- 0ms;
SELECT ALL rt1.c0 FROM rt1; -- 0ms;
SELECT DISTINCT AVG(((rt1.c2) BETWEEN (rt1.c4) AND (x''))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT '', GROUP_CONCAT((+ (rt1.c4))) OVER ( ORDER BY ((((rt1.c2)OR(rt1.c3)))AND(rt1.c4)) COLLATE BINARY COLLATE RTRIM  NULLS LAST, CAST((((NULL))<>((rt1.c0))) AS REAL) DESC GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), ((- (rt1.c3)) IN ()) FROM rt1 WHERE ((((~ (1690300500)))>((('r[D') NOT BETWEEN (0X747caca) AND (0Xffffffff9a6bfcc8))))); -- 0ms;
SELECT ALL LEAD(CAST(((rt1.c0)&(rt1.c1)) AS REAL), (~ ((+ (rt1.c3)))), ((rt1.c1 COLLATE BINARY) NOT BETWEEN ((((rt1.c1))<((rt1.c1)))) AND ((~ (rt1.c3))))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (((~ (rt1.c1)))<=(CAST(rt1.c1 AS REAL))) FROM rt1; -- 0ms;
SELECT DISTINCT TOTAL(CAST(rt1.c0 AS INTEGER)) FILTER(WHERE ((((rt1.c4)OR(rt1.c3))) NOT BETWEEN (rt1.c0) AND (CAST(rt1.c1 AS INTEGER)))) OVER () FROM rt1 WHERE ((((NULL)) BETWEEN (((((NULL))<((x''))))) AND ((CAST('-1281126100' AS INTEGER))))) ORDER BY (((0.31385304911822876 IN ()))OR(rt1.c0)); -- 0ms;
SELECT ALL ((CAST(rt1.c0 AS INTEGER)) NOT BETWEEN (rt1.c2) AND (CAST(rt1.c1 AS INTEGER))) FROM rt1 WHERE (((165198561 COLLATE NOCASE) IS TRUE)); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c2 THEN rt1.c1 END)-((rt1.c4 IN (rt1.c4)))) FROM rt1; -- 0ms;
SELECT DISTINCT CASE '-1594168313'  WHEN ((rt1.c4)||(rt1.c4)) THEN (rt1.c4 IN ()) WHEN ((rt1.c3)<<(rt1.c0)) THEN RTRIM('527164807') WHEN ABS(rt1.c1) THEN AVG(x'4df6') ELSE ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END FROM rt1 WHERE (CASE ''  WHEN NULL THEN (9.136010397645666E-4 IN ()) ELSE ('' IN ()) END); -- 0ms;
SELECT DISTINCT (NULL IN ()) FROM rt1; -- 0ms;
SELECT 0.7125136984442664, ((rt1.c1 COLLATE BINARY) BETWEEN ('0{-)#~]') AND (LIKELIHOOD(DISTINCT rt1.c1, 0.6613062613217238))), ((((rt1.c1)AND(rt1.c4))) NOTNULL) FROM rt1; -- 0ms;
SELECT CAST(CAST(rt1.c0 AS BLOB) AS REAL) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT((NOT (rt1.c2)) COLLATE BINARY) OVER () FROM rt1 WHERE ((- (x'1a2b' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((rt1.c0)>(rt1.c4))) IS FALSE), ((((rt1.c1) ISNULL))<<(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))), CAST(rt1.c3 COLLATE BINARY AS TEXT) FROM rt1 WHERE ((((((~ ('1573742651')))OR(NULL COLLATE RTRIM)))OR(x'0a28'))); -- 0ms;
SELECT CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)) AS TEXT), ((rt1.c0 IN ()) IN (((rt1.c0)-(rt1.c2)))), (CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c0 END IN ()) FROM rt1 WHERE ((('')+(LOWER(NULL)))); -- 0ms;
SELECT DISTINCT AVG(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c2 END) OVER (), (~ (((((((((((((rt1.c4)OR(rt1.c2)))OR(0.8249762164812171)))OR(rt1.c4)))OR('708546275')))AND(rt1.c2)))AND(rt1.c0)))), CASE (- (rt1.c0))  WHEN ((rt1.c0) NOTNULL) THEN NULL WHEN (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c0))) THEN (rt1.c4 IN (rt1.c4)) WHEN (((rt1.c0))=((rt1.c4))) THEN rt1.c0 COLLATE BINARY END FROM rt1 WHERE ((((- (1.171739889E9))) NOT BETWEEN ('rcu.a' COLLATE BINARY) AND (x'8401'))); -- 0ms;
SELECT DISTINCT (((rt1.c3)OR(rt1.c4)) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT TOTAL(((rt1.c1)OR(rt1.c2))) COLLATE BINARY FROM rt1; -- 0ms;
SELECT DISTINCT AVG((rt1.c3 IN (NULL))) OVER (), CASE WHEN CAST(rt1.c3 AS INTEGER) THEN AVG(rt1.c0) ELSE ((rt1.c1) BETWEEN (rt1.c3) AND ('')) END, AVG((~ (rt1.c4))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM rt1 WHERE ((NOT (((0.8330666496548769)GLOB(0.3010018218505939))))); -- 0ms;
SELECT MAX(CAST(rt1.c4 AS REAL)) FROM rt1; -- 0ms;
SELECT ALL ((((MAX(rt1.c0))OR((1293229374 IN ()))))OR(((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c1)))), (((((rt1.c1 IN ()))AND(((rt1.c0)<(9.136010397645666E-4)))))AND(((rt1.c2) NOT BETWEEN (0.508267786258606) AND (rt1.c3)))), (((('-93130995') IS TRUE))||(rt1.c2)), AVG((((rt1.c0, rt1.c4, rt1.c3)) BETWEEN ((rt1.c1, rt1.c0, rt1.c1)) AND ((rt1.c0, rt1.c4, '\昐8JmY')))) OVER (), CASE WHEN CAST(rt1.c4 AS REAL) THEN '' ELSE (- (rt1.c0)) END FROM rt1 WHERE ((+ (((((x'')AND(x'72dc')))AND('-1650667752'))))); -- 1ms;
SELECT DISTINCT ((((rt1.c0))<((rt1.c4))) IN ()) FROM rt1 ORDER BY CASE CASE rt1.c2  WHEN rt1.c1 THEN rt1.c3 END  WHEN (((rt1.c0, rt1.c4, rt1.c2)) BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt1.c4, rt1.c0, rt1.c4))) THEN (((rt1.c4, rt1.c4, rt1.c4, rt1.c0, rt1.c1))!=((rt1.c2, rt1.c2, rt1.c2, 0.9911707592224107, rt1.c2))) WHEN CASE WHEN rt1.c3 THEN x'01d1' WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END THEN NULL WHEN rt1.c0 THEN (((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) END; -- 0ms;
SELECT DISTINCT ((0.22850766409061107) NOT BETWEEN ((rt1.c3 IN (rt1.c0))) AND ('+h镌wK,')), ((((rt1.c2) ISNULL)) IS TRUE), ((((((((TOTAL_CHANGES())OR(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3)))))OR(CASE 0Xffffffffba46c7b3  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END)))AND(-1.303611573E9)))OR(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3)))), rt1.c0, TYPEOF(NULL) COLLATE RTRIM FROM rt1 WHERE ((json_array(7.08546275E8, 0.3497053720970845) IN (HEX(DISTINCT '2097117439')))); -- 0ms;
SELECT ALL CAST(((rt1.c1)||(rt1.c2)) AS REAL) FROM rt1 WHERE ((CASE WHEN NULL THEN '%' ELSE 0x490ea822 END IN ())); -- 0ms;
SELECT DISTINCT COUNT(0.7808680655153905) FROM rt1; -- 0ms;
SELECT MAX(rt1.c2) FROM rt1; -- 0ms;
SELECT rt1.c0, (((rt1.c1)) NOT BETWEEN ((((rt1.c3) IS FALSE))) AND ((((rt1.c4)%(rt1.c2))))), DENSE_RANK() OVER () FROM rt1 GROUP BY ((((-8.20040135E8 IN ())))<(((~ (rt1.c1))))), rt1.c1, (NOT ((rt1.c1 IN (rt1.c2)))) LIMIT 2137109072 OFFSET -1756050371; -- 0ms;
SELECT ALL CASE ((('yKjicT\ry', rt1.c4, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1, rt1.c4)) AND ((rt1.c2, rt1.c1, rt1.c2)))  WHEN ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((((rt1.c3)OR(rt1.c3)))AND(rt1.c1)) END FROM rt1 WHERE (((((x'') IS TRUE))/(CASE WHEN x'' THEN x'04721ec6' END))); -- 1ms;
SELECT DISTINCT ((((4.40257852E8) BETWEEN (rt1.c1) AND (rt1.c3))) NOT NULL) FROM rt1; -- 0ms;
SELECT ALL ((rt1.c0)LIKE(NULL)) COLLATE NOCASE FROM rt1 WHERE (((((NULL) NOT BETWEEN (0Xffffffffd9a4dc96) AND (-1.327643125E9)))IS NOT(x''))); -- 0ms;
SELECT ALL ((((rt1.c1) IS TRUE)) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c3 END)) FROM rt1 WHERE ((NOT (((0.9312761344148625) NOTNULL)))); -- 0ms;
SELECT ((((rt1.c4)<=(0x26aab125)))<(NULL)) FROM rt1 ORDER BY (~ ((rt1.c2 IN ()))) LIMIT 1347563142 OFFSET -567011930; -- 0ms;
SELECT ALL rt1.c1 FROM rt1; -- 0ms;
SELECT LIKELY(rt1.c2 COLLATE BINARY) FROM rt1 WHERE ((((('2887184')||(0xffffffff93a657de))) NOT BETWEEN (((x'')GLOB(x''))) AND (0.5910946120920573))) ORDER BY CASE WHEN (NOT (rt1.c2)) THEN rt1.c3 WHEN ((rt1.c1)*(rt1.c4)) THEN ((rt1.c1)+(rt1.c0)) WHEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN ((rt1.c0)LIKE(rt1.c3)) WHEN (rt1.c2 IN (rt1.c4)) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c3))) WHEN json_quote(rt1.c4) THEN (- (rt1.c4)) WHEN CAST(rt1.c2 AS TEXT) THEN '0.5801314479584648' WHEN ((rt1.c0)==(rt1.c1)) THEN ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c3)) ELSE ((-1.26555584E9)<>(rt1.c3)) END DESC  NULLS LAST, ((((rt1.c4)>(rt1.c4)))||((NOT (rt1.c0)))) DESC, (((NOT (rt1.c3))) BETWEEN (rt1.c0) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c4 END)) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt1.c2, rt1.c1, rt1.c4))<=((rt1.c2, rt1.c1, rt1.c0))) IN (((rt1.c4)<>(rt1.c3)))) FROM rt1 WHERE (IFNULL(((-1.303611573E9) BETWEEN (-2.105457478E9) AND ('a-u7/xQ')), (('E# 1\n&N-t') BETWEEN (NULL) AND (x'')))); -- 0ms;
SELECT DISTINCT (((rt1.c2) IS TRUE) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c0)AND(rt1.c4)))OR(rt1.c0)) IN ()) FROM rt1; -- 1ms;
SELECT ALL (((rt1.c4, CASE WHEN rt1.c2 THEN -1.853594111E9 ELSE rt1.c0 END, (((rt1.c3, rt1.c4, rt1.c3, rt1.c2, rt1.c3)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1, rt1.c0, rt1.c4)) AND ((rt1.c3, rt1.c3, rt1.c2, rt1.c3, rt1.c3)))))<((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c4)), ((rt1.c3)<>(rt1.c1)), rt1.c4))) FROM rt1 ORDER BY CASE WHEN rt1.c4 THEN (rt1.c3 IN ()) END  NULLS FIRST; -- 0ms;
SELECT -1.704198968E9 FROM rt1 ORDER BY CASE rt1.c2  WHEN rt1.c2 THEN ((rt1.c3)||(rt1.c3)) ELSE (((rt1.c0, rt1.c4, rt1.c2, rt1.c4, rt1.c0))<=((rt1.c0, rt1.c4, x'', rt1.c0, rt1.c0))) END; -- 0ms;
SELECT ALL LAST_VALUE(CAST((NOT (rt1.c0)) AS INTEGER)) OVER () FROM rt1; -- 0ms;
SELECT (((('-609695501') IS TRUE)) IS TRUE) FROM rt1 WHERE (((((x'6cd702bb')IS NOT(NULL))) NOTNULL)); -- 0ms;
SELECT ALL (rt1.c3 IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c4)))|(((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(NULL)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((-93130995) IS TRUE)) BETWEEN (((rt1.c0) ISNULL)) AND (((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))), CAST(rt1.c3 AS TEXT), rt1.c3 FROM rt1 WHERE (((((NULL) IS FALSE))>=(((((((((0.29030996244635077)OR(0.34937410129864277)))AND(0.45841343808835044)))OR('H')))OR(NULL))))); -- 0ms;
SELECT ALL TOTAL(x'') OVER ( ROWS BETWEEN CASE rt1.c0 COLLATE RTRIM  WHEN ((rt1.c1) NOT BETWEEN (0.5643696012243758) AND ('0.3017910035277901')) THEN ((rt1.c3) NOT NULL) WHEN ((rt1.c3) IS TRUE) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c4)<=(rt1.c2)) THEN CAST(rt1.c3 AS TEXT) ELSE ((rt1.c1) NOTNULL) END PRECEDING AND  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt1;SELECT DISTINCT (((+ (rt1.c1))) BETWEEN (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END) AND (CAST(rt1.c4 AS REAL))), (('0.0687199289994761')>>(((rt1.c1)GLOB(rt1.c2)))), CAST(MAX(rt1.c2) AS NUMERIC) FROM rt1 LIMIT 1678776906 OFFSET 664594627; -- 0ms;
SELECT DISTINCT (((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c2 END, ((rt1.c1)<=(rt1.c0)), ((((rt1.c1)OR(rt1.c4)))OR(rt1.c4)))) AND ((rt1.c0 COLLATE NOCASE, LIKELY(DISTINCT rt1.c0), (('1807165876')<=(rt1.c2))))) FROM rt1 WHERE ((- (0Xffffffffb4912680)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (~ (((rt1.c4)&(rt1.c2)))) FROM rt1 ORDER BY CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END COLLATE RTRIM; -- 0ms;
SELECT rt1.c0 FROM rt1; -- 0ms;
SELECT DISTINCT (~ ((((rt1.c0))=((rt1.c0))))) FROM rt1; -- 4ms;
SELECT ALL rt1.c1 FROM rt1 WHERE (((((x'')||('-982656043'))) BETWEEN (NULL) AND (COALESCE(DISTINCT NULL, x'', NULL, '-1123956934', '6u', 0.21784103622578366)))); -- 0ms;
SELECT ALL CAST((rt1.c1 IN (rt1.c3, rt1.c1)) AS TEXT), (((0.4593632274274422) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN (GROUP_CONCAT(rt1.c0))), (rt1.c4 IN ()) COLLATE RTRIM FROM rt1 GROUP BY (((rt1.c4 IN ()))|(NULL)); -- 0ms;
SELECT DISTINCT '' FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c4) ISNULL)) NOT NULL), ((CAST(rt1.c0 AS INTEGER)) IS FALSE), ((((rt1.c4) IS TRUE)) BETWEEN (((((rt1.c4)OR(rt1.c3)))OR(rt1.c4))) AND (GROUP_CONCAT(rt1.c2))) FROM rt1 GROUP BY NULLIF(CAST(rt1.c3 AS INTEGER), ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2))), (((rt1.c4)) BETWEEN ((TRIM(rt1.c0))) AND (((- (rt1.c2))))), (+ ((rt1.c3 IN (rt1.c4)))), ((((NULL) NOT NULL))GLOB(CAST('-1063551929' AS REAL))), CAST(rt1.c2 AS REAL) HAVING 0xffffffffce9c5945; -- 0ms;
SELECT ALL ((((rt1.c3 COLLATE RTRIM)AND(json_remove(rt1.c2, rt1.c1))))AND(((rt1.c3)<>(rt1.c1)))) FROM rt1 WHERE (((((x'')==('yKjicT\ry'))) IS FALSE)) LIMIT 2080934207;SELECT ALL CASE WHEN ((rt1.c4) ISNULL) THEN rt1.c0 COLLATE NOCASE WHEN rt1.c1 THEN CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END WHEN SUM(rt1.c1) THEN (((('')AND(rt1.c0)))OR(rt1.c4)) ELSE (- (rt1.c4)) END FROM rt1 WHERE ((CAST('1314801394' AS INTEGER) IN ())) ORDER BY (- ((((rt1.c4))<=(('}忤52Pg攙'))))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1 ORDER BY (((rt1.c4 IN ())) BETWEEN (((rt1.c4) IS FALSE)) AND (((rt1.c0)&(0.7716576072776367))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((('406750226')<>(rt1.c2)) IN ()) FROM rt1; -- 0ms;
SELECT (((NOT (rt1.c1)))<((rt1.c2 IN (rt1.c3)))) FROM rt1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt1 NOT INDEXED WHERE ((+ (((((((((x'')OR(0.7411357332276955)))AND(x'')))OR(x'')))OR('G!7ujG}'))))); -- 0ms;
SELECT ALL (+ (((rt1.c1)<>(rt1.c2)))) FROM rt1 WHERE (((((((NULL) BETWEEN (x'033a') AND ('2颉읝#|쳮*')))OR(CASE NULL  WHEN x'' THEN '' ELSE '' END)))OR('-1915304119' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt1.c4) OVER ( ORDER BY rt1.c0 ASC GROUPS ((('0.3951914331405708')) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4))))) AND ((((rt1.c0) IS FALSE)))) PRECEDING EXCLUDE NO OTHERS) FROM rt1 WHERE (x''); -- 0ms;
SELECT DISTINCT (((((((((rt1.c4)AND(x'2697')))OR(rt1.c4)))AND(rt1.c2)))OR(rt1.c1)) IN (NULL, ((((NULL)OR(rt1.c2)))OR(rt1.c3)))) FROM rt1 WHERE (((((((((((((x'5fad')OR(NULL)))OR(0.834691669464728)))OR(0.30999178886019996)))OR('*R')))OR(NULL COLLATE RTRIM)))OR(((NULL)>('1381206670'))))); -- 0ms;
SELECT ALL DATETIME(-1.64839178E9 COLLATE NOCASE, CAST(x'' AS BLOB), rt1.c1) FROM rt1 WHERE ((('-238753176')<>('3786200')) COLLATE NOCASE); -- 0ms;
SELECT ALL TYPEOF(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 END), (((((rt1.c0) IS FALSE)))<=((((0.40271810097466487) IS FALSE)))), 0.6243367722264677 FROM rt1; -- 0ms;
SELECT COUNT(*) OVER () FROM rt1 WHERE (((((0.03645809560919433)IS('沆V*?~8[')))>=((+ (''))))) ORDER BY CAST(json_array(rt1.c3, rt1.c1, NULL, rt1.c4) AS REAL)  NULLS LAST, CASE ((rt1.c2)+(rt1.c2))  WHEN rt1.c2 THEN CAST(rt1.c3 AS TEXT) WHEN rt1.c3 THEN TRIM(rt1.c2) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c4)<>(rt1.c2)) ELSE CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END END ASC  NULLS LAST; -- 0ms;
SELECT ALL ((((rt1.c0)AND(rt1.c4)))AND(rt1.c3)) COLLATE NOCASE FROM rt1 WHERE (((CASE 0.9432451175285543  WHEN x'' THEN '2887184' WHEN x'' THEN 0x28633ed2 WHEN '' THEN x'154d' ELSE NULL END)+(CASE WHEN '9.136010397645666E-4' THEN '0.6243367722264677' WHEN NULL THEN 'p䛲#M' WHEN 1.455428434E9 THEN 0.30544914028909453 END))) ORDER BY (rt1.c4 IN ()); -- 0ms;
SELECT DISTINCT ((((((((((((rt1.c3)AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c0)) FROM rt1 WHERE (load_extension('1347563142', (((NULL, '1171739889', NULL))<>((0.18537667683213044, '1173740250', x'')))));SELECT DISTINCT (+ (((rt1.c3)LIKE(rt1.c0)))) FROM rt1 WHERE ((('' COLLATE RTRIM)GLOB(((0.5057258157946951)GLOB(NULL))))); -- 0ms;
SELECT DISTINCT SUM((~ (rt1.c4))) OVER () FROM rt1 GROUP BY (((NOT (rt1.c2))) BETWEEN (CAST(rt1.c2 AS REAL)) AND ((rt1.c1 IN ()))); -- 1ms;
SELECT DISTINCT (- (((rt1.c4)IS(rt1.c1)))), COUNT(CASE WHEN rt1.c0 THEN 311472473 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END COLLATE RTRIM) OVER (), ((TYPEOF(DISTINCT rt1.c1))||(((rt1.c2)>=(0.6026731926145131)))) FROM rt1 WHERE (CASE CAST('1787517773' AS REAL)  WHEN (('')|(0.20582313963092524)) THEN ('0.1077321377928333' IN (0.9101363180513711)) ELSE (('1359604047')AND(-1.063551929E9)) END) GROUP BY CASE WHEN ((rt1.c1)/(rt1.c0)) THEN ((rt1.c3) ISNULL) WHEN LIKELIHOOD(rt1.c3, 0.818977004789104) THEN ((rt1.c4)>>(rt1.c3)) WHEN (((x'', rt1.c3, rt1.c4)) NOT BETWEEN ((rt1.c2, rt1.c4, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c4))) THEN ((rt1.c2) NOT NULL) END; -- 0ms;
SELECT ALL GROUP_CONCAT(((((rt1.c1)AND(rt1.c1)))OR(rt1.c3))) OVER (), (((NOT (rt1.c3)))OR(((rt1.c3)>>(rt1.c0)))), (+ (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 END)) FROM rt1; -- 0ms;
SELECT ((((CAST(rt1.c1 AS BLOB))OR(NULL)))AND(CAST(rt1.c2 AS BLOB))) FROM rt1 WHERE (CAST(json_array_length('', x'') AS REAL)) ORDER BY ((((rt1.c0 IN ())))!=((TRIM(DISTINCT rt1.c4, rt1.c1)))) DESC  NULLS FIRST;SELECT CASE WHEN ((-757990852)>=(rt1.c2)) THEN rt1.c4 ELSE (('TRUE') NOT BETWEEN (rt1.c2) AND (rt1.c1)) END, ((rt1.c4) NOTNULL) COLLATE RTRIM, rt1.c1 FROM rt1 LIMIT 695731081 OFFSET 2096371721; -- 0ms;
SELECT DISTINCT ((('0.17003532541369948', rt1.c4, (NOT (rt1.c3))))=((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c3 END, (~ (rt1.c3)), ((((rt1.c0)OR(rt1.c4)))OR(rt1.c4))))) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c2)GLOB(NULL)) AS INTEGER) FROM rt1; -- 0ms;
SELECT LAG(rt1.c0 COLLATE BINARY, x'', NULL) OVER ( GROUPS  CURRENT ROW) FROM rt1; -- 0ms;
SELECT DISTINCT NULL, GROUP_CONCAT(ABS(DISTINCT rt1.c0)), ((NOT (rt1.c2)) IN (((rt1.c1) NOTNULL))) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c0 IN ()))*(GROUP_CONCAT(rt1.c2))) FROM rt1; -- 0ms;
SELECT CASE WHEN CASE WHEN rt1.c2 THEN rt1.c0 END THEN ((((rt1.c3)AND(rt1.c0)))OR(rt1.c3)) END FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c2)<>(rt1.c1))) AND (rt1.c0 COLLATE BINARY)) FROM rt1 WHERE (json_remove(0x2c69a500, x'', 0.513571814722919, NULL) COLLATE RTRIM) GROUP BY (((((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2))))=((TRIM(DISTINCT rt1.c1, rt1.c3)))), rt1.c4, ((((((((rt1.c4)OR(rt1.c1)))AND(rt1.c3)))AND((NOT (rt1.c1)))))AND('znpImK'));SELECT DISTINCT (((('-2053074003')AND((rt1.c0 IN (rt1.c1)))))AND(rt1.c3)), rt1.c1, ((load_extension(rt1.c4, 0.1935099630626027)) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ('1243860325')) FROM rt1;SELECT ((((rt1.c3 COLLATE RTRIM)OR(rt1.c4)))AND(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END)), (((rt1.c0)) NOT BETWEEN ((HEX(rt1.c1))) AND ((rt1.c1 COLLATE BINARY))), x'' FROM rt1; -- 0ms;
SELECT (~ (rt1.c1)), GLOB(((0Xffffffffca4cc45f) BETWEEN (rt1.c1) AND (rt1.c1)), MIN(rt1.c3)), CAST('꜍Q' AS BLOB) FROM rt1 WHERE ((NOT (CASE 0.7716576072776367  WHEN x'4a69' THEN 0.9422977841525859 END))) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2) IS FALSE))) AND (((rt1.c1 IN ())))) ASC  NULLS LAST, CASE WHEN ((0.9710022153433034)GLOB(rt1.c3)) THEN CAST(rt1.c0 AS BLOB) WHEN '-1293453715' THEN rt1.c0 WHEN ((((rt1.c3)OR(rt1.c3)))OR('0.493821916191711')) THEN QUOTE(rt1.c0) END, (((((rt1.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c3, rt1.c4)) AND ((rt1.c2, rt1.c2, 2097117439))))IS NOT((NULL IN (rt1.c3, rt1.c4)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT '1052993129' FROM rt1 WHERE (CAST((('B푉')AND('灞F')) AS REAL)); -- 1ms;
SELECT DISTINCT rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT MIN(((rt1.c4)-(rt1.c4))) FROM rt1 WHERE ((((0.2511141126660654)) NOT BETWEEN ((((NULL) NOT BETWEEN ('-2053074003') AND (x'')))) AND (('37165365' COLLATE RTRIM)))); -- 0ms;
SELECT ((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c2)))OR(x'')))AND(AVG(rt1.c2))) FROM rt1; -- 0ms;
SELECT CASE WHEN LOWER(rt1.c3) THEN CAST(rt1.c2 AS TEXT) END FROM rt1 WHERE (((TRIM(0.2467875810208685, '-1177304126'))|(((('-414233333', '1723558610', 0.1668334683220195))<=((NULL, 0X3f31c1ba, 0x495f64bb)))))) GROUP BY ABS(rt1.c1) COLLATE BINARY HAVING rt1.c4 COLLATE NOCASE; -- 0ms;
SELECT DISTINCT x'', ((UPPER(rt1.c4)) BETWEEN (rt1.c2) AND (TOTAL_CHANGES())), UNLIKELY(DISTINCT (('')<<(rt1.c3))), (MAX(rt1.c1) IN (rt1.c3 COLLATE BINARY)), COUNT(*) FROM rt1 LIMIT 715054176 OFFSET 1141562389; -- 0ms;
SELECT DISTINCT (~ (((rt1.c4)*(rt1.c2)))) FROM rt1; -- 0ms;
SELECT ALL LEAD(rt1.c1 COLLATE RTRIM, CAST(rt1.c1 COLLATE BINARY AS NUMERIC), (((rt1.c0, NULLIF(rt1.c3, rt1.c2), ((rt1.c4) NOTNULL)))<((((((rt1.c4)OR(rt1.c2)))OR(rt1.c0)), (((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c0))), CASE rt1.c4  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c3 END)))) OVER () FROM rt1 WHERE ((((('95925467') IS TRUE))>>(('Xk' IN (x''))))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) AS BLOB), QUOTE((((rt1.c4))<=((rt1.c2)))), ((((((((((rt1.c3)OR(rt1.c2)))OR(0.9686090721262763)))OR(rt1.c4)))OR(0.2765586283474778))) NOT BETWEEN ((((rt1.c2, rt1.c0, rt1.c3)) BETWEEN ((rt1.c4, NULL, rt1.c0)) AND ((rt1.c3, rt1.c3, rt1.c3)))) AND (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) FROM rt1 WHERE ((((((((((((((('') NOT BETWEEN (0.7069119740619949) AND (NULL)))OR(('-1609048980' IN ()))))OR(SQLITE_VERSION())))OR(0.9836835891945424 COLLATE NOCASE)))AND((((NULL)) BETWEEN (('')) AND ((460968028))))))OR((NOT (NULL)))))AND(TRIM(DISTINCT NULL, x'')))); -- 0ms;
SELECT CASE WHEN CAST(rt1.c4 AS INTEGER) THEN rt1.c3 ELSE rt1.c1 END FROM rt1 WHERE ((((((((-1609048980)AND(0Xfffffffff0626b61)))AND(544748047)), CAST(NULL AS NUMERIC), ((0.3236632637757473)/(NULL))))>((CASE WHEN NULL THEN NULL WHEN x'' THEN 9.5925467E7 WHEN '-1491196471' THEN '' ELSE x'' END, 0Xffffffff8b4de378 COLLATE NOCASE, ((('885108516')) BETWEEN ((0.048078537998570536)) AND ((0.2765586283474778))))))); -- 0ms;
SELECT ((0X3f6612) IS TRUE), AVG(CAST(rt1.c2 AS REAL)) OVER (), (((CAST(rt1.c0 AS NUMERIC)))>=((((0.5949057109218645)||(rt1.c1))))) FROM rt1 WHERE (((2.080934207E9 COLLATE BINARY)%(((-1337478130)IS(0.8255102957835894))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING), CAST(x'6e9c' AS INTEGER), (~ (((rt1.c4)OR(rt1.c0)))) FROM rt1 WHERE (CASE WHEN (('63055373')OR(0Xffffffffd9a4dc96)) THEN CASE WHEN '' THEN '588260066' END WHEN ((x'')*(0X3eb9b238)) THEN NULL WHEN ((((NULL)AND(-1663823359)))OR(x'')) THEN SUBSTR('-292074242', 'o傓K-') ELSE x'69e8' END) LIMIT -757990852; -- 0ms;
SELECT ALL ((((COUNT(rt1.c0))OR(((rt1.c0) IS TRUE))))OR((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))))), ((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN 0.09182688446714904 WHEN rt1.c0 THEN rt1.c1 END) IS TRUE), ((((rt1.c1) NOTNULL))&(((rt1.c1)IS NOT(rt1.c4)))) FROM rt1 WHERE ((x'' IN ('m8O6튡2')) COLLATE RTRIM) ORDER BY (((((((rt1.c2, rt1.c4, rt1.c1))<=((rt1.c1, rt1.c0, rt1.c2))))OR(CAST(rt1.c2 AS INTEGER))))AND(CASE '-847585579'  WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 END)) DESC; -- 0ms;
SELECT COUNT(*) COLLATE NOCASE, AVG(((rt1.c3)IS(rt1.c1))) OVER ( ORDER BY (((('-900938657')/(rt1.c0))) NOT NULL) DESC  NULLS LAST), NULL FROM rt1 ORDER BY ABS(DISTINCT CAST(rt1.c2 AS BLOB)) DESC  NULLS LAST, CAST(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS INTEGER); -- 1ms;
SELECT PERCENT_RANK() OVER (), (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)) IN ()), ROW_NUMBER() OVER ( ROWS  UNBOUNDED PRECEDING) FROM rt1 LIMIT -1758128272 OFFSET -1594168313; -- 0ms;
SELECT ((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c0 END) IS TRUE) FROM rt1 WHERE (((((NULL)-('-1020546617')))+(((x'')<>(x''))))) LIMIT 122145482; -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c2 THEN rt1.c1 ELSE '1243932379' END COLLATE BINARY, load_extension(((x'4da4') NOT BETWEEN (rt1.c4) AND (rt1.c0))), ((((rt1.c1)<(rt1.c0)))&(CAST('m*' AS BLOB))), TYPEOF(DISTINCT (((rt1.c2))>=((rt1.c0)))), TOTAL(0X6340bc5f) OVER ( ORDER BY LIKELY(DISTINCT (~ (rt1.c0)))  NULLS FIRST, ((rt1.c1 IN ()) IN ())) FROM rt1;SELECT DISTINCT SUM(((rt1.c2) ISNULL)) FROM rt1; -- 0ms;
SELECT DISTINCT (((- (0.5148152966837781)))-(rt1.c2 COLLATE BINARY)), (((((rt1.c0))<((rt1.c4)))) BETWEEN (((rt1.c2)OR(rt1.c1))) AND ((NOT (rt1.c3)))), (COUNT(rt1.c3) IN ()) FROM rt1 ORDER BY (((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((((rt1.c2) NOTNULL)) NOT BETWEEN ((- (0.23055164748190438))) AND (COUNT(*))), (((((+ (rt1.c0)))OR(((rt1.c4)%(rt1.c4)))))OR(rt1.c1 COLLATE BINARY)), ((((((((((rt1.c1)=(rt1.c4)))OR(NULL)))AND(CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 ELSE '-1136410149' END)))AND(CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN NULL THEN '' END)))AND(((rt1.c2) IS FALSE))), ((((rt1.c4)=(rt1.c0)))GLOB((+ (rt1.c1)))), MIN(CAST(x'' AS TEXT)) FROM rt1 WHERE (CASE WHEN (('')||(NULL)) THEN ((((((((0.9747513953081092)AND(NULL)))OR('1724527395')))OR(x'')))AND(0.7424514901678604)) END); -- 1ms;
SELECT FIRST_VALUE((- (((((rt1.c4)AND(rt1.c4)))OR(rt1.c1))))) OVER (), CAST(rt1.c4 AS BLOB) COLLATE RTRIM, (- (CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c2 WHEN -9223372036854775808 THEN rt1.c3 ELSE rt1.c3 END)), -189903250, ROW_NUMBER() OVER ( PARTITION BY (((((x'10d9'))<=((rt1.c3))))%(CASE WHEN rt1.c4 THEN rt1.c1 END)), ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1)))&((((rt1.c1)) NOT BETWEEN (('xjZ*')) AND ((rt1.c2)))))) FROM rt1; -- 0ms;
SELECT rt1.c0, ROW_NUMBER() OVER (), COUNT(*) OVER (), ((((((rt1.c3)<>(rt1.c1)))AND((((rt1.c0))<((rt1.c4))))))AND('')), x'f6412781' FROM rt1 WHERE (((((((((((((((((x'')AND(x'9257')))OR(NULL)))OR(647914400)))AND('0.3497053720970845')))AND('-787831027')))OR(x'7597')))AND(CAST(x'616e' AS BLOB))))AND(((x'')<>('1807165876'))))) ORDER BY CAST(((rt1.c0)<=(rt1.c1)) AS BLOB) ASC; -- 0ms;
SELECT ALL (json_quote(rt1.c4) IN ((((((((('Vw')OR(rt1.c3)))OR(x'')))AND(rt1.c3)))OR(rt1.c1)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))) FROM rt1 WHERE (((((0X2a9edc60) NOT BETWEEN ('T?Vjv') AND ('-883390104')))*(1685112515 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((((((rt1.c0)OR(rt1.c3)))OR(rt1.c4))))>=(((- (rt1.c1))))), HEX(COUNT(*)), SQLITE_COMPILEOPTION_GET((rt1.c4 IN ())), LIKE(AVG(rt1.c2), (rt1.c0 IN ()), '䙓'), CASE (rt1.c0 IN ())  WHEN (- (rt1.c4)) THEN PRINTF(x'', rt1.c3, rt1.c2) ELSE ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c4)))OR(rt1.c3)))OR(rt1.c3)) END FROM rt1 ORDER BY rt1.c2  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE ((rt1.c4)<(rt1.c0))  WHEN ((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c3)) THEN (rt1.c4 IN ()) ELSE rt1.c1 END FROM rt1; -- 0ms;
SELECT DISTINCT x'' FROM rt1; -- 1ms;
SELECT ((((rt1.c4) ISNULL))<>(MAX(rt1.c3))), ((((0X4d57b2bd) NOT BETWEEN (rt1.c4) AND (rt1.c4)))&(LIKELIHOOD(rt1.c2, 0.16465653583991513))), MIN(((((-1584642407)OR(x'5ce1')))AND(rt1.c2))) FROM rt1; -- 0ms;
SELECT DISTINCT highlight(((((NULL)OR(rt1.c4)))AND(rt1.c4)), ((rt1.c3)<<(rt1.c4)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)), ((rt1.c0)>>(rt1.c2))) FROM rt1 LIMIT 1920297183;SELECT ALL ((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END)IS NOT(((((1455428434)OR(rt1.c0)))OR(rt1.c1)))) FROM rt1 WHERE ((((NULL, '-1281126100', 0.7069119740619949))>((NULL, x'', NULL))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt1.c1))<((rt1.c2))) IN (((((((((rt1.c2)OR(rt1.c4)))OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c0)), ((rt1.c4) BETWEEN (NULL) AND (rt1.c4)))) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1 ORDER BY (NOT (CAST(rt1.c3 AS BLOB)))  NULLS FIRST, ((rt1.c1)IS(rt1.c2)) COLLATE NOCASE ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt1.c2))<=(('_j'))) FROM rt1; -- 0ms;
SELECT ((((((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)))AND((((rt1.c3, rt1.c4, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c3)) AND ((rt1.c3, rt1.c3, rt1.c3))))))AND(GROUP_CONCAT(rt1.c0))), ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END)LIKE(CASE WHEN 0.47701402585417674 THEN rt1.c1 END)), (NOT (LIKELIHOOD(rt1.c0, 0.9294003040652192))) FROM rt1; -- 0ms;
SELECT DISTINCT x'' FROM rt1 WHERE ((((((NULL)AND(x'0398')))OR(x'')) IN (((x'50468a0e') BETWEEN (x'') AND (6.64594627E8))))) GROUP BY CASE ((((rt1.c1)OR(rt1.c1)))OR(rt1.c4))  WHEN rt1.c1 COLLATE BINARY THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN 0.8227454762689645 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END WHEN ((rt1.c4)IS(rt1.c4)) THEN '715054176' COLLATE NOCASE WHEN CAST('216425753' AS INTEGER) THEN ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c4)))AND(rt1.c1)))AND(rt1.c4)) ELSE (rt1.c4 IN ()) END, ((CAST(rt1.c0 AS NUMERIC)) BETWEEN (CASE WHEN NULL THEN x'' END) AND (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c4 END)), (('')OR(rt1.c0)) HAVING rt1.c1; -- 0ms;
SELECT DISTINCT ((((((rt1.c0, rt1.c4, NULL)) BETWEEN ((rt1.c2, rt1.c3, rt1.c0)) AND ((0Xffffffff8d559d91, rt1.c2, rt1.c1)))))<=(((NOT (NULL))))) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c2, IFNULL(DISTINCT rt1.c3, ((((rt1.c2)AND(rt1.c3)))AND(rt1.c2))), ((((rt1.c2)>(rt1.c0))) BETWEEN (rt1.c4) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))))) FROM rt1; -- 0ms;
SELECT CASE WHEN rt1.c0 THEN 'G!7ujG}' WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c0 END COLLATE RTRIM FROM rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(0xffffffff9a60a270) FILTER(WHERE GLOB((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))), CASE WHEN 0X279ce8c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 END)) OVER () FROM rt1 WHERE ((((((0.7759590075760169)>=(0.0)), ((('')) NOT BETWEEN ((0.7423286324886504)) AND (('2887184'))), (('lLzAd|^ep')==(x''))))==((((0X70880e96)>('')), CASE WHEN 'wi' THEN x'76b7' END, (0.048994352710679645 IN ()))))) GROUP BY rt1.c3, (HEX(rt1.c1) IN ()), CAST((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) AS REAL); -- 0ms;
SELECT DISTINCT (NOT (CAST(rt1.c4 AS NUMERIC))) FROM rt1 WHERE (LIKELY(DISTINCT ((x'') NOT BETWEEN ('') AND (0.34861858356124586)))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(CAST((NOT (rt1.c2)) AS REAL)) OVER (), TRIM(rt1.c4, '') COLLATE BINARY, (((0.8330666496548769))=((((rt1.c1)>>(rt1.c1))))) FROM rt1 WHERE (((((((1330657333))<=((NULL)))))!=((((NULL) NOT BETWEEN (-238753176) AND ('0.6063817285161249')))))) ORDER BY ((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1)))OR(((rt1.c1)>=(rt1.c1)))); -- 1ms;
SELECT DISTINCT ((((rt1.c1)*(rt1.c3)))!=(((rt1.c4)AND(0.2588422798229226)))) FROM rt1 WHERE ((NOT ((('rcu.a') NOT BETWEEN (0.6026731926145131) AND (0.8293041440619069))))); -- 0ms;
SELECT ALL rt1.c3 COLLATE NOCASE FROM rt1 WHERE ((NOT ('FALSE')) COLLATE RTRIM) LIMIT 708546275 OFFSET -401964843; -- 0ms;
SELECT DISTINCT ((('430347088' IN ()))*((((((((('-1051447027')OR(rt1.c4)))AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2)))) FROM rt1 WHERE ((CASE WHEN '-1177304126' THEN '-773815228' ELSE 344005885 END IN ())); -- 0ms;
SELECT ALL CAST((+ (rt1.c1)) AS TEXT) FROM rt1 WHERE (LIKELIHOOD((NOT (0x4089c56e)), 0.7396628744452616)); -- 0ms;
SELECT DISTINCT (- (rt1.c3)) COLLATE RTRIM, json_array_length(LIKELY(rt1.c4), rt1.c1), (rt1.c4 IN ()) FROM rt1 LIMIT 293937524;SELECT ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((rt1.c0)%(0xffffffffb0ddc60b))) AND (0.37696362734033295)) FROM rt1 WHERE (CASE WHEN ((((3786200.0)AND(0.7881836438844873)))OR(x'')) THEN (((('S[8mKNaNuG')AND(x'3b88')))AND(x'')) WHEN ((-1.177304126E9)+('iqE/\nkcQ<')) THEN (((NULL))!=((x''))) WHEN CASE NULL  WHEN NULL THEN '1678776906' END THEN (NULL IN (0Xa00800b)) END); -- 0ms;
SELECT DISTINCT TYPEOF(((rt1.c3)==(rt1.c0))) FROM rt1 LIMIT 1900895622 OFFSET 237146725; -- 0ms;
SELECT ALL (((rt1.c4)) NOT BETWEEN (((((rt1.c2, rt1.c2, rt1.c2, rt1.c1, 'iUU')) NOT BETWEEN ((x'', rt1.c2, 0.7421188632918028, rt1.c0, rt1.c4)) AND ((rt1.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c4))))) AND ((COALESCE(rt1.c1, rt1.c4)))), CASE WHEN HEX(rt1.c2) THEN LOWER(DISTINCT '-762119914') WHEN LOWER(rt1.c0) THEN TOTAL(rt1.c3) WHEN (NOT (rt1.c2)) THEN ((((rt1.c0)AND(NULL)))AND(rt1.c4)) END, COUNT(((((((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c4)))AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c0))) OVER () FROM rt1; -- 0ms;
SELECT ALL MIN(CAST(rt1.c4 AS REAL)) FROM rt1; -- 0ms;
SELECT (((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))), ((CAST(rt1.c1 AS INTEGER))>>(CASE WHEN rt1.c0 THEN rt1.c0 END)), (NOT ((rt1.c4 IN (rt1.c4, rt1.c0)))) FROM rt1 WHERE (((((x'')LIKE('R&'))) IS TRUE)); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM rt1 WHERE ('-1419691539' COLLATE RTRIM); -- 0ms;
SELECT (CASE rt1.c0  WHEN rt1.c1 THEN 0X58ba73db ELSE rt1.c0 END IN ()) FROM rt1 WHERE (((x'' COLLATE NOCASE) NOT BETWEEN ((((((((('sr')AND(0X59838b80)))OR(x'')))AND(0.48428739164226653)))OR('-930657087'))) AND ((NOT (0.7388775843173522))))); -- 0ms;
SELECT DISTINCT '-414233333', ((((((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)))OR(CAST(rt1.c4 AS INTEGER))))OR(rt1.c0)))OR(rt1.c3)))AND(((NULL) BETWEEN (rt1.c3) AND (rt1.c2)))), (((((((((+ (0.5949057109218645)))OR(rt1.c3 COLLATE RTRIM)))OR(CASE WHEN x'' THEN rt1.c4 ELSE rt1.c4 END)))OR(rt1.c4)))OR(IFNULL(rt1.c3, rt1.c1))) FROM rt1 WHERE ((((((0Xffffffff924d74c5))!=((1008130844)))) NOT BETWEEN (STRFTIME(0.10261145787887127, 0.3984325657940837, '664594627')) AND ((((x'06e5')) BETWEEN (('ꚺ(D4KY뾰')) AND (('635047235')))))); -- 0ms;
SELECT TOTAL(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c2 ELSE 0.7717141549957983 END) COLLATE NOCASE FROM rt1 LIMIT -1011089000; -- 0ms;
SELECT ((((((((((rt1.c2)AND(rt1.c4)))OR(rt1.c1)))OR(0.4622923579978626)))AND(rt1.c2))) BETWEEN (((rt1.c4)|(rt1.c0))) AND (((rt1.c1) BETWEEN (rt1.c2) AND (0x55dc9479)))) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c0)OR(GROUP_CONCAT(rt1.c0))))AND(GROUP_CONCAT(rt1.c0))), ((((((rt1.c0) NOT BETWEEN (x'') AND (rt1.c1)))AND(NULL)))OR(CAST(rt1.c3 AS REAL))), ((((rt1.c2) NOT NULL))<('603408836')) FROM rt1 WHERE ((((x'fa0c')) NOT BETWEEN (((+ (NULL)))) AND ((json_array(x'', x''))))) GROUP BY ((LIKELIHOOD(DISTINCT rt1.c1, 0.11338997741546775)) ISNULL);SELECT DISTINCT ((((rt1.c2)GLOB(rt1.c4))) NOT BETWEEN (((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c3))) AND (rt1.c1)) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(0.5236593168611434 AS TEXT) FROM rt1; -- 0ms;
SELECT DISTINCT json_insert((((rt1.c0, rt1.c4, rt1.c3)) BETWEEN ((rt1.c0, rt1.c2, rt1.c3)) AND ((rt1.c3, rt1.c3, rt1.c1))), CAST(rt1.c4 AS REAL), MIN(rt1.c2), ((((rt1.c4)AND(rt1.c4)))AND('')), (- (rt1.c0))) FROM rt1 WHERE (LIKE(((0.45841343808835044)/('Ba샽A')), (('-762119914') NOTNULL))); -- 0ms;
SELECT (CAST(rt1.c2 AS BLOB) IN (((((((((NULL)AND(rt1.c4)))OR(rt1.c4)))OR(rt1.c0)))AND(rt1.c3)))), ((LOWER(rt1.c1))==(((((rt1.c4)OR(rt1.c0)))OR(rt1.c2)))), CASE WHEN ((rt1.c4)|(rt1.c3)) THEN (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) END FROM rt1; -- 0ms;
SELECT ABS(((rt1.c4)AND(rt1.c1))), ((rt1.c4) IS FALSE), (NOT (NULL)) FROM rt1 WHERE (CAST(((x'')=('1573742651')) AS BLOB)) GROUP BY 0.8061574818330162, CASE (+ (rt1.c2))  WHEN (+ (rt1.c4)) THEN rt1.c0 COLLATE NOCASE END, (((rt1.c0))>((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) HAVING ((rt1.c1)=(rt1.c0)) COLLATE NOCASE COLLATE BINARY; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt1 NOT INDEXED WHERE ((('-940913426' COLLATE BINARY)IS NOT(((((((((x'55b9')OR(NULL)))OR(1.845020351E9)))OR(0Xffffffff8e9fc75d)))OR(''))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(IFNULL(rt1.c3, rt1.c4)) FROM rt1; -- 0ms;
SELECT DISTINCT (- ((~ (rt1.c2)))), NTH_VALUE((+ (rt1.c3)) COLLATE BINARY, CAST(CASE WHEN '1722571487' THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c2 END AS INTEGER)) OVER (), (((rt1.c3, CAST(rt1.c3 AS TEXT), ((rt1.c1)<<(rt1.c3))))=((CAST(NULL AS REAL), ((rt1.c1)+(rt1.c2)), x'' COLLATE BINARY))), LAG(((json_valid(rt1.c4)) BETWEEN ((- (rt1.c2))) AND (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))), CASE ((0Xffffffffdf4a107e)>=(rt1.c3))  WHEN NULL THEN ((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c4)))AND(NULL)) END, highlight(((rt1.c2)AND(rt1.c2)), x'', (~ (rt1.c0)), CAST(rt1.c4 AS REAL))) OVER (), ((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)))GLOB(rt1.c0)) FROM rt1;SELECT PERCENT_RANK() OVER (), (NOT (CAST(rt1.c1 AS INTEGER))), CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1)) AS TEXT) FROM rt1; -- 0ms;
SELECT (rt1.c3 IN ()) FROM rt1; -- 0ms;
SELECT (+ (((((rt1.c3)AND(rt1.c2)))AND(0.972011109513452)))), ((rt1.c1)||(((rt1.c0) NOT BETWEEN (rt1.c2) AND ('')))), SUM(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c4))) OVER (), rt1.c1, (((+ (rt1.c2))) NOT BETWEEN (SUM(rt1.c0)) AND ((+ (rt1.c4)))) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c3)/(''))) NOT BETWEEN (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c4))) AND (((((((((rt1.c3)AND(x'')))OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c1)))) FROM rt1; -- 0ms;
SELECT ALL NULL, CAST(CAST(rt1.c4 AS INTEGER) AS INTEGER), (((((rt1.c1)OR(rt1.c0))))<((rt1.c0 COLLATE RTRIM))), (- (rt1.c2 COLLATE NOCASE)), CAST(rt1.c4 AS INTEGER) COLLATE RTRIM FROM rt1 WHERE (((CASE 0.22514997662031166  WHEN -921169892 THEN 0x45d754f1 END) BETWEEN (((0.15837266335736966) NOTNULL)) AND (((x'849f')IS NOT(x''))))) ORDER BY (~ (SQLITE_COMPILEOPTION_GET(rt1.c2))), ((((rt1.c1)IS NOT(rt1.c3))) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))AND(rt1.c1))) AND ((((rt1.c3, rt1.c2, rt1.c1)) BETWEEN ((rt1.c4, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c1, rt1.c0)))))  NULLS LAST, (((((~ (rt1.c2)))AND((~ (rt1.c3)))))OR((+ (-1847780247)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt1.c0) NOTNULL))AND(COUNT(rt1.c0))) FROM rt1 ORDER BY ((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c1))) ISNULL) ASC; -- 0ms;
SELECT DISTINCT ((((((rt1.c2)*(rt1.c2)))AND(rt1.c0 COLLATE NOCASE)))OR((- (rt1.c4)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c4 END)*((+ (rt1.c1)))) FROM rt1 WHERE ((((NOT (x'9a79')))<((((''))<>((x'')))))); -- 0ms;
SELECT SQLITE_SOURCE_ID() COLLATE NOCASE, CASE ((rt1.c2) ISNULL)  WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c0)) WHEN ((rt1.c0) BETWEEN (rt1.c2) AND (0.048078537998570536)) THEN (((rt1.c1, x'', rt1.c2))=((rt1.c0, rt1.c3, rt1.c4))) WHEN ((((rt1.c3)AND(NULL)))OR(rt1.c2)) THEN CASE WHEN rt1.c3 THEN rt1.c2 END END, LAST_VALUE((((rt1.c4) IS TRUE) IN (CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c0 END, ((rt1.c3) BETWEEN (0.9405194834059255) AND (rt1.c3))))) OVER () FROM rt1 WHERE ((- (''))); -- 0ms;
SELECT DISTINCT MAX(((rt1.c3)-(rt1.c1))), rt1.c2, ((CAST(292834413 AS TEXT))!=(((rt1.c3)/(rt1.c1)))) FROM rt1 WHERE (CAST(x'b363' AS INTEGER) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((rt1.c0)||(rt1.c0)) COLLATE NOCASE, ((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))AND((((rt1.c3, rt1.c1, x'df27'))<=((rt1.c2, rt1.c3, rt1.c2))))))AND(COUNT(rt1.c2))))OR(MAX(rt1.c2))))OR((+ (rt1.c1)))), ((((((((((((((rt1.c2)IS NOT(rt1.c2)))AND((((rt1.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c2))))))OR(x'')))AND(CASE rt1.c3  WHEN rt1.c4 THEN rt1.c0 END)))OR(((rt1.c1) IS FALSE))))AND(CASE WHEN '' THEN rt1.c0 END)))OR(((rt1.c4)||(rt1.c1)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((0.005847843932646923) BETWEEN (((rt1.c4)*(rt1.c3))) AND (TYPEOF(rt1.c4))) FROM rt1 WHERE (((CAST('' AS REAL))GLOB(0.8523572306596241))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1 ORDER BY (((CHANGES(), CASE WHEN rt1.c2 THEN rt1.c4 END, rt1.c2 COLLATE BINARY, CAST(rt1.c3 AS NUMERIC), (x'' IN (rt1.c2))))<((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END, CAST(rt1.c1 AS REAL), ((0.3017910035277901) NOTNULL), 0X1df160de, NULL))), rt1.c1; -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((((('')) NOT BETWEEN ((0x7ba9733a)) AND ((0.7424514901678604))) IN ())); -- 1ms;
SELECT ALL CASE WHEN ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c3)) THEN ((rt1.c1)OR('7zx#昐U')) WHEN ((rt1.c4)IS NOT(rt1.c0)) THEN NULL WHEN ((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c2)) THEN SUM(rt1.c3) END, CAST(rt1.c1 COLLATE BINARY AS INTEGER), COUNT(*) FROM rt1 WHERE ((0.1157257523361821 IN ())) LIMIT 718527723; -- 0ms;
SELECT DISTINCT (((rt1.c1 IN ()))<((~ (rt1.c0)))), DENSE_RANK() OVER (), AVG(CAST(rt1.c3 AS TEXT)) OVER () FROM rt1; -- 0ms;
SELECT (((~ (rt1.c0))) NOT BETWEEN ((NOT (rt1.c3))) AND (rt1.c3)) FROM rt1 WHERE ((NOT ('6AX*{hmY'))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c3 AS NUMERIC))-(((rt1.c2)>=(rt1.c4)))) FROM rt1; -- 0ms;
SELECT TRIM((((rt1.c0))=((rt1.c1)))) FROM rt1 WHERE (((((((((1173740250 COLLATE RTRIM)AND(HEX(0X2b675fe4))))OR((0.1668334683220195 IN ('1200683658', -606917278)))))AND((NULL IN (NULL)))))AND((0.5182482417102491 IN ())))) LIMIT 2004304453; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c3) IS FALSE))AND((rt1.c2 IN ()))))OR(((((((((rt1.c1)AND(NULL)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))))OR(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END)))OR(CASE WHEN rt1.c4 THEN rt1.c4 END)) FROM rt1; -- 0ms;
SELECT DISTINCT NTH_VALUE(((x'')-(CAST(rt1.c3 AS NUMERIC))), ((((rt1.c0)<(4.59491586E8)))%((rt1.c4 IN ())))) OVER () FROM rt1;SELECT DISTINCT CUME_DIST() OVER (), (((((rt1.c2)OR(rt1.c4)))OR(rt1.c1)) IN ()), ((((CAST(rt1.c3 AS NUMERIC))OR(rt1.c2)))AND(((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))) FROM rt1 GROUP BY ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4))) AND (((rt1.c4) IS FALSE))) HAVING ((('-559734684', rt1.c1, rt1.c2)) NOT BETWEEN ((((rt1.c4) NOT NULL), NULL, CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 END)) AND ((MAX(rt1.c3), (((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c4))), CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END))); -- 1ms;
SELECT (((((rt1.c0)GLOB(rt1.c3))))>=((rt1.c0 COLLATE RTRIM))) FROM rt1 WHERE ((((CASE 1.584580547E9  WHEN x'' THEN 'IC' ELSE 0Xffffffffad0dc31b END))>(((('908695737') NOT BETWEEN (x'aa73') AND (NULL)))))) LIMIT -1361074502; -- 0ms;
SELECT DISTINCT ((((rt1.c3)&(rt1.c1)))>('U()Y')), ROW_NUMBER() OVER ( ORDER BY CAST(((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c3)) AS INTEGER) DESC), (((rt1.c4))!=((GROUP_CONCAT(rt1.c0)))) FROM rt1 WHERE ((((('L⛡R62<f') NOT NULL))OR(((NULL)/('0.5590143213216093'))))) GROUP BY ((rt1.c0 COLLATE NOCASE) NOTNULL), (- (CAST(rt1.c0 AS NUMERIC))), x'' HAVING 0Xffffffffed56a36d; -- 0ms;
SELECT 0.5898769163028976 COLLATE BINARY FROM rt1 GROUP BY CAST(rt1.c2 COLLATE RTRIM AS BLOB) HAVING CASE NULL  WHEN rt1.c4 THEN rt1.c3 END COLLATE BINARY ORDER BY ((((rt1.c1)||(rt1.c1))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (rt1.c4)); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM rt1; -- 0ms;
SELECT NULL, (((rt1.c4)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((((rt1.c4)AND(rt1.c4))))), CAST(AVG(rt1.c3) AS INTEGER) FROM rt1 WHERE (CAST(LOWER(1.347563142E9) AS INTEGER)); -- 0ms;
SELECT (((((rt1.c0)) BETWEEN (('a!Fl-I')) AND ((rt1.c3)))) IS FALSE), rt1.c3, CASE CAST(rt1.c3 AS REAL)  WHEN CASE WHEN rt1.c3 THEN '1634944991' ELSE rt1.c4 END THEN ((rt1.c3)AND(NULL)) END, (((rt1.c3)) NOT BETWEEN ((((NULL)/(rt1.c4)))) AND (((+ (rt1.c3))))), FIRST_VALUE(((COALESCE(DISTINCT 0.9836835891945424, 0.7411357332276955, rt1.c2, rt1.c0))|(json_object(rt1.c3, rt1.c2, rt1.c0, rt1.c0)))) OVER () FROM rt1 GROUP BY (((rt1.c3)) BETWEEN (((NOT (rt1.c2)))) AND ((((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c3))))) HAVING (((((rt1.c0, 0X45c4917e, rt1.c0)) BETWEEN ((rt1.c3, rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c1))))!=(json_array_length(rt1.c4, rt1.c1)));SELECT DISTINCT ((rt1.c3)<<(rt1.c1)) COLLATE BINARY FROM rt1 WHERE (((((0.29427270516537885))<=((x''))) IN ((((0X26e1d8e7)) BETWEEN ((NULL)) AND ((0.0469794654808986)))))); -- 0ms;
SELECT DISTINCT ((((rt1.c2)AND(((0.0287738073486824) BETWEEN (rt1.c1) AND (rt1.c3)))))OR(((NULL) NOTNULL))) FROM rt1 WHERE ((CAST(0.9443797401097781 AS TEXT) IN ())) ORDER BY ((rt1.c0 IN ()) IN (((rt1.c3)<>(rt1.c4)))) DESC, CASE (+ (rt1.c1))  WHEN ((((rt1.c2)AND(rt1.c4)))AND(rt1.c1)) THEN (rt1.c4 IN ()) END ASC; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(LOWER(DISTINCT rt1.c3)) OVER () FROM rt1 GROUP BY (((((rt1.c4))<>((rt1.c4)))) NOTNULL) HAVING CAST(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c3)) AS BLOB); -- 0ms;
SELECT DISTINCT (+ ((- (rt1.c3)))) FROM rt1 WHERE (0xffffffff8bb7aba5); -- 0ms;
SELECT DISTINCT LAST_VALUE((- (CASE WHEN rt1.c4 THEN rt1.c3 END))) OVER () FROM rt1 WHERE ('3786200'); -- 0ms;
SELECT ALL CASE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN (rt1.c4 IN ()) THEN ((x'') NOT BETWEEN (rt1.c4) AND (rt1.c0)) WHEN ((rt1.c0)+(rt1.c4)) THEN CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END WHEN ((rt1.c1)=(rt1.c3)) THEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c4))) ELSE (- (rt1.c1)) END FROM rt1 WHERE (CASE ('' IN ())  WHEN ((x'6262') ISNULL) THEN ((x'') BETWEEN (0Xffffffffbac36ef0) AND (1257228896)) END); -- 0ms;
SELECT DISTINCT (((((rt1.c3)/(rt1.c3))))<((MIN(rt1.c2)))) FROM rt1 WHERE (x'') ORDER BY ABS(((x'') BETWEEN ('9G') AND (rt1.c2))), ((((rt1.c1 IN (rt1.c1))))!=((((rt1.c2) IS TRUE)))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt1.c2)/(rt1.c0))) NOTNULL), CAST(rt1.c4 AS TEXT), CASE COUNT(*)  WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c4) BETWEEN (rt1.c2) AND (0x191222d3)) WHEN rt1.c1 THEN AVG(rt1.c2) WHEN (- (rt1.c2)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)) END FROM rt1; -- 0ms;
SELECT (((rt1.c4)) BETWEEN ((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c0)))) AND ((((rt1.c1) NOTNULL)))) FROM rt1 GROUP BY ((((((rt1.c1)%(rt1.c1)))OR((+ (rt1.c0)))))AND(rt1.c2)) ORDER BY (((((((rt1.c4, rt1.c4, rt1.c3))>((1614513681, rt1.c3, rt1.c1))))OR(((((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c1)))))OR((rt1.c2 IN ())))  NULLS LAST; -- 0ms;
SELECT ALL 0.25956617301020823 FROM rt1; -- 0ms;
SELECT ALL (((((rt1.c3)>(rt1.c3)), CAST(rt1.c2 AS REAL), (rt1.c0 IN ())))=((((rt1.c2) IS TRUE), ((0.9295764372607433) NOT BETWEEN (rt1.c4) AND (NULL)), CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))), ((((rt1.c2) IS FALSE)) NOT NULL), (((rt1.c0)) BETWEEN (((~ (rt1.c2)))) AND ((NULLIF(x'0a2d', rt1.c3)))), ((rt1.c4) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) AND (((rt1.c1) IS TRUE))), CASE WHEN SQLITE_SOURCE_ID() THEN ((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((rt1.c4) IS TRUE) END FROM rt1 WHERE ('-1648391780' COLLATE BINARY); -- 0ms;
SELECT (((((x'' IN ()))OR(rt1.c1)))OR(rt1.c2)) FROM rt1 WHERE ((((0xffffffff9dbf899c, 0.8823511570854587, x'a945')) BETWEEN ((((0X470fac9d) NOTNULL), CASE WHEN 'Gh' THEN x'f94b' WHEN NULL THEN '' WHEN '-1594168313' THEN '' ELSE 0.8979245216377446 END, 0xfffffffffa72ef0d COLLATE RTRIM)) AND ((CASE WHEN '-524862910' THEN x'beb6' ELSE x'' END, -1.650667752E9, (((('0.45841343808835044')AND('HH')))OR(x'5edc')))))) INTERSECT SELECT ALL LIKELY(MAX(rt1.c3)) FROM rt1; -- 0ms;
SELECT SUM(MIN(rt1.c2)) FROM rt1;SELECT ALL ((0.0797636489573702) IS TRUE) FROM rt1 WHERE (((((((NULL) BETWEEN (NULL) AND (x'')))OR(((NULL) IS TRUE))))OR(((((0.3051089761754935)AND('515554196')))AND(1827568824))))); -- 0ms;
SELECT DISTINCT (((((rt1.c0 IN ()))OR(x'')))OR(CAST(rt1.c3 AS BLOB))) FROM rt1; -- 0ms;
SELECT ALL (NOT ((+ (rt1.c4)))) FROM rt1; -- 0ms;
SELECT TOTAL(rt1.c1) OVER (), NTILE((((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4)))) BETWEEN ((rt1.c3 IN (rt1.c1))) AND (TRIM(rt1.c4, rt1.c4)))) OVER (), CAST((NOT (rt1.c1)) AS INTEGER) FROM rt1 WHERE (((((('K%') BETWEEN ('616153941') AND ('548699444')), ((2.080934207E9)*('៕[o')), CASE NULL  WHEN '' THEN '-820040135' ELSE '1694203238' END, CASE 0.5350003728921303  WHEN x'' THEN x'' WHEN x'7795' THEN NULL WHEN x'' THEN NULL ELSE -1568280894 END, CAST(x'524f' AS NUMERIC)))=(((('0.8741957143938555')<<(0.07296485275546671)), 0.10167884949123929, ((NULL) ISNULL), ((0.6425573396935578) NOTNULL), ((NULL) NOTNULL))))); -- 0ms;
SELECT (((LIKELY(rt1.c4)))<(((- (rt1.c1))))) FROM rt1 WHERE ((+ (CASE WHEN 1853109176 THEN NULL WHEN 0.09294319260593065 THEN 0.31848995557389426 WHEN x'5f0f' THEN '1' ELSE NULL END))); -- 0ms;
SELECT CASE WHEN ((rt1.c0) ISNULL) THEN ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)) WHEN ((rt1.c0)==(rt1.c0)) THEN CAST(rt1.c3 AS BLOB) WHEN ((rt1.c3)|(rt1.c4)) THEN (('1169627371') NOT NULL) ELSE COUNT(rt1.c2) END, ((load_extension(rt1.c0, rt1.c0))<<(((rt1.c4) IS FALSE))), PERCENT_RANK() OVER () FROM rt1;SELECT DISTINCT SUM(((rt1.c0)LIKE(rt1.c1))) OVER (), SUM(((rt1.c1)<=(rt1.c4))) OVER (), ((((NOT (rt1.c4))))!=((NULLIF(x'86aa', rt1.c1)))) FROM rt1 LIMIT 202353717; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((rt1.c1)||(rt1.c2))) IS TRUE)) OVER () FROM rt1 WHERE (CASE WHEN (+ (x'')) THEN ((((x'')OR('%\r')))AND(0.43745013646159947)) ELSE x'' END) LIMIT 925818102; -- 0ms;
SELECT ((rt1.c4)>>(0.31717476475993056)) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT x'', ((((NULL)%(rt1.c2)))>((rt1.c2 IN ()))), ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) IS TRUE) FROM rt1; -- 0ms;
SELECT ALL CASE WHEN COUNT(*) THEN (NOT (rt1.c3)) END, LAG(NULL, (((((((rt1.c3)OR(rt1.c4)))AND(rt1.c3))))>=((CAST(NULL AS INTEGER)))), ((((((((CAST(rt1.c3 AS BLOB))AND(((rt1.c4) ISNULL))))AND(((rt1.c4) IS FALSE))))AND(((((rt1.c2)AND(rt1.c4)))OR(rt1.c1)))))OR(((rt1.c4) BETWEEN (rt1.c1) AND (x''))))) OVER (), CAST(NULL AS TEXT) FROM rt1; -- 1ms;
SELECT DISTINCT x'' FROM rt1 WHERE (((NULL)OR(0X65ba0860)) COLLATE BINARY); -- 0ms;
SELECT ALL (((rt1.c1, rt1.c1, rt1.c3))<((rt1.c4, rt1.c4, rt1.c1))) COLLATE NOCASE, UPPER(x''), ((((('-643507050', rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c3)) AND ((rt1.c0, rt1.c1, rt1.c0))))=(CAST(rt1.c2 AS NUMERIC))) FROM rt1; -- 0ms;
SELECT ALL CASE WHEN ((rt1.c4)OR(rt1.c0)) THEN (NOT (rt1.c2)) ELSE (NOT (rt1.c3)) END FROM rt1; -- 0ms;
SELECT ALL AVG(((rt1.c3)IS(rt1.c4))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS INTEGER)) BETWEEN (rt1.c2) AND (((rt1.c2)<>(rt1.c4)))) FROM rt1 WHERE ((((('') BETWEEN (0.9538313962786584) AND (-2.73104051E8))) ISNULL)) LIMIT 51620838; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (CAST((((NULL))>((0.5489766186697137))) AS BLOB)); -- 0ms;
SELECT ALL ((('1e500')) BETWEEN ((rt1.c0)) AND ((rt1.c2))) COLLATE BINARY FROM rt1; -- 0ms;
SELECT DISTINCT 0.020407620101294488 FROM rt1; -- 0ms;
SELECT NULL FROM rt1 WHERE ((((0.26832671875850067, x'', NULL)) NOT BETWEEN ((NULL, '', 167667678)) AND ((x'ca72', NULL, NULL))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((+ (rt1.c2)))||(LTRIM(rt1.c0, rt1.c4))) FROM rt1 WHERE ((- (CASE 1.807165876E9  WHEN x'b22f' THEN 1e500 WHEN '752441979' THEN 0.06966401115137966 WHEN x'' THEN -611976500 ELSE 0.8076710490087318 END))); -- 1ms;
SELECT ALL CAST(rt1.c4 AS REAL) COLLATE NOCASE FROM rt1 WHERE (CAST(CASE WHEN 0.45841343808835044 THEN x'4ed7' WHEN '1171739889' THEN NULL WHEN NULL THEN x'' ELSE 0Xffffffffd9e2db0f END AS BLOB)) LIMIT 1299305362; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT SUM(rt1.c4)), TYPEOF(((rt1.c3) NOT NULL)), ((((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4)))!=(((((rt1.c3)AND(rt1.c3)))OR(rt1.c4)))) FROM rt1; -- 0ms;
SELECT (CAST(rt1.c1 AS INTEGER) IN ()) FROM rt1 WHERE ((((((('0.03645809560919433')AND('293937524')))AND(NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((rt1.c4)GLOB(rt1.c2))) NOTNULL), ((((rt1.c1)<(rt1.c3)))%(((rt1.c4) NOT BETWEEN (NULL) AND (rt1.c3)))), ((CAST(rt1.c1 AS TEXT))<=((((0.514173726417924, rt1.c3, rt1.c0))<=((rt1.c1, rt1.c2, rt1.c2))))) FROM rt1 WHERE (((CAST(2143590703 AS BLOB)) NOT BETWEEN (((0.005155517915370944)==(NULL))) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT 'jEZ2.4iv2' FROM rt1 WHERE (((('TRUE')*(x'')) IN (COALESCE(DISTINCT x'', 1.6903005E9, x'', x'')))); -- 0ms;
SELECT ((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)) COLLATE RTRIM, UPPER(DISTINCT (rt1.c3 IN (rt1.c2))), (('') IS FALSE) FROM rt1 WHERE (((CASE WHEN '1956711501' THEN NULL END)GLOB((+ ('[]'))))); -- 0ms;
SELECT (~ (((((rt1.c4)OR(rt1.c1)))OR(rt1.c1)))) FROM rt1; -- 0ms;
SELECT DISTINCT MAX(((((rt1.c1)AND(rt1.c2)))OR(rt1.c3))), (((rt1.c1)) BETWEEN ((MIN(0.7645627335164598))) AND ((CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 WHEN 'PF' THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END))), CAST(json_array(rt1.c1, rt1.c1) AS INTEGER) FROM rt1 WHERE (CAST(CAST(x'' AS NUMERIC) AS REAL)); -- 0ms;
SELECT DISTINCT ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))+((rt1.c3 IN ()))) FROM rt1; -- 0ms;
SELECT ((CAST(rt1.c0 AS NUMERIC))>((~ (rt1.c1)))) FROM rt1 WHERE ('95925467'); -- 1ms;
SELECT ((((rt1.c3) ISNULL))<<(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c2 END)) FROM rt1 WHERE ((+ ('')) COLLATE RTRIM COLLATE BINARY) ORDER BY ((((+ (rt1.c4))))==((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c3 END))) ASC  NULLS LAST; -- 0ms;
SELECT ALL CASE WHEN rt1.c3 THEN -1915304119 WHEN 0.08110651566708471 COLLATE NOCASE THEN rt1.c0 COLLATE BINARY WHEN rt1.c2 COLLATE BINARY THEN MAX(rt1.c1) ELSE x'17d4' END, ((~ (rt1.c0)) IN ()), '' COLLATE BINARY FROM rt1; -- 0ms;
SELECT DISTINCT highlight(((rt1.c1)*(-7.62119914E8)), (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((0.314668664301585))), 'JbU,*-', ABS(rt1.c0)), CASE rt1.c3  WHEN rt1.c4 COLLATE NOCASE THEN COUNT(*) END, ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 END) NOT NULL), CAST(rt1.c4 AS TEXT) COLLATE NOCASE, (((rt1.c4 IN ())) BETWEEN (COUNT(*)) AND ((NOT (rt1.c1)))) FROM rt1 WHERE ((((('},'))<(('-717885283'))) IN ())) ORDER BY (((((rt1.c4)OR(rt1.c2)))OR(rt1.c1)) IN ()), ((rt1.c2) NOT NULL) COLLATE RTRIM  NULLS FIRST;SELECT DISTINCT NTH_VALUE(((((- (rt1.c2)), (((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))), rt1.c2 COLLATE NOCASE))>(((rt1.c4 IN (rt1.c2)), CAST(rt1.c3 AS TEXT), (rt1.c3 IN ())))), ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1))) NOT BETWEEN (rt1.c2) AND (CAST(rt1.c1 AS REAL)))) OVER (), CAST(((rt1.c2) NOTNULL) AS REAL), (((rt1.c4 IN ())) NOT BETWEEN (NULL) AND (((rt1.c2)IS NOT(rt1.c0)))) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c0) BETWEEN (rt1.c3) AND (0X14f15590))) NOT BETWEEN (CASE WHEN rt1.c4 THEN rt1.c4 END) AND (SUM(rt1.c3))) FROM rt1; -- 0ms;
SELECT DISTINCT MAX(((rt1.c1)IS NOT(NULL))) FROM rt1 WHERE (CAST(x'' COLLATE RTRIM AS BLOB)); -- 0ms;
SELECT DISTINCT rt1.c3 FROM rt1 WHERE (CAST(CASE WHEN NULL THEN NULL END AS TEXT)); -- 0ms;
SELECT ALL NULLIF(rt1.c4 COLLATE NOCASE, rt1.c1) FROM rt1 WHERE (CASE WHEN ((NULL) NOT BETWEEN ('') AND (NULL)) THEN (x'' IN (x'')) WHEN ((-1057929628)OR(x'')) THEN ((x'3d8a') NOT NULL) WHEN (NOT (0.722554498158046)) THEN ((x'')/(0.059509097549416023)) END); -- 1ms;
SELECT DISTINCT COUNT(CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c4 END) COLLATE NOCASE FROM rt1; -- 0ms;
SELECT ALL (+ (rt1.c2 COLLATE BINARY)) FROM rt1 WHERE ((SUBSTR('', NULL) IN ())) ORDER BY (- (rt1.c2)) DESC; -- 0ms;
SELECT DISTINCT CAST(CAST(rt1.c0 AS REAL) AS TEXT) FROM rt1; -- 0ms;
SELECT DISTINCT (((+ (rt1.c2)))-(((rt1.c2) ISNULL))) FROM rt1; -- 0ms;
SELECT DISTINCT (ABS(rt1.c2) IN ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c1))), CASE WHEN rt1.c0 THEN rt1.c0 END)) FROM rt1 ORDER BY ((((((((rt1.c4)OR(rt1.c2)))OR(rt1.c1)))OR((- (NULL)))))AND((~ (rt1.c4)))) DESC; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt1 WHERE (((('-1175710994', 1.22145482E8, x'1c5a')) NOT BETWEEN (((('Tn') NOT NULL), x'', (('-567011930') ISNULL))) AND (((((0.2895944790296209))==((''))), ((-733493926) BETWEEN ('') AND (NULL)), UNICODE(NULL))))); -- 0ms;
SELECT DISTINCT (NOT (((rt1.c3)==(rt1.c0)))) FROM rt1 WHERE (((-1716647229 COLLATE BINARY)<<(((x'') NOT BETWEEN ('-1853594111') AND (0Xffffffffc880bacf))))); -- 0ms;
SELECT DISTINCT CASE 0Xfffffffff9a861cf  WHEN rt1.c4 THEN ((rt1.c2)<(rt1.c1)) ELSE CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END END FROM rt1 WHERE ((- (SQLITE_COMPILEOPTION_USED(x'3362')))); -- 0ms;
SELECT DISTINCT (MIN('-1303611573', rt1.c0) IN ()) FROM rt1 WHERE (CAST(json_remove('2137109072', '1945557836') AS TEXT)) ORDER BY ((((rt1.c2 IN ()), '1347563142', ((((rt1.c3)AND(rt1.c3)))OR(rt1.c3)), CAST(rt1.c0 AS TEXT), CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 END))<>((((rt1.c1)IS(rt1.c0)), TYPEOF(DISTINCT rt1.c3), DATE(rt1.c3, rt1.c1, 0Xffffffffc68fffb8), ((((0.9506083356811319)AND('-1594168313')))AND(rt1.c4)), rt1.c3))) ASC  NULLS LAST LIMIT 1917431369;SELECT DISTINCT CAST(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS BLOB), ((((rt1.c4)<=(rt1.c4))) NOT BETWEEN ('-258446891') AND (x'')), CASE CAST(rt1.c2 AS NUMERIC)  WHEN rt1.c1 THEN ((rt1.c3) IS TRUE) END FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c2))<((rt1.c3))) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c3)%(((((((((rt1.c4)AND(0.3627083096601964)))AND(rt1.c4)))AND(rt1.c1)))AND(rt1.c4)))) FROM rt1 WHERE (CASE (+ (0.9316522454223641))  WHEN CASE 0.4866017529716896  WHEN '' THEN -2.92074242E8 ELSE 0X20bf3622 END THEN ((((NULL)AND(-422831912)))AND(0.8249762164812171)) ELSE (('-1177304126') BETWEEN (NULL) AND (-2.105457478E9)) END); -- 0ms;
SELECT ((((rt1.c4)>(rt1.c1))) IS TRUE) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1 WHERE (((x'') BETWEEN ('7)') AND (0.22197744180766787)) COLLATE NOCASE); -- 0ms;
SELECT ALL LIKELY(DISTINCT CAST(rt1.c2 AS TEXT)) FROM rt1; -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt1.c4 THEN rt1.c3 END)OR(rt1.c3 COLLATE RTRIM)))OR(LENGTH(rt1.c4))), CAST(((rt1.c3)||(rt1.c3)) AS TEXT), CHANGES() FROM rt1 WHERE (((CAST(0xffffffffd749647e AS BLOB)) BETWEEN (CASE WHEN NULL THEN NULL END) AND (((0.1147126383464212)GLOB(x'29de'))))) GROUP BY (((CASE WHEN -1028040126 THEN rt1.c3 ELSE rt1.c2 END))<>((UNLIKELY(DISTINCT rt1.c2)))); -- 0ms;
SELECT DISTINCT json_valid(rt1.c0) COLLATE RTRIM FROM rt1 WHERE ((((CASE 0.9575705875751761  WHEN NULL THEN x'' END, CAST(NULL AS NUMERIC), 0.9443797401097781))==((-419954444 COLLATE NOCASE, ((((0.5646740915616443)AND(x'')))OR(x'')), ((NULL)>=(0.1353678889211456)))))); -- 0ms;
SELECT DISTINCT ((UNLIKELY(DISTINCT rt1.c2)) NOT BETWEEN (((rt1.c3) ISNULL)) AND (((rt1.c0) NOTNULL))) FROM rt1 WHERE (CAST(NULLIF(DISTINCT -535820883, 0.8096998128708357) AS INTEGER)); -- 1ms;
SELECT DISTINCT TRIM(DISTINCT (+ (rt1.c3))) FROM rt1 WHERE (CAST((0.8068409169712975 IN ()) AS TEXT)) LIMIT 758292195; -- 0ms;
SELECT DISTINCT (((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4)))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 WHEN '' THEN rt1.c1 ELSE rt1.c2 END) AND (TYPEOF(DISTINCT rt1.c3))) FROM rt1; -- 0ms;
SELECT ALL CAST(((rt1.c1)<=(rt1.c0)) AS BLOB), COUNT(*) OVER (), AVG(((rt1.c2) IS FALSE)) OVER () FROM rt1 WHERE ((UPPER(DISTINCT 0.2467875810208685) IN ())); -- 0ms;
SELECT DISTINCT (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 END))) FROM rt1 WHERE ((- (0xffffffffda9a3c97 COLLATE BINARY))); -- 0ms;
SELECT (('1690300500')==(((rt1.c1) IS TRUE))), SUM((((rt1.c1))<((rt1.c3)))) FILTER(WHERE ((rt1.c4) ISNULL)) OVER ( PARTITION BY CAST(rt1.c2 COLLATE RTRIM AS BLOB), (rt1.c1 IN ()) COLLATE BINARY), ((NULL)/(MIN(rt1.c1))), ((((rt1.c1)AND(rt1.c0))) IS FALSE), PERCENT_RANK() OVER () FROM rt1 WHERE (CAST(x'432b' COLLATE RTRIM AS REAL)) ORDER BY ((((- (rt1.c2))))<=((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1 LIMIT 1827568824; -- 0ms;
SELECT ALL NULL FROM rt1 WHERE ((((0.7017281961996162, NULL, 0.07066297301554159)) NOT BETWEEN (((NULL IN ()), ((1421920058) NOT BETWEEN (NULL) AND (0.7183920305285941)), (- ('')))) AND (('H' COLLATE RTRIM, (- (NULL)), CASE NULL  WHEN 954093508 THEN '-600517107' ELSE 0x1924c3fc END)))) LIMIT -388808268; -- 0ms;
SELECT DISTINCT TYPEOF(UPPER(DISTINCT rt1.c2)), ((rt1.c2)!=(((rt1.c3) IS TRUE))), ((rt1.c3) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (CAST(0.7137399978533993 AS REAL))) FROM rt1 WHERE (CASE WHEN ((NULL) NOT BETWEEN ('') AND (NULL)) THEN CAST(0.3109066648500338 AS TEXT) ELSE (('+x')%(0.19035858047087828)) END); -- 1ms;
SELECT RANK() OVER (), (((+ (rt1.c2))) ISNULL), ((NULL) BETWEEN ('419280119') AND (AVG(rt1.c1))) FROM rt1 LIMIT -152423643 OFFSET -1582495142; -- 0ms;
SELECT ALL ((rt1.c4) BETWEEN ((+ (NULL))) AND (x'4503' COLLATE NOCASE)), ((rt1.c3) IS FALSE), (((((rt1.c2, rt1.c2, rt1.c0))<=((rt1.c4, rt1.c4, rt1.c4)))) NOT NULL) FROM rt1; -- 0ms;
SELECT DISTINCT (~ ((((rt1.c2, rt1.c3, rt1.c0))<=((rt1.c0, rt1.c0, rt1.c4))))) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c3 COLLATE BINARY))>=(((+ (rt1.c4))))) FROM rt1 ORDER BY ABS(rt1.c1 COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((rt1.c4) IS FALSE), AVG(CAST(rt1.c1 AS TEXT)) COLLATE RTRIM, (((((rt1.c3))!=((rt1.c4))))<=(((rt1.c4)<(rt1.c4)))), RANK() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), rt1.c3 FROM rt1; -- 0ms;
SELECT DISTINCT ((((MIN(rt1.c3))OR((+ (rt1.c0)))))OR((((rt1.c2))>((rt1.c0))))), '798978302', ((COUNT(rt1.c4))<(MAX(rt1.c3, 0.3892729975648318, rt1.c3, rt1.c0))) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((+ (((x'') NOTNULL)))); -- 0ms;
SELECT DISTINCT (- (((rt1.c4)>(rt1.c0)))) FROM rt1 GROUP BY TOTAL_CHANGES() HAVING ((((NULL)OR(rt1.c1 COLLATE NOCASE)))AND((((rt1.c3))>((rt1.c2))))); -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(DISTINCT rt1.c1, 0.19914224868204333))!=(LIKELIHOOD(rt1.c0, 0.8391896578199696))) FROM rt1 WHERE (((0xffffffff8df59671 COLLATE NOCASE) NOT BETWEEN ('677592786' COLLATE BINARY) AND ('x\n' COLLATE BINARY))); -- 1ms;
SELECT DISTINCT CAST((rt1.c0 IN ()) AS TEXT) FROM rt1 WHERE ((~ (NULL))); -- 0ms;
SELECT ALL AVG(((rt1.c3)&(rt1.c2))) FROM rt1 WHERE (((('-68577609', 0.16280321850594004, '-1758128272')) NOT BETWEEN ((('^J' IN ()), (('') BETWEEN (0.01267258875446231) AND (x'27f0')), CAST(NULL AS NUMERIC))) AND (((('1249063157')<=(NULL)), (('c''PKFC]') IS FALSE), (+ ('QA')))))); -- 0ms;
SELECT DISTINCT (((NOT (rt1.c2)))>=(((rt1.c0) NOTNULL))), NTH_VALUE(((((((((rt1.c4 COLLATE NOCASE)AND((((rt1.c1))<>((rt1.c1))))))OR(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c4)))))OR(rt1.c3 COLLATE RTRIM)))OR(CASE -1265555840  WHEN rt1.c3 THEN rt1.c4 ELSE 0.34861858356124586 END)), NULLIF((+ (rt1.c2)), rt1.c1 COLLATE BINARY)) OVER (), ROW_NUMBER() OVER () FROM rt1 WHERE ((- (x'dbf6' COLLATE RTRIM))); -- 0ms;
SELECT SUM(((rt1.c0) IS TRUE)) OVER (), (((((rt1.c3)<=(rt1.c4))))!=((((rt1.c1)<>(rt1.c2))))), NULLIF('', rt1.c0) FROM rt1; -- 0ms;
SELECT (((rt1.c4 COLLATE BINARY))==((((rt1.c3)<<(rt1.c4))))) FROM rt1; -- 0ms;
SELECT ALL ((CASE WHEN rt1.c2 THEN x'90ed' ELSE rt1.c0 END) NOT NULL), '-1963619637', CAST(rt1.c3 AS NUMERIC) FROM rt1 ORDER BY ((rt1.c4)LIKE(rt1.c4)) COLLATE NOCASE DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt1 WHERE (((NULL)OR(0.6006479141178034 COLLATE BINARY))); -- 0ms;
SELECT rt1.c0 FROM rt1; -- 0ms;
SELECT CAST(((x'') IS FALSE) AS BLOB) FROM rt1 GROUP BY NULLIF(((((rt1.c0)AND(NULL)))OR(NULL)), ((rt1.c2)>=(rt1.c1))) HAVING (CAST(rt1.c3 AS BLOB) IN ()) LIMIT 1622224317; -- 1ms;
SELECT DISTINCT NTILE((((((rt1.c1, rt1.c4, rt1.c2))<(('', rt1.c1, '')))) NOTNULL)) OVER () FROM rt1 GROUP BY CAST(((rt1.c3)||('-787831027')) AS REAL), rt1.c0, x'e4df', ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4)))%(DATE(rt1.c0, rt1.c2, rt1.c2, rt1.c2, rt1.c0))), ((rt1.c4)||(x'')) HAVING CAST(NULL AS REAL); -- 0ms;
SELECT ALL ((COUNT(rt1.c4)) IS FALSE) FROM rt1 WHERE (((('^J')) NOT BETWEEN ((((x'')AND(x'')))) AND ((('HH' IN ()))))); -- 0ms;
SELECT ALL ((((((((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE 0.2940080974574901 END)OR(((('1185987605')) BETWEEN ((rt1.c0)) AND ((rt1.c3))))))OR(rt1.c2)))AND(CAST(rt1.c1 AS INTEGER))))OR(x'9d10')) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(x'' AS NUMERIC), COUNT(((((rt1.c4)OR(rt1.c1)))OR(rt1.c4))) OVER (), (((- (rt1.c4))) BETWEEN (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 END) AND (UNLIKELY(rt1.c4))) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c4)-(-1.051447027E9)) COLLATE RTRIM FROM rt1 WHERE (CAST(((0.2893108474892162) IS TRUE) AS TEXT)) GROUP BY ((((rt1.c2)||(rt1.c2)))<<(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)))) HAVING ((((TYPEOF(DISTINCT 0.37444110207397785))OR(-5.21507706E8 COLLATE BINARY)))AND(((rt1.c0)+(rt1.c1)))); -- 0ms;
SELECT DISTINCT (((('-1817815074')==(rt1.c3))) NOT BETWEEN (((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2))) AND ('mu')) FROM rt1; -- 0ms;
SELECT ALL rt1.c3 FROM rt1 WHERE ((((NULL)LIKE(NULL)) IN (((((x'')AND('')))AND(0.4064573204758113)), NULL COLLATE BINARY, 'ᖀQUch\Tu'))) LIMIT -273104051; -- 0ms;
SELECT DISTINCT ((((rt1.c0)>=(rt1.c4)))||((rt1.c0 IN ()))), LOWER(DISTINCT x'798f'), CAST(((rt1.c2)IS(0.3649772617917454)) AS NUMERIC) FROM rt1 GROUP BY (((TRIM(DISTINCT rt1.c2, rt1.c2)))>=(((+ (rt1.c3))))), rt1.c0, (DATE(rt1.c3, rt1.c4, 'e趼lF.O') IN ()); -- 0ms;
SELECT ALL ((TOTAL(rt1.c1)) ISNULL) FROM rt1; -- 0ms;
SELECT ((NULL)>=(((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c2)))) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c3) NOT NULL))=(COUNT(*))) FROM rt1 WHERE (((UPPER(DISTINCT 0.3236632637757473))<=(CAST('灞F' AS REAL)))); -- 0ms;
SELECT (NULL IN (CAST(rt1.c3 AS NUMERIC))) FROM rt1; -- 0ms;
SELECT ALL COUNT(*) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((''))) FROM rt1 WHERE ((((NULL)<<('[bP')) IN (((0X7ba9733a) ISNULL)))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2))) NOT BETWEEN ((NOT (rt1.c3))) AND ((0.6947204087072415 IN (rt1.c3, rt1.c4)))) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((rt1.c2 IN ())) IS TRUE) FROM rt1; -- 0ms;
SELECT DISTINCT (- (((rt1.c2)==(rt1.c1)))) FROM rt1 WHERE ((((((((((('-616908965') ISNULL))OR(1314801394 COLLATE BINARY)))OR((((NULL)) BETWEEN ((0.6445420152441983)) AND ((0.43126372041483285))))))OR(CAST(0.1952265524289909 AS REAL))))OR(CASE WHEN x'81e2ae68' THEN '-609695501' END))) GROUP BY CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END COLLATE RTRIM HAVING ((((rt1.c3 COLLATE NOCASE)AND((rt1.c2 IN ()))))AND((rt1.c3 IN ()))); -- 0ms;
SELECT ((((load_extension(rt1.c1))OR(((rt1.c4)>>(rt1.c3)))))AND(((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c2)))) FROM rt1 WHERE (((((0.40774700618130644) NOTNULL)) NOT BETWEEN (CASE 0.024202978677578812  WHEN NULL THEN x'' WHEN x'' THEN 0.4510941930092228 WHEN x'' THEN NULL END) AND (CAST(NULL AS TEXT)))) GROUP BY rt1.c1 HAVING (((((rt1.c2) NOT NULL)))<((rt1.c3))); -- 1ms;
SELECT UPPER(((rt1.c1) NOT NULL)), (((((NULL))<=((0Xffffffff85a093ad))))>>(COALESCE(rt1.c2, rt1.c4))), (LIKELY(DISTINCT rt1.c1) IN ()) FROM rt1; -- 0ms;
SELECT ALL CAST(x'' AS TEXT) FROM rt1 WHERE ((((('-321553002') NOTNULL))&((~ ('708546275'))))); -- 0ms;
SELECT ALL AVG(TOTAL(rt1.c4)) FROM rt1 WHERE (CAST((('1109259531')<<('')) AS REAL));SELECT DISTINCT x'' FROM rt1 WHERE (x'') LIMIT 910020370; -- 0ms;
SELECT ALL CAST(((((rt1.c0)AND(0.48531075974459204)))AND(rt1.c4)) AS TEXT) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((json_extract(rt1.c0, rt1.c3, rt1.c3, rt1.c0), CASE WHEN '0.9747513953081092' THEN rt1.c2 END, CAST(rt1.c3 AS BLOB))) AND ((((((rt1.c3)AND(rt1.c4)))OR(rt1.c4)), rt1.c3 COLLATE RTRIM, MAX(rt1.c4)))) FROM rt1 GROUP BY (((rt1.c4 COLLATE BINARY))<(((rt1.c2 IN ()))));SELECT DISTINCT (((rt1.c3)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((rt1.c0))), CAST(rt1.c4 COLLATE RTRIM AS BLOB), CASE rt1.c0  WHEN rt1.c1 THEN ((((((((0.06003180922192686)OR(NULL)))OR(rt1.c3)))OR(rt1.c4)))AND(rt1.c4)) WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3)) WHEN 0x3d1bc453 THEN CASE rt1.c2  WHEN rt1.c4 THEN rt1.c2 ELSE x'' END END FROM rt1; -- 0ms;
SELECT CASE (((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN UNLIKELY(DISTINCT rt1.c3) THEN RTRIM(rt1.c4) ELSE CASE rt1.c2  WHEN NULL THEN rt1.c3 END END, ((((rt1.c2)AND(rt1.c3))) BETWEEN (((((rt1.c4)AND(rt1.c4)))AND(rt1.c4))) AND (ABS(rt1.c3))), rt1.c2 FROM rt1; -- 0ms;
SELECT ((rt1.c4)>=((rt1.c2 IN ()))) FROM rt1; -- 0ms;
SELECT ALL rt1.c0 FROM rt1 WHERE (((((x'')*(NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT (+ (CAST(rt1.c4 AS BLOB))) FROM rt1 WHERE ((NULL IN (x'')) COLLATE BINARY COLLATE RTRIM); -- 1ms;
SELECT DISTINCT (NOT (rt1.c2 COLLATE RTRIM)) FROM rt1 GROUP BY (0.09270721259592729 IN (0.6126405014118477, CAST(rt1.c1 AS NUMERIC))) HAVING NULL; -- 0ms;
SELECT DISTINCT 0.04594965652911809 FROM rt1; -- 0ms;
SELECT DISTINCT CASE ((rt1.c4)/(rt1.c4))  WHEN rt1.c3 COLLATE NOCASE THEN rt1.c4 COLLATE RTRIM END FROM rt1 LIMIT -1192790957 OFFSET 753278591; -- 0ms;
SELECT DISTINCT ((LAST_INSERT_ROWID())||(rt1.c1)) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c1)||(CASE rt1.c3  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c3 END)) FROM rt1; -- 0ms;
SELECT ALL (((rt1.c0)) BETWEEN ((NULL)) AND ((0.6677409890880038))), 0.8150442357316967 COLLATE BINARY, ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 END)IS NOT(CAST(rt1.c0 AS REAL))) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT('') FROM rt1; -- 0ms;
SELECT (+ (MIN(rt1.c2))), ((((((((((rt1.c0)OR(rt1.c2)))OR(x'')))OR(rt1.c2)))AND(rt1.c0)))<((NOT (rt1.c2)))), rt1.c4 COLLATE NOCASE FROM rt1 WHERE (((('0.30544914028909453', x'', 0x456b0def))<((x'79665a93', '-238753176', x''))) COLLATE NOCASE); -- 0ms;
SELECT ((((rt1.c2) NOT NULL))/(((0.13180168217529942)&(rt1.c2)))), (((COUNT(rt1.c1), ((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c3)), (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2)))))<((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c1)), ((rt1.c2)IS(rt1.c4)), ((((((((((((rt1.c2)AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c3))))), COUNT(*) OVER (), ((((UNICODE(rt1.c0))AND(CASE WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c4 THEN NULL WHEN rt1.c4 THEN rt1.c0 ELSE NULL END)))AND(CASE WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c3 END)), rt1.c1 FROM rt1 WHERE (((((0.03645809560919433)-(0.3192847583421863))) BETWEEN (x'eeae' COLLATE BINARY) AND ((0.758441570034967 IN ())))); -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c3 THEN (- (rt1.c0)) END FROM rt1 LIMIT -1057295793; -- 0ms;
SELECT DISTINCT (((((rt1.c2) NOT BETWEEN (rt1.c3) AND (NULL))))==((INSTR(rt1.c1, rt1.c0)))) FROM rt1 ORDER BY CASE WHEN ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c4)))OR(rt1.c1)) THEN x'' WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c2)=(0.9302950970746195)) WHEN ((rt1.c2) NOT NULL) THEN (- (rt1.c4)) END  NULLS FIRST, '_)' ASC, ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))GLOB(((rt1.c0) NOT NULL))); -- 0ms;
SELECT COUNT(*) FILTER(WHERE (((((((((x'' IN ()))OR(rt1.c0 COLLATE RTRIM)))AND(CAST(rt1.c0 AS REAL))))OR(((((rt1.c3)OR(rt1.c2)))AND(rt1.c2)))))OR(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c0 END))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (~ (0.6971495841399424)), (((rt1.c0 COLLATE NOCASE, (rt1.c3 IN ()), CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END))=((((((rt1.c1)AND(rt1.c1)))AND(rt1.c3)), (rt1.c4 IN ()), (((rt1.c0, rt1.c0, rt1.c2))==(('''x͓龨￿[\nM', rt1.c4, rt1.c0)))))), GROUP_CONCAT(rt1.c2) COLLATE BINARY COLLATE BINARY FROM rt1 WHERE (((CASE WHEN 4.21839868E8 THEN NULL ELSE x'665f' END) IS FALSE)) GROUP BY ((((((((((rt1.c3)>>(rt1.c3)))AND(((x'') NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(UNLIKELY(rt1.c3))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (0.0)))), CASE WHEN (NOT (rt1.c1)) THEN (('鉦6TRz')IS(rt1.c0)) END, CASE WHEN NULL THEN '0CoM' WHEN ((rt1.c4) IS TRUE) THEN rt1.c2 WHEN (((rt1.c4))<>((rt1.c1))) THEN NULL END; -- 0ms;
SELECT DISTINCT STRFTIME(((((((((rt1.c4)AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c4)), SQLITE_COMPILEOPTION_USED(rt1.c0), ((rt1.c4)>=('1266070539')), ((rt1.c4) BETWEEN (rt1.c0) AND ('293937524')), AVG(rt1.c4)) FROM rt1 ORDER BY (((rt1.c4, rt1.c2, '1243860325')) BETWEEN ((CAST(rt1.c1 AS TEXT), ((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)), 'y>L\n')) AND ((((rt1.c0)<(rt1.c0)), (((rt1.c3, rt1.c3, 'R&'))<((rt1.c1, rt1.c1, rt1.c2))), LOWER(DISTINCT rt1.c3)))) ASC; -- 0ms;
SELECT ALL ((rt1.c1) NOTNULL), (((rt1.c3)) BETWEEN ((rt1.c4)) AND (('6AX*{HMY'))) COLLATE NOCASE, rt1.c4 FROM rt1 LIMIT 720888474 OFFSET -1847780247; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((((x'')AND('')))-(CASE WHEN NULL THEN '440257852' ELSE -1758128272 END))); -- 0ms;
SELECT CAST(rt1.c0 COLLATE RTRIM AS NUMERIC), CAST(MIN(rt1.c4) AS REAL), (((rt1.c4)) NOT BETWEEN ((MAX(rt1.c1))) AND ((((rt1.c1)GLOB(rt1.c2))))) FROM rt1; -- 0ms;
SELECT ALL (rt1.c3 COLLATE BINARY IN ()) FROM rt1 WHERE (IFNULL(DISTINCT (((NULL)) BETWEEN ((x'')) AND (('6Jde'))), ((((1034977939)OR(0.6056677491444343)))OR('1720088337')))); -- 0ms;
SELECT (((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 ELSE x'2d7f' END))<(('-1461817536'))), ((((((rt1.c2)IS(rt1.c1)))OR((((rt1.c3, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c1, rt1.c0)) AND ((rt1.c3, rt1.c1, rt1.c4))))))OR(((rt1.c1) NOT BETWEEN (1.7976931348623157E308) AND (rt1.c0)))), PERCENT_RANK() OVER ( PARTITION BY ((((((((((((x'')AND(CAST(rt1.c3 AS TEXT))))AND(CAST(rt1.c4 AS REAL))))AND(NULL)))OR(((rt1.c2)||(rt1.c2)))))OR(rt1.c2)))AND(((NULL)LIKE(rt1.c0)))), (((rt1.c3 IN (rt1.c0, rt1.c4))) IS TRUE)) FROM rt1 WHERE (0.8458397302197606); -- 0ms;
SELECT CAST(rt1.c4 AS INTEGER) FROM rt1 WHERE (LIKE((NOT (-1791584060)), (277390774 IN ('1269725371')))) ORDER BY CASE WHEN NULL THEN CAST(rt1.c4 AS TEXT) END, (('-1605239949') ISNULL) DESC; -- 0ms;
SELECT DISTINCT COUNT((((rt1.c2, rt1.c0, rt1.c2))<((rt1.c2, rt1.c1, rt1.c1))) COLLATE NOCASE) FROM rt1 GROUP BY (((rt1.c3 IN ()))*(rt1.c0 COLLATE RTRIM)) HAVING COUNT(*); -- 0ms;
SELECT DISTINCT (- ('-1323722615' COLLATE RTRIM)), (((((rt1.c0))>((rt1.c1))))IS NOT(UNLIKELY(rt1.c2))), (NOT (x'dad8')) FROM rt1 WHERE ((((+ (0x851d0d5))) IS FALSE)); -- 0ms;
SELECT (((rt1.c1 IN ()))IS NOT(LIKELIHOOD(rt1.c3, 0.4247462923923335))), ((rt1.c2 COLLATE RTRIM) BETWEEN (((1013682498)GLOB(rt1.c2))) AND (rt1.c4 COLLATE NOCASE)), ((x'') BETWEEN ('1428592512') AND ((- (rt1.c3)))) FROM rt1; -- 0ms;
SELECT DISTINCT (((~ (rt1.c3))) NOTNULL), GROUP_CONCAT(((rt1.c2)=(rt1.c4))) FILTER(WHERE (((rt1.c4) BETWEEN (rt1.c2) AND (NULL)) IN (CAST(rt1.c0 AS REAL)))) OVER (), ((CASE rt1.c2  WHEN rt1.c4 THEN rt1.c1 END)<(LOWER(DISTINCT x''))) FROM rt1 WHERE (((IFNULL(x'', NULL)) ISNULL)); -- 1ms;
SELECT ALL (+ ((rt1.c2 IN ()))) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c2)>>(rt1.c2)) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c3)<>(rt1.c4 COLLATE RTRIM)) FROM rt1 LIMIT 1270905340; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS TEXT))>>(((0.6026731926145131) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) FROM rt1 WHERE ((((NOT (NULL))) NOT NULL)) ORDER BY ((json_remove(rt1.c4, rt1.c4)) NOT BETWEEN ((rt1.c0 IN ())) AND (((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c4)))AND(NULL)))AND(rt1.c3)))); -- 0ms;
SELECT DISTINCT (((((rt1.c1))>=((rt1.c1))))/(CAST(rt1.c3 AS REAL))) FROM rt1; -- 0ms;
SELECT ALL ((CASE WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END) ISNULL), CAST(((rt1.c1)AND(rt1.c2)) AS TEXT), ((((((rt1.c4)OR(0.019932486138244387)))AND(rt1.c2)))IS('-937606089')) FROM rt1; -- 0ms;
SELECT ALL (COUNT(*) IN ()) FROM rt1 WHERE (((0.9911707592224107) IS FALSE)) LIMIT -1714808712; -- 0ms;
SELECT DISTINCT (((-1.26555584E9))==(((rt1.c3 IN ())))) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT((~ (rt1.c4))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c0, ((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END)==(rt1.c0 COLLATE BINARY)), CAST(((rt1.c0)>>(rt1.c2)) AS BLOB) FROM rt1 WHERE (((((95925467) IS FALSE))<=(((1823141791) BETWEEN (NULL) AND (0.30544914028909453))))) GROUP BY (((rt1.c3, rt1.c1, rt1.c4)) BETWEEN (((+ (rt1.c4)), CAST(rt1.c1 AS BLOB), ((rt1.c0)OR(rt1.c1)))) AND (((((rt1.c3))<=((NULL))), ((((rt1.c4)AND(NULL)))AND(rt1.c3)), ((rt1.c3)>(rt1.c3))))), CAST(NULL AS INTEGER) COLLATE RTRIM, ((0.3010018218505939)>=(((((((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c0)))AND(rt1.c4)))OR(rt1.c4)))) HAVING rt1.c3; -- 1ms;
SELECT SUM(ROUND(rt1.c3, x'')) FROM rt1 GROUP BY rt1.c3 HAVING COUNT(x''); -- 0ms;
SELECT DISTINCT ((((((rt1.c4)AND(rt1.c2)))AND(rt1.c4)))+(((((((((rt1.c0)OR(rt1.c4)))AND(NULL)))OR(NULL)))AND(rt1.c2)))), (rt1.c2 COLLATE RTRIM IN ()), ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN x'018d' WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END) NOTNULL) FROM rt1 WHERE (((((('0.2588422798229226')) NOT BETWEEN ((0.23979232787036997)) AND (('2887184')))) BETWEEN (((x'') ISNULL)) AND (x''))); -- 0ms;
SELECT DISTINCT COUNT(*), ((((((((((rt1.c4) IS FALSE))AND(((x'7a92')LIKE(rt1.c4)))))OR((((rt1.c1, x'', 'ql{t'))<>((rt1.c3, '728195044', rt1.c4))))))AND(((rt1.c0)/(rt1.c4)))))OR(((((rt1.c1)OR(rt1.c4)))OR(rt1.c2)))), COUNT(*) FROM rt1; -- 0ms;
SELECT CAST(rt1.c1 AS INTEGER) COLLATE BINARY COLLATE NOCASE FROM rt1 WHERE (((((((((((((((((0.6881558850555468)AND(x'')))AND('0.9523916154229676')))AND('1358157233')))OR(NULL)))OR((((0.2805262525939155))>((x''))))))AND(CAST('0.2720455111228519' AS INTEGER))))OR((((x'', x'', '.r0\n.d74U'))<=((']\r', NULL, ''))))))OR(('#hnt	ukcq' IN ())))); -- 0ms;
SELECT DISTINCT (rt1.c1 IN ()) COLLATE RTRIM COLLATE BINARY FROM rt1 WHERE ((((((0.8602197775939306))<=((-273104051))))IS NOT(715054176))); -- 0ms;
SELECT DISTINCT (~ (x'196e')) FROM rt1 WHERE ((((((- (x'')))AND(((0x6cd836e2)GLOB('-757990852')))))OR((('1293229374')/(x''))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((x'382d' IN ())) FILTER(WHERE (+ ('鉠MX&')) COLLATE RTRIM) OVER (), FIRST_VALUE(rt1.c1) OVER (), ((((rt1.c3)>=(rt1.c3))) IS FALSE), (- (((rt1.c0)||(rt1.c1)))), (NOT (((rt1.c2)!=(rt1.c3)))) FROM rt1 WHERE ((((0x9d8bae1 COLLATE BINARY))>((((-166964540) NOT BETWEEN ('') AND (x'')))))); -- 1ms;
SELECT DISTINCT (((rt1.c3 IN ()))>>(((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) COLLATE BINARY FROM rt1; -- 1ms;
SELECT DISTINCT ((rt1.c1 COLLATE BINARY)AND(((rt1.c1) ISNULL))) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c3)GLOB(rt1.c2)) AS TEXT) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(CAST(0.7688100855037685 AS BLOB) AS TEXT), rt1.c2, (- (AVG(rt1.c3))), INSTR(((rt1.c2)>(rt1.c0)), ((rt1.c1)OR(rt1.c3))), 0.5412691228492711 FROM rt1 WHERE (-1970665833); -- 0ms;
SELECT DISTINCT ((((((((rt1.c2)OR(((((((((((((rt1.c0)AND('-1817815074')))OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c2)))AND(-461486610)))))OR(UNLIKELY(rt1.c3))))OR(((0Xfffffffff9f06a57) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c0 END)), LEAD(((rt1.c4)LIKE(CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)), (- (0xffffffff89256610)), ((rt1.c4 IN ()) IN ())) OVER ( ORDER BY (((((((((rt1.c1)AND(rt1.c1)))OR('){')))OR(rt1.c4)))AND(rt1.c2)) IN ()) DESC, (NOT (rt1.c1 COLLATE RTRIM))), rt1.c2 FROM rt1 WHERE ((('1478793109') NOT NULL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT TYPEOF(((rt1.c2) IS TRUE)) FROM rt1; -- 0ms;
SELECT ALL CAST(rt1.c0 AS BLOB) FROM rt1 WHERE (((((x'') NOT BETWEEN ('\rcY') AND ('-628391040'))) ISNULL)) GROUP BY rt1.c1, ((((rt1.c1) NOT NULL))<=(CAST(rt1.c3 AS INTEGER))), ((((rt1.c0 IN ())))!=(('oT[y썕'))); -- 0ms;
SELECT DISTINCT TYPEOF(CAST(rt1.c0 AS INTEGER)), (+ ((+ (rt1.c0)))), ((((((rt1.c4) NOTNULL))AND(rt1.c0 COLLATE NOCASE)))AND(0.8283686272384988)) FROM rt1; -- 0ms;
SELECT DISTINCT (NOT (rt1.c1)) COLLATE BINARY, CASE WHEN (- (rt1.c2)) THEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c2)) ELSE (- ('')) END, ((((rt1.c1)!=(rt1.c0)))==(rt1.c4)), UNLIKELY(COUNT(*)), AVG('O\nw|\n') FROM rt1; -- 1ms;
SELECT DISTINCT (((MAX(rt1.c0)))>((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3))))), COUNT(*) OVER ( PARTITION BY (((rt1.c4)) NOT BETWEEN (((~ (rt1.c0)))) AND (((+ (rt1.c4))))), ((rt1.c4 COLLATE RTRIM) IS TRUE) ORDER BY UNLIKELY(rt1.c2), 'w'  NULLS FIRST, ((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END) NOT BETWEEN (((((rt1.c2)AND(rt1.c4)))OR(NULL))) AND (((rt1.c3)||(rt1.c2))))), ((((((((rt1.c2)AND(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 END)))AND(rt1.c4)))OR(((rt1.c4) NOTNULL))))AND(CASE WHEN rt1.c4 THEN rt1.c0 END)), CAST(GROUP_CONCAT(rt1.c0) AS REAL), (- (LOWER(rt1.c0))) FROM rt1 WHERE ((((x'')) NOT BETWEEN ((((4.40257852E8)&(NULL)))) AND ((NULL COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT rt1.c0, CAST(((rt1.c2) NOTNULL) AS BLOB), ((((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))), load_extension(rt1.c1, rt1.c3), (- (0.3477160905895581))))>=(((NOT (rt1.c1)), LIKELY(DISTINCT rt1.c4), CAST(rt1.c0 AS INTEGER)))) FROM rt1 WHERE ((((x'1851')) BETWEEN (((NULL IN ()))) AND ((((6.77592786E8)>=(NULL)))))) GROUP BY ((rt1.c2 COLLATE NOCASE)>>(0.4022732605860606)), ((CASE WHEN rt1.c4 THEN rt1.c4 END)-(((rt1.c3)&(rt1.c3)))), NULL HAVING (~ (CAST(rt1.c1 AS BLOB))); -- 0ms;
SELECT DISTINCT CASE CAST(rt1.c0 AS INTEGER)  WHEN COUNT(*) THEN ((rt1.c3) IS FALSE) ELSE (NOT (rt1.c4)) END, CASE WHEN (((rt1.c4, rt1.c4, rt1.c1))<>((NULL, rt1.c0, rt1.c0))) THEN CAST(rt1.c1 AS NUMERIC) ELSE (rt1.c4 IN (rt1.c0)) END, (rt1.c3 IN (rt1.c0, rt1.c3)) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT ALL (~ ((~ (rt1.c4)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((CAST(rt1.c1 AS BLOB))OR(CAST(rt1.c4 AS INTEGER))))AND((((rt1.c0)) BETWEEN ((x'')) AND (('0.9523916154229676'))))) FROM rt1; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT rt1.c0 COLLATE RTRIM, 0.23525232498133697), ' B', ((rt1.c0 COLLATE BINARY)*(((rt1.c2)LIKE(rt1.c2)))) FROM rt1 GROUP BY (((NOT (rt1.c3))) IS TRUE), (+ (rt1.c2)) COLLATE BINARY, (((NOT (rt1.c3))) ISNULL); -- 0ms;
SELECT ALL '1150345600' FROM rt1 WHERE ((json_array(NULL, NULL, NULL, 0.8727669621433354) IN (CAST(x'32768ecc' AS TEXT), (((NULL))<>((0.39655567741163544))), ((216425753) NOT BETWEEN ('616153941') AND (NULL))))) LIMIT 1983329724; -- 1ms;
SELECT DISTINCT (((((((((((rt1.c2, rt1.c2, rt1.c2))>=((rt1.c3, rt1.c2, rt1.c2))))OR(((0.7460495462416322) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR((~ (0.29125343311675045)))))OR(MIN(rt1.c0, rt1.c0))))OR(AVG(rt1.c4))) FROM rt1 WHERE (CASE WHEN ((('O?S/CFPG'))>=((0.5293409232026823))) THEN (((NULL))>=((x''))) END); -- 0ms;
SELECT ALL rt1.c3 COLLATE RTRIM FROM rt1 WHERE (((CASE '715054176'  WHEN x'' THEN NULL WHEN '8调{D]' THEN x'3b8aa4d7' WHEN NULL THEN NULL END) NOT BETWEEN (((NULL)<>(0.9848353522068088))) AND ((('0r') IS TRUE)))); -- 0ms;
SELECT DISTINCT (((((rt1.c4) IS TRUE)))<((((((rt1.c0)OR(rt1.c3)))OR(rt1.c0))))), SQLITE_COMPILEOPTION_GET(x''), ((((rt1.c2)|(rt1.c3)))/(((rt1.c0) NOT NULL))) FROM rt1; -- 0ms;
SELECT ALL CAST(SUM(rt1.c1) AS NUMERIC) FROM rt1; -- 0ms;
SELECT (~ (rt1.c4)), rt1.c4, INSTR(((rt1.c3) IS TRUE), CAST(rt1.c3 AS NUMERIC)) FROM rt1 LIMIT -68577609 OFFSET -545806829; -- 0ms;
SELECT DISTINCT AVG((~ (rt1.c0))) OVER () FROM rt1 WHERE ((((NULL)) BETWEEN ((NULL COLLATE RTRIM)) AND (((NOT (x'')))))); -- 0ms;
SELECT DISTINCT json_array(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)), ((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c1))) FROM rt1 WHERE (((((((0.29065154541420934)) NOT BETWEEN ((x'')) AND (('Z''pul')))))<((CASE x''  WHEN 0xffffffffb0b374bf THEN NULL END)))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c4 AS NUMERIC))|(((rt1.c2) NOTNULL))), (((rt1.c0)) BETWEEN ((json_array_length(rt1.c2))) AND ((((rt1.c0)|(rt1.c3))))), (((+ (rt1.c2)))||((rt1.c2 IN ()))) FROM rt1 ORDER BY (((((rt1.c4))==((rt1.c2)))) BETWEEN (rt1.c3) AND (''))  NULLS FIRST, ((((rt1.c1)OR(NULL)))AND(rt1.c4)) COLLATE NOCASE; -- 1ms;
SELECT ALL (NOT (MAX(NULL))), ((CAST('-100367787' AS INTEGER)) ISNULL), TOTAL(TYPEOF(DISTINCT '1019877293')) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((((NULL)AND(json_array_length(rt1.c4))))AND((('un')-(rt1.c0)))))OR((rt1.c4 IN ()))))OR(((rt1.c2) NOTNULL))), ((rt1.c4) ISNULL), ((((((((rt1.c4 COLLATE RTRIM)OR(rt1.c4)))OR(rt1.c0)))AND(CAST(rt1.c2 AS INTEGER))))OR('1433643854')) FROM rt1 WHERE (((((((((('-1123956934' IN ()))AND(CASE WHEN NULL THEN x'' END)))AND((('')>=(0.557901518588469)))))AND(CASE WHEN -1.323722615E9 THEN '-358447328' ELSE x'' END)))OR(((('')) NOT BETWEEN (('')) AND ((0.38133575360816363)))))); -- 0ms;
SELECT ((rt1.c1 IN ()) IN ()) FROM rt1 LIMIT 429127835 OFFSET -502163840; -- 0ms;
SELECT (((((rt1.c3 IN (rt1.c4)))AND(CAST(rt1.c3 AS NUMERIC))))OR(((rt1.c0)-(rt1.c3)))), (((((rt1.c2 IN ()))AND(COUNT(*))))OR((NULL IN ()))), ((x'')=((NULL IN ()))), TOTAL(((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE RTRIM) OVER ( GROUPS (rt1.c0 IN ()) COLLATE RTRIM PRECEDING), ((((((((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4)))AND(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 END)))AND(((rt1.c3) ISNULL))))AND(GROUP_CONCAT(rt1.c4))))AND(rt1.c4 COLLATE RTRIM)) FROM rt1 WHERE (((0.6393503310493002)AND(0X1924c3fc)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT 0.09814001412657425 COLLATE RTRIM FROM rt1 LIMIT 1 OFFSET 329727535; -- 0ms;
SELECT DISTINCT CASE WHEN (- (rt1.c4)) THEN ((rt1.c1) IS FALSE) END FROM rt1; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM rt1 WHERE ((- (((NULL) NOT BETWEEN ('1243860325') AND (''))))); -- 0ms;
SELECT ALL (NOT ((~ (x'')))) FROM rt1; -- 0ms;
SELECT DISTINCT LOWER(rt1.c3 COLLATE BINARY) FROM rt1 WHERE (((((((((CASE WHEN 'lLzAd|^ep' THEN 0.25985170931437784 ELSE '' END)OR((((-1388502984)) NOT BETWEEN ((0.8461813767192994)) AND (('&(1Y'))))))AND(((x'0c14bf5c') NOTNULL))))AND((0.48933238109948574 IN ()))))OR(((NULL)IS NOT('6JDE'))))); -- 0ms;
SELECT COUNT(CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 END COLLATE NOCASE) OVER () FROM rt1; -- 0ms;
SELECT ALL json_array((((rt1.c0, rt1.c1, rt1.c2))<((rt1.c1, rt1.c0, rt1.c4))), ((rt1.c1)GLOB(rt1.c3))), CASE WHEN rt1.c3 THEN rt1.c2 END COLLATE BINARY, ((CAST(rt1.c1 AS BLOB))-(GROUP_CONCAT(rt1.c0))) FROM rt1; -- 0ms;
SELECT (((NOT (rt1.c2))) NOT NULL) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(LIKELY(rt1.c0)) OVER () FROM rt1 ORDER BY CAST(rt1.c2 AS TEXT) ASC; -- 0ms;
SELECT CASE WHEN (+ (rt1.c0)) THEN (rt1.c4 IN ()) ELSE MIN(rt1.c4) END FROM rt1 LIMIT 16362244 OFFSET -940913426; -- 0ms;
SELECT DISTINCT ((rt1.c4)||(rt1.c4)) COLLATE RTRIM FROM rt1 WHERE (x''); -- 0ms;
SELECT ALL COUNT(rt1.c3) FROM rt1 WHERE ((((NULL) NOT BETWEEN (0.048994352710679645) AND (0.9850074523879673)) IN ())); -- 0ms;
SELECT CAST((((rt1.c3))>((rt1.c1))) AS INTEGER) FROM rt1 WHERE ((+ ((+ (0.803856196729797))))); -- 0ms;
SELECT ALL ((((rt1.c2)<<(rt1.c4)))+(CAST(rt1.c1 AS TEXT))), COUNT(*) OVER (), 0Xffffffff9a56f134 FROM rt1 WHERE ((+ (((NULL) IS TRUE)))) ORDER BY (((' ')IS(rt1.c4)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt1 GROUP BY rt1.c3, CASE WHEN LIKE(NULL, rt1.c2, 'M') THEN ((rt1.c0)+(rt1.c0)) END, (((rt1.c0)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1)))) AND ((((rt1.c1) NOT BETWEEN ('1201511015') AND (rt1.c4))))), (((rt1.c3, rt1.c0, rt1.c0)) BETWEEN ((((x'0713705b')OR(rt1.c4)), (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((NULL))), (~ (rt1.c0)))) AND ((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c0)))AND(rt1.c0)), rt1.c1 COLLATE NOCASE, (((rt1.c1, rt1.c2, rt1.c1))<>((rt1.c0, rt1.c0, rt1.c3)))))), (+ (((rt1.c1)%('')))) HAVING MAX(rt1.c0) COLLATE BINARY COLLATE NOCASE ORDER BY 0.27366144863595676 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((rt1.c1 COLLATE NOCASE)LIKE(((rt1.c4)<>(rt1.c3)))), AVG((- (rt1.c3))) OVER ( ORDER BY CAST(TRIM(DISTINCT rt1.c2) AS BLOB) ASC  NULLS LAST), GROUP_CONCAT(((rt1.c4)==(rt1.c3))) OVER () FROM rt1; -- 0ms;
SELECT x'e54e' FROM rt1 WHERE (((((NULL) NOT NULL))&(LIKELIHOOD(0.5709708586360779, 0.15393966521218183)))); -- 0ms;
SELECT (((CAST(rt1.c1 AS TEXT), (rt1.c3 IN ()), TRIM(DISTINCT rt1.c3, rt1.c3)))=(((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), (- (rt1.c2)), LIKELY(rt1.c0)))), (((rt1.c2 IN ())) NOT BETWEEN (((('2113004736')) BETWEEN ((rt1.c2)) AND ((rt1.c3)))) AND (((rt1.c2) IS FALSE))), ((((rt1.c2)<(rt1.c2)))>=('')), AVG((- (rt1.c3))), rt1.c3 FROM rt1; -- 0ms;
SELECT DISTINCT (~ ((((NULL, rt1.c1, rt1.c4))=((rt1.c0, rt1.c3, rt1.c0))))) FROM rt1 WHERE (COALESCE(((((0Xffffffffd722ede8)OR(NULL)))OR(x'')), '-93130995')); -- 0ms;
SELECT (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c3)) IN ((rt1.c4 IN ()), ((rt1.c4)>=(rt1.c0)))) FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (rt1.c0)) THEN ((((rt1.c2)OR(rt1.c3)))OR(rt1.c0)) END, ((SUM(rt1.c3)) BETWEEN (((rt1.c1) IS FALSE)) AND (((rt1.c4) BETWEEN (x'') AND (rt1.c3)))), (+ (rt1.c4)) FROM rt1 WHERE ((((((((('Sb￿qQ_u')OR((('') IS TRUE))))OR(((x'93e1')GLOB(0.2728498445574896)))))OR((0.1317371063846251 IN ()))))AND((((((((('1789370375')AND(x'')))OR('-609695501')))AND('1230757967')))AND(x''))))); -- 0ms;
SELECT ALL ((('')) NOT BETWEEN ((UNLIKELY(rt1.c1))) AND ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))))) FROM rt1 GROUP BY (rt1.c1 IN ()) COLLATE BINARY HAVING CAST(rt1.c0 AS NUMERIC); -- 0ms;
SELECT ALL MAX(((((((((rt1.c4)OR(NULL)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c2))) FROM rt1 WHERE (((('-521507706')) NOT BETWEEN ((1.289068673E9)) AND (('-1898736020'))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE WHEN (~ (rt1.c0)) THEN (('') IS FALSE) ELSE ((rt1.c4)/(rt1.c2)) END FROM rt1 GROUP BY ((((SQLITE_COMPILEOPTION_GET(rt1.c2))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((rt1.c2)*(rt1.c4)))), NULL, ((((((((((rt1.c1) ISNULL))OR(((rt1.c1)-(rt1.c3)))))OR(x'')))AND(((rt1.c0)%(rt1.c3)))))AND('-1348652795')) HAVING (((NOT (NULL)))<<(TRIM(rt1.c3))); -- 0ms;
SELECT DISTINCT '' FROM rt1 WHERE (CAST((NOT (0.7762734998988527)) AS TEXT)) ORDER BY (rt1.c0 IN ()) ASC  NULLS LAST, (NOT (rt1.c3)) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT ((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 END)+(((((rt1.c2)AND(rt1.c4)))AND(rt1.c2)))) FROM rt1 WHERE ((+ ((+ (NULL))))) LIMIT -1063551929 OFFSET -1123956934; -- 0ms;
SELECT ALL NULL FROM rt1 WHERE (CAST(0X2a3b8ee3 COLLATE RTRIM AS BLOB)); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END, CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 END) FROM rt1; -- 0ms;
SELECT ALL NTILE((+ (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0))))) OVER (), CASE WHEN (((rt1.c4, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c4, rt1.c4)) AND ((rt1.c2, rt1.c2, rt1.c4))) THEN SQLITE_COMPILEOPTION_GET(rt1.c3) ELSE CASE rt1.c3  WHEN rt1.c2 THEN rt1.c4 END END, AVG((+ (rt1.c4))) FROM rt1 WHERE (CASE (((NULL, 'm8O6튡2', 0.10041270496564125))=((x'ee96', NULL, 0.6353710168666153)))  WHEN (('122145482')>('PEqGJ{Nq')) THEN '571308002' COLLATE NOCASE ELSE ((0.9101363180513711) NOT BETWEEN (0.6140277031071085) AND ('uupp''!9G')) END);SELECT LEAD(CASE WHEN ((rt1.c1)*(rt1.c2)) THEN rt1.c4 WHEN (((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))) THEN json_array_length(0X4e5e46f2, rt1.c3) WHEN ((rt1.c1)>=(rt1.c2)) THEN ((rt1.c2)LIKE(rt1.c2)) END, CASE WHEN ABS(x'ad6b') THEN UNICODE(rt1.c1) END, ((((LIKE(rt1.c4, rt1.c2))AND(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)))))OR(rt1.c1 COLLATE RTRIM))) OVER () FROM rt1 WHERE (CASE WHEN (- (0.8806342043794576)) THEN LOWER(DISTINCT '') WHEN ('1827568824' IN ()) THEN NULL COLLATE BINARY WHEN CASE WHEN '' THEN '-559734684' WHEN 0.6907596880168289 THEN '<v\r}})' WHEN NULL THEN 0.42495475243986647 ELSE 0.048078537998570536 END THEN ((('-1063551929')) BETWEEN ((x'7078')) AND ((''))) END) LIMIT 954392594 OFFSET 955259846; -- 0ms;
SELECT ALL ((rt1.c1) NOT NULL) COLLATE NOCASE, ((((rt1.c2)||(rt1.c4)))||(((rt1.c1)+(rt1.c4)))), rt1.c2 FROM rt1; -- 0ms;
SELECT (- (CAST(rt1.c3 AS INTEGER))), (- (TYPEOF(DISTINCT x'9bb6'))), (+ ((((rt1.c2))<((rt1.c4))))) FROM rt1 WHERE (((((NULL)==(0.7012269064576326)))+((((NULL))<(('-1')))))); -- 0ms;
SELECT ALL CAST(x'' AS TEXT), SUM('') OVER ( PARTITION BY (- (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))), CAST(rt1.c2 AS NUMERIC)), CAST(CAST(rt1.c2 AS INTEGER) AS NUMERIC) FROM rt1 WHERE ((((x'' IN ())) ISNULL)); -- 0ms;
SELECT DISTINCT LAG((~ (rt1.c1 COLLATE NOCASE)), (+ ((rt1.c1 IN ()))), (ROUND(rt1.c0, rt1.c4) IN ())) OVER () FROM rt1; -- 0ms;
SELECT rt1.c3 COLLATE RTRIM FROM rt1; -- 0ms;
SELECT ALL ((0.716674889360339) NOTNULL), (('1050262989')%(((rt1.c2)AND(rt1.c0)))), COUNT(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4))) OVER () FROM rt1 WHERE ('') ORDER BY ((((((rt1.c4) NOT BETWEEN (rt1.c0) AND (0.9157027050683371)))OR((((rt1.c0, rt1.c1, rt1.c1, rt1.c3, rt1.c2))<((rt1.c0, rt1.c0, rt1.c3, rt1.c4, 0.2720455111228519))))))OR(x'')) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE x'a3fd' END THEN (NOT (rt1.c4)) END FROM rt1; -- 0ms;
SELECT DISTINCT rtreenode(rt1.c3, (NOT (rt1.c3))) FROM rt1 WHERE (((((((((((0.7132698705927474)OR(NULL)))AND('-677958133')))AND('-1701035237')))OR(0xffffffffb1199889)))>>(((0.6562782095090813) IS FALSE)))); -- 0ms;
SELECT FIRST_VALUE((((rt1.c0) IS FALSE) IN ())) OVER () FROM rt1 WHERE (((json_array_length(x'', x'3379'))>(((-9.00938657E8) NOT NULL))));SELECT ((((((rt1.c0)<(rt1.c4)))OR(NULL)))AND(rt1.c2 COLLATE RTRIM)) FROM rt1 WHERE (((((('7&FNux{')) NOT BETWEEN ((NULL)) AND (('#_N^v&')))) NOTNULL)); -- 0ms;
SELECT '' FROM rt1 WHERE ((((((0.32266177021776876)) BETWEEN (('')) AND ((x''))))GLOB(((((((((-2.92074242E8)AND(NULL)))OR('-2105457478')))AND(0xffffffffb6197daa)))OR('-1925477692'))))); -- 0ms;
SELECT ((((x'ca27')AND(((rt1.c4) ISNULL))))OR(rt1.c1)) FROM rt1 WHERE (((CASE WHEN NULL THEN '-273104051' ELSE '0.9443797401097781' END)<((('-316898473')>(x''))))); -- 0ms;
SELECT '' FROM rt1 WHERE (0.5023123228468848) ORDER BY ((0.5413888709439638)<>(json(rt1.c0))) ASC; -- 0ms;
