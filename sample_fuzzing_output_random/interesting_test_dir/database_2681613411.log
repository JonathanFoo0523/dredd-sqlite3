-- Time: 2024/06/07 23:12:30
-- Database: database11
-- Database version: 3.40.0
-- seed value: 2681613411
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, compress=likely, uncompress=likely); -- 1ms;
UPDATE vt0 SET c0=0.29627798795990523 WHERE CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS INTEGER); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
PRAGMA application_id; -- 0ms;
REINDEX; -- 1ms;
ANALYZE; -- 1ms;
UPDATE vt0 SET (c0)=('l#W') WHERE (((- (vt0.c0))) NOTNULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE SQLITE_COMPILEOPTION_GET(''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX NOCASE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (QUOTE(''))); -- 0ms;
UPDATE vt0 SET c0=-1259184088 WHERE CAST((vt0.c0 IN ()) AS TEXT); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 304473147); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18884'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM vt0; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (-1.259184088E9); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x''); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0x56c67add); -- 1ms;
PRAGMA main.cell_size_check = false; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), (0.9892166496528247), (0.4890164701613219); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('1455848157', ''); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.03543748924737666) WHERE load_extension(((vt0.c0)%(vt0.c0))); -- 1ms;
UPDATE OR ABORT vt0 SET (c0)=(NULL) WHERE CASE ((vt0.c0) NOT NULL)  WHEN (- (vt0.c0)) THEN vt0.c0 COLLATE BINARY END; -- 0ms;
REINDEX BINARY; -- 2ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29345'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.824604003727483); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (0.1720721133779216); -- 1ms;
UPDATE vt0 SET (c0)=(''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('') WHERE CASE WHEN TRIM(DISTINCT vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE ('' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1878396846); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2076723850); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 419608518);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '16542'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('1455848157'); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.03543748924737666); -- 0ms;
PRAGMA locking_mode; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='' WHERE (+ (vt0.c0 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=419608518, c0='0.4890164701613219' WHERE ((HEX(vt0.c0)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-1259184088), (x'575ed9b4'), ('ATK|uzQ'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(0.6566580047491706) WHERE CAST(((vt0.c0) IS FALSE) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('r9'), (NULL), (x''), (x''), (x''); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.17198250663136672), (NULL), (1011177848); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'7744'); -- 1ms;
UPDATE vt0 SET (c0)=(NULL) WHERE (((((((((((((('')OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)%(vt0.c0))) AND ((('-1784550225') BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(1949902936) WHERE (((vt0.c0)) NOT BETWEEN ((0.8024532637744283)) AND ((vt0.c0 COLLATE RTRIM))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.8324525262031235); -- 0ms;
UPDATE OR FAIL vt0 SET c0='1455848157'; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('-266715106'); -- 0ms;
PRAGMA application_id = 4829848593327000749; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE (((+ (vt0.c0))) NOT NULL); -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA main.busy_timeout = 10000; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('1949902936'), (NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('6}'), (x''), ('aG'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1591464849,10');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (NULL), (0.9988939754794276), (-1591464849); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (x'', 0x157c44f1, 0X7b56caf4); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.29627798795990523); -- 0ms;
ANALYZE; -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) BETWEEN (PRINTF(rt0.c1)) AND (rt0.c0)), ((((rt0.c2) IS TRUE)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) AND (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))), (~ ((('/<')|(vt0.c0)))) FROM vt0 WHERE ((((x'')) NOT BETWEEN (((((('')OR(124629498)))OR(-1003208981)))) AND (((((('1949902936')AND('1526400272')))OR('0'))))));SELECT rt0.c1, vt0.c0, ((((vt0.c0)<(rt0.c1)))-(((((((((rt0.c0)AND(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(rt0.c1)))) FROM vt0 WHERE (((0.5208253434791712)<=(CASE WHEN x'' THEN '' END)));SELECT ALL MIN(rt0.c0), x'', '1526400272', AVG((- (rt0.c1))), x'' FROM rt0 LIMIT 1455863699 OFFSET -650162302 EXCEPT SELECT DISTINCT rt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM, (NOT (CAST(rt0.c2 AS REAL))), (((((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c0))!=((rt0.c0, rt0.c0, rt0.c0, rt0.c1, vt0.c0))))<(CAST(rt0.c0 AS REAL))), ((rt0.c1) IS TRUE), ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) IS TRUE) FROM vt0;SELECT DISTINCT (((rt0.c0)) BETWEEN ((NULL)) AND (((rt0.c2 IN ())))) FROM rt0 WHERE ((IFNULL(0.08589766302694002, '-1156636723') IN (CAST('-1784550225' AS INTEGER)))) LIMIT -1259184088; -- 0ms;
SELECT DISTINCT ((((rt0.c1)OR((+ (rt0.c1)))))AND(((vt0.c0) ISNULL))) FROM rt0, vt0; -- 0ms;
SELECT ((((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(LIKELY(rt0.c0))))AND(0.4890164701613219)))OR(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))))AND(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) FROM rt0, vt0 WHERE (rtreenode(((x'')/(x'')), ((NULL)AND('-582257244')))); -- 0ms;
SELECT ALL (x'' COLLATE NOCASE IN ()), ((((SUM(rt0.c1))AND(NULLIF(DISTINCT rt0.c1, rt0.c1))))AND(CAST(rt0.c1 AS REAL))), (((('b㙮q6&]')IS NOT('1455863699')))LIKE(ABS(DISTINCT rt0.c2))) FROM vt0 LIMIT -1964251494;SELECT ALL ((HEX(rt0.c2)) NOT NULL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NULL COLLATE NOCASE FROM rt0 WHERE ((((((((-1.003208981E9)) NOT BETWEEN (('ntxE풕')) AND ((NULL))))AND(((0.29627798795990523)-(NULL)))))OR(('-266715106' IN ())))); -- 0ms;
SELECT (~ ((- (rt0.c1)))) FROM rt0, vt0 WHERE ((((CASE NULL  WHEN NULL THEN NULL ELSE 'S>' END, ((0x11d0a6bd)IS NOT(-1.003208981E9)), IFNULL(DISTINCT 'Hj侂P?E', -1.784550225E9)))<((((0.2249754347585503) IS FALSE), CASE WHEN 0.05864417228759178 THEN NULL WHEN x'' THEN '-266715106' WHEN 0.4113512106391397 THEN 0xffffffffb9b392c3 ELSE NULL END, (NOT (x'')))))) GROUP BY (((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((NULL, ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)), rt0.c0 COLLATE BINARY)) AND ((rt0.c1, (~ (rt0.c1)), (rt0.c0 IN ())))); -- 1ms;
SELECT DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY FROM rt0, vt0 WHERE ((((0xffffffffb9b392c3 COLLATE NOCASE, CASE WHEN '-1964251494' THEN '-582257244' END, ((0.4742471975901028)>=(NULL))))<((LOWER(NULL), CASE WHEN 0.2401825254479455 THEN '<yhbn' ELSE x'0478' END, (NOT ('0.824604003727483')))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) OVER ( ORDER BY ((rt0.c1)|(1.455848157E9)) COLLATE RTRIM DESC ROWS BETWEEN  UNBOUNDED PRECEDING AND ((vt0.c0) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))) PRECEDING EXCLUDE GROUP) FROM vt0, rt0;SELECT DISTINCT (- (1.526400272E9)) COLLATE BINARY, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN ((('嘅Hf+')==(vt0.c0))) AND (((rt0.c2) IS TRUE))), (NOT (rt0.c2 COLLATE NOCASE)) FROM vt0, rt0 WHERE (((((+ (NULL)), ((0X4ffd560c) BETWEEN (0.23878185075518876) AND (0.7381591379894586)), ABS(''), (- ('RK5i*w帇z谻')), ((NULL)>(NULL))))<>(((((0.08614164332142316)) BETWEEN (('-114788642')) AND ((1995944218))), CASE WHEN NULL THEN 0.9892166496528247 END, (0.5807887428656109 IN (NULL)), ((NULL) IS FALSE), ((NULL) NOT NULL))))) EXCEPT SELECT DISTINCT ((((rt0.c0 COLLATE BINARY)AND(((rt0.c2) NOT NULL))))OR(((vt0.c0)*(rt0.c2)))), ((rt0.c2)AND(rt0.c1)), (((vt0.c0)>('')) IN ((rt0.c2 IN ()))) FROM rt0;SELECT DISTINCT (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END IN ()) FROM rt0; -- 0ms;
SELECT ALL SUM(((-1.008169925E9) NOT BETWEEN (rt0.c2) AND (rt0.c0))) FROM vt0, rt0 WHERE ((('ATK|uEQ' COLLATE BINARY)<(x'' COLLATE BINARY))); -- 0ms;
SELECT ALL ((((- (rt0.c1))))>((((rt0.c1) IS TRUE)))) FROM vt0 WHERE (((((((((CASE WHEN NULL THEN '' WHEN x'' THEN x'83a1' WHEN NULL THEN 0.7424079784996002 END)AND((('')-(NULL)))))OR(0.8024532637744283)))AND((('') NOT BETWEEN ('') AND (NULL)))))AND(HEX('DeQdKJ+8n')))) GROUP BY ((((rt0.c2)-(rt0.c0)))>(((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))) HAVING (((((('')OR(rt0.c2)))OR(rt0.c0)))>=(COUNT(*))) ORDER BY CAST(((rt0.c2)+(rt0.c1)) AS TEXT)  NULLS LAST, (((((x'cae4')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))=(ABS(rt0.c0))) ASC  NULLS LAST;SELECT DISTINCT (+ ((rt0.c2 IN ()))), CAST(('^' IN ()) AS REAL), ((rt0.c2)LIKE(vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((-214444762 COLLATE RTRIM) ISNULL));SELECT DISTINCT (rt0.c1 IN (CAST('<UM4u6Z拤' AS BLOB), IFNULL(x'', rt0.c2))), rt0.c1, ((((rt0.c2)IS(rt0.c0)))==(((rt0.c0)<=(71309631)))) FROM vt0, rt0 WHERE ((((+ (0xfffffffffde7a4f4)))*((+ (x''))))); -- 0ms;
SELECT CASE WHEN '' THEN CASE x''  WHEN rt0.c0 THEN vt0.c0 END WHEN (((vt0.c0, x'', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))) THEN ((vt0.c0) ISNULL) WHEN CAST(x'' AS NUMERIC) THEN ((rt0.c0) ISNULL) END FROM vt0, rt0; -- 0ms;
SELECT (NOT ((('71309631')<(rt0.c0)))) FROM vt0 WHERE (TRIM(DISTINCT json_extract(NULL, 2.98886845E8, 0.6894600917740765, -114788642, 0xffffffffd541120c, NULL)));SELECT CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT) FROM vt0 WHERE (CAST((((NULL))==((0.7957604974934263))) AS INTEGER));SELECT ALL rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT ((AVG(rt0.c2))>=(CASE WHEN x'e79e' THEN rt0.c1 END)) FROM vt0 WHERE ((CASE WHEN 'hj侂p?e' THEN 0xffffffffab04533c ELSE x'e662791d' END IN (QUOTE('-1425779908'))));SELECT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL) FROM rt0 WHERE ((((0x72a5c187)) NOT BETWEEN ((CASE WHEN '797661728' THEN 'Wff(H찁0' ELSE 0.6048875435423976 END)) AND ((0.9287125681827623 COLLATE BINARY))));SELECT ALL (((vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c0) ISNULL), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) AND (((('-1236540915')%(rt0.c2)), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), (('nE') BETWEEN (vt0.c0) AND (rt0.c2))))) FROM rt0, vt0 WHERE (CASE LOWER('-717155828')  WHEN (7.1309631E7 IN ()) THEN (x'' IN ()) END); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c2) IS FALSE) THEN ((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)) ELSE rt0.c1 END FROM vt0, rt0 WHERE ((((((((((((((((NULL)AND(NULL)))OR('KRW⯖')))OR(x'')))AND(0Xffffffffcf6473fb)))AND('')))OR(' z*'))))<>(((((-8.15500293E8)) NOT BETWEEN (('JJ풕∞C*+Z')) AND ((''))))))); -- 0ms;
SELECT ALL SUM(((vt0.c0) NOTNULL)) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN rt0.c0 COLLATE BINARY END FROM vt0, rt0; -- 0ms;
SELECT ALL (((rt0.c1 IN ())) NOT BETWEEN (0.20402719042277218) AND ((~ (rt0.c1)))) FROM rt0 WHERE ((((0.22682722854797566)) BETWEEN ((NULLIF('<yhbn', 0Xffffffff8b597df9))) AND ((((('SZ疤#d.'))!=((''))))))) LIMIT 766585859; -- 0ms;
SELECT LAG(((((rt0.c0) NOTNULL))-(CASE WHEN rt0.c2 THEN NULL END)), TYPEOF(DISTINCT TRIM(DISTINCT '-799519851', rt0.c2)), CASE NULL  WHEN (vt0.c0 IN ()) THEN rt0.c0 WHEN 0.061706977269006424 THEN rt0.c0 WHEN ((rt0.c0)IS(rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)) END) OVER ( ORDER BY ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('778161574')))AND(rt0.c0)))AND(LIKELY(rt0.c0)))  NULLS FIRST) FROM vt0, rt0 WHERE (((LIKELIHOOD(NULL, 0.8937704589611729)) BETWEEN (NULL COLLATE RTRIM) AND (CAST('-546916811' AS NUMERIC)))) LIMIT 2117173587 OFFSET 590473941; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((((((rt0.c1)OR(x'')))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) THEN -898114890 ELSE NULL END FROM vt0, rt0; -- 0ms;
SELECT UNLIKELY(DISTINCT x'') FROM vt0, rt0 WHERE ((((('-1625866877' COLLATE NOCASE)AND(0.2514030112882666 COLLATE BINARY)))OR((+ ('S>'))))); -- 0ms;
SELECT DISTINCT ((INSTR(NULL, rt0.c0)) IS FALSE) FROM rt0, vt0; -- 0ms;
SELECT COUNT(*) COLLATE BINARY FROM vt0; -- 0ms;
SELECT MIN(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) FROM vt0;SELECT ALL (((+ (rt0.c2)))==(rt0.c0 COLLATE BINARY)), ((CASE '27118520'  WHEN rt0.c2 THEN rt0.c1 END)==(0.8448809603045635 COLLATE RTRIM)), json_array(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END, CAST(rt0.c1 AS REAL)) FROM vt0, rt0 WHERE (CASE CASE '-1264128717'  WHEN NULL THEN ' Z*' ELSE 0.1924163226642681 END  WHEN ((0.1924163226642681)IS(x'')) THEN CAST(NULL AS REAL) END); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL), TOTAL((+ (rt0.c0))) OVER (), ((((((vt0.c0) IS FALSE))OR((((x''))<=((rt0.c1))))))OR(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) FROM vt0 WHERE ((('1949902936' COLLATE BINARY)>(CAST(0.8448809603045635 AS NUMERIC))));SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) AND ((rt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT (~ (rt0.c1)), ((((rt0.c2)OR(rt0.c1)))AND(vt0.c0))) FROM rt0;SELECT ALL ((((rt0.c1)/(NULL))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN rt0.c1 END)), (((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE), SUM((vt0.c0 IN ())) OVER ( RANGE ((((rt0.c2)=(rt0.c0))) NOT BETWEEN (rt0.c0) AND (((vt0.c0)<=(rt0.c1)))) PRECEDING EXCLUDE TIES) FROM vt0, rt0 WHERE (((('')) NOT BETWEEN ((((x'')IS('1996691792')))) AND (((('')<(1.3420027E9))))));SELECT (x'' IN (((vt0.c0)+(rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) FROM vt0 WHERE ('0.29627798795990523') GROUP BY ((NULL) NOTNULL), (NOT ((rt0.c1 IN ()))), ((((vt0.c0)GLOB(rt0.c1))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c1) IS TRUE)));SELECT CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c1)IS NOT(vt0.c0)) THEN ((vt0.c0)>=(rt0.c0)) WHEN CASE vt0.c0  WHEN '-546916811' THEN vt0.c0 ELSE rt0.c1 END THEN rt0.c2 WHEN ((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)) THEN (NULL IN ()) ELSE ((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)) END, ((rt0.c1) NOTNULL), (((rt0.c2)==(rt0.c0)) IN ()) FROM vt0, rt0 WHERE (CAST(((0.1298318827813968) BETWEEN (x'84e5') AND (0.10745248815920483)) AS REAL)); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|(vt0.c0)) FROM rt0 WHERE ((- (((('0.9988939754794276')) BETWEEN ((1581536161)) AND ((NULL))))));SELECT DISTINCT GROUP_CONCAT(GROUP_CONCAT(CAST(vt0.c0 AS BLOB))) FROM vt0, rt0 WHERE (((((0.7915353243888468, -214444762, x''))!=(('1455848157', x'', '7I|x'))) IN ()));SELECT DISTINCT (((+ (rt0.c1))) IS TRUE), CAST(rt0.c2 COLLATE RTRIM AS BLOB), (((rt0.c2 IN (rt0.c0, rt0.c0))) BETWEEN (SUM(rt0.c2)) AND (rt0.c0)), (((((rt0.c0, rt0.c0, NULL)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c2))))<<(rt0.c1)), (((- (vt0.c0))) NOT NULL) FROM vt0, rt0 WHERE (((((x'') NOT BETWEEN (x'') AND (x''))) NOT BETWEEN (((((NULL)OR(0Xffffffffb64be20d)))AND(NULL))) AND ((((('')AND(NULL)))OR(x'3d6a'))))); -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) ISNULL), 0.45198204971494393, ((((vt0.c0)IS(vt0.c0)))GLOB((rt0.c2 IN ()))), (((((rt0.c2))!=((rt0.c2))))IS NOT(((rt0.c1) IS TRUE))), x'' FROM rt0 UNION ALL SELECT (((((vt0.c0)|(vt0.c0))))=((((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))AND(''))))), AVG(((rt0.c2) NOT NULL)) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL) FOLLOWING), ((((rt0.c0)<=(x'1898')))IS((rt0.c2 IN ()))), ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN '-1231704466' THEN rt0.c0 END)<<(CAST(rt0.c0 AS INTEGER))), (+ (rt0.c0)) COLLATE NOCASE FROM rt0 WHERE (((((((0x2ae5e70c)>=(2.711852E7)))OR(((0xffffffff9029aed1) BETWEEN (x'') AND (0.5271663279042619)))))OR('-1695463413'))) GROUP BY ((rt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((+ (rt0.c1)))), CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1)<=(rt0.c2)) END, CAST('	o' AS INTEGER);SELECT DISTINCT COUNT('ꑱ珻D'), ((((rt0.c2)>>(vt0.c0))) NOT NULL), (((NOT (rt0.c1))) ISNULL) FROM rt0, vt0 WHERE (((((((x'')OR('-1062077055')))OR('at+Cr')))<((x'' IN ())))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (NOT (COUNT(*))) FROM vt0, rt0 ORDER BY CASE ((((0.1567845893083436)OR(vt0.c0)))AND(rt0.c1))  WHEN ((rt0.c0) IS FALSE) THEN ((x'') IS FALSE) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END  NULLS LAST LIMIT 1137631032 OFFSET -914541133; -- 0ms;
SELECT DISTINCT ((((rt0.c0)||(vt0.c0)))IS(rt0.c2)), ((((CASE WHEN rt0.c1 THEN rt0.c1 END)AND((((rt0.c2))==((rt0.c2))))))OR(((rt0.c0) NOT NULL))), (((rt0.c2 IN ()))&(((rt0.c0)GLOB(rt0.c2)))) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))=(((rt0.c1) NOT NULL))) WHERE (((((x'') NOT BETWEEN (0.03543748924737666) AND (x'd581')))>(((('')) BETWEEN ((0.6744987399203277)) AND ((0.7381591379894586)))))); -- 0ms;
SELECT GROUP_CONCAT((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) FROM rt0;SELECT (~ (((rt0.c1)LIKE(rt0.c2)))), ((CASE rt0.c1  WHEN NULL THEN rt0.c1 ELSE vt0.c0 END)IS NOT(((vt0.c0) NOTNULL))), AVG(((((vt0.c0)AND(vt0.c0)))AND(rt0.c2))) FROM vt0 WHERE ((((0.411616202764142 IN ()))IS NOT(((0.7928812239954478) NOT BETWEEN (NULL) AND (NULL)))));SELECT DISTINCT LAST_INSERT_ROWID(), (((vt0.c0, rt0.c2, rt0.c1)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((rt0.c1, 1268725358, rt0.c2))) COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))) FROM vt0 GROUP BY 2117173587 HAVING 0.3113820693229352;SELECT DISTINCT ((((rt0.c2)<=(rt0.c1)))>=(((rt0.c1)|(vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT ((PRINTF(rt0.c2))IS NOT(NULL)) FROM rt0; -- 0ms;
SELECT ALL '' COLLATE RTRIM, (((rt0.c2)) BETWEEN ((COUNT(vt0.c0))) AND ((JULIANDAY(x'', rt0.c2, vt0.c0, rt0.c1, rt0.c1)))), CAST('' AS INTEGER), LAST_VALUE((+ (rt0.c1))) OVER (), rt0.c1 FROM rt0;SELECT (NOT (COUNT(rt0.c1))) FROM rt0, vt0 LIMIT 1137631032 OFFSET -2055868488; -- 0ms;
SELECT (+ (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) FROM rt0;SELECT ALL (((~ (rt0.c2))) IS TRUE) FROM rt0 ORDER BY 'A<ᝲ[I+᤿o,'  NULLS LAST; -- 0ms;
SELECT ALL ((((rt0.c1)OR(rt0.c0))) IS FALSE) FROM vt0 WHERE ((CASE x'27bc'  WHEN -1800638496 THEN NULL ELSE '244471301' END IN ()));SELECT DISTINCT ((COUNT(rt0.c2))-(((rt0.c1)IS NOT(rt0.c2)))) FROM rt0 WHERE ((((('ntxhK')OR(0.6407403802882449))) BETWEEN (x'' COLLATE BINARY) AND ((((x'60ac'))<(('-914541133')))))); -- 0ms;
SELECT (((((- (vt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR(((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))) FROM rt0 ORDER BY (- (((vt0.c0) NOTNULL))) ASC  NULLS LAST;SELECT CAST(rt0.c2 AS BLOB), (((vt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0 COLLATE RTRIM, MAX(rt0.c0), vt0.c0 COLLATE NOCASE, rt0.c2 COLLATE NOCASE)) AND ((NULLIF(DISTINCT rt0.c1, rt0.c0), ((vt0.c0)OR(rt0.c2)), ((rt0.c2)-(rt0.c2)), vt0.c0 COLLATE NOCASE, NULLIF(rt0.c2, vt0.c0)))), (((('-352920756')|(rt0.c1)))IS NOT(((rt0.c2)>>(rt0.c0)))) FROM rt0;SELECT DISTINCT ((rt0.c0)!=(rt0.c0 COLLATE RTRIM)) FROM rt0, vt0 WHERE (LIKELY(0.3686817383698838 COLLATE RTRIM)); -- 1ms;
SELECT DISTINCT rt0.c0 FROM vt0 ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN NULLIF(rt0.c0, vt0.c0) END;SELECT DISTINCT 1.137631032E9, COUNT(*) FILTER(WHERE ((CAST(0.3296008156938669 AS BLOB)) NOT BETWEEN (NULLIF(vt0.c0, 'X9V.ZgSe#')) AND (((rt0.c0)GLOB(rt0.c0))))) OVER (), NULLIF((((0.7129935958608253, rt0.c1, rt0.c0))<=((vt0.c0, rt0.c1, vt0.c0))), CAST(rt0.c0 AS INTEGER)) FROM vt0, rt0; -- 3ms;
SELECT DISTINCT ((MIN(0.9546690813533943))>((+ (rt0.c0)))) FROM rt0, vt0 WHERE ((('' COLLATE NOCASE)-(((((((((806532388)OR('-898114890')))AND('2069285620')))AND(NULL)))AND('-318162281'))))); -- 0ms;
SELECT DISTINCT (MIN(rt0.c0) IN ()) FROM vt0, rt0 WHERE (((((0xffffffffdf66b635)IS NOT(NULL))) IS FALSE)) GROUP BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN ((((rt0.c1))>((rt0.c2)))) AND (((x'61f4') NOTNULL))) HAVING (((CASE WHEN rt0.c1 THEN '' END, ((((((((vt0.c0)OR(0.21311042148271464)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)), rt0.c1 COLLATE NOCASE))<(((rt0.c2 IN ()), TRIM(rt0.c1), (((rt0.c2, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1)))))); -- 0ms;
SELECT DISTINCT ((((((((((((CASE WHEN vt0.c0 THEN '1923465607' ELSE rt0.c0 END)OR((((rt0.c2, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((vt0.c0, '289297852', '-157171839'))))))AND(((vt0.c0) BETWEEN (rt0.c0) AND (x'')))))AND(((rt0.c2) NOTNULL))))OR(MAX(vt0.c0))))OR(COUNT(*))))OR(rt0.c1 COLLATE RTRIM)) FROM rt0, vt0 NOT INDEXED LIMIT 1616858030 OFFSET 1863453409; -- 0ms;
SELECT GROUP_CONCAT(((((vt0.c0)OR(rt0.c1)))OR(rt0.c0))) FILTER(WHERE CAST(((vt0.c0) BETWEEN (rt0.c1) AND (NULL)) AS BLOB)) OVER () FROM rt0;SELECT DISTINCT ((rt0.c0 COLLATE BINARY) NOTNULL) FROM vt0;SELECT ((((vt0.c0) ISNULL)) NOT NULL) FROM vt0, rt0 WHERE (CASE WHEN CAST(x'' AS NUMERIC) THEN LIKELIHOOD(DISTINCT '*T', 0.6045781884357515) ELSE '1570417663' COLLATE BINARY END); -- 0ms;
SELECT ALL CASE WHEN vt0.c0 THEN rt0.c1 COLLATE RTRIM WHEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN vt0.c0 WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN COALESCE(rt0.c2, rt0.c2) WHEN (rt0.c2 IN ()) THEN ((vt0.c0)&(rt0.c2)) END, CASE ((((rt0.c1)OR(vt0.c0)))AND(0.10745248815920483))  WHEN vt0.c0 THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) END, (NOT ((((vt0.c0))<=((rt0.c2))))) FROM rt0 WHERE (UNLIKELY(DISTINCT ((((((((0.45191522300601805)OR(NULL)))OR(x'')))AND(0.04663755059880026)))OR(''))));SELECT SUM(((vt0.c0) IS FALSE)) OVER () FROM vt0, rt0 ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN ((((rt0.c0))==((rt0.c0)))) AND ((~ (rt0.c2))))  NULLS LAST; -- 0ms;
SELECT ALL ((rt0.c2 IN (rt0.c2)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT TOTAL(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) OVER () FROM vt0, rt0 WHERE ('-914541133' COLLATE RTRIM); -- 0ms;
SELECT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) COLLATE RTRIM FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)IS(rt0.c1)))<>((((vt0.c0))<=((rt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT ALL ((((AVG(rt0.c1))AND(((rt0.c0)IS(rt0.c2)))))OR((((rt0.c2))>=((rt0.c0))))) FROM vt0, rt0 WHERE (CAST(x'' AS TEXT)); -- 0ms;
SELECT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) FROM vt0 WHERE ((('0.1924163226642681' COLLATE RTRIM) ISNULL)); -- 0ms;
SELECT ALL (~ (rt0.c2 COLLATE BINARY)) FROM vt0;SELECT DISTINCT (((((x'', rt0.c1, rt0.c2))<=((rt0.c1, rt0.c2, rt0.c0)))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END)-(vt0.c0)) FROM rt0 WHERE ((NOT (((('-546916811', x'b40f', NULL))<((NULL, '-848686248', NULL))))));SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT ((CAST(rt0.c2 AS TEXT))<=('419608518' COLLATE NOCASE)) FROM rt0, vt0 GROUP BY ((((((((((rt0.c1)/(vt0.c0)))AND(((vt0.c0)GLOB(rt0.c0)))))OR(((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))))AND((rt0.c1 IN ()))))OR(NULL)), 0.7326875129829566, (((NULL)%(rt0.c0)) IN ()); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c1)||(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)) WHEN ((rt0.c2)<(rt0.c2)) THEN ((rt0.c1)>=(rt0.c2)) WHEN (((x'449b'))>=((rt0.c2))) THEN ((rt0.c0)||(vt0.c0)) ELSE LOWER(rt0.c1) END, (((((rt0.c0))<=((rt0.c1)))) IS TRUE), ((((vt0.c0) ISNULL))/((vt0.c0 IN ()))), rt0.c0, ((rt0.c2)IS NOT(rt0.c1)) COLLATE BINARY COLLATE BINARY FROM rt0, vt0 WHERE (((('')) NOT BETWEEN (((('1832447850')>=(1.526400272E9)))) AND ((((0.9922488331822852) BETWEEN (NULL) AND (x'')))))); -- 0ms;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((NOT (((('KRW⯖'))>=((0.7957604974934263)))))); -- 0ms;
SELECT (((rt0.c2)%(0x6f43df05)) IN ()) FROM rt0, vt0 WHERE ((+ ((+ ('S>'))))); -- 0ms;
SELECT ALL 0Xffffffff92428071 FROM rt0, vt0 WHERE (((((0X79ab8cde)||(0.6041112062007797)))<>(((x'e7ec')%(-8.9811489E8))))); -- 0ms;
SELECT LIKELY((~ (rt0.c1))) FROM vt0;SELECT DISTINCT rt0.c1 FROM vt0;SELECT rt0.c1 FROM vt0, rt0 WHERE (CAST(((NULL)<<(1660934071)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((rt0.c0) ISNULL) COLLATE BINARY FROM rt0, vt0; -- 0ms;
SELECT ALL (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 END IN (CASE WHEN vt0.c0 THEN rt0.c1 END, ((rt0.c1)|(vt0.c0)))), MIN(((vt0.c0)!=(vt0.c0))) COLLATE NOCASE, vt0.c0 FROM rt0 LIMIT -1301969018 OFFSET -1264128717;SELECT x'070c', CAST((((vt0.c0))<>((vt0.c0))) AS REAL), ((((((NULL)GLOB(rt0.c0)))AND(((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))))AND(GROUP_CONCAT(vt0.c0))) FROM vt0 CROSS JOIN rt0 ON ((((x'')OR(NULL)))AND((+ (vt0.c0)))) WHERE (COALESCE(x'', 1981248252) COLLATE BINARY); -- 0ms;
SELECT (((((vt0.c0)%(rt0.c0)), ((rt0.c2) NOT BETWEEN (vt0.c0) AND ('-1231704466')), CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c2)<=(rt0.c1)), ((-1305683905)/(rt0.c2))))=((CAST(rt0.c1 AS INTEGER), ((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)), ((rt0.c1) ISNULL), (- (vt0.c0)), CAST(rt0.c2 AS REAL)))) FROM vt0 GROUP BY (NOT ((NOT (vt0.c0))));SELECT (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (rt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (CAST(((0X637a4c8)>=('-522900522')) AS NUMERIC));SELECT ALL (rt0.c0 COLLATE RTRIM IN ()) FROM rt0 WHERE (((('-1156636723' IN ()))==(CAST(NULL AS TEXT)))); -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE)-(((((((((((((rt0.c2)OR(x'')))AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))) FROM vt0, rt0 WHERE (((CAST(x'' AS NUMERIC))*(((NULL) NOTNULL)))); -- 0ms;
SELECT TOTAL_CHANGES() FROM rt0, vt0; -- 0ms;
SELECT COUNT(*), ((rt0.c1 COLLATE BINARY)OR((('-898114890')IS(rt0.c1)))), COUNT(LAST_INSERT_ROWID()) FROM vt0, rt0; -- 0ms;
SELECT ((rt0.c1 COLLATE BINARY)IS NOT((((vt0.c0))<=((rt0.c0))))) FROM rt0 WHERE (CASE WHEN CAST('671376401' AS BLOB) THEN CAST(0.2514030112882666 AS NUMERIC) WHEN (+ (0xfffffffff0376dd9)) THEN CAST(-2144466549 AS INTEGER) WHEN ((NULL)|(x'266c')) THEN ((0x11d0a6bd) BETWEEN (NULL) AND (0.6277381354634357)) ELSE ((0.34657952712405105) NOT BETWEEN (NULL) AND (x'310d')) END);SELECT ALL RANK() OVER () FROM rt0, vt0 ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2)<<(vt0.c0)) ELSE (+ (rt0.c2)) END  NULLS LAST, (((rt0.c0) IS TRUE) IN ((vt0.c0 IN ()), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))); -- 1ms;
SELECT DATETIME(rt0.c0, vt0.c0, vt0.c0) COLLATE BINARY FROM vt0 WHERE ((0.3107255850894346 IN ())) ORDER BY ((vt0.c0 COLLATE RTRIM)*(CAST(rt0.c0 AS BLOB))) DESC;SELECT DISTINCT rt0.c2 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT -1252772357 FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((((0.5271663279042619) NOT BETWEEN (x'') AND (NULL)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN x'0be9' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END, vt0.c0))>((vt0.c0, (rt0.c1 IN (rt0.c1)), COUNT(*)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT MIN(((rt0.c0) NOTNULL)) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(COUNT(vt0.c0) AS TEXT), rt0.c2, ((rt0.c0)<<(rt0.c1)) COLLATE RTRIM, ((((TOTAL_CHANGES())AND((((vt0.c0))<((rt0.c1))))))AND(((rt0.c2)!=(rt0.c2)))), ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((0x4892f932)))) AND (SUM(NULL))) FROM rt0, vt0; -- 0ms;
SELECT NULL, AVG(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))), ((LOWER(vt0.c0))>>(vt0.c0)) FROM vt0, rt0 WHERE ((('404851305') IS TRUE) COLLATE BINARY COLLATE BINARY) GROUP BY ((((rt0.c1)>(rt0.c2))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN vt0.c0 END)), (((vt0.c0)|(vt0.c0)) IN (vt0.c0 COLLATE BINARY)), (((NULL)) BETWEEN ((UNICODE(rt0.c2))) AND ((UPPER(DISTINCT rt0.c0)))); -- 0ms;
SELECT DISTINCT (((((((x''))<((rt0.c0))))OR(rt0.c1 COLLATE BINARY)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))) FROM vt0 WHERE (json_patch(((((0.6766779308206898)OR(0.3327982312081944)))AND(NULL)), (NULL IN ())));SELECT ALL (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, vt0.c0)) AND ((vt0.c0, rt0.c1, vt0.c0)))) NOT NULL) FROM rt0 WHERE (rtreenode(LIKELY(x''), CASE NULL  WHEN x'984a' THEN 0.051469572269296826 ELSE '1995944218' END)) GROUP BY ((vt0.c0) IS FALSE) HAVING (((rt0.c2 IN ())) ISNULL) LIMIT -2100688163;SELECT ALL ((((((((((rt0.c2)!=(rt0.c1)))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END)))AND(((x'') NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM rt0;SELECT DISTINCT (((((('-1957069319') NOT BETWEEN (rt0.c0) AND ('n')))AND(((vt0.c0) IS FALSE))))OR(NULL)) FROM vt0, rt0 WHERE (0.7424079784996002); -- 0ms;
SELECT DISTINCT (+ (((rt0.c1) ISNULL))), vt0.c0, UNLIKELY(SUM(vt0.c0)) FROM vt0, rt0 ORDER BY vt0.c0 DESC; -- 0ms;
SELECT ALL (((rt0.c1 IN (-1198336875, vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))) FROM rt0, vt0 WHERE ((((7.19709964E8 IN ()))+(('643362001' IN ())))); -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND ((rt0.c0 IN ()))) FROM rt0, vt0 GROUP BY CAST(((vt0.c0) ISNULL) AS TEXT) HAVING (~ (((vt0.c0)>=('219599287')))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)>(rt0.c0))) IS TRUE) FROM vt0, rt0 WHERE ((+ ((~ ('1011177848'))))); -- 0ms;
SELECT ALL 'EQgds?]T' FROM vt0, rt0 WHERE (CASE WHEN '0.6566580047491706' COLLATE BINARY THEN (+ ('')) ELSE CAST(NULL AS INTEGER) END); -- 0ms;
SELECT ALL (((vt0.c0, rt0.c1, vt0.c0))<((rt0.c2, vt0.c0, rt0.c2))) COLLATE BINARY COLLATE RTRIM, COUNT(*), ((((~ (vt0.c0))))>=((CAST(vt0.c0 AS TEXT)))) FROM vt0, rt0 WHERE (JULIANDAY(((-1360128176)IS('-1568903473')), (NULL IN ()), '璎TBCM' COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((SUM(rt0.c1))*(0.5310219297875051)) FROM rt0 WHERE (((((((x'')AND(x'')))OR(x''))) ISNULL)); -- 0ms;
SELECT DISTINCT CAST(ABS(vt0.c0) AS INTEGER) FROM vt0, rt0 WHERE (((CASE WHEN 0.38233229588822537 THEN x'' WHEN 0.001047262747705613 THEN NULL WHEN NULL THEN '-1591464849' ELSE '7>\r' END) BETWEEN (((NULL) IS TRUE)) AND (((x'') NOT BETWEEN ('K?1ˈkH\nc3') AND ('1434676325'))))) GROUP BY ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ()); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)<<(rt0.c0)) AS REAL), ((((rt0.c0) ISNULL)) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (((rt0.c0) IS TRUE))), (rt0.c0 IN (((rt0.c1)*(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))), ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (TYPEOF(vt0.c0))), CASE CASE WHEN rt0.c0 THEN rt0.c1 END  WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END END FROM vt0;SELECT ((((((280998704)IS NOT(rt0.c1)))AND('-54279973')))AND(((rt0.c1)>(rt0.c1)))) FROM rt0 WHERE (TIME(('' IN ()), (((-1964251494, 0.3139410377040801, '-1800638496')) NOT BETWEEN ((NULL, '-898114890', x'')) AND ((x'', '}p\rDDx드X9', 0x31fcd18b))), ((NULL)*(0.43792792919895396)), (((0xffffffffa4de9a4f)) BETWEEN ((x'')) AND ((NULL))), ((x'')>(NULL)))); -- 1ms;
SELECT ALL AVG(((vt0.c0)<=(rt0.c1)) COLLATE NOCASE) FROM rt0 WHERE (CASE WHEN TRIM('-1990440509') THEN CASE NULL  WHEN 0.6875312894333553 THEN NULL ELSE '{ᝲ' END END);SELECT DISTINCT ((((rt0.c0)<<(rt0.c2)))*(((rt0.c0)GLOB(rt0.c1)))), SUM(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW), '0>-&' FROM vt0 WHERE ((~ ((((x''))>=(('1892016029'))))));SELECT ALL ((((rt0.c2)|(rt0.c0)))|(MIN(vt0.c0))) FROM vt0, rt0 WHERE (CASE (~ ('-1591464849'))  WHEN (x'b5f6' IN ()) THEN x'0e69' COLLATE RTRIM END); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE BINARY) NOTNULL), json_valid(vt0.c0), x'aed7' FROM rt0, vt0 WHERE ((((x'' IN ()))GLOB(((((NULL)AND(x'3e03')))OR(NULL))))); -- 0ms;
SELECT ALL (NOT (rt0.c2)) COLLATE NOCASE FROM rt0, vt0; -- 0ms;
SELECT ALL MIN(((rt0.c1)<('f4#a|*')) COLLATE NOCASE), ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOTNULL), (((COUNT(rt0.c0)))>=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) FROM vt0 ORDER BY ((1534387582 COLLATE BINARY) NOT BETWEEN (CASE WHEN '643362001' THEN '882565066' END) AND (((vt0.c0)||(rt0.c1)))), (((((rt0.c1)OR(rt0.c1)))OR(-257979139)) IN ()) ASC  NULLS FIRST, CAST(rt0.c1 AS REAL) COLLATE RTRIM ASC;SELECT ALL CAST(CASE rt0.c2  WHEN '*?O05/R' THEN '244471301' ELSE rt0.c0 END AS INTEGER) FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c1) NOTNULL) AS NUMERIC) WHERE ((((NULL)) NOT BETWEEN ((x'' COLLATE RTRIM)) AND ((CASE 0.22682722854797566  WHEN '' THEN NULL END)))); -- 0ms;
SELECT DISTINCT (+ ((NOT (rt0.c2)))) FROM rt0; -- 0ms;
SELECT CASE COUNT(rt0.c1)  WHEN rt0.c1 THEN ((rt0.c2)&(rt0.c2)) ELSE ((vt0.c0) BETWEEN (rt0.c2) AND (x'')) END, AVG(rt0.c2) OVER (), rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((CASE x''  WHEN 0X10bfb330 THEN x'' ELSE NULL END)|(0.555626413954129 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (NOT (NULL COLLATE NOCASE)), (- (((NULL) IS TRUE))), CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END AS TEXT) FROM rt0 WHERE (((((('1455848157')) BETWEEN ((x'')) AND ((NULL))))%(((NULL)>>(NULL))))); -- 0ms;
SELECT ALL CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END AS TEXT) FROM vt0 WHERE ((CASE x''  WHEN '' THEN '-1360128176' WHEN '1787133866' THEN '1698505246' WHEN 0.7493658701886753 THEN x'' ELSE 0.17198250663136672 END IN (CASE WHEN NULL THEN 0x2331ead5 ELSE '-1156636723' END)));SELECT DISTINCT (+ ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))), ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))==(vt0.c0 COLLATE RTRIM)), (NOT ((('j)X6?r#*')>>(rt0.c1)))) FROM vt0;SELECT DISTINCT ((rt0.c1)/(rt0.c2)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS BLOB) FROM vt0, rt0 WHERE ((- (CAST(0.38928305498746585 AS INTEGER)))) LIMIT 1863453409; -- 0ms;
SELECT DISTINCT ((((rt0.c1)OR(((rt0.c2) IS TRUE))))AND(CASE 'rZ'  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END)) FROM rt0, vt0 WHERE ((((((((((x'2ca1')AND(NULL)))OR('-969854586')))OR('1086075453')))AND(0.1720721133779216)) IN ((('-1784550225') NOTNULL)))); -- 0ms;
SELECT DISTINCT ((((x'')AND((((rt0.c1))>=((rt0.c1))))))AND(COUNT(rt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((((rt0.c0)-(rt0.c2))))) FROM vt0 WHERE (QUOTE(((NULL)IS(NULL))));SELECT ALL GROUP_CONCAT(CAST(rt0.c2 AS NUMERIC)) OVER () FROM vt0, rt0; -- 1ms;
SELECT DISTINCT LAST_VALUE(CASE WHEN ((rt0.c2)AND(rt0.c2)) THEN NULL END) OVER (), CAST(((rt0.c2) NOT NULL) AS TEXT), NULL FROM rt0, vt0 WHERE (((1.434676325E9)!=((((((((((((('')OR(1424976901)))OR('-582257244')))OR(NULL)))AND(1436026753)))OR('0')))OR(0.30156375469988006))))); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((TYPEOF(rt0.c0))) AND ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0))))) FROM rt0;SELECT (('1342002700') NOTNULL) FROM rt0; -- 0ms;
SELECT ALL CAST(((rt0.c2) NOT NULL) AS NUMERIC), (CAST(rt0.c2 AS REAL) IN ()), (NOT (rt0.c1)) FROM vt0 WHERE (x'94d4') LIMIT 1342002700;SELECT ALL (((((rt0.c0) NOT NULL)))>((rt0.c1 COLLATE NOCASE))) FROM vt0 WHERE ((+ (COALESCE('lk]', x''))));SELECT GROUP_CONCAT(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END) OVER ( ORDER BY ((rt0.c1) BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(vt0.c0))) AND (TRIM(rt0.c1))) ASC  NULLS FIRST GROUPS ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) COLLATE BINARY PRECEDING) FROM rt0, vt0;SELECT TYPEOF(HEX(DISTINCT rt0.c2)) FROM vt0 WHERE ((((('0.30156375469988006')*('c')))+(((x'') IS FALSE))));SELECT DISTINCT (((rt0.c2)LIKE(vt0.c0)) IN ()), TOTAL((((rt0.c2))<((vt0.c0)))), CAST(((rt0.c0)/(vt0.c0)) AS NUMERIC) FROM rt0, vt0 WHERE ((CASE x'b020'  WHEN x'323f' THEN 'WE' END IN ())); -- 0ms;
SELECT CASE WHEN ((rt0.c0) ISNULL) THEN ((((rt0.c1)OR(rt0.c0)))OR(vt0.c0)) END FROM rt0, vt0 WHERE (((((((((((((((((((295039621) BETWEEN (NULL) AND (NULL)))OR(((x'ee712f1a')AND('1551020519')))))AND(((0.4113512106391397)>=('^'' PS')))))AND('1866718981')))AND(CAST(x'' AS TEXT))))OR(((NULL) NOT BETWEEN (-2055868488) AND (x'')))))OR((((NULL))<((0.4742471975901028))))))OR(((NULL)OR(x'')))))AND(LOWER(DISTINCT '?Z')))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(0.5037580369693441) FROM rt0; -- 0ms;
SELECT CASE ((rt0.c2)&(rt0.c0))  WHEN CASE 'b\rAtJ^'  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END THEN vt0.c0 WHEN UNLIKELY(rt0.c0) THEN ABS(rt0.c0) WHEN (NOT (vt0.c0)) THEN (((NULL, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, NULL, rt0.c0))) ELSE 0.4668246542733968 END FROM vt0 NOT INDEXED;SELECT DISTINCT ((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))-(((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))) FROM rt0 WHERE ((+ (CASE WHEN 0.25326458169909716 THEN x'' WHEN 0.10436658231547669 THEN x'' WHEN NULL THEN '-1876316463' END)));SELECT DISTINCT (CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END IN ()), ((rt0.c1) NOT BETWEEN ((('-63615949')%(rt0.c2))) AND (((rt0.c1) NOTNULL))), ((vt0.c0)/(rt0.c2)) COLLATE NOCASE, CAST((vt0.c0 IN ()) AS TEXT), rt0.c2 FROM vt0, rt0 WHERE (CASE CAST(NULL AS BLOB)  WHEN (+ (0xffffffffb55435fb)) THEN ((320740838) IS FALSE) ELSE (('-1151490693') BETWEEN (x'') AND ('1810054094')) END); -- 0ms;
SELECT DISTINCT CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN '1474072454' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN 0X31e0e825 THEN rt0.c0 WHEN '5xeH''锆EH' THEN rt0.c2 END ELSE (- (vt0.c0)) END FROM vt0, rt0; -- 0ms;
SELECT ALL MAX(CAST(vt0.c0 AS REAL)) FROM vt0; -- 1ms;
SELECT ALL (vt0.c0 IN ((NOT (rt0.c0)))) FROM rt0;SELECT DISTINCT CASE HEX(DISTINCT rt0.c0)  WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 WHEN NULL THEN CAST(NULL AS NUMERIC) WHEN ((rt0.c1) IS TRUE) THEN AVG('0.9922488331822852') END FROM rt0 LIMIT 2066402305 OFFSET 2101365147; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM rt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (x'') AND (rt0.c2))))  NULLS FIRST LIMIT -78439111;SELECT DISTINCT (((CASE vt0.c0  WHEN x'cd96' THEN rt0.c0 WHEN '1763370648' THEN '[]{}Pre\rr*' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE 0.8382772026287515 END))==((CAST(rt0.c1 AS NUMERIC)))), '1217591602', ((GROUP_CONCAT(rt0.c2)) NOT BETWEEN (2.44471301E8) AND (((vt0.c0)||(rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT ALL (((vt0.c0 IN (vt0.c0)))|(((vt0.c0) ISNULL))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c1 AS INTEGER))))AND((rt0.c2 IN ()))))OR(rt0.c1 COLLATE RTRIM)))AND(rt0.c0)), ((TYPEOF(DISTINCT rt0.c1)) IS TRUE), CAST(x'' AS REAL) COLLATE RTRIM FROM rt0, vt0 WHERE (((((((NULL)OR('2066402305')))OR('m|4郞')))>=(((((0.7957604974934263)AND(NULL)))AND(x''))))); -- 0ms;
SELECT ALL (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))))>((CASE rt0.c0  WHEN NULL THEN rt0.c1 END))), (((NOT (rt0.c2))) NOT NULL), (NOT (((((vt0.c0)OR(rt0.c2)))OR('1646812679')))) FROM vt0, rt0 WHERE ((((((((((((((NULL)AND('')))AND(1795599878)))OR('룲Ib')))OR(x'')))AND(x'')))AND(-1408958371)) IN ())); -- 0ms;
SELECT DISTINCT CAST((x'' IN (NULL)) AS NUMERIC) FROM vt0, rt0 WHERE (((CASE 0.09551815450794099  WHEN '-352920756' THEN NULL ELSE '2117173587' END) BETWEEN (CASE 0xffffffff9d255a5e  WHEN '7yzQힷ.' THEN NULL ELSE '<rK' END) AND ((NULL IN ('419608518'))))); -- 0ms;
SELECT x'5e6d' FROM rt0, vt0 WHERE ('1011177848'); -- 0ms;
SELECT AVG(CAST(rt0.c0 AS REAL)) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((((rt0.c1)AND(vt0.c0)))AND(x'')) COLLATE BINARY, ((((rt0.c2)IS(x'')))||((~ (0.09267187245560071)))), CAST(rt0.c0 AS TEXT) COLLATE BINARY, ((((rt0.c1)==('jNMGew'))) BETWEEN (((rt0.c2) BETWEEN (0.6894600917740765) AND (vt0.c0))) AND (rt0.c0)), rt0.c0 FROM vt0, rt0 WHERE ((((((0.7326875129829566)>=(0.011923507006782463))))<(((((0.07357405315314047)) NOT BETWEEN ((0Xffffffffd67ac893)) AND ((NULL))))))); -- 0ms;
SELECT ALL ((((rt0.c2) ISNULL))IS(((vt0.c0)IS NOT(rt0.c1)))) FROM vt0 WHERE ('797661728');SELECT DISTINCT UPPER(rt0.c2 COLLATE BINARY) FROM rt0, vt0 WHERE ((~ (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((vt0.c0)<>(MIN(rt0.c0))) FROM vt0, rt0 UNION SELECT ALL ((COUNT(rt0.c2))||((rt0.c1 IN ()))) FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN x'' THEN NULL END THEN (((NULL, 0.29627798795990523, NULL, x'', 0X7b56caf4)) BETWEEN (('-420757824', -1.236540915E9, NULL, x'', NULL)) AND (('0.7326875129829566', x'', x'3359', -1e500, NULL))) WHEN TRIM('-214444762') THEN (0.5594214949530298 IN (NULL)) WHEN QUOTE('') THEN ((0xffffffffd2746110) BETWEEN (1.434676325E9) AND (NULL)) ELSE (((NULL, 'V	', 0.15116497843954246))>=((NULL, '', '0.3686817383698838'))) END); -- 1ms;
SELECT DISTINCT (x'' IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c0, MIN(((((((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))AND(rt0.c1))), (((((vt0.c0))!=((vt0.c0))))>=((+ (rt0.c0)))) FROM vt0 WHERE (((CAST(0.7266790237127941 AS BLOB)) IS FALSE)) GROUP BY 'dFM3', (~ (((rt0.c0) NOTNULL))), vt0.c0;SELECT DISTINCT TOTAL(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) OVER (), CAST(rt0.c1 COLLATE NOCASE AS REAL), (+ (((rt0.c1)<>(rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT ALL CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))  WHEN (((vt0.c0))<=((rt0.c1))) THEN TYPEOF(rt0.c0) ELSE ((rt0.c2)<<(x'')) END, NTILE((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END IN ((rt0.c0 IN (rt0.c2))))) OVER (), ((((0X740cdab7)GLOB(rt0.c0)))GLOB(0.4397848581029662 COLLATE RTRIM)), rt0.c2, CAST(rt0.c2 AS TEXT) COLLATE BINARY, ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '-1841135503' THEN '[]{}Pre\rr*' END)IS NOT(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)), CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END AS INTEGER) FROM rt0;SELECT (((((((((+ (rt0.c1)))OR(rt0.c0 COLLATE NOCASE)))AND((((rt0.c1, '-1259184088', rt0.c1)) BETWEEN ((rt0.c0, '2117173587', rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0))))))OR(((rt0.c1) IS FALSE))))OR(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN x'9273' THEN rt0.c1 END)), NULL, TOTAL(rt0.c0) OVER () FROM rt0 WHERE (((CAST('-896578374' AS BLOB)) NOT NULL));SELECT DISTINCT (((rt0.c2 IN (rt0.c1)))OR((NOT (vt0.c0)))) FROM rt0, vt0 WHERE (((((((x'e8dc')OR(x'')))OR(NULL))) BETWEEN ((('-0.0')==('-843351780'))) AND ((((''))=((-582257244)))))); -- 1ms;
SELECT ALL CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN x'd1c9' THEN 0.09995517250783992 WHEN rt0.c0 THEN '1899345503' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END  WHEN GROUP_CONCAT(rt0.c1) THEN (rt0.c1 IN ()) ELSE (+ (rt0.c0)) END FROM vt0;SELECT DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE, (- (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)), '643362001', (((((~ (rt0.c1)))AND(((vt0.c0)GLOB(vt0.c0)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)), CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, 0X3934de10, rt0.c1)) BETWEEN ((vt0.c0, 269066525, rt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c0))) THEN vt0.c0 COLLATE NOCASE ELSE rt0.c0 END FROM rt0;SELECT DISTINCT json_patch(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)), UPPER(vt0.c0)), ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))*(((0X560d7ce8) NOT NULL))), rt0.c2, x'', (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c1 IN (rt0.c1)), NULLIF(DISTINCT 0.712268129755289, -1898552604)))!=(((vt0.c0 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY))) FROM vt0, rt0 WHERE (((((x'') NOT BETWEEN (0x30e4e3cf) AND (0.7131298148678743)))&(CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c2)IS(rt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) FROM vt0, rt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ((vt0.c0 IN ()))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)-(rt0.c2)) THEN ((rt0.c1) IS TRUE) WHEN GROUP_CONCAT(rt0.c1) THEN CAST(rt0.c2 AS NUMERIC) WHEN (~ (rt0.c0)) THEN CASE rt0.c2  WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END ELSE vt0.c0 END FROM vt0 WHERE (CASE WHEN (((((((((((('-1148765837')OR(x'a37a')))AND(x'')))OR('1526400272')))AND(NULL)))AND(NULL)))OR(0.09122325674804377)) THEN 0.40024832428822743 COLLATE BINARY ELSE (('}oLA')==(1698505246)) END);SELECT COUNT(*) OVER ( RANGE BETWEEN (((+ (rt0.c0))) BETWEEN (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))) AND (((rt0.c1)AND(vt0.c0)))) PRECEDING AND  CURRENT ROW EXCLUDE TIES), AVG(((rt0.c0)AND(rt0.c0))), ((((rt0.c2)<(vt0.c0))) NOT NULL) FROM rt0, vt0 WHERE (((((1.088809548E9)OR(x'')))>>(((0X21858521)/(x'c172')))));SELECT (NULL IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)OR(((NULL)+(vt0.c0)))))OR(((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))) FROM rt0, vt0 WHERE (((((((((((((((((0.6322324146032557)OR(NULL)))OR(x'16a0')))OR(0xffffffffbb0f1fcd)))OR(0.45191522300601805)))AND(2.44471301E8)))OR(CAST(NULL AS NUMERIC))))AND((('j)x6?r#*')>(0.9820771736457086)))))AND(((NULL)>(0X2331ead5))))); -- 0ms;
SELECT ALL LEAD(TRIM(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE, (~ ((~ (vt0.c0))))) OVER ( ORDER BY ((((rt0.c1)OR(NULL)))AND(rt0.c0)) COLLATE RTRIM DESC) FROM vt0 WHERE ((((((((NULL)OR(NULL)))AND('1756272525')), TRIM(x'', x''), CAST(-519362614 AS INTEGER)))>((CASE WHEN x'' THEN '-1573607616' END, ((7.1309631E7)%(NULL)), (('E''K,	\nWw⫁')<(0.8423864884466792))))));SELECT DISTINCT ((((((((rt0.c2 COLLATE NOCASE)AND(((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))))AND((- (rt0.c2)))))AND(((vt0.c0)AND(vt0.c0)))))OR((rt0.c2 IN (rt0.c0)))), ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) NOT BETWEEN (TYPEOF(DISTINCT rt0.c0)) AND (((((vt0.c0)OR(rt0.c1)))AND(0Xfffffffff4ec5951)))), CAST((((vt0.c0))<((rt0.c1))) AS INTEGER), (+ (rt0.c1 COLLATE RTRIM)), PERCENT_RANK() OVER () FROM rt0 WHERE ((NOT ((((NULL)) NOT BETWEEN ((x'')) AND ((x''))))));SELECT DISTINCT (+ ('647841063')), SQLITE_COMPILEOPTION_USED((rt0.c0 IN (rt0.c0))), ((0.24979938504641996)IS(((rt0.c0)GLOB(vt0.c0)))) FROM vt0 WHERE (((((NULL) NOT NULL)) NOT NULL));SELECT DISTINCT rt0.c2 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c2, vt0.c0 COLLATE BINARY COLLATE BINARY COLLATE BINARY, (((rt0.c0)) NOT BETWEEN (((~ (rt0.c1)))) AND ((COUNT(*)))) FROM rt0, vt0 GROUP BY SUBSTR(rt0.c0, vt0.c0) COLLATE RTRIM; -- 1ms;
SELECT COUNT(COUNT(CAST(rt0.c1 AS BLOB))) FROM rt0, vt0 WHERE ((((NULL)) NOT BETWEEN (((~ (NULL)))) AND ((((NULL)AND('?誕p}'))))));SELECT ALL rt0.c2, CAST(((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)) AS TEXT), (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((0Xffffffffb22cd83f))))IS NOT(TOTAL(rt0.c2))) FROM vt0, rt0 WHERE (((CAST(x'6838' AS TEXT)) BETWEEN (CASE 0X12bbe32a  WHEN NULL THEN NULL END) AND (('''/bq{cQ' IN ())))) ORDER BY (NULL IN ()) COLLATE BINARY  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c0)<=(rt0.c0)))%(((rt0.c0)*(rt0.c1)))) FROM vt0;SELECT DISTINCT ((COALESCE(vt0.c0, rt0.c1, 4.19608518E8, rt0.c0)) NOT NULL) FROM rt0 WHERE (((+ (0.05864417228759178)) IN ()));SELECT DISTINCT CAST(COUNT(*) AS INTEGER) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN (rt0.c1 IN (NULL, NULL)) END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((0.027947474494017133)) BETWEEN ((((rt0.c2) NOT NULL))) AND ((((((rt0.c0)AND(rt0.c2)))OR(vt0.c0))))) FROM vt0 NOT INDEXED, rt0 UNION SELECT ALL LEAD((CAST(rt0.c2 AS TEXT) IN ((rt0.c1 IN ()), ((vt0.c0)%(vt0.c0)))), x'', CASE PRINTF(vt0.c0, rt0.c0, rt0.c0)  WHEN NULLIF('592785885', rt0.c0) THEN ((rt0.c1)LIKE(vt0.c0)) ELSE ((vt0.c0)/(rt0.c1)) END) OVER ( ORDER BY (((~ (vt0.c0))) IS FALSE)  NULLS FIRST) FROM vt0, rt0 WHERE ((((0.2781332532421359)) BETWEEN ((json_valid(NULL))) AND (((+ ('XH#i')))))); -- 0ms;
SELECT DISTINCT ((((NULL)||(rt0.c2)))AND((0.5392358141255353 IN ()))), (NOT (rt0.c0)), ((((rt0.c2)GLOB(vt0.c0)))<<(IFNULL(rt0.c0, rt0.c2))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT RANK() OVER (), AVG((rt0.c0 IN (rt0.c1))), ((('A<ᝲ[I+᤿O,', rt0.c0, (rt0.c1 IN ())))!=((GROUP_CONCAT(vt0.c0), TYPEOF(rt0.c2), (NULL IN ())))) FROM rt0, vt0; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS FALSE), ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))|(vt0.c0)), COUNT(((rt0.c0)==(vt0.c0))) OVER () FROM vt0 WHERE (CASE WHEN ((0.4397848581029662)GLOB(x'')) THEN CAST(NULL AS NUMERIC) END) LIMIT 398759516;SELECT DISTINCT CASE WHEN json_insert(NULL, rt0.c0, vt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c1) THEN NULL ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) END FROM vt0 WHERE ((((+ ('-2063371509')))&(CAST(NULL AS INTEGER))));SELECT ((CAST(vt0.c0 AS BLOB)) IS FALSE) FROM vt0, rt0 WHERE ((~ (CASE '-1625866877'  WHEN x'' THEN x'' ELSE '' END))); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND ((((x'')=(vt0.c0))))), CAST(rt0.c0 COLLATE RTRIM AS INTEGER), ((((rt0.c0)||(vt0.c0))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((((x'')) BETWEEN (('')) AND ((rt0.c0))))) FROM rt0, vt0 WHERE (CAST(CAST(0.07737830425981207 AS INTEGER) AS REAL)); -- 0ms;
SELECT ALL TOTAL(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END) OVER () FROM vt0 WHERE (((ABS(x''))|(((x'')&('-1180688624')))));SELECT DISTINCT (((rt0.c0)*(rt0.c2)) IN ()) FROM vt0, rt0 WHERE ((((((('0.1924163226642681') NOTNULL))OR(0Xffffffffe352d0ce COLLATE BINARY)))OR((NOT (NULL))))) ORDER BY vt0.c0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))%(((x'') NOT BETWEEN (vt0.c0) AND (rt0.c1)))) FROM vt0 ORDER BY ((~ (vt0.c0)) IN (((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)), CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)) ASC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) ISNULL);SELECT ALL CASE ((rt0.c2)<>(rt0.c0))  WHEN TOTAL(vt0.c0) THEN CAST(vt0.c0 AS REAL) END FROM rt0 WHERE ((((CAST('797661728' AS REAL), (((NULL)) NOT BETWEEN (('1005673298')) AND ((0.33600892621703116))), 0X79d3ecc4, (NOT (0.19842448496726095)), (- (NULL)), '1342002700' COLLATE BINARY, (('-1876316463') BETWEEN ('I\') AND (NULL))))>((((0.8428831518758655) BETWEEN ('1923465607') AND (0x6f43df05)), '360465649', ((NULL)|('719709964')), ((0Xffffffff9029aed1)OR(NULL)), TRIM(0.30695504538185125), (('b++') NOT BETWEEN (NULL) AND ('-318162281')), ((('狼碛')) BETWEEN ((NULL)) AND ((x'')))))));SELECT DISTINCT (('')IS(((rt0.c1) NOTNULL))) FROM rt0, vt0 WHERE (CASE WHEN ((NULL)AND('1604286801')) THEN ((643362001)AND(x'')) ELSE NULL END) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) AND (((x'') NOT NULL)))  NULLS LAST; -- 0ms;
SELECT (- (rt0.c2)) FROM vt0, rt0; -- 0ms;
SELECT ALL (rt0.c1 IN (((rt0.c1)*(vt0.c0)))) FROM vt0 WHERE ((NOT (1565295715))) LIMIT 801280326 OFFSET -1423675259;SELECT DISTINCT (- (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) FROM vt0, rt0; -- 0ms;
SELECT ALL CASE (- (0.37266956656364447))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN x'' END THEN (~ (rt0.c1)) WHEN COUNT(rt0.c2) THEN ((rt0.c2)||(rt0.c0)) WHEN (NOT (vt0.c0)) THEN SUM(rt0.c0) END FROM vt0 WHERE ((((('104309960') IS FALSE)) NOTNULL));SELECT ALL ((MAX(rt0.c1))<=(((rt0.c0)<>(vt0.c0)))), TOTAL((NOT (vt0.c0))) OVER (), SUM(((rt0.c2)&(rt0.c2))) OVER () FROM vt0, rt0; -- 1ms;
SELECT ALL CAST(((rt0.c0)OR(rt0.c2)) AS REAL) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c2)AND(vt0.c0)) COLLATE RTRIM, rt0.c0, ((((rt0.c0))<=((rt0.c2))) IN ()) FROM rt0, vt0 WHERE ((x'' IN ()) COLLATE RTRIM); -- 0ms;
SELECT ((((- (rt0.c0))))<=((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0))))) FROM vt0 WHERE (((((((((CAST(NULL AS BLOB))OR((('b\ratj^')-(NULL)))))OR(CASE 'o?Q[㾊'  WHEN '-627825441' THEN 0.9886785403558781 WHEN '䀞B' THEN 0x37274b19 WHEN 'f졯GG' THEN 0x79ab8cde END)))AND(CASE WHEN NULL THEN 0X67ac0167 WHEN 0.1298318827813968 THEN '-1784550225' WHEN NULL THEN '-414450197' WHEN 0.3831311739819475 THEN '107188423' WHEN x'' THEN 0xffffffff888c6e80 END)))AND(((NULL)IS NOT(0.0613308935692517)))));SELECT DISTINCT CAST((rt0.c1 IN (vt0.c0, NULL)) AS INTEGER), SUM(((((rt0.c0)AND(x'')))AND(rt0.c0))), (((((((((- (rt0.c1)))OR(((rt0.c2)IS NOT(vt0.c0)))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))))OR(((rt0.c2) NOT NULL))), ((CASE rt0.c0  WHEN x'accc1b54' THEN rt0.c2 ELSE rt0.c0 END)IS NOT(TOTAL(vt0.c0))), ((CAST(0.7185163050744002 AS BLOB))!=((- (vt0.c0)))) FROM rt0, vt0 WHERE (CASE WHEN 1.581536161E9 THEN x'' ELSE 0.8842458449636691 END COLLATE NOCASE); -- 0ms;
SELECT ALL ((((((vt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR((rt0.c1 IN ()))) FROM vt0, rt0 WHERE (((((((((CAST(x'' AS REAL))OR((((('kW')OR(NULL)))OR('-1360128176')))))OR(((NULL) NOT BETWEEN (NULL) AND (NULL)))))OR(CASE WHEN NULL THEN 1660934071 ELSE x'' END)))AND((('eqgds?]t')IS(0.2889564301446842))))); -- 0ms;
SELECT ALL ((((rt0.c2)||(rt0.c0))) IS TRUE) FROM vt0 INNER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND (((- (vt0.c0))))); -- 0ms;
SELECT x'', (((vt0.c0, 'om', rt0.c1)) BETWEEN ((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)), ((vt0.c0) IS TRUE), rt0.c1 COLLATE NOCASE)) AND ((rt0.c2 COLLATE NOCASE, TOTAL(rt0.c1), (+ (rt0.c2))))), (((- (vt0.c0))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c0)-(rt0.c2)))) FROM vt0 NOT INDEXED, rt0 WHERE (CASE ((-1289243556)>>(NULL))  WHEN ((0.9689868261171032)OR('')) THEN (('-1614723065') BETWEEN (x'2586') AND (NULL)) END); -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT BETWEEN ('') AND (rt0.c2)) IN ()), ((((vt0.c0) NOTNULL))/((- (rt0.c0)))), CAST(CAST(rt0.c2 AS REAL) AS BLOB) FROM rt0, vt0 WHERE (((((x'')<=(NULL)))+(((0X69217e6f) IS FALSE)))) LIMIT 162839241; -- 0ms;
SELECT ((((vt0.c0)*(rt0.c0))) BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) AND (((rt0.c2)<>(rt0.c0)))) FROM vt0 WHERE (CAST(('39' IN ()) AS NUMERIC));SELECT DISTINCT FIRST_VALUE(CAST(vt0.c0 COLLATE NOCASE AS NUMERIC)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((rt0.c2)*((vt0.c0 IN ()))), ((CAST(7.97661728E8 AS REAL)) NOTNULL), (((TOTAL(x'7ec2'), ((((((((NULL)OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)), (vt0.c0 IN ()), (+ (rt0.c0)), ((((((((((((rt0.c2)OR(rt0.c1)))OR(NULL)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0))))<((x'' COLLATE RTRIM, CAST(vt0.c0 AS BLOB), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)), AVG(vt0.c0), UPPER(vt0.c0)))) FROM vt0;SELECT DISTINCT rt0.c0, IFNULL(DISTINCT (NOT (rt0.c1)), vt0.c0), ((MIN(vt0.c0))>=(((rt0.c1)/(rt0.c2)))) FROM vt0, rt0 GROUP BY (NOT (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)); -- 1ms;
SELECT SQLITE_SOURCE_ID() FROM vt0 WHERE (((((((0.8423864884466792)OR('18668568')))OR('1217591602')))+(((('2123087949')) NOT BETWEEN (('ˈO%/')) AND (('-1774711417')))))) ORDER BY ((((vt0.c0) NOTNULL))>(((((((((vt0.c0)OR(rt0.c2)))AND(NULL)))OR(rt0.c0)))OR(rt0.c1)))) ASC;SELECT ALL x'3457' FROM vt0 WHERE (TRIM(DISTINCT (((x'')) BETWEEN (('-626139462')) AND (('~IVrTLQ'))), (((('1949902936')AND(-1784550225)))AND('305698568')))) ORDER BY ((rt0.c2) ISNULL) DESC;SELECT NULL FROM rt0, vt0 WHERE (NULL) LIMIT 1923465607 OFFSET -1007731833; -- 0ms;
SELECT DISTINCT ((((rt0.c2)AND(CAST(vt0.c0 AS NUMERIC))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM vt0 WHERE (((((NULL, 0.9618329741088425, 0.5888741330180193))=((-2.055868488E9, '', '1268725358'))) IN (CAST(0.5753178987551144 AS INTEGER), (('2018065233') BETWEEN ('&%') AND (x'')))));SELECT DISTINCT (((- (rt0.c0))) BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) AND (rt0.c0 COLLATE RTRIM)), ((rt0.c2 COLLATE RTRIM) BETWEEN (SUM(x'2cab')) AND ((((rt0.c2))=((0.44257707396978596))))), TIME((vt0.c0 IN ()), ((rt0.c0)-(rt0.c2)), (+ (rt0.c0))) FROM vt0 WHERE (((((QUOTE(NULL))AND(CAST(1.863453409E9 AS BLOB))))OR(((((x'6f0c')OR(NULL)))AND(''))))) GROUP BY ((rt0.c0)|(vt0.c0)) COLLATE RTRIM, (NOT ((((rt0.c2, rt0.c1, rt0.c0))>=((0.7715398613457776, rt0.c2, vt0.c0))))), CASE CAST(vt0.c0 AS INTEGER)  WHEN (+ (rt0.c1)) THEN ((NULL) NOT BETWEEN (vt0.c0) AND (-545155128)) WHEN vt0.c0 THEN NULLIF(vt0.c0, rt0.c1) WHEN ((vt0.c0)-('1832447850')) THEN ((rt0.c1)>=(rt0.c1)) END, (((vt0.c0))=(((((vt0.c0, '838544708', rt0.c0))==((rt0.c1, rt0.c0, rt0.c2)))))), CASE ((rt0.c0)|(rt0.c2))  WHEN ((rt0.c1)<(vt0.c0)) THEN (~ (rt0.c1)) WHEN (((vt0.c0))<((rt0.c0))) THEN ((rt0.c1)OR(rt0.c1)) WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN ()) END;SELECT DISTINCT rt0.c1 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) FROM vt0;SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((0.0497189691982719 IN ('-1198336875')) COLLATE RTRIM); -- 0ms;
SELECT COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))AND((+ (rt0.c0)))))OR(rt0.c2)))OR((~ (rt0.c0)))))AND((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))), -103466734, AVG(((((((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c0))) FROM rt0, vt0 WHERE (((((NULLIF(DISTINCT ')J<', x''))OR((('104309960') NOTNULL))))AND(CAST(-9.14541133E8 AS NUMERIC)))); -- 1ms;
SELECT DISTINCT (- ((((x'', vt0.c0, rt0.c2))<>((rt0.c0, rt0.c2, vt0.c0))))), TOTAL(((rt0.c0)+(vt0.c0))) OVER ( PARTITION BY 0.8948887938358595, (((((rt0.c0, vt0.c0, rt0.c0))>=((rt0.c0, vt0.c0, vt0.c0))))||(vt0.c0))), CASE WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(0.061706977269006424)))AND(rt0.c0)) THEN GROUP_CONCAT(rt0.c0) ELSE CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END IN (((vt0.c0) ISNULL), (((rt0.c2))!=((rt0.c0))))) FROM vt0;SELECT ((((((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR((+ (rt0.c2)))) FROM vt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END) NOTNULL) DESC;SELECT DISTINCT UPPER(rt0.c1 COLLATE RTRIM) FROM vt0;SELECT COALESCE(rt0.c0 COLLATE BINARY, ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)), (((rt0.c0, 'lw', rt0.c1, rt0.c0, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c2, x'', rt0.c1))), ((rt0.c1)*(vt0.c0))), (((((((((((((+ (rt0.c1)))OR(((vt0.c0) IS FALSE))))OR(((vt0.c0)GLOB(rt0.c0)))))AND(((rt0.c0)IS NOT(rt0.c0)))))OR((((rt0.c0))>=((rt0.c0))))))AND(((rt0.c2)IS(vt0.c0)))))OR(IFNULL(rt0.c2, rt0.c1))), (((vt0.c0 IN ())) NOTNULL) FROM vt0 WHERE (x'') GROUP BY (NOT ((- (NULL)))) HAVING ((((vt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c2, vt0.c0))) IN (((rt0.c0)=(rt0.c0))));SELECT DISTINCT CASE CAST(vt0.c0 AS INTEGER)  WHEN MIN(rt0.c0) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END WHEN ((((rt0.c1)OR(-447574574)))AND(rt0.c0)) THEN ((rt0.c0)<(rt0.c2)) ELSE NULLIF(rt0.c0, rt0.c2) END FROM rt0;SELECT ALL FIRST_VALUE(((rt0.c1)*((rt0.c1 IN ())))) OVER () FROM rt0, vt0 WHERE (rtreenode(CAST(NULL AS NUMERIC), CAST(0.39781239539362623 AS REAL))); -- 0ms;
SELECT ALL ((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c0))) IS TRUE) FROM vt0, rt0; -- 0ms;
SELECT ALL MAX((rt0.c2 IN ())), (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))/(json_array(vt0.c0, rt0.c1, NULL, rt0.c2))), x'' FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM, CAST(rt0.c2 AS BLOB) COLLATE NOCASE COLLATE BINARY, ((CAST(rt0.c2 AS REAL))IS(NULLIF(DISTINCT vt0.c0, rt0.c0))) FROM vt0 WHERE ('[]' COLLATE RTRIM);SELECT DISTINCT (((('205105672')<=(vt0.c0)))<>(COALESCE(DISTINCT vt0.c0, vt0.c0))) FROM rt0, vt0 WHERE (NULL) LIMIT -1791109114 OFFSET -264802855; -- 0ms;
SELECT CAST(MIN(rt0.c2) AS NUMERIC) FROM vt0, rt0 WHERE (0X7d7c97d9); -- 0ms;
SELECT ALL COUNT(((rt0.c1)>>(vt0.c0))) COLLATE RTRIM FROM vt0;SELECT DISTINCT NTH_VALUE(0Xffffffffd31bf534, DATE(((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)), CAST(rt0.c0 AS NUMERIC), SQLITE_COMPILEOPTION_GET(rt0.c1))) OVER () FROM vt0, rt0;SELECT DISTINCT ((((rt0.c0)>(vt0.c0)))%(rt0.c2 COLLATE NOCASE)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT((((('1501516761')OR(rt0.c0)))AND(vt0.c0))) OVER ( ORDER BY ((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(rt0.c2)), -1.252772357E9 RANGE BETWEEN ((rt0.c1 COLLATE NOCASE) IS FALSE) FOLLOWING AND ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE FOLLOWING) FROM vt0;SELECT ((((((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))OR((((rt0.c1))>=((rt0.c1))))))AND(((rt0.c0) IS TRUE))) FROM rt0, vt0 WHERE (1871522188 COLLATE BINARY); -- 0ms;
SELECT ((rt0.c0 IN ()) IN ()) FROM vt0 WHERE (ABS(UNICODE(0.4026068871553874))) ORDER BY ((((rt0.c1)OR(((vt0.c0) ISNULL))))OR(json_quote(rt0.c0))) DESC;SELECT DISTINCT (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)), MAX(vt0.c0), CASE WHEN rt0.c0 THEN rt0.c0 END)) AND ((vt0.c0 COLLATE BINARY, (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c2) NOT NULL)))) FROM vt0, rt0 WHERE ((((0.1785787402363651 IN ())) ISNULL)); -- 0ms;
SELECT 0.4082886749421468 FROM vt0, rt0 LIMIT 834306946 OFFSET -1008169925; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c1 END)=(HEX(vt0.c0))) FROM rt0;SELECT ALL CAST((((rt0.c2, rt0.c0, vt0.c0))>=((rt0.c0, rt0.c2, vt0.c0))) AS REAL) FROM vt0, rt0 WHERE (((('yx' IN (x'')))>=(0xffffffffb2e56758))); -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE ((NOT ((x'e621' IN ())))) GROUP BY (((rt0.c0)>=(rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END));SELECT ALL CASE WHEN ((rt0.c2)IS NOT(rt0.c2)) THEN (NULL IN ()) ELSE (((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END FROM rt0; -- 0ms;
SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((((('-803405033')<=(-1625866877)))LIKE(CASE -1.259184088E9  WHEN NULL THEN ' _%nYXA' END))); -- 0ms;
SELECT ALL CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY FROM rt0, vt0 WHERE ((((('') NOTNULL)) ISNULL)); -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) NOTNULL) FROM vt0 WHERE (((((((' k', 2.80998704E8, '', 1.83244785E9, x'8594')) BETWEEN ((1721349445, 0X40e5ea4c, 1.660934071E9, 1660934071, '6c깱qAe')) AND ((x'', 0.18247435047344385, '0.7928812239954478', 0X1f0d058c, NULL)))))<((((0.15630941253971553) NOT BETWEEN (NULL) AND ('6	'))))));SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, TOTAL(UNLIKELY(DISTINCT rt0.c1)) OVER (), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) COLLATE NOCASE, DENSE_RANK() OVER ( PARTITION BY ((((rt0.c1) BETWEEN ('0.08589766302694002') AND (rt0.c2)))+(CASE WHEN rt0.c2 THEN -588812850 ELSE vt0.c0 END)), CASE (- (vt0.c0))  WHEN ((((rt0.c1)AND(vt0.c0)))OR(rt0.c2)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) END), (((rt0.c1 IN ()))AND(rt0.c0)) FROM vt0, rt0; -- 15ms;
SELECT ALL (((((+ (vt0.c0)))OR(CAST(rt0.c1 AS REAL))))OR(((vt0.c0)OR(rt0.c2)))) FROM rt0 WHERE (((CASE 0.882060909050105  WHEN '0>-&' THEN NULL END) NOTNULL)) GROUP BY COALESCE(DISTINCT ((rt0.c0)IS NOT(vt0.c0)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) HAVING rt0.c2 COLLATE RTRIM;SELECT DISTINCT rt0.c0 FROM rt0 WHERE (LTRIM(((0.8195536942706172) NOT BETWEEN (-1786079295) AND (0.03932130021028157)))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0 WHERE (((-937136204 COLLATE RTRIM) NOTNULL)); -- 0ms;
SELECT (rt0.c1 COLLATE BINARY IN ()), UNLIKELY(rt0.c1) COLLATE NOCASE, rt0.c1 COLLATE RTRIM COLLATE RTRIM FROM rt0, vt0; -- 0ms;
SELECT (~ (MAX(rt0.c0))), NULL, '' FROM vt0;SELECT DISTINCT MAX(((rt0.c2) ISNULL)) FROM rt0, vt0 WHERE ((~ (((0x191de4c2)&(''))))) GROUP BY (~ (rt0.c0)) COLLATE NOCASE; -- 0ms;
SELECT ALL ((CAST('吱' AS TEXT))IS((rt0.c0 IN ()))) FROM vt0, rt0 WHERE ((((NOT ('298886845'))) NOT BETWEEN (((NULL)>=(0.3706232419593809))) AND (('' IN ())))) ORDER BY ((('' IN ()))!=(((rt0.c1) NOTNULL))) ASC, rt0.c2, ((vt0.c0 COLLATE BINARY) IS TRUE) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (SQLITE_COMPILEOPTION_USED(rt0.c1) IN (((rt0.c2)-(vt0.c0)))) FROM rt0, vt0 WHERE (CAST((~ (x'')) AS REAL)) LIMIT 2106554044; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT MAX(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) FROM rt0 WHERE (((CAST(0.3296008156938669 AS REAL)) BETWEEN (CAST(1092096642 AS BLOB)) AND (((0.10083491122438937)-(0.39115593181035657))))); -- 0ms;
SELECT ALL vt0.c0, rt0.c2, ((rt0.c0) NOTNULL) FROM rt0 WHERE (CAST((('') IS TRUE) AS TEXT));SELECT DISTINCT COUNT(CAST(rt0.c1 AS BLOB)) OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL SUM(COALESCE(vt0.c0, rt0.c1)) FROM rt0 WHERE (((((((0.7266790237127941)AND(0.6647015049793639)))AND(x''))) ISNULL)) ORDER BY (((- (rt0.c0)))+((((rt0.c0, vt0.c0, rt0.c2))>((rt0.c0, rt0.c1, rt0.c2)))))  NULLS LAST;SELECT x'', IFNULL(IFNULL(rt0.c1, rt0.c2), ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))), (~ (rt0.c1 COLLATE RTRIM)) FROM vt0, rt0 WHERE (('-172738846' IN ('-522900522')) COLLATE NOCASE) LIMIT 1598898078; -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)&(rt0.c2)) FROM rt0 WHERE ((((('{!0ET3') NOT BETWEEN (x'') AND (0.1298318827813968)))||((x'a7abde2d' IN (NULL))))) ORDER BY ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))LIKE(NULL)); -- 0ms;
SELECT (((load_extension(vt0.c0, rt0.c0)))>=((CAST(rt0.c0 AS INTEGER)))), NULL, rt0.c2 FROM vt0 LIMIT -2093620725;SELECT DISTINCT rt0.c1, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY CAST((NOT (rt0.c1)) AS INTEGER) LIMIT 998956747 OFFSET -2139731056; -- 0ms;
SELECT DISTINCT (NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE x'' END)), (((((~ (rt0.c2)))AND((- (rt0.c0)))))OR(rt0.c0 COLLATE BINARY)), SUM((rt0.c1 IN ())) FILTER(WHERE ((((vt0.c0) NOT NULL))>=(((1.949902936E9) ISNULL)))) OVER () FROM vt0 ORDER BY LOWER(rt0.c1)  NULLS LAST LIMIT 1766195490;SELECT ((((((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(rt0.c1)))AND(((vt0.c0)IS(rt0.c1)))))AND((vt0.c0 IN ()))))AND(rt0.c0)) FROM rt0, vt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((ABS(DISTINCT rt0.c1))) AND ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))))) DESC; -- 0ms;
SELECT DISTINCT (((+ (rt0.c1))) NOT NULL) FROM vt0, rt0 WHERE ((~ (CASE WHEN 0.20402719042277218 THEN NULL WHEN 0.6792345047273975 THEN x'' WHEN 0Xffffffffd0584b95 THEN x'33cf' END))); -- 0ms;
SELECT DISTINCT ((rt0.c2) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(rt0.c1) OVER () FROM rt0, vt0; -- 1ms;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((((NULL) IS TRUE)))<((((x'') IS TRUE))))); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS NUMERIC) COLLATE BINARY FROM rt0;SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((0.8875045079609776)GLOB(rt0.c1))))>((vt0.c0))) FROM rt0;SELECT ((rt0.c1)IS(rt0.c0 COLLATE NOCASE)) FROM vt0 WHERE ((((-1972419744)>(0X3fb06fd9)) IN ())) GROUP BY (- (NULL)), CASE CHANGES()  WHEN ((vt0.c0)<=(rt0.c0)) THEN ((0.1720721133779216) IS FALSE) WHEN ((x'')-('1698505246')) THEN ((rt0.c2) NOT NULL) WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) ELSE 0.8884712369202815 END, (+ (0.6656847427870914 COLLATE NOCASE));SELECT DISTINCT CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN (((rt0.c1)) NOT BETWEEN ((0.6353198333515339)) AND ((rt0.c1))) WHEN (rt0.c0 IN ()) THEN CAST(rt0.c1 AS INTEGER) WHEN (NOT (2074480163)) THEN x'd7d2' WHEN (vt0.c0 IN ()) THEN ((rt0.c1) NOT NULL) WHEN rt0.c0 THEN (rt0.c2 IN ()) WHEN ((NULL)GLOB(rt0.c0)) THEN ((rt0.c1)&(rt0.c1)) WHEN CAST(rt0.c1 AS REAL) THEN (+ (0.19637386081292463)) END FROM vt0, rt0 WHERE ((~ (((NULL)||(NULL))))) GROUP BY (- (UPPER(rt0.c2))), ABS(((rt0.c1) NOTNULL)), (((((rt0.c2 IN ()))AND((~ (vt0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)), (((NOT (x''))) IS FALSE), CAST(((vt0.c0)<(vt0.c0)) AS TEXT) HAVING COUNT(CAST(rt0.c2 AS BLOB));SELECT MAX(797661728) COLLATE BINARY, (((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c2, '', rt0.c0))))<(((rt0.c1)IS(rt0.c1)))), (((rt0.c2 IN (vt0.c0)))>=(SQLITE_COMPILEOPTION_GET(vt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((''))) AS TEXT), COALESCE(DISTINCT ((((((((rt0.c1)OR('QC')))OR(0.3113820693229352)))OR(rt0.c1)))OR(rt0.c2)), COUNT(rt0.c2)), LEAD((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN (((((rt0.c0))==((rt0.c1))), ((rt0.c2)IS(NULL)), ((rt0.c0) NOT NULL))) AND ((((rt0.c1)*(rt0.c2)), LOWER(rt0.c1), rt0.c1 COLLATE NOCASE))), (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) IN ()), 0.5411462178109707 COLLATE BINARY) OVER () FROM rt0 WHERE (((((((x'4b9d9576')AND(NULL)))AND(x'ab471394'))) NOT NULL));SELECT DISTINCT GROUP_CONCAT((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) OVER (), ((((vt0.c0)==(vt0.c0)))LIKE(SUM(rt0.c1))), 1403793437 FROM vt0;SELECT DISTINCT MAX((NOT (rt0.c0))) FROM vt0, rt0 WHERE ((((((((((NOT ('T')))OR(CASE WHEN NULL THEN 'd)	\r*yᖠ' END)))OR(UPPER(DISTINCT '{!0et3'))))AND(((0.20617484606596337) NOTNULL))))OR((NOT (1.83244785E9))))) UNION ALL SELECT DISTINCT ((((((x'343c') NOT NULL))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) IS TRUE))) FROM rt0, vt0 WHERE (((((0.4674472810815181)>(x''))) BETWEEN (IFNULL(NULL, x'bed8')) AND (((x'1c9e') NOTNULL)))); -- 0ms;
SELECT DISTINCT 0.4367339234192087, ((((vt0.c0)LIKE(rt0.c2)))%((vt0.c0 IN ()))), ((TYPEOF(rt0.c2))||(((rt0.c1)GLOB(vt0.c0)))), CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT), TOTAL(((vt0.c0) ISNULL)) OVER () FROM rt0, vt0; -- 1ms;
SELECT DISTINCT (+ ((+ (rt0.c0)))), rt0.c1, ((rt0.c1) BETWEEN (((rt0.c0)GLOB(rt0.c1))) AND (TOTAL_CHANGES())) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT '}k⎪#', ((((rt0.c2) NOT NULL)) ISNULL), rt0.c1 FROM vt0;SELECT 0xffffffff9fd75680 FROM rt0, vt0 ORDER BY 1059054227;SELECT DISTINCT COUNT(*) FILTER(WHERE ((rt0.c1)%('T>Z(#')) COLLATE RTRIM) OVER (), LAST_VALUE((((vt0.c0 IN ())) NOT BETWEEN (x'') AND (CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) OVER (), ((COUNT(vt0.c0))IS((1.455848157E9 IN ()))) FROM vt0 WHERE (CAST('906538020' COLLATE RTRIM AS NUMERIC));SELECT (NOT (((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))), LEAD(CASE ((rt0.c1) IS TRUE)  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN COALESCE(x'b577', vt0.c0) END, ((ABS(DISTINCT vt0.c0))IS NOT(rt0.c0)), CAST((rt0.c2 IN ()) AS BLOB)) OVER (), CAST((((rt0.c2, rt0.c2, rt0.c0))=((rt0.c0, rt0.c0, rt0.c2))) AS NUMERIC) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT AVG((((rt0.c0, rt0.c1, NULL, vt0.c0, rt0.c1))=((vt0.c0, rt0.c2, rt0.c2, 'X8', vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ()))=(((((((((rt0.c1)OR(vt0.c0)))OR(x'c071')))AND(vt0.c0)))AND(rt0.c2)))), (- ((NOT (vt0.c0)))), (MAX('-1502847336') IN ()) FROM rt0;SELECT ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))=(SQLITE_SOURCE_ID())) FROM rt0 WHERE ('F*');SELECT DISTINCT rt0.c0 FROM rt0 EXCEPT SELECT DISTINCT ((json_array(rt0.c1, rt0.c2)) ISNULL) FROM vt0, rt0 WHERE (CAST(CASE WHEN NULL THEN '-1568903473' END AS BLOB)) GROUP BY (((((x'841b')) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) AND (CASE 0.14024701710753684  WHEN rt0.c0 THEN vt0.c0 END)) HAVING MIN(((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c0))); -- 0ms;
SELECT ALL CASE GROUP_CONCAT(NULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END THEN (~ (rt0.c2)) END FROM rt0, vt0; -- 0ms;
SELECT ALL ((((((rt0.c2)*(rt0.c1)))AND('')))AND(((rt0.c2)>>(rt0.c2)))) FROM rt0 WHERE ('837214902'); -- 0ms;
SELECT DISTINCT ((('-1148214017'))<((0.9599201228470411))), COALESCE(1429071182, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END, CAST(rt0.c2 AS REAL), ((rt0.c1)>(rt0.c0))), vt0.c0 FROM vt0, rt0 WHERE (x'5c90'); -- 0ms;
SELECT DISTINCT (- ((((vt0.c0))<>((rt0.c2))))) FROM vt0 WHERE ((+ ((0X5205748e IN (0.5155650599241878)))));SELECT DISTINCT ((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c2)/(rt0.c0)))))AND(((rt0.c2)IS(rt0.c1)))))OR(((rt0.c0) NOTNULL))))AND((~ (rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL (((x'e50c')&(rt0.c0)) IN ()) FROM vt0 WHERE ((NOT ((((('贗w~M淙')OR('zP4mz')))OR(''))))); -- 0ms;
SELECT ALL (+ (rt0.c1)) FROM vt0;SELECT DISTINCT (((rt0.c1 IN ())) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(rt0.c0), (((rt0.c1 IN (vt0.c0)))>>(vt0.c0 COLLATE BINARY)), ROW_NUMBER() OVER () FROM vt0 WHERE (((~ (-3.52920756E8)) IN (PRINTF(NULL))));SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0 WHERE (((CAST(NULL AS NUMERIC))GLOB(CASE '-1976363872'  WHEN 0Xffffffffeaf6db4c THEN x'' END))); -- 0ms;
SELECT ALL (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c0)*(0.7883089035136283)), rt0.c1)) AND ((TYPEOF(rt0.c2), ((((((((((((rt0.c2)AND(0.4011734709571301)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)), COUNT(rt0.c0)))), ((((rt0.c2)OR((((vt0.c0))<>((0.04663755059880026))))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))), ((rt0.c2) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND('0.30695504538185125'))) AND (AVG(vt0.c0))), ((SUM(vt0.c0))-((+ (rt0.c1)))), 0.7326875129829566 COLLATE RTRIM FROM vt0, rt0 WHERE (((('26Bv읶,' IN ())) BETWEEN (((((x'')OR(0.488970389256003)))OR(x'6f02'))) AND ((((NULL, NULL, x'7fbde432'))>=((NULL, x'', NULL)))))); -- 0ms;
SELECT DISTINCT '' FROM vt0 WHERE ((((NULL))<>((((2041285854) IS TRUE))))); -- 0ms;
SELECT DISTINCT '^0' FROM rt0, vt0; -- 0ms;
SELECT DISTINCT vt0.c0, ((COUNT(vt0.c0)) BETWEEN ((0.4742471975901028 IN ())) AND (((vt0.c0)<>(rt0.c1)))), CAST(GROUP_CONCAT(vt0.c0) AS REAL) FROM vt0, rt0 WHERE (((((NULL)AND(CAST(0xffffffffab32f217 AS TEXT))))OR(((0.03138486572516164)LIKE('193353962'))))) ORDER BY rt0.c1 COLLATE NOCASE COLLATE BINARY ASC  NULLS FIRST, ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT NULL) ASC  NULLS FIRST LIMIT 104309960; -- 0ms;
SELECT DISTINCT MIN(UNLIKELY(DISTINCT rt0.c2)), (TRIM(rt0.c1, rt0.c0) IN ()), CAST(((vt0.c0) ISNULL) AS REAL) FROM rt0 WHERE (((((((((DATE(x'', '1455863699', 0.38233229588822537, '-1208484449', x'd57c'))OR((x'' IN (0Xffffffff8171cd3b)))))AND(CAST(x'' AS NUMERIC))))AND(((('', 'g', '', '^'' PS', NULL))<>((x'', NULL, NULL, NULL, 'eꅂ'))))))OR(((x'ad32') IS FALSE)))) LIMIT 1993708271 OFFSET -1498698880;SELECT rt0.c1 FROM vt0;SELECT DISTINCT (- (NULL)) COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT ((((rt0.c2)AND(vt0.c0)))<=((rt0.c1 IN ('0.08614164332142316')))) FROM vt0 WHERE (((1616858030 COLLATE NOCASE)==(((-2144466549) NOT BETWEEN (x'') AND (x'e1ee3be8')))));SELECT ALL ((GROUP_CONCAT(vt0.c0))&('863462666')), CASE AVG(rt0.c1)  WHEN MIN('<{x?{') THEN CASE WHEN '-980854628' THEN vt0.c0 END WHEN ((rt0.c0)<(rt0.c2)) THEN TOTAL(rt0.c1) WHEN CAST(rt0.c2 AS BLOB) THEN CAST(vt0.c0 AS BLOB) WHEN ((rt0.c0)<<(vt0.c0)) THEN ((rt0.c0)-(rt0.c1)) WHEN NULL THEN rt0.c2 COLLATE NOCASE END, x'' FROM vt0, rt0 WHERE (((((((0.25048552524589496)OR(479611514)))OR(NULL)))>>((NOT (-1030953508))))); -- 1ms;
SELECT DISTINCT FIRST_VALUE((((vt0.c0 IN (vt0.c0)))OR(((rt0.c0) NOT NULL)))) OVER (), AVG((((rt0.c2))<=((rt0.c0)))), (~ (((0.3151440982814032)=(rt0.c2)))), (- (rt0.c1)) COLLATE NOCASE, x'' COLLATE BINARY FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (+ (rt0.c2)) THEN ((rt0.c2)|(rt0.c0)) WHEN ((((rt0.c1)AND(0xffffffffee58010c)))AND(rt0.c2)) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) WHEN (vt0.c0 IN ()) THEN (('TRUE') NOT BETWEEN (vt0.c0) AND (rt0.c1)) END FROM vt0, rt0; -- 0ms;
SELECT '0.6322324146032557', ((((rt0.c0)<(rt0.c1))) ISNULL), AVG(CAST(rt0.c2 AS TEXT)) OVER ( ORDER BY CAST(((rt0.c0)GLOB(rt0.c0)) AS REAL) DESC) FROM rt0; -- 0ms;
SELECT DISTINCT (('-1957069319') BETWEEN ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((x'', vt0.c0, rt0.c2)) AND (('719709964', rt0.c2, vt0.c0)))) AND (CAST(rt0.c1 AS TEXT))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT json_array_length(SUM(rt0.c0)) FROM rt0 ORDER BY NULL ASC LIMIT 775824913; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), rt0.c0) FROM rt0, vt0 WHERE (CAST('}Huo㖳Q4GN' AS NUMERIC) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC) FROM vt0 WHERE (CAST((~ (NULL)) AS REAL));SELECT DISTINCT 0x72a5c187 FROM rt0 WHERE (CAST((('sbiiXW') IS TRUE) AS INTEGER)); -- 0ms;
SELECT DISTINCT (NOT ((((vt0.c0, 0.2791684821671968, rt0.c1, rt0.c0, vt0.c0))<=((rt0.c2, rt0.c0, rt0.c0, vt0.c0, vt0.c0))))) FROM rt0 WHERE (((COALESCE(DISTINCT 1937699064, 0.35252335382195243)) NOT BETWEEN ((((0.20402719042277218)) NOT BETWEEN ((7.97661728E8)) AND ((1369976551)))) AND ((((x''))<((0.7326875129829566))))));SELECT DISTINCT ((((((((((rt0.c0)AND('')))OR(rt0.c0)))AND(rt0.c0)))AND(NULL))) NOT BETWEEN ((rt0.c2 IN ())) AND (((((rt0.c2)AND(rt0.c1)))AND('')))), CAST(((rt0.c0)IS NOT(rt0.c2)) AS NUMERIC), ((TYPEOF(rt0.c2)) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (CASE 'p}}A3'  WHEN rt0.c1 THEN rt0.c0 END)), GROUP_CONCAT(IFNULL(DISTINCT rt0.c0, rt0.c2)) OVER ( PARTITION BY (((rt0.c1)) BETWEEN ((((vt0.c0)<(rt0.c1)))) AND ((((NULL)<=(rt0.c2))))), ((((rt0.c2)IS NOT(NULL))) IS TRUE)), CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN ((rt0.c0)/(vt0.c0)) END FROM vt0, rt0; -- 0ms;
SELECT NULLIF(DISTINCT rt0.c2 COLLATE RTRIM, (rt0.c1 IN ())) FROM vt0 WHERE (((('')AND('')) IN ((x'' IN (x'', '-799519851')))));SELECT DISTINCT ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) NOT NULL) FROM rt0 WHERE (((0.5568822811449121)<(x'')) COLLATE RTRIM); -- 0ms;
SELECT CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN (NULL IN ()) THEN ((rt0.c2)GLOB(vt0.c0)) WHEN x'' THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (NOT (rt0.c2)) THEN ((rt0.c1)>>('2041285854')) ELSE 0.07035184047631504 END FROM vt0, rt0 WHERE (CAST((~ (NULL)) AS INTEGER)); -- 1ms;
SELECT COUNT(*) FROM vt0 WHERE ((((NULL) ISNULL) IN (((x'') BETWEEN (0.4635951243502714) AND (x'e909'))))); -- 0ms;
SELECT ((rt0.c1 COLLATE RTRIM) NOT NULL), ((((SQLITE_COMPILEOPTION_USED(rt0.c1))AND(CAST(rt0.c1 AS BLOB))))OR(COUNT(vt0.c0))), ((((vt0.c0)%(x'ddc9'))) BETWEEN ((((rt0.c0))!=((rt0.c1)))) AND ((rt0.c1 IN ()))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT json_array_length((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'')))), ((((rt0.c0)<=(rt0.c2))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((((((((('-546301691')AND(rt0.c2)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))), ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '-453893166' THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) NOT NULL), (+ ((((0X6e892577)) BETWEEN ((NULL)) AND ((rt0.c1))))), json(((vt0.c0) IS TRUE)) FROM rt0;SELECT (NOT (((vt0.c0)==('1088809548')))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT AVG(((0.24979938504641996)=(vt0.c0))) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT 0.7168362933188347 COLLATE NOCASE FROM rt0 WHERE (((244471301) IS TRUE) COLLATE BINARY) ORDER BY (rt0.c1 COLLATE RTRIM IN ()) ASC; -- 0ms;
SELECT '1268725358' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (rt0.c2 IN ()) COLLATE BINARY FROM rt0, vt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0, vt0 GROUP BY CAST((NOT (rt0.c1)) AS NUMERIC), (((((rt0.c2))>=((rt0.c0)))) NOTNULL), (((((rt0.c2)>>('996200042'))))>=((rt0.c2 COLLATE NOCASE))) ORDER BY (CAST(vt0.c0 AS REAL) IN (((rt0.c1) IS TRUE)))  NULLS LAST, (((rt0.c0)) BETWEEN ((0xd16d1b7)) AND ((((rt0.c0)LIKE(rt0.c1))))) ASC  NULLS LAST, (((((((((rt0.c1 IN ()))OR((~ (rt0.c1)))))OR(0.5310219297875051)))OR((+ (vt0.c0)))))AND(((rt0.c0) ISNULL))); -- 1ms;
SELECT ALL GROUP_CONCAT(COUNT(((rt0.c1)GLOB(rt0.c0)))) FROM vt0, rt0 WHERE ((((json_quote('')))=(((- (-102498886))))));SELECT DISTINCT ((GROUP_CONCAT(rt0.c0))IS NOT(rt0.c1 COLLATE RTRIM)) FROM vt0 WHERE (((CAST('-988758919' AS NUMERIC)) BETWEEN (CASE WHEN '-114788642' THEN x'' ELSE x'' END) AND ('h#u餆'))) GROUP BY (((vt0.c0) NOTNULL) IN ()) HAVING ((vt0.c0)>>(vt0.c0)) COLLATE NOCASE;SELECT ALL 'ঋ갡?h' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS BLOB) FROM rt0 GROUP BY ((((rt0.c0)AND(CASE WHEN rt0.c2 THEN rt0.c0 END)))OR(rt0.c2)) HAVING CASE WHEN 1.37608923E9 THEN rt0.c1 ELSE ((rt0.c2)IS(rt0.c2)) END; -- 0ms;
SELECT DISTINCT ((((rt0.c0)+(rt0.c0)))OR(((rt0.c1)*(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (CAST(rt0.c1 AS TEXT))) FROM rt0, vt0 WHERE (((((((0.7214542793544244)OR('rELFUꅈ!2R')))OR(0.2742608016717072)))<<((('1570417663')||(x''))))); -- 1ms;
SELECT ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM, rt0.c0, ((HEX(DISTINCT rt0.c0)) BETWEEN (((rt0.c2)IS(rt0.c0))) AND (COUNT(rt0.c0))) FROM rt0, vt0 WHERE (((('')) NOT BETWEEN ((((('-815500293')) BETWEEN ((-2.055868488E9)) AND ((0.9478401929663394))))) AND (((0.0822589181017348 IN (x'')))))); -- 0ms;
SELECT ALL LEAD((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c0 IN (rt0.c0, rt0.c1)), ((rt0.c1)>>(rt0.c2)), rt0.c1 COLLATE NOCASE)) AND ((rt0.c0, ((rt0.c2)IS(rt0.c0)), ((x'') IS TRUE)))), CAST(((rt0.c1)&(rt0.c1)) AS TEXT), (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN (((NOT (rt0.c2)), ((x'')<(rt0.c0)), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND (((((rt0.c1))<((rt0.c1))), rt0.c0, ((NULL) ISNULL))))) OVER (), ('1217591602' IN (((rt0.c2)+(vt0.c0)))), (rt0.c0 COLLATE BINARY IN ()) FROM rt0 WHERE (CAST(((NULL) NOT NULL) AS NUMERIC));SELECT ALL CASE WHEN (~ (vt0.c0)) THEN (((rt0.c1))!=((vt0.c0))) ELSE CAST(rt0.c1 AS TEXT) END, (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))=((0.04600685998857956))), TOTAL_CHANGES(), rt0.c2, ((rt0.c1) NOTNULL) FROM vt0, rt0 WHERE (((CASE x'7f9d'  WHEN '-214444762' THEN '-1231704466' WHEN 0.7292297039543771 THEN '1496341877' WHEN '-9223372036854775808' THEN x'' END) NOT BETWEEN (((((-571752684)AND(NULL)))OR(NULL))) AND ((((x'f750'))>=((NULL)))))); -- 0ms;
SELECT ALL ((NOT (rt0.c1)) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(((vt0.c0) BETWEEN (0.17788987932530498) AND (rt0.c0)))), ((rt0.c2 COLLATE RTRIM)IS NOT(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), ((((TOTAL(vt0.c0))AND((((rt0.c2))<((rt0.c0))))))AND((rt0.c0 IN ()))), CAST(TOTAL_CHANGES() AS TEXT), (((((+ (rt0.c0)))OR(NULL)))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) FROM vt0;SELECT LIKELIHOOD((((rt0.c1))<=((rt0.c0))), 0.28866452355333805) FROM vt0 ORDER BY ((((vt0.c0 COLLATE BINARY)OR(CAST(rt0.c2 AS REAL))))OR(vt0.c0)) ASC, CASE WHEN (vt0.c0 IN (rt0.c1)) THEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END END DESC;SELECT DISTINCT (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT (- (((rt0.c1) BETWEEN (x'') AND (rt0.c1)))), ((((SQLITE_COMPILEOPTION_GET(rt0.c2))AND(NULLIF(DISTINCT rt0.c2, rt0.c2))))AND(NULL)), 118060007, 1389664595, PERCENT_RANK() OVER () FROM rt0, vt0 WHERE ((((((((NULL))!=((0.07357405315314047))))AND(0.11060128240438394 COLLATE BINARY)))OR((('now')AND(NULL))))); -- 1ms;
SELECT SUM(((NULL)AND(rt0.c2))) FROM vt0 LIMIT 360465649;SELECT ALL (rt0.c1 IN ()) FROM rt0, vt0 LIMIT -352920756; -- 0ms;
SELECT ALL SUM(json_array(vt0.c0, rt0.c2)), (- (((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(x'')))AND(rt0.c1)))OR(rt0.c0)))), CAST(((rt0.c1)AND(rt0.c0)) AS BLOB), (((rt0.c2 IN (vt0.c0))) NOTNULL), (((((('8n/䱣1e')AND(NULL)))OR(x''))) NOT NULL) FROM vt0 WHERE (((x'') IS TRUE) COLLATE RTRIM);SELECT ALL ((rt0.c0 COLLATE BINARY)%(CAST(vt0.c0 AS INTEGER))) FROM rt0, vt0 WHERE (CAST(((NULL) NOTNULL) AS BLOB)) LIMIT -499630061 OFFSET 803189157; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID(), DENSE_RANK() OVER (), (COUNT(rt0.c2) IN ()) FROM vt0; -- 0ms;
SELECT (((rt0.c0, rt0.c1, vt0.c0)) BETWEEN ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)), (rt0.c0 IN (rt0.c2)), TOTAL_CHANGES())) AND ((((rt0.c1)<<(rt0.c2)), x'', CAST('1646812679' AS TEXT)))) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c0)>>(rt0.c1))  WHEN rt0.c2 THEN CAST(NULL AS BLOB) END; -- 1ms;
SELECT DISTINCT (((~ (rt0.c0))) NOT NULL), DENSE_RANK() OVER (), ((((+ (rt0.c2)), x'', 'kS'))<>((((rt0.c0)%(rt0.c2)), ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)), ((NULL) ISNULL)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END, rt0.c1, (((vt0.c0))>((rt0.c1)))))<=((SUM(rt0.c2), TYPEOF(DISTINCT vt0.c0), ((rt0.c1)||(vt0.c0))))), MAX(SUM(((rt0.c2)%(vt0.c0)))), CAST((rt0.c1 IN ()) AS INTEGER) FROM vt0 CROSS JOIN rt0 ON NULL WHERE (((~ (x'')) IN (CAST('1鱨R㩻' AS INTEGER), 'O?Q[㾊' COLLATE NOCASE)));SELECT DISTINCT (((rt0.c0)) BETWEEN (((((rt0.c1))<=((rt0.c2))))) AND ((LIKE(rt0.c1, rt0.c2)))), LIKE(((rt0.c1)+(rt0.c1)), rt0.c1), ((GROUP_CONCAT(rt0.c1))AND(HEX(0.7805146037665379))) FROM rt0, vt0 WHERE (((NULLIF(0xffffffffcacbeace, '1268725358'))IS((NULL IN ())))) ORDER BY CASE WHEN ((((rt0.c1)AND('')))AND(rt0.c2)) THEN CASE NULL  WHEN vt0.c0 THEN rt0.c2 END END  NULLS LAST, ((rt0.c1) BETWEEN (((rt0.c0)!=(rt0.c0))) AND ((rt0.c2 IN ()))) ASC LIMIT 1866718981; -- 1ms;
SELECT LIKELIHOOD(DISTINCT ((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c2)), 0.43734699659428244), (vt0.c0 COLLATE RTRIM IN ()), ((((vt0.c0)|('n趃'))) NOT BETWEEN (NULL) AND ((+ (rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0)))|('-1354671596')) FROM vt0 WHERE ((- (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT TYPEOF(rt0.c1) COLLATE BINARY, '0.09267187245560071', GROUP_CONCAT(((rt0.c0)=(rt0.c0))) OVER () FROM vt0, rt0 WHERE (((((x'8c40') BETWEEN ('p\n') AND (NULL))) NOT BETWEEN (NULL) AND (((NULL)&(0.2506009365626881))))) ORDER BY vt0.c0; -- 0ms;
SELECT DISTINCT TOTAL(rt0.c0) OVER () FROM rt0, vt0; -- 0ms;
SELECT ((((rt0.c0) ISNULL))IS NOT((((NULL))<=((rt0.c1))))) FROM vt0 WHERE ('') GROUP BY CAST((rt0.c0 IN ()) AS REAL), IFNULL(DISTINCT HEX(DISTINCT rt0.c1), ((rt0.c1)<<(rt0.c2))), CASE rt0.c0  WHEN CAST(vt0.c0 AS TEXT) THEN ((rt0.c0)GLOB(vt0.c0)) END HAVING SUM((((x'e1dd')) BETWEEN ((rt0.c0)) AND ((rt0.c1))));SELECT DISTINCT ((((rt0.c1) NOTNULL))<=((rt0.c2 IN ()))), ((rt0.c1 COLLATE NOCASE)<<(((((vt0.c0)OR(rt0.c1)))OR(vt0.c0)))), ((vt0.c0 COLLATE BINARY)/((~ (vt0.c0)))) FROM vt0 WHERE ((+ ((((x''))<=((NULL))))));SELECT (((MAX(vt0.c0), ((rt0.c2)IS NOT(vt0.c0)), ((x'f5c1')IS NOT(rt0.c1))))>((LIKELIHOOD(rt0.c1, 0.9227059014612271), rt0.c1, vt0.c0 COLLATE NOCASE))) FROM rt0, vt0 WHERE (((- (0.347632304781162)) IN ())); -- 0ms;
SELECT CAST(CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER) FROM vt0 WHERE (((((2069285620)OR(0.7928812239954478)))>>(((NULL)AND(0.34657952712405105)))));SELECT DISTINCT CASE WHEN (rt0.c2 IN (rt0.c0)) THEN (vt0.c0 IN (rt0.c0)) WHEN vt0.c0 THEN GROUP_CONCAT(vt0.c0) WHEN (- (rt0.c0)) THEN ((x'')==(rt0.c1)) END, 0X567ae83d, rt0.c1 FROM rt0, vt0 WHERE ((((694047026)IS(NULL)) IN ((- (0.10958424325960459))))); -- 0ms;
SELECT ALL TOTAL(((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) OVER () FROM vt0;SELECT TOTAL(rt0.c1) FROM vt0 WHERE ((((('')<('741148829'))) IS FALSE));SELECT DISTINCT (((TOTAL(rt0.c0)))>((((rt0.c2)!=(vt0.c0))))), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE, rt0.c0 FROM rt0, vt0 LIMIT -1899238222 OFFSET 484225244; -- 0ms;
SELECT DISTINCT ((((CASE rt0.c2  WHEN 0.21057870982405247 THEN rt0.c0 END)OR(((rt0.c2) NOTNULL))))OR(CAST(vt0.c0 AS BLOB))) FROM rt0, vt0 WHERE ((('-1221287132') NOT NULL)); -- 0ms;
SELECT ((rt0.c2 COLLATE RTRIM)<=((rt0.c1 IN ()))) FROM vt0, rt0 WHERE (CASE LIKELIHOOD('*|]a(', 0.8673556141460405)  WHEN NULL COLLATE BINARY THEN 0.6407403802882449 COLLATE RTRIM ELSE ((((x'422e')OR(NULL)))OR(-6.50162302E8)) END); -- 1ms;
SELECT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM FROM vt0 WHERE (((((((((((0.7915080081450464)IS(0.7850703956425892)))AND(((('}k⎪#', x'', '0.03543748924737666')) BETWEEN (('', '', x'')) AND (('1342002700', '-191452852', NULL))))))OR((('~c螆B[eh')||(x'')))))AND(('7>\r' IN ()))))OR(((('D?')) NOT BETWEEN ((x'033d')) AND ((0.3368834786217064)))))) GROUP BY vt0.c0;SELECT ALL rt0.c0 FROM rt0, vt0; -- 0ms;
SELECT ALL LOWER((+ (vt0.c0))), (((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))<=((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))), (~ (((vt0.c0)||(x'')))), NULL, AVG((((rt0.c2, rt0.c2, rt0.c2, rt0.c0, vt0.c0))>((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c2)))) FROM vt0 WHERE ((- (NULL)) COLLATE NOCASE);SELECT ALL NTILE(UPPER(((((212382014)OR(rt0.c1)))OR(rt0.c2)))) OVER () FROM rt0, vt0 WHERE ((((0.9696817173883747 IN ()))IS NOT(CAST('766585859' AS INTEGER)))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN (((vt0.c0 IN ()))) AND ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))))) FROM vt0, rt0 WHERE (CAST((~ ('1088809548')) AS INTEGER)); -- 0ms;
SELECT ((((rt0.c1)AND(rt0.c2 COLLATE RTRIM)))AND(0.48923050843415183)), ROW_NUMBER() OVER (), MIN('^kM96') FROM vt0, rt0; -- 0ms;
SELECT DISTINCT '1616858030', ((((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))OR(NULL))) ISNULL), (~ (((((-832855716)AND(rt0.c1)))OR(rt0.c2)))) FROM vt0 WHERE ((((('V') NOT BETWEEN (x'') AND (x'52d9')))OR((((0Xffffffffdadf525f)) BETWEEN ((NULL)) AND ((NULL))))));SELECT (NOT (((rt0.c1)<=(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) FROM vt0, rt0 WHERE (UPPER(0.4432710556630307 COLLATE NOCASE)) LIMIT 1465280050; -- 0ms;
SELECT ALL ((CAST(rt0.c1 AS REAL)) IS FALSE) FROM vt0, rt0 WHERE (((CAST('' AS NUMERIC))-(LIKELY(DISTINCT 1.3420027E9)))) GROUP BY ((0.6821597953393896)>(((vt0.c0) ISNULL))), ((((vt0.c0) IS TRUE)) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 END) AND (CAST(706518188 AS TEXT))), ((CAST(rt0.c2 AS INTEGER))!=(((rt0.c2)!=(rt0.c2)))); -- 0ms;
SELECT ALL ((((((rt0.c2)IS(rt0.c0)))OR(TYPEOF(vt0.c0))))AND((~ (rt0.c1)))) FROM rt0, vt0 WHERE ((((x'')IS(NULL)) IN ())); -- 3ms;
SELECT DISTINCT ((rt0.c0)>>((rt0.c2 IN (rt0.c2)))) FROM vt0 WHERE (0.8783565291796487) GROUP BY CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END AS INTEGER), (((CAST(rt0.c1 AS TEXT)))>=((rt0.c2))), (((rt0.c0, rt0.c2, '283239296', vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c2, NULL, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c0, 0.2514030112882666, rt0.c2))) COLLATE BINARY, CASE WHEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE ((vt0.c0) NOT NULL) END, ((rt0.c0)IS(((rt0.c2)<(rt0.c2))));SELECT DISTINCT NULL, (((+ (vt0.c0)))<>(((rt0.c2)GLOB(vt0.c0)))), ((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)AND(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN NULL THEN rt0.c1 WHEN '' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((((((((rt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND('P<')))AND(rt0.c1)))), 0.29586789626240695, GROUP_CONCAT('118270539') FROM rt0 WHERE ((- (CASE 0.45464465624467665  WHEN x'' THEN 0.23747078386840348 ELSE 0.8712477413639658 END)));SELECT DISTINCT GROUP_CONCAT(-2.64802855E8) FILTER(WHERE ((((LIKE(rt0.c1, vt0.c0))AND((+ (vt0.c0)))))AND((rt0.c0 IN ())))) OVER (), ((((((vt0.c0, vt0.c0, rt0.c1, vt0.c0, 1526400272)) NOT BETWEEN ((rt0.c2, NULL, rt0.c2, rt0.c0, x'944e94b9')) AND ((rt0.c2, vt0.c0, '-1360128176', rt0.c2, rt0.c1)))))<>((GROUP_CONCAT(vt0.c0)))), (((vt0.c0)<<(rt0.c2)) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0, vt0 WHERE ((NOT (0Xffffffffb26a00d7)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((rt0.c1) IS TRUE))LIKE(GLOB(rt0.c0, rt0.c1))) FROM rt0, vt0 WHERE (CAST(x'' AS BLOB)); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOTNULL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL), rt0.c1, SUM(719709964) OVER () FROM rt0 WHERE (LOWER(((NULL)!=('w*Q)5pF')))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (0x1cde1071) AND (rt0.c0))) BETWEEN (((rt0.c2)!=(rt0.c1))) AND (SUM(-1625866877))) FROM vt0 WHERE ((NOT (')wDK'))) GROUP BY ((((rt0.c0 IN (rt0.c2))))<=((((((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c2)))OR(vt0.c0))))) LIMIT -1568903473 OFFSET -752807576;SELECT ALL TOTAL((~ (rt0.c2))) OVER () FROM vt0 ORDER BY (NOT ((rt0.c0 IN ()))) DESC  NULLS LAST;SELECT DISTINCT ((((((((((((((((rt0.c1)OR(rt0.c0)))AND(0xfffffffff42440ae)))OR(vt0.c0)))AND(rt0.c1)))OR(((rt0.c2) ISNULL))))AND(((rt0.c0)<<(rt0.c0)))))OR(rt0.c2)))AND((rt0.c2 IN ()))) FROM vt0 WHERE (((IFNULL(NULL, '0.22682722854797566'))OR((('0.4113512106391397') NOT BETWEEN ('') AND (5.90473941E8))))); -- 0ms;
SELECT DENSE_RANK() OVER ( ORDER BY (((((rt0.c1))=((rt0.c1))))+(x'6260'))) FROM vt0 WHERE (0.02068400480058108);SELECT ALL (+ (rt0.c1)) COLLATE BINARY FROM rt0 WHERE (0Xffffffffcc11738d); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)<(UPPER(DISTINCT rt0.c0))), ((((vt0.c0)<=(rt0.c1))) IS FALSE), ((((rt0.c0)<=(vt0.c0)))GLOB(rt0.c1 COLLATE NOCASE)) FROM vt0, rt0 WHERE (CASE WHEN ((NULL)*(0.3010679967713298)) THEN ABS(DISTINCT 0x686a62f6) WHEN x'' COLLATE RTRIM THEN ((((((((x'')OR('-546916811')))AND('27118520')))AND(0.009238115555873727)))OR(NULL)) WHEN (~ (NULL)) THEN ((x'') IS FALSE) ELSE CASE 0xffffffffeb071a85  WHEN 'n' THEN 0.3643243912417886 ELSE -773239361 END END); -- 0ms;
SELECT ALL ((0.9931034373641913) IS TRUE) FROM rt0; -- 1ms;
SELECT ALL CAST(((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)) AS REAL), TOTAL((NOT (vt0.c0))) OVER (), CASE WHEN x'' COLLATE RTRIM THEN ((rt0.c2) IS FALSE) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 WHEN json_object(rt0.c0, vt0.c0) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN ((((((((79380466)OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)) THEN json_patch(vt0.c0, rt0.c0) END FROM rt0 LIMIT 1141119806 OFFSET -114788642;SELECT HEX(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0))), (('-1888747719') BETWEEN ((x'' IN ())) AND ((~ (rt0.c1)))), CASE WHEN CAST(rt0.c2 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN JULIANDAY(rt0.c0, NULL, rt0.c2, vt0.c0, rt0.c1) THEN CAST(rt0.c2 AS REAL) WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN IFNULL(rt0.c1, rt0.c2) ELSE (((vt0.c0, vt0.c0, 1987094875))>((0X6428238f, rt0.c2, rt0.c2))) END FROM vt0, rt0 WHERE ((((((x'') NOT BETWEEN (x'') AND (0Xffffffffb3af94a1))))<(((((671945632))>=((x'6f6a'))))))); -- 0ms;
SELECT (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))) COLLATE BINARY FROM rt0 WHERE (((((x'')AND(x'')))*(((x'6721')OR('314303274'))))) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (vt0.c0 IN ()) THEN (~ (rt0.c2)) WHEN 0.08614164332142316 THEN (rt0.c1 IN ()) ELSE ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) END ASC  NULLS FIRST;SELECT ALL x'' FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, PERCENT_RANK() OVER (), IFNULL(DISTINCT ((0.09551815450794099) NOT BETWEEN (rt0.c0) AND (rt0.c1)), vt0.c0) FROM rt0, vt0 WHERE (((((('', '-1957069319', ''))==((NULL, 1743132435, '327872496'))))AND(((x'')>(0.43143867883163545))))); -- 1ms;
SELECT DISTINCT ((MIN(vt0.c0, rt0.c2))>(TOTAL(rt0.c1))) FROM rt0 NOT INDEXED;SELECT ((((SUM(rt0.c1))AND(((rt0.c2)IS(rt0.c2)))))OR(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END)), (NOT (TYPEOF(DISTINCT rt0.c0))), CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((NULL) BETWEEN (0.08589766302694002) AND (rt0.c1)) WHEN NULL THEN ((rt0.c2)==(x'')) WHEN TYPEOF(vt0.c0) THEN ((rt0.c0) NOT NULL) END, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))<=((~ (vt0.c0)))), CAST(rt0.c2 AS TEXT) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT NULL)) NOTNULL) FROM rt0, vt0 LIMIT 740164735 OFFSET 304753405; -- 0ms;
SELECT 0.7429108767366979 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)>(vt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN '5l4M' THEN NULL WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END)), (((+ (rt0.c2)))LIKE(((rt0.c2)%(vt0.c0)))), (+ (rt0.c1 COLLATE RTRIM)) FROM rt0;SELECT ALL (((UPPER(DISTINCT vt0.c0), ((vt0.c0)AND(rt0.c0)), (rt0.c2 IN ())))==((rt0.c2 COLLATE NOCASE, rt0.c0, ((rt0.c2)<(rt0.c2))))) FROM rt0, vt0 WHERE ((NOT (((0.4736476686951564)!=(NULL))))); -- 0ms;
SELECT ALL 0.3194364470430856 FROM vt0 WHERE (((((((((((NULL)AND(NULL)))OR(0.7381591379894586)))OR(NULL)))AND('0.17198250663136672')))LIKE('-734265868'))); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))*((+ (rt0.c1)))) FROM vt0;SELECT ALL CAST(((rt0.c2)+(rt0.c0)) AS REAL) FROM vt0;SELECT DISTINCT ((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)/(CASE WHEN vt0.c0 THEN rt0.c1 END)) FROM rt0, vt0 LIMIT -1179413821 OFFSET 229283817; -- 0ms;
SELECT -1957069319, ((TRIM(DISTINCT vt0.c0))IS NOT(NULL)), (- (rt0.c1 COLLATE BINARY)) FROM rt0, vt0 WHERE ((((NULL)) BETWEEN (((x'' IN ()))) AND ((0xffffffffb4a6ed33)))); -- 1ms;
SELECT DISTINCT SUM(vt0.c0) FROM vt0 GROUP BY CASE (vt0.c0 IN ())  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND ('qyRNNCS[k')) THEN COALESCE(rt0.c0, 0.7096996386767561, rt0.c1, rt0.c1) ELSE CASE WHEN vt0.c0 THEN 7.19709964E8 WHEN vt0.c0 THEN rt0.c1 WHEN 0.19755811351462715 THEN rt0.c0 ELSE vt0.c0 END END, TRIM(rt0.c1) COLLATE NOCASE COLLATE RTRIM, vt0.c0 HAVING CASE WHEN CASE WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0) ISNULL) END;SELECT MAX(((rt0.c2)+(rt0.c1))) FROM vt0, rt0 WHERE ((((((((NULL)) BETWEEN ((NULL)) AND ((x''))))OR(((x'') NOT NULL))))OR(((NULL) NOT BETWEEN ('\nY') AND (0.933249377906075))))) LIMIT 430082697; -- 0ms;
SELECT ALL JULIANDAY(((vt0.c0) IS TRUE), rt0.c2, rt0.c1 COLLATE NOCASE, ((NULL)IS NOT(rt0.c0)), ((((rt0.c2)OR('F0')))AND(rt0.c2))) FROM rt0;SELECT DISTINCT (('0.1298318827813968' COLLATE BINARY)/(rt0.c2)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END, (rt0.c1 IN ()), CAST(rt0.c0 AS INTEGER)))<((((rt0.c1)<>(vt0.c0)), rt0.c0 COLLATE RTRIM, NULL))) FROM vt0, rt0; -- 0ms;
SELECT (((rt0.c1)) BETWEEN ((((((((((0x2331ead5)OR('')))AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))) AND ((((vt0.c0)>(vt0.c0))))) FROM rt0, vt0 WHERE (CAST(('\rs,uqa' IN ()) AS BLOB)); -- 0ms;
SELECT CAST(rt0.c1 AS REAL) FROM rt0 GROUP BY (NOT (((rt0.c2)<=(rt0.c0)))) HAVING CASE vt0.c0  WHEN NULL THEN ((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)) END ORDER BY (((rt0.c0, 0.45191522300601805, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END, (~ ('5')), ((vt0.c0) NOTNULL))) AND ((UNLIKELY(rt0.c1), vt0.c0 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))) DESC;SELECT DISTINCT DENSE_RANK() OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c2)*(vt0.c0))) OVER (), (rt0.c2 COLLATE BINARY IN ()), vt0.c0 FROM rt0 WHERE (((((NULL)/(0.5040841560670781))) IS FALSE));SELECT ((vt0.c0) NOT NULL) COLLATE RTRIM COLLATE NOCASE FROM rt0 WHERE (NULL);SELECT ALL (- (rt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((CHANGES())+(((((NULL)OR('l\I/\by9J')))AND(NULL))))) GROUP BY ((((rt0.c0)AND(CAST(rt0.c0 AS BLOB))))AND((rt0.c1 IN ()))), ((((rt0.c1) BETWEEN (NULL) AND (vt0.c0))) NOTNULL), ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))/((rt0.c0 IN ()))) HAVING ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END));SELECT DISTINCT CASE ((rt0.c1) IS TRUE)  WHEN TRIM(rt0.c1) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (rt0.c2 IN ()) END FROM vt0;SELECT DISTINCT AVG((NOT (rt0.c2))) FROM vt0, rt0; -- 0ms;
SELECT LEAD(NULL, ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END) IS FALSE), ((((((((((vt0.c0)IS NOT(rt0.c1)))OR(NULL)))AND(((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))))OR(((rt0.c1) ISNULL))))AND(0.9584203895891086))) OVER () FROM vt0, rt0 WHERE (((('y\r+,^*', 0.515058406837365, '0.8024532637744283', 0Xfffffffffb197259, x'')) NOT BETWEEN (((((NULL)) NOT BETWEEN ((x'')) AND ((NULL))), (('1863453409')>=(0.6218879346297224)), CAST('' AS INTEGER), x'', ((x'')||('-114788642')))) AND (((((x''))<((0.531896952292396))), (('!sd]_n[!') BETWEEN (x'') AND ('5ﲥ1tb')), CAST(NULL AS NUMERIC), (+ (0Xffffffff97d9015f)), (('qm') BETWEEN (0.9136696270985666) AND (x'a9ea')))))); -- 3ms;
SELECT '71309631' FROM rt0, vt0 ORDER BY 0X6ec25ac3 DESC LIMIT 719709964 OFFSET -1129883058;SELECT ALL LIKELIHOOD(((vt0.c0)&(rt0.c0)), 0.45897288223684896) FROM rt0, vt0 ORDER BY (0xffffffffeb18e9b1 IN (((((rt0.c0)OR('1148111050')))AND(rt0.c2)), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)))); -- 0ms;
SELECT (- (((rt0.c2) NOT BETWEEN (x'801c') AND (rt0.c2)))), LAST_VALUE(((((vt0.c0)AND(rt0.c2)))>>(((((vt0.c0)OR(rt0.c1)))OR(rt0.c1))))) OVER (), ((((rt0.c2)/(rt0.c0))) IS FALSE) FROM vt0, rt0 WHERE ((((((NULL))<=((0.22970428272715515)))) BETWEEN ('1616858030') AND (((-1610842451) NOTNULL)))); -- 0ms;
SELECT ((x'')=(vt0.c0)) FROM rt0 LIMIT -2079016098;SELECT DISTINCT COUNT((rt0.c2 IN ())) OVER () FROM vt0, rt0 WHERE ((- (((0.17743159651055285)<=(NULL))))) ORDER BY ((((RTRIM(rt0.c2))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(0.2234139221184953)), '719709964'  NULLS FIRST; -- 1ms;
SELECT DISTINCT (+ ((rt0.c0 IN ()))), TRIM(DISTINCT (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), GROUP_CONCAT(rt0.c0)), ((((rt0.c0) NOTNULL))%(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) FROM rt0 WHERE ((- (CASE 'e'  WHEN 'B㝫3u!n' THEN x'' WHEN x'' THEN 0.9557188636222571 WHEN x'' THEN 0Xffffffffa4db4467 END)));SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)-(NULL)) FROM vt0 WHERE ((((((x'')) BETWEEN ((x'11c5c75d')) AND (('m/*n'))))/(((('')) BETWEEN ((NULL)) AND ((0.17568593654340003))))));SELECT DISTINCT CASE WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)) WHEN rt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0)>(rt0.c1)) THEN vt0.c0 WHEN (('') BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c1)>>(rt0.c1)) WHEN (vt0.c0 IN ()) THEN NULL END FROM rt0 WHERE (((((((((((((CAST('' AS TEXT))OR(CAST(x'' AS TEXT))))OR((x'' IN ('')))))AND(IFNULL('h V	/ofm', 0x2c10313f))))OR(NULL)))OR((((x'', NULL, NULL, '0.3107255850894346', NULL))>((1.570417663E9, x'', 0.6608361179263464, '577092092', 0.3681746680974597))))))AND((NULL IN (NULL, '_kRp'))))) GROUP BY ((((rt0.c0)=(0.8275293687909855)))!=('1309729119'));SELECT DISTINCT (((vt0.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) AND ((NULLIF(rt0.c0, rt0.c2)))) FROM rt0;SELECT DISTINCT (- (((rt0.c2) ISNULL))), ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END) NOTNULL), (((((((((NOT (rt0.c1)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))))OR((((rt0.c2, rt0.c1, rt0.c2, vt0.c0, x'')) BETWEEN ((rt0.c2, vt0.c0, rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c0, rt0.c1, rt0.c1, rt0.c1))))))OR(vt0.c0 COLLATE NOCASE)))OR(((('lTdEsQG-狼')) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) FROM vt0, rt0 LIMIT 360465649 OFFSET -765380355; -- 0ms;
SELECT (((rt0.c2 IN ())) BETWEEN ('-1062956902') AND (((rt0.c0)OR(rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT NULL FROM vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)|(rt0.c1))) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c2))) AND (CAST(rt0.c2 AS BLOB))), (((NOT (rt0.c1))) NOTNULL), CASE WHEN ((((vt0.c0)OR(rt0.c2)))OR(vt0.c0)) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)) ELSE vt0.c0 END FROM rt0 WHERE ((- ((('iW\n*')<=(0.687939664462987))))) LIMIT 2066402305;SELECT ALL (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL) FROM rt0 LIMIT 2033176134;SELECT ((((rt0.c0)OR(rt0.c2)))IS(CAST(vt0.c0 AS BLOB))) FROM vt0, rt0 LIMIT -1417744221; -- 0ms;
SELECT ((MAX(vt0.c0)) NOTNULL) FROM vt0 NOT INDEXED, rt0 WHERE (((((NULL) BETWEEN (NULL) AND (NULL))) NOTNULL)) GROUP BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN ((x'')<=(rt0.c2)) ELSE rt0.c0 COLLATE BINARY END; -- 1ms;
SELECT ALL GROUP_CONCAT(LTRIM(rt0.c2)) OVER ( ORDER BY CAST((- (rt0.c2)) AS TEXT)) FROM vt0;SELECT DISTINCT ((rt0.c1)IS NOT((+ (rt0.c2)))), (MAX(rt0.c1) IN (NULL)), (+ (((0.2001358523016039)GLOB(rt0.c0)))), rt0.c1, CASE WHEN SUM(vt0.c0) THEN rt0.c2 WHEN ((rt0.c2) NOT NULL) THEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (rt0.c1 IN (rt0.c0)) ELSE rt0.c1 COLLATE RTRIM END FROM rt0, vt0; -- 0ms;
SELECT ((((((vt0.c0) NOT NULL))AND((~ (NULL)))))OR((~ (x'')))) FROM vt0, rt0; -- 0ms;
SELECT ALL (- (rt0.c0)), ((rt0.c1)==(rt0.c0)) COLLATE BINARY, ((((rt0.c0)<(rt0.c0)))AND(json_type(rt0.c0))) FROM vt0, rt0 WHERE (STRFTIME((((x''))>=((NULL))), '-832886939', '\n鎧' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) OVER ( ORDER BY ((COALESCE(DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0))%((('2041285854')IS NOT(vt0.c0)))) ASC) FROM vt0 WHERE (json_array(0.37802563962490854, 4.19608518E8) COLLATE RTRIM) ORDER BY ((NULL) BETWEEN ((('.R\n')>(rt0.c1))) AND (((rt0.c2)*(rt0.c2)))) DESC;SELECT DISTINCT CAST(rt0.c2 AS NUMERIC) FROM vt0;SELECT DISTINCT (~ (MAX(vt0.c0))) FROM vt0, rt0 WHERE ((- (((-569221655) NOT NULL)))) GROUP BY ((((((rt0.c2)AND(rt0.c1)))AND('0t')))!=(((rt0.c1) NOTNULL))), rt0.c1, ((((CAST(rt0.c0 AS INTEGER))AND((vt0.c0 IN ()))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) HAVING (COUNT(rt0.c2) IN ()); -- 0ms;
SELECT ALL ((((((((((rt0.c2) IS FALSE))AND(vt0.c0)))AND(((rt0.c1) IS TRUE))))AND(LIKELIHOOD(rt0.c2, 0.9031670764869106))))OR((- ('-1957069319')))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE (STRFTIME(('&d' IN ()), (((0.5594214949530298, x'', x''))==(('jNMGew', NULL, -32437711))), (- (NULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN 0xffffffffba72bab6 THEN ((rt0.c1)<=(vt0.c0)) ELSE ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) END FROM rt0, vt0; -- 0ms;
SELECT ALL COUNT(((rt0.c2) NOTNULL)) OVER ( ORDER BY rt0.c0 COLLATE BINARY  NULLS LAST, TYPEOF((rt0.c1 IN ()))) FROM vt0;SELECT (NOT (x'')), ABS('-34524855'), (((((('1503142108')AND(rt0.c2)))OR(-1.003208981E9))) BETWEEN ((- (rt0.c1))) AND (((rt0.c2)%(vt0.c0)))), (+ ((((vt0.c0))<=((x''))))), '877728143' FROM vt0, rt0 NOT INDEXED WHERE (UPPER(TYPEOF(DISTINCT -3.18162281E8))); -- 0ms;
SELECT DISTINCT highlight(((rt0.c1) NOT NULL), ((vt0.c0) ISNULL), x'', ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) FROM rt0, vt0 WHERE (NULL) EXCEPT SELECT DISTINCT ((-7.99519851E8) NOT BETWEEN ('opT3\z?') AND ('~O')) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((NULLIF(rt0.c0, rt0.c2))<(((rt0.c1)<>(rt0.c0)))) FROM vt0 WHERE ((('0.30695504538185125' COLLATE RTRIM) NOT BETWEEN (((NULL) BETWEEN (x'4e18') AND (x'cff9'))) AND (((0.7251160221358093) BETWEEN (NULL) AND ('e~ys?/HO'))))) LIMIT 44930467;SELECT DISTINCT rt0.c2, (((((rt0.c2)+(rt0.c2)), ((((-1760066477)OR(vt0.c0)))OR(vt0.c0)), rt0.c2 COLLATE BINARY, ((rt0.c1) NOTNULL), ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))=((AVG(rt0.c0), (vt0.c0 IN ()), rt0.c1 COLLATE BINARY, SUM('~,6/pYuS'), (+ (vt0.c0))))), LIKELY(DISTINCT (rt0.c1 IN ())), ((((((((rt0.c0 COLLATE NOCASE)OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))OR((((0.6186580546868)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY FROM rt0 WHERE (CASE ((NULL) NOT BETWEEN (NULL) AND (-318162281))  WHEN CASE WHEN -1446599472 THEN '0.1298318827813968' ELSE -1627079497 END THEN (('-318162281')/('0.43792792919895396')) WHEN (('-1108062288') NOT BETWEEN (NULL) AND ('1306738168')) THEN ((('1660934071', 0X2f8b5a20, NULL)) BETWEEN ((0xffffffffc1ddb99f, NULL, '0.6875312894333553')) AND (('', x'', '780276229'))) WHEN x'' COLLATE BINARY THEN CAST(NULL AS NUMERIC) ELSE ((0.5775605510190793)-(x'')) END);SELECT vt0.c0 FROM rt0 WHERE (((0.9988939754794276)>(0.7915353243888468)) COLLATE BINARY) LIMIT -1082785080 OFFSET 586848984;SELECT ALL rt0.c2 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((NOT (vt0.c0))))>((((((rt0.c0)OR(rt0.c0)))AND(vt0.c0))))) FROM rt0, vt0 WHERE (CASE WHEN ((((-2055868488)AND(0.47196321783277717)))AND(0.7984915518900808)) THEN ((0.5168600793738497) BETWEEN (0.9024233509752082) AND (x'')) ELSE x'' COLLATE BINARY END); -- 0ms;
SELECT (+ (rt0.c1 COLLATE NOCASE)) FROM rt0, vt0 GROUP BY (- ((rt0.c2 IN ()))), CASE WHEN (~ (vt0.c0)) THEN ((rt0.c0)!=(rt0.c1)) ELSE ((vt0.c0)IS NOT(rt0.c0)) END, (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, (- (rt0.c1)))) AND (((('-1003208981')LIKE(rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))); -- 1ms;
SELECT ((0.8178422264332477) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0 WHERE (UNICODE(((x'')+(x'550c'))));SELECT DISTINCT GROUP_CONCAT((((rt0.c2, rt0.c1, '1738840670', rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c2)) AND ((vt0.c0, rt0.c0, rt0.c1, NULL, rt0.c1)))), (- (rt0.c0)) COLLATE BINARY, (NOT (rt0.c1 COLLATE BINARY)) FROM vt0, rt0 WHERE ('+E'); -- 0ms;
SELECT DISTINCT ((((rt0.c1)-(vt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (NULL))) AND (((rt0.c1)LIKE(rt0.c2)))), rtreenode(CAST(rt0.c1 AS BLOB), CASE rt0.c1  WHEN vt0.c0 THEN 0.17719136537587454 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END), vt0.c0 FROM vt0, rt0; -- 0ms;
SELECT CASE (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((NULL)))  WHEN (NOT (0xffffffffa1242c6f)) THEN ((vt0.c0) IS TRUE) WHEN (- (rt0.c2)) THEN '-2107662187' WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt0.c0)>=(rt0.c2)) ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END END FROM vt0;SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL), ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))>>(0.9149407867506585)), ((rt0.c0 COLLATE BINARY)OR((rt0.c1 IN (rt0.c0)))) FROM rt0;SELECT (((rt0.c1)<<(rt0.c0)) IN ()), TRIM(((rt0.c1) NOTNULL), (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))), CASE WHEN rt0.c1 THEN (vt0.c0 IN ()) ELSE (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END FROM vt0 NOT INDEXED, rt0 ORDER BY rt0.c0 DESC; -- 1ms;
SELECT ALL (IFNULL(DISTINCT rt0.c1, vt0.c0) IN (((vt0.c0) NOT NULL))) FROM vt0, rt0; -- 0ms;
SELECT ALL AVG(((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c1))) OVER ( PARTITION BY (+ (CAST(rt0.c2 AS REAL))), ((((((((((0xffffffffbcabee5e)OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2))) BETWEEN (((rt0.c0)<>(rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((vt0.c0)) NOT BETWEEN (((NOT (rt0.c1)))) AND (((~ (rt0.c0)))))) OVER ( ORDER BY TYPEOF(HEX(DISTINCT rt0.c2)) RANGE  CURRENT ROW), GROUP_CONCAT(rt0.c0), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM FROM vt0, rt0; -- 1ms;
SELECT CAST(CAST(vt0.c0 AS TEXT) AS TEXT) FROM rt0, vt0 WHERE (CAST(((0.7131298148678743)&(NULL)) AS BLOB)) ORDER BY CASE WHEN rt0.c2 THEN CAST(NULL AS REAL) WHEN LIKELY(DISTINCT rt0.c1) THEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c1) IS FALSE) WHEN (((rt0.c2))>=((vt0.c0))) THEN LIKELY(rt0.c2) WHEN (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)) ELSE COALESCE(DISTINCT vt0.c0, rt0.c2) END ASC, x'2340' ASC  NULLS LAST; -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS TEXT))/(1592704338)), CASE WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END WHEN SUM(vt0.c0) THEN (vt0.c0 IN (rt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('755339743')) THEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c1)) ELSE ((rt0.c0) ISNULL) END, (((rt0.c1 IN ()))==(CASE rt0.c1  WHEN vt0.c0 THEN x'2042be2d' END)) FROM rt0 WHERE ((NOT (NULL COLLATE RTRIM))) ORDER BY (~ (0.4120343034532683)) ASC;SELECT DISTINCT LAST_VALUE((((vt0.c0)) BETWEEN ((((rt0.c0)>>(rt0.c0)))) AND ((UNICODE(rt0.c1))))) OVER ( PARTITION BY (((+ (vt0.c0)))%(((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))), 0.8670385160119989) FROM vt0, rt0 WHERE ((((('d&')AND(NULL)))<>(CAST(x'' AS TEXT)))); -- 0ms;
SELECT CASE CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END  WHEN (NOT (rt0.c2)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END FROM rt0 WHERE (CAST(CASE NULL  WHEN NULL THEN '2133235063' END AS NUMERIC)) GROUP BY ((((CASE -1.841135503E9  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR(((rt0.c2)<>(rt0.c1)))) HAVING TYPEOF(vt0.c0);SELECT DISTINCT CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END  WHEN ((vt0.c0)&(rt0.c1)) THEN CAST(rt0.c0 AS INTEGER) ELSE SUM(rt0.c0) END, IFNULL(DISTINCT ((rt0.c0)>('0.10436658231547669')), NULL), (((+ (rt0.c2))) ISNULL) FROM rt0 WHERE (((('Lf0Y''D7') NOT NULL) IN ()));SELECT ALL MAX(vt0.c0, ((rt0.c1) NOTNULL)) FROM rt0;SELECT rt0.c2 FROM vt0 WHERE (x'' COLLATE BINARY);SELECT DISTINCT ((NOT (rt0.c2)) IN ()) FROM vt0, rt0 WHERE (((((0.540394363377585)|(0x761772fc))) NOT BETWEEN (((x'')&(2.80998704E8))) AND (((((((((NULL)OR(0.3699526119745832)))OR('772016697')))AND(48824630)))AND('-2112149222'))))); -- 0ms;
SELECT DISTINCT ABS(((NULL) BETWEEN (rt0.c0) AND (rt0.c1))), ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(NULL)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (MIN(rt0.c2))), ((((((((rt0.c2)OR(vt0.c0 COLLATE BINARY)))AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))))OR((+ (rt0.c0)))))OR((NOT (rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT (((rt0.c0) IS FALSE) IN ()), (((('-1236540915')-(rt0.c2)))>>(((rt0.c2)<=(rt0.c2)))), (CAST(rt0.c2 AS INTEGER) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) FROM vt0 WHERE (((0.43831955828684444 COLLATE BINARY) IS FALSE));SELECT vt0.c0 FROM rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY QUOTE(CAST(rt0.c1 AS TEXT)) DESC  NULLS FIRST, (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1))))>((CAST(x'd050' AS REAL)))) DESC  NULLS FIRST;SELECT rt0.c0, rt0.c0 COLLATE BINARY, COUNT(((rt0.c2) NOT NULL)) OVER () FROM vt0 ORDER BY ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)))/(((vt0.c0)!=(rt0.c0))))  NULLS FIRST;SELECT DISTINCT LIKELIHOOD(rt0.c1 COLLATE RTRIM, 0.40868828829415904) FROM rt0, vt0; -- 0ms;
SELECT '-1696361235' FROM vt0, rt0 WHERE (LIKE(TRIM(x'e1228f1e69fe', 0x2b218677), ((((((((x'')OR(0.4706184812519483)))AND(0x1902b7c6)))OR(2.98886845E8)))AND(0X40e5ea4c)), '0')); -- 0ms;
SELECT vt0.c0 FROM rt0 WHERE (((NULLIF('-1062077055', '1088809548'))<((((-1003208981)) NOT BETWEEN (('ᴶ6+ⵥ[0B')) AND ((681652076))))));