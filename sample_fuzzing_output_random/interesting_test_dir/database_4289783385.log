-- Time: 2024/06/07 00:40:39
-- Database: database85
-- Database version: 3.40.0
-- seed value: 4289783385
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE t0 (c0 BLOB , c1 REAL , c2 REAL CHECK ( ((((((c0)%(c1)))AND(((c0) NOT BETWEEN (c2) AND (c2)))))OR((((c0)) BETWEEN (('1524288573')) AND ((c1)))))) ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
ALTER TABLE t0 ADD COLUMN c39 BLOB; -- 0ms;
UPDATE OR IGNORE vt1 SET c1='', c2=0.7375993217748403, c2=1.524288573E9; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1524288573,10');\n; -- 0ms;
PRAGMA temp.journal_mode = PERSIST; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
UPDATE vt1 SET (c2, c2)=(1.524288573E9, 0Xffffffff89b634e4) WHERE ((CAST(vt1.c2 AS BLOB))=((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c0))))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
UPDATE vt1 SET (c1, c1)=('bpu7', 0.3849189501021606) WHERE CASE WHEN ((0.8168632015507702)>(vt1.c0)) THEN CASE WHEN x'580b' THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c1 END END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
INSERT OR IGNORE INTO t0(c2, c39, c1) VALUES ('\-g', '-1984547612', NULL) ON CONFLICT(c0, c2, c39) DO NOTHING; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES ('yguSrm)', 1.7976931348623157E308, 0.06954431341971956); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 820188754);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
CREATE UNIQUE INDEX i50 ON t1(((((x'b3c6')AND((c1 IN ()))))OR(((c2) ISNULL))) COLLATE NOCASE,((c0) NOTNULL) COLLATE NOCASE,(((c1)IS NOT(c0)) IN ()) COLLATE RTRIM,((((((c2) NOTNULL))OR((c1 IN ()))))AND(((NULL) IS FALSE))) ASC) WHERE ((CASE WHEN c1 THEN c2 WHEN c0 THEN -1005592188 WHEN c2 THEN c1 END) NOT BETWEEN ((((c0))>((c1)))) AND (((((NULL)AND(c0)))AND(c1)))); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE t0 SET c2=0.34530051766762726 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), t0.c0 COLLATE NOCASE, CAST(t0.c39 AS INTEGER)))=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)), ((((t0.c39)OR(t0.c2)))OR(t0.c1)), t0.c2))); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c1)=('!H88ὰTI', x'') WHERE (((MIN(vt1.c2, vt1.c1)))<(((((vt1.c1))<((vt1.c0)))))); -- 0ms;
UPDATE OR REPLACE vt1 SET c0='-1984547612' WHERE (NOT (UPPER(DISTINCT vt1.c2))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE CAST(CAST(t0.c0 AS BLOB) AS TEXT); -- 1ms;
UPDATE vt1 SET c2='0.3849189501021606', c0=NULL, c0='1131230143' WHERE ((+ (vt1.c2)) IN ()); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA threads; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR IGNORE INTO t0(c39, c2, c0, c1) VALUES (NULL, '', NULL, x'f861'); -- 0ms;
CREATE INDEX IF NOT EXISTS i99 ON t0(CASE NULLIF(c2, c39)  WHEN (((c39, c39, c39)) BETWEEN ((c1, c1, c1)) AND ((c2, 0.34530051766762726, c0))) THEN (c2 IN ()) WHEN c0 THEN ((c0)>>(c39)) WHEN c1 THEN (NOT (c39)) ELSE ((NULL) NOTNULL) END,((((((((((c39)AND(c0)))OR(c0)))AND(c0)))OR(c2)))IS(load_extension(c1))) DESC,CASE WHEN (+ (c2)) THEN CAST(c2 AS INTEGER) WHEN CAST(c39 AS INTEGER) THEN c0 COLLATE NOCASE WHEN c1 COLLATE BINARY THEN ((c2) NOT NULL) WHEN c39 THEN ((((c1)OR(c39)))OR(c1)) WHEN (('-962824407') BETWEEN (c1) AND ('30941040')) THEN c0 COLLATE NOCASE ELSE UNLIKELY(DISTINCT c1) END COLLATE RTRIM,((((c2)>>(c2))) NOT NULL) COLLATE RTRIM); -- 0ms;
CREATE INDEX i25 ON t0(((CAST(c0 AS INTEGER))<>((((c0)) BETWEEN ((c0)) AND ((c1))))) COLLATE NOCASE,((((c2)<(c2)))*('Fb' COLLATE NOCASE)) ASC,highlight((c1 IN ()), (((c39, 0.7375993217748403, c39)) BETWEEN ((c0, c39, c39)) AND ((c39, c1, c0))), ((((c0)AND(c39)))OR(c2)), LOWER(DISTINCT c0)) COLLATE NOCASE,CASE c0  WHEN c2 THEN c0 END COLLATE BINARY DESC) WHERE c0; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i97 ON t0(CAST(c2 AS INTEGER) ASC,((((((((IFNULL(DISTINCT c39, c39))AND(((((c1)OR(c39)))AND(c0)))))AND((((c1, c39, c0))==((c1, c39, c39))))))AND(((c39) BETWEEN (c1) AND (c2)))))AND((((x'')) BETWEEN ((c2)) AND ((c1))))) COLLATE RTRIM,((((CAST(c0 AS NUMERIC))AND(((c0)*(c0)))))AND(CASE c2  WHEN x'' THEN '창W' WHEN c1 THEN c2 WHEN c2 THEN c1 WHEN c2 THEN c0 WHEN c1 THEN c39 END)) COLLATE BINARY,NULL COLLATE NOCASE) WHERE ''; -- 1ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=('-1066158745'); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 484205612);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '17574'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '26736'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
PRAGMA cache_size = -5092108799333109295; -- 0ms;
COMMIT; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c39 TO c40; -- 10ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  t1; -- 0ms;
ALTER TABLE t1 ADD COLUMN c76 BLOB; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c76 TO c33; -- 2ms;
END; -- 0ms;
ALTER TABLE t1 ADD COLUMN c88 REAL; -- 5ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (0.9432442374085196, 1.7976931348623157E308, x'659f'), (x'', -633490419, x''), (0.3965098618757815, NULL, 0.7375993217748403); -- 0ms;
UPDATE OR ABORT t1 SET c1='0.7375993217748403' WHERE t1.c33; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE t1 SET c0='|)R''' WHERE t1.c33; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, prefix = 73, content='', tokenize = "unicode61 remove_diacritics 0 tokenchars '_u++'"); -- 8ms;
UPDATE OR FAIL t1 SET (c0)=(NULL) WHERE ((t1.c40)<(t1.c1)); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR REPLACE vt1 SET c1=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i10 ON t1((~ (CASE WHEN c88 THEN c0 ELSE c40 END)) COLLATE BINARY,((- (c2)) IN (((c88) BETWEEN (0.6971364637550546) AND (c2)))) COLLATE RTRIM,((((((((c2)OR(0.21105103214004073)))OR(c33)))OR(c33)))AND(c88)) COLLATE BINARY,(NOT ((c1 IN ()))) COLLATE BINARY ASC,c88 COLLATE BINARY,((((c1) IS FALSE)) NOT BETWEEN (0.3965098618757815) AND (COALESCE(DISTINCT c88, c1, c33, c0))) COLLATE RTRIM DESC) WHERE ((TIME(c40, c0, c33)) NOT NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1725209754);\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1(c2, c0) VALUES (NULL, 0.11746902535118064); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1548772776); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE t1 SET (c33, c0, c40)=('', x'', x'') WHERE CASE ((t1.c1)<=(t1.c2))  WHEN ((0.06954431341971956)GLOB(t1.c88)) THEN PRINTF(t1.c2) WHEN CAST(t1.c2 AS NUMERIC) THEN t1.c33 WHEN ((t1.c33) IS FALSE) THEN ((t1.c33) ISNULL) WHEN CASE t1.c33  WHEN t1.c33 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c40 THEN t1.c40 WHEN t1.c1 THEN t1.c88 END THEN ((t1.c40)IS(t1.c0)) WHEN CASE t1.c1  WHEN t1.c88 THEN t1.c1 END THEN LIKELY(DISTINCT t1.c2) ELSE CAST(t1.c0 AS NUMERIC) END; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-476498540,4');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1524288573);\n; -- 0ms;
REINDEX i10; -- 0ms;
INSERT OR ABORT INTO vt1(c2, c1) VALUES (x'd603', x''); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA application_id; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 5ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.3992737014707849), (x''), (0.9360570737253338); -- 1ms;
PRAGMA optimize; -- 0ms;
UPDATE OR IGNORE t1 SET c88='H+?naF'; -- 5ms;
UPDATE OR REPLACE t1 SET (c33)=(0.7815578722897899); -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES (x''), (NULL), (0Xfffffffff283e256); -- 0ms;
PRAGMA journal_mode; -- 0ms;
PRAGMA temp.cache_spill = false; -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA main.busy_timeout = 5569979714324214462; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, t1, vt1 WHERE ((((NOT (0.7375993217748403)))*(((0xffffffffa9dcacf4)+(x''))))); -- 0ms;
SELECT DISTINCT (((NULL)) NOT BETWEEN ((((t1.c1) IS TRUE))) AND (((((t1.c40))<=((t1.c0)))))) FROM t1, vt1; -- 0ms;
SELECT DISTINCT ((((CASE WHEN t1.c0 THEN t1.c0 END)OR(IFNULL(t1.c40, t1.c88))))AND(((vt1.c1)OR(t1.c2)))) FROM vt1, t1; -- 0ms;
SELECT DISTINCT SUM(((t1.c1) BETWEEN (t1.c33) AND (vt1.c1))) FROM t1 WHERE (((('') NOT BETWEEN (NULL) AND (NULL)) IN ())) GROUP BY ((0.0118457250009808) NOT BETWEEN (((((t1.c1)OR(t1.c33)))OR(t1.c1))) AND (CAST(t1.c0 AS INTEGER))) HAVING COALESCE(DISTINCT CAST(x'' AS TEXT), UPPER(DISTINCT t1.c33));SELECT ALL COALESCE(DISTINCT (t1.c0 IN (t1.c40, t1.c1)), (NOT (vt0.c0))) FROM vt1 WHERE (-205788764) LIMIT 1636924400;SELECT DISTINCT ((((((NULL) IS FALSE))AND(t1.c2)))OR((vt0.c0 IN (vt1.c1)))), 0x5f7a0617, t1.c88 FROM t1 WHERE ((NOT ((NULL IN ()))));SELECT ALL LIKELIHOOD(DISTINCT t1.c1 COLLATE RTRIM, 0.14410214836167445) FROM t1; -- 0ms;
SELECT ALL RANK() OVER () FROM t1, vt1; -- 0ms;
SELECT SQLITE_SOURCE_ID() FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((t1.c2 IN ())) IS FALSE) FROM t1, vt0 WHERE ((((NOT (x'')))LIKE((+ (x''))))); -- 0ms;
SELECT DISTINCT t1.c1 FROM vt0;SELECT ALL ((((vt1.c1 COLLATE BINARY)OR(0xffffffff9d56d06c COLLATE BINARY)))OR(((((t1.c0)AND(t1.c1)))AND(t1.c0)))) FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT ((((t1.c88) NOT BETWEEN (t1.c0) AND (0x165ad996)))>=((((t1.c88)) NOT BETWEEN ((vt0.c0)) AND (('1601832471'))))), ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t1.c88) AND (vt1.c2))) AND (((t1.c33)<=(vt1.c2)))), LTRIM(CAST(t1.c88 AS INTEGER), ((t1.c2) BETWEEN (NULL) AND (t1.c0))) FROM vt1, vt0 WHERE ((((((x''))<=((0.06954431341971956)))) NOTNULL)) ORDER BY vt1.c1 ASC  NULLS LAST;SELECT DISTINCT ((NULLIF(DISTINCT vt1.c1, t1.c88))<(((t1.c40)=(t1.c88)))) FROM vt0;SELECT DISTINCT (IFNULL(t1.c1, t1.c88) IN ()), t1.c40, ROW_NUMBER() OVER (), ((((t1.c88) BETWEEN (vt0.c0) AND (t1.c0)))>>(((-9.62824407E8) IS TRUE))), (((+ (t1.c2))) NOTNULL) FROM vt1, vt0;SELECT 0.08837650824639909 FROM vt1, vt0 WHERE (NULLIF(DISTINCT (NOT (x'0412feba')), CAST(x'' AS TEXT))); -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) NOT BETWEEN (vt1.c1) AND (t1.c2)) COLLATE RTRIM) OVER () FROM vt1, t1, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((((((((vt1.c0) NOT NULL))AND(((t1.c33) NOTNULL))))OR(((vt1.c1) IS TRUE))))AND((((t1.c33))!=((vt1.c0))))))AND(((t1.c0)-(t1.c2)))) FROM vt0, vt1, t1 NOT INDEXED; -- 0ms;
SELECT ALL json_patch(CAST(vt1.c1 AS INTEGER), LIKELY(t1.c33)) FROM vt0;SELECT DISTINCT t1.c40 FROM vt0;SELECT DISTINCT t1.c33, CUME_DIST() OVER (), (~ (NULL COLLATE RTRIM)) FROM vt1, vt0, t1 GROUP BY CASE 0.09047554857151141 COLLATE RTRIM  WHEN (NOT (t1.c40)) THEN ((t1.c0)||(t1.c40)) ELSE 'L勪OpT0' END; -- 0ms;
SELECT DISTINCT (((~ (vt1.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((0.40872330564296244) NOT BETWEEN (t1.c88) AND (t1.c0)))) FROM vt0, vt1 NOT INDEXED;SELECT DISTINCT (GROUP_CONCAT(vt1.c2) IN ()) FROM vt0, t1, vt1 GROUP BY (((0X30e31652)) BETWEEN ((t1.c88)) AND ((((((((((vt1.c0)AND(0x2e225add)))OR(0xffffffff936979ee)))OR(vt1.c2)))OR('-628998343'))))); -- 0ms;
SELECT ALL (((((t1.c40))<=((vt1.c2))))<<(((((vt1.c0)AND(t1.c1)))OR(vt0.c0)))) FROM vt1 GROUP BY LTRIM((t1.c88 IN ()), (vt1.c0 IN ()));SELECT COALESCE(vt1.c1, CAST(t1.c88 AS TEXT)) FROM t1, vt1; -- 0ms;
SELECT DISTINCT ((CAST(vt1.c2 AS TEXT))GLOB((('')GLOB(t1.c2)))) FROM vt1;SELECT ALL t1.c33 FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT t1.c2 FROM vt1, vt0;SELECT ALL CASE (- (x'c3ad'))  WHEN ((t1.c2) BETWEEN (0X74ecff17) AND (t1.c33)) THEN IFNULL(DISTINCT vt1.c2, 0.5067255320640157) ELSE (((t1.c2))>((t1.c1))) END FROM t1 WHERE ((((((0xffffffff8116fd57)==('0.21105103214004073'))))!=((']Vi緄{?t^' COLLATE NOCASE)))) LIMIT -1239847664;SELECT DISTINCT CAST(vt1.c2 AS NUMERIC) COLLATE RTRIM, ((LOWER(t1.c33)) IS FALSE), SUM(((((vt1.c1)AND(NULL)))AND(t1.c33))) OVER ( ORDER BY ((((vt1.c0)/(vt0.c0)))!=(((t1.c0)OR(vt1.c1)))) ASC  NULLS LAST) FROM vt0 LIMIT 1961688855 OFFSET -229536610;SELECT ((((0Xffffffffcd0e5e6e) BETWEEN (t1.c33) AND (vt1.c0)))%(((t1.c1) NOT NULL))), (((t1.c40, t1.c33, vt1.c0)) NOT BETWEEN ((t1.c1, ABS(DISTINCT t1.c0), (- (vt0.c0)))) AND ((((vt1.c1) NOTNULL), (+ (vt0.c0)), (((t1.c40)) BETWEEN ((t1.c1)) AND ((vt1.c2)))))), (((((((vt1.c2)AND(vt1.c2)))AND(t1.c88))))>(((+ (t1.c2))))) FROM vt1, vt0, t1 LIMIT -229536610 OFFSET 1867877065; -- 3ms;
SELECT DISTINCT AVG(0.3992737014707849), COUNT(*), (((vt0.c0)) BETWEEN (((~ (t1.c1)))) AND ((vt1.c0))), TOTAL(((t1.c2)+(vt1.c2))) OVER (), t1.c1 FROM vt1 WHERE (SQLITE_VERSION());SELECT ALL NTILE(CAST(((t1.c2)|(t1.c1)) AS BLOB)) OVER () FROM vt0, t1 WHERE ((~ (0.9100806845205089))); -- 0ms;
SELECT ALL CASE (((t1.c88)) BETWEEN ((t1.c0)) AND ((vt1.c1)))  WHEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN ((t1.c0)IS(vt0.c0)) END FROM t1, vt0 NOT INDEXED WHERE (((CAST(0xffffffffcbfdeb15 AS INTEGER)) BETWEEN ((+ (NULL))) AND (((((((((((((x'2386')OR('')))OR(0.7621081852966575)))OR('0.08837650824639909')))AND(0.668225732774231)))OR(NULL)))OR(4.84205612E8)))));SELECT ALL (NOT (CASE vt0.c0  WHEN vt1.c2 THEN vt1.c2 END)) FROM vt1, vt0 WHERE ((- (0.4349982670692606)) COLLATE BINARY) GROUP BY (NULL IN ()); -- 0ms;
SELECT (((vt1.c1))<=((x''))), t1.c2, CAST(vt0.c0 COLLATE RTRIM AS TEXT) FROM vt1, t1;SELECT ALL ((((t1.c40 COLLATE NOCASE)AND(vt1.c2 COLLATE RTRIM)))AND(((((t1.c0)OR(vt1.c0)))OR(t1.c1)))), ((x'') NOTNULL), (t1.c40 IN ()), ((NOT (vt1.c2)) IN ()), (((vt1.c2)) NOT BETWEEN ((((1936787099) NOT NULL))) AND ((CASE vt1.c1  WHEN t1.c2 THEN vt1.c2 WHEN t1.c0 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 ELSE vt1.c1 END))) FROM vt0, t1;SELECT DISTINCT CASE WHEN CAST(t1.c1 AS BLOB) THEN ((vt1.c1)<(vt1.c1)) END FROM t1 ORDER BY CAST(IFNULL(DISTINCT t1.c88, vt1.c0) AS NUMERIC)  NULLS LAST;SELECT SUM(((vt1.c2) NOT NULL)), (NOT (((vt1.c2)LIKE('')))), json_object(CAST(t1.c2 AS TEXT), (vt1.c2 IN (t1.c1, t1.c2)), CASE t1.c40  WHEN t1.c40 THEN vt1.c1 WHEN t1.c33 THEN t1.c88 WHEN t1.c2 THEN t1.c40 ELSE t1.c1 END, t1.c0 COLLATE BINARY), AVG(CAST(vt1.c2 AS INTEGER)), ((vt1.c1) BETWEEN (x'0382' COLLATE BINARY) AND (((vt1.c0)OR(vt1.c0)))) FROM vt1, vt0;SELECT DISTINCT ((NULL)<(CAST(t1.c0 AS REAL))), vt0.c0 COLLATE NOCASE, ((0.40872330564296244) NOTNULL) COLLATE RTRIM FROM vt1, vt0 WHERE ((((LTRIM('0.668225732774231', 'T7Fc*j')))>((((NULL) BETWEEN ('') AND (0.05443276899041394))))));SELECT ALL (vt0.c0 COLLATE BINARY IN ()) FROM t1, vt0 LIMIT 721489668; -- 0ms;
SELECT DISTINCT vt1.c2, (((t1.c0, vt0.c0, t1.c0)) NOT BETWEEN (((NOT (t1.c40)), ((((((((t1.c1)AND(t1.c88)))OR(NULL)))OR(vt1.c1)))OR(t1.c88)), '-1445155596')) AND ((vt1.c1, x'', ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))), (vt0.c0 IN (t1.c1)) COLLATE RTRIM FROM vt1, t1, vt0; -- 0ms;
SELECT SUM(0Xffffffffffd9a22c) FROM vt1; -- 0ms;
SELECT ALL CASE WHEN ((vt1.c1)<=(t1.c2)) THEN 0.9432442374085196 ELSE CHANGES() END FROM vt1, t1, vt0; -- 0ms;
SELECT ALL (((UNLIKELY(DISTINCT vt1.c0)))<>(((t1.c0 IN (t1.c2))))) FROM vt1, vt0, t1 WHERE (((((0.668225732774231)<(0.9077234546769228))) NOTNULL)); -- 0ms;
SELECT DISTINCT HEX(DISTINCT -2.05788764E8) FROM vt0 WHERE (((-1239847664)/((+ ('0.21105103214004073'))))) ORDER BY (((t1.c1 IN ()))/((((vt1.c1, t1.c33, t1.c88))>((-854696338, vt0.c0, vt0.c0)))))  NULLS FIRST;SELECT DISTINCT ((t1.c88)!=(vt1.c2)) COLLATE RTRIM FROM vt0 WHERE ((((('\-g')<<('-1914536508')))>>((('OH')LIKE('_u++')))));SELECT (('ZxA/&i' COLLATE RTRIM)-(((((((((t1.c88)AND(vt1.c1)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))), (t1.c1 IN (vt0.c0, t1.c88)) COLLATE NOCASE, (((t1.c2)=(vt1.c0)) IN ()) FROM vt0 WHERE (((NULLIF('-1527187322', NULL)) BETWEEN (((x'')<<(x''))) AND (((3.094104E7) NOT NULL))));SELECT (- (((-2129199785)<>(vt1.c1)))), (~ (CASE NULL  WHEN vt1.c0 THEN t1.c1 WHEN vt0.c0 THEN x'e14e' WHEN t1.c0 THEN vt1.c1 ELSE t1.c40 END)), ((((t1.c88)=(vt0.c0))) NOT BETWEEN (ABS(DISTINCT t1.c1)) AND (IFNULL(t1.c40, t1.c33))) FROM vt1, t1;SELECT (- (t1.c0 COLLATE RTRIM)) FROM vt0 INDEXED BY i97, t1;SELECT ALL CASE (((x'a5e1'))>=((t1.c40)))  WHEN (vt1.c0 IN ()) THEN MIN(vt1.c2) WHEN ((vt1.c1)/(vt1.c2)) THEN ((vt0.c0)*(t1.c33)) WHEN '-1821804050' THEN CASE WHEN t1.c33 THEN vt0.c0 ELSE t1.c40 END WHEN ((t1.c40)<=(vt0.c0)) THEN t1.c88 COLLATE RTRIM WHEN ((vt1.c2)>=(x'')) THEN 0.3312019611790642 COLLATE NOCASE END FROM vt1;SELECT ALL (((((- (t1.c88)))OR(((t1.c88) BETWEEN (t1.c88) AND (t1.c1)))))OR((((t1.c88, t1.c33, t1.c40))!=((t1.c1, t1.c40, t1.c1))))) FROM vt0;SELECT ALL t1.c40 FROM t1 ORDER BY ((((((((((((-1821804050)AND(((t1.c1)<(vt1.c1)))))AND(((vt1.c1) NOT BETWEEN (t1.c33) AND (t1.c40)))))OR(((('_DB')) BETWEEN ((t1.c1)) AND ((vt0.c0))))))OR((t1.c33 IN ()))))AND(t1.c2)))AND((- ('-105612918'))))  NULLS FIRST;SELECT 0.9350418491449938 FROM vt0, t1 WHERE (((CASE WHEN x'0032' THEN x'' END) NOT NULL)); -- 0ms;
SELECT DISTINCT CASE WHEN (~ (t1.c88)) THEN ((vt1.c1) NOT NULL) ELSE (- (t1.c33)) END FROM vt1, t1; -- 0ms;
SELECT (((('')AND(vt1.c2))) NOT BETWEEN (CASE WHEN t1.c0 THEN vt1.c1 WHEN t1.c88 THEN t1.c33 WHEN vt0.c0 THEN vt1.c2 END) AND (AVG(t1.c40))) FROM t1;SELECT DISTINCT CAST(0.8135838026522394 AS INTEGER) FROM t1, vt0, vt1 WHERE (NULLIF(CAST(NULL AS INTEGER), CAST('bpu7' AS TEXT))); -- 0ms;
SELECT DISTINCT ((vt1.c1) IS TRUE) COLLATE RTRIM COLLATE NOCASE, (((((t1.c40, t1.c88, t1.c33))>=((t1.c33, t1.c33, t1.c88)))) BETWEEN (t1.c88) AND (load_extension(vt1.c2))), ((CAST(vt1.c1 AS TEXT)) NOT BETWEEN (((x'42e7')>=(t1.c33))) AND ((~ (t1.c0)))) FROM t1, vt0 WHERE (((((NULL)GLOB(NULL))) NOTNULL));SELECT DISTINCT TOTAL(COALESCE(DISTINCT t1.c40, NULL)) FILTER(WHERE CASE WHEN t1.c88 THEN ((t1.c2)==(vt1.c2)) ELSE t1.c40 COLLATE BINARY END) OVER () FROM vt1, vt0;SELECT LAG(((((('551975618'))>((vt1.c0)))) IS FALSE), '', CASE CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c1, vt1.c0, vt1.c1))) THEN vt1.c1 COLLATE BINARY ELSE CAST(vt1.c0 AS NUMERIC) END) OVER () FROM vt1 WHERE (CAST(((0.28490544511219884)>>(x'')) AS NUMERIC)); -- 0ms;
SELECT x'' FROM vt1; -- 0ms;
SELECT DISTINCT COUNT(((t1.c1)-(t1.c40))), TOTAL(((((t1.c40)AND(vt1.c1)))AND(t1.c1))), NULLIF(DISTINCT '121352530', ((t1.c40)>>(t1.c1))) FROM vt0, vt1, t1; -- 0ms;
SELECT (((~ (t1.c88))) IS FALSE), UNICODE((~ (t1.c40))), (NOT (((t1.c1)<<(t1.c88)))) FROM vt0, t1 ORDER BY ((CAST(t1.c88 AS TEXT)) NOTNULL) ASC  NULLS LAST, ((x'fcdd3b84') NOT BETWEEN (((((vt1.c0)OR(vt1.c2)))AND(vt1.c2))) AND ((((vt1.c1)) NOT BETWEEN ((t1.c2)) AND ((''))))), (((t1.c40)==(t1.c40)) IN ()) ASC  NULLS FIRST;SELECT DISTINCT CAST(((((((((t1.c0)AND(vt1.c1)))OR(t1.c2)))OR(vt1.c0)))AND(t1.c33)) AS NUMERIC) FROM t1;SELECT ALL (((t1.c88, vt1.c1, t1.c1)) BETWEEN ((x'222f', vt1.c0, COUNT(*))) AND ((NULL, ((vt1.c2)>(t1.c2)), ((t1.c2)||(t1.c2))))), ((t1.c33)OR(vt1.c1)) COLLATE BINARY, (AVG(vt1.c2) IN ()) FROM t1, vt1 WHERE ((('l勪opt0' COLLATE NOCASE) IS TRUE)); -- 0ms;
SELECT ALL (- ((~ (vt1.c0)))) FROM vt1 WHERE ((~ ('_u+-'))); -- 0ms;
SELECT DISTINCT ((((((((((vt1.c2)OR(NULL)))OR(t1.c1)))OR(t1.c2)))AND(t1.c0))) IS FALSE) FROM vt0, t1, vt1 WHERE (((((((((((NULL)AND('w歂3!\')))AND('')))AND('-633490419')))AND(x''))) NOT BETWEEN ((('0.9100806845205089')>=(0.2591802674745194))) AND (json_type(NULL)))); -- 0ms;
SELECT DISTINCT ((((CAST(t1.c40 AS BLOB))AND((((t1.c0, t1.c2, vt1.c0)) BETWEEN ((vt1.c2, t1.c88, vt1.c1)) AND ((t1.c88, t1.c88, vt1.c1))))))AND('1601832471')) FROM vt1, vt0, t1 WHERE (((UPPER(DISTINCT '*WL'))OR(((1961688855)+(-480382151))))) LIMIT 5378861 OFFSET 429528177; -- 0ms;
SELECT ALL (vt0.c0 IN ()) COLLATE RTRIM FROM vt0, vt1; -- 0ms;
SELECT (('<s') BETWEEN (t1.c0 COLLATE NOCASE) AND (((((((((((((t1.c0)OR(t1.c1)))AND(vt1.c1)))AND(vt0.c0)))AND(t1.c2)))OR(vt0.c0)))AND(t1.c33)))) FROM vt0;SELECT DISTINCT GROUP_CONCAT(UPPER(vt1.c2)) FROM t1, vt0, vt1 WHERE (CASE WHEN CASE WHEN NULL THEN x'' END THEN x'3eda' COLLATE NOCASE ELSE (3.75052694E8 IN (NULL)) END) GROUP BY (((t1.c1, t1.c40, t1.c40, vt1.c1, t1.c1)) BETWEEN ((0.35302062313209026, (- (vt1.c2)), t1.c33 COLLATE RTRIM, ((t1.c2) NOT BETWEEN (t1.c40) AND (t1.c1)), vt1.c2 COLLATE RTRIM)) AND ((DATETIME(vt1.c1, vt1.c2, vt1.c2), LAST_INSERT_ROWID(), (- (x'')), (vt1.c2 IN ()), ((t1.c40) ISNULL)))) HAVING (((TOTAL(t1.c40)))>=((MAX(vt1.c2)))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT 0Xfffffffff4bc185b, (CASE WHEN vt1.c0 THEN t1.c0 END IN ((((t1.c33, t1.c0, t1.c88))==((vt1.c2, t1.c1, vt1.c0))))), vt0.c0 FROM vt0;SELECT ALL COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE TIES) FROM vt0; -- 1ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN t1.c33 THEN '0.3965098618757815' END)IS NOT(t1.c2)) FROM vt1, vt0, t1; -- 0ms;
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((((4.84205612E8)<=('686491954'))) IS FALSE)); -- 0ms;
SELECT ALL (SQLITE_COMPILEOPTION_GET(vt1.c1) IN ()) FROM vt0, vt1, t1 WHERE ((- (((0.8168632015507702)<=('珗wtﵗn{?Q('))))); -- 0ms;
SELECT DISTINCT CAST(t1.c88 AS TEXT) FROM vt1, vt0, t1; -- 0ms;
SELECT DISTINCT (t1.c0 IN ()) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT '1398726408' COLLATE BINARY FROM vt1, t1; -- 0ms;
SELECT (((((vt1.c0, t1.c88, t1.c2)) NOT BETWEEN ((t1.c33, t1.c88, t1.c2)) AND ((NULL, vt1.c1, NULL))))==(CASE t1.c1  WHEN t1.c1 THEN t1.c33 ELSE t1.c33 END)), TYPEOF(''), (((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) IN ()) FROM vt0 WHERE (((('0.7375993217748403') BETWEEN (x'') AND ('\-g')) IN ()));SELECT ALL ((COUNT('')) NOT BETWEEN (t1.c40 COLLATE NOCASE) AND (CAST(t1.c40 AS BLOB))) FROM t1, vt1; -- 0ms;
SELECT ALL CAST(((vt1.c1)>>(x'494d')) AS NUMERIC) FROM vt0;SELECT x'' FROM vt1, vt0 NOT INDEXED WHERE (CAST(CAST(0.30142467714482035 AS REAL) AS INTEGER)); -- 1ms;
SELECT DISTINCT LIKELY(vt1.c1 COLLATE BINARY) FROM vt0, t1 WHERE ((((x'b332')) BETWEEN ((IFNULL(x'', 'h+?naf'))) AND (((((0.284755886820916)) BETWEEN (('721489668')) AND ((NULL))))))) ORDER BY (((t1.c88 COLLATE BINARY))>=((t1.c0))) DESC  NULLS LAST;SELECT DISTINCT LAG(((vt0.c0 IN (vt0.c0)) IN ()), (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (('fm'))), ((((vt0.c0)+(0.3415715046734207)))<=(vt0.c0))) OVER () FROM vt0 WHERE ('0.0') ORDER BY (- (t1.c2 COLLATE BINARY));SELECT NULL FROM vt1, vt0 WHERE ((CASE NULL  WHEN 'H+?naF' THEN x'2010' END IN ())) GROUP BY 0.2770754321973823; -- 0ms;
SELECT DISTINCT TOTAL(((((t1.c40)OR(t1.c40)))AND(vt1.c0))) OVER () FROM t1, vt0, vt1; -- 0ms;
SELECT CASE WHEN ((((vt1.c1)OR(t1.c1)))AND(vt0.c0)) THEN ((t1.c88)+(NULL)) ELSE ((t1.c0)IS(0.6099201788403756)) END FROM vt1, t1 GROUP BY ((((((t1.c33)OR(vt1.c2)))AND(t1.c0))) NOT NULL), NULLIF(GLOB(vt0.c0, t1.c40), CAST(t1.c1 AS REAL)), ((json(t1.c2))AND(((((t1.c2)AND(t1.c40)))OR(t1.c2)))) HAVING ((((t1.c1)>>(vt1.c1))) NOT BETWEEN ((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((vt1.c2)))) AND ('V-z'));SELECT ((((t1.c40)<(t1.c88)))|(((t1.c40)GLOB(vt1.c1)))), TRIM(DISTINCT ((vt1.c2) BETWEEN (t1.c2) AND (vt1.c0))), SUM(((t1.c88) BETWEEN (vt1.c0) AND (t1.c1))) COLLATE RTRIM, TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt1.c2) AND (t1.c40))), ((((t1.c33)/(t1.c40)))<=((t1.c0 IN ()))) FROM vt0 WHERE ((NOT ((((((((('1867877065')AND(x'')))AND(0.23632596495367486)))AND('0.3312019611790642')))AND('瓷')))));SELECT DISTINCT vt0.c0, (- (COUNT(*))), ((CASE t1.c88  WHEN t1.c1 THEN t1.c2 ELSE t1.c40 END) IS FALSE), RANK() OVER ( ORDER BY ((((t1.c0) NOT NULL))>=(((t1.c40)/(t1.c40)))) ASC  NULLS FIRST, (((CAST(vt1.c2 AS TEXT)))>=((((t1.c2)!=(vt0.c0)))))  NULLS LAST, CAST(((vt1.c0) ISNULL) AS REAL)  NULLS LAST), (((vt1.c0) BETWEEN (t1.c2) AND (t1.c33)) IN (t1.c40 COLLATE BINARY)) FROM vt0;SELECT DISTINCT ((((((vt1.c1) IS TRUE))AND(((t1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND((((t1.c0, t1.c40, vt1.c2)) NOT BETWEEN ((t1.c0, x'', t1.c0)) AND ((0.9350418491449938, vt1.c2, t1.c33))))) FROM vt1, vt0 WHERE (((NULL) NOT BETWEEN (('-476498540' IN (NULL))) AND (CASE WHEN x'' THEN NULL END)));SELECT ALL ((t1.c1) IS TRUE) COLLATE RTRIM, (((((((((t1.c1 IN ()))OR((((vt1.c2, vt1.c2, t1.c0)) NOT BETWEEN ((vt0.c0, t1.c1, t1.c88)) AND ((vt1.c2, vt0.c0, t1.c33))))))AND(((vt1.c0) IS FALSE))))OR(highlight(vt1.c2, vt1.c1, t1.c33, t1.c88))))AND(t1.c33)), AVG(((t1.c0) NOTNULL)) FROM t1 WHERE (((((0.8145056797140519) IS TRUE)) NOT NULL));SELECT DISTINCT CAST((((1.961688855E9, vt1.c1, t1.c1, t1.c40, vt1.c0))<=((t1.c0, t1.c0, '', vt0.c0, vt1.c1))) AS REAL), COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE TIES), ((((t1.c1))<((vt0.c0))) IN ()) FROM vt1 LIMIT -872551659;SELECT DISTINCT MAX(((t1.c40)<>(t1.c1))), ((UNLIKELY(DISTINCT vt0.c0))/(((t1.c40)|(t1.c1)))), HEX(((t1.c1) ISNULL)) FROM t1, vt0; -- 0ms;
SELECT ALL (((NOT (t1.c40)))>=(((t1.c88)OR(vt1.c0)))) FROM vt0, t1;SELECT ALL LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.24887332795481687) FROM vt0, t1 WHERE (CASE WHEN ((x'') IS TRUE) THEN NULL COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c33) BETWEEN (vt1.c0) AND (vt1.c1)) THEN CAST(vt1.c1 AS INTEGER) END, ((((t1.c0 COLLATE BINARY)AND(COALESCE(DISTINCT t1.c2, t1.c1))))AND(((t1.c88)IS NOT(t1.c0)))), t1.c2, TOTAL(COALESCE(t1.c33, vt1.c1)) OVER (), CASE WHEN vt1.c1 THEN t1.c0 END COLLATE BINARY FROM vt0 ORDER BY CAST(x'' AS NUMERIC) ASC  NULLS FIRST;SELECT DISTINCT (((- (t1.c0)))*((vt1.c1 IN (vt1.c2)))) FROM vt0 WHERE (((((((x'')OR(NULL)))OR(0.11746902535118064)))&(CAST('-156283516' AS INTEGER))));SELECT DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c2)) COLLATE BINARY, ((((t1.c0) NOT BETWEEN (0.4217721052521921) AND (vt0.c0))) NOT BETWEEN (((((t1.c33)OR(t1.c0)))OR(vt1.c2))) AND (' v' COLLATE RTRIM)), CAST(CAST(t1.c40 AS BLOB) AS NUMERIC) FROM vt0, t1, vt1; -- 0ms;
SELECT (((('-1506222125')OR((((vt0.c0))<((NULL))))))AND(((vt1.c0) BETWEEN (x'b4a6') AND (t1.c40)))) FROM vt0, vt1;SELECT ALL MIN(NULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((t1.c0)<=(t1.c2)) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT (((((t1.c33))>((vt0.c0)))) BETWEEN (vt1.c0) AND ((vt1.c1 IN (vt1.c1, vt1.c0)))) FROM t1, vt1, vt0; -- 0ms;
SELECT (((((((((((vt1.c2))>((vt1.c1))))OR(t1.c40)))OR(CAST(vt1.c0 AS TEXT))))AND(((t1.c88) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c1) BETWEEN (t1.c33) AND (t1.c33)))) FROM t1, vt0, vt1; -- 0ms;
SELECT ((((t1.c88) IS FALSE)) BETWEEN (((t1.c0)<>(t1.c40))) AND (((t1.c88) NOT BETWEEN (t1.c1) AND (vt1.c0)))) FROM vt1, vt0, t1 WHERE (LOWER('0#%kF')) GROUP BY TYPEOF((((vt1.c0))<=((t1.c88)))), (('-1655254932')<<('')), ((t1.c2 COLLATE BINARY)/((t1.c0 IN (x'', vt1.c2)))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((t1.c2)+(t1.c0))) NOT BETWEEN ((~ (t1.c2))) AND (vt1.c1 COLLATE BINARY)), (((vt1.c1 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c2) BETWEEN (vt1.c1) AND (t1.c88))))) OVER () FROM vt0, t1, vt1 LIMIT 568447526; -- 0ms;
SELECT DISTINCT (~ (((vt1.c2) BETWEEN (3.75052694E8) AND (t1.c88)))), 'ZxA/&i', TYPEOF(((t1.c88) BETWEEN (t1.c2) AND (t1.c40))), CAST(LTRIM(0.3008289421812942, vt1.c0) AS REAL), ((-6.28998343E8) NOT BETWEEN ((((t1.c0, NULL, t1.c1))>((vt1.c2, vt1.c0, t1.c1)))) AND (UPPER(t1.c2))) FROM vt0 ORDER BY t1.c40 DESC;SELECT DISTINCT (((((vt1.c2, vt1.c2, vt1.c1))<=((t1.c1, t1.c33, t1.c2))))LIKE(CAST(vt1.c0 AS BLOB))) FROM t1, vt1 NOT INDEXED, vt0 WHERE (((((x'224a') ISNULL))IS NOT(((((0.7741266445505877)OR('958694060')))AND('br}>ᑱ'))))); -- 0ms;
SELECT (((t1.c1) BETWEEN (vt1.c1) AND (vt1.c2)) IN ()) FROM vt0, vt1, t1; -- 0ms;
SELECT (((((t1.c40) BETWEEN (t1.c1) AND (vt1.c2))))<=((((((((((0.2059869673312812)OR(t1.c40)))AND(vt0.c0)))OR(t1.c88)))OR('-2079288266'))))) FROM vt0;SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((((vt1.c1)AND(t1.c88)))OR(t1.c33))) AND ((((t1.c1)) BETWEEN ((t1.c88)) AND ((NULL))))) FROM vt0, t1 GROUP BY ((CASE WHEN t1.c1 THEN t1.c33 WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)||((t1.c0 IN (t1.c2)))), ((t1.c0) NOT BETWEEN (CASE 0.4919737425340217  WHEN t1.c0 THEN t1.c2 ELSE t1.c1 END) AND (((vt0.c0)>(0.19968826368100046)))), x'';SELECT DISTINCT CAST(CASE WHEN vt1.c2 THEN vt1.c0 ELSE t1.c1 END AS TEXT), t1.c2, ((((SUBSTR(t1.c2, t1.c2))OR(((t1.c40) ISNULL))))AND(((vt1.c2) NOTNULL))) FROM t1, vt0;SELECT DISTINCT COALESCE((((t1.c0)) BETWEEN ((vt1.c0)) AND (('-1239847664'))), ((vt0.c0)+(t1.c1))), ((((((((((vt1.c0)AND(t1.c40)))AND(vt1.c1)))AND(t1.c33)))AND(vt1.c1))) BETWEEN (CAST(t1.c88 AS BLOB)) AND (((vt1.c1) ISNULL))), CASE WHEN t1.c2 COLLATE NOCASE THEN t1.c2 COLLATE BINARY ELSE COUNT(0X224eecb2) END FROM t1 ORDER BY ((t1.c40)>=(vt1.c0)) COLLATE RTRIM ASC;SELECT DISTINCT CAST(TOTAL(t1.c1) AS NUMERIC) FROM vt1 ORDER BY (+ (((vt1.c1)+(t1.c1))))  NULLS FIRST;SELECT DISTINCT CHANGES() FROM vt0 WHERE (((x'' COLLATE BINARY)*(0.10132123501658685 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (t1.c1 IN (vt1.c2)) COLLATE BINARY FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT TRIM((((vt1.c2, vt0.c0, vt1.c1))!=((vt0.c0, '1131230143', t1.c1))), (+ (t1.c0))) FROM vt0, t1, vt1; -- 0ms;
SELECT ALL ((t1.c2)LIKE(vt1.c2)) COLLATE BINARY FROM vt0 NOT INDEXED WHERE (((json_array_length(x''))LIKE((('820188754')&('30941040')))));SELECT DISTINCT ((((vt0.c0) NOTNULL)) ISNULL) FROM vt0, vt1 WHERE (((((((0.828577202045077) NOT NULL))OR(((x'') NOT BETWEEN (x'7a2a') AND (842932770)))))OR((((0xffffffffb64774f7)) NOT BETWEEN (('1961688855')) AND ((141302334)))))) LIMIT -9223372036854775808; -- 0ms;
SELECT DISTINCT t1.c0, ((CAST(t1.c33 AS BLOB))=(CASE WHEN '' THEN t1.c1 END)), t1.c88 FROM vt0;SELECT (+ ((+ (vt1.c2)))) FROM vt0, t1 WHERE (((+ (x'377e')) IN ()));SELECT DISTINCT ((t1.c1)>(0.7375993217748403)) FROM vt1, vt0, t1 WHERE ((((- ('.G'))) IS FALSE)) GROUP BY CAST((t1.c0 IN ()) AS INTEGER) HAVING CAST(CAST(t1.c33 AS NUMERIC) AS BLOB) LIMIT -1951096272 OFFSET 1609360253; -- 0ms;
SELECT DISTINCT ((vt1.c2 COLLATE NOCASE)IS(((vt1.c1)==(t1.c88)))), NULL, ((((t1.c40) NOT BETWEEN ('rG') AND (t1.c1))) NOT NULL) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET((('-2514388') BETWEEN ('') AND ('-2105388331')))) GROUP BY (+ ((t1.c1 IN ())));SELECT DISTINCT AVG(CASE t1.c88  WHEN t1.c2 THEN t1.c1 END), GROUP_CONCAT(((((x'')OR(t1.c88)))AND(t1.c40))) OVER (), (+ ((NOT (vt1.c2)))) FROM vt1, t1; -- 4ms;
SELECT ALL (t1.c0 COLLATE RTRIM IN (((t1.c1) ISNULL))) FROM vt1;SELECT ALL (((t1.c0) BETWEEN (t1.c40) AND (t1.c0)) IN ()), (((NOT (vt1.c2))) NOTNULL), ((((((((((t1.c33) NOT NULL))OR((+ (vt1.c2)))))OR(vt1.c1 COLLATE RTRIM)))OR((t1.c0 IN (vt0.c0)))))OR((((t1.c2))<((NULL))))) FROM t1 WHERE (((CASE WHEN NULL THEN x'' END)*(CASE x''  WHEN 0xffffffff8030b821 THEN NULL END))) GROUP BY ((CAST(t1.c0 AS TEXT))IS(((t1.c1)IS NOT(vt1.c1))));SELECT DISTINCT t1.c88 COLLATE NOCASE FROM t1, vt0, vt1 WHERE (((CAST(NULL AS BLOB)) NOTNULL)); -- 0ms;
SELECT DISTINCT MAX((NOT (vt0.c0))) FROM t1 WHERE (x'7148');SELECT ALL '1191631639' COLLATE BINARY, (((t1.c88)>>(t1.c0)) IN ()), vt1.c0 FROM t1, vt0, vt1 WHERE (CASE '16嫝'  WHEN (((((((('9OcqT쫱.n')OR('ꪟJ6')))OR(0X5f4700e8)))AND('1601832471')))OR('\-g')) THEN CASE WHEN 0.4919737425340217 THEN '-1019151868' END WHEN ((NULL)&(x'')) THEN HEX(x'') WHEN CASE 1.6369244E9  WHEN 0.38449154161817634 THEN '-1066158745' WHEN '-1817730260' THEN 0.3415715046734207 WHEN NULL THEN x'' END THEN ((((((((0.28872061754439593)AND(x'')))OR(0.18480350001117074)))AND(' v')))AND('0.7375993217748403')) END); -- 0ms;
SELECT ALL CAST(t1.c2 COLLATE NOCASE AS REAL) FROM t1, vt0, vt1 WHERE ((((('', '-1738583178', '0.0118457250009808')) NOT BETWEEN ((0.240761192657984, -1.236830985E9, 0.4217721052521921)) AND ((0.24184860074857273, NULL, NULL))) IN ((+ (0.5034633522898333))))); -- 0ms;
SELECT LAST_VALUE((CASE t1.c40  WHEN vt1.c0 THEN x'2e00' WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN t1.c0 ELSE t1.c40 END IN ())) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM t1, vt1, vt0 WHERE ((((((((((((x'7a75')AND('16嫝')))OR('iU')))AND('-854696338')))AND(0Xffffffff86bb25ef))))>((((x'') BETWEEN (0.8453816638771087) AND (x'')))))) GROUP BY (((((vt1.c0)OR(vt0.c0)))AND(t1.c0)) IN ()); -- 0ms;
SELECT DISTINCT ((((((((NULL)AND(((t1.c40)IS(t1.c40)))))OR(t1.c0)))AND(CASE t1.c2  WHEN t1.c33 THEN t1.c88 END)))OR(((((t1.c40)OR(vt1.c2)))AND(t1.c88)))) FROM vt0, vt1, t1; -- 0ms;
SELECT ALL ((((vt1.c0) NOT BETWEEN (t1.c40) AND (x'78f7')))<(TYPEOF(DISTINCT t1.c0))) FROM vt1, t1, vt0 WHERE (((((((((((x'') NOT BETWEEN (x'a9c0') AND ('-1e500')))OR(CASE WHEN NULL THEN 0.5485396003424845 WHEN 0X3775caf1 THEN x'f75b' WHEN 0.5915183126935454 THEN 0xffffffffb64774f7 END)))AND(((x'')*(0.32453711758142023)))))OR(((-1239847664)>>(NULL)))))OR(CAST(0.18122548309035835 AS INTEGER)))) LIMIT 6601662; -- 0ms;
SELECT ((t1.c2) NOT BETWEEN (((NULL) IS FALSE)) AND ((((t1.c2))>=((t1.c0))))) FROM vt1, t1; -- 0ms;
SELECT (((t1.c88 IN ())) NOT NULL) FROM vt0, vt1 WHERE (((0x6ea9724d)>('698623047'))); -- 0ms;
SELECT ALL ((t1.c1)-(((t1.c88) NOT NULL))) FROM vt0 WHERE (json_extract((- (0.16970812271204927)), ((((((((((((x'')AND('<S')))AND('-1984547612')))OR('Z2')))AND(-156283516)))OR(x'1128')))OR(NULL))));SELECT json_quote(((((((((vt1.c2)OR(t1.c2)))AND(t1.c33)))AND(t1.c1)))OR(t1.c88))), ((((((((t1.c1 COLLATE NOCASE)OR(((vt1.c2)GLOB(vt0.c0)))))AND(((((t1.c88)AND(t1.c40)))AND(vt0.c0)))))OR((((t1.c88)) NOT BETWEEN ((0.6747786451081654)) AND ((t1.c2))))))OR((vt0.c0 IN ()))), RANK() OVER () FROM vt1 NOT INDEXED, t1;SELECT ((((vt1.c0) NOTNULL))<<(SQLITE_COMPILEOPTION_USED(t1.c40))) FROM vt1;SELECT ABS(DISTINCT CAST(vt1.c1 AS INTEGER)), (NOT (CASE WHEN t1.c88 THEN vt1.c0 ELSE t1.c0 END)), ((COUNT(t1.c1))IS(t1.c40)) FROM vt1, t1, vt0 WHERE (CAST(CASE WHEN 3.75052694E8 THEN NULL ELSE '842932770' END AS REAL)); -- 0ms;
SELECT DISTINCT (CAST(vt1.c1 AS TEXT) IN ((((t1.c1, t1.c1, vt1.c1)) NOT BETWEEN ((x'', vt0.c0, vt1.c1)) AND ((t1.c88, t1.c1, t1.c0))), ((t1.c0)!=(vt1.c2)))) FROM vt1, t1, vt0 WHERE ((((+ (x'713f')))>=(((x'') BETWEEN (0.40872330564296244) AND (0.9360570737253338))))); -- 0ms;
SELECT ALL (((((t1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c1))))/(MAX(t1.c0))) FROM vt1, vt0, t1; -- 0ms;
SELECT DISTINCT ((((vt1.c1)IS NOT(vt1.c2)))/(((((((((t1.c40)AND(t1.c2)))OR(t1.c0)))AND(t1.c2)))AND(vt1.c1)))) FROM t1, vt0;SELECT DISTINCT CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) AS TEXT), (449577474 IN ()), TOTAL(((((vt1.c0)AND(t1.c2)))AND(t1.c33))) FROM vt1, t1 WHERE (CASE WHEN (('v0') IS TRUE) THEN (('') NOT BETWEEN ('') AND (NULL)) WHEN CASE WHEN NULL THEN 'K7' ELSE x'' END THEN ((0.34126575281386584) NOT BETWEEN (NULL) AND (1925948617)) WHEN ((0Xffffffff89b634e4)||(NULL)) THEN (((('145076519')OR(NULL)))OR(NULL)) WHEN CAST(']Vi緄{?t^' AS REAL) THEN ((1636924400) NOTNULL) WHEN CAST(-1.019151868E9 AS TEXT) THEN UPPER(DISTINCT 0x6ec00e01) ELSE (x'' IN ()) END); -- 0ms;
SELECT vt1.c1, t1.c33, (~ (((t1.c33)*(0.3169604648915767)))), CAST(MIN(t1.c1) AS INTEGER), FIRST_VALUE(0.6683834703060256) OVER () FROM vt0, t1, vt1 WHERE (((((((((((((CAST('-476498540' AS INTEGER))AND((('0.7621081852966575')>=(x'5567')))))OR(((NULL)>>(x'')))))AND((((0.1479288424788362)) NOT BETWEEN ((x'')) AND ((0.8161305919682081))))))OR((('%wK^''}') IS TRUE))))OR(((0X5f4700e8)%(1.925948617E9)))))OR('1908420886'))); -- 0ms;
SELECT FIRST_VALUE((NULL IN (CASE vt1.c0  WHEN 0.5338512978513523 THEN vt1.c0 END))) OVER ( ROWS ((CASE WHEN t1.c0 THEN t1.c33 WHEN t1.c40 THEN vt0.c0 WHEN vt1.c0 THEN 0xffffffffc875140d END) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (x'' COLLATE RTRIM)) PRECEDING EXCLUDE CURRENT ROW), ((- (vt1.c2)) IN ()), LAG(CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c0 END  WHEN vt1.c1 THEN ((vt1.c1)>(vt1.c1)) ELSE ((vt1.c1) IS FALSE) END, (((+ (vt1.c1))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (vt1.c0 COLLATE NOCASE)), (((((((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(DATE(0.6971364637550546, vt1.c1, vt1.c2))))AND(CAST(vt1.c1 AS REAL))))OR((vt1.c0 IN ()))))AND((+ (vt1.c1)))))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(CASE vt1.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN NULL THEN vt1.c2 ELSE vt1.c2 END))) OVER () FROM vt1 WHERE ((~ ((('辰P]W7')IS(0.03599938386340684)))));SELECT DISTINCT json_valid(((t1.c2)IS NOT(t1.c40))) FROM vt0, vt1;SELECT DISTINCT MAX(t1.c40), ((((vt0.c0)%(t1.c88)))<<(TYPEOF(x'f8a7'))), t1.c33, RANK() OVER (), CAST(CASE t1.c40  WHEN vt0.c0 THEN t1.c1 WHEN vt1.c1 THEN t1.c0 WHEN vt1.c2 THEN vt1.c0 END AS INTEGER) FROM t1, vt1 WHERE (HEX(DISTINCT CASE x''  WHEN NULL THEN NULL WHEN x'4dd8' THEN 0.34125071785138705 WHEN '1138792442' THEN NULL ELSE NULL END));SELECT ALL LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.48119395947282495) FROM vt0;SELECT DISTINCT ((((((vt1.c2)OR('XB')))OR(vt1.c0))) NOT NULL) FROM vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(t1.c40 AS REAL)) FROM vt1, t1, vt0; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN ('ci	CE') AND (t1.c1)))AND(((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c1)))) FROM vt1, vt0, t1 WHERE (ABS(CASE x''  WHEN NULL THEN x'6de7' END)) ORDER BY x'' ASC LIMIT 82984417; -- 0ms;
SELECT ALL ((COUNT(vt1.c1)) ISNULL) FROM vt0, t1, vt1 WHERE (x'' COLLATE RTRIM); -- 0ms;
SELECT DISTINCT LOWER(vt1.c2), (((((+ (vt0.c0)))AND(t1.c33 COLLATE NOCASE)))AND(t1.c2 COLLATE BINARY)), vt0.c0 FROM vt0, t1 WHERE ((((0.23037053439484356, '1191631639', x'cc24')) NOT BETWEEN ((((('cಪ眩')) NOT BETWEEN ((NULL)) AND ((-1.56283516E8))), ((((NULL)AND(0.4694988713685172)))AND(NULL)), NULL)) AND (((('B.G2h2]뙞') BETWEEN (NULL) AND ('1191631639')), (((NULL)) NOT BETWEEN ((NULL)) AND ((NULL))), ((NULL) BETWEEN (x'') AND ('wfv?l'))))));SELECT GROUP_CONCAT(((vt0.c0)LIKE(t1.c2))) OVER (), ((((t1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)))=(((t1.c40) BETWEEN (vt1.c2) AND (t1.c33)))), (((('p')AND(t1.c88)))AND(t1.c88)) COLLATE NOCASE, CASE COUNT(*)  WHEN ((t1.c0)<<(t1.c40)) THEN (((x'', t1.c1, vt0.c0))<=((t1.c2, t1.c40, t1.c40))) ELSE vt1.c1 COLLATE NOCASE END, (((x'3b17' COLLATE RTRIM))<((x''))) FROM vt0, t1, vt1 LIMIT 1961688855 OFFSET 1858080257; -- 0ms;
SELECT SUM(CASE t1.c40  WHEN vt1.c1 THEN t1.c88 END) OVER () FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT (LIKELY(DISTINCT t1.c0) IN ()) FROM vt1, vt0 WHERE ((((+ ('0.24184860074857273'))) NOT BETWEEN ((((''))==(('121352530')))) AND ((NULL IN ())))) ORDER BY ((((t1.c40)!=('-2144290783'))) BETWEEN (t1.c88 COLLATE RTRIM) AND ((('-1914536508') NOT BETWEEN (t1.c40) AND (t1.c2))))  NULLS FIRST;SELECT ALL ((vt1.c1 COLLATE RTRIM) ISNULL) FROM vt1, t1 WHERE (((((((((0.3707580425748507)OR(NULL)))OR('TRUE')))OR((('០PIP+')&('C ''X')))))AND(-2015394383 COLLATE BINARY))); -- 0ms;
SELECT ALL TOTAL(vt1.c2 COLLATE BINARY COLLATE NOCASE) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt0, t1;SELECT ALL (((((((((t1.c2)OR(x'')))OR(t1.c88)))OR(vt1.c0)))AND(t1.c1)) IN ()), ((CAST(t1.c33 AS REAL))&(((('0.2591802674745194')) BETWEEN ((vt1.c1)) AND ((vt1.c1))))), ((x'')*((t1.c2 IN (982153675)))), (('Y動\n?') NOT NULL), (+ (CASE WHEN t1.c88 THEN '' WHEN t1.c33 THEN t1.c33 WHEN t1.c0 THEN t1.c2 ELSE t1.c33 END)) FROM vt1 WHERE (((((0.36733941212244337) BETWEEN (0.3808629723733188) AND ('662763555'))) NOT BETWEEN (((x'2908') BETWEEN ('*댛l\nrL') AND ('820188754'))) AND (x'')));SELECT CAST(CASE vt1.c1  WHEN t1.c0 THEN vt1.c2 ELSE vt0.c0 END AS INTEGER), ((((((t1.c88)OR(t1.c33)))AND(vt1.c1)))LIKE(CAST(vt1.c0 AS TEXT))), CASE WHEN vt1.c0 COLLATE BINARY THEN ((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)) WHEN ((t1.c40) ISNULL) THEN t1.c33 WHEN (((t1.c33, '-1606809879', vt0.c0)) NOT BETWEEN ((t1.c0, vt1.c1, vt1.c0)) AND ((vt0.c0, t1.c88, t1.c1))) THEN (((t1.c88)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))) ELSE t1.c40 COLLATE BINARY END FROM vt1 WHERE ((- (CAST(0.3728493505883831 AS INTEGER))));SELECT ((GROUP_CONCAT(t1.c0)) NOT BETWEEN (((vt1.c2)-(t1.c40))) AND ((((vt0.c0, vt1.c1, t1.c40, t1.c0, vt1.c1))<((vt1.c1, vt1.c1, t1.c2, t1.c88, vt1.c1))))), (+ (HEX(vt1.c0))), LOWER((- (vt1.c1))) FROM t1, vt0, vt1; -- 0ms;
SELECT ALL ((+ (t1.c33)) IN (((vt1.c2) BETWEEN (vt1.c1) AND (vt0.c0)), MAX(vt1.c1))) FROM vt0, vt1, t1 WHERE (CAST('勪' COLLATE NOCASE AS INTEGER)); -- 0ms;
SELECT ALL CASE WHEN (vt1.c1 IN ()) THEN x'' ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((t1.c88))) END FROM t1;SELECT ((GROUP_CONCAT(0.9720819136622257))==((((0X68b67d52)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0, t1 WHERE ((- (CASE WHEN x'' THEN '' ELSE 0.24227323482123986 END))); -- 0ms;
SELECT ((vt0.c0 IN ('a\r褈')) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT (+ ((((vt1.c1))<=((t1.c88))))) FROM vt1 WHERE (((NULL) BETWEEN ('-1654154329') AND ('1072527258')) COLLATE BINARY);SELECT DISTINCT GROUP_CONCAT(((((((((t1.c33)AND(vt1.c1)))AND(t1.c1)))AND(t1.c2)))OR(vt0.c0))) FILTER(WHERE CASE WHEN t1.c88 THEN t1.c88 END COLLATE NOCASE) OVER () FROM vt0, t1, vt1; -- 0ms;
SELECT (((t1.c40)) NOT BETWEEN ((vt1.c1 COLLATE RTRIM)) AND ((GROUP_CONCAT(vt1.c2)))) FROM vt1, t1, vt0 WHERE ((- (x'')) COLLATE RTRIM); -- 0ms;
SELECT ALL ((vt1.c2)IS NOT(((t1.c33)IS NOT(t1.c40)))) FROM vt0;SELECT DISTINCT CASE WHEN ((((t1.c1)OR(vt1.c1)))AND(vt0.c0)) THEN (- (vt1.c2)) END, ((((((((((NULL)OR(t1.c40)))AND(vt0.c0)))OR(t1.c88)))OR(vt0.c0)))>(MIN('-756311679'))), ((((t1.c33)OR(t1.c2)))AND(x'')) COLLATE NOCASE FROM vt0, t1 WHERE (((((0.46380990563267266)<<('-1748011787')))|(0.9275378404302829)));SELECT DISTINCT UNLIKELY(DISTINCT ((t1.c33)<>(vt0.c0))) FROM vt0;SELECT DISTINCT GROUP_CONCAT(SUM(((t1.c1) NOT NULL))) FROM vt0, vt1 WHERE (((('')) BETWEEN ((NULL COLLATE RTRIM)) AND ((((((((((x'')AND(x'4696')))OR('530469419')))AND(68201257)))AND('k,Fk3''Czr')))))) ORDER BY (((LAST_INSERT_ROWID(), (((t1.c88))<=((vt0.c0))), LOWER(t1.c0)))==((((t1.c0)>>(t1.c0)), ((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c0)))AND(t1.c88)))AND(vt1.c0)), ((((t1.c0)AND(t1.c0)))AND(t1.c40))))), CASE x''  WHEN ((t1.c40) ISNULL) THEN '[p' END DESC  NULLS FIRST;SELECT DISTINCT 0.6432743786532515 FROM vt1, t1 GROUP BY (NOT ((('|)R''') ISNULL))), CASE WHEN ((((((((t1.c2)OR(vt0.c0)))OR(vt1.c2)))AND(vt1.c0)))AND(vt1.c1)) THEN vt0.c0 END, (((t1.c0, NULL, vt1.c0)) NOT BETWEEN ((((vt1.c1)<(t1.c88)), LAST_INSERT_ROWID(), ((((((((t1.c2)OR(0xffffffff8030b821)))AND(t1.c88)))AND(vt0.c0)))AND(t1.c1)))) AND ((CAST(-1.738583178E9 AS BLOB), t1.c2, 1768998484 COLLATE BINARY))) HAVING '580835079';SELECT ALL NTILE((((0.6507890374965433)) BETWEEN ((((t1.c0) ISNULL))) AND ((t1.c2)))) OVER () FROM t1, vt0; -- 0ms;
SELECT DISTINCT (-1753779371 IN (NULL)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((((vt1.c1, 0X103ff619, t1.c2)) NOT BETWEEN ((t1.c2, t1.c2, vt1.c2)) AND ((t1.c2, t1.c1, t1.c2))) IN ()) FROM vt1, vt0, t1 WHERE (x'842ca20f') LIMIT -226237866 OFFSET -150768141; -- 0ms;
SELECT ALL CAST(((((t1.c0)AND(vt1.c2)))OR(t1.c1)) AS BLOB) FROM t1 WHERE (CAST(SQLITE_SOURCE_ID() AS TEXT)) LIMIT -931851251 OFFSET -273851377;SELECT DISTINCT CAST(((t1.c88)&(vt1.c0)) AS REAL) FROM vt0, vt1;SELECT DISTINCT (((((t1.c0))>=((vt1.c2)))) ISNULL), CAST(UNICODE(vt0.c0) AS NUMERIC), (NOT ((((t1.c40, t1.c40, t1.c2)) BETWEEN ((vt1.c0, 0.7321999215572268, vt0.c0)) AND ((vt0.c0, vt1.c0, t1.c40))))) FROM vt0, t1;SELECT ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))>=(NULLIF(vt0.c0, t1.c33))), (- ((((t1.c2))<((t1.c88))))), COUNT(*) FROM vt0 NOT INDEXED NATURAL JOIN vt1;SELECT ALL PERCENT_RANK() OVER (), GROUP_CONCAT(CAST(0X6970c654 AS BLOB)), ((t1.c33) NOT NULL) COLLATE BINARY FROM vt1 WHERE ((((((((('-203406318' COLLATE NOCASE)OR((('')IS NOT('1579473947')))))AND(((NULL) BETWEEN ('411442688') AND (NULL)))))OR((~ (NULL)))))OR(((0.33332896195818096) IS TRUE))));SELECT ALL (((vt1.c0)||(t1.c40)) IN ()) FROM vt1, t1 WHERE (((((NULL) NOT NULL))IS(((((0.3144095320532756)AND('0.23037053439484356')))AND(0.8709576958713163))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( GROUPS BETWEEN CAST(((((t1.c33)AND(t1.c0)))OR(t1.c2)) AS TEXT) FOLLOWING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM vt0, t1 WHERE (((NULL IN (0.9386173733571985)) IN ())) GROUP BY (((t1.c40)+('')) IN (CASE WHEN t1.c33 THEN t1.c33 ELSE vt1.c0 END)) HAVING NULL;SELECT ALL (((((((vt1.c2)OR(vt1.c1)))OR(vt1.c0))))==(((+ (t1.c1))))) FROM vt0 WHERE (load_extension(((('1138792442')) NOT BETWEEN ((NULL)) AND (('A87r]{')))));SELECT COALESCE((~ ('')), ((((((((t1.c33)OR(t1.c40)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) FROM vt0, t1, vt1 WHERE ((((NULL)) NOT BETWEEN ((TYPEOF(NULL))) AND (((NOT (0.6258446026720068)))))); -- 0ms;
SELECT ((AVG(vt1.c2)) NOTNULL) FROM vt1, vt0, t1; -- 0ms;
SELECT ALL ((((t1.c1)||(t1.c1))) BETWEEN (((vt1.c1)>>(t1.c88))) AND (CAST(t1.c40 AS REAL))) FROM t1;SELECT DISTINCT ((((vt1.c2)GLOB(vt1.c0)))AND((((NULL)) BETWEEN ((t1.c2)) AND ((vt0.c0))))) FROM vt1, t1, vt0 WHERE (((((((((NULL)OR(0.331063273857898)))OR(0.6886482732545293)))OR(((((x'5e97')OR('-966093903')))OR(NULL)))))AND(LOWER(x'')))); -- 0ms;
SELECT ALL (((((((t1.c40)OR(vt1.c2)))OR(vt1.c1))))<((((vt1.c2) IS FALSE)))), ((+ (vt0.c0)) IN ((((vt1.c2))=((vt0.c0))), (t1.c88 IN (t1.c1, t1.c88)), ((vt1.c1) NOT BETWEEN (t1.c2) AND (vt1.c1)))), LIKELIHOOD(DISTINCT TOTAL(vt0.c0), 0.254874142703324), CASE ((vt1.c1)GLOB(0.11781258520814619))  WHEN ((t1.c33) IS FALSE) THEN t1.c0 WHEN ((((((((t1.c40)OR(x'')))OR(vt1.c2)))OR(vt1.c0)))OR(t1.c88)) THEN t1.c40 COLLATE NOCASE WHEN t1.c40 COLLATE BINARY THEN ((t1.c0) BETWEEN (vt1.c1) AND (vt0.c0)) ELSE t1.c88 COLLATE BINARY END, ROW_NUMBER() OVER () FROM vt1, vt0, t1 WHERE (((CAST('9&{.m㖁''M_' AS REAL)) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST(((('SI')) NOT BETWEEN ((t1.c40)) AND ((t1.c33))) AS INTEGER) FROM vt0, vt1 WHERE (CAST(CAST('-1753779371' AS REAL) AS TEXT)) GROUP BY ((vt1.c0)AND('530469419')) COLLATE NOCASE HAVING t1.c40;SELECT ALL ((vt0.c0 COLLATE NOCASE)>>(LIKELY(DISTINCT vt1.c1))), ((((CASE WHEN t1.c0 THEN t1.c2 ELSE vt1.c2 END)AND(t1.c88)))AND(GROUP_CONCAT(t1.c1))), json_type(CASE WHEN vt1.c2 THEN t1.c2 WHEN t1.c0 THEN vt1.c1 WHEN t1.c88 THEN t1.c1 ELSE NULL END) FROM vt1, vt0;SELECT ALL ((((CAST(t1.c88 AS INTEGER))OR((- (t1.c2)))))OR(((((t1.c40)AND(t1.c1)))AND(vt1.c2)))) FROM t1 WHERE (((((x'feaf') NOT NULL))>>((('1867877065') IS TRUE)))) GROUP BY ((t1.c33) ISNULL) COLLATE NOCASE, CASE WHEN ((x'3d45') BETWEEN (vt1.c2) AND (vt1.c0)) THEN ((t1.c2) IS TRUE) WHEN 0.613436785798765 THEN CAST(vt1.c2 AS REAL) WHEN (vt1.c0 IN ()) THEN t1.c2 COLLATE BINARY ELSE ((vt1.c2)+(vt1.c0)) END, '' HAVING (~ (CAST(vt1.c2 AS INTEGER))) LIMIT 2093574555;SELECT ALL CAST((((t1.c1, t1.c0, t1.c1))<>((t1.c0, t1.c88, ''))) AS BLOB), ((x'28de') IS FALSE), CASE WHEN 0.40584573283138026 THEN vt1.c0 COLLATE RTRIM WHEN ((t1.c33) ISNULL) THEN ((vt1.c1)+(t1.c40)) WHEN ((vt1.c1) IS TRUE) THEN CAST(t1.c0 AS NUMERIC) ELSE LIKELY(vt1.c0) END FROM t1 LEFT OUTER JOIN vt1 ON UNICODE(((vt1.c1)>=(vt1.c0))) LEFT OUTER JOIN vt0 ON (((vt1.c1))<=((t1.c40))) COLLATE RTRIM WHERE ((((((NULL))<>((NULL)))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((t1.c40))=((vt0.c0))))*(((((((((x'')AND(vt1.c0)))OR(t1.c88)))OR(t1.c33)))AND(t1.c40)))) FROM vt0, vt1, t1; -- 0ms;
SELECT DISTINCT (- (((t1.c0)>(t1.c2)))), t1.c1, LAG(((ABS(DISTINCT 0.35302062313209026))<(HEX(DISTINCT vt1.c1))), (~ ((~ (vt1.c0)))), CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c2 END COLLATE RTRIM COLLATE RTRIM) OVER () FROM vt1 INDEXED BY i97 WHERE ((((('-246264158') IS TRUE)) IS FALSE));SELECT DISTINCT (NULL IN ()), ((NULL) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (((vt1.c1) NOTNULL))), 0X74d93120 FROM vt0, vt1 WHERE ((+ (((((((((8.85241438E8)AND(x'')))AND('.HFh]iG')))AND(-1984547612)))OR(0X2c382272))))); -- 0ms;
SELECT DISTINCT ((((t1.c0)%(t1.c2))) BETWEEN (((vt1.c1)>=(t1.c88))) AND (((vt1.c0)<<(x'c164')))) FROM t1, vt1, vt0 GROUP BY (NOT (t1.c0)) COLLATE RTRIM, CAST(((t1.c1)/(t1.c0)) AS NUMERIC), ((json_insert(t1.c1, t1.c33, t1.c2))==(LIKE(t1.c2, t1.c40, 'O'))) HAVING ((((((((t1.c33)OR(((vt1.c0)%(vt1.c2)))))OR('657327690')))OR(CASE WHEN t1.c88 THEN vt1.c2 ELSE t1.c88 END)))OR((vt1.c1 IN ()))); -- 0ms;
SELECT DISTINCT (- (t1.c1)) COLLATE RTRIM FROM t1, vt1, vt0 WHERE (0.3169604648915767); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t1, vt1, vt0 INDEXED BY i10;SELECT ((LIKELIHOOD(t1.c1, 0.46253725554637926))%(((vt1.c0) IS FALSE))) FROM vt1, vt0 WHERE (((NULL COLLATE NOCASE)GLOB((NOT (NULL))))) ORDER BY highlight(((vt1.c1)==(vt0.c0)), '1579722833', CASE WHEN vt1.c0 THEN NULL ELSE vt1.c1 END, CAST(t1.c0 AS REAL)) DESC  NULLS FIRST, (- (((t1.c2) NOT BETWEEN (vt1.c2) AND (t1.c40)))) ASC;SELECT DISTINCT json_patch(AVG(t1.c2), (((t1.c40))!=((NULL)))) FROM vt0, t1, vt1 GROUP BY ((((t1.c33) ISNULL))<=(((vt1.c0)AND(vt1.c2)))) HAVING ((((((t1.c2))<((t1.c2))), (vt1.c2 IN ()), DATE(vt1.c2, t1.c33, t1.c2, t1.c0, t1.c0)))<(((t1.c1 IN (t1.c2)), vt1.c1, ((vt1.c0) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((NOT (t1.c40)), CAST(vt1.c2 AS TEXT), ((t1.c40) BETWEEN (t1.c33) AND (t1.c2))))=((COALESCE(vt1.c1, t1.c0), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c2)), (~ (t1.c40))))) FROM vt0, t1 WHERE ((((~ (x''))) BETWEEN ((+ (NULL))) AND (((1.856598605E9) NOT BETWEEN (0.5379353053457951) AND (NULL)))));SELECT (t1.c88 COLLATE BINARY IN ()), CAST(CAST(vt1.c1 AS REAL) AS TEXT), RANK() OVER () FROM vt0;SELECT DISTINCT ((CAST(t1.c1 AS TEXT))IS NOT(((t1.c88)GLOB(t1.c88)))) FROM t1, vt1, vt0 NOT INDEXED WHERE ((((((-807900846 IN ('-353338335', 7.74003421E8)))AND(((x'')|('K''')))))AND(((NULL)%(0.25598912500686033))))); -- 0ms;
SELECT DISTINCT ((((((t1.c1)AND(t1.c1)))AND(((t1.c0) BETWEEN (0X69b4d160) AND (0.3535815472893318)))))AND((((vt1.c2)) NOT BETWEEN ((NULL)) AND ((t1.c1))))) FROM vt1 WHERE (((((((1102268461) NOTNULL))AND((('0.36733941212244337')<>(0.09047635525061126)))))OR((~ (NULL)))));SELECT DISTINCT ((((CAST(vt0.c0 AS NUMERIC))AND(CASE vt1.c2  WHEN t1.c33 THEN t1.c0 ELSE t1.c0 END)))OR(CAST(x'' AS INTEGER))), (((+ (t1.c40)))AND(COUNT(*))), LAST_VALUE((- (CAST(vt1.c2 AS NUMERIC)))) OVER () FROM vt0, vt1, t1; -- 0ms;
SELECT DISTINCT (((t1.c1)) BETWEEN ((((t1.c88)>=(vt0.c0)))) AND ((((((((((vt1.c2)OR(vt1.c0)))AND(vt0.c0)))AND(t1.c0)))OR(t1.c2))))) FROM t1, vt1, vt0 WHERE ((NOT (((NULL)-(NULL))))); -- 0ms;
SELECT DISTINCT TOTAL((NOT (t1.c88))) OVER () FROM vt0, vt1 WHERE (((NULL)<=((- (0.6506055103063755)))));SELECT ALL ((CASE WHEN t1.c88 THEN vt1.c1 END) NOTNULL), (((t1.c88 IN ()))OR(((vt1.c1) BETWEEN (t1.c33) AND (vt1.c1)))), x'', ((((t1.c0)|(t1.c40)))-((((('p')AND(t1.c0)))OR(t1.c88)))), CAST(t1.c40 COLLATE BINARY AS INTEGER) FROM vt1, vt0, t1 NOT INDEXED WHERE ((~ ((NOT (NULL))))); -- 0ms;
SELECT AVG(TYPEOF(vt1.c1)) FROM vt0;SELECT ALL (((vt1.c1, NULL, vt1.c2)) NOT BETWEEN ((CAST(-360115607 AS INTEGER), ((vt0.c0)AND(t1.c2)), (vt0.c0 IN (t1.c40)))) AND ((COUNT(*), ((((((((t1.c2)OR(vt1.c1)))OR(0.2396678426301162)))OR(t1.c40)))OR(t1.c0)), (((vt1.c0))>((vt1.c0)))))) FROM t1 INDEXED BY i10 WHERE (COALESCE((x'5eab' IN ()), CAST(x'' AS BLOB))) ORDER BY TRIM(((t1.c40) NOT BETWEEN (t1.c33) AND (t1.c88))) ASC  NULLS FIRST, rtreenode(t1.c88, NULLIF(vt1.c1, t1.c88))  NULLS FIRST;SELECT ALL (NOT (t1.c33)) COLLATE RTRIM COLLATE NOCASE FROM vt0;SELECT (vt0.c0 IN (CASE t1.c1  WHEN t1.c2 THEN vt1.c0 END)), AVG(x'96ad'), MIN(((t1.c1)-(t1.c33))) FROM vt0, vt1;SELECT DISTINCT (((+ (t1.c1)))GLOB(((t1.c88) BETWEEN (t1.c0) AND (x'')))) FROM t1, vt1; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))=(((t1.c2) NOT BETWEEN (t1.c88) AND (vt1.c2)))) FROM vt0, vt1;SELECT DISTINCT (((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c2))))<>((((t1.c40) IS TRUE)))), GROUP_CONCAT(AVG((t1.c0 IN ()))), TOTAL(((t1.c88) NOTNULL)) FROM vt1, t1 WHERE (CASE NULLIF(DISTINCT NULL, x'45c8')  WHEN ((((((((x'')AND(-1760128791)))AND('-206053055')))AND('s\㖢Iiu')))OR(x'')) THEN CASE '183590294'  WHEN '-2112957259' THEN x'' ELSE x'5ccc' END WHEN ((((NULL)AND(0.290949649021799)))AND(1.45076519E8)) THEN 0.24947166194840897 WHEN 0.8248111154925122 COLLATE RTRIM THEN (((((((('')OR(NULL)))OR(NULL)))OR(0.7528339055903128)))OR('-2008251801')) END);SELECT DISTINCT t1.c1 FROM t1 INDEXED BY i10, vt1 WHERE (NULL);SELECT DISTINCT CAST(((vt1.c2) NOT BETWEEN (-1.984547612E9) AND (t1.c1)) AS BLOB), (NOT ((- (t1.c2)))), CASE (('189559270') NOT NULL)  WHEN (t1.c33 IN ()) THEN ABS(DISTINCT t1.c33) WHEN (~ (vt1.c2)) THEN (vt1.c2 IN ()) WHEN CASE WHEN t1.c40 THEN vt1.c0 ELSE vt1.c1 END THEN (+ (t1.c88)) END FROM t1, vt0;SELECT ((((t1.c2 COLLATE RTRIM)OR(CASE x'0983'  WHEN t1.c0 THEN vt1.c0 ELSE t1.c40 END)))OR(((vt1.c1)*(t1.c40)))) FROM vt1, vt0 WHERE (((((1117916332))<>(('-1394646349'))) IN ()));SELECT DISTINCT (((t1.c40)%(t1.c0)) IN ()) FROM vt0 WHERE ((((((NULL) NOT BETWEEN (-2.129199785E9) AND (0.8135838026522394)), ((NULL) BETWEEN (0.40403744444240053) AND (x'')), (((0.5928817890483926)) BETWEEN ((x'9782')) AND (('-1161541348'))), ((((((((0.06817748760116471)AND(x'')))AND(x'')))AND('')))OR(0.37429413839071846)), ((((NULL)AND(NULL)))AND('/곴'))))<=(((('1733134600')==('-960763745')), CASE WHEN x'f681' THEN '|{H' WHEN 0.11781258520814619 THEN '' WHEN 0.613436785798765 THEN -2.05788764E8 END, CASE WHEN x'' THEN '-1951096272' WHEN '686491954' THEN x'2927' WHEN x'213fcd66' THEN '3暙竂EgU{' END, ((x'8015')>(0x5adacc3d)), ((0.17217731320810425) NOT BETWEEN (NULL) AND (x'')))))) GROUP BY t1.c33, (NOT (vt0.c0)) COLLATE NOCASE, CASE WHEN STRFTIME(t1.c88, vt1.c0, vt0.c0) THEN (((vt1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c88))) ELSE ((vt1.c0)IS(vt1.c2)) END HAVING (NOT (UNICODE(t1.c33)));SELECT ALL CASE (('575597746')<=(t1.c40))  WHEN -670650384 THEN (NULL IN ()) END FROM t1, vt0, vt1 ORDER BY CASE LOWER(vt0.c0)  WHEN CAST(vt1.c1 AS INTEGER) THEN ((t1.c33) ISNULL) ELSE CASE vt1.c0  WHEN t1.c1 THEN 1.7976931348623157E308 ELSE vt1.c0 END END ASC  NULLS LAST; -- 0ms;
SELECT (((NULL, t1.c1, vt0.c0, x'', t1.c88)) BETWEEN ((COUNT(vt1.c0), ((t1.c40) NOT BETWEEN (t1.c33) AND (t1.c0)), ((vt1.c2) BETWEEN ('326863136') AND ('M2')), MAX(t1.c2), TOTAL(t1.c2))) AND ((((t1.c2) NOT BETWEEN (vt1.c2) AND (t1.c33)), ((((t1.c0)AND(vt1.c0)))AND(t1.c0)), ((t1.c88) NOT BETWEEN (vt1.c0) AND (t1.c1)), (NOT (t1.c88)), 'poEB.u)'))), NTH_VALUE(LAST_INSERT_ROWID(), 0x6046628b) OVER ( PARTITION BY CASE WHEN ((t1.c1)<(vt1.c2)) THEN '-2034555409' END, ((x'') ISNULL) COLLATE NOCASE), (((vt1.c2)) BETWEEN ((SUM(vt1.c2))) AND ((((vt1.c1) NOT NULL)))) FROM vt0 WHERE (UNLIKELY((((('()')OR(NULL)))AND(0.3616666263417797))));SELECT DISTINCT CASE WHEN ((((vt1.c2)OR('6601662')))AND(t1.c0)) THEN vt1.c0 COLLATE NOCASE ELSE vt1.c2 COLLATE RTRIM END, CASE WHEN (t1.c0 IN ()) THEN (((vt1.c1, vt1.c2, t1.c0)) NOT BETWEEN ((vt0.c0, t1.c0, x'f931f006b217')) AND ((t1.c0, vt1.c1, t1.c0))) END, LIKELIHOOD(vt1.c0, 0.724446137768216) FROM t1, vt1 ORDER BY CAST(((t1.c0)%(t1.c88)) AS NUMERIC) ASC;SELECT DISTINCT ((vt1.c2)+(((t1.c33)+(x'')))) FROM t1, vt0 GROUP BY ((((((((((((((vt1.c1)<>(t1.c1)))OR(((vt0.c0) ISNULL))))AND(t1.c88 COLLATE NOCASE)))OR(CASE WHEN t1.c1 THEN '?&?36v\rG' END)))OR(0.9096980786728744)))OR((((t1.c1, t1.c33, t1.c33))<>((vt0.c0, t1.c40, vt1.c2))))))AND((((t1.c40))<=((vt0.c0))))), NULL, (((vt1.c0) BETWEEN (t1.c33) AND (t1.c40)) IN ()) HAVING LOWER(((t1.c1)<=(vt1.c2)));SELECT json_array_length(((vt1.c2)|(vt1.c2)), t1.c40) FROM vt0 WHERE (CAST(0.8918623895906236 COLLATE BINARY AS REAL)) ORDER BY (~ (NULL)) DESC  NULLS FIRST;SELECT DISTINCT LIKELIHOOD(DISTINCT '창w', 0.8771507870892448) FROM vt0, t1 WHERE (((NOT ('-1412362499')) IN (((0.5247853033318983) NOT BETWEEN (0X7371069b) AND (-73402740))))); -- 0ms;
SELECT DISTINCT ((CASE t1.c40  WHEN t1.c40 THEN t1.c0 WHEN x'9e39' THEN t1.c0 WHEN vt1.c0 THEN NULL ELSE t1.c2 END) BETWEEN (((t1.c33) NOT BETWEEN (t1.c2) AND (t1.c33))) AND (CAST(261685001 AS BLOB))) FROM vt1, vt0;SELECT ALL CASE x''  WHEN TIME(t1.c40, vt1.c0, t1.c88) THEN vt1.c2 COLLATE BINARY WHEN ((vt1.c2) IS FALSE) THEN (vt1.c2 IN ()) WHEN vt1.c0 THEN ((vt0.c0)IS(vt1.c0)) ELSE vt1.c2 COLLATE NOCASE END FROM t1, vt0, vt1; -- 0ms;
SELECT ALL LAST_VALUE(((CAST(vt1.c1 AS INTEGER))+(((vt1.c1)/(vt1.c2))))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c2) NOTNULL))<<((~ (vt1.c2)))) FROM vt0, vt1 WHERE (0Xffffffff828252d5); -- 0ms;
SELECT (NULL IN ((((t1.c40, t1.c40, '')) NOT BETWEEN ((t1.c33, t1.c88, t1.c1)) AND ((t1.c0, vt1.c1, t1.c1))))), CASE TOTAL(t1.c0)  WHEN (((vt1.c1))!=((t1.c40))) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt1.c2))>((t1.c2))) THEN ((t1.c40)LIKE(vt1.c0)) WHEN (NOT (t1.c40)) THEN 'v_o\r' END, TOTAL_CHANGES() FROM vt1, t1, vt0; -- 0ms;
SELECT DISTINCT QUOTE(((t1.c40) IS FALSE)), ((((t1.c40) BETWEEN (vt1.c1) AND (t1.c88))) BETWEEN (((t1.c40) IS TRUE)) AND ((((vt1.c2)) BETWEEN ((t1.c1)) AND ((NULL))))), (MIN(t1.c33) IN ()) FROM vt0, t1 WHERE ((CASE WHEN 0.2350153626160303 THEN NULL END IN ())) GROUP BY (((t1.c33) NOTNULL) IN ()) HAVING ((((((((0.34125071785138705 COLLATE NOCASE)OR(CASE NULL  WHEN vt1.c1 THEN vt1.c1 WHEN t1.c88 THEN 0.1702352981732932 WHEN vt0.c0 THEN t1.c33 ELSE t1.c0 END)))OR(((t1.c0)IS(t1.c40)))))AND(t1.c1)))AND((NOT (vt0.c0))));SELECT ALL (+ (x'')) FROM vt1, t1 WHERE (((((((1.6369244E9)AND('TRUE')))AND(NULL))) BETWEEN (CAST(x'' AS NUMERIC)) AND (CASE x'0eee'  WHEN NULL THEN x'' ELSE '' END))); -- 0ms;
SELECT COUNT(CASE vt0.c0  WHEN t1.c2 THEN t1.c88 END) OVER () FROM vt0;SELECT DISTINCT (((t1.c33 IN ())) IS FALSE) FROM vt1, vt0 GROUP BY HEX(((((((((t1.c1)AND(t1.c2)))AND(vt1.c0)))AND(t1.c2)))AND(0.6651421627019938))), ((((t1.c1)OR(vt1.c0))) IS TRUE), CASE ((t1.c40)IS NOT(t1.c1))  WHEN ((((((((vt1.c0)AND(t1.c2)))OR(vt1.c0)))OR(t1.c88)))AND('-2103940926')) THEN CAST(t1.c40 AS BLOB) END HAVING load_extension(vt0.c0);SELECT DISTINCT COALESCE(SQLITE_SOURCE_ID(), CASE vt1.c1  WHEN vt1.c2 THEN t1.c88 END), GROUP_CONCAT(json_type(vt0.c0)), (~ (((t1.c0) ISNULL))) FROM vt1, vt0, t1; -- 0ms;
SELECT SQLITE_COMPILEOPTION_GET(CAST(0xffffffffcbfdeb15 AS TEXT)) FROM vt0, t1; -- 0ms;
SELECT ALL ((((t1.c0 COLLATE BINARY)AND(((t1.c2) NOTNULL))))AND(CASE t1.c2  WHEN vt1.c1 THEN vt1.c2 ELSE t1.c0 END)), (((vt1.c1) NOT NULL) IN ()), vt0.c0 FROM vt0, t1 WHERE (((LAST_INSERT_ROWID()) IS FALSE));SELECT ALL ((((CAST(0.5166832540428011 AS NUMERIC))AND(((vt0.c0)==(vt1.c2)))))OR((((('-2112771425')AND(NULL)))OR(t1.c2)))), t1.c88, IFNULL(vt0.c0, vt1.c2) COLLATE BINARY FROM t1, vt1;SELECT DISTINCT ((t1.c2) ISNULL), ((((t1.c33) NOTNULL)) NOT NULL), ((IFNULL(t1.c40, 0.4919737425340217))OR(vt1.c1 COLLATE BINARY)) FROM t1 WHERE (((0.27991791477034345)&(NULL)) COLLATE NOCASE);SELECT DISTINCT ((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) COLLATE BINARY FROM vt0, vt1, t1 WHERE (CASE WHEN x'' THEN 0.6747786451081654 WHEN 0.1630981711510212 THEN 0.3755887438117008 WHEN '1979610071' THEN NULL END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST((NOT (vt1.c2)) AS BLOB) FROM vt1, t1, vt0 GROUP BY (((vt0.c0 COLLATE RTRIM))<=((CASE t1.c40  WHEN vt0.c0 THEN t1.c88 END))), ((0.8986601277807494) BETWEEN (t1.c88 COLLATE NOCASE) AND (t1.c33)), ((CASE WHEN t1.c1 THEN t1.c88 END) BETWEEN (CASE WHEN t1.c2 THEN 0.290949649021799 ELSE vt1.c1 END) AND ((t1.c0 IN ()))) HAVING CASE ((t1.c2) IS TRUE)  WHEN (NOT (vt1.c0)) THEN (t1.c1 IN ()) ELSE vt1.c1 COLLATE RTRIM END; -- 0ms;
SELECT ALL CHAR(t1.c33, t1.c88, vt1.c1) COLLATE NOCASE FROM vt0, t1 LIMIT -1209675705;SELECT load_extension(((t1.c0) ISNULL)) FROM t1, vt1, vt0 WHERE ((((NULL)) BETWEEN ((CAST(NULL AS REAL))) AND ((CAST(-1142837810 AS NUMERIC))))); -- 0ms;
SELECT ALL NULLIF(((((t1.c40)AND(t1.c88)))OR(t1.c0)), ((vt1.c2)IS(vt0.c0))) FROM vt0, t1;SELECT DISTINCT t1.c33 FROM vt0, t1 WHERE (CASE (x'' IN ())  WHEN (((NULL, x'', 0.6686358448751356)) NOT BETWEEN ((0.0, '⤝(', NULL)) AND ((0Xfffffffff2518c9e, x'', x'49ee'))) THEN NULL COLLATE BINARY END); -- 1ms;
SELECT DISTINCT ((NULL COLLATE RTRIM) NOT BETWEEN (CASE WHEN 0Xfffffffff43bfd6d THEN vt1.c2 ELSE t1.c0 END) AND (((t1.c1) NOT NULL))), UNLIKELY(((t1.c40)!=(0.1948557634901058))), CASE '\r '  WHEN ((((((((vt1.c2)OR(t1.c2)))AND(vt1.c0)))AND(t1.c40)))AND(t1.c88)) THEN (t1.c88 IN ()) WHEN CASE WHEN vt1.c1 THEN t1.c2 WHEN vt1.c1 THEN t1.c88 WHEN t1.c40 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c1 END THEN NULL WHEN ((((vt1.c2)AND(t1.c1)))AND(vt1.c2)) THEN ((t1.c33) NOT BETWEEN (t1.c33) AND (t1.c40)) ELSE CAST(t1.c33 AS TEXT) END FROM t1;SELECT ALL t1.c33, (NOT ('1992079603')), (((UPPER(t1.c40)))<>((CASE t1.c88  WHEN '-2129199785' THEN vt0.c0 WHEN t1.c2 THEN vt0.c0 WHEN NULL THEN vt1.c1 WHEN t1.c2 THEN vt0.c0 WHEN t1.c33 THEN vt1.c2 END))) FROM vt1, t1, vt0 GROUP BY t1.c2, (- ('0.8161305919682081')), (((CASE t1.c2  WHEN t1.c33 THEN t1.c1 ELSE t1.c1 END))>=((x''))) HAVING TYPEOF(HEX(vt1.c0)) ORDER BY (CAST(vt1.c2 AS BLOB) IN ()) ASC  NULLS FIRST, ((((((t1.c1)IS NOT(t1.c88)))OR(t1.c33)))AND(((t1.c40) BETWEEN (vt1.c2) AND (vt0.c0))))  NULLS LAST; -- 0ms;
SELECT CASE WHEN 'PS[\' THEN t1.c1 COLLATE RTRIM WHEN ((t1.c33)AND(t1.c0)) THEN ((vt1.c2)/(t1.c88)) WHEN ((vt1.c0) NOT NULL) THEN CASE vt1.c0  WHEN t1.c40 THEN vt0.c0 END END FROM t1, vt1, vt0 WHERE ((((~ (0.9544657066417773))) NOT NULL)); -- 0ms;
SELECT ALL ((CAST(t1.c88 AS BLOB))||(((t1.c33) ISNULL))) FROM vt0, vt1 WHERE ((~ (0.8411745034350584)) COLLATE BINARY);SELECT DISTINCT ((x'3e6f')IS(t1.c88 COLLATE RTRIM)) FROM vt1, t1 GROUP BY (((vt1.c2 IN (t1.c40, vt0.c0))) NOT BETWEEN (((t1.c88) NOT NULL)) AND (t1.c1 COLLATE NOCASE)), x'', ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)))LIKE(CAST(t1.c33 AS INTEGER))) HAVING NULLIF(LAST_INSERT_ROWID(), (t1.c33 IN (t1.c0, t1.c33)));SELECT ALL CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (t1.c33)) AS REAL), ((CAST(t1.c33 AS INTEGER))LIKE(COUNT(t1.c40))), (((((t1.c40 IN ()))AND((((vt0.c0))>=((vt1.c2))))))AND(((vt1.c1)=(t1.c2)))) FROM t1, vt1, vt0 WHERE (0.8393015546230826); -- 0ms;
SELECT DISTINCT ((t1.c0) BETWEEN (vt1.c2) AND (t1.c40)) COLLATE NOCASE, t1.c0, ((0X1acc0202)AND(t1.c0)) FROM vt0 WHERE (CAST((('-1050568278') ISNULL) AS BLOB)) LIMIT -1201030875;SELECT ALL CAST('0.9360570737253338' AS BLOB) FROM t1, vt1 WHERE ((((TIME(x'', '', x'', x'', 0Xffffffffa8a7f5db)))<(((((x'a93a', 0.5337084219125593, '1131230143', '-386190740', x''))>((NULL, x'', NULL, 919203550, '{'))))))) ORDER BY CAST(((t1.c1)/(t1.c40)) AS NUMERIC)  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt1.c1) NOTNULL) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c1, UPPER(t1.c33) COLLATE BINARY, CAST(CASE WHEN vt1.c0 THEN 0.12897855638659794 ELSE t1.c0 END AS BLOB) FROM vt1, vt0;SELECT LAG(CASE WHEN ((vt0.c0)<=(-1081260877)) THEN (vt0.c0 IN (vt1.c1)) ELSE (vt1.c2 IN ()) END, (~ (CAST(vt0.c0 AS TEXT))), x'bac4') OVER () FROM vt0, vt1 ORDER BY (((((t1.c88)GLOB(t1.c88))))>(((t1.c1 IN ()))));SELECT LIKE((~ (vt1.c2)), COALESCE(t1.c1, vt0.c0, t1.c33, vt1.c0), '0') FROM t1, vt0;SELECT DISTINCT COUNT(*) OVER (), CASE 0.19647628963052743  WHEN ((t1.c2) IS TRUE) THEN ((vt1.c2) NOT NULL) END, GROUP_CONCAT(x'3e18d2d9') OVER ( RANGE BETWEEN (((t1.c2 IN ())) ISNULL) PRECEDING AND ((vt1.c2 COLLATE RTRIM)IS NOT((((t1.c88, t1.c33, t1.c33))>=((t1.c33, t1.c40, t1.c0))))) PRECEDING EXCLUDE GROUP) FROM t1, vt1, vt0 INDEXED BY i97;SELECT ALL COUNT(CAST(t1.c2 AS TEXT)) OVER () FROM t1, vt0; -- 0ms;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (((x'')%(0.5936208452526963))))); -- 0ms;
SELECT DISTINCT ((((((((((t1.c88)OR(vt1.c2)))OR(((vt1.c2) IS FALSE))))OR(vt1.c2)))OR((vt1.c2 IN ()))))OR(vt1.c1 COLLATE BINARY)) FROM t1, vt0;SELECT DISTINCT (('Tⵡ#\	]B]ᷗ') NOTNULL) FROM vt0, t1 NOT INDEXED WHERE ((NULL COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT (((((t1.c40 IN ()))AND((('hm?B zH<4')>>(vt1.c1)))))OR((- (NULL)))) FROM t1, vt0; -- 0ms;
SELECT json_quote(CAST(t1.c40 AS BLOB)) FROM vt0, vt1 WHERE (x'');SELECT ((((x'5dee')AND(vt0.c0)))OR(CASE vt1.c2  WHEN vt1.c0 THEN t1.c0 END)) FROM vt0 CROSS JOIN t1 ON (((((((((((t1.c1))<((1.398726408E9))))AND((~ (vt1.c2)))))AND(((t1.c33)AND(vt1.c0)))))AND(CAST(t1.c1 AS NUMERIC))))AND(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c2)))) CROSS JOIN vt1 ON ((((((((((vt0.c0)OR(vt1.c2)))OR(NULL)))AND(t1.c0)))AND(t1.c40))) IS FALSE) ORDER BY (((0.05473607295786265))<>(((t1.c1 IN ()))))  NULLS FIRST, CASE WHEN (- (t1.c1)) THEN t1.c88 COLLATE NOCASE ELSE CAST(t1.c2 AS NUMERIC) END; -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN t1.c40 THEN t1.c1 ELSE t1.c40 END)GLOB(CAST(t1.c2 AS TEXT))) FROM vt0, t1 WHERE (((((((((0X91641c3)OR(x'')))OR(0.9545754982035576)))OR(-1561627959)))OR(0xfffffffffda27b22)) COLLATE BINARY);SELECT vt1.c2 FROM vt1, t1; -- 0ms;
SELECT ALL ((t1.c33) NOTNULL), '1908420886', ((((t1.c0)<<(vt0.c0)))!=(((vt1.c0)>=(vt1.c0)))) FROM vt1, t1, vt0 WHERE ((~ (0x76ce0a8b))); -- 0ms;
SELECT DISTINCT (((t1.c88)) NOT BETWEEN ((t1.c40)) AND ((vt1.c0))) COLLATE NOCASE, (~ (((t1.c40) BETWEEN (vt0.c0) AND (t1.c0)))), MAX((~ ('\r'))) FROM t1 INDEXED BY i97;SELECT (((CAST(vt0.c0 AS INTEGER), (~ (vt1.c1)), ((vt1.c2)*(vt1.c0))))>((((t1.c0) BETWEEN (t1.c40) AND (vt1.c1)), ((((((((t1.c88)OR(vt1.c1)))AND(t1.c33)))OR(vt1.c0)))OR(vt1.c1)), HEX(DISTINCT t1.c1)))), t1.c0, ((((vt1.c0)AND(((x'e453') NOT NULL))))OR((('') IS TRUE))) FROM vt0, t1;SELECT DISTINCT ((NULL)!=(CAST(t1.c33 AS INTEGER))) FROM t1, vt0 WHERE ((NOT ((((((((('-972319221')OR('-508692111')))AND(0.33402134329450484)))OR(0.8388329751745865)))OR(NULL))))); -- 0ms;
SELECT ((((vt1.c1)||(vt0.c0)))>=(vt1.c0 COLLATE BINARY)) FROM vt0 WHERE (('449577474' IN (((x'') NOT BETWEEN (NULL) AND (NULL)))));SELECT DISTINCT (+ (0X5534fe86)) FROM vt1; -- 0ms;
SELECT DISTINCT AVG(((t1.c0)!=(t1.c88))) FROM vt0 WHERE (((((((NULL)AND(0xffffffffaa7b5ee2)))AND(NULL)))&((('9OcqT쫱.n')+(0x6ec00e01)))));SELECT DISTINCT (+ ((vt0.c0 IN (vt1.c1)))) FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)<<(t1.c2)))AND((vt0.c0 IN ()))))AND((vt1.c2 IN ()))))AND(CAST(vt1.c1 AS NUMERIC))))OR(((t1.c2) NOT BETWEEN (t1.c2) AND (vt1.c1)))), ((((vt1.c2)IS NOT(vt1.c2)))OR(UPPER(t1.c2))), SUM(TRIM(DISTINCT t1.c33, t1.c33)) FROM vt1 WHERE (CAST(((((((((NULL)OR('')))OR(NULL)))AND(0x61a9b32a)))AND(NULL)) AS REAL));SELECT (((- (t1.c33)))%(MAX(vt0.c0))) FROM t1 WHERE (NULL);SELECT ALL AVG(CAST(t1.c33 AS BLOB)) OVER ( ORDER BY (((((t1.c2 IN ()))AND(((vt1.c0)/(t1.c1)))))AND(((vt1.c1) BETWEEN (t1.c40) AND (t1.c33)))) GROUPS  CURRENT ROW), MIN(GROUP_CONCAT(vt0.c0), t1.c1 COLLATE BINARY), (MIN(t1.c40) IN ((t1.c2 IN ()), ((t1.c33)IS(t1.c40)))) FROM vt0, vt1 LIMIT -105612918 OFFSET -770164652;SELECT DISTINCT COUNT(((0.03570570836340803) ISNULL)), (((t1.c1)) BETWEEN ((((vt1.c0)>>(t1.c33)))) AND ((CASE vt1.c2  WHEN t1.c88 THEN t1.c1 ELSE t1.c33 END))), SUM(((t1.c40) ISNULL)) OVER ( ORDER BY 0xffffffffb64774f7  NULLS FIRST) FROM t1 WHERE (('1925948617' IN (((x'') NOT NULL), (NULL IN ()))));SELECT DISTINCT CASE WHEN 666310624 THEN ((t1.c40) BETWEEN (t1.c1) AND (vt1.c2)) END FROM vt1, t1; -- 0ms;
SELECT ALL ((AVG(x'4d8c')) BETWEEN (((t1.c33)>=(t1.c40))) AND (CAST(vt1.c0 AS INTEGER))) FROM vt1, vt0, t1; -- 0ms;
SELECT DISTINCT TOTAL(CAST(t1.c1 AS INTEGER)) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM vt0, t1, vt1 WHERE ((((((x'')<<(-930549999)), (((0.284755886820916)) BETWEEN ((-27949003)) AND ((1756790098))), CAST(-633490419 AS BLOB)))<(((((((((('')AND(-1.416491862E9)))AND(NULL)))OR(x'')))AND(NULL)), (('-1748011787')IS NOT(x'')), ((((((((NULL)AND('-959841044')))AND(NULL)))OR('-1963110649')))OR(-1)))))); -- 0ms;
SELECT ALL LIKE(t1.c1, vt0.c0) COLLATE RTRIM FROM vt1 INDEXED BY i97;SELECT DISTINCT ((CAST(t1.c33 AS NUMERIC))>=((t1.c40 IN ()))) FROM vt1, t1; -- 0ms;
SELECT ((t1.c40 COLLATE NOCASE)>>((~ (t1.c2)))) FROM vt1, vt0;SELECT DISTINCT (((((vt1.c2)%(vt0.c0)), COUNT(*), TOTAL(NULL)))<=((-2.034555409E9, ((vt0.c0) NOTNULL), load_extension(t1.c40, t1.c88)))), ((LOWER(t1.c1))LIKE(((((t1.c0)AND(vt0.c0)))AND(vt0.c0)))), -1e500, CAST(SQLITE_COMPILEOPTION_USED(vt1.c1) AS NUMERIC), (- (((t1.c88)AND(t1.c88)))) FROM vt1, t1, vt0 WHERE (x'4383' COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((((((t1.c33)AND(vt1.c1)))AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c0)) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT (((vt1.c2, t1.c33, t1.c40, t1.c0, vt1.c1, vt1.c2, vt1.c0))<=((t1.c33, vt1.c1, NULL, t1.c88, vt1.c0, NULL, vt1.c1))) COLLATE RTRIM COLLATE RTRIM FROM vt0, t1, vt1 WHERE (ABS(CAST(NULL AS BLOB))); -- 0ms;
SELECT ALL (~ (((vt1.c0)+(t1.c2)))) FROM t1, vt0 WHERE ('-1748011787');SELECT (((((t1.c88) BETWEEN (t1.c33) AND (0.21554536441942374))))>((LOWER(t1.c33)))), ((vt1.c2 IN (t1.c1)) IN ()), COUNT(*) OVER () FROM t1, vt0 GROUP BY (((((~ (t1.c33)))OR(((vt1.c1) NOT NULL))))OR(HEX(t1.c2)));SELECT ALL COUNT(*) OVER () FROM vt0, vt1, t1 WHERE ((('h)7''' COLLATE RTRIM) NOT NULL)) ORDER BY TRIM(NULLIF(vt1.c1, 1356312358), (t1.c1 IN (t1.c2)))  NULLS FIRST, (~ ((t1.c2 IN (t1.c1, vt1.c1)))) ASC; -- 1ms;
SELECT DISTINCT ((((t1.c40 COLLATE BINARY)OR(((((t1.c88)AND(vt1.c1)))OR(0.24947166194840897)))))OR(MIN(NULL))) FROM t1 WHERE ((((NULL, 0X2b6f9b9c, x'')) BETWEEN ((((x'') IS TRUE), (((x'')) BETWEEN ((NULL)) AND ((x'e10b'))), ((((((((1.858080257E9)OR(0.6837095879714142)))OR('593193039')))AND(NULL)))AND(x'')))) AND ((CASE 0.7052360249863462  WHEN 'ᙒyd,]l' THEN 0.8522228842281885 ELSE 0.10169663065297663 END, ('' IN (0.8924521134670212)), ('' IN ())))));SELECT ALL ((SQLITE_COMPILEOPTION_USED(0.5405666779615755)) BETWEEN ('1719907099') AND (((t1.c33) BETWEEN (t1.c0) AND (NULL)))) FROM t1 WHERE (UNLIKELY('' COLLATE BINARY)); -- 0ms;
SELECT ALL (NOT (((0X2e225add)<<(t1.c40)))) FROM vt1, t1; -- 0ms;
SELECT DISTINCT ((t1.c0) BETWEEN (COUNT(*)) AND ((NOT (t1.c40)))) FROM t1, vt0 INDEXED BY i10, vt1;SELECT ((CASE WHEN t1.c40 THEN x'' WHEN t1.c88 THEN t1.c2 WHEN t1.c1 THEN t1.c88 ELSE t1.c33 END)>(MAX(t1.c1))) FROM vt0 WHERE (CASE WHEN TYPEOF(0.26904127187492777) THEN ((('5<')) BETWEEN (('0.8135838026522394')) AND ((NULL))) END);SELECT ALL CASE WHEN CAST(vt1.c0 AS INTEGER) THEN (t1.c88 IN ()) ELSE LTRIM(t1.c88, vt0.c0) END FROM t1, vt1, vt0 ORDER BY ((CAST(t1.c0 AS TEXT)) IS TRUE) DESC, '1795191131' ASC; -- 0ms;
SELECT ((t1.c1 COLLATE BINARY)<=(CASE WHEN t1.c2 THEN t1.c1 WHEN vt1.c2 THEN t1.c88 WHEN t1.c33 THEN vt1.c1 ELSE 0.4666883438928905 END)) FROM t1, vt0 WHERE ((((((((('0.7528339055903128')OR('&QMF<gD')))AND('1607435590')))AND(((0.4217721052521921)LIKE(NULL)))))AND(((('30941040', '30941040', x'')) BETWEEN ((-7.56311679E8, x'598e', '-419098836')) AND (('-633490419', x'', -1951096272))))));SELECT DISTINCT CASE WHEN ((t1.c2)AND(t1.c2)) THEN (NOT (t1.c33)) END FROM vt0 WHERE (CASE '-633490419'  WHEN (('')>=(0.6067900564935352)) THEN (0.7725146101907268 IN ()) END);SELECT ALL CASE WHEN ((vt1.c1) IS TRUE) THEN (t1.c1 IN ()) END, (((((+ (vt0.c0)))AND(t1.c88)))OR(json_valid(t1.c2))), CAST(t1.c0 AS INTEGER), (CASE t1.c88  WHEN t1.c1 THEN vt1.c2 ELSE t1.c1 END IN ()), (NOT (t1.c0)) FROM t1, vt0, vt1 WHERE ((((('!h88ὰti') NOT BETWEEN (-179331494) AND (NULL)))=((((x''))==((x'')))))); -- 0ms;
SELECT ALL t1.c88 FROM vt0, t1 WHERE ((((((('-479575905')AND(x'5191')))OR(''))) BETWEEN ('686491954' COLLATE BINARY) AND (((0.8459914944468262) IS TRUE)))) ORDER BY ((CAST(t1.c0 AS TEXT))<(1.908420886E9)) ASC  NULLS FIRST, TRIM(CASE WHEN vt1.c0 THEN vt1.c0 ELSE -199055342 END);SELECT LOWER(((((vt1.c2)OR(t1.c2)))OR('1398726408'))) FROM t1, vt0, vt1 WHERE (CASE CASE NULL  WHEN NULL THEN 'jz!Wk#\rW' WHEN NULL THEN 0Xffffffff8116fd57 WHEN 'vL' THEN 0.6656027130305843 WHEN 0.05517145042360727 THEN '-1821804050' WHEN x'' THEN '0.9360570737253338' END  WHEN ((x'')<=('568447526')) THEN (0x11695432 IN ('JC', '40')) WHEN ('-480382151' IN ()) THEN CASE WHEN 0.9993034427335092 THEN x'7778' END WHEN CASE 'cಪ眩'  WHEN '' THEN '23103298' END THEN ((x'2efc') NOTNULL) WHEN ((('0N<q'))>=(('-1825427922'))) THEN x'' WHEN (((NULL))==((0x2170d5ad))) THEN CASE x''  WHEN 0xffffffff92eb7d0b THEN x'' ELSE '721489668' END END) LIMIT -1894767645 OFFSET -638506559; -- 0ms;
SELECT (('r8#0\n') BETWEEN (((vt1.c1)AND(t1.c33))) AND (((t1.c2)>=(t1.c33)))), CASE t1.c2  WHEN t1.c88 THEN t1.c33 WHEN t1.c88 THEN t1.c88 WHEN vt1.c0 THEN 0.48444765529823963 END COLLATE BINARY, AVG(CASE t1.c33  WHEN t1.c88 THEN t1.c40 WHEN t1.c33 THEN t1.c40 WHEN t1.c1 THEN t1.c88 ELSE vt1.c1 END) COLLATE RTRIM FROM vt1, t1, vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE (CAST((('') BETWEEN (x'') AND (x'')) AS REAL)); -- 0ms;
SELECT DISTINCT rtreenode(CAST(vt1.c0 AS INTEGER), vt1.c0 COLLATE NOCASE) FROM vt1, vt0, t1 WHERE (CASE WHEN 'bP' COLLATE RTRIM THEN UNLIKELY(DISTINCT x'') ELSE ((0.6463705423966312) BETWEEN (x'') AND (x'')) END) GROUP BY CAST('?~' AS REAL); -- 0ms;
SELECT DISTINCT ((((CASE WHEN t1.c40 THEN vt1.c0 END)OR(((t1.c1)==(t1.c33)))))AND(((vt1.c0) NOTNULL))), CASE WHEN IFNULL(vt1.c1, t1.c88) THEN ((-917558593) ISNULL) ELSE (- (vt1.c0)) END, CASE ((t1.c0)LIKE(t1.c33))  WHEN ((((((((t1.c40)OR(t1.c33)))AND(vt1.c2)))AND(t1.c1)))OR(t1.c0)) THEN (((t1.c40)) NOT BETWEEN ((t1.c1)) AND ((vt1.c2))) END FROM vt1 WHERE (CAST(((0.19003834211880832) IS FALSE) AS TEXT)) GROUP BY CASE WHEN (((t1.c33))==((t1.c40))) THEN (((NULL))<((t1.c88))) WHEN CAST(t1.c2 AS REAL) THEN vt0.c0 COLLATE RTRIM WHEN t1.c33 THEN ((t1.c0)AND(t1.c33)) ELSE ((t1.c2) BETWEEN (t1.c0) AND ('568447526')) END HAVING (NOT ((vt1.c0 IN ()))) ORDER BY ((CAST('-1821804050' AS BLOB)) NOT NULL) DESC  NULLS LAST;SELECT DISTINCT (t1.c33 IN ()) FROM t1 WHERE (NULL) ORDER BY ((vt0.c0)<<((NULL IN ())));SELECT DISTINCT ((((t1.c1) IS FALSE))-(((t1.c88)==(vt1.c2)))), ((t1.c33)||(vt1.c1)) COLLATE RTRIM, json_quote(t1.c1) FROM t1, vt0 GROUP BY NULLIF(DISTINCT CAST(vt1.c0 AS INTEGER), (((vt1.c2, vt1.c0, t1.c33, vt0.c0, t1.c0))<((vt0.c0, vt1.c0, t1.c1, NULL, vt1.c0))));SELECT DISTINCT 0.9370074819825264 FROM vt0, t1 WHERE (((0X20e67ac2 COLLATE BINARY) NOT BETWEEN (IFNULL(DISTINCT '1609360253', '')) AND (((']L') IS FALSE)))); -- 0ms;
SELECT DISTINCT ((vt1.c1 COLLATE NOCASE) NOTNULL) FROM vt1; -- 1ms;
SELECT DISTINCT 0.8674680289062341 FROM vt1, vt0, t1 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((vt1.c2 IN ())) AND ((+ (vt0.c0))))  NULLS LAST, GLOB(((t1.c0)*(vt1.c1)), 0X66aa1abd), '1867877065'; -- 0ms;
SELECT ALL (- (t1.c88)) COLLATE RTRIM FROM t1, vt1, vt0; -- 0ms;
SELECT ALL (((vt0.c0, t1.c40, vt0.c0)) BETWEEN ((UNLIKELY(DISTINCT t1.c40), ((vt1.c2)>(vt1.c2)), ((0X318b1a07)IS NOT(vt1.c2)))) AND ((((vt1.c0)/(t1.c33)), (- (vt0.c0)), TOTAL(t1.c33)))) FROM t1 GROUP BY ((NULL IN ()) IN ()), CASE WHEN 1559979799 THEN (((t1.c1, vt1.c1, vt0.c0))==((t1.c0, vt1.c2, t1.c33))) ELSE ((((t1.c1)OR(vt1.c0)))OR(t1.c0)) END, vt1.c1 HAVING CAST(SUM(t1.c88) AS REAL);SELECT DISTINCT ((((vt0.c0)AND(t1.c1)))OR(vt1.c2)) COLLATE BINARY FROM vt1, vt0 WHERE (CASE ((NULL) BETWEEN ('#f') AND ('1867877065'))  WHEN CAST(0X34656186 AS NUMERIC) THEN (NOT (NULL)) WHEN (0.034970325004947456 IN ('(P')) THEN CHANGES() WHEN (((0.4919737425340217)) NOT BETWEEN ((x'7d46')) AND ((''))) THEN NULL ELSE CAST(x'' AS NUMERIC) END);SELECT DISTINCT (((0.946693489997897 COLLATE BINARY))>(((((0.838045229117972)) BETWEEN ((t1.c2)) AND ((NULL)))))) FROM t1, vt1 LIMIT -1293529168; -- 0ms;
SELECT LOWER((vt1.c2 IN ())) FROM vt0; -- 0ms;
SELECT CASE WHEN vt1.c1 THEN t1.c88 COLLATE NOCASE END FROM vt1 INNER JOIN t1 ON vt0.c0 COLLATE BINARY WHERE (CAST((+ (NULL)) AS TEXT)) LIMIT -1469484983 OFFSET -933995245;SELECT ALL (((((t1.c40)AND(t1.c88)))OR(t1.c1)) IN (GROUP_CONCAT(t1.c0))) FROM vt0, vt1, t1 LIMIT -345675921 OFFSET -1817730260; -- 0ms;
SELECT DISTINCT (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c88))))OR('')))AND(NULL)) FROM vt0, vt1 WHERE (0.18122548309035835);SELECT ALL ((NULL) NOT NULL) FROM vt1, vt0 WHERE (((((NULL) NOT BETWEEN (0.14271815116528774) AND ('')))==((+ (''))))) GROUP BY (((225409826)) NOT BETWEEN ((((t1.c33) IS TRUE))) AND (((- (t1.c1))))), ((((((vt1.c0)OR(t1.c0)))OR(t1.c2)))AND(CAST(vt0.c0 AS INTEGER))), (NOT (vt1.c0 COLLATE RTRIM)), CAST(CASE WHEN vt0.c0 THEN t1.c88 WHEN '-156283516' THEN vt1.c1 WHEN x'' THEN 0.4233797050405841 END AS REAL), (((vt1.c0)) NOT BETWEEN ((RTRIM(t1.c40))) AND ((((t1.c40) BETWEEN (vt1.c1) AND (vt1.c0))))) HAVING json_object(((((t1.c88)AND(vt0.c0)))AND(vt1.c1)), CASE t1.c1  WHEN vt0.c0 THEN 0Xffffffffb322e477 END, COUNT(*), ((t1.c2)%(vt1.c1)));SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((t1.c88)<(t1.c2)))AND((- (t1.c2)))))AND((t1.c40 IN ()))))AND((t1.c2 IN ()))))OR((+ (t1.c1)))), MAX(((t1.c33)>(vt1.c1))), ((((((((t1.c1)AND(vt1.c1)))OR(0.9363965597708198)))OR(((t1.c88) IS TRUE))))OR(GROUP_CONCAT(vt1.c2))) FROM t1, vt0;SELECT MAX(((vt1.c1)>=(vt1.c2))) FROM t1, vt0;SELECT DISTINCT CAST(((vt0.c0)<(t1.c1)) AS REAL) FROM vt1, vt0 GROUP BY (((((- (t1.c1)))OR(vt1.c1)))OR(((t1.c2)==(t1.c1))));SELECT TRIM(DISTINCT (- (t1.c33)), ((t1.c0)*(vt1.c0))) FROM t1;SELECT (vt0.c0 IN (t1.c40)) COLLATE NOCASE FROM vt0, t1, vt1; -- 0ms;
SELECT ALL TYPEOF(DISTINCT TYPEOF(vt1.c1)) FROM vt1 LIMIT -1452742476; -- 0ms;
SELECT DISTINCT ((load_extension(vt1.c2, t1.c1))>(CASE WHEN t1.c0 THEN vt1.c2 END)), (((vt1.c1))>=((vt0.c0))) COLLATE NOCASE, (+ (t1.c88)) FROM vt0, vt1 GROUP BY (((t1.c40 IN (t1.c2)))>=(((x'') BETWEEN (vt1.c1) AND (vt0.c0)))) ORDER BY t1.c88 COLLATE NOCASE ASC;SELECT (((+ (t1.c88))) NOT NULL) FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT CASE WHEN t1.c33 THEN t1.c2 ELSE vt1.c1 END, ((vt1.c0)OR(vt1.c1))) FROM t1, vt1 WHERE ((((((('')AND(NULL)))OR(NULL)))||((((NULL, x'', x'')) BETWEEN (('-777198385', NULL, NULL)) AND ((1980377869, 1.524288573E9, NULL)))))); -- 0ms;
SELECT ALL ((COALESCE(vt0.c0, t1.c88))||((((t1.c33)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) FROM vt0, t1;SELECT DISTINCT COUNT(((((t1.c2)AND(x'')))AND(vt0.c0))) OVER (), vt1.c0, (((((vt1.c0))!=((vt1.c1)))) NOT BETWEEN (ABS('l')) AND (t1.c40)) FROM vt1, t1 WHERE (CASE NULL  WHEN 0.25598912500686033 THEN NULL ELSE 0.9700713463454451 END COLLATE BINARY);SELECT ((x'')<((NOT (t1.c1)))) FROM t1, vt1, vt0 ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) ASC; -- 1ms;
SELECT DISTINCT ((t1.c40) IS FALSE) FROM vt0, vt1 GROUP BY (~ (((vt0.c0)<<(vt1.c0)))) HAVING CASE ((vt0.c0)=(vt1.c1))  WHEN ((t1.c1)<('oh')) THEN (NOT (t1.c1)) END;SELECT TRIM(DISTINCT 0Xffffffffee3eb862, SUM(t1.c1)), (((((t1.c40)) BETWEEN ((vt1.c1)) AND ((t1.c0)))) BETWEEN ((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c0)))) AND ((((t1.c1, vt1.c1, t1.c0)) NOT BETWEEN ((vt0.c0, vt1.c1, t1.c2)) AND ((t1.c33, vt0.c0, vt1.c1))))), (((- (t1.c40)))GLOB(UNLIKELY(t1.c88))) FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT vt0.c0), COUNT((NOT (1.961688855E9))) OVER ( ORDER BY ((((((((((((vt1.c0)AND(t1.c0)))OR(t1.c88)))OR((((t1.c40, t1.c33, t1.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))AND(vt1.c1)))AND(CASE t1.c1  WHEN t1.c2 THEN vt0.c0 END)))OR(((vt1.c0) NOT BETWEEN (t1.c88) AND (vt1.c0)))) ASC  NULLS FIRST, ((t1.c1)-(vt1.c1)) COLLATE NOCASE, t1.c1 ASC RANGE  CURRENT ROW EXCLUDE NO OTHERS), CAST((vt1.c0 IN ()) AS TEXT) FROM vt1, vt0, t1 WHERE (((NULL COLLATE NOCASE)%(CAST(1738665330 AS INTEGER)))); -- 0ms;
SELECT (((t1.c2) NOT BETWEEN (t1.c33) AND ('E{5)jA')) IN ((((t1.c2)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))))) FROM vt0, vt1 INDEXED BY i10;SELECT DISTINCT RANK() OVER () FROM vt0 WHERE (((((((((((((LTRIM(0.882948458620784, 'l6'))AND(((('\n\X', NULL, 'R9'))>(('121352530', 0.6946174316937819, '1719907099'))))))OR(COALESCE(955698316, 0.6971364637550546, 666310624, 0.044824676054157186))))AND(((NULL) NOT BETWEEN (x'') AND (NULL)))))AND((('')<>(NULL)))))AND(CASE WHEN 'sk' THEN NULL ELSE 0xffffffff9d56d06c END)))AND((~ (NULL))))); -- 0ms;
SELECT AVG(CASE WHEN vt1.c2 THEN t1.c1 ELSE '.HFH]IG' END) OVER (), ((((NULL) IS FALSE))AND(NULLIF(vt0.c0, t1.c40))), (- (vt0.c0)) FROM t1;SELECT DISTINCT ((CAST(t1.c1 AS BLOB))<(highlight(t1.c0, 0.08223055181192218, t1.c1, t1.c1))) FROM vt1, t1 WHERE (((json_array_length(0.7002604256407948, 0.5915183126935454)) BETWEEN (TYPEOF('1908420886')) AND (((x'')<<(NULL)))));SELECT ((t1.c0) ISNULL) FROM t1 INNER JOIN vt0 ON (+ (((0X131015d7) NOT BETWEEN (t1.c1) AND (vt1.c0)))) CROSS JOIN vt1 ON (((t1.c0) NOT BETWEEN ('-2112771425') AND (vt1.c1)) IN ()) WHERE (CASE 0.4349982670692606  WHEN ((0.3924684606362454)>=(-2.080383777E9)) THEN HEX('207892365') END); -- 0ms;
SELECT ALL MAX(CASE vt1.c1  WHEN NULL THEN t1.c1 ELSE vt1.c0 END), ROW_NUMBER() OVER (), (((((t1.c88 IN ()))AND(COUNT(t1.c1))))OR(UNLIKELY(vt1.c0))) FROM vt1 WHERE ((((+ (0Xffffffff9705dee4))) BETWEEN (CASE WHEN '-2144290783' THEN '' END) AND (610305124 COLLATE RTRIM))) LIMIT -1871043472;SELECT ((t1.c2) IS TRUE) COLLATE NOCASE FROM vt1;SELECT NTILE(((UNLIKELY(DISTINCT t1.c2))*(((t1.c88)IS NOT(t1.c88))))) OVER (), SUM(AVG(((vt1.c0)OR(vt1.c1)))), MIN(vt1.c2) FROM t1;SELECT DISTINCT GROUP_CONCAT(((((vt1.c0)OR(t1.c88)))OR(NULL))), (((x'3d2bbca1') BETWEEN (t1.c88) AND (t1.c88)) IN ()), ((((t1.c1)AND(vt1.c0)))<=(vt1.c1)) FROM vt1;SELECT DISTINCT ((t1.c2)GLOB(t1.c88)) COLLATE RTRIM FROM t1, vt1; -- 0ms;
SELECT ABS(((vt0.c0)<=(t1.c1))), (((('820188754')>(t1.c88)))<=(((t1.c0) NOTNULL))), ((((t1.c0) BETWEEN (t1.c0) AND (vt1.c2))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t1.c1 END) AND ((t1.c2 IN (t1.c1)))) FROM vt0, t1, vt1 WHERE (((((0.5915183126935454) NOT BETWEEN ('鉱(<!') AND (NULL)))AND(((((((((0.4505031628233477)AND('1138792442')))OR(NULL)))OR(x'')))OR(0X6683b31b))))); -- 0ms;
SELECT ALL DENSE_RANK() OVER (), ((vt1.c0)==(((((vt1.c0)OR(vt1.c0)))AND(t1.c2)))), ((((((vt0.c0) ISNULL))AND(vt1.c1 COLLATE RTRIM)))AND(COUNT(*))) FROM vt1 WHERE (LOWER(DISTINCT (('ZZ') ISNULL)));SELECT ALL COUNT(((vt0.c0) IS FALSE)) OVER () FROM vt1, vt0, t1 WHERE (CASE (~ (-1044698365))  WHEN ((x'')OR(x'17b6')) THEN ((0.30611663234775266)/('헕g')) WHEN (+ ('1672123755')) THEN ((x'')/(347968743)) WHEN ('' IN ()) THEN (0.4070258356728985 IN (0.08098886529145366)) END); -- 0ms;
SELECT (((NULL)) BETWEEN ((CASE vt0.c0  WHEN t1.c2 THEN vt1.c2 END)) AND ((TRIM(t1.c33)))) FROM vt1, vt0, t1 LIMIT -1690599980; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT (('') BETWEEN (t1.c88) AND (t1.c1)), ((t1.c0) BETWEEN (t1.c33) AND (t1.c33))) FROM t1 WHERE (((CAST(NULL AS TEXT))+(((('', 0.5238524134558793, x'745c')) NOT BETWEEN ((x'', '1곴t1vtv4', 0.7624636676233543)) AND ((0xffffffffc69c7729, '5378861', x'9c15')))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, vt1 WHERE ((((((NULL, 'NRj.', NULL)) BETWEEN (('1787763011', x'', '䂖<')) AND ((0.7621081852966575, NULL, NULL)))) NOT NULL)); -- 0ms;
SELECT CAST(t1.c33 AS REAL) FROM vt0 WHERE (x'');SELECT DISTINCT ((((t1.c40)LIKE('v''࢛ᑱ7')))!=((~ ('-523629938')))) FROM vt1, vt0, t1 NOT INDEXED; -- 0ms;
SELECT SUM(((-1022564908)%(vt1.c2))) OVER () FROM t1, vt1, vt0 WHERE (((((x'0c1b')IS NOT(0Xffffffff9d56d06c))) BETWEEN (((NULL) BETWEEN (0Xffffffffd77f4138) AND (-1620446864))) AND ((((('Z>')OR(0.17931489771971876)))OR(x'a22b'))))) LIMIT 2129790329; -- 0ms;
SELECT DISTINCT LIKELIHOOD(t1.c40, 0.19813633926189755) COLLATE NOCASE FROM t1, vt1, vt0; -- 0ms;
SELECT ALL 'k,}w}' FROM t1, vt0; -- 0ms;
SELECT DISTINCT x'3252' FROM t1 WHERE (((((((x'3d20')+(x'ccfe90ba')))OR(((x'')>=('-205788764')))))AND(x'' COLLATE RTRIM))) ORDER BY ((LIKE(t1.c33, vt1.c1)) IS FALSE)  NULLS LAST;SELECT DISTINCT NULLIF(DISTINCT CAST('۩mè}*+''I' AS INTEGER), ((t1.c33) NOT NULL)), highlight(0x86c1a3e, t1.c0 COLLATE BINARY, '-1655254932', t1.c1), (((x'' IN ())) NOT BETWEEN ((((t1.c40)) NOT BETWEEN ((vt0.c0)) AND ((t1.c40)))) AND (((vt1.c2)>(t1.c0)))) FROM t1, vt0 INNER JOIN vt1 ON (- ((+ (t1.c40)))); -- 0ms;
SELECT DISTINCT LIKELY(COUNT(vt1.c2)) FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT ((TYPEOF(x'97b9'))>((t1.c33 IN (vt1.c1)))) FROM vt1, t1 WHERE ((+ ((~ (0xffffffff985f5376))))); -- 0ms;
SELECT ((x'0404') IS TRUE), ((((CAST(t1.c1 AS REAL))OR('∢h')))AND(((vt1.c0)=(1.979610071E9)))), ((((((t1.c1) NOT BETWEEN (vt1.c2) AND (t1.c1)))OR((((t1.c2, t1.c2, t1.c33, t1.c2, t1.c2)) BETWEEN ((vt1.c2, t1.c40, vt1.c1, t1.c40, t1.c1)) AND ((vt1.c0, t1.c1, vt0.c0, t1.c40, vt1.c2))))))OR(vt1.c0)) FROM t1, vt0 WHERE (((CAST(1952091814 AS NUMERIC)) BETWEEN (((x'') NOT NULL)) AND (x'' COLLATE NOCASE)));SELECT ALL SUBSTR(((t1.c40)<<(t1.c40)), t1.c40 COLLATE NOCASE), ((775640162) NOT BETWEEN (ABS(t1.c88)) AND (((((((((vt0.c0)OR(vt1.c1)))OR(t1.c33)))AND(vt1.c1)))OR(t1.c33)))), json(((t1.c33) BETWEEN (NULL) AND (t1.c1))) FROM vt1, vt0, t1; -- 1ms;
SELECT ALL ((CAST(vt1.c1 AS INTEGER)) IS FALSE), ((t1.c2) ISNULL) COLLATE BINARY, LIKELY((((vt1.c1))<>((vt1.c0)))) FROM vt1, t1, vt0 WHERE (CASE WHEN ((0X5019da9) BETWEEN (-317065917) AND ('-1429132807')) THEN ((((((((NULL)OR(x'1ee9')))OR(-2.129199785E9)))AND(7.74003421E8)))OR('1973852280')) WHEN CAST('-1984547612' AS BLOB) THEN ((4.84205612E8)>(NULL)) WHEN ((0.2528563297445563) BETWEEN (NULL) AND (0.7799762614768051)) THEN ((((-2112771425)OR(x'')))OR(NULL)) ELSE (0.40403744444240053 IN ()) END) GROUP BY vt0.c0 HAVING '31490870'; -- 0ms;
SELECT ALL (((t1.c88, vt1.c0, t1.c40)) NOT BETWEEN ((((t1.c88) ISNULL), ((t1.c40)||(vt0.c0)), ((t1.c33) BETWEEN (t1.c1) AND (t1.c40)))) AND ((t1.c88 COLLATE RTRIM, t1.c0 COLLATE BINARY, TRIM(t1.c88)))) FROM vt1, vt0, t1; -- 0ms;
SELECT ALL (((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c2)) IN (((((vt0.c0)OR(t1.c2)))AND(t1.c2)), TOTAL_CHANGES())), COUNT(((((((((((((((((t1.c1)OR(t1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(t1.c33)))AND(vt0.c0)))AND(vt1.c0)))AND(t1.c33)))OR(t1.c33))), (- ((((t1.c0)) NOT BETWEEN ((vt1.c2)) AND ((t1.c40))))) FROM vt1, vt0 WHERE (((((((NULL)IS NOT(x'')))AND(7.21489668E8 COLLATE NOCASE)))OR('1146263872')));SELECT DISTINCT ((0.024719711761608254)IS(0.7497549814668415)) FROM vt0, vt1 GROUP BY (t1.c33 IN (9.82153675E8)) COLLATE RTRIM, ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0, t1.c88, vt0.c0))<((vt0.c0, vt0.c0, t1.c2)))) AND (t1.c33)), CAST(((((t1.c0)OR(t1.c0)))OR(t1.c2)) AS BLOB) HAVING ((vt1.c2) NOTNULL) COLLATE NOCASE;SELECT DISTINCT t1.c1 FROM t1 WHERE (CASE 0.11419830873294412  WHEN -5315626 THEN x'' ELSE ((x'15df')>=(NULL)) END) ORDER BY LOWER((((t1.c0)) BETWEEN ((vt1.c2)) AND ((vt1.c1)))) DESC  NULLS LAST;SELECT CAST(t1.c1 AS INTEGER) COLLATE NOCASE FROM t1, vt0, vt1 WHERE ((CASE WHEN 0xd3ea90a THEN 1.524288573E9 END IN ())); -- 0ms;
SELECT DISTINCT NULL FROM vt0, vt1 WHERE (((CAST(x'' AS BLOB))-(''))); -- 0ms;
SELECT ALL (((t1.c40))!=((vt1.c1))) COLLATE BINARY, AVG(CAST(t1.c88 AS TEXT)) OVER ( ROWS  CURRENT ROW), CAST(((vt1.c2) BETWEEN (t1.c0) AND (t1.c0)) AS REAL) FROM vt0, t1, vt1 WHERE ((ABS('-43737613') IN ())); -- 0ms;
SELECT (((t1.c33)) BETWEEN ((CASE vt1.c0  WHEN t1.c1 THEN '' WHEN vt1.c2 THEN vt1.c2 WHEN t1.c1 THEN vt1.c0 END)) AND ((((vt1.c1) IS TRUE)))) FROM vt0, t1 WHERE (((CASE 0.7144426359334469  WHEN NULL THEN 0.35302062313209026 ELSE '-1725209754' END)LIKE(ROUND(x'', '956852838'))));SELECT ALL GROUP_CONCAT(((t1.c0) IS TRUE) COLLATE BINARY) FROM vt0, t1, vt1; -- 1ms;
SELECT CAST((((t1.c2)) NOT BETWEEN ((t1.c33)) AND ((NULL))) AS NUMERIC) FROM vt0, vt1 ORDER BY ((((t1.c88)||(t1.c0))) BETWEEN ((t1.c33 IN (t1.c0, t1.c40))) AND (((('*', '0.3008289421812942', t1.c88))<=((vt1.c1, vt1.c2, vt0.c0))))) DESC  NULLS LAST;SELECT TOTAL((vt1.c0 IN (vt1.c2, vt1.c0))) OVER () FROM vt0, vt1, t1; -- 0ms;
SELECT ALL IFNULL(((t1.c33) NOT BETWEEN (t1.c88) AND (vt1.c2)), ((vt0.c0)>(t1.c2))) FROM t1, vt0;SELECT ALL (+ (UPPER(DISTINCT vt0.c0))) FROM t1, vt0, vt1; -- 0ms;
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((((((NULL)<<(NULL))))>=(((- ('-984013849')))))); -- 0ms;
SELECT (((NOT (t1.c0))) IS TRUE), TOTAL(((t1.c1) ISNULL)), ((vt0.c0 COLLATE NOCASE)GLOB(((t1.c2) NOT BETWEEN (NULL) AND (t1.c1)))) FROM vt0, vt1, t1 NOT INDEXED; -- 0ms;
SELECT vt1.c0, CAST(((vt0.c0)*(t1.c0)) AS TEXT), ((((((((((((((t1.c1)>>(vt0.c0)))OR(AVG(t1.c33))))AND(t1.c40 COLLATE RTRIM)))OR(COUNT(*))))OR(CAST(vt0.c0 AS TEXT))))OR((0.5485396003424845 IN (vt0.c0)))))OR((t1.c1 IN ()))) FROM vt0, vt1, t1 WHERE (CAST(CASE '-1317113151'  WHEN x'' THEN '' WHEN 0.4919737425340217 THEN '|\s#P' WHEN x'' THEN '' END AS REAL)); -- 0ms;
SELECT DISTINCT ((((((t1.c40) NOTNULL))OR('0.8168632015507702')))OR(((vt1.c1) NOT BETWEEN (t1.c1) AND (t1.c88)))), (((vt1.c2 IN (t1.c2))) NOTNULL), vt1.c0 COLLATE BINARY FROM vt1, t1; -- 0ms;
SELECT DISTINCT ((((((((t1.c2)AND(t1.c0)))AND(t1.c33)))AND(CAST(t1.c33 AS BLOB))))OR((t1.c40 IN ()))) FROM vt1, vt0, t1; -- 0ms;
SELECT ALL TOTAL(((t1.c88)>(vt0.c0))) FROM t1 INDEXED BY i10 INNER JOIN vt1 ON ((((vt0.c0)!=(vt1.c1))) NOT BETWEEN (CASE WHEN t1.c88 THEN vt1.c0 ELSE vt0.c0 END) AND (((t1.c33) NOT NULL)));SELECT DISTINCT CASE WHEN (vt1.c2 IN ()) THEN UPPER(DISTINCT vt1.c1) WHEN ((vt1.c2)>>(vt0.c0)) THEN (NOT (vt1.c0)) WHEN CASE t1.c1  WHEN t1.c33 THEN vt1.c2 ELSE vt0.c0 END THEN CASE WHEN vt1.c2 THEN t1.c1 ELSE vt1.c2 END ELSE (((NULL))<((t1.c0))) END, (+ ('885241438')), 0X1e86c149 FROM t1, vt0, vt1 WHERE ((((+ ('\r .7Hc}Xm'))) IS FALSE)); -- 1ms;
SELECT DISTINCT LAG(CASE CAST(t1.c33 AS BLOB)  WHEN ((t1.c40)GLOB(vt1.c2)) THEN vt1.c0 WHEN (t1.c0 IN (x'', t1.c0)) THEN (t1.c88 IN ()) WHEN ((vt1.c1)IS NOT(t1.c0)) THEN RTRIM(t1.c0) END, ((t1.c33 IN ()) IN ()), ((vt1.c2)LIKE(((((vt1.c0)OR(t1.c2)))OR('-9223372036854775808'))))) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS) FROM t1, vt1 GROUP BY ABS(vt1.c2 COLLATE RTRIM) ORDER BY (((- (0xd0f9164)))GLOB((vt0.c0 IN (t1.c40)))), ((((t1.c88)!=(vt1.c0))) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (CAST(x'' AS BLOB)))  NULLS FIRST, ((t1.c33) NOT BETWEEN (vt1.c1) AND (t1.c40)) COLLATE BINARY;SELECT (TOTAL(vt1.c0) IN (((t1.c2)|(vt1.c2)))) FROM vt0;SELECT ((t1.c0)-(vt1.c0)) COLLATE RTRIM COLLATE RTRIM, ROW_NUMBER() OVER (), COUNT(t1.c0) FROM t1, vt0, vt1 WHERE ((x'7e93' IN ())); -- 0ms;
SELECT DISTINCT AVG(load_extension(vt1.c0)) OVER () FROM vt1, vt0 WHERE (CAST(CAST(0x4cfab36f AS REAL) AS INTEGER)); -- 0ms;
SELECT ALL (((t1.c88, vt1.c1, t1.c40)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((vt1.c0) NOT BETWEEN (t1.c2) AND (t1.c1)), (t1.c1 IN (vt1.c2)))) AND ((t1.c0 COLLATE BINARY, COUNT(*), ((t1.c0)>(vt0.c0))))), (((t1.c2, 'Rz', t1.c88)) NOT BETWEEN ((IFNULL(DISTINCT t1.c88, vt1.c2), CASE t1.c33  WHEN t1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t1.c40 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c2 END, ((((vt1.c2)AND(t1.c2)))OR('-770045626')))) AND (((('gꈰ')<('荤J')), (((t1.c88, t1.c0, '0.5915183126935454', t1.c1, t1.c1))=((t1.c1, t1.c2, vt1.c0, vt1.c1, vt1.c2))), ((t1.c40) NOTNULL)))), AVG(((((t1.c2)AND(t1.c40)))AND(t1.c88))) COLLATE BINARY FROM t1;SELECT ALL (((t1.c33)) NOT BETWEEN ((((((t1.c2)AND(NULL)))AND(t1.c1)))) AND ((TOTAL(vt1.c1)))) FROM t1, vt0;SELECT ALL MIN((+ (t1.c1))) FROM vt1, vt0;SELECT ((((t1.c0)<<(vt1.c2))) IS FALSE) FROM vt1, t1, vt0 GROUP BY CAST(((vt0.c0) NOTNULL) AS INTEGER) HAVING CAST(GROUP_CONCAT(vt1.c2) AS INTEGER); -- 0ms;
SELECT DISTINCT TOTAL(((vt1.c0) ISNULL)) OVER () FROM t1, vt0, vt1 WHERE (''); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, vt1; -- 0ms;
SELECT (((t1.c88, t1.c1, t1.c33)) NOT BETWEEN ((CAST(vt0.c0 AS REAL), (- (vt1.c0)), vt1.c2)) AND (((t1.c40 IN ()), ((((NULL)OR(t1.c2)))AND(vt1.c1)), GROUP_CONCAT(vt0.c0)))) FROM vt1, t1, vt0; -- 0ms;
SELECT DISTINCT AVG(((t1.c33) NOTNULL)) OVER () FROM vt0, vt1, t1 WHERE ((((((((('1751611984')OR(((0Xffffffffb5a3a957) ISNULL))))AND(COALESCE(DISTINCT NULL, x''))))OR(((NULL) NOT BETWEEN (0.027156231294319433) AND ('*댛l\nrl')))))AND(NULL))); -- 0ms;
SELECT DISTINCT t1.c1 FROM vt0 WHERE ((NOT (((('551975618')) NOT BETWEEN ((0.6934051805078819)) AND ((0.04405432915075047)))))) GROUP BY CAST(vt1.c1 AS REAL) HAVING CAST((t1.c33 IN ()) AS NUMERIC) ORDER BY ((CAST(t1.c2 AS TEXT))+(((t1.c0)/(t1.c33))))  NULLS FIRST, CHAR(t1.c2 COLLATE NOCASE) ASC;SELECT DISTINCT (((UNLIKELY(vt0.c0)))>=((CAST(t1.c2 AS TEXT)))) FROM vt1, t1;SELECT DISTINCT (MIN(t1.c40) IN ()), x'', ((vt1.c0) BETWEEN (vt1.c1 COLLATE NOCASE) AND (((t1.c33)<>(t1.c2)))) FROM vt1;SELECT GROUP_CONCAT((~ (vt0.c0))) OVER () FROM vt0, vt1 ORDER BY ((((vt1.c2)-(vt1.c1))) BETWEEN (((t1.c88) BETWEEN (t1.c33) AND (t1.c33))) AND (((NULL)>(t1.c0)))) DESC  NULLS FIRST;SELECT CAST(((t1.c88) NOT BETWEEN (t1.c2) AND (t1.c88)) AS BLOB), MIN(((t1.c40)<<(vt1.c2))), MIN(((((t1.c33)OR(t1.c88)))AND(t1.c40))) FROM t1, vt0, vt1; -- 0ms;
SELECT DISTINCT COALESCE(((t1.c88)*(vt0.c0)), (~ (t1.c1))) FROM vt1, t1 WHERE ((((((('d S%9')=('TFFckj')))AND(CASE '-1873233208'  WHEN x'af31' THEN x'' WHEN 3.094104E7 THEN x'' WHEN NULL THEN '375052694' END)))OR((~ ('g{\k<*v')))));SELECT DISTINCT ROW_NUMBER() OVER (), TOTAL((t1.c2 IN (t1.c88, vt1.c1))) OVER (), t1.c1 FROM t1, vt1; -- 0ms;
SELECT LIKELIHOOD(t1.c88, 0.7894677059342542) FROM t1, vt1, vt0 WHERE ((json_array_length(0X6f558ac9, '82984417') IN ())); -- 2ms;
SELECT DISTINCT CAST((vt1.c1 IN ()) AS TEXT) FROM vt1, vt0, t1 WHERE (CAST((+ (5378861)) AS TEXT)); -- 0ms;
SELECT DISTINCT x'', NTILE(vt1.c2 COLLATE NOCASE) OVER (), CASE (t1.c0 IN ())  WHEN ABS(DISTINCT t1.c2) THEN ((t1.c88)|(vt1.c0)) END FROM vt0, vt1;SELECT DISTINCT (((t1.c33 IN ()))/(((vt1.c1) BETWEEN ('*/>eqZ3') AND (t1.c88)))), (+ (COUNT(t1.c2))), (NOT (t1.c0 COLLATE BINARY)), 0xc564ec7, (((vt1.c2 IN ())) IS FALSE) FROM t1, vt0 WHERE (((TIME(721489668, NULL, 0.013220559276319155, x'', NULL)) BETWEEN ('715804856') AND ('4J')));SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0)))=((t1.c2 IN (t1.c33, x'', '')))) FROM t1, vt0 WHERE (CASE (6.86491954E8 IN ())  WHEN (NOT ('-9988032')) THEN NULL END);SELECT ALL CAST(t1.c88 AS INTEGER) COLLATE BINARY FROM t1, vt0, vt1 ORDER BY ((((vt1.c2)OR(t1.c33)))||((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c40))))) ASC; -- 1ms;
SELECT DISTINCT CAST(((t1.c1) NOTNULL) AS REAL) FROM vt1, t1 WHERE (((((NULL) IS TRUE)) BETWEEN ((((NULL))=((x'00a1')))) AND (TRIM('헕g', 0.07677051468395324)))) LIMIT 163533731 OFFSET -403218649; -- 0ms;
SELECT DISTINCT (((t1.c1 IN ())) IS FALSE), ((((t1.c2) BETWEEN (t1.c1) AND (vt1.c2)))/(((vt1.c0) NOT BETWEEN (t1.c33) AND (t1.c88)))), (((((t1.c33, t1.c40, t1.c88)) BETWEEN ((t1.c2, t1.c33, t1.c2)) AND ((vt0.c0, vt1.c2, t1.c0)))) NOT NULL) FROM t1;SELECT DISTINCT ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE NOCASE COLLATE BINARY FROM vt1, vt0, t1 WHERE (((LIKELIHOOD(DISTINCT x'2316', 0.33414243042664016)) NOT BETWEEN (CASE '-105612918'  WHEN x'' THEN 0.28024249760419806 WHEN x'' THEN '' WHEN 0.3535815472893318 THEN 9.82153675E8 WHEN NULL THEN 'a+' WHEN 0.9273378437678037 THEN x'' ELSE x'' END) AND (NULLIF(DISTINCT NULL, 5378861)))); -- 0ms;
SELECT DISTINCT LAG((((CAST(t1.c1 AS BLOB), ((t1.c33) IS TRUE), (+ (t1.c40))))==((LAST_INSERT_ROWID(), LIKELIHOOD(DISTINCT t1.c1, 0.8402714562369504), (- (t1.c33))))), CASE (~ (t1.c88))  WHEN (~ (t1.c1)) THEN ((t1.c33) BETWEEN ('-58819240') AND (t1.c0)) WHEN ((((t1.c2)OR(t1.c40)))AND(t1.c1)) THEN ((t1.c88) NOT BETWEEN (t1.c0) AND (t1.c88)) WHEN ((t1.c40) NOT NULL) THEN CASE t1.c40  WHEN t1.c0 THEN t1.c40 END ELSE (+ (t1.c0)) END, ((((((((0.24947166194840897)AND(((t1.c2)OR(t1.c0)))))OR(((t1.c33)=(t1.c40)))))OR(((t1.c2)+(NULL)))))AND((t1.c40 IN ())))) OVER (), ((COUNT(*))!=(t1.c40 COLLATE RTRIM)), CAST(((((vt1.c2)AND(t1.c33)))AND(vt1.c0)) AS TEXT) FROM t1;SELECT CAST(MAX(t1.c0) AS BLOB) FROM vt0, vt1 WHERE (((((((((((0.9813794592347814)OR('')))OR(0.6128528492081371)))OR('0.8453816638771087')))OR(x''))) IS TRUE)) GROUP BY ((0.3857309248241908)>=((((t1.c1))>((0.6237534362904817))))), (((vt1.c2 IN ()))AND((((vt1.c0))<((t1.c2))))), ((vt1.c2 COLLATE NOCASE) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(t1.c2))) AND ((vt1.c0 IN (t1.c2, vt0.c0)))) LIMIT 334257295 OFFSET -476498540;SELECT vt1.c1 FROM vt1, vt0, t1 WHERE (((((('\n\X')) NOT BETWEEN ((0.1718822197612433)) AND ((0Xffffffffda39c419)))) IS TRUE)); -- 0ms;
SELECT CAST(SUM(vt1.c2) AS INTEGER), HEX(DISTINCT ((t1.c40)<(NULL))), (((((t1.c0)) BETWEEN ((t1.c88)) AND ((t1.c2)))) NOT BETWEEN (((((x'')AND('')))OR(0x64048695))) AND ((((vt1.c1))=((t1.c2))))) FROM t1 WHERE (((NULL COLLATE RTRIM) NOTNULL)) ORDER BY 'YAmjO'  NULLS LAST, (((vt0.c0)) BETWEEN (((0.7204565163010477 IN ()))) AND ((((((((((t1.c2)AND(t1.c0)))OR(NULL)))OR(t1.c2)))OR(t1.c40))))) ASC  NULLS LAST, TRIM('Ms)&bB>Ej')  NULLS LAST;SELECT ((('|)R'''))!=(((((vt1.c2)) NOT BETWEEN ((t1.c88)) AND (('')))))), TOTAL(((t1.c1) NOT BETWEEN (t1.c88) AND (t1.c33))), load_extension(COUNT(t1.c33), CASE WHEN vt1.c1 THEN t1.c0 WHEN vt1.c0 THEN t1.c33 WHEN t1.c1 THEN vt1.c0 END) FROM t1, vt0;SELECT DISTINCT vt1.c1 FROM vt0 ORDER BY (((0x3c69f7c8 IN ())) BETWEEN (vt1.c1) AND ((t1.c40 IN ()))) DESC  NULLS LAST;SELECT ALL (+ (((t1.c1)<=(vt0.c0)))), ((((t1.c0)OR((t1.c1 IN ()))))AND(vt1.c2)), CASE WHEN ((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN ((vt0.c0) IS TRUE) END FROM vt0, t1 WHERE (CASE x''  WHEN '1644715891' THEN ((NULL) BETWEEN (NULL) AND ('2[6t洐5AD')) WHEN (('0Q>t') BETWEEN (0.5239494696814079) AND ('346633982')) THEN (('-2122645343')<(0X261cfb7c)) WHEN ((0.8977619915503651)-(NULL)) THEN CAST('568447526' AS NUMERIC) END);SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0, t1 NOT INDEXED, vt1 WHERE (ABS(NULLIF(DISTINCT 0Xffffffff8de27dc4, 0.3849189501021606))); -- 0ms;
SELECT DISTINCT CASE (((((((('|ZD_')AND(t1.c0)))OR(NULL)))AND(t1.c0)))OR(vt0.c0))  WHEN ((t1.c33) ISNULL) THEN GROUP_CONCAT(t1.c2) WHEN ((t1.c40)<(t1.c2)) THEN CAST(t1.c33 AS NUMERIC) WHEN CAST(t1.c33 AS TEXT) THEN ((t1.c0) NOT NULL) ELSE ((vt1.c1) BETWEEN (t1.c1) AND (t1.c2)) END, GROUP_CONCAT(CASE WHEN t1.c2 THEN t1.c2 ELSE vt1.c1 END), CASE WHEN CASE t1.c88  WHEN t1.c2 THEN t1.c88 END THEN COUNT(*) ELSE ((t1.c88) NOT BETWEEN (t1.c40) AND (t1.c40)) END FROM vt1, vt0 GROUP BY t1.c1;SELECT ALL t1.c40 FROM t1, vt0, vt1; -- 0ms;
SELECT DISTINCT (+ (((t1.c40) BETWEEN (vt1.c0) AND (t1.c88)))) FROM t1, vt1; -- 0ms;
SELECT DISTINCT (((~ (vt1.c0)))GLOB(((t1.c0) NOT NULL))) FROM vt1, vt0 WHERE ((((x'6c55', '-1527187322', 0.649027961629068)) NOT BETWEEN ((SQLITE_VERSION(), (x'' IN (x'3d5a', x'27b7', 0x41595e3a)), ('1636924400' IN ()))) AND ((LIKELIHOOD('1363696908', 0.7164596115455312), 0.3374665724446977 COLLATE RTRIM, ((x'f36e')LIKE(x'b91e'))))));SELECT ALL ((CAST(t1.c2 AS NUMERIC))>(HEX(t1.c88))) FROM vt1, vt0, t1 WHERE (CASE WHEN (('VY')OR(NULL)) THEN '-1850330642' COLLATE BINARY END); -- 0ms;
SELECT DISTINCT ((SQLITE_VERSION())LIKE(((vt1.c0)LIKE(NULL)))), ((- (t1.c0)) IN ((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((t1.c40))))), ((((vt1.c1 COLLATE BINARY)OR(((vt1.c1)<<('K.DK猳Vs')))))OR(CAST(t1.c0 AS TEXT))) FROM vt1, t1 LIMIT 175220270; -- 0ms;
SELECT AVG((+ (t1.c33))) FROM vt1 WHERE (x'');SELECT ALL json_type(vt1.c0) COLLATE NOCASE FROM vt0, vt1, t1 ORDER BY (((t1.c0)) BETWEEN ((((((t1.c33)OR('-105612918')))AND(vt1.c0)))) AND ((vt1.c2 COLLATE BINARY))), (((t1.c40)) NOT BETWEEN ((((vt1.c1) NOT NULL))) AND (((t1.c88 IN ())))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT LTRIM(((t1.c2)<=(t1.c1)), ((t1.c88)=(vt1.c0))) FROM vt0 ORDER BY t1.c88;SELECT DISTINCT CAST((t1.c33 IN ()) AS BLOB) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((json_remove(vt0.c0, t1.c88)) NOTNULL), ((((((((((t1.c40) NOT NULL))AND(UPPER(DISTINCT 0xffffffffd1c78492))))AND((~ (NULL)))))AND((((t1.c2, t1.c1, t1.c0))>((t1.c1, t1.c0, t1.c0))))))AND(((vt1.c2)=(t1.c2)))), (((((((vt1.c2))>=((t1.c33))))AND(CASE WHEN vt1.c1 THEN t1.c0 ELSE t1.c33 END)))OR(t1.c2)) FROM vt1, vt0 GROUP BY 0.26155750480270257 HAVING ((((vt1.c0)<=(t1.c1))) IS TRUE);SELECT DISTINCT ((TOTAL(461888210)) NOT NULL) FROM t1 WHERE (CAST((NOT ('-1753779371')) AS INTEGER)) ORDER BY CASE LOWER(DISTINCT vt0.c0)  WHEN ((t1.c33)<>(t1.c2)) THEN (~ (t1.c0)) ELSE (~ (t1.c88)) END ASC, ((UPPER(DISTINCT vt1.c0))<((((t1.c1, vt1.c2, t1.c2))>=((vt0.c0, t1.c1, t1.c33))))) DESC  NULLS LAST, (((((t1.c33) BETWEEN (t1.c1) AND (vt0.c0))))<=((CAST(t1.c88 AS TEXT))));SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1, t1, vt0 INDEXED BY i10 WHERE (((0.7976579344057705) BETWEEN (NULL) AND (-1.914536508E9)) COLLATE RTRIM) GROUP BY ((t1.c40)IS(t1.c40)) COLLATE NOCASE HAVING vt0.c0 LIMIT -1384652486 OFFSET -1019151868;SELECT ALL x'', GROUP_CONCAT(x'1acb'), ((((vt0.c0)%(t1.c88))) NOT NULL), 0.16742675657513773, (((((vt1.c2)) BETWEEN ((t1.c88)) AND ((vt1.c2)))) NOTNULL) FROM vt0 WHERE ((- (CAST(0X3eb24bac AS TEXT))));SELECT CASE ((t1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))  WHEN highlight(t1.c88, x'', t1.c1, t1.c0) THEN vt1.c0 ELSE highlight(t1.c1, t1.c0, vt1.c2, vt0.c0) END FROM vt0 WHERE (CASE CASE WHEN x'76f5' THEN 0.06186629765577467 ELSE NULL END  WHEN NULL THEN ('-1914536508' IN ()) END);SELECT ((((vt1.c2) IS TRUE))||(CASE t1.c40  WHEN t1.c0 THEN NULL ELSE vt1.c1 END)) FROM vt0, vt1, t1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(QUOTE(CASE WHEN t1.c0 THEN t1.c1 END)) OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP), CASE CAST(vt1.c2 AS BLOB)  WHEN (vt1.c2 IN ()) THEN ((vt1.c2) IS TRUE) END, ((((GROUP_CONCAT(vt0.c0))AND(((t1.c1)*(t1.c2)))))OR(((t1.c1) ISNULL))) FROM t1;SELECT DISTINCT (((INSTR(t1.c2, t1.c88)))>((((vt0.c0) BETWEEN (vt1.c1) AND (t1.c88))))) FROM vt1 WHERE (CASE WHEN ((0.5814614725772662)=('辰P]W7')) THEN ((((0.7163584591060115)AND(-1.005592188E9)))AND('')) END) GROUP BY (NOT (CASE WHEN t1.c40 THEN t1.c33 WHEN NULL THEN x'7044' WHEN t1.c1 THEN vt1.c0 END)), LIKELY(DISTINCT CASE vt1.c2  WHEN t1.c88 THEN vt1.c2 ELSE t1.c0 END), t1.c2 HAVING (((+ (x'b504')))|((((x'4c7a'))!=((vt1.c0)))));SELECT DISTINCT ((t1.c0) NOT BETWEEN (((t1.c88)AND(t1.c1))) AND (((((t1.c1)AND(t1.c1)))OR(vt1.c0)))) FROM vt0, t1;SELECT DISTINCT ((((0.8990364610865492)&(t1.c2)))*(((x'') NOT NULL))) FROM vt1, vt0, t1 WHERE ((+ (x'3027' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt1, vt0, t1; -- 1ms;
SELECT ALL COUNT(*) OVER ( GROUPS (((((t1.c0, NULL, 0.8161305919682081, t1.c1, vt1.c1))<=((t1.c1, NULL, vt1.c1, t1.c0, t1.c33))))>('-739684811' COLLATE BINARY)) PRECEDING) FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT (+ (LTRIM(0.7671735513796968, t1.c88))) FROM t1, vt0, vt1; -- 0ms;
SELECT CASE WHEN vt1.c1 THEN MIN(-1005592188) END, ((COUNT(*)) NOT BETWEEN (((t1.c33)*(x'51e6'))) AND (0.472993117807488)), t1.c0, '18216018', CASE WHEN (vt1.c1 IN (t1.c88, vt1.c0)) THEN ((t1.c0)+(vt0.c0)) ELSE json_quote(t1.c0) END FROM vt0, vt1 INDEXED BY i10, t1 INDEXED BY i10 WHERE ((((+ (5.80835079E8))) BETWEEN (((0.054726009025490074)LIKE(x''))) AND (((NULL) BETWEEN (NULL) AND (0.02501127802316161)))));SELECT DISTINCT (((((t1.c2))!=((x'c5a8')))) IS TRUE) FROM vt1, t1, vt0; -- 0ms;
SELECT ALL (((t1.c0)IS NOT(t1.c0)) IN (((vt1.c1)&(vt1.c1)))), 0.10132123501658685, ((LIKELIHOOD(vt1.c1, 0.7092445742499284))+(((vt0.c0)+(vt1.c0)))) FROM vt0;SELECT ((((((t1.c88)OR(t1.c88)))OR(vt1.c0))) NOT BETWEEN (((vt1.c1)*(t1.c2))) AND (t1.c33 COLLATE RTRIM)), (((CAST(t1.c40 AS NUMERIC)))<=((((t1.c1)+(t1.c88))))), (NOT (vt1.c0)) COLLATE NOCASE FROM vt1, t1; -- 0ms;
SELECT ALL GROUP_CONCAT(CASE vt1.c1  WHEN t1.c33 THEN vt0.c0 END), t1.c2, AVG(((vt0.c0)IS(t1.c2))) OVER (), CAST((- (vt1.c1)) AS NUMERIC), COUNT(((t1.c88)>=(vt1.c0))) OVER ( ORDER BY t1.c33 ASC) FROM vt0, vt1 WHERE ((((NULL)) BETWEEN ((x'')) AND (((('1827459331')GLOB('-251590731'))))));SELECT ALL ((LIKELIHOOD(t1.c40, 0.25881196303789844))>(((t1.c33)LIKE(vt1.c2)))), ((CASE WHEN t1.c40 THEN t1.c33 END)||(((t1.c33) BETWEEN (vt1.c0) AND (vt1.c0)))), TRIM(DISTINCT 0.46511922120424487), COUNT(*) OVER ( ORDER BY (t1.c2 IN ()) COLLATE NOCASE ASC), CASE WHEN ((vt1.c1) NOTNULL) THEN CASE vt1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c40 THEN t1.c33 WHEN vt1.c0 THEN t1.c1 ELSE t1.c33 END WHEN GROUP_CONCAT(vt1.c0) THEN vt1.c1 WHEN AVG(t1.c33) THEN (((t1.c40, x'', vt1.c1, t1.c40, t1.c1))>((vt1.c2, t1.c88, t1.c33, vt1.c2, t1.c2))) ELSE ((t1.c40)GLOB(vt0.c0)) END FROM vt1 INDEXED BY i10, t1 GROUP BY x'52fe';SELECT NTH_VALUE(HEX(DISTINCT t1.c1) COLLATE BINARY, ((((((((((((vt1.c1)AND(vt1.c2)))OR(vt1.c0)))OR(t1.c2)))OR(t1.c40)))AND(CAST(NULL AS REAL))))OR(((vt1.c2) BETWEEN (vt1.c1) AND (t1.c40))))) OVER () FROM t1, vt1, vt0 ORDER BY -342810666 DESC  NULLS FIRST, (((0.8550050409646746)>(t1.c88)) IN ()) DESC  NULLS LAST;SELECT ((vt1.c2) BETWEEN (t1.c88) AND (t1.c40)) COLLATE NOCASE FROM vt0;SELECT CAST(CAST(t1.c40 AS INTEGER) AS REAL), (((((vt1.c0, t1.c88, t1.c1))>((t1.c88, t1.c0, t1.c2)))) BETWEEN ((x'cf4f' IN ())) AND (((NULL)%(x'c98f')))), ((((((((t1.c88)AND(vt1.c1)))AND(vt1.c0)))OR(t1.c40)))AND(vt0.c0)) COLLATE NOCASE FROM vt0, vt1, t1 WHERE ((((0.25368442399987634)) BETWEEN ((('P&AK' IN (NULL, 0.4905565619406602)))) AND ((((((NULL)OR('')))OR('0.6886482732545293')))))); -- 0ms;
SELECT DISTINCT LAG(((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((t1.c1)OR(t1.c40)))AND(t1.c40))) AND (((vt1.c0) IS TRUE))), 0x5f4700e8, (((vt1.c2 COLLATE RTRIM))==((432316637)))) OVER () FROM vt0, t1, vt1 GROUP BY DATE(CAST(t1.c40 AS TEXT), (- (0.19863698658104367)), (((t1.c2))>=((t1.c0)))), (((t1.c1)) NOT BETWEEN ((vt1.c2 COLLATE RTRIM)) AND ((((((t1.c40)AND(t1.c2)))OR(vt1.c0))))), ((t1.c1 IN ()) IN ()) HAVING CASE WHEN json_insert(vt1.c2, t1.c0, vt1.c0) THEN ((vt1.c1) ISNULL) ELSE ((vt1.c1)>(vt1.c2)) END; -- 0ms;
SELECT DISTINCT (((HEX(t1.c40)))<(((~ (vt1.c2))))) FROM vt1, vt0, t1 WHERE (TRIM(((((((((x'')OR(0.8733605125730028)))AND('1107501907')))OR(0.8179069202852506)))OR('765618305')))) LIMIT 1990615856; -- 0ms;
SELECT DISTINCT ((CASE x''  WHEN 'fm' THEN t1.c33 WHEN t1.c0 THEN t1.c88 WHEN 2.72627225E8 THEN t1.c1 END)LIKE((t1.c33 IN (t1.c88)))) FROM vt1, t1, vt0 WHERE (((((0X674d8908)/(0.9957848350948629))) NOT BETWEEN ((+ (NULL))) AND (((x'a88c')AND(0.5418084404905109))))) GROUP BY (((vt1.c1)) NOT BETWEEN ((((t1.c40)IS NOT(t1.c33)))) AND (((t1.c1 IN ())))) HAVING (- (((t1.c2) BETWEEN (x'') AND (vt1.c0)))); -- 0ms;
SELECT ALL (((NULL))<=((UPPER(vt0.c0)))) FROM vt0, vt1 INDEXED BY i10 WHERE (CAST(((NULL)GLOB('')) AS NUMERIC)) LIMIT 662763555;SELECT ALL GROUP_CONCAT((- (vt1.c2))) OVER ( ORDER BY ((((t1.c0)-(-962824407)))IS NOT(UPPER(t1.c0))) DESC RANGE BETWEEN (+ (((vt1.c1)|('')))) PRECEDING AND CASE WHEN CAST(t1.c40 AS TEXT) THEN (t1.c0 IN (vt1.c2)) ELSE (+ (vt1.c1)) END FOLLOWING EXCLUDE CURRENT ROW), TOTAL(((vt1.c1)GLOB(vt1.c1))), json_patch((NOT (t1.c88)), t1.c33 COLLATE NOCASE) FROM vt1, vt0, t1 WHERE (((((((x'')) NOT BETWEEN ((x'8177')) AND ((1.936787099E9)))))=(((('-E')AND(x'0da0'))))));SELECT DISTINCT ((((((t1.c33)AND(vt1.c2)))OR(vt0.c0)))-((((t1.c88))<=((t1.c1))))), vt0.c0, CAST((((vt0.c0)) BETWEEN ((t1.c88)) AND ((t1.c0))) AS NUMERIC) FROM t1, vt0, vt1 GROUP BY (- (((t1.c33) IS TRUE))) LIMIT -1410445141; -- 1ms;
SELECT DISTINCT ((((t1.c2)|(t1.c88))) ISNULL) FROM vt1, t1; -- 0ms;
SELECT LOWER(DISTINCT t1.c40) FROM t1, vt1, vt0 LIMIT 532220414; -- 0ms;
SELECT DISTINCT (((((vt1.c2)AND(t1.c40)))OR(t1.c0)) IN ()) FROM vt1, t1 WHERE ((((- (NULL)))>>((NOT (0.4006913152145162))))) UNION ALL SELECT ALL ((t1.c88 COLLATE BINARY)||((NOT (t1.c33)))) FROM t1, vt1, vt0 WHERE (((((1.7976931348623157E308) IS FALSE)) BETWEEN (((((((((0xfffffffff07d0249)AND(x'97af')))OR(NULL)))AND(x'')))OR(x''))) AND (''))) GROUP BY (~ (0x62243df8)); -- 0ms;
SELECT DISTINCT MIN(x'') COLLATE BINARY FROM t1, vt0 WHERE ((CASE WHEN '?&?36v\rg' THEN NULL END IN ())) LIMIT -1430762859 OFFSET -828527033; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0) NOT BETWEEN (t1.c88) AND (t1.c33)) AS NUMERIC), LEAD((((t1.c1) IS TRUE) IN ()), (((((t1.c40))<((t1.c88))))GLOB(((t1.c40) ISNULL))), JULIANDAY((~ (t1.c0)), ((t1.c1) BETWEEN (vt0.c0) AND (t1.c2)), (t1.c2 IN ()))) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP), HEX(CASE vt1.c0  WHEN 0.07983010037829841 THEN t1.c33 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c88 END) FROM vt0 NATURAL JOIN t1 WHERE (CAST((('-1098624278') BETWEEN (NULL) AND ('')) AS INTEGER));SELECT DISTINCT t1.c1 FROM vt0, t1 WHERE (json_array(((((NULL)AND('469996809')))AND(0.7809511851346584)), ((x'')IS('\n(<!')))); -- 0ms;
SELECT DISTINCT '1353487922' COLLATE BINARY FROM t1, vt0 WHERE (((((((0.6029774222848686)) BETWEEN ((606123464)) AND ((1.41302334E8))), ((NULL)<=(0.9100806845205089)), (0.2858137224782076 IN ())))>((((x'02ea') BETWEEN (0.2591802674745194) AND (x'')), ((((x'')AND(NULL)))OR(x'')), (('') IS FALSE))))) LIMIT 429528177; -- 0ms;
SELECT TOTAL(CAST(vt0.c0 AS INTEGER)) OVER () FROM vt0, vt1, t1 LIMIT -1239847664; -- 0ms;
SELECT ALL LAG(((((((vt0.c0) BETWEEN (vt1.c0) AND ('-545493127')))AND(NULLIF(DISTINCT vt1.c2, vt1.c0))))AND((vt1.c2 IN ()))), ((((~ (vt1.c1))))=(((NOT (vt1.c1))))), (((((~ (vt1.c2)))AND(((vt1.c2)>>(vt1.c0)))))OR(((vt0.c0)LIKE(vt1.c2))))) OVER () FROM vt1, vt0; -- 1ms;
SELECT ALL CAST(TRIM('bpu7') AS TEXT) FROM vt0, vt1, t1; -- 0ms;
SELECT DISTINCT x'' FROM vt1 CROSS JOIN vt0 ON ((x'' COLLATE RTRIM) NOT NULL) ORDER BY GLOB((((t1.c40)) BETWEEN ((t1.c0)) AND ((t1.c40))), vt0.c0 COLLATE RTRIM)  NULLS FIRST;SELECT DISTINCT COUNT(((t1.c2) IS FALSE)) OVER ( ORDER BY ((CAST(vt0.c0 AS REAL))<=(vt1.c2))), ((((((((NULL)AND(CASE t1.c40  WHEN 0.9682234783804383 THEN vt0.c0 WHEN t1.c2 THEN vt1.c1 WHEN t1.c0 THEN vt1.c1 END)))AND(((t1.c33)LIKE(vt1.c0)))))OR(0.3410609472369971)))OR(((t1.c40) NOT BETWEEN (t1.c88) AND (vt1.c1)))), (((((t1.c88))<((t1.c33)))) BETWEEN (MAX(0.09047635525061126)) AND ((NOT (vt0.c0)))) FROM t1, vt1 WHERE ((NOT ((('449577474')-(x'dd29')))));SELECT ((GROUP_CONCAT(t1.c33)) NOTNULL) FROM t1, vt1 ORDER BY (((((vt0.c0 IN ()))OR(t1.c88)))AND(NULL))  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(CAST(t1.c1 AS BLOB) AS REAL) FROM vt1, t1 WHERE (((((json_array(x'', '>*CXiqH裩槥', 2111078459, x'fff35deb'))OR(((x'141e') NOT BETWEEN (1533241959) AND (0x1701bcdf)))))AND((0.3008289421812942 IN ())))); -- 0ms;
SELECT DISTINCT ((((vt1.c1)%(t1.c33))) NOT NULL) FROM vt0, t1, vt1 LIMIT -1933504191; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(t1.c1 AS BLOB) THEN ((t1.c2) ISNULL) END FROM t1, vt0 WHERE (((((0.284755886820916, '', '449577474', -1684415897, '-2015394383', '-1914536508', '1190160147')) BETWEEN (('-1098624278', 0.10689817150870184, 8.85241438E8, NULL, 'Dqw.', '', '842932770')) AND ((NULL, 'o%', '', NULL, 0.4167450644380848, x'', 'oJ'))) IN ())) ORDER BY ((((vt1.c1) BETWEEN (vt1.c0) AND (t1.c2)))=((- (t1.c0)))) DESC;SELECT (((vt1.c0)<=(t1.c1)) IN ()), ((((t1.c0) IS FALSE))/(((t1.c2)&(vt1.c2)))), vt0.c0 FROM vt1;SELECT ALL ((((t1.c1)LIKE(vt0.c0)))LIKE((vt1.c2 IN ()))) FROM t1, vt0, vt1; -- 0ms;
SELECT (+ (CASE 0X24e93dac  WHEN NULL THEN vt0.c0 END)) FROM t1, vt0 WHERE (x''); -- 0ms;
SELECT ALL ((x'')IS(((t1.c2) BETWEEN (t1.c88) AND (vt1.c0)))) FROM t1, vt0 WHERE (((CASE x''  WHEN '' THEN NULL END) BETWEEN (TYPEOF(DISTINCT '[]')) AND ((('9u2XP')IS NOT(x'')))));SELECT DISTINCT (((NOT (t1.c1))) BETWEEN (CASE WHEN t1.c33 THEN t1.c1 WHEN vt1.c1 THEN t1.c88 WHEN vt1.c0 THEN t1.c2 END) AND (((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0)))) FROM vt1, vt0;SELECT DISTINCT MIN(((vt1.c2)&(t1.c40))) FROM vt1 WHERE (((((+ (NULL))))<((CAST('()' AS REAL)))));SELECT DISTINCT t1.c88, (((((((((t1.c0 IN (vt1.c0)))OR('-226237866')))AND(((0.027678811615392207)<=(t1.c40)))))AND(t1.c88)))AND(CAST('4珗\rS' AS NUMERIC))), CAST(CASE vt1.c2  WHEN t1.c1 THEN vt1.c0 END AS NUMERIC) FROM vt1, t1; -- 0ms;
SELECT (((((vt1.c2) NOT NULL)))>=((((((t1.c88)OR(t1.c1)))AND(vt1.c2))))) FROM vt1, vt0 GROUP BY 0.2591802674745194 COLLATE BINARY HAVING (x'' IN ());SELECT ALL '0.34125071785138705' FROM vt1, vt0; -- 0ms;
SELECT ALL t1.c1 FROM t1 INDEXED BY i97 WHERE ((((((((('')AND(x'')))AND('-1385957264')))OR(0.4349982670692606)))AND('jz!Sk8\rW')) COLLATE RTRIM COLLATE BINARY);SELECT GROUP_CONCAT(((vt1.c1)>=(t1.c88))) OVER () FROM t1 ORDER BY ((((~ (vt1.c1))))>=((((t1.c33)!=(t1.c33))))) DESC;SELECT ALL (((MAX(t1.c2), ((vt0.c0) NOT BETWEEN (t1.c40) AND (t1.c40)), LTRIM(vt1.c1), HEX(t1.c88), SQLITE_VERSION()))<=(((((t1.c33, vt1.c2, vt0.c0, t1.c1, t1.c33))<=((t1.c40, t1.c0, vt1.c1, t1.c88, t1.c0))), vt1.c1 COLLATE BINARY, NULL, CAST('' AS NUMERIC), ((vt1.c2)<<(vt1.c0))))), (((MAX(t1.c2, t1.c40)))==((CASE t1.c33  WHEN t1.c88 THEN t1.c1 WHEN t1.c0 THEN t1.c2 WHEN vt1.c0 THEN t1.c0 END))), ((((((((CAST(vt0.c0 AS TEXT))OR(((t1.c0) BETWEEN (t1.c0) AND (vt1.c2)))))AND(0.7938189469578304)))AND(((((-4.80382151E8)OR(vt1.c2)))OR(vt1.c2)))))AND(((t1.c1)>>(t1.c33)))) FROM t1;SELECT DISTINCT t1.c2 FROM vt0, t1 WHERE (((x'a7ac')==('1850354805')) COLLATE NOCASE); -- 0ms;
SELECT ALL (t1.c40 IN (t1.c0, ((t1.c33)/(vt1.c0)))) FROM t1, vt1, vt0 WHERE (CAST(((x'') BETWEEN ('1768998484') AND (0.08033303028207284)) AS BLOB)) GROUP BY ((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c2))) NOT NULL) HAVING (~ (MIN('-304823878'))); -- 0ms;
SELECT ALL SUM((+ (t1.c33))) FROM vt1, t1 WHERE (((CAST('2007742349' AS NUMERIC))=(((7.21489668E8) NOT BETWEEN (1258029609) AND (NULL))))) GROUP BY NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ())) HAVING CASE (~ (vt1.c0))  WHEN t1.c1 THEN CAST(t1.c40 AS REAL) ELSE t1.c1 COLLATE BINARY END;SELECT DISTINCT GROUP_CONCAT((t1.c88 IN ())) OVER ( RANGE BETWEEN CAST((- (t1.c88)) AS BLOB) PRECEDING AND  UNBOUNDED FOLLOWING) FROM t1, vt0, vt1 WHERE (((((-50900917 COLLATE NOCASE)AND(0.5238810580976413)))OR((+ ('-1866974765')))));SELECT DISTINCT CAST(((t1.c0)+(vt1.c0)) AS REAL), CAST(t1.c40 AS NUMERIC) COLLATE BINARY, ((((((((vt1.c2)OR('fm')))AND(t1.c40)))AND(vt1.c0)))OR(t1.c0)) COLLATE BINARY FROM vt0, vt1, t1 WHERE ((((0.9939438867600233 IN ())) NOT BETWEEN ((+ (''))) AND ((((NULL, '1979610071', 0.6706946294877044))<=(('', '-1222974887', -1.914536508E9)))))); -- 1ms;
SELECT DISTINCT ((CASE WHEN t1.c88 THEN x'' WHEN t1.c0 THEN t1.c0 WHEN vt1.c1 THEN t1.c88 ELSE t1.c0 END)>(((t1.c33) ISNULL))) FROM t1;SELECT DISTINCT (~ (((vt1.c0) ISNULL))), t1.c2, (CAST(vt1.c1 AS NUMERIC) IN ()) FROM t1, vt1; -- 0ms;
SELECT DISTINCT (((LTRIM(t1.c88, t1.c1)))<>(((((t1.c33))==((t1.c33)))))) FROM t1, vt1 WHERE ((((('\n9')|(0.33205406351496436))) BETWEEN (RTRIM(0.29301918396997084)) AND ('-229536610'))); -- 0ms;
SELECT (+ (((t1.c33)AND(vt1.c1)))) FROM vt1, t1 WHERE (SQLITE_COMPILEOPTION_USED((((1882132332)) NOT BETWEEN (('1800579351')) AND ((x''))))); -- 0ms;
SELECT DISTINCT (('1459136392')==(t1.c1)) FROM t1; -- 0ms;
SELECT DISTINCT ((((0.9883928343543144)AND('375052694')))*(CAST(t1.c0 AS BLOB))) FROM t1, vt1, vt0 WHERE (((+ ('0.668225732774231')) IN ())); -- 0ms;
SELECT ((TOTAL(vt1.c0)) NOT BETWEEN (((vt1.c1)%(t1.c40))) AND (t1.c2 COLLATE NOCASE)), (+ ((- (t1.c2)))), vt1.c1, TRIM(vt1.c0) COLLATE BINARY, CAST(vt0.c0 AS INTEGER) COLLATE NOCASE FROM t1, vt0, vt1 WHERE ((((NULL)GLOB(842932770)) IN ())); -- 0ms;
