-- Time: 2024/06/07 10:52:48
-- Database: database43
-- Database version: 3.40.0
-- seed value: 4140944143
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 REAL , +c4 BLOB ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1 UNINDEXED, notindexed=c0); -- 1ms;
REINDEX; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
ANALYZE vt1; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES ('1022683033', x''), (0.49123470299968486, ''), (1022683033, 0.8297567604875149); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 1ms;
REINDEX RTRIM; -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1, c1)=(0.8309926977737666, NULL); -- 1ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 969696425); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1987414684,12');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.cache_size = 0; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'65fc'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1869441214); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET (c1)=(1.022683033E9); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET (c4, c1, c1)=(0.6687807045169167, 1022683033, '1022683033') WHERE ((((((((((((rt0.c0)AND(rt0.c2)))AND(0.196964864387851)))AND(0.196964864387851)))OR(((1.022683033E9)-(x'')))))AND(((0.5644546461914722) ISNULL))))OR(((rt0.c1) NOT NULL))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '55017'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '62149'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '45823'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '60061'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 743345537); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1222072759); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1037752669);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 4ms;
PRAGMA wal_autocheckpoint; -- 1ms;
UPDATE OR FAIL vt1 SET c1=1452423667; -- 6ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END; -- 0ms;
REINDEX; -- 11ms;
UPDATE OR REPLACE t0 SET c0=''; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=0.6539530706923314; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=('<3') WHERE ((NOT (vt1.c0)) IN ()); -- 0ms;
PRAGMA main.journal_mode = WAL; -- 0ms;
VACUUM; -- 1ms;
UPDATE t0 SET (c0)=(0x68d283a5); -- 1ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER UPDATE OF c0, c0 ON t0 FOR EACH ROW  BEGIN SELECT RAISE(ABORT, 'asdf');SELECT RAISE(ROLLBACK, 'asdf');END; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-553305896 unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'') WHERE 0.6687807045169167; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
DROP TABLE IF EXISTS t0; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=x'', c1=0.05145669787836371, c0='-1987414684' WHERE (((vt1.c0 COLLATE BINARY, ((vt1.c1)>(-1.037752669E9)), vt1.c1 COLLATE BINARY, vt1.c0, (((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c1)))))>=((vt1.c0, json_array_length(vt1.c1, vt1.c0), CAST(vt1.c0 AS TEXT), vt1.c0, CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.6436800315588068; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
END TRANSACTION; -- 1ms;
PRAGMA soft_heap_limit = 3379785965614771358; -- 1ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((CAST(x'' AS NUMERIC))AND(vt1.c1)) FROM rt0, vt1; -- 0ms;
UPDATE vt1 SET c0=0.36009402511019206 WHERE NULL; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'cf53'; -- 1ms;
ANALYZE; -- 0ms;
UPDATE vt1 SET (c1, c0)=('1642201356', x''); -- 0ms;
UPDATE vt1 SET c0=0.6482904547076911; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.7716518476549901 WHERE ((UPPER(rt0.c1)) BETWEEN (rt0.c3) AND (((((rt0.c3)AND(rt0.c1)))OR(x'0f0b')))); -- 0ms;
COMMIT; -- 1ms;
UPDATE OR IGNORE rt0 SET (c4)=('O%'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(1490343086) WHERE ((rt0.c2 COLLATE NOCASE) BETWEEN (('' IN (rt0.c3))) AND (((((((((0.3012729697430364)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES (0.7049979067559192, 0.6687807045169167); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-782413479,10');\n; -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET c4=x'' WHERE x''; -- 1ms;
UPDATE OR IGNORE vt1 SET c0=x''; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.defer_foreign_keys = false; -- 0ms;
UPDATE rt0 SET c1='NaN', c1=x'', c4=NULL; -- 1ms;
UPDATE vt1 SET (c0, c1)=(x'', 0.6687807045169167); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE vt1; -- 1ms;
PRAGMA incremental_vacuum(-153744239); -- 0ms;
REINDEX RTRIM; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END; -- 0ms;
DELETE FROM vt1; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.20787135557774106; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))==((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) FROM vt1;SELECT ALL CAST((rt0.c2 IN ()) AS REAL), CAST((- (rt0.c4)) AS INTEGER), (((rt0.c2 IN (vt1.c0, v0.c0))) NOTNULL) FROM rt0, vt1, v0 WHERE (((x'd75e' COLLATE RTRIM) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST(vt1.c1 AS TEXT) FROM v0, rt0;SELECT DISTINCT CASE (rt0.c3 IN ())  WHEN CAST(rt0.c2 AS REAL) THEN -1.53744239E8 ELSE ((vt1.c0)>>(rt0.c3)) END FROM rt0, v0, vt1 WHERE (((((NULL) NOT NULL)) IS TRUE)) GROUP BY CASE WHEN rt0.c2 COLLATE NOCASE THEN ((vt1.c0) IS FALSE) ELSE ((((vt1.c1)OR(rt0.c0)))AND(rt0.c1)) END, (((rt0.c4)) NOT BETWEEN (((~ (v0.c0)))) AND ((((v0.c0)!=(vt1.c0))))), CAST(((rt0.c3) BETWEEN (vt1.c1) AND (rt0.c1)) AS INTEGER); -- 0ms;
SELECT (+ (((v0.c0) NOTNULL))) FROM vt1 WHERE ((((((('') NOT NULL))OR(ABS(DISTINCT 0.05547929620027492))))OR(0.9041446187366101 COLLATE NOCASE)));SELECT DISTINCT -70649649, ((vt1.c1 IN ()) IN (CAST(v0.c0 AS TEXT), (((v0.c0)) NOT BETWEEN ((0.26651183925710786)) AND ((rt0.c2))))), (((- (vt1.c1))) IS FALSE) FROM vt1, v0, rt0 WHERE (TRIM(NULL COLLATE BINARY)); -- 1ms;
SELECT DISTINCT ((((((x'03b12257')OR(rt0.c0)))AND(0.36009402511019206)))==(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c3, CAST(((rt0.c2)>=(rt0.c1)) AS TEXT), ((SUM(rt0.c2))==((rt0.c1 IN (v0.c0)))) FROM rt0, v0, vt1 WHERE (CAST(((x'') BETWEEN (0.5721779265271019) AND ('1758626725')) AS NUMERIC)); -- 0ms;
SELECT CAST(TOTAL_CHANGES() AS NUMERIC), ((rt0.c3) IS FALSE), (NOT ((vt1.c1 IN ()))), MAX(CAST(vt1.c0 AS NUMERIC)), '1022683033' FROM vt1 WHERE ((((('') BETWEEN (0.9768007915102689) AND (NULL))) NOT NULL)) ORDER BY ((CAST(rt0.c2 AS TEXT))OR(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 END)) ASC, ((CAST(rt0.c3 AS NUMERIC)) IS TRUE), ((((rt0.c1)AND(CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN vt1.c1 THEN rt0.c4 END)))AND((NOT (vt1.c0)))) DESC  NULLS FIRST;SELECT ((((0.9047671690446122 COLLATE BINARY)OR((('165743966')<(vt1.c0)))))AND(CASE x''  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c3 END)) FROM vt1, v0, rt0; -- 0ms;
SELECT ALL '1207665933' FROM v0, vt1 WHERE ((((x'6660')) BETWEEN ((((x'')+(-1706645285)))) AND ((TYPEOF(DISTINCT 1.022683033E9))))) LIMIT -735571702; -- 0ms;
SELECT DISTINCT 0.7916883701330225 FROM v0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)IS(rt0.c0))) IS FALSE) FROM v0, rt0 WHERE (((((NULL)||(NULL)))>>(-1706645285 COLLATE RTRIM)));SELECT DISTINCT CASE ((((v0.c0)OR(rt0.c3)))OR(v0.c0))  WHEN ((vt1.c0)GLOB(v0.c0)) THEN (rt0.c1 IN (rt0.c4)) ELSE (vt1.c0 IN ()) END FROM rt0, vt1, v0 WHERE (((SQLITE_COMPILEOPTION_USED(0X569239f3))!=('-735571702' COLLATE BINARY))); -- 1ms;
SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE (CAST((+ (0.7838584902475796)) AS INTEGER)) LIMIT 1376512370 UNION ALL SELECT (~ (LTRIM(rt0.c1))) FROM v0, rt0 WHERE ((+ (0.9047671690446122)) COLLATE BINARY);SELECT ALL ((((rt0.c4)OR(rt0.c0)))/(0.5636818517175483)), ((((rt0.c2 COLLATE RTRIM)AND(MAX(NULL))))AND(LTRIM(vt1.c0))), (~ (((((rt0.c4)AND(rt0.c4)))OR(rt0.c1)))) FROM vt1, v0 WHERE (((CAST(x'' AS TEXT)) IS TRUE));SELECT ALL AVG(((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c1))) FROM vt1 WHERE (1708468703);SELECT (((((((0.9394289646390774)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))))OR(MAX(rt0.c3))))OR(LOWER(DISTINCT rt0.c3))) FROM rt0 WHERE ('0.8309926977737666');SELECT DISTINCT MIN(((((vt1.c0)AND(rt0.c1)))AND(vt1.c1))) FROM rt0, v0, vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY ((CAST(v0.c0 AS BLOB)) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3)))) AND ((rt0.c4 IN ()))), ABS(DISTINCT json_remove(rt0.c1, rt0.c0, rt0.c0, rt0.c3, vt1.c0, NULL)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT -553305896, MAX(ABS(vt1.c1)), ((((((((rt0.c4)AND(rt0.c3)))AND(vt1.c0)))AND(rt0.c0)))OR(NULL)) COLLATE NOCASE FROM vt1, rt0, v0 GROUP BY CASE WHEN ((rt0.c3) ISNULL) THEN rt0.c0 COLLATE BINARY ELSE LIKE(rt0.c1, vt1.c0) END HAVING vt1.c1; -- 0ms;
SELECT GROUP_CONCAT(CASE rt0.c1  WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) FROM vt1, rt0;SELECT CASE ((rt0.c4)*(rt0.c3))  WHEN (((vt1.c0))>((rt0.c3))) THEN ((rt0.c4)&(vt1.c0)) ELSE ((rt0.c2)>=('')) END, (- (rt0.c2 COLLATE RTRIM)), ((NOT (vt1.c0)) IN ()) FROM rt0, v0, vt1; -- 0ms;
SELECT DISTINCT x'', CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c3)-(rt0.c4)) ELSE ((rt0.c1)<(vt1.c1)) END, ((~ (vt1.c0)) IN ()) FROM vt1, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT CASE WHEN (- (rt0.c2)) THEN ((rt0.c2) IS FALSE) WHEN x'c06d' THEN (((rt0.c1))<((rt0.c3))) WHEN (vt1.c0 IN ()) THEN ((((((((0.40737094515184147)AND(-1220357144)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)) WHEN rt0.c3 THEN ((vt1.c1)IS(rt0.c1)) WHEN ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)) THEN rt0.c2 COLLATE BINARY END FROM v0;SELECT ALL (((rt0.c1, rt0.c0, rt0.c0, rt0.c4, rt0.c1)) NOT BETWEEN (((+ (rt0.c3)), rt0.c1, CAST(rt0.c4 AS TEXT), CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c1 END, ((rt0.c3)IS(vt1.c1)))) AND ((CAST(rt0.c1 AS INTEGER), (+ (vt1.c1)), ((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)), (+ (rt0.c0)), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 END))), CUME_DIST() OVER (), ((MIN(rt0.c1))/(rt0.c0 COLLATE RTRIM)) FROM rt0, v0, vt1 WHERE (CAST(x'' AS NUMERIC)) GROUP BY (((CAST(vt1.c0 AS REAL)))=((((rt0.c0) ISNULL)))), ((((rt0.c0)<(vt1.c1))) NOT BETWEEN ((rt0.c3 IN ())) AND (((rt0.c1)||(rt0.c2)))), ((((((((((NULL)LIKE(rt0.c1)))AND(x'')))AND((+ (rt0.c4)))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c1))))))AND(((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt1.c0)))) HAVING AVG(SUM((((rt0.c2))>((rt0.c4)))));SELECT ALL (rtreenode(rt0.c2, rt0.c0) IN ()) FROM v0; -- 0ms;
SELECT DISTINCT (((((~ (rt0.c1)))AND(vt1.c0)))AND(((rt0.c3) IS FALSE))), ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))<=(((((vt1.c1)AND(vt1.c1)))OR(v0.c0)))), HEX(rt0.c3 COLLATE RTRIM) FROM vt1, rt0, v0; -- 0ms;
SELECT DISTINCT (((0Xffffffff9bcc3e48 IN ())) BETWEEN (rt0.c3) AND (((vt1.c1) NOT NULL))) FROM rt0, vt1, v0 LIMIT -1987414684; -- 0ms;
SELECT DISTINCT AVG((rt0.c1 IN ())), ((UNLIKELY(rt0.c2))+(rt0.c1 COLLATE NOCASE)), ((CASE NULL  WHEN rt0.c3 THEN rt0.c1 WHEN vt1.c1 THEN v0.c0 WHEN x'' THEN rt0.c1 END) ISNULL) FROM rt0, v0 WHERE (CAST(((x'') BETWEEN (-1847802838) AND (NULL)) AS INTEGER));SELECT DISTINCT ((CASE vt1.c1  WHEN rt0.c4 THEN vt1.c1 ELSE rt0.c2 END) NOT BETWEEN (((vt1.c0)*(v0.c0))) AND (((rt0.c4)==(rt0.c2)))), LEAD(LIKELY(DISTINCT rt0.c2) COLLATE NOCASE, (((rt0.c2)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) AND ((rt0.c2 COLLATE RTRIM))), rt0.c1 COLLATE RTRIM) OVER ( GROUPS ((((vt1.c0 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))AND(CAST(rt0.c0 AS INTEGER))) PRECEDING), ((CAST(rt0.c4 AS NUMERIC))>(CAST(vt1.c0 AS TEXT))) FROM rt0 WHERE (CAST(((x'1c42')IS(0.5024009022732541)) AS TEXT));SELECT DISTINCT CAST(CAST(rt0.c3 AS BLOB) AS REAL) FROM rt0 NOT INDEXED, v0; -- 0ms;
SELECT (((0xffffffffb79ed6f5))>=((((rt0.c4)>(x'e83cdff1'))))) FROM vt1;SELECT ALL (((vt1.c0)GLOB(vt1.c0)) IN ()) FROM vt1; -- 0ms;
SELECT ALL ((rt0.c3 COLLATE NOCASE)IS(v0.c0)) FROM rt0, vt1 WHERE (CASE CAST(0.13387420615760182 AS INTEGER)  WHEN (('3379785965614771358') NOT BETWEEN (NULL) AND (NULL)) THEN CAST(NULL AS NUMERIC) ELSE ('-735571702' IN (NULL)) END);SELECT ALL ((CAST(vt1.c0 AS TEXT)) NOT NULL) FROM v0, vt1, rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c4  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END) NOT NULL) FROM vt1, v0, rt0 WHERE (LOWER(DISTINCT (+ (NULL)))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt1, v0 WHERE (((((NULL)IS(x'cd1e')))LIKE(((0.5699764317705635)<('1087126069'))))) ORDER BY 0x7520a4b0 ASC  NULLS LAST, '-70649649' ASC  NULLS LAST;SELECT DISTINCT NULL, ((((rt0.c2)-(v0.c0)))IS(((v0.c0)>(rt0.c0)))), LAG(rt0.c2, LIKELIHOOD(rt0.c0, 0.5882453832474653), (((rt0.c0)) BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c2) BETWEEN (0.5325485245588734) AND (rt0.c1)))))) OVER () FROM rt0 WHERE (CAST((((x'')) NOT BETWEEN (('-1442235882')) AND ((''))) AS REAL));SELECT ALL CASE MIN(vt1.c1)  WHEN (- (rt0.c4)) THEN ((rt0.c1) IS FALSE) END FROM vt1;SELECT DISTINCT ((((vt1.c0)*(v0.c0))) ISNULL) FROM vt1 WHERE (TYPEOF(DISTINCT ((((x'6931')AND(0xffffffffd3589ff8)))OR(1442690024))));SELECT ALL (- ('-536510716')) FROM vt1, v0 WHERE ((('*꫸')<>(x'')) COLLATE BINARY) GROUP BY (((((((rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c3))>((rt0.c1, vt1.c0, 0.5325485245588734, rt0.c4, rt0.c4))))OR(((rt0.c1) NOT NULL))))AND((~ (rt0.c0))));SELECT DISTINCT MIN(CASE rt0.c2  WHEN vt1.c1 THEN NULL WHEN rt0.c0 THEN 'Bw7yh4-' WHEN vt1.c1 THEN rt0.c4 END), LOWER(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END), 1.087126069E9, (((rt0.c3 COLLATE NOCASE, (vt1.c0 IN ()), (((vt1.c0))>=((vt1.c1)))))<=((((vt1.c1) IS TRUE), DATE(rt0.c3, rt0.c4, rt0.c0), ((((rt0.c0)AND(rt0.c0)))OR(vt1.c1))))), (CASE WHEN v0.c0 THEN 326211857 WHEN 0.4911930632946918 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END IN ()), (((((vt1.c0))<=((rt0.c0))))|(vt1.c1 COLLATE RTRIM)), rt0.c1 FROM rt0, v0;SELECT DISTINCT ((((GROUP_CONCAT(rt0.c1))OR(NULL)))AND((rt0.c4 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt1.c1))OR(((rt0.c3) NOT NULL))) FROM rt0 WHERE (((((NULL) IS TRUE))=(((x'f737') NOT BETWEEN ('') AND ('')))));SELECT DISTINCT LAG((~ (((rt0.c1)OR('zh\r')))), x'8960', (- (((rt0.c4) NOTNULL)))) OVER (), CAST(((((v0.c0)AND(vt1.c1)))OR(rt0.c4)) AS NUMERIC), rt0.c0 FROM rt0 LIMIT 326211857 OFFSET 1758626725;SELECT x'aa4d' FROM rt0, vt1, v0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB) FROM v0;SELECT (CASE WHEN x'' THEN rt0.c4 ELSE rt0.c2 END IN ()) FROM rt0, v0; -- 1ms;
SELECT DISTINCT MIN(CASE NULL  WHEN rt0.c3 THEN v0.c0 END), ((((rt0.c3)/(v0.c0))) BETWEEN (((rt0.c3) IS FALSE)) AND (SQLITE_SOURCE_ID())), ((COALESCE(DISTINCT NULL, rt0.c2))IS(COUNT(rt0.c2))) FROM rt0, v0 WHERE ((CAST('' AS REAL) IN (CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT (((vt1.c1)*(0xffffffffff8a72bb)) IN (((rt0.c1)<=(rt0.c4)))) FROM rt0, vt1 WHERE (ABS(DISTINCT 0.9047671690446122)); -- 0ms;
SELECT COUNT(*) OVER () FROM v0, rt0, vt1; -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY (NOT ((rt0.c4 IN ())))  NULLS LAST) FROM rt0, v0; -- 0ms;
SELECT IFNULL(DISTINCT LENGTH(rt0.c2), rt0.c4 COLLATE NOCASE) FROM rt0, v0 GROUP BY json(CASE rt0.c0  WHEN vt1.c1 THEN rt0.c4 END), ((((rt0.c4) ISNULL)) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c0, 0.4212930324701418)) AND (((rt0.c3)<<(rt0.c0)))), ((rt0.c4)LIKE(vt1.c1)) COLLATE RTRIM;SELECT DISTINCT ((((vt1.c0 IN ())))<((((rt0.c4)<=(0.6539530706923314))))) FROM v0, vt1 WHERE ((((NOT (NULL))) IS FALSE));SELECT DISTINCT (+ (v0.c0)) COLLATE RTRIM FROM vt1, rt0 WHERE (((((TYPEOF(x''))AND(((x'9c20')+('b')))))OR((('g UFqV')<('ZIgꙀ')))));SELECT ALL ((rt0.c4)+('1087126069')) FROM vt1, rt0 RIGHT OUTER JOIN v0 ON (NOT (((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c4)))); -- 1ms;
SELECT ALL GROUP_CONCAT(((vt1.c0)GLOB(rt0.c4))) OVER () FROM rt0;SELECT DISTINCT (((((vt1.c1) NOTNULL)))!=((0.7421801068731321))) FROM vt1; -- 0ms;
SELECT AVG(x'') FROM v0 LIMIT 331720256; -- 0ms;
SELECT DISTINCT x'' FROM v0 WHERE (CAST((+ ('')) AS REAL)); -- 0ms;
SELECT ALL (~ (CAST(vt1.c0 AS INTEGER))) FROM rt0, v0;SELECT DISTINCT AVG(((rt0.c3)!=(rt0.c0))) OVER () FROM vt1, v0, rt0; -- 0ms;
SELECT (((rt0.c4 IN ()))>>(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END)) FROM vt1, rt0 WHERE ((((('1376512370')AND((x'' IN ('*4{ZZ', -5.53305896E8, 0.04101010331947663)))))OR(NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((vt1.c0))))-((rt0.c1 IN (rt0.c0)))) FROM vt1, v0, rt0; -- 0ms;
SELECT (((rt0.c2))>=((((((((((vt1.c0)AND(rt0.c1)))OR(0xfffffffff6d60c91)))OR(rt0.c4)))AND(rt0.c0))))) FROM vt1, v0, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT QUOTE(v0.c0 COLLATE NOCASE) FROM vt1, v0, rt0 WHERE (((((((((((((((x'7a8e')AND(x'')))AND('-782413479')))AND(NULL)))AND(x'')))OR(NULL)))AND('9jly鞽5s൞')))%(((((x'')OR(-8.97350698E8)))OR('Q'))))); -- 1ms;
SELECT ALL ((((((((json_array(v0.c0, rt0.c4, rt0.c4, rt0.c0))AND(json_array(vt1.c0, vt1.c0))))AND((((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c4, rt0.c0)) AND ((vt1.c1, rt0.c2, rt0.c4))))))AND((((rt0.c4))<((rt0.c3))))))AND(rt0.c3 COLLATE NOCASE)) FROM vt1, rt0, v0; -- 0ms;
SELECT ALL GROUP_CONCAT((rt0.c3 IN (NULL))) OVER (), (NOT (rt0.c4)), (- ((0.9768007915102689 IN ()))) FROM v0, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT COUNT(x'baab') OVER (), ((rt0.c1) BETWEEN (0.03439187193861404) AND (vt1.c0)) COLLATE NOCASE, (((((((((+ (rt0.c0)))AND(NULL)))AND(((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))))AND(((rt0.c1) NOT BETWEEN (x'a3e1') AND (rt0.c1)))))AND(NULL)), (((rt0.c3 IN ()))LIKE(((rt0.c1)<>(vt1.c1)))), SUM(((rt0.c3) BETWEEN (v0.c0) AND (rt0.c4))) FROM v0, rt0, vt1; -- 0ms;
SELECT DISTINCT ((vt1.c0) ISNULL) COLLATE BINARY FROM vt1, rt0, v0 WHERE (CAST(CAST(NULL AS BLOB) AS BLOB)); -- 0ms;
SELECT CAST((('1	aTn.') NOT BETWEEN (rt0.c1) AND (vt1.c1)) AS BLOB), ((CAST(v0.c0 AS TEXT)) IS TRUE), (((+ (rt0.c2))) NOT BETWEEN ((- (rt0.c4))) AND ((vt1.c1 IN ()))) FROM vt1, rt0, v0 WHERE ((~ (x'')) COLLATE NOCASE) GROUP BY ((((PRINTF(rt0.c4, v0.c0, vt1.c0))AND(v0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c1 END)), ((((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))AND(v0.c0)))OR(rt0.c2)))||(rt0.c3 COLLATE BINARY)), (((0xffffffffb73a4506) NOT NULL) IN ()); -- 0ms;
SELECT x'd646' FROM vt1, v0, rt0 WHERE (((((NULL COLLATE NOCASE)OR(CAST(-7.0649649E7 AS BLOB))))AND(CASE x''  WHEN NULL THEN NULL WHEN x'3a10' THEN -1.22091801E9 WHEN NULL THEN NULL ELSE x'de00' END))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM v0 WHERE (CASE WHEN (NULL IN ()) THEN ((NULL) IS TRUE) WHEN (('1087126069') IS FALSE) THEN (('')%(0.610853496639308)) WHEN ((0.6001331089368261)|(0.5636818517175483)) THEN ((0xffffffffd428110a) NOT BETWEEN ('-1839365480') AND (x'')) ELSE ((NULL) BETWEEN (3.379785965614771E18) AND (-1.80840515E8)) END) LIMIT -70649649 OFFSET -701324770; -- 1ms;
SELECT DISTINCT CAST(x'' AS BLOB), (((((0X13719911))=((v0.c0)))) IS FALSE), ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 END)<=(UPPER(vt1.c1))) FROM rt0, v0 WHERE ((+ (((0.3696000683949826)||('1548644136')))));SELECT ALL NULL, (((((vt1.c0)AND(rt0.c3)))AND(rt0.c0)) IN ()), (NOT (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) FROM v0, rt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c1)))OR((rt0.c3 IN (x'')))))AND(rt0.c2)))AND((vt1.c1 IN ()))))OR(CAST(rt0.c3 AS BLOB))) FROM rt0, v0, vt1 WHERE (LIKELIHOOD(x'9156' COLLATE RTRIM, 0.8650360194064772)); -- 0ms;
SELECT DISTINCT (((('') IS FALSE))<(CASE WHEN rt0.c1 THEN rt0.c4 END)) FROM vt1, rt0, v0 WHERE (SQLITE_VERSION()); -- 0ms;
SELECT ((SUM(x'29bb55f7'))>(((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))) FROM vt1, rt0 WHERE (((((((((x'')OR(NULL)))OR(NULL)))AND((~ ('<3')))))OR(CAST(1.442690024E9 AS BLOB)))) GROUP BY ((((rt0.c0) NOTNULL)) BETWEEN (((x'8ec3')||(-8.97350698E8))) AND (((rt0.c1)*(vt1.c0)))), ((CASE WHEN rt0.c4 THEN x'' ELSE v0.c0 END) NOT NULL), ((((rt0.c4) NOT NULL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((((0.22594394499204984)) BETWEEN ((x'')) AND ((rt0.c4))))) HAVING ((((((v0.c0)AND(x'')))OR(((rt0.c3)<(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END));SELECT (((((rt0.c2)AND(v0.c0)))AND(rt0.c3)) IN ()), (~ (v0.c0 COLLATE BINARY)), (((((vt1.c0)OR(rt0.c2)))OR(v0.c0)) IN (((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)))), ((((((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)))AND(((((rt0.c1)OR(vt1.c0)))AND(v0.c0)))))AND(((('<\rY'))=((0.6436800315588068))))))AND(json_remove(vt1.c0, vt1.c0, vt1.c0, rt0.c1))))AND(JULIANDAY(rt0.c2, rt0.c0, rt0.c2))), (+ ((((rt0.c0)) BETWEEN (('')) AND ((NULL))))) FROM rt0, v0, vt1 ORDER BY (- (rt0.c1)) COLLATE BINARY ASC  NULLS FIRST; -- 0ms;
SELECT CASE rt0.c1  WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN x'a2cb' THEN rt0.c3 END COLLATE BINARY FROM v0, vt1;SELECT DISTINCT GROUP_CONCAT(((rt0.c3) NOT NULL)) FROM vt1 WHERE (('[' IN ())) LIMIT 1819226096 OFFSET -1456039513;SELECT LAST_VALUE((((rt0.c3)) NOT BETWEEN ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END)) AND (((+ (vt1.c1)))))) OVER (), ((((((((((rt0.c3)AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))OR(rt0.c3))) ISNULL), ((CASE vt1.c1  WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)IS((~ (rt0.c1)))) FROM vt1, rt0 WHERE ((CASE WHEN 0.5721779265271019 THEN '1642201356' WHEN -1.80840515E8 THEN 0.12375919849131178 WHEN '-1267398787' THEN '' ELSE NULL END IN ())); -- 0ms;
SELECT ALL ((rt0.c4 IN ()) IN ()) FROM rt0, v0, vt1 WHERE (NULL) LIMIT 1490343086 OFFSET -735571702; -- 0ms;
SELECT rt0.c0, TOTAL((- (rt0.c2))) OVER (), ((((vt1.c1)LIKE(vt1.c1)))IS NOT(rt0.c4 COLLATE NOCASE)) FROM vt1, rt0 WHERE (((CASE WHEN 'YV' THEN 815434086 END) NOT BETWEEN (((((((((']J')OR(0.0)))AND('-1612721239')))AND('774183503')))OR(x''))) AND (GLOB(x'', '887962491')))) GROUP BY ((CAST(rt0.c0 AS NUMERIC))+(((rt0.c1) IS TRUE))) HAVING x''; -- 0ms;
SELECT DISTINCT TOTAL(rt0.c1) FROM v0 WHERE (((CASE -174054156  WHEN NULL THEN -127289724 WHEN '' THEN NULL WHEN NULL THEN 0.17804955702495673 WHEN '1856468293' THEN 0.12375919849131178 WHEN '猁㧳a\r' THEN x'1a09' END)&((+ (NULL)))));SELECT ((((rt0.c4 COLLATE BINARY)OR(ABS(DISTINCT rt0.c2))))AND(TOTAL(vt1.c1))) FROM rt0, vt1 WHERE ((((NOT ('-1694173648')))GLOB(((x'')<<(x''))))); -- 0ms;
SELECT ALL '&yV	ꯝ鸺t' FROM rt0, v0, vt1 WHERE (CAST(((NULL) BETWEEN (NULL) AND (NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT CASE WHEN (- (vt1.c1)) THEN ((vt1.c1)+(vt1.c0)) WHEN ((0.9990572965766398) BETWEEN (v0.c0) AND (v0.c0)) THEN GROUP_CONCAT(rt0.c4) WHEN '' THEN (((rt0.c2)) NOT BETWEEN ((0.840603335710127)) AND ((NULL))) END FROM rt0;SELECT DISTINCT ((CAST(v0.c0 AS BLOB)) IS TRUE) FROM vt1, rt0 WHERE (((0xffffffffa5df845d)-(x'6a1e')) COLLATE RTRIM);SELECT LIKELIHOOD(TYPEOF(vt1.c1), 0.13919990129032977) FROM rt0, vt1 LIMIT -1523013643 OFFSET -160531750; -- 1ms;
SELECT ((((NULL)AND((- (rt0.c3)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))) FROM rt0, v0, vt1 WHERE (LIKELY(DISTINCT (((0.5871947852497023))<=((0X13719911))))) ORDER BY CASE (((rt0.c0))=((rt0.c1)))  WHEN NULL THEN 2131745647 ELSE (- (rt0.c2)) END ASC; -- 0ms;
SELECT COUNT(x'') COLLATE RTRIM FROM v0, rt0 NATURAL JOIN vt1; -- 0ms;
SELECT ALL ((COUNT(*)) IS TRUE) FROM rt0 WHERE (((((((x'')<>('')))OR((NULL IN ()))))OR(((0.04101010331947663)+(0.8376875077580409))))); -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(vt1.c1) IN (CASE WHEN vt1.c0 THEN vt1.c1 END, GROUP_CONCAT(rt0.c2))), CASE json_array(rt0.c2, vt1.c0, rt0.c0, rt0.c3)  WHEN CAST(vt1.c1 AS NUMERIC) THEN CASE rt0.c4  WHEN rt0.c0 THEN 1490343086 END WHEN COUNT(v0.c0) THEN ((rt0.c2) NOT BETWEEN (v0.c0) AND ('1758626725')) WHEN (((NULL)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c1))) THEN LOWER(rt0.c4) END, ((v0.c0)=((NOT ('2085878668')))) FROM vt1, rt0, v0; -- 0ms;
SELECT DISTINCT ((vt1.c1) IS TRUE) FROM v0, rt0 WHERE ((((0.9103421297099665) IS FALSE) IN ((((NULL))!=((x''))), ((NULL) NOTNULL))));SELECT ALL ((((((v0.c0)GLOB(x'a1ca')))OR(((v0.c0) ISNULL))))OR((NOT (rt0.c1)))), CHANGES(), rt0.c2 FROM vt1, rt0, v0; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ()))<<((((rt0.c3))!=((rt0.c3))))) FROM vt1, v0 WHERE (((('-1502165976')) BETWEEN (((((x''))!=((''))))) AND (((0xffffffffda2021e0 IN ()))))) GROUP BY ((((NULL) NOT NULL))-(CASE WHEN v0.c0 THEN rt0.c4 ELSE rt0.c2 END));SELECT DISTINCT DATETIME(((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c1)), ((v0.c0)>=(vt1.c1)), vt1.c0, (((0.9247737802887013, rt0.c4, vt1.c0))>((vt1.c0, rt0.c1, vt1.c1))), (~ (rt0.c0)), '711227447', (+ (rt0.c4))) FROM vt1, v0, rt0 WHERE ((((((('1376512370'))>(('')))))=(((('887962491')&(0.9247737802887013)))))); -- 1ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY COLLATE BINARY FROM rt0, v0, vt1 WHERE ((((x'')) BETWEEN ((((0.9371660987011781)>=(NULL)))) AND ((((x'') IS FALSE))))); -- 0ms;
SELECT ALL COUNT(CASE vt1.c0  WHEN x'' THEN v0.c0 ELSE rt0.c4 END) OVER (), (((v0.c0)) NOT BETWEEN ((((0Xffffffffd3589ff8) NOT NULL))) AND ((CAST(v0.c0 AS INTEGER)))), UPPER(rt0.c1) COLLATE BINARY COLLATE NOCASE FROM rt0;SELECT ALL rt0.c2 FROM v0, vt1;SELECT DISTINCT COALESCE(DISTINCT MAX(2061995393), vt1.c0, CAST(rt0.c3 AS BLOB), rt0.c3) FROM vt1, rt0, v0; -- 0ms;
SELECT DISTINCT ((LIKELY(rt0.c2))*(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))) FROM rt0 LIMIT -1112156723 OFFSET -1482999690; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((vt1.c1)OR(vt1.c0)))OR(rt0.c3)))OR(NULL)))OR(vt1.c0)) THEN rt0.c2 COLLATE BINARY ELSE x'' END, TYPEOF(((rt0.c4) NOT BETWEEN (x'') AND (rt0.c3))), ((GROUP_CONCAT(vt1.c1)) NOT NULL) FROM rt0, v0;SELECT DISTINCT json_extract(vt1.c1, ((vt1.c0)IS(rt0.c1)), GROUP_CONCAT(rt0.c2), ((((((((rt0.c1)OR(rt0.c4)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c1))), ((NULL)&(CASE rt0.c0  WHEN 'g UFqV' THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN vt1.c1 THEN rt0.c4 WHEN vt1.c0 THEN 0.09711517717329499 ELSE rt0.c1 END)), AVG((((rt0.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) FROM v0, vt1 GROUP BY (((~ (0xffffffffb5629a38))) NOT BETWEEN (CASE x''  WHEN rt0.c0 THEN v0.c0 ELSE vt1.c1 END) AND (TRIM(rt0.c3, rt0.c3))), CAST((rt0.c2 IN ()) AS REAL), 0.5427950500702178;SELECT ((NULL)<>(vt1.c0)) COLLATE NOCASE FROM v0, vt1 WHERE (((((x'') IS FALSE)) IS TRUE)); -- 0ms;
SELECT ALL ((((rt0.c1) IS TRUE))-((((('681621877')OR(rt0.c3)))AND(rt0.c4)))) FROM v0, vt1, rt0; -- 1ms;
SELECT DISTINCT (GROUP_CONCAT('') IN ()) FROM rt0, v0, vt1 WHERE (((((('-1081274945')/(NULL))))>((NULL COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT '\r' FROM vt1 WHERE ((((0.8957799062226792)>=(NULL)) IN (((NULL) BETWEEN (x'e322') AND (NULL))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c4)LIKE(vt1.c1)) AS REAL), CAST(CAST(vt1.c1 AS TEXT) AS BLOB), rt0.c3 FROM vt1 WHERE (CAST(((NULL) BETWEEN (x'') AND ('')) AS REAL));SELECT DISTINCT CASE WHEN CAST(rt0.c4 AS REAL) THEN MIN(vt1.c0) ELSE 0.5125150119652546 END FROM vt1, v0, rt0 GROUP BY ((((((vt1.c0)OR(rt0.c2)))AND(rt0.c3))) IS TRUE) HAVING ((((((((rt0.c0)AND(0xffffffffe176a5c0)))AND(((v0.c0) NOTNULL))))OR(AVG(vt1.c1))))AND(CAST(rt0.c0 AS INTEGER))); -- 0ms;
SELECT COUNT(*) FROM v0 ORDER BY (((v0.c0)) BETWEEN ((rt0.c0)) AND ((0X4ac8c3c4))) COLLATE NOCASE ASC  NULLS FIRST;SELECT ALL (((CASE v0.c0  WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c0 END, CAST(vt1.c1 AS INTEGER), TYPEOF(DISTINCT x'')))<=((CASE rt0.c1  WHEN vt1.c1 THEN vt1.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c1 END, (((rt0.c2, rt0.c4, vt1.c0))=((vt1.c0, rt0.c0, rt0.c2))), (- ('-527799280'))))) FROM vt1, v0;SELECT v0.c0 FROM rt0, v0, vt1 WHERE ((+ ((((0.7629348439760921))==((x'')))))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0, vt1, v0; -- 0ms;
SELECT rt0.c4 FROM rt0 WHERE (CAST(NULLIF(DISTINCT '-431983871', 0.42634380855224663) AS INTEGER)) ORDER BY ((rt0.c2 COLLATE RTRIM)%(CAST(rt0.c0 AS BLOB)))  NULLS LAST, ((DATE(rt0.c4, v0.c0, rt0.c4))GLOB(750529362)) ASC, ((((rt0.c4) NOT NULL))<<(-1169677573)) DESC  NULLS FIRST;SELECT ALL (MAX(vt1.c1) IN (((rt0.c1)OR(vt1.c1)))), ((((+ (v0.c0)), (((rt0.c0)) BETWEEN ((0.7049979067559192)) AND (('1536736279'))), (((rt0.c3))>((rt0.c1)))))<>((CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END, ((rt0.c2)GLOB(rt0.c2)), AVG(vt1.c0)))), v0.c0 FROM rt0, vt1, v0 WHERE (0.05145669787836371); -- 1ms;
SELECT CASE (vt1.c1 IN ())  WHEN CAST(rt0.c0 AS BLOB) THEN CASE vt1.c1  WHEN rt0.c2 THEN x'751a' ELSE v0.c0 END WHEN ((rt0.c1)OR(rt0.c3)) THEN CASE WHEN rt0.c0 THEN 0.6164186095110208 ELSE vt1.c0 END WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)) THEN CASE vt1.c1  WHEN v0.c0 THEN 0.6001331089368261 END ELSE UPPER(DISTINCT rt0.c1) END FROM v0, vt1;SELECT ((NULLIF(DISTINCT '{1mi.gꢺ敍', NULL)) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND (((rt0.c3) IS FALSE))) FROM v0, rt0 WHERE (((((((x'da4e')OR('')))AND(NULL))) BETWEEN (((('1971333718')) NOT BETWEEN (('1442690024')) AND (('g UFq*')))) AND (('-285431048' IN ())))) GROUP BY 1.452423667E9 HAVING CASE WHEN AVG(v0.c0) THEN (((v0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) END;SELECT DISTINCT ((((('S?')) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0)))) NOT NULL) FROM v0 WHERE (HEX('-1931322106' COLLATE RTRIM));SELECT DISTINCT (~ (((NULL) NOTNULL))) FROM rt0, vt1, v0 WHERE ((- (CAST(x'' AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((rt0.c3 COLLATE RTRIM))) FROM vt1, v0 WHERE (CASE WHEN ((NULL)>>(x'04b34533')) THEN ((NULL)IS NOT('1189505174')) ELSE (('-1600822621')GLOB('')) END) ORDER BY ABS(vt1.c1) COLLATE RTRIM  NULLS LAST;SELECT DISTINCT ((((((((TRIM(rt0.c1))OR(((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))OR(rt0.c1)))OR(rt0.c2)))))AND(CAST('6-' AS BLOB))))AND(((rt0.c3) BETWEEN (v0.c0) AND ('-15608614')))))AND(((rt0.c1)||('*1!iF%]z')))), ABS(DISTINCT CAST(rt0.c2 AS BLOB)), (((rt0.c3) IS FALSE) IN ((rt0.c3 IN ()))), ((((rt0.c3)GLOB(rt0.c0))) IS TRUE), ((((((rt0.c3) IS FALSE))AND((NOT (v0.c0)))))AND((~ (vt1.c1)))) FROM vt1, v0 WHERE (((((1.819226096E9) BETWEEN (0.12785966947481175) AND (',ݽT帰O笡'))) NOT NULL));SELECT DISTINCT NULL FROM rt0, v0; -- 0ms;
SELECT ((('䎅/3'))>=((((rt0.c0)%(rt0.c4))))) FROM rt0, vt1; -- 1ms;
SELECT ALL (((rt0.c4) IS FALSE) IN ()) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT json_remove((- (v0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN x'84167318' END) FROM vt1, v0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN (('')) AND ((DATETIME(rt0.c3, rt0.c1, rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt1, v0, rt0 WHERE ((((('Ju')/(NULL)))LIKE(NULL))); -- 0ms;
SELECT DISTINCT (((((NOT (vt1.c0)))OR((((rt0.c4))>((rt0.c1))))))AND(LOWER(vt1.c0))), 0.024936489551249608, ((CAST(vt1.c0 AS TEXT)) BETWEEN ((+ (rt0.c3))) AND ((NOT (rt0.c2)))) FROM rt0 GROUP BY (STRFTIME(rt0.c4, vt1.c1, rt0.c0, 0.3887632188615242, rt0.c3) IN (((rt0.c0) ISNULL)));SELECT ALL CASE (((v0.c0))<((vt1.c1)))  WHEN ((v0.c0) NOTNULL) THEN (rt0.c0 IN ()) ELSE ((0.21574938643456576)%(rt0.c4)) END FROM rt0, v0 WHERE (((TRIM(NULL, 0.03401717861734521))>('973450909')));SELECT CASE WHEN (- (vt1.c1)) THEN json_patch(v0.c0, vt1.c1) END FROM rt0, v0, vt1 WHERE (MIN(CAST('' AS BLOB), CAST(0.10392540998919853 AS BLOB))); -- 0ms;
SELECT DISTINCT ((((((((((((((rt0.c0)AND(vt1.c1)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))OR(NULL)))AND(vt1.c1))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)) FROM rt0, v0 WHERE ((((((((((('1E')OR(NULL)))OR(NULL)))OR(NULL)))OR(x'')))*((('-1784711488')<=(NULL)))));SELECT (~ (CASE rt0.c3  WHEN rt0.c1 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 END)), (NULL IN (((rt0.c0)>(0.3193987201555968)), COUNT(rt0.c0))), (((LIKELY(DISTINCT v0.c0)))!=((((rt0.c1) NOT BETWEEN (vt1.c0) AND (v0.c0))))) FROM rt0, vt1;SELECT ((rt0.c3) ISNULL) COLLATE NOCASE, ((1.207665933E9) ISNULL), ((((rt0.c4))!=((0.09903474012317648))) IN ()) FROM vt1, v0 WHERE (((((-1.987414684E9)) NOT BETWEEN ((0.3696000683949826)) AND ((0X975f36d))) IN (296673537 COLLATE BINARY, 'I6')));SELECT DISTINCT 0.8218927037891423 FROM v0, vt1; -- 0ms;
SELECT DISTINCT (((((((((((v0.c0)OR(rt0.c4)))OR(vt1.c1)))OR(vt1.c0)))OR(rt0.c4))))!=(((- (rt0.c2))))) FROM rt0, vt1 WHERE (UNLIKELY((('M./	U{')AND('2061995393'))));SELECT ALL rt0.c0 FROM rt0, vt1, v0; -- 0ms;
SELECT DISTINCT 0x5ec9a9b2, CAST(rt0.c3 AS INTEGER) COLLATE BINARY, (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1))))!=(((+ (rt0.c4))))) FROM v0, rt0 WHERE (((x'')=((((('F')AND(NULL)))OR(x''))))); -- 0ms;
SELECT ALL (((rt0.c2)) BETWEEN (('')) AND ((((rt0.c2)>(rt0.c1))))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((x'eaa3') ISNULL) FROM rt0 ORDER BY ((((rt0.c3)IS(v0.c0)))&(((v0.c0)IS(rt0.c1))));SELECT DISTINCT (((((vt1.c0))>((rt0.c2))))-(((v0.c0) ISNULL))) FROM rt0, vt1, v0 LIMIT -1523013643; -- 0ms;
SELECT ALL UPPER(((0.7421801068731321)>>('-687089292'))), '1757041501', CAST(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER) FROM vt1, rt0, v0 WHERE ((('-701324770')>>(x'')) COLLATE BINARY); -- 0ms;
SELECT ALL AVG((((v0.c0)) BETWEEN (('')) AND ((vt1.c1)))) OVER () FROM v0, vt1, rt0; -- 0ms;
SELECT DISTINCT CAST((v0.c0 IN (0x13c5a640, rt0.c1)) AS TEXT) FROM rt0, v0; -- 1ms;
SELECT DISTINCT (((((rt0.c0 IN (vt1.c1)))OR(MAX(rt0.c3))))OR(((rt0.c4) IS TRUE))), ((TYPEOF(rt0.c4)) NOT BETWEEN (MAX(rt0.c0, rt0.c1, rt0.c3, rt0.c2)) AND ((- (rt0.c3)))), CASE WHEN rt0.c2 THEN x'a02add3a' ELSE (((0.5772472396527187)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) END FROM rt0, v0 WHERE (((CAST(NULL AS BLOB))-((-235658244 IN (NULL)))));SELECT DISTINCT (NOT ((vt1.c1 IN ()))) FROM v0, rt0; -- 0ms;
SELECT DISTINCT MIN(v0.c0) FROM v0 WHERE (CASE CASE '750529362'  WHEN 0.5918335753676996 THEN '973450909' ELSE NULL END  WHEN (NULL IN ()) THEN '887962491' WHEN (('1158050996') IS FALSE) THEN ((x'') BETWEEN ('681621877') AND (x'c58e')) WHEN CASE WHEN x'' THEN 0.6506783657009226 END THEN (+ (NULL)) ELSE 0.9785235443211615 END); -- 0ms;
SELECT ALL SUBSTR(((((((((rt0.c2)AND(vt1.c1)))OR(rt0.c2)))OR(vt1.c0)))AND(v0.c0)), (('0.196964864387851') BETWEEN (v0.c0) AND (rt0.c1))) FROM rt0;SELECT DISTINCT (((((v0.c0, rt0.c3, x'eef59309')) BETWEEN ((vt1.c1, v0.c0, rt0.c1)) AND ((rt0.c4, vt1.c0, rt0.c0))))=(json_patch(rt0.c3, vt1.c1))) FROM rt0, v0;SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (v0.c0) AND (x'')))>=(vt1.c1 COLLATE RTRIM)) FROM rt0, vt1, v0 WHERE ((((x'') NOT NULL) IN ())) LIMIT -70649649; -- 0ms;
SELECT ((((((((v0.c0)AND(COUNT(rt0.c3))))OR(('1069573689' IN (v0.c0)))))AND(json(v0.c0))))OR(vt1.c1)) FROM v0, vt1, rt0; -- 0ms;
SELECT (+ (rt0.c3 COLLATE BINARY)) FROM rt0 ORDER BY (+ (rt0.c2 COLLATE BINARY)) DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((v0.c0) NOT NULL)) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND ((((rt0.c4))==((vt1.c0))))), (NOT (v0.c0 COLLATE NOCASE)), ROW_NUMBER() OVER () FROM v0, rt0, vt1 WHERE (((CAST(0xffffffffc3f7ad5a AS TEXT))%(((NULL) NOT BETWEEN (-1502165976) AND ('417339797'))))) LIMIT 1213516697 OFFSET -74048679; -- 0ms;
SELECT ALL ((rt0.c0)==((~ (rt0.c3)))) FROM vt1 WHERE (((((NULL) NOT BETWEEN (x'58dab3be') AND ('u,'))) NOT NULL));SELECT ALL rt0.c2 COLLATE BINARY FROM v0, rt0, vt1; -- 0ms;
SELECT ALL ((vt1.c1)|((1613731274 IN ()))) FROM vt1, rt0 NOT INDEXED WHERE (CASE (((NULL))=((x'')))  WHEN CAST(x'' AS TEXT) THEN ((NULL)|(2.085878668E9)) WHEN ((x'')||('')) THEN LENGTH(0.8740470634607874) WHEN ((NULL) BETWEEN ('') AND ('')) THEN (- (0.31842495948486504)) ELSE ((((-2080959383)OR(0.1234320174659489)))AND('<C})?s')) END); -- 0ms;
SELECT ALL ((((((((rt0.c2 COLLATE RTRIM)AND(TOTAL(rt0.c1))))AND(((rt0.c3)AND(rt0.c4)))))OR(CAST(rt0.c4 AS NUMERIC))))OR((((rt0.c1))!=((rt0.c3))))) FROM v0 WHERE (CASE CASE NULL  WHEN 0.5081640866436014 THEN x'' END  WHEN CAST(NULL AS REAL) THEN ((x'ae45')!=(0.46709294077945374)) ELSE ((x'')>(x'')) END) GROUP BY ((((rt0.c1)<=(vt1.c1)))AND(((1.069573689E9) NOT BETWEEN (rt0.c1) AND (vt1.c1))));SELECT ((rt0.c3) NOT NULL) FROM rt0 WHERE (CASE WHEN (('282402684')LIKE(0.7559762766895394)) THEN (((('0.840603335710127')AND(NULL)))AND(NULL)) WHEN ((((0X5e680d2a)AND(x'')))AND(NULL)) THEN ((0.5844041521944987)>(x'')) WHEN (('') NOT NULL) THEN (('_&糁Zn~ꓳ') BETWEEN (NULL) AND ('337626918')) END); -- 0ms;
SELECT (CAST(rt0.c4 AS TEXT) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1)<=(vt1.c0)) COLLATE RTRIM, ((CAST(rt0.c0 AS REAL))*(((((((((((((rt0.c1)OR(rt0.c2)))AND(vt1.c1)))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))), ((rt0.c2)*(rt0.c1)) COLLATE BINARY FROM v0, vt1, rt0 WHERE ((((((NULL))>=((x'')))) NOTNULL)); -- 1ms;
SELECT DISTINCT CAST(rt0.c4 COLLATE RTRIM AS NUMERIC) FROM vt1, rt0, v0; -- 0ms;
SELECT ALL FIRST_VALUE(((((rt0.c2)-(rt0.c2)))-(((rt0.c0)-(rt0.c2))))) OVER () FROM rt0 GROUP BY CASE NULL  WHEN ABS(vt1.c1) THEN '774183503' COLLATE BINARY WHEN ((x'') IS TRUE) THEN CASE rt0.c0  WHEN vt1.c0 THEN vt1.c1 END WHEN (v0.c0 IN ()) THEN UNLIKELY(DISTINCT rt0.c2) END, (((((rt0.c3, rt0.c3, rt0.c4))>((rt0.c3, '0.610853496639308', rt0.c1))))>(rt0.c3 COLLATE NOCASE)), CAST('' AS BLOB) COLLATE BINARY, json_insert(rt0.c0, (vt1.c0 IN ()), ((1821411916) BETWEEN (rt0.c1) AND (rt0.c1))), UNICODE(((rt0.c4) BETWEEN (NULL) AND (vt1.c0)));SELECT CAST((NOT (vt1.c0)) AS NUMERIC) FROM rt0, vt1, v0 WHERE (((((0Xffffffffdb0187fc)/(0.535435531193168))) NOT NULL)); -- 0ms;
SELECT CAST((((vt1.c1, vt1.c0, rt0.c1))<=((vt1.c0, rt0.c0, rt0.c0))) AS BLOB) FROM rt0, v0 INTERSECT SELECT DISTINCT (CAST(vt1.c0 AS INTEGER) IN ()) FROM rt0, vt1;SELECT ALL ((((v0.c0)=(rt0.c1)))GLOB(((v0.c0)!=(rt0.c4)))) FROM v0, rt0; -- 0ms;
SELECT ALL NULL FROM vt1, v0 WHERE (NULL); -- 0ms;
SELECT rt0.c2 COLLATE RTRIM FROM v0 WHERE (0X3baaa238) GROUP BY ((((rt0.c0, v0.c0, rt0.c3))>=(('^y', vt1.c0, vt1.c0))) IN ()), '0.8297567604875149', DATETIME(((0.7448232901642805)IS NOT(rt0.c0)), ((v0.c0) NOT BETWEEN (rt0.c4) AND (vt1.c1)), ((vt1.c0)*(rt0.c1)), rt0.c2 COLLATE BINARY, NULL, ((rt0.c2)/(vt1.c1)), COALESCE(rt0.c3, NULL, 0.036693549819694415, rt0.c2)) ORDER BY (((~ (rt0.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (((((v0.c0)AND(rt0.c3)))OR(rt0.c1))))  NULLS FIRST;SELECT ALL (((v0.c0)) NOT BETWEEN ((((rt0.c4)||(rt0.c4)))) AND ((v0.c0))), ((NULL)>=(rt0.c2 COLLATE NOCASE)), (((rt0.c2, v0.c0, v0.c0, rt0.c1, vt1.c0)) BETWEEN (((rt0.c1 IN ()), CAST(v0.c0 AS INTEGER), ((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c4)), ((vt1.c0)%(vt1.c1)), json_valid(rt0.c3))) AND ((((vt1.c1) NOTNULL), MIN(rt0.c3), ((((rt0.c2)OR(vt1.c1)))AND(rt0.c3)), (((vt1.c1))<((rt0.c3))), CAST(vt1.c1 AS TEXT)))) FROM vt1, rt0, v0 WHERE (x''); -- 0ms;
SELECT DISTINCT (+ (((rt0.c0)+(rt0.c0)))) FROM vt1, rt0 WHERE (((CASE NULL  WHEN x'' THEN 0.9229675304797877 ELSE x'd047' END)LIKE(CASE WHEN 'YF(*03' THEN 667297089 ELSE '' END))) GROUP BY (((vt1.c0 COLLATE RTRIM))=(((vt1.c0 IN ())))); -- 0ms;
SELECT (((((v0.c0)) BETWEEN ((x'')) AND ((v0.c0))))<<(vt1.c0 COLLATE NOCASE)), CAST((((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS INTEGER), (((rt0.c4)) BETWEEN ((((rt0.c3)=(rt0.c3)))) AND (((~ (rt0.c1))))) FROM rt0, vt1, v0; -- 0ms;
SELECT ALL '', ((((NULL)AND(v0.c0)))OR(((rt0.c1)OR(vt1.c1)))), (((((((((v0.c0)AND(vt1.c1)))OR(rt0.c0)))AND(rt0.c0)))OR('2092725606')) IN ()) FROM rt0, v0, vt1 WHERE (((((1022683033)) BETWEEN ((NULL)) AND ((0.6549073462439556))) IN ())); -- 0ms;
SELECT DISTINCT ((NULL)==(x'8958ed6c')) FROM v0, rt0, vt1 WHERE (CASE (((x'ffa74401', '1895230086', x''))<=((0.6506783657009226, 'Lg}8]￬F슱i', NULL)))  WHEN (NULL IN ()) THEN x'' COLLATE RTRIM ELSE ((']>') NOT BETWEEN (-1.456039513E9) AND (0.952680953562327)) END) ORDER BY ((rt0.c0)/((rt0.c3 IN ()))) ASC; -- 0ms;
SELECT DISTINCT ((AVG(rt0.c0))-((('mG') BETWEEN (vt1.c1) AND (vt1.c0)))) FROM rt0, vt1, v0 WHERE (((('1707566799' IN (NULL))) BETWEEN ((('0.46709294077945374') IS FALSE)) AND (CAST('' AS BLOB)))) ORDER BY (((((vt1.c1)<(vt1.c0))))<>((vt1.c0))) ASC; -- 0ms;
SELECT ALL rt0.c1 FROM vt1, rt0, v0 WHERE ((('1223646768')>(((x'') NOT NULL)))); -- 0ms;
SELECT ALL (rt0.c3 IN ()) COLLATE BINARY FROM v0 WHERE (((((0xffffffffff11d4da) IS TRUE))+(LIKELY('-1251829192')))); -- 0ms;
SELECT DISTINCT (~ (rt0.c3)) COLLATE RTRIM COLLATE BINARY FROM rt0, vt1, v0 WHERE (((CASE WHEN 964822293 THEN '887962491' WHEN '-1214327051' THEN '-1220918010' WHEN 0.7668687731409374 THEN NULL END)||(((('-1214327051', NULL, NULL)) NOT BETWEEN ((x'', '-1169677573', 0.19318462597628072)) AND ((0.7746386925998855, 0X425ae5c5, NULL)))))); -- 1ms;
SELECT (- ((('1536736279')GLOB('RHO')))) FROM vt1 LIMIT -52199660 OFFSET -701324770; -- 0ms;
SELECT DISTINCT (((((((((rt0.c4 IN ()))AND(((vt1.c1)GLOB(vt1.c0)))))OR(vt1.c0)))OR(x'')))AND(((rt0.c0)<(v0.c0)))) FROM rt0, v0, vt1 WHERE (CAST(CAST(x'' AS NUMERIC) AS NUMERIC)); -- 0ms;
SELECT ALL ((rt0.c0 COLLATE NOCASE)%((((vt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c1))))) FROM v0;SELECT COUNT(*) OVER () FROM rt0, vt1, v0 WHERE (((((((((((1022683033) IS FALSE))OR((('-635221956')+(NULL)))))AND(((x'3f0a')<('-1576451195')))))AND(0.9738735308078165 COLLATE NOCASE)))AND((NOT (0.9241657397609336))))); -- 0ms;
SELECT DISTINCT MAX(CAST(rt0.c4 AS REAL)) FROM vt1;SELECT LIKELY(x'') FROM v0, rt0, vt1; -- 0ms;
SELECT DISTINCT NTILE((~ ((((rt0.c0, rt0.c0, rt0.c2))==(('1223646768', rt0.c3, vt1.c1)))))) OVER () FROM vt1, rt0 WHERE (CAST(((' Z鿸lx') IS TRUE) AS NUMERIC)); -- 0ms;
SELECT CASE CASE rt0.c1  WHEN rt0.c1 THEN '8t' WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END  WHEN (((rt0.c3))<((rt0.c0))) THEN CASE v0.c0  WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN COUNT(rt0.c4) THEN ((rt0.c1)GLOB(rt0.c3)) WHEN HEX(DISTINCT '') THEN (NOT (v0.c0)) END, ((((rt0.c2) NOTNULL))/(0Xffffffffd429540a)), (((vt1.c1, rt0.c4, v0.c0)) BETWEEN ((CAST(rt0.c3 AS TEXT), ((vt1.c1)<(v0.c0)), '1147604409')) AND ((AVG(rt0.c3), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END, (('%*d&}<Vuc')IS NOT(rt0.c2))))) FROM vt1, rt0, v0 WHERE ((((('') ISNULL))OR((((0x5ec9a9b2)) BETWEEN (('*P~U')) AND ((0Xffffffffcab09c45)))))) ORDER BY rt0.c3 COLLATE NOCASE DESC; -- 1ms;
SELECT DISTINCT NULL FROM v0, rt0, vt1 LIMIT 1254671300 OFFSET 1819226096; -- 0ms;
SELECT DISTINCT (+ ((vt1.c0 IN ()))) FROM v0 WHERE ((NOT ((('\n')LIKE(x''))))) LIMIT 2131745647; -- 0ms;
SELECT ALL NULL FROM v0 WHERE (LIKELIHOOD(DISTINCT NULL COLLATE BINARY, 0.5907485920428265)); -- 0ms;
SELECT CASE (vt1.c1 IN ())  WHEN ((x'1fed')<=(v0.c0)) THEN ((rt0.c2)OR(rt0.c4)) END, CAST(((rt0.c4)>(rt0.c3)) AS NUMERIC), SUM(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))) OVER () FROM rt0 LIMIT 151057351;SELECT DISTINCT x'' FROM rt0, vt1; -- 0ms;
SELECT (((((rt0.c1))!=((vt1.c0)))) ISNULL), ((((v0.c0) IS FALSE))|(CASE WHEN rt0.c3 THEN vt1.c0 END)), rt0.c2 FROM v0, rt0;SELECT ((((((rt0.c3) IS TRUE))AND(rt0.c3)))OR(((vt1.c0) IS TRUE))), ((((vt1.c1) NOT NULL))&(((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))), (((~ (vt1.c0))) IS FALSE) FROM v0, vt1, rt0 GROUP BY ((((rt0.c0)OR(vt1.c1))) IS FALSE), ((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)) COLLATE BINARY, CAST(UNLIKELY(DISTINCT rt0.c3) AS BLOB) HAVING ((rt0.c1 COLLATE NOCASE)IS NOT(TRIM(rt0.c1, rt0.c0))) ORDER BY x'', NULL COLLATE BINARY; -- 0ms;
SELECT ALL ((- (rt0.c1)) IN ()) FROM v0; -- 1ms;
SELECT DISTINCT (((COUNT(*), LIKELY(rt0.c1), (NOT (vt1.c1))))>((MAX(rt0.c0), ((rt0.c3) ISNULL), '604347962' COLLATE BINARY))) FROM v0, rt0, vt1; -- 0ms;
SELECT CASE v0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM FROM vt1, rt0, v0 EXCEPT SELECT ALL CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (~ (vt1.c1)) THEN SUBSTR(rt0.c4, 0xffffffff898a7564) WHEN CAST(v0.c0 AS TEXT) THEN ((((((((vt1.c1)AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c4)) WHEN (+ (rt0.c2)) THEN ((vt1.c1)GLOB(rt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END FROM v0, vt1, rt0 WHERE (CAST(((NULL)|(NULL)) AS TEXT)) ORDER BY ((((rt0.c2)<(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 END) AND (((rt0.c4)=(rt0.c4)))) DESC, ((((418439950)>(vt1.c0)))>=((NOT (vt1.c0)))) DESC  NULLS FIRST;SELECT ALL ((((rt0.c2) BETWEEN (rt0.c2) AND ('gz?oBS6+,')))LIKE(rt0.c2 COLLATE NOCASE)) FROM rt0, vt1 WHERE (0.9842134951290523) GROUP BY (NOT ((rt0.c4 IN (rt0.c0, rt0.c4)))) ORDER BY json_extract(((vt1.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)), CAST(rt0.c3 AS BLOB)) DESC, ((((rt0.c1)IS(v0.c0)))>(((rt0.c3)<(rt0.c0))));SELECT CAST(((((rt0.c4)OR(vt1.c0)))AND(rt0.c4)) AS BLOB) FROM v0 WHERE (CAST((('-418035254') IS FALSE) AS TEXT));SELECT DISTINCT (NOT (v0.c0)) COLLATE NOCASE COLLATE NOCASE, CAST(0.9013103697791411 AS TEXT), ((((rt0.c0)>>(v0.c0))) IS TRUE) FROM vt1, v0 WHERE (((((((0.9931592815492648) NOT BETWEEN (x'c4a8') AND (0.5636818517175483)))AND((-1.706645285E9 IN ()))))OR(((x'') IS FALSE))));SELECT ((LENGTH(vt1.c0)) BETWEEN (((((((((rt0.c4)OR(vt1.c0)))AND(0xffffffff9de67798)))OR(rt0.c2)))AND('jw3j'))) AND (CAST(rt0.c3 AS INTEGER))) FROM rt0, v0, vt1 WHERE (((MAX('}[襦*', ''))-(CAST(0.9044642952944608 AS TEXT)))); -- 0ms;
SELECT DISTINCT NTH_VALUE((TYPEOF(DISTINCT vt1.c1) IN ((((v0.c0, v0.c0, rt0.c1))>=((vt1.c1, rt0.c0, v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))), rt0.c1 COLLATE NOCASE) OVER () FROM v0, vt1, rt0 GROUP BY vt1.c0 ORDER BY ((x'a3e5')%(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) DESC, (((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))) BETWEEN (((((rt0.c0)AND(vt1.c1)))OR(rt0.c0))) AND (v0.c0)) ASC; -- 0ms;
SELECT LOWER((((NULL))<>((rt0.c0)))) FROM rt0 ORDER BY CAST((~ (vt1.c0)) AS REAL) DESC, 0.6164186095110208 DESC  NULLS FIRST;SELECT DISTINCT ((NULL) NOT BETWEEN ((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((rt0.c4)))) AND (((((v0.c0)AND(rt0.c3)))AND(rt0.c0)))) FROM rt0, v0 ORDER BY (- (((rt0.c4)>>(vt1.c1))))  NULLS LAST, LIKELY(rt0.c4) ASC  NULLS LAST;SELECT NULL FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c2)OR(21721095))) FROM v0, rt0, vt1 WHERE ((((1651652848 IN ())) BETWEEN (((NULL)/('-431983871'))) AND (NULL))) ORDER BY (NOT (TRIM(DISTINCT vt1.c0, rt0.c4))); -- 0ms;
SELECT ALL TOTAL(((rt0.c1)!=(rt0.c1))) FILTER(WHERE CAST(((((rt0.c2)OR(v0.c0)))OR(rt0.c0)) AS INTEGER)) OVER () FROM v0;SELECT ALL rt0.c4 COLLATE BINARY, NULLIF('-431983871', vt1.c1) COLLATE BINARY, (((((((((((('R\rHlTLVe')AND(rt0.c4)))AND(rt0.c1)))AND(((rt0.c2)+(rt0.c1)))))OR(rt0.c4 COLLATE RTRIM)))OR(((rt0.c1) IS TRUE))))OR(((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) FROM rt0, v0 INNER JOIN vt1 ON CASE WHEN ((NULL) BETWEEN (x'') AND (rt0.c4)) THEN ((((((((((((vt1.c0)AND(vt1.c1)))AND(rt0.c4)))OR(v0.c0)))AND(rt0.c4)))OR(v0.c0)))OR(vt1.c1)) WHEN '猁㧳a\r' THEN ABS(rt0.c2) WHEN LIKE(rt0.c1, rt0.c3, '(') THEN ((rt0.c3)<(vt1.c1)) WHEN (~ (rt0.c2)) THEN LTRIM(rt0.c4) WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) THEN 'h' ELSE ((v0.c0)>=(rt0.c0)) END WHERE (('0.7838584902475796' COLLATE RTRIM IN ())); -- 0ms;
SELECT ALL (((((rt0.c3, rt0.c2, rt0.c4))<=((rt0.c4, rt0.c0, rt0.c2))))>(vt1.c0)), (((((vt1.c1 IN ()))OR(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)))))OR(CAST(vt1.c1 AS INTEGER))), UNLIKELY(v0.c0) COLLATE NOCASE FROM rt0 NOT INDEXED, v0 WHERE ((NOT (CAST('' AS REAL)))) GROUP BY ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))<((rt0.c0 IN ())));SELECT DISTINCT (- (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))), (((((v0.c0)IS(vt1.c1))))>=((((((((((((((x'')OR(vt1.c1)))AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c3))))), (AVG(rt0.c1) IN (MAX(rt0.c0))) FROM vt1, v0, rt0 WHERE (((((0.3711887678395661) IS TRUE)) NOT BETWEEN ((x'' IN ())) AND ('437199135' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT MAX(AVG(((((vt1.c0)OR(vt1.c1)))OR(rt0.c1)))) FROM v0 WHERE (((CASE 0.9945537375014465  WHEN x'7979' THEN x'' WHEN '-1186763070' THEN 0xffffffffc8f6a50c WHEN 0.687680117876032 THEN 0.15134335504499963 ELSE -1151012765 END)||('711227447' COLLATE BINARY))) LIMIT 2012221475 OFFSET 133706720;SELECT ALL ((HEX(DISTINCT vt1.c0)) NOT BETWEEN (rt0.c2) AND (((0X48ef5e30)<=(rt0.c0)))) FROM v0 ORDER BY (((((x'54df')OR(rt0.c0)))OR(vt1.c0)) IN ()), ((rt0.c4)>(rt0.c3)) COLLATE BINARY;SELECT DISTINCT ((((rt0.c0) IS TRUE))<(CAST(rt0.c3 AS TEXT))) FROM vt1, v0, rt0 WHERE ((((0.7735983991075613 IN ()))AND((- (NULL))))); -- 0ms;
SELECT ALL ((vt1.c1 IN (rt0.c0)) IN ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c1))), ((rt0.c3) NOT NULL))), GROUP_CONCAT(LOWER(v0.c0) COLLATE RTRIM) OVER (), ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE v0.c0 END) BETWEEN (((v0.c0)>>(v0.c0))) AND (((rt0.c1) NOT NULL))) FROM v0, vt1 ORDER BY ((((vt1.c1)+(rt0.c3))) BETWEEN (rt0.c3) AND (((((rt0.c1)OR(rt0.c3)))AND(vt1.c0)))) ASC;SELECT DISTINCT CAST('-7703877' AS BLOB), (((rt0.c3)) BETWEEN ((CASE WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c1 END)) AND ((((('1490343086')) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))), -1.5608614E7 COLLATE RTRIM COLLATE NOCASE, ((((rt0.c4) BETWEEN (v0.c0) AND (rt0.c4)))||(rt0.c1)), SUM(CAST(rt0.c1 AS BLOB)) FROM rt0, vt1;SELECT (+ (rt0.c1)) FROM rt0, v0, vt1 WHERE ((((((0.0) NOT NULL)))>((((('KT돨{/'))<>((NULL))))))); -- 0ms;
SELECT ALL COUNT(rt0.c2), AVG((- (v0.c0))) OVER (), rt0.c3 FROM vt1, rt0 WHERE (((((((0.4905583251052483)AND(x'')))AND(x''))) ISNULL));SELECT ALL TOTAL(((rt0.c2)<(rt0.c4))) OVER () FROM rt0, v0, vt1 LIMIT 1097825057; -- 0ms;
SELECT DISTINCT CAST(TOTAL(rt0.c2) AS BLOB) FROM vt1, rt0; -- 0ms;
SELECT ALL (- (CASE WHEN rt0.c0 THEN rt0.c3 END)), (((((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(vt1.c1)))AND(((x'26b0') NOT BETWEEN (vt1.c1) AND (rt0.c2)))), CASE WHEN '1u' THEN LIKE(vt1.c0, rt0.c3) END FROM vt1, v0;SELECT ALL ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END) NOT BETWEEN (rt0.c2) AND (((vt1.c0)&(rt0.c4)))) FROM vt1, v0, rt0 GROUP BY ((v0.c0)|(vt1.c0)) COLLATE RTRIM, CASE (('Ka%]b')IS(rt0.c2))  WHEN json_insert(rt0.c1, '', rt0.c2) THEN CAST(vt1.c1 AS INTEGER) ELSE ((rt0.c0)||(rt0.c1)) END, CAST(vt1.c1 COLLATE RTRIM AS REAL) HAVING JULIANDAY(((((((((vt1.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c2)), CAST(rt0.c4 AS INTEGER), TOTAL(vt1.c1), (((rt0.c2, rt0.c4, rt0.c1)) BETWEEN ((vt1.c1, rt0.c1, rt0.c0)) AND ((rt0.c0, vt1.c1, vt1.c0))), '<g-}3葝8T'); -- 0ms;
SELECT DISTINCT CAST(((rt0.c3) IS TRUE) AS INTEGER) FROM vt1;SELECT DISTINCT CASE WHEN ((0.5116848093727684)GLOB(rt0.c3)) THEN (+ (rt0.c1)) END FROM vt1, rt0 WHERE (HEX((((('841951749')OR(x'')))AND('R')))) ORDER BY (('') IS TRUE), ((((vt1.c1)-(rt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (((vt1.c1)+(vt1.c1)))) DESC, CAST(v0.c0 AS NUMERIC) ASC  NULLS FIRST;SELECT ALL LIKE(rt0.c4, rt0.c4) COLLATE RTRIM FROM vt1, v0;SELECT ALL ((x'')/(rt0.c3)) FROM v0;SELECT DISTINCT ((((((((((rt0.c0)AND(rt0.c2)))OR(vt1.c1)))OR(rt0.c1)))AND(rt0.c1)))%(NULL)) FROM rt0, v0, vt1; -- 0ms;
SELECT ALL TOTAL(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4))), (- (CAST(rt0.c2 AS REAL))), CASE (((rt0.c4)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))  WHEN ((v0.c0)>=(vt1.c1)) THEN (((vt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c0))) ELSE ((vt1.c1) BETWEEN (rt0.c4) AND (rt0.c3)) END FROM rt0 NATURAL JOIN v0 WHERE (UNLIKELY('To' COLLATE NOCASE));SELECT DISTINCT (NOT (NULL)) FROM v0, rt0, vt1 WHERE (CASE WHEN (+ (-1666252531)) THEN ((x'0586')LIKE('6de')) END); -- 0ms;
SELECT ((0.4441875783038106) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c4 END) AND (-5.53305896E8)) FROM vt1 WHERE ((+ (((310635226)IS NOT(x'1bc3'))))) LIMIT -1234786502 OFFSET 910680566;SELECT ALL ((((((((((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c1)))OR(COUNT(*))))OR(((rt0.c4) BETWEEN (NULL) AND (v0.c0)))))OR(CASE vt1.c1  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)))OR('23')), NULL, CASE AVG(vt1.c0)  WHEN json_array(rt0.c2, rt0.c1) THEN rt0.c2 COLLATE RTRIM END FROM rt0 WHERE (CASE WHEN ((NULL)LIKE(x'')) THEN '#}' COLLATE NOCASE WHEN '' THEN ((((',폚z a+鍌')AND(1.223646768E9)))AND(0.38433941479385003)) WHEN ((x'') NOT BETWEEN (x'') AND (0.23934615613171706)) THEN ((x'')<(x'')) ELSE -4.31983871E8 COLLATE BINARY END) GROUP BY (((((((('V{V⧟')AND(((rt0.c2)LIKE(rt0.c0)))))OR((rt0.c4 IN (vt1.c0)))))OR((rt0.c2 IN ()))))OR(NULL COLLATE BINARY));SELECT DISTINCT ABS((+ (rt0.c0))), vt1.c0, ((((((rt0.c4)AND(rt0.c1)))AND(''))) NOT BETWEEN (('1837140392' IN ())) AND (((rt0.c0)<=(v0.c0)))) FROM rt0 GROUP BY NULLIF(DISTINCT CAST(rt0.c0 AS BLOB), ((v0.c0) NOT BETWEEN ('>,RL') AND (rt0.c4)));SELECT ALL (((((rt0.c1, rt0.c2, vt1.c0))>((rt0.c4, rt0.c0, rt0.c2)))) NOT NULL) FROM vt1, rt0 WHERE (UPPER(0.6505447706478381) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((v0.c0)>=(rt0.c3)) IN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (0.0688403157608054)))) FROM rt0, vt1, v0 WHERE (((('1830226873')>>(x'')) IN ())) ORDER BY ((CASE rt0.c3  WHEN v0.c0 THEN v0.c0 END) BETWEEN (((rt0.c4)IS NOT(vt1.c0))) AND (LAST_INSERT_ROWID())) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c3 AS NUMERIC)) BETWEEN (CASE rt0.c2  WHEN NULL THEN v0.c0 ELSE rt0.c3 END) AND ((+ (v0.c0)))) FROM vt1, v0, rt0; -- 0ms;
SELECT DISTINCT ((CASE '1093891426'  WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END) NOT BETWEEN (CAST(rt0.c4 AS BLOB)) AND (((rt0.c3)-(rt0.c4)))), TOTAL(((vt1.c1)OR(vt1.c1))), (NOT (CAST(rt0.c2 AS BLOB))), ((('Eh')LIKE(vt1.c0)) IN ()), FIRST_VALUE('883887440') OVER ( PARTITION BY ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN vt1.c1 THEN v0.c0 END) BETWEEN (0.6255378148185696) AND ((((0.6186955196627852)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c1))))), 0.30100278816403336) FROM vt1 WHERE ((((- (x''))) BETWEEN (((x'a1f5') BETWEEN ('') AND ('1087126069'))) AND (CAST(0.011470360791344891 AS BLOB))));SELECT ((TOTAL(x''))!=(rt0.c1)) FROM rt0 WHERE ((((((NULL IN (1399223438)))OR((NULL IN ()))))AND((((0.5116848093727684)) NOT BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
SELECT ((rt0.c4 IN (rt0.c2)) IN ()) FROM vt1, rt0, v0 LIMIT 296673537; -- 0ms;
SELECT DISTINCT (+ (rt0.c2 COLLATE NOCASE)), (((rt0.c0)) BETWEEN ((vt1.c1 COLLATE RTRIM)) AND ((((rt0.c2)LIKE(rt0.c4))))), rt0.c2 COLLATE NOCASE FROM rt0;SELECT ALL CAST(vt1.c1 AS INTEGER) FROM vt1, rt0, v0 ORDER BY (((- (rt0.c3))) IS FALSE) DESC; -- 0ms;
SELECT DISTINCT TOTAL(((vt1.c0)>(rt0.c2)) COLLATE NOCASE) FROM rt0, v0, vt1 WHERE (((CASE NULL  WHEN '1436090011' THEN '[4' WHEN '' THEN NULL WHEN 0.435421814396335 THEN 0.03182701684023226 END) IS FALSE)); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM rt0, v0; -- 0ms;
SELECT ALL MAX((vt1.c1 IN ())), CAST(rt0.c4 COLLATE BINARY AS INTEGER), ((rt0.c0)LIKE(vt1.c1)) COLLATE BINARY FROM vt1;SELECT ALL CAST(CASE rt0.c2  WHEN v0.c0 THEN vt1.c0 WHEN x'c79b' THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 END AS TEXT) FROM vt1, v0 WHERE (NULLIF(CAST(NULL AS INTEGER), CAST(x'' AS TEXT))) GROUP BY ((((rt0.c0) IS FALSE)) ISNULL), (((((vt1.c1))>((vt1.c0))))>=(vt1.c1)), ((CAST(rt0.c1 AS NUMERIC))==(((vt1.c0)OR(rt0.c1)))), (((v0.c0)) NOT BETWEEN (((rt0.c0 IN (vt1.c1, rt0.c4, rt0.c2)))) AND ((CAST('翷6' AS BLOB)))), (((((((((rt0.c2 IN (vt1.c1, rt0.c2)))AND(rt0.c1 COLLATE BINARY)))AND((vt1.c1 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c1)))))AND((((rt0.c4, rt0.c2, vt1.c1)) BETWEEN ((rt0.c4, '459567431', rt0.c0)) AND ((rt0.c4, vt1.c1, rt0.c2)))));SELECT ALL (+ ((+ (rt0.c2)))) FROM vt1, rt0, v0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((rt0.c4 IN (rt0.c0))) AND ((((rt0.c1)) BETWEEN ((vt1.c1)) AND ((rt0.c4))))) FROM vt1, rt0 WHERE (CAST(NULL AS REAL) COLLATE BINARY) GROUP BY CASE WHEN rt0.c2 COLLATE BINARY THEN (rt0.c3 IN (rt0.c2)) WHEN CAST(vt1.c1 AS REAL) THEN TYPEOF(DISTINCT x'') WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) THEN CASE rt0.c2  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END ELSE vt1.c0 COLLATE RTRIM END;SELECT CAST(((((rt0.c3)OR(rt0.c4)))OR(rt0.c1)) AS NUMERIC), CASE ((((0X24b0b2e9)AND(0Xffffffffa061c1fd)))OR(vt1.c0))  WHEN ((rt0.c1) IS TRUE) THEN 1417437890 ELSE CASE WHEN rt0.c3 THEN vt1.c0 END END, ((((rt0.c2) NOT BETWEEN (0.9983989157772565) AND (rt0.c2)))<(rt0.c0)) FROM v0, rt0 WHERE (CASE ((-310458427) NOT BETWEEN (NULL) AND ('o'))  WHEN CASE ''  WHEN NULL THEN 0.9093131419238697 ELSE NULL END THEN (('X)8') IS FALSE) END) ORDER BY vt1.c1 ASC;SELECT DISTINCT ((((COUNT(rt0.c2))OR((('1108179587')|(rt0.c4)))))OR(rt0.c1)) FROM rt0, v0, vt1 WHERE (((UPPER(DISTINCT 0.9150666992835996)) NOT NULL)); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN 0.20259649416080694 ELSE rt0.c4 END)OR(((rt0.c1)<<(x'')))) FROM vt1;SELECT NTILE(x'1da0') OVER () FROM vt1, v0, rt0 WHERE (CASE WHEN CAST(0.6744808923783838 AS NUMERIC) THEN SQLITE_COMPILEOPTION_USED(NULL) END); -- 0ms;
SELECT ALL (((((((rt0.c1)AND(vt1.c0)))OR(rt0.c3))))<((((rt0.c3)IS NOT(rt0.c3))))) FROM vt1;SELECT ALL (vt1.c1 IN ()) COLLATE RTRIM, (((rt0.c0)) BETWEEN ((DATETIME(v0.c0, rt0.c2, vt1.c1))) AND ((CAST(rt0.c3 AS INTEGER)))), ((((rt0.c1)<(rt0.c1)))!=(rt0.c0 COLLATE BINARY)) FROM vt1, rt0, v0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)OR(TRIM(DISTINCT v0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), SUM(((rt0.c3)|('/Jn_Wl'))), ((CASE v0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END) IS TRUE) FROM vt1, rt0, v0 WHERE ((((0.9914226181781138 IN (-493783341, 8.15434086E8))) IS FALSE)); -- 0ms;
SELECT ALL (((vt1.c1)*(rt0.c2)) IN ()) FROM rt0, vt1 WHERE (((((((1490343086)AND(x'b193')))OR('bK'))) NOTNULL)) LIMIT -1934513587; -- 0ms;
SELECT DISTINCT ((x'')%(CAST(vt1.c0 AS INTEGER))) FROM v0, vt1, rt0 WHERE ((('UtFqf䲆' IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((CASE 1374997387  WHEN rt0.c2 THEN v0.c0 END)/(rt0.c4 COLLATE NOCASE)), CAST((v0.c0 IN ()) AS INTEGER), TOTAL(((((v0.c0)OR(rt0.c2)))AND(vt1.c1))) FROM v0, rt0, vt1; -- 0ms;
SELECT ((((((('HF%QQ')OR(rt0.c2)))AND(rt0.c0)), ((rt0.c1)==(v0.c0)), MAX(vt1.c0)))<=((((v0.c0)GLOB(rt0.c1)), ((v0.c0) NOT NULL), x'91c2'))) FROM vt1, v0;SELECT ALL rt0.c2 COLLATE BINARY FROM rt0, v0 WHERE ((((x'199b')) BETWEEN ((x'' COLLATE NOCASE)) AND ((CAST(0.281330313892419 AS TEXT))))) LIMIT -56506991 OFFSET -1803244579; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE NOCASE)==(((rt0.c3) NOT BETWEEN (v0.c0) AND ('-180840515')))), GROUP_CONCAT(0.480387726437974), ((CASE rt0.c4  WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) BETWEEN (0.6808562807411447) AND (((v0.c0)>=(rt0.c4)))) FROM rt0;SELECT UNLIKELY(DISTINCT rt0.c1) COLLATE RTRIM FROM rt0, vt1, v0 ORDER BY ((((((((vt1.c0 COLLATE NOCASE)OR(LENGTH(rt0.c0))))OR(x'')))OR((~ (rt0.c1)))))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 END)); -- 0ms;
SELECT ALL CASE CAST(v0.c0 AS REAL)  WHEN MAX(vt1.c0) THEN CAST(rt0.c4 AS BLOB) ELSE ((rt0.c2)IS NOT(vt1.c1)) END FROM v0, rt0, vt1 WHERE ((('-1784711488' COLLATE BINARY) IS FALSE)); -- 0ms;
SELECT DISTINCT x'' FROM v0 WHERE (((((CASE WHEN NULL THEN -2006451410 END)OR(HEX(DISTINCT 0Xffffffffa576b3db))))AND((('-1251829192') BETWEEN (0xffffffff97f497dd) AND (NULL))))); -- 0ms;
SELECT PRINTF(((rt0.c3) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c4)), (- (vt1.c1))), PRINTF(rt0.c0), (((vt1.c1)) NOT BETWEEN ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) AND ((x''))) FROM rt0 WHERE (CASE WHEN (((((((('747231898')AND(-1137232488)))OR(3.10635226E8)))OR('횜wd[<{<')))AND(NULL)) THEN ((0.9690380191352813)<>(0.19307021118065404)) ELSE (~ (NULL)) END);SELECT DISTINCT (CAST(rt0.c4 AS INTEGER) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT CASE json_remove(rt0.c2, vt1.c1, vt1.c1, rt0.c2)  WHEN ((0.8105033084141456)-(vt1.c0)) THEN ((vt1.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END FROM vt1;SELECT ALL 0.7581797064599396 FROM v0, rt0 WHERE (((('崆' IN ()))IS NOT(CASE WHEN '-74048679' THEN 0.17406214932873665 WHEN '1429547849' THEN x'' WHEN NULL THEN x'' END))); -- 3ms;
SELECT ALL (+ (v0.c0)), CAST(((rt0.c4) BETWEEN (rt0.c1) AND (x'')) AS TEXT), NULL, (CASE 'Cw'  WHEN x'' THEN rt0.c0 WHEN vt1.c1 THEN v0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 END IN (((rt0.c0)+(rt0.c4)))), ((vt1.c1 IN ()) IN ()) FROM v0, rt0 WHERE (((0.931240197916136 COLLATE RTRIM)IS NOT(CAST(0.240932222935061 AS TEXT))));SELECT ALL ((((('?t'))!=((vt1.c1))))|(((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))) FROM vt1 WHERE (CASE WHEN CAST(0.31935519105325294 AS INTEGER) THEN ('' IN ()) END);SELECT DISTINCT 0.9041446187366101 FROM vt1, rt0, v0 WHERE (((0X71d3be8c) NOT BETWEEN (((NULL)GLOB(0.9394289646390774))) AND (6.04347962E8 COLLATE RTRIM))); -- 0ms;
SELECT TOTAL(rt0.c4) COLLATE BINARY, CHANGES(), SUM((((rt0.c3))<((rt0.c3)))), DENSE_RANK() OVER (), rt0.c1 FROM vt1;SELECT ALL (((rt0.c1))=((vt1.c0))) COLLATE BINARY, CASE '-1061542123'  WHEN ((rt0.c0) BETWEEN ('ZIgꙀ') AND (vt1.c0)) THEN NULL COLLATE RTRIM ELSE ((rt0.c4)GLOB(rt0.c4)) END, x'' COLLATE RTRIM FROM vt1, v0, rt0; -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c0)) NOT NULL), rt0.c0, (((v0.c0)) NOT BETWEEN (((- (0.9663187029991691)))) AND ((SQLITE_SOURCE_ID()))) FROM rt0, v0, vt1 WHERE ((((x'e306')) BETWEEN ((((NULL) BETWEEN ('RBN%E{%') AND (0.9768007915102689)))) AND (((NOT (NULL)))))); -- 0ms;
SELECT ALL ((((GROUP_CONCAT(rt0.c0))OR(0.04444491468553069)))AND(CAST(rt0.c3 AS INTEGER))) FROM v0 WHERE ((((((0.6645634407356192)GLOB(NULL))))=(((('-0.0') IS FALSE)))));SELECT DISTINCT (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL) FROM v0, vt1 LIMIT -160531750 OFFSET -1612721239;SELECT DISTINCT '⌙-.', (((((((((~ (0.16432136716614865)))AND(((rt0.c3) ISNULL))))AND(-1.214327051E9 COLLATE NOCASE)))OR(((((((((v0.c0)AND(vt1.c1)))AND(rt0.c3)))AND(v0.c0)))OR(rt0.c3)))))AND(CASE WHEN rt0.c0 THEN rt0.c4 END)), HEX(DISTINCT x'') COLLATE BINARY FROM v0, vt1 WHERE (((~ (NULL)) IN ()));SELECT ALL COUNT(*) FROM v0, rt0, vt1; -- 0ms;
SELECT ALL (((NULL COLLATE NOCASE))>((CAST(rt0.c2 AS BLOB)))) FROM v0, rt0 WHERE (CAST(CAST('' AS REAL) AS INTEGER)) LIMIT -1656288169 OFFSET 1965073584; -- 0ms;
SELECT ALL rt0.c3, ((((vt1.c0 IN ())))=(((rt0.c0 IN ())))), MIN(((rt0.c4)<(vt1.c1))) FROM v0, rt0, vt1; -- 0ms;
SELECT ALL x'' FROM vt1, v0 WHERE (((CAST(NULL AS REAL))||('1965073584' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (('1971333718')!=(CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)) FROM vt1, v0, rt0; -- 1ms;
SELECT DISTINCT (- (((((rt0.c4)AND(rt0.c3)))OR(rt0.c4)))) FROM v0 NATURAL JOIN vt1 LIMIT 113964972 OFFSET 139287701;SELECT DISTINCT NULL, '-330754459' COLLATE RTRIM, SUM(rt0.c1), ((((rt0.c3)<<(vt1.c0))) ISNULL), ((AVG(rt0.c0))=(CAST(rt0.c1 AS BLOB))) FROM rt0 WHERE (((INSTR(0.6181742826234858, NULL))<<(NULL)));SELECT DISTINCT '#2bS~⧈', ((rt0.c1)>(vt1.c0)) COLLATE NOCASE, (((vt1.c0) ISNULL) IN (((((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c1)))) FROM rt0 LEFT OUTER JOIN vt1 ON UNLIKELY(CASE rt0.c3  WHEN vt1.c0 THEN rt0.c3 ELSE vt1.c1 END); -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), (- (((NULL)AND(v0.c0)))), (((('1708468703')LIKE(vt1.c0))) NOTNULL), ABS(v0.c0), ((CAST(rt0.c0 AS NUMERIC))<>(rt0.c2)) FROM vt1, rt0, v0; -- 0ms;
SELECT DISTINCT (((- (rt0.c1))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((((((((((((x'37ef')AND(rt0.c3)))AND(rt0.c1)))AND(vt1.c1)))OR(v0.c0)))AND(-1.512078243E9)))OR('-431983871')))) FROM vt1 WHERE ('-188217252');SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c1)))AND(((vt1.c1) BETWEEN (v0.c0) AND (0.7183521643847001)))))AND(((rt0.c2) BETWEEN (rt0.c3) AND (vt1.c0)))) FROM vt1 WHERE (((((0.9094824882583873) NOTNULL))*(((x'') BETWEEN (x'') AND (x'')))));SELECT DISTINCT (((rt0.c2)) BETWEEN (((rt0.c4 IN ()))) AND ((rt0.c1))) FROM vt1 ORDER BY 0.7735983991075613 COLLATE NOCASE ASC, ((((rt0.c0, -1.456039513E9, vt1.c1)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c2)) AND ((rt0.c4, rt0.c2, rt0.c1))) IN ());SELECT (+ (((((x'ce8c')AND(rt0.c0)))AND(vt1.c1)))), ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))<<(CASE vt1.c1  WHEN rt0.c2 THEN rt0.c3 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END)), (((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))>=((SUM(rt0.c2)))) FROM v0, rt0, vt1 WHERE ((((('R\rHlTLVe')+(NULL)))=(((1298724619) IS FALSE)))); -- 0ms;
SELECT SUM(((NULL)IS(rt0.c3))) OVER (), ((CASE WHEN rt0.c1 THEN rt0.c0 END)<>(json_quote(vt1.c0))), x'2124' FROM rt0, v0;SELECT ALL ((((((((((rt0.c2)<<(vt1.c1)))AND(((((((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR(0.08329519435525234)))AND(CAST(v0.c0 AS TEXT))))OR(NULL)) FROM rt0, v0, vt1 WHERE ((+ ((((x'9f90', 992163442, -1.251829192E9))>((x'', '1228664711', -1176833294)))))); -- 0ms;
SELECT ALL ((((rt0.c0)IS(rt0.c0))) ISNULL), rt0.c3, ((((v0.c0) IS FALSE))<=(((vt1.c1)|(rt0.c4)))) FROM vt1, rt0;SELECT NTH_VALUE((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (CAST(rt0.c0 AS REAL), ((rt0.c3) BETWEEN (rt0.c3) AND ('-2009948406')))), ((load_extension(rt0.c2, rt0.c1))+(rt0.c4 COLLATE RTRIM))) OVER () FROM v0, rt0; -- 0ms;
SELECT DISTINCT ((0.07331353746286873) BETWEEN (x'') AND (((v0.c0) ISNULL))), (((x'7b63')OR(rt0.c1)) IN ()), (((((NOT (rt0.c1)))AND(((NULL)>=(rt0.c1)))))AND(((v0.c0) BETWEEN (rt0.c4) AND (v0.c0)))) FROM rt0;SELECT DISTINCT GROUP_CONCAT(CAST(v0.c0 AS TEXT)), (((((((((((((((rt0.c4, rt0.c2, vt1.c1))>((vt1.c0, rt0.c1, vt1.c0))))OR((((0.61479013723302))!=((rt0.c1))))))OR(v0.c0 COLLATE RTRIM)))OR(CASE vt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN 0.8553502818636918 THEN rt0.c2 ELSE rt0.c3 END)))AND(((vt1.c1) NOT BETWEEN (rt0.c4) AND (vt1.c1)))))OR(('-235658244' IN (rt0.c1)))))AND(((vt1.c0)IS NOT(rt0.c4)))), CASE CAST(rt0.c1 AS REAL)  WHEN ((vt1.c0) IS TRUE) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (-1058919458)) WHEN vt1.c1 THEN v0.c0 WHEN ((((vt1.c0)OR('104444161')))AND(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (NULL)) THEN x'' WHEN json_insert(rt0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c2, rt0.c1) THEN (vt1.c0 IN ()) ELSE CASE rt0.c0  WHEN '93' THEN rt0.c3 WHEN rt0.c1 THEN vt1.c1 WHEN '9223372036854775807' THEN rt0.c2 ELSE v0.c0 END END, LOWER(vt1.c1 COLLATE NOCASE), (((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c1)) IN (CASE rt0.c3  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END)) FROM v0, vt1, rt0 WHERE (((((NULL)<(x'1f07')))LIKE(((NULL)!=(0.8555473335240202))))); -- 0ms;
SELECT DISTINCT (- (CASE WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END)) FROM rt0, vt1 WHERE (((((x'') NOT BETWEEN (-73395865) AND (138278427))) BETWEEN (((((NULL)OR('-1169677573')))AND(99064797))) AND ((+ ('~+^xV\r}R'))))) LIMIT -455867829;SELECT DISTINCT (((NULLIF(rt0.c1, vt1.c1)))<=((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) FROM rt0, vt1, v0; -- 0ms;
SELECT CAST(JULIANDAY(vt1.c0, 0xffffffffc22526a3, 0.527376099592292) AS TEXT) FROM rt0, vt1, v0; -- 0ms;
SELECT ALL ((((v0.c0) BETWEEN (0Xffffffffdd3eeb58) AND (rt0.c3)))IS(CASE 0.90786258601711  WHEN rt0.c4 THEN vt1.c1 END)) FROM vt1, v0 WHERE (((SQLITE_COMPILEOPTION_GET(0.06070995192671946)) BETWEEN (((0x4854cb99)=(x''))) AND ((NULL IN ())))) ORDER BY x'' ASC  NULLS LAST, ((((HEX(rt0.c2))AND(CASE rt0.c4  WHEN v0.c0 THEN vt1.c0 ELSE rt0.c3 END)))AND((rt0.c1 IN ())));SELECT CAST(((rt0.c3) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT) FROM v0, rt0, vt1 WHERE (((('417339797') NOT BETWEEN ('u8') AND ('-1554686878')) IN ())); -- 0ms;
SELECT ((((rt0.c3)OR(NULL)))AND(rt0.c1)) COLLATE RTRIM, vt1.c0, (((rt0.c3 IN ()))IS NOT(TRIM(DISTINCT vt1.c1, x''))) FROM v0, vt1, rt0; -- 0ms;
SELECT (+ ((((rt0.c4, v0.c0, 1e500))!=((vt1.c1, rt0.c3, rt0.c1))))) FROM rt0, v0, vt1 GROUP BY CASE WHEN ((rt0.c1) BETWEEN ('') AND (vt1.c0)) THEN -1328793808 END HAVING (((rt0.c1)) BETWEEN (((vt1.c1 IN (NULL, rt0.c1)))) AND (((~ (rt0.c4))))) LIMIT 158724973 OFFSET 230029925; -- 0ms;
SELECT DISTINCT ((rt0.c4) NOT BETWEEN (((v0.c0) ISNULL)) AND (((((vt1.c1)OR(vt1.c0)))OR(v0.c0)))) FROM vt1, v0, rt0 WHERE (CAST(('' IN ()) AS BLOB)); -- 0ms;
SELECT TOTAL(((vt1.c0)<(rt0.c3))) OVER () FROM vt1, rt0 WHERE ((((0.962685592426662)) NOT BETWEEN ((0.9745689721291074 COLLATE RTRIM)) AND ((0.11519842290711602)))); -- 0ms;
SELECT ALL SUM(((0.41900595583499556)>(rt0.c1))) FROM v0, rt0, vt1; -- 0ms;
SELECT ALL ((((((((((vt1.c0)>=(v0.c0)))OR(TOTAL('660085256'))))AND(CAST(rt0.c2 AS NUMERIC))))AND((+ (rt0.c0)))))AND(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c3)))) FROM vt1, rt0 WHERE ((+ (INSTR(0.7716288235962717, 0.6440856354622662))));SELECT DISTINCT (- (x'7d80')) FROM vt1, v0, rt0 WHERE (((x'3631') BETWEEN ('-2101820934') AND (0.7606188103429933)) COLLATE BINARY); -- 0ms;
SELECT (((rt0.c0)) BETWEEN ((CASE rt0.c1  WHEN x'' THEN rt0.c0 END)) AND (((- (rt0.c1))))), TOTAL(CAST(vt1.c0 AS NUMERIC)) OVER (), ((vt1.c1 COLLATE BINARY)-(rt0.c4 COLLATE NOCASE)) FROM vt1, v0, rt0; -- 1ms;
SELECT ALL vt1.c0 FROM rt0 ORDER BY '1341439891', ((((CAST(rt0.c0 AS BLOB))AND(CASE v0.c0  WHEN rt0.c4 THEN vt1.c0 END)))OR(rt0.c4))  NULLS FIRST, CAST(rt0.c4 AS NUMERIC) COLLATE NOCASE  NULLS FIRST;SELECT ALL (((+ (rt0.c1)))>((((v0.c0, rt0.c2, rt0.c4, vt1.c0, vt1.c1)) BETWEEN ((rt0.c0, rt0.c4, vt1.c0, rt0.c3, v0.c0)) AND ((rt0.c0, vt1.c1, rt0.c2, rt0.c1, x'a446'))))), ABS(DISTINCT (((vt1.c0))<((rt0.c4)))), (('-33152596') BETWEEN (v0.c0 COLLATE BINARY) AND ((rt0.c4 IN ()))) FROM rt0, vt1, v0; -- 0ms;
SELECT GROUP_CONCAT((rt0.c4 IN ())) FROM vt1 WHERE (((((x'') IS TRUE)) ISNULL)); -- 0ms;
SELECT DISTINCT CASE rt0.c0 COLLATE BINARY  WHEN 0.8309926977737666 THEN SQLITE_COMPILEOPTION_GET(rt0.c2) ELSE (~ (vt1.c1)) END FROM v0, rt0 WHERE ((((((289321987)) BETWEEN ((NULL)) AND ((0X2a647837))))*('')));SELECT ALL GROUP_CONCAT(((vt1.c0)IS NOT(v0.c0))) FILTER(WHERE ((CAST(rt0.c1 AS REAL)) NOTNULL)) OVER () FROM rt0, v0, vt1; -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt1 WHERE (((0.8079306037740706 COLLATE BINARY) NOT BETWEEN ((('P\nO*<5')AND('<T'))) AND (((0.7584551068757631)%(NULL)))));SELECT ALL ((((v0.c0)IS(v0.c0))) IS TRUE) FROM vt1, v0, rt0 WHERE (((CASE WHEN '' THEN 0.5859963384087022 END)*(((('-74048679'))>=(('qČVD')))))); -- 0ms;
SELECT DISTINCT COUNT(7.74183503E8) OVER (), 1766161181, ((CAST(rt0.c0 AS BLOB))-(vt1.c0 COLLATE NOCASE)) FROM v0, rt0;SELECT DISTINCT TOTAL((- ('-160531750'))) OVER () FROM v0, vt1; -- 0ms;
SELECT ALL (NOT (CASE vt1.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) FROM vt1, v0, rt0; -- 0ms;
SELECT DISTINCT ((((v0.c0) BETWEEN (v0.c0) AND (vt1.c1)))<=(((rt0.c2)OR(vt1.c1)))), ((((vt1.c0)IS(rt0.c1)))OR(MIN(rt0.c4))), ((((((rt0.c1)%(rt0.c0)))OR((- (rt0.c2)))))OR(((((rt0.c0)OR(vt1.c0)))AND(NULL)))) FROM vt1, rt0 WHERE (LIKELY(DATETIME(0.30822844902534974, '-1803244579', NULL))) LIMIT -246082306;SELECT CAST((((v0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c2))) AS INTEGER) FROM v0, vt1 WHERE (((((NULL)<>(0.5722032970547195)))&((NOT (x'')))));SELECT DISTINCT 0.9738735308078165, (((SUBSTR(vt1.c0, vt1.c0)))<=((LOWER(DISTINCT rt0.c0)))), (x'' IN ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), COUNT(*))) FROM v0, vt1;SELECT ALL json_patch(CAST(rt0.c4 AS NUMERIC), vt1.c1) FROM v0, rt0;SELECT DISTINCT (((rt0.c2))>((rt0.c1))) COLLATE NOCASE FROM rt0, v0, vt1 LIMIT -66978845 OFFSET -174054156; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c3)) NOTNULL), ((((rt0.c2) NOTNULL))=(CAST(NULL AS TEXT))), vt1.c1 FROM rt0, v0 WHERE ((('urX' COLLATE NOCASE)<=((+ (NULL)))));SELECT UNLIKELY(DISTINCT x''), (rt0.c2 COLLATE RTRIM IN ()), (((((((rt0.c1))>((rt0.c3))))AND(TRIM(DISTINCT vt1.c1, -285431048))))AND(((vt1.c0)LIKE(rt0.c1)))), (((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))+(v0.c0)), vt1.c1 FROM rt0 NOT INDEXED, v0 GROUP BY (((((rt0.c1))>((NULL)))) IS TRUE), CAST(vt1.c0 COLLATE NOCASE AS TEXT), CAST(((rt0.c0)<<(rt0.c4)) AS BLOB) HAVING TOTAL((vt1.c0 IN (vt1.c0, rt0.c0))) LIMIT 175934808 OFFSET -1361268395;SELECT DISTINCT NTILE(((CASE WHEN rt0.c1 THEN rt0.c4 END) ISNULL)) OVER () FROM rt0, v0, vt1 LIMIT -269682303 OFFSET 165743966; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c1)GLOB(rt0.c4))) OVER (), ((COALESCE(v0.c0, v0.c0, vt1.c1, v0.c0, vt1.c1, rt0.c3))/(json_array_length(v0.c0))), rt0.c2 FROM vt1, rt0, v0 ORDER BY NULL  NULLS LAST; -- 0ms;
SELECT ALL (((rt0.c1)) BETWEEN ((((rt0.c1) NOTNULL))) AND (((rt0.c0 IN ())))) FROM rt0 ORDER BY (NOT (CAST(rt0.c3 AS INTEGER))); -- 0ms;
SELECT DISTINCT RANK() OVER ( ORDER BY '-235658244'), v0.c0, (((- (rt0.c2)))>((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) FROM v0;SELECT DISTINCT ((LIKELY(rt0.c2))GLOB(((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)))AND(vt1.c1)))AND(vt1.c1)))), CAST(((vt1.c1)<<(rt0.c0)) AS TEXT), CAST(TOTAL(rt0.c0) AS INTEGER) FROM vt1, v0 INNER JOIN rt0 ON vt1.c0; -- 0ms;
SELECT DISTINCT (- (((v0.c0)||(rt0.c0)))) FROM vt1;SELECT ((((~ (rt0.c3))))<>((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2))))), ((((x'')AND(((v0.c0)<<(rt0.c0)))))OR(AVG('1097825057'))), COUNT(*) OVER () FROM v0;SELECT DISTINCT ((((((vt1.c0)AND('-174054156')))OR(rt0.c0))) NOTNULL), ((((vt1.c0)&(vt1.c0)))*(IFNULL(rt0.c1, rt0.c1))), AVG(((rt0.c3)!=(rt0.c3))) OVER () FROM rt0, v0, vt1; -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS REAL) FROM v0, vt1, rt0 WHERE ('-133662392'); -- 0ms;
SELECT DISTINCT (+ (CAST(rt0.c0 AS REAL))) FROM v0, vt1 WHERE (((((CASE WHEN NULL THEN '&xWG' END)AND((NULL IN ()))))AND(((x'4287')*(x'')))));SELECT ALL COUNT(*) OVER () FROM v0, vt1, rt0; -- 0ms;
SELECT (((rt0.c1, rt0.c0 COLLATE RTRIM, (rt0.c3 IN ())))<((SQLITE_COMPILEOPTION_GET(x'472c'), x'', (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))))) FROM rt0, vt1, v0; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((((((((((((CASE vt1.c1  WHEN v0.c0 THEN vt1.c0 END)OR(((rt0.c1)IS NOT(rt0.c1)))))AND(UPPER(DISTINCT rt0.c4))))OR((((rt0.c4))>((rt0.c2))))))OR(CASE WHEN rt0.c4 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c3 END)))OR(((rt0.c0) IS FALSE))))OR(((v0.c0) IS TRUE)))) OVER () FROM v0 WHERE (CASE WHEN ((NULL) NOTNULL) THEN (((0.5736483282519157))<((NULL))) WHEN ((NULL)<<(NULL)) THEN (('-')=('0.7629348439760921')) WHEN ((NULL)|(x'')) THEN (~ (x'')) ELSE UPPER('-89640820') END);SELECT DISTINCT TOTAL(((rt0.c3)||(vt1.c0))) FROM v0, rt0;SELECT (+ ('2019132545')) FROM vt1 WHERE (((CAST(x'' AS BLOB))LIKE(((0.6409586470509562)LIKE(-421746923))))); -- 0ms;
SELECT (- (MAX(vt1.c0))) FROM v0, vt1, rt0; -- 0ms;
SELECT ALL CAST((rt0.c1 IN ()) AS BLOB) FROM vt1 WHERE ((((CASE WHEN x'7b47' THEN 0.04101010331947663 ELSE '711227447' END))>((((x'')*(x'')))))) GROUP BY ((((((((UNLIKELY(DISTINCT rt0.c1))OR(((vt1.c0)<>('1938703312')))))AND(((rt0.c4)<=(rt0.c1)))))OR(x'')))OR((rt0.c3 IN ()))), ((rt0.c4)<(v0.c0)) COLLATE BINARY, (- (((vt1.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) HAVING ((rt0.c2) NOT NULL);SELECT DISTINCT FIRST_VALUE((((CAST(v0.c0 AS TEXT)))=(((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((NULL, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW) FROM v0 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT ALL (((((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c1))))&(rt0.c1 COLLATE BINARY)), (((rt0.c1)) NOT BETWEEN ((CASE WHEN 0x4854cb99 THEN vt1.c1 END)) AND ((rt0.c0 COLLATE BINARY))), ((rt0.c2 COLLATE NOCASE)>=(((rt0.c4)*(v0.c0)))) FROM rt0, vt1 WHERE (((INSTR('1114104321', x'')) NOT BETWEEN (x'' COLLATE RTRIM) AND (0.9994041525217786 COLLATE RTRIM)));SELECT DISTINCT vt1.c0 FROM v0, rt0 WHERE (((((('76')IS NOT(-1705006479))))>((((NULL)GLOB(NULL)))))) GROUP BY (((('-153744239') NOT NULL))IS(x''));SELECT DISTINCT (NOT (rt0.c4)) COLLATE NOCASE FROM v0, vt1 ORDER BY CAST((((rt0.c4))<((rt0.c4))) AS NUMERIC) DESC  NULLS LAST;SELECT ((((rt0.c3) ISNULL))||(vt1.c1)) FROM vt1, rt0; -- 1ms;
SELECT ALL CAST(((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)) AS NUMERIC) FROM rt0 WHERE (((((((((((((((0.27166632568196514)OR('-1398201332')))OR('/}i㯰m')))AND('^\nH켍#t8Qⵯ')))AND(0.7059691245495365)))OR(NULL)))OR(x'')))%((~ ('-635428384'))))) GROUP BY ((RTRIM(vt1.c0))>>((((rt0.c4, vt1.c1, rt0.c0)) BETWEEN ((rt0.c4, rt0.c0, vt1.c1)) AND ((vt1.c1, vt1.c1, rt0.c2)))));SELECT DISTINCT ((rt0.c2)<=(rt0.c0)) COLLATE RTRIM FROM rt0, v0, vt1 WHERE ((((((NULL) IS FALSE)))>(('310635226' COLLATE RTRIM)))) GROUP BY ((((CAST(rt0.c3 AS TEXT))OR(((vt1.c1)%(rt0.c2)))))AND(rt0.c3)); -- 0ms;
SELECT DISTINCT ((rt0.c2)GLOB(575886492)), ((vt1.c0) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (rt0.c3)), ((((((vt1.c0) IS FALSE))AND(COUNT(*))))AND(CAST(v0.c0 AS INTEGER))), SUM((('1254671300') ISNULL)) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), ((((rt0.c1)>>(rt0.c0)))<((+ (rt0.c3)))) FROM vt1, rt0;SELECT ALL NTILE(CASE (((vt1.c0))<=((0.4482582103317996)))  WHEN (((vt1.c0))<>((vt1.c0))) THEN vt1.c1 END) OVER (), ROW_NUMBER() OVER (), ((((((rt0.c2))<=((rt0.c2)))))==((((rt0.c0)>>(vt1.c1))))) FROM vt1 WHERE (CAST(CASE WHEN '136765282' THEN NULL ELSE '497446201' END AS TEXT));SELECT DISTINCT ((((rt0.c4 COLLATE BINARY)OR('o2\n(QA')))OR(((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c2)))OR(v0.c0)))AND(rt0.c2)))), ((CAST(rt0.c3 AS INTEGER))>(((rt0.c0)|(vt1.c0)))), (((rt0.c3 IN ()))IS('Y[]')) FROM v0, vt1, rt0 WHERE (json_patch(NULL, (x'' IN (0.7867558123036756)))); -- 0ms;
SELECT ALL (+ (((vt1.c0) IS TRUE))) FROM v0, vt1 WHERE (((0.9147260477350962) NOT BETWEEN (0.15077967795978042) AND ('0.3193987201555968')) COLLATE NOCASE); -- 0ms;
SELECT ALL NTILE((((((rt0.c3 IN (rt0.c1)))OR(LIKELY(rt0.c4))))AND(0.5177600181684889))) OVER (), (~ (((0.4610151890806866) ISNULL))), (((rt0.c3, rt0.c4, v0.c0)) BETWEEN ((LIKELIHOOD(rt0.c1, 0.49400285596156124), ((x'83d6b6c3')||(rt0.c3)), '}''g	dl')) AND (((rt0.c1 IN ()), rt0.c4 COLLATE BINARY, vt1.c0))) FROM vt1, rt0 WHERE ((((1.590274482E9) IS FALSE) IN ())) LIMIT 1065366095;SELECT ALL (((v0.c0) NOT NULL) IN (((vt1.c1)IS NOT(vt1.c0)), (((0X44bc259c))==((rt0.c3))))), TOTAL(vt1.c0 COLLATE RTRIM), ((((((rt0.c3) BETWEEN (rt0.c2) AND (v0.c0)))OR((NOT (rt0.c4)))))OR(((rt0.c3)GLOB(vt1.c1)))) FROM vt1, v0, rt0 WHERE ((((('') NOT BETWEEN (0Xffffffffda77d471) AND (''))) ISNULL)); -- 0ms;
SELECT DISTINCT (((NULL) NOT BETWEEN (rt0.c0) AND (vt1.c1)) IN (((rt0.c0)LIKE(vt1.c0)))), ((('PR')) NOT BETWEEN ((rt0.c3)) AND ((COALESCE(rt0.c4, 0.8297567604875149, rt0.c4, vt1.c1)))), (((x'd533' IN ())) NOT NULL) FROM v0, rt0, vt1 LIMIT 2018392137; -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT vt1.c1))LIKE(((rt0.c3) NOTNULL))) FROM v0 WHERE ((~ ((((NULL, 0x1a4fe4db, '', '-1333753587', NULL))>((0.26420994863575853, '䎅/3', NULL, x'', '缄k'))))));SELECT DISTINCT CAST((NOT (rt0.c4)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))!=((rt0.c2 IN ()))) FROM rt0, vt1, v0 WHERE (CASE WHEN '1025858003' THEN x'' COLLATE BINARY ELSE ((('1452423667'))>=((NULL))) END); -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE RTRIM)==(TYPEOF(DISTINCT rt0.c0))) FROM v0, rt0, vt1; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)=(vt1.c0)) AS NUMERIC), (v0.c0 COLLATE NOCASE IN ()), CAST(0.3109642966642101 AS REAL) COLLATE NOCASE FROM rt0, v0 WHERE ((((('')<(0xfffffffff0ea7888)))>>(((((-1.169677573E9)AND(NULL)))OR(NULL)))));SELECT GROUP_CONCAT((rt0.c2 IN ())), CASE TOTAL(rt0.c4)  WHEN ((x'')=(vt1.c0)) THEN (rt0.c1 IN ()) END, (((((rt0.c4) BETWEEN ('-996408187') AND (v0.c0))))<=((load_extension(rt0.c2, rt0.c1)))), GROUP_CONCAT(((((((((rt0.c1)AND(vt1.c1)))OR(v0.c0)))OR(rt0.c1)))AND(rt0.c1))), NTH_VALUE(((((vt1.c0)IS NOT(vt1.c0))) ISNULL), CAST(load_extension(vt1.c1) AS TEXT)) OVER () FROM vt1;SELECT DISTINCT (((((rt0.c4, rt0.c3, rt0.c0))>((vt1.c0, rt0.c4, vt1.c0))))>('2')), SQLITE_VERSION(), rt0.c3 FROM v0 WHERE (CASE WHEN (NULL IN (NULL)) THEN NULL END);SELECT DISTINCT (NOT ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) FROM v0 WHERE (CAST(CAST('_%' AS NUMERIC) AS INTEGER));SELECT DISTINCT (v0.c0 IN ()) COLLATE BINARY FROM v0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c4)>=(v0.c0)) AS NUMERIC) FROM vt1, rt0 WHERE (((NULL IN ()) IN ()));SELECT DISTINCT FIRST_VALUE(((('', rt0.c2, rt0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END, (vt1.c0 IN ()), ((rt0.c3)-(rt0.c3)))) AND (((- (rt0.c1)), (vt1.c1 IN ()), (((rt0.c4)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))))))) OVER () FROM rt0, v0, vt1; -- 0ms;
SELECT DISTINCT ((((((((rt0.c4)OR(v0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)) COLLATE RTRIM FROM rt0;SELECT ((((((rt0.c3)!=(rt0.c2)))OR((rt0.c3 IN ()))))OR(vt1.c1 COLLATE NOCASE)) FROM vt1 WHERE ((NOT (((0.2523074367960738) NOTNULL)))) LIMIT -1313148887;SELECT ALL (((((rt0.c0) IS FALSE), ((rt0.c2)*(vt1.c0)), ((rt0.c4)/(vt1.c0))))==((CAST(vt1.c1 AS TEXT), CASE WHEN '9fDA' THEN 0Xffffffffdc0724a2 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c1) IS TRUE)))), CAST(((vt1.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS NUMERIC), (NOT ((vt1.c0 IN ()))), LOWER(DISTINCT (~ (vt1.c0))), (((rt0.c4, vt1.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, ((rt0.c2)OR(rt0.c4)), (rt0.c0 IN ()))) AND ((((rt0.c2) IS TRUE), (((rt0.c1))>((rt0.c0))), CASE rt0.c2  WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN NULL WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END))) FROM v0 WHERE (CAST(0.7979789345521823 AS INTEGER));SELECT ALL CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END COLLATE NOCASE FROM rt0 CROSS JOIN vt1 ON CASE WHEN TRIM(rt0.c4) THEN CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END END GROUP BY (NULL IN ()), vt1.c1, 'fAi' HAVING CAST((('1158050996') NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC); -- 0ms;
SELECT ALL ((((rt0.c0) IS TRUE)) ISNULL) FROM vt1;SELECT DISTINCT RANK() OVER () FROM vt1, v0 WHERE (((((-620198454) IS FALSE))IS NOT(0Xffffffffc5814373))); -- 0ms;
SELECT DISTINCT COUNT((('') NOT BETWEEN (rt0.c3) AND (x''))) OVER (), (+ ((+ (rt0.c1)))), ((((vt1.c0)|(rt0.c2)))IS NOT(((rt0.c3)IS(rt0.c0)))), (((vt1.c0)) BETWEEN ((ABS(rt0.c3))) AND ((rt0.c1 COLLATE RTRIM))), ((x'') NOT BETWEEN (rt0.c3) AND (((rt0.c1) IS TRUE))) FROM vt1;SELECT DISTINCT (((v0.c0)) BETWEEN ((((((((((((((rt0.c3)OR(v0.c0)))AND(vt1.c1)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))AND(v0.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) FROM rt0 WHERE (0.6646696177467148);SELECT DISTINCT ((0.5119121124373683) BETWEEN (((rt0.c0)>(rt0.c4))) AND (vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE (CAST((((((((('0.6482904547076911')AND(NULL)))OR('''')))AND(NULL)))AND('&V')) AS INTEGER));SELECT DISTINCT COUNT(*) FILTER(WHERE (((((((((((vt1.c0))=((vt1.c0))))OR(((vt1.c0)!=(vt1.c0)))))OR(CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END)))OR((NOT (rt0.c4)))))OR(CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c4 WHEN '' THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN vt1.c1 THEN rt0.c1 END))) OVER () FROM v0 WHERE ((~ (CAST('-435567907' AS TEXT)))) ORDER BY (- (v0.c0))  NULLS FIRST, LOWER(((v0.c0) ISNULL));SELECT ALL ((((((((rt0.c4)OR(NULL)))AND(vt1.c1)))OR(GROUP_CONCAT(v0.c0))))AND(vt1.c1)), ((((rt0.c1) IS FALSE)) BETWEEN (x'') AND (rt0.c1)), rt0.c0 FROM vt1 LIMIT -687089292 OFFSET 1201543702;SELECT DISTINCT (vt1.c0 IN (CAST(rt0.c2 AS BLOB))) FROM v0;SELECT DISTINCT (- (TYPEOF(DISTINCT vt1.c0))), (NOT (((v0.c0) BETWEEN (rt0.c3) AND (v0.c0)))), COUNT(*) FROM rt0, vt1 WHERE (((((x'')<(NULL))) ISNULL));SELECT ALL ((COUNT(vt1.c0))>(CASE rt0.c1  WHEN x'0430' THEN rt0.c1 ELSE rt0.c3 END)), ((COUNT(NULL)) NOT BETWEEN (((rt0.c1)&(vt1.c1))) AND ((rt0.c4 IN ()))), COUNT(x'') OVER () FROM rt0, vt1, v0 LIMIT -1557349313; -- 0ms;
SELECT DISTINCT ((rt0.c2)&(NULL)) COLLATE NOCASE FROM rt0, v0, vt1; -- 0ms;
SELECT ALL CAST(vt1.c1 AS REAL) COLLATE NOCASE, ((((v0.c0 COLLATE BINARY)OR(((vt1.c1)%(rt0.c0)))))OR((((vt1.c1, vt1.c1, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c4, vt1.c1)) AND ((rt0.c4, rt0.c1, '787608890'))))), (+ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) FROM vt1, rt0, v0 WHERE ((((('Iꕢ')+('{nowzovCZ'))) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)||(vt1.c1)) AS INTEGER), LAG(x'', (CAST(rt0.c4 AS INTEGER) IN ()), CASE TYPEOF('-1267398787')  WHEN '9223372036854775807' THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0.3025110047878621 WHEN rt0.c3 THEN '' END ELSE CAST(rt0.c3 AS REAL) END) OVER (), (((((('-1866293338'))<=((vt1.c1)))))<=((((vt1.c1)||(rt0.c1))))) FROM rt0 WHERE ((NOT (((x'') IS TRUE))));SELECT ALL COUNT(((rt0.c4) NOTNULL)), ((((rt0.c2)>(rt0.c4)))IS NOT(SUM(rt0.c2))), rt0.c3 FROM vt1, v0 WHERE (((((CASE WHEN NULL THEN NULL WHEN '' THEN NULL WHEN 0.5737555514178343 THEN x'' WHEN NULL THEN x'6e19' WHEN 326211857 THEN 'nAfnn{_[~' WHEN x'94b9' THEN NULL WHEN 0.11679901963170003 THEN '|J4G-}ᴦ' ELSE 0.8583296484009141 END)AND(((('[4')) BETWEEN ((NULL)) AND (('-536510716'))))))OR(((NULL)<<(0xffffffffd632a21e)))));SELECT DISTINCT (~ (((x'')==(rt0.c0)))) FROM vt1, v0;SELECT COALESCE(DISTINCT ((vt1.c1)LIKE(vt1.c1)), ((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(v0.c0)))OR(rt0.c0)))OR(v0.c0))) FROM v0 WHERE ((((('HF%QQ')OR(x'')))OR('1207665933')) COLLATE RTRIM) LIMIT 1544163315 OFFSET 1607677009;SELECT DISTINCT ((((vt1.c0)<(vt1.c0)))IS((rt0.c0 IN (rt0.c3, v0.c0)))) FROM rt0, vt1, v0 WHERE ((((~ ('-1612721239')))IS NOT((((('6de')OR('-133838044')))OR(NULL))))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS TEXT))GLOB(rt0.c0)) FROM v0, vt1;SELECT DISTINCT MIN((((vt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE BINARY) FROM v0, vt1, rt0; -- 0ms;
SELECT ALL (((((v0.c0))=((rt0.c0))))IS(GROUP_CONCAT(rt0.c3))) FROM v0, vt1;SELECT ALL (('-74048679') NOT BETWEEN (((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c0))) AND (rt0.c0 COLLATE NOCASE)), FIRST_VALUE(((rt0.c4)/(((rt0.c1)%(rt0.c2))))) OVER (), json_quote(((((x'')AND(rt0.c3)))AND(rt0.c3))) FROM rt0;SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))/(CAST(vt1.c0 AS REAL))) FROM rt0, vt1, v0 GROUP BY CAST(CASE vt1.c1  WHEN v0.c0 THEN vt1.c0 ELSE rt0.c0 END AS NUMERIC) HAVING (((rt0.c4 IN (vt1.c1)))-((rt0.c4 IN (NULL)))); -- 0ms;
SELECT DISTINCT TOTAL('s') OVER () FROM vt1, rt0, v0; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 COLLATE NOCASE AS BLOB) FROM rt0 WHERE ((((x'')/('9jly鞽5s൞')) IN ())) ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((rt0.c3)<=(rt0.c3))))  NULLS LAST; -- 0ms;
SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))%(((x'')||(vt1.c0)))) FROM v0, rt0, vt1; -- 0ms;
SELECT 0x13c5a640 FROM vt1; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c3 AS REAL) AS REAL), AVG(((rt0.c3)LIKE(rt0.c4))), (SUM(0Xffffffff84543cb1) IN ()) FROM rt0 WHERE (((0.5198334734541407 COLLATE BINARY) BETWEEN ((('-160531750') NOT BETWEEN (x'd8b5') AND ('_H>T9'))) AND ((('ڦƙ') IS TRUE)))); -- 0ms;
SELECT DISTINCT x'c8e0' FROM vt1 WHERE ((('290919880')GLOB(CASE WHEN NULL THEN 0X5e0defb WHEN '-520572826' THEN 0.7103465683016729 WHEN NULL THEN 0.37463614160247005 END))) GROUP BY ((CAST(rt0.c0 AS TEXT))=(rt0.c3 COLLATE RTRIM));SELECT ALL TOTAL('654487540'), ((((v0.c0)>=(rt0.c0)))>(LIKELY(DISTINCT '-1803244579'))), LAG(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 WHEN '1536736279' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END COLLATE NOCASE, ((NULL) NOT NULL), ((rt0.c4 COLLATE NOCASE) NOT BETWEEN ((((rt0.c3, rt0.c1, rt0.c4)) BETWEEN ((-1267398787, rt0.c2, rt0.c2)) AND ((rt0.c4, rt0.c4, rt0.c4)))) AND ((((rt0.c0))<((rt0.c4)))))) OVER () FROM rt0 WHERE ((((('-1706645285')/('0.5644546461914722'))) BETWEEN ((- ('/.o!6VE9'))) AND (((1743459957) ISNULL))));SELECT DISTINCT IFNULL((vt1.c1 IN ()), ((v0.c0)>(vt1.c0))) FROM vt1, v0 LIMIT -2065272421 OFFSET 1832170961; -- 1ms;
SELECT DISTINCT CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c1)AND(vt1.c1)) END FROM v0;SELECT DISTINCT FIRST_VALUE(((x'' IN ()) IN (GLOB(vt1.c0, rt0.c4)))) OVER () FROM rt0, vt1 ORDER BY CAST(((rt0.c1)||(rt0.c0)) AS INTEGER) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1) NOT NULL))OR(rt0.c0)))OR(TOTAL_CHANGES())))AND(CAST(vt1.c1 AS TEXT))))OR(((NULL)GLOB(rt0.c0)))) FROM v0, vt1, rt0 GROUP BY x''; -- 1ms;
SELECT DISTINCT CASE WHEN (((rt0.c3, vt1.c0, 0.8966242570111109))<=((rt0.c4, rt0.c1, v0.c0))) THEN CASE WHEN vt1.c0 THEN rt0.c4 END ELSE CASE WHEN vt1.c0 THEN rt0.c4 END END FROM rt0, v0 WHERE (((CASE WHEN 0.288339381778127 THEN '-635428384' END)-(CASE WHEN 0.12843093656819826 THEN x'93d0436f' WHEN 1.971333718E9 THEN 750529362 WHEN x'' THEN NULL ELSE NULL END)));SELECT DISTINCT CASE WHEN 0Xffffffff9484abdd THEN ((v0.c0) NOT NULL) ELSE rt0.c1 COLLATE BINARY END, vt1.c0, ((((((rt0.c4)OR(rt0.c3)))AND(v0.c0))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (rt0.c3)) FROM v0, vt1;SELECT ALL TOTAL(SUM(CASE v0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END)) FROM vt1, rt0 WHERE (RTRIM(TOTAL_CHANGES()));SELECT COUNT(*) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT RANK() OVER (), (((((((v0.c0))<>((v0.c0))))OR((- (rt0.c1)))))AND((+ (rt0.c1)))), 'Y6(Q' FROM v0, rt0, vt1 WHERE (((((0x2f3f230) IS TRUE))<((NOT ('<T'))))); -- 0ms;
SELECT DISTINCT CAST(((NULL) BETWEEN (rt0.c0) AND (vt1.c1)) AS REAL) FROM vt1 WHERE (CASE x''  WHEN x'' COLLATE BINARY THEN ((x'')>=(-1.267398787E9)) ELSE ((0.11316834861137215) BETWEEN (-1.27289724E8) AND (x'')) END);SELECT LAST_INSERT_ROWID() FROM rt0; -- 0ms;
SELECT ALL CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER), AVG(((rt0.c2)<>(vt1.c1))) OVER (), ((COUNT(*)) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((('D,KI0', rt0.c4, vt1.c1)) NOT BETWEEN ((vt1.c1, rt0.c0, rt0.c1)) AND ((vt1.c1, rt0.c0, rt0.c1))))) FROM vt1 WHERE (((((NULL IN ()), NULL, (NOT ('-2059268461'))))<((((NULL) IS TRUE), (('>|y')==('-1037752669')), (('') NOTNULL)))));SELECT ALL NTILE(((rt0.c1 IN ()) IN ())) OVER () FROM rt0, v0, vt1 WHERE ((- (COALESCE(DISTINCT x'', '-180840515')))) LIMIT 600043544 OFFSET 1794752737; -- 0ms;
SELECT ALL ((CAST(x'' AS TEXT))|(((rt0.c4) IS FALSE))), ((rt0.c0) IS TRUE), (((+ (vt1.c0)))|(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c4)))) FROM rt0, v0;SELECT TRIM(((rt0.c3) IS TRUE)) FROM vt1, v0 ORDER BY ((CAST(rt0.c4 AS INTEGER)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(rt0.c2))) AND (((vt1.c1)IS NOT(rt0.c1)))) ASC;SELECT ALL (((((- (rt0.c4)))AND(rt0.c0 COLLATE BINARY)))AND(rt0.c3 COLLATE NOCASE)), (+ (0.04101010331947663)), (- ('')) FROM rt0, v0 WHERE (NULL); -- 0ms;
SELECT (((rt0.c3 IN ()))IS(COUNT(*))), ((rt0.c0 COLLATE RTRIM)=(((v0.c0) NOT NULL))), CAST(rt0.c2 COLLATE RTRIM AS NUMERIC) FROM vt1;SELECT ALL (((((NULL IN ()))OR(((rt0.c0) ISNULL))))AND(rt0.c4)) FROM rt0 WHERE (SQLITE_VERSION()) ORDER BY NULL  NULLS LAST; -- 0ms;
SELECT DISTINCT load_extension(' v'), PERCENT_RANK() OVER (), ((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((vt1.c0))) IN ()) FROM rt0 WHERE (((NULL COLLATE NOCASE)OR(LIKELIHOOD(DISTINCT 0.039907976201411066, 0.5504014305713992))));SELECT DISTINCT LAST_VALUE(CAST(((((((((((((v0.c0)OR(v0.c0)))AND(0.053719396466681446)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS INTEGER)) OVER (), ((MAX(NULL))AND(((v0.c0)LIKE(vt1.c1)))), ((((v0.c0)LIKE(v0.c0)))LIKE(CASE WHEN rt0.c1 THEN rt0.c4 END)) FROM v0 WHERE (CASE WHEN CASE -5.12318016E8  WHEN 'b42%!' THEN x'3092' END THEN CASE 0.36662015062651154  WHEN x'' THEN '	_+' WHEN 0.08449603254364935 THEN NULL WHEN 122349767 THEN 0.7094536977320453 END ELSE ((((0.4146423995623175)OR(0.3570934009164609)))AND(NULL)) END);SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4))) NOTNULL) FROM vt1, rt0, v0 WHERE (CAST(((((x'')AND(x'')))OR(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT LIKELIHOOD(((rt0.c2)<<(v0.c0)), 0.4493329919286574), ((rt0.c2)OR(rt0.c2 COLLATE BINARY)), x'', ((((((rt0.c3, rt0.c1, '-183639938'))==((rt0.c2, x'2a8d', vt1.c0)))))>=((((rt0.c0) IS FALSE)))), (((((rt0.c1 IN (v0.c0, vt1.c1)))OR(((rt0.c1) NOT NULL))))AND(-1220918010)) FROM rt0, vt1, v0 WHERE (((NULL COLLATE RTRIM) NOT NULL)); -- 0ms;
SELECT ALL DENSE_RANK() OVER ( ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((~ (rt0.c0))))  NULLS LAST, (LIKELY(DISTINCT vt1.c1) IN ()) DESC, (- (((NULL)IS NOT(rt0.c0))))  NULLS LAST) FROM v0, rt0; -- 0ms;
SELECT DISTINCT (~ (CASE WHEN rt0.c0 THEN rt0.c4 END)) FROM v0, rt0, vt1 WHERE (CASE CAST(0X67f45319 AS INTEGER)  WHEN ((((x'572a')AND(0.09549509981649562)))AND(NULL)) THEN LOWER(DISTINCT x'36f9') END); -- 0ms;
SELECT DISTINCT MIN(((rt0.c2)<>(rt0.c4))) FROM rt0, vt1; -- 1ms;
SELECT ALL (rt0.c1 COLLATE BINARY IN ((- (rt0.c0)))), NULL, NTILE((((- (vt1.c0))) NOT NULL)) OVER () FROM vt1 WHERE (((((NULL)IS(NULL)))<>((((('A훵')AND(0.1641685252140661)))OR(NULL)))));SELECT DISTINCT ((rt0.c3) NOTNULL) FROM vt1;SELECT ALL (((- (rt0.c3)))|(MAX(rt0.c4))), ((((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c1))) BETWEEN (x'b7e7') AND (v0.c0)), ((((- (rt0.c1))))>((COALESCE(rt0.c0, vt1.c0)))) FROM rt0, vt1, v0; -- 0ms;
SELECT (+ (rt0.c4 COLLATE RTRIM)) FROM v0 LIMIT 2085878668 OFFSET 1819226096;SELECT DISTINCT UNLIKELY(DISTINCT (NOT (rt0.c3))) FROM v0, vt1 WHERE ((((0.7296468326097894, NULL, 'CX')) BETWEEN ((x'', ((0.4548982768490367)=(8.87962491E8)), ((x'')GLOB(NULL)))) AND (((- ('')), x'3b46', ((0.8419183581045164) NOT BETWEEN (NULL) AND (x'26ba'))))));SELECT DISTINCT ((AVG(vt1.c1))=(((rt0.c4) ISNULL))), ((0.13767567289635674)!=(vt1.c1)) COLLATE BINARY, AVG(INSTR(rt0.c4, rt0.c3)) FROM vt1, v0, rt0 WHERE (((CAST(0.5924724316176428 AS BLOB))>=(UNLIKELY('1')))) GROUP BY (((rt0.c3 COLLATE BINARY))>=((rt0.c3 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)/(v0.c0)))AND(rt0.c1)), CASE WHEN ((vt1.c1)>>(rt0.c2)) THEN 0.3310641218794984 ELSE rt0.c4 COLLATE NOCASE END, CAST((NOT (rt0.c4)) AS REAL) FROM v0, rt0;SELECT ALL rt0.c4 FROM vt1 WHERE (CASE WHEN ((x'') IS FALSE) THEN NULL WHEN (x'' IN ('Z7Z!q')) THEN (NOT (x'36a9')) WHEN NULL COLLATE NOCASE THEN CASE 0.9766907731353512  WHEN x'' THEN NULL ELSE -1.681113528E9 END END);SELECT DISTINCT ((MAX(rt0.c3, vt1.c1))GLOB(((vt1.c1) IS FALSE))), (((CASE WHEN x'' THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN vt1.c0 END))>=((CASE v0.c0  WHEN rt0.c3 THEN rt0.c3 END))), (('9. -kJ2H,') NOT NULL) FROM v0, rt0 WHERE (json_array(((x'21b1') IS FALSE), CAST('1098427311' AS INTEGER)));SELECT ALL GROUP_CONCAT(TOTAL(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)) FROM v0, rt0, vt1;SELECT ALL (CASE rt0.c4  WHEN v0.c0 THEN rt0.c0 END IN ()), SUM(((890574013)LIKE(rt0.c4))) OVER (), NULL FROM rt0, vt1 WHERE ((((json_insert(0xffffffffed42e676, '', '-Y', x'', -31445444)))>((CASE '815434086'  WHEN NULL THEN 0.31558440674807564 END))));SELECT DISTINCT (AVG('1819226096') IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))), rt0.c4, ((rt0.c2)+(rt0.c0)) COLLATE NOCASE FROM vt1;SELECT ALL ((((vt1.c0) NOT NULL))|((rt0.c3 IN ()))) FROM vt1, v0, rt0 LIMIT 1757041501; -- 0ms;
SELECT DISTINCT rt0.c0, (((v0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((NOT (NULL)), ((NULL) BETWEEN (rt0.c2) AND (NULL)), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))) AND ((MIN(v0.c0), (rt0.c3 IN ()), SUM(v0.c0)))), (((((~ (rt0.c3)))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)))OR((((x''))==((rt0.c2))))) FROM rt0 WHERE (NULL);SELECT ALL UPPER((rt0.c2 IN (rt0.c3))) FROM vt1, rt0, v0; -- 0ms;
SELECT ALL (((rt0.c3 IN (rt0.c0))) BETWEEN (CAST('' AS INTEGER)) AND (CAST(vt1.c1 AS INTEGER))), (((((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c1)), ((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c3)), ((rt0.c2)-(rt0.c3)), ((rt0.c4)|(rt0.c2)), vt1.c1 COLLATE RTRIM))<=((rt0.c3 COLLATE NOCASE, CAST(rt0.c0 AS TEXT), rt0.c1 COLLATE BINARY, vt1.c0, COUNT(rt0.c2)))), rt0.c3 FROM rt0 NOT INDEXED, vt1, v0 WHERE ((((((((((('')+('711227447')))OR((((((((((((('1757041501')AND(NULL)))AND(x'4a1d5db3')))OR(1.189505174E9)))OR('0.535435531193168')))OR(3379785965614771358)))AND(x'')))))OR(CASE '''EQ(&d'  WHEN NULL THEN '' END)))AND(((NULL)OR(NULL)))))AND('' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((json_quote('925713558'))>=(GLOB(rt0.c0, rt0.c0))) FROM vt1;SELECT '604347962', CASE WHEN ((rt0.c0)<=(rt0.c2)) THEN UPPER(vt1.c0) END, (((((rt0.c4 IN ()))OR(((rt0.c3)LIKE(rt0.c3)))))OR(((((rt0.c3)AND(vt1.c0)))AND(rt0.c4)))) FROM vt1, rt0, v0; -- 0ms;
SELECT DISTINCT CAST(((vt1.c1)OR(vt1.c1)) AS INTEGER) FROM v0, rt0 WHERE (((LIKELY(DISTINCT 'w'))%(((NULL) NOT NULL))));SELECT DISTINCT UPPER(DISTINCT (+ (v0.c0))), CASE WHEN ((vt1.c1) BETWEEN (rt0.c3) AND (rt0.c2)) THEN (NOT (v0.c0)) ELSE CAST(v0.c0 AS REAL) END, SQLITE_COMPILEOPTION_GET(UNLIKELY(rt0.c0)) FROM rt0, vt1, v0 ORDER BY CAST(rt0.c3 AS TEXT) DESC  NULLS LAST, ((((UNLIKELY('-153744239'))AND(TRIM(rt0.c3))))OR(CASE WHEN rt0.c3 THEN x'9e9a' ELSE rt0.c0 END)) ASC  NULLS LAST, ((x'1e8d' IN (rt0.c4)) IN (-5.12318016E8, (+ (rt0.c0)))); -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((vt1.c1 COLLATE RTRIM))) FROM v0, vt1 NOT INDEXED;SELECT ALL COUNT(*), CAST(rt0.c2 COLLATE RTRIM AS INTEGER), CASE WHEN ((((((((vt1.c1)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)) THEN (+ (rt0.c4)) ELSE v0.c0 END FROM v0, vt1 WHERE ('-1527775819');SELECT SUM(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c1)) COLLATE BINARY) OVER ( GROUPS json_remove(NULL, rt0.c2, x'550c', vt1.c0, rt0.c3, v0.c0) COLLATE BINARY PRECEDING) FROM rt0, vt1, v0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c4) NOT NULL) AS NUMERIC) FROM rt0, v0, vt1 WHERE (((((x'80d5') BETWEEN (0.1867336974706083) AND ('0.036693549819694415')))IS(CASE WHEN NULL THEN x'34fb' WHEN 0Xffffffffe0057f04 THEN NULL WHEN NULL THEN x'89ed' ELSE '' END))); -- 0ms;
SELECT ALL '?[dC' COLLATE RTRIM FROM rt0, vt1 WHERE (CASE (- (''))  WHEN (((0.527619203935219))<((0.5116848093727684))) THEN (('-1478072659') BETWEEN ('1켯oV') AND (NULL)) ELSE x'' COLLATE RTRIM END); -- 0ms;
SELECT ALL ((0.013037251934243432 COLLATE RTRIM)<((((v0.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c4)) AND ((rt0.c4, v0.c0, vt1.c1))))) FROM rt0, v0, vt1; -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE RTRIM) IS FALSE), (((rt0.c1 IN (rt0.c2))) NOT BETWEEN (vt1.c1) AND (((vt1.c1)<(v0.c0)))), CAST((NOT (v0.c0)) AS REAL), CASE WHEN ((vt1.c1)OR(rt0.c3)) THEN ((rt0.c3) NOTNULL) WHEN ((vt1.c0)<<(rt0.c3)) THEN ((rt0.c0) NOTNULL) WHEN 'Yx6唈' THEN ((((rt0.c3)OR(rt0.c2)))OR(rt0.c4)) ELSE ((-1932191748) NOT BETWEEN (rt0.c4) AND (rt0.c2)) END, ((MIN(rt0.c3)) NOT NULL) FROM v0, vt1 WHERE (x'');SELECT DISTINCT (((rt0.c4)) BETWEEN (((~ (v0.c0)))) AND (('1196379070'))) FROM vt1 WHERE (((((CAST(0.257335574996981 AS REAL))AND('0.15134335504499963' COLLATE NOCASE)))AND('b(')));SELECT DISTINCT ((((rt0.c3)%(rt0.c4)))LIKE(rt0.c3)) FROM v0;SELECT DISTINCT COUNT(SUM(vt1.c0) COLLATE NOCASE) FROM vt1 WHERE (((x'') NOT BETWEEN (x'61fbd8b5') AND (NULL)) COLLATE RTRIM COLLATE RTRIM) GROUP BY rt0.c3 HAVING GROUP_CONCAT((NOT (rt0.c0)));SELECT TOTAL(((rt0.c4)<<(NULL))), UNLIKELY((vt1.c1 IN ())), SUM(v0.c0 COLLATE NOCASE) FROM v0, rt0, vt1; -- 0ms;
SELECT DISTINCT ((LIKELY(rt0.c1))*(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)), CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE, DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4) IS FALSE))&((NOT (rt0.c1)))) FROM v0, vt1;SELECT DISTINCT CASE CASE vt1.c0  WHEN rt0.c4 THEN rt0.c4 END  WHEN ('-1635908032' IN ()) THEN ((((((((((((vt1.c0)AND(v0.c0)))AND(rt0.c4)))AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c3)) WHEN (- (v0.c0)) THEN ((rt0.c3)>(vt1.c1)) WHEN rt0.c1 COLLATE RTRIM THEN ((0.615014859963988) NOT NULL) ELSE (rt0.c2 IN (rt0.c4)) END FROM vt1, v0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE (+ (((rt0.c4) IS FALSE)))) OVER () FROM vt1, rt0, v0 WHERE ((((0.05467028608935742)) BETWEEN (((((0xffffffffad1a7ba6, 'Ju', 0.1839574765763522)) NOT BETWEEN (('1207665933', 0.7828471499711722, '-1320704299')) AND ((NULL, 0.366554541918215, NULL))))) AND (((- (x'')))))) GROUP BY (NOT ((rt0.c4 IN ()))), CAST(CAST(rt0.c0 AS REAL) AS REAL), CASE WHEN ((vt1.c1)<=(0.47969110404678783)) THEN v0.c0 END; -- 0ms;
SELECT SUM((rt0.c3 IN (vt1.c1))), (((- (rt0.c1))) BETWEEN ((NOT (vt1.c1))) AND (CAST(rt0.c2 AS REAL))), CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c1 THEN v0.c0 END THEN ((((rt0.c2)AND(0.10022524399802457)))OR(rt0.c4)) END FROM rt0, v0 WHERE (((LOWER(0.15826936048683216))GLOB(CASE 'p|y'  WHEN '1452423667' THEN 0.9990572965766398 END)));SELECT DISTINCT MIN(UPPER(DISTINCT rt0.c2)) FROM rt0, v0, vt1 WHERE (((0.6267803172837272)+(x'998c')) COLLATE RTRIM) ORDER BY vt1.c1  NULLS FIRST, ((((v0.c0 COLLATE BINARY)OR((~ (rt0.c4)))))AND(LIKELIHOOD(x'', 0.3787416756316989))) DESC, ((((((((TOTAL_CHANGES())OR((((v0.c0, rt0.c0, rt0.c0))>((v0.c0, rt0.c1, rt0.c1))))))OR((((vt1.c1))>=((rt0.c2))))))AND(0.8376875077580409 COLLATE RTRIM)))AND((rt0.c4 IN ()))) DESC  NULLS LAST;SELECT DISTINCT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c1)))OR((vt1.c0 IN (rt0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((0x7d103f3a))))) FROM rt0, vt1;SELECT DISTINCT (NOT (vt1.c0 COLLATE BINARY)) FROM vt1, v0; -- 1ms;
SELECT ALL ((x'2fd3') IS TRUE) FROM v0 WHERE ('750529362') ORDER BY (((- (rt0.c3)))!=(NULL));SELECT (NOT ((rt0.c0 IN ()))), (~ ((NOT ('-1600822621')))), (((+ (rt0.c1)))>=((((rt0.c4))>=((vt1.c0))))) FROM rt0;SELECT DISTINCT ((((v0.c0)AND(vt1.c0)))AND(rt0.c3)) COLLATE RTRIM FROM v0, vt1 ORDER BY (((v0.c0)>(rt0.c2)) IN ()) DESC;SELECT ALL vt1.c0 FROM rt0 WHERE (((((((0.27195132912023323) NOT NULL))OR(CAST(NULL AS INTEGER))))OR(((NULL) BETWEEN ('nf') AND (0xffffffff99ce118b))))) GROUP BY (((v0.c0)) BETWEEN ((rt0.c4)) AND ((((rt0.c2)*(vt1.c0))))), CAST(CASE WHEN rt0.c2 THEN rt0.c3 WHEN x'e5dbb45f' THEN vt1.c1 WHEN '>W' THEN vt1.c1 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN v0.c0 WHEN '-1612721239' THEN rt0.c2 WHEN rt0.c4 THEN vt1.c1 ELSE vt1.c0 END AS NUMERIC), CASE rt0.c3  WHEN vt1.c0 THEN rt0.c4 WHEN 0.1652493120447055 THEN rt0.c4 WHEN vt1.c1 THEN rt0.c2 END COLLATE RTRIM HAVING CASE CAST(v0.c0 AS BLOB)  WHEN ((rt0.c3) NOT BETWEEN (vt1.c1) AND (rt0.c0)) THEN (((rt0.c4, rt0.c4, rt0.c4))<=((rt0.c0, rt0.c0, rt0.c4))) END;SELECT DISTINCT ((LTRIM(rt0.c4, rt0.c3)) NOTNULL), ((((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS TRUE), (((((rt0.c4)) NOT BETWEEN ((x'eda0')) AND ((rt0.c1)))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((((((((rt0.c1)AND(vt1.c1)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c4)))) FROM vt1, v0;SELECT ((NULL COLLATE NOCASE)>=('oc''')), (~ (((rt0.c4)OR(rt0.c3)))), ((CASE rt0.c3  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END) NOT BETWEEN (rt0.c1) AND (TOTAL(rt0.c3))) FROM rt0;SELECT ALL AVG(rt0.c1) OVER () FROM rt0, vt1; -- 0ms;
SELECT DISTINCT LAST_VALUE((- (((rt0.c2) BETWEEN (v0.c0) AND (vt1.c0))))) OVER () FROM vt1, rt0, v0 WHERE (CAST((0.31842495948486504 IN ()) AS BLOB)); -- 0ms;
SELECT DISTINCT (((rt0.c4)) BETWEEN ((vt1.c0)) AND ((PRINTF(rt0.c1)))) FROM v0, rt0, vt1; -- 0ms;
SELECT x'' FROM rt0 WHERE (NULL); -- 0ms;
SELECT GROUP_CONCAT(((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY) OVER (), CAST((((4.17339797E8)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) AS REAL), FIRST_VALUE(vt1.c0 COLLATE RTRIM) OVER () FROM vt1, v0;SELECT DISTINCT (((CAST(vt1.c1 AS REAL), ((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c0)), ((((rt0.c1)OR(v0.c0)))AND(v0.c0))))>((vt1.c0, COALESCE(DISTINCT rt0.c1, rt0.c0), MIN(rt0.c2)))) FROM vt1 WHERE ((((~ (0.6881351174594678)))>=((('2061995393')OR('-1203426088')))));SELECT ALL COUNT(GROUP_CONCAT(((vt1.c0)*(rt0.c0)))) FROM v0 WHERE ((~ ((- (0.7666302779430442)))));SELECT DISTINCT (~ (CAST(vt1.c0 AS INTEGER))) FROM v0 ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE ASC  NULLS LAST, CAST((rt0.c2 IN (rt0.c4)) AS TEXT);SELECT DISTINCT TOTAL(((rt0.c0) NOTNULL)) OVER () FROM v0, rt0 WHERE (ABS(DISTINCT (('1452423667')AND('')))); -- 0ms;
SELECT ALL CAST(TRIM(DISTINCT v0.c0) AS REAL) FROM v0, rt0 GROUP BY TRIM(rt0.c0, rt0.c3) HAVING CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((rt0.c3) IS FALSE) END;SELECT DISTINCT rt0.c2 FROM vt1, rt0 WHERE (HEX(((')7㬤1耮')>=('缄k')))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c0))>=((v0.c0))))LIKE(v0.c0 COLLATE NOCASE)) FROM v0, rt0, vt1 WHERE (TRIM((('-9223372036854775808')<>('-789803268')), ((x'642a')AND(x'dd1412fa')))); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((((rt0.c2)>=(rt0.c3))) NOTNULL)) OVER () FROM rt0, v0, vt1 WHERE (CASE ((((((((0.055837992661745606)AND(0.9775000655068212)))OR(x'84e0')))OR('1708468703')))AND(0.42634380855224663))  WHEN (NULL IN ()) THEN CASE WHEN '0.5024009022732541' THEN 0.551462087399801 ELSE NULL END WHEN CASE 0.584954746908139  WHEN '/.\r2iM.\n' THEN x'' ELSE NULL END THEN ((0.9465419507471744) NOTNULL) WHEN ('' IN ()) THEN 0.5654665596818748 COLLATE NOCASE END); -- 1ms;
SELECT DISTINCT ((CAST(0x75802a56 AS BLOB)) BETWEEN (CASE WHEN vt1.c1 THEN rt0.c1 END) AND (((((vt1.c0)OR(rt0.c4)))OR(vt1.c1)))) FROM rt0, v0 WHERE (CASE ((NULL) BETWEEN (x'') AND ('23'))  WHEN CAST(NULL AS TEXT) THEN x'' COLLATE BINARY ELSE (((0x3d886cc9)) NOT BETWEEN ((x'')) AND ((']''M儁TA~'))) END);SELECT DISTINCT (((((rt0.c2)<(rt0.c2)), (rt0.c2 IN ()), ((rt0.c1)==(rt0.c1)), ((((rt0.c4)OR(rt0.c2)))OR(rt0.c0)), ((((vt1.c1)AND(rt0.c2)))AND(vt1.c0))))==((((((vt1.c1)OR(rt0.c3)))AND(rt0.c4)), ((((vt1.c1)AND(v0.c0)))OR(vt1.c0)), CASE 0.268934475688947  WHEN rt0.c2 THEN vt1.c0 END, rt0.c4, ((((((((x'846dea53')OR(vt1.c1)))AND(0.7946837218212164)))OR(rt0.c4)))OR(rt0.c3))))) FROM v0, rt0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0)<(rt0.c4)) AS TEXT) WHERE (rtreenode((- (0xfffffffffd6339f4)), ((0.021461851382790664) NOT BETWEEN ('1771544292') AND (0.64717141791578)))); -- 0ms;
SELECT ALL SUM((rt0.c3 IN ())) FROM vt1; -- 0ms;
SELECT AVG((rt0.c4 IN ())) COLLATE RTRIM, COUNT(SUM(rt0.c3 COLLATE BINARY)), v0.c0 FROM rt0 WHERE ((((NULL IN ())) NOT NULL));SELECT FIRST_VALUE((~ (((((rt0.c3)OR(NULL)))AND(rt0.c2))))) OVER () FROM rt0, vt1, v0 WHERE (CASE WHEN -8.97350698E8 THEN 1.442690024E9 ELSE '274407450' END COLLATE RTRIM); -- 0ms;
SELECT ALL (+ (((vt1.c0)<<(vt1.c1)))), (vt1.c1 IN ()) COLLATE NOCASE, CASE ((x'')||(v0.c0))  WHEN -1694173648 THEN rt0.c3 ELSE ((rt0.c3) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END FROM v0, vt1, rt0; -- 0ms;
SELECT ALL ((TOTAL(rt0.c4))LIKE(((rt0.c4) IS TRUE))) FROM v0, vt1 WHERE (((CAST('-1220357144' AS REAL)) NOT BETWEEN (CAST(' 菖*9]➲YX' AS BLOB)) AND (SQLITE_VERSION())));SELECT ((((((((CASE v0.c0  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN 0Xffffffffbbdd1e12 END)AND(0.22999720943509916)))AND(CAST(rt0.c1 AS TEXT))))AND(CAST(v0.c0 AS NUMERIC))))OR((NOT (rt0.c0)))), ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)||(vt1.c0))) AND (((rt0.c1)<>(rt0.c2)))), 0.7746386925998855 FROM v0, rt0 WHERE ((((0.3569312566037194, 0.25726424773454915, '1015446788')) BETWEEN ((0.315590275867046, 0.4550108074871191, x'')) AND ((0.2985188791287797, '1213516697', '1757041501'))) COLLATE BINARY);SELECT DISTINCT LIKELY(DISTINCT LOWER(DISTINCT rt0.c1)), MIN(vt1.c1), '0.0' FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c1 END, CASE rt0.c2  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), x'', (- (rt0.c2))))) FROM rt0 ORDER BY x'' DESC  NULLS LAST;SELECT ALL CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE x'' END AS INTEGER) FROM rt0 WHERE (CAST(json(0Xffffffffae0bfaf7) AS INTEGER)) LIMIT -1839365480 OFFSET -1382409676; -- 0ms;
SELECT DISTINCT ((((vt1.c1)>(vt1.c0))) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END)) FROM v0, vt1 WHERE ((((((NULL, '-1251829192', ''))<>((-1903659495, 'qe', NULL)))) IS FALSE));SELECT DISTINCT ((((COUNT(*))OR(rt0.c2)))OR(CASE WHEN rt0.c3 THEN v0.c0 END)) FROM v0, rt0, vt1; -- 0ms;
SELECT ALL (((rt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN ()) FROM vt1 WHERE ((~ ((NOT ('1痊8G<'))))) LIMIT -15608614; -- 0ms;
SELECT ALL v0.c0 FROM v0; -- 0ms;
SELECT ALL ((0.3782312298714202)<>('ᶫa<0I*!')) FROM rt0; -- 0ms;
SELECT CASE ((vt1.c0)LIKE(vt1.c0))  WHEN TRIM(DISTINCT rt0.c0, vt1.c1) THEN rt0.c0 END FROM rt0, vt1, v0 WHERE (((((NULL)*(x'b0c9')))&(((0.42271165161799107) NOT NULL)))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT 0.8376875077580409) FROM rt0 NATURAL JOIN v0 WHERE (((((NULL)&('')))IS NOT((('-1508830398')AND(0.5024648278549737))))) ORDER BY (((((((rt0.c4))>=((rt0.c3))))OR(rt0.c2 COLLATE NOCASE)))OR((((rt0.c4))>((v0.c0))))) DESC, 'm佫Z),e' ASC, CASE SQLITE_SOURCE_ID()  WHEN vt1.c1 COLLATE BINARY THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c0)|(rt0.c1)) END LIMIT -1773986851;SELECT ALL ((((((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))OR(((rt0.c4)*(rt0.c3)))))AND(MIN('-1769815221'))) FROM v0, vt1, rt0 WHERE (SUBSTR(IFNULL('-636729160', ''), ((0.19314654875015191) NOTNULL))); -- 0ms;
SELECT ALL NTH_VALUE(((CAST(rt0.c0 AS BLOB)) ISNULL), ((((('514929287'))>=((vt1.c1))))>>(CASE WHEN x'' THEN rt0.c2 END))) OVER (), (- (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)), ((((rt0.c2 IN ())))==((CAST(rt0.c4 AS REAL)))) FROM rt0, vt1 WHERE ((((NULL IN (NULL, x''))) ISNULL)); -- 0ms;
