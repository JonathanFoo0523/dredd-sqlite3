-- Time: 2024/06/07 07:29:05
-- Database: database12
-- Database version: 3.40.0
-- seed value: 589499312
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE TEMP TABLE t0 (c0 INTEGER ); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('-1790973002'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c56 TEXT; -- 1ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0(c56) VALUES (0.9380400635240639); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.2526005896083794, NULL), ('-569976935', 0.2789146093713635), (0.7113667940350642, 0.2526005896083794), (0.8406161476721233, NULL), ('0.2789146093713635', 0x7b143b34); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'df02', NULL); -- 0ms;
PRAGMA cache_spill = -7505614712859899614; -- 1ms;
ANALYZE; -- 0ms;
CREATE UNIQUE INDEX i86 ON t0(('' IN ()) COLLATE BINARY,((((c0))!=((c0))) IN ()) COLLATE RTRIM); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i86 ON t0(((((c56)OR(((c0) BETWEEN (c0) AND (c56)))))OR(CASE WHEN c0 THEN c0 END)) COLLATE BINARY,(c56 IN ()) COLLATE NOCASE DESC) WHERE (~ ((((c56)) BETWEEN ((c56)) AND (('0.2526005896083794'))))); -- 0ms;
CREATE INDEX IF NOT EXISTS i32 ON t0(c0 COLLATE BINARY,(~ ('-156219003' COLLATE NOCASE)) COLLATE RTRIM) WHERE ((((((c0, c56, c56)) NOT BETWEEN ((c0, c56, c0)) AND ((c56, c0, c0)))))==((CASE WHEN c56 THEN c56 ELSE c0 END))); -- 0ms;
INSERT OR FAIL INTO t0(c56) VALUES (NULL); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (189532029), (NULL); -- 1ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (''); -- 0ms;
UPDATE vt0 SET (c0)=(0xffffffffcd319f2f); -- 1ms;
CREATE INDEX IF NOT EXISTS i53 ON t0(TRIM(DISTINCT CAST(NULL AS NUMERIC), ((c56) NOT BETWEEN (c0) AND (c0))) COLLATE RTRIM ASC,('{' IN ()) COLLATE NOCASE DESC); -- 0ms;
UPDATE OR ROLLBACK t0 SET c56=1812176663, c0=0.47309821929728824, c56=NULL WHERE t0.c56 COLLATE NOCASE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO t0(c56) VALUES (-1048262475); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.6283899467339193, x''), ('189532029', x'0db6'), ('', 'DT'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX i53; -- 0ms;
REINDEX  vt0; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1137661359);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (x''), (0.5069260375834563); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c56) VALUES ('dk', 0.6894298409415035); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE vt0 SET (c0)=('1812176663') WHERE (NOT (CAST(vt0.c0 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'', x''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1369705010 2 noskipscan'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -852386001);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1048262475);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1812176663,11');\n; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (-1137661359), (0.9987997465945428), (x''); -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
PRAGMA journal_mode; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (-1.048262475E9), ('3s'), ('-13416889'); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.auto_vacuum = FULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40982'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (0.5236387007919524); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1996709294 unordered noskipscan'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 170059609); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '30928'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 116813069);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1217668385); -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=839038702,13');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c56) VALUES ('-1790973002', ''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.8541903215433233, NULL); -- 0ms;
CREATE INDEX i91 ON t0(((((CASE c56  WHEN c0 THEN c0 END)AND((NOT (c0)))))AND(ABS(0.4529486031286942))) COLLATE NOCASE,ABS(DISTINCT IFNULL(DISTINCT c56, c0)) COLLATE BINARY DESC); -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-776808387'), (''), (0x7bc0057c); -- 0ms;
ALTER TABLE t0 ADD COLUMN c29 REAL; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0Xd58a18d); -- 0ms;
PRAGMA cache_spill = 9070999551285969851; -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT OR IGNORE INTO t0(c29) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL, NULL, 0.766934056806111), (0Xb4c077d, x'', 1166463341), (0.8541903215433233, x'', -1776903768); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.automatic_index = false; -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('-776808387', 189532029, ((((CAST(0x50a111cb AS BLOB))OR(((2064923444)>=(-232548616)))))OR(((-1.3416889E7) NOT BETWEEN (x'') AND (0x5dba488a))))); -- 0ms;
ANALYZE i91; -- 0ms;
PRAGMA temp.journal_mode = DELETE; -- 0ms;
ALTER TABLE t0 ADD COLUMN c21 REAL; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.5600536485786114); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.028387484093318816), ('88089017'), (x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x'3ba3'), (x'03a7'), ('-1180969224'); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1153909178); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ALTER TABLE t0 ADD COLUMN c25 INT; -- 0ms;
INSERT OR IGNORE INTO t0(c25, c21, c56, c29) VALUES (x'', '2076181884', x'', x'32ab'); -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
END TRANSACTION; -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x''), (x''), (NULL); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 972502021); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1075708997,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE INDEX i31 ON t1(((c56)-(c0)) COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE,((((c29) IS FALSE)) NOT BETWEEN (((c25) BETWEEN (c21) AND (c29))) AND (c25 COLLATE NOCASE)) COLLATE RTRIM,(((((c0)OR(c29)))AND(c0)) IN ()),(((c0 IN ()))!=((c25 IN ()))) COLLATE RTRIM,((- (x'aae3')) IN ()) DESC) WHERE (((('il') NOT NULL)) BETWEEN (((c56)GLOB(c21))) AND (c21)); -- 1ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('116813069'); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL LIKELY(t1.c21) FROM vt0 WHERE ((((((NULL)) NOT BETWEEN ((NULL)) AND ((0.8541903215433233)))) IS FALSE)) ORDER BY ((((0.4990603374560615)OR(((t1.c29) BETWEEN (t1.c21) AND (t1.c29)))))AND(((t1.c0) NOTNULL)));SELECT CAST(t1.c56 AS TEXT) COLLATE RTRIM, (('1996709294') IS TRUE), ((COUNT(*))AND((+ (t1.c56)))) FROM t1 WHERE (LIKELIHOOD(DISTINCT (((((((((((('786834652')OR('-1045838356')))AND('S')))AND(x'')))OR(x'')))AND('')))AND(x'')), 0.2762341880925935)); -- 0ms;
SELECT DISTINCT CAST((t1.c0 IN (t1.c0, t1.c29)) AS REAL) FROM t1, vt0 WHERE ((((('') ISNULL)) ISNULL)); -- 0ms;
SELECT CAST((((t1.c0))>=((t1.c0))) AS INTEGER) FROM vt0, t1 LIMIT 137238976 INTERSECT SELECT ALL ((t1.c0 IN (t1.c0)) IN (((((((((vt0.c0)AND(vt0.c0)))AND(t1.c29)))OR(t1.c56)))OR(t1.c0)))) FROM vt0, t1 WHERE ((NOT ((('') NOT BETWEEN (x'98cd') AND (0X40221e2))))) ORDER BY IFNULL(DISTINCT t1.c29, t1.c0 COLLATE NOCASE) ASC, (t1.c21 IN ()) COLLATE NOCASE  NULLS LAST, x'';SELECT TOTAL(t1.c25) FROM t1; -- 0ms;
SELECT ALL ((t1.c25)IS NOT((((vt0.c0)) NOT BETWEEN ((t1.c21)) AND ((t1.c0))))) FROM t1 GROUP BY ((((((vt0.c0)OR(t1.c25)))OR(t1.c21))) NOT BETWEEN (CASE vt0.c0  WHEN t1.c29 THEN t1.c56 WHEN t1.c21 THEN t1.c29 WHEN t1.c29 THEN vt0.c0 ELSE t1.c56 END) AND (CAST(t1.c0 AS NUMERIC))), 0.871862826702109, '';SELECT DISTINCT COUNT(*), ((((((((t1.c0)OR(MAX(t1.c21))))AND(LIKELIHOOD(DISTINCT t1.c56, 0.4985439019153297))))OR(CASE WHEN t1.c0 THEN t1.c29 ELSE t1.c21 END)))AND(CAST(vt0.c0 AS TEXT))), x'2cac', CASE t1.c0  WHEN t1.c29 THEN t1.c0 WHEN t1.c25 THEN t1.c56 WHEN t1.c56 THEN vt0.c0 ELSE t1.c29 END COLLATE RTRIM, MAX(((t1.c0) ISNULL)) FROM vt0 WHERE ((((('1619834551')%(x'')))|(('-1972994916' IN ())))) GROUP BY t1.c25 HAVING (- (((vt0.c0) NOT BETWEEN (t1.c25) AND (t1.c56))));SELECT (+ (json_object(t1.c56, NULL, t1.c0, t1.c25))), (((t1.c25 IN ())) ISNULL), ((((((vt0.c0)AND(t1.c25)))AND(t1.c56)))+(((t1.c56) BETWEEN (t1.c0) AND (t1.c29)))) FROM t1 GROUP BY ((t1.c25)<=(((t1.c29) NOTNULL))) HAVING ((TOTAL(t1.c21))GLOB(ABS(DISTINCT t1.c21)));SELECT DISTINCT LTRIM(((x'68f8') ISNULL)) FROM t1, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN t1.c0 THEN t1.c29 ELSE t1.c29 END) OVER ( ORDER BY (~ (t1.c56 COLLATE RTRIM))  NULLS LAST), ((t1.c25)GLOB(CAST(t1.c25 AS INTEGER))), COUNT(((t1.c25) NOT BETWEEN (t1.c25) AND (vt0.c0))) OVER () FROM t1 ORDER BY (+ ((((('ݽꂥj/A,8P')OR(t1.c29)))OR(vt0.c0))));SELECT GROUP_CONCAT(CASE t1.c56  WHEN t1.c0 THEN t1.c56 END) OVER () FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c21)|(t1.c29))) IS TRUE) FROM t1, vt0 WHERE (CAST(((((((((x'5c39')OR(NULL)))AND(0x1d3b5470)))OR(0.4796366737999379)))OR('-1045838356')) AS REAL)); -- 0ms;
SELECT ALL ((t1.c56 IN ()) IN ()) FROM vt0, t1 WHERE ((~ (CAST(0.6354683930280147 AS BLOB)))); -- 0ms;
SELECT DISTINCT (((((((t1.c25)) BETWEEN ((t1.c29)) AND ((t1.c56))))AND(SUM(t1.c21))))OR(TRIM(t1.c56))), CUME_DIST() OVER (), AVG(((t1.c21)LIKE(t1.c25))) OVER () FROM t1 LIMIT -272690267; -- 0ms;
SELECT DISTINCT ((0xffffffff936dc3ab)LIKE((- (x'')))) FROM t1 WHERE ((((((('')OR(x'b885aab5')))AND(-1.137661359E9))) NOT BETWEEN (NULLIF(DISTINCT 0X562e31d2, -1045838356)) AND (((0X533b9034) BETWEEN ('1352733131') AND (0X77035dae))))) UNION SELECT DISTINCT ((t1.c25 COLLATE BINARY)-(((t1.c25)>>(t1.c21)))) FROM vt0, t1 WHERE (' ~?*QEAPz'); -- 0ms;
SELECT ALL json_array_length(((((((((t1.c25)AND(t1.c56)))AND(t1.c29)))OR(t1.c21)))OR(t1.c21))) FROM vt0, t1 WHERE (LIKELY(LIKE(0.8938678754889496, '1149917492'))); -- 0ms;
SELECT DISTINCT ((NULL) NOT BETWEEN (t1.c29) AND (CASE t1.c21  WHEN t1.c56 THEN t1.c0 ELSE t1.c21 END)) FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c0)LIKE(t1.c21)))=(((t1.c0) NOT BETWEEN (t1.c29) AND (t1.c29)))) FROM t1 WHERE (x''); -- 0ms;
SELECT ALL ((((vt0.c0)AND(vt0.c0)))AND(t1.c29)) COLLATE NOCASE FROM vt0 WHERE ((((((NULL)OR(x'')))OR('1e500')) IN ()));SELECT ((CASE WHEN '' THEN t1.c25 END)+((((((((('-	y\noU宆')AND(t1.c0)))AND(t1.c56)))OR(vt0.c0)))OR(t1.c0)))) FROM vt0 FULL OUTER JOIN t1 ON COALESCE(t1.c29, t1.c29) COLLATE RTRIM; -- 0ms;
SELECT (((t1.c29)<<(t1.c56)) IN ()) FROM vt0, t1 WHERE ((+ (((((0.8541903215433233)OR('-1048262475')))AND(NULL))))); -- 1ms;
SELECT CASE t1.c0  WHEN t1.c29 THEN t1.c25 WHEN t1.c29 THEN t1.c29 WHEN t1.c29 THEN t1.c56 ELSE x'7eaaf87c' END COLLATE RTRIM, ((t1.c29 COLLATE RTRIM)>(((((t1.c56)OR(t1.c25)))AND(t1.c56)))), '1996709294' FROM vt0;SELECT (((NULL))>=((COUNT(*)))), CASE (~ (t1.c56))  WHEN SQLITE_VERSION() THEN x'0532' ELSE ((vt0.c0) NOTNULL) END, ((CAST(vt0.c0 AS BLOB))+(((NULL)>>(NULL)))) FROM vt0 WHERE ((((((((((((x'd71d')) NOT BETWEEN ((x'')) AND ((1644851949))))OR((('792029143') ISNULL))))OR(((NULL) BETWEEN (x'') AND (NULL)))))OR(x'7e1d')))OR(ABS(0x6b06706d)))) LIMIT -549889757;SELECT COUNT(*) OVER () FROM vt0 WHERE (((((((((((('	7')OR('I\iXWH头')))AND(x'b64b')))OR(-156219003)))AND(1149917492))))>=((CAST(NULL AS INTEGER))))); -- 0ms;
SELECT DISTINCT t1.c25 FROM vt0 WHERE ((((((NULL))<=((0.4047691168733)))) IS FALSE));SELECT ALL ((0.8690759546323426)|(x'')) FROM vt0 WHERE (((((0.9380400635240639) BETWEEN ('') AND (0.4796366737999379)))%(CASE 0.3152137710050751  WHEN 0.44766676748233025 THEN NULL ELSE NULL END))); -- 0ms;
SELECT ((((NULL) NOT BETWEEN (t1.c25) AND (t1.c21)))>>(CAST(t1.c25 AS REAL))) FROM vt0, t1 WHERE (1.89532029E8); -- 0ms;
SELECT DISTINCT ((0.3152137710050751)-(((vt0.c0)*(vt0.c0)))) FROM vt0 WHERE (json((((x'4ab4', 'I\iXWH头', '1821626114', 'l	Cf<', x'')) NOT BETWEEN ((x'', NULL, '', -1.56219003E8, x'')) AND (('-776808387', 0X2ee485cf, 0x7931ca67, '', NULL))))); -- 0ms;
SELECT DISTINCT -1.7976931348623157E308, PERCENT_RANK() OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING), CASE TOTAL(t1.c25)  WHEN ((vt0.c0)*(t1.c29)) THEN ((t1.c56) NOT NULL) WHEN JULIANDAY(t1.c29, t1.c21, NULL) THEN (t1.c25 IN ('189532029')) WHEN SQLITE_COMPILEOPTION_GET(t1.c29) THEN t1.c0 END FROM vt0, t1 WHERE ((((('-1936273411')) BETWEEN ((NULL)) AND ((''))) IN (CASE '\T'  WHEN NULL THEN '' ELSE 0.9695538226011909 END))) GROUP BY CASE WHEN t1.c29 THEN (~ (t1.c56)) ELSE ((t1.c0)||(vt0.c0)) END; -- 0ms;
SELECT DISTINCT ((MIN(t1.c56)) NOT BETWEEN ((- (NULL))) AND ((+ (t1.c21)))), (CASE t1.c0  WHEN t1.c56 THEN t1.c56 ELSE NULL END IN ()), RANK() OVER () FROM vt0, t1 WHERE (CAST(CASE 0.6673310577490944  WHEN '-1821523029' THEN NULL END AS INTEGER)); -- 0ms;
SELECT ALL CASE WHEN t1.c21 THEN t1.c29 WHEN t1.c56 THEN t1.c25 WHEN vt0.c0 THEN t1.c25 END COLLATE NOCASE, SUM((((t1.c0, vt0.c0, t1.c25)) NOT BETWEEN ((t1.c0, t1.c56, t1.c29)) AND ((t1.c21, vt0.c0, t1.c29)))) OVER ( RANGE  CURRENT ROW EXCLUDE TIES), 'C-k|' FROM t1 WHERE (((('1352733131')>('')) IN ())) ORDER BY t1.c56 DESC;SELECT ((x'') NOTNULL) FROM t1 WHERE ((NOT ((((x'c169')) NOT BETWEEN ((x'10dd89bb')) AND ((0.871862826702109)))))) GROUP BY 'P' LIMIT 0; -- 0ms;
SELECT PERCENT_RANK() OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM vt0, t1 WHERE ((NOT ((('?D')<(0.7172714489173252))))); -- 0ms;
SELECT (('')LIKE(((((((((vt0.c0)OR(t1.c25)))AND(t1.c21)))OR(vt0.c0)))OR(t1.c29)))) FROM t1 WHERE ((((NULL IN ())) IS FALSE)) GROUP BY LIKELY(DISTINCT CASE WHEN '-272690267' THEN t1.c21 ELSE t1.c25 END), ((((((((((((CAST(t1.c29 AS INTEGER))OR(((vt0.c0)*(t1.c25)))))AND(((t1.c25) IS FALSE))))OR(t1.c25)))AND((x'' IN (t1.c56, t1.c0)))))OR(t1.c25 COLLATE RTRIM)))OR(((t1.c21)%(t1.c0)))), ((((((vt0.c0) BETWEEN (t1.c29) AND (vt0.c0)))AND(CAST(t1.c0 AS TEXT))))AND((((t1.c56, vt0.c0, t1.c25)) NOT BETWEEN ((t1.c29, t1.c0, t1.c29)) AND ((t1.c21, vt0.c0, t1.c25))))), (((vt0.c0, 0x40221e2, t1.c21)) NOT BETWEEN ((t1.c21, t1.c29, t1.c0)) AND ((t1.c29, t1.c21, t1.c25))) COLLATE BINARY, t1.c0;SELECT ((CASE t1.c0  WHEN t1.c25 THEN t1.c0 WHEN t1.c56 THEN NULL WHEN t1.c56 THEN t1.c29 ELSE t1.c21 END) NOT BETWEEN ((t1.c0 IN ())) AND (((vt0.c0) IS FALSE))) FROM t1 GROUP BY CAST('527022147' AS INTEGER), ((t1.c0 COLLATE RTRIM)+((((t1.c29)) NOT BETWEEN ((t1.c29)) AND ((t1.c56))))), CAST(((t1.c21) NOT NULL) AS INTEGER);SELECT DISTINCT CASE CHANGES()  WHEN t1.c56 THEN (t1.c0 IN (t1.c29, t1.c0)) WHEN (+ (NULL)) THEN x'' WHEN SUM(t1.c0) THEN CASE WHEN t1.c21 THEN t1.c21 END END FROM t1, vt0 WHERE ((NOT ('-569976935')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(PRINTF(t1.c25) AS NUMERIC) FROM vt0;SELECT (((t1.c56 IN ())) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (((vt0.c0)/(vt0.c0)))), (- (((t1.c21)|(t1.c29)))), RANK() OVER (), ((NOT (t1.c29)) IN ()), ROW_NUMBER() OVER () FROM t1, vt0; -- 1ms;
SELECT DISTINCT (((((t1.c25)) NOT BETWEEN ((NULL)) AND ((NULL)))) BETWEEN (MAX('')) AND (((t1.c21)OR(t1.c0)))), vt0.c0, ((((t1.c0)>>(t1.c56))) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((t1.c29) BETWEEN (t1.c0) AND (t1.c21)))) FROM vt0, t1 INDEXED BY i53; -- 0ms;
SELECT ((t1.c25) BETWEEN (t1.c21) AND (t1.c29)) COLLATE NOCASE FROM t1, vt0 WHERE (((('iUl!xCl') BETWEEN (NULL) AND (x'')) IN ())); -- 0ms;
SELECT ALL ((((((t1.c21) BETWEEN (t1.c0) AND (t1.c29)))OR('1241661750')))OR(((((((((t1.c21)AND(t1.c21)))AND(t1.c25)))AND(vt0.c0)))AND(t1.c0)))), COALESCE(DISTINCT CASE WHEN vt0.c0 THEN 0.9565681782633179 WHEN t1.c21 THEN t1.c56 WHEN t1.c56 THEN vt0.c0 END, ((((((((t1.c0)AND(t1.c56)))AND(t1.c0)))AND(t1.c29)))AND(t1.c25)), t1.c0, ((vt0.c0) IS FALSE)), (((((t1.c25))>((t1.c25)))) IS FALSE) FROM t1, vt0 WHERE (((((0.22180459921341622) NOT NULL))LIKE(((x'')<=(x''))))); -- 0ms;
SELECT CUME_DIST() OVER () FROM vt0 WHERE ((((x'7931' IN ()))==((('-1790973002') NOT BETWEEN (x'') AND (x'743ad748'))))); -- 0ms;
SELECT DISTINCT (- ((((t1.c25))>((t1.c56))))) FROM t1 ORDER BY LIKELIHOOD(DISTINCT t1.c0 COLLATE RTRIM, 0.7987954601075787) DESC  NULLS LAST, ((CAST(t1.c0 AS NUMERIC)) IS TRUE) DESC  NULLS FIRST; -- 0ms;
SELECT GROUP_CONCAT(CAST(0.6188713176196156 AS INTEGER)), (((((t1.c29)) NOT BETWEEN ((t1.c29)) AND ((t1.c21))))<=((((t1.c25)) NOT BETWEEN ((t1.c21)) AND ((t1.c56))))), (((~ (0.12993306047773023)))LIKE(((t1.c0) ISNULL))) FROM t1 LIMIT 2009019891 OFFSET 189532029; -- 0ms;
SELECT DISTINCT (((t1.c25, t1.c0, x'')) NOT BETWEEN (((((t1.c0, t1.c0, t1.c56)) BETWEEN ((t1.c0, vt0.c0, t1.c21)) AND ((t1.c56, t1.c0, t1.c56))), ('1036166558' IN (t1.c56)), ((((((((t1.c21)OR(t1.c56)))AND(t1.c56)))AND(vt0.c0)))AND(vt0.c0)))) AND ((t1.c56, (~ (t1.c25)), ((t1.c56)>>(t1.c25))))) FROM vt0 WHERE ((('' COLLATE RTRIM)&((('-1972994916') NOT NULL))));SELECT ALL LIKE(((t1.c56) ISNULL), 0.8740149857737367, '䦅') FROM vt0 INDEXED BY i31;SELECT ALL CAST(((t1.c29)>(t1.c21)) AS REAL), ((((t1.c29))>((t1.c21))) IN ()), ((t1.c25) ISNULL) COLLATE BINARY FROM t1 WHERE (HEX((((0.8245057884365796)) BETWEEN ((NULL)) AND ((0.30627367155201846))))); -- 0ms;
SELECT CASE CAST(t1.c21 AS NUMERIC)  WHEN COUNT(*) THEN ((t1.c56) NOT NULL) END FROM t1 WHERE (CAST((((NULL, NULL, '#Q', NULL, 0.25034954190895353)) NOT BETWEEN ((0.2856724245365435, 0.033982060874227726, x'', NULL, '')) AND ((x'', 'l	Cf<', 0.7563158588751101, 1027064811, 'jl\rtJB'))) AS NUMERIC)) ORDER BY NULL  NULLS LAST; -- 0ms;
SELECT ALL (CAST(vt0.c0 AS INTEGER) IN ()), MIN(TRIM(0.9482877210038331, t1.c0)), CAST((vt0.c0 IN ()) AS BLOB) FROM t1 GROUP BY NULLIF(((t1.c0)!=(t1.c0)), NULL) HAVING CASE WHEN ((t1.c0) IS TRUE) THEN ((1.027064811E9) BETWEEN (t1.c25) AND (t1.c29)) WHEN t1.c21 COLLATE RTRIM THEN '0.8245057884365796' COLLATE RTRIM WHEN CAST(t1.c0 AS TEXT) THEN TOTAL(t1.c21) WHEN NULLIF(t1.c0, x'') THEN '0.8406161476721233' WHEN ((t1.c25) BETWEEN (t1.c0) AND (t1.c56)) THEN ((t1.c29) BETWEEN (t1.c56) AND (t1.c0)) END; -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(t1.c56, 0.09357986470546897)) NOT NULL) FROM vt0, t1 WHERE ((x'' IN ()) COLLATE RTRIM COLLATE BINARY); -- 1ms;
SELECT DISTINCT ((t1.c29 COLLATE BINARY) NOT NULL) FROM t1 ORDER BY 1812176663  NULLS FIRST;SELECT DISTINCT (~ (CASE vt0.c0  WHEN t1.c0 THEN t1.c21 WHEN t1.c56 THEN t1.c0 WHEN t1.c0 THEN t1.c29 END)) FROM vt0, t1 WHERE (((-1.936273411E9) IS TRUE)) LIMIT 1996709294 OFFSET 58791904; -- 0ms;
SELECT DISTINCT CAST((+ (t1.c29)) AS REAL) FROM vt0 WHERE (UPPER(DISTINCT CAST(NULL AS REAL))) LIMIT -2026463067;SELECT DISTINCT NULL FROM t1 WHERE (LIKE((((NULL))>(('1821626114'))), 0xffffffffcdd3b4a2 COLLATE RTRIM, '4')); -- 0ms;
SELECT x'', (((t1.c25)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c21)))) AND ((CAST(t1.c21 AS INTEGER)))), MIN(((t1.c29)%(vt0.c0))) FROM vt0, t1 WHERE (CAST('-1329050138' AS NUMERIC)) LIMIT 422898241 OFFSET 1812176663; -- 0ms;
SELECT ALL t1.c25 FROM t1, vt0; -- 0ms;
SELECT DISTINCT '-1467231002' FROM t1 WHERE (json_patch((+ (NULL)), (((0.9987997465945428)) BETWEEN ((x'')) AND (('6]텭TYi!o'))))) LIMIT 1036166558; -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c0)OR(t1.c56)))OR(t1.c0)) THEN PRINTF(vt0.c0) END, t1.c29, vt0.c0 FROM vt0, t1 WHERE (DATETIME(HEX(NULL), 'AQ#Q6W', ((0.37730750469188956)IS(88089017)))); -- 0ms;
SELECT NULL FROM t1, vt0 WHERE (((((0.5236387007919524) IS FALSE)) NOT BETWEEN ((618050005 IN ())) AND ((('ꂥq')+('cB\n'))))) LIMIT 941936683; -- 0ms;
SELECT (((((t1.c29)) BETWEEN (('-885956127')) AND ((t1.c21))))<<(TRIM(DISTINCT t1.c29, t1.c25))) FROM t1 WHERE (CAST(((((((((-1046686658)OR(NULL)))AND(1122911298)))AND(0Xffffffffa035d177)))AND(x'')) AS TEXT)); -- 0ms;
SELECT ALL (NOT (((vt0.c0)&(t1.c29)))) FROM t1 GROUP BY (((t1.c29 IN ())) NOT NULL), HEX(x''), CAST((((t1.c29))<((vt0.c0))) AS NUMERIC) HAVING (((((t1.c21)AND(vt0.c0)))OR(t1.c56)) IN ());SELECT DISTINCT FIRST_VALUE((~ (CAST(t1.c25 AS TEXT)))) OVER () FROM t1, vt0; -- 4ms;
SELECT DISTINCT t1.c21 COLLATE NOCASE, (((t1.c0, t1.c0, t1.c0, t1.c0, 'eM')) BETWEEN ((((t1.c29)GLOB(t1.c21)), CAST(t1.c29 AS INTEGER), vt0.c0, (~ (vt0.c0)), CASE t1.c0  WHEN t1.c25 THEN t1.c0 WHEN t1.c56 THEN vt0.c0 WHEN t1.c25 THEN vt0.c0 WHEN t1.c0 THEN t1.c29 WHEN t1.c56 THEN t1.c29 ELSE t1.c29 END)) AND ((CASE NULL  WHEN t1.c0 THEN t1.c0 END, ((((vt0.c0)AND(t1.c56)))OR(t1.c56)), COUNT(vt0.c0), (~ (t1.c29)), ((t1.c0) NOTNULL)))), CAST(t1.c21 COLLATE BINARY AS BLOB) FROM vt0, t1 WHERE ((((NULL))<=(((~ (x'')))))); -- 0ms;
SELECT ALL t1.c25 FROM t1, vt0; -- 0ms;
SELECT DISTINCT JULIANDAY((~ (vt0.c0)), CAST(t1.c0 AS BLOB), COALESCE(t1.c21, t1.c0)) FROM t1, vt0 WHERE (LIKELY(DISTINCT (((NULL))>=((NULL))))) GROUP BY x'1131'; -- 0ms;
SELECT ALL PRINTF(DATE(vt0.c0, t1.c56, t1.c0), ((t1.c29)>(t1.c25)), (t1.c0 IN ())) FROM t1;SELECT ALL ((COUNT(vt0.c0)) IS FALSE), (((NOT (t1.c21))) ISNULL), ((NULL)IS NOT(t1.c25)) FROM vt0 WHERE ((ABS(DISTINCT 0X18a8f59b) IN ()));SELECT DISTINCT t1.c56 FROM vt0 WHERE (CASE (x'' IN ())  WHEN json_array(-1.329050138E9, 2.033306215E9) THEN CASE WHEN 0.25034954190895353 THEN 0.9992516913656014 END END);SELECT ALL CASE CAST(t1.c0 AS NUMERIC)  WHEN ((vt0.c0)*(t1.c29)) THEN MIN(vt0.c0) ELSE ((t1.c0)==(t1.c29)) END FROM t1;SELECT ((CAST(t1.c56 AS INTEGER)) NOTNULL), (((+ (vt0.c0))) ISNULL), (((vt0.c0 COLLATE NOCASE, TRIM(t1.c0, t1.c25), CAST(vt0.c0 AS NUMERIC)))<>((CASE t1.c25  WHEN t1.c0 THEN t1.c21 WHEN t1.c29 THEN t1.c25 WHEN t1.c25 THEN -5.69976935E8 ELSE t1.c25 END, ((t1.c56)GLOB(t1.c56)), (('-2026463067')|(t1.c56))))) FROM t1, vt0 WHERE ((((((('1195006854')-(0x50a111cb)))OR(((((x'')AND(1122911298)))OR(NULL)))))AND((('813407581')!=(0.2522453373808631))))); -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE) NOT NULL), (NOT ('ꂥq')), ((((vt0.c0) IS FALSE)) BETWEEN (CASE t1.c25  WHEN t1.c56 THEN t1.c21 ELSE t1.c29 END) AND ((t1.c21 IN ()))) FROM t1;SELECT DISTINCT TOTAL(vt0.c0) FROM vt0; -- 0ms;
SELECT ((((((t1.c0) NOT NULL))AND(t1.c25 COLLATE BINARY)))OR(t1.c0)) FROM t1 WHERE ('1157252240'); -- 0ms;
SELECT DISTINCT (+ (LOWER('䦅E'))) FROM vt0; -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED(t1.c25) COLLATE NOCASE FROM t1 WHERE ((((((('')AND(x'')))OR(x'')))=(((0.15541165433671866)IS(0.7033301524114719))))); -- 0ms;
SELECT DISTINCT ((((t1.c25)AND(vt0.c0)))AND(t1.c21)) COLLATE RTRIM, TRIM(((((vt0.c0)AND(t1.c0)))OR(t1.c25)), ((t1.c0)!=(t1.c21))), t1.c0 FROM t1, vt0 WHERE (((((NULL) NOT BETWEEN ('Dee') AND ('-1906908811')))<>((NOT ('1317852150'))))) LIMIT 936810687 OFFSET 223912333; -- 0ms;
SELECT DISTINCT ((t1.c0)/(TOTAL(t1.c56))) FROM t1, vt0 WHERE (((103936846)|(x'' COLLATE NOCASE))); -- 1ms;
SELECT x'd8af' FROM vt0 WHERE ((- ((('527022147')||('XUK6H䄶O]i'))))); -- 0ms;
SELECT DISTINCT ((t1.c21 COLLATE BINARY) BETWEEN (MAX(vt0.c0)) AND (CASE WHEN t1.c25 THEN t1.c21 ELSE t1.c25 END)), CAST(((((t1.c21)OR('')))AND(t1.c29)) AS REAL), (((((((t1.c25))>=((t1.c56))))AND(((t1.c21) NOT NULL))))OR(LIKELY(t1.c29))), ABS(DISTINCT MIN(vt0.c0)), (((vt0.c0) IS FALSE) IN ()) FROM t1;SELECT (((((t1.c29)<=(t1.c21))))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c56))))), ((((((((CAST(-1668087427 AS NUMERIC))AND(LIKELY(DISTINCT t1.c56))))AND(((t1.c56) BETWEEN (NULL) AND (x'')))))AND(t1.c56 COLLATE RTRIM)))AND(((x'')OR(t1.c25)))), (((t1.c56)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(t1.c25)))) AND ((CAST(t1.c21 AS BLOB)))) FROM vt0 GROUP BY t1.c0, (((t1.c21)) BETWEEN ((LOWER(t1.c21))) AND ((((t1.c25)==(t1.c21))))), ((((t1.c25) IS TRUE))<(t1.c25)) HAVING (+ (TOTAL(t1.c21)));SELECT ALL PERCENT_RANK() OVER (), LAG((('䦅E')*(((t1.c29)LIKE(t1.c56)))), ((((t1.c29, t1.c21, t1.c29, t1.c21, t1.c29)) BETWEEN ((t1.c21, t1.c56, t1.c56, t1.c21, t1.c29)) AND ((t1.c21, t1.c25, t1.c0, t1.c29, t1.c56))) IN ()), (((((t1.c29)<=(NULL))))<>(((((t1.c25, t1.c21, t1.c21))==((t1.c56, t1.c56, t1.c21))))))) OVER (), ((((((t1.c21)OR('')))AND(t1.c0))) ISNULL) FROM t1 WHERE (CAST((((0.3401189747492056, 0xffffffffac4c8d82, '1036166558')) BETWEEN ((NULL, NULL, NULL)) AND (('-334735165', x'', 0Xffffffff8e56e175))) AS REAL)); -- 0ms;
SELECT DISTINCT ((((CASE t1.c21  WHEN t1.c0 THEN t1.c25 ELSE t1.c25 END)OR(t1.c25)))OR(((t1.c56)>=(t1.c0)))) FROM vt0, t1; -- 0ms;
SELECT (('0\n0bT') NOTNULL) FROM t1 WHERE ((((1644851949)>>(x'')) IN ())); -- 0ms;
SELECT DISTINCT (~ (((t1.c29)<>(t1.c56)))) FROM vt0, t1 ORDER BY CASE WHEN ((t1.c29)GLOB(vt0.c0)) THEN CAST(t1.c0 AS NUMERIC) END; -- 1ms;
SELECT ((x'1fef2c3b12cd' IN ()) IN (((-2136006098) NOT BETWEEN (x'8645') AND (0.8873928558636679)))) FROM vt0, t1 WHERE (((((NULL)!=('.N.↹')))-(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (NOT (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((CASE WHEN 'N|' THEN x'a976' WHEN x'' THEN -31930626 WHEN NULL THEN 'P鍐0r[{,i' END IN ())); -- 0ms;
SELECT ALL ((((((((((t1.c25)>(t1.c25)))AND(vt0.c0 COLLATE RTRIM)))AND(((((t1.c29)AND(t1.c25)))OR(t1.c29)))))AND(MIN(t1.c29))))OR(((t1.c25) IS FALSE))) FROM t1 WHERE ((((+ (0.37730750469188956))) NOT BETWEEN ((~ (0X37d698bf))) AND (((((NULL)OR('786728399')))OR('')))));SELECT (('-1936273411') NOTNULL) FROM vt0, t1 WHERE (((((0.7273691211351) IS FALSE))IS(CASE WHEN '390198926' THEN NULL ELSE '1166463341' END))); -- 0ms;
SELECT -300097932 FROM vt0 WHERE (((UNLIKELY(NULL))&(('' IN ())))); -- 0ms;
SELECT t1.c21 FROM t1, vt0 WHERE (((LIKELY(x''))-((('1053487080')/(0X4ae68e73))))); -- 0ms;
SELECT ALL CASE WHEN (+ (vt0.c0)) THEN t1.c0 END FROM vt0;SELECT DISTINCT ((((((t1.c56)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))))>=((CAST(0.871862826702109 AS TEXT)))) FROM t1, vt0 WHERE (TYPEOF(DISTINCT json_array_length(-1152088606))); -- 0ms;
SELECT DISTINCT (NOT (0.2809803331592856)) FROM vt0 ORDER BY (((t1.c21)) BETWEEN ((((vt0.c0) BETWEEN (t1.c25) AND (t1.c56)))) AND ((t1.c56))) ASC  NULLS LAST;SELECT ALL ((((((t1.c21)==(vt0.c0)))OR(((((vt0.c0)AND(t1.c25)))OR(t1.c0)))))OR(TYPEOF(t1.c0))) FROM vt0;SELECT (((t1.c29)) BETWEEN (((((t1.c56))=((t1.c21))))) AND ((COUNT(t1.c0)))), ((((t1.c25) BETWEEN (x'5784') AND (t1.c29))) BETWEEN (vt0.c0) AND (CAST(t1.c29 AS REAL))), (((((t1.c56)AND(vt0.c0)))AND(t1.c29)) IN ()) FROM vt0 GROUP BY (((t1.c25)) NOT BETWEEN (((~ (t1.c21)))) AND ((((NULL)AND(t1.c25))))) HAVING CASE '' COLLATE RTRIM  WHEN CAST(t1.c56 AS REAL) THEN (vt0.c0 IN ()) WHEN t1.c25 COLLATE BINARY THEN t1.c29 WHEN ((t1.c21)<(t1.c0)) THEN CAST(0.7362566427860353 AS REAL) END;SELECT (NOT (((t1.c0) NOTNULL))), COUNT((t1.c56 IN ())) OVER (), '-549889757', AVG(((((t1.c29)OR(t1.c0)))AND(t1.c29))) OVER ( RANGE  CURRENT ROW), COUNT((vt0.c0 IN ()) COLLATE NOCASE) FROM vt0;SELECT ((GROUP_CONCAT(t1.c25))<<((t1.c21 IN ()))) FROM vt0, t1 WHERE (((COALESCE(x'edaa', 1.572489354E9)) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((t1.c21)>=(t1.c29))) BETWEEN (((t1.c25) NOT BETWEEN ('-1048262475') AND (t1.c25))) AND (t1.c25 COLLATE NOCASE)) FROM t1, vt0; -- 0ms;
SELECT ALL ((((t1.c21) IS FALSE))||(x'' COLLATE BINARY)) FROM vt0 WHERE (((CASE WHEN 0.06350587523723683 THEN '67248610' END)<<((NOT (NULL)))));SELECT DISTINCT (((highlight(vt0.c0, t1.c21, vt0.c0, t1.c56), (- (t1.c56)), t1.c56))==((t1.c56, (+ (t1.c56)), ((((t1.c56)OR(t1.c56)))OR(''))))) FROM vt0;SELECT DISTINCT t1.c25 FROM t1, vt0 GROUP BY NULL, (((- (t1.c29))) NOT BETWEEN (((vt0.c0)%(t1.c21))) AND (json_array_length(t1.c29))), (- (((((((((x'')OR(vt0.c0)))AND(t1.c0)))AND(t1.c25)))AND(t1.c29)))) ORDER BY (((NOT (t1.c0)))OR(((t1.c29) ISNULL))) DESC  NULLS LAST;SELECT DISTINCT AVG(0.513818122712001), CAST((+ (0.2511300155701969)) AS REAL), ((((t1.c56)OR(t1.c56))) BETWEEN (((t1.c21) BETWEEN (t1.c56) AND (t1.c56))) AND (t1.c29 COLLATE NOCASE)) FROM t1, vt0; -- 0ms;
SELECT MIN(((t1.c56) BETWEEN (vt0.c0) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN '7aeiXU_' ELSE vt0.c0 END, SQLITE_VERSION(), ((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))) FROM t1, vt0 WHERE (((((x'') NOT BETWEEN (NULL) AND ('	F	|W\Se'))) ISNULL)); -- 0ms;
SELECT ALL json_quote(((x'') BETWEEN (t1.c29) AND (t1.c21))), MIN((((t1.c25))>((vt0.c0)))), COUNT(*) OVER () FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((vt0.c0 IN ()) IN ()), (CASE WHEN vt0.c0 THEN t1.c29 WHEN t1.c25 THEN t1.c21 WHEN t1.c21 THEN t1.c0 ELSE t1.c29 END IN ()), RANK() OVER () FROM t1 WHERE ((((((('n葻{宆')<>('.N.↹')))OR((+ (1e500)))))AND(UNLIKELY(x'')))) ORDER BY CAST((((vt0.c0, t1.c0, t1.c21)) NOT BETWEEN ((t1.c56, vt0.c0, t1.c21)) AND ((t1.c56, t1.c21, t1.c56))) AS NUMERIC)  NULLS FIRST, ((((t1.c25) IS TRUE))+((t1.c56 IN (t1.c0, t1.c21)))), t1.c25 DESC;SELECT CASE t1.c56  WHEN t1.c21 THEN t1.c29 ELSE t1.c29 END COLLATE BINARY FROM t1 WHERE (((COALESCE(DISTINCT x'', '/Yf\rL*#'))>=(((('-884626472'))>((0.9643445593578901)))))); -- 0ms;
SELECT DISTINCT (((((((t1.c25)AND(-1066754781)))OR(0.48371397481365797))))=((t1.c25))) FROM vt0 NOT INDEXED WHERE (CAST(1329492441 COLLATE BINARY AS INTEGER));SELECT DISTINCT CUME_DIST() OVER (), AVG(t1.c56 COLLATE NOCASE COLLATE NOCASE) OVER (), ((AVG(vt0.c0)) BETWEEN (CAST(t1.c29 AS NUMERIC)) AND (LAST_INSERT_ROWID())), (+ (((t1.c25) IS TRUE))), CASE ABS(DISTINCT vt0.c0)  WHEN ((t1.c29) NOT BETWEEN (0.9992784199829147) AND (t1.c29)) THEN (1.894614139E9 IN ()) WHEN CASE WHEN t1.c56 THEN t1.c56 ELSE t1.c25 END THEN '213866245' WHEN ((((((((t1.c21)AND(vt0.c0)))OR(t1.c56)))AND(t1.c56)))AND(x'')) THEN CASE t1.c25  WHEN t1.c25 THEN t1.c0 END ELSE (((t1.c29)) BETWEEN ((t1.c21)) AND ((-1.906908811E9))) END FROM vt0, t1; -- 0ms;
SELECT CAST(((((t1.c56)OR(t1.c21)))OR(t1.c0)) AS NUMERIC) FROM vt0, t1 WHERE (((((((0.6188713176196156, x'e93e', '-2077754967'))<((-1758920312, '-1180969224', 0.06350587523723683)))))<((CASE WHEN '0' THEN x'881d' WHEN '-1668087427' THEN NULL WHEN '' THEN 0.7570209637104478 ELSE '0.2511300155701969' END)))); -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS REAL))OR(CAST(x'' AS REAL))))AND(((((t1.c56)OR(t1.c21)))OR(t1.c56)))) FROM t1 LIMIT 1295824545;SELECT DISTINCT ((SUM(t1.c29)) NOT BETWEEN (((t1.c56)/(vt0.c0))) AND (((('C ')) NOT BETWEEN ((t1.c25)) AND ((t1.c21))))), ((t1.c56)-(t1.c56)) COLLATE RTRIM, GROUP_CONCAT(((t1.c29) NOT BETWEEN (t1.c25) AND (t1.c56))) OVER () FROM vt0;SELECT DISTINCT (((t1.c0)-(vt0.c0)) IN ((t1.c56 IN (t1.c0)), json_quote(t1.c56), ABS(DISTINCT t1.c21))) FROM vt0, t1 WHERE (((x'' IN ()) IN (0.15541165433671866 COLLATE RTRIM, CASE WHEN 1311604194 THEN 0.47309821929728824 END))) LIMIT 1368274673 OFFSET -2136006098; -- 0ms;
SELECT DISTINCT ((t1.c29) ISNULL) COLLATE BINARY FROM vt0 WHERE (((((NULL) NOT BETWEEN (0.7369289317165115) AND (NULL))) IS TRUE));SELECT DISTINCT ((0.8541903215433233) NOTNULL), (t1.c0 COLLATE NOCASE IN ()), t1.c21 FROM t1, vt0; -- 0ms;
SELECT CAST(((t1.c0)AND(vt0.c0)) AS BLOB) FROM t1, vt0 WHERE (((NULLIF(DISTINCT 0.5857891764762619, x''))*((+ (''))))) ORDER BY 'ெw)8kB' LIMIT -253238924; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( PARTITION BY ((((t1.c21) IS TRUE)) NOT BETWEEN ((((t1.c0))!=((t1.c0)))) AND (CAST(t1.c21 AS INTEGER))), ((((t1.c56) NOT BETWEEN (t1.c25) AND (vt0.c0))) BETWEEN (((t1.c25) NOT BETWEEN (t1.c56) AND (t1.c56))) AND (CAST(t1.c0 AS INTEGER)))) FROM vt0 WHERE ((NOT (((0.9482877210038331)&(NULL)))));SELECT DISTINCT (NOT (((vt0.c0)>(t1.c56)))), (~ (t1.c25)), (('618050005')<(((t1.c56) NOT BETWEEN (0.7570209637104478) AND (t1.c25)))) FROM vt0, t1 WHERE ((((x'840b')-(x'')) IN ())) GROUP BY ((('0.871862826702109', 'TRUE', ((t1.c29)IS NOT(''))))>=((LTRIM(t1.c0), t1.c21 COLLATE RTRIM, t1.c29))); -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN t1.c0 THEN t1.c0 END) OVER () FROM vt0 WHERE ((CASE ''  WHEN x'4952' THEN 'dev蘓kਲi' END IN ((((0.8840320017611729))<=(('-1180969224'))), CASE '137238976'  WHEN x'' THEN 1337505090 END)));SELECT ALL AVG(LAST_INSERT_ROWID()) FROM vt0, t1; -- 0ms;
SELECT ALL ((((((t1.c0) IS TRUE))OR(MAX(t1.c25))))AND((+ (vt0.c0)))) FROM vt0, t1 WHERE (((((0.4699076801436639)|(x'6f08')))>((NULL IN (0.14200449976258844, 'U&\yᝊRx'))))) LIMIT 73000870 OFFSET 527022147; -- 0ms;
SELECT DISTINCT SUM(vt0.c0) OVER (), SUM((((t1.c29, vt0.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c56, vt0.c0, t1.c29, NULL, t1.c56)) AND ((vt0.c0, t1.c21, t1.c25, t1.c29, vt0.c0)))) OVER (), (((t1.c56))==(((((t1.c21))>((vt0.c0)))))) FROM t1 ORDER BY (((t1.c56)%(vt0.c0)) IN ()) DESC LIMIT -1024216500;SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((t1.c0, vt0.c0, t1.c25))<=((t1.c29, vt0.c0, vt0.c0)))) AND (((t1.c56)GLOB(vt0.c0)))), ((t1.c21)AND((~ (t1.c25)))), ((((vt0.c0)OR(vt0.c0)))*(((-1670770141) IS TRUE))) FROM t1, vt0 GROUP BY ((((vt0.c0)IS(t1.c29))) IS TRUE), CASE WHEN vt0.c0 COLLATE NOCASE THEN TRIM(DISTINCT t1.c29) END, ((t1.c56)/(t1.c56)) COLLATE RTRIM; -- 2ms;
SELECT ALL (INSTR(vt0.c0, t1.c25) IN (x'', (NOT (NULL)))), t1.c29, (~ (((t1.c56)+(t1.c21)))) FROM vt0, t1 WHERE ((((((((x''))>=((x''))))AND(((-711971107)-(1396412468)))))AND('L~'))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN ()) FROM t1, vt0 LIMIT -623529770; -- 0ms;
SELECT ((((((t1.c25)OR(vt0.c0)))AND(vt0.c0)))IS NOT((~ (t1.c29)))) FROM vt0 WHERE (UPPER(DISTINCT CASE WHEN 0.37730750469188956 THEN 'x)k<%' END));SELECT GROUP_CONCAT((- (vt0.c0))) OVER () FROM vt0 WHERE (CASE WHEN 0.47420784757574375 THEN NULL WHEN 0.44650866896780106 THEN NULL WHEN 0.8081356875188309 THEN '褅8~7+So' END COLLATE BINARY); -- 2ms;
SELECT DISTINCT ((((t1.c25)%(t1.c0))) NOTNULL) FROM vt0;SELECT DISTINCT SQLITE_SOURCE_ID() FROM vt0 WHERE (((((+ (''))))>((((((((((NULL)AND(0.24303911151438395)))OR('-1596047266')))OR('')))AND('-774446906')))))); -- 0ms;
SELECT DISTINCT (((t1.c25, t1.c21, t1.c25)) NOT BETWEEN ((t1.c29 COLLATE RTRIM, (t1.c0 IN ()), ((t1.c25)OR(t1.c21)))) AND (('-375398341', CASE t1.c21  WHEN t1.c25 THEN t1.c25 ELSE NULL END, ((vt0.c0) NOT BETWEEN (t1.c29) AND ('-300097932'))))) FROM vt0;SELECT ALL ((t1.c0 COLLATE BINARY) NOT NULL) FROM t1; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (t1.c29) AND (vt0.c0))) NOTNULL) FROM t1, vt0; -- 0ms;
SELECT ((CAST(t1.c0 AS INTEGER)) BETWEEN (MAX(t1.c29)) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c25))))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((t1.c29 IN ())) BETWEEN (((vt0.c0) IS FALSE)) AND ((~ (vt0.c0)))), LTRIM(json_array_length(t1.c0, t1.c25), ((t1.c0)-(t1.c0))), ((CASE t1.c0  WHEN t1.c25 THEN t1.c25 ELSE vt0.c0 END)GLOB(((((t1.c0)AND(t1.c29)))OR(t1.c29)))) FROM vt0 ORDER BY (((t1.c0 IN (t1.c0))) IS FALSE);SELECT DISTINCT t1.c21, ((t1.c29)GLOB((((t1.c56))!=((t1.c0))))), 0.8952022485528419 FROM vt0 WHERE (CAST(IFNULL('', x'') AS TEXT));SELECT ALL json((((vt0.c0, vt0.c0, t1.c21))>((t1.c56, t1.c21, NULL)))) FROM vt0 WHERE (((((((((((0.6390121473318484)OR('813407581')))AND(x'')))OR(x'eb07')))AND(x'')))AND(((x'')+(0.7271552929223581)))));SELECT DISTINCT ((CAST(t1.c25 AS NUMERIC)) BETWEEN (((t1.c25) NOT NULL)) AND (TRIM(t1.c29, t1.c56))) FROM vt0 LIMIT -2117738484;SELECT (((t1.c21)) BETWEEN ((((t1.c21)+(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER)))), (t1.c21 IN (t1.c25, t1.c56)) COLLATE RTRIM COLLATE RTRIM, ((((vt0.c0)GLOB(t1.c21)))||(t1.c29 COLLATE NOCASE)), 0xffffffffb9ec0ea7, TRIM((- (t1.c21))) FROM t1;SELECT DISTINCT SUM(((t1.c29)IS(t1.c29))) COLLATE NOCASE FROM t1, vt0; -- 0ms;
SELECT x'', TRIM(CAST(t1.c21 AS BLOB), HEX(t1.c56)), ((CAST(x'' AS REAL)) ISNULL), CASE t1.c25  WHEN t1.c21 THEN t1.c29 WHEN t1.c0 THEN t1.c0 WHEN t1.c29 THEN t1.c21 END COLLATE RTRIM, COUNT(*) OVER () FROM t1 WHERE (CAST((((NULL, NULL, NULL))>((0xffffffffe0d83acd, 0X5925cd59, '뛮p'))) AS BLOB)) GROUP BY CAST(((t1.c29) NOT NULL) AS BLOB); -- 0ms;
SELECT DISTINCT TOTAL(vt0.c0) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND (((((t1.c21)) BETWEEN ((t1.c21)) AND ((t1.c56)))) BETWEEN ((vt0.c0 IN ())) AND (CAST(t1.c29 AS INTEGER))) PRECEDING EXCLUDE CURRENT ROW), CAST(CASE t1.c29  WHEN t1.c0 THEN t1.c56 END AS BLOB), (((t1.c29 IN ())) NOTNULL) FROM t1;SELECT DISTINCT ((((vt0.c0) BETWEEN (t1.c29) AND (NULL))) NOT BETWEEN (((vt0.c0)==(t1.c0))) AND ((((vt0.c0))<((vt0.c0))))) FROM t1 WHERE ((((('-	y\noU宆')+(x''))) ISNULL));SELECT DISTINCT NULL, (t1.c29 IN ()), t1.c25 COLLATE NOCASE FROM t1, vt0 WHERE (CASE WHEN ((1572489354) ISNULL) THEN (((0.20347381587382352)) BETWEEN ((NULL)) AND ((0.33697300248089623))) END); -- 0ms;
SELECT ((MIN(t1.c56))+('P鍐0r[{,i')) FROM t1, vt0 ORDER BY CAST((t1.c56 IN ()) AS INTEGER)  NULLS FIRST; -- 1ms;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE 0.6161832513041756  WHEN '鄣rB' THEN 'g|3' WHEN '-1103223303' THEN '887850231' WHEN '0.5600536485786114' THEN NULL ELSE 0Xffffffffc2f3b24c END)<=(((((x'')OR(x'')))AND('-1670959696'))))); -- 0ms;
SELECT ALL CASE WHEN ((x'f60f')OR(t1.c0)) THEN CAST(t1.c56 AS REAL) WHEN (((vt0.c0))!=((t1.c0))) THEN (((t1.c25, vt0.c0, '189532029')) NOT BETWEEN ((vt0.c0, t1.c29, t1.c0)) AND ((vt0.c0, vt0.c0, t1.c29))) WHEN (((t1.c21, t1.c56, vt0.c0)) NOT BETWEEN ((t1.c29, t1.c29, vt0.c0)) AND ((vt0.c0, t1.c0, '116813069'))) THEN x'3083' END FROM vt0, t1; -- 0ms;
SELECT DISTINCT (CAST(t1.c0 AS NUMERIC) IN (((t1.c25)||(t1.c56)))) FROM vt0, t1; -- 0ms;
SELECT ((((NOT (t1.c25))))<((((((t1.c21)AND(t1.c56)))OR(t1.c0))))) FROM vt0, t1 WHERE (((((((((CASE WHEN x'9376' THEN x'6fe9' END)OR((((NULL)) NOT BETWEEN ((0.5659123523361163)) AND (('-156219003'))))))OR((('0.8245057884365796')-('1157252240')))))AND(CASE 'ac.V?1'  WHEN x'' THEN x'' END)))AND((('786834652')<=(0.16357253222052448))))); -- 0ms;
SELECT ALL 0.7983084157356604 FROM t1, vt0 WHERE (((((((('-1043311173'))>=((x''))))OR(((x'ae3a')>=(0.08321983012085643)))))OR((((x'4ab3')) NOT BETWEEN (('.X#3#')) AND (('0.15541165433671866')))))); -- 1ms;
SELECT DISTINCT (CASE WHEN t1.c56 THEN '' ELSE t1.c25 END IN ()), ((vt0.c0) BETWEEN ((((t1.c56, t1.c29, vt0.c0)) BETWEEN ((NULL, t1.c56, vt0.c0)) AND ((t1.c25, t1.c0, t1.c25)))) AND ((((t1.c56))<>((t1.c0))))), (NOT ((NOT (vt0.c0)))) FROM vt0, t1 WHERE (CAST((('') NOT NULL) AS BLOB)) ORDER BY ((CAST(t1.c56 AS REAL))==(CASE WHEN t1.c0 THEN t1.c56 WHEN t1.c25 THEN t1.c21 WHEN t1.c25 THEN t1.c25 END)), (((t1.c0)) NOT BETWEEN ((CAST(t1.c29 AS REAL))) AND ((((((((((((((t1.c29)OR(t1.c56)))AND(t1.c21)))AND(NULL)))OR(t1.c21)))AND(t1.c25)))AND(0Xffffffffa411963e))))) LIMIT -776808387 OFFSET 2033306215; -- 0ms;
SELECT DISTINCT CAST(t1.c21 AS REAL), ROW_NUMBER() OVER ( ROWS  UNBOUNDED PRECEDING), TOTAL(COUNT(*)) FROM t1, vt0 WHERE (NULL);SELECT DISTINCT ((CASE t1.c56  WHEN t1.c29 THEN t1.c25 END) ISNULL) FROM vt0;SELECT DISTINCT (((t1.c25)) BETWEEN ((IFNULL(DISTINCT vt0.c0, t1.c29))) AND ((CASE vt0.c0  WHEN t1.c0 THEN t1.c25 WHEN t1.c29 THEN x'f529f10e' WHEN t1.c29 THEN x'ea92' END))) FROM t1, vt0 WHERE (((',MWv4M' COLLATE BINARY)>>((((NULL)) BETWEEN ((x'')) AND ((0.48371397481365797)))))); -- 0ms;
SELECT DISTINCT (NOT (COUNT(*))), ((CAST(t1.c0 AS REAL))>(vt0.c0)), (((t1.c56 IN ())) BETWEEN (((((t1.c0)OR(t1.c25)))AND(t1.c0))) AND (CAST(t1.c21 AS INTEGER))) FROM vt0;SELECT DISTINCT ABS((- (t1.c0))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (~ (vt0.c0 COLLATE RTRIM)) FROM t1 NOT INDEXED, vt0 WHERE (((((x'6e1f')<>(''))) NOT BETWEEN ((((''))!=(('(UJ[?')))) AND (CAST(0.5093972092053138 AS REAL)))) GROUP BY x'', (((0X5c58ad33, t1.c25, t1.c25, t1.c56, '-1860343948')) NOT BETWEEN (((((t1.c0))>((t1.c0))), CAST(t1.c21 AS TEXT), CAST(t1.c25 AS REAL), ((((vt0.c0)AND(t1.c0)))AND(t1.c56)), t1.c21 COLLATE BINARY)) AND ((((t1.c56) ISNULL), ((((1.295824545E9)OR(t1.c29)))OR(t1.c21)), ((((((((vt0.c0)OR(t1.c21)))OR(x'')))OR(t1.c0)))AND(vt0.c0)), t1.c0, ((t1.c21) BETWEEN (t1.c0) AND (t1.c25))))), (((((t1.c21) BETWEEN (t1.c25) AND (t1.c25))))>((((t1.c56) NOT BETWEEN (vt0.c0) AND (t1.c56))))); -- 1ms;
SELECT DISTINCT AVG(TRIM(t1.c29)) FILTER(WHERE CASE t1.c29  WHEN vt0.c0 THEN t1.c21 END COLLATE BINARY COLLATE NOCASE) OVER (), LAG(CAST(((t1.c25) BETWEEN (t1.c0) AND ('-156219003')) AS BLOB), (((((NOT (vt0.c0)))OR((((vt0.c0)) BETWEEN ((t1.c25)) AND ((t1.c0))))))AND(((((((((vt0.c0)AND(t1.c29)))AND(t1.c0)))OR(t1.c56)))AND(NULL)))), (((t1.c0 IN ())) NOT BETWEEN ((NOT (vt0.c0))) AND ((- (t1.c0))))) OVER (), ((((NULL)<<(t1.c0))) IS FALSE) FROM vt0, t1; -- 2ms;
SELECT DISTINCT PERCENT_RANK() OVER (), NULL, (NOT ((+ (-0.0)))) FROM t1 WHERE ((-1496250812 IN (0.0843620592131622)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT t1.c0 FROM vt0;SELECT DISTINCT json_array_length(CASE WHEN t1.c29 THEN t1.c25 END) FROM vt0 WHERE (UNLIKELY(1417181943));SELECT DISTINCT CASE ((((t1.c56)AND(vt0.c0)))OR(t1.c56))  WHEN CASE WHEN t1.c56 THEN t1.c25 ELSE t1.c21 END THEN SUM(t1.c21) END FROM t1;SELECT ALL ((((- (t1.c25))))==(((((t1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c56)))))) FROM t1, vt0 WHERE ('qa'); -- 0ms;
SELECT ALL CASE ((t1.c21) BETWEEN (t1.c25) AND (t1.c56))  WHEN (t1.c25 IN ()) THEN (t1.c56 IN (t1.c56, t1.c21)) END, ((GLOB(vt0.c0, t1.c25))>>('-145632114')), x'' FROM t1 ORDER BY TRIM(CAST(t1.c56 AS NUMERIC), (t1.c56 IN ()))  NULLS LAST, ((((t1.c25) NOT BETWEEN (t1.c56) AND (t1.c21)))IS NOT(CASE WHEN t1.c25 THEN t1.c21 ELSE t1.c25 END)) ASC  NULLS FIRST;SELECT ABS('em' COLLATE RTRIM) FROM t1 LIMIT -1278287911 OFFSET -1137661359; -- 0ms;
SELECT ALL ((786834652)-(((t1.c0)<<(t1.c21)))) FROM vt0 WHERE ((((('-1130755403')GLOB(NULL))) NOTNULL));SELECT DISTINCT ((GROUP_CONCAT(t1.c0))IS NOT(((t1.c56) ISNULL))), CASE (t1.c21 IN ())  WHEN ((t1.c0)GLOB(t1.c29)) THEN t1.c21 WHEN t1.c0 THEN ((t1.c29)<=(t1.c56)) WHEN ((vt0.c0) NOT BETWEEN (t1.c21) AND (vt0.c0)) THEN ((((t1.c25)OR(t1.c25)))AND(t1.c29)) ELSE ((((t1.c29)OR('1680900634')))AND(t1.c56)) END, COUNT(*) OVER () FROM t1, vt0 WHERE (((((x'') BETWEEN (x'') AND (x'')))GLOB(((('L~'))>=(('0.08321983012085643')))))); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c29))) IS TRUE) FROM t1 WHERE ((- ((~ (NULL)))));SELECT ALL ((0.823653816515706) BETWEEN (COUNT(t1.c29)) AND (((t1.c29)GLOB(vt0.c0)))), ((((t1.c56) NOT BETWEEN (t1.c29) AND (vt0.c0)))>(CAST(vt0.c0 AS TEXT))), ((((t1.c21) BETWEEN (t1.c25) AND (t1.c25))) NOT BETWEEN ((NOT (vt0.c0))) AND ('-884626472')) FROM vt0 WHERE ((((('ெ藷㇒!{')) BETWEEN ((x'2ff4')) AND ((x'508e'))) IN ()));SELECT DISTINCT (((x''))<=(((((t1.c21)) BETWEEN ((t1.c25)) AND ((vt0.c0)))))), TRIM(DISTINCT ((vt0.c0)=(vt0.c0))), CAST(((t1.c21) BETWEEN (t1.c0) AND (t1.c25)) AS INTEGER) FROM vt0 FULL OUTER JOIN t1 ON ((((t1.c0)AND(t1.c0))) IS FALSE) LIMIT 1996709294; -- 0ms;
SELECT HEX(t1.c29) COLLATE RTRIM, COUNT(*), (((t1.c56 IN ()))IS NOT(ABS(t1.c0))) FROM vt0;SELECT DISTINCT LOWER((NOT (vt0.c0))) FROM t1, vt0; -- 4ms;
SELECT DISTINCT (((t1.c0)) NOT BETWEEN ((((t1.c0)<<(t1.c25)))) AND ((((0.6209571373192618)==(t1.c29))))) FROM t1 WHERE (((0.6205218328122198 IN (NULL)) IN ())) GROUP BY t1.c25 HAVING t1.c29; -- 0ms;
SELECT DISTINCT ((((((((((t1.c21) NOTNULL))AND((NOT (vt0.c0)))))OR(CASE WHEN t1.c21 THEN vt0.c0 END)))AND((((t1.c56)) BETWEEN ((t1.c25)) AND ((t1.c29))))))OR(-1745551949)), TIME(((t1.c0) NOT BETWEEN (t1.c56) AND (-1653529032)), CASE t1.c25  WHEN t1.c29 THEN t1.c21 WHEN '-1824450422' THEN 0X6b78106b WHEN t1.c29 THEN t1.c56 END, CAST(vt0.c0 AS NUMERIC)), ((SUM(t1.c0)) BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(vt0.c0 AS TEXT))) FROM t1, vt0 WHERE ((((CAST('1968999646' AS BLOB)))>=(((('1295824545')%(0.11447778801861253)))))); -- 0ms;
SELECT ((t1.c25 COLLATE RTRIM) ISNULL) FROM vt0, t1 WHERE (CASE WHEN ((0.3722283731038848) BETWEEN (0.6390121473318484) AND (NULL)) THEN json_array_length(0.9676190383434632, ')90ⶻtX') ELSE CASE WHEN NULL THEN 0X4ac9385c END END); -- 0ms;
SELECT DISTINCT (((((+ (t1.c0)))AND(t1.c29)))OR(((t1.c21) BETWEEN (t1.c25) AND (vt0.c0)))), SUM(((t1.c25) IS TRUE)), t1.c21 FROM t1 GROUP BY CASE t1.c25  WHEN t1.c21 THEN t1.c0 WHEN t1.c56 THEN t1.c56 WHEN t1.c25 THEN t1.c0 END COLLATE BINARY;SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY CASE (t1.c56 IN (t1.c56))  WHEN ((vt0.c0)&(t1.c29)) THEN x'' END DESC  NULLS LAST), ((((COUNT(t1.c29))AND(SUM(t1.c56))))OR((- (t1.c56)))), SUM(((t1.c0)IS NOT(vt0.c0))) FROM t1, vt0 WHERE (((+ ('hZPao!!ig')) IN (CAST(x'' AS NUMERIC), INSTR(x'', x'')))) GROUP BY ((('-885956127' IN (t1.c21)))<<((vt0.c0 IN (vt0.c0)))) HAVING TOTAL(CAST('1824379261' AS NUMERIC)); -- 0ms;
SELECT (((- (vt0.c0))) NOT BETWEEN (PRINTF(vt0.c0, vt0.c0, vt0.c0)) AND (((0x1f0132e5)IS(t1.c29)))) FROM t1 WHERE (CASE ((((NULL)OR(NULL)))AND(0.2867650850379041))  WHEN ((x'5c7b') ISNULL) THEN ((x'')/(0.36204267179778005)) ELSE (((((((('-1740711353')AND(0.4796366737999379)))AND(-2.026463067E9)))AND('{F')))OR('y[♙K')) END) ORDER BY (((((t1.c29, t1.c21, t1.c29))>((t1.c29, t1.c25, vt0.c0))))<<(((t1.c56)<(t1.c21))))  NULLS LAST, (((((((((((((t1.c25 IN ()))OR(t1.c25)))OR(CAST(t1.c21 AS TEXT))))OR(((x'')-(t1.c0)))))AND(((t1.c21) IS FALSE))))AND(((t1.c56)LIKE(t1.c21)))))OR(t1.c0 COLLATE NOCASE)) DESC;SELECT DISTINCT CAST(x'' AS BLOB) FROM t1; -- 0ms;
SELECT ALL CASE ((t1.c29)<>(t1.c29))  WHEN ((t1.c0)<=('')) THEN SUM(t1.c29) WHEN ((((t1.c0)OR(t1.c29)))AND(t1.c29)) THEN CAST(x'' AS TEXT) WHEN (~ (t1.c21)) THEN (~ (t1.c0)) ELSE 1122911298 END FROM t1; -- 0ms;
SELECT DISTINCT AVG(CAST(t1.c25 AS BLOB)) OVER () FROM vt0, t1 WHERE ((((((('y[♙K')OR(1241661750)))OR(NULL))) NOT NULL)); -- 0ms;
SELECT ALL CASE WHEN (((NULL, t1.c21, t1.c25)) NOT BETWEEN ((t1.c56, t1.c25, t1.c25)) AND ((vt0.c0, t1.c25, t1.c29))) THEN ((NULL)-(t1.c21)) END, ((((((t1.c25)>(t1.c21)))AND(MIN(t1.c56))))AND(((vt0.c0) NOT BETWEEN (t1.c56) AND (NULL)))), COUNT((t1.c0 IN ())) OVER () FROM vt0;SELECT DISTINCT ((0.1552923955131592)-(((((((((((((vt0.c0)AND(t1.c56)))OR(vt0.c0)))OR(vt0.c0)))AND(t1.c56)))OR(t1.c29)))OR(NULL)))) FROM vt0 ORDER BY CAST(NULL AS INTEGER) DESC;SELECT ALL CASE vt0.c0  WHEN ((vt0.c0)<<(t1.c0)) THEN ((t1.c21)<=(t1.c0)) WHEN CAST(t1.c25 AS TEXT) THEN ((t1.c56)+(t1.c56)) WHEN vt0.c0 THEN t1.c56 WHEN SUM(vt0.c0) THEN (~ (vt0.c0)) WHEN ((t1.c29)GLOB(t1.c0)) THEN (((t1.c29)) NOT BETWEEN ((vt0.c0)) AND ((t1.c25))) END FROM vt0 WHERE (CASE ((x'')AND(0x3dbcace))  WHEN 0.4911407847653019 THEN ((-2.077754967E9) BETWEEN ('-334735165') AND ('635620647')) ELSE CAST(NULL AS REAL) END);SELECT ALL ((TYPEOF(DISTINCT vt0.c0)) IS TRUE) FROM t1 WHERE (CASE WHEN IFNULL(DISTINCT 0.8740149857737367, 0.8541903215433233) THEN CASE x''  WHEN NULL THEN '-425236294' END END);SELECT DISTINCT GROUP_CONCAT(SUBSTR(vt0.c0, t1.c56)) OVER ( ORDER BY ((((((t1.c0)&(t1.c25)))OR(((vt0.c0)/(t1.c21)))))AND(((vt0.c0)LIKE(t1.c0)))) DESC) FROM vt0;SELECT ALL -8.52386001E8 FROM vt0, t1 WHERE (((((((((((('-1215675314')OR(x'')))AND('0.5069260375834563')))AND(x'')))OR(NULL))))>=(((((x''))>(('614864714'))))))); -- 0ms;
SELECT DISTINCT (((((((((((x'')) NOT BETWEEN ((t1.c0)) AND (('0.2809803331592856'))))OR(t1.c29)))AND((((t1.c21, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c56, vt0.c0, t1.c0)) AND ((NULL, t1.c56, t1.c25))))))OR(t1.c25)))AND((((2.076181884E9))>((t1.c56))))) FROM vt0 WHERE (CAST(CASE WHEN '' THEN NULL ELSE '1822743857' END AS NUMERIC));SELECT ((((((t1.c21)<>(t1.c0)))OR((~ (t1.c56)))))AND(((((t1.c0)AND(t1.c29)))OR(vt0.c0)))), ((0X1c1ae936)+(CASE WHEN NULL THEN vt0.c0 END)), (((CASE t1.c0  WHEN NULL THEN t1.c0 ELSE t1.c29 END))<((((vt0.c0)||(t1.c0))))) FROM vt0;SELECT DISTINCT (~ (CASE WHEN t1.c21 THEN t1.c25 ELSE t1.c29 END)), ((t1.c0) ISNULL), CASE WHEN LIKELIHOOD(t1.c0, 0.3180280318971226) THEN x'' COLLATE BINARY ELSE CASE t1.c25  WHEN t1.c25 THEN vt0.c0 ELSE t1.c56 END END FROM vt0 WHERE ((((((((((NULL IN (x'')))OR(('-1576906907' IN (0.07016859560716393, '1568180841')))))AND((NOT (x'')))))OR((0X1600d954 IN ()))))OR((NOT (x'')))));SELECT DISTINCT LIKELIHOOD(((t1.c56)*(vt0.c0)), 0.7077885382533113) FROM vt0 WHERE (((((x'')AND(-1.7976931348623157E308))) NOT BETWEEN (0.5528791590063206 COLLATE NOCASE) AND (((x'8639')*(0.6999201467268265)))));SELECT ((vt0.c0 COLLATE RTRIM)>>(CASE t1.c29  WHEN t1.c56 THEN vt0.c0 ELSE t1.c0 END)) FROM t1, vt0 UNION SELECT DISTINCT ((((((NULL)AND(t1.c21)))AND(t1.c56)))&(AVG(t1.c0))) FROM vt0 WHERE (((((',W-sr7T7w')OR(x'' COLLATE NOCASE)))AND((~ (x'')))));SELECT ((((t1.c56)OR(((t1.c56) IS FALSE))))AND(SUM(t1.c21))) FROM t1, vt0 WHERE (0.186394584528501); -- 0ms;
SELECT DISTINCT t1.c29 FROM t1 WHERE (((('<1')) NOT BETWEEN ((NULL)) AND ((0.2526005896083794))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((0.40146217960333397) ISNULL))|(((t1.c29)IS(t1.c21)))) FROM vt0, t1; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((t1.c0) IS TRUE))) AND ((CASE WHEN t1.c25 THEN t1.c0 END))) FROM t1 WHERE (CAST(((0.203259842017409) NOT NULL) AS REAL));SELECT DISTINCT (((((((((vt0.c0)AND(t1.c29)))OR(t1.c21)))AND(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (- (((((t1.c0)OR(t1.c29)))OR(t1.c56)))) FROM vt0, t1 WHERE ((('?D' COLLATE BINARY)/(CASE '846832849'  WHEN x'' THEN NULL END))); -- 0ms;
SELECT DISTINCT COUNT(0.24640375152333593) OVER () FROM vt0, t1 WHERE (CAST(0.5278263805365481 AS REAL)); -- 0ms;
SELECT CASE WHEN ((t1.c21)||(x'd558')) THEN AVG(t1.c25) ELSE CASE WHEN t1.c29 THEN t1.c56 END END FROM vt0 WHERE (CAST((~ (0.7468187687706149)) AS INTEGER)) GROUP BY ((((t1.c25)AND(t1.c56)))OR(NULL)) COLLATE NOCASE HAVING UPPER(DISTINCT ((t1.c56)=(t1.c21)));SELECT DISTINCT (((- (0.7983084157356604)))&(((t1.c56) NOT BETWEEN (vt0.c0) AND (t1.c0)))) FROM vt0 WHERE ((NOT (((-8.52386001E8)<=('-942505494')))));SELECT DISTINCT (((t1.c25)) NOT BETWEEN ((t1.c25)) AND ((vt0.c0))) COLLATE NOCASE FROM vt0;SELECT DISTINCT ((SQLITE_VERSION())IS NOT('1027064811')) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM t1, vt0 WHERE (json_patch(NULL, ((x'') NOT BETWEEN ('\Y<{2') AND (x'')))); -- 0ms;
SELECT DISTINCT (((+ (t1.c56)))*(CAST(t1.c0 AS BLOB))) FROM t1; -- 0ms;
SELECT DISTINCT (((NOT (t1.c25))) IS TRUE) FROM vt0 WHERE (((((x'')AND(((NULL) BETWEEN (0.39907764869022266) AND (x'')))))AND(((0.36628750557971046)AND('-827452214'))))) ORDER BY (((((vt0.c0, t1.c29, t1.c0)) NOT BETWEEN ((t1.c25, t1.c25, t1.c21)) AND ((t1.c29, t1.c0, t1.c29))))IS('1478398251')) LIMIT -13416889 OFFSET -1651151281;SELECT CASE t1.c56 COLLATE NOCASE  WHEN ((0.871862826702109) NOT BETWEEN (t1.c56) AND (t1.c56)) THEN NULL END FROM vt0 WHERE ((((((('1653224544')AND('1275866705')))OR(0Xffffffffd259f5fe))) ISNULL)) GROUP BY CAST(((t1.c25) BETWEEN (t1.c25) AND (t1.c21)) AS INTEGER), (((0.2929926565858224)) BETWEEN ((t1.c29)) AND (((vt0.c0 IN ())))), ((((t1.c56)||(t1.c25))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((t1.c21) NOT BETWEEN (t1.c25) AND (t1.c29)))) HAVING UNICODE(((t1.c25) NOT BETWEEN (t1.c21) AND (t1.c21)));SELECT DISTINCT COUNT(*) OVER () FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((((t1.c0)IS(t1.c56))) BETWEEN (GROUP_CONCAT(t1.c29)) AND (((t1.c56) NOTNULL))) FROM vt0 WHERE (((CASE WHEN NULL THEN NULL WHEN 0.6831385727793948 THEN NULL WHEN NULL THEN NULL END) NOTNULL));SELECT DISTINCT TOTAL((- (t1.c25))) OVER () FROM t1, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT MIN(vt0.c0 COLLATE NOCASE, ((t1.c56) IS TRUE)) FROM t1 WHERE (TYPEOF(CASE WHEN 'Qxﭏ' THEN x'd496' END)) ORDER BY ((((((NULL) BETWEEN (t1.c29) AND (t1.c25)))AND((((t1.c25, t1.c29, t1.c56)) BETWEEN ((t1.c29, t1.c25, t1.c56)) AND ((vt0.c0, t1.c56, t1.c0))))))AND(((((t1.c29)AND(t1.c29)))AND(t1.c29))));SELECT COUNT(*) FROM vt0, t1 LIMIT 1319627756; -- 0ms;
SELECT ALL CAST(LIKE(t1.c56, t1.c25, '~') AS BLOB) FROM vt0, t1 WHERE ((((('981284906') BETWEEN (0.2305019826511694) AND (0.075791587365857))) BETWEEN ((('0.028387484093318816') NOT BETWEEN (NULL) AND (0X68c93edd))) AND (CASE '2074459696'  WHEN 0.43646259957276246 THEN x'' ELSE 'ெU㇒7!{' END))); -- 0ms;
SELECT DISTINCT (((t1.c29) NOTNULL) IN (((t1.c56) IS FALSE))) FROM t1, vt0 WHERE ((((((((('	6vnqu緢ᠤ')OR(((((((((x'3121')OR(x'')))AND(0.5461716608826448)))OR('527022147')))AND(x'')))))OR((NULL IN (NULL, x'6d7c')))))OR(NULL)))AND('v4&'))); -- 3ms;
SELECT ALL (((t1.c56)) NOT BETWEEN ((t1.c25)) AND ((t1.c21))) COLLATE BINARY, GROUP_CONCAT(((t1.c29)IS(t1.c25))) OVER (), json_quote(0x44fa4490), ((((((((t1.c56 COLLATE NOCASE)AND(vt0.c0 COLLATE RTRIM)))AND(NULL)))AND(CAST(t1.c21 AS REAL))))OR(0.7172714489173252)), TYPEOF(DISTINCT DATETIME(t1.c56, t1.c56, t1.c21, t1.c25, t1.c0)) FROM t1 WHERE (((0X19e12cee IN ()) IN ())) GROUP BY json_type(t1.c29 COLLATE BINARY) LIMIT 1519505219 OFFSET 58791904;SELECT DISTINCT t1.c21 FROM t1 WHERE ((((('')/(NULL))) NOT NULL)); -- 0ms;
SELECT GROUP_CONCAT(((t1.c29) NOT BETWEEN (t1.c21) AND (vt0.c0))) OVER () FROM vt0, t1 WHERE ((((NULL)) BETWEEN ((CAST(0.6994226069732558 AS BLOB))) AND ((((0.33589078268033523) NOT BETWEEN ('y[♙K') AND (x'')))))); -- 0ms;
SELECT DISTINCT ((t1.c25) NOTNULL) COLLATE NOCASE FROM t1, vt0 WHERE ((~ (((0.3151962168984789)<<(NULL))))); -- 1ms;
SELECT DISTINCT (((((t1.c21, t1.c21, t1.c25)) BETWEEN ((t1.c29, t1.c0, t1.c21)) AND ((1.027064811E9, t1.c56, t1.c25)))) ISNULL), (t1.c29 COLLATE BINARY IN ()), MIN(((vt0.c0)&(t1.c56))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT t1.c21 FROM vt0 WHERE (NULL);SELECT DISTINCT t1.c21 FROM t1; -- 0ms;
SELECT (+ (((vt0.c0)LIKE(t1.c21)))), LOWER((((x'')) NOT BETWEEN ((vt0.c0)) AND ((t1.c56)))), (((t1.c21 IN ()))*(((t1.c56) ISNULL))) FROM t1, vt0 WHERE ((((0.4939475662345575)) BETWEEN (((((NULL, '-16349677', x'')) BETWEEN ((x'1793', NULL, NULL)) AND ((x'', NULL, ''))))) AND ((DATETIME(NULL, 0.8740149857737367, 0X4fb8b542))))) GROUP BY ((((vt0.c0)LIKE(t1.c0))) NOT BETWEEN ('-156219003') AND (x'36ea')); -- 0ms;
SELECT ((CASE t1.c25  WHEN vt0.c0 THEN NULL WHEN t1.c25 THEN t1.c29 WHEN t1.c29 THEN t1.c29 ELSE t1.c56 END) BETWEEN (COALESCE(DISTINCT vt0.c0, t1.c0)) AND (x'51219ac6')) FROM vt0 INDEXED BY i32;SELECT DISTINCT t1.c25 FROM t1 WHERE (((((0.22180459921341622)%(x'')))<<((0.5759429520260617 IN (0.7858981479436512))))) UNION ALL SELECT DISTINCT ((((0.1994674894535553) NOT BETWEEN (0.15326003123600074) AND (t1.c0)))=(((t1.c29) BETWEEN (0.38197383830645903) AND (t1.c21)))) FROM vt0 WHERE (CASE WHEN ((NULL) NOT NULL) THEN (((NULL)) NOT BETWEEN ((x'')) AND ((x'b3dc'))) END);SELECT ((((((vt0.c0)AND(NULL)))OR(t1.c0)))<((~ (t1.c0)))) FROM t1 WHERE (CASE WHEN ((0.9565681782633179)&(x'')) THEN DATE(0.21543290617224953, 0.20015159368478208, x'73db') WHEN ((NULL) NOT NULL) THEN ((0Xffffffffd0470009)/(0.9336729627334179)) WHEN ((0.9565681782633179) NOT NULL) THEN (((0Xffffffffa4738a1b))<(('1411401609'))) WHEN (NOT (0.7369289317165115)) THEN 4.13726107E8 WHEN (x'eca5' IN ()) THEN CAST('_YC4HX' AS NUMERIC) END);SELECT AVG(t1.c29) OVER () FROM t1 GROUP BY ((CASE WHEN t1.c29 THEN '1256623731' WHEN t1.c56 THEN vt0.c0 WHEN vt0.c0 THEN t1.c29 ELSE t1.c25 END) BETWEEN (CASE t1.c25  WHEN t1.c56 THEN t1.c0 END) AND (((vt0.c0)AND(t1.c21)))) HAVING t1.c29;SELECT DISTINCT TOTAL(LTRIM(t1.c25)) OVER () FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((((NOT (NULL))))>=((GROUP_CONCAT(t1.c21)))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT AVG(t1.c25) OVER () FROM vt0 WHERE (NULL);SELECT DISTINCT x'' FROM vt0, t1 ORDER BY t1.c0 COLLATE BINARY, (CAST(t1.c21 AS BLOB) IN (CAST(t1.c29 AS INTEGER))); -- 0ms;
SELECT CASE WHEN CAST('-1170327783' AS NUMERIC) THEN ((((t1.c56)OR(t1.c25)))AND(t1.c25)) ELSE (((NULL))>((x''))) END FROM t1 LIMIT 645303782; -- 1ms;
SELECT (- ('.N.↹')), (+ (t1.c56)), AVG((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER () FROM vt0, t1 WHERE (((((((NULL)<<(x'')))AND((('1761918927') IS FALSE))))AND(NULL))); -- 0ms;
SELECT ALL ((((t1.c25, t1.c56, '-1361793562'))!=((t1.c29, NULL, t1.c56))) IN ()) FROM t1 LIMIT -79451348; -- 0ms;
SELECT DISTINCT CASE ((((vt0.c0)OR(t1.c25)))OR(t1.c0))  WHEN t1.c29 THEN (t1.c56 IN (t1.c25, t1.c29)) END FROM vt0, t1 WHERE (((NULL) BETWEEN (CASE x'a486'  WHEN NULL THEN -208607801 WHEN x'' THEN '{곞' WHEN '' THEN NULL WHEN 0.36628750557971046 THEN -1.152088606E9 WHEN '' THEN 0.33978680445264586 ELSE NULL END) AND (((('5q', -8.41763678E8, 1256623731)) BETWEEN ((x'5437', NULL, '746082750')) AND ((1648358427, 'T4FmZ_ZY', '0.47309821929728824')))))); -- 0ms;
SELECT 'm,' FROM vt0 INNER JOIN t1 ON (t1.c29 IN (t1.c25, t1.c21)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (COALESCE(t1.c29, vt0.c0, t1.c29, t1.c25) IN ()) FROM vt0 WHERE ((+ (CAST(0.31218402407628576 AS TEXT)))) LIMIT -1847002008; -- 0ms;
SELECT DISTINCT LAG(t1.c0, (- (((t1.c21)==(t1.c25)))), (((vt0.c0, t1.c25, t1.c25, vt0.c0, x'd471')) BETWEEN ((((t1.c29)<>(t1.c56)), (((t1.c56)) NOT BETWEEN ((t1.c29)) AND ((vt0.c0))), ((0.8107857867458056) NOT NULL), ((t1.c21)/(t1.c0)), (t1.c0 IN ()))) AND ((((vt0.c0)OR(t1.c25)), ((NULL) IS TRUE), ((t1.c0)<(vt0.c0)), ('-1607085705' IN ()), (((t1.c56))<((0.49005756390069366))))))) OVER ( PARTITION BY ((((t1.c29)AND(((((t1.c25)AND(t1.c29)))OR(t1.c0)))))OR(((t1.c56) NOT BETWEEN (t1.c56) AND (t1.c56)))), ((((vt0.c0) NOT NULL))<(((t1.c21)<>(t1.c29))))) FROM vt0, t1 LIMIT 1795584109 OFFSET 714677440; -- 5ms;
SELECT ALL (+ (CAST(t1.c0 AS TEXT))), ((MIN(t1.c21)) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (CASE WHEN t1.c25 THEN t1.c21 ELSE t1.c29 END)), COUNT(((t1.c25) NOT NULL)) FROM vt0;SELECT (- (t1.c29)), CUME_DIST() OVER (), CASE (t1.c0 IN (t1.c56))  WHEN ((((t1.c56)OR(x'')))AND(t1.c0)) THEN '-1546498873' END FROM vt0, t1 WHERE ((((('') IS FALSE)) NOT BETWEEN (((NULL)<(x''))) AND (0x5bb60656 COLLATE BINARY))); -- 0ms;
SELECT ALL t1.c25, x'922e', (((+ (t1.c56)))&(((t1.c25)=(t1.c21)))) FROM vt0 GROUP BY UNLIKELY(t1.c29 COLLATE NOCASE), (~ ((t1.c56 IN (t1.c25)))), LOWER(ABS(vt0.c0));SELECT DISTINCT CASE ((t1.c25)*(t1.c0))  WHEN (t1.c25 IN ()) THEN CASE WHEN t1.c25 THEN vt0.c0 ELSE t1.c21 END ELSE 'D4*K.u2!' END, CAST('-947833631' AS INTEGER), (+ (CAST(t1.c0 AS BLOB))) FROM t1 INDEXED BY i31;SELECT (~ (CASE t1.c56  WHEN t1.c25 THEN t1.c0 ELSE t1.c0 END)), DATETIME(CAST(t1.c0 AS INTEGER), CAST(t1.c25 AS INTEGER), rtreenode(t1.c56, vt0.c0), ((t1.c25) NOT BETWEEN (vt0.c0) AND (t1.c0)), ((('', t1.c29, vt0.c0, vt0.c0, t1.c25))<=((t1.c56, vt0.c0, t1.c25, t1.c0, t1.c29)))), (- (((((t1.c0)OR(0.3274670778928477)))OR(t1.c56)))) FROM t1, vt0 WHERE (('g粜qEU[8' COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT (((json_object(t1.c0, '1166735473')))<>((((t1.c29) NOT BETWEEN (t1.c0) AND (t1.c56))))) FROM vt0, t1 WHERE (((((((NULL) IS TRUE))AND(((33014268)<(0.5700906145197044)))))OR(((0.770880619833164)%(x'a28c'))))) GROUP BY ((t1.c25)IS NOT(((((t1.c29)AND(t1.c0)))OR(vt0.c0)))) HAVING ((x'')IS NOT(vt0.c0)); -- 1ms;
SELECT DISTINCT ((CASE t1.c29  WHEN t1.c21 THEN t1.c21 WHEN t1.c56 THEN t1.c21 WHEN t1.c29 THEN t1.c21 END) BETWEEN (CASE WHEN t1.c29 THEN vt0.c0 ELSE t1.c25 END) AND (TYPEOF(DISTINCT t1.c25))) FROM vt0 WHERE ((((x'' IN ()))GLOB(((x'db3f') BETWEEN (x'2cc7') AND (NULL)))));SELECT (t1.c21 IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((((t1.c25) ISNULL)) NOTNULL) FROM vt0 WHERE ((CASE 0.05983196455457562  WHEN -2.53238924E8 THEN 2.23912333E8 END IN ((((x'', NULL, '73000870')) BETWEEN (('-217252615', '.sb cs.x', '2083823650')) AND (('0.7563158588751101', 0.5186751522056041, x''))), ((x'') BETWEEN (x'a9c5') AND (x'')))));SELECT ALL ((t1.c21 COLLATE BINARY)GLOB(((t1.c29)||(t1.c21)))), PERCENT_RANK() OVER (), (((- (t1.c0)))+((((vt0.c0))=((vt0.c0))))), (CASE t1.c29  WHEN vt0.c0 THEN x'dd1b' END IN (t1.c21 COLLATE NOCASE)), t1.c0 FROM t1, vt0 ORDER BY ((((((((NULL)AND((((t1.c25)) NOT BETWEEN (('-2123034606')) AND ((vt0.c0))))))OR(((0.2230031170844905) BETWEEN (t1.c29) AND (t1.c21)))))AND(((((NULL)OR('^\{\nꙄo')))AND(t1.c56)))))AND(IFNULL(t1.c29, t1.c56))), (((((t1.c25))!=((t1.c56)))) IS TRUE)  NULLS FIRST, (((t1.c0)-(t1.c25)) IN ()) DESC LIMIT 254978614; -- 5ms;
SELECT DISTINCT HEX(((((t1.c21)AND(t1.c25)))OR(t1.c56))) FROM vt0 WHERE ((((CASE 'q(U{'  WHEN x'' THEN NULL ELSE '' END, (((((((('1149917492')AND(NULL)))OR(NULL)))AND('')))AND('*>8A1')), (('%f')%('1337505090'))))<=(((('(d)') NOT BETWEEN ('-1607085705') AND ('IGv&x')), (((('')AND(x'')))AND(x'76f0')), CAST(NULL AS BLOB))))) GROUP BY ((((NULL)=(t1.c0))) NOTNULL);SELECT ALL (((t1.c29)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t1.c21 END)) AND ((2071625912))) FROM vt0 WHERE ((('Sa' COLLATE BINARY)<(CAST(x'' AS INTEGER))));SELECT DISTINCT t1.c29 FROM t1 WHERE (((('' IN ('''\rK]BA<(g)', NULL))) NOT NULL)); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0 WHERE ((- (((NULL) IS FALSE)))); -- 0ms;
SELECT ALL (((t1.c56 IN ('ac.v?1', t1.c0))) BETWEEN ('786834652') AND ((NOT (t1.c0)))) FROM vt0 WHERE (CAST((('1923982813') BETWEEN (0.9418662806392043) AND (0.2575620913365504)) AS INTEGER)) ORDER BY (((t1.c25)|(t1.c29)) IN ()) DESC  NULLS LAST, ((((((((t1.c0)AND(t1.c0 COLLATE BINARY)))AND((((t1.c29)) NOT BETWEEN ((t1.c21)) AND ((t1.c56))))))OR(vt0.c0 COLLATE NOCASE)))AND((+ (t1.c0))))  NULLS FIRST, ((vt0.c0)<>(t1.c25)) COLLATE RTRIM ASC;SELECT ALL GROUP_CONCAT(CAST(t1.c0 AS BLOB)) FILTER(WHERE json_extract((((t1.c25))>((t1.c29))), ((((vt0.c0)AND(vt0.c0)))AND(t1.c21)))) OVER ( ORDER BY CASE ((t1.c29)/(t1.c0))  WHEN NULLIF(DISTINCT t1.c21, t1.c0) THEN (('116813069') NOT NULL) WHEN 0.5236387007919524 THEN t1.c29 COLLATE BINARY WHEN ((((((((((((vt0.c0)AND(t1.c0)))AND(t1.c56)))OR(t1.c0)))AND(t1.c29)))OR(vt0.c0)))AND(vt0.c0)) THEN t1.c25 WHEN ((t1.c0) NOTNULL) THEN t1.c0 COLLATE BINARY WHEN CASE t1.c25  WHEN vt0.c0 THEN t1.c56 ELSE t1.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c21)) END DESC  NULLS LAST) FROM vt0 WHERE (((((((NULL)LIKE('1122911298')))OR(CASE 0.2867650850379041  WHEN '' THEN 'gi-N' ELSE x'49b6' END)))OR(((((0.9066580340146516)OR(x'6a60')))OR(NULL)))));SELECT DISTINCT CAST((~ (vt0.c0)) AS NUMERIC) FROM t1;SELECT DISTINCT ((((t1.c21)<(vt0.c0)))||(MAX(t1.c29))) FROM vt0;SELECT ((t1.c0) BETWEEN (vt0.c0) AND (t1.c21)) COLLATE BINARY FROM t1, vt0; -- 0ms;
SELECT DISTINCT (((CAST(t1.c21 AS REAL)))!=((((((((((vt0.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c29)))OR(t1.c21))))) FROM t1, vt0 WHERE (((((NULL) IS FALSE)) ISNULL)); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((((t1.c56)OR(x'')))AND(vt0.c0)), MIN(t1.c0, t1.c0, t1.c56, t1.c21)) FROM t1;SELECT ALL 2033306215 FROM vt0, t1 WHERE (((('0.25034954190895353', x'5797', x'')) BETWEEN ((((((((((((((((((0.6745358898714575)OR('137238976')))OR('')))AND('-982622101')))OR(-1487528615)))AND('M*&藥s휮<')))OR(1.36970501E9)))OR(x'')))OR('{JyM!bl')), (- (x'')), TRIM(DISTINCT 1.256623731E9, NULL))) AND ((((464639270) NOT BETWEEN (x'') AND (x'')), (((NULL)) NOT BETWEEN ((0.4847306884807444)) AND ((NULL))), (((((((('-841763678')AND(x'')))OR(x'')))AND('0.2856724245365435')))AND(1279177390)))))) ORDER BY (t1.c56 IN ()) DESC  NULLS LAST, (((t1.c25 COLLATE NOCASE))<((((((t1.c56)OR('!෋擇|bRj')))AND(t1.c21))))) ASC; -- 0ms;
SELECT DISTINCT ((TOTAL(t1.c56))GLOB(t1.c25)) FROM vt0 WHERE (TRIM((~ ('')), (('1195006854')LIKE(''))));SELECT DISTINCT (NULL IN ()) FROM vt0, t1 WHERE (CAST(((((x'1269')OR(x'')))AND(NULL)) AS TEXT)) LIMIT -454578051; -- 0ms;
SELECT DISTINCT t1.c0 FROM t1, vt0 NOT INDEXED WHERE (((((x'') ISNULL)) BETWEEN (('(螌}/[n' IN ())) AND (((759119790) BETWEEN (NULL) AND (NULL))))) LIMIT -1004796775; -- 0ms;
SELECT (((('0.40146217960333397') IS TRUE)) BETWEEN (((NULL)LIKE(t1.c56))) AND (t1.c21)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((t1.c0 IN (t1.c56)) IN ()) FROM t1, vt0 WHERE (CAST(((x'f219') NOT NULL) AS BLOB)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c56 WHEN t1.c29 THEN vt0.c0 ELSE t1.c29 END) NOT BETWEEN (t1.c21) AND ((t1.c21 IN ()))) ASC  NULLS LAST, (((((t1.c25)%(vt0.c0))))=(((((t1.c25, x'', t1.c56))>((t1.c56, t1.c21, t1.c21))))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), MIN(MAX(x'')), (((t1.c21 IN ())) IS FALSE) FROM t1;SELECT DISTINCT AVG(((vt0.c0) NOT BETWEEN (t1.c25) AND (t1.c29))) FROM vt0, t1 WHERE (((((((x'')OR(NULL)))AND('')))IS NOT(x''))); -- 0ms;
SELECT DISTINCT (- (((t1.c0)%(x'')))) FROM t1, vt0 WHERE (CAST((('-334735165')*('X2v5羍]!')) AS BLOB)); -- 0ms;
SELECT (- ((t1.c25 IN (t1.c25, 0.9065388480681704)))), (GROUP_CONCAT(t1.c25) IN ()), (CASE WHEN t1.c21 THEN t1.c25 ELSE t1.c29 END IN ()) FROM vt0 WHERE (((MAX(x'', x'', 0Xffffffffe49bc259, NULL, 0.517464382989589, '1368274673'))>=((((x'')) BETWEEN ((x'a4d6')) AND ((0.7172714489173252)))))) GROUP BY LOWER('');SELECT SUM(((t1.c0) IS TRUE)) FROM t1; -- 0ms;
SELECT ((((((((((t1.c0)OR(t1.c25)))OR(t1.c21)))OR(NULL)))OR(t1.c25))) BETWEEN (COUNT(*)) AND (((t1.c25)+(t1.c56)))) FROM vt0, t1; -- 0ms;
SELECT ALL ((((((((CAST(t1.c56 AS REAL))AND((t1.c29 IN ()))))OR(((0x1) IS TRUE))))OR((+ (1.644851949E9)))))OR((t1.c21 IN ()))), ((t1.c21) IS TRUE), json_array_length(CAST(0Xffffffff983693b0 AS TEXT)) FROM t1, vt0 WHERE (((NULL) NOT NULL) COLLATE NOCASE); -- 0ms;
SELECT ALL 'egA_r1''IA' FROM t1 WHERE ((((((x'27c8')) NOT BETWEEN (('909847004')) AND (('3/-懡6g'))))>>(((NULL) IS FALSE)))); -- 0ms;
SELECT ALL ((t1.c0 COLLATE RTRIM) NOT NULL) FROM t1 GROUP BY ((((t1.c25) NOT BETWEEN (t1.c56) AND (vt0.c0))) IS TRUE) HAVING ((t1.c56)-('0.16357253222052448'));SELECT AVG(CASE WHEN t1.c56 THEN t1.c21 WHEN t1.c0 THEN t1.c21 WHEN t1.c0 THEN t1.c0 ELSE t1.c56 END) OVER ( ORDER BY (((t1.c0)<(t1.c21)) IN (NULLIF(DISTINCT t1.c21, vt0.c0), ((t1.c21)>=(x'd9d6'))))), (t1.c56 COLLATE BINARY IN ((vt0.c0 IN ()), ((t1.c25) NOT BETWEEN (t1.c29) AND (t1.c56)))), CUME_DIST() OVER (), CAST((((t1.c0)) BETWEEN (('m4퐾')) AND ((t1.c29))) AS TEXT), DENSE_RANK() OVER ( GROUPS (t1.c29 IN ()) PRECEDING EXCLUDE CURRENT ROW) FROM t1, vt0 WHERE ((((~ ('2009019891')))IS(UPPER(DISTINCT NULL)))); -- 1ms;
SELECT ALL ((SUM(t1.c21))IS NOT(NULL)) FROM vt0, t1 WHERE (((CASE WHEN x'9e97' THEN 0Xffffffff97290188 ELSE '792029143' END) BETWEEN (((('-1776903768', NULL, '1369705010')) BETWEEN ((NULL, 0.3920970122376579, x'02d9')) AND (('385378957', 0x2af90674, NULL)))) AND (((('\<', 0.782025921473256, '-253238924'))>(('1352733131', NULL, '-1936273411')))))); -- 0ms;
SELECT DISTINCT (((((t1.c0)OR(t1.c21)))OR(t1.c25)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (t1.c25)))) FROM vt0;SELECT DISTINCT (+ (((vt0.c0) NOT NULL))) FROM vt0 WHERE (UPPER((NULL IN ()))) GROUP BY (((((t1.c21)OR(t1.c25)))AND(t1.c0)) IN (((t1.c29) IS TRUE))), (+ ((t1.c56 IN (vt0.c0, '0柗')))), (((NULL IN ()))+((NOT (t1.c21)))) HAVING ((((((((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c29)))OR(NULL)))OR(((t1.c56) ISNULL))))OR((vt0.c0 IN (t1.c29, t1.c56)))))AND(((t1.c21)*(vt0.c0))));SELECT ALL (t1.c56 IN ()) COLLATE NOCASE FROM vt0, t1 GROUP BY (((((((t1.c29)AND('P')))AND(t1.c21))))<=(((~ (t1.c25))))) HAVING (((vt0.c0)|(t1.c21)) IN (((t1.c29) BETWEEN (t1.c0) AND (vt0.c0)))) ORDER BY NULL, ((t1.c0 IN (t1.c29)) IN ()) ASC, -1.075708997E9 ASC  NULLS LAST LIMIT -1821523029; -- 1ms;
SELECT DISTINCT GROUP_CONCAT((NOT (t1.c29))) OVER (), x'a49d', ((CAST(0.39907764869022266 AS REAL))&(((t1.c21) IS FALSE))) FROM vt0 WHERE (((('0.6894298409415035')) BETWEEN ((COALESCE('-2077754967', 0.18141748207549713, x'', '2033306215', 0.05076266507358351, x'b4b8'))) AND ((((x'')OR(x'')))))) GROUP BY (((t1.c29))=((vt0.c0))) COLLATE BINARY;SELECT CAST(((t1.c29)IS(t1.c25)) AS REAL) FROM t1, vt0; -- 0ms;
SELECT ALL NULL FROM vt0, t1 WHERE (1.996709294E9); -- 0ms;
SELECT ((((((((((t1.c56)AND(vt0.c0)))OR(t1.c21)))OR(NULL)))OR(NULL)))GLOB(COUNT(t1.c21))) FROM vt0 WHERE ((0.6894298409415035 IN ()) COLLATE NOCASE);SELECT ALL MAX(((t1.c0) ISNULL), ((t1.c25)/(t1.c56))) FROM t1, vt0 WHERE ((((((NULL)==(x'')), ((('-1046686658')) BETWEEN ((NULL)) AND ((NULL))), NULL COLLATE BINARY))<>((x'' COLLATE RTRIM, '', '1894614139' COLLATE NOCASE)))); -- 0ms;
SELECT ALL (((((t1.c29, t1.c0, t1.c29)) BETWEEN ((t1.c56, x'', t1.c56)) AND ((vt0.c0, t1.c56, t1.c0))))&((((t1.c21)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0, t1 WHERE ((((((0.41961502553009566)<=('59836568'))))>((((0.3152137710050751) NOT BETWEEN (x'cf28') AND (0.2867650850379041)))))); -- 4ms;
SELECT ((((NOT (t1.c25))))>((CASE 0xffffffffa14761d7  WHEN t1.c56 THEN t1.c25 END))), TOTAL(CAST(t1.c29 AS NUMERIC) COLLATE BINARY), ((((((((t1.c25)OR(NULL)))AND(t1.c29)))AND(((t1.c56) NOT NULL))))OR((~ (t1.c21)))) FROM vt0, t1 ORDER BY (CAST(t1.c29 AS BLOB) IN ())  NULLS FIRST; -- 0ms;
SELECT x'421f', (- (t1.c56)) COLLATE BINARY, COUNT(*), ((((0.20671733913119206)<(t1.c25))) IS FALSE), FIRST_VALUE((((- (t1.c21)))GLOB(((t1.c21)<=(t1.c0))))) OVER ( PARTITION BY (((t1.c21)>>(t1.c29)) IN ()), (((((vt0.c0 IN ()))AND('2033306215')))OR(((t1.c29) NOT NULL)))) FROM t1; -- 0ms;
SELECT ALL t1.c29 FROM vt0 WHERE (((((((x'')IS(NULL)))AND(((x'') NOT BETWEEN ('.s+\ni\ry\') AND ('-1936273411')))))OR(TRIM(DISTINCT '2016082571', x'1f0c'))));SELECT ALL ((((((((((((t1.c25)OR(t1.c25 COLLATE BINARY)))OR(((x'')/(t1.c21)))))AND(LIKELIHOOD(DISTINCT t1.c56, 0.285122310266285))))AND(json_insert(t1.c29, t1.c0, t1.c29))))OR(('-2087256822' IN ()))))AND((t1.c29 IN (vt0.c0, t1.c21)))) FROM vt0, t1; -- 0ms;
SELECT ((((((((t1.c25 COLLATE RTRIM)AND(vt0.c0 COLLATE RTRIM)))AND((((vt0.c0, t1.c0, t1.c21))>((vt0.c0, t1.c21, t1.c29))))))OR(((t1.c0)<(t1.c29)))))AND(CASE t1.c29  WHEN -2026463067 THEN 0.24640375152333593 END)) FROM vt0 WHERE (CAST(((x'') BETWEEN (NULL) AND (0.8982208527151353)) AS INTEGER));SELECT t1.c29, TOTAL((((t1.c29)) NOT BETWEEN ((t1.c0)) AND ((t1.c25)))) OVER ( ORDER BY CASE WHEN ((t1.c56)+(t1.c0)) THEN (((t1.c56, vt0.c0, vt0.c0))<=((t1.c21, t1.c21, t1.c25))) END), t1.c0 FROM t1, vt0; -- 1ms;
SELECT DISTINCT ((CASE t1.c25  WHEN t1.c56 THEN t1.c0 ELSE vt0.c0 END)>((((t1.c25, t1.c56, vt0.c0))>=((vt0.c0, t1.c0, t1.c0))))) FROM t1;SELECT DISTINCT ((LIKELIHOOD(t1.c25, 0.8946451333158272))%((((t1.c25, t1.c21, t1.c25, t1.c0, t1.c0))<=((t1.c25, t1.c0, t1.c25, t1.c29, vt0.c0))))), MAX(t1.c0), MAX(((((NULL)AND(t1.c25)))AND(t1.c56))) FROM vt0, t1 LIMIT -1235889296; -- 0ms;
SELECT ALL NTH_VALUE(0.6228543955474274, (+ (((x'')|(t1.c25))))) OVER () FROM t1, vt0;SELECT ALL ((((t1.c21)|(t1.c56))) NOT BETWEEN ((((t1.c29, vt0.c0, t1.c56))<=((t1.c29, t1.c25, vt0.c0)))) AND (CAST(t1.c25 AS TEXT))) FROM t1, vt0 WHERE ((- (0.05607411122246997 COLLATE RTRIM))) GROUP BY ((((t1.c29) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL), ((((~ (t1.c29))))>=((t1.c25))), CAST(t1.c25 AS NUMERIC) COLLATE NOCASE HAVING CASE vt0.c0 COLLATE RTRIM  WHEN ((-8.41763678E8) BETWEEN (t1.c29) AND (vt0.c0)) THEN ((t1.c21) NOT BETWEEN ('-156219003') AND (t1.c25)) ELSE (((t1.c29, t1.c0, t1.c29, vt0.c0, vt0.c0)) BETWEEN ((x'36ba', t1.c21, t1.c0, t1.c0, vt0.c0)) AND ((t1.c21, t1.c56, t1.c56, t1.c29, vt0.c0))) END; -- 4ms;
SELECT DISTINCT (((t1.c56, t1.c25, t1.c29))>=((t1.c56, t1.c29, t1.c0))) COLLATE NOCASE FROM t1; -- 0ms;
SELECT (CASE NULL  WHEN t1.c0 THEN t1.c0 ELSE t1.c56 END IN ()), ((((NULL)OR(t1.c21)))AND(x'a1f1')) COLLATE BINARY, GROUP_CONCAT((~ (t1.c0)) COLLATE RTRIM) OVER () FROM t1; -- 0ms;
SELECT DISTINCT MIN(((((t1.c56)AND(t1.c56)))AND(vt0.c0)) COLLATE RTRIM) FROM t1, vt0 WHERE ((((0.6354683930280147 IN ()))LIKE((+ ('oY3X'))))); -- 0ms;
SELECT DISTINCT (SUM(t1.c29) IN ()) FROM t1; -- 0ms;
SELECT ((x'') NOT BETWEEN (t1.c21) AND (t1.c56)) COLLATE RTRIM FROM t1, vt0 INDEXED BY i91;SELECT ALL COUNT(*) OVER (), UNLIKELY(t1.c0), ((((((((((t1.c21)OR(t1.c25)))AND(t1.c25)))OR(t1.c29)))AND(1.821626114E9))) NOT BETWEEN (((t1.c29) ISNULL)) AND (t1.c56)) FROM vt0;SELECT ALL vt0.c0 FROM vt0, t1 WHERE (CASE WHEN ((0xffffffffbb4c089c) BETWEEN ('-1669715269') AND (NULL)) THEN CAST(NULL AS NUMERIC) ELSE RTRIM(0.3983742384653606) END); -- 0ms;
SELECT ALL AVG((((t1.c25)) NOT BETWEEN ((t1.c21)) AND ((t1.c25)))) OVER () FROM vt0, t1 WHERE ((('' COLLATE RTRIM)|((((('0.6390121473318484')OR(x'')))OR(0.34842225889807144))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), ((MIN(t1.c21))<<(CAST(NULL AS TEXT))), ((t1.c21)AND(QUOTE(t1.c21))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (((((t1.c29, t1.c29, t1.c29))>=((t1.c29, t1.c0, vt0.c0))))>>(((t1.c21)>(t1.c0)))) FROM t1, vt0 WHERE (((NULL) NOT NULL) COLLATE NOCASE) ORDER BY ((((vt0.c0) IS FALSE)) IS TRUE) ASC  NULLS FIRST, vt0.c0  NULLS LAST, t1.c25 COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT (NOT (CAST(t1.c25 AS INTEGER))) FROM vt0, t1 WHERE (CAST(((((NULL)AND('0.5236387007919524')))AND('')) AS INTEGER)); -- 0ms;
SELECT ALL '422898241' COLLATE RTRIM FROM vt0, t1 WHERE ((((x'')<<(0X6bc598fa)) IN ())) LIMIT -855507996; -- 0ms;
SELECT DISTINCT ((((t1.c29) IS TRUE))>=(NULL)), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('l''')))=(x'')), ((((((t1.c56)!=(t1.c21)))AND((t1.c25 IN ()))))OR((t1.c29 IN (t1.c21)))) FROM t1;SELECT ((t1.c21 COLLATE RTRIM) BETWEEN (((t1.c56) BETWEEN (vt0.c0) AND (t1.c25))) AND (CAST(t1.c0 AS BLOB))) FROM vt0;SELECT LIKELY(DISTINCT t1.c0), ((t1.c25 IN (vt0.c0, t1.c21)) IN ()), (+ (t1.c29)) COLLATE RTRIM FROM t1, vt0 WHERE (json_remove(((0.871862826702109) NOT BETWEEN ('') AND (0x4d771b9a)), (NULL IN ())));SELECT ALL ((((t1.c56)|(t1.c21))) BETWEEN (((t1.c25) NOT BETWEEN (t1.c0) AND (t1.c29))) AND ((t1.c56 IN ()))), ((((t1.c0)>(t1.c56)))>=(COALESCE(t1.c29, t1.c29))), (((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((t1.c29))) FROM t1, vt0 WHERE ((+ (x'0c7f' COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT (((t1.c56 IN ()))<=(((t1.c29) IS FALSE))) FROM t1; -- 0ms;
SELECT (((vt0.c0 IN ()))<(((t1.c25) IS FALSE))) FROM t1; -- 0ms;
SELECT DISTINCT json(t1.c56) FROM t1; -- 0ms;
SELECT ((((t1.c0) IS FALSE)) BETWEEN ((((NULL)) BETWEEN ((t1.c56)) AND ((t1.c25)))) AND (CASE -1976210445  WHEN t1.c25 THEN NULL WHEN vt0.c0 THEN t1.c21 WHEN t1.c29 THEN t1.c25 WHEN x'' THEN t1.c0 WHEN t1.c56 THEN vt0.c0 ELSE vt0.c0 END)) FROM t1, vt0 WHERE (((CASE NULL  WHEN '-1066754781' THEN NULL ELSE 0.3152137710050751 END) NOTNULL)) ORDER BY (((t1.c25)) BETWEEN ((((-437374670)/(t1.c21)))) AND ((((t1.c25) NOTNULL)))) DESC; -- 1ms;
SELECT DISTINCT ((((t1.c25)>=(x''))) NOT NULL) FROM t1, vt0 WHERE ((((0.43274715589301105)) BETWEEN ((((x'')||(0Xfffffffff0e7e174)))) AND (((('?zUসa\reC') IS FALSE))))); -- 0ms;
SELECT DISTINCT ((((((t1.c29)OR(t1.c0)))AND(vt0.c0)))|((((t1.c56))=((t1.c56))))) FROM t1 WHERE (((((x'') NOT BETWEEN (989470623) AND (x'')))>((('88') BETWEEN (NULL) AND (2076181884)))));SELECT ((t1.c0 COLLATE BINARY) NOT BETWEEN ((t1.c29 IN ())) AND ('1572489354' COLLATE RTRIM)) FROM t1, vt0 ORDER BY ((t1.c25)>('-1046686658')) COLLATE BINARY; -- 0ms;
SELECT DISTINCT t1.c29 FROM vt0 INDEXED BY i53 WHERE (CASE WHEN 'Nn/6,\R' THEN CASE WHEN 0.05683577859903055 THEN x'' WHEN x'7651' THEN 0.9603558515715073 WHEN -8.52386001E8 THEN 1134681978 END ELSE '1464839571' COLLATE RTRIM END) GROUP BY CAST(((t1.c25)+(t1.c0)) AS INTEGER) HAVING ((((t1.c21)<<(t1.c21)))IS(((t1.c21)==(vt0.c0))));SELECT DISTINCT NULLIF(DISTINCT (((t1.c25, t1.c0, t1.c29)) NOT BETWEEN ((t1.c29, t1.c21, vt0.c0)) AND ((t1.c56, vt0.c0, t1.c21))), (t1.c56 IN ())), ((COUNT(vt0.c0))>=(t1.c56 COLLATE RTRIM)), CAST(((NULL)==(vt0.c0)) AS INTEGER) FROM t1;SELECT (((((x'' IN ()))OR(t1.c0 COLLATE NOCASE)))OR(t1.c21 COLLATE BINARY)), json_insert(t1.c25, t1.c25, t1.c21, t1.c0, t1.c25) COLLATE NOCASE, t1.c56 FROM vt0 WHERE (((((- (''))))<=((((0.5913318017984514) IS FALSE)))));SELECT DISTINCT ((((t1.c21)*(0.25034954190895353))) BETWEEN (CAST(t1.c0 AS BLOB)) AND (((t1.c29)>(t1.c29)))), COUNT(*), CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c25) AND (0.6999201467268265)) THEN TOTAL(t1.c56) WHEN (t1.c25 IN ()) THEN ((vt0.c0) NOT NULL) WHEN t1.c56 THEN t1.c21 ELSE CAST(t1.c21 AS BLOB) END FROM vt0 GROUP BY ((t1.c25)-(vt0.c0)) COLLATE BINARY, json_insert(CAST(t1.c25 AS REAL), (((x''))=((t1.c56))), CAST(t1.c0 AS INTEGER)), ((CASE WHEN t1.c21 THEN t1.c56 END) NOT NULL), (+ (LIKE(t1.c56, '-2099005648'))), (((t1.c29 IN (t1.c29)))IS NOT((+ (t1.c25)))) HAVING (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((((t1.c29)>(t1.c21)))));SELECT ALL (NOT (((t1.c56) NOT BETWEEN (t1.c29) AND (t1.c0)))) FROM vt0, t1 WHERE (HEX((((x'99f7', 'Pᇋ', x'')) BETWEEN ((NULL, '284296481', 'd)2GuE\n9F')) AND ((0.4595023219784341, x'', '268520657'))))) GROUP BY 0Xffffffffaa7eac67; -- 1ms;
SELECT DISTINCT AVG(NULL) OVER ( ROWS ((NULL) NOT BETWEEN ((+ (t1.c21))) AND (CASE t1.c21  WHEN t1.c0 THEN x'228e' END)) PRECEDING) FROM vt0;SELECT ALL vt0.c0, ((0.45396192557929393 COLLATE BINARY) IS TRUE), '1445867986' FROM t1, vt0; -- 0ms;
SELECT ALL ((((((((x'')OR(vt0.c0)))OR(vt0.c0)))OR(COUNT(*))))AND(((((((((t1.c29)AND(t1.c21)))OR(t1.c56)))AND('0.9482877210038331')))OR(t1.c0)))) FROM t1;SELECT DISTINCT (+ (t1.c21)) FROM vt0 GROUP BY ((((t1.c56)AND(0.36235432929732525)))OR((vt0.c0 IN (t1.c21)))) HAVING ((((t1.c21)AND(t1.c56)))>=(COUNT(*)));SELECT DISTINCT ((((CAST(t1.c0 AS TEXT))OR((((vt0.c0)) BETWEEN ((t1.c56)) AND ((t1.c21))))))AND((x'' IN ()))) FROM t1 WHERE ((((((- (0.3130929345556859)))OR(((NULL)IS NOT('Sb ')))))OR((((('381779722')AND(NULL)))OR('!a'))))); -- 1ms;
SELECT SUM(t1.c0) FROM vt0 WHERE (((CAST('0.25034954190895353' AS REAL)) IS FALSE));SELECT DISTINCT (((- (t1.c25))) NOTNULL), ((('c_')) BETWEEN (((- (t1.c0)))) AND (((((t1.c29)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))))), UNLIKELY(DISTINCT vt0.c0) FROM t1 WHERE ((('-2026463067')>>(NULL)) COLLATE NOCASE) LIMIT 1317852150 OFFSET -255598786;SELECT ALL 0Xffffffffc610c50e FROM vt0, t1; -- 0ms;
SELECT (((t1.c21)) BETWEEN ((GROUP_CONCAT(t1.c56))) AND ((((t1.c21) ISNULL)))) FROM vt0, t1 ORDER BY ((((((t1.c0)AND(t1.c29)))OR(t1.c25)))OR(((t1.c0)IS NOT(t1.c29)))) DESC; -- 0ms;
SELECT ALL (((t1.c29)<(vt0.c0)) IN ()) FROM vt0, t1 WHERE ('-1695607750') GROUP BY ((((t1.c56) NOT BETWEEN (t1.c29) AND (t1.c29))) NOT BETWEEN ((((t1.c56))>((0.5093972092053138)))) AND (HEX(t1.c29))), ((((0.19526505741712197)-(t1.c21)))!=((((t1.c29)) BETWEEN ((t1.c25)) AND ((t1.c56))))), 0.9990305356555204 HAVING ((NULL)IS NOT(LIKELIHOOD(DISTINCT vt0.c0, 0.7678372665975174))); -- 1ms;
SELECT DISTINCT (NOT (((t1.c25) NOT BETWEEN (t1.c21) AND (t1.c56)))) FROM t1 WHERE (((((NULL) NOTNULL))==(((0x307b9d5d)-(0.823653816515706))))); -- 0ms;
SELECT DISTINCT ((((t1.c0)<=(t1.c25))) NOT NULL) FROM vt0 NOT INDEXED;SELECT ALL ((MIN(t1.c56))>>(CAST(t1.c56 AS TEXT))) FROM vt0 LIMIT 1572489354;SELECT DISTINCT (NOT (x'a109')), NULLIF(TOTAL(vt0.c0), CAST(t1.c56 AS TEXT)), ((0.12373738800696898)||(((t1.c25)==(t1.c29)))) FROM t1, vt0; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c29)) COLLATE NOCASE FROM t1, vt0 WHERE (((0Xffffffffd138b8ae COLLATE BINARY)>(((x'4efb')&(NULL))))) GROUP BY CAST(((t1.c25) NOT NULL) AS NUMERIC), ((((vt0.c0) NOT BETWEEN (t1.c25) AND (t1.c25)))>(CASE 'aS'  WHEN vt0.c0 THEN NULL WHEN t1.c56 THEN t1.c0 WHEN NULL THEN vt0.c0 END)), '1198959605' HAVING t1.c25; -- 0ms;
SELECT DISTINCT MAX((+ (t1.c21))), ((('-982370092', t1.c25, t1.c0)) NOT BETWEEN ((((t1.c25) BETWEEN (t1.c21) AND (t1.c0)), SUM(t1.c29), (((vt0.c0))>((t1.c0))))) AND ((CASE t1.c25  WHEN t1.c56 THEN t1.c0 END, ((t1.c25) BETWEEN (t1.c56) AND (t1.c0)), (NOT (t1.c56))))), ((((x'7d9a')/('7?{')))>>(MAX(x''))) FROM vt0, t1 LIMIT 223912333 OFFSET -272690267; -- 0ms;
SELECT ALL 4.13726107E8 FROM t1 WHERE (SQLITE_COMPILEOPTION_GET(x'')) GROUP BY ((((t1.c21)OR(t1.c0)))AND(t1.c21)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c0)<=(t1.c25)) THEN ((t1.c25)+(t1.c25)) END FROM vt0 WHERE (TRIM(DISTINCT (~ (1305460563)))) GROUP BY NULL, ((t1.c0 IN (t1.c56)) IN ()), ((t1.c29) BETWEEN (t1.c29) AND (t1.c21)) COLLATE NOCASE;SELECT DISTINCT NULL, (((t1.c25) ISNULL) IN (t1.c21 COLLATE RTRIM)), IFNULL(DISTINCT CASE t1.c0  WHEN vt0.c0 THEN t1.c29 END, ((t1.c25) IS FALSE)) FROM t1;SELECT ALL ((CASE t1.c56  WHEN t1.c56 THEN t1.c0 ELSE t1.c0 END)/((((t1.c56, t1.c0, t1.c56))>=((t1.c21, t1.c29, vt0.c0))))) FROM vt0, t1 WHERE ((NOT (x'' COLLATE NOCASE))); -- 0ms;
SELECT FIRST_VALUE((~ ((((vt0.c0))=((vt0.c0)))))) OVER () FROM vt0 GROUP BY ((((t1.c56))!=((x''))) IN ()), UNLIKELY(DISTINCT 6.18050005E8), 0.5792028420778579; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT CAST(t1.c25 AS REAL), json_insert(t1.c25, t1.c0, 'AC.V?1')) FROM vt0;SELECT DISTINCT ((vt0.c0)/(t1.c56 COLLATE NOCASE)), ((CASE t1.c25  WHEN t1.c25 THEN t1.c29 ELSE t1.c25 END) NOTNULL), NTILE((NOT (((vt0.c0)-(vt0.c0))))) OVER ( ORDER BY 0xffffffffabc2fa1c DESC  NULLS FIRST RANGE BETWEEN ((CASE WHEN t1.c25 THEN t1.c21 ELSE t1.c25 END)>=(CAST(t1.c25 AS BLOB))) PRECEDING AND  UNBOUNDED FOLLOWING) FROM vt0 WHERE ((('%' COLLATE BINARY) IS FALSE));SELECT DISTINCT LEAD((((((vt0.c0))==((t1.c25)))) ISNULL), CAST(t1.c21 AS REAL) COLLATE BINARY, LTRIM(((((((((((((t1.c0)OR(0Xffffffffa3c5462a)))AND(t1.c21)))OR(t1.c21)))AND('-1180969224')))OR('-2138011850')))OR(vt0.c0)), ((t1.c29) BETWEEN (t1.c0) AND (t1.c56)))) OVER () FROM t1, vt0 WHERE (((((x'd274')>(1.996709294E9)))<(((0.5050655476904651) IS TRUE)))); -- 0ms;
SELECT DISTINCT t1.c29 FROM vt0, t1 WHERE ((((x'' IN ()))LIKE(((x'')<=(x'3cf00319'))))); -- 0ms;
SELECT CASE t1.c21  WHEN vt0.c0 THEN t1.c25 ELSE t1.c56 END COLLATE BINARY FROM t1, vt0 WHERE ((+ (((((0.056716318280036315)AND('-1329050138')))AND(NULL))))); -- 0ms;
SELECT ALL json_array_length(GROUP_CONCAT(0x77035dae)) FROM vt0, t1;SELECT DISTINCT ((((t1.c56)OR((~ (t1.c0)))))OR(CASE t1.c29  WHEN vt0.c0 THEN t1.c56 ELSE t1.c0 END)), t1.c56, (((((t1.c21 IN ()))OR((NOT (t1.c25)))))OR(NULL)) FROM t1;SELECT ((((vt0.c0) BETWEEN (t1.c56) AND (t1.c29))) BETWEEN (((((t1.c0)AND(vt0.c0)))AND(NULL))) AND (((t1.c29) NOTNULL))) FROM t1, vt0; -- 0ms;
SELECT ((((t1.c56)/(t1.c25)))>(t1.c0 COLLATE BINARY)) FROM vt0;SELECT (-159958843 IN (((t1.c25) ISNULL), TOTAL_CHANGES())) FROM t1 WHERE (CASE WHEN CASE '\t'  WHEN 0.3798194564201932 THEN '0.8740149857737367' ELSE '786728399' END THEN (('1027064811')|('0.8541903215433233')) ELSE ((NULL) BETWEEN (0Xffffffffbdc8f863) AND (x'0df1')) END) ORDER BY ((((((t1.c56)*(t1.c25)))AND(TYPEOF(DISTINCT -2005554274))))OR(((NULL)>>(t1.c21)))), QUOTE(t1.c29) DESC  NULLS LAST LIMIT 716360192 OFFSET -253238924; -- 0ms;
SELECT DISTINCT ((CASE t1.c21  WHEN t1.c29 THEN 0Xffffffffa88bd4e6 WHEN t1.c0 THEN t1.c56 WHEN t1.c29 THEN vt0.c0 END)>(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0)))) FROM t1, vt0; -- 0ms;
SELECT ALL SUM(((t1.c56)|(t1.c56))) OVER () FROM vt0, t1 WHERE ((((((2134923554)<<(NULL))))>=(((+ (0.36628750557971046)))))) GROUP BY (+ ((t1.c25 IN (t1.c56, t1.c0)))) HAVING CASE (NOT (vt0.c0))  WHEN (((t1.c29)) NOT BETWEEN ((vt0.c0)) AND ((t1.c56))) THEN (((t1.c0, t1.c25, t1.c29)) BETWEEN ((t1.c56, 0.5275549311520904, t1.c25)) AND ((vt0.c0, NULL, t1.c25))) END; -- 0ms;
SELECT DISTINCT ((SQLITE_SOURCE_ID())IS NOT(MAX(t1.c56))), TOTAL(CAST(t1.c25 AS TEXT)), CAST((~ (t1.c21)) AS NUMERIC) FROM vt0, t1 LIMIT -115813431; -- 0ms;
SELECT ALL LTRIM(x'', ((((vt0.c0)OR(x'')))OR(t1.c29))) FROM t1;SELECT HEX(DISTINCT (- (vt0.c0))) FROM t1 WHERE ((~ (')䑂')));SELECT PERCENT_RANK() OVER () FROM vt0 WHERE (((('520801307')IS NOT(2.033306215E9)) IN ())) GROUP BY ((((t1.c56 COLLATE NOCASE)OR(((((t1.c25)OR(t1.c56)))AND(vt0.c0)))))AND((((t1.c0))!=((t1.c0))))), (((t1.c21)) NOT BETWEEN ((((((((((t1.c0)OR(t1.c25)))OR(t1.c56)))AND(t1.c29)))AND(vt0.c0)))) AND ((((t1.c56) ISNULL)))), (((((t1.c25))<((vt0.c0))))>(CASE t1.c56  WHEN t1.c56 THEN t1.c21 WHEN t1.c21 THEN '1122911298' WHEN t1.c21 THEN t1.c29 ELSE vt0.c0 END)) ORDER BY TRIM(DISTINCT x'', TRIM(DISTINCT t1.c29, 0.0403792825968885)) ASC  NULLS FIRST;SELECT t1.c56 FROM t1; -- 0ms;
SELECT DISTINCT (t1.c0 IN (((t1.c0)>(t1.c29)))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS INTEGER))AND(LAST_INSERT_ROWID())))OR(((t1.c21)<<(t1.c56)))) FROM vt0, t1 ORDER BY (- (t1.c21 COLLATE RTRIM)); -- 0ms;
SELECT UNLIKELY(((t1.c56) BETWEEN (t1.c25) AND (t1.c0))) FROM t1, vt0 NOT INDEXED WHERE (((('1295824545')) BETWEEN (((('-622520342')IS('()')))) AND ((CAST(0.9934995988500934 AS TEXT))))); -- 0ms;
SELECT ((((((((t1.c56)OR(NULL)))OR(t1.c56)))OR(-1331971731)))AND(t1.c56)) COLLATE NOCASE FROM vt0 WHERE (((((NULL) IS TRUE))=(CASE WHEN 4.13726107E8 THEN '213866245' WHEN NULL THEN '-1e500' WHEN 0.9296246569918603 THEN x'' ELSE 8.8089017E7 END))) GROUP BY (+ (((t1.c21)<=(t1.c25)))) HAVING ((CAST(t1.c0 AS REAL)) NOT BETWEEN (t1.c56 COLLATE BINARY) AND (((('X?')) BETWEEN ((-1129751521)) AND ((t1.c21)))));SELECT CAST((((t1.c29, t1.c21, t1.c25)) BETWEEN ((t1.c56, vt0.c0, t1.c25)) AND ((t1.c0, t1.c29, t1.c56))) AS NUMERIC), (('')GLOB(COUNT(*))), ((((t1.c29)-(vt0.c0)))GLOB(t1.c56 COLLATE RTRIM)) FROM t1 WHERE ((('-1048262475' COLLATE BINARY)<<(-2.32548616E8)));SELECT ALL (+ (0.8595637592012157)) COLLATE NOCASE FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((t1.c29) BETWEEN (t1.c25) AND (0.2789146093713635))) NOT BETWEEN (1.445867986E9) AND (vt0.c0 COLLATE NOCASE)), (((CAST(vt0.c0 AS TEXT)))<((((((t1.c0)AND(t1.c29)))AND(t1.c29))))), (((((vt0.c0 IN ()))AND(INSTR(t1.c25, t1.c29))))AND(((t1.c0) IS FALSE))) FROM vt0, t1; -- 0ms;
SELECT 6.14864714E8, ((t1.c25 COLLATE BINARY) BETWEEN (t1.c56 COLLATE NOCASE) AND (LIKE(vt0.c0, vt0.c0, 'k'))), ((((t1.c25)>(t1.c25)))||(vt0.c0 COLLATE RTRIM)) FROM vt0;SELECT ALL (((vt0.c0 IN (t1.c56))) BETWEEN (LIKELIHOOD(t1.c21, 0.0713989544694612)) AND (CAST(t1.c29 AS REAL))), TOTAL(t1.c56 COLLATE BINARY COLLATE RTRIM), GROUP_CONCAT(((t1.c25)*(t1.c21))) OVER ( ORDER BY (('&')&(vt0.c0)) COLLATE NOCASE  NULLS FIRST) FROM vt0;SELECT ALL '' FROM vt0, t1 WHERE (0.513818122712001); -- 0ms;
SELECT ALL ((AVG(t1.c21))IS NOT(((t1.c21)LIKE(t1.c29)))) FROM vt0, t1; -- 0ms;
SELECT ALL (((x''))!=((COUNT(*)))) FROM vt0, t1 GROUP BY ((t1.c0) BETWEEN (0.012638211269186184) AND (t1.c56)) COLLATE BINARY HAVING ((t1.c29) BETWEEN (t1.c29) AND (vt0.c0)) COLLATE NOCASE; -- 1ms;
SELECT DISTINCT ((((((t1.c25) NOT BETWEEN (t1.c21) AND (t1.c29)))AND(-394574339)))OR(x'd53a' COLLATE NOCASE)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((+ (t1.c0))) OVER () FROM vt0 WHERE ((((NULL)) NOT BETWEEN (((((NULL))>=((0.010956162813279158))))) AND (((((x'', x'', NULL))!=((1329492441, x'', ''))))))) LIMIT -1930027496;SELECT DISTINCT t1.c56 FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c29) BETWEEN (t1.c56) AND (t1.c29)))GLOB((t1.c29 IN (t1.c21)))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))>>(MIN(t1.c0))) FROM t1, vt0; -- 0ms;
SELECT ((((((((((((((t1.c21)-(t1.c56)))OR(MIN(t1.c25))))AND(((((t1.c0)OR(t1.c21)))OR(t1.c0)))))OR(SQLITE_COMPILEOPTION_USED(t1.c29))))OR((((t1.c29))!=((t1.c0))))))OR(TYPEOF(DISTINCT t1.c25))))OR(((((((((vt0.c0)OR(t1.c0)))OR(0.320927243836696)))AND(t1.c21)))OR(t1.c21)))), NULL, (((t1.c25 IN ())) NOT NULL), CAST(((t1.c25)<(t1.c21)) AS BLOB), CASE WHEN ((t1.c56)/(t1.c0)) THEN CASE WHEN t1.c21 THEN vt0.c0 ELSE x'' END ELSE MIN(vt0.c0) END FROM vt0, t1 WHERE (CASE WHEN LIKE(NULL, NULL, '蛶') THEN (+ (x'')) END) ORDER BY ((CAST(t1.c56 AS BLOB)) NOT BETWEEN ((vt0.c0 IN ())) AND (t1.c25 COLLATE RTRIM)); -- 0ms;
SELECT t1.c0, MIN(CAST(t1.c21 AS TEXT)), ((t1.c21 COLLATE NOCASE)!=(((t1.c25)GLOB(0x5d60aac2)))), t1.c21, NTILE(((CAST(x'' AS REAL)) NOT BETWEEN (CASE t1.c25  WHEN t1.c29 THEN t1.c0 ELSE t1.c56 END) AND (CAST(t1.c29 AS NUMERIC)))) OVER ( ORDER BY NULLIF(DISTINCT ((t1.c0) NOT BETWEEN (t1.c25) AND (t1.c56)), ((((t1.c0)AND(t1.c56)))AND(t1.c21))) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ()) ASC) FROM t1; -- 0ms;
SELECT DISTINCT t1.c21 FROM t1 WHERE (((CAST(x'' AS TEXT))<(TYPEOF(0.13952126295750222)))) GROUP BY ((vt0.c0)*(vt0.c0)) COLLATE NOCASE HAVING CASE WHEN CASE t1.c29  WHEN t1.c21 THEN t1.c21 END THEN json_extract(t1.c29, t1.c29, x'eec7', t1.c29) ELSE t1.c0 END;SELECT DISTINCT t1.c29 FROM t1, vt0 WHERE (((((1317852150)AND((NOT (x'')))))OR((('')AND(NULL))))); -- 0ms;
SELECT DISTINCT (((NULL IN ()))/((((t1.c25, t1.c21, t1.c0))=((t1.c56, t1.c56, vt0.c0))))) FROM t1;SELECT DISTINCT 0Xffffffffce097e49 FROM t1 WHERE (CAST(ABS(DISTINCT NULL) AS NUMERIC)) ORDER BY NULL DESC; -- 0ms;
SELECT DISTINCT ((('SA')) NOT BETWEEN ((0.2973396989334395)) AND (((((t1.c29)) NOT BETWEEN ((t1.c29)) AND ((t1.c56)))))), CAST(COUNT(vt0.c0) AS REAL), FIRST_VALUE((((((vt0.c0)) BETWEEN ((t1.c25)) AND ((vt0.c0))))=((((t1.c21))>((t1.c0)))))) OVER () FROM t1, vt0 UNION SELECT DISTINCT ((t1.c0 COLLATE RTRIM) IS TRUE), CAST((- (t1.c0)) AS NUMERIC), ((((((((((t1.c21)AND(t1.c21)))AND(t1.c25)))OR(t1.c0)))OR(t1.c21))) NOT BETWEEN (CAST(t1.c29 AS BLOB)) AND (((t1.c29) ISNULL))) FROM t1; -- 0ms;
SELECT ALL CAST((+ (t1.c0)) AS INTEGER) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(t1.c0)))AND(CASE vt0.c0  WHEN t1.c29 THEN t1.c21 END)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (IFNULL(DISTINCT t1.c56, t1.c29) IN (CAST(t1.c56 AS BLOB))) FROM vt0 WHERE (((UPPER(DISTINCT 0.7209125642664644)) NOTNULL));SELECT CASE -2.32548616E8 COLLATE RTRIM  WHEN (+ (t1.c29)) THEN (((t1.c0))>=((vt0.c0))) WHEN ((t1.c56) NOTNULL) THEN t1.c56 COLLATE RTRIM WHEN ((((t1.c25)OR(t1.c29)))OR(t1.c21)) THEN ((t1.c21) IS TRUE) ELSE t1.c21 COLLATE NOCASE END, (((t1.c0, t1.c21, t1.c29)) NOT BETWEEN (((((t1.c25)) BETWEEN ((t1.c56)) AND ((t1.c25))), (((t1.c29, t1.c29, t1.c0))>((vt0.c0, t1.c25, vt0.c0))), t1.c25 COLLATE BINARY)) AND ((DATETIME(t1.c21, t1.c0, t1.c29), (+ (vt0.c0)), t1.c25))), ((CAST(t1.c29 AS REAL))LIKE(ABS(0.9893481696527152))) FROM t1 WHERE (CASE ('P' IN (0x77bf35f3))  WHEN ((x'') ISNULL) THEN (x'' IN ()) END) GROUP BY DATETIME(t1.c21 COLLATE BINARY, CASE WHEN t1.c56 THEN t1.c21 WHEN t1.c56 THEN NULL WHEN t1.c21 THEN t1.c29 END, CASE vt0.c0  WHEN 1593194477 THEN t1.c25 ELSE vt0.c0 END, CASE t1.c25  WHEN t1.c0 THEN x'' END, ((((((((t1.c56)AND(t1.c56)))OR(t1.c25)))OR(t1.c56)))AND(vt0.c0))) HAVING '';SELECT DISTINCT CAST('' AS TEXT), ((((t1.c56)LIKE(t1.c56)))IS(CAST(t1.c25 AS INTEGER))), ((COUNT(t1.c0))!=((((vt0.c0))==((NULL))))), GROUP_CONCAT((+ (t1.c56))) OVER (), (((((~ (vt0.c0)))OR(CASE t1.c29  WHEN t1.c56 THEN t1.c0 WHEN vt0.c0 THEN t1.c56 WHEN t1.c29 THEN NULL END)))AND(HEX(DISTINCT t1.c29))) FROM vt0 WHERE (CAST((((('0.6673310577490944')OR(-1.7976931348623157E308)))AND('1150447562')) AS INTEGER));SELECT DISTINCT (((vt0.c0)<(t1.c56)) IN ()) FROM vt0 WHERE ('687672713'); -- 0ms;
SELECT (~ (((vt0.c0)>>(t1.c29)))) FROM vt0, t1 LIMIT 1263116789; -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c56) NOTNULL) THEN (t1.c25 IN (t1.c56)) WHEN (((t1.c21)) NOT BETWEEN ((t1.c56)) AND ((t1.c0))) THEN (t1.c0 IN ()) WHEN (t1.c56 IN ()) THEN t1.c0 COLLATE RTRIM END FROM vt0, t1 WHERE (LIKELIHOOD((('혫DBl?') NOT BETWEEN (x'a537') AND (NULL)), 0.8192433385020698)); -- 0ms;
SELECT DISTINCT x'' FROM t1, vt0; -- 0ms;
SELECT DISTINCT (t1.c29 IN ()) FROM vt0 WHERE ((+ (json_valid(x'ba184f3a')))); -- 0ms;
SELECT DISTINCT (t1.c29 IN ()) COLLATE BINARY FROM t1, vt0 WHERE ((((x'' IN (NULL)))OR((+ ('#z,R*'))))) LIMIT -1888935957 OFFSET -542522211; -- 0ms;
SELECT (((t1.c25 IN ()))-(COUNT(t1.c56))) FROM t1 WHERE ((((x'b6c8')) BETWEEN ((x'')) AND ((x'5732'))) COLLATE BINARY) LIMIT -559679631; -- 0ms;
SELECT ((CASE t1.c56  WHEN t1.c0 THEN t1.c56 ELSE 0.09288856019979053 END) NOT NULL) FROM t1, vt0; -- 0ms;
SELECT (((- (t1.c25))) ISNULL) FROM vt0, t1 WHERE (IFNULL(DISTINCT ((('Z>C[H땂uu', '413726107', NULL)) NOT BETWEEN (('V', '-830111058', x'')) AND ((0.14200449976258844, 0.8328409659668174, '-1773879138'))), ((1.396412468E9) BETWEEN (0xffffffffa88bd4e6) AND (0.8579414995744905)))); -- 1ms;
SELECT DISTINCT CAST((((t1.c29)) BETWEEN ((x'5117')) AND ((t1.c29))) AS TEXT) FROM vt0 WHERE (((((((((x'')AND('461648690')))OR('1195006854')))AND((0.8748828258331769 IN ()))))OR(((((-8.85956127E8)OR(0.2930755837037641)))AND(x''))))) GROUP BY ((x'') BETWEEN (t1.c0) AND (CASE t1.c56  WHEN t1.c25 THEN vt0.c0 ELSE t1.c21 END)), ((((+ (t1.c21))))<=(((((t1.c21)) BETWEEN ((t1.c29)) AND ((t1.c56)))))), ((LIKE(t1.c0, 'op')) BETWEEN (((t1.c21) IS TRUE)) AND (((t1.c0)*(vt0.c0)))) HAVING 0x225d3eba;SELECT ((CAST(t1.c0 AS BLOB))IS NOT(t1.c29)), MAX(((t1.c56)<>('1271536471'))), CASE WHEN 527022147 THEN MIN(t1.c56, t1.c21) END FROM t1 WHERE ((((((((((((0xffffffffb498b4b6))<>((NULL))))AND(((x'') ISNULL))))AND('-659949867')))AND(CAST('657892378' AS NUMERIC))))OR(CAST('-1180969224' AS TEXT)))); -- 0ms;
SELECT t1.c25 FROM vt0 WHERE ((((((x'354579d5') BETWEEN ('4o') AND (0.2884941616813975))))=((((x'')OR('g粜qEU[8'))))));SELECT DISTINCT NULL COLLATE BINARY FROM t1; -- 0ms;
SELECT DISTINCT '' FROM t1 GROUP BY t1.c56 HAVING ((NULL)>=((((t1.c21))!=((t1.c56))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM t1 CROSS JOIN vt0 ON ((t1.c56)IS(((t1.c21) IS FALSE))) WHERE (CAST(CASE WHEN 936804514 THEN '1166463341' WHEN x'aff5' THEN '3땺謿9U_' WHEN '-786973529' THEN '1311604194' ELSE '-808385889' END AS INTEGER)); -- 0ms;
SELECT ALL LAST_VALUE((~ (TYPEOF(vt0.c0)))) OVER () FROM vt0 WHERE ((NOT ((0.9551942860193973 IN ())))); -- 0ms;
SELECT DISTINCT ((t1.c56)IS NOT((+ (t1.c0)))) FROM vt0 WHERE (((json_array('', NULL))==(x'')));SELECT DISTINCT '384258137' FROM vt0, t1 ORDER BY ((t1.c21) NOTNULL) COLLATE NOCASE DESC  NULLS FIRST, t1.c25 LIMIT -241714908; -- 0ms;
SELECT TRIM(DISTINCT ((t1.c29)IS(t1.c21)), COUNT(*)) FROM t1; -- 0ms;
SELECT DISTINCT (((((t1.c29)%('Sb '))))>=((('731176094' IN ())))) FROM vt0 WHERE (((CASE NULL  WHEN 7.300087E7 THEN x'35df' END)||(CASE 0.46740531564288157  WHEN 0.7829062362837731 THEN 0.7362566427860353 WHEN x'' THEN x'68e1dc8e' WHEN 0.7143703507583274 THEN x'' ELSE 0.7570209637104478 END))) GROUP BY CASE ((t1.c21) IS FALSE)  WHEN ((t1.c29) ISNULL) THEN (t1.c0 IN (t1.c25)) ELSE ((vt0.c0)=(t1.c21)) END;SELECT DISTINCT ((((((((((((((t1.c21)OR(t1.c25)))AND(t1.c29)))OR(t1.c25)))AND(t1.c29)))OR(t1.c56)))AND(t1.c56)))/(((vt0.c0)+(t1.c25)))) FROM t1, vt0 GROUP BY ((CAST(vt0.c0 AS REAL)) NOT NULL); -- 0ms;
SELECT ALL CASE WHEN CASE vt0.c0  WHEN t1.c21 THEN t1.c21 END THEN ((((((((t1.c25)AND(t1.c0)))AND(t1.c21)))OR(t1.c56)))AND(t1.c29)) ELSE (t1.c56 IN ()) END FROM t1;SELECT DISTINCT ((t1.c0) NOTNULL) FROM vt0;SELECT DISTINCT ((UNLIKELY(DISTINCT t1.c0))IS NOT(CAST(t1.c21 AS BLOB))) FROM vt0, t1 ORDER BY ((t1.c56)-(t1.c21)) COLLATE RTRIM DESC, (((((t1.c21)) NOT BETWEEN ((t1.c25)) AND ((t1.c56))))<<(((((((((vt0.c0)AND(vt0.c0)))AND(t1.c21)))AND(t1.c56)))AND(t1.c56))))  NULLS FIRST, ((((t1.c56) BETWEEN (t1.c25) AND (t1.c29)))&(vt0.c0)) DESC  NULLS LAST; -- 1ms;
SELECT ALL ((t1.c56 COLLATE BINARY) BETWEEN (((t1.c56)GLOB(2.064923444E9))) AND (((t1.c56)AND(t1.c21)))) FROM t1 WHERE (((((((998902726)OR('-1253386662')))OR('oy3x')))GLOB((0.25034954190895353 IN ('250749565'))))); -- 0ms;
SELECT ((t1.c56 COLLATE NOCASE) NOT BETWEEN (((t1.c21)/('1317852150'))) AND (LIKELY(t1.c0))) FROM t1; -- 0ms;
SELECT ALL ((((((((((t1.c25) IS TRUE))OR(CASE vt0.c0  WHEN t1.c21 THEN vt0.c0 END)))OR((t1.c56 IN ()))))OR((- (t1.c29)))))AND(t1.c29)) FROM t1 WHERE (((CAST('-885956127' AS TEXT))<=(((((x'')OR(NULL)))AND('1862112996')))));SELECT DISTINCT t1.c25 FROM vt0, t1 WHERE (UNLIKELY(((0xffffffffa792c26b)>(-947458870)))) ORDER BY CASE WHEN ((t1.c0) BETWEEN (t1.c56) AND (t1.c21)) THEN CASE WHEN vt0.c0 THEN t1.c29 END END  NULLS LAST; -- 0ms;
SELECT t1.c0, ((((t1.c21) NOTNULL)) NOT BETWEEN (((((vt0.c0)AND(t1.c21)))AND(vt0.c0))) AND (CAST(t1.c25 AS INTEGER))), '936810687' FROM vt0, t1 WHERE ((((('h Og')<=('1149917492')))>(((NULL) NOTNULL)))); -- 0ms;
SELECT ALL ((((t1.c21) IS FALSE))<<(((t1.c25)*(t1.c21)))) FROM t1, vt0 GROUP BY ((((((t1.c0) BETWEEN (vt0.c0) AND (t1.c56)))OR('')))OR(t1.c29 COLLATE RTRIM)), NULL, ((((CASE NULL  WHEN t1.c0 THEN t1.c56 ELSE t1.c21 END)AND(1111927054)))OR((+ (t1.c0)))); -- 1ms;
SELECT DISTINCT ((vt0.c0)IS((+ (t1.c29)))) FROM vt0, t1 LIMIT 1168017117 OFFSET 1948785409; -- 0ms;
SELECT SUM(LOWER(t1.c21)), ((('')) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((((((((t1.c29)AND(0x44fa4490)))OR(t1.c25)))OR(t1.c56)))OR(t1.c56))))), (((t1.c29 IN ()))-(CAST(t1.c29 AS TEXT))) FROM vt0;SELECT DISTINCT ((t1.c29)<<(((((((((-569976935)OR(t1.c0)))AND(t1.c21)))AND(t1.c0)))OR(t1.c21)))) FROM t1 WHERE ((((0xffffffffcb45abd8)) NOT BETWEEN (((~ ('-1338108429')))) AND ((((5.20801307E8) BETWEEN (0.4073370806862786) AND (NULL)))))); -- 0ms;
SELECT DISTINCT CAST(((t1.c25)LIKE(t1.c25)) AS NUMERIC) FROM t1 WHERE ((~ (NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((((t1.c25))<=((t1.c25)))))=((t1.c21 COLLATE RTRIM))) FROM vt0, t1 WHERE (CASE WHEN (('94532976') IS FALSE) THEN ((('2068364249'))<((NULL))) WHEN HEX(DISTINCT '223912333') THEN NULLIF(0.4990603374560615, '0.4529486031286942') WHEN (((('')OR(0.3439337678179415)))AND(NULL)) THEN ((0.8852518076681756) BETWEEN (-1.0242165E9) AND ('')) END); -- 0ms;
SELECT DISTINCT t1.c29 FROM vt0, t1 LIMIT -2136006098; -- 0ms;
SELECT ((((vt0.c0 COLLATE RTRIM)AND(CASE t1.c56  WHEN t1.c25 THEN t1.c21 END)))AND(SQLITE_COMPILEOPTION_GET(t1.c56))), (- ((- (t1.c0)))), ((((CASE WHEN t1.c25 THEN t1.c0 WHEN t1.c0 THEN t1.c29 WHEN t1.c56 THEN 'b1K' END)OR((- (t1.c25)))))OR(CAST(t1.c25 AS BLOB))) FROM t1, vt0; -- 0ms;
SELECT ALL LIKELY(('{4,x.!	' IN (t1.c56, t1.c0))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT TYPEOF(1.31785215E9), (((vt0.c0 IN ())) IS FALSE), (((NOT ('1283775582')))>=(((((0.08547240646658127)AND(t1.c0)))OR(0Xfffffffff22396f8)))) FROM vt0 WHERE ((((((x'c370') IS FALSE)))=(((((('')AND(' ~?*QEAPz')))AND(0.5403295093455216)))))) GROUP BY (((CAST(t1.c21 AS TEXT), (((t1.c56, t1.c21, t1.c56, 0.2333681741973127, vt0.c0))>((t1.c56, t1.c29, t1.c21, '!෋擇|bRj', t1.c21))), (((t1.c21, t1.c56, vt0.c0)) BETWEEN ((t1.c21, t1.c25, t1.c56)) AND ((t1.c25, t1.c0, t1.c0)))))!=((x'', (+ (t1.c25)), (- (t1.c25)))));SELECT x'3ad9' FROM t1 WHERE (((LOWER(DISTINCT NULL))=(((((x'8b1e')OR(x'')))AND(x''))))); -- 0ms;
SELECT ALL GROUP_CONCAT(GLOB(t1.c25, t1.c0)) FROM vt0;SELECT DISTINCT (((CASE t1.c21  WHEN t1.c29 THEN t1.c56 ELSE vt0.c0 END))<>((t1.c29))), (NOT (CASE t1.c25  WHEN t1.c56 THEN t1.c21 ELSE t1.c21 END)), COUNT(*) OVER () FROM vt0, t1 WHERE ((+ ((x'' IN (x'', x'adab'))))); -- 1ms;
SELECT CASE WHEN ((t1.c29)<=(vt0.c0)) THEN ((t1.c29)IS(t1.c25)) ELSE CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END FROM t1 WHERE (CASE QUOTE(-8.85956127E8)  WHEN ((x'') IS FALSE) THEN (('fS.YQRYE') ISNULL) END) ORDER BY CASE (('-1680331806') IS FALSE)  WHEN (((t1.c25))<=((t1.c21))) THEN (+ (t1.c0)) ELSE ((t1.c25)LIKE(t1.c21)) END  NULLS LAST;SELECT DISTINCT x'' FROM vt0; -- 0ms;
SELECT DISTINCT x'' FROM vt0, t1 WHERE ((((('223912333')>>('!uN')))==(((-1758920312) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((t1.c56)GLOB('390198926')))<<(((t1.c0) IS FALSE))), (((~ (t1.c56)))<(TIME(t1.c21, vt0.c0, t1.c56))), (((NOT (t1.c29)))||(((0xf3b0f35)AND(t1.c0)))) FROM t1;SELECT COUNT((t1.c56 IN (vt0.c0, t1.c56))) OVER (), json_valid(((t1.c56) IS FALSE)), ((((((t1.c21)<<(vt0.c0)))AND(NULL)))AND(('p>	J0' IN ()))) FROM vt0;SELECT ((((((1572552004)AND(t1.c0)))OR(vt0.c0)))/(vt0.c0)) FROM t1 WHERE (0.6209571373192618);SELECT DISTINCT TRIM(DISTINCT t1.c56, vt0.c0) COLLATE NOCASE, CUME_DIST() OVER (), ((t1.c56 COLLATE BINARY)>=(TOTAL(t1.c56))) FROM t1 WHERE (json_array_length(CAST(x'' AS TEXT)));SELECT DISTINCT ((NOT (t1.c21)) IN ()) FROM vt0 WHERE (((((0.8033860515991983)%(6.724861E7)))+(x''))); -- 0ms;
SELECT CAST(((t1.c29) NOTNULL) AS REAL), CASE WHEN t1.c21 THEN t1.c25 ELSE vt0.c0 END COLLATE BINARY, (((((((t1.c21, t1.c25, t1.c0))<=((t1.c29, t1.c21, t1.c25))))AND(CASE t1.c21  WHEN t1.c56 THEN t1.c0 END)))AND(CASE t1.c25  WHEN t1.c25 THEN t1.c21 ELSE t1.c29 END)) FROM t1;SELECT ALL (((((t1.c25)AND(vt0.c0)))AND(vt0.c0)) IN ()), GROUP_CONCAT(((vt0.c0)|(NULL))) OVER (), ((((t1.c56)>=(t1.c0)))!=(TRIM(vt0.c0))) FROM t1, vt0 GROUP BY (((~ (t1.c56)))!=((t1.c21 IN ()))) HAVING (t1.c25 COLLATE BINARY IN ()); -- 1ms;
SELECT CAST(t1.c0 AS INTEGER) COLLATE BINARY, ((vt0.c0) ISNULL) COLLATE RTRIM, SUM(((vt0.c0) NOT NULL)) OVER () FROM t1, vt0; -- 0ms;
SELECT DISTINCT (+ (((t1.c29)>(vt0.c0)))), (+ ((+ (t1.c21)))), (((((((((NOT (0.10108281869199365)))AND(TOTAL(t1.c29))))AND(((t1.c0) NOT BETWEEN (t1.c25) AND (vt0.c0)))))OR((((7.86728399E8)) NOT BETWEEN ((t1.c29)) AND ((vt0.c0))))))AND(CASE WHEN vt0.c0 THEN t1.c56 ELSE t1.c25 END)) FROM t1, vt0 WHERE (((6.724861E7) NOT BETWEEN (x'b1d9') AND ('\n3')) COLLATE NOCASE) ORDER BY (NOT (((t1.c56)<<(t1.c25)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL SUM(t1.c21), CASE 0.9695538226011909  WHEN vt0.c0 THEN ((((t1.c56)AND(t1.c25)))AND(t1.c29)) WHEN (vt0.c0 IN (t1.c29, t1.c25)) THEN ((t1.c56) ISNULL) WHEN ((t1.c56)/(vt0.c0)) THEN CAST(t1.c21 AS BLOB) ELSE (vt0.c0 IN ()) END, ((((((((((t1.c29) NOT NULL))OR(t1.c21 COLLATE RTRIM)))AND(MIN(t1.c21))))AND(t1.c29 COLLATE RTRIM)))OR(x'')) FROM vt0, t1 WHERE (((('-852386001' IN ('0.2809803331592856'))) ISNULL)); -- 0ms;
SELECT (((((vt0.c0))==((vt0.c0))))AND('-146250507')) FROM vt0, t1 NOT INDEXED ORDER BY ((0.30267935177763017)<<(vt0.c0)) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
SELECT DISTINCT ((((((((t1.c56)AND(t1.c29)))OR(vt0.c0)))AND(t1.c21)))AND(NULL)) COLLATE BINARY FROM vt0;SELECT COUNT(*) OVER () FROM vt0 WHERE ((((((((('?zUসa1reC')OR(NULL)))OR(x'')))OR(((x'') IS FALSE))))OR(('' IN ())))) GROUP BY (((t1.c29) NOT NULL) IN (CAST(t1.c56 AS REAL))) HAVING t1.c29;SELECT ALL TOTAL(TOTAL(CAST(t1.c0 AS TEXT))), (((NOT (t1.c56)))GLOB(x'08a7')), ((((((((t1.c25 COLLATE BINARY)OR(x'4487')))AND(CASE WHEN vt0.c0 THEN t1.c21 END)))OR(((((((((t1.c56)OR(t1.c56)))OR(t1.c0)))AND(t1.c25)))OR(t1.c21)))))AND(LIKELY(0Xffffffffcc12901e))), 2076181884, CAST((NOT (t1.c25)) AS NUMERIC) FROM t1, vt0;SELECT DISTINCT ((t1.c29 IN (t1.c0)) IN ()) FROM vt0, t1 WHERE (((0.2867282147639739 COLLATE NOCASE) ISNULL)); -- 0ms;
SELECT ((((t1.c21)AND(t1.c25)))<>(9.98902726E8)) FROM vt0 WHERE (((((NOT ('HdbA9/䳅'))))<((((((0.39216876106903753)OR(0Xffffffffbf00f364)))AND(0.5356921989930937))))));SELECT DISTINCT '625948489', GROUP_CONCAT(0.6277027389401162) OVER (), 0Xffffffffafc8cb44, TRIM((((t1.c25))>((t1.c25))), 0.8754095154819047), (+ (((((t1.c21)OR(t1.c0)))OR(t1.c29)))) FROM t1 GROUP BY (((t1.c25, t1.c56, vt0.c0)) NOT BETWEEN (((t1.c21 IN ()), ((((t1.c25)OR(t1.c29)))OR(t1.c25)), ((t1.c0) NOTNULL))) AND ((((t1.c56)%('0.6390121473318484')), CASE t1.c25  WHEN t1.c21 THEN t1.c56 WHEN t1.c0 THEN vt0.c0 WHEN t1.c56 THEN t1.c21 WHEN 0.018122856916620855 THEN t1.c0 WHEN t1.c21 THEN t1.c56 END, ((NULL)|(t1.c21))))) HAVING (+ (0.7178263549091664));SELECT DISTINCT ((MAX(0.02986711620389082))LIKE(CAST(t1.c21 AS BLOB))) FROM t1, vt0 WHERE (CAST((((('-156219003')OR(NULL)))OR(0.22499617230813473)) AS NUMERIC)); -- 1ms;
SELECT DISTINCT COUNT(t1.c21), 0.8954928889977666, (t1.c21 IN ()) COLLATE NOCASE FROM t1 WHERE ((+ ((+ (''))))); -- 0ms;
SELECT TOTAL((~ (t1.c25))) FROM vt0 LIMIT -1220653323;SELECT ALL LAG(((LOWER(DISTINCT vt0.c0)) NOT NULL), CAST(t1.c0 AS REAL) COLLATE NOCASE, TYPEOF((t1.c56 IN ()))) OVER () FROM vt0, t1 GROUP BY t1.c21 COLLATE NOCASE, CAST(t1.c21 AS NUMERIC) COLLATE RTRIM, vt0.c0; -- 0ms;
SELECT DISTINCT t1.c56 FROM t1; -- 1ms;
SELECT ALL LOWER(((t1.c29) NOT BETWEEN (t1.c29) AND (t1.c29))) FROM t1, vt0; -- 0ms;
SELECT ALL COALESCE(CASE t1.c21  WHEN t1.c29 THEN t1.c25 ELSE vt0.c0 END, ((((((((t1.c29)AND(t1.c25)))OR(t1.c25)))AND(t1.c25)))OR(0.5373778546028438))), SUM(((t1.c25) NOT BETWEEN (t1.c56) AND (t1.c21))), ((((((t1.c0))>((vt0.c0)))))>=(((t1.c21 IN (vt0.c0))))) FROM t1, vt0 ORDER BY ((((NULLIF(DISTINCT t1.c21, t1.c21))AND(CAST(t1.c25 AS NUMERIC))))AND(((t1.c56)>(t1.c21)))) ASC; -- 0ms;
SELECT DISTINCT (~ (t1.c21)) FROM t1; -- 0ms;
SELECT DISTINCT CASE WHEN (- (0.36204267179778005)) THEN ((t1.c0)>(t1.c21)) WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c25) NOT BETWEEN (t1.c0) AND (t1.c21)) WHEN GROUP_CONCAT(t1.c0) THEN ((t1.c25)>=(t1.c0)) WHEN vt0.c0 THEN (t1.c21 IN ()) WHEN SUM(t1.c56) THEN (vt0.c0 IN (t1.c25, x'')) END, CASE WHEN ((t1.c0)==(t1.c56)) THEN ((t1.c21)>(t1.c0)) ELSE t1.c25 END, (((- (t1.c0))) BETWEEN ((t1.c0 IN (t1.c56))) AND (((t1.c56)/(t1.c0)))) FROM t1 WHERE ((0.8665123133444937 IN ()) COLLATE RTRIM) GROUP BY 0.10763135100809296;SELECT DISTINCT (('eT9,7 ')>=('i-' COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM t1, vt0 WHERE (((CASE x'6663'  WHEN x'' THEN '501010541' WHEN 'h\n' THEN NULL WHEN 0.7883203399651677 THEN x'8e49' END)*(((x'') NOT BETWEEN (0.1070098881844681) AND (x''))))); -- 1ms;
SELECT ALL NULL, CAST(CAST(t1.c56 AS REAL) AS INTEGER), (~ (CASE 0.27515713559611144  WHEN t1.c21 THEN t1.c56 ELSE t1.c29 END)) FROM t1; -- 0ms;
SELECT DISTINCT (- ((t1.c56 IN ()))) FROM vt0 WHERE (((NULL) BETWEEN ((('-1758227485')*(x''))) AND (('' IN ('390198926'))))); -- 0ms;
SELECT DISTINCT ((t1.c21 COLLATE BINARY) ISNULL) FROM t1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((t1.c0) BETWEEN (CAST(t1.c25 AS REAL)) AND ((((t1.c21, t1.c21, vt0.c0, t1.c56, t1.c25)) NOT BETWEEN ((vt0.c0, t1.c21, t1.c21, t1.c21, t1.c25)) AND ((t1.c21, t1.c25, vt0.c0, t1.c25, t1.c0))))) FROM vt0 WHERE (0x60782708);SELECT ALL COUNT(((t1.c29)<<(t1.c25))) FROM t1, vt0 LIMIT 1670102689 OFFSET 527022147; -- 0ms;
SELECT ALL ((((('' IN ()))OR(((t1.c29)<<(t1.c56)))))AND(SQLITE_VERSION())) FROM vt0 WHERE (((LOWER('?zUসa\reC')) NOT BETWEEN (('-125852367' IN (0.3994066532978111))) AND ((((x'ffcb')) NOT BETWEEN ((NULL)) AND (('58341487')))))) GROUP BY CAST(((t1.c29)/(t1.c29)) AS TEXT), CAST(t1.c56 COLLATE BINARY AS BLOB), (NOT (((t1.c56) IS FALSE)));SELECT vt0.c0 FROM t1, vt0 WHERE (((((~ (-2128501383)), (+ ('-13416889')), (236812812 IN ())))>((((NULL)%(0.7369289317165115)), ((('1648358427'))>=((NULL))), (('0.033982060874227726') BETWEEN (1.05348708E9) AND (0.6029200172081752)))))); -- 0ms;
SELECT DISTINCT ((((t1.c29) IS FALSE)) ISNULL) FROM t1; -- 0ms;
SELECT ALL CASE WHEN GROUP_CONCAT(t1.c29) THEN ((t1.c29)/(vt0.c0)) END FROM t1, vt0 WHERE (((~ (0.6390121473318484)) IN (((((x'314c')AND(NULL)))OR('')), ((-635967556) NOT BETWEEN ('1352733131') AND (x''))))); -- 0ms;
SELECT (((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c29)))) NOT BETWEEN (((t1.c56)<=(t1.c56))) AND ((t1.c56 IN ()))), (((t1.c29)) BETWEEN ((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE NULL END)) AND ((CAST(t1.c29 AS REAL)))), ((CAST(t1.c21 AS BLOB)) BETWEEN (t1.c0) AND (((vt0.c0) NOT BETWEEN (t1.c56) AND (t1.c25)))) FROM t1, vt0; -- 0ms;
SELECT (+ (((t1.c21)||(t1.c56)))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT TOTAL(((t1.c0)/(t1.c0))) OVER (), (TYPEOF(DISTINCT 0.7849612812742526) IN (((t1.c56)<>(t1.c29)))), (+ (COUNT(vt0.c0))) FROM vt0 WHERE ((((((((((('') BETWEEN (x'') AND (NULL)))OR((('Gq')IS(-852386001)))))AND(((NULL) BETWEEN (0x306ec99d) AND ('I6r0]#5')))))AND(CAST(0X11e724ca AS NUMERIC))))AND(((NULL)|('1053487080')))));SELECT DISTINCT (CASE t1.c25  WHEN t1.c0 THEN t1.c25 END IN ()) FROM vt0, t1 WHERE ((((x'90de' IN ())) NOT BETWEEN ((('B|') ISNULL)) AND (CASE '-807219415'  WHEN x'' THEN 0.2998349179807478 ELSE 0X1f0b2421 END))); -- 0ms;
SELECT (((t1.c21)) BETWEEN ((((t1.c25)/(t1.c0)))) AND ((CASE 1936980920  WHEN t1.c25 THEN vt0.c0 ELSE t1.c56 END))), (((t1.c0, t1.c56, t1.c29)) BETWEEN ((((0.07016859560716393)GLOB(t1.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((t1.c21, NULL, t1.c21))), vt0.c0 COLLATE NOCASE)) AND (((((t1.c0))=((t1.c25))), ((t1.c56) NOT BETWEEN (t1.c21) AND (t1.c56)), ((((((((((((t1.c0)AND(0.9930600985549219)))OR(vt0.c0)))AND('0.028387484093318816')))AND(t1.c21)))OR(t1.c56)))OR(t1.c21))))), ((t1.c56)/(t1.c29)) COLLATE NOCASE, ((((t1.c0)>>(t1.c29))) NOTNULL), ((CASE t1.c56  WHEN t1.c21 THEN t1.c29 ELSE vt0.c0 END) NOT NULL) FROM vt0;SELECT ALL IFNULL(HEX(t1.c21), ((t1.c0) IS TRUE)) FROM vt0, t1 WHERE (((CASE '1295824545'  WHEN 'UOOfI' THEN '0.6188713176196156' ELSE '1329492441' END) NOTNULL)) LIMIT -2114076400 OFFSET -1616039655; -- 0ms;
SELECT ALL ((COUNT('614864714')) IS FALSE) FROM vt0, t1 LIMIT 1235758009 OFFSET -2018568053; -- 0ms;
SELECT DISTINCT (((x'')) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((t1.c56)-(t1.c56))))), t1.c0, ROW_NUMBER() OVER ( ORDER BY CASE WHEN CAST('839038702' AS NUMERIC) THEN ((t1.c29) IS FALSE) ELSE ((t1.c0)>(t1.c0)) END DESC), ((((TRIM(DISTINCT t1.c0))AND(((t1.c0)<<(t1.c0)))))OR(((((((((t1.c56)AND(t1.c0)))AND(t1.c21)))OR(t1.c29)))OR(t1.c56)))), (t1.c56 IN ()) COLLATE BINARY FROM t1 WHERE (((UNLIKELY('0.2856724245365435'))&((- (0.8635426334547438))))); -- 0ms;
SELECT DENSE_RANK() OVER (), ((t1.c0) IS FALSE), CASE WHEN (NOT (t1.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(t1.c25)) ELSE (((t1.c56)) BETWEEN ((t1.c25)) AND ((t1.c29))) END FROM t1 ORDER BY CAST(((t1.c0) BETWEEN (t1.c56) AND (vt0.c0)) AS BLOB) DESC  NULLS FIRST;SELECT (~ ('1086750047')) FROM t1, vt0 WHERE (CAST(json_array_length(0.6499035478711428, NULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT 0.07168347408467046 FROM vt0 WHERE (((CAST('3Q' AS BLOB)) BETWEEN ((('223912333')IS NOT(NULL))) AND (x'ab9d'))) GROUP BY (~ ((((t1.c56)) NOT BETWEEN ((vt0.c0)) AND ((t1.c56))))) HAVING (((((((((t1.c21 IN (vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(CAST(t1.c56 AS TEXT))))AND((((t1.c0, t1.c25, t1.c0, vt0.c0, NULL, vt0.c0, vt0.c0))<=((t1.c21, t1.c0, t1.c29, vt0.c0, t1.c21, t1.c21, t1.c0))))))AND(CASE WHEN t1.c56 THEN t1.c25 END));SELECT CASE WHEN COUNT(*) THEN t1.c0 ELSE COUNT(*) END FROM vt0, t1; -- 0ms;
SELECT ((CASE t1.c29  WHEN t1.c25 THEN t1.c25 ELSE t1.c25 END) BETWEEN (((((NULL)OR(t1.c25)))AND(vt0.c0))) AND (t1.c21 COLLATE BINARY)) FROM t1;SELECT DISTINCT json_object(((((vt0.c0)OR(t1.c56)))AND(t1.c25)), ((t1.c56) NOT BETWEEN (vt0.c0) AND (NULL))) FROM vt0 CROSS JOIN t1 ON 'igv&x'; -- 0ms;
SELECT DISTINCT JULIANDAY(((t1.c56)IS(t1.c25)), (- (t1.c56)), (vt0.c0 IN ())), ((CAST(t1.c56 AS NUMERIC)) IS FALSE), LIKE(vt0.c0 COLLATE NOCASE, ((t1.c25) NOT BETWEEN (t1.c56) AND (vt0.c0))) FROM vt0, t1 WHERE (UPPER(DISTINCT CASE NULL  WHEN 0.7404395979153936 THEN '' ELSE x'' END)); -- 0ms;
SELECT ALL t1.c21 FROM t1 WHERE (RTRIM(NULL)) ORDER BY CAST('' AS BLOB)  NULLS LAST, 1368274673;SELECT ALL ((TOTAL(t1.c56)) NOT BETWEEN ((((vt0.c0))<((t1.c25)))) AND (CAST(t1.c56 AS BLOB))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT CASE (t1.c25 IN ())  WHEN load_extension(t1.c56) THEN ((t1.c0) BETWEEN (t1.c29) AND (t1.c29)) ELSE MIN(t1.c56) END FROM vt0;SELECT ALL SUM(((vt0.c0)-(t1.c0))) OVER (), CASE UNLIKELY(t1.c21)  WHEN ((vt0.c0) IS FALSE) THEN CASE t1.c0  WHEN vt0.c0 THEN t1.c25 ELSE t1.c56 END END, CAST(CAST(vt0.c0 AS BLOB) AS BLOB) FROM vt0 WHERE ((((0xffffffff95e5f1a3)) NOT BETWEEN ((NULL)) AND (('ik'))) COLLATE NOCASE) GROUP BY COALESCE(DISTINCT ((((t1.c29)OR(t1.c29)))AND(t1.c21)), (NOT (0.38166647171433365))), TOTAL_CHANGES(), CASE ((t1.c25)>=(vt0.c0))  WHEN ((t1.c29) NOT NULL) THEN vt0.c0 COLLATE NOCASE WHEN (((t1.c25)) BETWEEN ((t1.c56)) AND ((vt0.c0))) THEN ((((t1.c21)OR(t1.c25)))AND(t1.c56)) WHEN TRIM(t1.c25, t1.c0) THEN ((t1.c25) BETWEEN (t1.c25) AND (vt0.c0)) ELSE CASE t1.c29  WHEN t1.c21 THEN t1.c29 END END;SELECT ((t1.c29)|((~ (t1.c25)))) FROM vt0 LIMIT 1256623731;SELECT ALL t1.c56, AVG(MIN(CASE WHEN t1.c29 THEN t1.c56 END)), CASE WHEN (NOT ('-1972420865')) THEN ((t1.c29) BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0, t1;SELECT ALL LIKELY(DISTINCT ((((((((vt0.c0)AND(t1.c25)))OR(t1.c29)))OR('')))AND(t1.c56))), (+ (((t1.c25) NOTNULL))), ((((vt0.c0)*(vt0.c0)))/(json_extract(vt0.c0, t1.c56, t1.c56, t1.c21))) FROM vt0, t1 LIMIT 1956618951 OFFSET -862329859; -- 1ms;
SELECT t1.c0 FROM vt0, t1; -- 0ms;
SELECT DISTINCT NULL FROM t1; -- 0ms;
SELECT ALL t1.c29, (((t1.c56)) NOT BETWEEN ((t1.c21)) AND ((((t1.c21)LIKE(vt0.c0))))), (((- (t1.c0))) NOT BETWEEN (COALESCE(DISTINCT t1.c29, t1.c0)) AND ('g|3')) FROM vt0, t1 WHERE (CASE ((x'') BETWEEN (0.7034009007891284) AND ('1960960277'))  WHEN ((((((((((((0xffffffffec0c58c3)OR(0.6151481471487201)))AND(x'69d7')))AND('2128072779')))OR(x'')))AND('-1957011105')))AND(NULL)) THEN (-1394929045 IN ()) WHEN 0.03535436796980285 THEN (((((((('P')OR(0x3237b5f9)))OR(x'')))AND('')))OR(x'')) WHEN CASE WHEN 0x1f69b843 THEN x'' ELSE 0.5600536485786114 END THEN (((0.24535924556656008, '-334735165', x''))!=((NULL, 0x706fe3dc, '{F'))) END); -- 0ms;
SELECT t1.c29 FROM t1 WHERE (((CASE x''  WHEN NULL THEN '' ELSE x'3a36' END) NOT NULL)) LIMIT -994580981; -- 0ms;
SELECT DISTINCT (((((NULL, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c21, t1.c29)) AND ((vt0.c0, t1.c25, t1.c0)))) NOTNULL) FROM t1 ORDER BY ((((-536584646)AND(((-2.72690267E8) NOT NULL))))AND((NOT (t1.c21)))), (((+ (t1.c0))) NOTNULL);SELECT DISTINCT NTH_VALUE(((LAST_INSERT_ROWID())||(t1.c25)), ((((t1.c25)OR(t1.c29 COLLATE NOCASE)))AND(COALESCE(DISTINCT t1.c29, t1.c21)))) OVER (), ((((t1.c29) NOT NULL))LIKE(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c29)))), t1.c25 FROM t1, vt0;SELECT DISTINCT GROUP_CONCAT(((vt0.c0)IS(vt0.c0))), t1.c21, t1.c21 FROM t1, vt0 WHERE (((CASE WHEN x'2cf36a1e' THEN NULL END) NOT BETWEEN (1.396412468E9 COLLATE NOCASE) AND (0X7f9b7c98 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT t1.c21 FROM vt0, t1; -- 1ms;
SELECT ALL vt0.c0, t1.c29, ((t1.c0)>=(t1.c29)) COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (t1.c25) AND (t1.c56)) COLLATE BINARY, ((x'95eb4576')&(NULL COLLATE RTRIM)) FROM t1, vt0 LIMIT -884626472; -- 0ms;
