-- Time: 2024/06/06 00:48:25
-- Database: database10
-- Database version: 3.40.0
-- seed value: 1289735510
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA mmap_size = -6035314530274908253; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(0.013083599619130193) WHERE CASE WHEN t0.c0 THEN t0.c0 END COLLATE BINARY; -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('0.013083599619130193') WHERE CAST(t0.c0 AS REAL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE ((((NULL) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (TRIM(t0.c0, t0.c0)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x'', c0='-1385168721' WHERE CAST('-1427652985' AS NUMERIC); -- 0ms;
PRAGMA temp.secure_delete; -- 1ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE t0; -- 1ms;
INSERT OR ABORT INTO t0 VALUES ('&2V1S'); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''), (x''), (0.773166603978917); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-27762879'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE t0 SET c0=NULL, c0=0.7694554374333002 WHERE CASE t0.c0  WHEN (NOT (t0.c0)) THEN (((('Q⨓3RdT')AND(t0.c0)))OR(t0.c0)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-167795792 0 unordered'); -- 0ms;
CREATE INDEX i20 ON t0(((((c0) NOT BETWEEN (c0) AND (x''))) NOT NULL)) WHERE (((c0)<=(c0)) IN ()); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('375229822'), (x''), (x'968b'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c0=''; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('375229822'); -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c41; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LENGTH(-1938463081))IS NOT(TRIM('琊	'))); -- 0ms;
UPDATE t0 SET (c41)=(0xffffffffc6bc1a80); -- 0ms;
UPDATE OR IGNORE t0 SET c41=-1.86584575E9; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c41)=('N-'); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
UPDATE OR FAIL t0 SET (c41, c41)=('1719738182', NULL) WHERE ((t0.c41) NOT BETWEEN (t0.c41) AND (t0.c41)) COLLATE RTRIM; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET c41=x'ebf7', c41=x'' WHERE t0.c41; -- 0ms;
UPDATE OR IGNORE t0 SET (c41)=('-1938463081'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1616298141 unordered noskipscan'); -- 0ms;
CREATE UNIQUE INDEX i2 ON t0(((((((c41) BETWEEN (c41) AND (c41)))OR(CASE c41  WHEN c41 THEN c41 ELSE c41 END)))OR(((c41) BETWEEN (c41) AND (c41)))) DESC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i70 ON t0((((((((c41)AND(c41)))OR(c41)), ((c41)IS(c41)), ((c41)<=(c41))))>=((((c41)GLOB(c41)), SUBSTR(0Xffffffffad7000af, c41), (c41 IN (c41, c41))))) COLLATE NOCASE DESC) WHERE CAST(((((x'9d4d')OR(c41)))AND(c41)) AS NUMERIC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i80 ON t0(((load_extension(c41))|(TRIM(c41))) COLLATE BINARY) WHERE c41; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i74 ON t0((((((c41))>((c41))))<(((c41)>=(c41)))) ASC) WHERE '-1938463081'; -- 0ms;
CREATE UNIQUE INDEX i82 ON t0(GLOB((c41 IN ()), c41 COLLATE NOCASE)); -- 0ms;
CREATE UNIQUE INDEX i87 ON t0(((CAST(c41 AS TEXT)) ISNULL) COLLATE BINARY DESC) WHERE c41; -- 1ms;
CREATE INDEX i65 ON t0(c41) WHERE c41; -- 0ms;
UPDATE t0 SET c41=0.9558784354097568, c41=NULL, c41=318182767; -- 1ms;
UPDATE OR IGNORE t0 SET (c41)=(0.05928381459412424) WHERE (((t0.c41)) NOT BETWEEN ((CASE WHEN t0.c41 THEN t0.c41 END)) AND ((((t0.c41) IS FALSE)))); -- 0ms;
UPDATE t0 SET c41=0.2451982402593772 WHERE t0.c41; -- 0ms;
UPDATE OR IGNORE t0 SET (c41)=('pᕯ蔑*JRAg'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (x'9439'); -- 0ms;
INSERT OR REPLACE INTO t0(c41) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET (c41, c41)=(NULL, 0.17567944285800785); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.mmap_size; -- 1ms;
ALTER TABLE t0 ADD COLUMN c85 INT; -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT DISTINCT CAST(t0.c85 AS INTEGER) FROM t0 WHERE (((((NULL)>=(NULL)))|(STRFTIME(x'56bc', NULL, '1759619292')))) ORDER BY (((t0.c85 IN ()))|((NOT (t0.c41)))) ASC  NULLS FIRST, ((t0.c41 COLLATE RTRIM)<(((((t0.c85)AND(t0.c85)))AND(t0.c85)))) ASC  NULLS LAST, 0.4406587452070838 ASC  NULLS LAST LIMIT -656606861 OFFSET 1744974166; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR ROLLBACK INTO t0(c85) VALUES (NULL); -- 0ms;
PRAGMA wal_autocheckpoint = 6122671392818911344; -- 0ms;
PRAGMA temp.application_id = 4712754002394794126; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR ABORT INTO t0(c41, c85) VALUES (x'', '1719738182'); -- 0ms;
UPDATE OR FAIL t0 SET (c85)=('EIIMJb'); -- 0ms;
UPDATE OR IGNORE t0 SET (c85, c85)=('-27762879', NULL); -- 1ms;
ALTER TABLE t0 ADD COLUMN c9 INTEGER; -- 0ms;
CREATE INDEX IF NOT EXISTS i90 ON t0(LIKE(c85 COLLATE RTRIM, (~ (c85)), 'ᕯ') COLLATE NOCASE,(((c85) IS FALSE) IN ()),((((((((((c9)<<(c85)))OR(-1.385168721E9)))AND((~ (c85)))))AND(((c85) NOT BETWEEN (c85) AND (c9)))))AND(((c9) NOT BETWEEN (c41) AND (c85)))) COLLATE NOCASE DESC); -- 0ms;
CREATE INDEX IF NOT EXISTS i75 ON t0((LIKELIHOOD(DISTINCT c85, 0.5508049536728242) IN ()) COLLATE BINARY,((((c9) NOT NULL)) NOT BETWEEN (CASE c85  WHEN c41 THEN c41 END) AND (((((((((c85)OR(c9)))OR(c85)))OR(c9)))OR(x'44f4')))),((((c9)>=(c85))) IS TRUE) ASC); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c41 TO c31; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
UPDATE OR ABORT t1 SET (c85)=(-1865845750); -- 0ms;
REINDEX; -- 0ms;
UPDATE t1 SET (c41, c9)=(0.5598556543805882, NULL); -- 0ms;
UPDATE OR FAIL t1 SET (c85, c9, c85)=(0.7327734793548626, 1.744974166E9, x'028f') WHERE x''; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR IGNORE t1 SET c41=-9.60750976E8; -- 0ms;
CREATE UNIQUE INDEX i14 ON t1(CAST(((c85)-(c41)) AS REAL),(((- (c9))) NOT BETWEEN (c9 COLLATE BINARY) AND (c85 COLLATE NOCASE)) COLLATE RTRIM,((CAST(c9 AS REAL)) NOTNULL)) WHERE CASE (((c9))<((c9)))  WHEN CASE x''  WHEN c41 THEN c41 ELSE c41 END THEN x'' ELSE CAST(0.5815337088434133 AS REAL) END; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR FAIL t1 SET (c9)=(NULL) WHERE (((t1.c41, 'di\M\1E', t1.c41)) NOT BETWEEN (((((t1.c41)) BETWEEN ((x'')) AND ((t1.c85))), (- (t1.c85)), (((((((('1681491217')AND(t1.c41)))AND(t1.c9)))OR(t1.c9)))AND(t1.c9)))) AND (('0.7327734793548626', ((t1.c41)%(t1.c85)), CASE t1.c41  WHEN t1.c41 THEN t1.c9 ELSE t1.c85 END))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
ALTER TABLE t1 ADD COLUMN c67 REAL; -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c67=0.49522740166076373; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c85)=(-2.09901037E8) WHERE (((t1.c9)) NOT BETWEEN ((t1.c85 COLLATE BINARY)) AND ((((t1.c85)<=(t1.c67))))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c67, c9)=(x'a1f291a9', x'') WHERE ((((t1.c41)||(t1.c67)))||(CASE t1.c41  WHEN t1.c9 THEN t1.c85 ELSE t1.c67 END)); -- 0ms;
UPDATE t0 SET c41='e', c41=0.08325197693885233 WHERE '-1822474124'; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT t0.c41 FROM t0, v0 GROUP BY (((('EIIMJb')OR((t0.c41 IN ()))))AND(((((((((-1.938463081E9)AND(t0.c85)))OR(t0.c41)))AND(v0.c0)))OR('-1385168721')))) HAVING (((v0.c0 IN ())) NOT BETWEEN ((v0.c0 IN (t0.c41))) AND (((t0.c41) NOT NULL))) LIMIT -1931320263 OFFSET 2026267370; -- 0ms;
SELECT ALL LEAD(CASE ((t0.c85) BETWEEN (t0.c85) AND (t0.c85))  WHEN (t0.c85 IN ()) THEN CAST(v0.c0 AS TEXT) ELSE v0.c0 COLLATE BINARY END, (NOT (LIKELY(t0.c85))), ((t0.c85 IN (t0.c41)) IN ())) OVER ( ORDER BY ((x'754d')!=(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST) FROM t0, v0 WHERE (CAST(((NULL) BETWEEN (0.4479043182925433) AND ('XQ')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (NULL IN ()), (- (((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c41)))), ((((t0.c85)IS NOT(t0.c41)))-(CAST(t0.c85 AS REAL))) FROM v0, t0 WHERE (CASE WHEN ((x'') ISNULL) THEN (~ ('')) WHEN CAST(0.22001691705034931 AS INTEGER) THEN CAST(NULL AS BLOB) WHEN (0.9288405529519735 IN ()) THEN (('1966666610') NOT BETWEEN (x'') AND ('')) ELSE CASE WHEN x'' THEN 0.2690950211443651 WHEN x'' THEN '1595196823' WHEN x'' THEN '-1931320263' ELSE 76304717 END END); -- 0ms;
SELECT COUNT(*) OVER () FROM v0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT '318182767') COLLATE BINARY, LIKELIHOOD(DISTINCT NULL, 0.8754873989782735), t0.c85 FROM v0 WHERE (((+ (NULL)) IN ())) LIMIT -559113177 OFFSET -686697728;SELECT DISTINCT (((v0.c0)) NOT BETWEEN ((((('-1724181800')) NOT BETWEEN ((t0.c41)) AND ((v0.c0))))) AND ((t0.c85 COLLATE RTRIM))) FROM v0 CROSS JOIN t0 ON (((v0.c0) ISNULL) IN ()); -- 0ms;
SELECT (~ (((v0.c0) NOT BETWEEN (t0.c41) AND (v0.c0)))) FROM v0, t0 WHERE ((- (CASE WHEN '2009536246' THEN 1423522471 ELSE '' END))); -- 0ms;
SELECT DISTINCT '-1931320263', (CAST(v0.c0 AS REAL) IN (((v0.c0)*(v0.c0)), t0.c85)), (((t0.c41) NOTNULL) IN ()) FROM t0 WHERE (CASE WHEN CAST(NULL AS REAL) THEN ((NULL)+('-721157872')) ELSE (((0.9641560657626971, 0.35174789759154057, 0X9ce8d69)) NOT BETWEEN ((NULL, 1681491217, NULL)) AND ((NULL, 0.38731164258383755, '2083329210'))) END) LIMIT 848370129 OFFSET 76304717;SELECT ALL TIME(t0.c41, t0.c85, t0.c85) COLLATE BINARY, '-?eIf]', (NOT (t0.c41)) COLLATE NOCASE, ((((v0.c0 IN (t0.c41, t0.c41))))<((t0.c85))), CASE WHEN t0.c41 THEN (t0.c85 IN (t0.c85)) WHEN t0.c41 COLLATE RTRIM THEN ((t0.c41)&(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))OR(t0.c41)) THEN ((v0.c0)<=(v0.c0)) END FROM v0, t0 GROUP BY (~ (t0.c85)) COLLATE BINARY, ((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c41 AS NUMERIC)) AND (((t0.c85) BETWEEN (t0.c41) AND (t0.c85)))), CASE ((t0.c85)AND(t0.c41))  WHEN t0.c85 COLLATE RTRIM THEN '0.08325197693885233' END HAVING ((v0.c0)IS NOT(t0.c85)) COLLATE BINARY; -- 1ms;
SELECT DISTINCT CUME_DIST() OVER () FROM v0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0, v0; -- 0ms;
SELECT DISTINCT t0.c41 FROM t0, v0 WHERE (NULLIF(DISTINCT x'b282', (- (0.7694554374333002)))); -- 0ms;
SELECT (((t0.c41)*(v0.c0)) IN (TRIM(DISTINCT v0.c0))), DENSE_RANK() OVER (), CASE '-656606861'  WHEN ((((((((t0.c85)AND(v0.c0)))OR(t0.c85)))AND(v0.c0)))AND(t0.c85)) THEN 0.2690950211443651 COLLATE RTRIM ELSE (+ (t0.c85)) END FROM v0, t0; -- 0ms;
SELECT DISTINCT (~ ((+ (t0.c85)))) FROM v0;SELECT ALL (- (t0.c85)) COLLATE NOCASE, (((t0.c85)) NOT BETWEEN ((CASE WHEN t0.c41 THEN v0.c0 ELSE t0.c41 END)) AND (((((t0.c85, v0.c0, v0.c0)) NOT BETWEEN ((t0.c41, t0.c85, 0.2783097518693842)) AND ((v0.c0, t0.c41, x'')))))), ((t0.c85) NOT BETWEEN ((((v0.c0)) BETWEEN ((t0.c85)) AND ((t0.c85)))) AND (highlight(x'', v0.c0, v0.c0, t0.c41))) FROM v0 WHERE (((('r#'))>(((((x'c1c9'))=(('283993076')))))));SELECT ALL NULLIF(((((((((v0.c0)OR(t0.c41)))OR(t0.c85)))AND(t0.c85)))OR(v0.c0)), t0.c85) FROM v0, t0 WHERE ((((CASE x''  WHEN x'' THEN 76304717 WHEN NULL THEN x'' WHEN x'491c' THEN NULL END))>=((NULLIF(DISTINCT NULL, x'9cba'))))) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((((((((t0.c41)AND(v0.c0)))OR(t0.c85)))AND(t0.c85)))OR(v0.c0))) AND ((((v0.c0)) BETWEEN (('2015943973')) AND ((t0.c85)))))  NULLS LAST; -- 0ms;
SELECT COUNT(*) OVER (), v0.c0, (((('ri,}')OR(t0.c85 COLLATE BINARY)))AND((((t0.c85, t0.c41, t0.c41))!=((t0.c41, t0.c41, t0.c85))))) FROM v0;SELECT ALL ((t0.c41) BETWEEN (t0.c41) AND (v0.c0)) COLLATE NOCASE FROM v0, t0; -- 0ms;
SELECT CASE ((v0.c0)!=(v0.c0))  WHEN (- (v0.c0)) THEN json_valid(t0.c41) WHEN ((((t0.c41)OR(NULL)))AND(t0.c85)) THEN ((t0.c41)<<(NULL)) WHEN CAST(t0.c41 AS BLOB) THEN CAST(t0.c85 AS BLOB) ELSE v0.c0 END FROM t0, v0; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE x'4e5476f5') OVER ( ORDER BY ((((v0.c0 COLLATE RTRIM)AND(((t0.c41)!=(v0.c0)))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))) ASC) FROM t0, v0; -- 0ms;
SELECT ALL (((((t0.c85)LIKE(t0.c41))))<=((((v0.c0)*(t0.c85))))) FROM v0 WHERE (CASE (+ (0.6549958027703294))  WHEN ((0.3586863427916237) NOT NULL) THEN ((1.744974166E9) ISNULL) ELSE CAST(NULL AS TEXT) END);SELECT DISTINCT ((((v0.c0)/(v0.c0)))/(CAST(v0.c0 AS NUMERIC))) FROM t0, v0; -- 0ms;
SELECT (((((((('I泙*u⌻S셪')OR(v0.c0)))AND(AVG(v0.c0))))AND(t0.c41 COLLATE BINARY)))AND(COUNT(*))) FROM t0 NATURAL JOIN v0 WHERE (CASE (((NULL))>((NULL)))  WHEN NULLIF(DISTINCT NULL, NULL) THEN ((((0xffffffff866c9db1)AND(x'')))OR('6U.W''*nR')) WHEN (('-1176372807') NOT BETWEEN ('') AND ('-835764911')) THEN ((x'') IS TRUE) WHEN ROUND(-1.26434966E8, x'') THEN ((0.23337462471459947) IS FALSE) END); -- 1ms;
SELECT DISTINCT ((((((((((((t0.c41 COLLATE RTRIM)OR(LIKELY(v0.c0))))OR((((t0.c85))==((''))))))OR((v0.c0 IN (v0.c0)))))OR((t0.c41 IN (v0.c0, v0.c0)))))OR((((t0.c85, t0.c41, v0.c0)) NOT BETWEEN ((t0.c41, '-1858379987', '')) AND ((t0.c85, t0.c41, v0.c0))))))OR(t0.c41)) FROM t0, v0; -- 0ms;
SELECT DISTINCT v0.c0, CASE WHEN TOTAL(2009536246) THEN CAST(t0.c41 AS BLOB) ELSE ((t0.c41)AND(v0.c0)) END, ((((LOWER(t0.c85))AND((((v0.c0))>((0.06556072457981876))))))AND((((t0.c41))<((t0.c41))))) FROM t0;SELECT DISTINCT COUNT(*) FROM t0; -- 0ms;
SELECT json_array_length(CASE WHEN t0.c41 THEN t0.c85 END) FROM v0 LEFT OUTER JOIN t0 ON CAST(t0.c41 COLLATE NOCASE AS REAL) WHERE (((((NULL) NOTNULL)) BETWEEN (UPPER(DISTINCT NULL)) AND (x'b2777cd5' COLLATE RTRIM))); -- 0ms;
SELECT ALL CASE (+ (v0.c0))  WHEN (v0.c0 IN (v0.c0)) THEN x'' END FROM v0 WHERE ((CASE '|,\'  WHEN -755095634 THEN 0.564745978567237 END IN ())) ORDER BY v0.c0; -- 0ms;
SELECT ALL ((MIN(t0.c85))OR(MAX(v0.c0, t0.c41))) FROM t0, v0 GROUP BY (((((t0.c41)) BETWEEN ((t0.c41)) AND ((NULL)))) BETWEEN (((v0.c0) NOT NULL)) AND (((t0.c41)>=(t0.c85)))) LIMIT 1591519477; -- 0ms;
SELECT ALL CAST(((((t0.c85)OR(t0.c41)))OR(0.9288405529519735)) AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT ((0.39992149219113826) BETWEEN (t0.c41) AND (((v0.c0)%(t0.c41)))) FROM t0 GROUP BY (('f' IN ()) IN (v0.c0, (((t0.c41)) NOT BETWEEN ((t0.c85)) AND ((v0.c0))))), (((((t0.c85, -1.67795792E8, t0.c41)) NOT BETWEEN ((v0.c0, t0.c41, t0.c85)) AND ((t0.c85, v0.c0, t0.c85)))) BETWEEN ((t0.c41 IN ())) AND (((((t0.c85)OR(t0.c41)))OR(v0.c0)))), ABS(DISTINCT ((v0.c0) BETWEEN ('EIIMJb') AND (v0.c0)));SELECT ALL TRIM((v0.c0 IN ())) FROM v0, t0 WHERE ((((375229822) IS FALSE) IN ())); -- 0ms;
SELECT ((t0.c41 COLLATE BINARY)<>(x'4d1c341b')) FROM v0, t0; -- 0ms;
SELECT ((((((((((t0.c41)AND(t0.c85)))OR(t0.c41)))AND(t0.c41)))OR(t0.c41)))|(MIN(v0.c0, t0.c85))) FROM v0 WHERE (((CAST(0.5502920972184924 AS NUMERIC))+(((0.35174789759154057) BETWEEN ('O,') AND (x'aff6')))));SELECT DISTINCT ((((-237356888)) BETWEEN ((0.3597396884011138)) AND ((t0.c41))) IN (((t0.c85)>>(v0.c0)))), TRIM(DISTINCT MAX(v0.c0)), ((((t0.c41 COLLATE BINARY)AND(((t0.c41) IS FALSE))))OR(NULL COLLATE NOCASE)) FROM t0;SELECT DISTINCT IFNULL(IFNULL(v0.c0, t0.c41), (((t0.c85, 'o拾', v0.c0)) NOT BETWEEN ((t0.c41, t0.c41, v0.c0)) AND ((t0.c85, t0.c41, v0.c0)))) FROM v0 WHERE (((((NULL) IS TRUE)) NOTNULL));SELECT DISTINCT GROUP_CONCAT((((v0.c0, t0.c41, t0.c85))=((t0.c41, -1858379987, v0.c0)))) FROM v0, t0 WHERE (((CASE WHEN 'I泙*u⌻S셪' THEN x'' ELSE NULL END)IS NOT(CAST(-1.86584575E9 AS INTEGER)))) LIMIT -559113177 OFFSET 1977737282; -- 0ms;
SELECT ALL COUNT(*) FROM t0, v0 LIMIT 901499201 OFFSET -1203853309; -- 0ms;
SELECT ALL COUNT(t0.c85) FROM t0, v0 WHERE (((((LTRIM(NULL))AND(0.5121055960112736 COLLATE RTRIM)))OR(CAST(0.36374782994826893 AS TEXT)))); -- 0ms;
SELECT DISTINCT ((((t0.c85) BETWEEN (v0.c0) AND (0.879811968273852))) NOT BETWEEN (((((t0.c41)OR(t0.c85)))OR(t0.c41))) AND (((v0.c0) BETWEEN (x'') AND (t0.c41)))) FROM v0;SELECT (((v0.c0)) NOT BETWEEN ((((v0.c0) NOT NULL))) AND ((MAX(t0.c41)))) FROM v0, t0 WHERE ((((('164531561')<('-1176372807')))OR(((((((((((((0.10958927686881514)AND(0.9033320581169034)))OR(NULL)))OR('-340688693')))OR('Ve')))AND(0.773166603978917)))OR('\|Ru*?'))))); -- 1ms;
SELECT load_extension(CAST(t0.c85 AS BLOB)) FROM v0 LIMIT -1006185415;SELECT DISTINCT CAST(CAST(v0.c0 AS BLOB) AS TEXT) FROM t0, v0 WHERE ((((UNLIKELY(NULL)))==(('FALSE' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c41)IS NOT(t0.c85)) THEN t0.c85 COLLATE RTRIM WHEN (~ (NULL)) THEN ABS(t0.c85) WHEN CAST('-1938463081' AS REAL) THEN CASE WHEN t0.c41 THEN t0.c41 END ELSE CAST(t0.c41 AS NUMERIC) END, ((((((((((t0.c85)>>(t0.c41)))AND((+ (t0.c85)))))OR(json_valid(t0.c41))))OR(((v0.c0) NOTNULL))))OR(((v0.c0)LIKE(t0.c85)))), (CAST(t0.c85 AS INTEGER) IN ()) FROM v0, t0 WHERE ((+ (CASE '251941421'  WHEN -1176372807 THEN 'f' ELSE -237356888 END))) ORDER BY CASE WHEN ((((((((((((t0.c85)OR(t0.c85)))OR(t0.c41)))AND(v0.c0)))AND(t0.c41)))AND(t0.c85)))OR(v0.c0)) THEN ((t0.c85) ISNULL) WHEN (('b') ISNULL) THEN CASE WHEN v0.c0 THEN t0.c41 END WHEN (0xffffffff9332a41e IN ()) THEN t0.c41 ELSE ((v0.c0) NOT BETWEEN (t0.c41) AND (v0.c0)) END ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN (((((t0.c85)) NOT BETWEEN ((v0.c0)) AND ((t0.c85))))) AND ((v0.c0)))  NULLS FIRST; -- 1ms;
SELECT ALL CASE WHEN ((t0.c85) ISNULL) THEN ((t0.c85) NOT BETWEEN (t0.c41) AND (t0.c85)) WHEN ((((((((((((v0.c0)OR(t0.c85)))AND(t0.c41)))OR(t0.c85)))OR(t0.c85)))AND(t0.c41)))OR(t0.c85)) THEN 0.7694554374333002 WHEN GROUP_CONCAT(t0.c41) THEN ((v0.c0) BETWEEN (v0.c0) AND ('-1459991171')) ELSE ((t0.c41) BETWEEN (v0.c0) AND (t0.c41)) END, QUOTE(((v0.c0)AND(t0.c41))), t0.c41 FROM t0, v0; -- 0ms;
SELECT ALL ((((NULL)AND(t0.c41))) NOTNULL) FROM t0, v0 WHERE ((((0X6f047eab IN ()))*(0.604832085557382))) ORDER BY (((t0.c85) NOTNULL) IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT (+ (x'')) FROM t0; -- 0ms;
SELECT DISTINCT CASE ((v0.c0) NOT NULL)  WHEN TOTAL(t0.c85) THEN t0.c85 WHEN ((v0.c0) IS TRUE) THEN '0.5598556543805882' WHEN ((v0.c0) NOT BETWEEN (t0.c85) AND (t0.c41)) THEN GROUP_CONCAT(v0.c0) END, NTILE(((((t0.c85) NOT BETWEEN (t0.c85) AND (t0.c85))) NOT BETWEEN ((NOT (t0.c41))) AND (LIKELIHOOD('u', 0.443781308824014)))) OVER (), t0.c85 FROM t0 NOT INDEXED;SELECT ALL (~ (load_extension(v0.c0, v0.c0))) FROM v0, t0; -- 0ms;
SELECT ALL ((x'') ISNULL) FROM v0, t0 WHERE (((('7⠅AsRc/h')) NOT BETWEEN ((((((((((NULL)AND(NULL)))OR('-1203853309')))AND(0Xffffffffe4d02d9a)))AND(-1549478478)))) AND ((('1423530968' IN ()))))); -- 0ms;
SELECT DISTINCT LAG(CAST(CAST(t0.c41 AS TEXT) AS REAL), CASE ((t0.c41) BETWEEN (t0.c41) AND (t0.c41))  WHEN ((t0.c41)<=(t0.c41)) THEN ((t0.c41) IS FALSE) END, TYPEOF(DISTINCT CASE v0.c0  WHEN t0.c85 THEN x'' ELSE v0.c0 END)) OVER () FROM v0, t0; -- 0ms;
SELECT DISTINCT '1616298141' FROM v0 WHERE (((((7.6304717E7) NOTNULL))IS NOT(x''))); -- 0ms;
SELECT ((((v0.c0) IS TRUE)) IS TRUE), (((+ (t0.c85)))OR((~ (t0.c41)))), (((((((((t0.c41 IN ()))AND(0.9462377803283267)))OR((- (v0.c0)))))AND((NOT (t0.c85)))))OR(MIN(v0.c0, v0.c0))) FROM t0, v0 WHERE (CASE CAST(-346761553 AS TEXT)  WHEN NULL THEN x'' END); -- 0ms;
SELECT DISTINCT ((t0.c41)|(v0.c0)) COLLATE NOCASE FROM t0 WHERE (((CAST(x'' AS NUMERIC))+((((('4Z')AND(x'')))AND('a>')))));SELECT DISTINCT AVG(CAST(NULL AS NUMERIC)), NULL, CASE WHEN (t0.c85 IN (t0.c85, t0.c41)) THEN ((((((((v0.c0)OR(t0.c85)))AND(t0.c41)))AND(v0.c0)))OR(t0.c85)) WHEN ((v0.c0)&(v0.c0)) THEN load_extension(v0.c0, t0.c41) WHEN (t0.c85 IN ()) THEN SQLITE_COMPILEOPTION_GET(t0.c41) END FROM v0 WHERE (CASE ((((x'')OR(NULL)))OR(NULL))  WHEN x'' COLLATE RTRIM THEN (- (NULL)) END);SELECT DISTINCT ROW_NUMBER() OVER () FROM v0; -- 0ms;
SELECT ALL ((((v0.c0) IS TRUE))||((((v0.c0, t0.c85, t0.c41)) NOT BETWEEN ((t0.c41, t0.c85, t0.c41)) AND ((t0.c41, t0.c85, t0.c41))))) FROM v0, t0 WHERE ('900690489' COLLATE BINARY); -- 0ms;
SELECT ALL (((- (v0.c0)))LIKE((- (0.6818847647339124)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT CASE CAST(t0.c41 AS REAL)  WHEN (t0.c41 IN ()) THEN NULL END FROM t0 WHERE (((NULL) NOT BETWEEN (0.1074788067934277) AND (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN t0.c41 THEN v0.c0 ELSE t0.c41 END) OVER () FROM v0, t0 WHERE ((((((('')OR(NULL)))AND(282956834)))<<(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT '' FROM v0, t0 WHERE (((('0.773166603978917' IN ()))==('-920792192' COLLATE BINARY))) LIMIT 848370129 OFFSET -1747180741; -- 0ms;
SELECT ALL t0.c41 COLLATE BINARY FROM t0 WHERE ((((x'')IS NOT(NULL)) IN ())) UNION SELECT ((((t0.c41)LIKE(t0.c85))) BETWEEN (((((t0.c41)OR(t0.c41)))AND(v0.c0))) AND ((~ (t0.c85)))) FROM t0, v0; -- 0ms;
SELECT DISTINCT t0.c41 FROM v0, t0; -- 0ms;
SELECT ((((t0.c41)AND(((t0.c85) NOT BETWEEN (t0.c85) AND (0x10ed63f4)))))AND((NOT (v0.c0)))) FROM v0, t0 WHERE (CASE ((0.5815337088434133)>(-3.46761553E8))  WHEN (-1754049671 IN ()) THEN (+ ('0.5815337088434133')) END); -- 0ms;
SELECT DISTINCT (((((t0.c41))!=((t0.c41))))IS((('R*QT')LIKE(t0.c85)))) FROM v0, t0 WHERE (((((NULL)AND((('-237356888') ISNULL))))AND(NULL))) LIMIT -1057893898 OFFSET 688328480; -- 0ms;
SELECT DISTINCT LEAD(v0.c0, ((((((v0.c0) NOT BETWEEN ('0') AND (v0.c0)))OR(((((((((t0.c41)OR(t0.c41)))OR(t0.c85)))OR(t0.c85)))AND(t0.c41)))))OR((NULL IN ()))), ((CASE WHEN v0.c0 THEN 0x67b0e6d7 END) NOT BETWEEN (((t0.c41)IS(v0.c0))) AND (CHAR(v0.c0)))) OVER (), ((((CAST(v0.c0 AS REAL))OR(((('-753675998'))>=((v0.c0))))))AND((((v0.c0))>((t0.c85))))), (((~ (v0.c0))) IS FALSE) FROM v0, t0 WHERE ((+ (('548349243' IN ())))) LIMIT -167795792; -- 0ms;
SELECT DISTINCT (((v0.c0)||(v0.c0)) IN (CAST(v0.c0 AS REAL))), x'', ((v0.c0 COLLATE BINARY)+(CAST(v0.c0 AS BLOB))) FROM t0;SELECT DISTINCT (((+ (t0.c41)))>>(COALESCE(DISTINCT v0.c0, t0.c41))), CASE WHEN ((v0.c0)>=(v0.c0)) THEN v0.c0 COLLATE BINARY ELSE ((t0.c85) BETWEEN (t0.c85) AND (t0.c41)) END, (+ ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c41))))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((x'e179')>(((t0.c41) BETWEEN (t0.c85) AND (x'')))) FROM v0, t0; -- 0ms;
SELECT DENSE_RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT UNLIKELY((((v0.c0))>=((v0.c0)))) FROM v0 WHERE (CASE CAST('琊	' AS TEXT)  WHEN (('1423530968')+(0.16769122916304757)) THEN (~ ('')) END) GROUP BY IFNULL(((v0.c0)==(v0.c0)), CAST(t0.c41 AS BLOB)), (((((t0.c41)) NOT BETWEEN ((1.862565547E9)) AND ((v0.c0))))>>(CAST(t0.c41 AS REAL))), t0.c41 HAVING CAST('X8Z%Q糋' AS NUMERIC);SELECT DISTINCT ((CAST(0x5c8fd166 AS TEXT)) NOTNULL), t0.c85 COLLATE BINARY, GROUP_CONCAT(t0.c85) FROM v0, t0; -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()), (((t0.c41)) BETWEEN ((t0.c41 COLLATE BINARY)) AND ((v0.c0))), DENSE_RANK() OVER () FROM v0;SELECT ALL CASE DATETIME(v0.c0, t0.c41, t0.c41)  WHEN ((t0.c41)%(t0.c85)) THEN t0.c41 COLLATE RTRIM END FROM t0, v0 GROUP BY LIKELY((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))); -- 0ms;
SELECT DISTINCT (+ (CAST(v0.c0 AS REAL))), DENSE_RANK() OVER ( ROWS IFNULL((t0.c41 IN ()), 0Xffffffff8d53f1cc) PRECEDING), (v0.c0 IN ()) FROM t0, v0 WHERE (CASE CASE '1423530968'  WHEN 1180728046 THEN '' WHEN NULL THEN NULL WHEN x'' THEN '' ELSE NULL END  WHEN (+ ('-1549478478')) THEN (((0.5650982261139113)) NOT BETWEEN (('')) AND ((x''))) END) ORDER BY UPPER(v0.c0) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT t0.c41, ((v0.c0) BETWEEN (((v0.c0)>('-316165656'))) AND ((+ (t0.c85)))), t0.c85 FROM t0, v0 LIMIT 1719738182 OFFSET -456118886; -- 0ms;
SELECT t0.c41 FROM v0, t0; -- 0ms;
SELECT ALL ((UPPER(t0.c85)) NOT BETWEEN (TOTAL(t0.c41)) AND (t0.c85 COLLATE BINARY)), (((CAST(v0.c0 AS BLOB)))=(((((v0.c0))<=((v0.c0)))))), ((CASE t0.c41  WHEN t0.c41 THEN v0.c0 END) NOT BETWEEN (v0.c0) AND ((t0.c41 IN (t0.c41, v0.c0)))) FROM v0, t0; -- 0ms;
SELECT ALL ((CAST(v0.c0 AS BLOB))OR(((t0.c85)>=(v0.c0)))) FROM v0, t0 LIMIT 13025002; -- 0ms;
SELECT DISTINCT (((((t0.c85) NOTNULL), t0.c85, NULL))<>((MAX(v0.c0), CASE WHEN t0.c85 THEN v0.c0 ELSE t0.c41 END, '1317983824' COLLATE NOCASE))), ((((MIN(t0.c41))OR(((t0.c41) NOT BETWEEN (v0.c0) AND (t0.c85)))))OR(t0.c85 COLLATE NOCASE)), 0.3348481830161104 FROM v0;SELECT DISTINCT LAG((((((v0.c0))=((v0.c0)))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (v0.c0)), ((CASE WHEN v0.c0 THEN '0.7694554374333002' ELSE v0.c0 END) NOT NULL), CAST(((v0.c0)LIKE(v0.c0)) AS TEXT)) OVER () FROM v0 WHERE (((x'aae1') IS TRUE) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (~ (t0.c85 COLLATE NOCASE)), FIRST_VALUE(CASE WHEN CAST(t0.c85 AS NUMERIC) THEN (((NULL)) NOT BETWEEN ((v0.c0)) AND ((t0.c85))) ELSE (NOT (t0.c85)) END) OVER (), ((((((t0.c41)LIKE(t0.c85)))OR(COUNT(t0.c41))))OR(((t0.c41) NOT NULL))) FROM v0, t0; -- 0ms;
SELECT LAST_VALUE(HEX(((((((((t0.c41)AND(t0.c85)))OR(t0.c41)))OR(v0.c0)))OR(t0.c85)))) OVER (), ((((t0.c41 COLLATE RTRIM)AND(((t0.c85) NOTNULL))))OR(((v0.c0) IS TRUE))), CUME_DIST() OVER () FROM t0, v0 WHERE ((((0.5121055960112736))=(((NOT (NULL)))))) ORDER BY (((((- (t0.c85)))OR(CASE 'Q⨓3RDT'  WHEN v0.c0 THEN t0.c85 END)))AND('' COLLATE NOCASE))  NULLS LAST LIMIT -686697728 OFFSET 1132863490; -- 0ms;
SELECT ALL TOTAL((v0.c0 IN ())) FROM v0, t0 WHERE ((((0X29f6e72)) BETWEEN ((CASE NULL  WHEN 0.6509145634659443 THEN NULL ELSE NULL END)) AND ((CASE WHEN x'' THEN x'' ELSE '-2109259915' END)))) GROUP BY (- (x'')), t0.c41, CAST(((((1180728046)OR(v0.c0)))OR(t0.c85)) AS NUMERIC) ORDER BY ((CAST(v0.c0 AS REAL))>=(((t0.c41) ISNULL))); -- 0ms;
SELECT 0.4950752476896302, x'19fa', (((v0.c0)AND(v0.c0)) IN ()) FROM v0; -- 0ms;
SELECT ALL CAST(x'' COLLATE NOCASE AS BLOB) FROM t0, v0; -- 0ms;
SELECT (+ (CASE WHEN t0.c41 THEN '7⠅AsRc/h' WHEN t0.c85 THEN t0.c41 WHEN v0.c0 THEN t0.c85 ELSE t0.c41 END)) FROM t0, v0; -- 0ms;
SELECT DISTINCT CAST(CASE t0.c41  WHEN t0.c85 THEN t0.c41 END AS REAL) FROM v0 WHERE (((x'' COLLATE NOCASE) BETWEEN (LIKELIHOOD(5.48349243E8, 0.761178913228749)) AND ('&%')));SELECT ALL CASE WHEN ((((((((NULL)AND(v0.c0)))OR(v0.c0)))OR(t0.c85)))AND(t0.c41)) THEN CASE t0.c41  WHEN t0.c41 THEN NULL ELSE t0.c41 END WHEN (- (t0.c41)) THEN ((t0.c85)<<(x'6590')) WHEN ((t0.c85)IS NOT(t0.c41)) THEN TRIM(v0.c0, t0.c41) END FROM v0 GROUP BY ((t0.c85)&(v0.c0 COLLATE NOCASE)), ((((((((((t0.c85) IS FALSE))AND(((t0.c41)>=(t0.c85)))))OR(((t0.c85) BETWEEN (t0.c85) AND ('홐uA''n')))))OR(CASE t0.c85  WHEN t0.c85 THEN v0.c0 END)))OR(((NULL) NOT BETWEEN (v0.c0) AND (t0.c41)))), ((((((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c85)))OR(CASE v0.c0  WHEN v0.c0 THEN t0.c41 ELSE t0.c41 END)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c85)))))OR(((('-665070365')) BETWEEN ((t0.c85)) AND ((t0.c41))))))AND('U.8d')))OR(CASE v0.c0  WHEN 0.7082803490483691 THEN v0.c0 WHEN t0.c85 THEN 'UꝈ}*]tAJ' WHEN t0.c41 THEN t0.c85 WHEN v0.c0 THEN 1765165580 WHEN v0.c0 THEN t0.c41 ELSE t0.c85 END)))OR((((v0.c0, v0.c0, t0.c85))<=((t0.c41, t0.c85, t0.c41))))), (NOT (((t0.c41)LIKE(t0.c85)))), ((t0.c85)<<(v0.c0)) COLLATE RTRIM HAVING CASE WHEN v0.c0 THEN ((t0.c85) BETWEEN (t0.c85) AND (NULL)) ELSE (~ (v0.c0)) END;SELECT (((+ (NULL))) NOT BETWEEN ((v0.c0 IN ())) AND (CASE WHEN t0.c41 THEN v0.c0 ELSE v0.c0 END)) FROM t0 WHERE ((CASE WHEN '{BD\n⏅躦Vh' THEN '-801658610' END IN ()));SELECT ((0x3a787eb) BETWEEN ((t0.c41 IN ())) AND (((t0.c85) IS FALSE))) FROM t0, v0 WHERE ((NOT ((('-713253874')<<(0.4015938995907523))))); -- 0ms;
SELECT ((((t0.c41) NOT BETWEEN (-1049709573) AND (v0.c0))) ISNULL) FROM t0;SELECT DISTINCT MAX(CAST('-753675998' AS BLOB)) FROM t0 WHERE (ABS(DISTINCT (('0.5121055960112736') ISNULL))) LIMIT 1055913175; -- 0ms;
SELECT DISTINCT t0.c41, (((CAST(0.10207427727055252 AS INTEGER), GROUP_CONCAT('2113424104'), ((t0.c85)<>(t0.c41))))>=((((v0.c0)|(v0.c0)), (+ (t0.c41)), ((((((((t0.c41)AND(t0.c85)))OR(t0.c85)))OR(v0.c0)))OR(v0.c0))))), (((t0.c85))>((t0.c85))) COLLATE RTRIM FROM t0, v0 WHERE ((((-9.28084314E8 IN ()))|(CASE 1803490527  WHEN '' THEN 0.15141504884431234 WHEN 0.40535033172761004 THEN 0.15141504884431234 WHEN -1724181800 THEN '76304717' ELSE '^q᧑I' END))); -- 0ms;
SELECT ALL 'Q97' FROM t0; -- 0ms;
SELECT GROUP_CONCAT((t0.c85 IN ())) OVER () FROM t0, v0 WHERE (CASE WHEN NULL COLLATE BINARY THEN '1765165580' END); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c41 COLLATE BINARY THEN TOTAL('-920792192') END, RANK() OVER (), (((((0.42041169755094476, v0.c0, t0.c85)) NOT BETWEEN ((t0.c85, v0.c0, './')) AND ((t0.c85, v0.c0, v0.c0)))) NOT NULL), (((((v0.c0, 0.6092195204888009, 1977737282))<((v0.c0, v0.c0, v0.c0))))<((((v0.c0, v0.c0, t0.c85))<>((t0.c41, 0.11117421570873276, NULL))))), ((((t0.c41)>(v0.c0))) IS TRUE) FROM t0 WHERE (0.8605204903401459);SELECT DISTINCT (((((((('')OR(((t0.c41)IS(t0.c41)))))OR((((v0.c0, t0.c41, v0.c0)) NOT BETWEEN ((t0.c85, '-237356888', t0.c85)) AND ((-721157872, t0.c41, 0x4362f12e))))))AND(v0.c0)))OR(CASE WHEN t0.c41 THEN t0.c85 ELSE t0.c85 END)) FROM v0;SELECT DISTINCT (((v0.c0, v0.c0, t0.c85)) BETWEEN ((0.24337355509019154, CASE t0.c41  WHEN v0.c0 THEN 0xffffffffd1ad217e END, x'278b')) AND ((((((((((t0.c85)AND(t0.c85)))OR(t0.c85)))AND(t0.c85)))OR(t0.c85)), (((t0.c85, t0.c41, t0.c41))<((t0.c41, t0.c85, v0.c0))), ((t0.c85) BETWEEN (t0.c85) AND (t0.c85))))) FROM t0 ORDER BY CAST(CAST(t0.c85 AS INTEGER) AS REAL) DESC;SELECT DISTINCT SUM(((t0.c85) IS TRUE)) OVER () FROM v0 WHERE (CASE WHEN 0X7c0da5fd COLLATE BINARY THEN (('')=(x'')) END) LIMIT 1763107487 OFFSET 164531561;SELECT DISTINCT v0.c0 COLLATE RTRIM FROM t0, v0 WHERE ((((890000906)) NOT BETWEEN ((NULL COLLATE NOCASE)) AND (('-328982549')))); -- 0ms;
SELECT ALL v0.c0 COLLATE NOCASE FROM t0, v0 WHERE (LIKELIHOOD(STRFTIME('', '', '4m'), 0.942566489616031)); -- 0ms;
SELECT TRIM(((((((((((((t0.c41)OR(t0.c85)))AND(v0.c0)))AND('Y惍')))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), (((v0.c0)) BETWEEN ((0.5298783103289322)) AND ((t0.c41)))), ((((v0.c0)OR(t0.c41)))OR(459743324)) COLLATE NOCASE, (((((((((((((~ (t0.c85)))OR(((t0.c41) IS TRUE))))AND(((t0.c41) IS FALSE))))OR(0.058456687934029916)))OR(t0.c41)))AND(v0.c0 COLLATE BINARY)))AND(((t0.c41) IS FALSE))) FROM t0, v0 ORDER BY t0.c41  NULLS FIRST; -- 0ms;
SELECT ((UNLIKELY(DISTINCT t0.c85))+(CAST(t0.c41 AS BLOB))) FROM t0 WHERE (CASE WHEN (('Y惍')<=('ME')) THEN ((-340688693) BETWEEN (NULL) AND (0Xffffffffa9b91389)) WHEN ((NULL) ISNULL) THEN '-721157872' WHEN ((-2.109259915E9)<=(x'81d2')) THEN ('Q97' IN ()) END); -- 0ms;
SELECT CASE (((t0.c41, v0.c0, t0.c85, t0.c41, t0.c41))>=((v0.c0, t0.c41, v0.c0, t0.c41, t0.c41)))  WHEN ((v0.c0) NOTNULL) THEN t0.c41 WHEN ((((((((t0.c85)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN load_extension(t0.c41, x'425d') WHEN CAST(v0.c0 AS BLOB) THEN CASE -1865845750  WHEN t0.c41 THEN '-1713621373' END WHEN ((('-665070365')) NOT BETWEEN ((t0.c41)) AND ((t0.c41))) THEN t0.c85 WHEN ((((t0.c41)AND(t0.c41)))OR(v0.c0)) THEN t0.c41 COLLATE NOCASE ELSE (((v0.c0, t0.c85, t0.c85))>=((t0.c41, t0.c85, v0.c0))) END FROM v0, t0; -- 1ms;
SELECT (COUNT(*) IN ()) FROM v0, t0 WHERE (CASE WHEN (((0xfffffffff5ffa3b0))>((0.9222436851462965))) THEN '' ELSE LTRIM(0.8872914719169197) END); -- 0ms;
SELECT DISTINCT COUNT(((v0.c0)%(t0.c85))) FILTER(WHERE CAST(((((v0.c0)AND(t0.c85)))OR(t0.c41)) AS REAL)) OVER (), ((CASE WHEN v0.c0 THEN t0.c41 ELSE t0.c85 END)LIKE(((v0.c0) BETWEEN (v0.c0) AND (t0.c85)))), ((t0.c85)LIKE(((((x'')OR(t0.c41)))OR(x'')))) FROM v0 WHERE ((((('792304400')/('1317983824')))>=(((x'') IS FALSE)))) LIMIT -1754049671 OFFSET -443524095;SELECT ALL CASE ((t0.c41)%(v0.c0))  WHEN ((t0.c41) ISNULL) THEN v0.c0 END, ((t0.c41)IS NOT(t0.c85)) COLLATE BINARY, CUME_DIST() OVER () FROM v0 WHERE ((('g1') ISNULL));SELECT ALL CASE WHEN x'' THEN COUNT(*) END, ((((NOT (x'b57c'))))>=((((t0.c41)<(t0.c41))))), MIN(CAST(0X3eeff4d7 AS TEXT)) FROM v0, t0 WHERE ((((('eCKlP/') NOT NULL)) NOT BETWEEN (CAST(x'' AS TEXT)) AND (((((((((0.528052099273599)OR('1541683211')))AND(NULL)))AND(x'1f6c5b7a')))AND(x''))))) GROUP BY ((((t0.c41) IS FALSE)) NOT BETWEEN (x'' COLLATE BINARY) AND (CASE t0.c85  WHEN t0.c85 THEN t0.c85 END)) HAVING ((v0.c0) NOT NULL); -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE WHEN v0.c0 THEN v0.c0 ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) OVER () FROM v0 WHERE (((0.9214447480877302)OR((x'' IN ())))); -- 1ms;
SELECT ALL ((((v0.c0)<<(v0.c0)))==(NULL)), ((((v0.c0) IS FALSE))*((- (t0.c85)))), GROUP_CONCAT((v0.c0 IN (t0.c85))) OVER () FROM t0 LIMIT 805359962 OFFSET 901499201;SELECT (t0.c41 IN (((v0.c0)>=(v0.c0)))) FROM v0, t0 WHERE (((CAST(1.616298141E9 AS NUMERIC))>=((0.7054089770660683 IN ())))) LIMIT -1977351169 OFFSET 1966666610; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT BETWEEN (t0.c41) AND (t0.c41)))IS(MAX(v0.c0))) FROM v0;SELECT COUNT(v0.c0) OVER () FROM t0, v0 WHERE (((((x'') BETWEEN (NULL) AND (x''))) BETWEEN (((NULL) NOT BETWEEN (0.040376229026709454) AND (NULL))) AND (x'' COLLATE NOCASE))) LIMIT 688370576; -- 0ms;
SELECT ALL ((TRIM(t0.c85))&(t0.c41 COLLATE NOCASE)) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((v0.c0)+(v0.c0))) NOTNULL), '503700664', x'6bd3' FROM t0 GROUP BY (+ ((((v0.c0))<((t0.c41)))));SELECT DISTINCT NULL FROM v0; -- 1ms;
SELECT DISTINCT CASE t0.c85 COLLATE NOCASE  WHEN CASE v0.c0  WHEN v0.c0 THEN t0.c41 WHEN t0.c41 THEN 1.76516558E9 WHEN t0.c41 THEN t0.c85 END THEN ((((t0.c41)OR(t0.c41)))AND(t0.c85)) WHEN ((t0.c41) BETWEEN (v0.c0) AND (t0.c41)) THEN t0.c41 COLLATE RTRIM WHEN (v0.c0 IN ()) THEN (~ ('')) WHEN AVG(t0.c85) THEN 0.5502920972184924 WHEN ((t0.c85) IS TRUE) THEN x'a1d6' END FROM v0 LIMIT -938727412;SELECT ALL ((t0.c41 COLLATE NOCASE)>=(v0.c0 COLLATE RTRIM)) FROM t0, v0; -- 0ms;
SELECT DISTINCT (((((((((t0.c41 IN (t0.c85)))AND(((((v0.c0)AND(t0.c85)))AND(t0.c85)))))AND(GROUP_CONCAT(t0.c41))))OR(((v0.c0) NOT NULL))))OR((v0.c0 IN ()))) FROM t0, v0 INDEXED BY i20 ORDER BY (((~ (t0.c85))) ISNULL) DESC;SELECT ALL (((t0.c85)) NOT BETWEEN ((t0.c41)) AND ((v0.c0))) COLLATE NOCASE FROM v0;SELECT ((LIKELIHOOD(t0.c41, 0.018321059267193185)) ISNULL) FROM v0, t0; -- 0ms;
SELECT DISTINCT (((t0.c41)) BETWEEN ((CASE WHEN t0.c41 THEN v0.c0 ELSE v0.c0 END)) AND (((t0.c85 IN ())))), ((LIKELY(t0.c85))<=((+ (t0.c41)))), COUNT(*) FROM t0 WHERE ((NOT ((((NULL))>=(('0.2783097518693842'))))));SELECT ((((((((t0.c41)AND(v0.c0)))OR(v0.c0)))OR(CAST(x'' AS INTEGER))))AND(((((t0.c41)AND(t0.c41)))AND(t0.c85)))) FROM v0;SELECT (((((t0.c85)AND(t0.c85)))OR(t0.c41)) IN ()), RANK() OVER (), CASE WHEN CAST(t0.c85 AS TEXT) THEN ((t0.c41) NOT NULL) ELSE CAST(v0.c0 AS TEXT) END, ((t0.c41) NOT BETWEEN ((~ (t0.c41))) AND (t0.c85)), CASE (((v0.c0, v0.c0, t0.c85, v0.c0, t0.c41)) BETWEEN ((v0.c0, t0.c85, v0.c0, t0.c41, t0.c85)) AND ((v0.c0, v0.c0, t0.c41, t0.c41, t0.c41)))  WHEN v0.c0 COLLATE RTRIM THEN ((t0.c41) NOTNULL) END FROM t0;SELECT ALL (- ((- (t0.c41)))) FROM v0 WHERE (CAST(TRIM(DISTINCT x'') AS NUMERIC));SELECT DISTINCT (~ ((t0.c41 IN ()))), t0.c85, (((NOT (t0.c85)))/(v0.c0 COLLATE NOCASE)), (- (t0.c41 COLLATE RTRIM)), ((((v0.c0) NOT BETWEEN (t0.c41) AND (v0.c0))) BETWEEN (((t0.c85)-(t0.c85))) AND (((v0.c0) BETWEEN (t0.c85) AND (v0.c0)))) FROM t0 WHERE ((((((~ (x'799d')))AND(((((x'')AND(x'')))OR(0.9142757455621753)))))OR(((('0.24337355509019154')) BETWEEN ((0.8872914719169197)) AND ((x'bb43'))))));SELECT ALL ((t0.c41)IS NOT(t0.c41)) COLLATE BINARY, CASE WHEN t0.c85 THEN t0.c85 ELSE t0.c85 END COLLATE NOCASE, v0.c0 FROM v0 WHERE ((((((((((0.7784483827684826 IN ()))AND(((((NULL)OR(0.15838264793401835)))OR('-1747180741')))))OR(CASE -2113267654  WHEN x'c81ea71d3cb4bf02' THEN NULL WHEN NULL THEN -1.26434966E8 WHEN NULL THEN x'' ELSE -1549478478 END)))AND('1726471119')))OR(((x'') BETWEEN (NULL) AND (NULL)))));SELECT DISTINCT CASE ((t0.c41)<=(v0.c0))  WHEN MIN('-705150467') THEN ((0.5845674980257964)||(t0.c41)) WHEN t0.c41 COLLATE NOCASE THEN CAST(v0.c0 AS TEXT) WHEN v0.c0 COLLATE BINARY THEN ((t0.c85)>(t0.c41)) END FROM v0;SELECT ALL LAST_VALUE(((v0.c0 COLLATE RTRIM)<<(v0.c0 COLLATE NOCASE))) OVER (), ((('1763107487' IN ())) ISNULL), ((((((((((((((v0.c0)&(v0.c0)))AND(((((((((v0.c0)AND(v0.c0)))OR(t0.c41)))AND(t0.c85)))AND(v0.c0)))))OR(((t0.c85)&(t0.c41)))))OR((t0.c41 IN ('-1696193778', t0.c85)))))AND(CASE t0.c85  WHEN t0.c85 THEN t0.c41 WHEN t0.c85 THEN t0.c85 WHEN t0.c41 THEN v0.c0 ELSE v0.c0 END)))AND((t0.c85 IN (t0.c41)))))OR(((v0.c0)+(0.30704542354903763)))) FROM v0 UNION ALL SELECT DISTINCT MIN(CASE WHEN t0.c85 THEN t0.c41 END), PERCENT_RANK() OVER (), ((v0.c0 COLLATE RTRIM) IS TRUE) FROM v0 NOT INDEXED, t0 WHERE (0.0035721889762214687);SELECT DISTINCT (((((t0.c85)) BETWEEN ((t0.c85)) AND ((t0.c41))))!=(x'')) FROM t0 WHERE ((((((((548349243))!=((x''))))AND(NULL)))OR((('683837954') IS TRUE)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) COLLATE BINARY, x'', '&%' FROM v0, t0 WHERE (((0Xffffffff87a29501 COLLATE NOCASE)LIKE(ABS(DISTINCT -1960050246)))); -- 0ms;
SELECT DISTINCT TOTAL(((0.020212393392053718)IS NOT(t0.c85))) OVER ( PARTITION BY LOWER(DISTINCT LIKELY(v0.c0)), (LOWER(v0.c0) IN ())) FROM v0, t0 WHERE ((~ (UPPER('a>')))) ORDER BY CASE WHEN (((t0.c41)) NOT BETWEEN ((t0.c85)) AND ((t0.c85))) THEN ((t0.c85) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN SQLITE_COMPILEOPTION_GET(v0.c0) THEN CASE WHEN 0.32535826635765064 THEN t0.c41 WHEN t0.c85 THEN v0.c0 WHEN v0.c0 THEN t0.c41 ELSE v0.c0 END WHEN t0.c41 COLLATE RTRIM THEN LTRIM(v0.c0, t0.c85) END ASC  NULLS FIRST; -- 0ms;
SELECT v0.c0, CAST((((0.3302725393623319)) BETWEEN ((v0.c0)) AND ((t0.c41))) AS BLOB), ((((t0.c41)<<(t0.c41))) ISNULL) FROM t0, v0 WHERE ((- ((+ (x''))))) ORDER BY t0.c85 ASC, 0.9715336076549033  NULLS LAST; -- 0ms;
SELECT ALL AVG(json_remove(t0.c41, v0.c0, v0.c0, t0.c85)) FROM v0, t0 WHERE (((((NULL)>=('')))==(((NULL) NOTNULL)))); -- 0ms;
SELECT ALL SUM((t0.c41 IN (0Xffffffff91a9d4c1))) FROM t0, v0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (-1e500) AND ('hOJ?iJOg')) THEN NULL COLLATE BINARY WHEN ((((x'')OR(x'1e4d0677')))AND('+o5Q')) THEN NULL COLLATE BINARY WHEN ((x'') BETWEEN (NULL) AND (NULL)) THEN CAST('ic' AS BLOB) ELSE ((x'')IS NOT(0.9141390120824219)) END) GROUP BY ((((v0.c0) IS TRUE)) NOTNULL); -- 0ms;
SELECT ALL NULL FROM v0, t0 WHERE (MAX(((((NULL)OR(0.30397052183091167)))AND(557758425)), 'W㲹}mb' COLLATE RTRIM)); -- 1ms;
SELECT ALL ((((((((((((t0.c85 COLLATE NOCASE)AND(((t0.c41) IS TRUE))))OR('1047038542')))OR(CAST(t0.c85 AS INTEGER))))OR((+ (t0.c85)))))AND(MAX(t0.c41))))AND(SUM('-1618997820'))), (((t0.c41)) BETWEEN (((t0.c41 IN (t0.c85)))) AND (((- (t0.c85))))), (((v0.c0) NOT NULL) IN ()), '1527639997', 0.604832085557382 FROM v0, t0; -- 0ms;
SELECT ALL '-2093322934' FROM t0 GROUP BY (((('-209901037')AND(t0.c41)))!=((((-3.40688693E8, t0.c41, t0.c85, t0.c85, v0.c0))>=((t0.c85, t0.c85, v0.c0, t0.c41, x''))))), v0.c0, CAST(t0.c85 COLLATE BINARY AS TEXT) HAVING (((+ (t0.c41)))LIKE(((0Xffffffffa99c97ea)|(t0.c85))));SELECT ((((((((((t0.c85) NOT NULL))OR(t0.c41 COLLATE BINARY)))AND(TOTAL(v0.c0))))OR((~ (v0.c0)))))AND((t0.c41 IN ()))) FROM v0, t0 WHERE (((x'') BETWEEN (NULL) AND (x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ROWS  CURRENT ROW) FROM v0, t0 WHERE ((CASE '1038606237'  WHEN -4.77404979E8 THEN 0.2371025506053308 ELSE 0.6867515791971189 END IN ())) ORDER BY '-718546326'; -- 0ms;
SELECT DISTINCT ((CASE WHEN v0.c0 THEN t0.c41 WHEN t0.c85 THEN v0.c0 WHEN t0.c41 THEN t0.c85 END) IS FALSE) FROM t0 WHERE ((((0.7630438528058322 IN ())) ISNULL)) GROUP BY json_array_length(t0.c85, t0.c41), ((((NOT (t0.c85))))>((((t0.c41)OR(t0.c41))))), (((+ (t0.c85))) NOT BETWEEN (CASE t0.c85  WHEN t0.c85 THEN t0.c85 END) AND (((t0.c41) BETWEEN (t0.c41) AND (t0.c41)))), CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS BLOB), ((((((((t0.c41)AND(t0.c41)))OR(t0.c41)))AND(t0.c41)))AND(t0.c41)) COLLATE BINARY;SELECT DISTINCT CAST(CAST(t0.c41 AS TEXT) AS TEXT), SUM(((NULL) ISNULL)), SUM((v0.c0 IN ())) FROM v0, t0 WHERE ((((LIKELIHOOD(DISTINCT NULL, 0.7961417307385626)))<((((('-1030223947'))<((x''))))))); -- 0ms;
SELECT ALL '570509538' FROM v0, t0; -- 0ms;
SELECT DISTINCT ('' IN ()) FROM v0, t0 WHERE (((('')) BETWEEN ((((('f[za0z')) NOT BETWEEN ((NULL)) AND ((x'd753'))))) AND ((CAST('-198517470' AS NUMERIC))))); -- 0ms;
SELECT ALL ((t0.c85 COLLATE NOCASE)&(((v0.c0)-(t0.c85)))) FROM t0 WHERE (((((((((CAST('0.7694554374333002' AS NUMERIC))AND(1.763107487E9)))OR(((NULL) NOTNULL))))OR(CAST(0X656a049d AS TEXT))))AND((+ ('竮^>R')))));SELECT DISTINCT -1.858379987E9 FROM v0 WHERE (LIKE(((0.7127445117930988)<(x'')), (~ (0.404467237581144)))); -- 0ms;
SELECT ALL -481688101, 0.13409132405692004, (((((((t0.c85, v0.c0, 'A_*?VP', t0.c41, v0.c0)) NOT BETWEEN ((t0.c41, v0.c0, t0.c85, t0.c85, t0.c41)) AND ((v0.c0, v0.c0, t0.c85, v0.c0, t0.c41))))AND(CAST(v0.c0 AS REAL))))OR(LIKELY(v0.c0))) FROM t0, v0 WHERE (((((0.10983561561699029) IS TRUE))IS NOT(((0.824237196868831) NOT BETWEEN ('') AND (x''))))); -- 0ms;
SELECT DISTINCT ((((t0.c85)OR(((v0.c0)LIKE(v0.c0)))))AND(CAST(t0.c85 AS INTEGER))) FROM t0 GROUP BY v0.c0 HAVING ((((- (v0.c0))))<((CASE t0.c41  WHEN v0.c0 THEN t0.c41 ELSE v0.c0 END)));SELECT DISTINCT (~ (t0.c85)) FROM t0, v0 WHERE ((((('ri,}')*(0.03214923818412774)))+(((((((((x'')AND(0.8647776374296852)))AND(0.9222436851462965)))OR(NULL)))OR(0.9462377803283267))))); -- 0ms;
SELECT ((((t0.c41) NOTNULL))>=(IFNULL(v0.c0, t0.c85))) FROM v0 WHERE (CAST(((0xffffffff91d8b253) NOT BETWEEN (0.4782236165529514) AND ('1012322830')) AS BLOB));SELECT ALL x'd3b2' FROM v0 ORDER BY (((t0.c85, t0.c85, t0.c85)) NOT BETWEEN ((t0.c85, v0.c0 COLLATE BINARY, ((t0.c85)LIKE(v0.c0)))) AND ((((((v0.c0)AND(t0.c85)))OR(t0.c85)), ((v0.c0) NOTNULL), (+ (v0.c0)))));SELECT ALL NULLIF(DISTINCT t0.c41, CAST(t0.c85 AS NUMERIC)) FROM t0 INDEXED BY i20 WHERE ((((NOT (NULL))) IS FALSE));SELECT ALL ((((t0.c85) BETWEEN (NULL) AND (t0.c41))) BETWEEN (GROUP_CONCAT(t0.c41)) AND (MAX(t0.c41))), ROW_NUMBER() OVER (), CAST(((v0.c0) BETWEEN (t0.c85) AND (t0.c85)) AS INTEGER) FROM t0;SELECT ((((v0.c0)<<(v0.c0)))%((t0.c85 IN ('')))) FROM v0, t0 WHERE ((((0.6004877407850593)) BETWEEN (((+ (NULL)))) AND (((- (1452819033)))))); -- 0ms;
SELECT DISTINCT QUOTE(((t0.c85)==(t0.c41))) FROM t0 ORDER BY (((((t0.c41) BETWEEN (v0.c0) AND (t0.c85)), ((NULL) IS TRUE), CASE t0.c85  WHEN v0.c0 THEN t0.c41 WHEN t0.c41 THEN t0.c41 WHEN 'X8Z%Q糋' THEN t0.c41 WHEN t0.c41 THEN v0.c0 WHEN t0.c41 THEN v0.c0 END, NULL, ((v0.c0)OR(v0.c0))))>((1.76516558E9, ((t0.c85) NOT BETWEEN ('b') AND (t0.c41)), ((-1.822474124E9)>(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (t0.c85)), t0.c85 COLLATE NOCASE))) DESC  NULLS FIRST, CASE WHEN (t0.c85 IN ()) THEN t0.c85 COLLATE BINARY ELSE (NOT (v0.c0)) END ASC LIMIT -1865845750 OFFSET 608301936;SELECT (((((t0.c85) NOT BETWEEN (t0.c85) AND (t0.c85))))==((((t0.c41)>>(v0.c0))))) FROM v0 WHERE (CAST(((NULL)&(0.9881393503765051)) AS TEXT));SELECT DISTINCT '1265601967' FROM t0, v0 WHERE ((((((0.2768862767352027)) NOT BETWEEN ((0.14784357150867433)) AND (('-797261510')))) NOT NULL)); -- 0ms;
SELECT DISTINCT AVG((NOT (t0.c41))) OVER (), DENSE_RANK() OVER (), (((v0.c0)) BETWEEN ((((x'')IS(t0.c41)))) AND ((((((v0.c0)AND(t0.c41)))AND(t0.c85))))) FROM t0, v0; -- 0ms;
SELECT ALL ((v0.c0)+(t0.c85)) COLLATE RTRIM, t0.c41, CASE (v0.c0 IN (t0.c85, t0.c85))  WHEN ((t0.c85) IS TRUE) THEN ((t0.c41)IS(t0.c85)) END FROM v0;SELECT ALL (((t0.c41, ABS(t0.c85), (('-1238692368') NOTNULL), v0.c0 COLLATE BINARY, (((t0.c41))>(('')))))<=((((v0.c0)IS(t0.c41)), v0.c0 COLLATE RTRIM, ((NULL) NOT BETWEEN (0.730847597020607) AND (v0.c0)), ((0.21495415257309924)<<(v0.c0)), (((t0.c85)) NOT BETWEEN ((t0.c41)) AND ((v0.c0)))))), ((((CASE WHEN v0.c0 THEN t0.c85 WHEN t0.c85 THEN t0.c41 WHEN t0.c85 THEN t0.c85 WHEN v0.c0 THEN t0.c85 WHEN t0.c85 THEN v0.c0 ELSE t0.c41 END)AND(v0.c0 COLLATE RTRIM)))AND(((v0.c0)GLOB(t0.c85)))), ((t0.c41) IS FALSE) COLLATE NOCASE FROM t0, v0 WHERE ((NOT (json(NULL)))); -- 0ms;
SELECT ((INSTR(t0.c41, t0.c85))IS NOT((('548349243') BETWEEN (NULL) AND (t0.c85)))), CASE WHEN json(v0.c0) THEN 'Is' ELSE ((t0.c85)<<(v0.c0)) END, (((+ (t0.c41))) IS FALSE) FROM v0, t0 WHERE (CASE ((NULL) NOT NULL)  WHEN (((('-1385168721')OR(0.6004877407850593)))AND('hF]clBd')) THEN (((NULL, 'cTEH蔑MY[\r', 0.4764338892190101))<=((0.6287896025106248, 2113424104, NULL))) ELSE ((((x'')OR(0.8650292705082615)))AND(-1.447488631E9)) END); -- 0ms;
SELECT DISTINCT HEX(COUNT(t0.c41)) FROM t0, v0; -- 0ms;
SELECT (((v0.c0 IN (t0.c85)))IS NOT(((t0.c85) NOTNULL))) FROM v0 WHERE (((((x'') ISNULL))|(CAST(0.4213136698641178 AS INTEGER))));SELECT DISTINCT (((((t0.c41)OR(t0.c41)))AND(t0.c41)) IN ((~ (v0.c0)))) FROM t0, v0; -- 0ms;
SELECT ALL ((v0.c0)GLOB(t0.c41)) COLLATE BINARY, (- ((NOT (v0.c0)))), JULIANDAY(CASE WHEN t0.c41 THEN t0.c85 END, (~ (t0.c85)), CAST(t0.c41 AS BLOB)) FROM v0 NOT INDEXED, t0 WHERE (((('cTEH蔑MY[\r' IN ())) NOTNULL)) GROUP BY (((v0.c0 IN (t0.c85)))<(CAST(t0.c85 AS NUMERIC))) HAVING LIKELIHOOD((((t0.c41)) BETWEEN ((t0.c41)) AND ((t0.c41))), 0.298412007134805); -- 0ms;
SELECT DISTINCT ((((((((((((((v0.c0)OR('TRUE')))OR(t0.c85)))OR(t0.c85)))OR(t0.c85)))AND(0xffffffffa1fa73b9)))OR(t0.c41))) NOT NULL) FROM v0 ORDER BY ((((((((((t0.c85)OR(t0.c85)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))<=(((v0.c0)>(t0.c41)))) DESC  NULLS FIRST;SELECT DISTINCT (((t0.c85)) BETWEEN ((v0.c0)) AND ((t0.c41))) COLLATE NOCASE, TYPEOF(MIN(v0.c0)), ((((((v0.c0) NOT BETWEEN (t0.c41) AND (v0.c0)))OR(CASE WHEN v0.c0 THEN 0.33218963586661443 WHEN v0.c0 THEN t0.c41 WHEN v0.c0 THEN t0.c41 ELSE t0.c85 END)))OR(((x'eca0') NOT BETWEEN (t0.c41) AND (t0.c85)))) FROM t0;SELECT CASE TYPEOF(t0.c85)  WHEN ((v0.c0) NOTNULL) THEN ((t0.c85) NOT BETWEEN (t0.c41) AND (t0.c41)) END, COALESCE(v0.c0, t0.c41) COLLATE BINARY, MAX(COUNT(t0.c85) COLLATE BINARY) FROM t0, v0 WHERE (CASE 0X68023156  WHEN NULL THEN NULL ELSE NULL END COLLATE NOCASE) GROUP BY (((((947219463))<=((t0.c41))))|(('⨓\rm9' IN (t0.c41))));SELECT DISTINCT CASE TOTAL(t0.c85)  WHEN CASE 0xffffffffe9d9d204  WHEN t0.c41 THEN t0.c41 ELSE t0.c41 END THEN ((v0.c0) NOTNULL) END, CAST(((t0.c85)<>(v0.c0)) AS TEXT), ((MAX(t0.c85)) ISNULL), (((t0.c85, v0.c0, t0.c41))<=((t0.c41, t0.c85, t0.c41))) COLLATE NOCASE, ((t0.c85)<(((v0.c0)<>(t0.c85)))) FROM t0, v0 LIMIT 1423530968; -- 0ms;
SELECT ALL (((- (t0.c85)))!=(CAST(0xffffffffabf5b046 AS BLOB))) FROM t0 WHERE ((((((0Xffffffff98157c41))>((0.23684600341838613)))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((((t0.c85)OR(t0.c85)))AND(v0.c0)))OR(ABS(t0.c85))))OR((((v0.c0, t0.c41, v0.c0))>((t0.c41, t0.c85, t0.c85))))) FROM v0, t0 GROUP BY -237356888, CASE (((v0.c0)) NOT BETWEEN ((t0.c41)) AND ((v0.c0)))  WHEN ((t0.c85)<<(t0.c41)) THEN (- (t0.c85)) END, CAST((v0.c0 IN ()) AS NUMERIC);SELECT ALL (((t0.c85 IN ()))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) FROM v0 ORDER BY (~ (v0.c0 COLLATE BINARY)) LIMIT -1599311248; -- 0ms;
SELECT ALL CAST(CASE WHEN x'' THEN 0.5658512258472914 END AS REAL) FROM v0, t0 WHERE ((((CAST('{b%Y_<1' AS INTEGER), CAST('l%gAyz㨟꧖/' AS BLOB), (((0.018205065535375486))<=((NULL))), ((-1870287411) NOT NULL), ((((x'41bb')AND('O')))OR('4Z')), x'' COLLATE RTRIM, CAST(0.6159159507250657 AS NUMERIC)))<((NULL, (NULL IN ('')), json_insert('h䤿', NULL, '91811769', 0x6881b96b, '-713253874'), ((NULL)-(x'')), '2102982795', (('1759619292')<<(NULL)), (('-665070365')+('883405791')))))); -- 0ms;
SELECT ALL ((((t0.c85, t0.c41, v0.c0))=((v0.c0, '1595196823', v0.c0))) IN ()), ((CAST(t0.c85 AS REAL))IS NOT(CASE v0.c0  WHEN x'b36d' THEN v0.c0 ELSE v0.c0 END)), ((((v0.c0)|(t0.c41))) IS TRUE), ('1966666610' IN ()), NULL FROM v0 WHERE (((((0.95669712521697)LIKE(NULL))) BETWEEN (CASE WHEN x'27e378b6' THEN 'XQ' WHEN '130708036' THEN 0.87919048375869 WHEN '1864329211' THEN 0.6160355302774939 WHEN x'' THEN x'' WHEN 0.18302402252255057 THEN 0.9715336076549033 END) AND (CAST(0.23684600341838613 AS NUMERIC)))) LIMIT 1307006257;SELECT CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c41))) AS NUMERIC) FROM t0 WHERE ((((('-1945852335') ISNULL))LIKE('i&>3' COLLATE NOCASE))) GROUP BY (((t0.c41 IN ()))<(NULL));SELECT ALL '-620803185' FROM v0; -- 0ms;
SELECT ALL CASE t0.c85 COLLATE NOCASE  WHEN (NOT (t0.c41)) THEN t0.c85 COLLATE RTRIM WHEN SUM(t0.c85) THEN CASE 0.732480380764797  WHEN v0.c0 THEN v0.c0 ELSE -1.923878452E9 END WHEN QUOTE(v0.c0) THEN ((t0.c85) NOT BETWEEN (v0.c0) AND (t0.c85)) END FROM v0, t0 WHERE (((((-1349711174)>>(NULL)))&(((NULL) NOT BETWEEN (NULL) AND (0.0))))) EXCEPT SELECT DISTINCT COUNT(*) FROM v0 WHERE ((((0Xffffffffaae7be87)) NOT BETWEEN (('-1938463081')) AND (('筿'))) COLLATE BINARY); -- 1ms;
SELECT ALL (((((t0.c85)AND(v0.c0)))AND('0.6287896025106248')) IN (CASE WHEN t0.c85 THEN t0.c41 ELSE t0.c41 END)), x'', ((((((0X747b8da7)AND(t0.c85)))AND(NULL))) NOT BETWEEN (CASE WHEN t0.c85 THEN t0.c41 END) AND (CASE WHEN -1.9851747E8 THEN t0.c41 ELSE t0.c85 END)) FROM t0 LIMIT 1180728046 OFFSET 1130557742;SELECT ALL (json_object(0.43299310466512875, t0.c41) IN ()) FROM t0, v0 WHERE ((- (((x'') NOT NULL)))); -- 0ms;
SELECT TOTAL(((v0.c0) BETWEEN (t0.c85) AND (v0.c0))) FROM v0 GROUP BY NULL;SELECT DISTINCT t0.c85 FROM t0, v0 WHERE (((((UNLIKELY('-1934002103'))OR(((((x'')AND('/F')))OR('}0')))))AND(CASE WHEN NULL THEN 0X7c2d14ba WHEN '' THEN NULL WHEN '1616298141' THEN '1726471119' END))); -- 0ms;
SELECT PERCENT_RANK() OVER ( ROWS  CURRENT ROW) FROM v0; -- 0ms;
SELECT DISTINCT ((NULL)<=(((t0.c41)|(t0.c85)))) FROM v0;SELECT (((('1203272907')<<(t0.c41))) NOTNULL), ((((((((((t0.c41)AND(t0.c85)))AND(1.055913175E9)))AND(v0.c0)))AND(t0.c85)))IS NOT(NULL)), GROUP_CONCAT(json_array_length(t0.c85)) FROM v0 ORDER BY t0.c85 DESC LIMIT -1104655801 OFFSET -1088364754;SELECT DISTINCT ((NULLIF(DISTINCT t0.c41, t0.c85)) ISNULL) FROM v0 WHERE (((((x'46bc')AND(0.24853985685731517)))-(((NULL)!=(x'3ce3'))))) ORDER BY ((t0.c41)%(v0.c0)) COLLATE RTRIM;SELECT v0.c0 FROM t0 NOT INDEXED ORDER BY (((t0.c41)<>(v0.c0)) IN ())  NULLS FIRST;SELECT ALL ((CASE t0.c85  WHEN t0.c41 THEN t0.c85 ELSE t0.c85 END) IS TRUE) FROM t0; -- 0ms;
SELECT ALL v0.c0 FROM t0, v0; -- 0ms;
SELECT DISTINCT NULL, AVG(((v0.c0)<<(v0.c0))), ((((t0.c41)OR(t0.c85)))IS NOT(MAX(t0.c41))) FROM t0 INDEXED BY i20, v0;SELECT DISTINCT ((v0.c0)*(0.8573502772283768)) FROM t0 WHERE (CAST((~ (0.49522740166076373)) AS REAL));SELECT ALL ((CAST(t0.c85 AS REAL)) NOTNULL), (((v0.c0) BETWEEN (t0.c41) AND (v0.c0)) IN ()), CASE WHEN (((t0.c41))<((t0.c85))) THEN (((t0.c41, t0.c85, v0.c0)) BETWEEN ((t0.c41, v0.c0, t0.c85)) AND ((v0.c0, t0.c41, t0.c85))) ELSE v0.c0 COLLATE RTRIM END, CASE (((((((((((('1950214220')AND(v0.c0)))OR(t0.c41)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(t0.c41))  WHEN CAST(t0.c85 AS INTEGER) THEN ((v0.c0)-(t0.c85)) END, (((((v0.c0, v0.c0, t0.c41, t0.c85, -221579486, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, t0.c41, t0.c41, t0.c41, t0.c85, v0.c0, t0.c85)) AND ((v0.c0, 0.7861722821950621, t0.c85, t0.c41, v0.c0, v0.c0, t0.c85))))IS NOT(-1767057560 COLLATE RTRIM)) FROM v0, t0 GROUP BY (- (((t0.c85) BETWEEN (t0.c41) AND (v0.c0)))), (~ ((((t0.c85, t0.c41, v0.c0, t0.c85, t0.c41, '1739646679', 0.3225195597063172)) BETWEEN ((t0.c41, t0.c85, t0.c85, t0.c85, t0.c85, NULL, t0.c85)) AND ((t0.c41, v0.c0, v0.c0, v0.c0, t0.c41, t0.c41, t0.c41))))), CAST('1108158469' AS BLOB); -- 1ms;
SELECT DISTINCT CASE t0.c41  WHEN t0.c41 THEN v0.c0 WHEN v0.c0 THEN t0.c85 WHEN v0.c0 THEN t0.c85 ELSE t0.c41 END COLLATE NOCASE FROM v0, t0 GROUP BY ((CAST(t0.c41 AS NUMERIC)) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (t0.c41)) HAVING (((((t0.c41)) BETWEEN ((t0.c85)) AND (('-482860764')))) NOT BETWEEN ((x'' IN (v0.c0, t0.c41))) AND (LOWER(t0.c85))); -- 0ms;
SELECT HEX((~ (1055913175))) FROM t0 WHERE (json_patch(x'' COLLATE RTRIM, ((x'') NOTNULL))) ORDER BY (+ (((v0.c0)<(t0.c41))))  NULLS FIRST;SELECT (((CHAR('-316165656', v0.c0, x'')))<((((((v0.c0)OR(v0.c0)))AND(t0.c85))))), CAST(CAST(v0.c0 AS NUMERIC) AS TEXT), (((t0.c41)) BETWEEN ((((v0.c0)<<(t0.c85)))) AND ((((t0.c41) IS FALSE)))) FROM t0, v0; -- 0ms;
SELECT json_array_length(((t0.c41)=(v0.c0))) FROM v0, t0 WHERE ((((((- (NULL)))AND(NULL COLLATE BINARY)))OR(CASE '-46760206'  WHEN 0x423f3bf9 THEN x'15ac' ELSE 0.9523421701799307 END))) GROUP BY (NOT (((t0.c41)<(t0.c85)))) HAVING MAX(CAST(v0.c0 AS TEXT)) ORDER BY ((((((t0.c41)%(t0.c41)))AND(('1739646679' IN (t0.c41, v0.c0)))))OR(x'f235'))  NULLS LAST; -- 0ms;
SELECT ((((((t0.c85)-(0.6921976348235821)))OR(CAST(t0.c41 AS NUMERIC))))OR(CAST(t0.c41 AS TEXT))) FROM v0, t0 WHERE (NULL); -- 1ms;
SELECT ((LOWER(DISTINCT t0.c41))IS NOT((((t0.c41)) NOT BETWEEN ((t0.c41)) AND ((v0.c0))))) FROM v0, t0; -- 0ms;
SELECT ((((((((TOTAL(t0.c41))AND(((t0.c41) ISNULL))))OR(((v0.c0)%(v0.c0)))))AND(((t0.c85) NOT BETWEEN (t0.c41) AND (t0.c85)))))AND((v0.c0 IN ()))), ((t0.c41) IS FALSE) COLLATE RTRIM, ((((t0.c85)-(t0.c41)))>=(t0.c85)), PERCENT_RANK() OVER (), SUM((~ (t0.c41))) OVER () FROM t0 WHERE (json(LIKELIHOOD(NULL, 0.04430757589762957))) ORDER BY (8864435 IN ((((t0.c41, t0.c41, v0.c0))<=((v0.c0, v0.c0, t0.c85))), (((t0.c41))<=((v0.c0)))))  NULLS FIRST, NULL DESC;SELECT (CASE WHEN t0.c85 THEN t0.c85 WHEN t0.c85 THEN v0.c0 WHEN t0.c41 THEN t0.c85 WHEN t0.c41 THEN t0.c85 WHEN t0.c85 THEN t0.c41 END IN ()), LIKELIHOOD(((v0.c0) BETWEEN (t0.c85) AND (t0.c41)), 0.7352025481318304), '0''F' FROM v0, t0; -- 0ms;
SELECT ((COUNT(t0.c41)) BETWEEN (CAST(NULL AS TEXT)) AND ('')), ((((t0.c85) NOT NULL))<=(TOTAL(x''))), (NOT (((t0.c41) IS FALSE))) FROM t0 GROUP BY CASE (- (t0.c85))  WHEN CAST(v0.c0 AS REAL) THEN ((((t0.c41)OR(t0.c41)))AND(v0.c0)) END;SELECT DISTINCT ((CASE x''  WHEN t0.c85 THEN v0.c0 ELSE t0.c85 END) NOT BETWEEN (((((t0.c85)AND(t0.c85)))AND(t0.c41))) AND (((((v0.c0)AND(t0.c85)))OR(t0.c41)))), CUME_DIST() OVER (), UNLIKELY(DISTINCT t0.c41) COLLATE RTRIM FROM t0;SELECT DISTINCT (((((((t0.c85)OR(t0.c41)))AND(t0.c41))))<=(((NOT (t0.c85))))) FROM t0, v0; -- 1ms;
SELECT DISTINCT CAST(v0.c0 AS NUMERIC) FROM t0;SELECT ROW_NUMBER() OVER () FROM t0 WHERE (''); -- 0ms;
SELECT CAST(CASE WHEN t0.c85 THEN v0.c0 ELSE t0.c85 END AS BLOB), AVG((~ (v0.c0))) OVER (), ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))|(CASE v0.c0  WHEN t0.c85 THEN t0.c85 WHEN v0.c0 THEN NULL WHEN t0.c41 THEN t0.c85 END)) FROM t0 WHERE (((((x'')==('S.o')))OR(((((0.5112674811405702)AND(x'')))AND(0.9946522730789488))))) ORDER BY UPPER(DISTINCT ((t0.c41)>(v0.c0))) DESC  NULLS FIRST;SELECT (((t0.c85 IN ())) NOT BETWEEN (PRINTF(0.5164411650000538)) AND (x'')) FROM t0 WHERE (((((((('0.15141504884431234')AND(x'')))AND('F''gꣵ먫}>湲')), (('-167795792')IS NOT('/C쥁\[z&')), ((((0.9303866141115444)OR(0Xffffffffeedc9c03)))AND(NULL))))<((((((((((((((0.8215184302414247)AND(NULL)))AND(x'')))AND(2.02626737E9)))AND(-328982549)))AND(NULL)))AND('')), ((-134390486) IS TRUE), (((x''))<>(('-158372440'))))))); -- 0ms;
SELECT DISTINCT (- (((t0.c85)-(t0.c85)))) FROM v0 WHERE ((((((x'2d42', NULL, '2]/>uZ4B^')) BETWEEN ((NULL, 0x1c02325c, NULL)) AND ((0xffffffffebb180cb, '', 'x63蠽d\n'))))AND((((0.8085020819883304)) BETWEEN ((0xffffffff9704f144)) AND (('/)/'))))));SELECT TYPEOF(((t0.c41) BETWEEN (0Xffffffff97c8bcf0) AND (v0.c0))) FROM t0;SELECT CASE WHEN (~ (t0.c41)) THEN ((0x2577f363)AND(t0.c41)) END FROM t0 WHERE (TRIM(x'', (0.03214923818412774 IN ()))) INTERSECT SELECT ALL CAST(v0.c0 AS NUMERIC) COLLATE BINARY FROM v0; -- 0ms;
SELECT DISTINCT CAST(0.5370978339606174 AS NUMERIC) FROM v0 WHERE (((x'37bc') BETWEEN ((- (x'83c168b8'))) AND (CASE WHEN x'' THEN '2009536246' END))) ORDER BY ((t0.c85 COLLATE BINARY)-((t0.c85 IN (t0.c85)))) LIMIT -1955402183 OFFSET -924923381;SELECT (+ (((t0.c85)<=(t0.c85)))), RANK() OVER ( RANGE  UNBOUNDED PRECEDING), (- (375229822)) FROM v0, t0; -- 0ms;
SELECT (((((((((((((((t0.c85)OR(NULL)))OR(t0.c41)))OR(v0.c0)))AND(t0.c85)))AND(t0.c85)))AND(t0.c41))))!=((CAST(v0.c0 AS REAL)))) FROM t0, v0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT DISTINCT (CASE t0.c41  WHEN t0.c85 THEN t0.c85 ELSE t0.c41 END IN ((+ (t0.c41)))), t0.c41, t0.c85 FROM t0, v0 WHERE (CASE CASE WHEN NULL THEN x'' ELSE 'hoj?ijog' END  WHEN CASE WHEN '394306405' THEN x'' WHEN NULL THEN 'i%Eiw' WHEN NULL THEN '' END THEN CAST(0.7134267157697527 AS TEXT) END); -- 0ms;
SELECT DISTINCT (('-1080906935')IS(ABS(t0.c85))) FROM t0 EXCEPT SELECT COUNT(((t0.c41)LIKE(v0.c0))) OVER () FROM t0, v0; -- 1ms;
SELECT ALL CASE CAST(t0.c41 AS BLOB)  WHEN '|,\' COLLATE RTRIM THEN t0.c85 COLLATE BINARY END FROM v0 WHERE (CAST((0.6092195204888009 IN ()) AS REAL));SELECT DISTINCT (- ('8ArY,C퐹F')) FROM t0 ORDER BY (((t0.c85 IN (t0.c41))) IS TRUE) ASC; -- 0ms;
SELECT DISTINCT (((((v0.c0)<<(t0.c41)), (+ (v0.c0)), ((v0.c0)*(t0.c41))))<=((((0.013083599619130193)+(t0.c41)), (((v0.c0)) NOT BETWEEN ((t0.c41)) AND ((t0.c85))), AVG(t0.c85)))), (~ ((NOT (t0.c41)))), (((((v0.c0))>=((t0.c85)))) IS TRUE) FROM t0, v0 WHERE (CAST((('0.6509145634659443') NOT BETWEEN ('') AND ('j+')) AS BLOB)) GROUP BY CAST(((t0.c41)AND(v0.c0)) AS BLOB); -- 0ms;
SELECT TYPEOF(DISTINCT ((((t0.c41)AND(t0.c41)))AND(1552929126))) FROM v0;SELECT DISTINCT ((((0.15838264793401835)AND(CAST(t0.c41 AS NUMERIC))))OR(((t0.c41) BETWEEN (t0.c85) AND (v0.c0)))) FROM t0, v0 WHERE ((NOT (CASE 0.8985410290628508  WHEN x'af52' THEN x'a620' END))); -- 0ms;
SELECT COALESCE(DISTINCT v0.c0, t0.c85) COLLATE RTRIM FROM t0, v0 WHERE ('ki') ORDER BY t0.c85  NULLS LAST, (~ (((t0.c85) NOT BETWEEN (t0.c85) AND (t0.c41))))  NULLS LAST LIMIT 251941421; -- 1ms;
SELECT ALL ((CAST(v0.c0 AS NUMERIC)) ISNULL) FROM v0, t0 WHERE ((((((('-1713621373')OR('qP')))AND(0.7632892912765439)))!=(((0.9366053836442881) NOTNULL)))) ORDER BY ((t0.c41)&(t0.c85))  NULLS FIRST, ((((v0.c0) NOT NULL))<<(((t0.c41) BETWEEN (t0.c41) AND (t0.c41)))) DESC  NULLS FIRST LIMIT -823311815; -- 0ms;
SELECT DISTINCT (- (t0.c85)) COLLATE BINARY FROM t0; -- 0ms;
SELECT ALL CASE t0.c85  WHEN ((t0.c85)OR(t0.c41)) THEN ((t0.c41) NOTNULL) END FROM v0;SELECT DISTINCT (((v0.c0 IN ()))LIKE((- (t0.c41)))), COUNT(((t0.c85) NOT BETWEEN (t0.c41) AND (t0.c85))) OVER (), ((((((t0.c41)<(t0.c85)))OR(CASE WHEN t0.c41 THEN v0.c0 END)))AND(t0.c85)) FROM v0 ORDER BY CAST(t0.c41 AS NUMERIC) COLLATE NOCASE  NULLS LAST;SELECT DISTINCT CAST(((t0.c41) NOTNULL) AS BLOB), COUNT(*) OVER (), NTILE(t0.c85) OVER () FROM t0 WHERE (((((((NULL)OR(NULL)))OR(NULL)))<>((('-1931320263') IS FALSE)))) GROUP BY (- ((~ (t0.c41)))) LIMIT 2026267370; -- 0ms;
SELECT ALL ((((v0.c0)AND(((v0.c0) ISNULL))))AND(v0.c0)), (NOT ((+ (t0.c85)))), t0.c41 FROM v0, t0 WHERE (TRIM(x'')); -- 0ms;
SELECT DISTINCT v0.c0, GROUP_CONCAT(t0.c85) OVER (), t0.c41 FROM t0;SELECT DISTINCT (~ ((((t0.c85, t0.c41, '+T'))>=((v0.c0, v0.c0, t0.c85))))) FROM v0, t0; -- 0ms;
SELECT (((v0.c0 IN (t0.c41)))<<(((t0.c41) IS FALSE))) FROM v0 ORDER BY (((x'' IN ()))&(t0.c41))  NULLS LAST, ((((v0.c0)&(0X2cceafd8))) BETWEEN ((NOT (v0.c0))) AND (t0.c41)) DESC;SELECT DISTINCT COUNT(((t0.c41) IS TRUE)) FROM v0, t0; -- 0ms;
SELECT DISTINCT (((v0.c0)) NOT BETWEEN ((MIN(t0.c85))) AND ((CAST(t0.c41 AS REAL)))) FROM t0;SELECT ALL ((((- (v0.c0)), LTRIM(v0.c0, '2140303420'), ((t0.c41) BETWEEN (NULL) AND (v0.c0))))!=(((+ (t0.c41)), (~ (v0.c0)), v0.c0))) FROM v0 WHERE ((((('1130557742')=('0.23684600341838613'))) BETWEEN ('2009536246' COLLATE BINARY) AND (CAST(x'' AS INTEGER))));SELECT DISTINCT ((t0.c41) BETWEEN (t0.c85) AND (t0.c41)) COLLATE RTRIM, (NOT ((((t0.c85))>((t0.c41))))), (((((v0.c0) NOT NULL)))<=((((((t0.c41)AND(t0.c41)))AND(t0.c85))))) FROM v0, t0; -- 0ms;
SELECT COUNT(((((((((v0.c0)OR('928668258')))OR(t0.c41)))OR(t0.c85)))AND(t0.c41))) OVER () FROM v0;SELECT ((CASE WHEN v0.c0 THEN t0.c41 WHEN v0.c0 THEN t0.c85 WHEN t0.c41 THEN t0.c41 WHEN v0.c0 THEN t0.c41 WHEN t0.c41 THEN t0.c85 END) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (CASE v0.c0  WHEN t0.c85 THEN v0.c0 END)) FROM v0, t0; -- 0ms;
SELECT TRIM(CAST(v0.c0 AS NUMERIC)) FROM t0 WHERE (((NULL) NOT BETWEEN ((((NULL)) BETWEEN (('ks\r')) AND (('-835764911')))) AND (x'5b31')));SELECT ALL 0x22f75b78, (- (DATE(t0.c85, v0.c0, '-1427652985'))), ((((((((((v0.c0) IS FALSE))OR((t0.c41 IN ()))))OR((t0.c85 IN ()))))OR(MAX(t0.c41))))OR(t0.c41 COLLATE RTRIM)), t0.c41, ((((((t0.c85)OR(t0.c41)))OR(t0.c85))) NOT BETWEEN ((- (v0.c0))) AND ((('')||(t0.c41)))) FROM v0;SELECT ALL COUNT(*) OVER () FROM t0 WHERE (((((((3.75229822E8))=((x'')))))<>(((('1055913175') NOTNULL))))); -- 0ms;
SELECT ((((((t0.c85)OR(v0.c0)))AND(t0.c85))) NOT BETWEEN ((t0.c85 IN ())) AND (((v0.c0)>=(t0.c85)))), GROUP_CONCAT(((v0.c0) IS TRUE)) OVER (), CASE (('1977737282') NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN CASE t0.c41  WHEN t0.c41 THEN v0.c0 END WHEN SUM(t0.c85) THEN ((t0.c41) IS FALSE) WHEN ((v0.c0)>>(NULL)) THEN COUNT(*) WHEN COUNT(*) THEN CASE WHEN t0.c41 THEN v0.c0 WHEN t0.c41 THEN t0.c41 WHEN t0.c85 THEN t0.c85 ELSE v0.c0 END WHEN v0.c0 THEN MAX(t0.c85) END FROM t0 WHERE (((NULL)LIKE((((('惡[H]')OR(360877171)))AND('1149969186')))));SELECT GROUP_CONCAT((~ (t0.c41))), AVG(((t0.c85) BETWEEN (t0.c41) AND (v0.c0))) OVER (), CAST(t0.c85 AS REAL), SUM(TOTAL(LIKE(v0.c0, t0.c85, '-'))), ((((t0.c85)%(t0.c85))) NOT BETWEEN (((((v0.c0)OR(t0.c85)))AND(v0.c0))) AND (((v0.c0)%(t0.c85)))) FROM v0 WHERE ((NOT (CASE 0.38731164258383755  WHEN -1.334959163E9 THEN x'' ELSE 0xffffffffd2fe27ae END))) ORDER BY ((((t0.c85)+(v0.c0))) ISNULL);SELECT DISTINCT '' FROM t0 WHERE (((x'da4fe817') IS TRUE) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((t0.c41)OR(t0.c41))) NOT BETWEEN (t0.c41 COLLATE RTRIM) AND (t0.c41 COLLATE RTRIM)) FROM v0;SELECT DISTINCT CASE WHEN (~ (t0.c85)) THEN ((v0.c0)||(v0.c0)) WHEN (t0.c41 IN ()) THEN ((t0.c41)==(v0.c0)) WHEN t0.c85 THEN ((((t0.c85)OR(v0.c0)))OR(v0.c0)) ELSE MAX('-726845544') END, ABS(((t0.c41)%(t0.c41))), (((t0.c41 IN ()))LIKE((NOT (t0.c41)))) FROM t0, v0; -- 0ms;
SELECT DISTINCT MIN(CASE WHEN t0.c85 THEN t0.c41 WHEN '821612631' THEN t0.c85 WHEN t0.c41 THEN v0.c0 END, t0.c85), t0.c41, CASE WHEN LIKELIHOOD(DISTINCT t0.c85, 0.001379612206493186) THEN t0.c41 WHEN TOTAL('+W') THEN 0.26139305596055107 WHEN ((((t0.c41)OR(t0.c85)))AND(t0.c85)) THEN x'' ELSE ((v0.c0)<(v0.c0)) END FROM t0 WHERE (((CASE WHEN '' THEN NULL END) ISNULL));SELECT DISTINCT ((((((((0.7327734793548626)OR(v0.c0)))OR(t0.c85)))AND(v0.c0 COLLATE BINARY)))OR(((t0.c85)=(x'')))) FROM t0 WHERE ((((x'')) BETWEEN (('275152381')) AND (('-1427652985'))) COLLATE BINARY) EXCEPT SELECT DISTINCT (((t0.c85, v0.c0, v0.c0)) BETWEEN ((ABS(v0.c0), MAX(x'', t0.c41), (('1739646679')OR(t0.c41)))) AND (((NOT (t0.c41)), 0X5c454c4f, ((t0.c85) NOT NULL)))) FROM t0 ORDER BY ((((x'') BETWEEN (t0.c85) AND (-2.109259915E9))) NOT BETWEEN (json_array_length(t0.c41)) AND (t0.c41));SELECT ALL ((t0.c85) IS FALSE) COLLATE RTRIM FROM t0, v0; -- 0ms;
SELECT ALL ((NOT (v0.c0)) IN ()) FROM v0 GROUP BY CASE v0.c0 COLLATE RTRIM  WHEN CASE v0.c0  WHEN t0.c85 THEN t0.c85 WHEN '' THEN v0.c0 WHEN t0.c85 THEN v0.c0 END THEN 0.16744621820946526 END, ((((v0.c0)|('-1658869476'))) BETWEEN (((t0.c85)<(t0.c85))) AND ((NOT (t0.c85)))), (((((((v0.c0)AND(t0.c85)))AND(t0.c85)), ((t0.c85) BETWEEN (v0.c0) AND (t0.c85)), ((((((((t0.c85)AND(t0.c85)))OR(v0.c0)))OR(v0.c0)))AND(t0.c85)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN t0.c41 ELSE v0.c0 END))==((((t0.c85) NOT NULL), CASE WHEN v0.c0 THEN v0.c0 END, ((t0.c41)|(t0.c41)), (+ (t0.c41)), CAST(t0.c85 AS REAL)))) HAVING ((((t0.c41)>>(1213574733))) NOT BETWEEN (((t0.c41)<=(v0.c0))) AND (LOWER(t0.c41)));SELECT ALL CASE WHEN t0.c85 COLLATE BINARY THEN (((NULL, t0.c85, t0.c85, t0.c41, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, t0.c41, t0.c41)) AND ((t0.c85, v0.c0, v0.c0, v0.c0, t0.c41))) WHEN COUNT(t0.c41) THEN CASE WHEN NULL THEN t0.c85 END WHEN ((v0.c0) BETWEEN (t0.c41) AND (x'e0fc')) THEN ((((((((v0.c0)AND(t0.c41)))AND(NULL)))AND(x'')))OR(t0.c85)) ELSE '1862565547' END FROM t0 WHERE ((((0.36211457255699164)) NOT BETWEEN (((('-1923878452') ISNULL))) AND ((((x'')>=('dౖ'))))));SELECT DISTINCT (NOT (UPPER('237461939'))) FROM v0 ORDER BY ((((v0.c0)||(t0.c41))) NOT NULL) ASC  NULLS LAST;SELECT ((v0.c0)>(t0.c41)) COLLATE BINARY FROM t0;SELECT DISTINCT CAST((- (t0.c85)) AS BLOB) FROM t0, v0; -- 1ms;
SELECT ALL CASE ((v0.c0)IS(t0.c85))  WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0) BETWEEN (t0.c41) AND (t0.c41)) WHEN CASE t0.c41  WHEN t0.c85 THEN t0.c85 WHEN t0.c85 THEN t0.c85 WHEN t0.c85 THEN v0.c0 END THEN (t0.c41 IN ()) WHEN ((v0.c0) ISNULL) THEN '1532934096' WHEN '0.564745978567237' THEN CASE t0.c41  WHEN t0.c41 THEN 0.4558137765103395 WHEN t0.c41 THEN t0.c41 WHEN t0.c41 THEN t0.c41 ELSE t0.c41 END WHEN t0.c85 COLLATE BINARY THEN ((t0.c41)<<(t0.c41)) ELSE ((v0.c0)<=(v0.c0)) END FROM v0 ORDER BY CASE WHEN x'' THEN ((((t0.c41)OR(t0.c85)))AND(t0.c85)) ELSE (t0.c85 IN ()) END DESC  NULLS FIRST, (('(')AND(((t0.c41) ISNULL)));SELECT (t0.c85 IN ()) COLLATE RTRIM FROM t0, v0 WHERE (CAST((- (NULL)) AS NUMERIC)); -- 0ms;
SELECT ((CASE WHEN t0.c85 THEN t0.c41 END)&((((((((('-1540845484')OR(v0.c0)))AND(t0.c41)))OR(t0.c41)))OR(v0.c0)))) FROM t0 WHERE ((((((0.6565952965569304))>=((385801322))))IS NOT(((x'4010')>('b37u#')))));SELECT DISTINCT ((((('2113424104')LIKE(t0.c85)), (((v0.c0, v0.c0, t0.c85)) BETWEEN ((v0.c0, t0.c85, v0.c0)) AND ((t0.c85, v0.c0, t0.c41))), COUNT(v0.c0), SUM(t0.c85), (((v0.c0, t0.c41, v0.c0)) NOT BETWEEN ((v0.c0, t0.c85, t0.c41)) AND ((t0.c85, t0.c41, v0.c0)))))<>((t0.c85 COLLATE RTRIM, t0.c85 COLLATE BINARY, v0.c0, ((t0.c85)<=(t0.c85)), COUNT(*)))), AVG((~ (t0.c41))) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE GROUP), CAST(t0.c41 AS REAL), ((((t0.c41)GLOB(t0.c85))) NOT NULL), CAST(CASE v0.c0  WHEN t0.c41 THEN v0.c0 END AS BLOB) FROM t0;SELECT ALL ((((t0.c41) NOT BETWEEN (t0.c41) AND (t0.c85)))<(((t0.c41)&('')))), (((t0.c85)) NOT BETWEEN (((t0.c41 IN ()))) AND (((NOT (v0.c0))))), GROUP_CONCAT('Ic') FROM v0;SELECT x'425e71bf' FROM v0, t0 WHERE (CAST((-2.109259915E9 IN ()) AS REAL)) GROUP BY ((((t0.c85)%(t0.c85))) NOTNULL), v0.c0, ((((v0.c0) ISNULL)) ISNULL) HAVING ((CASE v0.c0  WHEN v0.c0 THEN t0.c41 END)GLOB((((t0.c85, t0.c41, t0.c85))>=((t0.c41, v0.c0, t0.c41))))); -- 0ms;
SELECT DISTINCT t0.c41, CAST(x'' AS INTEGER), ((((((((((t0.c85) BETWEEN (v0.c0) AND (t0.c85)))AND(((t0.c41)>=(v0.c0)))))OR(((v0.c0)GLOB(t0.c41)))))AND((v0.c0 IN ('N&b', t0.c41, t0.c41)))))AND(v0.c0)) FROM t0;SELECT (((t0.c85 IN ())) IS TRUE) FROM t0, v0; -- 0ms;
SELECT t0.c85 FROM v0 WHERE ((((' ')OR('홐uA''n')) IN ()));SELECT DISTINCT (+ (((((t0.c41)AND(v0.c0)))OR(t0.c85)))) FROM t0, v0 LIMIT 655023110 OFFSET 1266030142; -- 0ms;
SELECT DISTINCT ((SUM(t0.c41)) BETWEEN ((NOT (t0.c41))) AND (t0.c85 COLLATE NOCASE)), ((((t0.c41)AND(v0.c0)))!=((~ ('1765165580')))), (((((((((((t0.c85)) BETWEEN ((t0.c41)) AND ((0.8450964776830265))))AND(x'')))OR((((v0.c0)) BETWEEN ((NULL)) AND ((t0.c85))))))OR(CASE t0.c85  WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (t0.c41) AND ('-1459991171')))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((t0.c85)IS(x'')))OR(t0.c85 COLLATE NOCASE)) FROM v0;SELECT ALL CAST(((((t0.c41)OR(v0.c0)))AND(t0.c41)) AS NUMERIC) FROM v0, t0; -- 0ms;
SELECT x'' FROM t0 INDEXED BY i20;SELECT ALL CASE TOTAL(v0.c0)  WHEN ((t0.c41) BETWEEN ('') AND (v0.c0)) THEN (('510884676') NOT BETWEEN (v0.c0) AND (-777182850)) WHEN (v0.c0 IN ()) THEN t0.c85 WHEN ((v0.c0)OR(v0.c0)) THEN ((((((((v0.c0)AND(t0.c41)))OR(t0.c85)))OR(v0.c0)))OR(t0.c41)) END FROM v0 WHERE (0.11448568393744041);SELECT DISTINCT t0.c41 FROM t0; -- 0ms;
SELECT DISTINCT ((TOTAL(t0.c41)) NOTNULL) FROM v0;SELECT 8.48370129E8 FROM v0, t0 WHERE ((CASE WHEN x'' THEN -60878367 ELSE '1158234152' END IN ())); -- 0ms;
SELECT ((((v0.c0)%(t0.c41)))*(0.21557438957526354)) FROM t0, v0 WHERE ((('rLDDU!.悿')>=(7.384448506222441E-4 COLLATE NOCASE))); -- 1ms;
SELECT DISTINCT ((((t0.c85) BETWEEN (t0.c85) AND (t0.c41))) NOTNULL) FROM t0 GROUP BY ((((v0.c0)*(t0.c85)))GLOB((((t0.c85)) NOT BETWEEN ((v0.c0)) AND ((t0.c85)))));SELECT ALL (~ (LTRIM(NULL, '0.03214923818412774'))) FROM t0 WHERE (CAST((('h|YHy㎉|j') NOT BETWEEN (NULL) AND (x'')) AS BLOB)); -- 0ms;
SELECT ALL t0.c85, ((((((t0.c85)AND(v0.c0)))OR(t0.c85)))-(((t0.c85) NOTNULL))), ((CAST(t0.c85 AS REAL)) ISNULL) FROM t0, v0 LIMIT 880566335; -- 0ms;
SELECT DISTINCT ((LOWER(t0.c85)) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c85, t0.c85, NULL)) NOT BETWEEN ((v0.c0, t0.c85, t0.c85)) AND ((t0.c41, t0.c41, v0.c0))))<=(((t0.c41) NOT BETWEEN (v0.c0) AND (t0.c85)))) FROM v0;SELECT ALL json_type(CAST(t0.c85 AS INTEGER)), ((((t0.c41, t0.c41, t0.c41))>((v0.c0, v0.c0, t0.c41))) IN ()), NTILE((((t0.c41)) BETWEEN ((CAST(t0.c85 AS BLOB))) AND ((v0.c0)))) OVER () FROM t0 LEFT OUTER JOIN v0 ON ((IFNULL(DISTINCT 0.5596555915528711, v0.c0)) IS FALSE);SELECT ALL ((((((((((t0.c41)OR(t0.c41)))OR(t0.c85)))AND(t0.c85)))OR(v0.c0)))IS((+ (t0.c41)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM v0, t0; -- 0ms;
SELECT ALL (((t0.c41)) BETWEEN (((t0.c85 IN ()))) AND ((((t0.c85) IS FALSE)))), TOTAL(CAST(t0.c85 AS TEXT)) OVER (), COUNT((((v0.c0))<=((t0.c85)))) OVER ( ORDER BY ((CASE t0.c41  WHEN t0.c85 THEN t0.c85 END) IS FALSE) DESC, CASE WHEN CAST(t0.c85 AS INTEGER) THEN ((t0.c41)|(t0.c85)) END) FROM t0 WHERE (((((x'', x'', NULL)) BETWEEN ((0X502ab3b8, NULL, '1803490527')) AND ((0.3611595598984251, 0.8004788497732056, -1791376959))) IN ()));SELECT ALL HEX(DISTINCT AVG(t0.c85)), MIN(v0.c0, (((t0.c41))>=((t0.c41)))), t0.c41 FROM t0 WHERE ((((((((((+ (NULL)))AND('-346761553' COLLATE RTRIM)))OR((~ ('ME5쟨|皦')))))AND(((NULL) ISNULL))))OR(CASE 0.942368192879999  WHEN '661039683' THEN NULL END)));SELECT ALL (NULL IN ()), ((t0.c41)GLOB(GLOB(t0.c85, v0.c0))), TRIM(DISTINCT (~ (t0.c41)), CAST(t0.c85 AS TEXT)) FROM v0 WHERE ((('' COLLATE BINARY)&(((NULL)%(0.468352157930773)))));SELECT ALL CASE WHEN x'' THEN t0.c85 COLLATE BINARY ELSE ((t0.c85) IS TRUE) END FROM t0, v0 WHERE ((NOT (CASE 1385635097  WHEN x'96cc' THEN '' ELSE NULL END))) GROUP BY ((((((1165576083)AND(t0.c85)))OR(v0.c0)))>(t0.c85)) ORDER BY '1765165580' ASC  NULLS FIRST, HEX(DISTINCT CASE t0.c41  WHEN t0.c41 THEN v0.c0 END); -- 0ms;
SELECT DISTINCT SUM((((v0.c0))>((t0.c41)))) OVER () FROM v0, t0; -- 1ms;
SELECT CAST(COALESCE(v0.c0, t0.c41) AS INTEGER), (((t0.c41, 6.8832848E8, t0.c85)) NOT BETWEEN ((((t0.c85)GLOB(t0.c85)), (NOT (t0.c85)), json_extract(t0.c85, '688328480'))) AND ((((v0.c0) BETWEEN (t0.c85) AND (v0.c0)), CASE v0.c0  WHEN x'' THEN t0.c85 WHEN t0.c85 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, ((0.17374846376575148) BETWEEN (t0.c85) AND (v0.c0))))), (((((+ (t0.c85)))OR(CASE t0.c85  WHEN t0.c41 THEN t0.c85 END)))AND(TRIM(t0.c41))) FROM t0;SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((('-340688693')OR(NULL)))OR(0xffffffffebb180cb)))<=(CAST(NULL AS REAL)))); -- 0ms;
SELECT ((((((t0.c85)OR(t0.c41)))AND(t0.c41)))<(CAST(t0.c85 AS NUMERIC))) FROM t0 WHERE ((- (((x'')-(-3.40688693E8))))) ORDER BY ((((v0.c0) NOTNULL)) NOT NULL)  NULLS LAST LIMIT 2081269245;SELECT ALL v0.c0 FROM t0, v0 WHERE ((((NULL IN ())) NOTNULL)); -- 0ms;
SELECT DISTINCT CAST(((t0.c41)OR(v0.c0)) AS TEXT) FROM t0 WHERE ((NOT ((((x'1534'))==((NULL))))));SELECT DISTINCT CAST(CASE t0.c41  WHEN t0.c85 THEN v0.c0 ELSE 0Xffffffffd01f4fdf END AS INTEGER) FROM v0, t0 WHERE ((- (0Xffffffffbe7766af))) ORDER BY CASE -2.109259915E9  WHEN CASE WHEN t0.c85 THEN t0.c85 ELSE t0.c85 END THEN (NOT ('')) ELSE ((0.2417461890649727) BETWEEN (v0.c0) AND (t0.c85)) END ASC  NULLS FIRST, ((((t0.c41) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(((((v0.c0)OR(t0.c41)))OR(v0.c0))))  NULLS FIRST, (((t0.c85)) BETWEEN ((CASE t0.c41  WHEN NULL THEN t0.c85 WHEN t0.c85 THEN t0.c41 WHEN t0.c41 THEN v0.c0 WHEN v0.c0 THEN t0.c41 WHEN t0.c41 THEN t0.c85 WHEN v0.c0 THEN v0.c0 WHEN t0.c41 THEN t0.c85 ELSE t0.c41 END)) AND ((CASE WHEN v0.c0 THEN t0.c41 ELSE t0.c41 END))) DESC; -- 1ms;
SELECT CASE t0.c85 COLLATE RTRIM  WHEN ((v0.c0) NOT BETWEEN (t0.c85) AND (v0.c0)) THEN ((v0.c0)<=(t0.c85)) END FROM t0 WHERE ((~ (CASE WHEN NULL THEN NULL END))) GROUP BY t0.c41;SELECT ALL MAX(((t0.c85)<(t0.c85))), CAST((v0.c0 IN (t0.c85, t0.c41)) AS REAL), ((CASE t0.c41  WHEN t0.c85 THEN '1f' END)<(((t0.c85)IS(t0.c41)))) FROM v0;SELECT ((AVG(t0.c85))>=(v0.c0)), (+ (json_array_length(v0.c0, t0.c41))), (MIN(v0.c0) IN ()) FROM v0 WHERE (((('787218806'))<=((UPPER(NULL)))));SELECT ALL COUNT(((t0.c41) NOT BETWEEN (t0.c85) AND (v0.c0))) OVER (), ((((((((((t0.c41)IS NOT(t0.c41)))AND(((t0.c85)<=(v0.c0)))))OR(((((t0.c41)AND(t0.c41)))AND(t0.c85)))))OR((((t0.c85, v0.c0, '-27762879')) NOT BETWEEN ((t0.c85, t0.c85, v0.c0)) AND ((t0.c41, v0.c0, ''))))))OR(t0.c41)), COUNT(*) FROM t0;SELECT ALL CASE t0.c41 COLLATE BINARY  WHEN ((t0.c85) BETWEEN (t0.c41) AND (v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE CAST(v0.c0 AS BLOB) END, MAX(((t0.c41)>=(t0.c41))), LEAD((((((v0.c0) IS FALSE), (((t0.c41, t0.c85, t0.c85, t0.c85, t0.c41)) BETWEEN ((t0.c85, v0.c0, t0.c85, 0.8491265937133474, t0.c41)) AND ((t0.c41, v0.c0, v0.c0, t0.c85, t0.c85))), ((v0.c0)|(v0.c0))))=((CAST(t0.c41 AS TEXT), '', ((0.42459253624914983) NOT BETWEEN (3.18182767E8) AND (v0.c0))))), ((((v0.c0)!=(v0.c0)))OR(NULL)), (((t0.c85)) BETWEEN (((NOT (t0.c41)))) AND ((t0.c41 COLLATE BINARY)))) OVER () FROM v0, t0; -- 0ms;
SELECT ALL ((t0.c41 COLLATE RTRIM)>=(((x'')LIKE(t0.c41)))) FROM v0, t0 WHERE (TRIM(((x'') ISNULL), x'' COLLATE RTRIM)) LIMIT -1267625094; -- 0ms;
SELECT DISTINCT (MIN(v0.c0) IN ()) FROM v0, t0 WHERE (CASE WHEN ('8~icnow''(&' IN ()) THEN json(x'') END) LIMIT 2083329210 OFFSET -1595036726; -- 0ms;
SELECT DISTINCT ((((t0.c41)OR(v0.c0)))AND(t0.c41)) COLLATE RTRIM FROM t0 WHERE ((36416968 IN ()) COLLATE RTRIM);SELECT ((t0.c41)LIKE(t0.c85 COLLATE RTRIM)), CASE ((((((((t0.c41)OR(NULL)))OR(v0.c0)))AND(t0.c41)))OR(t0.c41))  WHEN NULL THEN ((t0.c41) NOT BETWEEN (t0.c41) AND (t0.c85)) WHEN ((x'')<(v0.c0)) THEN ((((t0.c41)OR(v0.c0)))OR(t0.c41)) WHEN ((t0.c41) NOT BETWEEN (t0.c41) AND (v0.c0)) THEN '901499201' COLLATE BINARY ELSE ((v0.c0)%(t0.c41)) END, CASE ((v0.c0) BETWEEN (0.9630780501453284) AND (v0.c0))  WHEN CAST(t0.c41 AS NUMERIC) THEN AVG(t0.c85) WHEN ((t0.c85)OR(v0.c0)) THEN LOWER(t0.c85) WHEN ((v0.c0) NOT NULL) THEN (((v0.c0, t0.c41, t0.c85))=((x'', v0.c0, t0.c41))) WHEN CAST(t0.c41 AS REAL) THEN ((t0.c85) BETWEEN (t0.c85) AND (v0.c0)) WHEN t0.c85 COLLATE RTRIM THEN ((0x29070f20)/(t0.c85)) END FROM v0, t0 ORDER BY v0.c0 DESC; -- 0ms;
SELECT v0.c0, (((((t0.c85)OR(v0.c0)))OR(v0.c0)) IN ((v0.c0 IN ()), (((t0.c41)) NOT BETWEEN ((t0.c85)) AND ((v0.c0))))), ((t0.c41)==(CAST(t0.c41 AS INTEGER))) FROM t0 ORDER BY UPPER(((v0.c0)<(t0.c41)));SELECT DISTINCT ((((v0.c0) NOTNULL)) NOTNULL), (((v0.c0)IS NOT(v0.c0)) IN ()), (t0.c41 IN ()) COLLATE NOCASE FROM t0, v0; -- 0ms;
SELECT DISTINCT ((CAST(NULL AS BLOB)) BETWEEN (v0.c0) AND (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(0.9542039711054058)))), SUM(CASE v0.c0  WHEN t0.c41 THEN x'' ELSE t0.c41 END), (NOT (((v0.c0)+(t0.c41)))) FROM v0 INDEXED BY i20 WHERE (CASE WHEN (~ (0.2735481653526315)) THEN ((('1483482217', '-1057893898', NULL))<=(('-1057893898', '0.30704542354903763', x''))) ELSE (NOT ('칎0^Z''fN]e')) END);SELECT v0.c0 FROM t0, v0 WHERE (((-7.53675998E8 COLLATE BINARY)GLOB(((NULL)IS NOT(x'2f7f'))))); -- 0ms;
SELECT ALL ((t0.c41) NOT BETWEEN (((t0.c41)AND(v0.c0))) AND (((t0.c85) NOT BETWEEN (v0.c0) AND (t0.c41)))), CASE v0.c0  WHEN t0.c41 THEN t0.c85 END COLLATE NOCASE, (((('') IS FALSE))GLOB(NULL)) FROM v0, t0 WHERE (CASE WHEN x'' THEN '' WHEN NULL THEN 'G7Q/f] \r' WHEN NULL THEN NULL END COLLATE BINARY); -- 0ms;
SELECT DATETIME(((t0.c85)OR(t0.c41)), (('-2105425232') NOT BETWEEN (t0.c85) AND (v0.c0)), (((v0.c0)) NOT BETWEEN ((t0.c41)) AND (('-2075537128'))), json_array_length(t0.c85), ((v0.c0)%('-1554855195'))) FROM v0, t0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), t0.c41 COLLATE RTRIM, ((((t0.c85)) NOT BETWEEN ((t0.c41)) AND ((t0.c41))) IN ()) FROM t0, v0; -- 0ms;
SELECT DISTINCT x'ac34', (((t0.c85)) NOT BETWEEN ((CASE WHEN t0.c41 THEN v0.c0 ELSE v0.c0 END)) AND ((LIKELIHOOD(t0.c85, 0.8696628797076983)))), (((t0.c41 IN ()))==(v0.c0 COLLATE BINARY)) FROM t0, v0 WHERE (((x'' COLLATE BINARY)|((('')<<('tQ	r5'))))) ORDER BY ((((((((((x'')<=(t0.c41)))AND(CASE WHEN t0.c85 THEN v0.c0 END)))AND((((v0.c0))<=((t0.c85))))))OR(t0.c85)))AND('-1427652985')) DESC  NULLS LAST; -- 0ms;
SELECT CASE WHEN t0.c85 COLLATE BINARY THEN t0.c41 COLLATE RTRIM WHEN (((t0.c41)) BETWEEN ((t0.c41)) AND ((t0.c41))) THEN LIKE(t0.c85, t0.c85) WHEN NULL THEN '\n(cbDL2' END, ((((v0.c0)IS NOT(t0.c41))) NOT BETWEEN (((t0.c85) BETWEEN (t0.c85) AND (t0.c41))) AND ((t0.c85 IN ()))), (((t0.c41)>>(v0.c0)) IN (t0.c85)) FROM t0, v0; -- 0ms;
SELECT ALL RANK() OVER () FROM v0, t0; -- 0ms;
SELECT ALL (t0.c85 COLLATE BINARY IN ((NOT (t0.c85)))) FROM v0;SELECT DISTINCT CASE WHEN ('|3W\r' IN ()) THEN CAST(x'eeb8' AS NUMERIC) WHEN ((v0.c0) BETWEEN (t0.c41) AND (t0.c85)) THEN '-374404834' WHEN CAST(t0.c41 AS NUMERIC) THEN (NOT (v0.c0)) ELSE ((((t0.c41)OR(t0.c85)))AND(NULL)) END FROM t0 WHERE ((- ((('9%d^') IS FALSE))));SELECT ALL LEAD((((v0.c0)) NOT BETWEEN ((HEX(DISTINCT v0.c0))) AND (((- (v0.c0))))), v0.c0, ((v0.c0 IN (-924082703)) IN ())) OVER (), CAST(((v0.c0)/(v0.c0)) AS INTEGER), UNICODE((v0.c0 IN ())) FROM v0; -- 0ms;
SELECT DISTINCT HEX(CASE t0.c41  WHEN v0.c0 THEN t0.c85 WHEN '-1221096596' THEN v0.c0 WHEN t0.c85 THEN t0.c85 ELSE t0.c85 END), COUNT(*) OVER (), ((('10283156', ((v0.c0) NOT BETWEEN (t0.c85) AND (t0.c85)), t0.c85))>=((v0.c0, ((t0.c41) BETWEEN (t0.c85) AND (0.39992149219113826)), CAST(v0.c0 AS REAL)))) FROM v0, t0; -- 0ms;
SELECT ALL CAST(TRIM(t0.c41) AS INTEGER) FROM v0 WHERE ((~ (((x'')OR(NULL))))) GROUP BY (((x'')) BETWEEN ((((t0.c85)-(v0.c0)))) AND ((((t0.c85)IS(t0.c41))))), '', ((((t0.c85)||(v0.c0))) ISNULL) HAVING CASE WHEN ((t0.c85)GLOB(v0.c0)) THEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) WHEN ((((((((t0.c85)AND(NULL)))AND(0.39992149219113826)))AND(t0.c85)))AND(v0.c0)) THEN ((v0.c0)*(t0.c85)) WHEN 0Xffffffff9c882053 THEN PRINTF(t0.c41, t0.c41, v0.c0) WHEN t0.c41 THEN ((v0.c0)>(t0.c85)) WHEN ((t0.c85)GLOB(t0.c41)) THEN CAST(t0.c85 AS INTEGER) ELSE ((t0.c41)==(t0.c41)) END;SELECT ALL CAST(((-1821138520) BETWEEN (t0.c85) AND (t0.c41)) AS NUMERIC) FROM t0, v0; -- 0ms;
SELECT DISTINCT (((COUNT(t0.c41)))==(((NOT (t0.c85))))) FROM v0, t0 WHERE ((((2.08332921E9, x'', NULL)) BETWEEN (((((NULL, '688328480', 0.23337462471459947)) NOT BETWEEN ((x'', 'Z', 0.8874143825890206)) AND ((x'', '1315457384', '홐uA''n'))), x'' COLLATE BINARY, (((x'ed3b')) BETWEEN ((NULL)) AND ((NULL))))) AND (((~ ('ic')), '-432500624', (('mM') BETWEEN ('375229822') AND (NULL)))))) ORDER BY (((v0.c0)) BETWEEN ((((((v0.c0)AND(t0.c41)))OR(v0.c0)))) AND ((((0.4297109092659117)!=(v0.c0))))) DESC; -- 0ms;
SELECT DISTINCT CAST(((v0.c0)|(x'')) AS INTEGER) FROM t0;SELECT ALL ((NULL) BETWEEN (((t0.c41)>>(t0.c85))) AND ((~ (t0.c85)))), ((((t0.c41) NOT NULL)) IS TRUE), (((((t0.c85))<>((t0.c85))))<<((('') NOT NULL))), CASE WHEN (NOT (t0.c85)) THEN ((t0.c85)>>(t0.c85)) END, t0.c85 FROM v0, t0; -- 0ms;
SELECT DISTINCT COUNT(((x'') IS TRUE)) FROM v0 WHERE (((ABS('蔂bWW\W䌋r'))IS(CAST(x'' AS BLOB)))); -- 0ms;
SELECT LEAD(1.862565547E9, CAST((((v0.c0, 'IGf', v0.c0))<>((v0.c0, v0.c0, v0.c0))) AS NUMERIC), ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)&(((v0.c0)*(v0.c0))))) OVER () FROM v0; -- 0ms;
SELECT DISTINCT ((t0.c41) ISNULL) COLLATE RTRIM COLLATE RTRIM FROM t0 ORDER BY (((((v0.c0)/(v0.c0)), (+ (v0.c0)), ((t0.c41)-(t0.c85))))<=((((t0.c85) IS TRUE), t0.c85, ((((v0.c0)OR(t0.c85)))AND(t0.c85))))) DESC, ((CASE NULL  WHEN t0.c41 THEN t0.c85 END)GLOB('')) ASC  NULLS FIRST, (- ((t0.c85 IN ())));SELECT DISTINCT ('2009536246' IN ()) FROM v0 LIMIT -1719309095 OFFSET -1798853653 UNION SELECT TRIM(DISTINCT MAX(t0.c41), 0.29838419325477983) FROM v0, t0 LIMIT 1108381215;SELECT DISTINCT '^q᧑I' FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((((v0.c0) BETWEEN (t0.c85) AND (v0.c0)))OR(((t0.c85)GLOB(t0.c41)))))OR((((t0.c85, v0.c0, v0.c0)) BETWEEN ((t0.c85, t0.c41, t0.c41)) AND ((t0.c41, t0.c85, t0.c85))))) FROM v0 NOT INDEXED, t0 WHERE (((TYPEOF(x'e4a4'))+('-1923878452' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((t0.c85)||(t0.c41)))<=(MIN(t0.c85))) FROM v0;SELECT ALL FIRST_VALUE(((((t0.c41)) BETWEEN ((t0.c41)) AND ((t0.c85))) IN (((t0.c41) NOT BETWEEN (t0.c41) AND (t0.c85)), (t0.c85 IN (t0.c85))))) OVER (), (~ (CAST(t0.c41 AS REAL))), GROUP_CONCAT((t0.c85 IN ())) FROM t0; -- 0ms;
SELECT ALL TOTAL(IFNULL(DISTINCT t0.c85, t0.c85)) OVER () FROM v0, t0 WHERE (((('-237356888') NOT BETWEEN (NULL) AND (0.7728136597906649)) IN ((((0.564745978567237)) BETWEEN ((NULL)) AND (('-1614699138')))))); -- 0ms;
SELECT ((SUM(v0.c0)) NOTNULL) FROM v0; -- 0ms;
SELECT DISTINCT CASE WHEN 0xffffffffbca57156 THEN t0.c85 END COLLATE BINARY COLLATE BINARY FROM t0, v0 WHERE (CAST((+ ('2]/>UZ4B^')) AS NUMERIC)); -- 0ms;
SELECT GROUP_CONCAT('1e500') FROM t0, v0; -- 0ms;
SELECT DISTINCT GLOB(((t0.c41)*(t0.c41)), ((v0.c0)<>(t0.c41))) FROM v0;SELECT LTRIM(NULL, ((t0.c85)>>(t0.c41))), CAST(MIN(t0.c85) AS BLOB), ((v0.c0)*(v0.c0)) COLLATE BINARY FROM t0;SELECT ALL (NOT (t0.c85 COLLATE NOCASE)), ((CAST(-1.7976931348623157E308 AS TEXT)) NOT BETWEEN (((v0.c0)IS(t0.c41))) AND (NULL)), CASE WHEN t0.c41 COLLATE BINARY THEN (v0.c0 IN (v0.c0)) END, t0.c41, NULL FROM t0;SELECT ALL TRIM(DISTINCT ((v0.c0) IS TRUE), v0.c0), CUME_DIST() OVER (), TYPEOF(DISTINCT ((((t0.c85)AND(x'')))OR(t0.c85))) FROM v0, t0 WHERE (((((('', 0xffffffffd00d49e4, NULL)) BETWEEN ((0.024014244781804694, x'', '548349243')) AND ((NULL, NULL, 0.8409492842639604)))) ISNULL)); -- 0ms;
SELECT ALL 0.03843735361511047 FROM v0 WHERE (json_array(CASE WHEN 0.0014999755031052109 THEN 0.3296262497271132 ELSE 1.108158469E9 END, LIKELY(309986791), ((x'14b1') IS TRUE), ((-340688693)/(1.108158469E9)))) ORDER BY ((t0.c85)&(t0.c41)) COLLATE RTRIM ASC  NULLS LAST, (((((t0.c85))=((v0.c0)))) NOT BETWEEN (((t0.c85) IS TRUE)) AND (((((t0.c41)AND(t0.c85)))OR(t0.c85)))) DESC  NULLS LAST, 0.5350267458902828 ASC;SELECT DISTINCT ((((v0.c0)IS NOT(v0.c0)))LIKE(((t0.c41)GLOB(t0.c85)))) FROM t0 WHERE ((((NULL IN ()))GLOB((+ (x'')))));SELECT DISTINCT v0.c0 FROM t0, v0; -- 0ms;
SELECT DISTINCT (((NOT (t0.c85)))IS NOT(((v0.c0)>(v0.c0)))) FROM v0 WHERE (CAST(-1.549478478E9 AS NUMERIC));SELECT CASE ((((((((0xffffffffe6df7a97)AND('')))OR(v0.c0)))AND(t0.c85)))OR(t0.c85))  WHEN ((('Q⨓3RdT')) NOT BETWEEN (('')) AND ((v0.c0))) THEN MIN(v0.c0) ELSE ((v0.c0)/(v0.c0)) END FROM t0 WHERE ((((('2015943973')|(453549193))) BETWEEN (((((1.595196823E9)AND(NULL)))OR(0.6694009842206571))) AND ((NULL IN (0.10983561561699029, 0.6441915024276018)))));SELECT CASE WHEN v0.c0 THEN (((NULL, v0.c0, v0.c0))>((NULL, t0.c85, t0.c41))) END, ((t0.c85) ISNULL), ((((((((((t0.c85)IS(t0.c85)))AND(SUM(t0.c41))))AND(COUNT(v0.c0))))OR(((t0.c85) NOTNULL))))AND(AVG(t0.c41))) FROM t0, v0 WHERE (((CASE WHEN '1108158469' THEN '' END) BETWEEN ((((''))<=((x'')))) AND (((0.9593629714930666) IS TRUE)))); -- 0ms;
SELECT DISTINCT (+ (CASE t0.c41  WHEN t0.c41 THEN t0.c85 ELSE t0.c85 END)) FROM v0 WHERE ((('605226778')LIKE(-1049709573)) COLLATE BINARY);SELECT DISTINCT COUNT(CASE v0.c0  WHEN t0.c41 THEN t0.c41 END) OVER (), ((((t0.c41)AND((+ (t0.c85)))))OR(((v0.c0) NOT BETWEEN (NULL) AND (1e500)))), (((((v0.c0)) BETWEEN ((t0.c41)) AND ((v0.c0)))) NOT NULL) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((((t0.c85) BETWEEN (t0.c41) AND (t0.c85)))OR(((t0.c85) NOT NULL))))OR(CAST(t0.c85 AS REAL))) FROM v0, t0 WHERE (x''); -- 0ms;
SELECT 0.5805032996909344 FROM v0; -- 0ms;
SELECT TRIM(t0.c85 COLLATE RTRIM) FROM v0 WHERE ((((- (NULL))) NOT BETWEEN (((0.13409132405692004)+(x'cf29'))) AND ((('')<=(NULL)))));SELECT DISTINCT ((((((v0.c0))>=((v0.c0)))))<((0.029907003208144545))) FROM t0 WHERE (UNLIKELY(((('-2068312933')) BETWEEN ((NULL)) AND ((0.5658512258472914)))));SELECT (((+ (1.739646679E9)))IS NOT(((((v0.c0)OR(NULL)))AND(t0.c41)))), x'6a91', AVG(x'') OVER (), (- (((((t0.c41)AND(v0.c0)))OR(0.2990064906656146)))), ((((((((((v0.c0)+(t0.c85)))OR(CAST(v0.c0 AS NUMERIC))))AND(((t0.c41) ISNULL))))AND(((t0.c85) IS TRUE))))AND(NULLIF(t0.c85, t0.c41))) FROM v0 GROUP BY ((CASE NULL  WHEN NULL THEN v0.c0 ELSE t0.c85 END)||(v0.c0)), (((v0.c0)&(t0.c85)) IN ()), (((((((((((((v0.c0 IN ()))AND(((v0.c0) IS FALSE))))AND(t0.c41 COLLATE RTRIM)))OR(((v0.c0) IS TRUE))))AND(((t0.c85)OR(t0.c85)))))OR(SQLITE_VERSION())))OR(CAST(t0.c41 AS TEXT))) HAVING MAX(NULL);SELECT DISTINCT TRIM(DISTINCT LIKELIHOOD(DISTINCT 1.977737282E9, 0.16911660899064673)) FROM v0 WHERE (((((x'9701')>=(0X559f976e)))IS(((NULL)+(''))))); -- 0ms;
SELECT ((((v0.c0)>>(t0.c85))) BETWEEN (AVG(t0.c85)) AND (((v0.c0)>(t0.c41)))), ((((t0.c41)>>(t0.c85))) NOT NULL), t0.c41 FROM v0, t0 WHERE ((((x'' IN (x'')))*((('o拾')=(NULL))))); -- 0ms;
SELECT DISTINCT (((t0.c85)LIKE(v0.c0)) IN (UPPER('0.0'), LIKELY(DISTINCT t0.c85))) FROM t0 ORDER BY ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(t0.c85)))OR(t0.c85)))!=((NOT (v0.c0)))) DESC;SELECT NULL FROM t0; -- 1ms;
SELECT DISTINCT TOTAL((t0.c41 IN (t0.c85))) FROM t0, v0 WHERE ((((0Xffffffffd28ffdee) NOT BETWEEN ('431064876') AND (0.9250706060666618)) IN ())); -- 0ms;
SELECT DISTINCT ((((v0.c0) BETWEEN (x'') AND (t0.c85)))&((t0.c41 IN (t0.c85)))) FROM v0, t0 WHERE ((- ((x'' IN ())))); -- 0ms;
SELECT DISTINCT (((v0.c0)OR(t0.c41)) IN ()) FROM t0, v0; -- 0ms;
SELECT DISTINCT AVG(CASE t0.c85  WHEN t0.c85 THEN v0.c0 ELSE t0.c41 END) OVER (), CAST(SUM(t0.c41) AS TEXT), TOTAL(IFNULL(DISTINCT t0.c41, v0.c0)) FROM t0, v0 WHERE (CASE TRIM(DISTINCT NULL)  WHEN CAST(1.616298141E9 AS TEXT) THEN (0.10958927686881514 IN (NULL, '')) END); -- 0ms;
SELECT ALL ((((t0.c41) NOT NULL)) BETWEEN (CASE t0.c41  WHEN 0.7401219201002182 THEN t0.c41 END) AND (((t0.c85)GLOB(t0.c85)))) FROM t0, v0; -- 0ms;
SELECT ALL NULL, CASE t0.c85  WHEN t0.c41 THEN t0.c41 END COLLATE NOCASE, ((v0.c0 COLLATE NOCASE) BETWEEN (((t0.c85) NOT BETWEEN (v0.c0) AND (t0.c85))) AND (((v0.c0)&(t0.c85)))), t0.c41, ((COUNT(v0.c0)) ISNULL) FROM t0, v0 WHERE ((((0.1528785617622701)) BETWEEN (((((NULL, 1.862565547E9, NULL)) BETWEEN (('164531561', '2009536246', x'9f64')) AND ((0Xffffffffe5b832b3, NULL, '-275691496'))))) AND ((((0.1630729188512109)!=('J5ꑃ삝H')))))); -- 1ms;
SELECT DISTINCT CASE (~ (t0.c85))  WHEN ((((v0.c0)OR(t0.c41)))OR(v0.c0)) THEN 283993076 END FROM t0;SELECT DISTINCT FIRST_VALUE(((((CASE WHEN v0.c0 THEN t0.c85 END)AND((t0.c41 IN ()))))AND(NULL))) OVER () FROM v0 NATURAL JOIN t0 WHERE (CASE WHEN CASE NULL  WHEN 0.31208206467325217 THEN x'19bb' ELSE 0xffffffffd60f2566 END THEN x'7a47' END); -- 0ms;
SELECT ((((CAST(NULL AS TEXT))AND(((t0.c85)/(t0.c41)))))OR(((t0.c85) NOT BETWEEN (v0.c0) AND (v0.c0)))) FROM v0, t0; -- 0ms;
SELECT ALL NTILE(((t0.c41 COLLATE NOCASE)<<(t0.c85))) OVER ( PARTITION BY TYPEOF(TRIM(DISTINCT t0.c85)), ((((v0.c0) NOT BETWEEN (x'1c1a') AND (t0.c85)))>=(json_insert(t0.c41, t0.c85, t0.c41, t0.c41, t0.c41)))) FROM v0, t0 WHERE (((((((((((((((x'')OR(0.8872914719169197)))OR(x'cfd0')))AND(0.5845674980257964)))AND('898038880')))OR(0Xfffffffff53ff7e1)))AND(NULL)))/((x'87a4' IN ())))); -- 0ms;
SELECT ((t0.c85 IN (t0.c41)) IN ()) FROM v0 WHERE ('79441019'); -- 0ms;
SELECT DISTINCT (((v0.c0 COLLATE RTRIM, TOTAL(t0.c85), COALESCE(DISTINCT '1416524733', t0.c85)))!=(((t0.c85 IN ()), ((t0.c85) NOT BETWEEN (NULL) AND (v0.c0)), ((t0.c41)<(t0.c41))))), (((t0.c41, t0.c41, t0.c85)) BETWEEN ((v0.c0, json_array_length(t0.c41, t0.c85), (t0.c85 IN ()))) AND ((CASE WHEN t0.c41 THEN t0.c41 ELSE v0.c0 END, ((t0.c41)*(t0.c41)), t0.c41 COLLATE RTRIM))), ('' IN ()), (((((t0.c41)AND(v0.c0)))OR(t0.c85)) IN ()), ((((t0.c41)) BETWEEN ((t0.c41)) AND ((v0.c0))) IN ()) FROM t0, v0 WHERE (((((((((('-198517470')AND(0.011840759755346042)))AND(NULL)))AND(x'')))OR('1181731465')) IN ())); -- 0ms;
SELECT ((((((((((t0.c85)AND(v0.c0)))AND(t0.c85)))AND(0.15141504884431234)))AND(v0.c0)))+(((v0.c0) NOT NULL))) FROM v0 WHERE (SQLITE_COMPILEOPTION_USED((0.18783314794133887 IN ('1168037260'))));SELECT DISTINCT ((((SUM(t0.c85))OR(((t0.c41) BETWEEN (t0.c41) AND (t0.c41)))))AND(CASE WHEN v0.c0 THEN 2026267370 WHEN v0.c0 THEN 0.07376243632409363 WHEN t0.c85 THEN t0.c41 END)) FROM v0, t0 WHERE ((+ (((x'17b2')>(1.108158469E9))))); -- 0ms;
SELECT TRIM(DISTINCT t0.c41, ((t0.c41) ISNULL)), (+ ('' COLLATE NOCASE)), t0.c41 FROM v0, t0 ORDER BY ((((t0.c85) NOT NULL))LIKE(((((v0.c0)AND(t0.c85)))AND(t0.c85))))  NULLS LAST; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ORDER BY 0.6703513236473897 ASC), ((IFNULL(DISTINCT v0.c0, v0.c0))*(((((t0.c41)OR(v0.c0)))AND(v0.c0)))), (MIN(t0.c85) IN (CAST(t0.c85 AS BLOB))) FROM t0 WHERE ('');SELECT DISTINCT ((((HEX(DISTINCT t0.c41))AND(((t0.c85)-(t0.c85)))))OR(NULL)) FROM v0;SELECT DISTINCT CAST(((((v0.c0)AND(x'2444')))AND(t0.c85)) AS BLOB) FROM t0, v0; -- 0ms;
SELECT t0.c41 FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((((((CASE t0.c41  WHEN t0.c85 THEN t0.c41 END)OR(CAST(v0.c0 AS BLOB))))AND(((v0.c0) BETWEEN (t0.c41) AND (t0.c85)))))AND((t0.c41 IN ()))))AND((+ (t0.c41)))) FROM v0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((- (IFNULL(v0.c0, v0.c0)))) OVER () FROM v0 WHERE (GLOB((0xffffffff97735379 IN ()), ((x'46b3')>=(0.5815337088434133)))); -- 0ms;
SELECT ((v0.c0 COLLATE RTRIM) BETWEEN (((((t0.c85)AND(t0.c41)))OR(t0.c41))) AND (t0.c41)), v0.c0, GROUP_CONCAT((((v0.c0))>=((v0.c0)))) OVER () FROM t0 WHERE (CASE (((('')OR(x'')))OR(-496634696))  WHEN ((0.09308514453019245) IS TRUE) THEN 1560121549 ELSE ((NULL) ISNULL) END);SELECT (MAX(t0.c41) IN ()) FROM v0 WHERE (CASE ((NULL)>>(x''))  WHEN TYPEOF(DISTINCT NULL) THEN ((0.52939884751949)%('68041913')) ELSE (x'' IN ()) END); -- 0ms;
SELECT x'' FROM v0, t0; -- 0ms;
SELECT ALL (~ (v0.c0)) COLLATE NOCASE, AVG(COUNT(*)) COLLATE RTRIM, v0.c0, ((t0.c41) IS TRUE), AVG(NULL COLLATE NOCASE) FROM v0, t0;SELECT DISTINCT TOTAL(((5.48349243E8)/(v0.c0))) OVER ( PARTITION BY CAST(CASE v0.c0  WHEN t0.c85 THEN t0.c41 WHEN t0.c85 THEN t0.c41 WHEN v0.c0 THEN t0.c85 WHEN t0.c41 THEN t0.c41 WHEN t0.c85 THEN v0.c0 WHEN v0.c0 THEN t0.c41 WHEN x'' THEN t0.c85 ELSE v0.c0 END AS TEXT), (((t0.c41 IN ())) NOT BETWEEN (((0x75e90d1e) NOT NULL)) AND (t0.c41 COLLATE BINARY))) FROM t0, v0; -- 0ms;
SELECT DISTINCT (((~ (t0.c41)))>=(v0.c0 COLLATE NOCASE)), ((((t0.c85) NOT BETWEEN (t0.c85) AND (t0.c85)))%((- (v0.c0)))), (((((((((t0.c41 IN ()))AND((v0.c0 IN ()))))AND(CASE t0.c85  WHEN t0.c85 THEN t0.c85 WHEN t0.c85 THEN v0.c0 WHEN t0.c85 THEN t0.c41 ELSE t0.c41 END)))OR(t0.c41 COLLATE BINARY)))OR(((t0.c41)>>(t0.c85)))), ((((((t0.c41))<((t0.c85)))))>=((((((((((NULL)AND(657784120)))OR(v0.c0)))AND(t0.c41)))OR(t0.c85))))), CASE ((t0.c41) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN NULL THEN (v0.c0 IN ()) END FROM t0 WHERE ((NOT (((NULL)*(0Xffffffffafa24786))))) LIMIT -907512152 OFFSET -1187753924;SELECT NULL FROM t0 NATURAL JOIN v0 WHERE (json(CAST(NULL AS REAL))); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c41 THEN ((((((((t0.c85)AND(t0.c85)))OR(v0.c0)))AND(t0.c41)))OR(t0.c85)) END FROM t0, v0; -- 0ms;
SELECT ALL CASE WHEN v0.c0 THEN t0.c41 END COLLATE NOCASE FROM t0, v0; -- 0ms;
SELECT ALL (~ (t0.c85)) COLLATE NOCASE FROM v0 WHERE (((0.4764338892190101) NOT BETWEEN ((- (NULL))) AND ((('U')%('Z')))));SELECT DISTINCT LIKELY(DISTINCT (v0.c0 IN ())) FROM t0 WHERE ((UPPER(DISTINCT '-1230822695') IN ())); -- 0ms;
SELECT DISTINCT t0.c85 FROM t0, v0 WHERE (CASE (('9%d^')/(''))  WHEN UPPER(DISTINCT 0.23475753610840144) THEN ((0.9641560657626971) NOT BETWEEN ('') AND ('뻪nS2W8r~*')) END); -- 0ms;
SELECT ALL ((((LTRIM(t0.c85))AND('zt6')))AND(0.8772588966925053)), GROUP_CONCAT(((((((((t0.c85)AND(t0.c41)))OR(t0.c41)))AND(v0.c0)))OR(t0.c85))), (((((t0.c85))<((-126434966)))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (LOWER(DISTINCT t0.c41))), (((((((((((t0.c85)AND('>h')))AND(t0.c85)))OR(t0.c85)))OR(t0.c41)), t0.c41 COLLATE NOCASE, ((t0.c41)>>(t0.c85)), CASE t0.c41  WHEN v0.c0 THEN t0.c41 WHEN v0.c0 THEN v0.c0 WHEN t0.c41 THEN t0.c41 ELSE t0.c41 END, x'611f'))<=((COUNT(*), CASE t0.c41  WHEN v0.c0 THEN t0.c41 END, (+ (t0.c41)), CASE t0.c85  WHEN '-367995648' THEN t0.c41 END, ((v0.c0)=(t0.c85))))), ((((v0.c0) NOTNULL))GLOB((t0.c85 IN (t0.c41)))) FROM t0 WHERE ((((('{b%y_<1') IS FALSE))LIKE(((0.6857841848767365)<=(2026267370))))) ORDER BY ((((((((((t0.c41)AND(t0.c41)))AND(v0.c0)))OR(t0.c85)))OR(v0.c0))) NOT BETWEEN (((((((((t0.c85)AND(v0.c0)))AND('1297605032')))OR(t0.c85)))AND(t0.c41))) AND (((((v0.c0)OR(t0.c41)))AND(t0.c85)))) DESC;SELECT ALL CAST((NOT ('])')) AS REAL), RANK() OVER ( GROUPS (((0.3586863427916237))<=((((t0.c85)>(v0.c0))))) PRECEDING), CAST((((v0.c0))!=((t0.c85))) AS BLOB) FROM v0 GROUP BY (((v0.c0 IN ()))+('j+' COLLATE RTRIM)), json(TRIM(t0.c41)), ((IFNULL(v0.c0, t0.c85))&(((t0.c41)<<(t0.c85)))) HAVING (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, CAST(v0.c0 AS INTEGER), (((t0.c41))==((t0.c85))))) AND (((NOT (t0.c41)), CAST(v0.c0 AS REAL), x''))) LIMIT 2135119684;SELECT DISTINCT ((t0.c41)LIKE(t0.c41 COLLATE NOCASE)) FROM t0 WHERE ((('1375613377' COLLATE BINARY) IS TRUE)); -- 0ms;
SELECT DISTINCT ((v0.c0) IS TRUE) COLLATE BINARY FROM t0;SELECT COALESCE(NULL, ((t0.c85) IS FALSE)) FROM t0 WHERE (((((0.4782236165529514)<=(0.897589589703826))) NOT BETWEEN (CAST('1459466110' AS TEXT)) AND (('' IN ())))); -- 0ms;
SELECT DISTINCT ((t0.c85)>(v0.c0)) COLLATE RTRIM FROM t0, v0 WHERE ('-1180826846') GROUP BY CAST((v0.c0 IN (NULL)) AS BLOB), CASE CAST('3l' AS REAL)  WHEN CASE '545863543'  WHEN t0.c41 THEN t0.c85 END THEN ((v0.c0) NOT BETWEEN (t0.c41) AND (t0.c85)) ELSE ((v0.c0)&(t0.c85)) END, UPPER(DISTINCT (((t0.c41))<=((v0.c0)))) HAVING (((t0.c41 IN (v0.c0, v0.c0))) NOT BETWEEN (((t0.c85) BETWEEN (t0.c41) AND (t0.c41))) AND (GROUP_CONCAT(t0.c85))); -- 0ms;
SELECT DISTINCT TOTAL(((v0.c0)-(t0.c85))) FROM v0, t0 WHERE ((((((('-81105281') BETWEEN (x'') AND (x'072a5122')))OR(((x'')AND(0xffffffff8549841b)))))OR(((((0.3252067973714934)OR(0X6916e29f)))AND(x''))))) UNION ALL SELECT ALL (NOT (t0.c41)) FROM t0, v0 WHERE (CAST((('1763107487')||('0.9033320581169034')) AS NUMERIC)); -- 0ms;
SELECT NULLIF(((t0.c85) NOTNULL), (+ (v0.c0))) FROM v0, t0 WHERE (json_valid(json_array_length(x'63b1')));SELECT DISTINCT MAX(CAST(t0.c41 AS BLOB)) FROM v0;SELECT DISTINCT (((t0.c85)<(v0.c0)) IN ()) FROM v0, t0 WHERE (CAST(((0x14b68ccf) ISNULL) AS INTEGER)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(v0.c0) OVER (), GROUP_CONCAT((((v0.c0)) NOT BETWEEN ((t0.c41)) AND ((0.8408705016766267)))) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS), (((v0.c0)) NOT BETWEEN ((t0.c41 COLLATE RTRIM)) AND ((UPPER(DISTINCT t0.c85)))) FROM t0, v0; -- 0ms;
SELECT DISTINCT (((v0.c0) NOT NULL) IN (((t0.c41)==(t0.c41)))) FROM v0, t0 WHERE (LOWER(DISTINCT ((((-1057893898)AND('Li')))AND(x'1cf6')))); -- 1ms;
SELECT DISTINCT PRINTF(CASE WHEN t0.c41 THEN t0.c41 END), ((((((((((((((((v0.c0)AND(t0.c85)))OR(t0.c41)))OR(v0.c0)))AND(t0.c41)))OR(AVG(t0.c85))))OR((NOT ('+W')))))AND(CAST(v0.c0 AS INTEGER))))AND(COUNT(t0.c85))), (((((v0.c0))>=((t0.c85)))) NOTNULL) FROM t0, v0; -- 0ms;
SELECT ALL x'' COLLATE BINARY FROM t0, v0 WHERE ((((((((((('890000906')AND('2081269245')))OR('')))OR(NULL)))OR(NULL))) NOT BETWEEN (CASE 'k-JL/'  WHEN '-1765673482' THEN x'' WHEN x'' THEN NULL WHEN x'' THEN '?bnn&' END) AND ((('-1446113784') NOTNULL)))); -- 0ms;
SELECT DISTINCT ((t0.c41)+(t0.c85)) FROM v0;SELECT DISTINCT ((SQLITE_SOURCE_ID()) BETWEEN (((t0.c41) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE v0.c0  WHEN t0.c85 THEN t0.c85 ELSE t0.c85 END)), CAST((((v0.c0, t0.c85, 'z-'))<((v0.c0, v0.c0, t0.c85))) AS BLOB), x'' FROM v0, t0; -- 0ms;
SELECT DISTINCT (((v0.c0, t0.c41, v0.c0)) BETWEEN ((v0.c0, v0.c0 COLLATE BINARY, (NOT (v0.c0)))) AND ((v0.c0, (- (v0.c0)), ((t0.c41) ISNULL)))) FROM v0, t0 WHERE (json_valid((~ (0.5998656174978859)))); -- 0ms;
SELECT DISTINCT ((((((((t0.c41)AND(t0.c41)))AND(t0.c41)))AND(v0.c0)))OR(t0.c85)) COLLATE BINARY, CASE v0.c0  WHEN ((v0.c0)<<(v0.c0)) THEN ((((t0.c41)OR(t0.c85)))OR(t0.c85)) END, NTH_VALUE(t0.c41, CAST(CAST(t0.c41 AS BLOB) AS REAL)) OVER () FROM v0, t0 GROUP BY CAST(v0.c0 COLLATE NOCASE AS NUMERIC), t0.c85, TRIM(CASE WHEN t0.c41 THEN t0.c41 END) ORDER BY t0.c85 ASC; -- 0ms;
SELECT GROUP_CONCAT(((t0.c85)+(v0.c0))) OVER () FROM v0;SELECT ALL MIN((- (t0.c85))), AVG(CAST(v0.c0 AS BLOB)) OVER ( GROUPS  UNBOUNDED PRECEDING), PERCENT_RANK() OVER () FROM v0 GROUP BY (+ (t0.c85)) COLLATE RTRIM HAVING CAST(((t0.c85) IS TRUE) AS INTEGER);SELECT DISTINCT (+ ((~ ('1591519477')))), 'k秵R	', ((((v0.c0) NOT NULL))<<(MIN(t0.c41))) FROM t0, v0 GROUP BY ((((v0.c0, t0.c41, v0.c0)) BETWEEN ((v0.c0, t0.c85, v0.c0)) AND ((v0.c0, t0.c41, 0.3149389059344434))) IN (v0.c0 COLLATE NOCASE)), ((v0.c0) BETWEEN (v0.c0) AND (t0.c85)) COLLATE RTRIM, PRINTF(((((((((t0.c85)OR(t0.c41)))OR(t0.c85)))AND(v0.c0)))AND(t0.c41)), v0.c0 COLLATE NOCASE, ((-177568798)>=(t0.c85))) LIMIT -1471851199; -- 0ms;
SELECT DISTINCT x'', (((+ ('(xq\nh')))IS NOT((- (t0.c85)))), (((v0.c0 IN ()))>(((t0.c85)%(v0.c0)))) FROM t0 ORDER BY ((((x'') NOT BETWEEN (0.45257477358516174) AND (t0.c41))) NOT BETWEEN ((~ (t0.c85))) AND (CASE t0.c85  WHEN t0.c85 THEN t0.c41 END)) DESC, v0.c0  NULLS FIRST;SELECT ALL RANK() OVER ( ORDER BY (~ (ABS(v0.c0)))  NULLS LAST, ((((((((0.35174789759154057)OR(CHANGES())))AND((('-499338228') IS TRUE))))AND(CASE t0.c41  WHEN t0.c41 THEN t0.c85 WHEN v0.c0 THEN t0.c41 WHEN v0.c0 THEN v0.c0 END)))OR(TYPEOF(DISTINCT t0.c41))) ASC  NULLS LAST), IFNULL(CASE WHEN t0.c85 THEN t0.c41 WHEN t0.c85 THEN v0.c0 WHEN t0.c85 THEN v0.c0 ELSE v0.c0 END, (+ (v0.c0))), CAST(((v0.c0)*(t0.c85)) AS TEXT) FROM t0 WHERE (NULL);SELECT DISTINCT ((((v0.c0 IN (v0.c0, v0.c0))))>=(((t0.c85 IN (0.5744578453671506))))), ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)>((NOT (t0.c41)))), (- (((((((((v0.c0)OR(v0.c0)))AND(t0.c41)))OR(t0.c41)))OR(t0.c85)))) FROM t0, v0 WHERE (UNLIKELY(('994754683' IN ()))); -- 0ms;
SELECT DISTINCT ((((((t0.c85)%(t0.c41)))AND(CAST(v0.c0 AS REAL))))AND(GROUP_CONCAT(t0.c85))) FROM v0;SELECT DISTINCT CAST(((t0.c41) NOT BETWEEN (v0.c0) AND (t0.c85)) AS BLOB), AVG(((((((((0.35081491516522745)OR(v0.c0)))OR(t0.c41)))OR(v0.c0)))AND(t0.c41))), (+ (((t0.c41) NOT BETWEEN (t0.c41) AND (t0.c85)))) FROM t0;SELECT DISTINCT json_array_length(LIKELIHOOD(DISTINCT t0.c41, 0.09600598971157548)) FROM t0; -- 0ms;
SELECT DISTINCT TOTAL(PRINTF(t0.c41)) OVER ( ORDER BY NULL  NULLS FIRST), (((v0.c0 IN (v0.c0)))OR(t0.c85)), ((((((0.419091198766375) IS TRUE))OR((~ (t0.c85)))))AND(NULL)), CASE (((t0.c41, t0.c41, v0.c0, x'6b42ed45', t0.c85)) BETWEEN ((t0.c41, t0.c41, t0.c41, t0.c41, '')) AND ((v0.c0, t0.c41, NULL, '1367477360', v0.c0)))  WHEN CASE t0.c41  WHEN t0.c41 THEN v0.c0 ELSE t0.c85 END THEN CASE NULL  WHEN t0.c41 THEN t0.c85 END END, ((((v0.c0)%(x'0cf7'))) NOT BETWEEN (((t0.c85)|(t0.c85))) AND ((~ (t0.c85)))) FROM t0;SELECT DISTINCT (- (((((v0.c0)AND(t0.c85)))AND(v0.c0)))), ((((((((((t0.c41)<<(t0.c41)))AND(CASE t0.c85  WHEN t0.c85 THEN t0.c41 WHEN 0.1316634419999626 THEN t0.c85 WHEN t0.c85 THEN v0.c0 ELSE v0.c0 END)))OR(NULL)))OR(((((v0.c0)AND(0x10ed63f4)))AND(t0.c41)))))OR(DATETIME(t0.c85, v0.c0, t0.c85, t0.c41, t0.c41, t0.c41, v0.c0))), ((((-8.0165861E8)OR(((((1572557648)OR(-1713060276)))AND(v0.c0)))))AND((- (v0.c0)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT (((UNLIKELY(t0.c41)))==(((((t0.c41, t0.c85, v0.c0)) NOT BETWEEN ((v0.c0, t0.c85, t0.c41)) AND ((t0.c41, 0.3846381165181466, t0.c85)))))), ((((v0.c0)<<(t0.c85)))>(((t0.c41) NOT BETWEEN (t0.c41) AND (t0.c85)))), CAST(t0.c85 AS INTEGER) FROM v0, t0 WHERE (CAST((('\r\E!')>=(0.1556576059388547)) AS INTEGER)); -- 0ms;
SELECT ALL (NOT (MAX(t0.c41))) FROM t0, v0 WHERE ((((('-1427652985')IS NOT(8.48370129E8)))>=(((x'')GLOB(x''))))); -- 0ms;
SELECT (((((((v0.c0)OR(v0.c0)))OR(t0.c41)), v0.c0 COLLATE RTRIM, TOTAL('-1706168'), ((((1.13286349E9)AND(v0.c0)))AND(t0.c41)), (~ (x'a705'))))==((CAST(v0.c0 AS TEXT), t0.c85, GROUP_CONCAT(v0.c0), v0.c0 COLLATE BINARY, CAST(t0.c85 AS BLOB)))) FROM v0, t0 WHERE (((CAST(0Xffffffffec398bef AS INTEGER)) IS FALSE)); -- 0ms;
SELECT x'' FROM v0, t0 LIMIT 633360464; -- 0ms;
SELECT DISTINCT IFNULL(1.180728046E9, '-1620144426') FROM v0, t0; -- 1ms;
SELECT DISTINCT CASE (NOT (v0.c0))  WHEN t0.c41 COLLATE BINARY THEN CAST(t0.c41 AS INTEGER) ELSE GROUP_CONCAT(t0.c85) END FROM t0, v0 ORDER BY (((- (v0.c0)))IS(t0.c85 COLLATE RTRIM)), ((((~ (NULL))))<=(((v0.c0 IN ()))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CASE t0.c41  WHEN t0.c41 THEN t0.c41 WHEN t0.c41 THEN v0.c0 WHEN t0.c85 THEN t0.c85 WHEN '-2039702095' THEN t0.c85 WHEN t0.c41 THEN x'856b' ELSE t0.c41 END)OR(CASE WHEN t0.c41 THEN t0.c41 END)) FROM t0, v0 WHERE ((((NULL, '', NULL, NULL, 0.6400488742332814)) BETWEEN (((('-785595683')>>('-20940982')), ABS(DISTINCT '\n1'), CASE NULL  WHEN '' THEN '0.6092195204888009' WHEN 't(竮~M' THEN x'155d' WHEN 0.7583134039012347 THEN 0.404467237581144 ELSE 'l\n' END, ((NULL)AND(x'd8e2abea')), ((((((((NULL)OR(NULL)))AND(x'')))AND(x'')))OR(x'')))) AND (((((('i%w')AND(x'285cfc68')))OR('1490087212')), (((NULL)) BETWEEN ((x'4b3f')) AND ((x''))), (- ('151276205')), (((0.7125801307196591, x'', 0x10dd9422)) BETWEEN (('957688317', 0.1074788067934277, 0.2690950211443651)) AND ((x'', 0.16273215410261288, -7.55095634E8))), ((1.744974166E9) BETWEEN (x'') AND (0.15838264793401835)))))); -- 0ms;
SELECT ALL CASE WHEN (t0.c41 IN ()) THEN t0.c85 ELSE ((t0.c85)LIKE(v0.c0)) END, (((((((t0.c41)AND(t0.c41)))OR(t0.c41))))==(((((v0.c0, v0.c0, v0.c0))==((v0.c0, t0.c85, NULL)))))), LAG(((((((((((x'4be2')AND(0x76449914)))AND(375229822)))OR(v0.c0)))AND(v0.c0)))<(x'')), (NOT (v0.c0)) COLLATE BINARY COLLATE BINARY, ((LTRIM(v0.c0, v0.c0)) ISNULL)) OVER (), v0.c0, GROUP_CONCAT((t0.c85 IN ())) COLLATE BINARY FROM v0 WHERE (((((x'') ISNULL)) BETWEEN ((('-0.0') NOTNULL)) AND (CAST('p!' AS INTEGER)))) GROUP BY NULL;SELECT DISTINCT ((((((((((t0.c85)AND(t0.c41)))AND(t0.c41)))AND(t0.c41)))AND(v0.c0))) IS FALSE) FROM t0;SELECT ALL GROUP_CONCAT(((t0.c85)||(v0.c0))), ('1051109188' IN ()), ((((((v0.c0)AND(t0.c85)))AND(v0.c0))) NOT BETWEEN (t0.c85 COLLATE NOCASE) AND (CASE WHEN t0.c41 THEN t0.c41 END)) FROM v0, t0 WHERE (CASE WHEN ((-3.46761553E8)==(NULL)) THEN CASE -1.334959163E9  WHEN x'' THEN '-138513040' END END) ORDER BY CAST(t0.c41 COLLATE RTRIM AS REAL); -- 0ms;
SELECT DISTINCT t0.c41 FROM v0 WHERE (TRIM(DISTINCT (~ (-1509773485))));SELECT ((COUNT(*))>>((v0.c0 IN ()))) FROM t0, v0 WHERE ((NOT (((x'9d9a')>=(NULL))))) ORDER BY ((v0.c0) IS FALSE) COLLATE NOCASE DESC; -- 0ms;
SELECT MIN(((v0.c0)LIKE(t0.c41))), CAST(x'' AS INTEGER), ((CAST(t0.c41 AS REAL))>((~ (v0.c0)))) FROM t0, v0; -- 0ms;
SELECT ALL ((CAST(t0.c41 AS INTEGER))||(CAST(t0.c85 AS BLOB))) FROM v0, t0; -- 0ms;
SELECT (NOT (t0.c41)), (((((v0.c0)) BETWEEN ((t0.c41)) AND ((t0.c85)))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((+ (t0.c85)))), t0.c85 COLLATE BINARY FROM v0, t0 ORDER BY ((((((v0.c0))>((t0.c85))), (((v0.c0, v0.c0, t0.c41))=(('w', t0.c85, v0.c0))), ((((v0.c0)OR(v0.c0)))OR(t0.c41))))!=((((('Ἠr1?4KAs㵑', t0.c85, t0.c41)) NOT BETWEEN ((t0.c41, t0.c41, x'eabe')) AND ((t0.c41, '375229822', v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))); -- 0ms;
SELECT DISTINCT TOTAL(CASE t0.c85  WHEN t0.c41 THEN t0.c85 ELSE t0.c41 END COLLATE BINARY) OVER (), LIKELIHOOD(CASE WHEN '2FbZ䶑' THEN t0.c41 WHEN v0.c0 THEN t0.c85 WHEN t0.c85 THEN v0.c0 END, 0.3502926301200696), t0.c41 COLLATE RTRIM FROM v0 WHERE (NULLIF(DISTINCT (('')*('W		!Rv,h')), ((x'')IS NOT('-656606861'))));SELECT DISTINCT (((((v0.c0) IS TRUE)))<>((((((((((t0.c41)AND(v0.c0)))OR(v0.c0)))AND(t0.c85)))OR(t0.c41))))), CAST((NOT (t0.c85)) AS NUMERIC), AVG(CAST(t0.c85 AS INTEGER)) FROM v0 LIMIT 661026452 OFFSET 627686846;SELECT DISTINCT ((((t0.c85) BETWEEN (t0.c41) AND (x'')))OR(CASE t0.c85  WHEN v0.c0 THEN t0.c85 END)) FROM v0;SELECT LAST_VALUE(CASE ((t0.c41) BETWEEN (t0.c85) AND (t0.c41))  WHEN UPPER(t0.c41) THEN (t0.c41 IN (t0.c85)) WHEN ((((t0.c41)OR(t0.c41)))OR(t0.c85)) THEN ((t0.c41)+(t0.c85)) WHEN t0.c41 THEN ((t0.c41) IS FALSE) END) OVER ( ORDER BY ((((-91114101 IN ())))==((t0.c85))) ASC  NULLS LAST, ((0.1074788067934277) IS TRUE) ASC  NULLS LAST), CASE WHEN CAST(t0.c85 AS INTEGER) THEN ((((((((v0.c0)OR(t0.c41)))AND(t0.c85)))OR(t0.c85)))AND(t0.c85)) END, LENGTH((- (t0.c85))) FROM t0 ORDER BY ((+ (v0.c0)) IN ()) DESC, ((((0.35103984760642126)OR(((t0.c41) BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)%(t0.c85))))  NULLS FIRST;SELECT CAST(CAST('' AS NUMERIC) AS BLOB), NTILE(((t0.c85 COLLATE RTRIM)%(((NULL)!=('-123490478'))))) OVER (), ((((t0.c41) NOT BETWEEN (t0.c41) AND (t0.c41))) NOTNULL) FROM t0, v0 WHERE ('YV667'); -- 1ms;
SELECT ALL LEAD((~ (((t0.c85) IS FALSE))), (('2]/>uZ4B^') NOT NULL), CASE (((t0.c41)) BETWEEN ((t0.c85)) AND ((NULL)))  WHEN (((t0.c85)) BETWEEN ((t0.c85)) AND ((t0.c85))) THEN (~ (t0.c41)) ELSE (((t0.c41)) NOT BETWEEN ((NULL)) AND ((t0.c41))) END) OVER (), ((((v0.c0) IS FALSE))>(CAST(t0.c85 AS TEXT))), LEAD(t0.c41 COLLATE RTRIM, ((((t0.c41)>(t0.c41)))IS((((t0.c41))<=((t0.c85))))), ((((((((((t0.c85)AND(t0.c41)))OR(NULL)))OR(t0.c85)))AND(t0.c41))) NOTNULL)) OVER () FROM t0;SELECT ALL t0.c85 FROM t0 WHERE (0.8576837463941546); -- 0ms;
SELECT ((((load_extension(t0.c41))OR(t0.c85 COLLATE BINARY)))AND((((t0.c85)) NOT BETWEEN ((v0.c0)) AND ((t0.c41))))) FROM t0, v0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((t0.c85 COLLATE BINARY))<>((((v0.c0) ISNULL)))), GROUP_CONCAT(((t0.c85) BETWEEN (t0.c85) AND (t0.c85))) OVER (), x'' FROM v0, t0 GROUP BY CAST(CAST(t0.c41 AS TEXT) AS TEXT) HAVING (((t0.c41) NOT BETWEEN (v0.c0) AND (t0.c85)) IN ()) ORDER BY ((NOT (t0.c85)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((t0.c41) NOT NULL), CAST(CAST(t0.c41 AS INTEGER) AS TEXT), FIRST_VALUE(CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN ()) WHEN JULIANDAY(0.4375753840103672, v0.c0, v0.c0, v0.c0, v0.c0) THEN (- (v0.c0)) WHEN v0.c0 THEN CAST('4_' AS REAL) END) OVER (), json_array_length((t0.c85 IN (t0.c85))), ((((v0.c0)&(t0.c85)))>(0.8222494897433529)) FROM v0 WHERE ('-656606861') ORDER BY ((((v0.c0) BETWEEN (t0.c85) AND (t0.c85))) ISNULL) ASC;SELECT ALL SUM((((t0.c41)) NOT BETWEEN ((t0.c41)) AND ((t0.c85)))) FROM t0 GROUP BY CASE ((t0.c41) NOTNULL)  WHEN (NOT (t0.c85)) THEN (NOT (v0.c0)) WHEN CAST(t0.c85 AS BLOB) THEN (((t0.c85, t0.c85, t0.c85)) BETWEEN ((t0.c41, v0.c0, t0.c85)) AND ((t0.c85, t0.c41, t0.c85))) WHEN CAST(v0.c0 AS REAL) THEN (((('Xx')AND(v0.c0)))OR(t0.c85)) END, ((((t0.c85)&(t0.c85)))IS NOT(CAST(t0.c41 AS TEXT))), ((((v0.c0)>>(t0.c41))) BETWEEN ((v0.c0 IN ())) AND (t0.c41));SELECT DISTINCT LEAD(CAST(((v0.c0) NOT BETWEEN (t0.c41) AND (v0.c0)) AS REAL), -2123857455, ((((v0.c0) IS TRUE)) IS FALSE)) OVER () FROM t0, v0 WHERE (''); -- 0ms;
SELECT (+ (ABS(DISTINCT t0.c41))), (NOT (CASE WHEN t0.c41 THEN t0.c41 END)), (6.8832848E8 IN ()) FROM t0 WHERE ((((((NOT (1155157661)))OR((((x'', 0.6760367559480863, x'13a1', NULL, ''))>=((0.30397052183091167, 0.0035721889762214687, 0x1415247c, 0.10983561561699029, '%3'))))))OR(((x'')<('-432026643'))))); -- 0ms;
SELECT DISTINCT SUM(NULL) OVER () FROM t0 WHERE (((((NULL))=((0.7271961508518021))) IN ())) LIMIT 565132285; -- 0ms;
SELECT DISTINCT ((((t0.c85)>>(t0.c85))) NOT BETWEEN (((t0.c41)<=(t0.c85))) AND (CASE v0.c0  WHEN v0.c0 THEN t0.c85 END)), (highlight(x'', t0.c85, t0.c41, v0.c0) IN ()), CASE v0.c0 COLLATE NOCASE  WHEN (((t0.c41)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CAST(t0.c85 AS BLOB) ELSE x'' END FROM t0 WHERE (CASE WHEN x'' THEN '-2024688541' END COLLATE BINARY);SELECT ((((t0.c85 COLLATE RTRIM)OR(((((v0.c0)AND(t0.c41)))OR(t0.c85)))))AND(NULL)) FROM v0 WHERE ((((- ('-1795529953')))>(0.3318179126653813))) ORDER BY (CAST(t0.c85 AS TEXT) IN ())  NULLS FIRST, (((((234270992, t0.c85, '0.36374782994826893')) BETWEEN ((v0.c0, t0.c41, v0.c0)) AND ((t0.c85, t0.c41, v0.c0)))) BETWEEN ((((t0.c41)) BETWEEN (('0.03214923818412774')) AND ((t0.c41)))) AND (((t0.c85) ISNULL))) DESC  NULLS FIRST;SELECT DISTINCT ((((t0.c41) NOT BETWEEN (t0.c85) AND (v0.c0)))<=(CASE t0.c85  WHEN v0.c0 THEN v0.c0 END)), ((((t0.c41)OR(t0.c85)))OR(0X69986354)) COLLATE RTRIM, (((t0.c41)*(v0.c0)) IN ()) FROM t0;SELECT DISTINCT CAST(CAST(x'5922' AS NUMERIC) AS INTEGER), ((((t0.c85) NOTNULL))<<(IFNULL(v0.c0, v0.c0))), LIKELIHOOD(DISTINCT UPPER(t0.c85), 0.934894668088687), json_array_length(((v0.c0)<(v0.c0)), (t0.c41 IN ())), LEAD((NOT (((v0.c0) IS FALSE))), CASE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END  WHEN (v0.c0 IN (v0.c0)) THEN (~ (v0.c0)) WHEN (+ (v0.c0)) THEN ((0.052637211017003804) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN v0.c0 COLLATE NOCASE END, v0.c0 COLLATE NOCASE) OVER () FROM v0;SELECT DISTINCT CASE json_insert(x'', t0.c41, v0.c0)  WHEN ((t0.c41)*(v0.c0)) THEN 0X52f30c6a END FROM v0, t0; -- 0ms;
SELECT (((((((((((v0.c0, t0.c85, v0.c0)) BETWEEN ((v0.c0, t0.c41, t0.c85)) AND ((t0.c41, t0.c85, t0.c41))))OR(x'')))OR(((t0.c85) NOT BETWEEN (t0.c85) AND (v0.c0)))))AND(((((((((NULL)AND(t0.c41)))OR(t0.c41)))AND(t0.c85)))OR(t0.c85)))))AND(NULL)) FROM t0 WHERE ((((0X3e6d9ce6 IN (x'9c05'))) IS FALSE)) GROUP BY CASE ((t0.c41)-(t0.c85))  WHEN ((((((((t0.c41)OR(t0.c41)))AND(v0.c0)))AND(t0.c85)))OR(t0.c41)) THEN ((t0.c85) NOT BETWEEN ('') AND (t0.c41)) END, (CAST(v0.c0 AS NUMERIC) IN (((t0.c41)>(v0.c0)), ((t0.c41)||(t0.c41)))), ((x'')%(((v0.c0)==(x'')))) LIMIT -1049709573;SELECT ALL ((CAST(t0.c85 AS INTEGER)) BETWEEN (LIKELY(v0.c0)) AND (((('1423530968')) BETWEEN ((v0.c0)) AND ((t0.c85))))), ((CAST(t0.c85 AS TEXT))/((v0.c0 IN ()))), LEAD((((t0.c41)) BETWEEN ((UNLIKELY(t0.c41))) AND (((((t0.c41)) NOT BETWEEN ((t0.c85)) AND ((t0.c41)))))), t0.c85, ((((((((CASE t0.c41  WHEN t0.c41 THEN t0.c41 END)AND(CAST(t0.c85 AS BLOB))))OR(-1.203853309E9)))OR(NULLIF(t0.c85, t0.c41))))OR(t0.c41))) OVER ( PARTITION BY t0.c41, ((((((t0.c85)OR(t0.c41)))OR(v0.c0))) ISNULL)) FROM t0 WHERE (NULL);SELECT DISTINCT CASE ((((((((v0.c0)OR(NULL)))AND(t0.c85)))AND(t0.c85)))AND(0.5634171092450322))  WHEN HEX(v0.c0) THEN t0.c85 COLLATE NOCASE ELSE v0.c0 COLLATE BINARY END FROM t0 ORDER BY '('  NULLS FIRST;SELECT DISTINCT COUNT((t0.c41 IN ())) OVER () FROM t0 WHERE (0.013083599619130193); -- 0ms;
SELECT ((v0.c0) NOT BETWEEN ((((v0.c0, t0.c85, t0.c41)) NOT BETWEEN ((v0.c0, t0.c41, t0.c85)) AND ((t0.c41, v0.c0, t0.c85)))) AND (SUM(v0.c0))) FROM v0 WHERE ((NOT (((NULL)GLOB('])1VT禎Dw')))));SELECT DISTINCT CAST(t0.c85 AS NUMERIC) COLLATE BINARY COLLATE RTRIM FROM t0, v0 ORDER BY t0.c41  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((0.13277154810935576)IS(CASE 0.6476738858245363  WHEN t0.c41 THEN v0.c0 ELSE v0.c0 END)) FROM v0;SELECT (((((t0.c41) NOT BETWEEN (t0.c85) AND (t0.c41))))<>((((((t0.c41)AND(t0.c85)))OR(t0.c41))))) FROM t0, v0 WHERE ((json('') IN ())); -- 0ms;
SELECT DISTINCT ((((t0.c85) ISNULL)) ISNULL), (((v0.c0)) NOT BETWEEN ((MAX(x'f26f'))) AND ((((t0.c41) BETWEEN (v0.c0) AND (t0.c41))))), ((t0.c41)-((t0.c85 IN ()))), x'', ((CASE t0.c41  WHEN t0.c41 THEN t0.c85 END)>('U|N/*')) FROM v0 WHERE (((0Xffffffffc16eb3fb) NOTNULL) COLLATE RTRIM);SELECT DISTINCT NULL FROM t0, v0 GROUP BY ((v0.c0) BETWEEN (v0.c0) AND (t0.c41)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (((((t0.c41, t0.c41, t0.c85)) NOT BETWEEN ((NULL, v0.c0, t0.c41)) AND ((t0.c85, v0.c0, '-1719309095')))) ISNULL), CASE CASE WHEN '0.4015938995907523' THEN v0.c0 ELSE v0.c0 END  WHEN (((t0.c85)) NOT BETWEEN ((t0.c85)) AND ((v0.c0))) THEN COUNT(*) END, LOWER(0.7971227756131969) FROM t0 WHERE ((((((((((((((((('0.3302725393623319')OR('-1741671068')))AND(0X6defc3a0)))AND(574602921)))AND(NULL)))OR(((NULL)/(x'')))))OR((('l%gayz㨟꧖/') NOTNULL))))OR(((x'') BETWEEN ('+T') AND ('1552929126')))))OR(CAST('dKir0!<' AS INTEGER)))) GROUP BY t0.c85 HAVING (((((('-1140932768'))=((v0.c0)))))<((((t0.c85) ISNULL)))) LIMIT -879465720 OFFSET 2135093099;SELECT DISTINCT (((v0.c0)) BETWEEN ((CASE WHEN t0.c41 THEN v0.c0 ELSE t0.c85 END)) AND ((TRIM(t0.c85)))), CASE CASE t0.c41  WHEN NULL THEN t0.c41 END  WHEN (((t0.c41)) NOT BETWEEN ((t0.c85)) AND ((t0.c41))) THEN ((t0.c85)==(t0.c41)) END, (COUNT(*) IN ()) FROM t0, v0; -- 0ms;
SELECT DISTINCT NULL FROM t0, v0 WHERE ((- ((x'' IN ())))); -- 0ms;
SELECT DISTINCT (((v0.c0) NOT BETWEEN (t0.c85) AND (t0.c41)) IN ()), (((~ (t0.c85))) NOT NULL), '.GN⨓OH%' FROM v0, t0 LIMIT -2109605044; -- 0ms;
SELECT DISTINCT (('2113424104' COLLATE NOCASE)%(((v0.c0) ISNULL))) FROM v0; -- 0ms;
SELECT x'', CASE WHEN ((t0.c41) NOTNULL) THEN NULL WHEN CAST(t0.c41 AS REAL) THEN ((v0.c0)GLOB(v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN CASE WHEN t0.c85 THEN t0.c41 END WHEN ((v0.c0) BETWEEN (v0.c0) AND (x'e61d')) THEN ((((((((v0.c0)OR(t0.c41)))AND(t0.c41)))OR(t0.c41)))OR(t0.c85)) WHEN (t0.c41 IN ()) THEN ABS(v0.c0) ELSE ((t0.c41) NOT BETWEEN (t0.c85) AND (v0.c0)) END, GROUP_CONCAT(((((((((t0.c41)OR(t0.c85)))OR(t0.c41)))AND(t0.c41)))OR(v0.c0))) OVER () FROM v0, t0; -- 1ms;
SELECT ((((t0.c41) NOT BETWEEN (t0.c41) AND (v0.c0)))+(((v0.c0)<>(t0.c41)))) FROM t0 WHERE ((((((NULL)) NOT BETWEEN ((0X467b750c)) AND (('')))) IS TRUE));SELECT DENSE_RANK() OVER ( RANGE  CURRENT ROW), (((t0.c41) NOTNULL) IN ()), ((LOWER(t0.c85))!=(PRINTF(t0.c85))) FROM v0;SELECT DISTINCT ((((t0.c41)-(t0.c41))) NOT BETWEEN ((v0.c0 IN (t0.c41))) AND (((((t0.c41)OR(t0.c85)))AND(v0.c0)))) FROM t0, v0; -- 0ms;
SELECT DISTINCT NTH_VALUE(CAST((t0.c41 IN ()) AS NUMERIC), ((+ (t0.c85)) IN ())) OVER () FROM t0 WHERE (ABS(DISTINCT CAST(534163749 AS NUMERIC)));SELECT CAST(((v0.c0)-(0.6024984301985292)) AS BLOB) FROM t0, v0 WHERE (((CAST(9.01499201E8 AS TEXT))AND((('')*(-2.109259915E9))))); -- 0ms;
SELECT DISTINCT CAST((t0.c41 IN (v0.c0, x'')) AS NUMERIC) FROM t0 WHERE ((((('') NOT BETWEEN (0.8712865666507911) AND (-2056747168)))<<(((x'') IS TRUE))));SELECT DISTINCT LEAD((((t0.c41)) BETWEEN (((NOT (t0.c85)))) AND ((0X408523a8))), TRIM(CASE WHEN t0.c41 THEN t0.c85 ELSE t0.c85 END), (NOT ((+ (t0.c85))))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT 1.3025002E7 FROM v0, t0 WHERE ((((~ ('1803490527')))>=(((278902928)>=(0.03850791935930675))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE WHEN t0.c85 THEN t0.c41 WHEN t0.c85 THEN t0.c85 WHEN t0.c85 THEN t0.c41 END COLLATE BINARY) OVER () FROM t0, v0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((0.1543668924014301)AND(v0.c0))) FROM v0 WHERE ((- (((0X0) NOTNULL)))); -- 0ms;
SELECT COUNT(((t0.c41) BETWEEN (v0.c0) AND (t0.c85))) OVER (), ((t0.c85 IN ()) IN ()), t0.c85 FROM t0;SELECT t0.c41 FROM v0 GROUP BY CAST(((((t0.c85)OR(t0.c85)))AND(t0.c85)) AS NUMERIC), ((((v0.c0)-(t0.c41))) NOT BETWEEN (((t0.c41) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((((((((t0.c85)OR(t0.c85)))OR(t0.c41)))OR(t0.c85)))AND(t0.c85)))), (((+ (t0.c85)))%('29895958')) HAVING v0.c0;SELECT (- (t0.c41)) FROM t0, v0 WHERE (((CAST(NULL AS REAL)) BETWEEN (('en' IN ())) AND (('' IN ())))); -- 0ms;
SELECT DISTINCT ((v0.c0)|(CAST(v0.c0 AS TEXT))) FROM t0, v0; -- 0ms;
SELECT ALL ((((((((t0.c41)OR(((t0.c85) NOT NULL))))OR(t0.c85 COLLATE BINARY)))OR(0.9366423096322345)))AND((+ (v0.c0)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((CASE v0.c0  WHEN v0.c0 THEN t0.c41 ELSE t0.c85 END)||((((t0.c85))!=((v0.c0))))) FROM t0, v0 GROUP BY CAST((((x'b868'))>((t0.c41))) AS BLOB) LIMIT 928199901 OFFSET 1130836657; -- 1ms;
SELECT DISTINCT ((t0.c85) NOTNULL) COLLATE BINARY, v0.c0, (((t0.c85, ((t0.c85) IS TRUE), CAST(t0.c41 AS TEXT)))>=((((t0.c41) IS FALSE), v0.c0 COLLATE NOCASE, ((t0.c41)IS(t0.c41))))) FROM v0, t0 GROUP BY (((v0.c0)==(t0.c85)) IN ()) ORDER BY CASE (- (v0.c0))  WHEN ((((t0.c85)AND(v0.c0)))AND(t0.c41)) THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c0)*(t0.c85)) THEN QUOTE(t0.c41) WHEN CASE WHEN v0.c0 THEN t0.c85 WHEN 0.709728467785169 THEN t0.c85 WHEN t0.c41 THEN t0.c41 WHEN t0.c85 THEN t0.c41 WHEN v0.c0 THEN 0.0535403301585301 ELSE t0.c41 END THEN (NOT (t0.c41)) WHEN ((t0.c85)>=(v0.c0)) THEN ((t0.c85) IS FALSE) WHEN ((((((((t0.c85)OR(t0.c85)))OR(t0.c85)))OR(t0.c85)))OR(t0.c41)) THEN ((v0.c0)/(t0.c85)) ELSE NULL END  NULLS FIRST LIMIT 2087854380 OFFSET -625021397; -- 0ms;
SELECT DISTINCT (~ (t0.c85)) COLLATE RTRIM COLLATE NOCASE FROM v0, t0 WHERE ((~ (((0.14963286964624778) ISNULL)))); -- 0ms;
SELECT TRIM((v0.c0 IN ())) FROM v0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(v0.c0) IN ()) FROM v0 WHERE (((0.4963384651946706) BETWEEN (0.22001691705034931) AND ('-1427652985')) COLLATE RTRIM) LIMIT -1427652985; -- 0ms;
SELECT ALL TYPEOF(DISTINCT CASE WHEN v0.c0 THEN NULL END) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((t0.c85)GLOB(t0.c41)) COLLATE NOCASE, (NULLIF(t0.c41, t0.c41) IN (((((((((t0.c41)AND(t0.c41)))OR(NULL)))OR(v0.c0)))AND(t0.c85)))), (NOT (((t0.c85) IS FALSE))) FROM t0, v0 LIMIT -1796417391 OFFSET 1238092283; -- 0ms;
SELECT ALL (~ (((t0.c85) BETWEEN (v0.c0) AND (t0.c85)))) FROM t0 WHERE ((((0.23801482350295167)GLOB(x'')) IN ()));SELECT DISTINCT ((((CASE t0.c41  WHEN t0.c41 THEN t0.c85 END)OR(((v0.c0) NOT BETWEEN (0.7349917668795394) AND (t0.c41)))))AND(ABS(t0.c41))), (~ (CAST(v0.c0 AS BLOB))), TOTAL(((v0.c0) ISNULL)) OVER (), (((ROUND(v0.c0, v0.c0)))>((CAST(t0.c41 AS BLOB)))), (('놢h') BETWEEN ((NOT (t0.c41))) AND (CASE WHEN t0.c85 THEN t0.c41 WHEN t0.c85 THEN t0.c85 WHEN '0.7784483827684826' THEN v0.c0 WHEN t0.c41 THEN t0.c41 WHEN v0.c0 THEN v0.c0 WHEN t0.c85 THEN t0.c41 WHEN t0.c41 THEN t0.c41 ELSE t0.c85 END)) FROM t0 WHERE ((((CAST(0.3302725393623319 AS REAL)))<=(((('-328982549')<>(x''))))));SELECT DISTINCT COUNT(*), CAST(v0.c0 AS BLOB) COLLATE BINARY, SUM(0.06095618520811685) OVER () FROM v0 GROUP BY t0.c41;SELECT CAST((((('WSWyM')AND(t0.c41)))AND(t0.c41)) AS TEXT) FROM v0;SELECT ALL (~ (((v0.c0)GLOB(t0.c41)))), ((((v0.c0))<=((v0.c0))) IN ()), (((v0.c0)) BETWEEN ((MAX(v0.c0))) AND (((((t0.c85))<>((t0.c85)))))) FROM t0, v0 WHERE (((((('76304717', x'1b9f', 0.5502920972184924)) BETWEEN ((1135011748, 0x78c662ea, x'a72c')) AND ((NULL, 123797558, 6.8832848E8))))>>(CAST(x'' AS TEXT)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c85 THEN t0.c85 WHEN 0Xffffffff80516d0a THEN t0.c41 WHEN t0.c41 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN ((t0.c41 IN (t0.c41))) AND (CAST(x'' AS NUMERIC))) FROM t0;SELECT ALL (((((NOT (t0.c85)))OR((t0.c85 IN ()))))OR(((v0.c0)>(t0.c41)))) FROM v0, t0 WHERE (LENGTH(0.17114427404183485 COLLATE BINARY)); -- 0ms;
SELECT ALL (~ (t0.c41 COLLATE RTRIM)), ((((((((((t0.c41)AND(t0.c41)))AND(NULL)))OR(t0.c41)))AND(t0.c85)))/(((v0.c0)IS(v0.c0)))), NULL FROM t0, v0; -- 0ms;
SELECT CASE CAST(t0.c41 AS BLOB)  WHEN COUNT(*) THEN MIN(t0.c41) END FROM t0, v0; -- 0ms;
SELECT ((((CASE WHEN t0.c41 THEN t0.c41 ELSE v0.c0 END)AND(MIN(v0.c0))))AND(((v0.c0)||(v0.c0)))) FROM v0;SELECT DISTINCT (((t0.c85) BETWEEN (v0.c0) AND (v0.c0)) IN ()) FROM v0; -- 0ms;
SELECT (((((t0.c41))<>((t0.c85))))>=(AVG(t0.c85))), (((t0.c41, v0.c0, 'Hp,')) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(t0.c41)), v0.c0 COLLATE BINARY, ((t0.c41)AND(v0.c0)))) AND ((((t0.c41) IS FALSE), ((v0.c0) BETWEEN (t0.c85) AND (t0.c85)), ((t0.c85)&(t0.c41))))), (NOT (((0.4015938995907523)IS NOT(0.6408784667730373)))) FROM t0, v0 WHERE ((((CAST(0X77c716f6 AS NUMERIC)))<(((((('&%')AND(9.00690489E8)))AND(NULL)))))) LIMIT 890000906; -- 0ms;
SELECT DISTINCT (((((t0.c85) IS FALSE)))==((COUNT(v0.c0)))), AVG(CASE t0.c85  WHEN t0.c41 THEN v0.c0 ELSE t0.c85 END), ((((t0.c41)||(v0.c0))) BETWEEN (v0.c0) AND (CASE WHEN 0.5861069364806049 THEN 0.3414783880372697 WHEN t0.c85 THEN t0.c41 WHEN t0.c41 THEN t0.c41 END)) FROM v0;SELECT DISTINCT CASE ((t0.c41) BETWEEN (t0.c85) AND (t0.c85))  WHEN ((((((((t0.c41)AND(t0.c41)))AND(t0.c41)))AND(t0.c41)))OR(v0.c0)) THEN (t0.c41 IN ()) END FROM v0, t0; -- 0ms;
SELECT load_extension('z') COLLATE RTRIM FROM t0;