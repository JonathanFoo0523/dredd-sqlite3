-- Time: 2024/06/07 23:12:30
-- Database: database17
-- Database version: 3.40.0
-- seed value: 2681613417
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM rt0 WHERE (+ (rt0.c1)); -- 1ms;
REINDEX  rt0; -- 0ms;
INSERT OR REPLACE INTO rt1(c2) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0X164a7966, 0.9320436775550826); -- 0ms;
VACUUM temp; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR REPLACE rt0 SET c1=NULL, c0='pCO7J-QS', c2='uva8Kc' WHERE IFNULL(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c1 IN (rt0.c0, rt0.c2))); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES ('373979494'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES (3.73979494E8, x'', 0.367500793797354), (0.367500793797354, 'yearsi', 3.73979494E8), (0X724c2d18, '5e*T꜍f', 0.3044508611462421); -- 1ms;
UPDATE rt0 SET c0='', c1='' WHERE ABS(DISTINCT ((((NULL)OR(rt0.c2)))OR(rt0.c0))); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (x'b9e2e5b2'), (-971810183), (''), (0.7511287546103228), (0.37336356378495517); -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES ('奼b', '-971810183'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0) VALUES (0.7008006838460074, x''), (NULL, NULL), (NULL, x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('-971810183', x'ce53', '-1688607929'), ('1836361485', 0Xffffffff9b59e347, '0.7511287546103228'), ('-686722016', 0.07610568657222583, NULL), ('-1438088228', NULL, ''), (x'', -971810183, x'1fd7'); -- 1ms;
INSERT OR REPLACE INTO rt1(c2, c0) VALUES ('-1475334146', x''), ('-494129229', NULL), (0.7862970929946539, 'yearsi'); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (0.46791205801129543); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c0) VALUES (1416143191, NULL, NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO rt1(c0) VALUES (3.73979494E8); -- 0ms;
COMMIT; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('-1236736532'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c1) VALUES (NULL, x''), (0.7364261981815611, x'ea10'), (x'b48e', -9.71810183E8); -- 0ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES (NULL, x''), (x'', x''), ('0.07610568657222583', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0xffffffff9f3aa1d8); -- 0ms;
INSERT OR ABORT INTO rt1(c1) VALUES (0.4382132895760318); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (NULL), (NULL), ('.72'); -- 7ms;
REINDEX; -- 0ms;
REINDEX RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1, c2) VALUES (992387341, 0.9320436775550826, x''); -- 1ms;
COMMIT; -- 0ms;
UPDATE rt0 SET (c0)=(0.6437557232584616) WHERE (((((rt0.c2, 992387341, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, 'I^', rt0.c2)))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) AND (CAST(rt0.c2 AS REAL))); -- 0ms;
UPDATE OR IGNORE rt1 SET c2=992387341; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0.5744680317917107, x''); -- 1ms;
UPDATE OR ROLLBACK rt1 SET (c2)=('+E'); -- 0ms;
UPDATE OR FAIL rt1 SET (c1)=(NULL) WHERE CASE IFNULL(DISTINCT rt1.c2, rt1.c2)  WHEN '-971810183' THEN rt1.c2 WHEN UNICODE(rt1.c1) THEN rt1.c2 WHEN ((rt1.c0)>(rt1.c0)) THEN (NOT (rt1.c1)) WHEN ((rt1.c1) NOT NULL) THEN ((-6.86722016E8) ISNULL) WHEN SQLITE_SOURCE_ID() THEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)) ELSE ((rt1.c2)<>(rt1.c1)) END; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES (1.917594904E9, NULL), (0.6341426082592407, '887899903'), (0.39971648852744257, x''); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT DISTINCT (GROUP_CONCAT(rt1.c1) IN ()) FROM rt0, rt1 WHERE (TRIM(DISTINCT (NULL IN ()), ((NULL)IS(0.46970266683087947)))) ORDER BY LIKELIHOOD(DISTINCT rt1.c1 COLLATE BINARY, 0.7261511099305996), ((LOWER(DISTINCT rt1.c1)) NOT NULL) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (- (CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c0 END)) FROM rt1, rt0 WHERE (load_extension(0.7253403559533094, '0Z' COLLATE RTRIM)) LIMIT 992387341 OFFSET 2026700282;SELECT CASE ((((rt1.c2)AND(1.917594904E9)))OR(rt1.c0))  WHEN CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c2 END THEN rt1.c0 END FROM rt0, rt1 WHERE (((((-1475334146)<<(NULL))) IS FALSE)); -- 0ms;
SELECT x'' FROM rt0 WHERE (NULL); -- 0ms;
SELECT ALL ((CAST(rt1.c0 AS INTEGER))OR(MAX(rt1.c2))) FROM rt0;SELECT DISTINCT ((MAX(rt1.c1)) BETWEEN (rt0.c1) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c0)))), ((CAST(rt1.c1 AS INTEGER))*(((((rt1.c0)OR(rt0.c0)))OR(rt0.c1)))), ((((((rt1.c0)AND(rt0.c1)))OR(rt0.c2)))>>(((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))) FROM rt0, rt1 WHERE (((('1393240288' IN ()))<<((((('0.367500793797354')AND(0.07610568657222583)))OR(-1438088228))))); -- 0ms;
SELECT ALL CAST((((rt1.c1))=((rt0.c1))) AS TEXT) FROM rt1 WHERE (CAST((((0.321707085421885)) BETWEEN ((NULL)) AND (('0.3044508611462421'))) AS INTEGER));SELECT ((((rt1.c0) IS FALSE)) IS FALSE), CAST(x'7803' AS NUMERIC), (((- (rt0.c1)))!=(((((((((rt1.c2)AND(rt1.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))) FROM rt0;SELECT DISTINCT CASE WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY COLLATE BINARY FROM rt0 WHERE ((~ (CAST('j' AS BLOB))));SELECT DISTINCT json_patch(GROUP_CONCAT(rt0.c0), ((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c2))) FROM rt1, rt0;SELECT DISTINCT COUNT((rt0.c1 IN ())) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (MIN((('+F䝮4w%op')%('107640502')), 0.28885384749763887 COLLATE NOCASE, (('-594178149') NOT NULL), ((0x5720ea6)>>(0.7364261981815611)))); -- 0ms;
SELECT DISTINCT TOTAL('0.321707085421885') OVER (), (((rt1.c0, rt0.c2, rt1.c0)) NOT BETWEEN (((+ (rt0.c1)), CASE rt0.c1  WHEN rt0.c0 THEN rt1.c0 END, (- (rt1.c0)))) AND ((0.6378618663349035, HEX(DISTINCT rt1.c1), ((rt0.c1) NOT NULL)))), (~ (rt0.c1)) COLLATE NOCASE FROM rt0, rt1 WHERE ((~ (((NULL) NOT BETWEEN (NULL) AND (0.6738378207164133))))); -- 0ms;
SELECT DISTINCT (((((rt0.c0)GLOB(rt0.c1))))!=((CASE WHEN '' THEN rt1.c0 ELSE rt0.c1 END))) FROM rt0, rt1 WHERE (((CASE WHEN 0.5346035221551589 THEN 0x7e08c8a7 END)>((x'' IN ())))); -- 0ms;
SELECT ALL (((((rt1.c0) NOTNULL)))>((((rt0.c0) IS TRUE)))), COUNT(*) OVER (), (((((1.07640502E8 IN ()))OR(rt1.c2)))AND((('-1914652002')*(rt1.c2)))) FROM rt0, rt1; -- 0ms;
SELECT ALL CAST(rt0.c2 COLLATE BINARY AS NUMERIC) FROM rt0, rt1 WHERE ((x'' COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c2, x'', rt0.c0)) BETWEEN ((rt1.c2, 0.40883726947025456, rt0.c0)) AND ((rt1.c0, rt1.c1, rt1.c0))) THEN ((((rt1.c0)OR(rt0.c0)))OR(rt1.c0)) WHEN CAST(rt0.c2 AS NUMERIC) THEN GROUP_CONCAT(rt1.c2) WHEN x'' THEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END, NULL, rt1.c0 FROM rt0, rt1 WHERE ((((- (9.92387341E8))) IS TRUE)); -- 0ms;
SELECT IFNULL(rt1.c2 COLLATE NOCASE, ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))) FROM rt0;SELECT ((((rt0.c2)AND(((rt1.c0) ISNULL))))AND(rt0.c2)), UPPER(DISTINCT 0.5342612738563012), ((MIN(rt0.c1))>(rt1.c2 COLLATE RTRIM)) FROM rt0;SELECT CAST(CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c2 END AS REAL), GROUP_CONCAT(((rt1.c2)>=(rt0.c2)) COLLATE BINARY) OVER (), ((('챰actLEmLΠ') ISNULL) IN ()) FROM rt1;SELECT DISTINCT (((((rt1.c0 IN ()))OR('-308167010')))OR('*%')), ((rt0.c1)<<(rt1.c0)) COLLATE RTRIM, rt0.c0 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT MIN((((rt0.c1)) BETWEEN ((rt1.c1)) AND ((rt0.c0)))) FROM rt1, rt0 WHERE ((~ ((NULL IN ('~0E'))))); -- 0ms;
SELECT ALL CAST(CAST(rt1.c0 AS REAL) AS NUMERIC) FROM rt1; -- 0ms;
SELECT ALL ((NULLIF(DISTINCT rt0.c1, rt0.c0)) BETWEEN (CAST(rt1.c1 AS NUMERIC)) AND (((rt0.c0) IS TRUE))) FROM rt0 WHERE ((((NOT (x'2397'))) BETWEEN (((NULL)<=(NULL))) AND (0x5468a157)));SELECT DISTINCT (((((rt1.c1, rt0.c1, rt0.c1, rt0.c0, rt1.c0))=((rt0.c0, rt0.c0, rt0.c2, rt1.c0, rt0.c1))))<>((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))) FROM rt1, rt0; -- 0ms;
SELECT CASE x'35d0'  WHEN (rt0.c0 IN ()) THEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c1)) WHEN 0.5744680317917107 THEN MAX(rt0.c0, rt0.c1) WHEN rt0.c1 COLLATE NOCASE THEN (- (rt0.c2)) WHEN ((rt1.c2)<<(rt0.c0)) THEN ((((rt1.c1)OR(rt1.c1)))OR(rt0.c0)) WHEN (-5.94178149E8 IN (rt1.c1)) THEN CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c1 THEN 'mQiం' WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c1 END END FROM rt0, rt1 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0))) NOTNULL)  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((((rt0.c2)/(rt0.c2)))<>(COUNT(rt1.c0))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c1 AS REAL) THEN (+ (rt0.c0)) END, ((((rt1.c1 IN ())))==((((rt1.c2)<>(rt0.c1))))), CASE WHEN LENGTH(rt1.c0) THEN CAST(rt1.c1 AS NUMERIC) ELSE rt0.c0 COLLATE RTRIM END FROM rt1;SELECT DISTINCT ((CAST(rt0.c0 AS BLOB))OR(((rt0.c2)GLOB(rt1.c1)))) FROM rt1 WHERE (CAST(((((0.45590543536370376)AND(NULL)))AND(NULL)) AS BLOB));SELECT DISTINCT ((((rt1.c0)/(rt1.c0))) NOTNULL) FROM rt1; -- 0ms;
SELECT ALL MIN(COUNT(*)) FROM rt0, rt1 LIMIT -1042966401;SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c2)))>(((rt1.c1) NOTNULL))), HEX(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END), (CASE WHEN 0.5363900312281649 THEN rt0.c2 ELSE rt0.c0 END IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0, rt1; -- 0ms;
SELECT ALL CASE WHEN rt1.c0 THEN rt1.c0 END COLLATE NOCASE, (((rt1.c0 IN ()))=((rt1.c0 IN (rt0.c0)))), 0.657055706471477 FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM)<(CASE '8/'  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c1 THEN NULL WHEN 0.4382132895760318 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 END)); -- 1ms;
SELECT DISTINCT TOTAL(UPPER(DISTINCT rt1.c2)), rt1.c2, LAST_VALUE(rt1.c0) OVER () FROM rt1 WHERE (((((((0.00477013546840499)<>(-1236736532)))OR(((x'bfa8') BETWEEN ('h a 99\n{i') AND ('ꇘb4g肢q暊b')))))AND(((0.5941009455695819)AND(0.08233722194515736))))) GROUP BY (- (((rt1.c0)<>(rt0.c0)))), (((rt1.c1, rt0.c1, rt1.c0)) NOT BETWEEN ((rt0.c0, ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt1.c2)), (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))) AND ((((rt1.c2)*(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2)), ((((rt1.c0)AND(rt0.c2)))OR(rt1.c1))))), CAST((~ (rt1.c2)) AS INTEGER) ORDER BY CASE WHEN (((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN LIKELY(rt0.c1) END LIMIT 2026700282 OFFSET -686722016;SELECT DISTINCT TOTAL(((rt1.c2) NOT NULL)) OVER () FROM rt1; -- 0ms;
SELECT (((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))IS NOT(((rt0.c1)<>(rt1.c0)))), CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c0 END COLLATE NOCASE, ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (-6.86722016E8) AND ((('1542311416')*(rt1.c2)))) FROM rt1 WHERE (((((((0X5505668a)<<(x'')))OR((('-436892250')OR(NULL)))))OR((((('')OR(NULL)))AND(NULL)))));SELECT DISTINCT COUNT(((((rt1.c0)AND(rt1.c2)))AND(rt0.c2))) FROM rt1, rt0 WHERE (CASE WHEN x'd6f9' THEN CASE WHEN '(4' THEN '' WHEN '887899903' THEN x'2aea' WHEN x'c316' THEN x'' WHEN '-257925683' THEN NULL WHEN 0.367500793797354 THEN x'' END END); -- 0ms;
SELECT DISTINCT ((((rt1.c2) BETWEEN (rt1.c1) AND (-971810183)))>(rt0.c2 COLLATE RTRIM)) FROM rt0 NOT INDEXED WHERE ((((NOT (1786723505)))/(((x'')>('yl')))));SELECT DISTINCT NTILE(CAST(x'427dc3ef' AS TEXT)) OVER (), ((('*Yo')) BETWEEN ((((rt1.c2)IS(rt0.c0)))) AND ((rt1.c0))), (+ (0xffffffffa9da5454)) FROM rt0;SELECT ALL (+ (((rt0.c2)-(1.07640502E8)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT SUM(((rt0.c2)>(rt0.c1))) FROM rt1, rt0 WHERE (((((('w6' IN (-3.0816701E8)))AND(RTRIM(x'2f1f'))))AND(0.9868107258761686))); -- 1ms;
SELECT DISTINCT MIN(COUNT((((rt0.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt0.c0, rt1.c0, rt0.c0)) AND ((rt1.c2, rt1.c1, rt1.c0))))) FROM rt1;SELECT ((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))) NOT NULL) FROM rt0, rt1 WHERE ((((0.657055706471477 IN ())) BETWEEN (((0xffffffffc99c3dff) NOT BETWEEN (0.40883726947025456) AND (''))) AND (NULL))); -- 0ms;
SELECT DISTINCT (((rt1.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS REAL), (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))), ((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c2)))) AND ((GROUP_CONCAT(rt1.c0), rt0.c1 COLLATE BINARY, CASE WHEN x'' THEN rt1.c2 END))), rt0.c0, ((((((((((rt0.c1)AND(rt1.c2)))OR(rt1.c2)))OR(rt0.c2)))AND(rt0.c2))) BETWEEN ((rt1.c1 IN ())) AND (JULIANDAY(rt1.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c1, rt0.c0, rt0.c2))) FROM rt1, rt0 WHERE (CAST((~ (0.05991110754540796)) AS INTEGER)) GROUP BY MAX(((((((((rt0.c2)OR(rt0.c0)))AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c0)), (NOT (rt1.c0))), ((((rt1.c1)&(rt1.c0))) IS TRUE), ((((((((CASE rt0.c2  WHEN '0.5346035221551589' THEN x'' END)OR(NULL)))AND(CAST(rt1.c2 AS NUMERIC))))OR((- (rt1.c2)))))OR(((((rt1.c0)AND(rt1.c0)))AND(rt0.c1)))); -- 1ms;
SELECT ALL ((((((rt1.c1)AND(rt1.c1)))AND(NULL)))>=('')), (('-1236736532') IS TRUE), ROUND((- (rt0.c2)), ((0X4d950a8b)=(rt0.c2))) FROM rt1 WHERE (((NULL COLLATE BINARY) IS FALSE));SELECT DISTINCT LAST_VALUE((((rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((((((rt1.c2)AND(x'')))AND(rt1.c2)), x'7994' COLLATE BINARY, (NOT (rt1.c0)))) AND ((rt1.c2, CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END, (rt1.c2 IN (rt1.c2)))))) OVER (), ((CASE WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c0 END)>('u')), json_array_length(((rt0.c0)OR(rt1.c2))), ((((SUBSTR(rt1.c2, rt0.c1))OR(x'4e6e')))OR('-436892250')), (~ (((rt1.c0)>=(rt1.c2)))) FROM rt1 WHERE (((CAST(x'' AS BLOB))<=(LIKELIHOOD(x'3ee7ca95', 0.8518948747247503)))) GROUP BY (- (rt1.c1)) HAVING '-1082607095';SELECT ALL ((((rt0.c0 IN ()), json_insert(NULL, rt0.c2, rt0.c1), CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))==(((- (rt0.c1)), rt0.c0, STRFTIME(rt0.c0, rt1.c0, NULL)))) FROM rt1 WHERE (CASE ((((x'')AND(NULL)))AND('-885914720'))  WHEN ((NULL)&('1609001361')) THEN 0Xffffffffd7117420 END);SELECT DISTINCT ((((((((((rt0.c1)OR(rt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt1.c1)))LIKE(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))) FROM rt0;SELECT ALL CASE WHEN -2.57925683E8 THEN rt1.c1 ELSE rt0.c0 END COLLATE NOCASE COLLATE BINARY FROM rt1, rt0 WHERE (LIKELIHOOD(DISTINCT ((((((((0xffffffffbf78ba09)OR(NULL)))OR(-308167010)))OR(x'')))AND(x'')), 0.6787604031105293)) ORDER BY rt1.c1 COLLATE RTRIM ASC; -- 0ms;
SELECT DISTINCT TOTAL(CASE rt0.c0  WHEN rt1.c2 THEN rt0.c2 END) FROM rt1, rt0; -- 0ms;
SELECT ((CAST(rt0.c0 AS INTEGER)) ISNULL) FROM rt0, rt1; -- 0ms;
SELECT ALL (0.35942335797476577 IN (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN 0X14126522 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 END)) FROM rt0;SELECT DISTINCT (((0.7707434706436241))<=((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))) FROM rt0;SELECT ALL '', -1438088228, (((+ (rt0.c2)))%(rt1.c2)) FROM rt1 WHERE ((((((-1.7976931348623157E308 IN ()))AND(NULL COLLATE BINARY)))AND(((x'') NOTNULL))));SELECT ALL ((((rt0.c2) BETWEEN ('0.5363900312281649') AND (rt0.c2)))==(rt1.c2 COLLATE RTRIM)) FROM rt0 WHERE (NULL);SELECT ((TRIM(DISTINCT '5e*Tzf', 0.20175053253771968)) BETWEEN (((rt1.c2)LIKE(1438077396))) AND (((rt0.c1) NOTNULL))) FROM rt0, rt1 GROUP BY (((rt1.c0 IN (rt0.c2))) ISNULL) HAVING CAST(NULL AS REAL) COLLATE NOCASE LIMIT -336884605 OFFSET 1961301844; -- 0ms;
SELECT ALL (((- (rt0.c0))) NOT NULL), (((rt1.c2)) BETWEEN (((rt0.c2 IN ()))) AND (((rt1.c0 IN ())))), 0.0990485121291782 FROM rt0, rt1 GROUP BY rt0.c2 COLLATE BINARY, ((((rt1.c1) NOT NULL))LIKE(((rt0.c0)IS NOT(rt0.c2)))), (+ (rt1.c0)) HAVING (((((rt1.c0))<>((rt0.c0)))) NOT NULL) LIMIT 1638151551 OFFSET 39535264; -- 1ms;
SELECT ALL (CASE WHEN rt1.c0 THEN NULL END IN (((-1575260919) NOT BETWEEN (rt1.c1) AND (rt0.c2)), CAST(rt0.c0 AS REAL))) FROM rt1, rt0 WHERE (CASE (x'' IN ())  WHEN '' COLLATE BINARY THEN '1087824527' ELSE ((1609001361) ISNULL) END); -- 0ms;
SELECT ALL (((((rt0.c0)AND('(4')))AND(rt1.c2)) IN ()) FROM rt1 ORDER BY ((((((rt1.c2)OR(rt0.c1)))OR(rt0.c1)))*(((rt0.c2)*(rt0.c1)))) ASC;SELECT DISTINCT CASE rt1.c1  WHEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c0)) THEN ((rt1.c2)%(-1549789932)) ELSE (rt0.c1 IN ()) END, CAST((+ (rt1.c0)) AS REAL), CAST(((rt0.c0)IS(rt0.c2)) AS TEXT) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT 0Xffffffffa8a0c25b FROM rt1, rt0 ORDER BY ((((((((((((rt0.c0)OR(rt1.c1)))OR(rt1.c0)))OR(((rt1.c0)==(rt0.c0)))))OR(rt0.c1 COLLATE RTRIM)))OR(LIKELY(rt0.c1))))AND(CAST(rt1.c2 AS NUMERIC))); -- 0ms;
SELECT ALL ((((NULL)+(rt1.c1)))>>(rt0.c0)) FROM rt1 GROUP BY CASE WHEN CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END THEN (- (rt1.c2)) ELSE ((rt1.c1)LIKE(rt0.c1)) END, (+ (((rt0.c0)&(rt1.c0)))), ((((rt0.c2)OR(rt0.c1)))OR(rt1.c2)) COLLATE BINARY;SELECT DISTINCT rt0.c2 COLLATE BINARY, TYPEOF(DISTINCT CAST(rt1.c2 AS TEXT)), ((((x'') NOT NULL))IS(rt0.c2)) FROM rt0 WHERE ((- (CAST(0.7862970929946539 AS REAL))));SELECT DISTINCT (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) IN ()) FROM rt0, rt1; -- 0ms;
SELECT ALL (-7.4445822E7 IN ((- (rt0.c1)))), (((((x'') IS TRUE)))<((SQLITE_COMPILEOPTION_USED(rt1.c0)))), RANK() OVER () FROM rt1, rt0 WHERE (CAST(((0.5340008960652162) BETWEEN (NULL) AND (NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT ((NOT (rt1.c2)) IN ()), ((rt1.c0)<(rt0.c1 COLLATE RTRIM)), COUNT(*) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((((rt0.c2) IS FALSE)) IS TRUE), ((((((((rt1.c0 COLLATE BINARY)AND(((rt1.c0) NOT NULL))))AND(((rt0.c0) BETWEEN (rt1.c1) AND ('w6')))))AND(rt1.c2 COLLATE NOCASE)))AND((rt0.c0 IN ()))) FROM rt0 GROUP BY ((((((((((((rt0.c1)AND(rt1.c2)))AND(rt0.c0)))OR(rt1.c2)))AND(rt0.c0)))OR('')))OR((~ (rt1.c1)))), (((((rt1.c0) IS FALSE)))!=((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2))))), CAST(rt1.c0 COLLATE NOCASE AS INTEGER);SELECT PERCENT_RANK() OVER (), ((TOTAL(rt0.c0)) NOTNULL), (rt1.c0 COLLATE RTRIM IN ((((rt0.c2, rt1.c0, rt0.c2))<=((rt1.c2, rt0.c0, rt1.c1))))) FROM rt1, rt0 WHERE (((((((((((((((NULL)OR(NULL)))OR('}\rvy')))AND(x'c5ed8ac5')))OR('w6')))AND(107640502)))OR('1301613195')))AND(((-1505666692)AND(x''))))); -- 0ms;
SELECT CAST(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) AS TEXT) FROM rt1;SELECT DISTINCT ((((rt0.c1)LIKE(rt0.c1)))GLOB(TRIM(rt1.c2))) FROM rt0;SELECT DISTINCT AVG((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))) FROM rt0, rt1 WHERE (CASE (1.961301844E9 IN ())  WHEN CAST(-5.94178149E8 AS NUMERIC) THEN ((NULL)>=(NULL)) END); -- 0ms;
SELECT DISTINCT NULL, ((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN x'' WHEN rt0.c1 THEN rt1.c2 END) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (rt0.c1)), (('-1974367075') ISNULL) FROM rt0, rt1 WHERE (((((-1.914652002E9) BETWEEN (0.9801034807428561) AND (NULL))) BETWEEN ((~ (0xffffffff8fdd3660))) AND ((~ (-4.3689225E8))))); -- 0ms;
SELECT ALL CAST(CAST(rt0.c2 AS REAL) AS TEXT) FROM rt1, rt0 WHERE (-1855463600); -- 0ms;
SELECT DISTINCT ((rt1.c0) NOT BETWEEN ('-1881328032') AND ((rt0.c1 IN ()))) FROM rt1, rt0 WHERE (CAST((((-7.49024144E8)) NOT BETWEEN (('0Z')) AND (('-1011901400'))) AS NUMERIC)); -- 0ms;
SELECT (((((rt1.c0, x'f9d7', rt1.c1))<=((rt1.c2, rt1.c1, rt0.c0)))) ISNULL) FROM rt0, rt1 WHERE ((('2113851704' COLLATE NOCASE) NOT BETWEEN ('-138043878' COLLATE NOCASE) AND ('107640502' COLLATE NOCASE))) LIMIT -749024144; -- 0ms;
SELECT ALL SUM(rt0.c1 COLLATE BINARY) COLLATE BINARY, ((LOWER(DISTINCT NULL))AND(((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2)))), TOTAL(CAST(x'' AS BLOB)) OVER () FROM rt0, rt1; -- 0ms;
SELECT ((TOTAL(rt0.c1)) NOT NULL), rt0.c0, ((((rt1.c0))<=((rt0.c0))) IN ()) FROM rt1 WHERE ((+ (NULL)) COLLATE RTRIM);SELECT DISTINCT (((((rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((rt0.c2, rt1.c2, rt0.c1)) AND ((rt1.c0, rt0.c0, x'4827')))) NOTNULL) FROM rt0;SELECT DISTINCT ((((((((((rt1.c0)|(rt0.c0)))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt0.c0)>>(rt0.c2)))))AND(((((((((rt1.c1)AND(rt0.c1)))AND(NULL)))AND(rt1.c0)))OR(rt0.c1)))))AND(rt0.c0)) FROM rt1, rt0 WHERE (CASE WHEN (x'e0b4' IN ()) THEN (~ (NULL)) ELSE (('E.') NOTNULL) END); -- 0ms;
SELECT ALL CAST(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END AS TEXT) FROM rt1 WHERE (NULL) GROUP BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0))) NOT NULL) HAVING ((((PRINTF(rt0.c1, rt0.c2, rt0.c2))AND(CAST(rt1.c1 AS REAL))))AND(CASE WHEN rt1.c1 THEN rt1.c0 END));SELECT DISTINCT (((rt0.c0)) NOT BETWEEN (((rt1.c2 IN ()))) AND ((rt1.c2))), ((((((rt1.c1)LIKE(rt1.c1)))AND((((rt1.c1))>=((rt0.c0))))))OR(((rt0.c1)=(rt0.c0)))), x'024d' COLLATE BINARY FROM rt1, rt0; -- 1ms;
SELECT DISTINCT (((+ (rt1.c2))) NOT NULL) FROM rt0, rt1 WHERE (LIKELIHOOD(load_extension('~*', 'yl'), 0.45022695272872804));SELECT ((((x'2276')OR(AVG(0.8835653192232583))))AND(CASE WHEN rt0.c1 THEN 0.23236587734636205 WHEN NULL THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 END)), COUNT(CAST(x'' AS BLOB)), ROW_NUMBER() OVER () FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(x'4ce9'))LIKE(((NULL)/(NULL)))));SELECT ALL (((((rt1.c1) IS FALSE)))<((((((rt0.c1)OR(rt1.c0)))AND(rt0.c1))))), ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c0) ISNULL)) AND (((((((((((((((((rt0.c1)OR(x'')))AND(rt0.c1)))AND(rt1.c1)))AND(rt1.c2)))AND('-1087536990')))OR(rt1.c2)))OR(rt0.c1)))AND(rt0.c2)))), ((((rt1.c1)OR(rt1.c1)))OR(rt0.c1)) COLLATE BINARY FROM rt1 GROUP BY ((((rt0.c0)&(rt1.c2)))<(CASE WHEN rt1.c2 THEN rt1.c0 END)), ((((- (rt1.c1))))>=((((rt1.c0)GLOB(NULL))))), ((((((((((rt0.c2) NOTNULL))AND(CAST(rt1.c0 AS NUMERIC))))OR(CAST(rt1.c0 AS NUMERIC))))AND(((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))))AND((((rt0.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))));SELECT DISTINCT ((((((((((((((((rt0.c2)AND(rt0.c2)))OR(rt1.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)) COLLATE BINARY, ((((rt1.c1) NOT NULL))AND('-38464859')), CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL)))  WHEN CAST(rt0.c0 AS BLOB) THEN (- (rt1.c0)) END FROM rt1;SELECT CAST((rt0.c0 IN (x'')) AS TEXT), (((rt0.c2 IN ()))&(rt1.c0)), SUM(COUNT(*)) COLLATE RTRIM FROM rt1 LIMIT -1 OFFSET -1619124737;SELECT LAST_VALUE(((((rt0.c1)<>(rt1.c2))) NOT BETWEEN (CASE rt1.c1  WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c0 END) AND (rt1.c1 COLLATE BINARY))) OVER ( ORDER BY ((((((((((rt1.c2)AND('')))OR(rt1.c0)))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c0)) DESC  NULLS LAST), (((rt0.c1 IN ()))<<(((0.05010809934596405)%(rt0.c1)))), MIN(CAST('' AS BLOB) COLLATE BINARY) FROM rt1, rt0; -- 0ms;
SELECT CAST((((rt1.c0))>=((rt0.c0))) AS REAL) FROM rt1 WHERE (0.5941009455695819) GROUP BY (((CASE WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (rt1.c2 IN ())))=((rt0.c1, ((rt0.c2)<<(rt0.c1)), rt0.c0))), ((((rt0.c0)==(rt0.c1)))||(((rt1.c2)<(rt0.c1)))), ((((0.7938334514704316)OR(rt1.c0 COLLATE RTRIM)))AND(((rt0.c0) IS TRUE))), CASE WHEN ((rt0.c1) ISNULL) THEN rt0.c0 COLLATE RTRIM ELSE rt0.c1 COLLATE NOCASE END, (+ (((rt1.c1)>>(rt1.c1)))) HAVING CAST((+ (rt1.c1)) AS TEXT) ORDER BY rt0.c1 DESC  NULLS LAST, ((rt0.c2) IS TRUE) COLLATE BINARY DESC, rt1.c2 ASC  NULLS LAST;SELECT DISTINCT ((-291312969)<((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((rt0.c2, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c2))))), rt1.c0, SUM(LIKELIHOOD(DISTINCT rt1.c2, 0.3216731234810105)) OVER ( ORDER BY ((((('')OR(rt1.c0)))OR(NULL)) IN ((rt0.c2 IN ()))) DESC) FROM rt0, rt1 WHERE (((((('㙠Wu^I1d')AND('')))OR(NULL)) IN ())) GROUP BY (NULL IN ()) ORDER BY CAST(((rt0.c1) NOT NULL) AS NUMERIC) DESC; -- 0ms;
SELECT DISTINCT FIRST_VALUE(rt0.c0) OVER () FROM rt1, rt0 WHERE (CASE WHEN ((x'45710dc0') BETWEEN ('') AND ('-1881328032')) THEN ((1332451257) NOTNULL) END); -- 0ms;
SELECT NULL FROM rt0, rt1 ORDER BY (((rt1.c1 IN ()))-(CASE rt1.c2  WHEN rt0.c0 THEN 0xffffffffc0e62cf7 ELSE rt0.c2 END)) DESC; -- 0ms;
SELECT DISTINCT MIN(((((((((rt0.c1)OR(rt1.c0)))AND(rt0.c2)))OR(rt1.c2)))OR(rt1.c0))), (~ (0xfffffffff3f17a8f)), ('' IN (((rt0.c1) ISNULL))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((rt1.c2)OR(rt1.c2)))AND(rt0.c2)))*(((rt0.c0)>=(rt1.c0)))), (((((~ (rt0.c0)))AND(rt1.c0 COLLATE BINARY)))OR((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))), NTH_VALUE((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((TRIM(DISTINCT rt0.c2, rt0.c1), ('<B>1%%#ᲀ{' IN ()), (((rt0.c0, rt0.c2, '-2011029626'))<=((rt0.c0, rt0.c2, rt0.c0))))) AND (((rt0.c0 IN ()), (((rt0.c0)) BETWEEN ((rt0.c2)) AND (('-971949904'))), (((rt0.c1))>((rt0.c2)))))), CAST(rt0.c2 COLLATE RTRIM AS REAL)) OVER () FROM rt0;SELECT DISTINCT CAST(CASE rt1.c1  WHEN rt1.c0 THEN '338275536' WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC) FROM rt1, rt0; -- 0ms;
SELECT ALL ((highlight(rt1.c1, rt1.c0, rt0.c2, 1944701053))<=(TRIM(DISTINCT rt1.c2))) FROM rt1, rt0;SELECT ALL INSTR(x'', MIN(rt1.c0)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c0)AND(rt0.c1)))OR(x'')))AND(rt0.c2)))AND(rt0.c2)))&(((((rt1.c2)OR(rt1.c0)))OR(rt0.c1)))) FROM rt1 ORDER BY ((((rt1.c0)+(rt0.c1))) IS FALSE);SELECT ALL (((rt1.c1)) BETWEEN ((((rt0.c0)GLOB(rt0.c0)))) AND ((MAX('0D''15.I錇J')))) FROM rt1, rt0 WHERE ((x'' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT SUM(((rt0.c2) IS FALSE)) OVER () FROM rt1 ORDER BY rt1.c1 LIMIT 1961301844;SELECT DISTINCT ((UPPER(rt0.c2))&(((rt0.c1)IS(rt0.c2)))) FROM rt0, rt1 WHERE ((NOT (((NULL)AND(0.6913506760940685))))); -- 0ms;
SELECT DISTINCT (((rt1.c1 IN ())) NOT NULL) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c1)>=(rt0.c2)))<=((rt1.c1 IN ()))) FROM rt0 WHERE ((+ ((('-1855463600') BETWEEN ('') AND ('v#zB'))))); -- 0ms;
SELECT ((((rt0.c2) NOTNULL))&(rt0.c1)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c0))) FROM rt0, rt1 WHERE (((CAST(0xffffffffc61138b0 AS INTEGER)) BETWEEN (NULL) AND ((((x''))!=((NULL)))))) LIMIT 1542311416 OFFSET 1087824527;SELECT CASE '-1087536990'  WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c2 WHEN '' THEN rt1.c2 ELSE rt1.c2 END COLLATE RTRIM FROM rt0, rt1; -- 0ms;
SELECT ALL NTILE(((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT(rt0.c0))) OVER () FROM rt0 WHERE (((((NULL)IS NOT('-1914652002')))>=(NULL))) GROUP BY rt1.c0;SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE NOCASE)) AND ((((rt0.c0)>('939496199'))))), '0.367500793797354', NTH_VALUE(((-7.4445822E7) IS FALSE), (~ (rt1.c2)) COLLATE NOCASE) OVER ( ORDER BY HEX(rt0.c0) COLLATE NOCASE DESC  NULLS FIRST) FROM rt1, rt0 WHERE ((~ (0.24862902011129362)) COLLATE BINARY);SELECT ALL AVG((~ (rt0.c2))) OVER () FROM rt0 WHERE (((CAST(x'' AS TEXT)) IS TRUE)) GROUP BY (NOT ('-308167010')) HAVING ((CASE WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN -1.914652002E9 ELSE rt0.c1 END) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND ((rt1.c1 IN ())));SELECT DISTINCT ((rt0.c0)<=(((rt0.c1) NOT NULL))) FROM rt0, rt1 WHERE (0Xfffffffff3d92a8f COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT ALL COUNT(((rt1.c2)-(rt0.c1))), CAST(MAX(rt1.c2) AS TEXT), TOTAL_CHANGES(), (((rt1.c2) NOT BETWEEN (rt0.c1) AND (x'e49d')) IN ()), ((CAST(rt1.c0 AS REAL))<>(((((rt0.c0)OR(rt1.c2)))AND(rt0.c0)))) FROM rt0 WHERE (((((NULL) BETWEEN (x'') AND ('#E')))LIKE((NULL IN (0.39971648852744257))))) ORDER BY ((((rt1.c2)IS NOT(rt1.c0))) NOT NULL), (CAST(rt1.c2 AS INTEGER) IN ())  NULLS LAST;SELECT (((rt0.c0) IS FALSE) IN (SQLITE_COMPILEOPTION_GET(rt0.c1), ((rt0.c0)%(rt0.c2)))) FROM rt0, rt1 WHERE (((((((((((x'')AND('0.7253403559533094')))AND(NULL)))AND(x'')))OR(0x6fada1a1)))|(CASE NULL  WHEN 0.44454806555642323 THEN '' WHEN x'8951' THEN NULL WHEN x'1ae0' THEN -7.49024144E8 WHEN '' THEN '' WHEN '2114504871' THEN x'92ef' ELSE 0.9252377295277235 END))); -- 0ms;
SELECT SUM(UPPER(DISTINCT rt0.c0)), TOTAL((+ (rt0.c0))) OVER (), rt0.c1 FROM rt1;SELECT ALL (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))+((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))), CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c1)OR(rt1.c1)) END, (((((rt0.c1))>((rt1.c2))))-(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))), JULIANDAY(rt0.c0, rt1.c1, rt1.c0, rt1.c0, rt1.c2) COLLATE NOCASE, LAG(((CASE WHEN rt0.c1 THEN rt1.c1 END)OR(CAST(rt1.c2 AS NUMERIC))), CAST((rt1.c2 IN ()) AS TEXT), ((NULL)+(CAST(rt0.c1 AS NUMERIC)))) OVER ( ORDER BY ((((((rt1.c1) IS TRUE))AND(-1.623547432E9)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))))) FROM rt1, rt0; -- 0ms;
SELECT ALL CASE WHEN rt1.c2 THEN (- (rt1.c0)) WHEN ((rt1.c0) ISNULL) THEN DATE(rt0.c2, rt1.c0, rt0.c0) WHEN GROUP_CONCAT(x'') THEN CASE WHEN rt0.c1 THEN rt1.c2 END END FROM rt0 WHERE ((NOT (((x'')GLOB(x'')))));SELECT ALL ((((((rt1.c0, rt0.c0, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt1.c0)))))!=((CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c1 END))) FROM rt0;SELECT (+ (rt0.c0)) FROM rt0 WHERE (CAST(LOWER('[]n') AS TEXT)); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt1;SELECT DISTINCT NTH_VALUE(((((((((CASE NULL  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)AND(((((rt0.c1)OR(rt1.c0)))AND(rt1.c2)))))AND(((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))OR((rt1.c0 IN ()))))AND(0.16398950557494774 COLLATE BINARY)), (+ (rt0.c1))) OVER () FROM rt0, rt1 GROUP BY ((rt0.c1 COLLATE NOCASE)=(rt0.c0 COLLATE RTRIM)), (((NOT (rt1.c0))) IS FALSE), 0.3537706465109389;SELECT ALL (x'' IN ()), (+ ((+ (rt0.c2)))), rt0.c2 FROM rt1 WHERE ((0.9749978240747461 COLLATE NOCASE IN ((0X3dbd54ee IN ('-520917713'))))) UNION ALL SELECT ALL UNLIKELY(((((rt0.c1)OR(rt1.c1)))OR(rt1.c1))), (((((rt1.c2)<(rt1.c1))))<>((json_remove(rt0.c0, rt1.c0, NULL, rt1.c0)))), ((0.08233722194515736)<(rt0.c0)) COLLATE NOCASE FROM rt1 WHERE (TYPEOF('-1549789932') COLLATE BINARY);SELECT ALL CAST(rt0.c1 AS NUMERIC), (((((rt0.c2))>((rt0.c1)))) NOT NULL), ((CAST(rt1.c0 AS INTEGER)) IS FALSE) FROM rt0 LIMIT 992387341;SELECT ALL (((((rt1.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt1.c1, rt1.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))<=(CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 END)), rt1.c2, 0.5312664973749509 FROM rt0 WHERE (((0.8511095956507821) BETWEEN ((('-133417635') NOT BETWEEN ('1301613195') AND ('''0}Vlg'))) AND (((((0.5744680317917107)OR(x'')))AND(NULL)))));SELECT DISTINCT (((((rt1.c0 IN ()))OR(CASE WHEN x'' THEN rt1.c1 END)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c1)))) FROM rt0 ORDER BY ((((CASE rt1.c1  WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END)AND(((rt1.c1) IS TRUE))))OR(((rt1.c2)=(rt1.c0)))) ASC  NULLS FIRST;SELECT ((CASE '#E'  WHEN rt0.c0 THEN rt1.c2 END)<>(NULL)), ((((((((CAST(rt0.c0 AS INTEGER))OR((~ (rt1.c1)))))OR((((rt0.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c2, rt0.c0, rt1.c1)) AND ((rt1.c2, rt1.c2, rt0.c0))))))OR((('1066759086')*(rt0.c0)))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c0)))), ((((rt1.c1)&(rt0.c0))) BETWEEN (TRIM(DISTINCT rt0.c2, rt1.c1)) AND ('z\r')) FROM rt0, rt1 NOT INDEXED WHERE (1637004492); -- 0ms;
SELECT DISTINCT json_array(((rt1.c0)&(rt0.c2)), rt1.c1) FROM rt1, rt0 WHERE ((((((x'', NULL, '')) BETWEEN ((NULL, 0.05120267843129045, 0.5270424318663814)) AND ((0.9868107258761686, NULL, 3.36749858E8)))) NOTNULL)); -- 0ms;
SELECT json(DATE(rt1.c2, rt1.c2, rt1.c1)), FIRST_VALUE((((0Xffffffffa50af7c8)) BETWEEN ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c2 END)) AND ((((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1)))))) OVER (), (((((x'')OR(rt1.c2))))<((rt1.c0 COLLATE NOCASE))) FROM rt0, rt1; -- 0ms;
SELECT ALL GROUP_CONCAT(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) OVER (), rt0.c1, ((CAST(rt0.c1 AS REAL))OR(((rt1.c2) NOT NULL))) FROM rt0;SELECT DISTINCT ((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)))<<(rt1.c1 COLLATE NOCASE)) FROM rt0, rt1 WHERE ((('1880646808') NOTNULL) COLLATE RTRIM); -- 1ms;
SELECT ALL ((((rt0.c1)LIKE(rt0.c1))) NOT BETWEEN (x'3d93') AND ((rt1.c2 IN ()))) FROM rt0 GROUP BY (('156976434' COLLATE RTRIM) BETWEEN (TYPEOF(DISTINCT rt0.c2)) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) HAVING ((TOTAL('1836361485')) BETWEEN (((rt0.c1)%(rt0.c0))) AND ((~ (rt0.c1)))); -- 0ms;
SELECT ALL (rt0.c1 COLLATE RTRIM IN ()), ((((rt0.c2) IS TRUE)) BETWEEN (((rt0.c1) NOT NULL)) AND (rt1.c2)), ROW_NUMBER() OVER () FROM rt0 WHERE ((((((((((('J~')AND(x'0c2a')))OR('794640642')))AND(0Xffffffffd1e63fe6)))OR('0.6738378207164133'))) IS FALSE)) GROUP BY (rt1.c0 COLLATE RTRIM IN ((rt0.c0 IN ())));SELECT ((((rt1.c1) ISNULL)) NOTNULL) FROM rt1; -- 0ms;
SELECT DISTINCT ((((CAST(rt1.c1 AS REAL))OR(ABS(rt0.c1))))AND(((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)))), CUME_DIST() OVER (), ((((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1)))))>=((CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))) FROM rt0 GROUP BY (((rt0.c1) ISNULL) IN ());SELECT DISTINCT ((((((((((rt0.c1)|(rt0.c2)))AND(((rt1.c1)<=(rt1.c0)))))AND((rt0.c2 IN (rt1.c2)))))OR((- (rt1.c1)))))OR(RTRIM(rt0.c0))), TRIM((((NULL))<=((rt1.c0))), CAST(rt1.c0 AS BLOB)), ((((rt0.c0 IN ())))<=(((rt0.c1 IN ())))), ((((rt1.c1) IS FALSE))/((NOT (rt1.c0)))), (- ((rt0.c0 IN ()))) FROM rt0 WHERE ((((NULL) BETWEEN (0.2993404891550232) AND (0.5270424318663814)) IN ()));SELECT DISTINCT (((0x3d1ac13b)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM)) AND ((((rt1.c0)OR(rt1.c2))))), x'', AVG((~ (rt0.c0))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)AND(rt1.c0)))OR(rt1.c2)))<<(0.46970266683087947)) FROM rt1;SELECT CASE WHEN (((rt1.c0))=((rt1.c0))) THEN ((rt0.c2)<(rt0.c2)) END FROM rt0;SELECT ALL CAST(((rt1.c1)IS NOT(rt0.c1)) AS INTEGER), (~ (rt0.c1)) COLLATE NOCASE, NULL, ((((((((((((((((COUNT(rt1.c2))OR(((rt0.c1)LIKE(rt1.c1)))))AND((~ (rt1.c0)))))AND(CAST(NULL AS NUMERIC))))AND(CASE rt1.c2  WHEN rt0.c0 THEN -1250132064 END)))AND(rt0.c1 COLLATE NOCASE)))OR(CAST(rt1.c0 AS INTEGER))))AND(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(((rt0.c0) IS TRUE))), (((((('P뢞!Jⴑ') IS TRUE))AND(COALESCE(DISTINCT rt1.c1, rt1.c1))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c2)))) FROM rt1;SELECT (((((((((((('')AND(rt0.c0)))OR(rt1.c2)))OR(CHANGES())))AND(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt1.c0)))))OR(ABS(rt1.c1))), MAX((rt1.c0 IN ())), ((((MAX(rt0.c0))AND(NULL)))AND((+ (rt0.c0)))) FROM rt0, rt1 WHERE ((((NULL))<=((INSTR(x'', NULL))))); -- 0ms;
SELECT ALL (((rt0.c2))>=(((- (rt0.c2))))) FROM rt1;SELECT DISTINCT (CAST(rt0.c2 AS NUMERIC) IN ()), LTRIM(((rt1.c0)==(rt1.c2)), ((rt1.c0) NOT BETWEEN (x'') AND (rt0.c0))), 0.2639751773179492 FROM rt0;SELECT ALL PRINTF(HEX(DISTINCT rt1.c1)) FROM rt0;SELECT DISTINCT CASE WHEN INSTR(rt1.c1, rt1.c0) THEN rt0.c0 WHEN CASE rt0.c2  WHEN rt0.c0 THEN 0.9670469984232237 WHEN -773439514 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END THEN x'e403' WHEN ((((rt0.c2)AND(rt1.c0)))AND(rt1.c2)) THEN '' END FROM rt1;SELECT 'rP퓕6l錇' FROM rt1 WHERE (SQLITE_COMPILEOPTION_USED((('Ez') NOTNULL))) ORDER BY (json_object(rt1.c2, rt0.c2) IN ()) DESC, (((- (1.438077396E9)))<((~ (NULL)))); -- 0ms;
SELECT DISTINCT TRIM(rt1.c1) COLLATE NOCASE FROM rt0, rt1 WHERE (CAST(((0.8466533181180671) IS TRUE) AS TEXT)); -- 0ms;
SELECT ALL TRIM((~ (rt1.c1))) FROM rt0;SELECT DISTINCT ((rt1.c0) IS TRUE) FROM rt0 ORDER BY rt0.c2  NULLS LAST;SELECT DISTINCT (((((''))!=((rt1.c0))))>>(COALESCE(DISTINCT rt0.c2, rt0.c0))) FROM rt1, rt0 WHERE (QUOTE(CAST('&rA*8D)' AS TEXT))); -- 0ms;
SELECT COUNT(*) OVER () FROM rt1, rt0 GROUP BY (((((((rt0.c1, rt1.c2, rt0.c0))>=((rt1.c0, rt1.c0, rt1.c1))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))AND(((rt1.c2) NOT NULL))), (- (LIKELY(rt0.c2))), rt1.c1, CASE CAST(rt1.c0 AS TEXT)  WHEN NULL THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)) ELSE UNICODE(rt0.c2) END, NULL HAVING (((rt0.c2)) BETWEEN (((rt0.c2 IN (rt1.c1)))) AND ((CAST(rt1.c1 AS NUMERIC)))); -- 0ms;
SELECT COUNT(((rt1.c2) IS FALSE)) FILTER(WHERE CAST((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt1.c1, rt0.c0)) AND ((rt1.c2, rt1.c0, rt0.c0))) AS REAL)) OVER () FROM rt1, rt0 WHERE ((('')LIKE(x'b5c7')) COLLATE NOCASE) ORDER BY (- (rt1.c2 COLLATE NOCASE))  NULLS FIRST, 0.6609721675707184  NULLS LAST; -- 0ms;
SELECT ALL (~ (CAST(rt1.c1 AS BLOB))) FROM rt0, rt1; -- 0ms;
SELECT ((((((((((((CAST(rt0.c2 AS NUMERIC))OR((+ (rt1.c0)))))OR(((((((((((((0.3563523670229318)AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))))OR(NULL)))OR((NOT (rt1.c0)))))AND((((rt0.c1))=((rt0.c1))))))AND(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c0 END)) FROM rt1 GROUP BY rt1.c2 HAVING ((x'') NOTNULL) ORDER BY ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((rt1.c2)||(rt0.c2))) AND (((((rt1.c2)AND(rt0.c2)))OR(rt1.c2)))) ASC  NULLS LAST, ((rt0.c0 COLLATE RTRIM)OR(((rt1.c0) IS TRUE))), ((CAST(rt0.c1 AS NUMERIC))>(rt1.c2 COLLATE RTRIM)) DESC  NULLS LAST;SELECT DISTINCT CASE (((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((rt0.c0)/(rt1.c2)) THEN 0.3914681509431225 END FROM rt0;SELECT DISTINCT '1393240288' FROM rt1 WHERE (((((x'f71c' IN ()), ((0x3dbd54ee) NOT BETWEEN ('437483867') AND (x'')), x''))>=((((x'5e48')>>('')), ((x'') NOTNULL), '0.5340008960652162')))); -- 0ms;
SELECT DISTINCT COUNT(*), ((((((rt1.c1) IS TRUE))OR(CASE WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c1 END)))OR(rt0.c0)), ((rt0.c1) ISNULL) FROM rt1;SELECT NULL FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (NOT (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)))) FROM rt1;SELECT ALL (rt0.c2 COLLATE BINARY IN ()), (((rt1.c1)) BETWEEN ((((rt1.c1)<>(rt1.c1)))) AND (('-1987553678'))), rt1.c2, ((((rt0.c0) ISNULL))OR(NULL)), ((((rt1.c1) NOTNULL)) IS TRUE) FROM rt0 WHERE (IFNULL('' COLLATE NOCASE, (('-1445309356')>>('-1158417991'))));SELECT ALL CAST((rt1.c0 IN ()) AS TEXT), ((((((((rt0.c1)AND(x'')))OR(rt0.c1)))OR((~ (0.15980486465785793)))))OR(1.944701053E9)), NULL FROM rt1 GROUP BY (((((((rt1.c1))==((rt1.c2))))AND(((rt0.c0)>=(rt1.c0)))))AND(rt1.c2));SELECT ALL rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(CAST(rt0.c0 AS NUMERIC), (((- (rt0.c0)))|(CAST(rt0.c0 AS NUMERIC)))) OVER () FROM rt0;SELECT DISTINCT ((((((0.23842970288279275)AND(rt1.c2)))AND(rt0.c2))) BETWEEN ('1944701053') AND (CAST(rt1.c0 AS TEXT))) FROM rt0, rt1; -- 0ms;
SELECT ALL (((rt1.c2, rt1.c0, rt0.c1, rt0.c1, rt1.c0))>((0.6749443247613242, rt0.c2, rt1.c0, rt0.c1, rt0.c2))) COLLATE BINARY, (NOT (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))), SUM(((rt1.c0) BETWEEN (rt0.c2) AND (rt1.c0))) FROM rt0, rt1 WHERE (((((((((0X70186498)OR(NULL)))AND(NULL)))AND(TYPEOF(DISTINCT '1035818222'))))OR(CASE WHEN NULL THEN 0.3115269046848118 ELSE NULL END))); -- 0ms;
SELECT ((CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE) FROM rt1, rt0 NOT INDEXED WHERE (((('ik', '-1011901400', x'', x'c8b8', x'6e86d2b8'))>((0.788967395392234, 'l38+', '227249831', '-1082607095', '336749858'))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE NOCASE)>>(((rt1.c0)>=(rt1.c1)))), ((CAST(rt0.c1 AS REAL)) IS FALSE), -1.7976931348623157E308 COLLATE NOCASE FROM rt1;SELECT CAST((~ (rt0.c2)) AS REAL) FROM rt0, rt1; -- 0ms;
SELECT (((((((((+ (rt1.c0)))AND(((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))))AND(CAST(rt0.c1 AS REAL))))OR((rt0.c0 IN ()))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt0.c2 END)) FROM rt0 WHERE (((NULL) NOT NULL)) GROUP BY 0.22605974926595007;SELECT DISTINCT (- (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c0 END)), COUNT(TOTAL_CHANGES()) OVER (), COUNT(*) FROM rt0;SELECT DISTINCT ((((rt1.c0)<=(rt0.c0)))>=(((rt0.c1)<>(rt0.c1)))) FROM rt1;SELECT DISTINCT rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT (((NOT (rt1.c1)))/(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c1 END)) FROM rt1, rt0; -- 0ms;
SELECT (('1146605440')||(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))), CAST(((rt1.c2) NOTNULL) AS REAL), '뢞' FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE NOCASE)OR(CASE rt0.c0  WHEN rt0.c2 THEN rt1.c1 ELSE rt0.c0 END)) FROM rt0;SELECT DISTINCT (rt1.c0 IN (((rt0.c1)>=(rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt1.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))))) FROM rt0 WHERE ((- (CAST(0.9252377295277235 AS INTEGER))));SELECT DISTINCT (((((rt0.c0, rt1.c0, rt0.c2))>((rt0.c0, rt1.c1, '-2122994369')))) NOT BETWEEN ((((rt0.c0, rt1.c0, rt1.c1)) BETWEEN ((rt0.c1, rt1.c2, rt1.c2)) AND ((rt0.c1, rt1.c1, rt1.c0)))) AND (NULL)) FROM rt1 WHERE (-1.881328032E9);SELECT DISTINCT ((IFNULL(rt0.c1, rt1.c0))|(IFNULL(DISTINCT rt1.c1, rt0.c2))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt0.c1, '<E', (((((((rt0.c2)AND(rt1.c2)))AND(rt0.c1)), ('-989879039' IN ()), rt1.c0))<((x'', ((((0.9029951233645384)AND(rt1.c2)))AND(rt0.c0)), 0.746215783459371))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CASE ((rt1.c1) BETWEEN (0.3391435593997051) AND (rt0.c2))  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN ((rt0.c2)-(rt0.c0)) WHEN NULL THEN (((rt0.c0))<=((rt0.c0))) WHEN rt0.c2 COLLATE BINARY THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c1 END END, (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) IN ((~ (rt0.c0)), TRIM(DISTINCT rt1.c2))), CASE ((rt1.c1)<(rt1.c0))  WHEN ((rt0.c2)+(rt0.c1)) THEN rt1.c2 COLLATE RTRIM END FROM rt0 GROUP BY ((((((((rt1.c0)AND(rt1.c0)))AND(rt0.c2)))AND(rt1.c1 COLLATE RTRIM)))AND(rt0.c0)), ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (''))) BETWEEN ('-1838321543') AND ((~ (rt1.c0)))), ((SQLITE_SOURCE_ID())IS NOT((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))) HAVING x'' LIMIT -1006011367;SELECT DISTINCT TOTAL_CHANGES(), CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN 7.94640642E8 THEN x'' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS INTEGER), CAST(((rt1.c0) IS TRUE) AS NUMERIC), CAST(-1522596257 AS TEXT), COALESCE(DISTINCT ((rt1.c1)&(rt1.c0)), ((-1900955093)!=(rt0.c1))) FROM rt1, rt0 WHERE (UPPER(((x'')/('-1884941522')))); -- 0ms;
SELECT DISTINCT CASE (rt0.c0 IN ())  WHEN CAST(rt1.c1 AS BLOB) THEN (((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2))) WHEN ((rt1.c0) NOT BETWEEN (rt0.c1) AND (-1.505666692E9)) THEN MAX(rt0.c2) WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt1.c0 THEN rt0.c1 END END, rt0.c2 COLLATE RTRIM, GROUP_CONCAT(((rt0.c0) ISNULL)) FILTER(WHERE ((CAST(rt1.c1 AS NUMERIC)) IS FALSE)) OVER () FROM rt1 WHERE ((((('Byrwa{49')+(NULL))) NOT BETWEEN (((185272793) IS TRUE)) AND (0Xffffffff86d946a1 COLLATE RTRIM))) LIMIT 1836361485;SELECT DISTINCT LEAD(((rt1.c2)>>(rt0.c0 COLLATE NOCASE)), ((0.7774961963930423) NOT BETWEEN (((rt0.c0)LIKE(rt1.c2))) AND (((rt0.c2) IS TRUE))), ((((rt1.c2)<<(rt1.c1))) IS FALSE)) OVER () FROM rt1, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((('rP퓕6l錇', -1724482103, ''))>=((x'', '294175110', x'3605'))))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt1;SELECT ALL CAST(TRIM(rt1.c2) AS NUMERIC), (LIKELY(rt0.c0) IN ()), 'O1IBwCB' FROM rt0, rt1; -- 0ms;
SELECT DISTINCT MIN(((((rt0.c1)AND(rt0.c2)))AND(rt1.c1))) COLLATE NOCASE FROM rt1;SELECT DISTINCT (((((rt1.c1 IN ()))AND(((rt0.c2)||(rt0.c2)))))OR(COUNT(*))), SUM(((0.34061046242896587)*(rt1.c0))) FILTER(WHERE ((~ (rt0.c2)) IN ((+ (rt0.c2))))) OVER (), (((rt0.c2, rt0.c0, rt1.c2)) BETWEEN (((rt1.c1 IN ()), (((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))), rt1.c1)) AND ((json_valid(rt0.c1), '', (((rt0.c2))>((rt1.c2)))))) FROM rt1, rt0 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c2 END)>>((rt1.c1 IN ())))  NULLS FIRST LIMIT 1035818222; -- 1ms;
SELECT DISTINCT ((((rt1.c1) IS FALSE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0 GROUP BY ((((rt1.c0)LIKE(rt1.c2))) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END) AND ((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) HAVING CAST(rt1.c1 AS TEXT) COLLATE NOCASE LIMIT 540063211 OFFSET 99396825;SELECT ((((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))IS NOT(MIN(rt0.c2))), CASE WHEN ((((rt1.c2)AND(rt0.c1)))OR(rt0.c1)) THEN (((rt1.c0, rt1.c0, rt1.c1))>=(('J~', rt0.c2, rt0.c0))) WHEN CAST(-1.884941522E9 AS NUMERIC) THEN AVG(rt1.c0) WHEN TRIM(-2062044119) THEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((rt1.c1) NOT BETWEEN (rt0.c0) AND (0.18623037574374735)) END, load_extension('-1976274377') FROM rt0;SELECT DISTINCT COUNT(0Xffffffffe4405644) OVER ( ROWS BETWEEN ((rt0.c2 COLLATE BINARY)|((((rt1.c1)) BETWEEN ((0.17310576365261032)) AND ((rt1.c2))))) FOLLOWING AND ((((0xfffffffff7c59e1a) IS FALSE))>(((rt1.c2) BETWEEN (rt1.c0) AND (x'')))) PRECEDING) FROM rt1;SELECT DISTINCT ((rt0.c0 IN ()) IN ()), (((rt0.c0, rt1.c1, rt0.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), rt1.c1 COLLATE RTRIM, ((rt0.c2)+(rt0.c0)))) AND (('-138043878', HEX(DISTINCT rt0.c0), ((rt0.c2) NOT BETWEEN (rt1.c1) AND (4.37483867E8))))), ((((rt1.c2)>(rt1.c1)))-(((NULL)+(rt0.c2)))) FROM rt0, rt1 WHERE (((('-934899336')) BETWEEN (((((0Xffffffffa54b69e8)) BETWEEN ((0.8594274844857823)) AND ((0.050567158234882004))))) AND ((((NULL)&(-1338403961)))))); -- 1ms;
SELECT '2113851704', LOWER((rt0.c1 IN ())), CASE (+ (rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c1)) THEN rt1.c0 END FROM rt1;SELECT ALL (((((x'')OR(rt1.c1)))OR(rt0.c2)) IN ()) FROM rt1 WHERE ((- (''))); -- 0ms;
SELECT CAST((((rt1.c1))>=((rt0.c2))) AS TEXT) FROM rt1 WHERE (HEX(DISTINCT (NULL IN ())));SELECT (((rt1.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((rt0.c0, ((NULL) BETWEEN (rt1.c2) AND (rt1.c1)), (rt1.c0 IN ()))) AND (((rt0.c2 IN ()), (rt0.c2 IN ()), ((rt0.c1)%(rt0.c1))))) FROM rt0 LIMIT -759284899;SELECT DISTINCT CAST(HEX(DISTINCT rt1.c0) AS BLOB), rt0.c0, (((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) BETWEEN (((((rt1.c2)OR(NULL)))OR('C\n'))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt1;SELECT PERCENT_RANK() OVER () FROM rt1 WHERE (CASE ((1373467047)|('Mc'))  WHEN (NULL IN ()) THEN NULL WHEN JULIANDAY(x'', 0.5679415402208754, x'') THEN 0X1a13795b WHEN (NOT (x'')) THEN (0.16939212879879517 IN ('1612073810')) ELSE (~ (NULL)) END) GROUP BY (((rt0.c2 IN ())) NOT BETWEEN ((rt1.c0 IN ())) AND (rt0.c1)) HAVING rt0.c0;SELECT DISTINCT ((SUBSTR(rt1.c2, rt0.c1))|(CAST(rt0.c0 AS BLOB))), x'', ((((((rt1.c0)AND(rt0.c2)))AND(rt0.c0))) NOTNULL), ((rt0.c0) NOT BETWEEN (((rt0.c0)-(rt0.c2))) AND (((rt1.c0)GLOB(rt1.c1)))), (NOT ((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))) FROM rt0 ORDER BY ((((rt1.c1)|(rt1.c0)))+(((rt1.c2)<=(x''))))  NULLS FIRST;SELECT DISTINCT CAST(NULL AS INTEGER) FROM rt0 WHERE ((((~ ('764894569')))%(((x'')<('-1040193812'))))); -- 0ms;
SELECT ALL ((rt0.c2) BETWEEN (((rt0.c2)&(rt1.c0))) AND (CASE WHEN rt0.c0 THEN rt1.c0 END)) FROM rt0 WHERE ((((x'', 0.08188526257531392, x'5cdd')) NOT BETWEEN ((CASE x''  WHEN NULL THEN x'' WHEN NULL THEN 'JO' WHEN '-1549789932' THEN '' WHEN '' THEN 'FALSE' WHEN 0.583256691622265 THEN '' ELSE NULL END, (+ ('kIFi)pr')), CAST(NULL AS NUMERIC))) AND (((~ ('-1914652002')), NULL, COALESCE(DISTINCT x'', NULL, -1.082607095E9, 0.5158884986276792)))));SELECT DISTINCT ((json_patch(rt1.c1, rt1.c0))GLOB(((rt0.c2) NOTNULL))) FROM rt0 WHERE (CASE ((x'') NOTNULL)  WHEN ((x'5205') IS TRUE) THEN x'4f3b' END);SELECT (((((rt1.c1)OR('')))AND(rt1.c1)) IN (json_object(rt0.c1, rt0.c0, rt0.c2, rt1.c2, rt1.c2, rt0.c1))), (((rt1.c0 IN (rt1.c1))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2)))) AND (COUNT(rt1.c2))), (((rt1.c2) IS TRUE) IN ()) FROM rt0 ORDER BY CASE (+ (rt0.c0))  WHEN ((((rt1.c2)OR(rt1.c1)))AND(rt0.c1)) THEN ((rt1.c0)+(rt1.c0)) ELSE (((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) END DESC;SELECT rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT RTRIM(((NULL)<(rt1.c1))), LEAD(SQLITE_COMPILEOPTION_GET(CAST(rt1.c1 AS BLOB)), (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))))), rt0.c0) OVER (), (((((rt1.c0, rt0.c1, rt0.c1, '-1e500', x'872b')) BETWEEN ((rt1.c0, rt1.c0, NULL, x'', rt1.c2)) AND ((rt1.c2, rt0.c0, rt1.c1, 'r걻2픍', rt1.c1))))>>(CASE rt1.c1  WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c1 END)), rt0.c2, ((((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c0 END) AND (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))) FROM rt1, rt0 WHERE ((((('1187800427')*(x''))) NOT BETWEEN ('-j' COLLATE RTRIM) AND (TRIM(x'')))); -- 1ms;
SELECT DISTINCT CAST(x'' AS BLOB) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((rt0.c2)/(rt0.c1)))LIKE(rt0.c1 COLLATE RTRIM)), ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))|(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))))) OVER () FROM rt0;SELECT ALL (+ ((rt1.c2 IN ()))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((('')IS NOT(rt1.c2))) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt0.c0)>=(NULL)) COLLATE NOCASE, (((((0.14941471841977738) NOT BETWEEN (rt0.c0) AND (rt1.c0))))<(((rt0.c0 IN ())))), ((((rt0.c1) BETWEEN (1.873650081E9) AND (rt0.c1)))GLOB((rt0.c1 IN ()))) FROM rt0, rt1 WHERE ((+ (x'7401')) COLLATE BINARY); -- 0ms;
SELECT ALL ((((rt0.c2)|(rt0.c1))) IS FALSE), ((NULL) IS FALSE), AVG((NOT (rt1.c1))) FROM rt0, rt1 WHERE ((~ (((x'')IS NOT(-1058657033))))); -- 0ms;
SELECT DISTINCT (((rt0.c1, rt1.c0, rt1.c0, rt0.c2, rt1.c2)) BETWEEN ((CASE rt1.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c2 END, x'd606', COUNT(*), ((rt0.c1)>(rt1.c0)), ((((((((rt1.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt1.c2)))AND(rt0.c1)))) AND (((((rt1.c0, rt1.c2, rt0.c1))<=((rt1.c0, rt0.c1, rt1.c1))), rt1.c0 COLLATE NOCASE, CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END, ((((rt1.c2)OR(NULL)))OR(rt0.c0)), rt0.c1 COLLATE NOCASE))) FROM rt1 WHERE ((CASE '-1465859493'  WHEN '-1032907389' THEN '-1350661274' ELSE x'' END IN ()));SELECT DISTINCT ((((rt0.c2)AND(rt1.c1)))AND(rt1.c2)) COLLATE BINARY FROM rt1 WHERE ((CAST(NULL AS TEXT) IN (('/<' IN ()), LIKELIHOOD(DISTINCT -1101729467, 0.18597753492619706))));SELECT ALL ((((rt1.c0) ISNULL))<=(IFNULL(rt1.c1, rt1.c0))), SUM(rt1.c0) OVER (), ((((rt0.c0) NOT NULL))||(MIN(rt1.c2))) FROM rt0 WHERE (((CASE x''  WHEN 0.02116928628868875 THEN '' ELSE x'cb84' END) IS FALSE));SELECT DISTINCT ((ABS(rt1.c0)) IS FALSE) FROM rt0;SELECT DISTINCT ((((CASE WHEN rt1.c1 THEN rt0.c1 END)OR(0xffffffff926463bc)))OR(HEX(rt0.c2))), ((((((((((((((((rt0.c1)OR(rt1.c2)))OR('-133417635')))OR(x'526f')))AND(rt0.c2)))OR(MIN(rt0.c2))))OR('-791936062')))OR(MAX(rt1.c0))))AND(((rt1.c2) BETWEEN (rt0.c1) AND (NULL)))), AVG(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0))) FROM rt0;SELECT ALL (+ (NULL)) FROM rt0, rt1 WHERE ((~ (LTRIM(0Xffffffff9f882b36, '[]N')))); -- 0ms;
SELECT DISTINCT x'' FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((x'acd311e6')<=(((rt1.c2)IS(rt0.c2)))) FROM rt1 WHERE (((NULL COLLATE RTRIM)IS NOT(x'1a36'))) GROUP BY (((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c0))) AND (CAST(rt1.c2 AS REAL))), ((((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))AND((NULL IN (rt1.c1)))))OR(rt0.c1)), json_remove(NULL, (NOT (rt0.c1)), x'8ef8', CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END);SELECT DISTINCT '-256117379', ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)>=((+ (rt0.c1)))), CAST((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS REAL) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((SUM(rt0.c0))/(((((((((rt0.c1)OR(rt1.c2)))AND(rt1.c1)))OR('')))AND(rt0.c1)))) FROM rt0, rt1 WHERE (((0.6745615176337878)+((0.6745615176337878 IN ())))); -- 0ms;
SELECT DISTINCT (((rt1.c0))<=((IFNULL(DISTINCT rt1.c2, rt0.c1)))) FROM rt0, rt1 WHERE ((NOT (x'4d36' COLLATE BINARY))); -- 1ms;
SELECT ((((x'0102') BETWEEN (rt0.c0) AND (rt1.c0))) NOTNULL) FROM rt1 WHERE (((((((NULL)AND('')))OR('{mR.,违')))/((NULL IN ()))));SELECT CASE WHEN (((0.6285064725102727, 0.5254218388172416, rt0.c1))!=((rt0.c2, rt0.c0, rt0.c2))) THEN MIN(rt1.c2) END, (NOT (((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))OR(rt0.c1)))), ((((((rt1.c2)AND(rt0.c2)))AND(rt1.c0)))AND(-1465859493)) FROM rt0 WHERE ('');SELECT CUME_DIST() OVER () FROM rt1, rt0 WHERE ((((((x'')OR('1542311416')))AND(-9.71810183E8)) IN ())); -- 0ms;
SELECT DISTINCT ((((rt1.c1) IS FALSE)) BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c2)) FROM rt0;SELECT ((CASE rt0.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c2 END)LIKE(((rt1.c1)<<(rt0.c1)))) FROM rt0, rt1 WHERE (CAST(x'bddd' COLLATE BINARY AS TEXT)); -- 0ms;
SELECT ALL ((((x'')IS(rt1.c0))) IS TRUE) FROM rt1 ORDER BY CAST(CAST(rt0.c0 AS INTEGER) AS BLOB)  NULLS LAST;SELECT CASE (((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0)))  WHEN (((rt0.c0))>((rt0.c0))) THEN CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c1 END WHEN CAST(rt1.c1 AS INTEGER) THEN ((rt0.c0)+(rt0.c2)) WHEN MAX(rt0.c1) THEN ((rt0.c2) NOT NULL) ELSE ((((rt0.c0)AND(rt0.c2)))OR(rt1.c0)) END, ((x'') NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2)))), (((rt1.c1)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) AND (((- (rt1.c2))))) FROM rt0, rt1 WHERE (((((~ (0.4043583026143085))))<>(((('g{G1')<=(NULL)))))); -- 0ms;
SELECT CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN (~ (149071880)) THEN CAST(rt0.c2 AS TEXT) ELSE x'' END FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c0, (((((~ (rt1.c1)))OR(((((rt1.c2)AND(NULL)))OR(rt0.c2)))))AND(TRIM(rt0.c1))), CASE WHEN ((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((rt0.c1)OR(rt1.c2)))OR(rt1.c2)) END FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CASE ((((rt0.c1)OR(rt1.c1)))OR(rt1.c2))  WHEN rt0.c2 THEN (- (rt0.c2)) ELSE CASE rt1.c2  WHEN '' THEN rt1.c1 ELSE rt1.c0 END END, CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC), (~ (rt1.c1 COLLATE BINARY)), (((rt1.c1) NOT NULL) IN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))))), ((rt0.c0 COLLATE BINARY) NOT BETWEEN ((+ (rt1.c1))) AND ((('&v')<>(rt0.c1)))) FROM rt1;SELECT CAST(((rt1.c1) IS FALSE) AS INTEGER) FROM rt0, rt1 WHERE (SQLITE_COMPILEOPTION_GET(((NULL)>=('1977906548')))) GROUP BY (~ (NULLIF(rt1.c0, rt0.c2))), CASE WHEN ((rt0.c1)+(rt0.c0)) THEN (rt0.c0 IN (rt0.c2)) WHEN ((rt0.c0)%(rt1.c1)) THEN CAST(rt1.c1 AS NUMERIC) WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c1) IS FALSE) END, (((CAST(rt0.c2 AS BLOB)))<=((rt1.c1 COLLATE BINARY))) HAVING rt0.c1; -- 0ms;
SELECT ((((SUM(rt0.c0))AND(CASE rt0.c1  WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END)))AND(((rt1.c0) NOT NULL))) FROM rt1;SELECT DISTINCT ((rt1.c0)<=(((NULL) IS FALSE))) FROM rt1 WHERE (((MIN(0xffffffffd0665e5d, '-38464859')) NOT BETWEEN ((('') IS TRUE)) AND ((+ (NULL))))); -- 1ms;
SELECT ALL CASE WHEN '' THEN (rt1.c0 IN ()) WHEN (((rt0.c0))<((0.2161526855811884))) THEN 0.5977225832480249 WHEN 0.9925289508771776 THEN (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))) END FROM rt0 WHERE (HEX(((x'')/(x''))));SELECT DISTINCT CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN rt1.c2 WHEN ((((((((((((rt0.c2)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt1.c1)) THEN (rt1.c1 IN ()) WHEN NULLIF(DISTINCT rt1.c1, rt0.c2) THEN ((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c0)) WHEN ((((rt0.c2)AND(rt0.c2)))OR(x'')) THEN x'dc7e' WHEN ((rt0.c2)>(rt0.c2)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt0.c0)<>(rt0.c1)) END, CAST(CAST(x'' AS BLOB) AS BLOB), rt0.c1, ((((rt0.c2 IN ()), ((((rt1.c0)OR(rt0.c2)))AND(rt0.c0)), (rt1.c1 IN (rt0.c0))))>((((rt1.c0)/(rt0.c0)), x'', ((rt0.c0) IS TRUE)))), CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c0 END AS REAL) FROM rt0;SELECT ALL (0.5924936688645134 IN ()), (((((rt0.c1) IS TRUE)))==(((rt1.c1 IN ())))), ((MIN(rt1.c1))<<((((rt1.c2))<((rt0.c2))))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c2)) BETWEEN ((((('J	(䝴0\')) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END))) FROM rt0 WHERE (((COALESCE(NULL, x'6d12'))IS NOT((x'' IN ()))));SELECT '-1267865043' FROM rt1, rt0 WHERE (CASE WHEN ((x'') NOT BETWEEN (NULL) AND (0xffffffffc4c46fa6)) THEN (((('239502577')AND(NULL)))OR(0X25b42a0)) WHEN (((NULL)) NOT BETWEEN ((NULL)) AND ((x''))) THEN HEX(DISTINCT 0.08099251356928949) WHEN (NULL IN (NULL)) THEN (x'' IN ()) ELSE (('Vh') NOT BETWEEN (NULL) AND (x'')) END); -- 0ms;
SELECT ALL ((((rt0.c0)>>(rt0.c1)))LIKE((rt1.c2 IN ()))) FROM rt0, rt1; -- 5ms;
SELECT rt0.c2 FROM rt1 GROUP BY ((((rt1.c0 COLLATE NOCASE)AND(LOWER(rt0.c2))))AND(CASE rt1.c1  WHEN rt0.c0 THEN rt0.c1 END)), (((NOT (rt0.c1)))IS((rt1.c2 IN ()))), CAST(rt1.c1 COLLATE RTRIM AS BLOB) HAVING COUNT(*);SELECT ALL ((-1928797578)IS NOT(0.6645788926605508)) FROM rt1; -- 1ms;
SELECT (((rt1.c0)) NOT BETWEEN ((((rt1.c1)%(rt1.c2)))) AND (((((rt1.c2))>=((rt1.c2)))))) FROM rt0;SELECT DISTINCT ((((rt0.c2) NOT BETWEEN ('') AND (rt1.c2))) ISNULL) FROM rt1, rt0 WHERE (((((0.4421966952663027)OR('891907599'))) NOT BETWEEN (CASE '-1042750204'  WHEN x'' THEN 'e紺' ELSE '<E' END) AND (CAST(1.7976931348623157E308 AS NUMERIC)))); -- 0ms;
SELECT ((LIKELIHOOD(rt0.c1, 0.0924896349914347))>(NULLIF(rt1.c2, rt1.c2))) FROM rt1, rt0 WHERE ((((x'') ISNULL) IN ())); -- 0ms;
SELECT DISTINCT IFNULL(rt0.c2 COLLATE NOCASE, ((rt0.c2) IS TRUE)) FROM rt0, rt1 WHERE (json_array_length(((NULL)!=(0.5374256825499766)))) ORDER BY (((('mzpF')<<(rt0.c1))) NOTNULL) ASC, (~ (TRIM(DISTINCT rt0.c2))) DESC  NULLS FIRST; -- 0ms;
SELECT ((rt0.c2) BETWEEN (NULL) AND (rt0.c0)) COLLATE BINARY FROM rt1 WHERE ((((((NULL) ISNULL)))<((0.922993113739202 COLLATE NOCASE))));SELECT DISTINCT CAST(((rt0.c0)&(x'')) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT 'M&\r>dl}p' COLLATE RTRIM FROM rt0, rt1 LIMIT 548851174; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0, rt1; -- 0ms;
SELECT ((rt1.c2 IN (rt1.c2)) IN ()) FROM rt1; -- 0ms;
SELECT ALL json_object(rt0.c1, (+ (rt1.c0))), ((rt1.c0) BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND ('0.45590543536370376')), CASE WHEN rt0.c1 THEN (((rt1.c2, rt0.c2, rt1.c2)) NOT BETWEEN ((rt0.c2, rt1.c1, rt1.c2)) AND ((rt1.c2, rt0.c2, rt0.c2))) ELSE ((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c0)) END FROM rt0, rt1 WHERE (((NULL) NOT NULL) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1))))==((CAST(rt1.c1 AS TEXT)))) FROM rt1, rt0 GROUP BY ((((((((rt1.c1 COLLATE BINARY)AND(CAST(rt1.c2 AS REAL))))AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))OR((rt0.c1 IN ()))))AND(SQLITE_VERSION())) HAVING ((((rt0.c0)||(rt0.c0)))IS(rt1.c1)); -- 1ms;
SELECT ALL NULL, MIN(COUNT(*)), ((((((0.533056585811384) BETWEEN (rt0.c1) AND (rt1.c2)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(rt1.c0)), rt0.c2, (((+ (rt0.c2))) NOT NULL), UPPER(DISTINCT (+ (rt0.c0))), CAST(COUNT(rt0.c2) AS REAL) FROM rt1, rt0 WHERE (((((x'630fc551104f')IS(0.665525848644598)))LIKE((- (NULL)))));SELECT (+ (TOTAL(rt1.c2))) FROM rt0 WHERE ((((('	') NOT BETWEEN (NULL) AND (0.9716289256228088))) NOT BETWEEN ((('FALSE') IS FALSE)) AND (0.5104105937885329 COLLATE BINARY)));SELECT ALL ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))) IS FALSE) FROM rt0, rt1 WHERE (((0.31897608959761203 COLLATE NOCASE) BETWEEN ((x'' IN ())) AND ('-v' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT rt0.c1 COLLATE NOCASE FROM rt1, rt0 WHERE (UPPER(((1.035818222E9) IS TRUE))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)OR(rt0.c0)))AND(rt1.c2)) COLLATE BINARY COLLATE RTRIM, x'', ((('or', rt1.c0, rt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)), ((rt1.c0) NOT NULL), (rt0.c1 IN ()))) AND ((-6.86722016E8, rt0.c2, NULL))), NULL, COUNT((rt1.c0 IN (rt1.c2))) FROM rt1, rt0 LIMIT -1688607929; -- 1ms;
SELECT DISTINCT COUNT(*), rt1.c1 COLLATE BINARY, (((rt0.c0, ((rt1.c0)+(rt0.c2)), load_extension(rt0.c1)))>=((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c1)), IFNULL(rt1.c1, rt1.c1), rt1.c0 COLLATE BINARY))) FROM rt0 GROUP BY ((((((((rt0.c2)OR(rt1.c0)))OR(rt0.c1)))OR(SQLITE_COMPILEOPTION_USED(rt1.c1))))AND((((rt1.c2))<>((rt0.c0))))), ((CAST(rt1.c0 AS TEXT)) IS FALSE), ((((((rt1.c1)AND(rt1.c2)))AND(rt0.c0))) NOT BETWEEN (((rt1.c0) BETWEEN ('1387881721') AND (rt1.c1))) AND (((rt0.c0)IS(rt1.c1)))) HAVING ((((rt1.c0) BETWEEN (rt0.c2) AND ('1426417290')))<(TRIM(NULL, rt0.c0)));SELECT TOTAL(CASE rt0.c0  WHEN rt0.c1 THEN '378109525' END) FROM rt1 INTERSECT SELECT DISTINCT ((((rt1.c1)LIKE(rt1.c1)))%((0.5876283875615452 IN ()))) FROM rt0, rt1;SELECT DISTINCT (CAST(rt1.c2 AS REAL) IN (JULIANDAY(rt1.c2, rt0.c2, rt1.c1))) FROM rt0 WHERE (((((0.07129545528843706) IS TRUE)) NOT NULL));SELECT ((x'3860') NOT NULL) FROM rt1, rt0; -- 0ms;
SELECT (((rt0.c0 IN ())) IS TRUE) FROM rt0 WHERE (CAST((NOT (0.9805645805428826)) AS NUMERIC)); -- 1ms;
SELECT NTILE(((rt0.c0 COLLATE BINARY) NOTNULL)) OVER (), ((CAST(rt0.c0 AS NUMERIC))*(rt1.c0)), ((rt0.c0 IN (rt1.c1)) IN ((rt1.c0 IN (rt1.c1)))) FROM rt1, rt0 WHERE (CAST(NULL AS TEXT) COLLATE NOCASE) GROUP BY ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))) ISNULL) HAVING (rt1.c0 IN (-2.91312969E8, (rt0.c0 IN (rt1.c2)))); -- 0ms;
SELECT ALL ((CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt1, rt0 WHERE (('0HyTCIs\T' IN ())); -- 0ms;
SELECT DISTINCT (- ('')), COUNT(*) OVER (), ((rt0.c1)/(MIN(rt1.c0))) FROM rt0, rt1 ORDER BY ((rt1.c1 IN (rt0.c0)) IN ())  NULLS LAST, TRIM(DISTINCT ((rt0.c1)LIKE(rt1.c2)), ''), (((((x'' IN ()))AND((((rt0.c0))>((rt0.c1))))))AND(((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c0))))  NULLS FIRST;SELECT DISTINCT SUM(((rt0.c1)<=(NULL))), (((rt1.c0 IN (rt1.c2))) NOT NULL), ((((rt1.c2)&(rt0.c2)))LIKE(x'be2d')) FROM rt1;SELECT DISTINCT CASE WHEN x'' THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE NOCASE FROM rt1, rt0 WHERE ((((((((((NOT (0.48758272576930495)))OR(x'')))AND('-1575260919' COLLATE BINARY)))AND(json_patch(x'', x'67e4'))))AND(((NULL) NOT BETWEEN (-2.011029626E9) AND ('c\n'))))) LIMIT -952643349 OFFSET 1299829275; -- 1ms;
SELECT ALL 0X74e71754, (((CAST(0x2c903065 AS INTEGER)))<=((CAST(rt1.c2 AS INTEGER)))), (NOT ((rt1.c2 IN ()))) FROM rt1 WHERE ((NOT (CASE x'630d16da'  WHEN 'ae' THEN 0.18042220867267345 WHEN '0.922993113739202' THEN 1.087824527E9 WHEN '1939111607' THEN NULL ELSE x'' END))) ORDER BY CASE (- (-1891082170))  WHEN ((((rt1.c1)OR(rt0.c0)))OR(rt1.c0)) THEN rt0.c2 ELSE NULL COLLATE NOCASE END DESC, ((CASE WHEN rt0.c0 THEN rt0.c1 END)|((0.5974278681606693 IN ()))) DESC, CAST(rt0.c0 AS REAL) COLLATE RTRIM  NULLS FIRST;SELECT DISTINCT CAST(((rt1.c2)OR(rt1.c1)) AS BLOB), CASE WHEN ((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c0)) THEN LIKELIHOOD(rt0.c2, 0.9351203476171182) END, MAX(TOTAL((((rt0.c2, rt0.c1, 0.5935085064272483))>((rt1.c1, rt1.c2, rt0.c0))))) FROM rt0, rt1 WHERE ((((0x530b28e0 IN (x''))) BETWEEN ((((((((('')OR('1416143191')))AND(0.15992624914770281)))OR(0.1455409762816121)))AND('DGUk3Z'))) AND ((((558888987, '939496199', 0.3805825575313445)) BETWEEN ((0.16939212879879517, 'fg_B	5', 0.24813476001737844)) AND ((x'', 0.08785255186637231, '')))))) GROUP BY ((CAST(rt1.c2 AS NUMERIC)) NOT NULL);SELECT DISTINCT rt1.c0, ((((rt0.c2)<=(rt1.c1)))<((((x'')) BETWEEN ((rt1.c0)) AND ((rt0.c0))))), CAST((((rt1.c2))>=((rt0.c1))) AS TEXT) FROM rt0, rt1 WHERE (0.9229296498593845); -- 0ms;
SELECT DISTINCT ((rt0.c2)/(NULLIF(rt1.c1, rt1.c2))) FROM rt1, rt0 WHERE ((CASE 0.6393717531486945  WHEN x'1e09' THEN 0.1011008428264667 ELSE '2023496832' END IN ())); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS NUMERIC))AND(((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))), ((~ (rt0.c0)) IN ()), (CAST(0.09124331385662643 AS INTEGER) IN ('-150563349' COLLATE NOCASE, COALESCE(DISTINCT rt0.c0, rt1.c2), rt0.c2)) FROM rt0 WHERE ((~ (COALESCE(DISTINCT NULL, 'Y<KP-x'))));SELECT DISTINCT (((NOT (rt0.c2)))*(COUNT(*))) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT((rt1.c0 IN ())) OVER (), ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)OR(COUNT(*))))AND(CASE WHEN rt0.c0 THEN '-36475349' END)), x'66af' FROM rt0, rt1 WHERE (CASE WHEN (((0.6916821552809188))=((NULL))) THEN CASE NULL  WHEN 0.8790532737055327 THEN NULL ELSE NULL END END) GROUP BY ((CAST(rt1.c1 AS NUMERIC)) BETWEEN (rt0.c1) AND (x'')), (((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))) BETWEEN ((((rt0.c0))==((rt0.c1)))) AND (((x'f937') ISNULL))), CASE CAST(rt1.c2 AS INTEGER)  WHEN 0.30060032338794307 THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END; -- 1ms;
SELECT DISTINCT CASE WHEN (((rt0.c0, rt0.c0, rt0.c2))<((rt0.c2, rt1.c0, rt1.c1))) THEN (NOT (NULL)) WHEN rt1.c2 COLLATE RTRIM THEN CAST(x'' AS BLOB) WHEN ((0xfffffffffb900c02)<<(rt0.c1)) THEN CAST(rt1.c1 AS INTEGER) END, GROUP_CONCAT(ABS(rt1.c2)) OVER ( ORDER BY (- ((rt1.c0 IN (rt0.c2, rt1.c0)))) ASC, COALESCE((rt1.c2 IN ()), CAST(rt0.c1 AS TEXT), CAST(rt1.c2 AS INTEGER), CAST(rt1.c0 AS TEXT)) ASC GROUPS ((rt1.c2 COLLATE RTRIM)<(((rt0.c2) IS FALSE))) PRECEDING), TRIM(((rt0.c1)&(rt0.c1))) FROM rt1, rt0;SELECT DISTINCT ((((((rt0.c0)==(rt1.c1)))OR((rt1.c2 IN (rt0.c2)))))OR(((rt0.c0) NOT BETWEEN (rt1.c2) AND (0xffffffff8a71f7a3)))) FROM rt0;SELECT DISTINCT ((((rt1.c2)*(rt0.c0))) NOTNULL) FROM rt0, rt1; -- 0ms;
SELECT ALL CASE rt0.c1  WHEN rt1.c2 THEN '144286312' WHEN '_>Cg' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END COLLATE RTRIM FROM rt1, rt0 WHERE (((('-291312969')) BETWEEN ((CAST(0Xfffffffff80c355d AS NUMERIC))) AND (((x'30a8' IN (x'', 311233316)))))) LIMIT -233295563; -- 0ms;
SELECT ALL (((-138043878)>(NULL)) IN (((rt0.c2)!=(rt1.c0)), ((((rt0.c1)OR(rt1.c1)))AND(rt0.c2)))) FROM rt1, rt0 WHERE (((('-971949904', '\nI', x'0a8b')) NOT BETWEEN ((((('''0}Vlg'))!=(('u'))), (('-551858826') NOT BETWEEN (NULL) AND ('I!')), CASE x''  WHEN '-291312969' THEN '-951496841' WHEN x'9c7f' THEN '1312915142' WHEN NULL THEN 'e~' END)) AND ((((x'7e7b')%('ᴔ')), (('-89939492') NOT BETWEEN (NULL) AND (0.5254218388172416)), ((NULL) IS FALSE))))) GROUP BY (~ (((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c0)))) HAVING rt0.c1; -- 0ms;
SELECT DISTINCT LAST_VALUE(x'e233') OVER () FROM rt1, rt0; -- 1ms;
SELECT NULL, ROW_NUMBER() OVER (), SUM(((((rt1.c1)OR(rt1.c0)))OR(rt1.c2))) OVER () FROM rt0 WHERE (x'9354');SELECT ((-1.575260919E9) NOTNULL) COLLATE NOCASE, (((((rt1.c1, '-971949904', rt1.c2)) BETWEEN ((rt0.c0, x'', rt0.c1)) AND ((rt0.c1, rt0.c0, rt1.c2))))LIKE(((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c0)))), ((NULLIF(rt1.c0, rt0.c2)) NOT BETWEEN (0Xffffffffc6135a79) AND (rt1.c1 COLLATE NOCASE)), (((rt1.c0) IS FALSE) IN ()), (NOT (AVG(rt1.c2))) FROM rt1 WHERE (CAST(CAST(0Xffffffffcb3203a0 AS REAL) AS INTEGER));SELECT DISTINCT ((((rt1.c1) NOTNULL))GLOB(TOTAL(rt1.c0))) FROM rt1 WHERE (CAST(CAST(x'' AS BLOB) AS BLOB)); -- 0ms;
SELECT ALL (- (((62420948)-(rt1.c1)))) FROM rt0 WHERE (((CASE WHEN 0.35820862401347964 THEN 0.8529699167463751 END) BETWEEN (0.533056585811384) AND ((- ('43')))));SELECT DISTINCT ((rt0.c1)=(rt1.c1)) COLLATE NOCASE FROM rt0 WHERE ((NOT (((')~ 	40cPT') ISNULL)))) ORDER BY ((rt0.c0)>=(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0))));SELECT DISTINCT (((((((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))AND(COUNT(*))))OR((NOT (rt1.c1)))) FROM rt1 WHERE (CASE WHEN (NOT ('DI')) THEN 88654556 END);SELECT ALL (((rt1.c0)/(rt0.c2)) IN ()), CAST((rt1.c1 IN ()) AS BLOB), ((((rt0.c1) ISNULL)) BETWEEN (rt0.c1) AND (((((((((((((rt1.c1)OR(rt1.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt1.c2)))OR(rt0.c2)))OR(rt1.c2)))) FROM rt1, rt0 WHERE (CASE WHEN ('0.6913506760940685' IN ()) THEN QUOTE(x'') END) LIMIT 1991465440 OFFSET -1575260919; -- 0ms;
SELECT DISTINCT AVG(rt0.c2) FROM rt0, rt1 WHERE (((((('(', NULL, x''))>((x'', 'c', 0.4610852399051847))))<>(((0.6677029916753116) NOT BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT ALL ((CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 END)>('-1087536990')) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((+ (rt1.c1)) IN ()) FROM rt1, rt0 WHERE (((x'dd77' IN ()) IN ())); -- 0ms;
SELECT DISTINCT CAST(((0.23309321820259343) ISNULL) AS INTEGER) FROM rt0, rt1; -- 1ms;
SELECT DISTINCT ((-1392949439)GLOB(((rt0.c0)<=(rt1.c2)))), ((((((rt1.c0)IS('0.9320436775550826')))AND(((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt1.c0)))OR(rt1.c0)))AND(rt0.c0)))AND(rt1.c1)))))OR(rt1.c0)), (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))&((((rt0.c0))<>((rt0.c2))))) FROM rt1;SELECT ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)))/(((rt0.c1)|(rt1.c0)))) FROM rt1 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 END) IS FALSE) ASC  NULLS FIRST;SELECT ALL CAST(rt0.c2 AS INTEGER) FROM rt0, rt1 WHERE ((~ (((0.7754897540840092)=('-393818689'))))) GROUP BY ((((rt0.c0)<<(rt1.c2)))*(((rt1.c2)IS(rt1.c2)))); -- 0ms;
SELECT ((CAST(rt0.c1 AS INTEGER))<(((rt1.c0)IS(rt0.c0)))), CAST((rt1.c1 IN (rt0.c2)) AS BLOB), HEX(((NULL) NOT BETWEEN (rt1.c1) AND (NULL))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CAST((+ (rt0.c0)) AS INTEGER) FROM rt0, rt1 ORDER BY ((((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c0)))LIKE(LTRIM(0.5342612738563012, rt0.c0))); -- 0ms;
SELECT DISTINCT (((NULL))<((rt1.c1))) COLLATE RTRIM FROM rt0, rt1 WHERE (((((NULL)IS('')))<(((((x'735f')OR(x'1530')))OR(NULL))))); -- 0ms;
SELECT ALL '0.18623037574374735' FROM rt1 FULL OUTER JOIN rt0 ON (- (((rt1.c1) IS TRUE))) WHERE ((~ (((0.7779761879992495) ISNULL)))); -- 0ms;
SELECT ALL ((((rt0.c0) NOTNULL))==(rt1.c0)) FROM rt1 WHERE ((x'' IN ('1946412828', '2(e0w')) COLLATE NOCASE) ORDER BY '' DESC;SELECT ALL rt0.c0 FROM rt1;SELECT (((rt0.c0)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM)) AND ((((rt0.c1) IS TRUE)))) FROM rt0 ORDER BY ((((rt0.c2)OR(rt1.c2)))!=(LIKELY(DISTINCT rt0.c2))) DESC, ((((rt0.c1)OR(0.8578544271179864)))OR(rt1.c2)) COLLATE BINARY ASC;SELECT DISTINCT (((((NULL)/(x''))))==((((rt1.c2)*(x'360a'))))) FROM rt0, rt1 WHERE (CAST(((NULL)IS('807480747')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN MIN(rt1.c1) ELSE rt0.c1 END, (((rt0.c2 IN ()))*(LIKELY(rt0.c1))), (((rt1.c1))<=((rt1.c0))) COLLATE BINARY COLLATE BINARY FROM rt0, rt1 WHERE ((+ ((0.03317804147180281 IN (NULL, '967809438'))))); -- 0ms;
SELECT ALL rt0.c2 COLLATE BINARY FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((TOTAL(rt1.c2))&(rt1.c2 COLLATE NOCASE)) FROM rt1 WHERE (PRINTF((x'' IN ()))); -- 0ms;
SELECT ((TOTAL(rt1.c0)) IS FALSE) FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS TEXT))OR(rt0.c0)), (((+ (rt0.c1))) BETWEEN ((+ (rt1.c2))) AND ((NOT (rt0.c1)))), rt0.c2 FROM rt1, rt0; -- 0ms;
SELECT ((((rt1.c1) NOT NULL)) NOT BETWEEN (rt0.c0) AND (x'')) FROM rt0, rt1 WHERE ((((((('pT'))<>(('랺ta#Jꄍ')))))<=(((('-1505666692')-(NULL)))))); -- 0ms;
SELECT ((- (rt1.c1)) IN (TOTAL_CHANGES())) FROM rt1, rt0; -- 0ms;
SELECT ALL ((((((rt1.c1)IS NOT(rt0.c2)))AND(CASE rt1.c1  WHEN rt0.c2 THEN rt0.c0 END)))AND(COUNT(rt0.c1))) FROM rt1;SELECT DISTINCT AVG(CASE WHEN rt0.c1 THEN '174310462' WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END), (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2)) IN ()), CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END COLLATE BINARY, CAST((~ (rt1.c2)) AS INTEGER), (((IFNULL(DISTINCT rt1.c1, rt0.c2)))<=((((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c1))))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c1 END IN ()) FROM rt1, rt0 WHERE ((((~ ('䠸')))GLOB((NULL IN (NULL, NULL))))); -- 0ms;
SELECT CASE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))  WHEN x'' THEN COUNT(*) WHEN x'fb46' THEN (x'' IN ()) WHEN (('-1914652002')>=(rt1.c2)) THEN IFNULL(rt1.c0, rt1.c1) ELSE 0.9868033757505984 COLLATE NOCASE END FROM rt1;SELECT ALL ((((rt1.c1)!=(rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (json_valid(rt0.c0))) FROM rt0, rt1; -- 0ms;
SELECT IFNULL(DISTINCT '', ((rt1.c0) NOTNULL)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rtreenode(((rt1.c1)==(rt0.c0)), (~ (rt0.c1))) FROM rt1 WHERE (CASE INSTR('', '1087824527')  WHEN (((0.05298898381031503)) BETWEEN ((0X0)) AND ((189002206))) THEN (+ (0.645644658679992)) WHEN CASE NULL  WHEN 0Xffffffff99367dc9 THEN NULL ELSE NULL END THEN ((0.2234415058725745)%(0xffffffff801bf62e)) WHEN CAST(NULL AS NUMERIC) THEN (((NULL, NULL, -1900955093))>=(('-1726819330', 0.5797232644457272, 0.33838463399770236))) END) GROUP BY (((rt1.c1)) NOT BETWEEN (((((rt0.c1))=((rt0.c0))))) AND ((rt0.c0 COLLATE NOCASE))) HAVING rt0.c2;SELECT DISTINCT ((- (rt0.c2)) IN ()) FROM rt1, rt0 WHERE (((((1146268704)<<(-1730568577)))LIKE(CASE WHEN x'' THEN 2026700282 ELSE '-1e500' END))); -- 0ms;
SELECT ((SUM(rt1.c2)) NOTNULL) FROM rt1; -- 0ms;
SELECT (((0.19588657352528838 IN ())) ISNULL), (((+ (rt0.c2))) NOT NULL), CAST(rt0.c0 AS NUMERIC) FROM rt0; -- 0ms;
SELECT TOTAL_CHANGES() FROM rt0, rt1 WHERE ((- ((('1648195697')IS NOT(x''))))) LIMIT 1332451257; -- 0ms;
SELECT ALL '' FROM rt1, rt0 GROUP BY (((((rt0.c2) IS TRUE)))>=((rt0.c2 COLLATE BINARY))), CASE TRIM(DISTINCT rt0.c2)  WHEN COALESCE(DISTINCT rt0.c0, rt1.c1) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c1)) END, (((rt0.c1)) BETWEEN ((((rt1.c1)+(rt1.c0)))) AND (((((rt0.c1))==((rt0.c0)))))) HAVING (((('t^GuB~9SO')) BETWEEN ((rt1.c0)) AND ((rt0.c0))) IN ()); -- 0ms;
SELECT DISTINCT (+ ((rt1.c0 IN ()))), CASE WHEN ((rt1.c0)IS(rt0.c1)) THEN NULL WHEN (('1e500')LIKE(rt0.c0)) THEN AVG(rt1.c1) WHEN ((rt1.c2)LIKE(rt1.c1)) THEN 0.4633283761216904 END, ((((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c1)))LIKE(MAX(rt1.c1))) FROM rt1 WHERE ((((('1483653399')GLOB(0.5990731689144965)))<<(CAST('ae' AS REAL))));SELECT rt1.c2 FROM rt1, rt0 WHERE (JULIANDAY((('1880646808')-(0.5158884986276792)), (0Xffffffffbc37ec48 IN ()), ((x'') NOT BETWEEN ('1637004492') AND (0.6735615199293099)), '' COLLATE NOCASE, CASE WHEN -1.236736532E9 THEN 'i㷶r\rﷺ%Sgﲠ' END)); -- 0ms;
SELECT NTH_VALUE('4hYY' COLLATE BINARY, x'') OVER ( PARTITION BY ((((rt1.c0) ISNULL)) IS FALSE), CASE CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt1.c2 THEN (((rt0.c0, rt1.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c0)) AND ((rt0.c1, 0.45590543536370376, rt0.c0))) END) FROM rt1, rt0;SELECT MIN((- (rt0.c1))) FROM rt1 GROUP BY CAST(TRIM(rt1.c2) AS NUMERIC) ORDER BY ((rt1.c0 COLLATE NOCASE)IS(x'5e4f'));SELECT DISTINCT ((((((rt1.c2) NOTNULL))OR((((NULL))<=((rt1.c0))))))AND(rt1.c2)) FROM rt0, rt1 WHERE (((((x'')&('-971949904'))) NOTNULL)); -- 0ms;
SELECT TOTAL(SUM(((rt0.c2)<<(rt0.c2)))) FROM rt0, rt1 ORDER BY CASE WHEN rt0.c1 THEN ((((rt1.c2)OR(rt1.c1)))AND(rt0.c0)) END ASC  NULLS FIRST;SELECT -464715852 FROM rt0 WHERE (((((((((((NULL)&(0.5593453348210791)))AND(x'2243' COLLATE NOCASE)))AND((('z)gZ]5q') BETWEEN (x'd9f6') AND (NULL)))))OR(CAST('䉯N￿t駙' AS INTEGER))))AND(((NULL)%(x''))))); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c2)OR(rt1.c0)))AND(SQLITE_VERSION())))AND(((rt0.c2)>>(rt0.c2)))))AND(((((rt0.c2)AND(rt1.c0)))AND(rt1.c2)))))OR((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((0.2609074288639165))))), ((((((rt1.c0)AND(rt0.c0)))OR(rt0.c0))) ISNULL), CAST(CASE rt0.c2  WHEN rt1.c2 THEN rt1.c1 END AS INTEGER) FROM rt1;SELECT rt0.c2, (((- (rt0.c1)))<>((((rt0.c1))<((0.5267893353605616))))), json_type(((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) FROM rt0, rt1; -- 0ms;
SELECT ALL ((CHAR(rt0.c1, rt0.c1, rt0.c2)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (LIKELY(rt1.c0))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c0))>((((rt1.c0))<((rt0.c2))))), COUNT(*) OVER (), ((rt1.c0) IS TRUE) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((((((((((rt0.c0))<(('-714613470'))))AND(((((rt0.c0)OR(rt0.c2)))AND(rt1.c1)))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (x'')))))OR(rt0.c2)))AND(CAST(rt1.c1 AS TEXT))), '1} +', (((((~ (rt0.c1)))OR(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((+ ('')))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT MAX(IFNULL(rt0.c1, rt1.c2)) FROM rt0 LIMIT 33743164;SELECT DISTINCT 0.6754277507928472, (CAST(-901197923 AS TEXT) IN ()), ((NULL) IS FALSE) FROM rt1, rt0 NOT INDEXED WHERE (((((NULL)OR((- (916488614)))))OR(NULL))); -- 0ms;
SELECT (((rt0.c0)OR(rt1.c0)) IN ()) FROM rt1, rt0; -- 0ms;
SELECT ALL AVG((- (rt1.c0))) OVER (), rt1.c1, CASE rt1.c0  WHEN x'8429dec4' THEN rt0.c2 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END COLLATE RTRIM, CAST(((x'') IS FALSE) AS NUMERIC), ((0.5340008960652162) NOT NULL) FROM rt0, rt1; -- 0ms;
SELECT (((((rt0.c2)AND(7.94640642E8)))AND(rt1.c2)) IN ((rt1.c2 IN ()))) FROM rt0, rt1 ORDER BY ((((rt1.c1)<<(rt0.c1)))LIKE(rt0.c1)); -- 0ms;
SELECT DISTINCT (((rt0.c2 COLLATE RTRIM))<=((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))))) FROM rt0;SELECT 0.49223491618896165 FROM rt0 NATURAL JOIN rt1 WHERE ((((('1025163579')OR(CASE WHEN '턠IoQM' THEN 0xffffffffd1e63fe6 WHEN x'4ac3' THEN 0.7828385477120865 WHEN NULL THEN '' END)))OR((NOT ('/<'))))); -- 0ms;
SELECT DISTINCT DATETIME(TRIM(DISTINCT rt1.c0), ((rt1.c2)>>(rt0.c2)), (rt0.c1 IN ()), ((rt0.c0)>=(NULL)), rt0.c0), SUM((+ (rt1.c2))) FILTER(WHERE (((rt0.c2)) BETWEEN (((('2007766342')||(rt0.c2)))) AND ((((rt0.c2) NOTNULL))))) OVER ( RANGE CASE rt0.c0  WHEN rt1.c0 THEN rt1.c2 END COLLATE NOCASE PRECEDING EXCLUDE GROUP), MAX(((rt0.c2)IS NOT(rt1.c1))) FROM rt1, rt0 LIMIT -2128994857;SELECT ALL CAST((((x'55e6'))<((rt1.c2))) AS REAL) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (rt0.c2 IN ()) COLLATE NOCASE, ((x'') NOT BETWEEN ((((rt0.c2)) BETWEEN ((0x55b751d4)) AND ((rt1.c1)))) AND (((rt0.c0)>(0xffffffffb2b8cd3f)))), ((rt1.c1) NOTNULL) FROM rt1, rt0 WHERE (((('-494129229' IN ())) BETWEEN ((0.47407556369495474 IN ())) AND (CASE WHEN 1.542311416E9 THEN x'' ELSE x'' END))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(0Xffffffffd6afd4d5) OVER () FROM rt0 WHERE ((((-344901998) ISNULL) IN (NULL))) GROUP BY ((rt0.c0 COLLATE BINARY)==(CAST(rt1.c0 AS INTEGER))) ORDER BY (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c1))), (rt0.c2 IN ()), ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)))) AND ((((((((((rt1.c2)AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)), ((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(0.9439023341966366)), ((rt0.c2) IS TRUE))))  NULLS FIRST, ((rt1.c0)IS(rt1.c2)) COLLATE NOCASE ASC;SELECT DISTINCT LEAD(HEX(DISTINCT (((rt0.c0))>=((rt0.c0)))), ((((((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND ('-74445822')))))AND(((rt0.c2)=(rt0.c1)))))OR(((rt0.c2)/(rt0.c2)))))OR((NULL IN ()))), CAST(((rt0.c2)GLOB(rt0.c2)) AS TEXT)) OVER () FROM rt0 WHERE (ABS(DISTINCT 0.9254370239887089)); -- 0ms;
SELECT ALL (NOT ((rt1.c2 IN ()))) FROM rt1 WHERE (((+ ('u')) IN ())) GROUP BY ((((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c0 END)AND(((rt0.c0)&(rt1.c0)))))OR('fg_b	5')), ABS(((((rt1.c1)OR('\ઋrw')))AND(rt1.c1))), ((CAST('-573910672' AS BLOB)) BETWEEN (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) AND (((rt1.c1)<=(rt0.c0)))) HAVING rt0.c1;SELECT DISTINCT x'6a68a757' FROM rt0; -- 1ms;
SELECT ALL ((((((((((rt1.c1) NOTNULL))OR(json_array_length(rt1.c2, rt0.c1))))OR(((rt0.c0) IS FALSE))))OR(((rt0.c1) IS TRUE))))OR(((rt0.c0)|(rt1.c0)))), COUNT(*), (((((rt1.c0)IS(rt0.c2)), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)), (~ (rt1.c2))))>=((AVG(NULL), (((rt1.c1, rt0.c0, rt0.c2))>=((rt0.c0, rt0.c2, rt0.c0))), GROUP_CONCAT(rt1.c1)))), (('1542311416')<=(((rt0.c1) BETWEEN (rt1.c0) AND ('925819724')))), AVG(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))) OVER () FROM rt1, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)>=(rt1.c2)))) AND ((CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c0 END))) DESC LIMIT -1350633372 OFFSET 1803374172;SELECT ALL UNLIKELY(rt1.c0 COLLATE NOCASE) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT((((rt1.c0, rt1.c2, rt1.c1))<((0.24862902011129362, rt1.c2, rt1.c2)))) FROM rt0, rt1; -- 0ms;
SELECT ALL CASE WHEN ((rt1.c0)>(rt1.c0)) THEN (('3')AND(rt0.c2)) END FROM rt1 WHERE (((((- ('-74445822'))))!=((((0.6192126874245426) NOTNULL)))));SELECT ALL rt1.c0 COLLATE RTRIM FROM rt0, rt1 WHERE ('ᮕA^') ORDER BY (((rt0.c2 IN ())) ISNULL) ASC; -- 0ms;
SELECT ((((((rt1.c2)|(rt1.c0)))AND(rt1.c1)))OR((0.1805694859677388 IN ()))) FROM rt0, rt1 WHERE ((+ (0.728804196587139)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((rt1.c1)) NOT BETWEEN ((UPPER(rt0.c1))) AND (((rt0.c0 IN ())))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (+ (rt1.c0)) FROM rt0, rt1 WHERE (CAST((~ ('')) AS INTEGER)); -- 0ms;
SELECT (((((((rt1.c0)OR(rt0.c0)))AND(rt1.c0))))=(((~ (rt1.c0))))) FROM rt1, rt0 WHERE ((- (((((0.019825506185669473)AND(0.8608001426158879)))AND(-1182921395))))); -- 0ms;
SELECT DISTINCT ((rt1.c1 COLLATE RTRIM) IS TRUE), (('1497064515') BETWEEN (rt1.c0 COLLATE RTRIM) AND ((rt0.c0 IN ()))), ((0.46791205801129543) IS TRUE) FROM rt0, rt1 WHERE (((((((((((0.8380998693316725)OR(0.9386709266632712)))OR('-133417635')))AND(NULL)))AND(NULL))) NOTNULL)); -- 0ms;
SELECT ALL (((rt1.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c1, rt0.c1, rt1.c1))) COLLATE BINARY FROM rt0 WHERE (((((-2101816069)*('0.2639751773179492'))) BETWEEN (NULL) AND (CASE WHEN NULL THEN x'' WHEN x'84cf' THEN 0.7172876826658915 WHEN x'' THEN NULL END)));SELECT DISTINCT GROUP_CONCAT((((rt0.c1))==((rt1.c0)))) OVER () FROM rt1, rt0 NOT INDEXED GROUP BY (((rt1.c2)) NOT BETWEEN (((rt1.c2 IN (rt1.c2)))) AND ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) HAVING CAST((rt1.c0 IN ()) AS REAL); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS REAL))>>(rt0.c1 COLLATE RTRIM)) FROM rt0, rt1 WHERE (((((((x'e672') BETWEEN (x'a34d') AND (NULL)))AND(NULL)))OR(CASE WHEN x'' THEN 0Xffffffffc76c25ae WHEN 0.8053739778600127 THEN x'' WHEN NULL THEN '-1900955093' END))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))IS((+ (rt0.c0))))  NULLS FIRST, TYPEOF(((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))  NULLS LAST; -- 0ms;
SELECT ALL '0.5104105937885329', CASE (+ (rt1.c1))  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c0)) THEN ((rt0.c1)LIKE(rt1.c0)) WHEN ((rt1.c2)==(rt1.c1)) THEN ((NULL) NOT NULL) WHEN CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN ((rt1.c2)=(rt0.c0)) ELSE (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END, SUBSTR((('[]')LIKE(rt0.c1)), rt1.c0 COLLATE BINARY), rt0.c1, CASE WHEN rt0.c0 THEN rt1.c1 END COLLATE RTRIM FROM rt0, rt1 WHERE ((((x'fbcbe94e' IN ())) NOT NULL)); -- 0ms;
SELECT DISTINCT json_extract(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c2)), ((rt1.c2)!=(rt0.c1))) FROM rt0;SELECT DISTINCT CAST(0.8168469323564594 AS TEXT) FROM rt0 WHERE ((~ ((((0Xffffffff87c5d0bd, 'q5?y2YDp', 'U	&(')) BETWEEN ((0.39242068506349015, NULL, x'')) AND ((NULL, 'I<', NULL)))))); -- 0ms;
SELECT (((rt0.c2)OR(rt0.c1)) IN (((rt0.c0)&(rt1.c1)))) FROM rt1 NATURAL JOIN rt0 WHERE (CAST(TRIM(0.7444045803291797, NULL) AS REAL)); -- 0ms;
SELECT ((rt1.c0) IS FALSE), CASE WHEN ((0.34631350562322816) NOT BETWEEN (NULL) AND (rt0.c1)) THEN rt0.c1 ELSE json_patch(rt0.c1, rt1.c1) END, (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c2)) IN (rt1.c0 COLLATE RTRIM)), TOTAL(((rt1.c0)AND(rt1.c1))), ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))==(((NOT (rt1.c2))))) FROM rt1, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN ()) AS BLOB) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt1.c2, (NOT (rt0.c0)), ((0.20516807409399318) NOT NULL))) AND ((rt0.c2, CAST(rt1.c0 AS BLOB), 0.09552261947954199 COLLATE NOCASE))) FROM rt0, rt1; -- 1ms;
SELECT DISTINCT NTH_VALUE(CASE ((((rt1.c1)OR(rt0.c0)))OR(rt1.c1))  WHEN ((NULL) BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c1)) WHEN 0.3633028784755187 THEN ((rt0.c2)<>(x'46c2')) WHEN json_type(rt0.c1) THEN CASE WHEN NULL THEN rt0.c2 END ELSE rt1.c0 END, ((x'') NOTNULL)) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(rt1.c2) FROM rt0, rt1 WHERE ((+ ('107640502')) COLLATE NOCASE); -- 0ms;
SELECT NULL FROM rt1 WHERE (((('-2069913992')*(0.013447342897498826)) IN ())); -- 0ms;
SELECT rt0.c1 FROM rt0, rt1; -- 0ms;
SELECT COUNT(*) OVER () FROM rt0 WHERE (x''); -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c2)-(rt1.c2))) OVER () FROM rt1;SELECT LAST_INSERT_ROWID() FROM rt0 WHERE (LOWER(DISTINCT (((0xffffffffdc958f9b, '', x'918f'))=(('-1236736532', -1881328032, ''))))); -- 0ms;
SELECT ALL (((0.258999712219511)AND(rt0.c2)) IN (COUNT(rt1.c2))) FROM rt1;SELECT ((AVG(rt0.c2))>(COALESCE(DISTINCT rt0.c0, rt0.c0))) FROM rt1, rt0; -- 0ms;
SELECT MIN('P\n', CAST(rt1.c2 AS BLOB)) FROM rt1; -- 0ms;
SELECT ALL (((rt1.c0) BETWEEN (rt0.c2) AND (rt1.c0)) IN ()) FROM rt0 WHERE (CASE WHEN ((0Xffffffff9cb9219b) IS TRUE) THEN (('䠸')/(x'')) END) GROUP BY (- (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) HAVING (((rt1.c2)) BETWEEN (((NOT (rt1.c2)))) AND ((((rt0.c1) IS TRUE))));SELECT DISTINCT ((rt1.c0) NOTNULL) FROM rt0;SELECT ALL (((((rt1.c0, rt1.c2, rt0.c2)) BETWEEN ((rt0.c1, -1.724482103E9, rt1.c2)) AND ((rt1.c1, rt1.c2, rt0.c1)))) NOTNULL), (((rt0.c2) IS FALSE) IN ()), CAST(((rt1.c0)>>(rt1.c1)) AS INTEGER) FROM rt0 GROUP BY ((((rt1.c2) ISNULL))<<(x'aad2'));SELECT (((((((((((rt1.c2)AND(rt0.c2)))OR(rt1.c1)))AND(rt1.c1)))AND(rt0.c2))))!=((((rt1.c1) NOT NULL)))), MAX(MAX(CASE rt0.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c1 END)), ((((rt1.c1) BETWEEN (-9.71810183E8) AND (rt1.c0)))&(((rt1.c2) BETWEEN (rt0.c1) AND ('')))) FROM rt0;SELECT DISTINCT CASE CAST(rt0.c2 AS TEXT)  WHEN (('-1881328032') IS TRUE) THEN CASE rt0.c1  WHEN '' THEN 'u{' END END FROM rt0, rt1; -- 0ms;
SELECT ALL rt1.c2 FROM rt0 WHERE ((('-2122757526') NOT BETWEEN (0Xffffffffa909c4aa) AND (875598398)) COLLATE RTRIM) LIMIT -659902964 OFFSET 2114504871;SELECT ALL ((((rt0.c2)GLOB(rt0.c0)))|(NULL COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT x'', LOWER(DISTINCT rt1.c0) COLLATE BINARY, COUNT(((rt0.c2)/(0xfffffffff66f396e))) FROM rt1, rt0 LIMIT 1643791568 OFFSET -1724482103; -- 0ms;
SELECT ALL COUNT(((rt1.c0)>=(rt0.c1))) FROM rt1 NOT INDEXED, rt0 WHERE ((('541861340')<<(((NULL) BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT (- (((rt1.c1)=(NULL)))) FROM rt1; -- 0ms;
SELECT IFNULL(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), SUM(-1.236736532E9)) FROM rt0 WHERE (((((((1.638151551E9) NOT BETWEEN ('227249831') AND (NULL)))AND(CASE WHEN 0.159557470345413 THEN x'' END)))AND(CAST(0.7220736420096113 AS TEXT)))); -- 0ms;
SELECT DISTINCT ((((rt0.c2)<(rt0.c0)))IS NOT(((rt1.c2)GLOB(rt0.c0)))) FROM rt1, rt0; -- 1ms;
SELECT ALL CASE WHEN TOTAL(rt1.c1) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END, (((rt0.c2)) NOT BETWEEN ((LOWER(rt0.c1))) AND ((rt0.c0))), CAST(UNLIKELY(rt1.c2) AS BLOB) FROM rt1, rt0 WHERE (CASE ((NULL)/(NULL))  WHEN (~ (0.5145334973363295)) THEN (('2113851704')==('')) END) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c0)<<(x'')) END ASC; -- 0ms;
SELECT ALL (((((rt1.c0, rt1.c1, 0x79a97838))<=((rt1.c1, rt1.c1, rt0.c2)))) BETWEEN (((rt1.c1)||(rt0.c1))) AND ((((rt0.c1))>=((0.6204285211607171))))) FROM rt0 GROUP BY (((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((0x73e9c87d, ((rt1.c2)<(rt1.c0)), ((((rt1.c2)AND(rt1.c2)))AND(rt0.c0)))) AND ((MIN(rt1.c2, rt0.c0), ((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c1)))));SELECT DISTINCT -2079345248 FROM rt0, rt1 WHERE (CASE WHEN '5EM' THEN ((0.48033092610059536)*(0xffffffffa9da5454)) ELSE ((x'') IS FALSE) END); -- 0ms;
SELECT DISTINCT LAG((((rt0.c0)||(rt0.c1)) IN (rt0.c2)), INSTR(rt0.c1 COLLATE RTRIM, ((rt0.c1)<<(0.15114559281823547))), (((rt0.c2 IN (rt0.c0, rt0.c0)))&((rt0.c2 IN (rt0.c2))))) OVER () FROM rt0 WHERE ((((x'') BETWEEN (NULL) AND (0.660994768949704)) IN ())); -- 0ms;
SELECT (((('!M'))<=((rt1.c1))) IN ()), (json_remove(rt0.c1, rt1.c0, rt1.c0, rt1.c0) IN ()), CAST(((((rt0.c2)AND(rt1.c1)))OR(rt1.c0)) AS BLOB) FROM rt0, rt1 WHERE (0.5744680317917107); -- 0ms;
SELECT ALL ((((((((CAST(rt0.c1 AS NUMERIC))OR(CAST(rt1.c0 AS BLOB))))OR(NULL)))AND((((rt1.c2))!=((rt0.c0))))))AND(((rt1.c1)OR(rt1.c2)))), -1822968891, ((rt0.c0 IN ()) IN ()) FROM rt0, rt1 LIMIT -474742855; -- 0ms;
SELECT NULL, rt1.c0, COUNT(*), ((CAST(rt0.c0 AS NUMERIC))||(TOTAL(rt1.c1))), rt1.c2 COLLATE RTRIM FROM rt0 WHERE (CASE ((NULL) NOT NULL)  WHEN CASE x''  WHEN x'' THEN NULL WHEN 0.9097344964443577 THEN NULL WHEN '-693119787' THEN NULL ELSE x'cca1' END THEN (NULL IN (0.7754879717152577)) ELSE (('1836361485')|(0.34061046242896587)) END);SELECT ALL FIRST_VALUE((((((rt0.c2) ISNULL)))>((((rt0.c0) ISNULL))))) OVER ( ORDER BY (LIKELIHOOD(DISTINCT rt0.c1, 0.08331719027789697) IN ()), (((rt0.c1)) NOT BETWEEN (((~ (rt1.c2)))) AND ((NULL))) ASC  NULLS FIRST, ((((rt1.c2)<<(rt1.c0))) IS TRUE)  NULLS LAST), CASE WHEN rt1.c1 COLLATE BINARY THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) ELSE (NOT (rt0.c0)) END, (+ (TOTAL(rt1.c0))) FROM rt0 WHERE ((((UNLIKELY(-2.011029626E9), x'' COLLATE BINARY, ((0Xffffffffa1c53fae) ISNULL)))>=(((('1741201236')OR(NULL)), CAST('''#X췸C' AS REAL), CASE WHEN '1578023275' THEN NULL END))));SELECT DISTINCT (+ ((+ (rt1.c0)))), NULL, ((((rt0.c2)AND(((rt1.c2)||(rt1.c0)))))AND(rt1.c0 COLLATE RTRIM)) FROM rt1;SELECT DISTINCT LAG((NOT (((rt0.c2) IS TRUE))), rt0.c2, CASE (NOT (NULL))  WHEN (NOT (rt0.c1)) THEN rt0.c2 ELSE TRIM(rt0.c1, rt0.c1) END) OVER ( RANGE (NOT (rt1.c2 COLLATE RTRIM)) PRECEDING EXCLUDE GROUP), ((((NULL) NOT NULL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (LOWER('뢞'))), rt0.c1 FROM rt0 WHERE ((((('1m')IS NOT(NULL)))+(((NULL)LIKE(NULL))))) ORDER BY ((((((rt0.c2) NOTNULL))OR(rt0.c0)))OR((((rt0.c1)) BETWEEN ((rt1.c0)) AND (('z_qis}dAD'))))) LIMIT -436926056 OFFSET 1786723505;SELECT rt1.c2 FROM rt0 WHERE (((((((((LIKELIHOOD(DISTINCT NULL, 0.5423487990656641))OR((((('{>''I[)gwu')OR(x'')))AND(0.18482780920420094)))))AND((((0xffffffffebeb8c83))<((-1808009436))))))OR((~ ('J	(䝴0\')))))AND((NOT (NULL))))) LIMIT -1536122130 OFFSET -1867562939;SELECT CAST(((rt1.c0)<>(rt0.c0)) AS REAL) FROM rt0, rt1 WHERE ((((x'', 0.28885384749763887, -3.0816701E8, 0.6913506760940685, '-1253882298')) BETWEEN ((CASE WHEN x'e4e8' THEN -1.526007864E9 WHEN 1421036096 THEN -1.623547432E9 WHEN NULL THEN x'' ELSE -1500961463 END, 0.9748879688899792 COLLATE NOCASE, (('-885914720') IS TRUE), IFNULL(DISTINCT '&v', '_>CG'), (x'df32' IN ()))) AND ((((('1114211205'))>=(('2072705591'))), ((NULL) NOT NULL), ((((0.42079629834203636)OR(x'')))AND(0.02418507107637946)), ((0.3451632812402652) NOT BETWEEN ('') AND (0.19913080220903112)), (((0.28451502059740974, x'baad', -2011029626)) NOT BETWEEN ((NULL, 1264702036, 0.5679415402208754)) AND (('-229330804', 'sl', '107640502'))))))); -- 0ms;
SELECT DISTINCT ((HEX(rt1.c1)) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (NULL)) FROM rt0, rt1 WHERE (0Xfffffffffd35eed5); -- 0ms;
SELECT ALL ((((rt1.c0 COLLATE BINARY)AND(rt1.c0 COLLATE NOCASE)))AND(COUNT(*))) FROM rt1 ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (x'') AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) DESC  NULLS LAST;SELECT ALL (~ (((((((((rt0.c0)OR(rt0.c0)))OR(rt1.c2)))AND(193595625)))OR(rt1.c1)))), ((((rt1.c0)OR(rt1.c0))) IS TRUE), GROUP_CONCAT(UPPER(DISTINCT 0xffffffff926d7079)), CASE rt0.c2  WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM, CASE CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN 1.609001361E9 THEN rt1.c2 END  WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN (NOT (rt0.c0)) END FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1)*(rt0.c0))) ISNULL) FROM rt0, rt1 WHERE (0.8027178240777558); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c1))) FROM rt1;SELECT AVG(DATETIME(rt1.c2, rt0.c2, rt1.c1)), CASE ((rt1.c2)IS NOT(rt0.c2))  WHEN (((rt0.c0, rt0.c2, rt1.c1))!=((rt0.c0, rt0.c0, rt1.c1))) THEN (rt1.c2 IN (rt0.c2, rt1.c1)) WHEN ((rt1.c2)GLOB(rt0.c1)) THEN UNICODE(rt0.c1) WHEN ((rt1.c2) NOTNULL) THEN LIKELY(rt0.c1) ELSE TYPEOF(rt1.c0) END, CASE WHEN (rt1.c1 IN ()) THEN CASE WHEN rt0.c0 THEN rt1.c0 END ELSE ((rt0.c1) ISNULL) END FROM rt0 WHERE (((NULL)<=(NULL)) COLLATE BINARY);SELECT DISTINCT (COUNT(rt0.c0) IN ()) FROM rt1, rt0 WHERE ('0.00477013546840499') GROUP BY ((json_object(rt0.c1, rt0.c0)) NOT BETWEEN ('-2009294813') AND (((rt1.c1) ISNULL))) HAVING (((rt0.c1 IN (NULL)))+(((NULL)-(rt0.c0))));SELECT DISTINCT 0.8166733162140335 FROM rt1 WHERE (((CAST(-2.122994369E9 AS NUMERIC))+(((-885914720) ISNULL)))); -- 0ms;
SELECT DISTINCT rt0.c2 COLLATE NOCASE FROM rt1, rt0 WHERE ((((x'' IN ())) NOT BETWEEN (NULL COLLATE BINARY) AND (((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt0, rt1; -- 0ms;
SELECT ALL (rt0.c1 IN (DATETIME(rt1.c0, rt1.c0, rt1.c2))) FROM rt0 WHERE ((-1974367075 IN (((-885914720) NOT BETWEEN (x'fae1') AND (x'b5882c39')))));SELECT DISTINCT (((rt1.c0, rt0.c1, rt1.c1))<>((rt1.c2, rt0.c0, rt0.c2))) COLLATE BINARY, ((x'') BETWEEN ((rt1.c2 IN ())) AND ((rt1.c1 IN ()))), COUNT(*) OVER () FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (CAST(NULL AS REAL) IN ()), COUNT(*) OVER ( PARTITION BY ((((rt1.c1)<=(rt1.c0))) NOTNULL), ((((rt1.c1, rt1.c2, rt1.c0))=((rt0.c0, rt1.c2, rt0.c2))) IN (NULL))), LIKELY(((rt1.c1)<(rt1.c2))) FROM rt0 WHERE ((IFNULL(DISTINCT 0x2d66c2d0, '-1250132064') IN ()));SELECT DISTINCT json_extract(LENGTH(rt0.c1), 0.8541314185537368, (rt1.c2 IN ()), (((rt1.c0, rt0.c1, rt1.c0, rt1.c2, rt0.c2))==((rt1.c2, rt0.c2, rt0.c2, x'ef69', rt0.c1))), json_array_length(rt1.c0), (((rt0.c2, rt0.c2, x'090a')) BETWEEN (('0.5679415402208754', rt1.c0, '1985441498')) AND ((rt1.c0, rt0.c2, rt0.c2)))) FROM rt0, rt1 WHERE (((((((NULL)OR(x'')))OR(0.9297661207856597))) IS FALSE)) ORDER BY rt1.c0 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT '!d㻰EHH}', ((((((((((((rt1.c0)AND(rt1.c2)))AND(rt0.c2)))OR('-203871601')))OR(rt0.c2)))OR(rt1.c2)))AND(rt0.c2))) FROM rt1 GROUP BY (((rt0.c1 IN ())) BETWEEN ((rt1.c2 IN (rt0.c2))) AND (CASE WHEN rt1.c1 THEN rt0.c2 END)) HAVING CASE WHEN ((rt0.c1)IS(rt0.c0)) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN ((-1.987553678E9) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (+ (rt0.c2)) WHEN LIKELIHOOD(DISTINCT rt1.c0, 0.6431623932873792) THEN ((rt0.c2)||(rt0.c1)) END;SELECT DISTINCT ((((rt1.c1, rt1.c0, rt0.c1)) NOT BETWEEN ((NULL, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))) IN (MAX(rt0.c0))), (((+ (rt0.c0)))==(((rt0.c2)<=(rt1.c2)))), (COALESCE(DISTINCT rt1.c0, 0Xffffffff880ab1d5) IN ()) FROM rt1, rt0 WHERE ((0xffffffffdfbc9b5a IN ()) COLLATE NOCASE); -- 0ms;
SELECT (((rt1.c1)) BETWEEN (((- (rt0.c2)))) AND ((x'' COLLATE RTRIM))) FROM rt0, rt1; -- 1ms;
SELECT ((MAX(rt1.c1)) NOT BETWEEN (((rt0.c1)AND(rt0.c2))) AND (COUNT(*))), ((((rt0.c0) ISNULL))!=(LIKELY(DISTINCT rt1.c1))), rt0.c0 FROM rt0;SELECT DISTINCT (((rt1.c2 IN (rt0.c1))) IS FALSE), CASE WHEN '-520917713' COLLATE RTRIM THEN MIN(rt0.c2) END, COUNT(*) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((((rt0.c0) ISNULL))AND(((rt0.c0) NOT NULL))))OR(((rt1.c1) BETWEEN (x'') AND (x'')))) FROM rt1 ORDER BY rt0.c2 ASC  NULLS LAST, ((TYPEOF(rt1.c1)) NOT NULL);SELECT (MIN(rt1.c0) IN ()), (((rt1.c0, rt0.c1, rt0.c1)) BETWEEN ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)), CHAR(rt1.c1, rt1.c2, rt1.c0), CAST(rt1.c2 AS BLOB))) AND ((((rt0.c0)==(rt1.c0)), rt0.c1, LIKELY(rt0.c2)))), rt0.c1 FROM rt1, rt0 WHERE (((((((((((((x'f984')AND('420082497')))AND(NULL)))AND((x'' IN (NULL, 7.94640642E8)))))OR(((((x'')OR(x'')))OR(0.8286850323261323)))))AND(1.438077396E9 COLLATE NOCASE)))AND(CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (x''))) ISNULL) FROM rt1, rt0 WHERE ((NULL IN ('107640502')) COLLATE RTRIM); -- 0ms;
SELECT GROUP_CONCAT(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1))) OVER () FROM rt0;SELECT DISTINCT rt1.c2 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt1.c0, ((MAX(rt0.c0)) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c2 END)), QUOTE(MAX(rt1.c2)), (((((rt1.c2, rt0.c0, rt0.c1, '{S\nw-', rt1.c0))>=((rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c0))))!=(('-1280408349' IN ()))), FIRST_VALUE((((rt1.c0, 0Xfffffffff80c355d, rt1.c1)) NOT BETWEEN ((-2.1025519E7, 0X1664c4c6, HEX(rt0.c1))) AND ((((rt0.c0)LIKE(rt0.c1)), rt1.c2, (NOT (rt0.c2)))))) OVER () FROM rt1, rt0 GROUP BY CAST(CAST(rt1.c2 AS NUMERIC) AS INTEGER), ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))<(CAST(rt0.c2 AS NUMERIC))), (((((rt1.c2)=(rt1.c1)), rt0.c0 COLLATE RTRIM, CASE rt1.c0  WHEN rt1.c0 THEN '' END))>=(((NOT (rt1.c1)), rt1.c1 COLLATE BINARY, CASE rt1.c1  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c1 END))) ORDER BY (~ (((rt0.c2)/(rt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT rt1.c1 COLLATE BINARY, 0.31344856436714297) FROM rt0 ORDER BY '凔u/哮ZJc', ((((rt1.c0)*(rt1.c2)))GLOB(CAST(rt1.c0 AS TEXT))) ASC  NULLS LAST;SELECT ALL (((rt0.c1, rt1.c0, rt1.c2))<>(('838980870', rt0.c0, rt0.c2))) COLLATE BINARY, ((((rt1.c0) NOT NULL))*(TOTAL(rt0.c0))), LOWER(DISTINCT LTRIM(rt0.c1, rt0.c0)) FROM rt1, rt0 ORDER BY (CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c0 END IN ()), ((((UNLIKELY(rt1.c1))AND(0.6721397510087355)))AND(json_array(rt1.c0, rt0.c2))); -- 0ms;
SELECT (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))))<(0X66a76b6)) FROM rt1 LIMIT -1811656549;SELECT CAST((rt0.c2 IN ()) AS INTEGER) FROM rt0, rt1 WHERE (CASE ((x'dca6') ISNULL)  WHEN (1471542975 IN ()) THEN CAST('' AS REAL) WHEN ((((x'')AND(0x6b26dd70)))OR(x'')) THEN UNLIKELY(DISTINCT 0.23452701986471558) WHEN (('-204170526') NOT BETWEEN (0.05010809934596405) AND ('-676622454')) THEN ((NULL) NOT NULL) END) ORDER BY (((rt0.c0, rt1.c0, rt1.c0, rt0.c0, rt0.c1, rt0.c1, rt1.c0)) NOT BETWEEN (((((rt1.c0, rt1.c1, NULL))>((rt1.c2, rt0.c1, rt1.c2))), (('Nz')>(rt0.c1)), CASE WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c1 END, CAST(rt0.c0 AS NUMERIC), UNLIKELY(DISTINCT x'0ac8'), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.795858798939418)), '띑')) AND ((rt0.c1, ((((NULL)OR(rt0.c2)))OR(rt1.c0)), (0.0015713635426484185 IN (rt1.c0, rt0.c0)), rt0.c0 COLLATE RTRIM, ((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c1)), (((rt1.c0))<>((rt0.c1))), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c1)))))); -- 0ms;
SELECT DISTINCT (NOT (COUNT(*))) FROM rt0; -- 0ms;
SELECT TYPEOF(((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c1))), CAST(rt1.c2 AS REAL) COLLATE NOCASE, MIN(CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c0 END) FROM rt1 WHERE (((((((NULL)AND(x'c716')))OR(x'd091')))IS NOT(CAST(NULL AS BLOB)))) GROUP BY '114507785';SELECT DISTINCT COUNT(*) OVER (), CAST((rt1.c2 IN (rt0.c0)) AS INTEGER), CAST(((rt1.c1)<(rt0.c0)) AS REAL) FROM rt1;SELECT CAST((+ (rt1.c0)) AS BLOB) FROM rt0, rt1 WHERE ((((NULL)) BETWEEN ((('1786723505' IN ('-1667970620', '')))) AND ((((((((((NULL)OR('-336884605')))OR(NULL)))AND(NULL)))OR(NULL)))))); -- 0ms;
SELECT ALL (rt0.c2 IN ()) COLLATE NOCASE FROM rt1, rt0 WHERE (((((x'') NOT BETWEEN ('') AND (x''))) NOT BETWEEN (-665748515) AND ((x'c559' IN (NULL, NULL))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c1)))IS NOT(COUNT(*))) FROM rt1;SELECT ((rt1.c2 COLLATE NOCASE) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (rt0.c1 COLLATE NOCASE)) FROM rt0;SELECT (((rt1.c0) NOTNULL) IN ()) FROM rt0, rt1 GROUP BY (rt1.c0 IN (rt0.c2 COLLATE NOCASE)), CAST(rt0.c0 AS INTEGER) COLLATE RTRIM, (- (((rt0.c1)>=(rt1.c1)))); -- 1ms;
SELECT DISTINCT rt1.c1, NTH_VALUE(TRIM(SQLITE_SOURCE_ID()), (((rt1.c1 IN ()))==(((rt1.c1) NOT NULL)))) OVER (), (((((((rt0.c2))<=((rt1.c2))))OR(CAST(rt1.c0 AS NUMERIC))))AND(((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))) FROM rt1 WHERE ((1128447948 IN (-38464859 COLLATE RTRIM)));SELECT DISTINCT (((SUM(rt0.c2)))>((rt0.c0))), TRIM(((rt0.c0)&(rt0.c0)), (((x'13699b6a'))<>((rt0.c1)))), ((((rt0.c2)<<(rt1.c0)))|(AVG(rt1.c1))), (- (rt1.c0 COLLATE RTRIM)), (NOT (rt1.c2 COLLATE NOCASE)) FROM rt1, rt0 ORDER BY rt0.c1 COLLATE NOCASE ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (+ (rt1.c1)), (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)) IN ()), ((((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))/(rt0.c2 COLLATE NOCASE)) FROM rt1 WHERE (((((~ (x''))))<(((((x'', '!∧5OMjJ*1', 0.9670469984232237))!=(('1882829387', NULL, NULL))))))) LIMIT 1035818222;SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt1.c1 END) BETWEEN (((x'')!=(rt1.c2))) AND (((rt1.c2)+(rt0.c1)))) FROM rt0;SELECT DISTINCT ((NOT (NULL)) IN ()), (+ (CAST(rt1.c2 AS NUMERIC))), rt1.c2 COLLATE BINARY FROM rt0 WHERE (((((+ ('-308167010')), (~ ('	')), (-1522596257 IN (x'd588', 'hqP-,k먫', 0.8757071499892585)), ((('8502893'))=((x''))), ((0.2121156377950424)-(0xffffffffdf61c1dc))))<=(((('86052197')>=(0.8819412048953496)), ((x'') NOTNULL), 0.9936693307638649 COLLATE BINARY, ((x'')/(x'62bc')), (('473688402')|(x''))))));SELECT ALL ((rt1.c1 IN ('L<', rt0.c1)) IN ((('-373986070')GLOB(rt1.c2)), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))))), COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE TIES), ('0hytcis\t' IN ()), ((((rt0.c0) IS TRUE))IS(((rt0.c2)GLOB(rt1.c1)))), LOWER(DISTINCT (~ (rt0.c2))) FROM rt0, rt1 WHERE ((((+ (x'')))>>(((x'bf93')>=(x''))))); -- 0ms;
SELECT ALL TYPEOF(((0.34061046242896587)>(rt1.c0))) FROM rt1 WHERE (((((('2%', NULL, 0.20654604580236058)) NOT BETWEEN ((x'', x'', '(')) AND ((x'', x'3b85', '玮e'))))IS(json_array(x'c221', '')))) GROUP BY CAST(rt1.c0 COLLATE BINARY AS REAL) ORDER BY (rt1.c0 IN ())  NULLS FIRST, ((- ('1375571966')) IN (CAST(rt0.c2 AS NUMERIC), (((rt0.c1))>((rt1.c1))), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) DESC;SELECT ALL ((rt1.c1)LIKE(rt1.c2)) COLLATE RTRIM, (((rt1.c2)) NOT BETWEEN ((x'')) AND ((UPPER(DISTINCT rt1.c1)))), (((rt0.c1)) BETWEEN ((((0x26deb23e)<<(rt0.c0)))) AND ((((rt1.c2)>(rt1.c2))))) FROM rt1 WHERE (x'');SELECT ALL rt1.c0 FROM rt0, rt1; -- 0ms;
SELECT ALL ((((((rt1.c0)AND(rt1.c0)))AND(rt0.c0)))*(TOTAL(rt0.c0))), (((((rt0.c1)==(rt1.c2))))<((rt0.c1 COLLATE RTRIM))), rt1.c0 COLLATE NOCASE FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) IN ()) FROM rt0, rt1 WHERE ((((((('n''B3%/X+*{}')||(0xffffffffe1ebb301)))AND((((916957234, -1591440906, x'')) BETWEEN ((NULL, 0Xffffffffa07d47cf, '')) AND ((2.023496832E9, 1525570805, 0.1586849524238061))))))OR((0.8256893557573083 IN ())))) GROUP BY x'' ORDER BY ((((rt1.c0)OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c1)))))AND(rt0.c0)), ((CAST(rt1.c0 AS NUMERIC)) BETWEEN ((('-1351482719') NOT NULL)) AND (((rt0.c1)IS(rt1.c2)))) ASC  NULLS LAST LIMIT 992387341; -- 0ms;
SELECT GROUP_CONCAT(((rt1.c1)<(rt1.c0))) FROM rt1 WHERE (((CAST('-520917713' AS INTEGER)) BETWEEN (SQLITE_VERSION()) AND ((((x'2e86')) BETWEEN (('227249831')) AND (('-520917713')))))) LIMIT 1367254320 OFFSET -1209866290; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, rt1 WHERE (((0Xffffffff902e3c92) NOT BETWEEN (((NULL) NOT BETWEEN (0.8063962871045668) AND (x'bdee'))) AND (((x'')GLOB('1542311416'))))); -- 0ms;
SELECT SUM((rt1.c1 IN ())) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT CAST(DATE(rt1.c2, rt0.c2, rt1.c1, rt0.c1, x'274b') AS INTEGER) FROM rt0 WHERE (((LIKELIHOOD(x'', 0.9696050813647735))&(UPPER('-1724482103'))));SELECT DISTINCT CAST(((rt0.c1)|(rt1.c0)) AS BLOB) FROM rt1 WHERE (((((CAST('%60\n,Kt73' AS TEXT))AND(rtreenode(x'', ''))))AND(0.9288706112433528)));SELECT ((CASE WHEN rt0.c0 THEN rt1.c2 END) ISNULL), (- (x'')), (((rt1.c1) IS FALSE) IN ()) FROM rt1 WHERE ((((((1.025163579E9 IN ()))OR((- (3.73979494E8)))))OR((('-1824364077') BETWEEN (0x1baece68) AND (NULL)))));SELECT DISTINCT NULL FROM rt0, rt1 WHERE (x''); -- 0ms;
SELECT TOTAL((~ (rt1.c2))) FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt0.c1))<=((rt0.c1)))) NOTNULL) FROM rt0, rt1; -- 0ms;
SELECT ALL -291312969 COLLATE RTRIM FROM rt0 WHERE ((+ (((('', x'', NULL)) BETWEEN ((1157440708, '-2122994369', '-1987553678')) AND ((0.24776387248625065, '-1140957650', -384680533)))))); -- 0ms;
SELECT rt0.c0, (((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((CAST(rt1.c0 AS REAL)))), ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))>=(CASE WHEN rt1.c1 THEN rt1.c2 END)) FROM rt1, rt0 WHERE (((((CASE WHEN NULL THEN 0.6301666895166474 WHEN 0Xffffffffe9f8b89e THEN '-v' WHEN x'' THEN 0.6913506760940685 ELSE 0.6101706256643236 END)OR((('0.28885384749763887') ISNULL))))OR(TYPEOF(NULL)))) GROUP BY (- ((((rt1.c2))>=((rt1.c1))))), CAST(((rt0.c1)>>('㙠Wu^I1d')) AS TEXT), CAST((rt0.c0 IN (rt0.c2)) AS BLOB) HAVING (((((rt0.c1)IS(rt1.c1))))<=((((rt1.c1) NOT BETWEEN (x'8f00') AND (rt0.c0))))); -- 0ms;
SELECT CASE WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 COLLATE BINARY ELSE CAST(rt1.c0 AS INTEGER) END, GROUP_CONCAT(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE), ((SQLITE_VERSION()) NOT NULL) FROM rt0;SELECT GROUP_CONCAT(-1802877181) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c1 IN ()), (rt1.c0 IN (rt1.c0)), rt1.c1 COLLATE NOCASE))<((CAST(rt0.c0 AS BLOB), rt0.c0, CAST(rt0.c0 AS INTEGER)))) FROM rt0, rt1 WHERE ('''G'); -- 0ms;
SELECT ALL 0x55b751d4 FROM rt0, rt1; -- 0ms;
SELECT ALL ((UNICODE(rt1.c1)) BETWEEN ((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2)))) AND (((((((((rt1.c0)AND(rt0.c1)))OR(rt1.c0)))AND(rt0.c0)))AND(rt0.c2)))) FROM rt0;SELECT DISTINCT (rt0.c1 COLLATE BINARY IN ()) FROM rt0 GROUP BY ((((json_array_length(rt1.c0, rt0.c2))AND((((rt1.c2))!=((rt0.c1))))))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND ('0.9320436775550826'))));SELECT (- (UNICODE(rt0.c0))) FROM rt1, rt0 WHERE (((CAST(x'' AS BLOB))%(CASE WHEN '2<窏pOfuk' THEN '887899903' END))); -- 0ms;
SELECT ALL LAST_VALUE(((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (((rt1.c0) NOTNULL)) AND (CAST(rt1.c1 AS NUMERIC)))) OVER (), (((((((((('-291312969')AND(rt1.c2)))OR(rt1.c1)))AND(rt0.c0)))AND(rt0.c1)))&(((rt1.c2)>=(rt1.c0)))), CAST(((rt0.c0)%(rt1.c1)) AS BLOB) FROM rt1;SELECT DISTINCT json_array(rt0.c2 COLLATE NOCASE, CASE rt0.c1  WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c1 END), ((((((((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c1)))AND(rt1.c2)))OR(rt1.c2)))AND(rt0.c2)))OR(rt0.c2)))-(CASE rt0.c0  WHEN '-1900955093' THEN rt1.c2 END)), NTH_VALUE((~ (((rt1.c1)-(rt1.c1)))), (+ ('156976434'))) OVER ( ROWS  CURRENT ROW EXCLUDE TIES), COUNT((NOT (rt0.c1))) OVER (), rt0.c1 FROM rt1 GROUP BY (- (rt1.c0)) LIMIT 1069208254;SELECT ALL CAST(rt0.c0 COLLATE NOCASE AS INTEGER) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)))*(((rt0.c2) ISNULL))) FROM rt1, rt0 ORDER BY NULL, (((rt0.c2)<=(NULL)) IN ()), ((((rt1.c2)>=(rt1.c2))) NOT BETWEEN (CASE WHEN rt1.c0 THEN x'b915' END) AND (((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST; -- 0ms;
SELECT 0.6378618663349035, CASE WHEN rt1.c1 THEN CASE rt1.c2  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END END, (((rt0.c1)) BETWEEN ((CAST(NULL AS NUMERIC))) AND ((rt0.c0))), COUNT(*) OVER (), ((((rt1.c1)IS NOT(rt0.c1))) IS TRUE) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((((('185272793')-(rt0.c0)))OR((NOT (rt0.c1)))))OR(SUM(rt0.c1))) FROM rt1, rt0; -- 0ms;
SELECT ALL (rt1.c0 COLLATE BINARY IN ()) FROM rt1 NOT INDEXED GROUP BY CASE SQLITE_SOURCE_ID()  WHEN ((((((((rt1.c0)AND(rt0.c1)))OR(x'a537')))OR(rt0.c1)))AND(rt1.c0)) THEN 0xffffffffc6135a79 END;SELECT ALL RANK() OVER () FROM rt0; -- 1ms;
SELECT DISTINCT json_object((rt1.c2 IN ()), (rt0.c2 IN ()), ((((rt0.c2)AND(rt1.c0)))AND(rt1.c1)), CAST(rt0.c1 AS TEXT)) FROM rt0 WHERE ((((0.06676253484095218 IN ())) BETWEEN (CAST('1087824527' AS INTEGER)) AND (CAST('q#\n' AS INTEGER))));SELECT DISTINCT INSTR(((((rt0.c0)OR('L/')))OR(rt0.c2)), (rt0.c0 IN ())) FROM rt1, rt0 WHERE (((CAST(NULL AS BLOB)) IS TRUE)) GROUP BY rt1.c0 HAVING (((0xffffffffe0f36d2f)>=(rt1.c0)) IN ()); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c1 IN (rt0.c1)) AS REAL), CASE WHEN ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c0)) THEN ((((-5.94178149E8)AND(rt1.c0)))AND(rt0.c1)) ELSE json_insert(rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2) END, GROUP_CONCAT(((rt0.c1)%(rt0.c1))) OVER () FROM rt1;SELECT ALL LAG((((((((rt1.c1)AND(x'')))OR(rt1.c0))))>=(((rt1.c1 IN ())))), '758321725' COLLATE RTRIM, ((rt0.c2)>(rt1.c0)) COLLATE RTRIM) OVER () FROM rt1, rt0 WHERE ((((CASE WHEN '*xtIu' THEN NULL ELSE '342383451' END))>(((('jt')<(NULL)))))) LIMIT -1678770721; -- 0ms;
SELECT ALL x'', (rt0.c1 IN ()) COLLATE BINARY, MIN(CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 END), (((((rt0.c1)OR(rt0.c1)))OR(rt1.c2)) IN ()), ((rt1.c1) IS TRUE) COLLATE BINARY FROM rt0 WHERE (0.3537706465109389);SELECT DISTINCT (((0.029691457738404425 IN (0x6dd746c6)))|(rt1.c0 COLLATE BINARY)) FROM rt0;SELECT ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2))) BETWEEN (LTRIM(rt0.c1)) AND ((rt1.c0 IN ()))) FROM rt1, rt0; -- 0ms;
SELECT 0.8361426485353649 FROM rt1 WHERE (CAST(((((x'88ea')AND(NULL)))OR(0.8906849793245408)) AS INTEGER)) ORDER BY (~ (((rt1.c1)>>(rt1.c1))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0))) IS TRUE) FROM rt1 WHERE (((((((((((NULL)OR('YKr췸')))AND('HT5')))OR(x'd4ed')))OR(0.3881486657845351)))||(CAST('1861224324' AS INTEGER))));SELECT (((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))))*(((rt1.c0) ISNULL))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CAST(rt1.c1 COLLATE RTRIM AS BLOB), rt1.c2, (((rt0.c2)) NOT BETWEEN ((x'')) AND ((((rt0.c1)IS(rt1.c1))))) FROM rt0 WHERE ((((((-1.38043878E8)) NOT BETWEEN ((0.29358400654983785)) AND ((0Xffffffffcb3203a0))))/((- (NULL)))));SELECT DISTINCT (((+ (rt0.c0))) BETWEEN ((rt1.c1 IN ())) AND (rt0.c1)), (((rt0.c1 IN (rt0.c1))) IS TRUE), ((((rt0.c0)<>(rt0.c1)))%(((rt0.c2)>(rt0.c0)))) FROM rt0 WHERE ((-1.475334146E9 IN ())) ORDER BY ((((((((((rt0.c2) IS FALSE))AND(x'')))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c2 IN (rt1.c0, rt0.c2)))))OR(0.08203600609631778)) DESC;SELECT ALL ((((rt1.c0)>(rt1.c1)))|(((rt0.c0) NOTNULL))), CAST(((rt1.c1)IS NOT(rt0.c0)) AS INTEGER), (- (rt0.c2)) FROM rt0, rt1; -- 0ms;
SELECT ((((rt0.c1)&(rt1.c0))) IS TRUE) FROM rt0 WHERE (((('156976434')) BETWEEN ((((((0.7500380779702089)AND(NULL)))AND(NULL)))) AND ((((('0.3914681509431225', -398828245, 0.6486782814021883)) NOT BETWEEN (('1791519020', 0.15004243493717706, 1.836361485E9)) AND ((x'', 0.41654712791314474, 0xffffffff8eb1ba2b)))))));SELECT DISTINCT LIKELIHOOD((~ (rt0.c1)), 0.3839191183887848), ((rt1.c0)!=(IFNULL(rt0.c1, rt0.c2))), AVG(COUNT(*)) FROM rt0, rt1 WHERE (((((0.17311988176610305) NOTNULL)) BETWEEN (CAST(NULL AS BLOB)) AND (((((0.6913506760940685)OR(0.5922797557293055)))AND('-1808049926')))));SELECT ALL (((rt1.c0, rt0.c0, '0.6341426082592407')) NOT BETWEEN ((((rt0.c1)>>(rt1.c1)), CASE WHEN rt0.c1 THEN rt1.c0 END, CAST(rt0.c1 AS REAL))) AND ((rt0.c2, NULL, (((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt1.c1, rt0.c0, NULL)) AND ((0.6545258436879335, rt0.c2, rt1.c1)))))) FROM rt0, rt1; -- 0ms;
SELECT ALL ((((rt0.c0)<=(rt0.c1))) IS TRUE) FROM rt0 GROUP BY rt1.c2 HAVING 0.4382132895760318;SELECT CAST(CAST(rt0.c1 AS REAL) AS BLOB), (((rt1.c0)) NOT BETWEEN ((NULL)) AND ((CAST(rt0.c2 AS NUMERIC)))), SUM((- (rt0.c0))) FROM rt0;SELECT ALL ((LOWER(DISTINCT rt1.c0)) ISNULL) FROM rt1 WHERE ((((((NOT (NULL)))OR(((((((((-1.724482103E9)OR(x'f01c')))OR(NULL)))AND(-1717478305)))OR('ShO4/>᠞q')))))OR(((0.8992508359406729)||(0.49342141021923736))))) LIMIT 921317123 OFFSET -1235336493; -- 0ms;
SELECT DISTINCT (CAST(rt0.c2 AS REAL) IN ()), ((rt1.c2)>=(UNLIKELY(DISTINCT rt1.c1))), (((((((((((((rt1.c1 IN ()))AND(((rt1.c0)<<(rt0.c1)))))OR((rt0.c0 IN ()))))OR(NULL)))OR(GROUP_CONCAT(rt1.c2))))OR(rt0.c0)))AND(((((rt0.c0)AND(rt0.c2)))OR(rt1.c1)))) FROM rt1 WHERE (CASE '-1974367075'  WHEN '-1011901400' THEN '-1158417991' ELSE '2114504871' END COLLATE RTRIM);SELECT DISTINCT CAST(rt1.c1 AS BLOB) COLLATE BINARY FROM rt1, rt0 WHERE (CASE (+ ('0.08233722194515736'))  WHEN ((NULL)/(x'')) THEN (('-26407457') ISNULL) WHEN json_valid(NULL) THEN ('qUtnwS!S' IN ()) WHEN CASE WHEN 0Xffffffffd4e19b23 THEN 1883409760 END THEN (('939496199')%('-38464859')) ELSE CASE WHEN 0Xffffffffcefc7de8 THEN '' ELSE 0.9925289508771776 END END); -- 0ms;
SELECT (((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))) COLLATE RTRIM FROM rt1 WHERE (((x'065b' COLLATE NOCASE) NOT NULL));SELECT DISTINCT ((((rt0.c0 COLLATE BINARY)AND(((((((((((((x'')OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))))OR(COALESCE(rt1.c1, rt1.c2, rt0.c2, rt0.c1))) FROM rt1 WHERE (((((0.8018792297951366)/(1.07640502E8))) BETWEEN (('-1646466559' IN ())) AND ('R1L' COLLATE NOCASE))) ORDER BY (NOT (((rt0.c2)OR(rt0.c0)))) DESC;SELECT ((((rt0.c2)>>(0.04032563838772529)))<=('-1091103089')) FROM rt0; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1, rt0; -- 0ms;
