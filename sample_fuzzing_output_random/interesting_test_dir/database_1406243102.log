-- Time: 2024/06/07 07:28:43
-- Database: database2
-- Database version: 3.40.0
-- seed value: 1406243102
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMP TABLE t0 (c0 REAL , c1 BLOB , c2 BLOB ); -- 8ms;
UPDATE OR IGNORE t0 SET c1='', c2=x'', c1=0.6109951050260677; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c48; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('-'), (x'b349'), (''); -- 0ms;
ALTER TABLE t0 ADD COLUMN c94 INTEGER; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
CREATE INDEX i22 ON t0(CASE WHEN ((c0)*(c0)) THEN (c0 IN ()) END DESC,(((((c48))>=(('')))) BETWEEN ((+ (c2))) AND (CAST(c2 AS TEXT))) COLLATE RTRIM ASC,(((CASE WHEN c2 THEN c2 ELSE c48 END))<=(((-1669869415 IN ())))) COLLATE RTRIM DESC,((((c48) NOT BETWEEN (c0) AND (c2)))OR(c48)) COLLATE NOCASE ASC) WHERE ((((c48)OR((('-1669869415')-(NULL)))))AND(c0)); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.6109951050260677, '', NULL, 0X568d51d); -- 1ms;
ANALYZE t0; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i61 ON t0((- ((c0 IN ()))),(((((((c0, c2, c0))>((c48, c48, c0))))AND((((c2)) BETWEEN ((c2)) AND ((c94))))))OR(((c48) IS FALSE))) COLLATE BINARY,((c2) ISNULL) COLLATE BINARY COLLATE RTRIM ASC,((((x'3ea1')<>(c94)))IS((- (c48)))) ASC) WHERE ((json_patch(c2, -531433443))<=(((c0) ISNULL))); -- 1ms;
INSERT OR IGNORE INTO t0(c2, c48, c94) VALUES ('HqZ', -531433443, 0.24220429408971456); -- 4ms;
INSERT OR FAIL INTO t0(c2) VALUES (NULL); -- 0ms;
UPDATE OR FAIL t0 SET c48=x''; -- 0ms;
DELETE FROM t0 WHERE (((((((t0.c2)OR(NULL)))OR(t0.c48)), (~ (t0.c0)), (((t0.c48, t0.c48, t0.c94))>((t0.c0, t0.c94, '')))))<>(((((t0.c94)) BETWEEN ((t0.c94)) AND ((x''))), CAST(t0.c2 AS TEXT), 9.0756381E7))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c48) VALUES (0.7964245746417788, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
UPDATE OR FAIL t1 SET (c0, c0, c0)=(x'', NULL, '{3jlb') WHERE ((CASE -955090654  WHEN ')' THEN t1.c48 ELSE t1.c94 END) BETWEEN (x'') AND (((((t1.c94)AND(NULL)))OR(t1.c2)))); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
PRAGMA short_column_names; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.3278040949846067; -- 1ms;
PRAGMA temp.short_column_names = true; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1(c0, c48, c2, c94) VALUES (0.23400848926835383, '0.6109951050260677', x'', ''); -- 1ms;
INSERT OR IGNORE INTO t1(c48, c2, c94) VALUES ('', NULL, x'75cc'); -- 1ms;
ROLLBACK TRANSACTION; -- 4ms;
PRAGMA main.busy_timeout; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL t1 SET c48='-483708477'; -- 0ms;
INSERT OR FAIL INTO t1(c2, c94, c0, c48) VALUES ('5N,3䐐5D.', NULL, '-1216324244', 0.3278040949846067), (0.8625339001852326, 'Zy彞QApY', NULL, x''), (-955090654, x'9f49', 0.04462773369301776, 'yxF'); -- 2ms;
INSERT OR IGNORE INTO t1(c48, c0) VALUES (-1.216324244E9, '0.23400848926835383'); -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES ('-590481758', '-'); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR ABORT INTO t0(c48, c0) VALUES (x'', 0.23400848926835383); -- 0ms;
PRAGMA mmap_size = -6001224498517489387; -- 0ms;
UPDATE OR IGNORE t0 SET c94='90756381', c2='' WHERE CASE ((t0.c2) NOT BETWEEN (t0.c2) AND (NULL))  WHEN 0.7552211929031014 THEN (((t0.c94)) NOT BETWEEN ((t0.c48)) AND ((t0.c48))) WHEN (~ (t0.c94)) THEN ((((((((t0.c2)AND(t0.c94)))OR(t0.c48)))OR(x'')))OR(t0.c94)) WHEN t0.c2 THEN t0.c48 WHEN 0.3142865934780814 THEN CASE t0.c94  WHEN t0.c94 THEN t0.c0 WHEN t0.c48 THEN t0.c2 WHEN t0.c94 THEN t0.c2 WHEN '-531433443' THEN t0.c94 WHEN '-201585114' THEN t0.c2 END WHEN CAST(t0.c0 AS REAL) THEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))AND(t0.c2)) END; -- 2ms;
INSERT OR ABORT INTO t0(c0, c2, c48) VALUES (NULL, NULL, ''), (x'', 0.9961762092048357, NULL), ('0.24220429408971456', x'', '620743833'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('-1772293130', 'uF', 0.6313788297612228, '1436723218'); -- 0ms;
INSERT OR FAIL INTO t0(c94) VALUES (0.7552211929031014); -- 0ms;
UPDATE OR IGNORE t0 SET (c48)=(0.7940601513159451); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ((CASE '-483708477'  WHEN 0.34973195178673455 THEN 0.16445412594335906 ELSE x'' END IN ((((1083550646, x'', 1608214838))<((628576870, 1549950262, 317932075))), NULLIF('-1772293130', x'45b7'))), x'', x'', -1669869415); -- 0ms;
INSERT OR IGNORE INTO t0(c94, c0, c48, c2) VALUES (1.436723218E9, NULL, x'31f9', NULL); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c48, c94)=(x'', NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('Z\r', '', '992921592', x'1e469bdb'); -- 0ms;
UPDATE t0 SET (c0)=('') WHERE CAST(t0.c48 AS TEXT); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c94, c0) VALUES (x'ed340e16', ((((-883893081)GLOB('')))>=((+ (0xffffffffe3130dc1))))); -- 0ms;
CREATE INDEX IF NOT EXISTS i73 ON t0(0.8100364615798449 ASC,((c0) IS FALSE) COLLATE RTRIM ASC,CASE WHEN (+ (c48)) THEN ((c94)/(c94)) ELSE (c0 IN ()) END ASC,(((((((c94)OR(x'6ece')))OR(c0)), TYPEOF(DISTINCT c94), (((NULL))!=((c94)))))<((((c2)IS NOT(c2)), ((c48)>>('')), c48 COLLATE BINARY)))); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x'', 'G}Vd!%]m(', x'3751', '620743833'); -- 0ms;
INSERT OR IGNORE INTO t0(c48, c94) VALUES (x'', -5.90481758E8); -- 0ms;
INSERT OR ABORT INTO t0(c48) VALUES ('Y%q<DII'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET c94=0.19624298746291924 WHERE t0.c2; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR FAIL INTO t0(c48, c94, c2, c0) VALUES (x'', '1304163789', '-165887241', x'd972'), (NULL, NULL, x'', x'f93a'), (NULL, 'z''', 0.7352098538894466, 0.8031479326644235); -- 0ms;
INSERT OR IGNORE INTO t0(c94) VALUES (0.6947921867123814), ('1952420209'), (x''); -- 0ms;
ANALYZE i73; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (-1.65887241E8, NULL, 0.7458615549670823, 9.92921592E8), ('!', 'y8%CbuF', x'', 0.24220429408971456), (x'', '1083550646', NULL, 0.5797414505129738); -- 1ms;
INSERT OR ABORT INTO t0(c0, c94) VALUES (NULL, x'3bb478cd459a'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1661969605', x'6e96', 0X7f448f1f, -531433443), (x'5d77', NULL, 0.656679069738862, NULL), (0.3938267617586243, NULL, x'db4e', '1071320217'); -- 0ms;
INSERT OR IGNORE INTO t0(c94) VALUES (-1425339602); -- 0ms;
CREATE INDEX IF NOT EXISTS i1 ON t0((+ (LIKELY('0.19624298746291924'))),((((CAST(c94 AS TEXT))AND(LTRIM(c0))))OR(STRFTIME(c0, c2, c0))) COLLATE NOCASE DESC,(+ (c0 COLLATE RTRIM)) COLLATE BINARY,((((UPPER(c0))OR((((x'', c2, c48))>=((c0, c2, c94))))))AND(NULLIF(c48, c0)))) WHERE CASE ((c48) BETWEEN (c2) AND (c48))  WHEN CASE c94  WHEN c0 THEN c0 ELSE c0 END THEN ((c94) ISNULL) ELSE json_insert(c48, c48, c2) END; -- 0ms;
CREATE INDEX IF NOT EXISTS i10 ON t0((((c48)) BETWEEN ((TYPEOF(c2))) AND ((0.7826919897384439))),CASE c2  WHEN (~ (c94)) THEN c48 ELSE (c48 IN ()) END COLLATE RTRIM,((((c2)<=(c0))) NOT BETWEEN (c2 COLLATE NOCASE) AND ((c2 IN ()))) COLLATE NOCASE ASC,0Xffffffffe3130dc1) WHERE CASE c2  WHEN c48 THEN c2 ELSE c48 END COLLATE NOCASE; -- 0ms;
INSERT OR ABORT INTO t0(c48, c0) VALUES (')', 6.2857687E8); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT 'LQnI0ಙ]_', ((CASE WHEN t0.c2 THEN t0.c94 WHEN t0.c94 THEN x'' WHEN t0.c2 THEN t0.c0 END) NOT NULL), COUNT((((t0.c0)) BETWEEN (('')) AND ((t0.c94)))) OVER ( ORDER BY ((((((((LIKELIHOOD(DISTINCT x'', 0.09848609478988224))AND((((t0.c48)) BETWEEN ((t0.c48)) AND ((t0.c94))))))OR((NOT (t0.c94)))))AND(ABS(t0.c0))))AND(((t0.c2) ISNULL))) DESC, CASE t0.c0 COLLATE BINARY  WHEN t0.c94 COLLATE BINARY THEN CAST(t0.c48 AS INTEGER) END ASC  NULLS LAST ROWS CAST(-1.216324244E9 AS INTEGER) PRECEDING EXCLUDE GROUP) FROM t0 WHERE ((+ ((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((MIN(t0.c94))OR(((((((((t0.c94)OR(t0.c48)))AND(t0.c48)))AND(t0.c0)))OR(t0.c48)))), MIN(CAST(t0.c94 AS BLOB)), CAST(((t0.c0) BETWEEN (t0.c2) AND (0.2536930311410188)) AS TEXT), COUNT(*) OVER ( ORDER BY TRIM(((t0.c0)/(t0.c94)))  NULLS FIRST), GROUP_CONCAT(((t0.c2) BETWEEN (t0.c48) AND (t0.c0))) FROM t0 WHERE ((CASE 0.3506674603198675  WHEN x'05b3' THEN '' WHEN NULL THEN NULL WHEN '96740594' THEN 'R.iDC?ಙ' ELSE NULL END IN ())) LIMIT -184943448; -- 0ms;
SELECT DISTINCT (+ (CAST(t0.c94 AS REAL))) FROM t0; -- 0ms;
SELECT ALL (((TOTAL(t0.c2)))>=((CAST(t0.c94 AS INTEGER)))), CASE WHEN ((t0.c48)-(t0.c0)) THEN ((t0.c2)<=(t0.c0)) WHEN ((t0.c0)<(t0.c94)) THEN ((t0.c2)<>(t0.c48)) WHEN ((NULL) IS FALSE) THEN SUM(t0.c0) ELSE t0.c48 COLLATE NOCASE END, (- ('1549950262')), IFNULL((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))), MIN(0.32288041147817304)), '' FROM t0 WHERE ((((((~ (0.2536930311410188)))OR((('煎UN?+xGg[') NOT NULL))))AND('' COLLATE RTRIM))); -- 0ms;
SELECT ALL ((((('-1028444911'))<=((t0.c0))))IS NOT(((('\J')) BETWEEN ((t0.c94)) AND ((t0.c94))))) FROM t0 WHERE ((((((0.8235909026233195)>>(0.9977722870642027))))>(((('\j')<=(520262501)))))) GROUP BY ((t0.c94 IN ()) IN (ABS(DISTINCT t0.c48))), ((((t0.c48)IS NOT('1722893328'))) BETWEEN ((('G&~E') BETWEEN (NULL) AND (t0.c48))) AND (((t0.c94)=(t0.c48)))), t0.c48; -- 0ms;
SELECT GROUP_CONCAT(CASE t0.c48  WHEN '!' THEN t0.c2 END) OVER ( ROWS (((t0.c94 IN ())) NOT BETWEEN (t0.c94) AND (UPPER(NULL))) PRECEDING) FROM t0 WHERE (((0.001177959473839918)|(((0.04462773369301776) NOT NULL)))) LIMIT 1744636667 OFFSET 713741692;SELECT ALL ROW_NUMBER() OVER (), CASE WHEN ((t0.c94) ISNULL) THEN ((t0.c94)>(t0.c0)) WHEN (((t0.c2, t0.c48, t0.c48)) NOT BETWEEN ((t0.c48, t0.c2, t0.c94)) AND ((t0.c2, t0.c94, t0.c94))) THEN t0.c2 WHEN ((t0.c0)|(t0.c0)) THEN AVG(t0.c94) ELSE ((t0.c0)LIKE(t0.c94)) END, COUNT(*) FROM t0 WHERE (((((((((CASE ''  WHEN 0.8232160297092689 THEN x'' WHEN 0.11791346578649531 THEN 'YR' WHEN 'g&~e' THEN NULL END)OR(-8.83893081E8)))AND((('??)')>('1083550646')))))AND(CAST('ns' AS TEXT))))AND(('' IN ())))); -- 0ms;
SELECT ((COUNT(t0.c2)) NOT BETWEEN ((t0.c0 IN ())) AND (HEX(t0.c48))), ((((t0.c94) IS TRUE)) IS TRUE), NTH_VALUE(CAST((t0.c0 IN ()) AS NUMERIC), (((0xffffffff88b5663a, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c2)*(t0.c2)), CAST(t0.c48 AS INTEGER), x'')) AND ((((t0.c48)IS NOT(t0.c48)), (((t0.c2)) NOT BETWEEN ((0.4230200308795772)) AND ((t0.c48))), t0.c2)))) OVER ( GROUPS DATETIME((t0.c48 IN (t0.c94, t0.c94, t0.c48)), (t0.c0 IN (t0.c94)), ((t0.c0)|(t0.c94)), (NOT (t0.c94)), ((((t0.c94)AND(t0.c94)))AND(t0.c48)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (t0.c2 IN ())) PRECEDING), (((t0.c48 IN ()))GLOB(((t0.c2) BETWEEN (t0.c48) AND (t0.c48)))), (((+ (t0.c2))) NOT BETWEEN (t0.c48 COLLATE BINARY) AND (((t0.c48)<<(t0.c94)))) FROM t0 WHERE (((x'16ed') NOTNULL) COLLATE BINARY);SELECT AVG((((NULL))>=((t0.c94)))) OVER () FROM t0 ORDER BY CAST(((t0.c94)OR(t0.c94)) AS REAL)  NULLS FIRST; -- 0ms;
SELECT CAST(t0.c94 AS BLOB), CAST(TRIM(t0.c94) AS INTEGER), NULL FROM t0 WHERE (-165887241); -- 1ms;
SELECT ALL ((((t0.c94)/(t0.c0))) BETWEEN (CAST(t0.c94 AS INTEGER)) AND (COUNT(*))) FROM t0 WHERE (CAST(((('yxF')) NOT BETWEEN ((x'')) AND (('}'))) AS BLOB)) LIMIT 1324249190 OFFSET -1302071518; -- 0ms;
SELECT ALL STRFTIME(COUNT(NULL), (NOT (t0.c2)), ((t0.c48)+(t0.c48))) FROM t0 WHERE ((((ABS(DISTINCT x'646d'), (0x1f029365 IN ()), '-1613661601'))<(((+ ('317932075')), IFNULL('-1128162451', NULL), x'')))); -- 0ms;
SELECT ALL ((((t0.c2)IS(t0.c2))) BETWEEN ((- (t0.c48))) AND ((((t0.c2))<=((t0.c48))))), CASE WHEN (((t0.c0, t0.c2, t0.c2))<((t0.c94, '666448477', t0.c48))) THEN t0.c94 END, ((CASE t0.c2  WHEN t0.c0 THEN t0.c48 WHEN t0.c94 THEN t0.c94 WHEN t0.c2 THEN x'' ELSE t0.c2 END)LIKE((+ (t0.c94)))) FROM t0 GROUP BY ((((CASE WHEN t0.c48 THEN t0.c2 END)AND(t0.c0)))OR(((t0.c94)==(t0.c0)))), CAST(t0.c48 AS BLOB) COLLATE NOCASE, ((((t0.c2)<=(t0.c94)))=(((t0.c48) BETWEEN (t0.c48) AND (t0.c0)))); -- 0ms;
SELECT DISTINCT CASE WHEN (+ (NULL)) THEN ((t0.c2)+(x'')) WHEN (((t0.c94))>((t0.c2))) THEN (NOT (t0.c0)) WHEN (t0.c0 IN ()) THEN ((t0.c0)|(t0.c48)) END FROM t0; -- 0ms;
SELECT ALL ((CASE WHEN t0.c2 THEN t0.c2 WHEN x'2fd2' THEN t0.c0 WHEN -1.84943448E8 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (CASE WHEN t0.c48 THEN t0.c48 END) AND ((t0.c94 IN (t0.c0)))) FROM t0 LIMIT 713741692; -- 0ms;
SELECT DISTINCT CAST(((t0.c2) NOTNULL) AS TEXT) FROM t0; -- 0ms;
SELECT ALL CASE x''  WHEN ((t0.c48)IS NOT(t0.c48)) THEN LIKELY(DISTINCT t0.c48) WHEN t0.c48 COLLATE RTRIM THEN '' WHEN ((((((((t0.c94)OR(t0.c48)))OR(t0.c48)))AND(t0.c2)))AND(t0.c0)) THEN (t0.c2 IN ()) END FROM t0; -- 0ms;
SELECT DISTINCT NULLIF((((t0.c2))=((t0.c48))), ((t0.c48)%(t0.c48))), (((((((t0.c48)OR(t0.c94)))OR(t0.c2))))<((UNLIKELY(t0.c48)))), GROUP_CONCAT(((((((((t0.c94)AND(t0.c0)))OR(t0.c2)))OR(t0.c94)))AND(t0.c48))) FILTER(WHERE ((((((t0.c0)OR(NULL)))AND(t0.c0)))LIKE((t0.c0 IN (t0.c48))))) OVER ( PARTITION BY t0.c94 COLLATE NOCASE, t0.c94) FROM t0; -- 2ms;
SELECT DISTINCT TOTAL((- (t0.c0))) OVER ( ORDER BY t0.c2  NULLS FIRST) FROM t0 WHERE (CASE WHEN LOWER(DISTINCT '-1028444911') THEN (- (NULL)) WHEN (- ('cU[F|9騩,*')) THEN '' COLLATE RTRIM WHEN CASE x''  WHEN x'fbcabeff' THEN 'H' ELSE '-1751396297' END THEN QUOTE(x'') ELSE (('|u') NOTNULL) END); -- 0ms;
SELECT (~ (CASE WHEN t0.c2 THEN t0.c48 END)) FROM t0; -- 0ms;
SELECT (((t0.c94) NOTNULL) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0)AND(t0.c2)) AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c94))) NOT BETWEEN (((t0.c94) BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c94) IS FALSE))) FROM t0; -- 1ms;
SELECT DISTINCT (((json_object(t0.c0, t0.c2)))<(((NOT (NULL))))) FROM t0;SELECT DISTINCT ((((((t0.c2)>(t0.c2)))OR(CASE t0.c48  WHEN t0.c0 THEN t0.c94 ELSE t0.c48 END)))OR(TOTAL(t0.c0))) FROM t0 WHERE ((~ (((NULL)&(NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN '礢.Y넋KꠒꇜR' THEN COUNT(t0.c2) END, t0.c2, (((((((((NOT (t0.c0)))OR(TYPEOF(DISTINCT t0.c2))))OR(((t0.c0) IS TRUE))))AND(((t0.c48)|(t0.c0)))))AND(((t0.c2) IS TRUE))) FROM t0; -- 0ms;
SELECT ALL NULL FROM t0; -- 0ms;
SELECT DISTINCT AVG(t0.c2) OVER (), NULL, CASE ((t0.c2)AND(t0.c0))  WHEN SUM(t0.c94) THEN t0.c0 COLLATE BINARY WHEN t0.c48 THEN json_type(t0.c2) WHEN t0.c94 COLLATE RTRIM THEN 713741692 END FROM t0 ORDER BY ((0.8843642990104817)IS NOT(((t0.c94) IS FALSE))) LIMIT -131257167 OFFSET -1754273467; -- 1ms;
SELECT ALL SUM(((((t0.c48)AND(t0.c2)))AND(t0.c0))) OVER () FROM t0 INDEXED BY i22 WHERE (NULL) LIMIT -744458032;SELECT ALL -2.01585114E8 FROM t0; -- 0ms;
SELECT ALL CASE WHEN -1128162451 THEN t0.c94 END COLLATE RTRIM COLLATE NOCASE FROM t0; -- 0ms;
SELECT json_patch(x'', ((t0.c0)<<(t0.c94))) FROM t0 LIMIT 720427637;SELECT ALL 'VCyIzH' FROM t0 WHERE (CASE ((0.028920186295814942)>(0.44703513678968154))  WHEN ((0.5812716033172576)%(NULL)) THEN ((-1.216324244E9)IS('')) ELSE ((NULL)>=(x'98b7')) END) EXCEPT SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY CASE ((t0.c94)+(''))  WHEN t0.c94 COLLATE NOCASE THEN ((t0.c48) IS FALSE) ELSE '1793858796' END  NULLS FIRST, ((((t0.c94) BETWEEN (t0.c48) AND (t0.c0)))<(((t0.c94)IS NOT(t0.c94))))) FROM t0 GROUP BY ((CAST(t0.c2 AS INTEGER))IS NOT((NOT (t0.c48)))), CAST('26621948' AS NUMERIC), UNLIKELY(t0.c94), LIKELY(DISTINCT (((t0.c2, NULL, t0.c94))>=((t0.c2, t0.c48, t0.c48)))), ((((((((((((t0.c94)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c94)))AND(t0.c2)))OR(t0.c2)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT 26621948 FROM t0; -- 0ms;
SELECT DISTINCT MAX(NULL), t0.c0, (TOTAL(t0.c2) IN ()) FROM t0 GROUP BY TRIM((((t0.c2))>=((t0.c94))), '-174848535'); -- 0ms;
SELECT ((t0.c0) NOT BETWEEN ((- (t0.c2))) AND (((t0.c48) BETWEEN (t0.c48) AND (t0.c0)))), AVG(t0.c48) COLLATE RTRIM, (((t0.c94)<>(t0.c2)) IN ()) FROM t0 WHERE ((- ((NULL IN ())))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT ALL COUNT(((t0.c0) NOTNULL)) COLLATE RTRIM FROM t0 LIMIT 507747837 OFFSET 1793029724; -- 0ms;
SELECT DISTINCT (((t0.c2, ((t0.c0) NOT BETWEEN (t0.c48) AND (0.717872377766172)), ((t0.c0)<(0.15269933659808765)), ((t0.c94) IS TRUE), t0.c94 COLLATE RTRIM))>((((t0.c48)/(t0.c48)), ((t0.c48)<=(t0.c2)), ((t0.c48)IS NOT(t0.c94)), (NOT (t0.c48)), ((t0.c48) BETWEEN (t0.c48) AND (t0.c48))))) FROM t0 WHERE (((((NULL)*(''))) BETWEEN (CASE WHEN '1952420209' THEN 0.0743029991966655 END) AND (x'60fb'))) ORDER BY ((((((((t0.c48)OR(t0.c0)))AND(t0.c2)))OR(t0.c94)))OR(t0.c2)) COLLATE RTRIM ASC; -- 0ms;
SELECT ALL ((((((t0.c0))!=((t0.c48)))))<(((0.9507577995420653 IN ())))), t0.c94, x'2f6f', CAST(COUNT(*) AS REAL), PERCENT_RANK() OVER () FROM t0 WHERE (CAST(NULL COLLATE BINARY AS BLOB)); -- 0ms;
SELECT ALL LIKELIHOOD(((t0.c48)LIKE(t0.c48)), 0.9750417735950528), UNLIKELY(DISTINCT DATETIME(t0.c2, t0.c94, t0.c94)), (((t0.c48)) NOT BETWEEN ((TOTAL(t0.c48))) AND (((((t0.c2, t0.c94, t0.c94)) NOT BETWEEN ((t0.c0, ' -*s+v2{', t0.c2)) AND ((t0.c0, t0.c2, t0.c2)))))), 0.8031479326644235, ((((t0.c2) BETWEEN (t0.c48) AND (t0.c2))) BETWEEN (COUNT(*)) AND ((~ (t0.c0)))) FROM t0 WHERE (((x'0a89')<<('|rkw7b71M')) COLLATE RTRIM); -- 0ms;
SELECT ALL (NOT (((t0.c48) NOT BETWEEN (t0.c0) AND ('-1772293130')))), t0.c48, AVG(((t0.c2)-(t0.c0))) FROM t0 ORDER BY (((((t0.c2)) NOT BETWEEN (('')) AND ((t0.c0)))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) NOT NULL))) ASC  NULLS LAST; -- 0ms;
SELECT CASE CASE WHEN t0.c2 THEN t0.c2 ELSE NULL END  WHEN CASE t0.c94  WHEN t0.c0 THEN t0.c94 WHEN '1976716518' THEN t0.c48 WHEN t0.c2 THEN NULL ELSE t0.c94 END THEN ((t0.c94)AND(t0.c0)) WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c48)))OR(t0.c48)) THEN TOTAL(t0.c0) WHEN (t0.c94 IN (t0.c0)) THEN CAST(t0.c48 AS REAL) ELSE (NOT (t0.c48)) END FROM t0 WHERE (((((0.7159034721874133 IN (x'0795'))))<=(((x'' IN (0xffffffffc29941a9)))))); -- 0ms;
SELECT CAST(t0.c2 COLLATE BINARY AS INTEGER), t0.c94, ((((((t0.c2)||(t0.c48)))AND(((t0.c94)/(t0.c2)))))AND((t0.c2 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT TYPEOF(((((t0.c48)AND(t0.c0)))OR(t0.c48))), ((((t0.c48)<=(t0.c48))) ISNULL), ((0xffffffffc6e9b978 COLLATE BINARY)IS((t0.c48 IN (t0.c94, t0.c94)))) FROM t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN 'e2' THEN t0.c2 END) NOT BETWEEN (((((t0.c94)AND(t0.c48)))AND(t0.c48))) AND (((((t0.c94)AND(t0.c2)))AND(x'61e6')))) FROM t0 WHERE (((((NULL)<(0Xfffffffff93213f5))) BETWEEN ((('1199831377') IS TRUE)) AND (((620743833) NOT BETWEEN ('445611091') AND (x'4bc4'))))); -- 0ms;
SELECT COUNT(*) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c94, t0.c94, t0.c94)) BETWEEN ((t0.c94, t0.c94, t0.c0)) AND ((t0.c0, t0.c0, t0.c94)))) NOTNULL) FROM t0 WHERE (((x'737738e4' COLLATE NOCASE) NOT BETWEEN (CASE 239996746  WHEN '' THEN x'' ELSE '' END) AND ('|u'))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t0.c48)) BETWEEN ((t0.c94)) AND ((t0.c48)))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT CAST(json_extract(t0.c2, t0.c0, t0.c48, t0.c48) AS NUMERIC) FROM t0 WHERE (CAST((('445611091') IS TRUE) AS INTEGER));SELECT (((((t0.c0)OR(t0.c48)))OR(t0.c48)) IN ()) FROM t0 LIMIT 992921592 OFFSET 1575131278; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE)/(t0.c94)) FROM t0 WHERE (((-1216324244 COLLATE NOCASE) ISNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN HEX(DISTINCT t0.c94) THEN t0.c94 ELSE CASE t0.c48  WHEN t0.c48 THEN t0.c94 END END, UPPER(((t0.c0) BETWEEN (t0.c2) AND (t0.c94))), ((GLOB(t0.c2, t0.c2)) NOT NULL) FROM t0 WHERE (CAST(CAST(0.671170635981524 AS NUMERIC) AS TEXT)); -- 0ms;
SELECT CAST((t0.c0 IN (x'', t0.c2)) AS BLOB), SUM((t0.c94 IN ())) OVER (), (((t0.c48)+(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT ((t0.c48) BETWEEN (((t0.c0)<>(t0.c2))) AND (((((((((t0.c2)AND(t0.c0)))OR(t0.c94)))OR(t0.c94)))OR('992921592')))) FROM t0; -- 0ms;
SELECT DISTINCT NULL, ((MIN(t0.c48))-(((((((((0.8843742606275203)AND(t0.c0)))AND(t0.c2)))OR(NULL)))OR(t0.c2)))), (((('煎UN?+xGg[')OR((~ (t0.c94)))))AND(ABS(t0.c94))) FROM t0 WHERE ((((((('-1250235877') NOTNULL))AND(COALESCE('-1608584330', x''))))AND(CASE WHEN '' THEN 1630325928 WHEN 0X4f0b2691 THEN x'' WHEN '941146810' THEN '-1630614044' WHEN -1.425339602E9 THEN x'' WHEN NULL THEN 0.9560480385743781 END))); -- 0ms;
SELECT DISTINCT ((t0.c48 COLLATE RTRIM) NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((- (t0.c0)))) FROM t0 WHERE (CASE ((0X6050aaae) NOT BETWEEN (46632602) AND (x'75a2'))  WHEN (('-749910072') NOT BETWEEN (0.32085158333367025) AND ('1575131278')) THEN (('-1250235877')>>(NULL)) WHEN COALESCE(2.39996746E8, 0x577d103f) THEN (((x''))>(('RoEP-䙥'))) WHEN ((-7.44458032E8) IS TRUE) THEN ((((NULL)OR('bV퀷d[-?')))AND('1976716518')) ELSE ((((x'')AND(NULL)))AND(-2.001377734E9)) END); -- 0ms;
SELECT t0.c0, CASE (((t0.c48, t0.c94, t0.c0))>((t0.c94, t0.c94, t0.c48)))  WHEN (- (t0.c48)) THEN ((t0.c2) NOT BETWEEN (-1.630614044E9) AND (t0.c94)) END, ((((((t0.c0)IS(t0.c2)))AND(((t0.c94)OR(t0.c48)))))OR(((t0.c94) IS TRUE))) FROM t0 WHERE (CASE WHEN CASE NULL  WHEN '<[]H' THEN 1083550646 END THEN (+ (0.1191051704997329)) WHEN CAST('403620266' AS TEXT) THEN CAST(x'8997' AS NUMERIC) WHEN (((('1199831377')AND('-883893081')))AND('0.9961762092048357')) THEN NULLIF(NULL, x'c619') ELSE LIKELIHOOD('Z,V{MNXQ5', 0.5003143227218434) END); -- 1ms;
SELECT DISTINCT LAST_VALUE(((ABS(t0.c94))%(((((t0.c94)AND(t0.c48)))AND(t0.c0))))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM t0 WHERE (CASE ((x'')GLOB('1549950262'))  WHEN CHANGES() THEN CASE WHEN x'fd35' THEN 0.06953053013281751 WHEN 'YR' THEN x'' WHEN x'22d2352f' THEN 0xffffffffcee75408 END END) GROUP BY ((t0.c0 COLLATE NOCASE) IS FALSE), CASE ((t0.c0)||(t0.c48))  WHEN ((t0.c2)IS NOT(t0.c0)) THEN HEX('0.23400848926835383') WHEN t0.c48 COLLATE RTRIM THEN ((t0.c94)OR(t0.c2)) WHEN ((NULL)|(t0.c0)) THEN t0.c0 COLLATE BINARY END, LENGTH(t0.c0) HAVING ((((CAST(t0.c0 AS BLOB))AND(((x'5b5e')=(t0.c94)))))AND(((x'')||(t0.c0)))); -- 1ms;
SELECT DISTINCT NULL FROM t0 GROUP BY COALESCE((~ (t0.c94)), DATETIME(t0.c94, t0.c0, t0.c2), ((t0.c0)&(t0.c0)), t0.c0 COLLATE BINARY), (('??)')|((NOT (t0.c94)))), ((t0.c2)<(t0.c48)) COLLATE NOCASE; -- 0ms;
SELECT (CAST(t0.c48 AS REAL) IN (t0.c94)) FROM t0 WHERE (((CAST(1304163789 AS NUMERIC)) BETWEEN ((('-893150608') BETWEEN (0x37e34496) AND (x''))) AND (((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT CASE (0xffffffffe09f9a29 IN ())  WHEN ((t0.c48) NOT BETWEEN (t0.c94) AND (t0.c48)) THEN (~ (t0.c48)) ELSE (NOT (t0.c2)) END FROM t0 WHERE (((((0.1191051704997329)GLOB('713741692')))GLOB(PRINTF(0.8988826324266592)))); -- 0ms;
SELECT DISTINCT ((((t0.c94) BETWEEN (t0.c2) AND (t0.c0)))+(((t0.c48) NOTNULL))), (+ (((t0.c0)*(t0.c2)))), UPPER(((((t0.c2)OR(NULL)))OR(t0.c2))) FROM t0 GROUP BY 0.717872377766172 COLLATE BINARY HAVING (((((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c0))))=(((((t0.c94, NULL, t0.c48)) BETWEEN ((t0.c2, t0.c94, t0.c2)) AND ((t0.c94, t0.c0, 0.3278040949846067)))))); -- 0ms;
SELECT ((((0.6915375398099849)AND(t0.c94)))AND(load_extension(t0.c94))), CASE (((t0.c48)) NOT BETWEEN ((t0.c48)) AND ((t0.c2)))  WHEN t0.c94 COLLATE RTRIM THEN ((t0.c48)GLOB(t0.c0)) END, TOTAL(CAST(t0.c2 AS REAL)), ((t0.c0)=(((t0.c0) NOTNULL))), LIKELIHOOD(DISTINCT ((t0.c48) NOT BETWEEN (t0.c0) AND ('0.7458615549670823')), 0.4550058142650171) FROM t0 GROUP BY (('0.9507577995420653') NOT BETWEEN ((t0.c2 IN ())) AND ((- (NULL)))), UPPER(DISTINCT NULL), ((((CAST(0.5381190474507093 AS NUMERIC))OR(CASE t0.c0  WHEN t0.c94 THEN t0.c94 ELSE t0.c2 END)))AND(((t0.c2) NOTNULL))), 1483318801 COLLATE NOCASE, ((t0.c94 COLLATE BINARY) NOTNULL) HAVING GROUP_CONCAT(x'cf3303f6');SELECT DISTINCT CAST((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c48))) AS TEXT), ((((((((((((t0.c0 COLLATE NOCASE)AND(((t0.c48) NOT BETWEEN (t0.c48) AND ('-1216324244')))))AND((- (t0.c0)))))AND(((t0.c2) IS TRUE))))OR(t0.c2 COLLATE RTRIM)))OR(CAST(t0.c0 AS NUMERIC))))AND(((((((((t0.c94)OR(t0.c2)))OR(t0.c94)))AND(t0.c48)))AND(t0.c2)))), (~ (((t0.c48) BETWEEN (t0.c0) AND (t0.c94)))) FROM t0 LIMIT 875443065 OFFSET 1304163789; -- 1ms;
SELECT DISTINCT CAST(NULLIF(t0.c0, t0.c48) AS BLOB) FROM t0 WHERE (CASE WHEN CAST(0xffffffffe1be91a4 AS NUMERIC) THEN (((x''))>(('0.32085158333367025'))) WHEN ((x'2043') IS TRUE) THEN (x'' IN ()) WHEN ((0.8229930596691855) NOT NULL) THEN ((0xffffffff9681a14b) BETWEEN (x'') AND (NULL)) END); -- 0ms;
SELECT ALL t0.c48 FROM t0; -- 0ms;
SELECT DISTINCT (~ (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c48)))), GROUP_CONCAT((t0.c94 IN ())), CUME_DIST() OVER (), (CAST(t0.c94 AS TEXT) IN (((t0.c2)>>(t0.c0)))), '-1504155568' FROM t0 WHERE (((0.3472090872407694 COLLATE BINARY)%(UNLIKELY(DISTINCT '1575131278')))); -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN t0.c2 THEN t0.c2 END)OR(((t0.c94) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(CASE t0.c2  WHEN t0.c0 THEN t0.c94 WHEN t0.c48 THEN t0.c94 WHEN t0.c48 THEN t0.c48 ELSE t0.c48 END)))OR(t0.c0 COLLATE BINARY)))OR(CASE WHEN x'a659d25a' THEN t0.c94 ELSE t0.c2 END)) FROM t0; -- 0ms;
SELECT DISTINCT (((((((t0.c48)OR(t0.c2)))AND(t0.c94))))==(((NOT (t0.c48))))), (((t0.c94)) BETWEEN ((x'')) AND ((t0.c94))), ((((t0.c94) BETWEEN (t0.c2) AND (t0.c2)))AND(COUNT(*))) FROM t0 WHERE (CAST(((((((((0.3667913381736908)OR(x'')))OR(NULL)))OR(0.03476742859332582)))AND('w')) AS NUMERIC)) GROUP BY ((t0.c48)<(t0.c0)) COLLATE NOCASE HAVING (((t0.c48)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c94 THEN t0.c0 WHEN t0.c48 THEN t0.c94 WHEN t0.c94 THEN t0.c2 ELSE t0.c2 END)) AND ((GROUP_CONCAT(t0.c0)))); -- 0ms;
SELECT DISTINCT (((((t0.c48))<>((t0.c0)))) NOT NULL) FROM t0; -- 0ms;
SELECT DISTINCT t0.c2 FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c94 IN (t0.c94, t0.c2))))>=((((t0.c48) IS TRUE)))) FROM t0 WHERE (((((((1976716518)>('56550906')))AND((('875443065') IS TRUE))))OR(TYPEOF(NULL)))); -- 0ms;
SELECT DISTINCT t0.c0 COLLATE BINARY, ((t0.c0)GLOB(t0.c94)), LOWER(TRIM(-4.83708477E8)) FROM t0; -- 0ms;
SELECT DISTINCT (+ (t0.c94 COLLATE BINARY)) FROM t0 WHERE (CASE (- (x''))  WHEN ((0.7964245746417788) NOT BETWEEN (NULL) AND ('0.7964245746417788')) THEN (('킙cg*b') NOT BETWEEN ('') AND (701497679)) WHEN (0.06419620512900825 IN ()) THEN ((x'')||(0.3046064188350506)) WHEN CAST('' AS TEXT) THEN ((x'')IS NOT('-1250235877')) END); -- 0ms;
SELECT DISTINCT ((((t0.c94)AND(t0.c0)))<<((NOT (t0.c94)))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c94)*(t0.c48)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0)<(0.924240884010394)), GROUP_CONCAT(t0.c94) OVER (), ((t0.c0)<(t0.c94)) COLLATE NOCASE FROM t0 WHERE (((((x'd40a')<<('-883893081'))) NOT BETWEEN (('!G4䐐{6' IN ())) AND (LOWER(DISTINCT x'')))); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT t0.c0) COLLATE NOCASE, GROUP_CONCAT(SUBSTR(t0.c94, t0.c2) COLLATE BINARY) OVER (), ((((t0.c0)<(t0.c48))) NOT NULL) FROM t0; -- 0ms;
SELECT ALL TRIM(DISTINCT CAST(t0.c2 AS TEXT), ((((((((t0.c0)OR(t0.c2)))OR(t0.c48)))OR(t0.c48)))AND(t0.c0))) FROM t0 NOT INDEXED LIMIT 701497679 OFFSET -1714967704; -- 0ms;
SELECT DISTINCT ('' IN ()), SUM((((t0.c48))>=((t0.c48)))), ((CAST(t0.c0 AS TEXT))IS NOT(((t0.c94) BETWEEN (t0.c48) AND (t0.c94)))) FROM t0 WHERE (((LTRIM(0.5812716033172576)) IS TRUE)); -- 0ms;
SELECT DISTINCT (('-883893081') NOT BETWEEN (((t0.c48) ISNULL)) AND (CASE WHEN 0.3849270340856724 THEN t0.c0 END)) FROM t0 WHERE ((((- (NULL))) NOTNULL)) ORDER BY NULL, ((((((((UNICODE(t0.c48))AND((t0.c0 IN ()))))OR(rtreenode(t0.c2, t0.c94))))AND(CAST(0.7166639307578021 AS INTEGER))))OR(CAST(t0.c94 AS BLOB))) DESC  NULLS LAST; -- 0ms;
SELECT (COUNT(t0.c0) IN ()) FROM t0 GROUP BY CAST(((t0.c0)/(t0.c0)) AS BLOB); -- 0ms;
SELECT DISTINCT t0.c94 FROM t0; -- 0ms;
SELECT ALL '' FROM t0 WHERE (((CASE '>p'  WHEN x'' THEN NULL END) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<(((((t0.c94))<>((t0.c48)))))), (('O?wWy') BETWEEN (((((t0.c0)AND(t0.c94)))AND(t0.c48))) AND (((t0.c94) NOT BETWEEN (0Xfffffffffdde1d9c) AND (t0.c94)))), (((NOT (t0.c0)))<=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c94 THEN t0.c2 WHEN t0.c94 THEN t0.c94 ELSE t0.c0 END)), MIN((t0.c48 IN ())), (NULL IN ()) FROM t0 WHERE (TIME(((x'') NOTNULL), LIKELIHOOD(0.9259073499485188, 0.7644809567299529), 0.49741622768831084)); -- 0ms;
SELECT ALL t0.c94, (((NOT (t0.c94)))%((- (t0.c0)))), (((t0.c48) ISNULL) IN ()) FROM t0; -- 0ms;
SELECT t0.c0 FROM t0 WHERE ((((((((('1630325928')OR(x'893e')))OR('0.3938267617586243')))AND((0Xffffffff9fd17a5f IN (x'9d710273')))))AND(0.9810925156385755 COLLATE RTRIM))) ORDER BY (x'7a3d' COLLATE BINARY IN ()); -- 0ms;
SELECT CASE t0.c0  WHEN (t0.c0 IN ()) THEN (NOT (t0.c48)) WHEN (- (t0.c94)) THEN (((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c94))) WHEN CAST(t0.c94 AS TEXT) THEN ((t0.c0)>=(t0.c2)) END FROM t0 WHERE ((((NOT (0X3991a96c)))||(CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT (('-531433443') NOTNULL) FROM t0 WHERE ((((0.7458615549670823)) BETWEEN (('' COLLATE NOCASE)) AND ((x'')))); -- 1ms;
SELECT DISTINCT (((t0.c2)) NOT BETWEEN ((CAST(t0.c94 AS TEXT))) AND ((CAST(t0.c2 AS INTEGER)))) FROM t0 WHERE (CAST(UNLIKELY(DISTINCT -1832961001) AS REAL)); -- 0ms;
SELECT DISTINCT (~ ((~ (t0.c48)))) FROM t0; -- 0ms;
SELECT DISTINCT 0.2395209650053013, CAST(((t0.c0)>(t0.c48)) AS NUMERIC), DENSE_RANK() OVER (), (('-1302071518')&(t0.c0 COLLATE RTRIM)), NULLIF(t0.c2 COLLATE RTRIM, (((t0.c48)) NOT BETWEEN ((t0.c94)) AND ((t0.c2)))) FROM t0; -- 0ms;
SELECT ALL CAST(t0.c48 AS BLOB) COLLATE BINARY FROM t0 WHERE ((- (((((((((0.2536930311410188)OR(0.08558450507675441)))AND(0.3667913381736908)))OR(927847710)))OR(0.3477394193174643))))); -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c48 THEN 0.9314465352646558 END) BETWEEN (((t0.c48) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (AVG(t0.c2))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c2 IN ()))<<(((t0.c48)>(t0.c94)))) FROM t0; -- 0ms;
SELECT ALL ((SUM(t0.c48))*(((((t0.c94)OR(t0.c94)))AND(t0.c2)))) FROM t0 LIMIT -1215234520 OFFSET 472944975; -- 0ms;
SELECT ALL (- (((((t0.c94)AND(x'a61c')))OR(258626867)))), NULL, ((t0.c48) BETWEEN (((t0.c2)>>(t0.c2))) AND (((((t0.c0)AND(x'')))AND(t0.c94)))) FROM t0; -- 0ms;
SELECT DISTINCT ((0.42413973425136386) BETWEEN (CAST(t0.c48 AS BLOB)) AND ((((t0.c0, t0.c94, t0.c0))<=((t0.c2, t0.c48, t0.c2))))) FROM t0 WHERE (((((((((((124778128)>>(NULL)))AND(UPPER(x''))))OR((((('df')AND(0X745f9171)))AND(-1669869415)))))OR(CASE WHEN 0xffffffffe32b31c3 THEN '.R' ELSE x'' END)))OR(((0.736379500133494)<=(1.436723218E9))))); -- 0ms;
SELECT DISTINCT CAST(((((t0.c2)AND(t0.c48)))AND(t0.c94)) AS BLOB) FROM t0 WHERE (CASE ((x'6238')+(x''))  WHEN (('1483318801') IS FALSE) THEN (('-1466659393')>=('KOes')) END); -- 0ms;
SELECT t0.c94 FROM t0; -- 0ms;
SELECT DISTINCT (('621323933') ISNULL) FROM t0; -- 0ms;
SELECT AVG(NULL) FROM t0 WHERE (NULL) ORDER BY ((((((t0.c48)AND(t0.c94)))AND(t0.c0))) BETWEEN (CASE '1976716518'  WHEN t0.c2 THEN t0.c48 ELSE t0.c94 END) AND (((t0.c48) IS TRUE))) ASC; -- 0ms;
SELECT ((((t0.c94) NOT BETWEEN (t0.c2) AND (t0.c2)))IS((('197531083')+(t0.c94)))) FROM t0 WHERE (((- ('-832422052')) IN ())) LIMIT 1931392001; -- 0ms;
SELECT ALL ((CAST(t0.c0 AS TEXT)) BETWEEN ((t0.c94 IN ())) AND (((((t0.c48)OR(t0.c94)))AND(t0.c2)))), (((NULL, t0.c48, t0.c48)) NOT BETWEEN (((((t0.c94, t0.c94, t0.c0)) NOT BETWEEN ((t0.c48, t0.c0, 0.6109951050260677)) AND ((t0.c2, t0.c2, t0.c0))), CAST(t0.c0 AS TEXT), (t0.c2 IN ()))) AND ((((t0.c0) NOT BETWEEN (t0.c94) AND (t0.c48)), ((NULL)>>(t0.c48)), t0.c0))), 'lqni0ಙ]_' FROM t0 WHERE ((((((('x	6	K?')==('-599737029')))AND(CAST(0.0010994882398538408 AS TEXT))))AND(('-1028444911' IN ())))); -- 0ms;
SELECT ALL ((((t0.c94)*(t0.c48)))OR(CASE t0.c2  WHEN t0.c0 THEN t0.c0 END)), ((t0.c0)-(LIKELIHOOD(DISTINCT t0.c0, 0.1478857797337917))), (((t0.c94)) NOT BETWEEN ((t0.c2)) AND ((t0.c48))) COLLATE RTRIM, (((+ (t0.c0)))OR(((t0.c94) BETWEEN (t0.c2) AND (t0.c94)))), ((CASE WHEN 0.6686084327180885 THEN t0.c94 END)+(CASE t0.c2  WHEN t0.c48 THEN t0.c94 END)) FROM t0; -- 0ms;
SELECT (((+ (t0.c94)))<<(CASE ''  WHEN NULL THEN t0.c2 ELSE t0.c0 END)) FROM t0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((t0.c48) NOT BETWEEN (t0.c2) AND (t0.c48))) NOT BETWEEN (t0.c2) AND (NULLIF(t0.c94, NULL))), (((t0.c48)) NOT BETWEEN ((t0.c2)) AND ((((t0.c0) BETWEEN (t0.c48) AND (t0.c48)))))) OVER () FROM t0 WHERE (NULL); -- 0ms;
SELECT ALL (((((t0.c0))>=((t0.c94)))) ISNULL) FROM t0; -- 0ms;
SELECT ALL LIKELY(t0.c94) COLLATE RTRIM, COUNT(((t0.c2)IS(t0.c0))) OVER (), NULL, CUME_DIST() OVER (), ((((((t0.c48)OR(t0.c94)))OR(t0.c2)))OR(t0.c0 COLLATE BINARY)) FROM t0 WHERE (NULL COLLATE BINARY); -- 0ms;
SELECT t0.c94 FROM t0 WHERE (x''); -- 0ms;
SELECT (((t0.c2)) NOT BETWEEN ((((t0.c0)&(x'e7e6')))) AND ((NULL))) FROM t0 INDEXED BY i22 WHERE (CASE WHEN (- (0.30153031721887114)) THEN LIKELIHOOD(x'', 0.6322982897090235) END);SELECT DISTINCT ((t0.c94 COLLATE NOCASE)AND(((t0.c2)>>(t0.c0)))), highlight(((t0.c0)=(t0.c48)), '', (((t0.c94))!=((t0.c2))), TOTAL(t0.c94)), t0.c48, MAX(((t0.c0)|(t0.c94))), t0.c2 FROM t0;SELECT DISTINCT LIKELIHOOD((((t0.c2, t0.c48, t0.c48)) BETWEEN ((t0.c94, t0.c94, t0.c2)) AND ((1.304163789E9, t0.c94, t0.c2))), 0.5310387999626455) FROM t0; -- 0ms;
SELECT ALL 663560275 COLLATE RTRIM FROM t0 WHERE ((((102672956) NOT NULL) IN ((~ (NULL))))); -- 0ms;
SELECT ALL LAST_VALUE(((((t0.c0) NOT BETWEEN (t0.c0) AND (x'')))LIKE(((t0.c0) NOT BETWEEN (t0.c94) AND (t0.c2))))) OVER (), CASE ((t0.c48) NOT BETWEEN (t0.c0) AND (t0.c48))  WHEN (((t0.c0, t0.c94, t0.c94)) NOT BETWEEN ((t0.c48, t0.c0, t0.c2)) AND ((t0.c0, t0.c0, t0.c2))) THEN (+ (t0.c0)) ELSE ((((t0.c0)OR(t0.c2)))AND(t0.c48)) END, TYPEOF(((t0.c0) NOT BETWEEN (t0.c94) AND (t0.c94))) FROM t0 WHERE ((((((0X579592ea, 'q{48U', '1952420209')) BETWEEN ((NULL, x'', -1091197815)) AND (('2032793329', 0Xffffffff976fe945, x'')))) NOT NULL)); -- 0ms;
SELECT ALL ((t0.c0) ISNULL) COLLATE RTRIM, ((CASE WHEN t0.c2 THEN t0.c2 END)>=(CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c94 END)), ((((t0.c94) BETWEEN (t0.c48) AND (t0.c2)))AND(t0.c2)) FROM t0; -- 0ms;
SELECT ((((t0.c94) IS FALSE))OR((('-1714967704') NOT BETWEEN (t0.c48) AND (t0.c94)))), CASE WHEN t0.c0 COLLATE NOCASE THEN json_array_length(t0.c48) END, 0X3e1e0027 FROM t0 WHERE ((((((x'7ea8cd1b')) NOT BETWEEN (('df')) AND ((x''))))>(((((NULL)OR(NULL)))OR(''))))); -- 0ms;
SELECT TYPEOF(t0.c94) COLLATE NOCASE, json((((t0.c94, t0.c94, NULL))!=((t0.c48, t0.c2, t0.c48)))), NTILE(((CASE WHEN t0.c2 THEN 'M#ﺙqRpDu' WHEN t0.c2 THEN t0.c2 WHEN t0.c94 THEN t0.c94 WHEN t0.c0 THEN t0.c2 WHEN t0.c94 THEN t0.c2 ELSE t0.c48 END)IS NOT((- (t0.c2))))) OVER () FROM t0 GROUP BY t0.c48 HAVING (((t0.c2, t0.c94, t0.c0)) BETWEEN (((t0.c0 IN (t0.c2, t0.c94, '')), ((((t0.c2)AND(t0.c48)))OR(t0.c94)), ((t0.c0) ISNULL))) AND ((((t0.c2)>(t0.c0)), ((t0.c48)>(t0.c48)), (t0.c48 IN ())))); -- 0ms;
SELECT DISTINCT LAST_VALUE((((t0.c48, t0.c94, t0.c2)) BETWEEN ((((t0.c48) NOT BETWEEN (-1.302071518E9) AND (t0.c2)), CASE t0.c2  WHEN t0.c2 THEN t0.c94 WHEN t0.c48 THEN t0.c0 WHEN t0.c94 THEN t0.c48 WHEN t0.c94 THEN t0.c2 WHEN t0.c94 THEN t0.c48 ELSE t0.c94 END, ((t0.c94) NOT BETWEEN ('裯') AND (t0.c0)))) AND ((((((((((t0.c94)OR(t0.c0)))OR(NULL)))OR(t0.c48)))OR(t0.c0)), CASE WHEN t0.c48 THEN NULL WHEN t0.c94 THEN t0.c0 WHEN t0.c48 THEN t0.c48 END, ((t0.c94)<=(t0.c94)))))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT t0.c94 FROM t0 WHERE ((((0.5859130011140862)) BETWEEN ((CASE x''  WHEN '0.8229930596691855' THEN '' WHEN x'37de' THEN x'' WHEN NULL THEN -1.250235877E9 END)) AND ((((0.8229930596691855)<>(x'')))))); -- 1ms;
SELECT DISTINCT CASE ((((t0.c48)AND(t0.c0)))AND(t0.c0))  WHEN (- (t0.c48)) THEN t0.c0 COLLATE BINARY WHEN t0.c48 COLLATE BINARY THEN CASE WHEN 1.7976931348623157E308 THEN t0.c48 ELSE 0.1941026367648533 END WHEN 0.9977722870642027 COLLATE NOCASE THEN TOTAL(t0.c0) END FROM t0 WHERE ((((((x'')) BETWEEN ((x'89939800')) AND (('^jXG')))) IS FALSE)); -- 0ms;
SELECT t0.c2 FROM t0 WHERE ((- (CASE 81375229  WHEN 'uF' THEN 0.9585197241206709 WHEN x'' THEN NULL WHEN x'' THEN NULL END))) UNION SELECT ALL (((((+ (t0.c2)))AND((((x'', t0.c48, t0.c48))<=((t0.c94, t0.c0, '270659496'))))))AND((((t0.c0, '-526411223', t0.c94))>((t0.c94, t0.c2, t0.c94))))) FROM t0 WHERE (((((0.2536930311410188)<(x'ed3e')))>((((('')AND(0x612e23a8)))AND('197531083'))))) GROUP BY ((t0.c0)|((((1907778678, t0.c0, t0.c2)) BETWEEN ((t0.c48, t0.c48, t0.c94)) AND ((t0.c2, '-145584333', x''))))) ORDER BY UNICODE(UPPER(t0.c48)), HEX(((t0.c0)%(t0.c2))), t0.c48  NULLS FIRST;SELECT ALL TOTAL(((t0.c48) IS FALSE)) OVER () FROM t0; -- 0ms;
SELECT ((CAST(t0.c0 AS NUMERIC)) BETWEEN ((t0.c48 IN (t0.c0))) AND (((t0.c48)&(t0.c48)))) FROM t0 ORDER BY t0.c48 DESC; -- 0ms;
SELECT ALL '1326130833' FROM t0 WHERE ((NOT (((0x5c625d36)<>(NULL))))); -- 0ms;
SELECT DISTINCT (((t0.c94 IN ())) NOT NULL) FROM t0 WHERE (((~ (NULL)) IN (NULL COLLATE BINARY, ((0.5892630330390285)IS NOT('\nRT'))))); -- 0ms;
SELECT ALL ((t0.c94) NOT BETWEEN (TRIM(DISTINCT '쵔R4t춨T', 0.32288041147817304)) AND ((((t0.c2))<((t0.c48))))) FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c48 ELSE '' END) OVER () FROM t0 WHERE (CASE WHEN (((NULL)) NOT BETWEEN (('-310778191')) AND ((-1.030143575E9))) THEN (~ (NULL)) WHEN ((x'') NOT BETWEEN ('-1215234520') AND ('픞')) THEN LIKELY(NULL) WHEN (NOT (0.38455685169631315)) THEN TOTAL_CHANGES() ELSE ('-845327341' IN ()) END); -- 0ms;
SELECT NULL, t0.c94, ((((((((((t0.c48)AND(t0.c48)))OR(t0.c48)))AND(0.560270023689938)))AND(t0.c2))) BETWEEN (json_object(t0.c0, t0.c0)) AND (x'')) FROM t0 UNION SELECT ALL ((((((t0.c2)AND(t0.c94)))AND(t0.c0))) NOT BETWEEN ((t0.c2 IN ())) AND ((((t0.c0))==((t0.c2))))), (((t0.c2)) BETWEEN ((COUNT(*))) AND (((t0.c48 IN ())))), ((((NULL) IS FALSE))<(((t0.c2)&(NULL)))) FROM t0 WHERE (554651884);SELECT ALL PERCENT_RANK() OVER (), ((CAST(t0.c48 AS TEXT))IS((NOT (t0.c94)))), AVG(CASE WHEN t0.c94 THEN t0.c48 WHEN '' THEN t0.c48 WHEN t0.c48 THEN t0.c48 END) OVER () FROM t0 WHERE ((((((0.17625128682906477))<=((NULL)))) ISNULL)); -- 2ms;
SELECT t0.c0, ((~ (t0.c48)) IN (t0.c94 COLLATE NOCASE)), CAST((NOT (0X2fe88bc)) AS REAL) FROM t0; -- 0ms;
SELECT (((((~ (t0.c94)))AND(((t0.c48)>>(t0.c48)))))AND(t0.c94)) FROM t0; -- 0ms;
SELECT DISTINCT ((COUNT(*)) IS TRUE), (((NULL, t0.c94, t0.c48)) NOT BETWEEN ((((t0.c0)GLOB(t0.c48)), ((((t0.c2)AND(t0.c0)))OR(t0.c2)), MIN(t0.c48))) AND ((CAST(t0.c94 AS NUMERIC), ((t0.c2)>=(t0.c94)), TOTAL(t0.c0)))), CAST((0.47392765498104084 IN (t0.c2, t0.c0)) AS TEXT), t0.c94, ((ROUND(t0.c48, t0.c2))<<('0.7159034721874133')) FROM t0 LIMIT 291058430; -- 0ms;
SELECT ((((t0.c48) NOTNULL)) BETWEEN ((~ (t0.c0))) AND (((t0.c48) NOT BETWEEN (t0.c2) AND (NULL)))) FROM t0 WHERE ((((('-1096428400')LIKE('-1830808705')))IS NOT(''))) LIMIT 9223372036854775807; -- 0ms;
SELECT DISTINCT MAX(((t0.c48)+(t0.c0))), CASE WHEN ((NULL)>=(t0.c2)) THEN (t0.c94 IN (t0.c0, t0.c48)) WHEN MIN(t0.c94) THEN CASE t0.c48  WHEN t0.c94 THEN t0.c94 END WHEN (((t0.c48, t0.c48, t0.c0))>((t0.c94, t0.c2, t0.c48))) THEN ((t0.c94)<(t0.c94)) WHEN (((t0.c48)) BETWEEN ((t0.c2)) AND ((t0.c48))) THEN CASE WHEN t0.c2 THEN t0.c94 ELSE t0.c2 END WHEN (t0.c94 IN (t0.c2, t0.c94)) THEN ((t0.c94)IS NOT(t0.c2)) END, (- (json_type(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c2) NOT BETWEEN (t0.c48) AND (t0.c94)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c94))) WHEN t0.c0 THEN t0.c2 WHEN 0.025793261182061822 COLLATE RTRIM THEN t0.c2 COLLATE RTRIM END FROM t0 WHERE (CASE INSTR('Ft', -1.65887241E8)  WHEN ((NULL) NOT BETWEEN ('裯') AND (x'')) THEN CAST('' AS TEXT) ELSE ((NULL) NOT NULL) END); -- 0ms;
SELECT DISTINCT COUNT(CAST(t0.c0 AS INTEGER) COLLATE RTRIM) FROM t0 WHERE (CAST((((x'1514'))<((0.47412547819980166))) AS REAL)); -- 0ms;
SELECT DISTINCT (((t0.c94)) BETWEEN ((t0.c48 COLLATE RTRIM)) AND ((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c94 END))), AVG(((((((((t0.c94)OR(t0.c0)))OR(t0.c0)))OR(t0.c94)))OR(t0.c94))), CASE WHEN t0.c48 THEN NULL END, (((GROUP_CONCAT(t0.c0), CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c2 THEN t0.c48 ELSE t0.c48 END, ((((((((4.72944975E8)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))>=((((((t0.c0)OR(t0.c2)))AND(t0.c48)), COUNT(*), ((t0.c2) BETWEEN (t0.c2) AND (4.6632602E7))))), (((t0.c94 COLLATE BINARY))>(((~ (NULL))))) FROM t0; -- 0ms;
SELECT ALL ((((CASE NULL  WHEN t0.c94 THEN t0.c94 WHEN -1230128444 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c94 END)AND(CASE t0.c48  WHEN 1.304163789E9 THEN 0.5122925474522154 ELSE t0.c94 END)))OR((t0.c2 IN ()))) FROM t0 WHERE ('/Jfff>'); -- 0ms;
SELECT DISTINCT ((((((t0.c48) IS FALSE))OR('-1595606185')))AND(t0.c48)) FROM t0 WHERE ('v华'); -- 0ms;
SELECT DISTINCT ((t0.c94)&(t0.c48)), GROUP_CONCAT(((t0.c94) NOT BETWEEN (t0.c94) AND (t0.c94))), LTRIM(MIN(t0.c48), t0.c94) FROM t0; -- 0ms;
SELECT DISTINCT CASE COALESCE(t0.c94, t0.c48)  WHEN ((t0.c2) BETWEEN (t0.c0) AND (1071320217)) THEN t0.c94 COLLATE NOCASE WHEN ((t0.c2)<=(t0.c2)) THEN ((t0.c48)*(t0.c2)) WHEN ((t0.c0) BETWEEN (t0.c48) AND (t0.c94)) THEN (t0.c2 IN ()) ELSE ((t0.c48) NOTNULL) END FROM t0 WHERE (CAST(json_patch(x'', NULL) AS NUMERIC)) LIMIT -482175039;SELECT ALL json_insert(((t0.c0)<(t0.c94)), CASE WHEN t0.c0 THEN t0.c48 ELSE t0.c94 END, t0.c2), SUM(CAST(0.07089069330381426 AS REAL)), ((((t0.c94)|(t0.c2)))/(CASE t0.c94  WHEN t0.c48 THEN t0.c0 ELSE t0.c94 END)) FROM t0 WHERE ((~ ((NOT ('B4'))))); -- 0ms;
SELECT (- (((((((((t0.c94)OR(t0.c94)))AND(t0.c2)))AND(t0.c48)))AND(t0.c94)))), ((t0.c2 COLLATE NOCASE)*(t0.c94)), (((t0.c0, t0.c94, t0.c94, t0.c2, t0.c2))>=((t0.c2, t0.c94, t0.c2, t0.c48, t0.c94))) COLLATE BINARY, (((~ (t0.c94))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c94) AND (t0.c2))) AND (((('952837', t0.c2, '0.2395209650053013')) BETWEEN ((x'', t0.c48, t0.c48)) AND ((t0.c94, t0.c2, t0.c94))))), ((((CASE WHEN t0.c0 THEN t0.c94 WHEN t0.c94 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c94 END)OR((((t0.c2))==((t0.c94))))))OR(CAST(t0.c2 AS NUMERIC))) FROM t0 ORDER BY ((UNLIKELY('239996746')) NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((~ (t0.c2)))) ASC, ((t0.c94)%(t0.c0)) COLLATE RTRIM  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((t0.c2 IN (t0.c94)) IN ()), 0.8933321006795885, (~ ('0.0')) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c94 IN ()))AND(((t0.c2) IS TRUE))))AND(((((t0.c94)OR(t0.c2)))AND(t0.c0)))), ((((t0.c94)) NOT BETWEEN ((t0.c94)) AND ((4.72944975E8))) IN ()), TOTAL(CASE WHEN t0.c0 THEN t0.c0 END), (((t0.c94 IN ()))&(CAST(0xfffffffff304b7ce AS NUMERIC))), (- (((t0.c2) NOTNULL))) FROM t0 NOT INDEXED; -- 0ms;
SELECT (((t0.c48, t0.c0, 'L')) BETWEEN (((((t0.c94))<((t0.c94))), ((t0.c94) NOT NULL), (((((((((((('煎UN?+xGg[')OR(t0.c48)))OR(t0.c0)))AND(t0.c2)))AND(t0.c48)))OR(t0.c94)))OR(t0.c2)))) AND ((((t0.c0)OR(t0.c48)), ((t0.c2) IS TRUE), t0.c94 COLLATE RTRIM))) FROM t0 WHERE (CAST((('56550906')<<(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 WHERE ((((((NULL)) BETWEEN ((x'493e')) AND ((x''))))-((('2016526009')|(x''))))); -- 0ms;
SELECT DISTINCT (t0.c0 IN ()) COLLATE NOCASE FROM t0 WHERE (((CAST(x'9be4' AS TEXT)) IS TRUE)); -- 0ms;
SELECT ALL ((((((((MIN(t0.c48))AND(0.6112885513641367)))AND((- (t0.c94)))))OR((t0.c48 IN ()))))OR((((t0.c48)) NOT BETWEEN ((t0.c0)) AND ((t0.c94))))) FROM t0 WHERE (((((('-1822058762')OR('520262501')))AND(0.8581876449662446)) IN ((0.6278308076620847 IN ()), ((((0.30107661893256743)OR('-1775491861')))AND(NULL))))); -- 0ms;
SELECT ALL ((t0.c48) BETWEEN (((((t0.c2)OR(t0.c48)))OR(t0.c0))) AND (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))) FROM t0 WHERE ((~ (CASE WHEN '' THEN '653419043' WHEN NULL THEN -2054562369 WHEN 0.32248400048968273 THEN NULL END))); -- 0ms;
SELECT ALL (((t0.c0)OR(NULL)) IN ()) FROM t0; -- 0ms;
SELECT ALL ((CAST(t0.c94 AS REAL))>(((t0.c94)>>(t0.c48)))) FROM t0 WHERE ((((((0.5818073355699924)) BETWEEN ((0.15269933659808765)) AND ((x'')))) NOT BETWEEN (((NULL)==(x''))) AND (0Xfffffffff61cc2f7 COLLATE NOCASE))); -- 1ms;
SELECT ALL ((CAST(t0.c48 AS BLOB)) ISNULL) FROM t0; -- 0ms;
SELECT ((((((((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)OR(((((((((t0.c2)OR(t0.c0)))AND(t0.c2)))OR(t0.c48)))AND(t0.c0)))))OR((((t0.c0))<>((t0.c48))))))AND(((t0.c48)|(2.39996746E8)))))AND(((((t0.c0)AND(t0.c94)))AND(t0.c94)))) FROM t0 WHERE (CAST((0.26681324936281614 IN (x'0cc3')) AS BLOB)) LIMIT -823700472; -- 0ms;
SELECT ALL (- (CAST(t0.c48 AS INTEGER))), (t0.c94 COLLATE NOCASE IN ()), COUNT(((t0.c2)<<(t0.c0))) OVER () FROM t0 GROUP BY (t0.c0 COLLATE BINARY IN ()), IFNULL(CASE WHEN t0.c94 THEN NULL ELSE t0.c48 END, CAST(t0.c48 AS TEXT)), ((CAST(t0.c48 AS INTEGER))LIKE((((('1219424678')AND(t0.c94)))AND(t0.c48)))) HAVING (((((t0.c94))!=((t0.c48)))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (UPPER(t0.c2))); -- 0ms;
SELECT DISTINCT SUM(((((t0.c94)AND(t0.c0)))OR(NULL))) OVER () FROM t0 WHERE (IFNULL(0.9438493827019346, ((x'')!=(x'')))); -- 0ms;
SELECT ALL CASE WHEN ((t0.c48)||(NULL)) THEN (((t0.c2)) NOT BETWEEN ((0.17799505075928002)) AND ((t0.c2))) WHEN t0.c0 THEN AVG(t0.c94) WHEN ((((t0.c94)OR(t0.c0)))OR(t0.c48)) THEN '-1630614044' END FROM t0 WHERE ((CAST('720427637' AS NUMERIC) IN ())) ORDER BY ((t0.c94)<<(CAST(t0.c0 AS INTEGER)))  NULLS FIRST; -- 0ms;
SELECT ALL CAST(((t0.c2) IS TRUE) AS TEXT) FROM t0 WHERE (CASE ((x'')-(NULL))  WHEN CAST(0.039823877451273804 AS TEXT) THEN ((x'')!=(x'81e773d0')) END); -- 0ms;
SELECT ((((t0.c0) NOTNULL)) NOT BETWEEN ((0.963188424878019 IN ())) AND (IFNULL(t0.c2, t0.c0))) FROM t0 WHERE (((((x'')<>(NULL))) BETWEEN (NULLIF(DISTINCT x'', 0x0)) AND ((((0.42413973425136386))>(('-749910072')))))); -- 0ms;
SELECT DISTINCT ((((((((CAST(t0.c94 AS REAL))OR(AVG(t0.c2))))AND(NULL)))OR(RTRIM(t0.c94))))AND((((t0.c2)) NOT BETWEEN ((0.7915653606639257)) AND ((t0.c0))))) FROM t0 WHERE ((NOT ('礢.Y넋KꠒꇜR')) COLLATE NOCASE) LIMIT -1597566800 OFFSET -749910072; -- 0ms;
SELECT DISTINCT AVG((((('0.924240884010394')AND(t0.c94)))OR(t0.c0))) OVER () FROM t0; -- 0ms;
SELECT ALL JULIANDAY((('y,')<<('??)')), t0.c48 COLLATE BINARY, HEX(t0.c0)) FROM t0 WHERE (((((0X5c877b56) NOT BETWEEN ('26621948') AND ('')))>=(((x'') ISNULL)))); -- 0ms;
SELECT CAST(t0.c0 COLLATE BINARY AS NUMERIC) FROM t0 WHERE (((((NULL) IS FALSE))IS(LOWER(NULL)))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (NULLIF((((x''))>((NULL))), x'' COLLATE BINARY)); -- 1ms;
SELECT ALL (((~ (t0.c0)))<=(t0.c48 COLLATE BINARY)) FROM t0 WHERE (CASE ((NULL) NOT BETWEEN (x'5fa2') AND ('4Sk#[b'))  WHEN (('0.5381190474507093')<>(x'')) THEN DATETIME(x'', '1436723218', NULL) END); -- 0ms;
SELECT DISTINCT NULL, ((((t0.c0) NOTNULL)) NOT BETWEEN ((+ (t0.c2))) AND (t0.c94 COLLATE RTRIM)), (+ (LOWER('-1976243786'))) FROM t0; -- 0ms;
SELECT ((((t0.c48)*(t0.c2))) ISNULL) FROM t0 WHERE ((- (((x'6bd8') BETWEEN (NULL) AND (x''))))) GROUP BY ((((((((((t0.c0) NOT BETWEEN (t0.c94) AND (t0.c2)))AND(t0.c48 COLLATE NOCASE)))AND(((t0.c48)GLOB(t0.c94)))))AND(x'')))OR(46632602)) HAVING t0.c0; -- 0ms;
SELECT ALL t0.c94 COLLATE BINARY, LAST_VALUE((((((t0.c2, '', t0.c94))<((t0.c48, t0.c94, t0.c2))))AND(CAST(t0.c94 AS NUMERIC)))) OVER (), (0X2d7062da COLLATE NOCASE IN ()) FROM t0 WHERE (CAST(CASE -53842427  WHEN x'' THEN x'' END AS INTEGER)) ORDER BY ((x'')=((('9223372036854775807') NOT BETWEEN (t0.c2) AND (t0.c48)))), ((HEX(DISTINCT t0.c2))GLOB(((t0.c48)IS(t0.c2)))) ASC  NULLS LAST; -- 0ms;
SELECT ((t0.c48 COLLATE NOCASE) NOT BETWEEN (t0.c94 COLLATE RTRIM) AND (((t0.c94)<<(t0.c0)))) FROM t0 WHERE ((((x'fdef' IN ())) BETWEEN (0x42c52797) AND (0.9810925156385755 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((t0.c94 IN ()))%(UPPER(t0.c94))) FROM t0 WHERE (CASE (+ (NULL))  WHEN CAST(0.12615756638758246 AS BLOB) THEN (('-721419730') ISNULL) WHEN ((NULL) NOT NULL) THEN CASE WHEN 'L' THEN -1.7976931348623157E308 WHEN '2060490155' THEN '/JFFF>' WHEN NULL THEN 0.6650786158906734 END WHEN (- ('YvcHX')) THEN (x'' IN ()) ELSE (('-899241987')>>(0X3991a96c)) END) ORDER BY CAST(720427637 AS TEXT)  NULLS LAST; -- 2ms;
SELECT ALL CAST(((t0.c2) IS TRUE) AS TEXT), COALESCE((NOT (t0.c0)), ((x'')=(t0.c48)), ((((((((t0.c48)OR(t0.c2)))AND('0.06419620512900825')))AND(t0.c0)))OR(0.6593105072164074)), CASE t0.c2  WHEN t0.c48 THEN t0.c48 WHEN t0.c94 THEN t0.c94 WHEN 0.7858810916719773 THEN '' END), ((((t0.c2) IS FALSE))<((~ (t0.c2)))), ((((t0.c94) NOTNULL)) BETWEEN (NULL) AND (t0.c2)), CASE CAST(t0.c94 AS INTEGER)  WHEN (t0.c0 IN ()) THEN SUM(t0.c94) ELSE t0.c0 COLLATE BINARY END FROM t0 WHERE (((((CAST(-1984766250 AS INTEGER))OR(((((1.793858796E9)AND(NULL)))OR('')))))OR((0.23320174078621547 IN ())))); -- 1ms;
SELECT ALL CASE t0.c94 COLLATE RTRIM  WHEN t0.c94 COLLATE NOCASE THEN (- (t0.c94)) ELSE (-2.01585114E8 IN ()) END FROM t0 WHERE (DATE('RoEP-䙥', (NULL IN ()), ((NULL)&(NULL)))) ORDER BY 0.6686084327180885  NULLS FIRST; -- 0ms;
SELECT ALL ((NOT (t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT NTH_VALUE(((((t0.c2)||(t0.c0)))GLOB('w')), ((((t0.c0) ISNULL)) NOTNULL)) OVER () FROM t0 WHERE (((ABS(DISTINCT NULL))/(((((x'')OR(x'')))OR(x''))))); -- 0ms;
SELECT ALL (((+ (t0.c0))) NOT BETWEEN (((((t0.c0)OR(t0.c48)))OR(-1217073815))) AND ((((t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c48, t0.c48, t0.c0)) AND ((t0.c0, t0.c94, t0.c48))))) FROM t0 WHERE (CAST(CAST(-1.028444911E9 AS INTEGER) AS BLOB)); -- 0ms;
SELECT (- (((t0.c2)>>(t0.c94)))) FROM t0 WHERE ((0.7639938847078839 COLLATE BINARY IN (NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL ((CHAR(t0.c48)) NOT BETWEEN ('-599737029') AND ((- (t0.c0)))) FROM t0; -- 0ms;
SELECT CAST(t0.c48 COLLATE BINARY AS REAL) FROM t0 NOT INDEXED; -- 0ms;
SELECT ABS(DISTINCT (+ (t0.c0))) FROM t0 WHERE ((('nY' COLLATE BINARY)*(((0.3991207494272808)IS(326446664))))); -- 0ms;
SELECT DISTINCT COUNT((~ (t0.c2))), t0.c48 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE, '-111917467' FROM t0; -- 0ms;
SELECT ALL ((((0.18790951645358478)AND(((t0.c48)<<(t0.c94)))))AND(TOTAL(t0.c2))) FROM t0; -- 0ms;
SELECT ALL TOTAL(((t0.c94)IS NOT(t0.c48))) OVER () FROM t0; -- 0ms;
SELECT ALL (((t0.c94)) BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (((('666448477')||(NULL))))) FROM t0 WHERE (TYPEOF(DISTINCT x'') COLLATE RTRIM); -- 0ms;
SELECT ALL GROUP_CONCAT((t0.c48 IN ())) OVER () FROM t0 WHERE ((')' COLLATE NOCASE IN ())) ORDER BY (NOT ((+ (t0.c94))))  NULLS LAST; -- 0ms;
SELECT DISTINCT MAX(((t0.c2) ISNULL) COLLATE RTRIM) FROM t0 ORDER BY ((((t0.c2)<(t0.c48))) IS FALSE) ASC; -- 0ms;
SELECT DISTINCT ((t0.c2 COLLATE RTRIM) NOT NULL) FROM t0; -- 0ms;
SELECT ((((((((((((t0.c94)OR(t0.c2)))AND(t0.c94)))AND(t0.c94)))AND(t0.c2)))AND(t0.c94 COLLATE NOCASE)))OR(t0.c94)) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS NUMERIC) FROM t0 GROUP BY 0.2536930311410188, ABS(DISTINCT ((t0.c94)<(t0.c2))), NULL HAVING ((t0.c0) NOT BETWEEN ('') AND (COUNT(*))); -- 0ms;
SELECT ALL GROUP_CONCAT((NOT (t0.c94))) COLLATE BINARY FROM t0 INDEXED BY i61 WHERE (((((-625779293)+('A<O髞췤7Vg!'))) NOTNULL));SELECT CAST(t0.c0 AS TEXT), LEAD((((((t0.c48))<=((t0.c94)))) NOT NULL), CAST(NULL AS NUMERIC), t0.c48) OVER (), x'1533' FROM t0 WHERE (LIKELY(DISTINCT CASE WHEN x'' THEN '317932075' WHEN 0.15269933659808765 THEN x'3063' WHEN x'' THEN '+	' END)) GROUP BY ((((t0.c94) NOT BETWEEN (t0.c48) AND (t0.c2)))<=(NULL)); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((t0.c0)*(((x'') NOTNULL)))) OVER ( ORDER BY CAST((NOT (t0.c0)) AS NUMERIC)  NULLS FIRST) FROM t0; -- 0ms;
SELECT ALL COUNT(*) OVER ( ROWS CAST(t0.c0 COLLATE NOCASE AS BLOB) PRECEDING EXCLUDE NO OTHERS) FROM t0 WHERE ('1611658905');SELECT GROUP_CONCAT((t0.c94 IN ())) OVER () FROM t0 LIMIT 1494899578; -- 1ms;
SELECT ALL (t0.c0 COLLATE RTRIM IN ()) FROM t0 LIMIT 424773530; -- 0ms;
SELECT DISTINCT LENGTH((('427238374') IS TRUE)) FROM t0; -- 0ms;
SELECT DISTINCT rtreenode(AVG(t0.c94), ((t0.c0) NOT BETWEEN (t0.c48) AND (t0.c94))) FROM t0 GROUP BY (- (TRIM(DISTINCT t0.c94, t0.c0))) HAVING ((TOTAL(t0.c0))>>(SUM(t0.c94))) ORDER BY ((((((t0.c0)<=(t0.c48)))AND(CASE x'ca48'  WHEN t0.c48 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN '-' THEN t0.c2 ELSE t0.c2 END)))AND(t0.c48 COLLATE BINARY))  NULLS FIRST; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((t0.c94)GLOB('1089387851')) COLLATE BINARY, CASE ((((t0.c2)OR(t0.c0)))AND(x''))  WHEN COALESCE(DISTINCT t0.c94, t0.c94) THEN t0.c2 END FROM t0; -- 0ms;
SELECT DISTINCT (~ (CASE t0.c94  WHEN t0.c48 THEN t0.c2 END)) FROM t0 WHERE (((((0.07089069330381426 COLLATE NOCASE)AND((NOT (x'')))))AND(CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c48 THEN ('5AiT' IN ()) ELSE ((t0.c48)<>(t0.c94)) END FROM t0 WHERE (((0.3778084164361828 COLLATE RTRIM) NOT BETWEEN (((x'ba87')||(0xe4e0f4a))) AND (('%躁' IN ())))); -- 1ms;
SELECT ALL (((AVG(t0.c2), t0.c48 COLLATE RTRIM, ((((((((t0.c48)OR(t0.c0)))OR(t0.c0)))AND(t0.c2)))OR(t0.c0))))<=((CAST(t0.c94 AS REAL), 0.8049145645618524, (((t0.c0))==((t0.c94)))))), ((((t0.c48) NOTNULL)) BETWEEN (((t0.c94) NOTNULL)) AND (CAST(t0.c2 AS INTEGER))), ((CASE WHEN t0.c94 THEN t0.c94 WHEN t0.c2 THEN t0.c94 WHEN t0.c0 THEN t0.c0 END) IS FALSE), ((((-1.77229313E9)LIKE(892538968))) BETWEEN (t0.c94) AND (((t0.c0)GLOB(t0.c48)))), 0.5393381852310137 FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0, t0.c48, t0.c0)) BETWEEN ((0.5902109989100075, t0.c48, t0.c94)) AND ((t0.c94, t0.c48, t0.c0)))) NOT BETWEEN (0.4045946018768908) AND (((t0.c2)GLOB(t0.c2)))) FROM t0 WHERE ((((NOT (x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT t0.c0, t0.c94))<=(CASE t0.c48  WHEN t0.c2 THEN t0.c0 ELSE t0.c48 END)) FROM t0 WHERE ((('0I|v8pgN') BETWEEN (((NULL) BETWEEN (x'') AND ('1071320217'))) AND ((((x'')) BETWEEN ((0X1916edbd)) AND ((x'0277f756')))))); -- 0ms;
SELECT DISTINCT LOWER(CAST(t0.c48 AS BLOB)), ((((((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND((t0.c2 IN ()))))OR((- (']XꙦ')))))OR((t0.c2 IN ()))))OR(0.0698879612409613)), CAST(6.20743833E8 AS BLOB) COLLATE RTRIM COLLATE BINARY FROM t0 WHERE ((((((NULL))!=((0.9656756283860966))))LIKE(CASE NULL  WHEN 0.6108609381757742 THEN 0.24220498953984204 WHEN '1218170698' THEN x'5cda' WHEN 0Xffffffffa41ae812 THEN 0.6111042165473688 WHEN x'' THEN '-1981831802' WHEN 0.07401399041780699 THEN '927847710' END))); -- 0ms;
SELECT ((((((t0.c0)%(t0.c2)))OR((t0.c2 IN ()))))AND(GROUP_CONCAT(t0.c0))) FROM t0 WHERE (((((NULL) ISNULL)) BETWEEN (('16186057' IN ())) AND (0X66b14410 COLLATE NOCASE))) LIMIT 1661969605; -- 0ms;
SELECT DISTINCT (NOT ((~ (t0.c0)))) FROM t0 WHERE (((((((((((NULL)%(NULL)))AND(((NULL)IS(NULL)))))OR((('911119205')*(1.483318801E9)))))OR((1.467813951E9 IN (x'')))))OR(CASE NULL  WHEN '(\nj?6' THEN NULL ELSE '1793029724' END))) GROUP BY t0.c48, CASE WHEN '-1591093228' THEN t0.c0 WHEN MAX(t0.c2, t0.c2) THEN (((t0.c2, t0.c94, t0.c94, t0.c94, t0.c94))=((t0.c2, t0.c0, t0.c0, t0.c94, t0.c2))) WHEN LIKELIHOOD(DISTINCT t0.c94, 0.41647565336289016) THEN t0.c48 ELSE 1.199831377E9 END, TRIM(((t0.c2) NOT BETWEEN (t0.c48) AND (t0.c2))), ((((t0.c0)=(t0.c94)))AND(LIKELIHOOD(t0.c2, 0.8963754518236997))), t0.c2; -- 0ms;
SELECT DENSE_RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT TIME(((t0.c48)OR(t0.c94)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c94)), t0.c94 COLLATE RTRIM, COUNT(t0.c94), ((t0.c94)>=(t0.c48))) FROM t0; -- 0ms;
SELECT AVG(((t0.c94)>>(NULL))) FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT t0.c94, ('jlW1ﲂ' IN ()), ((((- (t0.c2)), ((t0.c94)>(t0.c0)), 'Og-J' COLLATE NOCASE))>=(((((t0.c0))<((t0.c94))), (t0.c2 IN ()), t0.c94 COLLATE BINARY))) FROM t0; -- 0ms;
SELECT DISTINCT (((~ (t0.c48)))|((((t0.c94))<>((t0.c94))))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c94)|(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT MIN(((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c2))) FROM t0 GROUP BY ((t0.c2)|((t0.c48 IN (t0.c48, t0.c2)))), (((NOT (t0.c0)))OR(((t0.c48) NOT BETWEEN (t0.c2) AND (t0.c0)))), t0.c2 HAVING UPPER(DISTINCT ((t0.c0) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST((NOT (t0.c0)) AS BLOB) FROM t0 WHERE ((((((((((((992921592)) NOT BETWEEN ((0x374dd51e)) AND (('1549950262'))))OR(NULL)))OR(TRIM(DISTINCT x''))))OR(((x'')!=(x'945df72b')))))AND((0.8229930596691855 IN (''))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0) NOTNULL) THEN CAST(-624779702 AS NUMERIC) END, ROW_NUMBER() OVER (), (- (((((x'4ab7')OR(t0.c94)))OR(t0.c0)))) FROM t0 WHERE (''); -- 0ms;
SELECT ALL GROUP_CONCAT((t0.c0 IN ())) OVER ( ORDER BY (NOT (t0.c2 COLLATE BINARY))  NULLS FIRST), ((((((((((((((((t0.c0)OR(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(t0.c0)))AND(CASE WHEN t0.c48 THEN t0.c48 END)))AND(CAST(t0.c2 AS BLOB))))AND((((('-1216324244')AND(t0.c0)))OR(t0.c2)))))OR(CASE WHEN t0.c94 THEN t0.c0 WHEN t0.c94 THEN t0.c0 WHEN t0.c94 THEN t0.c94 ELSE 'U뻅R' END)), t0.c2 FROM t0 WHERE (json_valid(((('(vCb', 1.97531083E8, NULL, 0X62cca78, '_l毡{磭]Vup'))<=((NULL, 0.3511001808252785, 576024910, '''gᄢP', -1.769889461E9))))); -- 0ms;
SELECT ALL COUNT((((t0.c48))<=((t0.c2)))) OVER () FROM t0 LIMIT -1592313203; -- 0ms;
SELECT NULL FROM t0 WHERE (((+ ('YfTS')) IN ())) LIMIT 1630325928 OFFSET -620110452; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t0 WHERE (CASE ((NULL) BETWEEN (-4.83708477E8) AND (x''))  WHEN ('4D봻{0D]7' IN (NULL, NULL)) THEN ((x'84e4')AND(0.07089069330381426)) WHEN ((((((((((((0x13f6c997)OR(NULL)))AND(NULL)))AND('1952420209')))OR('0.7940601513159451')))OR('-1030143575')))OR(0Xffffffffc394d5af)) THEN (((x'')) NOT BETWEEN ((NULL)) AND ((x''))) WHEN CAST('u]Xf' AS REAL) THEN ((-2095838022)-(-1772293130)) WHEN LIKELIHOOD(-379834319, 0.6653145161552498) THEN ((NULL)<=('955529936')) WHEN ((x'') IS FALSE) THEN ((NULL) NOT BETWEEN (NULL) AND ('')) END); -- 0ms;
SELECT DISTINCT (((((+ (t0.c48)))OR(t0.c2 COLLATE NOCASE)))AND(((t0.c48) IS FALSE))) FROM t0; -- 0ms;
SELECT ALL (((TYPEOF(DISTINCT t0.c2), x'', t0.c48))<((764645874, CAST(t0.c2 AS TEXT), CHAR(0.8843254384759789, t0.c2, t0.c48)))) FROM t0 LIMIT 1459457398; -- 0ms;
SELECT DISTINCT CASE AVG(t0.c0)  WHEN t0.c48 THEN ((t0.c94)>>(t0.c94)) WHEN t0.c94 COLLATE RTRIM THEN CAST(t0.c0 AS BLOB) WHEN (((t0.c48))<=((t0.c94))) THEN ((t0.c94) NOT BETWEEN (t0.c94) AND ('913651700')) WHEN CAST('dlZQ' AS REAL) THEN (((t0.c94))<>((t0.c2))) WHEN ((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c48)) THEN ((t0.c94) BETWEEN (t0.c2) AND (t0.c0)) END FROM t0; -- 0ms;
SELECT NTH_VALUE(CASE (((t0.c48, t0.c0, t0.c94, t0.c0, t0.c2)) NOT BETWEEN ((t0.c48, t0.c0, t0.c0, t0.c48, t0.c48)) AND ((t0.c2, t0.c48, t0.c48, t0.c2, t0.c48)))  WHEN ((t0.c2)==(t0.c0)) THEN t0.c2 END, (((t0.c2)) NOT BETWEEN ((((t0.c2) ISNULL))) AND ((t0.c0 COLLATE NOCASE)))) OVER ( PARTITION BY (((+ (t0.c0))) NOT BETWEEN (UPPER(t0.c0)) AND (CASE t0.c2  WHEN t0.c94 THEN t0.c48 END)), (NOT (CASE WHEN t0.c0 THEN t0.c2 ELSE '' END))), ((- (t0.c0)) IN ()), NULL FROM t0 WHERE (((((x'') ISNULL))*(x'' COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((t0.c94) BETWEEN (NULL) AND (t0.c0)))LIKE((t0.c2 IN ()))) FROM t0 WHERE (((((7.13741692E8) NOT BETWEEN ('0.671170635981524') AND (NULL))) BETWEEN (('628693501' IN ())) AND (((NULL) BETWEEN ('-1028444911') AND ('\r/7㘡b鲟'))))); -- 0ms;
SELECT DISTINCT CAST(((((((((((((t0.c2)OR(t0.c48)))AND(t0.c94)))AND(t0.c0)))OR(t0.c94)))AND(t0.c2)))AND(t0.c2)) AS TEXT) FROM t0 WHERE (((CAST(791871007 AS REAL))|(CASE WHEN x'' THEN NULL END))); -- 2ms;
SELECT ALL (+ (COUNT(t0.c0))) FROM t0 WHERE (json_remove(('-1275541359' IN (x'', x'')), (370808094 IN ()), ((0Xffffffffe3d9f922) NOT BETWEEN (950723650) AND ('-920797537')), ((NULL) IS FALSE), 1.326130833E9, LIKELIHOOD(DISTINCT '', 0.9951006036835801)));SELECT ALL LIKELIHOOD(CASE WHEN '124778128' THEN '5' END, 0.6197863755157682), t0.c0, CAST(t0.c2 AS REAL) FROM t0 ORDER BY (t0.c94 IN (t0.c2)) COLLATE BINARY DESC, ((CASE WHEN t0.c0 THEN t0.c94 ELSE t0.c94 END) IS TRUE) DESC  NULLS FIRST; -- 4ms;
SELECT (((t0.c0) NOT BETWEEN (t0.c48) AND (t0.c94)) IN ()), CASE LIKELY(DISTINCT t0.c2)  WHEN ((t0.c94) IS FALSE) THEN (t0.c94 IN ()) ELSE ((t0.c94)/(t0.c94)) END, CASE WHEN ((((t0.c94)OR(t0.c94)))AND(t0.c48)) THEN ((t0.c0)-(t0.c48)) WHEN CAST(t0.c94 AS INTEGER) THEN ((((t0.c48)OR(t0.c2)))OR(t0.c0)) WHEN (((t0.c48, 0.076819309348101, t0.c0)) BETWEEN ((t0.c0, t0.c2, t0.c2)) AND ((t0.c48, x'', x'27337824'))) THEN DATE(t0.c2, t0.c48, t0.c2) ELSE CASE t0.c0  WHEN t0.c48 THEN t0.c2 WHEN t0.c2 THEN t0.c48 WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END END FROM t0; -- 0ms;
SELECT DISTINCT (((~ (t0.c94)))-(CASE WHEN t0.c2 THEN t0.c48 WHEN t0.c0 THEN t0.c48 WHEN t0.c94 THEN t0.c2 END)) FROM t0; -- 0ms;
SELECT t0.c48 FROM t0 WHERE (((5.6550906E7) BETWEEN (x'') AND (x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT t0.c48 FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c2, t0.c48, t0.c0)) NOT BETWEEN ((((t0.c48)/(t0.c48)), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c48)), '720427637')) AND ((t0.c94, t0.c94 COLLATE NOCASE, ((t0.c94) ISNULL)))) FROM t0 WHERE ((('ut(' COLLATE RTRIM) NOT NULL)) ORDER BY CASE WHEN (NOT (t0.c2)) THEN NULL END  NULLS FIRST; -- 0ms;
SELECT (((t0.c2 IN (t0.c94)))&((t0.c2 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT (NOT ((('-1513748904')GLOB(t0.c2)))) FROM t0 GROUP BY ((t0.c0)IS(t0.c94)) COLLATE RTRIM, NULL, (NOT (CASE WHEN t0.c0 THEN t0.c2 END)); -- 0ms;
SELECT ((((((((t0.c2)AND(t0.c2)))OR(t0.c48)))OR(t0.c2)))AND(t0.c2)) COLLATE NOCASE FROM t0 WHERE (((((0.9582096945947591)%('941146810'))) NOT BETWEEN (CASE WHEN 0Xffffffff8eda897e THEN NULL ELSE 402297840 END) AND (HEX(NULL)))); -- 0ms;
SELECT ALL COUNT(*) OVER (), ((((x'b501' IN ())))>((((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c2))))), ((((t0.c2) NOT BETWEEN (t0.c48) AND (t0.c2)))<=(UPPER(0.8055071746691123))) FROM t0; -- 0ms;
SELECT ((((((t0.c48)OR(t0.c2)))AND(t0.c0)))&((+ (t0.c0)))) FROM t0 WHERE (COALESCE(DISTINCT (((('-822485564')AND(0.1005171015478078)))AND(x'')), ((x'd86e') IS TRUE))); -- 0ms;
SELECT MAX(COALESCE(t0.c48, t0.c0)) FROM t0; -- 0ms;
SELECT ALL SUM(((((t0.c0)AND(t0.c94)))AND(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT (SQLITE_COMPILEOPTION_GET(NULL) IN (CASE WHEN 1304163789 THEN t0.c0 ELSE t0.c0 END)) FROM t0 WHERE (((x'a868' COLLATE BINARY)<((((0.20591558242502717))>=((x'')))))); -- 0ms;
SELECT MAX(((t0.c94)|(t0.c48)), t0.c48) FROM t0 WHERE ((((((0.8843642990104817, x'abfd3508', '.,')) NOT BETWEEN ((621323933, 0.6133490008888108, NULL)) AND (('1204029340', -1408323616, x'')))) NOT NULL)) LIMIT 1615899310 OFFSET 1093120267; -- 0ms;
SELECT ALL t0.c2, t0.c94, CAST(CHAR(t0.c94) AS REAL) FROM t0 WHERE ((((NULL COLLATE BINARY))>((0.010926490770413522 COLLATE BINARY)))) ORDER BY (((((t0.c0) NOTNULL)))<((TRIM(t0.c0))))  NULLS LAST; -- 0ms;
SELECT ALL ((((((t0.c2) NOTNULL))AND(CASE t0.c48  WHEN t0.c0 THEN t0.c94 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c94 ELSE t0.c94 END)))OR(((t0.c0)<(t0.c48)))) FROM t0 WHERE (json_patch(0.5465456554606436, -8.32422052E8) COLLATE BINARY); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((((((t0.c48 COLLATE NOCASE)OR(json_extract(t0.c2, t0.c94, t0.c2, t0.c2))))AND(LIKE(t0.c48, t0.c0))))OR(t0.c2 COLLATE RTRIM)))OR(((t0.c0) NOTNULL)))) OVER () FROM t0 WHERE ((~ (CAST('c{' AS INTEGER)))) GROUP BY (+ ((+ (t0.c48)))), CASE WHEN (~ (t0.c48)) THEN t0.c0 WHEN t0.c94 COLLATE NOCASE THEN CAST(t0.c2 AS NUMERIC) WHEN ((t0.c94) IS FALSE) THEN (t0.c0 IN ()) END, t0.c48;SELECT ALL GROUP_CONCAT(((t0.c94) IS TRUE)) OVER ( ORDER BY (+ (((t0.c94) ISNULL))) ASC  NULLS FIRST) FROM t0 WHERE ((('90756381') NOTNULL)); -- 0ms;
SELECT ALL ((((t0.c48) NOT NULL)) BETWEEN ('(ms !x') AND (((t0.c2)||(t0.c0)))) FROM t0 GROUP BY TRIM(CAST(t0.c0 AS INTEGER), ((t0.c48)&(t0.c2))), CASE WHEN (- (t0.c0)) THEN LIKELIHOOD(DISTINCT t0.c0, 0.5995810690626178) WHEN 0xffffffffc5c390ce THEN t0.c2 WHEN ((((t0.c0)AND(t0.c94)))OR(t0.c94)) THEN ((t0.c2)+(t0.c48)) WHEN CAST(t0.c94 AS TEXT) THEN ((t0.c48)>=(t0.c0)) WHEN t0.c0 THEN ((t0.c48) NOT BETWEEN (t0.c94) AND (NULL)) END, (((t0.c94)) NOT BETWEEN ((CASE t0.c2  WHEN t0.c0 THEN NULL WHEN t0.c94 THEN t0.c2 WHEN t0.c48 THEN t0.c2 ELSE t0.c48 END)) AND ((((((t0.c0)AND(t0.c0)))OR(t0.c0))))) HAVING AVG((t0.c94 IN ())); -- 0ms;
SELECT DISTINCT ((((t0.c94)==(t0.c94)))IS(GROUP_CONCAT(t0.c48))) FROM t0; -- 0ms;
SELECT DISTINCT CASE ((((t0.c0)AND(t0.c2)))OR(t0.c2))  WHEN ((t0.c2)&(t0.c48)) THEN '''[' END FROM t0 WHERE ((+ ((NOT (NULL))))) ORDER BY ((((t0.c0)>=(t0.c2))) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c94) AND (t0.c48))) AND (CHAR(t0.c0))) DESC  NULLS LAST; -- 0ms;
SELECT ALL RANK() OVER () FROM t0 WHERE (((((NULL)>=(x'')))<<((('㯦h') ISNULL)))) ORDER BY ((t0.c0 COLLATE BINARY)||(x''))  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(((t0.c48)LIKE(t0.c94)) AS TEXT), CASE WHEN (t0.c0 IN ()) THEN ((t0.c94)<(t0.c48)) WHEN '-1634451038' THEN t0.c2 COLLATE RTRIM WHEN CAST(t0.c94 AS NUMERIC) THEN CASE t0.c0  WHEN t0.c94 THEN t0.c0 END ELSE ((t0.c48) BETWEEN (t0.c2) AND (t0.c48)) END, ((t0.c2) NOT BETWEEN ((t0.c2 IN ())) AND ('-31032499' COLLATE RTRIM)), ((((((t0.c94)AND(t0.c48)))AND(t0.c0))) ISNULL), NULL FROM t0 WHERE (UPPER((('Z떕')&(x'')))); -- 0ms;
SELECT ((- (t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT t0.c94 FROM t0; -- 0ms;
SELECT ALL (((((('') NOT BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c2)))OR(CAST(t0.c48 AS BLOB))) FROM t0 WHERE (('1115745766' IN ()) COLLATE RTRIM); -- 0ms;
SELECT ((CAST(t0.c2 AS REAL))<(((t0.c94) ISNULL))) FROM t0 WHERE (((((((0.5604665504122818) ISNULL))OR(x'cd06' COLLATE RTRIM)))AND((- (x'c7446749'))))); -- 0ms;
SELECT DISTINCT NTILE((((t0.c94 IN ()))>=(CASE WHEN t0.c0 THEN t0.c94 END))) OVER () FROM t0 WHERE ('^k%lDD儍)'); -- 0ms;
SELECT DISTINCT (t0.c48 COLLATE RTRIM IN ()) FROM t0; -- 0ms;
SELECT ALL 1722893328 FROM t0 LIMIT -778753302 OFFSET -268573839; -- 0ms;
SELECT DISTINCT CAST((t0.c0 IN ()) AS INTEGER) FROM t0 WHERE ('1156117005'); -- 0ms;
SELECT (((((~ (t0.c2)))OR(NULL)))AND((~ (t0.c94)))) FROM t0; -- 0ms;
SELECT ALL (~ (CAST(t0.c94 AS TEXT))) FROM t0 WHERE ((- ((('317932075')>=('-1087922220'))))) ORDER BY (t0.c48 IN ()) COLLATE RTRIM; -- 0ms;
SELECT ALL ((((((t0.c0)AND(t0.c94)))AND(t0.c0))) BETWEEN (LIKELY(DISTINCT 0.9128011730521077)) AND (CASE WHEN t0.c2 THEN t0.c94 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN t0.c94 END)) FROM t0; -- 0ms;
SELECT ALL (((((t0.c94))=((t0.c0))))|((((t0.c0))=((t0.c48))))), CAST(CAST(t0.c94 AS TEXT) AS NUMERIC), (0.2564307430937417 IN ()) FROM t0 WHERE (((x'f322a0d4' IN ('1643201785')) IN ())); -- 0ms;
SELECT DISTINCT AVG(t0.c48) FROM t0 WHERE ((((('-531433443')AND('-590481758'))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((TOTAL(t0.c2)) BETWEEN (JULIANDAY(t0.c48, t0.c2, t0.c94, t0.c48, t0.c2, t0.c48, t0.c0)) AND (QUOTE(t0.c94))) FROM t0 WHERE (((((0.1941026367648533)GLOB(x''))) NOT BETWEEN ((- (0.9585197241206709))) AND ((+ (0.461961346462619))))) ORDER BY (((NOT (t0.c48)))>=('1778058329')); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((0.5961319454146052) BETWEEN (3.17932075E8) AND (0.07208713434961522)) IN ())); -- 0ms;
SELECT DISTINCT ((t0.c94 COLLATE RTRIM)>=('1')), (- (t0.c0)) COLLATE RTRIM, (((t0.c48, t0.c48, t0.c94)) BETWEEN ((t0.c48, (((t0.c94))=((t0.c2))), -1.466659393E9)) AND (('R2', ((t0.c94)||(t0.c94)), (((t0.c2))!=((t0.c94)))))) FROM t0 WHERE ((((0.21983458603431616 IN ())) NOT NULL)) ORDER BY CAST((0.9193174152969321 IN ()) AS BLOB)  NULLS LAST; -- 0ms;
SELECT CASE WHEN t0.c2 THEN t0.c48 ELSE t0.c94 END COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT ((((t0.c0)|(t0.c2)))AND(NULL COLLATE BINARY)) FROM t0 INDEXED BY i73 WHERE ((((((((((('927847710')<(x'')))AND(((NULL)>(-2.01585114E8)))))AND(((((0.44831056161535)OR(x'')))AND('-1215234520')))))AND(CAST('' AS NUMERIC))))OR((('1457083441') ISNULL)))) GROUP BY json_remove(((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c94)), CAST(t0.c0 AS BLOB)), ((t0.c2 COLLATE NOCASE)GLOB(((((t0.c2)OR(t0.c0)))AND(t0.c94)))), ((((t0.c2)/('868963810')))||((((t0.c2, t0.c0, t0.c48))<=((t0.c94, t0.c94, t0.c94))))) HAVING ((((t0.c94)IS(t0.c94)))==(CASE WHEN t0.c0 THEN t0.c94 ELSE t0.c2 END)); -- 1ms;
SELECT DISTINCT MAX(CASE WHEN t0.c48 THEN '' END COLLATE NOCASE) FROM t0 WHERE ((((NULL)) BETWEEN ((x'' COLLATE BINARY)) AND ((CASE WHEN '' THEN NULL ELSE '\J' END)))); -- 0ms;
SELECT DISTINCT (((t0.c94 IN (t0.c94, t0.c2)))IS(t0.c48 COLLATE BINARY)), ((((0.289282019646378) NOT BETWEEN (t0.c48) AND (t0.c0)))>=((- (t0.c94)))), ((((((t0.c94)OR(t0.c0)))AND(t0.c94))) NOT BETWEEN (HEX(t0.c2)) AND ((t0.c48 IN (t0.c48)))) FROM t0 WHERE (CAST(((9.0756381E7) IS FALSE) AS INTEGER)); -- 0ms;
SELECT CASE WHEN ((t0.c2)IS(t0.c2)) THEN CASE t0.c0  WHEN t0.c94 THEN t0.c2 WHEN t0.c94 THEN t0.c0 WHEN t0.c48 THEN t0.c2 END WHEN (NOT (t0.c0)) THEN ((t0.c2) BETWEEN (x'') AND (t0.c2)) WHEN ((t0.c48) NOT BETWEEN (t0.c2) AND (t0.c0)) THEN t0.c94 END FROM t0 WHERE ((((((('-111917467') BETWEEN ('0.4230200308795772') AND (-1.714967704E9)))OR(NULLIF(DISTINCT -1.65887241E8, '[Oq1*'))))AND(((x'f448') NOT BETWEEN ('') AND (-4.85290559E8))))); -- 0ms;
SELECT ((CAST(t0.c48 AS BLOB))>(CAST(t0.c0 AS INTEGER))) FROM t0 WHERE (('-1466659393' IN ())); -- 0ms;
SELECT DISTINCT CASE (((t0.c94))<>((t0.c48)))  WHEN (((x'')) BETWEEN ((t0.c48)) AND ((t0.c0))) THEN ((t0.c94) NOT BETWEEN (t0.c2) AND (t0.c94)) ELSE x'ea90' END FROM t0 WHERE (((((0.9084864006441173)|(''))) BETWEEN (((NULL) BETWEEN (454993850) AND (''))) AND (QUOTE(x'')))); -- 0ms;
SELECT DISTINCT (((t0.c94 IN ()))-((- (0.35858952667348887)))) FROM t0 WHERE ((((844210652 IN ())) ISNULL)); -- 0ms;
SELECT DISTINCT (('963098958')OR(CASE t0.c94  WHEN t0.c2 THEN t0.c94 ELSE t0.c94 END)) FROM t0 GROUP BY CASE t0.c48  WHEN t0.c94 THEN t0.c0 ELSE t0.c48 END COLLATE NOCASE HAVING CAST('-' AS REAL); -- 0ms;
SELECT ALL ((UNLIKELY(t0.c2))*((((t0.c2))<=(('562319877'))))), '1928310212', (((t0.c94 IN ()))LIKE(LIKE(1.436723218E9, t0.c94))) FROM t0 WHERE ((ABS('') IN (CASE '-1982285513'  WHEN x'4712' THEN 0x342e3379 WHEN '[m' THEN -630226421 WHEN x'' THEN x'' END))); -- 0ms;
SELECT DISTINCT SUM(((((((((t0.c2)AND(t0.c2)))OR(t0.c94)))AND(t0.c2)))OR(t0.c48))) OVER (), (((t0.c94 IN (t0.c0)))||(((((t0.c0)AND(t0.c48)))AND(t0.c0)))), t0.c2 FROM t0; -- 0ms;
SELECT DISTINCT ((IFNULL(t0.c0, t0.c94)) BETWEEN (((t0.c94)<(t0.c2))) AND ((NOT (t0.c48)))) FROM t0 WHERE (NULL); -- 0ms;
SELECT ALL ((((t0.c94) IS TRUE))%(((t0.c94)GLOB(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), (((t0.c48)) BETWEEN ((t0.c0)) AND ((t0.c48))) COLLATE BINARY COLLATE BINARY, ((((((t0.c2)<(t0.c94)))AND(CASE ''  WHEN t0.c48 THEN NULL END)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0Xffffffffd960f1ce))))), ((((((((COUNT(*))AND(CAST(t0.c94 AS NUMERIC))))AND(((t0.c2) NOT NULL))))AND(((t0.c2) NOT NULL))))AND(((t0.c2)|(t0.c94)))), (+ (t0.c48)) FROM t0 WHERE (''); -- 0ms;
SELECT '197531083' FROM t0 WHERE (((((((((((x'')OR(-106662304)))OR(NULL)))AND(NULL)))AND(1931392001))) NOT NULL)); -- 0ms;
SELECT AVG(CAST(t0.c2 AS INTEGER)) FROM t0 WHERE ((((~ (NULL))) NOT BETWEEN (-1188617379) AND (((x'ee19') BETWEEN ('-1540604926') AND (x''))))) GROUP BY ((CAST(t0.c48 AS BLOB)) BETWEEN (((t0.c0) BETWEEN (t0.c94) AND ('ᐇl'))) AND ((((t0.c2))<>((t0.c48))))), (((((t0.c0)*(t0.c94))))<=((CASE t0.c94  WHEN t0.c0 THEN t0.c48 ELSE t0.c48 END))), CASE (- (t0.c0))  WHEN ((t0.c2)&(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) ELSE x'' END; -- 1ms;
SELECT DISTINCT (((((t0.c2))!=((1801286953)))) NOTNULL), t0.c0, CAST(t0.c0 AS INTEGER) COLLATE BINARY FROM t0 WHERE ((((NULL) BETWEEN ('-590481758') AND (NULL)) IN ())); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( RANGE  CURRENT ROW EXCLUDE TIES), MAX(CAST(t0.c0 AS REAL)), ((t0.c2) BETWEEN (COUNT(t0.c48)) AND (((((((((t0.c48)AND(t0.c48)))OR(t0.c48)))OR(t0.c0)))AND(NULL)))), FIRST_VALUE(CAST(CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END AS INTEGER)) OVER (), (((((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))AND(t0.c2)))AND(t0.c48 COLLATE RTRIM)) FROM t0 WHERE ((((('-1066184031')<>(-4.85290559E8)))==(((NULL)GLOB(0.8227951573441233))))); -- 0ms;
SELECT DISTINCT ((MIN(t0.c48))-(CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c94 THEN t0.c0 WHEN t0.c0 THEN t0.c48 ELSE t0.c2 END)) FROM t0 WHERE ((((NULL)) BETWEEN ((((((NULL)AND('z(')))OR(x'')))) AND (((('-1783734675')|('')))))); -- 0ms;
SELECT DISTINCT COUNT(((t0.c2)GLOB(t0.c0))), (((t0.c0) BETWEEN (t0.c94) AND (t0.c94)) IN ()), (('-526411223') IS FALSE) FROM t0; -- 0ms;
SELECT LIKELIHOOD(CASE t0.c2  WHEN t0.c48 THEN 0.3849270340856724 END, 0.007499379872031198) FROM t0; -- 0ms;
SELECT DISTINCT t0.c94, (((((0.1395964343283752)GLOB(t0.c94))))<>(((t0.c0 IN ())))), TYPEOF((((t0.c94)) BETWEEN ((t0.c94)) AND ((t0.c2)))) FROM t0 WHERE (((((0.1433346049180675) BETWEEN ('940213858') AND (NULL))) NOT BETWEEN ((- (-201585114))) AND (((1131820162) NOT BETWEEN ('1326130833') AND (x''))))) LIMIT -205390750 OFFSET -198863349; -- 0ms;
SELECT DISTINCT ((t0.c94) BETWEEN (x'5854') AND (t0.c48)) COLLATE NOCASE, (((t0.c94 IN (t0.c48))) BETWEEN (MIN(t0.c2)) AND ((~ (t0.c0)))), ((COUNT(*))OR(((((t0.c0)AND(t0.c2)))AND(t0.c48)))) FROM t0 WHERE (((CASE ''  WHEN NULL THEN x'' WHEN 0.3385546103104746 THEN 0Xffffffff8a28b6a2 WHEN 0.015935063676319472 THEN NULL ELSE 0Xffffffffb2d0d44a END)GLOB(((x'')LIKE(x''))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c48 THEN t0.c94 WHEN t0.c0 THEN t0.c94 WHEN t0.c94 THEN t0.c94 ELSE '0.3849270340856724' END) NOT NULL), ((((t0.c2) IS FALSE))OR(CASE WHEN 'k(\n]4	' THEN t0.c0 WHEN t0.c94 THEN t0.c2 WHEN t0.c2 THEN t0.c48 WHEN t0.c94 THEN t0.c2 WHEN t0.c94 THEN t0.c0 ELSE 'ሔW,' END)), ((t0.c94) NOTNULL) FROM t0 WHERE (((JULIANDAY(x'', x'', 0X52462a4a, '-1084678709', x''))%(((0.8059480025571103) ISNULL)))); -- 0ms;
SELECT DISTINCT NTILE((((x'8f26' IN ())) NOTNULL)) OVER (), ((((t0.c94)IS NOT(t0.c48)))<<((+ (t0.c0)))), AVG(CAST(t0.c2 AS INTEGER)) FROM t0 WHERE (((((0xffffffffd5c808d0)OR(CAST(NULL AS INTEGER))))OR((~ (x'88d2'))))) ORDER BY -9.55090654E8  NULLS LAST, t0.c94 DESC; -- 0ms;
SELECT t0.c94, ((((NULL)AND(MIN(t0.c0))))AND(t0.c94)), ((((NULL)>=(t0.c2)))%(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c94)))) FROM t0 NOT INDEXED LIMIT 109510972 OFFSET 875443065; -- 0ms;
SELECT DISTINCT CAST((t0.c94 IN ()) AS BLOB) FROM t0 EXCEPT SELECT DISTINCT CASE (- (x''))  WHEN UPPER(DISTINCT 0.1790339456561053) THEN x'' WHEN ((t0.c0) NOTNULL) THEN CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c48 THEN 0.8232160297092689 WHEN t0.c2 THEN t0.c0 WHEN t0.c94 THEN t0.c48 END WHEN ((t0.c48)<(t0.c2)) THEN (t0.c94 IN ()) WHEN (t0.c94 IN (0.25063229895433425)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c94 THEN 0xffffffffa01ef376 WHEN t0.c0 THEN t0.c94 END WHEN IFNULL(DISTINCT t0.c94, t0.c0) THEN TRIM(t0.c94, 0.7159034721874133) ELSE 'b2W*' END FROM t0 WHERE (((x'5397') BETWEEN (x'') AND ('3d')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((t0.c2)=(((t0.c48) ISNULL))) FROM t0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((x'')AND(t0.c0)) FROM t0; -- 0ms;
SELECT (((((t0.c2)IS(t0.c2))))!=((((t0.c0) IS TRUE)))) FROM t0 WHERE (((('*-', x'de2c', '|w릁SᓵAWS')) NOT BETWEEN ((((('', '1777358858', NULL)) NOT BETWEEN ((0.6566145547021355, 0.6741931884960408, '')) AND ((x'', NULL, NULL))), (((x'', NULL, '-229484150')) BETWEEN ((9.3764111E8, NULL, 0xffffffffc29a52de)) AND ((0X1441051a, '620743833', -1769889461))), (('RoEP-䙥') IS FALSE))) AND ((((x'cbd0') BETWEEN (0.48691891869447546) AND (x'ad49cd0d')), NULLIF('258626867', NULL), (('0.8232160297092689') BETWEEN (x'22b7') AND ('	[')))))); -- 2ms;
SELECT DISTINCT ((((- (t0.c0))))==((ABS(t0.c0)))) FROM t0; -- 0ms;
SELECT ALL (((t0.c0, t0.c0, t0.c94))<=((t0.c2, t0.c48, t0.c94))) COLLATE BINARY FROM t0 WHERE (((((- (NULL))))>(((((NULL))<((x'9e42'))))))); -- 0ms;
SELECT ALL (- (CAST(t0.c2 AS NUMERIC))) FROM t0 WHERE (((x'0994c4e8' COLLATE RTRIM)>=((('6c숎*U9O') ISNULL)))); -- 0ms;
SELECT ALL ((MAX(t0.c0)) BETWEEN (x'5a53') AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))) FROM t0 WHERE ('/H'); -- 0ms;
SELECT ALL (- (((t0.c94)+(t0.c94)))) FROM t0 LIMIT 576024910; -- 0ms;
SELECT DISTINCT CASE MIN(t0.c94)  WHEN '-1864006139' THEN t0.c48 COLLATE RTRIM ELSE (t0.c0 IN ()) END, (((t0.c0)-(t0.c94)) IN ()), ((json_patch(t0.c2, t0.c2))IS(CAST(t0.c0 AS TEXT))) FROM t0 LIMIT 96740594; -- 0ms;
SELECT (((0Xffffffffa6083b2f, ((t0.c48)=(t0.c48)), CAST(t0.c2 AS REAL)))>=(((~ (t0.c2)), ((((t0.c2)OR('844210652')))OR(t0.c2)), LOWER(t0.c2)))) FROM t0 ORDER BY CASE x''  WHEN (NOT (t0.c2)) THEN ((t0.c48) NOT BETWEEN (NULL) AND (t0.c94)) WHEN t0.c48 THEN UNLIKELY(DISTINCT t0.c48) WHEN (- (x'')) THEN t0.c48 WHEN CASE t0.c48  WHEN t0.c0 THEN t0.c94 END THEN (- (NULL)) WHEN (t0.c0 IN ()) THEN (('-1075522316')>>(t0.c0)) ELSE ((t0.c0) NOT NULL) END ASC  NULLS LAST; -- 0ms;
SELECT ((((((t0.c94)OR(t0.c48)))OR(t0.c0)))>(((((t0.c0)OR(t0.c48)))AND(NULL)))) FROM t0; -- 1ms;
SELECT ((('-744458032') ISNULL) IN ()) FROM t0 LIMIT -9223372036854775808 OFFSET 875443065; -- 0ms;
SELECT ((((t0.c94)+(t0.c94))) IS FALSE) FROM t0 WHERE (((((0x577d103f)GLOB(NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT SUM((((t0.c48, t0.c2, t0.c2))=((t0.c2, x'', t0.c2)))) OVER (), (+ (t0.c48)), LAG(CAST(LAST_INSERT_ROWID() AS REAL), ((t0.c94) NOT NULL), ((((t0.c0)<>(t0.c94)))|(((t0.c0) BETWEEN (t0.c0) AND (t0.c48))))) OVER (), ((t0.c0 COLLATE NOCASE)+(GROUP_CONCAT(t0.c48))), DENSE_RANK() OVER () FROM t0 WHERE (((CASE '1661969605'  WHEN 0x1bf395b5 THEN x'925d' END)*(((0Xffffffffd830b196) NOT BETWEEN (NULL) AND (6.21323933E8))))); -- 0ms;
SELECT ALL t0.c94 COLLATE RTRIM FROM t0; -- 0ms;
SELECT ALL (((t0.c48 IN ())) NOT BETWEEN (((t0.c48)GLOB(t0.c48))) AND (((t0.c48) IS TRUE))), CAST(UPPER(t0.c48) AS INTEGER), (((((((t0.c48))<=((t0.c48))))AND(((((((((((((t0.c94)AND(t0.c94)))AND(t0.c48)))AND(t0.c0)))OR(t0.c2)))AND(x'')))AND(t0.c94)))))AND(((t0.c94) NOTNULL))), (t0.c94 IN ((NOT (t0.c48)), ((((t0.c48)AND('#Ffa3')))OR(t0.c94)))), (+ (COALESCE(0.7650811175505466, t0.c94))) FROM t0; -- 0ms;
SELECT DISTINCT ((SUM('0.2395209650053013'))IS(((t0.c0)>=('0.9961762092048357')))) FROM t0 GROUP BY ((((t0.c94) IS TRUE))|(((t0.c94)-(t0.c0)))); -- 0ms;
SELECT DISTINCT COUNT(*), CAST(SUM(t0.c2) AS INTEGER), HEX(DISTINCT x''), ((CASE -1.216324244E9  WHEN t0.c2 THEN t0.c2 WHEN t0.c48 THEN t0.c94 WHEN t0.c0 THEN t0.c2 WHEN t0.c48 THEN t0.c94 WHEN t0.c2 THEN t0.c48 END)>>(COALESCE(t0.c2, t0.c94))), ((t0.c48 COLLATE RTRIM)<(UPPER(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT ((ROUND(x'', t0.c94))LIKE(((t0.c0)/(t0.c0)))) FROM t0; -- 0ms;
SELECT AVG(((((0x4f0b2691)AND(t0.c94)))AND(t0.c48))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT AVG((+ (t0.c2))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((((((t0.c48)OR(t0.c94)))OR(t0.c48)))OR(t0.c0)))OR(t0.c0)))OR(t0.c2)))AND(t0.c48)))+(COUNT(*))) FROM t0; -- 0ms;
SELECT t0.c0, GROUP_CONCAT((- (t0.c48))), AVG(PRINTF(t0.c48)) FILTER(WHERE ((((CAST(t0.c0 AS REAL))OR(((t0.c2) BETWEEN (t0.c2) AND ('449006970')))))OR('<?'))) OVER ( ORDER BY ((((~ (t0.c94)), 0.6496168098892892, ((t0.c94)-(t0.c48)), ((t0.c0) ISNULL), ((((((((t0.c94)OR(t0.c0)))AND(t0.c2)))OR(t0.c2)))AND(t0.c94))))>((rtreenode(t0.c2, t0.c2), ((((t0.c94)AND(t0.c2)))AND(t0.c94)), ((t0.c2)LIKE(t0.c94)), CAST(t0.c94 AS NUMERIC), (((t0.c48))=((t0.c94))))))) FROM t0 WHERE (((((NULL)*(NULL)))<(CASE '317932075'  WHEN '565347954' THEN 0x342e3379 ELSE 'r!' END))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0 LIMIT 273590028 OFFSET 1093120267; -- 0ms;
SELECT DISTINCT (NOT (CASE WHEN t0.c2 THEN t0.c0 END)) FROM t0; -- 0ms;
SELECT DISTINCT ((0.9058070991766054) NOT NULL) COLLATE RTRIM, CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c48 THEN NULL WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE, TRIM(((t0.c0)!=(t0.c94)), COUNT(*)), ((((t0.c48)>(t0.c48))) NOTNULL), (((- (t0.c2))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((((t0.c2)) BETWEEN ((t0.c94)) AND ((NULL))))) FROM t0 WHERE ('-1828304796'); -- 0ms;
SELECT (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c94, t0.c48)) AND ((t0.c0, -8.32422052E8, t0.c2))) COLLATE RTRIM FROM t0 WHERE (((CAST(x'c073' AS NUMERIC)) ISNULL)); -- 0ms;
SELECT DISTINCT '-1246920360' FROM t0; -- 0ms;
SELECT (((t0.c94)) NOT BETWEEN (((t0.c94 IN ()))) AND ((MIN(t0.c94)))) FROM t0 ORDER BY (((((- (t0.c0)))AND(((t0.c0) ISNULL))))AND(NULL))  NULLS LAST; -- 0ms;
SELECT ((((((t0.c94) BETWEEN (t0.c94) AND (t0.c48)))OR(((t0.c0)>>(t0.c94)))))AND(((0.3046064188350506) IS TRUE))) FROM t0; -- 0ms;
SELECT ALL (- (0x4f0b2691)), (COUNT(t0.c94) IN ()), UPPER(((t0.c2)GLOB(t0.c48))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c48)IS NOT(t0.c2)), 0.9706999388171715, t0.c48))<=((((t0.c48) BETWEEN (t0.c2) AND (t0.c94)), '-689763765', (((t0.c94)) NOT BETWEEN ((t0.c2)) AND ((t0.c94)))))), t0.c2, ((t0.c94)IS NOT(t0.c94)) COLLATE NOCASE FROM t0 WHERE (CASE ((NULL) NOT BETWEEN ('r.idc?ಙ') AND (0Xffffffffd99686e0))  WHEN ((x'72ca') BETWEEN (NULL) AND (x'4613')) THEN CASE WHEN '-1370481476' THEN 0.8581876449662446 ELSE -1.7976931348623157E308 END ELSE (('')>=(x'cdea')) END) GROUP BY (- (56550906));SELECT ALL ((((t0.c2 IN ())))>=(((((t0.c2, NULL, t0.c2))<>((t0.c94, t0.c2, t0.c94)))))) FROM t0 WHERE ((((((((((~ ('')))AND(x'' COLLATE BINARY)))OR((+ (0xffffffff9a37797d)))))AND(((-1.74848535E8)>=(NULL)))))OR((0.30488352556417253 IN (x'', '', NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c2 THEN CASE t0.c48  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END WHEN (t0.c2 IN ()) THEN COALESCE(t0.c0, t0.c94) WHEN (- (t0.c2)) THEN t0.c2 END FROM t0 WHERE ((((('start of month') IS TRUE)) NOT NULL)); -- 0ms;
SELECT DISTINCT (NOT ((t0.c94 IN ()))), CASE (t0.c0 IN ())  WHEN ((t0.c94)>(t0.c94)) THEN CASE t0.c48  WHEN t0.c0 THEN t0.c94 END END, t0.c2, (t0.c94 IN ()), UNLIKELY(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) FROM t0 WHERE (DATE(UPPER(0.606327149340304), ((0.7940601513159451) IS TRUE), ((719969013)<>(x'')))) ORDER BY CASE WHEN CAST(NULL AS REAL) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c94)))OR(t0.c2)))AND(t0.c48)) END ASC LIMIT -461208728 OFFSET 1577082728; -- 0ms;
SELECT t0.c2, (+ (((t0.c0)%(t0.c2)))), ((t0.c94) BETWEEN (t0.c2) AND (t0.c2)) COLLATE RTRIM FROM t0 LIMIT -174848535 OFFSET -527458258; -- 0ms;
SELECT ALL (((+ (t0.c48)))-(((((t0.c2)OR(t0.c94)))AND(t0.c0)))), CAST(((t0.c94)=(t0.c2)) AS NUMERIC), MIN(t0.c2), SQLITE_SOURCE_ID(), ((t0.c94) BETWEEN (((t0.c48)AND(t0.c2))) AND ((((t0.c0))>=((t0.c0))))) FROM t0 WHERE ((((x'' IN (0X3251a1dc)))|(CAST('' AS INTEGER)))); -- 0ms;
SELECT ((((t0.c94)>(t0.c94)))=(t0.c2 COLLATE RTRIM)) FROM t0 WHERE ((CASE '2097648777'  WHEN x'' THEN 'Ml' ELSE x'ed59' END IN ())); -- 0ms;
SELECT DISTINCT TOTAL((x'626c76a1' IN ())) OVER (), CASE ((t0.c0) IS TRUE)  WHEN ((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c0)) THEN ((t0.c94)|(t0.c48)) ELSE (((t0.c0)) NOT BETWEEN ((t0.c48)) AND ((t0.c2))) END, ROW_NUMBER() OVER () FROM t0 WHERE ((NOT (CASE WHEN 0.5218108685054049 THEN x'' END))) ORDER BY ((((NOT (t0.c94)), t0.c48, ((x'')IS NOT(t0.c48))))==((((t0.c0) NOT BETWEEN (t0.c48) AND (x'')), CASE t0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN NULL WHEN t0.c94 THEN t0.c2 ELSE t0.c0 END, 'I{^D}d6'))) DESC  NULLS FIRST, CAST(((t0.c0)||(t0.c48)) AS NUMERIC)  NULLS FIRST, ((((((t0.c94)AND(t0.c48)))OR(t0.c0)))==(CAST(t0.c94 AS BLOB))); -- 1ms;
SELECT DISTINCT TOTAL((t0.c94 IN ())) FROM t0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((t0.c0)) BETWEEN ((CASE WHEN t0.c48 THEN t0.c0 ELSE NULL END)) AND ((((t0.c2)&(t0.c0)))))) OVER (), (CAST(t0.c48 AS REAL) IN ()), ((t0.c48)=(NULL)) COLLATE RTRIM FROM t0 WHERE (((((x'')OR(('' IN ()))))AND(((-1.754273467E9)*(x''))))) LIMIT -1614395500 OFFSET 1066741976; -- 0ms;
SELECT ALL SUM(CASE t0.c0  WHEN t0.c48 THEN t0.c0 ELSE t0.c0 END) OVER ( ORDER BY (0.5121517782664617 IN ()) ASC) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c48)>>(t0.c2)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c48)OR(t0.c94)) IN ()), ((CAST(t0.c94 AS TEXT))<<(SUM(0.33428982701861876))), MAX(CAST(NULL AS REAL)) COLLATE BINARY, (~ ((((t0.c48, '', t0.c94)) NOT BETWEEN ((t0.c94, 0.7552211929031014, t0.c94)) AND ((t0.c94, t0.c0, t0.c48))))), t0.c48 FROM t0 WHERE (((((NULL)OR(x'')))=(CASE WHEN 965847404 THEN '-1032473733' WHEN '' THEN NULL WHEN NULL THEN x'' END))); -- 0ms;
SELECT DISTINCT ((MIN(t0.c0))&(t0.c94 COLLATE BINARY)) FROM t0 WHERE ((((x'')|(NULL)) IN ())); -- 0ms;
SELECT DISTINCT COUNT(((((t0.c2)AND(t0.c0)))OR(t0.c94))) OVER ( ORDER BY 478482349  NULLS LAST, ((((((((t0.c2 COLLATE BINARY)OR(t0.c94)))AND('1479633625')))AND(((t0.c2)>=(t0.c0)))))OR(TRIM(t0.c94, t0.c94))) ASC  NULLS LAST) FROM t0; -- 0ms;
SELECT 0.8119979914019407 FROM t0; -- 0ms;
SELECT DISTINCT (((((x'' IN ()))AND(((NULL) IS FALSE))))OR((((t0.c2, t0.c94, t0.c94))<>((t0.c48, t0.c2, t0.c2))))), t0.c0, CUME_DIST() OVER () FROM t0 WHERE ((((CAST('-1340117641' AS BLOB)))!=(((0.42470442775971917 IN ()))))); -- 0ms;
SELECT ((((((((((((t0.c0)AND(t0.c48)))AND(t0.c2)))AND(x'')))AND(t0.c0)))OR(AVG(t0.c48))))AND(((t0.c94) NOTNULL))) FROM t0 WHERE (0X4a8b873b); -- 0ms;
SELECT ALL ((t0.c2) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((CASE t0.c94  WHEN t0.c94 THEN t0.c48 WHEN NULL THEN x'' WHEN t0.c0 THEN t0.c48 ELSE t0.c48 END)) AND (((t0.c0 IN ())))) FROM t0 WHERE (CASE WHEN ((775207109) NOTNULL) THEN (((('.⢱')OR(x'')))AND(NULL)) ELSE ((NULL) NOT NULL) END); -- 0ms;
SELECT ALL (((((((((+ (t0.c48)))AND('178778674')))OR(CASE WHEN x'' THEN t0.c48 WHEN t0.c0 THEN t0.c48 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c94 WHEN x'0734' THEN t0.c2 ELSE t0.c48 END)))AND((t0.c0 IN ()))))AND((('-485290559') NOT BETWEEN (t0.c48) AND (t0.c2)))), ((AVG(t0.c0))<((((t0.c48, t0.c0, t0.c94)) NOT BETWEEN ((t0.c48, t0.c0, 0.02614322635366073)) AND ((t0.c94, t0.c94, t0.c94))))), ((((t0.c94)OR(t0.c0)))OR(t0.c94)) COLLATE RTRIM FROM t0 WHERE (LOWER(CAST(0.10111171201147262 AS BLOB))); -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE ((t0.c94)=(t0.c0))  WHEN t0.c2 THEN (((t0.c94))<>((t0.c48))) END, ((~ (t0.c48)) IN ())) OVER ( ORDER BY ((json_quote(t0.c94))GLOB(((t0.c48)<>(t0.c94)))) GROUPS  UNBOUNDED PRECEDING) FROM t0;SELECT DISTINCT TOTAL('1608214838') FROM t0; -- 0ms;
SELECT DISTINCT LIKELY(COUNT(t0.c2)), AVG(((t0.c0)*(t0.c0))), ((t0.c0)==(((t0.c2)*(t0.c2)))) FROM t0 WHERE (TRIM(DISTINCT ((NULL) BETWEEN (-1.613661601E9) AND (NULL)))); -- 0ms;
SELECT DISTINCT ((-1.832961001E9) BETWEEN (0Xffffffffe32b31c3) AND (((t0.c0)+(t0.c48)))) FROM t0 LIMIT 844210652 OFFSET -832422052; -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(NULL AS TEXT)), (((t0.c0)) BETWEEN ((((t0.c2) IS FALSE))) AND (((NOT (t0.c2))))), ((x'') NOT NULL) FROM t0 WHERE ((((('')GLOB('L')))/((x'dbc7' IN (x'45759739', '206833719'))))); -- 0ms;
SELECT SUM(LOWER(DISTINCT t0.c48)) FROM t0; -- 0ms;
SELECT DISTINCT (((((('26621948')-(t0.c0)))OR(t0.c2 COLLATE NOCASE)))AND((NOT (t0.c48)))) FROM t0 WHERE (((CAST('' AS REAL))|(((0.19624298746291924) BETWEEN (NULL) AND (1.32424919E9))))); -- 0ms;
SELECT DISTINCT ((((((t0.c2)AND(t0.c94)))AND(t0.c0))) NOT BETWEEN (NULL) AND (t0.c48)) FROM t0; -- 1ms;
SELECT ((((t0.c2, t0.c2, t0.c94))<=((t0.c2, t0.c48, t0.c94))) IN ()) FROM t0; -- 0ms;
SELECT ALL ((IFNULL(DISTINCT t0.c0, t0.c2)) BETWEEN (t0.c94) AND (CAST(t0.c2 AS REAL))), '', ((CASE t0.c0  WHEN t0.c2 THEN t0.c94 END) BETWEEN (t0.c48) AND (((t0.c48) BETWEEN (t0.c94) AND (t0.c94)))) FROM t0 WHERE (('-526411223' IN (((((0.883357108158802)AND('')))OR(x'c22b'))))) EXCEPT SELECT ALL (((+ (t0.c2))) NOTNULL), CAST(((t0.c94)IS(t0.c0)) AS BLOB), (((t0.c48) NOT BETWEEN (t0.c2) AND (t0.c48)) IN ()) FROM t0 WHERE (((((((((((26621948) IS FALSE))AND(((((NULL)AND(NULL)))AND(0X2af0da75)))))OR(x'' COLLATE NOCASE)))OR((((NULL)) BETWEEN ((0.5767612015336271)) AND ((x''))))))OR((+ ('-590481758'))))); -- 0ms;
SELECT ALL ((t0.c2)>>(SQLITE_COMPILEOPTION_GET(t0.c94))), PERCENT_RANK() OVER (), (((((((((t0.c48)OR(t0.c94)))OR(t0.c48)))AND(t0.c48)))OR(t0.c2)) IN ()) FROM t0; -- 0ms;
SELECT ALL ((((CAST(t0.c2 AS NUMERIC))AND(AVG(t0.c0))))AND(((t0.c0) ISNULL))) FROM t0 WHERE (((0.3639881819993852)<(0.8602974645364644 COLLATE NOCASE))); -- 0ms;
SELECT MIN(((t0.c48)>(t0.c94))) FROM t0 WHERE (CAST(((0.697930348190449)GLOB(x'a202')) AS INTEGER)) ORDER BY ((((t0.c94)IS NOT(t0.c0)))<>((((t0.c94))>((t0.c0))))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE ((x'')>=(t0.c94))  WHEN ((t0.c94)+(t0.c48)) THEN NULLIF(t0.c0, x'') WHEN t0.c2 COLLATE RTRIM THEN x'' WHEN MAX(t0.c94) THEN t0.c0 END FROM t0; -- 0ms;
SELECT ALL (((t0.c48)) BETWEEN ((CAST(NULL AS BLOB))) AND ((t0.c0 COLLATE NOCASE))) FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(t0.c2 AS TEXT)), ((((((t0.c48)LIKE(t0.c0)))AND(((((((((t0.c2)AND(NULL)))AND(x'')))AND(t0.c94)))AND(t0.c0)))))AND((('	Hnow?x!C?C/')||('剦k*\nA')))), t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c48 AS REAL)) BETWEEN (t0.c94) AND (MAX(t0.c0))), (((((t0.c2))>((t0.c0))))|(CAST(t0.c2 AS INTEGER))), PERCENT_RANK() OVER () FROM t0 LIMIT 991643408; -- 0ms;
SELECT DISTINCT (((COUNT(*)))>((((t0.c0)>(t0.c48))))), CASE WHEN SUBSTR(t0.c48, t0.c0) THEN TRIM(DISTINCT t0.c48) WHEN ((((NULL)AND(t0.c2)))OR(t0.c94)) THEN ((((((((((((t0.c48)OR(t0.c94)))OR(t0.c94)))AND(t0.c48)))AND(t0.c0)))AND(t0.c48)))OR(t0.c2)) WHEN ((((((((t0.c48)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND('18842584')) THEN json_quote(t0.c48) ELSE ((t0.c94) BETWEEN (t0.c2) AND (x'')) END, ((CAST(t0.c48 AS INTEGER)) BETWEEN ((~ (t0.c48))) AND (MIN(t0.c48))) FROM t0 LIMIT 1167071177; -- 0ms;
SELECT COUNT(*) FROM t0; -- 0ms;
SELECT ALL CAST(0.2741094772573327 AS TEXT) FROM t0 WHERE ((((NULL) NOT BETWEEN (1.549950262E9) AND (NULL)) IN ())); -- 0ms;
SELECT ((t0.c0) ISNULL) FROM t0 WHERE (('-1466659393' IN (0X4783f951)) COLLATE BINARY) LIMIT -1751396297; -- 0ms;
SELECT ((((NULL) BETWEEN (t0.c0) AND (t0.c94))) IS TRUE) FROM t0 WHERE ((((('713741692') NOT BETWEEN ('90756381') AND (NULL)))&(CASE WHEN x'' THEN NULL ELSE 0.29884991595576416 END))) GROUP BY (- (CASE WHEN t0.c0 THEN t0.c48 ELSE t0.c48 END)); -- 0ms;
SELECT t0.c2 FROM t0 WHERE ((((((((x'dcf3', x'', '划<!kK')) BETWEEN (('鮛', 'Y', NULL)) AND ((-8.32422052E8, '-1613661601', 0.1678951785385253))))OR(0.09974487624061512 COLLATE BINARY)))OR(('' IN ())))) ORDER BY CAST(x'' AS REAL) ASC  NULLS FIRST, ((((((t0.c2)+(t0.c0)))AND(CASE WHEN NULL THEN t0.c2 END)))OR(CAST(t0.c0 AS NUMERIC)))  NULLS LAST, ((((t0.c0)<(t0.c0)))!=(NULL)) ASC; -- 0ms;
SELECT DISTINCT (((((((((+ (t0.c0)))AND((t0.c0 IN ()))))AND(CAST(t0.c2 AS INTEGER))))OR(((t0.c48)-(t0.c94)))))OR(t0.c94)), (((t0.c94)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((t0.c0 COLLATE RTRIM))), UPPER(t0.c48) COLLATE NOCASE COLLATE NOCASE, MAX((- (t0.c0))), LAST_VALUE(t0.c48) OVER ( ORDER BY CAST((('-599737029')IS NOT(t0.c2)) AS INTEGER) ASC  NULLS FIRST, t0.c2  NULLS FIRST) FROM t0 WHERE (LIKELY(DISTINCT x'')); -- 0ms;
SELECT ALL ((((t0.c2)AND((t0.c2 IN ()))))AND(((t0.c48) NOT BETWEEN (t0.c2) AND (t0.c0)))) FROM t0 WHERE (((CASE WHEN 0Xffffffffb7fbabf6 THEN x'' ELSE NULL END)>('42450391' COLLATE NOCASE))) LIMIT 1537069553; -- 0ms;
SELECT DISTINCT (((((((((((t0.c2, ',q', t0.c94, t0.c94, t0.c94))>((t0.c94, t0.c0, 0x374dd51e, t0.c2, t0.c2))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(x'')))OR((t0.c0 IN ()))))AND(CASE t0.c48  WHEN t0.c94 THEN t0.c48 ELSE t0.c2 END)) FROM t0; -- 0ms;
SELECT DISTINCT HEX(1323762431) FROM t0; -- 0ms;
SELECT DISTINCT '/7}8nowk侰]' FROM t0 WHERE ('1615899310'); -- 0ms;
SELECT DISTINCT (- (TOTAL(t0.c0))) FROM t0 WHERE (((((x'') ISNULL)) NOT BETWEEN ((('') BETWEEN (0X4eee7066) AND (NULL))) AND ((('x-C[N') NOT NULL)))) GROUP BY CAST(((t0.c0)>>(t0.c0)) AS TEXT); -- 0ms;
SELECT ALL (NOT (TOTAL(t0.c2))) FROM t0 WHERE (((((((x'')OR(NULL)))OR(1436723218)))OR(((NULL)>(676332872))))); -- 1ms;
SELECT DISTINCT SUM(((t0.c48)>=(t0.c48))) COLLATE NOCASE, COUNT(((t0.c0) NOTNULL)) OVER (), (((t0.c48) NOT NULL) IN (t0.c94)) FROM t0 WHERE ((((NULL IN ())) NOT BETWEEN (x'') AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT 0xffffffff9fd17a5f FROM t0 WHERE (CAST('' AS INTEGER) COLLATE BINARY) LIMIT -1066184031; -- 0ms;
SELECT DISTINCT t0.c48 FROM t0 WHERE (IFNULL((((0X34da13c7, 0.8210279565651594, '-1751396297'))<=(('916327962', '', 'J('))), ((2.58626867E8) IS TRUE))); -- 0ms;
SELECT DISTINCT (((t0.c94)) BETWEEN (('ゔ\r+t?x*' COLLATE BINARY)) AND (((((NULL, t0.c0, t0.c48, t0.c94, '-2066916762'))<>((t0.c2, t0.c48, '', t0.c48, t0.c48)))))) FROM t0; -- 0ms;
SELECT ((((t0.c94)OR(NULL)))OR(t0.c0)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT (((((x'b6fb') IS FALSE)))<((((t0.c2)LIKE(NULL))))) FROM t0; -- 0ms;
SELECT DISTINCT ((((+ (t0.c0))))<>((((t0.c48) NOT NULL)))) FROM t0 WHERE (((((0Xffffffffb80b0c8b)!=(742936556)))&(((0.279315987412578) BETWEEN ('896707859') AND (-114158603))))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)AND(t0.c2)))OR(t0.c94)))AND(t0.c0)))AND(t0.c2))) NOT BETWEEN ('-35775076') AND (t0.c2 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT ALL x'' FROM t0 WHERE ((((0.1274701996477161 IN ()))%((((0X16f4973f, 0x4ec29dc, NULL, x'9358', x''))>((0.806490856711993, 0.7031159567832548, x'', 1614983024, 0.6112885513641367)))))); -- 0ms;
SELECT DISTINCT ((((MAX(t0.c48))AND(SUM(t0.c94))))OR(CAST(t0.c48 AS BLOB))), ((t0.c48)>=(CAST(t0.c0 AS NUMERIC))), ((((t0.c0)<<(t0.c0))) NOT BETWEEN (((t0.c94)*(t0.c2))) AND (t0.c94)) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)>=(t0.c48))) NOT BETWEEN ((('608651403') NOT NULL)) AND ((NOT (t0.c2)))) FROM t0 WHERE (CASE ((x'')IS NOT(NULL))  WHEN ((((((((x'794c')AND(x'')))OR(NULL)))OR(x'9bb0')))AND(1.952420209E9)) THEN CASE WHEN NULL THEN x'' ELSE 0Xffffffffd3943716 END WHEN NULL THEN ((('0.42413973425136386', NULL, x''))==(('-526411223', '0.2536930311410188', 0.49153505628789296))) WHEN LIKE('', NULL, '1') THEN 0.6322453721251812 ELSE ((((NULL)AND(x'')))OR(NULL)) END); -- 0ms;
SELECT ALL MIN(((t0.c48) BETWEEN (t0.c94) AND (t0.c2))), t0.c48, ((((((((NULL)AND(((((t0.c48)AND(t0.c48)))OR(t0.c48)))))OR(((((((((t0.c2)OR(t0.c0)))OR(0.4328001659403663)))OR(t0.c0)))OR(t0.c2)))))OR(((t0.c94) ISNULL))))OR(((t0.c2) NOTNULL))) FROM t0 WHERE (((LOWER(DISTINCT '㨜bE)1BHM'))&(((((0Xffffffff9ffb21b6)OR(-1049710188)))OR(-924705754))))) GROUP BY (NOT (CASE WHEN t0.c2 THEN 0.9084146446447356 ELSE '4&n!}p䰎' END)) ORDER BY ((((CAST(t0.c94 AS TEXT))AND(CASE t0.c0  WHEN t0.c48 THEN t0.c94 ELSE t0.c48 END)))AND(NULL))  NULLS LAST, ((t0.c48 COLLATE BINARY)<>((~ (t0.c94))))  NULLS FIRST; -- 1ms;
SELECT DISTINCT LIKELY(((t0.c0)*(t0.c48))), t0.c94, (NULLIF(DISTINCT t0.c94, t0.c0) IN ((('0.19624298746291924') NOT BETWEEN (t0.c48) AND (t0.c0)))), (NOT (0.08296052367737827)), ((t0.c0)IS(CAST(t0.c2 AS BLOB))) FROM t0 WHERE (TYPEOF('a7]w%qR騩2') COLLATE RTRIM); -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(t0.c0 AS TEXT)), 7.20427637E8, t0.c0 FROM t0 WHERE (((((((0.8524321703105254))==((NULL)))))<=(((NOT (NULL)))))); -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((GROUP_CONCAT(t0.c48))) AND ((t0.c48 COLLATE BINARY))) FROM t0; -- 0ms;
SELECT ALL CASE WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c48)) THEN (t0.c0 IN ()) END FROM t0 WHERE (((((((((('c)eF\n')OR('-1052594109')))OR(x'e483')))OR(0.711294140956294)))OR(NULL)) IN ())); -- 0ms;
SELECT ALL ((LENGTH(t0.c94))+(((t0.c0) IS TRUE))) FROM t0; -- 0ms;
SELECT DISTINCT '1562676256', CASE WHEN t0.c0 THEN t0.c2 END COLLATE NOCASE, CASE WHEN ((t0.c94)AND(t0.c94)) THEN '' END FROM t0 WHERE ((((NULL, '-w(hvW8c', 0.6418738766197402)) NOT BETWEEN (((('575285665') ISNULL), ((((0X6edeaa46)OR(-1.613661601E9)))OR(x'')), (NULL IN ()))) AND (((((NULL))>=((0.48645001006652844))), ((((NULL)AND(0.1191051704997329)))AND('628576870')), TRIM(x'2e7c'))))); -- 0ms;
SELECT ((((t0.c2) ISNULL))&(((t0.c2)AND(t0.c48)))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((('0.001177959473839918')) BETWEEN ((t0.c94)) AND ((t0.c2))) AS REAL) FROM t0 ORDER BY (((((((t0.c94))<((t0.c2))))OR(((t0.c94) BETWEEN (t0.c48) AND (x'212b')))))OR((('-955090654') NOTNULL)))  NULLS LAST; -- 0ms;
SELECT ALL (((- (x'349e4484')))>=(((t0.c2) IS FALSE))) FROM t0; -- 0ms;
SELECT ALL ((((((((((t0.c48)AND(t0.c0)))OR(t0.c0)))AND(t0.c48)))OR(t0.c48)))<=(((((((((t0.c94)OR(t0.c0)))OR(t0.c0)))AND(t0.c2)))AND(t0.c48)))) FROM t0 WHERE (TYPEOF((((((((('슺')AND(0.3539538666310189)))AND(x'')))AND(x'09da')))OR(-1.21523452E9)))); -- 0ms;
SELECT (((NULL)-(t0.c48)) IN ()) FROM t0 WHERE ((((~ (x'')))LIKE(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT t0.c2 COLLATE BINARY, CASE x''  WHEN ((((t0.c94)OR(t0.c2)))AND(t0.c2)) THEN SUM(t0.c48) END, CAST(('-1669869415' IN ()) AS NUMERIC) FROM t0 WHERE (TIME(CASE 0xfffffffff59405e9  WHEN 'Z떕' THEN NULL END, NULL, (((('0ls^f6!0n')AND(0.25146982198824275)))OR('')))); -- 0ms;
SELECT TRIM(DISTINCT ((t0.c94)%(t0.c94))), (((t0.c94)) BETWEEN (('璧')) AND (((+ (t0.c48))))), (((t0.c48, 0.03476742859332582, t0.c48)) BETWEEN ((((t0.c48) BETWEEN (t0.c0) AND (t0.c48)), ((x'') ISNULL), t0.c94 COLLATE NOCASE)) AND ((CAST(0Xffffffffa4314e7e AS NUMERIC), t0.c94 COLLATE RTRIM, ((t0.c94)>=(t0.c94))))) FROM t0 WHERE (CASE '' COLLATE RTRIM  WHEN CAST(x'' AS TEXT) THEN ((0Xffffffffcac39a70) NOTNULL) ELSE ((('0.5381190474507093', '1229196629', '0.32248400048968273'))<(('965847404', -2.001377734E9, NULL))) END); -- 0ms;
SELECT t0.c2 FROM t0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( PARTITION BY LIKE(((((t0.c0)OR(t0.c2)))OR(t0.c2)), UPPER(DISTINCT t0.c0), '('), (((t0.c2)) BETWEEN ((t0.c48)) AND ((t0.c0))) COLLATE RTRIM) FROM t0; -- 0ms;
SELECT DISTINCT 0.5797414505129738, TOTAL(((t0.c48)==(t0.c48))), 1.483318801E9 FROM t0; -- 0ms;
SELECT ALL ((t0.c48) BETWEEN ((~ (t0.c0))) AND ((((t0.c0))<((t0.c94))))) FROM t0; -- 0ms;
SELECT ALL NTILE(((t0.c2) BETWEEN (((((t0.c2)AND(t0.c94)))AND(t0.c0))) AND ((((t0.c2))<((t0.c2)))))) OVER () FROM t0;SELECT DISTINCT ((((CASE WHEN t0.c0 THEN t0.c2 END)AND(t0.c2)))OR(((t0.c48) NOT BETWEEN (t0.c94) AND (t0.c94)))) FROM t0 WHERE (((('1338311550')IS NOT('-893150608')) IN ())) LIMIT 413181945; -- 0ms;
SELECT (((t0.c0) ISNULL) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c94)) NOT BETWEEN ((t0.c94)) AND ((t0.c48)))) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT t0.c48 COLLATE NOCASE COLLATE NOCASE, ((+ (t0.c0)) IN ()), ((t0.c94 COLLATE RTRIM) NOT BETWEEN (((t0.c0)&(t0.c2))) AND (t0.c48 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT ALL 0.9015917735036453, LAG(CAST(((t0.c48)GLOB(t0.c48)) AS TEXT), ((((NULL)OR(CASE WHEN t0.c2 THEN t0.c48 END)))OR(NULLIF(DISTINCT t0.c94, t0.c94))), SQLITE_COMPILEOPTION_GET(CAST(NULL AS REAL))) OVER (), (((t0.c2)/(t0.c2)) IN ()) FROM t0 WHERE (((CASE NULL  WHEN -1751396297 THEN '' WHEN '' THEN '0.6650786158906734' WHEN 1.549950262E9 THEN '-212349971' ELSE x'' END) IS FALSE)) LIMIT 845708718; -- 0ms;
SELECT IFNULL(DISTINCT (((('')OR(t0.c48)))AND(t0.c2)), NULL) FROM t0 WHERE (NULL); -- 0ms;
SELECT ALL COUNT((((t0.c94)) BETWEEN ((t0.c48)) AND ((t0.c48)))), ((CASE WHEN t0.c94 THEN t0.c94 ELSE t0.c2 END) NOTNULL), CAST(t0.c94 COLLATE RTRIM AS REAL), t0.c94, ((t0.c2) BETWEEN (t0.c48) AND (t0.c94)) COLLATE RTRIM, (((((~ (t0.c94)))OR(json(-2.01585114E8))))AND(((t0.c94) NOT BETWEEN (t0.c94) AND (t0.c0)))), (CASE WHEN t0.c2 THEN t0.c0 END IN ()) FROM t0 WHERE ((((((- (x'befc924f')))AND(0.040410691359697326 COLLATE BINARY)))AND((((445611091)) BETWEEN ((x'')) AND ((x'')))))); -- 0ms;
SELECT DISTINCT CAST(((((((((((((t0.c94)OR(t0.c0)))AND(t0.c94)))OR(t0.c2)))OR(t0.c0)))OR(t0.c48)))AND(t0.c48)) AS NUMERIC) FROM t0; -- 0ms;
SELECT ALL CAST(t0.c94 AS NUMERIC), (t0.c94 COLLATE NOCASE IN ((- (NULL)), 9.92921592E8)), ((NULLIF(x'2ceb', t0.c94))>>(CASE WHEN t0.c94 THEN t0.c2 WHEN t0.c48 THEN t0.c94 WHEN t0.c94 THEN t0.c2 WHEN t0.c94 THEN t0.c0 WHEN t0.c94 THEN t0.c2 END)) FROM t0 LIMIT -101634935; -- 0ms;
SELECT DISTINCT (((- (t0.c94))) ISNULL), ((((((((((t0.c94)AND(t0.c48)))OR(t0.c94)))AND(t0.c94)))AND(t0.c0))) ISNULL), (+ (((t0.c48) BETWEEN (x'8eec') AND (t0.c94)))), HEX(DISTINCT ((((t0.c94)OR(t0.c2)))AND(t0.c94))), t0.c94 FROM t0; -- 0ms;
SELECT (- ((t0.c48 IN (t0.c48, t0.c0)))) FROM t0; -- 0ms;
SELECT ALL (((+ (t0.c2))) ISNULL) FROM t0; -- 0ms;
SELECT NULLIF(DISTINCT t0.c94 COLLATE RTRIM, (((t0.c48)) BETWEEN ((t0.c48)) AND ((t0.c2)))) FROM t0 WHERE (UNLIKELY(CAST(x'18ab' AS BLOB))); -- 0ms;
SELECT (((((t0.c0)) NOT BETWEEN ((t0.c94)) AND ((t0.c48)))) BETWEEN (((((t0.c94)OR(t0.c0)))OR(-1.613661601E9))) AND (((t0.c94)GLOB(t0.c94)))), t0.c2, (((COUNT(*)))<=(('-1e500'))), (NOT (((t0.c94)<<(t0.c2)))), (((t0.c94)) NOT BETWEEN ((((t0.c0)<(t0.c48)))) AND (((t0.c2 IN (t0.c48))))) FROM t0 WHERE ((((x'3916')%('FALSE')) IN ())); -- 0ms;
SELECT ALL x'f647', ((((t0.c2) BETWEEN (t0.c2) AND (t0.c48))) NOT BETWEEN ('1156045246') AND (0.5768112563728076)), (+ (COUNT(t0.c94))), t0.c94, (- (t0.c94)) COLLATE RTRIM FROM t0 WHERE (CASE WHEN (('1793029724') NOTNULL) THEN (('wj')*(-1531763127)) ELSE (('') NOT BETWEEN ('-2001377734') AND ('-494174430')) END) LIMIT 1374107056; -- 1ms;
SELECT DISTINCT AVG(CASE t0.c2  WHEN t0.c2 THEN t0.c48 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END), 0.2149841318198885, RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c94 AS INTEGER) AS REAL), (((t0.c2)OR(t0.c94)) IN ()), ((((t0.c0)OR(t0.c48)))OR(t0.c94)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT (+ (((t0.c2)+(t0.c48)))) FROM t0 WHERE ((((((x'')) NOT BETWEEN (('-342200065')) AND ((0.2718045146897632)))) ISNULL)); -- 0ms;
SELECT DISTINCT ((COUNT(t0.c0))<=(t0.c0)), CASE (t0.c0 IN ())  WHEN ((t0.c2)OR(t0.c2)) THEN (((t0.c94))<((t0.c48))) END, SUM(CAST(t0.c94 AS REAL)) OVER ( ORDER BY ((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (CAST('465468022' AS BLOB)) AND ((('587370769') NOT NULL)))  NULLS LAST) FROM t0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(t0.c48 COLLATE NOCASE, 0.13155323105797012) FROM t0 WHERE ((~ (CAST(x'' AS BLOB)))); -- 0ms;
SELECT ALL CASE ((t0.c0) BETWEEN (t0.c2) AND (t0.c0))  WHEN NULLIF(DISTINCT t0.c0, t0.c0) THEN TRIM(DISTINCT t0.c0) WHEN (('-165887241') BETWEEN (t0.c2) AND (t0.c0)) THEN t0.c2 WHEN '-590481758' THEN ((NULL)>>(t0.c0)) ELSE 0Xffffffffdbc1e155 END FROM t0 WHERE (((CAST(NULL AS TEXT))AND(HEX(DISTINCT NULL)))); -- 0ms;
SELECT DISTINCT UNLIKELY((((t0.c48))>((t0.c48)))) FROM t0 WHERE ((((((('YU')AND(0.6947921867123814)))AND(x'')))OR(json_quote(1e500)))); -- 0ms;
SELECT (- (CASE x'c6c9'  WHEN t0.c48 THEN t0.c0 ELSE t0.c0 END)) FROM t0; -- 0ms;
SELECT DISTINCT (t0.c48 IN ()) FROM t0 ORDER BY (((((((t0.c94))<((0.4230200308795772))))AND(((t0.c94) NOT BETWEEN (t0.c2) AND (t0.c94)))))OR(LIKELIHOOD(t0.c94, 0.7813850830070009)))  NULLS LAST; -- 0ms;
SELECT DISTINCT FIRST_VALUE(NULL) OVER (), CASE (((t0.c0))>((t0.c94)))  WHEN 0.9556848905599351 THEN (((t0.c2, t0.c2, 0.055080373247409664))>((t0.c48, t0.c48, t0.c0))) END, GROUP_CONCAT(t0.c0) OVER () FROM t0; -- 0ms;
SELECT ALL AVG(((t0.c0) NOTNULL)) OVER () FROM t0; -- 1ms;
SELECT DISTINCT (+ (CASE t0.c94  WHEN t0.c0 THEN t0.c2 WHEN t0.c48 THEN t0.c48 WHEN t0.c2 THEN t0.c94 END)), AVG(CAST(NULL AS NUMERIC)) OVER (), LIKELY(DISTINCT t0.c2) COLLATE BINARY FROM t0 WHERE (((((x'')>=(0.7925680507202593))) ISNULL)); -- 1ms;
SELECT DISTINCT ((((((t0.c48)AND(t0.c2)))OR(t0.c48))) NOTNULL), (- (TOTAL(t0.c94))), CASE CAST(t0.c2 AS TEXT)  WHEN (- (t0.c48)) THEN ((((-1.7976931348623157E308)AND(t0.c48)))AND(t0.c48)) END FROM t0; -- 0ms;
SELECT DISTINCT (((('>qQ촣''' COLLATE NOCASE)OR(((t0.c48) IS FALSE))))OR(((t0.c0) IS TRUE))) FROM t0 ORDER BY t0.c0, ((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN ((~ (x''))) AND (((t0.c94) NOTNULL))); -- 0ms;
SELECT GROUP_CONCAT(CASE WHEN t0.c48 THEN t0.c94 ELSE t0.c0 END) OVER ( ORDER BY (~ (CASE WHEN t0.c94 THEN t0.c2 WHEN t0.c48 THEN -1504155568 WHEN t0.c48 THEN t0.c48 ELSE t0.c2 END)) DESC  NULLS FIRST, json_array_length(NULL) ASC ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM t0 WHERE (((((7.01497679E8)-(NULL))) IS FALSE)) LIMIT -154200110; -- 0ms;
SELECT DISTINCT (((((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c94))))OR((t0.c94 IN ()))))OR(((t0.c48)|(t0.c48)))), json_insert((('|Yଛ㔈PM')>(t0.c2)), t0.c2, (- (t0.c0))), 'hmQm?' FROM t0 WHERE (CAST(((x'')>=(0x745f9171)) AS BLOB)) GROUP BY (((t0.c48)) NOT BETWEEN ((('1770685221' IN ()))) AND (((((t0.c48))<>((t0.c0)))))) HAVING ((t0.c2)*((NOT (x'df70')))) LIMIT -1608584330;SELECT ALL NULL FROM t0 GROUP BY t0.c0; -- 0ms;
SELECT DISTINCT COUNT(((NULL)&(t0.c48))) FILTER(WHERE (('6dw3P	mP2')IS((NOT (t0.c48))))) OVER () FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c94 WHEN '' THEN t0.c48 WHEN t0.c2 THEN t0.c0 ELSE t0.c94 END)-(((t0.c48) IS TRUE)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST((t0.c94 IN (t0.c48)) AS REAL), ROW_NUMBER() OVER (), (((t0.c48, t0.c2, t0.c94)) NOT BETWEEN (((((t0.c2, t0.c0, t0.c48))<>((t0.c48, t0.c2, t0.c0))), t0.c2 COLLATE BINARY, MIN(t0.c48))) AND (((t0.c2 IN ()), ((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2)), (t0.c0 IN ())))) FROM t0 WHERE (NULLIF((('927847710') IS TRUE), CAST(0.3492586604570461 AS TEXT))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN t0.c0 THEN t0.c94 ELSE t0.c2 END THEN ((t0.c94)>=(t0.c2)) END FROM t0 WHERE (((CAST(NULL AS BLOB)) IS FALSE)); -- 0ms;
SELECT DISTINCT (((t0.c0)>=(t0.c48)) IN ()), ((((((t0.c2)OR(t0.c94)))AND(t0.c48)))!=(((((((((t0.c94)OR(0x2508a69d)))AND(t0.c0)))OR(t0.c94)))OR(t0.c48)))), LAG((((0.04788756129266236 IN ()))>>((((t0.c94)) NOT BETWEEN ((t0.c48)) AND ((t0.c94))))), (((((((((~ (t0.c0)))AND(t0.c2 COLLATE RTRIM)))OR(t0.c48)))AND((((t0.c2)) NOT BETWEEN ((t0.c94)) AND ((t0.c94))))))AND(((t0.c2)*(t0.c2)))), NULL) OVER () FROM t0; -- 1ms;
SELECT ALL CUME_DIST() OVER ( GROUPS ((t0.c0)|(((t0.c48) BETWEEN (t0.c0) AND ('z떕')))) PRECEDING) FROM t0; -- 0ms;
SELECT DISTINCT (NOT (((((t0.c0)OR(t0.c94)))AND(NULL)))) FROM t0 WHERE (((NULLIF(x'54c0', NULL)) NOT BETWEEN (CAST(NULL AS INTEGER)) AND ('403620266'))); -- 0ms;
SELECT ALL (COUNT(t0.c2) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (~ (NULLIF(t0.c2, t0.c0))), t0.c94, t0.c94 FROM t0; -- 0ms;
SELECT ALL (((('-823700472')OR(((x'') NOTNULL))))OR(CAST(t0.c94 AS INTEGER))) FROM t0; -- 0ms;
SELECT ((((t0.c94)=(t0.c94))) NOT BETWEEN (((t0.c48)OR(t0.c0))) AND ((t0.c0 IN ()))) FROM t0; -- 0ms;
SELECT '-1028444911' FROM t0; -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM t0; -- 0ms;
SELECT ((t0.c94)>=(((((t0.c48)OR(t0.c0)))AND(t0.c0)))), (((~ (t0.c94)))>=(CASE t0.c2  WHEN x'a43d979b' THEN t0.c48 END)), (((x'6b65'))<=((t0.c0))) FROM t0 WHERE (((('-749910072' IN ())) IS TRUE)); -- 0ms;
SELECT ALL ((((t0.c2)AND(t0.c2)))<<(COUNT(*))) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN (((t0.c0, x'', t0.c48, t0.c48, t0.c2))>((t0.c48, t0.c94, t0.c94, t0.c2, t0.c94))) THEN MAX(t0.c48) END FROM t0 WHERE (((((0X64370753 IN ('bV퀷d[-?')), CAST('56550906' AS INTEGER), ((0.6594290050475473)%(x''))))<((CASE WHEN NULL THEN '-786113643' ELSE 'LQnI0ಙ]_' END, (0.9961762092048357 IN ()), (+ (NULL)))))) LIMIT -368757065 OFFSET 1066730686; -- 0ms;
SELECT ALL (((((t0.c2) NOT BETWEEN (t0.c48) AND (t0.c2))))>=((JULIANDAY(NULL, t0.c0, t0.c48)))) FROM t0 WHERE ((- (SQLITE_COMPILEOPTION_USED(-1355968447)))); -- 0ms;
SELECT ((((0.4295659379424738)*(x''))) NOT BETWEEN (CAST(t0.c94 AS INTEGER)) AND ((~ (0x745f9171)))) FROM t0 WHERE (CASE ((((0.7748236418133602)OR(0xffffffff8602ff62)))AND(NULL))  WHEN ((NULL) IS FALSE) THEN ((NULL) NOT BETWEEN (')') AND ('56550906')) WHEN (((((((('d-ggNgvk')OR('\r')))OR('N')))AND(0.6258540007517649)))AND(NULL)) THEN (~ (x'')) WHEN CASE x''  WHEN '6,uw\rဿ+' THEN x'dce3' END THEN (- ('')) WHEN CAST(NULL AS BLOB) THEN (- ('EO')) WHEN (('-1832961001') BETWEEN (']E') AND (x'')) THEN CAST(0.6469128217373391 AS NUMERIC) END); -- 0ms;
SELECT DISTINCT x'' FROM t0; -- 0ms;
SELECT GROUP_CONCAT(LIKELIHOOD(t0.c0, 0.8830694669702365)), ((((json_array_length(t0.c94, t0.c94))AND((~ (t0.c0)))))OR((t0.c0 IN ()))), ((((HEX(t0.c48))AND(t0.c94)))AND('ሔW,')) FROM t0 LIMIT 1315329099 OFFSET -55027779;SELECT (((((((((('-1963679800') NOTNULL))OR(CAST(t0.c2 AS REAL))))AND((t0.c0 IN ()))))AND(t0.c0 COLLATE BINARY)))AND((t0.c94 IN (t0.c94)))), (- ((t0.c2 IN (t0.c2)))), 0xffffffffcae56b3c FROM t0 GROUP BY MIN((((t0.c94))<=((t0.c48))), (~ (t0.c2))) HAVING ((t0.c2)<(t0.c48 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT t0.c48 FROM t0 WHERE (((((0.11326880913757231)==(-2.01585114E8)))<<(((('t9U?'))>=((0.9918309051386246)))))); -- 0ms;
SELECT DISTINCT t0.c94 FROM t0; -- 0ms;
SELECT DISTINCT NTILE((~ (((t0.c48) IS FALSE)))) OVER () FROM t0;SELECT DISTINCT NULLIF(((t0.c48) BETWEEN (t0.c2) AND (t0.c94)), COUNT(*)), MIN(CASE t0.c0  WHEN t0.c48 THEN t0.c2 WHEN t0.c94 THEN t0.c94 WHEN t0.c48 THEN t0.c94 END, SUM(t0.c0), COUNT(*), COUNT(*), '', t0.c2 COLLATE RTRIM), CASE t0.c2 COLLATE BINARY  WHEN ((t0.c0)>(0xffffffffab369a1d)) THEN ((t0.c0)IS NOT('꼣')) WHEN (t0.c94 IN ()) THEN CAST('-1754273467' AS REAL) WHEN COUNT(*) THEN ((t0.c0) BETWEEN (x'') AND (t0.c48)) END, ((CASE WHEN t0.c48 THEN t0.c94 ELSE t0.c2 END) NOT BETWEEN (UNLIKELY(t0.c94)) AND (((((t0.c0)OR(t0.c0)))AND(t0.c48)))), CAST(t0.c2 AS BLOB) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT LEAD(load_extension(((t0.c48)<=(t0.c94)), CAST(t0.c48 AS BLOB)), ((CASE 1793858796  WHEN t0.c48 THEN t0.c2 END) NOT NULL), 0.3275588208693003) OVER (), CUME_DIST() OVER (), (((((((((((((NOT (t0.c94)))AND(((t0.c48)<(t0.c94)))))OR(((t0.c94)+(t0.c48)))))OR(TIME(NULL, t0.c0, x''))))AND(((t0.c2) NOT BETWEEN (t0.c48) AND (t0.c48)))))AND(((t0.c94) NOT BETWEEN (t0.c94) AND (t0.c94)))))OR(t0.c2)) FROM t0;SELECT DISTINCT 5.07747837E8 COLLATE NOCASE FROM t0 WHERE (CASE ((1485529347) BETWEEN (NULL) AND (x''))  WHEN 0Xffffffffcac39a70 THEN (NULL IN ()) END); -- 0ms;
SELECT DISTINCT (- (t0.c2)) COLLATE BINARY FROM t0 WHERE (CAST(CAST('56550906' AS INTEGER) AS REAL)) LIMIT 139636040; -- 0ms;
SELECT DISTINCT ((((((t0.c48)AND(t0.c48)))OR(t0.c0)))+(t0.c2 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT (~ ((t0.c48 IN (t0.c0)))) FROM t0 WHERE (((x'') NOT BETWEEN ((NULL IN (1793029724))) AND (CAST(0.06146964017946133 AS INTEGER)))); -- 0ms;
SELECT t0.c2, ((((((t0.c2)OR(t0.c48)))OR(t0.c48)))+(COUNT(*))), SUM((t0.c94 IN ())), IFNULL(((((((((0.30153031721887114)OR(t0.c48)))AND(NULL)))AND(t0.c0)))OR(NULL)), (((t0.c48))>=((t0.c2)))), CASE WHEN ((t0.c94)>(t0.c48)) THEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c94)) ELSE CASE WHEN t0.c48 THEN t0.c94 WHEN '713741692' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END FROM t0 WHERE (((((('-1751396297', '-190223133', NULL)) BETWEEN ((x'', 520262501, NULL)) AND (('', 0.5518328967861126, x'')))) IS TRUE)); -- 0ms;
SELECT (SUM(t0.c48) IN ()) FROM t0 WHERE ((1.97531083E8 COLLATE BINARY IN ())); -- 0ms;
SELECT ALL t0.c48 FROM t0; -- 0ms;
SELECT ALL NTH_VALUE((((((t0.c48 IN ()))AND(((t0.c0)IS(t0.c48)))))AND((t0.c2 IN ('|U')))), (((t0.c2, t0.c2, 2.6621948E7)) BETWEEN ((CAST(t0.c94 AS BLOB), (((t0.c0))<>((t0.c0))), x'')) AND ((((((((((t0.c2)AND(t0.c2)))AND(t0.c94)))AND(t0.c48)))OR(t0.c94)), ((t0.c48) NOT BETWEEN (t0.c2) AND (t0.c94)), CASE t0.c48  WHEN t0.c48 THEN t0.c0 ELSE t0.c2 END)))) OVER () FROM t0 LIMIT 559243706 OFFSET 1773531638;SELECT COUNT(*) FROM t0 WHERE (((x'')>>((0.09278137952905463 IN ())))); -- 0ms;
SELECT CASE WHEN (((t0.c48)) BETWEEN ((0.025793261182061822)) AND ((t0.c48))) THEN ((('x3'))>=((t0.c2))) WHEN t0.c94 COLLATE NOCASE THEN GROUP_CONCAT('999061651') WHEN '-590481758' THEN CASE t0.c0  WHEN t0.c2 THEN t0.c94 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c48 ELSE t0.c94 END ELSE t0.c48 END FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, ((SUM(t0.c94)) NOT BETWEEN (((((((((NULL)OR(t0.c48)))AND('	[')))AND('4쏅')))OR(t0.c94))) AND ((t0.c2 IN ()))), COUNT(*) OVER (), ((TOTAL(t0.c48)) NOT BETWEEN (COUNT(t0.c2)) AND (t0.c2 COLLATE BINARY)), (+ (((t0.c94)>=(t0.c94)))) FROM t0 LIMIT 1587303955 OFFSET -1356755638; -- 0ms;
SELECT DISTINCT CASE t0.c2  WHEN t0.c0 COLLATE RTRIM THEN '-1821526745' END FROM t0; -- 0ms;
SELECT DISTINCT ((('pC%#G3')) NOT BETWEEN ((((t0.c2) NOTNULL))) AND ((((t0.c48) BETWEEN (t0.c0) AND (t0.c48))))), ((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)) COLLATE NOCASE, (((t0.c94)) NOT BETWEEN (((('~X	9T')<<(t0.c2)))) AND ((((t0.c94) BETWEEN (t0.c48) AND (t0.c48))))) FROM t0 GROUP BY (((t0.c0)IS NOT(-1669869415)) IN ()) HAVING ((((- (t0.c48)), ((((((((t0.c0)OR(t0.c94)))OR(t0.c48)))OR(x'')))AND(t0.c48)), (((t0.c94)) BETWEEN ((t0.c48)) AND ((t0.c2)))))<=(((t0.c2 IN ()), t0.c0 COLLATE RTRIM, (t0.c48 IN ())))); -- 0ms;
SELECT DISTINCT NTILE((((t0.c0)>>(t0.c94)) IN ())) OVER () FROM t0;SELECT DISTINCT ABS(DISTINCT ROUND(t0.c2, t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT (((((0.6007914667749322)<(t0.c94))))<((CASE WHEN t0.c48 THEN t0.c94 WHEN t0.c48 THEN t0.c48 WHEN t0.c0 THEN t0.c94 WHEN t0.c2 THEN t0.c94 WHEN t0.c2 THEN t0.c48 END))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c2)) BETWEEN ((t0.c48)) AND ((t0.c2))))-(((t0.c2)%(t0.c94)))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c48 FROM t0; -- 0ms;
SELECT ((((t0.c94)==(t0.c94)))*(((t0.c48)>=(t0.c0)))) FROM t0 WHERE ((((((x'f2cc'))==((NULL))))!=(''))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0 WHERE (((LIKELY(x''))==(((0.709969496605625) BETWEEN (0.4101766053417829) AND (NULL))))) GROUP BY (- (t0.c2)), (((0Xfffffffff23b72ea)) NOT BETWEEN ((((t0.c94)<(t0.c94)))) AND ((((t0.c94)LIKE(t0.c2))))), (((t0.c2, NULL, t0.c48, t0.c0, t0.c2)) BETWEEN ((((t0.c0) BETWEEN (t0.c48) AND (t0.c0)), CASE WHEN NULL THEN t0.c94 END, CAST(t0.c0 AS TEXT), x'0496', (((t0.c2))==((t0.c2))))) AND ((((t0.c94) BETWEEN (t0.c0) AND (t0.c0)), t0.c0, 0.9790862926414036, json_insert(t0.c2, t0.c94, t0.c0, t0.c48, NULL), CASE t0.c0  WHEN t0.c94 THEN t0.c48 WHEN t0.c2 THEN t0.c94 WHEN t0.c48 THEN t0.c48 END))); -- 0ms;
SELECT t0.c0 FROM t0 WHERE (CAST(((0.8333935000174834) NOT BETWEEN (0.7915653606639257) AND (1.61589931E9)) AS BLOB)); -- 0ms;
SELECT CASE t0.c94 COLLATE RTRIM  WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c94 AS TEXT) ELSE ((((t0.c94)AND(t0.c48)))AND(t0.c48)) END FROM t0 WHERE (CASE WHEN ((0.2786571384140103)/(0X1f4ae81)) THEN ((0.007757013225538678) IS TRUE) WHEN (- (0.5818073355699924)) THEN (~ ('a?^뮫_Z-')) WHEN ((NULL) ISNULL) THEN 0X2985b691 END); -- 0ms;
SELECT ((COALESCE(t0.c2, t0.c2, t0.c0, t0.c94))GLOB(((t0.c2)LIKE(t0.c48)))) FROM t0; -- 0ms;
SELECT DISTINCT (((((((((t0.c0 IN ()))OR(CAST(t0.c2 AS REAL))))AND(SUM(t0.c48))))OR(t0.c48 COLLATE NOCASE)))OR(380405674)) FROM t0 ORDER BY (((0Xcbfd8f4))>((t0.c2))), ('jlw1ﲂ' IN (((t0.c2) ISNULL))) ASC; -- 1ms;
SELECT DISTINCT (((t0.c48 IN ()))IS(GROUP_CONCAT(t0.c0))) FROM t0 WHERE ((((0.7964245746417788)<(NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((((t0.c2)+('95600429'))) NOT BETWEEN (SUM(t0.c48)) AND ((((t0.c94))=((t0.c94))))) FROM t0 WHERE ((((NOT (x'')))<=((NULL IN ())))) ORDER BY t0.c0  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t0.c2) ISNULL))&((~ (t0.c48)))) FROM t0 WHERE ((((((((('-114158603')AND(x'')))OR('1793858796')))OR(0.5257895439040585)))OR('')) COLLATE RTRIM); -- 0ms;
SELECT ((((t0.c2)<<(t0.c0))) NOT BETWEEN (t0.c94 COLLATE NOCASE) AND ((t0.c2 IN ()))), ((((t0.c2)/(t0.c94)))OR(CAST(t0.c0 AS INTEGER))), CASE ((t0.c48)LIKE(t0.c2))  WHEN (('(Ա')LIKE(t0.c48)) THEN ((t0.c48) ISNULL) WHEN NULL THEN (((t0.c2))<>((t0.c2))) WHEN ((t0.c2) BETWEEN (9.65847404E8) AND (t0.c0)) THEN (+ (t0.c94)) END FROM t0 WHERE (TYPEOF(DISTINCT GLOB('', '992921592'))) GROUP BY (((t0.c0)) NOT BETWEEN ((((t0.c48)AND(t0.c0)))) AND ((t0.c0 COLLATE RTRIM))) LIMIT -1077631035; -- 0ms;
SELECT t0.c94 FROM t0 GROUP BY t0.c2, ((IFNULL(NULL, t0.c2)) ISNULL), CAST((t0.c94 IN ()) AS REAL); -- 0ms;
SELECT DISTINCT (((((NULL IN (t0.c94)))AND((((t0.c0))>=((t0.c94))))))OR(((t0.c94)<<(t0.c0)))), ((t0.c94) NOT NULL), ((((t0.c48) NOT BETWEEN (t0.c94) AND (t0.c0)))>=(((t0.c94) BETWEEN (t0.c94) AND (t0.c94)))) FROM t0; -- 0ms;
SELECT ALL (((((t0.c0) IS TRUE)))=(((((('[oq1*')OR(t0.c94)))AND(t0.c0))))) FROM t0 WHERE (((NULL)LIKE('')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT -1944586382, ((((472944975)OR(((((t0.c2)OR(t0.c2)))AND(t0.c0)))))OR(((t0.c94)-(t0.c48)))), ((((((((x'e434')OR(((((t0.c94)OR(t0.c94)))OR(t0.c94)))))AND(CAST(t0.c48 AS BLOB))))OR((((t0.c48, t0.c94, t0.c0))>=((t0.c48, t0.c94, t0.c48))))))OR(SUM(t0.c2))) FROM t0 NOT INDEXED; -- 0ms;
SELECT (+ (NULL)) FROM t0 WHERE (HEX(4.72944975E8)); -- 0ms;
SELECT DISTINCT ((t0.c94)||(t0.c48)) COLLATE NOCASE FROM t0 WHERE (CAST(((((((((((((((((x'2409')OR(0.8232160297092689)))AND('')))AND(NULL)))OR(NULL)))AND('-831938321')))AND('-0.0')))AND('9X*')))OR(x'5843')) AS NUMERIC)); -- 0ms;
