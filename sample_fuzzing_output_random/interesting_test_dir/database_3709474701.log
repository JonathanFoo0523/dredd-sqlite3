-- Time: 2024/06/07 18:20:26
-- Database: database1
-- Database version: 3.40.0
-- seed value: 3709474701
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
PRAGMA main.journal_size_limit = -9212799603928851; -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 1ms;
PRAGMA temp.reverse_unordered_selects = true; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.5823148267353374); -- 1ms;
PRAGMA temp.cache_spill = false; -- 0ms;
VACUUM; -- 1ms;
PRAGMA main.foreign_keys = true; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1262989312,13');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='M#倀c%', c0=0.7532907083305205; -- 0ms;
PRAGMA main.threads; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1262989312);\n; -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1262989312);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=(NULL, 0xfffffffff6a7b977, 0.7532907083305205); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA optimize; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.ignore_check_constraints = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.34891759398750255; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18909'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 8ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('xj'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR REPLACE vt0 SET c0='-156780169' WHERE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))OR(0Xffffffffb4b85000)))OR(vt0.c0)))AND(vt0.c0)), CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0))>=((vt0.c0))))) AND ((((vt0.c0) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0Xffffffffdc04d45b, c0=-1e500 WHERE LOWER(DISTINCT CAST(vt0.c0 AS INTEGER)); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=-156780169 WHERE (((~ (vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))); -- 0ms;
UPDATE vt0 SET (c0)=(-1.56780169E8) WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ('-603663269'))) AND ((- (vt0.c0)))); -- 1ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(-1262989312); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56716'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '4389'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '5527'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET c0='籣a㝩*9CDZ' WHERE ((vt0.c0)/(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1662211832'); -- 0ms;
DELETE FROM vt0 WHERE ((vt0.c0) ISNULL); -- 0ms;
UPDATE vt0 SET c0=NULL, c0=NULL, c0=NULL; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0, c0)=(-603663269, 'y*'); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(NULL); -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, c1 UNINDEXED, c2 UNINDEXED); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0=x''; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.787680017367545); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.07372158338093193, x'') WHERE ((vt0.c0) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('611923817'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.5823148267353374, NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.34891759398750255); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.5503960220562472), ('l&^'), (''); -- 1ms;
CREATE TEMP TABLE t0 (c0 BLOB , c1 REAL , c2 REAL COLLATE RTRIM ); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(NULL); -- 1ms;
UPDATE OR FAIL vt0 SET c0=NULL WHERE 0.0916151570514665; -- 0ms;
UPDATE vt1 SET c0=0.251620166524707; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM main; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CASE WHEN 'PQ' THEN 0.8649715274599422 ELSE x'9113' END)) AND ((CAST('' AS INTEGER)))); -- 1ms;
UPDATE vt1 SET c0=0x33a8eb75 WHERE '/倀PSQ'; -- 1ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
PRAGMA optimize; -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c1, c2, c0)=(x'', 0.28062419402294825, x'b21d') WHERE highlight((~ (vt1.c2)), (NOT ('-1262989312')), (((0.4158035598304469)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))), ((vt1.c0) IS FALSE)); -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0Xffffffffbe008d87); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt0, t0, vt1 WHERE ((((0.31471391034868224)) BETWEEN ((NULL COLLATE NOCASE)) AND ((-223326792))));SELECT DISTINCT CASE ((vt1.c1)>(vt1.c0))  WHEN GROUP_CONCAT(x'') THEN ((t0.c0) NOT BETWEEN (vt1.c2) AND (rt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c4) AND (vt1.c1)) THEN CAST(rt0.c4 AS NUMERIC) WHEN (((rt0.c2))=((x''))) THEN ((rt0.c4) NOT BETWEEN (t0.c1) AND (rt0.c1)) WHEN ((rt0.c2)>>(vt1.c0)) THEN ((rt0.c0)OR(rt0.c1)) WHEN ((((rt0.c2)AND(t0.c2)))AND(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (vt1.c2) AND (t0.c1)) ELSE ((t0.c0)IS NOT(rt0.c2)) END FROM vt1, vt0, rt0, t0 WHERE (LIKELY(DISTINCT 0.7119283596755058 COLLATE RTRIM)); -- 0ms;
SELECT AVG((((vt1.c2))>((t0.c2)))) FROM vt1, vt0 WHERE (((((((((((0.4122708532451821) BETWEEN (-2085255835) AND (x'')))OR(x'8023')))OR((((('-1246713865')OR('>')))AND(x'')))))OR(((NULL) NOT BETWEEN ('PQ') AND (1401340524)))))AND((('E홣yTZ') ISNULL))));SELECT DISTINCT (((((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c0)), CAST('ꟷ' AS TEXT), rt0.c3))>((AVG(rt0.c2), ((((rt0.c4)AND(vt1.c2)))AND(vt1.c1)), 0.22878485488229272))) FROM t0, vt0, rt0 ORDER BY NULL, vt1.c1 DESC;SELECT (vt1.c0 COLLATE RTRIM IN ((- (t0.c0)))) FROM rt0 WHERE ((((- (0x67d0de67))) NOT NULL)) UNION SELECT DISTINCT COUNT(*) FROM t0, vt0, rt0 WHERE (((((('-2085255835') NOTNULL), ((((((((x'')AND(NULL)))OR(NULL)))AND(NULL)))AND(0.57408397232121)), ((x'') NOT BETWEEN (0.5257224624767107) AND ('-156780169'))))<((((((0.3468323300790337)OR(NULL)))OR('695717133')), ((x'edd2acdb')<=('0.7532907083305205')), (~ ('J	'))))));SELECT DISTINCT CASE WHEN (((t0.c2))<((t0.c1))) THEN ((rt0.c3) NOT NULL) WHEN (((t0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c2))) THEN ((t0.c0)>=(t0.c1)) WHEN ((t0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((t0.c0)|(rt0.c4)) ELSE (((rt0.c3))<>((t0.c2))) END FROM t0, rt0, vt0, vt1 WHERE (((((1.456068195E9) NOT NULL))||((NOT (NULL))))) UNION ALL SELECT ((((((vt1.c1) NOTNULL))AND(MIN(t0.c0))))AND(((t0.c2)AND(rt0.c2)))) FROM vt0, t0, vt1 FULL OUTER JOIN rt0 ON CASE CASE WHEN x'fe43ee0d' THEN vt1.c1 END  WHEN ((vt1.c2) BETWEEN (rt0.c3) AND (rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE CAST(rt0.c1 AS BLOB) END WHERE (((((((((((((((((((((0.8933717204309096)AND('-833039247')))OR(NULL)))OR(NULL)))AND('1133870179')))OR(CAST(x'016d' AS INTEGER))))AND((('')<(-22680878)))))AND(((x'')LIKE(0.57408397232121)))))AND('')))AND(x'')))AND((((0x4b4cb4c9))=((0.4158035598304469)))))); -- 0ms;
SELECT LEAD(((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))-(CASE rt0.c0  WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c0 WHEN t0.c2 THEN vt1.c1 ELSE rt0.c4 END)), ((((((t0.c2)OR(x'')))OR(t0.c2)))>>(((0Xfffffffffbc46475) ISNULL))), (((NULL))>((((vt1.c1)IS(rt0.c3)))))) OVER ( RANGE (((CAST(vt0.c0 AS REAL)))>=((CASE WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) PRECEDING EXCLUDE CURRENT ROW) FROM vt0, vt1, t0, rt0 WHERE (CASE CAST(0X487c3392 AS BLOB)  WHEN (((0.043572234491813466)) BETWEEN (('0.22878485488229272')) AND ((NULL))) THEN CAST(x'' AS NUMERIC) END);SELECT ALL ((((((((((vt1.c2)>(rt0.c0)))AND(((rt0.c4)/(vt1.c1)))))AND(rt0.c4 COLLATE RTRIM)))OR(((vt1.c1)IS(rt0.c4)))))OR('611923817')) FROM vt1, t0 WHERE ('1844763935');SELECT DISTINCT CASE (- (t0.c0))  WHEN '-656571841' THEN ((NULL)||(vt1.c1)) WHEN (((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))) THEN (- (vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN TOTAL_CHANGES() END FROM rt0, vt0, t0, vt1; -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS NUMERIC))>(CASE t0.c1  WHEN t0.c2 THEN rt0.c3 WHEN vt1.c1 THEN t0.c2 WHEN vt1.c2 THEN rt0.c2 ELSE t0.c0 END)) FROM rt0;SELECT DISTINCT vt1.c0 FROM vt1, t0, vt0 GROUP BY (((- (t0.c2)))*(0.8500721555240159)), ((vt1.c1) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE NOCASE, (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0))))==((((0xffffffffac611d11)||(rt0.c3)))));SELECT DISTINCT NTH_VALUE(((json_array(-2085255835, t0.c2, t0.c2, t0.c0, t0.c0, t0.c1)) BETWEEN ((t0.c2 IN ())) AND (((t0.c1) ISNULL))), CASE ((x'')LIKE(t0.c2))  WHEN t0.c2 THEN ('' IN ()) ELSE ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) END) OVER () FROM t0 WHERE (CAST(CASE x''  WHEN 1263318217 THEN NULL ELSE x'' END AS TEXT)); -- 0ms;
SELECT LOWER(x'779a'), TYPEOF(((rt0.c4) IS TRUE)), ROW_NUMBER() OVER ( ORDER BY CASE WHEN (x'' IN ()) THEN ((rt0.c3)|(vt1.c0)) ELSE ((t0.c2)/(0.1548761980981731)) END ASC) FROM vt0, t0;SELECT GROUP_CONCAT('b5䶸*OuRzx') FILTER(WHERE CASE ((t0.c2) NOT NULL)  WHEN vt0.c0 COLLATE BINARY THEN ((NULL) NOT BETWEEN (vt1.c1) AND (rt0.c4)) ELSE rt0.c3 COLLATE RTRIM END) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW) FROM vt0 WHERE (((('0')) NOT BETWEEN ((((('1945758575')) BETWEEN (('-71015307')) AND ((0.3120676163202867))))) AND (((('|6') NOT BETWEEN (NULL) AND (NULL)))))) LIMIT -2104923891 OFFSET -1065660666;SELECT (((t0.c0 IN ())) IS FALSE), (+ ((rt0.c1 IN ()))), (((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))LIKE(((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.16735980058804079)))) FROM t0 WHERE (ABS((('2R') ISNULL))) GROUP BY ((NULL)AND(LIKELY(vt0.c0))) HAVING ((((SQLITE_COMPILEOPTION_USED(NULL))AND(rt0.c3 COLLATE BINARY)))OR(CAST(vt0.c0 AS TEXT)));SELECT CAST(rt0.c1 AS REAL) COLLATE RTRIM FROM t0, vt0 WHERE (((('L')GLOB(x'')) IN ()));SELECT ALL 'q舮' FROM vt0, vt1, rt0, t0; -- 0ms;
SELECT DISTINCT SUM(CAST(vt1.c1 AS NUMERIC)) FROM vt0;SELECT (~ ('')), (CASE WHEN vt1.c1 THEN 0xffffffffc0339e4d END IN ()), ((CASE WHEN rt0.c4 THEN rt0.c4 ELSE vt1.c1 END) NOTNULL) FROM vt0, t0, vt1;SELECT DISTINCT (((((vt1.c1) NOTNULL)))<((((t0.c2)%(rt0.c0))))), CASE vt1.c2  WHEN vt0.c0 THEN rt0.c1 ELSE '-156780169' END COLLATE NOCASE, (+ (rt0.c2)) FROM vt1, t0, vt0 WHERE (((((NULL) BETWEEN ('') AND ('')))>((((x''))==(('955091643'))))));SELECT DISTINCT SUM(TOTAL_CHANGES() COLLATE BINARY) FILTER(WHERE ((((rt0.c4)/(rt0.c3)))*((((vt1.c1))<=((vt1.c2)))))) OVER () FROM rt0, vt0;SELECT DISTINCT t0.c2 FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT (NOT ((((vt1.c2))<((t0.c2))))) FROM t0, vt0;SELECT ((TRIM(t0.c0)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND ('0.3468323300790337'))) AND (CAST(t0.c1 AS REAL))) FROM rt0, vt0, t0, vt1; -- 0ms;
SELECT vt1.c1, MIN(((rt0.c2) BETWEEN (vt0.c0) AND (vt1.c0))), (((+ (vt0.c0)))<(((t0.c2) IS TRUE))) FROM t0, vt1, rt0 WHERE ((NOT (0Xffffffffb5b0a7f7)));SELECT DISTINCT (('765204952')GLOB(SUM(vt0.c0))) FROM vt0, rt0 WHERE ((((((('w]')AND('P*vUf')))AND('-833039247'))) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(UPPER(DISTINCT vt1.c2) AS REAL) FROM vt1, rt0, t0, vt0 WHERE ((('aa')LIKE((((NULL))<((x'')))))); -- 0ms;
SELECT DISTINCT ((vt1.c1 IN (t0.c1, 0.805364943372543)) IN ()), CASE WHEN ((rt0.c4) NOT NULL) THEN NULL COLLATE NOCASE WHEN ((rt0.c4) NOTNULL) THEN ((vt1.c0) BETWEEN (vt1.c2) AND (rt0.c1)) WHEN ((vt1.c1)IS NOT(t0.c1)) THEN ((vt1.c0)&(vt1.c1)) ELSE rt0.c3 END, 0.6288255513377398 FROM t0, rt0, vt0 WHERE (UNLIKELY(DISTINCT (('-1065660666') NOT NULL)));SELECT DISTINCT LOWER(DISTINCT CASE vt0.c0  WHEN rt0.c0 THEN t0.c2 END) FROM vt1 WHERE ((((+ (NULL)))|(NULL COLLATE BINARY)));SELECT ABS(rt0.c3) FROM vt0, t0, rt0 WHERE ((((('g䱪\r8r') BETWEEN (0Xfffffffffea5ead2) AND (x'')))<((('Oa') IS TRUE)))); -- 0ms;
SELECT DISTINCT x'' FROM t0, vt1 NOT INDEXED, rt0, vt0 WHERE (0.3247258276177821) LIMIT -240047453 OFFSET -289877323; -- 1ms;
SELECT DISTINCT COUNT(*) FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON CASE ((rt0.c2) ISNULL)  WHEN '' THEN CASE rt0.c3  WHEN vt1.c0 THEN t0.c0 END WHEN (rt0.c1 IN (t0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN rt0.c4 THEN ((t0.c0)<=(t0.c1)) ELSE ((rt0.c4)AND(rt0.c4)) END ORDER BY CASE ((vt1.c1)>(t0.c1))  WHEN (rt0.c3 IN ()) THEN ((x'')<(-458439475)) END; -- 0ms;
SELECT DISTINCT (CASE WHEN t0.c0 THEN rt0.c3 END IN (rt0.c3)), NULL COLLATE RTRIM, COUNT(((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c1)))OR(vt0.c0)))AND('0.8649715274599422'))) OVER () FROM t0 WHERE (((('-1402921711') NOT BETWEEN ('0.8500721555240159') AND (0.012364750364965316)) IN (((((x'b4b6')AND('	JooK')))AND('1263318217')), ((0xffffffffac611d11)>=('m#倀c%')))));SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1, t0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY ((+ (rt0.c3)) IN ()), LOWER(rt0.c2) COLLATE RTRIM COLLATE BINARY) FROM t0, rt0, vt1; -- 0ms;
SELECT DISTINCT (~ (CAST(rt0.c1 AS REAL))), (((vt1.c0)) NOT BETWEEN (('L\rkL')) AND ((((rt0.c0) NOT NULL)))), ((((((((((t0.c0) IS TRUE))AND(x'60ab')))OR(((rt0.c1)>(rt0.c4)))))OR((((rt0.c4, vt1.c0, vt1.c1, vt0.c0, 0.1548761980981731, rt0.c2, NULL)) NOT BETWEEN ((rt0.c3, t0.c2, t0.c1, rt0.c1, rt0.c1, t0.c2, vt1.c2)) AND ((vt1.c1, rt0.c3, vt1.c1, t0.c1, rt0.c2, vt1.c1, '0.3120676163202867'))))))OR(MAX(rt0.c3))) FROM t0, vt1, rt0 NOT INDEXED;SELECT DISTINCT (((t0.c1)) NOT BETWEEN (((((rt0.c0))>=((rt0.c2))))) AND ((((((t0.c2)OR(t0.c1)))OR('-0.0'))))) FROM vt1, vt0, rt0, t0; -- 0ms;
SELECT ((((json_quote(vt1.c2))AND(0.38229192434046677)))OR(((((((((rt0.c1)AND('-1304071888')))AND(t0.c1)))OR(-2104923891)))OR(rt0.c1)))) FROM rt0, t0, vt1 WHERE (((((0.44418529098773396)>(x''))) NOT BETWEEN ((((0.1548761980981731))>((NULL)))) AND (CASE WHEN -2.23326792E8 THEN '-2108631273' END))); -- 0ms;
SELECT DISTINCT '866708341', (((((t0.c2))>((rt0.c1))))OR(((rt0.c4)<<(rt0.c2)))), ((CASE WHEN rt0.c4 THEN vt0.c0 END) IS TRUE) FROM vt1, t0;SELECT DISTINCT SUM(SUBSTR(rt0.c3, vt1.c1)) COLLATE NOCASE FROM rt0, t0, vt1 ORDER BY ((CAST(t0.c0 AS TEXT))>>(rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST LIMIT -410131736; -- 1ms;
SELECT ALL (((JULIANDAY(t0.c0, x'', rt0.c2), CASE WHEN t0.c0 THEN rt0.c1 ELSE vt1.c2 END, (((rt0.c4))<>((vt1.c0)))))>=((((vt1.c2)+(rt0.c2)), ((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0)), vt1.c1))), CASE CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 END  WHEN CASE rt0.c1  WHEN '' THEN t0.c1 END THEN (~ (t0.c0)) WHEN TRIM(NULL, rt0.c1) THEN GLOB(rt0.c3, t0.c2) WHEN TOTAL(rt0.c0) THEN vt1.c0 WHEN (- (vt0.c0)) THEN ((((t0.c1)AND(vt0.c0)))AND(rt0.c2)) WHEN ('h?[' IN ()) THEN ((((((((rt0.c4)AND(t0.c1)))AND(vt0.c0)))AND(-5.90577106E8)))AND(t0.c0)) ELSE ((t0.c2) BETWEEN ('-1065660666') AND (-7.1015307E7)) END, rt0.c0 FROM rt0, vt1;SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY (~ ((((vt1.c0))<>(('-666910109'))))) DESC), (((rt0.c4)!=(rt0.c0)) IN (((t0.c0)&(t0.c1)))), (('-656571841') IS FALSE) FROM rt0, t0, vt0;SELECT ((((x'') BETWEEN (t0.c0) AND ('yKRN')))LIKE(vt1.c2)) FROM rt0;SELECT DISTINCT (((MAX(rt0.c0)))==(((t0.c0 IN (vt1.c1, rt0.c4))))), RANK() OVER ( ORDER BY ((((vt1.c1)AND(CAST(rt0.c0 AS REAL))))OR(((t0.c1)|(rt0.c2))))  NULLS FIRST), SUM('1401340524') OVER ( ORDER BY (('-451878264')<>((NOT (t0.c2)))) ASC  NULLS LAST) FROM t0, vt0, rt0;SELECT DISTINCT ((((vt1.c2)<(t0.c2)))*(GROUP_CONCAT(vt1.c1))) FROM rt0, t0;SELECT ((MIN(NULL))+((((vt1.c0))==((vt0.c0))))) FROM t0;SELECT DISTINCT ((((vt0.c0)>=(rt0.c3)))GLOB(CAST(rt0.c1 AS TEXT))), (~ (x'9ab5' COLLATE NOCASE)), ((((vt0.c0) BETWEEN (t0.c1) AND (rt0.c0))) IS TRUE) FROM vt0, vt1 WHERE (CASE WHEN 1110159344 THEN x'' ELSE NULL END COLLATE RTRIM) GROUP BY ((((((t0.c2)AND(x'')))OR(rt0.c2))) IS FALSE);SELECT DISTINCT (((rt0.c4)) BETWEEN (((~ ('-740654834')))) AND ((((rt0.c3)-(rt0.c3))))) FROM vt1, rt0, vt0, t0 WHERE ((((((x'3af2')OR('Wsy\eL')))AND('')) IN ())); -- 0ms;
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE ((NOT (x'')) COLLATE NOCASE) LIMIT -739066195 OFFSET -1445832660; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)*(t0.c2)))AND(json_array(t0.c0, vt1.c1))))OR('1456068195')) FROM vt1, vt0;SELECT ((((vt0.c0) ISNULL))>=((NOT (rt0.c0)))) FROM rt0, vt1 WHERE (CAST(CAST(x'' AS TEXT) AS TEXT)) ORDER BY ((((((((CASE t0.c0  WHEN rt0.c1 THEN vt1.c2 END)AND((t0.c2 IN (t0.c0)))))AND(CASE t0.c0  WHEN vt1.c0 THEN rt0.c4 END)))OR(((t0.c0)LIKE(vt1.c0)))))AND((((NULL, vt1.c2, vt1.c0))<>((t0.c2, t0.c0, t0.c0))))) DESC, ((((vt1.c0)<<(t0.c2)))&(((vt1.c0) BETWEEN (t0.c1) AND (rt0.c0))))  NULLS FIRST;SELECT DISTINCT (+ (((((vt1.c0)AND(rt0.c0)))AND('2008033896')))), CUME_DIST() OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP), ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 END)<<(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) IS FALSE))IS(UNLIKELY(DISTINCT rt0.c0))) FROM vt1;SELECT DISTINCT (((((rt0.c2)&(rt0.c0)), rt0.c1 COLLATE NOCASE, ((rt0.c3) ISNULL)))>((((((t0.c0)OR(x'')))OR(rt0.c3)), CAST(t0.c0 AS TEXT), ((vt1.c0)LIKE(rt0.c2))))) FROM rt0, vt1, vt0 WHERE ((((((((((((((('2130876758')AND(NULL)))AND(NULL)))AND(0xffffffffaf2f2b3c)))AND('1741741671')))OR(0xffffffffa68d5d3f)))OR(0.7357317352294758))) BETWEEN (('' IN ())) AND (((NULL) ISNULL))));SELECT COUNT(*), (((((- (t0.c2)))AND(MAX(rt0.c3))))OR((((rt0.c1))!=((-680233536))))), ((((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c4 END)AND(((((rt0.c0)AND(vt1.c1)))OR('-1070358963')))))AND(RTRIM(vt1.c2))) FROM t0;SELECT DISTINCT ((rt0.c1) IS TRUE), GROUP_CONCAT((vt1.c0 IN ())) OVER (), (((vt1.c0)==(NULL)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 IN ()) IN ()), COALESCE(DISTINCT ((((((((t0.c2)AND(vt1.c1)))OR(rt0.c3)))OR(vt1.c2)))OR(t0.c1)), ((rt0.c0)>>(vt0.c0))), (NULLIF(DISTINCT vt1.c0, t0.c0) IN ()) FROM vt1, t0, vt0;SELECT ALL (((((vt1.c2)>(x''))))<=(((((rt0.c1, vt0.c0, t0.c1))<((rt0.c4, vt1.c2, rt0.c4)))))) FROM vt1 WHERE ((('-1560875714')%(TRIM(x''))));SELECT ALL (((t0.c0 IN ()))==(((vt0.c0) NOTNULL))) FROM rt0 NOT INDEXED, t0 WHERE (CAST(((((NULL)AND('-1500684993')))AND(-132907214)) AS INTEGER));SELECT DISTINCT '1555823283' FROM vt1; -- 0ms;
SELECT DISTINCT CASE CAST(vt1.c0 AS NUMERIC)  WHEN ((vt1.c2)|(rt0.c3)) THEN CASE t0.c2  WHEN x'' THEN rt0.c3 ELSE rt0.c3 END ELSE ((rt0.c1)>=(t0.c2)) END, (rt0.c0 COLLATE RTRIM IN ()), LIKELIHOOD(AVG(rt0.c0), 0.4354921232565031) FROM rt0, vt0, vt1 WHERE (NULL);SELECT DISTINCT CAST((rt0.c1 IN (rt0.c0)) AS TEXT), NULL, SUM(CASE rt0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END) OVER ( ORDER BY (((((((((((rt0.c4)AND(rt0.c2)))AND(vt1.c1)))AND(t0.c0)))AND(t0.c0))))>=((((((NULL)AND('*i4')))AND(vt0.c0)))))  NULLS LAST, 0.48273788319446365 ASC, ((((((t0.c0)OR(t0.c0)))AND(rt0.c1)))GLOB(((t0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ASC) FROM vt0, vt1 WHERE (-1);SELECT ALL (~ (COUNT(rt0.c2))) FROM vt1, rt0; -- 0ms;
SELECT ((vt1.c1)IS NOT(x'4be3')) COLLATE NOCASE, GROUP_CONCAT(((t0.c2) NOTNULL)) OVER (), x'' FROM vt1, vt0, rt0 WHERE (((((x'1521ba19') BETWEEN (0X2f13dcd7) AND (0.13833895705507526)))+(((0.9327295062096215) ISNULL)))) GROUP BY 0.5068873571003881;SELECT DISTINCT (((((rt0.c1 IN (t0.c0)))OR(MAX(rt0.c4))))OR(vt1.c1 COLLATE RTRIM)) FROM vt1 GROUP BY ((x'1bd8')&(CASE WHEN rt0.c3 THEN vt1.c0 END)) HAVING ((((t0.c0)<(t0.c1)))|((((vt1.c1))<((vt1.c0)))));SELECT LEAD(CASE WHEN json_array(rt0.c1, rt0.c0, rt0.c1, rt0.c4) THEN CASE WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN rt0.c0 THEN vt1.c1 END WHEN x'' THEN json_valid('') WHEN NULL THEN ((vt1.c0) ISNULL) END, ((((vt1.c1) NOTNULL))+((rt0.c0 IN ()))), (((~ (rt0.c1))) NOT BETWEEN (rt0.c0) AND (0xffffffff8c4881b9))) OVER ( ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))) ISNULL)), x'' COLLATE BINARY, ((x'') BETWEEN ((~ (rt0.c1))) AND (((t0.c2) NOTNULL))) FROM vt1, rt0 WHERE (((CAST(1216099218 AS REAL)) IS FALSE));SELECT DISTINCT ROW_NUMBER() OVER ( PARTITION BY (((vt0.c0 IN ()))<=(CAST(rt0.c4 AS NUMERIC))), '2056502059') FROM t0 LEFT OUTER JOIN vt1 ON (((rt0.c4 IN (t0.c2)))AND('')) FULL OUTER JOIN vt0 ON MAX('0.44418529098773396', ((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c1))) WHERE (((0.37460868389834356 COLLATE RTRIM)=(NULL COLLATE RTRIM)));SELECT CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c4)) END FROM vt1, rt0, vt0, t0 LIMIT -739066195; -- 1ms;
SELECT ALL (((rt0.c0 IN ())) NOTNULL), 0.4158035598304469, SUM(((vt0.c0) NOT BETWEEN ('') AND (rt0.c4))) FROM rt0, vt0, t0 WHERE (((CASE -6.56571841E8  WHEN NULL THEN 0Xffffffffffb43f9f WHEN 0.4500771978606991 THEN '8T᳽F|x꿾' WHEN NULL THEN '516651023' END) NOT BETWEEN (CASE WHEN NULL THEN -1919015183 END) AND ((- ('4+#8h9'))))); -- 0ms;
SELECT GROUP_CONCAT(((vt1.c0) NOT BETWEEN (t0.c1) AND (2.056502059E9))) FROM t0, vt0 ORDER BY ((((vt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))) AND ((((vt1.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))));SELECT DISTINCT ((CASE rt0.c3  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt1.c2 WHEN vt1.c2 THEN t0.c0 ELSE vt1.c1 END) BETWEEN (TOTAL(rt0.c0)) AND (((vt1.c0)*(vt0.c0)))) FROM t0 WHERE (((((2130876758) BETWEEN (NULL) AND (0Xffffffffa9d2582c)))||((0x422baff0 IN ()))));SELECT ALL ((((((((((((rt0.c1)OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(CAST(t0.c1 AS TEXT))))AND(((vt1.c2)|(vt0.c0)))) FROM vt0, vt1, rt0, t0; -- 1ms;
SELECT DISTINCT SUM(highlight(rt0.c1, 2.008033896E9, t0.c0, t0.c1)) FROM vt1, vt0, rt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c1)*(rt0.c4)) THEN (~ (rt0.c2)) END FROM vt1 WHERE (UNLIKELY('*ၧ') COLLATE NOCASE COLLATE RTRIM) LIMIT 1401340524;SELECT DISTINCT 0.3759047638293611 FROM vt0, t0, rt0 WHERE (((((((((('(jQ(gv3' IN ()))AND((~ (0.38229192434046677)))))OR('wsy\el' COLLATE BINARY)))AND(CASE ''  WHEN '-608101123' THEN x'' ELSE x'' END)))AND(((((((((x'')AND('#Ъ')))OR(0X487c3392)))AND(-6.03663269E8)))OR('jj+*'))))); -- 0ms;
SELECT ((NOT (t0.c0)) IN ()) FROM vt0, t0, vt1; -- 1ms;
SELECT x'deb5' FROM t0, rt0, vt0 WHERE (((((json_quote(NULL))AND(((NULL) NOT NULL))))OR(0.1548761980981731))); -- 0ms;
SELECT DISTINCT (+ (((vt1.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) FROM vt1 WHERE ((CAST('#~' AS BLOB) IN ())) ORDER BY CASE WHEN CAST(rt0.c1 AS TEXT) THEN (('|6') BETWEEN (vt0.c0) AND (vt1.c1)) WHEN (NOT (rt0.c0)) THEN ((((((((t0.c0)OR(vt1.c2)))OR(rt0.c3)))AND(t0.c2)))OR(vt1.c2)) WHEN rt0.c1 COLLATE NOCASE THEN ((t0.c2)LIKE(vt0.c0)) END  NULLS FIRST;SELECT DISTINCT CASE CAST(vt1.c0 AS INTEGER)  WHEN (((rt0.c1))<>((t0.c2))) THEN ((((vt1.c1)AND('-1410310201')))OR(t0.c2)) WHEN (((rt0.c3, t0.c1, t0.c0)) NOT BETWEEN ((t0.c1, vt1.c2, rt0.c0)) AND ((rt0.c0, t0.c1, t0.c2))) THEN (rt0.c2 IN ()) WHEN ((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3)) THEN rt0.c2 COLLATE NOCASE ELSE SUM(t0.c2) END FROM vt1, t0, vt0, rt0 GROUP BY NULL; -- 0ms;
SELECT CASE WHEN (vt1.c2 IN (rt0.c4)) THEN ((rt0.c2)/(rt0.c3)) WHEN CASE WHEN rt0.c1 THEN rt0.c3 END THEN ABS(DISTINCT rt0.c2) WHEN (NOT (vt1.c2)) THEN CASE vt1.c1  WHEN vt1.c2 THEN rt0.c3 WHEN '_A⪣H_|i' THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END END, ((AVG(vt0.c0)) BETWEEN (TOTAL(rt0.c0)) AND (load_extension(t0.c2))), NULL FROM vt0, vt1 WHERE ((((('1239823296')GLOB(x''))) ISNULL));SELECT DISTINCT CASE WHEN rt0.c1 THEN rt0.c4 END COLLATE RTRIM, vt0.c0, ((((vt0.c0) BETWEEN (vt1.c2) AND (vt1.c2))) NOTNULL), UPPER(((t0.c1) BETWEEN (rt0.c3) AND (vt0.c0))), CAST(vt1.c1 COLLATE NOCASE AS BLOB) FROM vt0, t0;SELECT DISTINCT (((((rt0.c1)<=(rt0.c3))))==((CAST(rt0.c3 AS INTEGER)))) FROM rt0, t0, vt0, vt1; -- 0ms;
SELECT ALL rt0.c4, (((vt1.c2)) NOT BETWEEN ((((((((((((((rt0.c0)AND(t0.c1)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(t0.c0)))OR(vt1.c0)))) AND (((NOT (vt0.c0))))), t0.c2, GROUP_CONCAT(MAX(((NULL)%(t0.c1)))), ((t0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND ((- (rt0.c0)))) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((x'', t0.c0, vt1.c2)) NOT BETWEEN ((rt0.c3, vt1.c1, rt0.c4)) AND ((t0.c0, vt0.c0, vt1.c2))) IN (NULLIF(t0.c2, t0.c1), (((t0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))))) WHERE (((((TYPEOF(DISTINCT x'c35eb2ff'))AND('[嘑Xr|~ᡇjW')))OR(((('l'))<=(('[K(Q('))))));SELECT CASE WHEN ((t0.c1) BETWEEN (t0.c2) AND (vt1.c2)) THEN AVG(x'') ELSE t0.c1 END, ((('0.0916151570514665' IN (t0.c2, NULL)))<<(((t0.c1)IS NOT(rt0.c2)))), GROUP_CONCAT(NULL) FROM vt0, vt1;SELECT MIN((((NULL, vt1.c0, vt1.c0, t0.c2, rt0.c0)) BETWEEN ((rt0.c0, vt1.c0, vt1.c2, vt1.c0, rt0.c3)) AND ((rt0.c1, rt0.c4, 1112660980, t0.c2, t0.c1)))) FROM rt0 GROUP BY CASE WHEN ((vt1.c2) BETWEEN (t0.c1) AND (rt0.c2)) THEN CAST(rt0.c3 AS REAL) END HAVING ((((rt0.c2 IN (rt0.c4, rt0.c1))))>=((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c2))))) ORDER BY ((((t0.c2) NOT NULL))<((- ('-1500684993')))) DESC, CAST(0.200873046188207 AS BLOB);SELECT DISTINCT ((((vt1.c0) NOTNULL)) IS TRUE) FROM rt0, t0 WHERE (((((0.8791651388796228)OR('1052054693'))) BETWEEN ((('*d')=(0xffffffffacff07e3))) AND (0.8175396034104115 COLLATE NOCASE)));SELECT ALL (((((x'd17a'))>((rt0.c0)))) IS FALSE) FROM vt1, t0, rt0 WHERE (((LTRIM(0.52282740408826))-(((NULL)>=('h?['))))) LIMIT 125571699 OFFSET -223326792; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS INTEGER) FROM vt1, vt0, t0, rt0 WHERE (CAST((('') ISNULL) AS BLOB)); -- 0ms;
SELECT DISTINCT (((CAST(rt0.c1 AS NUMERIC)))!=((((vt0.c0) BETWEEN (x'') AND (vt1.c0))))) FROM rt0, t0 WHERE ((((~ (0.12551388538803354)))-((('') BETWEEN (x'8807') AND ('0.3120676163202867')))));SELECT DISTINCT CASE WHEN ((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(vt1.c2)) THEN SUM(vt1.c0) ELSE (~ (vt1.c2)) END, LAST_VALUE(CAST(((vt1.c1)-(vt1.c0)) AS BLOB)) OVER (), CASE ((t0.c1) ISNULL)  WHEN (((vt1.c2, vt1.c2, vt1.c2))<((vt1.c0, vt1.c2, vt0.c0))) THEN rt0.c0 COLLATE RTRIM WHEN (NOT (t0.c0)) THEN (+ (6.11923817E8)) WHEN ((((t0.c2)OR(rt0.c0)))AND(rt0.c1)) THEN (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END FROM vt1, rt0, t0 ORDER BY HEX(DISTINCT CAST(t0.c0 AS TEXT));SELECT DISTINCT LAG(((NOT (vt0.c0)) IN (UPPER(vt0.c0))), (((vt0.c0 COLLATE NOCASE, LIKELIHOOD(vt0.c0, 0.41577953080201724), ((vt0.c0) NOT NULL)))>=((((vt0.c0)IS(x'')), COALESCE(vt0.c0, -2.40047453E8, vt0.c0, vt0.c0), ((vt0.c0)IS(vt0.c0))))), ((vt0.c0)=(vt0.c0)) COLLATE RTRIM) OVER (), (+ ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))), CAST(((((t0.c1)OR(vt1.c0)))AND(rt0.c2)) AS INTEGER) FROM vt0 WHERE (((((0.5590971725245684) IS TRUE))<<(((((NULL)AND(0.7929097385776087)))OR(NULL))))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR(vt1.c2)))OR((+ (vt0.c0)))))AND(rtreenode(t0.c0, rt0.c0))))OR(''))  NULLS LAST;SELECT SUM(((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c2))) FROM t0 WHERE ((((x'' IN ()))<=('' COLLATE RTRIM)));SELECT DISTINCT CASE WHEN ('' IN (t0.c0)) THEN CASE WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c0 END END FROM vt0;SELECT DISTINCT ((((vt1.c2) IS FALSE))<(((t0.c0) IS TRUE))) FROM vt0, t0, vt1, rt0; -- 0ms;
SELECT DISTINCT CAST((t0.c1 IN ()) AS BLOB), NTILE((((t0.c0, t0.c0, t0.c0))<((t0.c1, t0.c2, t0.c2))) COLLATE NOCASE) OVER (), (NOT (CASE WHEN t0.c2 THEN rt0.c2 END)) FROM vt1, vt0, t0 WHERE (((((((x'', 0X4cea41df, 0.43528213401619076)) BETWEEN ((NULL, x'645d', x'')) AND ((0.08017769563302823, '-1194158466', NULL))), (('. ') BETWEEN (0.1569436778498945) AND (0.023134015977032463)), ((476589355) NOT BETWEEN (1.133870179E9) AND (x''))))<>((UPPER('0.43528213401619076'), ((x'')-(x'')), ((2.130876758E9)%(0.5590971725245684)))))) GROUP BY ((((t0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c1))) BETWEEN (((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2))) AND (t0.c2 COLLATE BINARY));SELECT DISTINCT AVG(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c1))) OVER (), ((rt0.c0 COLLATE BINARY)<(((t0.c0)IS NOT(rt0.c1)))), COUNT(*) FROM vt1, vt0, rt0;SELECT ALL ((((MAX(rt0.c3))AND(((((((((rt0.c4)AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c4)))OR(t0.c1)))))OR(COUNT(rt0.c1))) FROM t0 WHERE (((+ (909697282)) IN ())) ORDER BY ((0Xffffffffdbc11cfd) NOTNULL);SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c0)))<(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))), (((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND((rt0.c3 IN ()))), CASE WHEN NULL THEN TOTAL(rt0.c3) END FROM vt1, rt0, t0, vt0; -- 0ms;
SELECT DISTINCT ((x'ee93')IS(vt1.c1)) COLLATE RTRIM FROM rt0, vt0, t0;SELECT ALL ((SUM(t0.c1)) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((t0.c1) NOT BETWEEN (t0.c0) AND (vt1.c0)))) FROM rt0, t0, vt0, vt1 WHERE (((((0.0010739367223434604) BETWEEN ('261207524') AND ('1945758575')))LIKE(((NULL)IS NOT('1052054693'))))); -- 0ms;
SELECT DISTINCT x'49ae' FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((+ (vt1.c2))))<((((rt0.c3)>>(t0.c2))))) FROM vt0, rt0 WHERE (((((0.6311754847652817)LIKE('2130876758')))LIKE((0.04151462329185729 IN ('1112660980', '1225151514')))));SELECT ALL (((t0.c1 IN (vt0.c0)))<=(((rt0.c1)/(vt1.c1)))) FROM vt0, rt0, t0, vt1 WHERE ('299224898'); -- 0ms;
SELECT DISTINCT (((MAX(vt1.c1), TRIM(DISTINCT vt1.c1, t0.c0), CASE vt1.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c2 WHEN rt0.c4 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt1.c1)<>(t0.c2)), rt0.c3 COLLATE NOCASE, t0.c1))) FROM rt0, vt0, t0;SELECT CASE 0X4906541a  WHEN TOTAL(rt0.c1) THEN t0.c0 COLLATE BINARY WHEN (rt0.c1 IN (vt1.c2, t0.c2)) THEN vt1.c1 WHEN TYPEOF(t0.c0) THEN ((x'f7e3')+(t0.c1)) ELSE x'd072' END FROM t0, vt1 WHERE (CAST((('I.\rg6') NOTNULL) AS TEXT));SELECT '-739066195' FROM rt0, vt1, vt0, t0 GROUP BY ((CASE t0.c0  WHEN t0.c1 THEN rt0.c2 END) ISNULL) HAVING ((((vt1.c2)>>(vt1.c0)))IS NOT((rt0.c1 IN (rt0.c2)))); -- 0ms;
SELECT DISTINCT (((((rt0.c3, NULL, t0.c2))<((0.6087811229973571, vt1.c1, rt0.c4)))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND ((x'' IN (rt0.c3)))) FROM vt1 WHERE ((((0Xffffffffa5e0aebe) IS FALSE) IN (CASE x''  WHEN x'' THEN x'' ELSE 0.7533062645642516 END)));SELECT ((t0.c1) NOT BETWEEN (vt1.c2) AND (t0.c0)) COLLATE RTRIM FROM vt1;SELECT DISTINCT ((COUNT(rt0.c4)) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))) AND (x'2d52')) FROM vt1, t0, vt0, rt0 ORDER BY ((((((((((vt1.c1) NOTNULL))AND((- (t0.c0)))))OR(((((((((rt0.c2)OR(rt0.c3)))OR(t0.c0)))AND(t0.c0)))OR(vt1.c2)))))AND('-333005811')))AND(((((rt0.c3)AND(t0.c2)))OR(vt0.c0)))) ASC  NULLS FIRST, (((((vt1.c1)AND(rt0.c4)))AND(t0.c2)) IN ()), (NOT (((vt1.c0)+(t0.c1)))); -- 0ms;
SELECT ALL ((((vt1.c2, vt1.c1, rt0.c1)) NOT BETWEEN ((vt1.c2, rt0.c0, vt0.c0)) AND ((x'', t0.c2, t0.c1))) IN ()) FROM t0; -- 1ms;
SELECT ALL ABS(DISTINCT COALESCE(rt0.c3, vt1.c1, 0X7d847d71, 0.8183277111012369)), (((((t0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))IS(((((((((t0.c1)OR(rt0.c4)))OR(x'')))OR(rt0.c4)))OR(t0.c2)))), ((TYPEOF(rt0.c1))OR(COUNT(rt0.c4))) FROM t0, vt0;SELECT DISTINCT ((x'' IN ()) IN ()), vt0.c0, (((+ (vt1.c2)))>(CAST(t0.c1 AS NUMERIC))) FROM vt1 LIMIT 354728556;SELECT DISTINCT ((((((((t0.c1)AND(GROUP_CONCAT(rt0.c4))))OR(((vt1.c2) IS FALSE))))AND(UPPER(vt1.c2))))OR(((((((((vt0.c0)OR(t0.c1)))OR(rt0.c3)))AND(t0.c1)))AND(t0.c2)))) FROM rt0, t0, vt0 NOT INDEXED, vt1; -- 0ms;
SELECT ALL ((((NOT (vt1.c1))))<((CASE t0.c1  WHEN rt0.c3 THEN rt0.c3 END))), INSTR(x'', ((rt0.c2)||(rt0.c2))), (((((rt0.c3 IN ()))OR(x'')))OR(COALESCE(DISTINCT rt0.c2, t0.c2))) FROM vt0 GROUP BY ((('-1194158466')) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) COLLATE BINARY HAVING CAST(((vt0.c0)/(vt1.c1)) AS NUMERIC);SELECT ALL CAST(CAST(t0.c2 AS INTEGER) AS TEXT) FROM rt0, t0, vt1, vt0 LIMIT -1728914291 OFFSET 2125484307; -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c1) BETWEEN (t0.c1) AND (rt0.c2))) AND (0.15336751617936084)) FROM rt0 LIMIT -87752600 OFFSET -948855446;SELECT (~ (((rt0.c4)IS NOT(vt0.c0)))) FROM vt0, vt1, t0, rt0 WHERE (((((((((x'')AND(0.7303991624841838)))AND(1103064009)))OR(0Xffffffff884cd2de)))AND(0.8880345111626967)) COLLATE NOCASE); -- 0ms;
SELECT ALL (- (((rt0.c2) NOT BETWEEN (vt1.c2) AND (t0.c0)))), FIRST_VALUE(LIKELY((+ (rt0.c0)))) OVER ( GROUPS rt0.c1 PRECEDING EXCLUDE NO OTHERS), ((CASE WHEN t0.c0 THEN rt0.c4 END) BETWEEN ((((vt1.c1))!=((rt0.c2)))) AND (((t0.c2)<=(vt1.c0)))) FROM rt0, vt0, vt1 WHERE (((((((x'')OR('-71015307')))OR(''))) NOT BETWEEN ((+ (x''))) AND (('-132907214' IN ()))));SELECT DISTINCT MAX(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1))) FROM vt0, vt1, t0 WHERE (((((NULL)-('-1151158242')))==((x'b924' IN (NULL)))));SELECT DISTINCT ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))AND(CASE WHEN rt0.c4 THEN t0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN -1948702025 THEN vt1.c0 END)))OR(vt1.c0)) FROM t0, rt0 WHERE ((+ ('1528276239' COLLATE NOCASE)));SELECT DISTINCT ((((vt1.c1) NOTNULL)) BETWEEN (((((vt1.c0)OR(vt1.c1)))OR(rt0.c3))) AND (0X2b1a1c21)), (((NULL, (0.3103639847469518 IN ()), ((t0.c1) BETWEEN (rt0.c0) AND (rt0.c3))))!=((((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c3)))AND(t0.c2)))AND(rt0.c0)), (NOT ('-1304071888')), COUNT(rt0.c0)))), ((rt0.c3 IN ()) IN ()) FROM vt1, vt0, rt0, t0 LIMIT 1103064009 OFFSET 9288832; -- 0ms;
SELECT vt0.c0, (- (CAST(t0.c0 AS INTEGER))), COUNT(*) FROM vt0, t0 WHERE ((((x'' IN ()))|(((('1771431468', x'', '354728556'))<>((-972202366, '1238817742', '647199923')))))); -- 0ms;
SELECT ALL CAST(((rt0.c1) BETWEEN (t0.c2) AND (rt0.c4)) AS TEXT) FROM t0 WHERE (((((((((((NULL)OR(NULL)))OR(x'')))AND(x'')))AND(''))) IS TRUE));SELECT DISTINCT CASE WHEN CAST(rt0.c3 AS INTEGER) THEN JULIANDAY(vt1.c2, t0.c1, rt0.c2, rt0.c0, t0.c1) END FROM vt0;SELECT DISTINCT CUME_DIST() OVER () FROM vt0 ORDER BY rt0.c3 COLLATE NOCASE DESC LIMIT -2107354922;SELECT ALL ROW_NUMBER() OVER (), (((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c1)))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c0 END) AND ((~ (t0.c0)))), t0.c1 FROM vt1, rt0, vt0, t0; -- 1ms;
SELECT DISTINCT (- (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c4)))AND(vt0.c0)))OR(t0.c0)))) FROM vt0, rt0, vt1;SELECT DISTINCT COUNT(*) FROM vt0, vt1, t0, rt0; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0, vt1 LIMIT -590577106 OFFSET -856268533; -- 0ms;
SELECT DISTINCT NULL FROM t0, rt0, vt1, vt0 WHERE (((json_quote(8.66708341E8))>(((((0.1557915983526572)OR(0.5981158910894904)))OR(1661365882))))) ORDER BY (('')IS(((rt0.c1)>=(rt0.c3))))  NULLS LAST; -- 0ms;
SELECT ALL CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) FROM t0 WHERE ((- (CASE WHEN NULL THEN -2.008231202E9 ELSE NULL END)));SELECT DISTINCT HEX(((vt0.c0)<(rt0.c0))) FROM t0, rt0, vt1, vt0 WHERE ((((NULL))!=((''))) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT ((rt0.c1)==(vt1.c2)) COLLATE NOCASE COLLATE NOCASE, (((((((((~ (vt1.c0)))OR(((((t0.c0)AND(vt1.c2)))AND('?|7>Xi')))))OR(((vt1.c2) IS TRUE))))OR(((((rt0.c3)OR(vt1.c2)))AND(t0.c0)))))OR(((((((((vt1.c2)OR(NULL)))OR(vt0.c0)))OR(vt1.c1)))OR(rt0.c4)))), CASE WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c2 IN (t0.c0)) ELSE (vt1.c0 IN (vt1.c0, rt0.c2)) END FROM vt0 ORDER BY TRIM(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c1 THEN rt0.c0 WHEN vt1.c2 THEN vt1.c0 ELSE t0.c1 END) DESC  NULLS FIRST;SELECT DISTINCT (((x''))>=((SUM(NULL)))) FROM vt1, rt0, vt0, t0 WHERE ((NULL COLLATE RTRIM IN (((0.4433689220058693)<=(x'f09f'))))); -- 0ms;
SELECT ALL GROUP_CONCAT(CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN x'c0a0' THEN vt1.c0 ELSE vt1.c0 END) FROM vt1, rt0, vt0, t0 WHERE ('-240047453') ORDER BY GLOB(rt0.c0 COLLATE BINARY, UPPER('632670745')) DESC; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)AND(t0.c0)))OR('1052054693')))AND(vt1.c0)))OR(vt1.c1)))LIKE(((rt0.c4) ISNULL))) FROM rt0, vt0, vt1, t0 WHERE (((((((0.2983848568034312) NOTNULL))OR(((0.7449870528534728) BETWEEN (x'b641adab') AND ('Ln')))))OR((((0.7357317352294758, NULL, x''))==((NULL, 1.11266098E9, ')?!pM')))))) LIMIT -1377499360; -- 1ms;
SELECT DISTINCT TYPEOF(DISTINCT 0.9975175172310567) FROM vt0, t0 GROUP BY (((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c2)) IN (-9.72202366E8 COLLATE RTRIM)), CAST(t0.c0 AS BLOB), (((((9.333470383744435E-4 IN (vt1.c2, NULL)))OR((('1112660980')GLOB(rt0.c3)))))AND((+ (rt0.c4)))), (NOT (CASE WHEN '-1662211832' THEN rt0.c4 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c2 THEN t0.c2 END)), ((((vt1.c1) BETWEEN (vt1.c2) AND (rt0.c0)))>=((t0.c0 IN ()))), TRIM(DISTINCT (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((t0.c2)))), CASE vt1.c1  WHEN ((vt1.c2)<=(t0.c2)) THEN json_valid(vt1.c0) ELSE ((rt0.c2) IS FALSE) END HAVING COUNT(*);SELECT ((((((rt0.c4)AND(vt1.c2)))AND(vt1.c0))) NOTNULL), ((((rt0.c4)*(-489307783)))OR(((((((((rt0.c3)OR(x'')))OR(vt1.c0)))OR(0.4388136067600955)))AND(NULL)))), (((vt1.c0 IN ())) NOT BETWEEN (LOWER(DISTINCT rt0.c0)) AND (0.023134015977032463)) FROM vt0, rt0, vt1 WHERE (((CASE WHEN x'' THEN '-1410310201' END) NOT BETWEEN ('') AND (((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(0.7897463891202332)))OR(vt1.c1))) BETWEEN (((((t0.c0)OR(vt0.c0)))OR(rt0.c3))) AND (((t0.c1) IS FALSE))) FROM vt0, t0 GROUP BY vt1.c2 HAVING ((rt0.c1) IS TRUE) COLLATE RTRIM;SELECT ((((rt0.c3)-(rt0.c3))) IS FALSE) FROM rt0, vt0, vt1; -- 1ms;
SELECT DISTINCT ((COUNT(*))>(CAST(vt1.c2 AS NUMERIC))), vt1.c1, ((((t0.c1) BETWEEN (t0.c0) AND (rt0.c2)))+((((rt0.c4)) BETWEEN ((vt1.c2)) AND (('U>'))))) FROM vt1, vt0 WHERE (((((((x'')OR(x'c636')))OR(-2101153487))) BETWEEN (x'') AND (((NULL)AND('')))));SELECT DISTINCT vt1.c0, ((((((((0.7768054769761878)AND(json_array(t0.c2, rt0.c4, t0.c2, rt0.c4))))AND(((vt1.c0) NOT NULL))))OR((NOT (rt0.c4)))))OR(SUM(t0.c1))), -1.929635769E9 FROM vt0, vt1, t0, rt0; -- 0ms;
SELECT '94343534' COLLATE RTRIM, json_extract(MIN('-1359377115'), COUNT(*)), COUNT(((t0.c1)|(t0.c0))) OVER () FROM rt0, vt1, t0 WHERE (((((CASE NULL  WHEN NULL THEN '' END)AND(((-1.728914291E9)<(NULL)))))OR(x'e75d' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT TOTAL((~ (t0.c0))) OVER (), AVG(rt0.c4), CASE WHEN ((((t0.c2)OR(vt0.c0)))OR(t0.c0)) THEN TOTAL_CHANGES() ELSE ((t0.c0)AND(rt0.c3)) END FROM vt0, vt1 WHERE (((('-2101509579') ISNULL) IN ())) GROUP BY (vt1.c2 IN (vt0.c0)) COLLATE BINARY, ((((((((((vt1.c1)AND(t0.c2)))AND(rt0.c0)))AND(0.16719436027647638)))AND(rt0.c0))) BETWEEN (((vt1.c0) NOT NULL)) AND (((vt1.c1) BETWEEN (t0.c1) AND (rt0.c1)))), CAST((('915819626')/(rt0.c1)) AS REAL), CAST(((rt0.c4) IS FALSE) AS INTEGER), ((CAST(vt1.c2 AS BLOB)) NOT BETWEEN (((((((((vt1.c2)AND(vt1.c1)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c3))) AND (((vt0.c0)LIKE(vt1.c2))));SELECT ALL ((((rt0.c3) IS FALSE)) ISNULL) FROM rt0, vt1, t0, vt0 WHERE (CHANGES()); -- 0ms;
SELECT DISTINCT TOTAL(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM) FROM t0, vt1, rt0;SELECT ALL CASE WHEN (vt1.c2 IN ()) THEN vt1.c1 COLLATE RTRIM ELSE rt0.c2 COLLATE BINARY END FROM t0 NOT INDEXED, vt0;SELECT json_quote(vt1.c0) FROM rt0, vt0, vt1, t0 WHERE (((NULL)&(((NULL)<(x''))))) GROUP BY (((((t0.c2, t0.c1, vt0.c0)) NOT BETWEEN ((NULL, rt0.c3, vt1.c2)) AND ((t0.c2, rt0.c0, vt1.c0))))*(((rt0.c4) BETWEEN (t0.c1) AND (rt0.c0)))); -- 0ms;
SELECT ALL ((CASE rt0.c3  WHEN rt0.c4 THEN vt1.c2 ELSE 0.09191971933912213 END) NOT NULL) FROM vt0, vt1, rt0 LIMIT 142418395 OFFSET -2056287567; -- 0ms;
SELECT DISTINCT TRIM((NOT (vt1.c1))) FROM vt1, t0, vt0 WHERE ((((x'', NULL, 0.787680017367545)) BETWEEN ((TYPEOF(0.5896963563211898), NULL, LIKELY(DISTINCT 9.55091643E8))) AND ((((-1.304071888E9) IS FALSE), CASE WHEN x'' THEN NULL END, NULL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c3) BETWEEN (t0.c0) AND (vt0.c0)))-(NULL)) FROM vt1 ORDER BY (((vt1.c1)/(vt0.c0)) IN (((rt0.c4)LIKE(vt1.c0)))) ASC;SELECT DISTINCT (((vt1.c2, t0.c2, vt1.c1)) BETWEEN ((((vt1.c2) NOTNULL), x'd99f', CAST(rt0.c3 AS INTEGER))) AND ((rt0.c4 COLLATE BINARY, rt0.c1, CAST(rt0.c4 AS REAL)))) FROM vt1, vt0, t0, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT IFNULL((- (t0.c1)), (vt1.c1 IN ())), ((-1.728914291E9) BETWEEN (((rt0.c3) BETWEEN (t0.c0) AND (rt0.c2))) AND ((vt1.c2 IN ()))), x'' FROM t0, vt0 WHERE (SQLITE_VERSION());SELECT DISTINCT ABS(CAST(rt0.c3 AS NUMERIC)) FROM vt1 WHERE ((((((('-1116881206')OR(0.17370895863808233)))AND(x'')))%(TYPEOF(1274717734))));SELECT ALL (+ (MAX(vt1.c1))), CAST(((t0.c0) BETWEEN (NULL) AND (rt0.c4)) AS REAL), ((NULL) BETWEEN (rt0.c4) AND ('2056502059')) COLLATE NOCASE FROM rt0, t0, vt1; -- 0ms;
SELECT TOTAL((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'')))) OVER (), CASE WHEN MIN(vt1.c2) THEN CASE WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN rt0.c0 END ELSE 0xffffffffa3a8a40d END, ((((((t0.c0)AND(rt0.c3)))AND(rt0.c3))) NOT BETWEEN (t0.c1) AND ((NOT (vt0.c0)))) FROM vt0, vt1, rt0;SELECT (- (((((((((-1.512001858E9)OR(t0.c2)))OR(vt1.c2)))OR(vt1.c2)))OR(rt0.c2)))), ((((CASE '-788481731'  WHEN t0.c1 THEN rt0.c1 END)OR(((vt1.c1)GLOB(rt0.c1)))))OR(vt0.c0 COLLATE RTRIM)), ((vt1.c0) NOTNULL) FROM vt1, t0;SELECT ALL TOTAL((vt1.c1 IN (vt0.c0, vt1.c1))) OVER () FROM t0, vt1, vt0, rt0 WHERE (((((NULL)|(0.5698744814832366))) IS FALSE)); -- 0ms;
SELECT ALL TOTAL(((rt0.c0) NOT BETWEEN (vt0.c0) AND (0.6551110211984096))), ((((t0.c0) BETWEEN (t0.c1) AND (vt0.c0)))<<((+ (rt0.c4)))), NULLIF(((NULL)/('x株')), ((((vt1.c2)AND(t0.c1)))OR(vt0.c0))) FROM rt0, vt0, vt1 WHERE ((((- (x'c857')))IS(SQLITE_VERSION())));SELECT DISTINCT rt0.c2 FROM vt1, t0, rt0 WHERE (CASE WHEN (((('jj+*')AND(x'')))OR('')) THEN CASE '0.0916151570514665'  WHEN NULL THEN x'' END END); -- 0ms;
SELECT DISTINCT ((rt0.c4 IN ()) IN (-1.560875714E9)), MIN(CASE vt1.c2  WHEN rt0.c3 THEN '' END), ((NULLIF(rt0.c4, vt1.c1)) NOT BETWEEN (((vt1.c2)>>(rt0.c2))) AND (((((((((vt1.c0)OR(rt0.c3)))OR(t0.c0)))AND(rt0.c4)))AND(t0.c2)))), ((-1.304071888E9) IS FALSE), CASE WHEN x'd37d' THEN ((((rt0.c1)AND(t0.c2)))OR(vt0.c0)) WHEN CASE WHEN rt0.c0 THEN vt1.c2 ELSE NULL END THEN NULL WHEN CAST(rt0.c1 AS TEXT) THEN rt0.c0 ELSE NULL END FROM vt0, t0, vt1 WHERE (((('-1272137424' IN ('-333005811'))) NOTNULL));SELECT DISTINCT (NOT ((((t0.c2))<((rt0.c1))))) FROM t0, rt0, vt0, vt1 WHERE (-132907214); -- 0ms;
SELECT DISTINCT ((rt0.c2) IS TRUE) COLLATE RTRIM FROM vt1 LIMIT -1 OFFSET -1304071888;SELECT DISTINCT ((json_quote(t0.c0))|(CASE WHEN vt1.c0 THEN rt0.c4 END)) FROM t0, vt0 WHERE (((((('-25113744')) NOT BETWEEN ((x'')) AND ((0.8286067697658857))))|(CAST(x'' AS TEXT)))) GROUP BY (x'' IN ()) COLLATE BINARY, ((((NULL) NOT BETWEEN (rt0.c2) AND (t0.c2))) ISNULL), CASE WHEN ((vt1.c1) NOTNULL) THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c1) NOTNULL) END, CAST((vt1.c0 IN (rt0.c3)) AS BLOB), ((((((rt0.c0) BETWEEN ('765204952') AND (rt0.c3)))OR(((((x'7267cd68')OR(vt0.c0)))AND(vt1.c2)))))OR(((t0.c2) BETWEEN (0.5173402202875129) AND (vt1.c0)))) HAVING ((((rt0.c3)>>(vt1.c0)))!=(((t0.c2) BETWEEN (vt1.c1) AND (vt1.c2))));SELECT ALL ((rt0.c3)&(t0.c2)) COLLATE BINARY FROM rt0, vt0 LIMIT -1507822570;SELECT ALL ((((((((((((((((rt0.c3)AND(rt0.c2)))AND(x'')))AND(vt1.c1)))OR(t0.c0)))OR(vt1.c1)))AND(rt0.c3)))OR(MAX(vt1.c2))))AND(vt1.c2)) FROM vt1, rt0, vt0 WHERE (((((((((((((x'a9fd' COLLATE BINARY)OR(((0.012364750364965316)LIKE(x'')))))AND((('O5xRh%d?') ISNULL))))AND(((NULL)%(0.8679508335285003)))))OR((('1741741671')+(x'')))))AND((('#Ъ') NOT BETWEEN (x'') AND (NULL)))))AND(CAST(NULL AS REAL)))) GROUP BY (vt1.c0 IN ()), (- (CAST(vt1.c0 AS REAL))), (CAST(rt0.c3 AS TEXT) IN ()) HAVING ((((0.2983848568034312)*('354728556')))IS NOT(rt0.c1));SELECT DISTINCT COUNT((NOT (NULL)) COLLATE NOCASE) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c2) NOT BETWEEN (rt0.c2) AND (t0.c1))) IS FALSE) FROM vt0, t0, vt1, rt0; -- 0ms;
SELECT (((vt1.c0, x'', rt0.c4)) NOT BETWEEN ((((vt1.c0) BETWEEN (t0.c2) AND (vt1.c1)), (((vt1.c2))>((t0.c2))), json_remove(rt0.c3, vt1.c1, 0Xffffffff8110ca11, rt0.c2))) AND (((t0.c1 IN ()), MAX(rt0.c1), ((((NULL)OR(vt1.c2)))OR(rt0.c1))))), LEAD(((((vt1.c0)<=(vt1.c1))) NOT BETWEEN (((vt1.c2)*(rt0.c3))) AND (((rt0.c1) NOTNULL))), (0.8620445366594607 IN ((((vt1.c2))<=((rt0.c3))))), CAST(IFNULL(rt0.c2, rt0.c0) AS REAL)) OVER (), (CASE WHEN rt0.c4 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN x'' THEN vt1.c2 ELSE rt0.c2 END IN ('', TRIM(t0.c2))), COUNT(((vt1.c1)OR(rt0.c4))) OVER (), json_remove(TOTAL_CHANGES(), rt0.c1 COLLATE BINARY) FROM rt0, vt1 WHERE (((('0.3759047638293611' IN ()))<<((~ ('L\rkL')))));SELECT ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (CAST(vt1.c2 AS BLOB))), (('' COLLATE RTRIM)>(((vt1.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))), AVG((vt1.c1 IN ())) COLLATE BINARY FROM t0, rt0, vt0, vt1 WHERE (((x'') NOTNULL)) GROUP BY (vt0.c0 IN ()), '\rㆋL0[\UUo', ((CAST(rt0.c1 AS NUMERIC)) IS TRUE); -- 0ms;
SELECT DISTINCT (~ (((rt0.c3) NOTNULL))) FROM vt1, vt0, t0, rt0 WHERE (x'') GROUP BY 0.6104431761134957 HAVING MIN(rt0.c3); -- 0ms;
SELECT rt0.c1 COLLATE NOCASE FROM vt1, rt0, t0; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) BETWEEN ((rt0.c1 IN ())) AND (0.4388695535530266)) FROM vt1, rt0 GROUP BY x'' HAVING 0.5811735202997724 ORDER BY (- (x'')) DESC  NULLS FIRST; -- 0ms;
SELECT ((((((((((((((vt0.c0) BETWEEN (rt0.c2) AND (0.19255302298875687)))AND(vt1.c2 COLLATE NOCASE)))AND(((rt0.c3)LIKE(rt0.c1)))))AND((((rt0.c0, t0.c2, -354507027))<((t0.c0, rt0.c3, t0.c0))))))AND(x'')))OR(UNLIKELY(DISTINCT vt1.c1))))AND(CASE WHEN t0.c2 THEN t0.c0 END)), ((rt0.c1)+(((rt0.c3) IS TRUE))), (+ (vt1.c0)) FROM t0, vt0, rt0 ORDER BY CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(vt1.c1)))OR(x'')))AND(vt1.c1)) THEN (((rt0.c0))<>(('-666910109'))) WHEN NULL THEN rt0.c4 WHEN ((rt0.c4) NOT NULL) THEN (rt0.c2 IN (rt0.c4)) END;SELECT (NOT ((((t0.c0)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c0))))) FROM rt0, t0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((((t0.c1) BETWEEN (vt1.c2) AND (rt0.c2)))||(vt1.c0)) FROM vt0, vt1, rt0, t0 WHERE ((((x'c1bf') IS FALSE) IN ())); -- 1ms;
SELECT DISTINCT SUM(CAST(t0.c0 AS TEXT)), 1661365882, (((- (t0.c1)))&(((rt0.c3) NOT NULL))) FROM vt1, t0, vt0, rt0 WHERE (((((NULL) NOT NULL)) BETWEEN ((- (NULL))) AND ((((x''))<(('LyO0x|6')))))) LIMIT 76730822; -- 0ms;
SELECT TOTAL((vt1.c2 IN (vt0.c0))) FROM vt0, vt1, t0, rt0; -- 0ms;
SELECT (((rt0.c1, vt1.c0, rt0.c1, t0.c2, vt1.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE, ((rt0.c3)LIKE(vt1.c2)), ((vt1.c0)<(vt0.c0)), (NOT (rt0.c0)), TRIM(t0.c0))) AND (((((rt0.c3))=((0.9327295062096215))), ((t0.c1) NOT BETWEEN (x'') AND (vt0.c0)), x'', ((((((((t0.c2)AND(t0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c2)), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt1.c2))))), (((((t0.c2) ISNULL)))==((TYPEOF(DISTINCT rt0.c0)))), ((((vt1.c2)<(t0.c2))) NOTNULL) FROM vt1, vt0, t0, rt0 WHERE (LOWER(0X538632c8 COLLATE BINARY)); -- 0ms;
SELECT CAST((t0.c0 IN (vt1.c2)) AS BLOB), vt1.c2, rtreenode(((rt0.c1) IS TRUE), ((rt0.c3)<=(0x6ef9e869))) FROM vt0;SELECT 0.7000972503688123 FROM vt1 WHERE (((((NULL) ISNULL))*(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT COUNT((rt0.c3 IN ())) FROM vt1 WHERE (CAST(CASE WHEN x'c93a' THEN NULL END AS INTEGER)) GROUP BY ((((vt1.c0)%(rt0.c1))) BETWEEN ((('349442140') ISNULL)) AND (vt1.c2 COLLATE RTRIM)), (((('UxzEj*V' IN ()), UNLIKELY(DISTINCT x''), GLOB(rt0.c3, vt1.c0)))==((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c1)), SQLITE_SOURCE_ID(), ((t0.c1)>=(vt0.c0))))), HEX(((((t0.c2)AND(rt0.c0)))OR(t0.c0))) HAVING ((((rt0.c4)||('|W偂jP>*')))&(CASE WHEN NULL THEN rt0.c2 END));SELECT DISTINCT (~ (((((rt0.c0)AND(t0.c1)))AND(t0.c2)))) FROM rt0, vt1, t0 WHERE ((((0.3810497197571425) IS FALSE) IN ((- (x'')), ((NULL)<>(0.4886886923463615))))); -- 0ms;
SELECT SUM(((((rt0.c1)AND(rt0.c4)))AND(x''))) OVER () FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT (((SUM(vt1.c2)))>=((TOTAL(t0.c0)))) FROM rt0 WHERE (((((-3.33005811E8) BETWEEN (x'') AND (x''))) NOT BETWEEN ((((0xffffffff84952796))>=(('*i4')))) AND ('1216099218' COLLATE BINARY)));SELECT DISTINCT CASE ((((((((vt1.c2)AND(rt0.c0)))AND(x'd645')))AND(vt1.c2)))OR(rt0.c0))  WHEN rt0.c1 COLLATE RTRIM THEN vt0.c0 END FROM t0;SELECT DISTINCT NULL, ((((rt0.c0) BETWEEN (t0.c0) AND (vt1.c1))) NOT BETWEEN (CASE t0.c2  WHEN vt1.c0 THEN vt1.c2 END) AND (((((((((vt1.c2)AND(rt0.c3)))OR(rt0.c0)))OR(vt0.c0)))OR(x'')))), (NOT ((vt1.c1 IN ()))) FROM t0, rt0, vt1, vt0 WHERE (((IFNULL(DISTINCT x'', ''))|((x'' IN ())))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM rt0; -- 1ms;
SELECT ALL ('T' IN (NULL)) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT (((((vt1.c0)|(0.698509750679947))))==(((rt0.c1 IN ())))), vt0.c0, 'F&_6' FROM vt0, t0, vt1, rt0 GROUP BY vt1.c0 HAVING ((((t0.c0)+(NULL)))<(UPPER(vt1.c0))); -- 0ms;
SELECT DISTINCT vt0.c0, MAX(CASE t0.c0  WHEN 6.95717133E8 THEN 'v' END), (- (((rt0.c4)|(rt0.c3)))) FROM rt0, vt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (-1.392572445E9) AND ('i㱻')) THEN 'w]' ELSE (NULL IN ()) END);SELECT DISTINCT CAST(vt1.c0 COLLATE BINARY AS TEXT) FROM t0, vt0, rt0, vt1; -- 0ms;
SELECT DISTINCT MIN(vt1.c2), (- (0Xffffffff8b883f53)), (NOT ((- (vt1.c0)))) FROM vt0 WHERE ((- ('1409220250')) COLLATE NOCASE);SELECT DISTINCT (((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c1)) IN ()) FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, vt1, t0, vt0 WHERE (((((((NULL)+(0.37460868389834356)))OR(CAST('-856268533' AS INTEGER))))AND(((0.040828819632283686)IS NOT(x''))))); -- 1ms;
SELECT DISTINCT json_valid((+ (vt1.c2))), ((vt1.c0 COLLATE BINARY)<(rt0.c0 COLLATE BINARY)), ((((('1050153202')AND(vt1.c1))))>=((json_array_length(vt0.c0, rt0.c0)))) FROM t0, vt1, rt0 WHERE ((((((0.4755313046689109)&(x''))))<=((((0.6311754847652817)+(x''))))));SELECT ALL (((((('') ISNULL))OR(TOTAL(rt0.c3))))AND(744235214)), ((x'4063')-((- (vt1.c0)))), (rt0.c3 IN ()) COLLATE BINARY FROM vt0;SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN ()), CASE WHEN t0.c1 COLLATE BINARY THEN ((t0.c1)*(rt0.c3)) ELSE (+ (rt0.c4)) END, (((NOT (rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (vt1.c2) AND (vt1.c2))) AND (((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))), CAST((rt0.c0 IN ()) AS NUMERIC), ((t0.c1) BETWEEN ((((0.8708680342622053))==((rt0.c1)))) AND (GROUP_CONCAT(rt0.c4))) FROM rt0, t0;SELECT DISTINCT ((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))OR(rt0.c2)))OR(vt1.c2)))/('695717133')) FROM vt1, t0 WHERE (CASE 0.04700365650218763 COLLATE NOCASE  WHEN ((((NULL)AND('-1370415631')))AND('*')) THEN (NOT (-296571309)) END);SELECT ((((rt0.c2)IS NOT(vt1.c1)))>>((vt1.c1 IN ()))), (((0.2724126623833516 IN ()))LIKE((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((t0.c2))))), (('915819626') NOT BETWEEN (SUM(vt1.c2)) AND (((vt1.c2)=(t0.c0)))) FROM vt0, vt1, t0 ORDER BY (((rt0.c4, t0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM, t0.c1, vt1.c2 COLLATE NOCASE)) AND ((vt1.c2 COLLATE NOCASE, ((rt0.c4)!=(rt0.c2)), (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c2)))))) ASC;SELECT ALL CASE WHEN CAST(t0.c0 AS INTEGER) THEN CAST(vt0.c0 AS INTEGER) WHEN ((rt0.c4) ISNULL) THEN (~ (rt0.c2)) WHEN ((((vt1.c1)AND(vt1.c2)))OR(t0.c2)) THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE vt1.c1 END ELSE (rt0.c4 IN (t0.c1)) END FROM rt0;SELECT ((AVG(NULL))IS(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END)) FROM vt0 WHERE (((CASE '815080266'  WHEN 0.22878485488229272 THEN NULL ELSE 0.6240383425025325 END) NOT BETWEEN (((((((((x'0517e808')AND(0.4851065879596065)))OR('?|7>Xi')))AND('1741572504')))AND(x'd5fc'))) AND (NULL)));SELECT DISTINCT vt0.c0, ((((0.7474320110949256) NOT BETWEEN (vt0.c0) AND (t0.c2)))&(((rt0.c3) NOTNULL))), (+ (vt1.c0 COLLATE RTRIM)), x'', ((((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0))) IS TRUE) FROM t0;SELECT DISTINCT ((((t0.c2) ISNULL)) IS FALSE) FROM t0, rt0, vt0, vt1; -- 0ms;
SELECT (((- (rt0.c0))) NOT BETWEEN (((t0.c1) NOT NULL)) AND (((rt0.c1)<(t0.c0)))) FROM vt0, t0;SELECT DISTINCT ((CASE WHEN t0.c1 THEN t0.c2 WHEN vt1.c2 THEN rt0.c3 WHEN t0.c0 THEN vt1.c2 END)OR((t0.c0 IN ()))) FROM rt0, vt0 WHERE (((((CASE WHEN NULL THEN x'' WHEN 0X2d2d5b9 THEN 0.4481334629078966 WHEN 0.5902793449923481 THEN '-66268466' END)OR(((((NULL)OR(NULL)))OR('')))))AND(((0X7c00f8c8) BETWEEN (9.333470383744435E-4) AND (0.9408054989285349)))));SELECT ((((((((((rt0.c2)AND(rt0.c3)))AND(vt1.c0)))AND(t0.c2)))AND(t0.c0)))%(((((((((t0.c2)OR(vt0.c0)))AND(rt0.c0)))AND(t0.c0)))AND(t0.c0)))) FROM vt0 GROUP BY UNLIKELY(DISTINCT (((rt0.c3))<((t0.c0)))) HAVING CAST(((vt1.c0)>(x'')) AS TEXT);SELECT DISTINCT ((+ (rt0.c1)) IN (((0x73d01448)-(vt1.c1)))) FROM vt1 WHERE ((+ (((NULL)GLOB(x'')))));SELECT DISTINCT ((((((rt0.c3) ISNULL))AND(((t0.c0)<=(rt0.c2)))))AND(((vt1.c1)>(vt0.c0)))) FROM rt0, vt1, vt0, t0 WHERE (CAST('TRUE' AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT LIKELY(DISTINCT rt0.c0) FROM t0, vt1, vt0 WHERE (((CAST(NULL AS INTEGER))>((~ (x'')))));SELECT 2.105834865E9 FROM vt0, rt0, t0 WHERE ((((((((((((((((x'', 0.4910140177025655, '/?H+Z')) BETWEEN ((-8.77526E7, '1225047352', NULL)) AND ((4.76589355E8, NULL, 0.4388695535530266))))AND((0.023134015977032463 IN ()))))AND((- (NULL)))))OR(((((NULL)AND(x'')))AND(0.42228092478297397)))))OR((-1.44583266E9 IN (x'')))))OR((x'' IN (x'')))))AND('-458439475' COLLATE BINARY))) ORDER BY (- (CAST(vt1.c2 AS REAL)))  NULLS FIRST;SELECT DISTINCT 1239823296 FROM vt1, vt0, t0, rt0 WHERE ((((x'', 0X6995e62c, 0X601911af)) NOT BETWEEN (((~ ('')), (0xffffffffefe8501c IN ()), 0.8639309458479041 COLLATE NOCASE)) AND ((x'', ((1)=(x'')), ((x'c861')>>(1946642030)))))) LIMIT -1321711127; -- 0ms;
SELECT ALL ((vt1.c0 COLLATE NOCASE)/(DATE(vt1.c0, rt0.c3, vt0.c0))) FROM vt1, rt0 WHERE (((('-455843054', 1590324413, 444936253)) BETWEEN ((CASE 0.7929097385776087  WHEN '' THEN '' ELSE 0.9403121820328377 END, NULL, CAST('{}' AS REAL))) AND ((NULL, x'' COLLATE RTRIM, NULL))));SELECT ALL ((((COUNT(*))OR(((((vt1.c1)AND(rt0.c0)))OR(vt1.c0)))))OR(vt1.c2)) FROM t0;SELECT ALL (((((((rt0.c2))==((rt0.c0))))AND((((rt0.c1))>=((rt0.c3))))))AND(((rt0.c4) IS FALSE))), CASE ((rt0.c2) NOT BETWEEN (t0.c2) AND (rt0.c2))  WHEN CAST(rt0.c3 AS INTEGER) THEN vt1.c2 COLLATE RTRIM WHEN vt1.c2 THEN AVG(vt1.c0) WHEN LOWER(DISTINCT vt1.c0) THEN ((t0.c1)>=(rt0.c1)) END, COUNT(((rt0.c4)/(rt0.c4))) OVER ( PARTITION BY (CAST(rt0.c0 AS INTEGER) IN ()), (((rt0.c2 IN (t0.c2))) ISNULL), (0.18955125294217434 IN (((t0.c0)%(t0.c2)), (t0.c1 IN (t0.c2)))), x'') FROM t0;SELECT ALL DENSE_RANK() OVER () FROM vt1; -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE) ISNULL) FROM vt0, rt0, vt1, t0 WHERE ((- ((('-1377499360')*(x''))))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((vt0.c0)<(rt0.c2)), rt0.c3 COLLATE BINARY), (((rt0.c1 IN (t0.c2)))/(CASE vt1.c0  WHEN vt1.c2 THEN t0.c0 WHEN vt1.c2 THEN vt1.c2 WHEN 0.5109146431117051 THEN vt1.c0 ELSE t0.c0 END)), (((((rt0.c2))>((rt0.c2))))=((((vt1.c0))<=((rt0.c2))))) FROM vt1, t0, rt0, vt0 WHERE ((((((NULL))==((0x11f2accd))))OR((('')|(x''))))) ORDER BY (((vt1.c0 IN (vt1.c2))) NOT BETWEEN ((~ (rt0.c2))) AND ((((rt0.c1, vt1.c2, rt0.c1))<((vt1.c0, rt0.c0, vt1.c0))))); -- 0ms;
SELECT LIKELY(t0.c1 COLLATE RTRIM) FROM vt1, t0, vt0 WHERE ((((('UxzEj*V')IS(0.6695105962600427)))>(GLOB(x'', 0.24101365700502175)))); -- 0ms;
SELECT DISTINCT 0xffffffffbbc550e3 FROM t0, rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST(NULL AS REAL)) OVER () FROM vt0, t0 WHERE (((((x'e7176613')||(x'')))>=('1110159344' COLLATE BINARY))); -- 0ms;
SELECT rt0.c2 FROM vt0, vt1;SELECT ALL (+ (t0.c1 COLLATE BINARY)) FROM vt0, t0; -- 0ms;
SELECT ALL rt0.c0 FROM vt1, t0 GROUP BY (((t0.c0, t0.c0, t0.c2)) BETWEEN ((((t0.c2)LIKE(vt1.c1)), ((vt0.c0)+(rt0.c4)), ((vt0.c0) BETWEEN (t0.c0) AND (t0.c1)))) AND ((((vt1.c2) ISNULL), t0.c2, vt1.c0))), ((((- (0.49963726868660663))))>=((NULL))), CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE HAVING CAST(vt1.c0 AS BLOB);SELECT DISTINCT ((((((((((((((t0.c0)AND(vt1.c2)))OR(-1445832660)))OR(vt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(t0.c1)))GLOB(GROUP_CONCAT(t0.c1))) FROM t0, vt0, rt0;SELECT DISTINCT (((rt0.c0))>((((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c0))))) FROM rt0, vt1, t0; -- 0ms;
SELECT DISTINCT NULL FROM vt1, rt0, t0, vt0 WHERE ((('' COLLATE RTRIM)OR(((x'') NOT BETWEEN (0.19247115435009432) AND ('-1863465672'))))); -- 0ms;
SELECT DISTINCT ABS((((rt0.c3))<=((rt0.c1)))) FROM vt1;SELECT ALL ((((((((CAST(rt0.c2 AS REAL))OR(rt0.c4 COLLATE RTRIM)))OR((rt0.c4 IN ()))))AND(((rt0.c1)/(rt0.c3)))))AND(rt0.c0)) FROM vt1 WHERE (((('1489008740')) BETWEEN ((((((0.26708538870167875)OR('儚#x')))OR(x'')))) AND (('955091643' COLLATE NOCASE))));SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, vt1; -- 0ms;
SELECT DISTINCT rt0.c1 COLLATE BINARY FROM vt1, vt0, rt0 LIMIT 1438749759 OFFSET 1225151514; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ())) IS TRUE) FROM vt1, rt0 WHERE (CAST((('-2042523889')AND(NULL)) AS TEXT)) GROUP BY x'e006', CASE rt0.c0  WHEN ROUND(t0.c0, t0.c0) THEN (vt0.c0 IN ('', rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((vt0.c0)==(rt0.c2)) WHEN (('-656571841') IS TRUE) THEN CAST(rt0.c0 AS BLOB) END, CAST(vt1.c1 AS NUMERIC) COLLATE BINARY COLLATE BINARY, ((CAST(vt1.c2 AS INTEGER)) BETWEEN ((rt0.c1 IN (rt0.c4))) AND ((- (rt0.c3)))), ((COALESCE(NULL, 0x5a3e3599, rt0.c0, rt0.c4))>=(CAST(vt0.c0 AS TEXT)));SELECT DISTINCT ((((vt0.c0)IS(rt0.c2))) BETWEEN (COUNT(rt0.c2)) AND (0.9610551027180815)), TOTAL((+ (rt0.c4))), ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE WHEN vt0.c0 THEN NULL END)) FROM t0, rt0, vt0, vt1; -- 0ms;
SELECT ((((TOTAL(rt0.c3))OR('1456068195')))OR((- (vt1.c2)))) FROM vt0, rt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((((vt1.c1)OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))OR(t0.c2)))<<((((rt0.c4))<>((vt1.c2))))) FROM rt0 INNER JOIN vt0 ON (((rt0.c3, CAST(vt1.c0 AS INTEGER), ((vt1.c0)OR(rt0.c0))))==((rt0.c3, vt1.c2, ((vt1.c1)+(rt0.c0))))) INNER JOIN vt1 ON (- (rt0.c3)) WHERE (((TRIM(DISTINCT '.{!SEJ4')) NOT NULL));SELECT HEX(DISTINCT ((vt1.c0)LIKE(vt1.c0))), CAST((0Xffffffffa319ce46 IN ()) AS REAL), COUNT(*) OVER () FROM t0, vt0, rt0 WHERE (CASE WHEN ((NULL)>('1771431468')) THEN CASE NULL  WHEN x'' THEN x'' ELSE 7.65204952E8 END END) GROUP BY (('HG') ISNULL), '-k)[4mw}', rt0.c3 HAVING CAST(((((vt1.c1)OR(rt0.c3)))OR(t0.c1)) AS REAL);SELECT DISTINCT ((((rt0.c3)<(t0.c0))) ISNULL) FROM vt1, t0, vt0, rt0; -- 0ms;
SELECT ((NULL) BETWEEN (x'') AND (vt0.c0)) COLLATE NOCASE, (((((rt0.c1) BETWEEN (t0.c1) AND (0.922181811103223))))<=((((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c4))))), (((t0.c1)) NOT BETWEEN (((+ (rt0.c4)))) AND ((((vt1.c1) IS FALSE)))), CAST((~ (rt0.c1)) AS INTEGER), ((((((t0.c0)AND(0Xffffffff9a855dd3)))AND(t0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((t0.c0)<<(vt0.c0)))) FROM vt1, rt0, vt0, t0; -- 0ms;
SELECT DISTINCT (((('1290420703')OR(((rt0.c2) BETWEEN (t0.c2) AND (t0.c0)))))AND(((rt0.c3) BETWEEN (t0.c0) AND (vt1.c1)))), COUNT((+ ('1112660980'))) OVER (), (NOT (RTRIM(t0.c0))) FROM t0, rt0 WHERE (((NULL COLLATE BINARY) ISNULL));SELECT DISTINCT rt0.c1 FROM rt0, vt0 NOT INDEXED, t0 WHERE (((ABS(NULL)) NOT BETWEEN (((((((((-1)OR(2.130876758E9)))AND(0.13155993235603913)))OR('b|jT+NW')))AND(0.21553351014630784))) AND (CASE WHEN x'' THEN 0.229742915318774 WHEN NULL THEN '-640719525' WHEN '-22680878' THEN '-875342319' END))); -- 0ms;
SELECT DISTINCT MIN(((rt0.c3)*(vt0.c0))) FROM rt0, t0, vt1, vt0 WHERE ((- (((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((vt0.c0) IS FALSE))||(x''))) OVER (), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)) AS BLOB), (((((t0.c1))<=((rt0.c3))))*((- (1401340524)))) FROM vt0;SELECT ALL CASE WHEN ((rt0.c1)||(rt0.c4)) THEN ((((t0.c1)AND(vt0.c0)))AND(vt1.c0)) END, UNLIKELY(vt0.c0) COLLATE NOCASE, ((((vt1.c1)>>(vt0.c0))) BETWEEN (MIN(rt0.c0, t0.c2)) AND (((557712069)%(t0.c1)))), (((rt0.c0, vt1.c2, rt0.c3)) BETWEEN ((CAST(t0.c0 AS BLOB), (((vt1.c2))>=((rt0.c3))), ((rt0.c0)>(vt1.c2)))) AND ((CASE t0.c2  WHEN vt1.c0 THEN x'' END, (rt0.c4 IN ()), CASE vt1.c1  WHEN rt0.c4 THEN rt0.c2 ELSE '1528276239' END))), ((((~ (rt0.c1))))>=((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) FROM t0, vt0, vt1, rt0; -- 0ms;
SELECT ((((TOTAL_CHANGES())OR((((vt1.c0))!=((t0.c0))))))AND(((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)))), (((- (vt0.c0))) NOT BETWEEN ((((vt1.c0, rt0.c2, rt0.c2))<=((vt1.c1, t0.c1, rt0.c2)))) AND (rt0.c2)), (((((rt0.c3, rt0.c3, t0.c0))>(('1718721329', rt0.c4, rt0.c0))))>=(0X2d9c19d8)) FROM vt0, rt0, t0, vt1 WHERE (((((((x'')AND('7cX8}ND+')))OR(0.6533709856492333))) NOT BETWEEN ((('') ISNULL)) AND (UPPER(x'')))); -- 0ms;
SELECT HEX(vt1.c2), (CASE vt1.c2  WHEN vt1.c0 THEN rt0.c2 END IN ()), (rt0.c2 IN ()) FROM vt1, rt0, vt0 LIMIT 1585642694; -- 0ms;
SELECT vt1.c1 FROM t0;SELECT ALL (((rt0.c2)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))) COLLATE RTRIM FROM vt1, vt0, t0, rt0; -- 0ms;
SELECT CASE WHEN ((t0.c1) IS FALSE) THEN CAST(rt0.c0 AS BLOB) WHEN ((vt0.c0)AND(rt0.c2)) THEN (((vt1.c1, t0.c0, rt0.c3))<(('368293681', t0.c1, 'b5䶸*ourzx'))) WHEN (vt0.c0 IN (vt0.c0)) THEN MIN(t0.c2, rt0.c3) ELSE ((vt1.c0) NOT NULL) END FROM rt0 WHERE (JULIANDAY(CAST(NULL AS REAL), ((NULL) BETWEEN ('LYO0X|6') AND ('789830871')), CASE WHEN 0xffffffffee388027 THEN 1830292501 ELSE '-909341624' END));SELECT DISTINCT (('1217572950') NOT BETWEEN ((((rt0.c2, rt0.c3, vt1.c1)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((t0.c1, vt1.c2, rt0.c2)))) AND (vt1.c1)), CASE WHEN vt0.c0 THEN ((rt0.c1) NOTNULL) ELSE ((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))OR(x'76ed')) END, (((t0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)) IN ()) FROM t0, vt0 WHERE (((NULL)OR(CASE WHEN NULL THEN 'n' END))) LIMIT 344114988 OFFSET -1948702025;SELECT (((rt0.c0) IS TRUE) IN (rt0.c4 COLLATE RTRIM)) FROM vt0, vt1, t0, rt0 GROUP BY ((((vt1.c1)OR(vt0.c0)))OR((rt0.c0 IN ()))) HAVING COUNT(*) LIMIT -1242804434; -- 0ms;
SELECT ALL rt0.c2, (((t0.c2)) NOT BETWEEN ((MIN(vt1.c0, rt0.c2, rt0.c0, vt1.c1))) AND ((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 ELSE t0.c1 END))), CUME_DIST() OVER () FROM vt1, vt0, t0;SELECT DISTINCT NULL FROM vt1, rt0, t0 WHERE (((NULL)<<(NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c0)LIKE(t0.c1)) THEN CASE rt0.c0  WHEN vt1.c2 THEN vt1.c1 END END FROM t0, vt1, vt0, rt0 WHERE (((('?|7>xi')) BETWEEN ((0.9536207450279064)) AND (((((NULL)) BETWEEN (('-1300569857')) AND (('2125484307'))))))); -- 0ms;
SELECT ALL GROUP_CONCAT((((rt0.c1, t0.c1, rt0.c3))>((x'', rt0.c2, rt0.c1)))) OVER (), vt1.c0, (- ('')), vt1.c2, ((x'0747d14d') NOT NULL) FROM rt0 LIMIT 184352658 OFFSET -1717818168;SELECT DISTINCT CASE 0.5160721664347768  WHEN COUNT(rt0.c2) THEN SUM(rt0.c2) WHEN (+ (vt1.c1)) THEN ((vt1.c1) ISNULL) WHEN vt1.c2 THEN (- (vt1.c1)) END FROM vt1;SELECT DISTINCT ((t0.c1)<=(vt0.c0)) COLLATE RTRIM FROM vt1, t0, rt0, vt0; -- 0ms;
SELECT ALL (((rt0.c1 IN ())) BETWEEN (SUM(NULL)) AND ((~ (rt0.c3)))) FROM t0, vt0, vt1 WHERE ((((((((((((((('-291892609') BETWEEN (125571699) AND ('-906542555')))OR(NULL)))AND(CASE 0.987446040183987  WHEN 'Tᰡ' THEN NULL END)))OR((('0f{஡#')>(NULL)))))AND(x'')))OR(NULL)))OR((0.4042098912839882 IN (0.7284707167565592))))) GROUP BY (((((t0.c1) IS FALSE), (rt0.c4 IN (t0.c0, vt1.c1)), vt1.c0 COLLATE BINARY, (vt1.c2 IN ()), NULL))==(((~ (rt0.c0)), rt0.c2 COLLATE BINARY, ((rt0.c0) NOTNULL), '-1786741621', LIKE(t0.c0, rt0.c2, '8'))));SELECT DISTINCT ((HEX(vt1.c1))LIKE(vt0.c0 COLLATE BINARY)) FROM vt0;SELECT DISTINCT (+ (json_extract(vt0.c0, '?'))) FROM vt0, t0, rt0; -- 0ms;
SELECT ALL ((((rt0.c0)&(vt1.c1))) NOT BETWEEN (COUNT(rt0.c4)) AND (((t0.c1) NOT NULL))) FROM rt0, vt0 GROUP BY (+ (NULL)) HAVING TRIM(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)));SELECT DISTINCT ((NOT (rt0.c4)) IN ((rt0.c1 IN ()))) FROM t0, vt1, vt0;SELECT DISTINCT (- (CAST(rt0.c4 AS TEXT))) FROM vt0, t0, rt0, vt1 WHERE (CASE WHEN (('i.\rg6')>=(x'7059')) THEN x'' END); -- 0ms;
SELECT ((t0.c1) NOTNULL) COLLATE RTRIM FROM vt1 LIMIT -472585455 OFFSET -944824788;SELECT ALL COUNT(vt1.c1) OVER () FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('/K3?f2', MAX(rt0.c0, vt0.c0), ((vt1.c1) BETWEEN ('25PS') AND (rt0.c2)))) AND ((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((t0.c0)/(rt0.c2)), t0.c1 COLLATE RTRIM))) INNER JOIN vt1 ON (((((vt1.c2))<((vt1.c1))))OR((- (t0.c0)))) WHERE (HEX((('udi') IS FALSE)));SELECT DISTINCT (((((vt1.c1) BETWEEN (x'23dd') AND (rt0.c0)), (((vt1.c1, rt0.c1, rt0.c4)) BETWEEN ((vt1.c0, '-1212150948', rt0.c2)) AND ((vt0.c0, rt0.c2, 0.6499248326390348))), CAST(vt1.c0 AS NUMERIC)))<=((rt0.c4 COLLATE RTRIM, ((rt0.c1)AND(t0.c1)), (t0.c0 IN (t0.c0))))) FROM vt1;SELECT NULL FROM vt0; -- 0ms;
SELECT ALL '-410131736' FROM vt1, t0, vt0; -- 0ms;
SELECT ALL CAST(((((((((((((((((vt1.c1)AND(t0.c2)))AND(t0.c2)))AND(vt1.c0)))OR(rt0.c0)))OR(rt0.c4)))AND(t0.c1)))AND(rt0.c4)))OR(rt0.c2)) AS BLOB), ((((t0.c0)||(t0.c1))) NOTNULL), CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((rt0.c4) NOT BETWEEN (t0.c2) AND (rt0.c3)) THEN ((vt1.c2) BETWEEN (vt1.c2) AND (x'b7ec')) WHEN ((rt0.c3)*(NULL)) THEN TRIM(vt1.c2) WHEN SQLITE_SOURCE_ID() THEN ((rt0.c1)<(vt1.c2)) ELSE ((vt0.c0) NOT BETWEEN (t0.c2) AND (vt1.c0)) END, rt0.c2, (((vt1.c0, vt1.c2, t0.c0)) NOT BETWEEN ((((0.8164449497416113)>(vt0.c0)), AVG(rt0.c4), COALESCE(rt0.c4, rt0.c1))) AND ((((rt0.c1)<=(rt0.c0)), ((vt1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)), ((vt0.c0)>=(rt0.c4))))) FROM t0, vt1 CROSS JOIN vt0 ON (((((((((((rt0.c2))>((t0.c1))))AND(((x'019d') ISNULL))))OR(vt1.c2)))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)))OR(CAST(rt0.c4 AS NUMERIC)));SELECT (CAST(rt0.c0 AS TEXT) IN (((t0.c0)<<(vt1.c0)), ((vt0.c0)&(rt0.c0)))), '', GROUP_CONCAT(t0.c2) COLLATE NOCASE FROM t0, vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT COALESCE(0.9705326837154463, t0.c2 COLLATE RTRIM) FROM vt0, rt0, t0; -- 0ms;
SELECT ALL NULL FROM rt0 WHERE (UNLIKELY(((x'')IS('2008033896')))); -- 0ms;
SELECT ALL ((((t0.c2) NOTNULL)) NOT NULL) FROM rt0, vt1 NOT INDEXED, t0, vt0; -- 0ms;
SELECT DISTINCT SUM((~ (rt0.c1))) OVER ( GROUPS  UNBOUNDED PRECEDING), (((rt0.c1, t0.c1, 'r')) NOT BETWEEN ((CASE WHEN rt0.c3 THEN '' ELSE t0.c2 END, (- (rt0.c3)), (((vt0.c0))>((rt0.c3))))) AND ((t0.c0, ((rt0.c0) BETWEEN (rt0.c3) AND (t0.c1)), rt0.c0))), (((GROUP_CONCAT(rt0.c2), (~ (rt0.c0)), ((rt0.c3)OR(rt0.c1))))<((((t0.c0) BETWEEN (x'') AND (vt1.c2)), (+ (NULL)), ((vt1.c2)>=(vt1.c0))))) FROM vt0, t0;SELECT ALL ((CASE WHEN vt1.c1 THEN vt1.c2 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c4 WHEN t0.c1 THEN rt0.c4 END)-(((t0.c0) NOT NULL))) FROM vt1, rt0, t0, vt0 WHERE ((((0.14349330292141937) NOT BETWEEN (0xffffffffd83fc263) AND (NULL)) IN (CASE 'd?'  WHEN -590577106 THEN 0xffffffffeeb8d2b5 WHEN '0.04700365650218763' THEN x'' WHEN x'' THEN -1.948702025E9 END))); -- 0ms;
SELECT ALL ((((rt0.c0)==(rt0.c0)))GLOB(((((((((t0.c2)OR(rt0.c1)))AND(vt1.c1)))AND(vt1.c2)))AND(rt0.c2)))) FROM t0, vt0, rt0 ORDER BY (~ (((('-240047453'))<=((vt1.c2))))) ASC  NULLS FIRST, t0.c0, (CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 WHEN vt1.c2 THEN vt1.c1 WHEN vt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c0 END IN ()) ASC;SELECT (LIKE(x'', rt0.c2, '0') IN ()) FROM vt1, t0 WHERE (0.14848692476833691); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1, t0; -- 0ms;
SELECT DISTINCT NULL, (((((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT BETWEEN (PRINTF(t0.c2, rt0.c3, vt1.c2)) AND (MIN(t0.c0))), ((((t0.c0)-(rt0.c3)))|((+ (t0.c2)))) FROM vt0 ORDER BY CAST(LOWER(rt0.c0) AS NUMERIC) DESC  NULLS FIRST, CASE ((rt0.c2)>(t0.c0))  WHEN (NOT (rt0.c3)) THEN t0.c2 COLLATE RTRIM WHEN ((t0.c2) NOT NULL) THEN ((((((((((((rt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(rt0.c3)))OR(rt0.c0)))OR(t0.c2)))OR(vt1.c0)) WHEN ((rt0.c4)LIKE(rt0.c2)) THEN ((0.8313539892319782)GLOB(t0.c0)) WHEN ((((vt1.c2)AND(rt0.c4)))OR(t0.c0)) THEN CASE NULL  WHEN rt0.c2 THEN vt0.c0 END WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.4300755339934621) THEN ((((((((rt0.c4)AND(t0.c1)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) END ASC  NULLS FIRST;SELECT DISTINCT AVG((('-1159496372')||(rt0.c4))) FROM t0 WHERE (((UPPER('')) ISNULL));SELECT ALL TRIM(CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) FROM t0, vt1, rt0 WHERE ((((-1948702025 IN ()))<>(((x'') NOT BETWEEN (x'27c6') AND (0.4016973426565027))))) LIMIT -1948116213; -- 0ms;
SELECT ALL (CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c1 END IN ()) FROM vt0, rt0 LIMIT 1; -- 0ms;
SELECT DISTINCT MAX(TOTAL(((t0.c2)LIKE(t0.c1)))) FROM t0 WHERE (((json_remove('-1107260025', 0.9174213190305879))+(CASE 'TRUE'  WHEN 0.08110995390047482 THEN x'70b2' WHEN 0Xffffffffe549578b THEN '' WHEN NULL THEN NULL WHEN x'' THEN 0.6279792674315803 WHEN '' THEN NULL END))) ORDER BY ((((rt0.c3) NOT BETWEEN (t0.c1) AND (rt0.c4))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c3)<(vt1.c0)))), ((((((vt1.c2) NOT NULL))OR('1844763935')))AND((rt0.c3 IN ()))) DESC  NULLS FIRST, (NOT (((t0.c1) IS TRUE))) ASC  NULLS FIRST;SELECT ALL 0.8620445366594607 FROM rt0, t0, vt0, vt1 WHERE (((LIKELIHOOD('yP', 0.5039232772446588))IS NOT(NULL))) GROUP BY CASE t0.c1  WHEN vt1.c0 THEN vt1.c2 WHEN rt0.c0 THEN t0.c0 WHEN vt1.c0 THEN rt0.c4 END COLLATE NOCASE; -- 0ms;
SELECT (- (rt0.c0)) FROM vt0, t0, vt1, rt0; -- 0ms;
SELECT ALL '2147248574', (NOT (((rt0.c2) IS TRUE))), TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)), (- (t0.c2))) FROM t0, vt0, rt0 WHERE (((CAST(0.6102759221146281 AS REAL))*(CASE '㐦D7'  WHEN 0Xffffffff8c4881b9 THEN NULL END))) ORDER BY ((rt0.c2)LIKE(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c4 END))  NULLS FIRST;SELECT DISTINCT (((rt0.c2, rt0.c2, vt0.c0)) BETWEEN (((rt0.c1 IN ('')), ((((rt0.c2)OR(vt1.c0)))AND(t0.c1)), (t0.c2 IN ()))) AND ((rt0.c4, ((vt1.c1)|('-2005073837')), CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END))), ((HEX(rt0.c1)) NOT NULL), (((((+ (rt0.c2)))AND(((rt0.c4) NOTNULL))))AND(((vt1.c1)/(rt0.c4)))) FROM t0, rt0, vt1;SELECT ALL ((((vt1.c0) ISNULL))*((NOT (vt1.c0)))) FROM vt0, t0, rt0, vt1; -- 0ms;
SELECT DISTINCT ('695717133' IN ()) COLLATE RTRIM FROM rt0, t0 WHERE ((NOT (CAST('-1126719352' AS REAL)))) LIMIT -1701766908 OFFSET 1020434876; -- 0ms;
SELECT ALL (((((NULL)AND(t0.c1)))OR(rt0.c1)) IN ()), json_array_length(((rt0.c3)<<(rt0.c1)), (((rt0.c4, vt0.c0, t0.c0)) NOT BETWEEN ((rt0.c2, NULL, rt0.c0)) AND ((rt0.c1, rt0.c4, vt1.c0)))), 'v鍊V瓙S^RXf' FROM rt0, t0, vt0 WHERE (((((('')<<(0X5cb8c825)), LOWER('[*Lb(/-6'), '' COLLATE BINARY))!=(((+ (NULL)), (- (x'')), CAST(257214417 AS BLOB))))) GROUP BY '', ((((t0.c2)/(NULL))) IS FALSE), ((((vt1.c1)>>(vt1.c1)))=(((((rt0.c3)OR(vt1.c1)))AND(rt0.c4))));SELECT DISTINCT CASE WHEN CAST(x'cd24' AS BLOB) THEN t0.c2 COLLATE RTRIM END FROM t0 WHERE (((((0.9405728315541909 COLLATE NOCASE)OR(((((x'')OR('31')))OR('7')))))AND(CAST(x'fed8' AS TEXT)))); -- 0ms;
SELECT ALL ((((rt0.c0)<>(vt0.c0)))%((vt1.c2 IN ()))), rt0.c1, COUNT(*) OVER () FROM t0, rt0, vt1, vt0 ORDER BY CASE ((vt0.c0)IS(vt0.c0))  WHEN CASE WHEN NULL THEN rt0.c2 END THEN ((((rt0.c3)AND(vt1.c1)))OR(rt0.c3)) END  NULLS LAST, (CASE vt1.c1  WHEN rt0.c0 THEN t0.c0 END IN ()) ASC  NULLS LAST, rt0.c0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c4) ISNULL))OR(((rt0.c2)AND(t0.c1)))))OR((vt1.c2 IN ()))))AND(vt1.c1)))OR(rt0.c0)) FROM rt0, vt0, vt1 WHERE (((0.4968993047633752 COLLATE BINARY) NOT BETWEEN ((+ (NULL))) AND (((0.43528213401619076) ISNULL)))) ORDER BY (((vt0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((INSTR(-132907214, rt0.c2), ((((((((rt0.c4)OR(vt1.c2)))AND(t0.c1)))AND(rt0.c0)))OR(vt1.c1)), t0.c1 COLLATE NOCASE)) AND ((load_extension(rt0.c0), CAST(t0.c0 AS TEXT), CASE WHEN vt1.c0 THEN t0.c2 END))) DESC;SELECT ((((rt0.c1)GLOB(t0.c2))) IS FALSE) FROM rt0, vt0, t0, vt1; -- 0ms;
SELECT CASE ((((((((rt0.c0)AND(t0.c1)))AND(rt0.c4)))OR(t0.c0)))OR(rt0.c1))  WHEN GROUP_CONCAT(vt1.c2) THEN NULL WHEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END THEN ((vt1.c2)LIKE(t0.c2)) WHEN ((vt1.c2)IS(rt0.c2)) THEN ((((t0.c1)OR(rt0.c1)))AND(x'')) ELSE vt1.c0 COLLATE RTRIM END FROM rt0 ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN (rt0.c4 COLLATE NOCASE) AND ((t0.c0 IN ())))  NULLS LAST LIMIT -444070069 OFFSET -1488334786;SELECT DISTINCT CAST(((rt0.c4) ISNULL) AS NUMERIC) FROM vt0 WHERE (((CASE '-856268533'  WHEN -2127596233 THEN '-1671601778' END)/((((x'')) BETWEEN ((0.25494320009841964)) AND (('}䂁8,T_p')))))) LIMIT -591142038;SELECT DISTINCT ((((vt1.c2 COLLATE BINARY)OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))OR((~ (t0.c0)))) FROM t0, vt0, rt0, vt1; -- 1ms;
SELECT DISTINCT vt0.c0 COLLATE RTRIM FROM vt1 ORDER BY CASE ((vt1.c0)>(vt1.c0))  WHEN CASE WHEN vt1.c1 THEN rt0.c0 WHEN '-156780169' THEN t0.c2 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c2 THEN rt0.c0 WHEN NULL THEN rt0.c0 END THEN ((rt0.c3)<<(rt0.c2)) ELSE (- (rt0.c1)) END DESC  NULLS LAST, ((((t0.c2) NOT NULL))GLOB(((t0.c1)<=(vt0.c0))));SELECT DISTINCT LEAD(((vt1.c0)<=(vt1.c2)) COLLATE NOCASE, ((((vt1.c0)AND(vt1.c2 COLLATE RTRIM)))AND(((vt1.c2)>(vt1.c0)))), (((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0)) IN ())) OVER () FROM vt1; -- 0ms;
SELECT ((vt1.c2) NOT BETWEEN (rt0.c3) AND ('-1559124242')) COLLATE NOCASE FROM vt1;SELECT DISTINCT CHANGES(), ((CASE t0.c2  WHEN '-1262989312' THEN vt1.c2 ELSE vt0.c0 END) NOT NULL), UPPER(DISTINCT (t0.c1 IN ())) FROM t0, rt0 WHERE ('1037790570');SELECT AVG(((rt0.c0)/(t0.c1))) OVER (), (NOT (rt0.c1)) COLLATE BINARY, CAST(((rt0.c2) NOT BETWEEN ('-1938519600') AND (rt0.c1)) AS REAL), RANK() OVER ( ORDER BY (NOT ((((rt0.c0))>=((rt0.c0)))))), (((rt0.c2)) BETWEEN ((((((rt0.c4)AND(vt0.c0)))OR(vt1.c0)))) AND ((TOTAL(vt1.c2)))) FROM vt0, t0, rt0, vt1 WHERE (CASE (x'' IN ())  WHEN ((0xfffffffffd425da1)>=(x'')) THEN ((x'e5e7')AND('ylqqminutes>7')) WHEN CASE 0X13ff2f06  WHEN 'kQ1]wq' THEN x'' END THEN SUBSTR('aa', NULL) WHEN (('125571699') BETWEEN (x'') AND (NULL)) THEN CASE NULL  WHEN NULL THEN NULL ELSE '' END END) GROUP BY ((rt0.c0)<>((NOT (rt0.c3)))) HAVING LIKELIHOOD((((rt0.c1)) NOT BETWEEN ((x'')) AND ((''))), 0.16435648609556686); -- 0ms;
SELECT '-240047453', CASE WHEN MIN(rt0.c2) THEN CASE vt1.c1  WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c0 END END, CASE (((vt1.c2, rt0.c3, t0.c1)) BETWEEN ((t0.c2, rt0.c2, x'')) AND ((rt0.c1, rt0.c0, rt0.c1)))  WHEN ((((vt1.c0)AND(t0.c2)))AND(x'')) THEN 1.225151514E9 WHEN ((((((((rt0.c2)AND(NULL)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)) THEN (- (vt1.c0)) WHEN rt0.c4 THEN CAST(t0.c2 AS TEXT) END, ((rt0.c0 COLLATE BINARY) NOTNULL), CAST(CAST(t0.c0 AS NUMERIC) AS TEXT) FROM t0 LIMIT -1212657982;SELECT ((((MAX(vt1.c1))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))))AND(((((rt0.c0)AND(rt0.c4)))OR(vt1.c0)))) FROM vt0, vt1, t0, rt0; -- 0ms;
SELECT DISTINCT CAST(((0.14656700264760947) BETWEEN (rt0.c0) AND ('0.8183277111012369')) AS BLOB), rt0.c4, TOTAL(CAST(rt0.c1 AS BLOB)) OVER () FROM rt0, vt1, vt0, t0 WHERE (0.2421516860313515) LIMIT -410131736 OFFSET -1954771843; -- 0ms;
SELECT CASE (+ (vt1.c2))  WHEN MIN(rt0.c4) THEN ((vt1.c1) NOT BETWEEN (x'') AND (0x3e7ab584)) ELSE ((t0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END, x'', CASE WHEN (vt1.c1 IN (vt1.c0)) THEN ((rt0.c4)>=(vt1.c0)) WHEN ((t0.c2) IS FALSE) THEN t0.c2 WHEN INSTR(rt0.c1, vt1.c1) THEN ((vt1.c0) NOTNULL) ELSE CAST(t0.c0 AS TEXT) END FROM rt0, vt0, vt1 GROUP BY (('723131425') IS TRUE), x'', (~ (((NULL)<=(rt0.c0)))) HAVING (((((t0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c4)))) BETWEEN (((rt0.c1) IS TRUE)) AND ((- (rt0.c1))));SELECT DISTINCT ((((rt0.c0)%(rt0.c2))) ISNULL) FROM t0, rt0, vt0 ORDER BY 0.3127983696969445  NULLS LAST; -- 1ms;
SELECT NULL FROM rt0, vt1, vt0, t0; -- 0ms;
SELECT ALL vt1.c0 FROM rt0, vt1, vt0, t0; -- 0ms;
SELECT DISTINCT CAST(x'' AS INTEGER) FROM rt0, vt1; -- 0ms;
SELECT CAST(UNLIKELY(rt0.c3) AS INTEGER) FROM t0, vt1 WHERE ((NOT ((((x'c8c8')) BETWEEN ((0.5559287934488703)) AND ((-439069591))))));SELECT ALL -2.89877323E8, CASE WHEN COALESCE(rt0.c1, rt0.c4, t0.c2, t0.c1) THEN ((rt0.c0) IS TRUE) WHEN (('436318090')IS(rt0.c2)) THEN CASE WHEN rt0.c0 THEN vt1.c2 WHEN 0.8629371028957569 THEN vt1.c2 WHEN vt1.c1 THEN t0.c2 ELSE vt0.c0 END WHEN SQLITE_COMPILEOPTION_USED(rt0.c4) THEN (((rt0.c4)) BETWEEN ((x'')) AND ((vt0.c0))) WHEN rt0.c0 THEN (NOT (rt0.c0)) WHEN (NOT (rt0.c2)) THEN (((vt1.c0))>((t0.c1))) END, COUNT(*) FILTER(WHERE CAST(CASE vt1.c1  WHEN rt0.c1 THEN t0.c0 END AS NUMERIC)) OVER () FROM vt0, vt1, t0, rt0 WHERE (((- ('/L')) IN ())) GROUP BY CASE ((vt0.c0)<>(t0.c0))  WHEN NULL THEN ((((rt0.c3)OR(0.4500771978606991)))AND(vt1.c1)) ELSE rt0.c1 COLLATE NOCASE END LIMIT -38107308; -- 0ms;
SELECT ((x'cff3') IS TRUE) FROM rt0 ORDER BY (((+ (vt1.c2)))<<(CAST(vt1.c0 AS REAL))) ASC;SELECT rt0.c1, (NOT (((vt1.c0)!=(t0.c0)))), ((rt0.c0)AND(vt1.c1)) COLLATE NOCASE FROM vt0, vt1;SELECT DISTINCT CASE (+ (0.5489846361915733))  WHEN ((t0.c2)GLOB(vt0.c0)) THEN MIN(t0.c0) END, ((x'') NOTNULL), CASE WHEN (rt0.c0 IN ()) THEN rt0.c1 ELSE (vt1.c1 IN (t0.c1)) END FROM vt1, vt0, t0, rt0 NOT INDEXED WHERE (CASE ((('-502222850', 'v(', 0.9428257472640649))>=((-213127384, 1.771431468E9, '-1818230136')))  WHEN (~ (0xffffffff8f475761)) THEN ((x'e2e2')>=(x'ec5c')) ELSE ((0.27294393501408865)/(0xffffffffdc04d45b)) END); -- 0ms;
SELECT DISTINCT 0.3759047638293611 FROM vt1; -- 0ms;
SELECT DISTINCT 0.2890166074999798 FROM t0, vt1 WHERE (LIKELY((NULL IN (x'')))); -- 0ms;
SELECT '*i4' FROM t0, rt0, vt0; -- 0ms;
SELECT ALL ((((vt1.c2)IS NOT(rt0.c1)))<=(rt0.c4)), json_extract(vt0.c0, 0.031118596354248074) COLLATE BINARY, t0.c2 FROM vt0, t0, rt0, vt1 WHERE ((- (CASE -1368963666  WHEN '' THEN '617716928' ELSE '}Cajx' END))); -- 0ms;
SELECT ALL CAST((rt0.c1 IN ()) AS TEXT) FROM vt1; -- 0ms;
SELECT DISTINCT (MAX(rt0.c0) IN ()) FROM rt0, t0, vt0, vt1; -- 1ms;
SELECT ALL (~ (CAST(rt0.c4 AS REAL))) FROM t0, rt0, vt0, vt1 WHERE (((NULL COLLATE BINARY) IS TRUE)) LIMIT 1632626210; -- 0ms;
SELECT COUNT((((rt0.c2, t0.c0, vt1.c1, vt1.c0, t0.c1)) BETWEEN ((vt1.c1, 0xffffffffe30c82f8, '-2085255835', 1661365882, rt0.c0)) AND ((rt0.c3, rt0.c4, rt0.c3, rt0.c4, vt1.c0)))) FROM vt0, vt1 WHERE ((((NULL IN ())) NOT BETWEEN (json_quote(0.7119283596755058)) AND (CASE '-507718000'  WHEN NULL THEN NULL ELSE -3.33005811E8 END)));SELECT DISTINCT ((((SUM(vt1.c1))OR(CASE WHEN rt0.c3 THEN vt1.c1 END)))OR(NULL)), ((~ (vt1.c2)) IN ()), ((((vt1.c1)=(vt1.c0))) NOT BETWEEN (((vt0.c0)|(rt0.c4))) AND (CASE WHEN rt0.c0 THEN rt0.c4 ELSE vt1.c0 END)) FROM t0, rt0, vt1;SELECT DISTINCT (CAST(rt0.c3 AS INTEGER) IN ()) FROM t0, rt0; -- 0ms;
SELECT ALL vt1.c0, ((((((((CAST('' AS NUMERIC))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))AND(((((vt1.c0)AND(t0.c0)))OR(vt1.c2)))))AND(((rt0.c4)>>(vt1.c0)))))AND(((t0.c1)<(rt0.c1)))), ((t0.c2)*(vt0.c0)) COLLATE BINARY FROM rt0 WHERE (UPPER(DISTINCT CASE WHEN 1091643844 THEN x'' ELSE '~]5_' END));SELECT DISTINCT (+ (rt0.c2)) COLLATE RTRIM COLLATE BINARY FROM rt0, vt1; -- 0ms;
SELECT ALL (((rt0.c3 IN (rt0.c1, rt0.c4))) NOTNULL), vt0.c0, COUNT((vt0.c0 IN ())) OVER () FROM vt1, vt0 WHERE (((((0.24031945195370363) IS TRUE)) NOT BETWEEN ((+ (x''))) AND (0.8993898839805864 COLLATE RTRIM))) ORDER BY ((0.6482353621451484)IS NOT((((t0.c1))=((vt1.c1)))))  NULLS FIRST LIMIT -1860261697;SELECT ALL ((((- (rt0.c2)), ((vt1.c2) NOTNULL), json_patch(vt0.c0, rt0.c4)))>((CAST(vt0.c0 AS NUMERIC), ((vt1.c2)%(t0.c2)), CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c2 THEN t0.c2 END))) FROM vt0 WHERE (((0xffffffffe62a8e88 COLLATE BINARY) NOT BETWEEN (CASE WHEN x'' THEN NULL WHEN '1238817742' THEN 0.10642388199008512 WHEN 0Xffffffff89b89df7 THEN NULL END) AND (((765204952) NOT NULL))));SELECT AVG(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE BINARY), (vt0.c0 IN (rt0.c1)) COLLATE BINARY, CASE (((vt0.c0))<((t0.c2)))  WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (1.456068195E9)) THEN (- (vt0.c0)) END, SUM(((rt0.c0)=(t0.c1))) OVER (), ROW_NUMBER() OVER () FROM t0, rt0 LIMIT -1877436474;SELECT vt1.c2 FROM rt0, t0 ORDER BY ((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN -1267450802 END) NOT BETWEEN ((((vt1.c2))=((t0.c1)))) AND (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))) ASC  NULLS FIRST;SELECT DISTINCT (((vt1.c2 IN (vt1.c1)))LIKE((rt0.c4 IN (vt1.c0)))) FROM vt1 ORDER BY ((((vt0.c0) NOTNULL)) IS FALSE) ASC, ((t0.c2) BETWEEN (CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE ']*' END) AND (CAST(vt1.c0 AS REAL)));SELECT ((CASE t0.c0  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN t0.c2 THEN t0.c1 END)*(CAST(rt0.c3 AS REAL))) FROM vt0, rt0, t0;SELECT TOTAL(229171659) FROM vt1, rt0, vt0, t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (- (CASE vt0.c0  WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c0 THEN NULL ELSE rt0.c0 END)) FROM t0 ORDER BY CASE ((rt0.c1)LIKE(x'eebc'))  WHEN CASE rt0.c3  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 END THEN vt1.c2 COLLATE RTRIM WHEN (((NULL, rt0.c4, rt0.c2))<((vt1.c1, rt0.c4, rt0.c3))) THEN ((((t0.c2)AND(vt1.c0)))AND(t0.c2)) WHEN CASE x''  WHEN vt1.c2 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 WHEN x'' THEN 0.4141333079769691 END THEN (((rt0.c3, t0.c0, rt0.c3))>((t0.c0, t0.c1, vt1.c1))) END;SELECT ALL ('-277873642' IN (((rt0.c1) ISNULL), ((rt0.c1) IS FALSE))) FROM t0, vt0, rt0, vt1 WHERE ((((NULLIF('', '0.7533062645642516')))!=(('-1262989312')))); -- 0ms;
SELECT ALL ((((rt0.c0) NOTNULL)) BETWEEN ((~ (rt0.c3))) AND (rt0.c4)), CAST((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) AS INTEGER), CAST(vt1.c0 AS TEXT) COLLATE NOCASE, CASE WHEN (vt1.c0 IN ()) THEN NULL ELSE (rt0.c4 IN ()) END, TOTAL(x'') OVER () FROM vt1, t0, vt0;SELECT DISTINCT ((- (vt0.c0)) IN (((t0.c1) NOTNULL))), LOWER(DISTINCT rt0.c2) COLLATE RTRIM, ((TOTAL(rt0.c0)) IS FALSE), (((x'')<(NULL)) IN ()), '-542583749' FROM t0;SELECT DISTINCT ((((rt0.c4)GLOB(rt0.c3))) IS FALSE) FROM rt0 WHERE ((((+ (x''))) ISNULL)); -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt1, vt0, t0, rt0; -- 0ms;
SELECT DISTINCT ((IFNULL('', rt0.c4))>(((vt1.c1) NOT NULL))), NULL, (((rt0.c3, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c3, ((rt0.c4)IS NOT(vt0.c0)), ((((t0.c1)OR(NULL)))OR(t0.c1)))) AND ((rt0.c4, ((((rt0.c4)OR(vt1.c2)))OR(rt0.c3)), CAST(x'' AS TEXT)))) FROM vt1, t0, vt0, rt0 WHERE (((('-410131736', '0.57408397232121', x'2ed3', '-1689900503', NULL)) BETWEEN ((TRIM(DISTINCT x'9e26', ''), (((0.08017769563302823))<((x'8bf0'))), ('-1262989312' IN (NULL, NULL)), (x'' IN ()), ((x'') IS FALSE))) AND ((CASE 759407697  WHEN x'' THEN NULL WHEN 0Xffffffffe210affe THEN '0.5257224624767107' WHEN x'b1a6' THEN x'0dcc' ELSE 0X5f722721 END, CASE WHEN 0.8082447360731515 THEN NULL WHEN '-1355863236' THEN 811121385 WHEN -1606098216 THEN NULL WHEN '' THEN '-536602887' WHEN NULL THEN x'' ELSE 0.6297731219848706 END, ((0.08017769563302823) NOT BETWEEN (NULL) AND (NULL)), ((NULL) NOT BETWEEN (NULL) AND (x'c6d1')), (((((((('')OR(x'e967')))OR('1103064009')))AND(0.9688809605990355)))OR(NULL)))))); -- 0ms;
SELECT ALL (((vt1.c2)%(vt1.c0)) IN (((vt0.c0)+(t0.c0)))) FROM t0, vt1, rt0 NOT INDEXED WHERE ((((((('9묫h.6\rභ')+(NULL)))OR(IFNULL(DISTINCT 0.6284242566646204, 0.030364827794315596))))OR((x'ca90' IN (x'')))));SELECT DISTINCT vt0.c0, CASE WHEN ((((((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c4)))AND(vt1.c2)))AND(t0.c2)) THEN 0.47663471607571806 ELSE (- (rt0.c0)) END, (~ (((rt0.c0)||(t0.c1)))) FROM vt1, t0 WHERE (((((x'48a7') NOT BETWEEN ('.7') AND (NULL))) NOT BETWEEN (((((x'')OR(x'')))AND(0.5770902166987346))) AND (CAST('' AS INTEGER))));SELECT x'' FROM vt1, t0 LIMIT -156780169; -- 0ms;
SELECT DISTINCT vt1.c2 FROM t0 NOT INDEXED, rt0, vt0, vt1 WHERE (CASE CASE NULL  WHEN 0xffffffff874b6226 THEN x'' ELSE '1290420703' END  WHEN UNLIKELY('') THEN CAST(0Xffffffff83ca33ec AS INTEGER) ELSE CASE '299224898'  WHEN 0.09608477153879902 THEN x'57ec' END END) GROUP BY vt1.c1; -- 0ms;
SELECT ALL ((vt1.c0) IS FALSE) COLLATE RTRIM FROM t0, rt0, vt0 ORDER BY (((((vt0.c0)<(NULL))))<=((INSTR(x'a489', vt0.c0)))), ((CAST(vt1.c1 AS REAL))OR(vt1.c1))  NULLS LAST;SELECT (+ (rt0.c0 COLLATE RTRIM)) FROM vt0, t0, rt0 WHERE (((x'' COLLATE RTRIM)||((('')>>(0.774864799466012))))) GROUP BY (((rt0.c4)) BETWEEN (((~ (NULL)))) AND ((NULL))) HAVING RTRIM(rt0.c4); -- 0ms;
SELECT DISTINCT CAST(t0.c2 AS BLOB), COUNT((+ (rt0.c4))), (- (rt0.c2)) COLLATE BINARY FROM rt0, t0, vt0 NOT INDEXED LIMIT -1160895518 OFFSET 1731560023; -- 0ms;
SELECT -1.065660666E9 FROM t0, rt0 WHERE (0.15560795589842447 COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT))OR(CAST(rt0.c0 AS REAL))) FROM vt0;SELECT (((+ (vt1.c0)))<=(CAST(0.8315601245177989 AS REAL))) FROM vt0, t0, vt1 LIMIT 179104787 OFFSET 660078009; -- 0ms;
SELECT DISTINCT x'7fe3' FROM vt0, t0, vt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM t0, vt0 WHERE ((((((((((('611923817')||(370303827)))AND(((-856268533)<=(x'')))))AND('1945758575' COLLATE NOCASE)))AND(x'' COLLATE NOCASE)))AND(CASE WHEN -224401332 THEN 0.6311754847652817 ELSE NULL END)));SELECT DISTINCT SUM(((vt1.c0) BETWEEN (t0.c0) AND (rt0.c4))) OVER () FROM rt0;SELECT DISTINCT (('~L\nQELP')&(json_object(rt0.c4, vt0.c0, rt0.c1, t0.c1))) FROM vt0, t0, vt1, rt0 WHERE (CASE (NOT (')V'))  WHEN (('a 1306 541-1121 302875833806397055:-3872554482255317199-1763 913 1948 6197415681768401522-%H3&')LIKE('')) THEN (('-1410310201')/(NULL)) ELSE 'B⿈Zt랃e\r' END); -- 0ms;
SELECT LOWER(((rt0.c2) BETWEEN (NULL) AND (rt0.c4))), CAST(rt0.c2 COLLATE BINARY AS INTEGER), ((NULL)||(-1299528192)) FROM vt1, rt0, t0, vt0 ORDER BY (((rt0.c4)) NOT BETWEEN ((rt0.c4 COLLATE BINARY)) AND ((vt0.c0))) ASC  NULLS LAST; -- 0ms;
SELECT '0.7119283596755058', vt0.c0, (GROUP_CONCAT(vt1.c2) IN ()) FROM t0, rt0, vt1, vt0 LIMIT -30103008; -- 0ms;
SELECT ALL ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))AND((t0.c0 IN (rt0.c3, t0.c1)))))OR((('') ISNULL))) FROM rt0 WHERE (((SQLITE_SOURCE_ID()) BETWEEN (COALESCE(0.739685090618503, x'', '-502222850', 'f5')) AND (-1.728914291E9 COLLATE NOCASE)));SELECT DISTINCT '0.5068873571003881', (CAST(rt0.c0 AS REAL) IN ()), (IFNULL(t0.c2, vt1.c2) IN ()), CASE LOWER(DISTINCT t0.c2)  WHEN (((vt0.c0, rt0.c3, t0.c0)) BETWEEN ((rt0.c4, rt0.c0, t0.c0)) AND ((vt1.c2, rt0.c2, t0.c2))) THEN ((rt0.c1)%(rt0.c3)) END, DATETIME(CASE WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c2 END, TOTAL(rt0.c0), ((((vt1.c2)AND(rt0.c1)))AND(vt0.c0))) FROM vt1, rt0, vt0;SELECT TOTAL_CHANGES() FROM rt0 GROUP BY x'' HAVING (+ (IFNULL(rt0.c2, t0.c1)));SELECT DISTINCT t0.c1 FROM vt1, rt0, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CAST((((vt1.c2))>=((rt0.c1))) AS REAL) FROM t0, vt0, vt1 WHERE (((((((-1.37749936E9)AND('1112660980')))OR(0.60816255126884))) BETWEEN (((NULL)AND(NULL))) AND (((0.17633002925979635) NOTNULL))));SELECT DISTINCT (((((((('MHb')OR(rt0.c0)))OR('0.7474320110949256' COLLATE BINARY)))AND(AVG(t0.c1))))OR('0.9408054989285349')) FROM rt0, vt1, vt0 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT 0.8500721555240159, 0.6916928207292449) FROM rt0, t0 WHERE (((LIKE(NULL, x''))<=(TYPEOF(DISTINCT 0.012392935462982257)))) INTERSECT SELECT ALL ((rt0.c2)IS NOT(vt1.c2)) FROM vt0, vt1, rt0, t0 GROUP BY ((CAST(vt1.c2 AS BLOB))<((~ (t0.c1)))), TYPEOF(((((vt1.c1)OR(vt1.c1)))OR(rt0.c4))), rt0.c2 COLLATE NOCASE HAVING ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (t0.c1))) NOT NULL); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, rt0 WHERE (((((0.805364943372543, 0.7503840591791366, 0.22176389166881882, x'c08c9388', x''))=((0.8482996179723936, '', 0.251620166524707, 0.9213420703116233, NULL))) IN ())); -- 0ms;
SELECT ALL (((~ (rt0.c4))) ISNULL) FROM vt1, t0 GROUP BY rt0.c3 LIMIT -71015307;SELECT DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c1) AND ('6')) COLLATE NOCASE, NULL, CAST((t0.c0 IN (rt0.c1, rt0.c0)) AS NUMERIC) FROM vt1 LEFT OUTER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON CASE CASE x'59ba'  WHEN t0.c1 THEN vt1.c0 ELSE rt0.c3 END  WHEN t0.c1 THEN ((x'')!=(-289877323)) WHEN ((((t0.c2)OR(t0.c0)))AND(rt0.c4)) THEN CASE WHEN rt0.c3 THEN vt0.c0 WHEN t0.c1 THEN vt1.c2 WHEN vt1.c2 THEN rt0.c2 END WHEN ((rt0.c1)!=(vt0.c0)) THEN x'' WHEN (NOT (rt0.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c1 ELSE vt1.c0 END WHEN (vt1.c2 IN (rt0.c3)) THEN (rt0.c3 IN (rt0.c4, rt0.c1)) ELSE ((t0.c0) NOT BETWEEN (NULL) AND (rt0.c0)) END;SELECT DISTINCT ((((NULL)GLOB(t0.c0))) IS TRUE), json_type(vt1.c0) COLLATE RTRIM, ((rt0.c2)<(rt0.c0)) COLLATE BINARY FROM t0 WHERE ((CASE WHEN '516651023' THEN '' WHEN 0.8918458261074049 THEN 0.4851065879596065 WHEN '1263318217' THEN 'qI[OI' END IN (SQLITE_COMPILEOPTION_USED(-8.77526E7))));SELECT ALL (((NOT (t0.c0))) NOT BETWEEN (0.5698744814832366) AND (((t0.c0) NOT NULL))) FROM vt1, rt0, vt0;SELECT ALL SUM('837807497' COLLATE NOCASE) FROM vt0, t0, vt1, rt0 WHERE (((0x79d03591)%(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT NULL FROM t0, vt0, vt1; -- 3ms;
SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((CASE WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END)) AND (((((vt1.c2, rt0.c0, t0.c1))<((t0.c1, rt0.c0, rt0.c3)))))) FROM rt0;SELECT ALL CASE rt0.c2 COLLATE BINARY  WHEN (rt0.c0 IN ()) THEN (((t0.c0, rt0.c0, rt0.c3))==((t0.c0, rt0.c1, t0.c1))) WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c1 AS REAL) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c1)) THEN rt0.c3 END, (((((((((+ (NULL)))OR((((vt1.c0)) BETWEEN ((0.6734772152076668)) AND ((vt1.c0))))))OR(((rt0.c4) BETWEEN (0.6229950464528243) AND (rt0.c1)))))OR(CASE rt0.c2  WHEN NULL THEN vt1.c2 WHEN t0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 ELSE t0.c2 END)))AND(MAX(NULL))), ((((x'7aa6') NOT BETWEEN (t0.c0) AND (vt1.c0)))LIKE(((rt0.c4) NOTNULL))) FROM rt0, t0, vt0, vt1 WHERE ((NOT (CAST(x'' AS NUMERIC)))) GROUP BY CAST(((x'') BETWEEN (rt0.c2) AND (rt0.c3)) AS INTEGER) HAVING CASE ((rt0.c1)*(t0.c2))  WHEN ((rt0.c3) IS FALSE) THEN CASE rt0.c2  WHEN t0.c2 THEN rt0.c3 END ELSE (vt1.c0 IN ()) END; -- 0ms;
SELECT DISTINCT ((MIN(t0.c1))|(CAST(0.200873046188207 AS TEXT))), '	', t0.c2 FROM rt0, vt1, t0 WHERE (((((NULL))<=((NULL))) IN ((+ (0.4808372334547526)), (('-590577106') BETWEEN (647199923) AND ('98766559'))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0, rt0.c4, t0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c4)) AND ((vt1.c1, vt1.c0, rt0.c4))) IN (((0.9886404696799248)<=(NULL)), CAST(t0.c0 AS NUMERIC))) FROM vt0, vt1, rt0 ORDER BY (((rt0.c1)) BETWEEN ((((((((((vt0.c0)AND(x'')))AND(t0.c1)))OR(vt0.c0)))OR(t0.c1)))) AND ((((rt0.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1))))) ASC;SELECT DISTINCT ((((t0.c1)AND((rt0.c0 IN (rt0.c3)))))AND((('')LIKE(vt1.c0)))) FROM rt0, vt0, t0, vt1; -- 0ms;
SELECT DISTINCT ((((((((CAST(t0.c2 AS INTEGER))AND((((rt0.c3, rt0.c3, vt1.c0)) BETWEEN ((rt0.c2, rt0.c3, vt1.c2)) AND ((vt1.c0, x'e011', rt0.c3))))))AND(COUNT(*))))AND(TYPEOF(rt0.c2))))AND(COUNT(rt0.c2))) FROM t0, rt0, vt0 LIMIT 632670745;SELECT DISTINCT (~ (CASE rt0.c3  WHEN rt0.c0 THEN t0.c2 WHEN rt0.c3 THEN t0.c2 WHEN rt0.c4 THEN vt0.c0 ELSE vt0.c0 END)), UPPER(rt0.c4), TOTAL((vt1.c2 IN ())) OVER ( ROWS BETWEEN (((((NOT (t0.c1)))OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))))AND(((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c1)))) FOLLOWING AND  CURRENT ROW) FROM vt1, rt0, t0 WHERE (CAST((NULL IN (0.15797969697828573)) AS BLOB)) LIMIT -1776801605;SELECT CAST((((rt0.c2, rt0.c0, rt0.c3))<((vt1.c1, rt0.c4, vt0.c0))) AS BLOB), LAST_VALUE((((((t0.c1, rt0.c3, vt1.c1, vt1.c0, NULL)) NOT BETWEEN ((t0.c2, rt0.c2, vt1.c1, t0.c2, vt1.c0)) AND (('D_', vt1.c2, vt1.c0, rt0.c0, vt1.c1)))) BETWEEN (((rt0.c4) IS TRUE)) AND (((((NULL)AND(rt0.c3)))AND(2058852378))))) OVER (), CAST(vt1.c1 AS TEXT), GROUP_CONCAT(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0))) OVER (), TOTAL((vt0.c0 IN (t0.c0))) OVER () FROM t0, rt0, vt1 WHERE ((json_object('-1100700326', NULL, 0.07467248044503927, '-1e500') IN ())) GROUP BY IFNULL(json_object(rt0.c1, rt0.c0), CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 END) HAVING (((rt0.c2)) NOT BETWEEN (('516651023')) AND (((vt1.c1 IN ()))));SELECT ALL SUM(('-225882221' IN ())) FROM vt1, rt0, t0 ORDER BY ((((rt0.c4)AND('-1023986960')))OR(rt0.c0)) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(((x'')<=(t0.c2))) OVER () FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt1.c0) NOT NULL))OR((((vt1.c1)) BETWEEN ((t0.c2)) AND ((vt1.c2))))))OR(((vt1.c0)<(t0.c1)))))AND(((((vt1.c2)OR(vt1.c0)))AND(vt1.c0)))))OR(t0.c1 COLLATE BINARY)) CROSS JOIN t0 ON CAST(CASE vt1.c2  WHEN -4.51878264E8 THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN rt0.c4 THEN t0.c2 WHEN vt1.c1 THEN vt0.c0 WHEN t0.c0 THEN rt0.c2 END AS INTEGER) WHERE ((((- (NULL)))AND(NULL)));SELECT DISTINCT CASE ((t0.c0)+(rt0.c3))  WHEN (((t0.c1, t0.c2, t0.c2))<>((rt0.c2, t0.c0, vt1.c2))) THEN ((((((((vt1.c1)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) WHEN rt0.c1 THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) WHEN (- (rt0.c4)) THEN 0.8880345111626967 END FROM rt0, vt0, t0, vt1; -- 0ms;
SELECT DISTINCT (((((~ (vt0.c0)))AND(rt0.c0)))OR((NOT (t0.c2)))) FROM vt1, rt0, vt0, t0 WHERE (((NULL COLLATE BINARY) NOT BETWEEN (((0xffffffffcc2816e3)*(x''))) AND (x'' COLLATE BINARY))); -- 0ms;
SELECT ((((rt0.c3)<<(rt0.c1))) BETWEEN (((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))) AND (x'')) FROM rt0 WHERE (((((((x'54b2')AND('-333005811')))AND('-1919015183'))) BETWEEN ((+ (''))) AND ((((('')AND(0.9379374268990761)))AND(x'')))));SELECT CASE ((((1.263318217E9)AND(rt0.c4)))OR(t0.c1))  WHEN CAST(t0.c0 AS TEXT) THEN ((vt1.c1)<=(rt0.c3)) ELSE ((((((((((((NULL)AND(rt0.c4)))AND(t0.c1)))OR(rt0.c3)))AND(t0.c0)))AND(rt0.c2)))OR(rt0.c1)) END FROM t0, vt1, rt0, vt0 WHERE (((((((x'8a1e', 0.12551388538803354, x'')) BETWEEN (('	E', x'', x'')) AND ((0xffffffffee014516, '0.7533062645642516', -4.10131736E8)))))<=((LTRIM(0.5828310134973884, 0.9876260979647944))))) ORDER BY ((0.4481334629078966)<=(CHANGES()))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (vt1.c1 IN (CAST(rt0.c3 AS REAL), ((vt1.c1) IS FALSE))), (((t0.c2)IS(rt0.c3)) IN (COUNT(vt1.c0), '-1159956329')), (CAST(t0.c2 AS NUMERIC) IN (((rt0.c4)==(vt1.c0)))) FROM vt1, vt0, t0;SELECT DISTINCT ((rt0.c1)/('')), ((((rt0.c2 COLLATE RTRIM)AND((vt1.c1 IN ()))))OR(((vt1.c2)AND(rt0.c2)))), GROUP_CONCAT(((((rt0.c2)AND(vt1.c2)))OR(x'9e1c'))) FROM t0 LEFT OUTER JOIN vt0 ON ((x'') IS TRUE) ORDER BY ((((rt0.c1) NOTNULL)) NOTNULL);SELECT CASE ((rt0.c1) NOTNULL)  WHEN (+ (vt1.c0)) THEN ((rt0.c1)%(t0.c2)) WHEN MAX(rt0.c1) THEN ((rt0.c2) ISNULL) WHEN (((rt0.c1)) BETWEEN (('De')) AND ((vt0.c0))) THEN ((rt0.c4)%('oꟷOur齒')) WHEN ((0.992526176304579) ISNULL) THEN (('G.&wF') BETWEEN (rt0.c4) AND (rt0.c2)) WHEN LIKELIHOOD(t0.c0, 0.45663527503255796) THEN ((t0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c4)) END FROM rt0, t0, vt1 WHERE ((NOT (0.5523863752574125)));SELECT ALL json(((rt0.c1) ISNULL)), DENSE_RANK() OVER (), ((AVG(rt0.c0))%(CAST(rt0.c2 AS TEXT))) FROM rt0, vt0, t0, vt1 WHERE (CAST((((0.8873234168592058, 0.30247489363580227, NULL)) BETWEEN (('1945758575', 0.2375954971587958, 0.7087642536053087)) AND (('9z\M[\nbG', x'', x'4e81'))) AS TEXT)) ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CAST(vt1.c1 AS TEXT)))  NULLS LAST; -- 0ms;
SELECT ALL (((NOT (rt0.c1)))IS(((((((((((((rt0.c0)AND(vt1.c0)))OR(t0.c0)))AND(rt0.c3)))OR(vt1.c0)))OR(vt0.c0)))OR(rt0.c1)))), LAG(rt0.c4, ((LTRIM(rt0.c3, t0.c2)) BETWEEN (((rt0.c4)&(rt0.c3))) AND (((((t0.c1)AND(rt0.c1)))AND(rt0.c3)))), ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c1)))!=(((rt0.c3) IS TRUE)))) OVER (), ((GROUP_CONCAT(vt1.c0)) BETWEEN ((NOT (t0.c1))) AND ((t0.c0 IN ()))) FROM t0 NOT INDEXED, rt0 WHERE (CASE ('1894327026' IN ('0.8791651388796228'))  WHEN ((((((((NULL)AND(0.047211807995474864)))OR(x'113c')))OR(x'')))OR('1128698257')) THEN HEX(DISTINCT '449995016') ELSE ('511619647' IN ()) END);SELECT DISTINCT AVG(((rt0.c2)*(t0.c0))) OVER ( ORDER BY (~ (rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST), (- (((vt1.c2) BETWEEN (t0.c2) AND (vt0.c0)))), DENSE_RANK() OVER ( RANGE (((COALESCE(DISTINCT 0.9661665321455363, rt0.c0), ((vt1.c0)|(rt0.c3)), STRFTIME(rt0.c0, vt1.c0, vt1.c2, t0.c2, t0.c1, '', vt0.c0)))>(((+ (rt0.c0)), t0.c1, rt0.c1 COLLATE NOCASE))) PRECEDING EXCLUDE GROUP) FROM vt1 WHERE (((MIN(0.0775068448970132, NULL)) ISNULL)) GROUP BY LIKELIHOOD(((rt0.c0)GLOB(rt0.c1)), 0.6076418691170555);SELECT DISTINCT (((((rt0.c2, vt1.c0, rt0.c3))!=((rt0.c3, t0.c0, t0.c0)))) BETWEEN (UPPER(t0.c1)) AND (((rt0.c0)GLOB(rt0.c2)))) FROM vt1, rt0 WHERE ((((0Xffffffff8722042a IN ()))<<(x'')));SELECT DISTINCT CAST((rt0.c0 IN ()) AS BLOB) FROM vt1 WHERE ((((('PF') NOTNULL))LIKE(((x'') BETWEEN ('29\n촍') AND (0.3810497197571425))))) GROUP BY ((CAST(rt0.c4 AS TEXT))<=(((vt1.c2) BETWEEN (rt0.c2) AND (t0.c2)))) ORDER BY (~ (((rt0.c3) BETWEEN (rt0.c0) AND (t0.c1)))) DESC, (NOT ((rt0.c0 IN ()))) ASC;SELECT DISTINCT (((rt0.c0)) BETWEEN ((((vt1.c1)&(rt0.c2)))) AND ((((rt0.c0)LIKE(t0.c1))))), (((((t0.c2))==((t0.c2))))==(((rt0.c3) BETWEEN (vt1.c2) AND (rt0.c2)))), FIRST_VALUE((((rt0.c2))>((t0.c2)))) OVER ( ORDER BY CAST(((rt0.c3)|(rt0.c4)) AS TEXT), TRIM(((t0.c1)||(rt0.c3)))  NULLS FIRST) FROM rt0, t0 WHERE (CAST((-1.948702025E9 IN ()) AS REAL));SELECT ALL CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)))OR(t0.c2)))OR(rt0.c2)) AS REAL), highlight(((((((((vt1.c1)AND(rt0.c3)))AND(0.7119283596755058)))AND(vt1.c2)))AND(vt0.c0)), COUNT(t0.c2), (rt0.c2 IN ()), (((vt1.c2, '', 0.4112673167381138, t0.c2, t0.c0, rt0.c0, t0.c0)) NOT BETWEEN ((507831959, t0.c2, rt0.c3, x'', vt1.c1, vt1.c0, NULL)) AND ((rt0.c4, rt0.c3, rt0.c2, t0.c0, t0.c1, t0.c1, t0.c2)))), GROUP_CONCAT(((rt0.c3) NOT NULL)) OVER () FROM rt0, t0, vt1, vt0 WHERE (((x'') ISNULL) COLLATE BINARY);SELECT (((NOT (rt0.c1)))GLOB(CASE WHEN rt0.c4 THEN t0.c1 WHEN vt0.c0 THEN '-1445832660' WHEN rt0.c1 THEN t0.c0 ELSE vt1.c0 END)) FROM t0;SELECT rt0.c4 FROM t0, vt1 WHERE (QUOTE(CASE WHEN '1290420703' THEN x'a5c3' ELSE x'' END)) LIMIT -1532067534 OFFSET -213739646;SELECT DISTINCT COUNT(*) OVER (), CAST(GROUP_CONCAT(rt0.c4) AS INTEGER), (((((((rt0.c1)AND(vt1.c1)))AND(t0.c0))))<(((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('T<E-X{iR')))))) FROM vt1, t0, rt0, vt0 ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c1)AND(rt0.c4)))OR(t0.c1)))) AND ((((rt0.c0)==(vt1.c0))))); -- 0ms;
SELECT DISTINCT (((((((((((((rt0.c1 IN ()))AND(((((vt1.c1)OR(rt0.c0)))OR('1110159344')))))OR(CAST(0.34548210221840214 AS INTEGER))))AND((((vt1.c2))==((rt0.c4))))))AND((~ (x'd599')))))OR(GROUP_CONCAT(0.8733758372601927))))AND(t0.c2 COLLATE RTRIM)) FROM rt0;SELECT DISTINCT ((LENGTH(NULL)) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (rt0.c1 COLLATE RTRIM)) FROM t0, vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT vt1.c1))OR(((0.8306938475381942) NOT BETWEEN ('476589355') AND (t0.c2)))) FROM vt1, vt0;SELECT DISTINCT json_quote(((rt0.c2) BETWEEN (0.8494737743163361) AND (rt0.c2))), (((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c1)) BETWEEN (((~ ('3''')), ((rt0.c1) NOTNULL), CAST(rt0.c1 AS NUMERIC), ((t0.c0) BETWEEN (rt0.c3) AND (t0.c1)), ((t0.c2)IS NOT(vt1.c1)))) AND ((CAST(rt0.c0 AS REAL), CAST(rt0.c4 AS NUMERIC), '-223326792', ((((rt0.c4)AND(rt0.c0)))AND(t0.c1)), vt1.c2))), LEAD((((vt0.c0)>=(vt0.c0)) IN ()), ((- (rt0.c3)) IN ()), ((((rt0.c4)-(rt0.c4))) BETWEEN (MIN(rt0.c0, 966620661)) AND (((rt0.c0) NOTNULL)))) OVER () FROM vt0, rt0, vt1;SELECT ((((((((((rt0.c2)<>(rt0.c1)))AND(((t0.c1)<(t0.c1)))))OR(CAST(rt0.c3 AS TEXT))))AND(vt0.c0)))AND(0.8487018485364353 COLLATE NOCASE)) FROM rt0, t0, vt0; -- 0ms;
SELECT (t0.c0 IN ()), NTILE((((rt0.c1, t0.c0, t0.c2)) NOT BETWEEN ((((((-1.512001858E9)AND(0.10141719340938493)))AND(rt0.c0)), ((rt0.c1)<(t0.c0)), (((t0.c0))<=((rt0.c4))))) AND (((rt0.c3 IN ()), (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), ((t0.c0)-(vt0.c0)))))) OVER (), GROUP_CONCAT(((0x6aca0be9)<>(rt0.c2))), (rt0.c0 IN ()), CASE x'' COLLATE RTRIM  WHEN ((rt0.c2)<>(x'')) THEN CAST(rt0.c4 AS TEXT) ELSE load_extension(rt0.c3, rt0.c4) END FROM vt0, t0, rt0;SELECT DISTINCT CASE WHEN (((x'')) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) THEN CASE WHEN vt0.c0 THEN x'6bc8' WHEN vt1.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 END WHEN 0.6804518674744886 COLLATE RTRIM THEN ((rt0.c2) IS TRUE) WHEN (((t0.c1))>=((t0.c0))) THEN (vt1.c2 IN ()) ELSE (t0.c2 IN ()) END, CASE UPPER(DISTINCT vt0.c0)  WHEN rt0.c0 THEN 0x445d1ca4 END, (t0.c1 IN ()) FROM vt1;SELECT LAST_VALUE(((CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c2 END) NOTNULL)) OVER () FROM t0, vt1, rt0 ORDER BY CASE WHEN 0.22997257377067393 COLLATE RTRIM THEN (vt1.c2 IN ()) WHEN (((t0.c1))!=((vt1.c0))) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((t0.c0)OR('￈sbd')) THEN (~ (vt1.c1)) WHEN (~ (vt1.c2)) THEN (((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN (~ (t0.c1)) THEN ((((rt0.c1)AND(rt0.c4)))AND(vt1.c0)) END ASC; -- 0ms;
SELECT DISTINCT (((t0.c2, rt0.c1, t0.c0)) BETWEEN ((MIN(vt0.c0), (- (t0.c2)), ((t0.c2)-(t0.c1)))) AND ((CASE vt1.c2  WHEN rt0.c0 THEN vt1.c1 ELSE t0.c0 END, rt0.c2, ((('0', t0.c2, t0.c0))<=((t0.c2, rt0.c3, rt0.c4)))))) FROM vt1;SELECT DISTINCT ((((t0.c2, rt0.c0, vt1.c0))<=((rt0.c3, vt1.c2, t0.c2))) IN ()) FROM vt1, t0, rt0; -- 0ms;
SELECT CASE WHEN ((rt0.c3) ISNULL) THEN COUNT(*) ELSE COUNT(vt1.c1) END FROM rt0, vt1, vt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c0 THEN (- (rt0.c2)) WHEN (~ (NULL)) THEN ((vt1.c2)IS(rt0.c3)) WHEN (((vt1.c1))<((x''))) THEN (t0.c2 IN ()) WHEN CASE NULL  WHEN vt0.c0 THEN rt0.c4 END THEN CAST(vt1.c0 AS TEXT) WHEN t0.c2 THEN ((rt0.c3) NOTNULL) END FROM vt1 WHERE ('2125484307') ORDER BY ((rt0.c3 COLLATE NOCASE) ISNULL)  NULLS FIRST;SELECT ALL ((TYPEOF(rt0.c0))IS(CAST(vt1.c2 AS INTEGER))), ((IFNULL(t0.c2, vt1.c0)) ISNULL), NTH_VALUE((((rt0.c3)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((vt0.c0))), COALESCE(DISTINCT CAST(rt0.c4 AS NUMERIC), 0.5823148267353374, NULL, (((t0.c1))>((vt1.c1))))) OVER () FROM rt0, t0, vt1, vt0 WHERE (((-2.008231202E9 COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT (((rt0.c2, t0.c2, vt0.c0)) NOT BETWEEN (((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), x'6308', ((t0.c0)=(t0.c0)))) AND ((CASE vt1.c2  WHEN vt1.c2 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 ELSE vt0.c0 END, CAST(vt1.c1 AS NUMERIC), ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4))))) FROM vt0, t0 WHERE ((((-715383439 IN (x''))) ISNULL));SELECT ALL ((TYPEOF(DISTINCT rt0.c2)) NOT NULL) FROM rt0, vt0 WHERE ((json('1854820230') IN ())) ORDER BY (+ (CASE WHEN vt1.c1 THEN t0.c2 ELSE x'2dcb' END)) DESC  NULLS LAST, ((((IFNULL(vt0.c0, t0.c2))OR((((rt0.c4)) BETWEEN ((vt1.c1)) AND (('-875342319'))))))OR(0x3e3be504))  NULLS FIRST, ((rt0.c4)<=(rt0.c3)) COLLATE NOCASE  NULLS LAST;SELECT ALL COUNT(*) FROM vt0 WHERE (((UNLIKELY(x'')) BETWEEN (((('vqj)cmR')) BETWEEN ((x'5a36')) AND ((NULL)))) AND (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((rt0.c3, ((((((((vt1.c1)OR(rt0.c4)))OR(t0.c2)))OR(vt1.c2)))AND(rt0.c0)), x''))==((TYPEOF(DISTINCT 'TzUm'), UPPER(DISTINCT vt1.c1), ((rt0.c3)-(t0.c1))))), ((((x'')AND((((x'', 0.2128263593144324, t0.c0)) BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt1.c2, t0.c2, rt0.c0))))))OR(COUNT(*))), (((vt1.c1, vt1.c2, vt1.c0)) BETWEEN ((-7.1015307E7, CAST(rt0.c3 AS INTEGER), ((vt1.c1)&(t0.c0)))) AND ((((rt0.c0) ISNULL), ((((rt0.c1)AND(vt0.c0)))AND(t0.c2)), SUBSTR(vt1.c2, vt1.c0)))), HEX(DISTINCT rt0.c2), LAG(((CASE WHEN t0.c0 THEN rt0.c0 WHEN NULL THEN t0.c0 WHEN 1741741671 THEN t0.c1 END) BETWEEN ((('P|') BETWEEN (rt0.c4) AND ('-1445832660'))) AND ((~ (rt0.c3)))), ((((rt0.c2)-(t0.c2))) BETWEEN ((rt0.c0 IN ())) AND (rt0.c3)), (((((((((((((((rt0.c4, rt0.c1, rt0.c4))=((rt0.c0, rt0.c2, t0.c0))))OR(((t0.c2)GLOB(rt0.c2)))))OR(QUOTE(rt0.c4))))OR(((rt0.c1)>(rt0.c2)))))OR(((rt0.c2) IS TRUE))))AND((+ (x'')))))AND(((t0.c1)>=(rt0.c1))))) OVER () FROM t0, rt0;SELECT ALL COUNT((rt0.c0 IN ())) OVER () FROM rt0, vt0, t0 NOT INDEXED, vt1 WHERE (((0.4433689220058693)||(NULL))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ROWS  CURRENT ROW), ((((((t0.c1) NOT BETWEEN (vt1.c2) AND (t0.c0)))OR(vt1.c1)))AND(((t0.c0)>(vt0.c0)))), (((((t0.c0, rt0.c1, rt0.c3))>=((rt0.c3, vt1.c0, vt1.c1))))LIKE(MIN(vt1.c0))) FROM rt0, t0 WHERE (((('-1070358963')) NOT BETWEEN ((x'ee5a' COLLATE BINARY)) AND (((((x'', NULL, 0x7c73ea64)) NOT BETWEEN ((x'2ce4', NULL, NULL)) AND ((NULL, NULL, 0Xffffffffd83fc263)))))));SELECT DISTINCT ((rt0.c1) BETWEEN (t0.c1) AND (vt1.c0)) COLLATE RTRIM FROM t0, vt0 WHERE ((NOT ((((NULL, 1239730346, x'', x'', '-587000392'))>((0Xffffffffb4b85000, x'494f', x'', NULL, 'oa')))))) LIMIT -1377499360;SELECT DISTINCT json_object(((vt1.c0)<(t0.c1)), (((vt1.c1, rt0.c1, vt1.c2))<=((rt0.c4, vt1.c0, vt1.c1)))), (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END IN ()), ((((((((LOWER(DISTINCT rt0.c3))OR(((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c1)))))OR(vt1.c2 COLLATE NOCASE)))OR(((t0.c0)*(rt0.c0)))))AND(CAST(vt1.c1 AS BLOB))) FROM t0, rt0, vt1, vt0; -- 1ms;
SELECT ALL ((((vt1.c1)!=(t0.c1)))IS(TOTAL(t0.c0))) FROM vt0, vt1, rt0 GROUP BY (((t0.c1 IN ())) NOT BETWEEN ((NOT (rt0.c2))) AND (TYPEOF(DISTINCT rt0.c2))) HAVING AVG(LTRIM(rt0.c4, 0.11951755147143839)) LIMIT 1584827334;SELECT DISTINCT (((- (vt1.c2))) BETWEEN (t0.c0) AND (TYPEOF(vt1.c2))) FROM rt0, vt1, t0, vt0 WHERE (('1058072918' COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c4 THEN t0.c1 END COLLATE RTRIM FROM vt0 WHERE (CASE (('1985335') ISNULL)  WHEN (- (NULL)) THEN NULL COLLATE RTRIM ELSE '1607901123' COLLATE BINARY END);SELECT DISTINCT MIN(CASE WHEN rt0.c4 THEN vt1.c0 END) FROM rt0, t0;SELECT ((rt0.c3 IN ()) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)+(rt0.c3)))IS NOT(((vt1.c0)+(vt1.c0)))) FROM rt0 WHERE (((((0xffffffff9dd55f7e)) NOT BETWEEN ((NULL)) AND ((2712806))) IN ()));SELECT DISTINCT ((vt1.c1) NOT BETWEEN (vt1.c2) AND (rt0.c2)) COLLATE NOCASE FROM t0, vt1, vt0 LIMIT -1961905499 OFFSET 1541158935;SELECT (((rt0.c4)AND(rt0.c3)) IN ()), ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c2))) AND (t0.c2)), CASE (((t0.c2))>((vt0.c0)))  WHEN vt1.c0 THEN x'e89e' ELSE MAX(vt1.c1) END FROM vt0, vt1, rt0, t0 WHERE ((((NULL) NOTNULL) IN ())) ORDER BY 0.12318145220298293  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(NULL AS INTEGER) FROM vt0, t0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0, vt0 WHERE (CAST(CASE x''  WHEN '-1973664833' THEN NULL ELSE NULL END AS INTEGER)); -- 0ms;
SELECT DISTINCT (((((((((((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))OR(((vt0.c0)<(t0.c1)))))OR(((t0.c0)/(vt1.c2)))))OR((rt0.c4 IN ()))))AND(((rt0.c2)<(vt1.c0)))) FROM vt1, vt0;SELECT ALL CASE WHEN CASE WHEN vt1.c2 THEN rt0.c4 WHEN rt0.c0 THEN 988721450 WHEN vt1.c2 THEN vt1.c2 ELSE rt0.c0 END THEN ((vt0.c0)%(t0.c1)) END FROM vt0, vt1 GROUP BY rt0.c3, '562963695', (rt0.c0 IN (CAST(rt0.c2 AS BLOB), (((rt0.c3, vt1.c2, vt0.c0))==((t0.c1, rt0.c3, t0.c0))))) HAVING (((rt0.c4)%(rt0.c3)) IN ());SELECT CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c1 END COLLATE BINARY FROM vt0, t0, rt0, vt1 WHERE ((~ (0.5811735202997724 COLLATE NOCASE))) LIMIT -223326792; -- 0ms;
SELECT DISTINCT (~ ((NOT (rt0.c3)))) FROM t0, rt0, vt0, vt1 WHERE ((NULL IN ()) COLLATE BINARY) LIMIT 765204952 OFFSET -666910109; -- 0ms;
SELECT (((NOT (rt0.c1))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c3) NOT BETWEEN (vt1.c2) AND (t0.c2)))) FROM rt0, t0, vt0;SELECT CAST(x'' AS TEXT) FROM vt0, rt0; -- 0ms;
SELECT CASE WHEN SUM(rt0.c4) THEN ((rt0.c0) NOTNULL) ELSE load_extension(rt0.c1) END, CASE CASE vt1.c2  WHEN vt0.c0 THEN rt0.c4 WHEN 0.9527150883160187 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 ELSE vt1.c0 END  WHEN 0X50ae8257 THEN ((t0.c1) NOT NULL) ELSE ((((vt1.c0)AND(rt0.c1)))AND(rt0.c0)) END, ((SUM(rt0.c0))AND(((rt0.c2) NOT BETWEEN (t0.c2) AND ('')))) FROM rt0 WHERE (((((- ('A''\nl&'))))<((CASE WHEN '-223326792' THEN '<R	vS/m' END))));SELECT ALL ((UNLIKELY(t0.c0))<<(((rt0.c4)*(rt0.c2)))), ROW_NUMBER() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), ((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (((((t0.c2)AND(rt0.c3)))AND(vt1.c2))) AND (CAST(rt0.c2 AS BLOB))) FROM vt1, vt0, rt0, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c0 COLLATE RTRIM) OVER ( ROWS CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC) PRECEDING) FROM t0, rt0, vt0, vt1 WHERE (CAST((('')=('-571170784')) AS REAL)); -- 4ms;
SELECT ALL ((((((rt0.c4)AND(vt1.c1)))OR(t0.c1)))AND(rt0.c2)) FROM vt0, t0, rt0 NOT INDEXED, vt1 WHERE (((('')) BETWEEN ((x'' COLLATE BINARY)) AND ((CAST(0.31622077141869065 AS BLOB))))); -- 0ms;
SELECT ALL (((t0.c1, t0.c1, t0.c0, rt0.c3, vt1.c1)) BETWEEN ((((rt0.c0)%(rt0.c0)), AVG(rt0.c0), vt1.c2, (NOT (0.0010739367223434604)), AVG(''))) AND ((rt0.c0 COLLATE BINARY, CASE vt1.c1  WHEN rt0.c3 THEN t0.c1 END, AVG(t0.c2), TOTAL(t0.c2), ((vt1.c0) ISNULL)))) FROM vt0, rt0 WHERE (((- (0Xffffffffd8205a54)) IN (CAST(0.03420006774964124 AS BLOB), x'')));SELECT DISTINCT RANK() OVER (), ((((((((((vt1.c0)OR(rt0.c1)))OR(vt1.c1)))AND(rt0.c2)))AND(x'')))IS NOT(CAST(rt0.c0 AS INTEGER))), CASE WHEN ((rt0.c3) NOT BETWEEN (t0.c2) AND (vt1.c2)) THEN (vt1.c2 IN ()) ELSE (('') ISNULL) END FROM vt0, rt0 WHERE (CASE WHEN ((x'') BETWEEN (x'') AND ('695717133')) THEN ((((NULL)OR(x'')))OR(NULL)) WHEN ((x'') NOT BETWEEN (NULL) AND (x'b0efcded')) THEN (+ (NULL)) WHEN CASE x'1314'  WHEN NULL THEN -721071537 END THEN ((-2.2680878E7)!=(x'')) ELSE ((x'')GLOB(x'')) END);SELECT DISTINCT CASE WHEN UNICODE(rt0.c4) THEN HEX(rt0.c1) WHEN CAST(vt1.c0 AS REAL) THEN ((rt0.c1)<>(t0.c1)) WHEN ABS(t0.c2) THEN ((rt0.c0)*(vt1.c1)) WHEN ((((t0.c1)OR(rt0.c0)))OR(vt0.c0)) THEN rt0.c1 COLLATE RTRIM WHEN 2067610569 THEN CAST(rt0.c2 AS REAL) END FROM vt0, rt0 WHERE ((((x'')AND(x'')) IN ((((((((((((('cq')OR('/L')))OR(NULL)))OR(x'6128')))AND(NULL)))OR('G-')))AND(x'')))));SELECT DISTINCT ((((rt0.c4)>=(vt1.c2)))<(((t0.c0) ISNULL))) FROM t0 WHERE ((((((((x'')AND(2130876758)))AND(NULL)), 0x25b0c7ca, '''Xy'))==((('' IN ()), (('7') NOT NULL), '0.0010739367223434604' COLLATE RTRIM))));SELECT ALL CASE WHEN ((vt0.c0)LIKE(t0.c1)) THEN t0.c1 COLLATE NOCASE END FROM rt0, vt1, t0, vt0 WHERE ((((x'' IN ())) NOT BETWEEN ((((0.773034740438344))<=((x'')))) AND (0.3871676712240977))) GROUP BY ((((((((((((((((t0.c2)OR(vt0.c0)))AND(rt0.c3)))AND(CASE WHEN 1640004083 THEN vt1.c2 END)))AND(CAST(vt1.c2 AS INTEGER))))AND(t0.c0)))OR(((((vt1.c0)AND(vt1.c2)))AND(rt0.c3)))))OR((vt0.c0 IN ()))))AND(((((((((t0.c2)AND(vt1.c1)))OR(vt1.c2)))OR(rt0.c0)))AND(rt0.c4)))) HAVING ((((NULL)!=(rt0.c4)))IS(CAST(rt0.c0 AS TEXT))) LIMIT -1004709796 OFFSET -2108631273; -- 0ms;
SELECT '', '1121822487', NULLIF(((vt0.c0) IS TRUE), ((((((((rt0.c3)OR(rt0.c4)))AND(vt1.c1)))OR(rt0.c2)))AND(vt1.c1))) FROM rt0 WHERE (NULL COLLATE BINARY) GROUP BY ((rt0.c1) BETWEEN (t0.c2) AND (rt0.c0)) COLLATE BINARY HAVING (((((('MHb')AND('QxM')))AND(rt0.c1))) IS FALSE);SELECT DISTINCT ((((((vt0.c0)&(rt0.c1)))AND(vt1.c1)))OR(((rt0.c1) ISNULL))) FROM rt0, vt1;SELECT (- (((((686605572)AND(rt0.c2)))AND(vt1.c1)))) FROM t0, rt0, vt1 WHERE ('93'); -- 0ms;
SELECT ALL ((LTRIM(vt1.c0))+('')), ((((((((rt0.c3)OR(vt1.c0)))OR(x'')))AND(ABS(rt0.c1))))AND((t0.c1 IN (rt0.c1)))), SUM(((t0.c1) BETWEEN (rt0.c2) AND (vt0.c0))) OVER () FROM vt1, rt0, t0;SELECT ((rt0.c3 IN (t0.c0, t0.c2)) IN (t0.c0, (((t0.c0, t0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, t0.c1, vt1.c0)) AND ((t0.c0, vt1.c1, rt0.c2))))), ((((rt0.c0)==(vt1.c0))) IS FALSE), CAST(vt1.c0 COLLATE NOCASE AS TEXT) FROM rt0, vt1, t0, vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((t0.c2) NOT NULL) COLLATE BINARY, (((CASE WHEN vt1.c0 THEN t0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 END, ((((t0.c1)OR(t0.c1)))OR(rt0.c4)), rt0.c3))!=((CASE WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c1 THEN t0.c2 WHEN '-1377499360' THEN rt0.c0 ELSE vt1.c2 END, CASE WHEN x'' THEN t0.c1 ELSE t0.c2 END, t0.c1 COLLATE BINARY))) FROM rt0 WHERE ((((((0Xffffffffc0339e4d)) BETWEEN ((NULL)) AND ((NULL))))GLOB(('-1336039695' IN (0Xffffffff8c4881b9))))) ORDER BY CAST((~ (t0.c1)) AS TEXT), ((CAST(t0.c0 AS REAL))&(((rt0.c3)<<(t0.c1))))  NULLS LAST;SELECT DISTINCT (((((vt1.c2)OR(t0.c2)))AND(t0.c1)) IN ()) FROM vt1, vt0; -- 0ms;
SELECT ((UNLIKELY(t0.c1)) NOT NULL) FROM vt1, vt0, t0; -- 0ms;
SELECT vt1.c2 FROM t0, vt1 WHERE ((((('1225151514')>(1456068195)))+(((x'') NOT NULL)))) GROUP BY ((((vt1.c2)<>(vt1.c2)))&(rt0.c3)) HAVING vt1.c2;SELECT DISTINCT CAST((+ (t0.c0)) AS NUMERIC), AVG(((t0.c1)||(rt0.c0))) OVER (), ',4c', ((((rt0.c3) NOT BETWEEN (rt0.c1) AND ('-1919015183')))<=((NOT (rt0.c4)))), (('335815582')*(((t0.c0)==(rt0.c1)))) FROM rt0, t0, vt1; -- 0ms;
SELECT DISTINCT ((((t0.c1))>((vt1.c2))) IN (vt1.c1, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)))) FROM vt1, t0, rt0 WHERE ((~ (((((-1e500)AND(0X1be1f83f)))AND(NULL))))); -- 0ms;
SELECT ALL TOTAL_CHANGES(), ((((x'6c6d')%(t0.c0)))OR((((t0.c1))==((NULL))))), MAX(((rt0.c3)=(t0.c1))) COLLATE BINARY FROM vt0, vt1 WHERE (CASE (NOT (NULL))  WHEN ((((((((((((0.2734229193995221)OR('㽌j7eV#!')))AND('-1347506437')))AND(NULL)))OR(0x5ac52850)))OR('1741741671')))AND(NULL)) THEN ((0Xf8ab928)IS NOT(NULL)) WHEN ((NULL)IS('695717133')) THEN ((((x'')AND(NULL)))AND(NULL)) WHEN LOWER(DISTINCT '-1613218514') THEN (+ (NULL)) END) ORDER BY ((((((rt0.c2)AND(rt0.c0)))OR(vt1.c0))) IS TRUE) ASC  NULLS LAST;SELECT DISTINCT (CASE WHEN vt1.c0 THEN -1500684993 WHEN rt0.c4 THEN vt0.c0 WHEN t0.c2 THEN rt0.c2 WHEN vt1.c1 THEN NULL WHEN rt0.c1 THEN rt0.c3 END IN ()) FROM vt0, vt1, rt0 WHERE (((1945758575) NOT NULL)); -- 0ms;
SELECT DISTINCT (((vt1.c2))<=((vt1.c1))) COLLATE NOCASE, ((0.2992071623667526) NOTNULL), rt0.c4 FROM vt1 WHERE (CAST(NULL AS NUMERIC) COLLATE RTRIM);SELECT DISTINCT ((((vt1.c1) NOT NULL))IS(vt0.c0)) FROM vt0 WHERE (']\r!M*wQ%q');SELECT DISTINCT NTH_VALUE((((((vt1.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))))<>((((vt0.c0) IS TRUE)))), CASE CAST(vt1.c2 AS BLOB)  WHEN ((t0.c1)>=(vt1.c0)) THEN (- (t0.c1)) ELSE ((vt1.c2)<<(t0.c2)) END) OVER () FROM t0, vt0, vt1 WHERE (((((NULL)|(1095202496)))<(((NULL)&(NULL))))); -- 0ms;
SELECT ALL CAST(rt0.c1 AS INTEGER) COLLATE RTRIM, CAST(MAX(rt0.c4) AS REAL), (((((vt1.c2)=(vt0.c0)), ((t0.c0)<>(rt0.c2)), '-2027813846'))<(((((t0.c1)) NOT BETWEEN ((vt1.c1)) AND ((0.7319919969260835))), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4)), ((rt0.c4) NOT BETWEEN (t0.c2) AND (vt1.c0))))) FROM vt1, rt0 WHERE ((((- (0.6087811229973571)))>(((NULL) BETWEEN ('0.28062419402294825') AND (2.056502059E9)))));SELECT DISTINCT t0.c2 FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR((((rt0.c0, vt1.c1, '-1166454289')) NOT BETWEEN ((rt0.c4, t0.c0, rt0.c1)) AND ((rt0.c1, '-1717536429', rt0.c2))))))AND(CAST(rt0.c3 AS TEXT))), CUME_DIST() OVER ( ROWS  CURRENT ROW EXCLUDE GROUP), CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c2)) AS BLOB), ((CAST(rt0.c4 AS INTEGER)) IS FALSE), CAST(SUM(rt0.c1) AS BLOB) FROM vt1, t0 WHERE (((x'') NOT BETWEEN (CASE WHEN '-168178595' THEN 0.551652321410074 ELSE NULL END) AND (CAST('V?SBOZqks' AS REAL))));SELECT ALL (((t0.c0) ISNULL) IN ()) FROM vt0, vt1 WHERE ((~ (TRIM(0.14683435603802308, '-608101123')))) GROUP BY x''; -- 0ms;
SELECT (t0.c1 IN ()) FROM vt1, t0, vt0 WHERE (CASE ((((x'')OR(NULL)))OR(x'4fa3bd25'))  WHEN CAST('⴫WSEhr?' AS BLOB) THEN ((0.4301426097426322) NOTNULL) END) ORDER BY ((((t0.c0)AND(GLOB(rt0.c1, vt1.c2))))AND(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)))) DESC;SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, rt0, vt1, t0 WHERE (CASE CAST(437057975 AS REAL)  WHEN ((((0.17354769810798942)AND(0.5544465300219027)))AND(0.7348204999569683)) THEN ((('1112660980')) NOT BETWEEN ((0X9113da)) AND (('-2039681082'))) END); -- 0ms;
SELECT (((vt1.c1 IN ()))<=(((rt0.c2) NOT NULL))) FROM vt1, rt0, t0 WHERE (((0x43387cfe COLLATE RTRIM)>((x'84dd' IN (NULL, NULL))))); -- 0ms;
SELECT rt0.c2 FROM vt0, vt1, rt0, t0; -- 0ms;
SELECT DISTINCT (((~ (0.3103639847469518))) BETWEEN (((((((((t0.c0)OR(vt1.c0)))AND(NULL)))OR(0.20829003865614193)))AND(NULL))) AND ('c4/He!,2s')) FROM vt0, rt0, vt1, t0 WHERE (IFNULL(((x'')-(0.7723398826298711)), CASE WHEN NULL THEN -6.03663269E8 WHEN 1991026132 THEN NULL WHEN '432541886' THEN x'' END)); -- 1ms;
SELECT ((((CAST(vt1.c1 AS INTEGER))AND(((rt0.c4) ISNULL))))OR((rt0.c3 IN (vt1.c1, 0.09191971933912213)))) FROM rt0, vt0 LIMIT 743121526 OFFSET 768375409;SELECT ALL ((rt0.c2)>=(t0.c0)) COLLATE RTRIM, UNLIKELY(CAST(t0.c2 AS NUMERIC)), ((CAST(t0.c0 AS REAL)) BETWEEN (vt1.c1) AND (0Xffffffffffffffff)) FROM vt1 WHERE (CAST((+ (NULL)) AS TEXT)) LIMIT -1714935199 OFFSET 111185917;SELECT DISTINCT TOTAL(CAST('' AS BLOB)) OVER () FROM t0, rt0, vt0 GROUP BY (+ (rt0.c1 COLLATE RTRIM)); -- 0ms;
SELECT ALL ((((CAST(rt0.c4 AS INTEGER))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)))))OR(SUM(vt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT ((rt0.c3 COLLATE RTRIM)|(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)), (((rt0.c0) NOT NULL) IN ()), '-1728810928' FROM vt1, vt0, t0 LIMIT -1310706441 OFFSET -1109182532;SELECT AVG((NOT (rt0.c3))) OVER () FROM vt0;SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((((((NULL)<(''))))<=(((('') NOT BETWEEN (2097194971) AND (x'')))))); -- 0ms;
SELECT ALL GROUP_CONCAT((((vt1.c2)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1)))) OVER (), (((((rt0.c2 IN ()))OR(((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt0.c0)))))OR(t0.c1)), (+ (((rt0.c3)>=(vt1.c2)))) FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((vt1.c0 COLLATE BINARY) NOT NULL) CROSS JOIN t0 ON (((vt0.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((t0.c0)/(rt0.c4))))) WHERE (CAST(((-1167165862)|(0.2433977210462972)) AS TEXT)); -- 5ms;
SELECT ALL rt0.c1 FROM rt0, vt0, vt1, t0; -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c0) ISNULL)) FROM t0, vt1 WHERE (TRIM(((x'') NOT NULL), (NOT (0.08518019127944321)))); -- 0ms;
SELECT ((CASE WHEN '|V鵪' THEN vt0.c0 ELSE rt0.c3 END)<<(CAST(t0.c0 AS REAL))), COUNT(*), 'Oh' FROM rt0, vt0, t0 WHERE (((0.8833187776818383 COLLATE NOCASE)%(CASE 0.004681612412357983  WHEN 0.7962992640003801 THEN 'm홣*#TtX' END))); -- 0ms;
SELECT ALL AVG(((vt0.c0)LIKE(vt1.c2))) FROM rt0, t0 GROUP BY (((NULL IN (rt0.c0)))-((+ (vt1.c2)))) HAVING CAST(((rt0.c0) IS FALSE) AS BLOB) ORDER BY (~ (t0.c0 COLLATE RTRIM));SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1 WHERE ((- ('E홣yTZ')) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT DISTINCT vt0.c0 FROM t0, vt0, vt1, rt0 WHERE (((((NULL)IS NOT('461480024')))<<('t' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((vt1.c2)<>(rt0.c1)))<(vt1.c0)), (((rt0.c4)) BETWEEN ((vt1.c2 COLLATE RTRIM)) AND ((rt0.c3))), ((((((((((((((rt0.c4)OR(t0.c0)))OR(rt0.c2 COLLATE NOCASE)))OR(((x'') BETWEEN (x'88c0') AND (rt0.c0)))))OR(rt0.c2)))AND(CASE WHEN rt0.c0 THEN t0.c1 ELSE vt1.c0 END)))OR(((t0.c1)%(rt0.c2)))))OR(CAST(vt1.c1 AS NUMERIC))) FROM vt0, t0, rt0, vt1 WHERE ((((((0xffffffffa9209140) BETWEEN (NULL) AND (-972202366))))>=((((0X49d6dbce)/(1.661365882E9)))))) GROUP BY CASE t0.c0 COLLATE BINARY  WHEN json_insert(rt0.c3, rt0.c0, t0.c2) THEN LIKELY(rt0.c2) END HAVING ((CAST(rt0.c4 AS TEXT))OR((rt0.c0 IN (rt0.c4, rt0.c0)))) LIMIT 1843163093 OFFSET 368320411; -- 0ms;
SELECT DISTINCT CAST(CAST('-1500684993' AS NUMERIC) AS NUMERIC), (- (((((rt0.c2)OR(1863537865)))OR(vt1.c1)))), CASE WHEN ((rt0.c3)<<(vt1.c2)) THEN UPPER(DISTINCT rt0.c2) ELSE CAST(vt1.c1 AS TEXT) END FROM vt1 WHERE ((((((('7cX8}ND+')>=('P7')))AND(CASE x''  WHEN NULL THEN 0.6954735308619702 END)))OR(((((x'')OR('')))AND('2008033896')))));SELECT DISTINCT (((t0.c2)>(rt0.c2)) IN ()) FROM vt0, t0; -- 0ms;
SELECT ALL rt0.c3 FROM vt0 WHERE ((((0.9742476053719109 IN ()))IS((('')>>(-39463424))))) GROUP BY ((((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))OR(t0.c0)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c1))) ISNULL), ((((INSTR(rt0.c3, rt0.c1))AND(((t0.c1)LIKE(rt0.c1)))))OR(json_object(vt1.c2, t0.c1, rt0.c0, rt0.c0))), CAST(((rt0.c2)*(rt0.c1)) AS TEXT), ((((t0.c2) IS TRUE)) BETWEEN (vt1.c2 COLLATE NOCASE) AND (((vt0.c0)LIKE(rt0.c4)))), (+ (LOWER(DISTINCT vt0.c0))) HAVING COUNT(*);SELECT ALL NTH_VALUE((LIKELY(rt0.c1) IN (((t0.c1)<=(rt0.c4)), ((t0.c2) ISNULL))), CASE WHEN rt0.c2 THEN (rt0.c0 IN ()) WHEN vt0.c0 THEN ((vt1.c1)LIKE(vt1.c2)) WHEN t0.c0 THEN vt1.c1 ELSE ((rt0.c0)IS NOT(vt1.c2)) END) OVER () FROM t0, vt0, vt1, rt0 WHERE ((~ (QUOTE(x'')))); -- 0ms;
SELECT ALL CASE WHEN ((t0.c0)OR(t0.c1)) THEN ((rt0.c4) BETWEEN (t0.c2) AND (t0.c0)) ELSE (NULL IN ()) END, t0.c2, SUM(((((vt1.c2)OR(rt0.c3)))AND(rt0.c0))) FROM t0, rt0, vt1 WHERE (((NOT (0.6802809735570556)) IN ())); -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( GROUPS ((UPPER(vt1.c0)) BETWEEN (0.7044155664353979) AND (TRIM(rt0.c3, t0.c2))) PRECEDING EXCLUDE CURRENT ROW) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((((t0.c0))>((rt0.c4)))))>=((GROUP_CONCAT(t0.c2)))), AVG(((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0))), (((vt1.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) IN ()) FROM rt0, vt1 WHERE ((('-208922969') ISNULL) COLLATE RTRIM);SELECT ALL ((((t0.c0)<=(NULL))) NOT NULL), CAST(NULL AS TEXT), (vt1.c0 IN ()) FROM rt0, t0, vt0 WHERE ((((NULL)) BETWEEN (((((0Xffffffffb8a32234, x'bd05', '-1719566847')) BETWEEN (('e^OTX', NULL, 0xffffffff9e7c8fae)) AND ((NULL, '842212595', ']握頻p<['))))) AND (((~ (720962071)))))); -- 11ms;
SELECT DISTINCT CAST((vt1.c2 IN ()) AS INTEGER) FROM t0, rt0 WHERE (TYPEOF(((104182906)+(-223326792)))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((rt0.c1) NOT NULL))IS NOT(x''))) OVER () FROM rt0 LIMIT -1950304293 OFFSET -1613965763; -- 0ms;
SELECT COUNT(LIKE(rt0.c2, t0.c2)) OVER (), (((MIN(vt1.c1), ((rt0.c4) NOT NULL), vt1.c0))<((COUNT(*), ((rt0.c3) NOT BETWEEN (vt1.c2) AND (t0.c0)), ((rt0.c3) ISNULL)))), ((TOTAL(t0.c1)) IS FALSE) FROM vt1;SELECT ALL (~ (rt0.c4 COLLATE BINARY)) FROM vt0, t0, rt0, vt1 WHERE (((CASE '￿B植c^x'  WHEN NULL THEN '-871270986' WHEN 0.3895164589154231 THEN 0.36268239972140626 WHEN '#m{}' THEN '1478286457' WHEN '	*7 ' THEN '695717133' WHEN -7.40654834E8 THEN NULL END)=(((((0.7532907083305205)OR(x'')))OR('60813449'))))); -- 0ms;
SELECT ALL MAX((~ (t0.c0))), ((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (0.6288255513377398) AND (0.009946438536852953))) AND ((rt0.c4 IN ()))), (+ ('*i')) FROM vt0, vt1, t0, rt0 WHERE (((0xef69b7f)<(0Xffffffffe210affe)) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT rt0.c3 FROM vt0;SELECT CASE WHEN ((rt0.c2)IS(t0.c1)) THEN CASE WHEN vt0.c0 THEN '785572778' WHEN rt0.c1 THEN vt1.c2 WHEN t0.c2 THEN t0.c0 END END FROM vt1 WHERE (CHAR(CASE '1221860895'  WHEN NULL THEN '.' END));