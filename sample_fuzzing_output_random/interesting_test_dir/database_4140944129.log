-- Time: 2024/06/07 10:52:48
-- Database: database29
-- Database version: 3.40.0
-- seed value: 4140944129
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
INSERT OR REPLACE INTO rt0(c0, c4, c1) VALUES (0x3650c78, NULL, ')_x\'); -- 2ms;
UPDATE OR FAIL rt0 SET (c0)=(0X2a667166) WHERE CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN LIKELIHOOD(DISTINCT '', 0.9144653651075988) THEN ABS(rt0.c0) WHEN ((NULL) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) ELSE NULLIF(rt0.c1, rt0.c1) END; -- 1ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (NULL); -- 2ms;
PRAGMA temp.journal_size_limit; -- 0ms;
INSERT OR REPLACE INTO rt0(c4) VALUES (x''); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (''); -- 1ms;
PRAGMA reverse_unordered_selects; -- 2ms;
PRAGMA temp.cache_spill; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1, c4) VALUES (1894703687, '', 0.4446700666475185, NULL), (0xffffffffc3b12fee, 0.4550183182935771, 0.6664527222105967, 0.17164884352789167), (NULL, NULL, NULL, x''); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c0, c3) VALUES ('now', '1581446125', 0.012498898412126591); -- 0ms;
PRAGMA soft_heap_limit; -- 2ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES ('', -1.011798034E9), ('0.4550183182935771', 1704308470), ('S<', x'38a2d2bc'), (-1923300831, 0.9536854257359387), (0.7611047539366141, NULL); -- 9ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('-1500857198'); -- 1ms;
PRAGMA temp.mmap_size = 1414640286000663205; -- 2ms;
ANALYZE; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
REINDEX NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')<>(0.3962348868307237)))&((0xffffffffeed3035c IN ()))); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c0) VALUES ('-182677908', 5.6953976E7, -1.923300831E9), (x'', 0.7611047539366141, 0.24923091348866466), (x'15ff', 0xffffffffa2a638dd, NULL), ('-1011798034', 'fm0fOwa3', NULL), (x'', NULL, x''); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
REINDEX; -- 1ms;
END TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c2) VALUES (0.07257172579400395, x'', NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=('0.3962348868307237') WHERE x''; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c4, c3) VALUES (x'', x'', -1081087561, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (NULL); -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED, tokenize = "porter"); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.6627683881038096, 'm/n'), (NULL, x'ea71ad57'), (0.7753801889658116, '-1566164771'), (NULL, x''), (x'', 0.8603754990501026); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0)=(NULL, x'') WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ((vt0.c0 IN (vt0.c1)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 1ms;
REINDEX; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (x''); -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2=x''; -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 0.7753801889658116, 5.6953976E7, 'fm0fowa3', x'6f6e'); -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'8416' WHERE ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL); -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((rt0.c1)>=(rt0.c4)))<=(CAST(vt0.c1 AS INTEGER))) FROM vt0, rt0 WHERE ((((ABS(0.8747758908336775)))!=((((NULL) NOT NULL))))) ORDER BY CASE WHEN rt0.c3 THEN vt0.c1 END COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) ISNULL) AS INTEGER) FROM vt0 WHERE ((((0.4550183182935771)) BETWEEN ((CASE NULL  WHEN x'' THEN NULL ELSE '+Q' END)) AND (((~ (''))))));SELECT LAG((+ (CAST(rt0.c3 AS NUMERIC))), vt0.c0, (((rt0.c0)) BETWEEN ((((rt0.c0)IS NOT(rt0.c4)))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN 1.894703687E9 THEN '-52992779' WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN 's<' ELSE rt0.c0 END)))) OVER () FROM vt0, rt0 WHERE (CAST(json_remove(0.6462859125344297, 0.12427345668890999) AS REAL));SELECT (COUNT(vt0.c1) IN (((rt0.c4)LIKE(rt0.c2)), (NOT (rt0.c3)))) FROM vt0, rt0 WHERE (((((x'') BETWEEN (NULL) AND ('1721494843')))|(((-1.923300831E9)OR(0.9118281750513254))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c4)||(vt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))OR((NOT (vt0.c1)))), CAST(((rt0.c4) IS FALSE) AS NUMERIC), (((0xfffffffff51c8e6c IN ())) ISNULL) FROM vt0, rt0 WHERE ((((((0.5675375125686033 IN ('')))OR(((NULL) ISNULL))))AND(0.4403430576178602 COLLATE BINARY))); -- 0ms;
SELECT CAST(AVG(rt0.c1) AS NUMERIC) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (rt0.c1 IN (CASE WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END, CASE WHEN rt0.c4 THEN 0.6113265848366726 END)), ((((vt0.c0, rt0.c4, vt0.c1)) BETWEEN ((rt0.c1, rt0.c4, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1))) IN ()), SUM((~ (rt0.c4))) FILTER(WHERE (- (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END))) OVER () FROM rt0 WHERE ((('') BETWEEN (CAST('-52992779' AS REAL)) AND ((('FALSE') NOT BETWEEN (0.8851812193671645) AND (x'64e9'))))) UNION ALL SELECT DISTINCT AVG(vt0.c0) FILTER(WHERE ((((((rt0.c1) NOTNULL))AND((+ (rt0.c0)))))AND(((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c1))))) OVER (), COUNT(*), ((LOWER(DISTINCT '-52992779'))>(x'4a12')) FROM rt0, vt0 LIMIT 696640247;SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<(((rt0.c2)+(vt0.c1)))), ((vt0.c0)<(((rt0.c2)*(vt0.c1)))), NULL FROM vt0;SELECT DISTINCT ((((vt0.c0)|(rt0.c1))) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (0Xbefa668))) AND (vt0.c1 COLLATE NOCASE)) FROM rt0, vt0 WHERE (((ABS(0.9939917448024352)) NOTNULL)); -- 0ms;
SELECT TRIM(((vt0.c0) BETWEEN (vt0.c1) AND (NULL))) FROM rt0, vt0; -- 0ms;
SELECT ALL ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END)IS NOT(MAX(vt0.c0))) FROM rt0;SELECT NULL FROM rt0 WHERE (LENGTH('-1247761778' COLLATE RTRIM)) GROUP BY ((vt0.c1 IN (0.02397157294522234)) IN ((((vt0.c1, rt0.c2, rt0.c1))=((0.237283057853235, rt0.c3, rt0.c2))))), MAX(vt0.c1 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)), (((0.8851812193671645)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), (NOT ('2122614705'))), ((((((((((((vt0.c1)OR(NULL)))AND(vt0.c1)))OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c0 COLLATE RTRIM)))AND(CASE WHEN '' THEN rt0.c1 ELSE vt0.c1 END)) HAVING CAST(((rt0.c2) ISNULL) AS NUMERIC);SELECT ALL (((((rt0.c3 IN (rt0.c4)))AND(((((vt0.c0)OR(-1949598473)))OR(rt0.c1)))))AND((('vr')LIKE(vt0.c1)))) FROM rt0;SELECT (((+ (vt0.c1)))GLOB(rt0.c3 COLLATE NOCASE)), CAST(0.6277839192408129 AS NUMERIC), CAST(rt0.c1 AS INTEGER) COLLATE BINARY FROM rt0;SELECT DISTINCT (NOT ((+ (vt0.c1)))) FROM vt0, rt0 WHERE ((((- (x'')))LIKE((+ (x'72b3'))))); -- 0ms;
SELECT DISTINCT 0.2091358176408057, ((((((rt0.c0)&(vt0.c0)))AND((~ (x'')))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))), rt0.c3, LEAD(((((vt0.c0 COLLATE NOCASE)OR(QUOTE(vt0.c0))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), json_quote(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))), CAST((NULL IN (vt0.c0)) AS NUMERIC)) OVER (), ((((((vt0.c1) NOT NULL))AND(('-1247761778' IN ()))))AND(MAX(rt0.c0))) FROM vt0;SELECT ((vt0.c1)<=(0.9377962419235519)) COLLATE NOCASE FROM rt0, vt0 WHERE ((((x'', x'8693', '0.7753801889658116', 0.27448886515936954, '?{Jq?')) BETWEEN (((((('1894703687')AND(x'')))OR('O')), (((0.6619142984743446))!=((x''))), CASE WHEN x'778f' THEN x'' ELSE 0.720250501230978 END, ((NULL) NOTNULL), TYPEOF(NULL))) AND (('(O8', (('q]\r*minutesp') IS TRUE), ((0x3650c78) IS FALSE), ((x'c251') NOT BETWEEN (0.6690988516061095) AND (NULL)), (x'' IN ()))))) ORDER BY ((((rt0.c3) IS TRUE))%(json_array(rt0.c0, vt0.c0))) DESC  NULLS LAST, (((((rt0.c0)AND(rt0.c4)))OR(vt0.c0)) IN ()) ASC; -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c1)) IN (TOTAL(vt0.c0), (((rt0.c1))>((rt0.c1))))), ((rt0.c4) IS TRUE) COLLATE NOCASE COLLATE BINARY, ((((vt0.c1) NOT BETWEEN ('0.02397157294522234') AND (rt0.c0)))LIKE((rt0.c0 IN ()))) FROM vt0 ORDER BY (- (rt0.c3 COLLATE RTRIM))  NULLS FIRST, 0.5397283784630748  NULLS LAST, ((((0.009719382321108583)AND(-288160932)))AND(((rt0.c1)<(vt0.c1)))) ASC  NULLS LAST;SELECT x'57de', CAST((- (x'')) AS TEXT), (((rt0.c2 IN ()))||(CAST(rt0.c0 AS REAL))) FROM rt0 WHERE (((0.6944709590195408 IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))||(((rt0.c4)<=(rt0.c2)))), CAST(vt0.c0 AS INTEGER), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE BINARY, CASE ((vt0.c1)=(rt0.c0))  WHEN (((rt0.c1, rt0.c1, vt0.c0))>((x'', vt0.c1, vt0.c1))) THEN (((vt0.c0))>((rt0.c3))) END, (((((rt0.c3)OR(rt0.c2)))AND(vt0.c1)) IN ()) FROM vt0, rt0 WHERE (((NULL)&('2122614705')) COLLATE NOCASE) GROUP BY ((((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (vt0.c1) AND (((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c1)))) HAVING ((((~ (rt0.c3))))!=((((rt0.c1)AND(vt0.c1))))); -- 1ms;
SELECT ALL ((((rt0.c1)&(rt0.c0))) IS FALSE) FROM rt0, vt0 LIMIT -1265476981; -- 0ms;
SELECT ((((rt0.c4)/(rt0.c2)))IS(SUM(rt0.c4))) FROM vt0 WHERE ((NOT (ABS(0.6113265848366726))));SELECT ALL x'8a136946', rt0.c0, ((((rt0.c3)IS NOT(rt0.c1)))/(MIN(vt0.c0))) FROM rt0 CROSS JOIN vt0 ON (CAST('1704308470' AS REAL) IN (((rt0.c4)>(rt0.c0)))) WHERE ((((1.581446125E9 IN ('-2017320036', 1.721494843E9)))<(0.05571203280498249))); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c4 THEN rt0.c4 ELSE vt0.c1 END) NOTNULL) FROM vt0 WHERE (CAST(((x'')&('~C')) AS INTEGER));SELECT DISTINCT ((x'89e7') NOT NULL) FROM rt0, vt0 WHERE ('''j'); -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN (((((rt0.c2)AND(vt0.c0)))AND(rt0.c1))) AND (((rt0.c0)-(rt0.c1)))) FROM vt0;SELECT ALL (CAST(vt0.c0 AS INTEGER) IN ()), (((((rt0.c0)<<(rt0.c4))))>=((IFNULL(DISTINCT rt0.c0, vt0.c1)))), PERCENT_RANK() OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND ((CASE WHEN rt0.c3 THEN rt0.c4 ELSE '' END)!=((~ (rt0.c2)))) PRECEDING) FROM vt0, rt0 WHERE ((((~ (0.02397157294522234)))=(((-2.88160932E8) NOT BETWEEN ('o}') AND (2.122614705E9))))) GROUP BY (((rt0.c4)-(rt0.c1)) IN ()), rt0.c1, rt0.c4 COLLATE BINARY COLLATE BINARY HAVING ((((((((AVG(rt0.c3))AND(rt0.c3 COLLATE BINARY)))AND(rt0.c3)))AND(LIKELY(rt0.c3))))OR(((rt0.c1) IS FALSE))); -- 0ms;
SELECT (((NOT (rt0.c1))) ISNULL), ((CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END) IS TRUE), CAST(COUNT(rt0.c1) AS REAL) FROM rt0, vt0; -- 0ms;
SELECT ALL ((rt0.c2)>>(rt0.c0)) COLLATE NOCASE FROM vt0, rt0 WHERE (((((NULL)==('0.9377962419235519')))<<(((x'468d')*(0.2781276100104927))))); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((AVG(rt0.c2))) AND ((CAST(rt0.c0 AS TEXT)))) FROM rt0 LIMIT 56953976;SELECT ALL x'' FROM vt0 WHERE (CAST(CAST(0.6944709590195408 AS TEXT) AS TEXT)); -- 0ms;
SELECT DISTINCT ((NULL)|(((vt0.c0) IS FALSE))), ((rt0.c2)IS(rt0.c4 COLLATE NOCASE)), CASE ((((rt0.c2)OR(0.43061278160994376)))OR(rt0.c0))  WHEN (((0xffffffffe99edfad, rt0.c2, rt0.c4))=((x'', vt0.c1, rt0.c1))) THEN ((rt0.c1)IS NOT(rt0.c3)) END FROM rt0 ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c1))IS((~ (rt0.c4)))) DESC  NULLS LAST LIMIT -1500857198 OFFSET -288160932;SELECT ALL (MIN(rt0.c4) IN (('-734350635' IN ()), (rt0.c1 IN ()))), ((MIN(vt0.c0)) NOT BETWEEN (((vt0.c1)||(rt0.c0))) AND (CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END)), (((vt0.c1)) NOT BETWEEN ((LIKELY(rt0.c0))) AND ((((rt0.c2)<(rt0.c1))))), (('#D') IS TRUE), ((((TRIM(DISTINCT rt0.c4, rt0.c3))AND((~ (vt0.c0)))))OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c3)))) FROM vt0, rt0 WHERE (CASE WHEN (((''))<>((x'4e70'))) THEN CAST(0.8747758908336775 AS REAL) END) GROUP BY ((((rt0.c0)IS NOT(rt0.c2))) IS FALSE); -- 0ms;
SELECT DISTINCT (rt0.c2 IN ()) FROM rt0, vt0; -- 0ms;
SELECT ALL rt0.c4 FROM vt0;SELECT DISTINCT LAST_INSERT_ROWID(), LOWER(DISTINCT ((vt0.c1)>>(0xffffffffa13aa72a))), ((((rt0.c4)>(vt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) FROM rt0;SELECT DISTINCT x'' FROM vt0, rt0 WHERE (((CAST(NULL AS INTEGER))&(ABS(DISTINCT 's<')))) GROUP BY MIN(((vt0.c1)||(rt0.c1)), ((rt0.c1) NOT NULL)); -- 0ms;
SELECT ALL (((NOT (vt0.c0)))IS NOT(NULL)) FROM rt0 WHERE ((NOT ((x'' IN ())))) ORDER BY TRIM(rt0.c3 COLLATE NOCASE) DESC  NULLS LAST;SELECT TYPEOF(((rt0.c1)-(rt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS INTEGER))IS NOT(LIKELIHOOD(DISTINCT rt0.c4, 0.7708689337741822))), ((vt0.c1 COLLATE RTRIM)%(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)), TOTAL((+ (vt0.c0))) OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((json_valid(rt0.c0))<<(((vt0.c1)GLOB(rt0.c4)))), rt0.c3, 'JIF~SZn' FROM rt0 WHERE (((CASE -1182012034  WHEN '{?qg.' THEN 5.6953976E7 END)<=(((((((((((((NULL)OR(x'')))AND(0xffffffffe99edfad)))OR(x'')))AND(x'')))OR(0.7939207894059757)))OR('tZf')))));SELECT ALL SUBSTR(rt0.c3 COLLATE BINARY, (((rt0.c2))>((vt0.c0)))), (((rt0.c3)) NOT BETWEEN ((TOTAL(vt0.c0))) AND ((json_type(rt0.c2)))), (((rt0.c0)<=(rt0.c4)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT ALL AVG(((rt0.c0)*(rt0.c3)) COLLATE RTRIM) FILTER(WHERE (rt0.c3 IN ())) OVER (), CASE WHEN CASE ''  WHEN vt0.c1 THEN rt0.c4 WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN NULL END THEN (NOT (NULL)) END, ((SUM(vt0.c1))IS(((((((((rt0.c3)OR(rt0.c0)))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))) FROM vt0;SELECT ALL ((((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c4))) BETWEEN (CASE vt0.c1  WHEN rt0.c1 THEN 0.3047191474847457 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END) AND ((rt0.c4 IN ()))) FROM rt0 GROUP BY (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) IN ());SELECT ALL (((NOT (rt0.c2)))%(0.15452513709918259)) FROM rt0, vt0 ORDER BY (NOT (CAST(rt0.c0 AS BLOB)))  NULLS LAST LIMIT 1721494843; -- 0ms;
SELECT FIRST_VALUE(((((vt0.c1) NOTNULL))>=((NOT (0x1797dff1))))) OVER () FROM vt0 WHERE (((((~ (x''))))<((CAST('TRUE' AS TEXT))))); -- 0ms;
SELECT DISTINCT (- (vt0.c1 COLLATE RTRIM)) FROM rt0, vt0; -- 0ms;
SELECT ALL (AVG(rt0.c3) IN ()), (- ((((rt0.c2, rt0.c4, rt0.c0))<=((rt0.c0, '-1263395155', vt0.c1))))), ((((rt0.c4)AND((- (rt0.c0)))))OR(CAST(rt0.c2 AS NUMERIC))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM FROM vt0 WHERE (CASE LIKELY('-456453843')  WHEN ((('')) NOT BETWEEN ((x'')) AND ((NULL))) THEN MIN(-1500857198, x'', x'', -514326386) END);SELECT DISTINCT CASE WHEN (- (x'')) THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END ELSE CAST(rt0.c3 AS INTEGER) END, ((((rt0.c4)<>(vt0.c1))) ISNULL), (- ((((vt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, vt0.c1, vt0.c0)) AND ((rt0.c4, vt0.c1, vt0.c1))))) FROM rt0, vt0; -- 0ms;
SELECT ALL rt0.c4, (NOT (((rt0.c0)OR(rt0.c0)))), ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))/(GROUP_CONCAT(rt0.c1))) FROM rt0 LIMIT -296356815; -- 0ms;
SELECT ALL CASE ((rt0.c2) NOT NULL)  WHEN ((vt0.c1) BETWEEN ('678026184') AND (rt0.c0)) THEN ((rt0.c3) NOT NULL) ELSE ((((rt0.c1)AND(rt0.c0)))AND(vt0.c1)) END, (x'e605' IN (json_patch(rt0.c3, 0xc36e0c8))), ((UPPER(rt0.c1)) NOT NULL) FROM vt0;SELECT DISTINCT ((((MAX(vt0.c1))OR(SUM(0.4419341697295043))))AND(rt0.c0)) FROM rt0 WHERE (((CAST(0.012498898412126591 AS BLOB)) BETWEEN (0.3055525575762641) AND (((('0.15452513709918259', '?.', x''))<(('-1970066546', '', -1.265476981E9))))));SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) FROM vt0, rt0; -- 0ms;
SELECT ALL (((((rt0.c4, rt0.c3, rt0.c4))>((rt0.c0, rt0.c2, rt0.c2))))-(IFNULL(DISTINCT vt0.c0, rt0.c1))) FROM vt0, rt0 WHERE ((((((2122614705) NOT BETWEEN (x'') AND (''))))>=((((-1939573882) BETWEEN (0.15452513709918259) AND (x'')))))); -- 0ms;
SELECT DISTINCT json_insert(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c4 COLLATE RTRIM, rt0.c0 COLLATE BINARY) FROM rt0, vt0;SELECT DISTINCT ROUND(((rt0.c0) ISNULL), ((rt0.c4) IS TRUE)) FROM rt0, vt0 WHERE (CAST(CASE WHEN x'' THEN NULL ELSE 0.992106265966102 END AS REAL)); -- 1ms;
SELECT ALL COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN '2122614705' WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c0 END) AND (ROUND(rt0.c0, rt0.c4))) FROM vt0 WHERE (COALESCE(DISTINCT '-1247761778' COLLATE RTRIM, (NULL IN ()))) ORDER BY CASE rt0.c2  WHEN vt0.c0 THEN rt0.c4 END COLLATE RTRIM COLLATE NOCASE  NULLS FIRST;SELECT rt0.c2, (~ ((rt0.c4 IN ()))), ((COALESCE(rt0.c1, rt0.c2, rt0.c2, vt0.c0)) NOT BETWEEN (((rt0.c3)IS NOT(vt0.c1))) AND (CAST(rt0.c2 AS REAL))) FROM rt0;SELECT DISTINCT rt0.c1, (((((rt0.c1))<((rt0.c2))))/((((vt0.c1))>=((rt0.c4))))), CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS INTEGER) FROM rt0, vt0 WHERE (CAST((((0.39407743028386055)) NOT BETWEEN ((0.5732624916810546)) AND ((NULL))) AS BLOB)) LIMIT -2111396399; -- 0ms;
SELECT NULL FROM vt0, rt0 WHERE (CAST(CASE WHEN 'I	(?)' THEN NULL ELSE 0.045906989223233774 END AS INTEGER)) ORDER BY '1626481390'  NULLS LAST; -- 0ms;
SELECT ALL (((vt0.c1 IN ()))LIKE(((((vt0.c0)AND(rt0.c4)))AND(rt0.c2)))), SQLITE_SOURCE_ID() COLLATE NOCASE, CASE WHEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((rt0.c0, vt0.c0, rt0.c4))<((rt0.c4, vt0.c0, rt0.c1))) ELSE 0x3ee865b5 END FROM rt0;SELECT DISTINCT rt0.c0, CAST(CAST(rt0.c4 AS TEXT) AS BLOB), DENSE_RANK() OVER () FROM vt0;SELECT (((- (rt0.c0))) IS TRUE) FROM rt0 WHERE (('-1011798034' IN ((((x'df9e'))!=((x'')))))); -- 0ms;
SELECT ALL IFNULL(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c1 END, (((rt0.c4, rt0.c3, rt0.c2)) BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND (('I DJF', vt0.c0, vt0.c1)))) FROM vt0 NATURAL JOIN rt0 WHERE (((((((((0.058252583408243575)OR(0.9819792148995571)))AND(0.7160088799580325)))OR('')))AND(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((json_object(rt0.c1, vt0.c0, rt0.c0, rt0.c0, rt0.c0, 0.7982170501777486)) NOT BETWEEN ((~ (rt0.c2))) AND (CASE WHEN rt0.c4 THEN rt0.c4 WHEN NULL THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 END)), ((CASE rt0.c3  WHEN rt0.c2 THEN 0.8526209169762039 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END)<(COUNT(vt0.c1))), TOTAL(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2))) OVER () FROM vt0 WHERE (((((((x'e20289ea', x'', x''))<((x'540f', NULL, '200255080'))), (((('-1970066546')OR(x'4424')))OR(x'')), IFNULL(DISTINCT '', x'7c110a85'), (('o')GLOB(0.019505139223233492)), 0x55886a2e))<((((0.7136844042826482) NOTNULL), (('0.17164884352789167') IS TRUE), NULL COLLATE RTRIM, ((NULL)|(-2.88160932E8)), CAST('#D' AS BLOB))))) GROUP BY (((vt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((CASE rt0.c2  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c1 END))) HAVING CASE (((rt0.c3, rt0.c2, vt0.c0))<((0.7472669718769356, vt0.c1, rt0.c3)))  WHEN rt0.c3 THEN (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))) END;SELECT TOTAL_CHANGES() FROM rt0, vt0; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c2) BETWEEN (rt0.c4) AND (vt0.c1))) FILTER(WHERE CASE WHEN QUOTE(rt0.c3) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END) OVER () FROM rt0, vt0 WHERE (((((CAST(0Xffffffffb76e7170 AS BLOB))OR(NULL COLLATE NOCASE)))AND(NULLIF('-1338377811', '-1e500')))); -- 1ms;
SELECT DISTINCT ((rt0.c3)>(rt0.c0)) COLLATE BINARY, '2122614705', AVG(CASE WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c1 END) FROM rt0;SELECT ALL (('1687180499') NOT BETWEEN (((rt0.c1) IS TRUE)) AND ((rt0.c3 IN ()))) FROM vt0 WHERE (((((((NULL)==(-829310169)))AND(((x'') IS FALSE))))OR(CASE 0.992106265966102  WHEN NULL THEN 0xffffffffb1902550 END)));SELECT DISTINCT (NOT (0x4ed1c2bf)), (((((((((rt0.c0 IN ()))AND((rt0.c0 IN ()))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)))OR((((rt0.c3))=((vt0.c0))))))OR('-1599887666')), ((MIN(rt0.c4)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c1 END) AND ((((rt0.c3, rt0.c2, x'')) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND (('724195765', vt0.c0, vt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT AVG('') OVER () FROM rt0, vt0 WHERE ((((NULL)) BETWEEN (((('-1500857198')IS NOT(0.14442828003381103)))) AND ((CAST(0.2578930158424656 AS TEXT))))) LIMIT -1757057692; -- 1ms;
SELECT DISTINCT ((((((((((-2035204361)OR(rt0.c3)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c3)))IS NOT(CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END)) FROM vt0, rt0 WHERE ((UPPER(DISTINCT 0.45464338925609726) IN ())); -- 0ms;
SELECT DISTINCT ((((vt0.c1) ISNULL)) IS FALSE) FROM rt0 WHERE (CASE x'5d21'  WHEN (- ('۵H')) THEN ((x'5bdb')%(x'')) END);SELECT ALL CAST(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c0 END AS INTEGER) FROM rt0;SELECT DISTINCT ((((vt0.c1)/(rt0.c4))) BETWEEN ((vt0.c0 IN (rt0.c1))) AND (CAST(rt0.c1 AS INTEGER))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT MIN((((x''))==((vt0.c0)))) FROM rt0 WHERE (((LOWER(DISTINCT x''))/(x'')));SELECT ALL DENSE_RANK() OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL 0Xfffffffffcd764f5 FROM vt0 GROUP BY (+ (vt0.c0)) HAVING rt0.c4 COLLATE BINARY;SELECT ALL ((((((vt0.c0)AND(rt0.c4)))AND(vt0.c1)))<>(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt0.c1 END)) FROM vt0;SELECT ALL rt0.c3 FROM vt0 WHERE ('-836741247');SELECT TOTAL(DATETIME(vt0.c0, vt0.c1, vt0.c1)) FILTER(WHERE ((CASE WHEN rt0.c0 THEN rt0.c1 END)IS NOT(CAST(rt0.c2 AS NUMERIC)))) OVER () FROM rt0 WHERE (((((0.9220619690944438) IS FALSE))OR(LIKELY(DISTINCT 'ա	kQKV6E'))));SELECT ALL ((rt0.c1)>=(vt0.c0)) COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)<=(vt0.c0)))|(((rt0.c3)IS NOT(rt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT ALL COUNT(0Xfffffffff5d28ee6) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING), CAST(NULLIF(DISTINCT rt0.c1, rt0.c0) AS BLOB), (((rt0.c3, x'', rt0.c0)) NOT BETWEEN (((+ (rt0.c0)), CAST(vt0.c0 AS REAL), ((rt0.c0) ISNULL))) AND ((((x'')AND(rt0.c4)), (((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))), ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (~ (((((rt0.c2)OR(rt0.c1)))AND(vt0.c1)))) FROM vt0, rt0 WHERE (CAST('-296356815' AS INTEGER)); -- 0ms;
SELECT DISTINCT SUM(0.36115199530990827) OVER () FROM vt0, rt0 GROUP BY (+ (((0.846387460610107)=(rt0.c1)))) HAVING '-288160932'; -- 0ms;
SELECT ((((rt0.c2 COLLATE RTRIM)AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c3) NOT BETWEEN ('-902620029') AND (0.8315490247507271)))) FROM rt0; -- 0ms;
SELECT DISTINCT RANK() OVER ( ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END)) ASC), (((((NOT (vt0.c1)))AND(((NULL) BETWEEN (rt0.c0) AND (vt0.c0)))))AND(((vt0.c1)<<(rt0.c2)))), (((vt0.c1)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) FROM rt0, vt0 WHERE ((((('S<') NOT BETWEEN (NULL) AND (0.5977490738180069))) BETWEEN (CASE x'5f80'  WHEN NULL THEN -2.034312539E9 WHEN '-734350635' THEN x'6362' WHEN 0.018890546348046988 THEN 0.19975902034845905 END) AND ((- (NULL))))); -- 0ms;
SELECT ((MIN(vt0.c1))OR(((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c4)))) FROM rt0 WHERE (((CAST('-2123784702' AS REAL)) NOTNULL));SELECT DISTINCT (NOT (rt0.c2)) FROM rt0, vt0 ORDER BY (vt0.c1 IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, vt0 WHERE ((((''))>=((NULL))) COLLATE NOCASE COLLATE NOCASE) LIMIT -1973631702; -- 0ms;
SELECT DISTINCT CASE ((0.5886262891297744) BETWEEN (rt0.c1) AND (rt0.c0))  WHEN (vt0.c0 IN ()) THEN (rt0.c4 IN ()) ELSE ((rt0.c4) ISNULL) END, ((((((((((vt0.c0) IS FALSE))AND(((rt0.c1)<<(vt0.c1)))))OR(COUNT(*))))AND(((-357838484)-(vt0.c1)))))AND(CAST(rt0.c1 AS TEXT))), (((+ (rt0.c3)))LIKE(TYPEOF(vt0.c0))), ((CAST(-1.217498768E9 AS REAL))==(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), rt0.c3, CASE rt0.c0  WHEN '2143628204' THEN rt0.c4 ELSE rt0.c0 END COLLATE BINARY, AVG(CASE 2.0492308E8  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END) OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL (((rt0.c4)) BETWEEN ((NULL)) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.7828028373841233))))), ((GROUP_CONCAT(rt0.c2))|(((rt0.c2)||(vt0.c0)))), ((MIN(rt0.c1)) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c2 AS TEXT))) FROM rt0 WHERE (((((NULL)) NOT BETWEEN (('-1757057692')) AND ((''))) IN ()));SELECT ALL (((vt0.c1)) BETWEEN ((HEX(vt0.c0))) AND ((json_quote(rt0.c1)))), ((((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (INSTR(rt0.c2, vt0.c0)) AND (rt0.c2 COLLATE RTRIM)), CASE (~ (vt0.c1))  WHEN (vt0.c0 IN ()) THEN ((((rt0.c3)OR(rt0.c1)))AND(x'')) END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((MAX(-2.111396399E9)) NOT BETWEEN ((((vt0.c1, vt0.c1, rt0.c3))==((rt0.c1, rt0.c1, rt0.c2)))) AND (MIN(rt0.c4))), rt0.c2, rt0.c1 FROM rt0;SELECT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)))<=(((rt0.c0) ISNULL))), (((((vt0.c1)!=(rt0.c0)), rt0.c1 COLLATE NOCASE, CAST(rt0.c3 AS NUMERIC)))<((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c4)), rt0.c0 COLLATE RTRIM, CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END))), CAST(MIN(rt0.c3) AS NUMERIC) FROM vt0, rt0 WHERE (((('1322369727', '-271550345', '1918693229'))<>(('-350779782', 0.7187812576925974, 0.4446700666475185))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE BINARY FROM vt0 ORDER BY (((rt0.c2)<>(rt0.c4)) IN (CASE WHEN rt0.c0 THEN rt0.c1 END)) DESC;SELECT DISTINCT (((TOTAL(rt0.c0)))>=((AVG(rt0.c1)))) FROM rt0 GROUP BY ((((((vt0.c1)AND(rt0.c3)))AND(rt0.c3))) NOT NULL) HAVING ((((((rt0.c1)-(rt0.c4)))OR(NULL)))AND(rt0.c3 COLLATE RTRIM));SELECT ALL 0.021914614381770225, CAST(CASE WHEN vt0.c1 THEN NULL ELSE vt0.c1 END AS REAL), ((((rt0.c1)<(vt0.c1))) NOTNULL) FROM vt0, rt0 WHERE (SQLITE_COMPILEOPTION_USED('^/') COLLATE NOCASE); -- 0ms;
SELECT AVG(IFNULL(DISTINCT rt0.c2, rt0.c0)) OVER () FROM vt0;SELECT DISTINCT ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) IN (-350779782)) FROM vt0, rt0 WHERE (CASE WHEN CASE 0Xffffffffd0a04404  WHEN 0.9695155569842377 THEN x'' END THEN 'fd79e#' WHEN (('')>=(x'')) THEN (-229244524 IN (NULL)) WHEN LIKE(NULL, 0x2b2a59b5) THEN x'0d51' ELSE ((x'')|('-435198537')) END) ORDER BY CAST((((rt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c4, rt0.c3))) AS NUMERIC); -- 0ms;
SELECT LIKELY(DISTINCT SUM(rt0.c0)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))  WHEN CASE WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c0 END THEN rt0.c3 COLLATE RTRIM END FROM rt0, vt0 WHERE (((((x'')&(NULL)))LIKE(CASE '0.5886262891297744'  WHEN NULL THEN x'' ELSE '' END))); -- 1ms;
SELECT DISTINCT rt0.c3, CASE WHEN CAST(rt0.c1 AS REAL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) ELSE (((vt0.c1, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c4, rt0.c2))) END, CAST((vt0.c0 IN ('1200548720')) AS REAL) FROM rt0 GROUP BY '-1599887666', (((rt0.c3 IN (rt0.c3))) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((- (rt0.c4)))), (~ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c1 END)) HAVING CASE (((rt0.c0)) BETWEEN ((x'b1cc')) AND ((vt0.c1)))  WHEN (NOT (rt0.c4)) THEN ((((((((rt0.c1)AND(rt0.c3)))OR(NULL)))AND(rt0.c3)))OR('V(gu螱O_')) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END THEN ((rt0.c3) NOT NULL) WHEN LTRIM(vt0.c1) THEN CAST(rt0.c1 AS REAL) END;SELECT ALL (((rt0.c2 IN (vt0.c1)))-(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END)) FROM rt0 ORDER BY (((rt0.c3)<(rt0.c1)) IN ());SELECT DISTINCT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN vt0.c1 END)) FROM rt0 INTERSECT SELECT DISTINCT CASE rt0.c1  WHEN CAST(rt0.c3 AS NUMERIC) THEN TOTAL(vt0.c0) ELSE COUNT(rt0.c0) END FROM vt0;SELECT ALL CASE WHEN (('-1081087561') NOT NULL) THEN rt0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))AND(rt0.c4)) WHEN ((rt0.c1)GLOB(rt0.c4)) THEN rt0.c0 ELSE (((vt0.c0, rt0.c4, rt0.c0)) BETWEEN ((rt0.c4, NULL, rt0.c1)) AND ((rt0.c4, vt0.c0, rt0.c3))) END FROM vt0;SELECT ALL rt0.c1, ((((rt0.c1)/(rt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c3)), ((rt0.c3)GLOB(rt0.c1)) COLLATE BINARY FROM vt0;SELECT DISTINCT ((rt0.c4)%(vt0.c1)) COLLATE RTRIM, 0.6313953233442393, CASE rt0.c1 COLLATE RTRIM  WHEN ((vt0.c1)==(vt0.c0)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END END FROM rt0;SELECT (((rt0.c3)>>(rt0.c2)) IN ()) FROM rt0, vt0 WHERE ((('|7') BETWEEN ((NULL IN (0x5744ce31))) AND ((('JIF~SZn') NOT BETWEEN (0X478eeb70) AND ('-2123784702'))))) ORDER BY CASE CAST(rt0.c1 AS INTEGER)  WHEN (((('?')AND('711356774')))AND(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1)==(rt0.c3)) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END WHEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN x'' ELSE rt0.c2 END THEN ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) END ASC; -- 1ms;
SELECT (((vt0.c0 IN ())) IS FALSE) FROM vt0 WHERE (CAST(((0.9097969754720667)<(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN x'8349' ELSE rt0.c4 END))==(((((vt0.c0, vt0.c0, rt0.c4))>((rt0.c2, rt0.c3, rt0.c2)))))), rt0.c0, 0.7828028373841233 FROM rt0;SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))AND(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c4)))))OR(CAST(vt0.c1 AS INTEGER))) FROM rt0 WHERE ((((+ ('hJsU~yF&'))) NOT BETWEEN ('-雪H>' COLLATE BINARY) AND (CASE WHEN '-435198537' THEN x'90c8' ELSE '' END))) LIMIT 211045244;SELECT DISTINCT (((rt0.c2) ISNULL) IN ()) FROM vt0, rt0 WHERE ((((((((((('CN瑙&A-') BETWEEN ('1382234029') AND (0.0347724391350509)))OR(CASE '-37044894'  WHEN 'g' THEN -1.265476981E9 WHEN NULL THEN 0.4403430576178602 WHEN -2.035204361E9 THEN NULL ELSE '-288160932' END)))OR(x'' COLLATE NOCASE)))OR((-1.949598473E9 IN ()))))OR(CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT ALL ((('aq') NOTNULL) IN (((((rt0.c2)AND(vt0.c0)))AND(rt0.c3)))) FROM vt0;SELECT DISTINCT LEAD(UPPER((rt0.c3 IN (rt0.c0))), LOWER(DISTINCT rt0.c0), CASE WHEN '' THEN CAST(rt0.c1 AS INTEGER) ELSE (((vt0.c0))<((rt0.c4))) END) OVER () FROM rt0, vt0 WHERE (((((x'36bf')IS(0.5383297288586609))) IS TRUE)); -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt0, rt0 WHERE (((((NULL)|(NULL)))OR('1820536402'))); -- 0ms;
SELECT NULL COLLATE BINARY FROM vt0, rt0 WHERE ((((((((0.3667002417126246)OR(0x2869dbc8)))OR(x'd61a'))))<((x'')))); -- 0ms;
SELECT DISTINCT (((CAST(vt0.c0 AS TEXT)))=(((+ (rt0.c3))))), rt0.c4, (('Zy')IS NOT(NULL)) COLLATE NOCASE FROM rt0 GROUP BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) HAVING ((((((((rt0.c2)AND(rt0.c2)))OR(x'')))OR(CAST('850462583' AS REAL))))OR(rt0.c4)) LIMIT 214011242 OFFSET 581813963;SELECT CASE (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((rt0.c4, x'', rt0.c0))>=((vt0.c1, rt0.c2, vt0.c0))) THEN AVG(0.4512592993636728) END FROM rt0;SELECT DISTINCT (NOT (vt0.c1)) COLLATE RTRIM COLLATE BINARY, ((rt0.c4) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM, x'' FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE rt0.c0 COLLATE RTRIM  WHEN ((((rt0.c0)AND(rt0.c2)))OR(vt0.c1)) THEN (((rt0.c4, rt0.c4, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, rt0.c4)) AND ((vt0.c1, rt0.c0, vt0.c1))) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) END FROM rt0 WHERE ((((((((((NULL)OR(0xffffffffb5a0aa8e)))AND(NULL)))OR(0.6664527222105967)))AND('!bc')) IN ((NOT ('-241574999')), '_G' COLLATE RTRIM)));SELECT ALL CHAR((+ (rt0.c1)), (((rt0.c4))<((vt0.c0))), (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))) FROM vt0 WHERE ((NULL COLLATE BINARY IN ()));SELECT DISTINCT ((((((rt0.c1)AND(rt0.c4)))AND(vt0.c0))) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c1)))), (('') NOT BETWEEN (((vt0.c0)<(rt0.c4))) AND ((~ (rt0.c4)))), TRIM(DISTINCT GROUP_CONCAT(rt0.c0), (((vt0.c1))>=((vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c4) ISNULL)))=((((((rt0.c4)OR(rt0.c3)))OR(rt0.c3))))), ((vt0.c0)GLOB(rt0.c3)) COLLATE NOCASE, ((((((((((((((((rt0.c0)OR(rt0.c4)))OR(vt0.c1)))OR(rt0.c2)))AND(vt0.c0)))AND(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))))OR((((vt0.c0, rt0.c4, vt0.c0))<>((rt0.c0, rt0.c2, rt0.c1))))))OR((NOT (rt0.c1)))))OR((vt0.c1 IN ()))) FROM rt0, vt0 ORDER BY CAST(json_quote(0xc36e0c8) AS NUMERIC) ASC  NULLS FIRST; -- 0ms;
SELECT json_valid(((vt0.c1)AND(vt0.c1))), (+ ((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))), CASE WHEN -1566164771 COLLATE NOCASE THEN (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((vt0.c1))) WHEN ((rt0.c4) NOT NULL) THEN vt0.c1 COLLATE RTRIM WHEN NULL THEN ((vt0.c0)OR(rt0.c1)) END FROM vt0;SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3)))=(((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c1)))) FROM rt0;SELECT (((((vt0.c1, rt0.c1, rt0.c4))>((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c1 THEN x'' END) AND (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))) FROM rt0;SELECT DISTINCT CAST(((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c3)) AS BLOB), -2123784702, PERCENT_RANK() OVER () FROM vt0, rt0 ORDER BY rt0.c4 COLLATE BINARY, ((TRIM(DISTINCT rt0.c1))LIKE(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN x'5eb3' WHEN rt0.c2 THEN rt0.c4 END)); -- 1ms;
SELECT DISTINCT (NOT (((vt0.c0) IS TRUE))), ((((rt0.c2) NOT NULL))+(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))), ((GROUP_CONCAT(rt0.c0))!=(-598216872)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM rt0, vt0; -- 0ms;
SELECT CASE WHEN LIKELIHOOD(0Xadda40f, 0.44895410466930685) THEN rt0.c4 END FROM vt0 WHERE (((CAST('\]' AS TEXT))OR((('\rj쌛>''') IS TRUE))));SELECT CAST(((((vt0.c1)OR(vt0.c1)))OR(rt0.c0)) AS INTEGER) FROM rt0 WHERE ((((0.9363453401355883) BETWEEN (0.6837376695109479) AND (0Xffffffffa2de0670)) IN (((NULL)IS(NULL)), IFNULL(0.26674529964555804, '-1963428984'))));SELECT DISTINCT ((((rt0.c1)IS NOT(rt0.c3)))<<(CASE rt0.c3  WHEN vt0.c1 THEN rt0.c3 END)) FROM rt0, vt0; -- 0ms;
SELECT (((rt0.c4 IN ())) ISNULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((0X2f716503)>>(((vt0.c0)LIKE(vt0.c1))))) OVER (), CAST(vt0.c1 COLLATE RTRIM AS INTEGER), (((((('dUri')&(rt0.c0)))AND(((((rt0.c3)AND(rt0.c0)))AND(rt0.c4)))))AND(((rt0.c3)>=(rt0.c0)))) FROM vt0;SELECT ALL ((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) IN ()) FROM rt0 WHERE ('-464357072'); -- 0ms;
SELECT (NOT ((((rt0.c4))>((rt0.c4))))) FROM vt0, rt0 WHERE (SUBSTR((('-1566164771')<(NULL)), (('H?8')||('588490471')))); -- 0ms;
SELECT ALL ((GROUP_CONCAT(rt0.c2)) BETWEEN (SUM(vt0.c0)) AND (x'')), MIN(rt0.c0), NULLIF(rt0.c0 COLLATE NOCASE, ((rt0.c3)>(rt0.c4))) FROM rt0 WHERE ((((x'0ef3')>=(x'')) IN ()));SELECT ALL ((((((((((rt0.c0)=(rt0.c3)))AND(rt0.c1)))OR(CAST(vt0.c0 AS REAL))))OR((((vt0.c0, rt0.c2, rt0.c1)) BETWEEN ((vt0.c0, '-1500857198', rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c3))))))OR((('0.14442828003381103')/(vt0.c1)))) FROM vt0 WHERE ((('-0.0') IS TRUE)) ORDER BY ((((((vt0.c1)<(vt0.c1)))OR((((rt0.c4))>=((rt0.c2))))))AND(((vt0.c1)>>(vt0.c0)))) DESC;SELECT ALL NULL FROM rt0 WHERE ((((((~ (x'3b34')))AND(-1757057692 COLLATE BINARY)))OR(((NULL)<=(0.6341753368715182))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ((vt0.c0)%(((rt0.c3)AND(NULL)))) FROM rt0;SELECT DISTINCT ((((rt0.c2)<=(rt0.c2)))&(CAST(rt0.c2 AS INTEGER))), CASE (((NULL))!=((rt0.c3)))  WHEN rt0.c3 COLLATE NOCASE THEN CAST(vt0.c1 AS TEXT) WHEN CAST(rt0.c1 AS TEXT) THEN (((0Xfffffffffeb88d35, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c4, '-1182012034')) AND ((rt0.c1, vt0.c0, rt0.c1))) WHEN COUNT(vt0.c1) THEN CASE vt0.c1  WHEN rt0.c1 THEN 0x2d5fc023 ELSE rt0.c3 END END, AVG((NOT (rt0.c4))), CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING CAST(HEX(rt0.c4) AS BLOB); -- 0ms;
SELECT DISTINCT SUM(((rt0.c4)<(rt0.c3))) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt0, rt0 WHERE (CAST(CAST(0.21666698384061733 AS BLOB) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((((vt0.c1, vt0.c1, rt0.c1, rt0.c4, rt0.c2))<=((rt0.c2, rt0.c2, vt0.c1, rt0.c4, rt0.c2))))-(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c4)))) FROM rt0 WHERE ((((x'') BETWEEN ('\nX') AND ('-1093588403')) IN ()));SELECT DISTINCT (((('l5닕]')|(rt0.c1)))<<(((vt0.c0)LIKE(rt0.c3)))), (((vt0.c1 IN (vt0.c1)))!=(CASE rt0.c1  WHEN rt0.c4 THEN vt0.c0 WHEN 0.2553580706261933 THEN vt0.c1 WHEN rt0.c4 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END)), (NOT ((rt0.c1 IN ('')))) FROM rt0, vt0 WHERE (((((175298266) NOTNULL))LIKE(CAST(1304325675 AS BLOB)))) ORDER BY (~ (CASE vt0.c1  WHEN vt0.c0 THEN NULL ELSE rt0.c3 END)) ASC, (((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((0.932254402011776)))) ISNULL) DESC  NULLS LAST; -- 3ms;
SELECT DISTINCT (+ (CASE vt0.c1  WHEN rt0.c1 THEN vt0.c0 END)), CASE CASE '1435003438'  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN SUM(rt0.c3) THEN (rt0.c0 IN ()) WHEN ((rt0.c0)>=(vt0.c0)) THEN COUNT(rt0.c2) WHEN (- (rt0.c2)) THEN vt0.c1 COLLATE BINARY END, NULL FROM vt0, rt0; -- 0ms;
SELECT DISTINCT -731784035 COLLATE BINARY, RANK() OVER (), x'', (vt0.c0 COLLATE RTRIM IN ()), COUNT(*) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END) NOT NULL), (- (SUM(rt0.c0))), 0.28539176396939725 FROM vt0, rt0 WHERE ((~ (x'' COLLATE BINARY))) LIMIT -2090433487; -- 0ms;
SELECT ALL TRIM(CAST(rt0.c2 AS INTEGER), CAST(rt0.c1 AS TEXT)), ((-85764781)GLOB(rt0.c3 COLLATE NOCASE)), IFNULL((vt0.c1 IN ()), (- (rt0.c2))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1, rt0.c4, NULL)) BETWEEN ((rt0.c1, rt0.c4, rt0.c0)) AND ((rt0.c1, x'', rt0.c0)))) ISNULL), AVG(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2))) COLLATE BINARY, '' FROM rt0, vt0 WHERE (CAST(CAST(0xffffffffb8fbc31b AS INTEGER) AS TEXT)) ORDER BY CAST(((rt0.c2)>=(vt0.c0)) AS BLOB); -- 0ms;
SELECT DISTINCT NTILE(((vt0.c1 COLLATE NOCASE)LIKE(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))AND(vt0.c1))))) OVER (), ((((rt0.c0 IN ())))=((CASE WHEN -2.41574999E8 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN '-699466712' THEN '5sdn7< EO' WHEN vt0.c0 THEN rt0.c1 WHEN -1176414006 THEN rt0.c1 END))), SUM(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END), (rt0.c4 IN (rtreenode(NULL, rt0.c0), CAST(vt0.c0 AS REAL))), x'' FROM vt0;SELECT TRIM(DISTINCT rt0.c0, rt0.c4) COLLATE BINARY FROM rt0; -- 0ms;
SELECT AVG((((rt0.c4, rt0.c1, vt0.c0))>(('214011242', '1', vt0.c0)))) OVER () FROM vt0, rt0 LIMIT 855904431; -- 0ms;
SELECT DISTINCT (('LK')<(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c4)))), CASE WHEN ((vt0.c1) NOT NULL) THEN vt0.c0 ELSE rt0.c4 END, (NOT (((rt0.c2)==(rt0.c4)))) FROM vt0 LIMIT 1824645830;SELECT ALL MAX((((rt0.c1, rt0.c4, NULL))>(('-902620029', rt0.c4, rt0.c1)))) FROM rt0; -- 1ms;
SELECT ALL ((((((((rt0.c4)AND(rt0.c4 COLLATE BINARY)))OR((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((vt0.c1))))))AND(CAST(rt0.c1 AS TEXT))))AND(rt0.c1 COLLATE NOCASE)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((((((((((vt0.c1)OR(rt0.c4)))OR(vt0.c0)))AND(rt0.c2)))AND(NULL)))AND(vt0.c0)))OR(rt0.c3))) IS FALSE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0 NOT INDEXED WHERE (((((((((NULL)AND(0.2578930158424656)))OR(x'')))OR(NULL)))OR(x'89b1')) COLLATE RTRIM); -- 0ms;
SELECT 0.23282707207353004 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT LAG(CAST(((rt0.c3) BETWEEN (rt0.c2) AND (0.4472418756424227)) AS INTEGER), ('' IN ()), (- ((~ (rt0.c1))))) OVER ( RANGE ((x'')+(((rt0.c2)<>(vt0.c0)))) PRECEDING), NULL COLLATE NOCASE, SUM(IFNULL(rt0.c3, vt0.c1) COLLATE NOCASE) OVER () FROM rt0, vt0 WHERE ((- (((x'') NOT NULL))));SELECT DISTINCT COUNT(*) FROM rt0, vt0; -- 0ms;
SELECT vt0.c1 FROM rt0 WHERE (COALESCE(DISTINCT ((x'8342')<(0.33206991792437246)), (((1.435003438E9))>=(('xNaWSc/'))), 0.5359446455506053 COLLATE NOCASE, (('957060704') BETWEEN ('696640247') AND (0.4302098096716648)), ((1449278776) NOT BETWEEN (0.676639146736823) AND ('A_')), (('s7')<=(0.2339779683253238))));SELECT ALL (((((x'ae8a')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))!=(((rt0.c3)&(rt0.c4)))) FROM vt0;SELECT ALL ('-1599887666' IN (CASE WHEN rt0.c4 THEN rt0.c0 END)) FROM vt0, rt0 LIMIT 214011242; -- 0ms;
SELECT (((rt0.c4) IS FALSE) IN ()), SUM((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((-271550345)))), ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))/(((rt0.c4) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB) COLLATE RTRIM FROM rt0 WHERE (((((0.9829642976524499)AND(0.720250501230978)))AND('')) COLLATE BINARY COLLATE NOCASE);SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c1 AS INTEGER)) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0, rt0 WHERE (CAST(((NULL) BETWEEN (0.5310138287468695) AND (x'')) AS BLOB)) ORDER BY (((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((NULL, ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)), rt0.c4)) AND (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c1))), CAST(rt0.c1 AS NUMERIC), CASE WHEN rt0.c4 THEN rt0.c1 END))); -- 0ms;
SELECT (((vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)), ((vt0.c1)/(rt0.c1)), '0.05571203280498249')) AND (((('Ks') IS TRUE), ((rt0.c0) IS TRUE), ((vt0.c1)>>(rt0.c1))))), ((NULL)!=(CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)), 'F{' FROM rt0;SELECT ALL ((vt0.c1 IN ()) IN ()) FROM rt0 WHERE (CAST((('-1263395155')!=('vꠛ')) AS REAL)); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) BETWEEN ((((rt0.c2, rt0.c2, vt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c1, rt0.c0, rt0.c2)) AND ((vt0.c1, rt0.c4, rt0.c1, rt0.c3, rt0.c1)))) AND (((rt0.c4) ISNULL))) FROM vt0 WHERE ((((+ (0xffffffffc3b12fee)))*((((NULL)) BETWEEN (('')) AND ((0.7659181643975754))))));SELECT DISTINCT NULL, COUNT(CAST(vt0.c1 AS INTEGER)), CASE WHEN CASE rt0.c0  WHEN x'25796a73' THEN rt0.c4 END THEN ((rt0.c3) NOTNULL) ELSE ((vt0.c0)LIKE(rt0.c3)) END, CASE WHEN (((rt0.c3, vt0.c0, rt0.c0))<((rt0.c4, rt0.c2, rt0.c2))) THEN CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c3 END WHEN CAST(NULL AS NUMERIC) THEN COUNT(*) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((rt0.c0)GLOB(rt0.c3)) WHEN (rt0.c4 IN (vt0.c0)) THEN (- (rt0.c1)) WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2)) THEN x'' ELSE (rt0.c2 IN ()) END, (((((rt0.c3, rt0.c1, rt0.c3))<=((rt0.c2, rt0.c2, rt0.c0))))|(UNICODE(rt0.c4))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c1)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) BETWEEN (rt0.c2) AND (x'')))) FROM rt0 WHERE (ABS(DISTINCT 0x2bdfdf48) COLLATE BINARY);SELECT DISTINCT AVG(CAST(rt0.c2 AS NUMERIC)), 0.26674529964555804, MAX(x'') FROM vt0, rt0 WHERE (CAST(((x'')OR(0.1841866886755229)) AS TEXT)) GROUP BY (((NULL))!=((((((rt0.c3)AND(rt0.c2)))AND(vt0.c0))))) ORDER BY x'' COLLATE BINARY  NULLS LAST, ((((rt0.c4 IN (rt0.c0, -271550345))))>((rt0.c4))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT TRIM(CASE -1.093588403E9  WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 END, (vt0.c0 IN ())) FROM rt0 LIMIT -1787207646;SELECT DISTINCT CASE COUNT(*)  WHEN ((((vt0.c1)OR(rt0.c3)))AND(rt0.c1)) THEN CASE WHEN rt0.c4 THEN rt0.c3 END END FROM rt0;SELECT ((NOT (vt0.c1)) IN ()) FROM vt0, rt0 WHERE (((((-8.36741247E8)<<('-21459659')))||((('-1191460069') IS FALSE)))); -- 0ms;
SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END)!=(((0.45969349182994923)*(rt0.c2)))) FROM vt0, rt0 LIMIT -885558685; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE BINARY) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (CAST(rt0.c2 AS REAL))) FROM vt0, rt0 LIMIT -1500857198 OFFSET -271550345; -- 0ms;
SELECT ALL ((rt0.c1) NOTNULL) FROM vt0;SELECT (((((rt0.c2) IS FALSE)))>((CAST(rt0.c2 AS INTEGER)))), NULLIF(CAST(rt0.c0 AS INTEGER), ((rt0.c4)!=(rt0.c4))), MAX(((0x757f161b)*(rt0.c4))) FROM rt0 WHERE ((('瑙9{{FT|eO')>=(((((x'ea22')AND(NULL)))AND(''))))); -- 0ms;
SELECT ((TRIM(DISTINCT rt0.c4, vt0.c1))*(((rt0.c3)GLOB(vt0.c0)))), COUNT(((rt0.c4) NOT NULL)) OVER (), ((((rt0.c4)<(rt0.c4))) NOT NULL) FROM vt0, rt0 WHERE ((('855904431')+((('')GLOB(NULL))))) LIMIT -296356815 OFFSET -1831364886; -- 0ms;
SELECT (((~ (rt0.c3)))OR(vt0.c0)) FROM rt0;SELECT DISTINCT AVG(((rt0.c3)>(rt0.c2))) FILTER(WHERE (((rt0.c3, vt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c2)), (((0.6277839192408129, rt0.c2, vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c1, rt0.c1, rt0.c1)) AND (('', '-\,N', vt0.c1, rt0.c3, rt0.c0))), rt0.c2)) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.8526209169762039 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c3 END, -1.963428984E9, vt0.c1 COLLATE BINARY)))) OVER () FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c0) NOTNULL))&(((rt0.c0)<(rt0.c3)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4)) BETWEEN ((((rt0.c1) NOT NULL))) AND ((vt0.c0))) FROM vt0 WHERE (((((x'') BETWEEN (NULL) AND ('Bd|Oepu_p'))) BETWEEN (NULL COLLATE NOCASE) AND ((((('itDF!텬Y')OR(0.6951981983102113)))AND(0xffffffffe0571deb)))));SELECT DISTINCT (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(MIN(((vt0.c1) ISNULL))) FROM vt0 LIMIT -731784035;SELECT DISTINCT ((-2.71550345E8) NOT BETWEEN (((((rt0.c4)OR(rt0.c0)))OR('0.02397157294522234'))) AND (CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END)), TRIM(AVG(vt0.c1), ((vt0.c1)|(vt0.c0))), (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((CAST(rt0.c2 AS INTEGER)))) FROM rt0, vt0; -- 0ms;
SELECT ALL TOTAL_CHANGES() FROM vt0, rt0 WHERE (CASE IFNULL(NULL, x'')  WHEN ((0.9661256423434003) IS TRUE) THEN ((0.8456289404085846)IS(x'')) ELSE ((x'460c')/('-827344728')) END); -- 0ms;
SELECT (- ((((vt0.c1))<((vt0.c0))))), 957060704 COLLATE BINARY, (- (((rt0.c0)>>(rt0.c1)))) FROM rt0;SELECT DISTINCT COUNT(*), (+ (rt0.c4)) COLLATE NOCASE, MAX((NOT (vt0.c1))) FROM rt0 WHERE (CAST(0.5416512890975481 COLLATE NOCASE AS TEXT));SELECT ALL rt0.c3, CAST(COUNT(rt0.c2) AS REAL), (((((((((((((((vt0.c0)AND(rt0.c4)))OR(rt0.c4)))OR(NULL)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1))))>((rt0.c1 COLLATE BINARY))) FROM vt0;SELECT ALL ((rt0.c0)AND(MIN(vt0.c0))), COUNT(rt0.c4) COLLATE NOCASE, COUNT(*) OVER ( PARTITION BY (x'891f' COLLATE RTRIM IN (CAST(vt0.c0 AS REAL), ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c0)))), CASE (- (x'6ae7'))  WHEN ((vt0.c1) IS FALSE) THEN ((x'')!=(rt0.c4)) WHEN (((rt0.c1, rt0.c0, vt0.c0))<>((rt0.c2, rt0.c4, rt0.c0))) THEN CASE WHEN 0.541513343068313 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN vt0.c1 ELSE vt0.c0 END WHEN ((rt0.c1)>=(rt0.c3)) THEN ((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)) WHEN CAST(rt0.c0 AS TEXT) THEN '|-' WHEN rt0.c2 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM END) FROM rt0, vt0 WHERE ((((0.56033294280293)) BETWEEN ((('108536193' IN ()))) AND ((CASE WHEN 'k' THEN NULL ELSE 0.5747079124088617 END)))) GROUP BY rt0.c4, (~ (rt0.c2)), 795960579, ((((rt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))==(((((rt0.c1)OR(x'')))AND(vt0.c1)))), UPPER(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c4)) AND (('')))) HAVING ((('')) BETWEEN ((((rt0.c4)*(rt0.c0)))) AND (((- (rt0.c0)))));SELECT ALL SUM((((vt0.c1, vt0.c0, rt0.c1))>((rt0.c4, vt0.c1, vt0.c1)))), CASE WHEN COUNT(rt0.c0) THEN vt0.c0 WHEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c4)) THEN (((0.8336719584370217))<=((rt0.c2))) WHEN UPPER(rt0.c3) THEN (rt0.c0 IN ()) ELSE HEX(DISTINCT rt0.c0) END, CASE ((rt0.c0) NOT BETWEEN (vt0.c0) AND (0.9380840563544997))  WHEN ((rt0.c0)>(rt0.c0)) THEN ((rt0.c3)<<(vt0.c1)) WHEN 0.9524324186727531 THEN (rt0.c4 IN (vt0.c1)) WHEN (rt0.c3 IN (rt0.c4)) THEN (('588490471') NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE ((rt0.c4) NOT BETWEEN (vt0.c1) AND (0.8610161167165709)) END FROM rt0 GROUP BY ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)|(((rt0.c2)<=(rt0.c4))));SELECT DISTINCT CASE ((rt0.c3)&(rt0.c3))  WHEN LIKELIHOOD(rt0.c3, 0.8106181981872123) THEN SUM(rt0.c3) END, ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (''))) NOT BETWEEN ((NOT (0.924416146153973))) AND (rt0.c1 COLLATE NOCASE)), (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((vt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) ISNULL))>(((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT CAST(json_array_length(rt0.c4, vt0.c0) AS NUMERIC), COUNT(*) OVER (), ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)))%(IFNULL(rt0.c1, rt0.c4))) FROM vt0 WHERE ((((((('1746523377', '229850612', x'', '', '0.5359446455506053'))<((NULL, -1924749318, '-134000659', x'', 'w1+C')))))>((CAST(0Xffffffff8d08ff62 AS NUMERIC)))));SELECT DISTINCT rt0.c3 FROM vt0, rt0; -- 0ms;
SELECT ALL CAST(((rt0.c1) IS FALSE) AS TEXT), CASE WHEN CASE WHEN rt0.c4 THEN x'' END THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN ((rt0.c3)IS(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c1 IN ()) ELSE CASE WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c2 END END, (NOT (COUNT(*))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0, vt0 GROUP BY CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE, ((((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR((rt0.c2 IN ()))), -1.265476981E9 HAVING (((rt0.c2, rt0.c3, rt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (0x591c4ec4)), AVG('f'), (NOT (rt0.c4)))) AND (((rt0.c0 IN ()), (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((rt0.c2) NOTNULL)))); -- 1ms;
SELECT ALL ((((rt0.c2)-(rt0.c0))) BETWEEN (rt0.c4) AND (((vt0.c1)IS NOT(rt0.c4)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT x'', CASE WHEN vt0.c1 THEN rt0.c2 END COLLATE RTRIM COLLATE NOCASE, (((((rt0.c4, vt0.c1, rt0.c4)) NOT BETWEEN ((vt0.c1, rt0.c4, rt0.c4)) AND ((rt0.c0, '', rt0.c2))))%(((rt0.c1) NOT NULL))) FROM vt0, rt0 WHERE (CASE WHEN CASE WHEN ']4쌛w' THEN '㖧K' ELSE '' END THEN '>I' WHEN ((((x'a258')AND(NULL)))AND(x'')) THEN (('')IS NOT(NULL)) WHEN CASE NULL  WHEN '1055417781' THEN 855904431 END THEN (('436570803')<(NULL)) ELSE ABS(0.007578908010784979) END) LIMIT -1178214680 OFFSET -1646011173; -- 0ms;
SELECT ((rt0.c1)IS(rt0.c3)) COLLATE BINARY FROM rt0 WHERE (CASE WHEN 0xffffffffcdba9750 COLLATE RTRIM THEN (0.27151126041380214 IN ()) END); -- 0ms;
SELECT ALL (((vt0.c1 IN ()))|(SUM(0.9965879288175902))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((((GROUP_CONCAT(x'537ecaa5'))OR((((rt0.c3))<((rt0.c0))))))AND(GROUP_CONCAT(rt0.c0))) FROM rt0, vt0 WHERE (((CASE WHEN 0xffffffffe3621dc9 THEN NULL ELSE '\+' END) NOT BETWEEN (CASE WHEN '' THEN NULL END) AND (CAST('' AS TEXT)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))LIKE(((rt0.c2)GLOB(vt0.c1)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT json_object('1867437429', (~ (rt0.c4))), rt0.c4, (((rt0.c1)) BETWEEN ((-763632642)) AND (((((rt0.c0, rt0.c2, rt0.c4, vt0.c1, 0.4354984832817336))==((vt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c0)))))) FROM vt0, rt0 WHERE ((((('0.5977490738180069')%(NULL))) BETWEEN (((x'40a9')GLOB(x''))) AND (CASE x'9f78'  WHEN 0X725cef6d THEN 0.5383297288586609 END))); -- 0ms;
SELECT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT QUOTE((rt0.c0 IN ())), CAST(((((((((vt0.c0)AND(rt0.c3)))OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c2)) AS NUMERIC), ((vt0.c1 COLLATE BINARY)GLOB(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END)) FROM vt0, rt0 ORDER BY rt0.c4  NULLS LAST LIMIT 752949580; -- 1ms;
SELECT ALL 'F{' FROM vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c0)==(rt0.c3))) AND (CASE '*klpP]bi'  WHEN rt0.c2 THEN vt0.c0 ELSE x'' END)) FROM rt0;SELECT DISTINCT ((((vt0.c1)||(rt0.c2))) ISNULL), LAG((('-k*%aLGOI')LIKE((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))), NULL, ((vt0.c1 COLLATE BINARY) NOT NULL)) OVER (), (+ (CAST(rt0.c0 AS REAL))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c0))>((rt0.c2))) THEN (rt0.c1 IN (rt0.c0, rt0.c0)) WHEN GROUP_CONCAT(rt0.c2) THEN (+ (rt0.c1)) WHEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((NULL))) THEN (rt0.c4 IN ()) ELSE (NOT (rt0.c2)) END FROM vt0, rt0 WHERE (CASE 'JIF~SZn'  WHEN NULL THEN 0.5371856539700257 END COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT ALL CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS REAL) FROM rt0, vt0 WHERE (QUOTE(1738245038) COLLATE NOCASE); -- 0ms;
SELECT LOWER(rt0.c1) COLLATE RTRIM FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT ALL SUM(((vt0.c1)|(vt0.c1))) FROM rt0, vt0 WHERE (CASE ((NULL) IS FALSE)  WHEN NULL THEN 0xfffffffffdcabd62 COLLATE RTRIM END); -- 0ms;
SELECT (((NOT (rt0.c0))) ISNULL) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN vt0.c0 THEN ('0.012498898412126591' IN ()) END FROM vt0, rt0 WHERE (CAST((((0.655561710304807, NULL, NULL))<>((NULL, '-514326386', 0.5546486572416994))) AS REAL)) GROUP BY ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))>(CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c4 END)), ((CHANGES())OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c2 END)), ((((((rt0.c4, rt0.c1, vt0.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c1, NULL, rt0.c3)))))>((((vt0.c0)/(vt0.c1))))) HAVING (rt0.c2 COLLATE RTRIM IN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((((((rt0.c2)<>(vt0.c1)))OR(MAX(rt0.c0, rt0.c3))))OR(vt0.c0 COLLATE RTRIM))) OVER (), (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) IN ()), CAST(((rt0.c2)IS NOT(vt0.c1)) AS NUMERIC) FROM vt0 WHERE (((('1314863754' COLLATE BINARY))<>((((NULL)AND(x'4793'))))));SELECT (NOT ((~ (rt0.c4)))) FROM vt0, rt0; -- 0ms;
SELECT ALL ((rt0.c0) IS FALSE) COLLATE NOCASE, ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (((vt0.c1) IS FALSE))), rt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM FROM rt0, vt0 WHERE ((+ (2.14011242E8 COLLATE NOCASE))) GROUP BY (((0x2f716503 IN (vt0.c0))) BETWEEN (rt0.c3 COLLATE BINARY) AND (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c3)))); -- 0ms;
SELECT DISTINCT TOTAL(((((rt0.c1)AND(rt0.c2)))OR(vt0.c1))) OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL CASE (rt0.c1 IN (vt0.c0, vt0.c1))  WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c1) NOTNULL) ELSE TRIM(vt0.c1, rt0.c4) END, (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((''))))AND(JULIANDAY(vt0.c1, rt0.c1, rt0.c2))))OR(CAST(rt0.c4 AS NUMERIC))), IFNULL((('E{?dh_S') BETWEEN (vt0.c1) AND (vt0.c0)), ((rt0.c3)%(vt0.c1))) FROM rt0;SELECT DISTINCT CAST(((rt0.c1) NOT BETWEEN (x'591f') AND (rt0.c3)) AS NUMERIC), NTILE(rt0.c4) OVER (), SUM(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) OVER () FROM rt0, vt0 LIMIT -1293858521;SELECT DISTINCT (((0.6675551546576439) NOT NULL) IN (vt0.c0 COLLATE RTRIM)), ((((((((LOWER(rt0.c2))OR(((((((((vt0.c1)AND(rt0.c3)))OR('D')))OR(rt0.c3)))AND(vt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))AND((((rt0.c1, vt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c0, x'', rt0.c4)) AND ((rt0.c0, rt0.c4, 0.2339779683253238))))))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))), NULL FROM vt0 WHERE ((((((NULL IN ()))OR(((x'116a')<(x'c31e')))))AND(((-715616902)<(NULL)))));SELECT DISTINCT ((((rt0.c4)==(vt0.c1)))GLOB((rt0.c4 IN ()))) FROM rt0, vt0 WHERE (((('' IN ()))LIKE(1578151603 COLLATE RTRIM))); -- 0ms;
SELECT ALL (((rt0.c4)) BETWEEN ((MAX(rt0.c4))) AND ((ABS(NULL)))) FROM rt0 WHERE (((NULL) BETWEEN (x'') AND (1.7976931348623157E308)) COLLATE BINARY) GROUP BY (~ (((rt0.c2) NOTNULL))), (((CASE WHEN -1902254425 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END))!=((vt0.c1))), CAST(((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c1)) AS TEXT) HAVING x'f8bd';SELECT CAST(((rt0.c0)&(NULL)) AS NUMERIC) FROM vt0 WHERE (((((('<eMM뿻i>S蹬')OR(NULL)))OR(x'08e4')) IN ()));SELECT ALL (((rt0.c0 IN ()))<(((rt0.c1)IS(rt0.c2)))), (((rt0.c4)/(rt0.c1)) IN ()), CASE WHEN (((vt0.c1))<((rt0.c1))) THEN MAX(rt0.c0) ELSE (+ (')_')) END FROM vt0, rt0 WHERE ((((0Xffffffffb5d86569)) BETWEEN ((((NULL) NOTNULL))) AND ((CAST(x'07c0' AS NUMERIC))))); -- 0ms;
SELECT DISTINCT x'', ((CAST(vt0.c1 AS INTEGER))AND(rt0.c0 COLLATE RTRIM)), ((((NULL)OR(UNLIKELY(vt0.c0))))AND((vt0.c0 IN ()))) FROM vt0, rt0 WHERE (((~ (x'')) IN (((0.9536854257359387)GLOB(NULL))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt0 WHERE ((~ (((((((((x'')AND('1776472117')))OR(0Xffffffff92d796ea)))OR(-2.71550345E8)))AND('-748451247'))))) GROUP BY (((vt0.c0)GLOB(vt0.c1)) IN ()) ORDER BY ((((((((json_type(rt0.c3))OR((('-1e500') NOT BETWEEN (0.3667002417126246) AND (0.511022958129743)))))OR((((vt0.c1)) NOT BETWEEN ((0xffffffffdfd193db)) AND ((rt0.c0))))))OR(CAST(vt0.c1 AS REAL))))OR(NULL)) DESC  NULLS FIRST LIMIT 422519751; -- 0ms;
SELECT ALL 0.9940506536316422 FROM rt0 WHERE (((((((((((x'ab2c')AND(0.24454805379785427)))AND('-1191460069')))OR(x'')))OR('vꠛ'))) BETWEEN (('1791629259' IN (x'', NULL))) AND ((- (0.2553580706261933))))) LIMIT 772643051 OFFSET 552713502; -- 0ms;
SELECT CAST(rt0.c0 AS TEXT), (((((rt0.c2 IN ()))OR(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))AND(ABS(rt0.c1))), (((~ (vt0.c1)))-(vt0.c0)) FROM vt0, rt0 WHERE (CAST(CASE WHEN '-829310169' THEN 'itDF!텬Y' END AS REAL)); -- 1ms;
SELECT ALL (+ (((((rt0.c4)AND(vt0.c1)))AND(rt0.c4)))), CAST(((((rt0.c1)OR('n\r')))AND(rt0.c4)) AS NUMERIC), (((vt0.c0 COLLATE RTRIM, ((((((((rt0.c2)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c4 END))<((COUNT(*), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)), SUM(rt0.c4)))), CASE WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM, ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)))!=(UNLIKELY(rt0.c4))) FROM vt0 GROUP BY (x'' IN (0.7766556798516377)) HAVING (((rt0.c0 IN ()))>=(((rt0.c2)=(rt0.c3))));SELECT DISTINCT vt0.c1 COLLATE BINARY FROM vt0 WHERE (json_extract(('-245773654' IN (NULL)), ((('-1338377811'))<>((''))))) GROUP BY (NOT (vt0.c0 COLLATE RTRIM)) HAVING (((rt0.c0 IN ())) IS TRUE); -- 0ms;
SELECT ((((rt0.c2 IN ())))<=((-9223372036854775808))) FROM vt0, rt0 WHERE (((((((((CASE ''  WHEN '1784596058' THEN '957060704' END)OR((- ('-2111396399')))))OR(COALESCE(0x48e1bf16, 0.9597211115615442))))AND(((0.9566543023648557) NOT NULL))))AND(((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT (((((vt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((vt0.c0, rt0.c3, rt0.c2))))|((((vt0.c0, rt0.c4, rt0.c4))<((0.030683855907215007, x'', rt0.c0))))) FROM vt0, rt0 WHERE (((0x6b82b962)*('')) COLLATE NOCASE) INTERSECT SELECT MAX(TYPEOF(rt0.c2) COLLATE RTRIM) FROM vt0;SELECT ALL ((((rt0.c3) IS FALSE))||((NOT (rt0.c1)))) FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN ((((((((NULL)AND(0.018890546348046988)))OR('')))OR(x'55b6')))OR(5.6953976E7)) WHEN CASE WHEN 'Je鞍2+EBQu' THEN '' END THEN (('-1084756227')%(0.11572141032889516)) WHEN ((((NULL)OR('')))OR('-2090433487')) THEN ((x'') ISNULL) ELSE '6M}	!' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT '遟R}' FROM vt0, rt0 WHERE (((((((x'904609ac')-('-1895500694')))OR((0.21413788869311745 IN ('1918693229', 0.02344930436182846, '0.33206991792437246')))))OR(NULL COLLATE RTRIM))); -- 0ms;
SELECT 0.5118468546526167 FROM vt0, rt0 WHERE (CAST((x'' IN ()) AS INTEGER)) ORDER BY ((NULL COLLATE BINARY) NOT BETWEEN ((rt0.c0 IN ())) AND (SQLITE_VERSION())); -- 0ms;
SELECT DISTINCT (- (x'')) FROM rt0 WHERE (0.6894100521143076); -- 0ms;
SELECT ((((-836741247) BETWEEN (vt0.c0) AND (rt0.c0))) NOTNULL) FROM rt0 WHERE (CASE (((-1.081087561E9))<((NULL)))  WHEN (- (0.6772507450273281)) THEN ((((0xffffffffea64bc06)OR('~(dG a6')))OR(-1455937614)) END);SELECT DISTINCT ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c2) AND (rt0.c2)) FROM vt0;SELECT ALL (NOT ((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))), ((SUM(rt0.c2))&('-1654745690')), SUM((((rt0.c4)) BETWEEN ((x'2a67b076')) AND (('-1264992744')))) FROM rt0;SELECT DISTINCT NTH_VALUE(CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 1088877213 THEN vt0.c1 END AS NUMERIC), CASE vt0.c0 COLLATE BINARY  WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN (~ (vt0.c0)) ELSE ((vt0.c0) ISNULL) END) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt0;SELECT (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c4))), CAST(rt0.c0 AS INTEGER))) AND ((((rt0.c4) ISNULL), CAST(rt0.c2 AS REAL), rt0.c2))) FROM vt0;SELECT ((rt0.c3) NOT BETWEEN (rt0.c0) AND ('5Infinity4H')) COLLATE NOCASE FROM vt0 WHERE (((((-8.36741247E8) NOT NULL)) NOT BETWEEN (0.9678336515056113 COLLATE BINARY) AND (CASE WHEN 0.1844810391365761 THEN x'' WHEN x'' THEN 'I\n' WHEN '-1263395155' THEN '208831701' END))) GROUP BY ((CAST(vt0.c0 AS REAL)) BETWEEN (((rt0.c0)IS(rt0.c0))) AND ((NOT (0x340d207d)))) LIMIT 685668810 OFFSET -1293168082;SELECT DISTINCT CASE CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c0 END  WHEN 0.8315490247507271 THEN NULL WHEN (((vt0.c1, rt0.c3, rt0.c1)) BETWEEN ((vt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c0, rt0.c0, rt0.c3))) THEN (rt0.c4 IN (rt0.c0)) WHEN (((vt0.c0, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c1))) THEN (NOT (vt0.c0)) END FROM vt0 WHERE (NULL);SELECT ALL CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END COLLATE RTRIM FROM rt0, vt0; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c3) NOT BETWEEN (vt0.c1) AND (rt0.c4)) THEN ((rt0.c0)!=(rt0.c4)) WHEN rt0.c1 THEN CAST(rt0.c0 AS BLOB) WHEN (((rt0.c1, vt0.c1, rt0.c1)) NOT BETWEEN (('1819555164', rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c0))) THEN rt0.c4 ELSE x'a26e' END FROM rt0;SELECT ((UNLIKELY(DISTINCT vt0.c1)) NOT BETWEEN (((rt0.c2)/(rt0.c3))) AND (TOTAL(rt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1)<=(rt0.c2)) COLLATE RTRIM FROM vt0, rt0; -- 1ms;
SELECT ALL CAST(COUNT(NULL) AS INTEGER), (((vt0.c0)) BETWEEN ((((rt0.c1)-(vt0.c0)))) AND ((rt0.c3 COLLATE RTRIM))), CASE (+ (vt0.c1))  WHEN TOTAL(rt0.c2) THEN (+ (vt0.c1)) WHEN CAST(vt0.c0 AS REAL) THEN COUNT(rt0.c0) WHEN (((vt0.c1))>=((vt0.c1))) THEN ((((vt0.c0)OR(vt0.c0)))AND(NULL)) END FROM vt0;SELECT DISTINCT 0.481370511938354, AVG(x''), CAST((- (rt0.c4)) AS BLOB) FROM vt0, rt0 GROUP BY ((((vt0.c1) NOT BETWEEN (NULL) AND (rt0.c4))) BETWEEN ((~ (rt0.c4))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))) ORDER BY (((- (vt0.c1))) NOT NULL) ASC LIMIT 1541295915; -- 0ms;
SELECT DISTINCT CHANGES() FROM rt0 WHERE (((((0Xffffffffaa4308de COLLATE RTRIM)OR(((x'') NOT NULL))))AND((((0.12018965842952245, 200255080, x''))<>((NULL, '', 0.6828012836139193)))))); -- 0ms;
SELECT DISTINCT (((CAST(vt0.c1 AS REAL)))<>(((NOT (rt0.c2))))) FROM vt0, rt0; -- 0ms;
SELECT (- ((rt0.c4 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT 0.7677050136934936, (((vt0.c1)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((((NULL)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))), ((rt0.c0)/(rt0.c3)) COLLATE BINARY FROM rt0 WHERE ((- ((('712868946') IS TRUE))));SELECT ALL CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END FROM vt0, rt0 GROUP BY x'7d7b'; -- 0ms;
SELECT ALL ((rt0.c2) NOT NULL), rt0.c4, (((NOT (rt0.c3))) IS FALSE) FROM vt0, rt0 INTERSECT SELECT DISTINCT (CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ((((-681000862, x'f8bc', rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c4)) AND ((rt0.c3, -1093131789, rt0.c3))))), CAST(rt0.c3 AS INTEGER) COLLATE RTRIM, ((highlight(vt0.c1, vt0.c0, rt0.c0, rt0.c1))>(rt0.c1 COLLATE NOCASE)) FROM rt0 WHERE (CAST(CAST('' AS NUMERIC) AS REAL));SELECT ALL (((vt0.c0)) BETWEEN ((((vt0.c0)IS NOT(rt0.c0)))) AND (('斵\'))) FROM vt0, rt0 NOT INDEXED WHERE (((((((x'') BETWEEN ('1193001371') AND (0.9365893242812107)))AND((+ ('-501479691')))))AND(CAST(x'59f62750' AS TEXT)))); -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT rt0.c2)) NOT BETWEEN ((((0X5ece1e31)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (rt0.c1)), NULLIF(((vt0.c1)==('-218488266')), rt0.c2), TOTAL(CAST(0.9695155569842377 AS INTEGER)) OVER ( GROUPS  CURRENT ROW) FROM vt0 WHERE (((((x'0c64')>=('')))&(((x'') BETWEEN ('F98sXsh\n') AND (0.09715157908193406))))) ORDER BY ((CASE WHEN vt0.c1 THEN rt0.c2 WHEN x'' THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 END) NOT BETWEEN (((((vt0.c0)OR(rt0.c1)))AND(rt0.c1))) AND ((((rt0.c2))==((vt0.c1))))) ASC;SELECT ALL ((CAST(rt0.c3 AS REAL))GLOB(rt0.c4)) FROM rt0, vt0 WHERE (((CASE WHEN -1.338377811E9 THEN 0.5886296181094559 ELSE x'' END) NOT BETWEEN (NULL) AND ((x'02d3' IN ())))); -- 0ms;
SELECT ALL TOTAL(IFNULL(DISTINCT rt0.c2, rt0.c0)) FROM rt0, vt0 WHERE (((CAST(0.5046059621934306 AS TEXT)) ISNULL)); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c0 AS REAL) AS INTEGER) FROM rt0 LIMIT -1089076334 OFFSET -1191460069; -- 1ms;
SELECT DISTINCT rt0.c1, ((CASE rt0.c3  WHEN 0.20500025486502782 THEN rt0.c0 END)<<(((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)))), ((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) FROM vt0, rt0 WHERE (((((x'1a18') BETWEEN ('-501479691') AND ('1824645830')))OR(-976056066))); -- 0ms;
SELECT CAST(rt0.c2 COLLATE BINARY AS REAL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c4)), CAST(rt0.c2 AS INTEGER), CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c4 END))<=((TYPEOF(DISTINCT vt0.c1), (- (0.260798436883923)), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 ELSE NULL END))) FROM vt0 WHERE (((((json_remove(NULL, 5.63807585E8))AND(((NULL) IS TRUE))))AND(x'0acd' COLLATE RTRIM)));SELECT (((rt0.c1)*(rt0.c1)) IN (rt0.c0)), CAST((- (rt0.c1)) AS NUMERIC), (((vt0.c0)<=(rt0.c0)) IN ()) FROM rt0 WHERE (((((((x'107d') NOTNULL))AND(0.4492510496454405)))AND(((x'') BETWEEN (0.2211159225754702) AND (0x56623d38))))) GROUP BY (((((((((((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c0, rt0.c1, 402513924)) AND ((rt0.c4, vt0.c1, rt0.c0))))OR(rt0.c1 COLLATE BINARY)))OR(((vt0.c1)GLOB(rt0.c0)))))OR(TRIM(vt0.c0))))AND((((vt0.c0, rt0.c4, 'dg%fN')) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c1))))), (((rt0.c3) BETWEEN (rt0.c4) AND (vt0.c1)) IN ()), (((((+ (vt0.c0)))OR((((0x3b88ba16)) NOT BETWEEN ((x'79cc')) AND ((rt0.c3))))))OR(rt0.c3)), ((((vt0.c0)AND(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))))OR(TYPEOF(vt0.c0))), rt0.c4 ORDER BY ((((NULL) NOT NULL)) BETWEEN (((vt0.c1)IS(rt0.c4))) AND (vt0.c1 COLLATE RTRIM))  NULLS LAST, (NOT (vt0.c0))  NULLS LAST;SELECT DISTINCT GROUP_CONCAT(((rt0.c0) ISNULL)), rt0.c4, ((vt0.c0) IS FALSE) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((highlight('', NULL, 368758305, NULL))) AND (((NOT (NULL))))));SELECT 8.50462583E8 FROM rt0, vt0 LIMIT 2095497657; -- 0ms;
SELECT ALL COUNT(((((vt0.c0)AND(rt0.c4)))OR(rt0.c4))) OVER ( ORDER BY (((rt0.c4)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND ((0.8140858285639339))) ASC  NULLS FIRST) FROM vt0, rt0 LIMIT 175298266; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(rt0.c3)))AND(rt0.c2)))%(COUNT(rt0.c0))) FROM rt0 WHERE ((NOT ('731338288')) COLLATE BINARY);SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((- (CASE 0.0076296230001774434  WHEN x'' THEN '-464357072' WHEN NULL THEN '851695601' WHEN '' THEN x'eb6e' ELSE x'' END))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c3)GLOB(vt0.c1)) AS INTEGER), (NOT (((vt0.c1) IS TRUE))), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((rt0.c2) IS TRUE)) AND (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 END)) FROM rt0, vt0 WHERE ((((CAST('795960579' AS INTEGER), (((x'', 'kJ', '253483820')) BETWEEN ((x'', x'88ba', ']2')) AND ((0.36631366243630037, '-375464019', '-271550345'))), (+ (x'')), (- ('-1148922895')), CASE WHEN NULL THEN '' ELSE 0xffffffffb98bed7e END, IFNULL(DISTINCT NULL, x''), ((NULL)IS('au~3洿Y>?'))))>((((('c<'))>=(('F\nqSClC'))), ((x'') NOT NULL), (((x'95aa'))<=((0.46565155964810157))), CASE WHEN 0.045593986289106825 THEN x'' ELSE 2.14011242E8 END, CAST(0.6277839192408129 AS TEXT), (((0.19984098312479193, '-2049402106', NULL)) BETWEEN ((NULL, 0.4295292342696376, 0.06081033563182514)) AND ((0.3086424198846325, '-0.0', NULL))), CASE 0.3836358507314168  WHEN NULL THEN NULL WHEN 0.6247529591590194 THEN '-1496033176' WHEN NULL THEN '-271550345' ELSE 5.88490471E8 END)))); -- 0ms;
SELECT DISTINCT ROUND((((NULL))==((rt0.c0))), CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 END) FROM vt0;SELECT DISTINCT COUNT(x'') OVER () FROM vt0, rt0 WHERE ((('' IN ()) IN ())); -- 0ms;
SELECT DISTINCT TOTAL(MIN(vt0.c1, rt0.c1, vt0.c0, rt0.c4)) OVER ( GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE GROUP) FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c1)&(vt0.c1)) THEN ((rt0.c4)/(rt0.c1)) END  NULLS FIRST, ((((0x41bcc5c1)AND(NULL)))OR(((rt0.c3)&(rt0.c1))))  NULLS FIRST, CHAR('?꿴.S鞉', CASE rt0.c3  WHEN rt0.c2 THEN '850462583' WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 ELSE '-1731471992' END, ((x'') NOTNULL)); -- 1ms;
SELECT DISTINCT CAST((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS REAL) FROM vt0 WHERE (CASE 0.20339206633496032  WHEN ')Ii' THEN 0.6944709590195408 END COLLATE NOCASE);SELECT DISTINCT HEX(LIKELY(DISTINCT rt0.c3)) FROM rt0 WHERE (0.5123732467240144 COLLATE NOCASE) LIMIT -1360633083; -- 0ms;
SELECT rt0.c2 FROM rt0; -- 0ms;
SELECT ALL CASE WHEN (((rt0.c3, rt0.c3, rt0.c2, rt0.c0, rt0.c3))<>((rt0.c4, rt0.c3, rt0.c4, rt0.c1, rt0.c4))) THEN CAST(rt0.c4 AS TEXT) END FROM rt0, vt0 WHERE (((((x'') NOT BETWEEN ('K!gIe') AND (x''))) NOT BETWEEN (HEX(DISTINCT -1599887666)) AND (((NULL)IS(x'9b33'))))) ORDER BY ((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c2)))>(ABS(DISTINCT rt0.c0))); -- 0ms;
SELECT (((((NULL)OR(rt0.c1)))OR(vt0.c1)) IN (((((((((((((vt0.c1)AND(rt0.c1)))OR(rt0.c3)))OR(x'')))OR(rt0.c1)))OR(rt0.c3)))AND(NULL)))) FROM rt0 WHERE ((NULL COLLATE RTRIM IN ((x'' IN ()))));SELECT DISTINCT vt0.c0, (NOT (UNLIKELY(DISTINCT rt0.c1))), rt0.c3 FROM rt0, vt0 LIMIT -1994407482; -- 0ms;
SELECT ALL ((((CASE vt0.c0  WHEN rt0.c4 THEN NULL END)AND(((x'')|(rt0.c4)))))OR((((rt0.c0))<((rt0.c1))))) FROM vt0, rt0; -- 0ms;
SELECT (((((((rt0.c2)OR(rt0.c3)))AND(NULL))))<=((((rt0.c1)%(rt0.c4))))), ((((rt0.c1) NOT BETWEEN (rt0.c4) AND ('-269698755')))>>(CAST(rt0.c1 AS NUMERIC))), DENSE_RANK() OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT '0.8526209169762039') FROM vt0, rt0 LIMIT -2016939139; -- 0ms;
SELECT ALL ((((x'')AND(((rt0.c1)||(0.2781276100104927)))))OR(((0.8690485912368436) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0; -- 0ms;
SELECT SUM(NULL) FILTER(WHERE (((rt0.c4 IN (rt0.c4))) IS FALSE)) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE TIES) FROM vt0, rt0 WHERE ((((x'') NOT BETWEEN (0xffffffffd202e095) AND (x'')) IN ())) GROUP BY TRIM((vt0.c1 IN ())) HAVING ((vt0.c0) NOT BETWEEN ((rt0.c2 IN ())) AND ((- (rt0.c4)))) ORDER BY CASE WHEN ((rt0.c3)AND(rt0.c2)) THEN rt0.c3 COLLATE RTRIM WHEN CAST(rt0.c4 AS INTEGER) THEN (~ (vt0.c1)) WHEN json_type(rt0.c0) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt0.c1)) END LIMIT -403513427 OFFSET 874820341; -- 0ms;
SELECT DISTINCT COUNT(vt0.c0) FROM vt0, rt0 WHERE (NULL) ORDER BY ((rt0.c4 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt0.c0) NOT NULL))) DESC; -- 0ms;
SELECT DISTINCT ((rt0.c0)IS NOT(x'c8d7')) COLLATE BINARY FROM vt0, rt0 WHERE (((0Xfffffffff199dba9) NOTNULL)); -- 0ms;
SELECT DISTINCT 'G웋' FROM rt0, vt0 WHERE (((CASE WHEN x'' THEN '-843579084' WHEN '1621748216' THEN 0.015316260402014725 WHEN '' THEN '*H\Y~媋o' END)GLOB(SQLITE_SOURCE_ID()))); -- 0ms;
SELECT DISTINCT (((((rt0.c4)OR(rt0.c0)))AND(vt0.c1)) IN ()), ((vt0.c1)/(((((rt0.c1)AND(rt0.c0)))AND(vt0.c1)))), TYPEOF((NOT (rt0.c0))) FROM vt0, rt0 WHERE (((((NULL)OR(0xffffffffc9a3f3ae)))OR('7}|[hx')) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT (rt0.c4 COLLATE NOCASE IN (((((rt0.c4)OR(vt0.c1)))AND(rt0.c2)), (vt0.c0 IN ()))), x'', GROUP_CONCAT(0.8426322681186422) OVER ( PARTITION BY ((((CAST(rt0.c3 AS BLOB))AND(0.46445686994270907)))AND(rt0.c4 COLLATE NOCASE)), x'', ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 ELSE vt0.c1 END) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (vt0.c0 COLLATE RTRIM)), ((((vt0.c0)%(rt0.c2))) IS FALSE)) FROM rt0, vt0 GROUP BY HEX(vt0.c1) COLLATE BINARY; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((0Xffffffffee55f431 IN ())) BETWEEN (CASE WHEN 0.24647168117768103 THEN '-2017320036' WHEN 0xffffffffd43ab2d5 THEN 0Xffffffffe7242238 WHEN 0.2781276100104927 THEN '-296356815' END) AND (((NULL)+(x''))))); -- 0ms;
SELECT ((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 END) NOT BETWEEN ((((NULL, vt0.c1, vt0.c1))>((rt0.c4, rt0.c3, vt0.c0)))) AND ((NOT (rt0.c2)))) FROM vt0, rt0; -- 0ms;
SELECT ALL TOTAL(NULL) OVER (), vt0.c1, (((rt0.c1 IN (vt0.c0, 0.6341753368715182))) IS TRUE) FROM rt0, vt0; -- 1ms;
SELECT ALL ((vt0.c1) NOT BETWEEN ((vt0.c0 IN (0.2663449903350774, '1378224202'))) AND (((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)))), ((((((rt0.c3) NOTNULL))OR(((rt0.c0)=(rt0.c4)))))AND(((rt0.c0) IS TRUE))), ((CASE rt0.c3  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c1 END)+(MIN(vt0.c1))) FROM rt0, vt0; -- 0ms;
SELECT ALL ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c4))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT AVG((((rt0.c0))>((rt0.c4)))) FROM vt0 WHERE (CAST(((x'') IS TRUE) AS REAL));SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)OR(((rt0.c0)|(vt0.c1)))) FROM rt0, vt0 WHERE (CASE WHEN (+ (x'')) THEN TRIM(-3.57838484E8) WHEN ((x'') NOT BETWEEN (0.2927343430079623) AND ('-1939573882')) THEN x'' WHEN ((((0.6159199416708058)AND(NULL)))OR(0x1e1d3c3b)) THEN (('91377579')IS(NULL)) WHEN ('1187239452' IN ()) THEN CASE ''  WHEN NULL THEN x'' ELSE 0.676639146736823 END WHEN ((x'')>=(689761370)) THEN CASE WHEN 0.8191676402829488 THEN NULL ELSE NULL END END); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, vt0; -- 1ms;
SELECT DISTINCT TIME(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), '2,MS', NULL, COUNT(x'f6dd'), CAST(rt0.c0 AS INTEGER)), (((((((((rt0.c4)AND(rt0.c2)))OR(vt0.c1)))AND(rt0.c0)))OR(rt0.c1)) IN ()), x'' FROM vt0 GROUP BY ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)))<=((NOT (vt0.c1)))) HAVING rtreenode((+ (rt0.c4)), ((vt0.c1)&(vt0.c0)));SELECT (((rt0.c2 IN ())) NOTNULL) FROM rt0 WHERE (CAST((+ ('0.17164884352789167')) AS NUMERIC)); -- 0ms;
SELECT ((((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c4, rt0.c2, rt0.c2))), AVG(vt0.c1), ((rt0.c4) NOT NULL), ((((vt0.c1)OR(NULL)))AND(rt0.c4)), ((1.721494843E9)<(vt0.c0))))<((rt0.c0, ((vt0.c1)%(vt0.c0)), ((rt0.c1) IS FALSE), ((rt0.c4)*(vt0.c0)), ((rt0.c3)/(vt0.c1))))) FROM rt0;SELECT (NOT (vt0.c0)) FROM vt0 WHERE (((((x'')LIKE(x''))) IS FALSE)) ORDER BY ((x'47c4') NOT BETWEEN ((rt0.c3 IN ())) AND (SQLITE_COMPILEOPTION_GET('-241574999'))) DESC; -- 0ms;
SELECT rt0.c3 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (TRIM(vt0.c0, rt0.c3))); -- 0ms;
SELECT (((- (rt0.c3))) IS FALSE) FROM rt0 WHERE (CAST(((x'')|(x'a9cf')) AS TEXT)); -- 0ms;
SELECT ALL CASE WHEN 0.17986067677491913 THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN 0xfffffffff7295db0 THEN vt0.c0 WHEN vt0.c0 THEN 0.237283057853235 END END, ((IFNULL(rt0.c2, rt0.c2)) BETWEEN (((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c0))) AND (rt0.c3)), (((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((x'2108'))), GROUP_CONCAT(((rt0.c3)<(0.9384528887485512))) OVER (), ((((rt0.c2) ISNULL))<=(rt0.c0)) FROM rt0 WHERE (json_quote(-1566164771 COLLATE RTRIM));SELECT DISTINCT ((SQLITE_COMPILEOPTION_GET(vt0.c0))AND((rt0.c0 IN ()))) FROM rt0, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0)))<>((rt0.c1 IN (rt0.c2)))), '', (((vt0.c1, rt0.c1, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c4, vt0.c0))) COLLATE BINARY FROM rt0;SELECT DISTINCT CAST(((rt0.c1)<(rt0.c4)) AS TEXT), (((rt0.c2 IN ('1435003438', vt0.c1)))<>(((vt0.c0) BETWEEN (NULL) AND (rt0.c4)))), (((0.8874826620729832, rt0.c0, vt0.c1)) BETWEEN (((~ (rt0.c0)), (rt0.c1 IN ()), ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)))) AND ((CAST(rt0.c3 AS NUMERIC), SUM(rt0.c0), ((((rt0.c4)OR(rt0.c1)))AND(rt0.c4))))) FROM vt0 WHERE (((((CAST('K됷劣c|f<' AS INTEGER))AND(((-182677908) ISNULL))))AND(SUBSTR(0X7fc52bac, '182297615')))) GROUP BY (((rt0.c2 IN ())) IS TRUE) HAVING IFNULL(DISTINCT (((rt0.c3))>=((vt0.c0))), rt0.c1);SELECT DISTINCT ((((rt0.c0) NOT NULL))-(((rt0.c0)OR(rt0.c0)))), (+ (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN x'0515' ELSE vt0.c1 END)), COUNT(x'') FROM vt0, rt0; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))AND(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))), 1304325675, UNLIKELY(vt0.c0) COLLATE BINARY FROM rt0, vt0 WHERE (CAST(NULL COLLATE BINARY AS TEXT)); -- 0ms;
SELECT LAG(CAST('' AS NUMERIC), ((((rt0.c1) NOT NULL))LIKE(json_object(rt0.c4, rt0.c2))), (((((rt0.c3))>((rt0.c2))))>(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0))))) OVER () FROM rt0;SELECT (((rt0.c1) IS TRUE) IN (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))), ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 ELSE x'' END) NOTNULL), ((1.449278776E9) NOT BETWEEN (((vt0.c0)<=(0xffffffffffe5aada))) AND (TRIM(NULL))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((((((('Bd|Oepu_p')OR(x'')))AND(NULL))) NOT NULL)) ORDER BY (((0.8981804961035237)) NOT BETWEEN (('')) AND ((CASE vt0.c0  WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END))) ASC  NULLS LAST, (0X30a3408d IN (((rt0.c2) NOT NULL))) ASC  NULLS LAST;SELECT DISTINCT (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))>(LIKELY(rt0.c0))) FROM rt0 ORDER BY 'AW' DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT x'a738' FROM vt0, rt0; -- 0ms;
SELECT ALL CASE ABS(DISTINCT rt0.c3)  WHEN rt0.c1 COLLATE RTRIM THEN vt0.c1 WHEN ((rt0.c0)<=(vt0.c1)) THEN (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) WHEN (rt0.c2 IN ()) THEN ((rt0.c4) NOTNULL) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1))>((vt0.c1))) COLLATE RTRIM FROM rt0, vt0 GROUP BY rt0.c3 HAVING rt0.c4; -- 0ms;
SELECT DISTINCT ((DATE(rt0.c2, '', vt0.c0)) ISNULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((rt0.c0) IS FALSE), '	''꼴', vt0.c0))>((x'', ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), (NULL IN ())))) FROM rt0 WHERE (CAST((((NULL))!=(('56953976'))) AS NUMERIC)) GROUP BY 0.5647099055813859 HAVING (((rt0.c3 IN ()))%(NULLIF(rt0.c4, vt0.c1)));SELECT DISTINCT (NOT (CASE WHEN vt0.c0 THEN vt0.c1 ELSE NULL END)) FROM rt0;SELECT DISTINCT RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')))==((~ (rt0.c2)))), GROUP_CONCAT(rt0.c3), ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) IN (((vt0.c0) NOT NULL))) FROM vt0;SELECT DISTINCT CASE ((x'')>(rt0.c4))  WHEN vt0.c1 COLLATE BINARY THEN rt0.c4 END FROM rt0 WHERE (((x'') BETWEEN (x'') AND ('E(9[')) COLLATE NOCASE) LIMIT 2123171958 OFFSET 1965107405;SELECT (((rt0.c4)|(rt0.c1)) IN (MIN('-1994852584'), json_quote(rt0.c0))) FROM rt0, vt0 WHERE (CASE WHEN (((0.315911483458686))>=((0.6837376695109479))) THEN 5.88490471E8 ELSE (0.08672797402830723 IN (x'')) END); -- 0ms;
SELECT DISTINCT ((+ (rt0.c3)) IN ()), DENSE_RANK() OVER (), (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) IS FALSE) FROM rt0 WHERE (((('<LW7\wNo') IS TRUE) IN (x''))); -- 0ms;
SELECT AVG(rt0.c2) FROM vt0 WHERE ((+ ((('9')&(-78277076))))) GROUP BY vt0.c0;SELECT DISTINCT ((TRIM(vt0.c0))<((+ (rt0.c0)))) FROM vt0 ORDER BY CASE ((vt0.c0)>=(rt0.c3))  WHEN STRFTIME(rt0.c2, rt0.c0, rt0.c0) THEN (~ (NULL)) END DESC LIMIT -182677908 OFFSET 701138025;SELECT MAX(CAST(rt0.c0 AS REAL)), (~ ((+ (rt0.c0)))), ((((vt0.c0)&(x'2b16'))) NOT BETWEEN (((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c0))) AND (((((rt0.c4)AND(vt0.c0)))OR(rt0.c4)))) FROM rt0 WHERE (1.055417781E9);SELECT CAST(LIKELIHOOD(rt0.c1, 0.4582414040029259) AS TEXT) FROM vt0 WHERE (json_object(((((0.15597807131867758)AND('-288160932')))OR('1862637680')), LIKELIHOOD(x'', 0.5699685496298419)));SELECT TOTAL((((vt0.c0, rt0.c0, vt0.c1))>=((rt0.c1, rt0.c3, rt0.c4)))) FROM vt0, rt0; -- 0ms;
SELECT ALL CAST(0x5914d9dc AS BLOB), CAST(COUNT(rt0.c3) AS INTEGER), SUM(rt0.c2 COLLATE BINARY COLLATE NOCASE) FROM vt0 WHERE (CASE WHEN CASE -2.123784702E9  WHEN -5.01479691E8 THEN x'f1ae' WHEN -5.14326386E8 THEN x'' WHEN '-1460229330' THEN 0.8041749851851451 ELSE '!PZ)TW&' END THEN ((((x'c704')AND('1687180499')))AND(-9223372036854775808)) END) LIMIT 1590274075 OFFSET 1975180701;SELECT ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((vt0.c1)-(rt0.c4)))), (((((rt0.c0))>((vt0.c1)))) IS TRUE), TIME(((rt0.c3) NOT NULL), ((rt0.c3) IS TRUE), (rt0.c4 IN ())) FROM vt0 WHERE ((((((1439865131)AND(0.5675375125686033)))AND('798059893')) IN ()));SELECT ((rt0.c0) BETWEEN (NULL) AND (rt0.c3)) COLLATE BINARY FROM vt0 WHERE (x'');SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT (IFNULL(rt0.c1, rt0.c0) IN ((((vt0.c0, rt0.c4, 0.8397393175539146))<=((rt0.c0, rt0.c1, vt0.c0))))) FROM rt0 WHERE (((((NULL) ISNULL))AND(((NULL) NOT BETWEEN (x'baf2') AND (0X60f222ee)))));SELECT (((((~ (rt0.c1)))OR(CASE rt0.c0  WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 END)))AND((+ (rt0.c2)))) FROM rt0, vt0 WHERE ((NULL IN (-2.41574999E8)) COLLATE BINARY) GROUP BY ((((((rt0.c4)AND(rt0.c4)))OR(vt0.c0)))<<(((rt0.c3)||(vt0.c1)))); -- 0ms;
SELECT DISTINCT (+ (((rt0.c3) NOT NULL))) FROM rt0, vt0; -- 0ms;
SELECT ((+ ('')) IN ()) FROM vt0 WHERE (((((1.435003438E9 IN ('957060704'))))<=((CASE 0.775066525184616  WHEN NULL THEN '214011242' ELSE '-1500857198' END)))) ORDER BY rt0.c0 COLLATE NOCASE  NULLS FIRST;SELECT DISTINCT CAST(0.7108329661287979 AS NUMERIC) FROM vt0 GROUP BY ((((vt0.c0, rt0.c2, vt0.c0, rt0.c4, vt0.c0))<=((rt0.c0, rt0.c4, rt0.c0, vt0.c0, rt0.c4))) IN ()), (~ (vt0.c1)), (((((rt0.c3)GLOB(rt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)), ((rt0.c4)OR(rt0.c4))))=((rt0.c3, ((rt0.c3)OR(0.14442828003381103)), LIKELIHOOD(DISTINCT rt0.c4, 0.13067285224555625)))) ORDER BY ((vt0.c1 COLLATE RTRIM)AND(((((vt0.c1)OR(rt0.c3)))AND(rt0.c3))))  NULLS LAST, (((~ (rt0.c2)))+(LIKELY(rt0.c4)))  NULLS LAST;SELECT AVG(CASE -361017141  WHEN vt0.c1 THEN vt0.c0 END) OVER () FROM rt0 WHERE ((('1222281858' COLLATE NOCASE) BETWEEN (CASE WHEN 0.22768719264142678 THEN NULL END) AND (CHAR('of1w^P', NULL, 0.6633114624723759))));SELECT DISTINCT TOTAL(CASE rt0.c1  WHEN x'69eb' THEN rt0.c2 WHEN vt0.c1 THEN 0.060172019980124336 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c0 END) OVER () FROM rt0 WHERE ((((x''))>=((((NULL) IS FALSE))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((CASE WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c4 THEN NULL END))) ASC;SELECT DISTINCT (((rt0.c4) NOT NULL) IN ()) FROM vt0, rt0 ORDER BY '175298266' ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT load_extension((rt0.c2 IN ())), ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))-(NULL)), rt0.c2 FROM rt0, vt0 WHERE (((CAST(0.594250591354953 AS NUMERIC))==((('') IS TRUE)))); -- 0ms;
SELECT DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE RTRIM, vt0.c1, TOTAL(((vt0.c1)IS NOT(vt0.c0))) FROM vt0;SELECT DISTINCT x'e65f', ((vt0.c0 IN ()) IN ()), (((vt0.c0, rt0.c2, vt0.c0))==((rt0.c0, rt0.c4, '1570880320'))) COLLATE RTRIM FROM rt0 ORDER BY CAST(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL);SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((rt0.c2)/(rt0.c2))))), (- (CAST(68350165 AS BLOB))), SQLITE_COMPILEOPTION_GET(CASE WHEN rt0.c4 THEN x'' ELSE rt0.c4 END) FROM vt0, rt0 WHERE (((((((0.42502978284139115)AND(0x4fa2024b)))OR(x'')))<>(((x'a2b8')-(x''))))); -- 0ms;
SELECT CASE ((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))  WHEN (vt0.c1 IN (x'')) THEN '-1130094692' ELSE QUOTE(rt0.c4) END FROM rt0 LIMIT -1093588403;SELECT DISTINCT ((((rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c2, rt0.c3, vt0.c1))) IN ()), NULL, (((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))LIKE(((vt0.c1) NOTNULL))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c4)%(rt0.c1)))AND(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c3)))))AND(((rt0.c3)LIKE(x'652c9f91')))) FROM vt0, rt0 WHERE ((((((((((1464127025)AND(NULL)))AND(0xffffffffc8d4009d)))OR(0.749949297008365)))OR(0.5655883791741219)) IN ())) GROUP BY CAST((- (rt0.c1)) AS TEXT) HAVING (((rt0.c2)) NOT BETWEEN ((((vt0.c1)GLOB(rt0.c0)))) AND ((((rt0.c0)/(rt0.c2))))) ORDER BY ((rt0.c2 COLLATE NOCASE) IS FALSE)  NULLS FIRST, ((NULL)IS NOT((((0.717452849986586))==((rt0.c1))))) DESC, ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN vt0.c1 END) AND (((((rt0.c0)AND(rt0.c4)))AND(vt0.c1)))) ASC; -- 0ms;
SELECT DISTINCT CAST(MIN(vt0.c1) AS BLOB) FROM vt0 INNER JOIN rt0 ON rt0.c4; -- 0ms;
SELECT ALL NULL FROM vt0, rt0 WHERE ((- (x'')) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT ALL (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) IN ()) FROM vt0 WHERE ((((NULL)) BETWEEN ((NULL COLLATE NOCASE)) AND (((((0.6264993111089372))<=((x''))))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (NULL IN ()) FROM vt0 WHERE ((TRIM(x'', 0.6267277499557385) IN ())); -- 0ms;
SELECT DENSE_RANK() OVER (), vt0.c0, CASE NULLIF('0.43061278160994376', rt0.c1)  WHEN x'' THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (x'')) THEN ((((((((vt0.c0)AND(-1.923300831E9)))OR(rt0.c2)))OR(rt0.c4)))AND(vt0.c1)) WHEN ((vt0.c1)IS(vt0.c0)) THEN rt0.c0 COLLATE NOCASE END, (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (rt0.c1) AND (vt0.c0)), rt0.c4 FROM vt0 WHERE (LOWER(DISTINCT x'ce36' COLLATE NOCASE)) LIMIT 200255080;SELECT ALL ((((((((vt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(((rt0.c3) ISNULL))))OR((+ (vt0.c1)))), TOTAL(TRIM(rt0.c1, vt0.c1)), ((((vt0.c0)OR(rt0.c1)))OR(rt0.c4)) COLLATE NOCASE FROM rt0 WHERE (((0.7543910890577861)==(CASE WHEN '-1562507664' THEN NULL WHEN 1974541380 THEN NULL WHEN NULL THEN x'' WHEN 0.38221568067498823 THEN x'' WHEN NULL THEN NULL WHEN NULL THEN NULL WHEN 0.6951981983102113 THEN NULL ELSE NULL END)));SELECT CASE CAST(NULL AS NUMERIC)  WHEN ((1590274075) BETWEEN (vt0.c1) AND (rt0.c4)) THEN COUNT(rt0.c2) WHEN ((vt0.c1)%(rt0.c1)) THEN (('822497680')|(NULL)) WHEN rt0.c2 THEN (+ (rt0.c4)) ELSE CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END END FROM vt0 LIMIT 447808146 OFFSET 1181967389;SELECT DISTINCT (((((vt0.c1)AND(vt0.c1)))AND(rt0.c4)) IN ()), 'v+\rK>g', (NOT (vt0.c0 COLLATE RTRIM)) FROM rt0 WHERE ((((-1.963428984E9 IN ()))-(CASE WHEN 'start of month#' THEN NULL WHEN 'n' THEN x'71c1e993' WHEN NULL THEN 'g' ELSE '(r箉?C_m' END))) GROUP BY (NOT (1543074905)) HAVING ((MIN(x'9770'))GLOB(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))));SELECT DISTINCT CAST(rt0.c2 COLLATE RTRIM AS REAL), NTH_VALUE(((NULL) NOT BETWEEN (CASE WHEN rt0.c0 THEN x'' ELSE rt0.c2 END) AND (((((rt0.c1)OR(rt0.c1)))AND('Mq')))), ((((((((((rt0.c3)/(1596833750)))AND(ABS(vt0.c0))))OR(json_array_length(rt0.c1))))AND(rt0.c0)))OR(NULL))) OVER (), (- (vt0.c0)) COLLATE BINARY FROM rt0, vt0 ORDER BY ((((((rt0.c0)OR(rt0.c4)))OR(-7.94803196E8)))*(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 END))  NULLS FIRST, ((((((((((rt0.c0) NOT NULL))OR(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c4 END)))OR((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(load_extension(vt0.c1))))AND(LTRIM(vt0.c1))), ((((rt0.c4 COLLATE NOCASE)OR((~ (rt0.c3)))))AND(((rt0.c3) NOT BETWEEN (vt0.c1) AND (rt0.c1)))) DESC;SELECT DISTINCT ('rk' IN ()) FROM rt0, vt0 WHERE (((('') IS FALSE) IN ())); -- 1ms;
SELECT ALL (NOT ((NOT (rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c1 END, (vt0.c0 IN (rt0.c0)), rt0.c4 COLLATE NOCASE))<=((COUNT(*), JULIANDAY(rt0.c1, vt0.c1, '1304325675'), MAX(vt0.c0)))) FROM rt0 WHERE (795960579 COLLATE NOCASE);SELECT DISTINCT CAST((- (NULL)) AS TEXT), (+ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)), (+ (CAST(rt0.c3 AS BLOB))) FROM vt0, rt0 WHERE (((CAST(x'' AS INTEGER))<<(CAST('895207055' AS REAL)))) LIMIT 211045244 OFFSET -1011798034; -- 0ms;
SELECT DISTINCT (((RTRIM(rt0.c4), (('vr') ISNULL), ((vt0.c0)<(vt0.c1))))<=((rt0.c2 COLLATE BINARY, NULL, CAST(rt0.c4 AS BLOB)))) FROM rt0;SELECT SUM(rt0.c3) OVER () FROM vt0 WHERE (((('1918693229' IN ())) IS TRUE)) GROUP BY (~ ((rt0.c4 IN ()))), ((((CAST(rt0.c1 AS REAL))AND(((rt0.c4)>>(rt0.c1)))))AND((+ (rt0.c3)))), COALESCE(DISTINCT ((rt0.c2) IS FALSE), (NOT (rt0.c0)), (vt0.c0 IN (vt0.c0)), ((rt0.c3) NOTNULL)) HAVING (((((vt0.c0) NOTNULL)))>((((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));SELECT DISTINCT ((json_valid(rt0.c0)) NOTNULL) FROM vt0 WHERE ((('-671767705' COLLATE RTRIM) NOT BETWEEN (IFNULL(DISTINCT '#ᤤ', '')) AND (((-769121831)|(0.4182680866209698)))));SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)))<(((rt0.c2) IS TRUE))), (((vt0.c0, ((rt0.c3)+(vt0.c0)), '736091976'))>=((((vt0.c0)==(vt0.c1)), ((((((((vt0.c0)AND(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)))OR('907065114')), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))), CAST((~ (vt0.c1)) AS INTEGER) FROM rt0;SELECT CAST(SUM(rt0.c4) AS REAL), TYPEOF(DISTINCT DATETIME(rt0.c2, rt0.c1, rt0.c3)), 0X56623d38, GROUP_CONCAT(((((rt0.c0)OR(vt0.c1)))AND(rt0.c4)) COLLATE RTRIM), (((rt0.c3 IN (vt0.c1)))<((rt0.c1 IN ()))) FROM vt0, rt0 GROUP BY ((((+ (1879253493))))>=((((rt0.c2)*(rt0.c3))))), ((((((((CAST(rt0.c0 AS INTEGER))AND(((vt0.c0) NOT NULL))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))))AND(CASE x''  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END)))AND((rt0.c0 IN ()))), ((UPPER(DISTINCT vt0.c1))||((rt0.c3 IN (rt0.c1, vt0.c1)))), COALESCE(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END, CASE rt0.c4  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c3 END), ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)))>=(CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END)) HAVING (rt0.c2 COLLATE RTRIM IN (((rt0.c1) IS TRUE)));SELECT ALL ((vt0.c0)/((rt0.c3 IN (rt0.c3)))), TOTAL(((x'')-(rt0.c1))) OVER (), x'4992' COLLATE NOCASE FROM vt0;SELECT DISTINCT vt0.c1 FROM rt0, vt0 ORDER BY ((rt0.c2)AND(((x'') IS TRUE))); -- 1ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (('42558626'))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)>(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))), (CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END IN ()), CASE NULL  WHEN ABS(NULL) THEN ((rt0.c4) ISNULL) WHEN ((0.10206317649079022) IS FALSE) THEN TOTAL_CHANGES() WHEN ((rt0.c3) IS TRUE) THEN UPPER(rt0.c2) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c1)) IN ((NOT (rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT IFNULL((rt0.c1 IN (rt0.c1, rt0.c4)), rt0.c0) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((((rt0.c2))!=((vt0.c1))))AND((((rt0.c3))==((rt0.c1))))))OR(((rt0.c0) ISNULL))) FROM rt0 WHERE (((('jl' COLLATE BINARY))>=((CASE NULL  WHEN '0.7939207894059757' THEN '8ATZD7!H' ELSE x'8d0d' END))));SELECT ((CASE WHEN rt0.c0 THEN rt0.c3 END)>>(((((((((rt0.c4)OR(rt0.c2)))AND(x'')))AND(vt0.c1)))OR(rt0.c1)))) FROM rt0, vt0 GROUP BY LOWER(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))) HAVING ((rt0.c2) IS FALSE) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END) AND (rt0.c1 COLLATE NOCASE)) FROM vt0, rt0 WHERE (((((0.8980694993717405)+(0.3382303246009064))) BETWEEN (CAST(x'' AS INTEGER)) AND (((x'') BETWEEN (x'0d78') AND (x''))))); -- 0ms;
SELECT CAST(((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c4)) AS REAL) FROM rt0 ORDER BY ((((((rt0.c1) NOTNULL))AND(((vt0.c1)/(rt0.c4)))))OR(((rt0.c1)<(rt0.c3))))  NULLS FIRST;SELECT ALL (SUM(rt0.c2) IN ()) FROM rt0 WHERE (NULL); -- 0ms;
SELECT CAST(rt0.c1 AS NUMERIC) FROM rt0, vt0 WHERE (CAST((x'' IN ()) AS REAL)); -- 0ms;
SELECT ALL (NOT (json_extract(rt0.c2, rt0.c0))), ((SUBSTR(rt0.c2, rt0.c4)) NOT BETWEEN (CHANGES()) AND (((vt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c1)))), rt0.c0 FROM vt0 WHERE (x'');SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c1) AS BLOB) FROM vt0 WHERE ((((((((((NOT (0.6951981983102113)))AND(CASE WHEN 0X202c15f THEN x'' WHEN 'QP' THEN x'' WHEN '[T' THEN NULL ELSE '' END)))AND(CASE '-182677908'  WHEN 'H3SV' THEN '-698032260' ELSE -2034312539 END)))OR((~ (x'd9f71009')))))AND(CAST(NULL AS TEXT)))) ORDER BY ((rt0.c0) IS FALSE) DESC  NULLS FIRST, ((((rt0.c4)-(x''))) ISNULL) LIMIT 204923080 OFFSET 478584886;SELECT ALL (((rt0.c2 IN ()))*(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) FROM rt0; -- 0ms;
SELECT ((((vt0.c1)OR(CAST(rt0.c1 AS TEXT))))OR((((rt0.c0, x'', rt0.c3)) BETWEEN ((x'', vt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c3, rt0.c3))))) FROM vt0;SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt0 WHERE (((((-9.02620029E8)LIKE(x'')))>>(((((NULL)OR(x'f63c')))OR(x''))))) LIMIT -350779782 OFFSET -1235578407; -- 0ms;
SELECT ALL ((NULL) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY, LAG(ABS(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4))), CASE WHEN ((rt0.c0)!=(rt0.c3)) THEN CASE WHEN 0.5702309865425818 THEN vt0.c1 END WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) WHEN json_quote(rt0.c3) THEN ABS(DISTINCT vt0.c0) END, ((((((((((vt0.c1)OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)))>(((rt0.c0) IS TRUE)))) OVER (), CASE (vt0.c0 IN ())  WHEN (rt0.c3 IN ()) THEN ((rt0.c0)AND(vt0.c1)) WHEN HEX(rt0.c3) THEN (((rt0.c2))!=((rt0.c4))) WHEN (NOT (vt0.c1)) THEN ((rt0.c1)<=(rt0.c3)) END FROM rt0, vt0 NOT INDEXED WHERE (((((((((((0X6595aef6)OR('-1847689983')))AND(1079902608)))OR(x'')))AND('HJSU~YF&'))) NOT BETWEEN (NULL) AND (((NULL)-(NULL))))); -- 1ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) IS TRUE) FROM rt0 WHERE ((((((((0.3824324684198279, NULL, 0.33887098014327777)) NOT BETWEEN ((NULL, x'e5fa', NULL)) AND ((0.1106375016600204, NULL, NULL))))OR(((x'')LIKE('Ep*')))))OR(((((NULL)OR('|7')))AND(NULL)))));SELECT TRIM(DISTINCT TRIM(rt0.c0)) FROM vt0, rt0 WHERE ((((x'', 'V*WFE', -5.98216872E8)) NOT BETWEEN ((((x'')<>(0Xffffffffbf8fe9b7)), (NOT ('-1970066546')), ((NULL)AND(x'bb6a9fca')))) AND ((((0.6790854710914268)&('-1093588403')), NULL COLLATE RTRIM, 0X1effdb12 COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((((('-52992779')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))OR(8.50462583E8)))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (x'')))), ((((vt0.c0) BETWEEN (rt0.c0) AND ('-296356815')))AND(((((rt0.c1)OR(rt0.c2)))OR('347746414'))))) OVER ( ORDER BY (((vt0.c1)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN '1648185044' WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)) AND ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c4 END))) GROUPS (('761249827')|(-1.70750234E8 COLLATE RTRIM)) PRECEDING EXCLUDE TIES) FROM rt0, vt0 WHERE (((x'') IS TRUE) COLLATE BINARY); -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), ((vt0.c0)||(vt0.c1)) COLLATE NOCASE, rt0.c2 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c1 END THEN MIN(vt0.c0) ELSE (~ (rt0.c4)) END FROM rt0 WHERE (((CASE WHEN x'' THEN 0Xffffffff92040c72 ELSE '761249827' END)<(((0.3032652113514217) NOT BETWEEN ('IKQ''vF|') AND ('-◙8\nMFvo')))));SELECT DISTINCT (((rt0.c1)) BETWEEN (((((rt0.c3))<=((rt0.c4))))) AND ((((rt0.c4) ISNULL)))) FROM vt0 WHERE ('1820536402');SELECT DISTINCT ((((rt0.c2)AND(AVG(rt0.c4))))AND('now')) FROM rt0 WHERE (((((CASE WHEN x'' THEN NULL WHEN '''<Gp*4e\[' THEN x'd092' WHEN NULL THEN x'bb02b20b' ELSE '' END)OR((('919193395') NOTNULL))))OR((~ (NULL))))); -- 0ms;
SELECT DISTINCT ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0))) ISNULL) FROM rt0 WHERE (((0X6595aef6)=(x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((((((rt0.c0 IN ()))OR(x'' COLLATE BINARY)))OR(DATETIME('-498907164', vt0.c1, rt0.c4, vt0.c1, '-359456398', rt0.c3, vt0.c0))))AND(SQLITE_COMPILEOPTION_GET(rt0.c3))))OR((~ (rt0.c0)))) FROM rt0, vt0 WHERE (((((0.6087388722289921)%(0.9937543144510764)))==('1382234029' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT '' FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT ALL ((((((rt0.c4)OR(rt0.c2)))AND(vt0.c1))) IS TRUE) FROM vt0 WHERE (CAST((~ (x'340d')) AS NUMERIC));SELECT CAST((((rt0.c1, rt0.c3, vt0.c1, rt0.c4, vt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, NULL, rt0.c2, vt0.c1)) AND ((rt0.c1, NULL, rt0.c3, vt0.c0, rt0.c1))) AS BLOB), ((((MAX(rt0.c4))AND(((x'6eee') ISNULL))))OR(GROUP_CONCAT(vt0.c1))), CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c1) ISNULL) ELSE ((((((((((((vt0.c1)AND(x'')))AND(rt0.c1)))OR(rt0.c3)))AND(vt0.c0)))OR('')))OR(rt0.c3)) END FROM rt0;SELECT CAST((((vt0.c0, rt0.c2, rt0.c1))=((rt0.c4, 0.20765499540532595, rt0.c4))) AS TEXT), CAST(((rt0.c4)LIKE(rt0.c2)) AS TEXT), ((rt0.c0 IN (rt0.c3, rt0.c1)) IN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) FROM rt0;SELECT ALL ((IFNULL(DISTINCT rt0.c0, vt0.c0))<(((rt0.c2)IS NOT(0.5543002061181311)))) FROM rt0, vt0 WHERE ((- (x''))); -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(((rt0.c3)LIKE(vt0.c0)))))AND(((rt0.c0)>=('J')))) FROM rt0 NOT INDEXED, vt0 WHERE (((((NULL)>(NULL))) NOT BETWEEN (CASE WHEN '1973131502' THEN 883325250 WHEN '[' THEN 1.75298266E8 WHEN '-1361478790' THEN x'' END) AND (CAST(NULL AS TEXT)))); -- 1ms;
SELECT DISTINCT ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))AND(((rt0.c4) IS FALSE))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c4 END)), (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) FROM vt0;SELECT DISTINCT ((rt0.c4 COLLATE NOCASE) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND ((vt0.c0 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE RTRIM)>=(CAST(rt0.c2 AS TEXT))) FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN ((('', 0.6277839192408129, NULL))<((NULL, x'', NULL))) END); -- 0ms;
SELECT DISTINCT '-1927262234' FROM rt0, vt0; -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY SQLITE_COMPILEOPTION_GET(((rt0.c4) NOT NULL))  NULLS LAST), ((~ (0.8673995571625787)) IN ()), (((vt0.c1)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) FROM rt0;SELECT ALL json_insert((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2))), '-1949598473', rt0.c1, NULL, (~ (rt0.c4))), (NOT ((rt0.c3 IN ()))), CASE (rt0.c4 IN ())  WHEN AVG(rt0.c0) THEN rt0.c0 COLLATE NOCASE WHEN ((((rt0.c0)AND(vt0.c1)))OR(vt0.c0)) THEN vt0.c0 WHEN CAST(rt0.c4 AS INTEGER) THEN GROUP_CONCAT(vt0.c0) WHEN (rt0.c2 IN (rt0.c4)) THEN (('')>>(rt0.c4)) WHEN ((rt0.c1)<=(0X7c328e06)) THEN ((vt0.c1)IS(rt0.c2)) ELSE (+ (rt0.c2)) END FROM vt0 WHERE (CASE WHEN ((0.7877253521991278) NOT BETWEEN ('-1081087561') AND ('V.')) THEN CAST(x'5a34' AS BLOB) END);SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE ((- (x'' COLLATE NOCASE))) GROUP BY CASE WHEN rt0.c2 THEN ((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)) ELSE '' COLLATE BINARY END, CAST((rt0.c2 IN (vt0.c0)) AS BLOB), RTRIM(((rt0.c3)||(NULL))); -- 0ms;
SELECT DISTINCT ((((((((rt0.c4)OR(INSTR(rt0.c1, vt0.c0))))AND(IFNULL(DISTINCT rt0.c1, vt0.c1))))OR((((vt0.c1))>=((rt0.c0))))))AND((vt0.c1 IN ()))) FROM rt0; -- 0ms;
SELECT ALL MIN(((rt0.c1)LIKE(rt0.c2))) COLLATE RTRIM, ((UNLIKELY(rt0.c1))LIKE(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))), CAST((vt0.c0 IN ()) AS BLOB) FROM rt0;SELECT AVG((NOT (0.933361172015825))) FROM vt0, rt0; -- 0ms;
SELECT ALL ((rt0.c3)*(((((rt0.c2)AND(vt0.c0)))AND(vt0.c1)))) FROM rt0, vt0 WHERE ((0x1be096c3 IN (-2.71550345E8)) COLLATE BINARY) GROUP BY ((TRIM(rt0.c3))>=((rt0.c2 IN ()))), (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))OR((+ (rt0.c4)))), (((+ (rt0.c4))) NOT NULL) HAVING ((((vt0.c1)AND('o')))>>(0.4302098096716648)); -- 0ms;
SELECT rt0.c2, UPPER(DISTINCT UNLIKELY(rt0.c4)), NULLIF(DISTINCT CASE rt0.c3  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c2)*(0X16f1ba4f))) FROM rt0, vt0 ORDER BY (~ ((rt0.c2 IN ()))) DESC; -- 0ms;
SELECT ((((((((rt0.c3)OR(((rt0.c4) IS FALSE))))OR(CAST(rt0.c2 AS BLOB))))OR(TOTAL(NULL))))AND(CASE WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c3 END)) FROM vt0, rt0 WHERE (TRIM(DISTINCT '-288160932')) ORDER BY CAST((vt0.c0 IN (vt0.c1)) AS BLOB) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)/(rt0.c3)) AS NUMERIC), x'4b1c' COLLATE RTRIM, CAST(((rt0.c1) BETWEEN (-360115624) AND (rt0.c3)) AS BLOB) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT '-182677908' FROM rt0, vt0; -- 0ms;
SELECT ALL (((('') NOT BETWEEN (0Xffffffff8a5cc52a) AND (vt0.c0))) NOT BETWEEN (898463345) AND (((rt0.c4) NOT NULL))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS BLOB))>>(CASE WHEN rt0.c1 THEN rt0.c4 WHEN 5.6953976E7 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END)), (((+ (rt0.c4))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), UPPER(((((rt0.c0)OR(0.5359446455506053)))OR(rt0.c3))) FROM rt0 CROSS JOIN vt0 ON (- (((((((((rt0.c3)AND(vt0.c1)))AND(rt0.c4)))AND(vt0.c1)))OR(rt0.c2)))) WHERE (((('') ISNULL) IN ())); -- 0ms;
SELECT ALL HEX(DISTINCT CAST(rt0.c1 AS REAL)) FROM vt0, rt0 WHERE ((((((NULL)) NOT BETWEEN ((NULL)) AND ((NULL))))%(('518021946' IN ())))); -- 0ms;
SELECT (((rt0.c1)) BETWEEN ((((vt0.c0)<<(rt0.c0)))) AND (((((rt0.c4, rt0.c4, rt0.c1))<=((rt0.c4, rt0.c0, rt0.c1)))))) FROM rt0, vt0 WHERE (CASE -3.50779782E8  WHEN (((x''))<=((0.6820256844660053))) THEN x'' WHEN LIKELIHOOD(0.9449161457956944, 0.17995294927110994) THEN (((NULL)) NOT BETWEEN ((0Xffffffffd3eaee1e)) AND (('-1831364886'))) WHEN (- (x'')) THEN (x'' IN ()) END); -- 0ms;
SELECT ALL ((0Xffffffffe232f189)>=(((vt0.c0)||(vt0.c0)))), ((MAX(0xfffffffffe4d93f8)) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))) AND (MIN(rt0.c2))), ((((vt0.c1)>=(rt0.c1)))<(((rt0.c4)<<(rt0.c0)))) FROM rt0;SELECT CAST(CAST(rt0.c0 AS TEXT) AS TEXT) FROM vt0, rt0; -- 0ms;
SELECT MIN((+ (rt0.c3))) FROM vt0, rt0; -- 0ms;
SELECT ALL (((((((((rt0.c0 IN (rt0.c3, vt0.c0)))AND(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)))))OR((('-1182012034')<(rt0.c3)))))OR((~ (rt0.c0)))))OR(((rt0.c3)IS NOT(rt0.c0)))) FROM vt0 WHERE ((- ((('') BETWEEN ('fq') AND (NULL)))));SELECT DISTINCT (((((0.12064010389069679 IN ()))OR((rt0.c0 IN (rt0.c3)))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) FROM rt0;SELECT ((((((rt0.c3)OR(rt0.c0)))OR(0x60f222ee)))|(((((((((rt0.c3)AND(vt0.c1)))OR(vt0.c1)))OR(0.5630594630007267)))AND(rt0.c4)))) FROM rt0, vt0 WHERE (((((x'289e' IN ()), (('') NOT BETWEEN (NULL) AND (-170750234)), ((-1949598473)&(x''))))<=((((NULL)LIKE(x'')), CAST(NULL AS INTEGER), ((('LELF3[KFX'))>((''))))))); -- 0ms;
SELECT DISTINCT -4.35198537E8 FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c4)AND(vt0.c1)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)))OR(NULL COLLATE NOCASE)))AND((rt0.c0 IN (rt0.c2)))) FROM vt0 GROUP BY CASE CAST(rt0.c1 AS INTEGER)  WHEN '767714313' THEN ((rt0.c4)IS NOT(rt0.c2)) END HAVING ((UNLIKELY(DISTINCT rt0.c0)) BETWEEN ((+ (vt0.c0))) AND (((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c1)))) ORDER BY ((((vt0.c1) IS FALSE))IS NOT(CASE WHEN vt0.c1 THEN rt0.c3 END))  NULLS LAST;SELECT DISTINCT LIKE(rt0.c4 COLLATE BINARY, (~ (rt0.c3)), '-') FROM rt0; -- 0ms;
SELECT ALL '-2121821354' FROM rt0 WHERE (CAST(CASE 1309895258  WHEN 0.26210491177106654 THEN 0.1244697934976855 WHEN 0X6d314734 THEN x'' WHEN 0.992106265966102 THEN x'' END AS TEXT)); -- 0ms;
SELECT ALL SUM(((vt0.c0)IS(rt0.c4))) FROM rt0, vt0; -- 0ms;
SELECT CUME_DIST() OVER () FROM vt0 WHERE (((GLOB('1569435202', NULL)) BETWEEN ((NULL IN (-2.111396399E9))) AND ((+ (NULL))))); -- 0ms;
SELECT DISTINCT CASE (((rt0.c1))<=((vt0.c1)))  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)>>(x'')) WHEN ((5.88490471E8)+(rt0.c2)) THEN (((vt0.c1, rt0.c3, vt0.c1))>=(('-1338377811', vt0.c0, rt0.c1))) WHEN rt0.c4 THEN rt0.c1 END, (+ (((vt0.c1)+(rt0.c4)))), MIN((((rt0.c2, rt0.c0, vt0.c1))<=((rt0.c1, vt0.c1, rt0.c4)))) FROM rt0, vt0; -- 0ms;
SELECT (((ABS(rt0.c4)))<=((((vt0.c1) IS FALSE)))) FROM rt0;SELECT ALL (~ ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((''))))) FROM vt0, rt0 WHERE (CAST(NULL AS NUMERIC) COLLATE BINARY); -- 0ms;
SELECT NTILE(((CAST(vt0.c1 AS INTEGER)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.c0 COLLATE RTRIM))) OVER () FROM vt0 WHERE (json(LTRIM(NULL))); -- 0ms;
SELECT ALL ((((CAST(rt0.c2 AS REAL))OR(((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c0)))))AND(rt0.c2 COLLATE NOCASE)), -1229268070, ((AVG(vt0.c1)) BETWEEN ((((rt0.c3))>((rt0.c4)))) AND (vt0.c0)), CUME_DIST() OVER (), (CAST(vt0.c1 AS NUMERIC) IN ()) FROM rt0, vt0 WHERE ((((((((((('-271550345')OR(x'')))OR('1543074905')))AND(x'')))OR(0.9125652587822454)))IS NOT(CAST(0xffffffffe58be1c5 AS INTEGER)))); -- 3ms;
SELECT DENSE_RANK() OVER ( ORDER BY (NOT (IFNULL(rt0.c4, rt0.c3)))  NULLS LAST, ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c2)IS NOT(rt0.c4))) AND (rt0.c0 COLLATE RTRIM)) DESC, ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)=(vt0.c1))) AND (CAST(vt0.c0 AS INTEGER)))  NULLS LAST) FROM vt0 WHERE (((((((((UNLIKELY(0.7426947578237113))AND(((((x'')OR('MQiI0sa')))AND(-2090433487)))))OR((x'9a8b' IN ()))))AND(7.11356774E8)))OR(CAST('-1610050643' AS REAL))));SELECT ALL CASE WHEN LOWER(rt0.c1) THEN vt0.c0 COLLATE BINARY WHEN ((x'00dc6799') NOTNULL) THEN AVG(vt0.c0) WHEN rtreenode(rt0.c2, rt0.c2) THEN ((rt0.c2)|(rt0.c0)) ELSE (((vt0.c0, rt0.c3, vt0.c1))==((rt0.c4, vt0.c0, x''))) END FROM rt0 WHERE ((NOT (TRIM(x'fe16'))));SELECT DISTINCT ((((- (rt0.c1)), ((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)), ((vt0.c1)==(rt0.c3))))==((((rt0.c2) IS FALSE), CAST(vt0.c1 AS BLOB), (- (rt0.c3))))) FROM rt0, vt0 WHERE (((CASE '-241574999'  WHEN 's8' THEN '-123854145' END)>((((('-1562507664')AND('761249827')))AND(NULL))))); -- 0ms;
SELECT DISTINCT (((((rt0.c1))=((rt0.c1)))) NOT BETWEEN ((rt0.c0 IN ())) AND (((vt0.c1) ISNULL))), COUNT(*), (- (((rt0.c0) ISNULL))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt0, vt0; -- 0ms;
SELECT NULL, (~ (rt0.c0)), SQLITE_COMPILEOPTION_GET(vt0.c0 COLLATE BINARY) FROM vt0 WHERE ((((((1704308470)/('-1107690241'))))>=((((((x'')AND(NULL)))OR('0.932254402011776')))))) GROUP BY ((((CASE vt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)OR(CAST(rt0.c0 AS REAL))))OR(rt0.c1)) HAVING (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))%(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))));SELECT ((SQLITE_VERSION())*(((vt0.c1)>>(rt0.c4)))) FROM vt0, rt0 GROUP BY ((((TRIM(vt0.c0))OR((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))))AND((850462583 IN ())));SELECT DISTINCT ((((vt0.c1)AND(rt0.c4)))AND(rt0.c2)) COLLATE NOCASE FROM vt0, rt0 WHERE ((((NOT (0.36115199530990827)))IS(CAST(0.2657287305988906 AS TEXT)))); -- 1ms;
SELECT ((CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c3 END) IS FALSE) FROM rt0, vt0 WHERE (JULIANDAY(-1.589991638E9, NULL, x'', NULL, NULL) COLLATE RTRIM) LIMIT -350779782; -- 0ms;
SELECT ALL SUM(rt0.c4) FROM rt0, vt0 WHERE ((((((((((((((((('l7jCnGrd汭')AND('-1093588403')))OR(x'857f')))AND(NULL)))OR('-660274915')))OR(CAST(NULL AS BLOB))))OR(((x'3cebd75c')<=('1894703687')))))OR(CAST(NULL AS NUMERIC))))OR((((((((('-2034312539')OR(0.7416223730645234)))AND('')))OR('-1963428984')))AND(0.1625266709734492))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS TRUE)) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c4)AND(rt0.c0)))), AVG(rt0.c4) OVER (), ((((rt0.c2) IS FALSE)) ISNULL) FROM vt0;SELECT CAST(((rt0.c3) ISNULL) AS TEXT), rt0.c0, (- (rt0.c3)) FROM rt0 WHERE ((- (((x'4c34') IS TRUE)))) LIMIT -456453843; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c2 COLLATE BINARY THEN x'' WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c2)>>(rt0.c4)) WHEN rt0.c2 COLLATE BINARY THEN ((vt0.c1)<=(rt0.c4)) WHEN CASE WHEN rt0.c2 THEN rt0.c4 END THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) WHEN rt0.c0 THEN 1304325675 END FROM vt0;SELECT ALL CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c1))) THEN ((rt0.c2) IS FALSE) WHEN ((vt0.c1) NOT NULL) THEN MAX(rt0.c2) WHEN (((rt0.c2))<=((vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END FROM rt0;SELECT DISTINCT (+ ((+ (rt0.c2)))), CAST(vt0.c1 AS BLOB), SUM(((vt0.c0) NOTNULL)) OVER (), vt0.c1, CASE 0.5773281709447124  WHEN load_extension(rt0.c1) THEN CASE WHEN rt0.c0 THEN vt0.c0 END ELSE rt0.c1 COLLATE NOCASE END, (((((rt0.c2))>((vt0.c1))))%(vt0.c0 COLLATE BINARY)), (((rt0.c1)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL))))) AND ((CAST(vt0.c1 AS TEXT)))) FROM vt0 WHERE (((((LIKELY(NULL))AND((0.6619142984743446 IN ('0%', -2.96356815E8, 0x7913efa0)))))OR((('0.26674529964555804')-(NULL)))));SELECT DISTINCT ((((rt0.c2)OR(rt0.c2))) NOT BETWEEN (TOTAL(rt0.c4)) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)))), DATE(((rt0.c1) IS FALSE), (((rt0.c1, vt0.c1, rt0.c4))==((0x43924a36, rt0.c2, vt0.c0))), rt0.c0), (CASE rt0.c1  WHEN vt0.c0 THEN NULL WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c3 END IN ()) FROM vt0 WHERE (((((NULL) BETWEEN (NULL) AND (0.2117137607796875))) NOT BETWEEN (0.2719059515985278 COLLATE BINARY) AND (((((NULL)AND(NULL)))OR(x'')))));SELECT DISTINCT ((((((rt0.c1)AND(rt0.c3)))OR(rt0.c2))) ISNULL) FROM vt0 WHERE (UPPER(NULL)) GROUP BY ((((((rt0.c3)OR(vt0.c0)))OR(rt0.c1)))|(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))) HAVING CAST((rt0.c1 IN ()) AS INTEGER) LIMIT -1725003672 OFFSET 1334671383;SELECT DISTINCT CAST(rt0.c3 COLLATE NOCASE AS REAL) FROM rt0 WHERE (load_extension(0.6048984013989777 COLLATE BINARY, (('') NOT BETWEEN (NULL) AND (0x77fc094)))) GROUP BY (((241790694))<=((vt0.c0))), ((CASE rt0.c4  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c4 END)+(TYPEOF(vt0.c1))), CASE CAST(rt0.c0 AS REAL)  WHEN (+ (rt0.c2)) THEN rt0.c4 ELSE ((((((((rt0.c4)OR(rt0.c1)))OR(1999623542)))AND(rt0.c1)))OR(rt0.c3)) END LIMIT 465957460 OFFSET 2139826153;SELECT ALL ((((rt0.c4)AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(UNLIKELY(rt0.c0))) FROM rt0, vt0 NOT INDEXED ORDER BY rt0.c0 DESC; -- 0ms;
SELECT CASE CAST(rt0.c1 AS TEXT)  WHEN (vt0.c0 IN ()) THEN TOTAL(rt0.c4) END, DENSE_RANK() OVER (), MAX('479040232') FROM rt0; -- 4ms;
SELECT DISTINCT (((rt0.c2 IN ())) BETWEEN (((rt0.c0)||(rt0.c4))) AND (((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM rt0 WHERE (((((((((('R+l{s?')AND(NULL)))OR(NULL)))OR('-67922409')))AND(0.6313953233442393)) IN ((((NULL, '-1052896876', 0.009162817967077519))>(('>I', 0X7ad74c45, '356562108')))))) LIMIT -1081394069;SELECT DISTINCT '-2090433487' FROM vt0; -- 0ms;
SELECT DISTINCT CASE SUM(rt0.c1)  WHEN ((rt0.c4) NOT BETWEEN (0.5980032693521872) AND (rt0.c1)) THEN (rt0.c2 IN ()) WHEN rt0.c1 THEN (((vt0.c0))!=((vt0.c0))) WHEN MAX(rt0.c2) THEN ((rt0.c3) ISNULL) END, 0.7180863301814195, rt0.c1 FROM rt0 WHERE ((+ (((0X4dbe6e2b)OR('-1562507664'))))) GROUP BY ABS(DISTINCT vt0.c0) COLLATE BINARY, 'NO''', CAST(((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c1)) AS BLOB) HAVING (('+}') NOT BETWEEN (rt0.c2) AND (CASE WHEN rt0.c1 THEN rt0.c2 END));SELECT ALL CUME_DIST() OVER (), CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)) AS NUMERIC), ((((vt0.c0)>>(rt0.c2))) NOT BETWEEN (json_extract(rt0.c0, vt0.c1)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'6cdd'))))), (((((0Xffffffffad0f5436)-(rt0.c0))))<((((vt0.c1) NOT NULL)))), vt0.c1, ((((((rt0.c4)<(rt0.c1)))AND(CAST(vt0.c0 AS BLOB))))OR(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)), ((((((rt0.c2)OR(rt0.c3)))OR(vt0.c1)))AND((((vt0.c0))==(('-402234284'))))) FROM rt0, vt0;SELECT CAST(CASE rt0.c0  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END AS REAL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)||(rt0.c0))) IS FALSE) FROM rt0;SELECT DISTINCT ((((rt0.c1)-(vt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN 855904431 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE x'2801' END) AND (vt0.c0)), ((CAST(rt0.c2 AS TEXT))+(UPPER(rt0.c3))), ((~ (vt0.c1)) IN ()) FROM rt0 WHERE ((((((x'fe51'))<=(('-241574999')))) ISNULL));SELECT ALL (((0Xffffffffe60f65b7 COLLATE NOCASE))==((808831918))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT COALESCE(CAST(rt0.c3 AS NUMERIC), CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c1 END, x'd9e1', ((((((((vt0.c0)OR(vt0.c1)))OR(rt0.c0)))AND('-1887456239')))AND(rt0.c2))), ((CASE x''  WHEN rt0.c2 THEN vt0.c0 END)-(SUM(rt0.c0))), GROUP_CONCAT(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN NULL WHEN vt0.c0 THEN rt0.c3 END) FROM vt0;SELECT ALL (NOT ((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c4))))) FROM vt0, rt0; -- 0ms;
SELECT x'442b', (((((((((NOT (rt0.c3)))AND(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)))))OR((('1seconds\r	z}z)Ku')IS(rt0.c4)))))OR((((0.5416512890975481))=((rt0.c1))))))OR(LIKELIHOOD(DISTINCT rt0.c3, 0.08985005001219593))), TOTAL(((vt0.c0)OR(rt0.c2))) FROM rt0 WHERE (((((NULL)/(0X2f716503)))OR(NULL)));SELECT ALL TOTAL((~ (rt0.c1)) COLLATE BINARY) OVER (), ((((rt0.c4) NOT NULL)) IS TRUE), (((vt0.c1 IN ('81358885'))) BETWEEN ((- (rt0.c2))) AND (((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(rt0.c1)))) FROM rt0 WHERE (((((((((((0xffffffffca331c83)OR(0xffffffffa13aa72a)))AND(0x285de8c2)))OR(0xffffffff8be65894)))AND(x'')))&(-2.017320036E9)));SELECT ALL (((rt0.c4, rt0.c4, vt0.c0)) BETWEEN ((rt0.c1, vt0.c1, rt0.c4)) AND ((rt0.c2, rt0.c0, vt0.c1))) COLLATE NOCASE FROM rt0, vt0 WHERE (((x'' COLLATE BINARY) NOT BETWEEN ('' COLLATE BINARY) AND (((('V?kVL.+G\r', 0.5489470065382581, '1537301144')) BETWEEN ((NULL, NULL, 0Xffffffffac469c9d)) AND (('-421380859', '', NULL)))))) LIMIT -806984604 OFFSET -17903943; -- 0ms;
SELECT LEAD((NOT ((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0))))), 0.9583438288111924, rt0.c2) OVER ( PARTITION BY ((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c3 COLLATE BINARY)), (- (CASE '1889630371'  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c4 ELSE NULL END))), (((((((rt0.c1))<>((rt0.c3))))OR(SUM(rt0.c3))))OR((NOT (rt0.c3)))), ((((CASE WHEN vt0.c1 THEN rt0.c1 END)AND(((rt0.c2)LIKE(rt0.c1)))))AND((- (rt0.c1)))) FROM rt0 WHERE (((((UPPER(DISTINCT x''))OR(((0.6571636581717191)=(0.6213839546467694)))))AND(CASE NULL  WHEN x'' THEN 0.5739713977836545 END)));SELECT DISTINCT '' FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((NULL)OR(((rt0.c1)IS NOT(NULL)))))OR(((vt0.c1)>(vt0.c0)))))AND((vt0.c0 IN ()))))OR(((vt0.c1) IS FALSE))), (((NOT (rt0.c3))) BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c1)))), GROUP_CONCAT(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c1 ELSE '' END COLLATE RTRIM) OVER ( PARTITION BY CASE WHEN UNICODE(rt0.c4) THEN rt0.c1 WHEN rtreenode(rt0.c4, rt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)) THEN (('-1923300831')<=(rt0.c3)) ELSE vt0.c0 COLLATE NOCASE END, (((rt0.c0)) NOT BETWEEN ((((rt0.c3)==(rt0.c0)))) AND (((((rt0.c2)) BETWEEN ((0.28539176396939725)) AND ((rt0.c0))))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT DATETIME(HEX(rt0.c0), ((NULL) NOT NULL), rt0.c1 COLLATE BINARY, COUNT(*), ((rt0.c2)>(0.84489884413591))) FROM vt0, rt0 WHERE (x'') ORDER BY ((((((((CASE WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END)OR(CAST(NULL AS TEXT))))OR(CAST(0.04501284075419565 AS REAL))))AND(((vt0.c0) IS TRUE))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS FIRST; -- 0ms;
SELECT ((((x'5b42') BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL) FROM vt0, rt0 WHERE ((+ ((((x'ceba', 0.541269549177673, NULL)) NOT BETWEEN ((NULL, '', '-1240072277')) AND ((0X2535d89b, NULL, NULL)))))) ORDER BY x'', ((CASE rt0.c4  WHEN rt0.c2 THEN 0.8748444077128311 ELSE rt0.c1 END)IS NOT(((rt0.c1)%(rt0.c4))))  NULLS FIRST LIMIT -1093588403 OFFSET -172534998; -- 1ms;
SELECT DISTINCT CAST((rt0.c0 IN (vt0.c1, rt0.c0)) AS TEXT) FROM rt0;SELECT DISTINCT COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3)||(rt0.c2)) IN ()) FROM vt0, rt0 NOT INDEXED ORDER BY (~ ((vt0.c0 IN (rt0.c1)))) ASC, CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 END  WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c0) IS TRUE) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt0.c1)) WHEN ((rt0.c1)>(vt0.c0)) THEN x'' ELSE ((rt0.c3) IS TRUE) END, LIKELIHOOD(((rt0.c3) NOT NULL), 0.42413680001779286), (- (x'')) FROM rt0;SELECT DISTINCT ((((((rt0.c4)AND(vt0.c0)))OR(rt0.c4))) ISNULL) FROM rt0, vt0 LIMIT -961658907; -- 2ms;
SELECT DISTINCT SUM(((NULL)<<(rt0.c3))), ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL), (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 END, (+ (vt0.c0)), ((rt0.c0)==(vt0.c0))))>=((((rt0.c3) NOT BETWEEN (rt0.c4) AND (NULL)), CASE WHEN rt0.c4 THEN rt0.c4 END, vt0.c1 COLLATE RTRIM))) FROM vt0, rt0 WHERE (x'') GROUP BY (((rt0.c3 COLLATE RTRIM, CASE WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c0)/(vt0.c1)), CAST(vt0.c1 AS TEXT), rt0.c0))<=((((rt0.c4) IS FALSE), CAST(vt0.c0 AS BLOB), LIKELY(vt0.c1), IFNULL(DISTINCT vt0.c0, vt0.c1), rt0.c0))) HAVING CASE MAX(rt0.c3)  WHEN CAST(x'' AS BLOB) THEN (+ (rt0.c0)) WHEN (((rt0.c0, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c4, vt0.c1, rt0.c2)) AND ((rt0.c4, rt0.c0, vt0.c0))) THEN CAST(rt0.c4 AS TEXT) WHEN ((rt0.c3)>>(rt0.c3)) THEN vt0.c1 COLLATE RTRIM ELSE ((rt0.c2) IS FALSE) END; -- 0ms;
SELECT DISTINCT CAST(SUM(vt0.c0) AS BLOB) FROM vt0 ORDER BY CASE ((rt0.c0)AND(vt0.c0))  WHEN DATETIME(rt0.c4, rt0.c1, vt0.c0) THEN CAST(vt0.c1 AS INTEGER) ELSE json_type(rt0.c2) END DESC  NULLS FIRST;SELECT (((rt0.c2)) BETWEEN ((json_remove(rt0.c0, rt0.c2, rt0.c3, rt0.c3, vt0.c0, rt0.c0))) AND ((((rt0.c0)>=(rt0.c4))))), (+ (((rt0.c4) BETWEEN (rt0.c3) AND (NULL)))), vt0.c0 FROM vt0, rt0 WHERE (((((NULL) NOT BETWEEN ('Ey97R,-l') AND (NULL)))/('F\nqSClC'))); -- 1ms;
SELECT (rt0.c3 IN (rt0.c4, rt0.c2)) COLLATE BINARY FROM rt0, vt0 WHERE (CHAR(((x'') BETWEEN ('DR') AND (-1.081087561E9)))); -- 0ms;
SELECT (~ (AVG(rt0.c1))) FROM vt0;SELECT ALL ((vt0.c1)/(((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c2 AS REAL) THEN TOTAL(rt0.c0) WHEN CASE WHEN vt0.c1 THEN rt0.c4 END THEN (vt0.c1 IN (rt0.c3, rt0.c1)) WHEN rt0.c4 THEN rt0.c1 COLLATE BINARY END FROM rt0;SELECT ALL SUM(((rt0.c4)IS(rt0.c1))) FROM rt0, vt0 GROUP BY (((((((((((((vt0.c0)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)) IN ()); -- 0ms;
SELECT DISTINCT 0xffffffffc016dae9, CASE (~ (rt0.c1))  WHEN NULLIF(DISTINCT rt0.c3, rt0.c0) THEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END, ((NULL)OR(((rt0.c2) IS FALSE))) FROM vt0, rt0 WHERE (((((('pi') NOT BETWEEN ('5') AND (x'')), (('0.28539176396939725') BETWEEN (x'') AND (x'fdce')), (((-7.94803196E8))>=(('㖧K')))))<(((('t&U[+/a~(')>=(0.5292242170811082)), CAST(x'72a2d86d5321' AS INTEGER), ((NULL)||('%jqd')))))) ORDER BY rt0.c1 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt0.c4))<((vt0.c1))) COLLATE RTRIM, ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(0X71513d92)))OR(rt0.c4))) NOTNULL), (+ (((rt0.c4)GLOB(vt0.c0)))) FROM rt0 WHERE (CAST(NULL AS INTEGER));SELECT ALL ROW_NUMBER() OVER () FROM vt0, rt0 WHERE (CASE (- ('-1757057692'))  WHEN (NULL IN ()) THEN ((x'') NOT BETWEEN (x'') AND (NULL)) WHEN ((NULL) BETWEEN (x'') AND (NULL)) THEN (((-463404958, '104083595', NULL))>((NULL, NULL, -296356815))) WHEN (NOT ('-842522958')) THEN (((NULL)) NOT BETWEEN ((x'')) AND ((-377457948))) END) LIMIT -1191460069; -- 1ms;
SELECT ((CASE WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (((((((((((((0.23679084576392495)OR(rt0.c4)))AND(vt0.c1)))OR(rt0.c3)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1))) AND (vt0.c1 COLLATE NOCASE)) FROM rt0, vt0; -- 0ms;
