-- Time: 2024/06/07 17:54:40
-- Database: database15
-- Database version: 3.40.0
-- seed value: 1144487815
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT , c1 BLOB CHECK ( c0 COLLATE RTRIM) NOT NULL , c2 BLOB ); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (0X5a525249); -- 0ms;
INSERT OR FAIL INTO t0(c2, c1, c0) VALUES ('1515344457', 0x5a525249, NULL), (x'c247', x'', -1770510507), (NULL, x'', '674347350'); -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(0.8208312164427035) WHERE t0.c0; -- 1ms;
UPDATE OR ABORT t0 SET c2=NULL; -- 0ms;
INSERT OR REPLACE INTO t0(c1, c0) VALUES (NULL, x'a61a'); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES ('-2087226400', '399399725'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'', '-1770510507', x'ad83'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c0) VALUES ('2011068848', NULL); -- 1ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO t0(c1, c2, c0) VALUES ('', x'', (('')-(CAST('!aDJStOlF' AS TEXT)))); -- 0ms;
INSERT OR FAIL INTO t0(c2, c0, c1) VALUES (0.20856954339887857, '', ''), ('-1128014550', 0.20856954339887857, 0.2249690444919593), (NULL, x'dd9b', '\n^'); -- 0ms;
INSERT OR ABORT INTO t0(c2, c1) VALUES ('-492459801', 'sk柳bV{g'); -- 1ms;
REINDEX; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE t0 SET (c2)=(0.09313034667564213); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'', 0.6766979473492349, 0.3472253215615203); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.7618030850725447), (0Xffffffffe7c50ce2), (x''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 3ms;
CREATE INDEX IF NOT EXISTS i67 ON t0(CAST(((c1)>=(c2)) AS BLOB) COLLATE RTRIM DESC,'km\r&[CYVl' COLLATE RTRIM,((('-406516510' COLLATE BINARY))!=((((c2) BETWEEN (c0) AND (c1))))) COLLATE RTRIM) WHERE json_insert(((c1)LIKE(c1)), (NOT (c1)), (~ (c1))); -- 5ms;
CREATE UNIQUE INDEX i67 ON t0((NOT (c1)) COLLATE BINARY COLLATE RTRIM ASC,(((((c2)) BETWEEN ((c2)) AND ((c0))))==(((c2) ISNULL))) COLLATE RTRIM DESC,((((((((NULL)AND(CAST(x'572e' AS NUMERIC))))AND(CAST(c0 AS INTEGER))))OR(c2 COLLATE NOCASE)))OR(((c2)%(c0)))) COLLATE RTRIM DESC) WHERE c0; -- 1ms;
CREATE INDEX i26 ON t0((+ (((c1) NOT BETWEEN (NULL) AND (NULL)))) COLLATE BINARY,((((c0) NOT BETWEEN (c1) AND (c0))) BETWEEN (c2 COLLATE BINARY) AND ((~ (c1)))),(~ (((c0) NOT BETWEEN (c1) AND (c0)))) COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES ('5MEZ?y'), (NULL), (0.15633762308054266); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (0.29567321646321676); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR ABORT INTO t0(c1, c0, c2) VALUES (0.7077900892467677, NULL, 0.3851034999270758); -- 0ms;
INSERT OR FAIL INTO t0(c2) VALUES ('go7D}sk躬'); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES ('do', 0xffffffffe4fd337d); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c32; -- 1ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c4, c0, c1, c3) VALUES (x'', 0.7013079326443363, x'', NULL, ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=674347350 unordered noskipscan'); -- 0ms;
UPDATE OR ABORT rt0 SET c1=NULL; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
PRAGMA temp.wal_autocheckpoint = 6115755359095229538; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4) VALUES (NULL, -996544055); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, 0.15633762308054266, 0.3982152572398191), ('-492459801', 'TRUE', NULL), (x'', x'', 0X70667054); -- 0ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE CAST(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) AS INTEGER); -- 0ms;
END; -- 0ms;
UPDATE OR ABORT t0 SET (c2, c2)=(x'', -810832647) WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c1)))OR(t0.c2)) IN (CAST(t0.c0 AS NUMERIC))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE t0 SET c2=1.88576162E9, c1=NULL WHERE (((LIKELY(t0.c2)))!=(((t0.c0 IN (t0.c2))))); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i32 ON t0((((CAST(c0 AS INTEGER), c1 COLLATE BINARY, c1))<=((c1, (c1 IN (c0)), c2 COLLATE BINARY))),((((((((((c1) NOT NULL))AND(CASE ''  WHEN c2 THEN c2 ELSE c2 END)))AND(((((c0)AND(c2)))AND(c0)))))OR(c2 COLLATE RTRIM)))OR((NOT (c0)))) COLLATE RTRIM,x'd18a' COLLATE NOCASE); -- 0ms;
INSERT OR ROLLBACK INTO t0(c2) VALUES ('-1420807104'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('!蜡*䓊!', 0.7284298770781329, '0.7013079326443363'); -- 0ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR ROLLBACK t0 SET (c1, c2, c1)=(NULL, x'', x''); -- 0ms;
INSERT OR REPLACE INTO t0(c2) VALUES (0.20856954339887857), (1.153956297E9), ('9'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c2) VALUES (0.030738911362456545), ('-492459801'), ('-492459801'); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (x'c0e6afb0'); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL), (-8.10832647E8), ('2055770695'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (x''), (''); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (- (((t0.c2)-(t0.c0)))) FROM t0 WHERE (((((('', x'43992451', '171894970')) BETWEEN ((x'', '', 0xffffffffc499f1c9)) AND (('0.7284298770781329', '', x'')))) NOT NULL)); -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT AVG(((t0.c2)>(t0.c2))) OVER (), CASE ((t0.c1) BETWEEN (t0.c1) AND (t0.c2))  WHEN LIKE(t0.c0, t0.c0, '0') THEN t0.c2 COLLATE NOCASE ELSE CAST(t0.c1 AS REAL) END, MAX(((t0.c2)OR(t0.c2)) COLLATE BINARY) FROM t0; -- 1ms;
SELECT (((t0.c2)>(t0.c0)) IN ()) FROM t0 WHERE (x'eb30f4bb'); -- 0ms;
SELECT DISTINCT CASE WHEN (~ (t0.c1)) THEN (+ (t0.c1)) WHEN 'pF1G' THEN ((t0.c1) ISNULL) WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) THEN t0.c1 COLLATE NOCASE ELSE ((t0.c0) IS FALSE) END FROM t0 WHERE (UPPER(NULL COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 ORDER BY (((t0.c1, t0.c2, t0.c2, t0.c1, t0.c0)) BETWEEN (((((t0.c2))>((t0.c2))), CASE t0.c2  WHEN t0.c0 THEN t0.c2 END, x'4eaf' COLLATE BINARY, t0.c2 COLLATE BINARY, ((((t0.c0)OR(t0.c1)))OR('앛7')))) AND ((UNLIKELY(t0.c0), CASE WHEN t0.c1 THEN t0.c0 END, ((NULL)AND(t0.c1)), t0.c0, ((t0.c1) NOT NULL)))) DESC  NULLS LAST LIMIT 558175382; -- 0ms;
SELECT ALL NTH_VALUE((((~ (t0.c2)))AND(((t0.c0) ISNULL))), LIKE((+ (t0.c2)), (((t0.c1, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c0, t0.c0, t0.c2))))) OVER ( GROUPS ((t0.c1 COLLATE BINARY) IS TRUE) PRECEDING), -1193782762, ((ROUND(t0.c0, 0xffffffffe47c1188))IS(AVG(t0.c0))) FROM t0;SELECT DISTINCT ((t0.c2 COLLATE RTRIM)<<((t0.c1 IN (t0.c0)))) FROM t0 WHERE ((~ (((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((COUNT(*)) IS FALSE), ((t0.c0 COLLATE NOCASE) ISNULL), 0.6659933664474393 FROM t0 WHERE ((((('757245113') BETWEEN ('') AND (0.3136630967219264)))IS NOT(((x'12d9') BETWEEN ('306712768') AND (NULL))))); -- 1ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT t0.c0, (- (0Xffffffffab503440 COLLATE NOCASE)), (~ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END)) FROM t0 WHERE (CAST(((x'2a44') NOT BETWEEN (x'acc0') AND (x'')) AS NUMERIC)); -- 1ms;
SELECT (((t0.c1)) BETWEEN ((((t0.c0) IS FALSE))) AND (((t0.c0 IN ())))) FROM t0; -- 0ms;
SELECT ALL ((((t0.c2)<<(t0.c1)))-('0.030738911362456545')), ((((LAST_INSERT_ROWID())AND(MAX(t0.c0))))AND(CAST(t0.c0 AS TEXT))), ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))&(CASE WHEN t0.c1 THEN t0.c0 END)) FROM t0 WHERE (((((NULL) NOT BETWEEN (x'') AND (670965513)))>=(LIKE(x'', '-321031574', '#')))); -- 0ms;
SELECT DISTINCT (((('1106-1847T351T3604199442996694644T957 1468:') NOT BETWEEN (NULL) AND (t0.c2))) IS FALSE) FROM t0 WHERE (CAST((~ ('')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2 COLLATE NOCASE, 1709492412, TOTAL(t0.c2))) AND ((t0.c0, t0.c0, (t0.c1 IN ())))) FROM t0 WHERE (((((((((((NULL)*(x'00c9')))AND(((((x'')OR(NULL)))AND(NULL)))))AND(NULL COLLATE BINARY)))OR((('5MEZ?y') NOT BETWEEN (0.8885425003894277) AND ('-1770510507')))))OR((((NULL))==(('-302365494')))))); -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS REAL) FROM t0; -- 0ms;
SELECT ((((((t0.c0)AND(t0.c1)))OR(t0.c0))) IS TRUE) FROM t0 WHERE ((NOT (0.5524983006719392))); -- 0ms;
SELECT COUNT(*) OVER () FROM t0 WHERE (TRIM(DISTINCT 6.11819191E8)); -- 0ms;
SELECT ((((t0.c0) NOT NULL))>>(LIKELIHOOD(t0.c0, 0.9549105288276599))) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c2 COLLATE NOCASE)AND(((t0.c2) NOT NULL))) FROM t0 WHERE ((((((((((('')IS NOT(NULL)))OR((('\QH牪')<>(0.1916866389284304)))))AND(('348185514' IN ('\QH牪', x'b9a6')))))AND((((0.2249690444919593, '鳺-43F', 0.7684134944061441)) BETWEEN ((NULL, x'df2c', x'')) AND (('5-', 0X73e1d2f1, NULL))))))OR(((NULL) NOT BETWEEN (x'') AND (''))))); -- 0ms;
SELECT DISTINCT (((- (0.3297983085162651)))%(((((t0.c0)AND(t0.c1)))OR('171894970')))) FROM t0 WHERE ((((0.18097303717325375 IN (x'2f4e'))) IS TRUE)); -- 0ms;
SELECT ALL SUM(TRIM(DISTINCT t0.c2)) OVER (), (((((t0.c2)AND(t0.c1)))OR(t0.c0)) IN ()), COUNT(t0.c0) OVER () FROM t0 WHERE ((((((((('40027723')OR(1518416734)))AND(0X400aa10d)))AND((((0Xffffffffce92ef4b))==((NULL))))))AND(STRFTIME(0x14c0e3aa, 0.6093359380145337, x'')))); -- 0ms;
SELECT DISTINCT CASE (NOT (t0.c0))  WHEN CAST(t0.c1 AS BLOB) THEN t0.c1 END FROM t0 WHERE (((((NULL) NOT NULL)) NOT NULL)); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT (t0.c2 IN (MAX(t0.c1))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c1, ((((((t0.c0)AND(t0.c1)))AND(t0.c2))) IS TRUE), ((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))))>=((t0.c2))) FROM t0 WHERE (NULLIF(('0.3472253215615203' IN ('-192497860')), ((-1.770510507E9) IS FALSE))); -- 0ms;
SELECT t0.c2 FROM t0 WHERE ((((('q]❕}~')GLOB('-1615781579')))OR((('1106-1847T351T3604199442996694644T957 1468:') NOT BETWEEN (6.11819191E8) AND (-2010512575))))); -- 0ms;
SELECT CASE -302365494  WHEN CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN '0.5524983006719392' WHEN t0.c1 THEN '-688546566' END THEN (('9')||(t0.c2)) ELSE (t0.c2 IN ()) END FROM t0 WHERE ((((NOT (-321031574))) BETWEEN (0.28334567442397895 COLLATE RTRIM) AND (CASE WHEN x'11b6df07' THEN NULL WHEN NULL THEN x'' WHEN x'b10c' THEN NULL END))); -- 0ms;
SELECT (((t0.c2)>=(t0.c1)) IN (CAST(t0.c0 AS TEXT), COUNT(t0.c0))) FROM t0 WHERE (CAST(((x'40b0')GLOB(x'')) AS TEXT)); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT CASE ((t0.c0)<(t0.c0))  WHEN (t0.c2 IN (t0.c2)) THEN (- (t0.c1)) END FROM t0 LIMIT 1518416734; -- 0ms;
SELECT DISTINCT ((((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))GLOB(((0x3d368cf3) NOTNULL))), ((t0.c0) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))), (((t0.c0 IN ())) NOT BETWEEN (AVG(t0.c0)) AND ((((x'')) BETWEEN ((t0.c2)) AND ((t0.c0))))), GROUP_CONCAT((- (0Xffffffff92490872))) OVER (), ((((t0.c1)>>(t0.c2)))AND(CAST(t0.c0 AS BLOB))) FROM t0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(((((t0.c2)AND(t0.c2)))OR(t0.c1)), 0.9748174651856317) FROM t0 GROUP BY t0.c1 HAVING COUNT(*); -- 0ms;
SELECT ALL ((((t0.c2)/(t0.c1))) BETWEEN ((t0.c0 IN ())) AND (((t0.c0)GLOB(t0.c1)))), CAST(t0.c2 AS INTEGER), (((0.727615833506697))<>(((t0.c1 IN ())))) FROM t0 WHERE (CASE (('-454421917') BETWEEN (NULL) AND (x''))  WHEN (((0.5524983006719392)) NOT BETWEEN ((1.709492412E9)) AND ((x''))) THEN (('171894970') ISNULL) END) LIMIT -406516510; -- 0ms;
SELECT DISTINCT (NOT (((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) FROM t0; -- 0ms;
SELECT ALL ((((t0.c0)>>(t0.c0))) IS FALSE), LEAD(COALESCE(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)), (t0.c2 IN ())), (((t0.c1)>(t0.c2)) IN (((t0.c2)IS NOT(t0.c0)))), ((CASE t0.c1  WHEN '6' THEN t0.c2 ELSE t0.c0 END) IS TRUE)) OVER (), ((((((((t0.c0)AND(t0.c2)))OR(t0.c1)))AND(t0.c0)))AND(t0.c2)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (NULL))) AND (((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))) FROM t0 WHERE (((~ (NULL)) IN ((('-321031574')*(x'')), CASE NULL  WHEN 0Xffffffff91a4b80f THEN NULL ELSE 674347350 END))); -- 0ms;
SELECT ALL ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)AND(((x'') BETWEEN (t0.c1) AND (t0.c2)))) FROM t0 WHERE (((0.19384025100971602 COLLATE NOCASE) BETWEEN ('䲰*_k') AND ((NULL IN ())))); -- 0ms;
SELECT ALL (((t0.c0 IN ()))==(CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END)), (HEX(DISTINCT t0.c0) IN ()), ((t0.c0) NOT NULL) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ALL (((NOT (t0.c0)))GLOB(MIN(t0.c1))) FROM t0 WHERE (((((0.7618030850725447)OR(((0x637e248e)>=('!aDJStOlF')))))AND(((x'')LIKE(NULL))))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS INTEGER))&(t0.c0)) FROM t0 WHERE ((((((0.8208312164427035, 0.5036664200130306, NULL)) BETWEEN ((x'', 539314566, '-103159230')) AND ((x'd997', 0Xffffffff9109ad3e, 'hᆈ'))))GLOB((- (0.5686506413648368))))); -- 0ms;
SELECT DISTINCT ((((((((t0.c0 COLLATE BINARY)OR(t0.c1)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))))OR('-1170477697')))AND(CAST(t0.c0 AS INTEGER))) FROM t0; -- 0ms;
SELECT DISTINCT (- (t0.c1)) COLLATE NOCASE, TRIM(COUNT(t0.c2), ((t0.c0)>=(t0.c1))), NULL FROM t0; -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT (+ (CASE WHEN t0.c0 THEN -1170477697 END)) FROM t0; -- 0ms;
SELECT (json_patch(t0.c2, t0.c0) IN (COALESCE(t0.c0, t0.c1))), CAST((t0.c2 IN ()) AS REAL), ((((t0.c2 COLLATE RTRIM)AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)))AND('237609145')) FROM t0 WHERE ((((UNLIKELY(DISTINCT 0.13810638561193322)))==((((((x'')AND(0.07075477453584833)))OR('\r')))))); -- 0ms;
SELECT DISTINCT '558175382' FROM t0 LIMIT -1780792967 OFFSET -1193782762; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY CAST(t0.c0 AS TEXT)  NULLS LAST, ((((((t0.c1) IS TRUE))AND(((t0.c0) NOT NULL))))OR(json_valid(t0.c1))) DESC) FROM t0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))), (((t0.c2 IN ()))||((((t0.c2))<((t0.c2))))), ((CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c0) IS FALSE))), ((((+ (t0.c0))))>=(((((t0.c1))>(('-373253220')))))), CAST((+ (t0.c0)) AS NUMERIC) FROM t0 WHERE (((((((((((x'')OR('432107581')))AND(x'0d83af83')))AND(1074438413)))OR(0.6766133533064226))) NOTNULL)); -- 0ms;
SELECT ALL NULLIF(DISTINCT t0.c0 COLLATE RTRIM, (t0.c0 IN (t0.c1, t0.c2))) FROM t0 WHERE (((((((0.3633491018807701) NOT BETWEEN (4.0027723E7) AND ('-1777295762')))AND((((0.5686506413648368)) NOT BETWEEN ((NULL)) AND (('194359341'))))))OR(CAST(x'fc949c98' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT LEAD(((((((t0.c1)<(t0.c0)))AND(t0.c0 COLLATE NOCASE)))OR(t0.c2 COLLATE NOCASE)), t0.c1, ((((t0.c0)AND(t0.c0)))OR(t0.c2)) COLLATE BINARY) OVER () FROM t0 WHERE ((((((((((0.3297983085162651 IN (0.4231557667425545)))AND(0.051735720010468 COLLATE RTRIM)))OR((('')GLOB(0X7665d7b)))))OR(LIKE(0.19384025100971602, '', '>'))))AND(('406346717' IN ())))) GROUP BY ((((((t0.c0)IS(t0.c1)))AND(((((t0.c2)AND('406346717')))OR(t0.c0)))))AND(t0.c1)), CASE t0.c2  WHEN CAST(t0.c1 AS INTEGER) THEN '' END, 'sv]C', ((((-1.9249786E8)<>(t0.c2))) NOT NULL), ((((NULL) BETWEEN ('') AND (t0.c2)))IS((~ (t0.c0)))) HAVING ((((t0.c1)OR(t0.c2)))>>((t0.c2 IN (t0.c2)))) ORDER BY (- (CAST(t0.c0 AS INTEGER))) ASC, ((((t0.c1)*(t0.c0)))-(QUOTE(t0.c1))) DESC  NULLS LAST, CAST((+ (t0.c1)) AS INTEGER) DESC  NULLS LAST; -- 0ms;
SELECT ALL COUNT((t0.c2 IN ())) FILTER(WHERE (((t0.c1)) NOT BETWEEN ((((t0.c1)>>('')))) AND (((+ (t0.c1)))))) OVER () FROM t0; -- 1ms;
SELECT COUNT(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) OVER () FROM t0 WHERE ((((+ (NULL))) IS FALSE)) ORDER BY ((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END) AND ('b➶')) DESC  NULLS LAST; -- 0ms;
SELECT TRIM(CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN 0.19384025100971602 WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END, t0.c2), (((((t0.c1 IN ()))OR(MAX(t0.c2))))OR(((t0.c0) NOT NULL))), t0.c0 FROM t0; -- 0ms;
SELECT ALL RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, t0.c0, t0.c2, t0.c0)) NOT BETWEEN ((((t0.c2)&(t0.c1)), t0.c2, ((t0.c2) ISNULL), '&DK&', (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) AND ((MAX(t0.c1), (t0.c2 IN ()), ((t0.c2)>(t0.c2)), ((t0.c0)&(t0.c0)), ((t0.c0) NOT NULL)))) FROM t0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0 WHERE ((((LIKELY(DISTINCT NULL)))!=((x'09db' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c2) ISNULL) THEN t0.c2 COLLATE RTRIM ELSE ((t0.c2)||(t0.c0)) END, ((((NULLIF(t0.c1, t0.c0))OR(COUNT(t0.c2))))AND(MAX(t0.c2, t0.c2))), (~ (((t0.c2) IS FALSE))) FROM t0 WHERE (306712768); -- 4ms;
SELECT HEX(DISTINCT CASE 0.815242481544871  WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) FROM t0; -- 0ms;
SELECT DISTINCT '-1108276452' FROM t0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT t0.c1) FROM t0 GROUP BY CASE WHEN (~ (t0.c2)) THEN (('\{')%(t0.c0)) END; -- 0ms;
SELECT ALL (+ ((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))) FROM t0 WHERE ((((- (x'')))AND(UPPER(x'e0c01d81')))) GROUP BY CASE WHEN (((t0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c1, t0.c2)) AND ((t0.c0, '-810832647', t0.c2))) THEN (((t0.c2))<((t0.c2))) ELSE json_valid(t0.c1) END, LOWER(DISTINCT 0.8253048205943959), (((((t0.c2 IN (t0.c0)))OR((t0.c2 IN (t0.c1)))))AND(((t0.c2)<(t0.c2)))); -- 0ms;
SELECT LOWER(DISTINCT t0.c2) COLLATE BINARY, t0.c2, (((t0.c2 IN (t0.c0, '')))*(((t0.c2) NOT NULL))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c2)OR('406346717')))AND(t0.c0)))AND(t0.c0)))AND(t0.c2))) BETWEEN (((t0.c0)<<(t0.c1))) AND (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))), t0.c0 COLLATE BINARY, CAST(CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END AS BLOB) FROM t0 NOT INDEXED ORDER BY (((CASE WHEN t0.c1 THEN t0.c1 WHEN 0.3898954480582584 THEN t0.c0 WHEN '9' THEN t0.c1 ELSE t0.c2 END, t0.c0 COLLATE NOCASE, NULL))>=((((t0.c1)GLOB(NULL)), CAST(NULL AS BLOB), t0.c2 COLLATE BINARY)))  NULLS LAST; -- 0ms;
SELECT ALL CASE GROUP_CONCAT(t0.c1)  WHEN t0.c1 THEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) END FROM t0 WHERE (LIKELY(DISTINCT (((0.29567321646321676))<(('1383692181'))))) LIMIT 1383692181 OFFSET 137648980; -- 0ms;
SELECT DISTINCT ((((t0.c0)>=(t0.c1))) BETWEEN (NULL) AND (t0.c2)) FROM t0 GROUP BY (((t0.c0)<<(t0.c1)) IN (CAST(t0.c1 AS TEXT), (((t0.c1, t0.c2, t0.c0, t0.c2, t0.c2))<=((t0.c2, t0.c1, t0.c0, 'w2JBa	', t0.c0))))); -- 0ms;
SELECT DISTINCT COALESCE(MIN(t0.c0), CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END, CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END, (~ (t0.c1)), HEX(x''), ((t0.c2) NOTNULL)) FROM t0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT t0.c2), CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END COLLATE NOCASE, CASE WHEN ((t0.c1)==(t0.c2)) THEN ((t0.c2) IS FALSE) WHEN x'7a3e' THEN t0.c1 COLLATE RTRIM WHEN ((t0.c2)&(t0.c1)) THEN ((t0.c2)&(t0.c2)) END FROM t0 ORDER BY t0.c1 DESC, (x'' IN ()) COLLATE NOCASE, (- (((t0.c1)/(t0.c2)))) DESC  NULLS LAST; -- 0ms;
SELECT json_valid(t0.c2) COLLATE BINARY, LTRIM(t0.c0 COLLATE BINARY), SUM(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) FROM t0 WHERE ((((NULL IN ()))AND(((0.15319537052036158)|(''))))); -- 0ms;
SELECT DISTINCT CAST(((t0.c2)AND(t0.c1)) AS REAL) FROM t0 WHERE ((CASE 2.37609145E8  WHEN x'' THEN x'' END IN ())) ORDER BY ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))-((t0.c0 IN ()))) DESC LIMIT 264327053 OFFSET -114362562; -- 0ms;
SELECT MAX(CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE -461631096 END, ((t0.c2)*(t0.c2))), t0.c2, PERCENT_RANK() OVER ( ORDER BY ((t0.c1 COLLATE BINARY)&(((t0.c2) NOTNULL))) ASC  NULLS FIRST) FROM t0 WHERE (((('137648980')=(0Xffffffffb8d85216)) IN (NULL COLLATE RTRIM, (('p<9Hw*揵(') ISNULL)))); -- 0ms;
SELECT ((((((((t0.c1)OR(t0.c1)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0) IS TRUE) COLLATE BINARY FROM t0 GROUP BY (((ABS(DISTINCT t0.c0)))<=((CAST(t0.c1 AS NUMERIC)))); -- 0ms;
SELECT ALL (((t0.c0)%(t0.c1)) IN (((t0.c0) NOTNULL), (((t0.c1, t0.c1, t0.c2)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c2, t0.c0, 'CኧDG%G['))))) FROM t0; -- 0ms;
SELECT ALL (((t0.c1)) NOT BETWEEN ((t0.c2)) AND (((((']3', x'eab2', t0.c2))==((t0.c1, t0.c0, x'')))))), LOWER(DISTINCT t0.c1 COLLATE BINARY), json(CASE WHEN t0.c1 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END) FROM t0 WHERE (((((NULL) NOT NULL))+((NULL IN ())))); -- 0ms;
SELECT ALL t0.c0 FROM t0 WHERE (((x'')<<('688538577')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((t0.c1) BETWEEN ('b➶') AND (t0.c2)) IN (t0.c1)) FROM t0 WHERE ((((x'')AND('1257526223')) IN ())); -- 0ms;
SELECT DISTINCT NULL FROM t0 WHERE ((+ ((~ (''))))); -- 0ms;
SELECT t0.c1 FROM t0; -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT GROUP_CONCAT((t0.c2 IN (t0.c1, t0.c1))) OVER ( RANGE ((((((x'')>(t0.c2)))OR((t0.c0 IN (t0.c2)))))OR(CAST(t0.c2 AS BLOB))) PRECEDING) FROM t0 WHERE ((((NOT (x'987b'))) NOT BETWEEN (CASE NULL  WHEN '蔼''' THEN x'' WHEN '670965513' THEN '' WHEN x'' THEN 1.518416734E9 END) AND (NULL COLLATE BINARY)));SELECT DISTINCT CASE CAST(t0.c1 AS REAL)  WHEN t0.c2 THEN json_extract(t0.c0, t0.c1, x'43e7', t0.c2) WHEN ((t0.c0)*(t0.c1)) THEN COUNT(t0.c0) WHEN ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))AND('')))AND(t0.c0)))OR(t0.c1)))AND(t0.c1)) THEN t0.c2 COLLATE BINARY ELSE t0.c0 COLLATE BINARY END FROM t0; -- 0ms;
SELECT ALL 0.9656491440072588 FROM t0 WHERE (CAST(CASE WHEN x'' THEN x'' WHEN NULL THEN x'' WHEN 0.2493956119098203 THEN NULL END AS BLOB)); -- 0ms;
SELECT CASE t0.c2  WHEN (- (t0.c0)) THEN ABS(DISTINCT t0.c2) WHEN CAST(t0.c1 AS REAL) THEN t0.c0 WHEN CASE WHEN t0.c2 THEN t0.c0 END THEN ((t0.c0)/(t0.c0)) END, (((((t0.c0, t0.c1, t0.c0))>=((t0.c2, x'', t0.c0)))) IS FALSE), ((t0.c2)+(CAST(t0.c0 AS INTEGER))) FROM t0; -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT ALL COUNT((t0.c1 IN ())) FROM t0 LIMIT 1709492412; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((((-1193782762)AND(t0.c0)))OR(t0.c0))) FROM t0; -- 0ms;
SELECT ALL (+ (((t0.c0)>=('171894970')))), (((t0.c1, UNLIKELY(DISTINCT NULL), (((t0.c0))<>((t0.c1)))))<(((NOT (t0.c1)), ((t0.c1) NOT NULL), t0.c1 COLLATE NOCASE))), ((t0.c2) NOT NULL) COLLATE BINARY FROM t0 WHERE (((0X20254986)GLOB(CAST(x'3cee' AS NUMERIC)))) GROUP BY CASE NULL  WHEN x'' THEN ((t0.c2)-(t0.c0)) WHEN ((t0.c2) IS FALSE) THEN ((((t0.c1)OR(0X762f2963)))OR(t0.c1)) WHEN t0.c1 THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END HAVING CAST((- (t0.c2)) AS BLOB); -- 1ms;
SELECT DISTINCT ((t0.c2) NOT NULL) COLLATE BINARY FROM t0; -- 0ms;
SELECT UPPER(DISTINCT t0.c1 COLLATE NOCASE) FROM t0 LIMIT 491346869; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((t0.c0)AND(t0.c2)))OR(t0.c1))) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN (((t0.c1))<((t0.c1))) THEN (t0.c2 IN (t0.c1)) WHEN (t0.c2 IN (t0.c1, '-735164892')) THEN MIN('4e*a') WHEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c2 ELSE ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) END FROM t0 WHERE ((TYPEOF(x'') IN ((((((((('.wꖃKq3]49')OR(NULL)))AND('58000890')))AND(0.8955819478787274)))OR('-400841341'))))); -- 0ms;
SELECT ((((TOTAL(t0.c1))OR(t0.c2)))OR(t0.c1 COLLATE RTRIM)) FROM t0 WHERE (((((x'')|(''))) BETWEEN (0x70667054) AND (0.7372882807836685 COLLATE BINARY))); -- 1ms;
SELECT DISTINCT ((CAST(0.9550468311067074 AS TEXT))<<((t0.c0 IN ()))) FROM t0 WHERE (CAST((NOT (-1086639211)) AS INTEGER)) ORDER BY DATETIME(TYPEOF(t0.c2), NULLIF(t0.c0, t0.c2), CASE -1502541420  WHEN t0.c0 THEN t0.c1 END) DESC, NULL; -- 4ms;
SELECT DISTINCT SUM(((t0.c0)!=(t0.c2))) OVER () FROM t0; -- 0ms;
SELECT ALL (((- (t0.c2)))||(x'')) FROM t0 WHERE ((((~ (NULL))) IS FALSE)) GROUP BY LIKELIHOOD(t0.c1 COLLATE RTRIM, 0.6647612425609757); -- 0ms;
SELECT DISTINCT TOTAL(CAST(t0.c1 AS NUMERIC)) OVER () FROM t0 ORDER BY CASE WHEN CASE t0.c2  WHEN t0.c1 THEN t0.c0 END THEN t0.c1 COLLATE RTRIM WHEN ((((t0.c1)AND(x'')))OR(t0.c1)) THEN ((t0.c1)IS NOT(t0.c1)) WHEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN '2097120621' ELSE t0.c0 END THEN (t0.c0 IN ()) ELSE (- (t0.c1)) END  NULLS FIRST, (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))!=((~ (t0.c1)))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((ABS(DISTINCT t0.c1))||((- (t0.c0)))) FROM t0 WHERE ((((0Xffffffffa6710994)||(0Xffffffff982e0a49)) IN ())) ORDER BY CAST(t0.c1 AS INTEGER) COLLATE RTRIM ASC; -- 0ms;
SELECT DISTINCT CASE (((t0.c2, t0.c2, t0.c2, t0.c1, t0.c2)) NOT BETWEEN ((t0.c0, t0.c0, t0.c1, t0.c0, t0.c0)) AND ((t0.c2, t0.c0, '751053284', t0.c1, t0.c1)))  WHEN MAX(t0.c0) THEN (t0.c2 IN (t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT ((((CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c0 AS NUMERIC))))AND(t0.c2)) FROM t0; -- 0ms;
SELECT t0.c0 COLLATE BINARY, CASE WHEN ((((t0.c0)AND(t0.c1)))OR(t0.c2)) THEN ((((((((NULL)OR(t0.c2)))OR(t0.c0)))OR(x'')))AND(t0.c0)) WHEN (- (t0.c1)) THEN (t0.c0 IN ()) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END THEN ((((((((t0.c2)OR(t0.c1)))AND(t0.c0)))AND(t0.c2)))AND(t0.c0)) ELSE '1942988412' END, (((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))) IS TRUE) FROM t0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t0; -- 1ms;
SELECT ALL ((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))) IN (((t0.c2)AND('-1530353862')))) FROM t0; -- 0ms;
SELECT HEX(x'') FROM t0 WHERE ((((('')LIKE(0.2734482682470186)))>=(RTRIM(x'6317a001')))) GROUP BY -860593163 COLLATE RTRIM HAVING COALESCE(t0.c2, t0.c2) COLLATE NOCASE;SELECT COUNT(*) FROM t0 LIMIT -945295103; -- 0ms;
SELECT (((DATETIME(t0.c0, t0.c1, t0.c2)))<>((IFNULL(DISTINCT t0.c0, t0.c2)))) FROM t0; -- 0ms;
SELECT ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ((CASE x''  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)AND((~ (t0.c0)))), DENSE_RANK() OVER (), 0.4384036366187968, -3.7325322E8, SUM(((t0.c1)/(t0.c0))) OVER () FROM t0 WHERE (((((NULL)||(1127876525)))IS NOT(CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT (((t0.c2)IS NOT(t0.c2)) IN ()) FROM t0; -- 0ms;
SELECT CAST((((t0.c2, t0.c0, t0.c0))<((t0.c0, t0.c2, t0.c0))) AS REAL) FROM t0 GROUP BY ((((CAST(t0.c1 AS TEXT))AND('-743414775')))AND('')); -- 0ms;
SELECT DISTINCT (((']3') NOT NULL) IN ()) FROM t0 GROUP BY (t0.c0 IN (t0.c1 COLLATE NOCASE)), (NOT (((t0.c0) ISNULL))), CAST(NULL AS BLOB), (NOT (((((t0.c0)OR(t0.c0)))OR(t0.c1)))), CASE WHEN t0.c0 THEN t0.c0 END COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((t0.c1, t0.c2, t0.c2)) BETWEEN ((NULL, (t0.c2 IN ()), CAST(t0.c1 AS INTEGER))) AND ((CAST(t0.c2 AS BLOB), MIN(t0.c1), (((t0.c1))<=((t0.c0)))))) FROM t0 WHERE (CAST((x'' IN ()) AS TEXT)) ORDER BY (~ (((t0.c0) NOTNULL))); -- 0ms;
SELECT ALL (NOT ((t0.c1 IN (t0.c1, t0.c1)))) FROM t0 WHERE (((((((((((((((-654022233)OR(x'4b7a')))AND('')))AND('1074438413')))OR('CኧDG%G[')))OR(NULL)))AND(-604922907))) NOT BETWEEN (((x'') BETWEEN (x'') AND (NULL))) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((t0.c2) NOTNULL) FROM t0 WHERE (NULL) ORDER BY CASE WHEN NULL THEN CAST(t0.c1 AS TEXT) WHEN t0.c0 COLLATE BINARY THEN (((t0.c2, t0.c0, x'', t0.c0, t0.c2)) BETWEEN ((t0.c2, t0.c1, t0.c0, t0.c0, t0.c2)) AND ((t0.c0, t0.c2, t0.c0, t0.c0, t0.c2))) WHEN CAST(t0.c2 AS NUMERIC) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) END  NULLS LAST; -- 0ms;
SELECT DISTINCT ((t0.c1) NOTNULL) FROM t0; -- 0ms;
SELECT ALL 0Xffffffffbd29568b FROM t0 LIMIT 1444342326; -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))) AND ((COUNT(*)))), CAST(MIN(0xffffffff882a0341) AS NUMERIC), ((((((((t0.c1)OR(0.5036664200130306)))OR(t0.c1)))OR(((t0.c2)==(x'')))))OR(CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 END)) FROM t0 ORDER BY t0.c2 COLLATE BINARY  NULLS LAST, (((+ (t0.c1))) IS TRUE) ASC; -- 0ms;
SELECT DISTINCT HEX((t0.c1 IN ())) FROM t0; -- 1ms;
SELECT DISTINCT (NOT (((t0.c0) IS FALSE))), CAST(t0.c0 AS TEXT), (('500649136') ISNULL) COLLATE NOCASE FROM t0 WHERE (((((0.030738911362456545) BETWEEN ('^	A') AND (NULL))) IS FALSE)) ORDER BY ((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c1)-(t0.c0))) AND ((((t0.c0, t0.c1, t0.c0))<((t0.c1, t0.c1, x'')))))  NULLS FIRST, ((((((t0.c1)OR(t0.c0)))AND(t0.c0))) ISNULL) ASC LIMIT 1038072334; -- 0ms;
SELECT DISTINCT ((((t0.c1)>>(t0.c2))) IS FALSE) FROM t0 WHERE (CASE NULL  WHEN (NOT (1.944179441E9)) THEN (441468545 IN ()) ELSE ((((NULL)AND(0.035786249192974795)))OR(0x328fe060)) END) LIMIT -370637023 OFFSET 247130086; -- 0ms;
SELECT DISTINCT (t0.c0 IN ()) COLLATE NOCASE, ((((0x4e118d33) NOTNULL))/(t0.c0 COLLATE RTRIM)), CASE HEX(DISTINCT t0.c2)  WHEN 2.64327053E8 THEN ((t0.c0)>=(t0.c0)) ELSE t0.c0 END FROM t0 WHERE ((+ ((((0.20238201961638125, NULL, NULL))>=((0.8309401551177704, NULL, 0xffffffffdbf19be5)))))); -- 0ms;
SELECT ALL CASE WHEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN x'' THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c2)AND(t0.c2)))AND(t0.c1)) WHEN t0.c1 THEN (((t0.c0)) NOT BETWEEN (('70cj)')) AND ((t0.c2))) WHEN GROUP_CONCAT(t0.c0) THEN CASE WHEN 0.5358003869139132 THEN t0.c2 ELSE 821683367 END END FROM t0 LIMIT -1777295762 OFFSET 2053368251; -- 1ms;
SELECT ALL t0.c1 FROM t0; -- 0ms;
SELECT DISTINCT CAST(((((t0.c2)OR(t0.c1)))OR(t0.c2)) AS NUMERIC), AVG(((t0.c1) BETWEEN (t0.c2) AND (t0.c1))), GROUP_CONCAT(CAST(t0.c2 AS INTEGER)) FROM t0 WHERE ((('')IS('.wꖃkq3]49')) COLLATE RTRIM); -- 0ms;
SELECT CAST(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) AS TEXT), ((((0X3924e16e) ISNULL)) ISNULL), (((+ (t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (((NULL)/(t0.c2)))) FROM t0; -- 0ms;
SELECT ALL MIN(NULL) COLLATE RTRIM FROM t0 WHERE (CASE WHEN (NULL IN (6.7434735E8)) THEN CASE WHEN NULL THEN '0.1916866389284304' WHEN x'' THEN '~腨u<N9/\n' WHEN '751053284' THEN NULL END END); -- 0ms;
SELECT DISTINCT CASE ((t0.c1) BETWEEN (t0.c0) AND (t0.c1))  WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN NULL ELSE 'g{_6cH' END, TOTAL(COUNT(*)), (((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) IN ()) FROM t0 WHERE ('');SELECT ALL ((t0.c0 COLLATE BINARY) ISNULL) FROM t0 WHERE ((x'' COLLATE BINARY IN (((NULL)>(0.12000403292934636))))); -- 1ms;
SELECT DISTINCT (NOT (((((((((t0.c2)AND(NULL)))OR(t0.c1)))OR(t0.c1)))OR(t0.c2)))) FROM t0; -- 0ms;
SELECT DISTINCT ((CASE t0.c1  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) NOT BETWEEN ((- (t0.c2))) AND (((t0.c0) ISNULL))) FROM t0 NOT INDEXED WHERE ((((('-321031574') IS TRUE)) NOT BETWEEN ((NOT (x''))) AND ((NULL IN (0.6392273070499259))))); -- 1ms;
SELECT DISTINCT x'1203', -1.615781579E9, CAST(((t0.c0) ISNULL) AS BLOB) FROM t0 WHERE ((((x'fb374eb1')) NOT BETWEEN (((('1624864458') BETWEEN (0.06316329090142203) AND (NULL)))) AND ((0.42761774621480375)))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY CAST(((t0.c2) NOTNULL) AS TEXT)  NULLS FIRST), COUNT(((((((((t0.c1)AND(t0.c1)))AND(t0.c2)))OR(t0.c1)))AND(t0.c1))) OVER (), (NOT (CASE WHEN t0.c2 THEN 439567126 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END)) FROM t0 WHERE ((((x'')) NOT BETWEEN ((((((0.6297805307210895)OR(x'78e9')))OR('-926760267')))) AND ((CASE '1944179441'  WHEN x'2736' THEN 0.09098881935732273 END)))) LIMIT 611819191 OFFSET 1593440797; -- 1ms;
SELECT ALL ((((CAST(t0.c1 AS BLOB))AND(((t0.c0)GLOB(t0.c0)))))AND(t0.c2)) FROM t0 WHERE (TRIM((('-137502428')<('')))) GROUP BY ROUND(((t0.c1)LIKE(NULL)), ABS(DISTINCT t0.c2)); -- 0ms;
SELECT DISTINCT ((((t0.c1) BETWEEN (t0.c0) AND (t0.c2))) NOT BETWEEN (((t0.c1)-(t0.c1))) AND (((t0.c0)||(t0.c2)))), ((((t0.c1) NOT BETWEEN (t0.c2) AND (0.6048768067773889))) BETWEEN (((((t0.c2)AND(t0.c0)))AND(t0.c0))) AND (((t0.c0) NOT BETWEEN (0X3eb66522) AND (t0.c2)))), ((((LIKELY(DISTINCT t0.c2))OR(TOTAL(t0.c2))))OR(((((((((t0.c2)OR(t0.c0)))OR(t0.c1)))OR(t0.c2)))OR(t0.c1)))), MAX(t0.c1), (((((t0.c1)GLOB(t0.c2))))<((t0.c0))) FROM t0 WHERE (((x'5968' COLLATE RTRIM)<(0.7284298770781329))) ORDER BY ((('1669599938', t0.c2 COLLATE BINARY, NULL))>((((((t0.c0)OR(t0.c2)))AND(t0.c2)), t0.c2, ((t0.c0) ISNULL)))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((((t0.c2)AND(CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)))OR((t0.c1 IN ()))) FROM t0 WHERE (((0.3898954480582584)&(x'')) COLLATE BINARY); -- 0ms;
SELECT ALL ((((((t0.c1) IS TRUE))AND(SQLITE_COMPILEOPTION_USED(t0.c1))))AND((('-1780792967')<=(t0.c1)))) FROM t0 WHERE (IFNULL(DISTINCT ((((0.391963179264195)OR(0.5445410225621437)))AND(x'')), ((x'') NOT BETWEEN (0.10194226907087778) AND (x'')))) GROUP BY t0.c1; -- 0ms;
SELECT DISTINCT ((((CAST('1652819631' AS TEXT))AND((((('-1244851197')OR(t0.c1)))AND(t0.c0)))))AND(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))) FROM t0 WHERE (((CAST(NULL AS INTEGER))|(LIKE(NULL, '侹%d0', '[')))) ORDER BY CASE WHEN CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END THEN COALESCE(DISTINCT t0.c1, t0.c2, t0.c0, t0.c0) WHEN t0.c1 COLLATE BINARY THEN (t0.c0 IN ()) WHEN NULL THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) ELSE CAST(t0.c2 AS NUMERIC) END ASC; -- 0ms;
SELECT DISTINCT '406346717', ((((t0.c0) NOT NULL)) IS FALSE), ((t0.c2)IS(t0.c2 COLLATE NOCASE)) FROM t0 WHERE (((((- (NULL))))>=((((0.7923399746061665) NOT BETWEEN (0.10981203202141143) AND (x'')))))); -- 1ms;
SELECT DISTINCT json_object(((t0.c2)<=(t0.c1)), CAST(x'' AS NUMERIC)) FROM t0 WHERE ((x'' COLLATE NOCASE IN ())) GROUP BY t0.c2, (((t0.c2 IN ())) ISNULL), CAST(((((t0.c0)OR(t0.c2)))OR(t0.c1)) AS BLOB) HAVING (+ ((t0.c2 IN (t0.c2)))) LIMIT 670965513; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c1 AS NUMERIC) AS TEXT) FROM t0 WHERE (((((((x'') BETWEEN ('揵AY?') AND (0.9658651468522435)))AND((((('1885761620')OR('-1170571106')))AND(0.00815445260731229)))))OR((0.8676419046342213 IN ())))); -- 0ms;
SELECT DISTINCT (CAST(t0.c2 AS BLOB) IN (((((t0.c2)AND(t0.c0)))OR(t0.c1)), ((0Xffffffffe4fd337d) NOT NULL))), (t0.c2 COLLATE RTRIM IN ()), (x'' IN ()) FROM t0 WHERE (CAST(((-1421197141)>=(NULL)) AS BLOB)); -- 0ms;
SELECT ALL LOWER(t0.c0 COLLATE NOCASE) FROM t0 WHERE (((TYPEOF(DISTINCT x''))<=(((0.9238134157633292)<=(1892947206))))); -- 0ms;
SELECT AVG(((t0.c0) NOT NULL)) OVER () FROM t0; -- 1ms;
SELECT ALL (0.8253048205943959 IN ()) FROM t0 WHERE ((((CASE WHEN x'' THEN 'KB' ELSE NULL END))==((CASE -1.12801455E9  WHEN '-453168259' THEN 0.8885425003894277 WHEN x'e071' THEN 'g-\rHK힩2i	' WHEN x'' THEN NULL WHEN NULL THEN NULL WHEN 'F\n' THEN '-370637023' ELSE x'3307' END)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) END, x'', ((((((t0.c1) ISNULL))AND(((t0.c2) NOTNULL))))OR(RTRIM(t0.c2))), t0.c0, (NOT (((NULL) NOTNULL))) FROM t0 GROUP BY ((x'')GLOB((~ (t0.c1)))) LIMIT -1692698308 OFFSET -103159230; -- 0ms;
SELECT DISTINCT CASE NULLIF(DISTINCT t0.c0, t0.c0)  WHEN ((t0.c0)<>(t0.c0)) THEN (t0.c2 IN ()) END FROM t0 ORDER BY (((((t0.c2))<=((t0.c0))))>(((t0.c0) NOT NULL)))  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ (CAST('' AS INTEGER))), TRIM(DISTINCT ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)), (t0.c2 IN ())), (((- (t0.c2))) ISNULL) FROM t0 GROUP BY ((t0.c1)GLOB(LTRIM(t0.c0, t0.c0))) HAVING 0.9326006693254199; -- 1ms;
SELECT ALL CAST(CASE WHEN t0.c2 THEN t0.c1 END AS NUMERIC) FROM t0 WHERE ((((NULL))>=(((((NULL, x'', '\r!'))==((0.19798414951037457, '-156420911', 0.9202066582588662))))))); -- 0ms;
SELECT DISTINCT (NOT ((((t0.c0, t0.c0, x'')) BETWEEN ((t0.c0, '-114362562', t0.c1)) AND ((t0.c2, t0.c2, t0.c2))))), ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))) NOT NULL), ((((t0.c1) IS FALSE)) NOT NULL) FROM t0 WHERE ((((NOT ('0.7284298770781329')))|((0.8641160037100041 IN ())))); -- 0ms;
SELECT (((((t0.c0, t0.c1, t0.c2)) BETWEEN ((237609145, t0.c0, t0.c2)) AND ((t0.c1, t0.c1, t0.c2)))) NOT BETWEEN (0.14959309913337626) AND (((((t0.c1)AND(t0.c2)))AND(t0.c2)))) FROM t0 WHERE (((CASE WHEN 0.13864014197203167 THEN 0Xffffffffa2b7c217 ELSE NULL END)<<(CASE WHEN NULL THEN NULL END))); -- 0ms;
SELECT x'' FROM t0 WHERE (IFNULL(DISTINCT NULL, x'c195') COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (CAST(t0.c1 AS BLOB) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c2)IS(t0.c0)), ((((t0.c0)OR(t0.c2)))AND(x'')), t0.c0))<=((((t0.c0) ISNULL), t0.c2, COUNT(t0.c1)))) FROM t0; -- 1ms;
SELECT ((((rtreenode(t0.c0, t0.c2))OR(-2127850820)))OR(((t0.c2)IS NOT(t0.c0)))), 0.47807494274442686, (((NULL, t0.c1, t0.c2)) NOT BETWEEN ((x'4eef1496', CASE WHEN t0.c1 THEN -3.04429733E8 ELSE t0.c0 END, CAST(t0.c2 AS INTEGER))) AND ((((t0.c2)IS(t0.c2)), ((t0.c1) NOT BETWEEN (NULL) AND (t0.c2)), ((((((((NULL)OR(t0.c1)))AND(t0.c1)))OR(t0.c1)))AND(0.7869687468588962))))) FROM t0; -- 0ms;
SELECT ALL ((((((t0.c0)LIKE(t0.c0)))OR(GROUP_CONCAT(t0.c0))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))) FROM t0 WHERE ('띪t--Ɡz*') GROUP BY x'98d0'; -- 0ms;
SELECT ALL TRIM(DISTINCT t0.c2, t0.c0) COLLATE BINARY, (((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((t0.c0 COLLATE NOCASE, ((t0.c0) IS TRUE), NULLIF(DISTINCT t0.c1, t0.c2))) AND (((t0.c1 IN (0.8256558977352991)), GLOB(t0.c0, t0.c0), ((((t0.c2)OR(t0.c2)))AND(t0.c1))))), ((((((t0.c1)OR(t0.c2)))OR(0.7797292586868454))) IS FALSE) FROM t0 WHERE ((((0.20856954339887857)) NOT BETWEEN ((((0.4150309896815709) BETWEEN ('/#e/g') AND (0X3ddfba0e)))) AND ((CAST(NULL AS BLOB))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((CAST(1737756578 AS REAL))AND(((NULL) NOT BETWEEN (NULL) AND ('-537225287')))))AND(-103159230 COLLATE NOCASE)))AND(CAST(NULL AS TEXT))))AND(((NULL) BETWEEN (NULL) AND (x''))))); -- 1ms;
SELECT DISTINCT CAST(t0.c2 AS INTEGER), (NOT (t0.c1)), x'8326' FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)AND(t0.c1))) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY ((CAST(t0.c0 AS INTEGER))|(((((t0.c1)AND(t0.c2)))AND(t0.c2)))) ASC, (((t0.c2 IN (t0.c0)))||(TIME(t0.c1, t0.c1, t0.c1))) DESC) FROM t0; -- 0ms;
SELECT DISTINCT 0.6820424299908733, (((0.4150309896815709))>((((0.6392273070499259) BETWEEN (t0.c1) AND (t0.c2))))), CAST(CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END AS NUMERIC) FROM t0 WHERE (((x'')%(x'')) COLLATE RTRIM) ORDER BY ((TYPEOF(DISTINCT t0.c0))&(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE (((t0.c2))>=((t0.c1)))  WHEN ((0x60d976ca)<=(t0.c0)) THEN ((t0.c1)OR(t0.c0)) END, ((CASE WHEN x'61b7' THEN '0.6048768067773889' END)>=(((t0.c0) NOTNULL))), '-179723063' FROM t0 WHERE (((((((NULL, 0X2220012f, ''))>=((0xffffffffa2379f7f, '%v!}>', '5u'))), (('432107581')<<('1')), ((('137648980'))!=((0.483700328046789))), ((x'')/(0Xffffffffce92ef4b)), (- (NULL))))<=((((NULL) NOT BETWEEN ('~Y') AND ('-1454524516')), ((((0.7296250899413362)AND('1444049142')))AND(NULL)), ((NULL) BETWEEN (NULL) AND (x'')), ((((-1492791094)AND(0.7231076394643722)))AND('2012483353')), x'' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))AND(((t0.c2)%(t0.c2)))))OR('-406516510')) FROM t0 WHERE (((((((NULL)OR(0.5015747615220206)))AND(0.21682496708822463))) IS TRUE)) GROUP BY (((((((t0.c0)OR(NULL)))AND(t0.c2)), (0.9238134157633292 IN ()), t0.c2))>=(((t0.c2 IN (t0.c1)), CAST(t0.c1 AS TEXT), ((t0.c1)GLOB(t0.c0))))); -- 0ms;
SELECT DISTINCT ((((t0.c2) IS FALSE)) NOT BETWEEN (0.8885425003894277) AND (t0.c2 COLLATE BINARY)) FROM t0 GROUP BY CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) AS TEXT); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((('-723043759')|(-1.086639211E9)))||((~ ('2011068848'))))); -- 0ms;
SELECT DISTINCT CASE ((t0.c1)||(t0.c2))  WHEN (((t0.c1, '1441435308', t0.c1)) NOT BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t0.c0, t0.c2, t0.c1))) THEN NULL ELSE ((t0.c0)>=(t0.c0)) END FROM t0 WHERE (((((')g')<=(x''))) NOT BETWEEN (CASE WHEN x'' THEN NULL WHEN '1213443664' THEN 0.31488595856836954 WHEN x'5ea48c2d' THEN 0xffffffffedfa44ca ELSE '' END) AND (((0.9632345503281988) NOT NULL)))); -- 1ms;
SELECT ALL (((t0.c0)) NOT BETWEEN (((('|닪') BETWEEN (t0.c1) AND (t0.c1)))) AND ((CAST(t0.c1 AS TEXT)))) FROM t0 WHERE ((((((0.6585329632180669)) BETWEEN ((x'562b')) AND ((0.8256558977352991))))IS NOT((('-945295103')==(NULL))))); -- 0ms;
SELECT ALL (+ ((NOT (t0.c1)))), (+ (TOTAL(t0.c2))), ((((t0.c2)IS(0.3370696840497007)))<=(MIN(t0.c1))) FROM t0 GROUP BY CAST(((0x3924e16e)*(t0.c1)) AS REAL), CAST(t0.c2 AS NUMERIC) COLLATE RTRIM, (((t0.c2)) NOT BETWEEN (('1814398544')) AND ((NULL))), '⒎hD', ((((t0.c2)!=(t0.c0))) ISNULL) HAVING 0.05549112181227245; -- 0ms;
SELECT ALL x'' FROM t0 WHERE (((SQLITE_COMPILEOPTION_USED('-1404770286')) NOTNULL)); -- 0ms;
SELECT MIN(((t0.c2) ISNULL)) FROM t0; -- 0ms;
SELECT DISTINCT ((AVG(t0.c2)) NOT NULL) FROM t0; -- 0ms;
SELECT (((t0.c2)AND(t0.c2)) IN ()) FROM t0; -- 1ms;
SELECT DISTINCT 0.1847478988024538 FROM t0 WHERE ((('9l3T') IS TRUE) COLLATE BINARY) ORDER BY CASE WHEN LIKELY(t0.c0) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND ('674347350')) ELSE t0.c1 COLLATE RTRIM END ASC; -- 0ms;
SELECT ALL ((((t0.c0)GLOB(0.10981203202141143)))<=('399399725')) FROM t0 WHERE (((NULL)IS NOT((((('fI#좼nkg')OR(NULL)))OR(0.2951962455108498))))); -- 0ms;
SELECT ALL (((t0.c1)IS NOT(t0.c2)) IN ()), ((((((t0.c2) NOTNULL))OR(t0.c0)))OR(CASE t0.c0  WHEN t0.c2 THEN 0.9736909700307795 WHEN t0.c2 THEN t0.c0 WHEN NULL THEN t0.c0 END)), SUBSTR(COUNT(*), ((t0.c0)<<(t0.c1))) FROM t0; -- 0ms;
SELECT DISTINCT (- (((t0.c2)<=(t0.c1)))), MAX(((((t0.c0)AND(t0.c0)))AND(t0.c0))), ((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) FROM t0 LIMIT 432107581 OFFSET -996544055; -- 0ms;
SELECT DISTINCT ((((((((CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END)AND((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))))))OR(NULL)))OR((((t0.c2, t0.c1, t0.c2, t0.c0, t0.c0))=((t0.c1, t0.c1, t0.c2, t0.c1, t0.c2))))))OR(load_extension(1118817458))) FROM t0 WHERE (0.13810638561193322 COLLATE BINARY);SELECT ALL ((t0.c1)<=(CAST(t0.c0 AS BLOB))), NTH_VALUE(0.39365861937298086, json_extract(((x'') IS FALSE), COALESCE(t0.c0, t0.c2, t0.c0, t0.c1))) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP), COUNT(*) FROM t0;SELECT ALL ((GROUP_CONCAT(t0.c0)) NOT NULL), (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1))))<(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))), t0.c2 FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS REAL))>>(((t0.c2)<(t0.c0)))) FROM t0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT ALL (('257974683') NOT NULL) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((((((((t0.c2)AND(t0.c1)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)) AS REAL) FROM t0 WHERE (NULLIF(((NULL) IS FALSE), NULL COLLATE NOCASE)); -- 0ms;
SELECT ALL CAST((t0.c0 IN ()) AS REAL) FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c1)-(t0.c2))) OVER (), (((NULL) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()), (((t0.c0, t0.c2, t0.c2)) BETWEEN (((('1249634949') NOT BETWEEN (t0.c1) AND (t0.c1)), CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN x'' THEN t0.c1 ELSE t0.c0 END, t0.c0)) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), ((t0.c0)<=(t0.c1)), COUNT(*)))) FROM t0 WHERE (((((UNLIKELY(DISTINCT '611819191'))OR(((NULL)>>(0.07682719634178936)))))OR(((795891350)/(x''))))) GROUP BY x''; -- 1ms;
SELECT ALL CASE t0.c2  WHEN x'' THEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) ELSE x'' END FROM t0 WHERE ((((NULL)>=('-1551570711')) IN ())) LIMIT -535891453; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE RTRIM) IS FALSE) FROM t0; -- 0ms;
SELECT ALL ((LIKELY(t0.c1)) BETWEEN ((- (t0.c1))) AND (t0.c2)) FROM t0 WHERE (((((((NULL)AND(NULL)))OR(1100911149)))IS((x'' IN ())))); -- 0ms;
SELECT TOTAL(((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) OVER () FROM t0 ORDER BY ((((((x'30ba') IS FALSE))OR(CAST(t0.c1 AS INTEGER))))OR((((t0.c0))<((t0.c2))))); -- 0ms;
SELECT DISTINCT ((((t0.c1)<(t0.c1))) IS FALSE) FROM t0 WHERE (CAST((('-653614430') NOT BETWEEN (0.29998546112998936) AND (0.7684134944061441)) AS REAL)); -- 0ms;
SELECT ALL TOTAL((((t0.c2))<((t0.c2)))) OVER () FROM t0 WHERE ((((-945295103 IN ()))>=(CASE WHEN 'H%0' THEN '-743414775' WHEN '0.3982152572398191' THEN '1441435308' WHEN -1.14362562E8 THEN x'' END))) LIMIT -2010512575; -- 1ms;
SELECT DISTINCT 0.8463350381346729 FROM t0 ORDER BY ((((((((CAST(t0.c0 AS INTEGER))AND(CAST(t0.c1 AS INTEGER))))OR(((t0.c2)>=(t0.c2)))))AND(((t0.c1) BETWEEN (t0.c1) AND ('5d\J{h')))))AND((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t0.c0 COLLATE NOCASE))>=((((t0.c2)<<(t0.c2))))) FROM t0 WHERE ((('1594286324') NOT BETWEEN (x'' COLLATE RTRIM) AND ((0.8138177244663579 IN ())))) LIMIT -834500588 OFFSET -275666742; -- 0ms;
SELECT DISTINCT CASE ((t0.c2)/(t0.c1))  WHEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((0.521260933072506))) THEN CAST(t0.c0 AS REAL) ELSE '2011068848' END FROM t0; -- 0ms;
SELECT (((((t0.c0)AND(t0.c1)))OR(t0.c2)) IN ()) FROM t0 WHERE (((((('-370637023')*('Hᆈ'))))>=((HEX(-917668304))))); -- 0ms;
SELECT DISTINCT t0.c1 COLLATE RTRIM FROM t0 WHERE ((+ (CAST(x'' AS BLOB)))) ORDER BY (NOT (CAST(t0.c0 AS NUMERIC)))  NULLS FIRST, (((((t0.c0))<=((t0.c0))))|(t0.c2)) ASC  NULLS LAST, t0.c0 COLLATE NOCASE DESC; -- 0ms;
SELECT ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))=(((((t0.c0)OR(t0.c1)))AND(t0.c2)))), (+ (((t0.c1) IS FALSE))), CASE WHEN '0.7372882807836685' THEN (t0.c2 IN ()) END FROM t0; -- 0ms;
SELECT ((((((t0.c2)=('-701042068')))OR(t0.c0 COLLATE BINARY)))AND(((t0.c0)==('-1128014550')))) FROM t0 WHERE ((((('') BETWEEN (-1298506089) AND (x''))) BETWEEN (((((x'')OR(NULL)))OR('-251887672'))) AND ((('-435330126') NOT BETWEEN (171894970) AND ('-1861636802'))))); -- 0ms;
SELECT DISTINCT '' FROM t0; -- 0ms;
SELECT DISTINCT CHANGES() FROM t0; -- 0ms;
SELECT ALL ((COALESCE(DISTINCT '%f', t0.c2)) NOT BETWEEN ((((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c0, t0.c2)) AND ((t0.c2, t0.c0, t0.c1)))) AND ((t0.c1 IN ()))), t0.c1, (((t0.c2))!=((((t0.c2)&(t0.c0))))) FROM t0 WHERE ((((((('-2134323054')/(0.007410019312921956)))AND((1e500 IN ()))))AND((('-192497860') NOT BETWEEN ('0.09098881935732273') AND ('C*c6'))))); -- 0ms;
SELECT DISTINCT (- ((+ (t0.c0)))), '-[', AVG((t0.c1 IN (t0.c2))) FILTER(WHERE ABS(DISTINCT t0.c0) COLLATE BINARY) OVER () FROM t0 LIMIT 1945483170; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 ORDER BY ((((CAST(t0.c2 AS INTEGER))OR((~ (t0.c2)))))OR((t0.c2 IN ()))), CAST((((t0.c0, t0.c0, x'9406'))==((t0.c0, t0.c0, t0.c1))) AS INTEGER)  NULLS FIRST, CAST('+#' AS REAL), CASE WHEN (+ (t0.c2)) THEN (((t0.c2))>((t0.c2))) ELSE (t0.c1 IN ()) END; -- 0ms;
SELECT t0.c2, COUNT(*), ((t0.c2)|(t0.c0)) COLLATE RTRIM FROM t0 WHERE ((((((x'')OR(NULL)))OR(0.33385916167515106)) IN ())); -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c0) IS FALSE) COLLATE RTRIM) FILTER(WHERE ((t0.c2)/(t0.c1)) COLLATE RTRIM) OVER () FROM t0 ORDER BY ((t0.c2 IN ()) IN ()) DESC; -- 0ms;
SELECT DISTINCT ((((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c2))), '+#' COLLATE BINARY, t0.c1))==(((t0.c1 IN ()), t0.c2 COLLATE NOCASE, CAST(t0.c2 AS NUMERIC)))) FROM t0 WHERE ((NOT (CAST(x'' AS INTEGER)))); -- 0ms;
SELECT ALL CAST((t0.c2 IN (t0.c1)) AS NUMERIC) FROM t0 ORDER BY ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))-(t0.c0)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT NULL FROM t0 WHERE ((((0.9171255001034723 COLLATE NOCASE, (('5u') IS TRUE), (('0.09313034667564213') ISNULL), CASE x''  WHEN 0.49602314783515744 THEN '' END, (-1108276452 IN ())))<(((('-103159230')==(x'')), CAST(x'' AS NUMERIC), (((('1820726284')AND(NULL)))OR(0Xffffffff96109e6e)), (- (x'')), ((0x637e248e)&(NULL)))))); -- 0ms;
SELECT DISTINCT SUM(NULL) OVER () FROM t0 WHERE ((- (((0.8641160037100041)>(NULL))))); -- 0ms;
SELECT DISTINCT (((((t0.c2)>(t0.c2))))<((((t0.c1) ISNULL)))) FROM t0; -- 0ms;
SELECT ((ABS(DISTINCT t0.c1))%(((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))) FROM t0 ORDER BY '0.42761774621480375'  NULLS FIRST; -- 1ms;
SELECT ALL (((+ (0.3898954480582584)))*(t0.c0)), (((~ (t0.c2)))IS(((((NULL)AND(t0.c2)))OR(t0.c2)))), CAST(((t0.c1)<<(t0.c0)) AS NUMERIC), CASE ((0X14c0e3aa)<<(0.42761774621480375))  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0) IS FALSE) ELSE '1893107004' END, (t0.c0 IN ()) FROM t0 WHERE ((((((NOT (NULL)))AND((((('1257526223')AND(x'')))AND(x'')))))OR(((('ȏaT'))>=((0xffffffffe9c09b9c)))))); -- 0ms;
SELECT DISTINCT SUM((t0.c2 IN (t0.c1))) FROM t0 GROUP BY t0.c0; -- 0ms;
SELECT DISTINCT ((((CAST(t0.c2 AS BLOB))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))))AND(LOWER(t0.c0))), (t0.c1 IN ()), AVG(x'') FROM t0 WHERE (CASE x'3a40' COLLATE BINARY  WHEN (NOT (x'')) THEN ((NULL) NOTNULL) WHEN CASE NULL  WHEN NULL THEN -4.53168259E8 ELSE '/[cWU.O' END THEN json_array('2042529086', '') WHEN ((194359341) NOT NULL) THEN ((NULL)>=(NULL)) ELSE ((x'')LIKE(x'')) END) GROUP BY CASE WHEN ((t0.c1)<<(t0.c0)) THEN ((t0.c2)<<(t0.c2)) END HAVING (((((t0.c0))>((t0.c1)))) IS FALSE) LIMIT 1532788083; -- 0ms;
SELECT COUNT(CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE 'F\n' END) OVER () FROM t0 WHERE ('wb	媾N4V7'); -- 1ms;
SELECT DISTINCT (+ (IFNULL(DISTINCT t0.c0, t0.c1))) FROM t0 LIMIT 25761208; -- 0ms;
SELECT ALL '264327053' FROM t0 WHERE ((((('70cj)') ISNULL))>(x''))) GROUP BY t0.c2; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)) THEN (((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c1))) WHEN (t0.c1 IN ()) THEN 0x29d7d24 WHEN GROUP_CONCAT(t0.c0) THEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN ((t0.c2)>=(t0.c1)) THEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN t0.c0 COLLATE BINARY THEN (+ (t0.c1)) ELSE SUM(t0.c2) END FROM t0 WHERE ((((((x'84d0'))>((-1926446659)))) IS TRUE)) GROUP BY (((~ (t0.c2))) NOTNULL) HAVING (+ (t0.c1)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (((t0.c2) IS FALSE) IN ()) FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT LAG((((((t0.c0))>=((t0.c0)))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND ((((t0.c1, t0.c1, t0.c1))==((t0.c2, t0.c2, t0.c0))))), (((('539314566')OR(t0.c2)))AND(t0.c0)) COLLATE NOCASE, ((t0.c2 COLLATE BINARY) IS TRUE)) OVER ( ORDER BY CAST(t0.c1 AS BLOB) COLLATE NOCASE  NULLS LAST GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM t0 WHERE ((- (1.153956297E9)) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT (+ (((NULL) NOT BETWEEN (t0.c1) AND (t0.c0)))) FROM t0 WHERE ((- (CASE 0.9616961008510811  WHEN NULL THEN NULL ELSE '516340727' END))); -- 0ms;
SELECT DISTINCT ((((((x'')OR(t0.c0)))AND(t0.c0))) ISNULL), NULLIF(NULLIF(t0.c2, t0.c1), x''), IFNULL(CAST(t0.c1 AS BLOB), (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c2, t0.c2, t0.c1)) AND ((t0.c1, t0.c2, t0.c0, t0.c2, t0.c1)))) FROM t0 WHERE (COALESCE(((NULL) BETWEEN (NULL) AND (-2078552972)), CASE WHEN x'' THEN 5.58175382E8 END, 1380352360 COLLATE RTRIM, (((((((((((('')OR(0.3217513047024999)))AND('500649136')))OR(0.7284298770781329)))OR(NULL)))AND(x'')))OR('\\rJw\!(')))) GROUP BY ((((t0.c0) IS TRUE))>=((t0.c2 IN ()))), ((((~ (t0.c0)), ((t0.c1)<=(0.6852464687075986)), t0.c2))>((((t0.c0) NOTNULL), (((0.07075477453584833)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), t0.c1))), t0.c0; -- 0ms;
SELECT DISTINCT rtreenode(t0.c1, t0.c0) COLLATE BINARY FROM t0 WHERE (((((((((0.3644499065000586 COLLATE NOCASE)AND(0.3432042753597606 COLLATE NOCASE)))AND(('1669211278' IN ()))))AND(((0.3980551344069625) NOT BETWEEN (0.18097303717325375) AND (x'')))))OR(((0.8215689602727476)OR('-1319298726'))))); -- 0ms;
SELECT (t0.c0 COLLATE BINARY IN ()) FROM t0 WHERE (NULLIF('264327053' COLLATE RTRIM, ((('')) NOT BETWEEN ((x'21c3')) AND ((0.4633934677302628))))); -- 0ms;
SELECT NULL COLLATE NOCASE COLLATE NOCASE FROM t0 ORDER BY (((CAST(t0.c1 AS TEXT), CAST(t0.c0 AS NUMERIC), t0.c2, CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c2 END, 0X30f9e4a7))>((t0.c2 COLLATE RTRIM, ((t0.c2)&(t0.c1)), ((t0.c0)IS NOT(t0.c0)), CASE 0.8099048407666863  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END, '237609145'))) DESC; -- 0ms;
SELECT (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) IN ()) FROM t0 WHERE (CAST('6' COLLATE BINARY AS REAL)) GROUP BY (('')GLOB(NULL)), CASE t0.c1  WHEN ((((t0.c1)AND(t0.c0)))AND(0.18975517346488446)) THEN '1944179441' END, json_array(((t0.c2)LIKE(t0.c2)), x'', t0.c0 COLLATE NOCASE, x'') HAVING NULL; -- 0ms;
SELECT DISTINCT t0.c2 FROM t0 WHERE (((('')) NOT BETWEEN ((((x'') NOT NULL))) AND (((NOT ('558175382')))))); -- 0ms;
SELECT CASE WHEN ((t0.c1) NOT NULL) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) ELSE (t0.c0 IN ()) END, (((((0xffffffff96109e6e))<((t0.c0)))) NOTNULL), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (TYPEOF(t0.c1)) AND (((((t0.c0)AND(t0.c1)))OR(t0.c2)))) FROM t0; -- 0ms;
SELECT DISTINCT CHAR(((t0.c1) ISNULL)) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c2)<<(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c1 IN ()))AND(((((t0.c0)AND(0.05582597251945798)))OR(t0.c1)))) FROM t0 WHERE ((((((- (NULL)))AND(((-1.861636802E9)||(0.7310879499162471)))))OR(((((((((((((((((0.05263281625540961)OR(0Xffffffffee060940)))OR('')))OR(NULL)))AND(x'')))AND(NULL)))AND(NULL)))AND(0.36991134380915547)))OR(0.4805159592968987))))); -- 0ms;
SELECT DISTINCT (((('xk')AND('9223372036854775807')))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))) FROM t0; -- 0ms;
SELECT ALL CASE WHEN ((t0.c2)||('1316553573')) THEN NULL WHEN CAST(t0.c2 AS REAL) THEN (t0.c1 IN (t0.c2)) WHEN '1441435308' THEN (NOT (t0.c0)) END FROM t0 LIMIT 2055770695; -- 0ms;
SELECT LAG(CASE WHEN HEX(t0.c1) THEN CAST(t0.c2 AS NUMERIC) END, t0.c1 COLLATE NOCASE, ((t0.c0 COLLATE BINARY) BETWEEN (t0.c0 COLLATE BINARY) AND ((- (t0.c0))))) OVER ( ROWS (- (((((t0.c1)AND(t0.c0)))AND(t0.c1)))) PRECEDING EXCLUDE NO OTHERS), ((json_remove('', t0.c1, t0.c0, t0.c0))IS NOT(COUNT(5.39314566E8))), ((t0.c2)*(t0.c2)) COLLATE RTRIM FROM t0 ORDER BY (- (t0.c1)) COLLATE NOCASE  NULLS LAST;SELECT ALL SUM(CAST(x'' AS TEXT)) FROM t0; -- 0ms;
SELECT DISTINCT ((LOWER(t0.c1))AND(CASE WHEN t0.c0 THEN t0.c0 END)), (((t0.c0 IN ())) BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND (t0.c0 COLLATE RTRIM)), ((((t0.c1)<<(t0.c1)))GLOB(((t0.c0)<(t0.c0)))) FROM t0 WHERE (0.8730684428546853); -- 1ms;
SELECT ALL NULL FROM t0; -- 0ms;
SELECT CASE WHEN ((t0.c0)>(t0.c0)) THEN CAST(t0.c0 AS BLOB) END FROM t0 WHERE ((((((+ ('110854740')))AND(x'02e7')))OR(((0.30308353999270277)>=(x''))))); -- 0ms;
SELECT (((((t0.c0, t0.c0, t0.c0))>((t0.c2, t0.c1, t0.c0)))) BETWEEN (((t0.c1)<<(t0.c1))) AND (((t0.c1) NOT BETWEEN ('d!w') AND (t0.c1)))), (((x'')) NOT BETWEEN ((((t0.c2)OR(t0.c0)))) AND ((((t0.c0) NOTNULL)))), (((t0.c1, t0.c1, t0.c2)) BETWEEN ((CAST(t0.c1 AS BLOB), ((((t0.c0)AND(NULL)))OR(t0.c2)), AVG(t0.c0))) AND ((CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END, ((t0.c1) NOT BETWEEN (t0.c0) AND (-1223949814)), CASE WHEN t0.c1 THEN 0.3699749508322516 ELSE t0.c2 END))) FROM t0 WHERE ((+ (NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT 0.6970617837960597 FROM t0; -- 0ms;
SELECT t0.c1 FROM t0 WHERE ((+ (((NULL)<=(x'ad85'))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0; -- 1ms;
SELECT ALL rtreenode(t0.c0 COLLATE NOCASE, (('-113901098')<=(t0.c1))), ((t0.c1 COLLATE BINARY) ISNULL), ((((t0.c1) IS FALSE)) BETWEEN ((~ (t0.c2))) AND (((t0.c1)!=(t0.c1)))), (- (UNLIKELY(-492459801))), ((SUM(t0.c2))>(((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))AND(t0.c1)))AND(t0.c1)))) FROM t0 GROUP BY ((CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)<(NULLIF(DISTINCT t0.c2, t0.c1))); -- 0ms;
SELECT DISTINCT '1268611626' FROM t0 WHERE (CAST('0.9632345503281988' COLLATE BINARY AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((t0.c2)) NOT BETWEEN ((COUNT(*))) AND ((t0.c2 COLLATE BINARY))), ((CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END) BETWEEN (0.6014321524375997 COLLATE NOCASE) AND (((t0.c1) IS TRUE))), CASE WHEN ((t0.c2)+(t0.c2)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END FROM t0 WHERE ((NULL IN ()) COLLATE RTRIM) LIMIT -574254085; -- 0ms;
SELECT DISTINCT LAST_VALUE(((((t0.c2 COLLATE NOCASE)OR(t0.c0 COLLATE BINARY)))AND(((t0.c2)IS NOT(t0.c2))))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT TOTAL(x'') OVER (), (- (((t0.c2)OR(NULL)))), (((~ (t0.c0))) NOT BETWEEN ((((t0.c2))=((t0.c1)))) AND (CASE t0.c1  WHEN t0.c1 THEN t0.c0 END)) FROM t0 WHERE ((((((((((('0.2249690444919593') NOT BETWEEN ('194359341') AND (x'')))OR(x'6c1f' COLLATE BINARY)))OR(((x'') BETWEEN (NULL) AND ('-860593163')))))OR(((x'')==(12727903)))))AND((NOT (''))))); -- 1ms;
SELECT DISTINCT (~ (t0.c2)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY IFNULL(DISTINCT CAST(t0.c2 AS BLOB), CAST(t0.c1 AS REAL)) DESC  NULLS FIRST GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM t0; -- 0ms;
SELECT ALL SUM(NULL) OVER () FROM t0 WHERE ((((('1885168848') NOT BETWEEN ('') AND (0.8095300039654696)))>>(0.7261551232256294 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c1)OR('')))OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))>>(((t0.c0)<=('406346717')))) FROM t0; -- 0ms;
SELECT (((t0.c0)) BETWEEN ((t0.c2 COLLATE BINARY)) AND ((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN 0.13008312678145828 END))) FROM t0 NOT INDEXED; -- 0ms;
SELECT ALL (((t0.c1)) NOT BETWEEN (((t0.c0 IN ()))) AND (((((t0.c1, t0.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c1)) AND ((t0.c2, t0.c2, t0.c1)))))) FROM t0; -- 0ms;
SELECT ALL (((+ (t0.c2))) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c2)<>(((t0.c0)IS(t0.c1)))) FROM t0 LIMIT -9223372036854775808 OFFSET 1515344457; -- 1ms;
SELECT GROUP_CONCAT((t0.c1 IN ())) OVER () FROM t0; -- 0ms;
SELECT CAST(x'' COLLATE BINARY AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c1) NOTNULL) FROM t0 WHERE ((NOT (CAST('' AS REAL)))); -- 1ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT t0.c0 FROM t0 WHERE ((LIKELIHOOD('', 0.6683832387855908) IN ())); -- 0ms;
SELECT CUME_DIST() OVER () FROM t0; -- 0ms;
SELECT ALL (- (CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)), ((((((t0.c0)AND(t0.c2)))AND(t0.c0)))!=((t0.c2 IN (t0.c1)))), '-1615781579' FROM t0 LIMIT 1047199815; -- 0ms;
SELECT ALL GROUP_CONCAT(((((t0.c1)AND(t0.c2)))OR(t0.c1))), (((((t0.c2)) BETWEEN ((t0.c1)) AND ((0.7820392309611199)))) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (t0.c1)), (((((((((((t0.c0)AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))OR(t0.c0)), '-789378558', CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN 1.88576162E9 ELSE t0.c1 END, ((t0.c1)||(t0.c1)), ((t0.c0)/(t0.c1))))==(((t0.c1 IN ()), t0.c2, ((t0.c2)=(t0.c0)), (~ (t0.c1)), t0.c2 COLLATE BINARY))), MAX((t0.c1 IN (''))), MIN(((t0.c1)GLOB(0.4624029589752884))) FROM t0 WHERE (((STRFTIME(x'', 0Xffffffffce92ef4b, x'e233', NULL, NULL))-(UNLIKELY('+J9')))); -- 0ms;
SELECT DISTINCT NULL FROM t0 ORDER BY ((0x37505fa)|(((((t0.c0)OR(t0.c2)))OR(t0.c0)))) ASC  NULLS LAST, (((~ (t0.c0)))>>(((t0.c0)*(t0.c2)))) DESC  NULLS LAST; -- 1ms;
SELECT CASE (t0.c2 IN ())  WHEN CAST(t0.c2 AS BLOB) THEN ((t0.c2)<>(t0.c2)) END, (((((((t0.c2, t0.c0, t0.c0)) NOT BETWEEN ((t0.c2, x'f8db', t0.c2)) AND ((x'fa46', t0.c2, t0.c2))))AND((- (t0.c2)))))AND(CASE t0.c1  WHEN t0.c2 THEN t0.c2 END)), t0.c0 FROM t0 ORDER BY (((((t0.c1))<((t0.c2))))<>(((t0.c1) NOT BETWEEN (x'') AND (t0.c2)))); -- 0ms;
SELECT DISTINCT AVG(((((((((((((t0.c2)AND(t0.c1)))OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))AND(''))) FROM t0 LIMIT -604922907; -- 0ms;
SELECT ALL (TRIM(DISTINCT t0.c0) IN ()) FROM t0 GROUP BY ((((json_insert(t0.c0, t0.c1, t0.c2))AND(LIKELY(DISTINCT t0.c0))))OR(x'' COLLATE NOCASE)), ((CASE WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0)>=(t0.c2)))), (- (CAST(t0.c1 AS INTEGER)));SELECT ALL t0.c0 FROM t0 WHERE (CAST((('') BETWEEN (2138493980) AND (0.6606739993643987)) AS REAL)) ORDER BY CASE WHEN ((t0.c1)>(t0.c0)) THEN (t0.c0 IN (t0.c1)) WHEN CASE WHEN t0.c1 THEN 'C*^4dbh2h' END THEN t0.c2 COLLATE BINARY WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c0 END THEN CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 END WHEN 0X7a889247 THEN (t0.c0 IN (t0.c2)) WHEN CAST(t0.c0 AS BLOB) THEN ((((t0.c2)AND(t0.c1)))OR(t0.c2)) ELSE (((t0.c0)) BETWEEN ((t0.c1)) AND ((NULL))) END  NULLS LAST LIMIT 1057428709; -- 0ms;
SELECT (- (0.9834703494108954)) FROM t0 WHERE (((((((('-1442570278')AND(-3.02365494E8)))OR(1698188922))))==((((x'7cfd') NOT BETWEEN (NULL) AND ('1e500')))))); -- 0ms;
SELECT CASE t0.c0  WHEN t0.c1 THEN t0.c1 END COLLATE BINARY, (json_extract(t0.c0, t0.c2) IN (TIME('-688546566', t0.c0, t0.c1))), ((((((t0.c0)OR(t0.c2)))OR(t0.c2))) BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c2 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT (((((((((t0.c1 IN (t0.c0, 0Xb33269d)))AND(((t0.c0)GLOB(t0.c1)))))OR(t0.c1 COLLATE RTRIM)))OR(((t0.c1)>(t0.c2)))))AND(CAST(t0.c1 AS NUMERIC))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((t0.c1 COLLATE RTRIM)OR((~ (t0.c2)))))AND(((t0.c1)IS(t0.c2)))))OR(GLOB(t0.c0, t0.c1))))OR(((((t0.c1)OR(t0.c2)))AND(t0.c2)))) FROM t0 WHERE (((((2.097120621E9) IS FALSE)) IS FALSE)) GROUP BY ((((((((((t0.c2)GLOB(t0.c1)))OR((- (t0.c2)))))AND((t0.c2 IN ()))))OR(t0.c0)))OR(t0.c2 COLLATE RTRIM)) HAVING TRIM(DISTINCT (((t0.c0, t0.c2, t0.c0, t0.c1, t0.c2))>=((0.7543773162256469, t0.c0, t0.c2, t0.c1, t0.c2))), NULL); -- 0ms;
SELECT DISTINCT (AVG(t0.c0) IN ()) FROM t0 WHERE ((+ (x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((t0.c1) ISNULL)) NOT BETWEEN (((t0.c1) ISNULL)) AND (((t0.c0)*(t0.c2)))) FROM t0 WHERE (((((((0.5373249734898927)OR(NULL)))OR(NULL))) IS FALSE)); -- 0ms;
SELECT ALL 0.0035297855914899756, CUME_DIST() OVER (), ('?+|P1' IN ()), t0.c2, (('-373253220') BETWEEN ('1893107004') AND (((t0.c1)<=('J?')))) FROM t0 UNION SELECT DISTINCT ((CAST(0.9340720452136245 AS TEXT)) NOT BETWEEN (((t0.c2) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))), (~ ((0.7231076394643722 IN ()))), ((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN (CASE NULL  WHEN t0.c2 THEN t0.c2 END, LOWER(t0.c2), ((((t0.c0)OR(t0.c0)))AND(t0.c1)))), (~ ((NULL IN ()))), CASE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0))  WHEN ((t0.c2) IS FALSE) THEN t0.c1 ELSE (t0.c2 IN ()) END FROM t0; -- 0ms;
SELECT DISTINCT (+ (((t0.c0)>>(t0.c2)))) FROM t0; -- 0ms;
SELECT DISTINCT (- (CAST(t0.c2 AS NUMERIC))) FROM t0 WHERE (((((0.5543674563326582) NOT NULL)) NOT BETWEEN ((NOT (''))) AND ((- (NULL))))); -- 0ms;
SELECT DISTINCT t0.c0, CAST(CAST(t0.c0 AS REAL) AS INTEGER), (((t0.c0 IN (t0.c0))) BETWEEN (COUNT(*)) AND (((t0.c0)/(0.028412385329339762)))) FROM t0 WHERE ((((((x''))>((NULL)))) BETWEEN ('') AND (CAST(NULL AS NUMERIC)))) LIMIT 247130086 OFFSET 1182966465; -- 0ms;
SELECT DISTINCT (~ (CAST(t0.c2 AS REAL))) FROM t0; -- 0ms;
SELECT ALL LAG(CAST(((NULL)*(t0.c0)) AS INTEGER), (NOT (x'')), ((((((t0.c2) NOTNULL))OR(((t0.c1)LIKE(t0.c0)))))OR(((t0.c1) NOT BETWEEN (NULL) AND (t0.c1))))) OVER ( PARTITION BY NULLIF(((t0.c1) IS FALSE), t0.c2), (((t0.c0)) BETWEEN ((((t0.c2) NOTNULL))) AND ((((0.4213398966911831) NOTNULL)))) GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), (~ (((t0.c1) NOT NULL))), (((- (t0.c0))) NOT BETWEEN (((t0.c1) IS TRUE)) AND (((t0.c0)<(t0.c1)))), (((t0.c2 IN (t0.c2, t0.c2))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c2 END) AND (MIN(t0.c0))), CASE WHEN AVG(t0.c2) THEN ((t0.c2)-(t0.c0)) END FROM t0 WHERE (((CASE WHEN NULL THEN 0.8304771774055415 WHEN NULL THEN 0.2868373265462404 WHEN 0.09098881935732273 THEN '-1091621779' END) IS FALSE)); -- 0ms;
SELECT DISTINCT ((NULLIF(t0.c1, t0.c1)) BETWEEN (((((t0.c0)AND(t0.c2)))AND(t0.c2))) AND ((t0.c2 IN (t0.c1)))), CASE ((t0.c0)LIKE(t0.c2))  WHEN '264327053' THEN (+ (t0.c0)) END, SUM(json_array(t0.c2, t0.c0)) FROM t0 WHERE ((((NULL) ISNULL) IN ())); -- 0ms;
SELECT DISTINCT ((((((((((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))AND(t0.c0)))))AND((t0.c2 IN ()))))AND(((t0.c0) IS TRUE))), (((((t0.c2 IN (t0.c1)))AND((t0.c0 IN (x'')))))AND(t0.c1)), LAST_VALUE(((((t0.c0)AND(t0.c2))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (t0.c1 COLLATE RTRIM))) OVER () FROM t0 WHERE (1383692181) ORDER BY ((((NULLIF(DISTINCT NULL, t0.c2))OR(((((t0.c0)AND(t0.c2)))OR(t0.c1)))))OR('0.7618030850725447')) DESC; -- 0ms;
SELECT '1129701475' FROM t0 GROUP BY (((((t0.c0)*(t0.c2))))>=((CAST(t0.c1 AS BLOB)))); -- 0ms;
SELECT DISTINCT (((t0.c1) IS TRUE) IN ()), QUOTE(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))), CASE (t0.c0 IN ())  WHEN t0.c0 THEN (((t0.c1))<((t0.c1))) END, (- (((t0.c2) NOTNULL))), LTRIM((~ (t0.c0)), ((t0.c0) NOT NULL)) FROM t0 WHERE (CAST(ABS(x'') AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((t0.c2 COLLATE NOCASE) BETWEEN ('%&p[m^4y') AND (((t0.c2) IS TRUE))), CAST((NOT (t0.c0)) AS BLOB), t0.c1, CAST(CASE NULL  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END AS BLOB), ((((CAST(1709492412 AS TEXT))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c1 END)))OR(t0.c0 COLLATE NOCASE)) FROM t0 GROUP BY (((((((t0.c1, t0.c1, t0.c2)) BETWEEN ((t0.c2, '558175382', t0.c2)) AND ((t0.c0, t0.c0, t0.c1))))OR((((t0.c2)) NOT BETWEEN ((x'')) AND ((t0.c2))))))AND(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)) ORDER BY ((((((((UNLIKELY(t0.c1))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))))AND(CAST(t0.c1 AS TEXT))))OR((~ (t0.c1)))))AND(CAST(t0.c1 AS NUMERIC))) LIMIT 1706887716; -- 0ms;
SELECT ((((t0.c1)<>(t0.c1))) NOT BETWEEN (CAST(t0.c2 AS REAL)) AND ((((t0.c1, t0.c0, t0.c2))<=((t0.c0, t0.c1, t0.c0))))) FROM t0 WHERE ((((0.3270183638400559 IN (x'f3e1'))) NOT NULL)); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0 WHERE ((CASE WHEN NULL THEN -2104947132 END IN ())); -- 0ms;
SELECT DISTINCT (t0.c1 COLLATE RTRIM IN (((t0.c2) IS TRUE), ((((t0.c0)AND(t0.c2)))OR(t0.c0)))) FROM t0 WHERE (CAST(((0x1d495bb5)-('<''')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END)>>(((t0.c2)<(-4.92459801E8)))), CAST((t0.c0 IN (t0.c2)) AS TEXT), (((t0.c2)>>(t0.c0)) IN ()) FROM t0 WHERE (((NULL)IS(NULL)) COLLATE BINARY); -- 0ms;
SELECT ((json_patch(t0.c0, t0.c1))*(CASE WHEN t0.c0 THEN 0.0 ELSE t0.c1 END)) FROM t0 WHERE ((((((0.490577658084436)AND(0.7077900892467677)))AND(x'f1ce7164')) IN ((NOT (0.8765765076578608))))); -- 0ms;
SELECT ALL (((- (NULL))) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0) NOT NULL) FROM t0 WHERE ((((NOT (x'd6a7'))) BETWEEN ((0.03290995525708762 IN ())) AND ((NULL IN (x''))))); -- 0ms;
SELECT (((t0.c1)) BETWEEN (((((NULL, t0.c1, t0.c0))>((t0.c1, t0.c1, t0.c2))))) AND ((CASE '0.39365861937298086'  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN NULL END))), ((x'3b04')*(NULLIF(DISTINCT t0.c0, t0.c2))), IFNULL(((((((((t0.c1)AND(t0.c1)))OR(0xffffffffd5a09f98)))OR(NULL)))AND(t0.c0)), MIN(t0.c1)) FROM t0 WHERE (CASE (- ('T2*'))  WHEN PRINTF(x'', 0.17110010035101297, x'ce3e') THEN -785236435 WHEN '-492459801' THEN CASE '-1121364341'  WHEN 0.42761774621480375 THEN x'' WHEN 0.355777767722272 THEN 4.0027723E7 WHEN 0X1877e466 THEN 'n1*8h[' ELSE x'7f0d' END WHEN ((x'')+(0.43661953246500684)) THEN (x'' IN (x'', 0.04378000201268728)) ELSE ((0.7780612915508099) BETWEEN (NULL) AND ('Lㄊlx틱u꒹R')) END) GROUP BY (((t0.c1)>>(0.1916866389284304)) IN ()), CASE WHEN (+ (t0.c0)) THEN ((t0.c2)IS(0Xffffffffe7c50ce2)) END, 'B+w&d⁧I' ORDER BY t0.c2 DESC  NULLS FIRST; -- 0ms;
SELECT ((CASE WHEN t0.c1 THEN t0.c1 END) NOT BETWEEN ((~ (t0.c1))) AND (AVG(t0.c1))), ((0.1208212739266008 IN ()) IN ()), (- (CASE t0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)), LAG(-6.88546566E8, LOWER(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))), CAST((+ (t0.c1)) AS NUMERIC)) OVER (), ((t0.c1) NOTNULL) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ((TRIM(DISTINCT NULL))*(((t0.c1) ISNULL))) FROM t0 WHERE ((((x'')) NOT BETWEEN ((0.2594338102890521)) AND ((0.530592037970639))) COLLATE BINARY) GROUP BY ((((t0.c0)!=(t0.c0))) NOT NULL), NULL, NULLIF(DISTINCT ((((t0.c1)AND(t0.c2)))OR(t0.c2)), ((((t0.c1)AND(t0.c1)))OR(t0.c0))); -- 0ms;
SELECT ALL ((CASE WHEN t0.c1 THEN t0.c1 END)IS((t0.c2 IN ()))), (NOT (AVG(t0.c0))), t0.c2 FROM t0 WHERE (((NULL) NOTNULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT t0.c0, TOTAL(COUNT(*)), CUME_DIST() OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP) FROM t0;SELECT DISTINCT MIN(((((t0.c1)OR(t0.c2)))OR(t0.c1))) FROM t0 WHERE (CASE CASE WHEN x'' THEN 0.6770128060922488 END  WHEN (('tR')<=(NULL)) THEN CAST('' AS REAL) WHEN CAST(x'a6ad' AS NUMERIC) THEN (((0.6728921593684775, x'', ''))<((0.28334567442397895, '-964899835', '0.7923399746061665'))) WHEN ('꘿1XMd^4' IN ()) THEN ((NULL)+(-1937703655)) WHEN CASE x'a025'  WHEN x'' THEN 0.9115045334419173 ELSE '柳v' END THEN SQLITE_COMPILEOPTION_GET(0xffffffffe7c50ce2) WHEN (NOT (5.800089E7)) THEN (('-545157581') NOT BETWEEN (-1.193782762E9) AND (0.3968806445631172)) END); -- 0ms;
SELECT ALL LIKELY(DISTINCT t0.c0 COLLATE NOCASE) FROM t0; -- 0ms;
SELECT DISTINCT (~ ((((t0.c0, t0.c2, t0.c1))<((t0.c1, t0.c0, t0.c0))))) FROM t0 WHERE (CAST(((x'') BETWEEN (x'') AND (x'')) AS BLOB)); -- 0ms;
SELECT CAST(CAST(t0.c1 AS INTEGER) AS INTEGER) FROM t0 WHERE (((((0.20856954339887857)GLOB(NULL))) NOT BETWEEN (NULL) AND ('9u' COLLATE BINARY))) ORDER BY t0.c2; -- 0ms;
SELECT DISTINCT ((((CAST(t0.c0 AS REAL))AND((((t0.c2, t0.c1, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, t0.c1, t0.c2))))))AND(((t0.c0)>>(t0.c2)))) FROM t0; -- 0ms;
SELECT ALL CAST(t0.c0 AS TEXT) FROM t0 NOT INDEXED WHERE (((((((((((-5.55538506E8)OR(0.00815445260731229)))OR(0.8101126228818258)))AND('-1329466591')))OR(x'')))<('1026985203'))); -- 0ms;
SELECT DISTINCT (- (CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END)), ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) COLLATE RTRIM, NULL FROM t0 WHERE (CAST((('*')LIKE('')) AS BLOB)) LIMIT 427331623; -- 0ms;
SELECT ((((x'406b')IS(t0.c1)))%(t0.c2 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c1)OR(t0.c0)))OR(t0.c1))) NOT BETWEEN (((t0.c1) NOT NULL)) AND (((t0.c1)>(t0.c2)))) FROM t0 WHERE ((((((((('')OR(0.12959749629263517)))AND('뉂1mE*')))AND(TRIM(NULL))))AND((('-609282771') NOT BETWEEN ('-1121364341') AND (NULL))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(0.2493956119098203) FROM t0; -- 0ms;
SELECT LIKE(CAST(t0.c1 AS NUMERIC), MIN(t0.c0)) FROM t0; -- 0ms;
SELECT ALL COUNT((t0.c1 IN ())) OVER () FROM t0; -- 0ms;
SELECT ALL 0.7102900954511937, CAST(((((t0.c0)OR(t0.c2)))AND(t0.c1)) AS TEXT), TOTAL(ABS(0Xffffffffeb9b5c9e)) FROM t0; -- 0ms;
SELECT DISTINCT (((((((('')OR(t0.c0)))OR(t0.c2)))AND(t0.c1 COLLATE NOCASE)))AND(CASE WHEN t0.c1 THEN t0.c2 END)) FROM t0; -- 0ms;
SELECT DISTINCT (+ (x'')) FROM t0 WHERE ((((((x'' IN ()))AND((((NULL))<>((x''))))))OR((((x'', x'', 'hM'))>((x'', '-460069056', 0.27923391159161226)))))); -- 0ms;
SELECT DISTINCT t0.c1, (((t0.c1) NOT BETWEEN ('') AND (t0.c1)) IN (((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))), (((((((t0.c1)OR(t0.c2)))OR(t0.c0))))==(((NOT (t0.c2))))) FROM t0; -- 0ms;
SELECT TYPEOF(t0.c1 COLLATE NOCASE) FROM t0; -- 0ms;
SELECT json_object(((t0.c0)<=(t0.c2)), (((t0.c0, t0.c0, t0.c2))>((t0.c1, 0.7923399746061665, t0.c2)))) FROM t0 NOT INDEXED WHERE (CAST(((0.5015747615220206)<<(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (+ (((t0.c0)OR('0.18097303717325375')))) FROM t0 WHERE (((((0.199631811125631)) NOT BETWEEN ((0.8552776920003697)) AND ((x''))) IN ())); -- 0ms;
SELECT (CASE WHEN t0.c2 THEN t0.c0 WHEN -1.193782762E9 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END IN ()) FROM t0; -- 0ms;
SELECT ALL MIN((- (0.01002995893382952))), ((('k|.zc9'))==((((t0.c0)LIKE(t0.c1))))), json_patch(NULL COLLATE NOCASE, ((t0.c1)LIKE(t0.c0))) FROM t0 WHERE ((+ (((x'8444')<<(NULL))))); -- 0ms;
SELECT GROUP_CONCAT(t0.c0), CAST(CASE t0.c2  WHEN t0.c1 THEN '~T' WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE NULL END AS NUMERIC), NULLIF('1074438413', t0.c2) FROM t0; -- 1ms;
SELECT DISTINCT ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))) NOT BETWEEN (((t0.c0)!=(t0.c1))) AND (TYPEOF(DISTINCT t0.c0))) FROM t0 GROUP BY CAST(json_object(t0.c2, t0.c0) AS INTEGER);SELECT DISTINCT ((((t0.c1)IS(t0.c2)))<>(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))) FROM t0 WHERE ((((('')IS('-1420807104'))) NOT BETWEEN (CASE WHEN NULL THEN -7.35164892E8 WHEN 1.624864458E9 THEN 0X7665d7b WHEN x'c8f3' THEN '' END) AND (CASE WHEN NULL THEN x'' WHEN x'' THEN 100047751 WHEN x'12e6' THEN 0Xffffffffa4c8a73a ELSE NULL END))) GROUP BY ((t0.c2)OR(CASE t0.c1  WHEN '' THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)) LIMIT -1706333473; -- 0ms;
SELECT NULLIF((t0.c1 IN ()), TRIM(DISTINCT t0.c1)) FROM t0 NOT INDEXED; -- 0ms;
SELECT ALL (((NOT (x'')))IS NOT(CASE WHEN t0.c2 THEN 0.9181602212995504 ELSE t0.c0 END)), ((t0.c1)>>(t0.c2)) COLLATE RTRIM, CAST(CASE t0.c1  WHEN t0.c2 THEN NULL ELSE t0.c0 END AS REAL) FROM t0 WHERE (CASE CASE WHEN NULL THEN NULL END  WHEN ((1606598048)|('-829231285')) THEN CAST('0.2249690444919593' AS TEXT) WHEN ((1.441435308E9)<(NULL)) THEN ((x'') IS FALSE) WHEN (('') IS TRUE) THEN ((x'')IS NOT(1247463146)) ELSE ('-1420807104' IN ()) END); -- 0ms;
SELECT DISTINCT COUNT(((t0.c2)<=(t0.c0))) OVER () FROM t0 WHERE (CASE (('蔼-')GLOB('958718318'))  WHEN (('{uv''#%') NOT BETWEEN (-1e500) AND (0.5208501901156789)) THEN ((NULL) NOT NULL) WHEN (~ ('1444342326')) THEN CAST(0.3941738194432598 AS BLOB) WHEN ((NULL) BETWEEN (0.6057856493784055) AND (x'')) THEN CAST('552866351' AS BLOB) ELSE (('') NOT NULL) END); -- 0ms;
SELECT ((t0.c2)<=(NULL)) COLLATE RTRIM FROM t0 WHERE ((((NULL IN ()))*(0.9944384814684543))); -- 0ms;
SELECT ALL ((t0.c2) NOT BETWEEN (((((((((x'')OR(t0.c0)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1))) AND (((((((((t0.c2)AND(t0.c1)))OR(t0.c2)))AND(t0.c2)))OR(t0.c0)))) FROM t0; -- 0ms;
SELECT ALL ((t0.c2)<(CAST(t0.c0 AS INTEGER))) FROM t0 WHERE (((((0.19847987075311446)<(NULL))) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST(((t0.c0) IS TRUE) AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT (((CASE t0.c1  WHEN t0.c1 THEN t0.c2 END, ((t0.c2)GLOB(t0.c1)), ((x'7ef6') NOTNULL)))<=((((((t0.c1)OR(NULL)))OR(t0.c0)), ((((t0.c1)AND(t0.c0)))OR(t0.c2)), ((((((((t0.c0)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c2))))), (((('-272430331')IS(t0.c0)))<<(((t0.c1)>>(t0.c1)))), (((t0.c0) BETWEEN (t0.c1) AND (t0.c2)) IN ()) FROM t0 WHERE (((x'')GLOB(x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ('5-') AND (t0.c2)), ((t0.c2) NOT BETWEEN (((NULL)>=(t0.c1))) AND (CASE WHEN t0.c2 THEN t0.c0 END)), TOTAL(1.88576162E9), CAST(((t0.c0)>=('848289888')) AS NUMERIC), (((t0.c0, t0.c0, t0.c1)) BETWEEN ((CAST(t0.c0 AS INTEGER), (t0.c2 IN (t0.c2)), (t0.c2 IN ()))) AND ((TRIM(DISTINCT t0.c2, t0.c1), t0.c0 COLLATE NOCASE, ((t0.c0)/(t0.c2))))) FROM t0 WHERE (((((NULL) NOT BETWEEN (171894970) AND ('')))GLOB((x'' IN ())))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(((t0.c1)>=(t0.c2)), 0.18095494181056748) FROM t0 WHERE (CASE ((0xffffffffeda521e7)!=(0X4faad43a))  WHEN (((('*/JM談b')AND(0xffffffffdbbabd5c)))OR(-1193782762)) THEN (NOT (1516782170)) WHEN ((x'912d5c72')&('407022019')) THEN ((NULL) IS TRUE) WHEN x'' THEN (((0.8781239409689597)) NOT BETWEEN ((0.5477400537142878)) AND (('611819191'))) ELSE (- ('')) END) LIMIT 1098848181 OFFSET 11731962; -- 0ms;
SELECT ALL AVG(t0.c1) OVER ( ORDER BY ((((t0.c2) BETWEEN (t0.c1) AND (t0.c2)))IS NOT(CASE WHEN t0.c1 THEN t0.c1 END)), CAST(((t0.c1) NOTNULL) AS NUMERIC) ASC, t0.c2  NULLS LAST) FROM t0 GROUP BY (('1709492412')==(NULL)) HAVING CAST(CAST(t0.c2 AS TEXT) AS REAL) LIMIT 1995194856; -- 0ms;
SELECT t0.c1 FROM t0 WHERE (CAST(((0Xffffffffc2ee3f5d) BETWEEN (x'') AND (0.8412938705482308)) AS BLOB)) GROUP BY (((t0.c2, t0.c2, t0.c1)) NOT BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((t0.c1, t0.c0, t0.c1))) COLLATE BINARY, (((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) IN ()), t0.c0; -- 0ms;
SELECT DISTINCT ((NULL)GLOB(TOTAL(t0.c0))), NULL, ROW_NUMBER() OVER (), SUM((- (t0.c0))) OVER (), t0.c2 FROM t0 ORDER BY NULL DESC  NULLS LAST; -- 0ms;
SELECT MAX(-1969917369), CASE WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) THEN (~ (t0.c1)) ELSE ((t0.c2)&(t0.c1)) END, ((TIME(t0.c1, t0.c1, t0.c0, t0.c1, t0.c1)) NOT NULL) FROM t0 WHERE ((NOT (CASE ''  WHEN NULL THEN '1830921752' WHEN x'' THEN 0.7284298770781329 WHEN '' THEN NULL WHEN x'' THEN 0x7a63e9bb WHEN '1939348147' THEN '67' END))); -- 0ms;
SELECT ALL SUM(LIKELY(t0.c1)) OVER (), x'', CASE WHEN ((t0.c1) IS TRUE) THEN (+ (t0.c0)) ELSE ((((t0.c2)AND(t0.c2)))OR('3㒎%|T	')) END FROM t0; -- 1ms;
SELECT ((~ (t0.c0)) IN ()) FROM t0 WHERE ((- (x'')) COLLATE RTRIM); -- 0ms;
SELECT TOTAL(SQLITE_SOURCE_ID()) FROM t0 WHERE (((((CAST(NULL AS BLOB))AND((('uL_!4Av.') NOTNULL))))OR(LIKELY(0.503078507953497)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN t0.c1 END)>(((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))), CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END COLLATE NOCASE, (((t0.c1)) BETWEEN ((((t0.c1) NOT NULL))) AND ((t0.c2 COLLATE RTRIM))) FROM t0 WHERE (TRIM((((x'c9cb'))>=((0.5645032560430987))), CASE x''  WHEN 0X404e8973 THEN x'' ELSE '㍽J)_' END)); -- 0ms;
SELECT ALL CASE CAST(t0.c1 AS INTEGER)  WHEN CAST(t0.c2 AS REAL) THEN t0.c0 ELSE (((t0.c2, x'', t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c2, t0.c2, t0.c0, t0.c2, t0.c2))) END FROM t0; -- 0ms;
SELECT DISTINCT (NOT (((NULL)||(t0.c1)))), ROW_NUMBER() OVER (), (('-1086639211' COLLATE BINARY)OR(t0.c2 COLLATE NOCASE)), (- ('')), json_insert(t0.c2 COLLATE NOCASE, t0.c2 COLLATE NOCASE, (t0.c0 IN ())) FROM t0 WHERE (LTRIM(x'') COLLATE BINARY); -- 1ms;
SELECT ALL (CASE t0.c0  WHEN t0.c1 THEN t0.c1 END IN ()) FROM t0 WHERE (CAST((+ ('0.07682719634178936')) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT NULL)) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (SUM(t0.c0))) FROM t0; -- 0ms;
SELECT ALL MAX(((t0.c1) NOT NULL)) FROM t0; -- 0ms;
SELECT DISTINCT CAST((- (t0.c1)) AS INTEGER) FROM t0 WHERE ((((((0.020719777529110806)IS(NULL))))>((json_valid(''))))); -- 0ms;
SELECT ALL COUNT(*) OVER (), IFNULL(0X33ea2b2d, ((t0.c0) IS TRUE)), '}rH4' FROM t0 WHERE ((((NOT (-4.00841341E8)))<(((((((((NULL)OR(0Xfffffffff4846dae)))OR(NULL)))AND(0.9857501909065578)))AND(x''))))); -- 0ms;
SELECT LAST_VALUE(((('218285332')*(t0.c1)) IN ())) OVER ( ORDER BY ((-1128014550)LIKE((t0.c2 IN (t0.c0))))  NULLS FIRST) FROM t0 WHERE (((x'' COLLATE NOCASE)>=((NOT (NULL))))) LIMIT -1049760350; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t0.c2 IN ())), ((json_array(t0.c0, t0.c2)) IS TRUE), CASE WHEN CASE WHEN t0.c1 THEN t0.c2 END THEN ((t0.c1) IS TRUE) ELSE t0.c1 END FROM t0;SELECT DISTINCT CASE WHEN CAST(t0.c0 AS NUMERIC) THEN (~ (t0.c0)) ELSE ((t0.c1)==(t0.c2)) END FROM t0; -- 0ms;
SELECT ALL COUNT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))), LAG(((t0.c2) NOT NULL) COLLATE NOCASE, ((((((t0.c2)OR(t0.c2)))OR(t0.c0))) NOT NULL), ((((t0.c2)OR(t0.c2)))>(((t0.c1) ISNULL)))) OVER (), COUNT(((((((((t0.c1)OR(t0.c1)))OR(t0.c2)))OR(t0.c2)))AND(t0.c0))) FROM t0; -- 7ms;
SELECT DISTINCT '1444342326' FROM t0 ORDER BY t0.c0; -- 0ms;
SELECT DISTINCT CAST(t0.c2 COLLATE NOCASE AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c1) IS FALSE)))<((t0.c0))), ((((SQLITE_COMPILEOPTION_USED(t0.c0))OR(CAST(t0.c1 AS BLOB))))OR(((t0.c2)!=(t0.c2)))), CAST(((t0.c0) NOTNULL) AS REAL) FROM t0 WHERE (((0xffffffffe2a5a8e7) NOT NULL)); -- 0ms;
SELECT DISTINCT LAG(CAST(((t0.c2)%(t0.c0)) AS REAL), ((t0.c2 COLLATE NOCASE)-(((NULL)OR(t0.c1)))), (((((t0.c0, t0.c2, t0.c0, t0.c0, t0.c0))==((t0.c1, t0.c1, t0.c1, t0.c2, t0.c0)))) ISNULL)) OVER () FROM t0 WHERE ((NOT (((x'')=(0.17235220032759568))))) ORDER BY x''  NULLS FIRST, '-䅹}❕_h'  NULLS LAST; -- 0ms;
SELECT ALL (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((t0.c2, t0.c2, t0.c2))) COLLATE RTRIM FROM t0 WHERE (0.49562190393175476) GROUP BY (((~ (t0.c0))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END) AND (t0.c1 COLLATE BINARY)) HAVING CAST(CAST(NULL AS INTEGER) AS NUMERIC); -- 0ms;
SELECT GROUP_CONCAT(((t0.c2)>(t0.c0))) FROM t0 WHERE (CASE ((((((((0.5334440960372667)AND('491346869')))OR(NULL)))OR(NULL)))OR(x''))  WHEN CASE WHEN NULL THEN '-735164892' WHEN x'' THEN NULL WHEN x'' THEN x'' END THEN (('0.483700328046789') NOT BETWEEN (NULL) AND (0.6048768067773889)) ELSE UPPER(DISTINCT 'SUS(*PuH') END); -- 0ms;
SELECT DISTINCT ((t0.c2) IS TRUE) COLLATE NOCASE, SUM(CASE WHEN x'' THEN t0.c1 ELSE t0.c0 END COLLATE BINARY) OVER ( ORDER BY 137648980 DESC  NULLS LAST), (CAST(t0.c1 AS BLOB) IN ()) FROM t0 WHERE (((((((x'')AND(0.1916866389284304)))AND(0.7252572935634457)))*((((NULL, '-928866870', NULL)) NOT BETWEEN ((0.17709836936756262, '436382094', NULL)) AND ((0.9543705618395839, x'eb05', x'9f4e')))))); -- 0ms;
SELECT ALL ((CASE WHEN t0.c0 THEN x'c58c' ELSE t0.c0 END)LIKE(674347350)) FROM t0 WHERE ((((~ (0.5609078317273254))) NOT BETWEEN ((((NULL))<>((',')))) AND ('L!' COLLATE RTRIM))) ORDER BY (t0.c1 COLLATE RTRIM IN ((t0.c1 IN ()), ((t0.c2) IS TRUE))) ASC, ((((t0.c1) NOTNULL))>=(((((t0.c2)AND(t0.c2)))OR(t0.c2)))), '-903712152'; -- 1ms;
SELECT 1646322352 FROM t0 WHERE ((+ (NULL))); -- 0ms;
SELECT PERCENT_RANK() OVER (), FIRST_VALUE(CASE CAST(t0.c1 AS INTEGER)  WHEN CASE WHEN t0.c1 THEN t0.c1 END THEN NULL END) OVER (), NULL FROM t0 WHERE ((NOT (LIKELIHOOD(DISTINCT NULL, 0.8559415206408467)))); -- 0ms;
SELECT DISTINCT (((t0.c1 IN ()))>=(((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))), CASE WHEN ((t0.c2) IS TRUE) THEN ((t0.c0)<>(t0.c0)) ELSE CASE WHEN t0.c1 THEN '0' END END, COUNT(CAST(t0.c1 AS BLOB)) FROM t0 WHERE (((((NULL) IS FALSE)) NOT BETWEEN (((((((((0x733c983d)AND(x'')))AND(x'')))OR('1lY^NO')))AND(''))) AND (((((NULL)OR('WS왋')))AND(x''))))); -- 0ms;
SELECT DISTINCT (SQLITE_COMPILEOPTION_GET(t0.c1) IN ()) FROM t0 WHERE ((CAST(0.8102406291902741 AS BLOB) IN (('⺱R' IN ())))); -- 0ms;
SELECT DISTINCT 0.7203171459320916 FROM t0 GROUP BY CAST(t0.c1 AS NUMERIC) COLLATE NOCASE, CAST((+ (t0.c1)) AS NUMERIC), -252104334;SELECT DISTINCT MAX(CAST(t0.c0 AS INTEGER)) FROM t0 NOT INDEXED; -- 0ms;
SELECT ALL (+ (((((((((t0.c2)AND(NULL)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))), (((t0.c0 IN ()))OR(((((t0.c2)AND(t0.c0)))OR(t0.c2)))), (- (t0.c2 COLLATE NOCASE)) FROM t0 WHERE (CAST(CAST('-688546566' AS NUMERIC) AS REAL)); -- 1ms;
SELECT DISTINCT (('') IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT LIKELIHOOD((('-1420807104')*(t0.c0)), 0.20820674669796257) FROM t0; -- 0ms;
SELECT ALL (- (((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0))<>((SUM(t0.c0)))) FROM t0; -- 0ms;
SELECT CASE AVG(t0.c1)  WHEN (NOT (t0.c0)) THEN t0.c1 COLLATE BINARY WHEN ((t0.c0)IS(t0.c1)) THEN t0.c2 COLLATE BINARY WHEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((0.15319537052036158))) THEN ((((t0.c2)AND(t0.c2)))AND(t0.c2)) WHEN (t0.c2 IN ()) THEN ((((t0.c2)OR(t0.c0)))OR(t0.c1)) WHEN t0.c2 THEN ((t0.c1)>>(t0.c2)) ELSE CAST(t0.c1 AS TEXT) END FROM t0 WHERE ((((((('1066650007') NOT BETWEEN (0.5334735290957198) AND (x'47c1')))OR(CASE x''  WHEN '1634883686' THEN 0.8784768575388399 END)))OR(LIKELIHOOD(DISTINCT x'', 0.5914859298062012)))); -- 0ms;
SELECT DISTINCT (((((- ('688538577')))AND(CASE WHEN t0.c1 THEN t0.c0 END)))AND(t0.c2 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT ((t0.c0 COLLATE NOCASE) IS TRUE) FROM t0 LIMIT 726212111; -- 1ms;
SELECT ALL CASE WHEN ((t0.c1) IS TRUE) THEN ((t0.c1) IS FALSE) END FROM t0; -- 0ms;
SELECT ALL TOTAL(TOTAL(t0.c1)), (((t0.c0 IN (t0.c0, t0.c1))) BETWEEN (((t0.c2)<(t0.c1))) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))OR(t0.c2)))), ((t0.c1) IS FALSE) COLLATE NOCASE FROM t0 WHERE (((TRIM(NULL))<=(x'' COLLATE NOCASE)));SELECT DISTINCT CAST((- (t0.c0)) AS NUMERIC), ((t0.c2)%(t0.c2)) COLLATE RTRIM, CHANGES() FROM t0 NOT INDEXED WHERE ((((NULL) NOT NULL) IN ())) UNION ALL SELECT DISTINCT '-1216256011', TOTAL(((t0.c1) IS TRUE)) OVER (), 0.8208312164427035 FROM t0 WHERE (x''); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY CAST(((((0.9656489512151215)AND(t0.c1)))OR(t0.c2)) AS TEXT) DESC, (((t0.c2)) BETWEEN ((CAST(t0.c2 AS REAL))) AND ((COALESCE(DISTINCT t0.c0, t0.c1))))) FROM t0 WHERE (LIKELY(DISTINCT (NULL IN ()))); -- 0ms;
SELECT DISTINCT (NOT (CAST(t0.c0 AS NUMERIC))) FROM t0 WHERE (CASE (((('-1343900897')AND(x'')))OR(1518416734))  WHEN ((((((((NULL)OR('kMxu')))AND('-1851475953')))AND(0.5731799094148086)))OR(958718318)) THEN ((0.7684134944061441) NOTNULL) WHEN ((0.3851034999270758)LIKE(0.570882251631398)) THEN (('%f') NOT BETWEEN (0.4330876250323781) AND (NULL)) WHEN ((NULL) IS TRUE) THEN (~ (NULL)) ELSE CAST(0.19748592246660135 AS REAL) END) LIMIT 491346869; -- 0ms;
SELECT DISTINCT (((((t0.c0) BETWEEN (t0.c2) AND (t0.c2))))>=(((('-103159230') BETWEEN (t0.c1) AND (t0.c0))))) FROM t0 WHERE ((((('c&뜼d') ISNULL)) NOT NULL)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY STRFTIME('1624864458', ((t0.c0) IS TRUE), ((t0.c2)IS NOT(t0.c1))) ASC) FROM t0; -- 0ms;
SELECT DISTINCT (- ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))) FROM t0 WHERE (0.15935724706052656); -- 0ms;
SELECT (((((t0.c0, t0.c1, t0.c1))<((t0.c1, t0.c2, x'')))) IS TRUE), CASE WHEN ((((t0.c1)OR(t0.c2)))AND(x'')) THEN (((t0.c0))>=((t0.c0))) ELSE ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END, ((MAX(t0.c1))<=(CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END)) FROM t0 WHERE ((((((1047387256))!=((NULL))))*((((0.7028485777685878))<((-1.741813175E9)))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c2)=(t0.c0))) FROM t0; -- 0ms;
SELECT MIN(((t0.c2) NOTNULL)) FROM t0 LIMIT 333612197; -- 0ms;
SELECT (((NULL IN ())) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (NULL)) FROM t0 WHERE (((((x'' IN ('40027723', x''))))>=(((NULL IN ()))))) GROUP BY (((((t0.c1)||(-1.777295762E9)), (t0.c1 IN (t0.c0)), CAST(t0.c0 AS INTEGER)))<=((t0.c2 COLLATE BINARY, ((t0.c2)GLOB(t0.c0)), ((((((((x'')AND(t0.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0))))), CASE WHEN t0.c0 COLLATE BINARY THEN '-2067584427' ELSE ((t0.c2)<=(t0.c1)) END, CAST((t0.c1 IN ()) AS REAL); -- 0ms;
SELECT ALL CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) AS BLOB), CAST(((t0.c2)GLOB(t0.c0)) AS NUMERIC), CASE SQLITE_VERSION()  WHEN t0.c1 THEN SUM(t0.c0) WHEN COUNT(*) THEN ((t0.c1)==(t0.c1)) WHEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN 4.0027723E7 END FROM t0 WHERE (((CASE x''  WHEN NULL THEN -195639810 ELSE x'' END)OR(NULL))); -- 0ms;
SELECT DISTINCT ((((((((MAX(t0.c2))AND(((((((((t0.c1)OR(t0.c0)))OR(t0.c1)))OR(t0.c0)))OR(t0.c2)))))OR(((t0.c0)<<(t0.c2)))))OR(t0.c0 COLLATE RTRIM)))AND(SUM(t0.c1))), NTILE((((t0.c2)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 END)) AND ((((t0.c0) NOT NULL))))) OVER (), (NOT (IFNULL(t0.c1, t0.c0))) FROM t0 WHERE (COALESCE(IFNULL(DISTINCT 'AO', 0.7254546133711407), (((6.11819191E8))=((x'')))));SELECT DISTINCT UNLIKELY((((t0.c2, '', t0.c1)) BETWEEN ((t0.c1, t0.c1, t0.c1)) AND ((t0.c0, t0.c2, t0.c2)))) FROM t0 WHERE (CAST((((((((((((('441468545')AND(0.18508740511647537)))AND(0x7a889247)))AND('f\n')))AND('B+W&D⁧I')))OR(0.8641160037100041)))AND(NULL)) AS REAL)); -- 0ms;
SELECT ALL CAST((- (t0.c1)) AS NUMERIC) FROM t0; -- 0ms;
SELECT CAST(CAST(t0.c1 AS NUMERIC) AS TEXT) FROM t0 WHERE (CASE ((NULL) IS TRUE)  WHEN x'2bb1' THEN (('1746870486') BETWEEN (NULL) AND (0X328fe060)) ELSE ((0.21682496708822463) BETWEEN (NULL) AND (x'')) END) ORDER BY CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END COLLATE RTRIM ASC; -- 0ms;
SELECT ((((t0.c2) ISNULL)) NOT BETWEEN (t0.c0) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN 0.5472573555998012 ELSE t0.c1 END)) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c1 COLLATE BINARY)>>('W\rSt')), (((t0.c1 IN ()))==(CASE t0.c1  WHEN t0.c2 THEN '^	A' WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END)), ((CAST(t0.c1 AS TEXT))==(CASE WHEN t0.c1 THEN t0.c1 END)) FROM t0; -- 0ms;
SELECT ALL CAST((t0.c2 IN (t0.c1)) AS INTEGER) FROM t0; -- 1ms;
SELECT DISTINCT SUM(((((t0.c1)AND(t0.c2)))AND(t0.c1))) FROM t0 WHERE ((((SQLITE_COMPILEOPTION_USED(NULL)))>=((NULL)))) GROUP BY t0.c0 HAVING ((((t0.c2)<=(t0.c1)))/(GLOB(t0.c2, t0.c2))); -- 0ms;
SELECT ALL 1.257526223E9 COLLATE RTRIM FROM t0 GROUP BY x'' HAVING MIN(((t0.c1)|(t0.c0))); -- 0ms;
SELECT ALL (((((t0.c1)<(t0.c1)), NULL, ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)), SQLITE_COMPILEOPTION_GET(t0.c2), (((x'')) BETWEEN ((t0.c2)) AND ((x'')))))<((t0.c0, CASE t0.c1  WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END, (('-1564562153')=(t0.c1)), ((t0.c2) NOT NULL), CAST(t0.c0 AS BLOB)))) FROM t0 ORDER BY t0.c2 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT MIN(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c2)))AND(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c1 FROM t0 WHERE (((('-1007054477', 0x39a76483, '688538577')) BETWEEN (((~ (215487933)), CAST(1257526223 AS BLOB), (((NULL))>((0.6171303769148881))))) AND ((CASE WHEN '1xU' THEN x'' WHEN '0.13810638561193322' THEN 0.6297805307210895 WHEN 0X15f509a0 THEN x'' END, (((('ip\F2')OR(x'ddf2')))AND(0x70d6853c)), '0.0')))); -- 0ms;
SELECT t0.c2 COLLATE NOCASE FROM t0 ORDER BY CASE ((((t0.c1)AND(t0.c0)))OR(t0.c2))  WHEN t0.c0 THEN ((t0.c0) NOTNULL) END; -- 0ms;
SELECT (NOT ((t0.c1 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT json_insert((+ (t0.c2)), ((((t0.c2)OR(x'')))OR(t0.c1)), (t0.c1 IN (t0.c2))), CASE LIKELIHOOD(DISTINCT t0.c1, 0.9128330572915981)  WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c2) NOTNULL) WHEN ((t0.c1)OR(t0.c0)) THEN ((t0.c2)+(t0.c1)) WHEN ((NULL) IS TRUE) THEN ((t0.c2) IS TRUE) END, CAST(((((((((((((0.39391792991716135)AND(t0.c2)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(t0.c0)) AS REAL) FROM t0 WHERE (((((((x'')IS('124149115')))AND('611819191')))AND(load_extension(NULL, x'')))) ORDER BY (((((t0.c0))<=((t0.c1)))) NOT BETWEEN (LIKE(t0.c1, t0.c1, '❕')) AND (x''))  NULLS LAST; -- 0ms;
SELECT NTH_VALUE((~ (t0.c1 COLLATE RTRIM)), t0.c1) OVER (), ((LTRIM(0.8183817762288544)) BETWEEN (((t0.c2)!=(t0.c1))) AND (t0.c0)), TRIM(DISTINCT (t0.c1 IN ()), LIKELIHOOD(DISTINCT t0.c1, 0.9120057495746837)) FROM t0 WHERE (0.11165083369714113 COLLATE NOCASE);SELECT ALL (((t0.c2) BETWEEN (t0.c0) AND (t0.c0)) IN (UNLIKELY(DISTINCT t0.c2))), ((((CAST(t0.c0 AS REAL))AND(t0.c2)))AND((+ (t0.c0)))), CAST(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END AS REAL) FROM t0; -- 1ms;
SELECT ALL CAST(t0.c1 COLLATE BINARY AS INTEGER), (~ ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND (('194359341'))))), ((((t0.c0) ISNULL))GLOB(('6?)xs' IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c1) IS TRUE)) OVER () FROM t0; -- 0ms;
SELECT CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)) AS INTEGER) FROM t0 WHERE (CASE 0.3680167798213124  WHEN ((x'') BETWEEN ('mSd}') AND ('on')) THEN (((1.127876525E9, '', NULL)) NOT BETWEEN ((0.10194226907087778, '-207690365', x'')) AND ((0X86e3869, '', '-996544055'))) END) ORDER BY t0.c2 ASC, t0.c2 ASC; -- 0ms;
SELECT ALL ((((NULL)OR(t0.c1 COLLATE RTRIM)))AND(TRIM(DISTINCT t0.c0))) FROM t0 WHERE ((((((0.9326006693254199, x'', NULL))<((x'', x'', 0Xfffffffff7be4fb1)))) NOT BETWEEN (((((0.5597461892208832)AND('1547369659')))AND(1.942988412E9))) AND (((1.893107004E9)GLOB(0.4789871736414394))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2)))) OVER () FROM t0; -- 0ms;
SELECT t0.c2 COLLATE BINARY FROM t0 WHERE (((('') ISNULL) IN ())); -- 0ms;
SELECT t0.c0, ((((t0.c0)AND(t0.c2)))OR(0Xffffffffa65c6694)) COLLATE RTRIM, (((t0.c1 IN ()))<=((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c0)IS(t0.c0)))OR((t0.c1 IN ()))))AND(t0.c0)) FROM t0 ORDER BY (~ ((t0.c2 IN ()))) DESC  NULLS LAST LIMIT -403514094; -- 0ms;
SELECT DISTINCT NTH_VALUE((- (((t0.c0)<(t0.c2)))), CAST((t0.c1 IN ()) AS NUMERIC)) OVER (), (CAST(t0.c0 AS INTEGER) IN ()), '0.4150309896815709', t0.c2, CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) THEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))) WHEN ((t0.c1) NOT NULL) THEN t0.c2 COLLATE BINARY WHEN ABS(t0.c0) THEN (- (t0.c2)) END FROM t0;SELECT DISTINCT ((SUM(t0.c1)) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT t0.c2, ((COUNT(t0.c2))&(CAST(t0.c2 AS BLOB))), ((((((((CASE WHEN t0.c1 THEN t0.c0 END)AND(t0.c1 COLLATE BINARY)))AND(CAST(t0.c0 AS TEXT))))AND(((((t0.c2)AND(t0.c0)))AND(t0.c2)))))AND((x'f58a' IN ()))) FROM t0; -- 0ms;
SELECT t0.c1, DENSE_RANK() OVER (), CASE WHEN ((t0.c2) NOTNULL) THEN (+ (t0.c1)) END, '1438380075' COLLATE BINARY, LEAD(((UPPER(t0.c1))<((- (t0.c1)))), ((((((('ꄍ0&IJy', t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, NULL)) AND ((t0.c0, t0.c1, '-XOM'))))OR(-192497860)))OR(((((((((t0.c1)OR(t0.c0)))AND(t0.c2)))OR(t0.c2)))OR('md꣧sE6r')))), (((t0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN 419336152 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END)) AND ((((t0.c1)LIKE(t0.c0)))))) OVER ( ROWS rtreenode(t0.c2, t0.c1) COLLATE RTRIM PRECEDING) FROM t0 WHERE ((((('f')AND('')))>>((0.02265290237960793 IN ())))); -- 1ms;
SELECT ALL CAST(CASE WHEN t0.c0 THEN t0.c2 END AS TEXT), (((t0.c0 IN (t0.c1, -4.53168259E8))) BETWEEN (t0.c1 COLLATE NOCASE) AND ((0.41634347898448776 IN (t0.c1, t0.c2)))), ((COUNT(*)) NOT BETWEEN (((t0.c2)+(t0.c2))) AND (((((t0.c2)OR(t0.c2)))OR(t0.c0)))) FROM t0 WHERE ((NOT (json_array(NULL, '0.9171255001034723')))); -- 0ms;
SELECT ALL (((- (t0.c2))) ISNULL), t0.c1, (~ (((t0.c0)|(t0.c2)))) FROM t0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT (((('hM')AND(t0.c1)))OR(t0.c1)), 0.9832215318145897) FROM t0; -- 0ms;
SELECT CAST(CAST(t0.c0 AS BLOB) AS TEXT), (((- ('-1')))GLOB(t0.c0 COLLATE BINARY)), ((CAST(t0.c0 AS TEXT))>=(t0.c0 COLLATE BINARY)) FROM t0 WHERE (((('833278760')) NOT BETWEEN ((((NULL)-(x'')))) AND ((((0.881480764115568)IS(NULL)))))); -- 0ms;
SELECT DISTINCT x'', ((((t0.c1)|(t0.c2)))+((((t0.c2))<=((t0.c2))))), NULL FROM t0 LIMIT 1589945358; -- 0ms;
SELECT ALL (((((t0.c2)/(t0.c1))))<((((t0.c1)/(t0.c0))))) FROM t0; -- 0ms;
SELECT ALL IFNULL(DISTINCT CAST(t0.c2 AS REAL), (((NULL))>((t0.c2)))) FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))) FROM t0 WHERE (((((0.6996839897313042)&(0.3360076674841359)))>>(x'd257'))); -- 0ms;
SELECT ALL ((COUNT(*)) BETWEEN (((t0.c0)-(t0.c1))) AND (((t0.c1) ISNULL))) FROM t0 WHERE ((NOT ((~ ('eq'))))); -- 1ms;
SELECT ALL (NOT (t0.c0 COLLATE RTRIM)), GROUP_CONCAT(0.5492049743529579), COUNT((t0.c1 IN ())) OVER () FROM t0 WHERE (MIN(1515344457, ((0.5348676231640251)AND(NULL)))); -- 0ms;
SELECT DISTINCT CASE (~ (t0.c2))  WHEN CAST(t0.c2 AS BLOB) THEN ((t0.c2)<(t0.c2)) END FROM t0 WHERE (CASE x''  WHEN NULL THEN 'K7' ELSE NULL END COLLATE RTRIM) GROUP BY CASE WHEN ((t0.c2)>(t0.c2)) THEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END WHEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN (- (-454421917)) WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c1)>>(t0.c2)) WHEN (+ (0.7715805860362281)) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c0)) WHEN ((t0.c1)<(t0.c2)) THEN (NOT (t0.c2)) ELSE ((t0.c2)<=(t0.c0)) END, ((IFNULL(t0.c1, t0.c1)) BETWEEN (((t0.c0) NOT NULL)) AND (CASE WHEN t0.c2 THEN t0.c0 END)), ((t0.c0) NOTNULL) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((((((NULL) NOT BETWEEN (t0.c2) AND (t0.c1)))OR(((t0.c2) BETWEEN (t0.c0) AND (NULL)))))OR(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) FROM t0 WHERE (((0Xffffffffccc3dafd) ISNULL)) LIMIT 539314566; -- 0ms;
SELECT MAX(((t0.c0)=(t0.c1))) FROM t0 WHERE ((((((x'' IN ()))AND((('-0.0')<<(0.25272269018066407)))))OR(CASE WHEN '2107467994' THEN '\r!' WHEN x'' THEN 1e500 WHEN NULL THEN '-654022233' END))) ORDER BY (NOT (t0.c0)) ASC  NULLS LAST, LOWER(DISTINCT CAST(t0.c0 AS BLOB)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((AVG(t0.c2))+(((((t0.c2)AND(t0.c1)))AND(t0.c1)))) FROM t0 ORDER BY CAST((NOT (t0.c0)) AS NUMERIC) LIMIT 581679436 OFFSET 1383692181; -- 0ms;
SELECT ALL (AVG(t0.c1) IN ()), (NOT (CAST(t0.c0 AS TEXT))), ((t0.c1) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END) AND (t0.c0 COLLATE RTRIM)), ((((((t0.c1)AND(t0.c2)))OR(t0.c1))) IS TRUE), (((t0.c1, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, ROUND(t0.c0, t0.c1), t0.c0)) AND (((t0.c1 IN ()), MAX(t0.c1), ((t0.c2) ISNULL)))) FROM t0; -- 0ms;
SELECT CASE 0.6425161901361518  WHEN (t0.c2 IN (t0.c1, t0.c1)) THEN CASE t0.c0  WHEN NULL THEN 0Xffffffffc6d1c44c END ELSE (t0.c1 IN ()) END, DATE(((t0.c1) BETWEEN (t0.c1) AND (t0.c1)), (t0.c2 IN ()), ((t0.c1)%(t0.c1))), t0.c2 COLLATE RTRIM, (('2058459286')&((NOT (t0.c0)))), t0.c1 FROM t0 WHERE (LOWER(DISTINCT CAST('0.3370696840497007' AS TEXT))); -- 0ms;
SELECT DISTINCT (NOT (t0.c2)) FROM t0 LIMIT 348602836 OFFSET -1785382374; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) OVER () FROM t0 ORDER BY (~ (((t0.c0)>>(t0.c2)))); -- 0ms;
SELECT DISTINCT (0.5438926677316624 IN ()) FROM t0 WHERE (((CAST(x'' AS TEXT)) NOT BETWEEN (CHANGES()) AND ((('-116979965')*(0.9147742118713209))))); -- 0ms;
SELECT DISTINCT AVG((~ (t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c2 IN ()))<=(CAST(t0.c1 AS REAL))), ((CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE 0.78197184204233 END) ISNULL), CASE WHEN CASE t0.c2  WHEN t0.c2 THEN x'8e1d' WHEN t0.c0 THEN t0.c0 WHEN 'L1MKY' THEN t0.c2 END THEN ((x'9d34') NOT NULL) WHEN x'' COLLATE BINARY THEN (t0.c1 IN (t0.c1)) WHEN ((t0.c1)<=(t0.c0)) THEN AVG(t0.c1) END FROM t0 WHERE ((NULL COLLATE RTRIM IN (((x'') NOT BETWEEN (-2144139327) AND (x'cb4b'))))) UNION SELECT TOTAL(TRIM(t0.c0)), t0.c2, ((((t0.c2) ISNULL))<<(((t0.c1)||(t0.c0)))) FROM t0; -- 1ms;
SELECT DISTINCT (((((t0.c1))>=((t0.c2))))<=(COALESCE(t0.c0, t0.c0, t0.c2, t0.c1))) FROM t0; -- 0ms;
SELECT (((t0.c2 IN ())) BETWEEN ('\{') AND (((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))), TOTAL(237609145) OVER (), (((t0.c1, t0.c0, t0.c0)) NOT BETWEEN (('-1236592655', ((t0.c2)<(x'')), t0.c0)) AND ((CASE NULL  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END, CASE WHEN t0.c0 THEN x'288e3b3c' END, (('145875069') BETWEEN (t0.c0) AND (t0.c1))))) FROM t0 WHERE (NULL); -- 0ms;
SELECT ALL (0.8784267549538738 IN (t0.c1)) FROM t0; -- 0ms;
SELECT DISTINCT (((+ (t0.c1))) IS TRUE) FROM t0; -- 0ms;
SELECT ((((((((UPPER(DISTINCT t0.c1))AND(t0.c1)))OR(t0.c2 COLLATE BINARY)))AND(TOTAL(t0.c0))))OR(TOTAL(t0.c2))), x'3b14e25795aa', '', t0.c1, LEAD((((t0.c1) NOT NULL) IN ()), (NOT (t0.c2 COLLATE NOCASE)), (((((((t0.c1, t0.c2, t0.c1))<((t0.c2, t0.c2, t0.c2))))AND((((t0.c1))<=(('500649136'))))))OR(((NULL) ISNULL)))) OVER () FROM t0 LIMIT -1229699336 OFFSET 971370771; -- 1ms;
SELECT (((t0.c2, t0.c1, t0.c1, t0.c1, t0.c2)) NOT BETWEEN (((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((x''))), ((((t0.c1)OR(t0.c2)))OR(0.8258710856197994)), ((t0.c1)IS NOT(t0.c2)), CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END, (((t0.c0, t0.c1, t0.c1, t0.c0, t0.c1))==((t0.c1, t0.c1, t0.c0, t0.c2, t0.c2))))) AND ((((NULL)>(t0.c1)), t0.c0 COLLATE BINARY, NULLIF(DISTINCT t0.c2, t0.c0), CASE WHEN t0.c0 THEN t0.c1 WHEN 0.9238134157633292 THEN t0.c2 WHEN t0.c2 THEN '-1430223035' END, (t0.c0 IN ())))) FROM t0 WHERE (NULL); -- 0ms;
SELECT NULLIF(DISTINCT ((t0.c1)IS NOT(t0.c2)), (((('SUS(*PuH')AND(t0.c2)))AND(t0.c1))), (((((t0.c0 IN ()))AND(t0.c2)))OR(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END)), ('v*#' IN (t0.c2, TOTAL(t0.c2))) FROM t0; -- 0ms;
SELECT DISTINCT MAX((((t0.c0, NULL, t0.c0)) NOT BETWEEN ((t0.c0, -6.54022233E8, t0.c2)) AND ((t0.c0, t0.c2, t0.c1))) COLLATE NOCASE), ((t0.c0)+(t0.c0)) COLLATE RTRIM, ((LOWER(DISTINCT t0.c1))>=((t0.c0 IN ()))), LIKELY(CAST(t0.c0 AS TEXT)), (((-1.851475953E9 IN ()))>(t0.c1 COLLATE NOCASE)) FROM t0 WHERE (HEX(((1.309773107E9) NOT BETWEEN ('Iz') AND ('0.7797292586868454')))); -- 0ms;
SELECT DISTINCT '\{' FROM t0; -- 0ms;
SELECT ((CAST(t0.c0 AS INTEGER)) ISNULL), ((CAST(t0.c2 AS REAL))>=((t0.c1 IN ()))), ((((((((t0.c1 COLLATE BINARY)OR(SUM(t0.c2))))AND(((t0.c0)||(t0.c1)))))OR(((t0.c0) IS FALSE))))AND(json_array_length(t0.c2, t0.c1))) FROM t0;SELECT ALL CASE ((t0.c1)>>(t0.c0))  WHEN t0.c2 THEN ((t0.c2)||(t0.c2)) END FROM t0 WHERE (((((NULL)OR(0Xffffffffbf4d1e1b)))IS((~ (x''))))); -- 0ms;
SELECT CAST('1515344457' AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT ((SQLITE_COMPILEOPTION_USED(t0.c2))+(((t0.c0)AND(t0.c2)))) FROM t0; -- 0ms;
SELECT DISTINCT (+ ((- (t0.c0)))) FROM t0 WHERE (INSTR(((x'')LIKE(0.20261350077547458)), NULL COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) NOT BETWEEN ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c0)))) AND (((t0.c2)/(t0.c2)))), ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (((t0.c1)IS(x'59a7'))) AND (((t0.c2)>=(NULL)))), ((((0.9296120553199095) IS FALSE))%(((((NULL)AND(t0.c0)))AND(t0.c0)))) FROM t0 WHERE (json_array_length((~ (x'b9fa')), NULL COLLATE BINARY)); -- 0ms;
SELECT DISTINCT ((json_insert(t0.c2, t0.c2, t0.c0, t0.c0, t0.c1))&(x'')), COUNT(t0.c2), CAST(CASE t0.c1  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END AS INTEGER) FROM t0 LIMIT 733580908;SELECT ((((((t0.c0))>((t0.c2))), ((NULL)>(t0.c1)), t0.c1))=(((t0.c2 IN ()), MAX('(c[q %5Sl'), x'0dc9'))) FROM t0 GROUP BY CAST(x'2dbb' AS NUMERIC) HAVING TOTAL(((0Xffffffff87bb4900)==(t0.c2))); -- 1ms;
SELECT GROUP_CONCAT((t0.c2 IN ())) OVER () FROM t0 GROUP BY (((t0.c1)) BETWEEN (((NOT (7.51053284E8)))) AND ((CAST(t0.c2 AS TEXT)))) HAVING ((MIN(t0.c2))<<((t0.c2 IN ()))); -- 0ms;
SELECT DISTINCT TRIM((- (6.7434735E8)), ((t0.c0)%(t0.c0))) FROM t0; -- 0ms;
SELECT ((((t0.c0)>=(t0.c1)))||(((t0.c1)>>(t0.c1)))) FROM t0; -- 0ms;
SELECT ((((t0.c0) NOT NULL)) NOT NULL) FROM t0; -- 0ms;
SELECT ALL (~ (TOTAL(t0.c1))) FROM t0; -- 0ms;
SELECT ((((TOTAL(t0.c1))OR('s&3')))OR(((t0.c1)/(t0.c1)))) FROM t0 WHERE (CAST(((821683367) ISNULL) AS NUMERIC)); -- 0ms;
SELECT t0.c2 FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c1)>(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((((t0.c2)AND(t0.c2)))OR(t0.c0)) AS REAL) FROM t0 WHERE ((+ (0x70d6853c))); -- 1ms;
SELECT ALL PERCENT_RANK() OVER ( ORDER BY (NOT (TYPEOF(t0.c0))) ASC  NULLS FIRST) FROM t0 WHERE (958718318 COLLATE RTRIM); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( RANGE  CURRENT ROW EXCLUDE TIES) FROM t0 GROUP BY CAST(t0.c1 AS TEXT), ((((CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)OR(((t0.c0)|('')))))AND('491346869')), CAST(CAST(t0.c1 AS BLOB) AS TEXT) HAVING (((((t0.c2)GLOB(t0.c0))))>((t0.c1))); -- 0ms;
SELECT CAST(((t0.c2)-(t0.c1)) AS REAL) FROM t0; -- 0ms;
SELECT CASE WHEN ((t0.c2) IS TRUE) THEN ((((((((t0.c1)AND(t0.c1)))AND(t0.c0)))AND(t0.c0)))AND(t0.c1)) ELSE (t0.c2 IN (t0.c1, '')) END FROM t0 ORDER BY ((((t0.c1) ISNULL)) BETWEEN (t0.c2 COLLATE NOCASE) AND (((t0.c1)IS(t0.c1))))  NULLS LAST; -- 0ms;
SELECT (- (CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END)) FROM t0 ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND ('439567126')) THEN ABS(t0.c0) ELSE ((t0.c1) IS FALSE) END, NULL  NULLS LAST; -- 0ms;
SELECT DISTINCT TRIM(0Xffffffffe9387492) FROM t0 GROUP BY (((t0.c2)) BETWEEN ((x'')) AND ((((t0.c0)|(t0.c1))))) HAVING (+ (((((t0.c1)AND(t0.c0)))OR(t0.c2)))); -- 0ms;
SELECT DISTINCT CASE WHEN (t0.c1 IN (t0.c1)) THEN ((t0.c2) BETWEEN (t0.c2) AND (x'')) ELSE (t0.c2 IN (t0.c2)) END, AVG((NOT (t0.c2))), LEAD(((((((((((t0.c1)AND(t0.c0)))OR(t0.c2)))OR(x'')))OR(t0.c2))) NOT BETWEEN (DATE(t0.c2, t0.c2, t0.c0, t0.c1, t0.c0)) AND (0.7152053827839171)), (CAST(t0.c2 AS INTEGER) IN ()), CAST(COALESCE(t0.c1, t0.c1) AS BLOB)) OVER () FROM t0; -- 0ms;
SELECT CAST((t0.c2 IN ()) AS TEXT) FROM t0 GROUP BY (((((((t0.c0)AND(t0.c2)))AND(t0.c2)), IFNULL(t0.c0, t0.c0), ((((t0.c0)OR('-119024946')))OR(t0.c1))))>((((t0.c0)+(t0.c2)), t0.c0 COLLATE NOCASE, CAST(t0.c0 AS INTEGER)))); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c2)<(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT x'' FROM t0 GROUP BY CAST(((t0.c2)IS(t0.c2)) AS REAL), ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))) NOT BETWEEN (t0.c1 COLLATE BINARY) AND ((((t0.c0, t0.c1, t0.c1))>=((t0.c2, t0.c0, t0.c0))))), t0.c1 HAVING AVG(PRINTF(t0.c1)); -- 0ms;
SELECT ALL t0.c2, TYPEOF((((t0.c1, t0.c0, t0.c0))!=((t0.c2, t0.c0, t0.c2)))), (- (((t0.c0) NOT NULL))) FROM t0 WHERE ((((~ (0.14602230871154254))) ISNULL)); -- 0ms;
SELECT ALL (((t0.c1)) BETWEEN ((GROUP_CONCAT(t0.c1))) AND ((CASE WHEN t0.c2 THEN t0.c1 END))) FROM t0 GROUP BY NULL HAVING (((t0.c2)>(t0.c1)) IN ()); -- 0ms;
SELECT DISTINCT (((t0.c0)IS NOT('5*l6')) IN (((t0.c0)GLOB(t0.c1)), t0.c0)) FROM t0 WHERE ((~ (((0.5524983006719392) NOT BETWEEN (0.764115231335991) AND (NULL))))); -- 1ms;
SELECT ALL ((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) COLLATE BINARY, (- (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))), 0.49019135622001575 FROM t0; -- 0ms;
SELECT (((t0.c2)) NOT BETWEEN ((CAST(t0.c2 AS REAL))) AND (((t0.c0 IN (t0.c0, t0.c2))))), ((((((t0.c0))<=((t0.c1))), ((t0.c0)<<(t0.c0)), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))))<((t0.c1, INSTR(t0.c2, t0.c2), (~ (t0.c0))))), (~ (UPPER(DISTINCT t0.c1))) FROM t0 GROUP BY (((NULL) BETWEEN (t0.c1) AND (t0.c0)) IN ()), ((((((t0.c2)OR(-9.96544055E8)))OR(0.007410019312921956))) NOT NULL), (((((t0.c2)) BETWEEN ((0Xffffffff9fa048cb)) AND ((t0.c0)))) IS TRUE) HAVING ((CASE WHEN t0.c0 THEN t0.c1 END) NOTNULL); -- 0ms;
SELECT ALL NTH_VALUE((NOT (((((t0.c2)OR(t0.c0)))AND(t0.c2)))), x'25d0') OVER (), -714930560, NULLIF(((((t0.c1)OR(t0.c2)))OR(t0.c1)), t0.c0 COLLATE BINARY), MIN(((t0.c2) IS FALSE)), (((((((t0.c0, t0.c1, t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c0, t0.c1, t0.c2, t0.c2, t0.c1)) AND ((t0.c0, t0.c2, t0.c1, NULL, 0X409138bd))))AND(CAST(t0.c1 AS NUMERIC))))OR(x'')) FROM t0 WHERE (CASE IFNULL(DISTINCT x'7577', x'')  WHEN ((0.4087276245290161) NOT BETWEEN (264327053) AND (NULL)) THEN CASE WHEN x'' THEN x'5eff' ELSE 'fi#좼nkg' END END);SELECT DISTINCT (+ (t0.c2)), ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))<=(((((((((t0.c1)OR(t0.c2)))OR(t0.c2)))AND(t0.c0)))AND(t0.c0)))), (((t0.c1)) NOT BETWEEN (((((t0.c2))!=((t0.c2))))) AND (('2053368251'))) FROM t0 WHERE (((((0.3742576763557348 COLLATE BINARY)OR((0.6638488780001198 IN ()))))OR((('-1681972998') NOT NULL)))) ORDER BY t0.c2  NULLS FIRST; -- 0ms;
SELECT ALL COUNT(*), MAX(((t0.c2) ISNULL)), ((((t0.c1) IS FALSE))>(((t0.c0) NOT NULL))) FROM t0 WHERE ((((('0.7231076394643722') NOT NULL))/((0.4570220886729517 IN ())))); -- 0ms;
SELECT ALL ((- (t0.c1)) IN ()), 207531861, CAST(t0.c0 COLLATE NOCASE AS REAL), ((((((('1518416734')OR(t0.c0)))OR(t0.c1))))>=((t0.c0))), ((TOTAL_CHANGES()) NOT BETWEEN ('-2116596402') AND (HEX(DISTINCT t0.c1))) FROM t0 GROUP BY NULLIF((((t0.c0)) BETWEEN ((x'')) AND ((t0.c1))), rtreenode(t0.c2, NULL)), LIKELIHOOD(SQLITE_VERSION(), 0.13533244187170446), (NOT (t0.c2)) HAVING SUM(NULL COLLATE NOCASE); -- 0ms;
SELECT ALL COUNT('792824608') OVER (), t0.c2, (MIN(t0.c0) IN ()) FROM t0 WHERE ((((x'')) BETWEEN (((((NULL))==((NULL))))) AND ((((x'879f')IS(-1615781579)))))) GROUP BY (t0.c1 COLLATE BINARY IN ()) HAVING ((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))IS(((((t0.c1)AND(t0.c2)))AND(t0.c0)))); -- 0ms;
SELECT GROUP_CONCAT(TOTAL(CASE WHEN t0.c2 THEN t0.c2 END)), (t0.c0 IN ()) COLLATE NOCASE, (((t0.c2)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((CAST(t0.c0 AS TEXT)))) FROM t0 ORDER BY (((+ (t0.c2)))|(((t0.c0) NOT NULL)));SELECT DISTINCT t0.c0 FROM t0 WHERE ((+ (('-829231285' IN ())))) LIMIT 999115829; -- 0ms;
SELECT DISTINCT ((((((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))OR(((t0.c2)/(t0.c0)))))OR(CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(CAST(t0.c0 AS TEXT))) FROM t0 LIMIT 2114520810 OFFSET 306712768; -- 0ms;
SELECT DISTINCT t0.c2, PRINTF(t0.c2 COLLATE NOCASE), ((CAST(t0.c2 AS NUMERIC))<<(t0.c0 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) BETWEEN ((~ (t0.c2))) AND (((((t0.c1)OR(x'')))OR(0.5163402564585634)))) FROM t0; -- 0ms;
SELECT (((t0.c1, -2124399829, t0.c2)) BETWEEN ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1)), ((t0.c1)LIKE(t0.c1)), (t0.c2 IN ()))) AND (('-735164892', CASE t0.c0  WHEN t0.c2 THEN t0.c2 END, (((t0.c1))>=((t0.c1)))))), (((t0.c1)==(t0.c2)) IN (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)), (+ (t0.c0)))), ((((((((((t0.c2)OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0))) NOT BETWEEN (((((((((t0.c1)OR(x'')))AND('SUS(*PuH')))OR(t0.c0)))AND(t0.c0))) AND ((t0.c1 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0; -- 0ms;
SELECT ALL ((((t0.c1) IS FALSE)) NOT BETWEEN ((+ (t0.c1))) AND (((t0.c1) NOT NULL))) FROM t0 WHERE (CAST(((NULL) ISNULL) AS REAL)); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM t0 ORDER BY CAST(t0.c0 AS NUMERIC)  NULLS LAST; -- 0ms;
SELECT ((((t0.c2)-(t0.c0)))<=(((t0.c1)IS NOT(t0.c2)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((-604922907)AND(t0.c1))) IS TRUE) FROM t0 WHERE (STRFTIME(((x'830e')!=(NULL)), (+ (x'197e')), ((NULL)<(x'')))); -- 1ms;
SELECT DISTINCT (((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((NULL))))AND(((t0.c1)GLOB(t0.c2)))))OR(((t0.c2)OR(t0.c1)))) FROM t0 WHERE ((((NOT (NULL)))||(((0.2249690444919593) NOT NULL)))); -- 0ms;
SELECT ALL LAST_VALUE((((t0.c2 IN (t0.c1, t0.c0))) ISNULL)) OVER () FROM t0 ORDER BY (NOT (t0.c1)), (+ (t0.c2 COLLATE BINARY)) ASC; -- 0ms;
SELECT ALL (((((t0.c1))<((t0.c2))))<(CAST(x'' AS INTEGER))), (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))) BETWEEN (TOTAL(t0.c1)) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))), CAST((NOT (t0.c0)) AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 WHERE ('898164668'); -- 0ms;
SELECT DISTINCT ((MAX(t0.c1)) NOT BETWEEN ((((t0.c2))>=((t0.c2)))) AND (((NULL) NOTNULL))) FROM t0 WHERE (((((((((CAST(306712768 AS REAL))OR(((('!adjstolf')) BETWEEN ((x'f4401712')) AND ((NULL))))))OR((-1377724787 IN ()))))OR(((x'') NOT BETWEEN ('-493029122') AND (NULL)))))AND(((((((((6.88538577E8)AND('-934089346')))AND(NULL)))OR('7h8꺗\g')))OR(x''))))); -- 0ms;
SELECT DISTINCT CASE ((t0.c2)|(x'e3e100a79d3d'))  WHEN UPPER(DISTINCT t0.c1) THEN '' ELSE ((t0.c0)IS NOT(t0.c1)) END FROM t0 WHERE (CAST(CAST(NULL AS TEXT) AS INTEGER)); -- 0ms;
