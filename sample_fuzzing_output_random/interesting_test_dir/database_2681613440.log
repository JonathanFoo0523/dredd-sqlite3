-- Time: 2024/06/07 23:12:30
-- Database: database40
-- Database version: 3.40.0
-- seed value: 2681613440
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TABLE t0 (c0 TEXT CHECK ( ((CAST(c2 AS BLOB))AND(((c0) NOT NULL)))) , c1 BLOB , c2 REAL ); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA short_column_names; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA optimize; -- 0ms;
UPDATE OR IGNORE t0 SET c2='L/'; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE t0 SET c1=NULL, c0=''; -- 0ms;
INSERT OR REPLACE INTO t0(c1) VALUES ('l/'); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (2127071318); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.7217630291367959; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(NULL) WHERE ((((t0.c1)IS(t0.c0)))-(CAST(t0.c1 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1='269464012'; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(x'') WHERE ((((t0.c0)|(t0.c1))) BETWEEN (((t0.c1)%('-1296041709'))) AND ((t0.c0 IN ()))); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 4ms;
ANALYZE temp; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
PRAGMA temp.busy_timeout; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES ('269464012', x''), ('1536876128', 0.4393929755503093), (NULL, 1762227400), (0x4c1b352, '1458917932'), (79803218, NULL); -- 14ms;
UPDATE OR ROLLBACK t0 SET (c2)=(x'f7f5'); -- 6ms;
UPDATE OR IGNORE t0 SET c1='-974773809'; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'6102', x'', '^*j铍'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.5123719697112737, c0=x'', c1=709773376; -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE t0 SET c0='lf}A>qGd{}邏' WHERE (((2127071318)) NOT BETWEEN ((t0.c1)) AND (((t0.c0 IN (t0.c1, t0.c2))))); -- 1ms;
INSERT OR REPLACE INTO t0(c2, c0, c1) VALUES (0.5123719697112737, '', 0.7330166932146036); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(x''); -- 0ms;
PRAGMA soft_heap_limit = 2745700642450297388; -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT ALL ((- (t0.c1)) IN ()) FROM t0; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (NULL); -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2, c0) VALUES (x'', 0x587f46ed, '2127071318'), ('269464012', 0.401565480649554, x''), (x'', x'', 0.3292964851306944); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 2ms;
INSERT OR REPLACE INTO t1(c1, c2) VALUES ('269464012', NULL); -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c2, c0) VALUES (x'', x''); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(0.4393929755503093, '%') WHERE ((((((((((t0.c0)OR(t0.c2)))OR(t0.c2)))AND(NULL)))AND(t0.c2)))<<(t0.c1)); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES (NULL, x''); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE t1 SET (c1, c1)=(NULL, '709773376') WHERE TRIM(DISTINCT t1.c2 COLLATE NOCASE); -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES (''); -- 24ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
INSERT OR IGNORE INTO t0(c2) VALUES (x'4f58'); -- 1ms;
ALTER TABLE t0 ADD COLUMN c55 TEXT; -- 7ms;
ALTER TABLE t0 RENAME COLUMN c55 TO c59; -- 8ms;
PRAGMA main.locking_mode; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE UPDATE ON t0 FOR EACH ROW  BEGIN UPDATE OR ABORT t0 SET c2=NULL WHERE NULL;END; -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE ((t0.c0) IS FALSE) COLLATE RTRIM; -- 0ms;
PRAGMA journal_mode = WAL; -- 5ms;
VACUUM; -- 0ms;
UPDATE t0 SET c59=x'bcef' WHERE TYPEOF('邏h'); -- 0ms;
REINDEX  t0; -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c59)=('2127071318'); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE t0 SET (c59)=(0.5123719697112737); -- 0ms;
INSERT OR ABORT INTO t0(c0, c1) VALUES ('0.7330166932146036', 514716305); -- 1ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA automatic_index; -- 0ms;
ANALYZE; -- 0ms;
UPDATE t0 SET (c2)=('-331377459'); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x'', '2010825719', -1.296041709E9, 0.3367345489891148), ('1762227400', x'2063', 'f+N_䛭', NULL), (2.010825719E9, NULL, 2.69464012E8, ''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c2, c59) VALUES (2142382395, x''); -- 0ms;
INSERT OR FAIL INTO t0(c2, c59, c0, c1) VALUES (0.3367345489891148, '406912102', x'f97a', NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0, c59, c2) VALUES ('0.401565480649554', x'', '1481701405'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c59, c0, c2, c1) VALUES ('', x'3176', 0x5b068b3d, '1458917932'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c7 INT; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=787517988'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA journal_size_limit = -477222122865055432; -- 0ms;
REINDEX; -- 1ms;
UPDATE t0 SET (c1, c2)=(NULL, NULL) WHERE (((t0.c7) NOT BETWEEN (t0.c0) AND ('\n8qD')) IN ()); -- 5ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED, c2, tokenize = "ascii", content=''); -- 1ms;
REINDEX; -- 0ms;
DELETE FROM t0 WHERE CASE WHEN ((t0.c7) NOTNULL) THEN t0.c59 COLLATE NOCASE END; -- 0ms;
PRAGMA journal_size_limit = -583868783916151520; -- 0ms;
UPDATE OR IGNORE t0 SET c7=x''; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
UPDATE OR IGNORE t0 SET c0=']9QX' WHERE (~ (((x'1c56') NOTNULL))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c7='-1128512040' WHERE ((((t0.c0)AND(t0.c0)))GLOB(t0.c7)); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA application_id = 4798087483627487266; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL ((MIN(t0.c1)) NOT NULL), LAG((((t0.c59))<((COALESCE(t0.c2, t0.c0)))), (((t0.c2)) NOT BETWEEN (('0.7330166932146036')) AND ((json_patch(t0.c0, t0.c59)))), ((((t0.c1)*(t0.c2))) NOT NULL)) OVER ( ORDER BY 0.7217630291367959 ASC  NULLS FIRST), (((NOT (t0.c59)))<<((t0.c0 IN ()))) FROM t0 WHERE ((((CAST('1484736237' AS BLOB)))>=((((0x4c1b352)!=(x'5d48')))))) LIMIT 406912102; -- 0ms;
SELECT DISTINCT t0.c1 FROM t0 WHERE (ABS(0.401565480649554)); -- 0ms;
SELECT DISTINCT (((MIN(t0.c59)))<((CAST(t0.c0 AS NUMERIC)))), CASE CASE WHEN t0.c59 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c7 THEN t0.c1 ELSE t0.c59 END  WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END THEN (('') NOTNULL) ELSE (((t0.c2)) BETWEEN ((t0.c59)) AND ((0x71a31b19))) END, ((((((((CASE WHEN t0.c2 THEN x'e90b' ELSE 0.07465955754053888 END)OR(-1703200373)))AND(x'6e98')))OR('79803218')))OR(((t0.c2)>(t0.c59)))), ((((((t0.c7)OR(t0.c0)))AND(t0.c1))) IS TRUE), GROUP_CONCAT(CAST(NULL AS TEXT)) FROM t0 LIMIT -714472194 OFFSET -1703200373; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c1 THEN t0.c7 ELSE t0.c59 END) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT NULL FROM t0 WHERE (((('dAg+ꨍjy3')) NOT BETWEEN (((('2011320598') IS TRUE))) AND ((x'' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT ((CASE t0.c7  WHEN t0.c0 THEN t0.c0 END) BETWEEN (((t0.c1)<>(t0.c1))) AND (((NULL) NOT NULL))) FROM t0; -- 0ms;
SELECT DISTINCT json_insert(-1020176730 COLLATE BINARY, CASE t0.c0  WHEN t0.c2 THEN t0.c7 ELSE t0.c2 END, TYPEOF(t0.c59)), SUM((- (t0.c7))), (((t0.c59) IS TRUE) IN ()) FROM t0 WHERE (((('0.4393929755503093' IN ()))IS(CAST(-551254805 AS INTEGER)))); -- 0ms;
SELECT ALL ((MIN(t0.c7))%((((t0.c0)) BETWEEN ((t0.c59)) AND ((t0.c0))))) FROM t0 GROUP BY SQLITE_SOURCE_ID() HAVING (((~ (0.9743492741210339))) BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (x'349c'))) AND (((t0.c0) NOTNULL))); -- 1ms;
SELECT DISTINCT CASE AVG(t0.c59)  WHEN ((t0.c7) NOT BETWEEN (t0.c7) AND (t0.c59)) THEN CAST(t0.c59 AS INTEGER) ELSE (((0.08069711864243834)) BETWEEN ((t0.c7)) AND ((t0.c0))) END FROM t0 WHERE ((((')!4%' IN ())) BETWEEN (((x'') NOTNULL)) AND (TRIM(DISTINCT NULL, NULL)))) GROUP BY (- ((NOT (t0.c1)))); -- 0ms;
SELECT ALL LAG(NULL, ((t0.c0 COLLATE RTRIM) BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c2, t0.c1, t0.c59)) NOT BETWEEN ((t0.c7, t0.c7, '-1758934984')) AND ((t0.c7, t0.c2, t0.c1))))), ((t0.c7 COLLATE BINARY)LIKE(t0.c2 COLLATE NOCASE))) OVER () FROM t0 WHERE (json_array_length(((('709773376'))<((x''))), CAST('12793491' AS INTEGER))) LIMIT 514716305;SELECT DISTINCT (((t0.c0)>>(t0.c59)) IN ()) FROM t0 ORDER BY ((t0.c1 COLLATE BINARY) NOTNULL); -- 0ms;
SELECT LAG(((t0.c7)IS NOT(t0.c7)) COLLATE RTRIM, (((t0.c0 IN ())) NOT BETWEEN (((t0.c2)<<(t0.c0))) AND (((t0.c2)==(t0.c59)))), ((((t0.c0)||(t0.c0)))>(((t0.c59) ISNULL)))) OVER (), ((((t0.c7)-(t0.c0)))>=((NULL IN ()))), t0.c59 FROM t0; -- 0ms;
SELECT DISTINCT CASE CAST(t0.c1 AS REAL)  WHEN json_type(0.060616536192844905) THEN (t0.c7 IN ()) WHEN ((t0.c0)*(t0.c59)) THEN GROUP_CONCAT(t0.c1) WHEN (((t0.c0))<((t0.c2))) THEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) END FROM t0 WHERE ((((- (-401233681))) IS FALSE)); -- 0ms;
SELECT ALL ((((CAST(t0.c1 AS REAL))OR(t0.c2)))AND(((t0.c1) BETWEEN (t0.c59) AND (t0.c1)))), TRIM(DISTINCT AVG(t0.c0)), (((NOT (t0.c7))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c7 ELSE t0.c7 END) AND ((t0.c1 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT (((((((((t0.c59 IN ()))OR(((t0.c7)LIKE(t0.c0)))))AND(((t0.c1) BETWEEN (t0.c59) AND (t0.c2)))))AND((t0.c1 IN (t0.c1)))))AND(AVG(x''))) FROM t0 NOT INDEXED WHERE ((((('')/(2.69464012E8)))/(((0x46d6a8f6)OR(x'c4b6'))))) ORDER BY ((t0.c2) BETWEEN (((t0.c1) IS FALSE)) AND ((t0.c2 IN ()))), ((CAST(t0.c2 AS BLOB)) NOT NULL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((- (t0.c1))))<=(((- (t0.c59))))) FROM t0 WHERE (((((((-572093065)OR(NULL)))AND('0.7217630291367959'))) IS FALSE)); -- 0ms;
SELECT MIN(((((t0.c1)AND(t0.c59)))OR('2127071318'))) FROM t0 WHERE ((((NULL)<>(0.07056274430060439)) IN ())); -- 1ms;
SELECT DISTINCT CASE t0.c1  WHEN ((t0.c0)IS NOT(t0.c59)) THEN ((t0.c2)<<(t0.c59)) ELSE t0.c1 COLLATE NOCASE END, ((((t0.c0) NOT BETWEEN (t0.c59) AND (t0.c2)))IS('-714472194')), ((((t0.c7)AND(t0.c59)))OR(((t0.c2) NOTNULL))), (((t0.c7)) NOT BETWEEN ((((((t0.c2)AND(t0.c0)))AND(t0.c2)))) AND ((UPPER(DISTINCT t0.c2)))), (t0.c2 COLLATE NOCASE IN (((t0.c2) BETWEEN (t0.c59) AND (0xffffffff9728c838)))) FROM t0 WHERE ((((((0.9446296652219925) ISNULL)))<=((((x'')AND(0.7906880168950469)))))) GROUP BY t0.c59 HAVING CAST(((((t0.c0)OR(t0.c0)))AND(t0.c59)) AS TEXT); -- 0ms;
SELECT (((((t0.c59, t0.c0, t0.c0))==((t0.c7, t0.c0, t0.c2))))!=(((t0.c0)GLOB(t0.c2)))), (('9423271') IS TRUE), ((((t0.c59 COLLATE BINARY)AND(CASE t0.c1  WHEN t0.c0 THEN '9,' END)))OR(t0.c2)) FROM t0 WHERE ((((NULL)) BETWEEN (((~ (NULL)))) AND ((((NULL)GLOB(NULL)))))); -- 0ms;
SELECT DISTINCT CAST(((t0.c0) NOT NULL) AS REAL), LEAD((((NOT (t0.c59)))LIKE(((269464012) NOT NULL))), ((SQLITE_SOURCE_ID()) IS TRUE), (+ (((((x'')AND(t0.c1)))OR(t0.c1))))) OVER (), x'' FROM t0 WHERE ((((0.04903053650336642, CAST('-1374489535' AS REAL), ((NULL) BETWEEN (x'') AND ('1458917932'))))>=((('뱒fk' IN ()), (NULL IN ()), CAST(x'' AS REAL))))); -- 0ms;
SELECT COUNT(((t0.c0)>>(t0.c59))) OVER () FROM t0 WHERE ((-894783876 IN ())) ORDER BY (NOT (((t0.c1)>(t0.c0)))); -- 0ms;
SELECT ALL UNICODE(CAST(t0.c59 AS TEXT)) FROM t0; -- 0ms;
SELECT DISTINCT t0.c7 FROM t0 WHERE (((((((x'7fa0') BETWEEN ('727701784') AND ('2095341726')))AND((('-1510072413')LIKE(x'a336')))))AND(((0.9571209960100167) NOT BETWEEN (0.06318414136913653) AND ('V뱒5n!9wf['))))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN NULL THEN t0.c1 END AS TEXT), t0.c0, t0.c59 FROM t0; -- 0ms;
SELECT LOWER((0.3509817678373368 IN (t0.c1))) FROM t0 WHERE ((((NOT ('1920228312'))) ISNULL)); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((('-773017446')<<(x'')))LIKE(((((-5.51254805E8)AND(NULL)))AND(x''))))); -- 0ms;
SELECT DISTINCT (((t0.c7, t0.c0, t0.c59)) NOT BETWEEN ((t0.c1, ((t0.c1)&(t0.c7)), CASE WHEN t0.c7 THEN t0.c59 ELSE t0.c7 END)) AND ((t0.c0 COLLATE BINARY, ((t0.c2)>(t0.c1)), t0.c7))), ((t0.c7 IN (t0.c2, t0.c1)) IN ()), '''+q', ((((t0.c0) NOT BETWEEN (t0.c59) AND (t0.c2))) BETWEEN (CASE ''  WHEN t0.c7 THEN t0.c59 END) AND (((t0.c1) NOT NULL))), ((((t0.c1) BETWEEN (t0.c59) AND (t0.c1)))AND((NOT (t0.c7)))) FROM t0; -- 0ms;
SELECT DISTINCT (AVG(x'') IN (t0.c7 COLLATE RTRIM)), ((((t0.c2) NOTNULL)) NOT BETWEEN (COUNT(*)) AND ((((x'', t0.c59, t0.c59, t0.c1, t0.c0)) BETWEEN ((x'92f7', t0.c0, t0.c59, t0.c7, t0.c59)) AND ((t0.c2, t0.c0, t0.c59, t0.c1, t0.c2))))), (((- (t0.c0))) IS FALSE) FROM t0 WHERE (((((' <5褮p]B')OR(CAST('406912102' AS REAL))))AND((0xffffffffb91b41c7 IN ('1204460308'))))) LIMIT 1204460308; -- 0ms;
SELECT CAST(((t0.c0)==(t0.c7)) AS INTEGER), HEX(t0.c0) COLLATE NOCASE, SUM(((((((((t0.c2)AND(t0.c7)))AND(t0.c7)))AND(t0.c59)))OR(t0.c59))) OVER () FROM t0; -- 0ms;
SELECT ALL CAST((t0.c59 IN ()) AS TEXT) FROM t0 WHERE ((((669459180, NULL, 0.43994999591124706)) NOT BETWEEN ((CASE WHEN '642795984' THEN '-1128512040' ELSE x'a702' END, ((0.7330166932146036)IS NOT(NULL)), (('3B') NOTNULL))) AND ((((0.7968379068772125)/(0.6138234302490344)), CAST(x'' AS TEXT), (('-1332694010')+(2.69464012E8)))))) ORDER BY CAST(((t0.c59)%(t0.c0)) AS NUMERIC) DESC; -- 0ms;
SELECT ALL ((((((((((t0.c59)AND(t0.c2)))AND(t0.c0)))AND(t0.c1)))OR(t0.c59))) IS TRUE) FROM t0 WHERE (((((((((((2.011320598E9)AND(-838891218)))OR(0.11833190064611299)))OR(0.2920043624316101)))OR(NULL)))<<((('BL')||('뢐烼'))))); -- 0ms;
SELECT DISTINCT (NOT (((t0.c7) NOTNULL))) FROM t0 WHERE (((NOT (0.28223275995032404)) IN (((x'b87f') BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c1 THEN TOTAL(t0.c59) ELSE t0.c59 COLLATE NOCASE END FROM t0; -- 0ms;
SELECT DISTINCT LAG(QUOTE(t0.c2) COLLATE RTRIM, (((x''))<=((((((t0.c2)OR(t0.c0)))OR(t0.c0))))), (+ (TRIM(t0.c7)))) OVER () FROM t0; -- 0ms;
SELECT ALL ((t0.c1) IS TRUE), (t0.c1 IN (t0.c1, t0.c1)) COLLATE BINARY, ((((((t0.c0) IS TRUE))OR(((t0.c59) IS TRUE))))OR(((t0.c1)OR(t0.c7)))) FROM t0 WHERE (((((x'') ISNULL)) ISNULL)); -- 0ms;
SELECT ALL ((t0.c1 COLLATE BINARY) IS TRUE) FROM t0 WHERE (((CAST(0Xffffffffb0b734a6 AS NUMERIC)) ISNULL)) ORDER BY t0.c2; -- 0ms;
SELECT DISTINCT ((((t0.c2) NOT BETWEEN (t0.c59) AND (0.07465955754053888)))LIKE((t0.c7 IN ()))) FROM t0 WHERE (CASE WHEN (('F+N_䛭') ISNULL) THEN ((x'')LIKE(0.12486462745033844)) END); -- 0ms;
SELECT (((t0.c0)) BETWEEN ((CAST(t0.c7 AS REAL))) AND (((((t0.c1, t0.c2, t0.c7, t0.c59, t0.c0))<>((t0.c7, t0.c1, '-551254805', t0.c0, t0.c59)))))) FROM t0 WHERE (((x'') NOT BETWEEN ((((('2076608517')AND('523479565')))OR('1483241597'))) AND ((~ (NULL))))) ORDER BY (~ ((t0.c1 IN ()))), (((t0.c2)&(-1.758934984E9)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT 0.015990172929021162 FROM t0 WHERE (CAST(((0X43bdbf47)||(9423271.0)) AS BLOB)); -- 1ms;
SELECT ALL (~ (DATETIME(t0.c7, t0.c59, t0.c7))) FROM t0 WHERE (TRIM(('%Q?.U\r#T' IN ()))); -- 0ms;
SELECT ((t0.c7) IS FALSE) FROM t0 LIMIT -797544196; -- 0ms;
SELECT ALL ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))AND((t0.c0 IN (t0.c2)))), ((((t0.c0 COLLATE NOCASE)OR((t0.c2 IN (t0.c59, t0.c2)))))OR(((t0.c0)||(t0.c0)))), 'K>cF' FROM t0; -- 0ms;
SELECT ((((((t0.c7) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c59) NOT BETWEEN (t0.c0) AND (t0.c59)))))OR(CAST(t0.c59 AS REAL))), CAST(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) AS BLOB), CAST((t0.c1 IN (t0.c7, t0.c7)) AS INTEGER) FROM t0 WHERE ((-838891218 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((t0.c2) ISNULL) COLLATE BINARY DESC  NULLS LAST, CASE WHEN t0.c2 THEN 0.295982894253239 WHEN t0.c1 THEN 0.015990172929021162 WHEN x'' THEN t0.c59 ELSE t0.c0 END COLLATE RTRIM; -- 0ms;
SELECT (LIKELIHOOD(t0.c7, 0.18547032394557805) IN (UNLIKELY(DISTINCT t0.c1))) FROM t0 WHERE (((CASE 0.2967366572986164  WHEN -903355826 THEN '9423271' WHEN 0.10730214603152233 THEN 0.46906771618887155 WHEN NULL THEN '-916408822' END)IS((('*!?AWw')-(0X287149a3))))) LIMIT -1296041709 OFFSET 1566362527; -- 0ms;
SELECT ((((t0.c0)AND(t0.c1))) NOT NULL) FROM t0 WHERE (((((CASE WHEN NULL THEN 0.37367609812908964 WHEN 0.6069380602553003 THEN x'' WHEN '1422128400' THEN '179383824' WHEN '' THEN 0X132b0fd7 WHEN 'mkc%V' THEN NULL END)OR(NULL)))AND((('-773017446') IS FALSE)))) LIMIT -773017446 OFFSET -1189396025; -- 0ms;
SELECT t0.c2 COLLATE RTRIM FROM t0; -- 0ms;
SELECT MIN(t0.c59) COLLATE BINARY COLLATE NOCASE, SQLITE_COMPILEOPTION_USED(((t0.c1) NOT BETWEEN (t0.c59) AND (t0.c1))), ((CASE t0.c0  WHEN t0.c59 THEN t0.c7 END) BETWEEN (t0.c59) AND (((t0.c7)IS NOT(t0.c1)))) FROM t0 ORDER BY ((((((t0.c0)+(t0.c7)))OR(CAST(t0.c59 AS REAL))))OR(((t0.c0)>=(t0.c2))))  NULLS LAST, (((+ (t0.c59)))IS NOT((((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c59))))), ((t0.c2)GLOB(t0.c2)) COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT DISTINCT ((t0.c7)|(t0.c7)) COLLATE BINARY FROM t0 LIMIT 1484736237; -- 0ms;
SELECT ALL ((((t0.c7) IS TRUE)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (COUNT(t0.c59))), ((SQLITE_VERSION()) NOT NULL), CASE WHEN ((t0.c7)LIKE(t0.c7)) THEN 0x4690745d WHEN ((((t0.c2)AND(t0.c2)))AND(t0.c2)) THEN (+ (t0.c0)) WHEN ((t0.c1) ISNULL) THEN ((((t0.c7)OR(t0.c1)))OR(t0.c59)) END FROM t0 WHERE ((((('Eh\!\n	')>>(0.4008040104289401))) IS TRUE)) ORDER BY ((t0.c0) IS TRUE); -- 0ms;
SELECT ALL CASE WHEN (NOT (t0.c0)) THEN MIN(t0.c2) END FROM t0; -- 0ms;
SELECT DISTINCT 0.5123719697112737 FROM t0 WHERE ((+ ((('523479565')OR('1527155517'))))) LIMIT -1197667246 OFFSET 1204460308; -- 0ms;
SELECT DISTINCT (~ (((t0.c0)/(t0.c59)))), ((((t0.c2) IS TRUE)) NOT BETWEEN (((t0.c1) ISNULL)) AND ('1188473078')), (CAST(t0.c1 AS NUMERIC) IN (((t0.c59) IS FALSE), (t0.c2 IN ()))), ((((t0.c59) IS FALSE)) BETWEEN (((((t0.c0)AND(t0.c59)))OR(t0.c59))) AND (((t0.c7)>=('1566362527')))), (((t0.c59)) BETWEEN (((+ (t0.c1)))) AND ((CAST(t0.c59 AS TEXT)))) FROM t0 WHERE (CAST(((((0.2381100738902323)AND(x'')))OR(0.33697439995476974)) AS REAL)) LIMIT -894783876 OFFSET 2095341726; -- 0ms;
SELECT UPPER(CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END), (AVG(t0.c1) IN (t0.c2 COLLATE RTRIM)), ((TYPEOF(t0.c59))LIKE(((t0.c7) IS FALSE))) FROM t0 WHERE ((((1.4221284E9 IN ())) ISNULL)); -- 0ms;
SELECT DISTINCT UPPER(CASE WHEN t0.c7 THEN t0.c2 ELSE t0.c59 END) FROM t0; -- 0ms;
SELECT ALL (((t0.c1, t0.c2, x'', t0.c0, t0.c0)) NOT BETWEEN (((t0.c59 IN ()), (((t0.c0, '-1174725908', t0.c59, t0.c1, t0.c2))>((t0.c59, t0.c2, t0.c0, t0.c2, t0.c1))), '', (t0.c0 IN ()), (((t0.c1)) NOT BETWEEN ((t0.c59)) AND ((t0.c7))))) AND (((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c59))), (t0.c1 IN ()), CASE WHEN t0.c7 THEN t0.c1 ELSE t0.c7 END, (t0.c0 IN ()), AVG(t0.c0)))) FROM t0; -- 0ms;
SELECT ALL ((t0.c0) NOT BETWEEN (678513059) AND (t0.c0)) COLLATE BINARY FROM t0 GROUP BY CAST(CASE t0.c2  WHEN t0.c7 THEN t0.c2 WHEN t0.c7 THEN t0.c7 WHEN t0.c59 THEN t0.c2 ELSE t0.c1 END AS NUMERIC); -- 0ms;
SELECT ALL ((((t0.c2) NOT BETWEEN (t0.c7) AND (t0.c0))) BETWEEN ((NOT (t0.c7))) AND (((t0.c7)==(t0.c7)))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c1 FROM t0 WHERE (((CAST(x'7723' AS TEXT)) IS FALSE)); -- 0ms;
SELECT (((((t0.c2, t0.c2, t0.c59))<((t0.c0, t0.c0, t0.c59)))) NOT BETWEEN ('1150618981') AND (CAST(t0.c0 AS NUMERIC))), (((t0.c1 IN ()))GLOB(MIN(t0.c2))), ((NULLIF(DISTINCT t0.c2, t0.c2)) BETWEEN (t0.c0) AND (((t0.c0)!=(t0.c2)))) FROM t0 ORDER BY ((x'')>=((- (t0.c0)))) DESC; -- 0ms;
SELECT ALL ((CAST(t0.c0 AS REAL)) BETWEEN (HEX(t0.c0)) AND (((((((((((((t0.c0)OR(t0.c59)))OR(t0.c7)))OR(t0.c2)))AND(t0.c0)))AND(-1469852429)))AND(t0.c7)))) FROM t0; -- 0ms;
SELECT DISTINCT '2127071318', SUM('-299147932'), ((((((t0.c59)&(t0.c1)))OR((t0.c0 IN ()))))AND((t0.c0 IN ()))) FROM t0 WHERE (((ROUND(x'', 0.15244919070234964))>>((NULL IN (x''))))); -- 0ms;
SELECT ABS(CAST(t0.c1 AS NUMERIC)) FROM t0 LIMIT -551254805 OFFSET -1332694010; -- 0ms;
SELECT ALL t0.c2 FROM t0 WHERE (CAST(CASE WHEN NULL THEN NULL ELSE '' END AS BLOB)); -- 0ms;
SELECT DISTINCT ((NOT (t0.c1)) IN ()), COUNT(*) OVER (), TOTAL(t0.c2) OVER ( ORDER BY ((((((((t0.c7)AND(t0.c0)))AND(t0.c1)))OR(t0.c1)))OR(t0.c2)) COLLATE NOCASE) FROM t0 WHERE ((((((x'')OR(NULL)))AND(0.04903053650336642)) IN (CASE WHEN '-600397172' THEN x'' END, ((x'') BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT DISTINCT ((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))<=(MIN(t0.c0))) FROM t0 WHERE (((CAST('0+q' AS NUMERIC)) NOT NULL)); -- 0ms;
SELECT DISTINCT ((t0.c2 IN ()) IN ()) FROM t0 LIMIT 727701784; -- 0ms;
SELECT ((CASE WHEN t0.c7 THEN t0.c59 END) NOT BETWEEN (((t0.c2)==(NULL))) AND (((t0.c0)||(t0.c0)))) FROM t0; -- 1ms;
SELECT DISTINCT TOTAL(((((t0.c0)AND(t0.c7)))OR(NULL))) FROM t0 WHERE (json_valid((NOT (0.9212002885572165)))); -- 0ms;
SELECT ALL NTILE((((((t0.c0)OR(t0.c1)))OR(t0.c7)) IN ())) OVER () FROM t0;SELECT (- (((t0.c1)GLOB(t0.c7)))) FROM t0; -- 0ms;
SELECT (((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c1)))) IS FALSE) FROM t0 GROUP BY SQLITE_COMPILEOPTION_USED(t0.c1 COLLATE BINARY), CASE t0.c1  WHEN t0.c59 THEN t0.c2 END COLLATE NOCASE COLLATE RTRIM, (((t0.c1)=(t0.c1)) IN ()); -- 0ms;
SELECT ALL (~ (TYPEOF(t0.c7))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c7) NOT BETWEEN (t0.c2) AND ('')))AND(((t0.c7) BETWEEN (t0.c59) AND (t0.c7)))))AND(((t0.c1)<=(t0.c2)))) FROM t0 GROUP BY CAST(CAST(t0.c0 AS BLOB) AS REAL) HAVING (((t0.c1)) NOT BETWEEN (((x'' IN ()))) AND ((t0.c59 COLLATE NOCASE))); -- 0ms;
SELECT ALL GROUP_CONCAT((t0.c59 IN (t0.c59, t0.c59)) COLLATE NOCASE) OVER (), (+ (((t0.c59)OR(x'')))), (~ (t0.c7)) FROM t0 WHERE ((((((((('')AND('')))AND(x'')))AND(x'')))OR(0x77e25116)) COLLATE RTRIM); -- 1ms;
SELECT ALL ((((t0.c1)>=(t0.c7)))-(t0.c2 COLLATE BINARY)) FROM t0 WHERE ((('63358650')||('-714472194')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (+ (LIKELY(DISTINCT t0.c2))) FROM t0 WHERE ((NOT ((NOT (NULL))))); -- 0ms;
SELECT '1721340227' FROM t0 LIMIT -1330170714 OFFSET 362074713; -- 0ms;
SELECT DISTINCT CASE t0.c59  WHEN t0.c0 THEN ((t0.c59)IS(t0.c7)) ELSE SUM(t0.c1) END, (((t0.c0) NOT NULL) IN ()), NTH_VALUE((((((t0.c7)%(t0.c1)), (0.9117316707826032 IN (t0.c7, t0.c59)), ((t0.c7) BETWEEN (t0.c1) AND (x''))))=((((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)), (- (t0.c59)), CASE WHEN t0.c59 THEN t0.c2 END))), (((((((((((t0.c7)OR(t0.c7)))AND(t0.c59)))OR(t0.c0)))OR(t0.c0))))<=((UNLIKELY(t0.c1))))) OVER () FROM t0 WHERE ((((CAST(6.335865E7 AS INTEGER)))=((NULL))));SELECT ((((t0.c2)GLOB(t0.c2)))==(GROUP_CONCAT(0.10058763332960319))), ((t0.c0) BETWEEN (t0.c7) AND (t0.c59)) COLLATE RTRIM, (('1儖gBᾣH&q') IS FALSE) FROM t0 WHERE (((((1.484736237E9)=(NULL)))IS(x'' COLLATE NOCASE))); -- 0ms;
SELECT ((((t0.c1)OR(((((t0.c7)AND(t0.c7)))AND(t0.c1)))))OR((((t0.c2))<>((t0.c7))))) FROM t0; -- 0ms;
SELECT CASE WHEN ABS(t0.c7) THEN t0.c2 COLLATE NOCASE ELSE (t0.c1 IN (t0.c2)) END FROM t0; -- 0ms;
SELECT DISTINCT AVG(CAST(t0.c7 AS INTEGER) COLLATE BINARY), (((((((((~ (t0.c0)))OR((((x'6b5a')) BETWEEN ((t0.c2)) AND ((t0.c59))))))OR(((t0.c0)AND(t0.c0)))))OR(t0.c2)))OR(t0.c7)), t0.c2 FROM t0 ORDER BY (((((t0.c1))>=((t0.c7)))) NOT NULL) ASC, NULL, LIKELY(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) ASC; -- 0ms;
SELECT DISTINCT MIN((t0.c0 IN (t0.c0))), CAST(((((t0.c59)OR(36511692)))AND(t0.c59)) AS BLOB), (t0.c2 IN (t0.c7)) COLLATE BINARY FROM t0 WHERE (CASE CAST('' AS BLOB)  WHEN (((0.9646318037428784)) BETWEEN (('')) AND ((x''))) THEN SQLITE_COMPILEOPTION_GET('Y/''v5') WHEN CASE WHEN NULL THEN 0xffffffffb9fb1aec ELSE NULL END THEN (('2076608517')>(NULL)) WHEN CASE WHEN '-916408822' THEN '-916408822' WHEN -1.469852429E9 THEN 0.6758475895101703 WHEN '6M' THEN '1931095923' ELSE '1536876128' END THEN ((x'')%(NULL)) END); -- 1ms;
SELECT ALL CAST(t0.c0 COLLATE NOCASE AS INTEGER) FROM t0 WHERE (((((('s1^㠘HM嚦7#') IS TRUE)))<=((json(NULL))))) ORDER BY (~ (t0.c7 COLLATE NOCASE)) DESC; -- 0ms;
SELECT ALL GROUP_CONCAT(((((t0.c7)AND(t0.c0)))AND(t0.c7))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0 GROUP BY (((((t0.c0 IN ()))OR(((((t0.c0)AND(t0.c7)))AND(t0.c2)))))AND(((t0.c7) IS FALSE))), ((((((((((t0.c1)OR('-773017446')))OR(t0.c59)))OR(t0.c1)))AND(t0.c0))) IS TRUE), ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))==(((t0.c7) NOT BETWEEN (t0.c59) AND (t0.c59)))) HAVING ((CAST(t0.c1 AS TEXT)) NOTNULL); -- 0ms;
SELECT ALL (((t0.c2, t0.c59, t0.c59)) BETWEEN ((t0.c1 COLLATE RTRIM, ((t0.c0) NOT NULL), t0.c0 COLLATE BINARY)) AND ((CASE WHEN 0.9188472725227878 THEN t0.c59 ELSE t0.c0 END, ((t0.c1)AND('-145607008')), CASE WHEN t0.c59 THEN t0.c7 ELSE t0.c1 END))), CASE COUNT(t0.c1)  WHEN '-855256455' COLLATE RTRIM THEN t0.c2 END, LAST_VALUE(t0.c2) OVER ( ORDER BY t0.c1, t0.c7 ASC) FROM t0 WHERE ((((((((((((x''))<=((NULL))))OR((((NULL)) BETWEEN ((NULL)) AND (('-1703200373'))))))AND(CASE ''  WHEN x'' THEN x'' END)))OR(x'')))OR((('-1189396025')|('1566362527'))))); -- 0ms;
SELECT DISTINCT COUNT(*), (((((t0.c1) ISNULL), ((t0.c1)IS NOT(t0.c2)), COUNT(*)))>=((TIME(t0.c59, t0.c2, t0.c1), 1.954691096E9, ((t0.c1) BETWEEN (t0.c2) AND ('6m'))))), GROUP_CONCAT(t0.c2) FROM t0; -- 0ms;
SELECT ((((t0.c7) BETWEEN (t0.c7) AND (t0.c0))) NOT BETWEEN (t0.c1 COLLATE BINARY) AND (NULLIF(DISTINCT t0.c7, t0.c2))) FROM t0 LIMIT -2070153698 OFFSET -129034740; -- 0ms;
SELECT DISTINCT CAST((((t0.c59)) NOT BETWEEN (('678513059')) AND ((t0.c0))) AS REAL), CAST('-855256455' AS NUMERIC), '' FROM t0; -- 0ms;
SELECT DISTINCT (((COALESCE(t0.c1, t0.c0, t0.c2, t0.c2)))<((TYPEOF(t0.c59)))) FROM t0 WHERE ((((((0Xffffffffb5256213, '欱)|d\nX鞎&', ''))<=((x'', x'', x'')))) NOTNULL)) LIMIT -1296041709 OFFSET 1484736237; -- 0ms;
SELECT DISTINCT ((((t0.c2 COLLATE RTRIM)OR(((t0.c1) BETWEEN (t0.c1) AND (-778245250)))))AND(CAST(t0.c1 AS INTEGER))) FROM t0; -- 0ms;
SELECT DISTINCT LIKELY(t0.c1 COLLATE RTRIM), LAST_INSERT_ROWID(), t0.c1 FROM t0; -- 0ms;
SELECT (((~ (t0.c2))) BETWEEN (((((t0.c1)AND(t0.c0)))AND(t0.c7))) AND (((((t0.c0)OR(t0.c1)))AND(t0.c59)))) FROM t0 WHERE ('?9뻫5,'); -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c0 THEN t0.c59 ELSE 0.9117316707826032 END)LIKE(t0.c1)) FROM t0 LIMIT 1042219582; -- 0ms;
SELECT NULL FROM t0 WHERE (',[') LIMIT 141440103 OFFSET -97981292; -- 0ms;
SELECT DISTINCT COUNT(t0.c59) FROM t0; -- 0ms;
SELECT DISTINCT '642795984' COLLATE RTRIM FROM t0 WHERE (x'9d95') ORDER BY ((t0.c2)/(t0.c0)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT '678513059'), ((((t0.c2) NOT BETWEEN (t0.c7) AND (t0.c1)))+(((t0.c59) NOT BETWEEN (t0.c0) AND (t0.c2)))), (+ (UPPER(t0.c0))), (((((((((((t0.c59)OR(t0.c1)))AND(t0.c7)))AND(t0.c2)))OR(t0.c2)), ((t0.c1) NOTNULL), (((t0.c1, t0.c7, t0.c1)) NOT BETWEEN ((t0.c2, t0.c0, t0.c0)) AND ((t0.c2, x'', t0.c2)))))>=((HEX(t0.c0), ((t0.c59) BETWEEN (t0.c7) AND (t0.c7)), (t0.c0 IN (t0.c1))))), -1406278081 FROM t0 WHERE (CAST((- (0.8082892733179642)) AS INTEGER)); -- 0ms;
SELECT ALL json_array(((t0.c0)<=(t0.c2)), (t0.c7 IN (t0.c0)), CASE t0.c59  WHEN 0.17687858082559416 THEN t0.c7 ELSE t0.c0 END, (t0.c0 IN ())) FROM t0 WHERE ((((x'', NULL, 0.9446296652219925)) NOT BETWEEN ((0.6853326267176358, (((((((('0.33697439995476974')AND(NULL)))OR('>')))OR(0.43994999591124706)))OR(x'')), CAST('-401233681' AS INTEGER))) AND ((((0.6554255214651256)LIKE(NULL)), (('')>(x'')), (('') NOT BETWEEN ('1527155517') AND (1.204460308E9)))))); -- 1ms;
SELECT DISTINCT (((t0.c7, t0.c0, t0.c7)) NOT BETWEEN ((t0.c7, t0.c2, t0.c7)) AND ((t0.c0, t0.c0, t0.c2))) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((0Xfffffffffdf1a011)>=(t0.c2)) THEN json(t0.c7) ELSE ((t0.c0)/(t0.c0)) END FROM t0 WHERE (((~ ('El[-xN')) IN ((('179383824')%(x''))))) EXCEPT SELECT (t0.c59 IN ()) COLLATE RTRIM FROM t0 WHERE (NULL) LIMIT 1413741378; -- 0ms;
SELECT ALL ((((t0.c2)%(t0.c7))) IS TRUE) FROM t0 WHERE (CASE WHEN (('ySO齟Q<G')*(0.9520979763826208)) THEN CASE 0.13048498482686088  WHEN NULL THEN 'DX' ELSE 'x僧2' END WHEN INSTR(x'', 0X69dc64f8) THEN ((NULL) IS TRUE) WHEN CAST('Y/''V5' AS REAL) THEN (- (NULL)) ELSE 0.5718600397391673 END) ORDER BY CAST(CAST(t0.c59 AS INTEGER) AS INTEGER)  NULLS LAST; -- 2ms;
SELECT DISTINCT t0.c59 FROM t0 WHERE (CASE (NULL IN (0.40980938352288376, x'2e55'))  WHEN (('')>>(x'')) THEN 0Xffffffffbc7a404a WHEN (('0.3509817678373368') BETWEEN ('') AND ('1413741378')) THEN NULL WHEN ((-98924976) IS FALSE) THEN LIKELIHOOD(0X6fc63b6b, 0.5614041941457774) ELSE (0.708572834039108 IN (0Xffffffffbebdb7a6, '0.37367609812908964')) END); -- 0ms;
SELECT DISTINCT ((t0.c1) ISNULL) COLLATE BINARY FROM t0 WHERE (((((('邏H'))>=((-145607008))))&((+ (''))))); -- 0ms;
SELECT DISTINCT CAST(((t0.c2) NOTNULL) AS BLOB) FROM t0 WHERE (CAST(('' IN ()) AS TEXT)) GROUP BY ((NULL COLLATE NOCASE)-(TRIM(DISTINCT t0.c2))) LIMIT 1204460308; -- 0ms;
SELECT DISTINCT ((+ (t0.c0)) IN ((t0.c7 IN (t0.c2)))) FROM t0 WHERE ((- (CAST(',]' AS BLOB)))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((((((TYPEOF(x''))AND((+ (t0.c0)))))OR((('-1510072413') ISNULL))))AND(((t0.c7) NOTNULL))))AND((t0.c1 IN ()))) DESC  NULLS LAST), PERCENT_RANK() OVER ( GROUPS  UNBOUNDED PRECEDING), ((((t0.c7) NOT BETWEEN (t0.c59) AND (t0.c59)))>=(((((t0.c7)OR(t0.c2)))AND(t0.c59)))) FROM t0 WHERE (UPPER(((('kI>/A絑.!')) BETWEEN ((0.5484858237146056)) AND ((0.4393929755503093))))); -- 0ms;
SELECT CASE t0.c2  WHEN ((((t0.c1)OR(t0.c0)))OR(t0.c2)) THEN t0.c7 END FROM t0 WHERE (CAST(((-8.55256455E8)/(NULL)) AS INTEGER)); -- 0ms;
SELECT DISTINCT SUM((~ (t0.c0))) FILTER(WHERE (+ (CASE t0.c1  WHEN t0.c59 THEN t0.c59 ELSE t0.c2 END))) OVER (), (NOT (TRIM(DISTINCT t0.c2, t0.c7))), (CAST(t0.c2 AS NUMERIC) IN ()) FROM t0 WHERE (CAST(((0xffffffffe6222fb5)LIKE('-331377459')) AS REAL)); -- 0ms;
SELECT DISTINCT t0.c1 FROM t0; -- 0ms;
SELECT AVG(((t0.c0) NOTNULL)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT (NOT (CAST(t0.c59 AS BLOB))) FROM t0 WHERE (((((NULL)>>(0.3947069368902155))) BETWEEN ((- (NULL))) AND (((x'2dee')+(0.6077954500140638))))); -- 0ms;
SELECT ((((t0.c2) NOT BETWEEN (t0.c59) AND (t0.c7)))<(((0.7925746026518987)<(t0.c59)))) FROM t0; -- 0ms;
SELECT DISTINCT MAX(((t0.c2)-('1372753691'))), LEAD(CASE LIKELY(t0.c1)  WHEN ('1360346219' IN ()) THEN UPPER(t0.c2) ELSE TIME(0.7968379068772125, t0.c1, t0.c2, t0.c7, t0.c2) END, CAST(((t0.c2) ISNULL) AS TEXT), ((((t0.c59) NOT BETWEEN (t0.c1) AND (t0.c59)))OR((((0.35650778639338265))<=((t0.c59)))))) OVER (), ((((t0.c59)&(t0.c1))) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND ((t0.c1 IN ()))) FROM t0 WHERE (((((1398677572) BETWEEN (x'') AND ('2074098840'))) NOT BETWEEN ((('0.13048498482686088') NOTNULL)) AND (((('Y'))>=((889317021)))))); -- 0ms;
SELECT DISTINCT COUNT(((t0.c59)<>(t0.c0))), LENGTH(CASE WHEN NULL THEN t0.c59 WHEN t0.c2 THEN t0.c1 WHEN t0.c59 THEN t0.c0 ELSE t0.c1 END), ABS((NOT (t0.c2))) FROM t0; -- 0ms;
SELECT (((t0.c59 IN ())) NOT BETWEEN (TOTAL(t0.c2)) AND ((+ ('/''!6PX5T')))), ((((((t0.c7)OR(t0.c7)))AND(t0.c1)))-(((t0.c59)>(t0.c1)))), -1.094862938E9 FROM t0; -- 0ms;
SELECT ALL TRIM(((((((((t0.c59)OR(t0.c59)))AND(t0.c7)))AND(t0.c7)))AND(t0.c1))) FROM t0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t0 WHERE ((((((NULL))!=((0.7856244778795282))))<<((('566250187') IS FALSE)))); -- 0ms;
SELECT ALL (((-600397172, ((x'') IS TRUE), ((((0.8287458019592983)OR(t0.c1)))OR(t0.c59)), ((t0.c0)IS NOT(NULL)), (t0.c1 IN ('-254522791', t0.c7))))<(((t0.c7 IN ()), AVG(t0.c1), CASE WHEN t0.c59 THEN t0.c2 WHEN t0.c1 THEN t0.c59 WHEN t0.c59 THEN t0.c59 ELSE t0.c59 END, t0.c7, CASE WHEN t0.c7 THEN 0.2928855758771888 ELSE t0.c7 END))), LIKE(((((t0.c7)AND(t0.c59)))AND(t0.c1)), t0.c59), ((((((t0.c0, t0.c0, t0.c7))==((t0.c2, t0.c0, t0.c1)))))>((((t0.c1) NOT BETWEEN (x'') AND (t0.c0))))), ((((t0.c2) NOTNULL)) NOT NULL), ((t0.c0)/('%k')) COLLATE BINARY FROM t0; -- 1ms;
SELECT json_valid(((0.4165785689146705)=(t0.c59))), ((((t0.c7) IS FALSE))<<(CASE WHEN t0.c7 THEN t0.c59 END)), (- (t0.c1)) FROM t0; -- 0ms;
SELECT CASE (t0.c0 IN (t0.c0))  WHEN (- (t0.c2)) THEN STRFTIME(t0.c59, t0.c1, t0.c2) WHEN NULL COLLATE RTRIM THEN CASE t0.c2  WHEN t0.c1 THEN x'' WHEN t0.c0 THEN '-974773809' WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END WHEN json_remove(t0.c59, t0.c2) THEN UPPER(t0.c0) ELSE ((0.2911310968021936)LIKE(t0.c59)) END FROM t0;SELECT DISTINCT ((((t0.c59)OR(t0.c1)))AND(t0.c0)) COLLATE RTRIM FROM t0 WHERE (((((((((((0.05511806587928847) NOTNULL))AND(NULL)))AND(('!a' IN ()))))OR(((NULL) NOT BETWEEN (NULL) AND ('1136508743')))))AND(x'74ef192b' COLLATE NOCASE))); -- 0ms;
SELECT ALL ((NULL) BETWEEN (((((t0.c59)AND(t0.c7)))AND(x'd67d'))) AND (((t0.c59) BETWEEN (t0.c1) AND (t0.c7)))) FROM t0; -- 0ms;
SELECT DISTINCT (t0.c1 IN ()) FROM t0; -- 0ms;
SELECT ALL (((- (t0.c7)))<(CAST(t0.c0 AS INTEGER))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c1, t0.c1, t0.c2)) BETWEEN ((GROUP_CONCAT(t0.c59), LTRIM(t0.c2), t0.c1 COLLATE BINARY)) AND ((MIN('q%'), GROUP_CONCAT(t0.c2), NULL))), MIN(((t0.c7)||(t0.c59))), TRIM(((t0.c1)<<(t0.c1))), ((((((((CAST(t0.c59 AS NUMERIC))OR(0.4676311834533805)))AND(((t0.c1)!=(t0.c7)))))AND(((t0.c2)|(t0.c7)))))AND((NULL IN ()))), ((t0.c0 COLLATE BINARY) IS FALSE) FROM t0 GROUP BY t0.c0 HAVING ((((((((CASE WHEN t0.c2 THEN t0.c7 END)OR(((x'') NOT BETWEEN (t0.c1) AND (t0.c7)))))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c59)))))AND((t0.c1 IN (t0.c1, t0.c0)))))OR(((t0.c2)>>(t0.c7)))); -- 0ms;
SELECT ALL ((((((((((((t0.c0)AND(0xffffffffef83b011)))AND(t0.c59)))AND(NULL)))AND(t0.c2)))OR(x'')))OR(t0.c59)) COLLATE RTRIM FROM t0 WHERE ((((NOT (x'bdfd'))) NOT BETWEEN (CAST('2033488083' AS BLOB)) AND ('q%'))); -- 0ms;
SELECT DISTINCT (~ (IFNULL(DISTINCT t0.c7, t0.c0))) FROM t0 GROUP BY (((t0.c0)+(t0.c59)) IN ()) HAVING CAST(((t0.c2)-(t0.c0)) AS INTEGER) LIMIT 573185203 OFFSET -916408822; -- 1ms;
SELECT TOTAL(CAST(t0.c0 AS REAL)) OVER (), (((t0.c1)) BETWEEN (((- (t0.c7)))) AND ((MIN(t0.c7)))), (+ ((- ('-192141264')))) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c59 COLLATE RTRIM) ISNULL) FROM t0 WHERE ((((NULL IN ()))&((- (0.7457420239649122))))); -- 0ms;
SELECT DISTINCT t0.c7 FROM t0; -- 0ms;
SELECT DISTINCT (+ ((NOT (t0.c1)))) FROM t0 WHERE (((((x'dd1b' IN ())))==(((('g/')/('')))))) GROUP BY (((((((((((t0.c7)OR(t0.c59)))AND(6.42795984E8)))AND('PL+gT')))AND(t0.c1)), ((t0.c0) NOT NULL), (~ (t0.c2))))>=((((t0.c1)*(0.030785808993412322)), CAST(t0.c1 AS TEXT), COALESCE(DISTINCT t0.c2, t0.c59, t0.c0, t0.c7)))) HAVING CASE ((t0.c2) NOTNULL)  WHEN MAX(t0.c2) THEN ((t0.c1) NOTNULL) WHEN LIKELIHOOD(DISTINCT 'DX', 0.36589500195394953) THEN CASE t0.c59  WHEN t0.c0 THEN x'' WHEN t0.c59 THEN t0.c59 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END WHEN ((((t0.c59)AND(t0.c59)))AND('0.7968379068772125')) THEN DATETIME(t0.c1, t0.c59, t0.c7, '0.7968379068772125', t0.c2) END; -- 0ms;
SELECT DISTINCT ((t0.c7) ISNULL) COLLATE NOCASE COLLATE RTRIM FROM t0; -- 0ms;
SELECT ALL (((((t0.c7)AND(t0.c2)))OR(t0.c1)) IN ()) FROM t0 WHERE (((((x'4c21')%(x''))) ISNULL)) LIMIT 1183872093 OFFSET 1875262315; -- 0ms;
SELECT DISTINCT t0.c59, t0.c2, NTH_VALUE((((t0.c2 IN ()))=(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c59)))), ((((t0.c2 IN ())))<=((((t0.c7)%(NULL)))))) OVER ( ORDER BY (((t0.c7)) NOT BETWEEN ((CAST(t0.c1 AS INTEGER))) AND (((((t0.c1))<=((t0.c0)))))) DESC  NULLS FIRST), CAST(((t0.c0) IS TRUE) AS BLOB), ((((t0.c0)>(t0.c59)))|(((t0.c59) ISNULL))) FROM t0 WHERE (((-1569633737) BETWEEN (x'') AND ('')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE CASE WHEN t0.c59 THEN t0.c2 ELSE t0.c59 END  WHEN t0.c59 COLLATE RTRIM THEN ((t0.c7)AND(t0.c2)) END FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c7))>((x'1074a39d'))) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT json_patch(((t0.c2) NOT BETWEEN (t0.c59) AND (t0.c1)), x''), ((((((t0.c59)OR(t0.c2)))AND(t0.c0))) NOTNULL), t0.c7 COLLATE RTRIM FROM t0;SELECT ALL (((t0.c2 IN ()))IS NOT(LIKELIHOOD(t0.c59, 0.8334278538026993))) FROM t0 WHERE (JULIANDAY(STRFTIME(NULL, '', '-1307077563'), CAST(1509198335 AS BLOB), ((((0.3947069368902155)OR('1444109665')))OR(6.6945918E8)))) ORDER BY TRIM(DISTINCT CASE WHEN t0.c0 THEN t0.c1 END, t0.c2 COLLATE NOCASE); -- 0ms;
SELECT ALL STRFTIME((((t0.c1)) NOT BETWEEN ((t0.c59)) AND ((t0.c1))), (((t0.c59, t0.c7, t0.c1))<((x'', t0.c7, t0.c1))), (((t0.c7, t0.c1, t0.c0))<=((669459180, t0.c59, t0.c2)))) FROM t0 WHERE (((((((((('-666460182')AND('-793089636')))OR(x'')))AND(0.857676678880406)))AND('\r]')) IN ())); -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN 0xffffffffc947e2ef THEN t0.c7 ELSE t0.c0 END)OR(((t0.c1)>>(t0.c2)))))AND('1458917932')))AND(((t0.c1)/(t0.c2)))))OR(((t0.c59)OR(t0.c7)))), t0.c0, '-2097432432' COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE NOCASE, CAST(NULL AS REAL) COLLATE RTRIM, t0.c1 FROM t0 ORDER BY ((((t0.c59)|(t0.c7)))>>((+ (t0.c59)))) DESC  NULLS LAST, ((((t0.c7) NOT BETWEEN (t0.c1) AND (t0.c0))) BETWEEN ((+ (1.2793491E7))) AND ((- (t0.c59)))) ASC; -- 0ms;
SELECT DISTINCT (+ ((((t0.c1))!=((t0.c59))))) FROM t0 WHERE (((((((NULL)OR('-98924976')))OR((((0.4053983294468573)) NOT BETWEEN (('-855256455')) AND ((x''))))))AND(((('-331377459', NULL, 0x77dac3f7))=((NULL, x'0aab', 0.04903053650336642)))))) LIMIT 805353747 OFFSET 1806002681; -- 0ms;
SELECT DISTINCT (((((t0.c0))==((t0.c1))))>>(SUM(t0.c0))) FROM t0 ORDER BY CAST((~ (t0.c59)) AS REAL) ASC, x'' ASC, ((json_valid(t0.c0)) BETWEEN (((t0.c59)||(t0.c1))) AND (((t0.c59)||(183467345))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c59 COLLATE BINARY THEN t0.c1 WHEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE t0.c7 END THEN ((t0.c59)-(t0.c1)) WHEN (((t0.c2)) NOT BETWEEN ((t0.c59)) AND ((t0.c59))) THEN ((t0.c0) ISNULL) ELSE (((t0.c7))<=(('-903355826'))) END, NTH_VALUE((~ (t0.c0 COLLATE NOCASE)), highlight((((t0.c59))<((t0.c7))), ((t0.c59) IS TRUE), ((t0.c59) IS FALSE), t0.c0 COLLATE RTRIM)) OVER (), MAX(((((t0.c1)OR(t0.c7)))AND(t0.c0))) FROM t0 WHERE (((CAST(x'' AS REAL)) BETWEEN (0.7574919717984521) AND (((0x5df48bf3)%(NULL)))));SELECT ALL CAST(0.4351358608247118 AS BLOB), COUNT(((((t0.c7)AND(t0.c1)))OR(t0.c59)) COLLATE RTRIM) FILTER(WHERE CASE (+ (t0.c1))  WHEN CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c59 END THEN LIKELIHOOD(t0.c0, 0.5399516377326187) END) OVER (), (((- (0.6856609549316728))) BETWEEN (MIN(t0.c59)) AND (CASE WHEN t0.c0 THEN t0.c0 END)) FROM t0 WHERE ((((- (NULL)))<<(((((0X2241ca4b)OR(NULL)))OR('{kd({Gc'))))); -- 0ms;
SELECT ALL '.a' FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c1) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT AVG((t0.c2 IN (t0.c59))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 WHERE ((('611771098')==(MIN('1661141160', 'j')))) ORDER BY (((t0.c1 IN (t0.c2))) BETWEEN (((((((((t0.c1)OR(t0.c7)))OR(t0.c7)))AND(t0.c59)))AND(t0.c59))) AND (NULLIF(DISTINCT t0.c0, t0.c2))) DESC; -- 0ms;
SELECT DISTINCT (((t0.c7)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c7)))) AND (((t0.c0 IN (t0.c7))))), NTH_VALUE(((t0.c0 COLLATE BINARY) IS TRUE), (((t0.c7)%(t0.c0)) IN (((t0.c59) ISNULL)))) OVER ( PARTITION BY (((((t0.c59)) NOT BETWEEN ((-7.97544196E8)) AND ((t0.c7)))) NOT BETWEEN ((t0.c59 IN (t0.c7))) AND ((((t0.c59)) BETWEEN ((t0.c7)) AND ((t0.c0))))), ((((0.821556151100699)AND(((((t0.c59)AND(t0.c1)))AND(t0.c1)))))OR(CASE WHEN t0.c2 THEN t0.c7 WHEN t0.c7 THEN 0.6421082279657032 WHEN t0.c59 THEN t0.c1 ELSE t0.c7 END)), CAST(((t0.c59) IS FALSE) AS BLOB), t0.c2, ((t0.c7 IN ()) IN ()), ((((t0.c2)<(t0.c0))) BETWEEN ((((t0.c7))<>((t0.c0)))) AND (((t0.c1)=(t0.c2))))), LAST_VALUE(CAST(x'' AS BLOB)) OVER () FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(CASE WHEN '-1e500' THEN 1142276831 ELSE '-894783876' END)); -- 0ms;
SELECT ((GROUP_CONCAT(t0.c7))<=(CAST(t0.c1 AS NUMERIC))), t0.c2, NULLIF(CASE WHEN t0.c1 THEN t0.c7 END, (((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c7)))) FROM t0; -- 1ms;
SELECT CASE (((t0.c0, t0.c0, t0.c59)) NOT BETWEEN ((t0.c59, t0.c0, t0.c0)) AND ((0.24415330780817868, t0.c2, t0.c1)))  WHEN CAST(t0.c7 AS TEXT) THEN ((t0.c1) BETWEEN (t0.c59) AND (t0.c59)) ELSE (~ (t0.c59)) END FROM t0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT '321589207' COLLATE NOCASE) FROM t0 GROUP BY ((((t0.c7)>=(t0.c1))) BETWEEN (((t0.c7) IS FALSE)) AND ((t0.c1 IN ()))) HAVING ((t0.c1 COLLATE RTRIM) IS TRUE); -- 0ms;
SELECT ALL DENSE_RANK() OVER (), CAST(((t0.c7)&(t0.c1)) AS TEXT), t0.c2 FROM t0 WHERE (CASE WHEN x'' COLLATE BINARY THEN ((((((((0.43653624079148223)OR(x'')))AND(x'e3640db6')))OR(0xffffffffb0b734a6)))AND('2010825719')) ELSE LIKELY(DISTINCT ' []G') END); -- 0ms;
SELECT DISTINCT ((((((((((t0.c59) BETWEEN (NULL) AND (t0.c7)))AND(CASE t0.c1  WHEN t0.c2 THEN t0.c59 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c59 END)))OR(CAST(t0.c2 AS TEXT))))OR(AVG(t0.c1))))AND(t0.c7 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)<>(t0.c0))) NOTNULL) FROM t0 WHERE (((UNLIKELY('o#F8'))>(1154587492))); -- 0ms;
SELECT DISTINCT CASE (t0.c59 IN (t0.c7, t0.c2))  WHEN ((((((((t0.c2)OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))OR(t0.c1)) THEN ((0.534200934263009)%(t0.c59)) WHEN t0.c59 COLLATE NOCASE THEN 0Xffffffffad657430 WHEN ((t0.c1)+(t0.c1)) THEN 1.7976931348623157E308 COLLATE NOCASE END FROM t0; -- 0ms;
SELECT DISTINCT LEAD((HEX(t0.c1) IN (((t0.c7)>=(t0.c59)))), ((((((t0.c7) NOT BETWEEN (t0.c7) AND (t0.c0)))OR(CASE WHEN t0.c7 THEN t0.c7 END)))OR((((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c59))))), SUBSTR(CAST(t0.c7 AS REAL), (t0.c0 IN ('0m<셼JkO')))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (t0.c2 IN (t0.c7, t0.c7)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ALL ((CASE t0.c1  WHEN t0.c7 THEN t0.c2 WHEN t0.c2 THEN x'' WHEN t0.c59 THEN t0.c1 END)%((((t0.c2, t0.c2, 'Idzm됆JK'))>=((t0.c1, t0.c0, t0.c1))))) FROM t0 LIMIT -545462934; -- 0ms;
SELECT DISTINCT MAX(COUNT(*)), (((t0.c1, t0.c7, t0.c1)) BETWEEN ((((((((((t0.c59)AND(t0.c59)))OR(t0.c2)))OR(t0.c2)))OR(t0.c2)), CAST(t0.c59 AS TEXT), t0.c1)) AND ((((NULL) IS TRUE), (t0.c1 IN ()), ((t0.c2) BETWEEN (t0.c1) AND (t0.c1))))), ((((CAST(t0.c0 AS TEXT))OR((~ (t0.c59)))))AND(((t0.c2) IS TRUE))) FROM t0 WHERE ((((MIN(x'', NULL)))<=(('981938366'))));SELECT DISTINCT ((((t0.c0)AND(t0.c59)))OR(t0.c0)) COLLATE RTRIM FROM t0; -- 1ms;
SELECT ((((t0.c0)<(t0.c7)))!=(((((t0.c7)OR(t0.c59)))OR(t0.c2)))), DENSE_RANK() OVER (), ((((IFNULL(t0.c1, 0.5706844750137365))AND(CASE t0.c0  WHEN t0.c59 THEN t0.c0 END)))AND(GROUP_CONCAT(t0.c7))) FROM t0; -- 0ms;
SELECT ALL (- ((('''+q')||(t0.c2)))) FROM t0; -- 0ms;
SELECT CASE WHEN t0.c7 THEN ((t0.c7)||(t0.c59)) END, (~ (((((((((t0.c0)AND(t0.c7)))AND(t0.c2)))AND(t0.c2)))AND(t0.c7)))), (((('1-500000') NOT NULL)) NOT BETWEEN ((t0.c2 IN ())) AND (((((t0.c7)OR(t0.c0)))AND(t0.c7)))), (((~ (-1812607278)))!=(t0.c0 COLLATE NOCASE)), CAST(json_valid(t0.c7) AS TEXT) FROM t0 ORDER BY CASE (t0.c7 IN ())  WHEN t0.c7 THEN (+ (t0.c1)) WHEN CASE t0.c2  WHEN t0.c59 THEN t0.c7 ELSE t0.c0 END THEN ('1484736237' IN ()) WHEN (t0.c0 IN ()) THEN (- (t0.c2)) ELSE INSTR(t0.c0, t0.c2) END ASC; -- 0ms;
SELECT DISTINCT 'M嵤', (((t0.c2)) BETWEEN ((NULL)) AND (((t0.c7 IN ())))), FIRST_VALUE(CASE CAST(t0.c0 AS REAL)  WHEN ((t0.c59)<<(t0.c1)) THEN CAST(x'' AS INTEGER) ELSE ((t0.c7) BETWEEN (t0.c1) AND (t0.c1)) END) OVER () FROM t0; -- 0ms;
SELECT ((((t0.c1)=(t0.c1)))-(rtreenode(t0.c1, t0.c2))) FROM t0 WHERE (CASE WHEN CAST(x'' AS REAL) THEN CASE NULL  WHEN 3.62074713E8 THEN ')t' END WHEN TRIM(0xffffffffeabece75, '&_DWLGC|') THEN ((('1622743383')) BETWEEN ((NULL)) AND ((-1.197667246E9))) WHEN x'' THEN NULL COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT (((((t0.c1))<>((t0.c0)))) ISNULL), t0.c2, COUNT(t0.c1) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c0)%(t0.c7)))OR(((t0.c2)>>(t0.c0)))))AND(CASE WHEN t0.c59 THEN t0.c7 WHEN t0.c7 THEN t0.c59 WHEN t0.c2 THEN 0x7da3c9ea ELSE 0.6716017518025325 END)) FROM t0; -- 0ms;
SELECT DISTINCT (- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)) FROM t0 WHERE (((((((NULL)) NOT BETWEEN ((NULL)) AND ((x'')))))<=(((((('-1197977426')OR('-299147932')))AND(x'')))))) LIMIT 1831566908 OFFSET 1875262315; -- 0ms;
SELECT ALL ((AVG(t0.c1)) BETWEEN ((NOT (0.5577698248247063))) AND (t0.c1)) FROM t0 WHERE (HEX((~ (x'')))) GROUP BY CAST(NULL AS REAL), (((t0.c2)) NOT BETWEEN ((((((t0.c59)AND(t0.c2)))OR(NULL)))) AND ((((t0.c2) IS FALSE)))), t0.c7 HAVING (((t0.c2, t0.c2, 0.8132432365834734, t0.c0, t0.c7)) BETWEEN ((x'', ((((((((t0.c2)OR(t0.c1)))AND(t0.c7)))OR(t0.c0)))AND(1.527155517E9)), ((((t0.c0)AND(t0.c59)))AND(t0.c7)), LIKELIHOOD(t0.c0, 0.08852364041256944), t0.c1)) AND ((PRINTF(t0.c7, t0.c2, t0.c2), t0.c0 COLLATE RTRIM, ((t0.c59)|(t0.c0)), ((t0.c7)GLOB(t0.c7)), (((t0.c7)) BETWEEN ((t0.c7)) AND ((t0.c2)))))) ORDER BY (HEX('-1425463979') IN ())  NULLS FIRST, ABS(((('-1741130831'))<=((t0.c0)))) DESC; -- 0ms;
SELECT ((CASE t0.c7  WHEN x'6e25' THEN t0.c7 ELSE t0.c59 END) IS FALSE) FROM t0 WHERE ((0xffffffff9a7b398b IN ())); -- 0ms;
SELECT ALL (- ((NOT (t0.c1)))) FROM t0 WHERE (((((((('Ga\n%'))<((0.29876586266341454))))OR(((('')) NOT BETWEEN (('n飹3')) AND ((0Xffffffffd8926272))))))OR((('-1574895155')+(x'6c66'))))) LIMIT 1484736237 OFFSET -1675041258; -- 0ms;
SELECT DISTINCT AVG(NULL) OVER () FROM t0 WHERE ((((CASE ''  WHEN x'' THEN 0.35650778639338265 ELSE x'' END, CASE WHEN x'355e' THEN 0.492649892833978 WHEN 0x6bca2482 THEN 1.360346219E9 WHEN 0.8212803302641173 THEN NULL END, (0x717e66f9 IN ())))=((CASE 0.7722160936762708  WHEN NULL THEN '' ELSE 681754803 END, CAST('1906514713' AS TEXT), CASE x'7bb3'  WHEN NULL THEN NULL ELSE x'' END)))); -- 1ms;
SELECT ALL (((t0.c59) IS FALSE) IN ()) FROM t0 WHERE ((((((- ('0.5484858237146056')))AND((- (NULL)))))OR(CAST(NULL AS BLOB)))) LIMIT 129076162 OFFSET 1060664962; -- 0ms;
SELECT ((((t0.c1) IS FALSE))%(COALESCE(DISTINCT t0.c2, t0.c2))) FROM t0 ORDER BY ((~ (t0.c1)) IN ()), (((t0.c59)) NOT BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((TYPEOF(t0.c2)))) DESC  NULLS LAST LIMIT 939512849; -- 0ms;
SELECT ALL (~ (UPPER(DISTINCT t0.c0))), CAST(((t0.c7)&('vv)7Z}|%%')) AS INTEGER), ((((t0.c2) BETWEEN (t0.c0) AND (x'e637'))) ISNULL) FROM t0 WHERE (((((((((((NULL)OR(x'')))OR(x'')))AND(NULL)))AND(NULL))) NOTNULL)); -- 0ms;
SELECT ALL CASE WHEN ((t0.c59)==(t0.c2)) THEN t0.c59 WHEN ((t0.c7)+(t0.c2)) THEN CAST(t0.c7 AS NUMERIC) WHEN (((0.575193304835302, t0.c59, t0.c1))>((t0.c59, t0.c2, '-433967179'))) THEN '' END FROM t0 WHERE ((0.6716017518025325 IN (NULL, (NOT (0.38167284327273343))))); -- 0ms;
SELECT DISTINCT (((t0.c2)) BETWEEN ((MIN(t0.c2))) AND ((COUNT(*)))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c1) BETWEEN (0.47781104904264604) AND (t0.c59)) AS REAL) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) NOTNULL)) NOTNULL), COUNT(*) OVER (), ((((((t0.c2)IS NOT(t0.c59)))OR(((t0.c59) IS TRUE))))AND((~ (t0.c59)))) FROM t0 WHERE (((CASE -1.469852429E9  WHEN NULL THEN '-129034740' END)%(0.2911310968021936))); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(t0.c0) AS BLOB) FROM t0 WHERE (CASE WHEN (+ (0.012643327242811697)) THEN ((('.', 0.1383016977484185, x'', NULL, 0.9739929754690196))<=((NULL, 0.7856244778795282, 'W4[5CoQ&', NULL, NULL))) WHEN (NOT (0.8469281151769501)) THEN '/0' WHEN CASE 'gE悖'  WHEN '-855256455' THEN 0.8720714825490042 END THEN ((0.2911310968021936) ISNULL) ELSE ((x'') ISNULL) END) LIMIT -797544196; -- 0ms;
SELECT DISTINCT AVG((t0.c59 IN ())) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM t0 WHERE (((((((((0X72745bd8)OR(((x'97b8')GLOB(-1.637171477E9)))))OR(LENGTH(x''))))OR((('-199917494') NOT NULL))))OR((- (x''))))); -- 0ms;
SELECT t0.c2 FROM t0 WHERE ((((0.8116681386940652)OR('637355299')) IN ((('1749649746')OR(''))))); -- 0ms;
SELECT ALL CAST(((t0.c0)-(t0.c7)) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT QUOTE(((NULL)||(t0.c2))) FROM t0 WHERE ((~ (x'0cdb' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (t0.c2 COLLATE NOCASE IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c1) NOT NULL))AND(((t0.c59)AND(t0.c59)))), (NOT ((t0.c2 IN ()))), (t0.c2 COLLATE RTRIM IN ()) FROM t0; -- 0ms;
SELECT ALL LOWER(DISTINCT ((((t0.c0)AND(t0.c0)))OR(t0.c7))), t0.c2, ((SUM(t0.c7))GLOB(SUM(t0.c7))) FROM t0 LIMIT 514716305 OFFSET -923752508; -- 0ms;
SELECT ALL AVG(((t0.c1)LIKE(t0.c7))) FILTER(WHERE t0.c7 COLLATE BINARY) OVER ( ORDER BY ((((t0.c2) IS FALSE)) BETWEEN (((NULL)=(t0.c1))) AND (((((0.22039060379867048)AND(t0.c1)))AND(t0.c59))))) FROM t0 WHERE (CASE WHEN (+ ('-497236422')) THEN CAST('0.11833190064611299' AS BLOB) WHEN CAST('-894783876' AS REAL) THEN (0x72aa55cf IN (0.8324718523553852)) WHEN (1938010704 IN (x'')) THEN ((x'')-(NULL)) END); -- 0ms;
SELECT DISTINCT FIRST_VALUE(x'8807' COLLATE BINARY) OVER () FROM t0 WHERE (((('1958704150')) NOT BETWEEN (((('1274376648')<=(x'')))) AND ((CASE 'A.'  WHEN x'' THEN x'd8f5' WHEN '-413421091' THEN '0.11833190064611299' WHEN 0.8226716255929124 THEN 0.5315475290721966 ELSE -1020176730 END)))) ORDER BY ((((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))/('')), (t0.c7 COLLATE RTRIM IN (0.4781567497095406, ((t0.c1) BETWEEN (t0.c7) AND (t0.c2))))  NULLS LAST, CAST(t0.c2 AS REAL); -- 0ms;
SELECT DISTINCT t0.c2 FROM t0 WHERE (((CAST('Q%' AS REAL)) BETWEEN ((x'0806' IN ())) AND ((NOT (NULL))))); -- 0ms;
SELECT DISTINCT HEX(DISTINCT ((x'')<(t0.c7))) FROM t0; -- 0ms;
SELECT UNLIKELY(CASE WHEN NULL THEN t0.c59 END) FROM t0 GROUP BY DATE(t0.c2, ((t0.c7)<<(t0.c7)), CASE t0.c59  WHEN t0.c7 THEN t0.c7 WHEN t0.c59 THEN t0.c7 WHEN t0.c2 THEN t0.c59 ELSE t0.c2 END) HAVING NULL; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c0 THEN '63358650' END, ((t0.c2)/(t0.c2)), NULL FROM t0 LIMIT 1703268361; -- 0ms;
SELECT NULL, CASE ((t0.c1)>>(t0.c0))  WHEN MAX(t0.c1) THEN CAST(t0.c59 AS INTEGER) ELSE '1e500' END, CAST(((((t0.c59)OR(t0.c1)))AND(t0.c7)) AS INTEGER) FROM t0; -- 0ms;
SELECT ALL ((((LIKELIHOOD(t0.c0, 0.3275928083070212))AND((((t0.c1))<=((NULL))))))AND(CASE 1.042219582E9  WHEN t0.c0 THEN t0.c7 ELSE t0.c59 END)) FROM t0; -- 0ms;
SELECT (((t0.c0)) NOT BETWEEN (('2011320598' COLLATE RTRIM)) AND ((CASE WHEN t0.c2 THEN t0.c7 END))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c7)OR(t0.c59)))OR(t0.c59)))>(((((t0.c0)OR(t0.c1)))OR(t0.c1)))) FROM t0 WHERE (((CASE 0.8630802223630928  WHEN x'133cb2ef' THEN '2745700642450297388' ELSE 0.17039848491121745 END)GLOB((- (0.38407186082034384))))); -- 0ms;
SELECT ((COUNT(*)) NOT NULL), (t0.c2 IN ()), IFNULL(((7.27701784E8) IS FALSE), LIKELY(t0.c59)), ((((t0.c1)AND(LOWER(DISTINCT t0.c7))))OR(CASE t0.c59  WHEN t0.c0 THEN t0.c59 ELSE t0.c59 END)), ((t0.c7 COLLATE NOCASE) BETWEEN (((1875262315)LIKE('邏[!G)|颤'))) AND ((((t0.c1, t0.c1, t0.c7)) BETWEEN ((t0.c0, '1', t0.c7)) AND ((t0.c59, t0.c2, t0.c0))))) FROM t0 WHERE (NULL) LIMIT 1109266515; -- 0ms;
SELECT ALL MIN((- (t0.c7))) FROM t0 LIMIT -1255841261 OFFSET 811532549; -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE RTRIM IN ((~ (t0.c7)), x'')) FROM t0; -- 0ms;
SELECT ALL AVG(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c59 END) OVER ( ORDER BY (((t0.c0 COLLATE BINARY))>=((t0.c7))) DESC  NULLS LAST, CAST((((t0.c59)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) AS REAL)  NULLS LAST, (((t0.c59 IN ()))|(((('0.7906880168950469')) NOT BETWEEN ((t0.c7)) AND ((t0.c7))))) ASC  NULLS FIRST), ((t0.c59) IS FALSE), AVG(((0.24415330780817868) NOT BETWEEN (t0.c7) AND (t0.c2))), t0.c0, CAST(((((((((t0.c59)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(t0.c7)) AS NUMERIC) FROM t0; -- 0ms;
SELECT ALL (t0.c1 IN ()) FROM t0 WHERE (CAST('-1625134287' COLLATE RTRIM AS INTEGER)) GROUP BY TYPEOF(NULL), UNLIKELY(DISTINCT (t0.c2 IN (t0.c7))), (- ('Iymꃸ9G')); -- 0ms;
SELECT DISTINCT '0M|FJ+''', t0.c2 COLLATE BINARY, CAST(((t0.c59)LIKE(t0.c7)) AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)-(t0.c0))) BETWEEN (((((t0.c0)AND(-1.406278081E9)))OR(0.8851899136171597))) AND (CAST(t0.c59 AS INTEGER))) FROM t0 WHERE (CAST('dx' AS BLOB) COLLATE BINARY) GROUP BY ((((((t0.c2)<(t0.c1)))AND(t0.c1 COLLATE BINARY)))OR('0.534200934263009')); -- 0ms;
SELECT t0.c59 FROM t0; -- 0ms;
SELECT (NOT (TYPEOF(DISTINCT t0.c2))) FROM t0; -- 0ms;
SELECT ((-543384316 COLLATE RTRIM) BETWEEN (t0.c0 COLLATE NOCASE) AND ('/''!6px5t')), CAST(((t0.c1) ISNULL) AS TEXT), (((((((t0.c7)AND(t0.c2)))AND(t0.c59))))>=((((0.6434315274600628) IS TRUE)))) FROM t0; -- 0ms;
SELECT (((t0.c1 COLLATE NOCASE))>(((((t0.c0, t0.c0, t0.c59))>((t0.c2, t0.c0, t0.c0)))))), (((('') NOT BETWEEN (t0.c0) AND (t0.c1))) IS FALSE), (((t0.c1)) NOT BETWEEN ((CAST(t0.c59 AS REAL))) AND ((((0x2a4e4840)IS(t0.c7))))) FROM t0 INTERSECT SELECT DISTINCT GROUP_CONCAT(']]>I') OVER (), ((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))AND(((t0.c7) NOT BETWEEN (t0.c59) AND (t0.c1)))))OR((NOT (t0.c7)))))AND(((((((((t0.c0)OR(t0.c1)))AND(t0.c7)))OR(t0.c1)))OR(NULL)))))OR((t0.c7 IN ()))), UNLIKELY(((((t0.c1)OR(t0.c7)))AND(t0.c59))) FROM t0 WHERE ((('-714472194') BETWEEN (((1.842277032E9) NOT BETWEEN ('-98924976') AND (NULL))) AND (((0Xffffffffdc36aa8c) BETWEEN (NULL) AND ('-330153448'))))); -- 0ms;
SELECT DISTINCT (((t0.c1 IN (t0.c59))) NOTNULL) FROM t0 WHERE (((((NULL) NOTNULL)) NOT BETWEEN ((' []G' IN ())) AND (((NULL) NOT NULL)))); -- 0ms;
SELECT RANK() OVER () FROM t0 NOT INDEXED; -- 0ms;
SELECT (t0.c7 IN ((t0.c2 IN ()))) FROM t0; -- 0ms;
SELECT ALL (- ((((t0.c59, t0.c2, t0.c7))!=(('1752079868', t0.c0, 0.24887965776955767))))), CASE WHEN NULL THEN (NOT (t0.c7)) ELSE ((t0.c7)IS(t0.c1)) END, (((((t0.c59, t0.c0, t0.c2))<((t0.c0, 0.48437487033029514, '-962104075'))))GLOB(CAST(t0.c0 AS TEXT))) FROM t0; -- 0ms;
SELECT DISTINCT (~ (MAX(t0.c0))) FROM t0 WHERE (('-494206623' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT COUNT(CAST(t0.c59 AS TEXT)) OVER ( PARTITION BY ((((t0.c2) NOT BETWEEN (t0.c7) AND (t0.c59))) NOT BETWEEN (((t0.c7)LIKE(t0.c0))) AND (((t0.c59) BETWEEN (t0.c2) AND (t0.c59)))), ((((t0.c2)!=(t0.c2))) ISNULL)) FROM t0 WHERE (((('92\nyv', x'6ebf', NULL)) NOT BETWEEN ((((',C')AND('?Qg15lp')), (('1204460308') NOT BETWEEN ('1828359069') AND (0.4202109668016999)), (((x'', 'K}悴寘>_', x'')) NOT BETWEEN ((x'', x'', '0.4393929755503093')) AND (('2010825719', '-855256455', x'6b75'))))) AND ((((NULL)*(0.7322233386562034)), json_array(2127071318, NULL, NULL, '1'), '-838891218' COLLATE BINARY)))); -- 1ms;
SELECT DISTINCT ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (((t0.c7)<>(t0.c1))) AND (t0.c2 COLLATE NOCASE)), t0.c59, ((t0.c7)LIKE(t0.c7)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL (- (CASE t0.c0  WHEN '-1287430924' THEN t0.c7 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)) FROM t0 WHERE (((json_array_length(NULL, x''))<<(((NULL)>>(NULL))))); -- 0ms;
SELECT DISTINCT x'6dbc' FROM t0 WHERE (0.030785808993412322); -- 0ms;
SELECT x'' COLLATE NOCASE, (~ (CASE t0.c7  WHEN t0.c0 THEN t0.c2 WHEN t0.c7 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)), ROW_NUMBER() OVER (), CAST(CAST(t0.c59 AS REAL) AS NUMERIC), TOTAL(((t0.c59)||(t0.c59))) FROM t0 GROUP BY LIKELIHOOD(DISTINCT (+ (t0.c1)), 0.6494197898914977); -- 0ms;
SELECT DISTINCT ((((((t0.c59)AND(t0.c59)))AND(t0.c7)))>=(CAST(t0.c1 AS NUMERIC))) FROM t0; -- 0ms;
SELECT DISTINCT (CASE WHEN t0.c2 THEN t0.c7 WHEN '' THEN NULL WHEN t0.c7 THEN t0.c59 WHEN t0.c59 THEN 0xffffffffb2bff913 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END IN ()) FROM t0 WHERE ((((((('678513059')IS(x'')))AND(COALESCE(x'', ''))))AND(CAST(NULL AS BLOB)))) ORDER BY ((((x'')OR(x'')))AND(((x'') NOT NULL)))  NULLS FIRST, (((t0.c2)) BETWEEN ((t0.c59)) AND ((t0.c59))) COLLATE BINARY, (((((((t0.c2)AND(t0.c2)))OR(t0.c2))))=((UNLIKELY(DISTINCT t0.c7))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (- (((t0.c7)<(t0.c0)))) FROM t0; -- 0ms;
SELECT '1458917932', ((((((t0.c0) IS TRUE))AND((t0.c2 IN ()))))AND(((t0.c59) BETWEEN (t0.c7) AND (t0.c1)))), CHAR((((t0.c1))>((t0.c59))), (((t0.c7))>(('-1893069223'))), CAST(t0.c0 AS NUMERIC)) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0)OR(CASE WHEN t0.c1 THEN t0.c59 END)) FROM t0 WHERE (((LOWER(0Xffffffffb634a55a)) IS TRUE)); -- 0ms;
SELECT ALL (((t0.c2)) NOT BETWEEN ((t0.c59 COLLATE BINARY)) AND (((((t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c7, t0.c1, t0.c7)) AND ((t0.c0, t0.c0, t0.c0)))))), SUM(CASE WHEN t0.c1 THEN t0.c2 END), ((((t0.c7) BETWEEN (t0.c59) AND (t0.c59)))|(x'1613' COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DATETIME(((t0.c59) BETWEEN (t0.c2) AND (t0.c59)), t0.c59 COLLATE BINARY, CASE WHEN t0.c59 THEN t0.c2 ELSE t0.c7 END), ((CASE 1.413741378E9  WHEN t0.c7 THEN t0.c2 WHEN '0.9446296652219925' THEN t0.c59 WHEN t0.c2 THEN t0.c0 END) IS TRUE), 0.6817787108945875 FROM t0 WHERE (((('!,')) BETWEEN ((NULL)) AND (((NOT (x'')))))); -- 0ms;
SELECT DISTINCT LAG((((NOT (0X731a2f73)))||(LIKELY(DISTINCT t0.c2))), x'', ((((((t0.c59) NOT BETWEEN (t0.c2) AND (t0.c59)))OR((((t0.c0))==((t0.c59))))))AND(((t0.c59)/(t0.c2))))) OVER () FROM t0 WHERE (((((CAST(NULL AS REAL))OR(((x'') NOT BETWEEN (x'') AND (x'1791')))))OR((((NULL))<((-1355067161)))))); -- 0ms;
SELECT ALL (((NULL))<((((t0.c0)GLOB(t0.c1))))) FROM t0; -- 0ms;
SELECT RANK() OVER () FROM t0 WHERE (LIKELY(CASE WHEN x'' THEN '' WHEN NULL THEN 0.6758475895101703 WHEN '*!?AWw' THEN NULL ELSE NULL END)); -- 0ms;
SELECT DISTINCT ((t0.c59)<>(t0.c59)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT t0.c1 FROM t0 WHERE (((CAST(0.7046349523963924 AS TEXT))*(((('-838891218')) BETWEEN (('1484736237')) AND ((x'')))))); -- 0ms;
SELECT (((SUBSTR(t0.c2, t0.c2)))>(((t0.c2 IN ())))) FROM t0 WHERE (CAST((- (0.8999415071762944)) AS REAL)) LIMIT 2142382395; -- 0ms;
SELECT DISTINCT ((((((t0.c59) BETWEEN (t0.c2) AND (t0.c59)))AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)))AND(LOWER(DISTINCT t0.c2))) FROM t0 WHERE (((NULL) NOTNULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((t0.c7)&(t0.c7))) FROM t0; -- 0ms;
SELECT ALL ((CASE WHEN t0.c0 THEN t0.c7 ELSE t0.c7 END)IS(((t0.c0) BETWEEN ('-1255841261') AND (t0.c7)))), (((((NOT (t0.c1)))AND(CAST(t0.c7 AS REAL))))AND(load_extension(t0.c1, t0.c7))), (~ (CAST(t0.c2 AS NUMERIC))) FROM t0;SELECT DISTINCT ((SUM(x'')) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT CAST(SUM(t0.c7) AS INTEGER) FROM t0 WHERE ((((x'' IN ('0.4676311834533805', '1422128400')))|(((0.6564884893133779) NOT BETWEEN (0.4103401085765077) AND (0.22698904421691224))))); -- 0ms;
SELECT DISTINCT CAST((t0.c1 IN ()) AS INTEGER) FROM t0 WHERE ((NOT (('-1128512040' IN ())))) LIMIT -97981292; -- 0ms;
SELECT DISTINCT (((t0.c59 IN ()))LIKE(t0.c0 COLLATE RTRIM)), 'otk}1' COLLATE NOCASE, t0.c59 FROM t0 EXCEPT SELECT DISTINCT (NOT (t0.c2)), CASE WHEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c7 THEN t0.c1 WHEN -838891218 THEN t0.c1 ELSE t0.c0 END THEN NULLIF(t0.c2, t0.c1) ELSE ((t0.c7)>(t0.c59)) END, (((t0.c59)) BETWEEN (((- (t0.c59)))) AND ((CAST(t0.c0 AS INTEGER)))) FROM t0 GROUP BY ((+ (t0.c0)) IN ()) HAVING (((+ (t0.c2))) BETWEEN (COUNT(*)) AND (((t0.c1) IS FALSE))); -- 0ms;
SELECT DISTINCT x'' FROM t0; -- 0ms;
SELECT DISTINCT CASE 0.43032465276292675  WHEN ((t0.c0) NOT NULL) THEN ((((((((t0.c7)OR(t0.c59)))AND(t0.c1)))OR(0.2967366572986164)))OR(t0.c2)) END FROM t0 WHERE (CAST(NULL AS INTEGER) COLLATE RTRIM); -- 0ms;
SELECT ALL ((LOWER(t0.c2)) ISNULL) FROM t0 WHERE (((~ ('-qu^0B[Z(')) IN ())) GROUP BY CAST(t0.c2 COLLATE RTRIM AS TEXT) HAVING (((t0.c59 IN ()))OR(t0.c0)); -- 0ms;
SELECT t0.c59 FROM t0 WHERE ((('-551254805')/(0X2b5fd918))); -- 0ms;
SELECT (~ (CASE WHEN t0.c59 THEN t0.c0 WHEN t0.c59 THEN t0.c7 WHEN t0.c7 THEN t0.c1 END)) FROM t0 WHERE (CAST('lYo' AS INTEGER) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((NULL)GLOB(t0.c2)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT CASE WHEN t0.c59 THEN CAST(t0.c0 AS TEXT) END, ((((-7.14472194E8)OR(((t0.c7) BETWEEN (t0.c0) AND (t0.c7)))))AND((t0.c59 IN ()))), AVG(((t0.c0) BETWEEN (t0.c7) AND (''))), CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c7))  WHEN ((t0.c1)GLOB(t0.c1)) THEN (t0.c2 IN ()) END, COUNT(*) FROM t0 WHERE ((- ((x'' IN ())))); -- 1ms;
SELECT DISTINCT CASE WHEN t0.c7 THEN t0.c0 ELSE '0.11833190064611299' END COLLATE NOCASE, LIKELY((((t0.c2, t0.c7, t0.c59)) NOT BETWEEN ((t0.c2, t0.c59, t0.c2)) AND ((t0.c0, t0.c0, t0.c59)))), (- (((t0.c0) NOT BETWEEN (t0.c7) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT ALL ((CASE 0.06318414136913653  WHEN t0.c2 THEN t0.c2 END) BETWEEN (CASE WHEN t0.c2 THEN t0.c59 END) AND ((t0.c7 IN (t0.c7)))) FROM t0 WHERE ((NOT ((((NULL, 0.09860076802109208, 4.06912102E8))>((NULL, x'b3cf', NULL)))))); -- 0ms;
SELECT ALL UPPER((+ (t0.c1))) FROM t0 WHERE ((((CAST(0.6702895909011052 AS INTEGER)))<((((0.4317020962969623) BETWEEN ('1901963311') AND ('*|(T)')))))); -- 0ms;
SELECT ALL json_quote(NULL) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c59)/(t0.c1))) ISNULL) FROM t0; -- 0ms;
SELECT TRIM(DISTINCT ((((((((t0.c0)OR(t0.c0)))AND(t0.c7)))OR(t0.c0)))OR(t0.c0)), ((t0.c59) ISNULL)) FROM t0 WHERE (((((((',<')AND(-6.00397172E8)))AND(0.19780358840750845)))|(ABS(DISTINCT NULL)))); -- 0ms;
SELECT ALL ((t0.c59 COLLATE BINARY) BETWEEN (((t0.c1) BETWEEN (t0.c7) AND (t0.c1))) AND ('-2070153698')), (((((t0.c7)==(t0.c1)), ((((t0.c2)OR(t0.c2)))OR(t0.c1)), COUNT(t0.c59)))<((t0.c2 COLLATE NOCASE, TRIM(DISTINCT NULL), ((t0.c59) IS TRUE)))), t0.c2 FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS BLOB) COLLATE BINARY, LTRIM((((t0.c0, t0.c2, t0.c7, t0.c0, t0.c1)) BETWEEN ((0.22352716038567233, t0.c59, t0.c7, t0.c2, t0.c7)) AND ((t0.c7, t0.c0, t0.c2, t0.c1, t0.c7)))), (((((t0.c2)GLOB(t0.c59))))>=((COUNT(*)))), COUNT(*) OVER (), (- (((t0.c0)%(t0.c0)))) FROM t0; -- 0ms;
SELECT ALL (((t0.c0))>=((t0.c2))) COLLATE BINARY FROM t0 WHERE (((CASE WHEN NULL THEN '1372753691' WHEN x'd544' THEN '5~[Vm{' WHEN 0.8370095751063599 THEN 0.6716017518025325 ELSE x'' END) NOTNULL)); -- 0ms;
SELECT DISTINCT (t0.c1 IN (t0.c1)) COLLATE RTRIM, 'q,', CAST(NULL AS NUMERIC) FROM t0 WHERE (CASE 0.11425475879567293  WHEN '29' THEN 0.2403328586921336 ELSE 0xffffffff8c5bbafe END COLLATE BINARY) GROUP BY '-1459576441' HAVING ((NULL)<=(LIKELY(DISTINCT t0.c7))); -- 0ms;
SELECT ((((t0.c0)+(t0.c59)))<>(((t0.c59) BETWEEN ('-551254805') AND (t0.c7)))) FROM t0; -- 0ms;
SELECT ALL ((CAST(t0.c2 AS BLOB))*(((t0.c59)<(t0.c0)))), GROUP_CONCAT(((t0.c1)GLOB(t0.c59)) COLLATE BINARY), (t0.c1 COLLATE BINARY IN ()) FROM t0 WHERE ((DATETIME(x'6093', 0.21363107633536338, 0.3426776581441079) IN ())); -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((((t0.c2) NOT NULL))) AND ((((((t0.c1)OR(t0.c59)))OR(0.8520208325713859))))), (((t0.c59, t0.c7, MIN(t0.c7)))==((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END, ((t0.c0) NOT NULL), ((t0.c1)>>(t0.c1))))), t0.c2 FROM t0 WHERE ((- (470972815))); -- 0ms;
SELECT DISTINCT LAG(CAST((NOT (t0.c59)) AS TEXT), (((((t0.c1) NOT BETWEEN (t0.c2) AND ('')), CAST(t0.c59 AS NUMERIC), CAST(t0.c1 AS INTEGER)))!=((((t0.c0)&(t0.c0)), ((t0.c7) NOT BETWEEN (NULL) AND (t0.c59)), t0.c2 COLLATE RTRIM))), (((t0.c2)<(t0.c1)) IN (((t0.c7) IS TRUE)))) OVER (), DENSE_RANK() OVER ( ORDER BY 0.9743691162971029 ASC  NULLS LAST), t0.c1 FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c7) BETWEEN (t0.c7) AND (t0.c59)) AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c59 COLLATE RTRIM) NOT BETWEEN (CASE t0.c0  WHEN t0.c59 THEN t0.c1 END) AND (((t0.c7)/(t0.c1)))) FROM t0 WHERE ((+ (((NULL) NOT BETWEEN (NULL) AND ('727701784'))))) LIMIT 141234449; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0 WHERE (((((x'8883ac79') BETWEEN (x'') AND (NULL))) NOT BETWEEN ((('') IS TRUE)) AND (JULIANDAY('?/!DCk4j ', NULL, '*HJ5glv[o')))); -- 0ms;
SELECT CASE t0.c59  WHEN ((t0.c1) NOT BETWEEN (',[') AND (t0.c2)) THEN NULL WHEN t0.c7 COLLATE BINARY THEN CASE WHEN t0.c59 THEN t0.c2 ELSE t0.c0 END WHEN json_remove(t0.c0, t0.c0, t0.c1, t0.c0) THEN t0.c59 END FROM t0 WHERE (CASE WHEN ((-28799546)%(NULL)) THEN '-98924976' END) ORDER BY x''  NULLS FIRST; -- 0ms;
SELECT DISTINCT t0.c7 FROM t0; -- 0ms;
SELECT ALL ((COUNT(t0.c1)) IS TRUE) FROM t0 INTERSECT SELECT DISTINCT CUME_DIST() OVER () FROM t0; -- 0ms;
SELECT DISTINCT (('') NOT NULL) COLLATE NOCASE COLLATE RTRIM FROM t0 WHERE ((('-401233681') BETWEEN (NULL COLLATE RTRIM) AND (CASE 0.8679173653328912  WHEN '1536876128' THEN NULL END))) ORDER BY COALESCE(t0.c1 COLLATE BINARY, t0.c2, t0.c0 COLLATE NOCASE, 0X77dac3f7) DESC; -- 1ms;
SELECT DISTINCT (((t0.c59))<>((t0.c7))) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0) IS FALSE) THEN t0.c59 COLLATE BINARY ELSE CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c59 ELSE t0.c1 END END FROM t0 WHERE ((((((('') BETWEEN (0.9646318037428784) AND ('')))OR((((((((('669459180')AND('j8')))AND(-1620496301)))OR(x'')))OR(x'')))))AND((NULL IN (x'87de'))))) LIMIT -1010514161 OFFSET 179383824; -- 0ms;
SELECT DISTINCT ((((((((-1072349007)OR(t0.c1)))AND(t0.c59)))AND((- (t0.c59)))))AND(1811084433)) FROM t0 WHERE ((~ ((((((((('36511692')AND(x'')))OR(x'')))OR('-1132838838')))AND(0.9117316707826032))))) GROUP BY ((json_extract(t0.c7, t0.c2)) NOT BETWEEN ((~ (t0.c2))) AND (((t0.c59)IS(t0.c7)))) HAVING (NOT (TOTAL(t0.c7))) LIMIT -642993934; -- 0ms;
SELECT DISTINCT COUNT((~ (t0.c2))) FROM t0 WHERE ((((NULL)) BETWEEN ((NULL)) AND ((STRFTIME('0.401565480649554', 3.62074713E8, x''))))); -- 0ms;
SELECT ALL t0.c2, x'', load_extension(COUNT(t0.c59)) FROM t0 WHERE (((((0X79d72508)OR('epg')))OR(x'f1b3')) COLLATE RTRIM);SELECT DISTINCT (((NOT (t0.c1)))%(((((t0.c1)OR(t0.c59)))AND(t0.c7)))) FROM t0 WHERE (((('-1132838838' IN ())) NOT BETWEEN ((NULL IN ())) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT ALL COUNT(*) FROM t0 WHERE (0.4008040104289401); -- 0ms;
SELECT DISTINCT RTRIM(((((t0.c0)AND(t0.c7)))OR(t0.c2))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c2)AND(t0.c1)))OR(t0.c0)))%(CAST(t0.c7 AS REAL))) FROM t0 WHERE ((((+ (0.5369506156269135)))<<(CASE WHEN 0.5321194492116973 THEN NULL WHEN '-1986048555' THEN '678513059' WHEN 0.22694917433314565 THEN 0.36934547553795083 END))); -- 0ms;
SELECT ((((t0.c7 COLLATE RTRIM)AND(CASE t0.c59  WHEN t0.c0 THEN t0.c59 ELSE t0.c7 END)))AND((((t0.c0))<((t0.c2))))) FROM t0 WHERE (((((NULL)-(NULL)))IS NOT(CAST(x'' AS BLOB)))) LIMIT -310929861; -- 0ms;
SELECT ((t0.c59 COLLATE NOCASE) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT ((((NULL) NOTNULL)) BETWEEN (((t0.c59) IS TRUE)) AND (((t0.c7)=(t0.c1)))), CUME_DIST() OVER (), LEAD(t0.c59, ((((((((2.076608517E9)OR(((t0.c0)>(0Xffffffffbcbc45d8)))))OR(((t0.c7) BETWEEN (t0.c0) AND (t0.c1)))))AND(((t0.c7) ISNULL))))OR((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))))), t0.c1) OVER (), ((t0.c2) BETWEEN (t0.c0) AND (NULL)) COLLATE RTRIM, (((t0.c1)) BETWEEN ((((2033454878)+(t0.c7)))) AND ((((t0.c0) NOT BETWEEN (t0.c7) AND (t0.c0))))) FROM t0 WHERE (((('뢐烼')) NOT BETWEEN (((((0.4393385292953429)) NOT BETWEEN ((NULL)) AND ((x''))))) AND ((((0.2611519408627798) IS FALSE))))) LIMIT -1664262240; -- 0ms;
SELECT DISTINCT (- ((+ (t0.c1)))) FROM t0; -- 0ms;
SELECT DISTINCT ((NOT (t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT ALL t0.c1, CASE WHEN t0.c7 THEN ((t0.c59)<=(t0.c0)) END, UPPER(DISTINCT (~ (t0.c7))) FROM t0 WHERE (CASE (((('?X')AND(0.4397894010889275)))OR('^C逻&ꭅ'))  WHEN COALESCE(0.20916063838150134, 0.9627733126110739) THEN HEX(DISTINCT -79974389) END); -- 0ms;
SELECT DISTINCT (((((NULL IN ()))AND(json_array(t0.c7, t0.c59))))OR(((t0.c2)|(t0.c7)))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c59)) NOT BETWEEN ((x'')) AND ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))))) FROM t0 WHERE ((((NULL COLLATE BINARY))!=((((NULL)+(NULL)))))); -- 0ms;
SELECT DISTINCT ((((t0.c0)OR(t0.c59)))IS(((t0.c0)/(t0.c1)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(((((t0.c1)AND(t0.c2)))AND(t0.c0)))))AND((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) FROM t0; -- 0ms;
SELECT DISTINCT (((json_object(t0.c2, NULL)))<=((SUM(x'791f')))) FROM t0 GROUP BY CAST(x'4e32' AS BLOB) HAVING CASE WHEN (t0.c7 IN ()) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN x'' THEN t0.c1 WHEN t0.c59 THEN t0.c59 END END; -- 0ms;
SELECT ALL ((CASE WHEN t0.c1 THEN t0.c0 END) NOT BETWEEN (t0.c59) AND (((((((((t0.c59)AND(t0.c2)))AND(t0.c2)))AND(t0.c59)))OR(t0.c7)))) FROM t0; -- 0ms;
SELECT DISTINCT TOTAL(t0.c0) FILTER(WHERE CAST((t0.c7 IN (t0.c59)) AS TEXT)) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0) IS FALSE)))=((((t0.c0)<(t0.c0))))) FROM t0 WHERE (CASE WHEN ((((NULL)AND(0.9777925032138434)))AND('-417941826')) THEN ((0.1747605651612596) BETWEEN ('-1189396025') AND (x'78cd')) WHEN x'' THEN (NOT ('+&^S1')) WHEN (~ ('zvw)')) THEN ((x'') ISNULL) END) LIMIT -598978578 OFFSET 709906501; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT DENSE_RANK() OVER () FROM t0 WHERE ((+ ('M\n1G,'))); -- 0ms;
SELECT DISTINCT ((((((t0.c2)IS(t0.c2)))AND(NULL)))AND(x'')) FROM t0; -- 0ms;
SELECT ALL ((json_array_length(t0.c1))*(CAST(t0.c59 AS NUMERIC))), CAST((((t0.c59, t0.c0, t0.c0)) BETWEEN ((t0.c7, t0.c1, t0.c2)) AND ((t0.c0, t0.c7, t0.c7))) AS INTEGER), (((((t0.c59))<>((t0.c1)))) NOT NULL) FROM t0 WHERE ((('472881038' COLLATE BINARY) NOT BETWEEN (0Xfffffffff6450840 COLLATE RTRIM) AND (('-1355067161' IN ('悞 '))))) GROUP BY (((t0.c1)) BETWEEN ((t0.c0)) AND ((CAST(t0.c7 AS REAL)))) HAVING LOWER(DISTINCT ((t0.c7)|(t0.c59))) LIMIT 642795984; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t0.c1 IN ())) FROM t0 WHERE (x'0c92') GROUP BY (((t0.c0)) BETWEEN (((((t0.c7))==((t0.c59))))) AND (((((t0.c0))>=((t0.c2)))))); -- 0ms;
SELECT (~ (((t0.c59)%(t0.c59)))) FROM t0 WHERE (CAST(((((x'')OR(0xfffffffffb271228)))OR(x'')) AS BLOB)) ORDER BY (((t0.c59 IN ())) IS FALSE) DESC; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c0 THEN ((((t0.c0)OR(t0.c59)))OR(t0.c7)) WHEN ((t0.c7) BETWEEN ('0.492649892833978') AND (t0.c0)) THEN CAST(t0.c7 AS BLOB) WHEN MAX(t0.c1) THEN CASE WHEN t0.c1 THEN t0.c0 WHEN 'y^' THEN NULL WHEN t0.c1 THEN t0.c1 END END FROM t0; -- 0ms;
SELECT ((((((((((t0.c1)LIKE(x'')))AND((((0xffffffffc5e621cf))>((t0.c0))))))AND(CASE WHEN t0.c59 THEN t0.c0 END)))AND(((NULL)IS(t0.c2)))))OR((- (t0.c59)))), MAX((NULL IN ()), t0.c7), ((((t0.c0)/(t0.c7)))||(t0.c1)) FROM t0; -- 0ms;
SELECT ALL (((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c1))))IS((t0.c7 IN ()))), CAST(TRIM(t0.c2) AS BLOB), (~ ((('d''') NOT BETWEEN (t0.c1) AND ('1183872093')))) FROM t0 ORDER BY (((- (t0.c2)))<=(PRINTF(t0.c2))); -- 1ms;
SELECT ALL ((CAST(NULL AS TEXT)) NOT BETWEEN ((t0.c7 IN ())) AND ((+ (t0.c2)))) FROM t0 WHERE (CASE -806477526  WHEN CAST('0.9117316707826032' AS NUMERIC) THEN 0.21613392365503814 COLLATE BINARY ELSE CAST('1010985560' AS INTEGER) END) GROUP BY (t0.c2 COLLATE NOCASE IN ()); -- 0ms;
SELECT DISTINCT LEAD(CAST((((t0.c1)) BETWEEN ((t0.c0)) AND ((NULL))) AS REAL), (((((t0.c7, t0.c2, t0.c0))<=((t0.c2, t0.c1, t0.c59))))>=(((t0.c7)OR(t0.c1)))), ((((((t0.c7)OR(0.6936686546519817)))AND(t0.c1)))||(t0.c7))) OVER ( GROUPS  CURRENT ROW) FROM t0 LIMIT -2097432432 OFFSET 2011320598; -- 0ms;
SELECT NULL FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN COALESCE(t0.c2, t0.c59, t0.c59, t0.c0, t0.c2, t0.c1) THEN MIN(t0.c59) WHEN (((t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c7, t0.c0, t0.c1)) AND ((t0.c2, t0.c59, t0.c59))) THEN TRIM(t0.c2) WHEN ((t0.c59)<=(t0.c59)) THEN ((t0.c59) BETWEEN (t0.c1) AND (t0.c0)) WHEN ((t0.c2)<=(t0.c7)) THEN ((t0.c59)-(NULL)) WHEN ((t0.c7)OR(t0.c2)) THEN (t0.c2 IN (t0.c2)) WHEN (t0.c1 IN ()) THEN (t0.c7 IN ()) WHEN ABS(DISTINCT t0.c59) THEN ((t0.c0)<<(t0.c2)) ELSE t0.c1 END FROM t0 WHERE (LTRIM(((('1920228312'))<(('1188473078'))), ((-401233681) BETWEEN (NULL) AND (1483241597)))); -- 0ms;
SELECT json(((t0.c59)LIKE(t0.c7))) FROM t0 WHERE (CAST((~ (x'')) AS BLOB)); -- 0ms;
SELECT COUNT(*) OVER () FROM t0; -- 0ms;
SELECT DISTINCT t0.c7, (t0.c0 IN ()) COLLATE RTRIM, (((t0.c0 IN ()))<>(((t0.c2)-(t0.c59)))), TRIM(DISTINCT ((((x'')AND(t0.c59)))OR(t0.c7)), TOTAL(t0.c1)), (+ (((t0.c7) ISNULL))) FROM t0; -- 0ms;
SELECT t0.c1, 321257461, t0.c1 FROM t0 WHERE ((((x'', x'', 126888531, 1.150618981E9, NULL))==((NULL, x'', 0.18194331839198297, NULL, x''))) COLLATE NOCASE); -- 0ms;
SELECT ((t0.c2 COLLATE BINARY)>(t0.c1 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT (((~ (t0.c2))) BETWEEN (LOWER(t0.c0)) AND ((0.748470624537123 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c1)AND(t0.c59)))AND(t0.c7)))AND(t0.c1)))AND(t0.c59)))*(t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT CASE COUNT(t0.c0)  WHEN (x'68b9' IN ()) THEN ((t0.c7) NOT BETWEEN (t0.c2) AND (t0.c2)) WHEN t0.c2 COLLATE NOCASE THEN NULL WHEN UPPER(DISTINCT t0.c59) THEN t0.c59 COLLATE BINARY ELSE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c7))) END FROM t0; -- 1ms;
SELECT ((((t0.c0)<(t0.c59))) BETWEEN ((+ (t0.c0))) AND ((((t0.c1))>=((t0.c0))))) FROM t0; -- 0ms;
SELECT (+ (-1.625134287E9)), ((((t0.c1 COLLATE NOCASE)OR(((t0.c1)||(t0.c7)))))OR(t0.c0)), ((CAST(t0.c2 AS BLOB))<((t0.c2 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((CASE 0.8457178801079092  WHEN t0.c2 THEN t0.c59 ELSE t0.c59 END)OR(((t0.c7) BETWEEN (t0.c59) AND (t0.c2)))))OR(LIKELIHOOD(t0.c2, 0.9402920831707677))))OR(MIN(t0.c2))))AND((t0.c2 IN ()))) FROM t0 WHERE (((((HEX(DISTINCT '0.17039848491121745'))AND(CAST(x'' AS NUMERIC))))OR('' COLLATE NOCASE))) ORDER BY (((((t0.c2))>=((t0.c1))))LIKE(t0.c0 COLLATE NOCASE))  NULLS LAST; -- 0ms;
SELECT 0.5178058201769618 FROM t0 WHERE (((('751419593' IN (0.19849817247157886)))<=((((''))>=((0.5495461460614691)))))) GROUP BY ((NULLIF(t0.c0, t0.c1)) NOT BETWEEN (SUBSTR(t0.c59, t0.c2)) AND (((t0.c2) NOT BETWEEN (t0.c59) AND (t0.c59)))); -- 0ms;
SELECT ALL ((((t0.c2)|(t0.c7))) NOTNULL) FROM t0; -- 0ms;
SELECT (- (CAST(t0.c0 AS TEXT))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c59 THEN t0.c2 END)>=((t0.c59 IN (t0.c7)))) FROM t0 WHERE (TYPEOF(DISTINCT CAST(x'' AS BLOB))); -- 0ms;
SELECT DISTINCT (((t0.c59)) NOT BETWEEN ((((t0.c0)|(x'')))) AND (((- (x''))))) FROM t0; -- 0ms;
SELECT DISTINCT (t0.c2 COLLATE BINARY IN ()) FROM t0; -- 0ms;
SELECT ALL ((HEX(t0.c0)) BETWEEN ((t0.c59 IN ())) AND (t0.c0)) FROM t0 WHERE (CAST(((0xffffffffb801503a)==(x'')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)||(t0.c2)))AND((NOT (t0.c2)))))AND(t0.c2)))AND((t0.c59 IN ()))))OR((('63358650') NOT BETWEEN (t0.c0) AND (t0.c59)))) FROM t0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((CASE WHEN t0.c1 THEN t0.c7 ELSE '2076608517' END)>(((t0.c2)<>(t0.c1)))), (((t0.c7)/(t0.c0)) IN ())) OVER ( ORDER BY t0.c7 DESC) FROM t0 GROUP BY (((((~ (t0.c2)))OR(((t0.c2)IS(t0.c2)))))AND(CASE t0.c59  WHEN '' THEN t0.c59 END));SELECT DISTINCT ((((t0.c0)AND(t0.c59)))AND(t0.c2)) COLLATE RTRIM FROM t0 WHERE (CAST((NULL IN (787517988)) AS REAL)); -- 1ms;
SELECT ALL COUNT(CAST(t0.c0 AS REAL)) FROM t0 WHERE (CASE NULL  WHEN ((NULL) NOT BETWEEN (x'a726') AND (x'')) THEN CAST(NULL AS INTEGER) WHEN x'ead9' THEN CASE 0.2579110538167979  WHEN NULL THEN 0Xffffffff8c4b6819 ELSE x'9fc5' END WHEN (((0Xffffffffd4400b82))<((-1.174725908E9))) THEN ((NULL)||(-1390736086)) END); -- 0ms;
SELECT DISTINCT ((NULLIF(DISTINCT t0.c59, t0.c7)) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND ((t0.c1 IN ()))) FROM t0; -- 0ms;
SELECT (((t0.c0 COLLATE BINARY))>((MIN(t0.c2)))) FROM t0 WHERE ((+ (('1527155517' IN ('-1760544655'))))) LIMIT -1462055592 OFFSET 846391428; -- 0ms;
SELECT DISTINCT NULL, ((((((((t0.c1)OR(t0.c59)))OR(t0.c59)))AND((+ (t0.c2)))))AND((((t0.c0))=((t0.c1))))), (((((NULL, t0.c2, t0.c7)) BETWEEN ((t0.c2, t0.c7, t0.c1)) AND ((t0.c59, t0.c2, t0.c2)))) IS FALSE) FROM t0 WHERE ((((((~ (NULL)))AND(CAST(0x715bed07 AS NUMERIC))))AND(((NULL) BETWEEN (NULL) AND ('1920228312'))))); -- 0ms;
SELECT DISTINCT ((((t0.c1) IS FALSE)) NOT BETWEEN (CAST(t0.c7 AS INTEGER)) AND (((t0.c0) ISNULL))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c59 COLLATE RTRIM FROM t0 WHERE ((((((NULL)) NOT BETWEEN ((x'')) AND ((0.9117316707826032))))IS((('&_DWLGC|')IS NOT(x''))))) GROUP BY CASE ((((t0.c7)AND(t0.c7)))OR(0.6095222671932089))  WHEN ((t0.c1)||(t0.c0)) THEN 0.01592193322112523 ELSE x'5b68' END HAVING (((((((('konL㱫V97s')AND(t0.c59)))OR(t0.c0)))AND(t0.c2)))OR(t0.c59)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((1619415488) NOT BETWEEN (IFNULL(0.7881580105049767, x'')) AND (MIN(t0.c0))), (((t0.c0 COLLATE BINARY))>=((UPPER(DISTINCT t0.c2)))), NULL FROM t0; -- 0ms;
SELECT DISTINCT TOTAL_CHANGES(), NULL, t0.c1 FROM t0 WHERE (2.142382395E9) GROUP BY ((((t0.c7)LIKE(t0.c1))) BETWEEN (t0.c0 COLLATE RTRIM) AND (t0.c59 COLLATE NOCASE)) HAVING ((((((((TOTAL(t0.c0))AND(((t0.c1)IS(t0.c1)))))AND(((t0.c59)GLOB(t0.c1)))))OR(MAX(t0.c0))))OR(t0.c7)); -- 0ms;
SELECT (((t0.c2)) NOT BETWEEN ((((t0.c59) BETWEEN (t0.c7) AND (t0.c1)))) AND ((((((t0.c0)AND(t0.c2)))AND(t0.c2))))) FROM t0 WHERE ((((((NULL)OR(0.9597058313743559)))AND('1204460308')) IN ())); -- 0ms;
SELECT ALL t0.c59, (((t0.c7)>(t0.c59)) IN ((- (0.8712818995630277)))), ((((t0.c0)<>(t0.c7))) NOT NULL) FROM t0 ORDER BY ((((t0.c1)OR(t0.c0))) NOTNULL); -- 0ms;
SELECT DISTINCT (+ ((t0.c0 IN ()))) FROM t0 WHERE (((((NULL) NOT NULL))<<(((x'aa09')!=(''))))); -- 0ms;
SELECT ALL (((~ (t0.c7))) IS FALSE) FROM t0; -- 0ms;
SELECT ALL TRIM(((t0.c2) IS FALSE)) FROM t0; -- 0ms;
SELECT ALL ((((t0.c1) NOT BETWEEN (t0.c59) AND (t0.c7))) IS FALSE) FROM t0; -- 0ms;
SELECT (load_extension(t0.c1, t0.c1) IN ()), json_array(((t0.c7) NOT BETWEEN (t0.c59) AND (t0.c1)), ((t0.c59) BETWEEN (t0.c1) AND (t0.c1)), ((t0.c59)<<(t0.c0)), t0.c2 COLLATE BINARY), UNLIKELY(DISTINCT COUNT(t0.c59)), ((((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN NULL THEN t0.c1 ELSE t0.c1 END)AND(t0.c1 COLLATE BINARY)))AND((((t0.c0)) BETWEEN ((t0.c7)) AND ((t0.c1))))), (- ((- (t0.c7)))) FROM t0; -- 0ms;
SELECT DISTINCT LEAD(0.16988317441545864, ((((((t0.c2) ISNULL))OR((t0.c7 IN ()))))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c59)))), (- (t0.c59 COLLATE NOCASE))) OVER () FROM t0 WHERE ((((0.04358535707291267))>=((''))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((((((t0.c59)OR(t0.c7)))OR(t0.c0)))AND(t0.c59)))OR(x'')))>>(t0.c7 COLLATE RTRIM)) FROM t0 WHERE ((CASE NULL  WHEN NULL THEN '' WHEN '-855256455' THEN x'360f' WHEN 0X65c77d63 THEN -164761806 ELSE -1.374489535E9 END IN ())); -- 0ms;
SELECT CAST(((((t0.c1)OR(t0.c7)))OR(t0.c0)) AS INTEGER), GROUP_CONCAT(((t0.c59)LIKE(t0.c59))), ((CASE t0.c0  WHEN t0.c7 THEN t0.c7 WHEN t0.c2 THEN t0.c7 WHEN t0.c0 THEN t0.c2 ELSE t0.c7 END)>(t0.c1)), t0.c7, (+ (((t0.c1)&(1.042219582E9)))) FROM t0 WHERE (UNLIKELY(CASE WHEN -1e500 THEN '1410455093' ELSE 0Xfffffffffdf1a011 END)); -- 0ms;
SELECT DISTINCT SUM((t0.c7 IN ())) COLLATE NOCASE, SUM(((t0.c7) IS FALSE)) OVER (), CAST((t0.c2 IN ()) AS TEXT), (('띋du>tX')>(((t0.c59) NOT BETWEEN (t0.c7) AND (t0.c1)))), FIRST_VALUE((CASE t0.c0  WHEN t0.c0 THEN x'' ELSE t0.c1 END IN ())) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM t0; -- 0ms;
SELECT ALL LAG(((CAST(t0.c0 AS NUMERIC))GLOB((+ (t0.c1)))), ((t0.c1 COLLATE NOCASE)>=(0xffffffffdbabe463)), (NOT (t0.c1 COLLATE RTRIM))) OVER ( ORDER BY (((+ (t0.c2)))*((((-1988431417, NULL, t0.c59))>((t0.c7, t0.c2, 0.9069245644846521))))) DESC  NULLS FIRST, ((((x'8139')>(t0.c0))) NOT BETWEEN (t0.c59) AND (((t0.c0)>=(t0.c59)))) ASC  NULLS FIRST, ((CAST(t0.c7 AS INTEGER))%(((t0.c0) ISNULL)))  NULLS LAST), UPPER(((t0.c7)<=('h(IQ)TJ'))), (((NULL, x'5d9f8a48', t0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c7, t0.c59, (t0.c59 IN ()), (((t0.c0, t0.c59, t0.c2)) NOT BETWEEN ((t0.c1, t0.c59, t0.c7)) AND ((t0.c2, t0.c0, t0.c0))), (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c7))))) AND ((t0.c59 COLLATE NOCASE, t0.c1, ((((((((t0.c59)OR('	X븑*')))AND(t0.c1)))AND(t0.c2)))OR(t0.c0)), LOWER(DISTINCT t0.c1), SQLITE_VERSION()))) FROM t0; -- 1ms;
SELECT ALL (- (TRIM(DISTINCT x'bed0', t0.c1))) FROM t0 WHERE (((0.291316100281488) IS TRUE)); -- 0ms;
SELECT DISTINCT t0.c0, (+ (((((t0.c59)AND(t0.c0)))AND(NULL)))), CUME_DIST() OVER () FROM t0 WHERE ((UPPER(DISTINCT 0.8199316008446156) IN ())) LIMIT -676787164 OFFSET -979375679; -- 0ms;
SELECT (COALESCE(DISTINCT t0.c7, t0.c0, NULL, t0.c2) IN ()) FROM t0 WHERE ((((((x'', x'', NULL, -1.12851204E9, 0.3367345489891148)) NOT BETWEEN (('0.6554255214651256', x'', 0.6627452592677651, 0.7574919717984521, x'0b18')) AND ((NULL, x'bb10', NULL, '2745700642450297388', '')))) NOT BETWEEN (((0.9232313590871191)AND(0.9236056414190899))) AND ((('dg	nownjy')AND(0.9520979763826208))))); -- 0ms;
SELECT DISTINCT NULL, ROW_NUMBER() OVER ( ORDER BY '' ASC), (+ ((t0.c2 IN (0xffffffffb2e3bb7d)))) FROM t0 WHERE ((((x'' IN ())) BETWEEN ((('Th') NOT BETWEEN ('k') AND (-977363105))) AND ((('1751751485') ISNULL)))) LIMIT -1253354148; -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT NULL)) IS FALSE), ((((t0.c7)LIKE(t0.c0)))>(0xffffffffffffffff)), ((CASE WHEN t0.c1 THEN t0.c7 END)==(DATE(t0.c7, -813851963, t0.c2, t0.c59, t0.c2))) FROM t0 WHERE (((CASE WHEN '' THEN -1189396025 WHEN NULL THEN '831396349' WHEN '' THEN 'dAg+ꨍjy3' END)&(-778245250 COLLATE BINARY))); -- 0ms;
SELECT ALL t0.c1, CASE WHEN ((t0.c2)GLOB(t0.c2)) THEN ((t0.c0)LIKE(t0.c2)) WHEN t0.c1 COLLATE RTRIM THEN t0.c1 WHEN CAST(t0.c7 AS REAL) THEN ((t0.c1)*(t0.c59)) END, ((t0.c7) IS FALSE) COLLATE BINARY FROM t0 WHERE (CASE WHEN (~ (x'')) THEN (((x''))<>(('bWM**'))) END) ORDER BY t0.c7  NULLS LAST; -- 0ms;
SELECT DISTINCT json_remove(CAST(t0.c2 AS BLOB), (NOT (t0.c1))) FROM t0 WHERE (((CAST('814899028' AS BLOB))LIKE((('-1374489535')<<(0.3101917784035506))))) GROUP BY ((((t0.c1) ISNULL))AND(((t0.c0) NOT BETWEEN (t0.c59) AND (t0.c7)))), ('d-' IN ()), NULL; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c59)) NOT BETWEEN (((((x'4dbf')AND(t0.c59)))OR(t0.c1))) AND ((- (t0.c2)))) FROM t0 WHERE ((((('')OR((NOT (NULL)))))OR(CAST('' AS REAL)))) ORDER BY ((((CASE t0.c2  WHEN t0.c1 THEN 0.006062665785914523 ELSE t0.c0 END)AND(t0.c59)))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))) DESC LIMIT 121017047 OFFSET 1852740779; -- 1ms;
SELECT DISTINCT CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1)))  WHEN (+ (t0.c59)) THEN t0.c2 COLLATE NOCASE END FROM t0 WHERE ((NOT (((((x'')OR('1儖gBᾣH&q')))OR('#*<}'))))); -- 0ms;
SELECT COUNT(((t0.c0)>=(t0.c7))) OVER () FROM t0; -- 0ms;
SELECT FIRST_VALUE((((NOT ('6M'))) IS TRUE)) OVER (), t0.c59, CASE ((((t0.c59)AND(t0.c7)))OR(t0.c7))  WHEN ((t0.c59)>=(t0.c0)) THEN SUM(t0.c0) END FROM t0; -- 1ms;
SELECT ALL (- ((t0.c7 IN (t0.c2)))) FROM t0 WHERE ((((CAST(0Xc6d558d AS REAL), ((x'')/(x'')), ((0.9739929754690196) NOT BETWEEN (NULL) AND (-2113362370))))=((x'' COLLATE BINARY, CASE WHEN x'' THEN x'' ELSE -1862481719 END, CASE WHEN '894670418' THEN 0.10645827547359998 END)))); -- 0ms;
SELECT ((((t0.c1)&(t0.c59))) NOTNULL) FROM t0; -- 0ms;
SELECT CASE GROUP_CONCAT(-172550152)  WHEN (- (t0.c7)) THEN '1566362527' WHEN ((t0.c0) NOT BETWEEN (t0.c7) AND (t0.c1)) THEN (((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c7, t0.c59))) WHEN x'e1da' THEN (((t0.c7))<=((t0.c1))) END FROM t0 GROUP BY (((((t0.c7)OR(t0.c7)))OR(t0.c7)) IN ()), CAST(t0.c0 AS BLOB), ((((t0.c59) NOT NULL)) BETWEEN (CAST(t0.c7 AS NUMERIC)) AND (HEX('Tc'))), (((t0.c0 IN ()))OR(t0.c0)), (~ (t0.c0)) HAVING CAST(((t0.c1) IS FALSE) AS REAL); -- 0ms;
SELECT TOTAL(t0.c0) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c2)>(t0.c1))) BETWEEN (((t0.c0) BETWEEN (t0.c7) AND (t0.c1))) AND (((t0.c1)OR(t0.c1)))) FROM t0; -- 0ms;
SELECT ALL COUNT(((t0.c0) BETWEEN (t0.c7) AND (t0.c59))) FROM t0; -- 0ms;
SELECT DISTINCT (~ ((- (t0.c59)))) FROM t0 WHERE (DATE(0Xffffffffeb02bfca COLLATE NOCASE, ((('-915173121')) BETWEEN ((x'85d2')) AND ((0.4676311834533805))), LIKELIHOOD(DISTINCT NULL, 0.27636070059930384))) GROUP BY CASE WHEN (((t0.c59))<=((t0.c59))) THEN ((((t0.c0)AND(t0.c7)))AND(t0.c0)) ELSE CAST(t0.c7 AS INTEGER) END; -- 0ms;
SELECT ALL TOTAL(((t0.c7) ISNULL)) COLLATE RTRIM, ((t0.c7 COLLATE NOCASE) NOTNULL), (NOT ('')) FROM t0 WHERE (((NULL) NOT NULL)); -- 0ms;
SELECT ((((+ (t0.c2))))==((((t0.c2) BETWEEN (t0.c59) AND (t0.c7))))), ((((((((t0.c2)OR(t0.c7)))OR(t0.c1)))AND(t0.c2)))AND(t0.c59)) COLLATE RTRIM, (((t0.c2)) NOT BETWEEN (((((t0.c2))<=((t0.c2))))) AND ((CASE t0.c7  WHEN t0.c7 THEN t0.c2 END))), t0.c0, x'' FROM t0; -- 0ms;
SELECT DISTINCT LIKE(((t0.c59)LIKE(176034584)), ((t0.c59) IS TRUE), 'N'), MAX(CAST(t0.c1 AS INTEGER)), CASE NULL  WHEN ((((t0.c1)OR(t0.c7)))OR(0.3788549038279432)) THEN DATETIME(t0.c1, x'', t0.c0, t0.c7, 0.7365224127379509) ELSE ((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c2)) END FROM t0 LIMIT 1239323951; -- 0ms;
SELECT ALL (- ((((t0.c7, t0.c59, t0.c7))<((t0.c0, t0.c59, t0.c0))))), TOTAL((((t0.c2, -129034740, t0.c7))<>((t0.c7, t0.c0, t0.c2)))) OVER (), COUNT(*) OVER ( ORDER BY load_extension((~ (t0.c7)), (t0.c59 IN (t0.c59, t0.c2))), t0.c2  NULLS FIRST) FROM t0 WHERE ((((- ('-714472194')))-(((x'') NOT BETWEEN ('') AND (0.19069642212030657)))));SELECT ALL (NOT ((((t0.c1, t0.c7, t0.c59))<((t0.c2, t0.c7, t0.c0))))) FROM t0 ORDER BY CAST(TRIM(t0.c2) AS NUMERIC) ASC  NULLS LAST, ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) COLLATE BINARY ASC  NULLS FIRST, '472881038'  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(t0.c2 COLLATE NOCASE AS TEXT) FROM t0 WHERE (CASE WHEN ((((((((x'')AND(NULL)))AND('뱬 &Z{')))AND('+n')))OR(2070222693)) THEN (('')>>(x'')) WHEN 'S *	5#' THEN ((1.83467345E8)<<(x'')) WHEN ((',]')>=(-7.7824525E8)) THEN TRIM(x'', '43902872') END); -- 2ms;
SELECT TOTAL((t0.c59 IN ())) FROM t0 WHERE ((((((((((+ ('B1wꬫ')))OR(((('-1277907418')) BETWEEN (('-998440159')) AND ((NULL))))))OR((((''))<=((0Xfffffffff47bb153))))))OR((((NULL)) BETWEEN ((0xffffffffab456d87)) AND ((x''))))))OR(((0.9268221777262807)IS(''))))); -- 0ms;
SELECT DISTINCT ((((t0.c7)-(t0.c0))) NOT BETWEEN (CASE t0.c1  WHEN t0.c7 THEN t0.c2 ELSE t0.c7 END) AND (((t0.c59) NOT BETWEEN (t0.c2) AND (t0.c0)))), ((((((((((((t0.c2 COLLATE BINARY)AND(t0.c59)))AND(CAST(x'' AS REAL))))OR(CASE t0.c7  WHEN t0.c0 THEN NULL END)))OR(((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c59)))))OR(CAST(t0.c7 AS BLOB))))OR(UNLIKELY(t0.c0))), (('-871003123') NOT BETWEEN (((t0.c2)|(t0.c7))) AND (0xffffffffd1aae7f4)) FROM t0 WHERE ((NOT (CASE x''  WHEN NULL THEN -1675903273 ELSE NULL END))); -- 0ms;
SELECT '즧&Acb|긍', t0.c7, t0.c59 FROM t0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (x'') AND (0.43486274156457416)) THEN (+ (0Xffffffffd650ca91)) END); -- 0ms;
SELECT ALL ((((t0.c1)-(t0.c0))) ISNULL) FROM t0; -- 0ms;
SELECT ALL ((t0.c0) ISNULL) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c59 AS INTEGER) AS REAL) FROM t0; -- 0ms;
SELECT ALL ((((((t0.c7)OR(t0.c0)))OR(t0.c7))) ISNULL), CAST(((t0.c0) BETWEEN (t0.c2) AND (t0.c7)) AS NUMERIC), (- (t0.c7 COLLATE RTRIM)) FROM t0 WHERE (LOWER(ABS(''))); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c1 THEN (t0.c7 IN ()) END FROM t0; -- 0ms;
SELECT ALL t0.c2 FROM t0; -- 0ms;
SELECT DISTINCT AVG(((t0.c7) BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE) FROM t0 WHERE (CASE WHEN ((NULL) NOTNULL) THEN ((((0.635976430679857)AND(0.0782860846029525)))AND(0.7518681512600741)) END) ORDER BY ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE NOCASE  NULLS FIRST, RTRIM(t0.c2) COLLATE RTRIM, (((((t0.c0 IN (t0.c7)))AND(((t0.c7)||(t0.c59)))))OR(((t0.c59)<=(t0.c59)))) ASC; -- 1ms;
SELECT ALL t0.c2, LEAD((+ (CASE WHEN t0.c1 THEN t0.c0 END)), (CHANGES() IN ()), t0.c1) OVER (), ((((t0.c0) ISNULL)) NOT BETWEEN (((t0.c7) NOT BETWEEN (t0.c1) AND (0.030785808993412322))) AND (((((((((t0.c7)AND(t0.c2)))AND(t0.c7)))AND(t0.c1)))AND(t0.c59)))) FROM t0; -- 0ms;
SELECT IFNULL(GROUP_CONCAT(t0.c59), CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c7 WHEN '-903355826' THEN t0.c2 ELSE t0.c2 END) FROM t0 WHERE ((CASE WHEN 'z]WA斯y' THEN '1136508743' WHEN '1021931562' THEN 0.07408982518496865 WHEN 1.204460308E9 THEN 0.8794871291419999 END IN ((((('1906514713')AND(NULL)))OR(x''))))); -- 0ms;
SELECT ALL '738451022', LEAD(CAST(((t0.c59) BETWEEN (t0.c59) AND (t0.c1)) AS TEXT), (((t0.c59)<(t0.c0)) IN (t0.c7)), SQLITE_COMPILEOPTION_USED(((t0.c0)<<(t0.c1)))) OVER (), ((CAST(t0.c1 AS NUMERIC))*((t0.c1 IN (t0.c7, t0.c59)))) FROM t0 WHERE ((((~ (NULL)))%((((0.1886711826017402)) BETWEEN ((x'43cd')) AND (('550950013')))))); -- 0ms;
SELECT DISTINCT (((CAST('-401233681' AS INTEGER)))>=((((t0.c59)!=(t0.c7))))) FROM t0; -- 1ms;
SELECT DISTINCT (+ ((NULL IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c59 FROM t0 WHERE (((((((0.7016270439755795)) BETWEEN (('L겒')) AND ((x''))), ((0.29102609120481227) NOTNULL), 0.03871095674812264))==((((((((((0.7906880168950469)OR(x'')))AND(0.21272623025637227)))AND('dscaU-2')))AND(0.6070645761822695)), (~ ('2142382395')), ((406912102) IS FALSE))))); -- 0ms;
SELECT ((((t0.c0) NOT BETWEEN (t0.c7) AND (t0.c2)))|(((t0.c1)<<(t0.c1)))) FROM t0 NOT INDEXED WHERE (((CASE 1724236667  WHEN '0.8212803302641173' THEN -331377459 END) BETWEEN ((((0.9632857584644244)) BETWEEN ((NULL)) AND ((NULL)))) AND (((('Idzm됆JK')) NOT BETWEEN ((0X714d9576)) AND ((NULL)))))); -- 0ms;
SELECT ALL ((((t0.c2) ISNULL)) ISNULL), ((((((t0.c7) BETWEEN (t0.c59) AND (t0.c59)))OR(CAST(t0.c59 AS BLOB))))AND(((t0.c1) BETWEEN (t0.c7) AND (t0.c0)))), (((((((t0.c0, t0.c2, t0.c7)) NOT BETWEEN ((t0.c59, t0.c1, t0.c59)) AND ((t0.c7, 0.7110821215755132, t0.c2))))AND(GROUP_CONCAT(t0.c2))))AND(TRIM(t0.c59, t0.c7))) FROM t0 WHERE (((x'')>>((NOT (NULL))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c1))&(((t0.c59) BETWEEN (t0.c59) AND (t0.c1)))) FROM t0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((CAST(t0.c0 AS TEXT))AND(t0.c2)))AND(0xffffffffe2694896))) OVER (), CAST(((t0.c1)<('噟6')) AS NUMERIC), ((t0.c2) ISNULL) COLLATE BINARY FROM t0 WHERE (((((((0.5596083099886764)AND(x'')))AND(x''))) BETWEEN ((((('1188473078')AND(NULL)))AND(x''))) AND (((x'0b1d') NOT BETWEEN (0.6448562978181505) AND ('-2070153698'))))) LIMIT -1255841261 OFFSET -1656707505; -- 0ms;
SELECT ((0.056913177789109426) IS FALSE), ((((t0.c1 IN ())))==((((((((((t0.c7)OR(t0.c0)))OR(t0.c1)))OR(t0.c1)))AND(t0.c0))))), (((NOT (t0.c2))) ISNULL) FROM t0; -- 0ms;
SELECT ((t0.c7 IN (t0.c59, t0.c1)) IN ()) FROM t0 WHERE (CAST((('''F') NOT BETWEEN (x'c502') AND (0.983384768975942)) AS REAL)); -- 0ms;
SELECT ALL ((((((((MIN(t0.c0))OR((((t0.c0, t0.c0, t0.c59, t0.c0, t0.c0))==((t0.c7, t0.c1, t0.c0, t0.c1, t0.c0))))))OR(HEX(t0.c59))))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (801477907)))))AND(RTRIM(t0.c59))) FROM t0 WHERE ((NOT ('f栽NJ~	' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((AVG(t0.c7))AND((t0.c0 IN (t0.c59)))))OR(NULL)) FROM t0 WHERE (CASE CAST('-145607008' AS TEXT)  WHEN (x'' IN ('0.7925746026518987', -7.14472194E8)) THEN (('-855256455')GLOB('-56825442')) WHEN (NULL IN ()) THEN ((0.40980938352288376) BETWEEN ('') AND (1420134992)) WHEN CASE WHEN '-778245250' THEN -497162948 ELSE 0.6954634886723928 END THEN x'' COLLATE RTRIM END); -- 0ms;
SELECT ALL json_array_length(CASE NULL  WHEN t0.c7 THEN t0.c2 END), ((((SUM(t0.c59))OR((+ (t0.c59)))))OR(CASE WHEN t0.c7 THEN t0.c7 WHEN '-112149422' THEN 0.9677980786569238 WHEN t0.c2 THEN t0.c7 ELSE t0.c59 END)), t0.c59 FROM t0 WHERE (CAST(CAST(NULL AS BLOB) AS REAL)); -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(t0.c7 AS BLOB)) COLLATE BINARY, ((((COUNT(t0.c2))OR((+ (t0.c1)))))AND((((t0.c2))>((t0.c59))))), CASE WHEN (t0.c0 IN (x'')) THEN TOTAL(t0.c0) WHEN ((t0.c7) IS TRUE) THEN 0.5025758683028597 WHEN MIN(t0.c7) THEN ((((t0.c2)OR(t0.c59)))OR(t0.c59)) END FROM t0 WHERE ((CASE WHEN 637642585 THEN NULL END IN ())); -- 0ms;
SELECT ((((t0.c1)GLOB(t0.c7)))-(((((t0.c59)OR(t0.c7)))OR(t0.c59)))) FROM t0 WHERE (((((NULL)>(-1.132838838E9))) NOT BETWEEN (((x'')>('-1827728239'))) AND ('-1174725908' COLLATE BINARY))); -- 0ms;
SELECT ALL CASE WHEN t0.c2 THEN t0.c7 COLLATE BINARY ELSE ((t0.c7) BETWEEN (t0.c2) AND (t0.c1)) END FROM t0 WHERE (((((x'') NOTNULL))IS((('+&^S1') IS FALSE)))); -- 0ms;
SELECT ALL ((CAST(t0.c7 AS NUMERIC))%(((((t0.c1)AND(t0.c0)))AND(t0.c0)))) FROM t0 GROUP BY t0.c0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE t0.c1  WHEN t0.c0 THEN t0.c59 END THEN ((0.11108763208428563)=(t0.c0)) WHEN ((((t0.c2)OR(t0.c1)))AND(t0.c1)) THEN ((t0.c2)LIKE(x'6e1e')) WHEN ((t0.c7)>(t0.c1)) THEN GROUP_CONCAT(t0.c0) WHEN CAST(t0.c7 AS NUMERIC) THEN NULL WHEN ((t0.c0)IS NOT(t0.c0)) THEN TOTAL(t0.c7) ELSE NULL END, (NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))), COUNT(*) OVER () FROM t0 WHERE (CAST((NOT (0.2053182922302461)) AS BLOB)); -- 0ms;
SELECT DISTINCT CASE ((t0.c7)&(t0.c2))  WHEN ((((t0.c1)AND(t0.c2)))AND(t0.c2)) THEN COUNT(t0.c59) END FROM t0; -- 0ms;
SELECT ROW_NUMBER() OVER (), CAST((((t0.c7, t0.c1, t0.c59))>=((t0.c2, t0.c1, t0.c59))) AS INTEGER), (((t0.c59)IS(NULL)) IN ()), CASE CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN t0.c7 THEN t0.c7 WHEN t0.c7 THEN x'' ELSE t0.c59 END  WHEN ((x'') IS FALSE) THEN ((t0.c59)!=(t0.c1)) END, ((((TRIM(t0.c59, 'HK8{'))OR(((t0.c0) IS TRUE))))AND(t0.c2 COLLATE BINARY)) FROM t0 WHERE (((CAST('' AS NUMERIC)) BETWEEN (((((((((NULL)OR(0.33697439995476974)))AND('\Z	')))OR(x'')))AND('1484736237'))) AND ((((NULL)) BETWEEN ((NULL)) AND ((x'659e')))))); -- 0ms;
SELECT DISTINCT QUOTE(t0.c59 COLLATE NOCASE), t0.c2, IFNULL(((((t0.c0)OR(t0.c1)))OR(t0.c59)), ((t0.c0) BETWEEN (t0.c7) AND (t0.c0))) FROM t0 ORDER BY ((((t0.c2) NOT NULL))*(UNLIKELY(DISTINCT t0.c59))) ASC  NULLS FIRST, ((((((t0.c0))==((t0.c2))), CAST(t0.c0 AS TEXT), CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END))!=((((t0.c0) BETWEEN (t0.c7) AND (t0.c7)), x'', ((0.6977334698119071)>(t0.c59))))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE t0.c59  WHEN t0.c0 THEN t0.c2 END)<>(COUNT(*))) FROM t0 WHERE ('V뱒5a!9wf['); -- 1ms;
SELECT ALL ROW_NUMBER() OVER ( PARTITION BY (((t0.c2 COLLATE BINARY, (('-316781001') IS FALSE), CASE WHEN t0.c2 THEN t0.c2 END))<=(((+ (t0.c0)), TRIM(t0.c0, t0.c2), (x'' IN ())))), ((((t0.c2)>=(t0.c0)))GLOB(CASE t0.c1  WHEN t0.c59 THEN t0.c1 WHEN t0.c7 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END))), CASE NULL  WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c59 THEN t0.c7 WHEN 'I[' THEN x'' WHEN t0.c59 THEN t0.c59 END ELSE ((t0.c59)GLOB(t0.c7)) END, ((((t0.c59) NOT BETWEEN ('-1406278081') AND (t0.c7))) BETWEEN (CASE WHEN t0.c59 THEN t0.c2 WHEN t0.c0 THEN t0.c59 WHEN t0.c7 THEN t0.c7 END) AND ((t0.c0 IN ()))), (((t0.c7) BETWEEN (t0.c1) AND (t0.c0)) IN (CAST(t0.c0 AS NUMERIC), ((t0.c2)!=(t0.c2)))), x'88ea' FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0 GROUP BY ((t0.c1) NOT NULL) COLLATE BINARY, (~ (((t0.c59)!=(t0.c2)))), t0.c2, (('-2066343897')|(((t0.c7)OR(t0.c59)))), ((t0.c7) ISNULL); -- 0ms;
SELECT ALL ((((t0.c1) BETWEEN (t0.c1) AND (724067643)))>>(CAST(t0.c1 AS BLOB))), CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c7 WHEN 'clTFx4]\n' THEN t0.c7 END COLLATE BINARY COLLATE NOCASE, ((((t0.c2))==((t0.c1))) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c7) IS TRUE) COLLATE NOCASE FROM t0 WHERE (CAST(((x'') IS FALSE) AS BLOB)); -- 0ms;
SELECT ALL SUM((NOT (t0.c0))) OVER ( ROWS SQLITE_COMPILEOPTION_GET(((t0.c59)AND(t0.c59))) PRECEDING EXCLUDE GROUP) FROM t0 ORDER BY ((((((t0.c0)OR(t0.c59)))OR(t0.c2))) NOTNULL) LIMIT 322564680 OFFSET -1297103306;SELECT ALL (((((t0.c2) NOT NULL)))>=(((t0.c0 IN ())))), (NOT (0.06748127226170697)) COLLATE NOCASE, t0.c2, CASE WHEN ((t0.c2) NOT BETWEEN (t0.c7) AND (t0.c59)) THEN (((t0.c7, t0.c0, t0.c0))>=((t0.c59, t0.c2, t0.c7))) END, ((t0.c2) NOT BETWEEN (t0.c7) AND (t0.c2)) COLLATE RTRIM FROM t0 WHERE (NULL COLLATE NOCASE) GROUP BY ((((t0.c1 IN ())))>=((((t0.c0)<<(NULL))))), CASE ((t0.c0)<=(t0.c1))  WHEN ((NULL) NOT BETWEEN (t0.c7) AND (t0.c1)) THEN t0.c7 COLLATE NOCASE END, (CASE t0.c0  WHEN t0.c59 THEN t0.c59 ELSE t0.c1 END IN ()) ORDER BY (((t0.c0))<>((t0.c59))) COLLATE BINARY, '-977363105' ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT LAG(DATE(JULIANDAY(t0.c7, t0.c0, t0.c59), ((t0.c2)*(t0.c2)), NULL, (((t0.c59, t0.c2, t0.c59, NULL, t0.c7)) BETWEEN ((x'', t0.c0, t0.c1, t0.c0, t0.c2)) AND ((t0.c0, 0.7411653374300078, t0.c1, t0.c2, t0.c7))), ((t0.c1) NOTNULL)), (+ ((((t0.c0)) BETWEEN ((0.4789274239635195)) AND (('sa⒭K#&c'))))), (~ (CASE t0.c2  WHEN t0.c0 THEN t0.c59 ELSE t0.c59 END))) OVER ( ORDER BY CAST(((((t0.c7)OR(t0.c2)))AND(t0.c59)) AS BLOB)) FROM t0 WHERE (((((0.05155037145557184)%('0.6853326267176358'))) NOT BETWEEN (((x'') NOT NULL)) AND ((('-1663271575')&(0.6303844882214387))))) LIMIT 1458917932; -- 0ms;
SELECT ALL LAG(CAST(CAST(t0.c59 AS REAL) AS NUMERIC), LOWER(DISTINCT ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))), UNLIKELY(CASE t0.c0  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END)) OVER (), CUME_DIST() OVER (), COUNT(*), ABS(((((((((t0.c0)AND(t0.c7)))OR(t0.c0)))OR(t0.c1)))AND(t0.c0))), ((t0.c0) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT ((SUM(t0.c2)) BETWEEN (ABS(DISTINCT t0.c2)) AND (t0.c0)) FROM t0; -- 0ms;
SELECT ALL CASE ((t0.c0) ISNULL)  WHEN COUNT(*) THEN ((((((((t0.c7)AND(t0.c1)))AND(t0.c1)))OR(t0.c2)))OR(t0.c1)) ELSE (((t0.c0, t0.c7, t0.c0))<((t0.c2, t0.c59, 0.4008040104289401))) END FROM t0; -- 0ms;
SELECT CASE 0x47ca9b14  WHEN IFNULL(DISTINCT t0.c0, t0.c59) THEN CAST(t0.c0 AS NUMERIC) END, (((+ (t0.c7)))LIKE(t0.c59)), ((((t0.c2 IN (t0.c7)), ((t0.c0) NOTNULL), ((t0.c2)<=(t0.c2))))<=(((((t0.c1))>((t0.c59))), x'4788bc96', CAST(t0.c1 AS TEXT)))) FROM t0 GROUP BY (((('362074713') NOTNULL))GLOB(((t0.c2) NOT BETWEEN (t0.c7) AND (t0.c59)))); -- 0ms;
SELECT (((((((((t0.c2 IN ()))OR(((t0.c1)>(t0.c2)))))OR(((t0.c1)>=(t0.c59)))))OR(((t0.c7)-(t0.c0)))))OR(((((t0.c0)OR('2127071318')))AND(t0.c1)))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0)AND(t0.c2)))AND(t0.c7)) IN ()) FROM t0 WHERE ((('1183872093' COLLATE NOCASE)+(json_type(NULL)))) ORDER BY (((t0.c7)) NOT BETWEEN ((((t0.c59)IS NOT(t0.c1)))) AND (((- (t0.c1))))) DESC; -- 0ms;
SELECT DISTINCT (((t0.c59 IN ()))AND(json_extract(t0.c1, t0.c59, t0.c2, t0.c1))) FROM t0 GROUP BY ((CASE WHEN t0.c59 THEN t0.c2 ELSE t0.c0 END) IS FALSE) HAVING ((((t0.c59)OR(t0.c59))) NOT BETWEEN ((t0.c59 IN ())) AND (t0.c7)); -- 0ms;
SELECT ALL MIN(((t0.c7)IS(t0.c7))) COLLATE NOCASE, (~ (CAST(t0.c7 AS INTEGER))), CASE WHEN ((t0.c59) ISNULL) THEN ((((((((((((t0.c2)OR(t0.c59)))OR(t0.c7)))OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)) ELSE x'' END, (((+ (t0.c59))) ISNULL), NULL FROM t0 WHERE (CASE 'WW' COLLATE BINARY  WHEN (NULL IN ()) THEN (- (x'')) END) ORDER BY ((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0))) IN (((t0.c59)==(t0.c2)), ((((t0.c1)OR(t0.c59)))OR(t0.c7)), (~ (t0.c0)))) DESC, ((((((((((t0.c7)/(t0.c7)))AND(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c7) AND (t0.c1)))))AND(((t0.c59) IS TRUE))))OR((((t0.c1))!=((t0.c59)))))  NULLS FIRST; -- 0ms;
SELECT ALL load_extension(((t0.c59) NOT NULL), ((t0.c0)<(t0.c2))) FROM t0 WHERE (((('405830945')-('-572093065')) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c59 THEN LTRIM(t0.c0, t0.c0) ELSE CAST(t0.c7 AS BLOB) END FROM t0 GROUP BY ((((t0.c59)>=(t0.c7)))||(((t0.c1)>>(t0.c59)))) HAVING (- (((t0.c1)/(t0.c7)))); -- 0ms;
SELECT ALL t0.c0 COLLATE NOCASE FROM t0 WHERE ('e ') GROUP BY ((((((((((((t0.c2)AND(t0.c59)))AND(x'4fdd')))OR(t0.c0 COLLATE NOCASE)))AND(((t0.c0)LIKE(t0.c7)))))AND(7.09773376E8)))OR((((t0.c0))<>(('j'))))), (- (t0.c0)), ((t0.c2) IS TRUE) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((((((t0.c0)OR(t0.c7)))AND(t0.c59))) BETWEEN (t0.c1) AND (((t0.c7) NOTNULL))) FROM t0; -- 0ms;
SELECT ALL (NOT (((t0.c1)IS(t0.c1)))) FROM t0; -- 0ms;
SELECT DISTINCT (('-1255841261')*(t0.c2)) COLLATE NOCASE FROM t0 WHERE ((((((x'5e1f')) BETWEEN ((NULL)) AND ((NULL))))-((((0.4835749020501555))<(('䣏T/G')))))); -- 0ms;
SELECT DISTINCT ((t0.c1) IS FALSE) COLLATE NOCASE, (((((t0.c2)) NOT BETWEEN ((t0.c59)) AND ((t0.c59))))GLOB((- (t0.c2)))), CASE WHEN t0.c2 THEN t0.c7 WHEN x'90c7' THEN t0.c7 WHEN t0.c0 THEN t0.c59 ELSE t0.c1 END COLLATE NOCASE, ((((t0.c59) NOTNULL)) IS TRUE), COUNT(*) OVER () FROM t0 GROUP BY TRIM(DISTINCT (((-1218700321)) BETWEEN ((t0.c59)) AND ((t0.c2))), t0.c59 COLLATE BINARY), json_array_length(t0.c7, t0.c2), CAST(('' IN (t0.c59, t0.c1)) AS NUMERIC), ((t0.c7 COLLATE RTRIM) BETWEEN (((t0.c2)IS NOT(t0.c7))) AND (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))), (('o#F8')>(NULL)); -- 0ms;
SELECT ALL ((x'') IS FALSE) FROM t0; -- 1ms;
SELECT DISTINCT CASE (- ('Y'))  WHEN ((t0.c0)GLOB(t0.c0)) THEN ((((t0.c0)AND(t0.c59)))AND(t0.c7)) ELSE (('n[')&(t0.c7)) END FROM t0; -- 0ms;
SELECT DISTINCT x'5ac9', CASE WHEN t0.c2 THEN x'' ELSE t0.c2 COLLATE RTRIM END, (+ (((x'')!=(t0.c7)))) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c7 THEN t0.c2 ELSE t0.c1 END COLLATE RTRIM FROM t0; -- 0ms;
SELECT SUM(CAST(t0.c59 AS REAL)) FROM t0; -- 0ms;
SELECT ALL CAST(UPPER(DISTINCT t0.c1) AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c7 COLLATE NOCASE) NOT BETWEEN ((t0.c7 IN (t0.c0, t0.c59))) AND (CAST(t0.c1 AS INTEGER))) FROM t0 ORDER BY (((t0.c59, t0.c2, t0.c7)) NOT BETWEEN ((t0.c59, ((((t0.c1)OR(0.575193304835302)))OR(t0.c7)), ((t0.c1)IS(t0.c7)))) AND ((((t0.c0) NOT BETWEEN (t0.c59) AND (t0.c2)), ((t0.c0)GLOB(t0.c1)), (NOT (t0.c1))))) LIMIT 1010556067 OFFSET -600397172; -- 0ms;
SELECT DISTINCT CASE ((t0.c2)%(t0.c1))  WHEN ABS(DISTINCT t0.c59) THEN '-852018738' WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c7)) THEN ((t0.c0)IS(t0.c2)) WHEN t0.c59 THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c2)) WHEN (t0.c1 IN ()) THEN t0.c1 WHEN ((t0.c0)GLOB(t0.c7)) THEN t0.c0 END, CUME_DIST() OVER (), CASE CAST(t0.c0 AS BLOB)  WHEN ((t0.c59) NOT BETWEEN (t0.c7) AND (t0.c0)) THEN t0.c0 WHEN (0.7903170593326379 IN ()) THEN MAX(t0.c1) WHEN t0.c1 THEN CASE t0.c7  WHEN t0.c2 THEN t0.c7 ELSE t0.c0 END ELSE ((((((((((((((((t0.c0)OR(t0.c1)))OR(t0.c7)))OR(t0.c2)))AND(t0.c59)))OR(t0.c7)))AND(t0.c1)))OR(t0.c0)))OR(t0.c2)) END FROM t0 WHERE ((((x'', '붗w', 'G벯')) BETWEEN ((0Xffffffffaf3b50e7, 0xffffffffb9fb1aec, ((NULL) NOT NULL))) AND ((('709773376' IN ('321589207', x'ff7f1d2a')), (NOT (NULL)), -1.2903474E8 COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT CAST(t0.c7 COLLATE NOCASE AS NUMERIC) FROM t0; -- 0ms;
SELECT ALL ((((t0.c2)>>(t0.c59)))LIKE(t0.c1 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT LAG((TRIM(DISTINCT t0.c59) IN (((((NULL)AND(t0.c0)))OR(t0.c1)), CAST(t0.c59 AS INTEGER))), (((('x?U')AND(CASE WHEN t0.c2 THEN t0.c59 WHEN t0.c59 THEN t0.c59 WHEN NULL THEN t0.c1 END)))AND('362074713')), (((t0.c1 COLLATE BINARY))>((((t0.c1)>=(t0.c59)))))) OVER () FROM t0 WHERE (CAST(0.14136060785330273 AS REAL)) GROUP BY ((t0.c0 COLLATE RTRIM) NOTNULL) HAVING 'y?19I.X'; -- 0ms;
SELECT DISTINCT t0.c59, ((((((((((t0.c7)AND(t0.c0)))AND(t0.c7)))OR(t0.c59)))OR(t0.c2)))<=((t0.c2 IN ()))), t0.c59 FROM t0 WHERE (((CAST(x'56eb' AS REAL))GLOB(CASE WHEN 'n*WO뇝ZJ' THEN 0X7ec88856 WHEN 0Xffffffff8617141a THEN 0.4393929755503093 WHEN '-1174725908' THEN '916450369' ELSE '-1023944843' END))) LIMIT 1484736237; -- 1ms;
SELECT DISTINCT (~ (t0.c1)) FROM t0 WHERE ((((((0.21949871232936424)) NOT BETWEEN (('-401233681')) AND ((NULL)))) BETWEEN (json_object('', -1454542279)) AND ((('1360346219')GLOB(x''))))) LIMIT 1123430280; -- 0ms;
SELECT DISTINCT ((COUNT(*)) NOT BETWEEN (((t0.c59) IS FALSE)) AND (CAST(t0.c1 AS TEXT))), ((((t0.c1)LIKE(t0.c1))) NOTNULL), t0.c59 FROM t0; -- 0ms;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((('v*>YkK')<(x'8d52')) AS INTEGER)) GROUP BY ((x'')>(CASE t0.c59  WHEN t0.c1 THEN t0.c1 WHEN t0.c7 THEN t0.c59 WHEN t0.c59 THEN t0.c59 END)) HAVING t0.c59; -- 0ms;
SELECT ALL CASE WHEN (t0.c1 IN (t0.c7)) THEN TYPEOF(t0.c0) END FROM t0 WHERE (CASE WHEN (('36q') IS FALSE) THEN 0.5599121336623071 COLLATE RTRIM END) GROUP BY CASE ((t0.c1)LIKE(t0.c1))  WHEN CASE t0.c1  WHEN t0.c0 THEN '?Rwi*D6*l' ELSE x'' END THEN t0.c2 ELSE (~ (t0.c1)) END, (((NULL) BETWEEN (t0.c59) AND (t0.c2)) IN ()), ((((t0.c59) IS TRUE))GLOB(((t0.c0) NOTNULL))), t0.c2, ((((t0.c59)>=(t0.c7)))*(TIME(t0.c1, t0.c7, t0.c7, t0.c0, 0.053776033604206686, t0.c2, '626927695'))) HAVING ((((t0.c7)GLOB(t0.c0))) NOT BETWEEN ((NOT (t0.c1))) AND (COUNT(*))); -- 0ms;
SELECT TYPEOF(DISTINCT CASE WHEN t0.c7 THEN t0.c2 WHEN t0.c0 THEN t0.c7 WHEN t0.c59 THEN t0.c59 END) FROM t0; -- 0ms;
SELECT DISTINCT (- (TRIM(x''))) FROM t0; -- 0ms;
SELECT DISTINCT ((((CASE WHEN t0.c1 THEN t0.c59 WHEN t0.c7 THEN t0.c59 WHEN t0.c59 THEN t0.c7 ELSE t0.c1 END)OR((~ (t0.c0)))))AND(t0.c0)) FROM t0 WHERE (CAST(CASE WHEN 0.33333824990696515 THEN x'' END AS INTEGER)); -- 0ms;
SELECT '1188473078' FROM t0 WHERE ((((CASE WHEN '0.6853326267176358' THEN 0.8167266325919986 ELSE 0.8147034917483603 END))>((((0.2851676232325021) NOT NULL))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c7) ISNULL)) OVER () FROM t0 WHERE (((('pEc\n', x'93d9', NULL)) BETWEEN ((((x'') NOTNULL), ((x'')<=(x'')), ((((x'582a')AND(x'')))OR(x'')))) AND ((CASE NULL  WHEN x'' THEN x'' WHEN 0.04305687275690562 THEN 0.7380738910071901 WHEN x'' THEN NULL WHEN 'y,MQu5r' THEN x'' WHEN '-406262727' THEN 4.06912102E8 END, (('1483241597') NOT NULL), ((NULL) NOT NULL))))) ORDER BY ((LOWER(t0.c59))>=(((t0.c1)!=('-97981292')))) DESC; -- 0ms;
SELECT ALL COUNT(NULL) OVER () FROM t0; -- 0ms;
SELECT ((((((((((((IFNULL(DISTINCT t0.c1, t0.c7))OR(SUM(t0.c59))))AND(SQLITE_VERSION())))OR(t0.c0)))AND(((t0.c7) IS TRUE))))OR(((((t0.c1)OR(t0.c59)))AND(t0.c0)))))OR(((t0.c59)<=(t0.c7)))) FROM t0 WHERE ((((('gE') BETWEEN ('362074713') AND (NULL))) NOT BETWEEN (CAST('-1283382369' AS TEXT)) AND (LIKELIHOOD('0.8287458019592983', 0.06091643602411445)))) LIMIT -936467166 OFFSET 610704472; -- 0ms;
SELECT ALL (- (INSTR('R!!', t0.c2))) FROM t0; -- 0ms;
SELECT ((((t0.c0)*(t0.c1)))&(LIKELY(t0.c1))), COUNT(*), ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) COLLATE NOCASE FROM t0 WHERE (CAST(CASE 'J~'  WHEN NULL THEN '447466303' ELSE x'' END AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))))<((t0.c0 COLLATE BINARY))) FROM t0 WHERE ((NULL IN ())) ORDER BY (NOT (CAST(x'' AS BLOB))) DESC  NULLS LAST; -- 0ms;
SELECT ALL NTILE(((((t0.c1)AND(t0.c59)))GLOB(CAST(t0.c2 AS NUMERIC)))) OVER ( ORDER BY CASE WHEN NULL THEN ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c7)) ELSE (((t0.c1))<((t0.c7))) END, (((((t0.c1)OR(t0.c59)))AND(t0.c0)) IN ())) FROM t0 WHERE ((NOT (((('0.4781567497095406'))>=((NULL)))))); -- 0ms;
SELECT TYPEOF(((t0.c1)-(t0.c0))), CASE WHEN (0.9246817915897484 IN ()) THEN ((t0.c7)IS NOT(t0.c59)) WHEN ((t0.c0) NOTNULL) THEN ((t0.c0) IS TRUE) WHEN ((x'')>(t0.c1)) THEN ((t0.c59) NOTNULL) ELSE (((t0.c59, t0.c2, t0.c59)) NOT BETWEEN ((t0.c59, t0.c7, t0.c7)) AND ((t0.c7, t0.c59, t0.c59))) END, LEAD(CASE WHEN t0.c2 THEN CASE WHEN t0.c2 THEN t0.c7 END WHEN 653066819 THEN (('-72348339')<=(t0.c59)) WHEN CAST(t0.c2 AS BLOB) THEN CAST(t0.c7 AS INTEGER) ELSE (t0.c7 IN ()) END, ((CASE WHEN t0.c7 THEN t0.c59 END)OR((((t0.c2))<=((t0.c7))))), CAST(((t0.c2)<<(t0.c59)) AS REAL)) OVER ( ORDER BY (+ (CAST(t0.c0 AS REAL))) ASC  NULLS FIRST) FROM t0 GROUP BY ((t0.c0) NOT BETWEEN (t0.c7) AND (t0.c1)) COLLATE BINARY HAVING (+ (CASE WHEN t0.c59 THEN t0.c7 END)) ORDER BY ((((t0.c2) NOTNULL))+(0Xffffffff8b2da925)); -- 0ms;
SELECT FIRST_VALUE((((t0.c2)) NOT BETWEEN ((0.7425008190552973)) AND (('892854735')))) OVER ( ROWS  UNBOUNDED PRECEDING), '', COUNT(((((((((t0.c0)OR(t0.c7)))AND('QRd㱫{z*')))AND(t0.c59)))AND(t0.c59))) OVER ( RANGE  UNBOUNDED PRECEDING) FROM t0; -- 0ms;
SELECT ALL SUM((('{x#H') NOT BETWEEN (t0.c2) AND (t0.c7)) COLLATE RTRIM) OVER ( ORDER BY ((t0.c59)IS NOT(t0.c0)) COLLATE RTRIM, (((((t0.c7)) BETWEEN ((0Xffffffffdad88630)) AND ((t0.c7)))) BETWEEN (CASE WHEN '' THEN t0.c1 ELSE t0.c2 END) AND (t0.c1)) DESC), ((((t0.c2)OR(CAST(0X41923367 AS TEXT))))AND(COUNT(*))), CASE WHEN ((t0.c59)-(t0.c7)) THEN x'5de6' WHEN ((((0xffffffffce29cea2)OR(t0.c59)))OR(t0.c1)) THEN (((t0.c59, t0.c2, t0.c0))<((t0.c0, t0.c1, t0.c7))) WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c59)*(t0.c0)) END FROM t0; -- 0ms;
SELECT ALL 0Xffffffff9a6a3202, CAST(t0.c0 AS BLOB) COLLATE NOCASE, CASE ((t0.c2)<<(t0.c0))  WHEN t0.c1 THEN CAST(t0.c1 AS REAL) END FROM t0 WHERE (x''); -- 0ms;
SELECT (CAST(t0.c7 AS REAL) IN ((t0.c59 IN (t0.c7)), x'')) FROM t0 WHERE (x'') LIMIT -825321223 OFFSET 362074713; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS) FROM t0 WHERE (((((((('b_hp)!RY꟮')) NOT BETWEEN ((0.7353358003849312)) AND ((503751743))))OR((NULL IN ()))))AND((((''))>((x'')))))) GROUP BY ((((t0.c1)AND(((((((((t0.c0)AND(t0.c1)))OR(t0.c59)))OR(t0.c7)))OR(t0.c0)))))OR((((t0.c0))>((t0.c59))))); -- 0ms;
SELECT ALL (- (CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c59 END)) FROM t0 ORDER BY ((((+ (t0.c1)), CASE WHEN x'' THEN t0.c0 END, ((t0.c1)&(t0.c7))))>((DATETIME(t0.c7, t0.c7, t0.c0), ((t0.c2)IS(t0.c1)), (~ (t0.c59))))); -- 2ms;
SELECT DISTINCT ((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c7)) BETWEEN ((t0.c1)) AND ((t0.c0))))) FROM t0; -- 0ms;
SELECT CAST((- (t0.c7)) AS TEXT) FROM t0 WHERE ((- ((- (x'efda'))))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c7 AS INTEGER))+(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c59)))), NULL, (((((t0.c59, t0.c0, t0.c1))>((t0.c7, '-2137423588', t0.c1)))) BETWEEN (t0.c1) AND (((t0.c2)-(t0.c2)))) FROM t0; -- 0ms;
SELECT ((((t0.c59 IN ()), ((t0.c1) NOTNULL), (t0.c1 IN ())))>(((((t0.c1))<((t0.c7))), ((t0.c2) NOTNULL), (+ ('-225068537'))))), ((((t0.c0) BETWEEN (t0.c59) AND (t0.c0))) NOTNULL), ((((t0.c59 IN ())))>(((t0.c59 IN (t0.c59, t0.c59))))) FROM t0 WHERE ((((((- (x'')))OR(((0.7251894372704127) NOT BETWEEN (NULL) AND (0.8116681386940652)))))OR(TYPEOF('1745202220')))); -- 0ms;
SELECT DISTINCT (((t0.c2, t0.c7, x'e466')) NOT BETWEEN ((CASE t0.c59  WHEN t0.c0 THEN t0.c0 WHEN t0.c59 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END, ((t0.c7) BETWEEN (t0.c2) AND (t0.c0)), CASE WHEN t0.c7 THEN t0.c7 END)) AND ((((((t0.c59)AND(t0.c59)))AND(t0.c2)), ((t0.c1) ISNULL), ((t0.c0)>=(t0.c7))))), (((~ (t0.c7)))!=((t0.c2 IN ()))), SUM(((0.3947069368902155)>(t0.c2))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM t0; -- 0ms;
SELECT ((-1.355067161E9)IS(t0.c59)) COLLATE RTRIM FROM t0 LIMIT 1954691096 OFFSET -453166224; -- 0ms;
SELECT CASE WHEN 'Q' THEN ((t0.c0) NOT NULL) WHEN ((t0.c7) NOT BETWEEN (t0.c59) AND (t0.c0)) THEN ((t0.c59) IS FALSE) WHEN MAX(t0.c7) THEN CAST(t0.c7 AS INTEGER) END FROM t0 ORDER BY CAST((((t0.c1))<=((t0.c2))) AS NUMERIC) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((+ (t0.c1))) BETWEEN (((((((((t0.c7)AND(t0.c59)))OR(NULL)))OR(0X600ae56c)))OR(''))) AND (COUNT(t0.c7))) FROM t0; -- 0ms;
SELECT ROUND(t0.c1 COLLATE BINARY, ((t0.c2) NOTNULL)), ((((((t0.c1)OR(t0.c7)))AND(t0.c2)))AND(t0.c7)), LAG((CAST(t0.c1 AS TEXT) IN ()), CASE TOTAL_CHANGES()  WHEN json_valid(t0.c59) THEN 1.721340227E9 END, ((t0.c59) NOT BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY) OVER () FROM t0; -- 0ms;
SELECT ALL COALESCE('-124714774', (((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c59)))) FROM t0 WHERE ((((0Xffffffffa00ac048 COLLATE RTRIM))!=((((0.5896261259604699) NOT BETWEEN (NULL) AND (0.5485243136586879)))))); -- 0ms;
SELECT LOWER(DISTINCT CASE t0.c1  WHEN 'r\y.u' THEN t0.c7 END) FROM t0 WHERE ((('' COLLATE NOCASE) BETWEEN (TYPEOF('n飹3')) AND (((NULL)GLOB('-1174725908'))))); -- 0ms;
SELECT (NOT (t0.c1)) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c59) NOT BETWEEN (t0.c1) AND (0.8881775482435649))) IS TRUE), CAST(((t0.c2) IS TRUE) AS INTEGER), NTILE(((((t0.c2 COLLATE BINARY)OR(t0.c2 COLLATE RTRIM)))AND(HEX(DISTINCT t0.c2)))) OVER () FROM t0 WHERE (((((x'')|(x'')))>=(COALESCE(x'', 'p줶', x'', NULL)))); -- 0ms;
SELECT DISTINCT ((((CASE WHEN t0.c0 THEN t0.c7 END)AND(CAST(t0.c7 AS BLOB))))AND((((t0.c59, t0.c2, '2143762901'))<((t0.c59, t0.c2, t0.c1))))) FROM t0; -- 0ms;
SELECT DISTINCT ((((ABS(t0.c0))AND(t0.c1 COLLATE RTRIM)))OR((((t0.c2))=((t0.c59))))) FROM t0; -- 0ms;
SELECT ALL t0.c1 FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((t0.c1)>>(t0.c2))) IS FALSE) DESC) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c7) BETWEEN (MIN(t0.c1)) AND (CAST(t0.c0 AS REAL))), NULL, COUNT(*) FROM t0 WHERE (((((x'' IN ())))>((('' IN ()))))); -- 0ms;
SELECT ALL (((t0.c7) NOTNULL) IN (((((((((x'')OR(0.7906880168950469)))AND(t0.c7)))OR(t0.c7)))OR(t0.c2)))) FROM t0; -- 0ms;
SELECT DISTINCT rtreenode((t0.c1 IN ()), SUM(t0.c7)) FROM t0 LIMIT 902340375 OFFSET -393134649; -- 0ms;
SELECT ((t0.c1) NOT BETWEEN ((t0.c59 IN ())) AND (((t0.c2) NOTNULL))) FROM t0 ORDER BY (+ (((t0.c2) IS FALSE))) DESC; -- 0ms;
SELECT DISTINCT ((NOT (t0.c7)) IN ()), x'' COLLATE BINARY, CASE ((0.2663276978413337)|('2127071318'))  WHEN '1829931284' THEN CAST(t0.c1 AS REAL) END FROM t0; -- 0ms;
SELECT ALL (- (CASE WHEN t0.c7 THEN t0.c59 ELSE t0.c1 END)) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c7)AND(t0.c7)))OR(t0.c59)))OR(t0.c7)))AND(t0.c59))) BETWEEN (((t0.c7)LIKE(t0.c0))) AND ((('/''!60X5b') IS TRUE))), ((CASE WHEN t0.c59 THEN x'ca25' WHEN t0.c1 THEN NULL WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN x'' WHEN t0.c59 THEN t0.c1 WHEN t0.c0 THEN t0.c7 WHEN NULL THEN t0.c0 END)>>((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))), (((t0.c2)) BETWEEN ((((((t0.c2)OR(t0.c2)))OR(x'')))) AND ((((t0.c1) ISNULL)))) FROM t0 ORDER BY CAST(COALESCE(DISTINCT t0.c1, NULL, t0.c7, t0.c7) AS REAL)  NULLS FIRST, ((+ (t0.c2)) IN ()) DESC; -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS BLOB)) NOT BETWEEN ((('321589207') IS TRUE)) AND (t0.c59)), MIN(0.8672319486298665), ((TOTAL(t0.c2)) NOT BETWEEN (((t0.c1) IS TRUE)) AND (((t0.c59) NOT NULL))) FROM t0 GROUP BY (- ((NOT (t0.c0)))); -- 4ms;
SELECT ALL CASE CAST(t0.c1 AS NUMERIC)  WHEN t0.c59 THEN SUM(t0.c2) WHEN ((t0.c1)<=(t0.c2)) THEN CASE t0.c59  WHEN t0.c1 THEN x'ca8f' END WHEN 0.3292964851306944 THEN (+ (t0.c7)) ELSE (+ (t0.c59)) END FROM t0 WHERE (((x'6743' IN ()) IN (LIKELY(NULL)))); -- 0ms;
SELECT DISTINCT ((((NULLIF(t0.c0, t0.c7))OR(((t0.c7) ISNULL))))OR(t0.c59 COLLATE NOCASE)) FROM t0 ORDER BY ((((t0.c0 COLLATE RTRIM)OR(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c59)))))OR(NULL)) ASC LIMIT -1416344339 OFFSET -1189396025; -- 0ms;
SELECT ALL 0.27554040483111963 FROM t0 WHERE (x'' COLLATE BINARY) ORDER BY (- ((+ (t0.c59)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c59 WHEN t0.c59 THEN t0.c7 ELSE NULL END IN ()), t0.c2, ((((((((t0.c59)AND(t0.c0)))OR(t0.c7)))AND(t0.c59 COLLATE NOCASE)))AND(NULL)) FROM t0 WHERE (NULL) ORDER BY (NOT ((((t0.c59)) NOT BETWEEN ((t0.c2)) AND ((t0.c7))))) LIMIT 1052238551 OFFSET 1483934769; -- 0ms;
SELECT DISTINCT (((~ (t0.c0))) NOTNULL), ((((t0.c2) IS FALSE)) NOT BETWEEN (COUNT(t0.c0)) AND ((+ (t0.c7)))), COUNT(*), ((((((((t0.c59)OR(t0.c1)))AND('d''')))AND('514716305' COLLATE RTRIM)))OR(CAST(t0.c1 AS NUMERIC))), (((((t0.c1)GLOB(t0.c0)), ((t0.c7) NOT NULL), ((t0.c7)IS(t0.c1))))<((t0.c7, COALESCE(t0.c7, t0.c0, t0.c59, t0.c1), ((t0.c1)/(t0.c7))))), CAST(t0.c0 COLLATE NOCASE AS TEXT), (((t0.c59, t0.c0, t0.c59, t0.c59, t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS INTEGER), 0.5123719697112737, (NOT (t0.c0)), ((t0.c2) NOTNULL), CAST(t0.c59 AS REAL))) AND ((CAST(t0.c1 AS NUMERIC), CASE WHEN t0.c1 THEN t0.c7 END, (((t0.c7, t0.c2, t0.c7)) NOT BETWEEN (('EG', t0.c0, t0.c2)) AND ((t0.c7, t0.c1, t0.c2))), t0.c0, ROUND(t0.c1, t0.c7)))) FROM t0 ORDER BY PRINTF(t0.c59 COLLATE NOCASE) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((NULL IN (t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ABS(((t0.c7)<=(t0.c2))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c7 AS TEXT) AS NUMERIC) FROM t0; -- 0ms;
SELECT ALL ((TOTAL(t0.c7))&((t0.c7 IN (t0.c7)))), (((((((t0.c59)) NOT BETWEEN ((t0.c1)) AND ((t0.c59))))OR(t0.c59 COLLATE RTRIM)))OR((((t0.c2)) NOT BETWEEN ((NULL)) AND ((t0.c1))))), (((((((('808890893')AND(t0.c2)))AND(t0.c0)))OR(((t0.c7) NOT BETWEEN (t0.c7) AND (t0.c59)))))AND(0xffffffffaaf31f89)) FROM t0 WHERE ((((((NULL, NULL, '787517988'))<((x'', 0.46906771618887155, x'629d')))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((((((t0.c2)OR(t0.c2)))AND(((((t0.c7)AND(t0.c1)))OR(t0.c59)))))AND(CAST(t0.c2 AS INTEGER))))AND(CASE WHEN t0.c0 THEN t0.c2 END)) FROM t0 ORDER BY (((((0.12680406159176982)LIKE(t0.c1)), DATE(t0.c2, '617636850', t0.c7), t0.c59))<=((((t0.c59) IS FALSE), 'V6*4|GKF', JULIANDAY(t0.c2, t0.c7, t0.c0, t0.c59, t0.c1))))  NULLS FIRST LIMIT 269464012 OFFSET 689232973; -- 0ms;
SELECT (((((t0.c1, t0.c59, t0.c0))<((t0.c1, '0.015990172929021162', t0.c1))))AND(CASE t0.c2  WHEN t0.c59 THEN t0.c7 WHEN t0.c59 THEN t0.c0 WHEN t0.c59 THEN t0.c59 END)), x'', t0.c1, CASE WHEN COUNT(t0.c59) THEN ((t0.c1) ISNULL) WHEN ((((((((((((t0.c7)OR(t0.c0)))AND(t0.c2)))OR(t0.c59)))OR(t0.c1)))OR(t0.c59)))AND(t0.c1)) THEN (((t0.c59))>((t0.c7))) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END THEN ((t0.c0)>=(t0.c1)) ELSE ((t0.c7) BETWEEN (t0.c1) AND (t0.c7)) END, ((GROUP_CONCAT(t0.c59)) BETWEEN (t0.c0) AND (((t0.c59)+(t0.c2)))) FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c59 THEN t0.c0 END)AND(CAST(t0.c59 AS BLOB))); -- 0ms;
