-- Time: 2024/06/06 02:58:51
-- Database: database30
-- Database version: 3.40.0
-- seed value: 138820130
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
PRAGMA journal_mode = WAL; -- 0ms;
UPDATE OR FAIL rt0 SET (c1, c2, c1)=(NULL, 1356535927, x'77f8') WHERE (((rt0.c1)) BETWEEN ((x'')) AND ((((((0.4663721055407758)OR(rt0.c0)))AND(rt0.c2))))); -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (1356535927, x'', 0.3132485332701209); -- 1ms;
ANALYZE sqlite_master; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='^ ' WHERE CASE WHEN ((rt0.c0) IS TRUE) THEN (rt0.c2 IN ()) WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN (- (rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c2 END; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('<|', '-2060005209', '뭭U??y,\r'); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES ('192269331', 1408285549, NULL), ('-2060005209', '1408285549', 0.8439236306470237), (']x', 0X1dc29d51, '192269331'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ((((('뭭U?6y,\r'))=((0.18917084031500142))) IN ()), 0.49561320743547643, '2036463058'); -- 1ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'7ab0') WHERE (((NOT (rt0.c0)))+(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA temp.default_cache_size = -1919392810; -- 0ms;
REINDEX; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x''; -- 0ms;
UPDATE OR ABORT rt0 SET c2=NULL WHERE rt0.c0; -- 0ms;
COMMIT; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, tokenize=simple); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.9361362756062598 WHERE ((((vt0.c0)-(vt0.c0)))*((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('-976016422', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -903293756);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 322821208);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 4ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0x50db1877), ('POFm'), (NULL); -- 0ms;
PRAGMA temp.recursive_triggers = true; -- 0ms;
CREATE TABLE t0 (c0 BLOB ); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (NULL); -- 0ms;
DROP TABLE t0; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA journal_size_limit = 4905849944726591141; -- 0ms;
PRAGMA main.threads; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES ('-976016422', 0X44ec25ce, ''); -- 0ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
ANALYZE temp; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL, c1=NULL WHERE rt0.c1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=(0.9361362756062598); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '54578'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1919392810,7');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '39645'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47858'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1838213059); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, +c5 INTEGER , +c6 INT ); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.9989315389140554, c1=0.23654810040307728; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 681947047); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63268'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '7559'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 917523594);\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50499'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '55253'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1563400420); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18489'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
DELETE FROM vt0; -- 0ms;
COMMIT; -- 0ms;
PRAGMA temp.busy_timeout = 0; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '13433'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1658758631); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE rt0 SET (c2, c0)=('-1711449324', x'') WHERE rt0.c0; -- 0ms;
UPDATE rt0 SET (c1)=(NULL); -- 0ms;
PRAGMA main.cache_spill = 1862043851244281850; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60482'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((x'') BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c2)OR(rt0.c0))) AND (((rt0.c2) NOTNULL))) FROM vt0, rt0 WHERE (CAST((NOT ('')) AS BLOB)); -- 0ms;
SELECT DISTINCT 0.1310229515439636, CASE rt0.c2  WHEN (rt0.c1 IN ()) THEN IFNULL(vt0.c0, vt0.c0) WHEN (('')!=(rt0.c2)) THEN CAST(vt0.c0 AS TEXT) WHEN HEX(DISTINCT x'') THEN -976016422 END, ((((((rt0.c2)AND(0.49561320743547643)))OR(rt0.c1))) NOTNULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)IS NOT(rt0.c1)))OR(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))), (((HEX(DISTINCT vt0.c0)))>((((NULL)&(rt0.c2))))), MIN((~ (rt0.c2))), ((((0.3132485332701209)==(rt0.c1))) ISNULL), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))GLOB(TRIM(DISTINCT rt0.c2))) FROM vt0 GROUP BY CAST(0.2050210591971069 AS BLOB);SELECT DISTINCT (((rt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c1, rt0.c0))) COLLATE RTRIM, CAST(rt0.c0 AS BLOB) COLLATE RTRIM, ((((vt0.c0)AND(((NULL)&(rt0.c2)))))AND(((rt0.c0)>(rt0.c2)))), ((((((rt0.c1))>=((rt0.c1))), ((rt0.c1) NOTNULL), vt0.c0))<=((0.6868703360675239, ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2))))), MAX(MAX(rt0.c2, rt0.c1)) COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c2) AND ((((rt0.c1))>=((rt0.c2))))), rt0.c2, ((((((((ABS(DISTINCT rt0.c2))OR(((rt0.c0) NOTNULL))))AND(((rt0.c0)GLOB(rt0.c2)))))AND(((rt0.c2)*(rt0.c2)))))AND(((rt0.c1)/(vt0.c0)))) FROM rt0 LIMIT 1404730463 OFFSET -1590123997;SELECT DISTINCT ((((rt0.c0)OR(((vt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))))OR(GROUP_CONCAT(rt0.c1))), 0.4903047858702926, GROUP_CONCAT((((rt0.c2))!=((rt0.c2)))) OVER () FROM rt0 WHERE ((((((x'' IN ()))AND((('') IS FALSE))))AND((((x'1671')) NOT BETWEEN ((x'')) AND ((NULL))))));SELECT ALL (NOT (UPPER(DISTINCT rt0.c1))) FROM rt0, vt0 WHERE (CASE WHEN 0.3132485332701209 THEN '' ELSE '*1{qq[뭭' END COLLATE NOCASE); -- 0ms;
SELECT CASE (((vt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0)))  WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) THEN (((rt0.c2))!=((0.4467919018855514))) WHEN (NOT (rt0.c0)) THEN ((rt0.c0)|(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)) END, AVG(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) OVER (), (+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM vt0 WHERE ((((- ('6}#^5U,'))) BETWEEN (0xffffffffafd8b80c) AND (((0.22936897363355535)||(NULL)))));SELECT DISTINCT ((MAX(rt0.c1)) ISNULL) FROM vt0 FULL OUTER JOIN rt0 ON LOWER(((vt0.c0) IS TRUE)) WHERE ((x'2a35' IN ('2036463058' COLLATE BINARY))) GROUP BY CASE WHEN ((rt0.c1) IS FALSE) THEN SQLITE_COMPILEOPTION_USED(-1.590123997E9) END; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), vt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 COLLATE RTRIM; -- 0ms;
SELECT ALL CASE WHEN (rt0.c2 IN (rt0.c0, rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) END, ((((rt0.c0) ISNULL)) ISNULL), CAST(((rt0.c1)GLOB(rt0.c1)) AS TEXT) FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) END DESC;SELECT DISTINCT CAST(((rt0.c2) BETWEEN (x'68a9') AND (rt0.c0)) AS BLOB) FROM rt0, vt0; -- 0ms;
SELECT CUME_DIST() OVER (), LIKELY(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))), SQLITE_COMPILEOPTION_USED(rt0.c2) FROM rt0 WHERE ((+ ('499293521'))); -- 0ms;
SELECT DISTINCT CAST('m7' COLLATE RTRIM AS REAL) FROM rt0, vt0 WHERE ((('' COLLATE RTRIM)+('D' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), MAX(rt0.c2), ((rt0.c2) NOTNULL)))<((MAX(vt0.c0), NULL, CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) FROM vt0 WHERE (((CASE WHEN 'r~' THEN '' ELSE 0.156218250938991 END)<(x''))) GROUP BY (~ (rt0.c1)) COLLATE RTRIM COLLATE BINARY HAVING TOTAL(((((((((vt0.c0)OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c2))) COLLATE BINARY ORDER BY ((((NULLIF(vt0.c0, vt0.c0))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(((vt0.c0)LIKE(rt0.c0)))) DESC  NULLS FIRST, CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT) LIMIT 1855824374 OFFSET -1635676090;SELECT (rt0.c0 IN ()) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT (((((((((~ (rt0.c1)))AND(((rt0.c0)*(vt0.c0)))))AND(MAX(rt0.c1, rt0.c2))))AND(((rt0.c1)=(vt0.c0)))))AND((+ (rt0.c0)))), (LIKELY(rt0.c0) IN ()), ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))-(MAX(vt0.c0))), ((rt0.c0) IS TRUE), (((rt0.c1)LIKE(vt0.c0)) IN ()) FROM vt0, rt0 NOT INDEXED; -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END) NOTNULL) FROM vt0;SELECT ALL LIKELY(GROUP_CONCAT(rt0.c1)), ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)<(rt0.c2 COLLATE RTRIM)), ((0Xffffffffbd4b7191)||((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((NULL) NOT NULL), 0.06606599504057264));SELECT ALL COUNT(*), (~ (CASE WHEN rt0.c1 THEN rt0.c2 END)), (((rt0.c2 IN (vt0.c0)))||(((0.05839190148262363)>>(vt0.c0)))) FROM vt0 WHERE (((0.11712660940679787 COLLATE NOCASE)GLOB(((((0Xffffffffaae168f1)OR(0.15850585182638433)))OR(x'')))));SELECT DISTINCT '' FROM vt0 WHERE ((~ (0.34756035046233935 COLLATE NOCASE))); -- 0ms;
SELECT ALL (((((((vt0.c0, rt0.c2, vt0.c0))<=((0.3162456306641994, vt0.c0, rt0.c1))))AND(((vt0.c0)>=(rt0.c0)))))AND(((rt0.c0) IS FALSE))), COUNT(*) OVER (), (((((vt0.c0, vt0.c0, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c2))))<(COALESCE(DISTINCT vt0.c0, x''))) FROM rt0;SELECT (vt0.c0 COLLATE BINARY IN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))), CAST(((rt0.c2)&(vt0.c0)) AS NUMERIC), 1143528117 FROM rt0, vt0 WHERE ((('-194842549') NOT BETWEEN (-1.63567609E9 COLLATE RTRIM) AND (CASE WHEN 0.41238560249366163 THEN NULL END))); -- 1ms;
SELECT ALL rt0.c0, CASE WHEN ((rt0.c1) IS TRUE) THEN rt0.c0 ELSE TRIM(rt0.c1) END, (((0x6bebdf84))==((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) FROM vt0, rt0; -- 0ms;
SELECT (((((rt0.c0))>=((rt0.c1)))) BETWEEN (MAX(vt0.c0)) AND (COUNT(*))), ((rt0.c2 COLLATE RTRIM) ISNULL), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (rt0.c0) AND (1e500)) FROM rt0 WHERE (CASE ((NULL) NOT BETWEEN (NULL) AND (0.415416421554769))  WHEN ((x'')+(NULL)) THEN (('1356535927')>('')) WHEN (NOT ('<|')) THEN ((NULL)GLOB('')) WHEN CASE 0.4455368877051368  WHEN x'fce72485' THEN '-1777409150' WHEN 0.03711783633012855 THEN 0xfffffffffb27c87f WHEN '-81278849' THEN NULL ELSE 0.13742403228818545 END THEN ((0.5698259820806486)!=(-1.91939281E9)) END);SELECT DISTINCT (((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND (((rt0.c0 IN ())))) FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))|((rt0.c1 IN ()))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((-1.344751604E9)AND((+ (rt0.c2)))))AND((rt0.c2 IN ()))), COUNT(*) OVER (), COUNT((((NULL, rt0.c2, rt0.c0))<=((rt0.c0, rt0.c1, vt0.c0)))) FILTER(WHERE CAST(NULL AS TEXT)) OVER () FROM vt0 NOT INDEXED, rt0 WHERE ((((x'2dc0') BETWEEN (x'') AND (0xffffffffe1d90da8)) IN ())); -- 0ms;
SELECT '541206154' FROM rt0 LIMIT 623272672; -- 0ms;
SELECT DISTINCT (((+ (rt0.c1))) NOT BETWEEN ((~ (rt0.c2))) AND ((- (vt0.c0)))), QUOTE(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))), CAST(COUNT(*) AS TEXT) FROM rt0 WHERE (CASE WHEN (((x'')) NOT BETWEEN ((NULL)) AND (('x'))) THEN ((((x'')AND('1457027411')))OR(NULL)) END) GROUP BY CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB);SELECT MIN(UPPER(vt0.c0)) FROM rt0 WHERE (((((((('810060005')) BETWEEN ((1810620292)) AND ((NULL))))AND(((((((((((((x'')OR(0xffffffffce2376a2)))OR(x'')))AND('')))OR(NULL)))OR(0Xffffffff80a61c83)))AND(x'')))))OR(CAST(-456656694 AS INTEGER))));SELECT DISTINCT COUNT(*) FROM rt0, vt0 WHERE (((((0.8273925880325714) BETWEEN (0.2952366119020554) AND (0.156218250938991))) NOT NULL)); -- 0ms;
SELECT DISTINCT LEAD(UNLIKELY(DISTINCT CAST(vt0.c0 AS TEXT)), vt0.c0, CASE WHEN 0.2959582153988284 THEN CAST(vt0.c0 AS NUMERIC) ELSE -903293756 END) OVER () FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL rt0.c2 FROM vt0;SELECT DISTINCT (((rt0.c0)) NOT BETWEEN (((x'c4c9' IN ()))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))), ((rtreenode(x'', rt0.c1))+(vt0.c0 COLLATE BINARY)), (((rt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((rt0.c2))) FROM vt0, rt0 WHERE ((((NULL)) BETWEEN (((('BzE')LIKE(x'')))) AND ((CASE NULL  WHEN -654247889 THEN '' WHEN 0Xffffffff816b0d3e THEN 0.0054981434603839086 WHEN NULL THEN NULL END)))); -- 0ms;
SELECT GROUP_CONCAT(0X5ea32860) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT -6.54247889E8 FROM vt0; -- 0ms;
SELECT DISTINCT (((GROUP_CONCAT(rt0.c0)))>((NULL))) FROM rt0, vt0 WHERE (((x'')IS('-1590123997')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (~ (rt0.c2 COLLATE RTRIM)) FROM vt0, rt0 WHERE ((('v]tp<8拠-' COLLATE RTRIM) NOT NULL)); -- 0ms;
SELECT rt0.c1, STRFTIME(((vt0.c0)LIKE(vt0.c0)), (- (rt0.c2)), ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)), ((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END), vt0.c0, ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (TYPEOF(rt0.c1)) AND (json_type(rt0.c2))), CAST(rt0.c1 AS INTEGER) FROM vt0, rt0 WHERE ((((((-2.12369069E9, x'', 970834991)) BETWEEN ((NULL, 0.03216991932034763, NULL)) AND ((x'', 0.4830610434705276, 0.23034406355309345)))) IS TRUE)); -- 0ms;
SELECT (+ (CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) FROM vt0, rt0; -- 1ms;
SELECT (rt0.c2 COLLATE RTRIM IN (COUNT(*))) FROM vt0, rt0 LIMIT -1988775927; -- 0ms;
SELECT DISTINCT rt0.c0 COLLATE NOCASE FROM vt0 GROUP BY ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)>(rt0.c2)))), CAST((rt0.c1 IN ()) AS NUMERIC), CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL) HAVING rt0.c2;SELECT AVG(rt0.c2) OVER () FROM vt0 WHERE (json_insert(((((1810620292)AND('B㡫-Y')))OR(x'')), GLOB(1.156326862E9, NULL), ((x'')+(NULL))));SELECT ALL CAST((+ (rt0.c0)) AS REAL) FROM vt0 NOT INDEXED WHERE ((NULL COLLATE BINARY IN ()));SELECT CASE WHEN ABS(DISTINCT rt0.c0) THEN '-1964516306' END FROM vt0 WHERE ((((('')IS(x'')))IS NOT((NOT ('1404730463')))));SELECT TIME(((0.8662375576797761) ISNULL), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (0.49561320743547643)), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) FROM vt0;SELECT ((((((vt0.c0) NOTNULL))OR(MIN(vt0.c0))))OR((rt0.c0 IN ()))), MIN(LIKE(rt0.c1, vt0.c0, '-') COLLATE NOCASE), COALESCE(DISTINCT rt0.c1, rt0.c0) COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT ALL AVG((- (rt0.c1))) OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((COUNT(*)) IS TRUE) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0))) FROM rt0 WHERE ((NULL IN (NULL)) COLLATE NOCASE);SELECT ALL rt0.c2, ((((('1143528117') IS FALSE)))==((vt0.c0 COLLATE RTRIM))), (((~ (rt0.c0))) IS TRUE) FROM rt0 WHERE ((((0.9609884023216188 IN ()))>(((0.4663721055407758)>>(0.386861614240946)))));SELECT ALL (NULL IN ()) FROM vt0 LIMIT 1230775109; -- 1ms;
SELECT DISTINCT ((((CAST(rt0.c0 AS BLOB))AND(((((rt0.c2)OR(rt0.c1)))OR(0.6800233412227931)))))OR(rt0.c0)), (~ (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))), rt0.c1, (~ ((rt0.c0 IN (rt0.c1, NULL)))), ((rt0.c2 IN ()) IN ()) FROM vt0 WHERE (CASE ((0.8920716812849475) BETWEEN (NULL) AND ('0.15850585182638433'))  WHEN (('') BETWEEN (x'330c14a8') AND ('684784768')) THEN ((((((((0.23676676510723205)AND(NULL)))AND(0.156218250938991)))OR(283330993)))AND(0.4685286792185017)) ELSE ((0.06172884793263811) NOT BETWEEN (x'') AND (0.8439236306470237)) END) INTERSECT SELECT ALL '-943205257', CASE ((rt0.c2)&(rt0.c1))  WHEN ((vt0.c0)+(rt0.c2)) THEN ((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)) ELSE ((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) END, COUNT(((rt0.c2)-(-194842549))), ((((rt0.c1)OR(NULL)))AND(rt0.c1)) COLLATE NOCASE, CAST(rt0.c2 COLLATE NOCASE AS REAL) FROM rt0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (UNICODE(vt0.c0)) AND (((rt0.c2)*(rt0.c1)))), ((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) COLLATE BINARY ASC;SELECT (+ (CASE WHEN x'' THEN rt0.c2 END)), x'1d85', CAST(GROUP_CONCAT(rt0.c1) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT (((+ (vt0.c0))) BETWEEN ((((rt0.c2))==((rt0.c1)))) AND ((rt0.c2 IN (rt0.c1, rt0.c0)))) FROM rt0 WHERE (CAST(CASE WHEN '-1198364120' THEN NULL ELSE 'Y8*MHd+?' END AS TEXT));SELECT DISTINCT ((MAX(rt0.c1))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) FROM rt0, vt0 WHERE ('+ql&WwF^'); -- 0ms;
SELECT DISTINCT CASE ((NULL) IS FALSE)  WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE (rt0.c2 IN ()) END, CASE WHEN NULL THEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) END, (CASE WHEN x'' THEN rt0.c1 ELSE vt0.c0 END IN ()) FROM vt0, rt0 WHERE ((+ (x'318e5ae7'))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL), (((rt0.c2)) NOT BETWEEN ((((0.8439236306470237)OR(vt0.c0)))) AND ((((vt0.c0) NOT NULL)))), TOTAL(STRFTIME(rt0.c0, rt0.c0, rt0.c0)) FROM vt0;SELECT ALL (((((rt0.c1))>=((rt0.c1))))AND(ROUND(vt0.c0, rt0.c1))) FROM vt0 WHERE (((0.6234881257035683 COLLATE BINARY)>>(((1230775109)GLOB(NULL))))) ORDER BY CAST(((rt0.c1) BETWEEN ('843129413') AND (rt0.c1)) AS BLOB);SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (x'659b0613')))AND((- (rt0.c0)))) FROM rt0 LIMIT -1198364120; -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM rt0 LIMIT -653344901 OFFSET 1810620292; -- 0ms;
SELECT DISTINCT UNLIKELY('[6P_]'), rt0.c1, CASE ((rt0.c2) BETWEEN (rt0.c2) AND ('1810620292'))  WHEN (~ (rt0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END, (((((- (vt0.c0)))OR(((x'') ISNULL))))OR('222647425')), (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((+ (vt0.c0)))))AND((vt0.c0 IN ()))) FROM rt0;SELECT ALL ((((rt0.c1)AND(vt0.c0))) BETWEEN (json_array_length(rt0.c2)) AND (1810620292 COLLATE NOCASE)), (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((MIN(NULL)))), CASE WHEN rt0.c0 THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN INSTR(vt0.c0, rt0.c2) THEN ((vt0.c0)IS NOT(rt0.c2)) WHEN ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR('')))AND(vt0.c0)))AND(rt0.c0)) THEN rt0.c1 END FROM vt0 WHERE (((((((0.6618724344731467)OR(x'5ebf')))OR(x'')))/((((0.6492347078106027))=((NULL))))));SELECT DISTINCT ((((((((((vt0.c0) ISNULL))AND((NOT (rt0.c2)))))AND(CAST('㮨hdm 3''' AS NUMERIC))))OR(((970834991)+(vt0.c0)))))AND((('	장x?c㿷跰')GLOB(rt0.c1)))) FROM vt0, rt0 WHERE (CAST(((NULL)OR(0.16878456251274176)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 END)-((rt0.c0 IN ()))) FROM rt0;SELECT ALL ((((rt0.c2)&(NULL)))|(((rt0.c2) ISNULL))) FROM vt0, rt0 WHERE ((NOT ('')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS TEXT) IN (((vt0.c0)==(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c2 END)) FROM rt0;SELECT ALL vt0.c0, ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))+(((((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))), ((rt0.c2) NOT BETWEEN (x'dd3d5eb91a59') AND (CAST(rt0.c1 AS NUMERIC))) FROM rt0, vt0 WHERE ((CASE WHEN NULL THEN 'start of month' ELSE '1880465180' END IN ())); -- 0ms;
SELECT ALL x'', (((((rt0.c1, rt0.c1, rt0.c0))==((vt0.c0, vt0.c0, rt0.c0))))AND(((rt0.c0)==(vt0.c0)))), ((((rt0.c2) IS TRUE))%(((rt0.c1) IS TRUE))) FROM rt0 WHERE ((('PN!1㴓l~\') IS TRUE));SELECT ALL (((rt0.c1 IN ())) NOT BETWEEN (LAST_INSERT_ROWID()) AND (CAST(rt0.c2 AS INTEGER))), NTILE((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c0)) BETWEEN ((810060005)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS TEXT)))) OVER (), NULL FROM vt0 GROUP BY rt0.c2 HAVING ((((NULL) NOT BETWEEN (rt0.c1) AND ('B㡫-Y'))) BETWEEN (((vt0.c0) IS TRUE)) AND ((((rt0.c2, rt0.c2, rt0.c1))!=((rt0.c1, vt0.c0, vt0.c0)))));SELECT (((((NULL)|(NULL))))<=((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT ALL rt0.c1, ((rt0.c1 IN ()) IN ()), ((((((((((vt0.c0)>(rt0.c1)))OR('')))OR(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0)))))AND(((rt0.c1)<(rt0.c1)))))AND(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(vt0.c0)))) FROM rt0 WHERE ((((((- ('hEsqeP!')))OR(0.9906034042014797 COLLATE RTRIM)))OR(CASE NULL  WHEN NULL THEN '322821208' ELSE 0X39ddc42f END))) ORDER BY ((((vt0.c0)<(vt0.c0)))!=((~ (rt0.c1))))  NULLS LAST;SELECT DISTINCT CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN ((rt0.c1)GLOB(vt0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c1 IN (vt0.c0)) WHEN ((vt0.c0)AND('1404730463')) THEN ((rt0.c0) IS FALSE) END FROM vt0 LIMIT 920257174;SELECT ALL SUM(x'') FROM rt0; -- 0ms;
SELECT NULL FROM vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))+(((x'6100') NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FROM vt0, rt0; -- 1ms;
SELECT CAST(((rt0.c0)==(rt0.c0)) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT (0x53eb2fae IN ()) FROM rt0 WHERE (((4.99293521E8) ISNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN AVG(0.6385366051447403) THEN ((rt0.c1) ISNULL) WHEN rt0.c1 THEN CAST('-778289950' AS REAL) WHEN ((rt0.c2)>(NULL)) THEN ((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)) END, NULL, ((((vt0.c0)>(rt0.c1))) ISNULL) FROM rt0, vt0 WHERE (((CAST(x'67cfb52d' AS BLOB)) NOT BETWEEN (((x'') NOT BETWEEN ('-1777409150') AND (0.6385366051447403))) AND ((('.xB~')<=('I'))))); -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((LIKE(rt0.c2, rt0.c1, '2'), ((rt0.c1)>(rt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, 729788188)) AND ((rt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((0.8237478615193691)) AND ((vt0.c0))), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END, (rt0.c1 IN ()), TRIM(DISTINCT rt0.c2, rt0.c0)))) FROM vt0, rt0 WHERE (CASE WHEN json_remove(NULL, x'') THEN '1-500000^<' END); -- 1ms;
SELECT LIKELY(((((x'')AND(rt0.c2)))OR(vt0.c0))), (((rt0.c2)) NOT BETWEEN ((((((0.386861614240946)OR(rt0.c0)))OR(rt0.c2)))) AND ((CASE WHEN vt0.c0 THEN rt0.c1 ELSE x'' END))), ((+ (rt0.c0)) IN (CAST(rt0.c1 AS TEXT))) FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c0)AND(rt0.c1)) THEN vt0.c0 COLLATE NOCASE ELSE CAST(rt0.c2 AS REAL) END  NULLS LAST; -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE (((TIME(0.33220305606805944, NULL, x'8579', '', x''))|((('-403730553')OR(NULL))))); -- 0ms;
SELECT ALL IFNULL(CASE WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c0) IS TRUE)) FROM rt0 GROUP BY (- (ABS(rt0.c1))) HAVING ((PRINTF(rt0.c1))>(((rt0.c1) IS FALSE))) LIMIT 1636399273 OFFSET 273022995; -- 0ms;
SELECT CASE WHEN (((rt0.c0, rt0.c1, rt0.c2))>=((vt0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c1) IS TRUE) END, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) NOT NULL), ((x'')||(vt0.c0)) FROM vt0;SELECT DISTINCT (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) FROM vt0, rt0 WHERE (((((('') IS FALSE)))==((CASE x'9035'  WHEN -81278849 THEN NULL WHEN 0x3d3ce1f2 THEN '1027400178' WHEN 0X2042268a THEN NULL ELSE x'' END)))); -- 0ms;
SELECT ((((((((((((((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR((- (rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((((rt0.c2)-(rt0.c1)))) AND ((0.2068990213733084 COLLATE NOCASE))) FROM vt0, rt0 WHERE ('-948593932'); -- 0ms;
SELECT DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT ((((vt0.c0)-(vt0.c0))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((rt0.c0)<(rt0.c2)))) FROM vt0;SELECT DISTINCT ((((((0.9407837644907342) NOTNULL))AND(((rt0.c2)=(rt0.c1)))))OR(vt0.c0)) FROM vt0 WHERE ((((((- ('i~좬o悘鉡>0x')))OR(((0.4008143955811726) IS FALSE))))OR((('-1086636781') BETWEEN (x'88df') AND ('-1428068111')))));SELECT DISTINCT ((UPPER(DISTINCT vt0.c0)) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c0) NOT BETWEEN (-140373187) AND (rt0.c1)))), (+ (rt0.c1)) COLLATE BINARY, (((rt0.c2 IN ()))!=(SQLITE_COMPILEOPTION_USED(rt0.c2))) FROM rt0, vt0 WHERE (((NULL IN ()) IN ((NULL IN (x'', 0xffffffffaae168f1))))); -- 0ms;
SELECT ALL '>', ((TOTAL(0.5800296148431362))+((((rt0.c2))!=((vt0.c0))))), (('-732043252') BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((rt0.c2))!=((rt0.c2))))) FROM rt0;SELECT DISTINCT CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) THEN ((vt0.c0)||(rt0.c1)) ELSE x'' END FROM rt0 GROUP BY ABS(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END), rt0.c1, ((((((((((rt0.c2)<=(rt0.c2)))OR(NULLIF(rt0.c0, vt0.c0))))AND(((rt0.c0) NOT NULL))))OR(((rt0.c1)|(vt0.c0)))))AND(((rt0.c1)<(rt0.c2)))) HAVING (((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(rt0.c0 AS NUMERIC), (((((((('0.4663721055407758')AND(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0))))<((MIN(rt0.c1), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), rt0.c0)));SELECT ALL (MAX(rt0.c0) IN ()), (((rt0.c2)) BETWEEN (((NOT (rt0.c1)))) AND ((rt0.c0 COLLATE BINARY))), CAST(rt0.c1 AS NUMERIC) COLLATE BINARY FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((HEX(rt0.c2))LIKE(NULL)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c1) IS FALSE))), rt0.c1, rt0.c1 FROM vt0, rt0 ORDER BY ((CAST(NULL AS REAL))AND(rt0.c0))  NULLS FIRST, (+ ((vt0.c0 IN ())))  NULLS FIRST, ((((((rt0.c1)OR(NULL)))AND(rt0.c2))) IS FALSE)  NULLS FIRST; -- 0ms;
SELECT vt0.c0 FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN (0.8386109317172176 IN (9.70834991E8)) ELSE ((('623272672'))<((NULL))) END) GROUP BY (NOT (UNLIKELY(rt0.c0)));SELECT DISTINCT HEX(CASE rt0.c0  WHEN x'edc7' THEN vt0.c0 ELSE vt0.c0 END) FROM rt0 WHERE (((CAST(NULL AS REAL)) BETWEEN (TRIM(DISTINCT -8.3653667E8)) AND (x'd56e95c2' COLLATE NOCASE))) GROUP BY (((vt0.c0)<=(rt0.c1)) IN (rt0.c1)), ((rt0.c2) IS TRUE) COLLATE RTRIM COLLATE RTRIM, ((CAST(vt0.c0 AS REAL)) NOTNULL), ((((rt0.c0) NOTNULL))OR(((vt0.c0) IS TRUE))), (((+ (rt0.c1))) IS FALSE) HAVING (+ (CAST(rt0.c2 AS BLOB)));SELECT DISTINCT rt0.c0 FROM vt0 WHERE (CAST(((NULL) ISNULL) AS BLOB));SELECT DISTINCT GROUP_CONCAT(((vt0.c0)LIKE(vt0.c0))), ((vt0.c0) NOTNULL), (((((((((NULL IN ()))AND(CAST(vt0.c0 AS NUMERIC))))OR((NOT (rt0.c0)))))AND(CAST(rt0.c0 AS TEXT))))OR((NOT (rt0.c0)))) FROM rt0, vt0 UNION SELECT DISTINCT CASE rt0.c0  WHEN json_type(rt0.c1) THEN ((rt0.c0)<('-2047635984')) END, (+ (((rt0.c0) ISNULL))), ((((vt0.c0)IS NOT(rt0.c1)))||(rt0.c0)) FROM vt0;SELECT DISTINCT ((((((rt0.c0) NOT BETWEEN (0.6509728378826884) AND (vt0.c0)))OR(((vt0.c0) NOT NULL))))AND((- (rt0.c1)))) FROM rt0 WHERE ((((((x'', NULL, 'mҴ-qt[≅BY'))!=((NULL, '2005303683', 0.386861614240946)))) NOT BETWEEN (((((0.9480610191145828)AND(x'')))AND(0Xffffffffee1619e3))) AND (((NULL)AND(x'')))));SELECT DISTINCT CAST(((rt0.c2)/(rt0.c0)) AS TEXT) FROM vt0;SELECT SUM(((rt0.c1)IS(rt0.c2))) OVER () FROM rt0, vt0 WHERE (((CASE x''  WHEN x'2bd9' THEN '-1633286988' WHEN 0X44ec25ce THEN 0.2523627886072164 WHEN NULL THEN 1.457027411E9 END)AND(((0.670511543885951) NOT NULL)))) ORDER BY ((rt0.c0)>(vt0.c0)) COLLATE BINARY  NULLS FIRST, ((((rt0.c2)OR(CAST(rt0.c0 AS BLOB))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END IN ()) FROM rt0, vt0 GROUP BY '-691901133' LIMIT 1285610161 OFFSET 1280706585; -- 0ms;
SELECT DISTINCT (((+ (0.23654810040307728))) NOT BETWEEN (COUNT(*)) AND (((rt0.c1) NOT BETWEEN (1514641077) AND (vt0.c0)))), LIKELIHOOD(DISTINCT CAST(rt0.c2 AS NUMERIC), 0.02497257785241236), ((vt0.c0 COLLATE RTRIM)<(NULL)) FROM rt0;SELECT DISTINCT ((AVG(rt0.c2))+(0.9455063970215394)), CAST(CAST(rt0.c1 AS BLOB) AS TEXT), ((((CAST(rt0.c1 AS TEXT))OR('')))AND(((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)))) FROM rt0;SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE (((((((NULL) NOT BETWEEN (NULL) AND (0.2959582153988284)))AND(((0.6511574414070852) ISNULL))))OR((('-792491161') ISNULL)))); -- 0ms;
SELECT ALL MIN((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((rt0.c0, rt0.c0, rt0.c1)))), CASE rt0.c2  WHEN rt0.c2 THEN ((vt0.c0)<>(rt0.c0)) WHEN ((rt0.c1) ISNULL) THEN ((0.06236226630625208)*(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c0)&(rt0.c1)) ELSE (- (rt0.c1)) END, MIN(((rt0.c2)<>(rt0.c1))) FROM rt0 WHERE ((((('-300541469') IS TRUE))<((('917523594')OR('-2072929145')))));SELECT DISTINCT (((((+ (rt0.c2)))AND(NULL)))AND(json_remove(rt0.c1, vt0.c0, rt0.c0, vt0.c0))) FROM rt0 WHERE (((x'' IN (NULL, '-543631307')) IN ()));SELECT FIRST_VALUE((NOT (((NULL) ISNULL)))) OVER (), LAG((+ (((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))), '<팥', (((rt0.c1)==(rt0.c2)) IN ())) OVER ( ORDER BY (((vt0.c0) NOT NULL) IN (((rt0.c0)>>(vt0.c0)), ((rt0.c2) IS TRUE))), load_extension(((rt0.c2)<(rt0.c2))) ASC, ABS(rt0.c1 COLLATE NOCASE)  NULLS FIRST), (((((((((((0X7fffffffffffffff, x'', rt0.c0))<((rt0.c0, rt0.c0, vt0.c0))))OR((+ (rt0.c1)))))OR((rt0.c1 IN ()))))AND(rt0.c2 COLLATE BINARY)))AND((rt0.c0 IN (rt0.c1, rt0.c2, vt0.c0)))) FROM rt0, vt0 WHERE (0.24949210213317452); -- 1ms;
SELECT ALL (rt0.c0 COLLATE BINARY IN (((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)))) FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL) FROM vt0, rt0; -- 0ms;
SELECT ALL SUM((((rt0.c0, rt0.c1, rt0.c2))>((x'', rt0.c1, rt0.c1)))) OVER () FROM vt0 WHERE ((NOT (CASE ''  WHEN x'' THEN '222647425' ELSE NULL END)));SELECT ALL ((((GROUP_CONCAT(rt0.c2))OR((((rt0.c0))==((vt0.c0))))))OR(IFNULL(DISTINCT rt0.c2, vt0.c0))) FROM rt0;SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE (((CAST('00P⨃eP짏' AS NUMERIC)) ISNULL)); -- 0ms;
SELECT DISTINCT TOTAL(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 END) OVER (), SUM(CAST(rt0.c1 AS INTEGER)) OVER (), vt0.c0 FROM vt0, rt0 WHERE (((NULL COLLATE NOCASE) NOT BETWEEN ((((((((('(N+㾻!+')AND(0xffffffffc0c79261)))AND(-3.00541469E8)))AND('KFTNJiD臇O')))AND('1280706585'))) AND (((9.20257174E8) IS TRUE)))); -- 0ms;
SELECT ALL ((((rt0.c0)-(vt0.c0)))<<((vt0.c0 IN (rt0.c2)))) FROM vt0 ORDER BY 0.6425554826028843;SELECT DISTINCT CAST(AVG(rt0.c2) AS REAL) FROM rt0, vt0; -- 0ms;
SELECT ((COUNT(rt0.c2))LIKE(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))), ((((GROUP_CONCAT(vt0.c0))AND(('ak' IN (rt0.c1)))))AND((NOT (rt0.c0)))), ((vt0.c0) NOT BETWEEN (((rt0.c0)>>(rt0.c2))) AND (vt0.c0 COLLATE BINARY)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (CAST('1754232848' AS NUMERIC) IN (((rt0.c0)AND(rt0.c2)), (+ (x'a2a126ae')))), ((((vt0.c0)||(rt0.c2))) BETWEEN (((vt0.c0) NOTNULL)) AND (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)), (((((rt0.c1 IN ()))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))))OR(AVG(rt0.c1))) FROM rt0, vt0 WHERE ((((('754203208') BETWEEN (0x259e2c5d) AND (x''))) NOTNULL)) ORDER BY '', x'9651' DESC  NULLS FIRST, ((rt0.c1 COLLATE RTRIM)/(rt0.c1)); -- 1ms;
SELECT (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c2, x'')) AND ((0.49561320743547643, rt0.c0, rt0.c0, rt0.c1, vt0.c0))) COLLATE NOCASE FROM vt0, rt0 WHERE ((+ ((- ('-2033134811'))))); -- 0ms;
SELECT DISTINCT UPPER(rt0.c1 COLLATE RTRIM), QUOTE((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), CAST(((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)) AS NUMERIC) FROM rt0;SELECT (((COUNT(*), vt0.c0 COLLATE RTRIM, ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))))<=((COALESCE(vt0.c0, rt0.c1), (- (rt0.c0)), ((rt0.c1)/(vt0.c0))))), ((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)) COLLATE BINARY, ((rt0.c0)/(vt0.c0)) COLLATE BINARY FROM rt0 WHERE ((((((('RRj|')AND('608328574')))OR('_Y')))LIKE(UPPER(NULL))));SELECT ALL ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))GLOB(CASE x''  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN 0.8662375576797761 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)), (((- (vt0.c0))) NOT NULL), ((COUNT(rt0.c0))!=(rt0.c0)) FROM rt0;SELECT DISTINCT ((rt0.c1) BETWEEN (NULL) AND (rt0.c1)) COLLATE RTRIM, (((NULL)) NOT BETWEEN ((((rt0.c1)%(rt0.c0)))) AND (((((vt0.c0))<=((rt0.c0)))))), SUBSTR(ABS(rt0.c1), rt0.c1) FROM vt0, rt0 WHERE (CASE WHEN x'' COLLATE NOCASE THEN (('K.') NOT BETWEEN ('-1198364120') AND (NULL)) WHEN (0.32460888823808354 IN ()) THEN ((0.670511543885951) BETWEEN (x'') AND ('n?')) WHEN '' COLLATE NOCASE THEN CASE NULL  WHEN 0.39368389791671277 THEN '-1196531560' ELSE '-925073577' END END); -- 1ms;
SELECT 0.8739850351326968 FROM vt0, rt0; -- 0ms;
SELECT ALL CAST(x'' AS REAL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0)AND(rt0.c0)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT PERCENT_RANK() OVER (), NULLIF(DISTINCT rt0.c2, vt0.c0) COLLATE NOCASE, (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND(CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((NULL))<=(((~ (rt0.c1))))), DENSE_RANK() OVER (), CASE TOTAL(rt0.c0)  WHEN highlight('-543631307', 0x36da0296, rt0.c2, vt0.c0) THEN ((rt0.c2)*(rt0.c0)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END FROM vt0 WHERE ((+ ((('1404730463') NOTNULL)))) ORDER BY ((((load_extension(rt0.c1, -4.56656694E8))OR(-2136597373)))AND((((rt0.c2, rt0.c0, vt0.c0, rt0.c1, '1503633926'))==((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c2)))));SELECT DISTINCT (~ (((rt0.c0) NOT NULL))), CASE ((vt0.c0)<<(rt0.c1))  WHEN CASE WHEN vt0.c0 THEN rt0.c2 END THEN (NOT (rt0.c0)) END, MIN(CAST(rt0.c0 AS NUMERIC)) FROM vt0;SELECT ALL ((((((((((vt0.c0)<(rt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR((((rt0.c1))!=((rt0.c0))))))AND((NOT (rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))), ((('-289605537')) NOT BETWEEN (((NOT (rt0.c0)))) AND ((CASE WHEN rt0.c0 THEN vt0.c0 END))), MAX(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))/(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END)) FROM rt0;SELECT ALL ((((rt0.c1) ISNULL)) BETWEEN (CAST(')f''<IrJV\r' AS TEXT)) AND (((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))) FROM rt0;SELECT MAX(((((((((rt0.c0)OR(rt0.c2)))AND(0Xffffffff9be9dd59)))OR(rt0.c0)))OR(rt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (- (COUNT(*))), CASE ((rt0.c0)IS(rt0.c0))  WHEN ((rt0.c1) NOT NULL) THEN vt0.c0 ELSE ((rt0.c1)&(NULL)) END, NTILE(((SQLITE_COMPILEOPTION_GET(rt0.c0))<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))) OVER () FROM vt0, rt0 ORDER BY CHANGES() DESC  NULLS LAST, NULL  NULLS LAST;SELECT ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT (((NULL, (+ (rt0.c1)), MIN(rt0.c0), CASE WHEN rt0.c2 THEN vt0.c0 END, (vt0.c0 IN ())))>(((~ (vt0.c0)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END, (~ ('525809771'))))) FROM rt0 WHERE ((((('-836536670') ISNULL)) BETWEEN (json_remove(0xffffffffc34da0d9, x'8e79')) AND ((x'' IN (NULL))))) LIMIT 1302702098 OFFSET 1656489184;SELECT DISTINCT ((rt0.c0)>(rt0.c2)) COLLATE NOCASE FROM vt0, rt0 WHERE (((CAST(9.20257174E8 AS BLOB))>=(((((0.6200716393442809)OR(0xffffffff874eb2d8)))AND('-2081045822'))))); -- 0ms;
SELECT ALL NULL, ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))%(rt0.c2 COLLATE RTRIM)), ((((rt0.c1)OR(rt0.c2)))AND(vt0.c0)) COLLATE RTRIM, rt0.c2, CASE WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE x'dd87' END FROM vt0, rt0 WHERE (CASE WHEN '1285610161' COLLATE RTRIM THEN ((((NULL)OR(711111044)))AND(NULL)) WHEN ((NULL) NOTNULL) THEN ((('#2jH|⟖(')) BETWEEN (('	,')) AND ((0.8273925880325714))) WHEN (('') NOT BETWEEN ('') AND (0.8026428273081377)) THEN CAST(0.3485130055997667 AS BLOB) END); -- 0ms;
SELECT ALL (((+ (rt0.c1))) IS FALSE) FROM vt0 ORDER BY (NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) LIMIT -476705705;SELECT DISTINCT SUM((~ (rt0.c1))), -4.76705705E8, ROW_NUMBER() OVER ( ORDER BY rt0.c2  NULLS LAST, TRIM(rt0.c1 COLLATE BINARY) ASC  NULLS LAST) FROM rt0, vt0 WHERE (CAST(((NULL)==(-1.7976931348623157E308)) AS REAL)); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)|(vt0.c0)))OR(((vt0.c0)<=(rt0.c1)))))OR(((rt0.c2) ISNULL))) FROM vt0 WHERE (load_extension(CAST(0X56d87953 AS INTEGER)));SELECT x'e149' FROM vt0; -- 0ms;
SELECT ALL (+ (CAST(vt0.c0 AS REAL))), x'677b', CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS NUMERIC) THEN (rt0.c2 IN ()) WHEN ((vt0.c0)IS(rt0.c1)) THEN ('r~' IN ()) ELSE rt0.c0 END FROM vt0;SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(x'' AS INTEGER)) AND (((rt0.c1)>(rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((('fU4M^2JA', rt0.c2, 0xffffffff86d0d325)) BETWEEN ((CAST('418677833' AS TEXT), ((rt0.c2) IS FALSE), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) AND ((((vt0.c0)IS NOT(rt0.c1)), ((rt0.c1) ISNULL), (((rt0.c2, rt0.c0, rt0.c0))>=((vt0.c0, vt0.c0, rt0.c0)))))), ((CAST(rt0.c1 AS REAL))&((NOT ('499293521')))), ROW_NUMBER() OVER () FROM vt0, rt0 WHERE (CAST((+ ('D')) AS REAL)) GROUP BY (TRIM(DISTINCT rt0.c0, vt0.c0) IN (rt0.c2 COLLATE RTRIM, rt0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL))); -- 0ms;
SELECT ALL ((((rt0.c1, vt0.c0, rt0.c0, vt0.c0, rt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.8818197289248556, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c2, vt0.c0, rt0.c0, vt0.c0))) IN (((rt0.c1)IS NOT(vt0.c0)))), GROUP_CONCAT(CAST(rt0.c0 AS BLOB)) OVER (), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ISNULL) FROM rt0;SELECT ((CASE 0Xffffffff99fd5b14  WHEN vt0.c0 THEN rt0.c1 END)AND((~ (rt0.c2)))) FROM vt0, rt0 WHERE (((((NULL, 0.7660828802999089, x'd1d8'))<((0X2a92e3de, x'ab9e', NULL))) IN ())); -- 0ms;
SELECT DISTINCT vt0.c0, (((- (rt0.c2))) BETWEEN (TIME(rt0.c0, 0.5631500420504335, rt0.c2)) AND ((- (rt0.c0)))), ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))) BETWEEN (rt0.c1) AND (NULL)) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)<<(rt0.c1)) THEN CAST(rt0.c2 AS REAL) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ('371999666' IN (rt0.c0)) WHEN (('')+(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((rt0.c0)>=(rt0.c1)) END, CASE ((((rt0.c1)OR(rt0.c0)))AND(vt0.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('m7'))) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END ELSE ((vt0.c0)&(rt0.c1)) END, AVG(rt0.c2) FROM rt0;SELECT DISTINCT SUM(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-452678361'))) OVER (), ((NULL) BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))) AND (((x'') ISNULL))), 0.7250906951558678 COLLATE NOCASE COLLATE RTRIM, NULL, (((vt0.c0)) NOT BETWEEN ((NULL)) AND (((+ (vt0.c0))))) FROM rt0 WHERE ((((~ (-1679172263)))/(CAST(NULL AS INTEGER))));SELECT ((((rt0.c0)OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), GROUP_CONCAT((rt0.c0 IN (vt0.c0))) OVER (), CASE ((rt0.c2)==(rt0.c2))  WHEN ((rt0.c1)GLOB(rt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END FROM rt0, vt0 WHERE (((0X57ad6e67) NOTNULL) COLLATE NOCASE); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0, rt0 WHERE (NULL); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((UNLIKELY(rt0.c2))) AND (((NOT (rt0.c0))))), NTILE(0.8368768185024725) OVER (), (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN ('%I6Fl') AND (MAX(vt0.c0))), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS TRUE), (rt0.c1 IN (rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS BLOB))) FROM vt0 LIMIT -1119129199 OFFSET 882230378;SELECT ALL ((((rt0.c1) IS FALSE)) NOT BETWEEN (CAST(x'' AS INTEGER)) AND (NULLIF(rt0.c1, rt0.c2))) FROM rt0, vt0; -- 0ms;
SELECT ALL CAST(((rt0.c0)OR('')) AS TEXT) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT MIN(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) FROM rt0, vt0; -- 0ms;
SELECT ALL TYPEOF(DISTINCT vt0.c0 COLLATE RTRIM) FROM vt0, rt0 WHERE (((x'7fed' COLLATE BINARY)%(((x'') BETWEEN ('-300541469') AND (0X3dfa94a3))))); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 COLLATE NOCASE THEN 2.73022995E8 WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN vt0.c0 THEN ((rt0.c1) IS TRUE) END FROM rt0 WHERE (((((NULL) BETWEEN ('bo\rL') AND (x''))) IS TRUE));SELECT DISTINCT (NOT (SUM(rt0.c0))), '-1344751604', ((NULL) IS TRUE) FROM rt0, vt0 WHERE ((((x'' IN (NULL))) ISNULL)) ORDER BY ((((((((((((x'bd75e954')OR(vt0.c0)))AND(rt0.c2)))AND(CAST(vt0.c0 AS BLOB))))AND(0.5155391546086782)))OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c1)IS NOT(rt0.c0)))) LIMIT 1098169710 OFFSET 1230775109; -- 0ms;
SELECT (~ ((NOT (vt0.c0)))) FROM vt0, rt0 GROUP BY (+ (NULL)); -- 0ms;
SELECT DISTINCT x'' FROM rt0, vt0 WHERE ('Q)CR') LIMIT 338619826; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) NOT NULL) FROM vt0 LIMIT -511527050; -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( ORDER BY (rt0.c1 COLLATE BINARY IN ()) ASC) FROM rt0, vt0 WHERE ((((x'')) NOT BETWEEN ((x'')) AND ((-2.89605537E8))) COLLATE RTRIM) LIMIT -978821025; -- 0ms;
SELECT ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(NULLIF(rt0.c0, rt0.c0))), ((((rt0.c0)%(rt0.c0))) IS TRUE), ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))>=((((rt0.c0, rt0.c1, 0.15850585182638433, vt0.c0, rt0.c1, rt0.c0, rt0.c1))==((rt0.c0, rt0.c0, '', rt0.c0, rt0.c1, rt0.c2, rt0.c0))))) FROM rt0 WHERE (((('0쓷,') NOT BETWEEN ('') AND (0.382466312235752)) IN ((((NULL, '484248233', 0.9163913859606128))<((0.6425554826028843, NULL, ''))), ((x'f35f') IS TRUE))));SELECT ALL ((0X53eb2fae) IS TRUE) COLLATE RTRIM FROM vt0 GROUP BY ((vt0.c0) IS FALSE) COLLATE RTRIM LIMIT 691568060 OFFSET 1599076504; -- 0ms;
SELECT ALL SUBSTR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), COUNT(rt0.c1)) FROM vt0 WHERE ((((((((((x'cdab8577')OR('뭭u??y,\r')))AND(0.6234881257035683)))OR(1.514641077E9)))AND(x'')) IN ()));SELECT ALL (~ (((rt0.c0)*(rt0.c1)))) FROM vt0 WHERE ((((((0.6853048395302824)|(NULL))))>=((((0.5453476191687832)&(NULL))))));SELECT (+ (((rt0.c1)GLOB(rt0.c2)))) FROM vt0 LIMIT 1280706585;SELECT ALL rt0.c2 FROM vt0;SELECT ALL (~ (x'1056')) FROM vt0, rt0 WHERE (((TYPEOF(NULL))OR(LOWER(NULL)))) GROUP BY vt0.c0; -- 0ms;
SELECT (- (((vt0.c0) IS TRUE))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT TYPEOF(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))), 'H!', ((((((((((vt0.c0) NOT BETWEEN (NULL) AND (NULL)))OR(x'')))OR((rt0.c0 IN ()))))AND(((rt0.c0)IS NOT(rt0.c2)))))OR(NULL COLLATE NOCASE)), CASE WHEN rt0.c1 THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE LENGTH(rt0.c1) END, vt0.c0 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c0))!=('gbU[膃a2' COLLATE RTRIM)) FROM vt0;SELECT DISTINCT NULL FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((NULL)OR(NULL)))OR(rt0.c1))) IS FALSE), TOTAL((~ (rt0.c1))), ((rt0.c1 IN ()) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT 0.3019024787304674, PERCENT_RANK() OVER (), (((rt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((rt0.c2)&(vt0.c0))))) FROM rt0;SELECT DISTINCT rt0.c2 FROM vt0 WHERE ((((-347489469, x'a6fb0c63', NULL)) NOT BETWEEN ((x'', (('1855824374')%(x'')), CASE WHEN 482057433 THEN '' END)) AND (((((x''))<((x''))), CASE WHEN x'dcc7c8f5' THEN NULL END, COALESCE('', 'IK|X[i c')))));SELECT ALL (CAST(vt0.c0 AS INTEGER) IN (((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(NULL)))) FROM rt0, vt0; -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))<>((vt0.c0 IN ()))), (((rt0.c0)) NOT BETWEEN ((x'e685cc2a')) AND (((~ (vt0.c0))))), CASE WHEN (rt0.c1 IN (rt0.c0)) THEN (+ (rt0.c2)) END FROM vt0, rt0 WHERE (CAST('Y8*MHd+?' COLLATE RTRIM AS BLOB)); -- 0ms;
SELECT COUNT(*) OVER () FROM vt0 WHERE (INSTR(x'' COLLATE NOCASE, (('')>=('')))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2)>(rt0.c0)))OR(vt0.c0)))AND(((rt0.c2) NOTNULL))))OR(ABS(rt0.c1))))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) FROM rt0, vt0 WHERE (((IFNULL(0.9163913859606128, '0c'))OR((((('\n')OR('-1603787091')))AND('-888373169'))))); -- 1ms;
SELECT ((rt0.c2)IS(((rt0.c1)-(rt0.c2)))) FROM rt0 WHERE (((NULL COLLATE BINARY) ISNULL)); -- 0ms;
SELECT LAST_VALUE((+ (TYPEOF(DISTINCT rt0.c2)))) OVER () FROM vt0, rt0 WHERE (((CASE x''  WHEN '-254564243' THEN NULL ELSE -1.086636781E9 END) BETWEEN (0.2844630910479904) AND ((+ (NULL))))); -- 0ms;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0; -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c0))OR(((rt0.c1) ISNULL))), COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING), (((((vt0.c0))<((rt0.c1))))>(0.32603048642595844)), CASE WHEN ((rt0.c2)+(rt0.c2)) THEN rt0.c0 END, '729788188' FROM rt0;SELECT DISTINCT -1196531560 FROM vt0, rt0; -- 0ms;
SELECT ALL (((+ (rt0.c2))) IS FALSE) FROM rt0, vt0 WHERE (LIKELIHOOD(((x'9ef5') NOTNULL), 0.10443508399170387)) ORDER BY ((CAST(vt0.c0 AS BLOB))>(vt0.c0 COLLATE NOCASE)) ASC, JULIANDAY((((rt0.c2, rt0.c0, rt0.c1, x'', vt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1, 1435159120, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c2))), (~ (vt0.c0)), (('') BETWEEN ('') AND (rt0.c1)), (~ (x'')), CAST(rt0.c1 AS INTEGER)) DESC; -- 0ms;
SELECT ALL CASE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN AVG(rt0.c1) THEN ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) WHEN SUM(vt0.c0) THEN ((rt0.c0)OR(rt0.c2)) END, ((vt0.c0) ISNULL), CAST(((rt0.c1)||(rt0.c2)) AS REAL) FROM rt0;SELECT DISTINCT (+ ((((rt0.c1, rt0.c2, rt0.c2, x'', rt0.c2))<=((NULL, rt0.c2, rt0.c1, x'a38c', rt0.c0))))) FROM vt0, rt0 GROUP BY 'IK|X[i c' HAVING ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)>=(((rt0.c2)-(rt0.c1)))); -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS NUMERIC))<>(rt0.c2)) FROM rt0 WHERE ((((((((((0.4945566918379548 IN ()))AND((~ ('m')))))AND('#DA隵Fn')))OR((NULL IN (0x29e981c7)))))AND('!Ouf{'))) GROUP BY CASE WHEN (rt0.c1 IN (rt0.c0)) THEN CASE rt0.c0  WHEN 0.3155294925023935 THEN vt0.c0 END ELSE '1407922094' COLLATE RTRIM END HAVING ((rt0.c0)|(rt0.c0)) COLLATE RTRIM;SELECT ALL CASE WHEN AVG(rt0.c1) THEN ((x'')+('R6~qAar')) WHEN (rt0.c0 IN (vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((rt0.c1)<<(rt0.c1)) THEN NULL ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((((rt0.c0)LIKE(rt0.c2)))) AND ((((rt0.c0) NOTNULL)))), 7.29788188E8, CASE WHEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END THEN rt0.c0 COLLATE RTRIM WHEN (rt0.c2 IN ()) THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN (rt0.c2 IN (vt0.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)) END FROM rt0, vt0 WHERE (x''); -- 1ms;
SELECT 0x491acfa FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2))>((vt0.c0))) IN (UNLIKELY(DISTINCT vt0.c0))) FROM vt0, rt0 WHERE ((CASE NULL  WHEN 'u&礜yBEq' THEN 0.386861614240946 WHEN '-2072929145' THEN x'' WHEN x'' THEN 0.3200020298258893 ELSE 'k|*wTVd' END IN ((0x17ea5419 IN ())))); -- 0ms;
SELECT ALL ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE BINARY, LAG((- (((x'')%(rt0.c0)))), json_extract(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), ((rt0.c1)-(rt0.c1))), ((((x'') ISNULL)) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))AND('%I6FL'))) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))) OVER (), PERCENT_RANK() OVER () FROM rt0;SELECT DISTINCT ((AVG(rt0.c1)) NOT NULL), LOWER((rt0.c0 IN ())), x'' FROM rt0 WHERE (UPPER(DISTINCT '0.4663721055407758') COLLATE NOCASE); -- 0ms;
SELECT ALL '2036463058' FROM rt0, vt0 WHERE (((((x'') NOTNULL)) NOT BETWEEN (((0X34b2a03) BETWEEN (x'b563') AND (NULL))) AND ((((NULL)) NOT BETWEEN (('%')) AND ((0xffffffffaae168f1)))))); -- 1ms;
SELECT DISTINCT CAST(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC), CAST(((rt0.c0)&(vt0.c0)) AS TEXT), ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(((rt0.c0)>(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE (((NULL) NOT NULL));SELECT CASE ((rt0.c1)IS(rt0.c0))  WHEN TRIM(rt0.c0) THEN (((vt0.c0))!=((rt0.c2))) END FROM rt0;SELECT DISTINCT '', (~ ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))), UPPER(rt0.c2) COLLATE NOCASE, (+ (TYPEOF(DISTINCT rt0.c0))), (((NULL, rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()), CAST(rt0.c2 AS INTEGER), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER), CAST(0.9989315389140554 AS INTEGER), ((rt0.c1)AND(vt0.c0))))) FROM vt0, rt0 WHERE ((((('1s놄tX?s')>>(0.19780537608283988))) BETWEEN (((0.775528735519619)!=(5.25809771E8))) AND ((((((((('5<')OR(NULL)))AND(NULL)))AND(NULL)))OR(NULL))))); -- 0ms;
SELECT ALL (((((vt0.c0) NOTNULL), ((rt0.c2)GLOB(0.6492347078106027)), (vt0.c0 IN ())))<>((((vt0.c0) BETWEEN (x'') AND (rt0.c2)), vt0.c0 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))) FROM vt0;SELECT ALL COUNT(*) FROM rt0 GROUP BY ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))+(((vt0.c0)>>(rt0.c0))));SELECT NULL, CAST(((rt0.c1)>>(rt0.c1)) AS REAL), LAG((rt0.c0 COLLATE NOCASE IN ()), '608328574', (- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) OVER () FROM rt0 WHERE (((NULL)|(-8.3653667E8)) COLLATE NOCASE); -- 0ms;
SELECT ALL CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)) THEN ((rt0.c2) ISNULL) END FROM vt0;SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (x'') AND (TRIM(rt0.c1, rt0.c0))) FROM rt0 WHERE (((+ ('>5zfG~3W')) IN (0.03998546145267834))); -- 0ms;
SELECT ALL CAST(UNICODE(rt0.c1) AS NUMERIC), CASE WHEN rt0.c2 THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN (rt0.c1 IN ()) THEN x'62fe' WHEN rt0.c2 THEN TRIM(DISTINCT rt0.c1) ELSE (~ (rt0.c0)) END, 0xfffffffff60891b1 FROM vt0, rt0 WHERE (((((0.9361362756062598)LIKE('0.6868703360675239'))) IS FALSE)); -- 1ms;
SELECT DISTINCT (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN ((~ (vt0.c0))) AND (x'ef23bd04')) FROM vt0 WHERE (HEX(((x'') BETWEEN (x'') AND (0.18945546313025485))));SELECT ((rt0.c1 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c2 THEN -1.633286988E9 END) AND (TOTAL(rt0.c0))) FROM rt0, vt0 WHERE (x'') ORDER BY 0xffffffff851a10e9 DESC LIMIT -2037982799 OFFSET -1711449324; -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED((rt0.c2 IN ())), ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('')))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))))OR(CAST(rt0.c2 AS REAL))), GROUP_CONCAT(((rt0.c0)-(rt0.c2))) FROM vt0, rt0 WHERE (((((('౗RI悼PnQ{㡓', '-976016422', ''))<=((x'', -1305055715, 'G8')))) BETWEEN ((((''))>((x'')))) AND (('' IN ())))); -- 0ms;
SELECT ALL ((((vt0.c0)>=(rt0.c2)))GLOB((~ ('')))) FROM rt0, vt0 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)>(rt0.c0)))||(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))), LOWER(((x'')!=(rt0.c2))), CAST(vt0.c0 COLLATE RTRIM AS TEXT) FROM rt0 WHERE (((((((((0.3485130055997667)OR('-1954938322')))AND('⦯ጽQei0GR2')))OR('-2047635984')))AND(-1018322727)) COLLATE RTRIM);SELECT DISTINCT ((COUNT(rt0.c2))<(((rt0.c0)*(rt0.c1)))) FROM vt0 GROUP BY CAST((((rt0.c1, vt0.c0, rt0.c2))<=((rt0.c1, rt0.c2, rt0.c1))) AS INTEGER), '-543631307', vt0.c0;SELECT ALL ((((((rt0.c2)>(rt0.c2)))OR(COUNT(vt0.c0))))OR(CAST(vt0.c0 AS REAL))), ((((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, 0X50db1877)) AND ((vt0.c0, vt0.c0, rt0.c0)))))<>((0.022647711019929684))), CASE (~ (rt0.c1))  WHEN ((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) THEN (+ (rt0.c0)) WHEN rt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN ()) THEN SUBSTR(vt0.c0, rt0.c2) ELSE '5' END FROM vt0 GROUP BY COALESCE(DISTINCT CAST(rt0.c2 AS REAL), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN x'3249' THEN rt0.c1 END), (- (vt0.c0)), TYPEOF(DISTINCT SQLITE_COMPILEOPTION_GET(rt0.c0)) HAVING (((('')IS NOT(rt0.c1))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN vt0.c0 END));SELECT DISTINCT (((NOT (rt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c0 END) AND (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) FROM vt0;SELECT ALL NTILE(((((((0.7890688264197049) BETWEEN (rt0.c1) AND (rt0.c0)))OR((rt0.c2 IN ()))))OR(((rt0.c1) BETWEEN (NULL) AND (rt0.c2))))) OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL (((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c0, rt0.c2))))LIKE(load_extension(rt0.c2, rt0.c2))) FROM vt0;SELECT TYPEOF(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2))) FROM rt0 WHERE ((((('') NOT BETWEEN (NULL) AND ('\n)')))LIKE(((0.7890688264197049)*(x''))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))))AND(((((rt0.c1)OR(0.06172884793263811)))OR(vt0.c0)))) FROM rt0;SELECT ((CASE rt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c2 END)LIKE((+ (vt0.c0)))) FROM rt0, vt0 WHERE (IFNULL((('-732043252')!=(0x2cf43a48)), NULL)); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END, ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2)))) AND (((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))), ((((rt0.c0 COLLATE BINARY)OR(((rt0.c1) NOT NULL))))AND(SQLITE_SOURCE_ID())), rt0.c0, (vt0.c0 COLLATE BINARY IN ()), (((vt0.c0 COLLATE NOCASE))>((((rt0.c0)=(rt0.c0))))), ((((rt0.c0)&(rt0.c2))) ISNULL) FROM vt0 WHERE (COALESCE(CAST('842966542' AS INTEGER), ((x'') NOTNULL))) ORDER BY ((((((rt0.c0)AND(x'')))AND(rt0.c0)))>(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(rt0.c0))));SELECT (~ (((rt0.c1) IS TRUE))) FROM vt0, rt0 WHERE (NULL) GROUP BY ((((rt0.c0)GLOB(rt0.c0))) NOT NULL); -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN (('-836536670')) AND (((NOT (rt0.c1))))) FROM vt0 WHERE (((CAST(NULL AS REAL))>(LOWER(DISTINCT 1855824374))));SELECT DISTINCT (((TYPEOF(rt0.c1)))>(((~ (rt0.c1))))), CASE COUNT(*)  WHEN SUM(rt0.c2) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) WHEN TOTAL(vt0.c0) THEN CAST(rt0.c2 AS REAL) WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE CASE WHEN vt0.c0 THEN NULL ELSE 1.636399273E9 END END, CASE WHEN NULL THEN ((NULL) BETWEEN (rt0.c2) AND (vt0.c0)) ELSE rt0.c0 END, ((rt0.c1 COLLATE NOCASE)/(((rt0.c1)%(rt0.c0)))), CUME_DIST() OVER () FROM vt0 WHERE (((((((NULL)*('')))AND((('920257174')-(NULL)))))OR((((NULL))<>((1004040871))))));SELECT ALL ((((((((rt0.c1 COLLATE RTRIM)AND(LIKELY(NULL))))OR(rt0.c1)))AND((rt0.c0 IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)), NULL, (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c2) IS FALSE), CAST(rt0.c2 AS TEXT), ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND('-162655369')))AND(vt0.c0)))AND(vt0.c0)))) AND (((+ (rt0.c2)), ((rt0.c2)!=(rt0.c1)), COUNT(*)))) FROM rt0, vt0 WHERE ((((0x5d185bb5, 0.9388778267442408, 'kA')) NOT BETWEEN ((x'', 0.3748443623383131, -897323401)) AND ((x'', -1.91939281E9, NULL))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT vt0.c0, CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC), ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR(rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) FROM vt0;SELECT ALL (((rt0.c1 IN (vt0.c0, rt0.c1))) NOT NULL), '왝+', (CAST(vt0.c0 AS REAL) IN ()) FROM vt0 WHERE (((((x'') NOTNULL)) IS FALSE));SELECT DISTINCT CAST((~ (rt0.c1)) AS BLOB) FROM vt0, rt0 WHERE (((CAST(0.38878588179216245 AS INTEGER)) NOT BETWEEN (CAST(NULL AS REAL)) AND (NULL COLLATE NOCASE))) LIMIT -2024885544; -- 0ms;
SELECT DISTINCT ((((CASE WHEN vt0.c0 THEN rt0.c1 WHEN x'9ad5' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)AND(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(COUNT(*))) FROM vt0 ORDER BY ((((((rt0.c0)<=(rt0.c1)))AND(vt0.c0)))AND(IFNULL(DISTINCT rt0.c1, rt0.c2)));SELECT ((((((((((((((rt0.c1)|(vt0.c0)))AND(NULL)))AND((- (vt0.c0)))))OR(CASE WHEN NULL THEN vt0.c0 ELSE rt0.c2 END)))OR((rt0.c0 IN (vt0.c0)))))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((7.03168967E8) NOT BETWEEN (rt0.c0) AND (vt0.c0)))), ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) IS TRUE), (((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) IN (((rt0.c1) NOT NULL))), ((rt0.c1 COLLATE RTRIM) IS TRUE), CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((x'') IS FALSE), '-476705705', ((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))) AND (((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))), x'', ((0.8067416974672876) IS FALSE)))), ((AVG(rt0.c1)) NOTNULL), (((((((vt0.c0, vt0.c0, NULL))<=((rt0.c0, rt0.c0, rt0.c2))))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) NOT NULL))) FROM rt0, vt0 WHERE ((('x') IS FALSE) COLLATE BINARY); -- 0ms;
SELECT CASE json_array_length(rt0.c0)  WHEN COUNT(rt0.c2) THEN (vt0.c0 IN ()) WHEN CASE '-1452988918'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN (rt0.c2 IN ()) WHEN GROUP_CONCAT(rt0.c1) THEN CAST(rt0.c0 AS TEXT) ELSE CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END END, CASE WHEN UNICODE('Y&)-') THEN rt0.c1 COLLATE NOCASE END, (rt0.c1 IN ()) COLLATE RTRIM FROM rt0, vt0 WHERE (LOWER(((NULL)GLOB('0.5698259820806486')))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT CAST(rt0.c2 AS INTEGER), 0.9583258279971003) FROM vt0, rt0 GROUP BY (((rt0.c2 COLLATE BINARY, rt0.c1 COLLATE NOCASE, ((rt0.c1)IS(NULL)), (vt0.c0 IN ('-1237296297')), ((rt0.c0)+(rt0.c2))))<=((COALESCE('?0k!', x'90cb'), ((((rt0.c2)AND(0.4624764647313637)))OR(rt0.c2)), (vt0.c0 IN ()), CAST(rt0.c0 AS REAL), ((rt0.c1) IS TRUE)))) HAVING CAST(((0.19780537608283988)*(x'')) AS INTEGER); -- 0ms;
SELECT DISTINCT CASE CAST(0X26aedf09 AS BLOB)  WHEN rt0.c1 THEN ((vt0.c0) NOT NULL) END FROM vt0;SELECT DISTINCT NTH_VALUE(0X1392c414, json_extract(((vt0.c0)<<(rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c0)&(rt0.c2)), rt0.c1, CAST(x'' AS INTEGER), ((rt0.c0) NOT NULL))) OVER (), '', ((- (rt0.c1)) IN ()) FROM rt0, vt0 WHERE (((CAST('-943205257' AS TEXT))<(((NULL) IS TRUE)))); -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS INTEGER))/(((rt0.c0)<('}{So')))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)/(vt0.c0)) IN (((rt0.c0)<(vt0.c0)))) FROM rt0 WHERE ((((NULL IN ())) BETWEEN (((0.3241767734874518) IS FALSE)) AND ('1253632761'))) GROUP BY (((rt0.c1)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND (((- (x''))))), COALESCE(DISTINCT x'', ((rt0.c2) IS FALSE), 2.036463058E9, rt0.c2 COLLATE BINARY, (((rt0.c0))>((rt0.c0))), CHANGES()), ((((((((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)OR(((((((((rt0.c2)AND(rt0.c0)))AND(-753999774)))AND(vt0.c0)))OR(rt0.c1)))))AND(((vt0.c0)>>(vt0.c0)))))OR(((rt0.c0) NOTNULL))))OR(((rt0.c2)%(rt0.c0)))) HAVING (((('>곊f')>>(rt0.c1)))>>((rt0.c0 IN ())));SELECT DISTINCT SUM(CAST(rt0.c0 AS TEXT)) OVER (), ((GROUP_CONCAT(rt0.c0))>>((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))), CASE (vt0.c0 IN ())  WHEN rt0.c1 COLLATE NOCASE THEN 0.3485130055997667 END FROM vt0 WHERE (CASE WHEN ((0.5717764657259969) NOT BETWEEN (0.9329903194741455) AND (NULL)) THEN 0.20134318496645975 ELSE 1738792780 COLLATE BINARY END) ORDER BY ((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(1356535927)))-(rt0.c1)), ((rt0.c1) BETWEEN ((vt0.c0 IN ())) AND (TOTAL_CHANGES()))  NULLS FIRST, ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(('' IN ())))  NULLS LAST;SELECT DISTINCT LAST_VALUE(NULLIF(DISTINCT ((vt0.c0)OR(vt0.c0)), CASE vt0.c0  WHEN x'0241' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.0 END)) OVER (), (((('ᰤ㯠')GLOB(rt0.c0))) NOTNULL), rt0.c0 FROM vt0 WHERE ((((((x'', x'b023', 'QSM)'))>((x'31f6', -1.988775927E9, NULL)))) NOT NULL));SELECT DISTINCT (((((((rt0.c2))!=((rt0.c2))))AND(((x'') IS TRUE))))AND(((rt0.c2)LIKE(rt0.c1)))) FROM vt0, rt0 WHERE ((((('-8] (]%J+')||(NULL))) BETWEEN (CAST(x'' AS NUMERIC)) AND (((x'')IS(NULL))))); -- 0ms;
SELECT ALL (- (CAST(rt0.c1 AS TEXT))) FROM rt0, vt0 WHERE (((CASE NULL  WHEN 0.4858162243088473 THEN NULL END)+(((0.031669804429551696)=(NULL))))) ORDER BY ((x'') IS TRUE) ASC; -- 0ms;
SELECT DISTINCT DATETIME(NULL, ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)), (- (rt0.c0))), TYPEOF(rt0.c2) COLLATE BINARY, ((rt0.c1) ISNULL) FROM vt0, rt0 ORDER BY ((rt0.c1) BETWEEN (((rt0.c2)<=(rt0.c0))) AND (((rt0.c0) NOTNULL))) DESC  NULLS FIRST; -- 0ms;
SELECT IFNULL(DISTINCT '#qUh5Kk', TRIM(0xffffffffb9025026)) FROM rt0, vt0 WHERE (0.09197531007489512); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((rt0.c0)AND(NULL)))OR(vt0.c0))) FROM vt0, rt0 GROUP BY LIKE((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((0.44533804043062863))), ''); -- 0ms;
SELECT DISTINCT '' FROM vt0, rt0; -- 1ms;
SELECT DISTINCT IFNULL(DISTINCT (('')!=(vt0.c0)), (- (rt0.c0))) FROM rt0 GROUP BY ((CASE rt0.c1  WHEN rt0.c0 THEN 0.3200020298258893 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END) BETWEEN (((rt0.c1)||(vt0.c0))) AND (((rt0.c1)%(vt0.c0)))), CAST(((rt0.c1) NOT NULL) AS TEXT), 0.43168945952133075, CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL), ((((rt0.c2 COLLATE NOCASE)AND((+ (rt0.c1)))))OR(NULL)) LIMIT 1516500372 OFFSET -1722026819;SELECT DISTINCT ((CASE WHEN vt0.c0 THEN rt0.c0 END) NOT NULL) FROM rt0, vt0 WHERE ((('1230775109')AND(((((NULL)AND(0x28d0fc80)))OR(''))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(ABS(DISTINCT vt0.c0)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS INTEGER) IN ()), rt0.c0, (((((NOT (rt0.c1)))AND(0.32603048642595844)))OR(((rt0.c2)&(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT SUM((((rt0.c1))==((vt0.c0)))), vt0.c0, (+ (((vt0.c0) NOTNULL))), (((((x''))>((rt0.c0))))<<(((rt0.c1) IS TRUE))), (+ (rt0.c1 COLLATE NOCASE)) FROM vt0, rt0 WHERE (((((NULL) IS TRUE))==(((NULL) NOTNULL)))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END)<=(LIKELY(DISTINCT rt0.c2))) ASC; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.34400181841729016))) NOT BETWEEN (vt0.c0) AND (CAST(rt0.c2 AS INTEGER))) FROM rt0;SELECT DISTINCT SUM((+ (rt0.c1))) FILTER(WHERE x'') OVER ( ORDER BY 0.41275732992924885 DESC  NULLS LAST) FROM rt0, vt0; -- 0ms;
SELECT ALL COUNT(CASE WHEN rt0.c2 THEN rt0.c0 END) OVER () FROM vt0;SELECT ALL (((vt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c2)AND('-2135803826')), ((rt0.c1)LIKE(rt0.c1)), rt0.c0)) AND (((rt0.c2 IN ()), ((rt0.c0)<(vt0.c0)), json_type(vt0.c0)))) FROM rt0 ORDER BY (NOT (CAST(0.33384356383151514 AS BLOB))) ASC, CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)) AS INTEGER) ASC;SELECT DISTINCT '', GROUP_CONCAT((('!')>>('7Kᜱ녀['))), ROW_NUMBER() OVER (), 'jWypm)', (~ ('h^')) FROM rt0 WHERE ((~ (TRIM(DISTINCT 'RRj|')))) GROUP BY (((rt0.c2, '晦c', vt0.c0)) BETWEEN (((+ (rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END, ((rt0.c1) IS TRUE))) AND ((TRIM(rt0.c2), ((rt0.c1) NOT NULL), ((rt0.c0)%(rt0.c1)))));SELECT DISTINCT CASE ((rt0.c2) BETWEEN ('-1196531560') AND (rt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN TOTAL(rt0.c1) END FROM vt0;SELECT rt0.c0, ((NULL)GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))), (+ (-7.92491161E8 COLLATE BINARY)), ((CAST(vt0.c0 AS REAL)) BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c1 AS INTEGER))), (+ (CAST('' AS REAL))) FROM rt0, vt0 WHERE ((((x'' IN (0.5106665479685103)))>>(TYPEOF(0Xffffffffbf3b3d13)))) LIMIT 984062326; -- 0ms;
SELECT DISTINCT -0.0 FROM rt0, vt0 WHERE (LIKELY(DISTINCT ((NULL)==(x'')))); -- 0ms;
SELECT DISTINCT CASE ((rt0.c0) IS TRUE)  WHEN ((rt0.c0) ISNULL) THEN ((rt0.c0)LIKE(rt0.c1)) WHEN (rt0.c0 IN ()) THEN GROUP_CONCAT(vt0.c0) WHEN ((rt0.c2)IS(rt0.c0)) THEN 0.11544304232565439 END FROM rt0 WHERE ((((('-201489247')/(NULL)))<<(((0.3535736711325711)>>(x'')))));SELECT NULLIF(DISTINCT CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 END, ((rt0.c2)>>(rt0.c2))) FROM rt0 WHERE ((('-1711449324' COLLATE BINARY) NOT BETWEEN (CASE WHEN 1.7976931348623157E308 THEN NULL ELSE NULL END) AND (((x'')!=(''))))) GROUP BY (CASE '(N+㾻!+'  WHEN 0.3408498393279865 THEN 0.8946145586329621 ELSE x'5855' END IN ()) HAVING (~ (CASE WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) ORDER BY (NOT (rt0.c0)) COLLATE RTRIM DESC, ((vt0.c0) NOTNULL) COLLATE NOCASE;SELECT ALL CAST(rt0.c2 COLLATE NOCASE AS BLOB), rt0.c2, LAST_INSERT_ROWID() FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)/(rt0.c1))) BETWEEN ((~ (vt0.c0))) AND ((~ (rt0.c0)))) GROUP BY (((rt0.c1 IN ())) NOT BETWEEN (x'd604') AND ((vt0.c0 IN ()))); -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS NUMERIC), ((DATE(rt0.c2, vt0.c0, vt0.c0))=(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))), LEAD(((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)OR(CAST(vt0.c0 AS REAL))))AND(NULLIF('', vt0.c0))))AND(((vt0.c0)||(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (0.7902798341073978 COLLATE BINARY IN (vt0.c0 COLLATE BINARY)), ((((vt0.c0)&(vt0.c0))) NOTNULL)) OVER (), ((highlight(rt0.c1, vt0.c0, vt0.c0, rt0.c0))/(rt0.c1)), (x'' IN (CAST(rt0.c1 AS NUMERIC))) FROM vt0;SELECT ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL)) COLLATE BINARY FROM vt0 WHERE (((((((((((1404730463)AND(2054977300)))OR(NULL)))OR(-1.19836412E9)))AND(0.9989315389140554))) NOT BETWEEN (CAST(0.759576664523494 AS INTEGER)) AND ((- (NULL)))));SELECT ((((((rt0.c0)AND(vt0.c0)))OR(vt0.c0)))>(0.7861870778009097)) FROM vt0, rt0 ORDER BY ((COALESCE(DISTINCT vt0.c0, rt0.c2, rt0.c2, rt0.c1)) NOT NULL), CAST(rt0.c0 AS TEXT) ASC; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT 0.05839190148262363, CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC), ((0X628c4041 IN ()) IN (CASE WHEN rt0.c1 THEN rt0.c1 END, ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))) FROM rt0 WHERE (CAST(CASE WHEN '''' THEN '' ELSE NULL END AS NUMERIC)) LIMIT -835764909 OFFSET 1247169381;SELECT ALL (((vt0.c0)) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND (((((vt0.c0))==((rt0.c2)))))) FROM vt0 WHERE (((((x'') NOT NULL)) ISNULL));SELECT GROUP_CONCAT('mҴ-qt[≅BY') OVER () FROM rt0, vt0 WHERE (((x'') BETWEEN (CASE NULL  WHEN x'1dde' THEN '-722948790' END) AND ('fU4M^2JA'))); -- 0ms;
SELECT DISTINCT (AVG(vt0.c0) IN (UPPER(rt0.c1))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt0 WHERE ((NOT ('978887625' COLLATE NOCASE))); -- 1ms;
SELECT (((rt0.c2)>=(vt0.c0)) IN ((((rt0.c2, vt0.c0, rt0.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, NULL, vt0.c0, rt0.c0)) AND ((vt0.c0, 0x1, rt0.c1, rt0.c1, 0.7978349140176835))), CAST(rt0.c1 AS BLOB))), GROUP_CONCAT(((rt0.c1)<=(1988496503))) OVER (), CUME_DIST() OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY FROM vt0 WHERE ((NOT (((((((((x'')OR('-2123690690')))AND(x'')))AND(NULL)))AND('2098221963'))))) ORDER BY (('') NOTNULL)  NULLS FIRST, CAST(((vt0.c0) NOT NULL) AS INTEGER)  NULLS LAST, '-1603787091' ASC;SELECT COALESCE(DISTINCT CAST(rt0.c2 AS TEXT), (((vt0.c0, rt0.c0, rt0.c2))>((1.7976931348623157E308, vt0.c0, rt0.c0)))), NTILE(UPPER(DISTINCT (vt0.c0 IN ()))) OVER ( ROWS BETWEEN (NOT ('-1307987565')) PRECEDING AND  CURRENT ROW EXCLUDE TIES), GROUP_CONCAT(CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 END) FILTER(WHERE 0x4da5a812) OVER (), DATETIME(((rt0.c1)LIKE(0.07029246525384703)), ((rt0.c1) NOTNULL), (+ (rt0.c0)), (rt0.c0 IN (rt0.c0)), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), CAST(((rt0.c2)>=(rt0.c2)) AS BLOB) FROM vt0;SELECT DISTINCT (((((- (rt0.c0)))AND(((rt0.c2)-('1514641077')))))AND((NOT ('祓')))) FROM vt0, rt0 GROUP BY TYPEOF((((rt0.c0, rt0.c1, rt0.c1))=((rt0.c0, rt0.c1, rt0.c1)))) HAVING CAST(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END AS REAL); -- 0ms;
SELECT DISTINCT (((rt0.c1))>=((TOTAL_CHANGES()))), NULL, (NOT (CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), ((rt0.c2 COLLATE BINARY)>(MIN(rt0.c0))), CAST(-2072929145 AS REAL) COLLATE BINARY FROM vt0, rt0 WHERE ((+ ('579202262'))); -- 0ms;
SELECT DISTINCT ((((NULL) NOT BETWEEN (rt0.c1) AND (vt0.c0))) IS FALSE), ((370795031)*(((rt0.c0)<=(rt0.c0)))), NULL FROM vt0 WHERE (CASE 2.73022995E8 COLLATE BINARY  WHEN (((x'')) BETWEEN ((0Xffffffffd900f82f)) AND ((0.7470786917572376))) THEN 0.4089219059728405 COLLATE NOCASE END);SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)IS NOT(TRIM(rt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT ((rt0.c1) ISNULL) COLLATE RTRIM FROM rt0, vt0 WHERE ((((- (0X775b52ad))) NOT NULL)); -- 0ms;
SELECT PERCENT_RANK() OVER ( ROWS BETWEEN (NOT (vt0.c0 COLLATE BINARY)) PRECEDING AND json_type((rt0.c0 IN ())) FOLLOWING EXCLUDE NO OTHERS) FROM vt0, rt0 WHERE ((((~ (x''))) NOT BETWEEN (CHANGES()) AND (x'' COLLATE NOCASE))); -- 0ms;
SELECT CASE WHEN ((0.5608301053721881) IS FALSE) THEN COUNT(*) END, SUM(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))), (((((((x'28e4c256')OR(vt0.c0)))OR(rt0.c1))))>((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))))), vt0.c0, ((((rt0.c2)IS(rt0.c2)))>=(COUNT(rt0.c1))) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((((NOT (rt0.c2)), x'', ((vt0.c0)AND(rt0.c1)), GROUP_CONCAT(rt0.c0), ((rt0.c2) ISNULL)))==(((((rt0.c1))>((rt0.c2))), ((vt0.c0)<=(rt0.c2)), TRIM(DISTINCT rt0.c0), rt0.c0 COLLATE RTRIM, ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))), ((x'') BETWEEN ((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, vt0.c0)) AND ((rt0.c1, rt0.c0, vt0.c0)))) AND (((rt0.c1)/(rt0.c2)))), GROUP_CONCAT(((x'0ce7')IS NOT(rt0.c2))) FILTER(WHERE ((TRIM(DISTINCT x'', vt0.c0))-((- (rt0.c0))))) OVER (), (CASE WHEN vt0.c0 THEN rt0.c0 END IN ()), ((LIKELIHOOD(vt0.c0, 0.7323364851309254)) IS TRUE) FROM rt0, vt0 WHERE ((((highlight('', -300541469, -2100164216, '541206154')))==((LTRIM(NULL))))); -- 0ms;
SELECT DISTINCT ((((((((((NULL)-(rt0.c2)))AND(MAX(rt0.c2))))OR((rt0.c0 IN ()))))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))))AND((((rt0.c0, rt0.c0, rt0.c2))>((vt0.c0, rt0.c2, rt0.c0))))), COUNT(*), ((COALESCE(DISTINCT rt0.c1, vt0.c0, rt0.c2, vt0.c0))GLOB(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c0)))) FROM rt0 LIMIT -1721205205 OFFSET -948593932;SELECT CAST(rt0.c2 AS REAL) COLLATE NOCASE FROM vt0, rt0 ORDER BY rt0.c0 ASC; -- 0ms;
SELECT DISTINCT SUBSTR(((rt0.c0)IS(rt0.c0)), ((-1964516306) NOT BETWEEN (rt0.c1) AND (vt0.c0))), (((((0.45107341104436605, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1)))) NOTNULL), CAST(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END AS REAL) FROM vt0, rt0 WHERE ((((~ ('')))<((((0.23876978785704162))<=((x'')))))); -- 1ms;
SELECT ALL ((((rt0.c0)>>(rt0.c0))) IS FALSE) FROM vt0, rt0 GROUP BY CASE TYPEOF(rt0.c0)  WHEN (rt0.c1 IN (rt0.c1)) THEN (NOT (rt0.c1)) END HAVING rt0.c1; -- 0ms;
SELECT DISTINCT (~ (CASE WHEN '-1964516306' THEN rt0.c1 END)) FROM rt0; -- 0ms;
SELECT (((0.08630978388595623 IN ())) NOT BETWEEN (rt0.c2) AND (MAX(rt0.c0))) FROM vt0 WHERE ((((((((0.5637072964383367))>=((x''))))AND((('-2078369745')/(NULL)))))AND((('')&(x'')))));SELECT DISTINCT (rt0.c1 IN (rt0.c2)) COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (+ (((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), (NOT (rt0.c0 COLLATE NOCASE)), ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (rt0.c2) AND (CAST(rt0.c0 AS BLOB))) FROM rt0; -- 0ms;
SELECT COUNT((vt0.c0 IN ())) FROM rt0, vt0 GROUP BY (+ (((((x'')OR(rt0.c1)))AND(vt0.c0)))); -- 0ms;
SELECT json_array_length(rt0.c0 COLLATE BINARY) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS TEXT) IN ()), rt0.c1, CASE WHEN ((rt0.c0) IS TRUE) THEN (+ ('H>?')) END FROM rt0, vt0 WHERE (((((NULL) NOTNULL))LIKE((((x'', -1.603787091E9, x'8b9a'))<>((x'', 1408381283, 0.16689399649033398)))))) GROUP BY CASE WHEN (+ (rt0.c2)) THEN (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, rt0.c1))) ELSE CAST(rt0.c2 AS BLOB) END, ((((((((((vt0.c0)OR(rt0.c2)))AND('1240048509')))OR('R6~qAar')))OR(vt0.c0)))-(((rt0.c1) IS FALSE))), rt0.c2; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 COLLATE NOCASE THEN (~ (rt0.c2)) ELSE ((rt0.c1)-(vt0.c0)) END FROM rt0 WHERE (((NULL) NOTNULL) COLLATE NOCASE);SELECT rt0.c2, (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) IN ()), load_extension(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) FROM vt0 WHERE ((- ('-721634254')) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((((rt0.c2) NOT NULL))AND(CHAR(rt0.c2))))AND(((rt0.c2)-(rt0.c0)))) DESC;SELECT DISTINCT ((rt0.c2)||('1285610161')) COLLATE BINARY FROM vt0 WHERE (((((('-456656694'))<>((0.3695571693426061))))>>(((x'')IS NOT(NULL)))));SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((((NULL IN ())) BETWEEN ((+ (6.23272672E8))) AND (NULL))); -- 0ms;
SELECT ALL (((((rt0.c2))==((rt0.c1)))) IS TRUE) FROM rt0 NOT INDEXED, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT AVG((- (rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) FROM vt0, rt0; -- 0ms;
SELECT (~ (vt0.c0)), ((rt0.c0 COLLATE BINARY)|(CASE WHEN rt0.c0 THEN rt0.c2 END)), CASE MAX(rt0.c2)  WHEN ((rt0.c0)<=(rt0.c1)) THEN (~ (vt0.c0)) END FROM rt0, vt0 WHERE (((((((0.4639997045112476)||(x'd55a')))AND('954242095')))OR(CAST(NULL AS BLOB)))) ORDER BY (((json_extract(rt0.c2, rt0.c1, 0.40464122912295397, rt0.c2), ((rt0.c2) ISNULL), ((rt0.c1)/('-1598757078'))))<((((rt0.c2)<=(rt0.c0)), ((vt0.c0) NOTNULL), (vt0.c0 IN ())))) LIMIT 1306372172 OFFSET -403730553; -- 0ms;
SELECT DISTINCT CASE (~ (rt0.c1))  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((vt0.c0)-(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c2)|(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN rt0.c2 END THEN vt0.c0 COLLATE BINARY END, (+ (COUNT(*))), ((((rt0.c2) IS TRUE)) IS TRUE) FROM vt0 WHERE (CASE WHEN -5.37868379E8 COLLATE NOCASE THEN x'' COLLATE BINARY WHEN ((0.4156030135268689) NOTNULL) THEN (('5EDF.1') ISNULL) WHEN CAST(0.9118247082605583 AS REAL) THEN (('') ISNULL) END);SELECT CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1)>>(vt0.c0)) END, CAST(RTRIM(rt0.c1) AS TEXT), rt0.c1 FROM vt0, rt0 WHERE ((NULL IN (((x'1470')GLOB(0.4624764647313637))))); -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.475265779099319)))))) FROM rt0, vt0 WHERE ((((~ (0.415416421554769))) NOT BETWEEN (((0Xffffffffbc9a6b33) BETWEEN (0.11027301073089779) AND (NULL))) AND (-2047635984 COLLATE BINARY))) LIMIT 260971061; -- 0ms;
SELECT DISTINCT 0.19780537608283988 FROM vt0, rt0 NOT INDEXED; -- 0ms;
SELECT MAX((((rt0.c0, rt0.c0, rt0.c0))<>((rt0.c2, rt0.c0, vt0.c0)))) FROM rt0 WHERE (TRIM(DISTINCT ((0.9090535788574748)<(x'')), CAST(0.9043364158194517 AS NUMERIC)));SELECT DISTINCT ((NULL COLLATE BINARY)>=(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) FROM vt0, rt0 ORDER BY CAST((rt0.c1 IN ()) AS TEXT) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((((((((((vt0.c0)AND(CAST(rt0.c1 AS INTEGER))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c2) ISNULL))))OR(((((rt0.c0)OR(rt0.c1)))OR(x'')))))OR((rt0.c2 IN ()))))AND(((rt0.c1)-(vt0.c0)))) FROM rt0;SELECT DISTINCT (- ((('')|(rt0.c1)))), NULL, NULL COLLATE RTRIM FROM vt0 LIMIT -153864946 OFFSET 936616332;SELECT TRIM(DISTINCT SUBSTR(rt0.c2, rt0.c0)) FROM rt0 WHERE (((((NULL) NOT BETWEEN ('-1018013546') AND (7.29788188E8))) BETWEEN (((1115276865)IS NOT(0xffffffff9d7968cf))) AND ((('0.19780537608283988') IS TRUE)))); -- 0ms;
SELECT NTH_VALUE(((rt0.c1) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))), ((NULL) ISNULL)) OVER () FROM rt0 WHERE ((((('-476705705') BETWEEN ('xI辇JMyR~i') AND ('1143528117'))) NOT NULL)) ORDER BY (((x'9807'))<=((CAST(vt0.c0 AS REAL)))) DESC;SELECT DISTINCT ((((rt0.c2)+(rt0.c0))) BETWEEN (((rt0.c0) ISNULL)) AND (CASE WHEN -81278849 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)) FROM vt0, rt0; -- 1ms;
SELECT ALL (((((vt0.c0)>(rt0.c2))))>=((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) FROM vt0 WHERE (load_extension(((((((((0.5577291904399073)AND(-2.89605537E8)))OR('\a')))OR(0.19870655153104066)))AND('0.8067416974672876'))));SELECT DISTINCT RANK() OVER ( PARTITION BY ((rt0.c2 IN ()) IN ()), (((('')<<(0.4304000707487309))) BETWEEN ((((rt0.c1))<=((vt0.c0)))) AND (vt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT CASE WHEN ((rt0.c0)>=(vt0.c0)) THEN AVG(rt0.c0) END, ((0.8088751959740876)%(((rt0.c1)IS NOT(vt0.c0)))), CAST(((NULL) NOT NULL) AS REAL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c1))|(rt0.c0 COLLATE NOCASE)) FROM vt0;SELECT DISTINCT MAX(rt0.c2) FROM vt0, rt0 WHERE (CASE CASE WHEN NULL THEN NULL WHEN 'v]tp<8拠-' THEN '-204405636' WHEN x'2bca' THEN NULL END  WHEN ((NULL) BETWEEN ('1075156329') AND (x'')) THEN ((('?*')) NOT BETWEEN ((x'')) AND ((NULL))) ELSE (((x''))>=((1804726941))) END); -- 0ms;
SELECT ALL CAST(rt0.c2 AS NUMERIC) FROM vt0, rt0 INTERSECT SELECT DISTINCT (~ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) FROM rt0, vt0 ORDER BY 0xffffffffc7c7d477;SELECT ALL vt0.c0 FROM vt0 WHERE (''); -- 1ms;
SELECT DISTINCT ((((rt0.c1)LIKE(rt0.c0)))AND((~ (rt0.c2)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c0))) FROM vt0 WHERE ((((((((((- ('-295500234')))OR(CAST(NULL AS TEXT))))OR(((('-948593932')) BETWEEN ((NULL)) AND ((x'42ea'))))))OR(UPPER(0.45031205906512073))))OR(-2.060005209E9 COLLATE NOCASE)));SELECT DISTINCT (vt0.c0 IN (vt0.c0)) COLLATE BINARY, ((((((0.32314070100734493)OR(vt0.c0)))AND(rt0.c0)))GLOB(NULL)), LAG(((((((vt0.c0)OR(vt0.c0)))AND(0.9312670957092639))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c0 AS REAL))), (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (NOT (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) OVER (), ((rt0.c2)>>(rt0.c2)) COLLATE RTRIM COLLATE NOCASE, rt0.c0 FROM vt0 WHERE ((((((((('684784768')AND(x'')))OR(0.5903779462714056)))OR('q')))OR(x'')) COLLATE NOCASE);SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((((rt0.c1))=((rt0.c1)))))), ((((rt0.c1)==(rt0.c2))) BETWEEN ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((0.18381189508602902)))) AND ((+ (NULL)))), (((SUM(vt0.c0)))>=((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) FROM vt0;SELECT DISTINCT (~ ((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c2))))), (((rt0.c1)) BETWEEN ((((rt0.c1) NOT NULL))) AND ((CAST(rt0.c1 AS BLOB)))), TOTAL_CHANGES() FROM vt0;SELECT DISTINCT ((((((((CAST(rt0.c0 AS NUMERIC))OR(((rt0.c2)AND('-2005055792')))))AND(rt0.c1)))AND(rt0.c1 COLLATE RTRIM)))OR(rt0.c1)), ((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))*(((rt0.c1) BETWEEN (vt0.c0) AND (NULL)))), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END) AND (((rt0.c1)<<(NULL)))) FROM rt0 LIMIT -217040300;SELECT CAST(rt0.c0 AS INTEGER), ((vt0.c0) IS TRUE), CASE WHEN TRIM(rt0.c0) THEN (- (rt0.c1)) END FROM vt0;SELECT DISTINCT COUNT(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END) OVER () FROM vt0;SELECT DISTINCT ((((rt0.c2)-('499293521'))) NOTNULL), vt0.c0, (- (CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 ELSE x'a9a0' END)) FROM vt0 ORDER BY ((((((rt0.c1) NOTNULL))AND(((rt0.c0)|(rt0.c1)))))AND(vt0.c0 COLLATE BINARY));SELECT DISTINCT GROUP_CONCAT(rt0.c1) FROM rt0 WHERE (((UNLIKELY(0.1969678138662706))<<('-1196531560'))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(vt0.c0)))AND((~ (vt0.c0)))) FROM rt0 WHERE ((NOT (UPPER(0x31329921)))) ORDER BY x''  NULLS FIRST LIMIT -412994141 OFFSET 1633276748;SELECT ((((((x'')AND(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c2) ISNULL)) AND ((~ (x'f660')))) FROM vt0, rt0 ORDER BY NULL; -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((0.5480130011785651, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0))) COLLATE BINARY FROM rt0 RIGHT OUTER JOIN vt0 ON COALESCE(DISTINCT rt0.c2, ((rt0.c2)LIKE(vt0.c0)), TRIM(DISTINCT rt0.c2), NULL COLLATE BINARY) WHERE (IFNULL(DISTINCT (('')<=(0.7956346073801769)), ((x'5835') NOT BETWEEN (x'e4f2') AND (0.3737321981760525)))); -- 0ms;
SELECT DISTINCT COUNT((((rt0.c1))==((rt0.c1)))) FROM vt0 ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) AS INTEGER) DESC  NULLS FIRST;SELECT DISTINCT (((((rt0.c0, rt0.c2, 1.503633926E9))<((vt0.c0, rt0.c1, rt0.c1)))) IS FALSE) FROM rt0, vt0 WHERE (((((((((x'')AND(x'')))OR(0.2366498699164581)))AND(x'')))AND(CAST(x'948f' AS NUMERIC)))) ORDER BY ((((rt0.c2)AND(((rt0.c0)>(rt0.c1)))))AND(TYPEOF(rt0.c1)))  NULLS FIRST; -- 0ms;
SELECT COUNT(LTRIM(vt0.c0, 0.0953040628446502)) FROM rt0 LIMIT 1657176874;SELECT (- (((vt0.c0)-(rt0.c0)))) FROM vt0, rt0; -- 1ms;
SELECT ALL json_array_length(((rt0.c0) IS FALSE), (rt0.c2 IN ())) FROM rt0 ORDER BY ((CAST(rt0.c1 AS TEXT)) IS TRUE) ASC  NULLS LAST, ((((('1395970387') IS FALSE), (vt0.c0 IN ()), ABS(DISTINCT rt0.c1)))=((((vt0.c0) NOTNULL), (vt0.c0 IN ()), ((vt0.c0)<(vt0.c0))))) ASC  NULLS LAST, ((((((((((vt0.c0)IS(rt0.c2)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))))AND((rt0.c0 IN ()))))AND('	*1U2◎')))OR(((rt0.c1)<(rt0.c0)))) ASC;SELECT CASE ((rt0.c2)&(rt0.c0))  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE vt0.c0 END WHEN (rt0.c0 IN (rt0.c0, rt0.c2)) THEN NULL WHEN ((rt0.c2)<=(rt0.c0)) THEN ((x'')&(rt0.c0)) END FROM rt0 WHERE (((((0.6523483230287749)!=('-815985003')))LIKE((('V[q{1VLd') BETWEEN (NULL) AND ('1607574973')))));SELECT ALL ((((rt0.c2 IN ()), ((rt0.c2)GLOB(rt0.c0)), CASE WHEN rt0.c2 THEN 'yHj!~_Y' ELSE '' END, CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (rt0.c0 IN ())))<>((((rt0.c1)>(rt0.c0)), x'', (NOT (vt0.c0)), x'0a02336b', ((vt0.c0) IS FALSE)))) FROM vt0, rt0 WHERE ((((1365596008)) NOT BETWEEN ((CAST('O\r' AS REAL))) AND (((((x'333348a4'))<>((x'e561'))))))); -- 0ms;
SELECT PRINTF(((rt0.c2)LIKE(vt0.c0))) FROM vt0;SELECT ALL 0.23034406355309345 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c1 AS BLOB))-((rt0.c2 IN ()))), rt0.c0, COUNT(*) OVER () FROM vt0 WHERE ((- (CAST(NULL AS TEXT))));SELECT ((CAST(rt0.c0 AS TEXT))<=(MAX(rt0.c2))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN ()) AS NUMERIC), UNLIKELY(((rt0.c1)|(vt0.c0))), (- (CAST(vt0.c0 AS BLOB))) FROM vt0, rt0 LIMIT -543631307; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) FROM vt0, rt0 WHERE (((((NULL) IS FALSE))IS((NOT (0.15669666367384594))))) GROUP BY (MIN(rt0.c0, vt0.c0) IN ()), (rt0.c0 COLLATE BINARY IN ()), CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS BLOB) HAVING CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS NUMERIC); -- 0ms;
SELECT DISTINCT ((rt0.c2) IS TRUE), (((rt0.c2)) BETWEEN ((((x'')%(rt0.c2)))) AND ((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN '^ ' THEN rt0.c2 ELSE rt0.c0 END))), (TOTAL(rt0.c0) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((~ (0.998887263178135)))&(rt0.c1 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c2 IN ()))<>(LENGTH(rt0.c2))) FROM vt0;SELECT DISTINCT 0.3332530784649428 FROM rt0, vt0 WHERE (((('0.3241767734874518' IN (0.4945566918379548))) NOTNULL)); -- 0ms;
SELECT (((vt0.c0))=((rt0.c0))) COLLATE NOCASE FROM rt0 WHERE ((+ ((+ (0.9333107574627589)))));SELECT ALL TOTAL(rt0.c0), vt0.c0, (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c0))))>(('-1235822027'))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt0 INNER JOIN rt0 ON vt0.c0 COLLATE RTRIM WHERE (CASE WHEN 0X14f5d134 COLLATE BINARY THEN ((-1.119129199E9) NOT BETWEEN (x'') AND (0.2505260510038574)) WHEN CASE WHEN '>곊f' THEN 0.5478093482369425 END THEN NULL COLLATE RTRIM WHEN ('0.9163913859606128' IN ()) THEN CAST(0.8562241544718739 AS TEXT) WHEN (((NULL))=((x''))) THEN ((-1986097531) IS TRUE) WHEN ((0.382466312235752)-('193791821')) THEN ((371495167) ISNULL) END) ORDER BY '{G'  NULLS LAST, CASE (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN (vt0.c0 IN ()) THEN (rt0.c1 IN ()) WHEN (- (6.84784768E8)) THEN ((rt0.c1) ISNULL) WHEN (- (rt0.c1)) THEN ((rt0.c1)||(x'')) ELSE ((rt0.c1) IS TRUE) END ASC; -- 1ms;
SELECT DISTINCT (+ (CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END)), CASE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))  WHEN ((rt0.c2)==(rt0.c0)) THEN GROUP_CONCAT(rt0.c0) WHEN (((525809771)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c2) NOTNULL) WHEN rt0.c2 THEN MAX(vt0.c0) ELSE ((vt0.c0) NOT NULL) END, TOTAL(CAST('[a?}G3K1' AS REAL)) FROM rt0, vt0 WHERE ((((x'98a1') IS TRUE) IN ())) ORDER BY rt0.c0 COLLATE NOCASE ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ('' IN ()), CASE ((rt0.c2)GLOB(vt0.c0))  WHEN (~ (rt0.c1)) THEN vt0.c0 ELSE ((vt0.c0) IS FALSE) END, NULLIF(DISTINCT CAST(vt0.c0 AS NUMERIC), rt0.c2 COLLATE BINARY) FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT CAST(vt0.c0 AS BLOB) FROM vt0 WHERE ((((((0.7518810065020177))==(('-903293756')))) NOTNULL)); -- 0ms;
SELECT CAST(rt0.c0 COLLATE BINARY AS NUMERIC) FROM rt0, vt0; -- 0ms;
SELECT ALL CASE rt0.c1 COLLATE BINARY  WHEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.91182437636577) END FROM rt0 WHERE ((((((('[]ej'))<=(('옕qQPdP!b')))))>=(((-1214612108 IN ()))))); -- 0ms;
SELECT ALL TRIM(DISTINCT ((x'')&(vt0.c0))) FROM rt0, vt0 WHERE ((((NULL)) NOT BETWEEN ((((0.1128362902085992) NOT BETWEEN ('0.9906034042014797') AND (NULL)))) AND ((((0.6791012862477259)>=(-947632976)))))); -- 0ms;
SELECT ((((((((NULL)OR((((('825769975')OR(vt0.c0)))OR(vt0.c0)))))OR('250808640')))OR('1157556745')))OR(LIKELY(DISTINCT rt0.c1))), (- (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))), CUME_DIST() OVER () FROM vt0 WHERE (((((1.407922094E9)/('157609484'))) NOT NULL));SELECT ((AVG(vt0.c0))<<(((rt0.c0)IS NOT(rt0.c1)))) FROM rt0, vt0 LIMIT -1250899001 OFFSET -537868379; -- 0ms;
SELECT DISTINCT CASE WHEN ABS(DISTINCT NULL) THEN (rt0.c0 IN ()) WHEN CAST(rt0.c1 AS TEXT) THEN UNLIKELY(DISTINCT rt0.c1) WHEN (((vt0.c0, rt0.c0, rt0.c0))<=((rt0.c0, rt0.c2, rt0.c0))) THEN (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c2))) END FROM rt0 WHERE (((LIKELIHOOD('Gx', 0.5694682808175624))<((((0.2693876935353723, '-303695947', '_\nꞎ\n'))!=((-1527478166, '1326563300', x''))))));SELECT DISTINCT ((((((((0.9407837644907342)AND(((rt0.c1) NOT NULL))))OR(x'')))AND((rt0.c2 IN ()))))AND((((rt0.c1))>((rt0.c2))))), -1468741460 COLLATE RTRIM, x'4873' FROM vt0; -- 0ms;
SELECT ALL ((((((((((((((NULL) IS TRUE))OR(QUOTE(rt0.c1))))OR(json_array(rt0.c1, rt0.c1))))AND(((((rt0.c0)AND(rt0.c1)))AND(NULL)))))AND((('-289605537')OR(vt0.c0)))))AND(COUNT(*))))AND((rt0.c2 IN (rt0.c0)))), (rt0.c0 IN ((vt0.c0 IN ()), ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))), ((MAX(rt0.c2))LIKE(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))) FROM rt0 WHERE (((CASE WHEN 0.29603512396888576 THEN ',(' END)+(('Kl>+' IN ()))));SELECT DISTINCT CASE ((NULL) ISNULL)  WHEN x'a97a' COLLATE BINARY THEN CAST(rt0.c0 AS BLOB) WHEN (- (rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((rt0.c1) NOTNULL) THEN 0.5984831756249415 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)) WHEN COUNT(*) THEN ((vt0.c0)LIKE(0.15850585182638433)) END FROM vt0, rt0 ORDER BY (((SQLITE_SOURCE_ID()))>=((CAST(rt0.c1 AS TEXT)))) DESC  NULLS LAST, rt0.c1; -- 0ms;
SELECT ALL rt0.c0 FROM vt0 WHERE ((((((((((x'9eb8' IN ()))AND((- (0.5760633253657604)))))OR(NULL COLLATE BINARY)))AND((('-hW9')IS(NULL)))))OR(((NULL) NOT BETWEEN (0.8430990377094915) AND (x'7408f457')))));SELECT ALL (((rt0.c0)=(rt0.c1)) IN ()) FROM rt0 GROUP BY (((rt0.c0, '', rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((LOWER(rt0.c1), ((vt0.c0)OR(vt0.c0)), (~ (rt0.c1)), (- (rt0.c0)), rt0.c1 COLLATE BINARY)) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (~ (rt0.c1)), ((((((((x'')AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c1)), (((0.48807569232520576))=((vt0.c0))), ((rt0.c2)|(0.1584695747216982))))) HAVING ((TRIM(vt0.c0, rt0.c2))-(highlight(rt0.c0, '', rt0.c1, rt0.c2)));SELECT ALL COUNT((rt0.c1 IN ())) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)==(rt0.c1)) AS BLOB) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT NULL, CASE WHEN NULL THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(0.3748443623383131)) WHEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 COLLATE NOCASE THEN ((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)) ELSE SQLITE_VERSION() END, AVG(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) FROM rt0, vt0 WHERE ((((1e500)) BETWEEN (((((NULL))>=(('-381667059'))))) AND ((((('499293521'))!=((NULL))))))); -- 0ms;
SELECT ((((0.5800283942277873) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) FROM vt0, rt0 WHERE (((((((((NULL)OR(x'2d66')))OR(NULL)))AND(CAST(x'' AS TEXT))))OR((x'0f9284405be7' IN ())))) GROUP BY COALESCE(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0))) HAVING CAST((~ (rt0.c2)) AS NUMERIC); -- 0ms;
SELECT DISTINCT ((((rt0.c1)AND(((((-1.40373187E8)AND(vt0.c0)))OR(rt0.c1)))))AND((rt0.c1 IN ()))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT rt0.c2, SUM((NOT (vt0.c0)) COLLATE BINARY), (((rt0.c1 IN ()))<=(CASE WHEN rt0.c1 THEN vt0.c0 END)) FROM rt0, vt0 WHERE ((((((('-1344751604') IS TRUE))AND(((0X1f57386b)%(x'')))))OR(((((x'6a9d')OR(x'')))OR(x''))))); -- 0ms;
SELECT DISTINCT LEAD(((vt0.c0) NOTNULL) COLLATE RTRIM, CAST(vt0.c0 COLLATE NOCASE AS BLOB), ((vt0.c0) NOT NULL) COLLATE NOCASE) OVER (), (+ (rt0.c1 COLLATE NOCASE)), CAST(AVG(vt0.c0) AS BLOB) FROM vt0;SELECT ALL CASE WHEN rt0.c2 COLLATE NOCASE THEN NULLIF(DISTINCT rt0.c0, NULL) WHEN CAST(rt0.c2 AS REAL) THEN ((x'4a03')-(rt0.c0)) WHEN rt0.c1 THEN ((rt0.c2)LIKE(vt0.c0)) END FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(0.9361362756062598 AS INTEGER))) EXCEPT SELECT DISTINCT ((0.4689216301334561 IN ()) IN ()) FROM vt0 WHERE ((((('u&礜ybeq') ISNULL))==(-1.603787091E9))) GROUP BY ((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))!=(CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE x'' END)), ((((((rt0.c2)OR(rt0.c0)))AND(x''))) IS FALSE), (((rt0.c0)) NOT BETWEEN (((+ (rt0.c0)))) AND ((((rt0.c0)<(rt0.c2))))) HAVING SUM(((rt0.c2)!=(rt0.c1)));SELECT DISTINCT ((GROUP_CONCAT(rt0.c0)) BETWEEN (((vt0.c0)>(rt0.c1))) AND (CAST(rt0.c1 AS INTEGER))) FROM rt0, vt0 LIMIT -1170522181; -- 0ms;
SELECT ALL vt0.c0 FROM rt0, vt0 WHERE (((((((((((-1532642261) IS FALSE))AND(((x'308c') IS TRUE))))OR(x'aa60')))AND(((((x'')OR(NULL)))AND(NULL)))))OR(((NULL) BETWEEN (-1.640744024E9) AND (NULL))))) GROUP BY (NOT ((('?c皤aQ') NOT BETWEEN (rt0.c2) AND ('1143528117')))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((0.20803357664376676) IS FALSE))), (x'' IN (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN '-1344751604' THEN NULL WHEN vt0.c0 THEN 2130919120 ELSE 1525860046 END)), rt0.c0 FROM vt0, rt0 ORDER BY (((rt0.c2)) BETWEEN ((rt0.c2)) AND (((~ (vt0.c0))))); -- 1ms;
SELECT DISTINCT COALESCE(DISTINCT HEX(DISTINCT rt0.c0), '947542184', (~ (rt0.c0)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))) FROM vt0, rt0; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c0) IS TRUE) ELSE rt0.c1 END FROM rt0 WHERE (CASE 729788188 COLLATE NOCASE  WHEN CASE NULL  WHEN NULL THEN NULL ELSE '105796814' END THEN (('')=('start of year')) WHEN ((-140373187) ISNULL) THEN CASE WHEN 0.2848892990848547 THEN 0Xfffffffffabb1ea6 END WHEN (((NULL, '-424743288', NULL)) BETWEEN ((x'', x'', '-251111356')) AND (('', NULL, '~䷵'))) THEN TRIM(DISTINCT '') ELSE x'' COLLATE BINARY END); -- 0ms;
SELECT ALL (((((rt0.c2 IN (rt0.c0, vt0.c0)))OR(((rt0.c0) NOT BETWEEN ('t)U!') AND (NULL)))))OR(vt0.c0)) FROM vt0 WHERE (SQLITE_SOURCE_ID()) LIMIT -1428068111 OFFSET -654247889;SELECT (((((rt0.c0 IN ()))AND(((rt0.c1)<(rt0.c0)))))OR(((vt0.c0)-(vt0.c0)))) FROM rt0;SELECT DISTINCT ((((x'') NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (MIN(-9.25073577E8)) AND (CAST(vt0.c0 AS NUMERIC))) FROM rt0, vt0 WHERE (((((NULL)*('-456656694')))!=((NOT (x''))))); -- 0ms;
SELECT DISTINCT NULLIF(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END, ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(vt0.c0))) FROM vt0, rt0; -- 0ms;
SELECT ((CAST(vt0.c0 AS INTEGER))IS NOT(MAX(vt0.c0))), (- ((((vt0.c0)) NOT BETWEEN (('8/')) AND ((rt0.c2))))), NULL COLLATE BINARY FROM vt0, rt0 WHERE (CASE WHEN x'a43e' THEN '' ELSE x'' END COLLATE BINARY); -- 0ms;
SELECT ALL (((((vt0.c0) NOT NULL)))>((COUNT(vt0.c0)))), CAST((+ (rt0.c0)) AS BLOB), (((vt0.c0) BETWEEN (x'') AND (rt0.c1)) IN ()) FROM vt0;SELECT DISTINCT ((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))<>(((rt0.c2) NOT NULL))) FROM rt0, vt0 LIMIT 1407997198 OFFSET -2033134811; -- 0ms;
SELECT (AVG(rt0.c1) IN ()) FROM vt0 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER) WHERE (0X6ce0ae7); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)-(vt0.c0)) AS REAL), 0.5665799931813761, (NOT (CAST(rt0.c1 AS NUMERIC))) FROM vt0, rt0 WHERE (CAST(('yW' IN ('723726980')) AS BLOB)) ORDER BY (+ (((1636399273) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) DESC; -- 0ms;
SELECT DISTINCT (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))>=((((rt0.c2)<(vt0.c0))))), LAG((((((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c0, rt0.c1, rt0.c0))))AND(((rt0.c1)==(rt0.c0)))))AND(((rt0.c0)!=(rt0.c2)))), ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))IS NOT(x'')), ((((((rt0.c0)OR(rt0.c2)))OR(0X31383ff7)))IS(rt0.c2))) OVER (), (((((rt0.c0))>=(('1867760911')))) IS FALSE) FROM rt0 WHERE (CASE 0.03485651600059525 COLLATE BINARY  WHEN ((2.83330993E8)>('')) THEN ((('掣縙grm', NULL, 'W)')) BETWEEN (('-621516338', '632314836', '0.4624764647313637')) AND (('㳢''''\n', x'', ''))) END);SELECT ALL ((('1e500', rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, vt0.c0, rt0.c0))) COLLATE NOCASE, (((rt0.c0) NOTNULL) IN ()), (- (NULLIF(vt0.c0, rt0.c2))) FROM rt0 WHERE (((TYPEOF(NULL)) BETWEEN ((('ey皢i⍎')/(x'1240'))) AND ((((NULL, 0.7942363718768292, 517421103))<=((NULL, x'8c98', 0.6234881257035683)))))) ORDER BY ((- (rt0.c1)) IN ((+ (rt0.c2)))) DESC;SELECT DISTINCT LAG(((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c2)<<(rt0.c1))) AND (vt0.c0 COLLATE NOCASE)), ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)*(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(x'')))), 0.6618724344731467) OVER (), ((LTRIM(rt0.c2))<(NULL)), NULL FROM rt0, vt0; -- 0ms;
SELECT ALL (((~ (rt0.c0)))>>((rt0.c1 IN (rt0.c0, rt0.c2)))) FROM vt0, rt0 WHERE (CAST('f/4' COLLATE BINARY AS NUMERIC)); -- 0ms;
SELECT DISTINCT COUNT('-1603787091') OVER (), ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END) IS TRUE), ((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) FROM vt0, rt0 WHERE (LIKELY(DISTINCT ((0X12d88e2e)>=(0X4e97b347)))) LIMIT -1290484994; -- 0ms;
SELECT DISTINCT ((TOTAL(NULL)) NOT BETWEEN (json_object(rt0.c1, rt0.c1)) AND (CAST(rt0.c0 AS BLOB))) FROM rt0, vt0 WHERE (x'');SELECT DISTINCT (((CAST(rt0.c0 AS NUMERIC)))>=((((rt0.c2) ISNULL)))) FROM vt0, rt0 LIMIT 995088066; -- 0ms;
SELECT ((((CAST(rt0.c2 AS INTEGER))OR(LIKELIHOOD(rt0.c1, 0.44361461032979277))))AND(((rt0.c1)/(rt0.c1)))), '-903293756', (+ ((rt0.c2 IN (rt0.c0, '')))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((('g%' IN (rt0.c1)))OR(TOTAL(vt0.c0))))AND(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)), CASE NULL  WHEN AVG(rt0.c1) THEN LIKELY(DISTINCT rt0.c1) WHEN (rt0.c1 IN ()) THEN (NOT (NULL)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN '1259499246' WHEN rt0.c2 THEN rt0.c2 END THEN 0X36c79ce0 ELSE (((rt0.c0))<((NULL))) END, ((((NULLIF(rt0.c1, vt0.c0))AND((((rt0.c2))==((rt0.c0))))))AND(CAST(rt0.c2 AS BLOB))) FROM rt0 WHERE (HEX(DISTINCT (0.415416421554769 IN ('-568947585'))));SELECT DISTINCT (((rt0.c0 IN ()))OR(COUNT(*))) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL) FROM vt0 WHERE (((NULL) ISNULL) COLLATE RTRIM);SELECT DISTINCT ((CASE WHEN vt0.c0 THEN rt0.c0 END)>>((vt0.c0 IN (vt0.c0)))) FROM vt0, rt0 WHERE (((((((NULL)AND(-1738119814)))OR(x''))) NOT BETWEEN ((('525809771') NOT BETWEEN (1431629751) AND (0.2677017841685352))) AND ((('0.3485130055997667') NOT NULL)))); -- 0ms;
SELECT TOTAL(LIKELIHOOD(DISTINCT rt0.c0, 0.2320520445315819)), ((((vt0.c0) IS FALSE))<((- (vt0.c0)))), (((((vt0.c0)) BETWEEN (('-1777409150')) AND ((NULL))))>(((rt0.c0)<(vt0.c0)))) FROM vt0;SELECT ALL (((rt0.c0)*(rt0.c2)) IN (CAST(rt0.c0 AS INTEGER), ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT ALL rt0.c2, ((((((rt0.c2)!=(rt0.c2)))AND(json_array_length(rt0.c1))))AND(0.39368389791671277)), CAST((rt0.c1 IN ()) AS INTEGER) FROM rt0, vt0 WHERE (((((('''괋-t')) BETWEEN ((x'')) AND ((NULL))))>>(''))); -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((~ (rt0.c1))))) FROM vt0, rt0 LIMIT -1018322727; -- 0ms;
SELECT ALL ((('')+(vt0.c0)) IN (((((rt0.c0)OR(0X2a62b184)))AND(rt0.c1)))), MIN(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))), rt0.c0, FIRST_VALUE(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE NOCASE) OVER ( PARTITION BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT NULL), NULL, (((((((vt0.c0, rt0.c2, vt0.c0))==((vt0.c0, rt0.c2, vt0.c0))))OR(LTRIM(rt0.c0, vt0.c0))))OR((rt0.c1 IN ()))), ((vt0.c0)LIKE(vt0.c0)) COLLATE RTRIM GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE GROUP), ((((MIN(rt0.c0))OR(NULL)))OR(NULLIF(DISTINCT NULL, rt0.c2))) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CAST(rt0.c0 AS BLOB))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL (((- (rt0.c1))) NOT BETWEEN (((((rt0.c2)OR(vt0.c0)))OR(NULL))) AND (((rt0.c0)<(vt0.c0)))) FROM vt0 WHERE (CASE WHEN ((NULL)>('-1711449324')) THEN ((x'')LIKE(1.88046518E9)) ELSE (((((((('F8A 뭭')AND(x'87fb')))OR(NULL)))OR(NULL)))AND(NULL)) END);SELECT ALL MAX(((rt0.c1)<>(rt0.c1)) COLLATE NOCASE) FROM rt0; -- 0ms;
SELECT DISTINCT (LIKELY(vt0.c0) IN (CASE WHEN rt0.c0 THEN rt0.c0 END)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0))))AND(((rt0.c0) IS FALSE))) FROM vt0, rt0; -- 0ms;
SELECT rt0.c2 FROM rt0 WHERE (CAST(json_type(NULL) AS BLOB)); -- 0ms;
SELECT DISTINCT CAST(((x'')AND(rt0.c2)) AS BLOB), NULL, LEAD(((NULL) BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'f865' COLLATE RTRIM)), (- (((rt0.c0) ISNULL))), (((rt0.c1 IN ()))<=((+ (rt0.c1))))) OVER ( ORDER BY ((((rt0.c2)IS NOT(vt0.c0)))IS NOT(x''))  NULLS FIRST, json_array_length((- ('-289605537')), vt0.c0), (((((rt0.c2))<>((vt0.c0)))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ASC) FROM rt0, vt0 WHERE (((((1.407922094E9)AND((x'' IN (x'')))))OR((- (0.899893633463096))))); -- 1ms;
SELECT ALL ((('-978023316'))==((((rt0.c0)*(rt0.c1))))), LEAD(CASE WHEN rt0.c1 COLLATE NOCASE THEN CAST(rt0.c1 AS INTEGER) END, CASE ((rt0.c0)||(rt0.c2))  WHEN ((rt0.c2) ISNULL) THEN (NOT (rt0.c2)) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c2)<=(rt0.c0)) WHEN (- (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE 0.03253300127277603 END END, (CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.9983049712271806 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END IN (((rt0.c1)>(rt0.c1)), '' COLLATE BINARY))) OVER (), (((NOT (rt0.c1))) IS TRUE) FROM rt0 WHERE ((((x'' IN ()))IS(((0.5919017791546806)IS NOT('\rx24裥5p6p'))))) GROUP BY HEX(((vt0.c0)AND(vt0.c0))) HAVING MAX((rt0.c2 IN (rt0.c1)));SELECT ALL (CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt0 ORDER BY rt0.c0  NULLS FIRST, CAST(rt0.c1 AS INTEGER) DESC  NULLS LAST;SELECT ALL ((((rt0.c1) IS FALSE))==(rt0.c0)) FROM vt0 WHERE (CASE ((0.8920716812849475)&('-2060005209'))  WHEN (((((((((((('-1240370251')OR(x'')))AND('')))AND(NULL)))OR(0.18917084031500142)))AND('-2072929145')))OR(x'7441')) THEN (('0.0054981434603839086')*(x'84ff')) END) ORDER BY ((CAST(rt0.c1 AS TEXT)) ISNULL) ASC LIMIT -421203690;SELECT ALL (((rt0.c0, rt0.c0, rt0.c0)) BETWEEN (((- ('b')), ((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)), ((rt0.c0) NOTNULL))) AND ((((rt0.c0)<=(vt0.c0)), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) FROM rt0 LIMIT -1679172263;SELECT DISTINCT x'895a' FROM rt0, vt0 WHERE ('843129413') LIMIT -2136597373; -- 0ms;
SELECT NTH_VALUE(((((((rt0.c0)IS(rt0.c1)))OR(((rt0.c1) NOTNULL))))OR(((rt0.c2)<>(rt0.c0)))), SUBSTR(((rt0.c2) NOT BETWEEN ('-1533307999') AND (rt0.c2)), ((rt0.c0) IS TRUE))) OVER () FROM rt0 WHERE ((((((x'3575' IN ('1009676160', x'f7d23678')))AND((x'' IN ()))))OR(ABS(DISTINCT 'N4')))) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS REAL), 0.2636701469309334)  NULLS LAST LIMIT -2118257921;SELECT CAST(TYPEOF(vt0.c0) AS INTEGER) FROM rt0, vt0 LIMIT -807555077; -- 0ms;
SELECT ALL ((NOT (rt0.c1)) IN ()) FROM vt0; -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.8386109317172176))) BETWEEN ((((rt0.c2, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) FROM rt0 GROUP BY HEX((((rt0.c0)) NOT BETWEEN (('jWypm)')) AND ((rt0.c0))));SELECT DISTINCT ((((((rt0.c1))>((rt0.c0)))))==((LTRIM(vt0.c0)))), TOTAL((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))), (((rt0.c2)) NOT BETWEEN ((((rt0.c2) ISNULL))) AND (((+ (vt0.c0))))) FROM rt0, vt0; -- 0ms;
SELECT (CAST(rt0.c2 AS TEXT) IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT UPPER(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN x'162c' THEN rt0.c1 ELSE rt0.c0 END), FIRST_VALUE((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(NULL)))OR(((vt0.c0) NOT NULL)))) OVER (), CASE ((rt0.c2) ISNULL)  WHEN (('hꚂ|')-(rt0.c1)) THEN rt0.c0 COLLATE BINARY ELSE rt0.c0 END FROM vt0 WHERE (((ABS(DISTINCT 0.8860977603502685)) BETWEEN ('1302702098') AND (('' IN ()))));SELECT ALL (((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) IN ()), DENSE_RANK() OVER (), HEX(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))) FROM vt0 WHERE (CAST(((NULL)&(x'')) AS BLOB));SELECT ((rt0.c2) BETWEEN ((rt0.c0 IN ())) AND (((vt0.c0)+(rt0.c2)))) FROM rt0, vt0 WHERE ((((((1064528023))<((''))))>((((NULL)) BETWEEN ((NULL)) AND ((x'')))))) GROUP BY ((((vt0.c0)IS NOT(rt0.c1))) IS FALSE) HAVING ((((rt0.c1) BETWEEN (x'') AND (rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)))); -- 0ms;
SELECT DISTINCT NULLIF(COALESCE(rt0.c0, vt0.c0), ((rt0.c1)&(rt0.c2))) FROM rt0 GROUP BY (~ (rt0.c0)) COLLATE NOCASE HAVING ((((NULLIF(DISTINCT '㹡᥈', rt0.c1))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))) LIMIT 268792084;SELECT DISTINCT CASE WHEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)) END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0)IS NOT(vt0.c0)) AS INTEGER) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)<(rt0.c1)) AS REAL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c2)) NOT NULL) FROM vt0 INTERSECT SELECT DISTINCT PRINTF(CAST(rt0.c1 AS REAL), (((rt0.c0))>((x'7a31b9b1'))), LIKE(vt0.c0, rt0.c0, '-'), ((NULL) NOTNULL), ((rt0.c1) ISNULL)) FROM rt0 WHERE ((~ (((x'') NOT BETWEEN ('詪a~e⹃GA8m') AND (x'')))));SELECT ALL CAST(rt0.c0 AS INTEGER) COLLATE NOCASE FROM vt0 NATURAL JOIN rt0; -- 1ms;
SELECT DISTINCT (((((((((NOT (vt0.c0)))OR(((rt0.c0) IS TRUE))))OR((((vt0.c0))<=((rt0.c0))))))AND(((vt0.c0) IS FALSE))))AND(rt0.c0 COLLATE NOCASE)) FROM vt0, rt0 WHERE ((((-1947849437)-(0.1550467379408017)) IN ())); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE), (((UPPER(DISTINCT '贆ᔥ7#')))<=((rt0.c2))), (~ (((rt0.c0) IS TRUE))) FROM vt0;SELECT ALL (((NULL IN ())) NOT BETWEEN (TYPEOF(rt0.c2)) AND (NULL)) FROM vt0;SELECT DISTINCT (+ (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (CAST((((0X2d159851, NULL, NULL))<=((NULL, '-538557903', ''))) AS TEXT)) ORDER BY (((rt0.c2 IN ())) ISNULL)  NULLS FIRST; -- 0ms;
SELECT ALL (((rt0.c0) NOT BETWEEN (0.3437563567682762) AND (x'')) IN ()) FROM vt0 WHERE ((((+ (0.3683573247996146))) IS FALSE)); -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)), ((x'ca39') NOT BETWEEN (vt0.c0) AND (rt0.c1)), rt0.c0)) AND ((CAST(vt0.c0 AS TEXT), (rt0.c0 IN ()), (((rt0.c2, rt0.c1, rt0.c1))<((rt0.c1, rt0.c0, vt0.c0)))))), LOWER(((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))), (~ (((rt0.c2)-(rt0.c1)))) FROM rt0, vt0 GROUP BY CASE (((rt0.c1, vt0.c0, vt0.c0, rt0.c2, vt0.c0, vt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1, NULL, rt0.c0)) AND ((vt0.c0, vt0.c0, rt0.c0, vt0.c0, vt0.c0, vt0.c0, rt0.c0)))  WHEN 0.5698259820806486 COLLATE NOCASE THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END HAVING ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN ((NOT (rt0.c1))) AND ('465476805')); -- 1ms;
SELECT ((CAST(rt0.c1 AS TEXT))LIKE(AVG(rt0.c1))), COUNT(rt0.c2) OVER (), ((((vt0.c0) NOT NULL)) IS FALSE) FROM rt0 WHERE (((LIKELIHOOD('U', 0.04641299745074512))>>(((((x'c958e511')OR(972453961)))OR(-1.018322727E9)))));SELECT DISTINCT CASE TRIM(rt0.c1)  WHEN '' THEN ((rt0.c1)|(rt0.c1)) WHEN (((rt0.c2))<>((rt0.c0))) THEN (rt0.c0 IN (vt0.c0)) WHEN rt0.c1 THEN (vt0.c0 IN (rt0.c0)) WHEN ((rt0.c1)*(vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) ELSE ((((rt0.c2)OR(NULL)))AND(vt0.c0)) END, RANK() OVER (), (~ (((rt0.c0)+(rt0.c1)))) FROM rt0, vt0 WHERE ((- ('-2024885544'))); -- 0ms;
SELECT ALL ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY COLLATE BINARY FROM vt0 LIMIT -1536653777;SELECT DISTINCT CAST(rt0.c1 AS BLOB) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)) AS REAL) FROM vt0 WHERE (CASE WHEN x'' COLLATE RTRIM THEN (('1016826603') NOT NULL) END);SELECT ALL AVG(((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT SUM(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(0.8517705968696215)))AND(rt0.c2))) FROM vt0, rt0; -- 0ms;
SELECT ((((vt0.c0) ISNULL))<=((NOT (rt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT CAST(((x'') BETWEEN (rt0.c0) AND (vt0.c0)) AS INTEGER) FROM rt0, vt0 WHERE (((-3.00541469E8)!=(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0, rt0; -- 0ms;
SELECT (((((rt0.c1 IN ()))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((-1.590123997E9))))))AND(((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))) FROM vt0 WHERE (CASE WHEN (((((((('-525592750')OR(0.8214428037555123)))AND(x'')))AND('')))AND('-1086636781')) THEN ((((NULL)AND(NULL)))OR(0.9698465044870955)) WHEN ((NULL)/(NULL)) THEN (('1514641077') BETWEEN ('h') AND ('-1603787091')) WHEN IFNULL(DISTINCT x'6c4a', x'') THEN ((NULL)<>(NULL)) END); -- 0ms;
SELECT GROUP_CONCAT(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c0))) OVER (), CAST((NOT (NULL)) AS INTEGER), NULL, CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS BLOB), ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN '525809771' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<((('1e500') NOT BETWEEN (rt0.c1) AND (vt0.c0)))) FROM vt0 WHERE ((((((('-505868888') IS FALSE))AND(((x'')-('')))))AND((('-976016422') BETWEEN (x'c461') AND (x'')))));SELECT ALL ((((MAX(NULL))OR((('-526529854') BETWEEN (rt0.c1) AND (vt0.c0)))))AND((+ (rt0.c1)))) FROM vt0, rt0 WHERE (((((0.08361548709425226)OR(CASE 0.12297578538268783  WHEN x'b32d' THEN x'4ea4' WHEN NULL THEN 0.19780537608283988 WHEN -1e500 THEN '-948593932' ELSE 1.280706585E9 END)))AND(((0.24544545872614)>=('*d&+m'))))) LIMIT -2047635984 OFFSET 2090484835; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))OR(((x'') NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0, vt0 WHERE (HEX(DISTINCT ((((0.1459462983446388)AND(NULL)))OR(x'd6b3')))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)|(rt0.c0))) NOT BETWEEN (AVG(rt0.c0)) AND ((rt0.c0 IN ()))) FROM rt0;SELECT DISTINCT LIKELY(DISTINCT ((vt0.c0)+(rt0.c1))), CASE rt0.c2  WHEN ((vt0.c0) BETWEEN ('') AND (rt0.c2)) THEN JULIANDAY(rt0.c1, vt0.c0, rt0.c1) WHEN 0xffffffffb687db25 THEN CASE NULL  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN vt0.c0 COLLATE RTRIM ELSE (rt0.c0 IN ()) END, ((rt0.c2) IS TRUE) COLLATE NOCASE FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((NULL)GLOB(rt0.c1))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) AND (CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)), ((((vt0.c0))>=((rt0.c0))) IN (rt0.c2, ((rt0.c2)LIKE(rt0.c1)))), (((NOT (rt0.c0)))>=(0.2523627886072164 COLLATE NOCASE)) FROM vt0 WHERE ((NOT ((+ (0.9047544422665637)))));SELECT DISTINCT AVG(rt0.c2) FROM vt0;SELECT DISTINCT COUNT((NOT (vt0.c0))) OVER () FROM rt0, vt0 WHERE (((((0.9609884023216188) IS TRUE))/(CAST('-1394720284' AS INTEGER)))) ORDER BY ((((rt0.c0)IS(rt0.c2))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((rt0.c2) BETWEEN ('	n!') AND (rt0.c1))))  NULLS LAST, CAST(((0.7662919801863531) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER)  NULLS FIRST, (((rt0.c1 IN ())) IS FALSE) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((UPPER(DISTINCT vt0.c0)))<=((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) FROM vt0, rt0 LIMIT -999922920; -- 0ms;
SELECT ALL CAST((NOT (NULL)) AS REAL), ((('917523594')) BETWEEN ((((((0.5284611864170381)AND(rt0.c0)))AND(rt0.c1)))) AND ((UPPER('0.7660828802999089')))), rt0.c0 FROM rt0, vt0 GROUP BY 0.8026428273081377 HAVING ((GROUP_CONCAT(rt0.c1)) BETWEEN (LIKELY(rt0.c2)) AND (CAST('222647425' AS REAL))); -- 0ms;
SELECT (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))), (+ (rt0.c2)))) AND (((((vt0.c0))=((vt0.c0))), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)), ((rt0.c2)%(rt0.c0))))) FROM vt0, rt0 GROUP BY (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) IN ()) HAVING ((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))>>(((rt0.c1)>(NULL)))); -- 0ms;
SELECT ALL (((((~ (vt0.c0)))AND((NOT (vt0.c0)))))AND(((rt0.c2)<=(rt0.c2)))) FROM rt0 ORDER BY (((+ (rt0.c1)))<<((((rt0.c0))>=((rt0.c2)))))  NULLS FIRST;SELECT DISTINCT CASE 2.090977743E9  WHEN (+ (vt0.c0)) THEN (NOT (rt0.c1)) END FROM vt0, rt0; -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN (((((rt0.c1))=((rt0.c1))))) AND ((AVG(rt0.c0)))), (((((rt0.c1, rt0.c1, 0X7377856c)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c0, rt0.c0)))) NOTNULL), ((((((rt0.c2) NOTNULL))OR(0Xffffffff86c076b2)))OR('-76561665')) FROM rt0, vt0 WHERE (((((((0.8067416974672876) NOTNULL))OR(((x'a16d') BETWEEN (0.9137709047684729) AND (NULL)))))AND((((((((('0쓷,')AND(x'')))OR(x'5e78')))OR(NULL)))OR('1909481308'))))) ORDER BY ((rt0.c0) ISNULL) COLLATE RTRIM DESC; -- 5ms;
SELECT DISTINCT (((- (rt0.c0)))<=(((rt0.c1)==(rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(x'')))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN 7.03168967E8 THEN rt0.c1 ELSE rt0.c1 END)), GLOB(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))), ((rt0.c2) BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) AND (((rt0.c1)*(vt0.c0)))) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((IFNULL(rt0.c1, vt0.c0)) NOT BETWEEN (MAX(rt0.c0)) AND (CASE WHEN rt0.c1 THEN vt0.c0 END)) FROM vt0, rt0 WHERE (((((IFNULL(0.15144925625903194, x'4d7d'))AND(((((0x90c998)AND('00p⨃ep짏')))AND('6SX78%>')))))OR(CASE WHEN x'' THEN -2145334578 ELSE x'' END))); -- 0ms;
SELECT DISTINCT ((0.4830610434705276)IS(((rt0.c0)OR(vt0.c0)))) FROM vt0 WHERE ((- (MIN('3_[>**o', x'', '-1028650011', NULL)))) EXCEPT SELECT '-476705705' FROM rt0, vt0;SELECT ALL ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((0.27225834090842316)))))>((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) FROM rt0;SELECT DISTINCT (((rt0.c1)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c1)) AND (('-1461792135'))))) AND ((COUNT(vt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c0) NOT NULL) COLLATE BINARY FROM rt0 WHERE (((NULL) BETWEEN (0.6242046445842729) AND ('-1679172263')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c0) NOTNULL) COLLATE BINARY; -- 1ms;
SELECT DISTINCT (((((vt0.c0)LIKE(rt0.c0)), NULL COLLATE BINARY, (((rt0.c0))<((rt0.c0))), ((rt0.c2)LIKE(vt0.c0)), vt0.c0 COLLATE BINARY))=((COUNT(*), (('1302702098') IS TRUE), TRIM(NULL, rt0.c2), (vt0.c0 IN ()), ((rt0.c0)<=(x''))))) FROM vt0, rt0 WHERE ((((('-409784854')-('Ib|CaQS')))==(CAST('1027400178' AS REAL)))); -- 0ms;
SELECT ALL (0X7fc45474 IN ()) FROM vt0 WHERE ((((NULL) IS FALSE) IN ())); -- 0ms;
SELECT DISTINCT ((((GROUP_CONCAT(rt0.c1))AND(0Xffffffff9fd1946b)))OR(((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))), (NOT ((rt0.c2 IN (rt0.c0)))), rt0.c2 COLLATE BINARY FROM rt0 LIMIT -1911921126;SELECT ((SQLITE_VERSION())=((rt0.c2 IN (rt0.c0)))) FROM rt0 ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS REAL), rt0.c2 ASC; -- 0ms;
SELECT DISTINCT ('-1302348841' IN ()) FROM vt0 WHERE (((((((x'')GLOB(NULL)))OR(COALESCE(DISTINCT 658448974, NULL, x'', 752728804, NULL, NULL))))OR(((x'')>>(NULL))))) LIMIT 2073820023 OFFSET -1046950829; -- 0ms;
SELECT ALL ((NULL) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM FROM vt0, rt0 GROUP BY (((rt0.c0)) NOT BETWEEN ((((vt0.c0)!=(-2009838152)))) AND (('0.06172884793263811'))) LIMIT 653389228 OFFSET 250553808; -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) ISNULL) FROM vt0 WHERE (NULL) GROUP BY CAST(((rt0.c1)<=(rt0.c1)) AS TEXT), x'bb7b', (((((rt0.c2) ISNULL)))<(((NOT (rt0.c1))))), CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (rt0.c2 IN ()) WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c1)) THEN (((vt0.c0))<=((vt0.c0))) ELSE ((vt0.c0)=(rt0.c0)) END, (((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) IS TRUE) HAVING COUNT(((rt0.c2)OR(rt0.c0))) LIMIT -739344149 OFFSET 1796315206;SELECT (~ (('-691901133' IN (rt0.c1)))) FROM rt0 ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) DESC, (('TRUE')!=(((rt0.c0) ISNULL))) DESC LIMIT -1007681354;SELECT (NOT (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(x'')))OR(rt0.c1)))) FROM rt0 ORDER BY '967324313'; -- 0ms;
SELECT ((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN ((+ (rt0.c1))) AND ((rt0.c0 IN (rt0.c2, vt0.c0)))) FROM vt0;SELECT (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) IN ()) FROM vt0, rt0 LIMIT -57050799; -- 0ms;
SELECT '1733130401' FROM rt0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(x'') FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1)) NOT BETWEEN ((NULL, ((rt0.c2)<=(rt0.c1)), ((0.7926927193544612)<(vt0.c0)), CASE WHEN rt0.c2 THEN x'' END, (((vt0.c0))>=((rt0.c0))))) AND ((CASE WHEN vt0.c0 THEN rt0.c1 END, rt0.c2 COLLATE BINARY, rt0.c2 COLLATE RTRIM, (rt0.c0 IN ()), 0X3c3244c))) FROM rt0 WHERE ((('0*') NOT BETWEEN ((x'' IN (NULL))) AND (CASE '[]'  WHEN NULL THEN NULL ELSE 'i^㧦N' END)));SELECT ALL (((((vt0.c0) IS TRUE)))<=((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 END))) FROM vt0 WHERE (((HEX(x'')) IS FALSE));SELECT rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT (- (((rt0.c2) NOTNULL))), TRIM(CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END), UNLIKELY(DISTINCT (- (rt0.c1))) FROM vt0 WHERE (((((((NULL)>(-1600006150)))OR(((0.867688735686881) NOT BETWEEN (NULL) AND (x'')))))AND(((NULL) IS TRUE))));SELECT ALL ((((((x'5e4a')AND(rt0.c2)))OR(rt0.c0))) IS TRUE) FROM vt0 WHERE ((((((1295251391))>=(('PN!1㴓l~\')))) IS FALSE));SELECT ALL CAST(vt0.c0 AS TEXT) FROM rt0 WHERE (((((((((TRIM(DISTINCT 0.3162456306641994, 0.4501477679432079))AND(CASE NULL  WHEN '1503633926' THEN 0.7788289942727726 ELSE x'1670' END)))AND((('1027400178') IS FALSE))))AND(CAST('_W' AS TEXT))))AND(json_valid(NULL))));SELECT ALL (- (((vt0.c0)IS(vt0.c0)))) FROM rt0;SELECT DISTINCT ((COALESCE(rt0.c1, rt0.c1)) IS FALSE), ((rt0.c0) NOT BETWEEN (((((((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))) AND ((((rt0.c2))=((rt0.c1))))), LIKELY(((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.0032607470578570608))) FROM vt0;SELECT DISTINCT CASE WHEN rt0.c2 COLLATE BINARY THEN NULLIF(rt0.c0, rt0.c0) ELSE MIN(rt0.c1) END FROM rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), x'', CASE ((vt0.c0) ISNULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN '-300541469' WHEN rt0.c2 THEN vt0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c0) AND (-9.43205257E8)) END FROM vt0;