-- Time: 2024/06/07 02:41:53
-- Database: database89
-- Database version: 3.40.0
-- seed value: 1928978789
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, c2); -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t1 (c0 INT  CHECK ( LOWER(((c0)|(c0))))); -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
PRAGMA temp.auto_vacuum = FULL; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2, c0) VALUES ('2102022557', 0.8771611916965729, 0.6424236690655111), ('', 0.8019843850417339, ''), (NULL, 0.4039756897508504, '-1064141562'), ('poW.}80冝U', NULL, ''), (x'5163', NULL, -0.0); -- 1ms;
UPDATE OR ROLLBACK vt0 SET (c2, c2, c1)=('1843879286', x'be67', x''); -- 0ms;
UPDATE OR REPLACE t1 SET (c0)=(0.4608028858461404); -- 0ms;
UPDATE OR ABORT vt0 SET c2=2.102022557E9, c0='', c1=0.4039756897508504; -- 0ms;
ALTER TABLE t1 ADD COLUMN c59 BLOB; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c2)=(NULL, x''); -- 1ms;
PRAGMA main.integrity_check; -- 0ms;
CREATE INDEX IF NOT EXISTS i83 ON t1(((((c0)+(c59)))IS NOT(NULL)),HEX(CASE c0  WHEN c0 THEN '1843879286' END) COLLATE NOCASE); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('0.4608028858461404'); -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(0x502a7872); -- 1ms;
PRAGMA shrink_memory; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR REPLACE t1 SET (c0, c59)=(x'', ''); -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '57499'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -295582782);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ABORT t1 SET c59=NULL WHERE ((((t1.c59)OR(t1.c59)))OR(t1.c59)) COLLATE RTRIM; -- 0ms;
ALTER TABLE t1 ADD COLUMN c60 INTEGER; -- 0ms;
END; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 BEFORE DELETE ON t1 BEGIN SELECT RAISE(ROLLBACK, 'asdf');INSERT OR ABORT INTO t1(c59) VALUES (0xffffffffb7670e34);END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.737635021089351 WHERE (((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0, c2) VALUES (0.737635021089351, 0.5692284593563045, '1344960626'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c1, c0)=(x'9f7e', 'POW.}80冝U', 0.0978705915496565); -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
DROP TABLE IF EXISTS t1; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0, c2) VALUES (0.32982894945145325, 0.07893160376121033, 2102022557), ('1127936050', '609544186', x'8035'), (2.102022557E9, x'c70bb752', '-1533026070'), (-1.217982924E9, '0.8771611916965729', x''), ('', x'', 0xffffffffd7eebd29); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA main.short_column_names = false; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.5065086053249167); -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
PRAGMA threads = 2750946921890843657; -- 0ms;
COMMIT; -- 3ms;
COMMIT; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('i>Oo\nE%K]'), (NULL), (0.5065086053249167); -- 1ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 8ms;
PRAGMA journal_size_limit = -8639419882357549234; -- 0ms;
DELETE FROM vt0 WHERE LOWER(DISTINCT CAST(vt0.c2 AS REAL)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(x'64d8') WHERE ((vt0.c0)IS(vt0.c1)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(0Xffffffffb7670e34) WHERE CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN '' WHEN vt0.c1 THEN vt0.c1 END AS TEXT); -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
PRAGMA temp.wal_autocheckpoint = -6560348876547538837; -- 0ms;
UPDATE OR IGNORE vt0 SET c2=0.8771611916965729 WHERE ((((vt0.c0)>=(vt0.c0))) NOT NULL); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 4ms;
ANALYZE; -- 1ms;
UPDATE OR ROLLBACK vt0 SET (c1)=(0.13865356754076763) WHERE ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c2))) NOT NULL); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<((((vt0.c2) IS FALSE)))) FROM vt0 WHERE ('l.紆~)8#') LIMIT 1127936050 OFFSET 1344960626; -- 0ms;
SELECT ALL ((((NULL)OR((((vt0.c2))>=((vt0.c1))))))AND((vt0.c1 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE RTRIM) NOT NULL), (((vt0.c2, '0.737635021089351', vt0.c2)) NOT BETWEEN (((((vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((NULL, vt0.c1, vt0.c1)) AND ((0.607173548625399, vt0.c0, vt0.c0))), ((vt0.c0)==(vt0.c1)), CASE WHEN vt0.c2 THEN x'' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) AND (((vt0.c1 IN ()), (+ (vt0.c2)), ((((0.07893160376121033)AND(vt0.c1)))OR(vt0.c2))))), ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))*((- (vt0.c2)))) FROM vt0; -- 0ms;
SELECT ALL ((TOTAL(vt0.c2))LIKE((NOT (NULL)))) FROM vt0; -- 1ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0 WHERE ((((('VJ') BETWEEN (x'') AND (NULL)))/(NULL))); -- 0ms;
SELECT DISTINCT (((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) BETWEEN ((+ (vt0.c0))) AND (CAST(NULL AS TEXT))) FROM vt0; -- 0ms;
SELECT ((0.739103427712567)IS NOT(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0 LIMIT -1064141562; -- 0ms;
SELECT ALL (+ (TIME(vt0.c2, vt0.c1, vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (x'712f' IN ()), 0.05627886598330811)); -- 0ms;
SELECT NTILE(((CAST(0x6de75d76 AS TEXT))IS NOT(((vt0.c1)/(vt0.c2))))) OVER ( ROWS  UNBOUNDED PRECEDING), TOTAL(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c1))), ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))<=(vt0.c1 COLLATE BINARY)) FROM vt0 WHERE ((((x'4ec5')) NOT BETWEEN ((0.5010791865318989)) AND (('⏈6'))) COLLATE BINARY); -- 1ms;
SELECT ((x'bb5c')&(CAST(vt0.c1 AS TEXT))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)) NOT BETWEEN (('n ⶻndVc', vt0.c2, vt0.c2, vt0.c2, '2102022557')) AND ((vt0.c0, vt0.c1, vt0.c2, vt0.c0, vt0.c1))) COLLATE NOCASE, (((- (vt0.c1)))!=(CASE WHEN 0.6192187479722453 THEN vt0.c1 ELSE vt0.c2 END)), PERCENT_RANK() OVER () FROM vt0 WHERE ((((x'', '', 0.19904867076226251)) BETWEEN ((((((((((((((x'467a13b6')AND(2.102022557E9)))AND(NULL)))AND(NULL)))AND(2.102022557E9)))OR(NULL)))AND('-1033861648')), ((0.08183506893352344) IS TRUE), ((((NULL)OR(x'')))AND('-145170234')))) AND ((CASE WHEN x'' THEN NULL ELSE NULL END, ((NULL) NOT BETWEEN ('') AND ('')), x'941f' COLLATE RTRIM)))); -- 0ms;
SELECT ALL (((x'')) BETWEEN ((GLOB(vt0.c1, vt0.c0))) AND ((((vt0.c0)OR(vt0.c1))))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c1, (vt0.c0 IN (vt0.c1, vt0.c0)), x'' COLLATE BINARY))<=((LIKELY(vt0.c2), NULL, vt0.c2))), AVG(vt0.c0) OVER (), (+ (((vt0.c2)IS NOT(vt0.c2)))) FROM vt0; -- 0ms;
SELECT ((SQLITE_SOURCE_ID())==(CAST(vt0.c1 AS BLOB))), ((CASE WHEN vt0.c0 THEN vt0.c1 END) IS FALSE), ((((vt0.c0) IS FALSE)) IS FALSE), SUM(((vt0.c1)LIKE(vt0.c2))) FILTER(WHERE (~ (vt0.c0))) OVER (), ((((vt0.c1 COLLATE NOCASE)OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c0)|(vt0.c1)))) FROM vt0 WHERE (((CASE NULL  WHEN 0.958485074332843 THEN x'' ELSE x'' END)&(CASE 0.958485074332843  WHEN x'' THEN NULL ELSE 0.47221521834220126 END))); -- 0ms;
SELECT ALL NULL FROM vt0 WHERE (CASE (x'' IN ())  WHEN ((((0xfffffffff3e218e0)AND(-6.72219863E8)))AND(0.7582577783644973)) THEN 'V%X(5*' COLLATE BINARY ELSE ((x'adc3')>(x'689c')) END) GROUP BY LAST_INSERT_ROWID(), CAST(((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC), (((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND (('-990640743')))) NOT BETWEEN (vt0.c0) AND (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)))), CAST((NOT ('n ⶻndVZ')) AS BLOB), CAST('怹邻' AS NUMERIC); -- 0ms;
SELECT DISTINCT COUNT(((((((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c2))) FROM vt0 WHERE (LENGTH((~ (x'')))) GROUP BY LOWER(DISTINCT (((0.6000253582268869, vt0.c0, vt0.c2))>((vt0.c2, vt0.c1, vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c1))) NOTNULL) FROM vt0 WHERE (((0.08183506893352344)<<((((x'c33b'))==(('-1033861648')))))) ORDER BY x'f3a6' ASC; -- 0ms;
SELECT ALL CAST(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)) AS BLOB) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c2)OR(vt0.c0)))OR(vt0.c1))) IS FALSE), ((((vt0.c2)AND(((vt0.c0)<=(vt0.c0)))))OR((NOT (vt0.c2)))), ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))IS(CAST(vt0.c0 AS INTEGER))), (((vt0.c1)) NOT BETWEEN (((vt0.c2 IN ()))) AND (('-1651702848'))), ((((vt0.c1) BETWEEN (x'') AND (vt0.c1)))+(((vt0.c0)LIKE(vt0.c2)))) FROM vt0; -- 0ms;
SELECT ALL (COUNT(*) IN ()) FROM vt0 WHERE ((((0.7582577783644973)) BETWEEN ((((x'') NOT BETWEEN (x'') AND (x'')))) AND (((('-164876869')LIKE(NULL)))))) GROUP BY vt0.c2; -- 0ms;
SELECT ALL ((((vt0.c1)AND(vt0.c1))) IS TRUE) FROM vt0; -- 0ms;
SELECT TRIM(vt0.c2 COLLATE RTRIM, vt0.c2 COLLATE NOCASE), ((((vt0.c0)||(vt0.c0)))<((~ (vt0.c1)))), 'k/' FROM vt0 WHERE ((((((x'')) BETWEEN (('-13263604')) AND (('-1165590255'))))/((x'' IN (-1651702848, '*|4'))))); -- 0ms;
SELECT DISTINCT ((((vt0.c2, vt0.c2, vt0.c1, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c2))) IN ()) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((((((((((NOT ('1843879286')))AND((- ('-1599715530')))))OR(NULL)))AND(x'' COLLATE BINARY)))AND((0xffffffffdeb28c94 IN (x''))))) LIMIT 1441915669; -- 0ms;
SELECT DISTINCT CASE WHEN 0.3434022258317253 THEN vt0.c1 END COLLATE NOCASE FROM vt0 WHERE (CASE WHEN ((0x2daeb74b) BETWEEN ('828712417') AND (NULL)) THEN ROUND(x'', x'') WHEN (NULL IN (x'bdd436cd')) THEN json_patch('0.607173548625399', NULL) WHEN '~9lX\n[_' THEN ((x'') BETWEEN (x'') AND (x'')) ELSE ((x'2ec9c79f') NOT BETWEEN ('-778154005') AND (0x194fa51c)) END) ORDER BY ((vt0.c1)>>(vt0.c0)) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST; -- 0ms;
SELECT ALL UPPER(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))), GROUP_CONCAT(UNLIKELY(vt0.c0)), RANK() OVER ( ORDER BY ((((((((LIKELIHOOD(DISTINCT vt0.c1, 0.47898216204469535))AND(CAST(vt0.c1 AS INTEGER))))OR(((vt0.c1)&(0.7229717927408834)))))OR(LIKELY('-145170234'))))OR(json_patch(vt0.c0, vt0.c1)))  NULLS FIRST) FROM vt0 WHERE (CAST(((x'')<(x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((vt0.c1)GLOB(vt0.c1)) IN ()) FROM vt0 WHERE (((((0.19091528924415102)OR(0x79c7f0df COLLATE BINARY)))AND(((x'') BETWEEN (0.7896430741917191) AND (x'0bf8'))))) LIMIT -621469445 OFFSET 444199261; -- 0ms;
SELECT DISTINCT ((AVG(vt0.c1))<<(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN '' ELSE vt0.c2 END)) FROM vt0 LIMIT -1033861648; -- 1ms;
SELECT LAG('-13263604', (((vt0.c1)IS(vt0.c2)) IN ()), (((vt0.c1)) BETWEEN ((((((((((vt0.c1)AND(0.11172716589080722)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))) AND ((x'c0bd')))) OVER () FROM vt0 ORDER BY ((vt0.c1)GLOB(vt0.c1)) COLLATE RTRIM ASC; -- 0ms;
SELECT -1.064141562E9 FROM vt0 WHERE (((((7.66424907E8)-(x''))) NOT BETWEEN (((x'') ISNULL)) AND ((+ (-1865603540))))) LIMIT -672219863 OFFSET -1599715530; -- 0ms;
SELECT ALL ((AVG(vt0.c0)) BETWEEN ((~ (-1.217982924E9))) AND (MAX(NULL))) FROM vt0 WHERE (RTRIM(x'')); -- 0ms;
SELECT ALL ((((AVG(vt0.c0))AND(TIME(vt0.c2, vt0.c0, vt0.c2))))OR(vt0.c2)) FROM vt0 ORDER BY (((('')OR(vt0.c1)))OR(vt0.c2)) COLLATE NOCASE DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((vt0.c1)>(vt0.c0))) AND ((((vt0.c1)) BETWEEN ((NULL)) AND ((vt0.c2))))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (''); -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE BINARY) BETWEEN (COUNT(*)) AND (CAST(vt0.c1 AS REAL))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL) FROM vt0; -- 1ms;
SELECT ((((vt0.c0) ISNULL)) NOTNULL), ((((vt0.c0)<<(vt0.c2)))-(AVG(vt0.c0))), CUME_DIST() OVER () FROM vt0 WHERE ((((0x490167de) NOT NULL) IN (((NULL) BETWEEN (-572789138) AND (1.224828894E9))))); -- 0ms;
SELECT (((298383091, vt0.c2, vt0.c2)) NOT BETWEEN (('', load_extension(vt0.c0), vt0.c1)) AND ((vt0.c0, ((vt0.c2) IS FALSE), ((vt0.c0)<(vt0.c2))))) FROM vt0; -- 0ms;
SELECT ((((((((TOTAL(vt0.c2))AND(vt0.c1 COLLATE BINARY)))AND(CAST(vt0.c2 AS TEXT))))AND(((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))))OR((vt0.c0 IN (vt0.c2, vt0.c1)))) FROM vt0; -- 0ms;
SELECT (((vt0.c1)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c1) IS TRUE)))) FROM vt0; -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (((vt0.c2) IS TRUE)) AND (MIN(vt0.c2))) FROM vt0 WHERE (UPPER('-1865603540') COLLATE BINARY) LIMIT -1171188961; -- 0ms;
SELECT DISTINCT (((vt0.c0)==(vt0.c0)) IN ()), CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC), TOTAL((- (vt0.c0))) OVER () FROM vt0 WHERE (((((NULL) NOT BETWEEN (NULL) AND (0xffffffff90cd262c)))<=(((((((((0.46943640475217885)AND('tCT9V8')))OR(x'1ded')))OR(x'')))AND('<V'))))) ORDER BY ((vt0.c0)!=(vt0.c0)) COLLATE BINARY  NULLS LAST; -- 0ms;
SELECT ALL (HEX(DISTINCT x'') IN ('1224828894', (vt0.c0 IN ()))), CAST(NULL AS NUMERIC), (((((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c1))))=((0.5304348743949169))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c1 IN ()))*(((vt0.c1)-(vt0.c2)))), CAST(COALESCE(DISTINCT NULL, vt0.c2, vt0.c2, vt0.c1) AS BLOB), (((vt0.c2)<(vt0.c1)) IN ()) FROM vt0 WHERE ((((CASE '-1095364252'  WHEN '-13263604' THEN 0Xfffffffff62c2dbb ELSE 0.28669902643804057 END))<=((((NULL) IS FALSE))))); -- 0ms;
SELECT ALL HEX((- (vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (vt0.c0 IN ()) THEN NULL WHEN ((vt0.c2) NOT NULL) THEN (vt0.c2 IN ()) WHEN (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN x'' ELSE ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT CASE x'5268'  WHEN LTRIM(x'', vt0.c0) THEN x'' END, ((((((((CASE '0.19091528924415102'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)AND(((vt0.c2)>=(0.11172716589080722)))))AND((((vt0.c2))>=((-220819269))))))OR(((vt0.c1)>=(vt0.c2)))))AND((vt0.c1 IN ()))), UPPER(DISTINCT (('-572789138')+(vt0.c0))) FROM vt0 WHERE (((((377642461)+(-13263604)))||(SQLITE_VERSION()))); -- 0ms;
SELECT ALL ((((vt0.c1)|(vt0.c2))) NOT NULL), CAST(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END AS INTEGER), (((((vt0.c1))=((vt0.c1))))>((vt0.c1 IN ()))) FROM vt0 GROUP BY (- (CAST(vt0.c0 AS INTEGER))) ORDER BY '_*%ᣠf8^'; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)>>(vt0.c1)) AS REAL) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (((x'', 0.19904867076226251, NULL)) NOT BETWEEN ((-1148172029, '', 0.7551934976183777)) AND ((NULL, 0xffffffffab8e23c8, '!Cm㹆'))), 0.8880594027720748)) GROUP BY JULIANDAY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ABS(vt0.c2), vt0.c0 COLLATE BINARY), ((vt0.c1) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC))), vt0.c1 HAVING CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS BLOB) LIMIT 1127936050; -- 0ms;
SELECT ALL ((COUNT(*)) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (HEX(x''))) FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))OR((((vt0.c2))<=((vt0.c1))))), (+ (0.49800656380247177)); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0; -- 0ms;
SELECT NULLIF(((vt0.c1) ISNULL), (~ (vt0.c0))) FROM vt0; -- 0ms;
SELECT NTH_VALUE(((((vt0.c0)>(x'159d')))AND(vt0.c1 COLLATE BINARY)), (((vt0.c1)) NOT BETWEEN ((((vt0.c0)>=(vt0.c1)))) AND ((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(0Xffffffffd7a8ce35) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT x'' FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c2) IS TRUE))OR(x'' COLLATE NOCASE)))AND((vt0.c2 IN (vt0.c1)))) FROM vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), (vt0.c1 IN ()), TRIM(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0))) FROM vt0 GROUP BY (((((vt0.c2 IN ()))OR('1925164330' COLLATE NOCASE)))OR(CAST(x'b575' AS NUMERIC))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0.6334446520653577 IN ()) IN ())); -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS TEXT)  WHEN (- (vt0.c0)) THEN NULLIF(vt0.c0, vt0.c0) WHEN AVG(vt0.c2) THEN (NULL IN (vt0.c1, vt0.c2)) WHEN 'x' THEN vt0.c0 COLLATE BINARY END FROM vt0 WHERE (((NULL COLLATE BINARY) IS FALSE)); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((NULL)&(NULL)) IN ((~ ('9.'))))); -- 0ms;
SELECT DISTINCT '-1533026070' FROM vt0 WHERE (((((((((((((-1.148172029E9 COLLATE RTRIM)AND((~ ('84 {x#氍Jk')))))AND(((NULL) BETWEEN ('	*4K&\rNm\r') AND ('-220819269')))))OR((('') NOT BETWEEN (NULL) AND (0.24365624661076246)))))AND(CAST('-VO-v' AS NUMERIC))))OR(x'25ae' COLLATE BINARY)))AND((('R')+(x'9b3b'))))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0 WHERE (((1.12793605E9 COLLATE RTRIM) BETWEEN ((((-449371378)) BETWEEN ((0.31585388294384376)) AND (('-701608920')))) AND ((('8t脑')+(0x6de75d76))))); -- 0ms;
SELECT ALL (vt0.c2 COLLATE BINARY IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c2)>=(vt0.c2)))OR(((vt0.c1)AND(vt0.c0)))))OR(TOTAL(vt0.c0))) FROM vt0 LIMIT 1146839333; -- 0ms;
SELECT DISTINCT (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 END IN ()) FROM vt0 WHERE (CASE WHEN CASE '-1148172029'  WHEN 'Eci㷝m_g' THEN x'' ELSE NULL END THEN (((0.6499988586955068))>((NULL))) END); -- 0ms;
SELECT CAST((vt0.c1 IN ()) AS TEXT) FROM vt0 WHERE (((CASE NULL  WHEN x'' THEN 0.5093159951235299 END) BETWEEN (((0.16938069037353776)>>('d<'))) AND (COALESCE(NULL, 'Pᅤ\nc')))); -- 1ms;
SELECT NULLIF(UPPER(vt0.c0), vt0.c0 COLLATE NOCASE) FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((('', vt0.c0, vt0.c1)) NOT BETWEEN (((~ (vt0.c2)), (((vt0.c1, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1))), ((((0.29414090243314517)OR(vt0.c2)))AND(vt0.c2)))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)||(-239314357))))) FROM vt0 LIMIT 281555968 OFFSET -164876869; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(x'126c', 0.48659555402092525))&(CASE WHEN 1051590699 THEN 2.81555968E8 END))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c1)*(vt0.c2))))  NULLS FIRST, (vt0.c2 COLLATE BINARY IN ())  NULLS FIRST, ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR((- (vt0.c1)))))AND(((((vt0.c1)AND(vt0.c2)))OR(vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT ALL vt0.c2, (((((vt0.c1)|(vt0.c0))))<=(((vt0.c1 IN ())))), ((CAST(vt0.c2 AS REAL))LIKE(((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)))) FROM vt0 LIMIT 1126865698 OFFSET -239314357; -- 0ms;
SELECT DISTINCT ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (((vt0.c0) NOTNULL)) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) FROM vt0 LIMIT 424650012; -- 0ms;
SELECT ALL (NOT (TIME(vt0.c2, vt0.c2, vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL LAST_VALUE(((vt0.c0 COLLATE NOCASE)+(((vt0.c1)LIKE(vt0.c1))))) OVER (), GROUP_CONCAT(((NULL) NOTNULL)), vt0.c1 FROM vt0 GROUP BY (((vt0.c0 IN ())) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ('-295582782')) HAVING ((((vt0.c2)>>(vt0.c0)))AND(((vt0.c1)%(vt0.c2)))); -- 1ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) NOT BETWEEN (((0.6424236690655111)||(vt0.c1))) AND (vt0.c2 COLLATE NOCASE)) FROM vt0 WHERE ((- (CASE WHEN NULL THEN 0.40638479883749146 END))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT NULL), ((((vt0.c2)OR(vt0.c2)))IS(vt0.c1 COLLATE NOCASE)), (((GROUP_CONCAT(vt0.c1)))>((HEX(DISTINCT vt0.c0)))) FROM vt0 WHERE ((((('1479298093') ISNULL))AND(((((NULL)AND(NULL)))OR(x''))))); -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))>>(((vt0.c1) IS TRUE))) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE BINARY) FROM vt0 WHERE (CAST(CAST('0.3434022258317253' AS REAL) AS REAL)); -- 0ms;
SELECT RANK() OVER (), (NOT ((NOT (vt0.c0)))), (((-261860330 IN (1524088968)))<(((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))) FROM vt0 LIMIT 2016124730; -- 0ms;
SELECT DISTINCT ((vt0.c0)/(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END)) FROM vt0 ORDER BY 553279980  NULLS FIRST, -1433587582 DESC, ((((vt0.c2))>=((vt0.c1))) IN (vt0.c0)) ASC  NULLS FIRST;SELECT (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c1, -261860330)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c2, vt0.c2))))) AND ((MAX(vt0.c2)))) FROM vt0 WHERE ((((-120844548 IN ())) NOT BETWEEN ((('-1148172029')LIKE(0X7bfc2ceb))) AND (1051590699))); -- 0ms;
SELECT ALL (((- (vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0) ISNULL))) FROM vt0 WHERE (CASE x'a7f4'  WHEN x'4e225b62' THEN x'a4e0' END COLLATE BINARY); -- 0ms;
SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))<((TRIM(vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE (+ (vt0.c2))  WHEN (~ (vt0.c1)) THEN TRIM(DISTINCT vt0.c0) ELSE ((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)) END, CAST(((((((((vt0.c1)OR('-449371378')))OR(NULL)))AND(x'')))OR(vt0.c2)) AS REAL), (((((((vt0.c0)AND(vt0.c2)))AND(vt0.c0))))>=((((vt0.c2) NOT NULL)))) FROM vt0 WHERE (((',~m N' COLLATE RTRIM) NOT BETWEEN ((NULL IN (x'a530'))) AND (CAST(0.3561655360054844 AS NUMERIC)))) ORDER BY (NULL IN (((vt0.c2) IS FALSE))) ASC  NULLS FIRST LIMIT -2047628989; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0) IS TRUE))) FROM vt0 WHERE (((json('-1487185201')) BETWEEN (CASE 0x259c101  WHEN x'7f62' THEN NULL END) AND (((0.8201917038422604)>>('sg1'))))); -- 0ms;
SELECT DISTINCT (((((vt0.c1, vt0.c0, vt0.c2))<((vt0.c2, vt0.c0, '''kB[')))) NOTNULL), ((((vt0.c1) IS FALSE))>>(IFNULL(vt0.c0, vt0.c1))), x'2e70' FROM vt0 WHERE (CASE WHEN json_valid(0.44850302539012765) THEN ((x'')+('420880962')) ELSE (((0.07903577521970873, x'', 0.47861759796980263, NULL, NULL, NULL, -7.78154005E8)) NOT BETWEEN (('0.49800656380247177', x'', '', NULL, x'', NULL, '1227571714')) AND ((x'', '', 377642461, x'', x'', x'', '2#'))) END); -- 0ms;
SELECT DISTINCT NTILE(vt0.c0 COLLATE BINARY) OVER () FROM vt0;SELECT DISTINCT 0.8655639738440907, (x'' IN (((((0.3552824158175256)AND(vt0.c0)))OR(vt0.c1)), (vt0.c0 IN (vt0.c1, vt0.c1)))), x'' FROM vt0 WHERE (CASE ((-1.64876869E8)|('-145170234'))  WHEN ((0.6817306791)OR('')) THEN (- ('')) WHEN CASE NULL  WHEN x'76bb' THEN NULL WHEN NULL THEN 'Eo' WHEN '-1527100418' THEN x'def6' END THEN 2075555443 WHEN ((((1452823404)OR(NULL)))OR('V')) THEN ((((x'')AND('')))OR(0xfffffffff2b4b516)) WHEN 0X501a508e THEN (NOT ('X긫\n25\r??|')) WHEN ((((((((((((((((0.9934984875934709)OR(0.8126569169075433)))OR(0.9445026459939827)))AND('X㢢㢢꺙>Tm')))AND(2.102022557E9)))OR('0,Q紆&')))OR(x'')))OR('-990640743')))AND('718705703')) THEN (x'2a74' IN ()) END); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(x'2174')))AND(vt0.c0))) IS TRUE) FROM vt0 WHERE (CAST((((('jQ>XtxUn')AND(NULL)))AND(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL))>=(vt0.c1)) FROM vt0 WHERE (((((NULL) NOTNULL)) BETWEEN ((+ (0.5692284593563045))) AND ((((NULL, x'86c7', '881008703', NULL, -1064141562))>=((NULL, '', -655098087, NULL, '766424907')))))); -- 0ms;
SELECT DISTINCT ((vt0.c2)OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE x'd582' END)) FROM vt0 WHERE (''); -- 0ms;
SELECT ((((vt0.c0) ISNULL)) BETWEEN ((NOT (vt0.c2))) AND (((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))) FROM vt0 GROUP BY vt0.c2 HAVING ((((((vt0.c0)==('-61685863')))OR(CAST(-623255643 AS TEXT))))OR(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)) ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE 0xffffffff89ac3bc5 END)LIKE(CAST(1.344960626E9 AS BLOB))) ASC; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0 WHERE (CAST((~ (0.7896430741917191)) AS BLOB)); -- 0ms;
SELECT ALL CAST(vt0.c0 COLLATE RTRIM AS BLOB) FROM vt0 WHERE (CAST(((('bt鵡w', '2V', 'IV'))<((0.9406593934187439, NULL, NULL))) AS INTEGER)); -- 1ms;
SELECT DISTINCT ((x'') BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((('424650012')|(NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((vt0.c1) ISNULL) FROM vt0 NOT INDEXED WHERE ((~ ((- (NULL))))) GROUP BY (((((vt0.c1, vt0.c0, vt0.c1, vt0.c2, vt0.c2))<=(('-981453069', vt0.c0, vt0.c1, vt0.c2, vt0.c0))))<(vt0.c1)) HAVING vt0.c2; -- 0ms;
SELECT DISTINCT CASE WHEN (((('')OR(vt0.c2)))OR(vt0.c2)) THEN TOTAL_CHANGES() WHEN ((vt0.c1) IS TRUE) THEN HEX(vt0.c1) WHEN '0.19091528924415102' THEN ((vt0.c1) ISNULL) END FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((vt0.c1)AND(vt0.c1)))AND(vt0.c2))) FROM vt0; -- 0ms;
SELECT ALL COALESCE(AVG(vt0.c0), vt0.c1, vt0.c2 COLLATE BINARY, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) FROM vt0 GROUP BY (((~ (vt0.c0)))>((vt0.c1 IN (vt0.c1, x'')))) HAVING ((((vt0.c0)LIKE(vt0.c1)))&(json_insert(vt0.c1, vt0.c0, vt0.c1)));SELECT ALL ((((-164480787) BETWEEN (vt0.c0) AND (vt0.c1)))IS NOT(CAST(vt0.c0 AS NUMERIC))), CASE ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c1)IS(vt0.c1)) THEN ((vt0.c1)=(x'0eb1')) END, vt0.c0, CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS TEXT), CASE WHEN COUNT(vt0.c2) THEN ((vt0.c0)*(vt0.c0)) ELSE vt0.c0 END FROM vt0 WHERE ((((((NULL, ' ^', '188961339'))<>((x'3b7c', '1620852189', 0xffffffffbeb61164))))LIKE(CASE x''  WHEN 0.6463692810129317 THEN 0.3561655360054844 END))); -- 1ms;
SELECT DISTINCT 0.7941717562551346 FROM vt0 ORDER BY vt0.c2 COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT SUM(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END) FROM vt0 WHERE (UPPER(-1527100418 COLLATE NOCASE)); -- 0ms;
SELECT json_quote(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END) FROM vt0 WHERE ((((0.19091528924415102, 0.6460249687469695, x'')) NOT BETWEEN (((((x''))>((0.7896430741917191))), (((NULL))<((x''))), CAST(x'' AS TEXT))) AND ((((-5486001)<=(0.11333641220005564)), (((151511594)) BETWEEN (('>NsAE鐧W}')) AND ((0x72bfad2a))), (('-1361598856') ISNULL))))); -- 0ms;
SELECT ALL (+ ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT (- (MAX(vt0.c1))) FROM vt0 WHERE (((NULL COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT ((x'07d6')*(json_remove(vt0.c1, vt0.c1))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)) COLLATE RTRIM, ROW_NUMBER() OVER () FROM vt0 ORDER BY CAST((- (vt0.c2)) AS REAL) DESC;SELECT ALL (((~ (vt0.c2)))<>((((vt0.c0, 0.9445026459939827, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))), ((- (vt0.c2)) IN ()), CAST(vt0.c1 AS TEXT) COLLATE RTRIM FROM vt0 WHERE (((((-1246252022) NOT BETWEEN (-1.148172029E9) AND ('-220819269'))) BETWEEN ((NOT (x''))) AND ('湛tJ#_' COLLATE NOCASE))); -- 0ms;
SELECT ((((0.21542659748240933)AND(JULIANDAY(vt0.c1, vt0.c0, vt0.c0))))OR((~ (vt0.c0)))), LAST_VALUE(CAST(((vt0.c1)<=(vt0.c1)) AS REAL)) OVER (), (((vt0.c0 IN (vt0.c2, vt0.c2))) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)) COLLATE NOCASE COLLATE NOCASE, ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) ISNULL), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL NTILE(((((NOT (0X502a7872))))>((vt0.c0 COLLATE BINARY)))) OVER ( ORDER BY ((((vt0.c2)LIKE(vt0.c0))) BETWEEN (((vt0.c0)-(vt0.c2))) AND (((vt0.c2)*(vt0.c2)))) DESC  NULLS LAST, CAST(((vt0.c0) NOT NULL) AS TEXT)) FROM vt0 WHERE (((((('-1722288363'))=(('i5䤃75^/Gm'))))%(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (+ (0.6424236690655111)) FROM vt0 WHERE ((('')/(x'')) COLLATE RTRIM) LIMIT 492349728; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 1ms;
SELECT DISTINCT (((vt0.c0 IN ()))>=(((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))) FROM vt0 WHERE (((CAST(0.47861759796980263 AS BLOB))=(((0X5ad7c088) NOT NULL)))) LIMIT 1208128601 OFFSET -1533026070; -- 0ms;
SELECT ((0.8575994977958228)&('')) FROM vt0 WHERE (((((((NULL) NOT NULL))OR(0Xffffffffa3bc0824)))AND((((('-1009866663')OR(0x194fa51c)))OR(0xffffffff8ac87504))))); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((((vt0.c1)IS(vt0.c2)))&(0.5432692873541226))) OVER ( PARTITION BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END) IS FALSE), ((((((vt0.c1) ISNULL))OR(CAST(vt0.c2 AS BLOB))))AND(((vt0.c0)LIKE(vt0.c1))))) FROM vt0; -- 0ms;
SELECT ALL AVG((((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c0, vt0.c1, '828712417')) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c2)))) OVER () FROM vt0; -- 0ms;
SELECT TRIM(((('m\n/'))>((vt0.c1))), ((vt0.c2)>(vt0.c0))) FROM vt0 GROUP BY ((((~ (vt0.c2))))>((vt0.c2 COLLATE NOCASE))) LIMIT 799097344 OFFSET 1671150504; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (UNLIKELY(DISTINCT HEX(DISTINCT 0.3332573437898396))); -- 0ms;
SELECT DISTINCT ((TIME(vt0.c0, vt0.c0, vt0.c1))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)))) FROM vt0 ORDER BY (((0.0978705915496565)) NOT BETWEEN ((json_insert(0.7582577783644973, vt0.c0, vt0.c2, vt0.c1, vt0.c2))) AND ((CASE WHEN vt0.c1 THEN vt0.c2 END))) DESC  NULLS FIRST;SELECT ((vt0.c2)||(LOWER(vt0.c2))) FROM vt0 WHERE ('1620852189'); -- 0ms;
SELECT (('420880962') IS FALSE) FROM vt0 WHERE (((1843879286 COLLATE NOCASE)IS(((0.9934984875934709) NOTNULL)))); -- 0ms;
SELECT ((vt0.c1) NOT NULL) COLLATE RTRIM, ((vt0.c2)>=(CAST(vt0.c0 AS BLOB))), NTH_VALUE(CAST(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END AS BLOB), (((NOT (vt0.c2))) BETWEEN ((~ (vt0.c1))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0)))) OVER ( ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE x'' END) IS FALSE)  NULLS FIRST) FROM vt0; -- 0ms;
SELECT LIKELY(vt0.c2) FROM vt0; -- 1ms;
SELECT DISTINCT (((NOT (vt0.c2))) NOTNULL), ((((+ (vt0.c2))))>((0.1692043064411035))), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) ISNULL) FROM vt0 WHERE (((0.4471083083191095) ISNULL)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE NO OTHERS) FROM vt0 LIMIT -164876869 OFFSET -1487185201; -- 0ms;
SELECT CASE WHEN (vt0.c0 IN ()) THEN (vt0.c1 IN ()) ELSE UPPER(DISTINCT vt0.c0) END FROM vt0 ORDER BY (NOT ((NOT (vt0.c1))))  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c2) IS FALSE) COLLATE RTRIM) FROM vt0 GROUP BY ((((vt0.c1)!=(vt0.c2)))IS NOT((- (vt0.c2)))); -- 0ms;
SELECT ((vt0.c2) BETWEEN (IFNULL(vt0.c2, vt0.c1)) AND (((((vt0.c2)OR(vt0.c2)))OR(vt0.c0)))) FROM vt0 GROUP BY ((((CASE 0.7883374992649409  WHEN vt0.c2 THEN vt0.c0 ELSE 'QoteVH?뉧វ' END)OR((~ (vt0.c2)))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END)) HAVING ((CASE WHEN vt0.c1 THEN vt0.c2 END) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT ((((((vt0.c0) ISNULL))AND(((vt0.c0)!=(vt0.c1)))))OR((~ (vt0.c1)))) FROM vt0 WHERE (((((((((((x'') IS FALSE))OR(CAST(NULL AS INTEGER))))OR(x'' COLLATE BINARY)))AND(((x'da2d') NOT NULL))))AND(((NULL) NOT NULL)))); -- 0ms;
SELECT ALL ((vt0.c0 IN ('-261860330')) IN ()), -1e500, vt0.c0 FROM vt0; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))+(((0.9608969123067281)|(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)*(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(NULL)))))AND(((0.22076031232513826) NOTNULL))))OR(LAST_INSERT_ROWID())))AND((vt0.c2 IN ()))), 'II', ((((((((vt0.c1 COLLATE NOCASE)OR(NULL)))AND(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))), (~ (UPPER(vt0.c1))), (+ ((vt0.c0 IN ()))) FROM vt0 WHERE (CAST(NULL AS TEXT) COLLATE RTRIM) UNION ALL SELECT DISTINCT (NOT (vt0.c0 COLLATE BINARY)), NTILE((((vt0.c1)) NOT BETWEEN ((')s')) AND ((json_array_length(vt0.c0))))) OVER ( PARTITION BY (((('-371058954')OR(-3.71058954E8)))OR(vt0.c1)) COLLATE NOCASE, CAST(CAST(vt0.c1 AS TEXT) AS NUMERIC)), ((COALESCE(DISTINCT vt0.c2, x'', vt0.c2, vt0.c1)) IS TRUE), ((DATE(vt0.c0, '', vt0.c0)) NOT BETWEEN (((vt0.c2)/(vt0.c0))) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))), vt0.c1 FROM vt0;SELECT CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c1) NOTNULL) END FROM vt0 GROUP BY ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)))/(x'cc06')) HAVING SUM(TRIM(DISTINCT vt0.c1, vt0.c0)) LIMIT -1720347846 OFFSET -780656989; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0)))>((+ (vt0.c0)))) FROM vt0 WHERE (COALESCE((((('')AND('-1511554458')))OR(347906473)), CASE WHEN -1.3263604E7 THEN 'lMf' END)); -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c1 AS BLOB))OR(CAST(')[BIvw' AS REAL))))AND(NULL COLLATE RTRIM)) FROM vt0 LIMIT -1651702848; -- 1ms;
SELECT ALL (((vt0.c2) ISNULL) IN ()), AVG(((0.5245792121039349) NOT BETWEEN (vt0.c2) AND (vt0.c0))) OVER (), (+ (vt0.c2)) FROM vt0 LIMIT 1329710180 OFFSET 2020761683; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c1 AS REAL) THEN (vt0.c1 IN ()) WHEN (vt0.c1 IN ()) THEN CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END WHEN vt0.c2 COLLATE RTRIM THEN ((('1869328999'))!=((vt0.c2))) ELSE (((vt0.c0))>=((vt0.c0))) END, GROUP_CONCAT((+ (vt0.c1))) OVER (), x'' FROM vt0 WHERE (''); -- 0ms;
SELECT ALL CASE ((vt0.c1) IS TRUE)  WHEN ((('0.5304348743949169'))==((vt0.c0))) THEN (- (vt0.c0)) ELSE (- (vt0.c0)) END, (((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))OR(0Xffffffffe537230e)) IN (((vt0.c1)GLOB(vt0.c0)), json_quote(vt0.c2))), (((NOT (vt0.c0))) BETWEEN ((- (-353033001))) AND (((vt0.c0)=(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT MIN((vt0.c1 IN ())), ((COUNT(vt0.c2))&(vt0.c0 COLLATE BINARY)), MIN(CASE vt0.c1  WHEN x'7d19' THEN vt0.c1 END) FROM vt0 WHERE ((((((((((NULL IN ()))OR(CAST(x'' AS BLOB))))AND((((0.8876389656303421)) NOT BETWEEN ((x'')) AND ((NULL))))))OR(0.8456586771896064)))OR(CAST('' AS TEXT)))); -- 0ms;
SELECT ALL (('1479298093') NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-1361598856' WHEN vt0.c0 THEN vt0.c2 END)), (((((vt0.c0)>=(vt0.c1))))=((CAST(vt0.c1 AS INTEGER)))), COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN (CASE WHEN x'' THEN 0.894118649238808 WHEN '-VO-v' THEN 0.14299003545790778 WHEN 0X556bc504 THEN '0.9608969123067281' END) AND ((NULL IN ())))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN NULL ELSE vt0.c2 END))  NULLS FIRST, LIKE(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c2)<(vt0.c1))) DESC  NULLS LAST LIMIT -203286304 OFFSET 14203782; -- 4ms;
SELECT DISTINCT (~ ((((0.5503014114890701)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) FROM vt0 WHERE ((+ ((((x'')) BETWEEN ((0.35444039587504916)) AND ((0.5845978296065123)))))); -- 0ms;
SELECT SUM(0.20918474087122507) FROM vt0 WHERE (CAST(CASE WHEN 'w' THEN 0xffffffffa1501282 END AS INTEGER)); -- 0ms;
SELECT DISTINCT CHAR((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))), vt0.c2), ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ('^M') AND ((0.7582577783644973 IN ()))), ((((NULL)AND(CASE vt0.c2  WHEN vt0.c1 THEN '?]' END)))AND(NULL)) FROM vt0; -- 0ms;
SELECT ALL vt0.c1 FROM vt0 GROUP BY 0.2739955577710924, ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE x'' END)>>(vt0.c2 COLLATE BINARY)), '-1797349246' COLLATE NOCASE HAVING CAST(vt0.c1 AS REAL) COLLATE BINARY; -- 0ms;
SELECT DISTINCT LEAD(((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) IS TRUE), (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))), (vt0.c2 IN ()) COLLATE NOCASE) OVER () FROM vt0 ORDER BY ((NULL)<<(vt0.c2)) COLLATE RTRIM ASC; -- 0ms;
SELECT (((((vt0.c0) IS TRUE), (~ (vt0.c2)), LTRIM(vt0.c0)))<>((vt0.c0 COLLATE NOCASE, x'f8c39867', JULIANDAY(vt0.c2, vt0.c0, vt0.c1)))) FROM vt0 WHERE (((NULL) IS TRUE)); -- 0ms;
SELECT ALL CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) FROM vt0 WHERE ('o{'); -- 0ms;
SELECT LAST_VALUE((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<((IFNULL(NULL, vt0.c1))))) OVER ( ORDER BY (~ (vt0.c1))  NULLS LAST, ((vt0.c1) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))) FROM vt0 LIMIT 1224296231 OFFSET 2059302294; -- 0ms;
SELECT ALL (((vt0.c1))<=(((((vt0.c2))>((vt0.c2)))))) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c1 IN ()))OR(GLOB(vt0.c2, vt0.c2))))OR(((vt0.c0)>>(vt0.c0)))) FROM vt0 GROUP BY ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END)LIKE(UPPER(vt0.c0))); -- 0ms;
SELECT CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS NUMERIC) FROM vt0 GROUP BY (((((vt0.c1))<>((vt0.c1)))) IS FALSE) HAVING (((~ (vt0.c0))) NOTNULL) LIMIT 1922185931; -- 0ms;
SELECT json_array((((vt0.c1, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c2, vt0.c2))), ((vt0.c2)<(vt0.c2))) FROM vt0 WHERE ((((x'36f5' IN (x''))) IS TRUE)); -- 0ms;
SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))*(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), COUNT(NULL), (NULL IN ()) FROM vt0 ORDER BY RTRIM(((vt0.c1)LIKE(vt0.c2)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((vt0.c2)>('298383091')) FROM vt0 WHERE ((((0.6460249687469695))<>(('97O7sS28'))) COLLATE NOCASE) ORDER BY (HEX(DISTINCT vt0.c2) IN ()); -- 3ms;
SELECT DISTINCT ((((vt0.c0)<(vt0.c0))) IS FALSE), NTH_VALUE((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((x''))), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))) AND ((MIN(vt0.c1, vt0.c1), ((vt0.c1) IS TRUE), ((0.4608028858461404)*(vt0.c0))))), TRIM(DISTINCT (((vt0.c2))>=((vt0.c0))))) OVER (), ((MIN(vt0.c0))>=(((vt0.c1)IS NOT(vt0.c2)))) FROM vt0 WHERE (CAST(((((0.9177681707409169)AND(NULL)))OR(1267243946)) AS NUMERIC)); -- 1ms;
SELECT vt0.c0 FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END)>=(((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)))) FROM vt0 WHERE (TYPEOF(((x'')LIKE(0.7403247633149003)))); -- 0ms;
SELECT DISTINCT ((vt0.c1)-(((vt0.c1)<=(0.92463282633216)))) FROM vt0 WHERE (x'') ORDER BY LIKELIHOOD(DISTINCT vt0.c0 COLLATE BINARY, 0.9880030335022656); -- 0ms;
SELECT ALL ((-558723948)+(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)), TRIM(CASE WHEN 0.7582577783644973 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END), TOTAL(TOTAL(vt0.c2 COLLATE NOCASE)), ((COALESCE(DISTINCT vt0.c0, vt0.c2)) IS FALSE), (((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))))>((((vt0.c1) IS TRUE)))) FROM vt0 WHERE (((UNLIKELY(DISTINCT x'943b'))GLOB(('1334262282' IN ()))));SELECT DISTINCT x'b3bf', ((((((vt0.c0))<>((vt0.c1)))))<((vt0.c0))), ((((((vt0.c1)LIKE(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE vt0.c1 COLLATE BINARY  WHEN ((0.9370964933124191) IS TRUE) THEN ((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)) WHEN ABS(DISTINCT vt0.c1) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END WHEN ((vt0.c2) IS TRUE) THEN vt0.c0 WHEN CAST('410804281' AS REAL) THEN NULL WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE SUM(vt0.c2) END, ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)))-(((((vt0.c2)OR(182689854)))OR(vt0.c2)))), ((LENGTH(vt0.c1))IS NOT((((vt0.c2))==((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT LAG(CAST(UNLIKELY('-1527100418') AS BLOB), TYPEOF(DISTINCT NULLIF(vt0.c1, vt0.c0)), HEX(DISTINCT vt0.c2 COLLATE RTRIM)) OVER ( ROWS  UNBOUNDED PRECEDING), MAX('718550455'), (((((('-1494225087', vt0.c2, vt0.c2))==((vt0.c0, vt0.c1, vt0.c2)))))<((((vt0.c0)*(vt0.c2))))) FROM vt0 WHERE ((((0.5932208056521693)>>('-410279819')) IN ())); -- 0ms;
SELECT DISTINCT ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (((((((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(0x219e3c94)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))) FROM vt0 WHERE ((~ (0.11506983071830468))); -- 0ms;
SELECT DISTINCT (((((~ (vt0.c2)))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(SQLITE_SOURCE_ID())), ((((((((LAST_INSERT_ROWID())AND(((vt0.c1) IS TRUE))))AND(json_extract(vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c2))))OR(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))AND(((vt0.c0)<=(vt0.c0)))), (- (vt0.c0)) FROM vt0 WHERE (COALESCE('', 'NywUjm*U', 1.051590699E9, 0x5f575320) COLLATE NOCASE); -- 0ms;
SELECT GROUP_CONCAT(((((vt0.c2)OR(vt0.c1)))AND(vt0.c2)) COLLATE BINARY) OVER (), MIN(((vt0.c2)||(vt0.c1))), CAST(CASE WHEN vt0.c0 THEN -1.165590255E9 ELSE '-1165590255' END AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY (CAST(vt0.c0 AS BLOB) IN (((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)), ((vt0.c1)<=(vt0.c2)))) DESC) FROM vt0; -- 0ms;
SELECT ((((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c2)))==(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c1)))) FROM vt0 WHERE (((CAST('<V' AS BLOB))IS(((((0.8976757170508767)OR(x'')))AND(NULL))))); -- 0ms;
SELECT (+ (((vt0.c0)OR(vt0.c1)))) FROM vt0 WHERE (CAST(CASE WHEN x'' THEN x'' END AS REAL)); -- 1ms;
SELECT DISTINCT ((UNLIKELY(vt0.c1))AND((vt0.c1 IN ()))), CAST(vt0.c1 AS INTEGER) COLLATE BINARY, ((((vt0.c0)<<(vt0.c2)))&((((x'b4cc', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.3864675440266422)) AND ((vt0.c2, x'', vt0.c0))))) FROM vt0 ORDER BY ((2050619661) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c2)IS(vt0.c1)))) ASC  NULLS FIRST; -- 0ms;
SELECT ((((vt0.c1)<=(vt0.c1)))IS(SUM(vt0.c1))) FROM vt0 WHERE (TRIM(DISTINCT CAST('2080124139' AS REAL))); -- 0ms;
SELECT DISTINCT (vt0.c2 COLLATE NOCASE IN ()), (((NOT (vt0.c0)))LIKE(vt0.c0)), (((((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))OR(((vt0.c2)<=(vt0.c2)))))AND(vt0.c2)) FROM vt0 WHERE ((NOT (TRIM(-6.23255643E8)))); -- 4ms;
SELECT DISTINCT ((((vt0.c2)>>(vt0.c0))) BETWEEN ((+ (vt0.c2))) AND (((vt0.c2) NOT NULL))) FROM vt0; -- 0ms;
SELECT (~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))), ((vt0.c2)GLOB(((vt0.c2)<<(vt0.c1)))), vt0.c1 FROM vt0 WHERE ((((0xffffffffda48386e)) NOT BETWEEN (((('-1433323861') NOT BETWEEN (0.8976757170508767) AND (NULL)))) AND ((('1121390573' IN ()))))); -- 0ms;
SELECT DISTINCT ((((LIKELY(vt0.c1))AND(x'ca23')))AND((NOT (vt0.c1)))) FROM vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((- (x''))) AND (COUNT(*))) FROM vt0 LIMIT 864065040; -- 0ms;
SELECT DISTINCT (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) FROM vt0 WHERE ((((((x'' IN ('-1820175763')))OR((((0.34090828887002966)) BETWEEN (('0,Q紆&')) AND ((NULL))))))AND(((x'3d7f') ISNULL)))) ORDER BY (((((vt0.c2))<>((vt0.c0))))!=(((vt0.c0) BETWEEN (vt0.c0) AND ('1051590699'))))  NULLS LAST, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((vt0.c1 IN ()) IN ()), LEAD((NOT (0.8738641826491055 COLLATE BINARY)), ((((((((((vt0.c2)AND(vt0.c2)))AND(((0Xa271ae9) NOTNULL))))OR(LIKE(vt0.c2, vt0.c1))))OR(((vt0.c1) NOTNULL))))OR((((vt0.c1, vt0.c2, vt0.c1))==((vt0.c2, vt0.c0, vt0.c2))))), json_object(((vt0.c2) NOT BETWEEN (vt0.c1) AND (0.8864997301221096)), ((vt0.c1)==(vt0.c2)))) OVER (), ((((vt0.c2) BETWEEN (0.9481493628533223) AND (vt0.c0)))||(COUNT(*))), ((((vt0.c2)LIKE(vt0.c1)))>=(CAST(x'' AS INTEGER))), ((COUNT(vt0.c0)) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) AND (CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)) FROM vt0 WHERE (CAST(0X2436a373 AS BLOB) COLLATE RTRIM) GROUP BY (((((vt0.c1))>((vt0.c0))))/(CAST(vt0.c0 AS TEXT)));SELECT DISTINCT CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN x'f9c5' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC), (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)), (+ (x''))))==(((0.9914489807894674 IN (vt0.c0, vt0.c0)), json_quote(vt0.c1), ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c2))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT (CASE vt0.c2  WHEN '-834606757' THEN vt0.c1 ELSE vt0.c1 END IN (0.42036391144966334, ((vt0.c0)GLOB(vt0.c2)))), ((((vt0.c2)<=(vt0.c0))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (x'')), (NOT (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0, (((vt0.c0) IS FALSE) IN ()), COUNT(*) OVER ( ORDER BY UPPER(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) DESC) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((+ (0.7746715887687514)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)))) FROM vt0 GROUP BY CAST((- (vt0.c2)) AS TEXT); -- 0ms;
SELECT DISTINCT ((x'a617' COLLATE NOCASE)LIKE((vt0.c1 IN (vt0.c2)))) FROM vt0 LIMIT 459096279; -- 0ms;
SELECT ALL ((vt0.c0 COLLATE BINARY)=(x'')), (NOT (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)), (+ (AVG(8.28712417E8))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2)|(vt0.c1)))||((((vt0.c2)) BETWEEN ((vt0.c2)) AND (('	*1'))))) FROM vt0 WHERE ('ᣠB') LIMIT -295582782; -- 0ms;
SELECT ALL (((((vt0.c2)>>(vt0.c0)), COUNT(vt0.c1), ((vt0.c2) NOTNULL)))<=((AVG(vt0.c0), (vt0.c0 IN ()), x''))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c2  WHEN vt0.c2 THEN x'' ELSE vt0.c0 END)>(vt0.c2)) FROM vt0; -- 1ms;
SELECT DISTINCT ((((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN x'02cc0a85' THEN vt0.c1 ELSE vt0.c1 END)AND(vt0.c0)))OR(((-1.20844548E8) NOT NULL))), (vt0.c0 IN (('1091928929' IN ()))), ABS(DISTINCT vt0.c0) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT json_object(vt0.c1, (('ᣠB')&(219887192)), MIN(vt0.c1), CAST(vt0.c2 AS REAL)), ((((((vt0.c2)AND(vt0.c2)))OR(vt0.c2))) NOTNULL), ((((vt0.c0)/(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (((((vt0.c2)OR(vt0.c2)))OR(vt0.c0)))) FROM vt0;SELECT ALL LAST_VALUE(((((vt0.c1)*(vt0.c1))) BETWEEN (vt0.c2 COLLATE BINARY) AND (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((0X143e8603) NOT NULL), AVG(x'3558'), 'hK2i,' FROM vt0; -- 0ms;
SELECT DISTINCT (- (CHANGES())) FROM vt0 WHERE (CAST(0.29134745636118 COLLATE RTRIM AS REAL)); -- 0ms;
SELECT ((((CAST(vt0.c2 AS NUMERIC))AND((NOT (vt0.c2)))))OR(vt0.c2 COLLATE BINARY)), SUM(CAST(vt0.c0 AS TEXT)) OVER ( PARTITION BY CASE ((vt0.c0) ISNULL)  WHEN ((((vt0.c1)AND(vt0.c1)))AND('~[h?')) THEN ((vt0.c0)>(vt0.c2)) WHEN HEX(vt0.c2) THEN '-1487185201' WHEN (NOT (vt0.c2)) THEN ((vt0.c2)>(vt0.c0)) WHEN ((vt0.c1)|(vt0.c2)) THEN (vt0.c0 IN ()) WHEN vt0.c2 THEN CAST(vt0.c2 AS BLOB) ELSE (vt0.c0 IN (vt0.c1)) END, vt0.c2), vt0.c0 FROM vt0 LIMIT 1677112106; -- 0ms;
SELECT DISTINCT CAST(vt0.c1 AS BLOB) FROM vt0 WHERE (LOWER(DISTINCT ((NULL) NOTNULL))); -- 1ms;
SELECT DENSE_RANK() OVER ( ORDER BY (('RU16rDᮕh}')OR(vt0.c2)) ASC, '2'  NULLS LAST) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c2)) NOT BETWEEN ((((vt0.c0)GLOB(vt0.c2)))) AND (((~ (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT MAX(((vt0.c0)IS(vt0.c1))) FROM vt0 WHERE (0.939746307003004); -- 0ms;
SELECT ALL ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END) NOT NULL), (~ ((vt0.c2 IN (vt0.c1)))), (- (((vt0.c2) NOT NULL))), LAST_VALUE(vt0.c2) OVER (), ((vt0.c0)<=(vt0.c2)) FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((vt0.c0)&(vt0.c1)))>=(((vt0.c0)/(vt0.c0)))), '0e됊JYfj퟾,', ((vt0.c2) IS TRUE) COLLATE RTRIM FROM vt0 WHERE ((((397052638, NULL, x'')) BETWEEN ((CAST(x'4da1' AS TEXT), CAST(x'e9b0' AS TEXT), ((0.9324217865741138)>>('w(nD.K')))) AND (((('X㢢㢢꺙>Tm') BETWEEN ('Wವ') AND (1206442322)), 0Xffffffff9957f715 COLLATE NOCASE, (('-120844548') BETWEEN (-2.20819269E8) AND (0x432f4491)))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((LOWER(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c2))) AND (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (424650012); -- 0ms;
SELECT DISTINCT CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c1)LIKE(vt0.c2)) ELSE ((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)) END FROM vt0; -- 1ms;
SELECT ALL ((((CASE WHEN vt0.c2 THEN vt0.c2 END)AND(((vt0.c1)LIKE(vt0.c1)))))OR((+ (vt0.c0)))) FROM vt0 WHERE ((((('1754474301')&(''))) NOT BETWEEN ((NULL IN ())) AND (x'9851' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c2))) BETWEEN (-1620529462) AND (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (HEX(NULL) COLLATE NOCASE); -- 0ms;
SELECT ((vt0.c0 IN ()) IN (((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)), x'')) FROM vt0 GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0 WHERE (CASE WHEN ((x'7f57') BETWEEN (0.5981057088744425) AND (NULL)) THEN ((0.92463282633216) NOTNULL) ELSE HEX(DISTINCT NULL) END); -- 0ms;
SELECT ALL (((vt0.c0 IN ())) NOT NULL), ((((((((CAST(vt0.c0 AS NUMERIC))OR(((((((((NULL)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c2)))))AND(((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))))OR(LOWER(DISTINCT vt0.c2))))AND(CAST(vt0.c2 AS INTEGER))), CUME_DIST() OVER () FROM vt0; -- 0ms;
SELECT ALL (vt0.c2 COLLATE RTRIM IN ()), vt0.c1, CASE WHEN (~ ('TRUE')) THEN ((vt0.c1)&(vt0.c0)) END FROM vt0; -- 0ms;
SELECT NULL FROM vt0 WHERE (LIKELIHOOD(LOWER(DISTINCT 'VJ'), 0.1251551081322353)) LIMIT 66262776; -- 0ms;
SELECT DISTINCT '茫*⪆>_', ((TOTAL(vt0.c1))AND(((((vt0.c2)OR(vt0.c0)))OR(NULL)))), vt0.c1, MIN(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))), ((((vt0.c1))>=((vt0.c2))) IN ((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))), ((vt0.c0 COLLATE BINARY)/(IFNULL(DISTINCT vt0.c2, vt0.c1))), CASE MAX(vt0.c2)  WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c2)|(vt0.c0)) END FROM vt0 NOT INDEXED WHERE (((HEX(NULL)) IS TRUE)); -- 0ms;
SELECT ALL ((((MAX(vt0.c2))AND(NULLIF(DISTINCT vt0.c2, 0.45508888048030627))))OR(MIN(vt0.c2))) FROM vt0 ORDER BY ((((((vt0.c1) NOTNULL))AND(vt0.c2)))AND(CASE WHEN vt0.c2 THEN vt0.c2 END)); -- 1ms;
SELECT DISTINCT ((json_array_length('<*'))IS NOT((((vt0.c2))==((vt0.c2))))) FROM vt0 LIMIT 347451180 OFFSET -1126181167;SELECT DISTINCT 0.7901742988304093 COLLATE BINARY FROM vt0; -- 0ms;
SELECT SUM(vt0.c1 COLLATE RTRIM) OVER ( PARTITION BY CAST(((vt0.c2)IS(0.064013062442971)) AS INTEGER), (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) FROM vt0 GROUP BY ((x'')*(((vt0.c2)<(vt0.c1)))); -- 0ms;
SELECT ALL CASE 1126865698  WHEN ((vt0.c1)<<(vt0.c0)) THEN '0.11172716589080722' END FROM vt0 WHERE (CASE WHEN ((0.2528777122563203)<=('n')) THEN LIKELY(DISTINCT 0.6051652042271365) WHEN (~ ('1671150504')) THEN (('2110036409') BETWEEN (x'') AND (NULL)) WHEN ((((x'')OR(0.7340962647892685)))OR(0.9861659781489404)) THEN CAST('' AS REAL) ELSE COALESCE('XM''', x'') END); -- 0ms;
SELECT DISTINCT x'' FROM vt0 ORDER BY vt0.c2  NULLS LAST; -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END))<=((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))), ((((((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)AND(((vt0.c1)/(0xffffffffd62e4c28)))))AND(vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND((vt0.c1 IN (vt0.c2)))), ((CAST(vt0.c1 AS REAL))<=((vt0.c1 IN ()))) FROM vt0 WHERE ((- (CAST(x'' AS REAL)))) GROUP BY (((vt0.c0)IS NOT('1193988619')) IN ()) HAVING ((0.5755616590562199)*(SUM(vt0.c0))); -- 0ms;
SELECT CASE WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END END, ((((((vt0.c2) NOT BETWEEN (x'') AND ('')))OR(vt0.c1)))AND((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))), ((~ (vt0.c2)) IN (((vt0.c0)>=(vt0.c0)))) FROM vt0 WHERE (((NOT (x'')) IN (x''))); -- 0ms;
SELECT ALL ((vt0.c2 COLLATE RTRIM) NOT BETWEEN (HEX(vt0.c1)) AND (((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)))), (+ (vt0.c2)) COLLATE RTRIM, (((vt0.c2, vt0.c2, vt0.c1)) BETWEEN (((vt0.c0 IN ()), (+ (vt0.c1)), MAX(vt0.c1))) AND ((((vt0.c1) NOT NULL), ((vt0.c1) NOTNULL), ((vt0.c0)IS NOT(vt0.c1))))) FROM vt0; -- 0ms;
SELECT CASE SUBSTR(vt0.c0, vt0.c0)  WHEN TYPEOF(DISTINCT vt0.c1) THEN (((vt0.c2, vt0.c2, vt0.c1, vt0.c1, vt0.c1))<((vt0.c1, vt0.c1, vt0.c0, NULL, NULL))) END FROM vt0; -- 0ms;
SELECT vt0.c1, (((vt0.c1)) NOT BETWEEN ((0.26850002190381017)) AND (((- (x'3bdd'))))), AVG(CASE WHEN 0.07285659829845326 THEN vt0.c0 ELSE vt0.c1 END) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)<<(vt0.c0)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0, vt0.c2, vt0.c1)) BETWEEN ((COALESCE(DISTINCT 0.09278097250765416, vt0.c2, vt0.c1, '0.8876389656303421'), ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c2)), (vt0.c1 IN ()))) AND ((vt0.c1 COLLATE NOCASE, (- (vt0.c0)), (vt0.c2 IN (vt0.c2))))) FROM vt0 GROUP BY '-672219863'; -- 0ms;
SELECT TRIM(0.7229717927408834), (NOT (((vt0.c1) IS FALSE))), CASE WHEN (vt0.c2 IN ()) THEN MAX(vt0.c0) ELSE (((vt0.c0, vt0.c2, vt0.c2))>=((vt0.c1, vt0.c1, vt0.c0))) END FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((0.24365624661076246) BETWEEN (x'') AND (vt0.c1))) AND (((vt0.c1) IS TRUE))) DESC, ((((((((((vt0.c2) ISNULL))AND(CAST(vt0.c2 AS REAL))))OR(vt0.c2)))AND('*}')))OR((vt0.c0 IN ())))  NULLS LAST, ((((vt0.c2)IS(x'')))>=((((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND (('sⶻ4㡐', '-1720347846', vt0.c0))))) ASC; -- 4ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS TEXT) FROM vt0 WHERE ((CAST(0.6129849154801318 AS BLOB) IN ((-2065835561 IN ())))) GROUP BY ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c0)), x'd160', vt0.c2; -- 0ms;
SELECT DISTINCT (((GROUP_CONCAT(vt0.c2)))==((((vt0.c0)<=(vt0.c0))))) FROM vt0 WHERE ((+ ((('0.6424236690655111') ISNULL)))); -- 0ms;
SELECT DISTINCT ((vt0.c2)>=(vt0.c2)) FROM vt0; -- 0ms;
SELECT ALL CAST(((NULL)==(vt0.c2)) AS BLOB) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c2 IN ()))-(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN '2(_' THEN vt0.c0 ELSE vt0.c0 END)LIKE(((vt0.c0)-(vt0.c2)))) FROM vt0 NOT INDEXED WHERE ((NOT (x''))); -- 0ms;
SELECT ALL ((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN 0.7732366929174312 WHEN vt0.c1 THEN vt0.c0 END)=(vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT DISTINCT (- ((((vt0.c0))>=((0.8543962658246597))))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(NULL)) AS NUMERIC) FROM vt0 WHERE (((CASE WHEN NULL THEN 0Xd6b8c76 END) NOT NULL)); -- 0ms;
SELECT DISTINCT MAX(((vt0.c1)<(vt0.c1))), (NOT ((vt0.c2 IN ()))), (NOT (((vt0.c0)&(vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0))>=((CAST(vt0.c2 AS BLOB)))) FROM vt0 WHERE (STRFTIME('-164876869' COLLATE BINARY, ((NULL) NOT BETWEEN (553279980) AND (x'2a2c')), (('0.7896430741917191') IS FALSE))); -- 0ms;
SELECT DISTINCT TYPEOF(((vt0.c2)||(vt0.c0))) FROM vt0 WHERE ((((((0xffffffff8f29cab9) IS FALSE)))<>((QUOTE(0.6082076787416062))))); -- 1ms;
SELECT DISTINCT ((((vt0.c1)-(x'dade'))) IS TRUE), ROUND(TOTAL(vt0.c1), (((vt0.c1))>((vt0.c0)))), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((CAST('X\n' AS TEXT)) NOT NULL)) ORDER BY CASE vt0.c1 COLLATE NOCASE  WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE vt0.c2 END; -- 0ms;
SELECT ALL MAX(AVG((~ (0X609c3ddd)))) FROM vt0 WHERE (((((((('1343901838')) NOT BETWEEN ((NULL)) AND ((''))))AND((((0.03460822206305303, 0.9036595512317989, x''))<>((x'7d0feb2e', '\׷T}', 0.21512792022792526))))))OR((')' IN ()))));SELECT DISTINCT CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM, (((vt0.c1, vt0.c2, vt0.c1, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END, ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)), (NOT (vt0.c1)), ((vt0.c1)&(vt0.c1)))) AND (((0X3483203f IN (vt0.c0, vt0.c1)), (((vt0.c0, vt0.c2, vt0.c0))>=((vt0.c2, vt0.c2, vt0.c0))), ((vt0.c1)-(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c2))))), (((vt0.c2)<=(vt0.c2)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), (((vt0.c2)) BETWEEN ((SUM(vt0.c1))) AND ((vt0.c0))), -1713174430 FROM vt0 WHERE (((('' IN ())) IS TRUE)); -- 0ms;
SELECT vt0.c2 COLLATE NOCASE, '1613167969', MIN(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE (NULLIF((+ ('-2047628989')), CAST(x'' AS INTEGER))); -- 0ms;
SELECT ALL (- (((vt0.c2) BETWEEN (vt0.c1) AND (NULL)))) FROM vt0; -- 0ms;
SELECT DISTINCT '-718088804' FROM vt0 WHERE (CASE WHEN ((0.5623814385504937)OR(0.5385193028034737)) THEN ((('Wವ')) BETWEEN (('0.7582577783644973')) AND ((x''))) WHEN TOTAL_CHANGES() THEN 1161337756 COLLATE BINARY WHEN TIME('', x'', NULL, -1555698458, 0xffffffffdeb28c94) THEN -1487185201 END); -- 0ms;
SELECT ALL x'' FROM vt0 WHERE (((CAST('' AS INTEGER)) BETWEEN ((NOT (x'c570'))) AND (((('-1901526228')) NOT BETWEEN ((0xffffffffc7843664)) AND (('')))))); -- 0ms;
SELECT COUNT(COUNT(*)) FROM vt0 ORDER BY CAST(NULLIF(vt0.c0, vt0.c2) AS INTEGER) ASC  NULLS FIRST;SELECT ALL 4.04594017E8 FROM vt0 WHERE (CAST(((NULL) ISNULL) AS TEXT)); -- 0ms;
SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR(GROUP_CONCAT(vt0.c0))))AND(vt0.c2 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2))) BETWEEN (((vt0.c2)<<(vt0.c1))) AND (((vt0.c0) NOTNULL))) FROM vt0 GROUP BY ((vt0.c1) ISNULL) COLLATE BINARY HAVING x''; -- 0ms;
SELECT DISTINCT ((MIN(vt0.c1))-(vt0.c2)) FROM vt0 WHERE (json_type((NULL IN ()))) LIMIT 585701918; -- 0ms;
SELECT DISTINCT CAST((vt0.c1 IN ()) AS NUMERIC) FROM vt0 WHERE (((CASE WHEN NULL THEN '9nπ)' WHEN NULL THEN '1127936050' WHEN NULL THEN '' ELSE 2000586893 END)IS NOT(x''))); -- 0ms;
SELECT DISTINCT CASE WHEN TRIM(NULL) THEN DATETIME('', x'f6bab693', vt0.c0) ELSE (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) END, ((((vt0.c2) ISNULL)) ISNULL), ((((NULL) NOT NULL))==(vt0.c1 COLLATE RTRIM)) FROM vt0 WHERE (((('-1652481414' IN ())) BETWEEN (CASE WHEN 1127936050 THEN NULL END) AND (((x'112102b5')/(x''))))) ORDER BY ((CAST(vt0.c1 AS BLOB)) IS FALSE) DESC, vt0.c1  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))>>(CAST(vt0.c1 AS INTEGER))); -- 0ms;
SELECT SUM(NULL) FROM vt0 WHERE (((((NULL)&('')))!=((~ (-2124209708))))) GROUP BY (vt0.c0 IN ()) HAVING ((CAST(vt0.c1 AS BLOB)) IS FALSE); -- 0ms;
SELECT COUNT(x'') FROM vt0; -- 1ms;
SELECT ALL CAST(vt0.c1 COLLATE NOCASE AS TEXT) FROM vt0 WHERE ((NOT (CASE 0.5278441579301414  WHEN -179494746 THEN x'' END))); -- 0ms;
SELECT DISTINCT NULL COLLATE BINARY FROM vt0 WHERE ((UPPER(NULL) IN (x'90aa' COLLATE RTRIM))); -- 0ms;
SELECT (((0.6410524280903559 IN (vt0.c1)))!=(((vt0.c0)IS NOT(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c2, vt0.c2, vt0.c1))=((0.15732139653024457, vt0.c0, vt0.c2)))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c1)) FROM vt0 WHERE ((((('1051590699') BETWEEN (0xffffffffa833ecd9) AND (NULL)))&((~ ('-1446988530'))))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) LIMIT -981453069 OFFSET 1087416305; -- 0ms;
SELECT DISTINCT ((json_array_length(vt0.c0)) BETWEEN (vt0.c0) AND (((vt0.c1) NOT NULL))), ((((COALESCE(vt0.c2, vt0.c2))OR('0.5245792121039349' COLLATE NOCASE)))AND(((vt0.c0) ISNULL))), vt0.c2 FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))OR(vt0.c0)))AND(SQLITE_VERSION())), ((((((vt0.c0)OR('-1599715530')))OR(vt0.c1)))<=(((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))), LIKELIHOOD(vt0.c0, 0.3158969495915138) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT (((-876988162 IN ())) IS TRUE), ((((((vt0.c1) IS TRUE))OR((vt0.c1 IN ()))))OR('1715596166')), NTH_VALUE((~ (vt0.c0)), (- (CAST(vt0.c0 AS INTEGER)))) OVER () FROM vt0 WHERE ((((((NULL) IS TRUE), 0.45791958309443237 COLLATE RTRIM, (((NULL))<=((0.3332573437898396)))))==((((('-370512883', '	*4K&\rNm\r', 0.4297845158019613)) NOT BETWEEN ((0.8697915444708965, '', x'8626')) AND (('', 0.8365830734083051, NULL))), CASE NULL  WHEN -1132467104 THEN x'bcbf' ELSE -1793926042 END, ((NULL) NOTNULL))))) GROUP BY (((~ (vt0.c2))) BETWEEN (ROUND(vt0.c2, vt0.c2)) AND (TRIM(DISTINCT NULL))); -- 0ms;
SELECT DISTINCT (((vt0.c0)/(vt0.c1)) IN ()), ((((((vt0.c0) NOTNULL))AND((vt0.c0 IN (vt0.c1, vt0.c0)))))AND(((vt0.c2) IS TRUE))), CAST((((0.979185028461055))>((vt0.c1))) AS INTEGER) FROM vt0 WHERE (((((NULL) IS TRUE))<<(((-152461992)IS(NULL))))); -- 1ms;
SELECT CASE WHEN (vt0.c2 IN (vt0.c0, vt0.c1)) THEN CAST(vt0.c1 AS INTEGER) WHEN ((vt0.c0)||(vt0.c2)) THEN ((NULL) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN ((((vt0.c1)OR(vt0.c1)))OR('2010917322')) THEN (((vt0.c0, vt0.c2, 0.9406593934187439)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) WHEN (vt0.c2 IN ()) THEN (NOT (vt0.c1)) WHEN CAST(vt0.c2 AS TEXT) THEN (NOT (vt0.c0)) ELSE ((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) END FROM vt0 GROUP BY ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)) COLLATE RTRIM, NULL, (+ ('' COLLATE NOCASE)) HAVING GROUP_CONCAT(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END); -- 0ms;
SELECT DISTINCT LAG(((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE BINARY)), ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((((((((vt0.c2)OR(0.730008598660576)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1))) AND (((x'')%(vt0.c1)))), ((vt0.c0)%(((vt0.c0) NOT BETWEEN (vt0.c2) AND (x''))))) OVER () FROM vt0; -- 0ms;
SELECT ALL ABS(DISTINCT ((vt0.c1)%(vt0.c0))), ((((0.6674329378635403)-(vt0.c2))) NOT NULL), (MAX(vt0.c2) IN ()) FROM vt0 WHERE ((((((((((0xffffffff960a6c6c)OR(-1.148172029E9)))AND(NULL)))AND(NULL)))AND(NULL)) IN ())) ORDER BY ((vt0.c1 COLLATE RTRIM)!=(CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST, (((+ (vt0.c0)))==(((vt0.c2)=('-102324628'))))  NULLS FIRST, CASE WHEN vt0.c1 COLLATE RTRIM THEN '1551185187' WHEN (((vt0.c2, vt0.c2, vt0.c1))>((vt0.c2, vt0.c2, vt0.c1))) THEN (- (vt0.c0)) WHEN ((vt0.c2) NOTNULL) THEN CAST(vt0.c2 AS BLOB) END DESC  NULLS LAST; -- 0ms;
SELECT ALL (((((((((((vt0.c1))>((vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(-701608920)))AND(((((x'')OR(vt0.c1)))AND(vt0.c1)))))OR(COUNT(vt0.c2))), 0.12986678909181937, (((vt0.c2)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((SUM(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1))=((vt0.c2)))) ISNULL) FROM vt0 LIMIT 1 OFFSET 420880962; -- 0ms;
SELECT DISTINCT ((((vt0.c2)!=(vt0.c1)))&(vt0.c1 COLLATE RTRIM)) FROM vt0 WHERE ((((('-1547958236')=('-295582782')))IS NOT('FALSE' COLLATE NOCASE))) LIMIT 1925164330 OFFSET -698522529; -- 0ms;
SELECT DISTINCT (((((((((vt0.c0 IN ('-950217353')))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)))))OR((vt0.c0 IN (vt0.c2, vt0.c1)))))AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND(((vt0.c2)&(vt0.c2)))), (((vt0.c2 IN ())) NOT NULL), CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, (CAST(NULL AS INTEGER) IN (CASE '-449371378'  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END)), ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE '' END)) FROM vt0 WHERE ((x'' IN ()) COLLATE NOCASE) LIMIT -1985201211 OFFSET -655098087; -- 1ms;
SELECT ALL CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)&(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c1)-(vt0.c1)))OR(((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END)), CASE (~ (vt0.c2))  WHEN (((vt0.c1))>=((vt0.c1))) THEN CASE WHEN x'' THEN vt0.c0 END END, SQLITE_SOURCE_ID() FROM vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c2 AS TEXT) IN ()), ((vt0.c2) IS FALSE) COLLATE RTRIM, CAST(LIKELIHOOD(vt0.c0, 0.7909044774237843) AS NUMERIC) FROM vt0 WHERE (HEX((((''))<=((x'd28a'))))) ORDER BY ((((CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)OR((((vt0.c1))<((vt0.c2))))))AND(vt0.c2 COLLATE BINARY))  NULLS FIRST; -- 0ms;
SELECT ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)))/(-1074536234 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT ((('58175730' IN ())) NOT BETWEEN (MIN(vt0.c0)) AND ((((NULL))>((vt0.c1))))) FROM vt0; -- 0ms;
SELECT CAST(MIN(vt0.c0) AS REAL), ((((vt0.c1)<(vt0.c0)))&(LIKE(vt0.c1, 0.9186646507765822, 'I'))), CAST(vt0.c1 AS TEXT) COLLATE RTRIM FROM vt0 WHERE (HEX(0.3332573437898396 COLLATE NOCASE)) GROUP BY ((NULL)|(((vt0.c0)*(vt0.c1)))), (((0.6401014123713793))!=(((((''))<=((vt0.c1)))))), (((- (vt0.c0))) IS FALSE) HAVING (((~ (vt0.c0))) NOT BETWEEN (((((vt0.c2)AND(vt0.c0)))OR(vt0.c1))) AND (((vt0.c1)&(vt0.c2)))); -- 0ms;
SELECT DISTINCT vt0.c1, 0.7239712940541069, COUNT((+ (vt0.c1))) OVER () FROM vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC)) IS FALSE); -- 0ms;
SELECT DISTINCT (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))<<((~ (vt0.c2)))) FROM vt0 WHERE ((- (x''))) ORDER BY CAST(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END AS TEXT), (((x'')) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)))) AND (((((vt0.c2, vt0.c2, vt0.c2))=((vt0.c2, vt0.c2, 0.045374851741907696)))))) ASC; -- 0ms;
SELECT DISTINCT SUM(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))) OVER () FROM vt0; -- 0ms;
SELECT ALL (((vt0.c1)) NOT BETWEEN ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) FROM vt0 INTERSECT SELECT ALL SUM(((vt0.c0)*(vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c2))<((vt0.c0))) COLLATE RTRIM FROM vt0 WHERE ((((((('1843879286')AND('c')))AND('m	TU')))IS NOT((('D邻') NOT NULL)))); -- 1ms;
SELECT CASE LIKELY(vt0.c1)  WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c2 THEN vt0.c2 END WHEN MIN(vt0.c2) THEN ((vt0.c2)AND(vt0.c2)) WHEN AVG(x'') THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END FROM vt0 GROUP BY (('-861895155')-((vt0.c2 IN (vt0.c1, vt0.c0)))) HAVING MAX(((vt0.c0) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN LOWER(vt0.c0) THEN vt0.c2 ELSE MAX(vt0.c2) END, GROUP_CONCAT((((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))), (+ (((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))) FROM vt0; -- 1ms;
SELECT ((TIME(vt0.c0, vt0.c2, vt0.c0)) BETWEEN (((vt0.c1)||(vt0.c0))) AND (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CASE ((NULL) ISNULL)  WHEN NULL THEN ((x'')*(x'')) ELSE CAST(0.670388615999218 AS BLOB) END); -- 0ms;
SELECT DISTINCT (((+ (vt0.c0))) NOT NULL) FROM vt0 WHERE (((((('-1651702848')OR('t')))AND(0.9740270583509575)) IN ())) LIMIT 1738791151; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c1)IS(vt0.c2))) FROM vt0 ORDER BY ((x'')GLOB(vt0.c2)) COLLATE BINARY; -- 0ms;
SELECT rtreenode(((vt0.c2) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) FROM vt0; -- 0ms;
SELECT (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) IN (((vt0.c0)AND(vt0.c2)))) FROM vt0; -- 0ms;
SELECT ALL CASE MAX(vt0.c2)  WHEN (vt0.c1 IN (vt0.c0)) THEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c2)) END, CAST(((vt0.c2)|(vt0.c0)) AS NUMERIC), ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END) AND (1457607907)) FROM vt0 WHERE (((LOWER('-1784137951')) NOT BETWEEN (((NULL) NOT BETWEEN (x'') AND (0.27220908162254664))) AND ((7.99097344E8 IN ('-1095364252'))))); -- 0ms;
SELECT '1646003048' FROM vt0 LIMIT -1795096709 OFFSET -1507407281; -- 0ms;
SELECT DISTINCT ((UNLIKELY(vt0.c2)) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c2)) AND ((vt0.c2 IN ()))) FROM vt0 WHERE ((((((0X57bfd035)AND(NULL)))OR('0.07893160376121033')) IN (CAST(x'8f80' AS INTEGER)))) LIMIT 154803646; -- 0ms;
SELECT DISTINCT load_extension(((((vt0.c0)AND(vt0.c2)))AND(x''))) FROM vt0 WHERE (CASE x''  WHEN ('0.9934984875934709' IN ()) THEN ((0.45050524436092554)>>(x'')) WHEN (((NULL, 0.22427121008711193, x''))<=((NULL, 0.47221521834220126, x''))) THEN CASE WHEN NULL THEN 0.1992811110820596 WHEN x'' THEN 0.7941717562551346 WHEN 0.8106745448617241 THEN x'' WHEN NULL THEN -4.49371378E8 WHEN '0.737635021089351' THEN x'' ELSE 0.5433925284344023 END WHEN CAST('-295582782' AS REAL) THEN (~ (NULL)) ELSE ((0.9553632629964128) IS FALSE) END); -- 0ms;
SELECT DISTINCT ((((vt0.c2)<(vt0.c1)))*(((vt0.c0) NOT NULL))) FROM vt0; -- 0ms;
SELECT ALL vt0.c1, (((vt0.c1 COLLATE BINARY))<>(((~ (vt0.c0))))), (COUNT(*) IN (CAST(vt0.c1 AS NUMERIC))) FROM vt0 WHERE ((((((((((((((NULL IN (x'3569')))OR(0.1582091202609739)))AND((((('')OR('-898194873')))AND(NULL)))))AND(((',cI[X]0')AND(NULL)))))AND(SQLITE_COMPILEOPTION_GET(NULL))))OR(0.34224379823869566)))AND(GLOB('492349728', '-2047628989')))); -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(vt0.c0) IN ()) FROM vt0 WHERE (((((((NULL)AND(0.4712243407863015)))OR(0X16825ddd))) IS TRUE)); -- 0ms;
SELECT LEAD(((((vt0.c1) NOT NULL))<>(vt0.c2)), (((vt0.c1)) BETWEEN ((0Xffffffffbdbcbd5f)) AND (((vt0.c2 IN ())))), 0.3434022258317253) OVER ( PARTITION BY ((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))||(CAST(vt0.c0 AS REAL))), (((vt0.c0)) BETWEEN (('')) AND (((NOT (vt0.c1))))), CASE ((vt0.c2) ISNULL)  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c2) NOTNULL) ELSE vt0.c0 COLLATE RTRIM END, COALESCE('-902533541', ((vt0.c2)<(vt0.c0)), TYPEOF(DISTINCT vt0.c1), vt0.c1)), 2075555443, (((x'') BETWEEN (vt0.c1) AND (vt0.c1)) IN (SUM(vt0.c0), IFNULL(vt0.c2, vt0.c2))) FROM vt0 WHERE ((((((('-572789138') BETWEEN ('') AND (NULL)))OR(((((NULL)AND(-655098087)))OR(0x759e8902)))))OR(LIKELY(DISTINCT '')))); -- 0ms;
SELECT ((((vt0.c2) IS FALSE))IS NOT(((vt0.c1) IS TRUE))) FROM vt0 WHERE (((((x'ebca')*('-1099211334')))*(((((0.021409443590050037)AND(0X31b35066)))AND(0.49672525888248165))))); -- 0ms;
SELECT DISTINCT (((vt0.c1 IN ())) IS FALSE), (vt0.c2 IN ()) COLLATE NOCASE, (~ (CAST(vt0.c0 AS INTEGER))) FROM vt0 GROUP BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))|(((vt0.c0)<<(vt0.c2)))) ORDER BY ((vt0.c2 COLLATE NOCASE)<=(LIKE(vt0.c1, vt0.c1))) ASC; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)=(vt0.c2)) AS NUMERIC) FROM vt0 WHERE (CASE ((('jV')) BETWEEN ((-2.95582782E8)) AND ((x'')))  WHEN (((''))<=((x''))) THEN ((NULL) NOT NULL) ELSE ((('', '', '(['))>=((x'', 0X1d6b4a34, '2115824626'))) END); -- 1ms;
SELECT DISTINCT CASE CAST(vt0.c1 AS TEXT)  WHEN ((vt0.c1)|(vt0.c0)) THEN (vt0.c1 IN (vt0.c2)) ELSE x'' END, GROUP_CONCAT((~ (vt0.c2)) COLLATE NOCASE) OVER ( ROWS (((vt0.c1, vt0.c1, vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN (((+ (vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE 0x519ba815 END, (vt0.c1 IN ()), CASE vt0.c0  WHEN 0.958485074332843 THEN vt0.c2 END, CAST(vt0.c0 AS TEXT))) AND (((~ (vt0.c1)), ((vt0.c1)LIKE(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), LIKELIHOOD(vt0.c0, 0.5451989513268187), ((((vt0.c2)OR(vt0.c1)))AND(vt0.c1))))) PRECEDING EXCLUDE CURRENT ROW), ((vt0.c2)>=(NULL)) FROM vt0 WHERE (((((NULL) BETWEEN (NULL) AND (NULL))) IS TRUE)) GROUP BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM COLLATE NOCASE HAVING ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)))AND(((vt0.c0)<<(vt0.c1)))); -- 0ms;
SELECT DISTINCT (((COALESCE(DISTINCT vt0.c1, vt0.c1)))<>(((((vt0.c2))<((vt0.c2)))))), ((x'') BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c2)LIKE(-1.86560354E9)))), ((vt0.c0) NOT BETWEEN ('') AND (x'')) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL TOTAL(((vt0.c2) IS TRUE)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1)*(vt0.c2)))>>((('-1722288363') IS TRUE))) FROM vt0; -- 0ms;
SELECT CAST(((((vt0.c0)OR(vt0.c2)))AND(vt0.c1)) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT ((NULL)&(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL CASE MIN(vt0.c0)  WHEN AVG(vt0.c1) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN NULL THEN ((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)) WHEN CAST(vt0.c2 AS INTEGER) THEN json_remove(vt0.c0, vt0.c1) END, ROW_NUMBER() OVER ( RANGE (((((vt0.c1)<=(vt0.c1)), ((vt0.c0) NOT NULL), CAST(vt0.c1 AS REAL)))>((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c1) IS TRUE), ((vt0.c0) NOTNULL)))) PRECEDING EXCLUDE NO OTHERS), LAST_VALUE((((CAST(0.7212335652110425 AS BLOB), ((vt0.c0) IS FALSE), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END))>(((- (vt0.c0)), json_object(vt0.c2, vt0.c2, '2102022557', 0.19904867076226251), ((vt0.c2)LIKE(vt0.c0)))))) OVER () FROM vt0 WHERE (((CASE '0.7582577783644973'  WHEN -366255983 THEN 'Q婋[2㛆]' END) BETWEEN (CASE -1214249308  WHEN '(Y' THEN 0.9785752093278268 END) AND ((((x'2988'))<>((-4.49371378E8))))));SELECT ALL '-13263604', TOTAL(((vt0.c1) ISNULL)) OVER (), UNLIKELY(DISTINCT ((vt0.c0)IS NOT(vt0.c1))), MAX(rtreenode(vt0.c1, vt0.c1)), (((vt0.c1 IN ()))=(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)) FROM vt0 INTERSECT SELECT CAST(SUM(vt0.c2) AS NUMERIC), ((vt0.c1 COLLATE BINARY) IS TRUE), LIKELY(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END), CAST(x'' AS INTEGER), ((((vt0.c2))<((vt0.c1))) IN ()) FROM vt0; -- 0ms;
SELECT vt0.c2 FROM vt0 WHERE (-239314357) ORDER BY ((-981453069) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE)) ASC; -- 0ms;
SELECT DISTINCT ((((vt0.c2)AND(((vt0.c2) IS FALSE))))AND(vt0.c2)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2)OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(CHAR(vt0.c0, vt0.c2, vt0.c2))) FROM vt0 WHERE (((((((((((((x'ee21')OR((((x'', 0.3623567769809797, 0.6000253582268869))==((x'bdb0', NULL, 0xffffffffeeb0f4c7))))))AND((~ ('-1246252022')))))OR(x'' COLLATE RTRIM)))OR(CASE 0.05610524308667164  WHEN x'' THEN 0.7963910512766876 WHEN -2.037039546E9 THEN 0.9779616293889678 WHEN '1861138129' THEN x'' END)))AND((((-7.0160892E8, '-38692268', ''))=(('-145170234', 'w_!.Mh', 0.6709615072050308))))))AND(('j''' IN ())))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)||(vt0.c0)))+((vt0.c1 IN ()))), TOTAL(CAST(vt0.c2 AS NUMERIC) COLLATE NOCASE) OVER (), x'0925' FROM vt0 WHERE ((((x'')OR(0.3332573437898396)) IN ())) GROUP BY vt0.c2 HAVING ((vt0.c2 COLLATE BINARY)|((vt0.c1 IN (vt0.c0)))) ORDER BY ((vt0.c0) NOTNULL); -- 0ms;
SELECT DISTINCT COUNT(x'') OVER (), json_array_length((+ (vt0.c1)), (('0.6499988586955068')<=(vt0.c1))), 0.3867069115019046, ((MIN(vt0.c0))<<(MIN(vt0.c2))), ((((CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c0)OR(vt0.c2)))))AND(vt0.c0 COLLATE BINARY)) FROM vt0;SELECT ALL vt0.c0 FROM vt0 WHERE ((((CAST(1827420289 AS BLOB)))<>((CAST('959355624' AS REAL))))); -- 0ms;
SELECT ALL x'c427' FROM vt0; -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 0.8296935666838392 WHEN vt0.c1 THEN vt0.c2 END))!=((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))))), NULL, NULL, ((vt0.c0)=((~ (vt0.c1)))), MAX((((vt0.c0))>=((vt0.c0)))) FROM vt0 ORDER BY ((vt0.c2)<=((+ (vt0.c1)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((vt0.c0 IN ()))OR((+ (vt0.c2)))))AND(SUM(vt0.c1))), ((vt0.c2 COLLATE BINARY) BETWEEN (vt0.c0) AND (CAST(vt0.c1 AS NUMERIC))), ((((vt0.c2)>>(vt0.c0))) BETWEEN (((vt0.c0)|(vt0.c2))) AND (((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)))) FROM vt0 WHERE (CAST(NULL AS REAL)); -- 0ms;
SELECT DISTINCT TRIM(((vt0.c2)%('0ZW땧A')), (vt0.c0 IN (vt0.c2))), ((CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)+(CAST(vt0.c2 AS NUMERIC))), ((((vt0.c2)<=(vt0.c1)))||(CASE vt0.c1  WHEN vt0.c0 THEN 0.9403349119364272 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) OVER () FROM vt0 WHERE (CAST(((0.9989042632028052) NOT BETWEEN (NULL) AND (x'')) AS NUMERIC)); -- 0ms;
SELECT (NOT (((vt0.c0)%(vt0.c0)))), MIN((((vt0.c0))<=((vt0.c2)))), ((((((vt0.c0)<(vt0.c0)))AND(((vt0.c2) NOT NULL))))OR((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, vt0.c1)) AND ((-1.527100418E9, vt0.c1, vt0.c2))))) FROM vt0 WHERE ((((0.06858873135652532)|('-295582782')) IN ())); -- 0ms;
SELECT ALL CASE WHEN CASE WHEN vt0.c2 THEN vt0.c0 END THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c1) NOTNULL) END FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)GLOB(x'56b5')), ((((0.9104430593750417) BETWEEN (vt0.c2) AND (vt0.c1)))<(MAX(vt0.c0, vt0.c1, vt0.c2, vt0.c0))); -- 0ms;
SELECT DISTINCT x'e7f1' FROM vt0; -- 0ms;
SELECT LTRIM(((vt0.c1) IS TRUE)) FROM vt0; -- 1ms;
SELECT DISTINCT CASE SUM(vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END THEN SQLITE_COMPILEOPTION_USED(vt0.c1) ELSE TOTAL(vt0.c2) END, ((((TOTAL(vt0.c0))OR(((vt0.c0)>>(vt0.c2)))))OR(CAST(vt0.c2 AS TEXT))), vt0.c1, ((((((((x'')OR(vt0.c2)))AND((vt0.c0 IN ()))))OR((+ (vt0.c0)))))AND(HEX(vt0.c1))), FIRST_VALUE((((NOT (vt0.c2)))LIKE((vt0.c2 IN (vt0.c2))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT NULL, AVG(((vt0.c1) BETWEEN (vt0.c0) AND ('v#\nZF*I'))), ((((vt0.c0)AND(vt0.c1)))>>(CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 ORDER BY ((((((((((((CAST(vt0.c0 AS NUMERIC))AND((((vt0.c1))<((-176216913))))))OR(COALESCE(DISTINCT vt0.c2, vt0.c0))))OR((((vt0.c1, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)))))OR(vt0.c1)))OR(CASE WHEN vt0.c0 THEN '1776266596' WHEN vt0.c1 THEN vt0.c0 WHEN 0.04567034616113419 THEN vt0.c0 END)); -- 0ms;
SELECT CAST(((vt0.c0)GLOB(vt0.c2)) AS INTEGER), ((((vt0.c1)AND((- (vt0.c2)))))AND(((0Xffffffffb7670e34)<(vt0.c2)))), ((x'9b24') NOT BETWEEN ((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c1 AS BLOB))) FROM vt0 WHERE ((- (CASE WHEN NULL THEN '-1779756652' ELSE '1843879286' END))) ORDER BY (0.44850302539012765 COLLATE BINARY IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((0.5217982145828871, 0x2daeb74b, x'b047')) NOT BETWEEN ((0.7901742988304093, '0.08183506893352344', -6.76803019E8)) AND ((NULL, ')s', NULL)))) ISNULL)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT ((((((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))AND(((vt0.c1)&(vt0.c1)))))AND(x'')))OR(vt0.c2 COLLATE BINARY)))AND(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)), COUNT(vt0.c0) OVER (), ((((GROUP_CONCAT(vt0.c0))OR(((vt0.c0)IS(vt0.c2)))))OR(CAST(vt0.c2 AS BLOB))) FROM vt0 WHERE (0.5989370348112729) GROUP BY (((- (vt0.c1)))%(CAST(vt0.c1 AS NUMERIC))) HAVING (((((vt0.c1))>=((vt0.c0)))) ISNULL); -- 1ms;
SELECT ALL (NOT (MIN(vt0.c0))), ((((NULL)IS(vt0.c0))) IS TRUE), CASE ((vt0.c0)<=(vt0.c0))  WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c2)IS(NULL)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c2 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) END FROM vt0 WHERE ((((((((((((0xffffffffe537230e)) BETWEEN ((0.3510817573356291)) AND ((NULL))))AND(CAST(x'ee48' AS BLOB))))AND((((-1223432599, NULL, x'', -1614745025, NULL)) BETWEEN ((NULL, NULL, '-947478905', x'', '-VO-v')) AND ((x'89d5', x'', NULL, NULL, 0.7229717927408834))))))AND(((0.40888126930010427) NOT NULL))))OR(x'' COLLATE NOCASE))); -- 0ms;
SELECT ALL (((+ (vt0.c2)))=(((x'd25d') NOTNULL))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) AS NUMERIC) FROM vt0 WHERE (NULLIF(((1709194207) NOT BETWEEN (NULL) AND (x'')), ((((((((NULL)OR('1303910919')))AND(x'')))OR(0.44499693622393777)))AND(0.17009855862241396)))); -- 0ms;
SELECT (+ (NULL COLLATE NOCASE)) FROM vt0 WHERE ((((((((x'')OR(NULL)))OR(0.16938069037353776))))>(((~ ('1843879286')))))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c2) NOTNULL))), ((((((vt0.c2)AND(vt0.c2)))OR(''))) BETWEEN (vt0.c2) AND (LIKELY(vt0.c1))), ((((((vt0.c1) NOT NULL))OR(((vt0.c1) NOT BETWEEN ('') AND (vt0.c1)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)) FROM vt0 WHERE (CAST(((x'')>=('')) AS BLOB)); -- 0ms;
SELECT DISTINCT (vt0.c2 IN ()) FROM vt0 WHERE (((((NULL) NOT NULL))OR(((((0X133e1f5d)AND('-2047628989')))AND('O%f IH'))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2))) NOT NULL) FROM vt0 WHERE ((((((((((('-1009866663') ISNULL))AND((('492349728')||('2080124139')))))AND(CASE '^륭OJ'  WHEN '553279980' THEN x'' WHEN '1385272574' THEN x'da39' WHEN '46274460' THEN 0.8981173171838553 END)))AND((~ ('147834824')))))AND((0.2528777122563203 IN (NULL, '()'))))) ORDER BY ((((CAST(vt0.c2 AS NUMERIC))AND(vt0.c1)))AND(vt0.c0 COLLATE BINARY)) ASC; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END)AND((((vt0.c2, vt0.c2, vt0.c0, vt0.c2, '')) NOT BETWEEN ((vt0.c2, '-480542159', '151511594', vt0.c2, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0))))))AND((+ (vt0.c2)))))OR(vt0.c2)))OR(((vt0.c2)*(vt0.c1)))) FROM vt0 WHERE ((((((('A6I킏{')) BETWEEN ((NULL)) AND ((''))), ((1.452823404E9)||(x'efe0')), NULL))<(((((x'0077'))>=((744892885))), CASE ''  WHEN '989643609' THEN '0.19091528924415102' WHEN -5.58723948E8 THEN '' WHEN x'' THEN '' END, ((('404594017')) BETWEEN (('*8*J-	')) AND (('V%X(5*'))))))) GROUP BY ((((vt0.c0) BETWEEN (vt0.c1) AND (x'242a')))||(((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c2)))); -- 1ms;
SELECT DISTINCT (((vt0.c2 IN ()))LIKE((x'' IN ()))) FROM vt0 WHERE (((((0.7848790866967114)IS NOT(0.9370964933124191)))|((('4aeO')<<(NULL))))); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))), (((((vt0.c0) ISNULL), TRIM(DISTINCT vt0.c1, vt0.c1), -2.23038186E8))>=((DATETIME(vt0.c2, vt0.c1, vt0.c2, vt0.c2, vt0.c0), (- (vt0.c1)), ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1))))), CASE vt0.c0  WHEN (((vt0.c0, vt0.c2, vt0.c0, vt0.c2, vt0.c2))<((vt0.c1, vt0.c2, vt0.c2, vt0.c1, vt0.c0))) THEN ((x'7bed')!=(vt0.c0)) WHEN HEX(DISTINCT vt0.c1) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) THEN (NOT (vt0.c1)) ELSE (((vt0.c0))>=((vt0.c1))) END FROM vt0; -- 0ms;
SELECT ALL vt0.c2 FROM vt0 WHERE (CAST(NULLIF(0.6157043092881171, x'4886') AS BLOB)) GROUP BY CASE WHEN ((((vt0.c2)OR('j)')))AND(vt0.c0)) THEN (((vt0.c0, vt0.c1, vt0.c0, vt0.c0, '1208128601')) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1, '-1217982924', vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1, NULL, vt0.c0))) ELSE ((vt0.c0) ISNULL) END HAVING ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c2))) AND (((vt0.c0)<(vt0.c2)))); -- 0ms;
SELECT DISTINCT (('袓,_g')>(TOTAL(vt0.c1))) FROM vt0 WHERE ((((('678163518')<<(NULL))) NOT NULL)); -- 0ms;
SELECT ((vt0.c0) IS FALSE) FROM vt0 WHERE (((((-2.6186033E8)IS NOT(''))) NOT BETWEEN (((NULL) NOT BETWEEN (0.46943640475217885) AND (-1.433587582E9))) AND (((-1.3263604E7)<<(x''))))); -- 0ms;
SELECT (+ ((((vt0.c0))>((vt0.c2))))) FROM vt0 WHERE (((CAST(0.5192220999785548 AS TEXT)) NOT BETWEEN (((0xffffffffc95f912c)OR(x'e4a9'))) AND (1275424738 COLLATE RTRIM))) ORDER BY 0.07394438756717858, CAST((~ (vt0.c0)) AS INTEGER) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((COALESCE(vt0.c0, vt0.c1, vt0.c2, vt0.c0))>=(vt0.c2 COLLATE NOCASE)) FROM vt0; -- 1ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)LIKE(vt0.c2)) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c2)<(vt0.c0))) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (CAST(vt0.c0 AS BLOB))), COALESCE(vt0.c2, MIN(vt0.c2)), ((((vt0.c0)%(vt0.c2)))OR((vt0.c0 IN (vt0.c0, vt0.c1)))) FROM vt0 GROUP BY NULL; -- 0ms;
SELECT (((((1265761414)LIKE(vt0.c0))))<>((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1))))) FROM vt0 WHERE (((TYPEOF(NULL))LIKE((('Dꔍ') BETWEEN ('1620852189') AND ('1341261099'))))); -- 0ms;
SELECT DISTINCT LOWER(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))) FROM vt0 GROUP BY ((((vt0.c2)OR(0.5143392174482236))) NOT BETWEEN (CAST(vt0.c2 AS TEXT)) AND ((- (vt0.c1)))), (((vt0.c1)IS(vt0.c2)) IN ()), vt0.c1; -- 0ms;
SELECT DISTINCT ((1156625202) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) FROM vt0 WHERE (CAST((('533344980')+(NULL)) AS TEXT)); -- 0ms;
SELECT ((((vt0.c2) NOT NULL))%(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0 WHERE ((((('1813973638')IS NOT(x'7cbb'))) NOT BETWEEN ('<*') AND (((NULL)==(NULL))))); -- 0ms;
SELECT ALL CASE (((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c2)) AND ((vt0.c0, vt0.c2, vt0.c2)))  WHEN CASE vt0.c2  WHEN vt0.c1 THEN x'156a' END THEN ((vt0.c2)!=(vt0.c2)) WHEN vt0.c1 COLLATE RTRIM THEN (((vt0.c1))==((vt0.c2))) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (~ (NULL)) END FROM vt0 WHERE ((((((- (NULL)))OR((('ya') NOT BETWEEN (NULL) AND (0X31ca98e2)))))AND(CAST(0.003637181278577817 AS TEXT)))) ORDER BY '1224828894' DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((vt0.c2)) NOT BETWEEN ((((((vt0.c1)AND(-1464119621)))OR(vt0.c2)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))), GROUP_CONCAT(((vt0.c2) NOT NULL) COLLATE NOCASE), UPPER(((-371058954)GLOB(vt0.c1))) FROM vt0 WHERE (((-61685863) IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT x'' FROM vt0; -- 1ms;
SELECT (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (0x30b54042)), (~ (vt0.c2)), ((NULL) ISNULL)))=((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)), vt0.c1, (- (vt0.c0))))) FROM vt0 WHERE (((0.3844809774406509) NOT BETWEEN ('N2 ''') AND ('-1148172029')) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (+ (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END)) FROM vt0 WHERE (((((((((x'2e73')OR(444199261)))AND(1.51511594E8)))OR((('/d\n7bj(') NOT BETWEEN ('699671140') AND (0.21156092844273533)))))AND(CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT (((- (vt0.c0)))=(vt0.c0)) FROM vt0 WHERE (((((NULL)=('轠GS'))) NOT BETWEEN (((('	P6')) BETWEEN ((NULL)) AND ((NULL)))) AND (((4.24650012E8)<('-1832788660'))))); -- 0ms;
SELECT DISTINCT MAX(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))) FROM vt0 WHERE (((((((NULL)AND(x'')))OR(NULL)))<<(((((x'')OR(x'48c5')))AND('1925164330'))))); -- 0ms;
SELECT ALL ((CAST(vt0.c2 AS TEXT)) BETWEEN (((vt0.c0)>=('1e500'))) AND (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0 WHERE (((CAST(NULL AS TEXT)) NOT NULL)); -- 0ms;
SELECT CASE vt0.c2 COLLATE NOCASE  WHEN (NOT (vt0.c2)) THEN CAST(vt0.c0 AS REAL) WHEN (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN vt0.c1 THEN ((vt0.c1)IS(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END END FROM vt0 ORDER BY (('0.5981057088744425') BETWEEN (((((vt0.c1)OR(vt0.c2)))AND(vt0.c2))) AND (((vt0.c2) NOT BETWEEN ('nowSJ') AND (vt0.c2)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((x'bc07')+(''))) NOT BETWEEN ((- (NULL))) AND (((0.5432692873541226)||(0.32519579271593824))))); -- 0ms;
SELECT ALL (((vt0.c0)LIKE(vt0.c2)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(vt0.c1) FROM vt0 WHERE ((CAST('-1787472372' AS REAL) IN (((-223038186)<<(x'4df3'))))); -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c2 AS BLOB) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT (vt0.c1 IN ()), ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0)<=(vt0.c2)))) FROM vt0 WHERE ('420880962'); -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE RTRIM)<=((+ (vt0.c1)))) FROM vt0 WHERE (CAST(((0X79c7f0df) ISNULL) AS TEXT)); -- 0ms;
SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((2.01612473E9) BETWEEN (vt0.c0) AND (vt0.c1)))), HEX(DISTINCT COALESCE(vt0.c0, vt0.c2)), (((((vt0.c1))<=((vt0.c1)))) IS TRUE) FROM vt0 WHERE (((NULL COLLATE BINARY) BETWEEN (NULL COLLATE NOCASE) AND (NULL))); -- 0ms;
SELECT ALL CASE WHEN (vt0.c2 IN ()) THEN (((vt0.c1))!=((vt0.c1))) WHEN ((vt0.c1)*(vt0.c2)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c2)*(vt0.c2)) THEN ((vt0.c1)IS(vt0.c2)) WHEN ((vt0.c0) BETWEEN (vt0.c2) AND (0.6390115300718464)) THEN (~ (vt0.c0)) WHEN vt0.c0 THEN (((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c1, '299683635', vt0.c1))) ELSE x'' END, CAST((+ (vt0.c2)) AS REAL), NULL FROM vt0 WHERE ((((((((('-2136131934')AND(x'')))AND(NULL)))AND(NULL)))OR(NULL)) COLLATE RTRIM) LIMIT -655098087 OFFSET -900432489; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN '8u' WHEN vt0.c1 THEN 0.3552824158175256 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN -407515657 THEN vt0.c0 WHEN 0.057842403963040634 THEN vt0.c1 WHEN NULL THEN NULL END)AND(((vt0.c1)<(vt0.c2)))), x'', '766424907' FROM vt0; -- 0ms;
SELECT DISTINCT LEAD(((CAST(vt0.c2 AS NUMERIC)) NOT BETWEEN (x'') AND (vt0.c0)), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<=((((x''))>((vt0.c2))))), ((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c2, ((((((((((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)AND(TRIM(vt0.c2))))AND(((vt0.c2) NOT BETWEEN (vt0.c0) AND (1.344960626E9)))))OR(CAST(vt0.c0 AS REAL))))OR((vt0.c1 IN ()))))OR((vt0.c2 IN ()))))OR((vt0.c0 IN ()))), TRIM(DISTINCT LIKELIHOOD(vt0.c2, 0.6104517504292429)) FROM vt0 LIMIT 377642461 OFFSET -1737033423; -- 0ms;
SELECT DISTINCT vt0.c1, SUM(2.01612473E9) OVER ( ORDER BY ((((vt0.c1) ISNULL))>=(((vt0.c2) IS FALSE))) ASC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT))LIKE(((vt0.c1) IS TRUE))) DESC, NULL ASC GROUPS (+ (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END)) PRECEDING), (- (vt0.c2 COLLATE RTRIM)) FROM vt0 GROUP BY (((vt0.c1 IN ()))*(vt0.c1 COLLATE NOCASE)), ((CAST(vt0.c0 AS BLOB)) BETWEEN ((0.7896430741917191 IN ())) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))), IFNULL(LIKELIHOOD(DISTINCT vt0.c1, 0.23168286098236823), (((vt0.c2, vt0.c1, vt0.c1))>((vt0.c1, vt0.c1, vt0.c2)))) HAVING ((((vt0.c1) BETWEEN (x'') AND (vt0.c0)))%(json_valid(vt0.c1))); -- 1ms;
SELECT (((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((COALESCE(vt0.c2, vt0.c0)))), x'', (UPPER(DISTINCT vt0.c2) IN (MIN(vt0.c1))) FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((('v7A\9f6', vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((149067820, vt0.c1, vt0.c1))) COLLATE BINARY, ABS(vt0.c0 COLLATE BINARY), AVG((vt0.c2 IN ())) FROM vt0 ORDER BY (+ (((vt0.c0)>>(vt0.c2)))) ASC, ((((vt0.c2)AND(vt0.c0))) IS FALSE) ASC, (CAST(vt0.c0 AS NUMERIC) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT ALL DENSE_RANK() OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM vt0 WHERE ((~ ((NOT (x'9856'))))) LIMIT 1343901838; -- 0ms;
SELECT 0.6424236690655111 FROM vt0 WHERE (CAST(((x'')||(x'37b3')) AS BLOB)) GROUP BY ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT UPPER(SUM(vt0.c1)), vt0.c2, (('-1374419684') BETWEEN ((vt0.c2 IN ())) AND (((vt0.c2)GLOB(vt0.c2)))) FROM vt0 WHERE (CASE CASE 0.01375603421127769  WHEN x'' THEN '' WHEN 0X490a8b3f THEN -983563487 WHEN '-566973359' THEN NULL ELSE 0.2198255273276566 END  WHEN ((0.11172716589080722) NOT BETWEEN (NULL) AND (NULL)) THEN (NULL IN ()) WHEN IFNULL(x'bbd0', '') THEN CASE WHEN 'yX' THEN NULL WHEN x'' THEN -990640743 WHEN 'HK*' THEN 0.5670873847796938 END WHEN ((0xffffffffe2235b91)*(NULL)) THEN ('1141088432' IN (NULL)) ELSE (x'7d23' IN ()) END) GROUP BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CASE ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c1))  WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 END THEN vt0.c2 COLLATE NOCASE END, (((vt0.c0, vt0.c2, vt0.c2)) BETWEEN ((((vt0.c2) IS FALSE), (vt0.c0 IN ()), LIKELIHOOD(DISTINCT vt0.c2, 0.5778634712000826))) AND ((((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)), '-71400463', (NOT (vt0.c2))))), FIRST_VALUE((((vt0.c1 IN ()))AND(((((((((vt0.c2)OR(vt0.c2)))OR(0.5503014114890701)))OR('')))AND(vt0.c1))))) OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS), CASE WHEN CHAR(vt0.c0) THEN ((vt0.c0)LIKE(x'4328')) WHEN vt0.c0 COLLATE NOCASE THEN 0.4570638430350482 WHEN CAST(vt0.c1 AS TEXT) THEN ((0.9938470128507354) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN (~ (vt0.c2)) THEN vt0.c2 COLLATE NOCASE WHEN (- (vt0.c1)) THEN vt0.c1 COLLATE NOCASE END, NULL FROM vt0 ORDER BY CAST(vt0.c1 AS BLOB); -- 1ms;
SELECT DISTINCT MAX((((vt0.c1))<((vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE BINARY) FROM vt0 WHERE (TRIM(DISTINCT (~ (0.21028302491763573)), (NOT (0.5636079175566655)))); -- 0ms;
SELECT COUNT((vt0.c0 IN ())) FROM vt0 WHERE ('Pu'); -- 0ms;
SELECT (((((((vt0.c2))<=((vt0.c0))))AND((((NULL, vt0.c2, vt0.c1))>=((vt0.c0, vt0.c0, x'8bb7'))))))OR(((vt0.c2)=(vt0.c1)))) FROM vt0; -- 0ms;
SELECT load_extension(vt0.c2) FROM vt0;SELECT ALL CASE WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c2) AND ('?j5n')) ELSE -1.064141562E9 END, (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((2011000555))))IS(CASE vt0.c2  WHEN vt0.c0 THEN 1.843879286E9 WHEN vt0.c1 THEN x'' WHEN vt0.c1 THEN vt0.c1 END)), vt0.c2 FROM vt0 WHERE ((- (CASE x''  WHEN -1361598856 THEN 0.9173298563756689 ELSE NULL END))); -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS INTEGER) AS BLOB), COUNT(1350362861 COLLATE BINARY) OVER (), ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c2)))-((((x'7340427b7055', vt0.c0, vt0.c1))=((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE (0.2850011930212304); -- 0ms;
SELECT SUM(vt0.c2) OVER () FROM vt0 WHERE (((((((((((0.3604384412080952)OR(0.4934879636529045)))OR(x'')))AND('805639296')))AND(0x5ab0a3b5))) NOT BETWEEN ((('')<>(-332415738))) AND (x'' COLLATE RTRIM))) GROUP BY (((vt0.c0))<((vt0.c0))) COLLATE RTRIM COLLATE NOCASE, (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c1, '-558723948', vt0.c2)) BETWEEN ((vt0.c2, '.', vt0.c0)) AND ((vt0.c2, vt0.c1, vt0.c2))), (((x'', '0.92463282633216', vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, 0.35485650424125925)) AND ((vt0.c2, vt0.c2, vt0.c2))), ((vt0.c0)!=(vt0.c0)))) AND ((((vt0.c1)OR(vt0.c0)), 2009921975, ((vt0.c0) IS FALSE)))), (((vt0.c2)) BETWEEN ((((0.9566277059948162)||(vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 END))); -- 1ms;
SELECT (((vt0.c1 COLLATE NOCASE))>(((NOT (vt0.c0))))) FROM vt0 WHERE ((((CAST(2087267321 AS BLOB), 428738274, ((x'') NOT BETWEEN (0.8452999874682059) AND (''))))<>((CAST(0x79c7f0df AS TEXT), (('-44884271') IS FALSE), (NULL IN ()))))); -- 0ms;
SELECT ALL ((((vt0.c1)&(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (0.894118649238808); -- 0ms;
SELECT ALL CAST(((vt0.c0)<(vt0.c0)) AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT (((COALESCE(DISTINCT x'', vt0.c2), ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))<((((((((((vt0.c1)AND(vt0.c1)))OR(NULL)))AND(vt0.c1)))AND(vt0.c2)), (vt0.c1 IN ()), ((vt0.c2)%(vt0.c1))))) FROM vt0 WHERE ((((('1450033383') IS FALSE))GLOB(NULL))); -- 0ms;
SELECT (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))<=((((vt0.c0)OR(NULL))))) FROM vt0 ORDER BY ((((vt0.c1))>((vt0.c1))) IN (CAST(vt0.c1 AS REAL))) ASC  NULLS FIRST; -- 0ms;
SELECT ((((NULL)OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)))OR(vt0.c1 COLLATE RTRIM)) FROM vt0 GROUP BY ((((x'')|(vt0.c2)))>=(((vt0.c2)<>(vt0.c2)))) HAVING (GROUP_CONCAT('-49563013') IN ()); -- 0ms;
SELECT DISTINCT vt0.c2, UNLIKELY(DISTINCT ((vt0.c1)>>(vt0.c1))), (vt0.c0 COLLATE NOCASE IN (vt0.c2)) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED; -- 0ms;
SELECT CASE WHEN TRIM(vt0.c0) THEN CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END END, 0.959267542421972, 0xffffffffd251e42d COLLATE NOCASE FROM vt0 WHERE (((0.9445026459939827)<=(((x'dfab')<('799097344'))))); -- 1ms;
SELECT DISTINCT highlight(((vt0.c2)/(vt0.c0)), x'' COLLATE RTRIM, CAST(vt0.c2 AS NUMERIC), (('')<<(vt0.c0))), -3.71058954E8, CASE WHEN (+ (vt0.c2)) THEN (vt0.c1 IN (vt0.c2)) ELSE vt0.c1 END FROM vt0 WHERE (CASE (('1843879286') IS FALSE)  WHEN LIKELY('F#U~Aui') THEN (('') BETWEEN (0.9734993930020133) AND (x'')) END); -- 0ms;
SELECT DISTINCT (+ (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END)) FROM vt0 LIMIT 954338445; -- 0ms;
SELECT CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)) AS TEXT), ((CASE vt0.c2  WHEN vt0.c2 THEN '' WHEN vt0.c2 THEN vt0.c0 WHEN 0x3619bf9 THEN vt0.c1 END)!=(vt0.c1)), ((+ (vt0.c1)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c2, CASE LOWER(vt0.c1)  WHEN CASE x''  WHEN vt0.c1 THEN vt0.c2 END THEN ABS(vt0.c1) END, 0.11333641220005564 FROM vt0 WHERE (((((((((('-1604712179' IN ()))OR(('-1533026070' IN (0x722035a, x'')))))OR(CAST('844275040' AS BLOB))))AND((('*b_gⶻ')LIKE(NULL)))))AND(CAST('1127936050' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (((NOT ('>K鈔Zዺe\*I'))) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (vt0.c0)) FROM vt0 WHERE (CASE WHEN ((((0.5010791865318989)OR(x'')))OR('-1296741317')) THEN (('') NOT NULL) END); -- 0ms;
SELECT (~ ((NOT (vt0.c1)))) FROM vt0 WHERE ((((NULL) NOT BETWEEN (0.06550913415567416) AND (x'aa36')) IN ())); -- 0ms;
SELECT (((~ (vt0.c0)))AND(CAST(NULL AS NUMERIC))) FROM vt0 WHERE (LIKELIHOOD(DISTINCT x'', 0.5435026531708603) COLLATE NOCASE); -- 0ms;
SELECT ALL (((((vt0.c2))<=((vt0.c1)))) ISNULL) FROM vt0; -- 0ms;
SELECT ((((vt0.c1)>>('')))IS NOT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))) FROM vt0 WHERE (((((((((('2003706165')AND(NULL)))OR(x'')))AND(x'53da')))OR('-1171188961')) IN ())); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (CASE WHEN x'' COLLATE BINARY THEN '1343901838' END); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)+(vt0.c2))  WHEN (vt0.c2 IN ()) THEN ((vt0.c1) BETWEEN (0.9734993756479267) AND (vt0.c1)) ELSE (vt0.c0 IN ()) END FROM vt0 WHERE (CAST(CASE WHEN 688329059 THEN '-932642101' WHEN '410804281' THEN 0x77d87480 WHEN 0.018602213831197645 THEN x'' WHEN '0.7901742988304093' THEN 0.2919783265416114 WHEN x'' THEN x'' END AS INTEGER)); -- 1ms;
SELECT ((((vt0.c1)<<(vt0.c1)))=((vt0.c1 IN (vt0.c0)))) FROM vt0 WHERE ('1494301547') GROUP BY CAST(((x'')-(vt0.c1)) AS TEXT) HAVING ((((((((((vt0.c1)OR(vt0.c1)))OR(NULL)))AND('䯾P[\rtUW')))OR(vt0.c0)))LIKE((vt0.c1 IN (vt0.c2)))); -- 0ms;
SELECT DISTINCT NULL, (((vt0.c2)) NOT BETWEEN ((((vt0.c0)<<(vt0.c1)))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 END))), COUNT(((vt0.c2)+(vt0.c2))) OVER () FROM vt0 WHERE ((NOT ((('9nπ)') NOTNULL)))) GROUP BY (vt0.c1 IN ()) COLLATE BINARY, CAST(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 END AS TEXT), ((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2))) ISNULL); -- 0ms;
SELECT DISTINCT ((((vt0.c2 IN ())))<=((vt0.c0 COLLATE NOCASE))) FROM vt0 WHERE (((NULL)IS('-1966574332')) COLLATE NOCASE) ORDER BY (((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))OR(SQLITE_COMPILEOPTION_GET(vt0.c2))); -- 0ms;
SELECT DISTINCT ((MAX(vt0.c1))IS(x'')) FROM vt0 GROUP BY CAST(((vt0.c1)!=(vt0.c1)) AS INTEGER), (((0.3864675440266422)<<(vt0.c1)) IN ()), ((((CAST(vt0.c0 AS NUMERIC))AND(((((vt0.c0)OR(0.25323037320963027)))OR(0.6460249687469695)))))AND((~ (vt0.c1)))) HAVING ((vt0.c0 COLLATE RTRIM) IS FALSE); -- 0ms;
SELECT ALL ((((('AtctCA5L' IN ()))OR(AVG(0.8559076792211723))))OR(vt0.c1 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)<=(MIN(vt0.c0))), ((vt0.c1)=(vt0.c1)) COLLATE NOCASE, NTILE(((((vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0))) IN (vt0.c0 COLLATE NOCASE, ((vt0.c1) IS FALSE)))) OVER () FROM vt0 WHERE (((('-2026630730')) BETWEEN ((((0x582c4c2d) BETWEEN (NULL) AND ('-1985201211')))) AND (((+ (''))))));SELECT ALL json_array((((vt0.c2, vt0.c0, vt0.c2))<(('506138379', vt0.c2, vt0.c0))), STRFTIME(vt0.c2, vt0.c2, vt0.c2)) FROM vt0; -- 0ms;
SELECT DISTINCT (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END, ((vt0.c0)=(vt0.c1)), COUNT(vt0.c1)))<=((((((vt0.c1)AND('1737773003')))AND(-2080892102)), 0.45508888048030627, (vt0.c1 IN ())))) FROM vt0 WHERE ((NOT (json_valid(x'')))); -- 0ms;
SELECT DISTINCT (- ((vt0.c0 IN (vt0.c2)))), ((((json_insert(vt0.c2, vt0.c0, vt0.c1))OR((NOT (vt0.c0)))))OR('a-M<E%')), (((((+ (vt0.c1)))AND(((vt0.c1)<(vt0.c1)))))AND((vt0.c1 IN ()))) FROM vt0 WHERE ((((NULL) NOT NULL) IN ())); -- 0ms;
SELECT '-976376827' FROM vt0; -- 0ms;
SELECT AVG((vt0.c1 IN (vt0.c0, vt0.c0))) FROM vt0 WHERE ((+ ((~ (0X5b4665bf))))) ORDER BY (((vt0.c2 IN (x''))) NOTNULL) DESC  NULLS FIRST, (((vt0.c1)) BETWEEN (((((vt0.c1))=((NULL))))) AND ((CAST(vt0.c1 AS BLOB)))); -- 0ms;
SELECT DISTINCT NULL, ((vt0.c0 COLLATE NOCASE)>=(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END)), COUNT(vt0.c0) FROM vt0 WHERE ((('-1487185201' COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT MAX((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2)))) FROM vt0; -- 0ms;
SELECT CUME_DIST() OVER () FROM vt0 LIMIT 511745013; -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY) NOTNULL) FROM vt0 WHERE ((x'2734' IN ())) LIMIT -145170234; -- 0ms;
SELECT DISTINCT ((((((x'')GLOB(vt0.c1)))OR('-273402815')))OR(MIN(vt0.c0, vt0.c0, vt0.c2, vt0.c2))) FROM vt0 WHERE (CAST(((((((((1.441915669E9)AND(NULL)))AND(NULL)))OR('1227571714')))OR(0.4017885454038309)) AS REAL)); -- 0ms;
SELECT DISTINCT ((vt0.c1)/(((vt0.c1)<>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT INSTR(((vt0.c2)IS NOT(vt0.c2)), (NOT (vt0.c0))) FROM vt0; -- 1ms;
SELECT DISTINCT (SUM(vt0.c2) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT CASE vt0.c2 COLLATE RTRIM  WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END THEN COUNT(vt0.c0) ELSE ((vt0.c2)!=(vt0.c2)) END, (((vt0.c0) NOT NULL) IN ()), CASE WHEN vt0.c2 THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) END FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c2 IN ()) IN ()) FROM vt0 GROUP BY ((((vt0.c2)OR(((vt0.c2)!=(vt0.c2)))))AND(COALESCE(0.4596735966513298, vt0.c0))) HAVING vt0.c1; -- 0ms;
SELECT ALL CASE ((((((((((((vt0.c2)AND(x'c378')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c2))  WHEN MIN(vt0.c2) THEN NULL WHEN ((vt0.c0) ISNULL) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 ELSE LIKELIHOOD(vt0.c0, 0.058299564152168304) END FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(CAST(vt0.c2 AS TEXT))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c2)GLOB(vt0.c1)) COLLATE NOCASE) OVER () FROM vt0 ORDER BY (((((((('pk')AND(((vt0.c1)IS(vt0.c2)))))AND(vt0.c1)))OR(((vt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0)IS(vt0.c2))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt0.c0, vt0.c2, CAST(UPPER(DISTINCT vt0.c2) AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1, NULLIF(DISTINCT COUNT(*), (('-1909850490') NOT BETWEEN (vt0.c2) AND (vt0.c1))), (+ ((vt0.c1 IN ()))), ((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))) NOTNULL), TOTAL((vt0.c2 IN ())) FROM vt0 WHERE (IFNULL(DISTINCT (('-1599715530')|(x'cf341a95')), ((NULL) BETWEEN (x'') AND (0.8928693785067411)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c2)%(vt0.c0))) OVER () FROM vt0 WHERE ((((((NULL)>>(-1e500))))>((((x'')==(0.8865808447196487)))))); -- 0ms;
SELECT ALL LAST_VALUE((((vt0.c0)) NOT BETWEEN ((GLOB(vt0.c2, vt0.c1))) AND ((CAST(vt0.c0 AS NUMERIC))))) OVER (), CAST(((vt0.c1)AND(vt0.c2)) AS NUMERIC), 0.3941932471531474 FROM vt0; -- 0ms;
SELECT TOTAL(x''), ((((vt0.c1))<=((vt0.c2))) IN (((vt0.c0)IS(vt0.c2)))), CASE GROUP_CONCAT(vt0.c2)  WHEN vt0.c2 COLLATE NOCASE THEN ABS(vt0.c1) WHEN (~ (vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)) WHEN AVG(vt0.c2) THEN x'' END FROM vt0 WHERE (CAST(NULL AS INTEGER)) LIMIT 766424907 OFFSET 1671150504; -- 0ms;
SELECT ALL ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))<=('')), LOWER(json_remove(vt0.c1, vt0.c0)), AVG(((x'c3b1')%(vt0.c1))) OVER () FROM vt0;SELECT ALL (((+ (vt0.c2)))>=(vt0.c2)) FROM vt0 WHERE ((((('_V' COLLATE NOCASE)AND(((1843879286)LIKE('-1547843982')))))AND('h72' COLLATE BINARY))) LIMIT 1224828894; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS NUMERIC) FROM vt0 WHERE (CAST(x'' COLLATE BINARY AS TEXT)); -- 0ms;
SELECT (((vt0.c1 IN ()))>(vt0.c1 COLLATE NOCASE)), NULL, (NOT (x'' COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c2)))OR(x'')) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c1)AND('A[')))AND(x'')) COLLATE RTRIM, (((NOT (vt0.c0)))>(GROUP_CONCAT(vt0.c1))), vt0.c2, load_extension(((vt0.c0)IS(vt0.c1))), CAST((((vt0.c1))<((vt0.c1))) AS NUMERIC) FROM vt0 WHERE ((((('-778154005') ISNULL)) NOT NULL));SELECT DISTINCT (NOT (vt0.c0 COLLATE NOCASE)) FROM vt0 ORDER BY ((((CAST(NULL AS TEXT))OR(vt0.c0 COLLATE BINARY)))AND(TRIM(vt0.c0, vt0.c2))), CAST((~ (vt0.c2)) AS NUMERIC) ASC  NULLS FIRST; -- 1ms;
SELECT ALL (NULL IN ()) FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c1)IS(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))) FROM vt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((vt0.c2) BETWEEN (vt0.c0) AND (-1e500)))) AND (((vt0.c0 IN ())))), ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))), (((vt0.c0)) NOT BETWEEN (((- (vt0.c2)))) AND (('420144085'))) FROM vt0; -- 0ms;
SELECT vt0.c1 FROM vt0 WHERE (((('yK')) BETWEEN ((LIKELY(DISTINCT x'4ffe'))) AND ((0.5353118000666711 COLLATE BINARY)))) ORDER BY ((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)) COLLATE BINARY DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT AVG(vt0.c0) OVER (), (((+ (vt0.c1)))&(NULL)), (+ (GROUP_CONCAT(0.38662533927878884))) FROM vt0; -- 0ms;
SELECT ALL CAST((vt0.c2 IN ()) AS INTEGER) FROM vt0 WHERE (INSTR(CAST('' AS BLOB), (('')IS NOT('\nY')))); -- 0ms;
SELECT CAST(TOTAL(vt0.c2) AS REAL) FROM vt0 WHERE ((CASE x''  WHEN 'yq_yyp耥' THEN '0.28669902643804057' WHEN NULL THEN NULL WHEN 0.4368378002415443 THEN NULL ELSE 1994775398 END IN ())); -- 0ms;
SELECT ALL ((((+ (vt0.c0))))<((GROUP_CONCAT(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((IFNULL(vt0.c1, vt0.c0))%(x'9523')), (((((((((((vt0.c2))<((''))))AND(((vt0.c2)GLOB(vt0.c0)))))AND(CAST(vt0.c2 AS INTEGER))))AND(((vt0.c0)>(vt0.c0)))))AND((NOT (vt0.c0)))), ((CAST(vt0.c0 AS TEXT)) IS TRUE), TOTAL(TOTAL(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), LIKELY(DISTINCT vt0.c0) COLLATE RTRIM FROM vt0 WHERE (CASE 740606482 COLLATE BINARY  WHEN 0.9625700097673616 THEN (NULL IN ()) ELSE 0.41037998077291526 END);SELECT ALL ((~ (vt0.c0)) IN ()) FROM vt0 WHERE ((((CAST('' AS BLOB)))<=(((+ ('609544186')))))); -- 1ms;
SELECT ALL CASE (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c2)) AND ((vt0.c1, '-370512883', vt0.c2)))  WHEN TRIM(vt0.c1, '(K᭾)') THEN (((vt0.c0))>=(('J'))) END FROM vt0; -- 0ms;
SELECT DISTINCT MIN(((vt0.c2) NOT NULL)), ((((COUNT(vt0.c2))OR(((vt0.c0)IS NOT(vt0.c1)))))OR((~ (vt0.c2)))), (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))>>((vt0.c2 IN ()))) FROM vt0; -- 0ms;
SELECT ABS(DISTINCT (- (vt0.c1))), ((HEX(vt0.c1))/((NOT (vt0.c2)))), (((LIKELY(DISTINCT vt0.c0)))==((((vt0.c0)/(vt0.c1))))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c1)<=(vt0.c2))) NOTNULL), CAST(0.5020771365349876 AS NUMERIC), (NOT (TOTAL_CHANGES())) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0) NOTNULL))), ((CAST(vt0.c2 AS REAL))/(CAST(vt0.c1 AS BLOB))), (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c1)*(vt0.c2))))) FROM vt0 WHERE ((((0xffffffffaa8d3082, 0.13817676782318056, x'')) NOT BETWEEN ((ABS(DISTINCT 0.7454658317535652), ((((((((0.38657453083126425)OR(NULL)))OR(NULL)))AND(NULL)))OR('1671150504')), (((x'', 0.5932208056521693, '-990640743')) BETWEEN (('S*', NULL, '-583457716')) AND ((0.14299003545790778, '2043146463', 0.38540479657092297))))) AND ((NULL COLLATE BINARY, ((x'')!=(x'')), '&I' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c1 END) ISNULL), ((((((((((1685424139)AND(vt0.c0)))AND(x'')))OR(vt0.c0)))OR(vt0.c0)))>=(SQLITE_VERSION())), (((((vt0.c0)=(vt0.c1)), ((((vt0.c0)OR(NULL)))OR(vt0.c0)), (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.c2, vt0.c0, vt0.c0)))))<((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END, '1208128601', 'TRUE' COLLATE BINARY))) FROM vt0 WHERE (TYPEOF(DISTINCT CAST(x'a25b' AS TEXT))) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (vt0.c0)) ASC; -- 0ms;
SELECT vt0.c1, (+ (((vt0.c0) ISNULL))), UNLIKELY(((vt0.c2)OR(vt0.c1))) FROM vt0 WHERE (((((((((((NULL)OR(0.9406593934187439)))AND(0.9172226894755826)))AND(x'0adb')))AND(x'd734')))<=('1925164330'))); -- 0ms;
SELECT DISTINCT (((vt0.c0, x'', vt0.c0)) BETWEEN ((((vt0.c1)>=(vt0.c2)), (- (vt0.c1)), ((x'')LIKE(vt0.c2)))) AND ((((vt0.c2)-(vt0.c1)), vt0.c2, ((((vt0.c1)AND(vt0.c1)))AND(vt0.c2))))) FROM vt0; -- 0ms;
SELECT DISTINCT AVG(CAST(vt0.c2 AS TEXT)) FROM vt0 WHERE ((+ (((NULL) ISNULL)))); -- 1ms;
SELECT CASE (((vt0.c0, vt0.c2, x''))<((vt0.c1, vt0.c1, vt0.c2)))  WHEN x'' THEN (NOT (vt0.c1)) END FROM vt0; -- 0ms;
SELECT ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))==((- (vt0.c2)))) FROM vt0 ORDER BY ((SQLITE_VERSION()) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c2 AS NUMERIC))) DESC; -- 0ms;
SELECT ALL CASE vt0.c0 COLLATE RTRIM  WHEN json_quote(vt0.c1) THEN (+ (vt0.c2)) WHEN (vt0.c0 IN (0.4926967100334333)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)) THEN vt0.c1 COLLATE NOCASE END FROM vt0 WHERE ((((-1.53302607E9, NULL, -5486001.0)) BETWEEN ((((x'9fed') NOT BETWEEN (NULL) AND (NULL)), '', (('-1207468190')>(0X3971e328)))) AND (((((('sB5<G.+wf')OR(NULL)))AND(0.27891610950872414)), CAST(0x40e0cb32 AS INTEGER), (((0.5058179934065095))>=(('*o*'))))))) GROUP BY json_object(vt0.c2 COLLATE NOCASE, ((((vt0.c2)OR('410804281')))AND(vt0.c1))); -- 0ms;
SELECT ALL ((((rtreenode(vt0.c2, vt0.c2))OR(((vt0.c0)%(vt0.c2)))))AND(((NULL)>>(vt0.c2)))), vt0.c1, CAST(GROUP_CONCAT(vt0.c2) AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((COUNT(vt0.c1)))) FROM vt0 ORDER BY ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM ASC; -- 0ms;
SELECT DISTINCT CAST((~ (vt0.c2)) AS REAL) FROM vt0 WHERE (TRIM(DISTINCT ((0.34090828887002966)IS('0.29134745636118')), CASE WHEN 0.8545397001122121 THEN '440746874' END)); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((vt0.c1))), ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END) ISNULL), (+ (((vt0.c1) BETWEEN (0.24747384536286743) AND (vt0.c0)))) FROM vt0 WHERE ((((NULL)) BETWEEN ((TRIM('-2032009491'))) AND (((((x'2f8248ec', x'f888', '-1955026231')) BETWEEN ((NULL, -6.72219863E8, 0.9934984875934709)) AND (('UsC5p', '', ''))))))); -- 0ms;
SELECT DISTINCT vt0.c1 COLLATE NOCASE FROM vt0; -- 0ms;
SELECT (- (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))) FROM vt0; -- 1ms;
SELECT DISTINCT TOTAL(((vt0.c2) IS TRUE)) FROM vt0 WHERE (((((x'')<(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT (~ ((((vt0.c0))<((vt0.c2))))), (- (CAST(vt0.c1 AS INTEGER))), (vt0.c0 IN ()) COLLATE RTRIM FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((vt0.c1) NOTNULL) IN (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END)) FROM vt0 ORDER BY ((vt0.c0) BETWEEN ((((vt0.c2))>=((vt0.c1)))) AND (((vt0.c1)|(0Xffffffffba31131f))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT SUM(((vt0.c2)!=(NULL))), ((vt0.c2)IS NOT((((vt0.c2)) BETWEEN ((0.8532049070382753)) AND ((vt0.c1))))), ((((((((vt0.c1 COLLATE NOCASE)OR(((vt0.c0) IS FALSE))))OR(vt0.c0)))AND(LOWER(vt0.c1))))OR(((vt0.c0)/(vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)))AND(NULL))) NOT BETWEEN (((vt0.c1)<>(vt0.c0))) AND (((vt0.c0) ISNULL))), (+ (SUM(vt0.c1))), NTH_VALUE((LIKELIHOOD(vt0.c0, 0.3107609385270743) IN ((- (vt0.c0)))), vt0.c2) OVER () FROM vt0 WHERE (NULL);SELECT DISTINCT (NOT (HEX(vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c2)<<(vt0.c0))))) FROM vt0 WHERE ('828712417'); -- 0ms;
SELECT CAST(LTRIM(vt0.c0) AS BLOB), ((((((((((((json_quote(vt0.c2))AND(0.8867839593555977)))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))))AND(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))AND(((vt0.c1)=(vt0.c1)))))OR(AVG('771860730'))))OR((+ (vt0.c2)))), COUNT(((vt0.c0) ISNULL)), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) IS TRUE), SUM(((((vt0.c1)OR(vt0.c1)))OR('nV'))), TOTAL(((vt0.c2)/(NULL))) OVER (), ((((vt0.c0)+(vt0.c1)))==((- (vt0.c1)))) FROM vt0 WHERE (((0.18129867726446702 COLLATE RTRIM)<=(NULL))) ORDER BY ((((vt0.c0)OR('LCR4J2gmN')))AND(vt0.c1)) DESC, CASE '-1416748088'  WHEN CASE vt0.c1  WHEN x'60bd' THEN vt0.c2 END THEN ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0)) END DESC  NULLS LAST LIMIT 1953530679 OFFSET 46274460; -- 1ms;
SELECT ALL (CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE 0.7631359006893408 END IN ()) FROM vt0; -- 0ms;
SELECT ((((((((((0.4346623252249444)*(vt0.c2)))AND(((((((((vt0.c0)OR(NULL)))OR(vt0.c1)))AND(vt0.c2)))OR(NULL)))))AND(CAST(vt0.c1 AS INTEGER))))OR(CAST(vt0.c2 AS TEXT))))AND((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END THEN TIME(vt0.c0, vt0.c2, vt0.c2, 0.893645139134991, vt0.c2) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN LIKELY(DISTINCT vt0.c2) THEN ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)) ELSE (vt0.c1 IN ()) END, ((SUM(vt0.c0)) BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND ((((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c2, vt0.c1, vt0.c2))))) FROM vt0 WHERE (((((799851746)OR(NULL)))AND('ya')) COLLATE RTRIM); -- 0ms;
SELECT (((((((((((((vt0.c1 IN (vt0.c2)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c2) IS TRUE))))AND(((x'')||(NULL)))))AND(vt0.c1)))AND(((vt0.c0)IS(vt0.c2)))))OR(((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))) FROM vt0 WHERE ((((('')||(NULL)))>=(((((x'')AND('0.8976757170508767')))AND('1725140894'))))); -- 0ms;
SELECT (((((vt0.c0) ISNULL), vt0.c2, (vt0.c0 IN ())))>(((vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c2 ELSE '' END, vt0.c2 COLLATE RTRIM))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((CASE NULL  WHEN NULL THEN x'' END) NOT BETWEEN (('-1433587582' IN ())) AND (CAST(0.6415965813575047 AS INTEGER)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c2)>=(vt0.c1))) OVER (), CAST(((vt0.c2)=(vt0.c2)) AS INTEGER), TOTAL((NOT (vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)AND((vt0.c1 IN ()))))AND(MIN(vt0.c2))) FROM vt0 WHERE (((((x'')LIKE(4.04594017E8))) NOT BETWEEN ('' COLLATE NOCASE) AND ((('1188289330') NOT BETWEEN ('803475767') AND (x''))))); -- 0ms;
SELECT vt0.c1 COLLATE BINARY FROM vt0; -- 0ms;
SELECT 0.5651318188086204 FROM vt0 WHERE ((CASE WHEN '339346633' THEN x'' ELSE '' END IN (CASE NULL  WHEN '-1826346603' THEN '-978267767' WHEN NULL THEN NULL WHEN '188961339' THEN 0.45712307000263896 WHEN '-292740725' THEN 0.9628761524796067 WHEN 0.7171401671874661 THEN x'' ELSE NULL END))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c2)<<(vt0.c2)))OR('1404120869')))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(MIN(vt0.c2))))OR(((vt0.c1)<=(vt0.c0)))) FROM vt0 WHERE (((((2.81555968E8 COLLATE BINARY)AND((('-180366594')>>('1042937360')))))AND(('4aeO' IN ())))); -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE RTRIM) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c2 AS INTEGER), ((((vt0.c2)AND((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))))AND(NULL)), CASE CAST(0Xffffffffcb054de9 AS REAL)  WHEN SUM('Zl_') THEN ((vt0.c1) IS FALSE) END FROM vt0 WHERE (((json_object('142478261', 0.13038649455333284)) NOT BETWEEN (((NULL) NOT NULL)) AND (CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT MAX(TOTAL(NULL)) FROM vt0 WHERE ((((((('')AND(x'')))AND(0.9935282804412667)))LIKE(CASE WHEN 'UOz^' THEN NULL ELSE '6V(0邲g6h' END)));SELECT NULL FROM vt0 NOT INDEXED WHERE (CASE WHEN CAST('-1e500' AS BLOB) THEN IFNULL(DISTINCT '-794288961', NULL) END); -- 0ms;
SELECT DISTINCT (~ (((vt0.c0) IS TRUE))) FROM vt0 WHERE (CAST((('286020632') ISNULL) AS TEXT)); -- 0ms;
SELECT DISTINCT ABS(vt0.c0), ((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN ((x'11ed' IN (vt0.c2))) AND ((vt0.c1 IN ()))), GROUP_CONCAT(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))AND(x''))) OVER () FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM FROM vt0 WHERE ((((',2 taj%')IS(NULL)) IN ())) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) ASC  NULLS LAST; -- 0ms;
SELECT vt0.c2 FROM vt0 WHERE (CAST(((NULL) NOT NULL) AS REAL)) GROUP BY (('.QV')IS(((vt0.c2)OR(vt0.c2)))) HAVING 0.600237403613024; -- 0ms;
SELECT DISTINCT ((((vt0.c2 COLLATE NOCASE)AND((((vt0.c1, vt0.c2, vt0.c2))>((vt0.c2, vt0.c2, vt0.c0))))))AND(((((vt0.c2)AND(vt0.c0)))OR(vt0.c0)))), ((((vt0.c0)IS(vt0.c0)))!=(json_object(x'', vt0.c2))), LIKELY(((vt0.c1) NOTNULL)) FROM vt0 WHERE (((0.23370043527871076)+((('0.9934984875934709')==(x'6bd6'))))) LIMIT 1278709571;SELECT ALL COUNT(((0.5778495718685627) NOT BETWEEN (vt0.c1) AND (vt0.c0))) OVER () FROM vt0 WHERE ((((((NOT (0.22419267979333923)))AND(CAST('401826102' AS NUMERIC))))OR(((NULL)>=(0.43298160143638476))))) ORDER BY vt0.c2; -- 0ms;
