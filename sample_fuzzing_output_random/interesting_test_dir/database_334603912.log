-- Time: 2024/06/07 11:50:34
-- Database: database12
-- Database version: 3.40.0
-- seed value: 334603912
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
PRAGMA default_cache_size = -1008345920; -- 0ms;
UPDATE rt0 SET (c1, c2)=(0.755840713647045, 0.5292339400535251) WHERE ((((rt0.c0)-(rt0.c0)))LIKE(TYPEOF(rt0.c2))); -- 1ms;
PRAGMA temp.journal_size_limit = 1184626523894683077; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c0, c0)=('>%''', NULL, 'k') WHERE (((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((((((x'')AND(rt0.c1)))AND(rt0.c2))))); -- 1ms;
END; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('W'')x^E'); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.755840713647045), (x''), ('I'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('-1008345920'), ('-1367592700'), (-1.00834592E9); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='k', c1=NULL; -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
UPDATE rt0 SET (c2, c0, c0)=(0.5292339400535251, x'', 0.0013282298745060928); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='', c0=NULL; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x''); -- 0ms;
PRAGMA threads; -- 0ms;
PRAGMA integrity_check; -- 0ms;
VACUUM; -- 1ms;
PRAGMA temp.application_id = -1820378375113286281; -- 0ms;
UPDATE OR FAIL rt0 SET (c1)=(0.9293032519143223); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c1)=(NULL, x''); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1) VALUES (NULL, 0.0); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='0.5292339400535251', c1=x'1428'; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=('') WHERE '-1367592700'; -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA temp.cache_spill = 6300949002434729016; -- 0ms;
CREATE TEMPORARY VIEW v0(c0, c1, c2) AS SELECT DISTINCT ((rt0.c1)>>(vt0.c0 COLLATE RTRIM)), ((((rt0.c0)=(rt0.c2)))>((~ (rt0.c1)))), ((((((((IFNULL(DISTINCT '-1450835463', rt0.c1))AND(load_extension(vt0.c0, vt0.c0))))AND(MAX(rt0.c0, rt0.c1))))AND(((rt0.c2)GLOB(rt0.c1)))))AND((rt0.c2 IN ()))) FROM rt0, vt0; -- 0ms;
PRAGMA automatic_index; -- 0ms;
UPDATE vt0 SET c0=x''; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR FAIL vt0 SET c0=x''; -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.stats; -- 0ms;
PRAGMA threads = 486892842796337460; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA locking_mode; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('347289752') WHERE (~ (CASE rt0.c1  WHEN rt0.c2 THEN x'0622' END)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE vt0 SET c0=x'2001'; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.0013282298745060928, c1=0Xffffffffae7c3104 WHERE (+ (('347289752' IN ()))); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES ('-1450835463', 0.8746449375348898); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'66c1'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.5292339400535251); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('0.8746449375348898', x''), (3.47289752E8, 0.1425993881369696), ('-78202145', NULL); -- 1ms;
CREATE TEMP TABLE t0 (c0 REAL ); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (((('-78202145') IS FALSE)) NOT BETWEEN (COUNT(*)) AND (rt0.c1 COLLATE RTRIM)) FROM vt0;SELECT (((v0.c0, v0.c2, rt0.c1)) NOT BETWEEN ((LIKELIHOOD(DISTINCT v0.c0, 0.12793207717144384), TOTAL(vt0.c0), ((t0.c0) IS FALSE))) AND (((+ (v0.c1)), ((v0.c0)*(0x12313544)), ''))) FROM v0 NOT INDEXED WHERE (((('305214788' IN (x'', x''))) ISNULL));SELECT ALL ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS INTEGER))) FROM vt0, rt0, t0 ORDER BY (CAST(vt0.c0 AS REAL) IN ())  NULLS LAST;SELECT DISTINCT CASE ((rt0.c2)||(vt0.c0))  WHEN ((rt0.c1) NOT NULL) THEN ((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)) END FROM t0;SELECT TOTAL(((NULL)<=(v0.c2))) COLLATE NOCASE FROM vt0, t0, rt0 GROUP BY DATE((+ (rt0.c2)), CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 END, CASE WHEN NULL THEN v0.c1 ELSE 305214788 END) HAVING (NOT (((rt0.c2)LIKE(rt0.c0))));SELECT (((v0.c2 IN ()))*(0xffffffffe7d8e68b)) FROM rt0, v0, vt0, t0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (3.05214788E8)))&(((v0.c0)==(vt0.c0)))) FROM vt0, rt0, v0, t0; -- 0ms;
SELECT ALL MAX(((t0.c0) BETWEEN (t0.c0) AND (rt0.c2))) FROM vt0, t0;SELECT MAX((+ (v0.c0))), (((v0.c0)) BETWEEN (((- (t0.c0)))) AND (('0iE礬B|M'))), NULL, ((CAST(t0.c0 AS BLOB)) NOTNULL), CUME_DIST() OVER () FROM rt0, v0, vt0, t0 WHERE (((((('305214788', x'', NULL)) BETWEEN ((NULL, 0.1425993881369696, NULL)) AND ((0.37828554565791006, 0X43cddb1b, NULL)))) BETWEEN (((')^^p)RCI') NOT NULL)) AND (TYPEOF(NULL)))); -- 2ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2))) BETWEEN (((((0.82074304079849)OR(vt0.c0)))AND(rt0.c1))) AND (-934487414)) FROM vt0, t0, v0, rt0 WHERE (CAST(((0.7318372555662194) BETWEEN (x'84e923a3f076') AND (x'')) AS REAL)) ORDER BY TIME(((v0.c0) NOT BETWEEN ('uv') AND (t0.c0)), (((rt0.c1))<>((vt0.c0))), x'3c4f', (+ (rt0.c0)), (((('%O>9u&S9')AND(v0.c0)))AND(v0.c1))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt0.c2 THEN NULL ELSE NULL END) OVER () FROM v0 WHERE ('/(');SELECT DISTINCT (((vt0.c0, v0.c0, rt0.c1, v0.c2, v0.c0))<=((vt0.c0, rt0.c0, rt0.c0, rt0.c2, v0.c0))) COLLATE NOCASE FROM t0, rt0 LIMIT 437968067 OFFSET -1318982726;SELECT DISTINCT x'', (((-1325330295, v0.c2, rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN (('D*zꮘ8', rt0.c1, (+ (t0.c0)), ((rt0.c0) NOT NULL), t0.c0)) AND ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), v0.c1, HEX(rt0.c2), v0.c0, ((((rt0.c1)AND(v0.c2)))OR('-786257000'))))), GROUP_CONCAT('Po') FILTER(WHERE ((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND((((v0.c0, v0.c0, rt0.c1))<=((vt0.c0, v0.c1, v0.c1))))))AND(CASE WHEN v0.c2 THEN vt0.c0 END))) OVER ( ORDER BY ((((v0.c2)AND(0.26795878717260413)))OR(((x'')!=(rt0.c2))))  NULLS FIRST) FROM t0 WHERE ((CASE WHEN '1793138705' THEN NULL END IN ()));SELECT ALL ((((t0.c0)IS NOT(v0.c1)))<(CASE WHEN v0.c0 THEN v0.c1 END)) FROM v0, rt0, t0; -- 0ms;
SELECT DISTINCT (((((v0.c2)) BETWEEN ((vt0.c0)) AND ((v0.c2)))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (('' IN ()))), CAST('' AS NUMERIC) COLLATE NOCASE, (NOT ('44051706')) FROM t0, v0, rt0 WHERE (((((((((((NULL)OR(x'')))AND('n	‑SJ')))AND(0.9361551563700687)))OR(x'')))<>((~ (0.9906932340661)))));SELECT ALL CASE highlight(rt0.c2, v0.c0, vt0.c0, rt0.c0)  WHEN (rt0.c0 IN ()) THEN vt0.c0 COLLATE RTRIM WHEN GROUP_CONCAT(v0.c2) THEN CASE v0.c1  WHEN vt0.c0 THEN rt0.c1 END WHEN '' THEN 0.7996225656488432 ELSE v0.c0 COLLATE BINARY END, (((vt0.c0 IN ())) ISNULL), ((((vt0.c0) NOT BETWEEN (v0.c0) AND (0.7798070186549945)))*((rt0.c2 IN (t0.c0)))) FROM vt0, v0;SELECT DISTINCT CAST(LIKELY(DISTINCT v0.c1) AS BLOB), GROUP_CONCAT((+ (t0.c0))) OVER (), AVG(((vt0.c0)-(v0.c0))) FROM v0, t0, vt0 WHERE (((((CASE NULL  WHEN NULL THEN x'2d3e' ELSE '437968067' END)OR(((x'')<=(x'9206')))))AND(CASE x'9e7a902afaf9'  WHEN 0.08223910015493663 THEN 0.45957567462632376 ELSE 0xfffffffff59999ed END))); -- 0ms;
SELECT DISTINCT CASE WHEN json_object(v0.c0, t0.c0) THEN ((rt0.c2)+(v0.c2)) ELSE ((v0.c1) IS FALSE) END FROM t0, vt0, v0, rt0 LIMIT 1818433219 OFFSET 956134422; -- 0ms;
SELECT ALL CASE WHEN rt0.c2 COLLATE RTRIM THEN INSTR(rt0.c2, t0.c0) ELSE ((((1.7976931348623157E308)AND(rt0.c1)))AND(NULL)) END, GLOB(json_valid(vt0.c0), v0.c1), ((SUM(NULL))>(CASE rt0.c2  WHEN t0.c0 THEN vt0.c0 ELSE v0.c0 END)) FROM rt0 ORDER BY (v0.c2 IN ()) COLLATE RTRIM, ((((((((((((((((rt0.c2)OR(v0.c2)))OR(rt0.c0)))AND(t0.c0)))AND(rt0.c0)))AND(v0.c1)))OR(t0.c0)))AND(CAST(rt0.c2 AS NUMERIC))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))) DESC;SELECT ALL x'4296' FROM vt0, rt0, v0, t0; -- 0ms;
SELECT ALL ((((v0.c0) IS FALSE)) IS TRUE) FROM vt0, rt0, v0, t0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2))) FROM t0 WHERE (CASE CASE WHEN '#' THEN 346344483 WHEN 0.2835423818780567 THEN NULL WHEN NULL THEN 'l''|gN}QeD' END  WHEN json_extract(0.8746449375348898, 1.818433219E9, 0.7303432123617818, 65214116) THEN ((('9hw_o', x'', 0.5485535133163664)) BETWEEN (('1793138705', NULL, '-1554861039')) AND (('3&', '\nmOꮘw', '7O,#3RI'))) END);SELECT DISTINCT (((t0.c0, rt0.c2, v0.c0)) BETWEEN ((((((x'')AND(rt0.c1)))OR(v0.c2)), (('Ne')&(rt0.c0)), CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 END)) AND (((((v0.c2, v0.c0, rt0.c0))<((t0.c0, rt0.c2, rt0.c0))), t0.c0, (- (v0.c1))))) FROM rt0 ORDER BY ((((((v0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))OR(((v0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((t0.c0) IS TRUE)))  NULLS LAST;SELECT CAST(v0.c0 AS REAL) COLLATE BINARY FROM vt0, t0 WHERE (((0.5757135539207581 COLLATE RTRIM) BETWEEN (((NULL) NOT BETWEEN ('7O,#3RI') AND (''))) AND (((NULL)|('')))));SELECT ABS(((v0.c1)/(rt0.c1))) FROM rt0, vt0, t0;SELECT ALL SUM((~ (t0.c0))) OVER () FROM rt0, v0, vt0;SELECT ALL (((NOT (v0.c2))) BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))) AND (((((v0.c0)OR('-1302351419')))OR(rt0.c0)))) FROM v0, rt0, vt0 LIMIT 1728056421; -- 0ms;
SELECT DISTINCT x'b3a3' FROM t0, v0 WHERE ('1019523977'); -- 0ms;
SELECT DISTINCT (((((((((rt0.c0)OR(t0.c0)))OR(rt0.c2)))OR(v0.c2)))OR(v0.c1)) IN ()) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END IN ()) FROM vt0, rt0, v0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))) BETWEEN (((((((((v0.c2)AND(v0.c2)))OR(t0.c0)))AND(v0.c1)))OR(v0.c1))) AND ((+ (rt0.c1)))) FROM v0, vt0, rt0;SELECT DISTINCT (((((t0.c0)<=(v0.c0))))!=(((rt0.c2 IN ())))) FROM t0, rt0, vt0, v0 ORDER BY CAST(CAST(t0.c0 AS TEXT) AS REAL); -- 0ms;
SELECT ((((NULL)AND((- (rt0.c1)))))AND(json_insert(rt0.c0, v0.c0, NULL, NULL, 0.4187914916731664))) FROM t0, vt0 WHERE (((LAST_INSERT_ROWID()) IS FALSE)) GROUP BY (('0.9906932340661')OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)) HAVING (NOT (((rt0.c0) NOT NULL))) LIMIT -786257000;SELECT DISTINCT RANK() OVER () FROM vt0 WHERE (x'4500'); -- 0ms;
SELECT DISTINCT (((((v0.c0)OR(rt0.c2)))AND(t0.c0)) IN ()), CASE v0.c2 COLLATE NOCASE  WHEN -7.8202145E7 THEN v0.c2 ELSE -980953340 COLLATE BINARY END, 0X71a75c1c FROM v0, rt0, vt0, t0; -- 0ms;
SELECT ALL ((x'57bf')<>(0.8636628214441163)), (((v0.c0)) BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN v0.c1 THEN rt0.c2 ELSE v0.c2 END)) AND ((CAST(vt0.c0 AS NUMERIC)))), CAST(GLOB(t0.c0, vt0.c0) AS BLOB), AVG((+ ('661876840'))), (((v0.c1)) NOT BETWEEN ((v0.c1 COLLATE NOCASE)) AND ((PRINTF(t0.c0)))) FROM vt0, rt0, t0 LIMIT 1019523977;SELECT ALL NTILE(GLOB((- (vt0.c0)), vt0.c0 COLLATE NOCASE)) OVER () FROM vt0 WHERE ((NULL IN ('1297971500')) COLLATE BINARY) GROUP BY CAST((((v0.c1))>=(('1793138705'))) AS TEXT) HAVING ((CAST(t0.c0 AS TEXT)) ISNULL);SELECT DISTINCT ((CASE WHEN rt0.c0 THEN v0.c2 ELSE '1436228669' END) NOT BETWEEN (3.46344483E8) AND (CAST(v0.c1 AS NUMERIC))) FROM rt0, v0; -- 0ms;
SELECT ((((v0.c2)<<(rt0.c1))) ISNULL) FROM vt0;SELECT DISTINCT (((vt0.c0, t0.c0, vt0.c0)) BETWEEN ((UNLIKELY(DISTINCT v0.c1), SUM(rt0.c1), (+ (rt0.c2)))) AND ((v0.c1, ((((rt0.c2)OR(rt0.c1)))AND(t0.c0)), LTRIM(rt0.c1, rt0.c2)))) FROM vt0 WHERE (GLOB((('') ISNULL), UNLIKELY(DISTINCT '')));SELECT DISTINCT (((- (t0.c0))) IS FALSE), ((CASE WHEN v0.c2 THEN rt0.c1 ELSE t0.c0 END) NOT BETWEEN ((v0.c2 IN ())) AND (0.8951475726938335)), CASE WHEN ((v0.c2)>>(v0.c0)) THEN CASE WHEN x'de86' THEN v0.c2 END ELSE CASE rt0.c0  WHEN v0.c1 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 ELSE vt0.c0 END END FROM t0, rt0 WHERE (ABS(DATE(x'', 0xffffffffc651af5d, '%b&A')));SELECT DISTINCT (((vt0.c0))!=(((((rt0.c1))>=(('171886234')))))) FROM vt0, v0, t0;SELECT DISTINCT MAX(0.12463577885870047) FROM t0 WHERE (CAST(((-1686720714)*(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN 0.0668267297550349 THEN t0.c0 WHEN rt0.c1 THEN v0.c0 WHEN t0.c0 THEN v0.c1 END THEN ((x'') ISNULL) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))) END, ((UNLIKELY(DISTINCT rt0.c2))GLOB(((v0.c1)<=(NULL)))), CAST(MAX(rt0.c0) AS BLOB) FROM rt0 WHERE (0.8951475726938335) GROUP BY ((((rt0.c1)OR(rt0.c2)))>(((((rt0.c1)OR(4.4051706E7)))AND(v0.c2)))), (((t0.c0, v0.c1, vt0.c0)) BETWEEN ((0.8309189488001361, x'' COLLATE NOCASE, TRIM(rt0.c1))) AND (((+ (rt0.c2)), (rt0.c2 IN ()), ((((v0.c0)OR(v0.c2)))OR(rt0.c1))))), ((((rt0.c1) ISNULL))OR('5B''(5[p'));SELECT DISTINCT (((((((t0.c0)OR(rt0.c2)))AND('-1909947341'))))>=((COUNT(v0.c1)))) FROM rt0, v0 WHERE (TYPEOF(((0x15f2b710) BETWEEN (NULL) AND (x''))));SELECT DISTINCT ((NULL) NOT BETWEEN (((rt0.c1) BETWEEN (v0.c0) AND (rt0.c0))) AND ('*!y?2' COLLATE RTRIM)), COUNT(*), CAST(SUM(v0.c1) AS TEXT) FROM t0, rt0 WHERE (CASE CASE WHEN NULL THEN NULL ELSE x'c6b3' END  WHEN (-1302351419 IN ('\nmOꮘw', NULL)) THEN (NOT ('')) END);SELECT DISTINCT GROUP_CONCAT(rt0.c1) FROM v0 NOT INDEXED;SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) BETWEEN (json_array_length(rt0.c2, 0.05056794523910646)) AND (t0.c0 COLLATE BINARY)) FROM t0, rt0, vt0 WHERE (TRIM(LIKE(NULL, '0.9361551563700687', 'ǹ'))); -- 0ms;
SELECT ALL ((rt0.c1)>(((('1198133369')) NOT BETWEEN ((t0.c0)) AND ((NULL))))), ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c2)|(rt0.c2))) AND ((- (t0.c0)))), ((((v0.c1) NOT BETWEEN (t0.c0) AND (v0.c2)))<<(COUNT(vt0.c0))) FROM v0;SELECT DISTINCT SUM(0.5289590609064077) OVER () FROM rt0, t0 WHERE (((((549096505) NOT BETWEEN (x'ef8e489ca316') AND (1330171048))) ISNULL)); -- 0ms;
SELECT DISTINCT (((- (rt0.c0)))>(CAST(NULL AS REAL))), CASE ((((((((v0.c0)OR(v0.c1)))AND(t0.c0)))AND(v0.c1)))AND(rt0.c1))  WHEN LOWER(vt0.c0) THEN CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 ELSE x'1b0f' END WHEN load_extension(t0.c0) THEN CASE v0.c1  WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)/(v0.c0)) THEN JULIANDAY(v0.c2, rt0.c2, 177914510) END, json_extract((t0.c0 IN (t0.c0, v0.c1)), json_valid(v0.c0), (('ǹt~	') NOT BETWEEN (rt0.c1) AND (v0.c2)), ((t0.c0)/(vt0.c0)), (((vt0.c0, rt0.c2, rt0.c0, '-934487414', v0.c1)) BETWEEN ((vt0.c0, vt0.c0, x'', vt0.c0, 0.907863051127132)) AND ((v0.c0, rt0.c0, 'V0', v0.c1, rt0.c0))), ((vt0.c0)-(''))) FROM v0, t0, rt0 WHERE (x'');SELECT ((((((((((v0.c2)%(v0.c1)))OR((- (v0.c0)))))AND(((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))))AND(t0.c0 COLLATE NOCASE)))AND(((rt0.c0)%(v0.c1)))) FROM t0, rt0, vt0, v0 GROUP BY CASE WHEN ((x'') NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN (NOT (v0.c2)) END, 0X35510ef3, CAST(CASE 'XXA'  WHEN rt0.c2 THEN rt0.c1 END AS REAL) HAVING CAST(((v0.c1) NOT NULL) AS REAL) ORDER BY rt0.c2;SELECT CAST(TYPEOF(DISTINCT t0.c0) AS BLOB), (NOT (COUNT(v0.c1))), ((CAST(v0.c2 AS BLOB))|(((t0.c0)>=(0X1b934a29)))) FROM rt0, vt0, v0;SELECT DISTINCT ((((rt0.c0)&('-132978336'))) NOT BETWEEN (((rt0.c0)<(t0.c0))) AND (CAST(t0.c0 AS NUMERIC))) FROM t0;SELECT DISTINCT (('-169612144')|(((v0.c1)>(vt0.c0)))) FROM v0, t0, rt0, vt0 ORDER BY ((((v0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (v0.c0 COLLATE BINARY))  NULLS LAST; -- 0ms;
SELECT ALL CASE WHEN ((v0.c2) IS TRUE) THEN x'0735' END FROM rt0, v0, vt0 WHERE ((((CASE NULL  WHEN 0.7798070186549945 THEN 'TRUE' ELSE '-1e500' END, ((x'') NOT NULL), x''))>(((('-980953340') ISNULL), 0.0013282298745060928 COLLATE BINARY, ((1.2979715E9)|(x'1e46')))))) GROUP BY ((rt0.c1)-(((v0.c1) BETWEEN (t0.c0) AND (v0.c2))));SELECT ALL TYPEOF(DISTINCT rt0.c1) COLLATE RTRIM FROM v0 NOT INDEXED, vt0, t0, rt0 WHERE (((json_object('EPz8Tt_RV', '1')) NOT NULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt0.c0, t0.c0, '346344483')) BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((rt0.c2, rt0.c0, vt0.c0)))) FROM rt0, v0 ORDER BY ((vt0.c0 COLLATE NOCASE)<<(CASE rt0.c0  WHEN v0.c2 THEN vt0.c0 END)) DESC  NULLS LAST;SELECT ALL ((IFNULL(0.7673596575139942, v0.c2))>=(((v0.c1)/(rt0.c2)))) FROM t0 WHERE ((((NULL) NOT BETWEEN (NULL) AND ('%O>9u&S9')) IN ()));SELECT DISTINCT (+ (((rt0.c2) ISNULL))) FROM rt0, v0 WHERE (((((-1302351419)|(NULL))) BETWEEN ((('|s\s<') IS TRUE)) AND ((((0.26359169808384664)) NOT BETWEEN (('Lt')) AND ((NULL)))))); -- 0ms;
SELECT (((~ (v0.c0)))IS(json_array_length(t0.c0, rt0.c2))), (+ ((rt0.c2 IN ()))), (((v0.c2, x'ba88', '-1864884257'))=((-9.34487414E8, v0.c2, vt0.c0))) COLLATE BINARY FROM vt0;SELECT (((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN (('', x'', rt0.c0)) AND ((v0.c1, '', v0.c2)))) NOT BETWEEN ((+ (rt0.c1))) AND (((t0.c0)|(vt0.c0)))) FROM v0, t0, rt0, vt0 WHERE (((('꽝[\QPr?軨')/(-1526129348)) IN ())) GROUP BY (((t0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) IN (rt0.c2 COLLATE BINARY)) HAVING NULL ORDER BY NULLIF(DISTINCT ((t0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)), NULL)  NULLS LAST; -- 1ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN (('-1051705651')) AND ((((vt0.c0) IS FALSE)))), MIN(COUNT(((v0.c1)<<(rt0.c0)))), (((rt0.c0))>((((NULL)*(vt0.c0))))) FROM t0, v0, rt0 WHERE ((((0.47270722398253384)) BETWEEN (((+ (',b_P8aK')))) AND (((~ (''))))));SELECT ((((1.818433219E9) IS TRUE))/(x'')) FROM rt0 WHERE (((NULL) BETWEEN ((((('')AND('-786257000')))AND(0.17866197144695595))) AND ((NOT (8.94504691E8))))); -- 0ms;
SELECT ((v0.c0 COLLATE RTRIM) NOT NULL), CASE (rt0.c0 IN ())  WHEN (+ (t0.c0)) THEN ((0.5406777178074275)*(t0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))) THEN x'' WHEN ((rt0.c1)OR(vt0.c0)) THEN (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2))) WHEN CASE WHEN vt0.c0 THEN rt0.c0 WHEN v0.c1 THEN v0.c1 WHEN vt0.c0 THEN t0.c0 ELSE v0.c1 END THEN (((vt0.c0, rt0.c1, rt0.c0))==((vt0.c0, v0.c1, v0.c1))) WHEN CASE rt0.c0  WHEN v0.c2 THEN v0.c2 END THEN rt0.c1 COLLATE BINARY END, GROUP_CONCAT(((((v0.c0)AND(vt0.c0)))OR(v0.c0))) OVER () FROM v0, t0, rt0 WHERE ((((x'' IN (x''))) IS FALSE));SELECT DISTINCT (~ (((v0.c0) BETWEEN (v0.c1) AND (rt0.c1)))) FROM rt0, vt0 WHERE ((((+ (NULL)))>>(CAST(x'cd25' AS INTEGER))));SELECT DISTINCT (((v0.c1)) BETWEEN ((('-1489655049' IN ()))) AND ((LIKELIHOOD(rt0.c2, 0.006936554991096022)))) FROM rt0, t0 WHERE ((((('缁\r')%(-1367592700))) NOT BETWEEN (NULL COLLATE BINARY) AND ((('u㐳ie')<>(0xffffffffd122ab98)))));SELECT DISTINCT ((rt0.c1) NOT BETWEEN (((rt0.c0)>(v0.c1))) AND (((rt0.c0)/(v0.c2)))) FROM t0, rt0, v0 WHERE (CASE WHEN CASE WHEN x'' THEN x'' ELSE NULL END THEN ((((NULL)AND(NULL)))OR(NULL)) ELSE '346344483' END); -- 0ms;
SELECT PERCENT_RANK() OVER ( GROUPS BETWEEN ((((v0.c2)<<('-644557292')))AND(SQLITE_SOURCE_ID())) PRECEDING AND  CURRENT ROW) FROM t0; -- 0ms;
SELECT DISTINCT json_remove(((v0.c2)!=(rt0.c1)), GROUP_CONCAT(rt0.c2)) FROM vt0, v0 WHERE (CAST(IFNULL('347289752', 3.68228112E8) AS INTEGER));SELECT ALL (+ (((((v0.c2)AND(v0.c1)))OR(rt0.c2)))), 1297971500, (+ ((('-724088727')IS(v0.c0)))) FROM t0, rt0, vt0, v0 ORDER BY ((v0.c2 COLLATE BINARY)LIKE(CAST(t0.c0 AS REAL))) DESC; -- 0ms;
SELECT DISTINCT CAST('1855668381' AS INTEGER) FROM t0, rt0, vt0 LIMIT -1972272656; -- 0ms;
SELECT 0.9743836264980651 FROM t0 INNER JOIN rt0 ON -1.69612144E8 RIGHT OUTER JOIN v0 ON (COALESCE(v0.c1, rt0.c2) IN (((rt0.c1)|(v0.c0)))) WHERE (((((0.17986828726901138) NOTNULL)) IS FALSE)) GROUP BY 0.26795878717260413; -- 0ms;
SELECT CAST(CAST(rt0.c0 AS BLOB) AS INTEGER) FROM t0, rt0, v0 WHERE (x'') ORDER BY ((((((((((rt0.c1)AND(NULL)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))IS NOT((+ (rt0.c1)))), ((v0.c1)IS NOT(rt0.c2)) COLLATE NOCASE DESC; -- 0ms;
SELECT ALL (((0.40428324091134404, rt0.c0, vt0.c0, vt0.c0, rt0.c2)) BETWEEN ((LIKELY(DISTINCT vt0.c0), (v0.c0 IN ()), ((rt0.c0)%(x'')), rt0.c0 COLLATE BINARY, '-388432330')) AND (((((rt0.c2)) BETWEEN ((6.6187684E8)) AND ((v0.c1))), ((rt0.c2) BETWEEN (NULL) AND (rt0.c1)), (~ (rt0.c0)), ((v0.c1)|(v0.c0)), (rt0.c0 IN ())))), CASE ((rt0.c1)<<(t0.c0))  WHEN rt0.c0 THEN -1.3675927E9 ELSE v0.c1 END, NTILE(CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN vt0.c0 ELSE (+ (vt0.c0)) END) OVER () FROM vt0 WHERE (((x'b416' IN ()) IN (CAST(0.9056864559064418 AS TEXT))));SELECT DISTINCT (((((((v0.c1)OR(rt0.c2)))OR(rt0.c2)), 0.510603184967941, ((rt0.c2)%(rt0.c2))))==((CAST(rt0.c0 AS TEXT), ((rt0.c0) NOTNULL), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) FROM v0, t0, vt0 WHERE ((((CAST('1198133369' AS REAL)))<((((0.8054997323239639) NOT NULL))))) ORDER BY x'eaf4' ASC LIMIT -1864884257 OFFSET -1001560926;SELECT ALL NULL FROM vt0, t0, v0 WHERE (((0.08873597468533068)IS(0.5193328538730125)) COLLATE NOCASE COLLATE BINARY) LIMIT 1029950458 OFFSET 1651558017; -- 0ms;
SELECT ALL LEAD(rt0.c2, ((CAST(rt0.c0 AS REAL))<=(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))), (0.3951546764256376 IN ())) OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING) FROM rt0; -- 0ms;
SELECT CAST(x'' AS TEXT) COLLATE BINARY, (+ (TRIM(vt0.c0))), ((((((((CAST(vt0.c0 AS BLOB))OR(TOTAL(t0.c0))))OR((((t0.c0)) NOT BETWEEN ((x'2004')) AND ((rt0.c1))))))OR(((rt0.c0) NOTNULL))))AND(rt0.c1)) FROM t0, rt0 WHERE (((CAST(0.3113691592002583 AS REAL))IS(CAST(0.3889090831175549 AS NUMERIC))));SELECT ALL rt0.c0 FROM rt0, vt0, v0 WHERE ((((NULL)) NOT BETWEEN ((((0.16061186423553697)|(0.9162524104284926)))) AND ((((x'') NOT NULL))))); -- 0ms;
SELECT CASE (t0.c0 IN ())  WHEN (((rt0.c0)) BETWEEN ((t0.c0)) AND ((v0.c1))) THEN (((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))) END FROM v0, t0, rt0, vt0; -- 0ms;
SELECT DISTINCT (((t0.c0) BETWEEN (v0.c1) AND (v0.c0)) IN ()) FROM t0, rt0, vt0, v0 WHERE ((((('笫L') ISNULL)) NOTNULL)); -- 0ms;
SELECT DISTINCT ((x'')<=(ABS(rt0.c1))) FROM vt0, t0, rt0, v0 WHERE (((((((x'')AND('>%''')))AND(-1.554861039E9))) IS FALSE)); -- 0ms;
SELECT ROW_NUMBER() OVER (), ((((v0.c1)+(v0.c0))) NOTNULL), GROUP_CONCAT(((vt0.c0)&(vt0.c0))), UNLIKELY('i'), CAST((+ (rt0.c1)) AS TEXT), (- (GROUP_CONCAT(rt0.c2))), GROUP_CONCAT(LIKELY(rt0.c0)) FROM v0;SELECT DISTINCT SUM(((vt0.c0)*(v0.c0))) FROM rt0 WHERE ((((CAST(0.6939452314492488 AS NUMERIC)))>(((593901689 IN (0.4695282686758928))))));SELECT DISTINCT ((((rt0.c2) ISNULL)) NOT BETWEEN (x'') AND (((rt0.c2)/(v0.c0)))), GROUP_CONCAT(CAST(t0.c0 AS BLOB)) OVER (), (NOT (v0.c0)) COLLATE RTRIM FROM v0, t0, vt0, rt0 GROUP BY v0.c2 HAVING ((GROUP_CONCAT(rt0.c1))GLOB(v0.c1 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT CASE WHEN ((NULL)<<(x'cd39')) THEN (v0.c1 IN ()) WHEN x'' THEN CAST(x'' AS INTEGER) WHEN (t0.c0 IN ()) THEN ((v0.c1) ISNULL) ELSE LIKELY(DISTINCT rt0.c1) END FROM rt0, v0, t0 WHERE ((~ (CASE WHEN '-78202145' THEN 1606208698 ELSE x'5ab3' END))); -- 1ms;
SELECT ALL 0X1b934a29, ((CASE WHEN vt0.c0 THEN v0.c2 WHEN t0.c0 THEN rt0.c1 WHEN 'Wd{/kZy⳺' THEN v0.c1 END) IS TRUE), CASE WHEN GROUP_CONCAT(rt0.c2) THEN ((v0.c1)>(rt0.c2)) ELSE (NOT (rt0.c0)) END FROM rt0, t0, v0, vt0 WHERE (CASE WHEN ((0.04025069960072725)>('u㐳ie')) THEN CAST(0.6916521397124339 AS INTEGER) ELSE TYPEOF(NULL) END); -- 0ms;
SELECT COUNT(GROUP_CONCAT((~ (x'')))) FROM v0;SELECT DISTINCT (((- (rt0.c1)))IS NOT((rt0.c2 IN (x'', vt0.c0)))) FROM rt0 ORDER BY (v0.c1 IN ())  NULLS LAST, (((rt0.c0, rt0.c1, t0.c0, NULL, v0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER), (((v0.c0)) BETWEEN ((0.6497616988483921)) AND ((vt0.c0))), CAST(vt0.c0 AS NUMERIC), CAST(rt0.c1 AS TEXT), ((vt0.c0) IS FALSE))) AND ((CASE WHEN '1' THEN v0.c1 WHEN t0.c0 THEN v0.c1 WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END, ((v0.c1)<=(t0.c0)), NULL, v0.c1, TYPEOF(DISTINCT rt0.c2))));SELECT DISTINCT highlight(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END, CASE WHEN vt0.c0 THEN rt0.c0 END, ((v0.c2) IS FALSE), 0.6991676889175522) FROM vt0, rt0, t0 ORDER BY ((CAST(rt0.c1 AS REAL))AND(((((v0.c0)OR(0.10700862258215171)))AND(v0.c0))));SELECT ALL ((((CASE '-1348703919'  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)AND(CASE WHEN NULL THEN v0.c2 ELSE v0.c0 END)))OR(((v0.c2) NOT NULL))) FROM t0, vt0, v0 WHERE ((((x'' IN ())) NOT BETWEEN (((x'') NOT BETWEEN (0Xffffffffdc0d4de2) AND (x''))) AND (x'' COLLATE RTRIM))) GROUP BY x'' HAVING ((json_quote(v0.c0)) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c0)IS(rt0.c0))));SELECT ALL COUNT(AVG(rt0.c2) COLLATE RTRIM), GROUP_CONCAT(CASE WHEN rt0.c1 THEN v0.c2 END) FILTER(WHERE ((((v0.c1) BETWEEN ('') AND (v0.c2))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (rtreenode(t0.c0, rt0.c2)))) OVER (), '-1718537165' FROM t0, v0;SELECT ALL (((~ (v0.c0)))/(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))), ((-1.348703919E9) IS TRUE), ((CASE v0.c0  WHEN t0.c0 THEN rt0.c2 ELSE v0.c1 END) BETWEEN (((((t0.c0)OR(v0.c1)))AND(t0.c0))) AND ((('44051706')>=(NULL)))) FROM v0, rt0, t0; -- 0ms;
SELECT (((v0.c0, v0.c2, v0.c1)) BETWEEN ((v0.c0, LOWER(t0.c0), '-1972272656' COLLATE NOCASE)) AND (((- (rt0.c1)), (- (t0.c0)), ((((((((0.3147893767473159)OR(t0.c0)))AND(rt0.c1)))OR('')))OR(v0.c0))))) FROM rt0, v0, t0 WHERE (0.3003698483353805) ORDER BY LOWER(DISTINCT '-388432330') DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE WHEN x'' THEN vt0.c0 END) BETWEEN ((~ (rt0.c0))) AND (((rt0.c2)LIKE(rt0.c1)))), ((((((((((((((((v0.c0)OR(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND((rt0.c1 IN ()))))OR(LTRIM(rt0.c1, t0.c0))))AND((((rt0.c1))=((rt0.c2))))))OR(v0.c2)), (((vt0.c0 IN ())) NOT BETWEEN (NULLIF(DISTINCT t0.c0, rt0.c2)) AND (NULL COLLATE BINARY)) FROM v0;SELECT ((((((((((t0.c0)AND(t0.c0)))AND(rt0.c2)))OR(v0.c1)))OR(rt0.c2))) NOT BETWEEN (((v0.c1)>(rt0.c1))) AND ((((v0.c1, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c0, v0.c1))))) FROM v0 LIMIT 1202258229 OFFSET -1450835463;SELECT DISTINCT LAG((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.9078236877764011 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), '_00㕂')) AND ((vt0.c0, ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0))), SQLITE_VERSION(), CASE WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0))>((vt0.c0))) ELSE (~ (x'')) END) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE TIES) FROM vt0 ORDER BY RTRIM(((v0.c0) NOT NULL)) ASC  NULLS LAST;SELECT DISTINCT NTH_VALUE((((v0.c2 IN ()))<=(((rt0.c1)IS NOT(NULL)))), rt0.c0) OVER () FROM rt0, t0, v0 WHERE (((NULL) IS FALSE)); -- 1ms;
SELECT DISTINCT ABS(DISTINCT CAST(rt0.c0 AS INTEGER)), CAST(MAX(vt0.c0) AS INTEGER), ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c2 END) NOT BETWEEN (CASE v0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN v0.c1 WHEN v0.c0 THEN rt0.c2 END) AND (((vt0.c0)LIKE(rt0.c0)))) FROM v0, vt0 WHERE (((CAST('u%?][.Nt%' AS TEXT))+((((((((('jgm')OR(NULL)))AND(0.5261712020166042)))OR(0.9710283323481325)))AND(NULL))))) GROUP BY (((x'')LIKE(v0.c2)) IN (((((v0.c2)AND(v0.c2)))AND(t0.c0)))) HAVING (rt0.c2 IN ());SELECT DISTINCT (((((((((((rt0.c1))<=((v0.c1))))OR(v0.c0 COLLATE RTRIM)))OR(((0.40957046580224965) ISNULL))))AND(CASE WHEN rt0.c0 THEN t0.c0 ELSE 0.0707217579280448 END)))AND(x'')), PERCENT_RANK() OVER (), (NOT (((v0.c0)<(v0.c0)))) FROM vt0, v0;SELECT ALL (((x'', vt0.c0, v0.c1)) BETWEEN ((COALESCE(DISTINCT t0.c0, rt0.c0), CASE WHEN 0Xffffffff8042d79f THEN v0.c1 WHEN t0.c0 THEN rt0.c0 WHEN v0.c2 THEN vt0.c0 END, (v0.c1 IN ()))) AND (((v0.c1 IN (v0.c2)), (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))), SUM(v0.c0)))), rt0.c2, (GROUP_CONCAT(rt0.c0) IN ()) FROM rt0, t0, v0, vt0 WHERE ((~ ((('568597933')/(0.0707217579280448))))); -- 0ms;
SELECT DISTINCT LAG(((((vt0.c0)IS(vt0.c0)))*(vt0.c0)), COALESCE((((vt0.c0))>=((vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (663516945))), CASE ((vt0.c0)&(vt0.c0))  WHEN (~ (vt0.c0)) THEN vt0.c0 ELSE ((((((((vt0.c0)OR('')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END) OVER (), RANK() OVER (), (((v0.c2 IN (v0.c1, rt0.c2)))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) FROM vt0;SELECT CAST((rt0.c2 IN ()) AS NUMERIC) FROM t0, rt0, v0, vt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM v0, t0;SELECT ALL (((v0.c0 IN (v0.c0, t0.c0))) NOTNULL) FROM v0, rt0, vt0;SELECT ALL CASE WHEN rt0.c1 THEN COUNT(*) ELSE ((rt0.c2)||(rt0.c1)) END FROM t0, v0, vt0 WHERE (CAST('	~kFz*' COLLATE NOCASE AS BLOB)) ORDER BY t0.c0;SELECT ALL -1.32978336E8 FROM v0, vt0 WHERE (CAST((+ (x'')) AS INTEGER)) LIMIT 1317308393; -- 0ms;
SELECT ALL ((((t0.c0, rt0.c1, v0.c0))<((rt0.c0, t0.c0, 0.1425993881369696))) IN ()) FROM rt0 NOT INDEXED, v0, t0, vt0 WHERE (((('661653508')) NOT BETWEEN ((json_array(x'', ''))) AND ((NULL COLLATE NOCASE))));SELECT CAST(GROUP_CONCAT(rt0.c0) AS BLOB) FROM t0, rt0, vt0 WHERE (CASE WHEN ((x'') BETWEEN (0.2803994267213904) AND (x'')) THEN ((((-1786970055)OR(0.8405144051306785)))OR(0.5816277123669195)) WHEN ('0.7673596575139942' IN (0.5338446818467889)) THEN 0x47a90135 WHEN (((x''))==(('-304260877'))) THEN (NULL IN ()) ELSE (('')/('')) END) ORDER BY 0Xfffffffffde9c1a4 DESC  NULLS FIRST; -- 0ms;
SELECT rt0.c0 FROM v0, vt0;SELECT DISTINCT ((v0.c0)<<(((rt0.c2)>>(rt0.c0)))) FROM t0, v0, vt0 WHERE ((NOT ((('O\') BETWEEN (0.6497616988483921) AND ('-1579820317'))))) GROUP BY ((((((((((((((vt0.c0)AND(v0.c2)))AND(json(v0.c0))))OR(json_insert(NULL, rt0.c2, rt0.c2, v0.c1, rt0.c0))))OR(((((((((rt0.c2)OR(v0.c1)))AND(NULL)))OR(vt0.c0)))OR(v0.c0)))))OR('-2012354824')))OR(STRFTIME(v0.c1, t0.c0, rt0.c1))))OR(x'')) HAVING (((- (v0.c0))) IS FALSE);SELECT DISTINCT (CASE v0.c1  WHEN rt0.c2 THEN t0.c0 END IN ()) FROM vt0, rt0 WHERE ((- (LOWER(DISTINCT '')))) ORDER BY (+ (((rt0.c0)-(v0.c1))));SELECT SUM(((rt0.c0)/(v0.c0))), MIN(((vt0.c0)%(rt0.c2))), CAST(((rt0.c0) BETWEEN (v0.c2) AND (vt0.c0)) AS INTEGER) FROM v0, t0, vt0, rt0 WHERE (((((((((((NULL) NOT BETWEEN (NULL) AND (-1654632008)))AND((~ (NULL)))))AND(TRIM(DISTINCT 0.151261559703475))))AND(((((((((1555653770)OR(x'10c3')))OR(x'')))OR('65214116')))AND('')))))OR(((x'') BETWEEN (0.08011432472431623) AND ('745357743'))))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(v0.c0)))OR(t0.c0))) IS TRUE), ((CASE rt0.c2  WHEN rt0.c2 THEN '896689810' WHEN rt0.c0 THEN v0.c2 WHEN rt0.c2 THEN rt0.c2 END)==(MIN(vt0.c0))), (NOT (((rt0.c1) IS TRUE))) FROM t0, vt0, rt0 WHERE (TRIM(QUOTE(0X47a90135), ((('-648442136')) BETWEEN ((x'')) AND ((0X1e818b53))))) GROUP BY (((rt0.c2)%(vt0.c0)) IN ()) HAVING ((v0.c2 COLLATE NOCASE)!=((~ (vt0.c0)))) LIMIT 796713572;SELECT DISTINCT FIRST_VALUE((((rt0.c0 IN ())) NOT BETWEEN (t0.c0) AND (vt0.c0))) OVER () FROM v0, vt0, rt0, t0; -- 0ms;
SELECT ALL (~ ((((v0.c1))==((v0.c2))))) FROM v0, vt0, rt0 WHERE (0.3416356472375278); -- 0ms;
SELECT ALL (~ (((rt0.c2) IS TRUE))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (- (((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))) FROM rt0 WHERE (((('')<=('956134422')) IN ()));SELECT json_object(((v0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), CASE WHEN t0.c0 THEN rt0.c1 ELSE vt0.c0 END), (((v0.c1 IN (v0.c0)))AND(CASE WHEN rt0.c0 THEN v0.c0 END)), ((((rt0.c1)OR(rt0.c1)))AND(7.96713572E8)) COLLATE NOCASE FROM t0, v0, rt0 LIMIT -578718608;SELECT DISTINCT COUNT(*) OVER () FROM t0; -- 0ms;
SELECT DISTINCT AVG((((t0.c0))<>((t0.c0)))) OVER () FROM t0, rt0, v0, vt0; -- 0ms;
SELECT CAST(((((((((v0.c1)AND(v0.c1)))OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)) AS NUMERIC) FROM vt0 WHERE (CASE WHEN (- (0x47a90135)) THEN ((((0.704836780525402)OR('*!y?2')))AND(x'')) WHEN ((0Xffffffffc44d64a2)||(-1579820317)) THEN CASE '1172412583'  WHEN '' THEN 'q4g?AD	_%' END WHEN '^Z' THEN ((((NULL)OR('#.H쯺)_')))AND(x'75f1')) ELSE LIKELY(x'780debd5') END);SELECT DISTINCT STRFTIME(rt0.c2, rt0.c2, v0.c0) COLLATE BINARY FROM rt0 WHERE (((x'')AND(x'' COLLATE BINARY)));SELECT DISTINCT (- (((vt0.c0)>>(rt0.c1)))) FROM rt0 WHERE ((((0.7937268633878399) ISNULL) IN ()));SELECT COUNT(*) FROM v0, rt0, t0 WHERE (((CAST('244740328' AS INTEGER)) ISNULL)) ORDER BY ((((((rt0.c0)!=(rt0.c1)))AND((v0.c0 IN ()))))AND((((NULL))>((x''))))) DESC, vt0.c0;SELECT ((vt0.c0 COLLATE BINARY)>=((~ (v0.c2)))) FROM v0, rt0, vt0, t0; -- 0ms;
SELECT ((((((((((v0.c0)OR(v0.c0)))OR(rt0.c0)))AND(v0.c1)))OR(v0.c0))) NOT NULL) FROM t0, rt0 WHERE (((((((x'24245da1')!=(NULL)))OR((+ ('-967725219')))))AND(((NULL) NOT BETWEEN (0x63c0ec36) AND (x''))))) ORDER BY t0.c0 DESC  NULLS LAST;SELECT (- (((vt0.c0)*(vt0.c0)))) FROM rt0, t0 WHERE (json_remove((- (NULL)), (('1016845525') ISNULL)));SELECT COUNT(*) OVER () FROM t0, vt0, v0, rt0 WHERE ((- (CASE NULL  WHEN '680117012' THEN NULL ELSE 0.9078236877764011 END))); -- 0ms;
SELECT DISTINCT CASE CASE t0.c0  WHEN v0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c1 THEN v0.c1 ELSE vt0.c0 END  WHEN ((((v0.c2)AND(v0.c1)))OR(rt0.c1)) THEN ((rt0.c0) NOT NULL) ELSE x'' END FROM t0, vt0 WHERE (((0.7612522547468912 IN ()) IN ()));SELECT (((((v0.c2 IN ()))AND(CAST(vt0.c0 AS NUMERIC))))AND((rt0.c0 IN ()))) FROM rt0 WHERE (CASE CAST(-1.001560926E9 AS REAL)  WHEN ((0.3113691592002583) BETWEEN (x'') AND (0.0013282298745060928)) THEN (('k') IS TRUE) WHEN 1929822015 THEN ((NULL)IS NOT(x'')) WHEN HEX(DISTINCT '1663401221') THEN 0.7458595123592567 END); -- 0ms;
SELECT DISTINCT CAST(json_extract(rt0.c1, v0.c0) AS INTEGER), ((((((((rt0.c0)OR(rt0.c1)))AND(t0.c0)))AND(CAST('HrG,5W' AS INTEGER))))OR((v0.c2 IN ()))), (((+ (rt0.c0)))==(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1)))) FROM rt0 WHERE (((((((NULL, -648442136, NULL))>=(('-977769705', x'', NULL)))))<((((x'')<(x''))))));SELECT (((((((t0.c0))>=((rt0.c1))))OR(((v0.c2) NOTNULL))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) FROM v0, t0, rt0 WHERE ((-1.32978336E8 IN (0.723920272774635)) COLLATE RTRIM COLLATE NOCASE) ORDER BY CASE '-791293467'  WHEN ((rt0.c0)||(rt0.c0)) THEN ((rt0.c2)<(vt0.c0)) WHEN (~ (rt0.c2)) THEN (NOT (rt0.c1)) WHEN ((v0.c2)<=('')) THEN CAST(v0.c0 AS REAL) END DESC  NULLS LAST, SQLITE_VERSION() ASC, NULLIF(((t0.c0) BETWEEN (v0.c0) AND (rt0.c2)), CASE 0.6556707163007292  WHEN v0.c2 THEN t0.c0 ELSE t0.c0 END) ASC  NULLS FIRST;SELECT ALL (+ (0.4584118273704565)), (((((rt0.c2, vt0.c0, t0.c0))>=((rt0.c2, v0.c2, vt0.c0))))IS NOT(((rt0.c2)*(rt0.c2)))), CAST(((((vt0.c0)AND(rt0.c0)))OR(t0.c0)) AS INTEGER) FROM rt0, t0, v0, vt0 WHERE (((((1.172412583E9) IS FALSE))<<(''))); -- 0ms;
SELECT ((CASE 0xffffffffdfb55f18  WHEN t0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((('') IS FALSE)) AND (v0.c1 COLLATE RTRIM)), (+ ((vt0.c0 IN (v0.c0)))), (((v0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((((0.8708575359133851)&(v0.c1)), rt0.c0 COLLATE BINARY, (rt0.c0 IN ()))) AND ((x'2d68', (v0.c2 IN ()), CAST(0.45957567462632376 AS TEXT)))) FROM v0, rt0;SELECT (NOT (((v0.c1)>>(vt0.c0)))) FROM v0, t0, vt0 WHERE ((((('568597933')=(0.2917589969512675)))>>((- ('398684246'))))); -- 0ms;
SELECT ALL ((rt0.c0) IS TRUE) COLLATE BINARY, ROW_NUMBER() OVER (), ((((((((DATE(t0.c0, t0.c0, vt0.c0, rt0.c0, x''))AND(rt0.c1)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)))))AND((- (rt0.c1)))))OR((- (v0.c0)))) FROM rt0, t0, v0, vt0 WHERE (((IFNULL('894504691', '-388432330')) NOT NULL)); -- 0ms;
SELECT (((((('?먕t壳& ')AND(rt0.c0)))AND(t0.c0))) NOT NULL) FROM rt0 WHERE (((((('q4g?AD	_%'))!=((0x40043a16)))) NOT NULL)) GROUP BY (((t0.c0 IN ())) NOT BETWEEN (((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c1))) AND ((rt0.c0 IN ()))), (((((('0.26359169808384664', rt0.c0, v0.c0, v0.c1, NULL))>=((rt0.c1, v0.c0, rt0.c0, rt0.c1, v0.c0))), t0.c0, ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)), (v0.c0 IN ()), ((rt0.c2) BETWEEN ('') AND ('-934487414'))))>=(((NOT (vt0.c0)), CAST(rt0.c1 AS BLOB), rt0.c1 COLLATE NOCASE, vt0.c0, (~ (rt0.c1))))), rt0.c0, ((((v0.c2)<<(rt0.c1)))<=(rt0.c2)), (((v0.c1)) BETWEEN (((t0.c0 IN ()))) AND ((LIKELIHOOD(DISTINCT rt0.c0, 0.2732695269037494)))) HAVING (~ (v0.c2));SELECT (((CASE vt0.c0  WHEN v0.c1 THEN v0.c0 END))==(('1450460892'))) FROM v0 WHERE ((('i%')>>(((NULL)>=(NULL)))));SELECT DISTINCT ((rt0.c1)<=((((vt0.c0, x'', vt0.c0))<>((vt0.c0, v0.c1, v0.c0))))) FROM rt0, v0;SELECT ALL ((((rt0.c0)OR(0.6939452314492488)))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN x'' THEN v0.c2 ELSE t0.c0 END)) FROM rt0, vt0 WHERE (((((((((((x'f51bad4c')!=(NULL)))OR((0X439947b2 IN ('6I')))))AND((NULL IN (0.45156851999806324, x'')))))OR(CAST(x'' AS INTEGER))))OR(CAST(0.7279224890556744 AS BLOB))));SELECT (+ (rt0.c1)) COLLATE RTRIM FROM rt0, vt0, t0 WHERE ((((((((x'')AND(NULL)))AND(''))))>=((LIKELY(NULL))))) GROUP BY (((+ (x'')))-(CASE v0.c0  WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN -9.77769705E8 WHEN NULL THEN rt0.c1 END)), LIKE(v0.c1 COLLATE BINARY, (rt0.c1 IN (rt0.c1)), 'z'), v0.c1;SELECT DISTINCT COUNT(UNLIKELY(DISTINCT vt0.c0)) OVER ( PARTITION BY ((x'')||(((t0.c0) BETWEEN (rt0.c0) AND (v0.c2)))), ((((TRIM(rt0.c1))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))))OR(v0.c2))) FROM t0, v0, rt0 WHERE ((((('568597933')GLOB('393709624'))) NOT BETWEEN (CASE WHEN 'kG' THEN '1651558017' WHEN 0.4766134798917653 THEN 'OS묆~' WHEN NULL THEN NULL END) AND (IFNULL(x'', NULL))));SELECT DISTINCT (MIN(v0.c1) IN ()) FROM v0, rt0, vt0, t0 WHERE (((((NULL)==(0.010530234012358863)))GLOB(((x'') BETWEEN (x'1b7f') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2))<=((x''))) IN ()) FROM rt0, t0 WHERE ((~ (('832810155' IN ())))); -- 0ms;
SELECT CASE ((t0.c0) ISNULL)  WHEN CAST(rt0.c1 AS TEXT) THEN ABS(DISTINCT v0.c1) ELSE rt0.c1 END FROM t0 ORDER BY CAST(((rt0.c1)OR(rt0.c0)) AS TEXT) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS BLOB) DESC;SELECT DISTINCT (((v0.c1)) NOT BETWEEN ((rt0.c0)) AND (('966191520'))) FROM t0 WHERE (((((x'54e0c448') NOT BETWEEN (x'99928b5d') AND (x'')))*((('')OR(NULL)))));SELECT ALL ((LIKE(rt0.c1, rt0.c2))&(COUNT(*))) FROM t0 GROUP BY v0.c1 HAVING SQLITE_SOURCE_ID();SELECT DISTINCT (((1.7791451E8, x'', ((v0.c1) NOTNULL), ((((((((0.6319266406498167)AND(v0.c2)))OR(v0.c1)))OR(vt0.c0)))OR(rt0.c2)), ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))<=((UNLIKELY(DISTINCT vt0.c0), GROUP_CONCAT(vt0.c0), CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN '-724088727' THEN v0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END, v0.c1, ((v0.c1)>=(rt0.c0))))) FROM v0;SELECT DISTINCT ((json(v0.c1))<=((v0.c0 IN (v0.c0)))) FROM vt0 LIMIT -2100241078;SELECT ALL CAST(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC) FROM t0, vt0, rt0;SELECT (((NOT ('-1309759968'))) BETWEEN ((+ ('c'))) AND (rt0.c1 COLLATE RTRIM)) FROM v0, rt0, t0, vt0 WHERE (((((0x60c30bc1 IN ('0ie礬b|m', 'ǹt~	'))))>=((((x'') IS FALSE))))) LIMIT -1864884257; -- 0ms;
SELECT COUNT(*) FROM vt0, rt0, v0, t0 WHERE (CASE CAST(0.4181099220835748 AS TEXT)  WHEN ((((x'')OR('g')))AND('')) THEN '1330171048' COLLATE NOCASE WHEN ((0.7508548261075616) BETWEEN (0Xffffffff99b96d7a) AND (NULL)) THEN ((-488448707)<<(NULL)) WHEN (((-1948919840))!=((''))) THEN (~ ('p8j}^s')) ELSE ((-2100921212)LIKE('')) END); -- 0ms;
SELECT ALL ((((rt0.c1)*(v0.c1))) NOT NULL) FROM t0, rt0, v0 FULL OUTER JOIN vt0 ON (((v0.c2 IN ())) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((v0.c0) ISNULL))); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (v0.c1) AND (v0.c2)))/(((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))OR(t0.c0)))AND(vt0.c0)))) FROM rt0, vt0;SELECT DISTINCT NULL FROM rt0, v0 WHERE ((((x'') NOT NULL) IN ())) GROUP BY rt0.c2 HAVING (+ (((rt0.c0)>(rt0.c2)))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN ((((v0.c0))<=((v0.c1)))) AND (((t0.c0)<<(t0.c0)))) FROM rt0, vt0, v0, t0 WHERE ((((((('1074018838') NOT NULL))AND((NOT ('826637908')))))OR((('QRq!re/X') IS TRUE)))) LIMIT 2062766699 OFFSET 111894928; -- 1ms;
SELECT DISTINCT (COUNT(*) IN (((vt0.c0)<=('pa~')))), ((((((((((v0.c1) ISNULL))AND(((t0.c0)>=(v0.c0)))))AND(((((((((((((0X67000c65)AND(rt0.c1)))AND(t0.c0)))AND(v0.c1)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))))OR(GROUP_CONCAT(v0.c0))))AND(((rt0.c1)AND(rt0.c0)))), ((COUNT(*)) NOT BETWEEN (ABS(v0.c1)) AND ((v0.c0 IN ()))) FROM rt0 WHERE (((561982285 COLLATE BINARY)GLOB((('Hxv-') NOT NULL)))) ORDER BY CAST(((v0.c1)LIKE(v0.c1)) AS TEXT) DESC, CASE WHEN ((NULL) IS TRUE) THEN ((rt0.c0) IS TRUE) ELSE ((v0.c2) NOTNULL) END  NULLS FIRST;SELECT rt0.c1 FROM t0, v0;SELECT ALL (NOT (MIN(v0.c0))) FROM rt0, vt0 WHERE (CASE WHEN CHAR(x'', 0x70642d57, NULL) THEN CASE ''  WHEN 0.2521789859944217 THEN 0x40043a16 ELSE NULL END ELSE (((('j.錈7v')OR(x'')))OR(NULL)) END);SELECT DISTINCT ((((v0.c2 IN ())))<=((CAST(vt0.c0 AS INTEGER)))) FROM vt0, rt0, v0 ORDER BY ((((v0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c1) NOT NULL)) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST, ((((rt0.c1) BETWEEN (v0.c1) AND (rt0.c2)))%((+ (v0.c0)))); -- 1ms;
SELECT ALL (((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c1)), CASE WHEN rt0.c2 THEN v0.c1 ELSE v0.c0 END))=((((vt0.c0)/(t0.c0)), (+ (v0.c0)), CAST(NULL AS REAL)))) FROM v0, vt0, t0 WHERE ((((x'7eca'))!=((((('-1245026128'))<((NULL)))))));SELECT DISTINCT ((rt0.c0)LIKE(v0.c2)) COLLATE RTRIM FROM v0, t0, rt0; -- 0ms;
SELECT DISTINCT COALESCE((((x'ab4b', vt0.c0, vt0.c0))==((rt0.c2, v0.c2, v0.c0))), COUNT(*)) FROM vt0 WHERE (((((((((NULL)AND('')))AND(NULL)))OR((NOT (x'')))))AND(('745357743' IN ()))));SELECT DISTINCT 0.0707217579280448, NTH_VALUE(x'0cc4', rt0.c2) OVER (), (((((NOT (0.9293032519143223)))AND(((vt0.c0) BETWEEN (v0.c1) AND (1741175915)))))AND(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN v0.c0 WHEN x'5e94' THEN rt0.c1 END)) FROM vt0, t0, rt0 WHERE ((((((+ (NULL)))OR(((((NULL)AND(x'')))AND('-1795572532')))))AND(STRFTIME(NULL, 0.06749011642315017, '-132978336'))));SELECT ((((rt0.c1 IN (rt0.c0))))>=((t0.c0))) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN 0.12616352121472907 THEN vt0.c0 COLLATE RTRIM ELSE ((1.450460892E9)<>(vt0.c0)) END FROM rt0, vt0, t0, v0; -- 0ms;
SELECT DISTINCT (((('&맲\n') NOTNULL))/(((((v0.c1)OR(t0.c0)))OR(NULL)))), ((((((0.30109119147322605, rt0.c0, v0.c0))<=((v0.c1, t0.c0, v0.c1)))))=((MAX(t0.c0)))), CHAR(((rt0.c2) NOTNULL)), 0x23b7b6cf, COUNT(UPPER(v0.c1)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES), CASE WHEN CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 END THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) END, (NOT ((~ (rt0.c0)))) FROM vt0, rt0 WHERE (((CASE WHEN 6.63516945E8 THEN 0.6773864827494488 WHEN '1740978280' THEN 'UWq' WHEN -1.302351419E9 THEN 0.28909468031424 ELSE x'' END) NOT BETWEEN (CAST('Wm' AS NUMERIC)) AND (CASE WHEN '-1704011387' THEN 0.16176679527777837 ELSE x'' END))) ORDER BY HEX((((v0.c2)) BETWEEN ((0.4781826694398893)) AND ((t0.c0))))  NULLS LAST;SELECT DISTINCT x'04d2' FROM v0, t0, rt0 WHERE ((((((0.22979342166042904))!=((5.93901689E8)))) NOT NULL)) GROUP BY ((NULLIF(DISTINCT v0.c1, t0.c0))>(((x'ae3a') NOTNULL))) HAVING CAST((((v0.c1))<>((v0.c0))) AS BLOB); -- 0ms;
SELECT DISTINCT (('-132978336')=(TOTAL('1084831573'))), (((((rt0.c0, vt0.c0, v0.c2))<((t0.c0, rt0.c1, rt0.c1)))) IS TRUE), ((((v0.c0)>>(rt0.c0)))<=('-439305707')) FROM rt0 WHERE ((((('-1505601494') NOT BETWEEN (NULL) AND (0.3636289438749106))) ISNULL));SELECT DISTINCT v0.c1, (vt0.c0 IN ()) COLLATE NOCASE, CASE t0.c0  WHEN (~ (rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN MIN(rt0.c1) THEN rt0.c1 COLLATE BINARY WHEN ((NULL)<=(rt0.c0)) THEN (t0.c0 IN ()) ELSE (~ (t0.c0)) END FROM v0, rt0 WHERE ((('796713572' COLLATE RTRIM) BETWEEN (CAST(x'' AS INTEGER)) AND ((- ('543755311')))));SELECT DISTINCT ((vt0.c0)<(x'')) FROM vt0, rt0 WHERE (((CAST('ezI2g' AS TEXT))>(CHAR(x'', '-1037160229', NULL)))); -- 0ms;
SELECT DISTINCT json_array(v0.c0, '1805599245') COLLATE NOCASE FROM vt0, v0, rt0, t0; -- 1ms;
SELECT 0.9268961939005618, NULL, ((vt0.c0) BETWEEN ((v0.c1 IN (v0.c2, NULL))) AND (t0.c0 COLLATE BINARY)) FROM v0, t0 WHERE (CHAR((('-1470679878') NOT NULL)));SELECT DISTINCT 0.5539287752609062 FROM t0, vt0, rt0, v0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)/(-4.05215605E8)) THEN ((rt0.c1) NOT NULL) WHEN STRFTIME(v0.c0, rt0.c2, v0.c2) THEN (NULL IN (vt0.c0)) WHEN ((NULL) BETWEEN (v0.c0) AND (t0.c0)) THEN IFNULL(v0.c1, rt0.c1) END, ((((vt0.c0) ISNULL)) ISNULL), ((rt0.c2 COLLATE BINARY)+((((v0.c1))<>((v0.c1))))) FROM vt0, t0 LIMIT 1853358568;SELECT DISTINCT CASE WHEN CASE vt0.c0  WHEN v0.c2 THEN rt0.c2 ELSE v0.c0 END THEN TOTAL(v0.c0) END FROM t0 WHERE (-7.91293467E8);SELECT ALL ((((NULL)AND(v0.c2)))IS(v0.c1)) FROM v0, vt0, t0 WHERE ('1599241985'); -- 0ms;
SELECT DISTINCT (((v0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((v0.c2)<<(v0.c0))))) FROM t0 GROUP BY CASE WHEN ((rt0.c2) IS TRUE) THEN ((NULL)|(v0.c0)) END HAVING (NOT (rt0.c2));SELECT DISTINCT v0.c0 FROM rt0, vt0;SELECT ALL CAST(t0.c0 COLLATE BINARY AS TEXT) FROM rt0 WHERE ((~ (((((((((NULL)AND('')))OR('1554624661')))AND('p?ipRxX!')))OR('0.7458595123592567')))));SELECT (((~ (v0.c0)))<<(vt0.c0 COLLATE BINARY)), 'X	', (((+ (v0.c2)))-(v0.c0)) FROM rt0, vt0, v0; -- 0ms;
SELECT ((((t0.c0)==(rt0.c2)))>>(t0.c0 COLLATE BINARY)) FROM vt0, t0, rt0, v0; -- 0ms;
SELECT (+ (((v0.c0)<<(v0.c2)))), (((-6.44557292E8 IN ())) BETWEEN (json_type(3.68228112E8)) AND (((rt0.c1)/(vt0.c0)))), rt0.c0 FROM v0, vt0, t0;SELECT (((((-1348433152)OR(v0.c0)))OR('0.3003698483353805')) IN ()) FROM vt0, t0 WHERE ((((((('-766258635')IS NOT(NULL)))OR(COALESCE(DISTINCT -1.348703919E9, NULL))))AND(((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT (('') NOT BETWEEN (json_array_length(vt0.c0, t0.c0)) AND (LIKELIHOOD(DISTINCT t0.c0, 0.11851462661528589))), CAST(CASE 0.375828242523747  WHEN v0.c0 THEN vt0.c0 END AS INTEGER), (((rt0.c1 IN (v0.c0))) IS TRUE) FROM rt0, t0, vt0 WHERE ((~ (x'8a42' COLLATE NOCASE))) GROUP BY ((vt0.c0) IS TRUE) COLLATE NOCASE HAVING (- (((x'')<<(v0.c0)))) ORDER BY (0.304515282091242 IN ()) ASC  NULLS LAST;SELECT DISTINCT RTRIM(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) FROM rt0, vt0; -- 4ms;
SELECT DISTINCT rtreenode((NOT (vt0.c0)), CAST(rt0.c2 AS INTEGER)) FROM rt0, vt0, t0, v0 WHERE ((((((NULL))>=((0.38095232970706916)))) BETWEEN ((NOT (x''))) AND (NULL))); -- 0ms;
SELECT DISTINCT SUM(((t0.c0)&(0.8261068983911839))) FROM v0, rt0, t0; -- 0ms;
SELECT ALL ((((((((rt0.c0)AND(TYPEOF(v0.c1))))AND((v0.c1 IN ()))))OR(rtreenode(NULL, NULL))))AND(UNLIKELY(DISTINCT vt0.c0))), '-384911348', (CAST(rt0.c2 AS TEXT) IN ()) FROM vt0, v0, t0, rt0 GROUP BY rt0.c2 HAVING ((((((v0.c2)OR(NULL)))AND(v0.c0)))IS NOT(CAST(v0.c2 AS INTEGER))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c0) BETWEEN ('') AND (x''))) OVER (), ((((((((((rt0.c2)OR(v0.c1)))AND(v0.c2)))AND(v0.c1)))OR(v0.c2))) IS FALSE), ((SUM(v0.c1)) IS TRUE) FROM vt0, v0, rt0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) FROM vt0, v0, rt0, t0; -- 0ms;
SELECT NULL FROM rt0, v0, vt0 GROUP BY ((rt0.c2) ISNULL); -- 0ms;
SELECT ((GROUP_CONCAT(v0.c2)) NOT BETWEEN (((v0.c2)<<(rt0.c2))) AND (((((v0.c0)OR(rt0.c0)))AND(v0.c2)))) FROM t0, vt0 WHERE (CASE WHEN (('393709624')GLOB(NULL)) THEN (~ ('5o')) WHEN UPPER(DISTINCT 0X30397128) THEN (('')%(NULL)) WHEN ((((((((((((NULL)AND(NULL)))AND('-648442136')))OR('-1966032057')))OR('')))OR('1906793500')))AND(0.660110505907673)) THEN x'' COLLATE RTRIM ELSE x'87a0' END);SELECT DISTINCT DENSE_RANK() OVER () FROM v0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(v0.c2 AS INTEGER) THEN CAST(v0.c2 AS BLOB) END, ((CASE WHEN t0.c0 THEN rt0.c2 WHEN '' THEN v0.c1 WHEN v0.c0 THEN rt0.c1 END) BETWEEN (rt0.c0 COLLATE BINARY) AND (vt0.c0)), ABS(((rt0.c1) ISNULL)) FROM v0, rt0, vt0, t0 WHERE ((((('1855668381') NOT BETWEEN (0.2958207334105776) AND (x'12219b29')))GLOB(-104454769))); -- 0ms;
SELECT COALESCE(UNLIKELY(rt0.c2), COALESCE(DISTINCT rt0.c0, v0.c1)) FROM vt0, t0, v0, rt0 WHERE (0.5850898277356017); -- 0ms;
SELECT ALL ((((v0.c1 IN ())))<((DATE(vt0.c0, v0.c1, t0.c0)))) FROM t0, rt0 WHERE (((0.800272443466916) ISNULL) COLLATE BINARY);SELECT TOTAL((v0.c0 IN ())) OVER ( ROWS  UNBOUNDED PRECEDING), v0.c1, (((rt0.c0)) NOT BETWEEN (((((rt0.c2))>((v0.c2))))) AND ((COUNT(rt0.c2)))), CASE WHEN ((v0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN CAST(t0.c0 AS INTEGER) WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN TYPEOF(vt0.c0) WHEN COUNT(rt0.c0) THEN (rt0.c2 IN (NULL)) END, ((t0.c0)|(v0.c2)) COLLATE NOCASE FROM v0 GROUP BY CAST(((((v0.c2)AND(vt0.c0)))OR(v0.c0)) AS BLOB) HAVING CASE (rt0.c2 IN ())  WHEN (v0.c0 IN ('-464940174', t0.c0)) THEN rt0.c2 WHEN CAST(rt0.c1 AS REAL) THEN INSTR(rt0.c1, v0.c0) WHEN ((v0.c1) NOT NULL) THEN ((rt0.c2)>(rt0.c1)) END;SELECT COALESCE(DISTINCT ((v0.c1)>=(v0.c1)), GROUP_CONCAT(rt0.c2), ((rt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), NULL), CASE TIME(v0.c1, v0.c1, rt0.c0)  WHEN TRIM(DISTINCT rt0.c0) THEN (~ (rt0.c0)) END, 'u%?][.Nt%' FROM rt0;SELECT ALL TRIM(((vt0.c0)>=(v0.c1)), ((v0.c1) IS FALSE)) FROM v0, rt0, t0, vt0; -- 0ms;
SELECT DISTINCT ((v0.c2)>=(v0.c1)) COLLATE RTRIM FROM v0, t0, rt0 WHERE ((((((0.937256220587954)) BETWEEN ((NULL)) AND ((1.673587766E9)))) NOT BETWEEN (x'662e') AND ((0.9094196073292613 IN ())))) GROUP BY ((CAST(vt0.c0 AS BLOB)) NOT NULL);SELECT DISTINCT (((v0.c1)) NOT BETWEEN (((v0.c1 IN ()))) AND ((UPPER(DISTINCT t0.c0)))) FROM t0, v0, vt0, rt0 WHERE ((((NOT (NULL)))%((('') NOT NULL)))); -- 1ms;
SELECT ALL ((v0.c1) BETWEEN (((((rt0.c2)AND(v0.c2)))AND(v0.c0))) AND (NULL)) FROM t0, v0, rt0, vt0 WHERE ((- (CASE NULL  WHEN NULL THEN '' WHEN '-1537221134' THEN '띬%' WHEN '0.7279224890556744' THEN x'' END))); -- 0ms;
SELECT (('')=((((v0.c0))<>((rt0.c2))))) FROM rt0, v0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)>(rt0.c2)) THEN ((t0.c0) IS FALSE) WHEN MAX(v0.c2) THEN SUM(rt0.c2) WHEN SQLITE_COMPILEOPTION_USED('') THEN CASE WHEN v0.c2 THEN rt0.c0 END END FROM t0 NOT INDEXED, rt0, v0 LIMIT 1434773640 OFFSET -1357247272; -- 0ms;
SELECT SUM(((v0.c2)>(t0.c0))) OVER () FROM vt0 WHERE ((x'' IN ()) COLLATE NOCASE) GROUP BY ((LOWER(vt0.c0))AND(((((((((t0.c0)AND(rt0.c1)))OR(v0.c0)))OR(v0.c1)))OR(vt0.c0)))), TRIM(DISTINCT ((vt0.c0) NOT NULL), '!7L.Vs>-}'), rt0.c1, rt0.c1 COLLATE NOCASE, CASE ((v0.c1)!=(v0.c2))  WHEN ((0.9461485049265858) BETWEEN (v0.c2) AND (vt0.c0)) THEN rt0.c1 COLLATE BINARY END;SELECT (((PRINTF(v0.c0)))>=((((((v0.c0)AND(t0.c0)))AND(vt0.c0))))), GROUP_CONCAT(((rt0.c0)<(rt0.c1))), (+ (v0.c2)) COLLATE RTRIM COLLATE RTRIM FROM vt0 WHERE ((((NULL)>('393709624')) IN (CASE 'KL~u.]5w'  WHEN NULL THEN NULL WHEN '-1909947341' THEN 0X6744fdc5 WHEN -1.450835463E9 THEN NULL ELSE NULL END)));SELECT DISTINCT CASE WHEN ((rt0.c1)AND(v0.c2)) THEN ((((v0.c2)OR(v0.c0)))OR(rt0.c0)) ELSE MAX(x'') END, CAST((rt0.c0 IN ()) AS INTEGER), ((TRIM(rt0.c1))<((+ (rt0.c1)))) FROM v0, t0;SELECT ((((MAX(vt0.c0))AND(CASE vt0.c0  WHEN 'sQ' THEN vt0.c0 END)))OR((rt0.c1 IN ()))), CASE ((rt0.c1)IS(t0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) END, (NOT (v0.c0 COLLATE RTRIM)) FROM t0, rt0, vt0, v0 WHERE (CAST(CAST(NULL AS REAL) AS INTEGER)) GROUP BY (((- (rt0.c2))) NOT BETWEEN ((((v0.c2))<=((vt0.c0)))) AND ((((t0.c0))!=((v0.c1))))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)&(vt0.c0)))&((((('HHvZ')OR(rt0.c2)))OR(rt0.c1)))) FROM t0, vt0 WHERE ((CAST('' AS TEXT) IN ()));SELECT ALL ((((v0.c2) BETWEEN (vt0.c0) AND (rt0.c0))) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((t0.c0)))) AND (((0.733365762054468)||('1906793500')))) FROM t0 WHERE (((CAST(x'0578' AS NUMERIC)) IS FALSE));SELECT ((COUNT(*)) NOTNULL) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((v0.c0) ISNULL) AS INTEGER) WHERE ((~ (((((NULL)OR(x'')))AND('#bC/\')))));SELECT DISTINCT (+ ((rt0.c1 IN ()))) FROM vt0 WHERE (((- ('xq-')) IN (CASE WHEN NULL THEN '1375116116' END))) GROUP BY (((rt0.c0) ISNULL) IN ()); -- 0ms;
SELECT DISTINCT CAST((0.6157738026861779 IN (t0.c0, rt0.c0)) AS INTEGER) FROM rt0, v0, vt0, t0 WHERE (CASE WHEN '1396332871' THEN 0.3819962188012176 ELSE x'2b7d' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((vt0.c0, 640484180, rt0.c2)) BETWEEN ((((v0.c0) ISNULL), ((t0.c0)LIKE(v0.c0)), CASE v0.c1  WHEN v0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 END)) AND ((CAST(rt0.c1 AS REAL), ((rt0.c1) NOTNULL), NULL))) FROM t0, rt0, v0 GROUP BY CAST(CAST(rt0.c0 AS BLOB) AS REAL);SELECT ALL COUNT(((rt0.c0)>(rt0.c2))) FROM v0, vt0, rt0 WHERE ((((((- (x'')))OR(((('-958921023'))>((NULL))))))AND((('L,6')-(0.22247400945076157))))); -- 0ms;
SELECT (((rt0.c1 IN ()))/(((vt0.c0)<=(v0.c2)))) FROM vt0, rt0, t0 WHERE (((CAST(0.928210717700006 AS BLOB))<<(((0.29893308174431643) IS TRUE))));SELECT DISTINCT ROW_NUMBER() OVER () FROM t0, rt0, v0, vt0 WHERE (((x'')IS NOT(((((-1e500)OR(0.3951546764256376)))AND(NULL))))); -- 0ms;
SELECT DISTINCT (((v0.c1)) NOT BETWEEN ((((((rt0.c2)OR(v0.c0)))OR(t0.c0)))) AND ((CASE WHEN v0.c1 THEN rt0.c1 END))) FROM v0, vt0, rt0;SELECT DISTINCT AVG((((v0.c2)) BETWEEN ((rt0.c1)) AND ((0.09275163745804305)))), CAST(v0.c1 COLLATE NOCASE AS NUMERIC), GROUP_CONCAT(IFNULL(rt0.c2, rt0.c2)) FROM t0 WHERE ((((((((((('0.2835423818780567')OR(x'')))OR('-436626020')))OR(0Xffffffff9f07530f)))AND(0.7843341917883369)))-((('620554805')GLOB('-236602618')))));SELECT DISTINCT CASE x'8dc2'  WHEN rt0.c1 THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((x'', rt0.c2, v0.c1))==((t0.c0, rt0.c2, t0.c0))) END FROM v0 WHERE (((((0Xffffffff8967d393)/(x'eab0')))%('RO}hg녆N' COLLATE BINARY))) LIMIT 784974768;SELECT (~ (((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c2)))), ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN '' ELSE v0.c1 END) IS FALSE), CASE WHEN CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c2 END THEN CAST(1.651558017E9 AS REAL) ELSE CAST(v0.c0 AS INTEGER) END FROM vt0, rt0, v0, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN (((rt0.c0 IN ()), ((t0.c0) NOT BETWEEN (v0.c1) AND (rt0.c0)), ((rt0.c2)<=(NULL)))) AND (((((rt0.c0, t0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c1)) AND ((rt0.c0, v0.c0, t0.c0))), (((v0.c1))>=((t0.c0))), ((0.375828242523747) NOT NULL)))) FROM vt0, t0, rt0 LIMIT 1057021099 OFFSET -1861182361;SELECT CASE WHEN (((vt0.c0, v0.c2, v0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, t0.c0))) THEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c2)) WHEN (+ (rt0.c1)) THEN CASE v0.c1  WHEN vt0.c0 THEN v0.c0 ELSE rt0.c1 END WHEN SUM(vt0.c0) THEN ((vt0.c0) IS FALSE) END FROM rt0 WHERE (NULL);SELECT v0.c2 FROM vt0, rt0;SELECT DISTINCT PRINTF(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0))), ((((((((((((rt0.c0)OR(rt0.c0)))OR('0.8951475726938335')))AND((((rt0.c1))=((v0.c0))))))OR(-9.77769705E8)))OR(rt0.c1 COLLATE BINARY)))AND(((v0.c0)%(v0.c0)))), ((((((((CAST(rt0.c1 AS BLOB))OR('1746835203')))AND((rt0.c1 IN ()))))AND(((rt0.c0)%(v0.c1)))))OR(rt0.c2 COLLATE BINARY)) FROM v0, rt0, vt0, t0 WHERE (0xfffffffffde9c1a4); -- 1ms;
SELECT (((v0.c0)) BETWEEN (('E')) AND ((v0.c0))) COLLATE RTRIM FROM v0, t0, vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2)OR(t0.c0)))OR(v0.c1)) IN (((t0.c0)IS NOT(rt0.c0)))) FROM rt0;SELECT DISTINCT '1202258229' FROM t0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((rt0.c2)<=(v0.c0))) NOT BETWEEN (CAST(v0.c1 AS NUMERIC)) AND (t0.c0)) FROM vt0;SELECT ALL NTH_VALUE(((((((((((rt0.c0)AND(v0.c0)))AND(v0.c1)))AND('-,')))AND(v0.c0))) NOT NULL), (((v0.c2)) BETWEEN ((((((v0.c0)OR(vt0.c0)))OR(v0.c1)))) AND ((TRIM(x'efdaca80', v0.c2))))) OVER () FROM rt0, vt0, v0, t0; -- 0ms;
SELECT ALL MAX(COUNT(*)) FROM v0, t0;SELECT DISTINCT (('384711081') NOT BETWEEN (((rt0.c2) IS TRUE)) AND (CAST(rt0.c1 AS INTEGER))) FROM rt0, v0 ORDER BY v0.c1  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(v0.c2 AS REAL) COLLATE NOCASE FROM t0, vt0 WHERE ((((x'')) NOT BETWEEN ((((('291371757', x'd45b', NULL)) BETWEEN ((1606208698, x'', 0.4541059230822535)) AND ((1172412583, NULL, 0.5721844464071354))))) AND ((((-6.0310787E8) IS TRUE))))) LIMIT 2110128473 OFFSET 236727768;SELECT DISTINCT (CAST(rt0.c2 AS BLOB) IN (CASE WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN v0.c2 WHEN v0.c1 THEN NULL END)) FROM t0 WHERE ((((NOT (NULL)))IS(((('')) BETWEEN ((0xffffffffe92d0a99)) AND (('')))))) GROUP BY 0.21783509346859908, (((t0.c0))<((rt0.c2))) COLLATE BINARY, (((('RL໳jeiz{￿')OR(((rt0.c0) BETWEEN (x'') AND (v0.c2)))))OR(CAST(vt0.c0 AS TEXT)));SELECT ALL NTH_VALUE(TYPEOF(rt0.c2), CAST(((((rt0.c2)OR(rt0.c1)))OR(NULL)) AS TEXT)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES), CASE (rt0.c0 IN (rt0.c1))  WHEN COALESCE(vt0.c0, vt0.c0) THEN (((rt0.c0, 0.6047586975530528, v0.c0)) NOT BETWEEN ((v0.c0, v0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c0))) WHEN CAST(rt0.c1 AS REAL) THEN NULL WHEN (v0.c1 IN ()) THEN t0.c0 END, CAST(((rt0.c1)<>(v0.c0)) AS REAL), (((t0.c0)*(v0.c2)) IN (MAX(vt0.c0))), CASE v0.c1  WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM FROM rt0, t0 WHERE (CAST(((x'')<(0.683585984501477)) AS REAL));SELECT ALL rt0.c1 FROM rt0, v0, t0 LIMIT -2012354824 OFFSET -1097574897; -- 0ms;
SELECT DISTINCT ((((((t0.c0)AND(v0.c0)))OR(v0.c1)))IS(CASE rt0.c2  WHEN rt0.c2 THEN v0.c1 ELSE v0.c1 END)) FROM v0, vt0, t0, rt0 WHERE (((((('') NOT NULL)))<((('-940253834' IN ()))))); -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()), COUNT(*) COLLATE BINARY, v0.c1 FROM t0 WHERE ((x'' COLLATE NOCASE IN ())) GROUP BY ((((rt0.c2)AND(rt0.c1)))|((vt0.c0 IN ())));SELECT ALL ((((v0.c2) NOT BETWEEN (rt0.c1) AND ('-169612144')))LIKE(CASE WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END)), (- (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE NULL END)), (MAX(v0.c0) IN (((v0.c0) NOTNULL))) FROM vt0 ORDER BY ((CAST(rt0.c0 AS BLOB))<=(CASE WHEN v0.c2 THEN rt0.c0 END));SELECT TOTAL(((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c2))), (((+ (v0.c0))) NOT NULL), (- (((rt0.c1) IS TRUE))) FROM t0, rt0, vt0 WHERE (((NULL COLLATE BINARY)IS(((NULL)-('-174482963'))))) UNION SELECT DISTINCT (NOT ((- (rt0.c1)))), ((v0.c1)-(x'' COLLATE RTRIM)), ((((((((((((((rt0.c0)AND(t0.c0)))OR(t0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS TRUE) FROM vt0, v0 WHERE (((((((((0Xffffffff880de6f8)AND(x'')))AND('YlZL2')))OR(((x'd304d16a')IS('-995029680')))))OR(x'')));SELECT PERCENT_RANK() OVER () FROM rt0, v0; -- 0ms;
SELECT DISTINCT (((- ('-595797696'))) NOT BETWEEN (((vt0.c0)/(t0.c0))) AND ((+ (v0.c0)))) FROM v0, vt0, rt0;SELECT DISTINCT (((t0.c0 IN ()))AND(((v0.c1) IS TRUE))), (~ (t0.c0)) COLLATE NOCASE, 0Xffffffffcb6db4e5 FROM vt0, v0;SELECT '2_7y쌔' FROM v0, rt0, vt0 ORDER BY ((('W?9혔', ((t0.c0) IS TRUE), (v0.c0 IN ())))=((CAST(v0.c1 AS INTEGER), IFNULL(0xffffffffa2f4636e, v0.c0), CASE rt0.c2  WHEN v0.c1 THEN rt0.c2 ELSE '' END))) DESC;SELECT DISTINCT ROUND((NOT (v0.c2)), TOTAL(v0.c1)), ((rt0.c1)>>(0.5734135403549121)), 0.7750460068926761, 0.30918186594863883, ((((('b&', v0.c2, t0.c0))<((t0.c0, rt0.c1, rt0.c0))))<<(((((((((rt0.c2)OR(v0.c2)))AND(t0.c0)))AND(0.6834390213164264)))AND(0.09599372943344053)))) FROM v0, vt0 LIMIT -163976884 OFFSET 2145502851;SELECT DISTINCT ((CASE rt0.c1  WHEN NULL THEN rt0.c0 END)IS NOT(NULL)) FROM t0, vt0, v0, rt0 WHERE (((CASE WHEN 'J18楑d/xr8' THEN '1016845525' ELSE 'RL໳jeiz{￿' END) BETWEEN (((x'') BETWEEN (x'98c7') AND (NULL))) AND (CASE x''  WHEN x'' THEN 0.922837803614253 END))); -- 1ms;
SELECT DISTINCT ((((((((((t0.c0)AND('1620589412')))OR(rt0.c2)))AND(t0.c0)))AND(rt0.c1))) BETWEEN (((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1))) AND ((+ (v0.c2)))) FROM vt0 ORDER BY (((t0.c0)) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((((rt0.c2) NOT BETWEEN (x'') AND (v0.c1))))) ASC  NULLS FIRST;SELECT 'zF?|\n໯2f', CHANGES(), ((((v0.c2) NOTNULL))<((((0.9520527689537166)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))) FROM vt0;SELECT DISTINCT ((v0.c1)<<(t0.c0)) FROM rt0, vt0, t0 WHERE ((CAST('-1917850412' AS TEXT) IN ()));SELECT DISTINCT ((AVG('')) BETWEEN ((v0.c2 IN (v0.c2))) AND (((rt0.c1) IS FALSE))), ((CASE rt0.c1  WHEN v0.c2 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2)>(t0.c0))) AND (CAST(t0.c0 AS TEXT))), ((((t0.c0) NOTNULL)) NOT BETWEEN (json_insert(v0.c1, v0.c1, '8n')) AND ((v0.c2 IN (t0.c0, v0.c0)))), ((((t0.c0) BETWEEN (NULL) AND (v0.c1))) NOTNULL), LENGTH(((v0.c2)>>(vt0.c0))) FROM rt0, v0, t0, vt0; -- 0ms;
SELECT ALL ((v0.c0) NOT NULL) COLLATE RTRIM, ((((v0.c1) BETWEEN (vt0.c0) AND (rt0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (t0.c0 COLLATE NOCASE)), (~ (v0.c1 COLLATE RTRIM)) FROM vt0 WHERE (CAST(((x'')&('')) AS INTEGER));SELECT DISTINCT (~ (((rt0.c1) IS TRUE))), SUM(vt0.c0 COLLATE BINARY COLLATE NOCASE), ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)))%(((0.1425993881369696)|(vt0.c0)))) FROM t0, vt0, rt0, v0 WHERE (CASE WHEN ((0.4607761553919151)<=(NULL)) THEN 0.14320376835272852 COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, t0, rt0, v0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0, vt0 WHERE (NULL); -- 0ms;
SELECT (- (t0.c0)) COLLATE RTRIM FROM v0, vt0, t0; -- 0ms;
SELECT (((rt0.c1) IS TRUE) IN (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))), (((t0.c0)) BETWEEN ((COUNT(rt0.c2))) AND ((((v0.c1) NOT BETWEEN (0x265d9336) AND (v0.c1))))), '', ROUND(((NULL)GLOB(rt0.c1)), (3.98684246E8 IN ())), HEX(((rt0.c2)AND(rt0.c2))) FROM rt0, vt0, t0, v0; -- 1ms;
SELECT DISTINCT rt0.c0, UPPER(LIKELY(t0.c0)), HEX(CAST(v0.c1 AS BLOB)) FROM rt0, vt0, v0 WHERE (CAST((~ (x'')) AS NUMERIC));SELECT DISTINCT COALESCE(CASE WHEN v0.c0 THEN v0.c2 END, ((rt0.c2) IS TRUE)) FROM rt0 WHERE (CASE WHEN CASE '1733185793'  WHEN 'O\' THEN 1151261192 WHEN 0.13759215493874222 THEN 1.074018838E9 WHEN '1172412583' THEN NULL WHEN x'' THEN x'' WHEN 'Wd{/kZy⳺' THEN '' END THEN CASE 0.7908847251391675  WHEN '0.5338446818467889' THEN x'a50f' ELSE NULL END END);SELECT DISTINCT rt0.c2, (((v0.c1, rt0.c1, rt0.c0)) BETWEEN ((TRIM(v0.c0, rt0.c2), CASE WHEN '' THEN rt0.c0 END, (rt0.c2 IN ()))) AND ((((((((((v0.c2)OR(NULL)))OR(rt0.c2)))AND(t0.c0)))AND(t0.c0)), TOTAL(v0.c1), ((rt0.c2) NOT NULL)))), ((((rt0.c2) ISNULL)) NOTNULL) FROM rt0, v0 WHERE (((CAST('1630506950' AS REAL)) NOT BETWEEN (((((x'')AND(NULL)))OR(x''))) AND ((('-1689735092') NOT BETWEEN (NULL) AND (0.32020070320648475)))));SELECT DISTINCT vt0.c0, (- (MIN(v0.c1))), IFNULL(((((v0.c0)OR(v0.c2)))OR(rt0.c0)), ((v0.c0)>=(rt0.c0))) FROM t0, rt0, v0;SELECT DISTINCT HEX(DISTINCT COUNT(rt0.c0)) FROM vt0 WHERE (((CAST(255157229 AS BLOB))||(((0Xffffffffdbd1e625) NOT BETWEEN (1297971500) AND ('7}w\n')))));SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE), ((CAST(t0.c0 AS REAL))IS(((vt0.c0)>(rt0.c0)))), (CAST(vt0.c0 AS BLOB) IN ()) FROM v0, rt0, t0 WHERE ((NOT (0Xffffffffd2ce220c)));SELECT DISTINCT ((((((((((((((t0.c0) IS TRUE))OR(CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 WHEN 'D*zꮘ8' THEN rt0.c2 WHEN NULL THEN rt0.c1 END)))AND(CAST(rt0.c1 AS BLOB))))OR(v0.c0 COLLATE NOCASE)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c1)))))AND(((((((((rt0.c1)OR(v0.c0)))OR(vt0.c0)))OR('X+l')))OR(rt0.c2)))))AND(((rt0.c2)<>(v0.c2)))) FROM vt0, v0, rt0 WHERE (CASE WHEN (((('-180856187')OR('-105353612')))AND(65214116)) THEN UNLIKELY('-1305144193') ELSE (NOT (NULL)) END);SELECT ((((((v0.c0) BETWEEN (rt0.c0) AND (v0.c1)))AND(((v0.c1)<(rt0.c1)))))OR(rt0.c1)) FROM rt0, t0, vt0, v0; -- 0ms;
SELECT DISTINCT (v0.c0 COLLATE BINARY IN (((((rt0.c0)OR(v0.c0)))AND(v0.c0)), TRIM(DISTINCT rt0.c1, v0.c2))) FROM t0;SELECT ((((((((((vt0.c0)>=(vt0.c0)))AND(((rt0.c1) ISNULL))))AND(COUNT(*))))OR(((((v0.c2)OR(v0.c2)))AND(rt0.c1)))))OR(((t0.c0) NOT NULL))) FROM vt0 WHERE (((NULL) NOTNULL) COLLATE BINARY);SELECT ALL CASE WHEN ((v0.c1)>>(rt0.c0)) THEN COUNT(vt0.c0) WHEN CAST(v0.c2 AS BLOB) THEN '-705101376' WHEN ((((((((t0.c0)AND(x'a87f')))AND(vt0.c0)))AND(rt0.c0)))AND('JS')) THEN v0.c0 COLLATE RTRIM ELSE t0.c0 END FROM v0;SELECT CAST(((rt0.c1) IS FALSE) AS TEXT) FROM v0 WHERE ((- (NULL)));SELECT ALL (((- ('꛱KtZ'))) ISNULL) FROM vt0, rt0 WHERE (((((((((((0.3419758408865733) NOT NULL))OR('撢R' COLLATE NOCASE)))OR((((x'')) BETWEEN ((x'ff03')) AND (('1134118834'))))))AND((((0.9053233077555785)) BETWEEN ((0.06423448342520888)) AND ((''))))))AND(NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL (((((NOT (v0.c1)))AND((((vt0.c0, t0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, t0.c0, rt0.c1)) AND ((v0.c1, t0.c0, rt0.c1))))))AND(((((0.525599288763557)AND(rt0.c0)))OR(rt0.c0)))), NULL, x'' FROM rt0, v0;SELECT ALL CAST((vt0.c0 IN (t0.c0, rt0.c2)) AS REAL) FROM rt0, vt0, v0;SELECT ALL (- (((rt0.c2)|(t0.c0)))), (~ (LIKE(v0.c2, v0.c2))), ((COALESCE(t0.c0, v0.c2, v0.c0, rt0.c2))||(((t0.c0)<(v0.c2)))) FROM v0, rt0;SELECT DISTINCT NULL COLLATE BINARY, (- (((vt0.c0) ISNULL))), ((v0.c1 COLLATE BINARY)==(((vt0.c0) BETWEEN (v0.c2) AND (v0.c1)))) FROM rt0, t0 WHERE (((CASE '511806291'  WHEN NULL THEN 0.9697813465490951 ELSE 0.1287278307457228 END)==((('Cv')+(x'')))));SELECT (((+ (vt0.c0))) NOT NULL) FROM v0, t0;SELECT (((rt0.c1)) NOT BETWEEN ((0.38095232970706916)) AND (((((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))))) FROM t0, vt0, rt0 WHERE (((CAST(0.791508350320651 AS INTEGER))GLOB('-242854675'))) EXCEPT SELECT ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))<>((json_object(rt0.c1, v0.c1, '1721527477', rt0.c2)))) FROM rt0, vt0, t0, v0;SELECT ALL CASE NULL  WHEN CAST(x'' AS BLOB) THEN (- (rt0.c1)) END FROM t0, rt0, vt0 WHERE (INSTR(CAST('&맲\n' AS BLOB), '-803563458' COLLATE NOCASE)); -- 0ms;
SELECT ALL (NOT (rt0.c0)) FROM t0, rt0, v0 WHERE ((+ (UNLIKELY('-1718537165')))); -- 0ms;
SELECT DISTINCT (NOT ((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))), (TOTAL(rt0.c1) IN ()), NULL, SUM((+ (v0.c0))) OVER (), (((+ (vt0.c0)))IS NOT(LTRIM(rt0.c0))) FROM v0, t0 LIMIT -1645437732;SELECT rt0.c1 FROM v0, t0 LIMIT -78202145;SELECT '-1908093537' FROM v0, t0 WHERE (((((x'')<<('661876840'))) NOTNULL)); -- 0ms;
SELECT DISTINCT CAST(LIKE(rt0.c2, rt0.c0) AS REAL) FROM vt0, rt0, v0, t0 ORDER BY (((NULL IN ())) NOT BETWEEN (((v0.c0)IS NOT(v0.c2))) AND ((rt0.c0 IN ()))) DESC; -- 0ms;
SELECT ((CAST(rt0.c0 AS NUMERIC))|(SQLITE_VERSION())) FROM rt0, v0 WHERE ((((((('3|')<(NULL)))OR((((('347289752')OR(NULL)))OR(x'')))))AND(NULL COLLATE BINARY))) ORDER BY ((((v0.c0)LIKE(v0.c2)))LIKE(vt0.c0))  NULLS LAST, json_quote((v0.c0 IN (vt0.c0, vt0.c0)));SELECT DISTINCT (((((((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))OR(CAST(0.2781781213381568 AS NUMERIC))))OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))AND(TYPEOF(DISTINCT x''))))AND(vt0.c0)), ((rt0.c1) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((~ (t0.c0)))), TRIM(TOTAL(rt0.c1), (t0.c0 IN (rt0.c0))) FROM t0, rt0 WHERE ((((0.2958275735881035)<>(0.24055076446100532)) IN (LENGTH(0.7470086286224163))));SELECT DISTINCT TRIM(t0.c0 COLLATE NOCASE, (NOT (v0.c1))) FROM vt0, rt0, v0, t0 ORDER BY ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))AND(v0.c2)))OR(rt0.c2)) COLLATE BINARY; -- 0ms;
SELECT ALL COUNT(NULL) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0 IN (v0.c0)))LIKE(SUM(t0.c0))) FROM t0, rt0, vt0, v0 WHERE ((((0.3857377394140157 IN (x'')))|((((0.2763510159518727))!=((NULL)))))); -- 0ms;
SELECT CAST(MAX(rt0.c2, v0.c0) AS TEXT) FROM rt0, v0, vt0 WHERE (CASE (0.22869756028907384 IN (0.8170371393144672, 0X2c6d41af))  WHEN ((0.1609031579714395)<=(x'')) THEN NULL WHEN 0.8023383125875363 THEN CAST('-&s*5h' AS BLOB) WHEN ((NULL)>(NULL)) THEN ((x'') BETWEEN (NULL) AND ('1948064986')) ELSE (('-70428307') IS TRUE) END); -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c2) ISNULL))) FROM vt0, v0 WHERE (((x'd8b7' COLLATE BINARY) ISNULL)) ORDER BY ((((((((((((rt0.c0)AND(v0.c0)))OR(rt0.c0)))OR(v0.c0)))AND(v0.c1)))AND('568597933' COLLATE RTRIM)))AND((((rt0.c1))>((v0.c2)))))  NULLS LAST;SELECT ALL GROUP_CONCAT(LENGTH(v0.c2)) FROM v0, rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0, t0 WHERE (((0.5539287752609062 COLLATE RTRIM)>>((0.963753287270858 IN (NULL))))); -- 0ms;
SELECT DISTINCT ((x'') ISNULL), CAST(((v0.c0) NOT NULL) AS BLOB), ((((((rt0.c1)=(vt0.c0)))OR((+ (v0.c2)))))AND(MIN(rt0.c0, rt0.c2))) FROM t0, vt0, rt0, v0 WHERE ((((((NULL) NOT BETWEEN ('1678736130') AND (0.8425293658477447)), NULL COLLATE RTRIM, ((0.8526404712414493)>('65214116'))))>((CAST(0.22979342166042904 AS REAL), (('v-')AND(NULL)), ('' IN ()))))); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))|((NULL IN ()))) FROM vt0, rt0, v0, t0; -- 1ms;
SELECT ALL (((((((((((((((((((v0.c1))<((v0.c2))))OR(HEX(v0.c1))))OR(CAST(v0.c2 AS REAL))))OR(CASE vt0.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c0 END)))OR(((rt0.c0) ISNULL))))AND(json_array(rt0.c2, rt0.c1))))AND(((rt0.c0) IS FALSE))))AND((+ (x'')))))AND(((v0.c1)>(v0.c0)))) FROM t0, rt0 WHERE ((NOT ((NOT ('lV	5v')))));SELECT PERCENT_RANK() OVER () FROM v0 LIMIT -741785328 OFFSET 1847682974; -- 0ms;
SELECT DISTINCT LAG(((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL), (CAST(rt0.c1 AS INTEGER) IN ()), ((CAST(t0.c0 AS BLOB)) IS TRUE)) OVER ( ORDER BY ((CAST(NULL AS INTEGER))|((v0.c0 IN ())))  NULLS FIRST) FROM rt0, t0, vt0 WHERE ((((((x'1342') NOT BETWEEN ('') AND (x''))))<((('' IN ()))))); -- 0ms;
SELECT DISTINCT MIN(v0.c1), CAST((t0.c0 IN (NULL)) AS TEXT), COUNT(*) OVER () FROM rt0;SELECT LENGTH((v0.c1 IN ())), 0.7890205049737216, ((((v0.c2)-(vt0.c0))) NOTNULL) FROM vt0, v0, t0 GROUP BY ((((((rt0.c0)AND(v0.c2)))AND(0.5289590609064077)))<=(rt0.c2 COLLATE NOCASE)) HAVING (+ (((v0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))) LIMIT -1697816122 OFFSET -977769705;SELECT DISTINCT CAST(((t0.c0) IS TRUE) AS REAL) FROM v0, rt0, t0, vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((v0.c1)AND('511806291')))AND(v0.c0)) COLLATE NOCASE, ((((v0.c2)AND(v0.c1)))OR(v0.c2)) COLLATE BINARY) OVER () FROM rt0, t0, vt0, v0 NOT INDEXED ORDER BY CASE v0.c0  WHEN '1555653770' THEN t0.c0 WHEN rt0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 END COLLATE RTRIM DESC  NULLS LAST, ((CASE WHEN v0.c0 THEN v0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN v0.c2 END)IS(((((t0.c0)AND(rt0.c2)))OR(rt0.c1)))); -- 0ms;
SELECT ALL IFNULL(CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN v0.c0 THEN 0x559b1c3d WHEN rt0.c1 THEN v0.c2 END, t0.c0) FROM rt0, vt0 WHERE (1409262354);SELECT DISTINCT CAST((+ (rt0.c1)) AS REAL) FROM t0, v0, rt0 WHERE (0xffffffffc684fc56) GROUP BY CAST(((v0.c0)AND(rt0.c0)) AS TEXT), 888114116, (((v0.c0 IN (rt0.c2)))<(NULL)) HAVING rt0.c1 COLLATE RTRIM;SELECT 0.8054997323239639 FROM v0 WHERE ((((- (0Xcd2b108)))!=(((NULL) BETWEEN (0.36308489687119616) AND (0.45156851999806324))))) LIMIT -2052544484 OFFSET -102986676; -- 1ms;
SELECT DISTINCT (((0.7812824398637376 IN ()))-(vt0.c0 COLLATE NOCASE)) FROM vt0 GROUP BY CASE WHEN vt0.c0 THEN CAST(t0.c0 AS NUMERIC) WHEN ((v0.c0)OR(rt0.c1)) THEN v0.c2 COLLATE BINARY WHEN vt0.c0 THEN ((vt0.c0) ISNULL) END;SELECT CAST(v0.c2 COLLATE RTRIM AS NUMERIC) FROM vt0, rt0, v0, t0; -- 0ms;
SELECT DISTINCT (NOT (CASE v0.c1  WHEN 5.68597933E8 THEN v0.c2 ELSE vt0.c0 END)) FROM rt0, t0, v0, vt0 WHERE (((((CAST(-1.654632008E9 AS BLOB))OR(((0xffffffffa7314516)*(0.8508095647854633)))))AND(UNLIKELY('즃Q|lu\lY%')))); -- 0ms;
SELECT DISTINCT CAST((((rt0.c0, t0.c0, t0.c0))<=((rt0.c0, t0.c0, rt0.c1))) AS NUMERIC) FROM v0, t0, vt0, rt0 WHERE ((((((~ ('T~xR4')))AND((~ (NULL)))))OR(((0.5785017887962196)<(x''))))) ORDER BY ((rt0.c0) BETWEEN (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1))) AND (((((v0.c0)AND(v0.c1)))OR(-7.91293467E8)))); -- 1ms;
SELECT DISTINCT MAX(CASE NULL  WHEN rt0.c2 THEN v0.c1 END), vt0.c0, COUNT(0.5539287752609062) FILTER(WHERE vt0.c0) OVER ( ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC) FROM rt0, t0, v0, vt0; -- 0ms;
SELECT ALL ((v0.c2 COLLATE NOCASE)<=(rt0.c0)) FROM vt0 WHERE (CASE WHEN CAST('462637609' AS INTEGER) THEN TOTAL_CHANGES() WHEN CAST('PhࠄF[gB' AS INTEGER) THEN ((NULL)<>('-807607596')) WHEN ((((((((x'')AND(NULL)))OR('1436228669')))OR(0.0013282298745060928)))AND(-1889026219)) THEN (~ (0xffffffffe5d0ba15)) ELSE CAST('-169612144' AS TEXT) END);SELECT DISTINCT AVG(((v0.c2)>=(rt0.c0))) FROM v0, rt0 ORDER BY (((CAST(t0.c0 AS TEXT)))<((rt0.c1))) DESC, ((CAST(v0.c1 AS NUMERIC))GLOB(TOTAL_CHANGES()))  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)))LIKE((+ (v0.c1))))  NULLS FIRST;SELECT DISTINCT AVG(vt0.c0), (NOT (((((v0.c0)AND(rt0.c2)))OR(v0.c0)))), (+ (TOTAL(v0.c2))) FROM v0, t0 WHERE (NULL) LIMIT 680117012;SELECT ((LOWER(rt0.c0))>(((rt0.c2) IS TRUE))) FROM t0, rt0, vt0, v0 WHERE ((((('-371518076') BETWEEN ('-1654632008') AND ('1760339445')))>>((((NULL)) NOT BETWEEN ((NULL)) AND ((x'4431')))))) GROUP BY ((((v0.c1)||(v0.c1)))&(CASE v0.c0  WHEN 'jz' THEN t0.c0 END)) LIMIT 1085901536 OFFSET 1169496700; -- 0ms;
SELECT ALL CAST((~ (rt0.c1)) AS BLOB) FROM vt0 WHERE (((CAST(0.0 AS BLOB)) NOTNULL));SELECT DISTINCT (((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) IS FALSE) FROM v0 NOT INDEXED, t0, rt0 WHERE (CASE WHEN (0X23663879 IN ()) THEN COALESCE(NULL, '') WHEN (+ ('c	b\e')) THEN (('1547586965')/(0.2722515255575081)) WHEN 0.08011432472431623 THEN ((x'')==(x'4634')) END);SELECT DISTINCT ((rt0.c1)<<(((((v0.c1)OR(t0.c0)))AND(v0.c2)))) FROM rt0 WHERE (((('' IN ())) NOT BETWEEN ((((0.7504774337254388, x'd2f7', x'')) NOT BETWEEN ((0.4186977985001952, NULL, '')) AND ((NULL, 'c*cCg%iP', -132978336)))) AND ((((('{hᴽdL')AND('')))OR(NULL)))));SELECT ((t0.c0 COLLATE BINARY)|(CAST(v0.c2 AS BLOB))), CASE WHEN t0.c0 THEN (rt0.c1 IN ()) WHEN (- (vt0.c0)) THEN '1898274251' WHEN COUNT(*) THEN ((vt0.c0) ISNULL) END, ((json_patch(v0.c2, rt0.c1))LIKE(((vt0.c0)>(t0.c0)))) FROM vt0 WHERE ((('-1302351419') NOT BETWEEN (x'') AND (0.27332173463037046)) COLLATE RTRIM);SELECT DISTINCT ((((CAST(rt0.c1 AS INTEGER))AND(MIN(rt0.c0))))AND((((v0.c2))>=((rt0.c2))))), (- (((v0.c2)IS(t0.c0)))), UPPER(DISTINCT ((vt0.c0)OR(v0.c1))) FROM t0 WHERE (CASE '-1342110873' COLLATE NOCASE  WHEN x'' COLLATE BINARY THEN ((x'')LIKE('314429213')) ELSE (NOT ('-934487414')) END);SELECT TOTAL((vt0.c0 IN ())) FROM t0, v0, rt0 ORDER BY v0.c2 ASC, CAST(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)) AS BLOB) ASC  NULLS LAST; -- 0ms;
SELECT (+ (v0.c1 COLLATE RTRIM)), (NOT (CAST(vt0.c0 AS INTEGER))), AVG(CAST(rt0.c1 AS REAL)) OVER ( GROUPS ((vt0.c0) BETWEEN (rt0.c1) AND (v0.c1)) COLLATE RTRIM PRECEDING) FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ())) NOTNULL) INNER JOIN t0 ON ((v0.c2)<=('1N')) COLLATE BINARY LEFT OUTER JOIN rt0 ON (rt0.c0 COLLATE BINARY IN ()) WHERE (CAST((+ (0.7591717164654997)) AS BLOB)) LIMIT -174482963; -- 0ms;
SELECT DISTINCT (((t0.c0))=((v0.c2))) COLLATE RTRIM FROM vt0;SELECT DISTINCT GROUP_CONCAT(((t0.c0) BETWEEN (t0.c0) AND (v0.c1))) FROM v0;SELECT DISTINCT (((- (''))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (NULL)), ((((((rt0.c1)AND(rt0.c1)))OR(t0.c0)))>>(((rt0.c2)IS NOT(v0.c0)))), AVG(((rt0.c2) NOTNULL)) OVER (), CASE WHEN (v0.c1 IN ()) THEN LIKE(vt0.c0, vt0.c0, 'E') ELSE rt0.c2 END, LAG(((CAST(rt0.c2 AS BLOB)) NOT NULL), CASE WHEN 0.5539287752609062 THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END, (((('-74742236')AND(CAST(vt0.c0 AS INTEGER))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) OVER () FROM rt0, vt0 GROUP BY LIKELIHOOD((+ (rt0.c1)), 0.7657669113869388), ((((rt0.c2) NOTNULL))||(TRIM(rt0.c1, vt0.c0))), ((((v0.c0)OR(((((rt0.c2)OR(rt0.c0)))OR(v0.c2)))))OR(v0.c0)) HAVING TOTAL_CHANGES() LIMIT -1614477278 OFFSET -1226556539;SELECT ((((v0.c1) NOT BETWEEN (x'') AND (v0.c2)))-((NOT (rt0.c1)))) FROM rt0, t0 WHERE (CASE WHEN NULL THEN x'' ELSE -642224609 END COLLATE BINARY);SELECT ALL CASE (((vt0.c0, '661653508', vt0.c0))<(('V)&	4', rt0.c1, v0.c1)))  WHEN (v0.c1 IN ()) THEN (NOT (rt0.c2)) ELSE (rt0.c0 IN (vt0.c0)) END FROM rt0 GROUP BY CAST(CASE rt0.c2  WHEN rt0.c1 THEN v0.c2 ELSE v0.c2 END AS BLOB);SELECT CAST(((v0.c1)<=(vt0.c0)) AS TEXT), (((((v0.c0 IN ()))AND((~ (rt0.c0)))))OR((((rt0.c1, v0.c1, rt0.c2))>=((v0.c0, v0.c1, t0.c0))))), v0.c2 FROM v0, vt0, t0 ORDER BY CASE WHEN (~ (v0.c1)) THEN (+ (v0.c1)) WHEN NULLIF(DISTINCT v0.c2, v0.c2) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c1)IS NOT(rt0.c2)) ELSE IFNULL(vt0.c0, vt0.c0) END DESC  NULLS FIRST;SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, v0, t0, vt0 GROUP BY (((((v0.c1) BETWEEN (v0.c1) AND (rt0.c0)), ((rt0.c2) ISNULL), ((v0.c1) NOTNULL)))=((((t0.c0) IS FALSE), CASE WHEN rt0.c1 THEN v0.c2 WHEN x'a828' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END, ((v0.c1)%(v0.c2))))) HAVING ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))>(vt0.c0 COLLATE BINARY)); -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c1))<>('GK䡩YT1힟T')), CAST(((vt0.c0) ISNULL) AS REAL), (((v0.c0)||(v0.c0)) IN (((rt0.c0) NOTNULL))) FROM v0, rt0;SELECT DISTINCT CASE CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 END  WHEN (~ (rt0.c0)) THEN v0.c2 COLLATE RTRIM ELSE CAST(vt0.c0 AS REAL) END FROM v0, rt0, vt0;SELECT (((~ (x''))) ISNULL) FROM rt0, t0, vt0 WHERE (0.7981757326022326); -- 0ms;
SELECT DISTINCT CASE MIN(rt0.c0)  WHEN ((v0.c2) BETWEEN (rt0.c2) AND (t0.c0)) THEN (~ (v0.c1)) ELSE CASE WHEN v0.c0 THEN x'3a58' END END FROM v0 WHERE (CASE x''  WHEN x'' THEN x'' WHEN '1824585318' THEN -4.39305707E8 WHEN NULL THEN 0.003315879511112896 END COLLATE BINARY) LIMIT -1243971196;SELECT (+ (((vt0.c0)>=(v0.c0)))) FROM v0, vt0, rt0, t0 WHERE ((((x'18defd86' IN ())) ISNULL)) LIMIT 220418075; -- 0ms;
SELECT (((((v0.c0)) BETWEEN ((v0.c1)) AND ((rt0.c0)))) ISNULL) FROM rt0;SELECT DISTINCT AVG((('-1965148862')=(v0.c0))), ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((v0.c1))), ((vt0.c0)=(v0.c0)), (((x'', vt0.c0, '7o,#3ri'))>=((v0.c1, rt0.c1, t0.c0)))))>((SUM(rt0.c0), CASE WHEN v0.c0 THEN rt0.c2 END, vt0.c0))), (((v0.c2) IS TRUE) IN ()) FROM vt0;SELECT ALL SUM('0pl먕gp') FROM vt0; -- 0ms;
SELECT (((GLOB(v0.c2, v0.c2)))>=((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END))) FROM t0 ORDER BY CAST(TYPEOF(rt0.c0) AS TEXT) DESC;SELECT DISTINCT rt0.c0, CAST(((v0.c0) NOTNULL) AS REAL), TOTAL(CAST(rt0.c1 AS INTEGER) COLLATE RTRIM) FROM rt0, t0, vt0, v0 WHERE ((((('306490773')>=(0Xfffffffffd32601c)))IS(((NULL) NOT BETWEEN ('-1474675833') AND ('1793138705'))))); -- 0ms;
SELECT ALL ((MAX(vt0.c0)) BETWEEN (((((v0.c2)AND(v0.c2)))AND(t0.c0))) AND (IFNULL(v0.c0, v0.c0))), MAX(((rt0.c2)+(v0.c0))), RANK() OVER () FROM v0, rt0, t0 LIMIT 1436228669 OFFSET -1256053900;SELECT DISTINCT ((('b')GLOB(rt0.c0)) IN (((rt0.c0)>>(v0.c2)))) FROM vt0, t0;SELECT DISTINCT SUM(x'') OVER () FROM rt0, v0, vt0, t0 WHERE (CASE WHEN 1927325327 COLLATE BINARY THEN CAST('\XV⡡xEG' AS NUMERIC) WHEN '' COLLATE BINARY THEN ((0.38095232970706916)||(x'')) WHEN ((('%MC')) NOT BETWEEN (('-1654632008')) AND ((NULL))) THEN ((0.3413011027807671) NOTNULL) END); -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) FROM t0, vt0 LIMIT 661876840; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) NOT NULL)) OVER () FROM rt0, vt0, t0, v0 WHERE (CAST(((321804532)IS NOT('1377781301')) AS REAL)) GROUP BY rt0.c1 HAVING ((((rt0.c0) NOTNULL))<<(CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE BINARY IN ()) FROM v0, rt0 WHERE (((((((((-1703990117)OR(NULLIF('Hxv-', 0.5168694065998763))))OR((('') NOTNULL))))AND(((x'd2a3') BETWEEN (x'') AND (x'c782')))))AND(((0.7246827309125263) IS FALSE)))); -- 0ms;
SELECT ALL ROUND(((rt0.c1)LIKE(vt0.c0)), CASE WHEN v0.c1 THEN vt0.c0 ELSE v0.c1 END) FROM rt0, vt0, v0; -- 0ms;
SELECT DISTINCT TOTAL(((((t0.c0)AND(rt0.c0)))OR(rt0.c0))) OVER () FROM v0, t0 LIMIT -1805083062;SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) BETWEEN (((v0.c2)|(v0.c2))) AND (MIN(vt0.c0))) FROM vt0, t0 WHERE (((('-1008345920')IS(0.22591837507313184)) IN ()));SELECT DISTINCT (((~ (rt0.c2)))+(COUNT(*))) FROM t0, v0 WHERE ((('f#>/+E,|') NOT BETWEEN ('') AND ('-1526129348')) COLLATE NOCASE);SELECT GROUP_CONCAT((- (rt0.c0))) OVER () FROM vt0, v0;SELECT DISTINCT LEAD((((((v0.c0) BETWEEN (v0.c2) AND (t0.c0)), (- (v0.c1)), v0.c2))<((((v0.c2)<(v0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ())))), (((v0.c1)<=(v0.c1)) IN ()), CAST(v0.c2 COLLATE BINARY AS REAL)) OVER () FROM t0 NATURAL JOIN v0 WHERE (CAST(((x'')=(0.19844169369963272)) AS INTEGER)) GROUP BY (((v0.c2)<=(0.050558713568741975)) IN ((v0.c0 IN ()))) ORDER BY (((rt0.c0) IS TRUE) IN ())  NULLS FIRST; -- 0ms;
SELECT ((-1001560926) IS TRUE), ((- (rt0.c2)) IN (json_patch(v0.c1, v0.c2), CASE WHEN NULL THEN rt0.c2 END)), ((((v0.c0) IS TRUE))<<((rt0.c1 IN ()))), (((NOT (rt0.c2))) ISNULL), LAG(((NULLIF(v0.c2, v0.c0))<('1728056421')), ((((((((((v0.c2) NOTNULL))OR((((v0.c0))>((v0.c1))))))OR(((v0.c1) NOTNULL))))OR((((v0.c2))<=((v0.c2))))))AND(((v0.c2)<=(v0.c1)))), ((CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN NULL THEN v0.c1 END) BETWEEN (((v0.c1)AND(v0.c0))) AND ((v0.c0 IN ())))) OVER ( ORDER BY x'' DESC  NULLS FIRST, LIKELY(DISTINCT (((rt0.c1, t0.c0, v0.c0))<((rt0.c1, v0.c0, v0.c2)))) GROUPS ((CAST(rt0.c2 AS BLOB)) IS TRUE) PRECEDING EXCLUDE NO OTHERS) FROM v0 WHERE ((((+ (360497538))) IS TRUE)) LIMIT -990243223 OFFSET 1062788378;SELECT DISTINCT SUM(vt0.c0) OVER () FROM t0, vt0, v0 GROUP BY (~ (CASE t0.c0  WHEN v0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END));SELECT ALL t0.c0 FROM t0, vt0, rt0, v0 WHERE (((CAST('' AS NUMERIC)) NOT BETWEEN ((-394443160 IN ())) AND ((('#.h쯺)_')AND(NULL))))); -- 0ms;
SELECT DISTINCT TOTAL(CAST(rt0.c1 AS BLOB)) OVER () FROM rt0, vt0, t0, v0; -- 0ms;
SELECT DISTINCT '-518878464' FROM vt0, rt0, t0, v0 WHERE ((- (-1.74482963E8))); -- 0ms;
SELECT DISTINCT MAX(COUNT(rt0.c1)) COLLATE RTRIM FROM v0, rt0, vt0, t0 ORDER BY UPPER((v0.c2 IN ())) ASC  NULLS FIRST, rt0.c1 ASC;SELECT AVG(((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))) OVER () FROM vt0, rt0, t0, v0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM v0, vt0, rt0 WHERE ((('P<k+Bhy' COLLATE BINARY)*(x'' COLLATE RTRIM))) GROUP BY ((((((v0.c2)OR(v0.c0)))OR(v0.c2)))>>((NOT (v0.c2)))), CAST(((rt0.c2) IS TRUE) AS TEXT), (((+ ('1019456417')))||(((((v0.c1)AND(vt0.c0)))AND(t0.c0))));SELECT ALL AVG(CAST(x'97e2' AS BLOB)) FROM v0; -- 0ms;
SELECT ALL ((((NOT (rt0.c0)), (- (x'')), LIKELIHOOD(0x38a0475, 0.6700576022070975), MIN(v0.c2), ((rt0.c1) BETWEEN (v0.c0) AND (t0.c0))))>((((((vt0.c0)AND(rt0.c0)))OR(v0.c2)), ((t0.c0) NOT BETWEEN ('44051706') AND (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c2 ELSE NULL END, (vt0.c0 IN ()), CASE WHEN rt0.c2 THEN vt0.c0 ELSE v0.c1 END))) FROM v0, vt0 WHERE (LOWER((((('Ge#FxQ')OR(-920588862)))AND(0.5024662419988767))));SELECT ((((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)))!=(((0.844581017705041)/(v0.c0)))), (+ (((rt0.c1)GLOB(t0.c0)))), v0.c0 FROM t0, v0, rt0, vt0; -- 0ms;
SELECT DISTINCT (((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)), ((v0.c2) NOTNULL), (~ (t0.c0))))>=(((((NULL, t0.c0, '')) NOT BETWEEN ((v0.c0, v0.c1, rt0.c0)) AND ((v0.c1, rt0.c2, vt0.c0))), v0.c0 COLLATE NOCASE, TRIM(vt0.c0, rt0.c2)))) FROM v0, t0, vt0;SELECT ALL ((json_type(rt0.c2)) NOT NULL) FROM rt0, v0, vt0, t0 WHERE (('' IN ())); -- 0ms;
SELECT ALL ((CASE WHEN v0.c0 THEN v0.c1 END) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1)==(rt0.c2)))) FROM t0, rt0, vt0 WHERE ('0.9293032519143223');SELECT DISTINCT TYPEOF(CAST(0x122388fb AS INTEGER)) FROM v0; -- 0ms;
SELECT (- (CHAR(rt0.c2))) FROM v0, vt0, rt0 WHERE (rtreenode(CASE WHEN 0.3843333878118673 THEN '346344483' WHEN NULL THEN 0.8405144051306785 WHEN '' THEN '' END, ((((0x2c6d41af)OR('2066840363')))OR('')))); -- 0ms;
SELECT ALL TOTAL(((((vt0.c0)AND(rt0.c0)))AND(v0.c2))) OVER () FROM vt0, v0, t0 ORDER BY ((((((((v0.c2)AND((~ (t0.c0)))))AND((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))AND(t0.c0 COLLATE BINARY)))OR(HEX(DISTINCT rt0.c0))) ASC;SELECT DISTINCT UNLIKELY((+ (vt0.c0))) FROM rt0;SELECT ALL UNLIKELY(((v0.c2)<=(rt0.c2))) FROM v0, vt0 WHERE (((CAST(x'c4a5' AS NUMERIC))OR(0.1868301807363889))) LIMIT 524374414;SELECT DISTINCT COUNT(CASE WHEN v0.c1 THEN rt0.c1 WHEN rt0.c2 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 END) OVER (), ((((rt0.c2)>=(v0.c2))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((v0.c1) ISNULL))), GROUP_CONCAT(((rt0.c2) IS FALSE)) COLLATE BINARY FROM rt0, vt0, v0 WHERE (CAST(CASE NULL  WHEN 0.8586188171333085 THEN NULL WHEN 0.015937080012261684 THEN NULL WHEN '%8z⨇W' THEN '' ELSE 0Xffffffffd54a84b2 END AS INTEGER)); -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c0 AS REAL)) OVER () FROM t0;SELECT TOTAL(((t0.c0)+(t0.c0))) FROM vt0, v0, t0, rt0; -- 0ms;
SELECT DISTINCT ((t0.c0 IN ()) IN (v0.c2 COLLATE BINARY)) FROM rt0, v0, vt0, t0 WHERE ((~ (HEX(NULL)))) ORDER BY ((((((((((rt0.c2)OR(v0.c1)))AND(v0.c1)))AND(vt0.c0)))OR(v0.c2))) NOT BETWEEN (rt0.c2) AND ((NOT (rt0.c1))))  NULLS LAST; -- 0ms;
SELECT DISTINCT SUM(UNLIKELY(rt0.c0)) OVER ( PARTITION BY -966470533, 0.8359646538220399), CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER), HEX(DISTINCT CAST(rt0.c2 AS REAL)), CASE (((v0.c1))<=((v0.c1)))  WHEN ((((rt0.c1)AND(v0.c1)))OR(x'')) THEN ((v0.c1)IS NOT(v0.c0)) END, FIRST_VALUE(CASE WHEN (((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((rt0.c1) BETWEEN ('-670818691') AND (x'')) WHEN NULL COLLATE RTRIM THEN ((rt0.c1)>(NULL)) WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c2 WHEN (~ (rt0.c2)) THEN rt0.c2 ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) OVER () FROM rt0, vt0;SELECT ALL UNICODE(UPPER(rt0.c2)) FROM v0, vt0 GROUP BY UNLIKELY(((('-541761768'))=((rt0.c0)))) HAVING ((((((((((((((((v0.c0)AND(v0.c1)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(t0.c0)))AND(t0.c0)))AND((((t0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, t0.c0, v0.c2))))))AND((((rt0.c1)) BETWEEN ((NULL)) AND ((x'd511'))))) LIMIT 2146808391;SELECT DISTINCT CAST((((t0.c0))>((rt0.c0))) AS INTEGER) FROM v0, vt0, t0, rt0; -- 1ms;
SELECT ((((((((((v0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(v0.c1)))OR(vt0.c0)))AND(CAST('KD(S]C,' AS TEXT))) FROM vt0 WHERE (CAST(((((x'')OR(0X3be54f70)))AND(0.4349196175395207)) AS TEXT)) GROUP BY x'dd02' ORDER BY ((((((((rt0.c0)AND(rt0.c1)))OR(t0.c0)))OR((((rt0.c0))>((v0.c1))))))OR((+ (v0.c2)))) DESC  NULLS LAST;SELECT DISTINCT GROUP_CONCAT(((v0.c0) NOTNULL)) FROM vt0 WHERE (CAST('-1051705651' COLLATE BINARY AS INTEGER)) LIMIT -2143103073 OFFSET 1317308393;SELECT ROW_NUMBER() OVER () FROM t0, v0 WHERE ((0.18518166772549993 IN (((x'6525')AND(x'7b7a'))))); -- 0ms;
SELECT ALL COUNT(*) FROM vt0, t0, v0, rt0 WHERE (LTRIM(CAST('-&9*wh' AS BLOB))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0)<<(t0.c0)) THEN ((((((((((((t0.c0)OR(1.673587766E9)))AND(t0.c0)))AND(v0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(v0.c1)) WHEN (t0.c0 IN ()) THEN CAST(v0.c1 AS NUMERIC) WHEN ((((((((((((v0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(v0.c2)))AND(rt0.c2)))OR(x'')))OR(rt0.c1)) THEN COALESCE(rt0.c1, t0.c0) END FROM rt0 WHERE ((- ((((('0.5292339400535251')OR(1.436228669E9)))AND(NULL)))));SELECT DISTINCT QUOTE(((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) FROM t0, rt0, v0, vt0 WHERE (((CAST(0.8585074777213222 AS TEXT)) IS TRUE)); -- 0ms;
SELECT LENGTH(MIN(rt0.c2)) FROM vt0, rt0, v0, t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( RANGE ((((((((((((((rt0.c2)>=(v0.c1)))AND(((rt0.c0)GLOB(v0.c1)))))OR(UNICODE(rt0.c0))))AND(((NULL) IS FALSE))))OR(((v0.c0) IS TRUE))))AND((- (v0.c2)))))AND(0.01810499930173326)) PRECEDING EXCLUDE CURRENT ROW) FROM t0;SELECT (((rt0.c0, v0.c0, v0.c2)) BETWEEN (((((v0.c2)) BETWEEN ((rt0.c2)) AND ((0.5705421154148349))), MIN(rt0.c1), (- (rt0.c2)))) AND ((v0.c0 COLLATE RTRIM, rt0.c2, (((NULL, v0.c2, rt0.c2))<>((rt0.c1, '-7299499386736660507T-6321631432135315708:1132-172T1846:518:2', v0.c1)))))) FROM vt0, rt0, t0, v0 WHERE (((CASE WHEN 0xffffffffadead48c THEN NULL ELSE NULL END)/(((0.42247271126804153) IS FALSE)))); -- 0ms;
SELECT ALL (NOT (((v0.c0)|(rt0.c1)))), LIKELIHOOD(CAST(v0.c0 AS INTEGER), 0.8434119306111625), rt0.c1 COLLATE BINARY FROM rt0, t0, v0, vt0; -- 0ms;
SELECT NULLIF((((v0.c0, t0.c0, vt0.c0))!=((v0.c1, rt0.c2, rt0.c0))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0))) FROM t0, v0, vt0 WHERE (((((((((CAST(0x6cb2ccff AS NUMERIC))OR('aj硺᰽' COLLATE RTRIM)))OR(CAST(x'e9e3' AS BLOB))))OR(((x'') NOT BETWEEN (x'') AND ('-2088079743')))))AND(((x'') IS FALSE))));SELECT ((((1219518711) ISNULL))<(rt0.c1)) FROM t0, vt0, rt0, v0 WHERE ((((NULL IN ())) ISNULL)); -- 0ms;
SELECT ((((((((rt0.c1 COLLATE RTRIM)AND((0.8666528587988143 IN ()))))OR(v0.c0)))OR(CAST(v0.c1 AS TEXT))))AND('-1686720714')) FROM t0;SELECT CASE ((v0.c2)<>(rt0.c1))  WHEN json_valid(vt0.c0) THEN v0.c2 COLLATE NOCASE END FROM t0, vt0, rt0, v0 WHERE (COALESCE(DISTINCT ((0.02228626483279217) IS FALSE), ((NULL)||(NULL)))) LIMIT 1317308393 OFFSET 1206288917; -- 0ms;
SELECT ((((rt0.c2) BETWEEN ('-1673005261') AND (v0.c0)))<<(((rt0.c1)||(v0.c1)))), (((+ (x'')))<(v0.c0)), COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE ((CAST(0X7a4b5ac AS REAL) IN ((((NULL)) BETWEEN (('1723172005')) AND ((x'9e33'))), ((-2.143103073E9)&('B'))))) GROUP BY ((((((((TYPEOF(DISTINCT t0.c0))AND(vt0.c0 COLLATE RTRIM)))AND(rt0.c0)))OR((((vt0.c0, v0.c2, rt0.c0, v0.c0, rt0.c2))=((t0.c0, rt0.c1, v0.c1, v0.c1, t0.c0))))))OR(CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE v0.c2 END)), ((((((v0.c0) IS FALSE))OR((rt0.c0 IN ()))))OR(LIKELY(DISTINCT rt0.c1))), rt0.c1 HAVING CAST(CASE WHEN v0.c1 THEN v0.c0 WHEN '2067078502' THEN rt0.c1 WHEN v0.c1 THEN v0.c2 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN v0.c2 ELSE v0.c1 END AS NUMERIC);SELECT DISTINCT (((((((rt0.c1))<=((rt0.c2))))OR(rt0.c1)))OR(vt0.c0)) FROM t0, vt0, rt0 WHERE ((((('G') NOT BETWEEN (0.30109119147322605) AND (0.926671036401885)))||(((8.94504691E8) BETWEEN (NULL) AND (0x17c8fb44))))); -- 1ms;
SELECT ALL AVG(((rt0.c2) NOT NULL)) OVER () FROM rt0, t0, vt0, v0 WHERE ((NOT (((((-1.718537165E9)OR(0.9098190457943687)))AND(0Xffffffffac793739))))); -- 0ms;
SELECT ((((((v0.c0)OR('-1318982726')))OR(v0.c2)))/((((v0.c0)) BETWEEN ((t0.c0)) AND ((v0.c1))))) FROM vt0, t0, rt0, v0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) IS TRUE)  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((rt0.c0)AND(v0.c0)))OR(v0.c0)))AND('')))AND(rt0.c2)) END FROM vt0, t0 WHERE (((((x'') NOT BETWEEN ('656441398') AND ('~QQ⳿NZ	K')))>>((NULL IN (x''))))) GROUP BY load_extension(((rt0.c1)GLOB(t0.c0))) HAVING (((CAST(rt0.c0 AS INTEGER)))>=((v0.c2))) LIMIT 462637609 OFFSET 1219576477;SELECT DISTINCT ((((v0.c1) NOT NULL)) NOT BETWEEN ((v0.c1 IN ())) AND ((~ (v0.c2)))) FROM t0, v0, rt0, vt0 WHERE (SQLITE_COMPILEOPTION_GET((((NULL)) NOT BETWEEN ((NULL)) AND (('礬./(jP577'))))); -- 0ms;
SELECT DISTINCT ((((v0.c0)>>(rt0.c1)))+(((((rt0.c1)OR(vt0.c0)))AND(x'12025e6a')))) FROM rt0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, '2066840363'))>=((vt0.c0, '393709624', rt0.c2))) COLLATE RTRIM COLLATE NOCASE WHERE ((- ((('-1501213556') IS TRUE)))) GROUP BY (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), ((0.5439004323068736) BETWEEN (t0.c0) AND (v0.c2)), (NOT (vt0.c0))))<((((rt0.c1)||(rt0.c1)), ((((rt0.c2)OR(rt0.c1)))OR(v0.c0)), ((NULL) NOT NULL))));SELECT '1007554450', CASE v0.c0 COLLATE NOCASE  WHEN (NOT (rt0.c2)) THEN v0.c2 END, (((((rt0.c0, rt0.c2, v0.c0))<=((rt0.c1, rt0.c1, rt0.c2))))*(MIN(v0.c2))) FROM t0, v0, vt0 GROUP BY CASE (+ (0.6307544187310378))  WHEN t0.c0 THEN CAST('1317308393' AS INTEGER) WHEN x'' THEN '' WHEN ((rt0.c2)>>(v0.c1)) THEN CASE rt0.c0  WHEN v0.c0 THEN 1679984560 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN CHANGES() THEN ((rt0.c2)<=(rt0.c2)) WHEN ((vt0.c0)<>(v0.c2)) THEN ((vt0.c0)||(x'6e7c')) END HAVING ((TOTAL(v0.c1)) NOTNULL);SELECT DISTINCT NULL, '1884276832', (((rt0.c1 IN (rt0.c0, vt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (v0.c1)) FROM rt0, t0, vt0 WHERE ((('6G' COLLATE BINARY) BETWEEN (CAST(x'' AS NUMERIC)) AND (CAST(x'' AS BLOB)))) GROUP BY CASE WHEN rt0.c2 THEN v0.c2 END COLLATE BINARY, '', rt0.c1 COLLATE RTRIM HAVING ((v0.c2) NOT BETWEEN (v0.c0) AND (t0.c0)) COLLATE NOCASE;SELECT DISTINCT ((((t0.c0)|(v0.c0))) IS FALSE) FROM rt0, v0, vt0, t0; -- 0ms;
SELECT ALL (+ (((v0.c1)>=(v0.c1)))) FROM v0; -- 0ms;
SELECT (- (CAST(vt0.c0 AS TEXT))) FROM t0 WHERE ((~ ((('qT2')>=(0.9341033529952475))))) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS NUMERIC) ASC LIMIT -435975648;SELECT ROW_NUMBER() OVER ( ROWS  CURRENT ROW), TYPEOF(CASE WHEN rt0.c1 THEN v0.c2 END), v0.c0 FROM t0, rt0;SELECT DISTINCT json_quote(t0.c0 COLLATE BINARY) FROM rt0 WHERE ((('x.') ISNULL) COLLATE BINARY);SELECT DISTINCT ((CAST(rt0.c2 AS REAL))/(rt0.c1)), GROUP_CONCAT(CAST(v0.c1 AS REAL)), (((v0.c2)GLOB(vt0.c0)) IN ()), CASE WHEN COUNT(rt0.c2) THEN rt0.c1 END, (~ (CAST(v0.c2 AS INTEGER))) FROM t0;SELECT x'd28a', LAST_VALUE('qMo䔚/') OVER (), ((((rt0.c2)-(vt0.c0))) NOT NULL) FROM rt0, v0, t0, vt0; -- 1ms;
SELECT DISTINCT ((CAST(v0.c2 AS BLOB))%((((v0.c1, x'', v0.c2))<=((rt0.c2, t0.c0, NULL))))) FROM v0, rt0, vt0, t0 WHERE ((((((+ ('-304260877')))OR(((((0.23382162974413478)OR('1138066327')))OR('611683105')))))AND(CASE NULL  WHEN NULL THEN -9.67725219E8 ELSE 'n	‑SJ' END))); -- 0ms;
SELECT DISTINCT v0.c0, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))GLOB((vt0.c0 IN ()))), CASE (~ (v0.c0))  WHEN (((t0.c0, v0.c1, vt0.c0, v0.c1, 0.5292339400535251, t0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, x'', t0.c0, rt0.c1, v0.c2, vt0.c0)) AND ((t0.c0, rt0.c1, rt0.c0, v0.c0, rt0.c1, rt0.c0, v0.c2))) THEN ((v0.c0)||(v0.c2)) END FROM v0;SELECT DISTINCT ((v0.c1) NOTNULL) COLLATE RTRIM, rt0.c1, 169221940 FROM rt0, v0, vt0, t0 WHERE (((((('jI\r') IS FALSE)))>=((LTRIM(0.14774520583150563, '0.16176679527777837'))))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM t0 WHERE (((('0.510603184967941') IS TRUE) IN ())) GROUP BY ((((((0.7366843259907675) NOTNULL))OR(CAST(rt0.c2 AS INTEGER))))OR(CAST(v0.c2 AS TEXT))) HAVING (((t0.c0)) NOT BETWEEN ((((v0.c1) IS FALSE))) AND ((((t0.c0)AND(rt0.c2)))));SELECT ALL rt0.c2 FROM rt0 WHERE (((((('-550732029')) BETWEEN ((0.40887974854915565)) AND ((0xffffffff9d6051b8))))+(((x'f20e')&(x''))))); -- 0ms;
SELECT SUM(json_array_length(t0.c0)) OVER () FROM vt0, t0, rt0, v0 WHERE ((('z	KWg' COLLATE NOCASE)+(('pEgb棳[4' IN (0.006648743824446024))))); -- 0ms;
SELECT MAX(v0.c1) COLLATE BINARY FROM rt0, v0, t0, vt0 WHERE ((('1297971500')<<(UNLIKELY(DISTINCT NULL)))) GROUP BY ((((v0.c2)>=(v0.c2)))IS NOT((((rt0.c2, v0.c0, v0.c2))<>((rt0.c0, rt0.c1, rt0.c0))))) HAVING (- (rt0.c1)); -- 0ms;
SELECT CASE t0.c0  WHEN ((t0.c0)-(rt0.c2)) THEN ((('44051706'))>((')('))) WHEN -7.8202145E7 THEN ((rt0.c2) NOTNULL) WHEN ((rt0.c1)AND(rt0.c0)) THEN TOTAL(v0.c1) END FROM v0 NOT INDEXED, t0, vt0;SELECT RANK() OVER () FROM rt0 WHERE (0.3433074944939466 COLLATE NOCASE); -- 0ms;
SELECT DISTINCT MAX(((v0.c2) IS FALSE)) COLLATE NOCASE, COUNT(*) OVER (), 0.3564501173222101 COLLATE BINARY, CAST(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) AS REAL), COUNT((((rt0.c1, rt0.c1, v0.c1)) BETWEEN ((NULL, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1)))), (((v0.c0, v0.c1, v0.c1)) BETWEEN ((ABS(DISTINCT vt0.c0), LIKELY(DISTINCT x''), rt0.c1 COLLATE BINARY)) AND ((((((v0.c2)OR(v0.c0)))OR(v0.c0)), vt0.c0 COLLATE NOCASE, 0.6773864827494488))), (((rt0.c1)+(rt0.c0)) IN (((rt0.c2) NOT NULL))) FROM t0;SELECT DISTINCT (v0.c0 COLLATE NOCASE IN ()) FROM vt0, t0, v0, rt0 LIMIT -132978336 OFFSET -1073652037; -- 0ms;
SELECT DISTINCT CAST(v0.c2 AS INTEGER) FROM v0, vt0, rt0, t0 WHERE ((((x'')!=(0.8082168549306209)) IN ((('-2028819569') IS FALSE)))); -- 0ms;
SELECT DISTINCT CAST(((v0.c0)+(0.783276772493416)) AS BLOB) FROM v0, rt0, vt0, t0 WHERE (UPPER(json_valid(0X634d172b))); -- 0ms;
SELECT DISTINCT (((('c}쐽^7')<>(v0.c0)))|(((((v0.c1)AND(rt0.c2)))OR(rt0.c0)))), ((((t0.c0) BETWEEN (v0.c2) AND (vt0.c0))) NOT NULL), ((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))))AND(NULL)) FROM rt0, vt0, v0;SELECT ALL (CASE '-578718608'  WHEN t0.c0 THEN rt0.c1 END IN ()) FROM rt0, v0, vt0, t0; -- 0ms;
SELECT DISTINCT CASE t0.c0  WHEN MAX(v0.c1) THEN CAST(v0.c0 AS REAL) END FROM v0 WHERE ((((('')<<(x'e5a4')))%(NULL)));SELECT DISTINCT ((COUNT(rt0.c2))||(((v0.c2)<=(v0.c0)))) FROM rt0 WHERE (0.8685649425274459 COLLATE BINARY);SELECT ALL CAST(rt0.c1 AS BLOB), (((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((((((((t0.c0)AND(rt0.c1)))OR(vt0.c0)))OR(v0.c1)))OR(v0.c1))))), (CAST(v0.c2 AS NUMERIC) IN ()) FROM rt0 WHERE ((('686044971') NOT BETWEEN ((NOT (x'a6c2d00a'))) AND (((((NULL)OR(1492531195)))AND(0xffffffff8fe4cb32)))));SELECT DISTINCT LAST_VALUE(((((((((((rt0.c1)==(rt0.c0)))OR(x'')))AND((v0.c2 IN ()))))OR(((rt0.c1)IS(t0.c0)))))AND(rt0.c1 COLLATE BINARY))) OVER () FROM vt0, rt0, v0, t0 ORDER BY ((rt0.c2) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (((t0.c0)GLOB(vt0.c0)))) DESC, (((~ (rt0.c1))) ISNULL) ASC  NULLS FIRST, (((- (v0.c0)))/((('-1614272539') NOT BETWEEN (rt0.c0) AND (t0.c0)))) ASC  NULLS LAST; -- 0ms;
SELECT ((rt0.c1 COLLATE RTRIM) NOTNULL) FROM rt0, vt0 WHERE ((NULL IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c1)GLOB(v0.c2))) NOT BETWEEN (v0.c0) AND (CASE '346344483'  WHEN rt0.c0 THEN t0.c0 ELSE v0.c2 END)) FROM t0 WHERE (NULL);SELECT ALL ((((TOTAL(v0.c2))OR(rt0.c1)))AND(((t0.c0) ISNULL))) FROM rt0 GROUP BY ((v0.c1 IN ()) IN ());SELECT NTH_VALUE(UNLIKELY(((rt0.c1)IS NOT(rt0.c2))), CAST(TOTAL_CHANGES() AS REAL)) OVER () FROM vt0, v0, rt0 LIMIT -1325330295; -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0, t0, vt0, v0; -- 0ms;
SELECT ALL ((((t0.c0)GLOB(v0.c2)))/(CASE WHEN rt0.c2 THEN v0.c2 WHEN v0.c1 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END)) FROM rt0;SELECT (((t0.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((('-405215605' IN ('690787007'))))) FROM vt0 WHERE ((UNICODE('') IN ((x'a74b' IN ()))));SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE (((COALESCE(720340290, ''))!=((x'' IN ())))); -- 0ms;
SELECT ALL GROUP_CONCAT(rt0.c2) FROM v0 WHERE (((((NULL)OR(0.48736738908750676)))AND(x'bc6e')) COLLATE RTRIM);SELECT ((((rt0.c0)+(rt0.c2)))GLOB(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0, t0, v0 WHERE ((((((0.826453711963811, NULL, '0.17986828726901138')) NOT BETWEEN ((NULL, '笫', NULL)) AND ((NULL, 0.019687301552962166, NULL))))<((((0xffffffff9b540fd6)) BETWEEN ((x'')) AND (('177914510')))))) GROUP BY vt0.c0;SELECT (((TOTAL(rt0.c1)))>((((vt0.c0)|(vt0.c0))))), ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) NOT NULL), NTH_VALUE('1663401221', CAST(((vt0.c0) NOT NULL) AS INTEGER)) OVER () FROM t0, v0, vt0 ORDER BY ((((((rt0.c2)AND(v0.c0)))AND(0x3c9bd4d5))) NOTNULL) ASC, '1019523977' ASC  NULLS LAST, ((((vt0.c0)AND(rt0.c1)))<=(((rt0.c0) IS TRUE)))  NULLS FIRST;SELECT DISTINCT CASE WHEN 342133195 THEN ((v0.c2)!=(t0.c0)) WHEN CASE rt0.c0  WHEN v0.c2 THEN rt0.c0 ELSE t0.c0 END THEN ((v0.c1)>(0.8343921481160108)) WHEN rt0.c2 COLLATE RTRIM THEN (((rt0.c0))==((v0.c2))) END FROM rt0, v0, t0, vt0; -- 0ms;
SELECT TOTAL(CASE v0.c1  WHEN rt0.c2 THEN 1909644024 ELSE v0.c1 END COLLATE BINARY) OVER ( RANGE BETWEEN COALESCE((NOT (rt0.c1)), (- (vt0.c0))) PRECEDING AND  CURRENT ROW) FROM vt0, rt0, t0 WHERE (((((((((((('-1001560926')) BETWEEN (('511806291')) AND ((0.25813672456019354))))OR(((0.7303432123617818) NOT BETWEEN (0X582bbe57) AND ('-603107870')))))AND((((0Xffffffffcbe8645a, 'S/tJ4hn', x'2789')) BETWEEN ((-1642429504, x'32b0d0a9', x'')) AND ((x'', 0Xffffffff823e0879, 0.3951546764256376))))))AND(((0.0707217579280448)LIKE(NULL)))))OR((('-944318970') NOT BETWEEN ('102358296') AND ('u\r')))));SELECT CAST(COUNT(*) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN rt0.c0 THEN 0.961156860753465 END) NOT BETWEEN ((v0.c1 IN ())) AND ((rt0.c0 IN (vt0.c0)))) FROM rt0, v0, t0 WHERE ((json_array_length('MGjqࠄ2\n95') IN (CAST('JJ&IW闕6LM' AS NUMERIC)))) GROUP BY (((rt0.c0)) BETWEEN ((CASE WHEN v0.c2 THEN v0.c2 END)) AND ((((rt0.c0) IS FALSE)))) HAVING (((v0.c2)) BETWEEN ((v0.c2)) AND ((rt0.c1))) COLLATE BINARY;SELECT DISTINCT x'', ((((rt0.c1) NOT BETWEEN (v0.c1) AND (vt0.c0)))<>(v0.c2)), ((((v0.c2) NOTNULL))-((t0.c0 IN ()))) FROM t0 WHERE (0.8195883176549094);SELECT DISTINCT ((((((t0.c0)AND(t0.c0)))OR(v0.c1))) BETWEEN ((~ (v0.c2))) AND ((((v0.c2, t0.c0, ''))==((v0.c2, rt0.c2, v0.c0))))) FROM v0, t0, rt0, vt0 WHERE (CASE WHEN x'' COLLATE BINARY THEN 0xffffffffdc0d4de2 WHEN '-2109357309' THEN (('{슧K') IS FALSE) WHEN ((0.8986321110118188) NOT BETWEEN (0.8951475726938335) AND (0.6171002567510707)) THEN (NOT (0.24510124341751593)) ELSE 0.7227400665668521 END); -- 0ms;
SELECT ((((TOTAL('Orai?q'))AND(((v0.c1) IS FALSE))))AND(CHAR(rt0.c2))) FROM t0, v0, rt0, vt0 WHERE ((((((NOT (1.7976931348623157E308)))AND(CAST(NULL AS NUMERIC))))AND('0.38095232970706916' COLLATE RTRIM))) ORDER BY json_array_length(((0.4919079062979067) NOT BETWEEN (rt0.c2) AND (rt0.c0)), 0.9162524104284926); -- 1ms;
SELECT 0.5569079124820493 COLLATE BINARY FROM v0 WHERE ((((NOT ('835417932'))) BETWEEN (((x'')>(NULL))) AND ((('Wlm\r{}g')<(0.9279062897371156))))); -- 0ms;
SELECT ((((v0.c0)IS(rt0.c1))) BETWEEN (((((((((t0.c0)OR(v0.c0)))OR(t0.c0)))AND(NULL)))AND(rt0.c2))) AND (((rt0.c0)IS NOT(rt0.c1)))) FROM v0, t0;SELECT DISTINCT 1.929822015E9 FROM rt0 NOT INDEXED, t0, vt0 ORDER BY -1.450835463E9 ASC; -- 0ms;
SELECT ALL CASE ((vt0.c0) IS TRUE)  WHEN '' THEN (~ (v0.c1)) END FROM vt0, t0, v0, rt0; -- 0ms;
SELECT ((v0.c1) IS TRUE) FROM t0, rt0, v0; -- 0ms;
SELECT CAST((- (v0.c0)) AS BLOB) FROM v0, vt0, t0, rt0 WHERE ((((((('-924379858')LIKE(NULL)))OR((('') NOTNULL))))OR(CASE WHEN NULL THEN x'' WHEN x'' THEN x'5633' WHEN '0.12463577885870047' THEN NULL ELSE '1978667690' END))); -- 1ms;
SELECT DISTINCT ((('995171859')) NOT BETWEEN ((((vt0.c0)%(v0.c0)))) AND (((rt0.c1 IN (v0.c2))))) FROM vt0, rt0, t0, v0; -- 0ms;
SELECT DISTINCT ((0xffffffffc3e5dcc0) NOT NULL) FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT v0.c1 FROM rt0, vt0, t0, v0; -- 0ms;
SELECT DISTINCT ((v0.c0)LIKE(t0.c0)) COLLATE RTRIM, NTH_VALUE(CAST(LIKELY(DISTINCT v0.c1) AS BLOB), ((CAST(rt0.c2 AS TEXT))>=((NOT (rt0.c0))))) OVER (), ((CAST(v0.c2 AS TEXT))<(((((((((v0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(v0.c1)))AND(v0.c2)))) FROM rt0, t0, v0; -- 0ms;
SELECT ALL GROUP_CONCAT(vt0.c0) OVER () FROM v0, vt0, rt0 UNION ALL SELECT DISTINCT (((v0.c2 IN ())) ISNULL) FROM vt0, v0; -- 1ms;
SELECT ALL TOTAL((((rt0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((rt0.c0, v0.c0, v0.c1)))) OVER ( GROUPS ((rt0.c0) IS TRUE) PRECEDING) FROM vt0, rt0, t0, v0 WHERE ((((((-1716920942, NULL, '|{'))==((0.34395146591072834, x'', '-36883145'))))<<(((x'')LIKE('65214116'))))); -- 0ms;
SELECT (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) ISNULL) FROM vt0, rt0 LIMIT 9223372036854775807; -- 0ms;
SELECT DISTINCT v0.c0 FROM rt0 WHERE (((TRIM('-720515594')) NOT NULL));SELECT DISTINCT CASE WHEN t0.c0 COLLATE BINARY THEN x'4252' ELSE (((t0.c0))<>((v0.c2))) END FROM vt0;SELECT DISTINCT ((((v0.c0)*(v0.c2))) BETWEEN ((v0.c0 IN ())) AND (CASE rt0.c1  WHEN v0.c1 THEN rt0.c1 ELSE vt0.c0 END)) FROM rt0, t0 WHERE ((NOT ((~ (x'a37b'))))) EXCEPT SELECT ALL ((CASE WHEN v0.c2 THEN vt0.c0 ELSE rt0.c2 END)AND((((v0.c1))<((v0.c0))))) FROM vt0, rt0, t0;SELECT ALL MIN(0x2f7ce264) FROM vt0 WHERE (((((((((CASE NULL  WHEN 0X476f68f4 THEN NULL END)AND(json_object(NULL, ''))))AND(((0.4858877258350732) NOT BETWEEN (NULL) AND (x'')))))OR(385704093)))AND(((NULL)/(0.4790418762249551))))); -- 1ms;
SELECT ALL ((MIN(rt0.c2))>(((('0.3147893767473159', vt0.c0, t0.c0)) BETWEEN ((rt0.c0, v0.c2, vt0.c0)) AND ((vt0.c0, v0.c2, rt0.c0))))), 0.9553355936601894, 0.14989543638669411, ((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((0.5313128480432476))), NULLIF(vt0.c0, v0.c0), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN v0.c2 WHEN x'' THEN v0.c2 END))<=((CAST(v0.c1 AS BLOB), ((v0.c0) NOT NULL), '1688142953'))), 948452426 FROM v0 WHERE (TRIM(((x'68ffb8bb')<>(NULL)))) GROUP BY ((UPPER(v0.c0))IS NOT(((rt0.c2)-(t0.c0))));SELECT ((((((((rt0.c1 COLLATE RTRIM)AND(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)))))AND(((rt0.c0) NOT NULL))))AND(((v0.c2) BETWEEN (rt0.c0) AND (v0.c2)))))AND(rt0.c1 COLLATE NOCASE)), CASE WHEN ((((t0.c0)AND(x'')))OR('-1051705651')) THEN CAST(rt0.c0 AS TEXT) WHEN (+ (t0.c0)) THEN (((rt0.c1, rt0.c2, x'9d7c'))>((rt0.c2, v0.c2, rt0.c1))) WHEN ((((vt0.c0)OR(rt0.c0)))AND(t0.c0)) THEN (- (x'')) ELSE ((((rt0.c0)OR(0.09518613602811354)))AND(rt0.c2)) END, (((v0.c1) BETWEEN (vt0.c0) AND (t0.c0)) IN ()) FROM v0, rt0 WHERE (((('᧦s' IN ())) NOT BETWEEN ('-534960528') AND ((+ (0.6629901576985806)))));SELECT DISTINCT t0.c0 FROM vt0, v0, t0 WHERE ((((((-754695062))!=((0X1ecec0e2)))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((vt0.c0, x'', vt0.c0, rt0.c0, rt0.c1)) BETWEEN ((((v0.c1) NOT NULL), (v0.c0 IN (rt0.c1)), CAST(v0.c1 AS REAL), ((vt0.c0) NOTNULL), ((v0.c1)!=(v0.c0)))) AND ((NULL, (((t0.c0))>((rt0.c1))), CASE vt0.c0  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END, CASE WHEN '' THEN t0.c0 WHEN v0.c1 THEN t0.c0 WHEN v0.c0 THEN v0.c0 END, (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((NULL, rt0.c0, v0.c2)) AND ((v0.c0, v0.c0, vt0.c0)))))), COUNT(*), NTH_VALUE(v0.c1, '-1081444029') OVER () FROM vt0, v0;SELECT ((((v0.c2)GLOB(v0.c0))) BETWEEN (((v0.c1)%(v0.c2))) AND ((v0.c0 IN ()))) FROM t0, vt0;SELECT x'' COLLATE NOCASE, CASE WHEN ((vt0.c0)<<('㖷D''*,H搊')) THEN v0.c0 END, ((((((((((((CAST(rt0.c2 AS REAL))AND(v0.c0)))OR((t0.c0 IN ()))))OR(((rt0.c1) NOTNULL))))AND(COUNT(v0.c0))))AND(((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(v0.c2)))))AND((- (v0.c1)))) FROM rt0 WHERE (IFNULL(DISTINCT ((NULL) NOT BETWEEN (x'') AND ('mInt돷')), (((x'f61d')) BETWEEN ((x'')) AND ((x'')))));SELECT DISTINCT (- (t0.c0)) COLLATE RTRIM, SUM(((rt0.c1)+(t0.c0))), (((v0.c0 IN ()))>(((t0.c0)&(v0.c0)))) FROM rt0, vt0;SELECT DISTINCT AVG(rt0.c2) OVER ( ORDER BY ((v0.c0 COLLATE BINARY)<=(rt0.c0)) DESC  NULLS LAST, ((v0.c0)<<(rt0.c0)) COLLATE RTRIM  NULLS LAST, (- (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))), (NOT ((v0.c0 IN ('??3 OI>\n')))), AVG(NULL) OVER () FROM vt0;SELECT v0.c1 FROM v0, vt0, t0; -- 0ms;
SELECT ((((((rt0.c2)OR(-1814922210)))AND(rt0.c0)))<(COUNT(*))) FROM t0, vt0, v0, rt0 WHERE ((NOT (((x'') NOT BETWEEN ('') AND ('894504691'))))); -- 0ms;
SELECT (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT CAST(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END AS TEXT), CAST((((vt0.c0, v0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, v0.c0, v0.c1)) AND ((v0.c0, rt0.c1, rt0.c2))) AS TEXT), NTILE(((((((((((((((((vt0.c0)OR(v0.c2)))AND(511806291)))OR(rt0.c2)))OR(rt0.c1)))OR(-865153035)))OR(rt0.c1)))AND(((rt0.c1) NOT NULL))))AND((- (rt0.c2))))) OVER (), rt0.c1, GROUP_CONCAT(SUM(rt0.c2)) COLLATE RTRIM FROM t0, rt0, vt0, v0 WHERE (TYPEOF('n' COLLATE BINARY));SELECT DISTINCT ((((((rt0.c0)AND(rt0.c1)))AND(v0.c1)))<=(((((v0.c1)AND(v0.c2)))AND(t0.c0)))) FROM rt0, t0 WHERE (x'' COLLATE BINARY) LIMIT -1931658617;SELECT DISTINCT (((('-1686720714')IS NOT(rt0.c0)))>((((vt0.c0, v0.c0, v0.c0))>=((rt0.c1, 0.8748627230397787, v0.c2))))) FROM rt0, vt0 WHERE ((((+ (NULL))) IS FALSE));SELECT ALL CASE WHEN (0xffffffffb25fb1c5 IN (rt0.c1)) THEN (((v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((v0.c1, vt0.c0, v0.c2)) AND ((0.5230728210545667, v0.c0, t0.c0))) WHEN ((rt0.c2)IS(rt0.c1)) THEN (NOT (v0.c0)) WHEN CAST(t0.c0 AS REAL) THEN (~ (rt0.c0)) WHEN ((v0.c2)OR(v0.c1)) THEN (+ (rt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN v0.c1 WHEN v0.c0 THEN rt0.c1 END END FROM v0, t0, vt0, rt0 ORDER BY ((((x'') IS TRUE))!=((((t0.c0))<>((t0.c0))))); -- 0ms;
SELECT ALL (- ((v0.c0 IN ()))), ((((((((json_array_length(rt0.c2, rt0.c0))OR(((rt0.c2)==(vt0.c0)))))OR((((v0.c2, vt0.c0, vt0.c0)) BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c1, t0.c0, t0.c0))))))AND(CASE '-70389774'  WHEN rt0.c0 THEN v0.c2 END)))OR(SUBSTR(rt0.c0, rt0.c2))), ((((v0.c2) IS FALSE))<((rt0.c1 IN ()))), (~ (COUNT(*))), COUNT(*) OVER (), TYPEOF(''), COUNT(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(v0.c0)))OR('-1710829496'))) FROM vt0 ORDER BY CASE WHEN ((rt0.c0)-(t0.c0)) THEN v0.c1 END;SELECT AVG(v0.c1), LEAD(((((v0.c1)OR(((rt0.c0)<>(v0.c1)))))AND((v0.c1 IN (v0.c0)))), v0.c1, x'') OVER (), CASE rt0.c0  WHEN NULL THEN v0.c2 ELSE v0.c0 END COLLATE RTRIM FROM t0, rt0, v0 WHERE ((((NULL)) NOT BETWEEN (((- (-1697006017)))) AND ((NULL COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)=(((v0.c2) NOT NULL))) FROM vt0, t0 WHERE (CAST('1450460892' AS TEXT)) GROUP BY ((CASE WHEN v0.c1 THEN v0.c1 END)|(((rt0.c0)>=(v0.c1)))) HAVING ((v0.c0) IS FALSE);SELECT DISTINCT (+ (((rt0.c0) IS FALSE))) FROM v0, t0;SELECT CUME_DIST() OVER ( ORDER BY (~ ('-1302351419'))) FROM rt0 WHERE (((NULL)<(TRIM(x'')))); -- 0ms;
SELECT ALL CASE WHEN (((v0.c1))!=((vt0.c0))) THEN CASE v0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c1 END WHEN ((t0.c0)IS NOT(v0.c1)) THEN ((((v0.c0)AND(rt0.c1)))AND(rt0.c1)) WHEN ((v0.c0)|(v0.c0)) THEN (v0.c0 IN ()) ELSE v0.c2 END FROM rt0, t0 WHERE ((((((((NULL)OR(-1573243204)))OR(x'37179645'))))<=((((NULL) NOT BETWEEN (-648442136) AND (x'1448'))))));SELECT DISTINCT ((((rt0.c0)%(rt0.c1))) NOTNULL) FROM t0, rt0, v0, vt0; -- 0ms;
SELECT ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c1))) AND (DATE(rt0.c1, rt0.c0, rt0.c0, rt0.c0, vt0.c0))) FROM rt0, v0, t0, vt0 ORDER BY ((((((rt0.c0)OR(v0.c2)))AND(t0.c0)))OR(((((((((vt0.c0)AND(rt0.c0)))OR(v0.c0)))OR(t0.c0)))OR(x''))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2) IS TRUE))AND(SUM(v0.c1))))OR(CAST(v0.c1 AS REAL))))AND(SQLITE_VERSION())))AND(((rt0.c1) BETWEEN (v0.c2) AND (t0.c0)))), NULL, (rt0.c1 IN ()), COUNT(x''), CASE WHEN CASE rt0.c1  WHEN v0.c2 THEN x'' WHEN rt0.c2 THEN v0.c2 WHEN v0.c0 THEN rt0.c2 END THEN (((((((('')OR(v0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(v0.c0)) ELSE CASE WHEN v0.c2 THEN rt0.c2 WHEN v0.c2 THEN rt0.c1 WHEN v0.c1 THEN rt0.c0 ELSE rt0.c0 END END FROM v0, t0 NOT INDEXED, rt0 WHERE (((((((((((NULL)||(0.3951546764256376)))OR((((NULL)) BETWEEN ((0.6810793593026765)) AND (('L%'))))))AND(((0xfffffffffb56badf)LIKE(x'')))))OR((((0.16986539106600884, 0.3483449651563897, x''))<((x'', 0.7786201673856838, '-106936496'))))))OR((('1019523977')IS(0.8112961393494135))))); -- 0ms;
SELECT ALL ((t0.c0)IS NOT(t0.c0)) COLLATE RTRIM FROM rt0, t0, v0 WHERE (((0.009864392459646654) IS FALSE)); -- 0ms;
SELECT ALL (+ (CAST(v0.c0 AS BLOB))), (- (0Xffffffff9b76af36 COLLATE NOCASE)), (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)), (v0.c1 IN ()), x''))>=((((((v0.c0)OR(t0.c0)))OR(v0.c0)), (((v0.c0, rt0.c0, v0.c0)) BETWEEN ((NULL, vt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))), ((rt0.c1) IS FALSE)))) FROM t0, vt0;SELECT (((rt0.c1, v0.c2, v0.c0)) NOT BETWEEN ((((v0.c0)|(t0.c0)), ((v0.c0) NOTNULL), CAST(vt0.c0 AS NUMERIC))) AND (('1432173761', CAST(rt0.c0 AS INTEGER), CASE WHEN rt0.c1 THEN v0.c0 END))) FROM rt0;SELECT ((CASE rt0.c1  WHEN rt0.c0 THEN v0.c1 WHEN v0.c1 THEN rt0.c2 WHEN v0.c1 THEN v0.c1 WHEN rt0.c2 THEN v0.c1 WHEN v0.c0 THEN t0.c0 END)AND(((v0.c2) ISNULL))) FROM rt0, v0, vt0, t0; -- 0ms;
SELECT DISTINCT (NOT ((v0.c0 IN (rt0.c0, v0.c0)))), ((((rt0.c1) NOT NULL))!=(((rt0.c2)>>('110576890')))), (((rt0.c2) NOTNULL) IN ((v0.c1 IN ()))) FROM t0, v0;SELECT (((LIKELIHOOD(rt0.c2, 0.38747003112160994)))>=(((vt0.c0 IN (x''))))) FROM v0, vt0, t0, rt0 WHERE ((((NULL)) NOT BETWEEN ((COALESCE(-174046906, 0Xffffffffe1a720f0))) AND ((x'' COLLATE BINARY)))); -- 0ms;
SELECT ((((NULL)OR(((t0.c0)-(vt0.c0)))))OR(t0.c0 COLLATE RTRIM)), (((((vt0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1)), (rt0.c1 IN ()), ((t0.c0)LIKE(v0.c1))))<((NULL, ((v0.c0)AND(rt0.c1)), ((((((((rt0.c0)OR(v0.c1)))AND(v0.c2)))OR(rt0.c2)))AND(v0.c0))))), (((vt0.c0)) BETWEEN (('-2079948180')) AND (((((vt0.c0))<((t0.c0)))))) FROM vt0, t0, v0, rt0 WHERE (((((0.8638033518703342)OR((('1330171048')GLOB('36008108')))))OR(PRINTF('HrG,5W')))); -- 0ms;
SELECT ALL CASE CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c1 END  WHEN (- (rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) END, ABS(((rt0.c2)<=(v0.c2))), CAST(CASE WHEN x'' THEN 0x3c9bd4d5 END AS TEXT) FROM t0, rt0, vt0 WHERE (((NULL)/('\nmoꮘw')) COLLATE RTRIM);SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0, t0, vt0, v0 GROUP BY ((((((((v0.c0)OR(rt0.c0)))OR(v0.c1)))AND(t0.c0)))OR(t0.c0)) COLLATE BINARY HAVING SQLITE_SOURCE_ID(); -- 0ms;
SELECT DISTINCT rt0.c2, (((((v0.c0)IS(t0.c0))))!=((((rt0.c2)=(v0.c0))))), CAST(((((rt0.c1)OR(rt0.c1)))OR(v0.c0)) AS TEXT) FROM rt0, t0, vt0 WHERE ((- ((('') IS FALSE))));SELECT ALL ((((rt0.c1) IS FALSE)) BETWEEN (MAX(v0.c1)) AND ('/GV')), ((((v0.c1) BETWEEN (v0.c1) AND (t0.c0)))%((('1860319167') IS FALSE))), '1152800831' FROM rt0;SELECT DISTINCT CAST(((v0.c0) IS TRUE) AS BLOB) FROM vt0;SELECT ALL ((v0.c1 IN ()) IN ()) FROM vt0, v0, t0, rt0 ORDER BY NULL  NULLS LAST; -- 0ms;
SELECT CAST('-1926019348' AS REAL) FROM t0 WHERE (((CAST(NULL AS REAL))&((~ (''))))) GROUP BY ((((((((((vt0.c0)AND(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))OR(vt0.c0))) NOTNULL) HAVING TOTAL(NULL);