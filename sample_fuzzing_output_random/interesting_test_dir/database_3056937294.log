-- Time: 2024/06/07 06:30:31
-- Database: database94
-- Database version: 3.40.0
-- seed value: 3056937294
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, matchinfo=fts3); -- 1ms;
PRAGMA secure_delete; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (0.5776107945334598); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '7865'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'', c0=0.8948695327348548, c0=0.8948695327348548; -- 6ms;
ANALYZE sqlite_master; -- 0ms;
END; -- 0ms;
UPDATE OR FAIL vt1 SET c0=0.9773617141071111, c0=x'', c0='+tCpbl|'; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(NULL, -1.917525781E9); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=x'0401', c1='+(X)X첚<U' WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(((x'') NOT BETWEEN (NULL) AND ('+tcpbl|')), ((0.8948695327348548) NOT BETWEEN (0X6d80f045) AND (0x70052fd1)), (NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.879388113E9)) BETWEEN ((CASE WHEN -1730178371 THEN -1.098452431E9 END)) AND ((NULL COLLATE BINARY))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES ('-1917525781', NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
REINDEX RTRIM; -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=4'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='975267753' WHERE ((((x'')||(vt0.c1))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (-1.730178371E9); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'5cd7078d'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
REINDEX  vt0; -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('yV#u2^z'); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES ('+(X)X첚<U'); -- 1ms;
CREATE VIEW v0(c0) AS SELECT (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END))) FROM vt0, vt1; -- 5ms;
INSERT OR ABORT INTO vt0(c1, c0) VALUES (x'460b', 0.7911072950181877); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1904174177,6');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 340093856); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO vt0(c1, c0) VALUES (788647066, '⁑rUN듧I'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB ); -- 0ms;
UPDATE rt0 SET (c0)=('820125777') WHERE 0.6534445743356061; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '63996'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE rt0 SET (c1)=(NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-1289213891'), (975267753), (0.8948695327348548); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.cache_size; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1830423693); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (x'a228', x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (SUBSTR('0.9773617141071111', NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('Eky)(b)4', 0.7911072950181877), (NULL, '-1204316446'), ('9Sy{9?,', NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '41281'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1536850889); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c2=-1289213891, c3='-1917525781'; -- 0ms;
UPDATE rt0 SET c1=975267753, c1=x''; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-1917525781' WHERE (UNLIKELY(DISTINCT vt1.c0) IN ()); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0X6d80f045, NULL), (2071230967, '788647066'), (9.75267753E8, x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR ABORT INTO vt1 VALUES (0X4af1a633); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 85934116); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c2, c1)=('', 0x25da39eb, '1879388113') WHERE (~ (rt0.c0)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('Ph[iK+H'), ('1837166661'), (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c1='HMᦷ\r_.'; -- 0ms;
UPDATE rt0 SET (c1, c2, c0)=('1_oXeAvz8', x'', '.C aO'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('uHEgW'), (0x4e788c8f), (x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -868907933);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1098452431,10');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '23995'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
COMMIT; -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '31794'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58458'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2982'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '11676'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 805874871); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.7977654027493856, c1=NULL WHERE ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))!=(((rt0.c1) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (NULL, '-121784056'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES (NULL, NULL), ('', x''), (0.8132629462084474, NULL); -- 1ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END; -- 0ms;
ANALYZE; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1837166661);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1214302446,3');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 624222383); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1917525781,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60977'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '16972'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (NULL), (0.9291736959456965), (0.7672978677149312); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES ((((x'') NOT BETWEEN ('-1098452431') AND ('oN)vI')) IN ()), NULL, '2071230967'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x''); -- 1ms;
UPDATE OR ABORT vt1 SET (c0)=(NULL) WHERE 0.6534445743356061; -- 1ms;
REINDEX; -- 0ms;
PRAGMA temp.stats; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<(COUNT(*))) FROM v0 FULL OUTER JOIN vt0 ON ((- (vt0.c0)) IN ());SELECT rt0.c3 FROM vt1, v0, rt0, vt0 LIMIT 2071230967 OFFSET -1819246890; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE NOCASE FROM v0, rt0 WHERE ((+ (ROUND('', x'')))); -- 0ms;
SELECT ALL ((vt0.c1) NOTNULL) FROM v0 WHERE (x'') ORDER BY (NOT ((v0.c0 IN (rt0.c3, vt0.c0)))) ASC  NULLS FIRST;SELECT vt1.c0 FROM vt0 NOT INDEXED, vt1, rt0, v0; -- 1ms;
SELECT DISTINCT CASE WHEN MIN(NULL, rt0.c3) THEN ((vt0.c1)OR(NULL)) ELSE ((vt0.c0)>=(vt0.c1)) END FROM vt1, vt0;SELECT ALL ((((rt0.c2)IS NOT('-2062083657')))>=(((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c1)))AND(x'f925fa4e')))AND(rt0.c2)))) FROM rt0, v0 WHERE ((((((NULL) NOT BETWEEN (x'') AND (0.19231363477802343))))<=(((('715569488')&(NULL))))));SELECT ((((vt1.c0) IS TRUE))=(vt1.c0)) FROM v0, vt1, rt0, vt0 WHERE ((((((-1.289213891E9)) NOT BETWEEN ((x'')) AND ((0.8390124560271164))))&(NULL))); -- 0ms;
SELECT DISTINCT ((~ ('')) IN ()), x'', ((((CASE WHEN vt0.c1 THEN rt0.c1 END)AND((vt1.c0 IN ()))))OR(((v0.c0) BETWEEN (vt0.c1) AND (rt0.c1)))) FROM vt0, vt1, rt0, v0 WHERE (((((((x'')<(0xffffffffde9d7ca5)))OR(CAST(0.4087281957724834 AS BLOB))))OR(((NULL) IS TRUE)))); -- 0ms;
SELECT ALL CASE (rt0.c2 IN ())  WHEN 0xffffffff863433cb THEN rt0.c2 WHEN ((vt0.c1) IS TRUE) THEN ((rt0.c0)OR(rt0.c2)) WHEN ((('', rt0.c2, vt1.c0))>=((rt0.c0, rt0.c3, rt0.c3))) THEN ((v0.c0)||(rt0.c2)) END FROM v0, rt0, vt1 WHERE (((((('4?', x'', 0x4c3cbc9f))<=(('?', 0xffffffff8750421b, 'P(')))) NOT BETWEEN (LIKELIHOOD(-1204316446, 0.8003488157232423)) AND (NULL COLLATE BINARY)));SELECT DISTINCT ((((((rt0.c1)OR(rt0.c2)))AND(vt0.c1)))AND(((vt1.c0)%(rt0.c1)))), ((CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 END) IS FALSE), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT((rt0.c1 IN ()))) FROM vt1, v0, vt0 WHERE (('-2043399221' IN ()));SELECT DISTINCT ((((vt1.c0) NOTNULL))>(rt0.c3)) FROM vt1, vt0, v0 LIMIT 2017572861;SELECT ((((rt0.c0) IS FALSE)) IS TRUE) FROM vt0, vt1, v0;SELECT CAST(((rt0.c0)IS NOT(0X5bd3219b)) AS INTEGER) FROM vt1, rt0 ORDER BY (('0.6534445743356061')AND(rt0.c3)), (~ (x'')) DESC  NULLS LAST, (~ ((- (v0.c0)))) DESC  NULLS LAST;SELECT vt0.c1, (vt0.c0 IN (vt0.c1, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END)), vt0.c1 FROM vt1, vt0 WHERE ('424268585');SELECT DISTINCT (IFNULL(rt0.c2, rt0.c0) IN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END)) FROM v0 WHERE (CASE SUBSTR(x'', '312029389')  WHEN (+ (312029389)) THEN ((NULL)>>(x'5c41')) WHEN (~ (NULL)) THEN ((-1.289213891E9) IS TRUE) WHEN SQLITE_COMPILEOPTION_GET(x'') THEN CAST('-1384532649' AS NUMERIC) WHEN CASE WHEN '1058491287' THEN x'1792' WHEN 'w%' THEN NULL WHEN x'' THEN -1998655195 END THEN ((((((((0.137716457023924)AND(NULL)))AND('㳶')))AND(0.8366350114812477)))OR('gS|(')) WHEN ((NULL)&(NULL)) THEN 0x70052fd1 END);SELECT ALL CUME_DIST() OVER () FROM vt1, rt0 WHERE (((((-193625082)/(0.10663365081115761)))%(((0x69fc24dd)*(0.8366350114812477))))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) NOT NULL), CASE UNLIKELY(vt1.c0)  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt0.c0) ISNULL) ELSE COUNT(vt0.c1) END, PERCENT_RANK() OVER () FROM vt0, v0, rt0, vt1; -- 76ms;
SELECT DISTINCT rt0.c0 COLLATE BINARY FROM vt1, vt0, v0;SELECT ALL (vt0.c0 IN ()) FROM rt0 FULL OUTER JOIN v0 ON (((vt1.c0)AND(rt0.c1)) IN ()) INNER JOIN vt0 ON ((rt0.c2 COLLATE RTRIM)>>(vt0.c1)) RIGHT OUTER JOIN vt1 ON CAST((- (v0.c0)) AS INTEGER) WHERE (CAST((((0.7404696461501968))!=((''))) AS TEXT)); -- 3ms;
SELECT NTH_VALUE(load_extension(CASE WHEN rt0.c0 THEN rt0.c0 ELSE '-2093860908' END, ((rt0.c3) ISNULL)), '1778132189') OVER ( ORDER BY CASE WHEN '' THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END END ASC) FROM vt0, rt0;SELECT ((0.011044377709469644) NOT BETWEEN (0x1560079c) AND (rt0.c3 COLLATE NOCASE)) FROM vt0, v0 WHERE ((((((((((('') NOT NULL))OR(((1031749568) IS TRUE))))AND('^c')))AND(NULL COLLATE BINARY)))AND((('0.5776107945334598')*('-1879853849')))));SELECT DISTINCT TYPEOF(((vt0.c0) ISNULL)) FROM vt1, vt0, rt0 ORDER BY ((NULL) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END) AND ('2026801946')); -- 0ms;
SELECT DISTINCT SUM(rt0.c3) FROM rt0 WHERE ((((-1904174177) BETWEEN (0.8809496364037227) AND (0.4810984188148715)) IN ())); -- 0ms;
SELECT ALL ((((((rt0.c3)AND(rt0.c1)))OR(vt0.c0)))>(CAST(NULL AS BLOB))) FROM vt0, v0, vt1, rt0; -- 0ms;
SELECT DISTINCT (((vt0.c0))=((rt0.c1))) COLLATE NOCASE FROM vt1, vt0;SELECT ((CAST(rt0.c3 AS INTEGER))&(((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c3)))), GROUP_CONCAT(((rt0.c2) NOTNULL)) OVER (), ((rt0.c1)|(rt0.c1)) COLLATE BINARY FROM vt1, v0 WHERE (((((x'') NOT NULL)) IS TRUE));SELECT DISTINCT AVG(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) OVER () FROM v0;SELECT DISTINCT (((((v0.c0)) NOT BETWEEN ((x'10ad')) AND ((rt0.c2))))<(((rt0.c0)<>(rt0.c0)))) FROM rt0, vt1 WHERE (NULL);SELECT '0.7977654027493856' FROM v0 ORDER BY ((x'') NOT BETWEEN (CAST(NULL AS REAL)) AND (NULL)), ((((vt0.c0 IN (rt0.c2, vt0.c0))))<=(((- (rt0.c2)))));SELECT ALL (~ (CASE WHEN rt0.c3 THEN vt0.c1 END)), GROUP_CONCAT(vt1.c0) OVER (), COUNT(((vt0.c0)>(vt1.c0))), CUME_DIST() OVER ( ORDER BY (~ (((rt0.c1)%(vt1.c0)))) ASC  NULLS LAST, ((((vt0.c0) NOT NULL))GLOB(CAST(rt0.c0 AS BLOB))) ASC), ((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) BETWEEN (((rt0.c1)/(x''))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c3)))OR(rt0.c0)))) FROM rt0, vt1;SELECT ((((vt0.c1)AND(MAX('-1917525781'))))OR((- (vt0.c0)))) FROM vt1, rt0, vt0, v0 LIMIT 948332094 OFFSET 1341582355; -- 50ms;
SELECT ALL (((vt0.c1)=(rt0.c3)) IN ((v0.c0 IN (rt0.c3)))) FROM v0 WHERE ((((((209622815))>(('2A')))) BETWEEN (CASE WHEN NULL THEN x'' ELSE NULL END) AND ((('')|(x''))))) GROUP BY CAST((((rt0.c1, rt0.c3, rt0.c2, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, rt0.c1, x'', rt0.c2, rt0.c3)) AND ((rt0.c2, vt1.c0, rt0.c3, rt0.c3, vt0.c0))) AS INTEGER);SELECT ((((rt0.c2) ISNULL))/((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN (('2102695353', rt0.c3, vt0.c0)) AND ((vt0.c0, -1.998655195E9, vt0.c1))))) FROM v0, rt0, vt0, vt1 WHERE (((CAST(NULL AS TEXT)) ISNULL)); -- 1ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)<=(SUM(rt0.c2))), LIKELIHOOD((+ (v0.c0)), 0.5648744679077609), ')a' FROM vt0, rt0, v0 WHERE (((NOT (0.34298413205057965)) IN ())); -- 0ms;
SELECT ROW_NUMBER() OVER (), ((json_object(rt0.c1, rt0.c0)) IS TRUE), (CASE vt1.c0  WHEN 1259302934 THEN rt0.c1 ELSE vt1.c0 END IN ()) FROM vt0, v0, rt0, vt1 WHERE (((('')) BETWEEN ((((NULL) NOT BETWEEN (0.17641029050745927) AND ('')))) AND ((((('%꘳TS', -1.214302446E9, 0Xffffffff8187a34e)) BETWEEN (('', NULL, 0.6023719422005626)) AND ((-621358959, 0.4087281957724834, -0.0))))))) LIMIT 656243192; -- 0ms;
SELECT ALL (~ (vt0.c1 COLLATE RTRIM)) FROM vt1, v0, rt0, vt0; -- 0ms;
SELECT ((MAX('x''')) NOTNULL) FROM rt0, vt0, v0 NOT INDEXED WHERE (((CASE NULL  WHEN NULL THEN '-1238901978' END)<>((- (0.9291736959456965))))); -- 0ms;
SELECT (((rt0.c2)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((((((((vt0.c0)OR(rt0.c3)))OR(vt1.c0)))OR(v0.c0)))AND(rt0.c1))))) FROM vt0, vt1, rt0 WHERE ((((('J{')|(x''))) NOT BETWEEN ((((('4?')AND('1259302934')))AND(''))) AND ((((((((('-193625082')AND(0x15952b2d)))AND(x'')))OR(x'ef89')))AND(NULL)))));SELECT ALL ((LIKELIHOOD(vt1.c0, 0.616668782446416))<<(v0.c0 COLLATE BINARY)) FROM v0, vt0, rt0, vt1 WHERE (((CASE WHEN '0.7404696461501968' THEN 'xK#1' ELSE '' END)||(IFNULL(DISTINCT 607185876, '')))); -- 0ms;
SELECT DISTINCT (((vt0.c0) NOT BETWEEN ('9223372036854775807') AND (vt0.c1)) IN (((((vt1.c0)AND(v0.c0)))OR(vt0.c1)), CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)) FROM vt0, v0 WHERE (NULL) LIMIT 2026801946 OFFSET 326645511;SELECT ((((((((((((((vt0.c1)GLOB(vt0.c1)))AND(((vt0.c0)AND('-1214302446')))))OR(((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))))AND(((rt0.c0)|(0.7832528704278088)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))OR(vt1.c0)))AND((rt0.c3 IN (rt0.c1)))), (+ (NULL)), '%uu	bW5' FROM v0, vt0;SELECT TOTAL(rt0.c3) OVER () FROM rt0 LIMIT 2102695353 UNION SELECT ALL rt0.c3 FROM vt0 WHERE ((((-8.83409674E8) BETWEEN ('1879388113') AND (0x468c61ff)) IN (((((((((NULL)OR(-1425554734)))AND('1837166661')))AND(x'c553')))AND('1340891135'))))) ORDER BY ((((vt0.c1)AND(CASE vt0.c0  WHEN vt1.c0 THEN rt0.c2 END)))OR(((vt1.c0) IS TRUE))) ASC  NULLS FIRST;SELECT DISTINCT ((((((vt1.c0) IS FALSE))AND((((vt0.c0, x'', rt0.c3)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c1, v0.c0, vt0.c0))))))OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)))) FROM vt1, rt0 LIMIT -2092940282 OFFSET -2024783333;SELECT ALL MIN(((rt0.c0)&(rt0.c3))), ((vt0.c1)|(CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c2 END)), ((LOWER('')) IS TRUE) FROM vt0, rt0, vt1 WHERE ((((0.35049622824405646) BETWEEN (NULL) AND ('0.8809496364037227')) IN ())) LIMIT -1034185673; -- 0ms;
SELECT ALL AVG(CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN vt0.c1 WHEN NULL THEN vt1.c0 END) FROM vt0;SELECT DISTINCT (((NOT (''))) NOT NULL) FROM v0, vt1 WHERE ((((CAST(0.8529060420224199 AS NUMERIC), CAST(-560104283 AS REAL), (((0Xffffffffefc5fb0a))<=((0.642335553440152)))))!=((0.7850139789203734 COLLATE NOCASE, CASE WHEN -1.214302446E9 THEN 0.02690158042114421 WHEN NULL THEN -193662829 WHEN 'g' THEN NULL ELSE -8.83409674E8 END, CASE WHEN '1837166661' THEN NULL WHEN '-1564429919' THEN NULL WHEN 0.7585435924624924 THEN 0.9291736959456965 WHEN NULL THEN 0x33c8c786 WHEN x'' THEN x'10a16b93' ELSE '1058491287' END)))); -- 1ms;
SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND ('209622815')), ((0.6339867070770661 COLLATE RTRIM) NOTNULL), ((0.8132629462084474)LIKE('+(x)x첚<u' COLLATE RTRIM)) FROM vt1 NATURAL JOIN vt0;SELECT DISTINCT CASE CASE rt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE rt0.c0 END  WHEN CASE WHEN vt1.c0 THEN NULL ELSE rt0.c0 END THEN CASE WHEN NULL THEN v0.c0 ELSE rt0.c2 END ELSE LOWER(DISTINCT vt0.c1) END FROM vt1, vt0, v0 GROUP BY ((((((rt0.c0)AND(vt0.c0)))AND(vt1.c0)))IS(vt1.c0)) HAVING ((CAST('U3䮗zWqrI)' AS NUMERIC)) NOT BETWEEN (x'') AND (-1.879853849E9));SELECT CASE CASE '{S훍i'  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END  WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN ((rt0.c1)&(rt0.c3)) END, rt0.c3 COLLATE BINARY, MAX(vt0.c1) COLLATE RTRIM, rt0.c2, rt0.c1 COLLATE NOCASE FROM rt0, v0, vt0, vt1 WHERE (((CASE WHEN NULL THEN NULL ELSE x'1055' END)<=(2.102695353E9 COLLATE BINARY))); -- 0ms;
SELECT ALL CASE CASE vt0.c1  WHEN rt0.c3 THEN vt1.c0 ELSE vt0.c0 END  WHEN (~ (-1906970534)) THEN ((rt0.c3) ISNULL) END FROM vt1, v0, rt0 WHERE (((((((2085892202)AND(NULL)))AND('2102695353')))OR(((x'') NOTNULL))));SELECT CAST(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END AS BLOB) FROM vt0, rt0, vt1 WHERE (CAST((((x'2362', 0X6dcfabfc, 635058667, x'', ''))<((x'', x'', '-1425554734', x'', -121784056))) AS BLOB)); -- 0ms;
SELECT CAST(NULL AS REAL) FROM vt1, rt0, vt0 RIGHT OUTER JOIN v0 ON NULLIF(rt0.c2, v0.c0) COLLATE RTRIM; -- 0ms;
SELECT RTRIM(CAST('' AS INTEGER)), CAST(CAST(rt0.c0 AS BLOB) AS REAL), CAST(COUNT(*) AS INTEGER) FROM rt0, v0, vt1 WHERE ((((((NULL, '1946361012', NULL))>((-6.21358959E8, x'c2f6', 'IG8﬊k'))))/(x'fac3'))) ORDER BY ((((((((((vt0.c1) NOTNULL))OR(((((0.6649328169975313)AND(rt0.c3)))OR(rt0.c1)))))OR(((((rt0.c1)OR(v0.c0)))AND(rt0.c1)))))AND(((0.9755038845310849)<>(0.8948695327348548)))))OR(rt0.c1)) DESC;SELECT ALL ((((NULL)<<(vt1.c0)))/(((vt1.c0) IS FALSE))) FROM v0, vt0 WHERE (NULL) LIMIT 1658930573;SELECT DISTINCT (((((((rt0.c0)AND(rt0.c1)))AND(vt1.c0)), ((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c3)))AND(rt0.c3)))OR(vt0.c0)), rt0.c1))==((CAST(x'' AS TEXT), CAST(rt0.c2 AS NUMERIC), rt0.c1))) FROM vt1 ORDER BY (CAST(vt0.c0 AS BLOB) IN ()), (((v0.c0 IN ())) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c3)||(NULL)))) DESC;SELECT CAST(vt1.c0 COLLATE NOCASE AS INTEGER) FROM rt0, v0, vt0 WHERE (((((0Xffffffffe0b817ef) NOT NULL))AND(CAST(NULL AS REAL)))) GROUP BY CAST(((rt0.c2)GLOB(rt0.c1)) AS BLOB), TRIM(DISTINCT ((rt0.c2)==(rt0.c1)), (((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1)))), ((v0.c0 COLLATE BINARY) NOTNULL) HAVING CASE WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM;SELECT DISTINCT (((vt1.c0))>=((vt1.c0))) COLLATE RTRIM FROM rt0, vt0;SELECT ALL COUNT(((v0.c0) IS TRUE)), (((rt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((rt0.c1) NOT NULL)))), ABS('xoI䖍&'), ((rt0.c1 COLLATE BINARY)IS NOT(((-1.904174177E9) BETWEEN (vt0.c1) AND (rt0.c0)))), CASE rt0.c3 COLLATE BINARY  WHEN NULL THEN (((v0.c0))=((rt0.c3))) ELSE MIN(rt0.c1, vt0.c1, vt0.c1, v0.c0) END FROM vt0 NOT INDEXED, vt1, v0 WHERE (CASE WHEN UPPER(DISTINCT 0.6356110011029169) THEN ('㱓v3YFS&6' IN (NULL)) END);SELECT ALL json_type(((((vt0.c1)OR(rt0.c1)))OR(vt0.c1))), ((((x'')||(x'aecb2d0a')))&(0.833006887336789)), GROUP_CONCAT((v0.c0 IN ())) FROM rt0, vt1, vt0, v0 WHERE (IFNULL(((0.7532256243394982)AND(0.8870367801687982)), (~ ('''%')))) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM, TIME(((vt0.c1) NOTNULL), (rt0.c0 IN (x'')), (rt0.c0 IN ()))  NULLS FIRST; -- 52ms;
SELECT ALL INSTR(vt0.c1, v0.c0) COLLATE NOCASE, CAST(x'' AS NUMERIC), LEAD(((((((v0.c0)AND(v0.c0)))OR(((NULL)<<(NULL)))))AND(CAST(-1721439817 AS BLOB))), ((((v0.c0)IS(v0.c0)))&(((v0.c0)&('A#oj')))), (+ (CASE v0.c0  WHEN v0.c0 THEN 1.946361012E9 END))) OVER () FROM v0 WHERE (0.7329817299917265 COLLATE RTRIM) ORDER BY ((((rt0.c0) NOT BETWEEN ('}f>U''䣶j') AND (rt0.c2)))AND(vt1.c0 COLLATE BINARY)) ASC  NULLS FIRST, (((NOT (rt0.c2)))*((vt1.c0 IN ()))) DESC;SELECT DISTINCT CASE vt0.c1  WHEN vt1.c0 THEN rt0.c3 END COLLATE NOCASE FROM v0, vt0, rt0, vt1 WHERE (((0.9158639938754832 COLLATE RTRIM)/(((NULL)||(0xfffffffffe4d6e57))))); -- 0ms;
SELECT DISTINCT (- (v0.c0)) FROM rt0, v0 WHERE (((CAST(NULL AS INTEGER)) IS TRUE)); -- 0ms;
SELECT ((vt0.c1 IN (rt0.c0)) IN ()), IFNULL((v0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c3))), CAST(((((((((((((vt0.c1)OR(vt1.c0)))AND(1058491287)))OR('820125777')))AND(rt0.c3)))OR(rt0.c3)))OR(v0.c0)) AS NUMERIC), CAST(v0.c0 AS BLOB), ((LAST_INSERT_ROWID()) NOT BETWEEN ((+ (rt0.c2))) AND (TRIM(v0.c0))) FROM rt0, vt1, vt0;SELECT DISTINCT (- ((((vt1.c0))<=((x''))))) FROM rt0, v0 WHERE ((((~ (0.9360040634951572)))LIKE((((0.5167287538043339)) NOT BETWEEN (('0.9360040634951572')) AND ((0.09263083858829857))))));SELECT CASE WHEN rt0.c2 COLLATE NOCASE THEN '' WHEN ((vt1.c0) NOT BETWEEN ('1346402624') AND ('0.6534445743356061')) THEN (((rt0.c3))>((rt0.c3))) WHEN TYPEOF(rt0.c3) THEN (rt0.c1 IN ()) ELSE ((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) END FROM rt0 WHERE (((((NULL)<>(0.2109313023678543))) NOTNULL));SELECT TOTAL(CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) OVER (), ((rt0.c0 COLLATE BINARY) ISNULL), CAST(((((((((vt1.c0)AND(rt0.c0)))OR(v0.c0)))AND(rt0.c3)))OR(rt0.c0)) AS INTEGER) FROM v0 WHERE (((((('.C aO', NULL, x'bc97')) NOT BETWEEN (('', 0.02690158042114421, '-682973205')) AND ((NULL, 0.6888486418974992, NULL)))) NOT BETWEEN (0.642335553440152) AND (((0Xb8f2db6) BETWEEN ('-28479913') AND (0.6628486559491298)))));SELECT DISTINCT COUNT(IFNULL(DISTINCT vt1.c0, vt1.c0)) OVER (), '', CASE WHEN TOTAL(rt0.c0) THEN vt1.c0 COLLATE RTRIM ELSE ((rt0.c2)<<(rt0.c2)) END FROM vt1, vt0, rt0 WHERE ((- (((-1.917525781E9) NOT BETWEEN (0x7c54306a) AND (NULL))))); -- 1ms;
SELECT DISTINCT (((MIN(vt1.c0)))==((((vt0.c0)IS(rt0.c3))))) FROM vt0, rt0, vt1, v0 WHERE (((('-1577390999') NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT LEAD(((CAST(vt1.c0 AS REAL)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 END) AND (CAST(vt0.c1 AS TEXT))), x'', ((CAST(v0.c0 AS BLOB))|(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END))) OVER () FROM vt1, v0, vt0 ORDER BY (('-1557051978') NOT BETWEEN (((v0.c0)IS NOT(rt0.c2))) AND (vt0.c1)) LIMIT -608043879 OFFSET 9279755;SELECT (NOT (CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END)) FROM vt1, v0, vt0 GROUP BY (((vt0.c0) NOT NULL) IN ());SELECT DISTINCT MAX((NOT (vt0.c0))) FROM vt0, rt0 WHERE (((((x'')>('X^%')))/(('27| ' IN (x''))))) GROUP BY ((((rt0.c0) NOT NULL))LIKE((rt0.c1 IN ()))) HAVING x''; -- 0ms;
SELECT ALL FIRST_VALUE((~ (IFNULL(DISTINCT rt0.c2, rt0.c1)))) OVER (), ((((vt1.c0)<(rt0.c1))) NOT NULL), (((vt1.c0, rt0.c2, rt0.c3)) BETWEEN (('-56317352', ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)), ((vt0.c1) IS TRUE))) AND ((GLOB('-1009095391', x'cd0a'), CHANGES(), ((vt0.c0)>=(rt0.c2))))) FROM vt0, rt0 LIMIT -1439073733 OFFSET -661268282;SELECT ((CAST(rt0.c0 AS TEXT)) BETWEEN (((vt0.c1)IS NOT(rt0.c0))) AND (((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))), ((vt1.c0) NOT BETWEEN (((vt0.c1) NOT BETWEEN ('2011707661') AND (vt0.c1))) AND (((rt0.c0) NOTNULL))), ((UPPER('x?(''?3H')) ISNULL) FROM rt0, vt0;SELECT DISTINCT vt0.c0, ((((vt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)))>>(((rt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))), 0.9360040634951572 FROM vt0, rt0, v0 LIMIT 598349782;SELECT DISTINCT CASE ((rt0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN rt0.c1 COLLATE BINARY THEN 0.40980225206399956 WHEN vt1.c0 THEN CASE v0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN x'fdf0' END WHEN ((((rt0.c3)AND(vt1.c0)))OR(vt0.c1)) THEN (rt0.c2 IN (rt0.c2)) END, ((((vt0.c0)AND(rt0.c2 COLLATE RTRIM)))AND((rt0.c2 IN (vt0.c0)))), ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c2)))OR('-1557051978')))AND(rt0.c0))) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))) FROM rt0, vt0;SELECT (~ (CAST(vt1.c0 AS NUMERIC))) FROM vt1, v0, vt0 WHERE ((- (((x'')<=(0.830940524883468))))); -- 0ms;
SELECT NTH_VALUE(((CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END) NOT NULL), v0.c0 COLLATE BINARY) OVER ( ORDER BY (- (CAST(rt0.c2 AS REAL))) ROWS BETWEEN vt0.c1 PRECEDING AND ((((rt0.c1)/(rt0.c1)))%(((((vt1.c0)AND(rt0.c0)))AND(rt0.c0)))) PRECEDING), (((((((((((((+ (rt0.c1)))OR(GROUP_CONCAT(vt0.c1))))OR(CAST(vt0.c1 AS BLOB))))AND((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.44955944616763477))))))OR((((vt0.c1, vt0.c0, vt0.c0, rt0.c3, rt0.c3)) BETWEEN ((vt1.c0, v0.c0, vt0.c1, vt0.c0, v0.c0)) AND ((vt0.c1, rt0.c3, vt0.c0, vt0.c1, rt0.c0))))))AND(((rt0.c1) NOT NULL))))AND((rt0.c0 IN (vt1.c0)))), (+ (rt0.c1 COLLATE BINARY)) FROM v0 WHERE ((((((((((((('-524806161' COLLATE RTRIM)AND(CASE WHEN 0.6888486418974992 THEN 0.4810984188148715 WHEN x'' THEN x'1f2a' WHEN 0.9061148433223265 THEN x'4b2f' END)))AND(CASE WHEN 956234667 THEN x'' WHEN 0.19412841517996604 THEN x'' WHEN x'f18d' THEN 0.22596284738092964 WHEN 0.6460006658636227 THEN '8㱓' WHEN x'' THEN '892345140' END)))OR((((x'', 0.27954048657476893, '_n', x'', NULL)) NOT BETWEEN (('1513190919', NULL, 0.7357620958799541, 712558213, 0.9553356033113972)) AND ((x'e60e', NULL, '0.137716457023924', x'', 0xffffffffaffcc944))))))OR(CASE NULL  WHEN '' THEN 0.5057078181908912 END)))AND(((NULL)<<('')))))AND(CASE WHEN '' THEN x'' WHEN -1238901978 THEN x'' WHEN 0.0 THEN 1837166661 ELSE x'eb53' END))) ORDER BY (+ ('1612251215'));SELECT DISTINCT ((CAST(rt0.c0 AS INTEGER)) IS TRUE), '-555560376', CASE WHEN (~ (rt0.c3)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) END FROM vt1, vt0, v0 WHERE (((((('鮟OC_^!O\r' IN ()))OR((('-555560376')|(x'')))))AND((((('4?')OR(0.751356134711753)))AND('-1129724817')))));SELECT DISTINCT (((rt0.c3)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END)) AND ((CAST(NULL AS NUMERIC)))) FROM rt0, v0, vt1 LIMIT 2066638204 EXCEPT SELECT DENSE_RANK() OVER () FROM rt0, v0, vt0 WHERE (CASE ((x'') BETWEEN (x'') AND (NULL))  WHEN (+ (x'')) THEN GLOB('-1098452431', 0.0544584929026497) WHEN ((0.6374054606547516)<(x'')) THEN DATE(x'8e66', '-1730178371', x'') WHEN (('-395669090')!=(NULL)) THEN x'b26e381c' COLLATE BINARY END) LIMIT -1798748616 OFFSET -674412298;SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))) NOT BETWEEN (vt1.c0) AND (vt1.c0 COLLATE BINARY)), MAX(MIN(((rt0.c1)>=('i}')))), NULLIF(DISTINCT (('935058434')>>(rt0.c0)), CAST(vt0.c0 AS INTEGER)) FROM vt0, rt0, v0 WHERE ((((((x'' IN ()))OR(('0.40980225206399956' IN ()))))AND(CAST(2.085892202E9 AS NUMERIC)))) LIMIT -403307510;SELECT DISTINCT COUNT(*) OVER () FROM rt0, vt0, v0 WHERE (((((CASE NULL  WHEN 0.882651415402786 THEN NULL ELSE NULL END)AND((NULL IN ()))))OR(((('-922048272')) BETWEEN (('-1557051978')) AND ((x'e161')))))); -- 3ms;
SELECT ALL ((HEX(DISTINCT rt0.c3))<=('1-]|)c+ ')), (((rt0.c3)) NOT BETWEEN ((v0.c0)) AND ((((((((((0.7491072646322715)AND(vt0.c1)))OR(vt1.c0)))AND(rt0.c2)))OR(NULL))))), CASE CAST(rt0.c0 AS REAL)  WHEN (NOT (rt0.c1)) THEN (+ (rt0.c0)) ELSE CASE WHEN v0.c0 THEN rt0.c1 END END FROM rt0, vt1, vt0, v0 WHERE (((((0.45938975912570046)<>(x''))) NOT BETWEEN ((('788647066')GLOB(x''))) AND ((((('1778132189')OR('2089398671')))AND(NULL))))); -- 0ms;
SELECT ALL x'', (rt0.c1 IN (rt0.c1, rt0.c3)) COLLATE BINARY, (((((vt0.c1)AND(v0.c0)), ((vt1.c0)IS(rt0.c3)), ((rt0.c3)&(rt0.c3))))<((((((vt0.c0)AND(v0.c0)))OR(rt0.c2)), COUNT(*), x'3876'))) FROM v0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN (((rt0.c1))<((vt0.c0))) THEN ((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c2)) WHEN (rt0.c3 IN ()) THEN vt0.c0 COLLATE NOCASE END RIGHT OUTER JOIN rt0 ON ((((rt0.c2)OR(rt0.c2))) BETWEEN (((v0.c0) IS FALSE)) AND (((7.12558213E8)!=(vt0.c1)))) WHERE (((((((470047320)OR(NULL)))AND('362250837')))+(SUBSTR(x'0f15', 0.006139557174713484))));SELECT ALL LEAD(((COALESCE(DISTINCT vt0.c0, vt1.c0, vt1.c0, vt1.c0))<=(CAST(vt1.c0 AS REAL))), (+ (LIKE(vt0.c0, vt0.c1))), CASE WHEN ((vt1.c0)>>(v0.c0)) THEN vt1.c0 COLLATE NOCASE END) OVER () FROM vt0, v0, vt1; -- 109ms;
SELECT DISTINCT CASE WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((vt1.c0)AND(v0.c0)))AND(vt1.c0)) ELSE ((x'9c34')=(rt0.c0)) END FROM rt0, vt0;SELECT ALL rt0.c1 FROM vt0, v0, vt1, rt0 ORDER BY ((((vt0.c0)OR(SQLITE_SOURCE_ID())))AND(CASE WHEN rt0.c2 THEN vt1.c0 END))  NULLS FIRST, ((((rt0.c0) IS TRUE))/(((('G~Sw#'))<=(('362097453'))))) DESC  NULLS LAST LIMIT 435704856 OFFSET -601235231; -- 97ms;
SELECT DISTINCT ((rt0.c2 COLLATE NOCASE)||(TOTAL(rt0.c0))), ((ABS(rt0.c2))<(CAST(rt0.c0 AS REAL))), ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (('889953573' IN ())) AND (rt0.c1 COLLATE RTRIM)) FROM v0, vt1, vt0, rt0 WHERE (0.16657501393665086); -- 69ms;
SELECT ((CAST(rt0.c2 AS BLOB))==(((((rt0.c3)AND(rt0.c2)))AND(vt0.c1)))) FROM vt0, v0, rt0, vt1; -- 0ms;
SELECT CASE WHEN rt0.c1 THEN (((vt1.c0))<=((v0.c0))) END, x'', ((GROUP_CONCAT(rt0.c0))<<((+ (rt0.c0)))) FROM v0, vt0, rt0, vt1 WHERE ((((+ (NULL)))AND(ABS('<{980 1613022321106875592 1940 1020:-2438376121688368923-1379 426T304T䖶_\r괳j!')))) LIMIT 1375946672 OFFSET -402988590; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN (rt0.c2)))>>(((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))), ABS(rt0.c1) COLLATE BINARY, ((CASE WHEN -1.730178371E9 THEN rt0.c0 END) IS TRUE) FROM v0, vt1, rt0;SELECT ALL AVG((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3)))) OVER () FROM vt0, v0, vt1 WHERE (CAST(((0.40090263470940246)<('768603847')) AS REAL));SELECT DISTINCT ((CASE WHEN vt1.c0 THEN 0.34432921519207227 WHEN vt0.c1 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END)=(CASE WHEN v0.c0 THEN vt0.c0 WHEN 0.28719274978692244 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 END)) FROM rt0, v0, vt1 WHERE ((((CASE WHEN -1734526970 THEN NULL WHEN x'9437' THEN '' WHEN 0.07856415359850422 THEN x'' END))<((CAST('-682973205' AS NUMERIC)))));SELECT DISTINCT ((((vt0.c1) NOT NULL)) BETWEEN ((v0.c0 IN ())) AND (CAST(rt0.c3 AS REAL))) FROM v0;SELECT DISTINCT (((rt0.c2)>(v0.c0)) IN (rt0.c0)) FROM v0, vt1;SELECT DISTINCT ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c1)) COLLATE RTRIM FROM v0, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((((vt1.c0)AND(rt0.c3)))AND(vt1.c0)))AND(rt0.c2 COLLATE BINARY)))OR(ROUND(rt0.c1, v0.c0))) FROM vt0, v0, rt0, vt1 WHERE ((CAST('P''0FRG2r' AS INTEGER) IN ())); -- 0ms;
SELECT DISTINCT ((x'1ae8' COLLATE RTRIM) ISNULL), (((((rt0.c3)>=(vt1.c0)), (((vt0.c1))!=((v0.c0))), ((rt0.c3) BETWEEN (rt0.c1) AND (vt1.c0))))=((x'', UNLIKELY(rt0.c0), (((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))))), ((((vt0.c0) NOTNULL)) ISNULL) FROM vt0, v0 GROUP BY rt0.c2 HAVING UPPER(((rt0.c3)LIKE('')));SELECT (~ (SUM(rt0.c2))), CAST(UPPER(rt0.c0) AS INTEGER), ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 ELSE vt0.c0 END)IS(x'')) FROM rt0, vt1, vt0, v0 GROUP BY ((vt0.c0)||(((rt0.c0)!=(v0.c0)))); -- 132ms;
SELECT ((vt0.c1 COLLATE BINARY)-(COUNT(rt0.c0))) FROM vt0 NOT INDEXED;SELECT (((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, (~ (vt1.c0)), MIN(rt0.c1))) AND ((TRIM(DISTINCT rt0.c1), (((v0.c0))<=((v0.c0))), COUNT('928328473')))), (((rt0.c1, rt0.c0, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((1270004497, ((vt0.c0)*(vt0.c0)), rt0.c2, rt0.c3 COLLATE RTRIM, ((((v0.c0)AND(rt0.c3)))OR(NULL)))) AND (((rt0.c3 IN ()), ((((((((vt1.c0)OR(rt0.c1)))AND(0x15952b2d)))OR(vt0.c1)))AND(rt0.c0)), CAST(1.879388113E9 AS BLOB), ((v0.c0) NOT NULL), ((rt0.c2)<(vt0.c1))))), LAST_VALUE(((0.8708047945491223) NOTNULL)) OVER () FROM vt0, v0, vt1;SELECT ALL STRFTIME(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)), ((rt0.c0) NOTNULL), ((x'f146')<=('')), (- (vt1.c0)), vt1.c0), 1170181593 COLLATE NOCASE, MAX(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 END) FROM vt0, vt1 WHERE (((((((((0.8742143418532625 COLLATE NOCASE)OR(json_extract(NULL, 0.3721250156917081))))OR((~ (1275928369)))))AND((('8f	9')|(-1279687143)))))AND((('.#') BETWEEN ('9<-䣶\2gG\n') AND (x'1bef')))));SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE BINARY FROM vt1, vt0, rt0 WHERE (CASE WHEN ((('TC'))>((0xffffffffc2e47641))) THEN TYPEOF(x'') WHEN ('-1527062522' IN ()) THEN 0.15024385620215785 WHEN x'0a75' COLLATE BINARY THEN CAST(0.22358596131861153 AS TEXT) ELSE x'7855' END) GROUP BY vt0.c1; -- 1ms;
SELECT ALL ((COUNT(v0.c0)) ISNULL) FROM vt0, vt1 WHERE (((((COALESCE(DISTINCT 0.13190421330228352, x'13d0'))OR(LIKELIHOOD(x'd9f1', 0.9018375651081911))))AND('8䥍'))) LIMIT -706856324 OFFSET 656243192;SELECT ALL ((((rt0.c3)<(rt0.c0))) BETWEEN ((((('')OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c2))<((rt0.c3))))) FROM vt1, rt0; -- 0ms;
SELECT ALL COUNT(*), (- (NULL)), AVG(CAST(rt0.c0 AS INTEGER)) FROM vt1, rt0, v0, vt0 WHERE ((1548478277 COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT COUNT((((vt0.c0, rt0.c1, rt0.c0))!=((rt0.c3, rt0.c2, rt0.c3)))) FILTER(WHERE -5.6317352E7 COLLATE NOCASE) OVER ( GROUPS BETWEEN CAST(((rt0.c2) NOT NULL) AS REAL) PRECEDING AND (((vt1.c0 IN ())) NOT NULL) PRECEDING EXCLUDE GROUP) FROM v0 WHERE ((((NOT (x''))) BETWEEN (((((8.20125777E8)OR('YM')))OR('1534302722'))) AND (CAST('868796294' AS INTEGER))));SELECT ALL (((((rt0.c0 IN ()))OR(v0.c0 COLLATE RTRIM)))AND(CASE rt0.c3  WHEN vt1.c0 THEN v0.c0 ELSE rt0.c2 END)), COUNT('268856759') OVER (), vt0.c0 FROM v0, vt0, rt0;SELECT ALL vt0.c1 FROM v0 WHERE ((((((0.9939035865904028)IS NOT(x'')), CASE '5Zyo'  WHEN x'20d255ac' THEN '0.5167287538043339' ELSE 0.9802202175559805 END, ((-2.024783333E9)||('{'))))<=((0.6896811495720299, (+ (282889490)), (0x4f371149 IN ())))));SELECT ((((v0.c0) BETWEEN (vt0.c1) AND (rt0.c2)))<>(((rt0.c3)GLOB(rt0.c3)))), rt0.c3 COLLATE RTRIM, (+ ((- (vt0.c1)))) FROM vt1, vt0, v0 WHERE (NULL) GROUP BY ((~ (rt0.c3)) IN (x'')) HAVING vt1.c0;SELECT DISTINCT ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND((- (vt1.c0)))))OR(COUNT(rt0.c2))) FROM vt0, v0, rt0, vt1; -- 66ms;
SELECT PERCENT_RANK() OVER () FROM vt0, rt0 LIMIT -883409674 OFFSET 484082971; -- 0ms;
SELECT ALL CASE (((rt0.c3, vt0.c1, v0.c0)) BETWEEN ((vt1.c0, rt0.c2, rt0.c0)) AND ((v0.c0, NULL, '>1')))  WHEN v0.c0 THEN ((rt0.c2) IS TRUE) ELSE rt0.c3 COLLATE RTRIM END, load_extension((((rt0.c3))<((vt0.c0)))), NULL, ((COUNT(rt0.c3))*((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))), ((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))) ISNULL) FROM v0;SELECT DISTINCT -788647985, SUM(((rt0.c0)!=(rt0.c0))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), CAST(((rt0.c3)<(vt1.c0)) AS TEXT) FROM rt0, v0, vt1 WHERE ((((('1840947817')/(0X74339b6f)))-((~ (NULL))))) ORDER BY (~ (CAST(rt0.c1 AS TEXT))) DESC, (+ ((~ (rt0.c1)))) DESC; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0 COLLATE RTRIM)), ((CASE WHEN rt0.c0 THEN vt0.c0 END)&(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)))), vt0.c1 FROM rt0, vt1, v0, vt0 WHERE ((((CAST('-1879853849' AS TEXT)))<=(((((('0.833006887336789')AND(x'')))OR(x'')))))); -- 0ms;
SELECT ((((AVG(rt0.c1))OR((((vt0.c1))>=((rt0.c1))))))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))), (((vt1.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0))) AND ((NOT (vt0.c1)))), ((((((vt1.c0) IS TRUE))OR(rt0.c1)))AND(vt1.c0 COLLATE BINARY)) FROM rt0, vt1, v0 WHERE (((((0.1580293080818168 COLLATE RTRIM)OR(LIKELIHOOD(DISTINCT 'qL}/', 0.8481842595646288))))OR(x'')));SELECT ALL HEX((vt1.c0 IN ())), CASE MAX(vt1.c0)  WHEN ((vt0.c1)!=(rt0.c0)) THEN (((vt0.c1))<((rt0.c2))) ELSE CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 END END, ((vt0.c1 COLLATE NOCASE)<(CAST(rt0.c0 AS TEXT))) FROM vt1, v0, vt0, rt0 ORDER BY CAST(((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)) AS REAL) ASC, ((((v0.c0)<>(rt0.c3))) IS FALSE) DESC  NULLS LAST, x''; -- 127ms;
SELECT (((vt0.c1)) NOT BETWEEN ((x'')) AND ((((rt0.c3) ISNULL)))) FROM rt0, v0, vt0, vt1 WHERE ((~ ((('656243192') NOT NULL)))); -- 0ms;
SELECT DISTINCT CAST(UPPER(DISTINCT vt1.c0) AS BLOB), ((((((rt0.c1)AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((NULL) BETWEEN (rt0.c3) AND (vt1.c0)))), ((rt0.c0 IN (x'')) IN (AVG(rt0.c0))) FROM vt0, rt0, vt1 ORDER BY (((((((vt0.c0))>=((rt0.c1))))AND(((vt0.c1) BETWEEN ('-1425554734') AND (v0.c0)))))OR(CASE WHEN '' THEN rt0.c1 END)) ASC  NULLS FIRST;SELECT DISTINCT ((vt1.c0 COLLATE RTRIM) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (((((((((vt0.c1)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))AND(v0.c0)))) FROM v0, vt1, rt0, vt0; -- 0ms;
SELECT ALL rt0.c0 FROM vt0, rt0, v0, vt1; -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM vt0 WHERE ((NOT ('K' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS INTEGER))>(rt0.c0 COLLATE BINARY)) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT (((((vt0.c0))>=((rt0.c1))))+(((v0.c0)<<(rt0.c0)))), TOTAL(((((rt0.c3)AND(vt0.c1)))OR(''))) OVER (), ((0xffffffff851719b7)=(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))) FROM rt0, vt0;SELECT DISTINCT x'af7d' FROM v0, vt0, vt1, rt0 WHERE (LOWER(((((((((((((0.9196506898143422)OR(0.6339867070770661)))AND(x'9e17')))AND(NULL)))OR(x'')))AND('-1034185673')))OR(0.09013831750887369)))); -- 0ms;
SELECT ((rt0.c2 COLLATE RTRIM)+((vt0.c1 IN ()))) FROM v0, vt0 ORDER BY rt0.c2  NULLS FIRST;SELECT UPPER(DISTINCT '') FROM rt0, vt1, v0, vt0 GROUP BY (~ (vt0.c0 COLLATE RTRIM)), CASE WHEN TYPEOF(DISTINCT rt0.c1) THEN ((v0.c0) BETWEEN (rt0.c0) AND ('972486292')) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END, CASE WHEN (rt0.c1 IN (rt0.c3)) THEN CASE WHEN rt0.c0 THEN rt0.c1 END ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END HAVING ((~ (rt0.c1)) IN (((rt0.c0)<=(vt1.c0)))); -- 182ms;
SELECT DISTINCT NTILE((~ (LIKELIHOOD(vt0.c0, 0.06308747885781407)))) OVER () FROM vt0, vt1 WHERE (((((0.9689509831862491) NOT BETWEEN (1830716296) AND (0.5578729983470084))) NOT BETWEEN ((+ ('R'))) AND (((NULL) NOT BETWEEN (0Xffffffff90042744) AND ('')))));SELECT CASE ((((((((vt0.c1)OR(v0.c0)))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c2))  WHEN GROUP_CONCAT(NULL) THEN (((vt1.c0, rt0.c2, rt0.c2))>=((rt0.c3, vt0.c0, rt0.c1))) ELSE vt1.c0 END FROM vt0, vt1 NOT INDEXED CROSS JOIN rt0 ON ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) BETWEEN (0xffffffffbec1fdd3) AND (((v0.c0) BETWEEN (rt0.c0) AND (NULL)))) INNER JOIN v0 ON vt0.c1 WHERE ((NOT (NULLIF('0.8132629462084474', 0.10836766105811735)))) GROUP BY json_extract((rt0.c3 IN ()), rt0.c2 COLLATE BINARY, CASE WHEN rt0.c3 THEN vt0.c1 WHEN '-1553152845' THEN rt0.c2 WHEN x'42b7' THEN rt0.c2 END, CAST(rt0.c3 AS BLOB)), ((((rt0.c3)IS NOT(rt0.c3)))+(((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))), LIKE(((rt0.c1)IS(rt0.c3)), CAST(rt0.c2 AS TEXT), '-'); -- 0ms;
SELECT DISTINCT ((((((vt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))OR(((rt0.c0)>>(rt0.c1)))))AND((~ (rt0.c3)))), (((CAST(rt0.c2 AS REAL)))>((((((((((vt1.c0)AND(vt0.c1)))AND(v0.c0)))AND(rt0.c1)))OR(rt0.c2))))), CAST((rt0.c1 IN ()) AS INTEGER) FROM vt0, v0 WHERE (((((((-1.730178371E9)AND(NULL)))AND(0.5986521990894351))) NOTNULL));SELECT DISTINCT COUNT(*) OVER ( ORDER BY NULL  NULLS FIRST) FROM vt1, rt0, v0 ORDER BY CAST(((rt0.c1)>=(v0.c0)) AS INTEGER) ASC, CASE CAST(NULL AS INTEGER)  WHEN CAST(vt0.c0 AS REAL) THEN TRIM(DISTINCT vt0.c1, rt0.c1) WHEN SQLITE_VERSION() THEN CASE NULL  WHEN v0.c0 THEN vt0.c1 END WHEN LIKELY(DISTINCT rt0.c1) THEN ((((vt0.c1)AND(rt0.c1)))AND('x''')) ELSE '>],&#.' END;SELECT NULL FROM vt0, rt0, v0 WHERE (((((((x'')+(x'')))OR(((x'') NOTNULL))))AND('yb៯' COLLATE NOCASE))) ORDER BY ((((((rt0.c2)<>(rt0.c1)))OR(((('-193662829')) NOT BETWEEN ((v0.c0)) AND ((0.7532256243394982))))))OR((v0.c0 IN ()))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)||(vt0.c1)))AND((~ (v0.c0)))))AND(((0.27954048657476893)IS(0x145d7aac)))), (NOT (COUNT(rt0.c3))), json_type(CAST(rt0.c2 AS NUMERIC)) FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ()) FULL OUTER JOIN vt0 ON (rt0.c3 COLLATE BINARY IN (CAST(vt0.c1 AS INTEGER), CASE WHEN rt0.c1 THEN v0.c0 WHEN 0.48943016954433083 THEN vt1.c0 WHEN NULL THEN v0.c0 ELSE vt0.c0 END)) WHERE ((((((0.7911072950181877, x'', NULL))>=((171493871, '1513190919', '1879388113'))))>((((x'29b8'))>=((NULL))))));SELECT DISTINCT ((((vt0.c0)<(v0.c0)))<(CAST(rt0.c3 AS INTEGER))), (((vt0.c1, vt0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), ((((rt0.c2)OR('1513190919')))OR(v0.c0)), ((vt0.c0)LIKE(rt0.c2)))) AND ((((vt1.c0) IS FALSE), CAST(vt0.c0 AS TEXT), (('0.9360040634951572')<<('-661268282'))))), (((vt0.c0)IS(rt0.c2)) IN (STRFTIME(rt0.c3, 312029389, rt0.c2, rt0.c0, v0.c0))) FROM vt1, rt0;SELECT json_type(rt0.c0) FROM vt0;SELECT DISTINCT (+ ((rt0.c2 IN ()))) FROM vt0, v0, rt0, vt1 WHERE (((((x'bc6a') NOTNULL))&(CAST('-1204316446' AS REAL)))); -- 0ms;
SELECT ALL ((NULL) ISNULL) FROM vt1, vt0, rt0, v0; -- 0ms;
SELECT ALL FIRST_VALUE((rt0.c3 IN ()) COLLATE BINARY) OVER () FROM rt0 WHERE ((((+ (0.24020028855620823)))/(((x'') ISNULL)))); -- 0ms;
SELECT rt0.c1 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE FROM vt0, vt1 WHERE ((NOT (CAST(NULL AS REAL)))) LIMIT -920025720;SELECT ALL (~ (CAST(rt0.c0 AS INTEGER))) FROM vt0, rt0, v0; -- 0ms;
SELECT DISTINCT ((NULLIF(vt0.c1, rt0.c1))-(((((rt0.c3)OR(vt1.c0)))OR(rt0.c1)))) FROM vt1 ORDER BY ((((rt0.c2)*(rt0.c3)))=(CAST(v0.c0 AS BLOB))), CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE WHEN rt0.c2 THEN vt0.c1 END WHEN ((rt0.c3)OR(vt0.c0)) THEN vt0.c0 WHEN CAST(rt0.c3 AS TEXT) THEN ((vt0.c1) NOTNULL) WHEN (vt0.c1 IN ()) THEN ((vt1.c0)>(rt0.c2)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST('0.137716457023924' AS BLOB) END  NULLS FIRST, ((((x'b7d40f70') NOT NULL)) NOT BETWEEN (LIKELY(1778132189)) AND (v0.c0 COLLATE RTRIM)) DESC  NULLS LAST;SELECT DISTINCT (~ (CASE WHEN vt1.c0 THEN vt0.c0 END)), NULL, CHAR(((rt0.c0) NOT NULL), ((x'')<(vt1.c0)), rt0.c2) FROM vt0, v0, vt1 WHERE (((((0X78ce8b1a)OR(((NULL)+(x'f92b')))))AND(CASE WHEN 0.6356110011029169 THEN x'' END)));SELECT DISTINCT ((((vt0.c0)OR(vt0.c1)))AND(rt0.c3)) COLLATE BINARY FROM vt1, vt0, rt0 WHERE (((('181073315' IN ())) NOT BETWEEN (x'') AND (((x'ef36') IS FALSE)))); -- 0ms;
SELECT DISTINCT (- (((vt0.c0) NOT NULL))) FROM rt0, v0;SELECT DISTINCT (rt0.c1 IN ()) COLLATE RTRIM FROM vt1, vt0, rt0; -- 0ms;
SELECT ALL CAST(((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c3)) AS BLOB) FROM rt0, vt0, vt1 WHERE (CAST((+ (NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((rt0.c3 IN (rt0.c1))))>=(((('(%	') IS FALSE)))) FROM vt0, vt1, v0, rt0 WHERE (((((NULL) BETWEEN (x'') AND ('yV#u2^z'))) BETWEEN (CAST('-1917525781' AS INTEGER)) AND (((-1917530366)AND(x''))))); -- 0ms;
SELECT ALL CAST(vt0.c0 AS INTEGER) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((QUOTE(vt0.c1)) NOT NULL) FROM vt1, v0 WHERE (0.4597564124316964 COLLATE RTRIM);SELECT DISTINCT rt0.c0, AVG(((((((((0.6228260425362553)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c2))) OVER ( RANGE  UNBOUNDED PRECEDING), v0.c0 FROM rt0, vt1, vt0, v0 WHERE (((((((0X23e1c983)AND(NULL)))OR('ea'))) IS TRUE)); -- 0ms;
SELECT ROW_NUMBER() OVER (), ((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c3))) NOT BETWEEN ('') AND (MIN(rt0.c2))), vt0.c0, (((0.40090263470940246)) BETWEEN (((+ (rt0.c0)))) AND ((NULL))), CAST(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC) FROM rt0;SELECT DISTINCT CAST(((rt0.c2) NOT NULL) AS BLOB), (~ ('-403307510')), ((v0.c0 COLLATE BINARY)AND(((((rt0.c2)AND(0.7036867193474157)))OR(rt0.c0)))) FROM vt1, vt0 GROUP BY ((vt1.c0)<<(rt0.c0)) COLLATE NOCASE, ((((0X2a3eb9cf)|(vt0.c1))) IS TRUE), CAST(rt0.c0 AS NUMERIC);SELECT DISTINCT (((vt1.c0)/(vt0.c0)) IN ()), (((rt0.c1)) NOT BETWEEN (((vt1.c0 IN (vt0.c1)))) AND ((((((((((vt0.c0)OR(rt0.c2)))OR(vt1.c0)))OR(vt0.c0)))OR(v0.c0))))), (((vt1.c0))<((((x'7210')%(v0.c0))))) FROM vt1 LIMIT 1946361012;SELECT DISTINCT CAST(vt0.c1 COLLATE BINARY AS TEXT) FROM v0, vt0, vt1, rt0 WHERE ((((((((('931970254')OR((x'' IN (0.9773617141071111)))))AND((('t') BETWEEN (NULL) AND (x'')))))AND(CASE 0.25895205160203383  WHEN '}%' THEN 0.7357620958799541 WHEN '-621358959' THEN x'' WHEN NULL THEN x'9149' ELSE '788647066' END)))AND((~ ('1642332366'))))) ORDER BY ((vt0.c0)OR((vt0.c0 IN (rt0.c3)))) ASC  NULLS FIRST, ((((((((((rt0.c1)>=(rt0.c2)))OR(((rt0.c0) BETWEEN (vt0.c1) AND ('-1289213891')))))AND((NOT (vt0.c0)))))OR(NULL)))AND(CAST(rt0.c1 AS REAL)))  NULLS LAST, CAST(((((((((((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c3)))AND(rt0.c2)) AS NUMERIC)  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (v0.c0)) FROM vt1, v0 WHERE (((((((0xfffffffffca4aa58)<=(NULL)))AND((('') BETWEEN (x'') AND (x'')))))AND(((x'') NOT BETWEEN (7.15569488E8) AND (0Xffffffffb43fd8c5)))));SELECT DISTINCT (((- (vt0.c1))) ISNULL) FROM rt0 GROUP BY (((rt0.c1)&(vt0.c0)) IN ()) HAVING ((v0.c0) IS FALSE) COLLATE NOCASE;SELECT (('0.22358596131861153')*(((1.93932726E8)>=(vt0.c1)))), FIRST_VALUE(v0.c0) OVER (), MAX(((v0.c0) IS TRUE), 0.3522646578767764), (~ (((v0.c0)<<(vt0.c0)))), GROUP_CONCAT(((rt0.c0)+(vt0.c0))) OVER () FROM v0 WHERE (NULL);SELECT GROUP_CONCAT(CAST(rt0.c0 AS BLOB)) OVER ( ROWS (+ ((((vt0.c0, vt1.c0, '-1730178371')) BETWEEN ((0.16441451821433783, vt0.c1, rt0.c3)) AND ((vt0.c1, rt0.c2, rt0.c2))))) PRECEDING EXCLUDE NO OTHERS) FROM rt0;SELECT ALL ((((NULL)AND(MAX(vt0.c0))))AND((NOT (vt0.c1)))) FROM vt0, v0, rt0, vt1 WHERE ((((3.26645511E8) BETWEEN (NULL) AND (x'')) IN ((((1031749568)) NOT BETWEEN ((NULL)) AND ((0X761cb5c1)))))); -- 0ms;
SELECT DISTINCT ((CAST(x'' AS REAL)) NOT NULL), CASE TRIM(v0.c0)  WHEN (- (v0.c0)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) ELSE CAST(v0.c0 AS NUMERIC) END, (((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c1)) IN ()) FROM vt0, vt1, rt0;SELECT (~ (((NULL) NOT NULL))) FROM vt0, v0, rt0 WHERE (((ABS('ﮎC')) NOT NULL)); -- 0ms;
SELECT ROW_NUMBER() OVER ( ORDER BY ((((((((((vt0.c0)OR(vt0.c1)))OR(((vt1.c0)&(vt1.c0)))))AND(CASE WHEN NULL THEN 0.3914968869445695 WHEN '2084002124' THEN rt0.c1 WHEN vt1.c0 THEN v0.c0 ELSE rt0.c2 END)))AND((NOT (rt0.c1)))))OR((((vt0.c1, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, rt0.c1)) AND ((rt0.c2, v0.c0, vt0.c1)))))  NULLS FIRST, ((((vt0.c0, vt1.c0, rt0.c2))<=((rt0.c1, rt0.c1, vt0.c0))) IN ()) ASC  NULLS FIRST), LIKELY(vt1.c0) COLLATE RTRIM, ((CAST(vt0.c1 AS TEXT)) IS TRUE) FROM vt0 NOT INDEXED WHERE (((NULLIF('^', '2迃1LM%꟫u')) NOT BETWEEN ((NOT (NULL))) AND (((-1779029944) BETWEEN (-1904174177) AND ('')))));SELECT DISTINCT ((0.9374668354854689) BETWEEN ((+ (rt0.c2))) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))OR('')))OR(v0.c0)))), (~ ((~ (rt0.c0)))), ((rt0.c1 COLLATE RTRIM) NOTNULL) FROM rt0, vt0 WHERE (((((CASE WHEN x'2067' THEN '9p' WHEN 0.9049293626924314 THEN '9\rpA\nR?!' WHEN 0.36669533968795587 THEN 's秸~' ELSE '' END)AND(((x'3df5') BETWEEN (NULL) AND (x'871b')))))OR(((x'') BETWEEN (NULL) AND (NULL)))));SELECT ((rt0.c1 COLLATE NOCASE)OR(STRFTIME(vt0.c0, rt0.c0, v0.c0))) FROM rt0 WHERE ((((- (0Xffffffffe51e8b68))) BETWEEN (((((NULL)OR('1e500')))OR('0.7491072646322715'))) AND (HEX(DISTINCT ''))));SELECT DISTINCT TOTAL(((vt1.c0)/(rt0.c1))) OVER () FROM vt1, rt0 WHERE (((CAST('264902964' AS NUMERIC)) IS FALSE)); -- 0ms;
SELECT DISTINCT x'8ac8' FROM v0, rt0; -- 0ms;
SELECT json_array_length(((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c3)), COALESCE(v0.c0, vt0.c0, vt1.c0, vt0.c1)) FROM vt0 WHERE (((((((((1.279048863E9)OR('')))OR(0.9360040634951572)))AND(((('')) BETWEEN (('')) AND ((369871137))))))AND(CAST(NULL AS BLOB)))) ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS REAL) ASC;SELECT ALL (((NOT (vt0.c1)))||(x'')) FROM rt0 WHERE (CASE WHEN ((((0.9281017527358112)OR('')))OR(x'')) THEN x'' END);SELECT DISTINCT ((vt1.c0) BETWEEN (((rt0.c3)<<(vt0.c0))) AND (((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)))) FROM v0, rt0, vt0;SELECT DISTINCT SUM((+ (v0.c0))) FROM v0, vt0, rt0; -- 4ms;
SELECT DISTINCT (((v0.c0 IN ())) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c0, 0.580238132623428)) AND (((vt1.c0)&(v0.c0)))), ((CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)==((- (rt0.c0)))), UPPER(CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) FROM vt1, v0, vt0;SELECT ALL vt0.c0 FROM vt0, rt0, v0, vt1 WHERE ((((('-90916368') BETWEEN (x'26fe') AND ('-194856015'))) NOT BETWEEN (NULL COLLATE BINARY) AND (((NULL) BETWEEN ('-157820525') AND (2.066638204E9))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c3)AND(1.540563355E9)))AND(vt0.c1))) IS TRUE) FROM vt1, v0, vt0, rt0 WHERE ((((('362097453')>(0.38132332472905117)))>(((0.42972646362157974) IS TRUE)))) LIMIT -272237814; -- 0ms;
SELECT ALL COUNT((rt0.c3 IN ())) OVER (), AVG(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 ELSE x'8d002d14' END) OVER (), TOTAL(rt0.c3) FROM vt1, v0;SELECT DISTINCT ((rt0.c2)&(x'2302')) COLLATE BINARY FROM v0, vt1 LIMIT 209622815 OFFSET -598547354;SELECT DISTINCT ((((((((((((CAST('9C''**9m' AS NUMERIC))AND(AVG(rt0.c0))))AND(((((rt0.c2)AND(rt0.c1)))AND(v0.c0)))))AND((((vt0.c1))!=((vt0.c1))))))AND(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c3 ELSE vt0.c0 END)))OR(((v0.c0)|(rt0.c0)))))OR(((rt0.c2)-(vt0.c0)))) FROM vt0, rt0, v0, vt1 WHERE (('2102695353' IN ())); -- 0ms;
SELECT DISTINCT rt0.c1, (rt0.c2 IN (TIME(vt0.c1, vt1.c0, rt0.c3))), ((v0.c0) IS FALSE) COLLATE RTRIM, (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS REAL))) AND ((rt0.c1 COLLATE NOCASE))), CAST(CAST(rt0.c3 AS INTEGER) AS REAL) FROM v0, vt0 WHERE ((- ((((NULL, x'', x'8c42')) NOT BETWEEN ((0X271d79f8, 0Xffffffffc978a8a2, -5.55560376E8)) AND ((x'', '-2113338698', NULL))))));SELECT DISTINCT x'' FROM vt1, vt0; -- 0ms;
SELECT ALL CAST(json_insert(v0.c0, vt0.c1, NULL) AS REAL) FROM rt0, vt0, vt1, v0 LIMIT -403307510; -- 0ms;
SELECT ALL NTH_VALUE(((((((vt0.c1)>=(0X6dd6a210)))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)), (((vt0.c1, vt1.c0, vt0.c1)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (NOT (vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))) AND (((+ (vt1.c0)), ((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)), ((vt1.c0)<(vt0.c1)))))) OVER () FROM vt0, vt1;SELECT DISTINCT ((((((vt0.c0)) BETWEEN ((x'')) AND ((x'')))))<=((MAX('HMᦷ\r_.')))) FROM v0, vt0, vt1 NOT INDEXED; -- 30ms;
SELECT AVG(x'bc8c') FROM vt0, vt1, v0; -- 29ms;
SELECT DISTINCT ((load_extension(rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c2)) BETWEEN ((x'a352')) AND ((v0.c0)))) AND ((rt0.c0 IN ()))) FROM vt0, rt0 WHERE (UPPER(-1.425554734E9));SELECT DISTINCT (((vt0.c1, v0.c0, rt0.c0)) BETWEEN ((COUNT(vt0.c1), rt0.c0, CASE WHEN rt0.c0 THEN vt0.c0 END)) AND (((rt0.c0 IN ()), 0.5986521990894351, ((rt0.c3)<(v0.c0))))), vt0.c0, CAST(((((0.7819575402579129)AND(v0.c0)))AND(vt1.c0)) AS REAL) FROM vt1, v0, rt0;SELECT DISTINCT ((((vt0.c0)>>(0.5938423133117472)))GLOB(x'')), ((rt0.c1 COLLATE NOCASE)AND(vt0.c0)), ((((rt0.c3) BETWEEN (rt0.c0) AND (v0.c0)))OR(((vt1.c0) ISNULL))) FROM vt0, vt1, v0, rt0 WHERE (((CASE '-524806161'  WHEN NULL THEN -2.024783333E9 END) ISNULL)); -- 1ms;
SELECT ALL (vt0.c0 COLLATE NOCASE IN ((((rt0.c0))=((vt1.c0))))) FROM vt1, v0 NOT INDEXED WHERE ((NULL COLLATE RTRIM IN ()));SELECT DISTINCT x'6113' FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((('Amgygwi+')) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((((x'')AND(rt0.c3)))AND(rt0.c0))))) FROM vt0, v0, vt1;SELECT DISTINCT ((CASE rt0.c3  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c3 END)>=(vt1.c0)) FROM vt1, v0, vt0 LIMIT -1339125834 OFFSET -868907933;SELECT ALL TYPEOF(CAST(vt1.c0 AS REAL)), (((GROUP_CONCAT(rt0.c3)))!=(((rt0.c3 IN ())))), MIN(((rt0.c3)*(rt0.c1))), SQLITE_VERSION(), ((rt0.c2) IS TRUE) FROM vt0, rt0 WHERE ((((0.2753922459913474, NULL, '0.7491072646322715')) BETWEEN ((((NULL)>(-6.82973205E8)), CASE WHEN 0Xfffffffffa938d7b THEN NULL END, CAST('424268585' AS INTEGER))) AND (('' COLLATE NOCASE, CASE NULL  WHEN 0.47801917090985857 THEN NULL ELSE '6f-qq8fe{' END, CASE WHEN x'' THEN NULL END))));SELECT DISTINCT TOTAL(x'') FROM rt0; -- 0ms;
SELECT DISTINCT (~ (ABS(DISTINCT rt0.c3))) FROM vt1, v0, vt0, rt0; -- 0ms;
SELECT DISTINCT '2a', (- ((+ (0.06103666386557849)))), ((((((((((rt0.c2)AND(rt0.c1)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1)))<>(((((((((-436358796)AND(vt0.c1)))OR(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))) FROM vt0, v0, vt1 ORDER BY LIKELIHOOD((NOT (v0.c0)), 0.03834914132977907);SELECT 0.700443429690687, (('') ISNULL) COLLATE RTRIM, (CASE rt0.c1  WHEN rt0.c2 THEN NULL ELSE vt0.c1 END IN (((vt0.c1) NOT NULL), ((rt0.c2)>(rt0.c3)))) FROM vt1, v0, rt0;SELECT DISTINCT ((TRIM(DISTINCT rt0.c2)) IS FALSE) FROM vt0, vt1 WHERE (NULL COLLATE BINARY);SELECT DISTINCT ((((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR(((rt0.c1)|(0X3886663e)))))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c3  WHEN vt1.c0 THEN vt0.c0 END)))AND(vt0.c1 COLLATE NOCASE)) FROM v0, rt0, vt1;SELECT DISTINCT CASE WHEN CAST(0.485590053082085 AS TEXT) THEN CASE v0.c0  WHEN v0.c0 THEN vt0.c1 ELSE rt0.c3 END END, '', 0.15024385620215785 FROM vt1, vt0 WHERE (((CASE WHEN NULL THEN x'' ELSE NULL END)>>(CASE 0.7201026649157709  WHEN x'4a57' THEN '-1061359174' END)));SELECT ((((x'') BETWEEN (rt0.c0) AND (rt0.c1)))|(((rt0.c2) IS TRUE))), vt0.c1, LEAD(IFNULL(((rt0.c1)&(rt0.c3)), (vt0.c1 IN ())), ((CAST(rt0.c1 AS BLOB)) IS TRUE), CAST(0.11223912004387648 AS TEXT)) OVER () FROM v0, vt0, vt1, rt0 WHERE (CAST((+ (NULL)) AS REAL)); -- 0ms;
SELECT (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((('') NOT NULL))), ((((rt0.c2) NOTNULL))IS(((((((((rt0.c0)AND(vt0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(rt0.c1)))), CAST(load_extension(rt0.c3) AS INTEGER), '''[', CAST(TOTAL_CHANGES() AS TEXT) FROM v0, rt0, vt1 WHERE ((((('-883409674') IS FALSE)) BETWEEN (((x'') NOTNULL)) AND ((NOT (NULL)))));SELECT ALL CASE x''  WHEN CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END THEN (((vt1.c0))<((rt0.c0))) ELSE vt0.c0 COLLATE BINARY END FROM vt1;SELECT DISTINCT AVG(rt0.c2) OVER (), CAST(((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL), (((rt0.c0, vt1.c0, vt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (('0.6374054606547516', (1.879388113E9 IN (rt0.c3)), json_remove(vt0.c1, rt0.c2), ((rt0.c3)+(vt0.c0)), ((vt0.c0)!=(rt0.c0)))) AND ((LIKELY(vt0.c0), rt0.c0 COLLATE BINARY, 2.017572861E9, ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)), ((vt1.c0)>=(rt0.c0))))) FROM vt1, rt0 LIMIT -1503774299 OFFSET -1412000534;SELECT DISTINCT CAST(((vt0.c0)<=('')) AS INTEGER) FROM rt0, vt0, v0 WHERE (CAST('0.751356134711753' COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT ALL ((rt0.c0) IS TRUE) COLLATE RTRIM FROM rt0 WHERE (((('0')) BETWEEN ((MIN('', 0.8175296847046711, 0.9360040634951572, x''))) AND (((('0.8132629462084474') NOT NULL))))); -- 1ms;
SELECT DISTINCT (((((0.25895205160203383 IN (NULL)))OR(vt0.c0 COLLATE BINARY)))AND((x'' IN ()))) FROM vt0, v0, rt0, vt1; -- 0ms;
SELECT 0.9656221152723524, COUNT(*) OVER (), vt1.c0 FROM rt0, vt0, vt1; -- 0ms;
SELECT ALL (((json_remove(v0.c0, rt0.c0)))!=(((vt0.c0 IN ())))) FROM rt0, vt1, v0, vt0; -- 0ms;
SELECT LEAD(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM, (((rt0.c3)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND (((('Hq\rJ')||(vt0.c1))))), (((~ (vt0.c0)))<=(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN 0.3965184315093051 WHEN rt0.c3 THEN rt0.c3 END))) OVER (), (((vt0.c0) BETWEEN (v0.c0) AND (rt0.c1)) IN ()), (((((187461048))<=((vt1.c0)))) IS FALSE) FROM vt0, rt0, v0, vt1; -- 230ms;
SELECT ALL rt0.c1 FROM v0, vt1, rt0 WHERE (x'') GROUP BY CAST(COALESCE(vt0.c0, rt0.c1, rt0.c2, rt0.c0) AS BLOB) HAVING ((((vt0.c1 COLLATE RTRIM)AND((vt0.c1 IN ()))))AND(((((rt0.c3)OR(rt0.c0)))AND(rt0.c0))));SELECT ALL (((rt0.c0)) BETWEEN ((vt0.c1)) AND (((rt0.c0 IN (rt0.c0))))) FROM v0, vt1, vt0 WHERE (((NULLIF(NULL, '-514228970')) NOT BETWEEN ((NULL IN (0.4583138621506403))) AND (1.316523151E9 COLLATE NOCASE)));SELECT ((((rt0.c3)LIKE(vt0.c1))) NOT BETWEEN ('0.9773617141071111') AND (CASE rt0.c3  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN v0.c0 THEN rt0.c3 END)) FROM v0, rt0, vt0, vt1 WHERE (((('-392829398' IN (NULL, x'')))IS NOT((((0.017779244527503457)) BETWEEN ((x'')) AND ((x'641a')))))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS TEXT), DATETIME(((rt0.c3) IS TRUE), CAST(NULL AS INTEGER), ((v0.c0)||(rt0.c0))) ASC; -- 230ms;
SELECT (((((((rt0.c2))==((0Xffffffffd7cd48f6))))AND((((vt0.c0))!=((rt0.c1))))))OR(AVG(rt0.c0))), DATE(UNLIKELY(rt0.c1), CASE WHEN rt0.c1 THEN rt0.c0 END, rt0.c1), MIN(json_array_length(rt0.c1)) FROM vt1 NOT INDEXED WHERE (((CASE '|㳣,mr'  WHEN '358614940' THEN -2054722555 ELSE '1879388113' END)+(((NULL) BETWEEN (0.3254616563234949) AND (x'')))));SELECT DISTINCT 0.7357654429322484 FROM v0, rt0, vt0, vt1; -- 1ms;
SELECT ALL CASE WHEN ((rt0.c3) ISNULL) THEN (((v0.c0))>=((rt0.c2))) WHEN (((vt1.c0))<=((vt0.c1))) THEN ((0.3289329054273563) BETWEEN (rt0.c2) AND (vt0.c1)) WHEN ((v0.c0)>>(vt0.c0)) THEN COUNT(*) END FROM rt0, vt1, vt0;SELECT ALL ((vt0.c0)||((((rt0.c0))>((2.085892202E9))))), ((((rt0.c3)%(v0.c0))) NOT NULL), ((((CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c3 END)OR(rt0.c2)))OR(((NULL)LIKE(vt0.c0)))) FROM vt0 WHERE (CAST(CAST(0.08905202485495356 AS TEXT) AS TEXT)) LIMIT -2043399221 OFFSET -205014668;SELECT DISTINCT ((CAST(v0.c0 AS BLOB)) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))), (((x'84c8')) NOT BETWEEN ((vt0.c0)) AND (((NOT (rt0.c3))))), CAST(CAST('FH#iU' AS NUMERIC) AS INTEGER) FROM vt1 WHERE (((((0.9308854359785913) BETWEEN (x'4d44') AND (x''))) NOT BETWEEN (((((0.5828232374959739)OR(x'')))OR(NULL))) AND (((x'')+(0X6dcfabfc))))) ORDER BY ((vt0.c1 COLLATE RTRIM)/(((((rt0.c3)AND(vt0.c0)))OR(vt0.c0))));SELECT ALL (- (HEX(vt0.c0))), CASE LIKELY(rt0.c3)  WHEN CASE v0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt1.c0 END THEN ((v0.c0) IS TRUE) END, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM FROM v0, vt0, vt1;SELECT ALL (((((vt0.c1) NOTNULL)))<>((((((vt0.c1)OR(vt1.c0)))AND(rt0.c0))))) FROM rt0, vt1, vt0, v0 WHERE (((((((('635058667')) BETWEEN (('1516469622')) AND ((NULL))))AND((((NULL, 0.7560942907560544, '209622815'))>=((NULL, x'90b6', x'3ee4e6c4'))))))OR((('')+(NULL))))) LIMIT -286598051 OFFSET 2102695353; -- 0ms;
SELECT DISTINCT NULL FROM rt0, vt0, vt1 WHERE (CASE WHEN (- ('-621358959')) THEN (x'c9a8' IN ()) END); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1) NOTNULL) THEN MIN(rt0.c2) END FROM vt1, rt0, v0, vt0; -- 71ms;
SELECT DISTINCT (+ (((vt0.c0)GLOB(rt0.c0)))), MAX(v0.c0 COLLATE NOCASE), rt0.c1 FROM rt0, vt0, vt1, v0; -- 87ms;
SELECT rtreenode((rt0.c3 IN ()), rt0.c3) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN ((0.22596341288854094)) AND ((((((vt0.c0)AND(rt0.c2)))OR(vt1.c0))))), (((rt0.c1)/(vt1.c0)) IN ()), ((COUNT(rt0.c1)) NOT BETWEEN ((+ (rt0.c3))) AND ((+ (vt0.c1)))) FROM v0 WHERE (((('A<~]koh'))>((((0.9706430936842884) IS TRUE)))));SELECT ALL TOTAL(((rt0.c0) ISNULL)), MIN(((rt0.c1)|(vt0.c1)) COLLATE RTRIM), ((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END) NOTNULL) FROM rt0, vt1 WHERE (((((((0.3680852013987528) NOT BETWEEN (NULL) AND (x'4f898e03')))OR(CAST(x'' AS BLOB))))OR((('-1376195427')<<(NULL)))));SELECT COUNT(((((rt0.c1)OR(vt1.c0)))AND(rt0.c3))) OVER (), (((((((rt0.c3))>((rt0.c0))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(CAST(rt0.c3 AS BLOB))), ((((v0.c0) BETWEEN (NULL) AND (vt1.c0)))>=((NOT (rt0.c1)))) FROM rt0, vt1, vt0;SELECT ((TRIM(rt0.c1))%(((rt0.c0)<=(v0.c0)))), ((rt0.c2)<(((v0.c0)GLOB(vt1.c0)))), CAST(((rt0.c1) IS FALSE) AS REAL) FROM v0, vt0, vt1;SELECT ALL (rt0.c3 COLLATE BINARY IN ()) FROM rt0 WHERE ((((CAST(x'' AS INTEGER)))<(('h\' COLLATE BINARY)))); -- 0ms;
SELECT ALL ((((rt0.c0)-(x'')))LIKE((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))))) FROM rt0, v0, vt0, vt1 GROUP BY ((- (vt1.c0)) IN ()) HAVING ((((vt0.c0)+(rt0.c2)))IS NOT((- (rt0.c0)))); -- 82ms;
SELECT DISTINCT CAST(((((rt0.c2)AND(rt0.c0)))AND('-1289213891')) AS REAL) FROM vt1 WHERE ((((('-22802470')OR(6.56243192E8)))OR(0.9861320881811745)) COLLATE BINARY);SELECT DISTINCT x'' FROM v0 WHERE ((((~ (0.9560510823412072)))!=((((-2.8479913E7, x'', NULL, x'', ''))<((x'', -5.55560376E8, '<Zul', NULL, 0.9049293626924314)))))); -- 1ms;
SELECT CASE rt0.c3 COLLATE NOCASE  WHEN ((rt0.c3) BETWEEN (x'') AND (rt0.c2)) THEN (+ (rt0.c1)) END FROM vt0;SELECT DISTINCT (~ (((v0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))) FROM vt1, rt0, v0 ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (1.346402624E9) AND ((vt1.c0 IN ()))), ((('', rt0.c0, vt1.c0)) NOT BETWEEN (((((rt0.c2, rt0.c1, rt0.c3))>((rt0.c3, rt0.c0, vt0.c1))), vt0.c1 COLLATE RTRIM, ((rt0.c0) IS FALSE))) AND ((rt0.c1 COLLATE BINARY, CAST(x'' AS NUMERIC), ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) DESC;SELECT COALESCE(DISTINCT LIKE(v0.c0, rt0.c3), NULL, MAX(NULL), AVG(NULL)) FROM vt0, v0;SELECT ALL ((rt0.c3 IN ()) IN ()) FROM rt0, vt1, vt0, v0 WHERE (HEX(((0.0454663675629009) IS TRUE))); -- 0ms;
SELECT ((((((rt0.c2)<<(rt0.c1)))OR((v0.c0 IN ()))))OR(rt0.c3)) FROM vt0, v0, vt1, rt0 WHERE ((((~ (NULL)))||(UNLIKELY(DISTINCT 0.8684200797758831)))); -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) FROM vt0, v0; -- 0ms;
SELECT CAST((+ (rt0.c2)) AS REAL) FROM vt0, v0 WHERE (((CAST(NULL AS TEXT)) BETWEEN (((-825403067)&('gS|('))) AND (CAST('&|vz%g\n>' AS REAL))));SELECT DISTINCT AVG(rt0.c2) COLLATE BINARY FROM vt1, vt0, rt0, v0 UNION ALL SELECT ALL ((((((rt0.c2)IS NOT(rt0.c2)))AND(v0.c0)))AND(CAST(vt0.c1 AS INTEGER))) FROM vt0;SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)))+(vt1.c0 COLLATE NOCASE)), ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)OR(CASE WHEN vt1.c0 THEN rt0.c1 END)), ((((rt0.c0)&(x'619a')))LIKE(MIN(rt0.c2))) FROM v0, rt0, vt0;SELECT LAST_VALUE((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE, (v0.c0 IN ()), CASE WHEN vt0.c1 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN 0.5578729983470084 THEN vt1.c0 END)) AND ((0.05816565397944895, vt0.c1, (((vt1.c0, vt1.c0, vt0.c0))<((vt1.c0, vt0.c0, v0.c0))))))) OVER (), CASE WHEN CASE WHEN rt0.c0 THEN rt0.c3 END THEN (+ (v0.c0)) WHEN ((vt0.c1)&(vt0.c1)) THEN ((vt1.c0)&(rt0.c3)) WHEN CASE WHEN rt0.c3 THEN '秷G\923' END THEN ((((((((vt1.c0)OR(rt0.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)) END, ((vt0.c0 COLLATE RTRIM) IS FALSE) FROM v0, vt0, vt1 WHERE (CASE x''  WHEN NULL THEN 93591298 END COLLATE RTRIM) LIMIT 2066638204 OFFSET -288794964;SELECT DISTINCT ((((((vt0.c1)OR(v0.c0)))OR(vt0.c0)))==((v0.c0 IN (vt0.c1, v0.c0)))), ROW_NUMBER() OVER (), (((rt0.c0)<>(v0.c0)) IN (((((vt1.c0)AND('-1998655195')))OR(vt1.c0)), (((rt0.c1))<((v0.c0))))) FROM vt0;SELECT DISTINCT MIN(rt0.c0 COLLATE RTRIM), ((((((vt0.c1)AND(vt0.c0)))AND(v0.c0))) ISNULL), ((((4.24268585E8)AND((+ (vt1.c0)))))OR(((rt0.c0) NOT NULL))) FROM rt0, vt1, vt0 WHERE ((((((x'', 'S!%', NULL, 1719154630, 0.030782968888813045, NULL, 0.6265693196803226, 1.279048863E9, '-910357247')) NOT BETWEEN ((x'', x'', x'', 0.6228260425362553, x'', x'4806', NULL, '1757473118', x'')) AND ((1890540297, '598349782', '-1491337182', '-631919842', NULL, '', '/1', 0Xffffffffd708a5fb, '975267753'))))&(((('h\', 'R~NJhC', '-674412298'))!=(('424268585', 0.6320196175495004, '-450046539'))))));SELECT DISTINCT COALESCE(vt0.c0 COLLATE RTRIM, LOWER(v0.c0)) FROM vt1, v0, vt0 WHERE (CAST('' AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))>>(vt0.c0)) FROM vt1, rt0, vt0 WHERE ((((((x''))<>((x''))))GLOB((((((((('1003443810')OR('.6|z')))AND('2012951024')))AND('356160528')))OR(NULL))))); -- 0ms;
SELECT ALL (((((('2011707661')+(vt1.c0)))OR((('') IS TRUE))))OR(((vt0.c1)LIKE(vt0.c1)))) FROM vt0, rt0;SELECT ALL CASE CAST(935058434 AS INTEGER)  WHEN ((v0.c0)=(vt1.c0)) THEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c3)) WHEN (- (rt0.c3)) THEN (~ (rt0.c0)) WHEN json_object(rt0.c0, rt0.c2) THEN ((vt0.c0)IS(v0.c0)) END FROM vt1, vt0, rt0 WHERE (UNLIKELY(DISTINCT ((((NULL)OR(NULL)))AND(x'')))) LIMIT -22802470 OFFSET -1289213891 UNION SELECT DISTINCT ((CAST(1124843726 AS BLOB))<>((vt0.c0 IN ()))) FROM vt1, vt0, v0, rt0 ORDER BY ((((vt0.c0)LIKE(rt0.c0))) IS FALSE) ASC, (((rt0.c3)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE WHEN vt0.c1 THEN vt1.c0 END))) ASC, (((rt0.c2) NOTNULL) IN ())  NULLS FIRST;SELECT CASE ((rt0.c2) NOT BETWEEN (0.1493917304458453) AND (v0.c0))  WHEN ((rt0.c0) ISNULL) THEN GLOB(rt0.c1, rt0.c3) END FROM rt0;SELECT CASE (NOT (vt0.c1))  WHEN CAST(rt0.c2 AS REAL) THEN (x'' IN (NULL)) ELSE v0.c0 END FROM rt0 GROUP BY (~ (vt0.c0 COLLATE BINARY)) HAVING rt0.c1 LIMIT 1416016929;SELECT ALL ((((v0.c0) NOTNULL)) BETWEEN (ABS(rt0.c2)) AND (TOTAL('635058667'))), (((((~ (vt0.c0)))AND(CAST(rt0.c0 AS NUMERIC))))OR(CASE WHEN rt0.c3 THEN vt1.c0 WHEN vt0.c1 THEN '%꘳TS' WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)), COUNT(*) FROM vt0, v0, rt0 GROUP BY (((~ (0x379f2a12))) BETWEEN (CASE rt0.c3  WHEN 0.4877802649329499 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END) AND (TRIM(v0.c0))) HAVING (IFNULL(DISTINCT vt0.c0, vt0.c0) IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END));SELECT DISTINCT rt0.c0 FROM vt1, vt0, v0, rt0 ORDER BY -1245709299 ASC  NULLS FIRST, (- (vt1.c0))  NULLS FIRST;SELECT DISTINCT MAX(LIKELIHOOD(DISTINCT rt0.c3, 0.14976605164801204)), COUNT(*), rt0.c3 FROM vt1, vt0, v0, rt0 ORDER BY UPPER(DISTINCT CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END)  NULLS LAST; -- 110ms;
SELECT DISTINCT ((rt0.c3)LIKE(rt0.c2)) COLLATE BINARY FROM vt1 WHERE ((((0.5057078181908912, '#VfU5f#', 0.967218260454098)) BETWEEN (((- ('W?')), '2112329154', ((NULL) NOTNULL))) AND ((((9.75267753E8) NOT BETWEEN (NULL) AND (NULL)), 0.9917759370790842, CAST('Qa<' AS BLOB))))) GROUP BY vt0.c1, ((((~ (vt0.c1)), rt0.c3, 0.8273935709021192))>((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c3, ((rt0.c2)/(rt0.c1))))), ((CAST(rt0.c1 AS TEXT))&(((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))) HAVING ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c3)) COLLATE RTRIM LIMIT 186366265 OFFSET 1658930573;SELECT ALL FIRST_VALUE((((0Xffffffff8e809b9f))>(((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))) OVER (), (CAST(vt0.c1 AS BLOB) IN (vt0.c1 COLLATE NOCASE)), (((rt0.c3, vt1.c0, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB), '1113732345', ((vt0.c0)>>(vt1.c0)))) AND ((TOTAL(rt0.c3), CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 END, vt1.c0))) FROM v0, rt0 WHERE (((((0.9196165404577887)+(']Y')))/((('') NOTNULL))));SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 WHEN NULL THEN vt0.c0 END) BETWEEN (((vt0.c1)+(rt0.c3))) AND (vt0.c1 COLLATE RTRIM)), LAST_VALUE(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) OVER (), (NOT (CASE WHEN rt0.c1 THEN vt0.c0 END)) FROM vt1, v0 LIMIT -1806018437 OFFSET -1091476482;SELECT ALL CASE WHEN rt0.c0 THEN ((((((((vt1.c0)OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c3)) WHEN (((3.62097453E8, vt0.c0, rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, vt0.c1, vt0.c1, vt1.c0)) AND ((vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.c1))) THEN ((((v0.c0)AND(rt0.c2)))AND(x'')) WHEN CAST(vt1.c0 AS REAL) THEN CAST(vt1.c0 AS REAL) WHEN ((0.4824629829478272) IS FALSE) THEN NULL WHEN MIN(vt0.c1) THEN (- (vt0.c0)) END FROM vt0, v0, vt1, rt0 EXCEPT SELECT DISTINCT NTILE(LIKE((- (v0.c0)), (((v0.c0))==(('-330671781'))))) OVER () FROM v0 WHERE (-984942340);SELECT DISTINCT UNLIKELY(DISTINCT ((v0.c0)=(v0.c0))) FROM vt0, v0 WHERE (((((NULL)>('198071619')))==((((('Kn}MpN%')OR(NULL)))AND('-351329321'))))) ORDER BY NULL ASC  NULLS FIRST; -- 0ms;
SELECT rt0.c1 FROM rt0 NOT INDEXED, vt1, v0, vt0 WHERE ((((0.5935577540538173)<<(975267753)) IN ())); -- 0ms;
SELECT DISTINCT ((AVG(rt0.c2))%(((rt0.c1) IS FALSE))) FROM vt0;SELECT ALL ((rt0.c0 IN (rt0.c0, vt1.c0)) IN ()) FROM vt0, v0, rt0; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1))) FROM v0, vt0, rt0 ORDER BY ((rt0.c0 IN (NULL)) IN ()) DESC, ((((vt1.c0) ISNULL)) IS TRUE) DESC;SELECT DISTINCT ((((((((((rt0.c0) IS FALSE))OR((rt0.c0 IN ()))))OR(((vt1.c0)IS(rt0.c1)))))OR(((rt0.c3) BETWEEN (0xffffffffa1faec69) AND (rt0.c2)))))AND((v0.c0 IN ()))) FROM v0, vt1, rt0 WHERE (((((+ ('-1163386183'))))<>(((NULL IN ()))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN 0.8870367801687982 ELSE rt0.c3 END AS REAL) DESC, ''  NULLS FIRST; -- 3ms;
SELECT DISTINCT ((((v0.c0)<>(rt0.c0)))==(CAST(rt0.c1 AS NUMERIC))), CAST(0.7977654027493856 AS TEXT), rt0.c0 FROM rt0 WHERE (TYPEOF(json_valid(NULL))) GROUP BY vt0.c1 HAVING ((0.7274645228183804) BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN vt1.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END));SELECT ALL CASE WHEN ((rt0.c3)&(rt0.c3)) THEN CAST(vt0.c1 AS TEXT) ELSE v0.c0 COLLATE NOCASE END FROM v0, rt0, vt0, vt1 WHERE ((((('-1214302446') NOT NULL))>>((('s秸~') BETWEEN (x'') AND (-1937698187))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (rt0.c2) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND (CAST(x'a51d' AS NUMERIC))) FROM vt0, vt1, rt0, v0 WHERE (((((((((((NULL)OR(NULL)))OR('-1879853849')))AND(0.050055660382796074)))OR(-1107820204)))%(0.07153238175437637))); -- 0ms;
SELECT CASE WHEN (+ (rt0.c1)) THEN (((vt0.c1))<((vt1.c0))) END FROM rt0;SELECT DISTINCT CAST(vt0.c1 AS INTEGER) COLLATE BINARY FROM v0, rt0;SELECT DISTINCT ((json_valid(rt0.c3)) BETWEEN (rt0.c2) AND (NULL)) FROM v0, rt0, vt1, vt0; -- 0ms;
SELECT ALL ((('') NOTNULL) IN ()), (((+ (rt0.c0)))-(CAST(rt0.c2 AS REAL))), ((((((((((((((rt0.c0)IS(rt0.c2)))AND((- (rt0.c3)))))AND(((v0.c0) IS TRUE))))OR((rt0.c0 IN ()))))OR(v0.c0)))AND(((v0.c0)|(v0.c0)))))OR((vt1.c0 IN (v0.c0)))) FROM v0, vt1 WHERE (CASE WHEN ('0.8948695327348548' IN ()) THEN CASE WHEN NULL THEN x'' ELSE 0Xfffffffffe50fcc3 END WHEN ((((((((((((NULL)OR(NULL)))AND(NULL)))OR('-5288789')))OR(0.5863368303993501)))AND(x'')))AND(x'')) THEN CAST(2.071230967E9 AS TEXT) WHEN CAST('-2138342445' AS TEXT) THEN (('1014832845') BETWEEN (NULL) AND (NULL)) END);SELECT DISTINCT CAST(CASE v0.c0  WHEN rt0.c2 THEN NULL ELSE vt1.c0 END AS NUMERIC) FROM v0, vt0 WHERE (CASE WHEN CAST(NULL AS REAL) THEN (+ (NULL)) ELSE (((x''))>((x''))) END);SELECT DISTINCT CAST(COUNT(vt0.c1) AS INTEGER), (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))), ((((vt0.c0 IN ())))<((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1))))) FROM rt0, vt1 WHERE ((((((0.9049293626924314) NOT NULL)))>((((x'') NOT NULL))))) ORDER BY SQLITE_COMPILEOPTION_GET(TYPEOF(vt1.c0));SELECT DISTINCT ((((rt0.c0)<(vt1.c0))) BETWEEN (((rt0.c3)%(rt0.c3))) AND (((rt0.c2)||('-1879853849')))) FROM rt0, vt0, v0;SELECT DISTINCT (MIN(NULL) IN ()) FROM v0, vt1 WHERE ((((((('2144059422')IS('-2121817266')))AND((('-927416498')<<(0xffffffffcaad3e7e)))))AND((('wn')!=(NULL))))); -- 0ms;
SELECT DISTINCT (((((((((rt0.c3 IN ()))AND(((-1456031336)IS NOT(rt0.c3)))))AND(((rt0.c0) ISNULL))))OR(TRIM(vt1.c0))))OR(((v0.c0)OR(rt0.c1)))), GROUP_CONCAT(CAST(vt0.c0 AS INTEGER)) OVER ( ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS LAST), vt1.c0 FROM rt0 WHERE ((((+ (x'2e14'))) NOT BETWEEN (((((((((x'0972')AND(x'')))AND('욼VW%')))AND(0x219c7708)))AND(x'ca71'))) AND (((0.7151806586531447) NOTNULL))));SELECT ALL NULL FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((v0.c0)*(rt0.c0)) COLLATE NOCASE FROM rt0, vt1, v0, vt0 WHERE (CASE ((NULL) NOTNULL)  WHEN (('2083723901')==(0.7398468559818271)) THEN ((((((((((((NULL)AND(NULL)))OR(x'')))AND(NULL)))AND(x'')))AND('9279755')))AND('\r?w.*,')) END); -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL)) ISNULL) FROM vt0, rt0, v0 WHERE (CASE WHEN (((NULL))>(('2040208643'))) THEN NULL COLLATE RTRIM ELSE (NOT (NULL)) END); -- 0ms;
SELECT ALL '312029389', ((vt0.c0)<(rt0.c1)) COLLATE RTRIM, (((- (v0.c0))) ISNULL) FROM vt0, v0, rt0, vt1; -- 0ms;
SELECT DISTINCT ((((CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END)OR(x'')))AND(rt0.c1 COLLATE BINARY)) FROM rt0, v0 LIMIT -1328637492 OFFSET -1674806376;SELECT ALL rt0.c0, (((vt1.c0)) BETWEEN ((COUNT(*))) AND (((~ (v0.c0))))), (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)) IN (CAST(v0.c0 AS BLOB))) FROM vt0, rt0, vt1 WHERE (0.34432921519207227);SELECT ((TRIM(DISTINCT rt0.c2)) ISNULL) FROM v0, vt1, vt0 WHERE (CASE ((0x6291ef90) NOT BETWEEN (NULL) AND (NULL))  WHEN ((x'')/(-560104283)) THEN (NOT (NULL)) END);SELECT DISTINCT (+ ((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FROM rt0, v0 WHERE ((((((((((- (-1285189079)))OR(('T fⲙ' IN (x'')))))OR(((NULL) NOTNULL))))OR((0.956698973618388 IN ()))))AND(x'')));SELECT MIN(((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) COLLATE RTRIM FROM rt0, vt0, v0;SELECT ALL CASE TOTAL_CHANGES()  WHEN UPPER(DISTINCT rt0.c0) THEN ((rt0.c0) ISNULL) END, CASE WHEN CAST(NULL AS TEXT) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE (((vt0.c1, vt0.c0, rt0.c1))<((rt0.c0, vt0.c1, rt0.c2))) END, ROW_NUMBER() OVER () FROM rt0, vt0 WHERE (((((((((((NULL)<<(-605587968)))OR(((4.24268585E8)-('')))))AND((NOT (NULL)))))OR((('-1588124424') BETWEEN (1.540563355E9) AND (0X4bfc6e12)))))OR((0.9281017527358112 IN ())))); -- 0ms;
SELECT (((NOT (vt0.c0))) NOT BETWEEN (((rt0.c3)||(rt0.c1))) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN 'YM' ELSE rt0.c0 END)) FROM rt0;SELECT DISTINCT '1575186564' FROM vt0 WHERE ((CASE NULL  WHEN x'' THEN x'' ELSE '.6|z' END IN ((NOT (0.9126324561237781))))); -- 0ms;
SELECT DISTINCT (((rt0.c3 IN ()))=((vt0.c0 IN ()))) FROM rt0, vt1, v0, vt0 WHERE (highlight(((NULL) NOTNULL), ((x'2482') BETWEEN (-5.60104283E8) AND ('1449783628')), highlight(-1e500, NULL, '*d', '-霟d'), ((NULL) NOT BETWEEN (NULL) AND (x''))));SELECT ROUND((((v0.c0))<((v0.c0))), (- (rt0.c3))), ((CASE v0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END)IS NOT(x'9819')), LOWER(CAST(rt0.c3 AS TEXT)) FROM vt0, v0 WHERE ((+ ('1279048863')));SELECT ALL ((SUM(rt0.c1))>>(((rt0.c3)<=(vt1.c0)))) FROM v0;SELECT CAST(((vt0.c0) ISNULL) AS INTEGER) FROM vt1 WHERE (NULLIF(DISTINCT x'6915' COLLATE BINARY, ((x'')IS(''))));SELECT ALL ((CASE WHEN rt0.c0 THEN vt0.c1 END) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((0.8948695327348548)) AND ((rt0.c1)))) AND (CAST(rt0.c0 AS INTEGER))) FROM v0, vt0 WHERE (ABS(DISTINCT ((x'f970') NOTNULL)));SELECT (- ((((rt0.c0))=((vt0.c1))))), COUNT(SQLITE_VERSION()), ((LIKE(vt1.c0, vt0.c0, 'N'))<=(((v0.c0)>=(rt0.c2)))), '-2024783333', NULL FROM rt0 WHERE ((((((NULL)) BETWEEN (('326645511')) AND ((x'769b')))) ISNULL));SELECT DISTINCT CASE WHEN ((vt0.c1) ISNULL) THEN COUNT(*) WHEN CASE WHEN v0.c0 THEN vt0.c0 END THEN LIKELY(rt0.c1) WHEN v0.c0 COLLATE BINARY THEN CASE '0.7532256243394982'  WHEN -2.093860908E9 THEN v0.c0 END ELSE x'' END FROM rt0 WHERE ((((-866902014, NULL, 0X5a317607)) NOT BETWEEN ((((((((((365933979)OR(x'')))OR('oC')))OR(0.09263083858829857)))AND(x'')), (NULL IN ()), (((('149873153')AND('606212114')))AND(0xffffffff828cfa1c)))) AND ((((NULL)IS NOT(x'')), (- (NULL)), CAST(NULL AS BLOB)))));SELECT ALL ((MAX('1147311254', NULL))OR(((vt0.c1)<>(rt0.c3)))) FROM vt0, vt1, v0;SELECT ALL RANK() OVER () FROM v0; -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM v0, rt0 WHERE (x'') ORDER BY (((((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c1)))) NOT NULL)  NULLS LAST;SELECT DISTINCT ((((vt1.c0) IS FALSE))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))))), NULL, ((((((((rt0.c0)OR(rt0.c1)))OR(vt0.c1)))OR(rt0.c3)))AND(vt1.c0)) COLLATE BINARY FROM vt0, rt0, v0 FULL OUTER JOIN vt1 ON 'GG' WHERE ((((((('1788100030')OR(-420802572)))AND('Uₖ')))<=(x'' COLLATE RTRIM))); -- 1ms;
SELECT ALL ((CAST(rt0.c2 AS NUMERIC))%(vt0.c1)), AVG((((vt1.c0, vt1.c0, vt0.c0))<((v0.c0, v0.c0, rt0.c2)))), ((v0.c0) NOTNULL) FROM v0, rt0, vt1;SELECT DISTINCT NULL, rt0.c1, FIRST_VALUE(CASE CASE rt0.c2  WHEN v0.c0 THEN rt0.c3 END  WHEN rt0.c3 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN '-1998655195' WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END ELSE (((v0.c0))!=((rt0.c0))) END) OVER () FROM vt0, rt0, vt1, v0 WHERE ((((((NULL) BETWEEN (x'') AND ('?'))))<=(((((((((('z9-Si冂|N&')OR(0xffffffffb328283d)))OR('')))AND(NULL)))OR(1.183605247E9)))))); -- 0ms;
SELECT ALL MIN(rt0.c3 COLLATE RTRIM COLLATE BINARY), CASE vt0.c0  WHEN ((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)) THEN SUM(vt0.c1) END, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('-868907933'))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (NULLIF(DISTINCT vt1.c0, v0.c0))) FROM v0 WHERE (CAST(('173829230' IN ()) AS REAL));SELECT ALL ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c2))) ISNULL) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CASE (((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0)))  WHEN ((rt0.c2)GLOB(v0.c0)) THEN rt0.c0 COLLATE BINARY WHEN CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN 'H5f5,+[V+' WHEN vt1.c0 THEN rt0.c3 END THEN (((rt0.c2))!=((vt0.c1))) WHEN (((vt0.c0))<>((v0.c0))) THEN (NOT (rt0.c3)) ELSE x'' END FROM rt0 LIMIT 370039651;SELECT DISTINCT vt0.c1 FROM v0, rt0, vt1, vt0 WHERE ((((+ (0.40090263470940246)))GLOB((NOT (2026801946))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)) NOT BETWEEN (((((('0.9281017527358112')AND(NULL)))AND(rt0.c1)))) AND ((MIN(rt0.c0)))) FROM vt0, rt0, v0, vt1 WHERE (LOWER(x'')) ORDER BY '-1129724817'  NULLS LAST LIMIT -1374444201 OFFSET 948332094; -- 0ms;
SELECT LIKELIHOOD(DISTINCT vt0.c1, 0.32790768983147556) FROM vt1, vt0, rt0 WHERE (CASE (('-1204316446')+(x''))  WHEN (NOT ('-209690580')) THEN '861323723' ELSE CASE NULL  WHEN x'' THEN NULL ELSE x'2785' END END); -- 0ms;
SELECT COALESCE(DISTINCT ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3)))) FROM rt0;SELECT DISTINCT ((CASE WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN '1735325580' WHEN rt0.c0 THEN v0.c0 END)>((NOT (vt1.c0)))) FROM v0 INNER JOIN vt1 ON ((((vt0.c0)AND(1.340891135E9))) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((((vt0.c1, rt0.c2, rt0.c1))<((rt0.c3, vt0.c0, rt0.c0))))) GROUP BY CAST(x'' AS REAL);SELECT ALL UPPER(DISTINCT rt0.c3) FROM rt0, vt0, vt1 LIMIT 826826337; -- 1ms;
SELECT ((((rt0.c2)IS(rt0.c0))) ISNULL) FROM rt0, v0, vt1, vt0 WHERE (-49056180); -- 0ms;
SELECT ALL ((((vt1.c0)<>(rt0.c2)))GLOB((v0.c0 IN ()))) FROM vt0 FULL OUTER JOIN vt1 ON (((((((vt1.c0)OR('0.9049293626924314')))AND(vt0.c0))))<((NULL))) WHERE ((((- (0.218036655411895)))>((('') BETWEEN (NULL) AND (x'8ff45732')))));SELECT (((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))OR(((rt0.c2) IS TRUE))))OR(((vt0.c0)|(rt0.c0)))))OR(rt0.c1)))OR(((((((((0.7118053964147387)OR(vt0.c1)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))) FROM v0, vt0, rt0, vt1 WHERE ((((((NULL)) BETWEEN ((399666962)) AND (('56431540')))) BETWEEN (CAST(NULL AS INTEGER)) AND (NULL))) LIMIT 712558213 OFFSET 999335545; -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c3 AS REAL)  WHEN NULL THEN ((rt0.c3)IS('429875602')) ELSE CAST(rt0.c3 AS BLOB) END FROM vt0, v0, rt0, vt1; -- 0ms;
SELECT ALL LEAD(((v0.c0 COLLATE BINARY) IS TRUE), (((('-1721439817')<=(rt0.c0))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (rt0.c3 COLLATE BINARY)), ((vt0.c1)=(vt0.c1 COLLATE BINARY))) OVER (), (((rt0.c0)) NOT BETWEEN ((((rt0.c1)GLOB(vt1.c0)))) AND ((((vt1.c0) NOTNULL)))), CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((vt1.c0)OR(rt0.c2)) END, ((((vt1.c0)AND(vt1.c0)))OR(rt0.c3)) COLLATE BINARY, ((SUM(vt0.c1))GLOB((vt0.c0 IN ()))) FROM vt0, rt0, vt1, v0; -- 53ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0, v0 WHERE (CASE WHEN (0.44324784353453583 IN ()) THEN (((NULL)) BETWEEN ((x'')) AND ((NULL))) WHEN CAST(1099533641 AS INTEGER) THEN ((('-1', -608043879, 0.8809496364037227)) NOT BETWEEN ((0.34319732416334514, 0.3205368884283766, x'')) AND (('-991224854', x'', NULL))) WHEN (0.18804295532082582 IN ()) THEN (('363168999') BETWEEN (0.5928771982808985) AND (x'')) ELSE CAST('-28479913' AS BLOB) END) GROUP BY ((((v0.c0)/(rt0.c1)))/(((((rt0.c1)OR(rt0.c1)))OR(0Xffffffff97c15f51)))) HAVING (((((rt0.c2, rt0.c1, vt1.c0))==((-1.3423879E9, rt0.c1, v0.c0)))) NOT BETWEEN (((((((((rt0.c3)OR(v0.c0)))OR(x'')))OR(rt0.c1)))OR(rt0.c0))) AND (NULL));SELECT DISTINCT ((AVG(0.85872518560065))OR(((vt0.c0)/(rt0.c0)))) FROM v0 WHERE (COALESCE(((-1.557051978E9) IS TRUE), ((x'ad9a') BETWEEN (x'') AND ('Q❉b4Y')))) LIMIT 2104659601 OFFSET 2114494197;SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 GROUP BY ((CASE WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END)||(CAST(vt0.c0 AS INTEGER))), ((COALESCE(rt0.c1, v0.c0, vt0.c0, rt0.c3)) NOTNULL), x'' HAVING 0xffffffff8ff3b4e7;SELECT ALL ((((((((((((COUNT(v0.c0))AND((((0.23266279851063332, vt0.c1, rt0.c2))>((rt0.c2, v0.c0, x''))))))AND(v0.c0)))OR((+ (vt0.c0)))))OR(((((rt0.c2)OR(vt1.c0)))OR(rt0.c2)))))AND(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((('') IS TRUE))) FROM v0, vt1, rt0, vt0 ORDER BY ((vt1.c0)IS NOT((('g<卼.M瘿q	')&(rt0.c1))))  NULLS LAST, (((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))OR(rt0.c0 COLLATE RTRIM)))AND('-2092940282')), (vt0.c1 IN ()) COLLATE NOCASE; -- 78ms;
SELECT DISTINCT UPPER(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) FROM vt1, vt0, v0; -- 0ms;
SELECT ((((((vt0.c0)OR(rt0.c0)))AND(vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (MIN(vt1.c0))), IFNULL(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END, ((rt0.c0)/(v0.c0))), ((rt0.c2) BETWEEN (1.257350707E9) AND (vt0.c0)) COLLATE RTRIM FROM vt1, rt0, vt0, v0; -- 84ms;
SELECT ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (8.20125777E8) AND (LOWER(rt0.c0))) FROM vt1, rt0, vt0 WHERE (CASE '656243192'  WHEN ((x'')>('1724308969')) THEN (((x'6bbf26e6')) NOT BETWEEN ((NULL)) AND (('1842326524'))) END); -- 0ms;
SELECT ALL ((((((rt0.c0)AND(vt0.c1)))AND(rt0.c0))) BETWEEN (((vt0.c1) IS TRUE)) AND ((((vt0.c1, x'', rt0.c0))<=((vt1.c0, rt0.c1, '9279755'))))) FROM vt1, v0, rt0, vt0; -- 0ms;
SELECT ALL CAST(CAST(rt0.c3 AS REAL) AS NUMERIC) FROM vt1, rt0, vt0 WHERE (STRFTIME(((NULL) ISNULL), ((NULL)IS(NULL)), (('')OR('*D')))); -- 0ms;
SELECT (- (((v0.c0)>>(rt0.c0)))), ((vt0.c0)<(CASE WHEN rt0.c0 THEN rt0.c2 END)), ((((((((MIN(vt0.c0))OR(rt0.c3 COLLATE NOCASE)))OR((v0.c0 IN (rt0.c2)))))OR(((rt0.c2) NOT NULL))))AND(0.6162410129637821 COLLATE RTRIM)) FROM vt0, rt0, vt1, v0; -- 53ms;
SELECT CASE ((rt0.c1)LIKE(vt0.c0))  WHEN CASE WHEN rt0.c1 THEN v0.c0 ELSE vt1.c0 END THEN IFNULL(v0.c0, rt0.c1) END FROM vt0, v0, rt0 WHERE (((((((('5Zyo', 0.27672150624268466, x'')) NOT BETWEEN ((0.09861873585693448, 0.8306670922555597, '')) AND ((NULL, 0xffffffffafbf2d2d, x''))))OR(((NULL)IS(NULL)))))OR(CAST(NULL AS NUMERIC))));SELECT ALL ((0xffffffff8b586f8a)==((+ (rt0.c3)))) FROM vt0, v0, vt1 GROUP BY rt0.c3, CAST(LIKELIHOOD(rt0.c1, 0.9376676257269608) AS TEXT), ((rt0.c3) IS TRUE) COLLATE RTRIM, CASE WHEN (((vt0.c0, x'5f6c', rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, vt1.c0))) THEN rt0.c3 COLLATE BINARY WHEN ((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c1)>=(v0.c0)) WHEN vt0.c1 COLLATE BINARY THEN ((rt0.c3) BETWEEN (rt0.c0) AND ('-591006927')) END, '0.7585435924624924', (+ (rt0.c1)), ((CAST(vt1.c0 AS NUMERIC)) BETWEEN ((+ (rt0.c2))) AND (((vt1.c0)IS('-2043399221'))));SELECT DISTINCT SUM(rt0.c1) OVER () FROM vt1, v0, rt0 WHERE ((((((0.27954048657476893)) BETWEEN ((x'')) AND (('1867846804'))))+(0X33c8c786 COLLATE BINARY))); -- 5ms;
SELECT (((0.1580293080818168, rt0.c2, '-560104283', rt0.c0, rt0.c3)) NOT BETWEEN ((CASE WHEN v0.c0 THEN vt0.c1 ELSE vt1.c0 END, UPPER(vt0.c1), vt0.c1, rt0.c2 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER))) AND (((vt0.c0 IN (0.7292500754848072)), ((vt1.c0) IS FALSE), ((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)), ((rt0.c0) IS TRUE), '}f>U''䣶j'))) FROM vt1, vt0;SELECT ALL (((rt0.c1) ISNULL) IN (((vt0.c1)/(rt0.c1)))), ((TYPEOF(vt1.c0))IS(0Xffffffffc0eec07e)), (((vt1.c0)-(rt0.c1)) IN ((NOT (rt0.c0)))) FROM rt0, vt0, v0, vt1 WHERE (((('/1')) NOT BETWEEN ((SUBSTR(0.6289527589467816, ''))) AND (('-614344233')))); -- 0ms;
SELECT ALL ((v0.c0) NOT NULL) COLLATE RTRIM FROM vt1, vt0;SELECT DISTINCT (- (CASE -2.280247E7  WHEN vt1.c0 THEN vt0.c1 END)) FROM vt0, vt1, v0, rt0; -- 0ms;
SELECT (+ ((+ (vt0.c1)))) FROM v0 WHERE (((0.0544584929026497)||(x'')) COLLATE NOCASE);SELECT DISTINCT ((rt0.c1 COLLATE BINARY) NOT NULL) FROM vt0, vt1, rt0, v0; -- 0ms;
SELECT DISTINCT (((((((((('-438036581') NOT NULL))AND(((((vt1.c0)AND(x'')))AND(v0.c0)))))AND(CAST(v0.c0 AS INTEGER))))AND(vt1.c0)))OR(CASE v0.c0  WHEN -6.21358959E8 THEN rt0.c0 ELSE rt0.c2 END)) FROM v0, vt1, rt0; -- 0ms;
SELECT DISTINCT ((((v0.c0)OR('-2043399221' COLLATE NOCASE)))AND(((rt0.c2)LIKE(rt0.c2)))) FROM rt0, v0 WHERE (((load_extension(NULL)) IS FALSE)) GROUP BY ((v0.c0 IN (vt0.c1, rt0.c1)) IN ()), (((v0.c0 IN ())) NOT NULL), ((((vt1.c0) IS FALSE))OR(((vt0.c1)<>(rt0.c2))));SELECT DISTINCT (('Do|*<r䰹') NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((+ (vt0.c1)))) FROM rt0, vt0 WHERE ((((('\!') NOT BETWEEN ('2003413762') AND (x''))) NOT BETWEEN (((NULL)|(x''))) AND (((x'') BETWEEN (NULL) AND (0.5938423133117472))))) ORDER BY ((vt0.c0)<=(vt1.c0)) COLLATE BINARY;SELECT DISTINCT 0.548119665902842 FROM vt0, v0 ORDER BY (((vt0.c0 IN (rt0.c2, vt0.c1))) IS TRUE)  NULLS FIRST;SELECT DISTINCT (((rt0.c3)) BETWEEN ((vt0.c1)) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END))), ((vt0.c0 COLLATE NOCASE) NOT NULL), LOWER(((rt0.c3)||(rt0.c1))) FROM vt1, rt0 NOT INDEXED, v0, vt0; -- 0ms;
SELECT DISTINCT CAST(((((vt1.c0)OR(rt0.c2)))OR(NULL)) AS INTEGER) FROM rt0, vt0, vt1 WHERE ((0Xffffffffc2231661 IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((rt0.c3)GLOB(x'250516b2')) COLLATE RTRIM FROM vt1, v0;SELECT DISTINCT ((COUNT(rt0.c0)) BETWEEN (((rt0.c2) BETWEEN (0x30e22051) AND (vt1.c0))) AND ((((((((('-1098452431')AND(vt0.c0)))OR(v0.c0)))AND(rt0.c2)))OR(rt0.c3)))) FROM v0, vt0, vt1, rt0; -- 60ms;
SELECT DISTINCT ((((((((rt0.c2)AND((((v0.c0))<=((rt0.c1))))))AND(v0.c0)))OR((('L}Rv{X寸<')>=(rt0.c2)))))AND(CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END)) FROM rt0, v0;SELECT ALL rt0.c3 FROM vt0, v0, rt0 WHERE (CASE WHEN ((x'') NOTNULL) THEN (('ZzJ')IS NOT('')) ELSE x'' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT (NOT (CASE vt0.c0  WHEN vt0.c1 THEN '' ELSE rt0.c0 END)), ((((vt1.c0))<((vt0.c1))) IN ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))), (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) FROM v0;SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)AND(((rt0.c1) NOT NULL))) FROM vt1, vt0 WHERE (json_array_length(NULL, ((0.10376586668067167) IS TRUE)));SELECT DISTINCT LEAD(CASE ((vt0.c1)*(vt0.c1))  WHEN ((vt0.c1)AND(vt0.c0)) THEN COALESCE(vt0.c1, vt0.c0) END, ((((2.085892202E9) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c1))!=((vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))), (((((vt0.c0))=((vt0.c1))))GLOB(IFNULL(vt0.c1, vt0.c0)))) OVER ( RANGE (CAST(vt0.c0 AS NUMERIC) IN ()) PRECEDING) FROM vt0 GROUP BY (((vt0.c0) ISNULL) IN ());SELECT DISTINCT COALESCE(((vt1.c0) BETWEEN (vt0.c0) AND (x'')), TOTAL(rt0.c2)) FROM v0, vt0;SELECT CASE ((NULL)LIKE(rt0.c1))  WHEN ((rt0.c0)/(vt0.c0)) THEN json_valid(vt1.c0) WHEN ((rt0.c2)>(rt0.c2)) THEN CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN 0.5804308602616952 THEN rt0.c1 END WHEN ((vt0.c0) IS TRUE) THEN CAST(rt0.c1 AS INTEGER) WHEN rt0.c1 THEN ((NULL)IS(vt1.c0)) WHEN HEX(v0.c0) THEN CAST(rt0.c2 AS REAL) WHEN (~ (rt0.c2)) THEN TOTAL(rt0.c1) WHEN vt1.c0 COLLATE BINARY THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE 0.9524393187521191 END FROM vt1, vt0;SELECT ALL ((((((vt1.c0)LIKE(vt0.c0)))OR(((rt0.c0)<>(x'')))))AND(0.4230826195455788)), (((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((((((rt0.c0)AND(vt0.c1)))OR(vt1.c0)), rt0.c3, rt0.c2)) AND ((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)), v0.c0, (vt0.c1 IN ())))), ROW_NUMBER() OVER () FROM vt0 LIMIT 2053978512 OFFSET -596143007;SELECT DISTINCT TOTAL((rt0.c2 IN ())) COLLATE NOCASE, (NOT (MAX(vt1.c0))), CASE (((vt0.c0))>=((rt0.c2)))  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c2)AND(vt0.c0)))OR('姼z>m*9')) END FROM vt1, vt0, rt0, v0 WHERE (CAST((((x''))>=((0xffffffff83404406))) AS TEXT)); -- 71ms;
SELECT ALL ((SQLITE_VERSION()) NOT BETWEEN (((vt0.c1)==(vt0.c1))) AND (((0.8691780525987639)>>(rt0.c3)))), MIN(((((vt1.c0)OR(v0.c0)))AND('0.9061148433223265'))), ((0.3455562013194774) NOTNULL) COLLATE RTRIM FROM v0, vt1, rt0 WHERE (((CASE '0.13190421330228352'  WHEN NULL THEN '-1153334622' ELSE 0.4882115804768107 END)-((0.30747871104643265 IN ()))));SELECT DISTINCT (NOT (((rt0.c2)OR(rt0.c0)))), NULL, '*?' FROM vt1, v0 WHERE (CASE WHEN (NOT ('1259302934')) THEN ((x'') IS FALSE) END);SELECT ((((((rt0.c0)OR(vt0.c1)))AND(v0.c0))) NOT BETWEEN (json_extract(x'', 0.6023719422005626, rt0.c1, rt0.c2)) AND (((rt0.c1)>(vt0.c0)))), TOTAL(rt0.c0), CAST((- (vt0.c0)) AS INTEGER) FROM vt0, rt0 WHERE (((((((((((((0.28719274978692244)OR(0.3377363834629453)))AND(x'')))OR('948332094')))AND('&au+SH')))AND(('1e500' IN ()))))OR((+ (NULL)))));SELECT ALL (NOT (((vt1.c0)<<(rt0.c1)))) FROM v0 RIGHT OUTER JOIN vt1 ON (((rt0.c0)|(rt0.c1)) IN ()) RIGHT OUTER JOIN rt0 ON (vt1.c0 COLLATE BINARY IN ()) CROSS JOIN vt0 ON (NOT (((v0.c0)>>(rt0.c1)))) WHERE (NULL); -- 0ms;
SELECT CAST(((rt0.c1)AND(x'')) AS REAL) FROM vt1, vt0 WHERE (((((2.085892202E9)OR(NULL)))OR(x'')) COLLATE BINARY);SELECT ALL json_patch(((vt0.c0) NOTNULL), (((vt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))) FROM vt1, rt0, v0;SELECT DISTINCT CASE WHEN rt0.c1 THEN rt0.c0 WHEN 0.9360040634951572 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN 'ez#f' THEN vt0.c0 ELSE 0.15743439331469278 END COLLATE RTRIM FROM vt1, rt0, vt0, v0 WHERE (((((NULL)%(x''))) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST('' AS TEXT) FROM v0, vt1, rt0, vt0; -- 0ms;
SELECT ((((((((((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0)IS(x'')))))OR(v0.c0)))OR(v0.c0 COLLATE RTRIM)) FROM v0;SELECT ALL v0.c0 FROM rt0, vt0 WHERE ((((NULL IN ())) BETWEEN ((((NULL)) NOT BETWEEN ((x'')) AND ((x'')))) AND (((0.9773617141071111) IS FALSE)))) ORDER BY NULL DESC;SELECT CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))  WHEN (rt0.c0 IN ()) THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) ELSE (((rt0.c1, vt1.c0, rt0.c0, rt0.c3, v0.c0))<>((vt1.c0, 0.9332761326594322, rt0.c3, v0.c0, rt0.c1))) END FROM v0, vt1, rt0, vt0 WHERE (((912662689 COLLATE BINARY) NOT BETWEEN (CAST(NULL AS INTEGER)) AND (CAST(x'' AS TEXT)))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN (((- (vt1.c0)))) AND ((TOTAL_CHANGES()))) FROM vt1 WHERE (load_extension(CASE x''  WHEN 0.6080150145047513 THEN x'' WHEN '273271241' THEN x'' WHEN NULL THEN '1259302934' ELSE x'' END, 'Lu\nF' COLLATE NOCASE));SELECT ALL ((((rt0.c3)OR(v0.c0))) NOT BETWEEN ((((rt0.c2, rt0.c3, rt0.c0))=((vt0.c0, vt0.c0, rt0.c0)))) AND ((v0.c0 IN ()))) FROM vt0, rt0, v0, vt1; -- 0ms;
SELECT DISTINCT NULL FROM rt0, v0 WHERE (NULLIF(CASE WHEN 0X7e076e6c THEN '' ELSE NULL END, NULL)); -- 0ms;
SELECT ALL (- (COUNT(vt1.c0))) FROM v0 WHERE (NULL) ORDER BY (0.6888486418974992 IN ()), CASE ((rt0.c2)&(vt0.c1))  WHEN ((rt0.c3)>(rt0.c3)) THEN v0.c0 WHEN (vt0.c0 IN (rt0.c0)) THEN ((vt0.c1)=(v0.c0)) WHEN ((((((((NULL)OR(v0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c2)) THEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) ELSE (NOT (vt1.c0)) END  NULLS FIRST;SELECT DISTINCT TRIM(MAX(rt0.c1), (((v0.c0)) BETWEEN ((NULL)) AND ((vt1.c0)))) FROM vt1, vt0;SELECT DISTINCT ((MAX(v0.c0, vt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c3))<((rt0.c3 IN ()))) FROM rt0, vt0, v0; -- 0ms;
SELECT DISTINCT CAST(rt0.c3 AS TEXT) FROM vt0, vt1;SELECT ALL (~ (vt0.c0)) COLLATE RTRIM FROM vt0 GROUP BY ((((((((((rt0.c0)OR(rt0.c3)))OR(vt0.c1)))AND(rt0.c1)))OR(vt1.c0))) BETWEEN (x'63cc899f') AND ('B98T\n')), COALESCE(DISTINCT (((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), CAST(rt0.c2 AS INTEGER)), ((rt0.c3) IS TRUE) COLLATE NOCASE;SELECT ALL CASE vt0.c0 COLLATE RTRIM  WHEN MIN(x'') THEN ((vt0.c0) BETWEEN (vt0.c0) AND (0xffffffffbe86f231)) ELSE '' END FROM v0, vt0; -- 2ms;
SELECT ALL (((('M懿t_*')OR(((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)))))OR((vt0.c1 IN ()))) FROM vt1, v0, vt0 WHERE (((((((NULL)AND(0X51db4c2f)))AND(x'b39c')))&((('788647066') NOT BETWEEN ('1739993801') AND (x'')))));SELECT x'' FROM v0; -- 0ms;
SELECT ALL (('P' COLLATE BINARY) NOTNULL) FROM rt0, vt1; -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED(((rt0.c1) IS TRUE)), ((((vt0.c1) BETWEEN (v0.c0) AND (x'')))>=(((((((((rt0.c3)AND(v0.c0)))OR(v0.c0)))AND(-2.72237814E8)))AND(rt0.c0)))), ((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c3 END) ISNULL), CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((vt0.c0)%(rt0.c2)) END, ((((v0.c0)*(v0.c0))) NOT NULL) FROM vt0, vt1 WHERE (CAST(TYPEOF(DISTINCT 0.4255271957629033) AS TEXT));SELECT DISTINCT rt0.c1 FROM rt0, v0 ORDER BY x'' ASC; -- 1ms;
SELECT ALL LIKELIHOOD(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), 0.5603659460550298) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (IFNULL(DISTINCT vt0.c1, rt0.c3) IN ()) FROM vt0, rt0, vt1 LIMIT -909640599; -- 0ms;
SELECT DISTINCT CASE ((((rt0.c1)AND(rt0.c0)))AND(vt0.c1))  WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN ((rt0.c2) ISNULL) THEN ((vt1.c0)||(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((((vt1.c0)AND(vt0.c1)))OR(v0.c0)) WHEN (- (NULL)) THEN vt0.c0 COLLATE RTRIM WHEN (- (v0.c0)) THEN ((vt0.c1)*(rt0.c1)) ELSE ((rt0.c0)LIKE(0.016786850541953835)) END, ((((vt1.c0)AND(vt0.c0))) IS TRUE), ((((((((CAST(NULL AS REAL))OR(rt0.c0)))AND(MIN(v0.c0))))OR((NOT (vt0.c1)))))AND(((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) FROM vt1, vt0, v0;SELECT DISTINCT (x'' IN (CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 END)), NULL, (~ (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 END)) FROM vt0, vt1, v0, rt0 WHERE ((((+ (''))) NOT NULL)); -- 0ms;
SELECT DISTINCT rt0.c1, (((rt0.c0)) BETWEEN (((rt0.c0 IN ()))) AND (((((rt0.c1, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c1, rt0.c3)) AND ((vt0.c1, rt0.c2, rt0.c1)))))), ((((((rt0.c2)OR(rt0.c3)))AND(vt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END) AND (vt0.c0)), AVG(NULL) OVER (), ((((((rt0.c3)OR(rt0.c0)))OR(vt0.c1)))IS(vt1.c0)) FROM vt0, rt0, v0 WHERE ((((('1167343749')OR((((0.7897223339998802))<>((0X38fefbab))))))AND(CASE WHEN '-108319322' THEN x'cb11' END)));SELECT ALL COUNT(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3))) OVER ( ORDER BY (((vt0.c0)) BETWEEN ((((v0.c0)<=(vt0.c0)))) AND (((- (v0.c0)))))  NULLS FIRST) FROM rt0;SELECT (((vt0.c0) ISNULL) IN ()) FROM v0, vt0, rt0, vt1; -- 0ms;
SELECT CAST(CAST(v0.c0 AS NUMERIC) AS TEXT) FROM vt1, rt0 GROUP BY ((ABS(DISTINCT rt0.c0))!=(CASE WHEN '604345262' THEN v0.c0 ELSE vt0.c1 END)) HAVING ((vt0.c1 COLLATE BINARY) BETWEEN ((rt0.c1 IN ())) AND ((+ (rt0.c0))));SELECT DISTINCT CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0)&(vt0.c0)) END FROM v0;SELECT DISTINCT ((COUNT(rt0.c0)) BETWEEN (((rt0.c1)/(-6.61268282E8))) AND ((rt0.c2 IN ()))) FROM v0, rt0, vt1, vt0 WHERE (((((0.6228260425362553)<<(7.12558213E8))) NOTNULL)); -- 69ms;
SELECT ((0.08082773236501173)LIKE(ABS(vt0.c0))) FROM v0 WHERE (CAST(((NULL) BETWEEN (NULL) AND (x'')) AS BLOB));SELECT ALL (((v0.c0))<((vt0.c1))) COLLATE NOCASE FROM vt1, rt0, v0, vt0; -- 0ms;
SELECT DISTINCT ((((((((CASE vt0.c0  WHEN 0.2073825519583976 THEN 0.7719335049128517 END)AND((rt0.c3 IN (vt0.c1, vt0.c0)))))AND(rt0.c3 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN vt1.c0 THEN vt1.c0 END)) FROM vt0 WHERE ((-1.998655195E9 IN ()) COLLATE RTRIM);SELECT DISTINCT CASE (((rt0.c3, rt0.c1, vt0.c1))>=((rt0.c0, vt0.c0, rt0.c0)))  WHEN AVG(vt1.c0) THEN x'' ELSE (NOT (NULL)) END FROM v0, vt0, rt0 ORDER BY (((- (rt0.c3)))AND(CASE rt0.c0  WHEN v0.c0 THEN rt0.c3 END)) ASC;SELECT DISTINCT vt0.c1 FROM vt0, rt0, vt1, v0 WHERE (0.42616745168063574); -- 0ms;
SELECT DISTINCT 0x6019004f FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (- (CASE vt0.c1  WHEN vt0.c1 THEN 0.6749918116400391 END)), ((CAST(rt0.c0 AS NUMERIC)) IS TRUE), CASE WHEN ((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)) THEN UNLIKELY(v0.c0) WHEN rt0.c3 COLLATE BINARY THEN COUNT(NULL) WHEN (rt0.c2 IN ()) THEN (((vt0.c0))<((rt0.c3))) ELSE (((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))) END FROM v0, rt0 WHERE (((((('1111838768')) NOT BETWEEN (('')) AND (('	iLs')))) NOT BETWEEN (((((x'')AND(281575469)))OR('U{h⽳.R舢eA'))) AND (('}f>u''䣶j' IN (x'', '-1496788989'))))) UNION ALL SELECT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL), ((((((rt0.c0)OR(rt0.c1)))OR(NULL)))||(((vt1.c0) NOTNULL))), ((vt1.c0 COLLATE BINARY)!=(((vt1.c0)<(rt0.c0)))) FROM vt0, v0, vt1, rt0;SELECT DISTINCT ((CASE WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN v0.c0 THEN rt0.c3 END) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) AND (((rt0.c3) IS FALSE))), x'', rt0.c2 FROM vt0, v0, rt0 WHERE (x'cfb3');SELECT DISTINCT vt0.c1 FROM vt1, v0, rt0 WHERE ('');SELECT DISTINCT CAST(((rt0.c1)<<(vt0.c1)) AS TEXT) FROM rt0 WHERE (((UPPER(DISTINCT ''))GLOB((('u')>('1111394837')))));SELECT DISTINCT (((((vt1.c0))>=((v0.c0))))&(((vt0.c0)-(rt0.c2)))) FROM vt1, v0;SELECT ALL vt0.c1 FROM rt0, vt0, vt1, v0 WHERE (CASE WHEN (((0.6069130858206784))>=((3.5861494E8))) THEN CAST(x'' AS NUMERIC) WHEN (((NULL))=((0.3054715685887678))) THEN IFNULL(DISTINCT '', 1.259302934E9) WHEN CAST(0.2295522006447297 AS REAL) THEN ((((NULL)AND(0Xffffffff833237d4)))OR(x'')) WHEN ((x'') BETWEEN (NULL) AND ('J髩*BXUe놩')) THEN '358614940' WHEN ((0.8366350114812477)<<('')) THEN ((NULL)||(0Xfffffffff2c3c17e)) ELSE NULL END); -- 0ms;
SELECT ALL NULL FROM v0, vt1, vt0, rt0 ORDER BY ((COALESCE(DISTINCT rt0.c3, v0.c0)) NOT BETWEEN (((rt0.c2) BETWEEN (vt0.c1) AND (NULL))) AND (((((rt0.c0)OR(v0.c0)))OR(v0.c0)))) ASC  NULLS LAST; -- 204ms;
SELECT CUME_DIST() OVER () FROM vt0; -- 1ms;
SELECT DISTINCT CASE COUNT(*)  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END THEN vt0.c0 END, ((((((vt0.c1) IS FALSE))OR(vt1.c0 COLLATE BINARY)))AND(MIN(x''))), rt0.c0 FROM rt0, vt1 WHERE (x'') LIMIT 781137752 OFFSET 2029466863;SELECT DISTINCT vt0.c0 FROM vt0, v0, vt1, rt0 WHERE (ABS(DISTINCT (0.9698134711147434 IN (NULL, 1151704671)))); -- 0ms;
SELECT DISTINCT ((vt0.c1)>=(vt0.c0)) COLLATE NOCASE COLLATE NOCASE FROM vt1, rt0, vt0, v0 WHERE ((('%懿b') NOT BETWEEN (CAST('*,6^[)' AS INTEGER)) AND (((x'85c6') BETWEEN (x'') AND (''))))); -- 0ms;
SELECT SUM(((vt0.c0)OR(v0.c0))) OVER ( PARTITION BY ((rt0.c2) IS TRUE), ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (((rt0.c0)AND(v0.c0))))) FROM v0, rt0, vt1 WHERE (((((NULL)!=(x''))) IS FALSE)) ORDER BY (~ (CAST(vt1.c0 AS REAL)));SELECT DISTINCT ((vt0.c1) NOTNULL) FROM rt0, v0, vt1, vt0 WHERE (DATETIME((NULL IN ()), ((2.017572861E9) BETWEEN (-1.93662829E8) AND (NULL)), '892345140' COLLATE NOCASE, LOWER(DISTINCT 0xffffffffff164090), ((0.7339888054949163)GLOB('-1609936883')))) LIMIT -1139660759; -- 0ms;
SELECT ALL GROUP_CONCAT(rt0.c3) COLLATE NOCASE COLLATE NOCASE FROM vt1, v0, rt0 WHERE (CASE WHEN '1346402624' THEN NULL END COLLATE BINARY); -- 0ms;
SELECT (~ (AVG(v0.c0))) FROM vt1 WHERE (LIKELY(((1156029506) NOTNULL)));SELECT DISTINCT (((vt1.c0 IN ()))||(NULL)), (((vt0.c1))<=((SUM(rt0.c2)))), CASE WHEN ((rt0.c3)<=(v0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (rt0.c2 IN ()) THEN GROUP_CONCAT(vt1.c0) WHEN rt0.c1 THEN v0.c0 END, (+ (rt0.c1)) COLLATE RTRIM, (((vt1.c0)>(rt0.c0)) IN ()) FROM v0, vt1, rt0, vt0 WHERE ((CAST(0.6339867070770661 AS INTEGER) IN ())) LIMIT -1577390999 OFFSET -471500748; -- 0ms;
SELECT COUNT(*) FROM vt0, v0 WHERE ((- (CAST(NULL AS NUMERIC)))) LIMIT -1425554734; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, v0; -- 1ms;
SELECT ((((rt0.c0)||(vt1.c0)))+(rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE (((COALESCE('-1739867925', NULL, '-1501123465', x'')) IS FALSE));SELECT (v0.c0 IN ()) FROM rt0, vt1, vt0, v0 WHERE (CAST(load_extension(NULL, '') AS REAL)) LIMIT 599866880;SELECT ALL CASE WHEN (x'' IN ()) THEN rt0.c3 ELSE (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))) END FROM v0, rt0, vt0, vt1 WHERE (((0x492ac89d COLLATE NOCASE)AND((~ (-1e500))))); -- 0ms;
SELECT CASE GROUP_CONCAT(rt0.c2)  WHEN ((((rt0.c1)OR(v0.c0)))AND(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) END, HEX(DISTINCT rt0.c0), CAST(((v0.c0) NOTNULL) AS NUMERIC) FROM rt0, v0, vt1 WHERE (TYPEOF(0.9630025435556689) COLLATE RTRIM COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c3 THEN x'5d28' END) BETWEEN (IFNULL(rt0.c2, rt0.c2)) AND ((NOT (rt0.c3))));SELECT DISTINCT ((((v0.c0) NOT NULL)) ISNULL) FROM rt0, vt1, vt0, v0; -- 0ms;
SELECT DISTINCT rt0.c1, (((((rt0.c1))<>((rt0.c0)))) BETWEEN (NULL) AND ((NOT (0xfffffffffa759fc5)))), rt0.c3 COLLATE BINARY FROM rt0, vt0, v0, vt1 WHERE ((((0.7477190754752963, x'', '-1289213891')) NOT BETWEEN ((((('2017572861')) NOT BETWEEN ((1.340891135E9)) AND ((x''))), (('-1620967240')IS('?')), (NULL IN ()))) AND (((('')&(0.4620138902311566)), CASE 'Z [ꛤ.	)\'  WHEN 0.21406471885617784 THEN '-1865314988' END, (-1669293627 IN ()))))) ORDER BY ((ABS(DISTINCT rt0.c2))<(CASE WHEN 0.017418226543242543 THEN rt0.c3 END)), ((((vt0.c0)>=(rt0.c1)))<(CAST(vt1.c0 AS INTEGER))); -- 108ms;
SELECT DISTINCT (((v0.c0 IN ())) NOTNULL) FROM vt0, v0 WHERE (((3.62097453E8 COLLATE BINARY) IS TRUE)); -- 0ms;
SELECT DISTINCT (COUNT(v0.c0) IN ()) FROM vt0, v0 WHERE ((('' COLLATE BINARY)+(x'' COLLATE BINARY))) LIMIT -2093860908; -- 1ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE RTRIM AS TEXT) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(NULL COLLATE NOCASE) OVER () FROM rt0; -- 0ms;
SELECT (((rt0.c2 IN (vt0.c0)))=(CASE v0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c2 END)), ((rt0.c2)<>((v0.c0 IN ()))), (NOT (((vt0.c0)%(vt1.c0)))) FROM vt0 WHERE ((((((-776889579))>=(('-1146252241'))))AND((('&S ') BETWEEN (0.34298413205057965) AND (x'356d7712')))));SELECT DISTINCT vt0.c1, (((CAST(vt1.c0 AS BLOB)))=((NULL))), (((- (vt1.c0))) NOT BETWEEN (6.56243192E8) AND (rt0.c0)) FROM v0, vt0, rt0, vt1 WHERE ((NOT (CASE 0.4543116147901951  WHEN NULL THEN 9.56234667E8 ELSE 2.011707661E9 END))); -- 0ms;
SELECT ALL rt0.c1 FROM vt0 WHERE (((((((0.5167287538043339)OR(0.6255580760645597)))OR(0.5234602091056523)))&(((NULL)>=(x'02aea54e')))));SELECT DISTINCT COUNT((((v0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((vt1.c0, NULL, rt0.c1)) AND ((rt0.c1, rt0.c1, v0.c0))) COLLATE BINARY) OVER () FROM vt1, v0, rt0; -- 7ms;
SELECT DISTINCT 0.9207235656712949 FROM v0; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (CAST(vt0.c1 AS REAL))) FROM vt0, rt0, v0 GROUP BY x'5c3c' LIMIT 1513190919; -- 5ms;
SELECT DISTINCT ((rt0.c3) IS FALSE) FROM v0, rt0, vt1 GROUP BY (((((((((((vt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, vt1.c0)) AND ((vt1.c0, rt0.c1, rt0.c3))))AND((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))))OR(((((vt0.c1)OR(vt0.c1)))OR(0x3e51d6cd)))))OR(CAST(vt0.c0 AS REAL))))AND(rt0.c0)) HAVING (((vt0.c0) IS FALSE) IN (vt0.c1 COLLATE BINARY));SELECT DISTINCT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) IN ()) FROM v0, vt0, rt0 WHERE ((((~ ('')))<(((x'6352')==(0Xffffffffec5b9825))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))OR(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c1 AS BLOB))) FROM rt0 WHERE (0.44064959812564164);SELECT DISTINCT CAST(vt1.c0 AS REAL) COLLATE RTRIM FROM rt0, vt0, vt1; -- 0ms;
SELECT ALL (NOT (MAX(v0.c0))) FROM v0, vt1, vt0, rt0 WHERE ((((0.4282425421865774)LIKE('820125777')) IN (NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((((v0.c0)OR(v0.c0)))OR(vt0.c1))) NOT BETWEEN (((vt1.c0)*(vt1.c0))) AND ((NOT (NULL)))), ((((((rt0.c3)<=(rt0.c2)))AND(CAST(rt0.c1 AS INTEGER))))AND(MAX(v0.c0))), GROUP_CONCAT(((vt1.c0) BETWEEN (x'3451') AND (rt0.c3))) OVER ( ROWS BETWEEN ((((vt0.c1) IS TRUE)) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)==(rt0.c3)))) PRECEDING AND vt0.c1 FOLLOWING) FROM v0, vt1, vt0, rt0;SELECT DISTINCT (((rt0.c0, vt1.c0, rt0.c3)) BETWEEN ((((vt0.c1) NOT NULL), ((vt0.c0)&(rt0.c2)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))) AND (((vt0.c1 IN (vt0.c1, rt0.c0)), vt0.c0, ((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) FROM rt0 WHERE (((NULL) BETWEEN (((']??')OR(0.5986521990894351))) AND ((0.15560885462348995 IN ()))));SELECT DISTINCT ((COUNT(rt0.c3)) NOT BETWEEN (((rt0.c0)%(v0.c0))) AND ('')) FROM vt0, rt0 WHERE (json_array('t', 0.9061148433223265, 0.9007954932666229, 0.6998069473297581) COLLATE BINARY);SELECT DISTINCT ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))<>(((((rt0.c3)AND(vt0.c0)))OR('0.13190421330228352')))) FROM v0, vt1 WHERE (-1819246890);SELECT DISTINCT x'' COLLATE NOCASE, json_array(((rt0.c0)*(vt0.c1)), (((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, NULL, vt0.c1)) AND ((vt1.c0, rt0.c3, rt0.c3)))), CASE ((rt0.c3) NOT BETWEEN (x'6dac') AND (rt0.c3))  WHEN (rt0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN vt0.c0 END ELSE ((v0.c0)-(vt0.c1)) END FROM v0, rt0, vt0, vt1 WHERE ((('') IS TRUE)); -- 0ms;
SELECT DISTINCT (((v0.c0 COLLATE NOCASE, v0.c0 COLLATE NOCASE, ((vt1.c0) NOTNULL)))>=((rt0.c1, '-560104283', json(vt1.c0)))) FROM vt0, vt1;SELECT DISTINCT ((TYPEOF(v0.c0)) NOTNULL) FROM vt0, rt0;SELECT ALL CASE WHEN 0xffffffffb83796e2 THEN (rt0.c1 IN ()) END, ((TYPEOF(DISTINCT vt1.c0)) IS FALSE), CAST(CASE WHEN vt0.c1 THEN rt0.c0 ELSE v0.c0 END AS TEXT) FROM vt1, vt0, rt0, v0; -- 0ms;
SELECT DISTINCT (((x'e42c' IN ()))==(((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) FROM vt0, vt1;SELECT ALL ((0.7796337307954092)<<(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN rt0.c2 THEN ')d' END)) FROM vt1, v0, vt0 WHERE (NULL);SELECT DISTINCT CASE (((rt0.c0, rt0.c2, rt0.c2, rt0.c1, vt0.c0))>((rt0.c3, rt0.c2, rt0.c0, vt0.c1, rt0.c0)))  WHEN MAX(vt0.c0) THEN ((v0.c0) ISNULL) END FROM vt0 WHERE ('');SELECT DISTINCT (CASE vt0.c1  WHEN vt0.c0 THEN rt0.c2 END IN ()) FROM vt0 INNER JOIN rt0 ON ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) NOT NULL) RIGHT OUTER JOIN v0 ON x'' WHERE (((((CASE ''  WHEN 0.9376464806773039 THEN x'' WHEN x'' THEN '+)4>Pk' WHEN NULL THEN -449095752 ELSE 0.7957239967929292 END)OR(CASE 0.08313567850385406  WHEN '1612251215' THEN NULL ELSE '948332094' END)))OR(0.4160050363933835 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1) ISNULL)))>((((rt0.c3)/(rt0.c3))))) FROM vt0, rt0 WHERE ((((('0.10663365081115761')OR(x'')))OR(0.8976272660183628)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (+ (NULLIF(vt0.c1, rt0.c2))) FROM v0;SELECT ALL (x'9a256a8e' IN ()) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1, rt0; -- 0ms;
SELECT x'' FROM rt0, v0; -- 0ms;
SELECT DISTINCT ((((((((((((CAST(rt0.c1 AS BLOB))AND(((1257350707)=(rt0.c1)))))OR(((v0.c0)&(rt0.c1)))))AND(2.09622815E8)))OR('868796294' COLLATE NOCASE)))AND(AVG(rt0.c0))))OR(load_extension(vt0.c1))), AVG(COALESCE(DISTINCT rt0.c2, vt0.c1) COLLATE BINARY), ((((v0.c0) NOTNULL))+(CAST(vt0.c0 AS REAL))) FROM v0, vt0 WHERE (((((((0x37296c3b)OR(x'')))OR(x'46b4')))+('-2083874792' COLLATE NOCASE))) LIMIT -183757896;SELECT DISTINCT ((+ (v0.c0)) IN ((x'' IN ()), ((((((((rt0.c0)OR(vt1.c0)))OR(vt0.c1)))AND(rt0.c0)))OR(vt0.c1)))), ((MAX(0.36767915921946215)) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE WHEN 'U3䮗zWqrI)' THEN vt1.c0 ELSE rt0.c3 END)), ((((((rt0.c2)*(v0.c0)))OR(CAST(rt0.c2 AS BLOB))))OR((((vt0.c1))>((vt0.c0))))) FROM rt0 GROUP BY ((vt0.c0 COLLATE NOCASE)GLOB(((rt0.c1)<<(rt0.c2)))) HAVING (((((rt0.c3)<(rt0.c1))))<((((((rt0.c3)OR(rt0.c2)))AND(v0.c0)))));SELECT ALL ((SUM(rt0.c3))>((+ (vt0.c0)))), NULL, ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))-(CAST(vt1.c0 AS NUMERIC))) FROM rt0, vt1 WHERE (CAST((('6gM4l&IV') NOT NULL) AS INTEGER));SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((rt0.c3))) FROM rt0, v0, vt0, vt1 WHERE (0.4087281957724834 COLLATE BINARY COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END AS REAL) FROM vt1, vt0, v0 WHERE (((('&', ((((((((NULL)AND(x'')))AND(',')))OR(x'')))OR(0.8708047945491223)), -1204316446 COLLATE BINARY))==(((0xfffffffff0d02175 IN ()), (('0.9553356033113972') IS TRUE), ((x'') BETWEEN (x'669f895e') AND (0.7168470869920995))))));SELECT DISTINCT ((1.151614035E9)IS NOT((rt0.c2 IN ()))), (((rt0.c1)&(rt0.c2)) IN ()), ((((((vt1.c0)AND(vt0.c0)))OR(rt0.c3))) NOT BETWEEN (vt0.c1) AND (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM v0, vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((COUNT(rt0.c1))-(MIN(vt0.c1))) FROM rt0, vt1, v0;SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, vt1 NOT INDEXED, v0; -- 4ms;
SELECT DISTINCT ((rt0.c0 COLLATE NOCASE)AND(NULL)) FROM v0 WHERE (CASE CASE '-849340248'  WHEN NULL THEN NULL WHEN x'' THEN x'3824' WHEN 2091983064 THEN NULL ELSE ',' END  WHEN '1257350707' COLLATE RTRIM THEN ((x'13e6') NOT BETWEEN ('鮟oc_^!o\r') AND (NULL)) WHEN (NULL IN ()) THEN UPPER(DISTINCT -1721439817) WHEN (('1157277856')+('xl')) THEN ((0.42284887103735) NOT BETWEEN ('-1409189358') AND ('Kn}MpN%')) END);SELECT DISTINCT (((vt1.c0 IN ())) NOT BETWEEN (LOWER(rt0.c3)) AND (0.22734549628109157)) FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1) ISNULL))AND(vt1.c0 COLLATE BINARY)))OR(MIN(vt0.c1))))OR((~ (v0.c0)))))OR(x'')), ((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)) COLLATE BINARY, ((((~ (vt0.c0)), ((vt0.c0) IS FALSE), NULL))<>((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)), CAST(vt0.c1 AS BLOB), CAST(vt0.c0 AS REAL)))) FROM vt1, v0, rt0, vt0 ORDER BY CAST((vt0.c1 IN (rt0.c1)) AS TEXT) ASC  NULLS LAST, (~ ((rt0.c1 IN ()))) ASC, vt0.c0  NULLS LAST; -- 63ms;
SELECT ALL rt0.c3 COLLATE BINARY FROM vt1, rt0 WHERE ((((x'') BETWEEN (x'') AND (x'')) IN ())); -- 0ms;
SELECT DISTINCT (((vt1.c0) IS FALSE) IN ()) FROM rt0, v0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, vt1, rt0 WHERE ((CAST(0X4e788c8f AS TEXT) IN ((- (NULL))))); -- 0ms;
SELECT UPPER((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('-28479913')))), ((rt0.c0 COLLATE BINARY) NOT BETWEEN (NULL COLLATE RTRIM) AND (CASE WHEN rt0.c1 THEN rt0.c1 END)), (~ (((vt0.c1)=(vt1.c0)))), TOTAL(((v0.c0) ISNULL)), ((((((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END)OR(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c2 AS BLOB))))OR(((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))))OR(((((rt0.c2)OR(rt0.c2)))OR(vt0.c1)))) FROM vt0, vt1, v0, rt0; -- 69ms;
SELECT DISTINCT CAST(v0.c0 AS INTEGER), (((((rt0.c0))==((vt0.c1)))) IS FALSE), PERCENT_RANK() OVER () FROM v0;SELECT CASE WHEN ((vt0.c0)|(vt0.c0)) THEN CASE WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c1 END WHEN (v0.c0 IN ()) THEN (((vt1.c0, rt0.c3, vt0.c0)) NOT BETWEEN ((x'', 'L}R+?', rt0.c0)) AND ((NULL, vt1.c0, rt0.c2))) WHEN x'' THEN ((v0.c0)&(x'')) END FROM vt1, vt0, v0, rt0; -- 0ms;
SELECT ALL '칫' FROM rt0, vt1, vt0, v0 ORDER BY ((vt0.c1 COLLATE BINARY)>=('㐨|FPrF^'))  NULLS FIRST; -- 66ms;
SELECT (((vt0.c1)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((-1557051978 IN ())))), (((((((v0.c0))=((rt0.c3))))AND(((vt0.c1)<>(vt0.c1)))))OR(CASE vt0.c0  WHEN rt0.c0 THEN vt1.c0 END)), ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE 0.38132332472905117 END)IS NOT((vt0.c0 IN ()))) FROM vt1, v0 LIMIT -1124487908;SELECT DISTINCT GROUP_CONCAT(((vt1.c0)>=(rt0.c0))), '1778132189', COUNT(0.920412479685925) OVER () FROM vt1, v0, rt0; -- 6ms;
SELECT (((~ (vt0.c0))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c3) BETWEEN (rt0.c2) AND (v0.c0)))) FROM v0, vt0, rt0 GROUP BY vt1.c0, ((CASE WHEN rt0.c3 THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 ELSE rt0.c1 END) ISNULL), (((CAST(rt0.c1 AS NUMERIC)))<>((((vt0.c1) IS TRUE)))) HAVING json_extract((rt0.c2 IN ()), 0.8057744488193791, CAST(rt0.c1 AS INTEGER), CAST(rt0.c3 AS INTEGER));SELECT ALL ((vt0.c0 COLLATE NOCASE)GLOB(0.7052737091967687)) FROM rt0 WHERE ((((((('') IS FALSE))AND((NOT (x'')))))OR(((((NULL)AND('b')))AND('312029389')))));SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)))AND(((rt0.c2)=(v0.c0)))))AND(CAST(NULL AS NUMERIC))) FROM vt1, rt0 WHERE (LIKELIHOOD(DISTINCT (~ (NULL)), 0.4201451131787418)) ORDER BY NULL;SELECT DISTINCT TOTAL((((vt0.c1, rt0.c1, 0.5986521990894351)) NOT BETWEEN ((v0.c0, vt1.c0, rt0.c2)) AND ((x'', vt0.c0, vt0.c1)))) OVER (), ((SUM(vt1.c0)) NOT BETWEEN ((rt0.c1 IN (rt0.c3))) AND ((rt0.c1 IN ()))), ((((((((((rt0.c3)IS(rt0.c2)))AND(((((((((rt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) NOTNULL))))OR(MIN(v0.c0))))OR(rt0.c1 COLLATE BINARY)) FROM rt0, vt1, vt0 WHERE ((CAST(1448093078 AS TEXT) IN ()));SELECT DISTINCT TOTAL((('-1904174177')GLOB(vt1.c0))), (((vt0.c1 IN ()))IS NOT(CAST(rt0.c0 AS BLOB))), TOTAL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) OVER () FROM v0 GROUP BY (- (load_extension(rt0.c0))) HAVING (((NOT (rt0.c1))) NOT NULL);SELECT (vt0.c0 IN (((rt0.c1)%(vt1.c0)))) FROM vt1, rt0, vt0, v0 WHERE ((((TRIM(NULL)))==((((('{]'))==((-1.564429919E9))))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)+(v0.c0)))OR(((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c0)))))OR((NOT (rt0.c3)))))AND((0.6340021882849682 IN ()))))AND(((rt0.c0) ISNULL))) FROM vt0, v0, vt1 WHERE (((CASE WHEN 0x1e449b08 THEN '&S霟h2!' END) NOTNULL)); -- 0ms;
SELECT DISTINCT AVG(json_type(x'')) OVER () FROM vt0, vt1, rt0;SELECT DISTINCT (~ (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c3)))) FROM rt0, vt1 GROUP BY (vt0.c1 COLLATE RTRIM IN ()), CAST(((vt1.c0)>>(v0.c0)) AS NUMERIC), CAST(CAST(v0.c0 AS NUMERIC) AS INTEGER) HAVING '1058491287' ORDER BY (((((rt0.c1 IN (vt0.c1)))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c3)<>(rt0.c3)))), x''  NULLS LAST;SELECT ALL (((vt0.c0))<((CASE vt1.c0  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END))), ((rt0.c0) IS TRUE), ((rt0.c0)%(v0.c0)) COLLATE RTRIM FROM vt1, rt0 WHERE ('-176188210');SELECT ALL CAST(CAST(v0.c0 AS NUMERIC) AS REAL) FROM rt0, vt0, v0 LIMIT -1549052632; -- 0ms;
SELECT TRIM(DISTINCT CAST(vt0.c1 AS NUMERIC), ((((vt1.c0)OR(v0.c0)))AND(rt0.c2))) FROM vt1 WHERE (TOTAL_CHANGES()) GROUP BY ((((CASE WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((NOT (rt0.c3)))) HAVING ((((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c1)))OR(vt0.c1)))AND(vt0.c0)))>(2.102695353E9)) ORDER BY vt0.c0 DESC  NULLS FIRST;SELECT ALL (((vt0.c1, rt0.c1, rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((AVG(rt0.c3), CAST(rt0.c1 AS BLOB), NULL, ((((v0.c0)AND('-9223372036854775808')))OR(rt0.c0)), CASE '520634664'  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN 0.34363643179314496 THEN rt0.c1 END)) AND ((((vt0.c0)>(rt0.c0)), (~ (vt0.c1)), CAST(vt0.c1 AS TEXT), (vt0.c1 IN ()), ((((vt0.c1)AND(vt1.c0)))AND(v0.c0))))) FROM v0;SELECT DISTINCT json_patch(CAST(vt1.c0 AS INTEGER), (+ (vt1.c0))), json_patch((NOT (vt0.c0)), (~ (v0.c0))), (- (((vt0.c0)<<(rt0.c0)))) FROM vt0, rt0;SELECT COALESCE(((v0.c0)>=(rt0.c1)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))) FROM vt1 WHERE (((((NULL)=(0.35040545173113313))) NOT BETWEEN (((('㳶'))!=((NULL)))) AND (CAST(NULL AS INTEGER))));SELECT DISTINCT 0.21083398010957832, ((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE NOCASE, COUNT(*) FROM rt0, v0, vt1 WHERE (((((x'')AND('/1')))OR(x'')) COLLATE RTRIM) LIMIT -773372849 OFFSET 205592163;SELECT ALL CAST(((0.32608714721784493) IS FALSE) AS REAL) FROM vt1, rt0, vt0 WHERE ((((('r''')AND(x'')))OR(1912759362)) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END) NOT BETWEEN (GROUP_CONCAT(v0.c0)) AND (((vt1.c0)+(rt0.c1)))) FROM rt0 WHERE (((((0.9049293626924314)>=(NULL))) BETWEEN (NULL COLLATE BINARY) AND (((0.10239067664475465)&('274040619')))));SELECT ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x''))) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (rt0.c0 COLLATE NOCASE)) FROM vt0, v0, rt0 WHERE ((((NOT (NULL)))<<(CAST('2026801946' AS INTEGER))));SELECT DISTINCT CAST(json_array_length(vt1.c0) AS NUMERIC) FROM v0, vt0, rt0 WHERE (((((((494116032)AND('1612251215')))OR(NULL))) BETWEEN (CAST(x'' AS INTEGER)) AND ((('1514607372') NOTNULL))));SELECT ALL 0.34298413205057965 FROM rt0, vt0, vt1, v0 WHERE ((((x'' IN (-1136642802)))IS NOT(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c2 THEN ((v0.c0) IS TRUE) END, CASE ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN '-1289213891' THEN GROUP_CONCAT(rt0.c2) WHEN rt0.c0 THEN ((vt0.c1) NOTNULL) WHEN (rt0.c0 IN ()) THEN ((vt0.c0)>(vt0.c1)) ELSE MIN(rt0.c3) END, UNLIKELY(((((rt0.c3)OR(rt0.c1)))AND(vt0.c1))) FROM vt0;SELECT LEAD((((NOT (vt1.c0)))IS(((NULL)&(vt1.c0)))), IFNULL(DISTINCT vt1.c0 COLLATE BINARY, LIKELIHOOD(NULL, 0.8850393962316448)), TOTAL_CHANGES()) OVER ( PARTITION BY json(CASE WHEN rt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE v0.c0 END), (((v0.c0 IN (rt0.c0, rt0.c1))) NOT NULL)), ((rt0.c3) ISNULL) COLLATE RTRIM, LTRIM(((rt0.c3)>=(vt1.c0))) FROM vt1;SELECT DISTINCT LAG(NULL, rt0.c2, ((((rt0.c1)OR(v0.c0)))*((~ (rt0.c2))))) OVER () FROM vt1, rt0, v0, vt0 WHERE (CASE CAST(NULL AS BLOB)  WHEN NULL COLLATE BINARY THEN CAST(0.4438861603545613 AS NUMERIC) WHEN ((((x'')AND(NULL)))AND(x'fe63')) THEN ((x'')<(0.665973260793019)) WHEN CASE NULL  WHEN x'' THEN 0.8390065802075766 END THEN (((x''))>=(('836820217'))) END) GROUP BY ((CAST(rt0.c2 AS TEXT))!=(CAST(vt0.c0 AS REAL))); -- 0ms;
SELECT DISTINCT '-1193335077', PERCENT_RANK() OVER (), AVG((rt0.c1 IN ())) FILTER(WHERE TRIM((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), (vt0.c0 IN ()))) OVER ( ORDER BY ((((((((585882189)OR(x'0b63')))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)))))OR(NULL)))AND(((vt0.c1)|(vt0.c0))))  NULLS FIRST), CASE (- (rt0.c0))  WHEN TRIM(rt0.c1) THEN (((rt0.c0))<>((vt0.c1))) WHEN (rt0.c1 IN ()) THEN rt0.c0 COLLATE NOCASE WHEN ((vt0.c1)<<(rt0.c2)) THEN rt0.c1 COLLATE RTRIM END, ((((rt0.c2)-(v0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))) FROM vt1, v0 WHERE (CAST(((((((((x'')AND('r3F>醞CDVQ')))AND('')))AND(x'')))OR('悫\r\r<	6*[')) AS TEXT));SELECT ALL ((rt0.c1 COLLATE NOCASE)<=((- (vt1.c0)))), json_array_length(((rt0.c2)GLOB(vt0.c1)), 0.46392409650237254 COLLATE NOCASE), ((v0.c0) IS TRUE) COLLATE NOCASE COLLATE BINARY, MAX((rt0.c2 IN ())), rt0.c2 FROM vt0 WHERE ((~ ((- (x''))))) ORDER BY 0.20104701060638486  NULLS LAST;SELECT DISTINCT vt0.c1, ((((((((CASE vt0.c1  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END)AND(rt0.c1)))AND(((rt0.c0) BETWEEN (vt0.c1) AND (0.5952737815529825)))))AND(v0.c0 COLLATE BINARY)))OR((((vt0.c0))=((rt0.c0))))), ((TRIM(DISTINCT rt0.c1))GLOB(SUM(v0.c0))), CASE (((v0.c0))==((rt0.c2)))  WHEN CASE WHEN '-1289213891' THEN rt0.c3 END THEN (((((((((((('ND')OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))OR(0.5658161644666923)))OR(rt0.c2)) ELSE CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END END, (json_quote(rt0.c0) IN ()), CAST(((vt0.c0)%('')) AS NUMERIC), rt0.c3 FROM vt1, rt0, vt0;SELECT DISTINCT ((((CAST(NULL AS NUMERIC))OR(CAST(rt0.c3 AS TEXT))))OR(COUNT(*))) FROM rt0, vt0, v0 INNER JOIN vt1 ON CASE WHEN ((vt0.c0) NOT BETWEEN ('0뜤%M') AND (vt1.c0)) THEN CAST(rt0.c0 AS REAL) END; -- 61ms;
SELECT CASE (NOT (rt0.c1))  WHEN (~ (v0.c0)) THEN v0.c0 WHEN ((vt0.c0) IS FALSE) THEN CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE v0.c0 END WHEN CAST(vt0.c0 AS INTEGER) THEN (~ (vt0.c0)) END FROM vt0, v0, rt0 WHERE (CAST(NULLIF(NULL, NULL) AS REAL));SELECT ALL ((NULL) NOT BETWEEN (((rt0.c3)LIKE(rt0.c2))) AND (load_extension(rt0.c0, rt0.c1))) FROM rt0, v0, vt1;SELECT (rt0.c3 COLLATE BINARY IN ()) FROM vt1, v0, vt0 WHERE (((COALESCE(DISTINCT '-323413143', NULL, NULL, NULL)) NOT BETWEEN (CAST('L5' AS BLOB)) AND ((~ (x''))))); -- 0ms;
SELECT ALL CAST(((rt0.c1) NOT NULL) AS TEXT) FROM rt0 WHERE (CASE CAST(NULL AS INTEGER)  WHEN ((-1.730178371E9)>>(NULL)) THEN ((NULL)>('')) WHEN -1238901978 COLLATE RTRIM THEN (- ('-830676849')) WHEN ((NULL)>=('')) THEN (('\r2') IS FALSE) END); -- 0ms;
SELECT x'' FROM v0, vt1, vt0, rt0 WHERE (((((((((((0.5522712348695619) IS FALSE))OR((- (0.7303913247546275)))))OR((NOT ('n4	秸')))))OR(NULL COLLATE RTRIM)))OR(((x'')LIKE(0Xffffffff83404406))))); -- 0ms;
SELECT DISTINCT RTRIM(0xffffffffc06ddeff) FROM v0, vt0, rt0, vt1; -- 0ms;
