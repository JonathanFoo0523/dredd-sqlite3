-- Time: 2024/06/07 14:08:33
-- Database: database88
-- Database version: 3.40.0
-- seed value: 4086016488
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
CREATE TABLE t1 (c0 INT , c1 TEXT , c2 TEXT ); -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c99 INT; -- 2ms;
UPDATE OR IGNORE t1 SET c99=0.1608481040796753; -- 0ms;
VACUUM; -- 6ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1489158164'); -- 1ms;
INSERT OR IGNORE INTO t1(c2, c99) VALUES (NULL, -59066003), (-5.9066003E7, x'6e8d3652'), (x'', -1000490181); -- 4ms;
UPDATE OR REPLACE t1 SET c1=0xffffffffc45dbb3b, c99=0.08094874082476633, c2=' \' WHERE ((((t1.c2 IN ())))==((((t1.c99)=(0x7fffffffffffffff))))); -- 9ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('1243138664'), (NULL), (NULL); -- 14ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29003'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 929793130); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1530206816); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35534'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 895334823);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40069'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 1ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE t1 SET (c99, c1)=(0.14847292913620258, x''); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1844079769); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (-1821138978); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('-1819566003'); -- 6ms;
ANALYZE; -- 5ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1441038948); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1000490181);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '17767'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1606419976'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA journal_mode; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c75; -- 1ms;
UPDATE OR FAIL t1 SET (c99)=('-1821138978') WHERE (((x'')) BETWEEN ((((((t1.c99)AND(t1.c2)))AND(t1.c99)))) AND ((t1.c75))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1819566003,14');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=x''; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO t1(c75, c2, c99) VALUES (0.9045939653810449, NULL, ''), (0.1630867744667135, 1022428395, NULL), ('', ' \', x''), (0.6973408913106272, '-1552682320', ''), (x'', '-2122511389', 0.27974853967425617); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1084950707); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-362633853,13');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1856189936,14');\n; -- 0ms;
PRAGMA cache_spill = 1148451457939615021; -- 0ms;
UPDATE OR REPLACE t1 SET c99=0.9237121368363495; -- 0ms;
PRAGMA mmap_size; -- 1ms;
PRAGMA short_column_names = true; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i42 ON t1(CAST((c99 IN ()) AS TEXT) DESC,((((CASE 0.927742973387133  WHEN c75 THEN c99 END)OR(STRFTIME(c99, NULL, c75))))AND(x'9327')) ASC,(CASE WHEN c1 THEN c75 END IN ()),(((((c75, c75, 1457108493)) NOT BETWEEN ((c99, c2, c1)) AND ((c1, c1, c1)))) NOT NULL) DESC) WHERE NULLIF(DISTINCT ((c1) BETWEEN (c1) AND (c99)), ((c2)/(c2))); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c2 TO c92; -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=1243138664,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18947'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '52749'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3657'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58592'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '17306'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 515634753); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '25874'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'ce9d'); -- 1ms;
INSERT OR IGNORE INTO t1(c1, c75, c92, c99) VALUES (1129564500, '1700164859', '767960941', -1661355769); -- 7ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=0X4d81b232 WHERE NULL; -- 0ms;
INSERT OR REPLACE INTO t1(c1) VALUES (x'8d68'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c75, c99, c1, c92) VALUES ('1763474622', x'', 0.9332695407081499, x'ffb4'); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0xffffffffcf25f386; -- 0ms;
UPDATE t1 SET (c1)=(NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 2067285975);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 358912964);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA incremental_vacuum(-362633853); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE DELETE ON t1 FOR EACH ROW  BEGIN SELECT RAISE(IGNORE);END; -- 0ms;
UPDATE OR ABORT vt0 SET c0=NULL; -- 0ms;
PRAGMA incremental_vacuum(1457108493); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1072720212); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26632'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1479488933); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20004'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 799297314); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
ALTER TABLE t1 ADD COLUMN c81 REAL; -- 1ms;
INSERT OR ABORT INTO t1(c92, c99) VALUES (x'', '-719256453'); -- 1ms;
ALTER TABLE t0 RENAME TO t2; -- 0ms;
INSERT OR ROLLBACK INTO t1(c92) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53391'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1286755090); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '55447'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50408'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46573'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA secure_delete; -- 0ms;
UPDATE OR FAIL t2 SET (c0, c0)=(0.213698904568425, 0Xffffffff9e51cb21) WHERE (~ (t2.c0)) COLLATE RTRIM; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1120562028); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1606419976,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
REINDEX i42; -- 0ms;
PRAGMA main.application_id = -3996586376389537271; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t2(c0) VALUES (0Xffffffffb5a86f5c); -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1761324245); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1660104416); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 611648195); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-59066003,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '30431'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 2ms;
INSERT OR IGNORE INTO t1(c1, c92, c81) VALUES (0.12455461954779223, x'c66fe75a', '-1638806751'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2125354974); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1747380989,12');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1425676573); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1326644957); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1177935165); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27386'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1022428395);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 319362751); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33585'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1829433387); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO t1(c99, c81, c75, c1, c92) VALUES (0.0, 0.14847292913620258, '-1827336042', 0.887902996441859, 'N'), (NULL, -59066003, '	_d(aU', 0Xffffffffbcdd0b3f, 0Xffffffffca410ef8), ('<ZEӫVZ', x'e412', NULL, '1932767252', 0.4877613518924441); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0Xffffffff9cf9b907); -- 2ms;
PRAGMA temp.short_column_names = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c75)=(-1588517350) WHERE (((((t1.c99, NULL, t1.c1)) NOT BETWEEN ((t1.c92, t1.c1, t1.c92)) AND ((t1.c92, t1.c81, t1.c1))))IS NOT(CAST(t1.c75 AS TEXT))); -- 0ms;
PRAGMA main.reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE OR FAIL t2 SET (c0, c0)=(0.19610000135469374, '-1437527546'); -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 683518721); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO t2(c0) VALUES (0.5548596491204469); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('1330967686'), ('2144627831'), ('1330967686'); -- 1ms;
PRAGMA main.defer_foreign_keys = false; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'b7fe'); -- 2ms;
PRAGMA temp.reverse_unordered_selects = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t2 VALUES ('ሆ,'); -- 0ms;
REINDEX; -- 1ms;
INSERT OR REPLACE INTO t1(c75) VALUES (0X6a87503); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('0.08094874082476633'); -- 0ms;
ALTER TABLE t2 RENAME TO t0; -- 2ms;
UPDATE OR IGNORE vt0 SET c0='-1819566003'; -- 2ms;
INSERT OR FAIL INTO t1 VALUES (0x1922683f, NULL, 0X67f31a8b, x'90b324b0', x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (388329493); -- 0ms;
INSERT OR ABORT INTO t1(c81, c92, c99, c75) VALUES (NULL, NULL, '-2096508137', x'faed'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', x'704a', 0.213698904568425))=(('895334823', NULL, '1435056562')))) NOT BETWEEN (CAST(0.1608481040796753 AS BLOB)) AND ('430683768')); -- 0ms;
COMMIT; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i24 ON t1((((c75))==((c75))) COLLATE BINARY,(- (((((c99)OR(c92)))AND(NULL)))) COLLATE NOCASE,(((((c1, c75, c99, c99, c92))<=((c99, NULL, c81, c75, c75))))<=(((c81) NOT NULL))) COLLATE NOCASE,((((((((((((((((c75)AND(c92)))OR(c1)))OR(c92)))AND(c99)))OR(CAST(c99 AS REAL))))OR((c81 IN ()))))OR(((c99)<>(c81)))))AND(((c81) NOT NULL))) COLLATE RTRIM ASC,((((c1)+(c75))) IS FALSE) COLLATE NOCASE); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE t1 SET (c75, c75)=('[]', '17749827') WHERE ((IFNULL(DISTINCT t1.c81, t1.c1))>=(((t1.c81) NOT NULL))); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL ((CAST(t1.c1 AS NUMERIC)) BETWEEN (((t1.c92) IS FALSE)) AND (((x'e823')>=(t1.c92)))), ((CAST(t0.c0 AS INTEGER)) NOT NULL), ((((t1.c99)AND(t1.c81)))IS(((t1.c99) BETWEEN (t1.c75) AND (t1.c81)))) FROM t0, t1; -- 0ms;
SELECT ((MIN(t1.c75))/(vt0.c0)), ((((t1.c92)OR(CASE t1.c92  WHEN t0.c0 THEN vt0.c0 WHEN '-1638806751' THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t1.c92 END)))OR(CASE t1.c92  WHEN t1.c81 THEN t1.c81 ELSE vt0.c0 END)), ((((t1.c81) BETWEEN (t1.c99) AND (t1.c92)))&(vt0.c0)) FROM t0 WHERE ((CAST(0x558939b2 AS REAL) IN ()));SELECT DISTINCT (~ (t0.c0)) FROM t1;SELECT ALL vt0.c0 FROM t0;SELECT CASE WHEN SUM(t1.c99) THEN t1.c99 END FROM t0, t1, vt0 WHERE ((('1243138664')>(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t1.c81))||((t1.c92 IN (t1.c99)))) FROM t1, t0, vt0 WHERE ((((((('1856189936') NOT NULL))AND(((0X6f60db4b)OR('1129564500')))))AND((((NULL, '&JPd\r', x'', NULL, ' \'))=((0.39083257531022086, x'', NULL, '', x'')))))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT CASE t1.c99  WHEN t1.c75 THEN t1.c99 ELSE t0.c0 END, 0.14577711466136223) FROM t1, t0, vt0 WHERE ((+ ((~ (0xffffffffa373f2b0))))); -- 0ms;
SELECT DISTINCT CASE WHEN (+ (t1.c99)) THEN ((t1.c99) NOTNULL) WHEN 0.8339332462486535 COLLATE RTRIM THEN CASE WHEN t1.c92 THEN t1.c99 ELSE t1.c92 END WHEN CASE WHEN t0.c0 THEN t1.c81 END THEN (vt0.c0 IN (t1.c75)) ELSE t1.c81 COLLATE NOCASE END FROM vt0, t0 LIMIT -1845853917;SELECT DISTINCT ((((((t1.c99)AND(vt0.c0)))OR(t0.c0)))*(((t1.c92)|(t1.c99)))) FROM vt0, t1, t0 WHERE ((((((x'')||(NULL)), 0.08316663907831079 COLLATE BINARY, MIN('\n_W''r&', 0xffffffffca410ef8, '', 'D')))>=((((NULL) IS TRUE), ABS(NULL), 'jLOEnY')))); -- 0ms;
SELECT DISTINCT ((((t0.c0)LIKE(t1.c1))) ISNULL) FROM vt0, t0 WHERE ((NOT (NULL)));SELECT NULL FROM t1 NOT INDEXED, vt0 WHERE ((((0.8339332462486535)) BETWEEN (((('1330967686')GLOB(x'')))) AND (((-1.437527546E9 IN ()))))); -- 0ms;
SELECT DISTINCT ((TRIM(t1.c99))>>(((t1.c1) IS FALSE))) FROM t1, t0, vt0 WHERE (((((((x'7238')<(0x4295244f)))AND(((x'71ca') IS TRUE))))AND(((NULL)/(0.08316663907831079))))); -- 0ms;
SELECT DISTINCT ((t1.c81 COLLATE NOCASE)OR(((t1.c92)|(t1.c92)))) FROM t0;SELECT ALL (((t1.c1)!=(t1.c75)) IN ((vt0.c0 IN ()), t0.c0 COLLATE NOCASE)), UNLIKELY(DISTINCT ((t1.c92) NOT BETWEEN (t1.c1) AND (vt0.c0))), '895334823' FROM t0;SELECT (~ (((t1.c92)<=(t1.c92)))), ((((t0.c0))>=((t1.c1))) IN (((t1.c99) ISNULL), ((t1.c1)+(vt0.c0)))), CASE (((vt0.c0, t1.c99, 0x6a87503)) NOT BETWEEN ((t1.c92, t1.c1, t1.c1)) AND ((t1.c81, t0.c0, t1.c75)))  WHEN ((t1.c81) ISNULL) THEN (((t1.c99))<=((t0.c0))) END FROM t0;SELECT ALL t1.c92, CAST(CAST(t0.c0 AS NUMERIC) AS TEXT), ((vt0.c0) NOT NULL) FROM vt0, t1, t0 WHERE (((CASE 0Xffffffffca9fadb0  WHEN '-1836838190' THEN 0.7816048371330444 ELSE -385715045 END)<=((('*rGmbo-') NOT NULL)))); -- 0ms;
SELECT ALL CAST((((vt0.c0))>((t1.c1))) AS BLOB), CAST(((vt0.c0)<<(t1.c1)) AS BLOB), ROW_NUMBER() OVER () FROM vt0, t1; -- 0ms;
SELECT DISTINCT AVG(((t1.c99)>(t1.c99))) OVER (), (NOT (NULLIF(vt0.c0, t1.c1))), CAST(GROUP_CONCAT(t1.c99) AS NUMERIC) FROM t0;SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN (CASE WHEN t1.c99 THEN t1.c99 ELSE t0.c0 END) AND (((vt0.c0)<<(t1.c81)))) FROM t0 WHERE (((HEX(0.27974853967425617))*((('358912964')IS NOT(0.8769448923697669)))));SELECT ALL (+ ((((t1.c92)) NOT BETWEEN ((t1.c81)) AND ((t1.c75))))) FROM vt0, t1, t0 WHERE (((UPPER(DISTINCT '1117070415')) IS FALSE)) LIMIT -222208516 OFFSET -1299292465; -- 0ms;
SELECT DISTINCT ((((~ (t1.c1))))=((((t1.c81) NOT BETWEEN (t0.c0) AND (t0.c0))))), ((((CASE WHEN vt0.c0 THEN t0.c0 END)AND((((t1.c81, t1.c1, t1.c75))=((t1.c81, t1.c81, t1.c92))))))AND(highlight(t1.c99, vt0.c0, t1.c75, t1.c1))), (NOT (COUNT(*))) FROM vt0, t1, t0 WHERE ((((COALESCE(x'0774', 0.745720459861322, 0.48130027420584565, '')))>=((json_array_length(x''))))) ORDER BY ((((t1.c81) IS TRUE)) NOTNULL) ASC;SELECT DISTINCT (((t1.c99, vt0.c0, vt0.c0)) BETWEEN (('-1325186', CASE t1.c81  WHEN t1.c92 THEN t1.c92 ELSE t1.c92 END, (NOT (t1.c99)))) AND ((LOWER(DISTINCT vt0.c0), '-1418969061', t1.c92 COLLATE RTRIM))) FROM vt0 WHERE ((+ (NULLIF(x'', 0Xffffffffc1f5afab)))) ORDER BY ((((vt0.c0))<=((t0.c0))) IN (t1.c1)) ASC;SELECT (((~ (vt0.c0)))LIKE(((((t1.c81)OR(t1.c92)))AND(t1.c92)))) FROM t0;SELECT ALL LEAD(CASE ((((t0.c0)AND(t0.c0)))AND(t0.c0))  WHEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, NULL, 'D', t0.c0, t0.c0))) THEN t0.c0 COLLATE BINARY ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND ('-583441205')) END, t0.c0, (~ (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) OVER (), ((((((((AVG(t1.c75))OR(AVG(t1.c81))))AND((((t1.c75)) NOT BETWEEN ((t1.c99)) AND ((t0.c0))))))AND((t1.c99 IN ()))))AND(CASE WHEN t1.c81 THEN t1.c81 ELSE t1.c1 END)), (((((t0.c0) IS TRUE)))<(((+ (t0.c0))))), AVG(CAST(x'' AS NUMERIC)) OVER (), ((((((t1.c99)AND(t0.c0)))OR(x'49e0'))) BETWEEN (((t1.c99)+(t1.c99))) AND (NULLIF(t1.c99, t1.c99))) FROM t0 WHERE ((((('f[r]jH')|('DIG')))<=(((((((((x'895e')AND('#!')))OR(0.6676407956148803)))OR(x'5392')))AND(0.029887445279326408)))));SELECT ALL '' FROM t1, vt0; -- 0ms;
SELECT ALL '-678139756' FROM t0; -- 0ms;
SELECT DISTINCT TOTAL(((t1.c99)<(t0.c0))) OVER () FROM vt0 WHERE ((((('3\r}|~YCw')) NOT BETWEEN ((x'')) AND ((''))) IN ()));SELECT ALL (LIKE(t1.c81, t1.c81) IN ((+ (t1.c92)))), -8.1959641E8, CAST((~ (vt0.c0)) AS TEXT) FROM t0;SELECT LAG(-1.821138978E9 COLLATE RTRIM, t0.c0, CASE ((((vt0.c0)AND(t0.c0)))OR(t0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN 'dig' WHEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (- (t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN vt0.c0 COLLATE NOCASE END) OVER () FROM t0, vt0 WHERE ((((0.6835554988712387 IN ())) BETWEEN (CAST(NULL AS REAL)) AND (((('', 0.07524576209550426, NULL)) BETWEEN ((0.5674277827062943, NULL, 0.938374936641022)) AND ((NULL, 0.5155165670456403, 0.34880608165928384)))))); -- 1ms;
SELECT DISTINCT MIN((t0.c0 IN ())) FROM vt0, t0, t1 GROUP BY ((((((t0.c0)OR(0.847931627757656)))OR(t0.c0)))OR((NOT (t1.c99)))) LIMIT -1955713074 OFFSET 767960941; -- 0ms;
SELECT (- (CAST(t1.c81 AS NUMERIC))) FROM t1, t0; -- 0ms;
SELECT DISTINCT COUNT(t1.c92), (((((((t1.c92, t1.c81, t1.c92)) NOT BETWEEN ((vt0.c0, t1.c92, NULL)) AND ((t1.c99, '禃', vt0.c0))))OR(NULL)))OR(895334823)), ((((HEX(DISTINCT t0.c0))AND(((((t0.c0)OR(vt0.c0)))AND(t1.c1)))))AND(CASE WHEN t1.c92 THEN t0.c0 END)) FROM t0, vt0, t1 WHERE ((('1763474622')=(-1613248381)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((((((t1.c92)AND(t1.c81)))OR(t1.c99)))OR(t0.c0)))OR(t1.c99)))<=(((t1.c75)&(t1.c92)))) FROM t0 NOT INDEXED, vt0, t1 WHERE (CASE WHEN -1000490181 COLLATE RTRIM THEN (+ ('0.9045939653810449')) END) GROUP BY CASE WHEN ((t0.c0) ISNULL) THEN (((t0.c0, t1.c81, -6.78139756E8)) BETWEEN ((vt0.c0, 0.4386798952382227, t1.c1)) AND ((t1.c99, t1.c75, t1.c1))) ELSE (+ (t1.c75)) END, CAST((vt0.c0 IN ()) AS REAL), NULL HAVING 0.938374936641022; -- 2ms;
SELECT DISTINCT TYPEOF(LIKELIHOOD(t1.c1, 0.7511168825685616)), (((~ (vt0.c0))) ISNULL), COUNT(*) FROM t0 NOT INDEXED;SELECT DISTINCT ((vt0.c0)==((- (vt0.c0)))), ('M*' IN (t1.c81)) COLLATE RTRIM, NULL FROM vt0 WHERE ((((x'a7fa')) NOT BETWEEN (((0xffffffffeb6e24dc IN ()))) AND ((TYPEOF(DISTINCT x'8699')))));SELECT DISTINCT DATE(((vt0.c0) IS TRUE), (t1.c1 IN ()), ((t1.c99) NOT NULL)) FROM t0, vt0, t1; -- 0ms;
SELECT DISTINCT ((t1.c1) NOT BETWEEN ((((x''))<((t0.c0)))) AND (MAX(vt0.c0))) FROM t0 GROUP BY ((TRIM(DISTINCT t1.c81))=(((t1.c99) BETWEEN (t0.c0) AND (t1.c1)))) HAVING ((t1.c75) NOT BETWEEN (t1.c81) AND (t1.c75)) COLLATE NOCASE;SELECT DISTINCT (NOT (AVG(t1.c92))), (((((t1.c75)) NOT BETWEEN ((t1.c75)) AND ((vt0.c0))))*(x'')), CASE AVG(t1.c1)  WHEN (((t1.c81, t1.c81, t1.c1)) BETWEEN ((t1.c75, vt0.c0, vt0.c0)) AND ((t1.c81, t1.c1, t0.c0))) THEN ((t1.c1)GLOB(t1.c92)) END, RANK() OVER ( ORDER BY (((((t1.c1 IN ()))AND(((((t0.c0)OR(t1.c81)))OR(t1.c92)))))AND((+ (t1.c1))))  NULLS LAST ROWS (((t1.c81)) BETWEEN (((t1.c92 IN ()))) AND (((NOT (t1.c99))))) PRECEDING EXCLUDE CURRENT ROW), CASE WHEN (('111703299') ISNULL) THEN t0.c0 END FROM t1 UNION SELECT ((CAST(t1.c92 AS REAL)) IS TRUE), NULL, ((((t0.c0)) NOT BETWEEN ((t1.c99)) AND ((vt0.c0))) IN (((((t1.c99)AND(t1.c75)))OR(t1.c75)))), CAST(((t1.c92) IS FALSE) AS REAL), ((((((t1.c1)AND(t0.c0)))AND(NULL)))||(((t1.c99) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0, t1, t0;SELECT CAST('' AS BLOB) FROM t1, t0; -- 0ms;
SELECT (((((t1.c92)) NOT BETWEEN ((t1.c92)) AND ((x'')))) NOT NULL), (((t1.c92)) BETWEEN ((LOWER(DISTINCT t0.c0))) AND (((((t1.c75))==((x'')))))), ((NULL COLLATE RTRIM)AND(((t1.c99)*(t1.c99)))) FROM vt0 GROUP BY CAST(((t1.c81)AND(t1.c81)) AS BLOB) HAVING json_patch((x'' IN ()), HEX(t1.c99));SELECT DISTINCT x'' FROM vt0, t0, t1 WHERE ('0'); -- 1ms;
SELECT CASE WHEN t1.c1 THEN ((((t1.c1)OR(t1.c92)))AND(t0.c0)) WHEN SUM(t1.c99) THEN CASE t1.c1  WHEN t0.c0 THEN 0Xffffffffee00eeac WHEN t1.c81 THEN t1.c1 WHEN t1.c81 THEN t1.c92 ELSE t1.c1 END WHEN t1.c1 THEN (((t1.c81, t0.c0, t1.c92)) BETWEEN ((t1.c92, t1.c92, t1.c75)) AND ((vt0.c0, t1.c81, t1.c1))) END FROM t0, t1, vt0 NOT INDEXED WHERE ((('-1747380989') BETWEEN (0.1608481040796753) AND ((('') NOT BETWEEN ('now') AND ('v^)3'))))); -- 0ms;
SELECT (+ (((t1.c1) BETWEEN (t1.c81) AND (t1.c92)))) FROM vt0;SELECT DISTINCT 0.7285681212366735 FROM vt0; -- 0ms;
SELECT ALL t1.c75 FROM t0;SELECT ALL ((CASE t1.c81  WHEN t1.c81 THEN t1.c99 WHEN t1.c92 THEN t1.c1 WHEN t1.c81 THEN t1.c92 WHEN t1.c81 THEN t1.c99 WHEN t1.c81 THEN t1.c1 END) ISNULL), t1.c75, ((t1.c92) BETWEEN (((t1.c99) BETWEEN (vt0.c0) AND (t1.c99))) AND (((t1.c81)-(t1.c1)))) FROM t1 WHERE ((((1990347306 COLLATE BINARY))<(((((NULL))<((NULL))))))) ORDER BY CAST(t1.c75 COLLATE BINARY AS BLOB)  NULLS FIRST;SELECT ALL x'' FROM t0 WHERE (((('430683768') IS FALSE) IN ((('\n')%('0.887902996441859'))))); -- 0ms;
SELECT ALL ((vt0.c0)|(t1.c92)) COLLATE BINARY FROM t1, vt0, t0 WHERE (CASE ('ikj&CMᓣ' IN ())  WHEN x'' COLLATE NOCASE THEN ((((((((NULL)AND(NULL)))OR(0.004317156672461575)))AND(x'5873845f')))AND(NULL)) END); -- 0ms;
SELECT ALL ((t0.c0 IN ()) IN ()), ((((vt0.c0))>=(('-1247252644'))) IN (((t1.c1) IS TRUE))), CASE WHEN CAST(t1.c81 AS NUMERIC) THEN t1.c75 COLLATE BINARY END FROM t0;SELECT DISTINCT COUNT(((t1.c99)!=(vt0.c0))) OVER () FROM vt0, t0, t1; -- 1ms;
SELECT ALL ((((t1.c92)+(t1.c1))) IS FALSE) FROM t0 WHERE (((x'4b38') NOT BETWEEN ('now') AND (-1964571479)) COLLATE RTRIM) ORDER BY NULL ASC, ((((((t0.c0)AND(t1.c1)))AND(t1.c1))) ISNULL), ((NULL IN ()) IN ()) DESC  NULLS FIRST;SELECT DISTINCT ((- (vt0.c0)) IN ()) FROM t1, t0 LIMIT -2014080480; -- 0ms;
SELECT ALL CASE WHEN LIKELIHOOD(DISTINCT x'520e', 0.4243946831819616) THEN ((t1.c75)%(vt0.c0)) WHEN (t1.c81 IN (t0.c0)) THEN ((t1.c1) NOT NULL) WHEN json_array_length(vt0.c0) THEN LIKE(t1.c99, 0.26085057082010976, '-') ELSE CAST(vt0.c0 AS TEXT) END FROM t0 ORDER BY (((t1.c81)) NOT BETWEEN ((((t1.c92) BETWEEN (vt0.c0) AND (t1.c99)))) AND ((CAST(t1.c81 AS TEXT))))  NULLS FIRST;SELECT DISTINCT ((CAST(t1.c1 AS TEXT)) NOTNULL), CAST((t0.c0 IN ()) AS INTEGER), t1.c99 FROM t0, t1; -- 0ms;
SELECT (((x'')) NOT BETWEEN (((+ (t1.c1)))) AND (((x'e98b' IN ())))) FROM vt0, t0, t1 NOT INDEXED; -- 0ms;
SELECT DISTINCT CASE WHEN (t1.c75 IN ()) THEN CASE WHEN t0.c0 THEN t1.c81 END END FROM t0, vt0, t1; -- 0ms;
SELECT CAST(((('﷾^fe')) NOT BETWEEN ((t1.c81)) AND ((t1.c1))) AS INTEGER) FROM t0 WHERE (ROUND(LIKELIHOOD(DISTINCT -64627985, 0.3584574903158393), ((((((((x'')AND(-552172490)))OR(NULL)))OR(x'225f')))AND(725441196)))) ORDER BY CAST(((t1.c81) NOT BETWEEN (t1.c1) AND (vt0.c0)) AS BLOB), CASE t1.c92 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN ((t0.c0) BETWEEN (t1.c81) AND (x'e30d')) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t1.c99 THEN t1.c81 WHEN t0.c0 THEN t0.c0 END END  NULLS FIRST;SELECT DISTINCT CAST(t1.c99 COLLATE NOCASE AS REAL) FROM vt0, t1, t0 WHERE ((+ ('1284290384')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT t1.c81 FROM t0 WHERE (((((0.7905816133301363) IS FALSE)) IS FALSE));SELECT ALL -626608380 FROM t0, vt0; -- 0ms;
SELECT t1.c81 FROM t0, vt0 WHERE (((((('-59066003')) NOT BETWEEN ((0.213698904568425)) AND ((0.6540584206155663)))) NOT BETWEEN (((((((((NULL)OR(0.4386798952382227)))OR(0.9058520174996163)))OR(0.28798750595570055)))OR(0.938374936641022))) AND ((-1894816908 IN (0.08316663907831079)))));SELECT DISTINCT ((t1.c1)-(highlight(vt0.c0, vt0.c0, t1.c81, vt0.c0))) FROM t0, vt0;SELECT ALL (((((t1.c99))<=((t1.c1)))) BETWEEN (vt0.c0) AND (((0.6976648011746014)&(t1.c1)))), (((('Jvs''q')%(vt0.c0)))<=(((t0.c0)IS('0.9237121368363495')))), MAX((((vt0.c0))==((t1.c92)))) FROM vt0, t1, t0 WHERE ((((((('')OR('[]')))AND(NULL)))%(((x'') NOT BETWEEN (x'') AND (NULL))))) ORDER BY (((t1.c92, NULL, t1.c99)) NOT BETWEEN ((CASE t1.c81  WHEN t1.c99 THEN t1.c1 ELSE t0.c0 END, (((t1.c75))>=((t1.c92))), NULL COLLATE BINARY)) AND ((CASE vt0.c0  WHEN t1.c1 THEN t1.c92 ELSE t1.c81 END, (((t1.c81))<>((t1.c75))), ((t1.c99) NOT NULL)))) ASC; -- 0ms;
SELECT ALL ((((t0.c0)/(t0.c0))) NOT BETWEEN (((t1.c81) ISNULL)) AND (t0.c0)) FROM t1, vt0 WHERE (CASE WHEN (('-1747380989')IS(NULL)) THEN 0.6973408913106272 COLLATE BINARY END);SELECT DISTINCT (((((t1.c75)) BETWEEN (('0.9058520174996163')) AND ((t1.c75)))) BETWEEN (CAST(t1.c92 AS REAL)) AND (((t1.c75) NOT BETWEEN (t1.c92) AND (t1.c81)))) FROM vt0, t1, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) NOT BETWEEN (t1.c99) AND (t1.c99))) OVER () FROM t1, t0 INDEXED BY i24 WHERE (((((0.07524576209550426 IN ()), ((-1895986116)AND(x'02d7')), (('-421391266')||('笠m1aY}2V'))))==((((0.1630867744667135)+(0xffffffff92c636c1)), NULLIF('', '-362633853'), LIKE(0.9485492464935319, NULL)))));SELECT ALL LTRIM(((vt0.c0)*(t1.c1))) FROM t0, vt0, t1 WHERE (((((693132224)<=(NULL)))-((((('P(Z')OR(0.18100972319467767)))AND(1e500))))) GROUP BY (+ (((((x'7c0c')AND(t0.c0)))AND(t1.c75)))); -- 0ms;
SELECT (t0.c0 IN (vt0.c0, 0Xffffffffa69d2bda)) COLLATE NOCASE FROM vt0, t0 LIMIT -1158911374; -- 0ms;
SELECT ((vt0.c0) NOT BETWEEN (t1.c75) AND (t0.c0)) COLLATE RTRIM FROM t0, t1, vt0; -- 0ms;
SELECT DISTINCT ((t1.c99)%((~ (t1.c1)))) FROM t1; -- 0ms;
SELECT DISTINCT (((vt0.c0) IS FALSE) IN (((t1.c92)>=(t1.c99)))) FROM t0, vt0 WHERE (((((NULL)&(x'')))|(LIKELIHOOD(DISTINCT x'', 0.18759321279244123)))) GROUP BY (+ (LOWER(DISTINCT t1.c99)));SELECT DISTINCT t1.c99 FROM t0, vt0, t1 WHERE (-1747380989); -- 0ms;
SELECT ALL LENGTH(COUNT(*)) FROM t0, vt0 WHERE (((('oz~JQY5J', NULL, '1290874570')) BETWEEN ((((NULL) BETWEEN (0X4d81b232) AND (0.8090999750112873)), CAST(x'' AS TEXT), NULLIF('1868618571', NULL))) AND ((NULL COLLATE BINARY, '^', (x'' IN ('1977706333')))))) LIMIT 557213467 OFFSET 415631177; -- 0ms;
SELECT (((t1.c75) NOTNULL) IN ()) FROM t0, vt0, t1 WHERE (((((((((TRIM(DISTINCT '-1606419976'))AND((((('8,\n')OR('-1845853917')))OR(1178012500)))))OR('0.9058520174996163')))OR(CASE x'7386'  WHEN x'' THEN 'Ar!c' WHEN NULL THEN x'abb5' WHEN 0.7663251158611767 THEN 'eV3*' WHEN 0.9485492464935319 THEN x'' WHEN x'' THEN '' ELSE 0xffffffff8b6e2fce END)))OR(TRIM(DISTINCT '-345103140', 'TD')))); -- 0ms;
SELECT ALL ((((((((((((t0.c0)OR(vt0.c0)))OR(t1.c75)))OR(0.8772407125655386)))AND(TOTAL(t1.c92))))AND(CASE WHEN t1.c81 THEN t1.c75 END)))AND(TOTAL(0xbdc705f))) FROM vt0 INDEXED BY i24, t1, t0 WHERE ((((CASE WHEN NULL THEN '-435537946' END))=((CASE WHEN -336234109 THEN 0.8916699847625411 ELSE NULL END))));SELECT ALL ((t1.c92) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE BINARY FROM t0, t1, vt0 WHERE (NULL); -- 0ms;
SELECT t1.c75 FROM t1, vt0, t0 WHERE ('_瑇-~' COLLATE BINARY) LIMIT -819596410 OFFSET 1529966912; -- 0ms;
SELECT DISTINCT '', ((((t1.c1)<(t1.c99)))|(COUNT(x''))), CAST(t1.c92 AS NUMERIC) COLLATE BINARY COLLATE NOCASE FROM t1 WHERE (((((NULL)>=('-1819566003')))LIKE(((((1.1780125E9)AND('n,+GIW?ᯤo')))AND(1529966912))))); -- 0ms;
SELECT DISTINCT NTILE(((json_extract(t1.c99, t1.c99, t1.c99, 0.2101150330825352, x'', t1.c81))||(((((t1.c1)OR(t1.c81)))OR(t1.c81))))) OVER () FROM t1;SELECT DISTINCT CAST((vt0.c0 IN (t1.c99)) AS REAL), (- (0x4295244f)), (((((t1.c1))<=((t1.c1)))) BETWEEN (0.8769448923697669) AND (CASE vt0.c0  WHEN t1.c92 THEN t0.c0 ELSE vt0.c0 END)) FROM t1 WHERE (((json_type(x'')) NOT BETWEEN (((x'980e')>=('eTkRu/'))) AND (CAST(0.6598001271308885 AS BLOB))));SELECT DISTINCT DENSE_RANK() OVER () FROM vt0, t1; -- 0ms;
SELECT ((vt0.c0) BETWEEN (t0.c0) AND ('-1833560393')) COLLATE NOCASE, ((((((t1.c81)AND(t1.c81)))OR(t1.c1))) NOT BETWEEN ((t1.c99 IN (t0.c0))) AND (vt0.c0 COLLATE RTRIM)), ((((0.35351735684406893)OR(((t1.c75) BETWEEN (t1.c75) AND (t1.c99)))))AND(t1.c75)) FROM t1, vt0 FULL OUTER JOIN t0 ON t1.c81 WHERE ((((((x'a865' IN ()))AND(((('-1851807695', '2073503934', x'', 0Xffffffffe0bea295, x'58240cf2')) NOT BETWEEN (('', '洞#S눲b0T', x'', 't|aU7hw❭]', '-1506408448')) AND ((0Xffffffffbde88231, x'', '-1151855593', '', 'Y1N''s5	s'))))))AND(CHANGES()))) GROUP BY 0x67f31a8b HAVING (((((t1.c75)) NOT BETWEEN ((t0.c0)) AND ((t1.c75))))|(((vt0.c0) BETWEEN (t1.c92) AND (t1.c99))));SELECT DISTINCT (+ (t1.c1)) COLLATE BINARY, ((CAST(t0.c0 AS BLOB))IS NOT(t1.c99)), CASE ((t1.c1) NOT NULL)  WHEN ((vt0.c0) NOTNULL) THEN TRIM(t1.c99) WHEN ((((t1.c92)OR(t1.c1)))AND(NULL)) THEN '-1424264121' WHEN ((t1.c1) NOTNULL) THEN t1.c99 ELSE 0.16235320750942217 END FROM t1, vt0 NOT INDEXED, t0; -- 0ms;
SELECT (t1.c99 IN ()) COLLATE RTRIM, ((((((((((vt0.c0) IS FALSE))AND(((t1.c1)<>(vt0.c0)))))OR(t1.c1)))AND((t0.c0 IN (t1.c1)))))OR((t1.c75 IN ()))), CAST(x'1273e59b' AS REAL) FROM vt0 WHERE (CAST(CAST('' AS NUMERIC) AS TEXT));SELECT DISTINCT ((((CHAR(vt0.c0))AND(7.25441196E8)))AND(((t1.c75) IS TRUE))), CASE COUNT(t1.c75)  WHEN ((((0.0314200639492721)OR(t1.c75)))AND(vt0.c0)) THEN t1.c99 COLLATE NOCASE END, ((((t1.c81) IS FALSE))=(GROUP_CONCAT(t1.c75))) FROM t1 WHERE ((((NULL)) NOT BETWEEN ((((NULL) BETWEEN (0.18100972319467767) AND (x'')))) AND ((((x'') IS TRUE))))) GROUP BY CASE WHEN t1.c1 COLLATE RTRIM THEN (~ (t0.c0)) WHEN ((t0.c0) NOTNULL) THEN (t1.c1 IN ()) WHEN t0.c0 COLLATE BINARY THEN -3.85715045E8 COLLATE RTRIM ELSE ((vt0.c0)|(t1.c75)) END, ((((vt0.c0)<(t0.c0)))>=(((t1.c92) NOT BETWEEN (t1.c81) AND (t1.c81)))), (((t0.c0 IN ()))OR((t1.c1 IN ()))), (((~ (t1.c1)))|(DATE(t1.c1, t1.c1, t0.c0))), CASE WHEN (((t1.c75)) BETWEEN ((t1.c75)) AND ((t1.c99))) THEN CAST(t1.c92 AS INTEGER) ELSE (~ (t1.c92)) END;SELECT ALL TOTAL((t0.c0 IN (t1.c92, ''))) OVER () FROM vt0, t1, t0; -- 1ms;
SELECT DISTINCT CASE WHEN t1.c75 THEN t1.c92 ELSE t1.c75 END COLLATE BINARY, ((((((((vt0.c0)OR(0.08094874082476633)))AND(t1.c75)))OR(MIN(t1.c92))))OR(TRIM(t1.c75))), CAST(t1.c1 AS TEXT) COLLATE BINARY FROM t1, vt0 WHERE (TYPEOF(CAST(x'cec8' AS TEXT))); -- 0ms;
SELECT CAST(t1.c92 COLLATE NOCASE AS NUMERIC) FROM vt0, t0 WHERE (CASE WHEN (- (1729996267)) THEN NULLIF(DISTINCT -1.955713074E9, '-639005198') END);SELECT ALL (((t1.c99, x'', t1.c75)) NOT BETWEEN ((t1.c81, t1.c75, vt0.c0)) AND ((t1.c92, t0.c0, t1.c1))) COLLATE NOCASE FROM vt0, t1;SELECT DISTINCT (((CAST(t1.c75 AS BLOB)))<=((t1.c81))) FROM t1, t0, vt0; -- 0ms;
SELECT DISTINCT '', TOTAL(((t1.c75) NOT BETWEEN (t1.c81) AND (t1.c81))), ((((CAST(x'' AS BLOB))AND((vt0.c0 IN ()))))OR(COUNT(t1.c92))) FROM t1 WHERE (((x'' COLLATE BINARY) ISNULL)); -- 0ms;
SELECT ALL ((((((vt0.c0)<=(t1.c92)))AND(((vt0.c0)>>(t1.c75)))))OR(0Xffffffff8091e7ef)) FROM t0, vt0 WHERE (((CASE WHEN '' THEN x'b58b' WHEN NULL THEN 'j' WHEN x'80fd' THEN NULL WHEN x'' THEN x'' WHEN 'nx' THEN NULL ELSE NULL END) IS TRUE)) GROUP BY (((t1.c81))==((t1.c1))) COLLATE RTRIM COLLATE RTRIM;SELECT IFNULL(DISTINCT CASE t0.c0  WHEN t1.c92 THEN t1.c75 END, ((t1.c1)&(t1.c92))) FROM vt0, t1;SELECT DISTINCT ((LIKELY(t1.c99)) NOT NULL) FROM t0, vt0 WHERE (x'b8f0' COLLATE NOCASE);SELECT DISTINCT CASE GROUP_CONCAT(t1.c99)  WHEN MAX(vt0.c0) THEN (t0.c0 IN ()) WHEN GROUP_CONCAT(t1.c81) THEN ((t1.c99) ISNULL) WHEN CAST(t1.c99 AS INTEGER) THEN (vt0.c0 IN ()) ELSE (- (x'68bb')) END FROM t1, vt0 WHERE (UPPER(DISTINCT (NOT (' \')))) LIMIT 817755591 OFFSET -690906090; -- 0ms;
SELECT SUM((vt0.c0 IN ())) OVER () FROM t1, vt0, t0 WHERE ((((0X4c8cb750) BETWEEN (0.984061293995794) AND (572152111)) IN ())); -- 0ms;
SELECT ((NULL)LIKE((+ (t1.c1)))) FROM vt0, t0, t1; -- 0ms;
SELECT ALL LAST_VALUE((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(((vt0.c0)*(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) OVER () FROM vt0 WHERE ((((x'' COLLATE BINARY))>((0.9764899067525895 COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT CAST(((((t1.c99)OR(t1.c1)))AND(t1.c99)) AS REAL) FROM t1, vt0 WHERE (((((((((((x'') BETWEEN (NULL) AND (0.5707950330010423)))AND(LIKELY(0.40585290487836057))))AND((('-1805438098') NOTNULL))))OR(((x'')>('-2020596826')))))OR(((NULL)<<('\n_W''r&'))))); -- 0ms;
SELECT x'0ae8' FROM t0 WHERE (((('-1740550200')|(NULL)) IN ())); -- 0ms;
SELECT ((CAST('-53717526' AS REAL)) NOT BETWEEN ((+ (t1.c92))) AND ((~ (vt0.c0)))) FROM t1, vt0 WHERE ((((((0.988498197013237)) BETWEEN (('')) AND ((6.93132224E8))))+(((0.8481347096802624)>>(0.7534263659702473))))); -- 0ms;
SELECT ALL (((t1.c75 IN ()))>=((~ ('')))) FROM t0, vt0 GROUP BY ((vt0.c0)-(t1.c92)) COLLATE NOCASE;SELECT DISTINCT (((((t1.c75)OR(t1.c92)))OR(t1.c81)) IN (((t1.c99)%(vt0.c0)), t0.c0)) FROM t0, vt0, t1 WHERE (((((NULL)AND((NOT (0.6575874024275282)))))AND(LOWER(x'c75c')))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t1.c81)/(vt0.c0))) FROM t1, t0, vt0 WHERE ((((x''))>((0))) COLLATE NOCASE) GROUP BY TYPEOF(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) HAVING MAX(MIN(t1.c75)) ORDER BY NULL COLLATE NOCASE  NULLS FIRST;SELECT ALL ((GROUP_CONCAT(NULL)) IS TRUE) FROM t1, vt0, t0; -- 0ms;
SELECT ALL (((AVG(t1.c1)))<=((NULL))) FROM t1 WHERE ((((x'')) NOT BETWEEN (((((2.073503934E9, x'', -1))>=((-3.36234109E8, '1330967686', NULL))))) AND (((('') NOTNULL))))); -- 0ms;
SELECT ((CAST(t0.c0 AS INTEGER))|(LENGTH(t1.c1))) FROM vt0, t1, t0; -- 1ms;
SELECT DISTINCT TOTAL(((t1.c99)|(NULL))) OVER (), ((((x'0c78') ISNULL)) BETWEEN (CASE WHEN t0.c0 THEN t1.c92 ELSE t1.c92 END) AND (CAST(t1.c81 AS TEXT))), TOTAL(ABS(DISTINCT t1.c1)) OVER ( RANGE t1.c99 PRECEDING) FROM t0;SELECT DISTINCT ((CASE WHEN t1.c92 THEN t0.c0 WHEN '1117070415' THEN t1.c92 WHEN t1.c99 THEN x'6994229013da' ELSE t1.c99 END) NOT NULL) FROM vt0 WHERE (((((x'') ISNULL))OR(CAST(x'' AS TEXT))));SELECT ALL (- (((t1.c75)+(t1.c81)))) FROM t1 WHERE ((((x''))<((x''))) COLLATE BINARY) LIMIT -593687709; -- 0ms;
SELECT DISTINCT ((LOWER(t1.c99))GLOB((((t1.c99, vt0.c0, t0.c0))<>((t1.c81, t1.c99, t1.c1))))) FROM t1, vt0, t0; -- 0ms;
SELECT ALL (- ((NOT (t1.c92)))), t0.c0, (- (t1.c99)) FROM vt0 WHERE (CASE CAST(-1.437527546E9 AS INTEGER)  WHEN (((0.9399188067037322, x'', 0.00906865358267439)) NOT BETWEEN ((NULL, '0.2101150330825352', '-1552682320')) AND (('&JPd\r', 0x6bdfbec9, '-1955713074'))) THEN (~ (0.3101129321573598)) ELSE ((('0.9045939653810449'))<=((0x67f31a8b))) END);SELECT ALL COUNT(*), LIKELY(((t0.c0) NOTNULL)), COUNT(((t1.c81)IS(vt0.c0))) FROM t1, vt0;SELECT ((vt0.c0)IS NOT(t1.c75)) COLLATE BINARY FROM t0 INDEXED BY i24;SELECT DISTINCT ((((('D', vt0.c0, t1.c99))<((t1.c99, t0.c0, t0.c0)))) ISNULL) FROM vt0 WHERE ((NOT ((NOT (0.6227057901933731))))) ORDER BY CAST(t1.c81 AS BLOB) COLLATE RTRIM ASC;SELECT (((t0.c0)>>(t1.c1)) IN ()), 0.18227002962841565, COUNT(*) FROM t1, t0 LEFT OUTER JOIN vt0 ON (((0.285104260772546)) BETWEEN (((((t1.c1))=((''))))) AND ((((t1.c81)GLOB(vt0.c0))))); -- 1ms;
SELECT ((((t1.c99 IN ())))=((((vt0.c0)*(t0.c0))))), (((((vt0.c0 IN (t0.c0)))AND(CASE vt0.c0  WHEN NULL THEN t1.c99 END)))AND(IFNULL('693132224', vt0.c0))), IFNULL(DISTINCT ((((t0.c0)AND(vt0.c0)))OR(t1.c99)), ((t1.c99)=(0.9058520174996163))) FROM vt0;SELECT (('now')AND(CASE t0.c0  WHEN t1.c1 THEN t1.c92 ELSE t1.c92 END)) FROM t1 WHERE (0.908939656604707);SELECT TOTAL(IFNULL(DISTINCT 'now', 'BTgc	<K')), (((t1.c92, vt0.c0, t1.c99, x'', vt0.c0)) BETWEEN ((((t1.c1) BETWEEN (t0.c0) AND (t1.c99)), ((((t1.c81)OR(t1.c99)))OR(vt0.c0)), MAX(t1.c75), t1.c75, (((t1.c75))<((t1.c81))))) AND ((((t1.c81)<=(t1.c75)), (t1.c81 IN (t1.c1)), MIN(t1.c92), ((t1.c99) NOT BETWEEN (t1.c81) AND (t1.c1)), (t1.c1 IN (t1.c81))))), (NULL IN ()) FROM t0, vt0, t1 WHERE ((((NULL IN ()))<>((+ (x'1921'))))); -- 0ms;
SELECT DISTINCT -1519100867, ((((t1.c99)<(t1.c81)))/((t1.c99 IN ()))), CASE (((t1.c81, 0.5544016045717844, 2.144627831E9))<((t1.c1, t0.c0, t1.c92)))  WHEN CAST(t1.c81 AS INTEGER) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0)-(t1.c92)) THEN (((t1.c75))>=(('sP'))) WHEN (~ (t1.c81)) THEN t1.c81 COLLATE RTRIM ELSE t1.c75 END, ((((t1.c75) BETWEEN (t1.c1) AND (t1.c92))) BETWEEN ((~ (t1.c1))) AND (t0.c0 COLLATE NOCASE)), ((((CASE WHEN '-583441205' THEN t0.c0 END)OR(((t1.c81)&(t1.c99)))))AND(json_object(t1.c75, t1.c75))) FROM t0 WHERE (((((((NULL) NOT NULL))OR(CAST(0.4495207699415412 AS BLOB))))OR(x'' COLLATE NOCASE))) ORDER BY 0xffffffffaf50da6d  NULLS LAST, (((t1.c92)*(t1.c99)) IN ((+ (t1.c92))))  NULLS LAST;SELECT DISTINCT x'', SUM(((vt0.c0)AND(t1.c92))), FIRST_VALUE(CASE WHEN ((vt0.c0)-(t0.c0)) THEN (NOT (t0.c0)) ELSE t0.c0 COLLATE NOCASE END) OVER ( PARTITION BY (('')/((t1.c75 IN ()))), ((t1.c99 COLLATE NOCASE) BETWEEN ((~ (t1.c99))) AND (0.6222224077369336))) FROM vt0, t0;SELECT DISTINCT CASE CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t1.c81)) THEN (((t0.c0)) NOT BETWEEN ((t1.c99)) AND ((t1.c1))) ELSE CAST(t0.c0 AS TEXT) END FROM t1, t0;SELECT DISTINCT (((0.9353313841126367 IN ())) NOTNULL), t0.c0, (CASE vt0.c0  WHEN t0.c0 THEN '0.3101129321573598' WHEN t1.c81 THEN 'j' WHEN t1.c81 THEN t1.c92 ELSE t1.c99 END IN ()) FROM t1 NOT INDEXED;SELECT RANK() OVER () FROM vt0, t0 WHERE ((((0.8322270615016394 IN ()))&('' COLLATE BINARY))); -- 0ms;
SELECT (load_extension(t1.c1, vt0.c0) IN ()) FROM t1, t0, vt0 WHERE ((~ (CASE WHEN '-1919855387' THEN x'' END))); -- 0ms;
SELECT DISTINCT '1729996267' FROM vt0, t1 WHERE (((~ ('tV')) IN (17749827))); -- 0ms;
SELECT ((CAST(t1.c75 AS BLOB))<<(AVG(t1.c75))) FROM vt0 WHERE (0.7620978781171746);SELECT DISTINCT NULL FROM t1, t0, vt0 ORDER BY (((t0.c0) NOTNULL) IN (((t0.c0) BETWEEN (t1.c75) AND (t1.c75)), ((((t1.c92)OR(NULL)))AND(t1.c81))))  NULLS FIRST, CASE WHEN ((((t1.c92)OR(t1.c81)))OR(t1.c1)) THEN t1.c81 ELSE DATETIME('', t1.c99, t1.c99) END ASC  NULLS LAST; -- 1ms;
SELECT (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN t1.c99 THEN t0.c0 ELSE t1.c92 END)) AND ((((t1.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))) FROM vt0 RIGHT OUTER JOIN t1 ON ((vt0.c0 IN (vt0.c0)) IN ()) RIGHT OUTER JOIN t0 ON (+ (t0.c0)) WHERE ((((('0.8090999750112873')<=(0.9399188067037322)))>>(((((')etQ ')AND(x'1c9c')))AND(x'99fb'))))); -- 0ms;
SELECT DISTINCT ((((((((((t1.c92)AND(t1.c81)))OR(((t1.c1)%(t1.c75)))))AND(((t1.c75) NOT BETWEEN (t1.c1) AND (t1.c99)))))OR(t1.c99)))AND((('o2.mA﹢') NOT BETWEEN (1593992681) AND ('304442419')))) FROM t1 ORDER BY CAST(0.03636364804360437 AS TEXT), (((0.7816048371330444))=((((t1.c75)&(t1.c1)))))  NULLS FIRST; -- 0ms;
SELECT ALL ((GROUP_CONCAT(t1.c81))IS(((t1.c92)<=(t1.c81)))), ((t1.c75 IN ()) IN ()), CASE WHEN NULLIF(DISTINCT t0.c0, t0.c0) THEN ((t1.c1)%(t0.c0)) ELSE CAST(t1.c81 AS BLOB) END FROM t1 GROUP BY (((((t1.c92 IN ()))AND(CAST(t1.c81 AS TEXT))))OR((((t1.c81)) BETWEEN ((NULL)) AND ((t1.c75)))));SELECT DISTINCT INSTR(((t1.c92) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((((t1.c75)AND(t1.c75)))OR(t1.c99))), '0.18100972319467767', ((((((((CAST(vt0.c0 AS REAL))OR(CASE t1.c75  WHEN t1.c81 THEN t1.c75 END)))AND(CAST(t1.c1 AS NUMERIC))))OR((((vt0.c0))>((t1.c75))))))OR(SUM(t0.c0))) FROM vt0 WHERE (LIKELY(DISTINCT (~ (0.9958634926613575))));SELECT DISTINCT (- (t0.c0)) COLLATE BINARY, ((UPPER(t1.c75)) ISNULL), TOTAL((- (t1.c75))) OVER ( ORDER BY (~ (t1.c81)) COLLATE BINARY DESC), (((((t1.c81 IN ()))AND(((t1.c99)<=(t1.c75)))))OR(((t1.c75) BETWEEN (t1.c92) AND (t1.c1)))), ((((vt0.c0)=(t1.c1))) IS FALSE) FROM vt0 CROSS JOIN t1 ON ((t1.c81)+(t1.c1)) COLLATE BINARY FULL OUTER JOIN t0 ON x'' WHERE (x'') GROUP BY ((((t1.c92, t0.c0, vt0.c0))>=((-210908424, t1.c92, t1.c92))) IN ()) HAVING CAST(vt0.c0 AS BLOB) COLLATE BINARY; -- 0ms;
SELECT DISTINCT t1.c92 FROM t1 INTERSECT SELECT ALL CASE WHEN GROUP_CONCAT(vt0.c0) THEN ((t1.c75) ISNULL) END FROM t0, vt0, t1 WHERE (('sak' IN ((NULL IN ())))); -- 0ms;
SELECT DISTINCT CASE t1.c81  WHEN TYPEOF(t1.c1) THEN ((t1.c81)||(t1.c92)) END, 0.9552070680375295, SUM(((x'') IS TRUE)) COLLATE RTRIM FROM t1, t0, vt0 WHERE (CAST((-6.3936973E8 IN (1.763474622E9)) AS INTEGER)) LIMIT 693132224 OFFSET -1882424670; -- 0ms;
SELECT DISTINCT t1.c81 FROM t0, vt0, t1 WHERE (JULIANDAY(CASE WHEN 0.6674175838735259 THEN '-1833560393' WHEN x'' THEN '<ZEӫVZ' WHEN x'779c' THEN '' ELSE NULL END, ((x'')GLOB('1435056562')), (((('EF')AND(NULL)))AND(x'')))); -- 0ms;
SELECT DISTINCT ((1240925613)-((((t1.c81, t1.c81, vt0.c0)) NOT BETWEEN ((t1.c92, t1.c1, vt0.c0)) AND ((t1.c1, t1.c99, vt0.c0))))), ((((t1.c81)OR(t0.c0)))&(-1.613248381E9 COLLATE NOCASE)), (- ((((t1.c75))<=((t1.c99))))) FROM t1 WHERE (json(x'') COLLATE BINARY);SELECT DISTINCT COUNT(*) OVER (), ((((t1.c75)<(t1.c99)))>>(CAST('RD' AS TEXT))), (~ (vt0.c0)) FROM t1, vt0 INDEXED BY i24 WHERE (UNLIKELY(((NULL) ISNULL)));SELECT DISTINCT (((((t0.c0))<((0Xffffffff8309d317)))) NOT NULL), CAST(TYPEOF(DISTINCT t1.c81) AS INTEGER), ((IFNULL(t1.c75, t1.c99))+(((t1.c99) NOTNULL))) FROM t1, t0, vt0 WHERE ((NOT (((x'bf9e') NOTNULL)))); -- 0ms;
SELECT DISTINCT (((((vt0.c0 IN ()))OR(((((t1.c1)AND(t1.c81)))OR(vt0.c0)))))AND(t1.c75 COLLATE RTRIM)) FROM vt0;SELECT ALL t0.c0, (+ ((t1.c92 IN ()))), (~ (((t1.c99)<(t1.c92)))) FROM vt0, t1, t0; -- 0ms;
SELECT DISTINCT (((t1.c99 IN ()))==(x'29fe')), x'', ((((t0.c0) NOT BETWEEN (vt0.c0) AND (0.18206241774223764))) BETWEEN (t1.c81) AND ((((t1.c1, x'533e', t1.c92)) NOT BETWEEN ((vt0.c0, t1.c81, t1.c92)) AND ((t1.c99, vt0.c0, ''))))) FROM vt0, t1 WHERE (ABS((((0Xffffffffd61ee41a, x'', '')) NOT BETWEEN (('-1325186', NULL, x'0eb4')) AND ((0.7409718292213933, 0.17016304944622584, NULL))))) LIMIT -1996330756;SELECT ALL ((((((NULL)OR(t1.c75)))AND(t1.c92))) BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.13361175251408575)) AND (((t1.c75) NOT BETWEEN (t0.c0) AND (t1.c81)))) FROM t0, vt0, t1; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS BLOB))AND((('0.9552070680375295')<<(vt0.c0)))))OR(GLOB('1243138664', t1.c75))), CAST(((t1.c99)/(t0.c0)) AS INTEGER), MIN(t1.c99), ((vt0.c0) NOT NULL) COLLATE RTRIM, (((((((0.14258699857872126, t0.c0, t1.c99)) NOT BETWEEN ((t0.c0, t1.c75, t1.c1)) AND ((t1.c75, 0.8922192051749517, t1.c1))))OR(((t1.c92)%(t1.c99)))))AND(t1.c1 COLLATE RTRIM)) FROM t0, vt0 ORDER BY CAST((- (t1.c99)) AS TEXT) LIMIT -948891961;SELECT DISTINCT ((((t1.c1) BETWEEN (t0.c0) AND (vt0.c0)))OR((t1.c99 IN ()))) FROM vt0 WHERE (CAST(json_valid(x'') AS TEXT));SELECT DISTINCT (((vt0.c0)%(t1.c92)) IN ()) FROM t0, vt0 GROUP BY (((t1.c1, t1.c99, t1.c1)) BETWEEN ((((t1.c1) NOTNULL), (+ (t1.c1)), (((vt0.c0))<((vt0.c0))))) AND ((((t1.c92) NOT BETWEEN (t1.c99) AND (t1.c99)), ((t1.c99)*(t1.c92)), (vt0.c0 IN ()))));SELECT DISTINCT CASE WHEN vt0.c0 COLLATE RTRIM THEN t1.c81 COLLATE NOCASE END FROM t1, t0, vt0 WHERE ('1856189936'); -- 0ms;
SELECT ALL ((ABS(t1.c75))IS NOT(((t1.c92)<=(t1.c99)))), json(json_insert(vt0.c0, NULL, t0.c0, t1.c1, t0.c0)), (((x'') BETWEEN (t1.c75) AND (t1.c75)) IN ()) FROM t0, t1;SELECT ALL x'c4271619', CASE t0.c0  WHEN (((t1.c99))>=((t0.c0))) THEN ((t1.c1)<(t0.c0)) END, COUNT(*) FROM t1, t0, vt0; -- 1ms;
SELECT COALESCE(NULL, (x'' IN ())), UPPER(DISTINCT COUNT(*)), ((t0.c0)=(t0.c0)) COLLATE NOCASE FROM vt0, t0, t1; -- 0ms;
SELECT ALL x'' COLLATE NOCASE COLLATE RTRIM, LAG((NOT ((t1.c81 IN ()))), HEX(((t0.c0) NOT NULL)), t0.c0) OVER (), NULL FROM t0, t1; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS BLOB)) IS TRUE), ((t0.c0 COLLATE NOCASE)%((~ (t1.c92)))), MAX(((t1.c99) NOT NULL)) FROM t0 WHERE ((((((NULL)<(0Xffffffffa373f2b0))))!=((CAST(NULL AS TEXT)))));SELECT DISTINCT (((t1.c81) NOTNULL) IN ()) FROM t0, vt0, t1; -- 0ms;
SELECT (((t1.c75)<=(t1.c75)) IN ()), (('RD') ISNULL), CASE WHEN ((((t1.c99)OR(t0.c0)))OR(t0.c0)) THEN t1.c1 COLLATE RTRIM WHEN ((t1.c1) IS FALSE) THEN t1.c92 WHEN ((((((((vt0.c0)AND(t1.c75)))OR(NULL)))OR(t1.c1)))AND(NULL)) THEN ((t1.c99) BETWEEN (vt0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN CAST(t1.c75 AS INTEGER) WHEN t1.c81 COLLATE RTRIM THEN (t1.c81 IN ()) END FROM t0, vt0;SELECT ALL FIRST_VALUE(((t1.c92)+(t1.c81)) COLLATE RTRIM) OVER (), '1763474622', (((t1.c75) NOT BETWEEN (t1.c99) AND (t1.c92)) IN ((((vt0.c0, t1.c99, 0.24150726956020196))<>((t1.c99, t1.c92, t1.c1))), MAX(t1.c92))) FROM t0, vt0, t1 WHERE (((NULL) NOTNULL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS BLOB))GLOB((('J+*''')/(t1.c99)))) FROM t1, vt0 WHERE (CAST(NULL AS BLOB) COLLATE NOCASE);SELECT ABS(((t1.c99) NOT NULL)), t1.c99, (((vt0.c0, t1.c81, t0.c0, t1.c99, '')) BETWEEN ((((vt0.c0) IS FALSE), CAST(t1.c92 AS TEXT), (t1.c92 IN (t1.c75)), t1.c92 COLLATE NOCASE, COUNT(t1.c99))) AND (((t1.c81 IN ()), t0.c0 COLLATE NOCASE, CASE WHEN t1.c81 THEN t0.c0 ELSE t1.c92 END, CASE WHEN t1.c99 THEN t1.c92 WHEN t0.c0 THEN t1.c99 WHEN t1.c75 THEN t1.c92 ELSE t1.c75 END, (t1.c99 IN (t1.c81))))) FROM t1, vt0, t0 WHERE (CASE WHEN 'gfi띐' COLLATE RTRIM THEN ((0.9217499938623406) NOT BETWEEN (NULL) AND (NULL)) END) ORDER BY t1.c99 ASC LIMIT 932575602; -- 0ms;
SELECT ((((((((((t0.c0) NOT BETWEEN (t1.c99) AND (t1.c75)))OR(((t0.c0)*(t1.c75)))))AND((+ (t1.c92)))))OR(TRIM(t1.c1, t1.c99))))AND(COUNT(t1.c92))) FROM vt0;SELECT DISTINCT (((((('-1068063491')AND(t0.c0)))OR(t1.c92)))GLOB(((t1.c1) NOTNULL))) FROM t1, t0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY DATE(t0.c0, t1.c99, t1.c99, t1.c75, t0.c0) COLLATE NOCASE, (((((vt0.c0))<>((t1.c1))))LIKE((vt0.c0 IN ())))) FROM t0, t1, vt0 GROUP BY ((t1.c92 COLLATE RTRIM)<<(((t0.c0) NOT NULL))) HAVING 2.10297095E8; -- 1ms;
SELECT ALL (NOT (vt0.c0 COLLATE RTRIM)), (((((t1.c75) NOT NULL)))>=((UPPER(vt0.c0)))), ((t1.c92) NOT BETWEEN (((t1.c99)GLOB(t0.c0))) AND (CAST(t1.c1 AS TEXT))) FROM t0, t1;SELECT ALL ((((((t1.c99, vt0.c0, t1.c92))>((t1.c92, t1.c81, NULL)))))<=((t1.c1))), CAST((vt0.c0 IN ()) AS BLOB), HEX(SQLITE_SOURCE_ID()) FROM t1;SELECT DISTINCT (NOT (t0.c0)) FROM t1, vt0, t0 WHERE (IFNULL(UPPER('-524377451'), ((-1747380989)-('115640364')))); -- 0ms;
SELECT ALL CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c75))  WHEN CASE t1.c92  WHEN t1.c75 THEN t0.c0 ELSE t0.c0 END THEN (t1.c92 IN ()) ELSE CASE vt0.c0  WHEN t1.c1 THEN vt0.c0 END END, '-552172490', (((CASE WHEN t1.c75 THEN 0xfffffffff999ce95 WHEN t1.c81 THEN t1.c99 WHEN t1.c92 THEN t1.c99 ELSE t0.c0 END))>=(((((t0.c0))<((t1.c92)))))), (- (json_object(t1.c81, t1.c1))), t0.c0 FROM t1, t0, vt0 WHERE (((CASE WHEN NULL THEN '' WHEN '582816542' THEN x'' WHEN x'9b07' THEN '2073503934' ELSE 0.5056781496965301 END) NOT BETWEEN ((~ (' \'))) AND (((x'4c59')|('-1599001830')))));SELECT DISTINCT CAST(((t1.c75)+(vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((NULL) BETWEEN (CASE WHEN 0.239671678568933 THEN 'fL읾ﱙ뇬>G#o' END) AND ((~ (1.284290384E9)))));SELECT ALL ((UNLIKELY(DISTINCT t1.c75)) ISNULL) FROM t0;SELECT (((LIKELY(DISTINCT t0.c0)))>((((t1.c92)|(t0.c0))))), t1.c99, CAST(t1.c75 AS REAL) FROM vt0, t0, t1 WHERE (((CASE WHEN x'2393' THEN 'fL읾ﱙ뇬>G#o' WHEN '-219664793' THEN 0xffffffff92c636c1 WHEN NULL THEN x'' END)+(('G7t5' IN ())))); -- 0ms;
SELECT DISTINCT 0.16909501964153517, GROUP_CONCAT((vt0.c0 IN (t1.c1, t1.c99))) OVER (), (((('108048784')OR(((((t1.c75)AND(t1.c75)))OR(t1.c75)))))OR((((t1.c75, t1.c1, t0.c0)) BETWEEN ((t0.c0, t1.c81, t1.c1)) AND ((x'8d5e', vt0.c0, t1.c92))))) FROM vt0, t0, t1; -- 2ms;
SELECT CAST(((vt0.c0)*(vt0.c0)) AS INTEGER) FROM t0, t1, vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0 NOT INDEXED, vt0, t1; -- 0ms;
SELECT DISTINCT ((t1.c81)>(t0.c0)) COLLATE RTRIM FROM t1, t0 WHERE (((((((((0.8615125013780284 COLLATE RTRIM)OR('')))AND((('-1499649062') BETWEEN (NULL) AND (NULL)))))OR((((0.0030596390943550267))<=(('ygs䠪'))))))AND(((((((((0.19059665363472622)OR(NULL)))AND(x'')))AND(NULL)))OR('-406245793'))))); -- 0ms;
SELECT ALL AVG(((t0.c0)+(t0.c0))) OVER () FROM t1, t0, vt0 WHERE ((((-1.126364353E9)) BETWEEN (((('n') NOT BETWEEN (-1.845853917E9) AND (x'')))) AND (((('t|au7hw❭]')&(NULL)))))) GROUP BY (~ (CAST(t0.c0 AS NUMERIC))) HAVING ''; -- 0ms;
SELECT ALL ((((((t1.c92)AND(vt0.c0)))AND(t1.c99))) BETWEEN (((t1.c99)<<(''))) AND (IFNULL(DISTINCT t1.c92, t1.c99))) FROM t0 INDEXED BY i42, t1, vt0 WHERE ((((+ (1770632097))) IS TRUE));SELECT DISTINCT CAST(((((((((((((t1.c75)AND(t0.c0)))AND(t1.c99)))AND(t0.c0)))OR(t1.c99)))AND(t1.c99)))AND('-265373308')) AS TEXT) FROM t0;SELECT DISTINCT FIRST_VALUE(json_insert(t1.c75, t1.c81 COLLATE NOCASE, ((t1.c81) NOT BETWEEN (t1.c81) AND (t1.c81)))) OVER () FROM t1 WHERE ((((0.9552070680375295 IN ())) IS TRUE)) GROUP BY 0.5855893259767904 ORDER BY ((((t1.c75) BETWEEN (x'') AND (NULL))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (TOTAL_CHANGES()))  NULLS LAST;SELECT DISTINCT (- (CASE WHEN vt0.c0 THEN t1.c81 END)) FROM vt0, t0;SELECT ALL COALESCE(DISTINCT ((((t1.c1)OR(t1.c99)))AND(t1.c1)), ((((((((t1.c99)OR(t0.c0)))OR(t1.c1)))AND(-1521369287)))AND(t1.c92))) FROM t1, t0 NOT INDEXED LIMIT -2096508137 OFFSET -1040863317; -- 0ms;
SELECT CAST(TOTAL(t1.c99) AS NUMERIC), (NOT (((x'')||(t1.c99)))), t1.c81 FROM vt0, t0, t1; -- 1ms;
SELECT ALL (((((t1.c92)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) BETWEEN (((t1.c92)*(vt0.c0))) AND (COUNT(*))) FROM t1, t0, vt0; -- 0ms;
SELECT DISTINCT ((ABS(vt0.c0))GLOB((t1.c99 IN ()))) FROM t0, vt0, t1 WHERE ((((0.09057348687378686 IN ()))<(((('凥lC')) BETWEEN ((0.6249924513912998)) AND (('-1552682320')))))); -- 0ms;
SELECT ALL rtreenode(((t1.c81)IS(t1.c92)), ((((((((t1.c92)OR(t1.c99)))OR(t1.c99)))OR(t1.c75)))AND(t1.c92))) FROM t1, vt0, t0 GROUP BY CHAR(((t1.c99)>>(t1.c99))), t1.c75, ((((t0.c0)>=(t1.c81)))<(t1.c92 COLLATE NOCASE)); -- 1ms;
SELECT 'z^' FROM t0, t1, vt0 GROUP BY (((t1.c81) NOT BETWEEN (t1.c75) AND (t1.c99)) IN ()), (((vt0.c0 IN (t1.c99, t1.c81))) BETWEEN (((((vt0.c0)AND(t1.c1)))OR(t1.c75))) AND ((((t1.c99)) BETWEEN ((t0.c0)) AND ((t1.c81))))), ((((vt0.c0) ISNULL))OR(t1.c81)), (((vt0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL))) AND ((t1.c81))), CHANGES() COLLATE NOCASE HAVING HEX(DISTINCT ((t1.c92)%(t0.c0))) ORDER BY (~ (t1.c92 COLLATE NOCASE))  NULLS LAST; -- 2ms;
SELECT (MIN(t1.c92) IN ()), CASE WHEN (~ (t1.c1)) THEN ((t1.c92)IS NOT(t1.c99)) ELSE (((t1.c75))>((t1.c75))) END, ((((((((vt0.c0)AND(vt0.c0)))OR(t1.c92)))OR(t1.c75)))OR(t1.c81)) COLLATE BINARY FROM t0, t1, vt0 WHERE (CAST(x'' COLLATE NOCASE AS INTEGER)); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t1.c75 THEN t1.c81 END AS REAL) FROM vt0 WHERE (CASE (NULL IN ('693132224'))  WHEN x'41c1' COLLATE BINARY THEN '-1108835791' COLLATE RTRIM WHEN CASE x'27d2'  WHEN x'' THEN NULL END THEN CAST('7719675232068042039-1906T406T1072-497:VX' AS REAL) WHEN (((((((('HL/Z')OR(-1.247252644E9)))AND(1.11703299E8)))AND('木9')))OR('h%J')) THEN (+ ('-1013217512')) ELSE ((1514247400)GLOB(1.529966912E9)) END) GROUP BY ((CAST(t1.c99 AS TEXT))>=(((t1.c75)<<(t1.c99)))), CAST((t1.c1 IN ()) AS BLOB), ((((((t1.c81)AND(t1.c1)))AND(t1.c99)))GLOB((- (t1.c81)))), CASE ((t1.c75)>(t1.c75))  WHEN (- (t1.c1)) THEN ((t1.c92)%(t1.c92)) ELSE CASE t1.c81  WHEN t1.c81 THEN t1.c81 WHEN t0.c0 THEN t1.c1 WHEN t1.c92 THEN vt0.c0 END END, ((((((((((0X4f54f486)OR(t1.c81)))AND(t1.c92)))OR(t1.c92)))AND(t1.c1))) BETWEEN (CAST(t1.c92 AS INTEGER)) AND (t1.c75 COLLATE RTRIM)) ORDER BY ((((t1.c75)/(vt0.c0))) IS FALSE) DESC  NULLS FIRST;SELECT DISTINCT ((IFNULL(DISTINCT t1.c92, vt0.c0))-(0.6078148808796294)), (((((t1.c1 IN (t1.c81, t1.c75)))OR(COUNT(*))))OR((((t0.c0, t1.c81, t0.c0))=((t1.c99, t1.c81, NULL))))), (((vt0.c0)*(t1.c1)) IN (0.6440505737698836)) FROM t0, vt0;SELECT TOTAL_CHANGES(), CASE ((t1.c81) IS FALSE)  WHEN ((t1.c99)OR(t1.c99)) THEN ((t1.c92)<(t1.c92)) WHEN x'766d' THEN TRIM(t1.c75) WHEN t1.c1 COLLATE RTRIM THEN t0.c0 COLLATE BINARY WHEN t1.c99 COLLATE RTRIM THEN ((t1.c99) NOT BETWEEN (t0.c0) AND (t1.c81)) WHEN t1.c81 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM END, (t0.c0 IN (t0.c0)) COLLATE RTRIM FROM t0 NOT INDEXED, t1, vt0 NOT INDEXED; -- 0ms;
SELECT (((((t1.c81) NOT BETWEEN (t1.c75) AND (t0.c0)), CAST(t1.c92 AS NUMERIC), ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c92))))<((LIKELY(t1.c81), (t1.c1 IN ()), '''?'))) FROM vt0, t0;SELECT DISTINCT CASE ((vt0.c0)<<(t1.c99))  WHEN ((t1.c92)*(t1.c99)) THEN (0xffffffffaa511206 IN (vt0.c0)) END, (~ (CAST('1743985291' AS TEXT))), (((t1.c81 IN ()))GLOB(((t1.c92)%(vt0.c0)))) FROM t0, vt0, t1 WHERE (CASE WHEN ((('-1638806751', '1243138664', x'')) BETWEEN ((x'33e8', NULL, x'')) AND ((NULL, x'', x'7ff8'))) THEN CASE x''  WHEN 'W]' THEN NULL ELSE x'' END WHEN (- (0x3d76ba16)) THEN ((x'') ISNULL) WHEN CAST(0X19deff75 AS REAL) THEN (('-1375550577') ISNULL) END); -- 0ms;
SELECT ((((vt0.c0)-(vt0.c0)))*(CASE vt0.c0  WHEN '1729996267' THEN t1.c1 ELSE t1.c81 END)) FROM vt0, t1, t0; -- 0ms;
SELECT (json_valid(t1.c92) IN (((t1.c81)>=(vt0.c0)))) FROM t1 WHERE (NULL);SELECT DISTINCT ((json_extract(t1.c81, t1.c81, t1.c81, '2umJT')) ISNULL) FROM t0 WHERE (NULL);SELECT DISTINCT COALESCE(SUM(t1.c99), 0.12389219001374496, (t1.c75 IN (t1.c99)), ((t1.c81) NOT BETWEEN (t1.c75) AND (vt0.c0))) FROM t0, t1;SELECT (TRIM(DISTINCT t1.c1, t1.c99) IN (CAST(t1.c1 AS TEXT), ((((((((t0.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c92)))AND(t1.c92)))) FROM t1 WHERE (((((0.26678773740436446) BETWEEN (NULL) AND (0Xffffffff8091e7ef)))<<(0.91455963226206 COLLATE BINARY)));SELECT DISTINCT (((((t0.c0, t1.c92, t1.c75)) BETWEEN ((vt0.c0, '	o-6?\r^', t1.c81)) AND ((t1.c92, vt0.c0, t1.c1))))+((t1.c75 IN (t1.c92)))), (- (CASE WHEN '371312813' THEN t1.c1 ELSE vt0.c0 END)), ((((((((CAST(t1.c81 AS INTEGER))AND((t0.c0 IN ()))))AND('D')))AND(((((((((vt0.c0)OR(vt0.c0)))OR(t1.c92)))OR(vt0.c0)))OR(t0.c0)))))AND(t1.c81)) FROM t0, vt0, t1 WHERE (NULL); -- 0ms;
SELECT ALL t1.c1 FROM t0, vt0, t1 ORDER BY (t1.c75 IN ()), COALESCE(((t1.c1) BETWEEN (t1.c81) AND (t0.c0)), CASE WHEN t1.c92 THEN t1.c92 ELSE t1.c75 END) ASC, CASE WHEN t1.c99 THEN t1.c75 COLLATE RTRIM END  NULLS LAST, (('-639005198')+(((((t1.c81)OR(t1.c99)))AND(t0.c0)))); -- 1ms;
SELECT DISTINCT (((t1.c92 IN ())) IS TRUE) FROM t1, t0, vt0; -- 0ms;
SELECT ALL COUNT((-1807084480 IN (t1.c1, t0.c0, t1.c75))) OVER () FROM vt0 WHERE (TRIM((((('-59066003')OR(NULL)))AND(NULL)), '-1247252644' COLLATE RTRIM));SELECT ALL ((t1.c1)%(t1.c99)) COLLATE BINARY, ((((t1.c75) BETWEEN (t1.c75) AND (t1.c81)))IS NOT(SUBSTR(t1.c92, t1.c1))), ((CASE t1.c99  WHEN vt0.c0 THEN t0.c0 WHEN t1.c99 THEN t1.c75 WHEN t1.c81 THEN vt0.c0 ELSE t1.c1 END) IS FALSE) FROM t1 WHERE ((((((x'' IN ()))OR(('985470409' IN ()))))OR(CASE NULL  WHEN x'' THEN '1243138664' ELSE 0.7623479372506082 END))) GROUP BY (((t1.c92)<('0.7285681212366735')) IN (((t1.c81)>>(t0.c0)), ((t1.c92)<(t1.c1))));SELECT ALL COUNT(*) FROM vt0, t0, t1 WHERE ((((('-318150895') NOT BETWEEN (NULL) AND ('RM')))IS(CASE WHEN NULL THEN NULL ELSE '' END))) LIMIT -1560184716; -- 0ms;
SELECT ((json_array_length(t1.c81, t1.c81)) ISNULL) FROM t1, vt0, t0 WHERE (((((NULL) BETWEEN (0.1638989101613647) AND (x''))) BETWEEN ((('eK%K{Q(oJ')<('1457108493'))) AND (NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((t1.c81, t1.c99, vt0.c0))>=((t1.c81, t0.c0, t1.c81))) IN ()) FROM t1, t0, vt0; -- 0ms;
SELECT ALL '', ((MIN(t0.c0)) IS FALSE), (- ((NOT (t1.c1)))) FROM vt0, t1, t0 WHERE ((~ (((x'776a') BETWEEN (1729996267) AND (NULL))))); -- 0ms;
SELECT DISTINCT CAST(CASE t1.c75  WHEN t1.c75 THEN t0.c0 ELSE t0.c0 END AS NUMERIC), t1.c75, ((t1.c1 IN ()) IN ()), '' COLLATE RTRIM, t1.c92 FROM t0 WHERE (((0.7570395208363511)/(ABS(NULL)))) LIMIT -583441205;SELECT CASE t1.c1  WHEN ((t1.c81)&('')) THEN ((t0.c0)OR(t1.c1)) WHEN CASE t0.c0  WHEN t0.c0 THEN t1.c99 ELSE t1.c92 END THEN ((t0.c0) BETWEEN (NULL) AND (t1.c81)) WHEN (- (t1.c1)) THEN json_array_length(t1.c81, t1.c99) END FROM vt0, t1, t0; -- 0ms;
SELECT ((((t1.c75)<<(t0.c0)))==((t1.c75 IN ()))) FROM t0;SELECT DISTINCT ((((0.06850282431144561)>=(vt0.c0)))>(t1.c1 COLLATE NOCASE)) FROM vt0, t1 WHERE (NULL) ORDER BY ((t1.c99 COLLATE BINARY)OR(((t0.c0)/(vt0.c0)))) DESC;SELECT DISTINCT SQLITE_COMPILEOPTION_USED(((t1.c92)IS(t1.c1))), COUNT(*) OVER (), (((((t1.c92))=((t1.c92)))) NOT NULL) FROM t0, t1 WHERE ((((-1.606419976E9)) NOT BETWEEN ((((((((((x'c83d')AND('')))OR(0.811364518831398)))AND(-3.36234109E8)))OR(0.19344398960050047)))) AND (((+ ('\n')))))); -- 0ms;
SELECT DISTINCT (('' COLLATE BINARY)+(((((((((t1.c99)AND('-2122511389')))AND(vt0.c0)))AND(t1.c81)))AND(0.988498197013237)))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((((((t1.c1)OR(t0.c0)))OR(vt0.c0))) ISNULL), ((t0.c0 COLLATE RTRIM) IS TRUE), ((((vt0.c0) NOT BETWEEN (t1.c92) AND (t1.c92))) NOT BETWEEN (((t1.c75)LIKE(vt0.c0))) AND ((NOT (t0.c0)))) FROM t1, vt0 INNER JOIN t0 ON ((((((((t0.c0 COLLATE NOCASE)OR(((t1.c1)-(t1.c75)))))OR((+ (vt0.c0)))))AND((t1.c1 IN ()))))AND((('-1606419976') BETWEEN (t1.c1) AND (t0.c0)))) WHERE (((((('')) BETWEEN ((0.4370228905698371)) AND ((NULL)))) BETWEEN ((((x'', '-906054762', 0xfffffffff671f818)) NOT BETWEEN ((NULL, '-639005198', 0.14146462303800855)) AND ((266732685, '338141590', -1552682320)))) AND ('wd%sC' COLLATE RTRIM))); -- 0ms;
SELECT ALL CAST(t0.c0 AS BLOB) COLLATE BINARY, '', NULLIF(DISTINCT CAST(t1.c81 AS INTEGER), AVG('')) FROM t1, t0, vt0; -- 1ms;
SELECT ALL NULL, CAST(NULL AS INTEGER), CAST(((t1.c99) IS TRUE) AS REAL) FROM vt0 CROSS JOIN t0 ON NULL RIGHT OUTER JOIN t1 ON CASE WHEN (t1.c1 IN ()) THEN CASE t1.c81  WHEN t1.c1 THEN t1.c99 ELSE t1.c1 END ELSE (t1.c1 IN ()) END WHERE (CAST(((6.93132224E8) NOT BETWEEN (NULL) AND (0.551450638038215)) AS NUMERIC)); -- 0ms;
SELECT ALL (((NOT (t1.c75))) IS TRUE) FROM vt0 WHERE ((+ (NULL)) COLLATE RTRIM);SELECT t1.c92 FROM t0, t1 WHERE ('-385715045'); -- 0ms;
SELECT DISTINCT (((vt0.c0, t1.c75, t1.c75))<((t1.c1, t1.c81, t1.c81))) COLLATE NOCASE FROM vt0, t0, t1; -- 0ms;
SELECT DISTINCT (((((t0.c0) BETWEEN (t1.c99) AND (t1.c75))))>=((CAST(x'3ff6' AS REAL)))), ((((((((((t1.c81)OR(t1.c81)))AND(t1.c81)))OR(t1.c99)))OR(t1.c81))) ISNULL), CASE (((t1.c75)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))  WHEN ((t1.c92) NOT NULL) THEN (vt0.c0 IN ()) ELSE json_insert(t1.c75, t1.c81, t0.c0) END FROM t0, vt0, t1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((~ (0.3942879755048898)))>>(AVG(t1.c1))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c92 COLLATE RTRIM THEN CASE WHEN x'4b6f' THEN t0.c0 WHEN t1.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t1.c75 END END FROM t0, t1;SELECT ALL x'a3b4' FROM t1, vt0; -- 0ms;
SELECT ALL ((((((((((((((((t1.c81)AND(t1.c75)))OR(t1.c92)))AND(vt0.c0)))AND(t1.c92)))AND(((vt0.c0) IS TRUE))))OR(((((t1.c99)AND(t1.c92)))OR(vt0.c0)))))OR(((t0.c0)=(t1.c92)))))OR((NOT (vt0.c0)))) FROM t0 WHERE ((~ ('0.8090999750112873' COLLATE NOCASE)));SELECT DISTINCT (((vt0.c0 IN ()))<<(PRINTF(t1.c81))), ((TOTAL(t1.c81)) NOT NULL), -1.000490181E9, (((t1.c99, t1.c75, t1.c75)) BETWEEN ((UPPER(DISTINCT t1.c81), ((t1.c99) NOT BETWEEN (t1.c1) AND (t1.c81)), (t1.c81 IN ()))) AND (((t1.c99 IN ()), UNICODE(t1.c75), (NOT (NULL))))), (((((t1.c92) BETWEEN (t1.c1) AND (t1.c75))))<=((LIKELIHOOD(t1.c92, 0.5466187297115797)))) FROM t0, t1, vt0; -- 0ms;
SELECT DISTINCT ((((((t1.c81)IS(t1.c92)))AND(CAST(t1.c92 AS INTEGER))))OR(((t1.c1)GLOB(t1.c92)))) FROM t0, t1 WHERE (CASE x'' COLLATE BINARY  WHEN 0.9556295581152171 COLLATE NOCASE THEN CASE WHEN x'' THEN x'' ELSE 1295582716 END WHEN (((('ᗒ')OR(0X47649a75)))OR(x'')) THEN '-1424264121' WHEN CAST(x'aa4f' AS REAL) THEN 'tJcA鴼SL.S' ELSE ((((((((NULL)OR(x'')))OR('0.9764899067525895')))OR(']|?')))OR('')) END) GROUP BY (((((vt0.c0, t1.c99, NULL)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((t1.c1, t1.c1, t1.c81)))) IS FALSE) HAVING TYPEOF(t1.c99);SELECT DISTINCT TOTAL(t1.c1) OVER () FROM t1, vt0 WHERE ((('-901705992')OR(x'')) COLLATE NOCASE); -- 1ms;
SELECT ALL (((t1.c81, t1.c75, t0.c0)) BETWEEN ((t0.c0, TOTAL(t0.c0), ((t0.c0) IS FALSE))) AND (('199422516', ((vt0.c0) ISNULL), (t1.c75 IN ())))) FROM t1;SELECT (((((0.00906865358267439, t1.c1, t1.c75))<=((t1.c99, t1.c99, t0.c0))))<(((t1.c1)!=(t1.c99)))), TOTAL('-1325186'), ((vt0.c0 COLLATE NOCASE) IS FALSE) FROM vt0 WHERE (CAST(x'' AS TEXT));SELECT LIKE(((((t1.c92)AND(t0.c0)))AND(t1.c75)), 0.4128814308139277 COLLATE NOCASE, ']') FROM t0, vt0, t1; -- 0ms;
SELECT (NOT (((t1.c1)>=(vt0.c0)))), ((t1.c99) NOT NULL) COLLATE NOCASE, TOTAL(CASE t1.c92  WHEN t1.c99 THEN t1.c99 WHEN t1.c75 THEN t0.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c81 END) OVER (), MIN(((t1.c75) NOT BETWEEN (t1.c99) AND (t1.c99))), 'Kz' FROM t1, t0 GROUP BY (+ (t0.c0)) COLLATE BINARY, (((((((((t1.c99 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c0 END)))AND(LIKELY(t1.c75))))AND((((t1.c99, t1.c75, 0.7891127463456261)) BETWEEN ((t1.c81, t1.c92, t1.c81)) AND ((x'', t1.c99, t1.c92))))))OR((NOT (t1.c1)))), (((t0.c0)) BETWEEN ((UNLIKELY(t1.c99))) AND (('')));SELECT (((vt0.c0)) BETWEEN ((x'')) AND ((COUNT(*)))) FROM vt0, t0; -- 0ms;
SELECT ALL (~ (CASE t1.c99  WHEN vt0.c0 THEN vt0.c0 WHEN t1.c75 THEN t1.c75 WHEN x'' THEN t1.c75 END)) FROM t1, t0, vt0 GROUP BY ((((vt0.c0) NOT BETWEEN (t1.c92) AND (NULL))) BETWEEN (((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c75))) AND (t1.c1)), TRIM(DISTINCT ((t1.c92) IS FALSE), CASE WHEN t0.c0 THEN t1.c75 WHEN t1.c99 THEN 0.6575874024275282 WHEN t1.c99 THEN vt0.c0 END), (((((t0.c0) NOT BETWEEN (0.17210912700618353) AND (t1.c1))))=((((t1.c1) NOT BETWEEN (t1.c99) AND (t1.c99))))) ORDER BY '5576141' ASC  NULLS FIRST; -- 2ms;
SELECT DISTINCT (NOT ((NOT (t1.c81)))), (+ (t1.c75 COLLATE NOCASE)), CAST(t0.c0 COLLATE NOCASE AS INTEGER) FROM vt0, t0, t1 WHERE (((SQLITE_VERSION())>=(NULL COLLATE BINARY))) GROUP BY (((t1.c99)) NOT BETWEEN (('脔')) AND ((((t1.c99) IS TRUE)))) HAVING t1.c99; -- 0ms;
SELECT ALL ((t1.c1 COLLATE RTRIM) IS TRUE), t0.c0, (((((t1.c99) BETWEEN (t0.c0) AND (t1.c1))))>=((CAST(t1.c75 AS TEXT)))) FROM vt0, t1 WHERE ((+ (((NULL) NOT BETWEEN (NULL) AND (x'')))));SELECT ((((((((CASE t1.c99  WHEN t1.c1 THEN t1.c92 ELSE t1.c75 END)AND((t1.c1 IN ()))))OR(t1.c99)))AND(vt0.c0)))AND((t1.c75 IN ()))) FROM t0, t1 WHERE (CAST(NULL COLLATE NOCASE AS BLOB)) LIMIT 2026722198 OFFSET -1964571479; -- 0ms;
SELECT ALL ((NULL)=(t0.c0 COLLATE RTRIM)) FROM t0 WHERE ((((x'')<=(NULL)) IN (((x'')<>(NULL))))); -- 1ms;
SELECT ALL CASE WHEN t1.c75 THEN t1.c92 ELSE t0.c0 END COLLATE BINARY FROM t1 CROSS JOIN vt0 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (t1.c1) AND (NULL));SELECT ALL (((+ (t0.c0))) NOT BETWEEN (ABS(t0.c0)) AND (((t1.c75)+('-1606419976')))) FROM vt0 INNER JOIN t0 ON (+ (((t1.c75) ISNULL))) LEFT OUTER JOIN t1 ON NULL WHERE (((CAST(-1.299292465E9 AS NUMERIC))OR((((x'e211')) NOT BETWEEN (('1093775556')) AND ((x'9d2d')))))); -- 0ms;
SELECT ALL DENSE_RANK() OVER (), SUM(CASE t1.c92  WHEN t1.c92 THEN 'TRUE' END) OVER (), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c81)) AS REAL) FROM vt0, t0, t1 WHERE (CASE WHEN 0Xffffffffbb581417 THEN (0.6440505737698836 IN (0.012851709746512174)) END); -- 0ms;
SELECT NULLIF(DISTINCT t1.c92, GROUP_CONCAT(t0.c0)), HEX((+ (t1.c81))), ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t1.c99))) NOT BETWEEN ((~ (t1.c75))) AND (IFNULL(t1.c75, t1.c75))) FROM vt0, t0 WHERE (CASE ((NULL)>>(0.2750784645778692))  WHEN (('-1877945954')>(NULL)) THEN TRIM(NULL, x'') WHEN ((x'') BETWEEN (x'') AND (NULL)) THEN CAST(x'72fc' AS REAL) WHEN NULL COLLATE RTRIM THEN CASE '_鞆A-c'  WHEN 0X71a615c8 THEN NULL WHEN 0.5324516697759636 THEN '-421391266' WHEN NULL THEN x'' ELSE x'' END ELSE ((NULL)!=(x'c478')) END) GROUP BY ((((t1.c81)-(t1.c75))) BETWEEN (((((((((0xffffffffd9e98df2)AND(t1.c92)))AND(t1.c99)))OR(t1.c1)))OR(t1.c81))) AND (((((t1.c81)AND(vt0.c0)))OR(t1.c92)))) HAVING CAST((t1.c99 IN ()) AS TEXT);SELECT ALL ((((((((((((t1.c75)OR(t1.c99)))AND('')))OR(((vt0.c0) ISNULL))))OR(((t1.c1) NOTNULL))))OR(TRIM(DISTINCT t1.c92))))OR(CAST(t1.c1 AS INTEGER))) FROM t1, t0, vt0 WHERE (TOTAL_CHANGES()) GROUP BY CASE CAST(t1.c1 AS INTEGER)  WHEN (~ (x'')) THEN (((t0.c0))>=((t1.c81))) END HAVING ((t1.c81) BETWEEN (t0.c0) AND (t1.c81)) COLLATE NOCASE; -- 1ms;
SELECT DISTINCT (((t1.c1, t1.c92, t1.c75)) NOT BETWEEN ((t1.c81 COLLATE BINARY, ((t1.c92) BETWEEN (t1.c92) AND (t1.c92)), (((vt0.c0, vt0.c0, t1.c75)) BETWEEN (('HzW', t1.c75, t0.c0)) AND ((vt0.c0, t1.c81, t1.c92))))) AND ((((t1.c81) NOT BETWEEN (vt0.c0) AND (t1.c1)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), t1.c81 COLLATE RTRIM))) FROM t0;SELECT ALL ((TRIM(t1.c1, t1.c81))=(COUNT(*))) FROM t0;SELECT (((t1.c1)) BETWEEN ((((0xffffffffbfd756ab) NOT NULL))) AND ((((((((((((((((((vt0.c0)AND(t1.c92)))OR(t1.c92)))AND(t1.c81)))OR(t1.c92)))OR(t1.c92)))OR(t1.c99)))OR(t0.c0)))AND(x''))))) FROM t0, t1 WHERE (CAST('3}&g' AS REAL) COLLATE NOCASE);SELECT '-I' FROM t0, t1, vt0 WHERE ((((((((((('-781837190')OR(NULL)))OR((-8.27845405E8 IN ()))))AND(LIKELY(0.2176275218027076))))AND((~ (x'')))))AND((((NULL))==((x'aa67')))))); -- 0ms;
SELECT DISTINCT 0.12283535243944499, ((vt0.c0) NOTNULL) COLLATE NOCASE, (~ (t1.c99)) COLLATE NOCASE FROM t0, t1, vt0 GROUP BY (((NOT (t1.c92)))+(((t1.c99) IS TRUE))) HAVING ((CASE WHEN vt0.c0 THEN NULL WHEN t0.c0 THEN t1.c81 WHEN vt0.c0 THEN t1.c92 END)-(((vt0.c0) NOTNULL))); -- 1ms;
SELECT (((t1.c92 IN ())) NOT NULL) FROM t0, vt0, t1; -- 0ms;
SELECT (+ (t0.c0 COLLATE BINARY)) FROM t1 WHERE ((+ (LENGTH(NULL))));SELECT DISTINCT (+ ((NOT (vt0.c0)))) FROM t0, t1, vt0 WHERE (((CAST(0.8276964321442392 AS REAL))<=((('y\n') IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((t1.c99)<>(t1.c1))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t1.c81 ELSE vt0.c0 END) AND ((t1.c1 IN ()))), (((((t1.c99) ISNULL), ((vt0.c0) NOT BETWEEN (t1.c81) AND (t1.c92)), CAST(t1.c1 AS TEXT)))<=(((vt0.c0 IN (t1.c1)), (((t1.c81)) BETWEEN ((t0.c0)) AND ((t1.c75))), ((t1.c75)>(t1.c99))))), LOWER((vt0.c0 IN ())) FROM vt0 WHERE (HEX(UPPER(DISTINCT x'')));SELECT DISTINCT ((('1290874570')>=(t1.c81)) IN ()) FROM t1 WHERE ((((0xffffffff89f3878c)||(NULL)) IN ())); -- 0ms;
SELECT DISTINCT (((+ (t0.c0))) NOTNULL) FROM t1, t0, vt0; -- 0ms;
SELECT DISTINCT ((t1.c99)=(((vt0.c0)=(x'db95f288')))) FROM t0, vt0, t1 LIMIT 883158689 OFFSET 714170898; -- 0ms;
SELECT ALL CAST(((t1.c75)IS('-1424264121')) AS BLOB) FROM vt0, t0, t1; -- 0ms;
SELECT DISTINCT NTILE((((((('-1845853917')AND(t1.c92)))AND(t1.c1)))IS((((t1.c92)) BETWEEN ((0X7d040cb9)) AND ((t1.c92)))))) OVER ( PARTITION BY (((t1.c1 COLLATE NOCASE))>((((t1.c75)OR(t1.c92))))), ((CASE 0.39083257531022086  WHEN t1.c81 THEN t1.c99 WHEN t1.c99 THEN t1.c75 WHEN t1.c99 THEN t1.c75 END) IS TRUE)) FROM t1 WHERE (NULL) ORDER BY ((((((((((vt0.c0)!=(t1.c75)))OR(((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c99)))))OR(vt0.c0 COLLATE NOCASE)))AND(((('-2096508137')) NOT BETWEEN ((t1.c1)) AND (('648255402'))))))OR(CAST(t1.c92 AS BLOB)))  NULLS LAST, ((((t1.c81)OR(t1.c92)))OR(t1.c92)) COLLATE BINARY  NULLS FIRST;SELECT ALL ((((vt0.c0) IS FALSE)) BETWEEN (load_extension(t1.c99)) AND (t1.c81 COLLATE BINARY)) FROM t0, t1 WHERE (((('')) NOT BETWEEN ((((((0Xffffffffe95392d7)AND(0.9088340683778412)))AND('-1437005182')))) AND (('-9223372036854775808' COLLATE RTRIM))));SELECT DISTINCT (((t1.c75, t1.c1, -1.247252644E9)) BETWEEN ((CASE t1.c75  WHEN vt0.c0 THEN 0.8949527292291075 END, CAST(t1.c81 AS REAL), MAX(t1.c81))) AND ((((t1.c92)<>(t1.c75)), ((t1.c81)GLOB(t0.c0)), t0.c0 COLLATE NOCASE))) FROM t1;SELECT (~ (t1.c1)), ((t1.c92)+(CASE t1.c92  WHEN t1.c99 THEN t1.c75 WHEN t1.c99 THEN t1.c75 WHEN vt0.c0 THEN vt0.c0 END)), ((CAST(t1.c1 AS NUMERIC))IS(((((((((vt0.c0)AND(t1.c92)))AND(x'')))OR(t1.c1)))AND(t1.c1)))) FROM vt0, t1, t0; -- 0ms;
SELECT DISTINCT (SUM(t1.c92) IN ()), ((((NULL)LIKE(t0.c0))) NOT BETWEEN (x'') AND (((t0.c0)<<(vt0.c0)))), TYPEOF(t1.c1) COLLATE BINARY FROM t1;SELECT DISTINCT GROUP_CONCAT((((vt0.c0, t1.c1, '&'''))=((t0.c0, t1.c92, t1.c81))) COLLATE NOCASE) OVER (), ((CASE vt0.c0  WHEN t1.c1 THEN t1.c75 WHEN t1.c75 THEN t1.c75 WHEN vt0.c0 THEN t1.c75 ELSE t1.c81 END) NOTNULL), (- (((t1.c75) IS TRUE))) FROM t0;SELECT ALL ((((((t1.c75) BETWEEN (vt0.c0) AND (t0.c0)))OR(AVG(vt0.c0))))AND((+ (t1.c75)))) FROM vt0, t0, t1 WHERE (0.079835759166902); -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((((t1.c92) IS FALSE), CASE t1.c75  WHEN t1.c99 THEN t1.c92 END, 0.5834434758699736 COLLATE RTRIM)) AND ((((t1.c1)=('-1606419976')), ((t1.c1)IS NOT(1436915034)), GROUP_CONCAT(vt0.c0)))), ((CAST(vt0.c0 AS TEXT)) ISNULL), NULL FROM t1, t0, vt0 WHERE (NULL); -- 0ms;
SELECT TRIM(DISTINCT (((vt0.c0, t1.c81, t1.c75)) NOT BETWEEN ((t1.c75, t1.c75, x'')) AND ((vt0.c0, t0.c0, t1.c1)))) FROM t1 INDEXED BY i24;SELECT DISTINCT LEAD((((t0.c0)) BETWEEN ((CASE t1.c81  WHEN t1.c75 THEN t1.c1 ELSE vt0.c0 END)) AND ((t0.c0))), ((t0.c0 COLLATE NOCASE) BETWEEN ((((t0.c0, t1.c99, t1.c99)) NOT BETWEEN ((t1.c92, t1.c1, t1.c99)) AND ((t1.c81, t1.c81, t1.c99)))) AND (t1.c1)), (~ (((t1.c75)%(t1.c81))))) OVER () FROM t1, vt0, t0 WHERE (LOWER((('-463848702') ISNULL))); -- 0ms;
SELECT ALL GROUP_CONCAT((-114233800 IN (t1.c1))) FROM t0, vt0, t1; -- 0ms;
SELECT ALL t1.c75 COLLATE RTRIM FROM vt0, t0;SELECT ((t0.c0) BETWEEN ((t1.c75 IN ())) AND (ROUND(t1.c99, t1.c99))) FROM vt0 ORDER BY HEX((NOT (t1.c81))) DESC  NULLS LAST, ((t1.c1)==((+ (t1.c99))))  NULLS LAST;SELECT CAST(((t0.c0)&(t1.c92)) AS NUMERIC), ((MIN(t1.c92))/(t1.c99)), CASE WHEN t0.c0 THEN t1.c92 END COLLATE BINARY FROM t0, t1, vt0 WHERE ('1700164859') ORDER BY (- (CASE t0.c0  WHEN vt0.c0 THEN t1.c99 ELSE t1.c99 END))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((NOT (t1.c92))) NOT BETWEEN ((t0.c0 IN ())) AND (LAST_INSERT_ROWID())), (((~ (vt0.c0))) BETWEEN (CAST(t1.c92 AS REAL)) AND (((((t1.c92)AND(t1.c81)))AND(t0.c0)))), (CAST(t1.c1 AS TEXT) IN ()) FROM t0, vt0, t1 WHERE ((NULLIF(0X655d4c46, NULL) IN ((((('-1845853917')OR(NULL)))AND(NULL)), ((((x'')OR(NULL)))OR('1944651732'))))); -- 1ms;
SELECT DISTINCT MAX(((t1.c92) NOTNULL)) FROM vt0, t1 WHERE (((((NULL)LIKE('-719256453'))) NOT BETWEEN (((x'')>=(x''))) AND ((('-1152246812') BETWEEN ('-678139756') AND (x''))))); -- 0ms;
SELECT ALL ((((vt0.c0) NOTNULL))/(LIKELY(DISTINCT vt0.c0))), ((SQLITE_COMPILEOPTION_USED('-1151855593'))IS NOT((((t0.c0)) NOT BETWEEN ((t1.c99)) AND ((t0.c0))))), ((((((((((((((t1.c99)OR(t1.c81)))AND(t1.c81)))AND(t1.c92)))OR(t1.c75)))OR(x'd7a9')))OR(t1.c99)))||(((vt0.c0) NOT BETWEEN (t1.c81) AND (t1.c75)))) FROM t1, vt0, t0; -- 0ms;
SELECT ALL CASE (- (NULL))  WHEN highlight(t1.c99, t1.c92, t1.c81, 0.43737682999789074) THEN (t1.c75 IN ()) ELSE (t1.c99 IN ()) END FROM t0, t1 WHERE (CASE WHEN x'' THEN 0.7229602882534502 WHEN NULL THEN -539451681 WHEN x'' THEN -1.613248381E9 ELSE x'b2e0' END COLLATE BINARY); -- 0ms;
SELECT (((NOT (t1.c81)))==(((t1.c92)||(t1.c75)))) FROM t1 WHERE (((((NULL)LIKE(0Xffffffffe784d7a4))) NOT BETWEEN (LIKELY(DISTINCT ',콶륭')) AND ((0.3594351841013854 IN ('D k'))))); -- 0ms;
SELECT ((CASE t0.c0  WHEN t1.c92 THEN t1.c99 ELSE t1.c1 END) BETWEEN (((t0.c0)<=(NULL))) AND (((((t1.c75)AND(0xffffffff84505a9d)))OR(t1.c92)))), (NOT (CASE t1.c81  WHEN t1.c92 THEN t1.c92 END)), (((((t1.c1, t0.c0, t1.c81)) BETWEEN ((t1.c92, t1.c1, t1.c81)) AND ((t1.c81, t1.c75, t1.c92)))) BETWEEN (t1.c99 COLLATE RTRIM) AND (((((t0.c0)AND(t1.c99)))OR(t1.c81)))) FROM t0, vt0, t1 GROUP BY ((((((t1.c92) NOTNULL))OR((- (t1.c92)))))AND(((((t1.c99)AND(t0.c0)))AND(t1.c1)))) HAVING ((((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL); -- 1ms;
SELECT DISTINCT (NOT (((x'') BETWEEN (t1.c75) AND (t1.c99)))) FROM t0 WHERE ('Z');SELECT DISTINCT CAST((((t1.c1))>((t1.c92))) AS TEXT) FROM vt0, t0 WHERE (UNLIKELY(DISTINCT ((x'') NOT BETWEEN ('') AND (''))));SELECT RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((t1.c75 IN ())) IS TRUE) FROM t0, t1 GROUP BY CASE 0xffffffff938ba04d  WHEN (((x'', t1.c81, t1.c1))<((vt0.c0, t1.c99, t1.c92))) THEN CASE WHEN t1.c81 THEN t1.c1 ELSE t1.c75 END WHEN ((((t1.c75)OR(vt0.c0)))OR('1700164859')) THEN t1.c99 COLLATE BINARY WHEN ((t1.c92) NOT BETWEEN (t1.c92) AND (t1.c75)) THEN ((-1.158911374E9) NOT NULL) END LIMIT 882038875;SELECT x'd88b', t1.c99, (+ (((vt0.c0)=(t1.c92)))) FROM vt0;SELECT ALL ((t1.c75)IS(t1.c92)) COLLATE RTRIM FROM t0, vt0 ORDER BY RTRIM(((((vt0.c0)OR(t1.c99)))AND(vt0.c0)))  NULLS FIRST;SELECT (+ ((t1.c75 IN ()))), (((NULL, t1.c1, t1.c81))<((t1.c75, t0.c0, t1.c92))) COLLATE BINARY, CAST((0.42764676833166637 IN (vt0.c0)) AS INTEGER) FROM t0 INNER JOIN vt0 ON ((((t1.c1 IN ())))=((CAST(t1.c1 AS INTEGER)))) RIGHT OUTER JOIN t1 ON NULL WHERE (0.239671678568933 COLLATE RTRIM);SELECT ALL CAST(((t1.c99) BETWEEN (t1.c1) AND (vt0.c0)) AS NUMERIC), 0.9167931473252016, ((CASE t1.c1  WHEN t1.c81 THEN 75387744 WHEN t1.c1 THEN t1.c81 WHEN t1.c1 THEN vt0.c0 END) BETWEEN (SUM(t1.c99)) AND (((t1.c1)>>(t1.c81)))) FROM vt0, t0, t1; -- 0ms;
SELECT DISTINCT ((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS INTEGER))))AND((~ (t1.c75)))) FROM t1, vt0 LIMIT -1106669359; -- 0ms;
SELECT DISTINCT SUM((NOT (t0.c0))) OVER () FROM t0, t1 WHERE (0.8108504176726453) EXCEPT SELECT DISTINCT ((t1.c1)OR(((t0.c0)>(t1.c1)))) FROM vt0 ORDER BY ((((t1.c1) NOT BETWEEN (t1.c75) AND (t0.c0))) NOTNULL);SELECT DISTINCT t0.c0 FROM t0, vt0, t1 WHERE ((((((0.790295466425854 IN ()))AND(0.6555869771055963 COLLATE RTRIM)))OR(UPPER(x'')))) GROUP BY (((t0.c0)) NOT BETWEEN (((- (x'')))) AND ((((NULL) BETWEEN (t1.c75) AND (t1.c81))))), CASE (- (t1.c99))  WHEN (t0.c0 IN ()) THEN CASE '161753191'  WHEN t1.c1 THEN t1.c81 WHEN t1.c75 THEN t1.c75 WHEN x'' THEN t1.c1 END END, (((t1.c75, ((vt0.c0)LIKE(NULL)), t1.c1 COLLATE NOCASE))<>((((t1.c75) NOTNULL), CAST(vt0.c0 AS BLOB), (('SN') NOT BETWEEN (t0.c0) AND (vt0.c0))))) HAVING TOTAL(t1.c75 COLLATE BINARY) LIMIT -362194184; -- 0ms;
SELECT ALL (- (((t1.c92)&(vt0.c0)))) FROM vt0, t1, t0 WHERE (((CAST(NULL AS REAL)) IS FALSE)) ORDER BY CASE ((t1.c1)>=(NULL))  WHEN (((t0.c0, x'', t1.c75, t1.c75, t1.c92)) BETWEEN ((vt0.c0, vt0.c0, t1.c1, vt0.c0, t1.c92)) AND ((t1.c92, vt0.c0, t0.c0, NULL, 'vNSx'))) THEN CAST(x'' AS BLOB) WHEN t1.c99 COLLATE BINARY THEN (((vt0.c0, 0.35537561342032353, x''))<>((t1.c92, t1.c81, t1.c99))) WHEN ((vt0.c0)!=(t1.c99)) THEN CAST(t0.c0 AS TEXT) END DESC, CAST(x'' AS TEXT) ASC  NULLS FIRST; -- 1ms;
SELECT ALL CASE ((t1.c81) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (t0.c0)) THEN ((t1.c81)+(t0.c0)) WHEN ((t0.c0)-(t1.c92)) THEN json(t1.c92) WHEN CASE WHEN t0.c0 THEN vt0.c0 ELSE 0.2552167702790249 END THEN CASE WHEN t0.c0 THEN t1.c81 WHEN t1.c99 THEN t1.c75 WHEN t1.c1 THEN t1.c99 END END FROM t0, vt0, t1 WHERE (''); -- 0ms;
SELECT DISTINCT MIN((((t1.c81)) BETWEEN ((vt0.c0)) AND ((t1.c92)))) COLLATE NOCASE FROM vt0;SELECT LAST_VALUE((((((t1.c81)/(t1.c75)), ((((((((t1.c92)AND(t1.c81)))AND(t1.c81)))OR(t1.c92)))OR(t1.c99)), ((t1.c81)>=(t1.c81))))<>((((t1.c1) IS FALSE), ((t1.c92) BETWEEN (t1.c92) AND (t1.c1)), ((t1.c75) BETWEEN (NULL) AND (t1.c99)))))) OVER ( PARTITION BY ((t0.c0) IS TRUE), ((((vt0.c0)>(vt0.c0)))<>(HEX(DISTINCT t1.c75)))), (((t1.c99)) NOT BETWEEN ((COUNT(*))) AND ((((t1.c99)=(t1.c1))))), 0xffffffffc3d678fc FROM t1 ORDER BY ((x'')IS NOT(((t1.c75) IS TRUE)));SELECT ALL (((- (t1.c75)))&(((t1.c92)LIKE(t1.c1)))), ((((t1.c99)||(vt0.c0))) NOTNULL), RANK() OVER ( GROUPS BETWEEN t1.c81 PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS) FROM t0, t1 WHERE ((NOT ('-1761845896' COLLATE NOCASE)));SELECT DISTINCT x'' FROM vt0, t0, t1 LIMIT -1643754468 OFFSET -1847940443; -- 0ms;
SELECT ALL (((t1.c81 IN ())) BETWEEN (t1.c75) AND (MAX(t1.c75))) FROM vt0, t1; -- 0ms;
SELECT ALL CAST(t0.c0 AS INTEGER), CAST(((((t1.c81)OR(vt0.c0)))AND(t0.c0)) AS TEXT), CAST(((((t1.c92)OR('725441196')))AND(t1.c99)) AS INTEGER) FROM t0;SELECT DISTINCT SUM((x'' IN (t1.c99, t1.c99))) OVER () FROM t1 GROUP BY CASE ''  WHEN ((((((((t1.c99)OR(t1.c81)))AND(t1.c75)))AND('wn(ap^5')))AND(vt0.c0)) THEN t1.c1 WHEN (('-397423752') NOT BETWEEN (t1.c1) AND (t1.c75)) THEN highlight(vt0.c0, t0.c0, vt0.c0, t1.c92) WHEN ((0xffffffffea4ac477)|(t1.c75)) THEN ((t1.c92)<<(t1.c99)) END;SELECT AVG(-3.36234109E8) OVER () FROM t1, t0; -- 0ms;
SELECT ALL COUNT(*) OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW) FROM t0, t1; -- 0ms;
SELECT DISTINCT CASE WHEN COALESCE(DISTINCT t1.c99, t1.c99) THEN TOTAL(t1.c92) WHEN ((t1.c75) NOT NULL) THEN t1.c81 COLLATE RTRIM WHEN CAST(t0.c0 AS BLOB) THEN (((t1.c81))<>((t1.c75))) END, LAG((~ (t0.c0)) COLLATE BINARY, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) ISNULL), ((((t0.c0)OR(t0.c0)))*(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) OVER (), ((((((t1.c81) NOTNULL))AND((((t1.c1))<>((t0.c0))))))OR((NOT (t0.c0)))) FROM t0 WHERE (CAST(NULL COLLATE BINARY AS REAL));SELECT DISTINCT ((COUNT(t1.c75)) NOTNULL) FROM t1, vt0, t0 WHERE ((((NULL IN ()))AND(((NULL) NOT BETWEEN (NULL) AND (0X38f8fbd8))))); -- 0ms;
SELECT (((t1.c92 IN (t1.c1)))/(t1.c1 COLLATE BINARY)), LIKELY(INSTR(t1.c99, t1.c99)), HEX(DISTINCT ((t1.c1)*(t1.c99))) FROM t0 GROUP BY LIKELY(DISTINCT ((t1.c1)<<(t0.c0)));SELECT ((~ (t1.c1)) IN ()), CASE CASE WHEN t1.c92 THEN t1.c99 ELSE t1.c99 END  WHEN ((((t1.c75)AND(t1.c81)))OR(t0.c0)) THEN ((t1.c92) BETWEEN (t1.c99) AND (x'')) ELSE ((t1.c92)=(t1.c99)) END, ((TOTAL(t1.c75)) NOTNULL) FROM vt0 ORDER BY 0xfffffffffcce5ace DESC;SELECT DISTINCT ((MAX(t1.c75))>=(((t1.c1) NOT BETWEEN (t1.c81) AND (t1.c75)))) FROM t0, vt0, t1 WHERE (CAST(((((0x63eecdcd)AND(NULL)))AND(x'6a41')) AS TEXT)) ORDER BY (((t1.c75))<=(((('V')IS NOT(t1.c1))))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL MIN(((t0.c0) NOT BETWEEN (t1.c81) AND (t1.c99))), (((vt0.c0)) BETWEEN ((t1.c99 COLLATE RTRIM)) AND ((vt0.c0))), vt0.c0 FROM t0, t1, vt0 WHERE (((-1555363101 IN (0.3232729001168173)) IN (NULL))); -- 0ms;
SELECT DISTINCT AVG(((((((((vt0.c0)AND(t1.c99)))AND(t1.c75)))AND(t1.c75)))OR(t1.c75))) OVER () FROM t0;SELECT ((((t1.c1)<=(x'')))GLOB(CAST(vt0.c0 AS REAL))), MIN(((t0.c0)>=(t1.c92))), (- (((vt0.c0)%(t1.c81)))), CAST((t1.c81 IN ()) AS NUMERIC), (((t1.c92) NOT NULL) IN ()) FROM t1 WHERE ((((((((((0.5071163883262456)AND(NULL)))OR(x'')))OR('-223804991')))OR('-1908036098')) IN (((x'5c75') IS FALSE))));SELECT DISTINCT t1.c92, (NOT (((t0.c0)IS NOT(t1.c1)))), ((((t1.c1)-(t0.c0)))|(t1.c92)) FROM t1, vt0, t0; -- 0ms;
SELECT CAST(((0.4862836564209304)-(t1.c99)) AS INTEGER), CAST(t0.c0 AS INTEGER), CAST((t1.c81 IN ()) AS INTEGER) FROM t0, t1, vt0; -- 0ms;
SELECT DISTINCT (((CASE t1.c99  WHEN vt0.c0 THEN t0.c0 ELSE t1.c99 END))<((((((vt0.c0)AND(t1.c92)))AND(t1.c1))))) FROM vt0, t1 WHERE (0.2530700271906531);SELECT DISTINCT HEX(DISTINCT ((vt0.c0) IS FALSE)) FROM vt0, t0, t1; -- 0ms;
SELECT ((((t1.c99)>=(0Xffffffff9970eb7a))) IS FALSE) FROM t0 WHERE (((((((((TRIM(DISTINCT NULL))AND(((x'')<(0.4381069287862843)))))OR(CAST(NULL AS TEXT))))AND((NULL IN ()))))AND(TRIM(DISTINCT NULL))));SELECT DISTINCT LAG(t1.c1, ((t1.c81) NOT NULL), ((t1.c92 COLLATE NOCASE)>>(((t1.c92)%(t1.c99))))) OVER () FROM t1, t0 WHERE (((((0.39939737788200147) ISNULL))IS NOT(CAST(-2.122511389E9 AS INTEGER)))); -- 0ms;
SELECT ALL (((((x''))<((x'')))) NOT BETWEEN (NULLIF(vt0.c0, t1.c1)) AND (CASE 'a\w	'  WHEN t0.c0 THEN '-2120333686' WHEN t1.c81 THEN t1.c81 WHEN t1.c75 THEN t1.c92 ELSE t1.c75 END)) FROM t1, vt0, t0; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0, vt0, t1 WHERE (TYPEOF(DISTINCT 'Lk*') COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOTNULL) FROM t0 WHERE (((('')) BETWEEN ((x'')) AND (((('-1383327498') NOT BETWEEN ('傈T') AND (NULL))))));SELECT CASE WHEN (((t1.c81))<((vt0.c0))) THEN CAST(t0.c0 AS BLOB) ELSE (NOT (0x17908c6b)) END FROM vt0, t1, t0 WHERE (((((NULL)GLOB(x'f9f5'))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((t1.c75)) BETWEEN ((CAST(t1.c81 AS TEXT))) AND ((((t1.c1) NOT NULL)))) FROM vt0, t0;SELECT DISTINCT NULLIF(CAST(vt0.c0 AS TEXT), CAST(t1.c81 AS TEXT)) FROM t0 WHERE ((((((x'')GLOB(0.3057562582859513))))>=((NULLIF(DISTINCT 0.9552070680375295, '430683768')))));SELECT ((((((((CAST(vt0.c0 AS BLOB))OR(CAST(t1.c92 AS INTEGER))))OR(((t1.c99)/(t0.c0)))))OR(((((t1.c75)OR(NULL)))AND(t1.c99)))))AND(t1.c92)), t1.c99, LENGTH(CASE WHEN t1.c75 THEN t0.c0 END) FROM t0, vt0, t1 WHERE (((CAST('' AS NUMERIC)) ISNULL)); -- 0ms;
SELECT ALL ((CASE WHEN t1.c92 THEN vt0.c0 ELSE t0.c0 END)GLOB(TOTAL(t1.c75))), ((t1.c99) IS FALSE), t1.c1 FROM vt0, t1, t0; -- 0ms;
SELECT DISTINCT ((t1.c1 COLLATE NOCASE)IS(((t1.c1) IS TRUE))), 0.9279774779392969, ((((((((((t1.c81)AND(t1.c81)))OR(t1.c92)))AND(t1.c99)))OR(t1.c99))) ISNULL) FROM t1 WHERE (((LIKELY(NULL)) BETWEEN (((('-524377451'))<>((x'e8a8')))) AND ((((((((('0.00906865358267439')AND(0xffffffffbb581417)))OR(']')))OR(-678139756)))AND('846496803'))))) LIMIT -1844799151 OFFSET -578374138; -- 0ms;
SELECT TRIM((~ (t1.c1)), (- (t1.c99))), TYPEOF(DISTINCT vt0.c0) COLLATE RTRIM COLLATE RTRIM, ((((t1.c99)<>(t0.c0)))IS NOT(t1.c99)) FROM t1;SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS REAL) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (NOT (CASE t0.c0  WHEN t0.c0 THEN t1.c75 END)) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((CAST(t1.c99 AS INTEGER)) IS FALSE) FROM t1, t0, vt0 WHERE ((NOT (((0X204bd685)>(0.17156101902234733))))); -- 0ms;
SELECT CUME_DIST() OVER ( RANGE NULL PRECEDING), NULL, IFNULL(DISTINCT ((t1.c99) BETWEEN (vt0.c0) AND (vt0.c0)), ((NULL) NOTNULL)), ((NOT (t1.c81)) IN ()), t1.c75 FROM t1, t0 LIMIT -879517920;SELECT (((t0.c0 IN ()))|(((t1.c1) ISNULL))) FROM t0, t1 WHERE ((((0.6227057901933731) IS FALSE) IN ())); -- 0ms;
SELECT DISTINCT (t1.c92 COLLATE BINARY IN ()) FROM vt0, t0, t1 INDEXED BY i42;SELECT ALL CASE (((t1.c99)) NOT BETWEEN ((t1.c99)) AND ((t1.c1)))  WHEN CAST(t1.c92 AS REAL) THEN ((((NULL)OR(t1.c92)))AND(t1.c92)) WHEN (((0.16235320750942217)) NOT BETWEEN ((t1.c81)) AND ((t0.c0))) THEN CAST(t1.c81 AS INTEGER) WHEN 0.25411872286110027 THEN ((t1.c99) IS TRUE) ELSE (((t1.c92)) BETWEEN ((t1.c99)) AND ((t1.c1))) END FROM t0 WHERE ((((x'')) BETWEEN (((('-1437527546')>(6.93132224E8)))) AND ((CAST(-1.506408448E9 AS TEXT))))) GROUP BY ((((t1.c99)AND(t1.c75))) IS TRUE);SELECT ((CASE t1.c99  WHEN t0.c0 THEN t0.c0 WHEN t1.c92 THEN 1769023452 WHEN t1.c99 THEN t0.c0 END) ISNULL), AVG(((('1868618571', t1.c1, t1.c81)) NOT BETWEEN ((t1.c99, t1.c99, t1.c99)) AND ((vt0.c0, t1.c92, t1.c81)))), ((t1.c75)-(t1.c92)) COLLATE BINARY FROM vt0, t1, t0 GROUP BY ((((((((((((((((((((t0.c0)AND(vt0.c0)))AND(t1.c99)))AND(t0.c0)))OR(t1.c1)))AND(((t0.c0)<(t1.c92)))))OR('-1649009070')))OR(t1.c81 COLLATE NOCASE)))OR(((t1.c92) IS TRUE))))AND(((((t1.c75)OR(t1.c1)))OR(t1.c81)))))AND(NULL)), ((CASE t0.c0  WHEN t1.c99 THEN t1.c92 WHEN t1.c75 THEN t1.c1 WHEN NULL THEN NULL ELSE 'W쥔}bb]A5' END)|(((t1.c75)+(t1.c81)))), CAST((t1.c99 IN ()) AS REAL) HAVING t1.c1; -- 2ms;
SELECT DISTINCT ((((((((((t1.c75)AND(t1.c92)))OR(t1.c75)))AND(t1.c75)))AND(t1.c1)))|(MAX(t0.c0))) FROM vt0;SELECT DISTINCT ((t0.c0 IN (t1.c81)) IN ()) FROM vt0, t1 ORDER BY LOWER(DISTINCT CASE t1.c99  WHEN t1.c81 THEN t1.c99 WHEN t1.c81 THEN t1.c99 WHEN vt0.c0 THEN t1.c1 END) ASC; -- 0ms;
SELECT DISTINCT ((((t1.c75 IN (t1.c99))))==((CAST(t1.c99 AS INTEGER)))) FROM t1, vt0, t0; -- 0ms;
SELECT (t1.c75 IN ()) FROM t0, t1; -- 0ms;
SELECT DISTINCT (('cH')<(t0.c0)) COLLATE NOCASE FROM t0 WHERE (CAST(HEX(0.04059294196702712) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE 'KHfZ'  WHEN (NULL IN (0.4568621089681151, NULL)) THEN 'aR' WHEN COUNT(*) THEN 0.40585290487836057 WHEN ((t1.c1) BETWEEN (t0.c0) AND (t1.c1)) THEN t1.c99 ELSE ((t1.c75) BETWEEN (t1.c1) AND (vt0.c0)) END, x'', (json_extract(t1.c75, t1.c1) IN ()), CASE ((t1.c1)>(t1.c75))  WHEN (('1529966912')IS NOT(t1.c81)) THEN GROUP_CONCAT(t1.c1) END, ROW_NUMBER() OVER (), (t1.c99 IN ()) COLLATE NOCASE, ((- (t0.c0)) IN ((t1.c75 IN ()))) FROM vt0 NOT INDEXED, t0 WHERE (((('報ti3ꠚZ')) BETWEEN ((((((NULL)AND('-1833560393')))OR(NULL)))) AND ((((NULL) NOTNULL))))) ORDER BY ((t0.c0 COLLATE BINARY)GLOB(CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;SELECT DISTINCT CASE WHEN (('*	i⊃D')LIKE(t1.c75)) THEN TYPEOF(t1.c1) ELSE (((t1.c92)) BETWEEN ((t1.c81)) AND ((NULL))) END FROM t1, vt0, t0 WHERE (CAST(((x'') IS FALSE) AS NUMERIC)); -- 0ms;
SELECT ALL ((((vt0.c0)GLOB(t1.c99))) IS TRUE) FROM t0, vt0, t1 WHERE ((NULL IN ())); -- 0ms;
SELECT ALL AVG((((t1.c81, t0.c0, t0.c0))>((vt0.c0, t0.c0, t0.c0)))) OVER () FROM t1, vt0;SELECT ALL ((CASE WHEN t0.c0 THEN t1.c92 END)<(((t0.c0)IS(t1.c92)))), ABS(CASE t1.c81  WHEN t1.c1 THEN t1.c1 END), NULL FROM t0, t1; -- 0ms;
SELECT ALL AVG(((t1.c75)+(vt0.c0))) FROM t0 WHERE ((~ (((x'666c') NOTNULL))));SELECT DISTINCT (((t1.c1)|(vt0.c0)) IN (COALESCE(DISTINCT t1.c92, vt0.c0))) FROM t0, t1 WHERE (CASE WHEN (((0.18512402484825874))>=(('iX43xb\rWh'))) THEN '' END) GROUP BY t1.c81 ORDER BY CAST((((vt0.c0))>=((t1.c1))) AS INTEGER)  NULLS LAST;SELECT MIN('Gn''GGeN&') FROM vt0, t1, t0; -- 0ms;
SELECT DISTINCT CASE ((t1.c92) BETWEEN (t1.c1) AND (t1.c99))  WHEN ((t1.c92) ISNULL) THEN MIN(t1.c81) WHEN ((t1.c99) IS TRUE) THEN CASE t1.c1  WHEN t0.c0 THEN vt0.c0 WHEN t1.c1 THEN t1.c99 WHEN t1.c1 THEN t1.c99 END WHEN ((t1.c99) NOT BETWEEN (t1.c81) AND (NULL)) THEN vt0.c0 END, (- ((+ (t1.c81)))), CASE WHEN ((t1.c92) BETWEEN (t1.c92) AND (t1.c99)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (t1.c92 IN ()) END, MAX(((t1.c75) NOT BETWEEN (t1.c81) AND (vt0.c0))), MAX(((((t1.c1)AND(t1.c81)))AND(NULL))) FROM vt0, t0, t1 WHERE (CAST(((NULL) NOTNULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((('JBr') NOT NULL) IN ()), (((((((((((t1.c1))>=((t0.c0))))AND(((((((((((((t1.c1)AND(t1.c75)))AND(t1.c92)))AND(vt0.c0)))OR(t1.c75)))AND(t1.c81)))AND(0.6569244993525751)))))AND(TYPEOF(DISTINCT t1.c92))))OR(((t1.c1) NOT BETWEEN (t1.c81) AND (t0.c0)))))AND(((((vt0.c0)OR(t0.c0)))OR(t1.c81)))), ((((t1.c81)-(t1.c99))) BETWEEN (0x355db9a7) AND (((t0.c0)>>(t1.c81)))) FROM t1, t0 WHERE ((((NULL)==(x'')) IN ())) ORDER BY CASE CASE vt0.c0  WHEN t1.c1 THEN vt0.c0 END  WHEN ((t1.c92)/(t1.c81)) THEN t1.c81 COLLATE NOCASE ELSE 0.19610000135469374 COLLATE NOCASE END ASC LIMIT 1092848808 OFFSET -1851807695;SELECT DISTINCT CAST(((((0.5270224997747304)AND(t1.c75)))OR(t1.c81)) AS TEXT) FROM t1, t0, vt0 WHERE ((~ (x'' COLLATE RTRIM))) GROUP BY CAST((t0.c0 IN (t1.c75, vt0.c0)) AS INTEGER) HAVING vt0.c0; -- 1ms;
SELECT ALL ((((((t1.c75)+(t1.c99)))AND(((t1.c92)/(t1.c99)))))AND(CAST(0.15614103037219018 AS TEXT))) FROM t0 WHERE (((((NULL) NOT NULL)) NOT BETWEEN (TYPEOF(DISTINCT -1812965379)) AND (((((((((NULL)OR(x'8bdf')))OR('1448290732')))OR(NULL)))AND(NULL)))));SELECT DISTINCT json_extract(t1.c99, ((t1.c75) BETWEEN (t1.c92) AND (t1.c75)), (~ (t1.c92)), ((vt0.c0) BETWEEN (t1.c92) AND (t1.c75))) FROM t1 WHERE (json_array((x'' IN ()), NULL COLLATE BINARY, CAST('^' AS NUMERIC), CASE x'7aec'  WHEN x'' THEN NULL END, ('-1589255726' IN ()), (NOT ('\rkꆨb'))));SELECT ALL (((t1.c1)) BETWEEN (((((t0.c0, t1.c92, t1.c75)) NOT BETWEEN ((t1.c92, t1.c75, t0.c0)) AND ((t1.c81, t1.c99, x''))))) AND ((t1.c81))) FROM t1, vt0, t0 WHERE (((CASE WHEN 0.7176993726863053 THEN '1105932271' END) IS FALSE)) LIMIT -1022534068 OFFSET -564595632; -- 0ms;
SELECT LAST_VALUE(((((((((((t0.c0)OR(vt0.c0)))OR(x'')))OR(t1.c92)))OR(t1.c92))) BETWEEN (t1.c1) AND (((vt0.c0)|(t1.c81))))) OVER ( ORDER BY t0.c0 ROWS x'' PRECEDING) FROM t0, vt0, t1;SELECT ALL COALESCE(DISTINCT t1.c99, t1.c75) COLLATE BINARY FROM t0, t1 WHERE (CASE WHEN CHANGES() THEN ((('', '-1385737010', 0.10680744381008955)) NOT BETWEEN ((0.259175594425076, NULL, 0.8184215909923315)) AND (('', '-1647333351', -901705992))) WHEN IFNULL(x'', '71') THEN ((x'')=(x'')) WHEN ((((x'')AND('WP')))OR('-1424264121')) THEN ((((-2.122511389E9)AND(x'')))AND('0.7816048371330444')) ELSE CAST('' AS BLOB) END); -- 0ms;
SELECT DISTINCT (NOT (((t0.c0) NOTNULL))) FROM t0 WHERE ((((1856189936)) BETWEEN (((((0.6310830144261914)) NOT BETWEEN ((0x0)) AND (('-1964571479'))))) AND (((((0.9821045822133811)) BETWEEN ((0Xffffffffde34112c)) AND ((x'3420'))))))); -- 0ms;
SELECT ALL ((vt0.c0)AND(MIN(t1.c1))) FROM t0, t1, vt0; -- 0ms;
SELECT DISTINCT ((t0.c0)>>(t0.c0)) COLLATE NOCASE FROM t1, vt0, t0 WHERE (((x'') IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (~ ((~ (t1.c92)))) FROM vt0 WHERE (((((((((((((((0xffffffff93739fde)IS(NULL)))OR(((x'')>>(x'')))))AND(((0.057565187970846976)IS NOT('1990347306')))))AND(CASE ''  WHEN ')etQ ' THEN NULL END)))AND((((((((('-1126364353')OR(0.5615810110908833)))AND(0.5391043540925476)))OR(0.24666065089422406)))AND(x'')))))AND(((((NULL)AND('1330967686')))AND('0.8481347096802624')))))OR((((((((((((('-1126364353')OR('p')))OR(0xffffffffe60a37e6)))OR(x'')))AND('[^祓CX]r	wEl')))OR('286177321')))AND(0.9149252074612542))))) GROUP BY (((TYPEOF(DISTINCT vt0.c0)))=((t1.c1 COLLATE RTRIM))) HAVING SQLITE_COMPILEOPTION_GET((t1.c99 IN ()));SELECT ALL ((CAST(vt0.c0 AS INTEGER))+(((t1.c81)OR(NULL)))) FROM t1 WHERE ((((0xffffffff87f39220) NOT BETWEEN ('{䨪') AND (NULL)) IN ())) GROUP BY ((((vt0.c0)OR(t1.c1 COLLATE RTRIM)))OR(QUOTE(t0.c0))) HAVING (vt0.c0 IN ()) COLLATE BINARY;SELECT DISTINCT (NOT ((t1.c75 IN ()))) FROM vt0, t0 WHERE (((('')=(-1964571479)) IN ())); -- 0ms;
SELECT ALL CASE WHEN (t1.c92 IN ()) THEN ((t1.c1)==(t1.c75)) END FROM vt0, t1, t0; -- 0ms;
SELECT ALL (CASE ''  WHEN t1.c92 THEN t1.c99 WHEN t1.c81 THEN t1.c75 WHEN vt0.c0 THEN vt0.c0 END IN ()), AVG(t1.c75) OVER (), LIKELY(((t0.c0) NOT BETWEEN (t1.c92) AND (t1.c75))) FROM t0, vt0 WHERE (JULIANDAY(CASE NULL  WHEN x'' THEN '-385715045' WHEN 629177623 THEN 0.8160119575975306 WHEN x'' THEN '-1894816908' END, LTRIM(-1729275814, ''), (('s4c6''')IS('1729996267')), ((0xffffffffe60a37e6) ISNULL), CASE 0.18227002962841565  WHEN '' THEN NULL ELSE 0.004317156672461575 END, (('start of dayEX') ISNULL), ((0.5190625891362343)IS(0Xffffffffc2bb7dbb))));SELECT DISTINCT ((((t1.c92)) BETWEEN ((vt0.c0)) AND ((t0.c0))) IN (t1.c92 COLLATE BINARY, ((t1.c75)>=(t1.c99)))) FROM t1, vt0;SELECT ((((COUNT(t0.c0))OR(((t1.c75) NOTNULL))))OR(((vt0.c0) IS TRUE))) FROM vt0 WHERE ((((('-1747380989' IN ())))<((CAST(NULL AS INTEGER)))));SELECT ALL '흃/K]R', (CAST(t1.c92 AS INTEGER) IN ()), (0Xffffffffa6a75861 IN ()), CASE WHEN ((t1.c75)<<(vt0.c0)) THEN CASE vt0.c0  WHEN t1.c92 THEN t0.c0 END END, ((((t1.c92)*(vt0.c0))) NOT NULL) FROM t0, t1, vt0 WHERE ((((('[uᛣ]+a') NOT BETWEEN (NULL) AND ('1700164859')))IS NOT(1e500 COLLATE BINARY))); -- 0ms;
SELECT CASE vt0.c0  WHEN vt0.c0 THEN t1.c75 ELSE t0.c0 END COLLATE RTRIM FROM t1, vt0, t0 WHERE (CASE ''  WHEN CASE WHEN 0.5659036796563007 THEN -5.24377451E8 END THEN ((((x'')OR(NULL)))AND(0.12156257224976397)) END); -- 0ms;
SELECT ALL SUM(TOTAL(((t1.c99)|(t1.c81)))), ((((vt0.c0) IS FALSE)) IS FALSE), ((UNLIKELY(vt0.c0)) BETWEEN (CAST(0.6209152317011238 AS REAL)) AND ((((t1.c92, t1.c75, t1.c1, t0.c0, vt0.c0)) NOT BETWEEN ((t1.c75, vt0.c0, t1.c1, '', x'1572')) AND ((t1.c99, t1.c99, t0.c0, t1.c1, t1.c75))))) FROM t0, t1, vt0 WHERE (((((CASE ''  WHEN x'' THEN NULL END)AND(LOWER(NULL))))AND(CASE WHEN '421685311' THEN 0.4221218665633615 ELSE x'' END)));SELECT DISTINCT ((((t1.c75) ISNULL)) BETWEEN (NULL) AND (((t1.c75) NOT BETWEEN (t1.c75) AND (t0.c0)))), ((((((((CASE t0.c0  WHEN t0.c0 THEN '-64627985' END)OR(json_insert(t0.c0, t1.c99, t0.c0))))OR(t1.c92)))OR(((t1.c1) NOT BETWEEN (t1.c81) AND (t1.c81)))))OR(((vt0.c0)<=(x'dcb5')))), ((CASE WHEN t1.c75 THEN NULL END)>=(((t1.c92)<(t1.c75)))) FROM t1 WHERE (((((-1851807695)IS(0.9628144657582571))) ISNULL)) GROUP BY (((((t0.c0)OR(vt0.c0)))AND('-1158911374')) IN ()), ((((t1.c81) NOT BETWEEN (vt0.c0) AND (t1.c81))) BETWEEN (((((t1.c99)AND(t0.c0)))AND(t1.c99))) AND (ABS(DISTINCT vt0.c0))), vt0.c0 HAVING ((((((((((vt0.c0)%(t0.c0)))AND(t1.c75)))OR((t1.c75 IN ()))))OR(((t1.c81) BETWEEN (vt0.c0) AND (t1.c1)))))AND(((t1.c75)>>(t1.c75))));SELECT COUNT(NULL), 0.900568861633289, COUNT(*) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE TIES) FROM t0, vt0 GROUP BY NULL HAVING t0.c0; -- 0ms;
SELECT DISTINCT SUM((t0.c0 IN ()) COLLATE BINARY) OVER () FROM t1, t0 WHERE (CASE WHEN CAST(0.2972758368481144 AS REAL) THEN UNLIKELY(x'') END); -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), LEAD(((CAST(x'3fd6' AS NUMERIC))|((t0.c0 IN ()))), ((t0.c0 IN ()) IN ()), t0.c0) OVER (), '1129564500' FROM t0 WHERE ((CASE x''  WHEN 0x50a1b2da THEN x'' END IN ((('-5799028')=(-1962234231)), x'' COLLATE BINARY))); -- 0ms;
SELECT AVG(vt0.c0) OVER () FROM t1, vt0 GROUP BY ((0.31231267585692146) IS FALSE) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)+(((((t1.c75)AND(vt0.c0)))AND(vt0.c0)))) FROM t1, t0 INNER JOIN vt0 ON ((CAST(x'' AS NUMERIC))*(vt0.c0)); -- 0ms;
SELECT DISTINCT t1.c99, LAST_VALUE((((t1.c99)) NOT BETWEEN ((((x'') BETWEEN (t1.c81) AND (t1.c1)))) AND ((t0.c0)))) OVER (), t1.c92 FROM t0, t1; -- 0ms;
SELECT CASE CASE t1.c75  WHEN t1.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c99 WHEN t1.c75 THEN NULL WHEN t1.c81 THEN t1.c1 WHEN t1.c75 THEN t1.c75 END  WHEN CAST(t0.c0 AS NUMERIC) THEN (((t1.c1))==((vt0.c0))) END FROM vt0, t1 WHERE (((('')) BETWEEN (((((('-336234109')OR(x'')))AND(x'bf09e891a0d3')))) AND ((((-178096668) NOTNULL)))));SELECT DISTINCT (~ (CASE t1.c75  WHEN t1.c75 THEN t0.c0 END)), (((t0.c0)OR(t1.c1)) IN ((t1.c1 IN ()))), CAST(x'' AS TEXT) FROM vt0 GROUP BY (((((t1.c92)) BETWEEN ((vt0.c0)) AND ((t1.c1)))) NOT NULL) HAVING LOWER(((t1.c92) BETWEEN (vt0.c0) AND (t1.c92)));SELECT CAST((((vt0.c0, NULL, vt0.c0)) BETWEEN ((vt0.c0, -1.437527546E9, t1.c1)) AND ((t1.c75, t1.c75, t1.c75))) AS NUMERIC) FROM t1, t0 WHERE (CAST((('3CuYWVdL')*('-207386393')) AS TEXT)) ORDER BY ((CAST(t1.c1 AS BLOB))/((((t1.c1))>((t1.c81))))) ASC;SELECT CASE ((t1.c92)<=(t1.c81))  WHEN 0.44804077202295733 THEN (~ (t1.c81)) WHEN MAX(vt0.c0) THEN t1.c99 COLLATE BINARY WHEN load_extension(t1.c1, t0.c0) THEN LIKELY(vt0.c0) END, ((((t1.c99)<(vt0.c0)))<(((t0.c0) NOT NULL))), ((((-104865093)>(t1.c92))) NOT BETWEEN ((~ (vt0.c0))) AND ((~ (t1.c81)))) FROM t1, vt0;SELECT DISTINCT (((t1.c92))==((((((((((((((t0.c0)AND(t1.c75)))OR(t1.c99)))OR(vt0.c0)))AND(t1.c99)))AND(t1.c92)))AND(t1.c81))))) FROM t1, vt0, t0 WHERE ((x'' IN ('e*u\n݉44-7531259252320144398T860:1703--8232167714230023224:&]')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((t1.c99) NOT BETWEEN (t1.c75) AND (t1.c81))) ISNULL), (((((t1.c75)/(t0.c0)), ((t0.c0) IS TRUE), 0.6575874024275282))<((((t1.c99) NOT BETWEEN (2067285975) AND (vt0.c0)), ((t1.c75) IS FALSE), (vt0.c0 IN ())))), NTH_VALUE(CASE TYPEOF(t1.c99)  WHEN ((((t1.c75)OR(t1.c99)))OR(t1.c99)) THEN ((t1.c81)<=('-2122511389')) WHEN (((t1.c1)) BETWEEN ((t0.c0)) AND ((t1.c92))) THEN (((t1.c75)) NOT BETWEEN ((t0.c0)) AND ((t1.c1))) WHEN '1417704048' THEN (((t1.c92)) BETWEEN ((t1.c75)) AND ((t0.c0))) ELSE CAST(vt0.c0 AS NUMERIC) END, UPPER(CASE t1.c75  WHEN t1.c99 THEN t1.c1 END)) OVER ( ORDER BY (((t1.c92)-(0xfffffffff9f30372)) IN ()) ASC  NULLS FIRST, ((((((((((x'')OR(t1.c1)))OR(t1.c99)))AND('')))AND('-2071098195')))&((+ (NULL)))), UNLIKELY(DISTINCT vt0.c0)) FROM vt0, t1, t0;SELECT ALL (- (((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c99)))), ((((((0Xffffffffca9fadb0)OR(t1.c1)))AND(t1.c1))) BETWEEN (((((vt0.c0)AND(t1.c81)))AND(vt0.c0))) AND (((t1.c1) ISNULL))), CAST((((t1.c92))>((t1.c81))) AS REAL) FROM vt0, t0 WHERE ((((((0X655674fb IN (0.19580655812845726, '1153544972')))AND(((((NULL)AND(0Xffffffffc8daf9d1)))AND('-1546537665')))))AND(((x'') BETWEEN ('1257884803') AND (-1.638806751E9))))) GROUP BY t1.c81, json_valid(((t1.c92) BETWEEN (t0.c0) AND (t1.c1))), ((t1.c99) BETWEEN (t1.c81) AND (t1.c99)) COLLATE RTRIM HAVING t1.c1;SELECT DISTINCT ((CAST(t1.c81 AS REAL)) BETWEEN (0x300dce9a) AND ((vt0.c0 IN (t0.c0)))) FROM t1, t0;SELECT DENSE_RANK() OVER (), (((((t1.c81)-(t0.c0)), ((t1.c75)IS(t1.c92)), ((t1.c1) NOT BETWEEN (t1.c75) AND (NULL))))=((((t1.c99) NOT BETWEEN (t1.c75) AND (t1.c99)), '0.6227057901933731', ((t1.c1)IS NOT(t1.c92))))), ((t1.c99 IN ()) IN ((((t1.c75, t1.c99, t1.c92)) BETWEEN ((t1.c81, t0.c0, vt0.c0)) AND ((t1.c1, t1.c75, t1.c99))))) FROM vt0;SELECT ALL t1.c99, t1.c81, ((((t1.c1) NOT BETWEEN (t0.c0) AND (t1.c1))) BETWEEN (((t0.c0) NOTNULL)) AND ((('') NOT BETWEEN (t1.c75) AND (t0.c0)))) FROM t1, t0, vt0 WHERE ((- (0.5323257842965657 COLLATE NOCASE))); -- 0ms;
SELECT ((CAST(t1.c1 AS TEXT))OR(((t1.c75) NOT BETWEEN (x'') AND (t1.c75)))) FROM vt0, t1 WHERE (CAST((+ (-1.489158164E9)) AS INTEGER)) LIMIT -345056602; -- 0ms;
SELECT DISTINCT ((t1.c92 COLLATE NOCASE)==(CAST(vt0.c0 AS INTEGER))), CASE WHEN vt0.c0 COLLATE RTRIM THEN AVG(t0.c0) ELSE ((vt0.c0) BETWEEN (t1.c81) AND (t0.c0)) END, vt0.c0 FROM vt0, t0;SELECT ALL ((((((t0.c0)OR(t0.c0)))OR(t1.c75))) ISNULL), 'q*<-{\n', (((((t1.c92))<((t1.c1)))) NOT BETWEEN (CASE WHEN NULL THEN t1.c75 END) AND (((t1.c99)<<(t1.c99)))) FROM vt0 WHERE (0.18061472693380842 COLLATE BINARY) LIMIT -1362040079 OFFSET 1788467083;SELECT DISTINCT LEAD(((('626485412')) BETWEEN (((((t1.c92)) NOT BETWEEN ((x'4884')) AND ((vt0.c0))))) AND ((1.117070415E9))), ((((t1.c92) BETWEEN (t1.c1) AND (t1.c75))) NOTNULL), HEX('-1955713074')) OVER () FROM t1, vt0 LIMIT -1586306068; -- 0ms;
SELECT DISTINCT SUM((((t0.c0))!=((vt0.c0)))) OVER () FROM t1, vt0 WHERE (CASE WHEN ('1012933803' IN ()) THEN CAST(x'' AS NUMERIC) WHEN ((NULL)&(NULL)) THEN ((x'b20a')IS('1729996267')) WHEN CAST('-1126364353' AS REAL) THEN (NOT (NULL)) ELSE ((-1158911374)|('Gn''GGeN&')) END);SELECT ALL DATETIME(((((((((t1.c1)OR(t1.c92)))AND(t1.c81)))AND(t1.c75)))OR(vt0.c0)), ((((vt0.c0)AND(NULL)))AND(vt0.c0)), t1.c99), ((t1.c81)-(vt0.c0)) COLLATE RTRIM, CUME_DIST() OVER ( PARTITION BY (- ((t1.c81 IN ()))), IFNULL(DISTINCT (t1.c81 IN ()), CAST('' AS BLOB))) FROM t1;SELECT DISTINCT (- (((t0.c0)<(vt0.c0)))) FROM t0, vt0 WHERE ((((((((('-231841052')AND(x'')))AND('-639616789')))AND(CAST(-1325186.0 AS TEXT))))AND((0X10c2cd07 IN (-921247677))))); -- 0ms;
SELECT NULL FROM t1; -- 0ms;
SELECT ALL t1.c99 FROM vt0, t1 WHERE (((((((((((x'')AND(x'')))OR(0X5507cbcd)))OR(0.7504370769239401)))OR(0.239671678568933)))>=(GLOB(NULL, 0.8769448923697669)))); -- 0ms;
SELECT DISTINCT ((((((0.543866479845746) BETWEEN (t1.c99) AND (t0.c0)))AND(x'')))OR(CASE WHEN 'KHfZ' THEN t0.c0 WHEN t1.c99 THEN t1.c99 WHEN t1.c99 THEN t1.c99 END)), (((((((((NOT (t1.c92)))OR(((t1.c92) NOT BETWEEN (t1.c99) AND (t0.c0)))))AND(((((vt0.c0)OR(0x19abb678)))OR(vt0.c0)))))AND(vt0.c0)))OR(vt0.c0)), (((t1.c1)>(t1.c99)) IN ()) FROM t0, vt0, t1 WHERE ((((((x'')-(x'')), ((NULL) IS TRUE), 0.2515411580819593 COLLATE RTRIM))>((x'e3ff' COLLATE RTRIM, ((('1525242076', 0.8604781726414542, 0.994023752491096))==((0.18100972319467767, x'', x''))), ((0.675655471360762) NOT NULL))))); -- 0ms;
SELECT ALL t1.c1 FROM vt0;SELECT DISTINCT ((json_patch(t1.c1, '	y'))LIKE((+ (vt0.c0)))) FROM t0, vt0, t1 WHERE ((((0.08677241336112718) NOTNULL) IN ())); -- 0ms;
SELECT ALL ((((((0.4000685447592811)OR(t1.c92)))OR('1274991741')))OR((((t1.c99, t1.c99, t0.c0))<((t1.c75, vt0.c0, t0.c0))))) FROM t1, vt0 WHERE (((((((((((((-2.22208516E8)OR(x'')))OR(x'')))OR(((((x'')AND('oUXC')))OR('-1330762900')))))AND(x'' COLLATE BINARY)))OR(((-5.24377451E8) NOT BETWEEN (-6.4627985E7) AND (0.9648139862134302)))))OR(((NULL)GLOB(x'')))));SELECT ((((((((((((t1.c75)AND(HEX(t1.c75))))OR(t1.c1 COLLATE NOCASE)))OR(CAST(t1.c75 AS NUMERIC))))OR((((t1.c81))>=((t0.c0))))))OR(((t1.c99) ISNULL))))AND((t1.c75 IN ()))) FROM t1, vt0; -- 0ms;
SELECT ((((((((((t1.c81)GLOB(t1.c81)))AND(CAST(t1.c99 AS INTEGER))))AND(t1.c99)))OR(((vt0.c0) NOTNULL))))OR((+ (t1.c75)))) FROM t0;SELECT ALL CHANGES(), (((((vt0.c0)<=(t1.c1))))<(((t1.c1 IN ())))), rtreenode(((t1.c99) NOT BETWEEN (vt0.c0) AND (t1.c75)), ((((((((((((vt0.c0)OR(t1.c92)))OR(1.977706333E9)))AND(vt0.c0)))AND(t1.c81)))OR(t0.c0)))AND(t1.c1))), ((json_valid(t1.c81)) NOT NULL), (~ (((t0.c0)*(vt0.c0)))) FROM t1, t0;SELECT DISTINCT GROUP_CONCAT('') OVER () FROM t1 NOT INDEXED, vt0, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE ((t1.c92)>(t1.c81))  WHEN (('-1851807695')>>(t1.c99)) THEN ((t0.c0)-(t1.c99)) ELSE (t0.c0 IN ()) END, ((vt0.c0)IS NOT((NOT (t1.c81)))), 1117070415, CAST((('r+7hnP^?') NOT BETWEEN (t1.c92) AND (t1.c75)) AS BLOB), NULL FROM t1 WHERE (CASE (NOT (2085105517))  WHEN ((0.8813221481385778)LIKE(x'')) THEN CASE WHEN 'ix43xb\rwh' THEN NULL ELSE NULL END WHEN ((0.5081776239164365)*(0.05899439430513442)) THEN (('d[<!') BETWEEN ('1&') AND (NULL)) WHEN (((('>!')OR(NULL)))OR(NULL)) THEN (('') NOT BETWEEN (NULL) AND ('681372480')) END);SELECT ALL STRFTIME(((((((((((((t1.c75)OR(t0.c0)))AND(t1.c92)))OR(t1.c75)))OR(t1.c81)))AND(t1.c99)))AND(t0.c0)), t1.c1 COLLATE BINARY, ((t1.c75) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) ISNULL), json_valid(t1.c1)) FROM vt0;SELECT DISTINCT t1.c1 FROM vt0 WHERE ((((('~2x')=(0.5990546557293126))) NOT BETWEEN (CASE NULL  WHEN x'' THEN NULL END) AND (CASE '-819596410'  WHEN 0.7878494890511857 THEN x'' END)));SELECT DISTINCT LAST_VALUE((NULL IN ()) COLLATE RTRIM) OVER (), AVG(((vt0.c0)-(t0.c0))) FILTER(WHERE CASE WHEN ((vt0.c0)>>(t0.c0)) THEN 0.5732746505864209 ELSE ((t1.c99)&(t1.c92)) END) OVER (), (((vt0.c0)|(t0.c0)) IN ()) FROM vt0, t1, t0 LIMIT 1708572814; -- 1ms;
SELECT ALL ((((t1.c99)-(t1.c1))) NOT BETWEEN (MIN(vt0.c0)) AND (CAST(t1.c92 AS BLOB))) FROM t0, vt0 GROUP BY ((((t1.c92) NOTNULL)) NOT NULL) HAVING HEX(t0.c0 COLLATE RTRIM);SELECT DISTINCT (~ ((((t1.c81))>=((0.8713600053178217))))), (t1.c1 IN ()), ((((t1.c1) NOT NULL)) NOT BETWEEN (t1.c92 COLLATE BINARY) AND (((t0.c0) IS TRUE))) FROM t0, vt0, t1 WHERE (((('' IN (0.6542776672655605))) IS TRUE)) GROUP BY (((0X3798dbfe))==(((((t1.c99))<=((vt0.c0)))))), (((t1.c1 IN (t1.c75))) IS FALSE), (((~ (t1.c99))) BETWEEN (CAST(t1.c99 AS REAL)) AND (((((((((t1.c92)OR(x'')))AND(vt0.c0)))OR(t0.c0)))AND(t1.c1)))) HAVING t1.c81; -- 0ms;
SELECT ALL GROUP_CONCAT((- (t1.c81))) OVER () FROM t0, vt0, t1 WHERE ('2073503934') ORDER BY (('\rt' COLLATE NOCASE)OR((~ (t0.c0))))  NULLS LAST; -- 6ms;
SELECT ALL ((((CASE t1.c99  WHEN t1.c1 THEN t1.c75 END)AND(t1.c92 COLLATE BINARY)))AND(((t0.c0)>(t1.c75)))), COUNT(*) OVER (), PERCENT_RANK() OVER () FROM t1;SELECT DISTINCT ((t1.c75 COLLATE NOCASE) NOT BETWEEN ((- (t1.c92))) AND (CASE t1.c99  WHEN vt0.c0 THEN x'' WHEN x'' THEN t0.c0 WHEN t1.c99 THEN t1.c92 END)), (((0.9707619349824408)) BETWEEN ((NULL)) AND ((((t1.c92)/(-895504976))))), COUNT('1359844719') OVER () FROM t1 LIMIT -1214603194;SELECT ((1.868618571E9)IS(vt0.c0 COLLATE BINARY)) FROM t0, vt0 WHERE ((((((NULL))!=((NULL))))&(CAST(x'' AS REAL)))); -- 0ms;
SELECT ALL TOTAL(CAST(t1.c99 AS INTEGER)) OVER (), CASE WHEN ((t1.c92)<<(t1.c1)) THEN ((t1.c75)||(t1.c75)) END, (((NOT (t0.c0))) BETWEEN (TRIM(t0.c0, t1.c81)) AND (GROUP_CONCAT(t1.c75))), t1.c99, HEX(((t1.c81) IS TRUE)) FROM t1, vt0, t0; -- 1ms;
SELECT 0.6149973936823215 COLLATE RTRIM, RANK() OVER ( PARTITION BY (~ (NULL)) COLLATE BINARY, CAST(CASE '6?4ND'  WHEN t1.c75 THEN t1.c99 ELSE t0.c0 END AS INTEGER), '435775967', (~ ((((t0.c0, t1.c75, x'0258'))>((t1.c75, vt0.c0, t1.c1))))) RANGE  UNBOUNDED PRECEDING), TOTAL((t1.c81 IN ())), (((((((t1.c75)OR(vt0.c0)))AND(t1.c75))))<=((GROUP_CONCAT(vt0.c0)))), (- (((((t1.c81)AND(t1.c92)))OR(t1.c81)))) FROM vt0, t0, t1 WHERE ('') ORDER BY CAST(t1.c99 AS REAL) DESC  NULLS LAST; -- 0ms;
SELECT ALL MIN(((t1.c92) ISNULL)), SQLITE_SOURCE_ID(), CAST(vt0.c0 AS INTEGER) FROM t1, t0, vt0 WHERE (LOWER(DISTINCT (- (NULL)))); -- 0ms;
SELECT DISTINCT (MIN(t1.c1) IN ()), ((CAST(t1.c81 AS REAL))-((((vt0.c0)) BETWEEN ((t1.c99)) AND ((t1.c1))))), 0.08603527657385202 FROM t1, t0;SELECT ALL (((((((((t1.c1)AND(t1.c81)))OR(t1.c99)))OR(vt0.c0)))OR(t1.c1)) IN ()) FROM t0, vt0; -- 0ms;
SELECT (CASE WHEN vt0.c0 THEN t1.c92 WHEN t1.c75 THEN 0.6353521441876904 WHEN 0.8769448923697669 THEN x'' ELSE t1.c92 END IN ()), MIN((~ (t1.c1))), CAST(((t1.c92) IS TRUE) AS TEXT) FROM t0, t1, vt0 WHERE (((((HEX(0.44060945193203305))AND((('1763474622')+(x'23482ebf')))))AND(-639005198))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT('') OVER ( PARTITION BY CAST((t1.c92 IN ()) AS REAL), NULL) FROM t1, vt0; -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM vt0, t1, t0 WHERE (UPPER(DISTINCT (NOT (-147834246)))); -- 0ms;
SELECT DISTINCT CASE ((t1.c75) NOT NULL)  WHEN ((vt0.c0) ISNULL) THEN COUNT(*) END, 0X18eedc36, (((t1.c99)) NOT BETWEEN (((t1.c1 IN ()))) AND (((- (t0.c0))))) FROM vt0 INDEXED BY i42, t0 WHERE (((-163929120 COLLATE RTRIM) BETWEEN (((0.21134638557410557)&(x''))) AND (CAST(x'' AS INTEGER)))) GROUP BY (~ ((t1.c81 IN ()))) HAVING ((CHAR(0.7217262447533926)) NOT BETWEEN ((((t1.c75)) BETWEEN (('111703299')) AND ((t0.c0)))) AND (((t0.c0)|(t1.c75))));SELECT DISTINCT COALESCE(vt0.c0, ((t1.c75)>(t0.c0))) FROM t0 LIMIT 1794850115;SELECT json_valid((((vt0.c0)) NOT BETWEEN ((t1.c81)) AND ((t1.c92)))) FROM t0, t1, vt0; -- 1ms;
SELECT (((((- (t1.c81)))OR(((t1.c81) ISNULL))))OR((((t1.c92))=((t1.c92))))) FROM t0, vt0;SELECT ALL ((CASE WHEN t1.c99 THEN vt0.c0 ELSE t1.c92 END) ISNULL) FROM t1 WHERE (((CAST('' AS INTEGER))<=(CAST(x'' AS NUMERIC))));SELECT ALL ((IFNULL(t0.c0, t1.c92)) BETWEEN (CASE t1.c99  WHEN vt0.c0 THEN t1.c99 ELSE t0.c0 END) AND (COALESCE(vt0.c0, t0.c0))), CAST((- (t1.c81)) AS INTEGER), ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((t1.c81 IN ())) AND ('1874488191')) FROM t1, vt0 WHERE (-1);SELECT DISTINCT ((CASE WHEN t1.c92 THEN t1.c1 ELSE t1.c81 END)<>(((0.8578549042954127)+(t1.c99)))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t1.c1) IS TRUE)) FROM t0, vt0 WHERE (((((x'8af5')>(0x17257015)))<=((+ ('0.908939656604707')))));SELECT HEX(((t1.c81)>=(NULL))) FROM vt0, t1 WHERE ((((0.02598864441051496 IN ())) NOT BETWEEN ((- ('-456125124'))) AND (x'edc431b14e81' COLLATE NOCASE))); -- 0ms;
SELECT TOTAL(GROUP_CONCAT(((t1.c75)AND(t1.c1)))) FROM t1, vt0, t0 WHERE (CAST(CASE WHEN NULL THEN NULL ELSE '-1162590258' END AS REAL)) GROUP BY -5.9066003E7 HAVING LIKELIHOOD(DISTINCT ((((t1.c92)AND(t0.c0)))AND(t1.c81)), 0.18390402139630868);SELECT DISTINCT CASE WHEN CASE t1.c81  WHEN '-394464001' THEN t1.c99 WHEN t1.c1 THEN t1.c75 WHEN vt0.c0 THEN t1.c99 ELSE t1.c75 END THEN ((t1.c75) IS FALSE) ELSE ((((t1.c1)OR(t1.c92)))AND(t1.c92)) END, CAST((~ (t0.c0)) AS TEXT), (((t1.c99 IN (t1.c1, t1.c99)))<(t1.c92)) FROM vt0, t1;SELECT DISTINCT 0.7345157796954496 FROM t0, vt0, t1 WHERE (CASE '' COLLATE RTRIM  WHEN ((NULL)>=(-1424264121)) THEN (NOT (x'')) WHEN TRIM(0.8916699847625411, x'') THEN x'f52c' WHEN (1860716291 IN ()) THEN CHANGES() END); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((t1.c92, t1.c1, t1.c92)) BETWEEN ((CAST(t1.c99 AS REAL), ((t0.c0) IS FALSE), (+ (t1.c99)))) AND ((((t1.c81) NOT BETWEEN (t1.c81) AND (0Xffffffff8f2eaf56)), CAST(vt0.c0 AS TEXT), (t1.c81 IN ())))) FROM t1, vt0, t0 WHERE ('()'); -- 0ms;
SELECT ALL (NOT (t1.c1)) COLLATE NOCASE FROM t1, t0, vt0 WHERE ((NOT (LIKELY('-524377451')))); -- 0ms;
SELECT DISTINCT (((t1.c1))>=(((t1.c1 IN ())))), CASE WHEN ((t1.c75) BETWEEN (t1.c1) AND (t1.c75)) THEN (t1.c99 IN ()) ELSE ((t1.c1)/(t1.c92)) END, ((vt0.c0) NOT BETWEEN ((+ (t1.c75))) AND (((t1.c75)/(t1.c81)))) FROM t0;SELECT DISTINCT SUM((('ҟg{}')-(t0.c0))) OVER () FROM t1 NATURAL JOIN vt0 ORDER BY (CASE t1.c1  WHEN vt0.c0 THEN vt0.c0 END IN (((((((((((((t1.c81)AND(vt0.c0)))AND(t1.c1)))OR(vt0.c0)))AND(t1.c99)))AND(t1.c1)))AND(vt0.c0))))  NULLS LAST;SELECT DISTINCT ((x'') NOT BETWEEN ((((t1.c99, vt0.c0, t1.c1))!=((t1.c99, t1.c75, t1.c81)))) AND ((NOT (t1.c99)))) FROM t0, vt0 WHERE ((CAST(x'bef0f7c8' AS BLOB) IN ())) ORDER BY CAST(CHAR(vt0.c0) AS BLOB) ASC  NULLS FIRST, CAST(t1.c92 COLLATE RTRIM AS TEXT) ASC;SELECT CASE t1.c1  WHEN vt0.c0 THEN t1.c1 WHEN t1.c92 THEN t0.c0 WHEN t1.c81 THEN x'' WHEN t0.c0 THEN vt0.c0 WHEN t1.c92 THEN t0.c0 ELSE t1.c75 END COLLATE BINARY, LIKELY((+ (t1.c92))), ((((((((vt0.c0)AND(t0.c0)))OR(t1.c1)))AND(t1.c92)))AND(t1.c81)) COLLATE NOCASE FROM vt0, t1 WHERE ((+ ((('UL')LIKE(x'')))));SELECT CASE COUNT(t1.c92)  WHEN ((t1.c75)<<(t1.c99)) THEN CAST(t1.c1 AS INTEGER) END FROM vt0, t1, t0 ORDER BY t0.c0; -- 1ms;
SELECT DISTINCT t1.c99, (((((t1.c92))==((vt0.c0))))/(GROUP_CONCAT(t1.c81))), x'' FROM vt0 LIMIT 1022428395;SELECT ALL ((((vt0.c0, vt0.c0, t1.c75))!=((t1.c1, t1.c99, vt0.c0))) IN (((((((((0.7623479372506082)AND(t0.c0)))AND(t1.c75)))OR(t0.c0)))OR(t1.c81)), '0.7905816133301363')) FROM vt0, t0, t1 WHERE (x''); -- 0ms;
SELECT DISTINCT '1897078070', CAST(((vt0.c0)>(t1.c75)) AS REAL), NULL FROM t1, t0 WHERE ((((('1723232380')-(0.15793571753722724)))IS((+ (1.435056562E9))))) GROUP BY CAST(t1.c81 COLLATE NOCASE AS REAL) HAVING ((((t1.c75) ISNULL))IS NOT((((t0.c0)) BETWEEN ((t1.c75)) AND ((x'50e6')))));SELECT (((((t1.c1)OR(t1.c81)))AND(t1.c92)) IN ()), (NOT ((((t1.c81, t1.c99, t1.c1))>((t1.c1, '&u', t1.c81))))), NULLIF(DISTINCT (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), MAX(t1.c1)) FROM t1 WHERE ((NOT (0Xffffffffeddcf6c8)));SELECT (((t1.c1)) BETWEEN (((+ (vt0.c0)))) AND (((- (t1.c99))))) FROM t0, t1, vt0; -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))OR(t0.c0))) IS TRUE), CASE WHEN CAST(t1.c1 AS TEXT) THEN (NOT (vt0.c0)) END, CAST(AVG(t1.c75) AS TEXT) FROM t1;SELECT ALL ((t0.c0) BETWEEN (t1.c92) AND ('0.6227057901933731')) COLLATE RTRIM FROM vt0 NOT INDEXED WHERE ((((0.7672770579821026, NULL, NULL)) BETWEEN ((CASE WHEN x'0cc7' THEN '' ELSE -641150344 END, ('(?!)	<''d&' IN (0x6800b2f6)), TYPEOF(0xffffffffd305ac1e))) AND ((((x'') BETWEEN (0X4e6ab50b) AND (x'e5e0941b')), UPPER(0.9045646677739992), (- (-3.24863483E8))))));SELECT DISTINCT CAST(t1.c1 COLLATE NOCASE AS INTEGER), x'', t1.c81 FROM vt0, t1 WHERE (((((0.15385220180224402) IS TRUE)) NOTNULL)); -- 0ms;
SELECT ALL ((((((((MAX(t1.c92))AND((t1.c1 IN ()))))AND(t1.c1 COLLATE BINARY)))OR(t1.c81)))OR('W|<z')) FROM t0, t1, vt0; -- 0ms;
SELECT COUNT(*) OVER () FROM t0, t1, vt0; -- 0ms;
SELECT ALL CAST(t1.c81 COLLATE NOCASE AS INTEGER), CAST(t0.c0 AS INTEGER) COLLATE NOCASE, ((HEX(DISTINCT t1.c81))LIKE(((((t1.c75)AND('SI_F')))AND(t1.c81)))) FROM t0 WHERE ((((0xffffffffe368f5ee, 0.010489153752397673, 'KS')) NOT BETWEEN (((('')/('588330666')), NULL, (((-1040863317)) NOT BETWEEN (('-1895986116')) AND ((x''))))) AND (((((('-336234109')OR(x'9e2d')))AND('')), (((x'6ed0', '-1247252644', 0.36406860587530365))<>((0.1313278718875862, 0.8922192051749517, x''))), ((((0.18965095693508094)AND('v쮓m#>(lK')))OR(0.24150726956020196))))));SELECT ALL ((((t0.c0) NOTNULL))>(CAST(t0.c0 AS BLOB))) FROM t0, t1, vt0; -- 1ms;
SELECT DISTINCT t0.c0 FROM t1, vt0 WHERE (((CASE 8.95334823E8  WHEN '-332029121' THEN 1 WHEN x'' THEN NULL WHEN x'' THEN 0.6570551320692782 ELSE '-1499649062' END) NOT BETWEEN (((0.653059229003153)<(0.6215929302637937))) AND ((((0.1996273744282654)) NOT BETWEEN ((0.6350254087522273)) AND ((NULL))))));SELECT ALL ((((t1.c99)AND(((t1.c81) NOT BETWEEN (t1.c92) AND (NULL)))))AND(AVG(t1.c92))), t1.c75, t1.c92 FROM t1, vt0, t0 INTERSECT SELECT DISTINCT t0.c0 COLLATE NOCASE, t0.c0, (((t1.c81)) NOT BETWEEN ((((((t0.c0)AND(NULL)))OR(t1.c99)))) AND ((NULL))) FROM vt0 FULL OUTER JOIN t1 ON 0.3586246359549481 LEFT OUTER JOIN t0 ON CAST(((t0.c0) BETWEEN (t1.c81) AND (t1.c75)) AS NUMERIC) WHERE ((((x'6b00')) NOT BETWEEN ((((0.9285802397250755)<>('qDk<}(Ⓞ')))) AND ((((NULL)&(-2.137921553E9)))))); -- 0ms;
SELECT DISTINCT (NOT (8.95334823E8)) FROM t0, t1, vt0 WHERE (((((0.19141903704712215)%(0.016177772955407344))) BETWEEN ('') AND ((('d>!Vwf*') NOT NULL)))); -- 0ms;
SELECT ((0.08425044463474085) IS FALSE) FROM t0, vt0, t1 WHERE ((((NOT (1.29087457E9)))*((NOT ('9,''\n3Nfr8'))))); -- 0ms;
SELECT DISTINCT (- ((('_Q') IS TRUE))) FROM t1 WHERE (((('Bq') NOT BETWEEN (0.6540584206155663) AND (0Xffffffffb67e65ff)) IN ())); -- 0ms;
SELECT DISTINCT (t1.c92 IN ()) COLLATE RTRIM FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((CAST(t1.c81 AS REAL)) NOT NULL) FROM t0, vt0 WHERE (LIKELY(TYPEOF(DISTINCT ''))) LIMIT 157434341;SELECT DISTINCT CUME_DIST() OVER () FROM t1, t0 WHERE (CASE CASE '-1135047748'  WHEN 'dy' THEN 0.5943198226336563 WHEN 0.7896079229080033 THEN x'' WHEN x'c723' THEN x'' END  WHEN 0.2504872777471773 THEN (('1839920227') BETWEEN ('hAZm[s爠,') AND (0xffffffffc8311b27)) WHEN ((NULL)LIKE('rC')) THEN ((3.88329493E8) NOT NULL) WHEN (('')<<(NULL)) THEN '424234862' END); -- 0ms;
SELECT DISTINCT MIN(x'f9cb'), CAST(CAST(t1.c1 AS BLOB) AS REAL), CASE ((t1.c75) NOTNULL)  WHEN load_extension(t1.c99) THEN (~ (t1.c1)) END FROM vt0;SELECT ((((t1.c1)) BETWEEN ((t1.c1)) AND ((t0.c0))) IN ()), SUM(((t0.c0) IS FALSE)), NTH_VALUE(((CASE WHEN t1.c99 THEN t1.c99 ELSE t1.c81 END)<(CAST(t1.c92 AS NUMERIC))), CASE WHEN (t1.c75 IN ()) THEN ((t1.c99) IS FALSE) END) OVER ( RANGE ((((((((ABS(t1.c81))OR(CAST(vt0.c0 AS TEXT))))OR(NULL)))OR(t1.c99 COLLATE RTRIM)))AND((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t1.c75))))) PRECEDING) FROM t0, t1 ORDER BY ((-1833560393)LIKE(0.40342920108834857))  NULLS FIRST;SELECT COUNT(*) OVER () FROM t0 LIMIT 200267653 OFFSET 1258061484; -- 0ms;
SELECT ((GROUP_CONCAT(t0.c0))>>(t1.c75 COLLATE NOCASE)), (- (t0.c0 COLLATE BINARY)), LAST_VALUE(((TIME(t1.c92, t1.c92, t1.c1))OR(HEX(t1.c75)))) OVER () FROM t1;SELECT DISTINCT ((NULL)<>(vt0.c0)) COLLATE RTRIM FROM t1, vt0 ORDER BY NULL; -- 0ms;
SELECT DISTINCT ((CAST(t1.c81 AS INTEGER)) IS FALSE), (((((+ (t0.c0)))AND(((t1.c1)<=(NULL)))))AND((~ (t1.c99)))), LIKE(t1.c75 COLLATE NOCASE, ((vt0.c0) IS TRUE), ' ') FROM t1, t0 NATURAL JOIN vt0; -- 1ms;
SELECT DISTINCT (((((((((((t1.c92)OR(t1.c75)))AND(t1.c75)))AND(t1.c1)))AND(NULL))))>=(((- (t1.c92))))) FROM t1, t0 INDEXED BY i24 WHERE ((+ (((x'') BETWEEN (NULL) AND ('')))));SELECT ALL TOTAL(t1.c81) OVER ( PARTITION BY (((((x'' IN ()))AND(t1.c92)))AND(((t1.c99) IS FALSE))), ((t1.c92)|('-435537946')) COLLATE NOCASE) FROM t0, vt0;SELECT ((t1.c75 COLLATE NOCASE) ISNULL), (((t1.c75) NOT NULL) IN ()), (((0.7320448520345841)|(t1.c92)) IN ()) FROM t1, t0, vt0; -- 0ms;
SELECT ((((t1.c92)AND(t1.c99)))==(((((vt0.c0)AND(t1.c92)))AND(t1.c1)))), CAST(((vt0.c0)<=(0.6598001271308885)) AS INTEGER), ((((CASE t1.c75  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)AND((- ('wT')))))AND(AVG(t1.c1))) FROM vt0, t0, t1; -- 0ms;
SELECT ALL (((((vt0.c0)) BETWEEN ((t1.c1)) AND ((t1.c99)))) IS TRUE), SUM((~ (t1.c92))), t1.c92 FROM vt0, t0;SELECT DISTINCT ((((t1.c75)AND(t1.c99)))>>('')), CAST(((vt0.c0) NOTNULL) AS BLOB), ((t1.c75)|(((t0.c0) NOTNULL))) FROM t1 WHERE ((((x'') BETWEEN ('-1325186') AND (-1.55268232E9)) IN ()));SELECT ALL 0.6249924513912998, (- (SUM(t1.c99))), (((t1.c99))>=((SQLITE_COMPILEOPTION_USED(vt0.c0)))) FROM t0, t1, vt0 WHERE (((((('-tF9N{B' IN ()))AND(CASE x''  WHEN x'' THEN x'45890d01' WHEN -1894816908 THEN '1330967686' WHEN x'' THEN x'' WHEN x'' THEN 0Xffffffffe260a67c WHEN NULL THEN '0.285104260772546' END)))AND(((NULL)|(''))))); -- 0ms;
SELECT ((((t1.c99 IN ()), (((t1.c81)) BETWEEN ((vt0.c0)) AND (('2UMJT'))), t1.c75 COLLATE RTRIM))<>((((t1.c99)+(vt0.c0)), t1.c81, ((t1.c92) NOT BETWEEN (t1.c99) AND (vt0.c0))))), TOTAL((t0.c0 IN (t1.c99))) OVER (), MAX(CASE t1.c92  WHEN '' THEN t1.c75 WHEN vt0.c0 THEN t1.c92 WHEN 503132371 THEN NULL END) FROM t1 WHERE (NULL) LIMIT -1541867220 OFFSET -1216280779;SELECT DISTINCT ((CASE WHEN vt0.c0 THEN x'' WHEN t1.c81 THEN t1.c99 WHEN t1.c1 THEN t1.c92 END)IS NOT((t1.c92 IN ()))) FROM vt0;SELECT ((t1.c92) NOTNULL), ((((t1.c81) BETWEEN (t1.c1) AND (t0.c0)))&(HEX(DISTINCT t0.c0))), ((((t1.c1)==(t0.c0))) ISNULL) FROM vt0 ORDER BY (NOT (CASE t1.c1  WHEN t1.c75 THEN t1.c99 WHEN t1.c75 THEN t1.c92 WHEN t0.c0 THEN t1.c99 ELSE t1.c75 END))  NULLS FIRST;SELECT SUM(((t1.c81) IS TRUE)) OVER ( ORDER BY (((((t1.c81))==((t1.c75)))) IS TRUE) DESC), ((((t1.c81) NOT BETWEEN (t1.c75) AND (t1.c1)))!=(((t1.c92)*(t1.c1)))), ((((((t1.c1)OR(0.5674277827062943)))AND(vt0.c0))) IS FALSE) FROM vt0, t1, t0; -- 2ms;
SELECT CAST((- (0X20950305)) AS BLOB), (t1.c1 COLLATE BINARY IN ()), ((((t1.c75) BETWEEN (0.26085057082010976) AND (t1.c1)))IS(((t1.c1)>(t1.c81)))) FROM vt0, t1, t0 WHERE ((NOT ('/7)')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT t1.c75 FROM vt0, t0 WHERE ((- (((((((((((((x'928d')AND(0.0542835334557672)))AND(NULL)))AND(x'')))OR(0.6440505737698836)))OR(-1473271255)))AND(1010045419))))) GROUP BY (~ ((((t0.c0))>((x'9c5c'))))), (((t0.c0, t1.c92, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB), ((t0.c0) IS TRUE), ((t1.c99)IS NOT(t0.c0)))) AND ((CASE WHEN t1.c99 THEN vt0.c0 END, ((x'') NOTNULL), TYPEOF(DISTINCT t1.c92)))), t1.c99, CASE WHEN ((((((((t1.c92)OR(t1.c1)))AND('-1206428209')))AND(t1.c81)))AND(0.4631837580997916)) THEN LTRIM(vt0.c0, t1.c92) WHEN ((t1.c1) NOT NULL) THEN t0.c0 COLLATE NOCASE WHEN ((((t1.c1)OR(NULL)))AND(t0.c0)) THEN CAST(t1.c75 AS TEXT) END, (((NULL IN ()))!=(CAST(vt0.c0 AS TEXT)));SELECT DISTINCT ((((t1.c81)<(vt0.c0))) BETWEEN ((+ (t1.c75))) AND (((((t1.c81)OR('1300345394')))AND(t1.c1)))) FROM vt0, t0, t1 WHERE ((((0.7078785267379858, 0.22120865118390054, 0.8431862773106343, x'', x'2f58')) NOT BETWEEN ((((((-1.833560393E9)OR(x'')))AND(0x5758b6f9)), CAST('w(' AS REAL), CAST(x'a45e' AS REAL), ((NULL)>(x'')), NULL)) AND ((CAST('1763474622' AS INTEGER), 0Xffffffff93739fde, (NULL IN ('-1964571479')), (0.6521378651365782 IN ('')), x'' COLLATE RTRIM)))); -- 0ms;
SELECT ((CAST(t0.c0 AS INTEGER))/(((t1.c1) NOTNULL))), ((((NULL)OR(((0.3640881539580332)||(vt0.c0)))))AND(((t1.c92)LIKE(t1.c81)))), CASE ((t1.c92) IS TRUE)  WHEN ((((vt0.c0)AND(t1.c92)))AND(t1.c81)) THEN LTRIM(0xffffffff8309d317, t1.c81) WHEN ((t1.c99) BETWEEN (t1.c99) AND (t1.c75)) THEN ((t1.c99) NOT BETWEEN (t1.c99) AND (t1.c99)) WHEN ((t0.c0)LIKE(t1.c1)) THEN ((t1.c81)/(t1.c81)) END FROM t1 WHERE (((x'5f2cf1a5')|((((((((('')AND(-5.83441205E8)))OR('1726247543')))OR(NULL)))OR('-435537946'))))) LIMIT 1591080709;SELECT CAST((((t1.c92)) NOT BETWEEN ((t1.c75)) AND ((t1.c81))) AS TEXT) FROM t1, vt0, t0 GROUP BY (~ (((t1.c92)+(0.4206854538217888)))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0, t0, t1 ORDER BY (~ (NULL)) ASC  NULLS FIRST LIMIT -1552682320; -- 1ms;
SELECT ALL ((((t1.c81)/(t0.c0)))<(((((((((t1.c99)OR(t1.c75)))OR(t1.c75)))AND(t0.c0)))OR(vt0.c0)))), (((CASE t1.c75  WHEN t1.c81 THEN t1.c81 END))<=((((0.23629140254789727) NOT BETWEEN (t1.c1) AND (t1.c1))))), ((((((((t1.c92 COLLATE NOCASE)OR(((t1.c92)||(0.1677876573402678)))))OR(t1.c99 COLLATE NOCASE)))OR((((t1.c92, t1.c1, t1.c1, t1.c75, t0.c0)) NOT BETWEEN ((vt0.c0, t1.c1, t1.c75, vt0.c0, vt0.c0)) AND ((t1.c99, t1.c1, t1.c1, NULL, t1.c99))))))AND(((((t1.c92)OR(x'')))AND(t1.c81)))) FROM vt0, t0 WHERE ((((((((((NULL)OR('-2129687982')))AND('')))AND(x'')))AND(x'5435aae1')) IN ()));SELECT DISTINCT (((((('1856189936')) NOT BETWEEN ((t1.c81)) AND ((t1.c81))), json_valid(t1.c81), (- (t1.c75))))>((NULLIF(DISTINCT vt0.c0, t0.c0), (t1.c92 IN ()), t1.c75 COLLATE BINARY))) FROM t0, t1 WHERE (((((0.0371478089407582) BETWEEN ('421685311') AND (0.6393032543825511)))LIKE(0x31e693a2))) ORDER BY CASE WHEN (((t0.c0))<((t1.c99))) THEN 0.07524576209550426 ELSE (~ (t1.c1)) END;SELECT ALL (t1.c1 COLLATE NOCASE IN ()) FROM t0, t1, vt0 WHERE ((((0.8873545867473439, 'o8', 0.7276518194584173)) BETWEEN ((((x'')&(x'')), STRFTIME(NULL, NULL, 0.2564604711034051), (('')/(x'')))) AND ((0x64c0875f, CASE WHEN 0.6979756839498833 THEN NULL WHEN '-1833560393' THEN -728114135 WHEN 0.745720459861322 THEN '-1836838190' ELSE 0.9763148725564251 END, x'' COLLATE NOCASE)))) GROUP BY (('-385715045')<=((((vt0.c0, t1.c92, t1.c1)) NOT BETWEEN ((t1.c99, t1.c92, t1.c1)) AND ((t1.c99, t1.c92, t1.c1))))); -- 1ms;
SELECT ((((-9.01705992E8)OR(x'a875')))OR(SUM(t1.c75))) FROM t0;SELECT DISTINCT COUNT(*) OVER () FROM t0, vt0 WHERE (json_patch(0.9901863719464835, ((x'') NOTNULL))); -- 0ms;
SELECT DISTINCT LAG(CAST(TRIM(vt0.c0, '-2121905043') AS INTEGER), (((((+ (vt0.c0)))OR(((vt0.c0) IS TRUE))))OR((+ (t1.c1)))), t1.c81) OVER () FROM t0, vt0, t1 WHERE (0.8614697090559285); -- 0ms;
SELECT DISTINCT ((t1.c99 COLLATE BINARY)<=((0xffffffff8863aa26 IN ()))) FROM t1, t0 GROUP BY ((((LIKE(t1.c75, t1.c99, '0'))AND(((t1.c99) NOT NULL))))OR(((t1.c75)>=(vt0.c0))));SELECT ALL (((0.6737896726220072) ISNULL) IN ()) FROM t1, t0, vt0 WHERE ((('''?' IN ()) IN (((x'')-('\nJiz&j'))))); -- 0ms;
SELECT DISTINCT (((((t1.c99)<<(t1.c92)), t1.c92, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c81)))))==((CAST(t1.c1 AS REAL), vt0.c0, CAST(t1.c92 AS NUMERIC)))) FROM vt0;SELECT (((t1.c99) IS TRUE) IN (COUNT(t1.c1))) FROM vt0, t1 WHERE (0.7836451769409215); -- 1ms;
SELECT (t1.c1 IN ()) FROM t0, t1, vt0 WHERE (((CASE WHEN NULL THEN NULL WHEN '' THEN -6.2660838E8 WHEN '-1832503615' THEN x'9ad3' END) BETWEEN ((0x4295244f IN ())) AND ((('G1') BETWEEN (-584332345) AND ('-2014080480'))))); -- 0ms;
SELECT (+ (((0xffffffffca410ef8)IS NOT(vt0.c0)))), SUM(((((vt0.c0)AND(t1.c92)))OR(NULL))) OVER (), (+ ((((t0.c0)) BETWEEN ((x'')) AND ((0xffffffffa6360800))))) FROM vt0 WHERE ((((+ (x'')))-(((('R)\r-')) NOT BETWEEN ((0.9552070680375295)) AND ((0X7ed3b706))))));SELECT DISTINCT (((COALESCE(t1.c81, t1.c81, vt0.c0, t0.c0), CAST(t0.c0 AS TEXT), ((((t1.c99)AND(t1.c75)))OR(t0.c0)), '1729996267', ((((((((vt0.c0)OR(t1.c81)))AND(t0.c0)))OR(t1.c1)))AND(t1.c1))))<=(((NOT (vt0.c0)), t1.c1 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER), AVG(t1.c81), (t1.c75 IN (t1.c99))))) FROM t0;SELECT DISTINCT CAST(0.8922192051749517 AS INTEGER), ((t1.c99) NOTNULL) COLLATE NOCASE, COUNT(t1.c99) FROM t1; -- 0ms;
SELECT DISTINCT (+ (CASE WHEN t1.c1 THEN t1.c75 WHEN t1.c99 THEN t1.c1 WHEN t0.c0 THEN t1.c92 ELSE t1.c81 END)) FROM t1 WHERE ((((NULL IN ()))<(CAST('#\KgUX[e' AS NUMERIC)))) ORDER BY (((((t1.c1, t1.c75, t1.c92))<=(('-1007269637', 0.6613092800721058, t1.c75))))<=(SUBSTR(t1.c99, vt0.c0)))  NULLS LAST, (~ ((+ (t1.c81))));SELECT DISTINCT ((((t1.c92) NOT BETWEEN (t1.c92) AND (t1.c99))) BETWEEN (((-1.152246812E9) IS FALSE)) AND (vt0.c0)), t1.c81, TOTAL((((t1.c81, t1.c81, t1.c75)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t1.c92))) COLLATE RTRIM) OVER () FROM vt0, t0 WHERE ((- (((0.17102828232256007) IS TRUE))));SELECT DISTINCT t1.c1, '1276754661', ((((t1.c81)+('-1161985740'))) NOT BETWEEN (ABS(DISTINCT t1.c99)) AND (((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) FROM vt0, t1, t0; -- 0ms;
SELECT ALL ((((((t0.c0, t1.c99, t1.c99))>((t1.c1, t0.c0, t1.c81)))))<>((((((t1.c75)AND(t1.c99)))OR(t1.c92))))) FROM t1, t0 ORDER BY ((((t1.c1, t1.c92, t0.c0)) BETWEEN ((t1.c1, t1.c75, vt0.c0)) AND ((t1.c99, t1.c1, NULL))) IN (CASE 't4>m6#~'  WHEN t1.c1 THEN t1.c81 END, t0.c0)) ASC;SELECT (((t0.c0)+(t1.c81)) IN ()), (+ ((+ (vt0.c0)))), (((t1.c81 IN (x''))) NOT NULL) FROM t0, vt0, t1 GROUP BY (~ (t0.c0)); -- 1ms;
SELECT DISTINCT (((NOT (t1.c92))) BETWEEN (CAST(t1.c92 AS TEXT)) AND (CAST(vt0.c0 AS INTEGER))) FROM vt0, t0, t1 GROUP BY (((t1.c1)) NOT BETWEEN (((t1.c92 IN ()))) AND ((x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (((ABS(DISTINCT 0.43952605086627083)) IS TRUE)); -- 0ms;
SELECT ALL ((((((((((((t1.c81)OR(t0.c0)))OR(t0.c0)))OR(((NULL)%(NULL)))))AND(t1.c1 COLLATE BINARY)))OR(CAST(vt0.c0 AS REAL))))OR(((t1.c75) BETWEEN (t1.c1) AND (t1.c92)))) FROM vt0 WHERE ((((-1.418969061E9 IN ()))AND(((NULL)AND(0Xffffffffcaa47e61)))));SELECT ALL (((((vt0.c0))>((t1.c1)))) IS TRUE) FROM t0 WHERE ((((('-1108835791' COLLATE NOCASE)OR(((0.33169810806291533) NOT BETWEEN (0.6432220623805338) AND (x'')))))OR(((((1811072777)AND('767960941')))OR('<G[.k''a'))))) LIMIT 1117070415;SELECT LOWER(t1.c1) FROM t1 WHERE ((~ ((- (NULL))))) GROUP BY CAST(CASE vt0.c0  WHEN t0.c0 THEN t1.c92 WHEN vt0.c0 THEN t1.c92 WHEN t1.c1 THEN t1.c1 END AS NUMERIC) HAVING CAST(x'' COLLATE BINARY AS NUMERIC);SELECT (+ (CAST(t1.c81 AS NUMERIC))) FROM t0;SELECT DISTINCT ((((t1.c92) IS TRUE)) IS FALSE), CASE ((t1.c1) BETWEEN (t0.c0) AND (t1.c81))  WHEN t1.c92 THEN CAST(t0.c0 AS BLOB) END, CUME_DIST() OVER () FROM t0 WHERE ((((NOT ('851253740')))/(((((0x3f3d3e03)AND('9p\rH')))AND(0.9200898347682424)))));