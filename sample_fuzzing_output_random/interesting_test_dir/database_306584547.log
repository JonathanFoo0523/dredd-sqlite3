-- Time: 2024/06/07 10:56:12
-- Database: database47
-- Database version: 3.40.0
-- seed value: 306584547
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2, c1) VALUES (NULL, 'jm', ''); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1364274685); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA main.foreign_keys = true; -- 0ms;
INSERT OR FAIL INTO vt0(c1, c2) VALUES (NULL, x'1e22'); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1846236430,8');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR REPLACE INTO vt0(c2) VALUES ('硈VF7&'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (0xffffffff91f4aaf2, x''), (NULL, -1.84623643E9), (x'', '#<wF\'); -- 0ms;
PRAGMA stats; -- 0ms;
INSERT OR FAIL INTO vt0(c2, c0) VALUES (x'', 'Xj'); -- 0ms;
UPDATE vt0 SET c0=0.05823310481414301, c0=x'27fb', c1=x''; -- 0ms;
DELETE FROM vt0 WHERE vt0.c2; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c2, c1) VALUES (x'3d43', '-1846236430', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (x''); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 5ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (-1.84623643E9); -- 0ms;
ANALYZE; -- 4ms;
PRAGMA secure_delete = false; -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c2) VALUES (0.33171068491525024, '-332163231'), (NULL, NULL), (NULL, 0.6549265162353812); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '49388'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1073186661);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 579185076); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60292'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '5829'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('0.33171068491525024'); -- 3ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (0.756618907937793); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (NULL, '碛亩\y'), (x'', 0.33171068491525024), (x'', 0.11300077751969495); -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (x'2b3b'); -- 2ms;
INSERT OR ROLLBACK INTO vt0(c2) VALUES (0.11300077751969495); -- 23ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'958f', NULL, x''); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
UPDATE OR ABORT vt0 SET c2=x'' WHERE CASE WHEN ((vt0.c2) NOTNULL) THEN CAST(vt0.c2 AS BLOB) ELSE (((vt0.c1))<=((vt0.c0))) END; -- 14ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
COMMIT; -- 11ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('160452265', x'', x'8a74'); -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL) WHERE (('1079606209') NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END) AND (((vt0.c0)>=(vt0.c2)))); -- 1ms;
UPDATE vt0 SET (c2, c0, c0)=(NULL, '', NULL) WHERE CAST(((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)) AS TEXT); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('k썪') WHERE (((CAST(vt0.c1 AS TEXT), 0xffffffffc2aa7848, ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))))=((vt0.c2 COLLATE RTRIM, (~ (vt0.c1)), CAST(vt0.c1 AS REAL)))); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.05823310481414301); -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ((~ ('x{' COLLATE RTRIM))); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1846236430);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 11ms;
REINDEX; -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2) VALUES (NULL, 0.2750849688065621), (NULL, NULL), (0.11300077751969495, '317490530'); -- 5ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.07307599988263114), (NULL), (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('1151165516'); -- 3ms;
VACUUM; -- 1ms;
PRAGMA main.ignore_check_constraints = true; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c2, c1)=(x'', 0.07307599988263114, '-1996878530'); -- 16ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1='', c0=0.756618907937793, c0=0x449d644c WHERE ''; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46621'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 9ms;
UPDATE vt0 SET (c0, c2)=(0.7125378178414283, ''); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL, NULL, NULL); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 3ms;
PRAGMA automatic_index; -- 0ms;
PRAGMA temp.recursive_triggers = true; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=317490530 unordered'); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0, c1) VALUES ('', x'', x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, '', 'Qek-*%'); -- 0ms;
INSERT OR ABORT INTO vt0(c1, c2) VALUES (0.9272261592784936, ''), ('-396898318', 0xffffffffd2e3c3e0), ('', NULL); -- 12ms;
COMMIT; -- 0ms;
PRAGMA main.stats; -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 11ms;
SELECT rtreecheck('rt0'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.legacy_file_format; -- 4ms;
UPDATE OR ROLLBACK vt0 SET c2=NULL WHERE (+ ((vt0.c2 IN (vt0.c2)))); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x'', c1=0.02566329465584638; -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('jm'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50674'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (0.5983360729126574), (x''), (0.29523739675986116); -- 0ms;
PRAGMA main.optimize; -- 1ms;
UPDATE rt0 SET c0=0xffffffffec339761, c0=-1846236430; -- 6ms;
UPDATE rt0 SET (c1)=(0.21570238830933297) WHERE ((((0.4528126911970304) NOTNULL)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (TYPEOF(rt0.c1))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('^wwyYq-'))) ISNULL); -- 1ms;
UPDATE OR IGNORE rt0 SET c2=x'65f9' WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END) ISNULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1, c0) VALUES ('A,]hj*H+[', 0.3128369851450684, NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT FIRST_VALUE(vt0.c2) OVER () FROM rt0, vt0 WHERE (((('<*hRꪸDE')) NOT BETWEEN ((-332163231 COLLATE RTRIM)) AND ((((((x'')AND(x'')))AND('0.756618907937793')))))); -- 1ms;
SELECT DISTINCT AVG(rt0.c0 COLLATE RTRIM COLLATE NOCASE) OVER () FROM vt0;SELECT ALL CASE ((vt0.c1) IS TRUE)  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1)%(rt0.c0)) ELSE (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END FROM rt0 WHERE (((((x'') NOTNULL)) BETWEEN (('-1309132651' IN (x''))) AND (CASE WHEN x'4c27' THEN NULL ELSE NULL END)));SELECT DISTINCT LIKELIHOOD(DISTINCT (NOT (vt0.c2)), 0.03575328162751645) FROM rt0;SELECT ALL vt0.c1, ((vt0.c0)||(((rt0.c0) NOTNULL))), ((vt0.c1 COLLATE RTRIM)AND(((NULL) NOTNULL))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((CAST(rt0.c2 AS INTEGER))IS(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))), x'') OVER (), ((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN rt0.c1 END) NOT BETWEEN (SUM(rt0.c2)) AND (((vt0.c1)-(rt0.c1)))), ((CASE WHEN rt0.c0 THEN vt0.c0 END) ISNULL) FROM rt0 WHERE (CAST((((('-1277841176')AND(NULL)))OR(NULL)) AS REAL)) ORDER BY (+ ('硈vf7&'))  NULLS LAST, (-1073186661 COLLATE RTRIM IN ()), ((((rt0.c2)AND(((rt0.c0) IS TRUE))))OR(CASE WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN 'ደ|X,' THEN rt0.c0 END))  NULLS LAST;SELECT ALL LAG((((NULL)/(rt0.c1)) IN (CASE WHEN x'' THEN vt0.c1 ELSE vt0.c1 END)), HEX(json_array_length(rt0.c1, rt0.c1)), vt0.c2) OVER () FROM vt0, rt0;SELECT ALL SQLITE_COMPILEOPTION_USED(vt0.c1) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL json_patch(CAST(vt0.c1 AS INTEGER), x'3779') FROM rt0;SELECT ALL ((((vt0.c1)IS('899713290'))) ISNULL) FROM vt0 ORDER BY ((((vt0.c2)||(''))) IS TRUE) DESC; -- 0ms;
SELECT DISTINCT CAST(((vt0.c2)/(0.6549265162353812)) AS INTEGER), ((CASE rt0.c2  WHEN vt0.c2 THEN vt0.c1 ELSE 0.8024931695840772 END)<((vt0.c2 IN ()))), ((CAST(rt0.c1 AS BLOB))IS NOT(((('Vt'))==((rt0.c2))))) FROM vt0;SELECT DISTINCT CAST(MAX(rt0.c1) AS TEXT), (((vt0.c2 IN ('額U%3Ub?', vt0.c0))) NOT BETWEEN (((vt0.c1) NOTNULL)) AND (CAST(rt0.c2 AS NUMERIC))), ((((vt0.c1)<>(rt0.c0)))%((rt0.c2 IN ()))) FROM rt0;SELECT rt0.c0, rt0.c0, CAST(((rt0.c1) ISNULL) AS BLOB), ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)))<=(CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)), (((((vt0.c0))<((rt0.c1))))>(((vt0.c0) BETWEEN (x'') AND (rt0.c0)))) FROM vt0 WHERE ((QUOTE('') IN ()));SELECT AVG(((((vt0.c2)AND(vt0.c1)))OR(vt0.c2))) COLLATE RTRIM FROM vt0 WHERE (((CAST(x'3635' AS BLOB)) NOT NULL)); -- 0ms;
SELECT ALL CAST((- (vt0.c0)) AS NUMERIC) FROM vt0, rt0 WHERE (((((NULL) NOT NULL)) NOT BETWEEN ((('-617918618') NOT BETWEEN (NULL) AND (NULL))) AND ((0.6346828401529302 IN ())))); -- 0ms;
SELECT (((((rt0.c0)) NOT BETWEEN ((0.3897999423451348)) AND ((rt0.c1))))>>((NOT (vt0.c1)))), ABS(DISTINCT (vt0.c1 IN ())), (((((~ (vt0.c2)))OR(x'' COLLATE NOCASE)))AND(rt0.c1)) FROM vt0;SELECT 0.37332142874506125 FROM vt0 GROUP BY (((LIKELIHOOD(rt0.c2, 0.4131107459475948)))>=((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))))), (((+ (rt0.c0)))AND(CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)), ((((rt0.c2 IN ())))!=((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c2))))) HAVING ((json_array_length(vt0.c1, vt0.c1)) BETWEEN ('2090227652') AND (AVG(vt0.c2)));SELECT DISTINCT ((((vt0.c2)%(vt0.c0)))>=((((vt0.c1))==((rt0.c0))))) FROM rt0, vt0 WHERE (((0.9680889971284002) IS TRUE) COLLATE NOCASE); -- 0ms;
SELECT ((((rt0.c1)OR(rt0.c1)))AND(vt0.c1)) COLLATE NOCASE FROM rt0 WHERE ((((((x'c200bcc1'))<(('-\r')))) NOTNULL));SELECT ALL vt0.c0 FROM rt0 WHERE ((((NULL)) BETWEEN ((CAST('-542533555' AS TEXT))) AND (((+ (1.152062192E9)))))) LIMIT 1390041203 OFFSET -1846236430;SELECT DISTINCT json_object(SQLITE_COMPILEOPTION_GET('d%Suzxn('), COUNT('160452265')) FROM vt0, rt0 WHERE (((('0.8024931695840772')) NOT BETWEEN (((((x'', -5.42533555E8, NULL)) NOT BETWEEN ((2015695278, x'48e2dfe8', NULL)) AND (('1152062192', 'BmeH', '1152062192'))))) AND (((+ (NULL)))))); -- 0ms;
SELECT (((vt0.c2)=(vt0.c1)) IN (IFNULL(rt0.c0, x''))), CAST(8.9971329E8 COLLATE NOCASE AS NUMERIC), MIN(vt0.c0), '1036682580', 0Xffffffff8051399b FROM vt0;SELECT DISTINCT (((((+ (rt0.c2)))OR(rt0.c0 COLLATE RTRIM)))AND(vt0.c2 COLLATE RTRIM)) FROM rt0 WHERE (NULL);SELECT ALL AVG(((rt0.c1)<=(rt0.c0))) OVER () FROM rt0, vt0 NOT INDEXED; -- 0ms;
SELECT ALL (NULL IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2)-(vt0.c2))) NOTNULL), ((rt0.c0)+((rt0.c2 IN ()))), vt0.c1 FROM vt0 GROUP BY 0X18ab6588 HAVING ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2))) IS TRUE);SELECT DISTINCT SUM('') OVER () FROM rt0, vt0 WHERE ((- (((0.5647335478015619) BETWEEN (773632442) AND (0xffffffffd977c332))))); -- 1ms;
SELECT ALL SUM(LIKELY(DISTINCT vt0.c0)), ((((rt0.c1) ISNULL))AND((~ (vt0.c2)))), GROUP_CONCAT(((((((((0.1940750660058057)AND(rt0.c0)))AND(vt0.c2)))OR(rt0.c2)))AND(rt0.c0))) FROM rt0, vt0 WHERE (((('' IN ())) NOTNULL)) ORDER BY (vt0.c0 IN ()) DESC; -- 3ms;
SELECT ((((vt0.c2) NOT NULL))GLOB((rt0.c1 IN (0x12ec8562)))), CASE CAST(rt0.c1 AS NUMERIC)  WHEN vt0.c2 COLLATE BINARY THEN ((((rt0.c0)AND(vt0.c1)))OR(vt0.c1)) END, 'W8W剈' FROM vt0;SELECT LEAD(((((vt0.c2)-(vt0.c2))) NOT NULL), ((((vt0.c2)IS(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((((''))>=((vt0.c1))))), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE)) OVER (), rt0.c1, (INSTR(vt0.c1, vt0.c0) IN (((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) FROM vt0 WHERE ((json_valid(NULL) IN ()));SELECT DISTINCT ((((vt0.c1)||(vt0.c0)))<>(MIN(rt0.c1))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE NULL END AS NUMERIC) FROM rt0 WHERE (((CAST(x'' AS BLOB)) BETWEEN (914830746 COLLATE BINARY) AND (CASE WHEN 1509164767 THEN 1860867793 END))) LIMIT -1277841176 OFFSET -1077027878;SELECT ((vt0.c0)<<(((vt0.c1)IS(vt0.c2)))) FROM vt0, rt0 WHERE ((NOT (CASE WHEN 715906340 THEN NULL WHEN '0.3897999423451348' THEN 1.152062192E9 WHEN 0.14006933005380895 THEN '0.3128369851450684' ELSE x'' END))); -- 0ms;
SELECT ALL ((((((((((rt0.c1)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))IS NOT(vt0.c1)) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS TRUE), (((rt0.c0))<=(((('J}') NOT BETWEEN (vt0.c2) AND (vt0.c1))))), CASE CAST(rt0.c0 AS INTEGER)  WHEN (('-953125509') NOT NULL) THEN CASE WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '?}' END WHEN ((vt0.c1)%(rt0.c1)) THEN (+ (rt0.c2)) WHEN vt0.c1 THEN (rt0.c0 IN ()) WHEN '-539487617' THEN ((rt0.c1) IS FALSE) WHEN ((vt0.c1) NOTNULL) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END FROM vt0, rt0 NOT INDEXED WHERE ((((x'') NOT BETWEEN ('NcQ#쌖~') AND ('-617918618')) IN ())); -- 0ms;
SELECT ((rt0.c0 COLLATE BINARY)&(((vt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))) FROM rt0 WHERE (((~ (x'')) IN ()));SELECT DISTINCT 0.9680889971284002, (NOT (((rt0.c0)IS NOT(vt0.c2)))), CAST(0.039921169549843816 AS TEXT) FROM rt0 WHERE (CASE WHEN ((x'') BETWEEN ('1151165516') AND (x'c06c4b73')) THEN ((0.1111177753557464)&(NULL)) END) GROUP BY (+ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))AND(rt0.c1)))OR(0.007300124712701583)))) LIMIT 0;SELECT DISTINCT (((((~ (rt0.c0)))AND(x'')))AND(CAST(rt0.c0 AS TEXT))) FROM rt0, vt0 WHERE ((- (((NULL)>>(x''))))); -- 0ms;
SELECT ALL (((((x'')) BETWEEN ((vt0.c1)) AND ((rt0.c2))))<=(MAX(rt0.c1))) FROM rt0;SELECT ALL PERCENT_RANK() OVER () FROM vt0, rt0 GROUP BY (((vt0.c2 IN ()))>((((rt0.c1))<>((vt0.c2))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c0 COLLATE RTRIM COLLATE BINARY), CAST(((rt0.c0)GLOB(vt0.c1)) AS BLOB), (((LIKELY(rt0.c0)))>=((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0))))) FROM rt0;SELECT (((CASE rt0.c2  WHEN rt0.c1 THEN 0xffffffff9a46cfe4 ELSE rt0.c1 END))>((UNLIKELY(DISTINCT vt0.c0)))) FROM vt0 WHERE (CAST((NULL IN ()) AS TEXT));SELECT DISTINCT ((CASE WHEN vt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN rt0.c2 END)==(rt0.c2)) FROM rt0 WHERE ((((((0.05823310481414301)IS NOT('{G'))))<=(((NULL IN ())))));SELECT DISTINCT TRIM(TRIM(vt0.c0), (((rt0.c1))<>((rt0.c2)))), ((((rt0.c1)AND((vt0.c0 IN (x'')))))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))), NTH_VALUE(((((((rt0.c0)*(vt0.c0)))OR(HEX(vt0.c2))))OR(rt0.c1)), ((vt0.c2)%(CASE NULL  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END))) OVER () FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN x'c4ad' THEN 0.043635412846140365 WHEN NULL THEN 0X0 WHEN 0.37083682277289975 THEN NULL END THEN (- (NULL)) END) LIMIT 899713290 OFFSET 1212335945; -- 1ms;
SELECT ALL (((vt0.c0 IN (vt0.c0))) BETWEEN (rt0.c0 COLLATE BINARY) AND ((+ (vt0.c2)))) FROM rt0 GROUP BY ((((rt0.c0) NOTNULL))GLOB(((vt0.c0)OR(vt0.c2)))), (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) IN ()), ((rt0.c1 IN ()) IN ()), CHAR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), ((7.73632442E8)>(rt0.c0)), rt0.c2), LIKE((~ (vt0.c1)), (rt0.c1 IN (rt0.c1)));SELECT DISTINCT rt0.c2 FROM vt0;SELECT (- (SUM(vt0.c1))), (NOT (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c2)))), (- ((vt0.c1 IN (vt0.c0, vt0.c1)))) FROM rt0;SELECT ALL (- ((((rt0.c2, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c2, rt0.c1))))) FROM rt0, vt0 WHERE (((((((((CASE x''  WHEN x'6dd3c599' THEN '' END)AND((('-332163231') ISNULL))))OR(('U0' IN ()))))OR(CAST(-310731791 AS BLOB))))AND(((x'') BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 ELSE '-\r' END COLLATE NOCASE FROM rt0 WHERE (CASE WHEN ((815254748) IS FALSE) THEN (x'' IN ()) WHEN CASE x''  WHEN NULL THEN NULL WHEN NULL THEN -1232057524 WHEN 0.036703917579370526 THEN x'7785' END THEN (('1151165516') BETWEEN (0Xffffffff89d7478a) AND (x'')) WHEN ((x'') ISNULL) THEN (x'95ec' IN ()) END) GROUP BY ((((0.03778663865373788)OR((('硈VF7&')!=(vt0.c2)))))AND((- (rt0.c2)))) HAVING vt0.c0 ORDER BY NULLIF(DISTINCT CAST(rt0.c1 AS INTEGER), '0虿Afdtj') DESC  NULLS LAST, (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)), LOWER(rt0.c2), SQLITE_COMPILEOPTION_GET(x''))) AND ((((vt0.c2)GLOB(vt0.c1)), (vt0.c1 IN ()), (vt0.c0 IN ())))) ASC, ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY  NULLS FIRST;SELECT ((CASE WHEN rt0.c0 THEN vt0.c0 END)>(TRIM(vt0.c2))), ((TRIM(vt0.c2)) IS FALSE), vt0.c2 FROM vt0 WHERE ('sꤓ') GROUP BY ((((rt0.c0)AND(((rt0.c1) NOT NULL))))AND(json_array_length(rt0.c0)));SELECT CASE ((NULL) ISNULL)  WHEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN (rt0.c1 IN ()) END, ((((rt0.c2)||(vt0.c0)))>(((vt0.c2)|(vt0.c2)))), ((MAX(rt0.c1)) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c1 END) AND (CASE rt0.c0  WHEN -617918618 THEN rt0.c1 END)) FROM rt0, vt0; -- 0ms;
SELECT ((vt0.c0) NOTNULL) COLLATE NOCASE FROM rt0 ORDER BY DATE((- (vt0.c0)), (NOT (vt0.c0)), ((((rt0.c1)AND(vt0.c1)))AND(vt0.c0)), (NOT (vt0.c2)), ((rt0.c1)GLOB(rt0.c0))) ASC;SELECT DISTINCT CASE (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))  WHEN (('413885832')*(rt0.c2)) THEN (NOT (vt0.c2)) ELSE NULL END FROM rt0;SELECT DISTINCT PERCENT_RANK() OVER (), ((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((x'3130'))) IN ()), json_insert('' COLLATE RTRIM, rt0.c0 COLLATE NOCASE, (rt0.c2 IN ()), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))), (~ (rt0.c2))), (+ (CAST(vt0.c2 AS NUMERIC))), (((CASE rt0.c1  WHEN vt0.c2 THEN rt0.c0 ELSE vt0.c2 END, ((vt0.c0) ISNULL), NULL))=((rt0.c2, (+ (rt0.c0)), rt0.c2 COLLATE NOCASE))) FROM vt0 LIMIT 1739176679;SELECT (((vt0.c2)) BETWEEN ((rt0.c0)) AND ((COALESCE(vt0.c1, vt0.c2)))) FROM vt0 GROUP BY CASE ((vt0.c2)&(vt0.c2))  WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN (((1662881110))!=((rt0.c2))) ELSE ((vt0.c0) NOT NULL) END HAVING (((TYPEOF(DISTINCT vt0.c2)))>=(((+ (vt0.c2)))));SELECT DISTINCT ((((vt0.c2)LIKE('-1073186661')))IS NOT(((((vt0.c2)OR(rt0.c2)))AND(rt0.c1)))) FROM vt0;SELECT DISTINCT COUNT(*), (((('ደ|x,')%(rt0.c0))) BETWEEN (((rt0.c0)IS NOT(vt0.c1))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0))), ((((rt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND (((rt0.c2)>=(vt0.c2)))) FROM rt0, vt0 WHERE (((((NULL, 0.7542621975353732, '-336055489'))>(('1807000899', '0.29523739675986116', x''))) IN (SQLITE_COMPILEOPTION_USED(NULL)))) LIMIT -1816676663 OFFSET -1835366663; -- 0ms;
SELECT DISTINCT (((('){')GLOB(vt0.c2)))<<((+ (NULL)))) FROM vt0, rt0 WHERE (((((x'') BETWEEN (x'') AND (NULL)))<=(CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT LEAD(((0.9760016455335194)+(((vt0.c0)||(vt0.c0)))), ((((vt0.c2) ISNULL)) NOTNULL), ((CAST(vt0.c1 AS INTEGER))==(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))) OVER () FROM vt0 WHERE (COALESCE('', x'') COLLATE BINARY) LIMIT -646462670; -- 0ms;
SELECT CASE WHEN ((rt0.c0) NOT NULL) THEN vt0.c2 COLLATE NOCASE WHEN (vt0.c2 IN ()) THEN ((vt0.c1)OR(vt0.c0)) WHEN rt0.c2 THEN ((vt0.c2)>>(vt0.c1)) ELSE CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c2 END END FROM rt0, vt0 WHERE ((('') NOT BETWEEN (x'') AND (x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) FROM rt0, vt0 WHERE ((((((NULL, x'', -7.5682512E8)) BETWEEN ((x'', 943356956, NULL)) AND (('1603886032', NULL, 0.6388070084334663))))IS NOT(CASE WHEN NULL THEN '1782706302' WHEN NULL THEN x'' WHEN NULL THEN x'' END))); -- 0ms;
SELECT ALL CAST('0.14006933005380895' AS BLOB), (- (TOTAL(vt0.c2))), CASE vt0.c0 COLLATE RTRIM  WHEN (('573140684')AND(vt0.c1)) THEN ((vt0.c0) BETWEEN (rt0.c0) AND (0.7833535565136159)) END FROM vt0 WHERE (((((((NULL)OR(NULL)))OR(NULL))) BETWEEN (((((((((((((0.6399355149480306)AND(x'')))AND(NULL)))OR(NULL)))AND('-903301882')))AND(0.6399355149480306)))AND(NULL))) AND ((('Cy') IS TRUE))));SELECT DISTINCT CASE WHEN GROUP_CONCAT(rt0.c1) THEN ((vt0.c0) NOT NULL) END, ((vt0.c0) IS FALSE) COLLATE BINARY, HEX(DISTINCT SUM(rt0.c0)), ((((((rt0.c0)>(rt0.c2)))AND(AVG(vt0.c1))))OR((('oQ') NOT BETWEEN (rt0.c1) AND (rt0.c2)))), ((((IFNULL(rt0.c1, x''))AND(NULL)))OR(((vt0.c2)LIKE(vt0.c2)))) FROM rt0, vt0 WHERE (CAST(NULL COLLATE BINARY AS BLOB)); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND (((((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2)))))) FROM vt0, rt0; -- 0ms;
SELECT ((((COUNT(vt0.c1))AND(rt0.c0 COLLATE RTRIM)))AND(((((rt0.c0)OR(vt0.c2)))AND(rt0.c1)))) FROM vt0 ORDER BY CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE json_valid(rt0.c0) END  NULLS LAST;SELECT ALL LIKELY((((vt0.c0, vt0.c0, rt0.c2)) BETWEEN ((vt0.c2, vt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c2)))), (vt0.c2 COLLATE RTRIM IN ()), (- (CASE WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)) FROM rt0 WHERE ((((x'')-(0.4584623674046058)) IN ()));SELECT (((((NOT (vt0.c2)))AND((rt0.c1 IN ()))))AND(((rt0.c2)IS(vt0.c0)))), '0.7833535565136159', vt0.c1 FROM vt0, rt0 WHERE ((NOT (json_array_length(NULL)))); -- 0ms;
SELECT ALL '' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (+ ((~ (rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c2)))%(rt0.c2 COLLATE RTRIM)), rt0.c2, CAST(((rt0.c1)|(vt0.c0)) AS BLOB) FROM vt0 WHERE (NULL);SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((TYPEOF(rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT ALL ((vt0.c1 COLLATE NOCASE)/((vt0.c1 IN ()))) FROM vt0 WHERE ((('1739176679')=((NOT (x''))))); -- 0ms;
SELECT ALL SUM(((vt0.c0)AND(vt0.c0))) OVER () FROM rt0 INNER JOIN vt0 ON NULL WHERE (HEX(DISTINCT ((NULL)LIKE(x'9c00')))) GROUP BY (((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((0.8836042803854031, rt0.c0, (NOT (vt0.c2)))) AND (((('-617918618')%(rt0.c0)), vt0.c2 COLLATE BINARY, x''))); -- 0ms;
SELECT ((((rt0.c2)=(vt0.c1))) NOT NULL) FROM rt0 WHERE (x'') LIMIT 1122041608;SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(0.4712491647231466)))AND(vt0.c0 COLLATE RTRIM)) FROM rt0, vt0 WHERE (((((NULL) NOT BETWEEN (x'') AND ('-55440617')))IS NOT('' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((AVG(vt0.c0))OR((+ (0.5222666563265762)))))AND('')), (((((0X65b834f0 IN ()))AND(vt0.c0)))AND(((NULL)AND(rt0.c0)))), ((((((((vt0.c0)AND((((rt0.c2, rt0.c0, vt0.c1))<((vt0.c2, vt0.c2, rt0.c0))))))OR((rt0.c1 IN (rt0.c0, vt0.c1)))))AND(0.007300124712701583)))OR(rt0.c0)) FROM vt0;SELECT DISTINCT vt0.c2 COLLATE RTRIM FROM vt0, rt0 WHERE (ABS(CASE '-1309132651'  WHEN 0.6044061279861517 THEN '1662881110' END)); -- 1ms;
SELECT DISTINCT MIN(COUNT(((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))), ((((((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c2)))OR((- (vt0.c0)))))OR(rt0.c2)), ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))=(CAST(1.739176679E9 AS INTEGER))) FROM vt0, rt0;SELECT (x'' IN (rt0.c1, TOTAL(rt0.c2), CASE vt0.c2  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) FROM rt0, vt0 WHERE (((((NULL)OR(x'')))AND(0.18777816746560094)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT 0.5270631022654129 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c2)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) AND (((((rt0.c1, rt0.c2, rt0.c0))<((vt0.c0, rt0.c1, rt0.c2)))))) FROM vt0;SELECT ((rt0.c2 IN ()) IN ()) FROM vt0 WHERE (HEX((NOT (0X1eb5c316)))); -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE (x'3ff4'); -- 0ms;
SELECT DISTINCT 0.3721360588624856, GROUP_CONCAT(CAST(vt0.c2 AS REAL)) OVER (), AVG(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END) OVER () FROM rt0 WHERE (((((0.5086459029031966)GLOB(NULL))) NOT BETWEEN (((x'')OR(7.1590634E8))) AND (CASE 0.9272261592784936  WHEN '' THEN NULL WHEN 0.31653314742041727 THEN NULL WHEN NULL THEN x'5fe3' ELSE 0xffffffffc008789b END))) GROUP BY rt0.c1, x'9e08', ((vt0.c1) NOT BETWEEN (NULLIF('', vt0.c0)) AND (CASE WHEN vt0.c0 THEN -396898318 ELSE vt0.c0 END)) HAVING (NOT ((- (vt0.c1))));SELECT '', ('BGz' IN (((((rt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CASE WHEN rt0.c0 THEN vt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN 0X65b834f0 END COLLATE BINARY FROM rt0, vt0 WHERE ((('1640595789' COLLATE RTRIM)>=(((NULL)AND(x''))))) ORDER BY ((vt0.c2 IN (rt0.c2, vt0.c2)) IN ()); -- 1ms;
SELECT DISTINCT TOTAL(COALESCE(rt0.c2, vt0.c2)) FILTER(WHERE (((~ (rt0.c2))) IS TRUE)) OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP), ((load_extension(rt0.c2)) BETWEEN (((rt0.c2) IS FALSE)) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))), ((((((((rt0.c2)OR(vt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY, vt0.c0 COLLATE NOCASE, (~ (((((vt0.c0)AND(rt0.c2)))OR(NULL)))) FROM rt0, vt0 WHERE ((((NULL IN ())) NOT BETWEEN (CAST(x'4c74' AS REAL)) AND ((x'' IN (x'', x''))))) GROUP BY CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS NUMERIC); -- 0ms;
SELECT ((SUM(vt0.c0))AND(((rt0.c2) ISNULL))) FROM rt0;SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((AVG(vt0.c1)))) FROM vt0;SELECT DISTINCT (((((vt0.c2)AND(rt0.c2)))OR('')) IN ()) FROM vt0, rt0; -- 0ms;
SELECT ALL ((((vt0.c0)>>(vt0.c2)))+((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))) FROM rt0 GROUP BY NULL;SELECT DISTINCT COUNT(*) FROM rt0 GROUP BY ((((rt0.c1)|(rt0.c0)))&((vt0.c1 IN ()))); -- 0ms;
SELECT DISTINCT CASE rt0.c0 COLLATE RTRIM  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END THEN ((vt0.c1) NOT NULL) END FROM rt0, vt0 WHERE (CAST(((5.73140684E8)LIKE(x'')) AS REAL)); -- 1ms;
SELECT DISTINCT (((+ (vt0.c2)))<=(((rt0.c2)!=(vt0.c0)))) FROM rt0 WHERE (x'');SELECT ALL ((CAST(vt0.c2 AS REAL)) NOT BETWEEN (NULL) AND (((rt0.c0)<<(rt0.c1)))) FROM rt0 WHERE (((((0.7405962090562394)OR(NULL)))AND('-520642861')) COLLATE BINARY COLLATE RTRIM);SELECT DISTINCT ((CASE vt0.c2  WHEN vt0.c0 THEN rt0.c2 END) NOTNULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((((vt0.c1)OR(0.5373667916446102)))OR(rt0.c0))) FROM vt0, rt0 WHERE ((((CAST('' AS INTEGER)))<((CAST('-997778503' AS NUMERIC))))) ORDER BY (- ((NOT (rt0.c0)))) DESC  NULLS FIRST, ((vt0.c2)IS NOT(0x74160751)); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((QUOTE(rt0.c0))) AND ((LAST_INSERT_ROWID()))) FROM rt0 WHERE (CASE TRIM('4o', '')  WHEN (('892676407') NOT NULL) THEN (NOT (0.7833535565136159)) WHEN (((x'')) BETWEEN (('2131503199')) AND ((170420330))) THEN (((0.5647335478015619)) NOT BETWEEN ((NULL)) AND (('K啳Ch'))) WHEN (((x'')) BETWEEN (('9Pz1')) AND ((x''))) THEN (('-4159017') IS FALSE) END);SELECT CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 END WHEN ((vt0.c2)IS NOT(rt0.c1)) THEN (+ (vt0.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((x'')OR(rt0.c1)) END, (((vt0.c2)) BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c1)>=(vt0.c1))))), ((rt0.c0) NOTNULL) COLLATE RTRIM FROM vt0 WHERE ((~ ((NOT (x'7ac7')))));SELECT DISTINCT MAX(((rt0.c2) NOTNULL)), vt0.c2, PRINTF((NOT (rt0.c0))) FROM vt0 WHERE (LIKELY(((x'5969')>(2.090227652E9))));SELECT DISTINCT ((((((rt0.c0)GLOB(vt0.c1)))AND(((vt0.c0)!=(vt0.c1)))))OR((((rt0.c1))>((vt0.c1))))), (((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (LIKELY(DISTINCT rt0.c2))), (((vt0.c0 IN ()))*(NULL)) FROM rt0;SELECT DISTINCT AVG((+ (-622837025))) OVER () FROM vt0 WHERE ((((x'75b7' IN (NULL)))OR((- (0x5c2c6432))))); -- 0ms;
SELECT DISTINCT ((0.2882388741585469) NOT NULL) FROM vt0, rt0; -- 0ms;
SELECT ALL (+ (((vt0.c0) ISNULL))) FROM vt0, rt0; -- 0ms;
SELECT ((((((((((((rt0.c1)AND(((rt0.c0)>>(vt0.c0)))))AND(((vt0.c2)GLOB(rt0.c1)))))OR(((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((((rt0.c0)AND(vt0.c1)))OR(rt0.c0)))))OR(((vt0.c2)LIKE(vt0.c0)))))OR(((rt0.c0) NOT NULL))) FROM vt0 ORDER BY TRIM(x'c29f', ((((vt0.c2)OR(vt0.c0)))AND(rt0.c0)));SELECT DISTINCT CASE ((vt0.c2)IS(vt0.c2))  WHEN rt0.c2 THEN ((((vt0.c2)OR(rt0.c0)))OR(vt0.c1)) ELSE MAX(rt0.c0) END, ((((rt0.c0)AND(rt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE RTRIM, ((((rt0.c2)AND(vt0.c2)))AND(((0X74532273)IS NOT(vt0.c1)))) FROM rt0, vt0 WHERE ((((((x''))!=(('廡P')))) IS TRUE)) LIMIT 1328845538; -- 0ms;
SELECT DISTINCT MAX((rt0.c2 IN ())), '715906340', ((((((((((vt0.c1)AND(rt0.c0)))OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c2))) NOT BETWEEN (('-1185949977' IN ())) AND (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) FROM vt0 WHERE ((((~ (x''))) NOT BETWEEN ((((NULL)) BETWEEN ((NULL)) AND ((NULL)))) AND (LIKE(x'', 0.9054877889602001))));SELECT DISTINCT ((x'')||(MAX(vt0.c0))) FROM rt0;SELECT LOWER((rt0.c2 IN ())), LOWER(((rt0.c1)>>(vt0.c1))), CASE vt0.c0  WHEN (rt0.c1 IN ()) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END WHEN ((rt0.c0)IS NOT(0.16260951025409043)) THEN CASE WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END WHEN ((((rt0.c1)OR(vt0.c2)))OR(rt0.c0)) THEN vt0.c2 ELSE CAST(rt0.c0 AS REAL) END FROM vt0 WHERE ('');SELECT DISTINCT load_extension(((rt0.c2)+(x''))) FROM rt0, vt0;SELECT (((vt0.c2)<(vt0.c0)) IN ()) FROM vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS LAST; -- 0ms;
SELECT ((vt0.c2 COLLATE NOCASE) IS TRUE), (NOT (vt0.c0)) COLLATE RTRIM, (((((rt0.c2, rt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((rt0.c2, rt0.c2, vt0.c1)))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (AVG(rt0.c1))) FROM vt0 WHERE (((((((((NULL)AND(x'')))OR('')))OR('X*-*3nxek')))OR(0.9272261592784936)) COLLATE BINARY);SELECT DISTINCT '1682587623' FROM rt0 WHERE ((+ (SQLITE_SOURCE_ID()))); -- 0ms;
SELECT DISTINCT CAST(rt0.c1 COLLATE BINARY AS BLOB) FROM vt0, rt0 WHERE (((((CASE 0X602db407  WHEN 0.053637160427688624 THEN x'71ae' WHEN 1.60452265E8 THEN 'NcQ#쌖~' WHEN 0X47d1c5c2 THEN '0.21570238830933297' ELSE 0.8836042803854031 END)OR(((x'') NOT NULL))))OR(LOWER(7.1590634E8)))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT (((((rt0.c1))<=((vt0.c2)))) NOT BETWEEN (((((vt0.c2)OR(rt0.c1)))AND(NULL))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)) FROM vt0, rt0; -- 0ms;
SELECT ((((vt0.c1))!=((vt0.c0))) IN ()) FROM vt0 WHERE (((((NULL)IS(x''))) BETWEEN (MIN(NULL, x'', 0.2151163117923227, '1151165516', 0.22330682345510255, 0.629153365597794)) AND ('1212335945'))); -- 0ms;
SELECT ALL COUNT(*) OVER (), AVG(((rt0.c2)+(rt0.c1))) FILTER(WHERE NULLIF(DISTINCT (((vt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((rt0.c1, vt0.c2, rt0.c0))), (rt0.c2 IN (vt0.c2)))) OVER (), (((rt0.c1 IN ()))OR(SUM(rt0.c2))) FROM vt0 WHERE ((((((((('')AND(-1863233518)))OR('BmeH')))OR(914830746)))AND(NULL)) COLLATE RTRIM COLLATE BINARY);SELECT DISTINCT 0.6135404127833188, ((rt0.c2 COLLATE NOCASE)GLOB(((rt0.c2)=(x'')))), (~ (((((vt0.c0)AND(vt0.c2)))AND('額U%3UB?')))) FROM rt0 WHERE (((0Xffffffffd977c332 COLLATE NOCASE) IS FALSE));SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((vt0.c1) NOTNULL), NTH_VALUE((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((vt0.c0) IS FALSE)))), ABS(((rt0.c2)%(vt0.c2)))) OVER (), ROW_NUMBER() OVER () FROM rt0, vt0 WHERE (((((1.951605363E9) ISNULL))*(((((0x449d644c)AND(x'')))AND(0.4584623674046058))))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) IS TRUE) FROM rt0;SELECT DISTINCT (((('')<>(vt0.c0))) IS TRUE), ((vt0.c1) IS FALSE), IFNULL(DISTINCT (vt0.c1 IN ()), COUNT(*)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt0 WHERE (CASE WHEN (('604644499') NOT BETWEEN (0.9918416663035581) AND (0.9437586059464681)) THEN (('Xj')||(NULL)) WHEN ((0.31199220498608504)-('KgMPMbg')) THEN ((((x'53f3c14e')OR('-953125509')))AND(0.21405108472005108)) WHEN CAST(NULL AS INTEGER) THEN (('') BETWEEN (0.31199220498608504) AND ('e#eSV蜉')) END);SELECT DISTINCT ((CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c0 END)<<((((rt0.c1))<=((rt0.c2))))), COUNT(((vt0.c1)&(vt0.c1))) OVER (), ((((vt0.c1)AND('6 oI')))OR(rt0.c1)) COLLATE RTRIM FROM vt0;SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((-646462670) BETWEEN (773632442) AND (x'ce18')))OR((('廡K1?U')+(1.7042033E8)))))AND(('-314892401' IN (x'180d')))))OR(((0.25471109209692977) IS FALSE))))AND(((((0xffffffffed3b1f8f)OR(0.705128840366555)))AND(x'de0b'))))) GROUP BY ((((((((CASE WHEN rt0.c1 THEN vt0.c1 END)OR((- (vt0.c1)))))AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)))OR(vt0.c2)), ((vt0.c2) IS FALSE), (((TRIM(DISTINCT rt0.c0)))<=((378266526))) HAVING (CAST(rt0.c1 AS BLOB) IN ()); -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))) AND (MIN(vt0.c2))) FROM vt0, rt0; -- 0ms;
SELECT ALL vt0.c2, x'', (x'' IN (vt0.c0)) COLLATE NOCASE FROM vt0, rt0 WHERE (NULL); -- 0ms;
SELECT NULLIF(DISTINCT vt0.c0, GROUP_CONCAT(rt0.c1)) FROM vt0, rt0 WHERE (CAST(((0.7405962090562394) NOT BETWEEN (x'344f') AND ('-547131104')) AS TEXT)) UNION SELECT DISTINCT NULL COLLATE NOCASE COLLATE RTRIM FROM rt0 GROUP BY CAST(((vt0.c0)!=(rt0.c1)) AS REAL) HAVING (((rt0.c1)) BETWEEN ((((rt0.c2) NOT NULL))) AND ((rt0.c0 COLLATE RTRIM)));SELECT ALL vt0.c0 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT 0.01701809716204017, SUM(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) OVER (), CAST(((((vt0.c1)OR(vt0.c1)))OR(rt0.c2)) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT ALL (((- (rt0.c0)))<>((((vt0.c0, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c2, rt0.c2))))) FROM vt0, rt0 GROUP BY CASE WHEN 0.8823192000778761 THEN (+ (vt0.c2)) END; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND(vt0.c1)))AND(rt0.c2)))IS NOT(NULLIF(vt0.c2, vt0.c0))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((((GROUP_CONCAT(rt0.c0))OR(CAST(rt0.c1 AS TEXT))))AND(((vt0.c1) IS FALSE))) FROM rt0, vt0 WHERE (((CASE '9u'  WHEN 'Dcb0|!w\nW' THEN '1212335945' ELSE 0xffffffff97accd5a END)<=(json_array_length('75354714', 0Xffffffffef8970a3))));SELECT ALL CASE ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))  WHEN ((rt0.c2) NOTNULL) THEN CASE WHEN vt0.c2 THEN rt0.c0 ELSE vt0.c1 END ELSE ((((((((vt0.c1)OR('-1996878530')))OR(rt0.c2)))AND(vt0.c2)))AND(vt0.c2)) END FROM vt0, rt0 WHERE ((NOT (CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT vt0.c2 FROM rt0;SELECT DISTINCT ((((((((COUNT(*))OR((vt0.c0 IN ()))))AND(vt0.c1 COLLATE BINARY)))OR('')))AND(rt0.c0)), ((0.06670260545779172) NOT BETWEEN (((rt0.c2)AND(vt0.c1))) AND (((rt0.c1) ISNULL))), 0X7e8ff587 FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_GET(((x'')||(0x3bfba5ad)))); -- 0ms;
SELECT DISTINCT ((((((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))OR(LIKE(vt0.c0, vt0.c1))))OR(rt0.c2 COLLATE NOCASE)), vt0.c1, ROW_NUMBER() OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c1, ((rt0.c0) ISNULL), CAST(MIN(rt0.c1) AS TEXT) FROM rt0 ORDER BY (((~ ('-2330786'))) NOT NULL) ASC  NULLS LAST; -- 0ms;
SELECT ALL CAST((~ (rt0.c2)) AS REAL) FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT (~ (((rt0.c2) IS TRUE))), load_extension(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)), (vt0.c2 IN ())), ((ROUND(rt0.c2, '-83144120')) BETWEEN (HEX(DISTINCT 0.5469158996401255)) AND ((~ (rt0.c2)))) FROM rt0, vt0 WHERE (((((CASE WHEN x'4b52' THEN x'9c7997f4' END)AND(CASE x''  WHEN -1.863233518E9 THEN NULL WHEN x'' THEN x'fdbcff6a' WHEN x'' THEN 0.03778663865373788 ELSE x'' END)))AND((NOT (0.2223437662528016))))); -- 0ms;
SELECT DISTINCT ((vt0.c0) IS FALSE) FROM rt0;SELECT DISTINCT CAST(rt0.c1 AS REAL) COLLATE BINARY, (- ((NOT (vt0.c0)))), ((((((((MIN(vt0.c0))AND(((vt0.c1)||(rt0.c0)))))AND(COUNT(vt0.c0))))AND(CAST(rt0.c2 AS TEXT))))OR(((vt0.c1)<=(rt0.c1)))) FROM rt0 WHERE (((TYPEOF(x'5683'))||((~ (0.48905977936790024))))) ORDER BY LIKELIHOOD(DISTINCT (((rt0.c0))<>((0x383a7c1c))), 0.7232831019545104);SELECT ALL '4o' FROM vt0 WHERE ((((+ ('8163579908532406773')))IS NOT(CAST('鏕92<r' AS TEXT)))); -- 0ms;
SELECT ALL TRIM(DISTINCT ((vt0.c1) ISNULL)), ABS(DISTINCT ((rt0.c0)<(rt0.c2))), ((vt0.c1 COLLATE RTRIM) ISNULL) FROM rt0 WHERE ((((('*<')||('0-YX#')))OR(0.20379752121725336 COLLATE RTRIM)));SELECT DISTINCT (('IL')*(0.7282041814753945)), DENSE_RANK() OVER ( ORDER BY CAST(rt0.c0 COLLATE BINARY AS INTEGER)  NULLS LAST), AVG(((rt0.c2)<=(vt0.c0))) FROM rt0, vt0 ORDER BY (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((CAST(vt0.c1 AS INTEGER)))) DESC  NULLS LAST, ((((vt0.c0) IS TRUE)) NOT NULL), ((ABS(rt0.c0)) NOT NULL) ASC  NULLS FIRST; -- 2ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE NOCASE AS BLOB) FROM rt0 WHERE (((0X4895605c)<('OL')) COLLATE RTRIM); -- 0ms;
SELECT ALL (((NOT (vt0.c2))) BETWEEN (CAST('-111787332' AS REAL)) AND (((vt0.c0) ISNULL))) FROM rt0;SELECT DISTINCT (CAST(vt0.c1 AS NUMERIC) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT TOTAL(CAST(vt0.c1 AS BLOB)), ((((((((x'6ddc')OR(vt0.c2)))OR(rt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)))AND(((vt0.c1) NOT NULL))), UNLIKELY(DISTINCT ((rt0.c1)<(rt0.c1))), GROUP_CONCAT(((vt0.c1) IS FALSE)) OVER (), '0.6388070084334663' FROM vt0 WHERE ((+ (((((NULL)OR(NULL)))AND(x''))))) LIMIT -323986902;SELECT DISTINCT CASE CAST(vt0.c2 AS BLOB)  WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c2)) THEN ((1204929986)LIKE(vt0.c0)) WHEN (((rt0.c2))>((-5.20642861E8))) THEN ((rt0.c0) NOT NULL) WHEN COUNT(*) THEN (NOT (vt0.c1)) WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c2)<=(rt0.c2)) WHEN ((vt0.c2)>(rt0.c2)) THEN (+ (0.501291500092387)) END FROM rt0 WHERE ((((MAX(NULL, 0xfffffffffbef1048), 'iS4U\rv0' COLLATE RTRIM, (- ('1069751543'))))>=(('-2013917025' COLLATE NOCASE, CASE x''  WHEN '1640595789' THEN NULL ELSE 0Xfffffffff2c9221f END, LIKELY('ਥ')))));SELECT DISTINCT AVG(vt0.c0) FROM rt0, vt0 ORDER BY rt0.c1, CASE (rt0.c2 IN (rt0.c1))  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c1 COLLATE NOCASE END  NULLS LAST, ((CAST(vt0.c2 AS BLOB)) IS FALSE)  NULLS FIRST; -- 0ms;
SELECT rt0.c1 COLLATE NOCASE FROM vt0, rt0 WHERE (LIKELY(((((NULL)AND(NULL)))AND('94ZbꫲXU')))); -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL), NTH_VALUE((((x'' IN (vt0.c2)))AND(((vt0.c1) IS FALSE))), CAST(((vt0.c0) ISNULL) AS TEXT)) OVER (), ((((rt0.c1) BETWEEN (0.08338013537841005) AND (vt0.c1)))<=((- (rt0.c0)))) FROM vt0;SELECT DISTINCT ((vt0.c1) ISNULL) COLLATE RTRIM FROM vt0, rt0 ORDER BY vt0.c1 DESC, rt0.c1  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((-1772916413)AND(((rt0.c1) ISNULL))))OR(CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) FROM rt0, vt0; -- 1ms;
SELECT ALL (((vt0.c2, vt0.c0, 0X4f0ceaac)) NOT BETWEEN ((MIN(rt0.c2), vt0.c0, ((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) AND (((- (rt0.c2)), (((rt0.c0, vt0.c0, vt0.c2))!=((rt0.c1, rt0.c0, rt0.c0))), (NOT (vt0.c0))))) FROM rt0, vt0 ORDER BY CASE WHEN rt0.c2 THEN (((vt0.c2, rt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, '0.5469158996401255', rt0.c1))) END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CASE vt0.c1  WHEN NULL THEN rt0.c0 END)&(((vt0.c0) IS FALSE))) FROM rt0 ORDER BY CASE WHEN ((rt0.c2)|(vt0.c1)) THEN (rt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN load_extension(vt0.c2, rt0.c2) WHEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c2 END THEN ((x'') BETWEEN (rt0.c1) AND (vt0.c1)) ELSE (rt0.c1 IN ()) END  NULLS LAST, x'2b62' ASC  NULLS LAST;SELECT ALL ((AVG(vt0.c0)) BETWEEN (rt0.c1 COLLATE BINARY) AND (CAST(rt0.c1 AS BLOB))) FROM rt0, vt0 WHERE (((LIKELIHOOD(x'e5f2', 0.8738892053231021))>=(CAST(0.6346828401529302 AS NUMERIC)))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((0.4500518230842451)OR(CAST(0.6577142329468164 AS TEXT))))AND((((x'8ab5'))!=((x'')))))); -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0) NOTNULL))) FROM rt0, vt0 NOT INDEXED WHERE (CAST(x'' AS NUMERIC) COLLATE RTRIM) ORDER BY '14809872', vt0.c2; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))OR((('-542533555') IS FALSE))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c0)))))AND(ABS(vt0.c1))), ((((CAST(vt0.c0 AS INTEGER))AND(rt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS REAL))), (((((rt0.c0, x'', vt0.c1)) BETWEEN ((rt0.c2, rt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c1)))) NOT NULL) FROM vt0;SELECT DISTINCT ((((vt0.c0)AND(rt0.c1)))OR(rt0.c2)) COLLATE BINARY COLLATE RTRIM FROM vt0;SELECT ALL COUNT(CAST(vt0.c0 AS INTEGER)) FROM vt0 WHERE ((((0.5212304839180425 IN ()))>((+ (NULL))))) ORDER BY ((((((rt0.c2) NOT NULL))AND(rt0.c0)))AND(((vt0.c0)>(vt0.c2)))) DESC, (rt0.c0 COLLATE RTRIM IN (((vt0.c1) ISNULL), rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, TYPEOF(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))OR(rt0.c2))) ASC  NULLS FIRST;SELECT DISTINCT 0.7848693759743798 FROM vt0 WHERE ((((NULL IN ()))<=(((x'') BETWEEN (x'') AND (0X2e1cb1ba))))); -- 0ms;
SELECT ALL TOTAL(HEX(DISTINCT rt0.c2)) FILTER(WHERE ((vt0.c2 COLLATE RTRIM)&(rt0.c0 COLLATE RTRIM))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES), ((((rt0.c2)&(vt0.c1)))IS NOT(((((vt0.c0)OR(vt0.c2)))OR(rt0.c2)))), ((rt0.c2)=(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) FROM vt0, rt0 WHERE (CASE WHEN (1390041203 IN ()) THEN '䟸W!	G斈c(' COLLATE RTRIM ELSE (+ (0.9558880126068241)) END); -- 0ms;
SELECT ALL ((((vt0.c2)==(rt0.c1))) BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND ((((('94ZbꫲXU')OR(vt0.c1)))AND(rt0.c0)))) FROM rt0 WHERE (CASE WHEN ((((((((0.09576183206668021)OR('')))OR(1703894753)))AND(0.27582944914991336)))AND('M%y)EYO')) THEN ((0.11888019020739193) NOT BETWEEN ('0.14006933005380895') AND (NULL)) WHEN (((NULL))<>((''))) THEN 0xffffffff8a1c9a92 COLLATE BINARY WHEN ('' IN ()) THEN ((x'6f44d1b3')&('c\r')) END);SELECT DISTINCT rt0.c2, (((((((vt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c2))))AND(((vt0.c0)==(vt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))), (rt0.c0 COLLATE BINARY IN ()) FROM vt0, rt0 WHERE (((((x'4ad0') NOT BETWEEN ('-1154372936') AND (NULL))) BETWEEN (((((0x44ab12f0)AND(-4159017.0)))OR('FZR>gQ'))) AND ((('-332163231')IS(x''))))); -- 0ms;
SELECT ((CAST(vt0.c2 AS NUMERIC)) ISNULL), CASE WHEN ((vt0.c0)+(x'9595704c')) THEN ((vt0.c1)%(rt0.c0)) END, (((rt0.c2, ((((rt0.c2)AND(vt0.c1)))OR(vt0.c2)), ((rt0.c0)<=(vt0.c1))))>((NULL, ((vt0.c2)IS(rt0.c0)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END))) FROM rt0 WHERE (json_object((x'' IN ()), ((0Xffffffffa87baa4e) NOTNULL)));SELECT DISTINCT vt0.c1 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((MAX(vt0.c1))||(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)), ((GROUP_CONCAT(vt0.c2))>>(((vt0.c1) IS TRUE))), ABS(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN vt0.c2 END) FROM rt0, vt0; -- 0ms;
SELECT (((((vt0.c0)OR(rt0.c0)))AND(vt0.c1)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT ALL (- (((NULL)<<(rt0.c2)))), 1919342346, AVG(AVG((vt0.c0 IN (vt0.c0, rt0.c2)))) FROM vt0, rt0;SELECT DISTINCT json_valid(rt0.c0) COLLATE BINARY FROM vt0;SELECT DISTINCT ((CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c2 THEN vt0.c0 END)LIKE(NULL)), GROUP_CONCAT(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END) OVER (), DENSE_RANK() OVER () FROM vt0, rt0 WHERE (((CASE NULL  WHEN '573140684' THEN x'4781' ELSE '9pz1' END)LIKE((- (x''))))); -- 0ms;
SELECT ALL json(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT LOWER((NOT (vt0.c1))) FROM vt0; -- 0ms;
SELECT (- (((vt0.c1)LIKE(rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((- (vt0.c2)))OR(((vt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))OR((~ (0.9156980304675364)))) FROM rt0 WHERE ((+ ((0.630373356005419 IN ()))));SELECT DISTINCT ((rt0.c0 COLLATE BINARY) ISNULL), LAG(vt0.c0, (((vt0.c1)) NOT BETWEEN (((((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c2)) AND ((vt0.c0, vt0.c2, vt0.c0))))) AND ((((vt0.c2) IS FALSE)))), (((vt0.c2 COLLATE BINARY))>=((vt0.c1 COLLATE NOCASE)))) OVER (), CAST(TRIM(DISTINCT vt0.c1, rt0.c2) AS REAL) FROM vt0 LIMIT 94013055;SELECT (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) IN ()), '0.9156980304675364', ((((rt0.c1) NOT BETWEEN (0.41526113456601044) AND (rt0.c1)))GLOB(((vt0.c1) NOT NULL))), TRIM('-542533555', rt0.c2 COLLATE BINARY), ((((vt0.c0)*(rt0.c1)))IS NOT(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) FROM rt0 WHERE (COALESCE(((NULL) IS FALSE), CASE 0.8739733874246025  WHEN x'' THEN '0.11300077751969495' END));SELECT (((((vt0.c1)AND(rt0.c2)))AND(vt0.c1)) IN ()) FROM vt0, rt0 WHERE (HEX(DISTINCT COALESCE(DISTINCT 0.8082963854399428, NULL, NULL, x'746d', 768174287, 447001311))); -- 0ms;
SELECT DISTINCT (- (rt0.c2)) FROM vt0;SELECT DISTINCT x'557c', rt0.c2, CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 END COLLATE NOCASE FROM rt0, vt0 WHERE ((((('<c')IS NOT('791824142'))) ISNULL)); -- 0ms;
SELECT DISTINCT json(((rt0.c2) ISNULL)), x'', ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1))) AND (((NULL) IS TRUE))) FROM vt0 WHERE (CASE COALESCE(NULL, x'ed46', '', '-2142160485')  WHEN '1112477631' COLLATE BINARY THEN ((0.9048335767626552) NOT NULL) WHEN CAST('-776123426' AS INTEGER) THEN ((NULL) ISNULL) WHEN 1.212335945E9 COLLATE RTRIM THEN (('1328845538') NOT BETWEEN (x'') AND (NULL)) ELSE (+ (x'')) END);SELECT ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c2 COLLATE RTRIM)) FROM rt0 WHERE (((((x'eb7c7715')<=('')))>>((((0.8576962229416535))>=((NULL))))));SELECT DISTINCT (- (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.5358944019830999)))) FROM rt0, vt0 WHERE (RTRIM(NULL)) ORDER BY vt0.c2  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((rt0.c2)==(vt0.c1))))<=((((vt0.c1) NOT NULL)))) FROM rt0 WHERE (((NULL) NOT NULL) COLLATE NOCASE);SELECT rt0.c1 FROM vt0 WHERE (((('1640595789')OR(-631983097)) IN ('-1750282918', (('1152062192')<=(0X280c4d89)))));SELECT DISTINCT CASE WHEN 442984619 THEN vt0.c1 WHEN (vt0.c1 IN (vt0.c2, vt0.c2)) THEN vt0.c2 WHEN vt0.c1 COLLATE BINARY THEN json_valid(vt0.c1) ELSE (rt0.c2 IN ()) END FROM vt0, rt0 WHERE (CAST((('W9Lft娪AJ') NOT BETWEEN (0X4b0aef54) AND ('')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((CAST('~]' AS INTEGER))AND(CAST(vt0.c2 AS REAL))))AND((rt0.c1 IN ()))) FROM rt0, vt0 NOT INDEXED WHERE ((((0.28814274361713454)) BETWEEN ((CAST(0Xffffffffbd3a9ef3 AS BLOB))) AND ((CASE x''  WHEN -763270431 THEN 0.6549265162353812 ELSE 0x3c9b2fa1 END)))); -- 0ms;
SELECT DISTINCT COUNT('-1338289203'), x'dcb0', NULL FROM rt0, vt0; -- 0ms;
SELECT DISTINCT x'3cbb', COUNT(((vt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) COLLATE RTRIM, (CAST(rt0.c1 AS TEXT) IN ()) FROM rt0 WHERE ((((NULL IN (NULL)))|(CAST(0x52da5873 AS NUMERIC))));SELECT ((((vt0.c0) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (-1049480086) AND (rt0.c1))) AND (((((((((((((vt0.c2)AND(vt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))) FROM rt0, vt0 WHERE ('0虿Afdtj'); -- 0ms;
SELECT DISTINCT CAST(TRIM(rt0.c0, rt0.c2) AS INTEGER), ((((((((((rt0.c2)/(NULL)))OR(((((rt0.c2)OR(x'720a')))AND(x'')))))OR(((vt0.c1)OR(rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN 0.41575443256641087 WHEN rt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)))OR((((vt0.c1))<((rt0.c1))))), ((0.38326595755757864) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c2 AS REAL))) FROM vt0;SELECT DISTINCT (((rt0.c2)=(vt0.c2)) IN ()), (((- (vt0.c2))) BETWEEN ((vt0.c2 IN (rt0.c0))) AND ((vt0.c2 IN (vt0.c2)))), rt0.c0 FROM rt0 GROUP BY (+ (rt0.c1 COLLATE NOCASE));SELECT DISTINCT (~ (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c1 END)) FROM vt0;SELECT DISTINCT NTILE(((ABS(vt0.c1))||(((vt0.c1)IS NOT(vt0.c1))))) OVER () FROM vt0 ORDER BY CASE WHEN (((NULL))>=((rt0.c1))) THEN 9.14830746E8 ELSE (((('773632442')AND(rt0.c0)))OR(rt0.c0)) END  NULLS LAST;SELECT DISTINCT CAST(json_array_length(rt0.c0, vt0.c2) AS NUMERIC), ((vt0.c0 COLLATE RTRIM)OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))), rt0.c0, SUM(((rt0.c0) NOTNULL)), COUNT((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))), 0.36911324938750756 COLLATE BINARY, (- (rt0.c2)) FROM vt0;SELECT DISTINCT (((vt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c2, ((0x69e6585b) IS TRUE), CASE WHEN rt0.c2 THEN rt0.c1 END)) AND ((((vt0.c1)-(0X1af93448)), LIKELIHOOD(rt0.c1, 0.49365236052167194), (((NULL, vt0.c2, vt0.c2))<((rt0.c2, vt0.c2, -1880937291)))))) FROM vt0;SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))<=(MIN(vt0.c0))), LIKELY(DISTINCT ((rt0.c0)IS NOT(vt0.c2))), ((((((((((0.6106117184547927)+(rt0.c0)))OR(((vt0.c1) IS FALSE))))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)))))AND((((rt0.c0))>=((rt0.c0))))))OR(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END)) FROM vt0, rt0; -- 0ms;
SELECT ALL (((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c2)) IN ()) FROM rt0; -- 0ms;
SELECT ALL ((((((((MAX(vt0.c0))OR(x'')))AND('-520642861')))OR(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c2)))))OR(vt0.c2)) FROM vt0, rt0; -- 1ms;
SELECT ALL x'' FROM rt0, vt0; -- 0ms;
SELECT ((TRIM(rt0.c1)) NOT BETWEEN ((vt0.c1 IN ())) AND (((rt0.c1)>>(rt0.c1)))) FROM vt0 WHERE (((CASE WHEN 0.03625306785831417 THEN '걍韦' WHEN 1706570992 THEN '0.37083682277289975' WHEN '#' THEN -1629848602 ELSE '' END)%(CASE WHEN 'gahZgymy鄎' THEN NULL ELSE 0X5c2c6432 END)));SELECT DISTINCT ((((((((vt0.c2 COLLATE BINARY)OR(vt0.c1)))OR(CAST(vt0.c2 AS TEXT))))AND(((0.8914624632158897)<<('0.01701809716204017')))))OR(CAST(rt0.c2 AS NUMERIC))) FROM rt0;SELECT DISTINCT CASE NULL  WHEN CAST(vt0.c2 AS NUMERIC) THEN vt0.c2 COLLATE NOCASE END FROM rt0 WHERE ((-203489937 COLLATE RTRIM IN ()));SELECT DISTINCT CASE CAST(vt0.c2 AS REAL)  WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, rt0.c2))>=((rt0.c0, rt0.c2, vt0.c2))) ELSE STRFTIME(rt0.c0, vt0.c1, '0.6549265162353812') END FROM rt0, vt0 WHERE (((x'c384' IN ('0.11300077751969495', '-396898318', NULL)) IN ())) ORDER BY CAST((vt0.c0 IN ()) AS REAL) ASC; -- 0ms;
SELECT CASE WHEN (+ (vt0.c0)) THEN TRIM(DISTINCT vt0.c0) WHEN (((vt0.c2, rt0.c0, vt0.c2))==((vt0.c2, rt0.c2, rt0.c2))) THEN SQLITE_VERSION() WHEN ((((((((vt0.c2)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)) THEN (((rt0.c1))<((vt0.c1))) END FROM vt0, rt0 WHERE (CASE 5.73140684E8  WHEN '0.08338013537841005' THEN '1070817444' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( RANGE (+ ((- (vt0.c2)))) PRECEDING), CAST(((1.509164767E9) NOT BETWEEN (vt0.c0) AND (rt0.c2)) AS TEXT), '6B\,nowC' FROM rt0, vt0 WHERE ((((((x'491d')) BETWEEN (('6됇')) AND ((0.03778663865373788))))GLOB(((NULL)%('VK')))));SELECT rt0.c1 FROM rt0, vt0; -- 1ms;
SELECT DISTINCT (NOT ('(')), (((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c2))))<((vt0.c2 IN ()))), ((COUNT(rt0.c0))LIKE(CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)) FROM vt0;SELECT ALL TYPEOF((vt0.c1 IN ())) FROM rt0, vt0 LIMIT -276205405; -- 0ms;
SELECT DISTINCT LIKELY((vt0.c1 IN (vt0.c0))) FROM rt0, vt0 WHERE (CASE ((0.20379752121725336) BETWEEN (x'4bdf9dbf') AND (x''))  WHEN '' THEN ((-813514346) NOT NULL) END); -- 0ms;
SELECT ALL TRIM(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN rt0.c2 THEN rt0.c0 END, (NOT (rt0.c1))) FROM rt0, vt0 WHERE (CASE CASE 'ደ|X,'  WHEN 'd\nSYerDxq' THEN 0xffffffffdfd8127f ELSE '-1277841176' END  WHEN ((-389673639) NOT BETWEEN (0.02566329465584638) AND (NULL)) THEN rtreenode('-2330786', 0xffffffffa8a18194) END); -- 0ms;
SELECT MIN(((rt0.c1)<<(rt0.c2))) FROM vt0 GROUP BY (NOT ((((rt0.c1))>((vt0.c0))))) HAVING ((((rt0.c0)+(vt0.c2)))%(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))));SELECT ALL COUNT((vt0.c2 IN ())), CAST(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c2 ELSE rt0.c2 END AS REAL), NULL FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)OR(vt0.c2)))OR(vt0.c0)))>>(((vt0.c2)GLOB(vt0.c0)))), COUNT(*), ((x'') IS TRUE) FROM rt0 ORDER BY ((CAST(rt0.c1 AS NUMERIC))||(485035021)) ASC  NULLS LAST;SELECT DISTINCT (~ (CAST(rt0.c1 AS NUMERIC))), '-1996878530', 0.3405973619334093 FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((vt0.c1)%(vt0.c0)))<(COUNT(*))) FROM vt0 WHERE (((((x'') BETWEEN (x'1ab6') AND (x''))) NOTNULL)); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE NOCASE FROM rt0 GROUP BY ((load_extension(rt0.c1, rt0.c0))&(0.8296419841012552 COLLATE RTRIM));SELECT ((((((((((vt0.c1)OR(vt0.c2)))AND((vt0.c1 IN (vt0.c0, vt0.c2)))))AND(CASE WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 END)))AND((~ (vt0.c1)))))AND(0xffffffffc2b1b480)) FROM rt0 WHERE ((x'e430' IN ()) COLLATE RTRIM);SELECT ALL 0.9591870775271202 FROM vt0, rt0 WHERE ((~ ((NULL IN (0.17514868614351975))))) LIMIT 1122041608; -- 0ms;
SELECT DISTINCT ((vt0.c2)AND(vt0.c2)) COLLATE NOCASE, ((((((vt0.c1)AND(rt0.c1)))OR(vt0.c1)))!=(vt0.c1 COLLATE RTRIM)), ((((((vt0.c0)OR(0.3405973619334093)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(vt0.c0)))OR(rt0.c1))) AND (((rt0.c1)LIKE(rt0.c2)))) FROM rt0;SELECT DISTINCT ((((((rt0.c1)<>(vt0.c2)))OR((((vt0.c2))>((rt0.c1))))))OR(((rt0.c2)||(vt0.c2)))), ((CASE WHEN rt0.c1 THEN vt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c2 THEN rt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN rt0.c1 THEN 1406422079 ELSE vt0.c1 END) NOT BETWEEN (((vt0.c0)/(rt0.c2))) AND (((vt0.c1) BETWEEN (vt0.c2) AND (rt0.c1)))), (('廡K1?U') NOT BETWEEN ((vt0.c0 IN ())) AND (x'')) FROM vt0, rt0; -- 0ms;
SELECT ALL CASE WHEN (((vt0.c0))>=((rt0.c0))) THEN SQLITE_COMPILEOPTION_USED(vt0.c2) ELSE (((vt0.c0))>((rt0.c2))) END FROM rt0, vt0; -- 0ms;
SELECT ((((vt0.c2) NOTNULL))<(((rt0.c2) NOT NULL))) FROM rt0 WHERE (((((0.27858599265764084) NOTNULL))<=(HEX(DISTINCT NULL))));SELECT DISTINCT rt0.c0, CASE 'cᒴ'  WHEN ((rt0.c1)|(vt0.c1)) THEN ((rt0.c0)&('\r')) END, ((rt0.c2 COLLATE NOCASE)<(((vt0.c0)%(vt0.c1)))) FROM rt0, vt0 GROUP BY GLOB(((vt0.c0) NOTNULL), 0X5e997452); -- 0ms;
SELECT DISTINCT rt0.c1, ((((vt0.c1)GLOB(rt0.c2)))>(((x'') BETWEEN (vt0.c1) AND (rt0.c1)))), '[]' FROM rt0, vt0 WHERE (((0.036703917579370526)!=(0.6360959765389499)) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT DISTINCT UNLIKELY(CAST(vt0.c1 AS NUMERIC)) FROM rt0 WHERE (LOWER('hT-鵒kl廸	' COLLATE RTRIM)) LIMIT -903301882;SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0, rt0 LIMIT -520642861 OFFSET 956490636; -- 1ms;
SELECT DISTINCT ((vt0.c0) IS FALSE) COLLATE RTRIM FROM rt0, vt0; -- 0ms;
SELECT ALL ((((TYPEOF(vt0.c1))AND(0.9954922192868012)))AND(COUNT(*))), CASE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN TRIM(rt0.c1) THEN rt0.c0 ELSE CASE WHEN rt0.c1 THEN x'' END END, (- ((((rt0.c1, 773632442, vt0.c1))<((1632197661, rt0.c1, rt0.c2))))) FROM vt0, rt0 WHERE ((NOT (((0x60492581) NOT BETWEEN (0.13316280672584513) AND (317490530))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN 0.5410953638669874 THEN vt0.c1 WHEN x'' THEN rt0.c2 END)IS NOT(CAST(0X2c7f4cb AS INTEGER)))  NULLS LAST, LIKELY(vt0.c0 COLLATE RTRIM); -- 0ms;
SELECT ALL (vt0.c2 IN ()) FROM rt0 WHERE ((~ (x'')) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT TOTAL(((vt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) OVER () FROM vt0 LIMIT 573140684 OFFSET -1846236430;SELECT ALL ((rt0.c2 IN ()) IN ()) FROM vt0 WHERE (((x'' COLLATE BINARY) NOT BETWEEN ((NOT (0.11888019020739193))) AND (((0.7848693759743798) IS TRUE)))) LIMIT 459801737; -- 1ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL CASE CAST(rt0.c1 AS BLOB)  WHEN ((x'')+(rt0.c2)) THEN (NOT (vt0.c1)) ELSE ((vt0.c0)==(rt0.c1)) END FROM vt0, rt0 WHERE (((((((x'') ISNULL))OR((0.16260951025409043 IN ()))))OR(1789263147 COLLATE RTRIM))) ORDER BY ((((vt0.c1)AND(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 END)))AND(((vt0.c1)<(vt0.c0))))  NULLS FIRST, QUOTE(vt0.c0) DESC  NULLS LAST, (((vt0.c2)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((json_insert(vt0.c0, rt0.c0, vt0.c0))));SELECT ((LIKELY(rt0.c1))*(((rt0.c1)GLOB(vt0.c0)))) FROM vt0, rt0 WHERE ((((x'1f51' IN ())) NOT NULL)); -- 0ms;
SELECT DISTINCT (5.15228438E8 IN (((rt0.c1)AND(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))<=(CASE WHEN rt0.c2 THEN rt0.c0 END)), AVG((((((((('b*')OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c2)))OR(rt0.c0)) COLLATE BINARY) OVER (), LOWER(((rt0.c1) IS TRUE)) FROM rt0, vt0; -- 0ms;
SELECT (- (CAST(vt0.c2 AS INTEGER))) FROM rt0, vt0 LIMIT 1613607943; -- 0ms;
SELECT (((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) FROM rt0, vt0 WHERE ((((((x'', NULL, '-1e500'))<=((0.3721360588624856, NULL, '0.16260951025409043')))) NOT BETWEEN (CASE WHEN 0X1a60d82 THEN NULL WHEN x'aa47' THEN '61963623' WHEN '-1770790076' THEN '' WHEN 0xffffffffcab1b1d1 THEN NULL WHEN 0.039921169549843816 THEN 0.12244166233007592 END) AND (((x'') NOT BETWEEN ('') AND ('-1894849409'))))); -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN LOWER(DISTINCT rt0.c0) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN json(rt0.c0) WHEN (rt0.c0 IN (rt0.c0, rt0.c0)) THEN '-111787332' WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) WHEN NULL THEN ((rt0.c0)*(rt0.c0)) ELSE (((0xffffffff8630df0e))>=((rt0.c2))) END, ((((rt0.c0, rt0.c1, rt0.c1))==((rt0.c1, 1.947600721E9, rt0.c0))) IN ())) OVER () FROM rt0 WHERE ((((HEX('1731838050')))<((CAST('HYQ/[' AS REAL))))); -- 2ms;
SELECT SUM(CAST(vt0.c1 AS NUMERIC)) FROM vt0 WHERE ((x'a0aa' IN ())); -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((-184985834))) COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT (((vt0.c0)AND(vt0.c2)) IN ((((rt0.c0))<=((NULL))), CASE vt0.c2  WHEN 'Z*z' THEN '쾵b_#LS' ELSE rt0.c0 END)), CAST(vt0.c2 AS NUMERIC) COLLATE BINARY, ((vt0.c2) NOTNULL) COLLATE NOCASE FROM rt0 WHERE ((- (((x'') BETWEEN ('') AND (NULL)))));SELECT ALL (('R(K')IS((((rt0.c2, rt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c2, vt0.c2))))), TOTAL(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c2)))OR(vt0.c0)))AND(rt0.c2))), ((x'')AND(ROUND(vt0.c1, rt0.c2))), (((NULL) NOTNULL) IN ()), ((((rt0.c2) NOT NULL)) IS TRUE) FROM vt0, rt0 WHERE ((((-999902604 COLLATE RTRIM))>(((+ (0X2b69cdca)))))); -- 0ms;
SELECT TYPEOF(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) FROM rt0;SELECT DISTINCT ((vt0.c2)||(rt0.c0)) COLLATE NOCASE FROM vt0, rt0 GROUP BY (NOT (NULL)) LIMIT 1189019390 OFFSET -4159017; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL) COLLATE RTRIM FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((-553745510 IN ()) IN ()) FROM vt0, rt0 WHERE ((CAST(NULL AS NUMERIC) IN ())); -- 0ms;
SELECT ALL (((vt0.c2) IS FALSE) IN ()) FROM vt0 WHERE ((((CAST(0.13671692743260488 AS REAL)))<>((json_insert(30506955, '8163579908532406773', x'af97e1e9', x'', x'2489'))))) ORDER BY LOWER(((vt0.c2)<=(rt0.c2)));SELECT DISTINCT CAST((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT), (((NULL IN ())) IS TRUE), AVG((- (vt0.c0))) FROM vt0, rt0 WHERE (rtreenode(GLOB('1068591868', 0.7758332861088364), CAST(0.9809667433700954 AS TEXT))) LIMIT -1499472429; -- 0ms;
SELECT DISTINCT ((ABS(vt0.c2)) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))) FROM vt0, rt0 WHERE (((((1.204929986E9) IS FALSE))-(NULL COLLATE BINARY))); -- 0ms;
SELECT LEAD((((((vt0.c1) NOT NULL)))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2))))), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE NOCASE, (((~ (vt0.c1))) NOT NULL)) OVER () FROM vt0 WHERE (((((((((ABS(0.18664838688444774))AND((((0.41575443256641087)) NOT BETWEEN ((NULL)) AND ((x'2306d5ed'))))))AND(((NULL) BETWEEN ('1390041203') AND (NULL)))))AND(CAST(x'aff2' AS BLOB))))OR(CAST(0.18084767336140972 AS INTEGER)))); -- 0ms;
SELECT DISTINCT CAST(-1.077027878E9 AS NUMERIC) FROM vt0 WHERE (((('')IS NOT(x'')) IN ((~ (NULL))))) ORDER BY NULL COLLATE RTRIM LIMIT 1361257343; -- 3ms;
SELECT DISTINCT (LTRIM(NULL) IN (((rt0.c2)GLOB(vt0.c2)))) FROM vt0 GROUP BY ((((CAST(0Xfffffffff094ca90 AS TEXT))AND((('-1609702936') NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR(vt0.c2 COLLATE BINARY));SELECT ALL SQLITE_SOURCE_ID(), (UPPER(rt0.c0) IN (vt0.c2)), '413885832' COLLATE BINARY FROM rt0 WHERE ((((((- (0.45897523611787705)))OR((~ ('-1309132651')))))OR((('1662881110') ISNULL)))) LIMIT -1277841176;SELECT DISTINCT ((((rt0.c1))<=((rt0.c2))) IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (+ (rt0.c0)) FROM rt0, vt0 WHERE (IFNULL(CASE 1402741118  WHEN 'm''	|' THEN NULL END, x'' COLLATE NOCASE)); -- 1ms;
SELECT CASE COUNT(*)  WHEN 0.3694205834485861 THEN rt0.c2 COLLATE BINARY WHEN NULL THEN ((vt0.c1) IS FALSE) WHEN GROUP_CONCAT(vt0.c0) THEN COUNT(vt0.c1) ELSE CAST(vt0.c1 AS INTEGER) END FROM vt0, rt0 WHERE ((NOT (CAST('' AS BLOB)))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt0, vt0; -- 0ms;
SELECT ALL ((((json_array_length(rt0.c1))AND(((((vt0.c0)OR(rt0.c1)))AND(vt0.c1)))))OR(-2330786)), CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) AS INTEGER), CAST(CAST(x'23a2' AS INTEGER) AS TEXT) FROM vt0;SELECT DISTINCT ((((vt0.c1)+(rt0.c2))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (-992555415)) FROM vt0, rt0 WHERE (CAST((('')<=(x'4dd6')) AS TEXT)); -- 0ms;
SELECT ((((0.6360959765389499)%(rt0.c1))) NOTNULL) FROM vt0;SELECT DISTINCT '-725831998', SUM(((vt0.c2) IS FALSE)) OVER (), CASE x''  WHEN ((rt0.c2)>=(rt0.c0)) THEN ((vt0.c2) BETWEEN (rt0.c2) AND (vt0.c1)) END, ((((rt0.c0) IS FALSE)) ISNULL), CASE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c2))  WHEN CAST(rt0.c1 AS TEXT) THEN rt0.c2 END FROM rt0, vt0; -- 1ms;
SELECT ((LOWER(rt0.c0)) ISNULL) FROM rt0 ORDER BY (rt0.c0 COLLATE NOCASE IN ()) DESC; -- 0ms;
SELECT DISTINCT NTILE(((((((((NULL)AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) IS TRUE))))AND(rt0.c2 COLLATE BINARY)))OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))))) OVER () FROM rt0;SELECT DISTINCT ((((vt0.c2)GLOB(rt0.c1)))|((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((rt0.c0)LIKE(vt0.c2)) COLLATE NOCASE, ROW_NUMBER() OVER () FROM vt0;SELECT ((((vt0.c1) NOTNULL))!=('')) FROM rt0, vt0 GROUP BY rt0.c0, ('H25?A_A' IN ()), COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), x'') HAVING COALESCE(DISTINCT rt0.c1, rt0.c1) COLLATE RTRIM ORDER BY (('281250864')|(((vt0.c2)<>(rt0.c2)))) DESC; -- 0ms;
SELECT ((ABS(DISTINCT rt0.c2)) NOTNULL) FROM rt0 WHERE (((UPPER(DISTINCT 0X18ab6588)) IS FALSE)); -- 0ms;
SELECT DISTINCT TOTAL('''') OVER () FROM vt0, rt0 WHERE (0.8735353317881447); -- 0ms;
SELECT ((((((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE rt0.c2 END)AND(HEX(DISTINCT vt0.c2))))OR('z*6	')))AND((NOT (vt0.c2)))))AND((- (vt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT CASE WHEN COUNT(*) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) END FROM vt0, rt0 WHERE (COALESCE(DISTINCT x'', 'CCLj7z棟') COLLATE BINARY); -- 0ms;
SELECT (((vt0.c0 IN ())) NOT NULL) FROM vt0 WHERE ((json_array_length(0.9590147485926603) IN (('GDj/ퟢ' IN ())))); -- 0ms;
SELECT ALL (((NULL))<=((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END))) FROM vt0 WHERE ((NOT ((x'bed6' IN (x'33a80d42')))));SELECT ((CASE WHEN vt0.c0 THEN 0X7f0c285f ELSE vt0.c0 END)&((vt0.c2 IN ()))) FROM vt0, rt0 ORDER BY (NOT (((vt0.c0)-(vt0.c2)))); -- 1ms;
SELECT DISTINCT (~ (NULL)), CASE WHEN TOTAL(rt0.c2) THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN SQLITE_COMPILEOPTION_GET(rt0.c2) THEN CASE WHEN vt0.c2 THEN vt0.c1 ELSE rt0.c2 END ELSE CAST(rt0.c1 AS REAL) END, ((((vt0.c1)==(rt0.c2))) BETWEEN (((vt0.c0) IS FALSE)) AND (COALESCE(rt0.c2, vt0.c2, rt0.c1, NULL))), (vt0.c1 COLLATE NOCASE IN ()), AVG(((vt0.c2) NOT NULL)) FROM vt0;SELECT DISTINCT LIKELY(DISTINCT ((rt0.c2) IS FALSE)) FROM vt0 WHERE (CAST(((0.16260951025409043) IS TRUE) AS NUMERIC)) ORDER BY ((vt0.c0 COLLATE BINARY)IS NOT(vt0.c2))  NULLS LAST;SELECT ALL PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT AVG(LTRIM(vt0.c2, rt0.c1)) FROM rt0 WHERE (CASE WHEN ((('', 0.930605284532087, NULL)) NOT BETWEEN ((x'', 0.14938308278033274, 0.9361198952611183)) AND (('rRZS岰푲+Y', NULL, 'BGz'))) THEN CAST(0.9860115895074233 AS NUMERIC) ELSE (((x'')) BETWEEN ((0.5928505847013422)) AND ((0.9391171341402437))) END);SELECT TYPEOF(vt0.c0), CASE ((vt0.c1)&('m3'))  WHEN ((rt0.c0)*(rt0.c0)) THEN (NOT (rt0.c2)) END, (((('0.3128369851450684')GLOB(rt0.c2))) BETWEEN (((((((((vt0.c0)OR(rt0.c1)))OR(vt0.c2)))OR(rt0.c1)))OR(vt0.c2))) AND ((((rt0.c0, vt0.c0, '427885360'))<=((vt0.c0, rt0.c2, vt0.c1))))) FROM rt0, vt0 WHERE ((((0x5aa5c759)*('617733315')) IN ())) GROUP BY (~ ((((vt0.c2, '-71812975', vt0.c2, vt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c0)) AND ((vt0.c1, vt0.c2, rt0.c0, vt0.c2, rt0.c2))))); -- 0ms;
SELECT x'c90f' FROM rt0; -- 0ms;
SELECT DISTINCT MAX((rt0.c1 IN ())) FROM rt0 WHERE (((((('') ISNULL)))>((-405961423 COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE BINARY) NOTNULL) FROM rt0, vt0 GROUP BY (~ (CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN '1888835844' WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END)), ((vt0.c0 COLLATE RTRIM)*((vt0.c2 IN ()))), CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((vt0.c0)<(vt0.c0)) THEN ((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)) END HAVING vt0.c0 COLLATE BINARY; -- 0ms;
SELECT RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE vt0.c2  WHEN rt0.c1 THEN vt0.c0 END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN NULL END ELSE ((rt0.c1)&(rt0.c0)) END FROM vt0, rt0 WHERE (CASE (0.9733927157953143 IN ())  WHEN (x'' IN (x'', 0.7125378178414283)) THEN '' COLLATE BINARY ELSE (('')==(0.658479314528258)) END); -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(rt0.c0 AS BLOB)) FROM vt0 GROUP BY (((((vt0.c0 IN ()))OR((NOT (rt0.c1)))))AND((~ (NULL)))) HAVING x'1e7c' ORDER BY (((NOT (rt0.c1))) NOTNULL) DESC  NULLS LAST, ((x'') BETWEEN ((((('-55440617')OR(vt0.c1)))AND(vt0.c0))) AND (CAST(NULL AS NUMERIC))) ASC;SELECT DISTINCT COUNT(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM rt0 WHERE ((((('515228438')OR(NULL)))>=((NULL IN ()))));SELECT DISTINCT COALESCE(TYPEOF(DISTINCT rt0.c1), rt0.c1 COLLATE NOCASE, '-1073186661', ((vt0.c2) BETWEEN (vt0.c0) AND (rt0.c2))) FROM vt0 LIMIT 1951605363;SELECT ((((((vt0.c1) IS TRUE))AND(((rt0.c0)+(vt0.c2)))))AND((rt0.c1 IN ()))) FROM vt0, rt0 ORDER BY (~ (((rt0.c2) NOT NULL))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT NULL COLLATE RTRIM, ((rt0.c2 IN (rt0.c2)) IN ()), ((rt0.c0)=('')) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c2)OR(vt0.c2)))AND(rt0.c0)))=(((((rt0.c0)OR(vt0.c1)))AND(rt0.c2)))), CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN (+ (rt0.c2)) ELSE GROUP_CONCAT(vt0.c2) END, ((COUNT(*)) NOTNULL) FROM vt0;SELECT ALL (NOT (MIN(rt0.c1))), ((((((((((vt0.c0) NOTNULL))OR(vt0.c2 COLLATE RTRIM)))OR((((vt0.c0, rt0.c0, rt0.c2))<=((rt0.c0, NULL, '-2330786'))))))OR((((vt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(((rt0.c0)OR(vt0.c1)))), CASE CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 END  WHEN CAST(rt0.c2 AS TEXT) THEN vt0.c1 END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (+ ((((vt0.c2, vt0.c1, rt0.c0))<(('1640595789', vt0.c2, rt0.c2))))) FROM vt0, rt0 WHERE (-1.02901548E9); -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS TEXT) COLLATE RTRIM, ((LOWER(vt0.c1)) NOT BETWEEN (TOTAL_CHANGES()) AND (((rt0.c2)==(vt0.c0)))), COUNT(*) FROM vt0, rt0 WHERE (((((0.7828392081978339) IS TRUE)) BETWEEN ((('&')==(x''))) AND (SUBSTR('馧 M9z2', '')))); -- 0ms;
SELECT DISTINCT (CAST(rt0.c2 AS BLOB) IN ()) FROM rt0 WHERE (CAST((- (2024800973)) AS TEXT)) ORDER BY ((((rt0.c2)IS NOT(rt0.c2))) ISNULL) ASC  NULLS FIRST, CAST(rt0.c0 AS TEXT)  NULLS FIRST; -- 0ms;
SELECT CASE ((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c2)))OR(vt0.c2))  WHEN (NULL IN ()) THEN (~ (rt0.c0)) ELSE ((rt0.c2)%(vt0.c2)) END FROM vt0 GROUP BY (rt0.c2 IN (((vt0.c1)<(rt0.c2)))), NULL, ((rt0.c1)||(rt0.c2)) COLLATE NOCASE, ((rt0.c1)OR(((rt0.c0)-(rt0.c1)))), ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(vt0.c1))) IS FALSE) HAVING (((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))))) LIMIT 1096884289;SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0 WHERE (ABS(x'')); -- 0ms;
SELECT ALL ((SUBSTR(vt0.c1, rt0.c2)) BETWEEN (COUNT(vt0.c0)) AND (((((x'')OR(rt0.c0)))AND(rt0.c0)))) FROM rt0 WHERE ((((NULL IN (0.7346404869248138, '0.9272261592784936'))) NOTNULL));SELECT DISTINCT NTILE(((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))<(((rt0.c0) NOT BETWEEN (0.7059610983090866) AND (rt0.c1))))) OVER (), TRIM(DISTINCT CAST(vt0.c2 AS TEXT)), COUNT((vt0.c1 IN (vt0.c1))) OVER () FROM rt0;SELECT ALL CAST(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC) FROM rt0 GROUP BY CAST((((rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c2)) AND ((x'69b2', rt0.c2, '-718416511'))) AS INTEGER), CAST('547249009' AS INTEGER), SQLITE_COMPILEOPTION_USED((rt0.c2 IN (vt0.c1)));SELECT ALL COALESCE((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))), ((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c1)))AND(vt0.c0))), (~ (rt0.c1 COLLATE BINARY)), (NOT (((vt0.c0) NOT NULL))) FROM vt0 WHERE ((NOT (0.21725022822112772)));SELECT ALL CAST(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER) FROM vt0 WHERE (((NULL)/(0.10783172617911363)) COLLATE NOCASE) ORDER BY CAST((x'df4a' IN ()) AS REAL)  NULLS LAST;SELECT ((((CAST(rt0.c1 AS NUMERIC))AND(LIKE(rt0.c0, vt0.c2))))AND(((((vt0.c1)OR(rt0.c1)))OR(vt0.c1)))), ((CASE WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c2)))AND(rt0.c2)))OR(0.28867207416451013)))AND(rt0.c0))) AND ((~ (vt0.c0)))), (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c2 END IN ()), ((vt0.c1)|(rt0.c1)) COLLATE RTRIM, MAX(json_remove(rt0.c1, vt0.c0)) FROM rt0 WHERE (CAST((+ (x'1dd2')) AS NUMERIC)) ORDER BY (((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (((~ (vt0.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)), ((rt0.c1) IS FALSE))) AND ((((((rt0.c1)AND(vt0.c0)))OR(rt0.c2)), '-1488264597' COLLATE NOCASE, ((rt0.c0)LIKE(rt0.c0))))) DESC  NULLS LAST LIMIT -539548297;SELECT DISTINCT (NOT (((vt0.c1)LIKE(rt0.c1)))), (((((((((((((rt0.c0 IN ()))AND(CASE WHEN rt0.c2 THEN vt0.c0 END)))OR(AVG(vt0.c0))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))OR(vt0.c2)))AND(LIKELY(DISTINCT rt0.c2))))AND((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))), ((rt0.c0 COLLATE BINARY)OR(rt0.c2)) FROM rt0;SELECT (((((((rt0.c1)) BETWEEN ((NULL)) AND ((vt0.c0))))OR((- (vt0.c1)))))AND(rt0.c1 COLLATE RTRIM)) FROM vt0;SELECT (((rt0.c1 IN ()))>(0.3500780812992975)) FROM vt0, rt0; -- 0ms;
SELECT ALL rt0.c0 FROM vt0;SELECT DISTINCT LAG((((((rt0.c2)OR('300756071')))AND(rt0.c1)) IN ()), ((((((rt0.c2) IS FALSE))AND((- (rt0.c0)))))AND(rt0.c1)), (((((rt0.c1 IN (rt0.c2)))OR(0.3231351641210527)))AND(CAST(rt0.c0 AS INTEGER)))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) THEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN vt0.c2 END ELSE ((rt0.c2)AND(vt0.c2)) END FROM rt0, vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY) NOT NULL) FROM vt0, rt0 WHERE (NULLIF(IFNULL(DISTINCT -3.23986902E8, '0.9156980304675364'), NULLIF(DISTINCT 0.6196624041354795, NULL))) GROUP BY (CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END IN ((- (vt0.c0)))) HAVING CASE (rt0.c2 IN ())  WHEN (NOT (vt0.c2)) THEN TOTAL(vt0.c0) WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c2 WHEN ((rt0.c0)<>(vt0.c0)) THEN ((((((((vt0.c2)AND(vt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(vt0.c2)) END; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0, rt0 GROUP BY (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))))>>(rt0.c2)) HAVING (((+ (rt0.c1)))-((((rt0.c0))<((vt0.c2))))); -- 1ms;
SELECT ALL ',T塳\w' FROM vt0; -- 0ms;
SELECT ((((vt0.c1)%(1751375045))) BETWEEN ((NOT (vt0.c2))) AND (((((((((rt0.c0)AND('.ꫲ')))AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c1)))) FROM vt0 WHERE (((((x'04fc')OR(0x7f0c285f))) IS FALSE));SELECT ALL CAST((((rt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))) AS NUMERIC), COALESCE(DISTINCT ((rt0.c2)LIKE(vt0.c2)), (vt0.c1 IN ())), (((rt0.c2 IN ())) NOT BETWEEN (TYPEOF(rt0.c2)) AND (((vt0.c2)||(vt0.c0)))) FROM vt0 WHERE (((('-1996878530')) BETWEEN ((((('')) BETWEEN ((x'')) AND ((NULL))))) AND ((CAST(0.49064463092611965 AS BLOB)))));SELECT DISTINCT GROUP_CONCAT((vt0.c1 IN ())) FROM rt0, vt0 WHERE (CAST(((1.546413106E9) BETWEEN ('걍韦') AND (NULL)) AS NUMERIC)); -- 0ms;
SELECT AVG(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('413885832'))) OVER () FROM vt0;SELECT MAX(vt0.c0) FROM rt0, vt0 WHERE ((((((((((((((('') BETWEEN ('-1988130409') AND (1390041203)))OR((('1217749084') NOT BETWEEN (0.9275431910853112) AND (x'')))))OR((('')%(NULL)))))AND((('1058348652') NOT BETWEEN (x'') AND (x'')))))AND((('I-u^3') NOT BETWEEN ('-1073186661') AND (7.73632442E8)))))OR(NULL COLLATE RTRIM)))AND(CAST(NULL AS BLOB)))); -- 0ms;
SELECT UNLIKELY(rt0.c1 COLLATE RTRIM), (CAST(rt0.c0 AS INTEGER) IN ()), AVG(rt0.c2) OVER ( PARTITION BY (- (((rt0.c2)IS(vt0.c1)))), CAST((vt0.c0 IN ()) AS NUMERIC)) FROM rt0;SELECT DISTINCT NULL, ((((vt0.c1 COLLATE NOCASE)OR((rt0.c2 IN ()))))AND((vt0.c0 IN ()))), ((((rt0.c2)GLOB(vt0.c0)))IS NOT(rt0.c0)) FROM rt0;SELECT DISTINCT ((LOWER(DISTINCT vt0.c1))/(rt0.c0 COLLATE NOCASE)), (((rt0.c2, vt0.c2, '%踻')) NOT BETWEEN ((CAST(rt0.c1 AS REAL), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c2)), '-902209209')) AND ((DATETIME(rt0.c1, rt0.c0, vt0.c2), ((vt0.c2)>>(rt0.c0)), rt0.c1))), (((rt0.c0 IN (rt0.c2))) IS FALSE) FROM rt0;SELECT ALL (((LOWER(rt0.c0)))<=(((vt0.c2 IN (rt0.c2, rt0.c1))))) FROM rt0;SELECT DISTINCT (vt0.c2 IN ()) COLLATE RTRIM FROM rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT AVG(CAST(vt0.c2 AS INTEGER)) OVER (), vt0.c2, CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC) FROM vt0, rt0 WHERE (CASE WHEN CASE WHEN x'7001' THEN x'de49' ELSE -1.98238015E9 END THEN ((0Xffffffffad780ec7) NOT BETWEEN (x'') AND (NULL)) ELSE CAST(x'' AS TEXT) END) ORDER BY rt0.c1 DESC  NULLS FIRST, ((CASE WHEN vt0.c2 THEN rt0.c2 END)>=((rt0.c2 IN ()))) DESC LIMIT 1845557323; -- 0ms;
SELECT DISTINCT NTH_VALUE(SQLITE_VERSION(), (rt0.c1 IN ()) COLLATE BINARY) OVER () FROM rt0 WHERE ((((~ ('ss|S')))-(0.6521871453001259))) ORDER BY CASE rt0.c1  WHEN ((vt0.c2) ISNULL) THEN (~ (vt0.c2)) ELSE (NOT (rt0.c1)) END DESC  NULLS LAST;SELECT CASE WHEN (- (rt0.c2)) THEN (+ (vt0.c1)) ELSE (((vt0.c0, rt0.c0, vt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, vt0.c0))) END FROM vt0 WHERE (((('')IS('12')) IN (NULL COLLATE RTRIM, ((0.74364422359604)>=('-314892401')))));SELECT ALL vt0.c1, (UPPER(DISTINCT rt0.c2) IN ()), IFNULL(DISTINCT ((rt0.c0)<>(rt0.c2)), (+ (-1.185949977E9))) FROM rt0 WHERE (((NULL)*(0.6079086573139789)) COLLATE RTRIM) GROUP BY '2123363719', ((((((((((((((((0.7630536302997878)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c1)))AND(CAST(vt0.c2 AS BLOB))))AND(vt0.c2)), CAST((- (vt0.c2)) AS BLOB) HAVING ((NULL)/((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1)))));SELECT DISTINCT GROUP_CONCAT(((vt0.c0) NOT BETWEEN (rt0.c1) AND (NULL))) FROM rt0 WHERE (((CASE WHEN NULL THEN x'' END) NOT NULL));SELECT COUNT(*) OVER (), RANK() OVER (), (((vt0.c1)) BETWEEN ((((-617918618) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((((vt0.c0)<<(rt0.c1))))) FROM rt0 WHERE (x'');SELECT ((((vt0.c1, vt0.c1, rt0.c2)) BETWEEN ((vt0.c2, rt0.c1, rt0.c1)) AND (('1328845538', rt0.c2, rt0.c2))) IN (CAST(rt0.c1 AS NUMERIC))) FROM rt0 GROUP BY (CAST(rt0.c1 AS BLOB) IN ((vt0.c1 IN ()))), (((((vt0.c2))!=((vt0.c1)))) NOT NULL), IFNULL((rt0.c2 IN (rt0.c0)), CAST(rt0.c0 AS REAL)), CAST((((NULL)) BETWEEN (('-1350397894')) AND ((vt0.c1))) AS TEXT), '+,Z+/';SELECT ALL CAST(CAST(rt0.c1 AS TEXT) AS TEXT) FROM rt0, vt0 GROUP BY ((CASE WHEN vt0.c2 THEN '0.2151163117923227' WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c2 END) IS TRUE) HAVING rt0.c2; -- 1ms;
SELECT DISTINCT (vt0.c1 COLLATE RTRIM IN ()) FROM vt0 WHERE ((((('si') IS TRUE))/((x'ffe8' IN (NULL, NULL))))) GROUP BY CAST(((((rt0.c0)OR(vt0.c0)))AND(vt0.c2)) AS BLOB) HAVING (((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS INTEGER))) AND (((((0.5675705822213747))==((rt0.c0))))));SELECT DISTINCT ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END)OR(']H')))OR((~ (rt0.c2)))) FROM vt0;SELECT ALL ((((rt0.c2)AND(x'')))AND(rt0.c2)) COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT DISTINCT AVG(MIN(((rt0.c0)<=(rt0.c2)))), vt0.c1, ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c2 END)||(x'' COLLATE BINARY)), (- (CASE x'ba70'  WHEN x'' THEN vt0.c0 END)), GROUP_CONCAT(vt0.c2) FILTER(WHERE ((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))LIKE((((rt0.c2))<>((rt0.c2)))))) OVER () FROM vt0, rt0;SELECT DISTINCT 0Xa28686a FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0))=((CASE rt0.c2  WHEN vt0.c0 THEN 0.8999428930778527 WHEN 0.05306339197479504 THEN rt0.c1 WHEN 0X4fca87b6 THEN x'' ELSE vt0.c0 END))), (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND (CASE WHEN vt0.c0 THEN rt0.c0 END)), PERCENT_RANK() OVER (), ((((vt0.c1)||(vt0.c2))) IS FALSE), (((((rt0.c2)+(vt0.c0))))>((x''))) FROM rt0 WHERE ((~ (NULL)) COLLATE BINARY COLLATE NOCASE);SELECT RTRIM(x''), LOWER(DISTINCT (NOT (vt0.c1))), ((GROUP_CONCAT(vt0.c1))/(0.004835095743786821)) FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c2 COLLATE RTRIM AS BLOB); -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c2))AND(((vt0.c1)>(vt0.c0)))) FROM rt0 WHERE (((((x'')LIKE(-1173208614))) IS TRUE)) GROUP BY (rt0.c1 COLLATE NOCASE IN ()) HAVING ((rt0.c1)GLOB((rt0.c1 IN ()))) ORDER BY ((x'') IS TRUE) COLLATE NOCASE ASC  NULLS LAST, ((CAST(rt0.c2 AS BLOB))%(((vt0.c1)LIKE(vt0.c0)))) ASC, ((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c0)AND(rt0.c2))) AND (((vt0.c1)<=(0xffffffffeebc69b6))))  NULLS FIRST;SELECT ALL ROW_NUMBER() OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c2)>=(vt0.c1))) OVER ( ORDER BY ((CAST(rt0.c1 AS BLOB)) IS FALSE)  NULLS LAST) FROM vt0 WHERE ((~ ('-189454843')));SELECT DISTINCT SQLITE_COMPILEOPTION_USED(rt0.c2) FROM vt0;SELECT (((NOT (rt0.c1))) NOT BETWEEN (((0.33171068491525024)GLOB(vt0.c2))) AND ((vt0.c2 IN ()))) FROM rt0 WHERE ((((('1204929986') NOTNULL)) BETWEEN (((('<klsuH'))==((0.4954402845014294)))) AND (((('U0'))<((0X7106339e))))));SELECT (((((rt0.c1, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((0X2aabdd24, vt0.c1, vt0.c1))))-(COUNT(1560439701))) FROM vt0 NOT INDEXED, rt0; -- 1ms;
SELECT DISTINCT (NOT ('892676407')) FROM vt0 WHERE ((((x'')) BETWEEN ((CASE WHEN NULL THEN 0.2223437662528016 WHEN '쨦cZXYe睕M' THEN '' WHEN x'' THEN NULL ELSE '-539487617' END)) AND ((LIKELIHOOD('', 0.40478493831721074))))); -- 0ms;
SELECT DISTINCT (((((rt0.c2))<((rt0.c0))))>(TRIM(rt0.c1))) FROM vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((vt0.c1) IS TRUE)) AND ((((vt0.c1, '', vt0.c0, rt0.c1, rt0.c1)) BETWEEN ((x'', rt0.c1, x'', vt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c1))))) WHERE ((~ (CASE WHEN NULL THEN '{bO' ELSE 0.3920371619689236 END))); -- 0ms;
SELECT ALL (+ (GROUP_CONCAT(vt0.c2))) FROM vt0 WHERE ((((((NOT (1.122041608E9)))AND(((NULL) NOT BETWEEN (NULL) AND (0X59f406df)))))OR((((((((('-|')AND(0.013769276895406857)))AND(x'')))AND(0xffffffff85fc8149)))AND(x''))))); -- 0ms;
SELECT CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0))  WHEN (rt0.c0 IN ()) THEN CAST(vt0.c0 AS NUMERIC) ELSE ((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c2)) END FROM rt0;SELECT DISTINCT ((('-1286362861'))!=((LTRIM(rt0.c2, vt0.c1)))) FROM rt0, vt0 WHERE ((((0.5161032688319485)<=(NULL)) IN ())); -- 0ms;
SELECT DISTINCT (((vt0.c2 IN ())) BETWEEN (((rt0.c2) IS FALSE)) AND (COUNT(vt0.c0))), (x'328a' IN ()), ((((rt0.c0) ISNULL)) NOT BETWEEN (((((rt0.c2)AND(vt0.c1)))AND(rt0.c0))) AND (LIKELY(DISTINCT vt0.c0))) FROM vt0, rt0 WHERE (CASE x'' COLLATE NOCASE  WHEN ((NULL) NOT BETWEEN ('n2_5fcb') AND (x'')) THEN ((NULL) NOTNULL) END); -- 0ms;
SELECT DISTINCT (((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('-1524084522'))))LIKE(CAST(vt0.c0 AS TEXT))) FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (vt0.c0)); -- 0ms;
SELECT ALL (((rt0.c1)%(rt0.c2)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT 0Xffffffffafc7403b, ((((((((((vt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR(((2105985184) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))AND(((vt0.c0)|(vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))OR(((vt0.c0) NOT NULL))), GROUP_CONCAT(LIKELY(DISTINCT rt0.c1) COLLATE NOCASE) FROM vt0;SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) IS FALSE) FROM vt0;SELECT ALL ((rt0.c2)/(((((((((NULL)AND(vt0.c1)))AND(rt0.c1)))OR(vt0.c2)))OR(vt0.c0)))) FROM rt0;SELECT ALL MIN(((vt0.c1) IS TRUE)), CAST((rt0.c0 IN ()) AS INTEGER), ((vt0.c0) IS TRUE) COLLATE BINARY, LIKELY(vt0.c2) COLLATE RTRIM, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) AS REAL) FROM vt0;SELECT COUNT(*) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM rt0 GROUP BY CAST((~ (rt0.c2)) AS TEXT) HAVING rt0.c0; -- 0ms;
SELECT DISTINCT 0.5742337315285347, x'4747', TRIM((~ (NULL)), 1.212335945E9) FROM rt0 LIMIT -1473155311 OFFSET 1264787660; -- 0ms;
SELECT ALL AVG(((((0.07657646687308084)OR(vt0.c2)))OR(rt0.c1))) OVER () FROM vt0, rt0 WHERE (((NULL) NOT BETWEEN ('-1287280302') AND ('-1')) COLLATE RTRIM); -- 0ms;
SELECT ALL (vt0.c0 IN ()) COLLATE RTRIM COLLATE NOCASE, GROUP_CONCAT((vt0.c2 IN ())) OVER (), (vt0.c0 COLLATE NOCASE IN ()) FROM vt0, rt0 EXCEPT SELECT DISTINCT ((((vt0.c0) NOTNULL))<>(rt0.c1)), vt0.c0, (((MIN(rt0.c0), ((vt0.c0)+(vt0.c1)), CASE rt0.c0  WHEN vt0.c2 THEN rt0.c0 END))>=((CASE rt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c2) BETWEEN (0.5370416673512096) AND (vt0.c0)), ((-1328645210) NOT BETWEEN (x'') AND (vt0.c0))))) FROM rt0, vt0 WHERE (CASE WHEN CASE NULL  WHEN '1' THEN '1340904136' END THEN ((NULL)IS NOT(x'196f')) ELSE (+ (x'')) END); -- 0ms;
SELECT (- ((((rt0.c0))>=((rt0.c1))))), (((((((((((rt0.c2))<=((vt0.c2))))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c2 COLLATE BINARY)))AND(-292741530)))OR((+ (rt0.c2)))), vt0.c1 FROM vt0, rt0 WHERE (((((x'')>=(x'c0c3')))IS(((NULL) IS FALSE)))); -- 0ms;
SELECT CASE CAST(rt0.c2 AS TEXT)  WHEN ((vt0.c0)>=(vt0.c2)) THEN UPPER(rt0.c1) END FROM vt0, rt0; -- 0ms;
SELECT ALL (NOT (((((((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)))), ((((vt0.c2) IS FALSE))<>(((vt0.c2)IS NOT('1930606503')))), ((((rt0.c0) IS TRUE))*(((rt0.c1)||('1069751543')))), (((((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))))AND(UNLIKELY(vt0.c1))))AND(CAST(0.9468295830420448 AS BLOB))), (+ ((((('')AND(vt0.c0)))OR(rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT SUM((vt0.c0 IN ())) OVER (), COALESCE(DISTINCT ((vt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (vt0.c2 IN ())), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR((+ (vt0.c2)))))OR(vt0.c1)) FROM rt0 WHERE (CASE WHEN ((((0.22269116473896922)AND(NULL)))OR(x'4f93')) THEN (('') IS FALSE) WHEN (- (NULL)) THEN ((NULL) NOT BETWEEN ('m') AND (0x5c2c6432)) WHEN ((0.2030412487891734) BETWEEN (0.8688665851815136) AND ('815254748')) THEN ((0.8739733874246025)=('廡K1?U')) WHEN x'' COLLATE NOCASE THEN NULL COLLATE BINARY WHEN (NOT (x'')) THEN CASE x''  WHEN NULL THEN x'' ELSE '' END ELSE ('' IN (0.2146700224908099)) END);SELECT (((((vt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('dHnnH.k1W')))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(1.7976931348623157E308)) AND (((((NULL)AND(rt0.c2)))OR(rt0.c0)))) FROM rt0;SELECT DISTINCT IFNULL(DISTINCT rt0.c1, NULL) FROM rt0, vt0; -- 0ms;
SELECT ALL ((vt0.c2 COLLATE NOCASE)==(COUNT(*))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c1 THEN '-1926101835' ELSE rt0.c2 END) BETWEEN (((vt0.c2)>=(vt0.c2))) AND ((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((vt0.c1) BETWEEN (vt0.c2) AND (rt0.c1))) IS TRUE), TOTAL((vt0.c0 IN ())) FROM rt0;SELECT ((CASE rt0.c0  WHEN rt0.c0 THEN 0.5431561802652193 END)>=((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))) FROM vt0, rt0 LIMIT 0 OFFSET -261414557; -- 0ms;
SELECT ((vt0.c2) NOT BETWEEN ('-515121970' COLLATE RTRIM) AND (CAST(rt0.c2 AS REAL))) FROM vt0, rt0 WHERE (((((x'681c9431')+(0x6c93a09)))<<(((((x'')OR('378266526')))OR(0X5a935969))))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) NOTNULL), ((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1))) BETWEEN (MIN(vt0.c0)) AND ((vt0.c2 IN ()))), ((((((vt0.c2) IS TRUE))OR(((rt0.c2) NOT BETWEEN ('qEy9dHh') AND (vt0.c2)))))OR(((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))) FROM rt0, vt0 WHERE ('v0H㿧#z*Kb'); -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) BETWEEN (rt0.c1) AND (x'')) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)-(vt0.c1))) BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(rt0.c0))) AND (x'')) FROM rt0;SELECT ALL (((rt0.c0)) NOT BETWEEN ((0xffffffffce144bf0 COLLATE BINARY)) AND (((vt0.c0 IN ())))) FROM rt0, vt0 WHERE ((((0x1ac591b2)) NOT BETWEEN (((('-332163231') NOT BETWEEN (x'') AND (0Xffffffffdfd8127f)))) AND ((((0.7493583525846395) NOT NULL))))) LIMIT 1386061792; -- 0ms;
SELECT DISTINCT CASE ((vt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1))  WHEN ((rt0.c1)&(vt0.c0)) THEN IFNULL(DISTINCT rt0.c2, vt0.c0) END FROM vt0 WHERE (((((((0.15063997675983898)AND(NULL)))AND(NULL))) NOT NULL));SELECT ALL ((rt0.c2)>(load_extension(vt0.c0))), ((vt0.c2)-(rt0.c0)) COLLATE NOCASE, CAST(TYPEOF(DISTINCT vt0.c2) AS BLOB) FROM vt0 ORDER BY UPPER(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 END) DESC;SELECT ALL (((NOT (vt0.c1))) IS TRUE) FROM vt0, rt0 WHERE (((-1.077027878E9 COLLATE BINARY) BETWEEN (((x'ad95') BETWEEN (0.2526695156333699) AND (NULL))) AND (CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT MAX(('991303602' IN ()), (~ (vt0.c0))) FROM vt0 INTERSECT SELECT DISTINCT CAST(vt0.c2 COLLATE BINARY AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE rt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN GROUP_CONCAT(rt0.c2) WHEN ((vt0.c0)<<(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) WHEN 0.7871397394803535 THEN ((rt0.c2)||(rt0.c1)) END, ((((rt0.c2) NOT BETWEEN (-1.983679502E9) AND (rt0.c2))) NOTNULL), CAST(((rt0.c0)IS(vt0.c2)) AS TEXT) FROM vt0, rt0 WHERE ((((NOT (x''))) NOT BETWEEN (((NULL)||(-544787366))) AND (json_type(0.5858462060661669)))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c2) IS FALSE)) OVER ( ORDER BY (((vt0.c1)-(rt0.c0)) IN ()), ((vt0.c1) ISNULL) ASC, (((vt0.c0)) BETWEEN ((((rt0.c2)%(vt0.c0)))) AND (((NOT (vt0.c2))))) DESC) FROM rt0;SELECT DISTINCT ((rt0.c0 COLLATE RTRIM)LIKE(rt0.c1 COLLATE NOCASE)), UPPER(DISTINCT (~ (rt0.c0))), ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END) IS TRUE), NULLIF((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c1))), (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))), rt0.c0 FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT -1421748108, 0.7416943246073131))<<(LIKE(0x3dca8554, x'')))) GROUP BY (((((rt0.c2))<=((vt0.c1)))) NOTNULL) HAVING CASE WHEN ((rt0.c1)<<(vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c1)) ELSE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c2))) END; -- 0ms;
SELECT CASE WHEN CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN CAST(rt0.c0 AS TEXT) WHEN ((vt0.c2)<(rt0.c1)) THEN SUM(vt0.c2) WHEN ((rt0.c2) IS TRUE) THEN ((vt0.c2) NOT NULL) END FROM rt0, vt0 WHERE (0.6547942227231263); -- 0ms;
SELECT ALL NTH_VALUE((((NOT (rt0.c2)))AND(CAST(NULL AS BLOB))), ((rt0.c0) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (rt0.c1))) OVER () FROM rt0 WHERE (CAST(((0.5530781686938235)>('-756825120')) AS REAL)); -- 0ms;
SELECT CAST(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB), (COUNT(rt0.c2) IN (CAST(rt0.c2 AS BLOB))), NULL, ((((((rt0.c2))>((vt0.c2)))))<((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2))))), CAST(TOTAL(rt0.c1) AS TEXT) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (~ (MAX(vt0.c1))), ((0.7391871678382629)==(((rt0.c1) IS FALSE))), COUNT(*) FROM vt0 WHERE (((((((((NULL)AND(NULL)))AND('715906340')))OR((+ ('')))))AND(CAST(0.5358944019830999 AS INTEGER))));SELECT DISTINCT PRINTF(GROUP_CONCAT(rt0.c1)) FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT x'' COLLATE RTRIM)); -- 0ms;
SELECT ALL rt0.c2 FROM rt0 WHERE (0.6789086761194633) UNION SELECT ((CAST(vt0.c2 AS REAL)) NOT BETWEEN (COUNT(*)) AND (((rt0.c1)>>(vt0.c0)))) FROM rt0, vt0 ORDER BY (+ (0.5072551872572616))  NULLS LAST, (- (-1.863233518E9 COLLATE NOCASE)) ASC, CAST((vt0.c1 IN ()) AS INTEGER) DESC  NULLS FIRST;SELECT ALL LEAD(('.1ﰃ7J*W+' IN ()), (((vt0.c2)) NOT BETWEEN (((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) AND ((((vt0.c0) IS FALSE)))), vt0.c1) OVER () FROM vt0; -- 0ms;
SELECT ALL 0xffffffffdb2b4f66 FROM vt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) IS TRUE) FROM vt0, rt0; -- 1ms;
SELECT ALL 8.15254748E8, NTH_VALUE(x'', ((((CAST(vt0.c1 AS REAL))AND(((vt0.c1) ISNULL))))AND((('0.9760016455335194')-(vt0.c2))))) OVER (), (NOT (CAST(NULL AS BLOB))), '-1945216018', ((((vt0.c1)>(rt0.c0))) BETWEEN ((((rt0.c1))>((vt0.c1)))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c2)))) FROM rt0, vt0 WHERE ((('') NOT BETWEEN (x'') AND (1.60452265E8)) COLLATE NOCASE) ORDER BY (- (((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c1))))  NULLS FIRST, (((+ (vt0.c2)))&((vt0.c0 IN (rt0.c2)))) ASC  NULLS LAST;SELECT DISTINCT (((vt0.c2)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((vt0.c2) NOT NULL)))), TRIM(rt0.c1 COLLATE BINARY), (((vt0.c0 IN (rt0.c1, vt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (0Xfffffffff1a22b84)) FROM vt0 LIMIT 1909648795;SELECT DISTINCT ((CASE WHEN vt0.c1 THEN rt0.c2 END)<=(COUNT(vt0.c2))) FROM rt0 WHERE (CAST((('513296104') NOT NULL) AS NUMERIC)) ORDER BY CASE '1509596866'  WHEN (+ (0.858640174556222)) THEN TOTAL_CHANGES() END;SELECT DISTINCT x'', ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY, (((((x'')!=(vt0.c1))))>=((NULL))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT MAX((((vt0.c2, rt0.c1, vt0.c2)) BETWEEN ((vt0.c1, vt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))) FROM rt0 WHERE ((((x'' IN (NULL)))%((((x'e7c7'))<=((0x7c9657c4))))));SELECT ALL ((LOWER('㣞?B'))<>(((((rt0.c2)OR(0.8829917521694611)))OR(vt0.c0)))) FROM rt0 WHERE (UNICODE(((0.24121303318822995)IS NOT(-9.03301882E8))));SELECT CAST(vt0.c0 AS TEXT) FROM vt0 WHERE ((((NULL, '', 'ℶPX/')) BETWEEN (((- (0xffffffffffdc6f5e)), (('-111787332')<=('-1510117493')), CAST(x'41ae' AS TEXT))) AND (((((((((('8163579908532406773')OR('绻l6h(')))AND(0.8591783094203871)))AND(0.31483173547662047)))OR(x'8580')), ((x'5c15')AND(x'')), 0.7970295069184291 COLLATE NOCASE)))) ORDER BY 0Xffffffffec339761, (((vt0.c0)/(vt0.c0)) IN ()) ASC, CAST(vt0.c1 AS TEXT) COLLATE BINARY ASC  NULLS FIRST; -- 0ms;
SELECT ALL (((0X3dca8554 IN ())) BETWEEN (SUM(0.30585659605976967)) AND (rt0.c0)) FROM vt0 NOT INDEXED, rt0 GROUP BY ((((((((((rt0.c1) BETWEEN (NULL) AND (rt0.c1)))OR(((rt0.c1) IS FALSE))))AND(((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c0)))))OR(NULL)))AND(CAST(vt0.c1 AS INTEGER))) HAVING (((((vt0.c0, -74429523, rt0.c1))<=((vt0.c0, rt0.c1, NULL)))) ISNULL) ORDER BY CAST(x'' AS BLOB)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)<(NULL)) THEN CAST(vt0.c1 AS NUMERIC) ELSE COUNT(vt0.c2) END FROM rt0, vt0 WHERE ('-1154372936' COLLATE RTRIM); -- 0ms;
SELECT ((((((vt0.c1)OR(NULL)))AND(NULL)))AND(vt0.c0)), ((((rt0.c2)AND(rt0.c0 COLLATE BINARY)))AND(((vt0.c1) IS FALSE))), rt0.c0, (((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))>((((rt0.c1)>=(0.918878447287026))))), LIKELY(rt0.c0) COLLATE RTRIM FROM vt0, rt0 NOT INDEXED; -- 1ms;
SELECT DISTINCT CAST(((vt0.c1)<=(vt0.c0)) AS INTEGER), (~ ((vt0.c2 IN (vt0.c1)))), ((COUNT(*)) NOT BETWEEN (TOTAL(rt0.c0)) AND (CAST(rt0.c1 AS TEXT))) FROM vt0, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM)!=(NULL))  NULLS LAST; -- 0ms;
SELECT (- ((((vt0.c2, 'S腍', 0.9677226295236034))<=((x'', vt0.c2, vt0.c0))))), CAST((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c0))) AS REAL), AVG(0.8171545196736552) OVER () FROM rt0, vt0; -- 0ms;
SELECT ((CAST(vt0.c2 AS TEXT)) IS TRUE) FROM rt0, vt0 WHERE (((CASE WHEN NULL THEN 0.703821144334905 END)LIKE((x'717150cd' IN ())))); -- 0ms;
SELECT DISTINCT (((~ (vt0.c2)))/(((vt0.c1)&(vt0.c2)))) FROM vt0, rt0 LIMIT 198035881; -- 0ms;
SELECT ALL (((vt0.c2, (- (vt0.c1)), (((rt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c2)))))>=((CAST(vt0.c2 AS BLOB), ((vt0.c0) BETWEEN (0.9048335767626552) AND (0.2651766090073524)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) FROM rt0, vt0; -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE ((~ ((NOT ('P''ms-'))))); -- 0ms;
SELECT ALL CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC) FROM vt0, rt0 WHERE (''); -- 0ms;
SELECT ((((rt0.c0) ISNULL))IS((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c1))))), ((((((rt0.c2)&(vt0.c2)))OR((rt0.c1 IN ()))))OR(rt0.c2 COLLATE NOCASE)), ((0.37332142874506125) ISNULL) FROM rt0 GROUP BY rt0.c1, (CAST(rt0.c1 AS TEXT) IN (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c2 END, (((-401967146)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c1))))), x'';SELECT DISTINCT ((((vt0.c2) NOT NULL))OR('-903301882')), ((((((NULL) NOTNULL))AND((vt0.c0 IN ()))))AND(CAST(rt0.c0 AS NUMERIC))), CUME_DIST() OVER () FROM vt0, rt0 WHERE ((((((((('' COLLATE RTRIM)OR(((0.9857875243374603) IS TRUE))))AND((('515228438') NOT NULL))))AND((x'' IN (NULL)))))OR(CAST('EaTl' AS INTEGER)))); -- 1ms;
SELECT DISTINCT SUM(CASE WHEN rt0.c0 THEN rt0.c2 END) FROM vt0, rt0; -- 0ms;
SELECT ALL x'b68b', ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.c1) AND ((~ (rt0.c2)))), vt0.c2, 0xffffffffc3e788b7, (((vt0.c1) IS FALSE) IN ('-83144120')) FROM rt0, vt0; -- 0ms;
SELECT ALL MAX(CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END) FROM rt0;SELECT CAST((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS NUMERIC) FROM vt0;SELECT DISTINCT (((vt0.c2 IN ()))/(COUNT(rt0.c0))), ((((((rt0.c0)OR(rt0.c1)))AND(vt0.c2)))<((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))), ((NULL)GLOB('')) FROM rt0 WHERE (CAST(CAST(0.3895254015546943 AS TEXT) AS NUMERIC));SELECT DISTINCT ((((rt0.c2)AND(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 END)))AND(CHANGES())), ((rt0.c0)+(rt0.c0)) COLLATE RTRIM, HEX(DISTINCT CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) FROM vt0, rt0 WHERE (0X25a293e6); -- 0ms;
SELECT ALL (((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1)/(vt0.c1)))) FROM rt0 WHERE (CASE WHEN '886696556' COLLATE NOCASE THEN ((0Xffffffff9a46cfe4) NOT NULL) WHEN (('G^')+('-766218223')) THEN '' WHEN x'5bae' COLLATE BINARY THEN CASE 0.1247048194080711  WHEN NULL THEN '' WHEN x'' THEN 0.10840005723591817 WHEN x'' THEN 0.2151163117923227 END END);SELECT (((MAX(rt0.c1)))<=((((((vt0.c0)OR(rt0.c0)))AND(vt0.c0))))), rt0.c0, ((x'') ISNULL) FROM vt0;SELECT DISTINCT vt0.c0, (CAST(rt0.c2 AS BLOB) IN ()), (('0.03625306785831417') NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (((vt0.c1) BETWEEN (vt0.c2) AND (rt0.c1)))) FROM vt0;SELECT ((((SUM(rt0.c2))AND(((vt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))AND((rt0.c0 IN ()))) FROM vt0 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN (((((rt0.c1, vt0.c0, rt0.c2)) NOT BETWEEN ((1.151165516E9, vt0.c1, vt0.c0)) AND ((rt0.c2, vt0.c2, rt0.c0))))) AND ((0xffffffffed3b1f8f))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((LIKELY(DISTINCT vt0.c2)) IS FALSE) FROM rt0;SELECT CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE COLLATE RTRIM FROM vt0 ORDER BY (((((rt0.c2, vt0.c0, rt0.c1)) NOT BETWEEN ((NULL, x'', NULL)) AND ((rt0.c1, rt0.c1, 8.15254748E8))))|(vt0.c2)) ASC;SELECT CAST(UNLIKELY(vt0.c0) AS BLOB), NULLIF(TRIM(vt0.c2), (NOT (NULL))), FIRST_VALUE(DATE(((rt0.c2) NOT NULL), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), CAST(rt0.c2 AS NUMERIC), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END, rt0.c2)) OVER () FROM rt0 WHERE ((((('-246848160')+(0.4457151848401798)))>(0.6798914969163316)));SELECT ALL SUM(vt0.c2) FROM vt0, rt0; -- 0ms;
SELECT CASE ((rt0.c2) BETWEEN (0.39976001914766557) AND (vt0.c1))  WHEN ((((rt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN NULL WHEN ((vt0.c0)<(vt0.c0)) THEN (((rt0.c2))==((vt0.c2))) WHEN ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0;SELECT DISTINCT (~ (CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c2 END)), ((MAX(vt0.c2)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((((((((rt0.c1)OR(vt0.c2)))OR(vt0.c0)))OR(rt0.c2)))OR(vt0.c1)))), (((((rt0.c2)IS(vt0.c0))))<((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))) FROM vt0, rt0 WHERE ((+ ('ㅯE7\'))) LIMIT 1311519415 OFFSET 1052337495; -- 0ms;
SELECT DISTINCT LIKELIHOOD(TOTAL(rt0.c2), 0.6890411552046714) FROM rt0, vt0; -- 0ms;
SELECT CASE ((rt0.c0) BETWEEN (vt0.c2) AND (vt0.c1))  WHEN (rt0.c1 IN ()) THEN ((vt0.c0) ISNULL) END, '-896208173', ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))*(NULL)) FROM rt0, vt0 WHERE ('Px2''ځ'); -- 0ms;
SELECT ALL '9223372036854775807', ((((((((((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c2)))AND((((vt0.c2))=(('199201001'))))))OR(((((((((vt0.c1)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))))AND(((rt0.c2) IS TRUE))))OR(((rt0.c2)<=(vt0.c0)))))OR(((((rt0.c0)OR(vt0.c1)))OR(vt0.c0)))), CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) AS BLOB) FROM rt0 WHERE ((NOT (('' IN (NULL))))) GROUP BY '\n6y\r	徙\n	';SELECT ((((CAST(rt0.c1 AS NUMERIC))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c1)) FROM rt0 LIMIT 400877372;SELECT -1e500 FROM rt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE ((((vt0.c1)OR('0.31199220498608504')))AND(vt0.c2))  WHEN (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))) THEN (+ (vt0.c1)) END) OVER () FROM vt0 WHERE ((((0.5099045764699979)) BETWEEN ((x'4455')) AND (('-1846236430'))) COLLATE BINARY); -- 0ms;
SELECT TRIM(rt0.c1) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) BETWEEN (0x39012d58) AND (NULL)) AS BLOB), COUNT(*), (((0.7970925944102318) NOT NULL) IN ((vt0.c2 IN ()))), CASE ((((rt0.c1)AND(rt0.c1)))AND(vt0.c1))  WHEN (vt0.c2 IN ()) THEN CAST(rt0.c2 AS INTEGER) WHEN 0Xffffffffd2e3c3e0 THEN COUNT(*) WHEN (NOT (vt0.c2)) THEN (vt0.c1 IN ()) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c1)) THEN vt0.c0 WHEN rt0.c2 COLLATE NOCASE THEN ((vt0.c1)IS(vt0.c1)) ELSE ((vt0.c1)>>(0.24470300834331793)) END, x'1367' FROM rt0;SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 END)AND(SUM(0xffffffffe107751a))))AND(COUNT(rt0.c0))), ((vt0.c1)>>(((rt0.c1)GLOB(vt0.c0)))), ((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))IS(((rt0.c2) IS TRUE))) FROM rt0 WHERE (((CAST(-0.0 AS INTEGER)) NOT BETWEEN ((('0.6388070084334663')|(x''))) AND (CASE NULL  WHEN -276821590 THEN NULL WHEN '1913385637' THEN '-45900862' WHEN '689679547' THEN '<[' END)));SELECT ALL (((rt0.c2)IS(1461562624)) IN ()) FROM vt0, rt0 WHERE ((+ (CASE WHEN NULL THEN x'' ELSE x'' END))); -- 0ms;
SELECT DISTINCT LEAD(vt0.c1, vt0.c0, ((((vt0.c2) NOT BETWEEN (vt0.c2) AND (-1034470355))) ISNULL)) OVER () FROM vt0 WHERE (CASE WHEN ((x'')OR(-2330786)) THEN (- (1.7042033E8)) ELSE (('-333821037') BETWEEN (NULL) AND (0.02064476298705009)) END); -- 0ms;
SELECT DISTINCT (((vt0.c2)) BETWEEN (((+ (vt0.c2)))) AND ((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(vt0.c2))))) FROM rt0 WHERE (CAST(TRIM(0X11eaa781, '-1782006438') AS BLOB));SELECT DISTINCT (NOT (((rt0.c0) IS FALSE))), ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))), vt0.c2 FROM vt0, rt0 GROUP BY ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN 'Z	z''h1y' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)AND((NULL IN ()))))AND(((((rt0.c2)AND(rt0.c2)))AND(vt0.c2))));SELECT ((((((rt0.c1)AND(vt0.c2)))AND(NULL)))>>(')G')) FROM vt0;SELECT DISTINCT SUM((- ('2123363719'))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT '+.b', vt0.c2, (((rt0.c2) IS FALSE) IN ((rt0.c1 IN ()))) FROM vt0, rt0 WHERE ((0.12946208714113905 IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (- (GROUP_CONCAT(rt0.c1))) FROM vt0 WHERE ((((((x'', 0.4369570838284351, '-2330786')) BETWEEN (('', '-2142160485', '-1750282918')) AND ((0.7127564494394085, '1175151291', '1/IW훧r58%')))) NOT BETWEEN (CASE WHEN x'2a3e' THEN 0.6275686259197965 WHEN -3.10731791E8 THEN '1561424141' WHEN '' THEN 'JO踏,*' ELSE 0.37332142874506125 END) AND (LIKE('p', 0.8456220520157703))));SELECT DISTINCT (((rt0.c0) NOT NULL) IN ()) FROM vt0, rt0 WHERE ((~ ((+ ('vXP'))))); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((NOT (']EJoT_')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((LAST_INSERT_ROWID()) NOT BETWEEN (((vt0.c0) ISNULL)) AND (0Xffffffffb3d5b0e8)) FROM vt0 WHERE ((~ (LIKELY(DISTINCT '1e500000')))) GROUP BY '-1359154860'; -- 0ms;
SELECT ALL CAST(vt0.c0 AS INTEGER) COLLATE BINARY FROM rt0, vt0 WHERE (LTRIM((('') NOT BETWEEN (0.9680889971284002) AND (x'')), LENGTH(0.7843374051253773))) LIMIT 715906340; -- 0ms;
SELECT DISTINCT (((vt0.c1)) BETWEEN ((NULL)) AND ((((((vt0.c1)OR(rt0.c2)))AND(rt0.c1))))) FROM rt0;SELECT ALL ((((TRIM(rt0.c0))AND((((vt0.c2, rt0.c2, vt0.c0))>=((vt0.c2, vt0.c2, vt0.c0))))))OR(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c2 END)), ((((rt0.c0 COLLATE RTRIM)AND(((((vt0.c0)AND('-103647636')))AND(vt0.c1)))))OR(rt0.c2)), COUNT(CAST(vt0.c1 AS INTEGER) COLLATE NOCASE) OVER () FROM rt0 GROUP BY 0.8296419841012552 HAVING ((GROUP_CONCAT(rt0.c0))||((((rt0.c1))>((vt0.c2)))));SELECT vt0.c0, (((rt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c2)))) AND ((rt0.c2))), vt0.c2 FROM vt0, rt0 ORDER BY (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL) ASC  NULLS LAST, (((((((((((((NOT (vt0.c1)))AND(vt0.c1)))OR((vt0.c2 IN ()))))AND(vt0.c1)))OR(((rt0.c2)IS(rt0.c1)))))OR(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN 0.8312332306144793 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE (rt0.c2 IN ())  WHEN (('-332163231') ISNULL) THEN CASE vt0.c1  WHEN rt0.c0 THEN x'a6db' ELSE rt0.c0 END END FROM vt0 WHERE (((((((x'62a9', '317490530', 0.7009674767971426, 0.8576962229416535, '8E'))<(('-471251010', -6.17918618E8, x'18af', NULL, x'55a4')))))=((((((0.9768954884134895)OR(x'')))OR(x'e93f'))))));SELECT DISTINCT FIRST_VALUE(CAST((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c1, rt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c0))) AS INTEGER)) OVER (), ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) ISNULL), ((rt0.c2 IN (vt0.c1, rt0.c0)) IN ()) FROM rt0, vt0 WHERE (((('㌿r^2SRW' COLLATE BINARY, ((NULL) NOT BETWEEN (0xffffffffc1655e28) AND ('1509164767')), ((x'') NOT BETWEEN (NULL) AND (NULL))))<=((((x'') ISNULL), ((x'ef40') BETWEEN (x'b7d9') AND ('1217749084')), '1204929986' COLLATE NOCASE)))) GROUP BY UNLIKELY(DISTINCT vt0.c2) HAVING rt0.c1; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT CASE rt0.c2  WHEN vt0.c2 THEN rt0.c1 WHEN x'' THEN vt0.c1 WHEN rt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN rt0.c2 END) FROM rt0;SELECT CAST((('1217749084') NOTNULL) AS NUMERIC) FROM rt0 WHERE (json_valid(('' IN ()))); -- 0ms;
SELECT DISTINCT CAST((NOT (rt0.c1)) AS INTEGER), TRIM(DISTINCT ((rt0.c0) IS TRUE), ((x'daeac209')OR(vt0.c0))), (CAST(vt0.c2 AS REAL) IN ()) FROM vt0, rt0; -- 0ms;
SELECT ALL CASE (NOT (vt0.c0))  WHEN (((vt0.c1, rt0.c0, vt0.c2, rt0.c0, rt0.c2))<=((rt0.c1, rt0.c2, rt0.c2, vt0.c0, rt0.c0))) THEN ((rt0.c2)OR(vt0.c2)) ELSE (vt0.c2 IN ()) END, CUME_DIST() OVER (), ((((CAST(vt0.c1 AS TEXT))AND(((rt0.c2)==(vt0.c0)))))OR(CASE vt0.c2  WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)) FROM vt0 NATURAL JOIN rt0 WHERE (('䴎U' COLLATE BINARY IN (((NULL)<(-2007214770))))) LIMIT 2027368651; -- 0ms;
SELECT DISTINCT CAST(TRIM(rt0.c1, rt0.c2) AS REAL), GROUP_CONCAT(((x'')AND(rt0.c1))) OVER (), (((NOT (vt0.c2)))AND(((NULL) ISNULL))) FROM vt0 WHERE (NULLIF(DISTINCT 1947600721, 0.06670260545779172 COLLATE NOCASE));SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE (CAST(CAST(x'55e5061f' AS NUMERIC) AS BLOB)); -- 0ms;
SELECT ((TRIM(DISTINCT 0Xffffffffa4043a79, vt0.c0))+((- (rt0.c0)))), ((((rt0.c1)LIKE(rt0.c1)))<=((+ ('-2059904662')))), ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)||((~ (vt0.c2)))) FROM rt0;SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (((rt0.c0)OR(rt0.c0))) AND ((((('188187663')AND(rt0.c1)))AND(0.320312556621834)))) FROM vt0, rt0 WHERE (ABS(DISTINCT CAST('Io' AS INTEGER))); -- 0ms;
SELECT ALL 'E[Z^' FROM rt0 WHERE ((('2140315315' COLLATE BINARY) IS TRUE)); -- 0ms;
SELECT ALL (x'' IN (((((vt0.c1)OR(vt0.c0)))AND(rt0.c2)), ((vt0.c0)AND(vt0.c2)))) FROM vt0;SELECT DISTINCT IFNULL(CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN 'fJ' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c1)LIKE(rt0.c0))) FROM vt0, rt0; -- 0ms;
SELECT 1.703894753E9 FROM vt0 WHERE (((ABS(DISTINCT x'')) BETWEEN (((NULL)=('0.3128369851450684'))) AND ((((NULL)) NOT BETWEEN ((0X54a61b14)) AND ((x'')))))) ORDER BY (((vt0.c2)) NOT BETWEEN (((rt0.c2 IN (rt0.c2)))) AND ((((vt0.c2)IS(vt0.c0)))));SELECT DISTINCT ((((rt0.c1) NOTNULL)) IS FALSE), ((((((((((rt0.c2) IS FALSE))OR(GROUP_CONCAT(rt0.c1))))OR(((vt0.c2)&(rt0.c1)))))OR((((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((x'4b39', rt0.c1, rt0.c0))))))AND(NULL)), COUNT(((rt0.c2)&(vt0.c0))) FROM vt0, rt0 LIMIT 1; -- 0ms;
SELECT ((((vt0.c2)|(rt0.c1)))LIKE(CAST(rt0.c1 AS REAL))), LOWER(((rt0.c1)>=(0.8212185456777799))), ((((vt0.c1)AND('+[')))OR(rt0.c0)) COLLATE NOCASE FROM rt0;SELECT DISTINCT TRIM(DISTINCT CAST(vt0.c2 AS INTEGER), CAST(vt0.c0 AS INTEGER)), x'', (~ (((vt0.c1) ISNULL))) FROM vt0; -- 0ms;
SELECT (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END IN ()), MAX(CAST(vt0.c1 AS REAL)), highlight((('-376239645')IS NOT(vt0.c2)), NULL, ((rt0.c0) IS TRUE), 8163579908532406773) FROM rt0, vt0 WHERE ((((''))>(((('¹L1kAx')IS NOT('')))))) ORDER BY (rt0.c0 IN (CASE WHEN rt0.c2 THEN vt0.c1 END)) DESC  NULLS LAST, (((x'')) BETWEEN ((0.05714321807150036)) AND ((((rt0.c1)||(rt0.c2)))));SELECT ALL CAST(((rt0.c1)>(vt0.c0)) AS NUMERIC) FROM rt0 WHERE (((((('-1052953141', '⮃o', 0.822150373505882))>((NULL, 'FALSE', x''))))>=(CAST(NULL AS TEXT))));SELECT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('&E' COLLATE NOCASE, rt0.c0 COLLATE NOCASE, LOWER(rt0.c2))) AND ((NULL, ((rt0.c1) IS FALSE), (rt0.c2 IN ())))) FROM vt0, rt0 WHERE ((((('寐~gS꣄''JB') NOT NULL)) ISNULL)); -- 0ms;
SELECT ((vt0.c1) IS TRUE) FROM rt0, vt0 NOT INDEXED ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB)  NULLS FIRST; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2) IS TRUE)) FROM vt0, rt0; -- 0ms;
SELECT ALL ((((((((NULL)AND(vt0.c1)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c2) IS FALSE))))OR(((((((((rt0.c2)OR(-3.14892401E8)))AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c1)))), CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((rt0.c0) NOTNULL) THEN ((((rt0.c0)AND(vt0.c2)))OR(rt0.c1)) END, ((((rt0.c1)||(0.6568962033276281))) NOT BETWEEN ((vt0.c2 IN ())) AND (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) FROM vt0 WHERE ((((''))<=((x''))) COLLATE BINARY COLLATE NOCASE);SELECT DISTINCT MIN(rt0.c1, rt0.c1) COLLATE NOCASE FROM vt0, rt0 WHERE (((((x'9898') NOT BETWEEN (0.3128369851450684) AND (NULL)))OR(((((0.01858568449238307)AND(NULL)))AND(x'604c'))))); -- 0ms;
SELECT DISTINCT CAST(vt0.c1 AS TEXT) COLLATE RTRIM FROM rt0;SELECT TRIM(DISTINCT ((rt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))) FROM rt0, vt0 WHERE ((((('515228438')|(x''))) NOTNULL)) GROUP BY CASE ((vt0.c0) NOT NULL)  WHEN ((0.42249850737191075) IS FALSE) THEN LIKELY(DISTINCT rt0.c2) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(-1.983679502E9)))OR(vt0.c1)) WHEN x'' THEN (((vt0.c1))<=((rt0.c1))) END, ((CASE vt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 END)&(((-1.077027878E9) BETWEEN (vt0.c2) AND (rt0.c1)))), (((-677117362)) BETWEEN ((((vt0.c2)GLOB(vt0.c0)))) AND ((vt0.c2))) HAVING CASE (((vt0.c2)) BETWEEN ((vt0.c1)) AND (('1739176679')))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.9888589827299901)) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE 0.593368301681568 END; -- 1ms;
SELECT ALL '1807974726' FROM vt0, rt0 WHERE (((((((((((((((0.44678023445572845)OR(NULL)))AND(x'e507a8e4')))OR(2131503199)))OR(-9.97778503E8)))AND(x'2056')))OR('X1'))) IS TRUE)); -- 0ms;
SELECT ALL (((vt0.c1 IN (vt0.c2))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c2))) AND (((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)))) FROM rt0 WHERE ((((((NULL)AND(x'')))OR(NULL)) IN (NULLIF(DISTINCT 0.4065458432161063, 1.509164767E9), (('')>=(x'')))));SELECT DISTINCT vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN rt0.c2 END)IS NOT(NULL)) LIMIT -1230542415 OFFSET 75354714; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(CAST('' AS TEXT)) FROM rt0; -- 0ms;
SELECT CASE ((vt0.c1)%(rt0.c0))  WHEN (+ (vt0.c2)) THEN CASE rt0.c2  WHEN x'' THEN rt0.c2 ELSE vt0.c1 END END FROM vt0, rt0 WHERE (json_object(CASE WHEN 0.9165947280570104 THEN 0Xffffffff820530cc END, ((0.5456504413000897) BETWEEN (0.3546184471150713) AND (NULL)), CAST(-1.99687853E9 AS INTEGER), (('0.9760016455335194') NOT BETWEEN (0.7728095997071114) AND (''))));SELECT (((0.8498435544586127, vt0.c1, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN vt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c2 END, ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c2)), CASE WHEN vt0.c2 THEN vt0.c2 ELSE NULL END)) AND ((vt0.c1 COLLATE NOCASE, NULL, ((vt0.c0)%(vt0.c1))))) FROM rt0, vt0 WHERE ((~ ((('-828533700')>('94Zb/XU'))))); -- 0ms;
SELECT DISTINCT CAST(NULL AS BLOB) FROM rt0 WHERE (CAST(((((NULL)OR(x'')))AND(NULL)) AS INTEGER)); -- 0ms;
SELECT ((x'') NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c1)IS(rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c2)LIKE(rt0.c1))), (- ((vt0.c1 IN ()))), ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2))) ISNULL) FROM vt0;SELECT DISTINCT (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)) IN (CAST('-494066688' AS BLOB))) FROM rt0, vt0; -- 0ms;
SELECT ALL ((0.31653314742041727)LIKE(rt0.c1)) FROM vt0;SELECT ALL vt0.c2, (((((vt0.c0))!=((rt0.c1)))) BETWEEN (IFNULL(DISTINCT rt0.c1, 0.8718289961761708)) AND (((((vt0.c2)OR(vt0.c0)))OR(rt0.c1)))), CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 END COLLATE NOCASE FROM rt0, vt0 WHERE (CAST(0.9233911886402414 AS TEXT)) GROUP BY ((((rt0.c0)IS NOT(rt0.c1))) NOT BETWEEN ((~ (rt0.c2))) AND (((vt0.c2) NOTNULL))); -- 0ms;
SELECT (vt0.c0 IN ()) FROM rt0, vt0; -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN '768343937' WHEN vt0.c2 THEN rt0.c0 END)||(vt0.c1 COLLATE BINARY)), ((((rt0.c1)<(rt0.c2)))|(LOWER(DISTINCT rt0.c2))), ((((rt0.c0)>(vt0.c0)))>>(((NULL)LIKE(rt0.c1)))) FROM rt0, vt0 WHERE (((~ ('')) IN (STRFTIME(NULL, x'5551', NULL)))) GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT (~ (vt0.c0 COLLATE NOCASE)), SUM(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2))) FILTER(WHERE ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)OR(((0.09030326066536887)<(vt0.c0)))))AND((('1706570992') IS TRUE)))) OVER (), 2140296563, '', CAST(COUNT(*) AS TEXT) FROM vt0 WHERE (CAST(((x'388525dc')%(x'')) AS BLOB));SELECT ((vt0.c0)||(vt0.c2)) COLLATE NOCASE FROM rt0, vt0; -- 1ms;
SELECT ALL (((vt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((vt0.c1)LIKE(vt0.c0)), UNLIKELY(rt0.c0), rt0.c0 COLLATE RTRIM)) AND ((vt0.c0, vt0.c2, (((vt0.c0, 0.880772182528952, vt0.c2))>((rt0.c1, vt0.c1, rt0.c0)))))) FROM rt0 WHERE ((('韨BR?' COLLATE BINARY) NOT BETWEEN (CASE 'W*{fv!i'  WHEN 0.2182548066737423 THEN 4.13885832E8 END) AND (((('-1960017226')) NOT BETWEEN ((0X1e7d2d7)) AND ((x''))))));SELECT ALL (~ (vt0.c1 COLLATE RTRIM)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1))=((x''))) IN ()) FROM rt0 WHERE ((((((0.7125378178414283 IN ()))AND('-856716962')))OR('4o' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (rt0.c0 COLLATE NOCASE IN ()) FROM vt0 WHERE (CAST(CAST(-5.47131104E8 AS TEXT) AS BLOB)) GROUP BY CASE WHEN (vt0.c2 IN ()) THEN ((rt0.c2) NOT BETWEEN (vt0.c2) AND (rt0.c0)) WHEN LENGTH(vt0.c0) THEN ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN NULL THEN CAST(vt0.c0 AS BLOB) ELSE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)) END, (~ (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), ((((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))) NOTNULL) HAVING (- (rt0.c0)) ORDER BY rt0.c0, (NOT (CAST(vt0.c1 AS INTEGER))) ASC;SELECT DISTINCT ((rt0.c0 IN ()) IN ()) FROM vt0, rt0 WHERE ((((((((0.4411257293110217, 0x602db407, 0.8446072682577263))<>((x'', 0Xffffffffc1459cb0, NULL))))AND(CAST(1.151165516E9 AS REAL))))OR(((x'')IS(''))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1)>=('p<d2Dx⊧潞M')))) AND ((((rt0.c0)<(vt0.c1))))) ASC, (((((((vt0.c2)AND(0x2e4ac6e1)))OR(vt0.c1))))>=((((('', rt0.c1, rt0.c0)) BETWEEN ((vt0.c1, rt0.c2, vt0.c1)) AND ((x'', NULL, rt0.c1))))))  NULLS LAST; -- 0ms;
