-- Time: 2024/06/07 07:28:43
-- Database: database31
-- Database version: 3.40.0
-- seed value: 1406243131
PRAGMA cache_size = 50000; -- 13ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (''), (''), ('-1300480619'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0xffffffffb27c3d95 WHERE ((TRIM(DISTINCT vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS NUMERIC))); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=0.6660327555884137; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 683653074); -- 2ms;
PRAGMA legacy_file_format = true; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(' c', 0.11544735472838008); -- 7ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, detail=column); -- 2ms;
UPDATE OR IGNORE vt1 SET (c0)=(-565945608) WHERE ((HEX(vt1.c0)) BETWEEN (((vt1.c0)|(vt1.c0))) AND (vt1.c0 COLLATE RTRIM)); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-1509345051' WHERE ((((vt1.c0 COLLATE RTRIM)AND(((vt1.c0) NOT NULL))))OR(CAST(x'7f27' AS NUMERIC))); -- 0ms;
UPDATE vt1 SET c0=0X3f15c556 WHERE (NOT (((vt1.c0) NOT NULL))); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x''); -- 5ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 11ms;
REINDEX; -- 3ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('\r'); -- 5ms;
PRAGMA recursive_triggers = true; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (-5.65945608E8), (0.5276532352347919), (NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL), (NULL), (x''); -- 3ms;
PRAGMA cell_size_check = false; -- 0ms;
UPDATE OR FAIL vt0 SET c0=-1.509345051E9, c0=0Xffffffffa8729084 WHERE CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '794135135' END; -- 1ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0=0X3f15c556, c0=x'' WHERE CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))  WHEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, x'e8de')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)+(0xffffffffa8729084)) END; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '14529'); -- 0ms;
VACUUM main; -- 2ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 4ms;
PRAGMA temp.mmap_size; -- 0ms;
ANALYZE; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 BLOB  CHECK ( (+ (x'')))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=15'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1662552239); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA temp.auto_vacuum = NONE; -- 0ms;
PRAGMA journal_size_limit = 4050534581252566417; -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE vt1 SET c0=0xffffffffcdcdc739; -- 1ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -51075465);\n; -- 0ms;
UPDATE OR IGNORE t0 SET c0='1830326868' WHERE (+ (t0.c0)) COLLATE NOCASE; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (x''), (''), (NULL); -- 5ms;
UPDATE vt1 SET (c0, c0, c0)=('0.5276532352347919', NULL, 0X141f8c0c); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 7ms;
PRAGMA main.default_cache_size; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), ('-842152135'), (x''); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.11544735472838008), (0.3762930029938909), (0.8761453367708975); -- 2ms;
CREATE INDEX IF NOT EXISTS i26 ON t0(((((c0) ISNULL))OR(((((c0)AND(c0)))OR(c0))))); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=0xffffffffde445af8, c0=0.18859952311034034 WHERE x''; -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 1ms;
END; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(NULL) WHERE ((vt0.c0) NOT BETWEEN (((vt0.c0)==(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))); -- 0ms;
PRAGMA main.defer_foreign_keys = true; -- 2ms;
END; -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''), (x''), (0xfffffffffcf4a677); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE t0 SET c0=NULL WHERE CASE TYPEOF(DISTINCT -5.1075465E7)  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (t0.c0 IN (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND(x'')) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0)%(t0.c0)) THEN t0.c0 COLLATE NOCASE END; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 2ms;
UPDATE t0 SET c0=-1.509345051E9 WHERE CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS NUMERIC); -- 1ms;
VACUUM; -- 1ms;
UPDATE OR IGNORE vt0 SET c0='1058391382', c0=x''; -- 1ms;
ANALYZE sqlite_master; -- 2ms;
ANALYZE i26; -- 0ms;
PRAGMA short_column_names; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt1 SET c0=0.3762930029938909; -- 1ms;
DELETE FROM t0 WHERE (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND (((((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0)))))); -- 0ms;
CREATE INDEX i12 ON t0((((((c0)) BETWEEN ((c0)) AND ((c0)))) NOT NULL) ASC); -- 0ms;
PRAGMA mmap_size; -- 0ms;
UPDATE OR IGNORE t0 SET c0='AYR''G]詟<詟'; -- 0ms;
UPDATE vt0 SET c0='', c0=NULL, c0='0.5276532352347919' WHERE CAST(vt0.c0 AS TEXT) COLLATE NOCASE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1022626571 unordered'); -- 0ms;
COMMIT; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
CREATE INDEX IF NOT EXISTS i47 ON t0((- ((((c0, c0, c0)) NOT BETWEEN ((NULL, c0, c0)) AND ((c0, c0, c0))))) COLLATE NOCASE); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE vt0 SET c0='DP'; -- 1ms;
REINDEX i26; -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.8049261402688668); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (NULL); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA journal_mode; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (((LIKELY(t0.c0)))=((((vt0.c0)|(vt0.c0))))), LAST_VALUE(CASE ''  WHEN (- (vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)%('')) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 ELSE vt0.c0 END) OVER ( RANGE  CURRENT ROW), (((- (t0.c0)))>('1058391382')) FROM vt0 WHERE ((NOT (TYPEOF(x''))));SELECT ((vt0.c0 COLLATE BINARY) BETWEEN (vt1.c0) AND ((t0.c0 IN (t0.c0)))), (((~ (t0.c0)))>>(CASE vt1.c0  WHEN vt0.c0 THEN 0x5314192b WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)), (((((t0.c0, vt1.c0, t0.c0))=((vt1.c0, vt0.c0, vt1.c0))))-(COUNT(vt1.c0))) FROM t0 WHERE (NULL);SELECT DISTINCT ((vt1.c0)GLOB(t0.c0)) COLLATE RTRIM, t0.c0 COLLATE BINARY, 0.11544735472838008 FROM vt0;SELECT ALL (((vt0.c0 IN (t0.c0)))+((+ (vt1.c0)))) FROM vt0 WHERE (((((x'') IS FALSE))IS NOT(((x'') NOTNULL))));SELECT DISTINCT AVG(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))), vt0.c0, CASE ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))  WHEN vt1.c0 THEN (vt0.c0 IN (vt0.c0)) END FROM vt1, t0, vt0; -- 1ms;
SELECT ((((vt1.c0)>>(vt1.c0)))>=(vt0.c0)), ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)%(((((((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND('-51075465')))AND(NULL)))AND(t0.c0)))), (((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, 'I웳nn'))<=((t0.c0, t0.c0, vt0.c0, t0.c0, vt0.c0)))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt1.c0)AND(-1072873304)))) FROM vt1, t0, vt0; -- 0ms;
SELECT ((CAST(t0.c0 AS TEXT)) IS FALSE), TRIM(DISTINCT vt1.c0, CAST(t0.c0 AS INTEGER)), ((CASE WHEN t0.c0 THEN vt1.c0 END)>>((+ (t0.c0)))) FROM t0 WHERE (CAST((('\r ') NOTNULL) AS BLOB));SELECT (- (((NULL)LIKE(vt1.c0)))), x'ac3a', CAST(COUNT(*) AS TEXT) FROM t0, vt0, vt1; -- 0ms;
SELECT ALL vt1.c0 FROM vt0;SELECT DISTINCT SUM(((vt1.c0) BETWEEN (NULL) AND (vt0.c0))) OVER (), (((x'' IN (vt0.c0, vt1.c0))) IS TRUE), (('Fjk4	?') ISNULL) FROM vt1 WHERE ('^/');SELECT DISTINCT FIRST_VALUE(CASE CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '-1509345051' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((vt0.c0)+(t0.c0)) THEN vt0.c0 COLLATE NOCASE END) OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT json_quote((- (vt1.c0))) FROM vt0, vt1, t0 WHERE ((- (((NULL)LIKE(-8.42152135E8))))); -- 0ms;
SELECT (((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt1.c0) ISNULL))), LEAD((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()), ((((((vt1.c0)GLOB(vt1.c0)))AND(((vt0.c0) IS FALSE))))OR('AYR''G]詟<詟')), CASE (vt1.c0 IN ())  WHEN vt0.c0 THEN CAST(vt0.c0 AS TEXT) END) OVER (), GROUP_CONCAT(vt1.c0) OVER () FROM vt1, vt0 GROUP BY CASE WHEN vt0.c0 COLLATE NOCASE THEN '-921640458' WHEN CASE WHEN t0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END THEN (~ (t0.c0)) WHEN ((t0.c0)%(vt1.c0)) THEN HEX(t0.c0) END ORDER BY 0.48245722553599013 COLLATE BINARY ASC;SELECT ALL (vt0.c0 IN (vt0.c0 COLLATE NOCASE)) FROM vt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((vt1.c0) NOT NULL) FROM vt1, vt0; -- 0ms;
SELECT ALL AVG(x'') OVER (), ((vt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 END) AND (CAST(t0.c0 AS REAL))), (((vt0.c0 IN ()))+(CASE WHEN vt1.c0 THEN vt0.c0 END)) FROM vt0, vt1, t0; -- 0ms;
SELECT ALL SUM(rtreenode(vt1.c0, vt0.c0)) FROM vt0, vt1 GROUP BY ((((t0.c0)IS NOT(vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (vt0.c0)), '', t0.c0 HAVING AVG(vt0.c0);SELECT DISTINCT ((((vt1.c0)OR(vt0.c0)))IS NOT(((t0.c0) IS TRUE))) FROM vt1, vt0 WHERE (NULL) LIMIT -785041305;SELECT ALL DENSE_RANK() OVER () FROM vt0, vt1; -- 4ms;
SELECT DISTINCT NTILE(0.9723331135276689) OVER () FROM t0; -- 0ms;
SELECT '1058391382' FROM vt1, vt0 WHERE (((((((NULL)IS NOT('Go')))OR(CAST(0x3f15c556 AS REAL))))OR(((0.39587489826068833) NOT NULL)))) GROUP BY '1129542474', (+ (vt0.c0)) COLLATE BINARY, CAST((~ (vt0.c0)) AS INTEGER) HAVING ((x'') BETWEEN ((((vt0.c0, vt1.c0, vt1.c0))<((vt0.c0, vt1.c0, t0.c0)))) AND (COUNT(vt0.c0)));SELECT DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) COLLATE BINARY FROM vt1 LIMIT -565945608;SELECT DISTINCT NTH_VALUE(((x'f7d6')>(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR('1022626571')))OR(vt1.c0)))), (+ ((- (vt1.c0))))) OVER () FROM vt1 GROUP BY (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN ((vt0.c0 IN (vt0.c0)), (NULL IN ()))), (((((t0.c0, vt0.c0, 0.23336136859751355))<=((t0.c0, vt0.c0, vt0.c0))))>=(((((x'3a14')AND(vt1.c0)))OR(vt1.c0)))), NULL ORDER BY ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((t0.c0, vt1.c0, vt1.c0))))))OR((NOT (vt1.c0))))  NULLS FIRST, vt0.c0 DESC, ((((t0.c0)<>(vt0.c0))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND (vt1.c0));SELECT ALL ((TOTAL(t0.c0)) IS FALSE) FROM vt0 WHERE ((((0xffffffffed4fa5e5)>=(NULL)) IN ()));SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1, t0 GROUP BY (~ (CAST(t0.c0 AS TEXT))) HAVING (((((vt1.c0))<((t0.c0))))IS NOT(t0.c0)); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE BINARY) BETWEEN (('-785041305' IN ())) AND (CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)), SQLITE_VERSION(), FIRST_VALUE((((vt1.c0 IN (vt0.c0, vt0.c0, vt0.c0)))-(((vt0.c0) IS TRUE)))) OVER () FROM vt0, vt1;SELECT ALL ((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (t0.c0)) FROM t0;SELECT ((t0.c0)/((vt0.c0 IN ()))) FROM t0, vt0 WHERE (((((('1058391382'))<>(('QF#')))) NOT BETWEEN (((('D喹~1DJCJ}'))>=((NULL)))) AND ((x'7782a7d0' IN (x'd8c5'))))); -- 0ms;
SELECT DISTINCT (((vt1.c0) NOT NULL) IN ()) FROM vt0, vt1 WHERE (((((x'') IS FALSE)) BETWEEN (((0.5634052076739047) NOT BETWEEN (NULL) AND (-110074279))) AND ((((x'a6689bff', x'', -785041305))<=((0.28014015869554876, 46485285, '1129542474')))))); -- 0ms;
SELECT DISTINCT 1.058391382E9, FIRST_VALUE((((CAST(vt0.c0 AS TEXT)))<((((vt0.c0) ISNULL))))) OVER (), ((t0.c0)OR(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (((((NULL)IS(x'6d13')))<((((0.6660327555884137)) BETWEEN ((x'')) AND ((NULL))))));SELECT ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END)GLOB(MIN(t0.c0))) FROM vt1, vt0;SELECT DISTINCT (((vt1.c0)>=(t0.c0)) IN ()) FROM vt0, t0 ORDER BY '-CB	' ASC  NULLS FIRST LIMIT 2021531050 OFFSET -51075465; -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE ((((-767436610)OR(vt0.c0)))OR(-5.65945608E8))  WHEN ((t0.c0)>=(vt0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) WHEN CAST(t0.c0 AS REAL) THEN ((vt1.c0)-(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt1.c0))==((t0.c0, vt1.c0, vt0.c0))) THEN (~ (t0.c0)) ELSE (t0.c0 IN ()) END, CAST(vt1.c0 AS BLOB) COLLATE BINARY) OVER () FROM vt0, vt1, t0 WHERE (0.04299766939520144); -- 0ms;
SELECT IFNULL(DISTINCT vt1.c0 COLLATE RTRIM, (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) FROM vt0, t0 INDEXED BY i12 GROUP BY vt0.c0 HAVING NULLIF(json(vt1.c0), DATETIME('606990091', t0.c0, vt1.c0, vt1.c0, vt1.c0));SELECT DISTINCT GROUP_CONCAT((NOT (vt1.c0))) FROM vt1, t0, vt0 WHERE (CAST(x'' AS NUMERIC) COLLATE NOCASE) ORDER BY CASE WHEN (((t0.c0, t0.c0, t0.c0, t0.c0, NULL))==((vt1.c0, x'e19c', t0.c0, t0.c0, vt0.c0))) THEN t0.c0 ELSE SQLITE_COMPILEOPTION_GET(vt1.c0) END DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, t0, vt1 WHERE (0.32449878707542); -- 0ms;
SELECT ALL CAST(NULL AS REAL), PERCENT_RANK() OVER (), (('-110074279') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM t0, vt0, vt1 WHERE (((x'' COLLATE NOCASE)<<(((0.904417882642026) BETWEEN ('582173041') AND (''))))); -- 0ms;
SELECT DISTINCT x'3c58' FROM vt0 WHERE ((((('Xl1n')/(1e500))) BETWEEN (CAST(NULL AS NUMERIC)) AND (((((x'')OR(0.9117596432182197)))AND('0.23336136859751355'))))); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOTNULL) FROM t0, vt0, vt1; -- 0ms;
SELECT ALL '74907448', json_array_length(((t0.c0)%(vt0.c0)), ((vt1.c0)GLOB(vt1.c0))), ((vt0.c0 COLLATE BINARY) BETWEEN (-1.468886908E9) AND (COALESCE(-1142734373, vt0.c0))) FROM vt0, vt1, t0; -- 0ms;
SELECT DISTINCT SUM(((((((((t0.c0)AND(NULL)))AND(vt1.c0)))OR(t0.c0)))OR(vt1.c0))) OVER () FROM vt0, vt1;SELECT (((vt1.c0 IN ()))IS(vt0.c0 COLLATE NOCASE)) FROM t0, vt1 WHERE (((((((NULL)OR(NULL)))AND(-1072873304)))>=('EVzg5B]v' COLLATE RTRIM)));SELECT DISTINCT ((t0.c0 IN (vt0.c0, vt1.c0)) IN ()) FROM vt1, t0; -- 0ms;
SELECT DISTINCT CAST((vt1.c0 IN (t0.c0)) AS INTEGER) FROM vt1 WHERE (CASE WHEN (- (x'db03')) THEN ((NULL) NOT BETWEEN (NULL) AND ('297406164')) END);SELECT DISTINCT RTRIM((560021356 IN (vt0.c0, vt0.c0))) FROM t0 WHERE (CASE 0x592990fd  WHEN (NULL IN ()) THEN (~ (x'')) END);SELECT (- ((((t0.c0))<>((t0.c0))))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)=(t0.c0)))IS((('|i') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((((((((582173041)AND(NULL)))AND('0.11544735472838008')), (((('1438971449')AND(x'39795048')))OR(313493802)), ((NULL)!=('>\n\rr7L'))))<((((((((((x'')AND(0.32314169626927314)))OR('297406164')))AND(0.9723331135276689)))OR(x'')), (+ (0.3762930029938909)), (~ ('328568847')))))) ORDER BY ((vt1.c0 COLLATE BINARY)+((NOT (t0.c0)))) ASC;SELECT DISTINCT LEAD(HEX((~ (t0.c0))), (+ (((((vt0.c0)OR(t0.c0)))AND(t0.c0)))), (((((t0.c0)OR(t0.c0)))AND(vt1.c0)) IN ())) OVER () FROM t0, vt1, vt0; -- 0ms;
SELECT TOTAL(((vt1.c0)<>(vt0.c0))), HEX(''''), NTILE(((CAST(t0.c0 AS INTEGER)) IS FALSE)) OVER () FROM vt1, vt0, t0;SELECT DISTINCT MAX(((t0.c0)*(vt0.c0))) FROM t0, vt1, vt0 WHERE (CASE WHEN (('1674909503')IS NOT('\r')) THEN CAST(NULL AS BLOB) ELSE ((1.674909503E9)AND(x'')) END); -- 0ms;
SELECT CASE ((vt0.c0) IS FALSE)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.5988063205285471)) THEN (~ (vt1.c0)) WHEN (((0.1582664211676651, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c0))) THEN vt1.c0 WHEN (- (vt0.c0)) THEN -1.750575687E9 END, ((((((t0.c0)AND(vt0.c0)))AND(t0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))), (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) IN (CAST(vt0.c0 AS INTEGER))) FROM vt1;SELECT DISTINCT AVG(x'b88895ab') FROM vt0; -- 0ms;
SELECT ALL SUM(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))) OVER (), CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), vt1.c0 FROM vt0, vt1 WHERE (json_extract(TYPEOF(NULL), (- (x'')), '|Z' COLLATE RTRIM, '1637027710' COLLATE NOCASE));SELECT DISTINCT COUNT((- (vt0.c0))), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) BETWEEN (t0.c0) AND (((vt0.c0) NOT NULL))), t0.c0, vt1.c0, (((~ (t0.c0)))|(((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0)))), (- ((t0.c0 IN ()))), ((((0X710bf3ca)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM FROM t0;SELECT DISTINCT vt1.c0 FROM vt1, t0, vt0 WHERE (((MIN('', x'')) NOT BETWEEN ((NOT (NULL))) AND ((-1268485087 IN ())))); -- 0ms;
SELECT DISTINCT COUNT(SUM(CAST(t0.c0 AS REAL))) FROM vt0, vt1, t0 WHERE (((('0.6660327555884137', x'80bd', '1V')) NOT BETWEEN ((((NULL)+(-921640458)), (x'' IN (x'')), ((NULL) ISNULL))) AND (((('1830326868')*('1058391382')), LIKE(NULL, 0.4505752648435094, '\r'), 0Xffffffffc3ca5f21))));SELECT DISTINCT t0.c0 COLLATE RTRIM FROM vt1, vt0, t0 ORDER BY (vt1.c0 IN ())  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt1.c0 IN (t0.c0)), CAST(vt0.c0 AS BLOB), ((vt1.c0) IS FALSE))) AND ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END, ((((t0.c0)OR(0.6560731559024332)))AND(vt1.c0)), t0.c0 COLLATE NOCASE))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c0)) NOTNULL) FROM vt0, t0 GROUP BY ((LIKELIHOOD(vt1.c0, 0.41011712142519585))*(NULL)), LIKELIHOOD(DISTINCT '-1468886908', 0.8977976229870485), (+ ((t0.c0 IN (t0.c0)))) HAVING CASE '-1300480619'  WHEN ((vt1.c0)|(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN (((vt1.c0))==((vt0.c0))) THEN HEX(vt1.c0) WHEN '337611788' THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.6960472520871636)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END END;SELECT ((CAST(vt1.c0 AS NUMERIC))>((((vt0.c0))==((t0.c0))))), ROW_NUMBER() OVER (), ((((('560021356')OR(vt0.c0)))OR(t0.c0)) IN ((t0.c0 IN ()))) FROM vt0 WHERE (LTRIM(((((((((0xffffffff9c1bd8b9)OR('625183208')))OR(-1160665660)))OR(0.4468699729260124)))OR(x'')), ((0X61930f7e)-(x''))));SELECT DISTINCT (((t0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt1.c0, t0.c0))) COLLATE BINARY FROM vt1, t0, vt0; -- 0ms;
SELECT ((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END) BETWEEN ((vt1.c0 IN (t0.c0, t0.c0))) AND (COUNT(vt1.c0))) FROM t0, vt0, vt1 WHERE ((NOT (NULL)) COLLATE RTRIM); -- 0ms;
SELECT CASE CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 END  WHEN ((vt0.c0)<=(vt1.c0)) THEN ((NULL)IS NOT(vt1.c0)) ELSE (+ (t0.c0)) END FROM vt1;SELECT ALL TYPEOF(MIN(vt0.c0)) FROM t0;SELECT ALL NTH_VALUE(NULL, ((CASE WHEN t0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((vt0.c0 IN ())))) OVER (), NULL, ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt0, t0 WHERE ((((('-1') NOTNULL))==((0.4505752648435094 IN (x'2f530ba9', '1674909503'))))); -- 0ms;
SELECT DISTINCT t0.c0, vt0.c0, SUM(CAST(0.30898189854465274 AS TEXT)) FROM vt1, vt0;SELECT ALL t0.c0, ((vt0.c0 COLLATE NOCASE)&(t0.c0)), ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0))=((t0.c0, t0.c0, vt0.c0, vt1.c0, t0.c0)))) AND (CAST(t0.c0 AS TEXT))) FROM vt0;SELECT ALL (((json_type(vt0.c0), PRINTF('wn'), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))<>((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt0.c0 END, (vt1.c0 IN ()), ((vt0.c0) NOT NULL)))), ABS(((NULL) NOTNULL)), ((NULL)IS(((vt0.c0)%(vt0.c0)))) FROM vt0, t0, vt1 INDEXED BY i26 WHERE (((((((((((((json_quote(x''))OR(((NULL) ISNULL))))AND((('-1741345450')IS(0.616199915970183)))))AND((NOT (x'')))))OR((('1586892165') NOT BETWEEN (x'') AND (0.34587509536279115)))))OR(((('RPnR', 0.04299766939520144, 0.8986590090722693))=(('켽Es\3D', 'X1釸WꎥrU( ', '1360580413'))))))AND(UPPER(DISTINCT NULL))));SELECT DISTINCT (((((+ (vt1.c0)))OR(((x'2d873a6a')%(x'')))))OR((vt0.c0 IN ()))) FROM vt1, vt0, t0 WHERE (((((LTRIM(0.6960472520871636))OR((('!*')<=(-1.7976931348623157E308)))))AND(((x'')=(0.15157573063670848))))); -- 0ms;
SELECT COUNT(*) OVER (), ((x'')*(vt0.c0)) COLLATE BINARY, ((((vt0.c0) NOT BETWEEN (t0.c0) AND ('')))GLOB(IFNULL(vt0.c0, t0.c0))), vt0.c0, ((((vt0.c0 COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt0.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) FROM vt0 WHERE (((((((((((0X3f7dd519)AND(0.013800049801215297)))AND(0X66a8cbeb)))OR(0.489922822492026)))OR('azCIJ')))<((NULL IN ()))));SELECT DISTINCT CAST(((vt1.c0)LIKE(t0.c0)) AS TEXT) FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, (((vt1.c0, vt1.c0, vt0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((TYPEOF(vt0.c0), load_extension(t0.c0), ((vt0.c0)/(t0.c0)), ((t0.c0) BETWEEN (vt0.c0) AND ('1317161164')), 0.025804947852237525)) AND ((0Xffffffffc301a13d, ((((t0.c0)AND('2125123904')))OR(t0.c0)), IFNULL(vt1.c0, t0.c0), CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c0 END, ''))) HAVING ((((vt1.c0) NOT NULL)) NOT NULL); -- 0ms;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (CASE ((NULL)>>(0.32449878707542))  WHEN LENGTH(-3.13547291E8) THEN 0.8157607737366172 COLLATE NOCASE WHEN ((('-313547291')) NOT BETWEEN (('')) AND ((-51075465))) THEN ((0.2418033211660039)IS('1722338283')) WHEN CASE 'Bh?cRn쒇'  WHEN x'607a' THEN 0x13ec3b94 WHEN '26314443' THEN '0.30898189854465274' WHEN 1697346363 THEN x'' WHEN NULL THEN -9.21640458E8 WHEN '' THEN '-313547291' ELSE '-1741345450' END THEN ((((0.3006489971139684)OR('0.34587509536279115')))AND(0.3547781415503283)) WHEN (- (1637027710)) THEN (- (0.7195245200322582)) WHEN ((0.04210866402280189) NOT BETWEEN (x'') AND ('0.7195245200322582')) THEN '' COLLATE NOCASE ELSE CASE WHEN 0.025804947852237525 THEN 0.012045062488042046 END END); -- 0ms;
SELECT HEX(((((t0.c0)OR(t0.c0)))AND(vt1.c0))) FROM vt1 WHERE ((~ (((NULL)LIKE('629420958')))));SELECT GLOB(vt0.c0, vt1.c0) COLLATE NOCASE FROM vt1 WHERE (NULL);SELECT DISTINCT ((((vt1.c0)&(vt0.c0))) NOTNULL) FROM t0 WHERE (((CAST(-1288813122 AS BLOB))||(((('bj', '1347470471', -1702826022))=((x'', 0.5152965020217574, -1627289473))))));SELECT ALL RTRIM((((vt1.c0, vt1.c0, t0.c0))<((vt0.c0, vt1.c0, t0.c0)))) FROM t0;SELECT DISTINCT ((CAST(vt1.c0 AS BLOB))-((('NCm+iY#+')>(t0.c0)))) FROM vt0;SELECT t0.c0 COLLATE RTRIM FROM vt1;SELECT DISTINCT LAST_VALUE((- (t0.c0)) COLLATE RTRIM) OVER (), GROUP_CONCAT(vt1.c0), vt1.c0, ((((vt1.c0)LIKE(vt0.c0))) BETWEEN (IFNULL(t0.c0, vt1.c0)) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))), COUNT(*) FROM t0 WHERE (((((((('0.32314169626927314')) NOT BETWEEN (('-51075465')) AND ((x'2b70'))))AND('1360580413')))OR(x'')));SELECT DISTINCT TOTAL(SQLITE_COMPILEOPTION_USED(NULL)) FROM vt1, vt0, t0 LIMIT 528986167 OFFSET -1509345051; -- 0ms;
SELECT DISTINCT (+ (vt0.c0)) FROM vt1 WHERE (((0.3232994066955197 COLLATE NOCASE) NOT BETWEEN (((x'') IS FALSE)) AND (CASE WHEN x'c302' THEN x'' WHEN ' /' THEN NULL WHEN 0xffffffffcdcdc739 THEN 0x2937f38c END)));SELECT DISTINCT CAST('' AS BLOB) FROM vt0, vt1, t0 WHERE (((((((((CAST('74907448' AS INTEGER))OR(x'')))OR(NULL COLLATE BINARY)))AND('#G')))AND(0.5917528969749031))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((+ ('-1e500'))) NOT BETWEEN (((((((((NULL)AND(NULL)))AND(NULL)))AND(NULL)))OR(0.8226518625914621))) AND ('0.5152965020217574' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((((t0.c0)AND(vt1.c0)))OR(vt1.c0))) BETWEEN (0X242def0b) AND (SQLITE_COMPILEOPTION_USED(vt0.c0))), ((vt0.c0 IN (0.9847674994399468)) IN ()), ((vt0.c0 COLLATE NOCASE)<=(CAST(vt1.c0 AS TEXT))) FROM vt0, vt1;SELECT ALL (- ((('')<>(vt1.c0)))) FROM vt0, t0;SELECT ALL (((((~ (vt1.c0)))AND(AVG(vt1.c0))))OR(((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))) FROM vt0, vt1, t0 GROUP BY (((t0.c0)*(vt1.c0)) IN ()) HAVING ((TOTAL_CHANGES())>>(((vt1.c0)-(vt1.c0)))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0 COLLATE BINARY))) FROM vt1;SELECT DISTINCT vt0.c0 FROM vt0, t0, vt1 WHERE (CASE WHEN x'' THEN 0.6546945580858873 END COLLATE BINARY); -- 1ms;
SELECT DISTINCT (+ ((vt0.c0 IN ()))) FROM t0, vt1, vt0 WHERE (((((2.125123904E9) ISNULL))==(CAST(-5.65945608E8 AS BLOB)))) GROUP BY 0.5152965020217574, '0.48245722553599013', (+ (TRIM(DISTINCT t0.c0, vt1.c0))) HAVING TOTAL(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))); -- 0ms;
SELECT ((6.29420958E8)&(t0.c0)) COLLATE RTRIM, ((COUNT(*))<=(x'')), (((- (t0.c0))) NOT BETWEEN (x'') AND (t0.c0 COLLATE RTRIM)) FROM vt0, vt1 WHERE ((- (((('490208595', NULL, NULL))>=((0.5402369029221873, 0x1b33da8a, x'eed0'))))));SELECT DISTINCT ((TYPEOF(t0.c0))>=(t0.c0 COLLATE BINARY)), INSTR(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END, CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 END), (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ()) FROM vt0;SELECT AVG((- (vt1.c0))) FROM t0, vt1 ORDER BY ((((((((((((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)))AND(LOWER(DISTINCT vt1.c0))))OR(CAST(t0.c0 AS BLOB))))OR(CASE WHEN vt0.c0 THEN vt1.c0 END)))AND(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))OR(((vt0.c0) IS TRUE))) ASC;SELECT DISTINCT (((t0.c0)) BETWEEN ((0.32449878707542)) AND ((((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))), t0.c0, SUM(vt0.c0) OVER () FROM vt0, t0, vt1 UNION ALL SELECT DISTINCT (((((vt0.c0, t0.c0, vt0.c0, vt1.c0, '313493802'))>=((x'', vt1.c0, t0.c0, vt0.c0, t0.c0))))>=(((vt1.c0)!=(vt1.c0)))), 0.6320309318055478, (((vt1.c0) IS TRUE) IN ()) FROM vt0;SELECT DISTINCT (((vt0.c0)) BETWEEN ((AVG(t0.c0))) AND ((vt1.c0))), (((((((('')AND((vt1.c0 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND(((vt0.c0) ISNULL))), CAST(x'' AS REAL), CASE WHEN vt1.c0 COLLATE RTRIM THEN NULLIF(vt1.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN HEX(vt0.c0) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END END, CAST(((t0.c0)-(vt0.c0)) AS BLOB) FROM vt0, vt1 WHERE (((CASE NULL  WHEN -1.675896647E9 THEN 0X76343b82 END) ISNULL)) ORDER BY ((vt1.c0)|(vt1.c0)) COLLATE NOCASE ASC;SELECT DISTINCT LOWER(DISTINCT vt0.c0), CASE (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((t0.c0, x'', t0.c0)))  WHEN ((t0.c0)&(vt0.c0)) THEN vt1.c0 COLLATE NOCASE END, ((vt1.c0 COLLATE NOCASE)<>(((vt1.c0) IS TRUE))) FROM vt0;SELECT DISTINCT COUNT(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))), ((((((vt1.c0)IS(vt1.c0)))OR(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(((vt1.c0)-(vt1.c0)))), (((~ (vt0.c0)))/(vt0.c0 COLLATE BINARY)) FROM t0, vt0;SELECT (((((NULL)<>(t0.c0))))>((((vt0.c0) IS TRUE)))) FROM t0 INDEXED BY i26;SELECT ALL '_' FROM vt0 WHERE (CASE ((0.37603903682158957) BETWEEN (0.20838959006441682) AND (0.5402369029221873))  WHEN (('v\뾃T_U*dB')<>(-1.468886908E9)) THEN ((0.34587509536279115)<=(0.9790943932553035)) ELSE ((1105851970)>>('-51075465')) END); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) IS TRUE) FROM t0, vt1, vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM) BETWEEN (ABS('')) AND (UPPER(vt0.c0))) FROM vt0, t0 WHERE ((0.7346364000520491 IN ())); -- 0ms;
SELECT DISTINCT ((((t0.c0)LIKE(vt0.c0)))OR(CAST(t0.c0 AS TEXT))) FROM vt1, t0;SELECT ALL (((GLOB(x'2f76', t0.c0)))>((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) FROM t0, vt0, vt1 LIMIT -767436610 OFFSET -1288813122; -- 0ms;
SELECT DISTINCT t0.c0 FROM vt1 NATURAL JOIN t0 WHERE ((0.9847674994399468 IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN (((vt0.c0 IN (t0.c0)))) AND ((((vt1.c0)AND(vt0.c0))))) FROM t0, vt1 WHERE ((((0.9222447699448948)) NOT BETWEEN (((('-1256210615')>>('1393826091')))) AND ((((((x'')OR('')))OR(0.3317368725211599))))));SELECT DISTINCT CASE WHEN t0.c0 COLLATE RTRIM THEN CAST(vt1.c0 AS TEXT) ELSE (('106885642')*(t0.c0)) END FROM vt1, vt0, t0; -- 0ms;
SELECT CAST(CAST(t0.c0 AS REAL) AS REAL) FROM vt0, t0 ORDER BY ((CASE WHEN '' THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS LAST;SELECT LAG(CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS BLOB), CAST(CAST(vt1.c0 AS REAL) AS REAL), CAST(vt1.c0 COLLATE NOCASE AS INTEGER)) OVER () FROM vt1 INDEXED BY i26;SELECT CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c0))) END FROM vt0, vt1, t0 WHERE (CAST(CAST(-297792612 AS INTEGER) AS NUMERIC)); -- 0ms;
SELECT ALL CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY FROM t0, vt0;SELECT DISTINCT NULLIF((vt1.c0 IN ()), vt0.c0 COLLATE BINARY) FROM t0, vt1 INDEXED BY i47, vt0 WHERE ((((('') NOTNULL)) BETWEEN (((x'')<>(NULL))) AND ((('1317161164') BETWEEN ('-1582235057') AND ('-36675975')))));SELECT ((STRFTIME(vt0.c0, t0.c0, vt0.c0)) BETWEEN (((NULL)&(t0.c0))) AND (((t0.c0)<>(t0.c0)))) FROM vt0, vt1, t0 WHERE ((((((x'') BETWEEN ('-842152135') AND (-1675896647))))<>((1648246261 COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT LAG(((t0.c0) BETWEEN (((vt0.c0)*(vt0.c0))) AND ((t0.c0 IN ()))), ((LIKELY(t0.c0)) NOTNULL), ABS(DISTINCT (- (vt0.c0)))) OVER ( RANGE (~ (((vt0.c0) BETWEEN (vt0.c0) AND ('0.8049261402688668')))) PRECEDING EXCLUDE GROUP) FROM t0, vt0 WHERE ((~ ((- (0.8049261402688668))))) LIMIT -1517377538 OFFSET 1887245235;SELECT DISTINCT CASE vt1.c0  WHEN MAX(vt1.c0) THEN t0.c0 END FROM vt0 FULL OUTER JOIN t0 ON NULL WHERE ((((((1019879070)AND(NULL)), STRFTIME(5162739.0, 0.4554801834608744, 294884594), ((0.7804497773068475)GLOB('1595592991'))))>((IFNULL('-1160665660', x'adcf'), ('pn' IN ()), x'' COLLATE NOCASE))));SELECT ALL CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((vt1.c0)||(vt0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (~ (vt1.c0)) ELSE CAST(t0.c0 AS REAL) END FROM vt0 NOT INDEXED, t0, vt1 WHERE ((~ (TRIM(DISTINCT NULL)))); -- 0ms;
SELECT (((((+ (t0.c0)))AND(t0.c0)))AND((((vt1.c0, x'', vt0.c0)) NOT BETWEEN (('-2031608561', vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))) FROM vt1;SELECT DISTINCT (((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(vt1.c0)))AND(vt0.c0)), ABS(vt1.c0), CAST(t0.c0 AS NUMERIC)))<=((SUM(vt0.c0), CAST(vt1.c0 AS BLOB), ((vt1.c0)>=(NULL))))) FROM vt1 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT NULL)  NULLS LAST;SELECT ((vt0.c0)>=(vt1.c0)) COLLATE NOCASE FROM t0;SELECT AVG((t0.c0 IN (t0.c0))) OVER () FROM t0, vt1 WHERE ((~ (CASE x'4065'  WHEN '540798919' THEN 0.4309496764434816 WHEN x'' THEN x'5f2b' WHEN 'GKnR~k蟤' THEN 0.35042880442704105 ELSE '\e３8*9j' END))) ORDER BY vt0.c0 ASC;SELECT (((((((((((1861535080)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))AND(((vt1.c0)>=(vt1.c0)))))OR(vt0.c0)))AND(((t0.c0)GLOB(vt0.c0)))))OR('')) FROM vt1, t0 WHERE ((('1912903010') BETWEEN ('-1517377538') AND (-7.46396656E8)) COLLATE RTRIM);SELECT TOTAL(((vt1.c0) IS FALSE)) OVER () FROM t0 WHERE ((~ (((NULL)%(0.4468699729260124)))));SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) NOT BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt1, vt0, t0 WHERE (((((x'') IS TRUE)) ISNULL)); -- 0ms;
SELECT DISTINCT (+ (COUNT(vt0.c0))) FROM vt1, vt0, t0 WHERE (0.2786741837436383); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN (COUNT(*), MIN(vt0.c0))) FROM vt0, vt1, t0 WHERE (((((((x'') NOT BETWEEN ('#') AND (x'')))AND(((((x'')OR(x'')))AND('ncm+iy#+')))))AND(((NULL)-(x'4e30'))))) GROUP BY ((((vt1.c0)<<(t0.c0))) NOT NULL); -- 0ms;
SELECT DISTINCT MIN((((t0.c0))!=((t0.c0)))), '', (~ (MIN(t0.c0))) FROM vt1, t0, vt0; -- 0ms;
SELECT ALL ((t0.c0 IN (vt0.c0, vt0.c0)) IN ()), (('Ief5' COLLATE NOCASE) IS TRUE), (+ (((vt0.c0)|(vt0.c0)))) FROM vt0 WHERE ((((NULL))==((NULL))) COLLATE RTRIM); -- 1ms;
SELECT ALL (vt0.c0 IN ()) COLLATE NOCASE FROM t0, vt0, vt1 WHERE (CASE WHEN (~ (0.1449151097632254)) THEN (604277529 IN ()) WHEN COALESCE(NULL, 0.5142158241902092) THEN x'' WHEN ('|?|ByJtR.' IN ()) THEN 0x19186cb COLLATE RTRIM ELSE ((((((((NULL)OR(x'')))OR(x'')))OR(NULL)))AND(x'')) END); -- 0ms;
SELECT DISTINCT vt0.c0, AVG(TIME(vt1.c0, t0.c0, vt1.c0, t0.c0, vt1.c0)) OVER ( RANGE  UNBOUNDED PRECEDING), ((((vt1.c0 COLLATE RTRIM)OR((~ (0.3568399841710207)))))OR((+ (t0.c0)))) FROM vt1, t0, vt0; -- 0ms;
SELECT NULL, ((((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0)))GLOB(SUM(vt0.c0))), ((t0.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)<=(t0.c0))) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt1, t0, vt0 WHERE (((((0.4991472962564538) NOT BETWEEN ('-720359404') AND (''))) BETWEEN (0.6158399987883685) AND ((~ ('Y+aA῁z( 鉔'))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 GROUP BY ((((((vt1.c0)AND(t0.c0)))OR(t0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))) HAVING CASE ((((((((((((vt0.c0)AND(t0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(NULL)))AND(t0.c0)))OR(t0.c0))  WHEN vt1.c0 COLLATE NOCASE THEN t0.c0 COLLATE BINARY ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END LIMIT 1458179569 OFFSET -833444955;SELECT DISTINCT HEX(DISTINCT t0.c0 COLLATE NOCASE) FROM t0, vt0, vt1; -- 0ms;
SELECT MIN(vt1.c0) FROM t0, vt1 WHERE ((+ ('䅯}iY9| 5f' COLLATE NOCASE))); -- 0ms;
SELECT ALL ((t0.c0 COLLATE BINARY)<(((((((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))) FROM vt1, vt0, t0; -- 4ms;
SELECT CASE SUM(vt0.c0)  WHEN (~ (vt0.c0)) THEN MIN(vt1.c0) END, LTRIM(NULL COLLATE NOCASE, vt0.c0 COLLATE BINARY), t0.c0 FROM t0, vt1, vt0 LIMIT -1544615179; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY FROM vt1 WHERE ((((x'' IN (x''))) BETWEEN (CASE WHEN x'3ee7' THEN 'J}' ELSE 0xffffffffa60938e5 END) AND (CAST('p8~7' AS INTEGER))));SELECT DISTINCT ((vt0.c0) NOT NULL), ((((vt0.c0 COLLATE RTRIM)AND((t0.c0 IN (t0.c0)))))AND(1.7976931348623157E308)), ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0)))) FROM vt1, t0;SELECT DISTINCT ((((0.37603903682158957)OR((NOT (vt1.c0)))))OR(COUNT(*))) FROM t0 WHERE ((UPPER(0.7346364000520491) IN ()));SELECT DISTINCT ((t0.c0)<=(vt1.c0)) COLLATE NOCASE FROM vt0, vt1;SELECT ALL x'' FROM vt1 WHERE (CASE ((NULL) NOT BETWEEN ('5B') AND (NULL))  WHEN IFNULL(NULL, '') THEN CAST(x'' AS TEXT) ELSE CASE 0Xffffffff98352d56  WHEN 0.025472122530940777 THEN '-36675975' END END); -- 1ms;
SELECT ALL CAST(((vt0.c0)-(t0.c0)) AS INTEGER), (CASE WHEN vt0.c0 THEN t0.c0 END IN ()), 0x3abe5218 FROM vt1 INDEXED BY i47, t0, vt0 NOT INDEXED WHERE (((json_object(NULL, '')) NOTNULL)) LIMIT 334248852;SELECT DISTINCT TOTAL(((t0.c0)>>(vt0.c0))) FROM vt1, vt0;SELECT ALL CAST((~ (vt1.c0)) AS BLOB), 0.9873220190054145, SUM(CASE WHEN t0.c0 THEN vt1.c0 END) OVER () FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) IS TRUE) FROM t0, vt0;SELECT (((((t0.c0)<>(x'0b29')), ((('䃋/W[晙'))!=((t0.c0))), ((vt0.c0)LIKE(vt0.c0))))>((((vt1.c0)|(vt0.c0)), (((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((((t0.c0)AND(t0.c0)))AND(vt1.c0))))) FROM vt0, t0, vt1; -- 0ms;
SELECT ALL ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))LIKE((~ (t0.c0)))) FROM vt1, vt0, t0; -- 1ms;
SELECT DISTINCT LOWER(DISTINCT vt1.c0) FROM vt0 WHERE (((CASE '1887245235'  WHEN x'f514' THEN '-814371303' ELSE 0x652b733b END)AND((((NULL, NULL, NULL, -1.675896647E9, 0.38819764548655356)) BETWEEN (('285095525', NULL, NULL, NULL, NULL)) AND (('-842152135', '', NULL, x'', -1.142734373E9))))));SELECT ALL ((CAST(vt0.c0 AS INTEGER))<(json_patch(vt1.c0, vt0.c0))), ((((vt1.c0)AND(t0.c0)))AND(vt0.c0)) COLLATE NOCASE, ((((vt1.c0)||(vt0.c0)))<>((t0.c0 IN (vt1.c0)))) FROM vt1 WHERE (((0x58038182 COLLATE NOCASE)IS((~ ('1984274203'))))) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN vt1.c0 END THEN (((vt0.c0))<((vt1.c0))) END  NULLS FIRST;SELECT CASE WHEN UNLIKELY(t0.c0) THEN ((vt1.c0)*(vt0.c0)) ELSE t0.c0 COLLATE NOCASE END FROM vt1 WHERE ((((x'')) NOT BETWEEN ((0.5929504189037802)) AND ((NULL))) COLLATE NOCASE) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)==(t0.c0)) ASC  NULLS FIRST, ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(CAST(x'' AS REAL)))  NULLS LAST;SELECT DISTINCT RANK() OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM vt0 WHERE ((((0.7565720726395515 IN (0.24938972159642403)))>=((- (''))))) GROUP BY ((vt0.c0 COLLATE RTRIM)*(1674909503 COLLATE NOCASE)), (vt1.c0 IN ()) COLLATE NOCASE, ((((((((LOWER(DISTINCT vt0.c0))OR(CAST(vt1.c0 AS NUMERIC))))OR((NOT (vt0.c0)))))OR(t0.c0)))OR(CAST(vt1.c0 AS TEXT))) HAVING ((CAST(x'' AS BLOB))=(CASE WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END));SELECT DISTINCT (t0.c0 IN ()) FROM vt1, vt0 GROUP BY (((NOT (vt1.c0))) NOT BETWEEN ('') AND (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) HAVING (((((((((((((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))OR(PRINTF(t0.c0, vt1.c0, t0.c0))))AND(((t0.c0)==(t0.c0)))))OR(t0.c0)))AND(((vt0.c0)/(t0.c0)))))AND(t0.c0 COLLATE BINARY)))OR(((t0.c0)<(t0.c0))));SELECT ALL TOTAL(('490208595' IN ())) OVER () FROM t0, vt0, vt1 WHERE (CAST(CASE WHEN x'' THEN x'' WHEN x'' THEN NULL WHEN NULL THEN x'34ee' ELSE NULL END AS NUMERIC)) ORDER BY ((((- (t0.c0))))<((((6.084806294868184E-4)%(vt0.c0))))); -- 2ms;
SELECT ALL TOTAL(((((vt0.c0)AND(vt1.c0)))AND(t0.c0))) FROM vt0, t0;SELECT ALL AVG(t0.c0) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOTNULL) FROM t0 WHERE ((~ ((- ('b882si還s'))))) INTERSECT SELECT ((HEX(vt1.c0)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((~ (t0.c0)))) FROM vt1, vt0, t0;SELECT DISTINCT ((vt0.c0) ISNULL) COLLATE NOCASE, (- (vt1.c0 COLLATE NOCASE)), CAST(((((((((t0.c0)OR(0.05505260897123909)))AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)) AS TEXT) FROM t0, vt1 NOT INDEXED, vt0; -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (x'fb95') AND (t0.c0))) NOT BETWEEN (NULL) AND ((vt1.c0 IN (0.8569801768035042)))), t0.c0, (((vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS TEXT)))) FROM t0, vt1 WHERE (x'') UNION ALL SELECT DISTINCT (((t0.c0)>=(t0.c0)) IN (((vt1.c0) IS TRUE))), ((NOT (vt1.c0)) IN ()), x'' FROM vt0, vt1;SELECT DISTINCT (((t0.c0, vt0.c0, vt1.c0)) NOT BETWEEN (((t0.c0 IN ()), ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)), json_remove(vt0.c0, vt1.c0))) AND ((1446349005 COLLATE BINARY, (~ (vt0.c0)), ''))) FROM vt0 WHERE ((((('-1010147551') BETWEEN (NULL) AND (''))) BETWEEN ((((NULL)) NOT BETWEEN ((NULL)) AND (('328568847')))) AND (x'c7a9cdae'))) LIMIT -510596963;SELECT ALL (RTRIM(t0.c0) IN ()) FROM t0, vt0; -- 0ms;
SELECT UPPER(((vt1.c0)<(vt1.c0))) FROM t0, vt1 WHERE ('0.5929504189037802') UNION ALL SELECT DISTINCT ((((vt0.c0)/(vt1.c0)))/((((NULL)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) FROM t0, vt1 WHERE (CASE (('528986167') BETWEEN (0.8049261402688668) AND (x''))  WHEN CASE '1388410002'  WHEN x'' THEN x'0a00' ELSE 0.34540934993894834 END THEN x'' END);SELECT (((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)) IN (CAST('0.616199915970183' AS REAL), CASE WHEN vt0.c0 THEN t0.c0 END)) FROM t0, vt1;SELECT (vt0.c0 COLLATE RTRIM IN ()), ((vt1.c0 COLLATE RTRIM)/((+ (vt0.c0)))), (~ ((NOT (vt1.c0)))) FROM t0;SELECT DISTINCT COUNT((('-1779430375') NOT BETWEEN (t0.c0) AND (vt0.c0))) OVER () FROM t0, vt1, vt0 WHERE ((- (CASE NULL  WHEN NULL THEN -1.750575687E9 ELSE x'' END))) ORDER BY (((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((t0.c0, vt1.c0, vt0.c0))))!=(CAST(t0.c0 AS BLOB)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT '-1519798739' FROM vt0 WHERE (LIKELY(((NULL) NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
SELECT DISTINCT (NOT (vt1.c0 COLLATE BINARY)), (((+ (t0.c0)))OR(((vt0.c0) NOT NULL))), COUNT(((vt1.c0)IS NOT(t0.c0)) COLLATE RTRIM) FROM vt1;SELECT ((t0.c0)*(vt1.c0)) COLLATE NOCASE COLLATE BINARY FROM t0, vt1 LIMIT -223870992; -- 0ms;
SELECT DISTINCT ((x'') IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT ((SUM(vt0.c0))<(CAST(t0.c0 AS BLOB))), CAST(vt0.c0 COLLATE BINARY AS TEXT), ((((((vt0.c0)<=(t0.c0)))OR(((vt1.c0)IS(t0.c0)))))OR(SUM(vt1.c0))) FROM t0;SELECT ALL ((((((((((vt1.c0)OR(vt1.c0)))AND('N+5F争Ag')))OR((((vt0.c0, vt1.c0, t0.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, ''))))))AND(GROUP_CONCAT(vt0.c0))))OR(((t0.c0)LIKE(vt1.c0)))), CAST(((vt1.c0) NOTNULL) AS REAL), (((((vt0.c0 IN ()))AND(t0.c0 COLLATE BINARY)))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt1, t0 WHERE (((((NULL COLLATE RTRIM)OR('-2124860733')))AND(((((0X141f8c0c)OR(829515900)))AND('6G'))))) LIMIT 26314443;SELECT ALL ((MAX(t0.c0))<((vt1.c0 IN ()))) FROM vt1 WHERE ((((('LM') IS FALSE))GLOB((+ (x'')))));SELECT ALL CAST(COUNT(*) AS TEXT) FROM vt0, vt1; -- 0ms;
SELECT ALL ((COUNT(*))OR(CAST(vt0.c0 AS INTEGER))) FROM vt1, vt0; -- 0ms;
SELECT ALL ((0.4309496764434816) IS TRUE), vt1.c0, (+ (DATE(t0.c0, vt1.c0, vt0.c0))) FROM vt1, t0, vt0 WHERE (((((x'')<=('1019879070'))) ISNULL)); -- 0ms;
SELECT DISTINCT (((+ (vt0.c0)))&(RTRIM(t0.c0))) FROM vt1, vt0 WHERE (((((((x'807e')IS NOT(x'')))AND((((('M?sTEJMl5')AND('1545963492')))AND(-136765369)))))AND(((((NULL)OR(0.027048328550835388)))OR(NULL)))));SELECT ((((('|&K?(b(-x', vt1.c0, t0.c0))>((vt1.c0, vt0.c0, vt0.c0))))>(COUNT(vt0.c0))) FROM vt0 WHERE (((((((((((NULL)AND('')))OR('1459508069')))AND('')))AND(0.7914764428497124)))+(((NULL)*(-790102253)))));SELECT CASE WHEN SUM(vt0.c0) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))) WHEN (((vt1.c0))!=((vt1.c0))) THEN vt0.c0 WHEN CASE vt1.c0  WHEN 'gO褪h' THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END ELSE ((vt0.c0)*(vt0.c0)) END FROM t0, vt1, vt0; -- 0ms;
SELECT TOTAL(vt0.c0) OVER () FROM vt0, vt1 WHERE (x'd1ff'); -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS TEXT)) IS TRUE) FROM t0, vt1 WHERE ((((('652382390')>>(0.8507070474696778))) NOT NULL));SELECT DISTINCT ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt1.c0))=((x'')))) AND ((t0.c0 IN ()))) FROM vt1, t0 WHERE (((x'')-(((0.7914764428497124) IS FALSE)))) INTERSECT SELECT DISTINCT CASE MAX(t0.c0)  WHEN CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN '' ELSE t0.c0 END ELSE (vt0.c0 IN (vt1.c0)) END FROM vt1, vt0, t0;SELECT ALL CASE WHEN vt1.c0 THEN CAST(t0.c0 AS INTEGER) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END FROM vt1, vt0, t0 WHERE ((- (((1830326868)<=(x''))))) UNION SELECT ((((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0))) NOTNULL) FROM t0 WHERE ((((((((x'')OR('-785041305')))AND(860690062)), CASE WHEN x'' THEN x'' ELSE -51075465 END, ((987864241)%(0.5193556874296997))))<(((('-1300480619') BETWEEN (NULL) AND ('-851416470')), '-205675552', ((((x'')AND(0.09160908507498755)))AND(NULL))))));SELECT DISTINCT CAST(((vt1.c0) ISNULL) AS BLOB) FROM t0, vt1, vt0 WHERE ((CAST(NULL AS INTEGER) IN ())) LIMIT 1062097884; -- 0ms;
SELECT DISTINCT (NOT ((+ (t0.c0)))) FROM t0, vt1, vt0 WHERE ((((('G]' COLLATE BINARY)AND((((('-1634527891')AND('1129542474')))OR(x'')))))AND(((((((((((((0.20232636209951127)AND(0X3dba69ad)))AND(0.6348212189303872)))AND(NULL)))AND(661533535)))OR('')))OR(x'2304d558'))))); -- 2ms;
SELECT ALL ((CASE WHEN vt1.c0 THEN NULL END)OR(CAST(vt0.c0 AS REAL))) FROM vt0, t0, vt1 WHERE (CAST(((0.17590322990465945)=('')) AS NUMERIC)) UNION ALL SELECT DISTINCT (((CASE WHEN vt0.c0 THEN NULL ELSE vt1.c0 END))>((CAST(vt0.c0 AS NUMERIC)))) FROM vt0, vt1, t0 WHERE (((304133604) NOTNULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((x'28fdf338') NOT NULL), (((((+ (vt0.c0)))OR('^뤷')))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))), '!,I', NULL COLLATE BINARY, COUNT(vt1.c0) OVER () FROM vt0, t0, vt1 WHERE ((((('*gn'' ')>=(NULL))) IS TRUE)) LIMIT -743729654; -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c0)) NOT NULL), '', AVG(CAST(vt0.c0 AS TEXT)) OVER () FROM vt1;SELECT DISTINCT (- (vt1.c0)) COLLATE NOCASE COLLATE NOCASE FROM vt0 WHERE (((((8153790) NOT NULL))>>('-392277716' COLLATE RTRIM)));SELECT (((~ (0.4342722121213597)))LIKE((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0;SELECT ALL (((((t0.c0, vt1.c0, vt1.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))) NOT BETWEEN (0.19449792696757096) AND (((vt1.c0) IS FALSE))) FROM vt1, t0 GROUP BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) AND ((vt0.c0 IN (vt1.c0, t0.c0)))) HAVING ((((((t0.c0)OR(t0.c0)))OR(vt1.c0))) ISNULL);SELECT (NOT (vt1.c0 COLLATE NOCASE)), (~ ((- (vt1.c0)))), 0.8507070474696778 FROM vt0, t0, vt1 GROUP BY ''; -- 0ms;
SELECT DISTINCT ((((t0.c0)>=(vt0.c0))) IS FALSE) FROM vt0, t0 WHERE (((((x'ce13') IS TRUE))<=(CASE NULL  WHEN '334248852' THEN 0.7561258760973544 WHEN x'42ff12b5' THEN 0.6879171203360624 WHEN NULL THEN NULL ELSE 'N07' END))); -- 0ms;
SELECT vt1.c0 FROM vt1 WHERE ((((NULL IN (0xffffffffbbac6131, -378820214))) IS FALSE)); -- 0ms;
SELECT ALL (((t0.c0, vt1.c0, vt0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), (- (vt1.c0)), (NOT (NULL)))) AND ((((vt0.c0)=(vt1.c0)), ((vt0.c0) NOT BETWEEN (NULL) AND (t0.c0)), ((t0.c0)OR(vt0.c0))))) FROM vt1, vt0, t0 WHERE ((((((((('&W')OR('')))AND(TOTAL_CHANGES())))OR((('YRjK鉔쪎r') NOT BETWEEN (0.047822201130377495) AND ('')))))OR(((0.6876899270180594) BETWEEN (x'') AND (NULL))))); -- 1ms;
SELECT DISTINCT ((((t0.c0)&(vt1.c0)))<((vt0.c0 IN ()))) FROM t0 WHERE ((('1022626571')*(((NULL) NOTNULL))));SELECT DISTINCT ((MIN(vt0.c0)) IS TRUE), SUM(((vt1.c0)GLOB(0.09516444674996394))), (NOT (((((t0.c0)OR(vt0.c0)))OR(t0.c0)))) FROM vt1;SELECT DISTINCT DATETIME(((((vt1.c0)AND(t0.c0)))OR(t0.c0)), t0.c0 COLLATE RTRIM, t0.c0 COLLATE BINARY) FROM vt1, vt0, t0; -- 0ms;
SELECT ALL (((~ (vt1.c0)))<(vt1.c0 COLLATE NOCASE)) FROM vt0, vt1, t0 GROUP BY (((vt1.c0 IN (t0.c0, vt0.c0))) BETWEEN (NULL) AND (json_insert(vt0.c0, x'e98f', t0.c0))) HAVING CASE WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.4179056280871033) THEN ((t0.c0)|(vt1.c0)) ELSE ((vt0.c0) IS FALSE) END; -- 0ms;
SELECT (((((vt1.c0))<((0.5027903892214044)))) NOT BETWEEN ((+ (t0.c0))) AND (CAST('z\rn3#P1' AS REAL))) FROM vt0, vt1, t0 WHERE (LIKELIHOOD(((((((((((((x'a977')OR(NULL)))OR('560021356')))OR(x'')))AND(-7.46396656E8)))OR(0X21613f6c)))AND(0.11544735472838008)), 0.5411211204592394)); -- 0ms;
SELECT ALL (((- (vt1.c0))) IS FALSE) FROM vt0 RIGHT OUTER JOIN vt1 ON (((NOT (0Xffffffff98b007c0)))||(vt0.c0)); -- 1ms;
SELECT DISTINCT (~ (((vt1.c0) NOT NULL))) FROM t0, vt1, vt0 WHERE (((((CAST(NULL AS NUMERIC))OR(((x'')/(x'')))))AND(((0.24640406804055648)&(x''))))); -- 0ms;
SELECT ALL COUNT(((((t0.c0)OR(vt1.c0)))OR(t0.c0))), 1.63702771E9 COLLATE NOCASE, ((((t0.c0)IS(vt1.c0))) NOT BETWEEN (((vt0.c0)<=(t0.c0))) AND (0X645affe0)) FROM vt1, vt0;SELECT DISTINCT vt0.c0, COUNT(((vt1.c0) NOT NULL)), ((vt0.c0) IS FALSE) COLLATE RTRIM FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT (((vt0.c0) ISNULL) IN ()) FROM t0, vt1 WHERE (((((((0.40360752227642205) IS TRUE))AND(8.88619375E8)))OR(((((((((1950203787)AND(NULL)))AND(0.6842148042077902)))AND(0X1e7d7c85)))AND(NULL))))) ORDER BY CASE WHEN (((vt1.c0, t0.c0, vt1.c0))<((vt0.c0, vt1.c0, vt0.c0))) THEN (~ (vt1.c0)) END  NULLS FIRST LIMIT 1317161164 OFFSET -2118233658;SELECT UPPER(CAST(vt1.c0 AS TEXT)), ((((vt1.c0)>>(t0.c0)))LIKE(((((vt1.c0)OR(vt0.c0)))AND(NULL)))), 0.5276532352347919 FROM vt0, t0;SELECT (('')%('䃋/W[晙')), t0.c0, HEX((t0.c0 IN (t0.c0))) FROM vt0;SELECT CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) FROM vt0, t0 ORDER BY LIKELIHOOD(DISTINCT ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), 0.9989053349061374) ASC  NULLS LAST;SELECT (((t0.c0)) NOT BETWEEN (((vt1.c0 IN (t0.c0)))) AND (((+ (t0.c0))))), 0.6671025147342943, ((((vt0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) FROM t0, vt0 WHERE ((((('0.9847674994399468')=(x'')))==('' COLLATE BINARY))) GROUP BY ((((vt0.c0)%(vt1.c0))) NOT BETWEEN (((((x'2e81')OR(t0.c0)))AND(vt1.c0))) AND ((vt1.c0 IN ()))) HAVING (((vt0.c0 COLLATE NOCASE))<((t0.c0))) LIMIT 658989467;SELECT DISTINCT ((vt1.c0)<=(RTRIM(vt1.c0))) FROM t0 WHERE ((((((NULL))>((x'b92a'))))OR(((x'3c35f948') NOT BETWEEN (x'') AND (-7.90102253E8)))));SELECT ALL ((('')) BETWEEN ((t0.c0)) AND ((x'7307'))) COLLATE RTRIM FROM vt0, vt1;SELECT ALL ((((t0.c0) NOT NULL)) IS FALSE) FROM vt0, vt1;SELECT DISTINCT TOTAL((vt1.c0 IN ())) OVER () FROM t0, vt1, vt0 WHERE ((((0.43235767737783715) IS TRUE) IN ((((0xffffffff94b1306b)) BETWEEN ((x'c2fc')) AND ((x'')))))); -- 0ms;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(CASE WHEN 0.24938972159642403 THEN '' WHEN x'' THEN x'' WHEN NULL THEN 0.9064308602533362 END AS NUMERIC)); -- 0ms;
SELECT DISTINCT COUNT((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) FROM vt1, t0, vt0; -- 0ms;
SELECT DISTINCT AVG(t0.c0) FROM t0 WHERE (((CAST('1861535080' AS NUMERIC)) NOT BETWEEN (((x'') NOT BETWEEN (0.9441878887777236) AND (0Xfffffffff6a78448))) AND ((('e(') NOT BETWEEN ('rzCCg6<h[') AND (NULL))))); -- 0ms;
SELECT DISTINCT (NOT (vt1.c0 COLLATE NOCASE)) FROM t0;SELECT CAST(((vt0.c0)OR(t0.c0)) AS BLOB) FROM vt0, t0, vt1; -- 0ms;
SELECT DISTINCT (+ (((vt1.c0)||(vt0.c0)))), ((CAST(vt0.c0 AS BLOB)) NOT NULL), (- (MIN(t0.c0))) FROM vt1, t0, vt0 WHERE (CASE ((0.12437999885156747) BETWEEN (NULL) AND (x''))  WHEN '-624783187' THEN ((-1522042932) IS FALSE) END); -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN (((+ (0xffffffff8812e201)), ((vt1.c0)IS NOT(vt0.c0)), (NOT (t0.c0)))) AND (('0.013800049801215297', x'', NULL))) FROM vt1, t0 WHERE (CAST(0.642703566423971 COLLATE NOCASE AS INTEGER)) ORDER BY TRIM(((t0.c0)GLOB(0.3940435096267203))) ASC;SELECT DISTINCT (vt1.c0 COLLATE BINARY IN ((((0X2b48d11d)) BETWEEN ((vt0.c0)) AND ((x'bf1a'))))) FROM vt0 WHERE ((NOT (((('F|', x'', x'b871'))>=((NULL, 0.9536386960690945, NULL))))));SELECT ALL ((json_patch(vt0.c0, vt1.c0)) NOT NULL) FROM vt0, t0 WHERE (SQLITE_SOURCE_ID());SELECT ALL (((((vt1.c0)LIKE(vt0.c0))))<>((((t0.c0)*(vt1.c0))))) FROM vt1 WHERE (UPPER((('1537804896') BETWEEN (0xffffffffc03e5b3e) AND (NULL))));SELECT TOTAL((((t0.c0))<((vt0.c0)))) OVER () FROM vt0, t0 WHERE (CAST((~ (0.8371624568737518)) AS REAL)); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE BINARY)>>(((t0.c0)/(vt0.c0)))), rtreenode(((vt0.c0)*(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))), MAX(CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 ELSE t0.c0 END COLLATE NOCASE) FROM vt0, vt1, t0; -- 1ms;
SELECT ALL ((((vt0.c0) NOT NULL))!=(((vt1.c0)*(t0.c0)))) FROM t0, vt1, vt0; -- 0ms;
SELECT ALL ((((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0))) ISNULL), CASE t0.c0 COLLATE BINARY  WHEN ((vt1.c0)>(t0.c0)) THEN CAST(4.90208595E8 AS BLOB) END, (- (((vt0.c0) IS TRUE))) FROM vt1, vt0, t0 WHERE (json_extract('elPvＸ]~', 0.5286784621235472 COLLATE RTRIM));SELECT vt1.c0 FROM vt1, t0, vt0 WHERE (HEX(x'')); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((t0.c0) NOT BETWEEN (((vt0.c0)>>(vt1.c0))) AND (((((((((t0.c0)OR(t0.c0)))OR(0.32449878707542)))AND(x'')))OR(t0.c0)))), HEX(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0))) FROM t0 ORDER BY (+ ((- (t0.c0)))), CASE (((NULL)) BETWEEN ((NULL)) AND ((vt0.c0)))  WHEN ((vt1.c0)+(t0.c0)) THEN (t0.c0 IN (vt0.c0, t0.c0)) ELSE ((((vt0.c0)OR(vt1.c0)))AND(t0.c0)) END  NULLS LAST;SELECT CAST((- ('-2034502085')) AS NUMERIC) FROM vt1 WHERE ((((COALESCE(1.01987907E9, -1027102608), ((((0.4992987412476063)OR('-1074956402')))OR('dp')), ((('-1256210615', x'', NULL)) NOT BETWEEN ((0X1adeb220, x'', x'')) AND ((NULL, NULL, NULL))), (0.1862598992021247 IN ()), (((x'', x'', '-1742879207'))>((x'', '6aCvi%훃', x'')))))!=((CASE x''  WHEN '1595592991' THEN x'' WHEN x'3cbd' THEN -546568505 WHEN 1.887245235E9 THEN '1089958583' ELSE '285095525' END, CASE NULL  WHEN -1.544615179E9 THEN 0.954085378371294 WHEN 0.28321382515721083 THEN 0.4554801834608744 WHEN '2MO*|앖''' THEN NULL END, NULL COLLATE BINARY, (- (0.370158350728949)), TRIM(DISTINCT NULL))))); -- 0ms;
SELECT (((((((t0.c0))<=((t0.c0))))AND(((vt1.c0)IS(vt1.c0)))))OR(((vt1.c0)!=(vt1.c0)))) FROM t0 WHERE ((0x66e3fed COLLATE NOCASE IN ())) LIMIT 74907448;SELECT DISTINCT t0.c0 FROM vt0 WHERE ((((((((('4')AND(1007947595 COLLATE BINARY)))OR(((NULL) ISNULL))))AND((('1284886176')IS('0.20838959006441682')))))OR(((x'7bb2')/(-1.256210615E9)))));SELECT DISTINCT CAST((vt1.c0 IN (vt0.c0, vt1.c0)) AS INTEGER), '-0.0', ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (AVG(vt1.c0)) AND (TOTAL(vt0.c0))) FROM vt0;SELECT DISTINCT COUNT(*) OVER ( ORDER BY CASE WHEN ((t0.c0) IS TRUE) THEN (((t0.c0))<=((vt1.c0))) WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt1.c0) ISNULL) WHEN ((vt0.c0)IS(vt0.c0)) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) END  NULLS FIRST, ((vt0.c0) NOTNULL)  NULLS FIRST) FROM vt1 WHERE (((CASE x'0c1321cd'  WHEN -565945608 THEN '389321208' WHEN 1.393826091E9 THEN 0Xffffffff9c1bd8b9 WHEN '0.09516444674996394' THEN '-1098112629' END) NOT NULL));SELECT ALL MIN((t0.c0 IN ())) FROM t0, vt1 WHERE (((((0.9064308602533362 COLLATE NOCASE)AND((x'9566' IN ()))))OR(((((NULL)OR('-580958941')))AND(NULL))))); -- 0ms;
SELECT ALL CAST(0.28014015869554876 AS REAL), ROUND(((NULL) NOT NULL), ((((vt0.c0)AND(vt1.c0)))AND(t0.c0))), vt0.c0 FROM vt0, t0 WHERE ((((NULL)) NOT BETWEEN ((0.34587509536279115 COLLATE BINARY)) AND ((((0.9515876714927277)>>('-2045870383')))))) LIMIT -1718561581 OFFSET -344065128;SELECT ALL ((((t0.c0) IS TRUE)) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((- (t0.c0)))) FROM vt0 CROSS JOIN vt1 ON TRIM(CAST(vt0.c0 AS INTEGER)) CROSS JOIN t0 ON ((TOTAL_CHANGES()) NOT BETWEEN (LIKELY(vt1.c0)) AND (x'')); -- 0ms;
SELECT ALL (((~ (vt1.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (vt0.c0)), HEX(GROUP_CONCAT(vt1.c0)), GROUP_CONCAT((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) OVER ( GROUPS BETWEEN  CURRENT ROW AND ('e\r' IN ((vt0.c0 IN (vt1.c0, t0.c0)), ((t0.c0) NOT NULL), vt0.c0 COLLATE NOCASE)) FOLLOWING EXCLUDE GROUP) FROM vt0;SELECT ALL (((vt0.c0)GLOB(t0.c0)) IN ()) FROM t0 WHERE (x''); -- 0ms;
SELECT UPPER((~ (t0.c0))) FROM t0; -- 3ms;
SELECT DISTINCT (((~ (vt1.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (vt0.c0)), ((vt0.c0)!=(((vt0.c0)||(vt0.c0)))), LIKELY(DISTINCT (+ (t0.c0))), AVG((NOT (vt0.c0))) FILTER(WHERE ((CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)IS(((vt0.c0)/(vt1.c0))))) OVER (), (((((((0.9866641420990211, vt1.c0, vt1.c0))<=((vt0.c0, t0.c0, t0.c0))))OR(((t0.c0) NOTNULL))))AND((NOT (vt0.c0)))) FROM t0, vt0 WHERE (CASE WHEN (((((((((((('_NV')AND('1540953674')))AND(NULL)))AND(0.3335545512888911)))OR(x'cad0')))AND(NULL)))AND('')) THEN CASE 0X60bb1962  WHEN x'' THEN '' END ELSE 0.7527029013421636 END);SELECT ALL NTILE((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT NULL)) OVER () FROM vt0, vt1, t0 WHERE (((STRFTIME('172054018', '-36675975', 794135135, '2122886089', 0.3981468436430975))LIKE((+ (NULL))))); -- 0ms;
SELECT DISTINCT CASE CASE '-748272940'  WHEN vt0.c0 THEN vt1.c0 END  WHEN ((vt0.c0)||(vt1.c0)) THEN vt0.c0 ELSE (((vt1.c0, vt0.c0, 0X72e64fd8)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, vt1.c0))) END, ((vt1.c0) NOTNULL), (((((t0.c0)<=(NULL))))!=((CASE vt0.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END))) FROM vt1 GROUP BY x'' HAVING CASE HEX(vt0.c0)  WHEN UPPER(vt1.c0) THEN vt1.c0 END;SELECT (((vt1.c0)) NOT BETWEEN ((LIKELIHOOD(vt1.c0, 0.9857990121638415))) AND ((((vt0.c0) ISNULL)))) FROM vt0, t0, vt1; -- 0ms;
SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))>>(HEX(vt1.c0))), UNICODE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))), ((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt1.c0)))-(rtreenode(t0.c0, vt0.c0))) FROM vt1 WHERE ((((((-2015831465)) NOT BETWEEN ((0xffffffffd1353867)) AND ((0.27447120159959615)))) IS TRUE));SELECT DISTINCT CASE WHEN NULL THEN '-1675896647' COLLATE BINARY END FROM t0, vt0 WHERE ((((- (NULL))) NOTNULL)); -- 0ms;
SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)OR(vt1.c0)))OR(((vt0.c0)AND(vt0.c0)))) FROM vt0, t0, vt1 WHERE (CASE WHEN ((0.3895369127741296) IS TRUE) THEN CASE NULL  WHEN 0Xffffffffe277284d THEN '' ELSE '놪\nM/' END WHEN (((NULL))=((0.2419249968147087))) THEN ((((x'4c675c74')AND(0.2418033211660039)))AND(0.4426562409345729)) WHEN ((NULL) BETWEEN (NULL) AND (NULL)) THEN CASE x'6282'  WHEN NULL THEN '2063083124' END ELSE (((((((('0.6876899270180594')OR(0.3976701630789893)))OR(x'')))OR(x'')))AND('-861032991')) END); -- 0ms;
SELECT DISTINCT ((TOTAL(0.2786741837436383))>=(CAST(t0.c0 AS TEXT))) FROM t0; -- 0ms;
SELECT DISTINCT ((('Gl' IN ()))>>('1105851970')), ((COUNT(*)) IS FALSE), TYPEOF(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) FROM vt0 WHERE ((((+ (x''))) NOT BETWEEN (((((((((0.37602351799691913)AND(x'')))AND(NULL)))AND(NULL)))AND(0xffffffffc3480b65))) AND (((NULL)/(x'')))));SELECT DISTINCT ((((CAST(vt0.c0 AS NUMERIC))OR(((vt1.c0) NOT NULL))))OR(((t0.c0) NOTNULL))) FROM vt1, vt0, t0; -- 1ms;
SELECT DISTINCT ((AVG(vt1.c0))GLOB(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), (((MIN(vt1.c0)))>=((vt0.c0))), (vt1.c0 IN ()) COLLATE BINARY FROM t0, vt1;SELECT DISTINCT RANK() OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))>>(CASE WHEN '' THEN vt0.c0 END)) FROM vt1, t0, vt0 WHERE ((((0x3f770429, 0.047822201130377495, 1393826091)) BETWEEN ((-1930756547, 0.8666579626201338, 0.09516444674996394)) AND ((NULL, '3ৃ', 'nw'))) COLLATE NOCASE) LIMIT 441890013 OFFSET 1770228899; -- 0ms;
SELECT LAST_VALUE(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))IS NOT((((t0.c0))<((vt0.c0)))))) OVER (), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))=((~ (t0.c0)))), CAST((~ (x'1b33')) AS TEXT) FROM vt0, t0 NOT INDEXED WHERE (((x'')||(NULL)) COLLATE NOCASE) LIMIT -511471154;SELECT ALL (CAST(vt0.c0 AS NUMERIC) IN ()) FROM t0, vt1, vt0 ORDER BY ((vt1.c0)/(t0.c0)) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT ((((((((NULL)OR((+ (vt1.c0)))))AND(LIKELY(vt1.c0))))AND((((t0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, t0.c0, vt1.c0))))))OR(vt0.c0 COLLATE RTRIM)), ((vt0.c0 COLLATE BINARY)<(COUNT(vt0.c0))), CASE ((vt1.c0)&(vt0.c0))  WHEN LIKE(vt1.c0, '-509470345') THEN ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN LTRIM(vt0.c0, vt1.c0) WHEN ((vt0.c0)-(vt1.c0)) THEN 0xffffffffbd0f95bd END FROM vt1 WHERE (((((NULL)AND(x'')))>=(CAST(4.6485285E7 AS BLOB))));SELECT DISTINCT '1705236867' FROM vt0 NOT INDEXED, t0, vt1 LIMIT -1142734373 OFFSET 1990661927; -- 0ms;
SELECT DISTINCT (((NOT (t0.c0)))>(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) FROM vt1, vt0;SELECT ALL '1805931226' FROM vt0 GROUP BY CASE ((vt0.c0)AND(vt1.c0))  WHEN t0.c0 THEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END, (~ (vt1.c0)) COLLATE NOCASE, (((+ (vt0.c0))) IS FALSE) HAVING (((t0.c0) NOT NULL) IN ());SELECT DISTINCT IFNULL(DISTINCT t0.c0 COLLATE BINARY, '-1476550540'), (((+ (t0.c0)))<=(CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN '' WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)), ((((t0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))) FROM vt1, vt0 WHERE (CASE WHEN ((0.4343627995930508) IS TRUE) THEN (('-1967955456') BETWEEN ('-895340935') AND (x'')) ELSE CASE WHEN x'' THEN x'e59e' ELSE 'P' END END) LIMIT -1072873304 OFFSET 1022626571;SELECT DISTINCT ((((t0.c0)AND(((vt1.c0) IS FALSE))))AND(((vt0.c0)LIKE(t0.c0)))) FROM vt1 WHERE (((CAST(NULL AS TEXT)) ISNULL));SELECT ALL (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) IN ()) FROM vt0, t0 WHERE (('1105851970' COLLATE BINARY IN ())); -- 0ms;
SELECT CAST(MAX(vt0.c0) AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT '1912903010' FROM vt0, vt1, t0; -- 0ms;
SELECT DISTINCT TOTAL(((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) FILTER(WHERE vt1.c0) OVER () FROM t0, vt0;SELECT DISTINCT (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt1.c0)<(vt0.c0)))) FROM vt0, t0, vt1; -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))LIKE(((vt1.c0) NOTNULL))) FROM t0, vt1, vt0; -- 0ms;
SELECT ((((((vt1.c0)OR(t0.c0)))AND(t0.c0))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))AND(2.94884594E8))) AND ((+ (t0.c0)))) FROM vt0 WHERE (((((('^}䖾310Qꗄ')&(0.3940435096267203)), ('䅯}iY9| 5f' IN (NULL)), UPPER(0.5997257846209832)))<=(('625183208' COLLATE BINARY, NULL COLLATE RTRIM, 0.7914764428497124 COLLATE NOCASE))));SELECT vt0.c0 FROM vt0, t0 WHERE (((('\nG9鏦' IN ())) ISNULL)); -- 0ms;
SELECT DISTINCT (~ (0Xffffffffa8729084)), 'Sj' COLLATE BINARY, ((t0.c0) IS TRUE) COLLATE NOCASE FROM vt0, vt1, t0 WHERE ((+ ((('Sc')IS NOT('-795696044'))))) ORDER BY ((IFNULL(NULL, t0.c0))<>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((9.86792139E8)))))  NULLS FIRST; -- 1ms;
SELECT (((t0.c0) IS TRUE) IN ((NOT (vt0.c0)))), LOWER(((t0.c0)<=(vt0.c0))), (vt0.c0 IN ()) FROM vt0 WHERE ((((('>\n\rr7l')OR('')))OR((0.3547781415503283 IN ()))));SELECT DISTINCT ((((t0.c0) NOT NULL))<=(NULL)) FROM vt0 GROUP BY CASE (((vt0.c0))<>((vt0.c0)))  WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND ('-484766957')) THEN ((((t0.c0)AND(vt0.c0)))OR(t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN vt1.c0 COLLATE RTRIM THEN CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '408669493' WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END ELSE vt1.c0 COLLATE RTRIM END HAVING (((MAX(vt1.c0)))>=((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))));SELECT DISTINCT t0.c0 FROM vt1, t0, vt0 WHERE ((((((x'') BETWEEN (NULL) AND (0.26479601077126713))))<((CAST(x'' AS INTEGER))))); -- 0ms;
SELECT CAST(((vt1.c0) IS TRUE) AS BLOB), (((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), t0.c0)) AND ((((vt1.c0)<=(vt0.c0)), ((vt1.c0)-(vt1.c0)), (t0.c0 IN ())))), ((((vt1.c0) IS TRUE))+(vt0.c0)) FROM t0, vt1;SELECT ((CAST(t0.c0 AS INTEGER))LIKE(((t0.c0)<<(t0.c0)))) FROM vt0 ORDER BY ((((NULL)/(vt0.c0)))|('1756475866')) DESC;SELECT (((vt1.c0)) BETWEEN (((((vt1.c0))<>((vt1.c0))))) AND ((((vt0.c0) IS FALSE)))) FROM t0, vt1, vt0 GROUP BY ((((vt0.c0)OR(((t0.c0) NOTNULL))))AND(((vt1.c0)%(vt1.c0)))); -- 1ms;
SELECT ALL (((vt0.c0 IN ()))-(TOTAL(vt0.c0))) FROM vt0 WHERE ((x'' COLLATE NOCASE IN ())); -- 0ms;
SELECT ALL MAX(((((t0.c0)AND(vt0.c0)))OR(t0.c0))) FROM vt0, vt1, t0 LIMIT -1027160317 OFFSET 823243670; -- 0ms;
SELECT DISTINCT CAST(t0.c0 COLLATE BINARY AS INTEGER) FROM vt0, vt1;SELECT CAST(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) AS INTEGER), ABS(t0.c0) COLLATE BINARY, (((((vt1.c0, vt0.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((NOT (vt1.c0))) AND (LENGTH(vt0.c0))) FROM vt0, vt1, t0 WHERE (((CAST('' AS REAL))AND((((NULL, -1.010147551E9, x'3025')) BETWEEN (('150810563', '', 0.39726645757130485)) AND ((NULL, x'', NULL)))))) GROUP BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) HAVING CASE CASE vt0.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((t0.c0, 0.21573339727701013, NULL))>=((vt0.c0, x'', vt0.c0))) THEN ((t0.c0) NOTNULL) END; -- 0ms;
SELECT ALL ((vt1.c0) ISNULL) COLLATE RTRIM, ((((((((((((((vt0.c0) NOT NULL))OR(vt0.c0 COLLATE RTRIM)))AND((vt1.c0 IN ()))))AND(((t0.c0)||(0.3103535206494411)))))AND(((vt1.c0)AND(t0.c0)))))AND(((vt1.c0) NOTNULL))))OR(((vt0.c0) BETWEEN (-191967119) AND (t0.c0)))), CASE WHEN t0.c0 COLLATE NOCASE THEN (('593406101')IS NOT(vt1.c0)) END FROM vt0, t0, vt1; -- 0ms;
SELECT ALL ((x'') NOT BETWEEN ((- (vt0.c0))) AND (vt1.c0 COLLATE RTRIM)) FROM vt0, t0, vt1 GROUP BY t0.c0; -- 0ms;
SELECT DISTINCT (COUNT(t0.c0) IN ()) FROM t0 WHERE (CAST(0.656960243747431 COLLATE RTRIM AS NUMERIC)); -- 0ms;
SELECT (((((((0.08853426355731431))<>((vt0.c0))))AND(vt1.c0)))AND((t0.c0 IN ()))) FROM t0 WHERE (((NULL IN ()) IN ())); -- 1ms;
SELECT DISTINCT COUNT(((((vt0.c0)OR(vt1.c0)))AND(t0.c0))) FROM vt1, t0, vt0 WHERE (((((((((CAST('s땍' AS BLOB))AND('7826340772658089135-1750T537T1899 -4429516684087933435T5944393647220495220-691-7554632741167629318T2''')))OR(TRIM('elrvＸ]~'))))AND((((NULL, 0xffffffffb9b42252, NULL, 'Z0', '-825943474', x'9fa6', 0.28014015869554876))!=(('', NULL, '1347470471', 0X142bae07, NULL, '1695355387', '4ii6'))))))OR((((((((('')AND('-772088964')))AND('A.7')))OR('M?sTEJMl5')))AND('-519806867'))))); -- 0ms;
SELECT ALL ((((vt1.c0) IS FALSE))!=(MAX(t0.c0))) FROM vt1, vt0 WHERE (CASE ((NULL) NOT BETWEEN ('') AND ('sGP'''))  WHEN ((('j\nYqZ{*䃵Z')) NOT BETWEEN (('gp')) AND ((NULL))) THEN ((x'')IS NOT(1.896608714E9)) WHEN (+ (NULL)) THEN (~ (x'')) WHEN (NOT (0.7565720726395515)) THEN ((NULL)>(x'')) END);SELECT DISTINCT t0.c0, ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM, CASE WHEN t0.c0 THEN ((vt0.c0)AND(t0.c0)) END FROM vt0, t0, vt1 WHERE (NULLIF((('s)')OR(x'')), (~ ('46485285')))) ORDER BY CASE WHEN vt1.c0 THEN STRFTIME('-1627289473', t0.c0, vt1.c0) ELSE ((vt0.c0)<>(vt1.c0)) END DESC  NULLS LAST, (- (vt0.c0)) COLLATE BINARY; -- 0ms;
SELECT ALL CASE WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN x'' ELSE vt1.c0 END FROM t0;SELECT ALL (- (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))), TOTAL((~ (t0.c0))) OVER (), json_patch(COUNT(vt1.c0), (((vt1.c0))!=((vt0.c0)))) FROM t0 WHERE (((('1052270245')) NOT BETWEEN ((CAST('pn' AS INTEGER))) AND (((NOT (''))))));SELECT (((vt1.c0 IN (vt1.c0, '')))&(vt0.c0 COLLATE NOCASE)) FROM vt1, vt0 GROUP BY ((vt1.c0) BETWEEN ((((vt1.c0))>=((t0.c0)))) AND (NULL)), CASE WHEN CASE WHEN vt0.c0 THEN x'971b' WHEN NULL THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 END THEN CAST(vt1.c0 AS TEXT) ELSE vt1.c0 END, ((vt0.c0)IS((vt1.c0 IN ())));SELECT ALL ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))!=((~ (t0.c0)))) FROM vt1 WHERE ((((((((((('1595592991') IS TRUE))OR(((NULL) NOT NULL))))OR(json(x''))))AND(CASE WHEN '1922215058' THEN NULL ELSE -1.300480619E9 END)))OR((+ (x''))))) LIMIT -98582606 OFFSET -1540262764;SELECT DISTINCT vt0.c0 FROM vt1, t0, vt0 WHERE ((((((NULL)) NOT BETWEEN ((NULL)) AND ((NULL))))>>((- (0.45675490118779827))))); -- 0ms;
SELECT ALL CAST(((vt1.c0) NOT BETWEEN (t0.c0) AND ('')) AS REAL), (((t0.c0, 'GZhf8V2e', t0.c0)) BETWEEN ((UPPER(DISTINCT vt0.c0), (~ (vt0.c0)), ((t0.c0)<(t0.c0)))) AND (((NOT (vt1.c0)), (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))), ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))), (~ (CAST('kK' AS INTEGER))) FROM t0, vt1;SELECT DISTINCT (+ (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))) FROM t0, vt0, vt1; -- 0ms;
SELECT DISTINCT (~ (t0.c0 COLLATE RTRIM)) FROM vt1, vt0 WHERE (CASE ((1674909503) IS TRUE)  WHEN (('Q')%(x'')) THEN ((((0.4920081392950484)AND('1394119416')))AND('Gs?o')) WHEN (- (x'')) THEN ((NULL) IS TRUE) WHEN ((0.42909381268332947)<=(0x2584339e)) THEN (- (NULL)) END) GROUP BY (NOT ((t0.c0 IN ()))) ORDER BY (+ ((- (vt0.c0))))  NULLS FIRST;SELECT ALL (- (((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0)))) FROM vt0, t0, vt1 WHERE ((~ ((((('690977512')AND('')))AND(-287051648))))); -- 0ms;
SELECT (((vt1.c0 IN (t0.c0))) NOT BETWEEN (((t0.c0)%(vt0.c0))) AND (CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) FROM vt1, t0, vt0 WHERE (((((((((((NULL) BETWEEN (NULL) AND (0.916666573695566)))OR(CASE NULL  WHEN x'' THEN 'P' WHEN '2125123904' THEN 1.545963492E9 WHEN 4.44735425E8 THEN 0.8746768101939286 ELSE NULL END)))OR(CASE x''  WHEN NULL THEN 0.545790865652646 WHEN x'' THEN x'5b2c' WHEN '-103896968' THEN '-1582235057' WHEN NULL THEN '' WHEN '-1392517830' THEN 'a_#RN' ELSE x'' END)))AND((('-1160665660')IS(NULL)))))AND(CAST(x'50ce' AS TEXT)))); -- 0ms;
SELECT ((((vt0.c0)<(vt0.c0))) BETWEEN (((t0.c0) NOT NULL)) AND ((- (t0.c0)))) FROM vt0 WHERE (((((('qOy*^uoe')) BETWEEN (('')) AND (('569232374')))) NOT BETWEEN ((('0.6876899270180594')IS NOT(x''))) AND ((- ('!wbM')))));SELECT DISTINCT AVG(501490874) FROM vt1, t0, vt0 WHERE ((((NULL) NOT NULL) IN ())); -- 0ms;
SELECT DISTINCT (vt1.c0 IN (vt1.c0 COLLATE BINARY)), (((((t0.c0))>((x''))))&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)), ROW_NUMBER() OVER () FROM vt0, t0 WHERE (x'') LIMIT -1226770047 OFFSET 328568847;SELECT DISTINCT CASE WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN TRIM(DISTINCT t0.c0, vt0.c0) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END, AVG(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))) OVER (), ((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) ISNULL) FROM t0, vt0 WHERE (((('쳐W''먝?]^{' IN ())) IS FALSE)) GROUP BY CAST((vt1.c0 IN ()) AS REAL), (((((vt1.c0))<=((vt0.c0))))LIKE(t0.c0)), ((((vt1.c0)>>(vt1.c0))) BETWEEN (((0.029777112521061744) NOTNULL)) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))), (+ (CAST(t0.c0 AS NUMERIC))), ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) IS TRUE) HAVING ((((t0.c0) NOTNULL)) NOT BETWEEN (MAX(t0.c0)) AND (DATETIME(t0.c0, vt0.c0, x'')));SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ((t0.c0 IN (vt0.c0)))), ((TOTAL(vt1.c0)) BETWEEN (((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) AND (vt1.c0)), CASE WHEN COUNT(vt0.c0) THEN (- (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM WHEN ((-1142734373)+(vt1.c0)) THEN ((vt1.c0) NOTNULL) END FROM t0 WHERE (CAST(IFNULL(x'a6f9', 0.5912824826903597) AS INTEGER));SELECT DISTINCT ((vt1.c0)IS(((vt0.c0) ISNULL))) FROM t0 WHERE (UPPER(DISTINCT ((-1e500)<=(NULL))));SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((NULL)) AND ((GROUP_CONCAT(vt0.c0)))) FROM t0 WHERE ((((0x211ae33f)) NOT BETWEEN (((('GKNR~K蟤')>>(0x3dbabfe6)))) AND (((('137804983') NOT BETWEEN (x'f933') AND (0.9205655487501379))))));SELECT ((UPPER(t0.c0))<>(UNLIKELY(DISTINCT t0.c0))) FROM t0, vt0, vt1; -- 0ms;
SELECT LAG(((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))<(vt1.c0)), json_insert((vt1.c0 IN (vt1.c0)), ((vt1.c0)|(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))), ((((vt1.c0) NOTNULL))IS(((vt1.c0)-(vt1.c0))))) OVER ( ORDER BY (((NULL)&(NULL)) IN ()) ASC), (((vt1.c0 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (t0.c0 COLLATE BINARY)), ((((vt1.c0) NOT NULL)) BETWEEN (CASE '_NV'  WHEN vt1.c0 THEN t0.c0 ELSE vt0.c0 END) AND (SQLITE_COMPILEOPTION_USED(vt0.c0))) FROM vt1 GROUP BY (((t0.c0)) BETWEEN (('')) AND ((t0.c0))) COLLATE NOCASE;SELECT DISTINCT (((~ (vt0.c0)))||(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) FROM t0;SELECT DISTINCT (((NOT (vt1.c0)))AND(COUNT(*))) FROM t0, vt1, vt0 WHERE (CAST(TRIM('444735425') AS NUMERIC)); -- 0ms;
SELECT ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END) IS TRUE), ((((vt1.c0)>=(vt0.c0))) NOT NULL), CAST(4.44735425E8 AS INTEGER) FROM t0 INNER JOIN vt1 ON ((((LIKELIHOOD(DISTINCT vt0.c0, 0.8793981886874411))AND(((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((t0.c0) ISNULL))) WHERE (CAST(('1458179569' IN ('NE')) AS INTEGER)) ORDER BY ((CAST(vt0.c0 AS BLOB))IS(vt1.c0 COLLATE RTRIM));SELECT CAST(((t0.c0) ISNULL) AS REAL) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((((((vt1.c0))<=((vt1.c0))))AND(((vt1.c0)=(vt1.c0)))))AND(MIN(t0.c0))) FROM vt1, t0, vt0 WHERE ((1216511603 IN ()) COLLATE BINARY); -- 0ms;
SELECT ALL ((COALESCE(DISTINCT vt1.c0, t0.c0, vt1.c0, t0.c0))+(((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))) FROM t0 WHERE (6.25183208E8);SELECT (((t0.c0 IN (x''))) IS TRUE) FROM vt1;SELECT vt1.c0 FROM vt0 ORDER BY ((t0.c0) NOT BETWEEN (NULL) AND (0Xffffffffaa1e8412)) COLLATE NOCASE DESC  NULLS FIRST;SELECT ALL ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) FROM t0 GROUP BY (~ (vt0.c0)) COLLATE RTRIM HAVING CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM END ORDER BY ((CAST(t0.c0 AS REAL)) IS FALSE) ASC LIMIT -1741345450 OFFSET -1107298096;SELECT ALL (((~ (t0.c0)))<<((+ (vt1.c0)))), UPPER(DISTINCT ((t0.c0)IS(t0.c0))), ((0.2786741837436383) ISNULL) FROM t0, vt0 WHERE (CASE NULL  WHEN -1.7976931348623157E308 THEN '-1160665660' WHEN NULL THEN x'80a95d41' WHEN x'' THEN -1852038369 ELSE '560021356' END COLLATE RTRIM);SELECT TOTAL((vt0.c0 IN (t0.c0)) COLLATE NOCASE) OVER () FROM t0, vt1, vt0 WHERE ((((((0X797c716f)) NOT BETWEEN ((x'')) AND (('uB톛')))) NOT NULL)) ORDER BY (((((vt0.c0))<((vt0.c0)))) NOTNULL) DESC, ((t0.c0)GLOB(x'')) DESC  NULLS FIRST LIMIT 782486901; -- 0ms;
SELECT CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT), ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))/(CAST(t0.c0 AS NUMERIC))), COUNT('') FROM t0;SELECT ((CAST(vt0.c0 AS TEXT))>=((vt1.c0 IN (t0.c0, '-1160665660')))) FROM t0 WHERE (CASE WHEN NULL COLLATE BINARY THEN (((x''))==((0.5329284522501402))) ELSE ((((x'')AND(x'ccd6')))OR('-510596963')) END) ORDER BY vt0.c0  NULLS LAST, CASE WHEN ((t0.c0) NOTNULL) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE CASE WHEN t0.c0 THEN vt0.c0 END END ASC, (CAST(vt0.c0 AS INTEGER) IN ((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL, 0.09516444674996394)) AND ((t0.c0, vt1.c0, vt1.c0))))) DESC;SELECT DISTINCT ((((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN -1.675896647E9 WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END)AND(vt0.c0 COLLATE BINARY)))AND(GROUP_CONCAT(vt1.c0))), ((((vt1.c0)<>(vt0.c0)))>(GROUP_CONCAT(vt1.c0))), (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN '0.642703566423971' THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END IN (((t0.c0)>=(vt1.c0)), x'')) FROM t0, vt0, vt1; -- 1ms;
SELECT ALL vt1.c0 COLLATE RTRIM FROM t0, vt1, vt0 WHERE (CASE (-565945608 IN ())  WHEN ((x'') NOT BETWEEN (NULL) AND ('P8Qie?㽬')) THEN ((NULL)AND('㮥E')) ELSE ((NULL)<('')) END); -- 0ms;
SELECT DISTINCT TOTAL((((t0.c0))<((t0.c0)))) FROM vt0, vt1, t0 LIMIT -256774255 OFFSET -1268485087; -- 2ms;
SELECT ALL (vt0.c0 IN (((((((((vt1.c0)OR(t0.c0)))OR(vt1.c0)))OR(t0.c0)))AND(t0.c0)), (+ (vt0.c0)))) FROM vt1, vt0, t0 LIMIT -1142734373; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL)) BETWEEN (t0.c0) AND (json_insert(vt1.c0, vt0.c0, t0.c0, t0.c0, t0.c0))), CAST(CAST(vt1.c0 AS REAL) AS BLOB), TOTAL(CAST(vt1.c0 AS INTEGER)) FROM vt1, vt0, t0 WHERE (((CASE '1058391382'  WHEN '-1924557473' THEN NULL ELSE NULL END)<=(CASE 0.27405294026880056  WHEN '1255759418' THEN NULL END))); -- 0ms;
SELECT DISTINCT (((+ (vt1.c0))) NOT NULL) FROM t0, vt0, vt1 WHERE (NULLIF(CAST('' AS BLOB), ((0.6067324454601584)||('2021531050')))) GROUP BY (NOT (1094045688)), CASE x''  WHEN NULL THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE CAST(vt1.c0 AS REAL) END, TRIM(DISTINCT (t0.c0 IN (vt0.c0)), (((vt0.c0))=((vt1.c0)))) HAVING CAST(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END AS INTEGER); -- 0ms;
SELECT ALL '', (((t0.c0, vt1.c0, 0.04169606612613497)) NOT BETWEEN ((COUNT(*), 0.3935266231983364, ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((t0.c0)&(t0.c0)), (vt0.c0 IN (x'c520')), (+ (t0.c0))))), ((((vt1.c0)AND(((t0.c0)>(t0.c0)))))OR(CAST(vt1.c0 AS INTEGER))) FROM vt1;SELECT DISTINCT (load_extension(vt0.c0) IN ()), ((CAST(t0.c0 AS TEXT))==(((((t0.c0)AND(vt1.c0)))AND(0.6024262899063093)))), vt1.c0 FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) NOT NULL))OR((- (NULL)))))OR(CAST(vt1.c0 AS INTEGER))) FROM vt1 WHERE (CASE ((0.6272550071059019)<>('1379874267'))  WHEN 0xffffffff90fea34a THEN (('-410482013')<=('<FO!*HK*2')) WHEN ((((3.28568847E8)AND(0.5255415647878742)))OR(0.04210866402280189)) THEN CAST(1.7976931348623157E308 AS NUMERIC) WHEN (- (NULL)) THEN (+ (x'4775')) WHEN ((((NULL)OR(']N[g')))OR(NULL)) THEN (((((((('')OR(x'')))AND('nz癪')))OR(x'b33eb4a7')))OR('-1846978480')) WHEN ((NULL) BETWEEN (NULL) AND (' ꗥ?弡\n')) THEN (NOT (NULL)) END);SELECT UNLIKELY((-249587254 IN ())) FROM t0, vt1, vt0; -- 1ms;
SELECT DISTINCT FIRST_VALUE((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((- (vt0.c0)), ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)), vt1.c0)) AND (((+ (vt0.c0)), '', ((((vt1.c0)OR(vt1.c0)))OR(x'63bf')))))) OVER () FROM vt0, vt1 WHERE ((((('G긙\% }\nn') ISNULL)) BETWEEN ((('q	!{9>') NOT BETWEEN (NULL) AND (NULL))) AND (('*,gF]\n' IN ('nf'))))) LIMIT -833444955 OFFSET -1509345051; -- 0ms;
SELECT (((((t0.c0) IS FALSE)))<((CASE WHEN t0.c0 THEN vt1.c0 WHEN 0.38627535229736265 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END))) FROM vt0, t0, vt1 WHERE (((((((((((0.3317368725211599)/(x'')))OR((- (0.17268100774242334)))))AND((NULL IN ()))))OR(((NULL)/('Q\rer')))))AND(((((((((x'')AND(-1.74134545E9)))AND('\\r')))AND('')))AND('BB_u'))))) GROUP BY (((((vt0.c0 IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 END)) HAVING MIN(((vt0.c0) NOTNULL)); -- 0ms;
SELECT DISTINCT (((((((x'')AND(vt1.c0)))AND(t0.c0))))<((x'cdc3'))), (((t0.c0))>((t0.c0))) COLLATE NOCASE, (((t0.c0)) NOT BETWEEN ((0xffffffffbeb4a16a)) AND ((x''))), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY, GLOB(CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END, (~ (vt1.c0))) FROM t0, vt1, vt0; -- 0ms;
SELECT (((('1')*(vt1.c0)))<=((NOT (vt1.c0)))) FROM vt0, vt1, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((x''))==((vt0.c0))) IN (CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)) FROM vt0, t0 WHERE (((((((-581299669)<=('1830326868')))AND('')))OR(0.8835903963043199))) ORDER BY ((x'') NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS NUMERIC))) ASC;SELECT DISTINCT CASE 'Ho+wVDee'  WHEN t0.c0 COLLATE BINARY THEN vt0.c0 ELSE ((((t0.c0)AND(vt0.c0)))OR(vt0.c0)) END FROM vt1, vt0 WHERE (load_extension(((-1840740108)||(0.8553887930595894))));SELECT ALL vt0.c0 FROM t0, vt0, vt1 LIMIT 43941872 OFFSET -842152135; -- 0ms;
SELECT DISTINCT CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE '*GN'' ' END AS BLOB) FROM vt0, vt1, t0 ORDER BY (json_extract(t0.c0, vt1.c0, vt0.c0, t0.c0) IN ((('-1347810211') BETWEEN (0.012045062488042046) AND (vt0.c0)))); -- 0ms;
SELECT ((vt0.c0)%(vt0.c0)) COLLATE BINARY FROM t0;SELECT DISTINCT ((vt1.c0)/(x'')) COLLATE RTRIM, ((((t0.c0)AND(DATETIME(vt0.c0, t0.c0, t0.c0))))OR(((vt0.c0)>=(t0.c0)))), json_extract(t0.c0 COLLATE NOCASE, ((vt1.c0)<=(vt1.c0))) FROM t0;SELECT DISTINCT ((vt1.c0) ISNULL) FROM vt0;SELECT ALL (((+ (t0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((+ (vt0.c0)))) FROM vt0, vt1, t0 GROUP BY (((t0.c0, vt0.c0, vt1.c0))>((t0.c0, vt0.c0, t0.c0))) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT CAST('' AS INTEGER) FROM vt0, t0, vt1 WHERE (CAST((((NULL, x'dc1f', 0.047822201130377495, '0.8226518625914621', x'')) BETWEEN ((1861705215, '15541550', 1.983134594E9, x'd92b', 0.9898712965506765)) AND ((NULL, '^Tw', 'G都w㎞', '-1070715819', NULL))) AS INTEGER)); -- 0ms;
SELECT DISTINCT '>''', ((((0xffffffffa869e72c) BETWEEN (vt0.c0) AND (vt1.c0)))|((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))), ((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0)<(t0.c0)))) FROM vt1 WHERE (((1595777567)!=((('(L(')=(NULL)))));SELECT ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE), (((vt1.c0)<<(vt0.c0)) IN ()), COUNT(*) FROM vt1, t0;SELECT DISTINCT ((((CAST(t0.c0 AS INTEGER))OR(((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0)))))AND(CASE t0.c0  WHEN vt0.c0 THEN '294884594' WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END)) FROM t0 WHERE (((UPPER(DISTINCT '뇖<[MVo ')) ISNULL));SELECT (NOT (((NULL) BETWEEN (t0.c0) AND (vt1.c0)))) FROM t0, vt1, vt0 WHERE ('') ORDER BY ((((((vt0.c0)OR(0.8049261402688668)))OR(vt1.c0)))>=(-387387365))  NULLS FIRST, (~ (((t0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))); -- 0ms;
SELECT DISTINCT ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0) NOTNULL))) FROM vt0, t0;SELECT DISTINCT (((- (vt1.c0)))|(((((((((((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(t0.c0)))OR(vt0.c0)))) FROM vt0, t0, vt1; -- 0ms;
SELECT DISTINCT ((vt1.c0) IS FALSE) COLLATE NOCASE FROM t0 WHERE ((~ (((NULL) NOT BETWEEN (0.8052677435690441) AND ('879156126')))));SELECT ALL CAST(TYPEOF(t0.c0) AS REAL) FROM vt1 ORDER BY SQLITE_VERSION() DESC;SELECT ALL (((x'', vt0.c0, vt0.c0, 1.983134594E9, t0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 WHEN 0.9753163994922488 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS TEXT), UNLIKELY(vt1.c0), t0.c0)) AND ((((((vt1.c0)OR(t0.c0)))OR(t0.c0)), NULL COLLATE RTRIM, CASE WHEN '6~#s' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN 0.8257321679287787 END, TOTAL(t0.c0), vt0.c0))) FROM vt0, vt1, t0 WHERE (((((('1<<<')<>(0.0744649664052427))))<=(((106885642 IN ()))))); -- 0ms;
SELECT CASE WHEN TRIM(DISTINCT vt0.c0) THEN ((vt1.c0)&(vt1.c0)) WHEN '' COLLATE RTRIM THEN ((((t0.c0)AND(vt0.c0)))OR(0.3476938892252013)) WHEN CAST(t0.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) WHEN ((t0.c0) NOT NULL) THEN TRIM(vt0.c0) WHEN ((t0.c0)<<('''a')) THEN CAST(t0.c0 AS NUMERIC) ELSE COUNT(*) END, ((0.6842148042077902) NOT BETWEEN ('6I') AND (((vt0.c0)&(vt1.c0)))), ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)IS((((('╦㙥퉘I\BfZ7')OR(vt0.c0)))OR(t0.c0)))) FROM vt1 WHERE (((((x'')AND((0.5142158241902092 IN (0Xc4443e2)))))OR((x'd0de' IN ())))) ORDER BY vt0.c0, (vt1.c0 IN (t0.c0)) COLLATE BINARY;SELECT ALL CASE WHEN ((t0.c0)+(t0.c0)) THEN json_insert(vt1.c0, vt0.c0, vt0.c0) END FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT ((((t0.c0)IS NOT(vt1.c0)))<(((vt1.c0) ISNULL))), vt0.c0, ((((((((t0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0 COLLATE BINARY)) FROM vt1, t0, vt0 WHERE ((((NOT ('4')))-(((0.47444210325291913) BETWEEN ('ꃿ]') AND (1983134594))))) LIMIT -1187902897; -- 0ms;
SELECT ALL ((((vt0.c0)GLOB(vt0.c0)))<<((1306624969 IN ()))) FROM t0, vt0; -- 0ms;
SELECT ALL (NOT (((t0.c0)+(t0.c0)))) FROM t0, vt0 WHERE ((((((((((((x''))<=((x'bd8c'))))OR(((((1.058391382E9)OR('<*v\nYd')))AND(x'')))))AND(x'')))AND((((((((('1501339923')AND(NULL)))OR(x'')))AND(-1.468886908E9)))OR(0.9850872746906243)))))AND(((x'') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((((((((NULL)OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))/(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt0, vt1 NOT INDEXED, t0 WHERE ((- ((0.14101403547605718 IN (NULL))))) ORDER BY CASE WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) THEN vt1.c0 END; -- 0ms;
SELECT DISTINCT TYPEOF(json_object(vt1.c0, 0Xffffffff847dafa7)), CASE ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN TRIM(t0.c0, vt0.c0) THEN ((vt1.c0)>=(vt1.c0)) ELSE CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END, ((GROUP_CONCAT(vt1.c0))%(0.8986353335886929)) FROM t0, vt1 GROUP BY (+ (x'')), ((CAST(vt1.c0 AS INTEGER))<(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)), vt0.c0;SELECT ALL (~ (vt0.c0)) COLLATE NOCASE FROM t0, vt0, vt1 WHERE ((('1393826091') NOT NULL)) INTERSECT SELECT ALL x'e6b16d79' FROM vt0, t0 WHERE ((((('3ৃ')IS NOT(x'ca39')))-((((1830991432))==((x'')))))); -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM vt0 WHERE ((((x'0b63' IN ()))<<(NULL COLLATE BINARY))); -- 0ms;
SELECT ALL x'' FROM t0 GROUP BY ((((+ (vt0.c0))))>=((ROUND(vt1.c0, vt1.c0)))), ((CAST(vt1.c0 AS BLOB)) IS TRUE), x'3a92';SELECT ((CAST(vt1.c0 AS BLOB))IS(((vt1.c0) IS FALSE))), (~ ((vt1.c0 IN ()))), ((((((x'')AND(vt1.c0)))AND(vt1.c0)))&((vt0.c0 IN ()))) FROM vt1, t0, vt0 WHERE (((CASE WHEN NULL THEN x'' ELSE '-2125129043' END) NOT NULL)) GROUP BY ((('go褪h', (t0.c0 IN (vt1.c0)), ((vt1.c0) NOTNULL)))>((t0.c0 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC), t0.c0))) LIMIT 560021356; -- 0ms;
SELECT SUM(NULLIF(vt1.c0, vt1.c0) COLLATE NOCASE) OVER () FROM vt0, t0;SELECT DISTINCT MAX(((vt0.c0) NOT NULL)) FROM t0 WHERE ((- (GLOB(x'', 'Jz'''))));SELECT DISTINCT ((((CAST(t0.c0 AS BLOB))OR(((vt0.c0)>=(vt1.c0)))))OR(0.20130691231395204)), CAST(t0.c0 AS NUMERIC), (- (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))) FROM vt1, vt0, t0 WHERE ((- (((x'')LIKE(0.3217704107879208))))); -- 0ms;
SELECT (((vt0.c0 IN ())) IS TRUE) FROM vt1, t0, vt0 WHERE (CAST(((x'1f8f')||('456383114')) AS TEXT)); -- 0ms;
SELECT 0.4849423048610694 COLLATE RTRIM, CAST(x'' COLLATE BINARY AS INTEGER), (NOT (((((((((((((t0.c0)OR(vt1.c0)))OR(0.014069360839059741)))AND(t0.c0)))AND(6.06990091E8)))AND(vt0.c0)))OR(t0.c0)))) FROM t0 LIMIT 1022626571;SELECT DISTINCT AVG(vt1.c0) OVER ( RANGE BETWEEN  CURRENT ROW AND CAST((NOT (vt0.c0)) AS REAL) PRECEDING) FROM vt0, vt1 INDEXED BY i47, t0 WHERE ((((~ (0.2718721868470668)))+(((x'') BETWEEN (x'') AND ('-148695712')))));SELECT DISTINCT ((((((0.4022335560063408) NOTNULL))AND(((t0.c0)LIKE(vt0.c0)))))AND(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0 WHERE (TRIM(DISTINCT x'' COLLATE NOCASE)) LIMIT 117353968;SELECT ALL COUNT(*) OVER (), COUNT(CAST(t0.c0 AS REAL)), (((~ (vt0.c0))) IS FALSE) FROM vt1, vt0, t0 NOT INDEXED LIMIT -1619871681; -- 0ms;
SELECT ALL TRIM(DISTINCT highlight(t0.c0, vt0.c0, t0.c0, t0.c0), ((vt1.c0) IS TRUE)), FIRST_VALUE(CASE WHEN (((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, vt1.c0, t0.c0))) THEN (t0.c0 IN ()) ELSE CASE WHEN '-1399144573' THEN t0.c0 ELSE t0.c0 END END) OVER (), vt0.c0, AVG(vt1.c0), NULL FROM vt0, t0, vt1 ORDER BY ((vt1.c0) NOTNULL), CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) AS BLOB) DESC  NULLS LAST;SELECT DISTINCT MAX(((((((((0.7858630307528057)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt1.c0))) FROM vt1, vt0;SELECT ALL COUNT(*) FILTER(WHERE ((((~ (vt0.c0)), ((vt0.c0)IS(vt0.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), TYPEOF(DISTINCT x''), CAST(vt0.c0 AS TEXT))))) OVER ( ORDER BY LIKE(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), t0.c0, 'q') ASC) FROM vt0, vt1, t0 GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT MAX((t0.c0 IN (vt0.c0, vt0.c0))), CAST(((vt1.c0) NOT NULL) AS INTEGER), (((((vt1.c0)) NOT BETWEEN (('3(')) AND ((vt1.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (((((t0.c0)AND(t0.c0)))OR(x'')))), '', t0.c0 FROM t0;SELECT ((AVG(vt1.c0)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (TOTAL(t0.c0))) FROM vt1 INNER JOIN t0 ON ((((t0.c0 IN ())))<=((vt0.c0))) WHERE ((~ (((0.29134957290576435) NOT BETWEEN (NULL) AND ('-1102660338')))));SELECT CHAR(COUNT(*), ((((x'952b')OR(vt1.c0)))AND(t0.c0)), (vt0.c0 IN ()), (~ (t0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))) FROM t0, vt0;SELECT DISTINCT ((vt0.c0) IS FALSE) COLLATE NOCASE FROM vt0, vt1 GROUP BY json_valid(CAST(vt1.c0 AS NUMERIC)) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE); -- 1ms;
SELECT DISTINCT CAST(DATETIME(vt1.c0, vt0.c0, t0.c0, t0.c0, t0.c0) AS BLOB) FROM t0 WHERE ((- ((5.82173041E8 IN ()))));SELECT ALL NTH_VALUE(TYPEOF((~ (vt0.c0))), vt1.c0) OVER () FROM vt0, vt1, t0; -- 0ms;
SELECT ALL 0.24280382978155313, (- (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)), (~ (vt1.c0)) COLLATE RTRIM FROM vt0, vt1, t0 WHERE (((CASE WHEN NULL THEN 0.22818376015035202 WHEN '턔c-' THEN 0.8397304946715463 WHEN 0.4496095057890418 THEN 0.10381854298229798 WHEN '509273127' THEN NULL WHEN NULL THEN 0xffded08 ELSE 0.3317368725211599 END)*(((('-565945608'))<((NULL)))))); -- 0ms;
SELECT ALL LAG(((((((t0.c0) NOT BETWEEN (t0.c0) AND (x'')))OR((((vt0.c0))<>((vt0.c0))))))AND((t0.c0 IN ()))), (((+ (vt1.c0)))>(UNLIKELY(vt0.c0))), CASE vt1.c0 COLLATE NOCASE  WHEN '' THEN (t0.c0 IN ()) ELSE vt1.c0 END) OVER () FROM t0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((NULL)||(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))<=((SUM(vt1.c0)))), ((vt0.c0) BETWEEN (x'') AND (t0.c0)) COLLATE NOCASE FROM vt0, vt1, t0; -- 1ms;
SELECT AVG((((vt1.c0))>((0.27309807262061425))) COLLATE RTRIM) FROM vt1, t0 WHERE (((NULL)+((((((((('now')OR('0.5988063205285471')))OR('')))AND(x'')))OR(NULL))))) GROUP BY (~ (vt1.c0)), (- ((NOT (t0.c0)))), CASE '滜q*F턟i!!7' COLLATE NOCASE  WHEN t0.c0 COLLATE RTRIM THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END HAVING ((CASE WHEN vt1.c0 THEN t0.c0 END) IS TRUE);SELECT DISTINCT vt1.c0, NULL, (((~ (t0.c0)))&(0x47804714)) FROM vt0, t0, vt1 WHERE (((((x'') NOT BETWEEN ('h') AND (x'')))+(((0.04878853176453335) ISNULL)))) GROUP BY CAST('㶕#W9]j' AS TEXT) HAVING ((((x'')>=(vt0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (vt1.c0)); -- 0ms;
SELECT DISTINCT (((x'', t0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, ((t0.c0)LIKE(vt1.c0)), (('')!=(0.35802062197685725)))) AND ((x'', 540798919, COUNT(*)))) FROM vt1 NOT INDEXED, vt0 WHERE ((((NOT (x'')))<<(((((((((-1.300480619E9)OR(x'')))OR(NULL)))OR(NULL)))AND(x'55da')))));SELECT ((t0.c0 COLLATE RTRIM) NOT BETWEEN (CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND ((((vt1.c0))==((vt0.c0))))) FROM vt0 ORDER BY CASE WHEN (NOT (t0.c0)) THEN (~ (vt0.c0)) END ASC;SELECT DISTINCT (vt1.c0 IN ()) COLLATE NOCASE FROM vt1, t0; -- 0ms;
SELECT LOWER(DISTINCT CAST(vt0.c0 AS BLOB)) FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)IS NOT(NULL)))*(((vt0.c0)%(vt0.c0)))) INNER JOIN vt1 ON (- ((vt0.c0 IN (t0.c0, vt1.c0)))); -- 1ms;
SELECT ALL (CAST(t0.c0 AS REAL) IN ()) FROM vt1, vt0, t0 WHERE (((((x'') IS TRUE))>('H>ܳq' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((t0.c0 IN (t0.c0, vt0.c0)) IN ()) FROM vt1 CROSS JOIN t0 ON (((vt0.c0)>>(vt0.c0)) IN ()) WHERE ((((0x710bf3ca)) BETWEEN ((CAST(NULL AS NUMERIC))) AND ((((NULL)-(0.7902807059809481)))))); -- 0ms;
SELECT ALL CASE WHEN t0.c0 THEN ((t0.c0)>(t0.c0)) ELSE CAST(vt0.c0 AS TEXT) END FROM vt0 WHERE (((((NULL) IS TRUE))<((('')>(NULL)))));SELECT DISTINCT CASE t0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN t0.c0 END THEN CAST(vt0.c0 AS BLOB) ELSE HEX(DISTINCT t0.c0) END FROM t0, vt0, vt1 WHERE ((((-1767646335 IN ()))IS NOT((NULL IN (NULL))))) GROUP BY (((t0.c0 IN ()))+(((vt1.c0)<(vt0.c0)))), (((('') NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE), ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CAST(-1001048902 AS TEXT)) AND ((t0.c0 IN ('-971048279')))) ORDER BY t0.c0 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 COLLATE BINARY THEN (+ ('+d')) END FROM vt0, t0, vt1 WHERE (NULLIF(DISTINCT ((NULL)==('{vpRଋN')), ((0xffffffff91a090f0)OR(NULL)))); -- 0ms;
SELECT DISTINCT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN (t0.c0 COLLATE NOCASE)) FROM t0, vt0 GROUP BY t0.c0 COLLATE NOCASE, CAST(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER), CHAR(TYPEOF(t0.c0)) HAVING load_extension(vt1.c0 COLLATE BINARY, vt0.c0 COLLATE RTRIM);SELECT AVG(((t0.c0) NOTNULL)) OVER () FROM vt1, vt0, t0 WHERE (CASE ('540798919' IN ())  WHEN load_extension('Nct<') THEN x'cee7' COLLATE BINARY WHEN (('1476624770') IS FALSE) THEN (NULL IN ()) WHEN (('-301317000')IS(0.11838852524043675)) THEN NULLIF(0Xffffffffcf75ae19, '166929986') ELSE ((-2089266473) NOT NULL) END) LIMIT 1834023974 OFFSET 26314443;SELECT vt0.c0 FROM t0, vt1 GROUP BY CASE WHEN ((vt0.c0)&(t0.c0)) THEN 0.4034965452071587 END LIMIT -1799084552 OFFSET 605225148;SELECT ((((((((CAST(vt0.c0 AS NUMERIC))AND(((t0.c0)<=(vt0.c0)))))OR(SUM(t0.c0))))AND(((vt1.c0)LIKE(t0.c0)))))AND(CAST(t0.c0 AS TEXT))) FROM vt0, vt1, t0 WHERE ((((('w''T*jA9Hm')LIKE(-2.031608561E9)))%((NOT ('%*V^[oy'))))); -- 0ms;
SELECT DISTINCT NULL FROM t0, vt0, vt1 GROUP BY CAST(t0.c0 AS REAL) COLLATE RTRIM, 3.89321208E8, x'', ((CAST(vt1.c0 AS TEXT))&(((vt1.c0) NOT NULL))), LIKELY((('-383591916') NOTNULL)) HAVING (((vt0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 END)) AND ((COUNT(vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((t0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY, (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((('1451297596')AND(vt1.c0))) AND (((((t0.c0)OR(vt0.c0)))OR(t0.c0)))), CASE WHEN ((vt1.c0)<(t0.c0)) THEN t0.c0 WHEN ((((vt0.c0)AND('1435486173')))OR(t0.c0)) THEN ((t0.c0) NOTNULL) WHEN COUNT(*) THEN SQLITE_VERSION() ELSE MAX(vt0.c0) END FROM vt1, t0 WHERE ((+ (CAST(x'62124f05' AS INTEGER))));SELECT DISTINCT ((((vt1.c0)-(t0.c0))) NOT NULL), ((((t0.c0)OR(vt1.c0)))OR(t0.c0)) COLLATE BINARY, ((t0.c0)OR(vt1.c0)) COLLATE RTRIM FROM vt0, t0 GROUP BY LIKELY(((((((((x'')OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0))), ((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 END) IS TRUE), vt1.c0 HAVING GROUP_CONCAT(((t0.c0)|(t0.c0)));SELECT ALL ((((((((IFNULL(0.9873220190054145, t0.c0))OR(DATETIME(t0.c0, x'975a', t0.c0, vt1.c0, 161964964))))OR(CASE 0.5634052076739047  WHEN t0.c0 THEN vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (0.31958445327020735) AND (vt1.c0)))))AND(((vt0.c0)<>(vt0.c0)))) FROM vt0, vt1;SELECT ((((vt0.c0)&(vt0.c0)))/(TOTAL(NULL))) FROM vt1 WHERE ((- (0.9972359940225927)) COLLATE BINARY);SELECT vt1.c0 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (TRIM(vt1.c0)) AND (t0.c0)) FROM vt0 WHERE (CAST(CAST(0x13ec3b94 AS NUMERIC) AS TEXT));SELECT ALL vt0.c0 FROM vt0, vt1 ORDER BY (((((((vt1.c0)AND(NULL)))AND(vt0.c0))))<=((((542739815) NOT BETWEEN (vt0.c0) AND (''))))) DESC; -- 0ms;
SELECT DISTINCT ((((vt1.c0)+(t0.c0))) NOT NULL) FROM t0, vt0;SELECT DISTINCT t0.c0 FROM vt1, vt0, t0 WHERE ('-1517443346'); -- 0ms;
SELECT ALL ((CASE WHEN t0.c0 THEN 'd]t2MAXI' END)>=((vt0.c0 IN ()))) FROM t0, vt0 LIMIT 1896608714 OFFSET -833444955; -- 0ms;
SELECT DISTINCT SUM((vt0.c0 IN ())), (((t0.c0 IN ())) IS FALSE), t0.c0 FROM vt1, vt0;SELECT DISTINCT (+ ('328568847')), (((vt1.c0 COLLATE NOCASE))<>((x''))), ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(NULL)))OR(t0.c0)))AND(vt1.c0)))|(NULL)) FROM vt1, vt0, t0 WHERE ((0.16480904306290534 IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT vt0.c0, SUM(MIN(((vt1.c0)IS(x'')))), vt1.c0, ((((NULL)>(NULL))) IS FALSE), COUNT(((NULL) IS FALSE)) OVER (), (((+ (vt1.c0)))IS NOT(CAST(vt1.c0 AS TEXT))), ((((vt1.c0)<<('%d'))) BETWEEN ((~ (vt0.c0))) AND ((((vt0.c0))<>((t0.c0))))) FROM vt1 NOT INDEXED, t0;SELECT (((ABS(vt1.c0)))<=((vt1.c0))), ((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR(((t0.c0) IS TRUE))), (- (((vt0.c0)<<(vt0.c0)))) FROM vt0, vt1, t0 WHERE ((((x'', '1495896317', '986792139')) NOT BETWEEN ((NULL COLLATE BINARY, CAST(x'' AS BLOB), ((NULL) NOT NULL))) AND (((('')>=(' ')), UNLIKELY('-1300480619'), ((0X31c527df)IS(-2073821254)))))) ORDER BY (vt1.c0 IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY FROM vt0, vt1 NOT INDEXED, t0; -- 0ms;
SELECT CASE (t0.c0 IN ())  WHEN x'' THEN MAX(vt1.c0) ELSE CAST(vt0.c0 AS INTEGER) END FROM t0, vt1;SELECT DISTINCT AVG((x'202d' IN ())) COLLATE RTRIM FROM vt1, vt0, t0 LIMIT 1495896317 OFFSET 655898589; -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c0)) ISNULL) FROM vt0, t0, vt1 WHERE (((-790102253 IN ()) IN ())); -- 0ms;
SELECT ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END)OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)) FROM vt1, vt0 WHERE ((((NULL, load_extension(-5.1075465E7), ((0.6660327555884137) BETWEEN (NULL) AND (NULL))))<=((CASE WHEN 0.43934046844323726 THEN NULL END, ((0.6671025147342943)-('1129542474')), ((NULL) BETWEEN (0.2891415145127608) AND (NULL)))))) ORDER BY -1.072873304E9 ASC;SELECT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((((vt1.c0) NOTNULL)))) FROM vt0, t0, vt1 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT DISTINCT ((vt0.c0) IS FALSE) COLLATE BINARY FROM t0, vt1 WHERE (((((((x'c3ee')OR(0.3006489971139684)))AND(NULL)))>=(('Xl1n' IN ()))));SELECT DISTINCT '' FROM vt0, vt1 WHERE (CAST((NULL IN ()) AS TEXT)) GROUP BY (((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9790943932553035))))IS NOT('M'));SELECT 0.4991472962564538 FROM vt0, t0, vt1; -- 0ms;
SELECT ALL ((((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL) FROM vt0, t0 WHERE (CAST(SQLITE_VERSION() AS INTEGER)) ORDER BY ((CAST(vt1.c0 AS TEXT))>(t0.c0));SELECT CAST(vt1.c0 AS BLOB), AVG(MIN(vt1.c0) COLLATE RTRIM), NTILE((CASE x'8e16'  WHEN vt0.c0 THEN t0.c0 END IN ())) OVER () FROM vt0, vt1, t0;SELECT DISTINCT CASE (~ (vt0.c0))  WHEN (((t0.c0, 0.494711376593432, vt0.c0))<((t0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END END FROM t0, vt1 WHERE (((0.8827376630868877)>>(0.8363874903852855)));SELECT DISTINCT ((LIKELY(DISTINCT t0.c0)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((vt1.c0)>>(vt0.c0)))) FROM vt1, vt0, t0 WHERE ((((NULL, NULL, 1100769047)) BETWEEN ((SUBSTR(0.05326299630650033, 'D?'), (- (0xffffffff88ca4aeb)), ((((NULL)AND(NULL)))OR(-1735600970)))) AND ((((NULL) ISNULL), ((NULL)IS(NULL)), CAST('0.2786741837436383' AS INTEGER))))); -- 0ms;
SELECT COUNT(*) COLLATE BINARY, ((((vt1.c0) NOT NULL))||(LIKELY(DISTINCT vt0.c0))), '{LS\n' FROM vt0 WHERE ((((((((((((NULL))>=((x''))))AND(((0X34fad1b7)*('N')))))AND(CASE WHEN 0.43280495887292847 THEN -11889987 ELSE '-36675975' END)))AND(IFNULL(DISTINCT NULL, 0.34540934993894834))))OR(UPPER(x''))));SELECT ALL SQLITE_COMPILEOPTION_GET(((((vt0.c0)AND(t0.c0)))OR(vt1.c0))) FROM t0 ORDER BY (+ (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;SELECT ALL (((vt0.c0 IN (vt0.c0))) IS TRUE), ((CASE vt1.c0  WHEN vt0.c0 THEN 0.44413599747181887 END) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((((vt0.c0)OR(vt1.c0)))AND(t0.c0)))), CASE WHEN (((vt1.c0, 0xfffffffff4848396, vt1.c0)) BETWEEN ((vt0.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))) THEN ((((t0.c0)AND(vt1.c0)))OR(vt0.c0)) END FROM vt0 WHERE (NULL);SELECT ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY FROM vt1, t0 LIMIT 328568847 OFFSET 1065211161; -- 0ms;
SELECT DISTINCT x'', CASE CAST(vt1.c0 AS INTEGER)  WHEN vt1.c0 COLLATE BINARY THEN (((t0.c0, vt1.c0, vt1.c0))==((vt0.c0, t0.c0, t0.c0))) END, LAST_INSERT_ROWID() FROM vt1 WHERE ((((+ (x'')))IS NOT((('986792139')%(0.7046690642816532)))));SELECT ALL (~ (((t0.c0) IS FALSE))) FROM vt1, vt0 WHERE (((SQLITE_COMPILEOPTION_USED(0x5c2587e4))%(((NULL) NOT NULL))));SELECT DISTINCT 0.595616794491013, LIKELIHOOD(DISTINCT ((vt1.c0)-(t0.c0)), 0.8558989156692832), ((((vt0.c0)<=(t0.c0))) BETWEEN (0.7804497773068475) AND (((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))) FROM vt0, t0;SELECT DISTINCT ((((((((CASE vt0.c0  WHEN t0.c0 THEN x'' END)AND((((vt1.c0, vt0.c0, vt1.c0))>=((vt0.c0, vt0.c0, t0.c0))))))AND(CAST(t0.c0 AS REAL))))AND(((vt0.c0)||(t0.c0)))))AND(((((vt1.c0)AND(t0.c0)))AND(vt0.c0)))), ((((((((CAST(vt0.c0 AS REAL))OR(((NULL)<(t0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(((((vt1.c0)AND('ELPVＸ]~')))AND(t0.c0)))))OR(LIKELY(t0.c0))), (- (((0.9121748276375117) IS FALSE))) FROM vt1, t0, vt0 ORDER BY CASE (t0.c0 IN ())  WHEN LIKELY(DISTINCT vt0.c0) THEN SUBSTR(t0.c0, vt1.c0) END DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((0xffffffffa587b53e)) BETWEEN (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((vt1.c0))) FROM vt0 WHERE ((+ (((('')) NOT BETWEEN (('1009822913')) AND ((NULL)))))) LIMIT -144730029 OFFSET 1289430224;SELECT COUNT(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))), COALESCE(DISTINCT ((t0.c0)GLOB(vt0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)), ((-842152135)!=(vt0.c0)), (((t0.c0))<((t0.c0)))), ((TYPEOF(t0.c0)) IS TRUE) FROM t0, vt1, vt0 WHERE (CAST(LIKELIHOOD(0.359943043824961, 0.11087774928160099) AS TEXT)); -- 1ms;
SELECT ALL ((vt1.c0)+(vt0.c0)) COLLATE NOCASE FROM vt0, t0;SELECT DISTINCT vt1.c0, ((vt1.c0 COLLATE RTRIM) BETWEEN ('528986167') AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END)), (((NOT (t0.c0)))/(CAST(t0.c0 AS INTEGER))) FROM vt1, t0, vt0 WHERE ((CASE x''  WHEN 1819803751 THEN '' WHEN x'' THEN 1.317161164E9 WHEN NULL THEN NULL END IN (((NULL) IS FALSE), CASE x''  WHEN 'Z~%c#WX' THEN '691532684' ELSE 0.8742806524005919 END))); -- 0ms;
SELECT ALL LIKELIHOOD(t0.c0 COLLATE RTRIM, 0.44156309404063543) FROM vt1;SELECT DISTINCT AVG(((NULL)GLOB(vt1.c0))) FROM t0 ORDER BY ((((NULL)AND(((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((vt0.c0)<(vt1.c0)))) DESC;SELECT DISTINCT ((t0.c0 COLLATE RTRIM) BETWEEN ('-1508704112') AND (IFNULL(DISTINCT vt0.c0, t0.c0))) FROM vt0, t0 GROUP BY ((((((((((((((vt0.c0)=(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((t0.c0)<=(vt1.c0)))))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR('0.6348212189303872')))OR(vt0.c0 COLLATE BINARY)))AND(t0.c0)) HAVING (((vt0.c0 IN ())) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((~ (vt1.c0)))) LIMIT -230296331;SELECT ALL CASE (vt0.c0 IN (t0.c0, t0.c0))  WHEN (((vt1.c0)) NOT BETWEEN (('542189503')) AND ((t0.c0))) THEN 0.1393021447274 ELSE ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) END, ((vt1.c0 COLLATE BINARY) NOT NULL), LIKE(vt0.c0, ((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)), '4'), FIRST_VALUE((((vt0.c0) BETWEEN (x'') AND (NULL)) IN (((vt1.c0)GLOB(t0.c0)), (t0.c0 IN ())))) OVER (), (((((0.8049261402688668))>((vt0.c0))))/(SUM(vt0.c0))), ((t0.c0)>=(((((((((vt0.c0)OR(t0.c0)))OR(0.4549514358066351)))AND(t0.c0)))OR(vt0.c0)))), COUNT(*) FROM t0, vt1, vt0 WHERE ((+ ((0.027563215498015547 IN ())))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0 WHERE ((((('591831114', 9223372036854775807, x''))<=(('-1288813122', 'Gl', 0.8780703755594433))) IN ())); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((((vt0.c0, t0.c0, vt1.c0))>=((vt0.c0, t0.c0, vt0.c0))))) AND (((~ (t0.c0))))) FROM vt1, t0, vt0 WHERE (((CAST('-1732711201' AS NUMERIC)) IS FALSE)); -- 0ms;
SELECT ALL ((((vt0.c0) NOTNULL))>((t0.c0 IN (t0.c0)))) FROM vt0, t0, vt1 WHERE ('V?Gy'); -- 0ms;
SELECT (((vt1.c0 IN ()))>>(((vt0.c0)<(t0.c0)))), vt1.c0, IFNULL(INSTR(vt1.c0, vt0.c0), (((vt0.c0, vt0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((vt1.c0, t0.c0, vt0.c0)))) FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END THEN CASE WHEN t0.c0 THEN '4' WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END ELSE (vt1.c0 IN ()) END WHERE ((NOT (('T0h,' IN ()))));SELECT ALL CASE vt1.c0  WHEN '1887245235' THEN ((((vt1.c0)AND(t0.c0)))AND(vt1.c0)) ELSE (~ (vt0.c0)) END FROM vt0, t0, vt1; -- 1ms;
SELECT DISTINCT (((((vt0.c0))>((vt0.c0))))AND(UPPER(DISTINCT vt1.c0))) FROM vt1;SELECT DISTINCT GROUP_CONCAT((vt0.c0 IN (vt1.c0, vt1.c0, -968725765))) COLLATE RTRIM, CASE WHEN (((x'', NULL, '|?|byjtr.'))<((vt0.c0, t0.c0, t0.c0))) THEN (((t0.c0, vt1.c0, t0.c0))<((t0.c0, '0.6660327555884137', vt1.c0))) WHEN t0.c0 COLLATE RTRIM THEN (+ (vt1.c0)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0)OR(t0.c0)) END, AVG(CAST(vt0.c0 AS REAL)) OVER () FROM t0;SELECT DISTINCT (NOT (((t0.c0)|(vt0.c0)))) FROM vt1, t0 WHERE ((((((((('0zQ')AND(x'')))OR(x'')))OR(NULL)))OR(NULL)) COLLATE RTRIM);SELECT ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY FROM vt0, vt1, t0 WHERE (CASE CAST(1.10585197E9 AS NUMERIC)  WHEN ((((-1.750575687E9)AND(x'd51a')))AND(NULL)) THEN (NOT ('686229339')) ELSE CASE 'kKz6N'  WHEN 0.1283114441278851 THEN '' ELSE x'' END END); -- 0ms;
SELECT ALL TRIM(UPPER(NULL), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) FROM vt0;SELECT (((((vt1.c0)==(NULL)), ((vt1.c0)+(t0.c0)), 's)' COLLATE RTRIM))>=((((vt0.c0)LIKE(vt0.c0)), ((vt0.c0) NOT BETWEEN ('') AND (vt1.c0)), vt1.c0))), CASE (NOT (vt0.c0))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((vt0.c0, vt0.c0, vt1.c0))<=((x'', vt0.c0, vt0.c0))) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((t0.c0))<>((t0.c0))) THEN TOTAL(t0.c0) WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE RTRIM WHEN ((((vt1.c0)OR(t0.c0)))OR(vt0.c0)) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) END, ((COUNT(*)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) AND (((vt1.c0)IS(vt0.c0)))) FROM vt1, t0 WHERE (CAST(CASE 0.4468699729260124  WHEN x'' THEN NULL WHEN NULL THEN '䅯}iY9| 5f' WHEN 0.12708508422965858 THEN '582173041' END AS TEXT));SELECT ALL ((0.183417919268122) ISNULL), (+ (vt0.c0)) COLLATE RTRIM, LOWER(GROUP_CONCAT(vt0.c0)), NULL, (((vt0.c0 IN ()))LIKE('0.04299766939520144')) FROM vt0; -- 0ms;
SELECT DISTINCT 't/' COLLATE RTRIM FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT (('-980539627') NOT BETWEEN ((NOT (vt0.c0))) AND (vt0.c0)), ((((NULL) NOTNULL)) IS TRUE), vt1.c0 FROM vt0, vt1, t0 WHERE (((((NULL)>=(NULL)))-((('vylmA') BETWEEN (0x602d2960) AND (NULL))))); -- 0ms;
SELECT ALL AVG(((vt1.c0) ISNULL)) FROM vt0, t0 GROUP BY CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN t0.c0 THEN -1803291837 ELSE t0.c0 END COLLATE BINARY HAVING ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(COALESCE(vt0.c0, '?x'))))OR(ABS(t0.c0)));SELECT ((SUM(vt1.c0)) IS TRUE) FROM vt0, vt1 WHERE ((((NULL))!=(('444735425'))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE FROM vt0, t0 WHERE (CAST((~ (0.6336592877591308)) AS BLOB)); -- 0ms;
SELECT ALL (- (LIKELY(DISTINCT vt1.c0))), json_array(((vt0.c0) IS FALSE), ((vt0.c0)>(vt0.c0))), SUM(QUOTE(x'')) FROM t0, vt0 GROUP BY '>\n\rr7L' HAVING vt0.c0 LIMIT 528986167 OFFSET 295683593;SELECT DISTINCT (((- (t0.c0)))&((t0.c0 IN ()))), ((MAX(t0.c0)) NOT BETWEEN (((-5.65945608E8)/(vt0.c0))) AND (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((((vt1.c0) NOT NULL))OR(vt0.c0)))OR(((t0.c0)!=(0x2937f38c)))))AND(((vt0.c0)/(t0.c0)))))AND((((NULL, t0.c0, t0.c0)) BETWEEN ((vt1.c0, NULL, vt0.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))) FROM vt0, vt1, t0 WHERE ((((NULL)) NOT BETWEEN ((((0x76343b82)<=(NULL)))) AND (('1984274203' COLLATE BINARY)))) GROUP BY CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN x'' END; -- 0ms;
SELECT (- ((((vt1.c0, vt0.c0, t0.c0))<=((vt0.c0, vt0.c0, '1674909503'))))) FROM vt1, t0, vt0; -- 0ms;
SELECT ALL ((((((vt1.c0) NOTNULL))OR(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((-7.46396656E8)AND(vt0.c0)))) FROM vt0, t0 WHERE (('1784995393' IN (((x'f0c1')<<(0x563588cd)))));SELECT ALL json_insert(t0.c0, vt1.c0, t0.c0, vt0.c0, x'', t0.c0, vt0.c0) COLLATE RTRIM, (ABS(DISTINCT t0.c0) IN ()), ((((vt1.c0) NOT NULL))>=(x'0621')), x'62ff625e171f', ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)<<((- (vt1.c0)))) FROM t0, vt1 WHERE (((((0.20232636209951127)>>(NULL)))|((('䇌㇨') NOT NULL)))) GROUP BY ((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN (CAST(t0.c0 AS REAL))), ((((('-1750575687')) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))*(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))), NULL HAVING ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))OR(((((((((((((vt0.c0)AND(t0.c0)))OR(vt1.c0)))OR(6.06990091E8)))OR(vt0.c0)))AND(t0.c0)))AND(vt1.c0)))))AND(((vt0.c0)>=(t0.c0))));SELECT DISTINCT ((GROUP_CONCAT(vt1.c0))>>(NULL)) FROM vt1, t0, vt0 WHERE (0.2640903667610871); -- 0ms;
SELECT CASE IFNULL(DISTINCT t0.c0, x'')  WHEN NULLIF(vt1.c0, vt0.c0) THEN ((t0.c0) NOT NULL) WHEN (('-1861351083')LIKE(t0.c0)) THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN vt0.c0 END, GROUP_CONCAT((- (vt0.c0))) OVER (), ((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c0) AND (vt0.c0 COLLATE BINARY)) FROM vt1 GROUP BY -599099546 HAVING (((vt1.c0 IN ())) BETWEEN (CASE ''  WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN x'' ELSE vt0.c0 END) AND (MAX(t0.c0)));SELECT DISTINCT ((TOTAL(vt0.c0)) ISNULL) FROM vt0, t0, vt1 WHERE (((((0x4a7538d5) BETWEEN ('D?(>#') AND (0.12437999885156747)))||(((((((((x'f2eb')AND('115121139')))OR(0.7092338760750556)))OR(0.9605517675624828)))AND(0.23051807248719813))))); -- 0ms;
SELECT CAST(((vt0.c0) NOTNULL) AS INTEGER), UNLIKELY(DISTINCT (~ (t0.c0))), ((0.5544479719257343 COLLATE RTRIM) BETWEEN (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (x'')) FROM vt0, t0, vt1 WHERE (((((((((((3.37611788E8)AND(NULL)))OR('')))AND('l{')))OR(NULL)))|(CASE '^}䖾310Qꗄ'  WHEN NULL THEN 334248852 ELSE '-1e500' END))); -- 0ms;
SELECT DISTINCT highlight(((t0.c0)!=(vt0.c0)), CAST(t0.c0 AS NUMERIC), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), COUNT(*)) FROM t0 INDEXED BY i26;SELECT DISTINCT TYPEOF(DISTINCT UPPER(vt1.c0)), ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM, ((((IFNULL(vt1.c0, vt1.c0))OR(vt0.c0)))AND(((vt0.c0) NOTNULL))) FROM vt0, vt1; -- 0ms;
SELECT ALL CASE WHEN '417273765' THEN '-1675896647' END FROM vt1, vt0 WHERE ('-1273236521'); -- 0ms;
SELECT DISTINCT '' FROM vt1, t0 WHERE (((('l)m䝚')) BETWEEN ((((('S')) NOT BETWEEN ((0.37352102602024373)) AND ((x''))))) AND ((CASE WHEN '1476624770' THEN '0.7346364000520491' END)))); -- 1ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1 WHERE (CASE ((0X1d37fd53) ISNULL)  WHEN ((796965848)%(NULL)) THEN ((NULL)=(x'')) ELSE ((0X119394f2)||(NULL)) END); -- 0ms;
SELECT DISTINCT (((((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0))))>=(((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, t0.c0, vt0.c0)))))) FROM t0, vt1, vt0 WHERE (CASE WHEN TRIM(DISTINCT NULL, 0.9441878887777236) THEN ((NULL) NOT BETWEEN (x'2444a325') AND ('-842676549')) END) GROUP BY ((vt0.c0 IN ()) IN ()) HAVING x'81dc' ORDER BY CAST(((t0.c0) IS FALSE) AS BLOB) ASC  NULLS LAST; -- 0ms;
SELECT TOTAL(((vt0.c0) ISNULL)), (('IBf5') ISNULL) COLLATE BINARY, x'' FROM vt1, vt0, t0 WHERE (((x'') NOT BETWEEN (CAST(NULL AS BLOB)) AND (CAST(0.26753133554953035 AS BLOB)))); -- 0ms;
SELECT ((((((('1711908450'))<((vt1.c0))))OR((t0.c0 IN ()))))AND(((t0.c0)LIKE(vt1.c0)))), vt1.c0, LIKELY(((t0.c0)IS('1434660596'))) FROM vt1, t0 WHERE (((((NULL)IS NOT(NULL)))&(0.7109648304128098 COLLATE BINARY))); -- 0ms;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((0X19186cb)AND(0.6959669568092798)))AND(NULL)) IN (CASE 'nw'  WHEN 0.6372519162154893 THEN x'88ec91c3' ELSE x'0b60' END))) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)), (((t0.c0, vt0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((vt0.c0, t0.c0, 0.4957986954069412)))))!=((((NULL)LIKE(vt1.c0)), CAST(vt0.c0 AS NUMERIC), ((t0.c0)AND(vt1.c0))))) DESC  NULLS LAST LIMIT 509967521 OFFSET -427142366; -- 1ms;
SELECT DISTINCT CASE CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END  WHEN LIKELY(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS BLOB) ELSE (- (x'')) END FROM vt0 WHERE (((((((((((-1164914061)OR('0.7195245200322582')))OR(NULL)))OR(x'')))AND(0.12437999885156747))) NOT BETWEEN ((NOT (NULL))) AND (CASE WHEN x'' THEN '0.6546945580858873' WHEN 0.2418033211660039 THEN x'' WHEN '-1491466488' THEN -1076712536 ELSE NULL END)));SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1, vt0; -- 0ms;
SELECT DISTINCT SUM(CAST('	B' AS TEXT)) OVER (), (((((NULL)OR('-28642892')))OR(vt1.c0)) IN ()), COUNT(((t0.c0) IS FALSE)) FROM vt1 WHERE (LENGTH((((((((('/vn')OR('h%xyd	pDN')))OR(0.761071122887273)))OR(0.6546945580858873)))AND(0x242def0b))));SELECT DISTINCT TOTAL((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) FROM t0 WHERE (((CAST(1.586892165E9 AS BLOB)) NOT NULL));SELECT ALL (((t0.c0)-('-1856291592')) IN ()) FROM vt1, t0, vt0 WHERE (((((-1.517377538E9) IS TRUE)) NOT NULL)); -- 0ms;
SELECT (((((((((((t0.c0, vt1.c0, x'673d'))<((t0.c0, vt1.c0, vt0.c0))))OR((vt0.c0 IN ()))))OR((- (vt1.c0)))))AND(TOTAL(vt1.c0))))AND(((vt1.c0)%(vt1.c0)))) FROM vt1, t0, vt0 WHERE ((- (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT AVG(STRFTIME(t0.c0, '-1268485087', vt0.c0)) OVER () FROM vt0;SELECT DISTINCT ((991671042)OR(t0.c0 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT DISTINCT COUNT((vt1.c0 IN (vt0.c0))), CAST(COUNT(*) AS BLOB), ((((t0.c0 IN ()), (~ (t0.c0)), ((vt0.c0) ISNULL)))<=((((t0.c0)/(vt1.c0)), 0.859282502926186, CASE WHEN vt1.c0 THEN t0.c0 END))) FROM vt0 WHERE (((-1300480619)>=(x'c889')) COLLATE BINARY) ORDER BY '%FwfT' LIMIT 635654282;SELECT DISTINCT ((NULL) ISNULL) COLLATE NOCASE FROM vt1, t0 WHERE (CHANGES()) ORDER BY CAST('uM' AS REAL); -- 0ms;
SELECT LAST_INSERT_ROWID() FROM t0, vt0 WHERE ((0.4838329463687987 IN (1522942748, x'')) COLLATE BINARY); -- 0ms;
SELECT ((((((vt0.c0)&(t0.c0)))AND(vt1.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS TEXT))), ((((vt0.c0)!=(vt0.c0)))<>((vt0.c0 IN ()))), ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))OR('_NԃJ[2B'))) AND (vt0.c0)) FROM vt1, t0;SELECT ALL CAST(((x'')+(vt1.c0)) AS TEXT), ABS(DISTINCT CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), CAST(t0.c0 AS BLOB) COLLATE NOCASE FROM t0;SELECT ALL (((t0.c0)) NOT BETWEEN ((SUM(vt1.c0))) AND ((((vt0.c0)GLOB(vt0.c0))))), COUNT(*) OVER (), ((((((vt1.c0)%(vt0.c0)))OR(((vt1.c0)AND(t0.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM t0 ORDER BY CAST(((((t0.c0)AND(vt0.c0)))OR(vt1.c0)) AS BLOB)  NULLS FIRST;SELECT DISTINCT ((((((vt0.c0)OR(t0.c0)))OR(''))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 END) AND ((~ (vt1.c0)))) FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT NULL FROM vt0, vt1 NOT INDEXED, t0; -- 0ms;
SELECT (~ (((vt1.c0)OR(t0.c0)))) FROM vt0;SELECT AVG(x'4639') OVER () FROM vt0, t0 WHERE ('Q' COLLATE BINARY) GROUP BY NULL, vt1.c0 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER) COLLATE NOCASE;SELECT DISTINCT COUNT(*) FROM vt0, t0, vt1; -- 0ms;
SELECT (((vt1.c0)-(vt1.c0)) IN ()) FROM vt0, vt1; -- 0ms;
SELECT ((((MAX(t0.c0))OR((t0.c0 IN ()))))AND(COALESCE(vt0.c0, vt0.c0))) FROM t0 RIGHT OUTER JOIN vt0 ON (0.6578169994632427 IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((-1313690750) BETWEEN (vt1.c0) AND (t0.c0)))) WHERE ((((((('1022626571')OR(0X318a1ffa)))AND('1861535080')))||(((((((((0.16272888439584632)AND(x'')))AND(NULL)))OR('py閙)')))OR(0x707d13b3)))));SELECT DISTINCT (((t0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END)) AND (((((vt1.c0))>((vt1.c0)))))), vt0.c0, CASE vt0.c0  WHEN (((vt0.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((vt0.c0, 0.5620688154257322, vt1.c0))) THEN CAST(vt1.c0 AS TEXT) ELSE SUM(vt0.c0) END, ((((vt0.c0) IS FALSE)) BETWEEN ((vt1.c0 IN ())) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL END)), AVG(CASE WHEN vt1.c0 THEN vt0.c0 END) OVER () FROM vt1, vt0, t0 WHERE ('1351957185'); -- 0ms;
SELECT DISTINCT (NOT (vt1.c0)) COLLATE BINARY, (vt0.c0 IN ()) COLLATE RTRIM, ((((vt0.c0)%(t0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS REAL))) FROM vt0;SELECT MAX((('-591440394')AND(vt0.c0))) FROM t0 WHERE (((CASE WHEN 0.4387471482966825 THEN 0.3232994066955197 WHEN 'ɏ橔' THEN 'o-Q_O	sw!' WHEN 0.24118830038848127 THEN '309495172' END)LIKE('-281962507' COLLATE BINARY)));SELECT (((~ (NULL))) NOT BETWEEN (((0Xffffffff893d151d) ISNULL)) AND (((vt0.c0)LIKE(vt1.c0)))), vt1.c0 COLLATE BINARY COLLATE BINARY, CAST(((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) AS BLOB) FROM vt0, t0;SELECT COUNT(*), vt0.c0 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE, load_extension((~ (vt1.c0)), (t0.c0 IN (vt0.c0))) FROM vt1, t0, vt0 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0xe7c4fc1))) AS REAL), '558339546' ASC  NULLS LAST, ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) ISNULL);SELECT DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE RTRIM COLLATE NOCASE FROM vt1, vt0 WHERE (x'');SELECT DISTINCT ((vt1.c0 IN ()) IN ()), (((+ (vt1.c0)))LIKE(((t0.c0)>(vt1.c0)))), t0.c0 FROM vt0, vt1, t0 WHERE (((((x'')IS NOT(NULL)))%((('l]')AND(']b&(m%?0'))))); -- 0ms;
SELECT ALL CASE ((-2089616462) NOT BETWEEN (t0.c0) AND (vt1.c0))  WHEN (- (t0.c0)) THEN vt0.c0 ELSE ((vt1.c0)<=(t0.c0)) END FROM vt1 WHERE (((x'') BETWEEN ((('-1509345051') BETWEEN (x'') AND (NULL))) AND (CAST(NULL AS NUMERIC))));SELECT ALL ((((((t0.c0))<((vt0.c0)))))=((((((((((t0.c0)OR(x'')))AND(vt0.c0)))AND(vt1.c0)))AND(NULL))))) FROM vt1, t0 WHERE (LIKELY('1595592991') COLLATE NOCASE);