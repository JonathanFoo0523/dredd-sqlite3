-- Time: 2024/06/07 15:35:01
-- Database: database5
-- Database version: 3.40.0
-- seed value: 3495246705
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'5f0a'), ('-1846349029'), (NULL); -- 1ms;
UPDATE vt0 SET c0=NULL WHERE ((((vt0.c0) ISNULL))-(((vt0.c0)<=(vt0.c0)))); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.7097818565219882), (1634187192), ('-642619001'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.08836588342800777); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'41f5'), ('j%W+t{'), (x'0380'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), (-1285128766), ('0.7097818565219882'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.28235429443505444 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))<<(((vt0.c0)GLOB(vt0.c0)))); -- 0ms;
UPDATE vt0 SET c0=x''; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.9276217618824437); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
PRAGMA automatic_index; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (-1.285128766E9), (x''), (1.634187192E9); -- 0ms;
REINDEX  vt0; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18890'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.7306590206216648), (x''), (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=436912130,8');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2008363024,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38560'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1791166473);\n; -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('611439941'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=611439941 unordered noskipscan'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL), (0.05356790893370367), (0.332932309478138); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('m'), ((((((x'4713')OR(0.08726694942985169)))OR(x'')) IN ())); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 772224523); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.7145801408242048); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46985'); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 END)GLOB(CASE WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN 0.12434059972958988 WHEN '' THEN vt0.c0 END)) FROM vt0; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=-1698096889, c0='1861498442' WHERE vt0.c0; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.7478105488763053), (1.634187192E9), (x''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'56e3'), (0.7145801408242048), ('-642619001'); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.8200495373900972); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0X6ef4364a); -- 0ms;
PRAGMA incremental_vacuum; -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (0.5112292357395537), (x''), (x'4f2e'); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('181910698'); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (0X723623bd); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.332932309478138), (NULL), ('1913843215'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)OR(x'')))OR(NULL))  WHEN (NOT (x'd5cd')) THEN ((181910698) NOT BETWEEN (-2008363024) AND (x'')) ELSE ((0.5722567203462442)IS(NULL)) END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE TABLE t0 (c0 BLOB DEFAULT 0Xffffffff95653eb2 ); -- 0ms;
ANALYZE v0; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 1ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.6304189213169952, c0=x'' WHERE t0.c0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL), (-642619001), (''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (''), (-1.846349029E9); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 256243123); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=408247583 noskipscan'); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '13295'); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT NULL FROM v0 WHERE ((- (ABS(x'')))) GROUP BY v0.c0; -- 1ms;
SELECT ALL COUNT(LOWER(vt0.c0) COLLATE NOCASE) OVER () FROM v0 NOT INDEXED, vt0; -- 2ms;
SELECT DISTINCT AVG((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) FROM v0, vt0 WHERE (CASE WHEN '274998149' COLLATE RTRIM THEN COALESCE(DISTINCT '', 0.5112292357395537, '1870363402', 0xffffffffa4f9c133) END) EXCEPT SELECT ((((vt0.c0 IN (vt0.c0, v0.c0))))>((MAX(vt0.c0)))) FROM v0 WHERE (((((NULL) ISNULL)) BETWEEN (((('')) BETWEEN (('')) AND ((0Xe449061)))) AND (((4.3691213E8)&('')))));SELECT DISTINCT CAST(((((vt0.c0)AND(v0.c0)))OR(v0.c0)) AS TEXT) FROM vt0 WHERE (((CASE WHEN '8<pQ꒛Jw.엿' THEN '#p' ELSE 0.8200495373900972 END) BETWEEN (CASE WHEN -1.698096889E9 THEN x'' WHEN 0.3780877625092133 THEN '-642619001' WHEN 0.13608481873556644 THEN 'nV/N&~' END) AND ((0.25859788913454473 IN ())))) ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN (((v0.c0)=(v0.c0))) AND (CAST(NULL AS INTEGER))) DESC;SELECT CAST(GROUP_CONCAT(vt0.c0) AS NUMERIC) FROM vt0, v0 WHERE (load_extension(((NULL)*(0.02927231057728341))));SELECT ((((NULL) IS TRUE)) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0 COLLATE RTRIM)) FROM v0 WHERE (CASE WHEN (- ('-1885804339')) THEN ((((((((x'b0ce')OR(NULL)))OR('I')))AND(NULL)))OR('(')) ELSE CAST(NULL AS NUMERIC) END);SELECT (- ((v0.c0 IN ()))), CASE json_remove(v0.c0, v0.c0)  WHEN TRIM(v0.c0, v0.c0) THEN v0.c0 COLLATE RTRIM END, (NOT (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) FROM vt0;SELECT DISTINCT ((((vt0.c0) IS TRUE)) IS TRUE) FROM v0;SELECT COALESCE(DISTINCT v0.c0 COLLATE NOCASE, ((vt0.c0)OR(vt0.c0))), ((SUM(v0.c0))&(((vt0.c0)-(-1.788526926E9)))), CASE (vt0.c0 IN ())  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN (~ (x'')) ELSE ((vt0.c0)*(v0.c0)) END FROM vt0 WHERE (((x'')<=(x'')) COLLATE NOCASE);SELECT DISTINCT TOTAL(((vt0.c0) IS TRUE)) FILTER(WHERE ((PRINTF(vt0.c0)) BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 END) AND (((v0.c0)GLOB(v0.c0))))) OVER () FROM v0 ORDER BY (v0.c0 IN (v0.c0 COLLATE BINARY, (NOT (vt0.c0))))  NULLS FIRST, (((((v0.c0) BETWEEN ('0.332932309478138') AND (vt0.c0))))>((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));SELECT DISTINCT ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL), (GROUP_CONCAT(v0.c0) IN ()), NULL FROM vt0 WHERE ((((((~ ('')))AND(0.5593041832628932 COLLATE BINARY)))AND(((1.913843215E9) NOT BETWEEN (0.6379268915763826) AND (0.2921665921745832)))));SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL '-1885804339' COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY FROM vt0, v0 WHERE (CAST(highlight(0.5836536363770458, '苝x', '', '-556387287') AS NUMERIC)) LIMIT 1302928210;SELECT ((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))||(((vt0.c0)-(vt0.c0)))), (('-1421920516') NOT BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((NULL) NOT NULL))), (+ (CAST(v0.c0 AS NUMERIC))) FROM v0, vt0; -- 0ms;
SELECT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, ((((vt0.c0) IS TRUE)) NOTNULL), -1238898096 COLLATE NOCASE FROM vt0, v0 WHERE ((+ ('0.7478105488763053'))); -- 0ms;
SELECT ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE FROM v0, vt0 GROUP BY (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))OR((v0.c0 IN (vt0.c0, v0.c0)))))AND(NULL)) HAVING ((COUNT(*)) NOT NULL); -- 7ms;
SELECT DISTINCT (CASE WHEN x'0284123d' THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt0 WHERE (0x38a1c5ff); -- 0ms;
SELECT CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)) AS INTEGER) FROM v0, vt0 WHERE (TYPEOF(((')+s*8,T\)')<=('983473336')))) GROUP BY vt0.c0, CAST(((((v0.c0)AND(vt0.c0)))OR(v0.c0)) AS TEXT), CAST((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS INTEGER), (NOT (((v0.c0) BETWEEN (x'') AND (v0.c0)))), v0.c0; -- 0ms;
SELECT DISTINCT 'ix' FROM v0, vt0 WHERE ((((x'cf44')<<(x'')) IN (((NULL)>(0X17fe7ca2)), ((0.2064603951887043) ISNULL)))) GROUP BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND ('1861498442')) AS TEXT), (NOT ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))), CAST(CAST(v0.c0 AS TEXT) AS BLOB) HAVING TOTAL((((vt0.c0))=((vt0.c0)))) ORDER BY (~ ('')); -- 6ms;
SELECT ALL (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)||(x'f0de'))) AND (COALESCE(v0.c0, vt0.c0, v0.c0, vt0.c0))) FROM vt0;SELECT DISTINCT NULL, ((((v0.c0)<(vt0.c0)))-(((((v0.c0)AND(vt0.c0)))OR(v0.c0)))), (((v0.c0)) BETWEEN (((+ (NULL)))) AND ((((((v0.c0)OR('1971183736')))AND(vt0.c0))))) FROM vt0 LIMIT 819305719;SELECT (((vt0.c0 IN ()))%(AVG(v0.c0))) FROM vt0, v0 WHERE (((CASE WHEN NULL THEN x'' END)<(x''))) GROUP BY 0.33255475254802846 HAVING (NULL IN ()); -- 0ms;
SELECT ALL AVG(LIKELY(v0.c0)) FROM vt0, v0 WHERE (UPPER(-2116574848)) ORDER BY vt0.c0 ASC, (((-1660606185 IN ('')))>=(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC; -- 2ms;
SELECT v0.c0 FROM vt0 WHERE (((((0Xffffffff8f98e8cd) ISNULL)) BETWEEN ((x'5b97' IN ())) AND (((0.7116633537493475)>('1551418206')))));SELECT DISTINCT ((CAST(NULL AS REAL))>(CAST(v0.c0 AS INTEGER))) FROM vt0 WHERE ((((('-461086684') NOTNULL)) BETWEEN (LTRIM(NULL, 0.7306590206216648)) AND ((x'76ef' IN ())))) GROUP BY ((((((vt0.c0)==(vt0.c0)))OR(((v0.c0)IS(v0.c0)))))AND(vt0.c0));SELECT ALL SUM(((NULL) BETWEEN (v0.c0) AND (v0.c0))) FROM vt0, v0 WHERE ((('%W')GLOB(x'f76a')) COLLATE BINARY); -- 1ms;
SELECT ((CAST(v0.c0 AS NUMERIC)) IS TRUE) FROM v0, vt0; -- 0ms;
SELECT ALL ABS(DISTINCT vt0.c0 COLLATE RTRIM) FROM v0 WHERE ((((0.8655225685793606)) NOT BETWEEN ((((NULL)&(x'')))) AND (((((NULL)) BETWEEN ((NULL)) AND (('')))))));SELECT DISTINCT (TRIM(DISTINCT vt0.c0) IN (((vt0.c0) ISNULL), ((v0.c0)||(v0.c0)))) FROM vt0, v0 WHERE ((((~ (NULL))) ISNULL)); -- 0ms;
SELECT (+ (((NULL)>>(NULL)))) FROM v0 CROSS JOIN vt0 ON ((((vt0.c0))>=((vt0.c0))) IN ()) WHERE (492236674); -- 0ms;
SELECT ALL CAST((v0.c0 IN ('')) AS TEXT) FROM vt0, v0 WHERE ((((((NULL)+(x'660c'))))>=((((x'') NOT BETWEEN ('%W') AND (x'')))))) ORDER BY ((vt0.c0)*(vt0.c0)) COLLATE NOCASE, (('') NOT BETWEEN (v0.c0) AND (v0.c0)) ASC, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((x'273a')>>(-1564316887))) AND (((v0.c0)OR(0.33011673782261697))))  NULLS FIRST, (((((v0.c0)) BETWEEN ((v0.c0)) AND (('')))) IS TRUE) ASC  NULLS FIRST; -- 0ms;
SELECT UPPER(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))), COUNT(*) OVER ( ORDER BY CAST((NOT (v0.c0)) AS NUMERIC) DESC), ((((v0.c0)&(v0.c0)))IS((+ (v0.c0)))) FROM v0;SELECT ALL 'L-', ((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))LIKE('611439941')), TOTAL(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END) OVER () FROM v0 NOT INDEXED GROUP BY ((((((v0.c0) ISNULL))OR((((v0.c0, vt0.c0, vt0.c0))<((-1.846349029E9, v0.c0, vt0.c0))))))OR(((((v0.c0)AND(v0.c0)))OR(vt0.c0)))) HAVING (('1033538393') BETWEEN (((((vt0.c0)AND(v0.c0)))AND(v0.c0))) AND ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))));SELECT DISTINCT (- ('!L]n꣺AKF')) FROM vt0 WHERE ((((x'17f2')) NOT BETWEEN (('805266369')) AND ((NULL))) COLLATE BINARY); -- 0ms;
SELECT ALL MAX(v0.c0 COLLATE NOCASE) COLLATE RTRIM FROM vt0 GROUP BY CASE ((0x222b2ebc)AND(vt0.c0))  WHEN (1791166473 IN ()) THEN (vt0.c0 IN ('1302928210')) WHEN vt0.c0 THEN ABS(vt0.c0) WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN (~ (v0.c0)) THEN ((vt0.c0) NOTNULL) WHEN ((v0.c0)%(v0.c0)) THEN ((vt0.c0) NOT NULL) END;SELECT DISTINCT x'' FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (''))) AND (v0.c0 COLLATE NOCASE)), 0X63c9d999  NULLS FIRST;SELECT DISTINCT (MIN(v0.c0) IN ()) FROM v0, vt0 WHERE (((((0.5941658982380833) NOT BETWEEN (NULL) AND (0.8604060125055982))) IS FALSE)); -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(vt0.c0) IN ()), NULL, COUNT(*) FROM vt0 WHERE (((((NULL) NOT BETWEEN (x'') AND ('FE\窿d)Lx')))!=(CAST(NULL AS NUMERIC)))) GROUP BY vt0.c0, (((v0.c0, vt0.c0, v0.c0))>((v0.c0, '渌/Hq', x'cb7b'))) COLLATE NOCASE, (NOT (v0.c0)) COLLATE BINARY HAVING CASE WHEN ((v0.c0) NOTNULL) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 END END;SELECT DISTINCT v0.c0 FROM vt0 GROUP BY (~ ((('kj w') BETWEEN (v0.c0) AND (vt0.c0))));SELECT DISTINCT (((((v0.c0, v0.c0, vt0.c0)) BETWEEN (('0.28235429443505444', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 225578472)))) NOT NULL) FROM v0, vt0 ORDER BY ((((vt0.c0) NOT NULL))*(((vt0.c0)AND(vt0.c0))))  NULLS LAST; -- 2ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(',\r>23^S')))AND(x'732a9fd5af23')))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) FROM vt0, v0 WHERE (CAST(CAST(x'a024e897' AS INTEGER) AS INTEGER)); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END), x'e0f9', CAST(CAST(v0.c0 AS REAL) AS REAL), ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (CASE v0.c0  WHEN vt0.c0 THEN 0.49175380261775026 ELSE v0.c0 END)), CASE ((vt0.c0)AND(vt0.c0))  WHEN CASE WHEN vt0.c0 THEN 0.37186905145045124 END THEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) END FROM vt0, v0; -- 1ms;
SELECT SQLITE_VERSION() FROM vt0 WHERE (CASE ((x'')|('136228594'))  WHEN NULL COLLATE BINARY THEN CAST('1935885733' AS INTEGER) WHEN ((NULL)*(0.9600285917977657)) THEN ((0.14612440179210207)!=(x'')) WHEN ((((((((x'')OR(x'')))OR(NULL)))OR(NULL)))AND(0.051589756519182184)) THEN ((NULL)+(0.006923660384649755)) WHEN 1595412673 COLLATE BINARY THEN x'' WHEN NULLIF(NULL, x'') THEN UPPER(2.39374433E8) ELSE (((('1870363402')OR(NULL)))AND('')) END) GROUP BY NULL, (~ (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (~ (((vt0.c0) IS FALSE))) HAVING (((CAST(v0.c0 AS BLOB)))>=(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))));SELECT DISTINCT (((v0.c0 IN ())) NOT NULL), ((((CASE WHEN v0.c0 THEN v0.c0 END)AND(NULL)))AND(((vt0.c0) ISNULL))), (((v0.c0))>((((v0.c0)IS(vt0.c0))))) FROM vt0 GROUP BY ((NULL) ISNULL);SELECT DISTINCT CASE ((vt0.c0) NOT NULL)  WHEN ((x'')-(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END, (((v0.c0 IN ()))<(((vt0.c0)||(v0.c0)))), ((COUNT(*))||(LIKELY(vt0.c0))) FROM vt0 GROUP BY ((CAST(vt0.c0 AS TEXT))OR(vt0.c0 COLLATE BINARY)) HAVING NULL LIMIT 950126079 OFFSET -98137672;SELECT DISTINCT CASE ((vt0.c0) IS FALSE)  WHEN (vt0.c0 IN (v0.c0, 0.4497755948576917)) THEN ((((v0.c0)AND(0x119fc65f)))OR(vt0.c0)) ELSE (('|')&(v0.c0)) END FROM vt0, v0 WHERE (json_quote(TYPEOF(0.1786995225811303))); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT ((AVG(v0.c0))GLOB(v0.c0)) FROM vt0;SELECT ALL ((((((v0.c0)OR(vt0.c0)))OR(v0.c0))) BETWEEN (((vt0.c0)GLOB(v0.c0))) AND (v0.c0)) FROM v0, vt0; -- 0ms;
SELECT ((((((0.8655225685793606)AND(vt0.c0)))AND(vt0.c0))) IS FALSE) FROM vt0, v0 LIMIT 1942417668 OFFSET -184590209; -- 0ms;
SELECT ALL (~ (((v0.c0)/(vt0.c0)))) FROM vt0, v0 WHERE (CASE WHEN ((0X5eb26cf5)>=('\Y')) THEN CASE WHEN '-1179252816' THEN NULL WHEN NULL THEN NULL WHEN 1.935885733E9 THEN '<MFlb슅m&' END ELSE x'' COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT (('-1421920516')LIKE(((v0.c0)!=(v0.c0)))) FROM vt0, v0 WHERE (CAST(CAST(x'c890' AS REAL) AS INTEGER)); -- 0ms;
SELECT ALL CASE (((vt0.c0))<=((vt0.c0)))  WHEN v0.c0 THEN TOTAL(vt0.c0) WHEN json_quote(vt0.c0) THEN TRIM(DISTINCT v0.c0, vt0.c0) WHEN AVG(vt0.c0) THEN vt0.c0 ELSE vt0.c0 COLLATE RTRIM END FROM vt0 WHERE (((((1870363402) NOTNULL)) BETWEEN ((('0.9600285917977657')GLOB(NULL))) AND (((0X3787f180) ISNULL)))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c0)), vt0.c0, ((v0.c0)||(vt0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (x'')), NULL)) AND ((((vt0.c0)LIKE(vt0.c0)), ((vt0.c0)<(v0.c0)), (- ('-1693823483')), CAST(vt0.c0 AS INTEGER), ((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))))  NULLS FIRST;SELECT ALL (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0))))>=((((((((((vt0.c0)OR(0.33255475254802846)))OR(vt0.c0)))OR(v0.c0)))AND(NULL))))), CASE INSTR(NULL, v0.c0)  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)%(v0.c0)) WHEN ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)GLOB(v0.c0)) ELSE HEX(vt0.c0) END, CASE CASE WHEN vt0.c0 THEN v0.c0 END  WHEN ((vt0.c0)<<(v0.c0)) THEN ((vt0.c0)>=(NULL)) END FROM vt0 WHERE ((~ (NULL))) LIMIT 291519096 OFFSET 1634187192;SELECT ALL COUNT(ROUND(v0.c0, v0.c0)) OVER () FROM vt0, v0 WHERE ((((((NOT (0.33187843959263685)))AND(x'1dcf')))AND(((1913843215)OR(0.1493375405636137))))); -- 0ms;
SELECT (~ (TRIM(vt0.c0))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT v0.c0 FROM vt0, v0; -- 0ms;
SELECT v0.c0 FROM vt0;SELECT DISTINCT ((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE) FROM vt0, v0; -- 0ms;
SELECT CAST(MAX(v0.c0) AS INTEGER) FROM v0; -- 1ms;
SELECT ALL ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE BINARY FROM v0, vt0 GROUP BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0x6d3b29bf THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN (((vt0.c0)IS(v0.c0))) AND (((vt0.c0)<<('1302928210')))); -- 6ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND (((+ (vt0.c0))))), ((v0.c0 COLLATE BINARY) NOTNULL), ((((vt0.c0 COLLATE RTRIM)AND((- (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))) FROM v0 GROUP BY (((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) IN ());SELECT DISTINCT TOTAL(((((v0.c0)OR(v0.c0)))OR(v0.c0))), vt0.c0, TOTAL((~ (v0.c0))) FROM v0, vt0; -- 5ms;
SELECT CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c0 END COLLATE RTRIM, ((((v0.c0) IS TRUE))||(CASE vt0.c0  WHEN NULL THEN v0.c0 ELSE vt0.c0 END)), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>=(IFNULL(v0.c0, v0.c0))) FROM v0 WHERE ((~ (((x'250b')||(-1737038022)))));SELECT v0.c0 FROM v0, vt0 ORDER BY ((((((v0.c0)>>(NULL)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((NOT (vt0.c0)))); -- 4ms;
SELECT DISTINCT vt0.c0, CAST(((0.44437836069743863)/(vt0.c0)) AS BLOB), CASE WHEN ((('1247523656')) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((((v0.c0)OR(v0.c0)))AND('')) ELSE v0.c0 END FROM vt0, v0; -- 0ms;
SELECT DISTINCT (((v0.c0) NOTNULL) IN ()), (((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((((vt0.c0)OR(v0.c0)), NULLIF(vt0.c0, v0.c0), COUNT(*))) AND (((vt0.c0 IN ()), LIKELIHOOD(DISTINCT vt0.c0, 0.7317649775829321), SUM(vt0.c0)))), ((((v0.c0)OR(x''))) BETWEEN ((((vt0.c0, v0.c0, vt0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0)))) AND ((NOT (v0.c0)))) FROM v0, vt0; -- 2ms;
SELECT ((((((0.8604060125055982) IS FALSE))AND((((v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, x'7c36', v0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0, v0.c0, vt0.c0))))))OR((((v0.c0))<=((v0.c0))))) FROM vt0;SELECT DISTINCT (((- (v0.c0)))IS(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) FROM vt0, v0 WHERE ((('-1421920516') NOT NULL)); -- 0ms;
SELECT DISTINCT LEAD(HEX(DISTINCT CASE WHEN v0.c0 THEN vt0.c0 END), CAST(CAST(vt0.c0 AS INTEGER) AS BLOB), ((((v0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, v0.c0))) IN (((vt0.c0) NOTNULL), CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) OVER (), MIN(CASE WHEN vt0.c0 THEN vt0.c0 END), ((CAST(vt0.c0 AS INTEGER))<((('I00') NOT BETWEEN (v0.c0) AND (v0.c0)))), CASE (+ ('fZq덈'))  WHEN (+ (vt0.c0)) THEN GROUP_CONCAT(v0.c0) ELSE (((v0.c0))<((v0.c0))) END, v0.c0 FROM v0, vt0 ORDER BY x''; -- 3ms;
SELECT DISTINCT LAG((~ (0.5159582333810278)) COLLATE NOCASE, ((((v0.c0)||(v0.c0)))*(((v0.c0)*(v0.c0)))), (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))<((((((v0.c0)OR(v0.c0)))AND('!B]n꣺AKF')))))) OVER () FROM v0 WHERE (((((x'')AND('6>ްtz]')))AND(x'3653')) COLLATE RTRIM COLLATE BINARY) LIMIT -138354280; -- 0ms;
SELECT DISTINCT ((vt0.c0)=(vt0.c0)) COLLATE NOCASE, (((+ (0.13608481873556644)))IS(MIN(v0.c0))), (CAST(vt0.c0 AS INTEGER) IN ()) FROM vt0 WHERE ('');SELECT DISTINCT CASE (((v0.c0, vt0.c0, v0.c0))=((vt0.c0, v0.c0, vt0.c0)))  WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) END FROM v0;SELECT DISTINCT ((vt0.c0)%(v0.c0)) COLLATE NOCASE, (((((v0.c0, v0.c0, vt0.c0))>((v0.c0, v0.c0, v0.c0))))>>(vt0.c0 COLLATE RTRIM)), ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) FROM vt0, v0 WHERE ('0.1493375405636137'); -- 0ms;
SELECT DISTINCT (((~ (v0.c0))) BETWEEN (NULLIF(v0.c0, vt0.c0)) AND (((v0.c0)==(vt0.c0)))) FROM vt0 WHERE (HEX(x'' COLLATE BINARY));SELECT DISTINCT ((((((((CAST(v0.c0 AS INTEGER))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((v0.c0)/(v0.c0)))))OR(((vt0.c0)IS NOT(v0.c0)))))OR(MIN(vt0.c0))) FROM vt0 INNER JOIN v0 ON IFNULL(((vt0.c0)LIKE(vt0.c0)), (vt0.c0 IN (v0.c0))) LIMIT 1634187192; -- 2ms;
SELECT DISTINCT ((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))>>('[]<q')), (((((('-461086684')OR(v0.c0)))OR(vt0.c0))) BETWEEN (NULL) AND (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))), ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))>=((MAX(v0.c0)))), CASE CAST(vt0.c0 AS TEXT)  WHEN ((v0.c0)GLOB(vt0.c0)) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE json_remove('54350131', v0.c0) END, 0x10642385 FROM v0;SELECT ALL ((((((((load_extension(v0.c0))AND(AVG(vt0.c0))))AND(v0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((v0.c0)!=(vt0.c0)))) FROM vt0;SELECT ((CAST(0.8276992935161974 AS TEXT))<<(((((((((v0.c0)AND(1e500)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))), ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))AND(x'')))AND((vt0.c0 IN ()))), ((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR(COUNT(*))))OR(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) FROM v0, vt0 WHERE ('4\r') GROUP BY ((v0.c0)<>(vt0.c0)) HAVING CASE WHEN CASE WHEN vt0.c0 THEN '54350131' END THEN ((v0.c0)&(NULL)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END LIMIT -1382617451; -- 3ms;
SELECT (vt0.c0 COLLATE BINARY IN ((vt0.c0 IN ()), v0.c0 COLLATE NOCASE)) FROM vt0, v0 WHERE (COALESCE('*5g' COLLATE RTRIM, ((((((((NULL)OR(NULL)))OR(x'')))AND(0.029073036594548185)))OR(x'')), (('1634187192') NOT BETWEEN ('2042212148') AND ('-2008363024')), CASE x'7058'  WHEN '!l]n꣺akf' THEN 0.11101679163163813 ELSE '' END)) LIMIT -722967352; -- 0ms;
SELECT ALL (((vt0.c0)>(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)&(vt0.c0)) AS INTEGER) FROM vt0 WHERE (CAST('' AS NUMERIC) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT v0.c0 FROM vt0 GROUP BY '8JXq|Yg';SELECT ((v0.c0 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0)<>(vt0.c0)))) FROM v0 WHERE (CHANGES());SELECT CAST(ABS(DISTINCT v0.c0) AS BLOB) FROM vt0, v0; -- 0ms;
SELECT COUNT(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0, v0 WHERE (((CASE WHEN x'' THEN 0.1973746769784619 WHEN NULL THEN '295683679' WHEN 0.7145801408242048 THEN NULL ELSE x'b2e6' END)OR(UNLIKELY(DISTINCT x'')))); -- 0ms;
SELECT ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=((+ (v0.c0)))), ((ABS(DISTINCT vt0.c0))-(ABS(DISTINCT x'b3ea'))), ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) COLLATE BINARY FROM vt0, v0 WHERE (((((0.08007400244052665)AND('1439026656' COLLATE RTRIM)))OR(TRIM(DISTINCT 0.8233728836309826)))); -- 0ms;
SELECT ALL NULL FROM v0 LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)<=(0.8655225685793606)) AS TEXT) WHERE (((((NULL) BETWEEN (0.8137013584967545) AND (x'')))<<(CASE WHEN x'' THEN 0.14612440179210207 ELSE x'3051' END))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), COUNT((((vt0.c0))=((v0.c0)))), CASE WHEN v0.c0 COLLATE RTRIM THEN (NULL IN ()) WHEN AVG(v0.c0) THEN (vt0.c0 IN (vt0.c0)) WHEN v0.c0 COLLATE RTRIM THEN vt0.c0 END, ((v0.c0)<=(((vt0.c0) IS TRUE))), ((v0.c0 COLLATE BINARY)+((~ (vt0.c0)))) FROM v0;SELECT DISTINCT MIN(((vt0.c0)<=(vt0.c0))), AVG((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) OVER (), (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), v0.c0 COLLATE NOCASE, SUM(v0.c0))) AND ((TYPEOF(vt0.c0), (((v0.c0))>((vt0.c0))), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) FROM vt0 WHERE (CASE (('-18137608') BETWEEN ('') AND ('-1693823483'))  WHEN x'f700' COLLATE BINARY THEN ((x'b001')>=(0.25859788913454473)) ELSE (((0.9874448195187941, x'77433231', 0x60fa2d71))<=(('706564281', NULL, NULL))) END) GROUP BY ((((((((((v0.c0)AND(NULL)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0))) BETWEEN (((((vt0.c0)AND(v0.c0)))OR(vt0.c0))) AND (vt0.c0 COLLATE BINARY));SELECT ((DATETIME(v0.c0, v0.c0, vt0.c0, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0)<=(vt0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), (- ((vt0.c0 IN ()))), CASE ((vt0.c0)IS(v0.c0))  WHEN ((0.6306623763583169) BETWEEN (6.39795933E8) AND (-816207929)) THEN (v0.c0 IN (vt0.c0)) WHEN SUM(v0.c0) THEN v0.c0 WHEN ((vt0.c0) ISNULL) THEN COUNT(*) ELSE vt0.c0 END FROM vt0, v0; -- 2ms;
SELECT DISTINCT (CAST(v0.c0 AS NUMERIC) IN (vt0.c0)) FROM v0 WHERE ((((((x'')AND(33136701)))AND(NULL)) IN ()));SELECT DISTINCT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((1674172825)+(v0.c0)))))AND(GROUP_CONCAT(vt0.c0))), (((- (v0.c0)))!=(((((0Xffffffffca1acd7e)OR(v0.c0)))OR(v0.c0)))), (((('')AND(v0.c0 COLLATE BINARY)))AND(((vt0.c0)OR(v0.c0)))), (((vt0.c0 IN (vt0.c0))) NOTNULL), MIN(0.36484905195694695) FROM v0, vt0 NOT INDEXED GROUP BY ((((((((((((CAST(v0.c0 AS TEXT))AND((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))))OR((- (v0.c0)))))AND(-1.788526926E9)))AND(((v0.c0)GLOB(v0.c0)))))OR((('') IS FALSE))))OR(((vt0.c0)IS NOT(vt0.c0)))), (CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((((v0.c0)IS(v0.c0)))<<(CAST(vt0.c0 AS REAL))); -- 15ms;
SELECT (+ (((v0.c0) IS FALSE))) FROM v0, vt0 ORDER BY ((((v0.c0)==(vt0.c0)))+(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) ASC  NULLS LAST; -- 5ms;
SELECT AVG(STRFTIME(v0.c0, 0.8604060125055982, v0.c0)) OVER ( RANGE  CURRENT ROW EXCLUDE TIES), NULL, (((((((((NOT (vt0.c0)))OR(((vt0.c0)OR(v0.c0)))))OR(CAST(vt0.c0 AS TEXT))))AND(((v0.c0) IS TRUE))))AND((~ (v0.c0)))) FROM v0;SELECT ((UPPER(DISTINCT x''))AND((NOT (x'')))), CUME_DIST() OVER (), (((x'c4cd' IN ())) BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0))) AND (((v0.c0)>(vt0.c0)))) FROM vt0 LIMIT 611439941 OFFSET -790680146;SELECT DISTINCT x'0a04' FROM vt0 WHERE ((0.9224954095435204 COLLATE RTRIM IN ())); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(v0.c0) COLLATE RTRIM COLLATE NOCASE FROM vt0, v0 WHERE (((((~ (x''))))=((((NULL)<<(NULL)))))); -- 0ms;
SELECT ALL x'45802ec4c48b' FROM vt0, v0; -- 0ms;
SELECT CASE v0.c0 COLLATE BINARY  WHEN GROUP_CONCAT(v0.c0) THEN ((vt0.c0) BETWEEN (v0.c0) AND ('873848245')) END FROM v0, vt0 WHERE ((NOT (CASE WHEN NULL THEN 0.8259142996247683 WHEN NULL THEN ' \n{897Z' WHEN NULL THEN NULL ELSE 'rsu?욖5*' END))); -- 2ms;
SELECT (- (COUNT(*))) FROM v0 WHERE (x'87c1') ORDER BY CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END COLLATE RTRIM;SELECT ALL ((CAST(vt0.c0 AS REAL)) ISNULL) FROM v0;SELECT CASE ((vt0.c0)GLOB(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN NULL END FROM vt0;SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((NULL COLLATE BINARY) NOT NULL)) ORDER BY CAST(((vt0.c0)%(v0.c0)) AS BLOB); -- 0ms;
SELECT x'' FROM v0 WHERE (((((0.2819089607833146) NOT BETWEEN (NULL) AND (x'64af'))) BETWEEN (CAST(0.5424148377399196 AS NUMERIC)) AND (CASE WHEN x'' THEN '#p' ELSE x'0c7a' END))) LIMIT -1370341184; -- 0ms;
SELECT DISTINCT (- (((v0.c0) IS FALSE))) FROM vt0, v0 LIMIT 829124732 OFFSET -1003226579; -- 0ms;
SELECT FIRST_VALUE(((((v0.c0)/(v0.c0)))LIKE(((v0.c0) NOT NULL)))) OVER () FROM v0 WHERE (CAST(NULL AS BLOB)); -- 0ms;
SELECT HEX(DISTINCT vt0.c0) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0, v0; -- 0ms;
SELECT ALL CASE ((((vt0.c0)AND(v0.c0)))OR(v0.c0))  WHEN (NOT (vt0.c0)) THEN (((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN (('-1551756945', v0.c0, '2045110917')) AND ((vt0.c0, v0.c0, vt0.c0))) ELSE vt0.c0 END FROM v0 WHERE (((((((0.41521098763877895)AND('>_{')))AND('-967281258'))) BETWEEN ((~ (''))) AND (0x75af071 COLLATE RTRIM))) UNION ALL SELECT ALL ((((v0.c0)%(v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (TOTAL(vt0.c0))) FROM vt0 WHERE ((((NULL, NULL, '-1693823483')) BETWEEN ((((((NULL)AND(x'')))OR(x'ff2a')), COALESCE('', x''), (((x'')) BETWEEN ((0.2957081292814374)) AND ((NULL))))) AND ((((((x'')AND(0.33187843959263685)))OR('KpQ')), ((x'')IS NOT('QW.#質[S')), (('')LIKE(0.2235505459200413)))))) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0) NOTNULL))) DESC  NULLS FIRST, '-1367872546'  NULLS LAST;SELECT ALL (((((((((((vt0.c0))<=((vt0.c0))))OR((- ('1588751605')))))OR('')))OR(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND(((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))) FROM vt0;SELECT x'' FROM vt0, v0 ORDER BY ((UNICODE(vt0.c0)) NOT BETWEEN (((0.3799531782131754) IS TRUE)) AND (((vt0.c0) NOTNULL)))  NULLS FIRST, (- ((((0.4170282169525683, vt0.c0, vt0.c0))==((0.6379268915763826, vt0.c0, v0.c0))))) DESC  NULLS FIRST; -- 2ms;
SELECT ALL (((v0.c0)) NOT BETWEEN (('{lh,c}m\')) AND ((0.8751823718239973))) FROM vt0 GROUP BY (~ (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) LIMIT 1904290306;SELECT ALL ((- (v0.c0)) IN ()), vt0.c0, ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) FROM vt0 WHERE (CASE (((('-1082535803')AND('\nl')))AND(x'0195e4b78799'))  WHEN ((0.45929660848254916)/(1588751605)) THEN (((((((('1612394384')AND(2111959089)))OR(1.551418206E9)))OR(x'')))AND(0xc1c3cd6)) ELSE ('AWG' IN ()) END) GROUP BY (((((vt0.c0))<>((vt0.c0))))LIKE(((')b') BETWEEN (0.14536734862114475) AND (vt0.c0)))) HAVING '-1885804339';SELECT DISTINCT (NOT (GROUP_CONCAT(vt0.c0))) FROM v0 GROUP BY (NOT ((- (v0.c0)))), TRIM(DISTINCT ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0))), RTRIM(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) HAVING ((CAST(v0.c0 AS TEXT)) NOT BETWEEN ((NOT (vt0.c0))) AND (((v0.c0)-(v0.c0))));SELECT DISTINCT GROUP_CONCAT(MAX((vt0.c0 IN ()))) FROM vt0, v0 WHERE (CAST(((x'6340') ISNULL) AS TEXT));SELECT CASE ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN v0.c0 THEN (+ (v0.c0)) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (~ (v0.c0)) WHEN (((vt0.c0))=((v0.c0))) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN CAST(v0.c0 AS REAL) THEN IFNULL(vt0.c0, v0.c0) WHEN '&*' THEN x'' END FROM vt0;SELECT DISTINCT CAST((NOT (v0.c0)) AS TEXT), ((((((((((0.6901522874727362) IS FALSE))AND(((0.9097727448241418)<=(vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((0.49175380261775026) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (v0.c0, v0.c0)))), CAST(TOTAL(v0.c0) AS INTEGER) FROM vt0, v0 WHERE (CASE x''  WHEN ((x'134a') BETWEEN (0.38795304806860686) AND (x'')) THEN (~ (NULL)) END); -- 1ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN v0.c0 END)&(((((7.06564281E8)OR(vt0.c0)))OR(x'')))), MAX(CAST(v0.c0 AS BLOB), ((v0.c0)&(v0.c0))), (- ((((((((('448075560')OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))) FROM v0;SELECT DISTINCT CAST(UNLIKELY(v0.c0) AS TEXT), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CAST(v0.c0 AS TEXT)) AND (v0.c0)), LEAD(((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))/(((vt0.c0) NOTNULL))), vt0.c0, (((vt0.c0 IN ('-1846349029')))<=((NOT (vt0.c0))))) OVER () FROM vt0 WHERE ((+ ((('܂ma^竔7m') BETWEEN (NULL) AND ('yqT&p7G\rw')))));SELECT DISTINCT v0.c0 FROM v0, vt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), ((v0.c0)OR(vt0.c0)) COLLATE RTRIM, ((((v0.c0)IS(v0.c0)))AND((((vt0.c0, '-818325139', vt0.c0)) BETWEEN ((v0.c0, vt0.c0, x'')) AND ((v0.c0, v0.c0, vt0.c0))))) FROM v0 WHERE ((((-1382617451)) BETWEEN (((('402554018')=(x'0760ea18')))) AND (((('-1869575616')||(NULL))))));SELECT DISTINCT (v0.c0 IN (v0.c0)) COLLATE RTRIM FROM v0 WHERE ((((((0.8082624995961168, NULL, NULL, '}6', '*5g'))>=((0.8068060073457931, 0.21645716893251488, -1.737038022E9, '', 0.08726694942985169)))) IS FALSE)); -- 1ms;
SELECT DISTINCT HEX(((v0.c0)<<(v0.c0))) FROM vt0 WHERE (((((((1302928210) IS TRUE))OR((((0.8604060125055982))<((-1693823483))))))OR(((((0.8259142996247683)AND('-1846349029')))AND(NULL)))));SELECT DISTINCT CASE vt0.c0 COLLATE RTRIM  WHEN COUNT(v0.c0) THEN (NOT (v0.c0)) ELSE TRIM(DISTINCT vt0.c0) END FROM v0;SELECT DISTINCT RANK() OVER () FROM vt0, v0 WHERE ((CASE WHEN 0.12044010473237521 THEN NULL ELSE 0Xffffffff81d7a180 END IN ())); -- 0ms;
SELECT CAST((vt0.c0 IN ()) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))LIKE(((('', v0.c0, vt0.c0))!=((vt0.c0, v0.c0, 0.2921665921745832))))), LEAD(0.13151875485033115, (((v0.c0, '0.5722567203462442', vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, ((vt0.c0)IS(v0.c0)), vt0.c0, (vt0.c0 IN ()), (v0.c0 IN (v0.c0)))) AND ((((vt0.c0)OR(v0.c0)), ((vt0.c0)OR(v0.c0)), ((v0.c0) NOT NULL), (((v0.c0))<((vt0.c0))), ((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0))))), ((CAST(vt0.c0 AS REAL)) NOTNULL)) OVER ( ROWS  CURRENT ROW), (((((v0.c0)) BETWEEN ((0.8429419297817753)) AND ((vt0.c0)))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((((v0.c0)AND('')))AND(vt0.c0)))) FROM vt0, v0 WHERE (CASE (((0.4849932428152527))<=((x'')))  WHEN (('-816207929') NOTNULL) THEN CASE 1502230896  WHEN -31646593 THEN '4\r' WHEN '' THEN NULL WHEN x'' THEN 54350131 END WHEN ((NULL) IS FALSE) THEN (- ('')) WHEN (NULL IN (NULL)) THEN ((x'') NOT BETWEEN (x'') AND ('0.8276992935161974')) END); -- 1ms;
SELECT DISTINCT CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL), ((((vt0.c0 COLLATE NOCASE)AND(((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(SUM(v0.c0))), IFNULL(DISTINCT (- (vt0.c0)), vt0.c0) FROM v0 WHERE (((CASE WHEN '1612394384' THEN '275383615' ELSE '-18137608' END)>(NULL))) GROUP BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) HAVING CASE ((v0.c0) BETWEEN (v0.c0) AND (x''))  WHEN CAST(vt0.c0 AS TEXT) THEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN 0.7857232918698804 THEN x'' WHEN (((vt0.c0))<=((vt0.c0))) THEN (((v0.c0))<((v0.c0))) WHEN ((v0.c0)=('KZ*')) THEN vt0.c0 WHEN (~ (v0.c0)) THEN x'' ELSE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END;SELECT DISTINCT CAST(vt0.c0 COLLATE BINARY AS NUMERIC) FROM v0 WHERE ((((x'')) BETWEEN (((+ (x'')))) AND ((((0.33753496408501893) NOT BETWEEN (NULL) AND (0.9163917389213928))))));SELECT ALL CAST(((vt0.c0) IS TRUE) AS BLOB) FROM v0 WHERE ((((x'', NULL, NULL)) NOT BETWEEN ((((x'a5e5') BETWEEN ('谨qc8y*x\') AND (NULL)), ((0.12645053860663846) NOTNULL), ((2.74998149E8) IS FALSE))) AND ((0xffffffffe2f99115, (('0.6379268915763826') NOT NULL), (((''))>(('!JOcN⾐t丛'))))))) ORDER BY ((v0.c0 COLLATE RTRIM)OR(((v0.c0) NOTNULL))), ((CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE) DESC;SELECT DISTINCT ((vt0.c0) ISNULL) COLLATE NOCASE, NTH_VALUE(((((((vt0.c0)IS NOT(vt0.c0)))AND(json_extract(vt0.c0, vt0.c0, v0.c0, vt0.c0))))AND((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0))))), CAST(((v0.c0) IS TRUE) AS REAL)) OVER (), ((((((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0)))OR(((((((((((((1318127362)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))))OR(COUNT(*))))OR((('502614020') BETWEEN (v0.c0) AND (NULL)))) FROM vt0, v0;SELECT DISTINCT TYPEOF(NULL) FROM vt0, v0 WHERE ((((('<5')||(NULL)))AND(('0.44437836069743863' IN (x''))))) GROUP BY ((((NULL)>>(vt0.c0)))OR(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) HAVING '-904213122'; -- 0ms;
SELECT ALL ((((v0.c0)%(v0.c0)))/(CAST(vt0.c0 AS NUMERIC))) FROM vt0;SELECT DISTINCT ((NULL)<(((vt0.c0)<=(vt0.c0)))), CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) AS BLOB), ((((v0.c0)) BETWEEN ((x'')) AND ((vt0.c0))) IN ()) FROM v0 GROUP BY (- (((v0.c0)*(v0.c0)))), ((vt0.c0)%(vt0.c0 COLLATE RTRIM)), (+ (CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END));SELECT DISTINCT GROUP_CONCAT((v0.c0 IN ())) FROM v0, vt0 WHERE (json_remove(((NULL) ISNULL), ((-4.04117254E8) BETWEEN (0x9fe3e7) AND (291519096))));SELECT (((v0.c0, vt0.c0, v0.c0)) BETWEEN (((+ (vt0.c0)), (((vt0.c0))>=((vt0.c0))), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((+ (vt0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), '-1421920516'))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (UPPER(NULL))), v0.c0, ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM FROM vt0, v0 WHERE (((((((((ABS(NULL))OR(((0xffffffff9f2efbd2)||(NULL)))))OR(CAST(0.8329458741663094 AS BLOB))))OR((('-64876231') NOT BETWEEN (1.23400305E8) AND (0x4d93eb1a)))))AND((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((v0.c0)IS(vt0.c0)) COLLATE BINARY FROM v0, vt0; -- 0ms;
SELECT DISTINCT (AVG(v0.c0) IN ((((v0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, v0.c0))))), (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, 1730423982, NULL)))) NOTNULL), SUM(v0.c0) OVER () FROM v0, vt0; -- 2ms;
SELECT ALL ((CAST(v0.c0 AS BLOB))==((((vt0.c0))>((vt0.c0))))), (NOT (((v0.c0)IS NOT(v0.c0)))), (('-1029748290') IS FALSE) FROM vt0, v0 WHERE (CAST(CASE -1371281901  WHEN '}[ j' THEN NULL END AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((((((((((((((v0.c0)AND(v0.c0)))OR('.<슰샇')))AND(v0.c0)))OR(v0.c0)))AND(((vt0.c0)IS NOT(x'')))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)GLOB(vt0.c0)))))AND(((vt0.c0)|(vt0.c0)))), NULL, SUM((vt0.c0 IN (v0.c0)) COLLATE NOCASE) OVER ( ORDER BY (((+ (v0.c0))) NOTNULL), NULL ASC  NULLS FIRST) FROM vt0 WHERE (NULL);SELECT ALL COUNT(((vt0.c0)IS(vt0.c0)) COLLATE BINARY) FROM vt0, v0 NOT INDEXED WHERE ((((((((((((x'')AND(NULL)))AND(-1.869575616E9)))OR(0.05413027389607972)))AND(x''))))<((CASE WHEN '-499090753' THEN x'' ELSE 'kz*' END)))); -- 1ms;
SELECT ALL (v0.c0 IN (v0.c0)) FROM v0, vt0 GROUP BY ((SQLITE_SOURCE_ID())<(((v0.c0)&(vt0.c0)))); -- 3ms;
SELECT DISTINCT LEAD('', (+ (vt0.c0 COLLATE NOCASE)), CAST(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) OVER () FROM vt0, v0; -- 5ms;
SELECT ((JULIANDAY(vt0.c0, NULL, v0.c0))>=(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))) FROM v0, vt0 WHERE (((('-1391596604') IS FALSE) IN ())); -- 0ms;
SELECT v0.c0 FROM vt0;SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((('}n|ZTD2aQ' IN ()) IN (0.7504779680158568))); -- 0ms;
SELECT (((((((((v0.c0 IN ()))AND(((vt0.c0)&(v0.c0)))))AND((- (vt0.c0)))))AND(CASE 6.39795933E8  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(0x605ea3b2)) FROM v0; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN vt0.c0 THEN v0.c0 END)OR(NULL COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)))OR(((vt0.c0) NOT NULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0;SELECT DISTINCT ((v0.c0) NOT NULL) FROM vt0;SELECT DISTINCT CAST(0.804785608125459 AS TEXT) COLLATE RTRIM, ((((((((v0.c0 COLLATE RTRIM)OR(CAST(v0.c0 AS NUMERIC))))AND(TYPEOF(v0.c0))))OR(((v0.c0) IS TRUE))))OR(COUNT(*))), (((((('0.3780877625092133')OR(vt0.c0)))AND(v0.c0))) BETWEEN (((vt0.c0)>(vt0.c0))) AND (((v0.c0) IS FALSE))) FROM v0 WHERE (((((('-127490196') NOT BETWEEN (NULL) AND ('-1847639461'))))==((CASE x'76bf'  WHEN NULL THEN NULL ELSE x'94f0' END))));SELECT DISTINCT (((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((0.5734382708948959) IS FALSE), ((vt0.c0)-(v0.c0)), (vt0.c0 IN ()))) AND ((vt0.c0 COLLATE NOCASE, ((((0.6619700891783991)AND(vt0.c0)))OR(vt0.c0)), ((v0.c0)>>(vt0.c0))))) FROM v0 WHERE ((('0.6304189213169952' COLLATE BINARY) IS TRUE)) LIMIT -1096240588;SELECT DISTINCT ((vt0.c0) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((v0.c0)) BETWEEN ((((v0.c0)<=(vt0.c0)))) AND (((vt0.c0 IN ())))), x'6f04', ((((~ (v0.c0))))=(((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.8171532993587174)))))) FROM v0;SELECT DISTINCT (((((v0.c0)AND(v0.c0)))AND(vt0.c0)) IN ()) FROM v0 LIMIT 1634187192 OFFSET -295508460; -- 0ms;
SELECT ALL CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt0 WHERE (IFNULL(CAST(x'' AS INTEGER), ((((x'')AND('927914940')))AND(787114211)))) GROUP BY NULL, CAST(CAST(vt0.c0 AS BLOB) AS INTEGER), CASE ((vt0.c0) NOTNULL)  WHEN CASE WHEN v0.c0 THEN 0X7f007ad4 END THEN (vt0.c0 IN ()) ELSE (((vt0.c0))<=((v0.c0))) END HAVING CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN x'' WHEN vt0.c0 THEN '-1457364881' END THEN (vt0.c0 IN (0.2235505459200413, v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN (('0.9874448195187941') BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>(vt0.c0)) THEN CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN v0.c0 COLLATE NOCASE WHEN (v0.c0 IN ()) THEN v0.c0 ELSE ((v0.c0) IS FALSE) END LIMIT 1916150717 OFFSET 877715737;SELECT ((((((vt0.c0) IS TRUE))AND((NOT (v0.c0)))))AND(((v0.c0)<=(vt0.c0)))) FROM v0 LIMIT 434751250 OFFSET 1487816941;SELECT CASE WHEN ((vt0.c0)>(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'' THEN ((v0.c0)%('.n鰮F')) WHEN (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((-125396565, vt0.c0, v0.c0))) THEN CAST('|jyr*' AS TEXT) ELSE vt0.c0 COLLATE RTRIM END FROM v0, vt0 WHERE (((4.08247583E8) NOT BETWEEN ((~ (''))) AND (((((x'')OR('0.6619700891783991')))AND(x'1d00'))))); -- 0ms;
SELECT DISTINCT AVG(MIN(CAST(v0.c0 AS NUMERIC))), ((CAST(v0.c0 AS INTEGER))LIKE(MAX(v0.c0, vt0.c0))), json_array_length(((vt0.c0)>(vt0.c0))), FIRST_VALUE((((v0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CAST(v0.c0 AS TEXT))))) OVER (), CAST((NOT (v0.c0)) AS BLOB) FROM vt0, v0 WHERE (((((((NULL)OR(9.31656064E8)))AND(0.08726694942985169))) BETWEEN (UNICODE('wK')) AND (0.1787859057674197 COLLATE RTRIM)));SELECT DISTINCT ((v0.c0 COLLATE BINARY) IS TRUE) FROM v0 WHERE ((((x'')IS NOT('1318127362')) IN ())); -- 0ms;
SELECT ALL ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT NULL) FROM vt0, v0; -- 1ms;
SELECT ALL ((((vt0.c0)>>(v0.c0)))IS(((v0.c0)/(vt0.c0)))), ((v0.c0) ISNULL) COLLATE BINARY, (((v0.c0 COLLATE BINARY))=(('-1846349029'))), CASE WHEN (NOT (vt0.c0)) THEN CAST(0.006923660384649755 AS TEXT) WHEN (((v0.c0))<=((v0.c0))) THEN (((vt0.c0, vt0.c0, vt0.c0))!=((v0.c0, vt0.c0, vt0.c0))) WHEN ((v0.c0)+('vKP&죠Uw')) THEN TRIM(0.32515147306403436, vt0.c0) WHEN ((v0.c0)GLOB(v0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN v0.c0 COLLATE BINARY THEN json_object(vt0.c0, vt0.c0) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND ('-226671489')) END, ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))>((v0.c0 IN ()))) FROM vt0, v0 WHERE (CASE WHEN CAST(NULL AS NUMERIC) THEN (NULL IN ()) WHEN CASE NULL  WHEN 0x4515e7c9 THEN NULL ELSE '' END THEN (((('')AND('-1693823483')))OR(0.22255520096900294)) WHEN ((((((((NULL)OR(x'1933')))AND(x'')))AND(x'')))AND(0Xfffffffffba518e6)) THEN (((((((((((('-154389812')AND(0.07197850415757767)))AND(0.6198820585434884)))AND(NULL)))AND('0.41521098763877895')))OR(NULL)))AND(0.7870047523331727)) WHEN (((NULL)) BETWEEN ((NULL)) AND ((NULL))) THEN TYPEOF(DISTINCT '') WHEN ((((NULL)OR(NULL)))OR(NULL)) THEN ((((NULL)AND('1182681308')))AND('-173950913')) END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(v0.c0 AS TEXT)) FROM v0 WHERE (CASE WHEN (((NULL)) NOT BETWEEN (('a5^]>-.#?')) AND ((NULL))) THEN (('%W') NOT BETWEEN ('') AND (0.7869858144182246)) WHEN ((x'') NOT BETWEEN ('-1664825649') AND (0.12645053860663846)) THEN (('') ISNULL) WHEN ((0x70e6d998)|(x'0e44')) THEN LIKELIHOOD(DISTINCT x'', 0.5033692495949632) END); -- 1ms;
SELECT DISTINCT (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))LIKE(MIN(vt0.c0))) FROM v0 WHERE ((((x''))>=((''))) COLLATE BINARY) GROUP BY ((COALESCE(DISTINCT v0.c0, v0.c0))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))));SELECT DISTINCT '-1856614849' FROM vt0, v0 WHERE ((CASE WHEN NULL THEN x'' WHEN 0X1e8cec74 THEN 'Ko H' WHEN 0x119fc65f THEN NULL WHEN -1838181260 THEN 0x3ea88098 WHEN 0.6619700891783991 THEN 2.75383615E8 ELSE '.<슰샇' END IN ())); -- 0ms;
SELECT ALL MIN(((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0))), LOWER((+ (0.30187090624315716))), (((v0.c0)) BETWEEN (((NOT (v0.c0)))) AND ((((v0.c0)LIKE(0Xffffffffba8cd1a3))))) FROM v0;SELECT ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))GLOB(vt0.c0)), (- (((vt0.c0)<=(vt0.c0)))), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (IFNULL(v0.c0, v0.c0)) AND (json_array(vt0.c0, v0.c0))) FROM v0 WHERE (NULL);SELECT DISTINCT CASE ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))  WHEN vt0.c0 THEN (vt0.c0 IN ()) END FROM v0;SELECT ALL (+ (v0.c0)), (((v0.c0 IN (vt0.c0, vt0.c0))) NOTNULL), NULLIF(((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.7905102470746631)), ((v0.c0)<=(0.3360028258833462))) FROM vt0;SELECT DISTINCT GROUP_CONCAT((vt0.c0 IN ())) FROM v0, vt0 GROUP BY (((NULL IN (vt0.c0, v0.c0)))/(v0.c0 COLLATE NOCASE)) HAVING ((((((vt0.c0)AND(v0.c0)))AND(v0.c0))) NOTNULL); -- 8ms;
SELECT DISTINCT ((0X1d56ef82) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ()))) FROM vt0 WHERE ((x'f032' COLLATE RTRIM IN ((((('M')OR(x'')))AND(0xffffffff91306e54)), (NOT (''))))) LIMIT -997670382;SELECT DISTINCT ((COUNT(vt0.c0))>=(NULL)) FROM v0, vt0; -- 1ms;
SELECT DISTINCT x'' FROM vt0, v0; -- 0ms;
SELECT ALL COUNT(((v0.c0) IS TRUE)) OVER ( ROWS  CURRENT ROW), ((vt0.c0 COLLATE BINARY)>(((vt0.c0)-(v0.c0)))), (((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND ((vt0.c0))) FROM v0 WHERE ((((((NULL))>=((NULL)))) ISNULL)) LIMIT -231377375;SELECT DISTINCT (((vt0.c0) BETWEEN (vt0.c0) AND ('')) IN (v0.c0)) FROM v0 WHERE (((('')) NOT BETWEEN ((x'')) AND ((((((((((2063668659)OR(0.36484905195694695)))OR(3.3136701E7)))OR('-1758191272')))AND(0.51303792719721))))));SELECT ((v0.c0)!=(vt0.c0)) COLLATE BINARY FROM vt0 WHERE (0X63c9d999);SELECT vt0.c0 FROM v0, vt0 ORDER BY CASE WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN ((vt0.c0)*(v0.c0)) END DESC; -- 2ms;
SELECT (((vt0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((vt0.c0)|(vt0.c0))))), (((vt0.c0)) NOT BETWEEN (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((NULL, '-1238898096', v0.c0)) AND ((v0.c0, vt0.c0, '0.8604060125055982'))))) AND ((CAST(vt0.c0 AS TEXT)))), ROW_NUMBER() OVER (), ((((CASE x''  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)OR((0xffffffffab3f36fc IN (vt0.c0, v0.c0)))))OR(((v0.c0) NOTNULL))), GROUP_CONCAT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) FROM vt0, v0 WHERE ((((((((x''))<>((x''))))OR(CAST(NULL AS TEXT))))AND(CAST(x'' AS INTEGER)))) ORDER BY NULLIF(DISTINCT (vt0.c0 IN ()), (x'' IN ())) ASC, load_extension((~ (vt0.c0))) ASC  NULLS LAST;SELECT DISTINCT v0.c0, x'20f1', (CAST(v0.c0 AS REAL) IN (((v0.c0)LIKE(vt0.c0)), ((((((((x'')AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) FROM vt0, v0 GROUP BY CASE ((vt0.c0) NOT BETWEEN (x'ce769c36') AND (vt0.c0))  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)||(v0.c0)) WHEN (+ ('1500879095')) THEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN LIKELY(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) END, x'', (NOT (vt0.c0)) COLLATE RTRIM HAVING v0.c0; -- 5ms;
SELECT ((((CAST(v0.c0 AS TEXT))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR(CAST(x'' AS INTEGER))), (NOT (CASE WHEN v0.c0 THEN 0.10666939201226988 END)), (NOT (((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))) FROM v0 WHERE ((((NOT ('1502230896')))<>((('1502230896')-(129135720)))));SELECT CASE WHEN LTRIM(v0.c0) THEN (v0.c0 IN ()) ELSE v0.c0 COLLATE BINARY END FROM vt0, v0; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0, v0 WHERE (((-1.003226579E9 IN ()) IN ())); -- 0ms;
SELECT ALL ((((((vt0.c0)IS NOT(v0.c0)))AND(((v0.c0) ISNULL))))AND(((0.13216859471912323)IS(v0.c0)))) FROM v0, vt0 WHERE ((NOT (((((((((NULL)OR('1935885733')))OR(-1238898096)))AND(NULL)))OR(0.8608877601755732))))) ORDER BY (((((+ (v0.c0)))OR(CAST(v0.c0 AS NUMERIC))))AND(CASE WHEN 0xffffffff936cc0b7 THEN vt0.c0 ELSE vt0.c0 END)) DESC; -- 0ms;
SELECT DISTINCT (AVG(vt0.c0) IN ()) FROM vt0, v0 WHERE ((NOT (IFNULL(DISTINCT x'', 1302928210)))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN '1791166473' WHEN (NOT (vt0.c0)) THEN COUNT(vt0.c0) ELSE MAX(v0.c0) END, ((((((((1.247523656E9)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR('-1057333845')) FROM v0 NOT INDEXED, vt0 WHERE (((CAST('829124732' AS NUMERIC))||(0.29097709783603587 COLLATE NOCASE))); -- 3ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, v0 LIMIT -1417530879 OFFSET 934948635; -- 1ms;
SELECT DISTINCT ((((((((((((((v0.c0)OR(v0.c0)))AND('')))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))%(vt0.c0)), (- ((NOT (v0.c0)))), (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))), CAST(v0.c0 COLLATE NOCASE AS REAL), ((vt0.c0 COLLATE NOCASE) BETWEEN (((v0.c0) BETWEEN (NULL) AND (vt0.c0))) AND (((vt0.c0)/(vt0.c0)))) FROM vt0 WHERE (((((0.42843728733797337)AND(NULL)))+(NULL)));SELECT DISTINCT ((((vt0.c0))<((v0.c0))) IN ()) FROM v0 WHERE ((((NULL) NOT NULL) IN ())); -- 0ms;
SELECT ALL COUNT(((((vt0.c0)AND(v0.c0)))AND(vt0.c0))) COLLATE NOCASE, (((vt0.c0)) BETWEEN ((vt0.c0)) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))), 389114764 FROM v0, vt0 WHERE (LIKELY(DISTINCT ((((NULL)OR(NULL)))OR(x'')))); -- 0ms;
SELECT ALL (+ (vt0.c0)) COLLATE RTRIM FROM vt0, v0 WHERE (CAST((('-98137672') NOT BETWEEN ('-138354280') AND ('0.6901522874727362')) AS BLOB)); -- 0ms;
SELECT DISTINCT AVG((v0.c0 IN ())), (- (CASE vt0.c0  WHEN v0.c0 THEN -2.116574848E9 ELSE v0.c0 END)), COUNT(AVG(((NULL) BETWEEN (v0.c0) AND (x'')))) FROM v0 WHERE (((((x'')-(NULL))) ISNULL)) LIMIT -1862248123 OFFSET -130538172;SELECT DISTINCT v0.c0 FROM vt0, v0; -- 0ms;
SELECT DISTINCT TOTAL(('So' IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE (((NULL) NOT BETWEEN (((NULL)OR(NULL))) AND (NULL))); -- 0ms;
SELECT NULL FROM v0, vt0; -- 0ms;
SELECT ALL NULL FROM vt0 WHERE ((((((0.025253960836759348) NOT BETWEEN ('OCp]') AND (NULL))))!=((((x'1925') IS FALSE))))); -- 0ms;
SELECT ALL CASE WHEN MIN(NULL, v0.c0) THEN LIKELY(DISTINCT NULL) ELSE (x'' IN (vt0.c0)) END, vt0.c0, ((vt0.c0 COLLATE BINARY)LIKE(((NULL)|(vt0.c0)))) FROM vt0, v0 WHERE (1.23400305E8); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((CAST(vt0.c0 AS BLOB)) IS TRUE), ((v0.c0 IN ()) IN ()) FROM v0 WHERE (CAST(CAST(0.5196553554240325 AS REAL) AS NUMERIC)) LIMIT -1250241715 OFFSET -477092259;SELECT DISTINCT (((((v0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((((v0.c0)LIKE(vt0.c0))) IS TRUE) FROM v0 WHERE (CASE NULL COLLATE NOCASE  WHEN 0.14323779268718362 THEN (((NULL))<=(('-1823231801'))) WHEN ((0.026209140912444417)%('2111959089')) THEN NULLIF('', 2.130737876E9) WHEN ((0.8602465825247302) NOT NULL) THEN (0.9580817082067865 IN ()) ELSE CASE WHEN '0.3799531782131754' THEN x'' END END);SELECT '' FROM v0, vt0 WHERE (('1175166617' IN ()) COLLATE NOCASE); -- 0ms;
SELECT ALL TOTAL(((v0.c0)==(v0.c0))) FROM v0 WHERE (LAST_INSERT_ROWID()); -- 1ms;
SELECT ALL LIKELY(((vt0.c0)<>(v0.c0))) FROM v0 WHERE ((((((((((((((((('2139638523')AND(0.14463608492450486)))OR(NULL)))OR(0.9097727448241418)))AND(x'')))OR(((x'')|('0.8200495373900972')))))OR(((NULL) NOT NULL))))AND(('' IN (x'62bf')))))AND(-1029337125)));SELECT DISTINCT (- ((('-956395357')|(vt0.c0)))) FROM v0, vt0 WHERE ((((NOT (9.79093142E8)))LIKE(CAST(NULL AS BLOB)))); -- 0ms;
SELECT ((((vt0.c0)AND(v0.c0))) NOT BETWEEN ((~ (x'eba5'))) AND (((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))), CAST(((v0.c0)|(vt0.c0)) AS NUMERIC), v0.c0 COLLATE BINARY FROM vt0 RIGHT OUTER JOIN v0 ON (((((((vt0.c0))>=((vt0.c0))))OR(((vt0.c0) NOTNULL))))AND(((((v0.c0)AND(v0.c0)))OR(0xffffffff860516d5)))); -- 0ms;
SELECT ALL CAST(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END AS BLOB) FROM v0, vt0 WHERE ('-419616951') GROUP BY NULL, (+ (CASE v0.c0  WHEN '-2116574848' THEN vt0.c0 END)), ((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(((0.49353088660539246) BETWEEN (v0.c0) AND (vt0.c0)))))AND(vt0.c0)) HAVING ((NULL) BETWEEN ((NOT (v0.c0))) AND ((('')|(vt0.c0)))); -- 6ms;
SELECT DISTINCT (~ (v0.c0)) FROM vt0;SELECT DISTINCT (((((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '-98137672', vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))OR((v0.c0 IN (vt0.c0)))))AND((- (']MP8G^_<_')))) FROM vt0, v0 WHERE (CAST((- ('')) AS TEXT)) LIMIT 1630208945; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ROWS BETWEEN NULL PRECEDING AND ((vt0.c0 COLLATE BINARY) NOT NULL) PRECEDING), CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC), (((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))LIKE((- (v0.c0)))) FROM vt0, v0 WHERE (((CASE 0.7952101585463093  WHEN '1588040912' THEN '950126079' END) NOT NULL)) ORDER BY (+ (v0.c0)) ASC, ABS((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))); -- 0ms;
SELECT DISTINCT (- (((v0.c0)>(v0.c0)))) FROM v0 WHERE (((NULLIF(DISTINCT x'', NULL)) IS FALSE)) LIMIT -2134862523; -- 0ms;
SELECT ((((vt0.c0) NOTNULL)) IS FALSE) FROM v0;SELECT (((((v0.c0) IS TRUE)))>(((0.3700697027189256 IN ())))) FROM v0, vt0 WHERE ((((~ (NULL)))IS((((('-98137672')AND('0.2064603951887043')))OR(NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN (v0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE vt0.c0 END, ((DATE(vt0.c0, v0.c0, NULL))<(IFNULL(v0.c0, NULL))), CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '' COLLATE BINARY ELSE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('0.6306623763583169'))) END FROM v0, vt0 WHERE (((NULL IN ()) IN ((('b苝!cd*2e') NOT NULL)))); -- 1ms;
SELECT DISTINCT ((((vt0.c0)>(vt0.c0))) BETWEEN ((((0.831272098636976)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (v0.c0)) FROM v0;SELECT DISTINCT ((((v0.c0) ISNULL)) NOTNULL) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((vt0.c0)<<(vt0.c0)) COLLATE NOCASE FROM vt0 GROUP BY (((((v0.c0) NOT NULL), v0.c0, ((vt0.c0)|(vt0.c0))))>=((vt0.c0, v0.c0, (vt0.c0 IN ())))), (CAST(v0.c0 AS NUMERIC) IN ()), ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)AND(TRIM(v0.c0, vt0.c0))))OR((v0.c0 IN (v0.c0, v0.c0)))) LIMIT 667861017 OFFSET -2024454777;SELECT x'' FROM vt0, v0; -- 0ms;
SELECT ALL (vt0.c0 IN ()) COLLATE BINARY FROM v0, vt0 WHERE (CAST('1288465098' AS NUMERIC)); -- 0ms;
SELECT DISTINCT (- (((vt0.c0)+(v0.c0)))) FROM vt0, v0 WHERE (CAST(((0.2064603951887043) NOTNULL) AS TEXT)); -- 0ms;
SELECT ALL (((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), vt0.c0 COLLATE NOCASE)) AND ((COUNT(*), COUNT(v0.c0), v0.c0 COLLATE RTRIM))) FROM v0 WHERE (json_quote(CASE WHEN '0.25859788913454473' THEN x'' WHEN '%%' THEN NULL WHEN x'' THEN 0.26874428867550304 END));SELECT DISTINCT CASE ((((v0.c0)OR(v0.c0)))AND(0Xffffffffa382116f))  WHEN (v0.c0 IN ()) THEN ((v0.c0)+(vt0.c0)) WHEN (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, -9223372036854775808, v0.c0)) AND ((v0.c0, v0.c0, vt0.c0))) THEN ((((v0.c0)AND(v0.c0)))OR(NULL)) WHEN ((vt0.c0)AND(v0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'2722f7fb' END ELSE (v0.c0 IN (v0.c0, v0.c0)) END, ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))&(((vt0.c0)!=(v0.c0)))), (((CAST(vt0.c0 AS INTEGER)))>=((COUNT(v0.c0)))) FROM v0, vt0 WHERE (((',#p1.⨂‹,')>(0x71812a02)) COLLATE BINARY) GROUP BY ((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))LIKE(CAST(vt0.c0 AS TEXT))) HAVING (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT ''), ((v0.c0) NOTNULL), (- (v0.c0)))) AND ((CAST(v0.c0 AS BLOB), v0.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))); -- 4ms;
SELECT DISTINCT CAST(vt0.c0 AS NUMERIC) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0 COLLATE BINARY)))OR(((0.7377337957325576) NOTNULL))) FROM vt0;SELECT DISTINCT ((((vt0.c0)%(vt0.c0))) ISNULL) FROM v0, vt0; -- 0ms;
SELECT ((CASE WHEN vt0.c0 THEN v0.c0 END)IS NOT(LOWER(vt0.c0))) FROM v0, vt0 WHERE ('JC*RI%'); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))))) FROM v0;SELECT DISTINCT (((v0.c0))=((v0.c0))) COLLATE BINARY, CAST(LOWER(v0.c0) AS NUMERIC), ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(((v0.c0) NOT NULL))))AND(CAST(v0.c0 AS BLOB))))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(v0.c0 COLLATE RTRIM)) FROM v0, vt0 WHERE ((((('')*('1157710475')))<<((NULL IN ())))); -- 0ms;
SELECT CASE CAST(v0.c0 AS TEXT)  WHEN (vt0.c0 IN (vt0.c0, v0.c0)) THEN 0.7478105488763053 END FROM vt0;SELECT ALL (((CAST(0.7352367739662374 AS BLOB), (((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))), CASE WHEN v0.c0 THEN v0.c0 END, v0.c0 COLLATE RTRIM, (((vt0.c0))>=((v0.c0)))))>((MAX(vt0.c0), (((v0.c0))==((v0.c0))), CAST(vt0.c0 AS TEXT), ((((v0.c0)AND(v0.c0)))OR(vt0.c0)), ROUND(v0.c0, v0.c0)))) FROM v0, vt0 WHERE (CASE ((x'')!=(1.30292821E9))  WHEN ((((x'')OR('?}ZYyQ>')))AND('mR')) THEN ((((4.4807556E8)AND(NULL)))OR(0.4849932428152527)) ELSE CAST('94449320' AS TEXT) END) LIMIT -344607746 OFFSET 1333736099; -- 1ms;
SELECT DISTINCT (((- (v0.c0)))OR(v0.c0 COLLATE NOCASE)) FROM vt0 WHERE ((+ (((1336262709)IS NOT('VNn_벪'))))) GROUP BY ((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))%(((v0.c0)OR(vt0.c0)))) HAVING CAST(((v0.c0)%(vt0.c0)) AS BLOB) ORDER BY ((((((vt0.c0) ISNULL))OR(TRIM(DISTINCT v0.c0, v0.c0))))AND(vt0.c0 COLLATE NOCASE)), ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL);SELECT DISTINCT ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) FROM v0 ORDER BY (((vt0.c0)=(v0.c0)) IN ()) ASC;SELECT DISTINCT ((((SUM(v0.c0))AND(vt0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))), '1791166473', (~ (CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ('-1285128766');SELECT ALL CUME_DIST() OVER () FROM v0; -- 1ms;
SELECT (((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0, v0 WHERE (((ABS('1792249066'))*((((('1318127362')AND(317371002)))AND('-1114512198'))))); -- 0ms;
SELECT ALL CASE TOTAL(vt0.c0)  WHEN 1.588751605E9 THEN ((((((((v0.c0)OR(vt0.c0)))AND(x'')))OR(vt0.c0)))OR('0.7504779680158568')) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) WHEN AVG(x'd109') THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN ((0.6452424942585352)-(v0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN NULL COLLATE NOCASE THEN (NOT (vt0.c0)) WHEN 0.7132837626540637 THEN ((v0.c0) NOTNULL) WHEN NULLIF(vt0.c0, vt0.c0) THEN ((vt0.c0) ISNULL) ELSE (vt0.c0 IN ()) END FROM vt0, v0; -- 1ms;
SELECT DISTINCT ((((v0.c0)>=(vt0.c0)))/(CAST(vt0.c0 AS REAL))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT COUNT(vt0.c0) OVER (), (((('07 P{픋G' COLLATE BINARY)AND(((vt0.c0)==(v0.c0)))))OR(vt0.c0)), CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS NUMERIC), (- (COALESCE(DISTINCT v0.c0, v0.c0))), (((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(((vt0.c0) NOTNULL))) FROM v0, vt0; -- 3ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL) FROM vt0, v0; -- 1ms;
SELECT ALL MAX((~ (v0.c0))) FROM v0, vt0 WHERE (((CAST(NULL AS REAL)) BETWEEN (LIKELY(NULL)) AND ((~ (-1.262705509E9))))) ORDER BY ((ABS(DISTINCT v0.c0))>(((v0.c0) NOT NULL))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE NOCASE) BETWEEN (CAST(v0.c0 AS BLOB)) AND (v0.c0)), CASE vt0.c0 COLLATE BINARY  WHEN MAX(v0.c0) THEN ((('&2r{~]\n')) NOT BETWEEN ((vt0.c0)) AND ((NULL))) END, -1.285128766E9 FROM vt0 WHERE ((('-1382617451' COLLATE BINARY) NOT BETWEEN (((0.6718076996117203)%(NULL))) AND (CAST(136228594 AS INTEGER))));SELECT DISTINCT (COUNT(v0.c0) IN ()) FROM vt0; -- 0ms;
SELECT 0.8267825416245815 FROM v0 WHERE (json_type(CASE WHEN 0.7395869527293569 THEN x'' WHEN '-1885804339' THEN 0.4235250841877607 WHEN x'056a3441' THEN '1612394384' WHEN '' THEN x'92dc' WHEN 8603328 THEN 0xffffffffe2a5aad9 WHEN x'9d76' THEN '1857082192' WHEN NULL THEN -158896767 END));SELECT CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((((((((v0.c0)OR(vt0.c0)))AND(0Xffffffffec4c8699)))OR(v0.c0)))AND('')) END, ((((((((x'')AND(((v0.c0)<(vt0.c0)))))OR(0xffffffffb4bca49b)))OR((('') ISNULL))))OR(SUM('-816207929'))), ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))LIKE(v0.c0)) FROM v0, vt0 WHERE (CASE 0.9236213698209345 COLLATE RTRIM  WHEN (('1724280202') NOT BETWEEN ('(ttj/	Q!釜') AND (x'f7ee')) THEN SQLITE_SOURCE_ID() WHEN ((0.4071814296569789)LIKE('1916150717')) THEN LOWER(DISTINCT 0.6980356072556406) WHEN ((((0Xffffffffc5a0537c)OR(',gGQ59oK')))OR('')) THEN CAST(-2.008363024E9 AS BLOB) ELSE (((0X710bd7dd, 'X''w7糒', x''))=((0.44318726752286897, 0.563185727173791, NULL))) END) LIMIT -1664605199 OFFSET 1382620592; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (v0.c0)) THEN (v0.c0 IN ()) WHEN CAST(v0.c0 AS TEXT) THEN ((vt0.c0)<(v0.c0)) WHEN v0.c0 COLLATE BINARY THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END ELSE CASE WHEN v0.c0 THEN vt0.c0 END END, v0.c0, ((((vt0.c0) IS FALSE))|(NULL COLLATE NOCASE)), COUNT(((((vt0.c0)OR(v0.c0)))AND(0.8240971236475325))) OVER (), (((vt0.c0) ISNULL) IN ((((('l蟓')AND(NULL)))AND(vt0.c0)))) FROM vt0, v0 ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER), CAST(CASE WHEN 0.5160882534801973 THEN vt0.c0 END AS NUMERIC); -- 5ms;
SELECT DISTINCT ((((0.7102271385971183) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (-731650258) AND (((NULL)+(v0.c0)))) FROM v0, vt0; -- 0ms;
SELECT ALL ((CAST(v0.c0 AS INTEGER))/(((x'')AND(vt0.c0)))) FROM v0, vt0; -- 0ms;
SELECT ALL ((v0.c0) IS TRUE) FROM v0 WHERE (CASE ((x'')>>(0.6905582971196983))  WHEN (('') BETWEEN (NULL) AND ('-818325139')) THEN (NULL IN ()) WHEN '-138354280' THEN CASE 0xffffffffdbe4eefb  WHEN '89213956' THEN NULL ELSE x'' END WHEN CAST(0.5379624218299237 AS INTEGER) THEN ((0Xffffffffbcb50120) BETWEEN ('벪') AND (x'')) ELSE ((x'ed47')%(x'')) END); -- 0ms;
SELECT DISTINCT RTRIM(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), CAST(v0.c0 AS REAL) COLLATE BINARY, ((v0.c0) IS TRUE) COLLATE BINARY FROM v0, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((MAX('^{Rg	'))) AND ((((vt0.c0)LIKE(NULL))))) FROM v0;SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((0.8845455723379207)) BETWEEN ((((x'ab3e')AND(0.4415872027166554)))) AND (((((NULL)) BETWEEN (('-1892573366')) AND (('-116016514'))))))); -- 0ms;
SELECT DISTINCT (UNLIKELY(DISTINCT vt0.c0) IN ()) FROM v0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOTNULL) FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE FROM v0 ORDER BY '%.7/x2'''  NULLS LAST;SELECT DISTINCT 0.332932309478138 FROM vt0 GROUP BY x'', CAST((v0.c0 IN ()) AS REAL), (((vt0.c0, x'', NULL)) NOT BETWEEN ((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), '-967281258')) AND ((CAST(v0.c0 AS REAL), ((v0.c0) IS FALSE), ((((x'')OR(vt0.c0)))AND(vt0.c0))))) HAVING (vt0.c0 IN ());SELECT DISTINCT ((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) IS TRUE) FROM vt0, v0 WHERE (((((((((((((((NULL)AND('V]^NH.UF')))OR(-1.3835428E8)))AND(2090678210)))AND(NULL)))OR('-436170256')))AND(NULL))) BETWEEN (0.977466818244123) AND ((('-1630650689')=(x''))))); -- 1ms;
SELECT DISTINCT ((COUNT(*)) IS TRUE) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((vt0.c0) IS FALSE), CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT), CASE CAST(v0.c0 AS INTEGER)  WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN NULL END FROM vt0;SELECT DISTINCT (- (x'2e64')), ((vt0.c0 COLLATE NOCASE)+((v0.c0 IN ()))), COUNT(*), ((((vt0.c0)|(v0.c0)))LIKE(rtreenode(v0.c0, vt0.c0))), v0.c0 FROM vt0, v0 WHERE (0.4676494951976069); -- 1ms;
SELECT DISTINCT '\Y' COLLATE NOCASE, CASE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN (vt0.c0 IN (v0.c0)) THEN (- (725923818)) WHEN ((v0.c0)&(-8.16207929E8)) THEN v0.c0 COLLATE BINARY END, ((CASE WHEN v0.c0 THEN v0.c0 END)-(((v0.c0) IS TRUE))) FROM v0;SELECT CASE ((((vt0.c0)AND('\Y')))OR(vt0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN LOWER(DISTINCT vt0.c0) ELSE vt0.c0 COLLATE NOCASE END, TOTAL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) OVER ( PARTITION BY ((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM, CAST(CAST(v0.c0 AS BLOB) AS INTEGER)), SUM(CAST(v0.c0 AS BLOB)) FROM vt0, v0; -- 2ms;
SELECT (+ ((((('{}~')AND(v0.c0)))AND(vt0.c0)))), (('0.8329458741663094') NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) AND ((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((x'', vt0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))), CAST('-1171752898' AS BLOB) COLLATE NOCASE FROM v0 WHERE (LIKELIHOOD(((('1472020707'))<=((953018587))), 0.8784652851792171)) GROUP BY CAST(((v0.c0)||(vt0.c0)) AS INTEGER) HAVING LTRIM(vt0.c0, (NOT (NULL)));SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, ((vt0.c0)>>(v0.c0)), vt0.c0)) AND ((SUM(vt0.c0), ((vt0.c0)LIKE(NULL)), CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) FROM v0 GROUP BY NULL, (('1553199954') IS FALSE), NULL;SELECT DISTINCT (((NOT (v0.c0))) BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (v0.c0)) FROM vt0;SELECT DISTINCT CASE WHEN COUNT(vt0.c0) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE ((vt0.c0)<=(vt0.c0)) END FROM v0 LIMIT -938168203;SELECT DISTINCT TOTAL(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))), MIN(0.20738775520265873), COUNT(*) OVER () FROM vt0 GROUP BY ((((vt0.c0 COLLATE NOCASE)OR((((((((('F<q]X_P0d')AND(v0.c0)))AND(v0.c0)))AND(0.2336094571388717)))AND(v0.c0)))))OR(((vt0.c0)AND(v0.c0)))) HAVING ((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))IS NOT(AVG(v0.c0)));SELECT DISTINCT DENSE_RANK() OVER () FROM v0, vt0 WHERE (((((((((((('-904213122')) BETWEEN ((x'')) AND ((NULL))))AND(CAST(NULL AS NUMERIC))))OR(LOWER(DISTINCT 0.1973746769784619))))AND(NULL COLLATE RTRIM)))AND((('~K8P''\ry') IS TRUE)))) GROUP BY CASE (v0.c0 IN (vt0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN vt0.c0 END, JULIANDAY(((vt0.c0)%(v0.c0)), (~ (v0.c0)), (+ (v0.c0))), ((((((((LIKELIHOOD(vt0.c0, 0.6663022463063188))OR(v0.c0 COLLATE BINARY)))OR((((vt0.c0))=((v0.c0))))))AND(vt0.c0)))OR(((v0.c0)IS NOT(v0.c0)))) HAVING ((LIKELY(DISTINCT v0.c0))%(vt0.c0)); -- 1ms;
SELECT (TOTAL(v0.c0) IN ()) FROM v0, vt0 WHERE (UNICODE(((1.913843215E9)<<(NULL)))); -- 0ms;
SELECT ALL (~ (((v0.c0)<=('1870363402')))) FROM v0 GROUP BY (- (CASE WHEN v0.c0 THEN v0.c0 END)), CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)>=(v0.c0)) ELSE ((vt0.c0)LIKE(v0.c0)) END, ((((v0.c0)IS NOT(vt0.c0)))>>(((((vt0.c0)OR(vt0.c0)))OR(x'')))), ((((x'10b59814')>>(vt0.c0))) IS FALSE), vt0.c0 HAVING ((TRIM(v0.c0)) IS FALSE) LIMIT 477598589;SELECT v0.c0 FROM vt0;SELECT DISTINCT CAST((NOT (vt0.c0)) AS REAL) FROM v0, vt0; -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN x'43c1256e' THEN '1971183736' WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END IN (CAST(vt0.c0 AS TEXT))) FROM v0 NOT INDEXED WHERE ('497393809');SELECT DISTINCT (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM FROM v0 WHERE ((~ ('1884956371')) COLLATE RTRIM) GROUP BY NULL;SELECT ((((v0.c0)>=(v0.c0)))>>(v0.c0 COLLATE NOCASE)) FROM vt0 WHERE ((((('') BETWEEN (NULL) AND (NULL))) NOT NULL));SELECT (((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((((v0.c0)&(v0.c0)), ((((v0.c0)AND(vt0.c0)))AND(v0.c0)), SUM(vt0.c0))) AND ((x'f443', ABS(vt0.c0), ((v0.c0)-(vt0.c0))))) FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, v0.c0))))GLOB(CASE WHEN '0.5734382708948959' THEN vt0.c0 ELSE vt0.c0 END)) ASC;SELECT DISTINCT CASE (vt0.c0 IN (vt0.c0))  WHEN (((v0.c0))==((vt0.c0))) THEN vt0.c0 COLLATE NOCASE WHEN (((v0.c0, '2筸(<''je6', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END WHEN COUNT(*) THEN CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END ELSE (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END FROM v0;SELECT ALL COUNT(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END) OVER (), LIKELY(CAST(v0.c0 AS REAL)), (v0.c0 COLLATE RTRIM IN (((((-967281258)AND(v0.c0)))AND('(')), ((vt0.c0)=(vt0.c0)))) FROM vt0, v0 WHERE (0.08836588342800777) LIMIT 433212747; -- 4ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL))/((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((1875651237, v0.c0, 0Xffffffffd483f85f)) AND ((vt0.c0, vt0.c0, vt0.c0))))), CASE CASE WHEN v0.c0 THEN vt0.c0 END  WHEN '0.6304189213169952' THEN CASE WHEN vt0.c0 THEN v0.c0 ELSE -4.99090753E8 END END, (NOT (v0.c0 COLLATE RTRIM)) FROM v0, vt0 WHERE ((((NULL) BETWEEN (x'') AND (-35932201)) IN (GLOB(-9.04213122E8, '-878981655')))); -- 1ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOTNULL) FROM vt0, v0 GROUP BY ((((((vt0.c0)OR(vt0.c0)))OR(0.36115528954826315))) NOT NULL); -- 2ms;
SELECT DISTINCT TOTAL(((((vt0.c0)AND(0.29097709783603587)))OR(vt0.c0))), (~ (v0.c0)), ((GROUP_CONCAT(vt0.c0))>>(MIN(vt0.c0))) FROM vt0, v0; -- 2ms;
SELECT ALL (+ (x'')) FROM vt0 GROUP BY vt0.c0 COLLATE BINARY HAVING UNLIKELY(DISTINCT (((vt0.c0)) BETWEEN ((430952251)) AND ((vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((LIKE(vt0.c0, vt0.c0, 'P'))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)OR(v0.c0)))), ((GLOB(v0.c0, v0.c0))AND(((vt0.c0) IS FALSE))), (((v0.c0)>(vt0.c0)) IN ((vt0.c0 IN (v0.c0)))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)<>((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT ALL (((((- (v0.c0)))OR(json_insert(v0.c0, vt0.c0, vt0.c0))))OR(SUM(vt0.c0))) FROM vt0, v0 LIMIT 573255356; -- 1ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((((v0.c0))>((vt0.c0))))) FROM v0 WHERE (((CAST('\nZ' AS INTEGER))>(0.08007400244052665 COLLATE NOCASE))) ORDER BY '1882432806' DESC  NULLS LAST;SELECT DISTINCT TOTAL((NOT (vt0.c0))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP), COUNT(*) OVER ( ROWS (((v0.c0)) NOT BETWEEN (((vt0.c0 IN (NULL)))) AND ((((v0.c0)%(v0.c0))))) PRECEDING), UNLIKELY(DISTINCT v0.c0 COLLATE NOCASE) FROM v0, vt0 WHERE (CAST(CASE NULL  WHEN NULL THEN NULL END AS TEXT)); -- 0ms;
SELECT ALL LAG(0.6999835905280543, (((+ (vt0.c0))) BETWEEN (COALESCE(DISTINCT vt0.c0, v0.c0)) AND (vt0.c0 COLLATE NOCASE)), ((((((((((v0.c0)/(vt0.c0)))AND(((v0.c0)AND(v0.c0)))))OR((vt0.c0 IN ()))))AND(v0.c0 COLLATE NOCASE)))OR(vt0.c0 COLLATE BINARY))) OVER () FROM vt0, v0 WHERE (((0X5eb26cf5)<<(NULL)) COLLATE RTRIM); -- 0ms;
SELECT ((((v0.c0 IN ('('))))<((x''))), (vt0.c0 IN ()), COUNT(*) OVER (), (+ (vt0.c0 COLLATE RTRIM)), ((v0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (v0.c0 COLLATE RTRIM)) FROM v0;SELECT DISTINCT ((CASE WHEN v0.c0 THEN v0.c0 END)<((((0.5379351223104739)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) FROM v0, vt0 ORDER BY (- (((vt0.c0)<=(v0.c0)))) ASC  NULLS LAST; -- 3ms;
SELECT ALL ((((v0.c0) IS FALSE))*(v0.c0 COLLATE RTRIM)), (+ (((vt0.c0) IS TRUE))), (- (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)) FROM v0 GROUP BY ((CAST(v0.c0 AS REAL))<<((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))));SELECT DISTINCT CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND ('436912130')) THEN '' END, TRIM((v0.c0 IN ()), 0.640200179768539), ((LIKELY(DISTINCT vt0.c0)) BETWEEN ((((NULL, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, '340071946')))) AND (CAST(vt0.c0 AS BLOB))), COUNT((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, NULL, NULL)) AND ((vt0.c0, vt0.c0, v0.c0)))), (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) FROM vt0 GROUP BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) HAVING MAX(COALESCE(vt0.c0, v0.c0));SELECT DISTINCT (((((vt0.c0) IS FALSE)))>=(((+ (vt0.c0))))) FROM v0 WHERE ((((((0.6600635728472112) ISNULL), ((NULL)||(NULL)), (+ (x''))))>=((('9B' IN ()), (('931656064') NOTNULL), ((0.5962059080224111) BETWEEN (4.02554018E8) AND (0.47684517295538764)))))) LIMIT 1729498226 OFFSET 1033538393;SELECT DISTINCT ((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE FROM vt0, v0 WHERE (((NULL)+(0.014911516069679553)) COLLATE RTRIM); -- 0ms;
SELECT ALL (v0.c0 IN ()) FROM v0, vt0 WHERE (CASE '402554018' COLLATE NOCASE  WHEN ((x'6324')AND(0.2283949909949211)) THEN ((((((((NULL)OR(NULL)))OR('')))AND(x'')))OR(NULL)) ELSE 0.2064603951887043 END) ORDER BY CAST(1250099559 AS REAL) DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT (~ (((v0.c0)-(vt0.c0)))) FROM v0, vt0 LIMIT -1151033492; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB) FROM v0 WHERE (CAST(CAST(NULL AS NUMERIC) AS NUMERIC));SELECT (((NOT (vt0.c0))) BETWEEN (((vt0.c0) ISNULL)) AND (((v0.c0) NOTNULL))) FROM vt0, v0 WHERE (((UPPER('-1252739726'))AND(((x'') BETWEEN ('-1693823483') AND (1302928210))))); -- 0ms;
SELECT ALL COUNT(*) FROM v0; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN (((((v0.c0))>=((v0.c0))))) AND ((TOTAL_CHANGES()))) FROM vt0 WHERE ((((NOT (NULL))) BETWEEN (((((x'')AND(x'')))AND(0.3187310553209449))) AND (((x'')GLOB(0X17ac52eb)))));SELECT CAST(IFNULL(v0.c0, vt0.c0) AS REAL), (+ ((~ (vt0.c0)))), ((vt0.c0 COLLATE BINARY) NOTNULL) FROM v0, vt0; -- 1ms;
SELECT DISTINCT AVG(v0.c0) FROM v0, vt0 LIMIT -1697791907 OFFSET -461086684; -- 1ms;
SELECT ALL SUM(((((v0.c0)AND(vt0.c0)))AND(v0.c0)) COLLATE BINARY) FROM v0 WHERE ((((NULL)<('1792249066')) IN ()));SELECT CAST((((v0.c0))>((0.44479015956049495))) AS TEXT) FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))) FROM vt0, v0 WHERE (LIKE(0.7306590206216648, (('-1792066192') BETWEEN (0.1787859057674197) AND ('')), '0')); -- 0ms;
SELECT ALL SUM(COALESCE(v0.c0, vt0.c0, v0.c0, x'c0c2')) OVER () FROM vt0, v0; -- 3ms;
SELECT CASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) ELSE 'I' END FROM v0;SELECT ((vt0.c0)&(((v0.c0) IS FALSE))) FROM vt0, v0; -- 0ms;
SELECT (((vt0.c0)-(vt0.c0)) IN ()), (vt0.c0 IN ()) COLLATE NOCASE, ((v0.c0)>>(LIKELY(v0.c0))) FROM v0, vt0 WHERE (((COALESCE('-388468304', NULL, x'', x'')) NOTNULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c0, vt0.c0, v0.c0))>(('bCK	]''', v0.c0, v0.c0)))) OVER ( ORDER BY (((LIKELY(v0.c0), vt0.c0, ((vt0.c0) ISNULL)))<(((+ (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c0)<=(vt0.c0))))) DESC, (~ (vt0.c0))  NULLS FIRST) FROM v0 WHERE (NULL);SELECT v0.c0 FROM vt0, v0; -- 0ms;
SELECT ALL ((vt0.c0) NOTNULL) COLLATE NOCASE FROM v0 CROSS JOIN vt0 ON '' WHERE ((((0.563403944645523))<=((COALESCE(DISTINCT '0.28235429443505444', NULL, NULL, '-1861616778'))))); -- 0ms;
SELECT ALL (((((((((v0.c0 IN ()))OR(v0.c0)))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))))AND(v0.c0)), (((v0.c0 IN ())) NOTNULL), LAG(CASE ((v0.c0)OR(v0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0))<=((v0.c0))) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END, (((x'' IN (v0.c0)))LIKE((NOT (v0.c0)))), (((v0.c0)) NOT BETWEEN ((((v0.c0)/(v0.c0)))) AND ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))))) OVER (), NULL, ((v0.c0 COLLATE RTRIM)GLOB((((vt0.c0, v0.c0, v0.c0))<>((vt0.c0, v0.c0, vt0.c0))))) FROM v0;SELECT ((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)LIKE(v0.c0)))))AND(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) FROM vt0, v0 WHERE (((7.06564281E8)<=(((((-3.1646593E7)OR(0xffffffffd95cf18e)))OR('.%'))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) AND (((((((((('330281292')OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))))) FROM vt0, v0 WHERE (CAST(0.7071805536114634 AS TEXT) COLLATE RTRIM); -- 0ms;
SELECT ALL (((v0.c0 IN ())) NOTNULL), (vt0.c0 COLLATE NOCASE IN ()), 0.26694905618687403 FROM v0, vt0; -- 0ms;
SELECT ALL ((((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(((vt0.c0) IS FALSE))))OR(((v0.c0)>=('-Bp^6M/')))))AND(((vt0.c0)<=(v0.c0)))))OR(AVG(v0.c0))), v0.c0, CAST((vt0.c0 IN ()) AS INTEGER), TOTAL(((v0.c0)<(v0.c0))) OVER (), ((((vt0.c0)<=(v0.c0)))>=(vt0.c0 COLLATE BINARY)), UNLIKELY(((vt0.c0)>(vt0.c0))), ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))*((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM v0;SELECT ALL CASE ((v0.c0) IS FALSE)  WHEN TRIM(DISTINCT v0.c0, '1971183736') THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN AVG(v0.c0) THEN CAST(vt0.c0 AS NUMERIC) WHEN 0.9033302275844924 THEN ((vt0.c0)-(vt0.c0)) END FROM vt0, v0 WHERE (((CAST(NULL AS REAL))/(CAST(NULL AS REAL)))); -- 0ms;
SELECT ALL CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS BLOB) FROM vt0 WHERE (TRIM(((((0xffffffff9beb4dc7)AND('1302928210')))AND(NULL)), json_array_length(-1.564316887E9))) GROUP BY v0.c0 HAVING (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))<>(((v0.c0)>(vt0.c0))));SELECT DISTINCT AVG(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 END) OVER (), CAST(CAST(vt0.c0 AS REAL) AS INTEGER), CASE WHEN AVG(v0.c0) THEN ((v0.c0) NOT NULL) ELSE ((vt0.c0) IS TRUE) END, COUNT(CAST(vt0.c0 AS NUMERIC)) OVER (), (((((v0.c0))==((vt0.c0)))) IS TRUE) FROM v0, vt0; -- 1ms;
SELECT DISTINCT '谨qc8y*x\' FROM vt0, v0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, TYPEOF(DISTINCT vt0.c0)) FROM v0, vt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) OVER () FROM vt0 WHERE ((((((((NULL))>((-223152197))))OR((NOT (NULL)))))OR(((((0Xfffffffff845eb26)OR('TRUE')))OR(NULL))))) ORDER BY ((CAST(v0.c0 AS NUMERIC))>=(v0.c0 COLLATE BINARY));SELECT ALL ((((v0.c0)<=(v0.c0))) NOT BETWEEN (((v0.c0)OR(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))) FROM vt0, v0 WHERE (((CAST(1904290306 AS REAL))&((((NULL, x'', x'')) NOT BETWEEN ((NULL, NULL, x'')) AND (('', NULL, '')))))); -- 0ms;
SELECT DISTINCT (((v0.c0, ((vt0.c0)==(v0.c0)), v0.c0 COLLATE BINARY))<(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) FROM vt0, v0; -- 0ms;
SELECT LIKE(CAST(x'' AS INTEGER), v0.c0 COLLATE NOCASE), ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((v0.c0)OR(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), COUNT((- (vt0.c0))) OVER (), COUNT(((vt0.c0)<<(v0.c0))) OVER (), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))*(vt0.c0 COLLATE RTRIM)) FROM vt0, v0 WHERE (((('-R9n6ۭɱ')) BETWEEN ((((0x6f08e0d1) IS TRUE))) AND ((CAST('c!t*㺲' AS INTEGER))))) LIMIT -521400798; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (v0.c0) AND (((((v0.c0)AND(vt0.c0)))AND(v0.c0)))), LIKELY(DISTINCT ((v0.c0)!=(v0.c0))), v0.c0 FROM v0;SELECT ((((((vt0.c0)AND(v0.c0)))OR(vt0.c0))) NOT NULL) FROM v0 WHERE (json_patch(json_array('P*Z', 0.24048914525709564, 0Xffffffffffbfa3e3, x'5b0a52f5'), CASE '+%vH\nv'  WHEN 'V]^NH.UF' THEN x'' ELSE '' END));SELECT DISTINCT (vt0.c0 IN ()) COLLATE NOCASE, CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((vt0.c0)>=(vt0.c0)) END, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/((vt0.c0 IN ()))) FROM v0 WHERE (((0x1)IS NOT((((((((('1193164646')OR(NULL)))AND(NULL)))AND('O.')))AND(0.6954523059425579)))));SELECT PERCENT_RANK() OVER (), ((v0.c0)IS NOT(vt0.c0)) COLLATE NOCASE, UNLIKELY(DISTINCT 1.30292821E9 COLLATE RTRIM) FROM v0, vt0; -- 3ms;
SELECT ALL TOTAL(0x5c78c35e) OVER ( ORDER BY (((v0.c0)<(v0.c0)) IN (((vt0.c0)%(v0.c0)))) ASC  NULLS FIRST) FROM vt0, v0 WHERE ((((((((x'c0a00aa6'))<=(('-548139144'))))OR(((1335361189)||(NULL)))))AND(COALESCE(DISTINCT 'Z/', 54350131)))) ORDER BY ((((((((x'78ab')OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(CAST(v0.c0 AS INTEGER))))OR((v0.c0 IN ()))))AND(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST, (((CASE WHEN v0.c0 THEN vt0.c0 END))!=((((((v0.c0)AND(vt0.c0)))AND(v0.c0))))) ASC, (~ (LIKELIHOOD(DISTINCT v0.c0, 0.292776673242112))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM v0, vt0 WHERE ((((('1674172825')==(0.5722567203462442)))GLOB(CAST(-1.421920516E9 AS TEXT)))); -- 0ms;
SELECT DISTINCT (((((vt0.c0 IN ()))AND(((vt0.c0)%(vt0.c0)))))OR(CAST(v0.c0 AS NUMERIC))) FROM v0, vt0 ORDER BY (- (CAST(vt0.c0 AS NUMERIC))), CASE WHEN (vt0.c0 IN ()) THEN COALESCE(vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0, vt0.c0) END; -- 2ms;
SELECT ALL ((v0.c0)<>('-1551756945')) COLLATE NOCASE FROM v0 WHERE ((x'' COLLATE BINARY IN (((NULL) IS FALSE), (~ (0x7744ed07))))); -- 0ms;
SELECT DISTINCT (((((((((vt0.c0 IN ()))OR('1870363402')))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) FROM v0 WHERE (CASE WHEN (((('1505452717')OR(x'')))OR(x'')) THEN (- (x'')) END);SELECT DISTINCT ((((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR((NOT (v0.c0)))))AND(((((v0.c0)OR(vt0.c0)))AND(NULL)))))AND(CAST('0.029073036594548185' AS BLOB))))AND(((((((((((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))), CAST(CAST(vt0.c0 AS INTEGER) AS BLOB), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((('-1543499399'))!=((v0.c0))))) FROM vt0 WHERE ((((~ ('-381096085')))!=((x'1571' IN ())))) ORDER BY CAST((v0.c0 IN ()) AS INTEGER) LIMIT 1674172825 OFFSET -1483148210;SELECT DISTINCT (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((MAX(v0.c0), '1133587236', LENGTH(v0.c0))) AND ((((vt0.c0) NOTNULL), ((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)), ((v0.c0)>=(v0.c0))))) FROM vt0 WHERE (0.48963858094078827);SELECT DISTINCT (NOT (v0.c0 COLLATE BINARY)) FROM vt0 WHERE ((((('-1660606185') IS FALSE))IS((0x2b0d0138 IN (NULL, NULL))))) GROUP BY ((v0.c0 IN (v0.c0)) IN ()) HAVING (v0.c0 IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));SELECT TRIM(DISTINCT ((vt0.c0)<(v0.c0))), (((((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, vt0.c0)))) BETWEEN (((v0.c0)IS(-1082535803))) AND (CAST(vt0.c0 AS BLOB))), ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(-1205496578)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0, v0 WHERE (9.50126079E8) ORDER BY '979093142' DESC  NULLS LAST; -- 16ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (json_patch(vt0.c0, vt0.c0)) AND (((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) FROM v0, vt0 GROUP BY vt0.c0;SELECT DISTINCT ((((0.10719984671481353 COLLATE RTRIM)AND(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((v0.c0)AND(vt0.c0)))OR(v0.c0)))), (x'5b24' IN ()), ((v0.c0 COLLATE RTRIM)<=(((vt0.c0)IS(v0.c0)))) FROM vt0, v0; -- 1ms;
SELECT (+ (vt0.c0)) COLLATE RTRIM, ((+ (v0.c0)) IN ()), ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END) ISNULL) FROM vt0;SELECT DISTINCT (+ (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((((x'')&(''))) BETWEEN (CAST(x'' AS TEXT)) AND (0X5d7957ff))) ORDER BY ((((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((vt0.c0) NOT NULL))))AND(((v0.c0) IS TRUE))) DESC, (((v0.c0)<>(v0.c0)) IN ((- (v0.c0)), (((vt0.c0, v0.c0, v0.c0))>((v0.c0, vt0.c0, '-185385438'))))) ASC  NULLS LAST;SELECT SUM(v0.c0) COLLATE BINARY COLLATE NOCASE FROM v0, vt0; -- 1ms;
SELECT ALL COUNT(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) FROM vt0 WHERE (((('1' IN ('611439941')))GLOB((('-869757212')&(0Xffffffffbc7c2dc7))))) LIMIT -600237831;SELECT DISTINCT CASE ((vt0.c0)>=(v0.c0))  WHEN (~ (vt0.c0)) THEN (vt0.c0 IN ()) END, (- (((v0.c0)*(v0.c0)))), ((CAST(v0.c0 AS REAL)) ISNULL) FROM v0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE WHEN (+ (vt0.c0)) THEN x'' WHEN SUM(vt0.c0) THEN ((NULL) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN (~ (v0.c0)) THEN ((((v0.c0)OR(vt0.c0)))OR(vt0.c0)) END, ((((vt0.c0)<=(vt0.c0)))OR((((v0.c0))<>((v0.c0))))), v0.c0, CASE WHEN GROUP_CONCAT(vt0.c0) THEN v0.c0 WHEN ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)) THEN ((v0.c0)>(vt0.c0)) WHEN 0.5182666352496299 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) ELSE SUM(v0.c0) END, SQLITE_COMPILEOPTION_GET(v0.c0 COLLATE BINARY) FROM v0 WHERE (TYPEOF(DISTINCT ((8.73848245E8)IS NOT(0.7155538455360531))));SELECT ALL CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN v0.c0 END FROM v0, vt0 WHERE (((((NULL)!=(x''))) NOT BETWEEN (((0.8796866792078016) NOT BETWEEN (x'fa30') AND (x'876d'))) AND (load_extension(x'ca79', 0.5181250522854445)))) LIMIT 1716459571;SELECT ALL ((((((v0.c0) NOT NULL))AND(((x'') IS FALSE))))OR(-1238898096)) FROM vt0;SELECT ALL TOTAL((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE BINARY) FROM v0, vt0 WHERE (((((0.22486700286891204)LIKE(x''))) NOT NULL)); -- 2ms;
SELECT DISTINCT ((NULL)>('-1022597431')) FROM v0 WHERE ((((((((NULL, x'', NULL, 1.247523656E9, x'')) BETWEEN (('5', 0.5593041832628932, '>,sഠ&0U&榥', 0xffffffffb8176d78, 0Xffffffff902cd308)) AND ((x'', '-733966409', 0.3751052628578131, x'', '-283741563'))))AND((('hs')AND('225578472')))))AND(CASE WHEN '}6' THEN x'' ELSE x'1e595daf' END))) GROUP BY (((v0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (((((((((0.9096445787389696)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))), (+ (((0xffffffffd4eb5703)<<(vt0.c0)))), (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)) IN ()) HAVING (- (vt0.c0)) COLLATE RTRIM;SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((NULL)OR(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((v0.c0)*(((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (((('vHWa{F3', x'', x'')) BETWEEN (((((((((('1033538393')OR(NULL)))OR(NULL)))AND('1247523656')))AND(0.7970516513934649)), (((('bD')OR(0X380e2471)))AND(x'44ce')), (NOT (x'2e90')))) AND (((~ ('1674172825')), (',S.t_hAr' IN ('706628586')), x'edb6'))));SELECT DISTINCT ((((((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)+(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)LIKE(v0.c0)))) FROM vt0, v0; -- 0ms;
SELECT v0.c0 FROM v0; -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '931656064' THEN vt0.c0 ELSE vt0.c0 END)>>(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))), v0.c0, ABS(DISTINCT CAST(vt0.c0 AS NUMERIC)) FROM v0, vt0; -- 0ms;
SELECT CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS NUMERIC) END FROM v0, vt0 WHERE (((((x'')-(0.6854389483790057)))%(0.5961925640180477))); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT CAST(x'3e0d' AS BLOB), ((v0.c0) NOT BETWEEN ('D⎅<') AND ((- (v0.c0)))), ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) FROM v0 WHERE (TRIM(((((x'')AND(0.2819089607833146)))OR('}E䃭Uf~xyz'))));SELECT DISTINCT NTILE((NOT (COALESCE(NULL, v0.c0, v0.c0, v0.c0)))) OVER ( PARTITION BY CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC), v0.c0) FROM v0;SELECT COUNT(*) FROM vt0 WHERE ((((CAST('腅 G僢.[j*' AS INTEGER)))>((((x'')IS NOT('^I')))))); -- 0ms;
SELECT ALL CASE WHEN HEX(vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE v0.c0 COLLATE BINARY END FROM v0;SELECT CAST(((v0.c0)>(x'')) AS NUMERIC) FROM v0; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) IS TRUE) FROM v0, vt0 WHERE (''); -- 0ms;
SELECT DISTINCT v0.c0, (((((NOT (v0.c0)))OR(((v0.c0)<(v0.c0)))))OR(vt0.c0)), ((SQLITE_COMPILEOPTION_USED(vt0.c0))<=(AVG(vt0.c0))), ((((((((((v0.c0)>(vt0.c0)))OR(((0.07041077699173481) NOT NULL))))AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)+(v0.c0)))), ((- (vt0.c0)) IN ((v0.c0 IN ()))) FROM v0, vt0; -- 1ms;
SELECT DISTINCT (NOT (v0.c0)), (((((NOT (v0.c0)))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' END)))AND(((v0.c0) ISNULL))), SUM(x'610a5932') FILTER(WHERE ((vt0.c0)%(((0Xffffffffc88d100c) NOT BETWEEN (v0.c0) AND (vt0.c0))))) OVER () FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED('-44897477') COLLATE BINARY);SELECT DISTINCT (((vt0.c0 IN (v0.c0, v0.c0))) NOTNULL), GROUP_CONCAT((((vt0.c0))>=((vt0.c0)))) OVER ( ORDER BY '' DESC  NULLS LAST), LEAD(x'4683828e', ((0.9119403927793502 COLLATE NOCASE) NOTNULL), 0.3628864239868739) OVER () FROM v0, vt0 WHERE ('^'); -- 1ms;
SELECT ((vt0.c0) NOT NULL) COLLATE RTRIM FROM vt0 WHERE (x'' COLLATE RTRIM) GROUP BY ((((v0.c0 IN ())))>=((((vt0.c0)==(vt0.c0))))), ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))|(((vt0.c0)!=(vt0.c0)))), ((TRIM('^{Z0W{eS')) BETWEEN (CAST(vt0.c0 AS REAL)) AND ('z')) HAVING CASE vt0.c0  WHEN x'' THEN v0.c0 END;SELECT DISTINCT 0.18986318465271745 FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)IS NOT(v0.c0)) FROM vt0 WHERE ((((NULL)) BETWEEN ((x'')) AND (('9첀'))) COLLATE NOCASE);SELECT ALL ((((((((x'a0994d6a')OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM COLLATE BINARY, (((((vt0.c0) IS FALSE)))>(((- (v0.c0))))), ((((v0.c0 IN ())))<>((((vt0.c0)|(v0.c0))))) FROM vt0 WHERE (('0.11101679163163813' IN ('Z')) COLLATE BINARY);SELECT DISTINCT ((v0.c0 COLLATE RTRIM)IS NOT(CAST(vt0.c0 AS NUMERIC))) FROM vt0, v0; -- 0ms;
SELECT RANK() OVER () FROM v0 WHERE (CASE (((NULL))=((0Xfffffffffebc2014)))  WHEN CAST('uK' AS REAL) THEN (('{sOD\r20')==(1.318127362E9)) END) GROUP BY ((TRIM(vt0.c0))GLOB(((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))), (((vt0.c0 COLLATE BINARY))<((CAST(vt0.c0 AS BLOB)))), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))));SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((~ (v0.c0))) AND ((((v0.c0)) NOT BETWEEN (('17067968')) AND ((vt0.c0))))) FROM v0, vt0; -- 1ms;
SELECT ALL ((((((v0.c0) NOT NULL))OR(((NULL) IS TRUE))))AND(MIN(vt0.c0, v0.c0))) FROM vt0 GROUP BY 1.971183736E9 LIMIT -2006257292 OFFSET -2085188017;SELECT DISTINCT TOTAL(AVG(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) FROM vt0, v0 WHERE (((('1451764960') NOT NULL) IN (LIKELY('1033538393'))));SELECT ALL (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, v0.c0, vt0.c0))) COLLATE NOCASE FROM vt0;SELECT ALL ((((vt0.c0)=(vt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (COALESCE(vt0.c0, v0.c0))), ((v0.c0)|(vt0.c0)) COLLATE RTRIM, ((vt0.c0 COLLATE NOCASE)&(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))), (NOT (((v0.c0)>(vt0.c0)))), ((IFNULL(DISTINCT v0.c0, v0.c0))<((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE (CASE CAST(0xffffffffd8a9b2f6 AS BLOB)  WHEN (- (NULL)) THEN (((('275383615')AND('')))OR(x'20f9')) END);SELECT DISTINCT COUNT(((x'd75d') BETWEEN (v0.c0) AND (vt0.c0))), IFNULL((v0.c0 IN ()), TYPEOF(v0.c0)), (((+ (vt0.c0)))<<((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) FROM v0, vt0 WHERE ((NOT ((('mR') BETWEEN ('Y&SR') AND ('-7032252'))))); -- 2ms;
SELECT CASE WHEN '-1003226579' COLLATE RTRIM THEN ((v0.c0) NOTNULL) WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.6287954131541704))) THEN ((vt0.c0)>=(vt0.c0)) WHEN MAX(0.17037103414792643) THEN (NOT (vt0.c0)) WHEN ((vt0.c0)<=(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE (((vt0.c0, vt0.c0, v0.c0))>((vt0.c0, vt0.c0, '-1999264098'))) END FROM vt0, v0; -- 1ms;
SELECT ALL (((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))AND(((vt0.c0)!=(v0.c0)))))OR((((vt0.c0))>((vt0.c0))))) FROM vt0 WHERE ((((((('-509020828')AND('611439941')))AND('Z3H}I''9')))-(0.12044010473237521)));SELECT DISTINCT (v0.c0 IN ()) FROM vt0, v0; -- 0ms;
SELECT ALL ((TYPEOF(DISTINCT v0.c0)) NOTNULL), ((ABS(vt0.c0))/(((v0.c0)||(v0.c0)))), 0.17701356018160497 FROM vt0;SELECT ALL ((MAX(v0.c0))/(((vt0.c0) NOTNULL))) FROM vt0 WHERE ((+ (((NULL) NOT BETWEEN (0.1086069434420408) AND (NULL)))));SELECT DISTINCT CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT) FROM vt0; -- 0ms;
SELECT (NOT ((((0.2397722923437342, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))))) FROM vt0, v0; -- 0ms;
SELECT ALL TOTAL(((v0.c0) NOTNULL)) OVER ( ROWS ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY COLLATE BINARY PRECEDING EXCLUDE GROUP) FROM vt0, v0;SELECT DISTINCT HEX(TYPEOF(DISTINCT v0.c0)) FROM vt0, v0 GROUP BY ((((((vt0.c0))==((v0.c0)))))<>((v0.c0))) HAVING TOTAL(COALESCE(v0.c0, vt0.c0) COLLATE BINARY); -- 4ms;
SELECT ((((vt0.c0)AND(vt0.c0))) BETWEEN (v0.c0) AND (((vt0.c0)>(v0.c0)))), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((((vt0.c0))==((v0.c0)))) AND (CAST(v0.c0 AS INTEGER))), (+ (x'')) FROM vt0 WHERE ((((0xfffffffff2b2f7bb IN ()))!=((('-138354280')>>(873848245))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)|('-2008363024')) ASC;SELECT 0.14612440179210207 FROM v0, vt0; -- 0ms;
SELECT GLOB((NOT (vt0.c0)), vt0.c0) FROM vt0; -- 0ms;
SELECT ALL ((COALESCE(vt0.c0, vt0.c0, vt0.c0, v0.c0)) BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (MAX(vt0.c0))) FROM vt0, v0 GROUP BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(vt0.c0 COLLATE NOCASE)), ((vt0.c0 COLLATE RTRIM)LIKE(CAST(vt0.c0 AS NUMERIC))), LOWER(((v0.c0) IS TRUE)), (CASE WHEN v0.c0 THEN vt0.c0 END IN ()); -- 8ms;
SELECT DISTINCT ((AVG(v0.c0))IS NOT(HEX(DISTINCT x''))) FROM vt0 WHERE (((((x'1d84') BETWEEN (x'') AND (NULL)))-((~ (NULL)))));SELECT DISTINCT LAST_VALUE(v0.c0) OVER () FROM vt0, v0; -- 3ms;
SELECT ALL ((((((((((v0.c0)>>(vt0.c0)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((vt0.c0) IS FALSE))))OR(v0.c0 COLLATE NOCASE)))AND(-1.003226579E9)) FROM vt0;SELECT ALL (+ (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0, v0; -- 0ms;
SELECT ALL vt0.c0 FROM v0, vt0; -- 0ms;
SELECT ALL ((vt0.c0)-(((vt0.c0)=(v0.c0)))) FROM v0 WHERE ((((NULL)|(x'4ae7')) IN (CASE WHEN '1826410981' THEN x'' END)));SELECT DISTINCT vt0.c0 FROM v0, vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT (((vt0.c0, v0.c0, v0.c0)) BETWEEN (((((0.6343723108174344))<>((vt0.c0))), (+ (v0.c0)), TOTAL(v0.c0))) AND (((((v0.c0))<=((vt0.c0))), ((v0.c0)%(v0.c0)), -2.008363024E9))) FROM v0 NATURAL JOIN vt0 WHERE ((~ (CAST(NULL AS INTEGER)))); -- 1ms;
SELECT (((vt0.c0 IN ())) NOT BETWEEN ((((v0.c0, x'9a073996', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))) AND ((+ (vt0.c0)))), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))!=(CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)), ((((COALESCE(vt0.c0, v0.c0))OR((+ (v0.c0)))))OR(((v0.c0)||(vt0.c0)))) FROM v0 WHERE ((((('1371341693')AND(0.7149194444056295)))OR(NULL)) COLLATE NOCASE);SELECT json((- (vt0.c0))) FROM vt0 WHERE (((CASE WHEN NULL THEN x'c66f' ELSE x'f42b' END)+(((((((((NULL)OR('33136701')))AND(NULL)))AND(NULL)))OR(NULL))))); -- 0ms;
SELECT DISTINCT NTILE(CASE vt0.c0 COLLATE NOCASE  WHEN (((vt0.c0))<=((v0.c0))) THEN CAST(v0.c0 AS TEXT) WHEN 0X1ad16967 THEN 2.042212148E9 WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (vt0.c0 IN (v0.c0, v0.c0)) END) OVER (), COUNT(*) OVER (), CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END COLLATE BINARY, ((SUM(vt0.c0))+(((vt0.c0)%(v0.c0)))), NTH_VALUE((0.255002853941409 IN ()), ((LIKELIHOOD(v0.c0, 0.45562330514473903)) NOT NULL)) OVER () FROM vt0, v0 WHERE (((CAST(x'3975' AS BLOB))>=(NULL COLLATE RTRIM)));SELECT ALL TYPEOF(DISTINCT CHAR(v0.c0)), CAST(json_type(vt0.c0) AS INTEGER), (('TWV	f| ')<>((v0.c0 IN ()))) FROM v0 WHERE ((((((((NULL)) BETWEEN (('1215381808')) AND ((0x5f1810c1))))OR((((x'')) NOT BETWEEN ((x'3ded')) AND (('-1737038022'))))))AND(x'')));SELECT (((v0.c0)) BETWEEN ((SQLITE_COMPILEOPTION_USED(vt0.c0))) AND ((((((vt0.c0)AND(vt0.c0)))OR(v0.c0))))) FROM v0, vt0 WHERE (((((((0Xffffffff9c37844d)AND('1791166473')))OR(x'02c1')))%(((((((((-2016311117)OR(-4.61086684E8)))OR(0.7870047523331727)))AND(0.8104927309926256)))OR('^ns!h1䃀z'))))); -- 0ms;
SELECT ((((vt0.c0)>=(-1510599969))) NOTNULL) FROM v0;SELECT DISTINCT LEAD((('408247583') NOTNULL), x'', (((vt0.c0)) NOT BETWEEN ((x'')) AND (((vt0.c0 IN ()))))) OVER (), ((v0.c0 COLLATE RTRIM)/(((v0.c0)||(vt0.c0)))), 'nle\r^' FROM v0, vt0; -- 4ms;
SELECT ALL ((vt0.c0 COLLATE BINARY)+(((vt0.c0) BETWEEN (v0.c0) AND (x'48d18df5')))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM v0, vt0 WHERE ((~ (((NULL) NOTNULL)))); -- 1ms;
SELECT DISTINCT (~ (MIN(vt0.c0))) FROM v0 WHERE ((((+ (NULL)))OR((('-1530766861')GLOB(NULL)))));SELECT DISTINCT (vt0.c0 IN (vt0.c0, (v0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(v0.c0 AS TEXT) FROM vt0;SELECT (((+ (vt0.c0)))<<(SUBSTR(vt0.c0, vt0.c0))) FROM vt0, v0 WHERE ((~ (CAST('125135796' AS NUMERIC)))) ORDER BY CAST(CHAR(v0.c0) AS BLOB) LIMIT -133146696; -- 3ms;
SELECT (- (((vt0.c0)|(v0.c0)))) FROM vt0;SELECT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE NOCASE FROM vt0, v0; -- 1ms;
SELECT DISTINCT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0)&(x'6436'))) AND (((vt0.c0)OR(v0.c0)))) FROM vt0 FULL OUTER JOIN v0 ON ((v0.c0 IN ()) IN ()); -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS NOT(v0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)>>(v0.c0)))) FROM v0 WHERE (4.02554018E8) ORDER BY x'' DESC;SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((x'') IS FALSE)); -- 0ms;
SELECT ALL CASE ((((' 鳷ヴ⌜*x')OR(x'')))OR(1767452553))  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) WHEN vt0.c0 THEN (v0.c0 IN (0.6930587214455844)) WHEN ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)) THEN TOTAL(vt0.c0) ELSE ((vt0.c0)%(vt0.c0)) END FROM v0 WHERE (((('G꣺Y\n' IN ())) BETWEEN (((NULL) ISNULL)) AND (x'b839' COLLATE RTRIM))) LIMIT -404117254 OFFSET -818325139;SELECT ALL x'', (((vt0.c0 IN (v0.c0))) IS TRUE), RTRIM(MAX(vt0.c0)) FROM v0;SELECT DISTINCT GLOB(v0.c0, vt0.c0) COLLATE NOCASE, v0.c0, AVG(CAST('-46653590' AS BLOB) COLLATE BINARY) OVER () FROM v0 LIMIT 1033538393 OFFSET -812911540;SELECT ALL ((((v0.c0) IS TRUE))LIKE(vt0.c0)) FROM v0, vt0 ORDER BY CASE (NOT (vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN LIKELIHOOD(vt0.c0, 0.5551022912630673) END  NULLS FIRST LIMIT -1409867605 OFFSET 1671157135; -- 4ms;
SELECT (- (CAST(vt0.c0 AS NUMERIC))) FROM v0 WHERE ((((('-461086684') ISNULL))-((('1896363209')<(NULL)))));SELECT CASE WHEN ((v0.c0)>=(vt0.c0)) THEN ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) ELSE ((vt0.c0) IS FALSE) END FROM vt0, v0 WHERE (CAST(((x'') BETWEEN (0x3c1687b5) AND ('')) AS INTEGER)); -- 0ms;
SELECT DISTINCT COUNT(CAST(v0.c0 AS INTEGER)) OVER (), ((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE), LIKELY(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END), ((vt0.c0) NOTNULL), CASE WHEN SUBSTR(vt0.c0, v0.c0) THEN json_insert(v0.c0, v0.c0, v0.c0) END FROM v0, vt0; -- 3ms;
SELECT ALL ((MAX(v0.c0)) NOT NULL) FROM vt0, v0 WHERE (CAST((- (x'178d')) AS NUMERIC)) GROUP BY ((json_insert(-1.698096889E9, vt0.c0, v0.c0, vt0.c0, vt0.c0)) ISNULL); -- 0ms;
SELECT 611439941, CASE WHEN ((vt0.c0) ISNULL) THEN MAX(vt0.c0, vt0.c0) ELSE ((vt0.c0)*(x'')) END, CAST(NULL AS NUMERIC) FROM v0 GROUP BY (((((((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))AND(((v0.c0)IS NOT(vt0.c0)))))AND(x'')))OR(v0.c0)))OR(((vt0.c0)IS(vt0.c0))));SELECT DISTINCT ((CAST(1546770513 AS REAL)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (json_quote(v0.c0))) FROM v0 WHERE (((0.7545307037033206) NOT BETWEEN (NULL) AND (x'')) COLLATE RTRIM);SELECT DISTINCT 0.8779978430461495, CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))  WHEN (NOT (v0.c0)) THEN IFNULL(v0.c0, vt0.c0) END, ((((((vt0.c0) ISNULL))OR(((((v0.c0)OR(vt0.c0)))OR(v0.c0)))))OR(((v0.c0)-(v0.c0)))) FROM vt0, v0 WHERE (x'cfdc'); -- 0ms;
SELECT ALL ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL) FROM vt0, v0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) ISNULL)) OVER () FROM vt0, v0 WHERE (LIKE((((0X32cd6be4, x'', '2eIB', 'PLErfb', x''))<((NULL, '0.38795304806860686', 0.039633970626744786, 'O>SL>\nL*', 0.8751823718239973))), (+ (x'')))) LIMIT 979093142 OFFSET -1382617451; -- 0ms;
SELECT ((((vt0.c0)=(0.9060908002293129))) ISNULL), RANK() OVER (), ((((vt0.c0)<(vt0.c0)))==((((0.5051422090435249))!=((vt0.c0))))) FROM v0 GROUP BY ((LIKELY(v0.c0)) IS FALSE) HAVING ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOTNULL);SELECT CAST((((v0.c0, NULL, v0.c0))>((vt0.c0, vt0.c0, ''))) AS REAL) FROM vt0;SELECT DISTINCT TOTAL((((0.4154953198625)) BETWEEN ((NULL)) AND ((v0.c0)))) FILTER(WHERE ((vt0.c0)GLOB(v0.c0)) COLLATE BINARY) OVER () FROM v0;SELECT ALL CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (NOT (vt0.c0)) END, ((vt0.c0) BETWEEN (1.318127362E9) AND (v0.c0)), (((v0.c0) IS TRUE) IN (v0.c0 COLLATE BINARY)) FROM vt0, v0; -- 0ms;
SELECT ALL (vt0.c0 COLLATE BINARY IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN v0.c0 THEN NULL END) BETWEEN (((x'5d9c') BETWEEN (v0.c0) AND (v0.c0))) AND ((vt0.c0 IN ()))) FROM vt0;SELECT DISTINCT CAST(((v0.c0)<(vt0.c0)) AS NUMERIC) FROM vt0;SELECT DISTINCT ((((vt0.c0) IS FALSE))AND(vt0.c0 COLLATE BINARY)), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL), (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN (((vt0.c0)/(x'a0e9')))) FROM vt0, v0 WHERE (x''); -- 0ms;
SELECT ALL (((v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((vt0.c0)*(vt0.c0))))), CAST(v0.c0 AS TEXT) COLLATE NOCASE, MAX((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))), HEX(DISTINCT ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))), vt0.c0 FROM vt0, v0 WHERE (CAST(0x7c37992a AS TEXT) COLLATE NOCASE); -- 3ms;
SELECT DISTINCT 0.7603652940586415, (((vt0.c0 IN (vt0.c0, vt0.c0)))AND(vt0.c0 COLLATE RTRIM)), (((vt0.c0)) NOT BETWEEN ((json(v0.c0))) AND (((- (v0.c0))))) FROM v0, vt0; -- 1ms;
SELECT ALL v0.c0 FROM v0 WHERE (((((x'd326')OR((((((((('')OR(NULL)))OR('1302928210')))AND('-1082535803')))OR('L''Z!')))))OR(x'1374'))); -- 0ms;
SELECT NTH_VALUE(v0.c0, ((((v0.c0)<=(v0.c0))) NOT NULL)) OVER () FROM v0 WHERE ('395788987');SELECT ((vt0.c0) NOT NULL) FROM vt0 WHERE ((((((((((('696959058')>>('}[ j')))AND('' COLLATE BINARY)))OR(CAST(x'27ba' AS TEXT))))AND((+ (x'')))))OR((- (x'82be'))))); -- 0ms;
SELECT DISTINCT json_insert(HEX(DISTINCT NULL), ((vt0.c0)>=(0X1578fe34)), ((v0.c0) IS TRUE)), ((-785349459 COLLATE BINARY)<(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))), (- (v0.c0 COLLATE RTRIM)) FROM vt0, v0 WHERE ((CASE '-184590209'  WHEN -613873535 THEN NULL ELSE NULL END IN ())) GROUP BY (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM; -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(v0.c0)), CASE CAST(v0.c0 AS NUMERIC)  WHEN (~ (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) END, LENGTH(CASE vt0.c0  WHEN '274998149' THEN 'CUw\n' END) FROM vt0, v0; -- 1ms;
SELECT DISTINCT ((0.8281603139354565)<(CAST(vt0.c0 AS REAL))), ((AVG(vt0.c0)) BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0)), ((1.36228594E8)+(LIKE(v0.c0, NULL, 'r'))) FROM vt0 WHERE ((((('')/(x''))) ISNULL)) GROUP BY '1634187192', 'j+*~tdr ', (NOT ((vt0.c0 IN (vt0.c0)))), (((vt0.c0 IN ()))LIKE(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)), '1791166473';SELECT DISTINCT ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((v0.c0 IN (v0.c0, vt0.c0)))) FROM vt0;SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()), CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END COLLATE BINARY, (- ('')) FROM vt0, v0; -- 0ms;
SELECT ALL SUM(((x'') NOT NULL)) FROM v0; -- 0ms;
SELECT DISTINCT CASE ((v0.c0)!=(v0.c0))  WHEN load_extension(v0.c0) THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)) END, (((CAST('r9wO]+' AS BLOB)))<(((((v0.c0))==((NULL)))))), (+ (0.42956528523993254)) FROM v0, vt0 WHERE (((((NULL) NOTNULL))<((- (NULL))))) GROUP BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(v0.c0)))) AND (((((vt0.c0))>=((vt0.c0)))))), ((((vt0.c0)IS(v0.c0)))<=(((v0.c0) NOTNULL))), (+ (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT CAST((NOT (vt0.c0)) AS TEXT), v0.c0, AVG(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END) OVER () FROM v0, vt0 WHERE (((CASE WHEN 0.8379619442222737 THEN '750531896' WHEN '' THEN x'f911' WHEN 0.35896305486542124 THEN '1792249066' END) ISNULL)); -- 1ms;
SELECT ALL COALESCE(DISTINCT CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE 0x614940e2 END, vt0.c0) FROM vt0, v0 WHERE ((('' COLLATE NOCASE)OR(((NULL) BETWEEN (0.5483889277563766) AND (NULL))))); -- 0ms;
SELECT DISTINCT (- ((vt0.c0 IN ()))), ((((v0.c0)AND(((0.46646188342155726) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), COUNT((((vt0.c0))!=((vt0.c0)))) OVER () FROM v0, vt0; -- 3ms;
SELECT DISTINCT AVG(CASE 33337252  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) OVER (), CAST(((vt0.c0)<(vt0.c0)) AS REAL), (- (vt0.c0)) COLLATE NOCASE FROM vt0, v0 WHERE ((((NULL) IS FALSE) IN ())); -- 0ms;
SELECT ALL (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<=((ABS(v0.c0)))), (LIKELY(v0.c0) IN ()), 0.5867985590585428 FROM v0 GROUP BY ((NULL) NOT BETWEEN (((v0.c0)|(vt0.c0))) AND (vt0.c0)) HAVING (AVG(vt0.c0) IN ());SELECT DISTINCT AVG((- (v0.c0))) FROM v0, vt0; -- 2ms;
SELECT ALL ((NULL) NOT BETWEEN (COUNT(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (v0.c0) AND (-967281258)))) FROM vt0, v0; -- 1ms;
SELECT ALL CHANGES(), (((((- (v0.c0)))OR(0.9110909897031286)))OR(((v0.c0)<=(vt0.c0)))), vt0.c0, (+ (vt0.c0 COLLATE BINARY)), TRIM(DISTINCT ((v0.c0)/(vt0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) FROM v0;SELECT ALL (((CASE WHEN vt0.c0 THEN v0.c0 END))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FROM v0, vt0 WHERE (CASE CASE WHEN -550450468 THEN '+%J*' WHEN '-167829489' THEN '' WHEN NULL THEN '-1693823483' WHEN '-1262705509' THEN '-184590209' WHEN 0Xffffffffc6587596 THEN 0.058150251566342126 ELSE NULL END  WHEN (((((((('239374433')OR(x'')))AND(709331975)))OR(0.38795304806860686)))AND(NULL)) THEN CASE x'bbe8'  WHEN NULL THEN x'0a2b' END END); -- 0ms;
SELECT v0.c0 FROM vt0, v0 WHERE ((((((((('1501513399')AND(NULL)))OR(x'')))OR(-1.869575616E9)))OR(x'84a6')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT NULL, x'', LIKELIHOOD(load_extension(v0.c0, v0.c0), 0.692720788841359) FROM vt0 WHERE (((-1.238898096E9 COLLATE BINARY)>((('4<CiI')>>(0.5682313726625056))))) GROUP BY CAST(0.5941658982380833 AS TEXT);SELECT ((CAST(v0.c0 AS INTEGER)) BETWEEN (vt0.c0) AND (CAST(v0.c0 AS BLOB))), (((((v0.c0 IN ()))AND(v0.c0)))AND(')D褌#]47磷E')), INSTR(((vt0.c0) IS FALSE), ((v0.c0)%(vt0.c0))) FROM vt0 WHERE (((((((((((((((((((((0.12645053860663846)AND('-1238898096')))OR('B}叇')))AND(x'5833')))OR(NULL)))AND('R')))AND(0x7bc1be51)))OR(CAST('885362982' AS BLOB))))OR((~ (x'')))))AND('')))AND(((((0.22264450101686684)OR(0X4a5bb348)))AND(0.8924570384865326)))));SELECT DISTINCT ((NULL)AND(x'')), (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN NULL THEN v0.c0 END)) AND ((CASE WHEN v0.c0 THEN vt0.c0 ELSE '' END))), ((((((v0.c0)OR(vt0.c0)))AND(NULL)))||(v0.c0)), CAST(TRIM(DISTINCT 549099830) AS REAL), 1.588751605E9 FROM vt0, v0; -- 0ms;
SELECT MIN(((((v0.c0)AND(vt0.c0)))AND(vt0.c0))), (((v0.c0)) NOT BETWEEN (((- (v0.c0)))) AND (((NOT (vt0.c0))))), ((((((((((-1201162896)GLOB(vt0.c0)))AND(TOTAL(v0.c0))))AND(((vt0.c0)>(v0.c0)))))OR((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((v0.c0, x'', vt0.c0))))))OR(vt0.c0 COLLATE BINARY)) FROM vt0, v0; -- 3ms;
SELECT DISTINCT SUM((v0.c0 IN (v0.c0))) FROM v0 WHERE ((((0x1fa7beb0) IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT LAG(LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.9839224527350352), CAST(vt0.c0 COLLATE RTRIM AS INTEGER), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))>>(((v0.c0)<=(vt0.c0))))) OVER () FROM v0, vt0; -- 1ms;
SELECT DISTINCT v0.c0, (((vt0.c0))<=((v0.c0))) COLLATE BINARY, (((NULL)) BETWEEN ((HEX(vt0.c0))) AND ((((vt0.c0)LIKE(v0.c0))))) FROM v0, vt0 GROUP BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) HAVING HEX(((v0.c0) NOT NULL)); -- 3ms;
SELECT ALL NTILE(((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<(v0.c0 COLLATE NOCASE))) OVER () FROM vt0, v0;SELECT DISTINCT x'' COLLATE BINARY, (((vt0.c0)) BETWEEN ((CASE WHEN 0.08327968073465064 THEN vt0.c0 ELSE '-223152197' END)) AND (('('))), (+ ((('-1e500')&(vt0.c0)))) FROM v0 WHERE (TYPEOF((- (x'f474'))));SELECT ((0.9142245025225954)>(LOWER(v0.c0))) FROM vt0, v0 WHERE ((~ (x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((v0.c0) IS TRUE)) BETWEEN ('136228594') AND ((+ (vt0.c0)))) FROM v0, vt0; -- 0ms;
SELECT ALL ((((~ (vt0.c0))))>=((vt0.c0 COLLATE BINARY))) FROM vt0, v0; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), ((CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END)<<((((vt0.c0))>((vt0.c0))))), CAST(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB) FROM vt0, v0 WHERE ((((('') NOT BETWEEN (NULL) AND ('983473336')))<<(((8.05266369E8) NOT BETWEEN (0xffffffffb4f1f01e) AND (''))))) ORDER BY CAST(((vt0.c0)+(v0.c0)) AS NUMERIC); -- 1ms;
SELECT ALL CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)) THEN CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END ELSE vt0.c0 END, CAST(((vt0.c0)&(v0.c0)) AS NUMERIC), (((v0.c0) IS FALSE) IN ()) FROM v0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c0)OR(vt0.c0)))OR(v0.c0))))), CASE (((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0))<((v0.c0, vt0.c0, v0.c0, v0.c0, vt0.c0)))  WHEN ((vt0.c0)<(x'435f')) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC;SELECT (((((2.042212148E9)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL) FROM vt0, v0; -- 0ms;
SELECT ('819305719' COLLATE RTRIM IN ()) FROM vt0, v0 WHERE (CASE WHEN '0.44437836069743863' COLLATE NOCASE THEN ((((x'')AND(-4.04117254E8)))AND('-1382617451')) END) GROUP BY UPPER(((((vt0.c0)OR(vt0.c0)))AND(v0.c0))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS NUMERIC), (('g?3S')==((NOT (vt0.c0)))), ((v0.c0 COLLATE RTRIM) NOT NULL) FROM vt0, v0; -- 0ms;
SELECT ALL CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) END FROM v0;SELECT DISTINCT TRIM(((vt0.c0)-(v0.c0)), (NOT (v0.c0))) FROM vt0, v0 WHERE ('}*?'); -- 0ms;
SELECT ALL ((v0.c0) IS FALSE) COLLATE BINARY COLLATE NOCASE FROM v0; -- 0ms;
SELECT DISTINCT v0.c0 FROM vt0, v0; -- 0ms;
SELECT DISTINCT COUNT(v0.c0) OVER ( PARTITION BY LIKELIHOOD((+ (v0.c0)), 0.802443761443048), (((((v0.c0))<((vt0.c0)))) IS TRUE)) FROM vt0;SELECT ALL CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((v0.c0) IS FALSE) WHEN ((v0.c0)LIKE(v0.c0)) THEN ((((vt0.c0)AND(v0.c0)))AND(' 8t')) WHEN ((((v0.c0)OR(NULL)))AND(vt0.c0)) THEN MAX('U') END FROM vt0 WHERE (((NOT ('')) IN (((0.6105557515972907)||(NULL)), ((((x'')OR(NULL)))OR('1809163421')))));SELECT ALL CAST((((vt0.c0, v0.c0, vt0.c0))<=((v0.c0, v0.c0, v0.c0))) AS NUMERIC) FROM vt0;SELECT DISTINCT (GROUP_CONCAT(vt0.c0) IN ((NOT (v0.c0)), (((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))), (((('qK{') IS TRUE)) ISNULL), ((((v0.c0)IS(v0.c0)))<<(load_extension(v0.c0))) FROM vt0, v0;SELECT ALL CASE TYPEOF(v0.c0)  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN 1.588751605E9 ELSE (((']ZUnmx')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0;SELECT ALL ((((v0.c0)AND(v0.c0)))IS('-147816496')) FROM vt0;SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.06718060226488176, AVG(vt0.c0), (- (vt0.c0)))) AND ((CASE WHEN v0.c0 THEN vt0.c0 WHEN '-1432697881' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END, (((vt0.c0))>((vt0.c0))), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0))))), (((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)), json_array(v0.c0, vt0.c0, vt0.c0, v0.c0), ((v0.c0)IS(vt0.c0))))<((CASE WHEN v0.c0 THEN v0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0) IS TRUE)))), MIN(0xffffffff8e4ec9fc) FROM v0 WHERE ((+ (((NULL)&(0.051294095270145834)))));SELECT DISTINCT ((MAX(vt0.c0))%(TYPEOF(DISTINCT vt0.c0))), (- ((('-2052595715') ISNULL))), ((((((((((vt0.c0) ISNULL))AND(vt0.c0)))OR((((v0.c0))<((v0.c0))))))AND(COUNT(*))))AND(((vt0.c0)<(v0.c0)))) FROM vt0, v0 WHERE ((((((((('')OR(NULL)))OR(x'08b7')))AND('V0.12LBP')))AND(x'')) COLLATE BINARY) EXCEPT SELECT ((LIKELIHOOD(vt0.c0, 0.6393073290985704))GLOB((vt0.c0 IN ()))), COUNT(CAST(vt0.c0 AS TEXT)) OVER ( ORDER BY CASE (((v0.c0))<((v0.c0)))  WHEN LIKE(vt0.c0, v0.c0, 'y') THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.7977199592654332 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END ELSE (((vt0.c0))==((vt0.c0))) END DESC  NULLS LAST), IFNULL(UPPER(DISTINCT vt0.c0), (+ (v0.c0))) FROM vt0, v0 WHERE (NULLIF((0.13608481873556644 IN (x'')), 0.17014756845825385 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (AVG(v0.c0))) FROM v0, vt0 WHERE (ABS(0.2657561621517067 COLLATE RTRIM)); -- 2ms;
SELECT ALL ((((((((v0.c0)AND(((vt0.c0) IS TRUE))))OR(UPPER(DISTINCT v0.c0))))AND(((v0.c0)>(vt0.c0)))))OR(((v0.c0) NOTNULL))), ((((vt0.c0)||(vt0.c0))) BETWEEN (TOTAL_CHANGES()) AND (DATE(vt0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0))), DATE(CASE WHEN vt0.c0 THEN v0.c0 END, v0.c0, (~ (0.4271193714510131))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT('872382207') OVER ( ORDER BY ((((((((((((((x'')AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))>>('-1731064826' COLLATE RTRIM))) FROM v0;SELECT (~ (v0.c0)), ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL), ((vt0.c0 IN (vt0.c0)) IN (v0.c0)) FROM v0, vt0 WHERE ((- ('81072343'))) ORDER BY v0.c0  NULLS FIRST, ((((vt0.c0)*(v0.c0)))|(LOWER(DISTINCT vt0.c0))) ASC; -- 9ms;
SELECT LAG(CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL), CAST(LENGTH(vt0.c0) AS INTEGER), SQLITE_COMPILEOPTION_USED(DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT FIRST_VALUE(v0.c0) OVER () FROM v0, vt0 WHERE (((x'9abf' COLLATE BINARY)%((('c*p')%('1942417668'))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), (~ (((v0.c0)+(v0.c0)))), COALESCE(DISTINCT LIKELY(DISTINCT v0.c0), v0.c0 COLLATE RTRIM, (v0.c0 IN (v0.c0, v0.c0)), 0.7755390284434935) FROM v0, vt0 WHERE ((((('*{Ꟈ}P^\r4f') ISNULL)) NOT NULL)) GROUP BY ((vt0.c0 IN ()) IN ()), NULL, ((((('RK#}')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))+(((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)))) HAVING ((TOTAL(v0.c0)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (((NULL) BETWEEN (v0.c0) AND (vt0.c0)))); -- 8ms;
SELECT TRIM(CAST(v0.c0 AS TEXT)), ((((vt0.c0)<>(v0.c0))) ISNULL), ((load_extension(vt0.c0, v0.c0)) IS TRUE) FROM vt0, v0 WHERE (((CASE WHEN -1.003226579E9 THEN 1.551418206E9 END) NOT NULL)) GROUP BY NULL;SELECT DISTINCT (+ ((vt0.c0 IN ()))) FROM v0, vt0; -- 0ms;
