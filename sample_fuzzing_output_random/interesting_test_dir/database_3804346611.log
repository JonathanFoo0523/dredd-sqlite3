-- Time: 2024/06/07 00:31:56
-- Database: database11
-- Database version: 3.40.0
-- seed value: 3804346611
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
END; -- 3ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (NULL), (0.0957150982719599), (NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(''); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c4, c0, c2) VALUES ('*l', x'', '696658938', 0.0957150982719599, ''); -- 1ms;
ANALYZE sqlite_master; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c4) VALUES ('-1931967356', ''); -- 0ms;
PRAGMA temp.cache_spill; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES (x'6161', '*l'), (x'', 0.06346777057434227), (0.0957150982719599, 1876355459); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2, c0) VALUES (NULL, -2081812481, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0, c3, c1, c2) VALUES ('', NULL, 'Yy', x'', NULL); -- 5ms;
INSERT OR IGNORE INTO rt0(c1, c4, c2, c0) VALUES ('-1931967356', x'', x'cdcb', 0.1344580867271774); -- 0ms;
PRAGMA main.threads; -- 1ms;
UPDATE OR IGNORE rt0 SET c2=x'c946', c2=0.6968315561042485, c2=x'', c3=0.06346777057434227, c0=0.8175828357477166 WHERE x''; -- 1ms;
REINDEX RTRIM; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA cache_size; -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.threads = 7175135751993573249; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c3, c0, c4) VALUES (NULL, ((CASE WHEN '696658938' THEN 0.4197962270338895 ELSE x'' END) ISNULL), -1.931967356E9, 0.974069631982615); -- 2ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE rt0.c1 COLLATE BINARY; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=696658938'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c3, c3)=('zm', NULL, -1307911770); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=0.7417161119372995, c4='-1307911770', c3=-1.931967356E9; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'5505', x'', x'', -1.931967356E9, '-743846295'), (830636544, x'', 0.9828394033656044, 0.31437121785034605, '696658938'), (0.4196154930095446, 0.06346777057434227, 0.1163725876282421, 0.17441404879072298, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c4=NULL; -- 0ms;
END; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c4, c1, c3) VALUES (0xffffffff83ea0fff, NULL, NULL, x''); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2, c1, c3) VALUES (NULL, '713450240', '%H%n', '0.4196154930095446'); -- 8ms;
INSERT OR IGNORE INTO rt0(c3, c0) VALUES ('1399908048', x'f6dd'); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1, c0) VALUES (-1478802178, '+/', CAST(MAX(x'27e0', x'') AS TEXT)), (0xffffffffd177b29e, -7.80684642E8, '1876355459'), (1587811694, '-780684642', '-1598430758'); -- 1ms;
INSERT OR FAIL INTO rt0(c2, c1, c3, c4, c0) VALUES (x'2555', 1805593046, NULL, '1720735357', x'562f'); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, '1805593046', 0.3163256254992477, '-1307911770', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0, c2, c1) VALUES ('1821877576', '', '1399908048', x''), (x'', x'', NULL, '-1307911770'), ('sBP컕⧖', NULL, 1090660218, 0x31828200); -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
INSERT OR FAIL INTO rt0(c4, c3) VALUES (x'', NULL), (NULL, x''), ('0.3163256254992477', 0.1163725876282421); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (-182026864); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4) VALUES ('', x'500f'), (x'', '\!>7x復3R'), (7.1345024E8, '-182026864'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.auto_vacuum; -- 2ms;
PRAGMA main.foreign_keys = false; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (NULL), (0X2a866300), ('qF5'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c4, c3, c2) VALUES (NULL, NULL, '-1478802178', x'd886', x'65a856ad'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.10370833962100534) WHERE UPPER(((rt0.c2)+(rt0.c3))); -- 3ms;
UPDATE OR IGNORE rt0 SET (c2, c4)=(0.8039397577416145, x'') WHERE ((CAST(rt0.c1 AS INTEGER)) IS FALSE); -- 0ms;
UPDATE OR REPLACE rt0 SET c4=0.8244785534751684; -- 10ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0X2c9babae)AND(x'')))AND('-1876826652')))AND(x'')))OR(0.14820359886010925)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
PRAGMA recursive_triggers = true; -- 0ms;
ANALYZE main; -- 9ms;
UPDATE rt0 SET c0=x'', c1=x'' WHERE (((rt0.c1))<=((rt0.c0))) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0=x'' WHERE ((CAST('1876355459' AS TEXT))LIKE(((0xffffffffcb106433)%(vt0.c0)))); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 13ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.busy_timeout = 10000; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6398'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 4ms;
INSERT INTO vt0(vt0) VALUES('merge=-1663269046,13');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=832862811,9');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
ANALYZE temp; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-182026864,6');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2113427235,4');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1267392097); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) OVER () FROM rt0 WHERE (ABS(DISTINCT (((('-123803693')OR('1785008025')))OR('-417828962')))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOTNULL))|((- (rt0.c4)))) FROM rt0, vt0; -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (0X2f1c4485)))-((((('2113427235')OR(rt0.c0)))OR(rt0.c1)))) FROM rt0, vt0 WHERE ((((7.90381701E8, '2113427235', 0.10173417257742512))!=(('', x'3792', '&+'))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((MAX(vt0.c0), NULLIF(DISTINCT vt0.c0, rt0.c4), ('-543982384' IN (rt0.c0, vt0.c0))))<((LIKE(rt0.c4, rt0.c2, '%'), ((vt0.c0)>>(vt0.c0)), ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c4))))) FROM rt0 WHERE ((((~ ('')))=(((NULL) NOT BETWEEN (NULL) AND (NULL)))));SELECT CASE rt0.c0  WHEN ((rt0.c4)>=(rt0.c2)) THEN ((rt0.c3)GLOB(rt0.c4)) ELSE TOTAL_CHANGES() END, GROUP_CONCAT(TRIM(rt0.c3, rt0.c0)) OVER (), ((((CAST(vt0.c0 AS NUMERIC))OR((rt0.c1 IN ()))))AND(((vt0.c0) NOT NULL))) FROM vt0, rt0 GROUP BY ((rt0.c3 COLLATE NOCASE) ISNULL), ((CASE WHEN 'T+' THEN 0x54c946d4 END)GLOB(rt0.c0 COLLATE RTRIM)), NULLIF(DISTINCT (((vt0.c0))=((rt0.c3))), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1))) HAVING CAST(((x'')GLOB(vt0.c0)) AS REAL) LIMIT -1509738440 OFFSET -182026864; -- 1ms;
SELECT DISTINCT (((-1251826645))<=(('1551272015'))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL))<=((rt0.c0 IN ()))) FROM vt0 WHERE ('-717673680');SELECT DISTINCT ((rt0.c2) NOT BETWEEN (((vt0.c0)&(rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))), TOTAL(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c4))) OVER (), '1357047510' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (0.10730251337989138 IN ()) FROM rt0 WHERE ('748399534') LIMIT 18554906; -- 0ms;
SELECT DISTINCT rt0.c4, ((((((((TRIM(''))OR(((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c4)))))OR((rt0.c4 IN (vt0.c0)))))AND(((rt0.c4)<>(vt0.c0)))))OR(((rt0.c3) NOT NULL))), (SUM('-2048349222') IN ()) FROM rt0;SELECT DISTINCT ((COUNT(rt0.c4)) NOT NULL) FROM rt0; -- 1ms;
SELECT DISTINCT ((~ (rt0.c2)) IN ()), CASE rt0.c1 COLLATE BINARY  WHEN vt0.c0 THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END ELSE (((rt0.c1))<((rt0.c0))) END, (((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)) IN ()) FROM rt0 WHERE (TRIM(((x'2f90a7e1') ISNULL), (x'' IN ())));SELECT ALL (((rt0.c2)+(rt0.c1)) IN (UPPER(rt0.c2))), ((((((((vt0.c0 COLLATE BINARY)OR(COUNT(*))))OR(x'61fb')))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR(rt0.c2 COLLATE RTRIM)), CASE WHEN ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN CAST(rt0.c2 AS NUMERIC) END FROM vt0 WHERE (((CAST('' AS TEXT))&(((NULL)>>('0N&Kc')))));SELECT DISTINCT (+ (CAST(rt0.c0 AS INTEGER))), ((((((rt0.c4) IS FALSE))OR((NOT (rt0.c0)))))OR(((rt0.c3)%(rt0.c2)))), CASE ((0.5000456415375661)||(rt0.c2))  WHEN (((rt0.c1))>=((x'92a1'))) THEN (rt0.c0 IN ()) ELSE ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)) END FROM rt0 WHERE ((- ((((0.2459171502768417)) NOT BETWEEN ((1975180930)) AND ((x'438c036d')))))); -- 1ms;
SELECT DISTINCT CAST(((rt0.c0)<>(-36913068)) AS INTEGER) FROM rt0; -- 0ms;
SELECT ((((NULL IN ())))!=((0.6275001703539089))) FROM vt0 WHERE (((('790381701') IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT (((((((((rt0.c2 IN ()))AND((((rt0.c2))>((rt0.c0))))))AND(NULL)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c3)>(NULL)))) FROM rt0 WHERE (LOWER(NULL) COLLATE NOCASE); -- 0ms;
SELECT CAST(AVG(rt0.c4) AS NUMERIC) FROM vt0 ORDER BY MIN((+ (rt0.c1)), HEX(rt0.c1)) DESC  NULLS LAST, ((((((rt0.c0)GLOB(rt0.c1)))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c0 END)))OR(x'')) DESC  NULLS FIRST;SELECT NULL FROM rt0, vt0 WHERE ((NULL COLLATE BINARY IN ())); -- 0ms;
SELECT AVG(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 END) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NTILE(LIKELIHOOD(((rt0.c2) NOTNULL), 0.8443025921928544)) OVER (), CAST(SUM(rt0.c1) AS REAL), ((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))AND(vt0.c0)))>((('!\nJ')-(rt0.c4)))), CASE WHEN ((rt0.c3)&(rt0.c3)) THEN rt0.c1 COLLATE NOCASE WHEN json_valid(rt0.c4) THEN CAST(rt0.c3 AS TEXT) WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt0.c4)&(rt0.c3)) END, (((((rt0.c2)&(rt0.c2)), rt0.c2 COLLATE NOCASE, rt0.c4 COLLATE NOCASE))<((((rt0.c4) NOT NULL), (NOT (NULL)), ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))))) FROM rt0 WHERE ((((('Yw' COLLATE BINARY)OR(x'' COLLATE BINARY)))AND(CAST(x'' AS REAL)))) ORDER BY rt0.c3 DESC, (((((((rt0.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c4, x'')) AND ((rt0.c1, rt0.c1, rt0.c0))))AND(rt0.c0 COLLATE NOCASE)))AND(((rt0.c1)LIKE(rt0.c4))))  NULLS FIRST;SELECT ALL (((rt0.c2 IN ()))IS NOT(CAST(rt0.c0 AS BLOB))), rt0.c0, (- ((rt0.c2 IN ()))) FROM vt0 WHERE (INSTR(IFNULL(DISTINCT x'', NULL), CASE '1811743553'  WHEN -4.44346667E8 THEN x'' WHEN x'ce90f10b' THEN 0.6361767482833534 WHEN 0.8488313730687184 THEN 0.6987395794288505 ELSE 0.5402137803781065 END));SELECT DISTINCT ((((vt0.c0) NOTNULL)) ISNULL) FROM rt0 WHERE (CASE NULL  WHEN -953869569 THEN '-953869569' END COLLATE BINARY);SELECT DISTINCT (- (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), (((vt0.c0)+(vt0.c0)) IN ()), rt0.c1, TRIM(TYPEOF(rt0.c0), ((rt0.c2) NOTNULL)), (((rt0.c4)) NOT BETWEEN (((((((((('-1478802178')OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c4)))AND('930947400')))) AND ((rt0.c4 COLLATE NOCASE))) FROM rt0 WHERE (''); -- 0ms;
SELECT DISTINCT STRFTIME(((rt0.c3) IS TRUE), ((rt0.c2)IS(rt0.c4)), ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c3))) FROM rt0, vt0 WHERE (((((((-1617637757)+(-1.478802178E9)))AND(LIKELY(-1.478802178E9))))AND(((NULL) NOT BETWEEN (0x2c9babae) AND (x''))))) GROUP BY (((((vt0.c0)&(rt0.c4))))<>((((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((((rt0.c4))<=(('15503495')))))), (+ ((((rt0.c1, rt0.c3, rt0.c2)) BETWEEN ((x'', rt0.c3, rt0.c2)) AND ((rt0.c4, rt0.c3, rt0.c4))))) HAVING (((rt0.c1))<>((rt0.c4))) COLLATE BINARY; -- 0ms;
SELECT (CAST(rt0.c0 AS TEXT) IN ()) FROM rt0, vt0; -- 1ms;
SELECT (NULL IN ()) FROM vt0, rt0 NOT INDEXED WHERE ((((((('1090660218')<=(NULL)))AND(x'')))OR((NULL IN ())))); -- 0ms;
SELECT (((NOT (rt0.c2))) NOT NULL) FROM vt0 WHERE ((((0xfffffffff89ee7d3)>>(NULL)) IN ()));SELECT DISTINCT ((rt0.c1) NOTNULL) FROM vt0;SELECT DISTINCT GROUP_CONCAT(((rt0.c3)*(vt0.c0))) OVER () FROM rt0, vt0 WHERE (LOWER(DISTINCT LOWER(DISTINCT 0.5105376544464076))) LIMIT 1140190854; -- 0ms;
SELECT DISTINCT ((AVG(vt0.c0))IS NOT(((vt0.c0) ISNULL))), (NOT ((NOT (rt0.c2)))), SUM(((rt0.c4)<(rt0.c0))) FROM vt0, rt0 WHERE ('903935378'); -- 0ms;
SELECT ALL (NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))), TOTAL((((((((('')AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c2))), GROUP_CONCAT(CASE WHEN x'' THEN rt0.c3 END) FROM rt0 WHERE ((- (x''))) ORDER BY '-2078717113' DESC  NULLS LAST, (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))>((((rt0.c3)IS(rt0.c0))))) DESC  NULLS LAST, (NOT (((((vt0.c0)OR(rt0.c1)))OR(rt0.c0)))) ASC  NULLS FIRST;SELECT ALL HEX(DISTINCT CAST(rt0.c4 AS NUMERIC)) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c4)) AS REAL) FROM rt0 WHERE (((((NULL) NOT BETWEEN (x'164f') AND (NULL)))IS(((((((((0.8657776036738648)OR(0.4196154930095446)))AND(x'')))AND(x'')))OR(x'')))));SELECT DISTINCT COUNT(*) OVER (), ((SUM(rt0.c3))-(((rt0.c1)==(rt0.c3)))), (((((rt0.c2) IS FALSE)))>=((-76022109))) FROM rt0; -- 0ms;
SELECT ALL (rt0.c0 IN ()) COLLATE RTRIM, ((((rt0.c2)%(rt0.c2))) ISNULL), rt0.c1 FROM rt0, vt0; -- 0ms;
SELECT '1720735357' FROM vt0, rt0 WHERE (CASE WHEN ((NULL) NOT NULL) THEN (NULL IN ()) END) GROUP BY (((((((((((rt0.c2, rt0.c0, 0.6429274019057442)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, 930947400))))OR(x'0025')))OR((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))))AND(((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3)))))AND(((rt0.c4)%(rt0.c2)))); -- 0ms;
SELECT ((((rt0.c3)AND((vt0.c0 IN ()))))OR(((x'')GLOB(rt0.c4)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (~ (CAST(0.9436134599165488 AS REAL))) FROM rt0 WHERE ((((- (NULL)))LIKE(TRIM('}', NULL)))) GROUP BY ABS((rt0.c0 IN (rt0.c3, -7.6022109E7))), x'', ((json_array(rt0.c1, vt0.c0, NULL, vt0.c0))>(((rt0.c0)>=(rt0.c3)))) HAVING ((NULL)/(CASE WHEN rt0.c3 THEN NULL ELSE rt0.c3 END));SELECT ALL LIKE(CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c0)*(rt0.c2)), 's') FROM rt0, vt0 WHERE (CASE WHEN 0Xffffffffa0b9e1da THEN x'' END COLLATE NOCASE); -- 0ms;
SELECT ALL SUM(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3))) OVER () FROM vt0 WHERE (((((0.40861490639329634)AND(1551272015)))OR(-2091295403)) COLLATE BINARY) LIMIT 276325088;SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN 0.2715571859667143 WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END)||((((NULL))!=((x''))))) FROM vt0, rt0 WHERE ((((~ (NULL)))-((((NULL, 'v.', ''))>(('1480665862', '!tJ', 0.4946017749832322)))))); -- 0ms;
SELECT CASE WHEN ((rt0.c1)|(rt0.c0)) THEN CAST(rt0.c2 AS NUMERIC) ELSE ((rt0.c2)IS NOT(rt0.c3)) END, CASE WHEN rt0.c4 THEN vt0.c0 END COLLATE RTRIM COLLATE NOCASE, rt0.c3 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0;SELECT DISTINCT CASE (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))  WHEN ((rt0.c0)<>(rt0.c2)) THEN MIN(rt0.c2) END, CAST(((rt0.c4)+(0xffffffff8250ab24)) AS TEXT), 'pNL' FROM rt0, vt0 LIMIT 1090660218; -- 0ms;
SELECT CAST(0.6642568346684161 AS NUMERIC) FROM rt0, vt0 WHERE (((((DATE('T+', NULL, NULL))AND((('1904183338')>(NULL)))))AND(0xffffffffb562a42b COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((((((NULL)AND(('' IN ()))))OR(CAST(rt0.c0 AS REAL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))OR(((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)))) FROM vt0, rt0 ORDER BY (((vt0.c0) ISNULL) IN ()) ASC; -- 1ms;
SELECT DISTINCT ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((rt0.c1 IN ()))) FROM vt0, rt0 WHERE (((((((1.821877576E9) NOT BETWEEN ('439281465') AND (0.6088834693632452)))OR((('䑓~+B䚅O O')-(0.4946017749832322)))))AND(((x'44605697') IS FALSE)))) LIMIT 9223372036854775807 OFFSET 22582734; -- 0ms;
SELECT DISTINCT MIN(((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, '', CAST(rt0.c2 AS INTEGER)), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE BINARY, ((rt0.c3)||(((rt0.c0)+(vt0.c0)))), AVG(((rt0.c3)GLOB(vt0.c0))) OVER (), LEAD(((rt0.c1)<('2113427235')), 0.6642568346684161, ((CAST(rt0.c3 AS NUMERIC)) BETWEEN (IFNULL(rt0.c0, vt0.c0)) AND ((NOT (rt0.c2))))) OVER ( ORDER BY rt0.c3) FROM rt0, vt0 WHERE (CAST((- (0.8448125694794335)) AS INTEGER)) LIMIT 1399908048; -- 0ms;
SELECT ROW_NUMBER() OVER (), CASE WHEN rt0.c4 THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) WHEN rt0.c3 COLLATE RTRIM THEN rt0.c3 COLLATE BINARY WHEN rt0.c2 COLLATE BINARY THEN (rt0.c0 IN ()) ELSE CAST(rt0.c0 AS BLOB) END, SUM((rt0.c0 IN (rt0.c2))) FILTER(WHERE SQLITE_COMPILEOPTION_USED(rt0.c4 COLLATE RTRIM)) OVER ( RANGE  UNBOUNDED PRECEDING), ((((rt0.c0)OR((~ ('-1733031035')))))AND(TYPEOF(rt0.c4))), CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) THEN ((((((((rt0.c4)AND(rt0.c4)))AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c3)) WHEN (vt0.c0 IN ()) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c0)>=(rt0.c4)) THEN LIKE(vt0.c0, '', '9') WHEN ((rt0.c4)%(rt0.c2)) THEN ((vt0.c0) NOTNULL) WHEN (((rt0.c4))<((vt0.c0))) THEN vt0.c0 ELSE COALESCE(DISTINCT -1871887277, rt0.c4) END FROM rt0 WHERE (((((((0.2944630135815317) BETWEEN ('0.8657776036738648') AND (x'')))AND(((0.7605972522119863)>=(x'28b4')))))AND(x'48a0' COLLATE BINARY))) LIMIT -1745639402;SELECT DISTINCT 0.38982718330913246 COLLATE RTRIM, ((rt0.c3)AND((NOT (rt0.c3)))), (((((rt0.c4))<=((rt0.c2)))) NOT NULL) FROM vt0, rt0; -- 0ms;
SELECT ALL AVG((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))), CAST((rt0.c2 IN (rt0.c3, rt0.c2)) AS TEXT), vt0.c0 FROM vt0 WHERE ((((((NULL)AND('1399908048')))OR(0.6862978716051061)) IN ()));SELECT ALL ROW_NUMBER() OVER ( ROWS  CURRENT ROW EXCLUDE TIES) FROM rt0 WHERE (((('-1259915619' IN (NULL))) NOT BETWEEN (0.06459862771518976) AND (('' IN (x''))))) GROUP BY CASE WHEN ((0.08565529162426189)GLOB(rt0.c3)) THEN ((rt0.c2) IS TRUE) END; -- 0ms;
SELECT ((UPPER(rt0.c4))=(((rt0.c0)>(rt0.c3)))) FROM rt0, vt0 WHERE ((((((0Xffffffffa6033838)) NOT BETWEEN (('')) AND (('-511687035'))))<<((('PD-+')<=(0.6066745937943905))))); -- 0ms;
SELECT (rt0.c2 IN (rt0.c3)) COLLATE BINARY FROM rt0 WHERE ('-780684642'); -- 0ms;
SELECT ALL ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN (((0.1436165918972082)<=(rt0.c4))) AND (((rt0.c4)>=(rt0.c4)))), CASE ((NULL)*(0.4162570665175104))  WHEN vt0.c0 THEN CAST(rt0.c0 AS BLOB) ELSE ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)) END, x'' FROM vt0;SELECT ((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4))) NOT BETWEEN (((rt0.c4) IS FALSE)) AND (rt0.c2)) FROM vt0, rt0 WHERE (CAST(0xffffffffb20ad9a6 COLLATE BINARY AS NUMERIC)) GROUP BY ((CAST(rt0.c2 AS REAL)) NOTNULL); -- 0ms;
SELECT COUNT((rt0.c1 IN (rt0.c1))) OVER (), ((x'2516') IS FALSE), ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))IS NOT(rt0.c3)), '1587811694', AVG(((rt0.c4) ISNULL)) OVER ( ORDER BY ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))=(0.06475074764008792)) ASC  NULLS LAST) FROM rt0, vt0 WHERE (((0X513a485a IN ()) IN ())); -- 1ms;
SELECT DISTINCT (- (((rt0.c3) NOT NULL))) FROM vt0, rt0 ORDER BY (NOT (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)); -- 0ms;
SELECT DISTINCT ((rt0.c4)IS(rt0.c3)) COLLATE BINARY COLLATE NOCASE FROM vt0, rt0 WHERE ((((0.9647713931526722)) BETWEEN ((((NULL)/(x'')))) AND ((((x'') IS TRUE))))) GROUP BY rt0.c2 HAVING (((((((('')AND(((rt0.c3) IS TRUE))))OR(((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c2)))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))))AND(rt0.c1 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT (+ ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c4))))) FROM vt0, rt0; -- 0ms;
SELECT (~ (((rt0.c0)=(vt0.c0)))) FROM rt0;SELECT ALL CASE WHEN ((rt0.c1)-(rt0.c2)) THEN ((rt0.c3)+(vt0.c0)) END, ROW_NUMBER() OVER (), (((((rt0.c0))=((rt0.c0)))) IS FALSE) FROM rt0 WHERE (TYPEOF(NULL));SELECT ALL (((((((((rt0.c3)OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c4)))AND(rt0.c2)) IN ()) FROM vt0 WHERE (CASE ((1904183338)-(x''))  WHEN '3' THEN ((x'')<<(NULL)) ELSE (((('-780684642')AND(981417113)))OR('-1663269046')) END) GROUP BY CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)) THEN ((rt0.c0)*(rt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN ((((((((rt0.c2)OR(rt0.c2)))OR('1462044189')))OR(rt0.c1)))AND(vt0.c0)) WHEN ((vt0.c0)IS(rt0.c4)) THEN CAST(rt0.c1 AS TEXT) ELSE CASE WHEN '' THEN vt0.c0 END END HAVING CAST(((rt0.c0) IS FALSE) AS BLOB);SELECT ALL CAST(((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)) AS TEXT) FROM vt0, rt0 WHERE (((((((0.8969965259883033) ISNULL))OR('''yF?3￿''I')))AND('he91' COLLATE BINARY))) ORDER BY ((rt0.c1 COLLATE BINARY) IS TRUE) ASC; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)AND(GLOB(rt0.c4, rt0.c0))) FROM rt0 WHERE (((json_array_length('-1745639402'))IS(NULL COLLATE RTRIM))) GROUP BY (NOT (((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c1)))) HAVING rt0.c2;SELECT ALL NTILE((((rt0.c4)&(rt0.c0)) IN (0.8488313730687184, json_insert(rt0.c2, 0.3779382420942303, rt0.c0, rt0.c0, rt0.c2)))) OVER () FROM rt0 WHERE (((x'' COLLATE BINARY) BETWEEN (((((-1162249819)AND(NULL)))OR(0.008499091733339514))) AND (CASE 0.5646878203893801  WHEN '䑓~+B䚅O O' THEN 0.6072143730079328 WHEN NULL THEN x'' WHEN 0X717f882a THEN '0.6968315561042485' ELSE NULL END))); -- 0ms;
SELECT ((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0))) BETWEEN (CAST(rt0.c1 AS REAL)) AND ((((rt0.c3, rt0.c4, rt0.c1))<((rt0.c4, rt0.c3, rt0.c0))))) FROM rt0 WHERE ((((0.34304823997551237) NOTNULL) IN ()));SELECT (+ (((rt0.c0)GLOB(rt0.c4)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c4)IS NOT(rt0.c3)) AS REAL) FROM rt0 WHERE ((NOT ((+ (0.06346777057434227))))); -- 0ms;
SELECT DISTINCT (~ ((((rt0.c4))<((rt0.c3))))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((((((((((rt0.c4)OR(vt0.c0)))AND(vt0.c0)))OR('\n䎁l^W圣')))AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c0)))<(CAST(rt0.c3 AS REAL))) FROM vt0 WHERE (((((CAST(0.24300366145788876 AS TEXT))OR((x'' IN (x'7a2e')))))OR(HEX('}'))));SELECT DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (((rt0.c3)!=(rt0.c3)))), (CAST(rt0.c2 AS REAL) IN ()), load_extension(((rt0.c0) ISNULL), (- (rt0.c1))) FROM rt0, vt0 WHERE (((x'3955')<=(1462044189)) COLLATE RTRIM); -- 2ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c3 AS NUMERIC))LIKE(vt0.c0)) FROM rt0 WHERE (ABS(((NULL) BETWEEN ('-1617637757') AND (NULL))));SELECT ALL CASE WHEN GROUP_CONCAT(rt0.c3) THEN (rt0.c3 IN ()) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c2) NOT NULL) WHEN vt0.c0 COLLATE BINARY THEN LIKELY(rt0.c2) END, MAX(304124372), (((((vt0.c0 IN ()))OR((((('1904183338')OR(rt0.c4)))OR(rt0.c1)))))AND((- (rt0.c2)))) FROM rt0, vt0 WHERE ((('1140190854') NOT BETWEEN (((((0.04017600917563946)OR(0.6996793609907087)))AND(NULL))) AND (((((((((((((0.7363917169610809)AND(0.23309288273360385)))AND(133334101)))OR(NULL)))AND('|2匵')))OR('')))AND(x'9259'))))); -- 0ms;
SELECT ((((((((HEX(DISTINCT 2076179946))AND(((vt0.c0)<=(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c3) IS TRUE))) FROM vt0, rt0 WHERE (((COALESCE(0X48638b8b, x'ebbd', 'pK', NULL, '', 0.8783776036546449))IS NOT((((NULL))>((NULL)))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c3)OR(rt0.c4)))AND(vt0.c0))) BETWEEN (((rt0.c1)>(rt0.c3))) AND (((rt0.c3)-(vt0.c0)))) FROM vt0 WHERE (LOWER(((((((((((((0.6996793609907087)OR('433937265')))OR(NULL)))OR(NULL)))AND(x'9ad6')))OR(1090660218)))OR(0.06346777057434227))));SELECT (NOT (((((rt0.c0)AND(vt0.c0)))AND(rt0.c4)))), COUNT(*), (NOT (((rt0.c1)>>(rt0.c3)))) FROM rt0;SELECT DISTINCT rt0.c0 FROM vt0, rt0; -- 0ms;
SELECT ALL (- (HEX(rt0.c3))) FROM rt0; -- 0ms;
SELECT 1.399908048E9 FROM vt0, rt0 WHERE (UPPER(CAST(x'' AS TEXT))) GROUP BY ((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c1) ISNULL))))AND(TYPEOF(rt0.c4))))OR(((rt0.c2) ISNULL))))OR(((rt0.c4)<=(rt0.c4)))), (((rt0.c4)) BETWEEN (('')) AND (((((vt0.c0, rt0.c3, vt0.c0))>((rt0.c3, vt0.c0, rt0.c3)))))), CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END THEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END HAVING ((CAST(vt0.c0 AS REAL)) BETWEEN (((rt0.c0)%(rt0.c1))) AND ((rt0.c3 IN ()))); -- 0ms;
SELECT CASE rt0.c4  WHEN ((rt0.c3)<=(rt0.c1)) THEN ((rt0.c1)<=(rt0.c2)) END, CAST(((NULL)IS NOT(rt0.c3)) AS NUMERIC), ((json_patch(rt0.c1, 0.07230027967416086)) NOT BETWEEN ((NOT (rt0.c3))) AND (CAST(rt0.c4 AS BLOB))) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((vt0.c0) IS FALSE))AND(((rt0.c1)GLOB(rt0.c0)))))OR(((rt0.c3)GLOB(vt0.c0)))) WHERE (((('1189036994')) BETWEEN ((((0.1458286902741821)IS NOT('')))) AND (('')))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY CASE WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 ELSE x'524c' END THEN rt0.c0 END, (+ ((rt0.c0 IN ()))) ORDER BY CAST(((vt0.c0) ISNULL) AS REAL)  NULLS FIRST ROWS  UNBOUNDED PRECEDING) FROM rt0, vt0; -- 1ms;
SELECT ALL AVG(((vt0.c0) BETWEEN (rt0.c3) AND (NULL))) OVER (), (((rt0.c4)) NOT BETWEEN ((((rt0.c1) NOTNULL))) AND ((CASE WHEN x'' THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN -1.478802178E9 THEN vt0.c0 END))), CAST(((rt0.c1) BETWEEN (rt0.c0) AND (',6O]op')) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)IS NOT('')))|(((0x641ddee4)!=(rt0.c4)))), ((((rt0.c3)-(vt0.c0))) IS FALSE), (((((~ (rt0.c2)))OR(COUNT(*))))OR(((rt0.c0)<=(rt0.c2)))) FROM vt0 WHERE (((((((((((x'')AND(0x58412b06)))AND(-226434536)))OR(NULL)))AND(0.015865085185153727)))/(CAST(0.876496419103789 AS INTEGER))));SELECT ALL rt0.c4 FROM vt0;SELECT ALL ((rt0.c1 COLLATE RTRIM)IS(((rt0.c1)IS(rt0.c1)))) FROM vt0, rt0 WHERE (((CASE WHEN NULL THEN NULL END)/(((NULL) BETWEEN ('n') AND (0xffffffffd79264ef))))); -- 0ms;
SELECT ALL CASE CASE vt0.c0  WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN NULL WHEN rt0.c4 THEN rt0.c3 END  WHEN TIME(rt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c3) THEN ((vt0.c0) BETWEEN (x'') AND (rt0.c3)) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)IS NOT(vt0.c0)))AND(((vt0.c0) ISNULL))))AND(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c4 END)) FROM rt0, vt0; -- 0ms;
SELECT rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((rt0.c1)==(vt0.c0)))) FROM vt0;SELECT DISTINCT COUNT(*), ((x'') NOTNULL), GROUP_CONCAT(((rt0.c1)>>(rt0.c4))) FROM rt0, vt0 LIMIT 133334101; -- 0ms;
SELECT ALL GROUP_CONCAT((rt0.c0 IN ()) COLLATE RTRIM) OVER () FROM rt0 LIMIT 830636544; -- 0ms;
SELECT ALL CAST(((rt0.c2)OR(vt0.c0)) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE COUNT(*)  WHEN (NOT (rt0.c4)) THEN CAST(rt0.c1 AS REAL) ELSE (+ (rt0.c4)) END FROM vt0 WHERE (((('1089606714', -1.7976931348623157E308, 0.851589359501651)) NOT BETWEEN ((((x'') NOT BETWEEN (0.5515466630593678) AND ('1968802473')), (+ ('-123803693')), (0.8647033565199982 IN ()))) AND ((((((x'')OR(x'')))AND(x'db88')), ((((((((1215520673)OR('a7')))AND(NULL)))AND('U\n')))OR('-182026864')), CASE 0.5355613747440631  WHEN 0.06140957119339019 THEN 1554940757 WHEN 0x7f28455 THEN x'' WHEN x'' THEN '' END))));SELECT ((((rt0.c0)/(x'')))=(((rt0.c0)LIKE(rt0.c3)))), ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))=(((rt0.c1)*(rt0.c2)))), ((((rt0.c1)>(vt0.c0)))+((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))), (((((((rt0.c0)OR(rt0.c4)))AND(rt0.c2))))<((CASE rt0.c0  WHEN x'cc08' THEN rt0.c3 ELSE rt0.c2 END))), CAST((rt0.c0 IN ()) AS REAL) FROM rt0;SELECT ALL MIN(MIN(((vt0.c0)=(1315727322)))), ((vt0.c0 IN ()) IN ()), (~ ((rt0.c1 IN ()))) FROM vt0, rt0 WHERE (((x'')&(-309054042)) COLLATE NOCASE) LIMIT -9320361;SELECT (((((((((((((vt0.c0 IN ()))AND(COUNT(rt0.c4))))OR(((rt0.c0) ISNULL))))OR((NOT (0.9862220928278242)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))AND((((rt0.c2))<((rt0.c1))))))AND((NOT (rt0.c0)))) FROM rt0; -- 0ms;
SELECT ((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (((rt0.c3) IS TRUE)) AND (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)))) FROM vt0, rt0 WHERE (CASE WHEN x'b4e6' THEN NULL COLLATE RTRIM ELSE 0X134a912a COLLATE RTRIM END); -- 0ms;
SELECT ALL (((NOT (rt0.c1))) NOTNULL) FROM rt0 WHERE (CASE ((0.8397417886986197) NOT BETWEEN (0xfffffffff3c052a4) AND (x''))  WHEN ((((((((NULL)OR('-1663269046')))AND(x'')))AND('1941121910')))AND(-36913068)) THEN ((NULL) BETWEEN (2132959855) AND ('1459676813')) ELSE ((x'') NOTNULL) END); -- 0ms;
SELECT TYPEOF(rt0.c3), UNLIKELY(CASE x''  WHEN rt0.c1 THEN rt0.c1 WHEN '343482471' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END), rt0.c2 FROM rt0;SELECT DISTINCT (+ (0.3785794338465207)), (((- (rt0.c0)))IS(CAST(rt0.c2 AS NUMERIC))), ((((rt0.c4) IS FALSE)) NOTNULL), vt0.c0, AVG(CASE WHEN rt0.c2 THEN vt0.c0 END) OVER () FROM rt0;SELECT COALESCE(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CAST(rt0.c3 AS BLOB)), rt0.c0, (((((('-1284487123')/(vt0.c0)))OR((('')-(rt0.c4)))))OR(json_insert(rt0.c1, rt0.c2, vt0.c0))) FROM vt0;SELECT DISTINCT ((((rt0.c3)<=(rt0.c4))) BETWEEN (MAX(rt0.c1)) AND ((+ (rt0.c4)))) FROM rt0, vt0 WHERE (((('319285151', x'4e7a', -1.23803693E8)) NOT BETWEEN (((~ (x'')), ('lB' IN ('1093132178')), ((NULL) NOT BETWEEN (0.8283859155015418) AND ('-2076188236')))) AND (((('-495297953') NOT BETWEEN (1.093132178E9) AND (0X5725061d)), ((((NULL)AND(NULL)))AND('614966438')), ((0.21929109116264012)%(0.34069147809297307)))))) ORDER BY vt0.c0 DESC; -- 0ms;
SELECT DISTINCT CASE WHEN x'17aa2223' THEN CASE WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c0 END END, (('q8b-') BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c4) IS FALSE))), FIRST_VALUE(rt0.c3) OVER ( ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((rt0.c0)AND(vt0.c0)))) ASC  NULLS LAST) FROM vt0, rt0 WHERE (((TRIM('-1308746826'))+((('|2匵')|(NULL))))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (rt0.c0))) NOTNULL) FROM rt0;SELECT DISTINCT ((((rt0.c3) IS TRUE))IS NOT(rt0.c2)) FROM rt0, vt0 UNION SELECT NULL FROM rt0 GROUP BY ((CASE WHEN '1' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)>=(rt0.c4)), (((((rt0.c0)>>(rt0.c0))))=(((NOT (rt0.c3))))), (((((0.5355613747440631, rt0.c4, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c1)))) NOT BETWEEN (((rt0.c1)||(rt0.c3))) AND ((((rt0.c4)) NOT BETWEEN (('1829910574')) AND ((rt0.c2))))); -- 0ms;
SELECT DISTINCT (~ (((rt0.c2)<<(rt0.c0)))) FROM vt0 WHERE (((CASE NULL  WHEN NULL THEN NULL WHEN x'4286' THEN x'f27f' WHEN NULL THEN 0.46307453365020534 WHEN x'' THEN x'' WHEN '1551272015' THEN 0.23556736812543555 WHEN NULL THEN 0xffffffffdd0e6474 WHEN 'AB' THEN -1.7976931348623157E308 ELSE '1189036994' END) NOT NULL));SELECT DISTINCT ((0.3624821046938893)OR(TRIM(rt0.c4))) FROM rt0 WHERE ((((((('-1308746826') NOT NULL))OR((- ('T+')))))AND(((('-1334557823')) NOT BETWEEN (('')) AND ((NULL)))))); -- 0ms;
SELECT ALL rt0.c2 COLLATE NOCASE FROM rt0 WHERE ((((((('')&(-703946894)))OR(CAST(0.9828394033656044 AS BLOB))))AND((~ (''))))); -- 0ms;
SELECT DISTINCT ((((rt0.c4)/(rt0.c4))) ISNULL), ((((((rt0.c4)>>(rt0.c3)))AND(((rt0.c0)OR(vt0.c0)))))AND((((vt0.c0, rt0.c4, rt0.c3, vt0.c0, rt0.c0))>=((vt0.c0, rt0.c0, 130784801, rt0.c0, rt0.c4))))), SQLITE_COMPILEOPTION_GET(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) FROM rt0 WHERE (LIKELIHOOD((((((((('1009017451')AND('-182026864')))OR(x'')))AND(NULL)))OR(NULL)), 0.3203681126722975)) UNION ALL SELECT DISTINCT ((rt0.c4 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)&(rt0.c2))) AND (((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)))), TOTAL(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))), (+ (rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE ((NULL IN (((0x427c4ca) NOT BETWEEN ('') AND (NULL)))));SELECT (((+ (vt0.c0)))||(((rt0.c0) ISNULL))), ((((rt0.c0)<>(rt0.c0)))|(rt0.c2 COLLATE RTRIM)), rt0.c1 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST((~ (NULL)) AS BLOB) FROM rt0 WHERE ((('') NOT BETWEEN (x'd987') AND (x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c4)))&(LIKELIHOOD(rt0.c1, 0.18890197815635235))) ASC LIMIT 654769833 OFFSET 439281465; -- 0ms;
SELECT CASE NULL  WHEN ((rt0.c1) IS FALSE) THEN (rt0.c2 IN ()) END, SQLITE_COMPILEOPTION_GET((NOT (0.25861498134094374))), ((((rt0.c3) ISNULL)) IS FALSE), json_valid(CASE '0.9828394033656044'  WHEN rt0.c1 THEN rt0.c4 END), rt0.c3 FROM vt0, rt0 WHERE ((((('')<(3.2365393E8)))>=(CAST(0.8370382051610281 AS BLOB)))); -- 0ms;
SELECT (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c3 AS REAL)) AND (rt0.c0 COLLATE NOCASE)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((CAST(0.24300366145788876 AS INTEGER))=(CASE WHEN rt0.c1 THEN rt0.c1 END)) FROM vt0, rt0; -- 0ms;
SELECT FIRST_VALUE(((((('' IN (vt0.c0)))AND((((vt0.c0))==((vt0.c0))))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))) OVER () FROM vt0 WHERE ('388098190') GROUP BY ((rt0.c2 COLLATE NOCASE)<>(vt0.c0)) HAVING (((NOT (rt0.c3)))-((rt0.c3 IN ())));SELECT DISTINCT ((rt0.c2)|(((rt0.c4) IS FALSE))) FROM rt0 WHERE ((((CAST('' AS TEXT)))<((CASE '0.2944630135815317'  WHEN 1315727322 THEN '165572755' END)))); -- 0ms;
SELECT DISTINCT (((x'' IN (NULL)))>(((rt0.c2) NOT NULL))), '1901230426', CASE WHEN (((rt0.c3))<((rt0.c0))) THEN (rt0.c1 IN ()) ELSE rt0.c1 END FROM vt0 WHERE (CASE (((NULL))<>((x'')))  WHEN (0.6014327418763775 IN ()) THEN CAST(0.4893704716721491 AS NUMERIC) END);SELECT DISTINCT ((SUM(rt0.c0))|(rt0.c4 COLLATE NOCASE)) FROM vt0 WHERE (CASE WHEN '' THEN ((1.805593046E9)!=('')) END) LIMIT -1099887901 OFFSET -2061330179;SELECT DISTINCT NULL FROM vt0, rt0 GROUP BY ((((rt0.c4) ISNULL)) IS TRUE); -- 0ms;
SELECT CAST(((rt0.c0) NOT BETWEEN (0.5481100073275067) AND (rt0.c0)) AS TEXT) FROM vt0, rt0 WHERE (CAST(((((0.08580964403131663)OR(0.008181628149821929)))AND('-76022109')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ',ৌ<#5vyfl' FROM rt0 WHERE ((((0xffffffffdf937cd0)) BETWEEN ((((0.41984258825158427)<=('614966438')))) AND (((('')|(NULL)))))); -- 0ms;
SELECT (((vt0.c0))>((rt0.c1))) COLLATE RTRIM FROM vt0 WHERE (((TRIM('')) IS FALSE)) LIMIT -2033811630 OFFSET -598000054;SELECT (((0.2210858522714162, ((vt0.c0)/(rt0.c0)), CAST(rt0.c0 AS INTEGER)))<((((rt0.c0)=('-1064682181')), UNLIKELY(rt0.c1), ((rt0.c3) ISNULL)))) FROM rt0, vt0 WHERE (((('5o'))!=((0.4088424116335181))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (~ (((rt0.c1)<(vt0.c0)))) FROM rt0 WHERE (CASE WHEN ((NULL) BETWEEN (x'') AND (x'ef95')) THEN CAST('-9320361' AS INTEGER) ELSE (('') BETWEEN (0.989160839411314) AND (x'146e')) END);SELECT DISTINCT NULL FROM vt0 WHERE (((CASE WHEN x'' THEN 0.6017908369487052 END) BETWEEN ((- (x''))) AND ((+ (0.9055171166247179))))); -- 0ms;
SELECT (((rt0.c2 IN (rt0.c4, rt0.c1)))*((rt0.c3 IN ()))) FROM vt0 WHERE ((((NULL)) BETWEEN (((~ ('-444346667')))) AND ((0.9080891107086297))));SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((x'6c0ab4bf')OR(0.8175828357477166)))OR(0.19135344974920887)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)+(rt0.c1))) OVER ( PARTITION BY 0.4853218070464643, (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))IS NOT(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR('cejh,qfN?')))AND(rt0.c4))))) FROM vt0;SELECT ALL ((((rt0.c3) ISNULL))&(TRIM(rt0.c2))) FROM vt0, rt0 WHERE (CAST((+ (x'5ab7')) AS NUMERIC)); -- 0ms;
SELECT ((SUM(rt0.c2)) NOT NULL) FROM vt0 WHERE (((UNLIKELY(DISTINCT 4.33937265E8))<<((('') ISNULL))));SELECT DISTINCT COALESCE(rt0.c3, rt0.c3) COLLATE BINARY, ((((rt0.c0)LIKE(rt0.c1)))GLOB(rt0.c1 COLLATE RTRIM)), (rt0.c1 COLLATE RTRIM IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT (((rt0.c4, '', rt0.c4)) BETWEEN ((rt0.c4, vt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0))), AVG(rt0.c0)) FROM rt0, vt0 WHERE (0Xffffffffde207a2f) ORDER BY ((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c1)))*((((rt0.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c4, vt0.c0, rt0.c1)))))  NULLS FIRST, ((((((((((rt0.c2)AND(-1.50973844E9)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0))) BETWEEN ((((rt0.c4)) BETWEEN ((NULL)) AND ((rt0.c1)))) AND ((+ (rt0.c4))))  NULLS LAST; -- 0ms;
SELECT ROW_NUMBER() OVER (), ((((rt0.c3)OR(rt0.c1)))AND('1407742241')) COLLATE RTRIM, AVG((((vt0.c0, rt0.c2, rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN (('zm', rt0.c1, rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c1, vt0.c0, rt0.c3, vt0.c0, rt0.c1)))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt0 GROUP BY (((- (rt0.c1)))AND(((rt0.c1)|(rt0.c3)))) HAVING ((((0.851589359501651) BETWEEN (rt0.c3) AND (rt0.c1)))LIKE((rt0.c4 IN (0Xffffffffbeca813b, rt0.c0)))) LIMIT 369559198;SELECT DISTINCT ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (rt0.c0) AND ((((rt0.c1)) NOT BETWEEN (('Zk')) AND ((0.7605972522119863))))), NULL, vt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY FROM vt0 WHERE (CAST('-2081812481' COLLATE RTRIM AS NUMERIC));SELECT ALL COUNT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))) FROM vt0 WHERE ((((('1215534083')|('')))>>(((0.19973839878331756)>>('0.3779382420942303')))));SELECT DISTINCT ABS(((rt0.c4) NOTNULL)), ((((((((((rt0.c0)OR(rt0.c3)))OR(vt0.c0)))OR(NULL)))AND(rt0.c0))) NOT BETWEEN (CAST('' AS TEXT)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)), (((((((((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))AND((rt0.c2 IN (vt0.c0, vt0.c0)))))OR((+ (rt0.c2)))))AND((('') IS TRUE))))OR(((rt0.c4)||(rt0.c1)))) FROM rt0 WHERE (((((((((((((0X303a5f34)OR(0xffffffff906d4453)))OR(0.5080689594634038)))AND(NULL)))AND('6L75')))AND('7n7hlsⅈ')))AND('젇OJ}')) COLLATE NOCASE) LIMIT -817822036;SELECT DISTINCT ((((rt0.c4, rt0.c2, rt0.c1))<((rt0.c0, NULL, rt0.c0))) IN ()), CASE ABS(rt0.c0)  WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (NULL)) THEN rt0.c3 COLLATE NOCASE END, CAST(((rt0.c3)==(rt0.c1)) AS REAL) FROM vt0 INNER JOIN rt0 ON CAST((~ (rt0.c1)) AS REAL) WHERE ((((((((((NULL)AND(NULL)))OR(0xffffffff826880c3)))AND(0.3754479099452205)))OR(NULL)) IN ((- (0.04447480589914543))))); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c0) NOT BETWEEN (x'7fe0') AND (rt0.c2)) THEN (x'8d9b' IN ()) WHEN CASE rt0.c2  WHEN 1.7976931348623157E308 THEN rt0.c2 ELSE rt0.c0 END THEN ((vt0.c0)<(rt0.c4)) WHEN CAST(x'' AS BLOB) THEN '' WHEN rt0.c2 COLLATE RTRIM THEN '' WHEN ((vt0.c0)<(rt0.c0)) THEN ((vt0.c0) ISNULL) END FROM rt0 WHERE ((~ ((((('1898364369')OR(x'')))OR('')))));SELECT DISTINCT CASE MIN(rt0.c1)  WHEN (rt0.c4 IN ('')) THEN (- (rt0.c2)) WHEN ((rt0.c2)>(vt0.c0)) THEN 0.27448579579884524 COLLATE NOCASE WHEN rt0.c4 THEN ((rt0.c1) NOT BETWEEN (x'0995') AND (x'160d')) ELSE ((rt0.c4)||(rt0.c4)) END FROM vt0 RIGHT OUTER JOIN rt0 ON ((LIKELIHOOD(DISTINCT rt0.c0, 0.22107213710766982)) NOT NULL); -- 0ms;
SELECT ALL MAX(HEX(rt0.c1)) FROM vt0 WHERE ((CAST('5o' AS TEXT) IN ()));SELECT DISTINCT CASE WHEN rt0.c2 COLLATE RTRIM THEN 0.33819113500462983 ELSE CAST(rt0.c1 AS NUMERIC) END FROM vt0, rt0 WHERE (CAST(((x'') ISNULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((rt0.c3) ISNULL) FROM rt0 WHERE (CASE WHEN (0Xffffffffb0744381 IN ()) THEN (~ (0.7295256770975793)) END); -- 0ms;
SELECT ALL '-2108642524' FROM rt0 WHERE (CAST(((0.16023057816998254)GLOB(x'746612ea')) AS TEXT)) ORDER BY (((rt0.c2 COLLATE NOCASE, UPPER(vt0.c0), (rt0.c2 IN ())))==((((rt0.c4)>(rt0.c3)), NULL, ((rt0.c2)!=(rt0.c2)))));SELECT DISTINCT (~ (((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))), ((((COUNT(*))OR((NOT (rt0.c4)))))OR(((-998495086) BETWEEN (rt0.c4) AND (x'')))), vt0.c0 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT COUNT(((((((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1))) FROM rt0, vt0 WHERE (SUBSTR(((0.6987908717855432) NOTNULL), ((x'5af0') NOTNULL))) GROUP BY ((rt0.c0) IS FALSE) COLLATE RTRIM HAVING rt0.c1; -- 0ms;
SELECT ALL TOTAL(TOTAL(NULL)) FROM vt0, rt0 WHERE ((+ (((-1243631454) IS FALSE)))) LIMIT 1679679204;SELECT ALL CAST((~ ('0.33819113500462983')) AS REAL), rt0.c4, AVG(((0X3ad3b55f)<(vt0.c0))), AVG((vt0.c0 IN (x'', rt0.c2, rt0.c0))), TOTAL('G柱#UPs툡?r') OVER () FROM rt0 WHERE ((('1671681138') NOT BETWEEN (CAST('347256361' AS NUMERIC)) AND ((('-1302408664')==(-6.78271761E8)))));SELECT ALL CASE WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN CAST(rt0.c3 AS NUMERIC) END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2 IN ()))OR(NULL)))AND(SUM(vt0.c0))), ((((rt0.c2)||(rt0.c4))) NOT NULL), GROUP_CONCAT(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3))) FROM vt0 WHERE (CASE WHEN (NULL IN (NULL)) THEN CASE WHEN 0.19772266040085318 THEN x'518e' WHEN NULL THEN '' WHEN x'' THEN '0.5355613747440631' END END);SELECT (((- (rt0.c2)))>>((rt0.c4 IN ()))) FROM rt0; -- 0ms;
SELECT ALL ((MIN(rt0.c1))*(((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)))) FROM rt0; -- 0ms;
SELECT ((((((((rt0.c0 COLLATE RTRIM)AND(rt0.c0)))AND(((rt0.c0)AND(rt0.c2)))))AND(((vt0.c0)*(rt0.c2)))))OR(((rt0.c3)||(rt0.c4)))), ((((((rt0.c3) NOTNULL))AND(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)))))OR(((rt0.c2)*(rt0.c3)))), '0.4088424116335181' COLLATE RTRIM FROM vt0, rt0 WHERE (CAST(((('1232994520'))==((NULL))) AS TEXT)) UNION ALL SELECT DISTINCT ((rt0.c2)%(rt0.c3)) COLLATE BINARY, (+ (vt0.c0 COLLATE RTRIM)), (((vt0.c0, NULL, rt0.c3)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, (((rt0.c2))>((vt0.c0))), ((rt0.c4)GLOB(rt0.c3)))) AND ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END, TOTAL(rt0.c0)))) FROM vt0, rt0 WHERE (((CASE x'f42c'  WHEN NULL THEN '24{a2[' END) NOT NULL)); -- 0ms;
SELECT DISTINCT -1072203961 FROM rt0 WHERE (((((('W	'))==((0.7153396193702602)))) NOTNULL)); -- 2ms;
SELECT DISTINCT TOTAL(SUBSTR(vt0.c0, rt0.c3)) FROM vt0, rt0 NOT INDEXED WHERE ((((((+ (x'')))OR(((((((((NULL)OR('0.14820359886010925')))OR(x'')))OR(-1.598430758E9)))OR('gPo&24')))))OR(0.6817609356694448 COLLATE NOCASE))) ORDER BY rt0.c0  NULLS LAST, ((((rt0.c2))<=((rt0.c2))) IN ())  NULLS LAST, CHANGES() LIMIT 1751193470; -- 0ms;
SELECT ALL AVG(((rt0.c1)||(rt0.c3))) FILTER(WHERE CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM) OVER () FROM vt0, rt0 WHERE (((CAST(x'cfd6' AS NUMERIC)) BETWEEN (CASE WHEN x'8de6' THEN '954655261' END) AND (((NULL) BETWEEN (0.512241608273736) AND (0.7907555363502716))))) LIMIT 2050622584; -- 0ms;
SELECT DISTINCT TYPEOF(((rt0.c2) IS FALSE)) FROM vt0 WHERE (((((x'')AND(0Xffffffffb0bd89ed))) BETWEEN (CAST(NULL AS NUMERIC)) AND (('.E䛔	1Cui8' IN ())))) ORDER BY (+ (x'8a808d79')) COLLATE BINARY ASC;SELECT NULL, CAST(rt0.c0 AS BLOB) COLLATE NOCASE, (rt0.c1 IN ()) COLLATE BINARY FROM rt0, vt0 WHERE ((NOT (CAST(NULL AS NUMERIC)))); -- 1ms;
SELECT DISTINCT ((((rt0.c3) IS FALSE))/(AVG(rt0.c2))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS TEXT))OR((- (rt0.c4)))))OR((rt0.c0 IN (vt0.c0)))), CASE (~ (rt0.c0))  WHEN ((-1.334557823E9)>(vt0.c0)) THEN rt0.c0 COLLATE NOCASE ELSE COUNT(*) END, CASE WHEN (- (rt0.c4)) THEN IFNULL(2.76325088E8, 0x1) WHEN rt0.c3 COLLATE BINARY THEN CASE WHEN rt0.c4 THEN rt0.c3 END WHEN ((('_')) BETWEEN ((vt0.c0)) AND ((rt0.c3))) THEN ((rt0.c0)IS NOT(rt0.c0)) WHEN ((((((((((((vt0.c0)OR(0X31a47a5b)))AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)) THEN 0x42957187 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) THEN ((rt0.c3) NOTNULL) END FROM vt0, rt0 WHERE (CAST((((0.15735467279375925))!=((0Xffffffffd1d6a593))) AS INTEGER)) ORDER BY (rt0.c1 COLLATE NOCASE IN ()), 0.3624821046938893 ASC; -- 0ms;
SELECT DISTINCT UNICODE(vt0.c0) COLLATE BINARY FROM rt0 WHERE ((((((((x'')OR(x'')))OR(0.8202039377665573))))>((CASE WHEN 0.49805761995194353 THEN NULL WHEN 0Xfffffffffdccc054 THEN 0.40725284279282703 WHEN 'cப' THEN '533453264' ELSE '' END))));SELECT DISTINCT '642848548' FROM vt0 INNER JOIN rt0 ON json_remove(((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)), ((rt0.c4)AND(vt0.c0)));SELECT COUNT(*) FROM vt0 WHERE ((((NULL, '-20062297', x'af7a')) NOT BETWEEN ((CASE 0.44860119956202094  WHEN x'75ed' THEN '-1863365445' END, x'' COLLATE RTRIM, CAST(0xffffffff9cc0261a AS REAL))) AND ((CAST(0.6276769027329255 AS NUMERIC), x'', (x'' IN ()))))) GROUP BY (- ((~ (rt0.c1)))) HAVING CAST(rt0.c4 AS REAL);SELECT DISTINCT CAST(((rt0.c0) ISNULL) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)<=(0.7530012221931194)) AS NUMERIC) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3)>(rt0.c0))))>((CAST(rt0.c1 AS BLOB)))) FROM rt0 ORDER BY ((((rt0.c0)>(rt0.c4))) ISNULL)  NULLS LAST; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c3) ISNULL)) COLLATE BINARY FROM vt0 WHERE (((0xffffffffa075ceb3) NOT BETWEEN (NULL) AND (NULL)) COLLATE RTRIM);SELECT DISTINCT ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))) IN ()) FROM vt0, rt0 WHERE ((+ (json_extract('-192397115', x''))));SELECT DISTINCT CASE 1253696766  WHEN ((rt0.c3)-(rt0.c2)) THEN rt0.c3 ELSE NULL END FROM rt0, vt0 ORDER BY rt0.c0, (((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c0))))==((NULL)))  NULLS LAST; -- 0ms;
SELECT ALL (((- (rt0.c3))) BETWEEN ('B}') AND (((vt0.c0)IS NOT(vt0.c0)))) FROM vt0, rt0 WHERE ('. !vs?'); -- 0ms;
SELECT DISTINCT (- (((rt0.c0)*(rt0.c0)))), MIN(TOTAL(((((((((rt0.c3)AND(-437716756)))AND(NULL)))OR(rt0.c4)))AND(rt0.c0)))), CASE LAST_INSERT_ROWID()  WHEN (((vt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c4)) BETWEEN ((vt0.c0, rt0.c4, vt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c1, vt0.c0, rt0.c4, rt0.c1, 0.440062152759672))) THEN ((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END FROM vt0 WHERE ((((('-1334557823') NOT BETWEEN (-147746971) AND ('ꕈq')))=((NOT (NULL))))) LIMIT 696658938;SELECT DISTINCT CASE WHEN (((rt0.c0))<=((NULL))) THEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN GROUP_CONCAT(vt0.c0) WHEN ((vt0.c0)<>(rt0.c1)) THEN (~ (rt0.c4)) ELSE MAX(vt0.c0) END FROM rt0 WHERE (TRIM(DISTINCT ((x'c1c6')OR(x'e929'))));SELECT DISTINCT ((MAX(rt0.c4))GLOB(((rt0.c4)/(vt0.c0)))) FROM vt0, rt0 WHERE (((0.5515466630593678)%(x'' COLLATE BINARY))); -- 0ms;
SELECT AVG(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN 1399908048 THEN rt0.c1 END) FROM rt0, vt0 WHERE (((('v붧|A\5N㩅5')) NOT BETWEEN ((((0xffffffff8250ab24)|(x'')))) AND ((((((NULL)OR(NULL)))AND(NULL)))))); -- 0ms;
SELECT ALL (NOT (((((rt0.c4)AND(rt0.c3)))AND(rt0.c0)))) FROM vt0 WHERE (((x'') IS FALSE));SELECT ALL (+ (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) FROM vt0, rt0 WHERE (LOWER(DISTINCT NULL) COLLATE BINARY); -- 0ms;
SELECT TRIM(((rt0.c4) NOT BETWEEN ('') AND (rt0.c2))) FROM rt0 WHERE ((~ (((((((((((((NULL)OR('')))OR(0.330562661720495)))AND(1.430219947E9)))OR(0Xffffffffa052dc9a)))OR('')))AND(0.8349678157076545))))); -- 0ms;
SELECT DISTINCT (+ (((vt0.c0) IS TRUE))) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ())) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (x'')); -- 0ms;
SELECT DISTINCT (((('婉B')AND(((rt0.c2)IS NOT(rt0.c4)))))OR(((rt0.c4) NOTNULL))) FROM vt0, rt0 WHERE (CAST((NOT (NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (+ (LIKE(rt0.c3, 0.39142793826265687, '^'))) FROM vt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY ((((rt0.c0)-(rt0.c0)))OR((- (rt0.c4)))) DESC  NULLS FIRST;SELECT DISTINCT (+ (rt0.c2)) COLLATE BINARY FROM rt0 WHERE ((- (((NULL)/('1997068815'))))) ORDER BY CAST(COALESCE(rt0.c3, rt0.c1) AS REAL)  NULLS LAST; -- 0ms;
SELECT ALL (NOT (((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))), TRIM(DISTINCT ((rt0.c0)IS(vt0.c0))), ((((rt0.c0)!=(rt0.c4))) NOT BETWEEN ('920022992') AND (x'')) FROM vt0;SELECT DISTINCT LAG((((vt0.c0 IN ()))*((vt0.c0 IN (vt0.c0)))), ((((vt0.c0, 0.8175828357477166, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) IN (CAST(vt0.c0 AS REAL), ((vt0.c0) IS FALSE))), (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) OVER ( ORDER BY ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, (((((vt0.c0)<=(rt0.c4))))>=((((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)))))  NULLS LAST) FROM vt0 ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) COLLATE RTRIM DESC  NULLS FIRST;SELECT DISTINCT ((((rt0.c1))<((rt0.c0))) IN ((+ (rt0.c0)), COALESCE(rt0.c4, rt0.c1))) FROM vt0 WHERE ((NOT (ABS(NULL)))) LIMIT 981417113 OFFSET 127664182;SELECT ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 END)!=(rt0.c0)) FROM vt0 WHERE (CAST((+ ('oL')) AS NUMERIC)) LIMIT 1618220874;SELECT DISTINCT CAST(((rt0.c3)IS NOT(rt0.c1)) AS INTEGER), x'abc11cf3', COUNT(0.6531343154508591) OVER () FROM rt0, vt0 ORDER BY ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c1)))))OR(vt0.c0 COLLATE RTRIM)))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))))OR((NOT (rt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (- (((rt0.c4)>>(rt0.c4)))) FROM vt0, rt0; -- 0ms;
SELECT ALL ((SQLITE_COMPILEOPTION_GET(rt0.c3)) ISNULL) FROM rt0, vt0; -- 0ms;
SELECT ALL ((('', rt0.c1, rt0.c3)) NOT BETWEEN (((((0x6fd6e983))<=((rt0.c0))), ((vt0.c0)>>('B')), ((rt0.c2)=(vt0.c0)))) AND ((((rt0.c3)+(rt0.c4)), CAST(rt0.c4 AS NUMERIC), ((vt0.c0)&(rt0.c0))))), ((TYPEOF(DISTINCT rt0.c1)) NOT NULL), ((((vt0.c0) IS FALSE)) BETWEEN ((rt0.c4 IN ())) AND (((rt0.c0)GLOB(rt0.c4)))) FROM rt0 WHERE ((x'ccae' COLLATE BINARY IN ())) ORDER BY (CAST(rt0.c4 AS NUMERIC) IN ()) ASC  NULLS FIRST LIMIT -1745199853;SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((((((x'2175')OR(rt0.c1)))AND(rt0.c2)))) AND ((SUM(rt0.c3)))) FROM vt0 WHERE (CASE '-1065251512'  WHEN TRIM(x'', -1463258992) THEN CAST(NULL AS BLOB) WHEN ((NULL) BETWEEN (x'b808') AND (NULL)) THEN (NOT (x'')) WHEN ((NULL) IS FALSE) THEN (('')GLOB(-6.78271761E8)) ELSE ((x'8350')!=('')) END);SELECT ((((vt0.c0)&(0xffffffff9021e5e4))) NOT BETWEEN (QUOTE(vt0.c0)) AND (((rt0.c1)&(rt0.c4)))) FROM vt0, rt0 WHERE ((((('bR-')OR('-1931967356')))OR('')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT '1190192344' FROM vt0; -- 0ms;
SELECT UNICODE(2.076179946E9) FROM vt0, rt0 WHERE ((((UPPER(NULL)))<>(((('3餭Pm(h')AND(0.6386743887571201)))))); -- 0ms;
SELECT DISTINCT (CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END IN ()), DENSE_RANK() OVER (), ((((rt0.c2)<>(rt0.c0))) IS FALSE) FROM vt0;SELECT GROUP_CONCAT(CASE WHEN 0.003333618719606135 THEN rt0.c0 ELSE rt0.c4 END) FROM vt0 GROUP BY 525984583 HAVING COUNT((rt0.c0 IN ()));SELECT DISTINCT ((((CASE x'a2e1'  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END)AND(QUOTE(rt0.c1))))OR(rt0.c4 COLLATE BINARY)), (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))<((rt0.c4 IN ()))), ((CAST(vt0.c0 AS BLOB))<=(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) FROM rt0;SELECT DISTINCT SUM(x'') COLLATE BINARY, COUNT(*) COLLATE NOCASE, x'', (((+ (rt0.c3))) NOTNULL), CAST((- ('-182026864')) AS BLOB) FROM rt0; -- 1ms;
SELECT DISTINCT ((((((((CAST(rt0.c1 AS INTEGER))OR(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)))AND((vt0.c0 IN ()))))OR(NULL)))OR((((rt0.c0))==((rt0.c1))))) FROM rt0 WHERE (TYPEOF(((0.6049492343497395)IS NOT(-511562547)))); -- 0ms;
SELECT DISTINCT rt0.c4 COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT ALL ((MAX(rt0.c2, rt0.c0))-(rt0.c4 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT ((((rt0.c1)||(rt0.c4))) NOT BETWEEN (rt0.c4) AND ((~ (rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT AVG((((vt0.c0, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c3, x'b722')))) OVER (), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END COLLATE BINARY, ((+ (rt0.c4)) IN ()) FROM rt0, vt0 WHERE (json_array(UNLIKELY(x''), ((x'')!=(-171642094)))) GROUP BY ((rt0.c2)LIKE(vt0.c0)) COLLATE NOCASE, (((((NOT (rt0.c3)))AND((~ (rt0.c3)))))OR(((rt0.c3)LIKE(rt0.c2)))), rt0.c0 HAVING CASE WHEN ((x'5b0a')>(rt0.c1)) THEN (rt0.c0 IN ()) ELSE ((rt0.c4)IS(rt0.c1)) END;SELECT DISTINCT NULLIF((rt0.c3 IN ()), (NOT (rt0.c1))), COUNT(((vt0.c0) NOTNULL)), TOTAL(CASE WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c4 END) FROM vt0, rt0 ORDER BY CASE CAST(rt0.c4 AS INTEGER)  WHEN ((rt0.c1)AND(rt0.c0)) THEN 0.03023317624547439 ELSE ((rt0.c2)GLOB(rt0.c2)) END; -- 0ms;
SELECT DISTINCT 0.5715541111673518, NULL, ((CAST(rt0.c2 AS REAL)) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c3)*(rt0.c0)))) FROM vt0 WHERE (CAST(NULL COLLATE NOCASE AS NUMERIC));SELECT DISTINCT ((((ABS(rt0.c3))OR(rt0.c3)))OR((((rt0.c1))<=((rt0.c4))))) FROM vt0 WHERE (UPPER(x''));SELECT ((0.24300366145788876) NOTNULL), ((LOWER(rt0.c0)) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND ((NOT (3.2365393E8)))), ((rt0.c1)==((~ (rt0.c3)))), 0.6528890194301258, CAST(vt0.c0 AS INTEGER) COLLATE NOCASE FROM rt0, vt0 GROUP BY (((rt0.c1 IN ()))%((((rt0.c0))>=((0.7133942488535641))))); -- 0ms;
SELECT CAST(SQLITE_COMPILEOPTION_GET(rt0.c2) AS BLOB) FROM vt0 WHERE ((((~ (NULL)))<>(CAST(0.4014631766155069 AS INTEGER))));SELECT ALL CASE WHEN UPPER(DISTINCT rt0.c4) THEN ((rt0.c3) NOT NULL) END, ((~ (rt0.c3)) IN (CAST(vt0.c0 AS NUMERIC), ((rt0.c2)||(rt0.c1)))), rt0.c3 FROM vt0;SELECT DISTINCT (+ (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END)), CASE WHEN ((vt0.c0)GLOB(rt0.c4)) THEN (- (rt0.c0)) WHEN ((((((((0.502663837114374)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)) THEN CASE WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END WHEN ((rt0.c3)&(rt0.c4)) THEN ((((x'')AND(rt0.c3)))AND(rt0.c1)) END, COUNT(vt0.c0) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))|(((rt0.c0)IS(rt0.c3)))) FROM vt0;SELECT DISTINCT (((((rt0.c2))<((rt0.c1))))<(vt0.c0 COLLATE RTRIM)) FROM vt0 GROUP BY ((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))AND(vt0.c0)))AND(rt0.c1)))))AND(((((rt0.c2)OR(vt0.c0)))OR(rt0.c3)))))OR(rt0.c1)))OR((~ (rt0.c2)))), (- (rt0.c3)) COLLATE NOCASE, ((((((rt0.c4)GLOB(rt0.c4)))AND(((rt0.c1) NOT NULL))))OR(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)))) HAVING SUM((rt0.c1 IN ()) COLLATE RTRIM);SELECT DISTINCT ((1829910574) IS TRUE) FROM rt0; -- 0ms;
SELECT (((((rt0.c1) ISNULL), ((rt0.c3)==(rt0.c2)), MAX(rt0.c0), ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)), rt0.c0))<((((rt0.c3)%(rt0.c1)), ((rt0.c2) NOTNULL), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c1)OR(rt0.c0)), (- (rt0.c3))))) FROM vt0, rt0 WHERE (((CASE '788345244'  WHEN 0X7f981d8f THEN 0.232506425895722 ELSE x'' END) ISNULL)); -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE vt0.c0 END) ISNULL), SUM(COUNT(*)), CAST(((rt0.c2)||(rt0.c1)) AS REAL) FROM rt0 WHERE (LOWER(NULL) COLLATE BINARY);SELECT TOTAL((('-1604673079') BETWEEN (rt0.c4) AND (rt0.c0))) OVER ( ORDER BY 112185305 ASC  NULLS FIRST) FROM vt0, rt0 GROUP BY (~ (x'')), (((rt0.c0 IN ())) IS TRUE), COALESCE(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c0)), CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END, (NOT (rt0.c0)), 0x2bb804da COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC), ((vt0.c0)==(rt0.c3))) HAVING CASE WHEN TOTAL(rt0.c3) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN ((NULL) IS TRUE) WHEN ((('bR-')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN (rt0.c2 IN ()) END LIMIT -1607182378; -- 0ms;
SELECT DISTINCT ABS(CAST(rt0.c3 AS TEXT)), (((~ (rt0.c4)))<<(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))), ((((rt0.c4)-(rt0.c2)))LIKE(((rt0.c3)>(rt0.c0)))), (((~ (rt0.c3))) BETWEEN (x'9d67') AND (CASE WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END)), TOTAL(((rt0.c0)+(rt0.c2))) FROM vt0, rt0 WHERE ((CASE WHEN NULL THEN 0.41206888581273515 WHEN 0.06612993475472073 THEN 0.9503313481744139 WHEN NULL THEN x'' ELSE 0.6642568346684161 END IN ())); -- 0ms;
SELECT (~ (((vt0.c0) IS TRUE))) FROM rt0, vt0 WHERE (CASE CASE WHEN 0.13641141308035276 THEN 0.16637977645760216 END  WHEN ((NULL)-(x'')) THEN (('') BETWEEN (0.7503021654824737) AND (0.6895904758972998)) END); -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)), (((rt0.c3))==((vt0.c0))), rt0.c1)) AND (((rt0.c2 IN ()), CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 ELSE 0x7de7bde6 END, ((x'')&(rt0.c0))))) FROM rt0 WHERE ((('-678271761') BETWEEN (' SI{lWa3') AND (x'')) COLLATE NOCASE) GROUP BY rt0.c2, ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0))) NOTNULL), ((rt0.c3)<<((rt0.c4 IN (rt0.c0))));SELECT ALL ((((((((rt0.c3)AND('I഑2<s<n[壞')))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c4)) COLLATE RTRIM, 0.06140957119339019, (NOT (((vt0.c0)LIKE(rt0.c4)))) FROM rt0, vt0 WHERE (NULLIF(CASE WHEN '' THEN 1379932398 WHEN '-2108642524' THEN 0.34069147809297307 WHEN '304124372' THEN '㠸]*~?l5' WHEN 18554906 THEN NULL WHEN '' THEN x'8677' ELSE '-1598430758' END, ((NULL)LIKE(x'4b10')))); -- 0ms;
SELECT DISTINCT (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))GLOB(rt0.c3 COLLATE RTRIM)) FROM rt0 WHERE (CASE WHEN x'' THEN json_quote(-1.745639402E9) END); -- 0ms;
SELECT rt0.c4 FROM rt0 WHERE ((((0.9055171166247179 IN (NULL))) NOT BETWEEN ((+ ('-1876826652'))) AND (''))); -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)||(CAST(rt0.c4 AS REAL))) FROM vt0, rt0 WHERE (0.49685342081214956); -- 0ms;
SELECT ALL (((rt0.c2, vt0.c0, vt0.c0)) BETWEEN ((LAST_INSERT_ROWID(), ((NULL) ISNULL), (- (8.32862811E8)))) AND ((rt0.c3 COLLATE BINARY, (('22582734') NOTNULL), ((rt0.c2) IS TRUE)))), (((((+ (rt0.c4)))AND((rt0.c0 IN (rt0.c0)))))OR((~ (rt0.c4)))), (((+ (rt0.c3)))<>(rt0.c4 COLLATE BINARY)) FROM vt0 WHERE (((NULL)==(0Xffffffffbf5912fc)) COLLATE BINARY);SELECT DISTINCT '. ' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT x'', ((((((rt0.c1)>=(rt0.c0)))OR(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN '4' THEN rt0.c4 END)))AND('-1033121658')), CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0)>>(rt0.c3)) END FROM rt0, vt0 WHERE ((((-1.284487123E9)) NOT BETWEEN (((436506246 IN ()))) AND (((('0.5000456415375661') NOTNULL))))) ORDER BY (- (rt0.c4)); -- 0ms;
SELECT DISTINCT CAST(rt0.c4 AS NUMERIC) FROM rt0, vt0; -- 4ms;
SELECT SUM(((((NULL)OR(rt0.c4)))OR(rt0.c3))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt0 WHERE ('-1733031035'); -- 1ms;
SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)) FROM vt0, rt0 WHERE (((((((x'') BETWEEN (-656428724) AND (NULL)))OR(('748399534' IN ()))))AND(((((NULL)OR(x'')))AND('354737871'))))) ORDER BY ((((rt0.c1)+(rt0.c0))) NOT BETWEEN (0.008499091733339514 COLLATE BINARY) AND (((rt0.c3)=(rt0.c3)))) DESC; -- 0ms;
SELECT COUNT(*) FROM vt0, rt0; -- 0ms;
SELECT (((rt0.c4)) BETWEEN ((vt0.c0)) AND ((MIN(rt0.c2)))) FROM vt0, rt0 ORDER BY CAST(((rt0.c0)IS(rt0.c4)) AS NUMERIC); -- 0ms;
SELECT ALL x'' FROM rt0 WHERE (x'') GROUP BY vt0.c0, (((rt0.c2 COLLATE BINARY, CAST(rt0.c4 AS INTEGER), ((rt0.c2)IS NOT(rt0.c3))))==(((((rt0.c3))<=((rt0.c0))), rt0.c0, (~ (rt0.c4))))), (((vt0.c0)) BETWEEN ((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))) AND (((NOT (rt0.c1))))) HAVING ((vt0.c0 IN (rt0.c4)) IN ((vt0.c0 IN (rt0.c1, rt0.c3)))) LIMIT 1430219947 OFFSET -172643238;SELECT DISTINCT COUNT(*) OVER ( ORDER BY TRIM(DISTINCT CASE rt0.c4  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c4 END) ASC  NULLS LAST, ((vt0.c0 IN ()) IN ((rt0.c0 IN ()))), CAST(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) AS REAL)) FROM rt0, vt0 GROUP BY ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE); -- 1ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT ALL (('-123803693') IS TRUE), 614966438, (- (CAST(vt0.c0 AS INTEGER))) FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0)))<(SQLITE_VERSION())), COUNT(((rt0.c2) IS FALSE)) OVER (), COUNT(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE CASE rt0.c4  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 END  WHEN CAST(rt0.c1 AS TEXT) THEN NULL END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT 'w5g,V9QC', ((rt0.c2 COLLATE BINARY)||((((rt0.c4))<(('-153144674'))))), ((vt0.c0)=(SQLITE_COMPILEOPTION_GET(rt0.c3))) FROM vt0, rt0 WHERE (((CASE WHEN '-511687035' THEN 0.10607147467619826 WHEN NULL THEN -1077266217 WHEN 7.1345024E8 THEN '' ELSE 0.8628746865118865 END)IS NOT(LIKELY('1315727322')))); -- 0ms;
SELECT NULL, ((((vt0.c0)-(rt0.c3))) IS FALSE), CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) THEN CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 END END FROM rt0 GROUP BY ((TRIM(DISTINCT rt0.c4, rt0.c2)) BETWEEN (rt0.c0) AND ((~ (vt0.c0)))) HAVING ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c4)))GLOB((rt0.c3 IN ())));SELECT ALL CASE ((rt0.c3) NOT NULL)  WHEN (~ (rt0.c4)) THEN MIN('', 0.6528893690702416, rt0.c2, rt0.c0) ELSE rt0.c0 END, CAST(rt0.c2 COLLATE BINARY AS REAL), (CAST(rt0.c2 AS INTEGER) IN ()) FROM rt0 WHERE (((((0.25766995051074026)<=(0X4127df92))) BETWEEN (CASE WHEN 0x2fda5649 THEN -417828962 WHEN '' THEN 0.007911818928907688 WHEN 0.18773430565824134 THEN '1705371832' WHEN 0.24300366145788876 THEN NULL WHEN NULL THEN 0.4517298263364363 ELSE x'' END) AND ((((('')AND(x'')))AND(NULL))))) GROUP BY CASE WHEN 0.24950602369759822 THEN ((-760628936)IS NOT(rt0.c2)) ELSE rt0.c0 END, (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN 0.7787826575466489 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END))<((((((NULL)AND(rt0.c0)))AND(rt0.c0))))), CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER), (((rt0.c0)) BETWEEN ((((NULL) ISNULL))) AND ((x''))), TIME(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c0 IN ()), ((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c2))) ORDER BY ((CASE 0.18604671910009896  WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 END) ISNULL) ASC  NULLS LAST, (~ (((rt0.c1)+(rt0.c1)))) ASC  NULLS LAST;SELECT DISTINCT GROUP_CONCAT(((rt0.c1)<<(rt0.c2))) FROM rt0, vt0 LIMIT 9223372036854775807 OFFSET 1224604390; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c0)OR(rt0.c3)))AND(rt0.c3)) AS BLOB) FROM vt0 WHERE ((((~ (x'f57e'))) NOTNULL));SELECT ((((CAST(rt0.c3 AS NUMERIC))AND(((rt0.c0)>(rt0.c3)))))AND(CASE rt0.c3  WHEN rt0.c1 THEN '⁧g' ELSE rt0.c3 END)) FROM rt0, vt0 WHERE (CASE CAST(0.7917958718059571 AS INTEGER)  WHEN ((0X799df61b)>>(x'bb6c')) THEN (0.19045700613061878 IN ()) WHEN ((NULL) NOT BETWEEN (9.81417113E8) AND (x'')) THEN LENGTH(NULL) WHEN (NOT ('948523829')) THEN GLOB(x'', 0.8537444345301621) END); -- 0ms;
SELECT ALL MAX(((rt0.c1) IS FALSE)) FROM vt0 WHERE (((((0.7285891332544161) NOT BETWEEN (1720735357) AND (0.3865519134810278))) IS TRUE));SELECT DISTINCT ((((rt0.c3) BETWEEN (rt0.c3) AND ('-1745639402')))==(((rt0.c2)/(vt0.c0)))), CASE WHEN rt0.c0 THEN 6.96658938E8 ELSE rt0.c3 END COLLATE RTRIM, ((CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 ELSE '0.6275001703539089' END) BETWEEN (((vt0.c0)&(rt0.c3))) AND ((~ (rt0.c1)))) FROM rt0 WHERE ((((('981417113')>=(x''))) IS FALSE)) GROUP BY SQLITE_VERSION() HAVING ((UNLIKELY(rt0.c3))IS(CAST(rt0.c3 AS INTEGER))) LIMIT -1524110118;SELECT DISTINCT GROUP_CONCAT(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) FROM rt0 WHERE ((((x'')) NOT BETWEEN (((((NULL, 0Xffffffffbb3b783e, x'')) BETWEEN ((0.03315625351282492, x'', x'')) AND (('-971097263', 0.13686683689540835, NULL))))) AND ((((NULL)=(NULL)))))); -- 1ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN (rt0.c1, rt0.c4)) COLLATE RTRIM FROM rt0, vt0 WHERE (CASE WHEN ((((NULL)AND(1686397704)))OR('847944490')) THEN ((NULL) ISNULL) WHEN CASE x''  WHEN NULL THEN NULL ELSE '-923345817' END THEN ((NULL) BETWEEN (0.2030545326787544) AND (0Xffffffff9b9ee0da)) WHEN CASE WHEN x'6ec5' THEN 'I' END THEN ('1O ' IN ()) ELSE json_insert(0.8002922922216769, x'', NULL) END); -- 0ms;
SELECT DISTINCT CAST(((((NULL)OR(vt0.c0)))OR(rt0.c3)) AS BLOB), ((((rt0.c0)<<(rt0.c1)))>(CAST(rt0.c2 AS INTEGER))), ((((rt0.c1) IS TRUE)) NOTNULL) FROM rt0 WHERE (((x'')AND(((('^T'))<=((0.3779382420942303))))));SELECT DISTINCT ((((rt0.c2) NOTNULL))+(CASE vt0.c0  WHEN rt0.c3 THEN 0Xfffffffff3c052a4 END)) FROM rt0 WHERE (((((((x'')AND(0.8167458024315534)))AND(x'')))IS(((3.04124372E8)%(x'f3f3')))));SELECT DISTINCT ((LTRIM(rt0.c0, rt0.c0)) NOTNULL) FROM rt0 LIMIT 1554940757; -- 0ms;
SELECT ALL rt0.c2 FROM rt0 WHERE (('319285151' COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((rt0.c4)>(rt0.c4))), COUNT(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP), ((((rt0.c2, rt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c3, rt0.c2))) IN (((rt0.c4)LIKE(rt0.c1)))) FROM rt0, vt0 WHERE (((+ ('')) IN ())); -- 1ms;
SELECT DISTINCT (CASE rt0.c3  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ((~ ('-106768721')))) FROM vt0 WHERE ((((~ ('696658938')))IS NOT((('1093132178')AND('懐m'))))) ORDER BY CAST(json_object(vt0.c0, '\rw荕,‚T?r') AS REAL)  NULLS LAST;SELECT DISTINCT (((rt0.c0))<>((rt0.c2))) COLLATE BINARY, TYPEOF(DISTINCT HEX(DISTINCT vt0.c0)), CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS TEXT) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT LIKELY(x'') FROM rt0, vt0 LIMIT 1399908048; -- 0ms;
SELECT DISTINCT NTH_VALUE(((INSTR(rt0.c0, rt0.c2)) BETWEEN (((rt0.c0) ISNULL)) AND ((NOT (rt0.c2)))), (((rt0.c4 IN ()))IS NOT(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) OVER () FROM rt0 WHERE (((0Xffffffffdf0d5fa9 COLLATE RTRIM) IS TRUE)) ORDER BY ((rt0.c2 COLLATE BINARY)+(x''))  NULLS LAST;SELECT ALL CASE ((vt0.c0)>(rt0.c2))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN UPPER(vt0.c0) ELSE (rt0.c1 IN (rt0.c0)) END FROM rt0 WHERE (LOWER(DISTINCT NULL) COLLATE RTRIM);SELECT DISTINCT vt0.c0 FROM rt0 WHERE (CASE CASE x'858a'  WHEN NULL THEN x'' ELSE '1214483339' END  WHEN (- ('-2078717113')) THEN NULL COLLATE NOCASE WHEN (('-570470533') BETWEEN ('0.2210858522714162') AND (0.23309288273360385)) THEN CAST(0X32340708 AS TEXT) WHEN (((NULL))=((NULL))) THEN CASE WHEN 0X61b89bdb THEN '-205499740' END END);SELECT ALL PERCENT_RANK() OVER ( RANGE ((((rt0.c0)/(rt0.c2)))>=(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)) PRECEDING EXCLUDE CURRENT ROW), ((vt0.c0) BETWEEN (json_array_length(rt0.c4, vt0.c0)) AND (('f1i!Zdal♔' IN ()))), (((rt0.c4)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c0))))) FROM rt0, vt0 WHERE ((NOT (((0.38818976499008306) ISNULL))));SELECT DISTINCT (('1975180930') IS TRUE), rt0.c3, CASE WHEN (~ (rt0.c1)) THEN ((NULL)*(rt0.c1)) ELSE rt0.c2 END FROM rt0 WHERE ((~ ((((((((('B~1g婟')OR(NULL)))AND('i')))OR('cப')))AND(NULL))))); -- 0ms;
SELECT DISTINCT (((rt0.c4 IN (rt0.c0)))&((+ (0X54328036)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((NULLIF(rt0.c0, rt0.c3))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))))), FIRST_VALUE(CASE WHEN CAST(rt0.c2 AS REAL) THEN rt0.c4 END) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP), (((((((((rt0.c4 IN ()))AND(SQLITE_VERSION())))OR(((vt0.c0) NOTNULL))))AND(((rt0.c4) IS FALSE))))AND((rt0.c3 IN (rt0.c0)))) FROM rt0;SELECT CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC), CASE WHEN rt0.c2 COLLATE BINARY THEN CASE 0.532380362714316  WHEN rt0.c0 THEN rt0.c1 END WHEN CAST(rt0.c1 AS BLOB) THEN COUNT(*) WHEN (rt0.c0 IN ()) THEN ((rt0.c4)LIKE(vt0.c0)) END, (((rt0.c1 IN ())) IS TRUE) FROM rt0;SELECT vt0.c0 FROM rt0 WHERE (json_array_length(CAST(1558007414 AS NUMERIC))) GROUP BY (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))>((JULIANDAY(rt0.c0, rt0.c2, rt0.c3)))) HAVING rt0.c1;SELECT TOTAL(((rt0.c2) NOT NULL)), rt0.c1, rt0.c0 FROM rt0 LIMIT 1426678105; -- 0ms;
SELECT TRIM(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE 0Xffffffffe15a1d15 END) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt0 WHERE (((CAST(NULL AS TEXT))!=(((0.7042534667424255)-(0.1395288870149014))))) GROUP BY PRINTF(CASE WHEN rt0.c3 THEN rt0.c1 END, NULL, LIKELIHOOD(rt0.c1, 0.4076391707324991)), ((rt0.c4 COLLATE BINARY)<>(x'')), ((((rt0.c3) NOTNULL)) ISNULL); -- 0ms;
SELECT ALL rt0.c4, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt0.c0))) IS TRUE), NULL COLLATE RTRIM FROM vt0 WHERE ((NOT (((x'8e4c') NOT BETWEEN (x'55aa') AND (0.6367301909025437)))));SELECT CASE WHEN rt0.c4 THEN rt0.c0 ELSE ((((rt0.c2)AND('0.5646878203893801')))AND(rt0.c3)) END FROM rt0 WHERE (CAST((((('V')OR(NULL)))AND(0.9207248169739694)) AS REAL)); -- 0ms;
SELECT DISTINCT (+ (((rt0.c1)&(rt0.c3)))) FROM rt0 ORDER BY CAST(rt0.c0 AS TEXT) COLLATE BINARY DESC  NULLS FIRST, ABS((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ ((vt0.c0 IN ()))) FROM vt0, rt0 WHERE (((CASE -76022109  WHEN 0.1650091142164717 THEN NULL END)&((0.9268259556179389 IN ())))) GROUP BY CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) AS NUMERIC) HAVING CAST(0Xffffffff8ba94157 AS TEXT) ORDER BY IFNULL(((rt0.c1)LIKE(rt0.c0)), x'72e2') DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( PARTITION BY (((rt0.c4)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c4 END))), '-1876826652' COLLATE RTRIM COLLATE NOCASE, ((((vt0.c0) NOT NULL))-(CAST(rt0.c1 AS REAL))), ((((vt0.c0) NOTNULL)) BETWEEN (CASE vt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END) AND (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END))) FROM vt0 WHERE (NULL);SELECT ALL CASE rt0.c1  WHEN -707803309 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN 'wkD仆' END COLLATE RTRIM FROM rt0 WHERE (((((NULL)OR((('627372836')LIKE(-157469511)))))AND(((NULL)||(NULL))))); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT (((rt0.c0, rt0.c3, vt0.c0))<=((rt0.c2, rt0.c0, vt0.c0)))), COUNT(*) OVER (), json_valid(((rt0.c1)<=(0.5801494999065894))), CASE WHEN COUNT(rt0.c0) THEN rt0.c4 WHEN (- (rt0.c2)) THEN (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN (((rt0.c3, rt0.c2, rt0.c2))==((rt0.c3, rt0.c4, rt0.c1))) THEN CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END ELSE rt0.c0 COLLATE BINARY END, ((CAST('1929314360' AS TEXT)) NOT BETWEEN (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2))) AND (rt0.c2 COLLATE RTRIM)) FROM vt0 WHERE (((0.7936320050032641 IN ()) IN ())) LIMIT -1931967356;SELECT DISTINCT vt0.c0 FROM rt0, vt0 GROUP BY rt0.c4; -- 0ms;
SELECT DISTINCT AVG((+ (vt0.c0))) OVER () FROM vt0 WHERE ((((((1.7976931348623157E308)AND(NULL)))AND(0.2233925161561071)) IN ())); -- 0ms;
SELECT TOTAL(json_quote(rt0.c4)) FROM vt0, rt0; -- 0ms;
SELECT ALL (- (978732257 COLLATE BINARY)), ((((rt0.c2)IS(rt0.c1)))>>(CAST(vt0.c0 AS BLOB))), CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c4)<<(rt0.c1)) WHEN ((((((((rt0.c3)AND(0.16976643440629302)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)) THEN CAST(NULL AS INTEGER) WHEN UNLIKELY(DISTINCT rt0.c4) THEN vt0.c0 COLLATE NOCASE END FROM rt0;SELECT ALL ((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c4)))OR('1399908048')))AND(rt0.c2))) NOT BETWEEN ((rt0.c3 IN (rt0.c1))) AND (rt0.c3)), RANK() OVER (), (~ (((((rt0.c3)AND(rt0.c4)))OR(rt0.c4)))) FROM vt0, rt0 WHERE ((((+ (NULL)))IS('614966438' COLLATE BINARY))) ORDER BY CAST(((rt0.c2)IS(rt0.c0)) AS INTEGER) DESC; -- 0ms;
SELECT ALL MIN(((rt0.c0) NOTNULL)) FROM rt0 WHERE ((((0.9245656285182122))<((CAST(0.6565568225284335 AS TEXT))))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)GLOB(rt0.c3))  WHEN ((rt0.c0) IS TRUE) THEN (vt0.c0 IN (vt0.c0)) ELSE 441720139 END, (((rt0.c0))>((((rt0.c4) IS TRUE)))), ((((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) FROM vt0 GROUP BY '';SELECT DISTINCT GROUP_CONCAT(vt0.c0) FROM rt0;SELECT DISTINCT ((((rt0.c0) NOT BETWEEN ('-1615205465') AND (vt0.c0))) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END) AND (IFNULL(DISTINCT vt0.c0, rt0.c4))), (((('0') NOT BETWEEN (rt0.c4) AND (0X134a912a)))>=((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))), (((vt0.c0 IN ())) NOTNULL) FROM rt0 LIMIT 1887154211;SELECT ALL rt0.c3, ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))LIKE(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END)), (((rt0.c3)) NOT BETWEEN ((IFNULL(rt0.c0, rt0.c2))) AND ((((rt0.c4)IS(rt0.c3))))) FROM vt0, rt0 WHERE ((((('748399534')>=(0.6710014184300979)))AND((('0.974069631982615') ISNULL)))); -- 0ms;
SELECT DISTINCT AVG(((rt0.c2)*(rt0.c4))) FROM rt0 WHERE (((((((NULL) NOT BETWEEN (0Xffffffffdf0d5fa9) AND (0.9634041985134041)))OR(CAST(-123803693 AS TEXT))))OR(CASE WHEN NULL THEN '䛉l1]-槞ⅈl' ELSE 0.13798711534265795 END))); -- 0ms;
SELECT DISTINCT RANK() OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW) FROM vt0; -- 0ms;
SELECT ALL (((((rt0.c2, vt0.c0, rt0.c1))>=((rt0.c0, rt0.c3, rt0.c0))))&(vt0.c0 COLLATE NOCASE)) FROM vt0;SELECT DISTINCT TRIM(DISTINCT CAST(vt0.c0 AS INTEGER)), ((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND ((rt0.c1 IN ()))), vt0.c0 FROM rt0 GROUP BY CAST((((vt0.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2))) AS NUMERIC), CAST(((rt0.c4) IS FALSE) AS INTEGER), ((((rt0.c0) NOT NULL)) ISNULL);SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('2113427235'))) COLLATE RTRIM FROM vt0 ORDER BY DATE((rt0.c4 IN ()), (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))), ((((rt0.c3)AND(rt0.c4)))AND(NULL)), vt0.c0, ((((rt0.c4)AND(rt0.c1)))AND(rt0.c0))) DESC  NULLS LAST, (((rt0.c4) BETWEEN (1.7976931348623157E308) AND (vt0.c0)) IN ()) DESC  NULLS FIRST;SELECT DISTINCT ((((((((CAST(x'' AS BLOB))OR(LIKE(rt0.c0, vt0.c0))))OR(rt0.c0 COLLATE BINARY)))OR((vt0.c0 IN ()))))OR(ABS(rt0.c1))) FROM vt0 WHERE ((((CASE 0Xfffffffff280e218  WHEN 1306546108 THEN x'3af8' WHEN 0xffffffffe9640879 THEN -1.162249819E9 WHEN 50434399 THEN x'' END))>=((CASE WHEN x'' THEN NULL WHEN NULL THEN 0.9234124358595782 WHEN 0.6996793609907087 THEN 0.10110180402061941 ELSE '1554940757' END)))) GROUP BY (((rt0.c0)) BETWEEN ((CASE x'04b97e50'  WHEN rt0.c0 THEN rt0.c0 END)) AND ((rt0.c4))), ((((rt0.c2) IS FALSE))<<(COALESCE(DISTINCT rt0.c4, rt0.c0))), (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)) IN ());SELECT ((((((((((NULL)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c4))) NOTNULL), (((((((((((((('1486009114')AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c4)))OR(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), (rt0.c3 COLLATE BINARY IN ((rt0.c3 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) FROM vt0, rt0 WHERE ((((((NULL, NULL, NULL)) BETWEEN (('-1478802178', '.\', x'c555')) AND ((NULL, 'kHjL(1!', 930947400)))) ISNULL)); -- 0ms;
SELECT DISTINCT rt0.c1 COLLATE NOCASE COLLATE RTRIM FROM vt0;SELECT ALL 0xffffffff906d4453, (+ ((((rt0.c4, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c1, '-205499740'))))), ((0.2210858522714162) BETWEEN (((rt0.c2) IS TRUE)) AND (x'ee73' COLLATE RTRIM)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((SUM(rt0.c4)) NOT NULL) FROM rt0, vt0 WHERE ('PYS0'); -- 1ms;
SELECT ALL ((((0.1604058848447073)>=(rt0.c2))) NOT BETWEEN ((NOT (vt0.c0))) AND ((rt0.c3 IN ()))) FROM vt0, rt0 WHERE ((((('-1156548322') IS FALSE)) ISNULL)); -- 0ms;
SELECT DISTINCT ((((((((0X7ebb215d COLLATE BINARY)OR(rt0.c2 COLLATE BINARY)))AND((('u^N}') BETWEEN (rt0.c0) AND (rt0.c0)))))OR(HEX(DISTINCT -1861057745))))OR(((rt0.c1) NOT NULL))) FROM rt0, vt0 GROUP BY (((((rt0.c0)) BETWEEN ((0x73b32b76)) AND ((rt0.c1))))+(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) HAVING ((((rt0.c1)LIKE(rt0.c3))) NOT NULL); -- 0ms;
SELECT DISTINCT CAST((NOT (rt0.c0)) AS INTEGER), ((((rt0.c2)IS(rt0.c4)))AND(((vt0.c0)>>(rt0.c3)))), NTILE((((CAST(')]Zb|' AS INTEGER)))<>((rt0.c0)))) OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL 0.5857489415618786 FROM vt0 WHERE (((((((((CASE WHEN x'' THEN x'' WHEN NULL THEN 0.9434295552533101 WHEN '' THEN NULL END)AND(NULL)))AND(x'0c1b')))OR(((x'') IS FALSE))))OR(NULL))); -- 0ms;
SELECT ALL 'W<' FROM rt0 GROUP BY ((((rt0.c1) ISNULL)) IS FALSE) HAVING CAST(CAST(rt0.c3 AS TEXT) AS BLOB); -- 0ms;
SELECT ((COUNT(*))>>((((vt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c0))))), rt0.c3, ROW_NUMBER() OVER () FROM rt0 WHERE (((('-1823607046')AND('')) IN ())) ORDER BY COALESCE(DISTINCT rt0.c2, ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4))) DESC;SELECT ALL CASE WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c3)LIKE(rt0.c2)) END FROM vt0, rt0 WHERE (CAST(((x'')LIKE(0.974069631982615)) AS BLOB)); -- 0ms;
SELECT ALL (((NOT (vt0.c0)))/(COUNT(x'0b7d'))), (((((((((- (rt0.c3)))OR(((0.3664282737252147) BETWEEN (rt0.c4) AND (rt0.c3)))))AND(CAST(vt0.c0 AS REAL))))AND(NULL)))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c3 END)), CAST(((('-2078717113', vt0.c0, rt0.c3))<=((rt0.c4, rt0.c0, vt0.c0))) AS REAL) FROM rt0;SELECT ((((NULL)-(rt0.c0))) ISNULL) FROM vt0, rt0; -- 0ms;
SELECT (((0.6538271140489135, rt0.c4, rt0.c1)) BETWEEN ((rt0.c4 COLLATE NOCASE, NULL, 'ﹳI{_2''' COLLATE BINARY)) AND (((((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c3))), ((((vt0.c0)AND(x'')))OR(vt0.c0)), COUNT(*)))) FROM vt0, rt0 WHERE ((((((x'ec19', -3.6913068E7, 'ꕥ辠bAV')) NOT BETWEEN ((0.1533155956629394, '', NULL)) AND ((NULL, x'', NULL))))*(NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE FROM rt0, vt0; -- 1ms;
SELECT DISTINCT rt0.c0, ((NULL) IS TRUE), (~ (((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))) FROM vt0, rt0; -- 0ms;
SELECT ((rt0.c3 IN ()) IN ()) FROM rt0 WHERE (CAST(0.06372702892855264 AS REAL) COLLATE RTRIM) GROUP BY ((((rt0.c2)IS(rt0.c3))) IS TRUE) HAVING 0.5977460997416374; -- 0ms;
SELECT ALL (((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c3, rt0.c4, rt0.c1)))) BETWEEN (((rt0.c4)|(NULL))) AND (((rt0.c3)/(rt0.c0)))) FROM rt0, vt0 WHERE (ABS(DISTINCT x'') COLLATE NOCASE) LIMIT 0; -- 0ms;
SELECT ALL 0.12599441205200135 FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0) ISNULL) IN ()) WHERE (((('-1733031035', 0.4332948769399606, 0.06459862771518976)) NOT BETWEEN ((CAST(0.8005165372219842 AS TEXT), NULL, ((0Xfffffffff5267d90) ISNULL))) AND ((UNLIKELY(DISTINCT '-1916427713'), ((NULL)||('276325088')), CAST(x'' AS REAL))))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))AND(NULL)))AND(((rt0.c2)>(rt0.c1)))))AND(vt0.c0)))AND(rt0.c4 COLLATE RTRIM)) FROM vt0 WHERE (((CASE 0.2706039420116093  WHEN -1308746826 THEN 0Xfffffffff8719e23 ELSE 'P7ZⅈW(C.' END) NOT BETWEEN (PRINTF(NULL)) AND (LIKELIHOOD('-2076188236', 0.26195144361294453))));SELECT ALL ((load_extension(vt0.c0, x'80e4')) IS TRUE) FROM vt0 WHERE ((((((x'')) NOT BETWEEN ((-2145983306)) AND (('i䄆f^-0H'))))LIKE(CASE '-1375789100'  WHEN -1408920145 THEN NULL END))) LIMIT -743846295 OFFSET 1059149682; -- 0ms;
SELECT DISTINCT (473901352 IN ()) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ((((vt0.c0) ISNULL))-(((vt0.c0)%(-1053451177)))), ((('\r9''Wi' IN ()))*(((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))), CASE ((rt0.c3)LIKE(rt0.c0))  WHEN ((rt0.c0) NOT BETWEEN ('-672069194') AND (rt0.c3)) THEN ((0.8651542924634275) NOTNULL) WHEN COUNT(vt0.c0) THEN ((NULL)|(rt0.c2)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND ('')) THEN ((rt0.c1) ISNULL) END FROM vt0 WHERE (((('-165715756' IN (0.16156827926922113))) IS TRUE)) LIMIT 837432256;SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE) FROM vt0 WHERE (((x'') BETWEEN (x'e916') AND ('2104120529')) COLLATE NOCASE); -- 0ms;
SELECT ALL (NOT (((((vt0.c0)AND(rt0.c4)))AND(rt0.c3)))) FROM rt0;SELECT MAX(NULL) FROM vt0, rt0; -- 0ms;
SELECT ALL ((((vt0.c0)>(rt0.c1))) NOT NULL), ((((rt0.c4)<<(rt0.c3))) NOTNULL), FIRST_VALUE(PRINTF(CAST(vt0.c0 AS NUMERIC), CASE rt0.c3  WHEN NULL THEN vt0.c0 WHEN 0X15895ce THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END, ((vt0.c0)%(0.993169849088049)))) OVER (), ((((((vt0.c0)<('{KDfZ꒦e')))OR(rt0.c4)))OR(rt0.c3)), COUNT(*) OVER () FROM vt0, rt0 WHERE (CAST(((NULL)*(NULL)) AS BLOB)); -- 0ms;
SELECT (((((- (rt0.c4)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)))OR(((((((((vt0.c0)OR(x'')))AND(rt0.c0)))AND(rt0.c1)))OR(vt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT CAST(((vt0.c0)AND(vt0.c0)) AS BLOB) FROM vt0 WHERE (((NULLIF(0.2584387343435206, 0X2d8c864d)) BETWEEN (UNLIKELY(DISTINCT 0.0988572907044788)) AND ((((0.06459862771518976)) NOT BETWEEN ((NULL)) AND ((0.8547758081164163)))))); -- 0ms;
SELECT RTRIM(((((vt0.c0)OR(rt0.c0)))AND(rt0.c2))) FROM vt0 WHERE (((CASE WHEN NULL THEN 0.3116398283259487 WHEN '635186104' THEN x'' WHEN x'' THEN NULL WHEN 0.48409428176996505 THEN 0.2691777419465422 WHEN NULL THEN x'' ELSE 'JY' END)<<(((NULL)>=(0X75598aa9)))));SELECT ((((NULL)>(rt0.c1)))>>(((rt0.c3) NOTNULL))) FROM vt0, rt0 ORDER BY rt0.c3 ASC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)))|(((((rt0.c3)AND(rt0.c0)))AND(rt0.c4)))) ASC; -- 0ms;
SELECT '-56653167', ((NULL COLLATE RTRIM) NOTNULL), TIME(rt0.c2, rt0.c0, 0.9647713931526722, rt0.c2, rt0.c4) COLLATE BINARY FROM rt0, vt0; -- 1ms;
SELECT ALL CAST((+ (vt0.c0)) AS BLOB), (vt0.c0 COLLATE BINARY IN ()), (NOT (CAST(rt0.c0 AS NUMERIC))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN ('㠮!\n') AND (rt0.c0))) ISNULL) FROM rt0, vt0 WHERE ((((((NULL)AND(NULL)))OR('Y/[uYE+U')) IN ())); -- 0ms;
SELECT ALL COUNT(*) OVER (), (SQLITE_VERSION() IN (rt0.c0)), ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3)))!=(NULL)) FROM vt0 WHERE ((~ ((NULL IN ('1140190854'))))) LIMIT 681483407;SELECT DISTINCT (((((~ (vt0.c0)))OR(((((((((rt0.c3)OR(rt0.c3)))AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))))OR(LIKELY(DISTINCT 0.8608039721327919))) FROM vt0 LIMIT 1346974204;SELECT ALL ((SQLITE_SOURCE_ID())OR(rt0.c2)) FROM rt0, vt0; -- 0ms;
SELECT ALL (- ((((vt0.c0))<=((0X4cb2757))))), CAST((vt0.c0 IN ()) AS TEXT), (((rt0.c4 IN ())) NOT BETWEEN (LIKELIHOOD(rt0.c2, 0.7427308665218908)) AND (((vt0.c0)>>(rt0.c4)))) FROM vt0, rt0 GROUP BY ((((rt0.c0) NOT NULL))+((vt0.c0 IN ()))), (((vt0.c0 IN ()))=(((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))), ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))AND(NULL)))AND(SUBSTR(rt0.c4, rt0.c3))); -- 1ms;
SELECT ALL (((rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, vt0.c0, CAST(rt0.c4 AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) AND ((CAST(rt0.c0 AS TEXT), (NOT (vt0.c0)), (- (rt0.c3)), ((rt0.c2) IS FALSE), (((rt0.c3, rt0.c2, vt0.c0)) NOT BETWEEN ((0.25861498134094374, rt0.c0, rt0.c3)) AND ((vt0.c0, rt0.c0, '-0.0')))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE RTRIM AS BLOB), CASE WHEN (('0.06346777057434227') IS FALSE) THEN ((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)) WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE RTRIM WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END THEN STRFTIME(rt0.c4, rt0.c2, rt0.c2) ELSE ((rt0.c4)OR(rt0.c4)) END, SQLITE_VERSION() FROM rt0, vt0 GROUP BY (((NOT (rt0.c4))) IS TRUE) HAVING ((UNLIKELY(rt0.c3))<=((rt0.c4 IN ('-1876826652', rt0.c0)))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c0 COLLATE BINARY THEN vt0.c0 WHEN ((rt0.c3)<>(rt0.c4)) THEN MIN(rt0.c3) WHEN SUBSTR(vt0.c0, rt0.c2) THEN CAST(rt0.c1 AS TEXT) END FROM rt0 WHERE ((((- (-1.82026864E8)))>=(NULLIF(DISTINCT x'', x'')))) LIMIT -112400089 OFFSET 403242717;SELECT '-638919717' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT LAG((CAST(vt0.c0 AS REAL) IN (((rt0.c1) NOTNULL), ((rt0.c2) NOT BETWEEN (0xfffffffff3c052a4) AND (rt0.c3)))), ((LIKELIHOOD(rt0.c2, 0.7670876021173997)) IS FALSE), (((- (rt0.c1)))&(CAST(rt0.c1 AS BLOB)))) OVER () FROM vt0, rt0 WHERE (CASE (('')<=(NULL))  WHEN ('-1745639402' IN ()) THEN 0xffffffffe5960478 COLLATE BINARY END) ORDER BY (rt0.c4 IN ()); -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))<=((- (x'25ef')))), x'', CASE CASE WHEN vt0.c0 THEN rt0.c3 END  WHEN LOWER(rt0.c1) THEN '-1259915619' WHEN 0.12826694614966638 THEN CAST(rt0.c3 AS BLOB) WHEN (NOT (vt0.c0)) THEN ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(vt0.c0)) ELSE rt0.c4 COLLATE BINARY END FROM vt0, rt0; -- 0ms;
SELECT rt0.c0 FROM rt0, vt0 WHERE ((~ ((((NULL))>=(('1811743553')))))); -- 0ms;
SELECT DISTINCT (((~ (rt0.c3))) NOT BETWEEN (rt0.c0) AND ('.E䛔	1Cui8' COLLATE NOCASE)) FROM rt0 ORDER BY CAST(((rt0.c4)IS NOT(vt0.c0)) AS INTEGER) ASC, CAST((rt0.c3 IN (rt0.c3, vt0.c0)) AS NUMERIC) ASC;SELECT DISTINCT RANK() OVER () FROM vt0, rt0 WHERE (((CASE x''  WHEN 'SF-1wેN4' THEN x'' ELSE '' END) BETWEEN ((0.5600429599893385 IN ())) AND (0.6120839051727917 COLLATE RTRIM))); -- 0ms;
SELECT ALL ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT(((rt0.c2)!=(vt0.c0)))), '+', HEX(((rt0.c0)-(rt0.c1))) FROM vt0 WHERE ((NOT ((0.40861490639329634 IN ()))));SELECT (+ ((((rt0.c4))<((rt0.c2))))) FROM rt0, vt0; -- 0ms;
SELECT ALL ((((rt0.c2)*(rt0.c4))) BETWEEN (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0))) AND (((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT MAX(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 END, ((rt0.c3)IS(rt0.c1))) FROM vt0, rt0 WHERE (((('-762346475' IN (NULL)))IS NOT(((NULL)<('-1203776953'))))); -- 0ms;
SELECT NULL, (((0.33763021661404136)>(rt0.c1)) IN ()), (NOT (LIKE(rt0.c4, rt0.c2, '0'))) FROM rt0 WHERE ((NOT (''))) LIMIT 1713318636; -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c1 IN (vt0.c0, '/bV#')) THEN (('') NOTNULL) ELSE COUNT(*) END, MAX(-1.334557823E9), AVG(((NULL) NOT NULL)) OVER ( ROWS  CURRENT ROW) FROM vt0;SELECT ALL CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN x'' THEN (rt0.c3 IN (rt0.c0)) END, (GROUP_CONCAT(0.12326541701927896) IN (((rt0.c1)<<(rt0.c4)))), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY, (((((rt0.c2)-(rt0.c2))))<=((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END))), ((rt0.c4)>>(rt0.c4)) COLLATE BINARY FROM rt0 WHERE (((CASE WHEN NULL THEN x'' ELSE '1430219947' END)>>((('1688244542') ISNULL)))); -- 0ms;
SELECT ALL ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))<=(((0.008181628149821929) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), COUNT(((rt0.c2) IS FALSE)), (UNLIKELY(rt0.c3) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c4)!=(rt0.c1)))) FROM vt0;SELECT ALL '' COLLATE BINARY, rt0.c4, ((rt0.c0) ISNULL) FROM rt0, vt0 INTERSECT SELECT DISTINCT ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE), MIN(UPPER(vt0.c0)) COLLATE BINARY, UPPER(DISTINCT (rt0.c3 IN (rt0.c0))) FROM rt0, vt0 WHERE ('he91'); -- 0ms;
SELECT (- ((rt0.c1 IN ()))) FROM vt0, rt0 GROUP BY CASE WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c2)||(rt0.c3)) WHEN ((rt0.c2)+(rt0.c2)) THEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END WHEN CAST(rt0.c4 AS REAL) THEN ((rt0.c4) BETWEEN (NULL) AND ('0.10370833962100534')) END HAVING ((rt0.c3)+(rt0.c0)); -- 0ms;
SELECT rt0.c0, PERCENT_RANK() OVER (), (UNLIKELY(DISTINCT rt0.c4) IN ()) FROM vt0, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c2 END) NOT BETWEEN ((rt0.c4 IN ())) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((TRIM(DISTINCT rt0.c3, rt0.c1))OR((rt0.c0 IN ()))))AND(((0.06475074764008792) BETWEEN (rt0.c0) AND (rt0.c3)))) FROM vt0, rt0 WHERE (((((((((NULL)AND(x'')))AND(0.4440954319634882)))AND((('') BETWEEN (0.9851330572358767) AND ('1785008025')))))AND(((x'')*(NULL))))); -- 0ms;
SELECT (~ (((rt0.c4)<(rt0.c0)))), ((CAST(rt0.c3 AS INTEGER))LIKE((+ (rt0.c3)))), ((((((rt0.c3)AND(rt0.c4)))OR(rt0.c3))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT (((('>zOv')OR(0.09957018343460522)))OR(rt0.c2 COLLATE RTRIM)) FROM vt0;SELECT ALL ((rt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE RTRIM)) FROM rt0, vt0 WHERE ((((NULL, 0.18667524742830743, 0.64263628500345)) NOT BETWEEN ((ABS('18554906'), ((NULL)>(NULL)), 'qoNS0D' COLLATE NOCASE)) AND ((NULL, (+ ('od	9/}vd')), ((NULL) NOT NULL))))); -- 1ms;
SELECT COALESCE(DISTINCT ((rt0.c2)IS(rt0.c3)), CAST(rt0.c1 AS INTEGER)) FROM vt0, rt0; -- 0ms;
SELECT CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END COLLATE BINARY FROM rt0; -- 0ms;
SELECT GROUP_CONCAT(MAX(TRIM(rt0.c2, rt0.c1))) FROM vt0;SELECT DISTINCT ((((rt0.c1)>(rt0.c3))) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (((rt0.c0)=(rt0.c3)))) FROM vt0;SELECT CAST((rt0.c3 IN (rt0.c4)) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT (- (rt0.c4)) FROM vt0, rt0 GROUP BY rt0.c0 COLLATE RTRIM; -- 0ms;
SELECT ALL (rt0.c0 IN ()) FROM rt0 WHERE ((((-801918109 IN ())) BETWEEN (((NULL) IS TRUE)) AND (json_array(x'', NULL)))) ORDER BY ((((CAST(rt0.c2 AS TEXT))AND(CHAR(rt0.c0))))AND(TRIM(DISTINCT rt0.c1, rt0.c3)))  NULLS LAST, ((((((((rt0.c1)AND(rt0.c4)))OR('1203018108')))OR(rt0.c1)))AND(rt0.c1)) COLLATE NOCASE ASC  NULLS FIRST;SELECT 1.821877576E9, (rt0.c1 COLLATE RTRIM IN (rt0.c4 COLLATE BINARY)), CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c2)<>(rt0.c1)) ELSE '-380135162' END FROM vt0 WHERE (COALESCE(NULL COLLATE RTRIM, x'dd7c')) ORDER BY (((rt0.c1)||(rt0.c4)) IN ()) ASC  NULLS FIRST;SELECT ((rt0.c2 COLLATE RTRIM)<<(((rt0.c4)==(NULL)))) FROM vt0;SELECT DISTINCT (((((((((~ (vt0.c0)))OR(((rt0.c4) NOT NULL))))OR(json_patch(rt0.c3, rt0.c4))))AND(CASE WHEN vt0.c0 THEN x'4ebd' ELSE rt0.c4 END)))OR((~ (rt0.c0)))) FROM rt0, vt0 ORDER BY '-482275882' COLLATE NOCASE DESC; -- 0ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN ((((rt0.c2)<(rt0.c2)))) AND ((((rt0.c4)>=(rt0.c4))))) FROM rt0 WHERE ((- ((((('-401184673')OR('솙w}#FS(+.')))OR(NULL))))); -- 0ms;
SELECT ((((((vt0.c0))=((rt0.c4)))))<((MAX(rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), SUM(((rt0.c0) NOT NULL)), ((COUNT(rt0.c1)) NOT BETWEEN (((rt0.c4)LIKE(vt0.c0))) AND (((rt0.c4)%(rt0.c4)))), ((((vt0.c0 COLLATE RTRIM)OR(AVG(rt0.c0))))OR(((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))), ((((rt0.c4) IS TRUE)) IS TRUE) FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT MIN(((rt0.c0) NOTNULL)) FROM rt0, vt0 WHERE ((NOT ('276325088')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((vt0.c0)|(rt0.c4)) COLLATE RTRIM FROM rt0, vt0; -- 0ms;
SELECT ALL ((+ (rt0.c1)) IN ()), ((MIN(rt0.c0)) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((NULL))))), CAST(vt0.c0 AS REAL) COLLATE NOCASE FROM rt0, vt0 WHERE ((((x'') NOT BETWEEN ('.\') AND (0x618d63bd)) IN ())); -- 0ms;
SELECT DISTINCT TOTAL(x'') OVER (), ((((rt0.c1) IS TRUE)) IS FALSE), (('')||(rt0.c0)) COLLATE RTRIM FROM rt0, vt0; -- 0ms;
SELECT ((UNLIKELY(rt0.c3))-(((((vt0.c0)AND(rt0.c0)))AND(rt0.c4)))) FROM vt0 WHERE ((- (((NULL) NOT BETWEEN (0.13702953998029732) AND ('1089606714')))));SELECT rt0.c0 COLLATE BINARY FROM vt0;SELECT DISTINCT ((((SUM(rt0.c1))OR(((rt0.c3)/(NULL)))))OR(((rt0.c4)IS NOT(rt0.c1)))), (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))*(((rt0.c3)&(1.399908048E9)))), LOWER(vt0.c0) FROM rt0;SELECT ((rt0.c4 COLLATE NOCASE) IS FALSE) FROM rt0 WHERE ('t퐷Nx*') LIMIT 1231728171 OFFSET -780684642; -- 0ms;
SELECT DISTINCT CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4))  WHEN '0.41984258825158427' COLLATE BINARY THEN CAST(rt0.c4 AS REAL) WHEN CAST(rt0.c4 AS REAL) THEN CASE x'e5b29f6d'  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE NULL END WHEN COUNT(*) THEN ((rt0.c4)GLOB(rt0.c1)) ELSE CASE WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c0 END END FROM vt0 GROUP BY CAST(((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND('0.5000456415375661')) AS NUMERIC);SELECT DISTINCT (((((+ (vt0.c0)))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))) FROM rt0, vt0 WHERE (''); -- 0ms;
SELECT ((((rt0.c3)<=(rt0.c0))) NOT BETWEEN ((vt0.c0 IN (rt0.c2))) AND (GROUP_CONCAT(rt0.c4))), AVG(rt0.c1) OVER (), TOTAL(rt0.c0) OVER () FROM rt0 WHERE (CAST((('-2112899941') NOT BETWEEN ('-681125777') AND (0.03844150667414614)) AS TEXT));SELECT ((((((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))+(((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)))), load_extension(CAST(vt0.c0 AS INTEGER)), (((rt0.c1)) BETWEEN ((NULL)) AND ((((rt0.c1)LIKE(vt0.c0))))), (rt0.c4 IN (CAST(rt0.c1 AS NUMERIC))), (- (CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '614966438' THEN vt0.c0 END)) FROM vt0 WHERE (TRIM('9q|%' COLLATE NOCASE, UPPER(DISTINCT NULL))) ORDER BY rt0.c0 ASC  NULLS FIRST;SELECT DISTINCT (SUM(rt0.c4) IN ((~ (rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((((NULL)AND((rt0.c3 IN (0.10173417257742512)))))AND(((rt0.c1)&(rt0.c2)))))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN (rt0.c1)))) FROM rt0 WHERE (json_valid(((((NULL)OR(x'')))OR(0.9647713931526722))));SELECT NULL FROM rt0 WHERE (((CASE WHEN '-182026864' THEN '172206807' END) IS TRUE)); -- 0ms;
SELECT DISTINCT COUNT(((((((((0.4899201715013076)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) ISNULL), (((+ (rt0.c3))) BETWEEN ((((rt0.c3))>((rt0.c0)))) AND (rt0.c1 COLLATE RTRIM)), LOWER(DISTINCT (rt0.c4 IN ())), LAG(x'f52b', '1927568149', ((((0.42283282884636364)>>(rt0.c1))) NOT BETWEEN ((~ (rt0.c3))) AND (rt0.c0))) OVER (), rt0.c2 FROM rt0;SELECT ALL rt0.c1 FROM vt0, rt0 ORDER BY ((((rt0.c3) ISNULL)) NOTNULL)  NULLS FIRST; -- 0ms;
SELECT (((((rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((433937265, vt0.c0, vt0.c0)) AND (('0.04017600917563946', rt0.c0, vt0.c0))))<(COUNT(*))), ((((((((((((NULL)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR((rt0.c2 IN ()))))AND((~ (rt0.c2)))), ROW_NUMBER() OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((NULL COLLATE BINARY)||((((rt0.c4))>=((rt0.c1))))) FROM vt0, rt0 ORDER BY ((((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))AND(((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)))))OR(((((((((vt0.c0)AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c2)OR(rt0.c0)))))AND(rt0.c1)); -- 0ms;
SELECT ALL CAST(MAX(rt0.c2) AS INTEGER) FROM vt0, rt0 WHERE (((('-1162249819')) NOT BETWEEN (((0.992853443617104 IN (NULL)))) AND ((((x'') NOT BETWEEN (')q') AND ('-511687035')))))) LIMIT -803793905 OFFSET -953869569; -- 0ms;
SELECT ALL CASE rt0.c4 COLLATE BINARY  WHEN ((vt0.c0)>(rt0.c3)) THEN 0.8774464705965815 COLLATE NOCASE WHEN (~ (x'')) THEN (0.7417161119372995 IN (vt0.c0, rt0.c3)) WHEN (rt0.c4 IN ()) THEN MIN(rt0.c4) ELSE ((rt0.c3)>(rt0.c3)) END, CASE WHEN NULL THEN ((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c4)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (0.3769723117338891)) END, ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0))) IS FALSE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((+ (vt0.c0))) NOTNULL), COUNT(*) OVER (), ((((rt0.c4)*(rt0.c2)))>=(COUNT(rt0.c2))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT NULL FROM vt0, rt0 ORDER BY TYPEOF(DISTINCT rt0.c2)  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt0.c3) BETWEEN (NULL) AND (rt0.c2)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((NOT (rt0.c3))))<((((vt0.c0)-(rt0.c1))))) FROM vt0;SELECT DISTINCT ((vt0.c0) BETWEEN ((((vt0.c0, rt0.c1, rt0.c2))<=((rt0.c4, rt0.c4, vt0.c0)))) AND (((rt0.c3)||(rt0.c2)))) FROM rt0, vt0 WHERE (((((((((((x'') BETWEEN (1.904183338E9) AND (x'539b')))OR(((18554906) BETWEEN ('^틣2he1') AND (0Xffffffffc265a168)))))OR(((549574889) NOT BETWEEN (NULL) AND (NULL)))))OR((((NULL))=(('1399908048'))))))OR(')iiG/+' COLLATE RTRIM))) ORDER BY rt0.c3  NULLS FIRST; -- 0ms;
SELECT ALL QUOTE(((vt0.c0) ISNULL)) FROM rt0, vt0 GROUP BY CAST((- (rt0.c3)) AS REAL); -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN rt0.c0 THEN '捬9Rx>w}' ELSE rt0.c1 END) BETWEEN (((rt0.c3)GLOB(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END)) FROM vt0;SELECT x'61af' FROM rt0, vt0; -- 0ms;
SELECT (((rt0.c0)) BETWEEN ((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)))) AND ((MIN(rt0.c0, rt0.c2)))) FROM vt0, rt0 WHERE ((((((1.189036994E9)+('-1931967356'))))<(((x'' IN (x'ffbc')))))); -- 0ms;
SELECT DISTINCT NULL FROM rt0, vt0 GROUP BY (((rt0.c1 IN ()))<(((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))), JULIANDAY(rt0.c0, ((rt0.c2)OR(rt0.c0)), vt0.c0), (((((rt0.c0)>(rt0.c4)), '-495297953' COLLATE RTRIM, (rt0.c4 IN (vt0.c0, vt0.c0))))<((((rt0.c3) IS FALSE), rt0.c4 COLLATE NOCASE, ((((rt0.c4)OR(rt0.c4)))OR(rt0.c0))))); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))), (((vt0.c0)) BETWEEN ((((vt0.c0)AND(rt0.c2)))) AND ((NULL))), (vt0.c0 IN ()) COLLATE NOCASE FROM vt0, rt0; -- 1ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((NULL)) BETWEEN (('3餭Pm(h' COLLATE RTRIM)) AND (((((x'', -1.871887277E9, NULL))!=((x'084d', '343482471', NULL))))))); -- 0ms;
SELECT ALL 0.4762508328382309 FROM rt0, vt0 WHERE (UPPER(DISTINCT NULL)) GROUP BY (UPPER(vt0.c0) IN (((rt0.c2) BETWEEN (rt0.c4) AND (0.09973709578431245)))) HAVING CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0, vt0 ORDER BY (- (TYPEOF(rt0.c2))) ASC; -- 0ms;
SELECT DISTINCT (((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))))=((TOTAL(vt0.c0)))) FROM rt0 ORDER BY (NOT ((rt0.c0 IN (0.46248475688609203)))) DESC, CAST((rt0.c1 IN (rt0.c1)) AS BLOB) DESC;SELECT GROUP_CONCAT(AVG(vt0.c0) COLLATE RTRIM) FROM rt0, vt0 WHERE (((0x3f840c35 IN ()) IN ()));SELECT DISTINCT (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) IN ()) FROM rt0, vt0 WHERE (((((0.40861490639329634)OR(0.015865085185153727)))OR(NULL)) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ABS(DISTINCT CASE WHEN -2004442023 THEN vt0.c0 ELSE rt0.c4 END) FROM vt0 WHERE (CAST(x'' COLLATE RTRIM AS TEXT));SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c0 END)=((((rt0.c4, rt0.c0, rt0.c4))<((rt0.c1, rt0.c4, vt0.c0))))) FROM vt0;SELECT (((((((((vt0.c0 IN ()))AND(((0.8838122726377261)|(rt0.c2)))))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN 0.8155299241783527 THEN 0.6642568346684161 WHEN rt0.c2 THEN vt0.c0 END)))AND(((rt0.c1) ISNULL))))AND(((vt0.c0) IS FALSE))), MIN((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))), CAST('1975180930' AS INTEGER) FROM rt0; -- 0ms;
SELECT ALL DATETIME(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)), ((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)), ((rt0.c0) ISNULL)) FROM vt0, rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS BLOB))<=((NOT (rt0.c2)))) FROM rt0 WHERE (((json_remove(1.430219947E9, '1匵uIs', x'', 0.7376262324061637))<=(((x'')IS(0.8448125694794335)))));SELECT (((vt0.c0 IN (vt0.c0)))=(LIKELY(DISTINCT rt0.c2))) FROM rt0;SELECT DISTINCT rt0.c1, CASE WHEN rt0.c4 THEN TOTAL(rt0.c1) END, (~ (CASE WHEN 0.9211870623703572 THEN rt0.c4 END)) FROM vt0 WHERE (CAST((+ ('rW')) AS REAL));SELECT DISTINCT (((rt0.c0 IN ())) NOT BETWEEN ((((rt0.c3))=((vt0.c0)))) AND ((0Xffffffffd3a9ce69 IN ()))) FROM vt0 WHERE (((((x'', 1480665862, NULL, '0.6968315561042485', 0.9618373702489846)) NOT BETWEEN (('-1102095055', '-1202781734', 'a>v', '1030033708', '-1587199644')) AND ((x'57d3', NULL, x'', 'Wf', 0Xffffffffedb61d81))) IN (0.5519295948453266))) ORDER BY ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))>>(CAST(rt0.c1 AS BLOB)));SELECT ((0.08548794306811291) IS TRUE) COLLATE RTRIM FROM rt0 WHERE (json_quote(((0.4929375523212691) IS FALSE))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0;SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC))>=((rt0.c1 IN ()))), NULLIF(((rt0.c3)!=(rt0.c2)), rt0.c2 COLLATE NOCASE), (COALESCE(vt0.c0, rt0.c2, rt0.c2, '1215520673') IN (((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c3)))) FROM rt0, vt0 WHERE ((((('~Mke㥪}_H穛') IS TRUE))<=(LOWER(0X48735fa1)))); -- 0ms;
SELECT DISTINCT ((rt0.c0)>=(CAST(rt0.c2 AS TEXT))), ((((UNLIKELY(rt0.c2))AND(UNLIKELY(DISTINCT rt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4)))), ((((rt0.c0 COLLATE RTRIM)AND(x'1efc')))OR(((rt0.c0)IS NOT(rt0.c4)))) FROM rt0, vt0 WHERE (((CASE NULL  WHEN '-417828962' THEN '323653930' WHEN '' THEN '' WHEN -4.44346667E8 THEN 0x35e0f592 END) NOT BETWEEN ((((('691728440')AND(NULL)))AND('-331630443'))) AND ((~ (NULL))))) ORDER BY ((vt0.c0) NOT NULL), (((NOT (rt0.c0)))*((rt0.c0 IN ()))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT (((((0.1442723931844867 IN ()))OR(AVG(rt0.c0))))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))), TIME(rt0.c3 COLLATE BINARY, (+ (rt0.c3)), SUM(rt0.c4)), ((NOT (rt0.c0)) IN ()) FROM rt0, vt0 WHERE ((- ((('p7+') IS FALSE)))); -- 0ms;
SELECT ALL (((- (rt0.c3))) NOTNULL), ((CAST(rt0.c1 AS BLOB))LIKE(CASE WHEN rt0.c0 THEN rt0.c4 END)), (((((vt0.c0))>=((rt0.c4)))) NOT NULL) FROM vt0;SELECT DISTINCT ((rt0.c1)GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM rt0, vt0 WHERE (CAST('O#' AS BLOB)); -- 0ms;
SELECT ALL ((((((((rt0.c4 COLLATE RTRIM)OR(((((vt0.c0)OR(vt0.c0)))OR(rt0.c3)))))OR(rt0.c0)))OR(TRIM(vt0.c0))))OR((rt0.c3 IN (rt0.c4)))) FROM rt0 WHERE (CAST(((0.7363917169610809) NOTNULL) AS TEXT));SELECT DISTINCT CASE ((rt0.c1) NOT NULL)  WHEN ((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)) THEN TYPEOF(DISTINCT rt0.c4) ELSE rt0.c1 COLLATE NOCASE END FROM rt0; -- 0ms;
SELECT ((rt0.c4) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c1) NOT NULL))) FROM vt0, rt0; -- 0ms;
SELECT ALL (((~ (rt0.c2)))%((rt0.c1 IN ()))) FROM rt0 ORDER BY (((rt0.c0)<(rt0.c4)) IN ()), CAST(((((rt0.c4)AND(rt0.c0)))AND(rt0.c2)) AS TEXT) ASC; -- 0ms;
SELECT DISTINCT ((((rt0.c4)*(rt0.c0))) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c3, 0.11468307575412573)) AND (0.7217326474568213)), GROUP_CONCAT(((vt0.c0)!=(rt0.c3))) FILTER(WHERE vt0.c0) OVER (), rt0.c4, CASE WHEN ((vt0.c0)OR(rt0.c1)) THEN ((vt0.c0) NOTNULL) WHEN CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END THEN ((rt0.c2)<(rt0.c1)) WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END THEN ((((rt0.c0)AND(rt0.c0)))OR(vt0.c0)) END, (((vt0.c0 IN (rt0.c1)))>(TOTAL(rt0.c3))) FROM rt0, vt0 WHERE (CASE WHEN '6AC' THEN NULL END COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((COALESCE(rt0.c1, 0.974069631982615)) NOT NULL) FROM vt0 CROSS JOIN rt0 ON rt0.c0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (1679679204))) BETWEEN ('-226434536') AND (CAST(rt0.c2 AS INTEGER))), CAST(rt0.c3 AS TEXT) FROM rt0 WHERE ((- (0.7848716507162777)) COLLATE BINARY); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE BINARY) BETWEEN (((((rt0.c3)AND(rt0.c0)))AND(rt0.c3))) AND (((((vt0.c0)OR(rt0.c2)))OR(NULL)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((NULL, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c2, vt0.c0)))))=((rt0.c2))) FROM rt0, vt0 WHERE (((((((0X31a47a5b)OR(NULL)))AND('g-47kK'))) BETWEEN (0.5940821671562351 COLLATE RTRIM) AND (((((0.0957150982719599)AND(NULL)))AND('/.䢂INpZu0'))))); -- 0ms;
SELECT DISTINCT x'a824' FROM vt0 WHERE ((- ((((('-33550541')AND('YscEbl')))OR(0.6923865939848524))))); -- 0ms;
SELECT rt0.c0 COLLATE NOCASE FROM vt0;SELECT DISTINCT (~ (COUNT(*))) FROM vt0 WHERE ((((~ ('')))OR(x'' COLLATE NOCASE))); -- 0ms;
SELECT ALL rt0.c4, x'', (((rt0.c0)&(rt0.c3)) IN ()) FROM rt0, vt0 ORDER BY (((rt0.c4)&(vt0.c0)) IN ())  NULLS FIRST; -- 0ms;
SELECT ALL (LIKELIHOOD(rt0.c0, 0.776342580827344) IN ()), ((((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))IS(x'')), (((rt0.c0, ((rt0.c1)IS(rt0.c3)), ((rt0.c1)GLOB(rt0.c1))))<=((SUM(rt0.c0), (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))), CASE WHEN rt0.c2 THEN rt0.c2 END))) FROM vt0, rt0 WHERE (json((('-36913068')*('')))); -- 0ms;
SELECT DISTINCT ((((rt0.c3) IS TRUE)) NOT BETWEEN (CASE 799478586  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) AND (0.3733239059583232)), LEAD(vt0.c0, 0X453328c7, CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) OVER (), SQLITE_VERSION() FROM vt0 INTERSECT SELECT AVG(vt0.c0), ((CAST(0.4094754350609817 AS REAL)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c3)OR(rt0.c4)))), (rt0.c3 IN ()) COLLATE RTRIM FROM vt0 WHERE (CAST(CASE 0.5604035063015875  WHEN NULL THEN x'' ELSE 0.08565529162426189 END AS INTEGER));SELECT ((rt0.c2)IS NOT(SUM(rt0.c3))) FROM rt0, vt0 WHERE (((((((0.7339452570315501)%('-2049620614')))OR(('-1162249819' IN ()))))AND(''))); -- 0ms;
SELECT DISTINCT CAST(NULLIF(rt0.c4, rt0.c1) AS BLOB), CAST('1e500000輷*' AS TEXT), (((UNLIKELY(DISTINCT rt0.c4)))<>(((rt0.c2 IN ())))) FROM rt0 WHERE (CAST(-1.251826645E9 COLLATE RTRIM AS REAL)); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c1)) BETWEEN (NULLIF(rt0.c2, rt0.c1)) AND ((((rt0.c4))>=((vt0.c0))))), CASE GROUP_CONCAT('-906397581')  WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN vt0.c0 END, ((((((rt0.c0) NOTNULL))OR((((('-434665817')AND(rt0.c2)))OR(rt0.c1)))))AND(((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))) FROM vt0 WHERE (LIKELY(DISTINCT (-1314460766 IN (''))));SELECT ALL CAST(0.9804981636192719 AS REAL) COLLATE BINARY, ((json_type(rt0.c1)) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (SQLITE_COMPILEOPTION_USED(rt0.c3))), (COUNT(*) IN ()), '0.0', CASE WHEN rt0.c4 THEN (((rt0.c3))==((rt0.c1))) ELSE ((rt0.c2) ISNULL) END FROM vt0 WHERE (((((0.55019683642961)LIKE('640260168'))) IS FALSE));SELECT DISTINCT (vt0.c0 IN ()) FROM vt0, rt0 WHERE (((NOT (x'047d')) IN (LIKELY(DISTINCT 0.9237704045989314)))); -- 0ms;
SELECT COUNT(rt0.c2) FROM vt0, rt0 WHERE ((((x'')|('%D')) IN (IFNULL(NULL, -1593232952)))); -- 0ms;
SELECT ALL (((((vt0.c0)IS NOT(vt0.c0)), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END, rt0.c1))>((((rt0.c0) NOT NULL), rt0.c1 COLLATE BINARY, ((((rt0.c3)OR(rt0.c0)))AND(x''))))) FROM rt0 WHERE ((((x'')) NOT BETWEEN ((((x'd2bbeec8')<=(x'')))) AND ((((663587445) BETWEEN (554905314) AND (x''))))));SELECT DISTINCT (((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(TYPEOF(vt0.c0))))AND(rt0.c2)) FROM rt0, vt0; -- 0ms;
SELECT (SUM(rt0.c2) IN ()) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2 COLLATE BINARY)OR(CASE WHEN rt0.c3 THEN rt0.c2 END)))OR(DATETIME(rt0.c0, rt0.c0, rt0.c1))); -- 0ms;
SELECT DISTINCT CASE WHEN load_extension(0.3603387493292147) THEN ((rt0.c1)GLOB(rt0.c0)) END FROM vt0 ORDER BY (((((vt0.c0))<=((rt0.c1)))) IS FALSE)  NULLS LAST;SELECT ((rt0.c3)<<((rt0.c0 IN ()))), ((rt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN (rt0.c4))) AND (0.6066745937943905)), ((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))<<(((NULL) NOTNULL))) FROM rt0 WHERE (CASE '|2匵'  WHEN '' THEN 0xffffffff83afab90 ELSE '' END COLLATE BINARY);SELECT rt0.c0, CAST(LIKELIHOOD(rt0.c2, 0.5207093416700532) AS TEXT), ((((x'684c') NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (((rt0.c3)*(rt0.c3))) AND (rt0.c2)) FROM rt0; -- 1ms;
SELECT DISTINCT ABS(rt0.c4) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT '' FROM vt0, rt0 WHERE ((((0.5242032843076261 IN ())) NOT NULL)); -- 0ms;
SELECT DISTINCT (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3))))<=(((NOT (rt0.c4))))) FROM vt0 WHERE ((((0x7f28455 IN ()))+((((('1858909088')OR(0.8817898747029329)))AND(NULL))))) GROUP BY 'G8', ((rt0.c0) IS FALSE), ((vt0.c0)%(rt0.c3)) COLLATE RTRIM COLLATE RTRIM;SELECT ALL ((x'9172')*(rt0.c4)) FROM rt0 WHERE ((1.968802473E9 IN ()) COLLATE BINARY); -- 1ms;
SELECT DISTINCT MAX(rt0.c4) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c1)IS NOT('Bj-MP1')))=(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT ALL AVG((- (rt0.c0))) OVER (), x'', (NULL IN ()) FROM rt0, vt0 ORDER BY ((x'') NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((0.857739309067799)>(vt0.c0)))) ASC, ((((rt0.c0)|(rt0.c2)))>(((rt0.c2) NOT NULL))) ASC  NULLS LAST; -- 0ms;
SELECT ALL rt0.c2 FROM vt0;SELECT ALL ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3))) IS TRUE), rt0.c4, ((((SUBSTR(rt0.c0, rt0.c2))OR(((1.94112191E9) IS FALSE))))OR(CASE rt0.c0  WHEN '-1284487123' THEN rt0.c1 END)), CAST(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER), CASE WHEN ((rt0.c2)|(rt0.c2)) THEN (rt0.c1 IN (rt0.c1, rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c3) NOTNULL) WHEN rt0.c0 THEN ((rt0.c0)*(rt0.c3)) ELSE AVG(NULL) END FROM rt0;SELECT ALL COUNT(*), (NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))), json_array_length((rt0.c4 IN ()), ((rt0.c1) IS TRUE)) FROM vt0, rt0;SELECT ALL ((COUNT(*))<>(((rt0.c2)AND(rt0.c2)))), (((vt0.c0)) BETWEEN ((0.3941231337854608)) AND ((AVG(rt0.c0)))), (((((((((NOT (rt0.c4)))OR(rt0.c4 COLLATE BINARY)))AND(SUM(rt0.c2))))OR(((rt0.c0)IS NOT(rt0.c3)))))OR(rt0.c2)) FROM rt0 NOT INDEXED WHERE (((((NULL)AND(0.6385450405001697)))AND(NULL)) COLLATE RTRIM);SELECT DISTINCT (((vt0.c0 IN ()))>=(SUM(rt0.c2))), GROUP_CONCAT((rt0.c2 IN ())) OVER (), ((CAST(rt0.c4 AS BLOB))IS(x'')) FROM rt0 WHERE (((((-1e500)&(x''))) BETWEEN (((((((((0X73b32b76)OR('ju>f	uCUJ')))OR(x'')))OR('2023029938')))OR(NULL))) AND ((('o')&(''))))); -- 0ms;
SELECT CASE CAST(rt0.c2 AS INTEGER)  WHEN 0.28463753134086034 THEN x'' WHEN CAST(rt0.c2 AS INTEGER) THEN (~ (rt0.c4)) WHEN MIN(rt0.c2) THEN MIN(rt0.c1) END FROM rt0 WHERE (CAST(CASE WHEN 'CV?}X2Sm' THEN ']iE89%WT' END AS INTEGER)); -- 0ms;
SELECT ((MAX(rt0.c2)) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c4 IN ()) THEN (rt0.c4 IN ()) ELSE -1663269046 END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(rt0.c2)))AND(rt0.c1))) NOT NULL) FROM vt0;SELECT ALL CHAR(rt0.c0 COLLATE RTRIM) FROM rt0, vt0 WHERE (((((((x'4356') IS FALSE))OR((((0.36419065547258167, 0.8756983177315381, 0xfb91bc6))<(('0.40861490639329634', 'GP?*', 0X86adb1))))))AND(CASE WHEN '<\rFR2' THEN NULL ELSE -1408621583 END))) ORDER BY CAST((rt0.c2 IN ()) AS REAL) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(UPPER(DISTINCT rt0.c4)) FROM rt0, vt0 WHERE ((((LIKELY('')))=((((((((((x'')OR('1805593046')))OR(0.06346777057434227)))OR(-444346667)))OR(x'')))))); -- 0ms;
SELECT DISTINCT rt0.c1, ((MIN(rt0.c2)) IS FALSE), (((('kHjL(1!')/(rt0.c3))) NOT BETWEEN (UNLIKELY(rt0.c1)) AND (((rt0.c0)>>(rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0 WHERE (((CASE WHEN x'' THEN NULL WHEN 0.22434852488330703 THEN '*D\nC' WHEN x'' THEN x'5efc' END)GLOB(((1.214483339E9)GLOB(x'5e8e'))))); -- 0ms;
SELECT ALL (((vt0.c0)AND(rt0.c2)) IN ()), ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ()), CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN ((rt0.c1) IS FALSE) THEN (((rt0.c3, -1309763008, x'')) NOT BETWEEN (('', rt0.c4, rt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c0))) ELSE ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)) END FROM rt0;SELECT ((('\r)', rt0.c1, rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)), CASE rt0.c4  WHEN vt0.c0 THEN 'FsOx.4_-' END, ((NULL) NOT BETWEEN (x'') AND (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE x'' END, rt0.c2 COLLATE NOCASE)) AND ((CAST(rt0.c2 AS BLOB), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, (((rt0.c3)) NOT BETWEEN (('0.6361767482833534')) AND ((rt0.c4))), TYPEOF(DISTINCT rt0.c3), rt0.c0))), ((((((x'59c5')AND(rt0.c4)))AND(((rt0.c3)-(rt0.c2)))))OR(x'7b02')), 0.1458286902741821 FROM vt0, rt0 WHERE (((~ ('0.4088424116335181')) IN ('988300764'))) GROUP BY ((((rt0.c4) IS TRUE))LIKE(((rt0.c0) IS TRUE))) HAVING x'' LIMIT 1802530718; -- 0ms;
SELECT (((rt0.c4 COLLATE RTRIM))<((rt0.c0))) FROM rt0 ORDER BY x'' DESC, ((((0Xfffffffff9dbbb7b, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c1, rt0.c2))) IN (('' IN ()))), TIME((+ (rt0.c2)), (- (rt0.c0)), ((rt0.c3)=(rt0.c0))) ASC  NULLS FIRST; -- 0ms;
SELECT ((((vt0.c0)||(NULL))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c3)GLOB(rt0.c4)))), rt0.c4, TYPEOF(DISTINCT ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1))) FROM vt0;SELECT ALL AVG((- (rt0.c3))) FROM rt0, vt0; -- 0ms;
SELECT ALL LIKELIHOOD(NULL COLLATE BINARY, 0.9930729659010992), ((vt0.c0)AND(rt0.c0)) COLLATE BINARY, (((((rt0.c1 IN (rt0.c3, rt0.c1)))AND((rt0.c3 IN (vt0.c0)))))OR(((rt0.c1)OR(rt0.c4)))) FROM vt0 WHERE ((((((('-806074966')OR(NULL)))AND(-543982384))) NOT BETWEEN (((('Qg')) BETWEEN ((NULL)) AND ((0.8797702441818394)))) AND (x'' COLLATE BINARY)));SELECT ALL CAST(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT) FROM vt0 WHERE (CASE WHEN (- (0.21572853574352024)) THEN CASE WHEN NULL THEN '1198987683' END WHEN x'' THEN ((NULL)!=('288723526')) WHEN (+ (NULL)) THEN NULL ELSE CASE '102926572'  WHEN 'O' THEN '' END END);SELECT DISTINCT ((((rt0.c1)>>(rt0.c4)))-(CHAR(rt0.c2, rt0.c2, rt0.c2))) FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((rt0.c3) IS FALSE))<<(CASE 0.10370833962100534  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END)), (~ ((((vt0.c0))>=((vt0.c0))))), (NOT ('邇d [k')) FROM rt0 WHERE (CAST((1.554940757E9 IN ('-1130662146', 0.5337092648616938)) AS INTEGER));SELECT DISTINCT (- (0.3621546551845647)) FROM vt0, rt0; -- 0ms;
SELECT (((rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((x'', ((((vt0.c0)OR(rt0.c4)))OR(rt0.c1)), vt0.c0)) AND ((((vt0.c0) ISNULL), CAST(vt0.c0 AS TEXT), ((rt0.c0) ISNULL)))) FROM rt0, vt0; -- 0ms;
SELECT ((((((((CASE rt0.c2  WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)AND(((vt0.c0)*(rt0.c3)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))))AND((+ (vt0.c0)))))OR(MAX(rt0.c4))), ((AVG(vt0.c0)) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 END) AND ((((rt0.c3, vt0.c0, rt0.c1))<((vt0.c0, rt0.c0, 0.6780018519023256))))), CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)<(rt0.c0)) ELSE rt0.c1 COLLATE RTRIM END FROM vt0, rt0 WHERE (GLOB((('')AND('465626751')), ((((NULL)AND(x'')))OR('|n#6[?_*')))) ORDER BY CASE WHEN (- (rt0.c2)) THEN ((((((((rt0.c4)AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN (+ (rt0.c0)) THEN rt0.c2 COLLATE RTRIM ELSE ((vt0.c0) ISNULL) END  NULLS LAST; -- 0ms;
SELECT ALL rt0.c0 FROM vt0, rt0 NOT INDEXED LIMIT -600680994 OFFSET 2131343347; -- 0ms;
SELECT DISTINCT (((CASE WHEN rt0.c4 THEN rt0.c2 END, (- (rt0.c1)), (((NULL)) BETWEEN ((x'')) AND ((vt0.c0)))))<>((rt0.c4, ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)), UNLIKELY(rt0.c4)))) FROM rt0, vt0 ORDER BY (((rt0.c4)) BETWEEN (((NULL IN ()))) AND ((rt0.c4 COLLATE BINARY)))  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS REAL) COLLATE RTRIM FROM rt0, vt0 WHERE ((LOWER('1T') IN ())); -- 0ms;
SELECT ALL (NULL IN ()) FROM vt0, rt0 GROUP BY (NOT ((rt0.c0 IN (rt0.c1)))); -- 1ms;
SELECT rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0, IFNULL((NULL IN ()), COALESCE(DISTINCT rt0.c0, rt0.c3)), (((rt0.c4)<(rt0.c4)) IN ()) FROM rt0, vt0 WHERE (x'' COLLATE NOCASE); -- 0ms;
SELECT NULL FROM rt0 WHERE (((NULL COLLATE RTRIM) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN rt0.c0 WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) THEN TYPEOF(DISTINCT rt0.c0) WHEN ((rt0.c0)||(rt0.c0)) THEN rt0.c0 ELSE ((rt0.c3)<=(rt0.c2)) END FROM rt0, vt0; -- 0ms;
SELECT vt0.c0 FROM rt0 LIMIT -717673680 OFFSET 1720735357;SELECT DISTINCT COUNT(*) FROM rt0 WHERE (x''); -- 0ms;
SELECT rt0.c4 FROM rt0 WHERE (((x'' COLLATE NOCASE)>=(CASE '-417828962'  WHEN NULL THEN '439634298' END))); -- 1ms;
SELECT ALL 0.6429274019057442 FROM rt0 WHERE ((((NOT ('955446809')))-((('5쩅s	') BETWEEN (x'') AND (1.399908048E9))))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c4)) COLLATE NOCASE, ((rt0.c0)LIKE(0x25ad821d)), (((NULL, MIN(rt0.c1), (rt0.c0 IN ()), ((rt0.c2)>(rt0.c0)), SQLITE_SOURCE_ID()))<>(((((vt0.c0, rt0.c4, '304124372'))<=((rt0.c4, vt0.c0, rt0.c0))), rt0.c0 COLLATE RTRIM, rt0.c3, rt0.c4 COLLATE BINARY, rt0.c0))) FROM rt0, vt0 WHERE (((((NULL)<<(9.309474E8))) NOTNULL)); -- 0ms;
SELECT ALL CAST(((((((((rt0.c1)OR(rt0.c2)))OR('')))AND(rt0.c4)))OR(rt0.c4)) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(x'' AS TEXT))-(((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))) FROM rt0 WHERE (((TRIM(DISTINCT x'')) NOT NULL)); -- 0ms;
