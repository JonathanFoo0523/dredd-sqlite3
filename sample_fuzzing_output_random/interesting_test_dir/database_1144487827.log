-- Time: 2024/06/07 17:54:40
-- Database: database27
-- Database version: 3.40.0
-- seed value: 1144487827
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
CREATE TABLE t1 (c0 BLOB ); -- 1ms;
ANALYZE; -- 1ms;
COMMIT; -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 390697186); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2099064619); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0X4ec6b8f6); -- 3ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c73; -- 1ms;
REINDEX; -- 0ms;
PRAGMA main.optimize; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR FAIL t1 SET (c73)=(NULL) WHERE (((x'2fd8'))<=((((t1.c73)&(t1.c73))))); -- 0ms;
ANALYZE; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1096056796); -- 0ms;
ANALYZE main; -- 0ms;
UPDATE t0 SET c73=NULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1764027024);\n; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c73 TO c41; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL), (x''), ('N%'); -- 0ms;
CREATE VIRTUAL TABLE vt95 USING fts4(c0); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE t0 SET (c41)=(0.5854778020135671) WHERE CAST((t0.c41 IN ()) AS NUMERIC); -- 1ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA main.stats; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c41 TO c8; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c8)=(x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE t1 SET c0=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t1 SET c0=x''; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
PRAGMA cache_spill; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.1047010830033609, c0='__9C8䲓	' WHERE CAST(((((vt0.c0)AND(vt0.c0)))OR(x'73d4')) AS NUMERIC); -- 0ms;
PRAGMA journal_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (''); -- 0ms;
DROP TABLE vt0; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
PRAGMA temp.automatic_index = true; -- 0ms;
UPDATE OR ROLLBACK t1 SET c0='1801206793'; -- 0ms;
ALTER TABLE t1 ADD COLUMN c11 BLOB; -- 1ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE t1 SET (c0, c11)=(NULL, '304985870'); -- 0ms;
PRAGMA threads; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(NULL); -- 0ms;
UPDATE t1 SET (c11)=('-1764027024'); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL t1 SET c0='-1220618921'; -- 0ms;
UPDATE OR IGNORE t1 SET c11=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
PRAGMA main.cache_spill; -- 0ms;
PRAGMA locking_mode; -- 0ms;
UPDATE OR IGNORE t0 SET (c11)=(x''); -- 0ms;
ANALYZE temp; -- 1ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.1047010830033609, 1120054049); -- 0ms;
UPDATE OR IGNORE t0 SET (c11, c0, c0)=('', NULL, 0xffffffffd13c7f44); -- 0ms;
INSERT OR IGNORE INTO t0(c11) VALUES (0.25901552261004834); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL t0 SET c0='-1641795205', c11='0.5854778020135671'; -- 1ms;
PRAGMA cell_size_check; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE DELETE ON t0 BEGIN DELETE FROM t0 WHERE CASE WHEN 0.884932087755158 THEN CAST(t0.c0 AS REAL) ELSE (- (t0.c0)) END;END; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(0.6630472459379592) WHERE TYPEOF((((t0.c11, t0.c0, t0.c0)) BETWEEN ((t0.c11, t0.c11, 'qu嚢_(퉪x')) AND ((t0.c11, t0.c0, t0.c0)))); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT CASE (t0.c11 IN ())  WHEN '2111657634' THEN ((((((((t0.c11)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c11)) WHEN '2111657634' THEN UNLIKELY(t0.c11) WHEN ((t0.c11) NOT BETWEEN (t0.c11) AND (t0.c11)) THEN (t0.c11 IN (t0.c0)) END FROM t0 WHERE (UPPER('0.6630472459379592') COLLATE BINARY) LIMIT -334085511; -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'e3a3') ISNULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=-1305411399; -- 1ms;
PRAGMA main.short_column_names; -- 0ms;
UPDATE t0 SET (c11)=(0.5854778020135671); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=2129250890 unordered'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c23 REAL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.88159616140818)&(0.88159616140818)))OR(0.15466124037812323)))AND(((NULL) NOT BETWEEN (NULL) AND (x'')))))OR(((NULL) BETWEEN (0x109f1d4) AND ('}0m3,')))))AND(0.45918508950939074)); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL CASE t0.c23  WHEN t0.c11 THEN t0.c0 WHEN t0.c0 THEN t0.c23 WHEN t0.c23 THEN t0.c23 ELSE t0.c0 END COLLATE BINARY FROM t0, v0; -- 0ms;
SELECT (((t0.c11)OR(t0.c0)) IN (((t0.c0)+(v0.c0)))), MAX(((t0.c23) ISNULL)), SUM('Csi+M}!') FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((((((((v0.c0)+(t0.c23)))OR(((t0.c23)=(v0.c0)))))AND(((t0.c11)>=(NULL)))))AND(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))))AND(((x'ffda') NOT NULL))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((t0.c0)-(v0.c0))) NOT BETWEEN (('QS' IN ())) AND ((('-1867129755') BETWEEN (t0.c11) AND (v0.c0)))) FROM t0;SELECT ALL ROW_NUMBER() OVER ( ROWS BETWEEN (- (x'')) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t0, v0 WHERE ((- (NULL))); -- 0ms;
SELECT ALL ((~ (t0.c11)) IN ((+ ('1321646326')))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ')<!' FROM v0, t0 LIMIT -1305411399; -- 0ms;
SELECT DISTINCT ((((v0.c0 IN ()), ((v0.c0) IS TRUE), (('X|u㰉vx') NOT BETWEEN (v0.c0) AND (t0.c0))))==((((((t0.c23)OR('')))OR(t0.c11)), (v0.c0 IN ()), v0.c0))) FROM v0 WHERE (((~ (0.9073809803462305)) IN (((((NULL)OR('-1220618921')))OR(x'2ec2')))));SELECT DISTINCT t0.c23, ((((v0.c0)|(t0.c11))) NOT NULL), ((((t0.c11 COLLATE NOCASE)OR(((v0.c0)<<(v0.c0)))))OR(((t0.c11) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM v0 WHERE (((((0Xffffffffc3575914))=((0x7ddd56a2))) IN ()));SELECT DISTINCT rtreenode(((t0.c0)||(t0.c0)), COUNT(t0.c0)) FROM t0, v0 ORDER BY ((((t0.c11) BETWEEN (t0.c0) AND (t0.c0)))LIKE(CASE t0.c11  WHEN -50219633 THEN t0.c0 WHEN '' THEN 0.5119638169958238 WHEN t0.c11 THEN t0.c11 WHEN t0.c23 THEN t0.c0 WHEN t0.c0 THEN v0.c0 END)) DESC  NULLS LAST, ((((t0.c0) NOTNULL))%(CASE t0.c23  WHEN t0.c23 THEN t0.c23 WHEN t0.c11 THEN t0.c11 WHEN t0.c11 THEN v0.c0 END)) DESC; -- 0ms;
SELECT DISTINCT v0.c0, t0.c23, ((((((((((((v0.c0)AND(t0.c0)))AND(t0.c23)))OR(((t0.c0) IS TRUE))))OR(((v0.c0) IS TRUE))))AND(t0.c23 COLLATE RTRIM)))AND(t0.c23)) FROM t0, v0 WHERE (json_valid((('FALSE') NOT BETWEEN (NULL) AND (0.45295878072711315)))); -- 1ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT ALL AVG(((((t0.c11)AND(v0.c0)))AND(t0.c0))) OVER () FROM v0, t0; -- 0ms;
SELECT DISTINCT LENGTH(NULL) FROM v0, t0; -- 0ms;
SELECT DISTINCT (RTRIM(t0.c0) IN ()) FROM v0 WHERE (COALESCE(DISTINCT ((0Xffffffff8102bf22) NOT BETWEEN ('1321646326') AND (x'')), CASE WHEN NULL THEN x'' ELSE 0.4637226818755147 END, TRIM(DISTINCT 0.7820683713766308, 0.3086249602455795), (((-5.0219633E7, NULL, x''))=((0X630b0232, 0.45918508950939074, 0.3277486614342203))))) LIMIT 665414314; -- 0ms;
SELECT CAST(((((((((((((t0.c23)OR(v0.c0)))OR(t0.c23)))OR(v0.c0)))AND(t0.c23)))OR(t0.c23)))AND(t0.c11)) AS BLOB) FROM v0 WHERE (QUOTE(CASE WHEN '966587339' THEN x'' WHEN '2125247850' THEN 0.25901552261004834 WHEN -1.305411399E9 THEN 0.7565930021817414 ELSE 2.111657634E9 END));SELECT ALL '966587339' FROM t0, v0 WHERE (((0.6832758416946456) BETWEEN (((0xffffffffc3575914)|(0.14210611818196517))) AND (CAST('0u<d_pvRw' AS REAL)))); -- 0ms;
SELECT UNLIKELY(CAST(v0.c0 AS INTEGER)) FROM v0, t0; -- 0ms;
SELECT ALL (((CASE t0.c0  WHEN t0.c11 THEN t0.c23 ELSE v0.c0 END))=((CAST(t0.c11 AS BLOB)))) FROM t0 WHERE ((+ ('-2015636886')) COLLATE RTRIM);SELECT (((((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))))||('0u<d_pvrw')) FROM v0; -- 0ms;
SELECT ALL AVG(((t0.c0)>>(t0.c11))) OVER (), ((']7O') IS FALSE), (((((v0.c0) IS FALSE), GROUP_CONCAT(t0.c23), (t0.c0 IN ())))>((0.8396810774986203, ((t0.c0) NOT BETWEEN (t0.c11) AND (v0.c0)), (((t0.c0))>=((t0.c23)))))) FROM v0 WHERE (((LIKE(0.532082925480381, 0x4ec6b8f6))>=(((0.49420437744993606)<=('N%'))))) LIMIT 304985870;SELECT DISTINCT ((t0.c23)>(((((t0.c11)OR(t0.c0)))OR(t0.c0)))) FROM v0 WHERE (((('' IN ('-1152723549')))<=((~ (NULL))))) ORDER BY CAST(t0.c0 AS BLOB) DESC;SELECT AVG(((t0.c23)IS(t0.c23))) FROM t0 WHERE (((((LIKELIHOOD(DISTINCT 0x4a8245eb, 0.6163972342528213))AND(CASE -2.015636886E9  WHEN -2.015636886E9 THEN 0.7652655416317975 END)))OR(((((x'')OR(x'')))OR(NULL))))); -- 0ms;
SELECT AVG(highlight(t0.c0, v0.c0, t0.c0, t0.c0)) OVER ( ROWS (((~ (t0.c0)))OR((((t0.c0, t0.c11, t0.c0)) NOT BETWEEN ((t0.c23, x'81df', t0.c11)) AND ((t0.c23, t0.c11, t0.c23))))) PRECEDING), v0.c0, ((((v0.c0)<(v0.c0))) NOT BETWEEN (t0.c11) AND ((t0.c11 IN ()))) FROM t0 CROSS JOIN v0 ON ((((v0.c0) ISNULL)) IS FALSE);SELECT MAX(0.9073809803462305), LIKELIHOOD((((t0.c0)) BETWEEN ((t0.c23)) AND ((v0.c0))), 0.0487286364707189), ((1333188213) ISNULL) FROM v0 WHERE ((((TRIM(NULL)))<=((MIN(NULL, NULL)))));SELECT ALL (((- (t0.c0)))+('-238446218')), ((((t0.c0)|(t0.c23))) ISNULL), t0.c23 FROM t0, v0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((t0.c0)*(((x'') BETWEEN (NULL) AND (t0.c23)))) FROM v0;SELECT DISTINCT (~ (((t0.c11) BETWEEN (v0.c0) AND (t0.c11)))), ((CAST(t0.c23 AS BLOB)) ISNULL), CASE v0.c0  WHEN t0.c23 THEN t0.c11 ELSE v0.c0 END COLLATE BINARY, v0.c0, LIKELIHOOD(DISTINCT t0.c23, 0.029915214365871523) FROM t0, v0 WHERE ((((0.38063244324051326 IN (NULL)))/(((((x'')AND('rZG')))OR(x'c242'))))); -- 0ms;
SELECT ALL ((((((((((v0.c0)%(v0.c0)))AND(((t0.c0)/(t0.c0)))))OR(NULL)))AND(t0.c23 COLLATE RTRIM)))OR(883354554)) FROM t0, v0 LIMIT 203531707 OFFSET 17428948; -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT t0.c0)) BETWEEN (MAX(v0.c0)) AND ((((('xbU0}bw')OR(t0.c0)))AND(t0.c0)))), (((+ (t0.c11)))|(((v0.c0) NOTNULL))), (((((t0.c11)OR(t0.c11)))OR(t0.c0)) IN ((t0.c11 IN ()))) FROM v0 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT (NOT (((((v0.c0)AND(v0.c0)))OR(t0.c23)))) FROM t0 WHERE ('883354554');SELECT DISTINCT ((t0.c23)&(t0.c23)) COLLATE NOCASE FROM v0;SELECT ALL CASE ((((((((v0.c0)OR(t0.c23)))OR(NULL)))AND(t0.c11)))AND(t0.c23))  WHEN CAST(t0.c23 AS NUMERIC) THEN LIKELY(v0.c0) END FROM t0, v0 GROUP BY CAST((('-2015636886') ISNULL) AS NUMERIC) HAVING ((json(v0.c0)) NOT BETWEEN (t0.c0) AND (CAST('910553528' AS INTEGER))); -- 0ms;
SELECT CASE WHEN t0.c23 COLLATE NOCASE THEN (((''))!=((v0.c0))) END, (TRIM(DISTINCT t0.c11) IN ()), (((((t0.c0 IN (v0.c0)))AND((t0.c11 IN ()))))OR(NULL)) FROM t0;SELECT DISTINCT COUNT((('') BETWEEN (t0.c0) AND (v0.c0))) FROM v0;SELECT ((t0.c0 COLLATE BINARY) NOT NULL) FROM t0 ORDER BY TOTAL_CHANGES(), ((t0.c11 COLLATE RTRIM) ISNULL) DESC; -- 0ms;
SELECT DISTINCT ((COUNT(*))IS(CAST(t0.c0 AS TEXT))) FROM v0 WHERE ('5f	K_?W_G');SELECT ALL (- ('ZZWc3')), CAST(((t0.c11) NOT NULL) AS TEXT), ((((v0.c0)+(t0.c11))) NOTNULL) FROM v0, t0 WHERE ((((+ (x'')))IS(((0X6b987c90) BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT ALL ((((v0.c0) IS TRUE))IS((~ (t0.c23)))) FROM t0, v0 ORDER BY ((((t0.c11, t0.c23, v0.c0))>((NULL, t0.c11, t0.c23))) IN ())  NULLS LAST, '' ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT -784564412, TOTAL(((v0.c0)OR(x'1bce'))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), (~ (((t0.c23)*(t0.c23)))) FROM v0;SELECT ALL CAST(v0.c0 AS TEXT) COLLATE NOCASE FROM t0, v0; -- 0ms;
SELECT ALL ((((t0.c23, t0.c11, x'')) BETWEEN ((t0.c23, t0.c23, t0.c11)) AND ((t0.c0, t0.c11, t0.c0))) IN ()) FROM v0 WHERE (CAST(((x'')IS(NULL)) AS NUMERIC)) ORDER BY t0.c0 COLLATE NOCASE ASC;SELECT DISTINCT -616162197, NULL, CAST(CAST(v0.c0 AS NUMERIC) AS REAL) FROM v0, t0 WHERE (((((0x5c2589c4) IS FALSE)) NOT NULL)) ORDER BY (((((-5.0219633E7)) NOT BETWEEN ((t0.c23)) AND ((t0.c23))))>=(CASE t0.c0  WHEN t0.c23 THEN v0.c0 END)); -- 0ms;
SELECT CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c11 WHEN t0.c0 THEN v0.c0 WHEN 0.57315167878912 THEN t0.c11 ELSE t0.c23 END AS BLOB), ((((TOTAL(t0.c0))OR((x'd8d3' IN ()))))AND(NULL)), CAST(CAST(t0.c23 AS BLOB) AS TEXT) FROM v0 WHERE (CASE WHEN NULL THEN (('-727150727')*(NULL)) END) GROUP BY (t0.c23 IN (((t0.c23)IS NOT(t0.c11)))) HAVING CASE WHEN (- (0.9931722701098132)) THEN CAST(t0.c11 AS BLOB) END;SELECT ALL ((t0.c11) ISNULL) COLLATE RTRIM FROM t0, v0; -- 0ms;
SELECT DISTINCT (- ((v0.c0 IN ()))) FROM t0; -- 0ms;
SELECT ALL 0.9356113689110857, (CASE t0.c11  WHEN 0x630b0232 THEN t0.c23 ELSE t0.c23 END IN ((- (v0.c0)))), ((v0.c0) ISNULL) COLLATE RTRIM FROM t0;SELECT ALL (((t0.c23))==((t0.c11))) FROM t0, v0 WHERE (((('-50219633')) NOT BETWEEN ((TYPEOF('1333188213'))) AND ((((('-2130526430', 0X4399a219, 0.9007324441020315)) NOT BETWEEN (('883354554', x'2847', NULL)) AND (('', x'8532', NULL))))))); -- 0ms;
SELECT (~ (((t0.c23) IS TRUE))), CASE WHEN (t0.c23 IN (t0.c11)) THEN ((t0.c23)<<(v0.c0)) ELSE '-1556569752' END, (((t0.c11 IN (t0.c0)))<>(((t0.c11)>>(t0.c11)))) FROM v0 WHERE (CAST(CAST(NULL AS REAL) AS INTEGER));SELECT ((((x'')||(v0.c0))) NOT BETWEEN (TOTAL(t0.c11)) AND ((NOT (v0.c0)))), (((+ (t0.c11))) NOT BETWEEN ((1140955279 IN ())) AND (CASE WHEN t0.c11 THEN t0.c0 ELSE -1556569752 END)), (((~ (t0.c23)))GLOB((NOT (t0.c11)))), v0.c0, t0.c23 FROM t0, v0; -- 0ms;
SELECT DISTINCT (~ (t0.c23)) COLLATE NOCASE FROM t0, v0 WHERE ((NULL IN ()) COLLATE RTRIM) GROUP BY CASE ((t0.c11) IS FALSE)  WHEN CASE WHEN t0.c23 THEN t0.c11 WHEN v0.c0 THEN t0.c23 WHEN t0.c23 THEN t0.c0 END THEN (((t0.c11))=((x''))) WHEN ((t0.c23) IS FALSE) THEN json_patch(v0.c0, t0.c23) WHEN t0.c11 COLLATE RTRIM THEN ((v0.c0)!=(v0.c0)) ELSE 0.8564295171841165 END; -- 0ms;
SELECT ALL NULL FROM t0 WHERE (((-870701145 COLLATE RTRIM) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(v0.c0 COLLATE BINARY AS REAL) FROM t0, v0 LIMIT -1378990309; -- 0ms;
SELECT CAST((+ (t0.c11)) AS TEXT) FROM v0, t0 WHERE (CAST(NULLIF(DISTINCT '-324274397', '-1017685740') AS INTEGER)); -- 0ms;
SELECT ((((((NULL)&(v0.c0)))OR(t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c11)))) FROM v0 WHERE (((((NULL, '-123976777', '-533130027')) BETWEEN (('Infinity', x'', NULL)) AND ((0.1576345946041543, NULL, x'2d72'))) IN ())) ORDER BY CASE (+ (''))  WHEN ((t0.c0) NOT BETWEEN (t0.c23) AND (t0.c11)) THEN CASE WHEN t0.c11 THEN 'E,7' ELSE v0.c0 END ELSE CASE t0.c0  WHEN v0.c0 THEN t0.c11 END END;SELECT ALL 0.2249052125533657, CAST((- (t0.c23)) AS INTEGER), (NOT (CAST(v0.c0 AS INTEGER))), (((t0.c0)<(t0.c0)) IN (t0.c23 COLLATE NOCASE, (((t0.c23)) BETWEEN ((t0.c23)) AND ((t0.c11))))), CAST(t0.c0 COLLATE NOCASE AS REAL) FROM t0 WHERE (((('-754077025') NOT BETWEEN (NULL) AND (NULL)) IN ()));SELECT GROUP_CONCAT(((t0.c11)*(t0.c11))), (((((((t0.c11, t0.c11, t0.c11, t0.c0, v0.c0)) BETWEEN ((t0.c11, t0.c23, v0.c0, v0.c0, t0.c23)) AND ((t0.c11, t0.c23, t0.c23, t0.c11, t0.c23))))AND(0.9555174803271574)))OR(CAST(t0.c0 AS INTEGER))), CASE CASE WHEN 0.57315167878912 THEN v0.c0 ELSE t0.c0 END  WHEN ((t0.c11)>(t0.c0)) THEN AVG(t0.c0) END FROM v0, t0 WHERE (((rtreenode(0.2086087731651135, '')) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((v0.c0, t0.c11, v0.c0)) BETWEEN ((t0.c23, t0.c23, t0.c11)) AND ((v0.c0, v0.c0, v0.c0))))OR(((((((((((((0.5448543513079211)AND(t0.c23)))AND(t0.c11)))AND(v0.c0)))OR(v0.c0)))OR(t0.c11)))OR(t0.c11)))), ((((0x122db70e)OR(((t0.c11) IS TRUE))))OR((((t0.c11)) BETWEEN ((t0.c11)) AND ((t0.c0))))), CAST(t0.c23 AS BLOB), LIKELIHOOD(DISTINCT CASE t0.c0  WHEN t0.c0 THEN '' END, 0.46769826693535876), ((((v0.c0)LIKE(t0.c11)))IS NOT(((t0.c23)>(v0.c0)))) FROM t0 WHERE (((TRIM('0.3277486614342203'))|((0.49420437744993606 IN ()))));SELECT ALL ((((NULL)IS(t0.c11))) BETWEEN (((t0.c0) NOT NULL)) AND (CAST(t0.c23 AS BLOB))) FROM v0, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN v0.c0 THEN t0.c23 WHEN t0.c23 THEN t0.c0 WHEN t0.c11 THEN t0.c0 ELSE v0.c0 END) FROM t0 WHERE (((((((((((0.003628993191245211)AND('-123976777')))AND(((NULL)&('-1769287476')))))AND(-1164005361)))AND(((((1.805155472E9)AND(x'')))AND(0.3048932189535891)))))OR(CAST('-123976777' AS NUMERIC)))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c23) AND (t0.c11)))%(((v0.c0)<('-1639315588')))) DESC, CAST(CASE t0.c11  WHEN t0.c0 THEN t0.c11 WHEN '0.4637226818755147' THEN t0.c0 WHEN v0.c0 THEN t0.c23 END AS TEXT)  NULLS LAST;SELECT DISTINCT (((('rZG'))>=((t0.c23))) IN (((t0.c23) IS TRUE), (v0.c0 IN (t0.c23, t0.c23)))) FROM v0, t0; -- 0ms;
SELECT ALL (((t0.c0))>(((NOT (t0.c23))))), NULL, (((t0.c0)) BETWEEN ((((('329989098')) BETWEEN ((t0.c11)) AND ((t0.c23))))) AND ((((t0.c23) BETWEEN (t0.c23) AND (t0.c23))))) FROM v0 WHERE ((('-1641795205') BETWEEN (x'd118') AND (0.6637565829197201)) COLLATE NOCASE) ORDER BY ((((t0.c11) BETWEEN ('qs') AND (t0.c0)))|(((t0.c23) IS FALSE)))  NULLS LAST;SELECT ALL ((v0.c0) IS TRUE) COLLATE RTRIM, ((v0.c0) NOT BETWEEN (0x52475073) AND (v0.c0)) COLLATE NOCASE, GROUP_CONCAT(((((v0.c0)AND(t0.c0)))AND(t0.c23))) OVER () FROM v0, t0 WHERE (((x'e2c2' COLLATE NOCASE)/((('V*Q- ')AND('-2049062769'))))) ORDER BY NULL ASC  NULLS FIRST, COALESCE(((t0.c0)OR(t0.c0)), QUOTE(NULL)) DESC  NULLS LAST, ((CAST(t0.c11 AS INTEGER))<(CAST(t0.c0 AS REAL))) DESC; -- 0ms;
SELECT DISTINCT (~ (x'247a')), LAST_VALUE(((((t0.c11) BETWEEN (t0.c23) AND (t0.c11))) NOT BETWEEN (((x'')<(t0.c23))) AND (x''))) OVER (), ABS(DISTINCT CASE WHEN t0.c23 THEN v0.c0 WHEN t0.c11 THEN v0.c0 WHEN t0.c11 THEN t0.c23 ELSE NULL END) FROM v0, t0 WHERE ('>'); -- 0ms;
SELECT DISTINCT CAST(t0.c0 COLLATE RTRIM AS NUMERIC), FIRST_VALUE((((t0.c11 IN ())) NOT BETWEEN (CASE WHEN t0.c23 THEN t0.c11 WHEN t0.c11 THEN t0.c11 WHEN 0xffffffffe04bd315 THEN x'77fd' END) AND (((v0.c0) ISNULL)))) OVER (), COUNT(t0.c11) OVER () FROM v0, t0; -- 1ms;
SELECT (((t0.c0, v0.c0, x'76dd2964')) NOT BETWEEN ((CAST(v0.c0 AS BLOB), TOTAL(v0.c0), (((t0.c11)) NOT BETWEEN ((t0.c23)) AND ((t0.c23))))) AND ((CAST(t0.c0 AS INTEGER), (((t0.c11)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))), (~ (t0.c0))))) FROM t0, v0 WHERE (json_patch((('-1302061158') BETWEEN (0.11353478764355651) AND (x'')), ((0Xfffffffff89c43b7) NOT BETWEEN (0.4210261912961121) AND (NULL)))); -- 0ms;
SELECT DISTINCT CHAR(((v0.c0)||(x''))), ((((((t0.c11)OR(t0.c23)))OR('-238446218')))>(x'3fb0')), 0x3bfbf65a FROM t0, v0 WHERE (CAST(CASE WHEN NULL THEN NULL WHEN x'' THEN '' WHEN x'' THEN NULL ELSE -5652460 END AS NUMERIC)); -- 0ms;
SELECT ALL (((CASE WHEN t0.c11 THEN v0.c0 WHEN 'T>EL' THEN t0.c0 WHEN t0.c0 THEN t0.c23 END))<=((((v0.c0)<>(x'ad43'))))) FROM v0;SELECT DISTINCT (((CASE WHEN t0.c23 THEN v0.c0 WHEN t0.c11 THEN 1.7428948E7 WHEN t0.c0 THEN t0.c11 END, CASE t0.c0  WHEN t0.c23 THEN t0.c23 END, (+ (t0.c0)), (NOT (t0.c23)), t0.c11, TOTAL(t0.c23), t0.c11))=((((t0.c23) NOT NULL), ((t0.c0)%(v0.c0)), CAST(t0.c11 AS TEXT), ((((t0.c0)AND('-884361935')))OR(t0.c23)), (('+3g') NOTNULL), t0.c11, t0.c23))) FROM v0;SELECT ((((t0.c0)<<(t0.c23)))=(CASE t0.c23  WHEN t0.c11 THEN t0.c0 END)), ROW_NUMBER() OVER (), ((TOTAL(t0.c23)) NOTNULL) FROM t0, v0 WHERE (((0X411484d COLLATE BINARY)&(LIKE(644518592, x'618d')))); -- 0ms;
SELECT AVG(LIKELY(t0.c23)) FROM t0, v0; -- 0ms;
SELECT ALL '#Z1z*Jx&S', TRIM(DISTINCT v0.c0 COLLATE RTRIM, v0.c0), ((t0.c23) IS FALSE) FROM t0, v0 WHERE (((LIKE(NULL, x'')) NOT NULL)) GROUP BY ((((0xffffffffedf1daea)AND(v0.c0)))AND(t0.c11)) COLLATE BINARY COLLATE NOCASE, HEX(CAST(t0.c23 AS TEXT)), CAST(0X3645f1b8 AS BLOB) HAVING (((((t0.c11)OR(v0.c0)))OR('1467:4370561755962382893T5571348277652149545-1480070533517894381 277--5562524057261216058 450:414 ')) IN (t0.c23)) LIMIT 2101231623; -- 0ms;
SELECT ALL x'' FROM t0; -- 0ms;
SELECT DISTINCT (+ (CASE t0.c0  WHEN t0.c23 THEN t0.c11 ELSE t0.c23 END)) FROM v0, t0; -- 1ms;
SELECT ALL '1068465447', CASE ((t0.c11) NOT BETWEEN (t0.c0) AND (t0.c23))  WHEN (NOT (t0.c23)) THEN UNICODE(t0.c11) END, AVG(((t0.c0)!=(t0.c23))) OVER () FROM t0 WHERE (((('0.8396810774986203'))<=((1321646326))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(t0.c0 AS REAL) THEN v0.c0 ELSE ((v0.c0) NOT NULL) END FROM v0 WHERE ((((0X30dc489a)) BETWEEN ((CAST(x'' AS BLOB))) AND ((((NULL) NOT BETWEEN ('-639223842') AND (NULL))))));SELECT DISTINCT -1764027024, ((((((t0.c11)OR(t0.c11)))OR('0.45918508950939074'))) NOT BETWEEN ('') AND (t0.c0)), '1545963972' FROM t0, v0 GROUP BY ((((x'')IS(t0.c0))) ISNULL) HAVING CASE ((t0.c11)>=(v0.c0))  WHEN 1363935031 THEN CASE WHEN t0.c11 THEN t0.c0 ELSE '' END END; -- 0ms;
SELECT DISTINCT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0xffffffffe3e02f04 WHEN t0.c11 THEN t0.c0 ELSE v0.c0 END)OR(((v0.c0) BETWEEN (x'') AND (v0.c0)))))AND((v0.c0 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) IS FALSE))>(t0.c0 COLLATE BINARY)) FROM t0; -- 0ms;
SELECT ((t0.c0) BETWEEN (((((t0.c23)OR(t0.c23)))OR(v0.c0))) AND (CASE WHEN t0.c11 THEN t0.c11 END)) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((((((NULLIF(DISTINCT ')', ''))OR(TYPEOF(t0.c0))))AND((((t0.c11, t0.c23, t0.c11)) NOT BETWEEN ((t0.c23, t0.c11, t0.c0)) AND ((t0.c0, v0.c0, t0.c23))))))OR(((t0.c11)>(v0.c0)))))AND(((t0.c23)<(t0.c0)))) FROM v0, t0 WHERE (((((('e[', x'', 0.5761978663668391)) BETWEEN ((NULL, '', NULL)) AND ((0.44049260115980904, 'aW}&{\K', 0.09243477437450331)))) NOT NULL)); -- 0ms;
SELECT ALL (((((t0.c0))==((t0.c11)))) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(v0.c0)))OR(t0.c23))) AND (COUNT(*))) FROM v0, t0 WHERE (((((0.5576268946383107)=('516962453'))) BETWEEN (((((((((NULL)OR(0X1935cfe2)))AND(x'b768')))OR('-1120486641')))OR(NULL))) AND (CASE WHEN '' THEN x'8a5f' ELSE 6.8241485E7 END))); -- 0ms;
SELECT DISTINCT (+ (t0.c23)) FROM v0, t0; -- 0ms;
SELECT ALL t0.c0, (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c11))))AND((v0.c0 IN (t0.c23)))))AND(COALESCE(v0.c0, t0.c0))), CAST(((t0.c0)IS NOT(t0.c0)) AS NUMERIC) FROM t0, v0 WHERE ((((((NULL)) NOT BETWEEN ((0.7615737264650159)) AND ((0xffffffffd399e848))))==((NOT (x''))))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)AND(v0.c0)))AND(t0.c23)))OR(t0.c0)))AND(t0.c23)))||(((1545963972)%(v0.c0)))) FROM t0;SELECT HEX((('0.532082925480381')<=(t0.c0))), NULL, t0.c23 FROM t0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT (((v0.c0, t0.c0, t0.c23)) BETWEEN ((t0.c11, t0.c0, v0.c0)) AND ((t0.c11, v0.c0, v0.c0)))) FROM t0;SELECT DISTINCT ((((t0.c23)/(t0.c11))) BETWEEN (CASE '&>/	'  WHEN v0.c0 THEN v0.c0 END) AND (v0.c0)) FROM t0 WHERE ((NOT (((-2.015636886E9) IS TRUE))));SELECT ALL (~ (((t0.c0)>(t0.c0)))) FROM v0, t0 WHERE (((NULL COLLATE BINARY)<(((0.45387829019160164) NOTNULL)))); -- 0ms;
SELECT (v0.c0 IN ((((t0.c11, t0.c11, t0.c23))=((t0.c0, t0.c11, v0.c0))))) FROM v0 GROUP BY ((((t0.c23)<(t0.c11))) NOT BETWEEN ((~ (t0.c23))) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c23)))AND(x'')))AND(t0.c11)))), (- (t0.c11)) COLLATE RTRIM, ((((v0.c0) ISNULL)) IS FALSE);SELECT DISTINCT LAST_VALUE(t0.c0) OVER () FROM t0, v0 WHERE (x'') LIMIT 504964984; -- 1ms;
SELECT ALL CASE (t0.c0 IN (t0.c0, v0.c0))  WHEN (+ (v0.c0)) THEN (((t0.c11))>=((t0.c11))) WHEN COUNT(*) THEN (t0.c11 IN (t0.c0, '2090546870')) WHEN ((t0.c23)&(t0.c11)) THEN '' WHEN TOTAL(v0.c0) THEN TRIM(DISTINCT '-639223842', NULL) WHEN t0.c11 THEN ((((t0.c0)AND(t0.c11)))AND(t0.c23)) ELSE ((t0.c11)+(t0.c23)) END FROM v0 NOT INDEXED, t0; -- 0ms;
SELECT ALL CASE v0.c0  WHEN ((((t0.c11)OR(-870701145)))AND(3.29989098E8)) THEN x'' END, ((- (t0.c0)) IN ()), ((((t0.c23)<(t0.c23)))%(t0.c23 COLLATE RTRIM)) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((t0.c0)-(CASE WHEN v0.c0 THEN t0.c11 WHEN t0.c11 THEN t0.c0 WHEN t0.c11 THEN t0.c23 END)) FROM t0 WHERE ((((((0.2923842378530426)|(NULL))))<((LIKELY(DISTINCT 0.14210611818196517)))));SELECT DISTINCT (t0.c11 IN ()) COLLATE BINARY FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((v0.c0)OR(t0.c0)))AND(t0.c11)) COLLATE BINARY FROM t0 NOT INDEXED, v0; -- 0ms;
SELECT CAST((NOT (v0.c0)) AS NUMERIC) FROM t0 WHERE (CASE WHEN (('-334085511')IS NOT(NULL)) THEN (('-727150727') IS TRUE) WHEN CAST(x'2059' AS INTEGER) THEN CASE -40013828  WHEN -1150009341 THEN 0.4210261912961121 WHEN 0.477619148305338 THEN NULL WHEN NULL THEN 1.545963972E9 ELSE -2009488059 END WHEN ('-1523804959' IN ()) THEN (~ (NULL)) ELSE (+ ('1557320795')) END);SELECT ((((((((t0.c11 COLLATE BINARY)AND(json_array_length(t0.c23, t0.c0))))OR(((t0.c11)GLOB(v0.c0)))))OR('UO\n0' COLLATE BINARY)))OR(((((((((t0.c11)OR(0.24814087325123046)))OR(t0.c0)))AND(t0.c23)))AND(t0.c0)))) FROM v0 WHERE (((NULL COLLATE NOCASE) BETWEEN ((((x'', 0.36658690276867756, '0.44049260115980904')) NOT BETWEEN ((0.5119638169958238, '0.14210611818196517', 'AW}&{\K')) AND (('湫}''x9z', NULL, NULL)))) AND ((~ ('-277702951'))))) ORDER BY (((((((('-1833269329')AND(t0.c0 COLLATE BINARY)))OR(TYPEOF(t0.c0))))AND((- (v0.c0)))))OR(t0.c23 COLLATE BINARY)) ASC  NULLS FIRST, (((CAST(t0.c0 AS INTEGER)))=((((t0.c0)|(t0.c23))))) ASC  NULLS LAST;SELECT DISTINCT (t0.c23 IN ()) FROM t0 ORDER BY 'sS팕4Q2ig'; -- 0ms;
SELECT COUNT(*) OVER () FROM t0 GROUP BY (((((t0.c23))>((t0.c23)))) NOT BETWEEN ((t0.c11 IN ())) AND (CAST(t0.c23 AS BLOB))); -- 0ms;
SELECT (NOT (((t0.c0)>(t0.c11)))) FROM v0 WHERE (CAST(((((x'')AND(x'13d4eafa')))OR('0.5576268946383107')) AS BLOB));SELECT DISTINCT CAST(CAST(t0.c0 AS REAL) AS INTEGER), (((t0.c11 IN ())) NOT BETWEEN ((((t0.c23)) BETWEEN ((t0.c23)) AND ((x'')))) AND (((t0.c0)GLOB(v0.c0)))), ABS(t0.c11) COLLATE BINARY FROM t0, v0 ORDER BY (t0.c23 COLLATE NOCASE IN ())  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN ((t0.c0) NOT BETWEEN (x'') AND (v0.c0)) THEN ((t0.c0) NOTNULL) END FROM t0, v0; -- 0ms;
SELECT ALL ABS(DISTINCT (- (t0.c0))), ((((v0.c0)OR(((((t0.c0)OR(v0.c0)))AND(v0.c0)))))OR((t0.c23 IN ()))), (((((t0.c11)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT NULL), COALESCE(MIN(t0.c11), ((t0.c11) NOTNULL)), t0.c11 FROM v0, t0 WHERE (CASE ((((-1.220618921E9)OR('/9쀔J\|<')))OR('1904035936'))  WHEN ((x'f310')||(NULL)) THEN NULL COLLATE RTRIM ELSE (('0S')*(NULL)) END) GROUP BY (- (((t0.c0) BETWEEN (t0.c23) AND (t0.c11)))); -- 1ms;
SELECT DISTINCT (((v0.c0, t0.c11, t0.c11)) NOT BETWEEN ((SUM(v0.c0), t0.c0, (((t0.c23))>((v0.c0))))) AND (('', ((t0.c23)AND(x'')), MIN(t0.c11)))) FROM t0 WHERE (CAST((((x'')) BETWEEN ((x'')) AND ((NULL))) AS REAL));SELECT ALL CAST(CASE t0.c0  WHEN t0.c23 THEN v0.c0 WHEN t0.c23 THEN t0.c23 WHEN t0.c23 THEN x'8147' WHEN v0.c0 THEN t0.c23 WHEN t0.c11 THEN t0.c23 ELSE x'' END AS BLOB), CASE WHEN ((t0.c11)LIKE(x'')) THEN t0.c23 ELSE ((t0.c23) NOT NULL) END, ((LIKE(t0.c11, v0.c0, ''))OR(((t0.c11)IS NOT(NULL)))) FROM v0, t0 WHERE (((('{')<=(0.6320690644740202)) IN ())) EXCEPT SELECT DISTINCT (((((1.7976931348623157E308, t0.c0, v0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c11, t0.c23, t0.c0)))) NOTNULL), ((((((t0.c0) NOT BETWEEN (t0.c11) AND (t0.c23)))OR(COALESCE(DISTINCT v0.c0, t0.c0))))OR('162816726')), t0.c23 FROM t0;SELECT ALL (((CASE t0.c23  WHEN t0.c0 THEN t0.c11 END, LIKELY(DISTINCT t0.c0), ((t0.c0) IS FALSE)))<((((v0.c0)>(t0.c23)), ((t0.c11)OR(v0.c0)), CASE t0.c11  WHEN t0.c0 THEN t0.c0 END))) FROM v0, t0; -- 1ms;
SELECT DISTINCT (((((t0.c11 IN ()))OR(GROUP_CONCAT(v0.c0))))OR(CAST(v0.c0 AS REAL))) FROM t0 WHERE (CASE WHEN CAST(x'' AS NUMERIC) THEN (('-863596670') BETWEEN (NULL) AND (x'')) END);SELECT DISTINCT ((((((t0.c23)OR(v0.c0)))AND(t0.c11))) NOT BETWEEN ((- (v0.c0))) AND ((((t0.c11, t0.c0, t0.c0, t0.c0, t0.c23))=((t0.c11, 0.5363386034344558, t0.c23, x'a1dc', t0.c23))))), ROW_NUMBER() OVER ( ORDER BY (((x'1459') NOTNULL) IN (((t0.c23)||(t0.c0)))) RANGE  UNBOUNDED PRECEDING), (((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) COLLATE BINARY COLLATE RTRIM, ((((((t0.c0)||(t0.c0)))AND(t0.c11)))AND((((t0.c11)) NOT BETWEEN ((t0.c23)) AND ((0x4399a219))))), (- (((NULL) BETWEEN (t0.c11) AND (1.333188213E9)))) FROM v0 WHERE (CAST(PRINTF(x'') AS TEXT));SELECT ALL (- ((- (v0.c0)))) FROM t0, v0 WHERE (((((NULL)>>(x'')))&(CAST(x'' AS TEXT)))); -- 0ms;
SELECT DISTINCT (('' IN (t0.c23)) IN ()) FROM v0 WHERE (NULL); -- 0ms;
SELECT (((t0.c0, t0.c23, t0.c0)) NOT BETWEEN ((t0.c23, v0.c0, t0.c0)) AND ((t0.c0, 0.8077245235372105, t0.c23))) COLLATE RTRIM FROM t0, v0 WHERE ((((('665414314')|(-1169990416))) NOTNULL)); -- 1ms;
SELECT ALL CASE (((NULL))<=((t0.c11)))  WHEN (t0.c23 IN (t0.c0, t0.c0)) THEN (- (t0.c23)) END, ROW_NUMBER() OVER (), SUM(CASE NULL  WHEN t0.c23 THEN NULL END) FILTER(WHERE CASE WHEN t0.c11 COLLATE RTRIM THEN (NOT (t0.c11)) END) OVER () FROM v0, t0; -- 0ms;
SELECT CASE t0.c23 COLLATE RTRIM  WHEN 0x1974d501 THEN ((t0.c11)>>(v0.c0)) WHEN x'' THEN (((t0.c23)) BETWEEN ((t0.c11)) AND ((t0.c23))) WHEN ((((t0.c11)AND(t0.c23)))AND(t0.c0)) THEN ((v0.c0)IS(t0.c0)) ELSE (t0.c0 IN ()) END FROM v0, t0 WHERE (LIKELIHOOD(DISTINCT (((x'', 0xffffffffbfe90269, NULL, x'', '-238446218')) NOT BETWEEN ((x'', x'', x'', '-857052289', NULL)) AND (('-', '-744888248', NULL, NULL, ']7o'))), 0.6050236489388591)); -- 0ms;
SELECT ALL ((((t0.c11)*(t0.c0))) NOT BETWEEN ('1765502017') AND ((((v0.c0, NULL, t0.c0, t0.c11, t0.c11))<((v0.c0, t0.c0, t0.c23, t0.c11, t0.c23))))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((t0.c11)%(v0.c0)))IS NOT(((((-2.13052643E9)AND(t0.c0)))AND(v0.c0)))) FROM t0;SELECT DISTINCT ((((((t0.c23)OR(t0.c11)))OR(t0.c11))) NOT BETWEEN (IFNULL('', 0X2e36e144)) AND (CASE WHEN t0.c11 THEN 0.8852416807532727 END)), MAX(NULL), ((CASE WHEN v0.c0 THEN t0.c0 END) NOT BETWEEN (CAST(t0.c23 AS BLOB)) AND (CHAR(t0.c23, x'', t0.c23))) FROM t0 LIMIT 413619253 OFFSET 1904035936;SELECT DISTINCT ((CAST(t0.c11 AS TEXT))AND((t0.c0 IN (t0.c11, t0.c23)))) FROM v0, t0 GROUP BY ((((t0.c0)GLOB(t0.c11))) IS FALSE), (((~ (t0.c0)))-(1.333188213E9)), STRFTIME(((t0.c23) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c23) NOT BETWEEN (t0.c11) AND (0.3593889573941297)), (~ (v0.c0)), CASE WHEN t0.c23 THEN t0.c11 ELSE t0.c23 END, '502453232'); -- 0ms;
SELECT DISTINCT (CASE WHEN t0.c23 THEN t0.c11 ELSE t0.c11 END IN ()), '', LAST_VALUE(HEX((('-1408338893') NOT NULL))) OVER () FROM v0, t0; -- 0ms;
SELECT ALL 0x402e9914 FROM v0, t0 WHERE ((((((0.1047010830033609)) NOT BETWEEN (('w䡍')) AND (('dNeu싴[S<')))) ISNULL)) LIMIT -438201055 OFFSET 2085789273; -- 1ms;
SELECT DISTINCT t0.c0, ((ABS(DISTINCT t0.c0)) NOTNULL), ((CAST(t0.c11 AS INTEGER))IS NOT((((v0.c0))>=((x''))))), GROUP_CONCAT(((v0.c0) ISNULL)), CAST(SUBSTR(t0.c0, t0.c23) AS INTEGER) FROM v0, t0 WHERE (((((((0.6405650744731775)AND(3.29989098E8)))AND('2110838420')))OR(((0.5750203325935467)!=(NULL))))); -- 0ms;
SELECT ALL AVG(((t0.c11) IS TRUE) COLLATE RTRIM) FROM t0, v0 WHERE (((((NULL) ISNULL)) NOT BETWEEN (((-1.378990309E9) ISNULL)) AND (TYPEOF(DISTINCT x'')))) ORDER BY (NOT (((t0.c0)&(t0.c23)))) ASC; -- 0ms;
SELECT ALL t0.c11, '', CASE ((v0.c0) IS FALSE)  WHEN t0.c23 THEN t0.c0 ELSE CASE t0.c0  WHEN t0.c23 THEN v0.c0 ELSE v0.c0 END END FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((((x'ed5a')AND(t0.c23)))AND(((('/')) NOT BETWEEN ((t0.c23)) AND ((t0.c23))))))AND(t0.c0 COLLATE BINARY)) FROM v0, t0 WHERE (CASE NULL  WHEN DATETIME(x'', 0Xffffffffd6220987, '665414314') THEN NULL COLLATE BINARY ELSE ((x'')|(0.6648444183816435)) END) ORDER BY (((((((((((NULL))>=((t0.c11))))OR('2075423962')))OR(((((((((((((t0.c11)AND(t0.c0)))OR(v0.c0)))OR('542866353')))OR(t0.c11)))OR(t0.c0)))AND(t0.c11)))))OR((+ (v0.c0)))))OR(CAST(t0.c0 AS TEXT))); -- 0ms;
SELECT DISTINCT ((LIKELY(v0.c0))||(((t0.c23) NOT BETWEEN (-633368029) AND (t0.c23)))) FROM v0;SELECT DISTINCT ((t0.c0)>(t0.c11)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT (~ (((v0.c0) BETWEEN (t0.c23) AND (t0.c0)))) FROM t0;SELECT DISTINCT ((((v0.c0) IS TRUE)) NOTNULL), '-727150727', CAST((t0.c11 IN ()) AS BLOB) FROM t0, v0; -- 0ms;
SELECT DISTINCT MAX((NOT (t0.c23))) FROM t0, v0 WHERE (((((('-238446218' IN ()))AND(((0x3baba33d)OR(x'2312')))))OR((((('1120054049')AND(NULL)))AND(x''))))); -- 0ms;
SELECT DISTINCT SUM((- (t0.c11))) OVER () FROM t0 WHERE (UPPER(DISTINCT (x'' IN ()))); -- 0ms;
SELECT ALL SUM(NULL COLLATE BINARY) OVER () FROM t0, v0 WHERE (((CAST(x'' AS NUMERIC)) NOTNULL)); -- 0ms;
SELECT DISTINCT COUNT(((0.21995649177133658)*(t0.c0))) FROM t0 NOT INDEXED WHERE (NULL) GROUP BY ((((v0.c0) NOT BETWEEN (t0.c23) AND (v0.c0)))LIKE(v0.c0)) HAVING (((- (NULL))) BETWEEN (x'') AND (((t0.c23) NOT NULL)));SELECT GROUP_CONCAT(CAST('' AS NUMERIC)) OVER () FROM v0, t0 WHERE (((((NULL) IS FALSE))<=((('') NOT BETWEEN (0.43014423735637974) AND (x''))))); -- 0ms;
SELECT DISTINCT LAG(t0.c11, (~ (((('-334085511')) NOT BETWEEN ((t0.c11)) AND ((t0.c11))))), UPPER(DISTINCT ((t0.c23) ISNULL))) OVER () FROM v0, t0; -- 0ms;
SELECT ALL RANK() OVER (), MIN(LIKELIHOOD(NULL, 0.0071518359031174095)), MAX((t0.c11 IN (t0.c0))) FROM t0 WHERE (((x'') NOT BETWEEN (((x'')<(x''))) AND ((('665414314')>=(NULL))))) LIMIT -803900986 OFFSET 1140955279; -- 0ms;
SELECT v0.c0 FROM t0, v0 WHERE ((((((NULL)/(0.532082925480381))))>=((((x'') BETWEEN (NULL) AND (0.5725088961940048)))))); -- 0ms;
SELECT DISTINCT CASE WHEN NULL COLLATE NOCASE THEN CAST(t0.c0 AS BLOB) WHEN (('t>el') BETWEEN (t0.c11) AND (t0.c11)) THEN CASE t0.c0  WHEN v0.c0 THEN t0.c23 ELSE v0.c0 END WHEN ((t0.c23)*(v0.c0)) THEN v0.c0 END, AVG(((t0.c11) NOT BETWEEN (t0.c11) AND (t0.c0))) OVER (), CAST(t0.c23 AS TEXT), ((t0.c11 COLLATE BINARY)||(LIKELIHOOD(t0.c0, 0.7638577323405692))), CUME_DIST() OVER () FROM v0 WHERE ((((x'' IN ())) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (((NULL)<=(NULL)))));SELECT DISTINCT ((GROUP_CONCAT(v0.c0))<=(0.6630472459379592)) FROM t0, v0 WHERE ((~ (x'' COLLATE NOCASE))); -- 0ms;
SELECT x'8a56b215', t0.c23, CUME_DIST() OVER () FROM v0, t0; -- 1ms;
SELECT ALL x'' FROM t0, v0 WHERE ((((0.05727225435913952)) BETWEEN ((NULL COLLATE RTRIM)) AND ((1952930327)))) GROUP BY (((NULLIF(t0.c23, t0.c11)))>=((UPPER(DISTINCT t0.c11)))) HAVING CASE COUNT(*)  WHEN 6.44518592E8 THEN ((t0.c0)>(t0.c0)) ELSE (('1552464059') NOT BETWEEN (NULL) AND (t0.c0)) END; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM v0, t0; -- 0ms;
SELECT (((v0.c0) NOT BETWEEN (t0.c23) AND (t0.c0)) IN ()) FROM v0, t0 GROUP BY ((((v0.c0) NOT BETWEEN (t0.c11) AND (t0.c0))) BETWEEN ((((t0.c0, t0.c23, t0.c23)) NOT BETWEEN ((t0.c11, v0.c0, t0.c11)) AND ((t0.c11, t0.c23, t0.c0)))) AND ((t0.c11 IN ()))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC))OR((t0.c23 IN ()))) FROM v0 WHERE ((NOT (x'' COLLATE RTRIM)));SELECT DISTINCT TOTAL(((v0.c0) BETWEEN (t0.c23) AND ('i*1/L~'))) FILTER(WHERE CAST(t0.c11 AS NUMERIC) COLLATE NOCASE) OVER ( PARTITION BY ((((')')AND(UPPER(v0.c0))))OR(v0.c0 COLLATE RTRIM)), CAST(json_valid(t0.c0) AS BLOB)) FROM t0, v0; -- 0ms;
SELECT ALL (((t0.c23) BETWEEN (t0.c11) AND (t0.c11)) IN ()), COUNT((- (t0.c23))), ((t0.c11 IN ()) IN ()) FROM t0 ORDER BY CASE WHEN ((t0.c0)<(t0.c23)) THEN (- (t0.c0)) WHEN UNLIKELY(DISTINCT v0.c0) THEN CAST(t0.c11 AS TEXT) WHEN ((t0.c23) NOT BETWEEN (t0.c23) AND (t0.c23)) THEN t0.c11 COLLATE NOCASE ELSE ((v0.c0)>>(v0.c0)) END  NULLS LAST;SELECT DISTINCT NULL FROM v0; -- 0ms;
SELECT (((x'', ((t0.c23)<=(t0.c0)), CAST(t0.c0 AS NUMERIC)))<=((((t0.c23)+(t0.c11)), (((t0.c0))=((t0.c0))), COUNT(*)))), CAST(CASE v0.c0  WHEN t0.c0 THEN t0.c23 ELSE t0.c11 END AS REAL), (((v0.c0) NOTNULL) IN ()), ((json_array_length(t0.c11, t0.c0))/(t0.c23)), MAX(1545963972) FROM v0, t0;SELECT DISTINCT (- (((v0.c0) BETWEEN (t0.c23) AND (v0.c0)))) FROM t0, v0; -- 0ms;
SELECT ALL NTILE((- (((t0.c11) ISNULL)))) OVER () FROM t0, v0 WHERE ((((NULL) BETWEEN ('182395892') AND (x'')) IN ())); -- 0ms;
SELECT DISTINCT ((((t0.c23) NOT BETWEEN (t0.c11) AND (t0.c23))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((((t0.c23)OR(t0.c11)))AND(t0.c0)))), ((((t0.c23) NOT NULL)) IS TRUE), ((IFNULL(t0.c0, t0.c23))<=(-1.641795205E9)) FROM v0, t0 ORDER BY ((CAST(v0.c0 AS REAL)) BETWEEN (((v0.c0)-(t0.c0))) AND (((t0.c11)>=(NULL)))), ((('-727150727')) NOT BETWEEN ((((t0.c0) IS FALSE))) AND ((((t0.c0) NOT BETWEEN (NULL) AND (t0.c23))))) ASC; -- 0ms;
SELECT DISTINCT v0.c0, ((((t0.c23) NOT BETWEEN (0xfffffffff0d0de57) AND (v0.c0))) NOT BETWEEN (CASE t0.c0  WHEN v0.c0 THEN t0.c11 WHEN t0.c0 THEN t0.c23 WHEN t0.c11 THEN t0.c23 END) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c23)))), (MAX('J') IN ()) FROM t0, v0; -- 0ms;
SELECT ((t0.c11) ISNULL) COLLATE BINARY FROM v0, t0 WHERE (((NULL COLLATE RTRIM)>>(((0.1047010830033609) NOT BETWEEN ('٣䘸✶') AND (1.805155472E9))))); -- 0ms;
SELECT ALL LAG(CAST((((t0.c23, t0.c11, t0.c23))<>((t0.c0, t0.c23, t0.c23))) AS REAL), LIKELY(((t0.c11)LIKE(t0.c0))), (~ ('hS' COLLATE NOCASE))) OVER (), CASE WHEN NULL THEN UNLIKELY(t0.c23) WHEN (+ (v0.c0)) THEN CASE t0.c23  WHEN v0.c0 THEN t0.c23 END WHEN ((t0.c23) BETWEEN (v0.c0) AND (t0.c11)) THEN (NOT (t0.c11)) ELSE (t0.c11 IN ()) END, CASE WHEN (t0.c23 IN ()) THEN json_insert(t0.c23, t0.c0, t0.c23, t0.c23, v0.c0) WHEN NULLIF(t0.c0, NULL) THEN ((t0.c0)OR(x'')) WHEN CAST(t0.c11 AS NUMERIC) THEN ((v0.c0)>>(t0.c11)) ELSE 644310164 END FROM t0;SELECT DISTINCT (((t0.c23)IS(x'')) IN ()), MAX(CAST(x'' AS BLOB)), (((((((t0.c23)) BETWEEN ((t0.c0)) AND ((t0.c23))))OR(((v0.c0) NOT BETWEEN (t0.c11) AND (v0.c0)))))OR(((t0.c0)IS NOT(t0.c11)))) FROM t0;SELECT DISTINCT LAST_VALUE(CASE WHEN ((v0.c0) ISNULL) THEN (v0.c0 IN ()) ELSE ((v0.c0) IS FALSE) END) OVER () FROM v0 ORDER BY ((+ (t0.c0)) IN ()) ASC, ((((((v0.c0)AND(t0.c23)))OR(t0.c0)))&((((v0.c0, x'', v0.c0))>((t0.c23, v0.c0, NULL))))) ASC, ((((v0.c0 IN ())))=((((((t0.c11)OR(t0.c23)))AND(t0.c0)))));SELECT (+ (CAST(t0.c0 AS NUMERIC))), LAG(v0.c0, ((((SQLITE_COMPILEOPTION_USED(v0.c0))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(SQLITE_COMPILEOPTION_USED(v0.c0))), ((((v0.c0)%(v0.c0))) NOT NULL)) OVER (), ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ('1001104189') AND (v0.c0)) FROM v0 WHERE ((- (((0Xffffffffc28f9fdc) NOTNULL))));SELECT DISTINCT (((0.9061825145374485)) NOT BETWEEN ((t0.c23)) AND ((x''))) COLLATE RTRIM FROM t0, v0 WHERE ((((((x''))=(('1277747367'))))-((('1296367412')>=('-302916886'))))); -- 0ms;
SELECT DISTINCT CAST(0.006795246843419367 AS INTEGER) FROM v0, t0; -- 0ms;
SELECT ALL (- (t0.c11 COLLATE RTRIM)) FROM v0 WHERE (CAST(CAST(NULL AS NUMERIC) AS BLOB));SELECT ALL ((CASE WHEN t0.c0 THEN t0.c23 END) NOT NULL) FROM t0 WHERE (((((x'efd4') BETWEEN ('-2130526430') AND (NULL))) ISNULL)) GROUP BY t0.c23, (CAST(t0.c0 AS INTEGER) IN ()), ((t0.c11)IS(0xffffffffbaa7464c)) COLLATE RTRIM HAVING COALESCE(NULL, ((v0.c0)-(t0.c11))) LIMIT 1076795668 OFFSET 1775083242;SELECT ALL CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC), CASE t0.c0  WHEN t0.c23 THEN t0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE, ((t0.c11 IN (t0.c11, -2018862945)) IN ()) FROM v0 WHERE (((((NULL) NOT NULL))GLOB(NULL))) ORDER BY ((IFNULL(DISTINCT v0.c0, t0.c0)) BETWEEN (((((v0.c0)OR(t0.c11)))AND(t0.c11))) AND (((t0.c0) NOT BETWEEN (t0.c23) AND (t0.c23))))  NULLS LAST, ((CASE WHEN t0.c11 THEN t0.c0 ELSE t0.c11 END)>(LIKELY(DISTINCT t0.c0)))  NULLS LAST;SELECT DISTINCT (v0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE FROM v0, t0; -- 0ms;
SELECT DISTINCT CAST(t0.c11 AS TEXT) FROM v0 WHERE (((((((((-6.22148876E8)AND(x'198d')))OR('RGkp!9Y2K')))OR(NULL)))AND(2.09054687E9)) COLLATE RTRIM);SELECT DISTINCT ((((((((v0.c0)OR(t0.c11)))AND(t0.c11)))OR(v0.c0 COLLATE BINARY)))AND(((t0.c11)LIKE(t0.c23)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT NULL, ((NOT (t0.c11)) IN ()), CAST(((t0.c11) IS TRUE) AS NUMERIC) FROM t0, v0 EXCEPT SELECT DISTINCT (((((t0.c23) ISNULL)))>=((((v0.c0) BETWEEN (t0.c11) AND (v0.c0))))), (((CASE t0.c11  WHEN NULL THEN t0.c23 ELSE t0.c23 END))!=(((((x'')) NOT BETWEEN ((t0.c11)) AND ((t0.c11)))))), CASE ((t0.c11)+(t0.c23))  WHEN ((t0.c23)>(t0.c11)) THEN t0.c23 COLLATE NOCASE ELSE (+ (t0.c23)) END FROM v0, t0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)); -- 1ms;
SELECT CAST(((((((((t0.c11)AND(v0.c0)))OR(t0.c11)))AND(x'add3')))OR(t0.c11)) AS REAL), CAST(MAX(t0.c11) AS INTEGER), ((((t0.c23) NOT BETWEEN (t0.c23) AND (t0.c23)))+(((((((((((((t0.c0)OR('473137199')))AND(t0.c0)))AND(t0.c11)))OR(t0.c0)))AND(t0.c23)))AND(t0.c23)))) FROM t0, v0 WHERE (CAST(((x'')==('GG%n')) AS REAL)) LIMIT -156282146 OFFSET 644518592; -- 0ms;
SELECT CAST(((t0.c11) IS FALSE) AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT ((((v0.c0)OR((((v0.c0)) NOT BETWEEN ((t0.c11)) AND ((t0.c11))))))AND(TOTAL(v0.c0))) FROM t0, v0; -- 0ms;
SELECT DISTINCT (~ ((x'' IN (t0.c0)))) FROM v0, t0 LIMIT -944252368 OFFSET -1734121866; -- 0ms;
SELECT DISTINCT MIN((NOT (v0.c0))) FROM v0 NOT INDEXED WHERE (DATE(CASE WHEN '' THEN '879900319' WHEN '-1764027024' THEN '-1408338893' WHEN NULL THEN x'' END, (((NULL, x'f530', 0.884932087755158)) NOT BETWEEN ((0.006320196397705757, 0.3008838084237415, 0.3277486614342203)) AND (('*f', '5[', NULL))), '' COLLATE RTRIM, (~ ('-744888248')), '342670466')); -- 1ms;
SELECT DISTINCT LEAD(((((t0.c0 IN ()), LIKELY(v0.c0), x''))!=((((t0.c23)-(v0.c0)), NULL, ((t0.c0)<=(t0.c0))))), CAST(CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE 0.5504937511894834 END AS TEXT), CAST(t0.c0 AS BLOB)) OVER (), ((t0.c23)<>(v0.c0)) COLLATE BINARY COLLATE RTRIM, CASE COUNT(*)  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c11)) THEN ((t0.c23) BETWEEN (t0.c0) AND (t0.c11)) ELSE CASE WHEN v0.c0 THEN v0.c0 END END FROM v0, t0 WHERE (CASE WHEN ('J/' IN (1.557320795E9)) THEN x'' END); -- 0ms;
SELECT DISTINCT 0.477619148305338, (- (((t0.c0) IS TRUE))), ((('' IN ())) NOTNULL) FROM v0;SELECT ALL ((((t0.c11 COLLATE BINARY)AND(((('-1268609396')) BETWEEN (('1644803721')) AND ((t0.c0))))))AND(SQLITE_COMPILEOPTION_GET(t0.c23))) FROM v0, t0 WHERE (CASE WHEN (((0X26156186))<(('-5652460'))) THEN ((x'')LIKE(0.3008838084237415)) ELSE CASE WHEN -2.009488059E9 THEN '304985870' ELSE x'bedb' END END); -- 0ms;
SELECT DENSE_RANK() OVER () FROM v0 WHERE ((((CAST('n%' AS REAL), '413619253', CASE x'c22e'  WHEN '{ꅨ' THEN x'' ELSE NULL END))>((CAST(x'' AS NUMERIC), CASE WHEN 0.9881318559990185 THEN '-1888597083' WHEN x'' THEN '?9' WHEN NULL THEN '1971650065' END, CASE WHEN x'' THEN 0.6320690644740202 WHEN 0.45658694799363464 THEN '1557320795' WHEN 'gؿOa\' THEN 0.6630472459379592 ELSE -1349770082 END)))); -- 1ms;
SELECT DISTINCT CAST(t0.c0 AS TEXT) FROM t0, v0 WHERE (((((75076927, 0X6cc9f4c2, ''))<=((1341104594, -6.39223842E8, '0aBCL'))) IN ())) EXCEPT SELECT ALL (t0.c11 COLLATE RTRIM IN ()) FROM v0, t0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM v0, t0 WHERE ((+ (((x'')>>(x''))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE t0.c23  WHEN 'hS' THEN t0.c23 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c11 END) OVER () FROM t0, v0; -- 0ms;
SELECT ALL ((CAST(t0.c23 AS INTEGER)) NOT NULL) FROM v0, t0; -- 1ms;
SELECT ((('1140955279') NOT BETWEEN (t0.c23) AND (t0.c11)) IN ()), GROUP_CONCAT(t0.c11), (- (CASE t0.c0  WHEN 0.8564295171841165 THEN t0.c0 END)) FROM v0, t0 WHERE (x'') ORDER BY t0.c23 DESC  NULLS LAST, ((CASE WHEN t0.c0 THEN t0.c23 ELSE t0.c0 END) BETWEEN (((v0.c0)<(v0.c0))) AND ((((v0.c0, t0.c23, t0.c0)) NOT BETWEEN (('-26933527', NULL, t0.c0)) AND ((t0.c11, v0.c0, t0.c0))))); -- 0ms;
SELECT ALL ((x'')>>(MIN(v0.c0))) FROM v0; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c11)||(v0.c0)) THEN LOWER(DISTINCT t0.c0) ELSE ((v0.c0)>>(t0.c23)) END FROM v0 WHERE (((((0.08858459186001533) NOT BETWEEN (-1513996690) AND ('1363935031'))) BETWEEN (NULL) AND (x'b19c')));SELECT SQLITE_VERSION() FROM v0 WHERE ((0Xffffffffd1383d4b IN ())); -- 0ms;
SELECT DISTINCT (((((t0.c11)AND(t0.c0)))AND(t0.c0)) IN ()) FROM t0 WHERE (((((((0.16062412607432208)AND('')))OR('E,7')))%('' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((v0.c0 IN ())) NOTNULL), GROUP_CONCAT(((((t0.c23)AND(t0.c23)))OR(v0.c0))), (((HEX(t0.c11)))>(((v0.c0 IN ())))), UPPER(DISTINCT UNLIKELY('-1075248535')), v0.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM FROM v0;SELECT DISTINCT x'' FROM v0; -- 0ms;
SELECT DISTINCT x'74541515' FROM v0 WHERE ((((((((((+ (NULL)))OR(((((((((NULL)OR(0.9352811383062098)))OR('0.9352811383062098')))AND(x'')))OR(0.535154667607733)))))OR(TRIM(x''))))OR('2103668797' COLLATE BINARY)))AND(LAST_INSERT_ROWID()))); -- 0ms;
SELECT ALL LEAD(v0.c0, CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c11)))OR(t0.c11)))AND(t0.c0)) AS TEXT), '1076795668') OVER () FROM v0, t0 ORDER BY (((-1347478433)AND(v0.c0)) IN (CAST(t0.c0 AS REAL), ((t0.c0)AND(t0.c11)))); -- 0ms;
SELECT DISTINCT ((((v0.c0)<(t0.c0))) BETWEEN (((t0.c11) BETWEEN ('-784564412') AND ('-857052289'))) AND (((t0.c0)==(t0.c0)))) FROM t0, v0 ORDER BY ((v0.c0) NOTNULL) COLLATE RTRIM ASC  NULLS FIRST, (t0.c23 IN ()) COLLATE BINARY ASC  NULLS LAST; -- 0ms;
SELECT ((((t0.c23 COLLATE NOCASE)OR(LTRIM(t0.c23, v0.c0))))AND(((('-+%L+8'))<=((v0.c0))))) FROM t0, v0 WHERE (((((NULL)GLOB('	vmw\np(l')))!=(((((((((((((NULL)OR('665414314')))OR(NULL)))AND('-364872313')))OR(0.6773863704129061)))AND(x'2c25')))AND(0xffffffffc639a111))))); -- 0ms;
SELECT ALL (+ (t0.c23)) COLLATE NOCASE FROM v0;SELECT ALL FIRST_VALUE((((t0.c11))<=(((t0.c23 IN ()))))) OVER (), (('')!=((((t0.c11, t0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c11, t0.c23)) AND ((t0.c11, v0.c0, ''))))), CUME_DIST() OVER () FROM v0, t0 WHERE (((1805155472 COLLATE BINARY)<((~ (0X1df2d3f0))))); -- 0ms;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY ((x'') ISNULL), 'k', -8.84361935E8 LIMIT -1167181543; -- 0ms;
SELECT DISTINCT ((NULL)IS NOT(((((((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))OR(t0.c11)))AND(t0.c11)))AND(t0.c11)))OR(v0.c0)))) FROM v0, t0 WHERE ((+ (((NULL) NOT BETWEEN (x'') AND (0.7036515605665326))))) ORDER BY CAST(v0.c0 AS NUMERIC); -- 0ms;
SELECT DISTINCT (NOT (((t0.c23)&(t0.c23)))) FROM v0;SELECT DISTINCT CASE (+ (t0.c11))  WHEN ((t0.c11) NOTNULL) THEN CASE WHEN t0.c11 THEN t0.c23 ELSE 0Xffffffffa52c94e1 END END FROM t0, v0; -- 0ms;
SELECT ALL ((t0.c0 COLLATE BINARY) NOTNULL) FROM v0, t0; -- 0ms;
SELECT DISTINCT TOTAL(CAST(t0.c23 AS TEXT)), ((SUM(t0.c0)) IS FALSE), ((COUNT(t0.c23))+(t0.c0)), PRINTF((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((t0.c11)IS(v0.c0)), ((t0.c11)<=(t0.c11))), TYPEOF(((t0.c0)/(t0.c11))) FROM t0, v0 WHERE (((CAST('2090546870' AS REAL))IS NOT(((-3.34085511E8)=(x''))))); -- 0ms;
SELECT (((t0.c11 IN ()))|(((((t0.c0)OR(v0.c0)))OR(v0.c0)))) FROM v0, t0 GROUP BY 0.6604111149346438; -- 0ms;
SELECT CAST(((t0.c11)|(t0.c0)) AS TEXT) FROM t0; -- 1ms;
SELECT (((((((((v0.c0 IN ()))AND(0.47945962812634435)))OR(ABS(DISTINCT t0.c11))))AND((NOT (t0.c23)))))OR(t0.c11)) FROM t0, v0; -- 0ms;
SELECT DISTINCT (((((+ (v0.c0)))AND((((t0.c11, t0.c0, t0.c11)) BETWEEN ((t0.c0, v0.c0, t0.c23)) AND ((t0.c11, t0.c23, v0.c0))))))OR((t0.c11 IN ()))) FROM v0 GROUP BY ((((t0.c11) NOT BETWEEN (0.8371616009488433) AND (t0.c23))) BETWEEN (t0.c11) AND (t0.c23 COLLATE RTRIM)) HAVING (((('1765502017')AND(((((v0.c0)AND(t0.c11)))AND(t0.c23)))))AND((((t0.c23, t0.c23, t0.c23))>=((t0.c23, t0.c11, t0.c11)))));SELECT DISTINCT TOTAL(((t0.c0) NOT NULL)) OVER (), v0.c0, CUME_DIST() OVER () FROM v0, t0; -- 0ms;
SELECT DISTINCT v0.c0 FROM t0, v0; -- 0ms;
SELECT (- ((+ (t0.c23)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT (((t0.c23) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CAST(t0.c11 AS INTEGER), (((t0.c0))<((v0.c0))))) FROM v0, t0; -- 1ms;
SELECT DISTINCT CAST((((((((((((('981025239')OR(v0.c0)))OR(v0.c0)))AND(t0.c23)))AND(v0.c0)))AND(t0.c23)))OR(t0.c0)) AS REAL) FROM v0 WHERE (((((((((LOWER('-2015636886'))OR('~abC(' COLLATE BINARY)))AND(((NULL) NOTNULL))))AND(LIKE(x'fac72e0f', NULL))))OR((((((((('')AND(2132929868)))AND(0.8480607502196357)))OR(x'')))AND(x'')))));SELECT DISTINCT (((t0.c11, t0.c23, v0.c0)) BETWEEN ((CAST(t0.c23 AS BLOB), CASE t0.c11  WHEN v0.c0 THEN t0.c23 END, ((((t0.c11)OR(t0.c0)))OR(t0.c23)))) AND ((COUNT(t0.c11), (('')GLOB(t0.c0)), CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END))), t0.c11 COLLATE RTRIM, CAST((- (t0.c23)) AS BLOB) FROM t0;SELECT DISTINCT t0.c0 FROM t0 WHERE (((((''))>((x''))) IN ())); -- 0ms;
SELECT ((((t0.c23)LIKE(0.20573697685640213)))<<(((t0.c23) BETWEEN (t0.c11) AND (t0.c11)))), ((v0.c0) NOT NULL) COLLATE RTRIM, SQLITE_COMPILEOPTION_USED(CAST(t0.c0 AS NUMERIC)) FROM t0, v0; -- 0ms;
SELECT ALL ((((t0.c23) IS TRUE)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((x'c90a') NOT NULL))) FROM v0;SELECT (((((t0.c0, t0.c0, t0.c23)) NOT BETWEEN ((t0.c23, v0.c0, v0.c0)) AND ((t0.c23, t0.c23, t0.c23))))<(((v0.c0) IS FALSE))), ((0.7642026402155208)IS NOT(v0.c0 COLLATE RTRIM)), ((t0.c0 IN ()) IN (CAST(t0.c23 AS TEXT))) FROM v0, t0; -- 0ms;
SELECT ALL LIKELIHOOD(NULL, 0.3041266648048204), v0.c0, ((- (v0.c0)) IN ()) FROM t0, v0; -- 0ms;
SELECT DISTINCT t0.c0, 0.36638326731298365, t0.c11, ((((t0.c23))=(('GG%n'))) IN ()), (((v0.c0 IN (t0.c11, t0.c23))) BETWEEN (((t0.c23)/(v0.c0))) AND ((((v0.c0)) BETWEEN ((t0.c11)) AND ((t0.c0))))) FROM v0;SELECT DISTINCT AVG(HEX(t0.c11)), ((((((v0.c0) BETWEEN (t0.c11) AND (t0.c0)))OR(t0.c11)))AND((((t0.c23)) BETWEEN ((v0.c0)) AND ((t0.c0))))), NTILE((- (v0.c0))) OVER () FROM v0 WHERE (((((6.8241485E7) NOT NULL)) IS FALSE));SELECT ((LIKELIHOOD(t0.c0, 0.6394405330534957))<<(((t0.c23) NOT NULL))) FROM t0 FULL OUTER JOIN v0 ON ((t0.c11 COLLATE BINARY)+(UNLIKELY(t0.c11))) LIMIT -277702951 OFFSET -1468356789; -- 0ms;
SELECT DISTINCT ((((t0.c23) BETWEEN (t0.c0) AND (t0.c11))) IS FALSE), AVG(t0.c23) OVER (), COUNT((v0.c0 IN (v0.c0))) FILTER(WHERE ((t0.c0)OR(1.321646326E9)) COLLATE RTRIM) OVER () FROM t0 WHERE ((- ('1467:4370561755962382893T5571348277652149545-1480070533517894381 277--5562524057261216058 450:414 ')) COLLATE NOCASE);SELECT v0.c0 FROM v0, t0 WHERE ((((((('-502890752'))=((0X79b7d457)))))>(((((x'', 0.4878757983239066, '1223628901'))=((0.3055050429701436, NULL, 0.05727225435913952))))))) GROUP BY CAST(((t0.c0)&(NULL)) AS TEXT) HAVING MIN(json(t0.c0)); -- 0ms;
SELECT DISTINCT ((((NULL)/(t0.c0)))<((NOT (v0.c0)))), NULL, v0.c0 FROM t0, v0; -- 0ms;
SELECT DISTINCT (NOT (x'')) FROM t0, v0 LIMIT -1220618921 OFFSET -914948167; -- 0ms;
SELECT DISTINCT ((((t0.c11)OR(v0.c0)))OR(t0.c23)) COLLATE NOCASE FROM t0;SELECT ALL (('(k') BETWEEN (x'') AND (t0.c11)) COLLATE NOCASE FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c23)!=(t0.c11)))>>(((((((((t0.c11)OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))OR(t0.c0)))) FROM v0 WHERE ((((((((('')AND('2129250890')))AND(x'97ec')))OR((- (0.8077237781310743)))))OR((('-2049062769') BETWEEN (0.27780701912007355) AND (2100877783))))) ORDER BY TRIM(DISTINCT (+ (v0.c0)), ((v0.c0)/(t0.c23))) DESC  NULLS LAST;SELECT DISTINCT ((ABS(DISTINCT v0.c0))IS(((t0.c11)>>(v0.c0)))) FROM v0 WHERE (((CASE '-1220618921'  WHEN '0.45295878072711315' THEN 0.828009672010634 WHEN 'I/ko7' THEN '-InfinityE' WHEN NULL THEN '0.9007324441020315' END)!=(((('-290474163'))<=(('-1782309994'))))));SELECT ALL (((CASE v0.c0  WHEN v0.c0 THEN t0.c11 END))==((((t0.c11) ISNULL)))), CAST((t0.c0 IN ()) AS TEXT), (+ (t0.c0)) COLLATE BINARY COLLATE RTRIM, ((((((((t0.c0)AND('-868851139')))OR(v0.c0)))OR(t0.c23)))OR(v0.c0)) COLLATE BINARY, NTH_VALUE((HEX(t0.c23) IN ()), (((t0.c11)) NOT BETWEEN ((((t0.c23)GLOB(t0.c23)))) AND (((x'' IN ()))))) OVER () FROM t0, v0 WHERE ((((((~ ('0.0')))AND((('-1305411399')>=(0.8152610041070435)))))AND((NOT (0.8748396121324473))))); -- 0ms;
SELECT (((('now')AND(t0.c23)))OR(v0.c0)) COLLATE RTRIM FROM t0 WHERE (((((x'6319')*('-0.0'))) BETWEEN ((x'' IN (0X25fd5ab1, NULL))) AND (x'' COLLATE NOCASE))) LIMIT -219487037 OFFSET 162816726;SELECT DISTINCT (((((v0.c0)) NOT BETWEEN ((t0.c23)) AND ((t0.c11)))) NOT BETWEEN (0xffffffff81e24863) AND ((('+&K.&Hj') NOT BETWEEN (t0.c0) AND (v0.c0)))) FROM t0;SELECT CAST(x'' AS NUMERIC) FROM t0 WHERE (CASE WHEN (NOT ('-622148876')) THEN NULL COLLATE NOCASE ELSE CASE 'KH'  WHEN x'' THEN 0xffffffffe612c3d0 ELSE '1545963972' END END); -- 0ms;
SELECT ALL ((x'')!=((t0.c0 IN ()))), t0.c23, CASE 0.765416436809589  WHEN SUM(t0.c11) THEN NULLIF(DISTINCT t0.c23, v0.c0) END FROM t0, v0 WHERE ((((('')/(NULL)))|((('WqU?{') NOT BETWEEN (NULL) AND ('-1128457870'))))); -- 3ms;
SELECT DISTINCT json_object(((t0.c0)OR(t0.c11)), ((v0.c0) ISNULL)), (((((v0.c0)||(t0.c23)), ((x'')>=(0.5448543513079211)), NULL))<>((((((((((t0.c23)OR(t0.c23)))OR(t0.c23)))AND(v0.c0)))OR(v0.c0)), (((v0.c0))<=((t0.c11))), ((((v0.c0)AND(0.5793296280504169)))OR(t0.c23))))), MAX(CAST(x'' AS BLOB)) COLLATE NOCASE FROM v0;SELECT ((x'') NOT NULL) FROM t0 ORDER BY t0.c11 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT((((v0.c0)) BETWEEN ((t0.c11)) AND ((t0.c23)))) OVER () FROM v0 WHERE (((((0.765416436809589) BETWEEN ('JY(-8Hs棞	') AND (-2142481199))) BETWEEN (CAST(NULL AS BLOB)) AND ((((NULL))>(('-762830895'))))));SELECT ((CAST(t0.c11 AS NUMERIC)) IS FALSE) FROM t0 WHERE ((CAST(0Xffffffffcb08af55 AS INTEGER) IN ())); -- 0ms;
SELECT ALL COUNT((- (t0.c23))) FROM v0;SELECT FIRST_VALUE((((t0.c0)) BETWEEN ((CAST(t0.c23 AS TEXT))) AND (((t0.c23 IN ()))))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), GROUP_CONCAT((v0.c0 IN (t0.c0))), QUOTE(((((((((v0.c0)OR(v0.c0)))AND(t0.c23)))AND(v0.c0)))OR(t0.c11))) FROM t0 WHERE ((~ ((('-1314872471') NOT BETWEEN (x'') AND (x'af40')))));SELECT DISTINCT (((NOT (t0.c0))) BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0) IS TRUE))) FROM v0, t0 WHERE (((NULL COLLATE NOCASE)=(NULL))) ORDER BY (((1.120054049E9)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t0.c23)) AND ((v0.c0))))) AND ((((t0.c0)/(v0.c0))))); -- 0ms;
SELECT DISTINCT (- (t0.c11 COLLATE NOCASE)), (((((((((((v0.c0, t0.c23, v0.c0)) BETWEEN ((v0.c0, t0.c11, v0.c0)) AND ((t0.c11, t0.c0, t0.c0))))AND((t0.c23 IN ()))))OR(t0.c0 COLLATE NOCASE)))AND(MAX(t0.c11))))OR(t0.c23)), CAST((- (t0.c23)) AS BLOB) FROM v0 WHERE (NULLIF(DISTINCT (+ (0.2086087731651135)), ((0.6535183451791632)>>(NULL)))) ORDER BY CAST(((v0.c0)!=(t0.c11)) AS TEXT) DESC  NULLS FIRST;SELECT DISTINCT RANK() OVER ( ORDER BY CAST(t0.c11 AS REAL) COLLATE RTRIM DESC  NULLS FIRST) FROM v0;SELECT ALL COUNT(((v0.c0)AND(t0.c23))) OVER () FROM v0 NOT INDEXED, t0 WHERE (CAST(((NULL) IS FALSE) AS NUMERIC)); -- 0ms;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((NULL)IS('a')) AS REAL)); -- 0ms;
SELECT DISTINCT (((- (t0.c11))) NOTNULL), (UPPER(t0.c11) IN ()), ((((v0.c0) IS TRUE))&(((t0.c0) BETWEEN (t0.c23) AND (t0.c23)))) FROM t0, v0 WHERE (((((((x'5e68'))=((0x307652f4)))))>=(((0.2817657278893878 IN ()))))); -- 0ms;
SELECT DISTINCT t0.c0, ((v0.c0 COLLATE NOCASE)<<(CASE WHEN t0.c11 THEN t0.c11 END)), CASE WHEN ((((((((t0.c23)AND(t0.c11)))OR(t0.c11)))AND(t0.c11)))AND(t0.c23)) THEN ((t0.c23) IS FALSE) WHEN MAX(t0.c0) THEN ((v0.c0)/(v0.c0)) WHEN ((('502453232'))>((t0.c11))) THEN 0.9909253154683644 COLLATE BINARY ELSE ((((t0.c0)AND(t0.c23)))OR(t0.c23)) END FROM t0, v0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT t0.c23, v0.c0) COLLATE BINARY, v0.c0, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c23)))<((('jU\xRWxR') IS TRUE))), NULL COLLATE RTRIM, ((t0.c11)/(((((((((t0.c23)OR(t0.c11)))AND(t0.c23)))AND(t0.c11)))OR(t0.c11)))) FROM v0 NOT INDEXED WHERE ((((NULL) NOT NULL) IN ())) ORDER BY ((((((t0.c11) NOT BETWEEN (t0.c11) AND (t0.c11)))OR((((x'6f74', v0.c0, v0.c0))=((t0.c0, t0.c11, v0.c0))))))OR(((v0.c0)<<(t0.c11))));SELECT DISTINCT (~ (x'')) FROM v0, t0 GROUP BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c0))) BETWEEN ((t0.c0 IN (NULL))) AND (((t0.c23)-(t0.c11)))); -- 0ms;
SELECT ALL (((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c11))))=((COUNT(*)))), (SUM(t0.c23) IN ()), ((v0.c0 COLLATE BINARY) IS FALSE) FROM v0 LIMIT 1346829651;SELECT DISTINCT (((((t0.c23, t0.c23, t0.c11)) NOT BETWEEN ((NULL, t0.c0, t0.c23)) AND ((t0.c11, t0.c0, t0.c23)))) BETWEEN ((NOT (t0.c0))) AND (((t0.c11) NOT NULL))) FROM t0, v0 WHERE ((((('>suEcz')) NOT BETWEEN ((NULL)) AND (('-1310551629'))) IN ())); -- 0ms;
SELECT DISTINCT NTH_VALUE(x'', LIKELY(t0.c23) COLLATE NOCASE) OVER () FROM t0, v0 WHERE (LOWER(((0.25932617657120993) NOTNULL))) LIMIT -214323485;SELECT ALL AVG(((((t0.c11)AND(v0.c0)))AND(v0.c0))) FROM t0 INTERSECT SELECT DISTINCT ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))*(LIKELIHOOD(t0.c11, 0.963030595614541))) FROM v0, t0 WHERE (((LIKELY('G.'))>=((- ('1380405363')))));SELECT ((t0.c23 IN (t0.c0, t0.c11)) IN ()) FROM v0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN (t0.c0 IN ()) THEN ((v0.c0)!=(v0.c0)) ELSE ((0.38596237091842833)GLOB(v0.c0)) END, 0x12757bc8, ((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) COLLATE RTRIM, ((((t0.c11) NOT NULL)) BETWEEN (v0.c0) AND ((~ (v0.c0)))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (json_patch(t0.c23, v0.c0)) AND (((t0.c0)||(')}')))) FROM t0 WHERE (((COALESCE('0.0', ')vZ'))IS NOT((('') IS FALSE))));SELECT (((((((((t0.c11 IN (t0.c0, t0.c11)))AND(LIKELIHOOD(DISTINCT t0.c11, 0.1045914992126602))))AND(GROUP_CONCAT(v0.c0))))OR(CASE WHEN t0.c23 THEN v0.c0 WHEN v0.c0 THEN t0.c23 WHEN t0.c0 THEN t0.c0 ELSE t0.c23 END)))AND(HEX(DISTINCT t0.c11))) FROM t0, v0; -- 0ms;
SELECT ((CAST(v0.c0 AS TEXT))<(AVG(v0.c0))) FROM v0; -- 1ms;
SELECT ALL LAST_VALUE(((CASE WHEN t0.c0 THEN t0.c11 ELSE t0.c11 END)GLOB(((t0.c11)<=(t0.c0))))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT BETWEEN (t0.c0) AND ('')))+(((t0.c0) NOT NULL))) FROM t0, v0; -- 0ms;
SELECT DISTINCT SUM(((((((((t0.c0)OR(t0.c23)))OR(t0.c0)))AND(v0.c0)))AND(t0.c23))) FROM t0, v0 GROUP BY ((((((v0.c0)OR(t0.c23)))AND(t0.c23))) NOT BETWEEN (CAST(t0.c23 AS INTEGER)) AND ('aW}&S\K')); -- 0ms;
SELECT ALL SUM(((((((((((((t0.c11)AND(v0.c0)))OR(v0.c0)))AND(x'44ce')))AND(v0.c0)))OR(v0.c0)))OR(x''))) COLLATE RTRIM FROM t0 WHERE ((((((NULL)%(0x6797657f))))>=((((((0Xffffffffc3575914)AND(x'')))AND(NULL))))));SELECT ALL NULL FROM v0 WHERE ((((((- (0.9184177500398291)))AND((('17428948') BETWEEN (0Xffffffff8102bf22) AND (0.2923842378530426)))))AND(CASE 2.03531707E8  WHEN '2121328118' THEN 1971559377 END))); -- 0ms;
SELECT '', TOTAL(x'f8f50039') OVER ( GROUPS BETWEEN (((t0.c23)) BETWEEN ((CASE t0.c0  WHEN t0.c23 THEN t0.c11 WHEN v0.c0 THEN v0.c0 WHEN 'f~' THEN v0.c0 END)) AND ((LTRIM(v0.c0)))) FOLLOWING AND  CURRENT ROW EXCLUDE GROUP), (((t0.c23 IN (t0.c0))) IS TRUE) FROM v0 ORDER BY ((CASE t0.c0  WHEN t0.c23 THEN t0.c11 WHEN t0.c23 THEN t0.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c23 END) NOT BETWEEN (CASE WHEN t0.c11 THEN v0.c0 END) AND (1151979049))  NULLS LAST;SELECT DISTINCT ('|' IN ()), ((t0.c23)-(0.9787537283871681)), ((((CAST(t0.c23 AS REAL))AND(((t0.c23)/(v0.c0)))))OR(COUNT('>suecz'))) FROM v0;SELECT v0.c0 FROM v0, t0; -- 0ms;
SELECT (TYPEOF(t0.c0) IN ()) FROM v0 WHERE (((((x'')!=(x''))) NOT BETWEEN (CASE x''  WHEN 0.27780701912007355 THEN '-824751404' ELSE NULL END) AND ((('1036717026')*('g}1z'))))) GROUP BY CAST(((t0.c23) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT) HAVING (((('878709235')AND(v0.c0)))<(((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c11))));SELECT DISTINCT CAST(('!\' IN (t0.c0, 0Xffffffffac09d008)) AS BLOB), (~ ((('-40031539') NOTNULL))), CASE '-2089476122'  WHEN (t0.c23 IN ()) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))) END FROM v0;SELECT DISTINCT CAST((- (x'')) AS BLOB), ((t0.c0)/(t0.c11)) COLLATE RTRIM, COUNT(*) FROM t0; -- 0ms;
SELECT ALL t0.c11, FIRST_VALUE(CASE ((v0.c0) IS FALSE)  WHEN ((v0.c0) NOT NULL) THEN 'Rl^2G~N쿢' ELSE ((('-2068748989')) BETWEEN ((v0.c0)) AND ((v0.c0))) END) OVER (), (((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c23)>=(t0.c23)))) FROM v0 WHERE ('378315817');SELECT DISTINCT '5F	K_?W_G', PERCENT_RANK() OVER (), (((((((t0.c0)AND(t0.c0)))AND(t0.c0))))>((((v0.c0) NOTNULL)))) FROM t0, v0 ORDER BY ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(t0.c23)) COLLATE NOCASE, ((CASE WHEN t0.c11 THEN t0.c23 ELSE t0.c23 END)/(((((t0.c11)OR(t0.c11)))OR(v0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE (((t0.c0 IN ())) IS FALSE)) OVER () FROM t0 WHERE ((((('') NOTNULL)) BETWEEN (((x'') BETWEEN (1.7976931348623157E308) AND (0.14853165305019467))) AND ((('2125247850') ISNULL)))); -- 0ms;
SELECT (+ (DATE(t0.c11, t0.c23, t0.c11))) FROM t0 WHERE (((('0.27780701912007355', NULL, x'')) BETWEEN ((1.62816726E8, ((1790880418)!=(NULL)), json_object('730090643', NULL, x'', x'0a00'))) AND (('966587339', CASE 0.8000468053499178  WHEN NULL THEN 0.7170381055704308 END, (((0.98655824818572)) BETWEEN ((NULL)) AND (('276061124'))))))) ORDER BY ((((v0.c0) IS FALSE)) ISNULL)  NULLS LAST;SELECT DISTINCT ((((t0.c23) NOTNULL))||((((t0.c11)) BETWEEN ((t0.c23)) AND ((t0.c23))))) FROM t0; -- 0ms;
SELECT ((v0.c0) BETWEEN (v0.c0) AND (CASE WHEN '' THEN '0.14853165305019467' WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 END)) FROM t0, v0; -- 0ms;
SELECT DISTINCT (((t0.c23) NOT BETWEEN (t0.c11) AND (t0.c23)) IN ()) FROM t0 WHERE ((('283122176' COLLATE NOCASE) BETWEEN (x'') AND ((0x402e9914 IN (x''))))); -- 0ms;
SELECT DISTINCT (- (((t0.c0) NOT NULL))) FROM t0, v0 WHERE (CASE x'c370'  WHEN (((x''))>=((0.9617529352929642))) THEN CAST(NULL AS NUMERIC) ELSE 'g\rK' END) GROUP BY '-616162197'; -- 0ms;
SELECT (- ((((t0.c11))!=((v0.c0))))) FROM v0 WHERE (((CASE WHEN 0.8231255210398849 THEN 'U떏L4-' WHEN x'' THEN '\r	l' WHEN NULL THEN 0.13680279666167028 WHEN NULL THEN x'e750b648' WHEN '-1833269329' THEN '/9쀔J\|<' END) NOT BETWEEN ((+ (0X0))) AND ((((0X7c3b1457, NULL, 0.6089269583250907)) NOT BETWEEN ((0.6872496507013345, '0.6604111149346438', '1006368346')) AND ((x'', NULL, 0.5053108547577001)))))) LIMIT 1558451538;SELECT ALL ((SUM(t0.c23))*(COALESCE(DISTINCT t0.c23, v0.c0, t0.c23, v0.c0))), ((COUNT(*))%(CASE t0.c0  WHEN v0.c0 THEN t0.c23 END)), GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c11 ELSE t0.c11 END) FROM t0 WHERE (((('' IN ())) BETWEEN ((NOT (NULL))) AND ('')));SELECT DISTINCT t0.c23 COLLATE RTRIM, (+ ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c23))))), (((t0.c11)) NOT BETWEEN ((CASE WHEN '373334887' THEN t0.c0 END)) AND ((((t0.c11) BETWEEN ('eX2V(Hऍ') AND (t0.c11))))) FROM t0 WHERE (0.24502337562512289); -- 0ms;
SELECT DISTINCT (((((v0.c0)) BETWEEN ((t0.c23)) AND ((t0.c0)))) ISNULL), ((((t0.c11)OR(t0.c11)))OR(NULL)) COLLATE BINARY, (((t0.c0 IN ())) IS TRUE) FROM t0 WHERE ((0.3277486614342203 IN ()) COLLATE NOCASE);SELECT DISTINCT CAST((- (t0.c11)) AS TEXT) FROM t0, v0; -- 0ms;
SELECT CAST((((t0.c11)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB) FROM t0, v0 WHERE ((- (CAST(0.13057527346056896 AS INTEGER)))) LIMIT -1152723549; -- 0ms;
SELECT ((t0.c23)||(v0.c0)) COLLATE BINARY, ((((t0.c23)%(t0.c11))) NOT NULL), (NOT (NULL)) FROM v0, t0 WHERE ((((CASE WHEN 0.24844288092538946 THEN 0.7068892933689892 END, CASE WHEN '!#' THEN x'' END, (((NULL, x'', 1.134141977E9)) BETWEEN ((0.474791781810474, NULL, '\ctV\r''טN')) AND ((2119319573, 0.21995649177133658, x'e08b3c0f')))))>(((NOT (-5.0219633E7)), x'', (+ (x'')))))); -- 0ms;
SELECT DISTINCT (((((t0.c0))>((v0.c0)))) NOTNULL) FROM t0;SELECT DISTINCT (- (((t0.c11)+(t0.c0)))) FROM v0 WHERE ((((((NOT (-1.556569752E9)))AND(x'' COLLATE RTRIM)))AND(CAST(NULL AS NUMERIC)))) LIMIT 1852567595 OFFSET -467347077;SELECT (- ((t0.c0 IN ()))), NTILE(MAX(((t0.c0)<(t0.c23)), (t0.c0 IN ()))) OVER (), ((TOTAL(v0.c0))<=((v0.c0 IN ()))) FROM t0 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN ((('')<=('SZ%w%'))) AND (CAST('614493937' AS REAL))));SELECT ALL STRFTIME(t0.c11, t0.c11, t0.c23) COLLATE RTRIM COLLATE RTRIM FROM t0, v0 WHERE ((NOT ((('<鯄')<<(0Xffffffff968ad0cc))))); -- 1ms;
SELECT ALL ((((((t0.c11)AND(t0.c23)))OR(((t0.c0) IS FALSE))))AND(((t0.c23) IS FALSE))) FROM t0 WHERE (((CAST(573474578 AS BLOB))||(CAST('Fy9I८IU	羪' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT x'8877' FROM v0 WHERE (LOWER(((((((((((((NULL)OR(0.14828610595005864)))AND(-4.0013828E7)))AND('812707321')))OR(0.14024262387696196)))AND(-6.39223842E8)))OR(0x119d149a)))); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((t0.c0) IS TRUE)) FROM v0 WHERE ((((''))<=(((((NULL))>=((x'16e7')))))));SELECT DISTINCT NULL, CASE WHEN GROUP_CONCAT(t0.c23) THEN (NOT (t0.c0)) END, ((t0.c23) NOT BETWEEN (GROUP_CONCAT('1321646326')) AND ('')) FROM v0, t0 GROUP BY 0x4ef2227b;SELECT ALL (~ (NULL)) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c23)) NOT BETWEEN ((((t0.c0)>=(t0.c0)))) AND ((((t0.c11) NOT NULL)))) FROM v0;SELECT IFNULL((~ (t0.c23)), 0.6599227783471817) FROM v0, t0; -- 0ms;
SELECT ALL ((0X51d3684) NOT BETWEEN (TOTAL_CHANGES()) AND ((('0.535154667607733') IS TRUE))), (((t0.c0, t0.c11, t0.c0)) BETWEEN ((t0.c23 COLLATE RTRIM, v0.c0 COLLATE NOCASE, MIN(t0.c11))) AND ((MIN(t0.c0), ((((t0.c11)AND(t0.c11)))AND(t0.c11)), ((t0.c0) NOT NULL)))), ((CASE WHEN v0.c0 THEN v0.c0 END)<=((+ (t0.c11)))) FROM v0, t0 ORDER BY (((v0.c0))=((v0.c0))) COLLATE BINARY; -- 0ms;
SELECT ALL (((t0.c0)<<('2059489801')) IN ()) FROM v0, t0 WHERE (2.12925089E9); -- 0ms;
SELECT DISTINCT CASE x'' COLLATE RTRIM  WHEN rtreenode(v0.c0, t0.c11) THEN CASE v0.c0  WHEN t0.c0 THEN 0.8790203518462059 END ELSE (((v0.c0, t0.c11, t0.c23)) NOT BETWEEN ((t0.c0, t0.c23, t0.c23)) AND ((v0.c0, '417649064', v0.c0))) END FROM t0, v0 GROUP BY (((t0.c23)*(t0.c11)) IN ()); -- 0ms;
SELECT ALL STRFTIME(v0.c0, (((t0.c11)) NOT BETWEEN ((t0.c0)) AND ((t0.c23))), ((('-471847164', v0.c0, 0.9546570374123083))!=((t0.c23, t0.c23, t0.c23)))), MIN(CASE t0.c0  WHEN t0.c11 THEN t0.c23 END), TOTAL(((t0.c0) NOT BETWEEN (t0.c23) AND (t0.c0))) OVER ( ORDER BY ((t0.c11)OR(x'')) DESC) FROM t0, v0 NOT INDEXED WHERE (CAST((x'' IN ()) AS INTEGER)); -- 1ms;
SELECT ALL ABS((t0.c0 IN ())) FROM v0, t0 GROUP BY CAST(('-34517105' IN ()) AS TEXT) HAVING ((((- (t0.c0)), CASE WHEN v0.c0 THEN t0.c0 END, (((t0.c11))>((v0.c0))), ((((t0.c0)OR(t0.c23)))OR(x'97b9')), (((t0.c23)) NOT BETWEEN ((v0.c0)) AND ((t0.c0)))))<((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (t0.c23 IN ()), ((t0.c0)IS NOT(v0.c0)), COUNT(*), ((v0.c0)GLOB(v0.c0))))) LIMIT -887095640; -- 0ms;
SELECT (((t0.c11, t0.c0, t0.c11)) NOT BETWEEN ((t0.c23 COLLATE NOCASE, (+ (v0.c0)), (NOT (v0.c0)))) AND ((((0.8077245235372105) NOTNULL), ((((((((t0.c0)OR(t0.c11)))AND(t0.c0)))AND(t0.c0)))AND(t0.c23)), t0.c0 COLLATE NOCASE))), (LIKELIHOOD(t0.c23, 0.5674611689345306) IN ()), (('905242179')>(CAST(t0.c23 AS REAL))) FROM v0, t0 WHERE (((UPPER(x''))<((((0.9555174803271574)) BETWEEN ((NULL)) AND (('eꊩ{惇lx_E')))))) GROUP BY ((((t0.c0) NOTNULL)) ISNULL), ('' IN (QUOTE(t0.c0), (+ (t0.c11)))), t0.c0 LIMIT -629821921 OFFSET -1025029388; -- 0ms;
SELECT DISTINCT (((((t0.c11) IS FALSE), ((v0.c0) IS FALSE), (((t0.c0)) NOT BETWEEN ((t0.c23)) AND ((t0.c0)))))!=(('sm', (~ (t0.c0)), (x'' IN (t0.c0))))) FROM t0, v0 WHERE ((((((x'')) BETWEEN ((0.27230166303957204)) AND (('Frxv騄*re&')))) NOTNULL)); -- 0ms;
SELECT ALL ((((v0.c0)IS(t0.c0)))/(CASE v0.c0  WHEN v0.c0 THEN t0.c23 ELSE t0.c23 END)) FROM t0, v0 WHERE ((((NULL)IS(']')) IN ())); -- 0ms;
SELECT DISTINCT ((t0.c11) ISNULL) FROM v0 WHERE (((('WT' IN (0.976733049643721, '476576076'))) NOTNULL));SELECT ALL (((((((0.532082925480381, v0.c0, t0.c23)) BETWEEN ((v0.c0, '', t0.c0)) AND ((t0.c11, t0.c23, NULL))))AND(((((t0.c11)AND(t0.c11)))AND('娣')))))OR((~ (v0.c0)))) FROM t0, v0 WHERE (((CAST(NULL AS INTEGER))/((('') IS FALSE)))) GROUP BY ((CASE WHEN v0.c0 THEN t0.c11 WHEN t0.c11 THEN v0.c0 WHEN t0.c11 THEN v0.c0 WHEN t0.c23 THEN t0.c23 WHEN t0.c11 THEN v0.c0 END) NOT BETWEEN ((t0.c0 IN (v0.c0))) AND (((t0.c0)AND(t0.c0)))); -- 1ms;
SELECT DISTINCT NTH_VALUE(((t0.c11) BETWEEN (((t0.c23)>>(t0.c11))) AND (v0.c0)), CASE (- (t0.c0))  WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c11  WHEN t0.c0 THEN v0.c0 END WHEN (t0.c23 IN (t0.c11)) THEN CAST(t0.c11 AS NUMERIC) WHEN ((t0.c0)<<(t0.c11)) THEN v0.c0 END) OVER () FROM t0, v0 WHERE (((((0.018108458224261548)&(NULL)))*(((x'')OR(2.12925089E9))))); -- 0ms;
SELECT DISTINCT ((((v0.c0)OR(COUNT(t0.c0))))AND(((t0.c23) NOTNULL))), CASE (+ (t0.c11))  WHEN (NOT (t0.c0)) THEN (((t0.c23)) NOT BETWEEN ((t0.c11)) AND ((t0.c11))) END, (((((t0.c11, x'', '1275721117', v0.c0, t0.c0))<=((v0.c0, t0.c11, v0.c0, v0.c0, t0.c23))))<<(((t0.c23)&(v0.c0)))) FROM t0, v0 ORDER BY (- (json_insert(t0.c11, 0.045318856222066106, t0.c23))) ASC  NULLS LAST; -- 0ms;
SELECT LAST_VALUE(((((CAST(t0.c11 AS BLOB))OR(t0.c23)))OR((~ ('/E'))))) OVER () FROM t0, v0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((v0.c0) BETWEEN (t0.c11) AND (t0.c11))) OVER (), (NOT (SUM(t0.c11))), t0.c23, (((v0.c0)) NOT BETWEEN ((((v0.c0)!=(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (t0.c23) AND (t0.c23))))), (((((((((t0.c11)OR(v0.c0)))AND(t0.c11)))OR(t0.c11)))AND(t0.c23)) IN ()) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT t0.c23)) NOT BETWEEN (((t0.c23)|('G'))) AND ((- (t0.c11)))), (CAST(t0.c0 AS INTEGER) IN (AVG(t0.c23))), 1868301896 FROM v0, t0; -- 0ms;
SELECT ALL NTILE((((((t0.c0) ISNULL)))>(((~ (t0.c11)))))) OVER () FROM t0 WHERE (((((CASE 0xffffffffdd95cc3a  WHEN x'' THEN x'' WHEN x'7b38' THEN NULL WHEN x'6d61c4d4' THEN NULL WHEN x'' THEN 0Xffffffffddd946a2 WHEN x'' THEN 0x42c2ab21 END)OR(((0.6570762093837145)-(NULL)))))OR(LIKELY(DISTINCT 'S')))); -- 1ms;
SELECT ALL MIN('-302916886') FROM t0, v0 GROUP BY (((((v0.c0, t0.c11, t0.c0, t0.c11, t0.c11)) BETWEEN ((v0.c0, t0.c11, t0.c0, v0.c0, t0.c23)) AND ((t0.c23, t0.c11, 0.14126773827503258, t0.c0, t0.c11))))>>(((v0.c0)IS NOT(t0.c0)))) ORDER BY t0.c23 DESC, CASE UNICODE(t0.c0)  WHEN ((((t0.c0)OR(t0.c23)))OR(NULL)) THEN json_insert(t0.c23, v0.c0, NULL) ELSE (~ (v0.c0)) END DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((((v0.c0) NOT BETWEEN (t0.c23) AND (t0.c23)))AND((~ (t0.c23)))))OR((v0.c0 IN ()))), COUNT(((t0.c11)IS NOT(NULL))), (((NULL))<>((((t0.c0) IS FALSE)))) FROM v0, t0 GROUP BY CAST(0.8002045099812 AS BLOB); -- 0ms;
SELECT DISTINCT ((((((t0.c11) NOT BETWEEN (t0.c0) AND (t0.c11)))OR(((((t0.c23)AND(t0.c23)))AND(0Xaacc3e3)))))OR(((v0.c0) NOT NULL))) FROM t0 WHERE (CAST(0.8513426470274117 AS TEXT) COLLATE RTRIM);SELECT DISTINCT (((((((((t0.c0)AND(t0.c23)))OR(t0.c23)))AND(v0.c0)))AND(v0.c0)) IN ()) FROM v0; -- 0ms;
SELECT t0.c0, CASE (+ (t0.c23))  WHEN ((t0.c11)LIKE(t0.c23)) THEN LOWER(v0.c0) END, NULL COLLATE BINARY FROM t0 WHERE ((((CAST(-1.7976931348623157E308 AS INTEGER)))==((CASE WHEN NULL THEN x'' END)))) LIMIT -1143056348 OFFSET -1227912961;SELECT ALL GROUP_CONCAT(((v0.c0) IS TRUE)) FROM v0 WHERE (ABS(CASE x''  WHEN 0Xffffffffe3e02f04 THEN 0.9881318559990185 END)); -- 0ms;
SELECT DISTINCT CASE ((t0.c23) BETWEEN (t0.c0) AND (t0.c11))  WHEN ((((v0.c0)OR(v0.c0)))OR(t0.c11)) THEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c23, t0.c0, t0.c23)) AND ((t0.c11, v0.c0, t0.c11))) END FROM t0 WHERE (((((x'e76a') NOT BETWEEN ('') AND ('֣u>+[1N'))) ISNULL));SELECT ALL 0.9848141557339362 FROM t0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c23)) BETWEEN ((NOT (v0.c0))) AND (NULL)) FROM t0 WHERE ((~ (x'' COLLATE BINARY)));SELECT ((CAST(v0.c0 AS REAL)) NOT BETWEEN (COUNT(*)) AND (TOTAL(t0.c23))), (+ (t0.c23 COLLATE NOCASE)), CAST(NULL AS INTEGER) FROM t0, v0 LIMIT -1668746342 OFFSET 1120054049; -- 0ms;
SELECT CAST(LIKELIHOOD(t0.c11, 0.2571871173487561) AS INTEGER) FROM t0, v0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (NULL COLLATE NOCASE) AND (((NULL) IS FALSE)))) GROUP BY (((((t0.c11)) BETWEEN ((t0.c11)) AND ((NULL))))IS NOT(CASE WHEN v0.c0 THEN v0.c0 END)), ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(t0.c23)))|(((t0.c11)OR(t0.c11)))), t0.c23 HAVING x'' ORDER BY ((((v0.c0 IN ())))>(((- (t0.c0))))); -- 0ms;
SELECT ALL ((((((t0.c23)AND(t0.c11)))AND(v0.c0)))OR(CASE t0.c0  WHEN t0.c11 THEN t0.c0 END)), (((t0.c0)) NOT BETWEEN (((((t0.c0))<=((v0.c0))))) AND (((NULL IN ())))), ((((('	vmw\nP(L' IN ()))OR(DATETIME(v0.c0, t0.c23, t0.c23, t0.c0, v0.c0))))AND(t0.c0)) FROM t0 WHERE (((('0.6320690644740202' IN ())) ISNULL));SELECT LAG(((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))%(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), (((((v0.c0) IS FALSE), (v0.c0 IN ()), (v0.c0 IN ())))<>((CAST(v0.c0 AS NUMERIC), ((v0.c0) IS TRUE), (((v0.c0, v0.c0, 'Lw3U9'))>((v0.c0, v0.c0, v0.c0)))))), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(LIKELY(DISTINCT v0.c0)))) OVER (), (((((((((((((~ (v0.c0)))OR('')))AND(COUNT(*))))AND(((((((((v0.c0)AND(t0.c11)))OR(t0.c0)))AND(t0.c11)))OR(t0.c23)))))OR(t0.c0 COLLATE NOCASE)))AND('413619253' COLLATE RTRIM)))AND(COUNT(*))), v0.c0 FROM v0 WHERE (((((506303269) NOT NULL)) IS TRUE)) ORDER BY ((TYPEOF(DISTINCT t0.c11))<=(((t0.c0)||(x'')))) ASC;SELECT TRIM(t0.c11 COLLATE RTRIM) FROM t0, v0 WHERE ((CAST(NULL AS TEXT) IN (((NULL) NOT BETWEEN (0.09243477437450331) AND (NULL))))); -- 0ms;
SELECT ALL (((t0.c23)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((x'f8e4'))) FROM v0;SELECT DISTINCT (- (NULL)), x'' COLLATE NOCASE, (((t0.c11)||(v0.c0)) IN ()), CAST(((t0.c23) BETWEEN (0.4802879158978801) AND (v0.c0)) AS INTEGER), AVG(((((t0.c11)OR(t0.c0)))AND(v0.c0))) COLLATE RTRIM FROM v0, t0 WHERE ((((('+,8-0O')IS(NULL)))IS NOT((- (0.4637226818755147))))); -- 0ms;
SELECT DISTINCT ((CAST(v0.c0 AS NUMERIC))AND(((v0.c0)<(v0.c0)))) FROM t0, v0 ORDER BY ((CASE t0.c11  WHEN v0.c0 THEN t0.c0 WHEN t0.c23 THEN t0.c11 WHEN t0.c0 THEN v0.c0 END) ISNULL); -- 0ms;
SELECT DISTINCT (((t0.c23 IN ())) BETWEEN (((v0.c0) IS TRUE)) AND (t0.c0 COLLATE BINARY)) FROM v0 WHERE (((CASE NULL  WHEN NULL THEN NULL WHEN x'e008' THEN 0.8852416807532727 WHEN '0.6773863704129061' THEN NULL END)*(((-1.408338893E9)|(x'')))));SELECT ALL ((1963585631)>=(CAST(t0.c23 AS TEXT))), (+ (0.6719757558755197)), ((((((v0.c0)OR(t0.c23)))OR(v0.c0))) NOTNULL) FROM t0, v0 WHERE (CAST((('Wl') NOT NULL) AS BLOB)) LIMIT 2047415949 OFFSET -1803352016; -- 0ms;
SELECT DISTINCT ((((AVG(t0.c11))OR(((((t0.c11)OR(0.2703217622476436)))AND(x'')))))OR(v0.c0)) FROM v0, t0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT ((((((((t0.c23)AND(v0.c0)))AND(t0.c11)))AND(v0.c0)))OR(t0.c11)), ((t0.c11) BETWEEN (-1732995210) AND (t0.c23))) FROM v0;SELECT DISTINCT v0.c0 FROM t0 WHERE (((((('<鯄') NOT BETWEEN (NULL) AND (0Xfffffffff1af3ca2))))=((((NULL) NOT BETWEEN (-6.33368029E8) AND (x'')))))) ORDER BY ((((t0.c23)|(v0.c0)))OR((x'' IN ()))) DESC  NULLS FIRST, -436725052 DESC LIMIT -1500739772 OFFSET 178662697;SELECT ALL LIKELIHOOD((v0.c0 IN (t0.c23)), 0.8298681270633749) FROM v0;SELECT DISTINCT ((((t0.c11 COLLATE NOCASE)OR(((t0.c23) ISNULL))))AND(((v0.c0)>=(t0.c0)))) FROM v0 WHERE (CASE '2125247850'  WHEN x'' THEN x'' END COLLATE RTRIM) LIMIT 1809953387;SELECT DISTINCT (((t0.c0 IN ()))OR(((t0.c23)>>(t0.c0)))) FROM t0 WHERE (NULLIF(DISTINCT NULLIF('0.9787537283871681', x''), ((0.4455360469420415) IS FALSE))); -- 0ms;
SELECT DISTINCT (~ (0.10788375745469736)) FROM v0 WHERE ((((0.5808122169097697)) BETWEEN ((x'')) AND ((0.3482928925181896))) COLLATE NOCASE); -- 0ms;
SELECT LEAD(CASE WHEN t0.c23 THEN t0.c11 END COLLATE RTRIM, 0.1047010830033609, (~ ((NOT (t0.c0))))) OVER ( ROWS ((0.3008838084237415)%(NULL)) PRECEDING), t0.c0, (((+ (t0.c23)))&(((t0.c11)|(t0.c0)))), CAST(v0.c0 AS REAL) COLLATE RTRIM, MAX(1557320795) FROM t0 WHERE (((0.6085444701661297) NOTNULL) COLLATE BINARY);SELECT ((((x'')/(0.10529117081465145)))<<(((t0.c23) NOT BETWEEN (t0.c23) AND (v0.c0)))), (((t0.c11 COLLATE NOCASE))<((((t0.c11)>=(t0.c23))))), CASE WHEN ((t0.c23)>=(t0.c0)) THEN ((0.21091950802877835) IS FALSE) WHEN (t0.c11 IN ()) THEN t0.c0 WHEN (((v0.c0))<>((t0.c23))) THEN t0.c23 ELSE CASE t0.c23  WHEN v0.c0 THEN t0.c23 ELSE t0.c23 END END FROM t0, v0 WHERE (TYPEOF(DISTINCT json_valid(NULL))) LIMIT -202907521; -- 0ms;
SELECT SUBSTR(CAST(v0.c0 AS REAL), (~ (t0.c0))), CASE WHEN CASE v0.c0  WHEN t0.c0 THEN t0.c23 ELSE 0X6b64be8c END THEN (((t0.c0, t0.c0, t0.c0))==((t0.c11, t0.c0, t0.c0))) END, t0.c0 FROM t0;SELECT DISTINCT (- (((t0.c11) NOT BETWEEN (t0.c11) AND (t0.c23)))) FROM v0;SELECT DISTINCT (t0.c11 IN ()) FROM v0, t0; -- 0ms;
SELECT ALL (((t0.c11)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((t0.c23)) AND ((v0.c0))))) AND ((((((((((v0.c0)AND(t0.c23)))OR(t0.c11)))AND(t0.c11)))OR(NULL))))), (((t0.c0))<((t0.c11))), t0.c0 FROM v0, t0 GROUP BY LIKE((t0.c0 IN (v0.c0)), CAST(t0.c11 AS REAL)) ORDER BY ((CAST(t0.c11 AS TEXT)) IS FALSE)  NULLS FIRST; -- 0ms;
SELECT ALL CASE (((t0.c11))!=((v0.c0)))  WHEN ROUND(t0.c23, t0.c0) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c23)&('')) THEN ((t0.c23)<=(1e500)) WHEN (((t0.c0, v0.c0, t0.c11)) BETWEEN ((v0.c0, t0.c0, t0.c11)) AND ((v0.c0, t0.c11, t0.c11))) THEN t0.c11 COLLATE RTRIM END, (((t0.c23))<=(((~ (v0.c0))))), ((v0.c0) NOT BETWEEN (t0.c23) AND (17428948)) COLLATE NOCASE FROM t0, v0 ORDER BY CASE (v0.c0 IN ())  WHEN TYPEOF(DISTINCT '1125704018') THEN (v0.c0 IN (t0.c23)) WHEN ((t0.c23)/(v0.c0)) THEN (+ (t0.c11)) WHEN ((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c11 AS REAL) END ASC  NULLS FIRST, ((t0.c23) IS FALSE) COLLATE RTRIM ASC  NULLS LAST; -- 0ms;
SELECT v0.c0 FROM t0, v0 WHERE ('819742874'); -- 1ms;
SELECT LIKELIHOOD((((t0.c11, t0.c0, t0.c11))>=((v0.c0, t0.c23, v0.c0))), 0.47711746571973723) FROM t0 WHERE (CASE WHEN ((x'')+(NULL)) THEN 'yS' COLLATE BINARY ELSE (('')>(NULL)) END);SELECT DISTINCT ((HEX(DISTINCT v0.c0))>>(t0.c11)) FROM v0, t0; -- 0ms;
SELECT DISTINCT SUM(v0.c0) OVER () FROM v0, t0 WHERE ((+ (CASE 'g\rK'  WHEN 0Xffffffffddb025f0 THEN 'S8^汅ld' WHEN '1001104189' THEN NULL WHEN '0.9184177500398291' THEN x'' END))); -- 1ms;
SELECT DISTINCT CAST(CASE WHEN t0.c0 THEN '|w' WHEN t0.c23 THEN t0.c11 WHEN t0.c0 THEN t0.c23 ELSE t0.c11 END AS INTEGER), MIN(TRIM(DISTINCT 1.120054049E9, v0.c0)), (+ ((NULL IN ()))) FROM t0 WHERE ((NOT (((NULL) NOT BETWEEN (0Xffffffffa6bb0379) AND ('1545963972')))));SELECT DISTINCT ((t0.c11) BETWEEN (v0.c0) AND (t0.c11)) COLLATE RTRIM FROM t0 WHERE ((((NOT (0X109f1d4)))LIKE(LIKE(0.19081776036712084, NULL, '1'))));SELECT DISTINCT v0.c0 FROM v0, t0 ORDER BY ((MIN(v0.c0, t0.c11, t0.c23, v0.c0))LIKE(CAST(t0.c0 AS TEXT))), ((CASE t0.c0  WHEN t0.c23 THEN t0.c0 ELSE t0.c11 END)|(TRIM(DISTINCT t0.c11)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((TIME(t0.c23, 0.9410890711317935, 0.06133778926203182, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0)|(t0.c11))) AND (NULL)) FROM t0, v0 WHERE ((~ (((x'')>=(0.4878757983239066))))) ORDER BY (((v0.c0))==((((t0.c23)<(v0.c0)))))  NULLS LAST; -- 0ms;
SELECT ALL (((+ (t0.c23)))<(GROUP_CONCAT(t0.c0))), AVG(((((((((((((t0.c11)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t0.c11)))AND(t0.c0)))OR(v0.c0))) OVER (), (NOT (CAST(t0.c11 AS REAL))) FROM t0, v0; -- 1ms;
SELECT DISTINCT (COUNT(t0.c11) IN (COUNT(*), (((t0.c11)) BETWEEN ((t0.c0)) AND ((t0.c0))))), CAST(((t0.c23) BETWEEN (v0.c0) AND (t0.c23)) AS INTEGER), (('' IN ()) IN ('-324274397')) FROM t0, v0 WHERE (CAST(((x'')IS NOT(NULL)) AS TEXT)); -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT ((TRIM(DISTINCT t0.c0, t0.c0)) NOT BETWEEN (((v0.c0) ISNULL)) AND (0.4508500668773484)) FROM t0 WHERE (((0.5762896485017313) NOT NULL));SELECT ALL ((NULL) IS TRUE), COUNT(*), (+ (((t0.c23)>=(v0.c0)))) FROM v0, t0 ORDER BY (((+ ('-'))) NOT BETWEEN ((((NULL)) NOT BETWEEN (('{}')) AND ((t0.c23)))) AND (t0.c11)) DESC; -- 0ms;
SELECT DISTINCT ((((((((((((t0.c11)AND('r3')))AND(t0.c0)))AND(SUM(t0.c11))))OR('')))OR((NOT (v0.c0)))))AND(((((t0.c11)OR(t0.c0)))OR('')))), NULL, (((t0.c0 IN ()))>>(CAST(t0.c23 AS REAL))) FROM t0, v0 WHERE ((('CL\')GLOB(0.16421413329282042)) COLLATE BINARY); -- 0ms;
SELECT ((t0.c11) NOT BETWEEN (0Xffffffffa52f43d2) AND (t0.c0)) COLLATE NOCASE COLLATE RTRIM FROM t0 WHERE ((~ (((('1001104189', '', '')) BETWEEN ((x'', -1.302061158E9, 0.43564601448543583)) AND ((NULL, '?Nnᓕ', -4.71847164E8)))))); -- 1ms;
SELECT CAST((v0.c0 IN (t0.c11, v0.c0)) AS NUMERIC), v0.c0 COLLATE RTRIM, COUNT(*) OVER () FROM v0 ORDER BY (((((((((((((~ (t0.c11)))AND(ABS(t0.c23))))AND(((((t0.c11)OR('329989098')))OR(t0.c11)))))OR(((('', t0.c0, v0.c0, t0.c23, v0.c0))>=((t0.c0, t0.c11, t0.c23, t0.c23, t0.c0))))))OR((t0.c23 IN ()))))AND(((t0.c23) NOTNULL))))OR(((v0.c0) IS FALSE)));SELECT DISTINCT ABS(CASE t0.c11  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) FROM v0;SELECT ALL (((t0.c11)) NOT BETWEEN ((((v0.c0)<<(t0.c23)))) AND (((((t0.c11))==((0.4878757983239066)))))) FROM t0;SELECT DISTINCT COUNT(((v0.c0)IS NOT(t0.c11))) OVER (), (MAX(t0.c11, t0.c23, t0.c11, t0.c11) IN ()), (((((t0.c0))<>((t0.c23))))IS(CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)) FROM t0;SELECT ((v0.c0)IS(((t0.c23) NOT BETWEEN (t0.c23) AND (t0.c11)))), (((((t0.c0))=(('0.6405650744731775'))))*(AVG(v0.c0))), t0.c23 FROM v0 WHERE (((x'f084' COLLATE BINARY)<=(((x'15f74319') IS FALSE)))) ORDER BY (((t0.c11 IN (t0.c23, t0.c0)))>=(v0.c0 COLLATE NOCASE)) DESC, (t0.c11 IN ());SELECT DISTINCT CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER), NULL, RANK() OVER () FROM t0 ORDER BY (((((((((t0.c0 IN ()))OR(LOWER(t0.c11))))AND((('295173477') ISNULL))))OR(CAST(t0.c0 AS BLOB))))AND(t0.c0 COLLATE BINARY)) DESC;SELECT v0.c0, '772193071' COLLATE BINARY, ((((((v0.c0) BETWEEN (x'') AND (t0.c11)))OR(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c23)))))OR((~ (NULL)))) FROM v0, t0; -- 0ms;
SELECT (((((v0.c0)GLOB(t0.c0))))>=((((((v0.c0)AND(t0.c11)))AND(x''))))) FROM t0, v0 WHERE (((COALESCE(0.4358666985971751, x'', '', '0.2923842378530426')) BETWEEN (NULL COLLATE NOCASE) AND ((('-1305411399')&(NULL))))) ORDER BY t0.c0 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT x'3f72' FROM v0, t0; -- 0ms;
SELECT DISTINCT (((((t0.c0))>=((v0.c0))))IS(((0.05003665457381268) NOT BETWEEN (NULL) AND (t0.c11)))) FROM t0, v0 WHERE ((((NULL IN ())) BETWEEN (((x'255c') IS FALSE)) AND (CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT (NOT (((((((((t0.c11)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(t0.c23)))), ((((t0.c23)&(v0.c0))) ISNULL), ((t0.c11 COLLATE BINARY)>>(CASE WHEN t0.c11 THEN t0.c0 END)) FROM t0, v0 WHERE (((NULL) BETWEEN ('-1034045936' COLLATE NOCASE) AND ((((NULL, '-789954887', NULL, '-1833269329', 0.2107465884621993)) NOT BETWEEN (('-531901675', '0.57315167878912', 0.8055270445623388, 422957026, NULL)) AND ((x'', '-525378975', 0.3213136227175514, 'aPQ雙+t2', '\r *')))))); -- 0ms;
SELECT ALL (CAST(t0.c23 AS BLOB) IN (((x'4a7e')-(t0.c0)), (0.7307084142683385 IN ()))) FROM v0;SELECT DISTINCT SUM(TRIM(t0.c23)) OVER () FROM v0 WHERE ((((+ (2129250890))) ISNULL)) GROUP BY t0.c23;SELECT DISTINCT ((v0.c0)IS(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c23)))) FROM v0 WHERE (CAST('' COLLATE RTRIM AS REAL));SELECT DISTINCT (((t0.c11)) BETWEEN ((t0.c23)) AND ((((((((((((((t0.c11)OR(t0.c23)))AND(v0.c0)))AND(t0.c23)))AND(t0.c0)))OR(t0.c23)))OR(t0.c23))))) FROM v0;SELECT t0.c23, t0.c0, (((t0.c11)) BETWEEN ((t0.c23)) AND ((v0.c0))) FROM v0;SELECT ALL CASE (t0.c23 IN ())  WHEN '1545963972' THEN (((t0.c23)) NOT BETWEEN ((t0.c0)) AND ((t0.c23))) END, CAST((t0.c11 IN ()) AS INTEGER), json_extract(((t0.c0)&('0.6535183451791632')), ((v0.c0)>>(t0.c0))) FROM v0 WHERE (CAST((+ (NULL)) AS REAL));SELECT DISTINCT (+ (((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c23)))), GROUP_CONCAT(((v0.c0) IS TRUE)), 0.33573930974353505 FROM t0, v0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c23 THEN t0.c23 ELSE v0.c0 END)<<((((v0.c0))!=((x'787c'))))) FROM v0, t0 WHERE ((LIKELY(x'94ad') IN (((((((((x'')AND(x'')))OR('-1302510837')))OR(NULL)))OR(NULL)), '0.9352811383062098' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT json_valid(t0.c11) FROM t0 WHERE (((TOTAL_CHANGES())%((+ (NULL))))); -- 0ms;
SELECT DISTINCT t0.c11 FROM t0 WHERE ((- (((NULL)IS NOT(-938317921))))); -- 0ms;
SELECT DISTINCT ((CASE t0.c11  WHEN v0.c0 THEN v0.c0 ELSE t0.c11 END) BETWEEN ((((t0.c11))<>((x'')))) AND (CAST(t0.c23 AS TEXT))) FROM v0;SELECT DISTINCT (((~ (t0.c23))) ISNULL) FROM v0;SELECT DISTINCT MIN((t0.c23 IN (t0.c11))) COLLATE NOCASE FROM v0, t0; -- 0ms;
SELECT DISTINCT '1995058744' FROM v0, t0; -- 0ms;
SELECT ALL CAST(((v0.c0)|(t0.c11)) AS REAL), CASE WHEN (- (0.3048932189535891)) THEN (t0.c0 IN ()) ELSE ((t0.c0)==(t0.c11)) END, CAST(t0.c11 COLLATE BINARY AS BLOB), ((v0.c0)GLOB(CASE t0.c11  WHEN t0.c11 THEN v0.c0 WHEN NULL THEN t0.c11 WHEN t0.c11 THEN t0.c11 END)), CAST((v0.c0 IN ()) AS TEXT) FROM t0, v0 WHERE ((NOT (TRIM('0.44049260115980904', 0X3bfbf65a)))) UNION SELECT DISTINCT t0.c0, ROW_NUMBER() OVER (), ((((((t0.c0)AND(t0.c0)))AND('洽O49F')))<(COUNT(*))), CASE WHEN ((((t0.c23)OR(t0.c0)))AND(t0.c23)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c11))) END, 0.7287068093563898 COLLATE RTRIM COLLATE NOCASE FROM t0, v0; -- 1ms;
SELECT (((t0.c11)) BETWEEN ((NULLIF(DISTINCT t0.c11, t0.c11))) AND ((t0.c11 COLLATE NOCASE))), MIN(t0.c0), ((TOTAL(t0.c11)) BETWEEN (v0.c0) AND (MAX(t0.c0))) FROM t0, v0 GROUP BY ((((v0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN ())) AND (t0.c23 COLLATE BINARY)), (((t0.c0)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((CASE WHEN v0.c0 THEN t0.c23 END))), ((t0.c11 IN ()) IN ()) HAVING ((((t0.c23)<=(t0.c11)))IS((~ (t0.c0)))); -- 0ms;
SELECT ALL ((((((((((t0.c0)AND(v0.c0)))AND(v0.c0)))AND(t0.c0)))AND(t0.c23)))|((('145397109') IS FALSE))) FROM v0 WHERE (((0.5750203325935467)||(((0.9306673602130078) BETWEEN ('') AND (x'f393')))));SELECT ALL ((t0.c11) NOT BETWEEN (t0.c0) AND (t0.c23)) COLLATE NOCASE FROM t0, v0; -- 0ms;
SELECT ALL CAST(t0.c0 AS NUMERIC), CAST((t0.c11 IN ()) AS REAL), (+ (ABS(DISTINCT v0.c0))) FROM t0, v0; -- 0ms;
SELECT ALL t0.c23 COLLATE RTRIM, (v0.c0 IN (t0.c11)) COLLATE NOCASE, ((((t0.c11)IS(t0.c11)))LIKE(CAST(v0.c0 AS BLOB))), (((t0.c11)) BETWEEN ((((v0.c0) NOTNULL))) AND (((+ (t0.c0))))), LEAD(CAST(((t0.c23)+(x'd5d2')) AS BLOB), ((json_array_length(t0.c0)) BETWEEN ((t0.c11 IN ())) AND (((t0.c11)%(t0.c23)))), ((((((t0.c23)<<(t0.c0)))AND(v0.c0)))AND(((t0.c0)GLOB(t0.c0))))) OVER () FROM v0, t0; -- 0ms;
SELECT t0.c23 FROM v0, t0 WHERE ('pgT&'); -- 0ms;
SELECT ALL CASE WHEN '-533130027' THEN (((t0.c23, t0.c0, t0.c11, v0.c0, t0.c23))>=((t0.c11, t0.c23, t0.c11, v0.c0, v0.c0))) ELSE ((t0.c11)*(v0.c0)) END FROM t0 WHERE (NULL) GROUP BY ((NULL) IS TRUE) ORDER BY v0.c0  NULLS FIRST;SELECT ALL (((t0.c0)<(t0.c0)) IN (MAX(t0.c0), (((t0.c0, t0.c23, t0.c11))<((t0.c0, '繛k', ''))))), ((((t0.c11)|(v0.c0)))>((- (t0.c11)))), v0.c0 FROM v0;SELECT ALL (- ((v0.c0 IN ()))), (1.363935031E9 IN ()), 'q]''2' FROM v0, t0 WHERE (CASE (((0.5777261492954248, 0Xffffffffb23100b9, '29067354')) NOT BETWEEN (('-146746495', x'', '')) AND (('0.6637565829197201', 0.2138139923645963, 0.8826806356512533)))  WHEN 0.5996800004403434 COLLATE BINARY THEN (NOT ('-1483285653')) END) GROUP BY '-941389276', ((((0.35633816621891057)AND(t0.c11 COLLATE RTRIM)))OR(x'')), UNLIKELY(((t0.c23)<=(t0.c11))) HAVING ((((t0.c11)&(t0.c11))) BETWEEN ((- (t0.c0))) AND (t0.c0)); -- 0ms;
SELECT DISTINCT (+ (CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)), CASE (~ (t0.c23))  WHEN CAST('U4B-DP' AS BLOB) THEN (t0.c11 IN ()) WHEN (~ (t0.c0)) THEN 0.07347050706895553 WHEN HEX(DISTINCT t0.c11) THEN (((t0.c23, t0.c0, t0.c23))>=((t0.c11, t0.c0, v0.c0))) ELSE AVG(t0.c23) END, ((7.30090643E8 COLLATE BINARY) NOT BETWEEN (((t0.c23) ISNULL)) AND ((NOT (t0.c23)))) FROM t0, v0; -- 0ms;
SELECT DISTINCT TOTAL(HEX(t0.c23)) FILTER(WHERE (((NOT (v0.c0))) BETWEEN (t0.c23 COLLATE RTRIM) AND (((x'e968')*('_ui묏ퟬ剡h H'))))) OVER () FROM t0 WHERE (((((0Xffffffffe8deb68f)IS(NULL))) BETWEEN ((+ ('1YA24䎷'))) AND (((NULL) NOT BETWEEN (NULL) AND (-1913707573))))) ORDER BY CHAR(t0.c23) COLLATE BINARY;SELECT CASE t0.c23  WHEN (- (v0.c0)) THEN (t0.c11 IN ()) END FROM t0 WHERE (((((CASE '夔d'  WHEN 1453960932 THEN x'b0c8' WHEN 2.111657634E9 THEN NULL WHEN -8.6359667E8 THEN 0x14c0ad9c END)OR(json_object(0.04337856343692903, 'Jg0K5*bIh'))))OR((('\') NOT BETWEEN (0.6116973087086315) AND (0.5041671066305855)))));SELECT ((((t0.c23))<>((t0.c11))) IN (((t0.c0)==(t0.c0)), LIKE(v0.c0, v0.c0, '#'))) FROM t0, v0 WHERE ((~ ((((NULL))<=((NULL)))))); -- 0ms;
SELECT ALL SUM((((-2057389326))>((0xffffffffd4dd280c)))) FROM t0; -- 4ms;
SELECT t0.c23 FROM t0 WHERE (((((((-1782256336)OR(x'')))OR(NULL)))IS NOT(NULL))) GROUP BY ((((v0.c0) NOT NULL))OR((NOT (t0.c11)))) ORDER BY ((((((((t0.c23)AND(v0.c0)))OR(t0.c23)))OR(t0.c23)))OR(t0.c23)) COLLATE NOCASE DESC;SELECT ALL CASE WHEN TRIM(v0.c0) THEN v0.c0 END FROM t0 WHERE ((~ (((x'5119')||(x''))))) ORDER BY ((((t0.c23) BETWEEN (t0.c0) AND (6.65414314E8)))*(((0.3086249602455795)>(t0.c11))))  NULLS FIRST;SELECT 'nNMjg', ((((t0.c11)>>(t0.c11)))>>(CASE t0.c23  WHEN t0.c0 THEN t0.c0 ELSE t0.c23 END)), HEX(((v0.c0)OR(v0.c0))) FROM t0 NOT INDEXED WHERE (CAST((0xffffffff968ad0cc IN ()) AS INTEGER));SELECT CAST(COUNT(*) AS TEXT) FROM t0 WHERE ((((('') IS TRUE))*(((x'') NOTNULL)))); -- 0ms;
SELECT DISTINCT t0.c0 COLLATE BINARY, ((((t0.c0) NOT NULL)) NOT NULL), RTRIM(SUM(t0.c11)) FROM v0, t0 WHERE (((('')) BETWEEN ((LIKE('#', NULL))) AND (((((('0.6637565829197201')AND(0.2487786780189255)))AND('')))))); -- 0ms;
SELECT ALL SUM((t0.c0 IN ())) OVER () FROM v0; -- 0ms;
SELECT ((TOTAL(t0.c11)) NOTNULL), ((((((t0.c0)/(v0.c0)))AND(((t0.c11)!=(t0.c23)))))OR(((t0.c0)IS(t0.c0)))), AVG(t0.c23) OVER ( ORDER BY t0.c23 DESC  NULLS LAST) FROM t0, v0 WHERE ((((0Xffffffffcd06d131)) NOT BETWEEN ((TRIM(0.953546435024276, 0.5166211210551659))) AND ((x'')))); -- 0ms;
SELECT DISTINCT ((t0.c23)|((+ (t0.c11)))) FROM t0, v0 WHERE (CAST(0.3418294941341392 AS BLOB) COLLATE NOCASE); -- 0ms;
SELECT GROUP_CONCAT((v0.c0 IN (t0.c11, t0.c23)) COLLATE BINARY) FILTER(WHERE UNLIKELY((t0.c23 IN ()))) OVER ( GROUPS (((t0.c11) ISNULL) IN ()) PRECEDING EXCLUDE GROUP) FROM v0, t0 WHERE (((((0.2198584284884899)=(x'')))%((+ (x''))))) LIMIT 1908858600; -- 0ms;
SELECT DISTINCT '1' FROM t0, v0 WHERE (TRIM(DISTINCT CASE WHEN 0.3100190826301543 THEN 0.6915628343719862 END, x'861b' COLLATE BINARY)); -- 0ms;
SELECT v0.c0 FROM v0, t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c11 THEN v0.c0 END) IS FALSE) FROM t0 WHERE (0.884932087755158);SELECT DISTINCT (('2125247850') ISNULL) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((+ (t0.c11)) IN ((((t0.c0))>((t0.c23))))), (((('2075423962')AND(t0.c0)))OR(0.08362862551553685)) COLLATE NOCASE, UPPER(t0.c0), (t0.c0 IN ()) COLLATE BINARY COLLATE BINARY, ((((t0.c11)<>(t0.c11)))!=(((t0.c11)OR(t0.c11)))) FROM t0; -- 0ms;
SELECT DISTINCT (((NULL)) BETWEEN ((v0.c0)) AND (((t0.c23 IN ())))) FROM v0, t0 ORDER BY TRIM((~ (t0.c0)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(-1875283060 AS REAL), CAST('2085789273' AS INTEGER), ((AVG(t0.c0)) NOT BETWEEN (t0.c23 COLLATE RTRIM) AND (((NULL) IS TRUE))) FROM v0, t0 WHERE ((((CASE WHEN 5.42866353E8 THEN '0.9909253154683644' WHEN -2.13052643E9 THEN -1.523804959E9 WHEN x'5531' THEN 0.6630472459379592 ELSE NULL END))=((CASE 0.39947181803652987  WHEN 0.7414339195825996 THEN 0.5854778020135671 WHEN 'Fv' THEN x'' WHEN '}0m3,' THEN '_j' ELSE x'' END)))); -- 0ms;
SELECT ALL (((t0.c11 IN ())) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((+ (t0.c0)))) FROM t0; -- 0ms;
SELECT ALL v0.c0, ABS(SUM(v0.c0)), CASE WHEN t0.c23 THEN CASE x'8887'  WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) IS FALSE) THEN ((t0.c0)>(v0.c0)) WHEN (((t0.c23)) NOT BETWEEN ((v0.c0)) AND ((t0.c23))) THEN CASE t0.c11  WHEN t0.c23 THEN v0.c0 END END FROM t0 WHERE ((((0.4878757983239066 IN (-1.378990309E9)))LIKE((((('0.45387829019160164')AND(0.24432052772544344)))AND('-1120486641'))))) GROUP BY CASE WHEN (((t0.c23))<((t0.c11))) THEN ((-1.769287476E9) IS TRUE) WHEN t0.c23 THEN ((t0.c11) NOTNULL) WHEN ((((t0.c23)OR(v0.c0)))AND(t0.c0)) THEN (t0.c11 IN (NULL)) WHEN (- (t0.c11)) THEN (((v0.c0, v0.c0, t0.c23))==((t0.c23, t0.c11, t0.c23))) WHEN ((v0.c0)<=(0x7eacb56a)) THEN (~ (v0.c0)) END HAVING AVG(CAST(v0.c0 AS NUMERIC));SELECT DISTINCT LIKELIHOOD(DISTINCT ((t0.c23) NOT BETWEEN (',UmU?	&\n\r') AND (t0.c0)), 0.8333995620682771), CASE WHEN CASE t0.c11  WHEN t0.c23 THEN t0.c11 ELSE t0.c0 END THEN (t0.c23 IN (t0.c0)) END, '*z' FROM v0 WHERE ((((((('0.9352811383062098') IS FALSE))OR((~ (0.8248076465143196)))))OR(CASE -6.39223842E8  WHEN NULL THEN NULL END)));SELECT DISTINCT COUNT(MAX(NULL)) FROM v0;SELECT DISTINCT CASE (((t0.c11))<((v0.c0)))  WHEN ((v0.c0)LIKE(v0.c0)) THEN ((t0.c11) ISNULL) WHEN t0.c11 THEN t0.c0 COLLATE NOCASE WHEN (((t0.c23)) BETWEEN ((t0.c0)) AND ((t0.c11))) THEN x'' END, ((((((t0.c0) NOT NULL))OR(TOTAL(t0.c11))))OR(((t0.c0)-(t0.c11)))), AVG(((((t0.c23)AND(t0.c23)))OR(v0.c0))) OVER (), '', ((((v0.c0 COLLATE RTRIM)OR(((t0.c0) IS TRUE))))OR(MAX(x''))), ((UNLIKELY(DISTINCT t0.c11)) IS FALSE), NULL FROM t0, v0 WHERE (((NULL) BETWEEN (0.027815398696996563) AND ('-124304260')) COLLATE BINARY) ORDER BY (NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))), t0.c11; -- 0ms;
SELECT CUME_DIST() OVER (), (((t0.c11, v0.c0, '')) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c23) AND (t0.c11)), NULLIF(t0.c11, t0.c23), (t0.c23 IN ()))) AND ((CASE t0.c23  WHEN t0.c11 THEN t0.c11 ELSE t0.c23 END, (t0.c23 IN ()), t0.c11 COLLATE NOCASE))), SQLITE_SOURCE_ID() FROM t0 WHERE ((('ql5	t^' COLLATE RTRIM)>=(((((((((x'')OR(x'5269')))OR(0.2817657278893878)))OR(NULL)))AND(NULL)))));SELECT v0.c0 COLLATE RTRIM FROM v0, t0 WHERE (((CASE ''  WHEN x'87bc' THEN 'O' ELSE '-1407366057' END)>=(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((0.8564295171841165 COLLATE NOCASE)IS((((t0.c11))<=((t0.c0))))), (((t0.c11, t0.c11, t0.c0)) BETWEEN ((t0.c23, ((((v0.c0)OR(t0.c11)))OR(t0.c0)), CASE t0.c11  WHEN t0.c23 THEN t0.c23 ELSE v0.c0 END)) AND (((NOT (t0.c11)), (((t0.c0, t0.c11, t0.c0))>=((v0.c0, t0.c23, t0.c0))), ((t0.c23)==(t0.c11))))), ((((v0.c0)>=(v0.c0)))GLOB((((x'')) BETWEEN ((v0.c0)) AND ((t0.c11))))) FROM v0 WHERE (((NULL)<=('-149304345')) COLLATE BINARY);SELECT ALL (((t0.c23, t0.c11, v0.c0)) NOT BETWEEN ((((v0.c0)&(t0.c11)), ((v0.c0)/(v0.c0)), (((t0.c23))<>((t0.c0))))) AND ((CASE WHEN t0.c11 THEN t0.c0 WHEN t0.c11 THEN 0.17213162145990324 WHEN t0.c23 THEN v0.c0 END, COUNT(*), t0.c23 COLLATE RTRIM))) FROM v0, t0 WHERE (CAST(ABS(DISTINCT x'522e') AS BLOB)); -- 0ms;
SELECT ALL (- ((((t0.c0))=((t0.c0))))) FROM v0 WHERE (((LOWER(DISTINCT 'U\'))IS((((('3fgaL,')AND(NULL)))AND(x''))))) ORDER BY ((((t0.c0)LIKE(t0.c0))) ISNULL)  NULLS LAST, x'';SELECT DISTINCT t0.c23, (((v0.c0, t0.c23, t0.c11))<((t0.c0, NULL, t0.c11))) COLLATE NOCASE, (((((t0.c0 IN ()))OR(x'')))AND(((x'') IS TRUE))) FROM t0 LIMIT -622148876;SELECT DISTINCT (((((v0.c0)-(v0.c0)), CAST(t0.c11 AS INTEGER), (((t0.c23))>((v0.c0)))))=((t0.c11 COLLATE NOCASE, (t0.c23 IN (t0.c11)), ((t0.c0)-(t0.c23))))) FROM t0;SELECT DISTINCT ((t0.c23)+('1543813010')) COLLATE BINARY FROM v0, t0; -- 0ms;
SELECT NTH_VALUE(CASE WHEN ((x'') NOT NULL) THEN (v0.c0 IN ()) END, (((((((((v0.c0 IN ()))AND(CAST(v0.c0 AS INTEGER))))OR(CAST(v0.c0 AS REAL))))OR(v0.c0 COLLATE BINARY)))AND(v0.c0 COLLATE NOCASE))) OVER () FROM v0 ORDER BY LENGTH(t0.c23) ASC  NULLS LAST;SELECT ((CAST(t0.c23 AS INTEGER)) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c23)||(t0.c11)) AS REAL) FROM t0, v0 WHERE (TRIM(DISTINCT json_patch(x'', x'333f'), (0.3055050429701436 IN ())));SELECT DISTINCT ((((t0.c23) IS TRUE))+(CAST(NULL AS INTEGER))), (+ (((t0.c11) NOT BETWEEN ('0.6630472459379592') AND (t0.c0)))), ((HEX(t0.c0))|(((t0.c23)%(v0.c0)))) FROM t0, v0 WHERE ((((((((0.26038228127160756, '', NULL))!=(('-255131933', 0xffffffffffffffff, x''))))AND(((0xffffffffc51ae048)==('JQu&q1]nE')))))OR(CAST('-40013828' AS TEXT)))); -- 0ms;
SELECT DISTINCT t0.c11, ((((t0.c23)%('-2039042601'))) NOT BETWEEN (TOTAL(t0.c0)) AND (0.2653599624021199)), t0.c23 FROM v0, t0 ORDER BY COALESCE(t0.c0, ((t0.c0) BETWEEN (t0.c0) AND (-331695914)), ((t0.c0)%(t0.c0)), ((t0.c23)>(t0.c11))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT (((((t0.c23) BETWEEN (t0.c11) AND (t0.c0))))<((GROUP_CONCAT(v0.c0)))) FROM v0, t0 WHERE ((+ ((('-') NOT NULL)))); -- 0ms;
SELECT DISTINCT CAST(((((t0.c11)OR(t0.c23)))AND(t0.c23)) AS BLOB) FROM t0 WHERE ((((+ ('fc')))IS(((0Xffffffffac0e7433) IS FALSE)))) EXCEPT SELECT DISTINCT '343214509' FROM v0 WHERE (((((((x'')<<(x'97c7')))AND(CAST(NULL AS NUMERIC))))AND('y!' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT COUNT(CAST(v0.c0 AS INTEGER)) FROM t0 LIMIT -324274397;SELECT 0.3940580201929328 FROM t0 WHERE (TRIM(((((((((0.7642026402155208)AND(NULL)))AND('17428948')))OR('-798573362')))OR('-71902716')))); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0) ISNULL)) FROM t0 NATURAL JOIN v0 WHERE (CAST(CASE '-1151625423'  WHEN NULL THEN NULL ELSE '118806762' END AS REAL)); -- 0ms;
SELECT DISTINCT (v0.c0 IN ()) COLLATE RTRIM, t0.c0, ((((t0.c23)<<(t0.c11))) IS FALSE) FROM v0 WHERE ((~ (((((((((0.12617449367583444)OR(0.4778457229917007)))OR(1692902508)))AND(0.14913272941548172)))AND(NULL)))));SELECT ALL (((t0.c11)) BETWEEN ((((t0.c23)%(t0.c11)))) AND ((GROUP_CONCAT(t0.c23)))), CAST(((((t0.c23)OR(v0.c0)))OR(v0.c0)) AS REAL), '' FROM t0, v0 ORDER BY v0.c0  NULLS LAST, ((((t0.c11)&(v0.c0))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (COALESCE(v0.c0, v0.c0))), ((NOT (t0.c11)) IN (CASE WHEN t0.c23 THEN t0.c0 END, ((v0.c0)>(x'9ae6'))))  NULLS LAST; -- 0ms;
SELECT ALL (-3.02916886E8 IN ()) COLLATE NOCASE FROM t0 WHERE (((((0.5341936109462059) IS TRUE)) NOT NULL)) LIMIT -1759778483; -- 0ms;
SELECT (CAST(t0.c11 AS TEXT) IN (((t0.c11)LIKE(t0.c23)), CASE v0.c0  WHEN x'' THEN t0.c11 END)) FROM v0;SELECT DISTINCT ((((v0.c0) NOT NULL))-(((v0.c0)/(t0.c0)))), t0.c11, CASE COUNT(*)  WHEN (+ (t0.c11)) THEN UPPER(v0.c0) WHEN '-334085511' THEN (+ (t0.c0)) WHEN CASE WHEN 'E2IMK' THEN v0.c0 END THEN (NOT (t0.c23)) ELSE (+ (t0.c11)) END FROM t0 WHERE ((('JY(-8HS棞	' COLLATE RTRIM)&(CAST(1.7428948E7 AS INTEGER)))) GROUP BY (((('2090546870') BETWEEN (t0.c23) AND (NULL))) IS TRUE), (((((v0.c0)<=(v0.c0))))=((CAST(t0.c23 AS INTEGER)))), ((IFNULL(0.06227289894028942, v0.c0)) NOTNULL);SELECT DISTINCT ((v0.c0) BETWEEN (t0.c23) AND (v0.c0)) COLLATE RTRIM FROM v0 WHERE (UPPER(('-628352691' IN ())));SELECT CASE SQLITE_COMPILEOPTION_USED(v0.c0)  WHEN CAST(t0.c23 AS INTEGER) THEN ((((((((t0.c11)OR(t0.c11)))AND(t0.c11)))AND(v0.c0)))OR(v0.c0)) WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c11 THEN NULL WHEN 0.8396810774986203 THEN t0.c23 END WHEN ((v0.c0)-(t0.c23)) THEN t0.c0 ELSE GROUP_CONCAT(t0.c11) END FROM v0 ORDER BY ((((v0.c0)GLOB(t0.c0)))+((((t0.c11, v0.c0, t0.c11, t0.c0, t0.c11)) BETWEEN ((t0.c23, t0.c23, t0.c23, t0.c0, t0.c0)) AND ((-1.556569752E9, t0.c0, t0.c0, t0.c0, NULL))))) ASC  NULLS LAST, ((v0.c0) NOT BETWEEN (((t0.c11) IS TRUE)) AND (t0.c0 COLLATE NOCASE)) DESC  NULLS LAST;SELECT DISTINCT ((((t0.c11) BETWEEN (t0.c23) AND (v0.c0))) IS TRUE) FROM t0 WHERE (((((CAST(2.12524785E9 AS TEXT))OR(x'bbd9' COLLATE NOCASE)))OR(CASE -1020341001  WHEN '' THEN '857865327' END))) GROUP BY DATE(v0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((NULL)GLOB(t0.c23))) HAVING ((IFNULL('C', v0.c0)) IS TRUE) ORDER BY CASE x''  WHEN CASE WHEN t0.c23 THEN t0.c23 ELSE v0.c0 END THEN (t0.c11 IN ()) ELSE CASE 0Xffffffff8fdf40bf  WHEN 'X0' THEN t0.c11 WHEN t0.c23 THEN t0.c23 WHEN -8.70701145E8 THEN t0.c23 WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c23 END END;SELECT AVG(x'93d1') OVER ( PARTITION BY (((t0.c0)) BETWEEN ((((((((((((((t0.c11)AND(t0.c11)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(t0.c11)))OR(v0.c0)))) AND (((- (v0.c0))))), ((NOT (t0.c11)) IN ((v0.c0 IN (t0.c0)))) RANGE  UNBOUNDED PRECEDING), ((GROUP_CONCAT(t0.c11))OR(((t0.c11) NOT BETWEEN (v0.c0) AND (v0.c0)))), ((CASE WHEN t0.c23 THEN t0.c11 ELSE t0.c11 END)|(t0.c0)), t0.c23, ((((t0.c0)<(v0.c0)))=(CASE t0.c11  WHEN t0.c11 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN t0.c23 THEN v0.c0 ELSE t0.c0 END)) FROM v0;SELECT ALL ((CASE WHEN t0.c11 THEN v0.c0 END)>=((t0.c23 IN ()))) FROM t0 WHERE ((((- ('-238446218'))) IS TRUE));SELECT ALL t0.c0 FROM t0 WHERE ((- ((0.847118711364753 IN ())))); -- 0ms;
SELECT ALL v0.c0 FROM t0 ORDER BY NULL DESC LIMIT -1226790820;SELECT LOWER((v0.c0 IN ())) FROM v0 WHERE (LIKELY(CAST(NULL AS INTEGER))) GROUP BY UNLIKELY(v0.c0) COLLATE RTRIM, (~ (v0.c0)) COLLATE NOCASE, (((t0.c11)) BETWEEN (((+ (v0.c0)))) AND ((t0.c0))) LIMIT -1209450653;SELECT DISTINCT (((t0.c23)) NOT BETWEEN ((((t0.c23)!=(v0.c0)))) AND ((((t0.c23)AND(t0.c0))))) FROM t0, v0 WHERE (((((0.532082925480381) NOT BETWEEN (0.6918225816975389) AND ('1273111865')))&(')vZ' COLLATE RTRIM))); -- 4ms;
SELECT DISTINCT (+ ('.xHa\rC')) FROM t0 ORDER BY CASE WHEN 0.2086087731651135 THEN 312214109 ELSE '1093824107' END DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c11 COLLATE NOCASE THEN CAST(t0.c0 AS NUMERIC) END FROM v0;SELECT DISTINCT (+ (v0.c0)) COLLATE RTRIM FROM v0 GROUP BY t0.c0, ((t0.c0 COLLATE BINARY) NOTNULL), (- (((t0.c23)AND(t0.c0))));SELECT ALL x'' FROM t0, v0; -- 0ms;
SELECT ALL COUNT(*), (((((t0.c11, v0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c11)) AND ((t0.c11, NULL, 0Xffffffffb93f5fbe))))>((((t0.c0, v0.c0, t0.c0, t0.c0, t0.c11))!=((t0.c23, t0.c11, t0.c11, t0.c0, 'U떏L4-'))))), IFNULL(QUOTE(t0.c11), (~ (t0.c23))) FROM t0, v0 LIMIT 1363935031; -- 0ms;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (('rᨫ^K)xgA' IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST((((t0.c11))>=((t0.c11))) AS TEXT) FROM v0, t0; -- 0ms;
SELECT ALL CAST(t0.c23 AS INTEGER) COLLATE BINARY FROM v0;SELECT DISTINCT CASE ((t0.c23) BETWEEN (v0.c0) AND (t0.c23))  WHEN SUM(v0.c0) THEN ((t0.c11)IS(t0.c23)) WHEN t0.c23 THEN ((t0.c11)||(v0.c0)) WHEN ((((((((t0.c11)AND(t0.c11)))OR(NULL)))OR(t0.c0)))OR(v0.c0)) THEN '*I鿉Z3{鷤]' END FROM v0, t0 WHERE (((((((((((0.8676242857429861)OR(0.006795246843419367)))AND(0.0482920002793763)))OR(x'')))AND(NULL)))%((+ (x''))))); -- 0ms;
SELECT ((t0.c11)+(t0.c0)) COLLATE NOCASE FROM v0 WHERE ((((((0xffffffffe5e19521 IN (0.337356212155678)))AND(((x'') IS FALSE))))OR((('	ሴT')IS NOT('1250051563')))));SELECT ((v0.c0) IS TRUE) FROM v0 WHERE (json(x''));SELECT DISTINCT 0.38063244324051326 FROM v0, t0; -- 0ms;
SELECT ((((t0.c11) ISNULL)) NOT BETWEEN (CAST(t0.c11 AS TEXT)) AND (CAST(t0.c0 AS REAL))) FROM t0, v0 WHERE (((((1.801206793E9) IS TRUE))|((((x'9a86')) BETWEEN ((x'')) AND ((x'')))))); -- 0ms;
SELECT DISTINCT AVG((NOT (v0.c0))) OVER () FROM v0; -- 0ms;
SELECT DISTINCT t0.c23 COLLATE RTRIM FROM v0 FULL OUTER JOIN t0 ON (x'' IN ()); -- 0ms;
SELECT ALL LEAD(INSTR(v0.c0, LOWER(DISTINCT t0.c23)), ((CAST(v0.c0 AS REAL)) NOTNULL), (NOT (((t0.c11)<(t0.c23))))) OVER () FROM v0, t0 WHERE ((((+ ('|d'))) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST(t0.c11 AS BLOB), MIN(((t0.c0) IS FALSE)), 1.006368346E9, (((((t0.c23) ISNULL), MAX(t0.c23), ((t0.c0) NOTNULL)))>=((NULLIF(v0.c0, t0.c0), (~ (v0.c0)), t0.c11))), t0.c23 FROM t0, v0; -- 0ms;
SELECT DISTINCT ((t0.c0 IN (t0.c0)) IN ()), ((((((((t0.c0)AND(t0.c0)))OR(v0.c0)))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c11))))))AND(t0.c23)), ((((t0.c11) NOT BETWEEN (v0.c0) AND (0.24790306802791306))) NOT BETWEEN ((((t0.c23)) NOT BETWEEN ((v0.c0)) AND ((t0.c11)))) AND (CAST(t0.c23 AS NUMERIC))), ('17428948' IN ()), CAST(CASE t0.c11  WHEN t0.c0 THEN t0.c11 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c11 END AS BLOB) FROM t0 WHERE (((HEX(NULL))GLOB(CASE WHEN '-1937660487' THEN 1805155472 ELSE x'347b' END))) ORDER BY v0.c0 ASC  NULLS FIRST;SELECT v0.c0, CASE v0.c0  WHEN ((((t0.c23)OR(t0.c11)))OR(t0.c23)) THEN (- (v0.c0)) END, (- (NULL)) COLLATE RTRIM FROM t0, v0 WHERE (CASE 0.18033735114537486 COLLATE BINARY  WHEN CAST(x'' AS TEXT) THEN ((-471847164)==(NULL)) WHEN SUBSTR(x'9550', x'') THEN 'q' WHEN (NOT ('210732372')) THEN ((-1017685740)+('㸈kv*/93Bꬡ')) ELSE ((NULL) NOT NULL) END); -- 0ms;
SELECT ALL CAST(((((((((t0.c0)AND(t0.c11)))AND(t0.c23)))OR('|G|F')))OR(0.9625734848921107)) AS INTEGER) FROM t0, v0; -- 0ms;
SELECT DISTINCT t0.c23 FROM v0 GROUP BY (CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c23 END IN ());SELECT DISTINCT t0.c23 FROM t0, v0 WHERE (((((((x'7531') NOTNULL))OR(x'' COLLATE NOCASE)))AND(json_extract('\rP?&e', NULL))));SELECT DISTINCT NULLIF(0.48501960712227354 COLLATE RTRIM, ((((t0.c0)OR(t0.c0)))OR(0x3bfbf65a))) FROM v0, t0 WHERE (((((0.9940202339173028 COLLATE RTRIM)OR((('Ur+ꕬ')+(x'')))))OR((NOT (NULL))))); -- 0ms;
SELECT DISTINCT CASE ((((v0.c0)OR('883354554')))AND(v0.c0))  WHEN ((t0.c0)&(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN (- (t0.c0)) THEN (- (t0.c23)) WHEN ((t0.c0)>>(t0.c0)) THEN ((((t0.c11)OR(t0.c23)))OR(v0.c0)) ELSE '' END FROM t0, v0; -- 0ms;
SELECT ALL ABS(DISTINCT t0.c11 COLLATE RTRIM) FROM v0, t0 LIMIT -742428939 OFFSET 1539282383; -- 0ms;
SELECT CASE ((t0.c11)OR(t0.c0))  WHEN CAST(t0.c0 AS REAL) THEN -1.220618921E9 END FROM t0, v0; -- 0ms;
SELECT (CAST(t0.c11 AS NUMERIC) IN ()) FROM t0 WHERE (CAST((('|x#\l*x싴') IS TRUE) AS BLOB)); -- 0ms;
SELECT DISTINCT (((t0.c23)) NOT BETWEEN ((t0.c23 COLLATE NOCASE)) AND ((ABS(DISTINCT t0.c11)))) FROM v0;SELECT DISTINCT (((t0.c23, t0.c0, '\訞f{}')) NOT BETWEEN ((((t0.c11)<(t0.c23)), v0.c0, ((((t0.c11)OR(t0.c11)))AND(v0.c0)))) AND ((CAST(t0.c11 AS REAL), (- (v0.c0)), CASE t0.c0  WHEN t0.c11 THEN t0.c23 ELSE t0.c23 END))), CHAR((((NULL, v0.c0, t0.c23))>((t0.c11, '684810779', t0.c11)))), (+ (((t0.c23) BETWEEN (x'') AND (t0.c11)))) FROM v0, t0; -- 0ms;
SELECT ALL (((- (v0.c0)))||(t0.c23 COLLATE NOCASE)) FROM t0, v0 LIMIT -1849337608 OFFSET -744888248; -- 0ms;
SELECT DISTINCT ((((SUM(v0.c0))OR((- (t0.c23)))))OR(((((0Xffffffff82294b89)AND(x'')))OR(t0.c0)))), CUME_DIST() OVER (), TOTAL(v0.c0) OVER (), CAST((('6C[A') ISNULL) AS REAL), ((((- (t0.c0))))==(((t0.c0 IN ())))) FROM t0 WHERE (CASE WHEN ((0.3501094936490162)IS NOT(NULL)) THEN (('203531707')+(x'')) ELSE ((NULL) IS FALSE) END);SELECT NULLIF(((('-1646093627', t0.c23, t0.c23, t0.c11, v0.c0))<=((v0.c0, t0.c0, t0.c23, t0.c11, t0.c11))), ((t0.c23) BETWEEN (t0.c11) AND (t0.c11))) FROM t0;SELECT DISTINCT SUM(COUNT(*)) FROM v0 WHERE (CAST(DATETIME(0x624198cc, NULL, '-429728246') AS INTEGER)) GROUP BY ABS(CASE NULL  WHEN t0.c11 THEN v0.c0 WHEN t0.c23 THEN t0.c11 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END), TIME(((((t0.c0)OR(t0.c11)))AND(t0.c11)), CASE WHEN v0.c0 THEN t0.c0 END, (NOT (t0.c0))), JULIANDAY(LIKELY(t0.c0), x'', ((v0.c0) NOT NULL));SELECT ALL (~ (((((t0.c11)AND(t0.c23)))AND(v0.c0)))) FROM v0 WHERE (0.09523351835347316);SELECT (((t0.c23) IS TRUE) IN (COALESCE(t0.c11, t0.c11, '1<nn', v0.c0, t0.c23, t0.c23), CAST(t0.c0 AS TEXT))) FROM t0, v0; -- 0ms;
SELECT ALL CASE WHEN CAST(t0.c11 AS TEXT) THEN t0.c0 COLLATE BINARY ELSE ((t0.c23)>>('-1169990416')) END, (((t0.c11) ISNULL) IN (((v0.c0)||(t0.c0)))), MAX(CAST(t0.c11 AS NUMERIC)) FROM t0, v0; -- 0ms;
SELECT ALL (t0.c23 IN (v0.c0, '162816726')) COLLATE RTRIM FROM t0, v0 WHERE (UNLIKELY(CASE WHEN '-1678869542' THEN NULL WHEN NULL THEN x'' WHEN '1957637223' THEN 0.006795246843419367 END)); -- 0ms;
SELECT ((((t0.c0) NOTNULL)) BETWEEN (((t0.c23)<=(t0.c11))) AND (CAST(t0.c23 AS REAL))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((t0.c23) NOT BETWEEN (t0.c11) AND (v0.c0)))*((((v0.c0, t0.c0, t0.c11)) BETWEEN ((t0.c0, t0.c11, 0.43604024057375035)) AND ((t0.c11, t0.c23, t0.c0))))) FROM t0;SELECT DISTINCT COUNT(*) FROM t0; -- 0ms;
SELECT DISTINCT 0.9324720043972529 FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c11)) NOT BETWEEN ((CASE WHEN t0.c11 THEN t0.c0 ELSE t0.c11 END)) AND ((((((t0.c23)OR(-5.0219633E7)))AND(v0.c0))))) FROM t0 LIMIT 1661665842 OFFSET 860863588;SELECT ALL ((((v0.c0)>=(t0.c0)))GLOB(MIN(NULL))) FROM v0, t0 WHERE (CAST(CASE '2043635607'  WHEN '-1867129755' THEN x'4c3123b8' WHEN 775348548 THEN 0.9701742563030795 WHEN '' THEN '-1954487303' END AS BLOB)); -- 0ms;
SELECT DISTINCT (((t0.c23)) BETWEEN ((((v0.c0) NOTNULL))) AND ((TOTAL(t0.c11)))) FROM v0 WHERE ('-471847164');SELECT DISTINCT MAX(((((v0.c0)AND(v0.c0)))OR(t0.c23))) FROM v0, t0 WHERE ((((CAST(0.9540928116506863 AS TEXT), ((0.6320690644740202) BETWEEN (0xffffffffbaddc5c2) AND (NULL)), ((('')) BETWEEN ((0.08397297563281059)) AND ((0.4429125530472161)))))!=((((0Xfffffffffe9e3bad)|(x'')), ((x'') NOT BETWEEN (x'') AND (NULL)), ((-1164005361) NOT BETWEEN (0.277234968046418) AND (NULL)))))); -- 0ms;
SELECT DISTINCT CAST(json_type(t0.c0) AS TEXT), NULL, ((t0.c11)<<(t0.c11)) COLLATE RTRIM FROM v0, t0 INTERSECT SELECT DISTINCT COUNT(*), GROUP_CONCAT((((t0.c11)) BETWEEN ((t0.c23)) AND ((t0.c11)))), TOTAL(((((v0.c0)OR(t0.c11)))OR(v0.c0))) COLLATE NOCASE FROM v0, t0; -- 0ms;
SELECT (((((v0.c0, t0.c0, t0.c11)) BETWEEN (('2090546870', t0.c23, t0.c23)) AND ((t0.c0, t0.c0, t0.c11))))<((((t0.c11))<((t0.c11))))), ((((t0.c23) NOTNULL)) NOT NULL), json_quote(t0.c23 COLLATE RTRIM) FROM v0;SELECT (((t0.c23)) NOT BETWEEN ((t0.c11)) AND ((v0.c0))) COLLATE BINARY COLLATE BINARY FROM t0, v0; -- 0ms;
SELECT (('0.5504937511894834')GLOB((t0.c23 IN (t0.c0)))) FROM v0, t0 WHERE (CAST((('966587339')%('0.38596237091842833')) AS BLOB)); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN t0.c11 THEN t0.c11 END THEN (+ (t0.c11)) END, AVG(ABS(v0.c0)), (+ ('䐘}')) FROM v0 GROUP BY (CASE t0.c23  WHEN t0.c23 THEN t0.c0 WHEN v0.c0 THEN t0.c11 WHEN v0.c0 THEN '260405504' END IN ());SELECT DISTINCT (((((+ (v0.c0)))AND((t0.c11 IN ()))))AND(ABS(v0.c0))) FROM t0 WHERE ((((('-1194043468') BETWEEN ('') AND (NULL))) NOT BETWEEN (LIKE(NULL, 0.8665639568998694)) AND (CAST('' AS BLOB)))) GROUP BY ((('' IN ()))IS(((t0.c23) IS TRUE))), (LOWER(DISTINCT t0.c0) IN ()), ((t0.c23) ISNULL) COLLATE RTRIM HAVING TYPEOF(v0.c0 COLLATE BINARY);SELECT ALL (((v0.c0)) NOT BETWEEN ((((t0.c11)IS(v0.c0)))) AND ((((t0.c0)+(t0.c0))))) FROM t0, v0 WHERE (((-1639315588)<>(CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT ALL t0.c11 COLLATE BINARY FROM t0 WHERE (LIKELIHOOD(load_extension('E7HV玖{hT'), 0.36182721938029316));SELECT (((t0.c11, t0.c23, t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB), json_array_length(t0.c0, t0.c23), (t0.c0 IN ()))) AND ((v0.c0, ((v0.c0) IS TRUE), v0.c0 COLLATE BINARY))), ('-518019722' IN ()), (0.5647336235430994 IN ()), CAST((t0.c11 IN ()) AS TEXT), (((((0.9781014036544471, t0.c0, v0.c0))>=((v0.c0, t0.c11, v0.c0))))&(((t0.c23) NOTNULL))) FROM v0;SELECT DISTINCT ((((t0.c11) IS FALSE))||(((t0.c0)|(t0.c0)))) FROM t0 WHERE (((((x'')-('-1867129755')))|(((x'') IS TRUE)))) ORDER BY CASE WHEN ((NULL)%(t0.c0)) THEN ((t0.c11) IS FALSE) END, (((+ (t0.c23)))IS NOT(((t0.c23)==('[p(*Or^C')))) DESC  NULLS FIRST; -- 0ms;
