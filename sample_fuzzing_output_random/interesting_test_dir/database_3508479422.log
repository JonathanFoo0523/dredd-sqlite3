-- Time: 2024/06/07 13:37:55
-- Database: database22
-- Database version: 3.40.0
-- seed value: 3508479422
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 REAL , +c4 INT ); -- 0ms;
ANALYZE; -- 1ms;
REINDEX  rt1; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c2, c0) VALUES (0.7449353133089679, NULL, x''); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA journal_mode = TRUNCATE; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ((+ ('-35980663' COLLATE NOCASE))); -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c4) VALUES (x'', 0.278586440368502); -- 0ms;
UPDATE rt1 SET c2=NULL WHERE NULLIF(((rt1.c2)>>(rt1.c2)), NULLIF(DISTINCT rt1.c0, rt1.c4)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c2, c1, c0) VALUES ('-35980663', x'', NULL, '-35980663'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-35980663,13');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.175857788199561; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.defer_foreign_keys = true; -- 1ms;
PRAGMA cache_size; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1, c4, c3) VALUES (x'1c90', -35980663, '-35980663', '-35980663', '<K\r7+1'), (0.7541654132603108, '1007463179', x'', '!ꬋ', x'ba92'), ('!0', 0.7541654132603108, 0.4286660419295065, x'', NULL), (x'', NULL, -3.5980663E7, '1007463179', 0xfffffffff8109638), (x'', 0.4681430543221814, 0.6307794870109599, x'', 492150635); -- 1ms;
COMMIT; -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=235825729 unordered'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1059385649); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x''); -- 1ms;
PRAGMA cache_size = 8782528289624295191; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO rt1(c3, c2, c1) VALUES ('W', 0Xfffffffffddafa89, NULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'184f'); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0x1); -- 1ms;
ANALYZE; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt1(c3, c1, c2, c4) VALUES ('FccM5U', NULL, '1007463179', x''); -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (x''), (NULL), (133937827); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c4, c3) VALUES (NULL, '<K\r7+1', x'f595'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c1, c4) VALUES ('.R', 'AJ', x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES (x'', 0x74ba8322); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA main.mmap_size; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt1(c0, c4, c1) VALUES (0x9d24784, x'', 0.4286660419295065); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.1474406592044476), (NULL), ('pCB(h}6M'); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (2.35825729E8); -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 BLOB , FOREIGN KEY(c0) REFERENCES t0(c0) ON DELETE SET DEFAULT ON UPDATE SET NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1763339800); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=885092238,12');\n; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('0.1474406592044476'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, c1 UNINDEXED, c2 UNINDEXED); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL ((CASE rt1.c3  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c2 END)IS(rt1.c1 COLLATE RTRIM)) FROM rt1, t0, vt0 GROUP BY (((NOT (vt1.c2)))%(rt1.c2)), ((CASE WHEN vt1.c0 THEN rt1.c2 ELSE t0.c0 END)+(CASE WHEN vt1.c2 THEN rt1.c4 ELSE vt1.c1 END)), CAST(((rt1.c0)GLOB(vt1.c1)) AS INTEGER) ORDER BY CAST(LIKELIHOOD(DISTINCT rt1.c1, 0.09252481617849395) AS NUMERIC);SELECT ALL (((((vt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))-((((rt1.c2))<((vt1.c1))))) FROM rt1, t0 WHERE (((((((((((((0X34c16f8e COLLATE BINARY)AND(((NULL)|(x'')))))OR((- (NULL)))))AND(((x'')<(-598117983)))))AND(0.175857788199561 COLLATE BINARY)))AND(((x'') NOT BETWEEN (NULL) AND (x'c3c2')))))AND(((164775812)<=(x'')))));SELECT ALL (NOT (vt1.c1 COLLATE RTRIM)) FROM vt1, vt0, t0; -- 0ms;
SELECT AVG((NOT (vt1.c1))) OVER () FROM vt0;SELECT ALL (((vt0.c0)) BETWEEN (('')) AND (((vt0.c0 IN (rt1.c3))))), CASE ((rt1.c4) BETWEEN (8.85092238E8) AND (vt1.c2))  WHEN ((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c1)))OR(t0.c0)) THEN (((rt1.c4)) BETWEEN ((vt1.c1)) AND (('PeR碱UI橁0I'))) END, COUNT(*) OVER () FROM rt1;SELECT ALL UNLIKELY(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c1) AND (t0.c0))) FROM vt1;SELECT ALL (vt1.c1 IN (((rt1.c0) IS TRUE))), NULL, CAST(((rt1.c4) NOT NULL) AS INTEGER) FROM vt1, vt0, rt1 LIMIT -259240968 OFFSET 885092238; -- 0ms;
SELECT TOTAL(rtreenode(rt1.c4, rt1.c3)) FROM vt1 LIMIT 1829773200 OFFSET -1624452700;SELECT ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN rt1.c1 ELSE rt1.c3 END)&(rt1.c1)) FROM vt0, rt1, vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt1.c1)>=(x'8b1f'))) OVER () FROM vt1; -- 0ms;
SELECT ALL (+ (((vt0.c0)<(rt1.c4)))), (((('')OR(COUNT(*))))AND(rt1.c0)), TRIM(CASE vt0.c0  WHEN rt1.c2 THEN 0Xfffffffff1ce3973 END) FROM rt1, vt1, t0 LIMIT -485791160;SELECT '' FROM vt0, rt1; -- 0ms;
SELECT ALL (((((rt1.c0)OR(vt1.c0)))OR(rt1.c1)) IN ()) FROM vt1, t0, vt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN (((vt1.c1))>=((rt1.c2))) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((((((((rt1.c3)AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c2)))AND(vt1.c0)) THEN vt1.c2 WHEN CAST(rt1.c4 AS REAL) THEN MAX(vt0.c0) ELSE json_insert(rt1.c4, rt1.c1, rt1.c1) END, ((NOT (t0.c0)) IN (MAX(vt1.c2), '492150635')), (NOT (COUNT(*))) FROM rt1, vt0, t0 WHERE (((((NOT (x'a65a')), 0.5832825134506257, ((('猲b34'))>(('-415638561'))), CAST(NULL AS NUMERIC), (+ (x'b0cf'))))>(('Q^aF', 653145856, '' COLLATE NOCASE, (((((((('npT\[\nX')AND(NULL)))AND(0.43633870259810636)))AND('')))OR(0.8014685983835236)), ((x'3ba4')IS(x'')))))) LIMIT 1230832282;SELECT DISTINCT TYPEOF(DISTINCT ABS(rt1.c4)), LIKELIHOOD(rt1.c3, 0.4230497689013275), (((((rt1.c0))==((rt1.c1))))>=(rt1.c4 COLLATE RTRIM)) FROM t0, rt1, vt0 WHERE ((('th')GLOB(0.1479647559359787)) COLLATE BINARY) LIMIT 1512713744 OFFSET -238524364; -- 0ms;
SELECT DISTINCT ((((vt1.c1)+(rt1.c4)))|(((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt1.c2)))) FROM vt0, vt1, rt1, t0 GROUP BY (((json_remove(vt1.c2, rt1.c3), (((rt1.c1, rt1.c1, rt1.c0))<((vt1.c2, rt1.c0, vt1.c2))), (rt1.c0 IN ())))<((((x'')+(NULL)), (((rt1.c4, rt1.c0, rt1.c4)) BETWEEN ((rt1.c3, vt1.c2, vt1.c0)) AND ((rt1.c3, t0.c0, vt1.c0))), CAST('' AS NUMERIC)))); -- 1ms;
SELECT DISTINCT (COUNT(rt1.c1) IN ()) FROM vt1, t0 WHERE (''); -- 0ms;
SELECT ((((vt0.c0 IN ())))<=(((vt1.c1 IN (vt0.c0))))) FROM t0, vt1, vt0; -- 0ms;
SELECT ALL NULL, rt1.c1, ((UNICODE(rt1.c0))<=(LIKELY(DISTINCT rt1.c2))), (- (((t0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)))), (+ (CAST(rt1.c1 AS NUMERIC))) FROM vt0, vt1, rt1, t0; -- 0ms;
SELECT CAST(0.8397908773317139 AS BLOB), (((vt1.c0, 0X73819ba8, t0.c0)) BETWEEN ((GLOB(vt0.c0, t0.c0), ((vt1.c0) IS TRUE), CASE t0.c0  WHEN vt1.c1 THEN vt1.c1 WHEN rt1.c4 THEN 1512713744 WHEN vt1.c2 THEN vt1.c2 END)) AND ((CAST(t0.c0 AS BLOB), ((rt1.c2)<>(vt1.c1)), (vt0.c0 IN ())))), rt1.c2, ((AVG(rt1.c1)) ISNULL), ROW_NUMBER() OVER () FROM vt1, vt0, t0 WHERE (LIKELY(DISTINCT (('CJKzxpB(') NOT NULL)));SELECT (+ (LTRIM(vt1.c2))), (COUNT(rt1.c2) IN (((((rt1.c4)AND(t0.c0)))OR(rt1.c3)))), (((((t0.c0)>(t0.c0))))=(((((rt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c0)))))) FROM t0, vt1, vt0;SELECT DISTINCT CAST(HEX(vt1.c1) AS BLOB), CAST(((vt1.c1) IS FALSE) AS NUMERIC), (~ (MIN(1057470083))), CAST(rt1.c0 COLLATE BINARY AS TEXT), ((((CAST(vt1.c2 AS NUMERIC))AND(x'')))AND((- (vt0.c0)))) FROM vt1, t0, vt0 WHERE (((json_remove(x'a080', '')) NOT BETWEEN ((+ (0.2755700826466273))) AND ((NULL IN ())))) GROUP BY (((((rt1.c4)AND(t0.c0)), LIKELY(DISTINCT vt1.c1), ((vt1.c2)+(rt1.c0))))<=((LOWER(vt0.c0), (+ (t0.c0)), ((vt1.c0) ISNULL)))), ((((((((((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4)))OR((- (vt1.c2)))))AND(((rt1.c3) NOT NULL))))OR(x'be39')))OR((((rt1.c4)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))), (((vt1.c0 IN ())) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c4));SELECT DISTINCT vt1.c2, CASE WHEN ((vt1.c1)IS(rt1.c4)) THEN -4.15638561E8 WHEN (((rt1.c1)) BETWEEN ((rt1.c4)) AND ((vt1.c0))) THEN vt1.c0 WHEN (((rt1.c1))==((t0.c0))) THEN CAST(rt1.c3 AS TEXT) ELSE (((rt1.c4)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, (+ (-1723044150)), SQLITE_SOURCE_ID() COLLATE BINARY, (((((~ (rt1.c4)))OR(((vt1.c0)>>(vt0.c0)))))OR(((((vt1.c1)OR(rt1.c1)))OR(rt1.c0)))) FROM rt1, vt0;SELECT ALL (+ ((('') BETWEEN (rt1.c3) AND (vt1.c2)))) FROM vt1, rt1, vt0 LIMIT 1512713744; -- 0ms;
SELECT ALL MAX(CASE rt1.c0  WHEN rt1.c3 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c3 WHEN vt1.c1 THEN t0.c0 END) FROM t0, vt0, rt1;SELECT DISTINCT (+ (vt0.c0)) COLLATE NOCASE, (((vt1.c1 IN ())) BETWEEN (CAST(rt1.c1 AS REAL)) AND (vt1.c2)), ((((vt0.c0) NOTNULL))>>(((t0.c0) NOT BETWEEN (vt1.c2) AND (rt1.c2)))) FROM t0 GROUP BY CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END COLLATE RTRIM HAVING ((((rt1.c3)<=(rt1.c4)))LIKE(SUM(rt1.c4))) LIMIT 1937873832 OFFSET -472894489;SELECT DISTINCT LIKE((rt1.c2 IN ()), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2)))) FROM vt0 LEFT OUTER JOIN rt1 ON x'd1fd' RIGHT OUTER JOIN t0 ON ((((rt1.c0)IS NOT(rt1.c1)))OR(((rt1.c1) BETWEEN (rt1.c2) AND (vt1.c1))));SELECT ALL UNICODE(((rt1.c1) NOT NULL)) FROM t0, vt1 NOT INDEXED, rt1 RIGHT OUTER JOIN vt0 ON (((((vt1.c0))<=((vt1.c0)))) BETWEEN (((vt1.c2) BETWEEN (t0.c0) AND (rt1.c2))) AND (((0.3070396279173331)IS(rt1.c4)))) WHERE (CAST(((0.7712449508347325) NOT BETWEEN (x'') AND ('Qzws8')) AS REAL)) GROUP BY CAST(CAST(rt1.c2 AS REAL) AS INTEGER) ORDER BY ((((rt1.c3)IS NOT(t0.c0)))GLOB(CASE -1.72304415E9  WHEN vt1.c1 THEN rt1.c0 END)) DESC  NULLS LAST, ((((((((((rt1.c0) NOT NULL))AND(CASE WHEN vt0.c0 THEN rt1.c1 ELSE vt1.c2 END)))AND(CAST(vt1.c2 AS NUMERIC))))OR(CAST(rt1.c3 AS REAL))))OR(HEX(vt0.c0))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT t0.c0 FROM vt1, rt1 GROUP BY rt1.c4;SELECT ALL ((JULIANDAY(rt1.c3, vt0.c0, '^ir(X(')) NOT BETWEEN (rt1.c2) AND (((vt1.c1) BETWEEN (rt1.c3) AND (rt1.c3)))), rt1.c0, ((t0.c0)IS NOT(SUM(t0.c0))) FROM vt0, vt1 WHERE ((((((NULL IN ()))OR((('')&(NULL)))))AND(((-259240968)-(0x441dc50c))))) ORDER BY CAST((rt1.c4 IN ()) AS NUMERIC) DESC;SELECT (((vt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c2)), GROUP_CONCAT(rt1.c3), ((((t0.c0)OR(rt1.c3)))AND(t0.c0)))) AND (((+ (rt1.c0)), rt1.c4, vt1.c2 COLLATE BINARY))) FROM rt1, t0, vt0, vt1 WHERE ((((((NULL)IS NOT(-2015602897)), (+ (NULL)), ((x'')|(0.35923002888993183))))==(((- (NULL)), (~ (0x35d3a1b5)), '-2015602897' COLLATE RTRIM)))); -- 0ms;
SELECT ALL (((~ (rt1.c3)))+(CAST(vt0.c0 AS NUMERIC))) FROM vt0, rt1, t0; -- 1ms;
SELECT ALL ((COUNT(vt1.c0))>=(CASE WHEN vt1.c1 THEN rt1.c1 END)) FROM vt1;SELECT DISTINCT ((TRIM(x'736c')) NOT NULL), ((((rt1.c3) NOTNULL))=(rt1.c1 COLLATE RTRIM)), CASE vt1.c2 COLLATE NOCASE  WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c3) IS TRUE) ELSE ((vt0.c0) NOTNULL) END FROM t0, vt0 WHERE (((((((NULL) IS FALSE))AND(((('915339071'))=((x'ec4d'))))))OR(((0.278586440368502) NOTNULL))));SELECT DISTINCT CASE WHEN (vt1.c0 IN (rt1.c1)) THEN (+ (rt1.c3)) ELSE CAST(rt1.c0 AS BLOB) END FROM t0, vt0, vt1 ORDER BY ((vt1.c2)>>(json_type(rt1.c4))) DESC  NULLS FIRST, (CASE WHEN rt1.c3 THEN 1.937873832E9 ELSE t0.c0 END IN ());SELECT DISTINCT LAST_VALUE(CAST((((vt0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.8874421697386788, '680704777', t0.c0))) AS REAL)) OVER (), ((((rt1.c3) BETWEEN (vt1.c2) AND (0Xfffffffff1ce3973)))GLOB((- (rt1.c3)))), (~ (rt1.c2)) COLLATE NOCASE COLLATE RTRIM FROM t0, vt0;SELECT DISTINCT ((0.3200032379504707)>(HEX(vt1.c2))) FROM t0;SELECT ALL (((((vt1.c1))>((t0.c0))))<(CAST(rt1.c1 AS INTEGER))) FROM vt0;SELECT DISTINCT GROUP_CONCAT(TRIM(DISTINCT rt1.c0, rt1.c3)) FROM t0, vt1, vt0;SELECT DISTINCT CASE MIN(0Xfebe9e0)  WHEN ((((rt1.c0)OR(vt1.c1)))OR(vt1.c0)) THEN '1620674454' END FROM t0, vt1, vt0, rt1 WHERE ((((('915339071')-('殾e)-')))>(((((0.8874421697386788)AND('')))OR(NULL))))); -- 1ms;
SELECT CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)) AS NUMERIC) FROM vt1 WHERE (((((('')AND(x'')))AND(-2.015602897E9)) IN ()));SELECT DISTINCT UNLIKELY(DISTINCT COUNT(vt1.c2)) FROM vt0, vt1 WHERE (CASE NULLIF(DISTINCT 0.6307794870109599, NULL)  WHEN '\D6dyI' COLLATE BINARY THEN (NOT (0.4489657153140292)) WHEN ((1142801676) BETWEEN (1.937873832E9) AND (NULL)) THEN ('236668929' IN (0Xffffffffd4ac84b0, NULL)) WHEN NULL THEN ((NULL)*(NULL)) ELSE NULL END); -- 0ms;
SELECT ALL RANK() OVER () FROM rt1, vt1, vt0 WHERE ((+ (((NULL)=(-1.33130696E8))))); -- 0ms;
SELECT DISTINCT (((rt1.c0 IN ())) NOT BETWEEN ((0.8397908773317139 IN (0.3200032379504707))) AND ((vt1.c1 IN ()))) FROM t0, vt1, rt1, vt0; -- 1ms;
SELECT DISTINCT AVG(CAST(rt1.c2 AS REAL)) COLLATE NOCASE FROM rt1, vt0, t0 WHERE (CASE NULL COLLATE RTRIM  WHEN (~ (NULL)) THEN (((0xffffffffd4ac84b0))<((0.7712449508347325))) WHEN (- (x'cb8c')) THEN '-13022862' COLLATE RTRIM WHEN ABS(NULL) THEN (((('0.2755700826466273')AND('<K\r7+1')))OR(0.8780909969551178)) ELSE CAST(0x27206f5c AS NUMERIC) END) GROUP BY (((t0.c0) NOT NULL) IN ()), (NOT ((rt1.c3 IN (rt1.c1)))), ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END) NOT BETWEEN ((0.1474406592044476 IN ())) AND (((rt1.c3)-(vt1.c1))));SELECT ALL GROUP_CONCAT(((t0.c0) NOT BETWEEN (rt1.c4) AND (0.41379928631408536))) OVER ( ORDER BY (((vt1.c1)) BETWEEN ((LOWER(vt1.c2))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN vt1.c2 ELSE rt1.c1 END))) ASC  NULLS LAST) FROM vt0, vt1, t0 WHERE (((((CASE '-246925803'  WHEN x'cd1a' THEN 0X73368a58 ELSE '' END)OR((((NULL))<=((1.33937827E8))))))AND(CAST('1958380322' AS INTEGER)))) ORDER BY (~ ((((vt0.c0))>=((rt1.c0))))) DESC;SELECT DISTINCT (((NOT (NULL))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (IFNULL(DISTINCT vt0.c0, t0.c0))) FROM vt1, vt0, rt1;SELECT ALL SQLITE_VERSION() FROM vt1, t0; -- 0ms;
SELECT HEX(DISTINCT '') FROM vt1, rt1, t0, vt0 WHERE ((((((((((((((((1.007463179E9)OR(NULL)))AND('jZ')))AND('915339071')))OR(0.4204517523339746)))OR(0.7244449135091463)))AND('ﳝ*IAS}'))))<(('C栴mXZ,殾')))) GROUP BY ((vt1.c0 IN ()) IN ((((0.43774329592832006))!=((t0.c0))))); -- 0ms;
SELECT DISTINCT CASE CAST(rt1.c1 AS NUMERIC)  WHEN ((rt1.c1)OR(rt1.c1)) THEN AVG(vt1.c1) ELSE AVG(t0.c0) END FROM rt1, vt1, t0; -- 0ms;
SELECT DISTINCT (vt1.c0 COLLATE NOCASE IN ()), CAST(MIN(vt1.c1) AS NUMERIC), (((NOT (rt1.c0)))<('1512713744' COLLATE BINARY)) FROM vt0, vt1, t0, rt1 WHERE ((((NULL, '649230513', 'a&TOn+*~'))>=((-74171576, NULL, NULL))) COLLATE BINARY); -- 0ms;
SELECT AVG((vt1.c0 IN ())) OVER (), ((((((((((rt1.c1) IS TRUE))AND(COUNT(*))))OR(0.0027996850662174166)))AND((rt1.c4 IN (rt1.c4)))))AND(CAST(rt1.c1 AS TEXT))), ((((((t0.c0) IS TRUE))OR(LIKELIHOOD(rt1.c3, 0.4100350424211655))))AND((rt1.c4 IN (vt1.c0)))) FROM t0 WHERE ('ꏠS[]kn~Z][H' COLLATE BINARY);SELECT DISTINCT ((((CASE t0.c0  WHEN vt1.c2 THEN rt1.c0 WHEN t0.c0 THEN '0.4681430543221814' WHEN rt1.c1 THEN rt1.c0 END)OR(CAST(t0.c0 AS NUMERIC))))AND((NOT (NULL)))), json_remove(CASE t0.c0  WHEN rt1.c0 THEN vt1.c2 ELSE 0.44506526842730354 END, CASE vt1.c1  WHEN rt1.c1 THEN vt1.c0 END), AVG(rt1.c1) OVER () FROM vt1 FULL OUTER JOIN vt0 ON HEX(DISTINCT ((NULL) BETWEEN (t0.c0) AND (rt1.c3)));SELECT DISTINCT (CAST(rt1.c2 AS BLOB) IN ()) FROM t0, vt1, rt1, vt0 WHERE (((((x'')*(6.49230513E8))) ISNULL)); -- 0ms;
SELECT ALL GROUP_CONCAT(vt1.c2 COLLATE NOCASE COLLATE BINARY), ((((rt1.c0)/(0.5567357321466135)))<(rt1.c4)), ((vt1.c2 IN (vt0.c0)) IN ()) FROM vt0;SELECT ALL vt1.c0 FROM vt0, t0, vt1, rt1; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS REAL)) IS FALSE) FROM t0, rt1, vt0 WHERE ((((NULL)>(NULL)) IN ())) GROUP BY CASE CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt1.c4 WHEN rt1.c2 THEN vt1.c2 END  WHEN (rt1.c3 IN ()) THEN 0.034467655978136724 ELSE CASE t0.c0  WHEN vt0.c0 THEN rt1.c3 ELSE '' END END HAVING ((((rt1.c2)<<(rt1.c2)))!=(((vt1.c2)+(vt1.c0))));SELECT DISTINCT (NOT (t0.c0 COLLATE BINARY)), (CAST(vt1.c2 AS REAL) IN ()), LAST_VALUE(IFNULL((vt0.c0 IN ()), (((vt0.c0, NULL, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))) OVER () FROM vt0;SELECT ALL (((t0.c0 COLLATE RTRIM))!=((((vt1.c1)/('188618232'))))) FROM t0, vt1, rt1; -- 0ms;
SELECT 1.937873832E9, ((((rt1.c4) ISNULL)) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c3)))AND(0.4560474373066312)))AND(vt0.c0)))OR(rt1.c4))) AND (HEX(DISTINCT vt1.c2))), COUNT(*) COLLATE RTRIM FROM vt0 WHERE (TRIM(DISTINCT ((((0.5519807790223706)AND(NULL)))OR(0.9645139706809754)), (((('680704777')AND(x'')))AND(x'3dcc4d73'))));SELECT COUNT(*) FROM vt1 WHERE (json_insert((((0.580924863859014, x'b389', 'Vz	69JQCH', x'', 0.2824694183499097)) BETWEEN ((x'5a6333b1', '628096106', '1709166372', 0.47218829682183383, 0.39731740229264345)) AND (('290129823', x'', '903061941', 188618232, NULL))), ((x'')GLOB(NULL)), ((((0X34c16f8e)OR('979060195')))AND(']L')))); -- 0ms;
SELECT DISTINCT x'' FROM rt1, vt0, vt1, t0 ORDER BY ((((CASE vt1.c0  WHEN rt1.c0 THEN t0.c0 ELSE vt1.c0 END)AND(((0X3e1135d3) NOT BETWEEN (vt1.c2) AND (vt0.c0)))))AND(((((((((rt1.c0)AND(rt1.c4)))AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c2)))) DESC, CASE ((vt1.c2)LIKE(rt1.c2))  WHEN ((rt1.c0)||(rt1.c2)) THEN (rt1.c3 IN ()) END  NULLS FIRST; -- 0ms;
SELECT STRFTIME((vt0.c0 IN ()), MIN('856956809'), vt1.c1), ((CAST(rt1.c2 AS REAL))<<(MAX(rt1.c2))), ((rt1.c0 COLLATE BINARY) NOT NULL) FROM rt1, vt0;SELECT DISTINCT CAST(SUM(t0.c0) AS BLOB) FROM t0, vt0 WHERE (CAST(((('979292421')) NOT BETWEEN ((0.6237092227753482)) AND (('1057470083'))) AS REAL)) ORDER BY UPPER(DISTINCT ((vt1.c0)-(vt1.c1)))  NULLS FIRST;SELECT DISTINCT ((((vt0.c0, -1672736764, rt1.c1))<((rt1.c4, vt0.c0, rt1.c4))) IN ()) FROM vt1, vt0, rt1 WHERE ((((NULL IN ()))>>(NULL))); -- 0ms;
SELECT ((vt1.c1)>=('0.034467655978136724')) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT rt1.c4, NTH_VALUE((((rt1.c2)&(vt1.c1)) IN ()), (((rt1.c0)) NOT BETWEEN ((((vt1.c2) NOTNULL))) AND ((((((x'')AND(rt1.c4)))OR(vt1.c1)))))) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS), ((((((rt1.c0)AND(rt1.c1)))OR(vt1.c0)))AND(((((((((vt1.c1)OR(vt1.c2)))OR(rt1.c3)))AND(vt1.c0)))AND(vt1.c1)))) FROM vt0, rt1, vt1, t0; -- 0ms;
SELECT CASE WHEN MIN(vt1.c1) THEN ((rt1.c4)!=(rt1.c1)) ELSE ((vt1.c2)%(vt1.c1)) END FROM rt1, t0, vt1, vt0 WHERE ((+ ((~ ('-0.0'))))) UNION SELECT ALL (- (TOTAL('minutesR'))) FROM t0, vt0, rt1 WHERE (0.4563293900901073); -- 1ms;
SELECT DISTINCT (((+ (vt1.c1)))>=(((((((((vt1.c1)OR(rt1.c2)))AND(rt1.c1)))OR(0.03389470714922338)))OR(vt1.c2)))) FROM t0, vt1, rt1, vt0 WHERE ((('628096106')<<('1129441230')) COLLATE NOCASE); -- 0ms;
SELECT (((((rt1.c4, vt0.c0, vt1.c1)) NOT BETWEEN ((rt1.c2, vt1.c2, rt1.c4)) AND ((vt1.c2, vt1.c0, vt1.c0)))) BETWEEN (ABS(rt1.c1)) AND (((((vt1.c1)AND(vt1.c0)))OR(rt1.c0)))), DENSE_RANK() OVER ( PARTITION BY CAST(vt1.c2 COLLATE NOCASE AS BLOB), CAST('minutesR' AS NUMERIC)), (((rt1.c2, NULL, vt1.c0)) BETWEEN ((((vt1.c1)IS(rt1.c1)), vt1.c2, ((vt1.c1) BETWEEN (NULL) AND (rt1.c0)))) AND ((((((rt1.c4)AND(rt1.c1)))AND('')), ((vt1.c2) IS TRUE), (vt1.c0 IN ())))) FROM t0;SELECT DISTINCT ((((0X3f07b683 IN ())))=((rt1.c4))) FROM t0, rt1, vt0, vt1 WHERE (((((((649230513)%('0.1474406592044476')))OR(x'7ae4' COLLATE NOCASE)))AND(CAST('()' AS BLOB)))) ORDER BY vt1.c0  NULLS LAST LIMIT 1044170633; -- 0ms;
SELECT DISTINCT CAST(vt1.c2 AS NUMERIC), CUME_DIST() OVER (), CASE WHEN ((vt1.c0)IS NOT(t0.c0)) THEN rt1.c0 WHEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c3))) THEN (+ (rt1.c2)) WHEN ((vt1.c2)>(vt1.c1)) THEN CAST(rt1.c0 AS TEXT) ELSE CAST(rt1.c0 AS REAL) END FROM rt1;SELECT ((((CAST(vt1.c1 AS BLOB))AND((rt1.c3 IN ()))))OR(NULL)), (((rt1.c4) IS TRUE) IN ()), (NOT (LIKELY(DISTINCT vt1.c2))) FROM t0 WHERE (TRIM(CAST(x'' AS NUMERIC)));SELECT DISTINCT AVG(((vt0.c0)%(t0.c0))), NULLIF(DISTINCT (((rt1.c2, rt1.c4, 0.6452582432021604))>((vt1.c1, rt1.c2, rt1.c3))), COUNT('267119072')), TRIM((vt1.c2 IN ()), rt1.c4) FROM vt1, rt1, vt0, t0; -- 0ms;
SELECT NULL, ((rt1.c4 COLLATE BINARY) IS TRUE), (GROUP_CONCAT(vt0.c0) IN ()) FROM vt1, t0, rt1; -- 0ms;
SELECT ALL ((((rt1.c4)==(vt1.c0))) IS FALSE) FROM vt1 WHERE (CAST('Fv' AS BLOB) COLLATE NOCASE) ORDER BY vt1.c2;SELECT DISTINCT LOWER((- (rt1.c2))) FROM vt0, rt1 WHERE (CAST((NULL IN ('င>\r抪~')) AS TEXT)); -- 0ms;
SELECT ALL MAX(((vt1.c0) BETWEEN (rt1.c1) AND ('DVA-}uP'))) FROM t0, rt1 WHERE ((((('hPHRT') BETWEEN ('-13022862') AND (0xfffffffff1ce3973)))<>((0.18069247965834068 IN (1230832282))))) ORDER BY ((((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))) IN ())  NULLS LAST;SELECT rt1.c0, LIKELIHOOD(DISTINCT rt1.c0, 0.3310035667556993), ((NULL)|((((t0.c0, rt1.c0, vt1.c1))<((rt1.c3, NULL, ''))))) FROM vt1, t0, rt1, vt0 WHERE ((((NULL)) NOT BETWEEN ((TYPEOF(DISTINCT 'PgG'))) AND (((((''))==((NULL))))))); -- 0ms;
SELECT DISTINCT ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (rt1.c4))) BETWEEN ('1128743969') AND (rt1.c0)) FROM vt0 WHERE (CASE WHEN (NOT ('')) THEN CASE WHEN x'' THEN '0.4681430543221814' ELSE NULL END WHEN (0Xffffffff87dc572f IN ()) THEN ((NULL) ISNULL) WHEN (- (x'')) THEN ((x'fa18')<>('-787188195')) END);SELECT DISTINCT UNLIKELY(rt1.c2) COLLATE RTRIM, ((((COUNT(*))AND((('aj')OR(rt1.c0)))))OR(vt1.c1 COLLATE BINARY)), (((- (vt0.c0)))<<(('' IN ()))) FROM t0, vt0, rt1, vt1; -- 0ms;
SELECT DISTINCT (NOT (((rt1.c4)>(rt1.c3)))) FROM rt1, vt1, vt0, t0; -- 0ms;
SELECT (((0x495d029a, TOTAL(t0.c0), ((vt1.c0) IS FALSE)))<=((CAST(t0.c0 AS NUMERIC), t0.c0, ((rt1.c1)AND(rt1.c1))))), ((((vt1.c2)AND(vt1.c0)))AND(rt1.c1)) COLLATE BINARY, rt1.c1 FROM rt1 WHERE ((((('-1511404677')OR(0.9813785807600648)))OR('뫻_.I')) COLLATE NOCASE COLLATE RTRIM);SELECT MIN(CAST(vt1.c1 AS INTEGER) COLLATE RTRIM) FROM t0;SELECT DISTINCT vt1.c1 FROM vt1, t0 WHERE (CAST((((x''))<=(('-1700001243'))) AS BLOB)); -- 0ms;
SELECT DISTINCT ((rt1.c1)LIKE(vt0.c0)) COLLATE RTRIM, ((((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c2)))AND(CAST(t0.c0 AS INTEGER))))OR((NOT (rt1.c2)))), ((((vt0.c0) IS FALSE))LIKE(CASE WHEN rt1.c1 THEN rt1.c2 ELSE '|OyYjV' END)) FROM vt0 NOT INDEXED, rt1 WHERE ((NULL COLLATE RTRIM IN ()));SELECT DISTINCT ((MAX(rt1.c1))<=(NULL)) FROM vt1 WHERE (((((1.044170633E9))<=(('	+'))) IN ((((('')AND(NULL)))AND(0.173424695721057)))));SELECT DISTINCT ((rt1.c0 COLLATE NOCASE)-(AVG(vt1.c2))) FROM vt1, rt1, t0 WHERE (CAST((((((((('FALSE')AND(0.04290929178532943)))OR(0.40735930925782493)))AND(NULL)))AND(x'')) AS NUMERIC)) LIMIT -1495223308 OFFSET 656437084; -- 0ms;
SELECT DISTINCT CASE ((((vt1.c0)AND(rt1.c2)))OR(t0.c0))  WHEN COUNT(*) THEN CAST(vt1.c2 AS BLOB) WHEN CASE NULL  WHEN rt1.c2 THEN vt1.c1 ELSE vt0.c0 END THEN CAST(rt1.c0 AS NUMERIC) WHEN ((rt1.c0) ISNULL) THEN SUM(rt1.c1) WHEN 1125163856 THEN ((rt1.c4)OR('164775812')) WHEN (((rt1.c3))<=((rt1.c4))) THEN ((((rt1.c2)OR(x'')))OR(vt1.c0)) END FROM vt0, t0, rt1 WHERE ((((0.4153979487291912)) BETWEEN (((NOT ('-726891344')))) AND ((CASE WHEN 'Q|X6' THEN x'' WHEN '267985207' THEN NULL WHEN 0.40735930925782493 THEN NULL ELSE 0.04809988674147947 END)))) LIMIT -1904790108;SELECT ALL ((vt1.c1)<=(rt1.c4)) COLLATE RTRIM, (((~ (rt1.c0)))!=(CASE WHEN t0.c0 THEN vt1.c1 END)), ((((t0.c0)GLOB(vt0.c0)))IS(COUNT(vt1.c0))) FROM t0, rt1, vt0, vt1; -- 1ms;
SELECT CAST(((rt1.c1)%(rt1.c1)) AS TEXT) FROM rt1 WHERE (json_array(0xffffffffd1ddf217, (0Xffffffff9aac0a25 IN ()))); -- 0ms;
SELECT DISTINCT vt0.c0, CASE WHEN UNICODE(t0.c0) THEN ((((((((rt1.c3)AND(rt1.c2)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c2)) ELSE ((vt1.c0) BETWEEN (rt1.c3) AND (vt1.c1)) END, (((((t0.c0)IS NOT(vt0.c0))))>((LIKELIHOOD(NULL, 0.14440316235995787)))) FROM vt1 WHERE (CASE LIKELIHOOD(DISTINCT 0x3f07b683, 0.28766514546522703)  WHEN NULL THEN TRIM(1571009955, x'') WHEN ((NULL)-('')) THEN ((x'')*(0.26359801579345943)) WHEN ((('],Z3Q/ꬋ', x'', x'9b1e')) BETWEEN ((NULL, x'', '[]')) AND ((0.5087441664171433, x'', '1128743969'))) THEN ((x'baa8')||(',X')) END);SELECT (+ (rt1.c3)) COLLATE RTRIM FROM t0, vt1, vt0, rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c3)AND(rt1.c2)))AND(vt1.c2))) ISNULL) FROM t0, vt1, vt0;SELECT DISTINCT rt1.c4 FROM vt1, t0, rt1 WHERE (CASE WHEN 0x7dcbb4d7 COLLATE BINARY THEN CAST(NULL AS REAL) WHEN CASE NULL  WHEN 0.6048970056385327 THEN 267985207 WHEN x'' THEN '1230832282' WHEN NULL THEN 2.35825729E8 ELSE 0.7580929471484694 END THEN CASE '&V7L'  WHEN 0.3070396279173331 THEN 0.5819227082685886 ELSE x'' END WHEN (0Xb8dae7a IN ()) THEN NULL COLLATE NOCASE ELSE ('0.175857788199561' IN ()) END) LIMIT 505031083; -- 0ms;
SELECT DISTINCT (rt1.c1 IN ()) FROM t0, vt1, rt1 WHERE (((TIME('~篙_V)2JbJ', 100806179, x'644f')) NOT BETWEEN (0Xffffffff9c4c1004 COLLATE RTRIM) AND ((NOT ('-1899404630'))))) ORDER BY LIKELY(DISTINCT (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((t0.c0)))) DESC; -- 0ms;
SELECT ((((- (vt0.c0)), ((((vt0.c0)AND(rt1.c1)))AND(rt1.c0)), ((rt1.c4)LIKE(rt1.c0))))==((((((rt1.c3)OR(rt1.c1)))OR(vt1.c1)), ((vt1.c2) IS FALSE), MIN(rt1.c0, rt1.c4)))) FROM vt0, t0, rt1;SELECT DISTINCT COALESCE(DISTINCT (rt1.c0 IN ()), CASE WHEN rt1.c3 THEN t0.c0 WHEN vt1.c2 THEN t0.c0 WHEN '-1442674487' THEN rt1.c0 END) FROM vt0, vt1, rt1 NOT INDEXED WHERE ((+ (((-2.142735566E9) BETWEEN ('0.6307794870109599') AND ('')))));SELECT DISTINCT NULL FROM vt0 NOT INDEXED, vt1, t0; -- 0ms;
SELECT DISTINCT (- (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4)))) FROM t0 CROSS JOIN vt1 ON CAST(((vt0.c0) IS TRUE) AS BLOB);SELECT ALL rt1.c1 FROM vt1 WHERE (TRIM(LAST_INSERT_ROWID())) GROUP BY ((((rt1.c0) BETWEEN (vt1.c2) AND (vt1.c2))) ISNULL), ((CASE WHEN rt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN rt1.c2 ELSE '-787188195' END)!=((((rt1.c1, rt1.c1, rt1.c3, rt1.c4, t0.c0, t0.c0, rt1.c0))<=((rt1.c4, rt1.c3, vt1.c0, t0.c0, vt1.c1, vt1.c1, rt1.c1))))), t0.c0 HAVING (((((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt1.c1))))=((((((((((((((vt1.c1)OR(rt1.c2)))OR(vt1.c2)))OR(vt1.c1)))AND(vt1.c2)))OR(t0.c0)))AND(vt0.c0)))));SELECT DISTINCT CASE WHEN (+ ('-238524364')) THEN vt0.c0 COLLATE NOCASE ELSE (~ (vt1.c2)) END FROM vt1, rt1, vt0, t0 WHERE ((((0.669477568008937 COLLATE NOCASE))!=((0.7034275659347673)))); -- 0ms;
SELECT (((((t0.c0 IN (rt1.c3)))OR(((vt1.c2)%(rt1.c4)))))OR(((vt1.c2) IS TRUE))) FROM vt0;SELECT DISTINCT rt1.c1 FROM rt1, vt1 GROUP BY (((((t0.c0)|(vt1.c0))))!=((NULL))), (((((rt1.c0 IN ()))AND(vt1.c1)))OR(NULL)), ((((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)))>>(((x'db0b') BETWEEN (vt0.c0) AND (vt0.c0))));SELECT ALL (((rt1.c2, vt1.c2, x'844e')) NOT BETWEEN ((rt1.c1, rt1.c1, 'lc')) AND ((vt0.c0, rt1.c2, vt1.c1))) COLLATE BINARY, CASE NULL  WHEN TRIM(0.7000855612395173, vt1.c1) THEN ((('-598117983', vt1.c1, vt1.c1)) BETWEEN ((t0.c0, t0.c0, 0.2824694183499097)) AND ((rt1.c1, vt0.c0, vt0.c0))) WHEN (((vt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1))) THEN (((vt1.c1, vt0.c0, rt1.c0))!=((rt1.c2, t0.c0, vt1.c0))) WHEN ((vt0.c0)AND(vt1.c1)) THEN CAST(t0.c0 AS BLOB) END, COUNT(CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c4 WHEN t0.c0 THEN rt1.c2 END) FROM vt0, vt1, t0 WHERE (COALESCE(0.03389470714922338, (('-690169436')GLOB(0.5462709679227956)), (('') NOT NULL), x'' COLLATE RTRIM));SELECT DISTINCT (~ (((rt1.c0)GLOB(rt1.c4)))) FROM rt1, t0; -- 0ms;
SELECT ALL NTILE(vt1.c1) OVER (), TRIM(vt1.c0, ((((((((rt1.c0)OR(vt1.c1)))OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c0))), ((((rt1.c2) IS TRUE)) NOTNULL) FROM vt0, vt1 WHERE (((((0x49b10811) NOT BETWEEN (0.5790478890575611) AND (0.8874421697386788))) NOT BETWEEN ((('V\RrU0mI') BETWEEN (x'02ac') AND (NULL))) AND (((x'') IS FALSE))));SELECT DISTINCT ((((((((COUNT(*))OR(((vt0.c0) IS FALSE))))AND(MIN(vt0.c0))))OR(vt0.c0)))AND(((rt1.c4) NOT BETWEEN (rt1.c3) AND (vt1.c0)))), ((((((((rt1.c4)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) COLLATE NOCASE, ((CASE WHEN 0Xffffffff8e7735a4 THEN rt1.c1 WHEN rt1.c3 THEN vt1.c1 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c1 END)-(SUM(vt0.c0))) FROM vt1, vt0, rt1, t0 WHERE ((((0.18069247965834068)) NOT BETWEEN (((('jMly^+G')OR(253600736)))) AND ((((x'') ISNULL))))) LIMIT 1838648041; -- 0ms;
SELECT DISTINCT MIN(CASE WHEN x'6fa2' THEN NULL END) FROM vt1 ORDER BY (((2078274721)) BETWEEN ((((((x'')AND(rt1.c0)))OR(t0.c0)))) AND (((((rt1.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))))), ((rt1.c2 COLLATE NOCASE) IS FALSE) DESC LIMIT 235825729;SELECT DISTINCT ((NOT (rt1.c1)) IN (CAST(rt1.c0 AS BLOB), NULL)), CAST(((((((((rt1.c3)OR(vt1.c1)))OR(rt1.c0)))OR(rt1.c4)))AND(t0.c0)) AS INTEGER), vt1.c0, GROUP_CONCAT((vt1.c0 IN ())), ((vt1.c0) NOTNULL) FROM vt0, rt1, vt1, t0; -- 0ms;
SELECT DISTINCT (+ (((vt1.c1)<<(rt1.c2)))), ((((vt1.c2) NOT BETWEEN (vt1.c2) AND (rt1.c1)))%((((vt0.c0))==((t0.c0))))), (((((((vt0.c0)AND(t0.c0)))OR(vt1.c2)), rt1.c0 COLLATE RTRIM, ((((t0.c0)OR(rt1.c3)))AND(vt1.c2))))<((rt1.c3 COLLATE NOCASE, MIN(vt1.c2), ((rt1.c1)>>(t0.c0))))) FROM rt1, t0 WHERE (((((((((((((NULL)OR(x'')))OR(x'')))OR(NULL)))AND(NULL)))OR(TRIM('', x''))))OR(CASE NULL  WHEN NULL THEN x'' END)));SELECT ALL CAST(COUNT(*) AS TEXT) FROM rt1, vt0, t0, vt1 WHERE ((((NULL COLLATE RTRIM, COALESCE(x'', -313236120), ((x'')|(x''))))>=((SQLITE_COMPILEOPTION_USED(0.01356979408968162), ((x'')<<('1057470083')), ((NULL) BETWEEN ('-882295184') AND (0.43633870259810636)))))); -- 0ms;
SELECT ALL ((x'9672') NOT BETWEEN ((+ (vt1.c2))) AND (vt0.c0 COLLATE RTRIM)) FROM vt0, t0;SELECT ALL CAST(CASE WHEN rt1.c0 THEN t0.c0 END AS BLOB), (NOT ((- (rt1.c3)))), AVG(COALESCE(DISTINCT vt0.c0, rt1.c0) COLLATE BINARY) OVER () FROM rt1, vt0 WHERE (((((((x'')OR(x'8739')))AND(628096106))) IS TRUE));SELECT DISTINCT (((NOT (vt1.c2)))IS NOT(CASE rt1.c1  WHEN rt1.c2 THEN vt1.c2 WHEN x'' THEN t0.c0 WHEN rt1.c1 THEN vt1.c2 ELSE rt1.c0 END)) FROM t0;SELECT DISTINCT (+ (SUM(rt1.c4))) FROM vt0, vt1;SELECT DISTINCT rt1.c4 FROM t0 WHERE (json(CASE 0X410e99c  WHEN 1.958380322E9 THEN x'b396' WHEN x'' THEN 100806179 WHEN x'' THEN x'f0bc' WHEN '' THEN x'' WHEN '-1624452700' THEN NULL END));SELECT MIN((NOT (rt1.c4))) FROM vt0, vt1, t0;SELECT (((((NULL)OR(rt1.c2)))OR(0x69b99e60)) IN ()) FROM vt0, t0, vt1 WHERE (CASE MAX(1.620674454E9, x'')  WHEN ((x'12a2c844') NOTNULL) THEN (((0.5819227082685886, x'', NULL))>=((NULL, 0.7666594569044962, x''))) ELSE CASE WHEN x'' THEN NULL ELSE NULL END END); -- 0ms;
SELECT (NOT (CASE WHEN rt1.c0 THEN rt1.c3 END)), ((((rt1.c0)OR(rt1.c0)))GLOB(LIKELY(vt1.c1))), CAST(((((rt1.c0)OR(vt1.c0)))AND(rt1.c4)) AS TEXT) FROM vt1, rt1, t0, vt0 WHERE (CAST((x'4171' IN ()) AS NUMERIC)) ORDER BY (- (((rt1.c1)AND(rt1.c1)))) DESC; -- 0ms;
SELECT x'', CASE WHEN ((rt1.c4) ISNULL) THEN (NULL IN ()) WHEN ((vt1.c0)*(vt1.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN AVG(rt1.c3) THEN CAST(0X7dcbb4d7 AS INTEGER) END, SUM(CAST(vt1.c1 AS TEXT)) OVER () FROM vt1, t0;SELECT ALL CAST(LIKE(t0.c0, vt1.c0) AS BLOB) FROM t0, vt1, rt1, vt0; -- 0ms;
SELECT DISTINCT CASE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 WHEN vt1.c0 THEN t0.c0 ELSE vt0.c0 END  WHEN ((rt1.c3)==(vt1.c0)) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)) WHEN (NOT (rt1.c3)) THEN ((rt1.c4)AND(0.27034498399910145)) WHEN vt1.c2 COLLATE RTRIM THEN ((rt1.c1)!=(vt1.c1)) WHEN CAST(vt1.c2 AS BLOB) THEN (((rt1.c2, t0.c0, NULL))!=((rt1.c4, rt1.c0, rt1.c3))) WHEN (~ (t0.c0)) THEN (((vt0.c0))>=((rt1.c1))) ELSE ((((x'')AND(vt1.c0)))OR(vt1.c0)) END FROM vt0, vt1, rt1 WHERE (((((('-2094040614', NULL, x'')) NOT BETWEEN (('', 0.8995018185325283, 'lP')) AND ((x'', NULL, x''))))GLOB((~ ('A-'))))) ORDER BY ((((CASE WHEN vt1.c0 THEN rt1.c4 WHEN vt1.c0 THEN rt1.c2 WHEN vt1.c1 THEN x'' END)AND((((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c2))))))AND(vt1.c0)) ASC  NULLS LAST;SELECT DISTINCT CAST(rt1.c3 AS REAL) FROM vt0, t0, rt1 WHERE (((UPPER('1230832282')) NOT BETWEEN (x'') AND (CASE NULL  WHEN NULL THEN 0.3200900544890932 END))) LIMIT -1731291354; -- 0ms;
SELECT rt1.c2 COLLATE RTRIM FROM t0, vt1, rt1, vt0 GROUP BY (NOT (((((vt1.c2)AND(vt1.c0)))AND(vt1.c0)))), ((((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1))) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((((vt0.c0, t0.c0, rt1.c3)) NOT BETWEEN ((t0.c0, t0.c0, 2078274721)) AND ((rt1.c4, rt1.c2, rt1.c3))))), ((((((((((vt1.c2)OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(vt1.c1)))<(t0.c0)) HAVING ((((rt1.c1) BETWEEN ('E?r%') AND (rt1.c1))) NOTNULL); -- 0ms;
SELECT ALL LAG(rt1.c2, ((t0.c0)|(rt1.c3)) COLLATE NOCASE, ((rt1.c0) NOT BETWEEN ((- (x''))) AND ((rt1.c2 IN ())))) OVER ( PARTITION BY (((rt1.c3 IN ())) NOT BETWEEN (rt1.c1) AND (((((vt0.c0)OR(t0.c0)))AND(rt1.c3)))), (((rt1.c4)) BETWEEN ((((rt1.c4) NOT BETWEEN (rt1.c4) AND (t0.c0)))) AND ((((t0.c0)||(t0.c0)))))) FROM t0, rt1;SELECT DISTINCT (COUNT(vt1.c0) IN ()), ((((((((vt1.c2)OR(vt0.c0)))AND(rt1.c4)))OR(CASE vt1.c2  WHEN vt0.c0 THEN rt1.c1 END)))OR(rt1.c2 COLLATE BINARY)), TOTAL(CASE WHEN NULL THEN t0.c0 END), ((((('888377474')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))))-(CAST(rt1.c3 AS NUMERIC))), (((vt1.c1)) NOT BETWEEN ((vt1.c2 COLLATE BINARY)) AND (((x'e3e8' IN ())))) FROM rt1, vt0;SELECT GROUP_CONCAT((((rt1.c1)) BETWEEN ((vt1.c2)) AND ((rt1.c2)))) FILTER(WHERE vt0.c0) OVER () FROM rt1, vt0, vt1; -- 0ms;
SELECT ALL COUNT(CASE rt1.c1  WHEN vt0.c0 THEN vt1.c2 ELSE vt0.c0 END), TOTAL((rt1.c2 IN ())), PERCENT_RANK() OVER () FROM vt0, rt1, t0 WHERE (UPPER('0QVJ')) ORDER BY (((rt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)) IN (json_array_length(rt1.c4)));SELECT DISTINCT CASE (('0.3200900544890932') BETWEEN (rt1.c3) AND (rt1.c2))  WHEN ((rt1.c4) IS FALSE) THEN ((vt1.c0)LIKE(rt1.c2)) WHEN CAST(vt1.c0 AS REAL) THEN NULL WHEN ((vt1.c1)+(rt1.c3)) THEN (rt1.c1 IN ()) END FROM vt0, t0 WHERE ((((NOT (x'')))>((((NULL))<(('1404351876'))))));SELECT ALL ((NULL) BETWEEN (((vt1.c0)IS(t0.c0))) AND (((0.3625109348295772)||(rt1.c4)))), (TOTAL(rt1.c2) IN ()), (CAST(rt1.c3 AS NUMERIC) IN ()) FROM vt1, t0, vt0, rt1; -- 0ms;
SELECT ((((((rt1.c2)+(vt1.c1)))AND(MIN(x''))))AND(CAST(rt1.c2 AS TEXT))) FROM t0, rt1, vt0, vt1; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((((vt1.c1)IS NOT(vt1.c0)))) AND ((CAST(NULL AS REAL)))) FROM vt0, vt1 ORDER BY ((rt1.c0)>((- (vt0.c0)))), ((((CAST(vt1.c0 AS INTEGER))OR(rt1.c1 COLLATE NOCASE)))AND(((((vt1.c1)AND(NULL)))OR(vt0.c0)))) DESC  NULLS FIRST;SELECT '', AVG(UNICODE(rt1.c2)) OVER (), ((((vt1.c2) IS FALSE)) BETWEEN (((vt1.c1)IS('-690169436'))) AND (AVG(rt1.c4))) FROM t0, vt0;SELECT DISTINCT CAST(((((((((rt1.c3)OR(t0.c0)))AND(rt1.c3)))OR(vt1.c1)))OR(vt0.c0)) AS BLOB) FROM vt0 WHERE ((((x'', 0.0895314444174441, -1559125416)) BETWEEN (((+ (x'c8ac')), '-&ꆵ碢V#' COLLATE RTRIM, ((NULL)||(x'c9f5')))) AND (((+ (0.35754525144418225)), (NOT (NULL)), (((('\rq')OR(0.6264723311392384)))AND('LTJu*|'))))));SELECT DISTINCT (((~ (vt1.c2))) IS TRUE) FROM vt0, vt1, rt1, t0; -- 0ms;
SELECT DISTINCT CASE vt1.c1 COLLATE RTRIM  WHEN 0.4337605767918439 THEN ((vt0.c0) BETWEEN ('903061941') AND (rt1.c4)) END FROM t0, vt1, rt1, vt0 WHERE (((x'') BETWEEN (0.8014685983835236) AND (NULL)) COLLATE RTRIM) LIMIT 68217244; -- 0ms;
SELECT ALL GROUP_CONCAT(vt1.c0) COLLATE BINARY FROM rt1, t0 WHERE (((((x'') BETWEEN (0.2232391482160757) AND (0.03565309530180816))) NOT BETWEEN (((NULL) IS FALSE)) AND ((+ ('1227194598')))));SELECT DISTINCT JULIANDAY(vt1.c2, vt1.c0, rt1.c2, rt1.c2, rt1.c3) COLLATE RTRIM, ((t0.c0)LIKE(rt1.c1)) COLLATE RTRIM, ((CASE WHEN rt1.c2 THEN vt1.c2 WHEN rt1.c4 THEN vt0.c0 WHEN vt1.c2 THEN vt0.c0 ELSE '-1803618729' END) NOT BETWEEN ((((rt1.c4, vt1.c1, 0.635708038578989))<((rt1.c2, rt1.c1, vt0.c0)))) AND (CAST(rt1.c2 AS INTEGER))) FROM vt1, t0, vt0, rt1 WHERE (CASE WHEN ('!Z,wLaX' IN ()) THEN LENGTH('-13022862') ELSE ((0.07395400100141791) NOT NULL) END); -- 0ms;
SELECT DISTINCT LEAD(((CASE rt1.c1  WHEN vt1.c2 THEN t0.c0 ELSE vt0.c0 END) IS FALSE), (rt1.c4 IN ()) COLLATE RTRIM, ((CAST(vt1.c0 AS TEXT)) BETWEEN (rt1.c1) AND (((rt1.c3) NOTNULL)))) OVER () FROM vt0, t0, rt1, vt1; -- 0ms;
SELECT ALL CAST(((vt0.c0)<(rt1.c1)) AS REAL) FROM t0, vt1 WHERE (((((((x'')OR(2119242329)))OR(0.6924555578217313))) NOT NULL));SELECT DISTINCT (+ ((rt1.c4 IN ()))), ((t0.c0)%(((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c3)))OR(vt0.c0)))OR(NULL)))), rt1.c3 FROM t0, vt0, vt1, rt1 WHERE ((((NULL)) NOT BETWEEN ((x'')) AND ((((((2.67119072E8)OR(x'')))AND(x'')))))); -- 0ms;
SELECT ((0Xfffffffff1c86834) NOT BETWEEN (TYPEOF(t0.c0)) AND (LTRIM(vt1.c1))) FROM vt0, rt1, t0, vt1 WHERE (COALESCE(((NULL)%('188618232')), (((('?g')AND(0.40735930925782493)))AND('hPHRT')))); -- 0ms;
SELECT COUNT(*), CAST(0.3376134136657425 AS REAL), AVG(((vt1.c1)<<(vt1.c2))) FROM rt1, vt0, vt1 WHERE ((((('^OdUeD!')==('-1754943077')))<(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT (~ ((vt1.c1 IN ()))) FROM rt1, t0; -- 0ms;
SELECT DISTINCT CASE ((t0.c0) ISNULL)  WHEN ((t0.c0)<>(rt1.c4)) THEN rt1.c2 COLLATE BINARY WHEN rt1.c0 THEN CAST(rt1.c3 AS TEXT) WHEN ((rt1.c2) IS TRUE) THEN rt1.c2 COLLATE NOCASE ELSE UPPER(DISTINCT vt1.c2) END, (((rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c0)) BETWEEN (((vt1.c1 IN ()), (((rt1.c4, rt1.c2, rt1.c4))>=((vt0.c0, vt1.c1, rt1.c0))), AVG(vt1.c0), CASE WHEN vt1.c0 THEN vt1.c1 ELSE rt1.c2 END, ((vt1.c1) NOT BETWEEN (NULL) AND (vt0.c0)))) AND ((TRIM(DISTINCT vt1.c0), (- (rt1.c0)), CASE WHEN rt1.c1 THEN vt1.c1 WHEN NULL THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN 'x렲%춴3yqOW' THEN rt1.c1 END, t0.c0, vt1.c1 COLLATE RTRIM))), CAST('kdWr<' AS REAL) FROM rt1, t0, vt0 GROUP BY CAST((- (rt1.c1)) AS INTEGER) HAVING (+ (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c1))));SELECT ALL CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM FROM rt1, t0, vt0, vt1; -- 1ms;
SELECT (((((vt1.c1)IS(rt1.c4))))>((rt1.c2 COLLATE BINARY))) FROM vt1 ORDER BY (((('>x#\')>(rt1.c0))) NOT NULL)  NULLS FIRST;SELECT DISTINCT COUNT(CAST(vt0.c0 AS TEXT)) OVER () FROM t0, vt1;SELECT DISTINCT ((((vt1.c2, rt1.c2, rt1.c2, vt1.c0, rt1.c0, t0.c0, 1.773772384E9))=((rt1.c3, vt1.c0, rt1.c3, t0.c0, rt1.c4, vt1.c2, t0.c0))) IN ()) FROM vt0, rt1, t0 WHERE (((0.9729996003200514)GLOB('-512722782' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT x'', NTILE(1404351876) OVER (), CAST(rt1.c3 COLLATE NOCASE AS BLOB), AVG(TRIM(vt0.c0, vt1.c1)) OVER (), (((vt1.c0 IN ()))GLOB(GROUP_CONCAT(rt1.c0))) FROM t0, rt1, vt0;SELECT (((rt1.c3)) NOT BETWEEN (('-1327322331' COLLATE NOCASE)) AND ((LIKELY(rt1.c1)))) FROM t0, vt0, rt1, vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT ((rt1.c0)>>(t0.c0)) COLLATE RTRIM, TOTAL_CHANGES(), 'eD' FROM vt1, vt0, rt1 WHERE (((('pgg') NOT BETWEEN (x'') AND (x'')) IN ()));SELECT ALL CASE WHEN ((rt1.c1)+(rt1.c4)) THEN COUNT(*) WHEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))) THEN UPPER(vt1.c2) WHEN (((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) THEN ((rt1.c3) ISNULL) END, (((vt1.c0 IN (rt1.c3)))IS(((rt1.c3) NOTNULL))), ((CAST(rt1.c0 AS TEXT)) ISNULL) FROM rt1;SELECT DISTINCT (((CASE 9.15339071E8  WHEN rt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN t0.c0 WHEN rt1.c3 THEN rt1.c3 ELSE vt1.c1 END, (((vt1.c0, rt1.c0, vt1.c0)) BETWEEN ((rt1.c3, t0.c0, x'a6ff')) AND ((rt1.c1, vt1.c0, vt1.c0))), rt1.c2 COLLATE NOCASE))>=((0.635708038578989, x'', ((rt1.c4) IS TRUE)))), CASE WHEN rt1.c3 THEN NULL WHEN rt1.c0 THEN vt1.c2 WHEN vt1.c1 THEN rt1.c3 END COLLATE RTRIM, CASE NULL  WHEN (~ (rt1.c1)) THEN json_insert(vt1.c0, rt1.c2, vt1.c1) WHEN ((t0.c0) NOT BETWEEN (vt1.c2) AND (rt1.c3)) THEN ((vt1.c2)!=(rt1.c1)) WHEN ((rt1.c4)<=(vt0.c0)) THEN CAST(vt1.c0 AS TEXT) ELSE CASE t0.c0  WHEN rt1.c2 THEN rt1.c4 WHEN -874146728 THEN t0.c0 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c2 END END FROM vt0;SELECT ALL UNICODE((vt1.c2 IN ())) FROM rt1, vt0, vt1; -- 0ms;
SELECT ALL AVG(((vt0.c0) NOTNULL)) OVER () FROM vt0, rt1 WHERE (((((((((((',X')OR(x'49598438')))AND(NULL)))AND(x'')))OR(x'')))AND(CAST(x'' AS BLOB)))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c2)GLOB(rt1.c1)) AS TEXT) FROM vt0, rt1, t0 WHERE (CAST(CAST('-238143117' AS BLOB) AS BLOB)); -- 0ms;
SELECT ALL 0X256ffc6a FROM vt0; -- 0ms;
SELECT DISTINCT (+ (CAST(vt1.c1 AS NUMERIC))), (((rt1.c3, vt1.c2, rt1.c3)) NOT BETWEEN ((t0.c0, rt1.c3, rt1.c2)) AND ((vt1.c2, rt1.c1, vt1.c1))) COLLATE NOCASE, CAST(CAST(vt1.c1 AS INTEGER) AS INTEGER) FROM t0, vt1, vt0, rt1 WHERE ((NOT (((x'')*('-1446720531'))))); -- 0ms;
SELECT (vt1.c1 IN ()), (- (AVG(vt1.c1))), LEAD(((rt1.c1 IN ()) IN ()), (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 END IN ()), (((- (rt1.c4)))<=(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4))))) OVER (), (NOT ((+ (rt1.c1)))), ((json_quote(rt1.c2)) ISNULL) FROM rt1 WHERE (CAST(((((0.7837276892111322)AND(NULL)))OR(x'')) AS TEXT));SELECT DISTINCT GROUP_CONCAT((rt1.c4 IN ())) OVER () FROM rt1 WHERE ((((NULL IN ()))==((0xffffffffc52696dd IN (NULL, 0.4582914170924489))))); -- 0ms;
SELECT COUNT(((vt1.c2)IS NOT(vt0.c0))) OVER (), ((((((((((((CASE WHEN rt1.c4 THEN vt1.c0 END)AND(MIN(rt1.c4))))OR(ROUND(vt0.c0, rt1.c4))))OR(rt1.c3)))OR(CASE WHEN x'' THEN t0.c0 END)))OR((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))))OR(UPPER(DISTINCT vt1.c1))), rt1.c4 FROM vt1, vt0, t0, rt1; -- 1ms;
SELECT ((CAST(vt1.c2 AS BLOB))/(NULLIF(DISTINCT vt0.c0, vt1.c2))) FROM rt1;SELECT COUNT(vt1.c1), LAG((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, x'')))) AND ((((vt0.c0)<>(vt0.c0))))), ((vt0.c0 COLLATE NOCASE) NOTNULL), CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) WHEN ((-813233509)%(vt0.c0)) THEN (((vt0.c0))>((vt0.c0))) WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) OVER (), (((((rt1.c4)OR(0.8656990388928041)))AND(rt1.c2)) IN ()), TOTAL((rt1.c1 IN ())) FILTER(WHERE UNLIKELY(DISTINCT ((((t0.c0)OR(vt0.c0)))AND(vt1.c1)))) OVER (), NULL FROM vt0;SELECT ALL FIRST_VALUE(CAST(vt1.c1 COLLATE BINARY AS INTEGER)) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (+ ((t0.c0 IN ()))) FROM vt1, rt1 WHERE (((((((1128743969) BETWEEN (NULL) AND (-864916546)))AND(((((((((NULL)AND('p<8I^g')))AND(x'')))AND(x'')))AND('-2108409293')))))OR((((NULL))<>((0.8296367523520033)))))); -- 0ms;
SELECT ALL (((rt1.c3))<>((vt1.c0))) COLLATE NOCASE FROM t0, rt1 WHERE (((((('-2137344314'))>=((0.0895314444174441)))) NOT NULL));SELECT ALL rt1.c3 FROM vt1;SELECT UNLIKELY(CASE t0.c0  WHEN rt1.c1 THEN rt1.c4 WHEN t0.c0 THEN rt1.c3 WHEN vt1.c2 THEN rt1.c1 END) FROM rt1, t0;SELECT ALL COUNT(UNLIKELY(vt0.c0)), (~ (((rt1.c0) BETWEEN (vt0.c0) AND (x'')))), ((((((((((rt1.c4)-(rt1.c1)))OR(CAST(vt0.c0 AS TEXT))))AND(((((rt1.c1)OR(vt0.c0)))OR(0.669477568008937)))))OR(CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(((((rt1.c4)OR(rt1.c1)))OR(rt1.c2)))) FROM t0;SELECT DISTINCT (((vt1.c1, rt1.c0, 0.3207006419460051, rt1.c0, rt1.c0))=((552973921, vt1.c2, '0.8780909969551178', '\h', rt1.c2))) COLLATE BINARY, (((LOWER(DISTINCT vt0.c0)))==((COUNT(*)))), vt1.c2 FROM vt1, t0 WHERE (('th' IN ()));SELECT DISTINCT MIN(t0.c0) FROM t0 GROUP BY UPPER(((rt1.c0) NOT BETWEEN (x'') AND (rt1.c4))) HAVING (+ (t0.c0 COLLATE BINARY));SELECT ALL COUNT(CAST(rt1.c4 AS NUMERIC)) OVER () FROM rt1, vt0, vt1, t0 ORDER BY t0.c0 LIMIT 250852122; -- 0ms;
SELECT (- (vt1.c2)) COLLATE RTRIM, ((rt1.c1)OR(rt1.c4)) COLLATE RTRIM, CAST(((rt1.c1) IS TRUE) AS INTEGER) FROM vt0;SELECT LEAD((('7e)3pc\n૚L') NOT BETWEEN (((rt1.c4) NOTNULL)) AND ((vt1.c2 IN ()))), ((vt1.c2) NOT BETWEEN (rt1.c0) AND (0.5636917369498835)) COLLATE BINARY, (((((((((rt1.c3 IN ()))AND(CAST(vt1.c0 AS BLOB))))OR(((vt1.c1)<(rt1.c1)))))OR((vt1.c1 IN (vt1.c1)))))OR(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 WHEN '.C)p{㹍' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 END))) OVER () FROM vt0, vt1, rt1 WHERE (((((((((((x'')IS NOT('now*|')))OR(CASE WHEN '-777953272' THEN 1585253287 END)))OR((('-1424899768')IS NOT(x'')))))AND(CASE WHEN 'Z齫>d' THEN '' END)))OR(((0.4728753508815927) BETWEEN (0X3e1135d3) AND ('-787188195'))))); -- 0ms;
SELECT CAST(x'' AS REAL) FROM rt1, vt1, vt0; -- 0ms;
SELECT DISTINCT HEX(((0Xffffffff8cc82ae7)AND(rt1.c4))) FROM vt0;SELECT DISTINCT ((((0.44506526842730354) NOTNULL)) BETWEEN (((rt1.c3)==(vt0.c0))) AND ('-345908527')) FROM vt0, rt1, vt1 WHERE ((x'' IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((rt1.c4)OR(rt1.c4)) IN ()) FROM vt0, t0, rt1 WHERE ((((x'' COLLATE RTRIM))<=(('')))); -- 0ms;
SELECT rt1.c1 COLLATE NOCASE FROM rt1, vt0, t0 WHERE (((((0.8946595854804464) BETWEEN (9223372036854775807) AND ('1440217936'))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((rt1.c4)IS NOT((((rt1.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c1))))) FROM vt1, vt0, t0 LIMIT 1980011276 OFFSET 1227194598 EXCEPT SELECT DISTINCT FIRST_VALUE(LIKELY(((((t0.c0)AND(vt0.c0)))OR('?\r')))) OVER () FROM vt0, t0;SELECT (((((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c4))))>=((((vt1.c1)LIKE(rt1.c3))))) FROM vt1, rt1 WHERE (((((0.8296367523520033)GLOB(-3.98804942E8))) IS TRUE)); -- 0ms;
SELECT ALL ((UNLIKELY(rt1.c1)) BETWEEN (rt1.c0 COLLATE BINARY) AND (((vt1.c2) IS TRUE))) FROM t0, rt1, vt1, vt0; -- 0ms;
SELECT (TOTAL(t0.c0) IN (((rt1.c3)>(rt1.c0)))) FROM t0 GROUP BY ((((json_extract(vt1.c1, rt1.c0))AND(((vt1.c2)>>(vt0.c0)))))AND(((rt1.c3) IS TRUE))), (~ (((vt0.c0) IS FALSE))), CAST(x'' AS NUMERIC), ((vt1.c0 COLLATE RTRIM)+(((((vt1.c1)OR(vt0.c0)))AND(rt1.c2)))), (((((rt1.c3)IS(vt0.c0))))>=((((rt1.c3) NOTNULL)))) HAVING CAST(vt1.c0 AS INTEGER) LIMIT -988801765 OFFSET -2094040614;SELECT COUNT(CAST(rt1.c0 AS REAL)) OVER ( PARTITION BY ((x'') ISNULL), ((((((((CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN t0.c0 THEN rt1.c4 END)OR(((((t0.c0)OR(rt1.c4)))OR(vt1.c2)))))AND(((((rt1.c4)AND(t0.c0)))OR(vt1.c2)))))AND(rt1.c0)))OR(((vt1.c2) NOT NULL))), (((vt1.c2)OR(rt1.c1)) IN ((((vt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c4, vt1.c2)) AND ((rt1.c2, vt1.c2, vt1.c0))), (- (rt1.c1)), ((rt1.c0)>=(vt1.c2)))), (vt1.c2 COLLATE NOCASE IN ())) FROM vt1, rt1 WHERE (TRIM(DISTINCT (('1937873832') IS FALSE), (('?*') BETWEEN (x'') AND (x'b0b3'))));SELECT DISTINCT COUNT(((vt1.c2) IS FALSE)) FROM vt0, rt1, vt1; -- 0ms;
SELECT (- ((vt1.c1 IN ()))), (+ ((~ (rt1.c0)))), ((((rt1.c3)*(vt0.c0))) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt1.c1 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN 'rq' END) AND (((vt1.c0)+(vt1.c1)))) FROM vt1, t0, rt1, vt0 WHERE (((LIKELY(x'')) BETWEEN ((((0Xffffffff9a716b68))<(('<Be')))) AND (((NULL) BETWEEN (NULL) AND (x''))))) GROUP BY (- (CAST(rt1.c1 AS NUMERIC))); -- 0ms;
SELECT x'45dd', ((((((t0.c0)-(rt1.c1)))AND(vt1.c2)))OR(CASE vt1.c1  WHEN rt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN 0.9149312915907569 WHEN vt1.c2 THEN vt0.c0 ELSE vt1.c0 END)), (((rt1.c3)) BETWEEN ((rt1.c0 COLLATE RTRIM)) AND ((((rt1.c4)GLOB(rt1.c1))))) FROM t0 NOT INDEXED, rt1;SELECT DISTINCT ((((rt1.c3)||(vt1.c0)))!=(x'')) FROM rt1, vt1 GROUP BY NULL HAVING COUNT(*); -- 0ms;
SELECT ALL (((rt1.c2)) BETWEEN (((- (vt0.c0)))) AND (((vt1.c1 IN (vt1.c1))))) FROM t0, vt1, rt1, vt0 WHERE (CASE NULL  WHEN x'' THEN 0x46d46a8b END COLLATE RTRIM); -- 1ms;
SELECT ALL ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1))) NOT BETWEEN (AVG(0.8656990388928041)) AND (vt1.c1)) FROM rt1;SELECT ALL (NOT (rt1.c2)) FROM vt1, vt0;SELECT DISTINCT ((((rt1.c3) NOT BETWEEN (vt1.c2) AND (vt1.c1))) NOT BETWEEN (((vt0.c0)>>(rt1.c1))) AND (((rt1.c4)LIKE(vt1.c2)))), (- (x'')), (+ (rt1.c1)) FROM vt0 WHERE (CASE json_valid('274458160')  WHEN CASE WHEN 0.3887275577692699 THEN '!2' ELSE x'' END THEN ((NULL) NOTNULL) END) ORDER BY ((0.4444167014695415) NOTNULL) ASC;SELECT DISTINCT COUNT(CASE WHEN rt1.c3 THEN rt1.c3 END) OVER (), CAST(((((vt0.c0)AND(vt1.c2)))AND(rt1.c3)) AS INTEGER), GROUP_CONCAT((((539556762))<((vt0.c0)))) FROM vt1 WHERE ((((- ('')))|(((0.3200900544890932) IS FALSE))));SELECT (((rt1.c2)) NOT BETWEEN (('-2137344314')) AND ((SUM(rt1.c2)))) FROM vt0, t0, vt1 WHERE ((((((((('')AND(x'9d2459198cbd')))AND(x'')))OR(((x'') ISNULL))))AND(((0.9615725262947552) NOT BETWEEN ('-485791160') AND (x'd9af'))))) LIMIT 856956809 OFFSET 1958380322;SELECT DISTINCT (+ ('^ODUED!')) FROM rt1, t0, vt1 WHERE ((((CAST('\negG' AS NUMERIC), ((x'')&('minutesr')), ((x'') NOT BETWEEN (0.0824348088981891) AND (0.01520284214374934)), CAST(NULL AS REAL), CASE WHEN NULL THEN '-707157926' END))>=(((((0xffffffffd027bafb)) NOT BETWEEN ((0.5741992311334919)) AND (('1230832282'))), ((x'4aea') NOT BETWEEN (NULL) AND ('')), ((((9.15339071E8)OR(x'2ab19403')))AND(NULL)), CASE WHEN x'e18e63b6' THEN NULL END, CASE ''  WHEN 0.4286660419295065 THEN x'' WHEN 'K,' THEN 0Xffffffffbc445f0c WHEN 0.5113610766505455 THEN 1.125163856E9 END)))); -- 0ms;
SELECT ALL NULL, ((((DATE(rt1.c0, vt0.c0, rt1.c3))AND(vt0.c0 COLLATE BINARY)))OR(vt1.c2 COLLATE NOCASE)), (- (CAST(rt1.c2 AS INTEGER))) FROM vt1, rt1;SELECT GROUP_CONCAT(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) OVER () FROM vt1, rt1; -- 0ms;
SELECT DISTINCT AVG((rt1.c4 IN ())) OVER () FROM t0, rt1 WHERE ((((('')OR(((-1589304210) BETWEEN (0.4753330845692266) AND (0.1434767659388737)))))OR((1.620674454E9 IN (x'd79f'))))) LIMIT -414862213 OFFSET -204606158; -- 0ms;
SELECT ALL ((((vt1.c0)AND(rt1.c0)))OR(rt1.c2)) COLLATE NOCASE, COUNT(CASE WHEN vt1.c1 THEN t0.c0 END) OVER (), vt1.c2, (((vt0.c0, vt1.c1, rt1.c2)) NOT BETWEEN (('돴', rt1.c1, rt1.c0)) AND ((vt1.c2, vt1.c2, vt1.c2))) COLLATE RTRIM COLLATE NOCASE, ((((vt0.c0)&(rt1.c4)))%((((vt1.c1, vt1.c1, vt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c4, vt1.c1)) AND ((rt1.c3, vt1.c0, rt1.c3))))) FROM vt1, vt0, t0 WHERE (CAST((((('-726891344')OR(0.5391787714277636)))OR(NULL)) AS BLOB)) GROUP BY ((((vt0.c0)<=(rt1.c0))) NOT BETWEEN (NULLIF(DISTINCT t0.c0, t0.c0)) AND (CASE WHEN vt0.c0 THEN rt1.c2 WHEN vt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN vt0.c0 END)) HAVING CAST(((vt1.c2)IS(vt1.c1)) AS REAL);SELECT DISTINCT json((NOT (rt1.c1))) FROM t0, rt1, vt0, vt1; -- 0ms;
SELECT ALL (+ (CAST(vt0.c0 AS REAL))), NULL, CAST(((vt1.c0)&(x'')) AS TEXT), '', SUM(2.53600736E8 COLLATE RTRIM) OVER () FROM t0;SELECT '' FROM t0 NOT INDEXED, rt1, vt1, vt0 GROUP BY (((rt1.c1 IN ()))+(CASE WHEN vt1.c2 THEN rt1.c1 END)); -- 0ms;
SELECT DISTINCT CASE ((vt1.c1) IS TRUE)  WHEN ((rt1.c3) BETWEEN (vt1.c0) AND ('0.9729996003200514')) THEN CASE WHEN rt1.c0 THEN rt1.c0 ELSE '잉' END END FROM t0;SELECT DISTINCT ((TOTAL(rt1.c1))OR(MAX('og'))) FROM rt1 WHERE ((((((('#')>(NULL)))OR(CAST('-834808446' AS BLOB))))AND(CAST(NULL AS INTEGER)))); -- 1ms;
SELECT (((((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0)))) IS FALSE) FROM vt0, vt1;SELECT ALL ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 WHEN vt1.c2 THEN vt1.c2 WHEN '!Z,wLaX' THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN vt1.c1 THEN vt1.c2 END) NOT BETWEEN (t0.c0) AND (vt1.c2)), (+ (LIKELY(DISTINCT 'f'))), LTRIM(0x121ebaca) FROM t0, rt1, vt0;SELECT ALL CAST((((('-1137088668')OR(rt1.c3)))OR(rt1.c4)) AS NUMERIC) FROM t0, vt1 WHERE (((NULL) NOT BETWEEN (0.735401941057278) AND ('1932954200')) COLLATE BINARY);SELECT ALL CAST(CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c3 END AS REAL) FROM vt0 INNER JOIN rt1 ON (((~ (vt0.c0)))%(((vt1.c1)GLOB(vt1.c2)))) INNER JOIN t0 ON (((vt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE RTRIM)) AND ((vt0.c0 COLLATE RTRIM))) FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN ('') AND (t0.c0))) NOT BETWEEN (((-1.327322331E9)/(vt1.c1))) AND (((vt0.c0) IS FALSE))) GROUP BY vt1.c2, ((CAST(vt1.c0 AS INTEGER))<=(((rt1.c4)LIKE(vt1.c0)))), (((rt1.c3)) NOT BETWEEN ((COALESCE(rt1.c4, vt1.c2))) AND ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt1.c2))))), (((((t0.c0) NOTNULL)))<>((((vt0.c0) IS TRUE)))), CASE ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2))  WHEN (vt1.c2 IN ()) THEN LIKELY(NULL) END LIMIT 1939475940 OFFSET 1838648041;SELECT DISTINCT ((((TOTAL(vt0.c0))AND(((((rt1.c1)OR(rt1.c3)))OR(rt1.c1)))))AND(((rt1.c0)/(x'')))) FROM rt1, t0;SELECT DISTINCT (((170020896) NOT NULL) IN (GROUP_CONCAT(rt1.c2))), NULLIF((((rt1.c2))<>((t0.c0))), ((((vt1.c0)AND(vt1.c1)))OR(rt1.c0))), ((0.04391525630792503) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((NULL)AND(t0.c0)))) FROM vt1, t0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY (((((rt1.c0 IN ()))AND(rt1.c0)))AND(rt1.c0));SELECT DISTINCT (((((((((rt1.c0 IN ()))AND(vt1.c2 COLLATE NOCASE)))OR((~ (vt1.c0)))))AND(CAST(rt1.c2 AS BLOB))))AND(UNICODE(vt1.c2))) FROM t0, vt1, rt1, vt0 WHERE (((('N Q./ⰾj1', 'g㭈*,lm', NULL)) BETWEEN ((((-1688106437)%('h')), NULL COLLATE BINARY, ((199611766) BETWEEN (0.5117799385034841) AND (x'')))) AND ((TRIM(DISTINCT '0.04809988674147947'), (0.973352264393826 IN ()), (NOT (x'')))))) ORDER BY ((((vt1.c0, rt1.c4, rt1.c1)) NOT BETWEEN ((vt1.c2, t0.c0, 0.4672278497262551)) AND ((rt1.c0, t0.c0, ''))) IN ()) ASC  NULLS LAST, ((vt1.c2)<<(rt1.c1)) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE rt1.c1) OVER () FROM rt1, t0; -- 0ms;
SELECT CAST(CAST('-1093803594' AS REAL) AS INTEGER) FROM vt0, rt1, t0, vt1 WHERE ((((('0.7837276892111322')AND(0.1434767659388737)))OR(x'bc4d')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(((rt1.c4)==(vt1.c2)) AS TEXT) FROM t0;SELECT ((((GROUP_CONCAT(NULL))AND(NULL)))AND(COUNT(vt1.c2))), ((((CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)AND((- (rt1.c1)))))AND(rt1.c1)), SUM(CASE WHEN rt1.c1 THEN rt1.c3 WHEN vt0.c0 THEN vt1.c2 WHEN vt1.c0 THEN rt1.c4 ELSE vt1.c0 END) OVER ( ORDER BY CAST(CAST(rt1.c0 AS INTEGER) AS BLOB) ASC  NULLS LAST) FROM vt1 WHERE ((((((('ꝴL\o')<>(x'')))AND(x'')))AND((((((((('1125163856')OR(0x7e511259)))OR('Wc')))OR(NULL)))OR(0.6930607504614579)))));SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)+((vt1.c0 IN (vt1.c1)))), ((((rt1.c0) NOTNULL))*(vt1.c1)), COUNT(*) FROM vt0, t0;SELECT CAST(CASE rt1.c4  WHEN rt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 ELSE vt1.c0 END AS NUMERIC) FROM t0, vt1, rt1 FULL OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt1.c2 THEN rt1.c4 ELSE vt0.c0 END) NOT BETWEEN (((rt1.c0)+(rt1.c4))) AND (((((vt1.c0)AND(rt1.c0)))OR(rt1.c0)))) WHERE (((((0xffffffffaa580b35)IS NOT(x'b6ce')))||(((((x'c3b2')OR(x'')))AND(''))))); -- 0ms;
SELECT CASE WHEN LAST_INSERT_ROWID() THEN CASE rt1.c3  WHEN vt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN t0.c0 WHEN vt1.c2 THEN rt1.c4 ELSE t0.c0 END ELSE ((vt1.c1)*(rt1.c4)) END FROM rt1, vt0, vt1 WHERE (CAST((~ ('xC')) AS BLOB));SELECT ALL ((CASE WHEN vt1.c1 THEN rt1.c4 ELSE NULL END) NOT NULL) FROM vt1 WHERE (x'2187') GROUP BY (((json_remove(vt0.c0, rt1.c4, rt1.c0, rt1.c2)))>=((((((((((rt1.c3)OR(x'fc03')))OR(vt1.c0)))OR(rt1.c3)))AND(rt1.c1))))) HAVING (+ (vt1.c0));SELECT ALL COUNT(((((rt1.c4)AND(rt1.c1)))OR('-1630417444'))) OVER ( ORDER BY ((((rt1.c0)OR(rt1.c4)))OR(vt1.c0)) COLLATE RTRIM  NULLS LAST) FROM vt1 WHERE (((-1.672736764E9)OR(0.735834472903496)) COLLATE BINARY);SELECT DISTINCT ((CASE vt1.c2  WHEN 0.43373338009901796 THEN vt1.c2 ELSE rt1.c0 END)<(vt0.c0 COLLATE RTRIM)), '-1327322331', ((((0.10618524259505824)<(vt1.c0)))IS NOT(((rt1.c1) ISNULL))) FROM rt1, vt0 LIMIT 877100482;SELECT (((rt1.c2)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((CASE x''  WHEN 0.9897041660452842 THEN vt1.c2 WHEN rt1.c3 THEN vt1.c1 WHEN rt1.c4 THEN rt1.c4 END))), vt1.c1, (+ (rt1.c0)) COLLATE NOCASE, ((0.5819227082685886)*('')) COLLATE BINARY, CAST((((vt1.c0))<((rt1.c3))) AS REAL) FROM rt1, t0, vt1, vt0 WHERE (0.8656990388928041); -- 0ms;
SELECT ALL ((CAST(rt1.c0 AS INTEGER)) ISNULL), ((NULL)<(((rt1.c3) BETWEEN (rt1.c2) AND (NULL)))), (((vt0.c0 IN ()))|(json_array(t0.c0, vt1.c2))) FROM rt1, vt0, vt1 WHERE (CASE WHEN CASE WHEN NULL THEN x'e294' WHEN NULL THEN 0x6424292f WHEN 0.44506526842730354 THEN NULL WHEN '1281267139' THEN 'ꏠs[]kn~z][h' WHEN NULL THEN 0Xffffffffbc7d7452 ELSE 0.8319243193158267 END THEN CASE WHEN NULL THEN x'0ae2' ELSE NULL END WHEN ((NULL)>('1571009955')) THEN ((0.8691380042671755) IS FALSE) WHEN SQLITE_SOURCE_ID() THEN TRIM(DISTINCT -649839640, '1e500') WHEN ((x'')IS NOT('()')) THEN LOWER(1598356701) WHEN (NOT (0.7712449508347325)) THEN CAST(-1814281984 AS BLOB) END);SELECT vt1.c2 FROM vt0, t0, vt1; -- 0ms;
SELECT ALL ((((((vt1.c0)<<(x'a141')))OR(((x'') BETWEEN (vt1.c2) AND (rt1.c4)))))AND(UPPER(vt0.c0))), CAST(MIN('dA') AS NUMERIC), (((vt0.c0))>((rt1.c4 COLLATE BINARY))) FROM rt1, t0, vt0;SELECT DISTINCT TOTAL(((((rt1.c0)AND(rt1.c2)))AND(rt1.c4))), CASE ((vt0.c0) BETWEEN (0xffffffffe83ab832) AND (vt0.c0))  WHEN vt1.c0 THEN ((rt1.c4)<=(1.044170633E9)) ELSE (t0.c0 IN ()) END, (((((vt1.c0)OR(rt1.c2)), LIKELY(vt1.c1), (NOT (vt1.c0)), CASE WHEN vt1.c2 THEN t0.c0 ELSE 'cDK2#Ha' END, (((t0.c0)) BETWEEN ((rt1.c2)) AND ((vt1.c0)))))<=((rt1.c4 COLLATE RTRIM, (vt1.c1 IN (vt1.c1, vt1.c2)), (((rt1.c0)) NOT BETWEEN (('1367466395')) AND (('-2094040614'))), ((rt1.c4)<(vt1.c1)), TOTAL(vt1.c1)))) FROM vt1, rt1, vt0;SELECT ALL (((t0.c0)<(rt1.c1)) IN ()) FROM rt1, t0, vt0, vt1 WHERE ((((-8.13233509E8)) NOT BETWEEN (((+ (x'c6fc')))) AND ((NULL COLLATE RTRIM)))) LIMIT 1142801676; -- 0ms;
SELECT DISTINCT ((((rt1.c3)!=(vt0.c0)))AND(((rt1.c3) IS FALSE))) FROM vt0, rt1 WHERE (SUBSTR((('1057470083')<(NULL)), (('潜5zClEA')==(x'')))) ORDER BY ((((vt1.c1)LIKE(vt0.c0))) IS TRUE);SELECT DISTINCT LEAD(CAST((- ('')) AS BLOB), NULL, ((((((((UNLIKELY(rt1.c4))AND((((rt1.c2))>=((rt1.c0))))))OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)))OR(0Xffffffff8b1f815b)))AND(((rt1.c2)=(rt1.c1))))) OVER () FROM rt1 WHERE (json_array_length(CAST('1817644508' AS NUMERIC), x''));SELECT ALL AVG(CAST(vt0.c0 AS NUMERIC)) FROM rt1, vt0 ORDER BY (-2.38524364E8 IN (((rt1.c3)AND(rt1.c4)), ((vt1.c2)||(rt1.c1))));SELECT DISTINCT LAG((((vt1.c2)) NOT BETWEEN (((((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c4))))) AND (((((rt1.c3))<>((rt1.c1)))))), t0.c0, ((((((vt1.c0)OR(vt0.c0)))AND(rt1.c0)))LIKE(CAST(rt1.c0 AS BLOB)))) OVER () FROM rt1, vt0, t0, vt1 WHERE (CASE WHEN CAST(0.9772409578122406 AS INTEGER) THEN ((((((((0.25990032751160475)OR('-2049249702')))OR('-787188195')))OR('-1446720531')))OR('')) WHEN ((NULL) ISNULL) THEN ((((NULL)OR(NULL)))AND(-8.74146728E8)) WHEN ('-788571712' IN (0.43774329592832006)) THEN ((((((((711995956)OR(0.15133395230479585)))AND('^!')))AND('')))OR(0.6793819388936527)) END) LIMIT -1511404677; -- 0ms;
SELECT DISTINCT (((((vt1.c2)OR(x'')))AND(rt1.c0)) IN ()) FROM rt1, vt0, vt1, t0 GROUP BY (((((vt0.c0))==((t0.c0)))) BETWEEN (((t0.c0)/(rt1.c4))) AND (((vt1.c2)*(rt1.c2)))) HAVING rt1.c2; -- 0ms;
SELECT DISTINCT AVG(vt1.c1) OVER ( ORDER BY ((((rt1.c3) BETWEEN (vt1.c2) AND (vt1.c1)))GLOB((((rt1.c4, vt1.c2, t0.c0))=((rt1.c1, vt1.c0, vt1.c0))))) DESC  NULLS LAST), COUNT(CASE WHEN vt1.c2 THEN vt0.c0 END) OVER (), '' COLLATE NOCASE FROM rt1;SELECT DISTINCT ((vt0.c0) NOT BETWEEN (((vt0.c0)>(rt1.c4))) AND (vt1.c2)) FROM rt1 FULL OUTER JOIN vt1 ON ((vt1.c1) BETWEEN (LIKELY(DISTINCT t0.c0)) AND ((rt1.c4 IN ()))) FULL OUTER JOIN t0 ON (SQLITE_COMPILEOPTION_USED(vt1.c0) IN ()) CROSS JOIN vt0 ON CASE x'5740'  WHEN (((1.958380322E9, rt1.c4, vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c0, rt1.c4)) AND ((t0.c0, vt1.c2, rt1.c3))) THEN ((vt1.c2) NOT BETWEEN (rt1.c1) AND (vt1.c0)) WHEN 'kUYx\nud' THEN ((rt1.c2) BETWEEN (vt1.c1) AND (rt1.c4)) WHEN (vt1.c1 IN (vt1.c2, rt1.c3)) THEN ((vt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) ELSE (- (rt1.c3)) END GROUP BY (+ (((t0.c0) NOT BETWEEN (vt0.c0) AND (2131516782)))) HAVING ((((rt1.c2)IS NOT(0.15662776853473026))) IS TRUE);SELECT DISTINCT rt1.c1 FROM rt1, vt0 CROSS JOIN vt1 ON (x'' IN ()); -- 0ms;
SELECT DISTINCT x'' FROM vt0; -- 0ms;
SELECT CASE WHEN ((vt1.c1) IS TRUE) THEN CAST(rt1.c0 AS BLOB) WHEN CAST(rt1.c2 AS NUMERIC) THEN (- (rt1.c4)) WHEN CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 ELSE vt0.c0 END THEN ((vt1.c1)<(vt0.c0)) ELSE CASE WHEN vt1.c2 THEN vt0.c0 WHEN '!f' THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 END END FROM rt1, t0 GROUP BY (((NOT (vt0.c0)))OR((+ (NULL)))) HAVING NULLIF(DISTINCT (+ (rt1.c1)), ((((vt1.c1)OR(vt0.c0)))OR(0Xffffffffa73235d1)));SELECT DISTINCT ((((rt1.c2)OR(rt1.c0))) NOT BETWEEN ((rt1.c1 IN ())) AND ((NOT (rt1.c4)))), (((NULL)) NOT BETWEEN ((TYPEOF(DISTINCT rt1.c0))) AND ((vt1.c2))), (CASE t0.c0  WHEN rt1.c2 THEN NULL WHEN t0.c0 THEN x'' WHEN 0.9575444940605731 THEN vt0.c0 ELSE vt1.c2 END IN ((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((t0.c0))))), CASE x'ef1f'  WHEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (vt1.c2)) THEN vt0.c0 COLLATE BINARY END, '1769624213' FROM t0, rt1, vt1, vt0; -- 0ms;
SELECT ALL TOTAL(x'') OVER (), vt1.c2, (~ (rt1.c2)) FROM vt0;SELECT DISTINCT '253600736', rt1.c2, (((x'', rt1.c2, rt1.c2)) NOT BETWEEN (('1598356701', rt1.c2, ((rt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) AND ((((rt1.c4)<<(t0.c0)), ((((rt1.c1)AND(rt1.c3)))OR(rt1.c2)), (vt1.c0 IN ())))) FROM vt0, t0, rt1;SELECT ((TRIM(DISTINCT rt1.c1, rt1.c4))%(((vt1.c2)>>(0.9848884540196351)))) FROM t0, vt0;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (x'')))IS((rt1.c1 IN ()))), ((((rt1.c1 IN ()), ((vt1.c0)=(0.007645214628089092)), rt1.c1))<=((((vt1.c0) ISNULL), (rt1.c0 IN ()), (rt1.c4 IN ())))), '-74171576' FROM vt0 NOT INDEXED WHERE ((('0.5819227082685886') NOT NULL) COLLATE NOCASE);SELECT DISTINCT CAST(rt1.c1 AS REAL), vt0.c0, ((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))) IN ()) FROM vt0, t0, rt1; -- 1ms;
SELECT ALL (NOT (CAST(vt1.c2 AS TEXT))) FROM rt1;SELECT DISTINCT NTILE(rt1.c0) OVER () FROM t0, rt1, vt1, vt0 ORDER BY ((((vt0.c0)<>(x''))) NOTNULL) DESC, (((((rt1.c1)) BETWEEN ((vt1.c1)) AND ((vt0.c0)))) NOT BETWEEN (vt1.c0) AND (CASE rt1.c1  WHEN NULL THEN t0.c0 WHEN x'' THEN rt1.c1 WHEN vt1.c1 THEN vt1.c1 END))  NULLS LAST, ((CASE WHEN '7e)3pc\n૚L' THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c2 THEN vt1.c2 END) NOTNULL) ASC  NULLS LAST; -- 0ms;
SELECT ALL ((((rt1.c0) NOTNULL))IS(SUM(vt1.c0))) FROM rt1;SELECT DISTINCT ((((((((CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 END)AND(CASE WHEN rt1.c1 THEN vt1.c2 END)))AND(COUNT(*))))OR(((((((((rt1.c4)OR(rt1.c1)))OR(vt1.c0)))AND(vt1.c1)))OR(rt1.c3)))))OR(((vt1.c2) IS TRUE))), COUNT(*) OVER (), COUNT(((vt1.c1)|(vt1.c2)) COLLATE RTRIM), (((((rt1.c4, rt1.c0, rt1.c2))<((rt1.c1, vt1.c2, t0.c0)))) BETWEEN (IFNULL(DISTINCT vt0.c0, vt0.c0)) AND (((rt1.c4)|(vt1.c0)))), GROUP_CONCAT(CAST(vt1.c0 AS NUMERIC)) FROM t0, vt1, vt0, rt1 WHERE ((((((1.958380322E9)) BETWEEN ((0.17005222287030564)) AND ((0X4eb9b992)))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c1))))<<(((rt1.c0) ISNULL))) FROM vt0, rt1, vt1 WHERE (((('-952392754', 0.7981714749245526, '?')) BETWEEN ((((('-13022862')) NOT BETWEEN ((NULL)) AND (('-528892231'))), ((0.5818446112213796)>(0.3764106801874624)), CAST(884548759 AS BLOB))) AND ((((NULL) NOTNULL), CASE WHEN x'' THEN x'' WHEN '\rsꁌ㳆' THEN '^k' WHEN x'1ea5' THEN 0Xffffffffd4e3e641 WHEN NULL THEN 0.33068547443019125 WHEN 'Dc+' THEN '290129823' ELSE '1099483633' END, 0.6177086592683495)))); -- 0ms;
SELECT MIN(-598117983) FROM vt1, vt0, t0, rt1 GROUP BY ((((((((((rt1.c1) NOTNULL))AND(((t0.c0) ISNULL))))OR(0.5566630309112359)))OR(vt1.c2 COLLATE BINARY)))OR((((vt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c4)) AND ((x'', rt1.c1, vt1.c2))))) HAVING CASE WHEN ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN NULL WHEN rt1.c2 THEN (('')IS(rt1.c1)) WHEN ((vt0.c0) NOT NULL) THEN CASE WHEN vt1.c1 THEN vt0.c0 WHEN t0.c0 THEN rt1.c0 WHEN rt1.c0 THEN NULL ELSE rt1.c3 END END; -- 0ms;
SELECT (((vt1.c1)) NOT BETWEEN ((((rt1.c0)*(vt1.c0)))) AND (((((vt1.c0))<>((rt1.c4)))))), (- (((vt1.c0) BETWEEN (rt1.c0) AND (vt1.c1)))), (((vt1.c2))<((((vt0.c0) IS TRUE)))) FROM vt0, rt1, t0, vt1; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((((rt1.c1)&(rt1.c0))) BETWEEN (highlight(vt1.c2, vt1.c0, rt1.c0, rt1.c4)) AND (CASE WHEN vt1.c0 THEN t0.c0 WHEN x'' THEN vt1.c2 WHEN vt1.c0 THEN rt1.c2 END))) OVER () FROM vt1 WHERE (CASE WHEN (0.9587728888324653 IN ('505031083')) THEN ((0Xffffffff87dc572f)<(NULL)) END);SELECT ((((((((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))AND(vt1.c2)))OR(rt1.c4)))=(t0.c0 COLLATE RTRIM)), ROW_NUMBER() OVER (), (CASE vt1.c0  WHEN rt1.c4 THEN rt1.c1 END IN ()) FROM vt0, rt1, t0;SELECT DISTINCT LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.7022110885561457) FROM t0, vt1, rt1 GROUP BY HEX(((rt1.c0) NOT BETWEEN (vt1.c1) AND (rt1.c4))), ((((t0.c0)) BETWEEN ((NULL)) AND ((rt1.c4))) IN (((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)))), ((vt1.c1 COLLATE NOCASE)LIKE(x'')), ((((rt1.c4)-(rt1.c0)))>>(((((rt1.c4)OR(rt1.c3)))AND(t0.c0)))), rt1.c0 HAVING CAST((NOT (vt1.c1)) AS TEXT);SELECT ((CAST(0.8014685983835236 AS NUMERIC))LIKE((((vt1.c1))!=((vt1.c1))))), CASE WHEN MAX(vt1.c0) THEN x'' WHEN (NOT (0.5701488781433343)) THEN TOTAL(0.3625109348295772) WHEN ((vt1.c0) ISNULL) THEN x'' ELSE ((rt1.c4) BETWEEN (rt1.c3) AND (vt0.c0)) END, (((rt1.c3)) BETWEEN (((rt1.c1 IN ()))) AND (((rt1.c0 IN ())))), (~ (((rt1.c4) BETWEEN (vt1.c0) AND (vt1.c1)))), (((rt1.c1, vt0.c0, rt1.c3)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((rt1.c1, vt1.c2, rt1.c4))) COLLATE BINARY FROM rt1, vt0 WHERE (((CAST('' AS NUMERIC)) NOT BETWEEN ((NOT (''))) AND (CAST('-8rmE78' AS INTEGER)))) ORDER BY ((load_extension('', vt0.c0)) NOTNULL)  NULLS FIRST;SELECT ((SUM(vt0.c0))+(((rt1.c3)GLOB(vt0.c0)))) FROM t0 WHERE (CAST(((NULL) NOT BETWEEN ('') AND ('')) AS REAL));SELECT ALL CAST(((rt1.c4) BETWEEN (vt1.c1) AND (rt1.c4)) AS REAL) FROM t0, rt1 WHERE (((((0.7580929471484694)|(x'')))>(x'' COLLATE BINARY)));SELECT DISTINCT ((rt1.c1)&(rt1.c0)) COLLATE RTRIM, RANK() OVER (), ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))LIKE(json_patch(rt1.c3, rt1.c1))) FROM rt1, vt1, vt0, t0 WHERE (0.01520284214374934) GROUP BY CASE (((rt1.c3))>=((vt0.c0)))  WHEN vt1.c0 THEN (((rt1.c1))<=((rt1.c4))) ELSE vt0.c0 END, (((CASE NULL  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c2 END))<((vt0.c0))), ((vt1.c2)IS NOT(((((vt1.c1)AND(t0.c0)))AND(rt1.c1)))) HAVING CAST(((rt1.c3)%(rt1.c3)) AS BLOB) ORDER BY ((vt1.c1 IN ()) IN (((vt1.c2) BETWEEN (rt1.c3) AND (vt1.c0)), CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN vt1.c2 END)); -- 0ms;
SELECT LOWER(DISTINCT '0.4560474373066312') FROM vt0, vt1; -- 1ms;
SELECT DISTINCT CASE CASE WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c4 END  WHEN CAST(rt1.c1 AS INTEGER) THEN CASE rt1.c2  WHEN vt0.c0 THEN '' ELSE vt1.c1 END ELSE ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)) END FROM vt0, rt1, vt1, t0 WHERE (((CAST('0.7449353133089679' AS TEXT))OR(HEX('TRUE')))) ORDER BY ((((((vt1.c2)|(rt1.c2)))AND((((t0.c0))<((rt1.c4))))))OR(CASE WHEN rt1.c0 THEN vt1.c2 END)) ASC; -- 0ms;
SELECT ALL vt1.c0 FROM rt1;SELECT DISTINCT rt1.c0 FROM vt1, rt1, t0, vt0 WHERE (((((((NULL)AND(0.3246554798094414)))AND(NULL)))<=(highlight(0.26818458627772934, 0xfffffffffe11b4c4, '-238143117', 130623431))));SELECT LAST_VALUE(((rt1.c0 IN ('552973921')) IN ())) OVER () FROM vt0, rt1 CROSS JOIN t0 ON rt1.c0 WHERE ((+ (0.3506557182315846)) COLLATE BINARY) GROUP BY HEX(((((rt1.c0)OR('68217244')))AND(vt1.c1))), ((((((vt1.c1)&(-1719572862)))AND((((rt1.c3))>=((vt0.c0))))))AND('230872822')), (((vt1.c0 IN (rt1.c4)))|((rt1.c4 IN (rt1.c0))));SELECT DISTINCT CAST(rt1.c0 AS BLOB) FROM vt0, rt1, t0, vt1; -- 0ms;
SELECT (((vt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)) IN ()) FROM vt1, vt0, t0, rt1 WHERE (((((((NULL)>=(NULL)))AND(LTRIM(x''))))OR((0.9456005296957547 IN (-2.108409293E9))))) GROUP BY '289413370' COLLATE NOCASE, ((((vt1.c2)=(NULL))) NOTNULL), (NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))); -- 0ms;
SELECT ALL ((((rt1.c3)<<(t0.c0)))%('')), (((rt1.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((NULL))), COUNT(*) FROM vt0, rt1, t0; -- 1ms;
SELECT ALL (((t0.c0)) BETWEEN ((vt1.c2 COLLATE NOCASE)) AND ((CASE x''  WHEN vt1.c1 THEN vt1.c1 END))) FROM t0, vt1, rt1, vt0 ORDER BY ((((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c3)))OR((~ (rt1.c4)))))AND(CAST(vt1.c2 AS REAL))), CAST(((rt1.c3) NOTNULL) AS REAL) DESC; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (rtreenode(rt1.c0, x'')) AND (((vt0.c0)!=(0.04391525630792503)))) FROM vt1, rt1, t0, vt0; -- 0ms;
SELECT DISTINCT ((((((rt1.c4)AND(vt1.c2)))AND(rt1.c4)))<>(CAST(vt1.c2 AS BLOB))), ((rt1.c2 IN (rt1.c0)) IN (vt0.c0 COLLATE RTRIM, rt1.c0 COLLATE RTRIM)), (((((((((rt1.c4)OR('2078274721')))AND(vt0.c0)))AND(vt1.c0)))AND(t0.c0)) IN ()) FROM vt1;SELECT ((((((t0.c0)LIKE(rt1.c4)))AND(CASE rt1.c3  WHEN vt1.c2 THEN rt1.c2 END)))AND(((rt1.c0) BETWEEN (vt1.c2) AND (vt1.c1)))) FROM vt0, vt1, t0, rt1 WHERE (((((0.33467294379644763)<(x''))) NOT BETWEEN (((((0.9365685201968226)OR('>xsG{s')))AND(0.09327379699898641))) AND (CASE WHEN 0X3e2b9150 THEN x'' END))) GROUP BY ((((vt1.c1))>((rt1.c4))) IN ()) HAVING ((vt1.c1 COLLATE BINARY) NOT BETWEEN (((((rt1.c1)OR(vt0.c0)))AND(vt0.c0))) AND (x'6597')) ORDER BY ABS(rt1.c1); -- 1ms;
SELECT (((((((rt1.c3, rt1.c0, rt1.c4))<=((rt1.c4, vt0.c0, rt1.c3))))OR(CASE WHEN rt1.c3 THEN rt1.c3 END)))OR(MIN(vt0.c0))) FROM t0, vt0, vt1, rt1 WHERE ((x'4abd' IN ())); -- 0ms;
SELECT DISTINCT CAST(TRIM(DISTINCT vt1.c0, rt1.c0) AS BLOB) FROM t0, vt1, vt0, rt1 WHERE ((((0.90234086149485 IN ())) BETWEEN ((((0X37e40ba4, x'fa8d', NULL)) BETWEEN ((NULL, NULL, -2108409293)) AND ((0x2a090310, 'baeCV', ')\ryqqQﱪ')))) AND (((-4.8579116E8) BETWEEN ('1553592248') AND ('-456600613'))))); -- 0ms;
SELECT DISTINCT (('662927659') NOTNULL) COLLATE RTRIM FROM vt0, t0, vt1 WHERE ((~ (((((x'd1e2')AND(NULL)))OR(0Xffffffffb28a3c92))))) UNION ALL SELECT DISTINCT rt1.c4 FROM t0 WHERE ((LTRIM(NULL, 0.7580929471484694) IN (((NULL) BETWEEN (-2.59240968E8) AND (NULL)))));SELECT ALL CAST(LIKELIHOOD(DISTINCT rt1.c3, 0.5671240881269555) AS TEXT) FROM t0;SELECT CAST(CASE t0.c0  WHEN vt1.c1 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC) FROM rt1, vt1, vt0 WHERE ((((x'' IN ('')))+((((NULL)) BETWEEN ((0.03565309530180816)) AND ((NULL)))))) ORDER BY ((rt1.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM DESC LIMIT 188618232 OFFSET -238143117;SELECT ALL CASE WHEN ((0X631ad460)-(x'')) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND ('FP7|kT')) WHEN LIKELIHOOD(DISTINCT vt0.c0, 0.3160259486319169) THEN vt1.c0 COLLATE BINARY WHEN rt1.c2 THEN NULL ELSE ((vt1.c2)LIKE(vt1.c0)) END FROM vt0, vt1, rt1, t0 ORDER BY (rt1.c1 IN (((rt1.c4) NOT BETWEEN (t0.c0) AND (rt1.c1)), rt1.c4)) DESC; -- 0ms;
SELECT ALL COALESCE(((t0.c0)&(vt1.c1)), CASE vt1.c2  WHEN rt1.c4 THEN rt1.c1 ELSE vt0.c0 END) FROM rt1, vt0, t0, vt1 WHERE (CAST((('885092238') NOT BETWEEN (2.53600736E8) AND ('')) AS TEXT)); -- 0ms;
SELECT x'' FROM vt1 WHERE ((('2078970095') BETWEEN (((NULL)GLOB(0.4204517523339746))) AND ((- (NULL))))); -- 0ms;
SELECT DISTINCT (CASE WHEN vt1.c0 THEN vt1.c2 END IN ()) FROM vt0, t0 NOT INDEXED WHERE (CASE WHEN 0.21694974315739857 COLLATE NOCASE THEN (((-6.90169436E8)) NOT BETWEEN ((NULL)) AND ((x''))) WHEN -485791160 COLLATE NOCASE THEN ((0.4672278497262551)<=(NULL)) WHEN CAST(0.5366262419808736 AS REAL) THEN ((x'db7c')LIKE(NULL)) WHEN NULL COLLATE RTRIM THEN CAST(0.05486552554110846 AS BLOB) WHEN NULL COLLATE BINARY THEN ((NULL) NOT BETWEEN (x'589c') AND (NULL)) ELSE ((0xffffffffac939347) IS FALSE) END); -- 1ms;
SELECT COUNT((- (t0.c0))) FROM vt0, t0, vt1; -- 0ms;
SELECT DISTINCT (((((vt0.c0 IN ()))AND(CAST(vt1.c0 AS REAL))))OR('587366149')) FROM vt0, rt1, t0 GROUP BY (((rt1.c4 COLLATE BINARY))>(((rt1.c2 IN ())))), ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (CAST(9.03061941E8 AS TEXT)) AND (((rt1.c2)+(vt1.c2)))), ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))GLOB((('') NOT NULL))) HAVING '468313483';SELECT DISTINCT (((vt1.c0)AND(rt1.c0)) IN ()), (- (0.2847333555221876)), '!&s]f蒰p?%' FROM vt0, rt1; -- 0ms;
SELECT (('l\r')LIKE(CASE WHEN rt1.c4 THEN vt1.c0 END)), ((((CAST(rt1.c3 AS NUMERIC))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(rt1.c2 AS NUMERIC))), DENSE_RANK() OVER () FROM t0, rt1 WHERE (((((('', NULL, -1504807716)) BETWEEN ((NULL, NULL, '-1964654646')) AND ((0.278586440368502, x'', 'cTz]')))) IS FALSE));SELECT ((TOTAL(vt0.c0))==(((((((((vt1.c2)OR(rt1.c4)))AND(vt1.c1)))AND(rt1.c0)))AND(rt1.c0)))) FROM rt1, vt0, vt1, t0; -- 0ms;
SELECT 0.35923002888993183 FROM vt1, t0, rt1, vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ORDER BY TOTAL_CHANGES(), 1230832282), ((((vt0.c0) IS FALSE)) NOTNULL), '628096106' FROM t0, vt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c3)OR(rt1.c0)) THEN CAST(rt1.c1 AS TEXT) END FROM vt0, rt1, t0; -- 0ms;
SELECT DISTINCT CAST(((((((((rt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(rt1.c1)))AND(rt1.c3)) AS BLOB), ((- (vt1.c1)) IN (AVG(vt0.c0))), ((((rt1.c3)>(vt0.c0))) NOT NULL) FROM vt1, vt0, rt1 WHERE ((((((((((NULL IN (0Xffffffff87ec8e60)))OR(SQLITE_COMPILEOPTION_USED(NULL))))AND(('\rhwy' IN ()))))AND(x'')))OR(((NULL) NOT BETWEEN (0.13409310509974504) AND (0.4681430543221814))))); -- 0ms;
SELECT DISTINCT ((1.512713744E9)>(((((t0.c0)AND(NULL)))AND(vt1.c1)))) FROM rt1, t0, vt0;SELECT DISTINCT vt1.c0 FROM vt0;SELECT (((((vt0.c0))==((rt1.c0)))) IS FALSE) FROM t0, vt0, vt1;SELECT ((t0.c0 COLLATE RTRIM) ISNULL), (((t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((LIKELIHOOD(rt1.c1, 0.1138538100893769)))), CAST(((rt1.c3)!=(vt0.c0)) AS TEXT) FROM vt1, vt0, rt1 WHERE (((TRIM(DISTINCT 0x9d24784)) NOT BETWEEN ((('#') NOTNULL)) AND (0.13520176967506226)));SELECT DISTINCT (~ (vt1.c2)) FROM vt1; -- 0ms;
SELECT (((((((((((NULL, t0.c0, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c2, vt1.c2)) AND ((vt0.c0, vt0.c0, rt1.c0))))OR(((rt1.c0)>('2078274721')))))AND(((rt1.c0)GLOB(x'')))))AND(((((((((t0.c0)OR(rt1.c4)))OR(t0.c0)))OR(rt1.c2)))AND(vt1.c1)))))OR(vt1.c1 COLLATE RTRIM)), (((((((((rt1.c4 IN ()))OR(CASE rt1.c2  WHEN vt1.c0 THEN 2142617307 WHEN t0.c0 THEN rt1.c2 WHEN 0.7244449135091463 THEN rt1.c2 ELSE x'' END)))OR(((rt1.c0) NOTNULL))))AND(rt1.c2 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)), ((t0.c0 IN ()) IN ()), TOTAL(((vt1.c2)-(t0.c0))), (- (vt1.c2)) COLLATE NOCASE COLLATE NOCASE, SUM(CASE vt0.c0  WHEN rt1.c4 THEN rt1.c1 WHEN t0.c0 THEN '979292421' WHEN 1454765235 THEN vt1.c1 END), ((vt1.c2 COLLATE BINARY) NOTNULL) FROM vt0;SELECT ALL ((ABS(vt1.c0))!=(CASE rt1.c3  WHEN vt1.c2 THEN vt0.c0 END)) FROM t0, vt1, rt1 WHERE (SQLITE_COMPILEOPTION_GET(((x'97ba')==(-1637956517))));SELECT (((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((vt1.c1))))AND((((('1142801676')OR(vt1.c0)))AND(rt1.c1)))), ((0X6a3e5e8b) IS FALSE), (SUM(vt0.c0) IN ((('') IS FALSE), IFNULL(DISTINCT rt1.c4, rt1.c2))), COUNT(*) OVER (), rt1.c2 FROM vt0, t0, rt1, vt1 LIMIT 588782026 OFFSET 1838648041; -- 0ms;
SELECT ALL ((CAST(NULL AS BLOB))>(vt1.c2)), MIN(LIKE(vt1.c0, rt1.c2)), ((((vt1.c0 IN (vt1.c2, rt1.c0))))<((vt1.c0 COLLATE BINARY))) FROM vt0, vt1 LIMIT -777408021;SELECT DISTINCT MAX(((rt1.c1) NOT BETWEEN ('') AND (vt1.c1)), ((NULL) NOT BETWEEN (t0.c0) AND (rt1.c0)), ((vt1.c0) ISNULL), load_extension(vt1.c1)), ((((rt1.c2)OR(((((((((vt0.c0)OR(rt1.c2)))OR(rt1.c0)))OR(vt0.c0)))OR(rt1.c0)))))AND(CASE vt1.c0  WHEN rt1.c4 THEN vt1.c2 ELSE rt1.c1 END)), ((((vt1.c2 COLLATE NOCASE)OR(((rt1.c4)|(rt1.c4)))))OR('182535478')) FROM vt1 WHERE (((((((((((NULL)AND('-2094040614')))AND(x'7b17')))AND('326947876')))AND(0.07395400100141791))) NOT NULL));SELECT ALL (((t0.c0 COLLATE NOCASE))<=((vt1.c1))) FROM t0, vt0, rt1;SELECT DISTINCT '-1425426140' FROM t0, vt1, vt0 WHERE ((((((NULL)%('1129441230'))))>=(((- (NULL)))))) ORDER BY 0Xffffffffd3d3492e DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (- (rt1.c0 COLLATE RTRIM)) FROM vt1, vt0;SELECT DISTINCT rt1.c3, ((CAST(rt1.c4 AS BLOB)) NOTNULL), ((((t0.c0)<=(vt1.c0)))==((((x'1080', '碱!NqU,?n', vt1.c1)) BETWEEN ((rt1.c1, x'0247efd6', vt1.c1)) AND ((t0.c0, vt0.c0, rt1.c4))))) FROM vt0, vt1;SELECT DISTINCT (((rt1.c2, vt1.c2, rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((CASE x''  WHEN rt1.c3 THEN vt1.c0 END, CASE rt1.c2  WHEN t0.c0 THEN rt1.c4 WHEN x'46e3' THEN '\rP' WHEN t0.c0 THEN rt1.c1 ELSE vt1.c0 END, ((NULL)>>(vt1.c2)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c4 END, ((((vt1.c0)AND(vt1.c0)))OR(rt1.c0)))) AND ((((rt1.c2) BETWEEN (rt1.c3) AND (t0.c0)), ((rt1.c3) NOT NULL), (+ (vt0.c0)), (vt1.c2 IN (vt1.c0)), TRIM(t0.c0)))) FROM t0;SELECT ALL RANK() OVER (), ((rt1.c0 COLLATE NOCASE) IS FALSE), (((vt1.c0))<((CASE rt1.c4  WHEN vt1.c1 THEN rt1.c4 ELSE rt1.c3 END))) FROM vt0, t0, rt1, vt1 WHERE ((((((0.5421122013374868))<((0.3006748726978996))))%(CASE -1170607311  WHEN '903061941' THEN x'903d' END))); -- 0ms;
SELECT DISTINCT NTH_VALUE(HEX((~ (rt1.c3))), (((~ (rt1.c3)))-(((rt1.c4)<(rt1.c2))))) OVER (), SQLITE_COMPILEOPTION_USED(CAST(rt1.c3 AS TEXT)), t0.c0 FROM vt0, rt1 WHERE (((((0.5120389821965666)<('X')))>(CASE NULL  WHEN 1441148353 THEN NULL END)));SELECT (((0xfffffffff4958594))!=((rt1.c2))) FROM t0, vt0 NATURAL JOIN rt1; -- 0ms;
SELECT ((((NULL)>>(rt1.c1))) BETWEEN (((rt1.c1)&(vt1.c0))) AND (((vt1.c2)/(rt1.c1)))) FROM vt0 WHERE (((('E*''깺.%')) NOT BETWEEN (('-1559125416')) AND ((NULL))) COLLATE RTRIM);SELECT ((rt1.c0) BETWEEN ((rt1.c4 IN (vt0.c0))) AND (MIN(rt1.c1))) FROM vt0, rt1, t0; -- 0ms;
SELECT DISTINCT CAST(CAST(rt1.c2 AS NUMERIC) AS REAL), ((x'')&(NULL)) COLLATE NOCASE, ((((LIKELY(rt1.c0))OR(rt1.c0 COLLATE NOCASE)))AND(rt1.c3 COLLATE RTRIM)) FROM vt0 WHERE (TYPEOF(DISTINCT '#') COLLATE NOCASE);SELECT DISTINCT '1378618238' FROM t0; -- 0ms;
SELECT (- ((~ (t0.c0)))) FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN (((rt1.c4))!=((rt1.c4))) END  NULLS FIRST;SELECT DISTINCT ((((rt1.c4)AND(vt1.c2 COLLATE BINARY)))AND(((rt1.c2)*(vt1.c0)))), ((vt0.c0) BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (((((((((rt1.c2)AND(rt1.c3)))AND(rt1.c3)))OR(rt1.c3)))AND(vt1.c0)))), rt1.c1 FROM rt1, t0 WHERE (((((((((('*)' IN ()))OR(CAST('-1392169272' AS NUMERIC))))OR(((NULL)||(0.6582428360178268)))))AND((NULL IN ()))))AND((('836833687') NOT BETWEEN ('9N/>a\rd{%') AND ('-1333280816')))));SELECT (+ (((vt1.c1) ISNULL))), (NOT ((rt1.c2 IN ()))), ((CASE 0.10158529587593557  WHEN vt0.c0 THEN NULL ELSE rt1.c3 END)/(((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(t0.c0)))) FROM vt1, t0, vt0 WHERE ('') GROUP BY CAST(vt1.c2 AS TEXT), GLOB(UNLIKELY(t0.c0), (((vt1.c1))>((rt1.c0)))), (0.7148931691864794 COLLATE BINARY IN ());SELECT (((rt1.c3)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt1.c2)<<(rt1.c0))))) FROM rt1 ORDER BY (((rt1.c3)) NOT BETWEEN (('sd')) AND (((~ (0.8207853224068508)))))  NULLS LAST;SELECT ALL CAST(((rt1.c3)<=(rt1.c0)) AS REAL) FROM vt0;SELECT ALL IFNULL(DISTINCT TYPEOF(DISTINCT vt0.c0), ((rt1.c3) NOT NULL)) FROM vt1, vt0 WHERE (((CAST(NULL AS BLOB))GLOB(((x'')%(0Xffffffffff394972)))));SELECT (~ ((0Xffffffff82543a33 IN ()))) FROM t0, vt1, rt1, vt0 WHERE (STRFTIME(((0.6193920390733674) NOT BETWEEN (0.36460314694161233) AND (0X6e8d5f)), ((0.002301314778490382) NOT BETWEEN (NULL) AND (0.7361629459662067)), ((('-1495223308'))>((0.9605694980003677))))); -- 0ms;
SELECT DISTINCT (('1142801676')=(CASE WHEN vt1.c2 THEN rt1.c1 ELSE rt1.c0 END)) FROM vt1 WHERE (((NULL)|(((0.7668387078300148)AND('9b'))))) LIMIT 235323140 OFFSET -485791160;SELECT DISTINCT ((UPPER(DISTINCT rt1.c0)) NOT BETWEEN (((vt1.c1)*(rt1.c0))) AND ((NOT (1.958380322E9)))) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((~ (rt1.c0)))OR(rt1.c0 COLLATE BINARY)))OR(((0.9934252721478638)=(rt1.c3)))) WHERE (((0.36498987016697115) BETWEEN (((((((((((((NULL)AND(x'')))OR(NULL)))OR(0.4803452827738347)))OR(0Xffffffffe2dd70ee)))AND(9.03061941E8)))OR('1236338705'))) AND ((('-1446720531')-(x'')))));SELECT ALL ((((vt1.c0)>(vt0.c0))) BETWEEN (GROUP_CONCAT(vt0.c0)) AND ((+ (vt1.c2)))) FROM t0, vt1 WHERE (IFNULL(DISTINCT x'' COLLATE BINARY, ('' IN ())));SELECT (((rt1.c1)) NOT BETWEEN ((CAST(vt1.c2 AS NUMERIC))) AND ((((vt1.c1) NOTNULL)))) FROM vt1;SELECT ALL ((CASE WHEN 0xffffffffe2b8ec8e THEN rt1.c0 END) IS FALSE) FROM t0, rt1 WHERE (((((NULL) NOT BETWEEN (0.20095411728825174) AND (0xfffffffff311b634)))!=(CAST(x'' AS TEXT)))); -- 0ms;
SELECT ALL CAST(((vt1.c0)AND(rt1.c0)) AS BLOB), ((((vt1.c0) NOT NULL))-(COUNT(rt1.c4))), ((((((((MAX(vt1.c2))OR((((NULL, rt1.c1, rt1.c1)) NOT BETWEEN ((t0.c0, rt1.c1, vt1.c1)) AND ((vt0.c0, rt1.c0, rt1.c3))))))OR(((rt1.c2)IS NOT(vt0.c0)))))AND(LOWER(rt1.c0))))AND(((rt1.c1)IS NOT(NULL)))) FROM t0 WHERE (((((((((((((((('FccM5U')AND(0.8208220807145351)))OR(x'')))OR(NULL)))AND(x'ef8d')))AND('-1246511510')))AND(x''))))=((((0.8632265741350744) NOTNULL))))) LIMIT 1677201089 OFFSET 1365653549;SELECT t0.c0, HEX(DISTINCT (((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0)))), CAST((((vt1.c1, vt1.c0, rt1.c0))>((t0.c0, vt1.c2, t0.c0))) AS INTEGER), rt1.c4, ((((((vt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c1)))OR(vt1.c0)))OR(((vt0.c0) ISNULL))) FROM vt0;SELECT ((vt1.c2) BETWEEN (((rt1.c1) NOT NULL)) AND (((rt1.c4) NOTNULL))) FROM rt1, t0;SELECT DISTINCT CAST(TRIM(DISTINCT vt1.c0) AS NUMERIC), CASE WHEN ((vt1.c1)IS NOT(t0.c0)) THEN (rt1.c3 IN ()) END, vt1.c1, MAX(((rt1.c2) IS TRUE)), IFNULL(DISTINCT ((vt1.c0)>>(rt1.c2)), GROUP_CONCAT(vt1.c1)) FROM t0, rt1, vt1, vt0; -- 0ms;
SELECT DISTINCT ((rt1.c3) IS FALSE) FROM vt0, t0 GROUP BY CASE WHEN ((vt1.c1) NOT BETWEEN (rt1.c4) AND ('')) THEN (((rt1.c4, rt1.c3, rt1.c1)) BETWEEN ((vt1.c2, vt0.c0, rt1.c4)) AND ((rt1.c2, vt1.c0, vt0.c0))) END, LIKELIHOOD(((rt1.c4)-(rt1.c1)), 0.15772422580475975), CAST((~ (rt1.c2)) AS BLOB);SELECT DISTINCT rt1.c1, DENSE_RANK() OVER ( ROWS vt1.c2 COLLATE NOCASE PRECEDING), MAX(vt1.c1), '?2', (CAST(rt1.c0 AS BLOB) IN ()) FROM vt0, rt1, vt1 WHERE (((0.5267637875428116 COLLATE NOCASE)>=((~ (NULL))))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c1 AS BLOB))*(((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c2)))) FROM vt1, rt1, t0 WHERE (ABS(DISTINCT (('40397853')==(6.80704777E8)))); -- 0ms;
SELECT (((rt1.c0 IN (vt1.c0)))LIKE((~ (rt1.c4)))) FROM rt1;SELECT DISTINCT CASE WHEN ((rt1.c3)>=(vt1.c0)) THEN ((vt1.c2) NOTNULL) END, (IFNULL(rt1.c3, vt1.c2) IN (((((rt1.c3)AND(0.3879234413000823)))AND(rt1.c2)), (((vt1.c0))<((t0.c0))))), ABS(DISTINCT ((vt1.c1) BETWEEN (rt1.c1) AND (vt0.c0))) FROM t0, rt1, vt1, vt0; -- 0ms;
SELECT ALL ((((rt1.c2)AND(((((vt1.c0)OR(rt1.c4)))OR(rt1.c3)))))AND(CASE NULL  WHEN rt1.c4 THEN '.R' END)) FROM rt1 WHERE (((('-873852682' IN ())) NOTNULL));SELECT DISTINCT '-1215737062', CASE WHEN (vt1.c1 IN ()) THEN ((vt1.c0) BETWEEN (t0.c0) AND (x'')) END, ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c4))) NOT BETWEEN (vt0.c0) AND (CAST(vt1.c2 AS TEXT))) FROM vt0, t0 WHERE ('267119072') LIMIT 1735449591 OFFSET 122428037;SELECT DISTINCT ((((rt1.c0)<<(rt1.c3)))>=((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((rt1.c4))))) FROM vt0, vt1, t0, rt1 WHERE (((((((x'309a')AND(NULL)))AND('-1845473802')))|(((NULL)LIKE('-1717050665'))))); -- 0ms;
SELECT DISTINCT x'' FROM t0, vt0 WHERE (((CAST('Sd' AS BLOB))==(CASE 0.7580929471484694  WHEN '' THEN NULL WHEN NULL THEN x'' WHEN 0x1c10759b THEN 0X343a12ac WHEN x'' THEN '1404351876' WHEN 0X524ab4cf THEN 784223868 ELSE x'' END))); -- 0ms;
SELECT (CASE WHEN rt1.c1 THEN vt1.c2 END IN ()), CASE (((vt1.c0)) BETWEEN ((rt1.c4)) AND ((rt1.c1)))  WHEN (((vt1.c0))>((vt1.c0))) THEN ((vt0.c0)-('-103492140')) END, CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0xffffffff994c6eca WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN vt1.c2 END AS TEXT), FIRST_VALUE((+ (CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END))) OVER ( ORDER BY SQLITE_COMPILEOPTION_USED(CASE NULL  WHEN NULL THEN vt1.c1 ELSE x'1e6e' END) DESC  NULLS LAST), (CAST(rt1.c2 AS TEXT) IN ()) FROM t0, vt0 WHERE (CASE WHEN 241646056 COLLATE BINARY THEN CASE 1e500  WHEN 0.4238743993419364 THEN 804756887 END WHEN (('')AND(-405902508)) THEN ((0Xffffffffbad9d543)>(x'')) WHEN (0.8350105334567145 IN ()) THEN x'' END);SELECT ALL MAX(((rt1.c2) IS TRUE)), LIKE(vt0.c0, CAST(rt1.c4 AS INTEGER)), CAST(((t0.c0)<<(vt1.c0)) AS INTEGER) FROM rt1 WHERE (((0.610745187760645)AND(NULL)) COLLATE RTRIM) GROUP BY (((NOT (vt1.c2))) IS FALSE) HAVING LENGTH((NOT (rt1.c3)));SELECT DISTINCT RANK() OVER () FROM vt0, vt1, t0; -- 7ms;
SELECT DISTINCT ((((TRIM(DISTINCT vt1.c1, rt1.c3))AND(((vt1.c0)<>(rt1.c2)))))AND(((x'5a79')AND(t0.c0)))) FROM vt0 WHERE (((((x'') ISNULL))GLOB((((NULL)) NOT BETWEEN ((x'')) AND ((0.7567155236931623))))));SELECT DISTINCT CASE WHEN rt1.c3 THEN rt1.c1 END COLLATE BINARY FROM t0, vt1, vt0, rt1 GROUP BY ((((vt1.c2)>>(x''))) BETWEEN (vt1.c2 COLLATE BINARY) AND (CAST(rt1.c4 AS INTEGER))); -- 0ms;
SELECT ALL ((((((((((t0.c0) NOT BETWEEN ('og') AND (rt1.c0)))AND(((vt0.c0) NOTNULL))))AND(CASE WHEN rt1.c4 THEN vt1.c1 ELSE rt1.c3 END)))OR(((((vt1.c1)AND(t0.c0)))OR(vt1.c0)))))AND(((rt1.c3)GLOB(rt1.c3)))) FROM rt1, vt0, vt1 GROUP BY (~ (rt1.c1)) COLLATE RTRIM HAVING (ABS(rt1.c4) IN ());SELECT (NOT (vt0.c0)) FROM vt1, t0 WHERE ((((((-2.137344314E9)) NOT BETWEEN (('?\r')) AND ((NULL))))||('' COLLATE NOCASE)));SELECT DISTINCT ((CASE WHEN t0.c0 THEN rt1.c0 WHEN vt1.c1 THEN rt1.c1 WHEN vt1.c1 THEN rt1.c3 END)&(rt1.c2)) FROM vt0 WHERE (TYPEOF(DISTINCT (NULL IN ()))) GROUP BY (NOT ((((rt1.c4)) BETWEEN ((0x3f9347e7)) AND ((rt1.c3)))));SELECT DISTINCT ((((rt1.c3)IS NOT(rt1.c2)))<<(((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))) FROM vt0, t0 WHERE ((((0.6237092227753482) BETWEEN (x'') AND (0.6307794870109599)) IN (((0.7394588200340632) NOT NULL), CAST(0.9766944835992256 AS BLOB))));SELECT DISTINCT CASE (((vt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))  WHEN (t0.c0 IN ()) THEN 2.67985207E8 WHEN ((rt1.c2) BETWEEN (-5.98117983E8) AND (vt1.c0)) THEN ((((((((rt1.c1)OR(rt1.c1)))OR(0.0338137719817434)))AND(rt1.c1)))AND(vt1.c2)) WHEN ((rt1.c3) IS FALSE) THEN ((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c0)) ELSE CAST(rt1.c4 AS INTEGER) END FROM t0, rt1 WHERE (((NULL COLLATE NOCASE) BETWEEN (((NULL) NOT BETWEEN (0.4204517523339746) AND (x'13ea'))) AND (x'eddd' COLLATE RTRIM))) LIMIT -1858602634;SELECT DISTINCT IFNULL(0.6225865981693461, ((((((((rt1.c3)AND(vt1.c2)))OR(rt1.c1)))OR(rt1.c3)))OR(vt1.c2))) FROM t0, vt1 WHERE (CAST(((((0.5991129166770508)OR('')))AND('a-GwVq')) AS BLOB));SELECT (((t0.c0)) BETWEEN (((- (rt1.c3)))) AND ((COALESCE(DISTINCT 1.598356701E9, rt1.c4)))) FROM vt1, vt0, t0 WHERE (LOWER((x'' IN ('-820828679', 0.17179267706876644))));SELECT ALL rt1.c0 FROM t0, rt1, vt0 WHERE ((~ (TYPEOF(NULL)))) ORDER BY vt1.c1 ASC;SELECT DISTINCT CASE rt1.c2  WHEN vt1.c1 THEN rt1.c2 END COLLATE NOCASE FROM rt1, t0, vt1, vt0 WHERE (CASE (((('UlONlE!sK')OR(0.40027502402977433)))AND(0.9729996003200514))  WHEN (('-1872136490')-(x'a3d5')) THEN CAST(x'' AS TEXT) END); -- 0ms;
SELECT CAST(CASE WHEN rt1.c4 THEN rt1.c3 END AS REAL) FROM t0, vt1 INNER JOIN vt0 ON (((((((rt1.c0)AND(vt0.c0)))AND(rt1.c3)), vt1.c1, x'1fe79fa9', 0.8582082106835321, (((rt1.c0))>=((rt1.c1)))))==(((t0.c0 IN ()), ((rt1.c0) NOTNULL), CAST(t0.c0 AS INTEGER), '1991355940', ((rt1.c2) NOTNULL)))) CROSS JOIN rt1 ON (((('958147069') IS TRUE)) BETWEEN (((vt1.c1) BETWEEN (NULL) AND (vt1.c1))) AND ('-1826322438')) WHERE (((((CAST('궽}rB?yA' AS NUMERIC))AND(((NULL) IS FALSE))))OR((((0.019730995521093253, NULL, 0.8996661177999146))<((NULL, 0.4278738373120461, 'DQ<0')))))); -- 0ms;
SELECT (((((rt1.c2, vt0.c0, vt1.c1)) NOT BETWEEN ((vt1.c2, rt1.c4, rt1.c0)) AND ((t0.c0, vt1.c1, vt0.c0))))==(((rt1.c0) NOT BETWEEN (vt1.c1) AND (rt1.c3)))) FROM vt0, t0 WHERE ((DATETIME('0.2824694183499097', 0X25b997af, x'') IN ()));SELECT rt1.c4, ((((rt1.c0) NOT BETWEEN (vt1.c1) AND (rt1.c2))) NOT BETWEEN (((((((((vt1.c2)OR(0Xffffffffdc5971a1)))AND(vt1.c1)))AND(rt1.c2)))OR(rt1.c4))) AND (((vt1.c1)OR(vt0.c0)))), ((COUNT(vt1.c0)) BETWEEN (((((((((((((rt1.c3)OR(vt1.c1)))OR(vt1.c2)))AND(vt1.c0)))AND(vt1.c2)))AND(rt1.c2)))OR(vt1.c1))) AND (vt1.c0)) FROM t0 WHERE (((((((((((('|')AND(x'ef24')))OR(x'')))OR(x'')))OR(-1.803618729E9))))<(((((x'')) NOT BETWEEN ((x'')) AND ((0.4789279732190832)))))));SELECT DISTINCT ((((rt1.c3, 0xffffffff82e89a7d, rt1.c1))<=((rt1.c4, x'f1bd', rt1.c0))) IN ()), CASE WHEN ((vt1.c1) NOT NULL) THEN ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c0)) ELSE (rt1.c2 IN (rt1.c3)) END, (((((rt1.c3) BETWEEN (t0.c0) AND (rt1.c1))))<=((NULLIF(DISTINCT vt1.c1, vt1.c0)))) FROM vt0, vt1;SELECT ALL ((TIME(vt0.c0, vt1.c1, rt1.c1))>((rt1.c4 IN (rt1.c1, rt1.c0)))), '㈗{t#k,9\g', (NOT (rt1.c2 COLLATE RTRIM)) FROM rt1 WHERE ((((((x'' IN (0.04809988674147947, '888377474')))AND(LIKE(NULL, 'l,', '9'))))AND((~ (-1034173519)))));SELECT DISTINCT (+ (COUNT(*))) FROM rt1; -- 0ms;
SELECT ALL LIKELIHOOD(IFNULL(DISTINCT rt1.c0, rt1.c3), 0.5902971987154408) FROM t0, vt1 WHERE (CASE ((x'')==(-1783823739))  WHEN (((''))<=(('kT'))) THEN NULL COLLATE RTRIM ELSE (('EU')GLOB(0.8861432965141737)) END);SELECT DISTINCT CASE ((rt1.c3) NOTNULL)  WHEN TOTAL(rt1.c3) THEN (vt1.c0 IN ()) END FROM rt1, vt0 ORDER BY ((rt1.c1) BETWEEN (vt1.c2) AND (((((rt1.c1)OR(rt1.c0)))OR(vt1.c2)))) DESC;SELECT DISTINCT ((((rt1.c4) NOTNULL)) BETWEEN (MAX(vt0.c0)) AND (rt1.c0)) FROM t0, vt1 GROUP BY CAST(vt1.c2 AS INTEGER) ORDER BY CAST(((rt1.c4)<(t0.c0)) AS INTEGER), ((((vt0.c0)OR(0.07954917804814698)))IS(rt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;SELECT (('-2144854386') NOTNULL) COLLATE RTRIM, ((((((rt1.c3)) BETWEEN ((x'')) AND ((vt0.c0))), (((vt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((x''))), vt1.c2))>=(((t0.c0 IN ()), t0.c0, (((vt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c4)))))), (((rt1.c3)<=(rt1.c3)) IN ()) FROM t0, rt1 WHERE (((CASE NULL  WHEN x'' THEN NULL WHEN 0.6497228471482465 THEN x'' WHEN 0.5078389274199857 THEN x'' WHEN x'4379' THEN NULL WHEN NULL THEN x'' WHEN 0.9305930876285359 THEN '300162047' WHEN x'1929' THEN '-1495223308' ELSE 5.52973921E8 END)OR(CASE WHEN 0Xffffffffd027bafb THEN 'D' ELSE '1781821760' END)));SELECT ((GROUP_CONCAT(vt1.c0)) IS FALSE) FROM t0, vt0;SELECT DISTINCT LIKELY(rt1.c1) FROM vt1, vt0 WHERE ((((0.2709843031608954, x'', 0.4874640729609392)) BETWEEN (((+ (NULL)), (~ ('VAtt}&{m')), ((x'') NOT BETWEEN (NULL) AND ('XK5%w4hT')))) AND ((CASE x''  WHEN x'8350' THEN x'b27b' WHEN x'' THEN 0x6022e23 WHEN '[]' THEN x'8a60' WHEN 0.43045103699813747 THEN NULL WHEN '-1411440298' THEN x'' ELSE x'9a35' END, ((x'')<<(NULL)), CASE 't1	\r鹠'  WHEN 'nx85ᾉ' THEN 0Xffffffff994c6eca ELSE 0.45669200519639086 END)))) ORDER BY ((((vt0.c0)+(rt1.c0)))==(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))), ((((+ (vt0.c0))))=(((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c0)))))) ASC  NULLS LAST;SELECT (+ (((vt1.c0)GLOB(t0.c0)))), vt0.c0, t0.c0 FROM rt1, vt0, vt1;SELECT ALL LTRIM(((vt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0))) FROM vt0, rt1, vt1 FULL OUTER JOIN t0 ON TYPEOF(((vt0.c0)IS(vt1.c1))) WHERE (((((x'', '\l', x'3c3c')) BETWEEN ((0.06576789651198245, 0.1068886902268904, NULL)) AND ((x'', 0Xffffffff9a62e7a1, '888377474'))) IN ((NULL IN ('TKsB'))))); -- 0ms;
SELECT (((rt1.c1, 'per碱ui橁0i', t0.c0)) NOT BETWEEN ((rt1.c0 COLLATE NOCASE, CAST(x'' AS TEXT), CASE WHEN vt0.c0 THEN rt1.c1 WHEN t0.c0 THEN rt1.c3 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)) AND ((((((((((vt1.c2)AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(vt1.c2)), ((vt0.c0)%('')), ((NULL) BETWEEN (rt1.c3) AND (vt1.c0))))) FROM vt1, rt1, vt0;SELECT (+ (CASE vt0.c0  WHEN rt1.c1 THEN vt1.c2 END)) FROM rt1 WHERE (CAST(CASE NULL  WHEN -1137903931 THEN 0.4589075698976791 ELSE 0xffffffffc92ab919 END AS TEXT));SELECT DISTINCT ((rt1.c2) NOTNULL) FROM vt1, t0, rt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END, COUNT(vt1.c2), ((((vt1.c2)OR(rt1.c0)))OR('0.43633870259810636')), ((NULL) BETWEEN (t0.c0) AND (vt0.c0))))>=((CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN rt1.c2 THEN vt1.c0 END, ((rt1.c3)IS(vt0.c0)), CAST(rt1.c2 AS BLOB), (((t0.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c4))), ((0xffffffffc2648320) NOT BETWEEN (rt1.c3) AND (rt1.c1))))) FROM t0, vt1, vt0, rt1; -- 0ms;
SELECT LIKELIHOOD((vt0.c0 IN ()), 0.9243099367853003) FROM t0, rt1; -- 1ms;
SELECT ALL TRIM(DISTINCT (vt0.c0 IN ())) FROM t0, rt1, vt1, vt0 WHERE ((~ (COALESCE(DISTINCT '''<0E*k', NULL)))); -- 0ms;
SELECT DISTINCT load_extension((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c2)))) FROM t0, rt1, vt1, vt0; -- 0ms;
SELECT ALL ((((((rt1.c1)OR(NULL)))AND(vt1.c0))) BETWEEN (t0.c0 COLLATE RTRIM) AND (x'')) FROM vt1, vt0;SELECT DISTINCT ((((((((rt1.c3)AND(vt1.c2)))OR(rt1.c3)))AND(((vt1.c1) NOT NULL))))AND(rt1.c0)) FROM vt1, rt1, vt0 LIMIT 529901168; -- 0ms;
SELECT rt1.c3, (- (rt1.c1)) COLLATE NOCASE, LAG(NULL, (((NULL IN ()))-((0.3566042362447941 IN ()))), ((((rt1.c3) IS FALSE)) IS TRUE)) OVER () FROM vt0, t0, rt1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), (((NOT (vt1.c0))) ISNULL), NTILE(((((((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4)))OR(((rt1.c2) NOT NULL))))OR('625879360')))OR(((rt1.c3)-(rt1.c0)))))AND(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c2 END))) OVER () FROM rt1, t0 WHERE (CAST(((NULL) BETWEEN (759304258) AND (x'da49')) AS REAL));SELECT ALL (((rt1.c2 COLLATE NOCASE))<=((CAST(vt1.c2 AS REAL)))) FROM vt1, vt0 WHERE ((NOT (CAST(x'36f6' AS TEXT)))) ORDER BY (NOT (((rt1.c3) IS TRUE)));SELECT MAX(CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c3 THEN vt1.c1 WHEN t0.c0 THEN vt0.c0 ELSE rt1.c1 END) FROM vt1, vt0, t0;SELECT TOTAL(CAST(t0.c0 AS INTEGER)), vt1.c0, CHANGES() FROM vt1, t0, vt0, rt1 WHERE ((0.9355690766148844 IN ())); -- 0ms;
SELECT ALL TOTAL('') OVER () FROM vt1, vt0, rt1; -- 1ms;
SELECT (- ((NOT (vt0.c0)))), '', NTH_VALUE((((((x'' IN ()))AND(t0.c0)))AND((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))), (((t0.c0 IN ()))&(NULL))) OVER (), CASE WHEN '0.03389470714922338' THEN (rt1.c0 IN (rt1.c4, rt1.c2)) WHEN (x'8b17' IN ()) THEN UNLIKELY(vt1.c2) WHEN ((vt1.c2)>>(rt1.c2)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((rt1.c4)!=(vt1.c2)) WHEN ((rt1.c3)AND(rt1.c4)) THEN (~ (vt1.c0)) END, ((SUM(vt1.c2)) IS TRUE) FROM t0;SELECT ALL LIKELIHOOD(HEX(vt1.c2), 0.34605463962621774) FROM vt0;SELECT ((((((rt1.c1)OR(rt1.c0)))OR(t0.c0)))*(t0.c0)), ((((NULL)==(rt1.c1)))>>('2046901907')), GROUP_CONCAT(((vt1.c0)>=(rt1.c4))) FROM vt0 GROUP BY (NOT (((vt1.c1)|(vt0.c0))));SELECT ALL CASE CASE vt1.c1  WHEN rt1.c2 THEN rt1.c4 WHEN vt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN vt1.c2 WHEN t0.c0 THEN t0.c0 WHEN rt1.c3 THEN vt0.c0 ELSE vt1.c1 END  WHEN (((rt1.c2, 0.7322753864508249, vt1.c1)) BETWEEN ((rt1.c2, rt1.c3, rt1.c4)) AND ((vt0.c0, vt0.c0, rt1.c1))) THEN (rt1.c3 IN ()) END FROM rt1, vt1, t0, vt0 WHERE (CAST(CASE WHEN x'7e4e' THEN NULL WHEN 'TVcrMh(RL' THEN '1397574981' WHEN NULL THEN '' END AS TEXT)) LIMIT -1274158965; -- 0ms;
SELECT ALL CASE ((-210526579)/(rt1.c3))  WHEN LENGTH(vt0.c0) THEN (~ (rt1.c1)) WHEN ((rt1.c4) NOT BETWEEN (vt1.c1) AND (rt1.c4)) THEN ((((vt1.c0)OR(rt1.c1)))OR(rt1.c1)) WHEN COUNT(*) THEN ((rt1.c0) BETWEEN (rt1.c4) AND (0.7637012435732842)) WHEN (~ (vt1.c2)) THEN COUNT(vt1.c1) WHEN CAST(NULL AS INTEGER) THEN (vt1.c2 IN ()) END FROM t0, vt1 ORDER BY (~ (((((vt0.c0)OR(rt1.c4)))AND(rt1.c4)))) ASC  NULLS LAST;SELECT DISTINCT (+ ((- ('')))) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT x'ef8e', (- (t0.c0)) COLLATE RTRIM COLLATE NOCASE, GROUP_CONCAT(vt1.c0) OVER () FROM rt1 WHERE ((((('-13022862')<=(0.37661483059859013))) BETWEEN ('') AND (((0.008959834751212314) BETWEEN (NULL) AND (NULL)))));SELECT ALL ((GROUP_CONCAT(t0.c0)) ISNULL) FROM vt0 WHERE ((('p.M5/,d3C') NOT BETWEEN (NULL) AND ('')) COLLATE NOCASE);SELECT DISTINCT CASE (vt1.c0 IN ())  WHEN ((((((((vt1.c2)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(rt1.c2)) THEN AVG(rt1.c4) END FROM t0, vt1, rt1 WHERE (TRIM(DISTINCT (0Xffffffffd990511d IN ()))); -- 0ms;
SELECT ALL ((((((((((((x'')AND(((t0.c0) NOT BETWEEN (vt1.c1) AND (rt1.c0)))))OR((NOT (rt1.c2)))))AND(CAST(rt1.c3 AS TEXT))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c4 THEN vt1.c2 WHEN 0.770842926674319 THEN vt0.c0 END)))OR(((vt1.c0)AND(x'3cfc')))))OR(((vt1.c0)IS(t0.c0)))) FROM vt1, rt1 WHERE (((((0Xffffffffd2b80e35)<=(x'c2e6')))GLOB(CAST(0.05377734537137768 AS BLOB)))) ORDER BY ((((vt0.c0)|(rt1.c1))) NOTNULL), (- (((vt1.c2)&(vt1.c0))));SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) NOTNULL) FROM rt1, vt1 WHERE (NULL); -- 1ms;
SELECT CASE ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c3))  WHEN GROUP_CONCAT(vt1.c0) THEN (+ (rt1.c1)) WHEN COALESCE(DISTINCT rt1.c2, vt1.c0, rt1.c2, vt0.c0, t0.c0, rt1.c4) THEN (('&Y?q')>=(vt1.c1)) WHEN ((vt1.c0)%(rt1.c4)) THEN ((0.973352264393826) IS FALSE) ELSE (x'' IN ()) END FROM vt1;SELECT DISTINCT x'', SUM(((vt0.c0)+(t0.c0))), (((+ (rt1.c1))) BETWEEN (MIN(rt1.c0)) AND ((+ (vt1.c1)))) FROM t0, vt0, vt1 WHERE ((((0.35923002888993183 IN ())) NOT NULL));SELECT DISTINCT ((((((t0.c0)OR('')))AND(')\笝')))IS((('1129441230')==(vt1.c0)))), ((CAST(t0.c0 AS INTEGER)) BETWEEN (((vt1.c2)-(vt1.c1))) AND (vt1.c2)), SUM(((vt0.c0)&('234310131'))), (NOT (COUNT(vt1.c0))), (+ (((vt1.c0) NOT NULL))) FROM t0 WHERE (CASE WHEN (- (NULL)) THEN CAST(x'' AS TEXT) WHEN x'' THEN ((x'')>('')) WHEN CAST('P9' AS BLOB) THEN CASE 0.36408941450972576  WHEN x'' THEN x'493c' END WHEN (('782109797')LIKE(x'')) THEN ((x'') IS FALSE) WHEN (('0.5636917369498835')-(0.5509236892676427)) THEN LIKE(x'67b5', NULL) END);SELECT DISTINCT vt0.c0, ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE BINARY, ((((rt1.c2)OR(COUNT(*))))OR(rt1.c2)) FROM vt1, rt1, t0, vt0 WHERE (((0.7235984403299892 IN ()) IN (UPPER(DISTINCT 0.37252396597618453), CAST(x'' AS NUMERIC)))) LIMIT 804042940 OFFSET 673815168; -- 0ms;
SELECT ALL CASE WHEN (((vt1.c1)) BETWEEN ((rt1.c3)) AND ((vt1.c0))) THEN ((((0.4772756628453978)OR(rt1.c1)))AND(t0.c0)) END FROM vt0, t0, rt1, vt1 WHERE (CAST((('787419697') BETWEEN (0.5278908668195964) AND (267119072)) AS TEXT)); -- 0ms;
SELECT (- (rt1.c4)) FROM t0, vt1, rt1, vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0, t0 WHERE (((((x'')>(x'')))>((((NULL))>=(('~')))))); -- 0ms;
SELECT ALL CASE WHEN ((vt1.c2) NOT BETWEEN (rt1.c4) AND (vt1.c0)) THEN (+ (rt1.c4)) END FROM vt1, rt1; -- 0ms;
SELECT DISTINCT UPPER(((rt1.c0)&(vt1.c2))), TOTAL(rt1.c2) FILTER(WHERE (((0.8869221953227119 IN ())) NOTNULL)) OVER (), x'' FROM vt0;SELECT DISTINCT ((rt1.c4)LIKE(rt1.c2)) COLLATE RTRIM FROM vt0, rt1, vt1, t0 WHERE ((('') NOT BETWEEN (NULL) AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((COUNT(*)) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (CAST('-944789051' AS NUMERIC))) FROM vt1, vt0, t0, rt1 WHERE (((((0.4947556687657556) BETWEEN ('-467317117') AND ('0.5832825134506257')))=(((x'219e')>('},'))))) GROUP BY CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE; -- 1ms;
SELECT DISTINCT CAST((vt1.c0 IN ()) AS REAL) FROM vt0, t0, vt1; -- 0ms;
SELECT ALL (((vt1.c2)>>(rt1.c0)) IN (((rt1.c2) IS FALSE), ((vt0.c0)==(vt1.c1)))) FROM vt1, t0, vt0, rt1; -- 0ms;
SELECT CASE WHEN ((0.8975162147425438) NOTNULL) THEN COUNT(*) END, ((((vt1.c1) ISNULL))OR(ABS(vt1.c1))), ((((((((CASE vt1.c2  WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN t0.c0 WHEN vt0.c0 THEN 7.07492825E8 END)OR(((vt0.c0)LIKE(rt1.c3)))))AND((0.1007323137964592 IN ()))))OR(COUNT(rt1.c4))))OR(COUNT(*))) FROM rt1;SELECT (NOT ((~ (vt1.c2)))) FROM vt0;SELECT DISTINCT CAST((((rt1.c2, '', vt1.c2))>=((rt1.c1, rt1.c4, vt1.c0))) AS REAL), CAST(1880206972 AS TEXT), ((((rt1.c4)>=(rt1.c3))) BETWEEN (vt0.c0) AND ((NOT (vt0.c0)))) FROM vt1, vt0, t0, rt1 ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN t0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt1.c2 THEN rt1.c0 END)<=(t0.c0 COLLATE BINARY)) DESC LIMIT -2000099702; -- 0ms;
SELECT ALL CASE WHEN ((vt1.c2)GLOB('552973921')) THEN (rt1.c0 IN ()) WHEN ((((((((x'a6b2')AND(NULL)))OR(rt1.c2)))OR(rt1.c4)))OR(x'')) THEN LIKELY(rt1.c3) WHEN (((rt1.c3)) BETWEEN ((t0.c0)) AND ((vt1.c1))) THEN ((((((((vt1.c2)AND(rt1.c2)))OR(rt1.c3)))OR(rt1.c2)))OR(vt1.c1)) ELSE vt1.c2 END FROM vt1, t0, vt0 WHERE ((((((NULL)) NOT BETWEEN ((NULL)) AND (('y0Bwm')))) IS TRUE));SELECT ALL CASE ((vt1.c2)<=(vt1.c0))  WHEN ((((vt0.c0)AND(x'')))AND(rt1.c1)) THEN ((rt1.c0) IS FALSE) WHEN ((vt1.c0)<(t0.c0)) THEN (((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt0.c0))) WHEN CAST(vt1.c2 AS NUMERIC) THEN ((((rt1.c2)OR(rt1.c4)))AND(t0.c0)) WHEN (((vt0.c0))=((vt1.c0))) THEN ((vt0.c0) NOT BETWEEN ('') AND (t0.c0)) WHEN ((rt1.c2)AND(rt1.c3)) THEN (NOT (rt1.c4)) END FROM t0, vt1, vt0 ORDER BY ((CASE WHEN NULL THEN rt1.c0 ELSE vt1.c1 END)IS NOT(((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c2))));SELECT DISTINCT (((((vt1.c0) NOT NULL), ((rt1.c4)!=(NULL)), ((((rt1.c3)AND(rt1.c1)))OR(NULL))))=((((vt1.c1) IS TRUE), ((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c2)), ((rt1.c3) BETWEEN (x'') AND (rt1.c1))))) FROM vt0 WHERE (((((((((((0x21309090)AND(0.17649080529482897)))OR(NULL)))AND('TVHZ![>|')))AND(')r')))<<(8.56956809E8 COLLATE NOCASE)));SELECT DISTINCT CAST(((vt1.c1) NOT NULL) AS INTEGER) FROM vt0, rt1 WHERE ((NOT (((((0.27034498399910145)OR(0.35800739613169874)))AND('0.8014685983835236'))))) LIMIT -238524364 OFFSET 680704777;SELECT '1958380322' FROM vt0, t0, rt1, vt1; -- 0ms;
SELECT DISTINCT ((LAST_INSERT_ROWID())=(CAST(rt1.c3 AS BLOB))), CAST(CASE vt1.c2  WHEN t0.c0 THEN vt0.c0 ELSE rt1.c2 END AS NUMERIC), ((rt1.c1)==(((vt1.c2)%(vt1.c0)))) FROM vt0, rt1, t0, vt1 WHERE (TRIM((('') BETWEEN (0.12656001686847396) AND (0.6968164827746072)))); -- 0ms;
SELECT DISTINCT rt1.c3 FROM vt0, t0, rt1, vt1 LIMIT -351272714 OFFSET -113164792; -- 0ms;
SELECT DISTINCT CASE ((rt1.c1) ISNULL)  WHEN MAX(vt1.c0, rt1.c1, NULL, vt1.c1, rt1.c1, vt1.c0) THEN (vt0.c0 IN ()) END FROM rt1;SELECT ALL (((((rt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) BETWEEN (json_array(']\njR%I.', rt1.c4, rt1.c3, vt1.c2)) AND (json_array_length(rt1.c0, vt1.c2))), 0.6657331962669938, x'bb37' FROM rt1, t0 WHERE ((~ (('1041315283' IN ('-2015602897')))));SELECT DISTINCT CASE COUNT(rt1.c1)  WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c2)-(rt1.c4)) ELSE ((((vt0.c0)OR(vt1.c2)))AND(rt1.c1)) END FROM vt0, vt1, t0;SELECT DISTINCT ((((NOT (-485791160)), TOTAL(rt1.c2), (((NULL))>((vt1.c0)))))<=(((- ('-229899206')), (NOT (t0.c0)), ((NULL) IS FALSE)))) FROM vt0, vt1, t0, rt1 WHERE (json_quote((('1937873832')<=('-125912116')))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c0)!=(rt1.c4)) THEN (- (rt1.c2)) END, (- ((vt1.c0 IN ()))), ((CASE WHEN rt1.c0 THEN rt1.c1 END)IS(((vt0.c0) NOT NULL))), ((0.8413147151180843) NOT NULL), (((vt1.c1)) BETWEEN (((rt1.c1 IN ()))) AND ((CASE WHEN vt1.c2 THEN rt1.c4 ELSE rt1.c0 END))) FROM vt0, t0, rt1, vt1 WHERE ((~ (RTRIM(0.7580929471484694)))); -- 0ms;
SELECT ALL (((vt1.c1) NOTNULL) IN ()) FROM vt0, t0; -- 0ms;
SELECT DISTINCT load_extension(CASE WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN rt1.c3 ELSE vt0.c0 END), (((rt1.c3) BETWEEN (rt1.c4) AND (vt0.c0)) IN ()), CASE ((rt1.c1)GLOB(rt1.c0))  WHEN (NOT (vt1.c1)) THEN ((rt1.c4)AND(t0.c0)) WHEN x'' THEN rt1.c0 COLLATE BINARY WHEN ((0.7516972069420368)IS NOT(rt1.c1)) THEN ((rt1.c3) NOT BETWEEN (vt1.c2) AND (vt1.c2)) ELSE DATE('955353411', rt1.c4, NULL) END FROM t0, vt0 NOT INDEXED, rt1 ORDER BY ((UPPER(vt1.c1))IS(CAST(vt1.c2 AS NUMERIC))) DESC;SELECT FIRST_VALUE((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((rt1.c3) BETWEEN (rt1.c0) AND ('')))))) OVER () FROM rt1, t0, vt0 WHERE (((((0.01823000235474037) ISNULL))&((('-1734795111')>=('0.4560474373066312'))))) GROUP BY vt1.c2, (((NULL, rt1.c3, rt1.c4)) NOT BETWEEN ((vt0.c0, rt1.c1, rt1.c2)) AND ((vt0.c0, '505031083', '-13022862'))) COLLATE BINARY COLLATE BINARY, CAST(((rt1.c0) IS FALSE) AS REAL);SELECT DISTINCT rt1.c1 FROM rt1, vt0, t0, vt1; -- 1ms;
SELECT ((GROUP_CONCAT(rt1.c1)) IS TRUE), vt1.c2, ((((rt1.c3)AND(((t0.c0)LIKE(rt1.c4)))))AND(((0.21518232904977475)/(x'')))) FROM vt1;SELECT DISTINCT NTH_VALUE((((+ (vt0.c0))) BETWEEN ((+ (rt1.c1))) AND (IFNULL('-987326755', t0.c0))), ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))) BETWEEN ((((('')AND(rt1.c4)))OR(rt1.c0))) AND (rt1.c4))) OVER (), ((CAST(t0.c0 AS INTEGER)) BETWEEN (0.4122362040829639 COLLATE NOCASE) AND (((rt1.c4) NOT BETWEEN (0xe0e6a41) AND (vt1.c2)))), (- (CASE WHEN rt1.c1 THEN vt1.c1 END)), ((((x'' IN (vt0.c0)), ((((rt1.c4)OR(rt1.c3)))OR(rt1.c0)), ((vt1.c1)=(rt1.c4))))<>((((vt0.c0) IS TRUE), ((((rt1.c0)AND(t0.c0)))OR(1642240929)), ((vt1.c0) IS TRUE)))), (NOT (vt1.c1)) FROM vt0, rt1, t0 WHERE (((CAST(NULL AS TEXT)) IS FALSE));SELECT DISTINCT (((rt1.c4) BETWEEN (t0.c0) AND (rt1.c4)) IN ()), (NOT (((vt0.c0) BETWEEN (vt1.c0) AND (rt1.c4)))), CAST(rt1.c1 AS NUMERIC) FROM vt1, rt1 WHERE (((NULL COLLATE BINARY)LIKE((- ('')))));SELECT DISTINCT ((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) IN ()) FROM vt1, vt0 WHERE (((((((((((NULL)OR('~Ⱬ')))OR('-CkKE')))AND(x'8c5b')))OR('-726891344'))) BETWEEN ('271552121' COLLATE NOCASE) AND ((('238440168')&(0X2d05b3b4))))); -- 0ms;
SELECT DISTINCT ((((rt1.c2)<<(rt1.c1))) NOT BETWEEN ((rt1.c1 IN ())) AND (((((rt1.c4)OR(vt1.c0)))OR(NULL)))) FROM vt1, t0;SELECT ((((((rt1.c3)AND('-512722782')))OR(rt1.c1))) NOT NULL) FROM vt1, rt1; -- 1ms;
SELECT ALL ((t0.c0 COLLATE BINARY) NOTNULL) FROM vt0, t0, rt1 WHERE (((NULL COLLATE BINARY)<(((NULL) BETWEEN ('-1131374872') AND (0.44674679386464333))))); -- 0ms;
SELECT DISTINCT (CAST(rt1.c0 AS REAL) IN ()), ((TRIM(DISTINCT rt1.c3, rt1.c2))|(((vt0.c0)<=(vt1.c2)))), CAST(HEX(rt1.c0) AS NUMERIC) FROM rt1, t0 WHERE ((((0xffffffffb0e2ab25))<=((NULL))) COLLATE BINARY);SELECT ALL (TRIM(x'', vt1.c0) IN ()), ((0X3f07b683) NOTNULL), json_extract(json_remove(t0.c0, vt0.c0), ((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)), (NOT (rt1.c3)), HEX(rt1.c3)) FROM vt0 NOT INDEXED, vt1, t0, rt1; -- 0ms;
SELECT DISTINCT (((((vt1.c2)AND(vt0.c0)))AND(vt1.c0)) IN ()), (+ (((vt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)))), ((TRIM(rt1.c3)) NOT NULL) FROM vt0 LIMIT 164775812 OFFSET -1476542126;SELECT DISTINCT ((t0.c0 COLLATE NOCASE)AND(COUNT(rt1.c1))) FROM t0, rt1; -- 0ms;
SELECT ((vt1.c1)OR(((rt1.c2)-(vt0.c0)))) FROM rt1, vt0;SELECT DISTINCT GROUP_CONCAT(((rt1.c0) NOT BETWEEN (vt1.c1) AND (x''))) OVER ( RANGE (((~ (vt0.c0)))<=(((((rt1.c3)AND(vt1.c1)))OR(rt1.c0)))) PRECEDING), (NOT (0x5f44fcdd)), MIN('3083833') FROM t0, vt1, vt0 WHERE (((CASE x''  WHEN 0.3626408630350981 THEN -2.015602897E9 ELSE '-813233509' END)=(HEX(DISTINCT NULL))));SELECT vt0.c0 FROM vt0, rt1, t0 WHERE ((((0Xffffffffdb670266 IN ()))<=(CASE WHEN '' THEN 0.43794093582451443 END))); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN vt1.c2 THEN t0.c0 ELSE vt1.c0 END)<(CASE NULL  WHEN rt1.c1 THEN rt1.c0 ELSE t0.c0 END)) FROM vt1, rt1;SELECT SUM(((vt0.c0)*(vt0.c0))) OVER () FROM t0 WHERE ((((x'7df3')IS(0Xffffffffc52696dd)) IN (0.7036209638889245 COLLATE BINARY)));SELECT ALL (NOT (('	+' IN ()))), CASE 0.5747226222891837  WHEN ((vt1.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN GROUP_CONCAT(vt1.c1) WHEN ((vt1.c0) BETWEEN (rt1.c3) AND (t0.c0)) THEN MAX(rt1.c0) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c3)) THEN CASE 0.19822200024326775  WHEN rt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN vt1.c1 END END, LEAD(TRIM(DISTINCT (~ (vt1.c2)), (((vt1.c1, vt1.c2, vt1.c0))>=((vt0.c0, '0.6237092227753482', vt0.c0)))), (vt1.c1 COLLATE BINARY IN ()), ((NULL)OR(vt1.c0))) OVER ( RANGE ((rt1.c3)+(rt1.c3)) COLLATE BINARY PRECEDING EXCLUDE CURRENT ROW), ((((load_extension(rt1.c3, rt1.c2))AND(((vt1.c2) BETWEEN (t0.c0) AND (rt1.c1)))))AND((+ (rt1.c2)))), (((rt1.c1)) NOT BETWEEN ((CASE WHEN t0.c0 THEN NULL WHEN vt0.c0 THEN rt1.c4 WHEN vt1.c2 THEN rt1.c3 END)) AND (((((rt1.c0, vt1.c2, x''))>=((vt0.c0, t0.c0, rt1.c4)))))) FROM t0, vt1, vt0 WHERE (CAST(LIKELY(x'afbe') AS NUMERIC));SELECT DISTINCT (((((rt1.c0 IN ()))AND(GROUP_CONCAT(t0.c0))))OR(vt0.c0 COLLATE BINARY)) FROM t0, vt1, rt1, vt0 WHERE (CASE (((0.6354446457689547)) NOT BETWEEN (('')) AND ((NULL)))  WHEN CAST('-1444667786' AS REAL) THEN 0.4681430543221814 ELSE (((((((('AWiRq')AND('\잺')))AND(NULL)))OR(NULL)))OR('')) END) ORDER BY ((((((0.3406538155141684)=(rt1.c4)))AND(CASE t0.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c2 WHEN t0.c0 THEN vt1.c0 WHEN rt1.c3 THEN rt1.c3 END)))OR(((vt1.c0)OR(vt1.c2)))) DESC, NULLIF(vt1.c0, rt1.c3) COLLATE RTRIM DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT (NOT ((((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((''))))), (((+ (t0.c0))) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (CASE 1.620674454E9  WHEN rt1.c4 THEN rt1.c4 END)), ((rt1.c1) NOTNULL) COLLATE NOCASE FROM rt1, vt0, vt1, t0; -- 0ms;
SELECT ALL ((AVG(vt0.c0)) IS FALSE), COUNT(*) OVER (), AVG(((t0.c0)!=(vt1.c0))) FROM t0, vt1, vt0, rt1 WHERE (((((((((((x'8ef1')AND(0.34458869400241454)))OR('Dd&Q^')))OR('-787188195')))OR(x'')))IS(('?\r' IN ())))) GROUP BY (- (vt1.c1)) COLLATE NOCASE; -- 0ms;
SELECT (vt1.c2 IN ()) FROM vt1, rt1, vt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN (rt1.c0 IN ()) THEN SUM('1724183235') ELSE vt1.c1 COLLATE NOCASE END FROM vt0 INNER JOIN rt1 ON CASE (((rt1.c1))<((vt1.c1)))  WHEN rt1.c1 COLLATE NOCASE THEN (((vt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4))) END GROUP BY (+ (t0.c0)), (((- (rt1.c4)))|(rt1.c3 COLLATE BINARY)), CASE ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c0))  WHEN (vt1.c2 IN ()) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c1)) END HAVING (~ (((rt1.c0) NOT NULL)));SELECT DISTINCT (((((x'')OR(rt1.c3)))OR(vt1.c1)) IN ()) FROM vt0, t0, rt1, vt1 WHERE ((((+ (-1244173310))) BETWEEN ((('505031083') NOT BETWEEN ('1555044855') AND (0.10248753658478116))) AND ('-1142305356'))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt1, t0, vt1, vt0; -- 0ms;
SELECT DISTINCT 'q WPB', ((rt1.c3)|(t0.c0)) COLLATE NOCASE, (+ (LIKELIHOOD(DISTINCT rt1.c4, 0.25895761239036275))) FROM rt1, vt0, vt1 WHERE ((~ (json_remove('-1754943077', '-1803618729'))));SELECT DISTINCT rt1.c3 FROM vt1;SELECT DISTINCT MIN(CAST(vt1.c0 AS INTEGER)), ((vt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c2)) COLLATE NOCASE COLLATE NOCASE, (~ ((~ (NULL)))) FROM t0, vt1, vt0, rt1 WHERE (CAST((('>(&lOA놛o') NOT BETWEEN (0.44506526842730354) AND (-1.442674487E9)) AS NUMERIC)) LIMIT 262133837 OFFSET -1559125416; -- 0ms;
SELECT DISTINCT (~ ((((rt1.c4, 0xffffffffd027bafb, rt1.c0))=((x'', -4.15638561E8, x''))))) FROM vt1, rt1, vt0 WHERE ((('100806179')>=(CAST(0.7068873839788713 AS REAL)))); -- 0ms;
SELECT CASE (t0.c0 IN ())  WHEN (((rt1.c1, vt1.c1, vt1.c0))>=((vt1.c2, vt0.c0, vt1.c0))) THEN (NOT (rt1.c1)) ELSE CAST(vt1.c0 AS BLOB) END FROM vt1, vt0, t0, rt1; -- 0ms;
SELECT ALL TRIM((+ (vt0.c0)), ((rt1.c0) NOT BETWEEN (vt0.c0) AND (x'332a'))) FROM t0 WHERE ((~ ((x'' IN ()))));SELECT DISTINCT (((rt1.c1)||(rt1.c3)) IN ()) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (CAST(rt1.c3 AS REAL) IN (TOTAL('-238524364'))), ((TOTAL(vt1.c0)) BETWEEN (((vt1.c2) BETWEEN (rt1.c1) AND (rt1.c3))) AND (vt1.c2)), (((x'', t0.c0, vt0.c0, vt1.c1, vt1.c1)) BETWEEN ((CASE t0.c0  WHEN rt1.c1 THEN '2016014583' END, ((rt1.c4)||(t0.c0)), rt1.c3 COLLATE BINARY, (vt0.c0 IN ()), rt1.c2)) AND ((((((t0.c0)OR(rt1.c3)))OR(rt1.c2)), (~ (vt1.c1)), ((((rt1.c1)OR(rt1.c3)))AND(rt1.c1)), (rt1.c2 IN (rt1.c0)), vt1.c0 COLLATE NOCASE))) FROM vt0, rt1, vt1;SELECT DISTINCT ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN vt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c4 END)<=(((rt1.c0)||(vt1.c0)))), MIN(CASE rt1.c3  WHEN vt1.c0 THEN t0.c0 END), (~ (NULL)) COLLATE BINARY FROM vt1, t0, vt0, rt1 WHERE ((+ (((x'') BETWEEN (x'') AND (0.6333303395725232))))) LIMIT -1584887404 OFFSET -1511404677; -- 0ms;
SELECT rt1.c1, (((t0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) COLLATE BINARY, FIRST_VALUE((((('188618232') ISNULL)) NOT NULL)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM rt1 WHERE ((((~ (NULL))) NOT BETWEEN ((NOT (NULL))) AND (x'')));SELECT (((0.6727566653541646, ((rt1.c4) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END))<(((- (rt1.c3)), rt1.c0, CAST(t0.c0 AS TEXT)))) FROM vt0, t0, vt1;SELECT ALL ROW_NUMBER() OVER () FROM t0, vt0, rt1 WHERE (CAST(((0x73e950a5)OR(NULL)) AS BLOB)); -- 0ms;
SELECT ALL (COUNT(*) IN ()), (((rt1.c4)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0))) COLLATE RTRIM, RANK() OVER () FROM vt0, rt1, vt1 WHERE (CAST(((((((((0xffffffffa50454c8)AND(x'c772')))OR('0.0')))OR(x'')))OR(x'')) AS REAL)); -- 0ms;
SELECT DISTINCT (((~ (vt1.c1))) IS FALSE) FROM vt0;SELECT ALL CAST(((t0.c0) NOT BETWEEN (rt1.c0) AND (vt1.c2)) AS TEXT) FROM vt0;SELECT ALL ((vt0.c0) NOTNULL) COLLATE NOCASE COLLATE NOCASE FROM vt0, t0, rt1, vt1 WHERE (((('씌V呥' IN (x'')))>(0.4103376854637205))) GROUP BY (((+ (rt1.c0))) NOT BETWEEN (((rt1.c3)*(rt1.c3))) AND (json_object(rt1.c0, vt1.c2, vt1.c0, rt1.c1))) HAVING TRIM(((vt1.c2)*(vt1.c0))); -- 0ms;
SELECT ALL (((((((('')AND(((((((((rt1.c1)AND(vt1.c2)))AND(rt1.c4)))OR(t0.c0)))OR(rt1.c0)))))OR(((vt0.c0) BETWEEN (rt1.c3) AND (vt1.c2)))))OR(vt1.c2)))AND(((t0.c0) ISNULL))) FROM vt1, t0, rt1, vt0 WHERE (CASE WHEN (('VNS^js\/|') IS TRUE) THEN (+ ('')) END) LIMIT 9223372036854775807 OFFSET -961402643; -- 0ms;
SELECT DISTINCT CAST(((rt1.c2)>>('1125163856')) AS INTEGER), COUNT(*) OVER (), (vt0.c0 IN (((NULL)IS(t0.c0)), rt1.c1)) FROM vt1, rt1, t0, vt0 WHERE ((~ ((NOT (0.3481576470069371))))); -- 0ms;
SELECT DISTINCT ((rt1.c0)|(((((vt0.c0)OR(rt1.c3)))OR(rt1.c3)))), ((0xffffffffc7517fc3)/(((vt1.c1) IS FALSE))), (NOT (LOWER(rt1.c4))) FROM vt0, t0, rt1;SELECT (((((rt1.c2))!=((rt1.c3))))<<(MAX(vt1.c1))) FROM t0, rt1 WHERE (((((((0.22079168642485925)OR(0.9845192058327752)))AND(NULL))) BETWEEN ((('0.4204517523339746') NOT NULL)) AND (((((((((((((NULL)OR(0.8167949979980613)))OR(0X492580e6)))AND(x'')))AND(NULL)))OR(0.7296283788272511)))OR(x'')))));SELECT ALL LEAD(((((t0.c0)IS NOT(rt1.c3)))IS((~ (0x295121fd)))), (~ (CAST(t0.c0 AS INTEGER))), CAST((NOT (vt1.c0)) AS BLOB)) OVER () FROM rt1, vt1, t0 WHERE (((((0.19506506084514397)AND('')))LIKE((((((((('')OR(NULL)))OR(0.5160403665218383)))OR(0.857628708952733)))OR(x''))))) ORDER BY ((((vt1.c2)AND((rt1.c4 IN (vt1.c0)))))AND((rt1.c1 IN ())));SELECT DISTINCT ((vt0.c0) NOT BETWEEN (TOTAL(vt0.c0)) AND (rt1.c3 COLLATE NOCASE)) FROM t0, rt1, vt1, vt0 WHERE (CASE (((''))<=((0.3795751455257568)))  WHEN (x'9ba0' IN ()) THEN (+ (-2.59240968E8)) WHEN 0X4310a350 COLLATE RTRIM THEN 0.9855199011233579 COLLATE BINARY WHEN ((NULL) ISNULL) THEN (('-1428773677') BETWEEN ('') AND ('존E')) END) LIMIT -978848790; -- 0ms;
SELECT ALL LAG(((((NULL)OR(((rt1.c2) BETWEEN (rt1.c3) AND (vt0.c0)))))OR(CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)), vt0.c0, rt1.c3) OVER () FROM vt0, rt1 WHERE (((((x'')IS NOT(0.5086992878815348))) IS TRUE)); -- 1ms;
SELECT DISTINCT vt1.c0 FROM vt0, rt1, vt1, t0 GROUP BY (CAST(x'' AS BLOB) IN ()), (((NOT (t0.c0)))GLOB(CASE WHEN vt1.c1 THEN vt1.c1 END)), rt1.c1 HAVING ((AVG(t0.c0)) NOT BETWEEN (GROUP_CONCAT(t0.c0)) AND ((vt1.c0 IN (vt1.c1, rt1.c2)))); -- 0ms;
SELECT ALL ((((vt1.c0)>(vt1.c0))) IS TRUE) FROM vt0, t0, rt1, vt1 WHERE (((NULL COLLATE RTRIM)>(((0xffffffff9abb267d) BETWEEN (0.35048376209085286) AND (NULL))))) LIMIT -1723044150; -- 0ms;
SELECT DISTINCT COUNT(NULL) OVER () FROM t0, vt0, vt1, rt1 WHERE (LTRIM(((-2.46925803E8)!=(x'')), 'ꝴL\o' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT CASE -1.3022862E7  WHEN TRIM(DISTINCT NULL, x'') THEN x'' ELSE TOTAL(rt1.c0) END FROM rt1 UNION SELECT (((((rt1.c4, rt1.c3, vt1.c0))!=((rt1.c1, rt1.c2, rt1.c4))))==(CASE WHEN rt1.c4 THEN rt1.c4 ELSE vt1.c2 END)) FROM rt1;SELECT ((((~ (rt1.c4))))<>((((rt1.c1) IS TRUE)))) FROM rt1 ORDER BY ((CAST(NULL AS BLOB)) NOT NULL)  NULLS LAST; -- 1ms;
SELECT DISTINCT (((vt1.c2) NOT BETWEEN (rt1.c3) AND (t0.c0)) IN (CAST(rt1.c0 AS BLOB))), (NOT ((((rt1.c0))<>((vt0.c0))))), LAG((((t0.c0 IN ())) IS TRUE), CAST(CASE t0.c0  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS NUMERIC), (((t0.c0)) NOT BETWEEN (('ca')) AND ((json_array(t0.c0, t0.c0, t0.c0, t0.c0))))) OVER () FROM t0 WHERE (CAST((+ (438103389)) AS NUMERIC));SELECT t0.c0 FROM rt1 LIMIT -158403375;SELECT (NOT ((((vt1.c2)) BETWEEN ((0.4868933496030813)) AND ((rt1.c0))))) FROM vt0 LIMIT -781975691 OFFSET 1513580308;SELECT ALL rt1.c3 FROM vt0;SELECT ALL COALESCE((((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), vt1.c2) FROM rt1;SELECT ALL rt1.c0 COLLATE BINARY FROM vt1 WHERE ((((ABS(DISTINCT 0xffffffffe17078a2), ((('z''F'))!=((0Xffffffffeb062ca7))), CAST(-1162585847 AS BLOB)))<=(((0.9332653722028091 IN ()), CASE 0.4839088096157327  WHEN -238524364 THEN 0.360617292819127 END, ((NULL) ISNULL)))));SELECT ((((((rt1.c2)/(vt1.c1)))OR(CAST(t0.c0 AS REAL))))AND((rt1.c0 IN ()))) FROM rt1, vt0, vt1, t0 GROUP BY ((rt1.c4 COLLATE RTRIM) NOT BETWEEN ((rt1.c4 IN ())) AND (CASE WHEN rt1.c2 THEN rt1.c3 END)), ((NULLIF(vt1.c1, rt1.c2))=(LIKELY(rt1.c2))), (+ (vt1.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c4 AS INTEGER)) BETWEEN (rt1.c3 COLLATE RTRIM) AND (rt1.c1 COLLATE RTRIM)) FROM rt1 GROUP BY x''; -- 0ms;
SELECT SUM(((((((((rt1.c3)OR(t0.c0)))AND(rt1.c4)))AND(vt1.c0)))AND(vt1.c0))), ((rt1.c2) BETWEEN (('1172136447' IN ())) AND (vt0.c0)), '-1714357977' FROM rt1, vt1 WHERE (((CAST('1606275018' AS INTEGER)) NOT BETWEEN ((((('!')OR(x'')))OR(x''))) AND ((x'' IN ())))) ORDER BY JULIANDAY(((vt1.c1)+(rt1.c4)), x'', CAST(vt1.c0 AS INTEGER))  NULLS LAST LIMIT 1932954200;SELECT DISTINCT ((CAST(rt1.c2 AS INTEGER)) BETWEEN (CAST(t0.c0 AS BLOB)) AND (((rt1.c4) NOTNULL))), ((- (vt1.c0)) IN ()), CASE NULL  WHEN CAST(rt1.c4 AS BLOB) THEN ((rt1.c0) IS TRUE) END FROM t0, rt1, vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c2))>=((vt0.c0)))) BETWEEN ((vt1.c2 IN ())) AND (((rt1.c4)<<(vt1.c0)))), CASE WHEN (NOT (vt1.c0)) THEN NULL END, ((((('290129823')) NOT BETWEEN ((vt1.c2)) AND ((rt1.c3)))) NOTNULL) FROM vt1, rt1, t0 LIMIT -1495223308 OFFSET -1422569857;SELECT ALL rt1.c1 COLLATE BINARY, ((((((((CAST(rt1.c0 AS INTEGER))AND(((((rt1.c2)AND(rt1.c1)))OR(vt1.c0)))))OR(((vt1.c1)>=(vt1.c2)))))OR(((rt1.c4)>=(vt0.c0)))))OR((rt1.c1 IN (t0.c0)))), (((rt1.c3)) BETWEEN ((((((((((((((t0.c0)AND(vt1.c2)))OR(rt1.c4)))OR(rt1.c0)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c4)))) AND ((MIN(rt1.c2)))) FROM t0 WHERE ((NOT (NULL)) COLLATE NOCASE);SELECT ALL (((vt1.c0, rt1.c2, rt1.c0)) BETWEEN (((- (rt1.c4)), CAST(0.8142179491085079 AS REAL), TOTAL(rt1.c0))) AND ((CASE WHEN rt1.c3 THEN rt1.c2 END, rt1.c4, SUM(x'')))), (((vt1.c1)) BETWEEN ((CAST(rt1.c4 AS TEXT))) AND ((rt1.c1))), TRIM(NULL COLLATE BINARY) FROM t0;SELECT DISTINCT COUNT(*) OVER ( ROWS BETWEEN ((CAST(rt1.c0 AS REAL))GLOB(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c1 END)) PRECEDING AND ((t0.c0)=(vt0.c0)) COLLATE BINARY PRECEDING) FROM rt1, vt0, vt1, t0 GROUP BY (((- (vt0.c0)))/((rt1.c1 IN ()))); -- 0ms;
SELECT ALL ((((((vt1.c0)OR(rt1.c3)))AND(vt0.c0)))GLOB(((vt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))) FROM t0, vt0 WHERE ('U^') GROUP BY 0.3376134136657425 HAVING CAST(TYPEOF(vt1.c1) AS REAL) ORDER BY (((vt1.c2 IN ()))AND(((((rt1.c1)AND(vt1.c1)))AND(vt0.c0)))) DESC;SELECT SUM(((((vt1.c0)AND(915339071)))AND(rt1.c3))), SUM(0.3376134136657425 COLLATE NOCASE), (((((((((t0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(vt0.c0)))OR(t0.c0)) IN ()) FROM t0, rt1, vt1 WHERE ((((NULL, 0.6086411957160239, x'', -6.90169436E8, 2.110502103E9)) BETWEEN ((NULL COLLATE BINARY, (x'71f6' IN ('', 0.6446919154446881)), ((((((((NULL)OR(0.929592729474329)))OR(x'')))OR(x'')))OR('')), LTRIM(0.7950172153608578, NULL), (~ (0.5535461619503251)))) AND ((CAST(x'' AS INTEGER), LAST_INSERT_ROWID(), CAST(0.19938948105352683 AS TEXT), NULL, (NOT (x'3f51')))))) GROUP BY ROUND(((rt1.c4)&(vt1.c1)), NULL); -- 0ms;
SELECT DISTINCT CASE vt1.c2  WHEN rt1.c4 THEN (+ (rt1.c3)) ELSE (+ (vt0.c0)) END, ((rt1.c0 IN ()) IN ()), 'P' FROM rt1, vt0, vt1, t0 LIMIT 145183895 OFFSET -1700001243; -- 0ms;
SELECT DISTINCT (((((rt1.c1)AND(rt1.c2)))OR(vt0.c0)) IN ('<Be', vt1.c1 COLLATE BINARY)), TOTAL(MIN(t0.c0, rt1.c1)), (- (((vt1.c1) NOT BETWEEN (t0.c0) AND (rt1.c3)))) FROM rt1, t0, vt0, vt1 WHERE (((((('593811776')<<(x'88ec')), CAST(0.8216488875244616 AS NUMERIC), (('0.5819227082685886') IS TRUE)))<((LIKELY(DISTINCT x''), ((x'')IS(x'2351')), '-484529778')))); -- 0ms;
SELECT ALL SUM(NULL) FROM vt1, t0, rt1; -- 0ms;
SELECT DISTINCT CAST((((rt1.c1, rt1.c4, t0.c0))<((rt1.c3, vt0.c0, vt1.c0))) AS REAL) FROM vt1, vt0, rt1 GROUP BY ((((((((((((((rt1.c1) IS TRUE))OR(vt1.c1)))AND((- (vt0.c0)))))AND(((vt1.c1) BETWEEN (t0.c0) AND (rt1.c4)))))AND(((vt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c4)))))OR(((((rt1.c2)OR(vt1.c1)))OR(vt1.c1)))))AND(rt1.c4 COLLATE RTRIM)), ((0.5461367184282098) NOT NULL) COLLATE BINARY, ((((((rt1.c3)&(t0.c0)))OR(((vt0.c0)<>(rt1.c3)))))OR((((vt1.c2))>((vt1.c1))))), ((((vt0.c0 IN (rt1.c3, rt1.c0))))<((x''))), (((rt1.c1, rt1.c4, 'iq', rt1.c3, vt1.c1)) BETWEEN ((UPPER(DISTINCT rt1.c0), (vt1.c2 IN ()), (NOT (rt1.c1)), (+ (rt1.c0)), UNLIKELY(vt1.c0))) AND ((vt1.c2, (vt1.c1 IN ()), ((rt1.c1) BETWEEN (x'') AND (vt1.c2)), ((rt1.c3) NOT NULL), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1))))) HAVING AVG('' COLLATE RTRIM);SELECT COALESCE((((NULL, NULL, vt1.c0))>((vt1.c0, rt1.c3, t0.c0))), ((vt0.c0)AND(rt1.c4)), (((vt1.c2, vt1.c1, 0.4337605767918439))<=((vt1.c1, rt1.c2, vt1.c0))), rt1.c0), GROUP_CONCAT(CASE vt1.c1  WHEN vt1.c2 THEN rt1.c0 ELSE rt1.c1 END) OVER (), CASE rt1.c4 COLLATE RTRIM  WHEN CAST(rt1.c0 AS REAL) THEN (((vt1.c0)) BETWEEN ((vt1.c2)) AND ((rt1.c3))) END FROM vt1 GROUP BY (((((rt1.c2))>=((rt1.c4)))) BETWEEN (t0.c0 COLLATE RTRIM) AND (CASE WHEN vt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) HAVING CASE WHEN '' THEN (rt1.c3 IN ()) END;SELECT DISTINCT ((rt1.c2)+((t0.c0 IN ()))) FROM rt1, t0 WHERE ((NOT ((NOT (NULL))))); -- 0ms;
SELECT CAST(((rt1.c3) IS TRUE) AS TEXT), ((((((((LIKE(vt1.c0, rt1.c0, 'U'))OR(CASE WHEN vt1.c1 THEN rt1.c2 ELSE rt1.c1 END)))AND(x'9e25')))AND(IFNULL(rt1.c1, vt1.c2))))AND(CASE WHEN vt0.c0 THEN rt1.c2 END)), COUNT(((rt1.c0) NOTNULL)) OVER () FROM vt1 WHERE (CAST(((((NULL)AND(0.5314831695166486)))OR(-1.327322331E9)) AS BLOB));SELECT DISTINCT COUNT((vt1.c1 IN (rt1.c1))) OVER () FROM rt1, t0, vt0, vt1 WHERE ((((((0.4153979487291912 IN (0x3a5ed105)))AND(CAST('-1412660826' AS INTEGER))))OR(CAST('' AS TEXT)))); -- 1ms;
SELECT NULL, (- (((rt1.c2)>(NULL)))), ((('') IS FALSE) IN (((rt1.c3)/(rt1.c0)))) FROM vt0, rt1, vt1, t0 WHERE (((((0xffffffffc43f74ad) NOT BETWEEN (NULL) AND (''))) NOT NULL)); -- 0ms;
SELECT GROUP_CONCAT(rt1.c0) OVER (), vt0.c0 COLLATE RTRIM, LAST_VALUE(((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))OR((((t0.c0, vt1.c2, vt0.c0)) BETWEEN ((vt1.c2, vt1.c1, vt1.c1)) AND ((vt1.c0, '0.18069247965834068', vt1.c1))))))AND((((('')OR(vt1.c1)))OR(t0.c0))))) OVER () FROM vt0, t0, vt1;