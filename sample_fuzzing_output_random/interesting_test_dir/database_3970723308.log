-- Time: 2024/06/07 09:16:14
-- Database: database8
-- Database version: 3.40.0
-- seed value: 3970723308
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
REINDEX  vt0; -- 0ms;
PRAGMA main.cache_size; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='' WHERE (((0.669631178703718)) BETWEEN (((((x'', vt0.c0, vt0.c0))<(('-1880867024', NULL, vt0.c0))))) AND ((((vt0.c0) IS TRUE)))); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '14444'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1880867024,3');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
END; -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
PRAGMA recursive_triggers; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.19792663157742563); -- 1ms;
PRAGMA shrink_memory; -- 0ms;
PRAGMA application_id = -6276744040152079991; -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (0.2646611659323469), ('-1880867024'), (-1880867024); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0xffffffff8fe43f30) WHERE ((((((vt0.c0) NOT NULL))AND('')))AND((~ (vt0.c0)))); -- 1ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('1240479936'); -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (1.240479936E9), (0X7fffffffffffffff), (x'f025'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1629507552'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1686990149,10');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET c0='f^j', c0=x''; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.05825357872086456), (NULL), (2090734933); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (2.090734933E9); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL), (0.9817034215183363), ('342893446'); -- 1ms;
REINDEX BINARY; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('558544442'); -- 0ms;
PRAGMA soft_heap_limit = 1356850721436406105; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='1bn}X뀠R'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA default_cache_size = -108781040; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE vt0 SET (c0)=(x'63d6') WHERE ((vt0.c0)*(((vt0.c0) IS FALSE))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.7023293485222559); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
DELETE FROM vt0; -- 1ms;
UPDATE vt0 SET c0='1959212348'; -- 0ms;
UPDATE vt0 SET (c0, c0)=(NULL, 0xffffffffbaeb0907); -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(NULL, 0.6826239996430029) WHERE vt0.c0; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.8299751497692212, c0='0.6826239996430029'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.19792663157742563; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'3bbb'; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.4709076130750399); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43436'); -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 640688515); -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE ((vt0.c0 IN (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 1ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (NULL), (NULL), ('0.6826239996430029'); -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (-0.0), (0.7949703669625936); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL))|((((NULL, 0.2646611659323469, x'3fb4'))>=(('eq', '5', x''))))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='AS' WHERE (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (TIME(vt0.c0, vt0.c0, vt0.c0, -1.0878104E8, vt0.c0)) AND ('!Mrn4|p')); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=x'61f7'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1130897584,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE vt0 SET c0=0x5eb25f1c6553d8b5, c0=NULL, c0='6823620960983439541'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1200505102,9');\n; -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
PRAGMA incremental_vacuum(490383131); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0=x'071e', c0=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('896675026'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.8245302587791892); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'196d'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-351511880 -719670206 noskipscan'); -- 0ms;
PRAGMA temp.mmap_size = -2320251794327629274; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('994821767'), (NULL), ('2090734933'), (x''), (0.9333513293318491); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.5351291193404729), (0.051515909062376575), (NULL), (NULL), (NULL); -- 0ms;
UPDATE OR FAIL vt0 SET c0=''; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((vt0.c0)>(vt0.c0))) BETWEEN (HEX(DISTINCT '175848850')) AND (vt0.c0)), (- (LOWER(DISTINCT vt0.c0))), ((AVG(vt0.c0)) NOT BETWEEN (((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CAST('2090734933' AS BLOB))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)*(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (json_array_length(vt0.c0, vt0.c0))) FROM vt0 WHERE ((((('')<=('')))LIKE((('F?l>*\}+d') NOT BETWEEN (x'') AND (NULL)))));SELECT DISTINCT (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((LIKELIHOOD(x'', 0.6767146130081413) IN ())) ORDER BY ((((((vt0.c0)>(vt0.c0)))OR(0.5388009154429921)))AND((NOT (vt0.c0)))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((x'' COLLATE RTRIM)+(IFNULL(vt0.c0, vt0.c0))), (((((vt0.c0)>>(vt0.c0)), vt0.c0 COLLATE NOCASE, TOTAL_CHANGES()))>((-1.629507552E9, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((NULL, vt0.c0, vt0.c0))<=((vt0.c0, 0.14426274723061838, vt0.c0)))))) FROM vt0; -- 0ms;
SELECT DISTINCT -1.880867024E9 FROM vt0 WHERE ((+ ((('[S{䫬O y')<(0.9382577892521021))))) ORDER BY NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, LIKELIHOOD(NULL, 0.6401868307197021))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) DESC, (NOT (DATETIME(vt0.c0, vt0.c0, vt0.c0))); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (((NULL COLLATE NOCASE) ISNULL)); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL))|(((vt0.c0)<<(vt0.c0)))) FROM vt0 WHERE (((('X}k Fa!')>=(0.9134714464737801)) IN ())) ORDER BY ((vt0.c0) NOT NULL); -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c0)) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((((vt0.c0))==((vt0.c0))) AS INTEGER) FROM vt0 LIMIT -654558795 OFFSET 6823620960983439541; -- 0ms;
SELECT ALL (+ (vt0.c0 COLLATE NOCASE)), (((('ErE')&(vt0.c0)))&(((vt0.c0)OR(vt0.c0)))), UPPER(((vt0.c0)=(vt0.c0))) FROM vt0 WHERE ('as'); -- 0ms;
SELECT SQLITE_SOURCE_ID() FROM vt0 WHERE (((((('558544442', 't4ZcE', '#D')) NOT BETWEEN ((NULL, NULL, '551975729')) AND ((0.11774230330798585, '-719670206', '睈'))))&(((2.090734933E9)LIKE(NULL))))) ORDER BY (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 0ms;
SELECT DISTINCT (((~ (vt0.c0)))IS((((vt0.c0))<=((0.12074158119485656))))) FROM vt0 WHERE (CAST(((((NULL)AND(x'8446')))AND(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT (((((((((('TRUE') NOT BETWEEN (vt0.c0) AND ('-231256882')))OR(PRINTF(vt0.c0))))AND(UPPER(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE ((('')+(((NULL)*(NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE)) NOT NULL) FROM vt0; -- 0ms;
SELECT LAG(((((vt0.c0)IS NOT(vt0.c0))) IS TRUE), LIKELIHOOD(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.7543142925809726), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((vt0.c0 IN ())))) OVER () FROM vt0 WHERE ((((-471199995 IN ())) IS TRUE)); -- 0ms;
SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)>=(vt0.c0)), (~ (vt0.c0))))>=((GROUP_CONCAT(vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), COUNT(*)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((NULL)!=(CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE ((((UNICODE(x'28a0ec15')))<=(((~ (0.7705102820729112)))))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN '' END, CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)  NULLS LAST; -- 0ms;
SELECT CAST(vt0.c0 COLLATE BINARY AS TEXT), 0.03452089506110512, (vt0.c0 COLLATE BINARY IN (((vt0.c0)==(vt0.c0)))) FROM vt0 WHERE (CAST(((((0x199734b8)OR(-1899279636)))OR(x'd0feb39c')) AS REAL)); -- 1ms;
SELECT ((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))OR(CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE ((NOT (((NULL)IS NOT(0.5706838435332336))))); -- 0ms;
SELECT ALL NULL, ((CAST(vt0.c0 AS TEXT))>(CASE WHEN vt0.c0 THEN vt0.c0 END)), 0.4760641092355996 FROM vt0; -- 0ms;
SELECT ALL (- ((~ (vt0.c0)))), (((- (vt0.c0)))==((~ (vt0.c0)))), ((COALESCE(vt0.c0, vt0.c0))OR(TOTAL(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0))<=((x'')))) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) ISNULL), ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (NULL COLLATE BINARY)), COUNT(CAST(vt0.c0 AS INTEGER)) OVER () FROM vt0 WHERE ((+ (0xbca3c65))) ORDER BY ((((((vt0.c0)<(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)AND(vt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ((((((((((((((((x'1e62')AND(0.5355769578689966)))AND(-329231338)))OR('-1544720609')))OR(NULL)))OR('')))OR('yUxoR{}}bo'))))!=((((x'19cd') BETWEEN (0.16425334245137857) AND (x'941b')))))); -- 0ms;
SELECT DISTINCT ((((MAX(vt0.c0))AND(x'')))OR(((vt0.c0)LIKE(vt0.c0)))), ((((vt0.c0)AND(vt0.c0))) ISNULL), 0x14702386 FROM vt0 WHERE ((((- (1.7584885E8)))!=(((('')) NOT BETWEEN ((NULL)) AND ((NULL)))))) ORDER BY ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS TEXT)))<((CAST(vt0.c0 AS TEXT), COUNT(vt0.c0), load_extension(vt0.c0)))) FROM vt0 WHERE ((+ (-351511880))) ORDER BY vt0.c0 DESC  NULLS FIRST; -- 0ms;
SELECT ALL (((('/07l嵁I')OR(vt0.c0)))OR((vt0.c0 IN ()))) FROM vt0 WHERE (((((((NULL)*(0.6982907101351067)))OR((((0.8993762298126549, x'', 0.9650654706623756)) NOT BETWEEN ((0Xffffffffffc05bb6, '0.9333513293318491', '551975729')) AND ((0.5389576964084888, 429339832, 0.9418918228208675))))))AND((- (0.3862845188055317))))); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(CASE WHEN vt0.c0 THEN vt0.c0 END)), COUNT(*), ((CAST(vt0.c0 AS BLOB))&(-1200505102)) FROM vt0 LIMIT 490383131 OFFSET 765236787; -- 0ms;
SELECT DISTINCT CASE WHEN (7.65236787E8 IN ()) THEN ((vt0.c0) IS FALSE) WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN CAST(0.553559680883502 AS TEXT) THEN MIN(vt0.c0) END FROM vt0 WHERE (((STRFTIME('3<', -2073207487, '', '0.11774230330798585', 0.6826239996430029))|((('')>(''))))) LIMIT 984392110; -- 0ms;
SELECT DISTINCT CASE CAST(NULL AS REAL)  WHEN vt0.c0 COLLATE RTRIM THEN LENGTH(vt0.c0) WHEN (((0.7264427989678691, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '|/Z~wmonths吖')) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0))<((vt0.c0))) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)=(vt0.c0)) ELSE CASE vt0.c0  WHEN NULL THEN vt0.c0 END END FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)*(vt0.c0)) IN ()) FROM vt0 WHERE ((~ ((('1959212348')OR('-336453085'))))) ORDER BY LOWER(DISTINCT vt0.c0) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT load_extension(vt0.c0) COLLATE RTRIM FROM vt0;SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((0X7c9e1555, (vt0.c0 IN (vt0.c0)), ((vt0.c0)OR(vt0.c0)))) AND ((((vt0.c0)|(vt0.c0)), COUNT(vt0.c0), ((vt0.c0)*(vt0.c0))))), ((vt0.c0)<=(1777480701)) COLLATE RTRIM, ((vt0.c0 COLLATE NOCASE)|(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((+ (CAST(x'' AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(x'')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0)))), ((vt0.c0) IS TRUE) COLLATE BINARY, CAST(vt0.c0 AS BLOB) COLLATE BINARY FROM vt0 WHERE ((CASE NULL  WHEN 0.5946034391847834 THEN x'' END IN (-1.629507552E9, CASE x'aed0'  WHEN 0.697687579580181 THEN 0.9311098733941118 END))) GROUP BY (((vt0.c0, vt0.c0, 'p')) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0) IS TRUE), ((vt0.c0)>=(vt0.c0)))) AND (((vt0.c0 IN (vt0.c0)), vt0.c0 COLLATE RTRIM, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) HAVING (((vt0.c0)/(vt0.c0)) IN (((vt0.c0)GLOB(vt0.c0)))); -- 1ms;
SELECT (((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), LAG(CASE (- (vt0.c0))  WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, ((((vt0.c0)>>(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END)), (NULL IN ())) OVER (), ((- (vt0.c0)) IN ()) FROM vt0 WHERE (((CASE '6823620960983439541'  WHEN x'' THEN x'845e' END) NOTNULL)); -- 0ms;
SELECT DISTINCT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))==((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((QUOTE(vt0.c0)) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((((vt0.c0, '-1686990149', vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))), ((vt0.c0)<>(((vt0.c0)-(2090734933)))), (~ (((vt0.c0)!=(vt0.c0)))) FROM vt0 WHERE (((((x'')/(0.32352790314492574))) NOT NULL)); -- 0ms;
SELECT x'e767', COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), ((0.8065351105602805)|(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((((~ (0.03452089506110512)))||(((x'd4ff')==(NULL))))); -- 0ms;
SELECT RANK() OVER ( ORDER BY NULL ASC  NULLS LAST) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((((1163686728)&(NULL)))) AND ((CAST(-4170826.0 AS INTEGER))))); -- 0ms;
SELECT ALL CASE WHEN GROUP_CONCAT(vt0.c0) THEN ((vt0.c0)/(vt0.c0)) END, LIKE(vt0.c0, vt0.c0, 'G') COLLATE NOCASE, ((MAX('-336453085')) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN NULL THEN vt0.c0 END) NOT BETWEEN (COUNT(*)) AND (((vt0.c0) IS FALSE))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN (vt0.c0)) AS REAL), (((CASE WHEN vt0.c0 THEN vt0.c0 END))<((MIN(vt0.c0)))), (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END))) FROM vt0 WHERE (x'8adb'); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE (0xffffffffe6c17abd); -- 0ms;
SELECT DISTINCT COUNT('0.7705102820729112') OVER ( ROWS  CURRENT ROW) FROM vt0 WHERE (((CAST(NULL AS BLOB)) IS TRUE)) LIMIT -108781040 OFFSET -1384941383; -- 0ms;
SELECT DISTINCT (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (CASE CASE WHEN NULL THEN 0.17833680760563275 ELSE '1900940383' END  WHEN CASE '2<'  WHEN NULL THEN x'' END THEN x'' ELSE CASE 'Z5fB'  WHEN x'' THEN 0.6659096800764671 END END); -- 0ms;
SELECT (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (CAST(vt0.c0 AS NUMERIC) IN ()), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL) FROM vt0 WHERE (((('')) BETWEEN ((((((x'')OR('Q{')))AND(NULL)))) AND ((('0.8299751497692212' IN ()))))) ORDER BY CAST(NULLIF(-1544720609, vt0.c0) AS NUMERIC); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT CASE (~ (vt0.c0))  WHEN NULLIF(vt0.c0, 515896390) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))<=((vt0.c0))) WHEN NULL COLLATE NOCASE THEN ((vt0.c0)<(vt0.c0)) END, CAST(((vt0.c0)*('')) AS BLOB), vt0.c0, (((-547562580 IN ()))/(((vt0.c0)IS NOT(vt0.c0)))), (~ ((((vt0.c0))<>(('-336453085'))))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0)*(vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffffa65b04a6 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) FROM vt0; -- 0ms;
SELECT TOTAL(((vt0.c0) IS FALSE) COLLATE BINARY) OVER (), ((((vt0.c0) ISNULL))IS(vt0.c0)), (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 GROUP BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) HAVING MIN(((vt0.c0) NOT NULL)); -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM)>>(vt0.c0 COLLATE RTRIM)), (((((((((((((vt0.c0 IN ()))OR(MIN(vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))))OR((+ (vt0.c0)))))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)|(vt0.c0)))), json_object(((vt0.c0) IS TRUE), LOWER(vt0.c0)) FROM vt0 WHERE (json_remove(((x'')+(x'')), CAST(NULL AS BLOB))) LIMIT 1 OFFSET -1544720609;SELECT vt0.c0 COLLATE BINARY FROM vt0 LIMIT 1163686728 OFFSET 1289274627; -- 0ms;
SELECT DISTINCT RANK() OVER ( PARTITION BY vt0.c0, ((vt0.c0 COLLATE NOCASE)/((vt0.c0 IN ()))), vt0.c0, ((((((x'')OR(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c0)||(NULL))))), (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((vt0.c0))), ((((vt0.c0) NOT NULL)) NOT NULL), (((~ (0.28402787639198834)))%(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))), ((((vt0.c0)>(vt0.c0)))>=(CAST(vt0.c0 AS TEXT))) FROM vt0 GROUP BY ((~ (vt0.c0)) IN (CAST(vt0.c0 AS REAL))) HAVING (((vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)))) AND (((+ (vt0.c0))))); -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT DISTINCT x'' FROM vt0 LIMIT -1605425714 OFFSET -1605425714; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL x'c568063e' FROM vt0; -- 1ms;
SELECT DISTINCT (((vt0.c0))>=((TIME(x'', vt0.c0, vt0.c0)))), ((x'' IN ()) IN ()), (((vt0.c0 IN ()))AND(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((('175848850')<<(CASE WHEN 0xffffffffebf22223 THEN x'' END))); -- 0ms;
SELECT ALL ((ABS(DISTINCT vt0.c0))|(((((vt0.c0)AND('-1976279650')))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (- (x'')) FROM vt0 WHERE ((NULL IN (((-1186446012) ISNULL), ((x'')IS(0xffffffffe9c0354c))))); -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (((('' IN ()))IS NOT(LIKE('', x'', 'U')))); -- 0ms;
SELECT ALL (CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) NOTNULL), vt0.c0 COLLATE RTRIM)), MAX(CAST(vt0.c0 AS INTEGER)), ((((vt0.c0)<(vt0.c0)))%((+ (vt0.c0)))) FROM vt0 ORDER BY ((TRIM(vt0.c0))+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC LIMIT -1880867024 OFFSET 1760175332; -- 0ms;
SELECT DISTINCT ((MAX(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (MIN(vt0.c0))) FROM vt0 WHERE (((NULL)<<((((('0.8299751497692212')OR('-1200505102')))AND(x'd9c0'))))) GROUP BY vt0.c0 HAVING TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END); -- 0ms;
SELECT DISTINCT ((((vt0.c0)-(vt0.c0)))&(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (CASE CASE '_t'  WHEN x'' THEN 0.4903500381809357 END  WHEN CAST(NULL AS NUMERIC) THEN NULL ELSE (('')-('	H	''[rLꜛ3')) END); -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((vt0.c0 IN (vt0.c0, 0.4666272620035158)))IS NOT((((vt0.c0))=((vt0.c0))))), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>(((((vt0.c0)AND(vt0.c0)))AND(0.41992881347551514)))) FROM vt0 WHERE (CASE WHEN ((0.37334129049667486)>=(NULL)) THEN CASE WHEN NULL THEN '-351511880' ELSE '-231256882' END END); -- 1ms;
SELECT DISTINCT ((((vt0.c0)GLOB(vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (SUM(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT QUOTE(vt0.c0) COLLATE RTRIM FROM vt0 WHERE ((NULL IN ()) COLLATE RTRIM); -- 0ms;
SELECT ((NULL)*(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (CAST((((0.9418918228208675, x'', NULL))>=((0.2451373305832999, '', NULL))) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL) COLLATE NOCASE FROM vt0 WHERE ('k\rLN'); -- 0ms;
SELECT DISTINCT ((((vt0.c0)GLOB(vt0.c0)))>((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE ((('' IN ()) IN ())) GROUP BY ((ABS(vt0.c0))AND((vt0.c0 IN ()))) HAVING (- (CASE WHEN vt0.c0 THEN vt0.c0 END));SELECT DISTINCT (NOT (CAST('TJ' AS BLOB))), NTILE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7281851707006147 ELSE vt0.c0 END COLLATE RTRIM) OVER ( ORDER BY ((((vt0.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (vt0.c0)) DESC), NTILE((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) OVER (), (((vt0.c0)) BETWEEN ((IFNULL(vt0.c0, vt0.c0))) AND (((vt0.c0 IN ())))), NTH_VALUE(NULL, ((vt0.c0)>(((vt0.c0)>=(x''))))) OVER () FROM vt0 LIMIT 1289274627;SELECT ALL 0.5563840944201828, COALESCE(vt0.c0, vt0.c0) COLLATE NOCASE, (~ (((vt0.c0)>>(vt0.c0)))) FROM vt0 GROUP BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, 0.4709076130750399))>=((vt0.c0, vt0.c0, vt0.c0))))), ((((+ (1289274627))))>=((CASE WHEN vt0.c0 THEN vt0.c0 END))), vt0.c0; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((- ('' COLLATE NOCASE))) LIMIT 551975729; -- 0ms;
SELECT ALL 0.409204077316358 FROM vt0; -- 0ms;
SELECT RANK() OVER () FROM vt0; -- 0ms;
SELECT (~ (CASE WHEN vt0.c0 THEN vt0.c0 END)), TYPEOF(CAST(vt0.c0 AS TEXT)), CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0) IS FALSE) THEN COUNT(vt0.c0) END FROM vt0 WHERE (IFNULL((((-351511880, NULL, '-1186446012'))==((0.25852587522047576, 's獈', -471199995))), 0.5506431486206421)); -- 0ms;
SELECT CAST(((vt0.c0)<>(0.41286556851306977)) AS NUMERIC), (('-2077572117') BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))), (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '?7e㔼o-+' END) IS TRUE); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_USED(((vt0.c0)-(vt0.c0))), ((GROUP_CONCAT(vt0.c0)) BETWEEN (((vt0.c0)+(vt0.c0))) AND (((vt0.c0)>=(vt0.c0)))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE, CHANGES(), CAST(((x'') NOTNULL) AS TEXT) FROM vt0 GROUP BY 0.0544789096607976, -1503984474, vt0.c0 HAVING (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((IFNULL(vt0.c0, vt0.c0))));SELECT TRIM(DISTINCT vt0.c0) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( RANGE  CURRENT ROW) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE RTRIM AS NUMERIC) FROM vt0 WHERE (CAST((((('-1520562478')OR('6|-둂pib?p')))AND(0x27209ae9)) AS REAL)); -- 0ms;
SELECT COUNT(CAST(vt0.c0 AS INTEGER)) OVER ( ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)IS(vt0.c0)))), (((vt0.c0 IN ()))<(UNLIKELY(DISTINCT vt0.c0)))) FROM vt0 WHERE (((DATE('376675330', x'3314e595', ''))||(((NULL) ISNULL)))); -- 1ms;
SELECT ALL (((vt0.c0 IN (vt0.c0, NULL)))|(((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))), (SQLITE_VERSION() IN (CAST(vt0.c0 AS TEXT), ((vt0.c0)!=(vt0.c0)))), GROUP_CONCAT(vt0.c0 COLLATE RTRIM) OVER () FROM vt0 WHERE (CASE WHEN ((x'') BETWEEN (1313516005) AND (NULL)) THEN ('-1384941383' IN ()) WHEN ((((0.20381930023218908)OR(0.4426210616033418)))OR(x'')) THEN ((('L5 t_')) NOT BETWEEN ((NULL)) AND (('0.6826239996430029'))) WHEN CAST('' AS TEXT) THEN (- (0.9662781052604382)) END); -- 0ms;
SELECT ((NULL) NOT NULL), CAST(vt0.c0 AS BLOB) COLLATE RTRIM, load_extension(((x'') BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (((((x'70c53dcf')IS NOT('S B/oA/')))-(((0x31feb7c9) NOTNULL)))); -- 0ms;
SELECT DISTINCT (((vt0.c0)||(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT SUM(ROUND(vt0.c0, vt0.c0)) FROM vt0 WHERE (TRIM(DISTINCT ((((((((x'c7df')AND('0.20381930023218908')))AND('[^X?')))OR(x'')))OR('')), (((NULL))>((0.4331888361484525))))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)/(vt0.c0))) AND (LIKELY(DISTINCT vt0.c0))) FROM vt0 ORDER BY (- ('1964854379')) LIMIT -1955564418; -- 0ms;
SELECT ((vt0.c0) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.5259895046620969)) AND ((vt0.c0 IN ()))), (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))>=(((vt0.c0 IN (0.43938310312842976))))), (- ('-1012543412')) FROM vt0 WHERE (CAST(((NULL) BETWEEN (1.760175332E9) AND (x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((vt0.c0)IS NOT(vt0.c0)) IN ()), COALESCE(DISTINCT (- (vt0.c0)), ((vt0.c0)IS(vt0.c0))), SUM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) FROM vt0 WHERE (CAST(((x'eb0a')/(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT RANK() OVER (), (((vt0.c0 IN ())) IS TRUE), ((((vt0.c0) NOTNULL)) ISNULL) FROM vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c0)<(vt0.c0)))>=(x'9257')) FROM vt0 WHERE ((~ (((-1544744095) IS TRUE)))); -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM, CASE CAST(vt0.c0 AS INTEGER)  WHEN x'ca8a' THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE vt0.c0 COLLATE NOCASE END, (- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (((((0.9189334357947543) NOT BETWEEN (620442418) AND (1.7976931348623157E308))) ISNULL)); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT ((vt0.c0)<=(vt0.c0))) FROM vt0 WHERE (CASE ((0.017709854309392092)>=('1777480701'))  WHEN CASE WHEN 0X2966ef9 THEN x'' WHEN '' THEN NULL WHEN NULL THEN NULL ELSE 0.43938310312842976 END THEN CASE ''  WHEN -2073207487 THEN x'' END END); -- 0ms;
SELECT ABS(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 GROUP BY (- (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), 'm#' COLLATE BINARY, ((vt0.c0 COLLATE NOCASE)IS((vt0.c0 IN ()))); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((0x4cd8c503)/(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 LIMIT 1391813923 OFFSET 2040010338; -- 1ms;
SELECT DATETIME(vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE (((json_object(NULL, 0.6310880881014385, '-757014124', 0x1ebff446, 1391813923, x'ff89'))-(((0Xffffffffa65b04a6) NOT NULL)))) LIMIT -1686990149 OFFSET -1012543412;SELECT DISTINCT COUNT(((vt0.c0)<=(vt0.c0))) FROM vt0; -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL TOTAL((-3.5151188E8 IN (vt0.c0, vt0.c0))) FROM vt0 WHERE (CAST(((NULL) NOT NULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((x'')>=(x'')) FROM vt0; -- 0ms;
SELECT ALL -423527747 FROM vt0; -- 1ms;
SELECT DISTINCT ((vt0.c0 IN (vt0.c0)) IN ()) FROM vt0 WHERE (LIKELIHOOD((- (0.9016096349324195)), 0.8080652976194321)) LIMIT 548103886; -- 0ms;
SELECT (NOT (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, (((vt0.c0))>=((vt0.c0)))))>((((vt0.c0)AND(vt0.c0)), vt0.c0, ((vt0.c0)IS(vt0.c0)))))  NULLS FIRST; -- 0ms;
SELECT ALL ((((((((((((((vt0.c0)=(vt0.c0)))OR(SQLITE_COMPILEOPTION_USED(vt0.c0))))AND(((((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '1777480701' ELSE NULL END)))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.41286556851306977, vt0.c0, vt0.c0))))))OR(((vt0.c0) IS FALSE))))AND((NOT (vt0.c0)))), ((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c0 COLLATE BINARY)), ((((vt0.c0)AND(vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT NULL) AS TEXT), UPPER(DISTINCT (vt0.c0 IN (vt0.c0))), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) ISNULL))), AVG((vt0.c0 IN ())) OVER ( ORDER BY '197803109' DESC), ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ((+ ((('np埘⦉9')IS NOT(0.4478042244117908))))); -- 0ms;
SELECT DISTINCT AVG((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) FROM vt0 WHERE (((x'') NOTNULL)); -- 0ms;
SELECT DISTINCT ((MIN(vt0.c0))+(IFNULL(x'', vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER)) NOT NULL), ((CAST(vt0.c0 AS INTEGER))<>(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CUME_DIST() OVER () FROM vt0; -- 1ms;
SELECT TOTAL(vt0.c0) OVER () FROM vt0; -- 0ms;
SELECT ALL (~ ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))), (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((vt0.c0) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CASE WHEN (((vt0.c0, 0.8264234470586391, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((((vt0.c0)/(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT('') FROM vt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 WHERE ((NOT (((0.9095492855671594)%(-336453085))))) GROUP BY ((CASE vt0.c0  WHEN 0.2464941786221212 THEN vt0.c0 ELSE vt0.c0 END)<=((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN (('KꜛJv', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) HAVING COUNT(((0x7fffffffffffffff) NOT BETWEEN (vt0.c0) AND (vt0.c0))); -- 0ms;
SELECT DISTINCT LIKE(((vt0.c0)%(vt0.c0)), (+ (vt0.c0))) FROM vt0; -- 1ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER () FROM vt0 WHERE (TRIM(DISTINCT (('') NOT BETWEEN (1.964854379E9) AND (-5.4756258E8)))); -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS REAL) IN (0.1062896907348978)) FROM vt0; -- 0ms;
SELECT ALL CASE ((vt0.c0)+(vt0.c0))  WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) BETWEEN (9.8439211E8) AND ('|<T*uw-')) THEN ((vt0.c0)!=(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN UPPER(vt0.c0) THEN ((vt0.c0) NOT NULL) WHEN '-351511880' COLLATE BINARY THEN (+ (vt0.c0)) ELSE (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, CASE vt0.c0  WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS REAL) THEN COUNT(*) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 END, ((UNLIKELY(vt0.c0)) BETWEEN (COUNT(*)) AND ((vt0.c0 IN (vt0.c0, '-351511880')))) FROM vt0 WHERE (CAST(CAST('-181948377' AS INTEGER) AS NUMERIC)); -- 0ms;
SELECT DISTINCT SUM(((vt0.c0)>>(vt0.c0))) OVER ( RANGE  UNBOUNDED PRECEDING), CASE WHEN '7{/ठFt' COLLATE BINARY THEN (vt0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN vt0.c0 END, TIME(ABS(vt0.c0), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.2801603722568057) FROM vt0 ORDER BY vt0.c0 DESC, ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))!=((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 1ms;
SELECT DISTINCT ((((vt0.c0)<<('-181948377')))<=(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(205004097)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))), ((CAST('2090734933' AS NUMERIC)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY)), GROUP_CONCAT(((vt0.c0)>(vt0.c0))) FROM vt0 WHERE (((TYPEOF(x'b50b'))-((((((((('-2077572117')OR(NULL)))AND(0.5706838435332336)))OR(x'')))OR(x''))))); -- 2ms;
SELECT DISTINCT LIKELY(DISTINCT load_extension(vt0.c0)), (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0Xffffffffa84f1691 END)), UNLIKELY(CAST(vt0.c0 AS INTEGER)) FROM vt0;SELECT DISTINCT (+ (CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN 0.12537756112923593 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((- (TRIM(-1503984474)))); -- 0ms;
SELECT DISTINCT LAST_VALUE((((0.7256383302477729)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) OVER () FROM vt0 WHERE ((((0.6820887482000867)) BETWEEN (('0E\rUs')) AND (('8n'))) COLLATE NOCASE) GROUP BY NULL; -- 0ms;
SELECT (((- (vt0.c0)))=((NOT (vt0.c0)))) FROM vt0 WHERE (((CAST(0.5093649812312738 AS TEXT)) IS TRUE)); -- 0ms;
SELECT ALL 0.17657922883516775 FROM vt0 WHERE (((((((((((x'') ISNULL))OR('&m0K' COLLATE NOCASE)))AND((+ (NULL)))))AND(CASE x'8e09'  WHEN -2.077572117E9 THEN x'fab3a6ce' WHEN 0.8643525534504544 THEN '' WHEN 0x6c4be560 THEN 0.8309553859760941 WHEN 0.9371290112566446 THEN x'' WHEN NULL THEN NULL ELSE NULL END)))AND((('1308016984')<=(-51959415))))) LIMIT 1036175130 OFFSET 1064402219; -- 0ms;
SELECT ALL CAST((vt0.c0 IN ()) AS BLOB), COUNT(*) OVER (), ((((vt0.c0)IS(vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT vt0.c0, TYPEOF(DISTINCT CAST(vt0.c0 AS INTEGER)), TYPEOF(vt0.c0) COLLATE BINARY COLLATE NOCASE FROM vt0 WHERE ((~ (NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY (((vt0.c0)=(0.3132163736685415)) IN ()), (NOT ((vt0.c0 IN (vt0.c0, vt0.c0)))) ASC GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM vt0 WHERE (LOWER(CASE 'x}+~L&h'  WHEN 'P' THEN NULL WHEN -3.29231338E8 THEN x'' WHEN 0Xffffffffc1211a5e THEN NULL END)) ORDER BY (+ (highlight(vt0.c0, vt0.c0, 0.05072296916561403, vt0.c0))); -- 0ms;
SELECT ALL ((ABS(vt0.c0)) IS FALSE), (((('-1535757331')OR((NOT (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), NULL FROM vt0 WHERE (((((0.3292526752840177)|(NULL))) NOT BETWEEN ((('-1049779266') IS TRUE)) AND (0.8388743211567687 COLLATE NOCASE))) GROUP BY (vt0.c0 COLLATE BINARY IN ()) HAVING ((((NULL)*(vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (vt0.c0 COLLATE NOCASE)); -- 0ms;
SELECT ((+ (vt0.c0)) IN ()) FROM vt0 GROUP BY (((((((((((vt0.c0, vt0.c0, 0x4df6c158)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)<<(vt0.c0)))))OR(576942464)); -- 0ms;
SELECT DISTINCT ((((((((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))OR((+ (vt0.c0)))))OR((((vt0.c0))<>((vt0.c0))))))AND(vt0.c0 COLLATE BINARY)))OR(AVG(vt0.c0))) FROM vt0;SELECT ALL COUNT(*) OVER ( GROUPS BETWEEN ((-7.19670206E8) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0)) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM vt0 WHERE (((NULL COLLATE BINARY) BETWEEN ((('1461801699')-(-1.200505102E9))) AND (TRIM(NULL)))); -- 0ms;
SELECT '' FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))||(CAST(vt0.c0 AS REAL))) FROM vt0 ORDER BY ((((((((((((vt0.c0 COLLATE BINARY)AND(CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS BLOB))))AND(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0)==(vt0.c0)))))OR(((('-336453085', '197803109', vt0.c0, vt0.c0, vt0.c0))==((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))AND(vt0.c0)); -- 0ms;
SELECT DISTINCT ((AVG(vt0.c0))<=(((vt0.c0)IS(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (~ (TOTAL(NULL))), GROUP_CONCAT(((((vt0.c0)OR(vt0.c0)))OR(NULL))), GROUP_CONCAT(((vt0.c0) IS TRUE)) OVER () FROM vt0 WHERE ((+ (CAST(x'f030' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((vt0.c0) IS TRUE) FROM vt0 ORDER BY (+ ((- (vt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((((((((vt0.c0)IS(vt0.c0)))AND(SUM(vt0.c0))))AND('548103886')))AND(ABS(DISTINCT vt0.c0))))OR(TIME(vt0.c0, vt0.c0, vt0.c0))) FROM vt0 WHERE (((CASE '0.2451373305832999'  WHEN 'TRqw	5' THEN 0.994459747413941 WHEN 0.23168139180646852 THEN 0.3283511371659946 WHEN -1.81948377E8 THEN 3.2588591E7 END) NOT BETWEEN (((('-794085959', -1.544720609E9, '32588591'))==(('H|', x'', x'')))) AND ((('') IS FALSE)))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))==(((vt0.c0) IS FALSE))), ((((((vt0.c0)GLOB(vt0.c0)))OR(((vt0.c0) IS TRUE))))OR(vt0.c0)), ((vt0.c0)||(TOTAL(vt0.c0))), ((((-336453085) BETWEEN (vt0.c0) AND (vt0.c0)))&(-1.899279636E9)), '-1154995052' FROM vt0 WHERE ((((('-1544720609')GLOB(''))) BETWEEN (((NULL) NOT BETWEEN (0X2cbde9c8) AND (NULL))) AND ((x'' IN (NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)>(vt0.c0))) AND (0.46647997584396106)), IFNULL(vt0.c0, vt0.c0) COLLATE BINARY, (COUNT(vt0.c0) IN ()) FROM vt0 WHERE ((- (((0.6801242862098789)&(x''))))); -- 0ms;
SELECT ALL ABS(DISTINCT json_extract(vt0.c0, vt0.c0)) FROM vt0 WHERE (CAST(x'' COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)!=(((0.7264427989678691)==(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (UPPER(DISTINCT -2.31256882E8), CAST(vt0.c0 AS BLOB))) FROM vt0 GROUP BY ((vt0.c0)LIKE(((vt0.c0) NOTNULL))) HAVING GROUP_CONCAT(((vt0.c0)IS NOT(vt0.c0))) ORDER BY '-152116778'; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)<<(vt0.c0))) OVER (), CAST(vt0.c0 AS BLOB), (((vt0.c0)LIKE(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((0.12074158119485656) IS TRUE) FROM vt0 WHERE ((~ ((('l')<(x''))))); -- 0ms;
SELECT ALL (MIN(vt0.c0) IN ()) FROM vt0 WHERE (((x'')<<(0.8682846890208197)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT '' COLLATE RTRIM FROM vt0; -- 0ms;
SELECT CASE WHEN TOTAL('-1477246781') THEN ((vt0.c0)>('p')) END FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL), (((vt0.c0, 0.9165700847419198, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('-291121107') AND (vt0.c0)), TRIM(vt0.c0, x'83af'), ((vt0.c0)IS(vt0.c0)))) AND (('-1263049260', (vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), SUM('-471199995') OVER (), ((((vt0.c0) IS TRUE)) NOT NULL), ((GROUP_CONCAT(vt0.c0))-(TRIM(vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL MIN((- (vt0.c0))), 0.4903500381809357, (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN ('490383131') AND (MAX(vt0.c0))) FROM vt0; -- 0ms;
SELECT CAST(NULL AS TEXT) FROM vt0 WHERE ((((((((((NULL IN (NULL, 'k(!>B''TL笱')))OR(CAST(x'' AS BLOB))))OR((('')<=(0.6911048214436841)))))OR(TRIM(DISTINCT 0.23168139180646852))))OR((NULL IN ())))) LIMIT -1561395751; -- 0ms;
SELECT DISTINCT (((((vt0.c0))>=((NULL))))<(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), LEAD(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.7705102820729112))) IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (((0.4903500381809357)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))), (NOT (json_array(vt0.c0, 0.8245302587791892, vt0.c0, vt0.c0)))) OVER (), (((vt0.c0) BETWEEN (vt0.c0) AND (0.6659096800764671)) IN ()) FROM vt0 WHERE ((((+ ('A\')))>(SQLITE_COMPILEOPTION_USED('-590759325')))); -- 0ms;
SELECT DISTINCT MAX((x'1aea9f3c' IN ())) FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) IS FALSE); -- 0ms;
SELECT CUME_DIST() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((IFNULL(DISTINCT vt0.c0, vt0.c0))AND(vt0.c0)))OR((- (vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((vt0.c0) IS FALSE) COLLATE RTRIM, SQLITE_SOURCE_ID() FROM vt0 WHERE (CASE (+ (376675330))  WHEN CAST(0.2739462406100216 AS TEXT) THEN ((0.4166382311048461)*('-55935855')) ELSE ((((0.8395758907753703)OR(0.923406704963584)))AND(0.5505799239498554)) END); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)<<(vt0.c0))) FROM vt0 WHERE ((~ ((((x'', '1080512372', NULL)) NOT BETWEEN ((0X20e67b31, '-257894220', NULL)) AND ((x'8c97', NULL, 0.20351695623896993)))))); -- 0ms;
SELECT CASE ((NULL)OR(vt0.c0))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (~ (vt0.c0)) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) WHEN SUBSTR(vt0.c0, vt0.c0) THEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0; -- 0ms;
SELECT ((TRIM(vt0.c0))GLOB(((vt0.c0)>=('145232195')))) FROM vt0 WHERE (((IFNULL(NULL, '-117052029')) NOT BETWEEN (((x'')IS NOT(x''))) AND (((x'') NOT NULL)))); -- 0ms;
SELECT ALL MIN(vt0.c0 COLLATE NOCASE COLLATE RTRIM) FROM vt0 WHERE ((NOT (((x'')/(x''))))); -- 0ms;
SELECT -1.186446012E9 FROM vt0 WHERE ((NOT ((((((((('1326363393')AND(x'')))OR(NULL)))AND(x'')))AND('0.3132163736685415'))))); -- 0ms;
SELECT COUNT((vt0.c0 IN ())) OVER (), IFNULL(DISTINCT ((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), COUNT(*) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT (~ (CASE WHEN NULL THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 COLLATE RTRIM))=((vt0.c0))) FROM vt0 WHERE (((((NULL)LIKE(114362524))) NOTNULL)); -- 0ms;
SELECT DISTINCT CAST(x'' AS REAL) FROM vt0 WHERE (0.8993762298126549); -- 0ms;
SELECT DISTINCT vt0.c0, ((vt0.c0)*((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, 'z滠|H	', vt0.c0))))), ABS(DISTINCT ((vt0.c0)|(vt0.c0))) FROM vt0 WHERE (CAST(-1070337946 COLLATE NOCASE AS NUMERIC)); -- 0ms;
SELECT ALL TOTAL(CAST(vt0.c0 AS TEXT)) OVER ( ORDER BY QUOTE(((vt0.c0)|(vt0.c0))) ASC) FROM vt0; -- 1ms;
SELECT ALL ((LIKE(vt0.c0, vt0.c0))==(((vt0.c0) IS TRUE))) FROM vt0 WHERE (x''); -- 0ms;
SELECT (~ (TRIM(DISTINCT vt0.c0))) FROM vt0 WHERE ((+ (x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((vt0.c0 IN ()) IN ()) FROM vt0 ORDER BY ((((((((LENGTH(vt0.c0))OR((- (vt0.c0)))))OR(LOWER(NULL))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0 COLLATE NOCASE)) DESC; -- 0ms;
SELECT DISTINCT ((('-1544744095'))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))<>((- (vt0.c0)))) FROM vt0 WHERE (((0.6265478736225499)<<('')) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT ALL 0X1f1432f FROM vt0 GROUP BY (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ((((vt0.c0))>((vt0.c0))), vt0.c0)); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)<((((vt0.c0, '-152116778', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE (CASE ((((NULL)OR(0.6911048214436841)))AND('197803109'))  WHEN CASE WHEN NULL THEN x'' END THEN (('114007726')<=(0.4446060971179553)) ELSE (NOT (NULL)) END); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (((('')<>(vt0.c0)))) AND ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND('q\U{')))OR(NULL)))OR(vt0.c0))))) FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC; -- 0ms;
SELECT DISTINCT LOWER(vt0.c0) COLLATE BINARY FROM vt0 WHERE (((((NULL, '', NULL))>((NULL, x'', x''))) IN ())) GROUP BY (((('1289274627') IS FALSE))<<(vt0.c0)) HAVING (MAX(vt0.c0) IN ()); -- 0ms;
SELECT ALL vt0.c0, (LIKELIHOOD(DISTINCT vt0.c0, 0.30074800671357593) IN ()), ((((vt0.c0)IS(vt0.c0)))<>(((vt0.c0) IS TRUE))) FROM vt0 WHERE (TRIM(DISTINCT CAST('\rU' AS REAL), ((('T4ZCE')) NOT BETWEEN ((x'')) AND (('3'))))); -- 0ms;
SELECT DISTINCT json_extract(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL), NULL, (('^SW,6SX,') NOTNULL)), CASE WHEN (+ (588440090)) THEN '7S' WHEN (((vt0.c0))=((vt0.c0))) THEN vt0.c0 COLLATE RTRIM WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0))<=(('-181948377'))) ELSE GROUP_CONCAT(vt0.c0) END, HEX(DISTINCT json_valid(vt0.c0)) FROM vt0;SELECT LAG((((vt0.c0)) BETWEEN ((((0.05072296916561403) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), ((((0X66f4d132)/(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)IS NOT(vt0.c0)))), CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) ISNULL) ELSE (('0.6820887482000867') BETWEEN (vt0.c0) AND (vt0.c0)) END) OVER () FROM vt0 WHERE (CAST(CASE 0.04051901529611113  WHEN NULL THEN '2025948930' WHEN 0Xffffffffd05675ff THEN 0X493a0d67 WHEN '' THEN x'e57473c1' ELSE NULL END AS BLOB)); -- 0ms;
SELECT NULLIF(vt0.c0, MIN(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x''))) IS TRUE), CASE ''  WHEN (~ ('-835233832')) THEN vt0.c0 END, ((json_object(NULL, vt0.c0)) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS BLOB))) FROM vt0;SELECT ALL AVG(json_insert(vt0.c0, vt0.c0, vt0.c0)) FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN ((((vt0.c0))<(('-171766427')))) AND (vt0.c0 COLLATE RTRIM)) ASC;SELECT DISTINCT CASE (((vt0.c0))!=((vt0.c0)))  WHEN CASE WHEN NULL THEN vt0.c0 END THEN 'TJ' ELSE CASE ''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, QUOTE(((vt0.c0)%(vt0.c0))), TOTAL(COUNT(((vt0.c0) NOTNULL))) FROM vt0 GROUP BY vt0.c0 HAVING (CAST(vt0.c0 AS TEXT) IN ());SELECT DISTINCT CASE vt0.c0  WHEN 0X581c1b25 THEN (vt0.c0 IN ()) ELSE (((vt0.c0))>((vt0.c0))) END, TOTAL((vt0.c0 IN ())), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE))LIKE(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (CAST((((0X677fcb42, '3', x'b3fa', 0.6433568299042163, 0.9245294795212624))<((NULL, 0.5204828945410633, '0.0', x'9d47', 0.5073967586268586))) AS TEXT)) GROUP BY (+ (((vt0.c0)AND(vt0.c0)))) HAVING ((((vt0.c0)||(vt0.c0))) ISNULL); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))LIKE(UNLIKELY(''))) FROM vt0 LIMIT -336453085; -- 0ms;
SELECT DISTINCT (((vt0.c0)>>(vt0.c0)) IN ()) FROM vt0 WHERE (((((json_extract(x'', -1741137371))AND(((x'') BETWEEN ('-1544744095') AND (x'1992')))))AND(((('1036175130')) NOT BETWEEN ((NULL)) AND (('')))))) LIMIT 2077879089 OFFSET 1254445198;SELECT ALL PERCENT_RANK() OVER (), NULLIF(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), x'b002' COLLATE BINARY), ((((0.4351787875525652)IS(vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0))>((vt0.c0))) COLLATE NOCASE, CASE WHEN ((vt0.c0)||(x'daddd98a')) THEN 0x5e91c21f WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN TOTAL(vt0.c0) ELSE CAST(vt0.c0 AS REAL) END, ((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (1080512372); -- 3ms;
SELECT DISTINCT (+ (((vt0.c0) IS TRUE))) FROM vt0 GROUP BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY COLLATE NOCASE HAVING (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((x'') ISNULL))); -- 0ms;
SELECT TRIM(CASE WHEN vt0.c0 THEN vt0.c0 END), CASE ((((((((vt0.c0)OR(vt0.c0)))AND(1e500)))OR(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN x'' THEN x'' ELSE ((((vt0.c0)AND(vt0.c0)))AND(NULL)) END, ((((load_extension(vt0.c0, vt0.c0))OR(0X7ebc1be3)))OR(vt0.c0)) FROM vt0;SELECT (NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('f^j'))))) FROM vt0 WHERE (((NULL COLLATE NOCASE) NOT BETWEEN (((-1859210532)||(NULL))) AND ((0.17833680760563275 IN (-1.049779266E9, 429339832))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(vt0.c0) OVER (), (- (GROUP_CONCAT(vt0.c0))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((~ (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) FROM vt0 ORDER BY LOWER(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))); -- 0ms;
SELECT DISTINCT load_extension((((vt0.c0))==((vt0.c0))), ((((vt0.c0)OR(0.8065351105602805)))AND(vt0.c0))), (~ (CAST(vt0.c0 AS REAL))), (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (vt0.c0) AND (1121098427 COLLATE NOCASE)) FROM vt0;SELECT DISTINCT (vt0.c0 IN ()) COLLATE NOCASE, (((vt0.c0, 'H#', vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) ISNULL), CAST(vt0.c0 AS REAL), (vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0, CAST(vt0.c0 AS NUMERIC), (- (vt0.c0)), (vt0.c0 IN ()), x''))), SUM(MIN(((vt0.c0)AND(vt0.c0)))), CAST((((vt0.c0, NULL, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) AS BLOB), (((vt0.c0 COLLATE RTRIM))>=((GROUP_CONCAT(vt0.c0)))) FROM vt0;SELECT ALL ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)AND(vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(0.9630300713593619)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL json(((vt0.c0)|(vt0.c0))), x'', COUNT(((vt0.c0)LIKE(vt0.c0))) OVER () FROM vt0 LIMIT -1729952348 OFFSET 2120062848; -- 0ms;
SELECT '-1753301342' FROM vt0 ORDER BY ((((vt0.c0))<=((vt0.c0))) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (GROUP_CONCAT(vt0.c0))), AVG(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))), (~ (((vt0.c0)OR(vt0.c0)))) FROM vt0 INTERSECT SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))<=((CAST(vt0.c0 AS NUMERIC), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (0.30502080813625976) AND (vt0.c0))))), ((((NOT (vt0.c0))))<=((SQLITE_COMPILEOPTION_USED(vt0.c0)))), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)/(GROUP_CONCAT(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST LIMIT 1499268447; -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(vt0.c0 AS INTEGER)) FILTER(WHERE ((((vt0.c0) IS TRUE))&(CAST(vt0.c0 AS INTEGER)))) OVER () FROM vt0 GROUP BY ABS((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))); -- 0ms;
SELECT DISTINCT (+ (vt0.c0 COLLATE BINARY)), (NOT (ABS(DISTINCT vt0.c0))), COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), AVG(((vt0.c0) IS TRUE)), TRIM(DATE(vt0.c0, vt0.c0, vt0.c0)) FROM vt0 WHERE (CASE ((0.31001891191423836)<(NULL))  WHEN HEX('805113326') THEN CAST('s{䫬,Ch!跓{' AS BLOB) ELSE IFNULL(DISTINCT '2016942499', '') END); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ('')) FROM vt0 WHERE ((NOT ('0.1062896907348978'))); -- 1ms;
SELECT ALL GROUP_CONCAT(((vt0.c0) ISNULL)) FROM vt0 LIMIT 132448863 OFFSET -992393749; -- 0ms;
SELECT DISTINCT (- (((vt0.c0) NOT NULL))) FROM vt0 WHERE (CAST('' AS NUMERIC)) ORDER BY vt0.c0 ASC; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((('0.14426274723061838') BETWEEN (-608380347) AND (NULL)))OR(((((((((x'53c7')OR(0.05382504588780335)))AND(0xa7b3d92)))AND(NULL)))AND(x'')))))AND((+ (x''))))); -- 0ms;
SELECT ((((vt0.c0) NOT NULL)) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)>=(vt0.c0)))) FROM vt0 GROUP BY CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END HAVING (((vt0.c0 IN ())) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c0 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((((TRIM(DISTINCT vt0.c0))AND(TRIM(DISTINCT '1308016984', vt0.c0))))AND(((vt0.c0) IS FALSE))) FROM vt0 WHERE (((137579745) IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT TOTAL((vt0.c0 IN (vt0.c0))) FROM vt0 WHERE (CASE WHEN ((x'b814')|(NULL)) THEN ABS(DISTINCT x'') ELSE (NOT ('366835273')) END); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=(NULL))) IS TRUE) FROM vt0 WHERE ((((((('1991028853') NOT BETWEEN (x'') AND ('TJ')))OR(IFNULL(DISTINCT x'', NULL))))AND((('P궋bbaWF8')==('B糄Pz㖧\skY'))))) GROUP BY ((vt0.c0 IN ()) IN ()); -- 0ms;
SELECT CAST(0xffffffffd8a66f8a AS TEXT) FROM vt0 WHERE ((((~ ('-413198992')))<(0.9302541510228004))); -- 0ms;
SELECT COUNT(*) OVER ( GROUPS  CURRENT ROW) FROM vt0 WHERE ((((((0.31767263674893664, '', 0.28402787639198834))!=(('z{<[BNtv', NULL, '1773729648')))) NOT BETWEEN ((NULL IN (0xffffffffb4ad3dfd))) AND (('-545794292' IN ())))); -- 1ms;
SELECT DISTINCT (+ ((((vt0.c0))>((vt0.c0))))) FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB) ASC  NULLS FIRST; -- 0ms;
SELECT NTH_VALUE(((((('9}垆''{{', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))-(CAST(vt0.c0 AS NUMERIC))), ((CAST(0X761b9395 AS NUMERIC))<=(json_patch(vt0.c0, vt0.c0)))) OVER () FROM vt0 WHERE (((0X69f233fd) NOT NULL)) LIMIT -231256882;SELECT DISTINCT TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END), ((((vt0.c0)%(vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) NOT NULL))), CUME_DIST() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT PRINTF(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (((((0.7281851707006147)*(''))) NOT NULL)) GROUP BY ('' IN ()); -- 0ms;
SELECT DISTINCT ((((((((('[zL2p酟	' IN ()))AND(COUNT(vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC))))AND(CAST(vt0.c0 AS TEXT))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)), ((((((((vt0.c0)OR(0.697687579580181)))OR(x'5c11')))AND((NOT (vt0.c0)))))AND(((0.1350197547570694)=(vt0.c0)))), ((((vt0.c0)<>(vt0.c0))) BETWEEN (LIKELIHOOD(vt0.c0, 0.3648383472751898)) AND ((vt0.c0 IN ()))) FROM vt0 NOT INDEXED ORDER BY ((json_array(vt0.c0, vt0.c0))>(((x'')>=(vt0.c0)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((x'748202af')AND(-7.94085959E8)))OR(vt0.c0))) OVER ( ORDER BY ((((((((UNLIKELY(vt0.c0))OR((((vt0.c0, vt0.c0, NULL))==((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))OR(((vt0.c0)<=(vt0.c0))))  NULLS FIRST) FROM vt0 WHERE (((('', '-792305691', NULL)) BETWEEN (((NOT (x'')), (NULL IN ('-1200505102', '0.6659096800764671')), CAST(0.17833680760563275 AS REAL))) AND ((('838776777' IN ()), CAST(NULL AS TEXT), ((0.3615562393287217) NOT BETWEEN ('-1125602747') AND ('936315006')))))); -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()) FROM vt0 LIMIT -2036270246 OFFSET -1821088775; -- 0ms;
SELECT DISTINCT ((((COALESCE(x'bc16', vt0.c0, vt0.c0, vt0.c0))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((((0Xffffffffb492769a IN ())) IS FALSE)); -- 0ms;
SELECT DISTINCT CASE NULL  WHEN ((((1797073198)OR(vt0.c0)))OR('515896390')) THEN 1689732915 WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('G7', vt0.c0, vt0.c0)) AND ((vt0.c0, x'42f5', vt0.c0))) WHEN ((0.6826239996430029) NOT NULL) THEN ((vt0.c0)&(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END FROM vt0 WHERE (CAST((('1BDo])C')==(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT UPPER((vt0.c0 IN (vt0.c0))), '-1768600845', CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) ELSE NULL END FROM vt0; -- 0ms;
SELECT ALL (NOT (AVG(vt0.c0))), (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((vt0.c0) IS TRUE) COLLATE RTRIM FROM vt0 WHERE (((((x'') BETWEEN (x'') AND (x'678d2f7f')))=((+ (''))))); -- 0ms;
SELECT (- (vt0.c0 COLLATE NOCASE)), (- ((((vt0.c0))<=((vt0.c0))))), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)GLOB(vt0.c0)), 'L]L)*/Q', CASE '?}S!0~	b+'  WHEN x'' THEN vt0.c0 END)) AND ((CAST(vt0.c0 AS INTEGER), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC)))) FROM vt0; -- 0ms;
SELECT TOTAL(CASE WHEN NULL THEN vt0.c0 ELSE 0.7828199100928898 END) OVER () FROM vt0 WHERE (((('㒸4∣*?W5缛D')) NOT BETWEEN (('952453516')) AND ((TRIM(DISTINCT -1.544720609E9, x''))))); -- 0ms;
SELECT DISTINCT CASE WHEN 0xffffffff98bb3bde COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (+ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(0.26289059652287106)) WHEN ((vt0.c0) NOT NULL) THEN COUNT(*) END FROM vt0 NOT INDEXED; -- 0ms;
SELECT ALL (((((vt0.c0))>=((vt0.c0))))|(((vt0.c0)||(vt0.c0)))), GROUP_CONCAT(-3.29231338E8), TOTAL(((vt0.c0)LIKE(NULL))) OVER (), ((CASE vt0.c0  WHEN 144825989 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)+((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), '-1503984474', (((vt0.c0)) BETWEEN ((INSTR(vt0.c0, vt0.c0))) AND ((((vt0.c0)IS(vt0.c0))))), NULL FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST, (- (vt0.c0)) COLLATE BINARY COLLATE NOCASE ASC  NULLS LAST, (~ (((vt0.c0) IS FALSE))) DESC  NULLS FIRST; -- 1ms;
SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0)GLOB(vt0.c0)))), CASE WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN vt0.c0 WHEN ABS(vt0.c0) THEN (((x'c76b')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 END, vt0.c0 FROM vt0 WHERE ((((('0.4478042244117908') BETWEEN ('睈') AND (x''))) NOT BETWEEN (((((((((NULL)AND(NULL)))AND(-5.1959415E7)))OR('1064402219')))AND('G9q|%D'))) AND (CAST('Wsx' AS BLOB)))); -- 0ms;
SELECT DISTINCT NTH_VALUE(vt0.c0, CASE ((NULL) IS TRUE)  WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END) OVER () FROM vt0 WHERE (MAX(1.45232195E8, 0X5e73b0bd) COLLATE RTRIM);SELECT DISTINCT ((896675026) BETWEEN (((0.866417410327161)*(vt0.c0))) AND ((NOT (vt0.c0)))), ((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0)), ((CAST(vt0.c0 AS NUMERIC))*(((vt0.c0)LIKE(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT '1370596584', (- (CAST(vt0.c0 AS INTEGER))), (- (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CAST(((750643656) NOT NULL) AS INTEGER)); -- 0ms;
SELECT ALL ((((((((((((AVG(vt0.c0))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(SUM(0.8176980598566463))))AND(((0.6049093114723393) NOT NULL))))OR(((vt0.c0)AND(vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((x'' IN ()) IN ('' COLLATE RTRIM, (((('1255950683')AND(NULL)))OR(0X3b4bc687))))); -- 0ms;
SELECT (- ((((vt0.c0))>((vt0.c0))))) FROM vt0 LIMIT 1700825893; -- 0ms;
SELECT ALL ((AVG('1080512372')) BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((MIN(vt0.c0))OR(0xffffffff86a3d72e)))AND((((vt0.c0, vt0.c0, '')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), 0Xfffffffff47424d3, CAST(UNICODE(vt0.c0) AS TEXT) FROM vt0 NOT INDEXED GROUP BY CAST(((((x'd998')AND(vt0.c0)))AND(vt0.c0)) AS BLOB) HAVING AVG(UNLIKELY('429339832')) LIMIT 1326363393; -- 1ms;
SELECT DISTINCT NTILE(((((((((vt0.c0)AND(0.8122515662276459)))OR(vt0.c0)))AND('Nh')))OR(vt0.c0)) COLLATE RTRIM) OVER () FROM vt0;SELECT ALL ((UNLIKELY(DISTINCT vt0.c0))IS(((vt0.c0) IS TRUE))) FROM vt0 WHERE ((((((x'')|(x'5a25'))))<((((NULL) NOT BETWEEN (0xffffffffb68b3438) AND (x'ff6e')))))); -- 0ms;
SELECT ((0.20381930023218908) NOT BETWEEN (((vt0.c0)=(vt0.c0))) AND (((vt0.c0)=(vt0.c0)))) FROM vt0 WHERE (((((((((NULL)OR((0.6148057233158626 IN ('<<+\n]Ue9')))))AND((((0.9990405930687686))<>((x''))))))AND((((0.4362878354891532, '', -1.520562478E9)) BETWEEN (('*ZM!R/D6', '-1955564418', NULL)) AND ((NULL, x'99b7', x''))))))OR((('_	Abl')GLOB('-291121107'))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 WHERE (CAST(x'' AS BLOB)); -- 0ms;
SELECT DISTINCT RANK() OVER ( PARTITION BY ((((((vt0.c0)OR(NULL)))OR(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (CAST(vt0.c0 AS BLOB))), ((NULL)<=(RTRIM(vt0.c0)))), NULL, ((vt0.c0)>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(vt0.c0 AS BLOB), ((((vt0.c0)AND('P2')))OR(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (CAST(0.01709312903457383 COLLATE NOCASE AS INTEGER)); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))/(vt0.c0)) FROM vt0 WHERE (NULL COLLATE RTRIM); -- 0ms;
SELECT ALL (((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))!=(((vt0.c0 IN ())))) FROM vt0 WHERE (((((+ ('륙cd'))))=((((((NULL)AND(0.36364007810200727)))AND(x'f54e')))))); -- 0ms;
SELECT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY FROM vt0 WHERE ((((((('-902199004')AND(x'')))AND('1326363393')))+((((NULL, x'5e60', NULL))<=((x'', NULL, x'')))))) LIMIT -1012543412 OFFSET 467414402; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL))<>(((vt0.c0)*(NULL)))) FROM vt0 WHERE (((('Eb6g⃰'))>((CASE WHEN x'' THEN '\nv' END)))) UNION ALL SELECT (((0.2817706921263521)) BETWEEN ((COUNT(vt0.c0))) AND (((- (vt0.c0))))) FROM vt0 WHERE ((((+ (NULL))) NOT BETWEEN (CASE WHEN x'' THEN -1503984474 END) AND (((0Xffffffffcc5ed0f3) NOT BETWEEN (x'42b3') AND (NULL))))); -- 1ms;
SELECT DISTINCT CAST(TOTAL(vt0.c0) AS NUMERIC) FROM vt0 WHERE ((('9M')IS NOT('1416274049')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((vt0.c0)>=((vt0.c0 IN ()))) FROM vt0; -- 8ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((SUM(vt0.c0), ((x'')AND(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), load_extension(vt0.c0), json_object(vt0.c0, vt0.c0), (- (NULL))))) FROM vt0 WHERE ((- (((1)&(x''))))) LIMIT -1266510186; -- 0ms;
SELECT DISTINCT LAG(((CAST(vt0.c0 AS TEXT))IS('-55935855')), UPPER((vt0.c0 IN (vt0.c0))), (((((vt0.c0))!=((vt0.c0))))>>((vt0.c0 IN ())))) OVER (), x'', ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE, NULL, CAST(GROUP_CONCAT(vt0.c0) AS BLOB) FROM vt0 GROUP BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR('')) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END HAVING CAST((~ (vt0.c0)) AS TEXT); -- 0ms;
SELECT ALL ((((vt0.c0 IN ()), LOWER(vt0.c0), vt0.c0 COLLATE RTRIM))>=((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('?n')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.6674104654921694 END, (('-583721798') BETWEEN ('305729842') AND (vt0.c0))))) FROM vt0 EXCEPT SELECT DISTINCT CAST(((vt0.c0)>(vt0.c0)) AS TEXT) FROM vt0 WHERE (((((0x39faba74) NOTNULL)) NOT NULL)); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)<>(vt0.c0)))&(((vt0.c0)AND(vt0.c0)))) FROM vt0 WHERE (((CASE WHEN NULL THEN NULL END) IS TRUE)); -- 0ms;
SELECT ALL CASE 'KꜛJV'  WHEN (- (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN UPPER(vt0.c0) THEN ((vt0.c0) ISNULL) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c0) NOTNULL) END, ((vt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (0Xffffffffc1211a5e) AND (vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c0)))) AND ((0X52f56523 COLLATE NOCASE))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE (((vt0.c0))<=((vt0.c0)))  WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0)>=(0.03661678672041124)) END FROM vt0; -- 1ms;
SELECT ALL CAST(vt0.c0 AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST('' AS REAL)) BETWEEN (((vt0.c0)AND('[^X?'))) AND ((vt0.c0 IN ()))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE), ((((((vt0.c0) NOTNULL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)/(vt0.c0)))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((((vt0.c0) NOTNULL))AND(MIN(vt0.c0))))OR(vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0)==(vt0.c0))) FROM vt0 WHERE ((((0X7634e125 IN (NULL, '-1561395751'))) BETWEEN (highlight('ꫲ笱eG0䫬Q', '1524734497', x'b33d16ec', x'096e')) AND (CAST('' AS NUMERIC))));SELECT DISTINCT COUNT(*) FILTER(WHERE json_object(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) OVER (), CAST(((vt0.c0)==(vt0.c0)) AS BLOB), ((vt0.c0) IS FALSE) FROM vt0 WHERE (((x'')|(0X4adc495b)) COLLATE NOCASE);SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))OR(-1123873354))) ISNULL), (((vt0.c0)) BETWEEN ((vt0.c0)) AND (((((vt0.c0))<>((vt0.c0)))))), (((((NULL) NOTNULL)))<=((COUNT(*)))) FROM vt0 WHERE ((((NOT (x''))) BETWEEN ((((NULL, '1777480701', x'6606'))>=(('', x'', x'')))) AND (x''))) LIMIT -1154995052 OFFSET -1049779266; -- 0ms;
SELECT DISTINCT ((vt0.c0) IS FALSE) COLLATE BINARY, NULL, vt0.c0 FROM vt0 WHERE (((CAST(0.34665661273668114 AS NUMERIC)) BETWEEN (CASE '-2119308837'  WHEN x'' THEN '' END) AND (ROUND('', '-351511880')))) LIMIT 9223372036854775807; -- 0ms;
SELECT ALL (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE (((('>n')AND(vt0.c0)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'287c'))) WHEN (- (vt0.c0)) THEN vt0.c0 END, (+ (COUNT(vt0.c0))) FROM vt0 WHERE ((((((x'92f2')<(NULL)), ((x'') NOT BETWEEN (-1.38861392E9) AND ('-505252324')), ((0.3097596019105171)+(0.7149678572295493))))>((CASE '0.9662781052604382'  WHEN '-51959415' THEN '|ণ1pa5' END, CASE WHEN 0.5351291193404729 THEN '-509832200' WHEN '-130192437' THEN x'' WHEN 5.48103886E8 THEN 'Ew' WHEN 'vB^h,iyN' THEN 0.7264427989678691 WHEN -7.57014124E8 THEN NULL WHEN x'' THEN NULL WHEN x'' THEN 0.2088834248948569 END, json_remove(x'', NULL, 5.51975729E8, x'', 1.777480701E9, NULL))))); -- 0ms;
SELECT (((((vt0.c0 IN ()))AND(((vt0.c0)AND(vt0.c0)))))OR((vt0.c0 IN ()))), vt0.c0, ((((((vt0.c0)IS NOT(vt0.c0)))OR((+ (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))) FROM vt0 WHERE (((x'')GLOB((0X20b29787 IN ())))); -- 0ms;
SELECT vt0.c0 COLLATE BINARY FROM vt0 WHERE (((((((NULL)OR(NULL)))AND('	xlR')))IS NOT(((((((((NULL)AND(NULL)))OR(',x')))AND(NULL)))OR('C,'))))); -- 0ms;
SELECT ALL CAST(CAST('0.4446060971179553' AS NUMERIC) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE (CASE CAST('-1544720609' AS REAL)  WHEN 0.8215152167046745 THEN CASE WHEN 'R<Q]' THEN x'' ELSE -738251279 END END); -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0)IS NOT(vt0.c0))) OVER () FROM vt0 LIMIT 1164882592 OFFSET -181948377; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)OR(0.389533014973081)), ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((((106025873, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(AVG(vt0.c0))))AND(((0.3334212779756982) ISNULL))) FROM vt0; -- 0ms;
SELECT CASE WHEN vt0.c0 THEN vt0.c0 COLLATE BINARY ELSE UPPER(vt0.c0) END FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL)) NOT NULL), ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(MAX(vt0.c0))))AND(vt0.c0)), ((((vt0.c0)&(vt0.c0)))|(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (((CASE ''  WHEN '0.0' THEN 0xffffffffa2eefdd9 ELSE NULL END)||(((((0.03324138443647928)AND(NULL)))OR(NULL))))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 3.7667533E8 WHEN vt0.c0 THEN vt0.c0 END AS TEXT) FROM vt0 WHERE ((((((((((NULL)AND('&m0k')))AND(-998097264)))OR('1760175332')))OR('235000746')) IN ())); -- 0ms;
SELECT 0.9371290112566446 FROM vt0 WHERE (((((NULL)==(0.2451373305832999)))GLOB((('')==('-1937517071'))))); -- 0ms;
SELECT CASE vt0.c0  WHEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS TEXT) END FROM vt0 WHERE ((- (CASE NULL  WHEN NULL THEN '164017230' ELSE NULL END))); -- 0ms;
SELECT DISTINCT (((((((((NOT (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE RTRIM)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(CASE vt0.c0  WHEN 0.4110811842519797 THEN vt0.c0 END)) FROM vt0 LIMIT 1080512372 OFFSET -291121107; -- 0ms;
SELECT ALL NULL FROM vt0 WHERE ((+ (((NULL)IS NOT('#D'))))); -- 1ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)*(vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0 WHERE (CAST(LIKELY(x'fca6') AS REAL)); -- 0ms;
SELECT DISTINCT x'', PERCENT_RANK() OVER (), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND((vt0.c0 IN ()))) FROM vt0 NOT INDEXED WHERE ((((+ (x''))) NOT BETWEEN (((0.16435393799497422) IS FALSE)) AND (((((0.1203124780485132)AND('')))OR(NULL))))); -- 0ms;
SELECT (NOT (CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)), IFNULL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL) FROM vt0 GROUP BY ((((vt0.c0)OR(HEX(vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((((((vt0.c0 COLLATE RTRIM)OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((NOT (0.1251781947991839)))), (+ (vt0.c0)) COLLATE BINARY ORDER BY (~ (((vt0.c0)LIKE(vt0.c0)))); -- 1ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (((x'') NOT BETWEEN (0.10088882550099576) AND ('j!꺸Ek>+'))))) GROUP BY (+ (CAST(vt0.c0 AS BLOB))), CASE ((vt0.c0) ISNULL)  WHEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END, (NOT ((vt0.c0 IN (vt0.c0, vt0.c0)))), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1816913248 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (0xffffffff8bf0adc8)), json_insert(TYPEOF(vt0.c0), rtreenode(vt0.c0, vt0.c0), UNICODE(vt0.c0)) HAVING vt0.c0 ORDER BY ((((CAST(vt0.c0 AS BLOB))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0))<=((vt0.c0))))) ASC  NULLS FIRST;SELECT ALL ((((0.7975402811672927) IS FALSE))>(SUBSTR(vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<<(x''))) BETWEEN (COUNT(vt0.c0)) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 LIMIT -164148694; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS TEXT) COLLATE BINARY FROM vt0 WHERE ((((('|ণ1pa5') IS TRUE)) NOTNULL)) GROUP BY ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()); -- 0ms;
SELECT ALL (- ((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE ((~ (CAST(NULL AS REAL)))); -- 0ms;
SELECT ALL CASE (((vt0.c0))!=((vt0.c0)))  WHEN vt0.c0 THEN NULLIF(DISTINCT vt0.c0, vt0.c0) WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN 0.25622893363353827 THEN ((vt0.c0)+(vt0.c0)) ELSE TOTAL(vt0.c0) END FROM vt0; -- 0ms;
SELECT ((LOWER(vt0.c0))>(0.5340153052293176)), vt0.c0, (vt0.c0 COLLATE BINARY IN ()), TYPEOF(DISTINCT ((vt0.c0)>(vt0.c0))), ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (((((x'd66f')%(2.090734933E9)))IS(((x'bda9')>>(0Xffffffffd7196615))))); -- 0ms;
SELECT ALL ABS((~ (vt0.c0))) FROM vt0 WHERE (0.7705102820729112 COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT ALL CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL) FROM vt0 WHERE (NULL); -- 1ms;
SELECT DISTINCT CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC), ((x'f256')&(LOWER(vt0.c0))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM FROM vt0 WHERE (((((0.8536631209344455)GLOB('-1425805810')))*(((0x7c9e1555) IS TRUE)))); -- 0ms;
SELECT (((((((((((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))AND(vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(vt0.c0)))AND(((vt0.c0) NOT NULL))))AND((((vt0.c0))<=((vt0.c0))))) FROM vt0 WHERE (CAST(CASE WHEN '1688109135' THEN x'' END AS INTEGER)); -- 0ms;
SELECT ALL COUNT(vt0.c0) FILTER(WHERE ((vt0.c0)IS(CAST(vt0.c0 AS TEXT)))) OVER (), ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((vt0.c0))), vt0.c0, ((((0.7696240021353956) BETWEEN (vt0.c0) AND (vt0.c0)))<=((~ (vt0.c0)))), SUM(((vt0.c0) NOT NULL)) FILTER(WHERE ((vt0.c0) IS TRUE)) OVER () FROM vt0; -- 0ms;
SELECT ALL CASE WHEN x'' THEN AVG(vt0.c0) END FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)/(CAST(vt0.c0 AS TEXT))) FROM vt0 LIMIT 134892955; -- 0ms;
SELECT ALL (vt0.c0 IN ()) FROM vt0 WHERE (UPPER(DISTINCT TIME(NULL, x'', -5.4756258E8, NULL, NULL, -2073207487, 'Eb6g⃰'))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((vt0.c0 IN ())) OVER () FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((ROUND(vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0))==((vt0.c0))))) FROM vt0 WHERE (NULL COLLATE RTRIM); -- 0ms;
SELECT DISTINCT SUM(LIKE(vt0.c0, vt0.c0, 'k')) FROM vt0 WHERE (((0X55d018d7)%(((0.3246130526771075)/(x''))))) LIMIT 273778713; -- 0ms;
SELECT DISTINCT (((((NOT (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((-1578162297) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (NULL) GROUP BY CASE WHEN vt0.c0 COLLATE BINARY THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END HAVING (((((vt0.c0)) NOT BETWEEN (('')) AND ((vt0.c0)))) NOTNULL); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE), ((vt0.c0) IS FALSE), ((vt0.c0) IS FALSE))) AND ((((vt0.c0)<=(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) FROM vt0; -- 1ms;
SELECT ALL (((GROUP_CONCAT(vt0.c0), CAST(vt0.c0 AS NUMERIC), UPPER(DISTINCT vt0.c0)))>=((COUNT(*), TRIM(vt0.c0), ((x'')||(vt0.c0))))), ((vt0.c0)IS(vt0.c0)) COLLATE BINARY, CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), GROUP_CONCAT(vt0.c0) COLLATE NOCASE, FIRST_VALUE(vt0.c0) OVER () FROM vt0 WHERE (((((0.5984049254614121) BETWEEN ('429339832') AND (x'')))GLOB((~ (0xffffffff93f4e48e))))); -- 0ms;
SELECT ALL (- (CAST(vt0.c0 AS INTEGER))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 GROUP BY (((x'' IN ())) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) HAVING ((((vt0.c0) NOT NULL)) ISNULL); -- 0ms;
SELECT ALL TOTAL(((vt0.c0)||(vt0.c0))) OVER (), '-99739573', (- (CAST(vt0.c0 AS TEXT))) FROM vt0 ORDER BY ((((0.32352790314492574) BETWEEN ('-121594755') AND (x''))) ISNULL) DESC, CAST(UNLIKELY(x'') AS NUMERIC)  NULLS FIRST, (((0.38144475236953035, (((vt0.c0))>=((vt0.c0))), (+ (vt0.c0)), LIKELY(vt0.c0), vt0.c0 COLLATE BINARY))<((((vt0.c0) IS FALSE), (vt0.c0 IN ()), (~ (vt0.c0)), vt0.c0, ((vt0.c0)AND(vt0.c0))))); -- 1ms;
SELECT ALL ABS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))), ((((vt0.c0)!=(vt0.c0))) NOT BETWEEN (LIKELY(vt0.c0)) AND (GROUP_CONCAT(vt0.c0))), ((((vt0.c0 IN ()), (- (vt0.c0)), vt0.c0 COLLATE RTRIM))<>(((~ (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (0.935629911654701)), (((('')AND(0.8842618740955388)))AND(vt0.c0))))) FROM vt0 WHERE ((((0x5f4f1a8b)) NOT BETWEEN ((NULL)) AND (('3z'))) COLLATE BINARY); -- 0ms;
SELECT ALL '粑wH*55g' FROM vt0; -- 0ms;
SELECT ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS REAL))))AND(NULL)))OR(((vt0.c0)|(0.8392738316514649)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c0))=((vt0.c0))) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))<((~ (vt0.c0)))) DESC; -- 0ms;
SELECT vt0.c0 FROM vt0 GROUP BY CASE WHEN ((((vt0.c0)OR(858496074)))AND(vt0.c0)) THEN 0.20119168498509776 END HAVING CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE; -- 0ms;
SELECT RANK() OVER () FROM vt0 WHERE (TRIM(DISTINCT NULL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE WHEN MIN(vt0.c0, vt0.c0) THEN vt0.c0 END, vt0.c0, (((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ((DATETIME('0.7256383302477729', '+v?O', x'') IN ())); -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS INTEGER)) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS REAL) FROM vt0 LIMIT 2039457814; -- 0ms;
SELECT ALL ((vt0.c0) IS TRUE) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL CASE (~ (vt0.c0))  WHEN ((vt0.c0) BETWEEN ('-835233832') AND (x'')) THEN 0X199734b8 END, (((vt0.c0 IN ())) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (json_valid(vt0.c0))), CAST(vt0.c0 AS REAL) FROM vt0 WHERE ((('_6&ZUE\n')==(NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (((- (vt0.c0)))/(vt0.c0 COLLATE NOCASE)), ((vt0.c0) NOTNULL), CAST(TRIM(vt0.c0) AS BLOB) FROM vt0 WHERE (CAST(CASE WHEN 0.710061601328066 THEN '551975729' ELSE '490383131' END AS TEXT)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (x''))) NOTNULL) FROM vt0 WHERE (((json_array_length('-879221041', '-51959415')) NOT BETWEEN (CASE '.kM'  WHEN NULL THEN ' p' WHEN 0.7461272353723722 THEN '516206987' WHEN 'a4FZ' THEN x'' ELSE 0.5389576964084888 END) AND ('醑GJ' COLLATE BINARY)));SELECT DISTINCT (((vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((vt0.c0)%(vt0.c0))))) FROM vt0 GROUP BY (SQLITE_COMPILEOPTION_GET(vt0.c0) IN ()); -- 0ms;
SELECT ALL FIRST_VALUE((((vt0.c0 IN (vt0.c0)))GLOB(((vt0.c0) IS TRUE)))) OVER () FROM vt0; -- 0ms;
SELECT ((vt0.c0)AND(((((vt0.c0)OR(vt0.c0)))AND(NULL)))) FROM vt0; -- 0ms;
SELECT LEAD(CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE, vt0.c0, (((vt0.c0, '175848850', NULL)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), 0Xffffffff945fd6a2)) AND ((((NULL) NOTNULL), vt0.c0 COLLATE BINARY, ((vt0.c0)%(vt0.c0)))))) OVER ( ORDER BY ((((((vt0.c0)IS NOT(vt0.c0)))AND((((vt0.c0))>=((vt0.c0))))))AND(((vt0.c0) IS FALSE))) DESC  NULLS LAST) FROM vt0 GROUP BY (((((((((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)>>('429339832')))))AND((vt0.c0 IN ()))))AND(-1.955564418E9)), ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((- (vt0.c0)))))AND((~ (vt0.c0)))), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, 'i'))<=((vt0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE BINARY)) AND ((SQLITE_COMPILEOPTION_USED(vt0.c0), (((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))), UPPER(vt0.c0)))) HAVING ((vt0.c0) NOT NULL);SELECT DISTINCT vt0.c0 FROM vt0 GROUP BY ((vt0.c0 IN ()) IN ()), CAST(((vt0.c0)+(vt0.c0)) AS TEXT), ((((((((((vt0.c0)AND('l\rb')))OR(vt0.c0)))OR(vt0.c0)))AND('913550816')))=(((vt0.c0) NOT NULL))) HAVING ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))IS(CAST(NULL AS INTEGER))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'2c0f'))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)<=(vt0.c0))))  NULLS LAST; -- 1ms;
SELECT ALL ((TYPEOF(vt0.c0))%((vt0.c0 IN (vt0.c0, NULL)))), SUM(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) OVER (), ((((vt0.c0)<>(vt0.c0)))|(((vt0.c0) IS TRUE))) FROM vt0; -- 0ms;
SELECT DISTINCT ((x'')OR(vt0.c0)) COLLATE BINARY FROM vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ASC; -- 0ms;
SELECT DISTINCT vt0.c0, ((((vt0.c0)LIKE(vt0.c0))) ISNULL), (- (((vt0.c0) ISNULL))) FROM vt0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (LIKELY('Q0/')) AND (CAST(x'' AS TEXT)))); -- 0ms;
SELECT DISTINCT ((NULL) BETWEEN ((((vt0.c0))!=((0.06617590777231663)))) AND (((vt0.c0)/(0.47844094417147487)))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (vt0.c0)) COLLATE BINARY COLLATE BINARY FROM vt0 WHERE (((CASE '-1520562478'  WHEN x'' THEN 0.9817034215183363 WHEN 0.43938310312842976 THEN 1589742567 WHEN x'' THEN x'' ELSE '' END)<>((((x'')) NOT BETWEEN (('0.4166382311048461')) AND ((NULL)))))); -- 0ms;
SELECT CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL), ((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (0.8328594349968452)), ((vt0.c0)<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE ((((+ (x''))) NOT NULL)); -- 0ms;
SELECT COUNT(*), UPPER(DISTINCT CAST(vt0.c0 AS REAL)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (COUNT(*)) AND (CAST(NULL AS TEXT))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT((('/a') BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ((TOTAL(vt0.c0)) NOT BETWEEN (AVG(vt0.c0)) AND (((((((((vt0.c0)AND(vt0.c0)))AND('1685688760')))AND(vt0.c0)))AND(vt0.c0)))), (NOT ((~ (vt0.c0)))), SUM(((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN LIKELIHOOD(x'', 0.871487537027588) WHEN ((vt0.c0)==(vt0.c0)) THEN (~ (vt0.c0)) WHEN HEX(DISTINCT vt0.c0) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE COUNT(vt0.c0) END, TOTAL(CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), ((ROUND(vt0.c0, vt0.c0)) NOT BETWEEN ((((0.8103508583635896, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT ALL MAX(COUNT(*) COLLATE NOCASE) FROM vt0 LIMIT -1503984474;SELECT ALL CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC) FROM vt0; -- 4ms;
SELECT DISTINCT ((((x'')AND(json(vt0.c0))))AND(((vt0.c0)/(vt0.c0)))), vt0.c0, vt0.c0 FROM vt0 WHERE (CAST('' AS TEXT)); -- 0ms;
SELECT TOTAL(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL ((((((((((vt0.c0) IS TRUE))OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)-(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)&(vt0.c0)))) FROM vt0 WHERE (TRIM(((NULL) IS TRUE), (('-54273938') BETWEEN (NULL) AND ('-291121107')))); -- 0ms;
SELECT ALL (+ (NULLIF(vt0.c0, x'9f55'))), ((((vt0.c0)/(vt0.c0))) IS TRUE), ((((((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))))OR((~ (NULL)))))OR(CAST(vt0.c0 AS NUMERIC))) FROM vt0; -- 1ms;
SELECT ALL (vt0.c0 IN ()) FROM vt0 WHERE (CASE WHEN ((0.946090543931411) BETWEEN ('-1955564418') AND (0.42947678514536225)) THEN CAST(x'e1a3a3e9' AS NUMERIC) END); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((CAST(vt0.c0 AS REAL)))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC) FROM vt0 LIMIT 765236787; -- 0ms;
SELECT ((((NULL)AND((- (vt0.c0)))))OR(AVG(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (x'1748') AND (vt0.c0)) FROM vt0 ORDER BY ((((((vt0.c0))=((vt0.c0)))))>((LIKE(vt0.c0, vt0.c0, '9')))) ASC  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('-1251131446')))AND(vt0.c0)))<>(((0.6391561153416558)||(vt0.c0)))), ((NULL) IS TRUE), CASE GROUP_CONCAT(vt0.c0)  WHEN (vt0.c0 IN ('')) THEN ((0.380466059730849) NOTNULL) WHEN (~ (vt0.c0)) THEN HEX(DISTINCT vt0.c0) WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c0 IN (NULL, vt0.c0)) ELSE ((vt0.c0)>>(vt0.c0)) END FROM vt0 WHERE (json_patch((('') IS FALSE), (- (NULL)))); -- 1ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE))LIKE(((vt0.c0)&(vt0.c0)))), IFNULL((+ (vt0.c0)), COALESCE(DISTINCT vt0.c0, vt0.c0)), (((((vt0.c0))<((vt0.c0))))-(0x5031a507)) FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()), CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB), (+ ((+ (vt0.c0)))) FROM vt0 ORDER BY 0.9380588283757411  NULLS LAST, vt0.c0 DESC  NULLS FIRST LIMIT 43413241; -- 0ms;
SELECT x'' FROM vt0; -- 0ms;
SELECT DISTINCT ((MIN(vt0.c0)) IS TRUE) FROM vt0 WHERE (((-2034514944) BETWEEN ('') AND (NULL)) COLLATE BINARY) ORDER BY (((((vt0.c0)>(vt0.c0))))<=(((- (vt0.c0))))); -- 0ms;
SELECT (+ (CAST(vt0.c0 AS BLOB))) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0)!=(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE CAST(vt0.c0 AS TEXT) END FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((('')&(vt0.c0)))) FROM vt0 LIMIT -835233832 OFFSET -2345656; -- 0ms;
SELECT 'H|' FROM vt0 WHERE (((((CAST('LS{䫬O y' AS INTEGER))OR(IFNULL('[∓Og}', ''))))AND(('' IN ())))); -- 0ms;
SELECT ALL ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) IN ()) FROM vt0; -- 0ms;
SELECT '' FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((vt0.c0 IN ()))) FROM vt0 GROUP BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)|(((vt0.c0) IS FALSE))); -- 0ms;
SELECT DISTINCT (~ ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 ORDER BY vt0.c0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT MIN(vt0.c0, vt0.c0), SUM(x'')) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE '1959212348'  WHEN 114362524 THEN x'' END)>((~ ('1777480701'))))); -- 0ms;
SELECT ((((vt0.c0)%(vt0.c0))) NOTNULL) FROM vt0; -- 1ms;
SELECT DISTINCT json_quote((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) FROM vt0 WHERE ((((('1522438140') NOT BETWEEN (x'e02f') AND (x'f975'))) ISNULL)); -- 0ms;
SELECT LIKELY(DISTINCT vt0.c0) COLLATE BINARY COLLATE BINARY, '?7e㔼o-+', NULL FROM vt0 WHERE ((COALESCE(DISTINCT 0.2942151888015393, '558544442') IN ((('')IS(NULL))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)<<(vt0.c0)) IN ()), ((AVG(vt0.c0))>((NOT (vt0.c0)))), ((COALESCE(DISTINCT vt0.c0, vt0.c0))AND((- (vt0.c0)))), (UNLIKELY(DISTINCT vt0.c0) IN ()), ((((vt0.c0)/(vt0.c0)))>(((((vt0.c0)AND(vt0.c0)))OR(0.8643525534504544)))) FROM vt0 WHERE ('-1728053732'); -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)+(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL NULL FROM vt0 WHERE ((((+ (0.44841984469863094)))+(0.0547259638877966 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (+ (LIKELIHOOD(NULL, 0.8553089883835954))) FROM vt0 WHERE (CAST(((0.18812428048865626)%(x'')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|((((('{}')OR(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE COUNT(*)  WHEN (('-676837823')AND('-2019772579')) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE (NOT (vt0.c0)) END, CAST(MAX(vt0.c0) AS TEXT), 0Xffffffffa2eefdd9 FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0)*(vt0.c0))))<>((SUM(vt0.c0)))) FROM vt0 ORDER BY vt0.c0  NULLS FIRST; -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0)>>(vt0.c0))) OVER (), (NULL COLLATE NOCASE IN (vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT NULL))), CAST((((vt0.c0)) BETWEEN ((0xffffffff846d5d41)) AND ((0.0440564381666837))) AS REAL) FROM vt0 WHERE ((NOT (((0.5842844174889918)IS NOT(0Xfffffffffdda77f4))))); -- 0ms;
SELECT DISTINCT CAST((- (vt0.c0)) AS NUMERIC) FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS INTEGER)  NULLS LAST, (- (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC LIMIT -1538795313; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)=(vt0.c0)))) AND ((NULL))) FROM vt0; -- 0ms;
SELECT DISTINCT MAX(((vt0.c0) BETWEEN ('') AND (vt0.c0))) COLLATE BINARY FROM vt0 WHERE ((((('') NOT BETWEEN (x'1385') AND (x''))) IS TRUE)) ORDER BY (- (0.4602436284268846)) ASC; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS BLOB))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'db25', vt0.c0, vt0.c0))))LIKE(((x'')==(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(GLOB(vt0.c0, 0.19728849367632528))))AND(x'')))OR((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))))OR(((((vt0.c0)OR(vt0.c0)))AND(0.16648692560157352)))) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT '', 0.9261710970040059))>=(((0.5945389783627453)!=('S_Anu'))))); -- 0ms;
SELECT DISTINCT (0X507ae9cb COLLATE NOCASE IN ()) FROM vt0 WHERE (((CASE x''  WHEN 0.6307642981260555 THEN '0.3283511371659946' WHEN '-794085959' THEN '-1353891906' WHEN x'f35e' THEN 0.3419388449274585 END) BETWEEN ((('u?6')>(x''))) AND (((0xe437349)IS NOT(x''))))) ORDER BY '' DESC; -- 0ms;
SELECT ALL ((((((((TOTAL(vt0.c0))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(0.905753132181059)) FROM vt0 LIMIT -284144417; -- 0ms;
SELECT ALL ((vt0.c0) BETWEEN (x'ae7e') AND (vt0.c0)) COLLATE RTRIM, LEAD((('') NOTNULL), ((vt0.c0) IS FALSE), CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c0)==(x'')) END) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING), CASE NULL  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt0 WHERE (CAST(CASE 0xbca3c65  WHEN NULL THEN 0Xfffffffff2374cce END AS REAL)) ORDER BY highlight((- (vt0.c0)), ((vt0.c0)-(0Xffffffffee4242dc)), vt0.c0, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))  NULLS LAST, '455308112'; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)OR(vt0.c0 COLLATE NOCASE)))OR((NOT (vt0.c0)))))AND(json_extract(vt0.c0, vt0.c0))))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, (NOT (NULL)), MAX(((vt0.c0) NOTNULL)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY FROM vt0 WHERE ((((((NULL))>=((x'b37e'))))!=(((NULL)-(x'ba5a'))))) ORDER BY (('-763274570') BETWEEN (vt0.c0) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) DESC, CAST((((vt0.c0))<>((vt0.c0))) AS REAL) ASC; -- 0ms;
SELECT ALL ((vt0.c0)==(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((IFNULL(0.009317785479295737, '(B') IN (SUBSTR(x'4333', '1887961940')))); -- 0ms;
SELECT DISTINCT MIN(((vt0.c0)GLOB(vt0.c0))), vt0.c0, COUNT(SUM(vt0.c0)) FROM vt0 WHERE ((((NULL IN ()))&((('4N{')!=(NULL)))));SELECT DISTINCT CAST(vt0.c0 AS BLOB) FROM vt0 WHERE (((((0X30cad57c)>('1719521126'))) NOT BETWEEN (x'' COLLATE BINARY) AND (((x'')-(x''))))); -- 0ms;
SELECT DISTINCT NULLIF((- (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT (((((vt0.c0, vt0.c0, '1530105283')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0)), ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (HEX(NULL)) AND (AVG(vt0.c0))), ((((vt0.c0) ISNULL))OR((((vt0.c0))<>((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT UNLIKELY((((vt0.c0))>((vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) IS TRUE), (SUM(vt0.c0) IN ()) FROM vt0 WHERE ((((x'16e9', 0.9338356230878041, -1477246781)) BETWEEN ((((1360069628)<('')), (((('*H')AND('2&e夌PMo')))OR(x'')), 8.96675026E8 COLLATE NOCASE)) AND ((CAST('' AS TEXT), 1.777480701E9, ((NULL)|('BO\i(G')))))) GROUP BY vt0.c0, ((vt0.c0) BETWEEN ('1141617981') AND (vt0.c0)) COLLATE NOCASE, (((CASE WHEN vt0.c0 THEN vt0.c0 END))<((0.8646466525706306))) HAVING CAST((NOT (vt0.c0)) AS TEXT); -- 0ms;
SELECT ((((vt0.c0) IS TRUE))AND(((vt0.c0)<=(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt0 WHERE (((((((NULL) NOT BETWEEN (0.39580979177352227) AND (NULL)))OR(MIN('-1049779266', '1064402219', '', ''))))AND(((x'')*(x''))))) GROUP BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((vt0.c0 COLLATE NOCASE))) HAVING 0.6607425019634853; -- 0ms;
SELECT ((((vt0.c0)-(vt0.c0)))/(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((((((x''))=((1.130897584E9)))) IS FALSE)); -- 0ms;
SELECT ((SQLITE_VERSION()) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) ISNULL))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(vt0.c0 COLLATE BINARY)), ((vt0.c0) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (MAX(vt0.c0))), ((vt0.c0 IN ()) IN ()) FROM vt0 WHERE (ABS(DISTINCT (((0.6364115189187826, 0.5775024430144572, x'8804')) BETWEEN ((x'61b9', x'5e7c03a5', 0.9636421944794084)) AND (('燦<,', '-701997138', 0.26104548161766905))))) ORDER BY (((vt0.c0 IN (NULL)))LIKE(vt0.c0 COLLATE RTRIM)) DESC, (~ (CAST(0.6724803475400167 AS REAL)))  NULLS LAST, ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE DESC; -- 0ms;
SELECT DISTINCT SUM(CAST(x'' AS TEXT)), FIRST_VALUE((((- (vt0.c0)))||(((vt0.c0) NOT BETWEEN (0.637555051992503) AND (vt0.c0))))) OVER (), SUM(((vt0.c0)IS NOT(vt0.c0))) OVER (), (((vt0.c0 IN ()))>(((vt0.c0)IS(vt0.c0)))), (((- (vt0.c0))) BETWEEN (MAX(vt0.c0)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (load_extension(('' IN ())));SELECT DISTINCT (- (((NULL) IS FALSE))) FROM vt0 WHERE (((((((x'88cbf3e5')OR(0.6427434014001091)))AND(x'c40f')))!=(((((x'0ec7')OR(x'1db7')))OR(NULL))))) LIMIT -1877828156 OFFSET -1; -- 0ms;
SELECT ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) IS TRUE), CAST(vt0.c0 AS NUMERIC)))>=((((vt0.c0)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC), x''))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0 IN ())))>((((((-1525164644)OR(vt0.c0)))AND(vt0.c0))))), STRFTIME(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)%(vt0.c0)), GROUP_CONCAT(vt0.c0), ((vt0.c0)IS(vt0.c0)), SUM(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM FROM vt0 WHERE (LIKELIHOOD(DISTINCT CAST(x'' AS NUMERIC), 0.4857928870613427)) ORDER BY '2138079241'  NULLS LAST, ((vt0.c0) IS TRUE) COLLATE RTRIM  NULLS LAST, CASE WHEN TRIM(DISTINCT vt0.c0) THEN (((('8᛿鄤0Y{F3z')OR(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS BLOB) END DESC; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) FROM vt0; -- 0ms;
SELECT ((((((vt0.c0) ISNULL))OR((+ (vt0.c0)))))OR('2070715538')), FIRST_VALUE((((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND (((0.10818178881224416 IN ()))))) OVER (), CASE WHEN 0.4263536451535558 THEN ((vt0.c0)%(vt0.c0)) WHEN CAST(-1.97627965E9 AS REAL) THEN CAST(vt0.c0 AS INTEGER) WHEN vt0.c0 THEN (((vt0.c0))<=((vt0.c0))) END FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) BETWEEN (0x5eb25f1c6553d8b5) AND (vt0.c0)) END FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0)IS NOT(vt0.c0)))), (((vt0.c0)<(vt0.c0)) IN ()), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (((vt0.c0) NOT NULL))) FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((CASE x'7c0c'  WHEN 6.20442418E8 THEN '1367853400' WHEN x'21e7c3346c20' THEN x'' WHEN NULL THEN 'o-Kk.e躘(' ELSE x'da2f' END)) AND ((((x'') BETWEEN (-1e500) AND ('175848850')))))) GROUP BY ((LIKELY(vt0.c0))GLOB((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND (('', vt0.c0, vt0.c0))))) HAVING (((((vt0.c0, vt0.c0, NULL))==((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((+ (vt0.c0)))); -- 0ms;
SELECT ALL (- ((vt0.c0 IN (vt0.c0, vt0.c0)))), CAST(((vt0.c0)|(vt0.c0)) AS TEXT), (((vt0.c0) NOTNULL) IN ()), COUNT(*) FILTER(WHERE (((((((('-404634853')OR(NULL)))OR(vt0.c0)))AND(((0.279762093619764) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) OVER (), COUNT(*) FROM vt0; -- 0ms;
SELECT ALL vt0.c0, TOTAL(((((((((vt0.c0)OR(vt0.c0)))AND(x'1f99')))AND(vt0.c0)))OR(vt0.c0))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL CAST(x'' AS REAL), ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((((vt0.c0))=((vt0.c0)))) AND ((NOT (vt0.c0)))), vt0.c0 FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((NULL) NOT NULL), ((vt0.c0) ISNULL), (- ('-794085959')) FROM vt0 ORDER BY (CAST(vt0.c0 AS REAL) IN ()), 0.6893314111654979 LIMIT 486293315 OFFSET 805050265; -- 0ms;
SELECT DISTINCT CASE WHEN '-1211206455' THEN ((vt0.c0)||(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0))<=(('-1544744095', vt0.c0, vt0.c0))) END, ((vt0.c0)>(((vt0.c0)IS NOT(vt0.c0)))), AVG(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FILTER(WHERE '') OVER (), vt0.c0, '388955627' FROM vt0 WHERE (((TYPEOF('粑wH*55g')) ISNULL)); -- 0ms;
SELECT ALL GROUP_CONCAT(x'625d' COLLATE NOCASE) OVER () FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((('198022723'))<=((x'1097'))))); -- 0ms;
SELECT '1777480701', GROUP_CONCAT((~ (vt0.c0))), CASE ((vt0.c0)==(vt0.c0))  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END FROM vt0 LIMIT 1064402219; -- 0ms;
SELECT DISTINCT (((((vt0.c0))!=((vt0.c0)))) NOT NULL) FROM vt0 WHERE (CASE WHEN ((NULL)-(0X2179c151)) THEN ((x'')*(NULL)) ELSE 0x12d4808ad0731159 COLLATE NOCASE END) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) ASC, vt0.c0  NULLS FIRST; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) FROM vt0 WHERE (((('-1449457676', 0.05072296916561403, 'JX')) BETWEEN ((0.922850260479139, CASE x''  WHEN x'918e' THEN '1907504556' ELSE '-1159001849' END, IFNULL(x'', '-1816324357'))) AND ((CASE 0.20040203899806264  WHEN x'550b' THEN NULL WHEN -1.012543412E9 THEN '-998097264' WHEN '35290795' THEN '542599794' END, (('dJFv5◎rSD') NOTNULL), ('	xlR' IN ()))))); -- 0ms;
SELECT ALL CAST(vt0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM FROM vt0 WHERE ((((x'' IN ('|w'))) NOT BETWEEN ((x'' IN ())) AND ((('-373279412') NOT NULL)))); -- 0ms;
SELECT DISTINCT (((vt0.c0))<>(((NOT (vt0.c0))))) FROM vt0 WHERE (CASE WHEN (((0X31feb7c9))>=(('-51959415'))) THEN (((('-264384067')OR('ꫲ笱eG0䫬Q')))AND('\x')) WHEN (('')LIKE(799295209)) THEN CAST('' AS TEXT) WHEN (('1')<=(NULL)) THEN (NOT (NULL)) ELSE ((((0x3b353fb9)AND(x'65de')))OR('114362524')) END); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<>(vt0.c0))) NOT BETWEEN (0X2d3622ca) AND (json_patch(vt0.c0, vt0.c0))) FROM vt0;SELECT ALL (~ (NULLIF(vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 LIMIT -1535757331; -- 0ms;
SELECT DISTINCT (~ (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((CAST(0Xffffffff9edfb020 AS BLOB)) NOT BETWEEN ('' COLLATE NOCASE) AND (((0.4873296099700567)||(x''))))) LIMIT 958277439 OFFSET -1045015927; -- 0ms;
SELECT CASE x'c06f'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY, AVG(((vt0.c0)+(vt0.c0))) OVER (), CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) WHEN vt0.c0 COLLATE RTRIM THEN (NOT (vt0.c0)) WHEN 'B*( ' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END FROM vt0; -- 0ms;
SELECT ALL NTILE(CAST(vt0.c0 AS INTEGER) COLLATE BINARY) OVER () FROM vt0 WHERE (((((x'a5d1') BETWEEN (0.3131170437237323) AND (0xffffffffd0ab35b9)))%(((NULL) BETWEEN (x'') AND (0x45bcaba8))))); -- 0ms;
SELECT ALL ((vt0.c0)LIKE(vt0.c0)) COLLATE RTRIM, ((((x'' COLLATE BINARY)OR((vt0.c0 IN ()))))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'3249', x''))))), ((HEX(DISTINCT vt0.c0)) IS FALSE) FROM vt0; -- 1ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY vt0.c0 DESC  NULLS LAST), CAST(((vt0.c0)|(vt0.c0)) AS REAL), RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0)>(vt0.c0)))), '329159828' COLLATE BINARY, (((((vt0.c0))<((vt0.c0)))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 NOT INDEXED WHERE ((NOT ((+ (x''))))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) ELSE GROUP_CONCAT(vt0.c0) END FROM vt0 GROUP BY CAST(0Xffffffffffc05bb6 AS NUMERIC); -- 0ms;
SELECT DISTINCT CAST(MIN(vt0.c0) AS TEXT), (NULL IN ()), (((x'42e0')) BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL vt0.c0, ((LTRIM(vt0.c0)) BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0)IS NOT(vt0.c0)))), FIRST_VALUE(((((vt0.c0) IS FALSE)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)>(vt0.c0))))) OVER () FROM vt0 WHERE ((('e9SzkNz' COLLATE NOCASE) NOT BETWEEN ((('-257894220') NOT NULL)) AND (((x'4580')==(0.36122589524071824))))) LIMIT 1178312373 OFFSET 1303877390; -- 0ms;
SELECT ALL CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN x'' WHEN ((vt0.c0)IS(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'0bbb' END WHEN (vt0.c0 IN ()) THEN COUNT(*) ELSE NULL END, vt0.c0, (CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL), CASE x''  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c0) NOT NULL) END, (0X18407085 IN ()) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT (('-998097264' IN ()) IN ()) FROM vt0 GROUP BY (- ((NOT (vt0.c0)))), ((vt0.c0)>((NOT (x'')))), ((((vt0.c0) IS FALSE)) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((vt0.c0, vt0.c0, vt0.c0, 0.11774230330798585, vt0.c0)) NOT BETWEEN (((((' +<d', vt0.c0, 0.8549455929391798))=((vt0.c0, vt0.c0, vt0.c0))), vt0.c0, TOTAL_CHANGES(), CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.48690647256898456 END)) AND ((0.7822673447367301, vt0.c0, vt0.c0, -1.544744095E9, ((vt0.c0)==(vt0.c0))))), (((vt0.c0))>((((vt0.c0)<=(vt0.c0))))); -- 0ms;
SELECT ALL ((MAX(vt0.c0))IS(LIKELY(vt0.c0))) FROM vt0; -- 0ms;
SELECT COUNT((vt0.c0 IN (vt0.c0)) COLLATE BINARY) FROM vt0 WHERE (((('Lr4lm7%' IN ()))OR(((x'') BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT (~ (((vt0.c0)LIKE(NULL)))) FROM vt0; -- 0ms;
SELECT DISTINCT LEAD((((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((+ (vt0.c0)), (vt0.c0 IN (vt0.c0)), (x'8f73' IN ())))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) ISNULL))), CAST(vt0.c0 COLLATE BINARY AS INTEGER)) OVER () FROM vt0 WHERE (((RTRIM('o'))<<((- (')Yb.瓾DlM2'))))); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, '1130897584')) BETWEEN ((('1419557994' IN (vt0.c0, vt0.c0, vt0.c0)), ((vt0.c0)<(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((x'', ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE RTRIM))) FROM vt0 WHERE (((CASE WHEN NULL THEN '' ELSE NULL END)%(((((0.01523326355188559)AND('-SEKFx6k2')))OR(0.923406704963584))))) UNION ALL SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0))))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0)-(vt0.c0)))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (AVG(vt0.c0))) FROM vt0 WHERE (((((NULL) NOT BETWEEN ('Mo-nnY') AND (0Xffffffffffffffff))) NOT NULL)); -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM) NOTNULL) FROM vt0 WHERE ((((x'' IN ()))||((('7&Q2') NOT NULL)))); -- 0ms;
SELECT DISTINCT 0xffffffff8b70747e COLLATE BINARY FROM vt0 WHERE ((((((-1.471211887E9, 0.911250735239838, x''))<=(('', -412718237, 'Eᙢs|#')))) ISNULL)) LIMIT 324385144 OFFSET -952661944; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL CAST(MIN(vt0.c0) AS REAL) FROM vt0 WHERE (((x'feff' COLLATE BINARY)>>(((((0.12537756112923593)AND(0.020931764081099424)))AND('1963005529'))))) ORDER BY ((vt0.c0 COLLATE NOCASE)*((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, x'', vt0.c0))))) ASC; -- 0ms;
SELECT DISTINCT ((TYPEOF(vt0.c0)) IS FALSE), (((vt0.c0)>(vt0.c0)) IN (((vt0.c0) IS TRUE), vt0.c0 COLLATE BINARY)), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT (vt0.c0 COLLATE NOCASE IN ((- (vt0.c0)), CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (((((+ (x''))))>((CASE WHEN x'f26e' THEN 'R]' END)))); -- 1ms;
SELECT SUM(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) OVER () FROM vt0 WHERE ((((-7.57014124E8)) BETWEEN ((((((x'b731')AND(NULL)))OR(x'45eb')))) AND (('kꜛjv')))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)IS NOT(vt0.c0)) AS REAL) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0) ISNULL)) FILTER(WHERE ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (NULL) AND (CAST(vt0.c0 AS REAL)))) OVER () FROM vt0 WHERE (CAST((NOT (0.7364859231784044)) AS INTEGER)); -- 0ms;
SELECT ((x'')<<(SUM(vt0.c0))) FROM vt0 WHERE (json_valid((('-289839281')IS NOT('')))); -- 0ms;
SELECT ALL MAX(load_extension(0.4331888361484525)) FROM vt0 LIMIT 1873639616 OFFSET -1629507552;SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) NOT NULL), ((UPPER(vt0.c0))<>(((vt0.c0) IS FALSE))), GROUP_CONCAT(((vt0.c0) IS FALSE)) FROM vt0 WHERE (CAST((((('眝X46砟)')OR(x'')))AND(x'')) AS REAL)); -- 0ms;
SELECT DISTINCT HEX(DISTINCT x'ff9b') FROM vt0; -- 1ms;
SELECT DISTINCT SUM((vt0.c0 IN (vt0.c0))) OVER (), ((vt0.c0 COLLATE BINARY) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (GLOB(((x'')<(-257894220)), HEX(NULL))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULL); -- 0ms;
SELECT vt0.c0 FROM vt0 LIMIT -1815155551 OFFSET 1158682925; -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS(vt0.c0))) ISNULL), (((~ (vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((- (vt0.c0)))), COUNT(((vt0.c0) IS TRUE)), ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) NOT NULL))))OR(MAX(-165229806))), (+ (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE ((~ (('205004097' IN ())))); -- 0ms;
SELECT DISTINCT ((NOT (vt0.c0)) IN ()) FROM vt0 WHERE (((((x'') ISNULL))LIKE(((((NULL)AND('1888997665')))OR('-1955564418'))))); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE RTRIM FROM vt0 WHERE ((((- (0.6893010592120569))) NOT NULL)) ORDER BY (x'' COLLATE RTRIM IN ()), LIKELY(1.356850721436406E18), ((((vt0.c0)%(vt0.c0)))<=(json_array_length(104007023, vt0.c0)));SELECT ALL ((((-1186446012)+(vt0.c0))) IS TRUE) FROM vt0 WHERE (CASE CAST(1312178927 AS REAL)  WHEN ((0.7705102820729112) IS TRUE) THEN CASE x''  WHEN NULL THEN '-1089608973' END ELSE CASE WHEN 0x67d7ceaf THEN '0.4903500381809357' END END) GROUP BY ((((((vt0.c0) NOT NULL))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(LOWER(vt0.c0))), ((((vt0.c0) IS TRUE))/(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), 'O脩'; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0)))-((vt0.c0 IN ()))) FROM vt0 WHERE (((CASE NULL  WHEN 0.6669160946380365 THEN NULL ELSE '-788034834' END) IS TRUE)); -- 0ms;
SELECT ALL CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS TEXT) THEN (vt0.c0 IN (vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ((((((((SUM(vt0.c0))AND((vt0.c0 IN ()))))OR((((vt0.c0))<((vt0.c0))))))OR('1189223021')))OR(((vt0.c0)>(vt0.c0)))) FROM vt0 WHERE ((NULL COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND ('sO㕌|'))), TOTAL((vt0.c0 IN ())), MIN(((vt0.c0)IS('-963704544'))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)GLOB(TOTAL(vt0.c0))) FROM vt0 WHERE ((+ (CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT (((vt0.c0)%(vt0.c0)) IN ()) FROM vt0 GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)OR(vt0.c0)) AS BLOB) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE ((((x'', '-1769986340', '-963704544')) NOT BETWEEN ((((0.6532863806629492)AND(x'c560')), ((x'')<<(0.4622334107011906)), (0.2132021041953185 IN ()))) AND ((NULL, ((('7IXI', NULL, '1064880643'))!=((x'', 0.35369176903508703, NULL))), ((0.4014499745072113) ISNULL))))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0))) NOTNULL) FROM vt0 WHERE (((((~ (0.19792663157742563))))>((CAST('' AS NUMERIC))))); -- 0ms;
SELECT CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) FROM vt0; -- 1ms;
SELECT TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0 WHERE ((((NULL) BETWEEN (-757014124) AND (0.9165700847419198)) IN ())); -- 0ms;
SELECT ALL CAST((~ (vt0.c0)) AS INTEGER) FROM vt0 LIMIT 1765625166; -- 0ms;
SELECT (((((vt0.c0))<=((vt0.c0)))) ISNULL), CAST(SQLITE_SOURCE_ID() AS REAL), ((vt0.c0 COLLATE BINARY)==(CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (MIN(json_extract('765236787', 1742201836), ((x'')>=(x'')), CASE ''  WHEN 'I*5Sq\n' THEN 0.994459747413941 WHEN x'' THEN '%dn뻲J滹剂D' WHEN -7.94085959E8 THEN NULL WHEN x'' THEN x'' WHEN '' THEN x'' END, (((0.5018603633598542))=((x''))))) LIMIT -1773328082 OFFSET -2058452203 UNION SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL), SUM(((-1.186446012E9)||(vt0.c0)) COLLATE RTRIM), ((((~ (vt0.c0))))>=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.5611338977149513 THEN vt0.c0 ELSE vt0.c0 END))) FROM vt0 WHERE (x'');SELECT ALL ((((vt0.c0)>=(vt0.c0)))+(CAST(-1461756735 AS TEXT))) FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)|(vt0.c0)))))OR(((((-2.077572117E9)AND(vt0.c0)))AND(vt0.c0)))); -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)&(vt0.c0)), ((vt0.c0)<(vt0.c0)), TOTAL(vt0.c0))) AND ((MAX(vt0.c0), CAST(vt0.c0 AS REAL), ((vt0.c0)-(vt0.c0))))) FROM vt0; -- 1ms;
SELECT ((vt0.c0)||(x'' COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT NTILE(vt0.c0) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP), CAST((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, 0.07890523044093956, vt0.c0, vt0.c0))) AS REAL), (NULL IN ()) COLLATE BINARY FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT NULL)  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) ISNULL)  NULLS LAST;SELECT DISTINCT (((vt0.c0, UNLIKELY(NULL), load_extension(vt0.c0)))=((vt0.c0, MAX(vt0.c0), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))), ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN ('1163686728') AND (0.3292526752840177)), (((vt0.c0))==((((vt0.c0) IS TRUE)))) FROM vt0;SELECT DISTINCT (NOT ((NOT (vt0.c0)))) FROM vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST, ((vt0.c0)<<(((vt0.c0)<<(vt0.c0)))); -- 0ms;
SELECT ALL (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((vt0.c0 IN ()))))OR(GROUP_CONCAT(vt0.c0))))AND(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND('cC')) FROM vt0 WHERE (UPPER(DISTINCT x'') COLLATE RTRIM); -- 1ms;
SELECT ALL NTILE(((((LENGTH(vt0.c0))OR(((vt0.c0)!=(vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')))))) OVER ( ORDER BY (+ (1.461801699E9))) FROM vt0 LIMIT -433320122 OFFSET 180188541;SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0)||(vt0.c0)))), COUNT(*) OVER (), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM vt0 WHERE ((((0.5717014888228636) NOT BETWEEN (1.391813923E9) AND (0.695726897775041)) IN ((x'' IN ())))) ORDER BY CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC) DESC; -- 0ms;
SELECT DISTINCT x'' FROM vt0 LIMIT -1388613920 OFFSET -231256882; -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS BLOB)  WHEN PRINTF(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (~ (vt0.c0)) THEN TRIM(vt0.c0, vt0.c0) WHEN ((vt0.c0) NOT NULL) THEN '-1200505102' END, vt0.c0, CASE WHEN ((vt0.c0)&(vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((vt0.c0)*(vt0.c0)) END, (LAST_INSERT_ROWID() IN (((vt0.c0) BETWEEN (vt0.c0) AND ('\nL^fP?Ҧ')))), (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (NULL) AND (NULL)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((((((((vt0.c0)AND((NOT (vt0.c0)))))AND((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(UNLIKELY(vt0.c0))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)==('-1605425714')))))OR(CASE -3.36453085E8  WHEN NULL THEN vt0.c0 END)) FROM vt0 WHERE (x'') ORDER BY (((((((((+ (vt0.c0)))AND((+ (vt0.c0)))))AND((NOT (vt0.c0)))))OR(CAST(vt0.c0 AS REAL))))AND(vt0.c0)) DESC  NULLS LAST LIMIT 1064402219 OFFSET 1384144625; -- 1ms;
SELECT DISTINCT SUM(NULLIF(0.21496853741439437, vt0.c0)), ((vt0.c0)AND(((vt0.c0)!=(vt0.c0)))), (((vt0.c0)%(vt0.c0)) IN ()), vt0.c0, (MAX(vt0.c0, vt0.c0) IN ()) FROM vt0 WHERE ((((NULL)<<(0.9134714464737801)) IN ())) GROUP BY CASE vt0.c0  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) IS FALSE) END HAVING (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)!=(vt0.c0))) AND (((vt0.c0)>=(vt0.c0)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) IS TRUE))) DESC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.c0, NULL, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) ASC; -- 0ms;
SELECT ((TOTAL(vt0.c0))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((NULL)*(CAST(vt0.c0 AS INTEGER))), ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)||(vt0.c0)))), (((vt0.c0 IN (vt0.c0)))*((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CAST(CAST(NULL AS REAL) AS INTEGER) FROM vt0 WHERE (((CASE 0.4166382311048461  WHEN NULL THEN NULL WHEN NULL THEN NULL WHEN NULL THEN x'' END)AND(((('days'))>(('1085253260')))))); -- 0ms;
SELECT ALL RANK() OVER (), CASE (- (vt0.c0))  WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN (~ ('-4170826')) WHEN ((vt0.c0)<=(vt0.c0)) THEN (vt0.c0 IN ()) ELSE (+ (vt0.c0)) END, COUNT(CAST(vt0.c0 AS TEXT)) OVER (), (((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL)))), ((CAST(vt0.c0 AS TEXT))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN CAST(0.6659096800764671 AS TEXT) THEN ((((NULL)AND(NULL)))AND('Qw{')) END); -- 0ms;
SELECT ALL ((COALESCE(DISTINCT vt0.c0, '\nvභ!')) IS FALSE) FROM vt0 WHERE ((((((((((NULL IN ()))AND((('[S{䫬O y')AND('-320636487')))))OR((('0.9016096349324195')>=(x'')))))AND(((-336207691) NOTNULL))))OR(0.499771204128554))); -- 7ms;
SELECT DISTINCT vt0.c0, CASE WHEN ((vt0.c0)||(102170912)) THEN vt0.c0 ELSE vt0.c0 END, CAST('1267816205' AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))), COUNT(*), (((vt0.c0 IN ()))/(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (((NULL) NOTNULL)) LIMIT -768479730; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))), AVG(vt0.c0), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (((((((0xb417e52))>=((vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 GROUP BY vt0.c0 HAVING UPPER(vt0.c0); -- 0ms;
SELECT CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE FROM vt0 LIMIT -956003345 OFFSET -1544744095; -- 0ms;
SELECT DISTINCT 0.9680760082076564 COLLATE RTRIM COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL SUM(((vt0.c0)>(vt0.c0))) FROM vt0 WHERE (load_extension(((x'')>(NULL)))) GROUP BY (vt0.c0 IN (0.4784712099167787, vt0.c0)) COLLATE NOCASE, (~ (CAST(vt0.c0 AS NUMERIC))), vt0.c0, (((vt0.c0) BETWEEN (vt0.c0) AND (x'e4f5')) IN ()), ((((vt0.c0)IS(vt0.c0)))&(((((vt0.c0)OR(vt0.c0)))OR('1354216048')))) HAVING (- (((vt0.c0)%(vt0.c0))));SELECT ALL (NOT ((((vt0.c0))>((vt0.c0))))) FROM vt0 WHERE (CAST(CAST(x'' AS BLOB) AS NUMERIC)); -- 0ms;
SELECT CASE WHEN SQLITE_SOURCE_ID() THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (((vt0.c0))>=((vt0.c0))) END, (~ (CAST(vt0.c0 AS REAL))), (((+ (vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0 IN ())) ISNULL), TYPEOF(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), ((((((vt0.c0)%(vt0.c0)))OR((vt0.c0 IN ()))))OR(json_insert(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) FROM vt0;SELECT DISTINCT (((vt0.c0, vt0.c0, 0.10775365411845073)) BETWEEN ((((vt0.c0) ISNULL), vt0.c0, AVG(vt0.c0))) AND ((((vt0.c0) IS TRUE), (((vt0.c0))>((vt0.c0))), CAST(vt0.c0 AS INTEGER)))) FROM vt0; -- 0ms;
