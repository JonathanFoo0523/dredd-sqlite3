-- Time: 2024/06/07 22:40:14
-- Database: database8
-- Database version: 3.40.0
-- seed value: 2076601108
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL , c1 BLOB , c2 REAL ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c58; -- 1ms;
CREATE INDEX i9 ON t0(((c2)=(c0)) COLLATE BINARY COLLATE NOCASE ASC,((((1112932307 COLLATE RTRIM)AND(((c0) BETWEEN (c0) AND (c2)))))OR(((c2)IS NOT('667851401')))),(- (CASE WHEN c58 THEN c0 ELSE c58 END))) WHERE '骉gpRr4t'; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 1); -- 1ms;
CREATE INDEX i2 ON t0(NULL COLLATE RTRIM ASC,((((((-1985443148)>(c0)))AND(CAST(c2 AS NUMERIC))))OR(CAST(c2 AS REAL))) COLLATE RTRIM,UPPER(((((c58)OR(c0)))OR(c2))) COLLATE BINARY ASC) WHERE ((c2 COLLATE NOCASE)<(json_insert(c58, c58, '-544380730'))); -- 1ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0.9106071501911002), (''), (x''); -- 1ms;
PRAGMA application_id = -3455682364727859452; -- 2ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0.3983628730800828); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
REINDEX  t0; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('1112932307') WHERE ((SQLITE_SOURCE_ID())%((+ (vt1.c0)))); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
ANALYZE rt0; -- 1ms;
CREATE INDEX IF NOT EXISTS i78 ON t0(LTRIM(CASE c0  WHEN c0 THEN c0 ELSE c58 END) DESC,(((c58)) BETWEEN ((c58 COLLATE NOCASE)) AND ((((((c0)AND(c2)))OR(c0))))) ASC,CAST(((c0)>>(c58)) AS BLOB) COLLATE BINARY) WHERE ((CASE c2  WHEN c2 THEN c58 WHEN NULL THEN c58 WHEN c0 THEN c0 ELSE c2 END)&(c0)); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, languageid="lid", prefix=921); -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
REINDEX; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')LIKE(NULL)) AS NUMERIC); -- 1ms;
PRAGMA main.shrink_memory; -- 0ms;
UPDATE OR IGNORE vt0 SET lid=x''; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c58) VALUES (x'', x''); -- 0ms;
INSERT OR IGNORE INTO vt0(lid, c0) VALUES (x'', ' FM'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DROP INDEX "i9"; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO t0(c58, c0) VALUES (NULL, x'696d0b82'), (NULL, '-544380730'), (x'', NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0, c2) VALUES ('-544380730', 0.6129003320919706), (NULL, NULL), ('959368589', 0.9106071501911002); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2, c58) VALUES ('-913046720', '1112932307', NULL); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 1ms;
PRAGMA temp.cache_size = 5323407748951826236; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
VACUUM; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT OR FAIL INTO t0(c0, c58) VALUES (((((0Xffffffffb8754d05))!=((0.02269661608010487))) IN ()), '\JgbvNぽ'), (-992775558, 0.53715320424312), (-1985443148, NULL); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (x'7597011c'), (NULL), (6.67851401E8); -- 1ms;
DELETE FROM vt1 WHERE (((json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))>((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))); -- 0ms;
DELETE FROM t0; -- 1ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN ((NULL) NOT BETWEEN (vt1.c0) AND (NULL)) END FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL(((((((((vt1.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c2)))AND(t0.c0))), CASE WHEN CASE t0.c58  WHEN '0.3983628730800828' THEN t0.c2 ELSE vt1.c0 END THEN LIKELIHOOD(DISTINCT t0.c2, 0.21793399382017886) ELSE ((t0.c58) IS TRUE) END, (((~ (t0.c2))) BETWEEN (((t0.c2)>>(t0.c58))) AND (t0.c58)) FROM t0 GROUP BY x'';SELECT DISTINCT ((((vt1.c0))<>((t0.c0))) IN ()) FROM t0; -- 0ms;
SELECT ((t0.c0 COLLATE RTRIM)GLOB((NOT (vt1.c0)))), ((((((((NULL)OR(CAST(t0.c0 AS NUMERIC))))OR((((t0.c58)) BETWEEN ((vt1.c0)) AND ((t0.c58))))))AND(x'')))OR(COUNT(t0.c58))), (((((((((- (vt1.c0)))OR(HEX(DISTINCT vt1.c0))))AND((NOT (t0.c58)))))OR(((vt1.c0) NOT NULL))))AND(CASE WHEN vt1.c0 THEN t0.c58 WHEN t0.c58 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END)), ((t0.c0) NOT BETWEEN ((1.112932307E9 IN ())) AND ((((t0.c58)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))), (- (SUM(-913046720))) FROM t0;SELECT CAST(((t0.c58)*(t0.c58)) AS BLOB) FROM vt1 NOT INDEXED WHERE ((COALESCE(NULL, '-1734125472') IN ()));SELECT ALL CASE (- (t0.c0))  WHEN (- (t0.c2)) THEN '1778034773' WHEN COUNT(vt1.c0) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c58 END WHEN json(vt1.c0) THEN IFNULL(t0.c0, t0.c0) END FROM vt1;SELECT DISTINCT ((((t0.c0)!=(t0.c2))) NOTNULL) FROM vt1, t0 WHERE (((0.2096483630952256 COLLATE BINARY) BETWEEN (x'4d2d') AND ((('1778034773') BETWEEN (NULL) AND (x'c4d7'))))); -- 0ms;
SELECT DISTINCT ((0xffffffffb88a712b)&(((t0.c58) NOT BETWEEN (t0.c0) AND (t0.c2)))) FROM vt1, t0 WHERE ((- (NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY (((((vt1.c0 IN ()))OR('-2135796410')))AND(CAST(t0.c0 AS BLOB)))  NULLS LAST, (((t0.c2)) BETWEEN (((vt1.c0 IN (t0.c58)))) AND ((((NULL) IS TRUE))))  NULLS FIRST, CASE WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 COLLATE BINARY WHEN vt1.c0 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)) WHEN (NOT (0.6129003320919706)) THEN t0.c58 END  NULLS LAST), ((NULLIF('981085460', vt1.c0)) IS FALSE), ((COUNT(*)) IS TRUE) FROM t0 WHERE ((((NULL)%('-913046720')) IN ())) ORDER BY ((json_array_length(vt1.c0, vt1.c0))!=(((vt1.c0) BETWEEN (vt1.c0) AND ('E\nI_'))));SELECT DISTINCT NULL, 0xffffffffc20c6e2d, '1904059889' FROM t0, vt1 WHERE (CASE TRIM('1904059889', 0.2096483630952256)  WHEN 0.37653569621097793 COLLATE RTRIM THEN ('1778034773' IN ()) ELSE 0.3983628730800828 COLLATE BINARY END); -- 1ms;
SELECT ((CAST(t0.c2 AS TEXT))%(t0.c2 COLLATE NOCASE)), GROUP_CONCAT(((('-1208930179'))>=((t0.c2)))) OVER (), 0.3679844100750773 FROM vt1, t0 WHERE (((((NULL) NOT BETWEEN (0.12987875733807308) AND (x'')))GLOB((('')-('6.'))))); -- 0ms;
SELECT ALL ((((t0.c58) ISNULL))+((~ (x'3c9b')))) FROM vt1 INNER JOIN t0 ON ((((t0.c2) BETWEEN (vt1.c0) AND (t0.c2))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c2)<>(t0.c2)))) WHERE ((((CASE '765580825'  WHEN 0X1e680d40 THEN '1082244211' ELSE '-2135796410' END, (+ (x'')), (('317736002')>=(0.9026012375593151))))>=((CAST('-1200272123' AS BLOB), CASE ''  WHEN '-714279494' THEN '-1128572742' ELSE NULL END, TRIM(DISTINCT '0.3679844100750773'))))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c58)AND(-1039372755)))OR(t0.c58)))OR(t0.c2)))OR(t0.c58)))<=(CASE t0.c0  WHEN t0.c58 THEN t0.c58 END)) FROM t0 WHERE (((CAST(x'35d9' AS REAL)) NOT NULL)); -- 0ms;
SELECT DISTINCT ((0xffffffffc4d3727a) NOT NULL) FROM vt1; -- 0ms;
SELECT DISTINCT (('2.8|' COLLATE NOCASE) NOT BETWEEN (CAST(t0.c58 AS TEXT)) AND ((- (t0.c2)))), ((vt1.c0 IN (t0.c58)) IN ()), LAG(CAST(((((vt1.c0)AND(t0.c2)))OR(t0.c2)) AS BLOB), CAST(CASE t0.c0  WHEN t0.c2 THEN vt1.c0 END AS INTEGER), ((CAST(t0.c58 AS BLOB))&(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE x'' END))) OVER (), (MIN(t0.c0) IN ()), COUNT(*) OVER () FROM vt1, t0 WHERE (((((NULL) IS TRUE))|((((('-1577786586')AND(0.3754311473661036)))AND(x''))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t0.c58, t0.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c58, t0.c0)) AND ((t0.c0, vt1.c0, t0.c0)))), NTILE(json_quote(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) OVER ( ORDER BY ((((t0.c58)IS NOT(t0.c0))) BETWEEN (CASE t0.c58  WHEN t0.c2 THEN t0.c0 ELSE vt1.c0 END) AND (((t0.c2)&(t0.c58)))) ASC  NULLS LAST, (((t0.c2)) BETWEEN ((((t0.c58) BETWEEN (t0.c2) AND (vt1.c0)))) AND ((CAST(t0.c0 AS NUMERIC)))) DESC  NULLS LAST), CASE WHEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) THEN (((t0.c0, vt1.c0, NULL))>=((t0.c0, t0.c2, t0.c58))) WHEN CASE t0.c58  WHEN vt1.c0 THEN t0.c0 WHEN t0.c58 THEN t0.c0 WHEN t0.c2 THEN vt1.c0 ELSE t0.c2 END THEN (vt1.c0 IN ()) WHEN UNICODE(t0.c58) THEN ((t0.c2) NOT NULL) ELSE t0.c58 END FROM vt1 WHERE (((CAST(1100414806 AS REAL)) NOTNULL));SELECT ((((t0.c0)OR(NULL)))OR(t0.c2)) COLLATE BINARY FROM t0 WHERE (0.9106071501911002); -- 0ms;
SELECT ALL ((t0.c2 COLLATE RTRIM) NOT NULL) FROM t0 WHERE (CASE CASE WHEN x'' THEN 0.1489022357438372 END  WHEN '?Bl/b' COLLATE BINARY THEN (((0.6929216260046217)) NOT BETWEEN ((NULL)) AND ((NULL))) WHEN NULL THEN (('gR')%(0.8348715524199054)) WHEN ((((((((0.3627762817986314)AND('-1198886613')))OR(1.904059889E9)))AND('')))AND(-1145519064)) THEN ('p3}it' IN ('981085460', '-1549286761', 0.40658301558864096)) END); -- 0ms;
SELECT DISTINCT MAX((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) FROM vt1;SELECT (~ ((((t0.c2, t0.c0, t0.c2)) NOT BETWEEN ((t0.c58, t0.c58, t0.c0)) AND ((vt1.c0, t0.c58, -1145519064))))) FROM vt1;SELECT AVG(((((t0.c2)OR(vt1.c0)))OR(t0.c2))) OVER () FROM vt1, t0 WHERE (((((CAST(NULL AS NUMERIC))OR('-1734125472')))AND(('9ⴔ' IN ())))); -- 0ms;
SELECT DISTINCT CAST(CASE vt1.c0  WHEN t0.c58 THEN t0.c58 WHEN t0.c0 THEN t0.c2 WHEN 0.0 THEN t0.c58 END AS BLOB) FROM vt1 WHERE (COALESCE(DISTINCT CASE 0.8515639877406666  WHEN x'' THEN 7.65580825E8 ELSE NULL END, (('NN') NOTNULL), ((0.2096483630952256)>>(0.6012521755221336)), CASE WHEN x'' THEN NULL ELSE NULL END));SELECT ALL CAST((t0.c2 IN ()) AS INTEGER) FROM t0 WHERE (((((x'04e3')<<('1283685446')))<<((((0.6012521755221336, 0.8348138985199377, NULL)) NOT BETWEEN ((1.778034773E9, NULL, NULL)) AND (('1011894767', NULL, '454514555')))))); -- 0ms;
SELECT ALL ((((((t0.c58) NOT BETWEEN (t0.c2) AND (vt1.c0)))OR(t0.c58 COLLATE RTRIM)))AND(t0.c58 COLLATE RTRIM)) FROM vt1;SELECT DISTINCT MAX(((t0.c58)LIKE(vt1.c0))) FROM vt1 WHERE ((((('') BETWEEN ('Qo^0') AND ('1365667431')))IS(((x'') IS FALSE))));SELECT TOTAL(t0.c2) FILTER(WHERE ((((NULL)OR(((t0.c0) IS FALSE))))OR(t0.c58))) OVER () FROM t0, vt1 WHERE (CASE WHEN CAST(NULL AS TEXT) THEN ((0.6959939451557503)<(x'')) WHEN NULLIF('', NULL) THEN x'81cb46b2' WHEN '0.6929216260046217' COLLATE BINARY THEN (0xffffffffbe02e5f8 IN ()) ELSE (('MgvfK?䧯]v') IS FALSE) END) LIMIT -1647525643; -- 1ms;
SELECT DISTINCT (((vt1.c0) IS TRUE) IN (((t0.c0) IS TRUE))) FROM t0 WHERE (((((((x'fc47', '1506012085', -1.039372755E9, '-2027772543', 1506012085)) BETWEEN (('1836572058', 1082244211, '136234211', 0x3d0955d3, '1833020985')) AND ((NULL, 0.9237962113681076, 228162173, 1506012085, '粋渭I5[Y'))), CASE WHEN '0zSH]' THEN x'' END, ((((0.8705522268631285)AND(0.6237926412517751)))OR('2墺cxOSrbQ'))))>((((0.1350878970676247)=('z*]㭀')), ((NULL)==(0X0)), (('0.3627762817986314')OR(0.9788334454115105))))));SELECT (((+ (t0.c58))) NOT BETWEEN (MAX(NULL)) AND (((t0.c0) IS TRUE))) FROM vt1, t0 GROUP BY CAST((NOT (t0.c0)) AS REAL), (x'' IN (t0.c58, CAST(NULL AS BLOB))), (vt1.c0 IN ()) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT t0.c2 FROM t0, vt1; -- 0ms;
SELECT ALL GROUP_CONCAT(t0.c58 COLLATE RTRIM COLLATE NOCASE), (((t0.c0 IN ()))-(t0.c2)), (((((vt1.c0, t0.c58, t0.c58))==((vt1.c0, t0.c0, -1200272123)))) NOT NULL) FROM vt1;SELECT DISTINCT '-811469741', (((NOT (t0.c58)))>(COALESCE(vt1.c0, t0.c2))), x'' FROM t0, vt1 WHERE ((((((((x'3903a126')) NOT BETWEEN (('-714279494')) AND ((0.5394165420396713))))OR(LOWER(DISTINCT -8.11469741E8))))OR(CAST('-2030144746' AS TEXT)))); -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT t0.c0, 0.12677971636581187) COLLATE BINARY FROM vt1;SELECT ALL CAST(CASE WHEN t0.c2 THEN t0.c58 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL), TRIM(COUNT(vt1.c0)), ((0.6640320339109715) IS TRUE) FROM t0, vt1; -- 0ms;
SELECT ALL CASE (((t0.c0, t0.c0, vt1.c0)) BETWEEN ((t0.c58, vt1.c0, ' FM')) AND ((t0.c2, t0.c58, NULL)))  WHEN ((t0.c58) ISNULL) THEN t0.c2 COLLATE RTRIM WHEN ((t0.c2)+(vt1.c0)) THEN GLOB(t0.c2, t0.c0) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c58 END THEN TRIM(vt1.c0, t0.c2) ELSE (t0.c2 IN ()) END FROM vt1, t0 GROUP BY ((((((((CASE t0.c58  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c58 END)OR(t0.c0)))OR((vt1.c0 IN ()))))OR((((NULL, t0.c58, x'd90b'))==((vt1.c0, vt1.c0, 'b-'))))))OR(CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE t0.c2 END)) ORDER BY ((((((vt1.c0)AND(t0.c0)))AND(t0.c0))) IS FALSE)  NULLS FIRST; -- 1ms;
SELECT t0.c2, CAST(CASE WHEN t0.c0 THEN t0.c58 WHEN vt1.c0 THEN t0.c58 WHEN t0.c0 THEN vt1.c0 ELSE t0.c58 END AS NUMERIC), COUNT(*) FROM vt1, t0 WHERE ((('' COLLATE NOCASE) NOTNULL)) LIMIT -258528077 OFFSET -1692177397; -- 0ms;
SELECT ALL x'', ((((((((COUNT(t0.c58))OR(((t0.c0)IS NOT(t0.c0)))))AND(t0.c2)))OR((NOT (t0.c2)))))AND((t0.c0 IN ()))), ((AVG(vt1.c0)) BETWEEN (t0.c0 COLLATE RTRIM) AND ((NOT (t0.c2)))) FROM vt1 WHERE (CASE WHEN x'efe4' COLLATE NOCASE THEN (+ (NULL)) END);SELECT COUNT(*) FROM vt1 ORDER BY (('1024021971') NOT BETWEEN (((((((((t0.c0)OR(vt1.c0)))OR(t0.c2)))OR(t0.c2)))OR(t0.c2))) AND (CAST(NULL AS BLOB)))  NULLS FIRST;SELECT DISTINCT CASE WHEN LIKE(vt1.c0, t0.c58, '?') THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) END FROM vt1 WHERE ((((NULL IN (NULL, 0xffffffffcfdce2dd, 0.9018681798273268)))||(((0.3983628730800828) NOT BETWEEN ('317736002') AND ('-1208930179')))));SELECT ALL ((((CAST(vt1.c0 AS REAL))OR(MIN(t0.c0))))OR(((vt1.c0)+(t0.c58)))) FROM vt1;SELECT DISTINCT (((((vt1.c0)) NOT BETWEEN ((t0.c2)) AND ((vt1.c0)))) NOT NULL) FROM t0, vt1 WHERE ((CASE 0.8848145276998433  WHEN x'd363' THEN NULL ELSE x'c1b5' END IN ())) ORDER BY (((CASE t0.c2  WHEN t0.c0 THEN vt1.c0 ELSE t0.c2 END))<>((879622027))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT t0.c0, (((t0.c0)<(vt1.c0)) IN ()), ROW_NUMBER() OVER () FROM vt1, t0; -- 0ms;
SELECT t0.c0 COLLATE BINARY FROM t0; -- 0ms;
SELECT ALL CAST((((t0.c58)) BETWEEN ((t0.c58)) AND ((t0.c0))) AS INTEGER) FROM t0, vt1 WHERE ((+ (((1120940159)==(NULL))))) GROUP BY ((t0.c2) NOTNULL), ((((NULL) NOT BETWEEN (t0.c2) AND (t0.c58))) NOT BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (QUOTE(vt1.c0))), vt1.c0; -- 0ms;
SELECT AVG((((t0.c2)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) FROM t0;SELECT t0.c0 FROM vt1, t0 WHERE (CASE x''  WHEN NULL THEN x'' END COLLATE NOCASE); -- 0ms;
SELECT CAST((x'' IN (t0.c58)) AS NUMERIC) FROM t0, vt1 WHERE ((((('-1145519064' IN ()), ((('510135616'))<((NULL))), '?6?Ev' COLLATE NOCASE))>(((('-1734125472')|(x'18766371')), (NOT (0xfffffffff6aaf56f)), ((0xfffffffff4cad465)/('>蒜^X_')))))) UNION ALL SELECT ALL 1.011894767E9 FROM t0, vt1 WHERE (CAST(json_array_length(0.6383961132121115, NULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((CAST(t0.c0 AS REAL))AND(((t0.c2)<>(t0.c0)))))OR(((('MgvfK?䧯]v'))>((t0.c0))))) FROM vt1;SELECT CAST(((t0.c58)=(vt1.c0)) AS REAL), LAST_VALUE(t0.c0) OVER (), NTILE((+ ((NOT (t0.c2))))) OVER () FROM t0, vt1; -- 0ms;
SELECT ((vt1.c0)/(((t0.c2) IS TRUE))) FROM vt1 LIMIT 0;SELECT DISTINCT NTH_VALUE(LIKE(t0.c0 COLLATE NOCASE, NULL), t0.c2) OVER () FROM vt1, t0 ORDER BY (CAST(t0.c58 AS TEXT) IN (((t0.c58) ISNULL))) ASC; -- 0ms;
SELECT DISTINCT MIN(CAST(t0.c58 AS REAL), ((t0.c58) IS FALSE)) FROM t0, vt1 WHERE ((+ (((x'')/(0.3983628730800828))))); -- 0ms;
SELECT ((((t0.c0)>(t0.c2)))AND(t0.c2 COLLATE NOCASE)) FROM t0, vt1 GROUP BY (- (t0.c58)) COLLATE BINARY HAVING t0.c58; -- 1ms;
SELECT ALL t0.c2 FROM t0; -- 0ms;
SELECT ALL SUM(((t0.c58)>>(t0.c58))) OVER (), (((t0.c58, t0.c2, t0.c2)) BETWEEN (((+ (vt1.c0)), HEX(t0.c0), 0.4691942250113217)) AND ((CASE WHEN '2127920763' THEN t0.c2 END, (+ (t0.c0)), ((vt1.c0) IS TRUE)))), ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE RTRIM FROM t0 WHERE (((((('-1958913281') IS TRUE)))<(((~ (x'')))))) ORDER BY ((((NULL)IS(1.283685446E9)))LIKE(t0.c2)) ASC;SELECT DISTINCT ((SUM(t0.c58)) BETWEEN ((t0.c2 IN ())) AND (((t0.c58) IS TRUE))), (- (t0.c58 COLLATE BINARY)), ((((t0.c58)=(t0.c2)))=((- (t0.c58)))), (+ (t0.c0)) COLLATE NOCASE, (((((NULL)) BETWEEN ((t0.c58)) AND ((t0.c58))))%(((t0.c58) NOT NULL))) FROM vt1, t0 WHERE ((((x'a42179e1' IN ()))IS(CASE 0.8848145276998433  WHEN 0.3627762817986314 THEN 0.7550706403827973 END))); -- 0ms;
SELECT DISTINCT t0.c58 FROM vt1 WHERE ((((0X4275fb11) BETWEEN (NULL) AND (0x3bb01db7)) IN ()));SELECT (- ((- (vt1.c0)))) FROM t0, vt1 WHERE (((1.833020985E9 COLLATE BINARY) ISNULL)); -- 1ms;
SELECT ALL CAST(((x'')<=(t0.c58)) AS NUMERIC) FROM t0, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT t0.c58, LEAD((t0.c2 COLLATE BINARY IN (NULL)), t0.c58, (((~ ('}噴')))GLOB((t0.c58 IN ())))) OVER (), x'eb18' FROM t0, vt1; -- 0ms;
SELECT ALL ((t0.c0)GLOB(((t0.c2) IS FALSE))) FROM vt1 WHERE (((+ ('1283685446')) IN ()));SELECT DISTINCT (- (((vt1.c0)||(t0.c0)))) FROM t0 WHERE (((DATETIME(0xfffffffff2651ace, 0Xffffffffa7f92522, '-2098222591')) BETWEEN (CASE 0X6d41ae39  WHEN '0.40658301558864096' THEN 0.01598996278426701 WHEN 0.6876317643771079 THEN x'e3c6' WHEN 'V+' THEN NULL END) AND (('' IN ()))));SELECT (x'491ccbf7' IN ()) FROM vt1, t0 GROUP BY x'', (((((t0.c0)<(t0.c2)), ((t0.c58) BETWEEN (t0.c0) AND (t0.c0)), '930895403' COLLATE BINARY, LIKELIHOOD(t0.c58, 0.46598510792352466), SUBSTR(t0.c58, t0.c58)))<>((t0.c2, CAST(t0.c58 AS TEXT), CAST(t0.c58 AS BLOB), (((t0.c58)) BETWEEN ((t0.c58)) AND ((t0.c2))), ((t0.c2) NOT BETWEEN (t0.c58) AND (t0.c2))))), (((- (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN t0.c2 END) AND ((- (vt1.c0)))) HAVING t0.c0; -- 0ms;
SELECT MAX(((t0.c58) IS TRUE)) FROM vt1, t0 GROUP BY CASE WHEN (+ (t0.c58)) THEN ((vt1.c0)<<(t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c58)))AND(t0.c2)))OR(vt1.c0)) END; -- 0ms;
SELECT DISTINCT AVG(((t0.c58) IS TRUE)) FILTER(WHERE ((((t0.c58)>=(vt1.c0)))!=(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) OVER () FROM vt1 WHERE ((~ (((NULL)-(-1.145519064E9))))) LIMIT -730240534;SELECT DISTINCT PERCENT_RANK() OVER (), AVG(((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c0))), ((0.6383961132121115) BETWEEN (t0.c2) AND (t0.c0)) COLLATE NOCASE FROM vt1 LIMIT 1112932307 OFFSET 194552929;SELECT DISTINCT (((CASE t0.c0  WHEN t0.c0 THEN t0.c2 END))<>((vt1.c0))), COUNT(*), ((((((((t0.c58)AND(CASE WHEN t0.c2 THEN t0.c58 END)))AND(1.7976931348623157E308)))OR(MIN(t0.c0))))AND(((((0.8346653093101598)OR(vt1.c0)))AND(t0.c58)))) FROM vt1, t0 WHERE ((((((((((NULL)AND(NULL)))AND(x'fecc')))OR(0.9461506371507596)))OR(NULL)) IN (CASE WHEN NULL THEN '1283685446' WHEN '(綪' THEN -241921243 WHEN '&93nowkqiv>^' THEN '' END))); -- 3ms;
SELECT DISTINCT MIN(((t0.c0) IS FALSE)) FROM t0, vt1 WHERE ((NOT (((x'6ee8') NOT NULL)))); -- 0ms;
SELECT DISTINCT (((t0.c58)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c58)))) AND ((UPPER('')))) FROM vt1 GROUP BY ((((t0.c0)/(t0.c2))) NOT NULL) LIMIT -1280773615 OFFSET 740271904;SELECT t0.c0 FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0) IS TRUE) IN ()) FROM t0, vt1 WHERE ((NOT (NULL))); -- 0ms;
SELECT DISTINCT ((t0.c0)<<((t0.c2 IN (t0.c2, vt1.c0)))), x'', CASE WHEN CASE WHEN t0.c58 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c0)AND(t0.c0)))AND(t0.c58)) END FROM vt1 WHERE (CAST((('')!=('&93nowkqiv>^')) AS INTEGER));SELECT DISTINCT (((vt1.c0 IN ())) NOT BETWEEN (COUNT(0.3679844100750773)) AND ((~ (t0.c2)))) FROM t0, vt1 WHERE (CASE WHEN ((NULL)GLOB(NULL)) THEN x'' ELSE (NOT (0.6708024239242794)) END) GROUP BY CAST(((vt1.c0)<(vt1.c0)) AS REAL); -- 0ms;
SELECT CAST((('0.8348715524199054')>(t0.c2)) AS TEXT), ((((t0.c2)=(vt1.c0))) BETWEEN (t0.c58 COLLATE BINARY) AND (NULL)), (((t0.c58) NOT BETWEEN (t0.c2) AND (vt1.c0)) IN ()) FROM vt1, t0; -- 0ms;
SELECT vt1.c0 FROM t0 GROUP BY ((((((t0.c58)AND(vt1.c0)))AND(t0.c2)))/(CAST(t0.c58 AS REAL)));SELECT DISTINCT (((('-1628793751') BETWEEN (t0.c58) AND (t0.c2))) IS TRUE) FROM vt1, t0 ORDER BY t0.c58 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((GROUP_CONCAT(t0.c2))OR(((t0.c58)/(t0.c2)))))AND(((vt1.c0)%(t0.c58)))) FROM vt1 WHERE (((CASE 0.07060835319054137  WHEN 'aH<' THEN NULL WHEN x'' THEN 'L' WHEN 0.8278984288979083 THEN '879622027' ELSE 0.4497160663614084 END)IS NOT(((NULL) NOT BETWEEN ('-2015952549') AND (0X4081bc73)))));SELECT ((((1318109789)&(t0.c2)))*(CAST(vt1.c0 AS BLOB))) FROM t0;SELECT (((((t0.c2, t0.c58, t0.c0))==((t0.c58, vt1.c0, t0.c58)))) BETWEEN (((vt1.c0)IS(t0.c0))) AND ((+ (x'')))), ((((((t0.c58) IS TRUE))OR(((t0.c58) NOT BETWEEN (vt1.c0) AND (t0.c2)))))OR(CAST(t0.c58 AS NUMERIC))), INSTR((((t0.c58))!=((t0.c58))), '0.8348138985199377') FROM t0;SELECT DISTINCT ((((((vt1.c0)GLOB(0.9900131954784241)))OR(((t0.c58)==(t0.c58)))))AND('-36586788')) FROM vt1, t0 WHERE (((0X359243e4)<<(CAST('0.3983628730800828' AS BLOB)))); -- 0ms;
SELECT DISTINCT (((vt1.c0, t0.c2, t0.c58)) BETWEEN ((NULL, ((((t0.c0)OR(0.654223813777181)))OR(vt1.c0)), RTRIM(t0.c58))) AND (((+ (x'')), json(t0.c2), t0.c58 COLLATE RTRIM))) FROM vt1 NOT INDEXED WHERE ((((('' IN (0.37653569621097793, NULL))))=((((x'') NOT BETWEEN (x'f3e6031b') AND (NULL))))));SELECT x'' FROM t0 WHERE (CAST((((0.38437856466186826))<((''))) AS REAL)) GROUP BY ((((CASE t0.c0  WHEN t0.c2 THEN vt1.c0 END)OR(((t0.c0)>>(t0.c2)))))AND(CAST(t0.c0 AS REAL))) HAVING GROUP_CONCAT((~ (t0.c0)));SELECT DISTINCT (((t0.c0) BETWEEN ('1836572058') AND (t0.c58)) IN (COUNT(t0.c58))) FROM t0 WHERE (((NULL)>((('-1145519064')>>(NULL))))) GROUP BY ((t0.c0) BETWEEN (x'') AND (vt1.c0)) COLLATE BINARY;SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((((t0.c2) ISNULL))) AND ((vt1.c0 COLLATE RTRIM))), CASE WHEN ((t0.c2) ISNULL) THEN vt1.c0 ELSE (t0.c58 IN ()) END, ((((COUNT(t0.c58))AND(t0.c58 COLLATE RTRIM)))AND('7205717')) FROM t0 WHERE ((((((((0.7550706403827973, '1071414698', 'ah<')) NOT BETWEEN (('-1125191673', 0.2283147566632001, 0.7003795587046527)) AND ((x'25e79055', NULL, 1794291103))))OR((('^쐨&8A5') NOT NULL))))AND((~ (NULL)))));SELECT ((((((((((t0.c58)>(vt1.c0)))AND((((t0.c2)) NOT BETWEEN ((t0.c58)) AND ((''))))))OR(((((((((vt1.c0)AND(t0.c58)))AND(t0.c2)))AND(t0.c0)))AND(vt1.c0)))))OR(((((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))AND(t0.c58)))OR(t0.c58)))AND(vt1.c0)))OR(t0.c2)))))AND((vt1.c0 IN ()))) FROM vt1, t0 WHERE ((x'' COLLATE RTRIM IN (((0x69faa855)LIKE('1809408323'))))); -- 0ms;
SELECT DISTINCT rtreenode((~ (vt1.c0)), ((((t0.c58)AND(t0.c2)))OR(vt1.c0))) FROM t0, vt1 WHERE (((((('nl', x'9bf76ed7', x'1341')) BETWEEN ((0.9900131954784241, x'', NULL)) AND ((x'', NULL, 0.6012521755221336)))) IS TRUE)) GROUP BY ((('oHt&]}>' IN (t0.c58, t0.c0))) NOT BETWEEN (t0.c0) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ORDER BY ((TIME(t0.c0, t0.c58, vt1.c0, t0.c58, t0.c0)) IS FALSE)  NULLS LAST, x'' DESC  NULLS LAST; -- 0ms;
SELECT ALL x'', (((((0x4e90c25d)OR(t0.c0)))OR(t0.c2)) IN ()), (((t0.c2)) NOT BETWEEN (((+ (vt1.c0)))) AND ((((t0.c58)OR('靝䴅'))))) FROM vt1;SELECT ALL RANK() OVER () FROM vt1, t0; -- 0ms;
SELECT DISTINCT (COUNT(-730240534) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT '&&lY,uX&/' FROM vt1, t0; -- 0ms;
SELECT ALL NULL FROM vt1, t0 WHERE (CASE WHEN 9.30895403E8 THEN x'' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT ((MIN(t0.c0)) IS FALSE) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((t0.c2 IN ()) IN ()), (CAST(t0.c2 AS REAL) IN ((((t0.c2))<=((t0.c0))))), CASE WHEN AVG(t0.c0) THEN CASE WHEN t0.c58 THEN x'8d47' ELSE t0.c58 END WHEN (t0.c0 IN ()) THEN ((((((((t0.c0)OR(vt1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) WHEN ((t0.c2) ISNULL) THEN ((vt1.c0)<=(t0.c2)) END FROM vt1 WHERE (((x'')<(((((0.0738705398161823)OR(NULL)))AND(-220173494)))));SELECT DISTINCT 0X7fa5e576 FROM t0 WHERE ((((((1809408323, 0.6959939451557503, 9.59368589E8)) NOT BETWEEN ((x'', NULL, NULL)) AND (('_', NULL, x''))))IS NOT(((x'')LIKE(0Xffffffffd65301ca))))); -- 0ms;
SELECT ALL MAX(vt1.c0) COLLATE RTRIM FROM t0;SELECT DISTINCT (((vt1.c0, t0.c0, t0.c58)) BETWEEN ((t0.c0 COLLATE BINARY, 0Xffffffffec381a7b, ((((t0.c0)OR(t0.c58)))AND(t0.c58)))) AND (((t0.c58 IN (vt1.c0, t0.c2)), (t0.c58 IN ()), ((((t0.c0)OR(t0.c2)))OR(t0.c58))))) FROM vt1 WHERE ((((0.49045479528482294, (- (886408348)), (('941144661') NOT BETWEEN (NULL) AND (NULL))))==((('-156568209' IN ()), (((886408348))<((x'ec1f'))), CAST('O/,㞬' AS TEXT)))));SELECT DISTINCT CASE CASE t0.c58  WHEN t0.c0 THEN vt1.c0 WHEN t0.c2 THEN vt1.c0 WHEN t0.c58 THEN vt1.c0 END  WHEN CAST(t0.c58 AS TEXT) THEN (((t0.c58)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE t0.c2 COLLATE NOCASE END FROM t0 ORDER BY ((((((t0.c2)||(vt1.c0)))OR(t0.c2 COLLATE BINARY)))AND(7.65580825E8));SELECT DISTINCT (- ((NOT (t0.c2)))) FROM t0, vt1 WHERE (CASE ('~Ft鑩袇J 1X' IN (NULL, x'016a'))  WHEN NULLIF(DISTINCT NULL, x'b0d5') THEN (- ('/pk(')) ELSE CASE WHEN 0.08171119285657114 THEN 0xfffffffff6aaf56f END END); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT CASE t0.c58  WHEN t0.c2 THEN vt1.c0 WHEN vt1.c0 THEN t0.c58 WHEN t0.c2 THEN vt1.c0 END), (CASE 0.8456628248462194  WHEN t0.c0 THEN vt1.c0 ELSE t0.c58 END IN ()), ((NULL)OR(0.8899367726049899)) FROM vt1 LIMIT 2033116088 OFFSET -656140720;SELECT ALL CASE WHEN x'cb9b6f1e' COLLATE RTRIM THEN CAST(vt1.c0 AS BLOB) ELSE ((vt1.c0) ISNULL) END FROM vt1, t0 WHERE (CAST((((x'', NULL, '-1244972224'))<>((x'af67', x'', x''))) AS NUMERIC)); -- 0ms;
SELECT ALL ((t0.c58) NOT NULL) FROM vt1, t0; -- 0ms;
SELECT CAST(LOWER(t0.c2) AS REAL), (((t0.c0)) NOT BETWEEN (((t0.c2 IN (t0.c0, t0.c2)))) AND ((QUOTE(t0.c0)))), GROUP_CONCAT(vt1.c0) OVER () FROM vt1, t0 GROUP BY CAST((((t0.c2))<>((t0.c0))) AS TEXT) HAVING (((t0.c58 IN ())) NOTNULL); -- 0ms;
SELECT DISTINCT CASE ((vt1.c0)IS(t0.c2))  WHEN ((t0.c0)|(t0.c0)) THEN highlight(t0.c2, t0.c2, t0.c0, t0.c2) WHEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN t0.c58 COLLATE NOCASE WHEN ((t0.c58)|(t0.c2)) THEN LIKELIHOOD(DISTINCT t0.c58, 0.87955239793191) END FROM vt1, t0 WHERE (CASE (- (''))  WHEN ((x'') BETWEEN (x'') AND ('-807607587')) THEN CASE WHEN x'' THEN 0.255928889991238 ELSE '0.6383961132121115' END END); -- 0ms;
SELECT CASE WHEN x'50ab' THEN CAST(t0.c58 AS TEXT) ELSE ((vt1.c0)AND(t0.c58)) END, ((CAST(t0.c0 AS REAL))IS(((((t0.c2)OR(t0.c2)))OR(vt1.c0)))), 0.3741146133475419 FROM vt1 WHERE (((('P' IN (-2.28255026E8)))AND((NULL IN ()))));SELECT ((CAST(t0.c0 AS BLOB)) ISNULL) FROM t0, vt1 INDEXED BY i2 WHERE (((((((NULL)OR(x'456c')))AND(0.9954757311909039))) IS TRUE));SELECT (NULL IN ()) FROM vt1 WHERE (0.058684652132055204); -- 0ms;
SELECT ALL CASE WHEN CAST(t0.c58 AS BLOB) THEN t0.c58 COLLATE NOCASE WHEN t0.c0 THEN ((((t0.c58)OR(t0.c2)))AND(vt1.c0)) WHEN CAST(0.3679844100750773 AS TEXT) THEN vt1.c0 COLLATE NOCASE ELSE (~ (t0.c2)) END FROM vt1, t0 WHERE (TYPEOF(DISTINCT 0.09488793796240425)) LIMIT 1212340712 OFFSET -1045054092; -- 7ms;
SELECT DISTINCT (COUNT(*) IN ()), (((CASE vt1.c0  WHEN t0.c0 THEN t0.c58 END))<=((CASE t0.c0  WHEN vt1.c0 THEN t0.c2 WHEN t0.c2 THEN '-992775558' WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END))), t0.c58 FROM vt1, t0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c0 AS BLOB) AS REAL) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (NOT (((t0.c58)%(t0.c0)))) FROM t0; -- 0ms;
SELECT CASE ((t0.c2) NOT NULL)  WHEN NULL THEN CASE WHEN 510135616 THEN t0.c58 ELSE vt1.c0 END WHEN -1.244972224E9 THEN AVG(t0.c2) WHEN (((t0.c0))!=((vt1.c0))) THEN CASE t0.c2  WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0) IS FALSE) END FROM vt1 WHERE ((NOT (CAST('-574755741' AS TEXT))));SELECT DISTINCT ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (CAST(t0.c58 AS TEXT)) AND (((t0.c58)*(t0.c58)))), SUM(((vt1.c0) NOT BETWEEN (t0.c2) AND (t0.c0))), ((((((((t0.c58)AND('-1244972224')))AND(t0.c0)))AND(((t0.c0) NOT NULL))))OR((vt1.c0 IN ()))), COUNT((t0.c58 IN ())), COUNT(((NULL) IS TRUE) COLLATE RTRIM) FROM t0, vt1; -- 0ms;
SELECT ALL 0.025073594107280717 FROM t0, vt1; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((t0.c2)OR(t0.c2)))OR(t0.c0)) COLLATE RTRIM, (((NOT (t0.c2)))*(t0.c2 COLLATE BINARY))) OVER ( PARTITION BY (NOT (t0.c58 COLLATE BINARY)), (((vt1.c0 IN (t0.c0)))||(CASE WHEN vt1.c0 THEN t0.c58 END))) FROM t0 WHERE (0.06253381022791538);SELECT ALL NULL FROM vt1; -- 0ms;
SELECT ((((t0.c2) BETWEEN (NULL) AND (t0.c2)))%(CASE WHEN t0.c58 THEN t0.c2 ELSE t0.c58 END)), CUME_DIST() OVER (), 'po' FROM t0 WHERE (TRIM(((0.9305270898799781) NOT BETWEEN ('45wJV仆c)#') AND (0.02398779477953883)), CASE WHEN x'' THEN NULL END)); -- 1ms;
SELECT ((t0.c2) NOT BETWEEN ((t0.c58 IN (t0.c0))) AND (((t0.c58) ISNULL))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c58)>(vt1.c0)) AS REAL) FROM vt1 WHERE (((('-522988395', '-544380730', '-1985443148')) NOT BETWEEN (((- (x'')), ABS(x''), CAST(0.4747662778342565 AS BLOB))) AND ((TYPEOF('⡴V5v\r+w'), -662389712, ((NULL) NOT BETWEEN (x'') AND ('LM[\?Z'))))));SELECT CAST(CAST('-372309396' AS TEXT) AS NUMERIC) FROM vt1 WHERE (((CASE WHEN 'po' THEN NULL END)>(LOWER(DISTINCT '')))); -- 0ms;
SELECT ALL MAX((t0.c2 IN ())) FROM vt1 WHERE (((((CASE ''  WHEN '1640223466' THEN '' ELSE x'' END)AND(((((((((((((x'')OR('>蒜^X_')))OR(0xffffffff9b15285f)))AND(NULL)))OR(x'')))OR(x'')))OR('')))))OR(LIKE(0.6105471387669612, 0.3755427701078662)))); -- 3ms;
SELECT SUM(0.09545573358451465) FILTER(WHERE ((((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR('e5픸W\nR-'))) OVER ( ORDER BY (((((((((t0.c0)OR(t0.c58)))AND(vt1.c0)))OR(t0.c2)))OR(t0.c58)) IN ('G!')) ASC) FROM t0 WHERE (((317736002)=(NULL)) COLLATE RTRIM);SELECT ALL ((t0.c2 COLLATE NOCASE)/(TYPEOF(vt1.c0))) FROM vt1 WHERE (((((0.2819263623805881)AND('72166598')))AND('TRUE')) COLLATE BINARY);SELECT ALL SQLITE_SOURCE_ID() FROM vt1 ORDER BY ((((t0.c58)<=(t0.c58)))-(x'')) ASC  NULLS FIRST, CAST(t0.c58 AS BLOB) COLLATE NOCASE DESC  NULLS LAST, (((t0.c0, t0.c58, t0.c58)) NOT BETWEEN ((((t0.c0) ISNULL), CAST(t0.c2 AS BLOB), CAST(t0.c0 AS TEXT))) AND ((((t0.c58) NOT BETWEEN (t0.c0) AND (t0.c2)), (('809563058') ISNULL), t0.c0)));SELECT ALL ((t0.c0) NOT NULL), (((t0.c2, t0.c58, t0.c58)) BETWEEN ((t0.c58, (~ (vt1.c0)), (t0.c0 IN ()))) AND ((vt1.c0, CAST(t0.c0 AS INTEGER), ((t0.c0) NOT NULL)))), ((((0Xffffffff9bb2ad0d)AND((NOT (vt1.c0)))))OR((+ (t0.c0)))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)/('0.8515639877406666')))AND(CAST(vt1.c0 AS REAL))))AND(((NULL) ISNULL))))AND(json_insert(t0.c0, t0.c2, t0.c0))))OR((((t0.c58))!=((vt1.c0))))) FROM vt1 WHERE (NULL);SELECT ALL (COUNT(t0.c58) IN ()) FROM t0, vt1 WHERE (0.6095830251727015 COLLATE NOCASE); -- 0ms;
SELECT AVG(((t0.c0) NOTNULL)), (((((t0.c58) NOT BETWEEN (t0.c0) AND (t0.c58)), NULL COLLATE RTRIM, ('{5v8ᰜ' IN ())))>((COALESCE(DISTINCT t0.c2, t0.c0), (vt1.c0 IN ()), ABS(DISTINCT t0.c0)))), ((CAST(vt1.c0 AS NUMERIC))IS NOT(MAX(t0.c58, 0xffffffffe48b965c))) FROM t0;SELECT DISTINCT UPPER((+ (t0.c58))), (((((t0.c2, t0.c2, t0.c58)) NOT BETWEEN ((vt1.c0, t0.c58, t0.c2)) AND ((t0.c58, t0.c0, t0.c0)))) NOT BETWEEN (SUM(t0.c58)) AND (t0.c58)), CASE WHEN MAX(t0.c2) THEN t0.c0 END, CAST(NULL AS TEXT), ((t0.c58) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE FROM vt1, t0 WHERE (((CAST(NULL AS TEXT))>>((+ ('_'))))) GROUP BY GLOB(CAST(t0.c58 AS BLOB), x'03f6'); -- 0ms;
SELECT DISTINCT (t0.c2 IN ()), NTH_VALUE(((x'')>(CASE t0.c0  WHEN t0.c2 THEN vt1.c0 WHEN t0.c58 THEN t0.c2 WHEN t0.c2 THEN t0.c0 END)), (- (((vt1.c0) BETWEEN (t0.c0) AND (t0.c2))))) OVER (), (((t0.c0 IN (vt1.c0)))AND(((((vt1.c0)AND(t0.c0)))OR(t0.c2)))), ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c58))) ISNULL), vt1.c0 FROM vt1, t0 WHERE (((CAST(x'9b3ca897b1f6' AS BLOB)) IS FALSE)); -- 0ms;
SELECT ALL CAST(CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END AS TEXT), UNLIKELY(CASE WHEN vt1.c0 THEN vt1.c0 END), (((t0.c58 IN ())) NOT BETWEEN ((t0.c58 IN ())) AND (((((((((t0.c2)AND(t0.c58)))AND(t0.c0)))AND(t0.c2)))OR(t0.c58)))) FROM t0;SELECT ALL t0.c0 FROM vt1, t0 WHERE (((IFNULL(x'', '-1244972224')) NOTNULL)) LIMIT 140460438 OFFSET 624389063; -- 0ms;
SELECT DISTINCT (((~ (t0.c2)))>(vt1.c0 COLLATE NOCASE)), AVG((t0.c58 IN (t0.c58, vt1.c0))) OVER (), (vt1.c0 IN ()) FROM vt1, t0 WHERE ('~ft鑩袇j 1x' COLLATE RTRIM) GROUP BY (((t0.c2)%(0.873171188393143)) IN ()) HAVING ((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))) IN ()); -- 0ms;
SELECT ALL CASE WHEN (((vt1.c0, t0.c2, t0.c0)) NOT BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((t0.c58, t0.c2, vt1.c0))) THEN ((vt1.c0)IS NOT(t0.c2)) ELSE GROUP_CONCAT(t0.c58) END FROM t0 LIMIT 88228892 OFFSET -124327862;SELECT CASE WHEN ((((((((((((((((t0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(t0.c58)))OR(t0.c58)))OR(t0.c0)))OR(t0.c0)))OR(t0.c58)))OR(t0.c0)) THEN CASE vt1.c0  WHEN t0.c58 THEN t0.c0 END ELSE ((t0.c58)IS(NULL)) END FROM t0 WHERE ((((((NULL IN ()))AND('\r')))AND(x'')));SELECT ALL NULL FROM t0, vt1 WHERE ((((x'b680', '172307455', '-964362838')) NOT BETWEEN (('136234211', '0.49045479528482294', 'ꡕe&솎A')) AND (('', NULL, NULL))) COLLATE BINARY) ORDER BY HEX((('-712355657')!=(t0.c58))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN x'1d6c' END, LTRIM((t0.c2 IN ()), (((t0.c2))!=((t0.c58)))), rtreenode(LIKELIHOOD(vt1.c0, 0.7254063737412044), t0.c2) FROM vt1 LIMIT -1586945598;SELECT ALL TRIM(DISTINCT t0.c2) COLLATE NOCASE FROM t0 WHERE ((NOT (CASE '-1958913281'  WHEN NULL THEN 0.17458137957376085 WHEN '-907726857' THEN x'4497' WHEN NULL THEN '710578804' WHEN NULL THEN x'' WHEN 0.3229509025612721 THEN 0.04449548361823952 ELSE '1954245614' END))) LIMIT 1106762862; -- 0ms;
SELECT t0.c0 FROM vt1 ORDER BY t0.c2 DESC  NULLS FIRST;SELECT DISTINCT CASE '545732524' COLLATE BINARY  WHEN CASE t0.c2  WHEN 'P' THEN vt1.c0 END THEN ((t0.c58) NOT BETWEEN (t0.c2) AND (t0.c0)) ELSE 0.6095830251727015 END FROM vt1 GROUP BY ((((t0.c2) NOTNULL)) NOT BETWEEN ((t0.c58 IN ())) AND (((NULL)<<(t0.c58)))) HAVING SQLITE_VERSION();SELECT DISTINCT (t0.c0 COLLATE RTRIM IN ()) FROM t0, vt1; -- 0ms;
SELECT ALL t0.c58, SUM((t0.c0 IN (t0.c58))) OVER ( ROWS (t0.c0 COLLATE BINARY IN ()) PRECEDING), t0.c58 FROM t0, vt1 WHERE ((x'' IN ()) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT ALL vt1.c0 FROM t0, vt1 WHERE (TIME(CAST(NULL AS REAL), ((0.836007262088098) BETWEEN (-2030144746) AND (NULL)), ABS(DISTINCT NULL))); -- 0ms;
SELECT ALL ((t0.c2) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT ((-1.208930179E9)IS((~ (t0.c2)))), ((CAST(t0.c0 AS TEXT)) IS TRUE), COUNT((((t0.c2, vt1.c0, t0.c0)) BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((vt1.c0, t0.c2, vt1.c0)))) COLLATE RTRIM, ((((NULL) NOT NULL)) NOT NULL), CAST((t0.c0 IN ()) AS REAL) FROM t0, vt1 WHERE (((CASE '1506256620'  WHEN '-1985443148' THEN 0.9871632302223226 ELSE x'6956e4d35af5' END)<=(((((NULL)AND('-1312151530')))AND('{5v8ᰜ'))))) INTERSECT SELECT ALL '-241921243', CAST(((t0.c58) IS FALSE) AS NUMERIC), TOTAL((((('<A')OR(t0.c58)))OR(t0.c2))), CASE WHEN ((t0.c58) NOT NULL) THEN ((t0.c0)%(t0.c0)) END, ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c58 THEN t0.c2 WHEN t0.c0 THEN t0.c58 WHEN x'' THEN vt1.c0 END)>((((t0.c0)) BETWEEN ((t0.c58)) AND ((t0.c58))))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (0.5223945675117768 IN ()) FROM vt1 WHERE (x'bd802e03'); -- 0ms;
SELECT (NOT (((((vt1.c0)AND(t0.c2)))AND(vt1.c0)))), (((t0.c0)) NOT BETWEEN ((((('711322441', 0.2979057194127941, t0.c58)) BETWEEN (('1600489607', t0.c0, t0.c2)) AND ((t0.c58, 0Xffffffff8c3f5057, t0.c58))))) AND ((t0.c2))), CAST((~ (NULL)) AS NUMERIC), (((t0.c58)) NOT BETWEEN (('r8_,(RkCk')) AND ((vt1.c0))) COLLATE BINARY, ((~ (t0.c0)) IN ()) FROM t0, vt1; -- 1ms;
SELECT ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c58 THEN t0.c2 WHEN t0.c58 THEN t0.c0 ELSE t0.c0 END)IS((t0.c2 IN (vt1.c0)))) FROM t0, vt1 WHERE (SUBSTR(0.7550706403827973, 0X46b5f0d4) COLLATE RTRIM); -- 0ms;
SELECT ALL CAST(CAST(t0.c2 AS REAL) AS TEXT), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c2)) COLLATE NOCASE, TYPEOF((+ (t0.c0))) FROM vt1, t0; -- 0ms;
SELECT json_patch((((('-1200272123')AND(t0.c2)))AND(t0.c0)), CAST(vt1.c0 AS TEXT)) FROM t0 LIMIT -815562227;SELECT ((((((((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c58)))OR(t0.c58)))OR(t0.c0))) IS FALSE) FROM vt1, t0 WHERE ((+ ((('809563058')|('vFL괍ꈯ09b)'))))) LIMIT -1427008985 OFFSET -522988395; -- 0ms;
SELECT DISTINCT SUM(CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c58 END COLLATE NOCASE), ((SUM(t0.c58)) NOTNULL), (~ (t0.c0)) FROM vt1;SELECT DISTINCT CAST(t0.c2 COLLATE BINARY AS BLOB) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (0xffffffffd56cf5ba IN ()), GROUP_CONCAT(t0.c0 COLLATE BINARY) OVER (), ((1.506012085E9)IS NOT(CAST(vt1.c0 AS TEXT))) FROM t0, vt1; -- 1ms;
SELECT ALL CASE WHEN t0.c58 COLLATE NOCASE THEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END END FROM vt1 ORDER BY (+ ((- (vt1.c0))));SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((((((t0.c2)OR(t0.c0)))OR(t0.c2)))) AND ((CAST(0Xffffffffeb0dc488 AS TEXT)))) FROM vt1 WHERE (((CASE WHEN NULL THEN 0.6841251590149969 WHEN x'd9d5' THEN x'' WHEN x'6ca02ad9' THEN NULL ELSE 0Xfffffffff6aaf56f END) NOTNULL));SELECT DISTINCT (0Xffffffffcc82fc31 IN ()) FROM vt1 ORDER BY ((((t0.c58) NOT BETWEEN (t0.c2) AND (t0.c0))) NOT NULL), t0.c2 DESC, ((ABS(DISTINCT vt1.c0)) ISNULL) ASC  NULLS FIRST;SELECT DISTINCT CAST(AVG(t0.c58) AS INTEGER) FROM t0, vt1 WHERE ((((1.809408323E9)GLOB('')) IN ())); -- 1ms;
SELECT DISTINCT vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT (((~ (vt1.c0))) NOT NULL), CAST(((((t0.c0)AND(t0.c0)))AND(t0.c2)) AS BLOB), NTH_VALUE('1640223466', '') OVER () FROM t0 WHERE ((((x'')) NOT BETWEEN ((0.8571759907665443)) AND ((((0.6345847696749058) BETWEEN (0.6918863558938816) AND ('-1')))))) GROUP BY NULL;SELECT DISTINCT ((t0.c2) IS TRUE) COLLATE BINARY FROM t0, vt1; -- 0ms;
SELECT CASE WHEN COUNT(*) THEN ((t0.c0) NOT NULL) END, (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))OR(vt1.c0 COLLATE RTRIM)), CASE CASE x''  WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END  WHEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) END FROM vt1, t0 WHERE ((((((0.12819529380700512) IS TRUE)))<((NULL)))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (t0.c2) AND (t0.c58)))LIKE(((((t0.c0)OR(t0.c0)))AND(t0.c2)))) FROM vt1 WHERE ((x'' COLLATE RTRIM IN (((('-1208930179')) NOT BETWEEN (('')) AND ((0.5976610504020919))), (('-1692177397')|('p0')))));SELECT DISTINCT ((((vt1.c0)<(t0.c2)))>((NOT (t0.c58)))), IFNULL(DISTINCT ((t0.c2) BETWEEN (vt1.c0) AND (t0.c2)), t0.c0), (CAST(vt1.c0 AS INTEGER) IN ()) FROM vt1;SELECT ALL (((vt1.c0 COLLATE BINARY, CAST(vt1.c0 AS INTEGER), (+ (t0.c2))))==((TRIM(DISTINCT t0.c2), (t0.c58 IN (t0.c58)), CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c2 END))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((NULL)&(((0.07519542068202578) NOTNULL))) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(((((vt1.c0)OR(t0.c58)))OR(t0.c0)) AS TEXT) FROM t0;SELECT (((((t0.c2, t0.c2, 0X22b30c9f)) BETWEEN ((x'', t0.c2, t0.c2)) AND ((t0.c58, vt1.c0, vt1.c0))))>=(vt1.c0 COLLATE NOCASE)) FROM vt1, t0; -- 1ms;
SELECT DISTINCT (LIKELY(t0.c2) IN ((- (t0.c58)))) FROM t0, vt1 WHERE (CASE WHEN ((-9.92775558E8)>('454514555')) THEN (('!f_''-WL<R')<=(NULL)) WHEN (((('')AND(x'')))AND(0.5215831241994348)) THEN CASE ''  WHEN x'' THEN '' WHEN x'' THEN x'' WHEN x'acdd' THEN NULL WHEN ')p' THEN NULL WHEN 'TRUE' THEN x'' END WHEN (('510135616')>=('IJ')) THEN (x'2350' IN ()) WHEN (+ (-1481385720)) THEN ((0.21272197992745012) BETWEEN (0x6f52575) AND ('-1997138127')) WHEN (2127920763 IN ()) THEN '2102587646' ELSE ((((1230448756)AND('?F')))OR(0.2096483630952256)) END) LIMIT 1425408379 OFFSET 1844692988; -- 0ms;
SELECT ALL '1980864349' FROM t0; -- 0ms;
SELECT ((((((vt1.c0)AND(t0.c58)))AND(vt1.c0)))*(vt1.c0)) FROM vt1, t0 WHERE ((NOT (((0.6542335274893977) NOT NULL)))) GROUP BY ((((CAST(t0.c0 AS INTEGER))OR(t0.c2)))OR((vt1.c0 IN ()))), ((((((t0.c2) IS FALSE))AND(((vt1.c0)>=(t0.c0)))))OR((t0.c2 IN ()))), ((TYPEOF(DISTINCT t0.c58))OR(((t0.c0)>(t0.c2)))) HAVING (~ (x'')); -- 0ms;
SELECT ALL MAX(COUNT(t0.c2) COLLATE NOCASE) FROM vt1, t0;SELECT DISTINCT ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ('(	hV⡭\r' COLLATE BINARY) AND (vt1.c0 COLLATE BINARY)), ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (((((t0.c58)AND(t0.c58)))AND(t0.c2))) AND ((((t0.c58))<((x''))))), CAST((((vt1.c0, t0.c2, t0.c2)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((t0.c58, vt1.c0, t0.c2))) AS TEXT) FROM t0 WHERE ((- ('1045787921')));SELECT DISTINCT (+ (t0.c2)), ((CAST(t0.c58 AS REAL)) IS TRUE), ((((t0.c0) BETWEEN (t0.c58) AND (x'')))|((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((vt1.c0, t0.c0, 0.632924257393869))))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((t0.c58) ISNULL))GLOB(SUM(t0.c2))) FROM vt1 WHERE (CAST(0xffffffff9cf171be AS REAL)) ORDER BY CASE t0.c58  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN vt1.c0 THEN t0.c58 WHEN t0.c2 THEN x'' ELSE t0.c58 END COLLATE RTRIM;SELECT ALL TOTAL((t0.c0 IN ())) OVER (), ((((t0.c0)>>(vt1.c0))) NOT NULL), ((((t0.c2)AND(t0.c2)))AND(t0.c0)) COLLATE RTRIM FROM vt1 WHERE (((TRIM(DISTINCT x'', x'')) BETWEEN (UNLIKELY(DISTINCT '1065256741')) AND ((x'' IN ('Y嘔⿡'))))) LIMIT 1212340712;SELECT ALL COUNT(((vt1.c0)<>(t0.c0))) OVER ( ROWS ((((t0.c2)AND(t0.c0)))OR(t0.c2)) COLLATE BINARY PRECEDING) FROM t0;SELECT DISTINCT FIRST_VALUE(t0.c58) OVER () FROM t0 GROUP BY ((CAST(vt1.c0 AS INTEGER))&((~ (vt1.c0))));SELECT ALL ((((((t0.c58)AND(t0.c2)))AND(t0.c58)))>=((t0.c0 IN ()))) FROM t0 WHERE (CASE WHEN (((('228162173')AND('-''L+y')))AND(x'6fc4')) THEN json(2.033116088E9) END); -- 0ms;
SELECT DISTINCT ((t0.c2 COLLATE BINARY) BETWEEN (CASE WHEN t0.c58 THEN t0.c2 WHEN t0.c58 THEN t0.c0 WHEN t0.c0 THEN t0.c58 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 END) AND (NULL)), (((- (t0.c0))) NOT BETWEEN (LTRIM(t0.c2, NULL)) AND (((t0.c58)>=(t0.c0)))), MAX(t0.c58) FROM t0, vt1 LIMIT 1191626858; -- 0ms;
SELECT ALL LEAD(t0.c2, (t0.c2 IN ()) COLLATE BINARY, (((t0.c58)) BETWEEN ((((t0.c58) IS TRUE))) AND ((json_array_length(t0.c58, t0.c2))))) OVER () FROM t0, vt1; -- 1ms;
SELECT DISTINCT (((t0.c2 COLLATE NOCASE, (((t0.c0, t0.c0, t0.c2))!=((t0.c2, vt1.c0, t0.c2))), t0.c2))<>(((t0.c2 IN (vt1.c0)), ((((t0.c0)OR(t0.c2)))AND(t0.c2)), CASE t0.c2  WHEN '' THEN '' ELSE vt1.c0 END))) FROM vt1;SELECT ALL ((((vt1.c0)|(t0.c2))) ISNULL) FROM vt1 WHERE (((TRIM('gZ', -656140720)) BETWEEN (('954812733' IN ())) AND (x'bd67' COLLATE NOCASE)));SELECT DISTINCT (+ (0.6383961132121115)) FROM vt1; -- 0ms;
SELECT DISTINCT ((((((0.6841251590149969)AND(t0.c58)))OR(vt1.c0))) IS TRUE) FROM t0, vt1 WHERE (INSTR(((0.32489140304402764)GLOB('')), x'' COLLATE NOCASE)) GROUP BY ((((0.5772518862899811)>>(-5471313))) NOT BETWEEN (((t0.c2)|(t0.c2))) AND ((~ (t0.c2)))) HAVING ((vt1.c0 COLLATE BINARY) NOTNULL) LIMIT -2002249511 OFFSET 1903015293; -- 0ms;
SELECT MIN((((t0.c58)) BETWEEN ((t0.c0)) AND ((t0.c2)))), ((t0.c2) NOTNULL) COLLATE NOCASE, (t0.c0 IN (((t0.c0)<>(t0.c58)))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (~ ('')) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c58) IS TRUE) FROM vt1 WHERE (((((('0.5223945675117768')LIKE(-1.734125472E9))))==(((('-574755741')*(1585817830))))));SELECT DISTINCT t0.c2 FROM vt1;SELECT ALL UPPER(t0.c58), ((((CASE '\m'  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)AND(t0.c2 COLLATE BINARY)))OR((~ (t0.c2)))), t0.c58 FROM vt1, t0 WHERE (CASE WHEN ((0Xffffffffe5860cb8) BETWEEN (765580825) AND (x'')) THEN ((((((((NULL)OR(x'')))AND('0.6383961132121115')))OR(x'f165')))AND(0.0)) ELSE (((1515426327)) NOT BETWEEN (('425792008')) AND ((0xffffffffc0b140c1))) END); -- 0ms;
SELECT ((0.3229509025612721)<>(0.2096483630952256)) FROM vt1 WHERE ('\ꑡf' COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((((((t0.c58)AND(vt1.c0)))AND(NULL)))AND(vt1.c0)))OR(0x49572874))) IS TRUE) FROM t0, vt1 WHERE (CAST(HEX(DISTINCT x'') AS REAL)); -- 0ms;
SELECT ALL (CASE WHEN t0.c2 THEN vt1.c0 ELSE t0.c0 END IN (CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)), GROUP_CONCAT(((vt1.c0)AND(0xfffffffff968f91c))), (((('MNL%') NOT NULL))&(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c58)))) FROM vt1;SELECT DISTINCT COUNT((((t0.c0)) BETWEEN ((t0.c2)) AND ((vt1.c0)))) OVER () FROM vt1, t0 WHERE ((((~ (0.07519542068202578))) IS TRUE)) GROUP BY ((((((((((((t0.c2)OR(NULL)))OR(t0.c2)))AND('1023693582')))OR((vt1.c0 IN ()))))OR(t0.c2)))OR(TRIM(x''))) HAVING AVG(TOTAL((((t0.c2))<((vt1.c0)))));SELECT ((((x'88dc', t0.c2, t0.c0))>((vt1.c0, t0.c2, vt1.c0))) IN ()) FROM vt1; -- 1ms;
SELECT TOTAL(COUNT(((((t0.c2)OR(t0.c0)))AND(t0.c2)))) FROM t0, vt1 WHERE (((0.6708024239242794 COLLATE BINARY)>=((0.886482092731769 IN (0.22217378066265825, x''))))) GROUP BY '*U>NaX瓟' HAVING ((t0.c2 IN ()) IN (((t0.c2) ISNULL)));SELECT ALL COUNT((t0.c58 IN (t0.c58))) FROM t0, vt1 LIMIT -949577332; -- 0ms;
SELECT DISTINCT TOTAL(((0x19f70541)>(t0.c58))), (vt1.c0 COLLATE BINARY IN ()), ((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c58)) COLLATE NOCASE FROM t0, vt1; -- 0ms;
SELECT ((t0.c0) BETWEEN (vt1.c0) AND (t0.c2)) COLLATE BINARY FROM vt1 WHERE (CASE WHEN ((x'')GLOB('-656140720')) THEN (-2.20173494E8 IN ()) END) LIMIT 210281863 OFFSET 0;SELECT ((LOWER(vt1.c0)) ISNULL), LEAD(CASE vt1.c0  WHEN ((vt1.c0) IS FALSE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)IS(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)>=(vt1.c0)) ELSE ((vt1.c0) ISNULL) END, ((CAST(vt1.c0 AS REAL)) BETWEEN (CAST(vt1.c0 AS REAL)) AND ((- (vt1.c0)))), ((((vt1.c0)<=(vt1.c0)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) OVER ( GROUPS ((vt1.c0 COLLATE NOCASE) IS TRUE) PRECEDING EXCLUDE TIES), json_type((t0.c0 IN ())) FROM vt1; -- 0ms;
SELECT DISTINCT (((1688577804)) BETWEEN ((((vt1.c0) NOTNULL))) AND ((((((((((t0.c58)OR(t0.c58)))OR(t0.c2)))OR(t0.c0)))AND(t0.c2))))), COUNT(t0.c58), ((CASE WHEN t0.c2 THEN t0.c58 ELSE t0.c0 END) NOTNULL) FROM t0 WHERE (DATETIME((('TbP\rj')IS NOT('Qo^0')), CAST('0' AS BLOB), (('}&t)r0&')/('-1045054092')))) LIMIT -1110448215 OFFSET -2106421708;SELECT AVG((((t0.c58)) NOT BETWEEN ((x'dd9a')) AND ((t0.c2)))) OVER ( ORDER BY CASE WHEN ((x'') NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN 0X27ce9a89 END DESC) FROM vt1;SELECT DISTINCT rtreenode(MIN(t0.c2), (((t0.c0))<((t0.c2)))) FROM vt1, t0 WHERE (CASE CAST(0.33046936578977826 AS TEXT)  WHEN x'' COLLATE RTRIM THEN ((0.518488607053453) BETWEEN ('740271904') AND (0.6708024239242794)) END); -- 0ms;
SELECT DISTINCT (NOT (((t0.c2)LIKE(x'')))), (((ROUND(t0.c0, vt1.c0), '1082244211', AVG(t0.c58)))==(('now', ABS(t0.c0), (vt1.c0 IN ())))), CAST(json(vt1.c0) AS INTEGER), CAST(((t0.c0) ISNULL) AS REAL), ((COUNT(*))IS NOT(t0.c58)), NULLIF(x'', NULLIF(vt1.c0, vt1.c0)), ((vt1.c0 COLLATE NOCASE)LIKE(COUNT(t0.c0))) FROM vt1;SELECT (('' IN ()) IN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), CAST(t0.c58 AS NUMERIC))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN (((vt1.c0, t0.c2, t0.c2))<>((t0.c2, t0.c58, t0.c2))) THEN ((t0.c58)%(vt1.c0)) ELSE CASE WHEN t0.c58 THEN t0.c0 END END FROM vt1;SELECT CUME_DIST() OVER ( ORDER BY t0.c0 ROWS (((t0.c2 IN (t0.c0, t0.c2))) BETWEEN (((t0.c0)<=(vt1.c0))) AND (LIKE(t0.c2, NULL, '2'))) PRECEDING) FROM t0, vt1 WHERE (((((((((0.6929216260046217)AND(x'ca8e')))AND('')))OR('靝䴅')))OR((((5.45732524E8, NULL, x''))<=(('-730240534', NULL, x'')))))) GROUP BY TRIM(vt1.c0 COLLATE NOCASE, ((((((((((((t0.c2)AND(NULL)))AND(t0.c2)))OR(t0.c0)))OR(t0.c2)))AND(t0.c2)))OR(vt1.c0))); -- 0ms;
SELECT DISTINCT (NOT (((vt1.c0)/(vt1.c0)))) FROM vt1 WHERE ('-561021813'); -- 0ms;
SELECT ((COUNT(t0.c0))*(CASE WHEN t0.c0 THEN t0.c58 ELSE vt1.c0 END)) FROM vt1 WHERE (((((588425227)AND('317736002')))<=((0.6422977844359764 IN ('-2098222591', 0.5412078799841363)))));SELECT DISTINCT CAST(((vt1.c0)>=(NULL)) AS BLOB) FROM vt1, t0 WHERE ((((NULL)) NOT BETWEEN ((CASE WHEN -1525137397 THEN '\r' WHEN x'' THEN '⣙MhO-' WHEN 0.022889476239159934 THEN 2.058081592E9 WHEN '' THEN NULL WHEN 0.9478148165807301 THEN NULL ELSE -5.22988395E8 END)) AND ((CAST(-544380730 AS REAL))))); -- 0ms;
SELECT ALL ((COUNT(*)) NOT BETWEEN (((((vt1.c0)AND(t0.c58)))OR(t0.c58))) AND (((t0.c58)>=(t0.c0)))) FROM t0, vt1 WHERE (CASE WHEN x'8e1b' THEN 0.34898555672596565 END COLLATE NOCASE) GROUP BY ((((t0.c0) NOT NULL))/(CASE t0.c58  WHEN t0.c58 THEN t0.c2 END)); -- 0ms;
SELECT DISTINCT MAX((+ (vt1.c0))), (((t0.c58)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN t0.c58 ELSE t0.c58 END)) AND ((CASE WHEN t0.c0 THEN t0.c58 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN 0.16998757603387693 END))), (((((t0.c0))<((t0.c2))))=(((vt1.c0)>>(t0.c0)))) FROM t0 INDEXED BY i2 WHERE (LENGTH((-1.693112225E9 IN (0.0749452125469855)))) ORDER BY (((((t0.c0 IN ('塠~*')))OR(((t0.c58)>(t0.c0)))))AND((+ (t0.c0)))) ASC  NULLS LAST, t0.c2;SELECT DISTINCT (- (vt1.c0 COLLATE BINARY)) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((t0.c58 IN ())) NOT BETWEEN (MIN(t0.c58)) AND (NULL)) FROM t0, vt1 WHERE (((((('mx_TVP')||('n鑩O+JO\ni'))))!=(((NOT (']oC\n')))))); -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (0.790211760134733) AND (((t0.c2)-(vt1.c0)))) FROM vt1 ORDER BY CAST(t0.c0 AS NUMERIC), (((t0.c58) ISNULL) IN ()) LIMIT 454514555 OFFSET 1001397687;SELECT DISTINCT LIKELY(CASE WHEN t0.c58 THEN t0.c58 WHEN vt1.c0 THEN t0.c0 WHEN 0.32873127073712693 THEN vt1.c0 ELSE '1629472182' END), ((((((((CAST(vt1.c0 AS TEXT))OR(GROUP_CONCAT(t0.c0))))AND(CAST(vt1.c0 AS BLOB))))AND(t0.c2 COLLATE BINARY)))AND((((t0.c2)) BETWEEN ((t0.c58)) AND ((t0.c2))))), COUNT(*) FROM t0, vt1 WHERE (CAST(NULL AS NUMERIC) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((t0.c2)||(t0.c2)) IN ()) FROM t0, vt1 WHERE (((((((0.18796955911744073)OR(0.0749452125469855)))OR('-1692177397')))-(CASE WHEN '-241921243' THEN NULL END))); -- 0ms;
SELECT ALL (('%m	(t-f긹Y') NOT BETWEEN (x'') AND (vt1.c0)) COLLATE NOCASE, ((x'') NOT NULL), CAST(((0.2819263623805881) BETWEEN (vt1.c0) AND (NULL)) AS BLOB) FROM vt1 WHERE ((((((0.024878818596233754, x'1705', 0.5902229297566053)) BETWEEN ((NULL, NULL, '')) AND ((x'', NULL, NULL)))) IS TRUE)) GROUP BY (COALESCE(t0.c58, t0.c2) IN ()) HAVING vt1.c0; -- 0ms;
SELECT DISTINCT CAST((('1846698510') NOT BETWEEN (t0.c58) AND (t0.c58)) AS BLOB) FROM t0, vt1; -- 0ms;
SELECT ALL CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN CASE t0.c2  WHEN t0.c0 THEN NULL ELSE t0.c2 END THEN MIN(t0.c58) ELSE 0.28095250122190263 END FROM vt1, t0 ORDER BY CAST(x'd9a0' AS INTEGER) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((CASE WHEN t0.c2 THEN vt1.c0 WHEN vt1.c0 THEN t0.c58 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c58 WHEN vt1.c0 THEN NULL END)LIKE((t0.c2 IN (t0.c58)))) FROM t0, vt1 ORDER BY (((t0.c0) IS FALSE) IN ((NULL IN (t0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((t0.c2)LIKE(x'2c20')) IN ()) FROM t0, vt1; -- 3ms;
SELECT ALL ((((t0.c0)==(t0.c2))) NOT NULL) FROM vt1, t0; -- 0ms;
SELECT DISTINCT LAST_VALUE(CASE WHEN ((t0.c58) BETWEEN (t0.c0) AND (t0.c0)) THEN '1640223466' WHEN ((('192170295'))>=((t0.c58))) THEN t0.c58 WHEN (((t0.c58))<>((t0.c58))) THEN CASE t0.c2  WHEN t0.c58 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END ELSE ((t0.c0) IS FALSE) END) OVER ( ORDER BY json_quote(((t0.c58)%(t0.c2))) ASC, ((TRIM(DISTINCT t0.c58)) NOT BETWEEN (TRIM(t0.c58, vt1.c0)) AND ((((0.2916632703248482)) BETWEEN ((t0.c2)) AND ((t0.c0)))))  NULLS FIRST), t0.c0, t0.c2 FROM t0 WHERE (((((((NULL)!=('1720414071')))AND((NULL IN (0.1710235082147269)))))OR(CAST('NW' AS BLOB))));SELECT ALL AVG((- (t0.c0))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((((t0.c0)AND(t0.c58)))OR(t0.c2)) IN ()), ((((((((((t0.c2)-(t0.c58)))AND(TRIM(DISTINCT t0.c2, t0.c0))))OR((((vt1.c0, t0.c2, t0.c58))>=((t0.c0, NULL, t0.c0))))))AND(((t0.c58) BETWEEN (vt1.c0) AND (t0.c2)))))AND(CASE vt1.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN '얹1' THEN t0.c0 END)), CAST(CASE t0.c58  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c58 END AS REAL) FROM t0;SELECT DISTINCT CAST(vt1.c0 COLLATE BINARY AS BLOB) FROM vt1; -- 0ms;
SELECT ALL SUM(rtreenode(vt1.c0, t0.c0)) FROM t0, vt1 WHERE (((+ ('i')) IN ())); -- 0ms;
SELECT CASE vt1.c0  WHEN t0.c0 THEN t0.c58 END COLLATE BINARY FROM vt1, t0 ORDER BY (((((t0.c58))>((t0.c0))))>((t0.c2 IN ()))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((LIKELIHOOD('-2135796410', 0.08112600656571933))) AND ((MAX(t0.c2)))), (NOT (CAST(t0.c2 AS BLOB))), ((0.007354869862009394)*((((t0.c2))<((t0.c0))))) FROM vt1 GROUP BY t0.c58, '-1647525643', '1762801746' COLLATE NOCASE HAVING ((CAST(vt1.c0 AS INTEGER)) IS FALSE);SELECT ALL (~ (MIN(t0.c2))) FROM t0; -- 0ms;
SELECT DISTINCT (t0.c2 IN ()) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT GROUP_CONCAT('C') FROM vt1 WHERE (-1.045054092E9); -- 0ms;
SELECT ALL ((t0.c58)<>(vt1.c0)) COLLATE NOCASE FROM vt1;SELECT DISTINCT ((((((t0.c58)=(vt1.c0)))AND((- (t0.c2)))))AND(CAST(t0.c58 AS BLOB))) FROM vt1, t0 WHERE ((((0xffffffffafb1e37e, x'545d', 'M|!6J~')) BETWEEN ((((((NULL)OR(0.28248259758839955)))AND(0.2840524990168035)), NULL, CAST('61N9촆OI^' AS NUMERIC))) AND (((0.6918863558938816 IN ()), ((-1632067784)<=(0.4049210868605525)), (((0.8741286773374504, 1.794291103E9, 0.3679844100750773))<(('0.3679844100750773', 0.8456628248462194, 0.6798456911753782))))))); -- 1ms;
SELECT ALL (((~ (t0.c2))) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((t0.c2) NOT BETWEEN (t0.c58) AND (0.8705522268631285)))) FROM t0 WHERE ('959368589' COLLATE NOCASE) GROUP BY ((CHANGES()) IS FALSE);SELECT DISTINCT CASE ((vt1.c0)=(t0.c2))  WHEN ((t0.c2)>=(vt1.c0)) THEN (- (vt1.c0)) END FROM t0;SELECT ALL ((((t0.c0)>(t0.c58)))||(CASE t0.c0  WHEN '-1958913281' THEN t0.c0 WHEN t0.c0 THEN t0.c58 WHEN -7.14279494E8 THEN t0.c0 ELSE t0.c2 END)) FROM t0 INDEXED BY i2, vt1 WHERE (((CAST('*箔L^6' AS TEXT))IS NOT(CASE WHEN x'' THEN NULL ELSE '-248811293' END))) ORDER BY CASE (vt1.c0 IN ())  WHEN ((((t0.c0)AND(t0.c58)))AND(t0.c58)) THEN CAST(t0.c2 AS INTEGER) END, ((t0.c58) NOT NULL) ASC  NULLS FIRST;SELECT ALL (((t0.c2)) NOT BETWEEN ((((((NULL)AND(t0.c0)))OR(t0.c2)))) AND ((((vt1.c0)<(x''))))) FROM vt1 WHERE (((((CAST(NULL AS REAL))OR((((NULL)) NOT BETWEEN ((0.27494889745527284)) AND ((NULL))))))OR(('cw' IN (0.2755980320986021)))));SELECT ALL ((t0.c2) NOTNULL) FROM vt1, t0 WHERE (((0.9461506371507596 COLLATE RTRIM)OR(((x'') IS FALSE)))); -- 0ms;
SELECT ALL ((t0.c58)<(((t0.c58)+(x'')))) FROM vt1 WHERE (454514555);SELECT DISTINCT (((t0.c2, t0.c0, vt1.c0)) BETWEEN ((CASE WHEN x'a8d1' THEN t0.c58 ELSE t0.c58 END, ((((t0.c0)OR(t0.c0)))AND(vt1.c0)), MIN(t0.c58))) AND ((CASE WHEN t0.c58 THEN t0.c58 ELSE vt1.c0 END, CAST(vt1.c0 AS TEXT), t0.c0 COLLATE RTRIM))) FROM t0;SELECT (((((('')AND(t0.c2)))AND(vt1.c0))) BETWEEN (((t0.c58)IS(t0.c0))) AND ((((t0.c58, t0.c58, vt1.c0))>((t0.c0, 0.7330780060304302, t0.c2))))) FROM t0 WHERE (((x'')|(x'')) COLLATE NOCASE) GROUP BY t0.c2;SELECT TYPEOF(((vt1.c0) IS FALSE)) FROM t0, vt1 WHERE ((x'1a5c' IN ()) COLLATE BINARY) GROUP BY '898778084', ((((((t0.c2, t0.c0, t0.c0))<((x'', t0.c58, x'1833')))))>((CAST(vt1.c0 AS REAL)))), '-779463052', ((((NULL) BETWEEN (t0.c2) AND (vt1.c0)))<(t0.c0)), (~ ((t0.c58 IN ()))) HAVING CASE WHEN ((((t0.c58)AND(NULL)))OR(x'1785')) THEN CASE WHEN t0.c2 THEN t0.c2 END WHEN ((vt1.c0) ISNULL) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c58)) WHEN NULL THEN ((((vt1.c0)OR(t0.c2)))OR(t0.c2)) ELSE LIKE(t0.c58, t0.c58) END; -- 0ms;
SELECT ALL SUM((- (t0.c2))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((vt1.c0))>=((vt1.c0))) IN ()), CAST(((((((((vt1.c0)OR('1365667431')))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS INTEGER)) OVER () FROM vt1 WHERE ((('*A8v跈Ep瞋N' IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((t0.c2 COLLATE RTRIM)<=((t0.c58 IN (t0.c58, t0.c58)))), ((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) IN (1868778503)), (((t0.c58)) BETWEEN ((t0.c2)) AND ((((t0.c0)/(t0.c0))))) FROM t0;SELECT DISTINCT (~ ((t0.c0 IN ()))) FROM t0, vt1; -- 0ms;
SELECT ALL ((((((((((t0.c0)AND(t0.c58)))AND(t0.c0)))OR(CASE t0.c58  WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)))AND(((((x'')AND(-1.647525643E9)))OR(t0.c0)))))OR(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM vt1 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (t0.c0) AND ('1)6f''^K1')))AND(CAST(t0.c58 AS TEXT))) FROM vt1 WHERE (((NOT (-2034737179)) IN ()));SELECT (((((((vt1.c0))=((t0.c2))))OR((NOT (vt1.c0)))))AND(((t0.c58) BETWEEN (t0.c0) AND (t0.c0)))), TOTAL(t0.c2), COUNT(x'') OVER () FROM t0, vt1 WHERE ('-656140720'); -- 0ms;
SELECT ALL ((((((((((((t0.c2)AND(t0.c2)))AND(x'f0b2')))OR(vt1.c0)))AND(t0.c0)))AND(t0.c58)))OR(CASE t0.c58  WHEN vt1.c0 THEN t0.c0 END)) FROM t0, vt1 ORDER BY -1.628793751E9 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (~ (t0.c2)), CAST(x'4890' AS BLOB), ROW_NUMBER() OVER () FROM t0, vt1 WHERE (CASE ''  WHEN NULL THEN '-893935311' END COLLATE NOCASE); -- 0ms;
SELECT ALL ((vt1.c0 IN (t0.c2, '1160763128')) IN ()), UPPER(SQLITE_VERSION()), x'', ((((CASE t0.c58  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN vt1.c0 THEN t0.c58 END)AND((vt1.c0 IN (vt1.c0, t0.c58)))))OR(IFNULL(DISTINCT vt1.c0, vt1.c0))), LIKELY(((((t0.c0)AND(t0.c0)))OR(NULL))) FROM t0 WHERE (((((NULL, NULL, 1.212340712E9)) NOT BETWEEN ((0.55830787140917, NULL, NULL)) AND (('162509530', x'c183', x''))) IN ())) ORDER BY LOWER(DISTINCT ((t0.c2)>(t0.c0)));SELECT DISTINCT (- (((t0.c0) ISNULL))) FROM vt1 WHERE ((x'' IN ())) LIMIT 510135616;SELECT DISTINCT LAST_VALUE(((((t0.c2)>>(t0.c58)))+(((t0.c0)-(vt1.c0))))) OVER () FROM t0, vt1; -- 0ms;
SELECT (((('1066425940')AND(load_extension(t0.c58, t0.c58))))AND(((vt1.c0)-(t0.c58)))), ((((t0.c58) IS TRUE)) NOT BETWEEN (HEX(DISTINCT t0.c58)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(t0.c58)))AND(t0.c58)))AND(t0.c2)))), CAST(CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC) FROM vt1, t0 WHERE ((NOT (((NULL)AND(0.5388029796904639))))); -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ())) ISNULL) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0, t0.c2, t0.c2)) NOT BETWEEN ((((((t0.c58)OR(t0.c58)))AND(t0.c0)), ((((vt1.c0)AND(t0.c58)))AND(vt1.c0)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c2)))) AND ((t0.c0, vt1.c0, ((t0.c58)AND(t0.c0))))), TOTAL(CAST(0.09052032222446449 AS INTEGER)), vt1.c0 FROM vt1, t0; -- 0ms;
SELECT ((MAX(t0.c2)) BETWEEN (CAST(t0.c2 AS REAL)) AND (RTRIM(t0.c58))) FROM vt1;SELECT ((0Xffffffff965c89b0)+(t0.c2 COLLATE RTRIM)) FROM vt1;SELECT ALL (- (((t0.c58)+(t0.c0)))) FROM t0, vt1 WHERE ((((((('r8_,(rkck') NOT BETWEEN ('') AND (0.4309292965199294)))OR(CAST(x'' AS TEXT))))AND(((1.120940159E9) IS TRUE)))); -- 1ms;
SELECT ALL ((t0.c2) IS FALSE) COLLATE RTRIM FROM vt1 WHERE (((NULL) IS TRUE));SELECT CASE WHEN PRINTF(t0.c58) THEN ((((t0.c58)AND(t0.c2)))OR(t0.c2)) WHEN t0.c2 THEN (- (t0.c58)) WHEN SQLITE_COMPILEOPTION_USED(t0.c2) THEN (~ (t0.c2)) END FROM t0, vt1 WHERE (CASE WHEN (0.6176109354300175 IN ()) THEN ('' IN ()) END); -- 0ms;
SELECT COUNT(MAX(t0.c2, t0.c58, 0.6640320339109715, t0.c2)) OVER ( RANGE CASE WHEN ((t0.c0)%(t0.c0)) THEN t0.c2 ELSE ((vt1.c0)=(t0.c2)) END PRECEDING), CASE WHEN ((t0.c0) IS TRUE) THEN (x'e084' IN ()) END, json_remove(t0.c58, '-1692177397') COLLATE BINARY FROM t0;SELECT DISTINCT ((CAST(t0.c58 AS TEXT))+(((((vt1.c0)OR(t0.c2)))OR(vt1.c0)))) FROM t0 CROSS JOIN vt1 ON IFNULL((((vt1.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), ((((t0.c2)OR(t0.c58)))OR(t0.c0))) WHERE ((((0.886482092731769)) NOT BETWEEN ((CAST('0.8346653093101598' AS TEXT))) AND ((CASE WHEN x'efcd' THEN '0.9478148165807301' WHEN 0.7898827434919841 THEN x'' WHEN 0.17458137957376085 THEN 0.8906753827017927 ELSE x'fed8' END)))); -- 0ms;
SELECT DISTINCT TOTAL((((vt1.c0))=((t0.c2)))) OVER (), CASE WHEN ((t0.c58)&('^kᇄ3/')) THEN json_valid(t0.c0) WHEN '1%' THEN (t0.c0 IN ()) WHEN (('')<=(-157279721)) THEN ((((NULL)AND(x'')))AND(t0.c2)) END, UPPER(DISTINCT 0.21999947921258478 COLLATE NOCASE) FROM t0 WHERE (((0.003064171797711457)||((NOT ('1413931632')))));SELECT DISTINCT ((json_type(t0.c58)) NOT NULL) FROM t0 NOT INDEXED WHERE (((((0X1cf417b8) NOTNULL))-((((0X67a6ab4f, '0.32489140304402764', x'')) NOT BETWEEN ((0.8515639877406666, 0.927668519452499, NULL)) AND ((x'', x'', x'')))))); -- 0ms;
SELECT '' COLLATE NOCASE FROM vt1 LIMIT 1230448756 OFFSET 886408348; -- 0ms;
SELECT ALL (COUNT(*) IN ()) FROM vt1, t0 WHERE ((NOT ('0.06253381022791538' COLLATE BINARY))) EXCEPT SELECT DISTINCT (+ (((t0.c58)AND(vt1.c0)))) FROM vt1 GROUP BY ((((t0.c58)IS(t0.c0))) NOT NULL) HAVING (((x'')) NOT BETWEEN (((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) AND (((- (t0.c0))))) LIMIT -2135796410;SELECT DISTINCT ((IFNULL(DISTINCT t0.c58, t0.c0))<=((~ (vt1.c0)))) FROM t0, vt1 LIMIT -950123909; -- 0ms;
SELECT DISTINCT (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))!=((CASE t0.c0  WHEN '0.07519542068202578' THEN t0.c2 WHEN t0.c58 THEN t0.c0 WHEN t0.c58 THEN t0.c2 END))), (~ (((t0.c0)+(t0.c2)))), (NOT (((((t0.c58)OR(t0.c0)))OR(NULL)))) FROM vt1, t0; -- 1ms;
SELECT ALL GROUP_CONCAT((((t0.c2))<=((t0.c0))) COLLATE RTRIM) OVER () FROM vt1, t0 WHERE ((CASE 0.12264115785529794  WHEN 0.9754655489508319 THEN 0x69faa855 END IN ())); -- 0ms;
SELECT DISTINCT ((((((((((((CAST('' AS BLOB))AND(AVG(vt1.c0))))OR(((t0.c58) NOT NULL))))OR(CASE WHEN t0.c58 THEN 0X39c991 END)))AND((NOT (t0.c0)))))OR(NULLIF(NULL, t0.c2))))OR((NULL IN ()))) FROM t0 INDEXED BY i2, vt1;SELECT DISTINCT (~ ((~ (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT AVG(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) FROM t0;SELECT DISTINCT ((t0.c2) IS FALSE) FROM vt1 WHERE ((x'' IN ()));SELECT ALL (((t0.c2)) NOT BETWEEN (((((t0.c58, t0.c58, t0.c0))==((t0.c0, t0.c58, vt1.c0))))) AND ((CASE WHEN t0.c58 THEN t0.c58 END))) FROM vt1;SELECT DISTINCT ((t0.c0 COLLATE NOCASE)||(((t0.c0) IS FALSE))) FROM vt1;SELECT DISTINCT 0.4667117478505547 FROM t0, vt1 WHERE (((((LIKELIHOOD('1529612567', 0.07342097626277588))AND(((x'')AND(NULL)))))AND((NULL IN (NULL))))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((LIKELIHOOD(t0.c0, 0.5952737563751043))<((NULL IN ()))), (((((((((((((~ (t0.c0)))OR((((t0.c0))<((NULL))))))AND(CAST(t0.c0 AS NUMERIC))))AND(t0.c0)))OR(t0.c0)))AND(((((t0.c2)OR(t0.c2)))OR(t0.c58)))))AND(((t0.c58) NOT BETWEEN (t0.c2) AND (t0.c58))))) OVER () FROM t0; -- 0ms;
SELECT ((((t0.c58) ISNULL))<=(((t0.c58) BETWEEN (t0.c0) AND (t0.c58)))) FROM vt1 WHERE (NULL);SELECT DISTINCT 0.8848145276998433, TOTAL(t0.c58), (((((vt1.c0))>((0.010564686732667639))))<>(CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 END)) FROM vt1 WHERE ((((NULL)) BETWEEN ((x'')) AND ((0x5f362df5))) COLLATE BINARY COLLATE RTRIM);SELECT DISTINCT t0.c0, -1482215845 COLLATE NOCASE, NULL, 0.5847621922270182, (((((vt1.c0)>(vt1.c0)), CAST(t0.c2 AS TEXT), MIN(vt1.c0)))>((((t0.c0) IS TRUE), ((t0.c0)<('')), t0.c0 COLLATE BINARY))) FROM t0 INDEXED BY i2, vt1 WHERE (CASE (- (0.4471287727673816))  WHEN (- (0Xfffffffff80eac02)) THEN ((NULL) BETWEEN (x'') AND ('-2015952549')) ELSE CASE ''  WHEN '0.025073594107280717' THEN 'KC' WHEN NULL THEN x'' WHEN 0.25908948487276384 THEN '[bQMCo' END END) ORDER BY ((((highlight('A', vt1.c0, t0.c0, t0.c0))AND(vt1.c0)))OR((vt1.c0 IN ()))) ASC  NULLS FIRST;SELECT DISTINCT ((((LOWER(DISTINCT t0.c58))OR(((t0.c58) NOT BETWEEN (t0.c2) AND (t0.c0)))))AND(t0.c0)) FROM vt1 WHERE (((((((((-8.11469741E8 COLLATE RTRIM)OR(((-50782308)=(0.48292292753121624)))))AND(((x'')||('1833020985')))))OR(((('0.6708024239242794', NULL, x''))<=((NULL, '-6933257', 0.6529295470795934))))))AND(0.7592685536480182))) ORDER BY (+ (((vt1.c0) NOT BETWEEN (t0.c2) AND (t0.c58))))  NULLS LAST;SELECT NULL FROM t0, vt1; -- 0ms;
SELECT ALL (((NULL) NOT BETWEEN ('') AND (t0.c2)) IN ()), ((((((t0.c58)OR(vt1.c0)))OR(t0.c58))) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(vt1.c0 AS TEXT))), LAG((CAST(vt1.c0 AS NUMERIC) IN ()), ((vt1.c0 COLLATE NOCASE)>(CASE vt1.c0  WHEN 0.13503659625579068 THEN vt1.c0 ELSE vt1.c0 END)), (((((vt1.c0)<(vt1.c0))))<=((TRIM(DISTINCT x'7ed7'))))) OVER () FROM vt1 WHERE (CASE (x'' IN (NULL, x''))  WHEN CASE 0.12987875733807308  WHEN NULL THEN 0.14608053110132768 END THEN (('!ꡕkA(\I') NOT BETWEEN ('NI%') AND ('-2076318325')) WHEN (-1647525643 IN ()) THEN ((NULL)IS NOT('0.0')) WHEN COALESCE(3.17736002E8, 0.02468310550694275) THEN (((0.039724789901233626))==((0.16998757603387693))) ELSE (~ (1.836572058E9)) END) GROUP BY COALESCE(t0.c58, t0.c2, '797689323', t0.c58) COLLATE NOCASE COLLATE NOCASE HAVING (CAST(t0.c0 AS BLOB) IN ());SELECT DISTINCT CAST(((t0.c2)IS NOT(t0.c58)) AS INTEGER) FROM vt1 WHERE (NULL);SELECT DISTINCT x'' FROM t0 WHERE (((((('0.1489022357438372')-('o/,㞬'))))==((((NULL)<(0x3bb01db7)))))); -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c2)=(t0.c2))) FILTER(WHERE t0.c0) OVER () FROM vt1, t0; -- 0ms;
SELECT DISTINCT (((((((t0.c2))>=((t0.c0))))OR(t0.c58 COLLATE RTRIM)))OR(UNLIKELY(vt1.c0))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT RANK() OVER ( ORDER BY (((((vt1.c0) IS TRUE)))<(((- (t0.c0))))) DESC  NULLS FIRST), ((((t0.c0)+(t0.c0))) NOT BETWEEN (MAX(vt1.c0)) AND (((t0.c2) ISNULL))), vt1.c0 COLLATE NOCASE FROM vt1, t0 WHERE (((CASE WHEN '1800117132' THEN x'' END)GLOB(CAST('-1692177397' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (((TOTAL(vt1.c0)))<((((t0.c0) IS FALSE)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((t0.c0) NOTNULL)) IS TRUE) FROM t0 ORDER BY ((x'')%(t0.c0 COLLATE NOCASE))  NULLS FIRST, ((((((((((t0.c58) NOT NULL))AND(CAST(t0.c2 AS BLOB))))AND(((t0.c58)<<(vt1.c0)))))AND((t0.c2 IN ()))))AND(((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c58)))) DESC;SELECT DISTINCT (0.18888381715635338 IN ()) FROM t0 WHERE ((CASE WHEN 0.09488793796240425 THEN NULL END IN ())) LIMIT 1362735958 OFFSET 290216268; -- 0ms;
SELECT DISTINCT COUNT(((t0.c58)||(x'4371'))) OVER (), (~ (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), HEX(DISTINCT (vt1.c0 IN ())) FROM t0 RIGHT OUTER JOIN vt1 ON CASE CASE WHEN vt1.c0 THEN t0.c2 ELSE t0.c0 END  WHEN CAST(t0.c58 AS NUMERIC) THEN (((t0.c0, t0.c2, t0.c58)) NOT BETWEEN ((t0.c58, t0.c58, t0.c0)) AND ((t0.c2, t0.c0, t0.c2))) END LIMIT -629466634; -- 0ms;
SELECT DISTINCT ((0.9993074520209184) NOT BETWEEN (0.8972066911553201) AND ((vt1.c0 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT (((NULL, t0.c2, t0.c58)) BETWEEN ((t0.c58 COLLATE RTRIM, (((t0.c0, vt1.c0, t0.c2)) NOT BETWEEN ((t0.c58, t0.c0, t0.c58)) AND ((t0.c2, vt1.c0, t0.c0))), AVG(t0.c58))) AND ((vt1.c0, (((t0.c58, vt1.c0, t0.c0))>((t0.c0, t0.c58, t0.c0))), (+ (t0.c2))))), (((((t0.c0))>=((t0.c58))))<=(CAST(t0.c2 AS BLOB))), ((t0.c2 COLLATE NOCASE)<<(UNLIKELY(DISTINCT vt1.c0))) FROM t0 WHERE (IFNULL(((x'')>>(0x514e4ca)), ((NULL) NOT BETWEEN ('941100168') AND ('-2135796410')))) GROUP BY CASE ((t0.c58) BETWEEN (t0.c2) AND (t0.c0))  WHEN 0Xffffffffab537f0b THEN CAST(x'' AS BLOB) END ORDER BY CAST(NULL COLLATE BINARY AS INTEGER) ASC;SELECT 0.07475257038922489 FROM t0, vt1; -- 0ms;
SELECT DISTINCT '' FROM vt1 GROUP BY t0.c58, (((t0.c2 COLLATE RTRIM))<((((t0.c2)IS NOT(t0.c2))))), ((CASE WHEN t0.c58 THEN t0.c58 END) NOT BETWEEN (NULL) AND (CAST(t0.c0 AS TEXT))) HAVING 0.929779941981789 LIMIT -520061646;SELECT DISTINCT HEX(CASE WHEN t0.c58 THEN t0.c58 ELSE t0.c58 END) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c2, t0.c0)) NOT BETWEEN ((LAST_INSERT_ROWID(), ((t0.c0)<>(t0.c2)), CASE WHEN t0.c0 THEN 0xffffffff9d6fabf6 END)) AND (((- (t0.c2)), MAX(vt1.c0), GROUP_CONCAT(0x36813e44)))) FROM vt1, t0 WHERE ((((NULL)) BETWEEN ((HEX(NULL))) AND (((- ('')))))); -- 0ms;
SELECT DISTINCT ((AVG(t0.c58))AND(COUNT(*))) FROM vt1;SELECT ALL ((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c58)) COLLATE RTRIM FROM t0, vt1; -- 1ms;
SELECT ALL ((((CASE WHEN t0.c58 THEN t0.c58 ELSE t0.c2 END)OR((NOT (t0.c0)))))OR((((t0.c58, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c58, t0.c0, t0.c58)) AND ((t0.c58, t0.c0, t0.c58))))) FROM t0 WHERE (((((0x5330533d) BETWEEN ('y\n6NꐹQQￓ') AND (0.8468622106251719))) NOT BETWEEN (CAST(x'1fa2' AS REAL)) AND (CAST(1.778034773E9 AS INTEGER)))) LIMIT -912171061 OFFSET 796683299;SELECT DISTINCT TOTAL(((vt1.c0)!=(t0.c58))) FROM vt1 WHERE (((TOTAL_CHANGES())||(CAST(']		<<g/荄' AS NUMERIC))));SELECT ((((((t0.c2)AND(x'')))AND(t0.c2)))>>(COALESCE(NULL, vt1.c0))) FROM vt1, t0; -- 0ms;
SELECT SUM(COALESCE(t0.c58, vt1.c0, vt1.c0, t0.c58)) OVER () FROM vt1, t0 ORDER BY ((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(vt1.c0)))OR(t0.c2)) COLLATE BINARY ASC; -- 0ms;
SELECT ((((0.7933236323036279))<=((t0.c2))) IN ()), UNLIKELY(MAX(t0.c58)), LAG(TRIM((((t0.c58))<((t0.c58)))), (('' IN (vt1.c0, vt1.c0)) IN ()), CASE WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE 'MNL%' END THEN (((t0.c2)) BETWEEN ((1504717671)) AND ((t0.c58))) END) OVER () FROM vt1, t0 WHERE (CAST(((((NULL)OR('/-✭g (B')))OR(0X10853eee)) AS NUMERIC)) GROUP BY (((~ (t0.c0))) NOT NULL) HAVING '' COLLATE BINARY; -- 0ms;
SELECT GROUP_CONCAT(((t0.c0)&(t0.c2))) FROM vt1;SELECT DISTINCT ((t0.c2)<=(t0.c0)) COLLATE NOCASE FROM t0, vt1; -- 0ms;
SELECT ((TOTAL('852020783'))<(LIKELY(vt1.c0))), (~ (((((x'')OR(t0.c0)))AND(0.5973372179495097)))), CAST(((t0.c0) ISNULL) AS INTEGER) FROM vt1 INDEXED BY i2, t0 ORDER BY LIKELIHOOD(t0.c58, 0.0852139465160161) DESC;SELECT ALL (vt1.c0 COLLATE NOCASE IN ()), TOTAL_CHANGES(), GLOB(t0.c0, t0.c58) COLLATE RTRIM FROM t0; -- 0ms;
SELECT (x'de87' IN ()), x'', x'' FROM vt1, t0 WHERE (((((9.41144661E8) BETWEEN (x'085e') AND (x''))) BETWEEN (((((((((((((0.022889476239159934)AND(NULL)))AND(NULL)))AND(NULL)))AND(0Xffffffff993f5153)))AND('-1336795253')))AND(0.2774360795040347))) AND (CAST(0.6105471387669612 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((((((((MIN(t0.c58))AND(TIME(t0.c2, vt1.c0, vt1.c0))))AND(((((t0.c2)OR(t0.c2)))OR(vt1.c0)))))AND((('-641005978')<(t0.c2)))))AND(x'8e16')) FROM vt1 GROUP BY vt1.c0;SELECT DISTINCT LAG((+ (((t0.c0)IS NOT('')))), ((CAST(t0.c2 AS TEXT))-(UNLIKELY(DISTINCT t0.c2))), (t0.c58 IN ()) COLLATE BINARY) OVER () FROM t0 WHERE ((((((((((0X4fb9fb82 IN ()))AND(CAST(0x7ee8ad17 AS INTEGER))))OR(('1385617312' IN ()))))AND((('2墺cxOSrbQ') IS TRUE))))AND(ABS('-2015952549')))) GROUP BY ((((((((CASE WHEN t0.c2 THEN vt1.c0 END)AND(TYPEOF(vt1.c0))))AND((((t0.c2))==((t0.c58))))))AND(((t0.c2) IS FALSE))))AND(((((((((t0.c58)OR(t0.c2)))OR(t0.c58)))AND(t0.c2)))OR(vt1.c0)))) HAVING CAST(((vt1.c0)<(t0.c2)) AS NUMERIC);SELECT ALL ((json_valid(t0.c2))*(CAST(t0.c58 AS NUMERIC))), ((((((((((t0.c0)OR(t0.c2)))OR('噴䴅lV|{')))AND(0.3486574854841511)))OR(t0.c2)))<<(t0.c0 COLLATE BINARY)), (((t0.c0) IS TRUE) IN (NULL)) FROM vt1, t0; -- 0ms;
SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE), vt1.c0, '' COLLATE BINARY FROM vt1 WHERE ((+ (NULL)) COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT ALL (((((t0.c58) NOTNULL)))!=((GROUP_CONCAT(t0.c2)))), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((t0.c58) BETWEEN (t0.c58) AND (t0.c0)), t0.c58, t0.c0 COLLATE BINARY)) AND ((TIME(0.21755285640672017, t0.c2, vt1.c0), ((t0.c2) IS FALSE), vt1.c0))), GROUP_CONCAT(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) OVER ( GROUPS -1958913281 PRECEDING EXCLUDE NO OTHERS), (+ ((~ (t0.c58)))), ((((vt1.c0)+(vt1.c0)))&(((103676864)<>(t0.c0)))) FROM t0 WHERE (0xffffffff9eda53ca COLLATE BINARY);SELECT DISTINCT (((COUNT(*), ((('1904059889')) NOT BETWEEN ((t0.c0)) AND ((t0.c2))), (- (vt1.c0))))!=((CASE vt1.c0  WHEN vt1.c0 THEN -1.200272123E9 ELSE t0.c58 END, ((t0.c58) NOTNULL), (+ (t0.c2))))) FROM t0 WHERE ((NOT ((('') NOT NULL)))) ORDER BY NULLIF(DISTINCT (NOT (t0.c58)), NULL COLLATE NOCASE) ASC;SELECT DISTINCT ((((t0.c2)>=(t0.c0)))AND(((t0.c2)LIKE(t0.c0)))), CAST(CAST(t0.c58 AS INTEGER) AS NUMERIC), (NOT (((vt1.c0)LIKE(vt1.c0)))) FROM t0, vt1; -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW), COUNT(AVG(MAX(t0.c2))), NTILE(((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) OVER () FROM vt1 WHERE (((x'' COLLATE BINARY)||(((((0.8795418087052536)AND('')))AND(NULL)))));SELECT AVG(t0.c58) OVER (), ((AVG(x'')) NOTNULL), AVG((((t0.c0, t0.c0, '0.886482092731769'))>=((t0.c2, t0.c2, vt1.c0)))) OVER ( PARTITION BY ((((0.8289506462645216) NOT NULL))%(((((((((((((t0.c2)AND(t0.c58)))AND(vt1.c0)))OR(t0.c0)))OR(t0.c2)))OR(t0.c58)))AND(t0.c2)))), ((0.06261011076757395)<=(((t0.c0) NOT NULL)))) FROM t0, vt1 WHERE ((((NULL IN ()))-(((0xffffffffb5cb3b40) NOT NULL)))); -- 0ms;
SELECT SQLITE_VERSION() FROM t0, vt1; -- 0ms;
SELECT ALL ((CAST(t0.c2 AS TEXT))|((((t0.c58, NULL, vt1.c0)) BETWEEN ((t0.c2, t0.c2, t0.c58)) AND ((vt1.c0, t0.c0, t0.c2))))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 WHERE ((((((-1e500) NOT BETWEEN ('-1872667282') AND (NULL)), ((NULL)*('-1280773615')), ((NULL)&(0.2633558502733654))))>=((CASE '1537830000'  WHEN -1623010702 THEN 0.7336784045573376 WHEN NULL THEN NULL WHEN x'' THEN 0.2536426508712474 WHEN 1.640223466E9 THEN x'' WHEN x'' THEN '0x' END, NULL COLLATE RTRIM, (((0.5094732767761092, '-662389712', 0X16521fc9)) NOT BETWEEN ((NULL, x'', 0.21540659484018376)) AND ((x'4fa22d11', 0.5975271209314458, NULL))))))); -- 0ms;
SELECT ALL (+ ('-1847057786')) FROM vt1, t0 WHERE (CAST(CASE NULL  WHEN 0.4899411528662735 THEN '' END AS REAL)); -- 0ms;
SELECT ALL (- ((((vt1.c0, t0.c58, t0.c0))!=((t0.c58, vt1.c0, t0.c58))))), (GROUP_CONCAT(vt1.c0) IN ()), ((((t0.c58)AND(t0.c58)))OR(0.5772518862899811)) COLLATE BINARY FROM t0, vt1; -- 0ms;
SELECT -1.200272123E9, CUME_DIST() OVER (), LEAD(CAST((vt1.c0 IN ()) AS BLOB), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<(CAST(vt1.c0 AS INTEGER))), ((((vt1.c0)>=(vt1.c0)))-((((''))<((vt1.c0)))))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((((MAX(t0.c2))AND(CASE WHEN 0.6861249163232744 THEN t0.c58 ELSE t0.c0 END)))AND(CASE vt1.c0  WHEN t0.c58 THEN x'' WHEN 0.0749452125469855 THEN t0.c58 WHEN NULL THEN t0.c0 END)) FROM vt1, t0; -- 1ms;
SELECT DISTINCT t0.c0 COLLATE NOCASE COLLATE RTRIM FROM t0 WHERE (((CASE NULL  WHEN NULL THEN '_Bo?[{w' ELSE 0.40248579065801704 END)!=(((x'9ddbfeca') ISNULL)))); -- 0ms;
SELECT ((((((((((vt1.c0)OR(t0.c0)))OR(t0.c2)))AND('1283685446')))OR(t0.c0))) IS TRUE), ((((((((((vt1.c0)AND(t0.c58)))OR(t0.c2)))OR(t0.c2)))AND(t0.c0))) IS FALSE), CAST((+ (vt1.c0)) AS REAL) FROM vt1, t0; -- 0ms;
SELECT ALL (vt1.c0 IN (CAST(t0.c2 AS TEXT), CAST(t0.c0 AS REAL))) FROM t0 WHERE (((((x'')AND(x''))) ISNULL));SELECT DISTINCT AVG((t0.c2 IN (t0.c2))) FROM vt1 WHERE ((CAST('8-' AS NUMERIC) IN ()));SELECT LIKELY(((vt1.c0) BETWEEN (t0.c0) AND (-327287484))) FROM vt1 NOT INDEXED WHERE (CAST((('')||(NULL)) AS INTEGER));SELECT DISTINCT ((x'')==(CASE WHEN vt1.c0 THEN 0.7730857291447998 WHEN vt1.c0 THEN t0.c58 WHEN vt1.c0 THEN t0.c58 ELSE t0.c2 END)) FROM t0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL)) IS FALSE) DESC; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT t0.c0) COLLATE RTRIM, ((((STRFTIME(t0.c0, t0.c0, t0.c0))OR(CASE vt1.c0  WHEN t0.c0 THEN t0.c58 END)))AND(((t0.c58)!=(t0.c0)))), ((('1318109789' IN ()))>((NOT (vt1.c0)))) FROM vt1;SELECT ((((t0.c58)AND(t0.c58)))AND(t0.c2 COLLATE BINARY)), CASE WHEN vt1.c0 THEN t0.c58 ELSE t0.c2 END COLLATE BINARY, (((NULL)) BETWEEN ((GROUP_CONCAT(t0.c58))) AND (((t0.c58 IN ())))) FROM vt1;SELECT ALL SUM((t0.c58 IN ())) FROM t0, vt1 WHERE (CAST(((NULL)!=('粋8q5[Y')) AS BLOB)); -- 0ms;
SELECT DISTINCT (((t0.c2) NOT BETWEEN (t0.c58) AND (vt1.c0)) IN ()) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE NOCASE IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT t0.c58)) ISNULL) FROM vt1 WHERE (CAST(NULL AS INTEGER) COLLATE NOCASE);SELECT ALL (((vt1.c0) IS TRUE) IN (CAST(t0.c2 AS TEXT))), CAST(t0.c58 COLLATE NOCASE AS BLOB), GROUP_CONCAT(((((t0.c2)AND(t0.c0)))OR(vt1.c0))) OVER () FROM vt1 WHERE (((((x'')*(x'')))LIKE(((('1365667431')) NOT BETWEEN ((x'')) AND ((1483164296)))))) GROUP BY ((((t0.c58)%(NULL)))/((NOT (vt1.c0)))), ((UNLIKELY(DISTINCT t0.c2))/(vt1.c0 COLLATE RTRIM)), ((IFNULL(t0.c58, t0.c0)) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, t0.c0)) AND (((vt1.c0)<<(t0.c58))));SELECT (((('-1337370570')>(t0.c58)))%(CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt1.c0 WHEN t0.c2 THEN t0.c2 END)) FROM t0, vt1 ORDER BY ((t0.c2 COLLATE BINARY) NOT NULL); -- 1ms;
SELECT DISTINCT NULL FROM vt1, t0 WHERE (SUBSTR(((0.8897275072568313)>=(x'')), (((0.09248551389745696, '#Zｖ', 0.5307158678928159))<>(('-1280773615', 0.8005611729349525, '-258528077'))))); -- 0ms;
SELECT DISTINCT CASE ((vt1.c0)<<(t0.c58))  WHEN t0.c0 COLLATE BINARY THEN ((t0.c2) IS FALSE) WHEN ((t0.c58)IS(t0.c58)) THEN t0.c2 WHEN t0.c2 COLLATE BINARY THEN ((t0.c0)/(vt1.c0)) END, LAST_VALUE((NOT (CAST(t0.c2 AS REAL)))) OVER ( ROWS  CURRENT ROW), (+ (t0.c58 COLLATE NOCASE)) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((t0.c58) BETWEEN (0.8680393650284248 COLLATE NOCASE) AND (((t0.c0) BETWEEN ('0.07060835319054137') AND (vt1.c0)))) FROM t0, vt1 GROUP BY (+ (((t0.c0)<=(vt1.c0)))), ((IFNULL(t0.c58, vt1.c0)) NOT BETWEEN ((((t0.c0, t0.c0, t0.c2))>(('춍tj{ns~|G', t0.c2, vt1.c0)))) AND (((t0.c0)IS(t0.c2)))), (((t0.c0 COLLATE RTRIM, NULL, (t0.c2 IN ())))==(((((vt1.c0)) BETWEEN ((t0.c58)) AND ((vt1.c0))), (('') ISNULL), (NULL IN (vt1.c0))))) ORDER BY ((((t0.c0)LIKE(t0.c0)))&((vt1.c0 IN ())))  NULLS LAST; -- 0ms;
SELECT CASE ((t0.c0) NOT BETWEEN (t0.c58) AND (t0.c0))  WHEN (t0.c0 IN ()) THEN ((t0.c0)/(t0.c58)) ELSE SUM('2058081592') END, CUME_DIST() OVER (), CAST((((t0.c2, t0.c58, t0.c58))<((t0.c0, vt1.c0, t0.c58))) AS REAL) FROM t0, vt1; -- 0ms;
SELECT (NOT (LIKELIHOOD(t0.c0, 0.30335082427552096))) FROM t0, vt1 GROUP BY CASE WHEN vt1.c0 THEN t0.c2 END COLLATE BINARY, ((vt1.c0)GLOB(0Xa1f3995)) COLLATE NOCASE, '', ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c58))) NOT BETWEEN ('') AND (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), LIKELY(((t0.c0)>>(t0.c58))) ORDER BY CASE WHEN LIKELIHOOD(DISTINCT t0.c0, 0.5574949544445913) THEN (((t0.c0)) BETWEEN ((t0.c58)) AND ((t0.c2))) ELSE x'' END ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((+ (vt1.c0))) IS FALSE) FROM t0;SELECT ALL ((0.8934277102218027 COLLATE BINARY)GLOB((('-1273167323')|(t0.c2)))) FROM vt1, t0; -- 0ms;
SELECT ALL (((((t0.c0, t0.c2, vt1.c0))==((vt1.c0, vt1.c0, t0.c58))))GLOB(TOTAL(t0.c2))) FROM vt1 WHERE (((CASE WHEN 0xffffffffa2274d9e THEN x'' ELSE '-349124726' END) NOTNULL));SELECT ALL t0.c0 FROM vt1, t0; -- 0ms;
SELECT (((((vt1.c0)==(t0.c58))))<>((((t0.c58) NOT BETWEEN (vt1.c0) AND (t0.c0))))) FROM vt1 WHERE (CASE WHEN ((NULL)<=(x'')) THEN (('') NOT BETWEEN (NULL) AND (x'')) WHEN (('') BETWEEN (x'') AND ('-1734125472')) THEN CAST(x'' AS TEXT) WHEN (x'' IN ('')) THEN (((0.8617273446583738))<=((''))) END) LIMIT -1800729522;SELECT ALL (((((((t0.c58)) NOT BETWEEN ((vt1.c0)) AND ((t0.c58))))OR(t0.c2)))OR((t0.c0 IN (0.25148119982560146, t0.c2)))), CASE (('133193832') NOT BETWEEN (t0.c58) AND (t0.c0))  WHEN GLOB(NULL, t0.c58) THEN CASE WHEN t0.c58 THEN t0.c2 WHEN vt1.c0 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 ELSE t0.c58 END ELSE ((vt1.c0)<=(vt1.c0)) END, (CAST(t0.c2 AS INTEGER) IN ()) FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST;SELECT ALL CAST(x'' AS TEXT) FROM vt1 ORDER BY (((((t0.c58))<=((t0.c2)))) NOT NULL)  NULLS LAST;SELECT (~ (((x'') NOT NULL))) FROM vt1, t0; -- 0ms;
SELECT ALL CASE WHEN (- (t0.c0)) THEN (+ (vt1.c0)) END, ((((((((t0.c2 COLLATE NOCASE)AND((((vt1.c0))>((vt1.c0))))))OR((~ (t0.c58)))))OR(t0.c58 COLLATE NOCASE)))AND(vt1.c0)), (((t0.c2)) NOT BETWEEN (((('-427535771')>=(vt1.c0)))) AND ((((((t0.c58)AND(t0.c2)))OR(t0.c2))))) FROM t0, vt1 WHERE ((((CASE NULL  WHEN x'' THEN 'a[' END))<((((((0.8600712562416492)AND(0.5973905564441389)))AND(x'')))))); -- 0ms;
SELECT DISTINCT json_type('-715421638') FROM t0, vt1 WHERE (LIKELY(((x'd1e1') BETWEEN (0xffffffffeb3e6007) AND ('0.1350878970676247')))); -- 1ms;
SELECT DISTINCT ((((((t0.c58)OR(vt1.c0)))AND(t0.c58))) NOTNULL) FROM t0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c2) NOTNULL) THEN TOTAL(t0.c2) WHEN ((t0.c2) ISNULL) THEN (((t0.c2, vt1.c0, t0.c2)) BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c58, t0.c58, t0.c2))) WHEN ((vt1.c0)OR(t0.c0)) THEN ((t0.c58) BETWEEN (vt1.c0) AND (vt1.c0)) END FROM t0;SELECT ((t0.c0) IS FALSE) FROM vt1;SELECT DISTINCT ((- (t0.c0)) IN ()) FROM vt1, t0 LIMIT 1661845382 OFFSET 1581160970; -- 0ms;
SELECT DISTINCT (((((vt1.c0, t0.c58, t0.c2)) BETWEEN ((0.6918863558938816, t0.c2, t0.c58)) AND ((x'', t0.c2, t0.c58)))) NOT BETWEEN (LIKELIHOOD(t0.c58, 0.053315053587554395)) AND (((t0.c2)-(t0.c0)))) FROM t0;SELECT DISTINCT CASE ((((vt1.c0)AND(t0.c58)))OR(t0.c2))  WHEN (((t0.c58)) BETWEEN ((vt1.c0)) AND ((t0.c2))) THEN ((((t0.c2)OR(t0.c58)))OR(t0.c58)) ELSE ((t0.c0)AND(vt1.c0)) END FROM t0 WHERE ((((+ (NULL)))/(CASE WHEN 0.2894637628462986 THEN 'oHt&]}>' END))) ORDER BY ABS(((t0.c0)%(t0.c58))) ASC, CAST((((vt1.c0, t0.c2, t0.c0, t0.c0, t0.c0, t0.c2, t0.c0))=((t0.c2, t0.c58, t0.c2, t0.c2, t0.c0, t0.c0, t0.c2))) AS NUMERIC) DESC  NULLS FIRST, (((t0.c58)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c58) ISNULL)))) ASC;SELECT (((t0.c58, t0.c58, t0.c58)) BETWEEN ((((((((((((((t0.c58)OR(t0.c0)))AND(vt1.c0)))OR(t0.c58)))OR(t0.c2)))OR(t0.c58)))AND(vt1.c0)), ((((t0.c2)AND(0.8006335167894426)))OR(t0.c58)), (NOT (t0.c2)))) AND ((((t0.c0) ISNULL), ((((t0.c58)OR(t0.c0)))AND(t0.c58)), NULL))), ((((t0.c2)/(t0.c58)))|(((vt1.c0) NOT NULL))), CASE WHEN ((t0.c0)<=(t0.c2)) THEN CAST(t0.c0 AS TEXT) END FROM vt1 WHERE (((('1㲝渭E(g&Vn')) BETWEEN ((((NULL) NOT NULL))) AND ((('' IN (0.2691395707186679))))));SELECT DISTINCT (NOT (LAST_INSERT_ROWID())), (((CAST(t0.c0 AS BLOB)))>=((COUNT(t0.c2)))), (-9.3971428E7 IN (NULLIF(DISTINCT t0.c2, t0.c0))) FROM t0, vt1 WHERE (((((LAST_INSERT_ROWID())OR(CAST(NULL AS INTEGER))))AND(((((NULL)OR(x'')))OR(NULL))))); -- 0ms;
SELECT ALL (((((t0.c2, t0.c2, vt1.c0))<=((t0.c2, t0.c2, t0.c2)))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((x'3699') NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM t0 LIMIT 659605984 OFFSET -2060272497;SELECT DISTINCT LIKELY(((((t0.c0)AND(t0.c2)))OR(NULL))) FROM vt1;SELECT (+ (t0.c2 COLLATE BINARY)), COALESCE((((t0.c58)) BETWEEN ((0.8280360750286826)) AND ((vt1.c0))), (t0.c58 IN (t0.c58))), ('u?.Bc^U昍N' IN ()) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (NOT (vt1.c0)) FROM t0 WHERE ((((((('m⡟k*+	')) NOT BETWEEN ((0.0738705398161823)) AND ((9.30895403E8)))))<(((('0.06253381022791538')|(x''))))));SELECT ALL CASE (((t0.c0))<((vt1.c0)))  WHEN SUM(t0.c0) THEN vt1.c0 COLLATE NOCASE END, ((((((((((t0.c58) IS TRUE))OR(((t0.c0)>(t0.c0)))))AND(((t0.c2) IS FALSE))))AND(((t0.c2) IS FALSE))))OR(((vt1.c0) BETWEEN (t0.c2) AND (vt1.c0)))), x'' COLLATE NOCASE, ((CAST(t0.c2 AS INTEGER))|(((vt1.c0)%(vt1.c0)))), (((CAST(x'' AS TEXT)))==(((((t0.c2))<=((t0.c58)))))) FROM t0 LIMIT -913046720;SELECT DISTINCT -1999558212 FROM vt1 WHERE ((- ((+ (NULL))))); -- 0ms;
SELECT (~ (t0.c0 COLLATE RTRIM)), ((t0.c2)<>(vt1.c0 COLLATE NOCASE)), (~ (t0.c58)) COLLATE BINARY FROM t0, vt1; -- 0ms;
SELECT ALL ((t0.c2)<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) FROM vt1, t0 WHERE ((((x'afb6')) NOT BETWEEN ((highlight(NULL, NULL, x'7dd0', NULL))) AND (((('0.8515639877406666') ISNULL)))));SELECT ALL 'v.kE0|[a1', CUME_DIST() OVER (), UNLIKELY(CASE t0.c0  WHEN x'9a77' THEN vt1.c0 ELSE t0.c0 END) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((t0.c0 IN (t0.c58))) NOT BETWEEN (t0.c58) AND (CAST(t0.c0 AS INTEGER))), ((((vt1.c0)|(t0.c2))) NOTNULL), (((t0.c0)) NOT BETWEEN ((((x'')=(t0.c2)))) AND ((((t0.c0)AND(t0.c58))))) FROM vt1 WHERE ((1.112932307E9 IN ())) GROUP BY (((((t0.c2)) BETWEEN ((t0.c58)) AND ((t0.c0))))>>((((vt1.c0, '2p*Pq繴', t0.c58))!=((0.873171188393143, t0.c0, t0.c58)))));SELECT ALL (((vt1.c0)) NOT BETWEEN ((t0.c58)) AND ((((t0.c0)GLOB(t0.c0))))), ((((t0.c2)>=(t0.c0)))LIKE(((t0.c2)IS NOT(t0.c0)))), ((MIN(t0.c2)) IS FALSE), (NOT (vt1.c0)) COLLATE BINARY, ((((TRIM(vt1.c0, vt1.c0))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(((vt1.c0) NOTNULL))) FROM vt1;SELECT ALL LAG(CHANGES(), TOTAL_CHANGES(), (((t0.c0) BETWEEN (t0.c58) AND (t0.c2)) IN ())) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((t0.c0)OR(t0.c2))) AND (((t0.c2)LIKE(t0.c58)))) FROM t0 WHERE ((((x'')=('%r')) IN ()));SELECT DISTINCT (((('')=(t0.c2)))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) FROM t0, vt1 WHERE (CAST(x'38e5' COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))>>((vt1.c0 IN (t0.c2)))) FROM vt1;SELECT DISTINCT ((DATE(t0.c58, t0.c0, vt1.c0)) BETWEEN (CASE t0.c58  WHEN '1904059889' THEN vt1.c0 END) AND (((t0.c2)/(t0.c0)))) FROM vt1;SELECT DISTINCT TOTAL(((t0.c58) ISNULL)) OVER ( ORDER BY MAX(t0.c58, t0.c2) COLLATE NOCASE DESC  NULLS LAST), LIKELY(DISTINCT GROUP_CONCAT(t0.c58)), vt1.c0 FROM vt1, t0; -- 0ms;
SELECT FIRST_VALUE(CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) OVER () FROM vt1 LIMIT 1263130494 OFFSET 454514555; -- 0ms;
SELECT ALL ((- (t0.c0)) IN ('0.8848145276998433')), (((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((t0.c58))) COLLATE NOCASE, ((((((t0.c0)AND(t0.c2)))OR(((((((((t0.c0)OR(x'')))OR(vt1.c0)))OR('339026852')))AND(t0.c58)))))OR(((t0.c58)AND(NULL)))) FROM vt1, t0; -- 0ms;
SELECT ALL UNLIKELY(((t0.c2)<(t0.c2))), NTILE(((((vt1.c0 IN ())))<((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) OVER (), NULL FROM vt1 WHERE (CAST(0.28496881489304016 COLLATE NOCASE AS REAL));SELECT DISTINCT CAST(COUNT(*) AS INTEGER), ((((t0.c2) IS FALSE)) NOT BETWEEN (((((vt1.c0)OR(t0.c58)))OR(vt1.c0))) AND (((((((((((((vt1.c0)AND(-2.13579641E9)))OR(t0.c0)))AND(t0.c58)))AND(vt1.c0)))AND(t0.c58)))AND(t0.c0)))), CASE WHEN t0.c2 COLLATE NOCASE THEN ((t0.c0) NOT NULL) WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c58 THEN t0.c0 ELSE t0.c2 END THEN SUM(x'') WHEN (~ (t0.c0)) THEN ((t0.c58)%(t0.c58)) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END FROM vt1;SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c2))) BETWEEN (CAST(t0.c58 AS NUMERIC)) AND ((((vt1.c0, t0.c2, vt1.c0))>=((t0.c0, t0.c0, t0.c58))))), COALESCE(DISTINCT ((t0.c58)OR(t0.c2)), vt1.c0 COLLATE RTRIM), (((t0.c2 IN (t0.c2)))-(vt1.c0)) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((t0.c58)OR(((((((((vt1.c0)AND(t0.c0)))OR(t0.c2)))OR(t0.c58)))OR(vt1.c0)))) FROM vt1, t0 WHERE (CAST((+ ('57347851')) AS NUMERIC)); -- 0ms;
SELECT ALL (((vt1.c0) BETWEEN (t0.c2) AND (t0.c58)) IN ()) FROM vt1 WHERE ((((((((NULL, 0.7165493874744179, NULL))<(('', 'bG2/B\rIw', -1.208930179E9))))OR((~ ('-561560678')))))OR((0x7fa5e576 IN ())))); -- 0ms;
SELECT ALL 'o湯8WBM' FROM vt1 WHERE (((('', '0.0', '1836572058')) BETWEEN ((x'' COLLATE NOCASE, CAST('1365667431' AS NUMERIC), INSTR(x'3aa71049826a', x''))) AND (('' COLLATE NOCASE, ((x'')*(0.21189778493596412)), ((0.5039256098903876) NOT NULL))))); -- 0ms;
SELECT DISTINCT (((t0.c0)<=(t0.c0)) IN ()) FROM t0, vt1 WHERE (0.7389672228997679); -- 0ms;
SELECT DISTINCT (((((vt1.c0)AND(t0.c0)))OR(vt1.c0)) IN (CAST(t0.c58 AS TEXT))) FROM t0;SELECT DISTINCT (CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END IN ()), ((((vt1.c0) NOT BETWEEN (t0.c2) AND (vt1.c0))) ISNULL), TOTAL(CASE t0.c58  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c58 WHEN 0.14503283766472774 THEN t0.c2 WHEN vt1.c0 THEN t0.c2 ELSE t0.c2 END), (((t0.c58)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((t0.c2)/(t0.c58))))), CAST(((vt1.c0)>>(t0.c2)) AS NUMERIC) FROM t0 WHERE ((((((((((((((((0.07567562038119735)OR('-2101565181')))OR('-228255026')))OR('ꛅ㓌燕?&5')))OR('꾫v')))OR('-1734125472')))AND(x''))))>((((('-368413532', '0.8515639877406666', 'Tugs', '뉍J>QS', 0.45979241341316557))>=((3.17736002E8, 2.141578614E9, x'', -828936540, NULL)))))));SELECT DISTINCT AVG(t0.c58 COLLATE BINARY COLLATE RTRIM) FROM t0, vt1 WHERE (((0.09475303755752384 IN ()) IN ((x'cb6c' IN ()), (('489030368')>>(x''))))) LIMIT -188033947; -- 0ms;
SELECT vt1.c0 FROM t0, vt1 WHERE ((((((0.1609940111197269)LIKE(x'')), ((NULL)/('0.8348715524199054')), 'u%n3uc' COLLATE NOCASE, ((('-287264285', ',*', '-1045054092')) NOT BETWEEN ((NULL, NULL, x'')) AND ((0.836007262088098, -1199259926, x''))), (((('떟bPd6e''')OR(194269147)))AND(NULL))))!=((CAST(NULL AS REAL), (0.46899065680377605 IN (0.33690738513271323, '')), (('')>(-6.62389712E8)), (((0xffffffffcfdce2dd)) BETWEEN ((x'')) AND ((0.6933917249788667))), x'')))); -- 1ms;
SELECT DISTINCT LIKELIHOOD('-1208930179', 0.7706733704165286) FROM vt1, t0 WHERE ((((((('!vk2363w')AND(0.08849725743181347)))OR(0x20ae64d7)))||('gJB__' COLLATE NOCASE))) ORDER BY (((t0.c58 IN ())) NOTNULL), ((((x'ab81')AND(((t0.c58)|(vt1.c0)))))OR(((((vt1.c0)OR(x'')))OR(t0.c58)))), ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS BLOB))))AND(((-636902432)-(t0.c2))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ABS(t0.c2 COLLATE NOCASE) FROM vt1, t0; -- 0ms;
SELECT DISTINCT CASE CAST(vt1.c0 AS BLOB)  WHEN (+ (t0.c2)) THEN ((t0.c0) ISNULL) END FROM vt1, t0 WHERE (((((0.828645857981578)%('0x'))) IS FALSE)) LIMIT -1543503925; -- 0ms;
SELECT ((((((vt1.c0)AND(317736002)))OR(t0.c58))) BETWEEN (((t0.c0)>(t0.c58))) AND (vt1.c0)) FROM t0, vt1 WHERE (((((((0.5150987770446921)AND('%\n')))AND('6|')))+((('1120940159') BETWEEN ('') AND (NULL))))) LIMIT -450592284 OFFSET 110208264; -- 0ms;
SELECT DISTINCT (((t0.c58, t0.c2, vt1.c0)) NOT BETWEEN ((TOTAL(vt1.c0), ((((t0.c2)OR(t0.c58)))OR(t0.c2)), '-1107106312')) AND ((x'', CAST(x'5c75' AS TEXT), CASE WHEN t0.c0 THEN t0.c2 END))), LAST_VALUE(t0.c0) OVER (), (((t0.c58 IN ()))&(CAST(t0.c58 AS INTEGER))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT AVG(((((vt1.c0)OR(t0.c58)))AND(t0.c58))) OVER (), ((t0.c2)>=(t0.c58)), LAST_VALUE(NULLIF(((vt1.c0)/(vt1.c0)), t0.c58)) OVER ( PARTITION BY (~ (CASE WHEN vt1.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c58 WHEN NULL THEN t0.c2 ELSE t0.c0 END)), (((t0.c2 IN (t0.c0))) BETWEEN (((t0.c0)>=(t0.c0))) AND ('BfwtU3h]'))), (((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c58))))<>(t0.c0)), '' FROM t0, vt1; -- 0ms;
SELECT ALL CHAR(vt1.c0) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (((('-1371048255')OR(((t0.c58) BETWEEN (t0.c0) AND (t0.c2)))))AND((+ (vt1.c0)))) FROM vt1, t0 WHERE ('⣙MhO-') LIMIT -561021813; -- 0ms;
SELECT ROW_NUMBER() OVER ( GROUPS BETWEEN x'' PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM vt1 WHERE (0.15947065440084573) GROUP BY NULL HAVING x''; -- 0ms;
SELECT ALL t0.c58 FROM t0 ORDER BY t0.c2 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST; -- 0ms;
SELECT ((t0.c0 COLLATE RTRIM) IS TRUE), LAST_VALUE((((((((((vt1.c0 IN ()))OR((((NULL))==((t0.c2))))))AND(((t0.c58)>=(t0.c0)))))OR(NULL)))AND(((t0.c0)LIKE(vt1.c0))))) OVER (), 'ZVTV{L懏6Q' FROM vt1, t0; -- 0ms;
SELECT CASE WHEN ((vt1.c0)<<(t0.c2)) THEN CAST(t0.c58 AS TEXT) WHEN (~ (vt1.c0)) THEN CASE WHEN t0.c58 THEN t0.c2 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN t0.c2 WHEN t0.c58 THEN t0.c2 WHEN t0.c2 THEN t0.c0 END WHEN ((t0.c2)IS NOT(t0.c0)) THEN ((t0.c0)<>(t0.c2)) END, (((('1904059889')!=(t0.c0))) IS TRUE), LAST_VALUE('-1734125472' COLLATE RTRIM) OVER () FROM vt1, t0 WHERE ((((((('')LIKE(x'')))AND((('-1567894024') NOT BETWEEN (0.5302626845521712) AND (NULL)))))OR(CAST(x'5973' AS BLOB)))); -- 0ms;
SELECT (((((t0.c2))<=((vt1.c0))))AND((NOT (vt1.c0)))) FROM vt1, t0 WHERE (((((1833020985) BETWEEN (']t') AND (NULL))) NOT BETWEEN ((x'' IN ())) AND (NULL))) LIMIT -102982957; -- 0ms;
SELECT ALL (((- (vt1.c0))) NOT BETWEEN ((t0.c2 IN ())) AND (((vt1.c0) IS FALSE))) FROM t0, vt1 WHERE (x''); -- 0ms;
SELECT 0.383336958798427 FROM t0, vt1; -- 0ms;
SELECT ALL ((((((t0.c0) ISNULL))AND((+ (x'')))))OR('1817523292' COLLATE BINARY)) FROM t0; -- 0ms;
SELECT DISTINCT (NOT (((((vt1.c0)AND(t0.c2)))OR(t0.c2)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((t0.c2)>=(((vt1.c0) NOTNULL))) FROM t0 WHERE (((NULL)<=(0.6918863558938816)) COLLATE RTRIM);SELECT ((((x'')=('-544380730'))) NOT BETWEEN (CAST(t0.c2 AS TEXT)) AND (UPPER(t0.c58))) FROM vt1;SELECT DISTINCT TOTAL(CAST(t0.c2 AS NUMERIC)) FROM vt1;SELECT DISTINCT ((('뫜uU') NOT BETWEEN (vt1.c0) AND (t0.c0)) IN ()) FROM t0 WHERE ((((NULL)) NOT BETWEEN (((('8\rVTt|F''') NOTNULL))) AND ((((NULL) BETWEEN ('-522988395') AND (0.03284616049625089)))))); -- 0ms;
SELECT (~ (SUM(t0.c0))), COALESCE(DISTINCT CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c58 WHEN vt1.c0 THEN 0.8278984288979083 ELSE t0.c58 END, COALESCE(t0.c0, t0.c58)), CAST(CASE t0.c2  WHEN t0.c58 THEN vt1.c0 END AS NUMERIC) FROM t0, vt1 INDEXED BY i2 ORDER BY (((((t0.c0))>=((t0.c2))))IS(((t0.c0) IS FALSE))) ASC  NULLS FIRST;SELECT ALL DATE(((NULL) NOT BETWEEN (t0.c0) AND (vt1.c0)), ((t0.c0)<=(t0.c2)), ((t0.c2)&(t0.c0)), (- (t0.c58)), GROUP_CONCAT(t0.c2)), COUNT(*) OVER (), CASE WHEN '1313835183' COLLATE BINARY THEN (vt1.c0 IN ()) WHEN COUNT(*) THEN MIN(vt1.c0, t0.c2) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c58 THEN t0.c58 ELSE x'' END THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c58)) END FROM vt1 WHERE (((LIKE('0u8&', 0xffffffff8c70ab49)) IS FALSE));SELECT DISTINCT x'65bf', ABS((+ (t0.c0))), ((((((t0.c58)<(vt1.c0)))OR(t0.c2)))AND('-331867525' COLLATE BINARY)) FROM t0, vt1 WHERE (((CAST(0.8861677000605147 AS REAL))+(('>U#qVSIN/' IN ())))) GROUP BY UPPER(CAST(t0.c2 AS BLOB)); -- 0ms;
SELECT DISTINCT (((t0.c0 IN (vt1.c0)))AND(((t0.c58) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1, t0 WHERE ((((0X64d34ec6) NOT NULL) IN ())); -- 0ms;
SELECT ALL (((((vt1.c0, t0.c0, t0.c2))>=((t0.c58, t0.c0, vt1.c0))))IS((0.09650971245254936 IN ()))), LEAD(HEX(LOWER(t0.c58)), UNLIKELY(DISTINCT ((x'b21c') BETWEEN (t0.c58) AND (t0.c0))), ((t0.c0)+(t0.c0)) COLLATE BINARY) OVER (), ((((t0.c58) ISNULL))*(CAST(t0.c58 AS INTEGER))) FROM t0, vt1 WHERE ((((('-913046720') IS FALSE)) NOT BETWEEN ((NOT (x''))) AND ((('-1765156790')<<(NULL))))); -- 0ms;
SELECT t0.c0 FROM vt1;SELECT (('1\r6웹PTd') ISNULL), ((t0.c58 COLLATE RTRIM)OR((((t0.c58))<((t0.c0))))), (NOT (LIKELIHOOD(DISTINCT t0.c58, 0.7422042391239969))) FROM t0; -- 0ms;
SELECT ALL ((((t0.c0)OR(t0.c0)))+(((t0.c2)!=(t0.c58)))) FROM t0, vt1 WHERE (((CASE WHEN 136832315 THEN 0.5478468423813486 END) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c2) AND (0.02398779477953883)))AND(((vt1.c0) NOT BETWEEN (t0.c58) AND (t0.c0)))), ((NULL) IS TRUE), LIKELY(t0.c2 COLLATE RTRIM) FROM t0;SELECT DISTINCT t0.c0, SQLITE_SOURCE_ID(), ((t0.c58 COLLATE BINARY)<=((((vt1.c0, t0.c2, vt1.c0, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c58, t0.c2, '-574755741', t0.c58)) AND ((vt1.c0, vt1.c0, vt1.c0, t0.c58, t0.c2))))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT x'1b74', x'', ((((((t0.c58)AND(t0.c58)))OR(t0.c2))) NOTNULL) FROM vt1, t0 WHERE ((((((-1549286761)AND(0.3679844100750773)))OR(x'')) IN ((NULL IN ())))); -- 0ms;
SELECT DISTINCT (((~ (t0.c0))) BETWEEN (vt1.c0) AND ((- (vt1.c0)))) FROM t0, vt1 WHERE (((((0.2096483630952256)%('')))-(IFNULL(x'', 0.18345011481690565)))) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0) ISNULL) THEN ((((t0.c58)OR(vt1.c0)))AND(t0.c0)) ELSE (((t0.c0, t0.c0, vt1.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, '194552929', t0.c58, vt1.c0, t0.c58)) AND ((t0.c0, t0.c58, t0.c58, t0.c0, t0.c0))) END; -- 0ms;
SELECT DISTINCT (((((0.5976610504020919, vt1.c0, '\ꑡf'))<>((t0.c2, t0.c58, vt1.c0)))) BETWEEN (((((((((t0.c2)OR(t0.c0)))AND(t0.c58)))OR(vt1.c0)))OR(t0.c0))) AND (t0.c0)) FROM vt1, t0; -- 1ms;
SELECT DISTINCT CASE WHEN CASE WHEN 'z0b*' THEN t0.c2 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN '' END THEN ((t0.c58)IS(vt1.c0)) END FROM t0 ORDER BY (((t0.c58, t0.c58, vt1.c0)) NOT BETWEEN ((((t0.c2) ISNULL), CAST('-811469741' AS INTEGER), ((t0.c2) NOT BETWEEN (t0.c58) AND (t0.c2)))) AND ((CAST(vt1.c0 AS INTEGER), NULL, ((((t0.c0)AND(t0.c58)))AND(t0.c2))))) ASC  NULLS LAST, (((- (vt1.c0))) NOT BETWEEN (((vt1.c0)<>(t0.c58))) AND ((((vt1.c0, t0.c2, t0.c2))>((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, (NULL IN ()) ASC  NULLS LAST;SELECT DISTINCT CASE ((t0.c58) IS TRUE)  WHEN highlight(t0.c58, t0.c2, t0.c2, t0.c0) THEN ((((vt1.c0)AND(t0.c58)))OR(t0.c2)) WHEN SUM(t0.c58) THEN ((t0.c58) BETWEEN (t0.c58) AND (t0.c58)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (~ (vt1.c0)) WHEN ((((((((-807607587)AND(t0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN t0.c0 WHEN (((t0.c58))>=(('-1371657142'))) THEN (((t0.c0))<=((vt1.c0))) END FROM t0, vt1 WHERE ((((('941144661')<>(1067281550)))IS NOT(((NULL)/('')))));SELECT x'' FROM t0, vt1; -- 0ms;
SELECT ((COUNT(*)) NOT BETWEEN (((t0.c0)<=(t0.c2))) AND (((vt1.c0) BETWEEN (t0.c2) AND (vt1.c0)))), LAG(NULL, (((((t0.c58) IS TRUE)))<>((((t0.c0) BETWEEN (t0.c58) AND (vt1.c0))))), ((((NULL) NOT BETWEEN (t0.c58) AND (t0.c58))) BETWEEN (((t0.c0)>(0Xffffffffe2f64420))) AND (CAST(t0.c0 AS NUMERIC)))) OVER (), (~ (((('-1198886613'))<((vt1.c0))))) FROM vt1, t0 WHERE (((((((((((((((NULL)OR(NULL)))AND(0X3f9b56f8)))OR(1600813766)))OR(NULL)))OR('')))OR(0.46627733928378023))) NOT NULL)); -- 0ms;
SELECT ((((t0.c2) NOT NULL)) IS FALSE) FROM t0, vt1 ORDER BY (t0.c0 IN (t0.c0)) ASC, CAST((('') ISNULL) AS TEXT) ASC  NULLS FIRST; -- 0ms;
SELECT CUME_DIST() OVER (), AVG(CAST(t0.c58 AS TEXT)), ((((rtreenode(vt1.c0, t0.c2))OR('-811469741')))AND('')) FROM t0 WHERE ('0.9871632302223226');SELECT ((t0.c58 IN ()) IN ()) FROM vt1, t0 WHERE (((((((((((0.26353515543481054)<('359515340')))OR(CAST(0.04475722893397538 AS BLOB))))AND('-156568209' COLLATE NOCASE)))AND('5?' COLLATE RTRIM)))OR((0.09773616530264628 IN ())))) ORDER BY NULL LIMIT -779463052 OFFSET 1889230899; -- 1ms;
SELECT DISTINCT (NOT (((vt1.c0)>>(t0.c2)))) FROM t0;SELECT ALL LAST_VALUE((((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c2)))OR(t0.c58)) IN ())) OVER () FROM t0, vt1 WHERE (CASE WHEN ((('(Y')) NOT BETWEEN (('')) AND ((0.4454915723058124))) THEN (- (x'')) WHEN CASE '0.4747662778342565'  WHEN '632534757' THEN 0.9948174077401418 ELSE NULL END THEN (0.2630513579527235 IN ()) WHEN (+ (NULL)) THEN CASE WHEN NULL THEN '1904059889' END END); -- 0ms;
SELECT DISTINCT ((((t0.c0)GLOB(vt1.c0))) BETWEEN (LAST_INSERT_ROWID()) AND ((((vt1.c0)) BETWEEN ((t0.c58)) AND ((t0.c58))))), (((- (vt1.c0)))!=((((t0.c0)) BETWEEN ((t0.c58)) AND ((t0.c0))))), ((((t0.c2 IN (t0.c0)), CAST(t0.c58 AS BLOB), LIKELIHOOD(DISTINCT t0.c58, 0.06856360909462389)))<=((((vt1.c0) ISNULL), (t0.c2 IN ()), COUNT(*)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((t0.c0)AND(t0.c58))) BETWEEN ((((vt1.c0, t0.c58, t0.c58))>((t0.c58, t0.c0, vt1.c0)))) AND ('')) FROM t0;SELECT DISTINCT PRINTF(NULL) FROM t0 WHERE (CAST(CAST(NULL AS INTEGER) AS BLOB)) GROUP BY ((CASE t0.c0  WHEN t0.c2 THEN t0.c58 ELSE t0.c58 END) NOTNULL), (((((t0.c58, vt1.c0, vt1.c0))<((t0.c2, t0.c58, t0.c0))))OR(((t0.c0)LIKE(t0.c0)))), CAST(t0.c2 AS INTEGER);SELECT t0.c2 FROM vt1, t0 ORDER BY (((CASE t0.c0  WHEN t0.c2 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c58 THEN t0.c58 ELSE t0.c0 END, ((NULL)==(t0.c0)), (vt1.c0 IN ())))<((vt1.c0, (((vt1.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))), 0X3d8c9f68))) ASC; -- 1ms;
SELECT DISTINCT t0.c0 FROM t0, vt1 GROUP BY (((CAST(t0.c0 AS BLOB), (((t0.c2, 973414901, t0.c0))==((t0.c58, '', x''))), CAST(t0.c2 AS TEXT)))>=(((((vt1.c0, t0.c2, t0.c58, vt1.c0, t0.c2)) NOT BETWEEN ((t0.c2, vt1.c0, t0.c0, t0.c0, vt1.c0)) AND ((t0.c2, vt1.c0, t0.c2, t0.c2, 'UtVuVI'))), ((t0.c0) NOT BETWEEN ('') AND (t0.c0)), (vt1.c0 IN ())))) HAVING (((vt1.c0)) NOT BETWEEN ((((t0.c0)=(t0.c2)))) AND ((NULL COLLATE RTRIM))); -- 0ms;
SELECT ((t0.c0) IS FALSE) FROM vt1, t0; -- 0ms;
SELECT ALL (('-1790293003') NOTNULL) FROM vt1, t0 WHERE ((NOT ((('-561021813') NOT NULL)))); -- 0ms;
SELECT ALL CASE (('K') IS TRUE)  WHEN CAST(t0.c58 AS BLOB) THEN ((t0.c58) ISNULL) WHEN (+ (t0.c2)) THEN ((vt1.c0) IS TRUE) WHEN (- (t0.c58)) THEN (x'' IN (t0.c2, t0.c2)) ELSE ABS(DISTINCT vt1.c0) END FROM vt1 WHERE (((0.9743196374473811 IN ()) IN ((-1244972224 IN ()))));SELECT ALL ((CASE WHEN t0.c58 THEN t0.c2 WHEN vt1.c0 THEN t0.c2 WHEN t0.c58 THEN t0.c58 END)<<(CAST(t0.c2 AS INTEGER))), ((CAST(t0.c2 AS NUMERIC))||(((t0.c58) NOT NULL))), ((LTRIM(vt1.c0))LIKE(((t0.c2) NOT BETWEEN (t0.c58) AND (0Xffffffffc7c6e9ee)))), ((- (t0.c58)) IN ()), SUM(((NULL)%(vt1.c0))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM vt1;SELECT ((CASE 0.20393609832911375  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)%(t0.c0)), COUNT(x''), t0.c2 FROM t0; -- 1ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((SQLITE_COMPILEOPTION_GET('-1692177397'))OR(((910807379)OR(0.996235613047408)))))OR(CASE 0.5772518862899811  WHEN 0.45066169878360873 THEN x'c8e2' ELSE '-50615721' END))) GROUP BY ((((((((((vt1.c0) IS FALSE))OR((- ('998321824')))))OR(((t0.c0)<=(t0.c2)))))OR(((vt1.c0)IS NOT(0.4377236667430381)))))AND(CASE WHEN x'ebf5' THEN t0.c2 END));SELECT ((vt1.c0)AND(x'43d3')) FROM vt1 EXCEPT SELECT ((CASE 0.15390959416151428  WHEN t0.c2 THEN t0.c2 ELSE x'ad02465d' END)!=(((t0.c58) BETWEEN (t0.c2) AND (t0.c0)))) FROM vt1;SELECT AVG(t0.c2) FROM t0 WHERE (CASE WHEN 0.12819529380700512 THEN ('-1107106312' IN (0.19500778805369856)) END); -- 0ms;
SELECT ALL MAX(((t0.c2)||(t0.c2))) FROM t0; -- 0ms;
SELECT (((CAST(t0.c58 AS REAL)))>((((t0.c0) BETWEEN (t0.c58) AND (vt1.c0))))) FROM vt1 WHERE (CAST(CASE WHEN '-1200272123' THEN NULL WHEN x'' THEN -600982751 WHEN NULL THEN 0.518488607053453 ELSE 0.6352093675356333 END AS INTEGER)) ORDER BY ((((((((CAST('' AS BLOB))AND(CAST(t0.c58 AS REAL))))AND(LOWER(t0.c0))))AND(vt1.c0 COLLATE BINARY)))AND(t0.c0 COLLATE RTRIM)) ASC;SELECT CAST(CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c2 THEN t0.c0 END AS BLOB), (((((t0.c58) BETWEEN (t0.c2) AND (vt1.c0))))<((t0.c2 COLLATE NOCASE))), DENSE_RANK() OVER () FROM t0, vt1; -- 1ms;
SELECT DISTINCT ((((t0.c2)&(t0.c2)))<=(COUNT(*))) FROM vt1, t0 WHERE (((((x'')>=(NULL)))||(((x'c1ea')|('-1039372755'))))); -- 0ms;
SELECT ((AVG(t0.c0))LIKE(((((((((vt1.c0)AND(t0.c2)))OR(t0.c58)))OR(vt1.c0)))OR(vt1.c0)))), CAST(((vt1.c0)<>(vt1.c0)) AS BLOB), CASE WHEN ((vt1.c0) IS TRUE) THEN ((t0.c2) BETWEEN (vt1.c0) AND (t0.c0)) END FROM vt1;SELECT DISTINCT TOTAL(x'') FROM vt1 LIMIT -1200272123; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c2 THEN CASE t0.c58  WHEN t0.c2 THEN t0.c58 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE (('08+G') NOT BETWEEN (t0.c58) AND (t0.c0)) END FROM vt1, t0; -- 0ms;
SELECT t0.c0 COLLATE BINARY FROM vt1 WHERE (((((0.058684652132055204) IS FALSE))>>(IFNULL(1.640223466E9, x''))));SELECT ALL x'417b', t0.c58, ((((vt1.c0)>>(t0.c2))) NOT NULL) FROM vt1;SELECT DISTINCT t0.c2 FROM t0, vt1 WHERE (CAST(((((NULL)OR('50338141')))AND(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT (((((((((((t0.c58))==((t0.c2))))AND((((('')AND(t0.c0)))OR(vt1.c0)))))AND((t0.c2 IN (t0.c2, t0.c58)))))OR(((t0.c0)<(t0.c58)))))OR('Muv')) FROM vt1, t0; -- 0ms;
SELECT DISTINCT COUNT((t0.c58 IN ())) FROM t0, vt1 WHERE (((('')) NOT BETWEEN ((((0.08171119285657114)||(NULL)))) AND ((((x'')IS(NULL)))))); -- 0ms;
SELECT ALL x'080c' COLLATE BINARY FROM vt1 LIMIT -455370894; -- 0ms;
SELECT DISTINCT (((t0.c0)IS NOT(vt1.c0)) IN ()) FROM vt1, t0 WHERE (CASE NULLIF(1091299676, '0.0')  WHEN ((('')) BETWEEN ((0.39840043623609966)) AND ((''))) THEN x'' COLLATE RTRIM ELSE 'I	ulD-' COLLATE BINARY END); -- 0ms;
SELECT ALL NTH_VALUE(TRIM(DISTINCT vt1.c0), (((vt1.c0)) NOT BETWEEN (((- (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE)))) OVER (), CASE WHEN '' THEN '' END, t0.c58 FROM vt1 WHERE (x'');SELECT DISTINCT (((+ (t0.c2))) BETWEEN (t0.c0) AND ((vt1.c0 IN ()))), LIKELY(DISTINCT AVG(vt1.c0)), '991193177' FROM vt1 WHERE ((((((((((- (0x5dbb2eee)))AND((((0.26817034395056416))==((0.1489022357438372))))))OR(((0.6777695422037567) BETWEEN ('-574755741') AND (0.9996244493710267)))))AND(((194552929) NOT BETWEEN (0.49706717339349293) AND (x'')))))OR(((NULL) NOT BETWEEN ('-779463052') AND (x'')))));SELECT LIKELY(DISTINCT (- (t0.c58))) FROM t0; -- 0ms;
SELECT ALL x'' FROM t0 WHERE (CASE (('-331867525')/(x'a2ed'))  WHEN ((NULL) BETWEEN ('') AND ('2033116088')) THEN ((NULL)<=(NULL)) ELSE ((NULL)<=('8)|ᘫ?')) END); -- 0ms;
SELECT DISTINCT LEAD(((((vt1.c0)IS NOT(vt1.c0)))=(LTRIM(vt1.c0, vt1.c0))), ((json_insert(vt1.c0, vt1.c0, vt1.c0))=((vt1.c0 IN ()))), (+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) OVER () FROM vt1 WHERE ((((((((((0X4081bc73 IN ()))AND((('4aG9')<=(NULL)))))OR(((((x'')OR(NULL)))AND(NULL)))))OR(((x'') NOTNULL))))AND((0.19622872340886488 IN ())))); -- 0ms;
SELECT MIN(((t0.c2) NOT BETWEEN (t0.c58) AND (t0.c58))) FROM t0 WHERE (CAST(((0.32873127073712693)/(-1.198886613E9)) AS REAL)); -- 0ms;
SELECT DISTINCT NTH_VALUE(CAST(CASE t0.c2  WHEN t0.c58 THEN t0.c2 END AS TEXT), CAST(CAST(0.14114225070279107 AS INTEGER) AS NUMERIC)) OVER () FROM t0, vt1; -- 1ms;
SELECT DISTINCT (((t0.c2 IN ()))/((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c58))))) FROM t0 WHERE ((('\rR' COLLATE BINARY) BETWEEN (CAST(NULL AS BLOB)) AND (((x'4e46')<=('0.07060835319054137'))))) GROUP BY ((CASE t0.c58  WHEN t0.c58 THEN t0.c0 END) BETWEEN ((+ (vt1.c0))) AND ((('')>(t0.c58)))) HAVING ((((t0.c2) NOT NULL))&((vt1.c0 IN ())));SELECT x'', (((NULLIF(vt1.c0, t0.c58), ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c58)), ((t0.c58)<=(vt1.c0)), vt1.c0 COLLATE RTRIM, (('-913046720')OR(vt1.c0))))!=((CASE WHEN vt1.c0 THEN x'' END, ((t0.c58)*(t0.c2)), CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c58 END, ((vt1.c0) ISNULL), ((t0.c0)*(t0.c2))))), ((t0.c2)=(((t0.c0) BETWEEN (vt1.c0) AND (x'')))) FROM t0, vt1 WHERE ((~ (LOWER(DISTINCT x'2056')))); -- 0ms;
SELECT ALL (((t0.c2, t0.c58, t0.c58)) BETWEEN (((t0.c0 IN ()), (t0.c58 IN ()), ((t0.c0)LIKE(t0.c2)))) AND ((((vt1.c0)&(vt1.c0)), ((((t0.c2)AND(t0.c58)))AND(t0.c0)), ((((t0.c58)OR(t0.c58)))AND(t0.c58))))) FROM vt1 NATURAL JOIN t0 WHERE (rtreenode((('0.09488793796240425')IS NOT(0.32873127073712693)), (('1450151360')>=(0.5167613297680202)))) LIMIT 1873597397 OFFSET -1258538625; -- 0ms;
SELECT DISTINCT ((((((t0.c0) NOT BETWEEN (t0.c58) AND (t0.c0)))OR(((t0.c58)IS NOT(vt1.c0)))))OR(TRIM(vt1.c0, t0.c0))) FROM vt1 WHERE (((((-220173494)==(-1877255080))) NOT BETWEEN (((0.8253375866290488)<<(0.7345754763880467))) AND (0.8456628248462194)));SELECT DISTINCT ((((vt1.c0)-('g6\rQ'))) IS FALSE) FROM t0, vt1 WHERE ((CASE WHEN -818086310 THEN x'' WHEN '' THEN 0.7676888733711918 WHEN '' THEN x'f4e0' END IN ())); -- 0ms;
SELECT ALL AVG(((t0.c58)IS NOT(t0.c2))) OVER (), ((((((t0.c0, t0.c2, vt1.c0)) NOT BETWEEN ((t0.c58, t0.c0, x'')) AND ((vt1.c0, vt1.c0, NULL)))))>((NULL))), CAST(UNLIKELY(vt1.c0) AS NUMERIC) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((((t0.c2) IS TRUE)) ISNULL), SUM(((x'4a53') NOT NULL)) OVER ( PARTITION BY highlight((+ (vt1.c0)), t0.c0 COLLATE NOCASE, (vt1.c0 IN ()), ((t0.c0)!=(NULL))), NULLIF(DISTINCT t0.c0 COLLATE NOCASE, ((vt1.c0) BETWEEN (t0.c58) AND (vt1.c0))) ORDER BY ((vt1.c0)LIKE(((((((((t0.c58)OR(t0.c2)))AND(t0.c2)))AND(t0.c58)))OR(t0.c2))))  NULLS FIRST, CASE (NOT (t0.c0))  WHEN (((vt1.c0, t0.c2, t0.c58)) NOT BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c58, t0.c0, vt1.c0))) THEN ((vt1.c0) BETWEEN (t0.c58) AND (t0.c2)) END ASC  NULLS LAST), ((t0.c58)*((((vt1.c0))>((t0.c0))))) FROM vt1, t0 ORDER BY (((CASE WHEN t0.c0 THEN t0.c2 ELSE '-1549286761' END))!=((t0.c2)))  NULLS LAST, (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c58)))) NOT NULL)  NULLS LAST; -- 0ms;
SELECT ((((t0.c2)||(0.3632420392684256))) NOT BETWEEN (CASE WHEN t0.c58 THEN vt1.c0 END) AND (t0.c0)) FROM t0 LIMIT 1640223466;SELECT DISTINCT t0.c0, ((((t0.c0)OR(vt1.c0)))AND(t0.c2)) COLLATE BINARY, ((t0.c2 COLLATE BINARY) NOT BETWEEN ((((t0.c0))>=((t0.c58)))) AND ((((t0.c58, t0.c0, t0.c0)) BETWEEN ((t0.c2, t0.c2, t0.c0)) AND ((t0.c0, vt1.c0, t0.c2))))), ((((TOTAL(vt1.c0))AND(t0.c58 COLLATE RTRIM)))AND((((vt1.c0))>((t0.c58))))), (+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c58)))), vt1.c0, t0.c58 FROM t0 NOT INDEXED;SELECT DISTINCT CAST(((t0.c58)<(0X7fa5e576)) AS INTEGER), MIN(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))), LIKELIHOOD(DISTINCT t0.c0, 0.43377181206768245) COLLATE NOCASE FROM vt1, t0 WHERE (((((NOT (0.22014397672815333)), CAST(NULL AS TEXT), ((x'') IS FALSE)))<((((x'') BETWEEN (0xffffffffa7f92522) AND (NULL)), ((x'')>=(0.6383961132121115)), (- (x'fa28')))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE (CAST(CASE 1606641632  WHEN x'' THEN 0.9788334454115105 END AS INTEGER)); -- 0ms;
SELECT DISTINCT '-329635722' FROM t0, vt1 WHERE (((CASE WHEN NULL THEN 'DlfoY w' END)%(CAST(x'6bfb' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT RANK() OVER (), ((SQLITE_VERSION()) NOT BETWEEN ((t0.c2 IN (vt1.c0))) AND (((vt1.c0) IS FALSE))), (~ (((t0.c2)LIKE(t0.c0)))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((((((t0.c58)AND(t0.c58)))OR(t0.c0))) IS TRUE) FROM vt1;SELECT DISTINCT ((NULL)LIKE(((((vt1.c0)OR(t0.c0)))AND(vt1.c0)))) FROM vt1, t0 ORDER BY ((t0.c58) NOT BETWEEN (UNLIKELY(t0.c0)) AND ((~ (t0.c2)))); -- 0ms;
SELECT (((((((vt1.c0)OR(t0.c58)))AND(t0.c58))))<=((COUNT(*)))) FROM vt1 WHERE (((CASE -2.20173494E8  WHEN -1476844254 THEN 0.9602964072278122 ELSE 1417490085 END) BETWEEN ((NOT (0.3741146133475419))) AND ((- (0.5647723484457696))))) ORDER BY ((NOT (t0.c2)) IN ()) ASC;SELECT ((t0.c2 COLLATE NOCASE)>=(((t0.c0) NOT NULL))) FROM t0, vt1 WHERE ((((((0.6429692134796183))<((NULL))))<>('' COLLATE NOCASE))); -- 0ms;
SELECT ALL CAST((t0.c0 IN ()) AS REAL) FROM t0 GROUP BY (CAST(vt1.c0 AS REAL) IN (vt1.c0 COLLATE NOCASE, CASE WHEN t0.c58 THEN vt1.c0 END));SELECT DISTINCT CASE CAST(t0.c58 AS NUMERIC)  WHEN (((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN t0.c0 END FROM vt1, t0; -- 0ms;
SELECT ALL FIRST_VALUE(((((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt1.c0))) IN (vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt1.c0))))) OVER ( ORDER BY (CAST(vt1.c0 AS TEXT) IN ((vt1.c0 IN ()), (((t0.c0, t0.c58, t0.c58)) BETWEEN ((0.33069694229455293, t0.c2, t0.c0)) AND ((vt1.c0, t0.c58, t0.c2))))) ASC  NULLS LAST, CAST(ABS(DISTINCT x'') AS REAL), ((t0.c58 IN ()) IN ())  NULLS FIRST) FROM vt1;SELECT (('\n') ISNULL), CASE WHEN CASE 0.9544759063812982  WHEN t0.c58 THEN t0.c2 END THEN (((t0.c0))<((t0.c2))) ELSE ((t0.c2) IS TRUE) END, CAST(((vt1.c0)IS NOT(t0.c0)) AS INTEGER) FROM t0, vt1 WHERE (CAST((- (0.8348715524199054)) AS INTEGER)) LIMIT 1674520374 OFFSET 0; -- 0ms;
SELECT DISTINCT ((((vt1.c0 IN ()), TYPEOF(t0.c58), ((((((((vt1.c0)OR(NULL)))AND(t0.c2)))AND('-398163037')))AND(t0.c58))))<((((((((((t0.c2)AND(vt1.c0)))AND(t0.c2)))OR(t0.c0)))AND(vt1.c0)), (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))), ((t0.c0) IS TRUE)))), CASE WHEN t0.c58 COLLATE NOCASE THEN ((t0.c58)IS(0.7654064736891344)) END, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (json(t0.c2)) AND (((t0.c0)*(vt1.c0)))) FROM t0 WHERE (GLOB(x'5f51' COLLATE NOCASE, NULL COLLATE RTRIM));SELECT ROW_NUMBER() OVER ( ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST), json_array_length(((vt1.c0)<>(NULL)), ((t0.c58) IS TRUE)), HEX(DISTINCT ((t0.c0) ISNULL)) FROM vt1, t0 EXCEPT SELECT ALL SQLITE_VERSION() COLLATE BINARY, (((((((vt1.c0, vt1.c0, 0.011521504849844821)) NOT BETWEEN ((t0.c2, vt1.c0, t0.c2)) AND ((t0.c2, t0.c0, t0.c58))))OR(((t0.c0) BETWEEN (t0.c58) AND (t0.c2)))))AND(((t0.c2)<=(t0.c58)))), (NOT (DATE(t0.c2, vt1.c0, vt1.c0))) FROM t0, vt1 WHERE (CAST(LIKELIHOOD(DISTINCT 0x420ea6d9, 0.16430555172530448) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((((t0.c58)AND(NULL)))OR(t0.c2))) BETWEEN (vt1.c0 COLLATE BINARY) AND (LOWER(DISTINCT -2.015952549E9))), LAG('', vt1.c0, vt1.c0) OVER (), (+ (t0.c58)) FROM vt1;SELECT CASE WHEN (((vt1.c0))<((t0.c58))) THEN ((((vt1.c0)AND(t0.c58)))AND(t0.c58)) END FROM t0;SELECT ((t0.c58)IS NOT(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 ELSE vt1.c0 END)), (((t0.c2, vt1.c0, vt1.c0)) BETWEEN ((((t0.c2)>=(t0.c2)), (vt1.c0 IN (t0.c58)), ((t0.c0) NOT BETWEEN (t0.c58) AND (t0.c2)))) AND ((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ()), ((vt1.c0)<=(t0.c0))))), ((CAST(t0.c0 AS BLOB)) NOTNULL) FROM vt1 WHERE (CAST(x'' COLLATE NOCASE AS INTEGER));SELECT DISTINCT GROUP_CONCAT(CAST(t0.c2 AS REAL)) OVER () FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (vt1.c0) AND (-1107106312))) NOTNULL), ((CASE WHEN vt1.c0 THEN t0.c58 WHEN t0.c58 THEN vt1.c0 WHEN t0.c2 THEN NULL WHEN x'' THEN t0.c58 WHEN t0.c0 THEN t0.c58 END) IS TRUE), (UPPER(vt1.c0) IN ()) FROM vt1, t0 ORDER BY ((((((((((NULL)AND(vt1.c0)))AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))!=(((vt1.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))), ((t0.c58)IS(t0.c58)) COLLATE BINARY; -- 0ms;
