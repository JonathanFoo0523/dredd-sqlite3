-- Time: 2024/06/07 06:48:27
-- Database: database63
-- Database version: 3.40.0
-- seed value: 2767225963
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '11133'); -- 2ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -166372626);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET c0='679484037', c0=0.21601928061106335 WHERE DATE(vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER), (~ (vt0.c0))); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x'054b'), (''), (NULL); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES ('{TV'); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 REAL , +c6 TEXT ); -- 13ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('0.21601928061106335'); -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('1c	F(7'); -- 7ms;
INSERT OR FAIL INTO vt1 VALUES (NULL), (NULL), (0xffffffff89cce6e6); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
END TRANSACTION; -- 1ms;
CREATE TEMPORARY VIEW v0(c0, c1, c2) AS SELECT DISTINCT AVG(CAST(rt0.c0 AS TEXT)) OVER (), CASE WHEN json_object(rt0.c4, rt0.c0) THEN vt0.c0 END, (rt0.c0 IN ()) COLLATE RTRIM FROM vt1, vt0, rt0; -- 1ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE rt0 SET c6=x'', c0=']\n', c1=']\n'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS NUMERIC) COLLATE RTRIM; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1933443524); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 310551616); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT OR FAIL INTO rt0(c6, c3, c0, c2, c4, c5) VALUES (NULL, ']\n', 35143805, NULL, -166372626, 0.6458071709537417); -- 2ms;
INSERT OR ROLLBACK INTO rt0 VALUES (NULL, NULL, 0.21390866640138329, '679484037', '-1983060250', 0.6542461212352051, ''); -- 8ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (3.5143805E7), (x'c943'), (''); -- 2ms;
ANALYZE; -- 5ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT OR IGNORE INTO rt0(c6, c0, c1, c5) VALUES ('', NULL, '', 0X218407d); -- 0ms;
VACUUM main; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 26ms;
END TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0)=(x'0f70') WHERE (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (vt1.c0) AND (((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE vt1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
REINDEX; -- 15ms;
END TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=2120640747 unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE rt0 SET c4=227869661; -- 0ms;
DROP TABLE vt1; -- 1ms;
PRAGMA legacy_file_format; -- 1ms;
ROLLBACK TRANSACTION; -- 13ms;
ANALYZE; -- 9ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-2117680118'; -- 0ms;
REINDEX BINARY; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.defer_foreign_keys = true; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '930'); -- 0ms;
ANALYZE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP VIEW v0; -- 0ms;
SELECT DISTINCT CAST(x'a67d' COLLATE NOCASE AS INTEGER) FROM rt0, vt0, vt1 WHERE ((~ (CASE WHEN x'' THEN '2120640747' WHEN 0X66f9a96d THEN NULL WHEN x'' THEN NULL ELSE NULL END))) ORDER BY (((((~ (rt0.c6)))OR(((NULL)*(rt0.c2)))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))) ASC, INSTR(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c6)), CASE rt0.c1  WHEN NULL THEN '-826237794' WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c5 ELSE rt0.c1 END)  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c4)<('')) THEN ((rt0.c5) IS FALSE) WHEN (~ (rt0.c1)) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((((rt0.c4)AND(rt0.c4)))OR(vt1.c0)) ELSE ((rt0.c0)*(rt0.c0)) END FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT rt0.c5 FROM vt1, vt0 CROSS JOIN rt0 ON CAST(((vt1.c0)>=(rt0.c2)) AS NUMERIC) WHERE (CASE WHEN CASE WHEN '-1560984820' THEN 0.08080052447285646 ELSE '-648537233' END THEN ((x'') IS TRUE) ELSE ((x'')>('(qb+棫쉫T䯨')) END); -- 1ms;
SELECT ALL CAST(((0.766754715307206)<>(rt0.c4)) AS INTEGER) FROM vt1, rt0, vt0 WHERE ((((('0.766754715307206') NOT BETWEEN (x'') AND (0.25696651190394215)))<=(((0.46697762053481406) ISNULL)))) GROUP BY CASE LENGTH(rt0.c1)  WHEN ((0.5997266083423922) NOT NULL) THEN vt1.c0 COLLATE NOCASE WHEN ((rt0.c5)OR(rt0.c4)) THEN ((((((((rt0.c2)AND('-166372626')))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c5)) WHEN ((rt0.c0)-(rt0.c2)) THEN CAST(rt0.c4 AS INTEGER) WHEN ((rt0.c3)=(rt0.c3)) THEN (((vt1.c0))<=((rt0.c3))) WHEN ((0.5659255746905887) IS FALSE) THEN ((vt0.c0) IS TRUE) ELSE ((rt0.c2)/(rt0.c4)) END; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c5 AS REAL) AS INTEGER), COUNT(*), (((((rt0.c1))<((rt0.c5))))*(rt0.c4)) FROM vt0, rt0 WHERE (CASE (('227869661')IS NOT('-1949821358'))  WHEN (0.21601928061106335 IN (0.2539110489841844)) THEN CAST(',U' AS REAL) ELSE ((-826237794)&('679484037')) END); -- 0ms;
SELECT ALL (((vt0.c0 IN ()))&((+ (rt0.c2)))) FROM vt1, rt0, vt0 WHERE ((((x''))>((0.6165736059892085))) COLLATE BINARY); -- 0ms;
SELECT ALL COUNT(*) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW), rt0.c1, CASE UNICODE(vt0.c0)  WHEN (~ (vt0.c0)) THEN (+ (rt0.c2)) END FROM vt0 WHERE (((((0.21601928061106335)AND((('')>(0.3054153739549933)))))AND(((0.9192048524281023)>('-1560984820'))))) LIMIT -425681692;SELECT (((rt0.c1) BETWEEN (rt0.c6) AND (rt0.c6)) IN ()) FROM vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((NULL)OR(CASE WHEN rt0.c4 THEN rt0.c0 END)), ',U', ((((rt0.c2 COLLATE NOCASE)OR((~ (rt0.c2)))))OR(((0xc473ba9) BETWEEN (rt0.c2) AND (vt1.c0)))) FROM rt0, vt0, vt1; -- 0ms;
SELECT SUM(vt1.c0) OVER () FROM vt0, rt0, vt1 WHERE (((DATETIME('1500628798', NULL, '', 0.48341747150055636, NULL)) NOT BETWEEN ((NULL IN (NULL))) AND (json(1837585507)))); -- 0ms;
SELECT DISTINCT (((((rt0.c1 IN (rt0.c6)))AND((rt0.c2 IN ()))))OR((rt0.c0 IN ()))) FROM rt0, vt1 WHERE (((('1139125506')) NOT BETWEEN ((((0xffffffffe0a0f22d) NOTNULL))) AND ((((('yKWvꬤiJg')) NOT BETWEEN ((NULL)) AND ((0xfffffffff3fe2fdf))))))); -- 1ms;
SELECT DISTINCT FIRST_VALUE(HEX(((rt0.c3)LIKE(vt1.c0)))) OVER () FROM vt0, vt1, rt0; -- 0ms;
SELECT CAST((- (rt0.c1)) AS INTEGER) FROM vt1, vt0, rt0; -- 0ms;
SELECT ALL CASE WHEN (+ (rt0.c3)) THEN -6.48537233E8 ELSE (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c6))) END FROM vt0, rt0 WHERE (((((CAST(NULL AS REAL))AND(((0.9524746428592022) BETWEEN (x'') AND ('2q')))))AND(((-1133283591)&('-2117680118')))));SELECT ALL (((vt1.c0 IN ()))<=(CAST(rt0.c3 AS REAL))) FROM rt0, vt1, vt0 WHERE (((CASE -1560984820  WHEN NULL THEN '' END)-(((0.3985854889394973) ISNULL)))); -- 0ms;
SELECT (CASE rt0.c5  WHEN rt0.c0 THEN rt0.c0 END IN ()), (- (((rt0.c3) IS TRUE))), NULL FROM rt0 WHERE (CAST(((0.6230897587536264) BETWEEN (x'') AND (NULL)) AS REAL)); -- 0ms;
SELECT CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3)==(vt0.c0)) END FROM rt0, vt0 WHERE (((LIKELY(0.3518068304859001))LIKE(LIKELY('-526323155')))); -- 0ms;
SELECT ALL ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c5)))AND(vt1.c0)))AND(rt0.c1))) BETWEEN (((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) AND (x'')) FROM vt1, vt0 WHERE ((((CASE x''  WHEN NULL THEN '-1957055209' END))<((x'b8bc')))) ORDER BY x'0c12' DESC  NULLS FIRST, ((((rt0.c2)>(rt0.c3)))<<(vt1.c0 COLLATE BINARY)), (('Fu7n呣.36') NOTNULL) ASC  NULLS FIRST;SELECT ((((((rt0.c3)OR(rt0.c6)))AND(vt0.c0)))<>(CAST(NULL AS NUMERIC))) FROM vt0, rt0 INTERSECT SELECT ((CAST(vt1.c0 AS TEXT)) NOT NULL) FROM rt0;SELECT ALL 0Xffffffff81c6c40a FROM rt0, vt1; -- 0ms;
SELECT DISTINCT LIKE(CASE WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 ELSE vt0.c0 END, (NULL IN (rt0.c4))), vt1.c0, rt0.c4 FROM rt0, vt1 WHERE (((((((NULL)AND(NULL)))OR('-1949821358' COLLATE NOCASE)))OR(((0x28801a85)>=(0.6230897587536264)))));SELECT DISTINCT CHANGES() FROM vt1, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((rt0.c2)&(rt0.c1)) COLLATE RTRIM FROM vt1, rt0 GROUP BY CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)) AS NUMERIC) HAVING ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c5 END) NOTNULL);SELECT ((0xfffffffff6155aee)<(((vt1.c0) NOT NULL))) FROM rt0 ORDER BY CASE WHEN CAST(rt0.c6 AS TEXT) THEN ((((vt1.c0)OR(rt0.c6)))OR(rt0.c6)) WHEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c5)) THEN x'7fa3' COLLATE RTRIM WHEN rt0.c5 THEN ((rt0.c5)*(rt0.c6)) ELSE rt0.c1 COLLATE BINARY END DESC;SELECT LAST_INSERT_ROWID(), rt0.c4, (~ ((NULL IN (vt0.c0, vt1.c0)))) FROM vt0, vt1;SELECT ((x'95e3') NOT NULL), TOTAL(json_array_length(rt0.c6, rt0.c4)) OVER (), (((vt1.c0)) BETWEEN ((rt0.c5 COLLATE NOCASE)) AND ((((rt0.c2)IS(vt0.c0))))) FROM vt1, vt0, rt0 WHERE (UNLIKELY(((NULL) BETWEEN ('m_I') AND (x'')))); -- 0ms;
SELECT CASE WHEN x'' THEN (vt0.c0 IN ()) ELSE MAX(rt0.c6) END FROM rt0, vt0 WHERE (((((0X28801a85)AND('Lt')))AND(((NULL) NOT NULL)))); -- 0ms;
SELECT ALL '', highlight(vt0.c0, (- (rt0.c4)), MIN(vt0.c0), SUM(rt0.c3)), GROUP_CONCAT(((rt0.c6) NOTNULL)) OVER () FROM vt0, vt1, rt0 WHERE (((NULL)AND('936381768')) COLLATE NOCASE);SELECT DISTINCT load_extension(json_array_length(rt0.c0, rt0.c5)), ((((((vt0.c0)AND(rt0.c1)))AND(rt0.c1))) NOT NULL), (rt0.c4 IN ((0.21130910107279843 IN ()))) FROM rt0, vt1, vt0;SELECT DISTINCT NTH_VALUE(rt0.c0, ((((rt0.c3)>=(vt1.c0)))GLOB(((rt0.c0) NOTNULL)))) OVER () FROM vt0, rt0, vt1 NOT INDEXED GROUP BY ((((vt0.c0)-(rt0.c5)))|(CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c5 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END)); -- 1ms;
SELECT LIKELIHOOD(SUM(rt0.c5), 0.8121228204119634), (((rt0.c2)) NOT BETWEEN ((((rt0.c4)+(rt0.c5)))) AND ((CASE x''  WHEN rt0.c5 THEN rt0.c0 END))), CASE WHEN vt1.c0 COLLATE BINARY THEN rt0.c2 END, CAST(((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c5)))AND(rt0.c3)) AS INTEGER), ((vt1.c0) IS FALSE) COLLATE RTRIM FROM vt1, vt0, rt0; -- 0ms;
SELECT ALL 'u롼' FROM vt1, vt0, rt0 WHERE ((- (CAST(-551978559 AS BLOB)))); -- 0ms;
SELECT DISTINCT (+ ((((((((('1445710771')OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c5)))AND(rt0.c4)))) FROM rt0 WHERE ((((NULL)) NOT BETWEEN ((((NULL)<(NULL)))) AND ((((NULL) NOT BETWEEN (x'4bf0') AND (-1.949821358E9)))))); -- 0ms;
SELECT ALL (((vt1.c0))==(('쾹>4u9￿M'))) FROM rt0, vt0 WHERE ((CAST(0.734041755387331 AS BLOB) IN ()));SELECT DISTINCT COUNT(*) OVER ( PARTITION BY (((- ('1k'))) NOT BETWEEN (CASE rt0.c6  WHEN rt0.c0 THEN vt1.c0 END) AND ((rt0.c6 IN (rt0.c2, rt0.c6)))), CAST(rt0.c3 COLLATE NOCASE AS TEXT)), (((((vt0.c0) IS TRUE), CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c5 WHEN vt1.c0 THEN vt1.c0 END, (rt0.c6 IN (rt0.c1)), ((vt1.c0)<=(rt0.c1)), (vt0.c0 IN ())))<((((rt0.c4)LIKE(1189016105)), (0xffffffffe4f7eed3 IN ()), vt0.c0, rt0.c0, x''))), ((CASE WHEN rt0.c3 THEN 0Xffffffffbe3127d7 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c0 END)<<(((rt0.c1) ISNULL))) FROM rt0, vt1 WHERE (CASE WHEN ((NULL)LIKE(x'')) THEN ((((0.4604667549495294)OR(0xffffffffe6a09ce4)))AND(-1.56098482E9)) ELSE CASE 3.5143805E7  WHEN 0.9299820829871258 THEN 0.12960607034140736 WHEN x'' THEN 0.8618877996514271 WHEN 'QEX盹*q}>' THEN 0.8834163782008123 ELSE NULL END END) LIMIT 187952434 OFFSET 1189016105;SELECT DATE((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), rt0.c1 COLLATE RTRIM, (((rt0.c5)) BETWEEN ((vt0.c0)) AND ((rt0.c3)))), (((rt0.c5 IN ())) NOT NULL), ((((((rt0.c6)OR('1787105824')))AND(rt0.c4))) NOT BETWEEN (CAST('-256523669' AS REAL)) AND ('-1609386334')), (((rt0.c6))>(((vt0.c0 IN ())))), '0.21390866640138329' FROM rt0, vt1 LIMIT 1787105824 OFFSET 952311324;SELECT DISTINCT (~ ('\ny')) FROM vt0 GROUP BY ((((rt0.c2)<=(rt0.c2)))%(((rt0.c2) BETWEEN (rt0.c0) AND (x'11c1'))));SELECT DISTINCT (((rt0.c0)OR(rt0.c4)) IN ()) FROM rt0 LEFT OUTER JOIN vt0 ON json(((((vt0.c0)AND(rt0.c1)))OR(rt0.c6))) FULL OUTER JOIN vt1 ON (NOT (((rt0.c1)==(rt0.c3)))); -- 0ms;
SELECT (((('2q')IS NOT(rt0.c3)))<=(((rt0.c5)||(rt0.c1)))), ((((rt0.c0)<>(rt0.c4)))IS(rt0.c4 COLLATE BINARY)), ((((rt0.c3) ISNULL)) BETWEEN (TOTAL(rt0.c0)) AND ((((0.041195834751011184, rt0.c0, vt1.c0))<=((rt0.c6, rt0.c3, 0.5625967177253154))))) FROM rt0;SELECT DISTINCT NTILE((rt0.c0 IN ())) OVER ( ORDER BY (- ((~ (rt0.c0)))) ASC  NULLS FIRST) FROM vt0, rt0;SELECT CAST(TOTAL(vt0.c0) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT IFNULL((rt0.c3 IN ()), ((vt1.c0) NOT NULL)), CASE CAST(rt0.c4 AS NUMERIC)  WHEN ((rt0.c1)>>(rt0.c3)) THEN ((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE '0.6230897587536264' END, ((((CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(rt0.c5 COLLATE BINARY)))OR(((rt0.c4)LIKE(rt0.c0)))) FROM vt0 GROUP BY (((rt0.c0)) BETWEEN ((((rt0.c6)AND(-1491325146)))) AND ((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c6 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c4 END))), ((((rt0.c5)>(rt0.c5)))LIKE(rt0.c6 COLLATE RTRIM)), (((((rt0.c1) ISNULL), 1.727637869E9, CASE rt0.c2  WHEN rt0.c5 THEN rt0.c5 END))!=((CAST(rt0.c1 AS REAL), ((((rt0.c1)AND(rt0.c2)))OR(rt0.c4)), rt0.c4))) HAVING (~ (((rt0.c5)|(rt0.c0))));SELECT DISTINCT x'', (((rt0.c4)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))), ((((((((((rt0.c5) NOT BETWEEN (rt0.c0) AND (NULL)))AND(NULL)))AND(TOTAL(rt0.c1))))OR(((rt0.c1)=(rt0.c2)))))OR(CASE WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c1 THEN 0x63c3d353 WHEN vt1.c0 THEN rt0.c1 END)) FROM rt0, vt1, vt0; -- 1ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c1 AS TEXT) THEN rt0.c4 WHEN (- (rt0.c4)) THEN CASE WHEN rt0.c1 THEN vt0.c0 END WHEN ((rt0.c4)<=(rt0.c2)) THEN vt1.c0 ELSE (rt0.c1 IN ()) END, ((vt1.c0 IN (rt0.c5)) IN ()), (CAST(rt0.c5 AS INTEGER) IN ()), TYPEOF(((rt0.c3) NOTNULL)), CASE WHEN ((vt1.c0) IS FALSE) THEN 0.4534513809584375 COLLATE BINARY WHEN ((rt0.c6) BETWEEN (vt0.c0) AND (rt0.c4)) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)) WHEN ((vt1.c0)<<(NULL)) THEN TRIM(DISTINCT rt0.c2) END FROM rt0;SELECT DISTINCT (- (CAST(rt0.c5 AS INTEGER))) FROM rt0, vt0, vt1 WHERE (((0.3119829115631926)OR('-256523669'))); -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM) BETWEEN ((~ (rt0.c2))) AND (((rt0.c0) NOT NULL))) FROM rt0, vt0 WHERE (CASE CASE WHEN '-526323155' THEN '' ELSE x'07cf' END  WHEN (('')>(0.24638443245045494)) THEN ((-1.56098482E9)AND(x'')) END); -- 0ms;
SELECT DISTINCT rt0.c3 COLLATE BINARY FROM vt1, vt0, rt0 WHERE (CASE WHEN INSTR('1727637869', x'3235') THEN ((NULL) BETWEEN (NULL) AND ('')) ELSE (~ (x'')) END); -- 0ms;
SELECT SUM((NOT (rt0.c6))) FILTER(WHERE (('569409272') ISNULL)) OVER ( ORDER BY NULL DESC  NULLS FIRST) FROM vt0, vt1 WHERE ((((1.500628798E9 IN (x'', 0.3985854889394973)))IS(x'035a')));SELECT AVG((((rt0.c5)) BETWEEN ((vt1.c0)) AND ((6.79484037E8)))) FILTER(WHERE x'ac64') OVER () FROM rt0;SELECT DISTINCT CASE ((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c0))  WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0))) THEN ((rt0.c0)IS(rt0.c0)) END FROM rt0 NOT INDEXED LIMIT 2085117318 OFFSET -425681692;SELECT DISTINCT CHANGES() FROM vt1, vt0, rt0 WHERE ((- ('')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT HEX(x'769b') FROM rt0, vt1 WHERE (((((1189016105) NOT NULL)) NOT BETWEEN ((NOT ('3TXe曕	'))) AND (x'' COLLATE NOCASE))); -- 0ms;
SELECT (((vt1.c0, rt0.c5, x'048b275f')) BETWEEN (((+ (rt0.c4)), ('-1910310730' IN ()), (NOT (rt0.c0)))) AND ((rt0.c1, '2100010052', ((rt0.c1)AND(rt0.c2))))) FROM rt0;SELECT ((((((((LIKELY(DISTINCT x''))AND(((((rt0.c5)OR(vt0.c0)))OR(rt0.c1)))))OR((((rt0.c0))<=((rt0.c3))))))OR(rt0.c3 COLLATE BINARY)))OR(CHANGES())), (DATE(rt0.c5, rt0.c5, rt0.c5) IN ()), json_valid((~ (rt0.c1))) FROM vt0, vt1, rt0 WHERE ((x'' COLLATE BINARY IN ((('')&(x''))))) GROUP BY ((((rt0.c0)AND(vt0.c0)))>=(((vt1.c0)IS(rt0.c1)))), (+ (TRIM(vt1.c0, rt0.c0))), ('1520946142' IN (((((rt0.c6)OR(rt0.c0)))OR(rt0.c5)))), json_quote((vt0.c0 IN ())), CASE (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN (((rt0.c2, rt0.c3, x'')) BETWEEN ((rt0.c5, rt0.c2, rt0.c2)) AND ((rt0.c6, '-1133283591', rt0.c4))) THEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)) ELSE ((vt1.c0)-(vt0.c0)) END HAVING LOWER(DISTINCT GROUP_CONCAT(rt0.c2)) LIMIT 1445710771; -- 0ms;
SELECT DISTINCT CAST(((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c3)) AS BLOB) FROM rt0, vt0 WHERE ((- ((('')==(NULL)))));SELECT ALL (vt1.c0 COLLATE NOCASE IN ()) FROM vt0, rt0, vt1 WHERE ((~ (((x'013f5b9e')<(x''))))); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c6)LIKE(rt0.c4)) THEN (- (0.8634487231210807)) END, ((0.6542461212352051) NOTNULL), UPPER((((rt0.c1))<=((vt0.c0)))) FROM vt1, rt0, vt0 ORDER BY (((- (vt1.c0))) NOTNULL) DESC  NULLS LAST; -- 0ms;
SELECT (rt0.c3 IN (rt0.c3, rt0.c4)) COLLATE RTRIM FROM vt1, rt0, vt0 WHERE (CASE CASE NULL  WHEN '-1104074793' THEN NULL END  WHEN (NULL IN ()) THEN CASE NULL  WHEN x'' THEN x'' END ELSE -530385173 END); -- 0ms;
SELECT ALL CASE WHEN rt0.c6 THEN rt0.c6 END COLLATE BINARY, (((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c5)) IN (COUNT(*))), (((((0.3518068304859001, rt0.c0, rt0.c2))!=((vt0.c0, rt0.c5, rt0.c0)))) BETWEEN (((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)))OR(NULL)))AND(vt0.c0))) AND (((rt0.c1)IS NOT(vt0.c0)))) FROM vt0, rt0 GROUP BY (((rt0.c5)) NOT BETWEEN ((((rt0.c1)%(vt0.c0)))) AND ((((((vt0.c0)AND(rt0.c6)))OR(rt0.c4)))));SELECT DISTINCT CASE CAST(rt0.c1 AS BLOB)  WHEN CAST(rt0.c0 AS REAL) THEN (+ (rt0.c4)) END FROM vt0, vt1 WHERE ((((NOT (x'06e3')))*((((('-482777387')AND(0.8029674003187846)))OR(0.6373711015463296)))));SELECT DISTINCT DENSE_RANK() OVER () FROM rt0; -- 1ms;
SELECT SUM(0.575917911598823) COLLATE NOCASE FROM vt0 FULL OUTER JOIN vt1 ON (((rt0.c3, 'Lj_3o}', rt0.c3)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((vt1.c0))), (~ (rt0.c1)), ((rt0.c6) NOT BETWEEN (vt0.c0) AND (rt0.c3)))) AND ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c6 END, rt0.c6 COLLATE NOCASE, CAST(rt0.c0 AS NUMERIC)))) RIGHT OUTER JOIN rt0 ON (x'' IN ()) WHERE (((((((('Nv'))=((0.25696651190394215))))OR((('')GLOB('0.6458071709537417')))))OR((('-1889065387') BETWEEN ('0.25696651190394215') AND ('0.8618877996514271'))))) GROUP BY ((CAST(rt0.c4 AS INTEGER))/(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4))));SELECT DISTINCT NULL FROM vt1, vt0, rt0 WHERE ((((0.5190396614664232, '0.48341747150055636', 0.09351538069921206)) NOT BETWEEN ((CASE ''  WHEN x'' THEN -1144713478 END, (NULL IN ()), ((('i5'))==((''))))) AND ((((x'e888') NOTNULL), LIKELIHOOD(0.48341747150055636, 0.7037058699569909), CASE WHEN 0.9415695170099575 THEN NULL WHEN 0.881925160096677 THEN ']\n' WHEN 0xffffffffcf8e7ca6 THEN '1627449000' ELSE 'Z嶆?|盈' END)))); -- 0ms;
SELECT DISTINCT 0X7d2b9c44 FROM rt0 WHERE (COALESCE((('-1889065387')&('621803217')), (((NULL, 0.15503732190376118, x'38af'))<=((0Xffffffffe062f6eb, '', NULL))), (NOT ('679484037')), ((x'b54f')|('1036233508')), ((((0.5635792623669641)AND(x'3d47f949')))AND('oYK?')), ((x'7949')-(NULL)))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0)>>(rt0.c4)) AS BLOB), ((x'' COLLATE BINARY) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c0) BETWEEN (NULL) AND (vt0.c0)))), CASE LIKELY(rt0.c3)  WHEN ((NULL)>(vt0.c0)) THEN LOWER(vt0.c0) END FROM vt1, vt0, rt0 WHERE (((CASE x''  WHEN -1491325146 THEN x'' ELSE x'' END) NOT BETWEEN ((('909058809')<<(')3'))) AND (x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT TOTAL(UNLIKELY(rt0.c3)) FROM vt1, vt0;SELECT ((((((((((((CAST(rt0.c3 AS TEXT))AND(0.575917911598823)))AND(ABS(DISTINCT 0.9926119789652521))))OR(MIN(rt0.c4))))AND(((rt0.c6) NOT BETWEEN (rt0.c6) AND (rt0.c5)))))AND(((vt1.c0)-(rt0.c1)))))AND(MIN(rt0.c1))) FROM vt0, vt1, rt0 WHERE ((((0.44736540133010694)==(0.6373542705919041)) IN ())); -- 0ms;
SELECT DISTINCT ABS(DISTINCT (((vt0.c0))!=((rt0.c0)))), ((SUM(vt1.c0))AND((('IGi')LIKE(rt0.c1)))), vt1.c0 FROM vt0, rt0 WHERE ((('' COLLATE RTRIM) BETWEEN (((('0.9192048524281023')) NOT BETWEEN ((x'')) AND ((NULL)))) AND (((0.030139636836011174)=(0.9137580523843897))))) LIMIT 1393562192;SELECT DISTINCT (((+ (rt0.c2))) IS FALSE) FROM rt0 WHERE (((('-256523669', x'2e33', '惛?Mk', 0x53101250, '-1609386334')) NOT BETWEEN (((('9}XeawS&') NOT BETWEEN (x'') AND (679484037)), (NULL IN ()), (((x'', 0X7a78bf02, NULL))!=(('114909708', '1535235917', NULL))), (('S%') NOT NULL), ((NULL)<>(NULL)))) AND ((x'', CASE WHEN '' THEN x'' END, 0Xffffffff8679008b COLLATE BINARY, ((((((((NULL)AND(1417015961)))AND(NULL)))OR(x'')))OR(9.09058809E8)), (~ (0Xffffffff8810a2c8)))))) INTERSECT SELECT ((rt0.c5)<>(rt0.c5)) COLLATE NOCASE FROM vt1, vt0 WHERE ((x'' COLLATE NOCASE IN ()));SELECT ALL JULIANDAY(((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)), (rt0.c3 IN (vt1.c0, NULL)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)), (((vt1.c0))>=(('1417015961'))), rt0.c3) FROM vt1, vt0, rt0 WHERE (CAST(NULL COLLATE RTRIM AS REAL)); -- 0ms;
SELECT ((x'' COLLATE RTRIM) NOT BETWEEN ((((rt0.c5))==((NULL)))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END)) FROM vt1, vt0, rt0; -- 0ms;
SELECT ALL (((rt0.c5, vt0.c0, rt0.c1)) NOT BETWEEN ((((((rt0.c2)AND('')))AND(rt0.c4)), (+ (vt1.c0)), GROUP_CONCAT(rt0.c1))) AND ((NULL, CAST(rt0.c5 AS BLOB), TOTAL(rt0.c4)))) FROM vt1, vt0, rt0; -- 0ms;
SELECT '1139125506' FROM vt0, vt1; -- 0ms;
SELECT ALL x'fa87' FROM vt0 ORDER BY 0Xffffffffa2f5430c DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT AVG((~ (rt0.c1))) FROM vt0, vt1;SELECT DISTINCT RANK() OVER (), CASE (rt0.c5 IN ())  WHEN 0.1524000973000491 THEN (rt0.c3 IN ()) WHEN ((rt0.c5)IS NOT(rt0.c6)) THEN ((rt0.c1) IS FALSE) WHEN CAST(vt1.c0 AS TEXT) THEN vt0.c0 ELSE 0.27352864392018483 COLLATE BINARY END, ((((((rt0.c6)&(vt0.c0)))OR(((rt0.c5)LIKE(rt0.c2)))))OR(NULL)), CAST((((rt0.c3))<((vt0.c0))) AS REAL), (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS FALSE) FROM vt1, vt0;SELECT DISTINCT AVG(((rt0.c0)%(vt1.c0))) OVER () FROM vt1;SELECT DISTINCT '(qb+棫쉫t䯨', rt0.c6, (((((rt0.c6)IS(vt1.c0))))<(('' COLLATE BINARY))) FROM vt0, vt1;SELECT DISTINCT AVG(((rt0.c0)<>(vt1.c0)) COLLATE NOCASE) OVER (), MAX(CAST(rt0.c2 AS INTEGER)), SUM((+ (rt0.c2))) FROM vt1, rt0 WHERE (((((',xze') ISNULL)) NOT NULL)); -- 0ms;
SELECT ALL TOTAL((((rt0.c0))<((rt0.c6)))) FROM vt0;SELECT DISTINCT ((((rt0.c3)&(rt0.c1))) ISNULL) FROM vt1 WHERE (CASE (0xffffffffc42ba4b9 IN ())  WHEN (- ('-1543512655')) THEN ((NULL)<=('-1133283591')) END) GROUP BY (~ (((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))), (('')>>(CAST(rt0.c5 AS REAL))), NULLIF(rt0.c2 COLLATE BINARY, NULL) HAVING (((vt0.c0 IN ()))==(CAST(vt0.c0 AS INTEGER)));SELECT (- (((rt0.c3)=(rt0.c0)))), ((rt0.c6) IS FALSE) COLLATE BINARY, (COALESCE(',', NULL, NULL, rt0.c2) IN (HEX(rt0.c5), CASE WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END)) FROM rt0 WHERE ((((((('-1756897785')AND(-391485911)))OR(x'')))||(((NULL) NOT BETWEEN (-1222614821) AND (NULL)))));SELECT DISTINCT ((rt0.c3) BETWEEN (UNICODE(rt0.c2)) AND (rt0.c1)) FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) NOT BETWEEN (rt0.c4) AND (NULL)) FROM vt0;SELECT DISTINCT AVG(CASE vt1.c0  WHEN rt0.c4 THEN '+䲇%p' END) OVER () FROM vt1 WHERE ((((('')>(-1036915142))) NOTNULL)) ORDER BY SQLITE_COMPILEOPTION_GET(x'')  NULLS LAST;SELECT ALL ((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT UNLIKELY(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) FROM rt0 WHERE (''); -- 0ms;
SELECT ((((0.022224784551653554)OR(rt0.c1)))AND(NULL)) COLLATE NOCASE, ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)))IS NOT(CAST(rt0.c0 AS NUMERIC))), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((COUNT(rt0.c2)))) FROM vt0 WHERE (((CASE ''  WHEN x'18d657a4' THEN ',' ELSE -499992253 END) BETWEEN (x'') AND (((((x'')OR(NULL)))OR(']\n')))));SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c5))))/(CAST(rt0.c4 AS BLOB))) FROM vt0 WHERE ((((((((((((NULL, '0.25696651190394215', NULL, 0.9771375479667151, x'')) BETWEEN ((NULL, x'', 0.3119829115631926, 0.16004239782249186, 'lt')) AND (('-1949821358', ',', x'', x'', NULL))))AND('1445710771')))OR((NULL IN ('-812745562', NULL)))))AND((((NULL))<((0.5625967177253154))))))AND(((x'') BETWEEN (0.35570754296811236) AND (0.8912837644197243))))) GROUP BY ((CHAR(rt0.c1, rt0.c3, '-1594155964', rt0.c2, rt0.c5))%(MAX(rt0.c5, rt0.c1, vt0.c0, vt0.c0)));SELECT (~ (((rt0.c3) NOTNULL))), AVG('1520946142') OVER (), TOTAL(((rt0.c2) IS TRUE)) FROM vt1;SELECT DISTINCT FIRST_VALUE((((rt0.c1, vt1.c0, rt0.c5)) BETWEEN ((((rt0.c6) IS TRUE), ((rt0.c6)<(rt0.c5)), ((((rt0.c3)AND(rt0.c5)))AND('1k')))) AND ((JULIANDAY(rt0.c0, rt0.c3, rt0.c3), ((((((((x'')OR(rt0.c5)))OR(rt0.c4)))AND(rt0.c4)))OR(vt1.c0)), HEX(0.3098300668399321))))) OVER () FROM rt0, vt1; -- 0ms;
SELECT ((HEX(DISTINCT vt1.c0))IS NOT((NOT (rt0.c6)))) FROM vt0, rt0, vt1 WHERE (LIKELIHOOD(DISTINCT (((('Hd')OR('	Rk~')))AND('952311324')), 0.149866888178526)); -- 0ms;
SELECT ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END) IS TRUE), rt0.c6, ((vt1.c0) IS TRUE) FROM vt1;SELECT DISTINCT GROUP_CONCAT((- (vt0.c0))) FROM rt0 LIMIT -1133283591;SELECT DISTINCT ((vt0.c0)>(rt0.c1)) COLLATE BINARY FROM rt0, vt1, vt0; -- 0ms;
SELECT (((vt1.c0)IS NOT(rt0.c3)) IN ()), RANK() OVER (), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE FROM vt1 WHERE (CASE '-832375211' COLLATE BINARY  WHEN ((((x'007d')OR(x'')))OR(x'')) THEN ((NULL)LIKE(NULL)) WHEN ((x'') BETWEEN (0.12000388402467232) AND (0.4269340930300838)) THEN NULL COLLATE RTRIM WHEN ((0.5603965187919242) IS TRUE) THEN ((x'')<=(NULL)) END) GROUP BY ((((((((rt0.c6)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c0)) COLLATE BINARY, (((rt0.c1)) BETWEEN ((((rt0.c5) IS FALSE))) AND (((((rt0.c0))>((rt0.c1)))))), ((((vt0.c0)<(rt0.c1)))<<(((rt0.c2)IS NOT(rt0.c1)))) HAVING ((((((rt0.c6)AND(rt0.c2)))OR(rt0.c6))) NOT BETWEEN (CASE WHEN rt0.c5 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c5 END) AND (((rt0.c6) IS TRUE))) LIMIT 1583455392 OFFSET 1139125506;SELECT DISTINCT ((~ (vt0.c0)) IN ()) FROM vt0, vt1; -- 0ms;
SELECT NULL FROM vt1, rt0; -- 0ms;
SELECT ALL ((rt0.c0 COLLATE NOCASE)>>(TOTAL(rt0.c0))), (((((((((((((rt0.c4)AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR(1280327672)) IN (((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c5)))AND(rt0.c1)))), SUM(CAST('1520946142' AS REAL)) FROM vt0, vt1, rt0 WHERE (((+ ('-694610059')) IN ())); -- 0ms;
SELECT ((rt0.c5)+(rt0.c2 COLLATE NOCASE)) FROM vt1, rt0 WHERE (HEX(((NULL)<=(NULL)))) ORDER BY (((((vt0.c0 IN ()))AND(((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c6)))))AND((((rt0.c4))<>((rt0.c3)))));SELECT CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB), (+ ((rt0.c1 IN (rt0.c4)))), ((CASE rt0.c6  WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN x'930f0415' THEN rt0.c4 WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c5 END) ISNULL), ((((vt0.c0) IS FALSE))<>('w*^?^%wZp')), CAST(COUNT(*) AS NUMERIC) FROM rt0, vt1, vt0 WHERE ((((ABS(NULL), NULL, CASE WHEN 0.0034120293894099873 THEN NULL WHEN 1263991716 THEN x'' WHEN NULL THEN '1837585507' END))>=((((0.15299418614153615) NOT NULL), (- ('7{')), (((('DsDb')AND(NULL)))AND(NULL)))))); -- 0ms;
SELECT '387899660', (((~ (vt0.c0)))||(0.29275985368912005)), LEAD(LIKELIHOOD(CAST(0.6349457530324697 AS TEXT), 0.29796621918812316), ((((NOT (vt0.c0))))<((CAST(vt0.c0 AS NUMERIC)))), (((- (vt0.c0)))+(vt0.c0 COLLATE NOCASE))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT 0.3713282264918899, ((TRIM(DISTINCT rt0.c5, -899853357)) IS FALSE), (((vt0.c0)) NOT BETWEEN ((TOTAL(rt0.c3))) AND ((vt1.c0 COLLATE RTRIM))) FROM vt1, rt0 WHERE (CAST(((x'f1f4')<>('')) AS NUMERIC));SELECT NULL FROM rt0, vt1 WHERE (json_object((('-1484017502')<(x'2561199b4d3e')), (('-1397743055') BETWEEN (x'') AND (0.709551009083766)), (('')>=(-1.756897785E9)), ((NULL)OR(0.026004818907172655))));SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN rt0.c6 ELSE vt0.c0 END AS TEXT) FROM rt0, vt0, vt1 WHERE (CASE WHEN x'16eb' THEN (('933684135') NOT BETWEEN ('r.h,1%~]^') AND (x'')) ELSE ((NULL)-(0.682078614223988)) END); -- 1ms;
SELECT DISTINCT ((rt0.c6)LIKE(AVG(rt0.c5))) FROM vt1 GROUP BY ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c5))) NOT BETWEEN ((- (rt0.c5))) AND (rt0.c5)) HAVING ((((vt0.c0)<<('-280069041')))GLOB(vt1.c0 COLLATE BINARY)) LIMIT -1750820780;SELECT ((((((rt0.c3)OR(rt0.c0)))OR(rt0.c6))) BETWEEN (rt0.c4) AND (((vt1.c0)IS NOT(rt0.c1)))) FROM vt0, rt0;SELECT DISTINCT SUM(((vt1.c0)<=(x''))), ((CAST(rt0.c5 AS BLOB)) NOT NULL), COUNT(*) OVER () FROM rt0, vt1, vt0 WHERE (((NULL COLLATE BINARY) ISNULL)); -- 0ms;
SELECT ALL ((((rt0.c4, vt0.c0, rt0.c0)) BETWEEN ((rt0.c6, vt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c3, rt0.c0))) IN ()), (+ (CASE WHEN rt0.c6 THEN rt0.c1 END)), ((rt0.c5)-(MAX(rt0.c0))) FROM vt0, vt1, rt0; -- 0ms;
SELECT rt0.c4 FROM vt1;SELECT DISTINCT (NOT ((((0.5263477188724072, rt0.c1, rt0.c3))>=((rt0.c2, vt1.c0, ''))))) FROM rt0 WHERE (LIKELIHOOD((+ (NULL)), 0.7334263808735928)) GROUP BY TRIM(((rt0.c1)AND(rt0.c3)), ((rt0.c3)<<(rt0.c6))), (((((((((~ (rt0.c0)))OR(vt0.c0)))AND((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))))))AND((rt0.c5 IN (vt1.c0, vt1.c0)))))OR(rt0.c1 COLLATE NOCASE)), CAST(((vt0.c0)<(rt0.c5)) AS TEXT) HAVING ((((rt0.c1)OR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(TOTAL(rt0.c0)));SELECT rt0.c0 FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT ((+ (vt1.c0)) IN (((((rt0.c0)OR(rt0.c5)))OR(rt0.c1)), (~ (rt0.c1)))) FROM vt0;SELECT -1036915142, AVG(rt0.c6), LEAD((CAST(vt1.c0 AS BLOB) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)), vt1.c0, TRIM('\nY')) OVER () FROM vt1;SELECT LAST_VALUE((((vt1.c0)) NOT BETWEEN (('')) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN '1417015961' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) OVER () FROM vt1 ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (x'a4be97fa')) DESC  NULLS LAST, UNICODE(-1757838379)  NULLS FIRST, CASE WHEN ((vt0.c0) NOT NULL) THEN rt0.c3 COLLATE RTRIM END;SELECT DISTINCT ((CASE vt1.c0  WHEN '205994921' THEN rt0.c2 WHEN rt0.c5 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c5 END)GLOB((~ (rt0.c2)))) FROM rt0, vt0;SELECT MAX(GROUP_CONCAT(x'44fd')) FROM vt1, vt0 ORDER BY ((((rt0.c2)-(rt0.c6))) NOT BETWEEN (((((rt0.c6)AND(rt0.c1)))OR(rt0.c5))) AND ((((0.1616716587708349, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2))))) DESC, ((0.07254499589613084) BETWEEN (((((vt0.c0)OR(rt0.c4)))AND(rt0.c2))) AND (((vt0.c0)==(rt0.c6)))) ASC;SELECT DISTINCT ((((vt1.c0)GLOB(rt0.c0)))OR(MAX(rt0.c3))) FROM vt0, vt1, rt0 WHERE (CASE WHEN 0.6890300756738268 THEN TRIM(NULL) WHEN ((0.9040437009025977)GLOB(x'4735d601')) THEN '' WHEN ((NULL)*('-1222521557')) THEN CASE 0.6443006477421177  WHEN '-292617484' THEN x'' END END); -- 0ms;
SELECT DISTINCT rt0.c5 FROM rt0 WHERE ((((~ (NULL)))LIKE(((0.7182683603704342) BETWEEN (-1.222614821E9) AND ('615179930'))))); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) NOT BETWEEN (((((rt0.c3)OR(rt0.c0)))OR(NULL))) AND (STRFTIME(rt0.c0, rt0.c0, rt0.c5))), ((x'') NOT NULL), (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((('-919064526' IN ()), rt0.c4 COLLATE NOCASE, (((rt0.c5))<=((vt0.c0))))) AND ((rt0.c0, 0.0034120293894099873, ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))) FROM vt0, rt0, vt1 WHERE (((NULL)IS NOT(((x'') NOTNULL)))); -- 0ms;
SELECT ALL rt0.c5, ((((((((((rt0.c5)IS NOT(vt0.c0)))OR((((rt0.c6, '64182995', vt0.c0))<>((rt0.c6, x'8f11', rt0.c6))))))AND((rt0.c1 IN ()))))OR(GROUP_CONCAT(rt0.c0))))OR(CAST(rt0.c5 AS INTEGER))), 0X66fc5a4a FROM rt0, vt0; -- 0ms;
SELECT (((rt0.c5)) BETWEEN ((TOTAL('X+'))) AND ((vt1.c0 COLLATE BINARY))) FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c4))))-((rt0.c3 IN ())));SELECT DISTINCT TRIM(((vt1.c0)<>(rt0.c2))), (- ((('7HċO#(')>(rt0.c6)))), CASE WHEN UPPER(rt0.c0) THEN (- (rt0.c4)) ELSE ((rt0.c4)||(vt1.c0)) END, CASE ((vt0.c0) NOTNULL)  WHEN rt0.c2 COLLATE NOCASE THEN MAX(rt0.c3) ELSE ((rt0.c0) IS TRUE) END, CASE WHEN ((rt0.c6)OR(vt0.c0)) THEN '' ELSE AVG(rt0.c1) END FROM rt0 WHERE (-975907774 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE) ORDER BY ((rt0.c5 COLLATE NOCASE)-((NOT (vt1.c0)))) ASC, ((rt0.c4)/(((((NULL)AND(vt0.c0)))OR(vt0.c0)))) ASC;SELECT DISTINCT ((((((((((rt0.c6)/(rt0.c6)))AND(527986244)))OR(rt0.c2 COLLATE NOCASE)))AND(1.727637869E9)))OR(((((rt0.c6)OR(vt0.c0)))AND(rt0.c6)))) FROM rt0;SELECT DISTINCT ((rt0.c6 COLLATE NOCASE) BETWEEN (((rt0.c1)%(rt0.c5))) AND (((rt0.c3) IS FALSE))) FROM vt0, vt1, rt0; -- 0ms;
SELECT ALL CAST((vt1.c0 IN (rt0.c4, rt0.c1)) AS NUMERIC) FROM vt0, rt0, vt1 WHERE (((((((x'')AND(x'')))AND('909058809'))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((COUNT(rt0.c2))IS NOT(rt0.c3)) FROM vt0;SELECT rt0.c5 FROM vt1, rt0 WHERE ((- (CASE 0.48341747150055636  WHEN x'' THEN NULL WHEN NULL THEN '' WHEN x'' THEN 0X6100e6a8 ELSE NULL END))); -- 0ms;
SELECT MAX(((((((((rt0.c1)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c4))), COUNT(*) OVER (), (((((vt1.c0 IN ()))OR((- (rt0.c4)))))OR((rt0.c2 IN ()))) FROM rt0, vt1 WHERE ((((((((NULL))==((0.062272979170544196))))OR((((NULL)) BETWEEN ((0.8634487231210807)) AND ((NULL))))))AND('-256523669'))) ORDER BY CASE WHEN (- (rt0.c4)) THEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) ELSE rt0.c2 COLLATE BINARY END  NULLS FIRST;SELECT ALL ((((((vt0.c0) IS TRUE))OR(((((rt0.c4)AND(rt0.c5)))OR(vt1.c0)))))OR(((((((((NULL)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c6)))) FROM rt0, vt0 LIMIT -2138455670 OFFSET -482777387;SELECT NULL, (1393562192 COLLATE BINARY IN (rt0.c0 COLLATE BINARY, ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))), ((vt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) FROM vt0, vt1 WHERE (((CAST('1573213200' AS REAL))<=((((x'')) BETWEEN ((x'')) AND (('-55000800'))))));SELECT LAG(CAST(((rt0.c5)<>(rt0.c2)) AS NUMERIC), (((rt0.c4 IN ()))&((rt0.c0 IN ()))), x'34ec') OVER () FROM rt0, vt0 WHERE (CASE CAST('kYmYDY6u' AS BLOB)  WHEN '1535235917' THEN ((x'2c0e')%(x'')) ELSE (x'bace' IN ()) END); -- 0ms;
SELECT (+ ('-2012175672')) FROM rt0, vt0 NOT INDEXED, vt1 WHERE (STRFTIME(((NULL) BETWEEN ('-500379992') AND ('600263815')), (('') NOT BETWEEN (0.2190848904393704) AND ('+j6K!eq>')), ((((0.8931378640650178)OR(x'30d8')))AND('1787105824')))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)>=(vt0.c0)))==((((0.3327852681599962))<((vt0.c0))))) FROM vt0, vt1;SELECT vt1.c0 FROM vt0, rt0, vt1 WHERE ((+ (((0.12347365735964222)OR(-2.80069041E8))))); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE BINARY)>>(CASE rt0.c5  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END)), LAST_VALUE(((vt0.c0)<=((vt1.c0 IN ())))) OVER (), HEX(rt0.c6) COLLATE NOCASE FROM rt0, vt0, vt1 WHERE (CASE 0.17855841521574145 COLLATE BINARY  WHEN ((1771910554) NOTNULL) THEN (('1673778003')%(x'')) ELSE (('r2')||('')) END); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt1.c0))<>(COALESCE(rt0.c6, rt0.c4))), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c6)) COLLATE RTRIM, 1519850491, x'', (((x'1caa')) NOT BETWEEN (((((rt0.c4)) BETWEEN ((vt1.c0)) AND ((rt0.c5))))) AND ((CASE vt1.c0  WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c6 END))) FROM vt1 WHERE (((((((((('0.21601928061106335' IN ()))AND(((NULL) NOT BETWEEN (NULL) AND (x'')))))OR(NULL)))AND((('') IS TRUE))))AND(CASE WHEN x'' THEN 0.47866669980686816 WHEN x'' THEN NULL WHEN x'' THEN 0xdeb0324 ELSE '1139125506' END)));SELECT DISTINCT (((COUNT(*)))>=(((rt0.c2 IN ())))) FROM vt0, rt0, vt1 WHERE (0.6856657767738059); -- 0ms;
SELECT DISTINCT rt0.c6, ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c2)<<(vt0.c0))) AND ((((rt0.c5))=((rt0.c1))))), RTRIM(rt0.c6 COLLATE RTRIM) FROM vt1, rt0 WHERE (JULIANDAY('', (('9}XEAWS&')<>(-8.26237794E8)), ((0.22608980381711286) NOT NULL)));SELECT DISTINCT MIN('e~'), (((rt0.c4 IN (vt1.c0)))+(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)))), ((((rt0.c0)>(rt0.c1))) ISNULL), PRINTF(rt0.c0) COLLATE NOCASE, ((((((rt0.c6) NOT NULL))AND(TRIM(rt0.c0, rt0.c2))))AND((rt0.c5 IN (x'8493', rt0.c0)))) FROM rt0 WHERE (((((0.8324805189212944, 1.14909708E8, NULL)) BETWEEN (('', NULL, '-899853357')) AND ((x'', NULL, 0.026004818907172655))) IN (LTRIM('-644718157', x'311b'))));SELECT CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END COLLATE RTRIM FROM rt0, vt1 WHERE ('0.9415695170099575'); -- 0ms;
SELECT DISTINCT json_patch(((rt0.c6)<('o㖹goV-5O')), rt0.c6), (((CAST(rt0.c0 AS TEXT), ((rt0.c4) IS FALSE), ((rt0.c5)IS(vt0.c0))))<>((((vt0.c0) IS TRUE), (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c6))), (((rt0.c0, NULL, rt0.c5)) BETWEEN ((rt0.c6, x'', vt1.c0)) AND ((rt0.c3, 0.23015134133824422, rt0.c5)))))), CASE CASE WHEN rt0.c5 THEN rt0.c5 END  WHEN json_extract(rt0.c3, vt1.c0) THEN (((vt1.c0))>=((vt1.c0))) WHEN CAST(vt1.c0 AS NUMERIC) THEN (rt0.c5 IN ()) WHEN (+ (rt0.c4)) THEN ((((rt0.c5)AND(rt0.c5)))AND(rt0.c3)) ELSE ((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END, CASE WHEN SUM(rt0.c6) THEN (~ (rt0.c6)) END, ((((rt0.c4) BETWEEN (rt0.c2) AND (vt0.c0)))>>(((rt0.c5)>(rt0.c2)))) FROM vt0, vt1 ORDER BY (((vt1.c0 IN ()))OR(json_array_length(rt0.c4)))  NULLS FIRST, CASE ((vt1.c0) NOT BETWEEN (rt0.c5) AND (vt1.c0))  WHEN vt0.c0 THEN ((rt0.c2) ISNULL) WHEN CAST(rt0.c6 AS INTEGER) THEN (+ (rt0.c1)) WHEN rt0.c6 COLLATE BINARY THEN ((rt0.c2) NOT NULL) ELSE ((rt0.c2)GLOB(rt0.c5)) END, (((rt0.c0, vt0.c0, NULL)) BETWEEN ((x'4326' COLLATE BINARY, ((rt0.c5) IS TRUE), (+ (rt0.c3)))) AND ((MAX(rt0.c0, rt0.c2), (NOT (vt0.c0)), CAST(NULL AS NUMERIC))));SELECT DISTINCT (+ (CAST(rt0.c3 AS BLOB))) FROM vt1 WHERE (((((0.53103912008693)IS NOT(0X3cad677b))) ISNULL));SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) NOTNULL) FROM vt0, vt1, rt0; -- 0ms;
SELECT ((CASE WHEN rt0.c0 THEN rt0.c4 ELSE '1417015961' END)+(((rt0.c1)IS NOT(rt0.c6)))), CAST(((rt0.c5)%(rt0.c2)) AS INTEGER), FIRST_VALUE((+ (CASE WHEN vt1.c0 THEN rt0.c2 END))) OVER ( PARTITION BY NULL, ((((rt0.c6 IN ()), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c5 END, (NOT (NULL))))<=((((((((((vt0.c0)AND(rt0.c3)))AND(rt0.c5)))OR(NULL)))AND(vt0.c0)), ((rt0.c1) NOT BETWEEN ('-1144713478') AND (rt0.c5)), 'B?/1⋹Sx')))) FROM rt0, vt1 ORDER BY CASE ((('', rt0.c6, rt0.c5)) NOT BETWEEN ((x'', rt0.c5, vt1.c0)) AND ((0.126795135467361, rt0.c2, rt0.c6)))  WHEN 0.532101701385234 THEN '1390324020' END  NULLS LAST, (CAST(vt0.c0 AS BLOB) IN ()) ASC  NULLS LAST;SELECT MIN((rt0.c4 IN ())) FROM vt0, vt1, rt0 WHERE ((((+ (0.9632799025155353)))>((NULL IN ())))); -- 0ms;
SELECT CAST(((x'')AND(rt0.c6)) AS REAL) FROM vt1, rt0 WHERE ((((0.15299418614153615)LIKE(x'')) IN ())); -- 0ms;
SELECT DISTINCT CASE ((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (0.1352744624703922)) THEN (((rt0.c1, rt0.c0, rt0.c0))>((rt0.c2, rt0.c4, rt0.c1))) ELSE ((rt0.c5)+(rt0.c1)) END, COUNT(*) OVER (), ROW_NUMBER() OVER () FROM vt0 GROUP BY rt0.c5 HAVING ((((((rt0.c0, rt0.c1, rt0.c1, vt1.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, rt0.c3, rt0.c2, vt0.c0)) AND ((rt0.c6, rt0.c2, rt0.c4, vt0.c0, NULL)))))>((rt0.c0 COLLATE BINARY)));SELECT DISTINCT ROW_NUMBER() OVER (), ((((~ (rt0.c0))))<(((- (rt0.c6))))), vt0.c0 FROM vt1, vt0 WHERE (LIKELY(DISTINCT x'' COLLATE BINARY)) GROUP BY ((((((rt0.c5)OR(rt0.c5)))OR(rt0.c2))) BETWEEN (TRIM(DISTINCT rt0.c5)) AND ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))))), (NOT (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)), (((((rt0.c1 IN ()))OR(NULL)))AND(((rt0.c5) ISNULL)));SELECT DISTINCT CASE CASE rt0.c5  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END  WHEN (rt0.c2 IN ()) THEN x'' ELSE rt0.c0 END, (((((((((((rt0.c1))!=((vt0.c0))))AND(((rt0.c6) IS TRUE))))AND(TOTAL(rt0.c4))))AND(((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))AND('1903550408' COLLATE BINARY)), CASE ((((rt0.c0)OR(vt0.c0)))AND(rt0.c4))  WHEN (- (rt0.c0)) THEN ((rt0.c5) IS FALSE) WHEN CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 END THEN CAST(rt0.c5 AS NUMERIC) WHEN SUM(rt0.c4) THEN ((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)) ELSE (NOT (rt0.c0)) END FROM vt0 LIMIT 1237953151;SELECT DISTINCT rt0.c2, NTILE(CAST('zVSK' AS INTEGER)) OVER (), ((((((rt0.c5)AND(rt0.c5)))OR(rt0.c1))) NOT BETWEEN ((~ (vt1.c0))) AND (json_patch(rt0.c0, rt0.c6))) FROM rt0 WHERE ((((-1.003772743E9, x'', 0.9001304624734127)) BETWEEN (((x'' IN ()), ((NULL)>(NULL)), (((((((('1727814218')AND(x'')))AND(NULL)))AND(NULL)))AND(0X193b01f5)))) AND ((((0.44736540133010694) NOT BETWEEN (1118971575) AND (1.727637869E9)), (NULL IN (-2.01445409E8)), (((('1837585507')AND(x'7fb3')))AND(0X5475f299)))))) LIMIT 508900401;SELECT ALL LAST_VALUE((rt0.c6 IN ()) COLLATE BINARY) OVER () FROM vt0, rt0, vt1 WHERE ((NULL IN ())); -- 0ms;
SELECT DISTINCT ((((SQLITE_SOURCE_ID())AND(((rt0.c6)<<(rt0.c4)))))OR(((rt0.c0)=(rt0.c0)))), ((((NOT (rt0.c4))))==(((~ (rt0.c6))))), ((((rt0.c4)>>(0Xffffffffe4f7eed3))) NOT BETWEEN (json_patch(rt0.c4, rt0.c2)) AND (CAST(rt0.c5 AS INTEGER))) FROM vt0, rt0, vt1 WHERE ((((NULL, NULL, NULL)) NOT BETWEEN ((NULL, 0.5237689376772192, (('945792392')IS NOT(NULL)))) AND (((('-932007347')OR(NULL)), CAST(0.189581792212562 AS REAL), x'1c34' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT ((((NULL) IS TRUE)) BETWEEN ((((0.4577754454979638, rt0.c6, rt0.c0, 0.38391922560412683, vt1.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c6, rt0.c6, rt0.c0, rt0.c1, vt0.c0)))) AND (((0.296256512261731) BETWEEN (x'') AND (vt0.c0)))) FROM vt0, vt1, rt0 WHERE (CAST(((2054733570)>=(1500628798)) AS BLOB)); -- 0ms;
SELECT CASE ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))  WHEN (vt1.c0 IN ()) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c5 END WHEN TRIM(rt0.c1, rt0.c2) THEN (+ (rt0.c2)) WHEN NULL THEN ((rt0.c1) NOT NULL) END, GROUP_CONCAT(((rt0.c6)IS(rt0.c0))), '3Z' FROM rt0 WHERE ((- (x'6357')));SELECT (rt0.c3 IN ()) FROM vt0, vt1, rt0 WHERE (UPPER(DISTINCT CASE x''  WHEN 1201256572 THEN -831222685 ELSE 0X1b4471c1 END)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((((((rt0.c2)AND(rt0.c5)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4))), ((((x'') BETWEEN (rt0.c0) AND ('1c	F(7'))) IS FALSE), (((+ (x''))) NOTNULL) FROM vt1, rt0, vt0; -- 1ms;
SELECT GROUP_CONCAT(((((rt0.c3)AND(vt0.c0)))OR(rt0.c3))) OVER ( ORDER BY rt0.c6 ASC  NULLS FIRST, (((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)) IN (((vt0.c0) IS TRUE))) DESC  NULLS LAST, ((rt0.c5 COLLATE RTRIM)>=(vt0.c0))), CASE WHEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c4)) THEN (+ (vt1.c0)) WHEN INSTR(rt0.c0, rt0.c5) THEN vt1.c0 COLLATE RTRIM WHEN ((rt0.c6) NOT BETWEEN (rt0.c3) AND (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) ELSE vt1.c0 END, (((NOT (rt0.c6)))!=((+ (rt0.c1)))) FROM vt0, rt0;SELECT DISTINCT (('yKWvꬤiJg')IS(((rt0.c3)<=(vt1.c0)))), ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((~ ('-499992253'))) AND (vt0.c0)), ROW_NUMBER() OVER (), MIN((rt0.c6 IN (rt0.c6, vt0.c0)) COLLATE BINARY), ((((x'')!=(vt0.c0))) NOT NULL) FROM vt0, vt1, rt0; -- 0ms;
SELECT SUM(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c3))) OVER () FROM vt0;SELECT DISTINCT ((((rt0.c1)LIKE(vt1.c0))) BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) AND ((((rt0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((NULL, rt0.c1, vt1.c0, rt0.c4, rt0.c2)) AND ((vt0.c0, rt0.c3, rt0.c1, rt0.c3, NULL))))), (CAST(rt0.c5 AS INTEGER) IN ()), ((((rt0.c6) NOT BETWEEN (rt0.c6) AND (rt0.c4))) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c4) IS FALSE))) FROM vt0;SELECT (((((rt0.c1)OR(rt0.c5)))AND(vt1.c0)) IN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)))) FROM vt0 WHERE (x'');SELECT DISTINCT (rt0.c6 IN ()) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL COUNT(((rt0.c0)/('-1680983954'))) OVER (), CASE (('1561981470') NOT BETWEEN (rt0.c2) AND (rt0.c5))  WHEN ((rt0.c3)==(rt0.c1)) THEN UNLIKELY(DISTINCT rt0.c6) END, DENSE_RANK() OVER () FROM vt1, rt0, vt0; -- 1ms;
SELECT DISTINCT DATE(1.417015961E9, rt0.c6, rt0.c1, rt0.c3, vt0.c0) COLLATE NOCASE, SUM(MIN(vt1.c0) COLLATE BINARY), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c6 ELSE vt0.c0 END COLLATE BINARY FROM vt0 LIMIT -900614124 OFFSET 203055344;SELECT DISTINCT ((((((((0X57e9ce04)OR((NOT (rt0.c6)))))AND(vt0.c0 COLLATE NOCASE)))AND(((rt0.c3) NOT NULL))))OR(((rt0.c5)<=(vt1.c0)))) FROM vt0;SELECT ALL (vt1.c0 COLLATE RTRIM IN ()), (((CAST(rt0.c0 AS REAL), CAST(rt0.c6 AS BLOB), (((((((('1139125506')AND(rt0.c3)))AND('')))AND(rt0.c6)))OR(vt1.c0))))>=(((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c5))), (((rt0.c6)) BETWEEN ((rt0.c2)) AND (('233505572'))), CAST(rt0.c3 AS NUMERIC)))), ((((rt0.c4) IS FALSE))OR(((rt0.c5)GLOB(rt0.c6)))) FROM vt0, vt1, rt0 WHERE (((CASE '鴋{襮8硻A'  WHEN -287718925 THEN '-699472115' ELSE '569409272' END)+(((x'') ISNULL)))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), (((0.12000388402467232 IN ()))<(((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c0)))), rt0.c4 FROM rt0 GROUP BY (((((((rt0.c3)OR(rt0.c6)))AND(NULL))))>=((CASE rt0.c0  WHEN '-580297484' THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c3 END))), ((CAST(rt0.c2 AS INTEGER))/((((rt0.c4, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c2)) AND (('-262837263', rt0.c4, rt0.c5))))), (((rt0.c2 IN (vt1.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND ((((rt0.c5))>((rt0.c0))))) ORDER BY ((('1627449000')) NOT BETWEEN (((rt0.c1 IN (rt0.c2)))) AND ((rt0.c6))) ASC;SELECT ALL (((x'a142' IN ())) BETWEEN (rt0.c3) AND (rt0.c3 COLLATE BINARY)), CASE ((vt1.c0)&(rt0.c4))  WHEN rt0.c4 COLLATE RTRIM THEN ABS(rt0.c5) WHEN MAX(x'', rt0.c6) THEN rt0.c0 WHEN CASE WHEN x'' THEN vt0.c0 WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c1 THEN '1627449000' ELSE rt0.c4 END THEN rt0.c4 COLLATE BINARY ELSE (((rt0.c3))>((vt1.c0))) END, SUM(((vt0.c0) NOTNULL)) FROM rt0, vt1, vt0; -- 0ms;
SELECT rt0.c3 FROM rt0, vt1, vt0 WHERE (((0X36ae7e37 COLLATE RTRIM)>=(((NULL)==(x''))))) GROUP BY (vt0.c0 IN (rt0.c1)) COLLATE NOCASE, CAST(((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c3)) AS BLOB), CAST(rt0.c0 AS INTEGER) COLLATE BINARY HAVING '909058809'; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT rt0.c3), (rt0.c0 COLLATE RTRIM IN ()), rt0.c1 FROM vt0, rt0 WHERE (((('-1060186904')) NOT BETWEEN ((((NULL) NOT BETWEEN (NULL) AND ('175704202')))) AND ((796147524)))) GROUP BY 0.3031180344879174; -- 0ms;
SELECT DISTINCT ((rt0.c0)/(rt0.c5)) COLLATE RTRIM FROM vt1 ORDER BY '1928336256'  NULLS LAST;SELECT DISTINCT x'' FROM vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4)|(rt0.c4)))%(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) FROM vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)))-((('td')>(rt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(MIN(rt0.c3) AS REAL) FROM vt1, vt0, rt0 WHERE (((((1551721815)||(x'')))*((('') ISNULL)))); -- 0ms;
SELECT ALL ((((((((MAX(rt0.c0))OR(rt0.c1)))AND((- (NULL)))))AND(CASE vt1.c0  WHEN rt0.c6 THEN 'G閞' WHEN rt0.c5 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))OR(((vt1.c0) NOT NULL))), ((((rt0.c0) ISNULL))IS(IFNULL('\nj]r抸T\rN', rt0.c4))), ((CASE WHEN vt1.c0 THEN 0Xffffffffaee76ee1 END) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (rt0.c6 COLLATE NOCASE)) FROM vt0, vt1, rt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ (((rt0.c1) ISNULL))), '-530385173', rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1; -- 0ms;
SELECT DISTINCT vt1.c0, (rt0.c4 IN ()), LEAD(((((CAST(vt0.c0 AS NUMERIC))AND(((x'73e0') BETWEEN (NULL) AND ('[U')))))AND(((vt0.c0)<=(vt0.c0)))), (((LIKE(vt0.c0, vt0.c0), (~ (vt0.c0)), ((vt0.c0)LIKE(0.9591199246704326))))<>(('J∱', ((0.03053661453205847)AND(vt0.c0)), vt0.c0 COLLATE NOCASE))), (((NOT (vt0.c0)))>>((vt0.c0 IN ())))) OVER () FROM vt0 ORDER BY CAST((~ (rt0.c3)) AS TEXT) DESC;SELECT DISTINCT rt0.c4, CAST((((rt0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((vt0.c0, rt0.c6, rt0.c1)) AND ((rt0.c2, rt0.c5, x''))) AS NUMERIC), CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) FROM rt0 CROSS JOIN vt0 ON NULLIF(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)), rt0.c2 COLLATE RTRIM);SELECT DISTINCT (((((- (vt0.c0)))OR('0.9137580523843897')))AND((- (rt0.c5)))), ((((((((((((((rt0.c5)AND(rt0.c4)))OR(vt0.c0)))AND(rt0.c2)))OR(NULL)))OR(rt0.c0)))OR('4er?[?'))) NOT NULL), AVG(((((((((rt0.c0)AND(rt0.c6)))AND(rt0.c6)))AND(rt0.c1)))OR('''|z^{ '))) OVER ( RANGE  CURRENT ROW), (('474872244')!=(rt0.c6 COLLATE BINARY)), ((((vt0.c0)IS NOT(rt0.c2)))>((rt0.c4 IN ()))) FROM rt0, vt0 WHERE (TRIM(((NULL) NOT BETWEEN (0.12206634711630582) AND (0xfffffffffc6fdbbb)))); -- 0ms;
SELECT DISTINCT ((x'')-(CAST(0x5a9713fb AS INTEGER))) FROM rt0, vt1; -- 0ms;
SELECT ALL 0.5828385999423712 FROM vt1, vt0 NOT INDEXED, rt0 WHERE (CASE (('*딗Nk|r\')<>('-1971903303'))  WHEN CASE WHEN 'R' THEN 936981764 WHEN '' THEN -1.036915142E9 WHEN 'u1[8rp7r' THEN '0.062272979170544196' ELSE '469976098' END THEN ((x'') ISNULL) WHEN CASE WHEN 0.21013075906838063 THEN 0.7516294255586121 END THEN NULL COLLATE RTRIM WHEN CASE '-1003772743'  WHEN NULL THEN 0.2539110489841844 ELSE 397743348 END THEN CASE WHEN NULL THEN '' ELSE 'ygP' END END); -- 0ms;
SELECT DISTINCT (((rt0.c0, vt1.c0, 'kymydy6u', rt0.c4, rt0.c5)) BETWEEN ((CAST(x'' AS BLOB), CASE WHEN rt0.c2 THEN rt0.c5 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c6 THEN rt0.c4 END, ((rt0.c0)>>('2086117975')), ((vt0.c0)IS NOT(rt0.c0)), ((((vt1.c0)AND(rt0.c6)))AND(rt0.c3)))) AND ((CAST(rt0.c5 AS REAL), ((rt0.c5)AND(rt0.c4)), rt0.c5, (((vt0.c0)) NOT BETWEEN ((936381768)) AND ((rt0.c3))), AVG(rt0.c5)))) FROM vt0, vt1 LIMIT 1396738991;SELECT DISTINCT rt0.c3 FROM vt0, rt0, vt1 GROUP BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c6) AND (rt0.c2)))AND(((((rt0.c1)OR(rt0.c4)))OR(x'')))))AND(((rt0.c4)LIKE(rt0.c4)))))OR(((rt0.c6) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(vt1.c0)) HAVING COUNT(*); -- 1ms;
SELECT DISTINCT ((TRIM(DISTINCT vt0.c0, rt0.c4)) IS TRUE), '*c_qTN+', ((rt0.c3)IS NOT(rt0.c5)) COLLATE RTRIM FROM vt1, vt0, rt0 WHERE (CASE LIKELY(1748438055)  WHEN CAST(0.24344797441741495 AS INTEGER) THEN LOWER(77972687) WHEN highlight('M8', -1491325146, x'', x'') THEN SUBSTR(NULL, 0.5799545144500536) WHEN CASE WHEN x'6a32a330' THEN '-899853357' ELSE '' END THEN LIKELY(x'162bd8bd') END) ORDER BY (((vt1.c0 IN ()))%(x'')) ASC  NULLS FIRST, CAST(((rt0.c4)>>(rt0.c6)) AS NUMERIC) ASC  NULLS LAST;SELECT DISTINCT '0.21390866640138329' COLLATE NOCASE, (((x'' IN ()))AND(((((rt0.c4)AND(rt0.c0)))OR(rt0.c2)))), (((rt0.c6, CASE rt0.c4  WHEN rt0.c5 THEN vt0.c0 END, (vt1.c0 IN ())))=((x'a20d', CASE 0.9100049031122446  WHEN rt0.c5 THEN rt0.c4 ELSE vt0.c0 END, ((vt1.c0)>>(rt0.c5))))) FROM rt0, vt1 ORDER BY ((((rt0.c4)||(x'')))>((~ (rt0.c1))))  NULLS FIRST;SELECT DISTINCT TOTAL(vt0.c0) COLLATE NOCASE FROM rt0 WHERE (((('')) BETWEEN (((((x''))=((0.2622116093849013))))) AND ((((0Xffffffffcaec75e9) NOT NULL)))));SELECT ALL ((((rt0.c4)IS NOT(0.8984363714043587))) IS TRUE) FROM rt0 WHERE (TYPEOF((('314121955') NOT BETWEEN (0.2048205730903192) AND (NULL)))); -- 0ms;
SELECT DISTINCT ((~ (NULL)) IN ()) FROM vt0 LIMIT -1783985654 OFFSET -185852051; -- 0ms;
SELECT ALL CAST(rt0.c0 AS REAL) COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3)&(vt0.c0)) COLLATE BINARY, (((vt1.c0) BETWEEN (rt0.c0) AND (x'ccaa')) IN ()), ((((GROUP_CONCAT(rt0.c5))AND(rt0.c4)))OR(((rt0.c3) ISNULL))) FROM vt1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) ISNULL) FROM rt0, vt0, vt1 GROUP BY (((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c6))) HAVING (((rt0.c6))>=((rt0.c4))) COLLATE RTRIM; -- 1ms;
SELECT TYPEOF(((((rt0.c5)OR(rt0.c5)))OR(rt0.c6))), CAST(rt0.c5 AS INTEGER), NTH_VALUE(SQLITE_COMPILEOPTION_GET((((vt1.c0))<=((rt0.c6)))), json_array(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END, 1.189016105E9, (+ (rt0.c1)), CAST(rt0.c4 AS NUMERIC), (rt0.c0 IN ()), x'' COLLATE BINARY)) OVER ( ROWS BETWEEN  CURRENT ROW AND ((((((((((((((rt0.c4)OR('-1578946207')))AND(rt0.c5)))OR('')))OR('0.1524000973000491')))OR(rt0.c2)))OR(rt0.c3))) ISNULL) FOLLOWING EXCLUDE CURRENT ROW) FROM rt0, vt0, vt1;SELECT DISTINCT INSTR(((rt0.c0)IS(rt0.c1)), (+ (rt0.c2))) FROM vt0 WHERE ('-1907675405') LIMIT -1036915142;SELECT ALL 0.5241749962191443 FROM vt0 WHERE ((((+ (NULL)))%(CASE WHEN 985836487 THEN NULL END))) ORDER BY CAST((- (rt0.c0)) AS BLOB) DESC  NULLS LAST, (((- (vt1.c0)))<=(json(rt0.c3)));SELECT ALL (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END IN ()) FROM vt1; -- 0ms;
SELECT CAST(CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 END AS REAL), ((vt1.c0) IS TRUE), ((((((((((rt0.c5)OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c1)))&(((rt0.c4)IS(rt0.c0)))) FROM vt0, rt0;SELECT ((json_type(rt0.c4)) ISNULL) FROM vt0;SELECT DISTINCT '-' FROM vt1, rt0 WHERE (CAST(((((NULL)AND('G_?6')))AND(x'')) AS NUMERIC)) GROUP BY (+ ((NOT (rt0.c0)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))<(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c6)))) FROM vt1;SELECT ALL (- (CAST(vt1.c0 AS INTEGER))), ((((rt0.c2)AND(((rt0.c5) IS FALSE))))OR((((rt0.c2))>=((rt0.c0))))), ((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) FROM vt0 WHERE ((+ (((((-2023900678)OR(x'')))OR(0xffffffffd23ba7ab)))));SELECT DISTINCT (((rt0.c6)) BETWEEN ((LOWER(vt1.c0))) AND ((rt0.c4 COLLATE RTRIM))), (- (((rt0.c4)%(vt1.c0)))), LAST_VALUE(vt1.c0) OVER () FROM vt1, rt0, vt0 WHERE ((~ ('-502584193')) COLLATE RTRIM) ORDER BY vt1.c0 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c5)AND(rt0.c2)))OR(0.33087317344834033)))OR(rt0.c5)))AND(vt1.c0))) NOTNULL) FROM vt1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((('XPp') IS FALSE)) IS FALSE) FROM vt0 WHERE (CAST(CAST(0.9997878355817409 AS REAL) AS REAL)) GROUP BY rt0.c3 LIMIT -1889065387 OFFSET -326019455;SELECT (((vt0.c0)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c3))) COLLATE RTRIM FROM rt0;SELECT DISTINCT SUM(((rt0.c2) NOT BETWEEN (rt0.c5) AND (vt0.c0))), (('-110718952')<=(rt0.c0 COLLATE BINARY)), (((~ (rt0.c5)))<>(((rt0.c1) NOTNULL))), CAST(TYPEOF(rt0.c5) AS TEXT), x'8391' FROM vt0, rt0, vt1 WHERE (((((('+1K괂Saj')) NOT BETWEEN ((NULL)) AND (('569409272'))))%(((x'') ISNULL)))); -- 0ms;
SELECT DISTINCT ((rt0.c0) IS FALSE) COLLATE NOCASE, CASE WHEN '1393562192' THEN ((rt0.c6) IS TRUE) END, (+ (TRIM(DISTINCT rt0.c4))) FROM rt0, vt0 WHERE (((0.1352744624703922)>=(-715235247)) COLLATE RTRIM) LIMIT -1957055209 OFFSET -39165739; -- 0ms;
SELECT DISTINCT (~ (((rt0.c6)+(vt0.c0)))), rt0.c4, (('') BETWEEN (((((((((rt0.c2)OR(rt0.c6)))AND(vt1.c0)))OR(rt0.c1)))OR(NULL))) AND ((x'' IN (rt0.c4, rt0.c1)))), ((rt0.c1)>=(rt0.c1)) COLLATE BINARY, MAX(2.05994921E8) FROM vt1, rt0, vt0 WHERE (((((NULL)AND((- ('煋 Di}gX')))))AND(((x'')%('80496539'))))); -- 0ms;
SELECT DISTINCT (+ (((rt0.c5) IS TRUE))), vt0.c0, CAST(((rt0.c4) IS FALSE) AS NUMERIC) FROM rt0, vt1, vt0 WHERE (((('-ン', 0.21130910107279843, 0.5048978946866325)) NOT BETWEEN ((0xffffffffbfed7777, x'', x'13bf')) AND ((-1335324131, x'', x''))) COLLATE NOCASE) LIMIT 59731358; -- 0ms;
SELECT ALL rt0.c6 FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)<=(rt0.c5))) OVER () FROM vt0;SELECT ALL AVG(((rt0.c4)<>(rt0.c2))) FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c0)OR(rt0.c4)))AND(rt0.c6)) COLLATE BINARY FROM vt0;SELECT '-1949821358' FROM vt0, vt1; -- 0ms;
SELECT PERCENT_RANK() OVER ( ORDER BY (((NULL)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c2 END)) AND ((rt0.c6))) DESC  NULLS LAST) FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT CAST(NULL AS INTEGER), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3)))) FROM vt1, rt0 WHERE ((((((NULL)) NOT BETWEEN ((NULL)) AND (('/(>윌dO-P'))))<>((NULL IN ()))));SELECT GROUP_CONCAT((- (rt0.c0))) OVER () FROM vt0, vt1, rt0 WHERE ((((NULL, 723425379, 1.036233508E9)) NOT BETWEEN ((x'95f0' COLLATE NOCASE, (('')IS NOT(x'')), 1796956954 COLLATE BINARY)) AND (((- (0xffffffffe13ee988)), CAST('679484037' AS TEXT), ((0Xffffffffebbd70f5) NOTNULL))))) GROUP BY ((((vt0.c0, vt0.c0, rt0.c2))>((rt0.c1, rt0.c6, vt0.c0))) IN ()); -- 1ms;
SELECT DISTINCT x'' FROM rt0, vt0 ORDER BY rt0.c4 ASC  NULLS FIRST; -- 0ms;
SELECT CASE WHEN (((rt0.c2))>=((rt0.c0))) THEN LIKELY(DISTINCT rt0.c6) ELSE NULL END FROM rt0, vt0, vt1; -- 0ms;
SELECT IFNULL(DISTINCT ((rt0.c1)%(rt0.c1)), ((rt0.c4)&(rt0.c0))), SUM(CAST(rt0.c2 AS TEXT)), ((((((rt0.c6)AND(rt0.c2)))OR(NULL)))IS(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt0 WHERE ((((CAST(x'' AS TEXT), (((0.5619999554833166))<>((0.8618877996514271))), (~ ('1407169424'))))=((((0.9190273335779587) BETWEEN ('-826237794') AND (x'92bc')), 'QEX盹*q}>', (('裃Ld-)W亹d(') NOT BETWEEN ('387899660') AND (0x43ab5936)))))); -- 0ms;
SELECT ((CASE WHEN rt0.c5 THEN x'' ELSE NULL END) IS FALSE), (~ (((rt0.c4) ISNULL))), ((vt0.c0 COLLATE NOCASE)*(TOTAL(rt0.c0))) FROM vt0, rt0; -- 0ms;
SELECT ALL (CASE vt0.c0  WHEN rt0.c6 THEN vt0.c0 END IN ()), ((((rt0.c0)/(rt0.c2))) IS FALSE), ((((rt0.c5)LIKE(vt1.c0))) BETWEEN (((rt0.c2) IS FALSE)) AND (((((((((rt0.c3)AND(rt0.c5)))AND(rt0.c6)))OR(rt0.c3)))AND(vt1.c0)))) FROM vt0;SELECT DISTINCT (((~ (-919064526)))+(LOWER(rt0.c0))) FROM vt0, rt0 NATURAL JOIN vt1; -- 0ms;
SELECT DISTINCT ((((0.576546286074847) NOT BETWEEN (rt0.c5) AND (vt0.c0)))&(((rt0.c5) NOT BETWEEN (vt1.c0) AND (rt0.c5)))), '', rt0.c4 FROM vt1 WHERE (CASE WHEN (('?\n') NOT BETWEEN (NULL) AND (x'')) THEN ((0.9176307712284861)+(0.998897932230559)) WHEN ((((((((x'')OR(0.41905300678915325)))AND('unixepoch')))AND(0.8521605878815203)))OR(0.5659255746905887)) THEN 1352767861 COLLATE NOCASE WHEN (~ (x'')) THEN ((x'') BETWEEN (0.09145988295993168) AND (0.23157817106922618)) ELSE CASE '349473670'  WHEN NULL THEN 0xffffffffca5d53d3 WHEN 0xffffffffa3ffddb1 THEN x'2bd9' WHEN '-975907774' THEN '|fr' END END) UNION ALL SELECT DISTINCT x'7989', (((((((rt0.c6, '1674025515', rt0.c6)) BETWEEN ((rt0.c6, vt0.c0, rt0.c0)) AND ((NULL, rt0.c4, rt0.c2))))AND((rt0.c3 IN (rt0.c0)))))AND(CAST('-526323155' AS INTEGER))), CAST(((x'')AND(vt0.c0)) AS BLOB) FROM rt0, vt0 WHERE ((((-1228284638 COLLATE NOCASE))>(((((0.9040437009025977, '1787105824', NULL))<>(('..	iDy', x'', NULL)))))));SELECT ((((((rt0.c1) NOTNULL))AND(CAST(rt0.c2 AS TEXT))))AND(((vt0.c0)LIKE(rt0.c1)))) FROM vt1, vt0, rt0 ORDER BY NULLIF(DISTINCT ((rt0.c5)OR(rt0.c5)), (((rt0.c2))>((0x7fffffffffffffff))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) IS TRUE) THEN LOWER('') WHEN rt0.c4 THEN ((rt0.c1) IS FALSE) WHEN 'z揬紊/' THEN ((rt0.c0) IS TRUE) ELSE (((rt0.c6, rt0.c2, rt0.c3)) BETWEEN ((rt0.c5, rt0.c6, vt1.c0)) AND ((rt0.c2, rt0.c6, rt0.c1))) END FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT (- (((rt0.c4)LIKE(0X522a51c9)))) FROM rt0, vt1; -- 0ms;
SELECT ALL (+ (CASE vt1.c0  WHEN NULL THEN '-975907774' ELSE vt0.c0 END)), (((((- (rt0.c1)))OR((rt0.c2 IN ()))))AND((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3))))), CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB) FROM vt0, rt0 WHERE ((+ (x'4b0c' COLLATE RTRIM)));SELECT DISTINCT ((((((rt0.c3)OR(rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5)))) FROM rt0, vt1 WHERE ((NOT ((('\r>{%[.]s淆)(')&(NULL))))); -- 0ms;
SELECT ((rt0.c5)>>(GROUP_CONCAT(rt0.c3))) FROM vt1, vt0, rt0 WHERE ((((NULL IN ()))=(((('')) BETWEEN (('')) AND ((0.38391922560412683)))))) ORDER BY ABS((NOT (vt0.c0))); -- 0ms;
SELECT DATE(rt0.c2, vt1.c0, rt0.c3) COLLATE BINARY, CAST(NULL AS TEXT), ((NULL)+(vt0.c0)) COLLATE BINARY FROM vt1, rt0;SELECT DISTINCT TOTAL((((rt0.c6))>((rt0.c2)))) OVER () FROM vt0 WHERE (((0.849346061763594) BETWEEN ((- ('9j'))) AND (((0xffffffffa40f6566) NOT BETWEEN (NULL) AND ('-1133283591')))));SELECT ALL NTILE(((vt0.c0)AND(x'')) COLLATE RTRIM COLLATE RTRIM) OVER ( ORDER BY (((vt0.c0 IN (rt0.c2))) IS TRUE) DESC, rt0.c3 DESC) FROM vt0;SELECT DISTINCT (((((rt0.c3) NOT NULL)))<>((CASE WHEN rt0.c4 THEN rt0.c3 END))) FROM vt0, rt0 WHERE ((((x'')) NOT BETWEEN ((((((((((x'24b3')OR(0.5411056662494883)))OR(NULL)))AND(x'')))OR(0.881925160096677)))) AND ((((1.14909708E8)||(NULL)))))); -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS INTEGER)) NOT NULL) FROM vt0;SELECT rt0.c1, CAST(((rt0.c5) ISNULL) AS TEXT), CUME_DIST() OVER () FROM vt1, rt0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT rt0.c2 COLLATE BINARY) FROM vt0, rt0; -- 0ms;
SELECT ALL (rt0.c1 COLLATE NOCASE IN (((rt0.c6)<=(NULL)))) FROM vt1 WHERE ((((((('569409272')OR(0x4d819f39)))AND(x'')))IS(CAST(NULL AS REAL))));SELECT CAST((((vt1.c0, rt0.c4, rt0.c5))!=((rt0.c2, rt0.c6, rt0.c3))) AS TEXT), rt0.c1 COLLATE RTRIM, CAST((((rt0.c3, vt1.c0, rt0.c0))<=((rt0.c0, 0.5057108601040108, rt0.c0))) AS REAL) FROM vt1, vt0, rt0 GROUP BY (SUBSTR(rt0.c5, rt0.c4) IN ()); -- 0ms;
SELECT ALL 6.21803217E8 FROM vt1 WHERE ((((((('f2vCcG^y')AND(x'')))OR(x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((rt0.c6) IS TRUE) IN ()) FROM vt1 LEFT OUTER JOIN vt0 ON rt0.c4 RIGHT OUTER JOIN rt0 ON (((rt0.c2 COLLATE BINARY, rt0.c0 COLLATE RTRIM, rt0.c6))>=((((rt0.c5) BETWEEN (vt1.c0) AND (rt0.c3)), ((rt0.c2) IS TRUE), ((((rt0.c4)AND(vt1.c0)))OR(rt0.c4)))));SELECT DISTINCT ((((((vt1.c0)AND(vt1.c0)))AND(rt0.c3)))!=((NOT (vt0.c0)))), (NOT (((vt1.c0) BETWEEN (0Xffffffffa61cc087) AND (NULL)))), (x'' IN (((NULL) NOTNULL), (+ (vt0.c0)))) FROM vt1, rt0, vt0 WHERE (CAST(LIKELY(-967868545) AS INTEGER)); -- 1ms;
SELECT ((((((((vt1.c0)AND((rt0.c6 IN ()))))OR(CAST(rt0.c4 AS NUMERIC))))AND(((((((((vt1.c0)OR(rt0.c6)))AND(rt0.c6)))OR(rt0.c0)))OR(rt0.c6)))))OR((rt0.c4 IN ()))), x'', (((((((((((((((rt0.c6)OR(rt0.c3)))AND(rt0.c5)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c4))))<=(((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))))) FROM vt0;SELECT ALL CAST(rt0.c0 AS TEXT) COLLATE NOCASE, 0.8340459548605815, ((CASE rt0.c4  WHEN rt0.c2 THEN vt0.c0 END)-(TRIM(rt0.c2, rt0.c4))) FROM vt1, rt0 LIMIT 1445710771 OFFSET -694610059;SELECT DISTINCT (((((rt0.c3))<((rt0.c0)))) IS FALSE) FROM vt0 WHERE ((((0.16708761641955605, '300599995', NULL)) BETWEEN ((((x'')>(x'')), ((1.673778003E9) NOT BETWEEN (NULL) AND ('A%J')), (- (0.0034120293894099873)))) AND ((((0.5027119668140752) ISNULL), SQLITE_COMPILEOPTION_GET(0Xffffffffdb6bb1df), x''))));SELECT ALL GROUP_CONCAT(NULL) OVER () FROM vt0, vt1, rt0 WHERE (0xffffffffc17f3c8a); -- 0ms;
SELECT NTILE(((((vt0.c0) BETWEEN (rt0.c0) AND (0.17701639686869142))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((vt0.c0) NOT NULL)))) OVER (), ((vt1.c0) NOT BETWEEN (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (((((rt0.c0)OR(rt0.c0)))AND(rt0.c5)))), COUNT(*) OVER () FROM vt0, rt0 WHERE (x'');SELECT DISTINCT (+ ((rt0.c1 IN ()))), ((CASE WHEN rt0.c2 THEN rt0.c4 END) ISNULL), (MAX(rt0.c2) IN ()) FROM vt0 WHERE (CASE CASE x'1504'  WHEN '-1364699594' THEN x'' ELSE '-1889065387' END  WHEN (- (x'c325')) THEN ((x'')|(0.734041755387331)) ELSE 0.3119829115631926 COLLATE BINARY END) GROUP BY 0.1524000973000491;SELECT DISTINCT COUNT(*), ((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 END)OR((NOT (rt0.c1)))))OR((rt0.c3 IN (vt1.c0)))), (rt0.c3 COLLATE NOCASE IN ()) FROM rt0, vt1, vt0; -- 0ms;
SELECT ((x'4bac') NOTNULL) COLLATE NOCASE, ((((LIKELIHOOD(DISTINCT rt0.c1, 0.22779349793940462))AND('')))AND(rt0.c1)), (((rt0.c3)IS NOT(rt0.c2)) IN ()), NTH_VALUE(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY, CAST((- (vt0.c0)) AS TEXT)) OVER (), (((rt0.c2)) BETWEEN (((+ (vt1.c0)))) AND (((- (rt0.c6))))) FROM rt0, vt0, vt1;SELECT DISTINCT ((((rt0.c3)<>(rt0.c3)))>(((rt0.c4)==(vt0.c0)))) FROM vt0, rt0, vt1; -- 0ms;
SELECT ALL ((((rt0.c2) ISNULL)) IS TRUE), (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))*(rt0.c1 COLLATE RTRIM)), rt0.c5 FROM vt0, vt1, rt0 WHERE (CAST(COALESCE(0.8851547659598492, NULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT MIN(TRIM(DISTINCT rt0.c6, -815728928)) FROM vt0;SELECT MAX((- (rt0.c4))) FROM vt0, vt1, rt0 WHERE (CASE (((NULL))==(('-1133283591')))  WHEN ((0.90579465632574)<(0.2164565090705829)) THEN ((0.07001541851849247)-('-1820126733')) ELSE (('999498859')<=('')) END); -- 0ms;
SELECT DISTINCT (- (CASE vt0.c0  WHEN rt0.c6 THEN 1.673778003E9 ELSE rt0.c5 END)) FROM rt0, vt0 GROUP BY x'' HAVING vt1.c0;SELECT DISTINCT ((((1138422559) NOTNULL))>>((~ (NULL)))) FROM rt0; -- 0ms;
SELECT DISTINCT 0x37e0bf14, (('')||(rt0.c4)), (- (((rt0.c4) IS TRUE))) FROM rt0, vt0 WHERE (((('565084877')) BETWEEN ((((x'')-('J∱')))) AND ((((x'')IS NOT(0.20684751910768107)))))); -- 0ms;
SELECT DISTINCT (((vt0.c0, rt0.c0, rt0.c3)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), GROUP_CONCAT(rt0.c5))) AND ((rt0.c1, ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c3)) BETWEEN ((vt1.c0)) AND ((rt0.c6)))))) FROM rt0, vt1 WHERE (LIKELY((~ (''))));SELECT ALL ((x'' COLLATE BINARY)<=(TRIM(DISTINCT rt0.c6))) FROM rt0, vt1, vt0 ORDER BY (- ((rt0.c4 IN ())))  NULLS LAST; -- 0ms;
SELECT COUNT(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END) OVER () FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((((x'')OR(((0x5e2ed921) NOTNULL))))OR((x'' IN ())))) LIMIT 722558273 OFFSET -2030944792; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM)LIKE(x'' COLLATE NOCASE)) FROM vt0;SELECT DISTINCT COALESCE(NULL COLLATE RTRIM, ((rt0.c2)==(vt1.c0)), (NULL IN ()), ((rt0.c4)>=(0xffffffffe22ccea8))) FROM rt0 GROUP BY (+ (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))), (+ (rt0.c4 COLLATE NOCASE)), CASE (~ (rt0.c4))  WHEN CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END THEN ((x'')!=(rt0.c5)) ELSE CASE WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c3 END END ORDER BY ((rt0.c2 COLLATE BINARY)&((((rt0.c4))>=((rt0.c1))))) ASC  NULLS LAST LIMIT 426272713;SELECT TRIM(((vt0.c0)!=(rt0.c1))) FROM rt0 WHERE (CASE WHEN ((((NULL)OR(x'b4fe')))AND(x'3b42')) THEN x'' WHEN ((((((((((((x'8421')OR('')))AND(-443190145)))AND(x'')))AND(NULL)))AND(NULL)))AND(0.6540371416106343)) THEN ((x'') NOT BETWEEN (-1823381358) AND (-1625908192)) WHEN LIKELIHOOD(DISTINCT '-1757838379', 0.46201228374564596) THEN (((('Mk0p2')AND('<zNk춽%疴1S')))AND(0x6892671e)) ELSE (((('hV')AND(x'')))OR(NULL)) END);SELECT '-2138455670', rt0.c0, COUNT((vt1.c0 IN ())) FROM vt1 WHERE (x'43bd');SELECT DISTINCT ((((rt0.c0) IS TRUE)) NOT BETWEEN (((rt0.c1)+(rt0.c6))) AND (((rt0.c4) IS FALSE))), ((((((((((((rt0.c5)OR(rt0.c0)))OR(rt0.c6)))OR(rt0.c5)))AND(vt1.c0)))OR(((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))))OR(((rt0.c5)<<('')))), (+ (((rt0.c5) IS FALSE))) FROM vt1, rt0, vt0; -- 0ms;
SELECT rtreenode(((((rt0.c1)OR(rt0.c3)))AND(rt0.c5)), ((((((((rt0.c5)OR(rt0.c4)))OR(rt0.c6)))AND(NULL)))AND(rt0.c5))), 2.27869661E8, (((rt0.c0)) BETWEEN (((((rt0.c6, rt0.c4, vt0.c0)) NOT BETWEEN ((rt0.c3, vt1.c0, rt0.c6)) AND ((rt0.c1, rt0.c0, vt1.c0))))) AND ((ABS(rt0.c1)))) FROM vt1, vt0 WHERE ((((+ (-5.50008E7)))>>((((('cYgN뼂t3')AND(NULL)))OR('G!')))));SELECT DISTINCT DATE(CASE rt0.c5  WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN -2.13845567E9 WHEN rt0.c3 THEN rt0.c4 END, ((rt0.c1)==(rt0.c1)), CAST(rt0.c2 AS NUMERIC)) FROM vt0 WHERE (CAST((- (NULL)) AS BLOB)) LIMIT -256523669 OFFSET -391485911;SELECT ALL ((rt0.c2)&(COUNT(rt0.c4))) FROM vt1, rt0, vt0 WHERE (((((NULL)|(NULL)))<<((NOT (NULL))))); -- 0ms;
SELECT DISTINCT ((rt0.c5) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE RTRIM COLLATE BINARY FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c6)))&(CASE WHEN rt0.c5 THEN rt0.c5 END)) FULL OUTER JOIN vt1 ON (rt0.c2 IN ()) COLLATE BINARY GROUP BY '1682405064', '-593020935', CAST(rt0.c6 AS INTEGER) COLLATE NOCASE HAVING CASE HEX(rt0.c0)  WHEN ((0x5efe44b6) NOT NULL) THEN vt0.c0 COLLATE BINARY END; -- 0ms;
SELECT DISTINCT ((((CASE rt0.c0  WHEN rt0.c2 THEN '1755268285' ELSE rt0.c0 END)OR(CAST(rt0.c5 AS TEXT))))OR((+ (rt0.c1)))), CAST(CAST(rt0.c3 AS INTEGER) AS BLOB), (NOT (((rt0.c3) IS FALSE))) FROM vt1, vt0, rt0 LIMIT 1500628798; -- 0ms;
SELECT (UPPER(DISTINCT rt0.c5) IN (((vt1.c0) NOT BETWEEN (rt0.c6) AND (rt0.c2)))) FROM vt0 WHERE ((((~ (1912744549))) NOT BETWEEN ((((NULL))>((x'')))) AND ((('.ti-.jJ')<<('1463533843')))));SELECT ALL COUNT(CAST(rt0.c5 AS REAL)) FROM vt0 WHERE (((json_array_length('J.', NULL)) NOT NULL)) LIMIT 569409272;SELECT (((CAST('?嫮' AS BLOB), ((rt0.c4)>(rt0.c3)), rt0.c6))!=((((((rt0.c1)OR(rt0.c1)))AND(rt0.c5)), ((rt0.c6)||(rt0.c5)), CAST(rt0.c6 AS INTEGER)))) FROM rt0 WHERE (NULLIF(DISTINCT (~ (x'def7')), CASE '718188172'  WHEN '-256523669' THEN NULL END)) LIMIT 1092909338 OFFSET 836985343; -- 0ms;
SELECT ALL ((((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0))) IS TRUE) FROM rt0, vt0 GROUP BY (NOT (CAST(rt0.c0 AS BLOB))), '6q', (((rt0.c2 IN ())) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())));SELECT DISTINCT ((CAST(rt0.c1 AS REAL)) NOT NULL) FROM vt1;SELECT DISTINCT (((CAST(rt0.c5 AS NUMERIC), (rt0.c1 IN (rt0.c0)), ((rt0.c4)*(rt0.c5))))<(((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), IFNULL(rt0.c1, vt1.c0), (NOT (rt0.c5))))) FROM vt1, rt0, vt0 WHERE (0.766754715307206) ORDER BY (((rt0.c4 IN ())) ISNULL) ASC  NULLS LAST; -- 0ms;
SELECT ALL CAST(rt0.c4 AS INTEGER) FROM vt1, rt0; -- 0ms;
SELECT ALL (NOT ((~ (vt0.c0)))) FROM vt0, rt0, vt1; -- 0ms;
SELECT ALL x'', (~ ((vt1.c0 IN (vt0.c0)))), ((LIKELY(DISTINCT rt0.c0)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (MAX(rt0.c2))), SUM(((rt0.c6)<(rt0.c3))) OVER (), (((((rt0.c6)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) BETWEEN (((rt0.c1)*(rt0.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c6 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c0 END)) FROM vt0;SELECT DISTINCT LAG(rt0.c3, 0.5528927721223137, (((vt0.c0 IN (rt0.c3, rt0.c6)))|(((vt0.c0) BETWEEN (rt0.c3) AND (0Xfffffffff8fac8f8))))) OVER ( RANGE BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING) FROM vt1, vt0, rt0 WHERE (((((((((NULL)OR((((-2.01445409E8, x'', NULL)) NOT BETWEEN ((0.6748461425106268, 'hZBK', NULL)) AND (('|Y7bἦ선', '-500379992', '260404583'))))))AND(NULL)))AND(((x'4c6e') NOT BETWEEN (NULL) AND ('')))))AND(((0.3054153739549933) NOT NULL)))); -- 1ms;
SELECT (((vt1.c0 IN ())) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ('-1543512655')), ((ABS(rt0.c5))&((((rt0.c2, vt1.c0, rt0.c3))<((rt0.c5, rt0.c5, rt0.c2))))), (((- (rt0.c4))) NOTNULL) FROM vt0;SELECT (((vt0.c0)) BETWEEN ((CASE x''  WHEN x'' THEN vt1.c0 WHEN rt0.c4 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c6 WHEN rt0.c6 THEN vt1.c0 WHEN rt0.c6 THEN rt0.c6 ELSE vt1.c0 END)) AND ((UNLIKELY(DISTINCT vt1.c0)))), ((((rt0.c2)>(vt1.c0))) BETWEEN (((vt0.c0)|(rt0.c1))) AND (((rt0.c3)>=(rt0.c3)))), ((MAX(vt0.c0)) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (vt1.c0 COLLATE RTRIM)) FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c3)>(rt0.c5))) NOT BETWEEN ((((0.14950727949480758, 0.21049674451586475, rt0.c2, rt0.c4, '-500379992')) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c2)) AND ((vt1.c0, '1771910554', rt0.c3, vt1.c0, 0.3671903723701416)))) AND (LIKE(rt0.c4, rt0.c5))) FROM rt0 WHERE ((((NULL)) BETWEEN ((CASE WHEN 0.23751655076557143 THEN x'' END)) AND (((NULL IN (0.01590515319549879, '-694610059'))))));SELECT (((NOT (rt0.c6))) BETWEEN ('1583455392') AND ((((rt0.c3))<=((rt0.c1))))) FROM rt0, vt0, vt1 WHERE (((('1114614796' IN (0.7382536074421688, x''))) BETWEEN ('') AND (((NULL)|(x''))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY (((rt0.c1, rt0.c0, 0.29275985368912005)) BETWEEN ((IFNULL(rt0.c2, vt1.c0), ((vt0.c0)<=('')), vt1.c0)) AND ((vt0.c0, ((((vt1.c0)AND(rt0.c1)))OR(vt0.c0)), ((rt0.c6) NOT BETWEEN (NULL) AND (rt0.c2)))))) FROM vt0, vt1;SELECT ALL CASE WHEN CASE vt1.c0  WHEN rt0.c6 THEN rt0.c6 ELSE rt0.c6 END THEN ((((vt0.c0)OR(rt0.c0)))OR(rt0.c6)) WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c5)) AND ((vt0.c0))) WHEN rt0.c0 COLLATE BINARY THEN (~ (rt0.c6)) END, MIN(((rt0.c3)|(rt0.c0))), (((rt0.c6, rt0.c2, rt0.c5)) BETWEEN ((GROUP_CONCAT(vt1.c0), ABS(DISTINCT rt0.c5), ((((((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c6)))AND(rt0.c0)))AND(rt0.c3)))OR(0.0666355711193577)))OR(vt0.c0)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN 9.36381768E8 ELSE vt0.c0 END, '{8}A', ((rt0.c3) BETWEEN (rt0.c5) AND (vt0.c0))))) FROM vt1, rt0, vt0 WHERE ((((x'')>>(-4.99992253E8)) IN ((('7d8E*Cg')>(NULL))))); -- 0ms;
SELECT DISTINCT ((rt0.c3) IS TRUE) COLLATE BINARY, ((SUM(NULL))&(((rt0.c3)GLOB(rt0.c6)))), ((CAST(vt1.c0 AS NUMERIC)) BETWEEN ('m_I' COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) FROM vt1, rt0, vt0; -- 1ms;
SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) ISNULL) FROM vt0 LIMIT -500379992;SELECT DISTINCT MIN(((rt0.c0)IS NOT(rt0.c2))), CAST(vt0.c0 COLLATE RTRIM AS NUMERIC), ((rt0.c3 COLLATE BINARY) ISNULL) FROM vt0, vt1, rt0; -- 0ms;
SELECT ((vt0.c0)<(((rt0.c4)&(vt1.c0)))), CAST(((rt0.c1)>=(vt0.c0)) AS TEXT), COUNT(*) FILTER(WHERE ((CAST(rt0.c6 AS BLOB))>=(rt0.c5 COLLATE RTRIM))) OVER () FROM rt0, vt1, vt0 WHERE (CAST((('448671138')>>('')) AS TEXT)); -- 0ms;
SELECT DISTINCT (+ (0.02520492711139588)), ((((NULL)AND(((rt0.c0)<(vt1.c0)))))OR(((rt0.c4) BETWEEN (rt0.c6) AND (vt1.c0)))), (((((vt1.c0))==((NULL))))==(CASE WHEN vt0.c0 THEN rt0.c6 ELSE vt1.c0 END)), 'El' COLLATE BINARY, ((SUM(vt0.c0)) NOT BETWEEN (((vt0.c0)LIKE(NULL))) AND (rt0.c4 COLLATE BINARY)) FROM vt1, rt0 WHERE ((((x'') IS TRUE) IN ())) GROUP BY ((rt0.c0) NOT NULL) COLLATE NOCASE, ((((rt0.c6 COLLATE RTRIM)AND(((rt0.c6)>>(rt0.c2)))))OR(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c5 END)), TYPEOF(DISTINCT rt0.c3) HAVING ROUND('6*桲z쐊' COLLATE NOCASE, (((rt0.c1, rt0.c5, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c4, vt1.c0))));SELECT DISTINCT ((rt0.c4 IN ()) IN ()), ((CAST(vt1.c0 AS INTEGER)) IS FALSE), ((((CAST(vt1.c0 AS REAL))AND(((rt0.c0) NOT NULL))))AND(CAST(rt0.c3 AS INTEGER))) FROM rt0, vt1, vt0 ORDER BY (NOT (TYPEOF(rt0.c3))) ASC, (NOT (ROUND(rt0.c3, rt0.c2)))  NULLS LAST, ((((((rt0.c2)OR(0.9382923943576538)))AND(rt0.c2)))IS NOT(CASE WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c2 END)) LIMIT -534542564 OFFSET -1099823674; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0 WHERE (CAST(((0.8877512734736416) NOT BETWEEN (0.18780944647165798) AND (NULL)) AS TEXT)); -- 1ms;
SELECT (~ ('\r>{%[.]s淆)(')), COUNT(*) OVER (), (~ (((rt0.c4) NOT NULL))) FROM rt0 WHERE ((((x'189f')<<(NULL)) IN (NULL))) ORDER BY CAST(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)) AS BLOB) ASC; -- 0ms;
SELECT DISTINCT SUM((rt0.c2 IN (vt0.c0))) FROM vt1 WHERE (CASE WHEN (x'' IN ()) THEN ((((-8.26237794E8)OR('1500628798')))OR('G,')) END) LIMIT 1764217403 OFFSET -1182687058;SELECT ALL (CAST(rt0.c5 AS BLOB) IN ()), CASE (rt0.c4 IN ('15'))  WHEN rt0.c2 THEN CASE rt0.c1  WHEN '0.6349457530324697' THEN rt0.c4 WHEN rt0.c6 THEN '[u' WHEN rt0.c5 THEN rt0.c5 ELSE x'' END ELSE ((rt0.c3)==(rt0.c1)) END, (((CASE rt0.c2  WHEN rt0.c4 THEN 0xffffffffe8aa6629 ELSE rt0.c3 END))<(((rt0.c5 IN ())))), ((+ (rt0.c3)) IN ()), rt0.c6 FROM vt1, rt0 WHERE (((0.7891724524694061 COLLATE BINARY) BETWEEN (('0.9632799025155353' IN ())) AND (((((NULL)OR(0xffffffffd7fb4be8)))OR(x''))))) GROUP BY ((NULL)<((((rt0.c0))>=((rt0.c5))))), CASE NULL  WHEN rt0.c3 THEN (('2120640747')<(rt0.c1)) WHEN (((rt0.c4, rt0.c4, '')) NOT BETWEEN ((rt0.c1, NULL, vt1.c0)) AND ((rt0.c5, rt0.c1, vt0.c0))) THEN CAST(rt0.c1 AS REAL) WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN CASE vt0.c0  WHEN vt1.c0 THEN rt0.c3 END END, ((CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c5 THEN x'229f' WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (0X32a4661f) AND (x'')) HAVING rt0.c6;SELECT DISTINCT SUM(CAST(rt0.c6 AS TEXT)) OVER () FROM vt0, vt1, rt0 GROUP BY CAST(((((((((rt0.c0)AND(rt0.c0)))OR(NULL)))AND(rt0.c5)))OR(rt0.c0)) AS TEXT); -- 0ms;
SELECT DISTINCT (((((rt0.c0)>(''))))>((((rt0.c5)<>(vt0.c0))))), (((((rt0.c2, rt0.c4, rt0.c3))>((vt0.c0, rt0.c6, rt0.c3)))) ISNULL), (~ ((+ (rt0.c0)))) FROM vt1, vt0, rt0 INTERSECT SELECT DISTINCT (~ (((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c0)))), AVG((((vt1.c0)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6)))) OVER (), SUM(((rt0.c6) IS FALSE)) FROM rt0;SELECT DISTINCT (~ ((rt0.c5 IN ()))) FROM vt0, rt0 GROUP BY CAST((((rt0.c6, rt0.c5, vt1.c0, vt1.c0, rt0.c0)) NOT BETWEEN ((NULL, rt0.c3, rt0.c1, vt1.c0, rt0.c1)) AND ((vt0.c0, rt0.c6, rt0.c6, vt1.c0, NULL))) AS NUMERIC) HAVING ((0.5023752051947341)IS((('H ')-(rt0.c5))));SELECT ((AVG(rt0.c1)) NOT NULL) FROM rt0, vt1 WHERE (((((((('952311324'))>(('1635354570'))))OR(((x'')>>(x'')))))AND(LOWER(DISTINCT x'')))); -- 0ms;
SELECT rt0.c1 FROM rt0, vt1, vt0 LIMIT 1787105824 OFFSET 1673778003; -- 0ms;
SELECT DISTINCT (((((rt0.c6)) BETWEEN ((rt0.c5)) AND ((rt0.c6)))) IS TRUE) FROM vt0;SELECT (((((~ (-1819904305)))OR(((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c3)))))AND(LOWER(DISTINCT rt0.c1))) FROM vt0, rt0 WHERE (''); -- 0ms;
SELECT rt0.c0, COUNT(*) OVER (), '213201147', CASE rt0.c1 COLLATE NOCASE  WHEN (rt0.c0 IN (rt0.c5)) THEN (~ (rt0.c0)) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c5)) AND ((vt0.c0))) END, ((SUM(rt0.c5)) BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c2, vt1.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))))), CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c3))) AS BLOB), (((NULL)) BETWEEN ((MAX(rt0.c5))) AND ((((rt0.c1)||(rt0.c2))))) FROM vt1, rt0;SELECT CASE rt0.c2  WHEN (((rt0.c6))<=((vt1.c0))) THEN CASE WHEN rt0.c3 THEN 0.284574491568355 END ELSE NULL END, ((MAX(rt0.c6))|((rt0.c0 IN ()))), ((COUNT(rt0.c2)) IS TRUE) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4 IN ()) IN (rt0.c0 COLLATE RTRIM)) FROM vt0, rt0, vt1 WHERE (CASE WHEN ((NULL)IS('1364156734')) THEN ((NULL)%(0.7060059129071832)) WHEN ((NULL) BETWEEN (0.3363588283200267) AND (NULL)) THEN (x'' IN ()) WHEN ((NULL) BETWEEN (0.0) AND (0xffffffffda1dd510)) THEN (('Zh.') ISNULL) END); -- 0ms;
SELECT ALL (((((rt0.c2)OR(rt0.c0)))OR(rt0.c4)) IN ()), ((((((((((rt0.c5)OR(rt0.c1)))OR('-806795547')))OR(vt1.c0)))OR(rt0.c2)))||((NOT (rt0.c4)))), ((GROUP_CONCAT(rt0.c1)) NOTNULL) FROM vt0, rt0, vt1 WHERE ('1201256572') ORDER BY (((((((((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND ((rt0.c0, vt1.c0, vt1.c0))))AND(CASE WHEN rt0.c6 THEN rt0.c5 ELSE rt0.c3 END)))AND(((vt0.c0) NOTNULL))))OR('-2058808343' COLLATE BINARY)))OR(((rt0.c0) IS TRUE)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE SUM(rt0.c3)  WHEN ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c5)) THEN AVG(vt1.c0) WHEN COUNT(*) THEN rt0.c6 COLLATE BINARY WHEN CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END THEN (rt0.c3 IN ()) END FROM vt0, vt1 WHERE (((0.14004748916674437) IS TRUE) COLLATE BINARY) LIMIT 2054733570 OFFSET 1520946142;SELECT DISTINCT CASE rt0.c2  WHEN CAST(vt0.c0 AS TEXT) THEN 0x7e6668eb END, (~ (vt1.c0)), LAG(CAST(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c2)) AS INTEGER), (((CAST(rt0.c3 AS BLOB), (rt0.c2 IN ()), CAST(vt1.c0 AS NUMERIC)))>((rt0.c5, ((rt0.c5) ISNULL), CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c4 THEN vt1.c0 ELSE x'' END))), (((rt0.c2)) BETWEEN ((x'')) AND ((((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c6)))))) OVER () FROM vt1, rt0, vt0 ORDER BY (('Ny\ Ol*')<<(((rt0.c4)|(NULL)))); -- 0ms;
SELECT DISTINCT LENGTH(NULL) FROM vt0, vt1, rt0 WHERE ((- (((1782617197) NOT BETWEEN (NULL) AND (0.17855841521574145))))); -- 0ms;
SELECT ALL rt0.c4 COLLATE NOCASE FROM rt0 WHERE (((0.16886580562517994) NOT BETWEEN (x'') AND ('2~>hJ')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((rt0.c5)LIKE(vt0.c0))) BETWEEN (CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c6 WHEN NULL THEN rt0.c3 END) AND (((vt0.c0)/(rt0.c3)))), DENSE_RANK() OVER (), GROUP_CONCAT(((((((((((((rt0.c5)AND(rt0.c2)))OR('-1560984820')))OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c1))) OVER ( ORDER BY ((HEX(DISTINCT rt0.c4)) BETWEEN (((((rt0.c0)AND(rt0.c4)))AND(rt0.c0))) AND (((((((((vt1.c0)AND(rt0.c4)))OR(rt0.c3)))OR(vt1.c0)))OR(rt0.c0))))  NULLS FIRST, rt0.c4 ASC  NULLS FIRST) FROM rt0, vt1, vt0 NOT INDEXED WHERE (CASE WHEN ((0.3005520795409031)>(NULL)) THEN ((0.8943871963732567) IS FALSE) END); -- 0ms;
SELECT DISTINCT (~ ((vt0.c0 IN (vt0.c0, rt0.c0, rt0.c6)))) FROM vt1, vt0;SELECT ALL (('9223372036854775807')==(((vt0.c0)<(rt0.c3)))) FROM vt1;SELECT DISTINCT 0.18136009973570777, rt0.c3, (CASE rt0.c0  WHEN rt0.c0 THEN NULL END IN (COUNT(0.6278021051307142))) FROM rt0; -- 1ms;
SELECT DISTINCT CASE CAST(rt0.c5 AS REAL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c6) AND (0x1)) THEN CAST(rt0.c6 AS INTEGER) END FROM rt0 WHERE (CAST(HEX(DISTINCT '-407549715') AS INTEGER)) GROUP BY x'' LIMIT 1617729328; -- 0ms;
SELECT ALL (rt0.c4 COLLATE NOCASE IN ()) FROM rt0 INTERSECT SELECT ALL (((rt0.c0 IN ()))%(((vt1.c0)<(rt0.c2)))) FROM vt1, vt0 WHERE ((((~ ('HEv'))) NOT BETWEEN (JULIANDAY('-899853357', x'', '')) AND (CASE WHEN 0.9716982920468289 THEN '839679463' END)));SELECT ((((rt0.c5))>((0xffffffffc42ba4b9))) IN ()), COUNT(((((vt0.c0)AND(rt0.c0)))AND(rt0.c4))) OVER (), AVG((NULL IN ())) OVER () FROM vt0, vt1, rt0 WHERE (((json_array(x'', 0.6856657767738059, x'f8d7', x'')) ISNULL));SELECT ALL ((rt0.c2 IN ()) IN ()) FROM rt0, vt1 INNER JOIN vt0 ON (((rt0.c4 IN ()))==(((((rt0.c3)OR(rt0.c5)))AND(rt0.c0)))) WHERE (((((('-cm审Ld'))>=((x'6460'))))<(((x'')>=(0xfffffffff2eae70a))))) LIMIT 661740389; -- 0ms;
SELECT ALL LAST_VALUE(((- (vt1.c0)) IN ())) OVER (), (~ (CAST(rt0.c0 AS INTEGER))), (((rt0.c1)) NOT BETWEEN ((rt0.c5 COLLATE BINARY)) AND ((CAST(rt0.c5 AS REAL)))) FROM vt1 WHERE ((((NULL, '1558404191', 0.3458985683639487)) NOT BETWEEN ((((x'')LIKE(NULL)), ((NULL)<=(0.08080052447285646)), '-644718157')) AND ((((((0.525002472199095)OR(1.87952434E8)))AND(-1780945668)), NULL COLLATE RTRIM, ((x'd49b') NOT BETWEEN (0.5665738713636777) AND (0.041195834751011184))))));SELECT ALL UNICODE((+ (vt1.c0))) FROM vt1, vt0; -- 0ms;
SELECT ((((((((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)))OR((((rt0.c0, rt0.c2, rt0.c2))<((rt0.c4, rt0.c2, rt0.c1))))))AND((+ (rt0.c0)))))OR(CASE rt0.c1  WHEN rt0.c3 THEN vt1.c0 END)))AND((vt1.c0 IN ()))))AND((rt0.c4 IN ()))))AND(rt0.c6)) FROM rt0, vt0 ORDER BY (((rt0.c4)) BETWEEN ((CAST(rt0.c2 AS TEXT))) AND (((rt0.c5 IN ())))) DESC  NULLS FIRST, (((((rt0.c1, rt0.c6, rt0.c0)) BETWEEN (('8Kncc', 0.7980342434301637, rt0.c6)) AND ((rt0.c6, rt0.c2, rt0.c1))))<<(((rt0.c5)-(vt0.c0)))) DESC, ((vt0.c0) BETWEEN (((((rt0.c1)OR('%7%	5DB')))OR(rt0.c0))) AND (((((((((vt0.c0)AND(0.9900155288528167)))OR(rt0.c4)))OR(rt0.c6)))AND(vt0.c0)))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((rt0.c3)||(rt0.c0)))%(((((((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c5)))OR(rt0.c5)))AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c3)))), (CAST(rt0.c0 AS TEXT) IN (CASE 0.5332645187465668  WHEN '' THEN rt0.c6 END, SUM(rt0.c5))), (((((rt0.c4))=(('')))) IS TRUE) FROM rt0, vt1 WHERE (LOWER((x'' IN (x'', x'')))); -- 0ms;
SELECT CASE WHEN MIN(vt0.c0) THEN (~ (vt0.c0)) ELSE ((rt0.c3)*(0.6263598908700858)) END, 0.9028755909887096, ('S	5K,&' IN ()) FROM vt1, vt0, rt0; -- 0ms;
SELECT ALL (NOT (((vt1.c0)-(vt0.c0)))) FROM vt0;SELECT CAST(rt0.c3 AS NUMERIC) FROM rt0 ORDER BY load_extension(0X7a78bf02), CAST(CAST(rt0.c4 AS INTEGER) AS NUMERIC) DESC;SELECT DISTINCT TOTAL((((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c5)))) FROM rt0, vt0 WHERE (((CASE WHEN 706639196 THEN 0.9137580523843897 END) BETWEEN (((0.9785760291112084) NOT BETWEEN (0.8171070667675265) AND ('233505572'))) AND (((-1.222521557E9) NOT NULL)))) ORDER BY ((((((rt0.c6)AND(x'')))OR(vt1.c0)))GLOB((~ (rt0.c5)))) DESC;SELECT CASE WHEN (- (rt0.c6)) THEN (NOT (rt0.c3)) ELSE (rt0.c1 IN (rt0.c1, rt0.c3)) END FROM vt0, rt0; -- 0ms;
SELECT (CAST(vt0.c0 AS INTEGER) IN ((NOT (rt0.c3)), (~ (rt0.c6)))) FROM vt1, rt0, vt0; -- 0ms;
SELECT ALL ((((rt0.c0)+(rt0.c1)))*(((((rt0.c1)OR(NULL)))OR(rt0.c3)))), '-#,<kE(%!', json_array(AVG(rt0.c6), ((vt1.c0)IS(rt0.c5))) FROM rt0, vt1 WHERE (x'' COLLATE BINARY); -- 0ms;
SELECT DISTINCT (CAST(NULL AS REAL) IN ()) FROM vt1, rt0 GROUP BY (((~ (rt0.c2)))>>((('Z	Zc%y{)ꙧ') NOT BETWEEN (rt0.c0) AND (vt0.c0)))) HAVING ((((CASE rt0.c6  WHEN NULL THEN rt0.c6 ELSE rt0.c1 END)OR(AVG(rt0.c3))))OR(((rt0.c1)>=(rt0.c2))));SELECT CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5)) END, CASE WHEN ((vt1.c0)IS NOT(rt0.c6)) THEN ((rt0.c4)|(rt0.c6)) WHEN (((rt0.c5))=((rt0.c1))) THEN ((rt0.c6) ISNULL) WHEN json_extract(rt0.c1, rt0.c3) THEN ((((rt0.c4)OR(vt1.c0)))AND(rt0.c3)) ELSE ((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END, (rt0.c5 IN ()) COLLATE BINARY FROM vt1, rt0 NOT INDEXED, vt0; -- 0ms;
SELECT ALL AVG(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END) OVER () FROM rt0, vt0 WHERE (((((((0.15065962364604102))=(('->m%a0\!')))))<=(((('Z') NOTNULL))))) ORDER BY CASE ((rt0.c5)>>(vt1.c0))  WHEN ((((rt0.c5)OR(rt0.c4)))AND(vt0.c0)) THEN ((0.041195834751011184)>=(rt0.c4)) WHEN (((0.3783857237598951, rt0.c4, rt0.c4))=((x'85a1', vt1.c0, rt0.c4))) THEN (rt0.c1 IN ()) WHEN rt0.c3 THEN (NOT (rt0.c1)) END ASC  NULLS FIRST;SELECT GROUP_CONCAT(((vt0.c0)<=(rt0.c3)) COLLATE BINARY) FROM rt0 WHERE ((- (CAST(37750161 AS INTEGER))));SELECT DISTINCT (x'' IN (TOTAL(rt0.c0), (rt0.c5 IN ()))) FROM rt0; -- 0ms;
SELECT ALL (+ (((rt0.c3) BETWEEN (rt0.c5) AND (vt1.c0)))) FROM vt1, vt0 WHERE (((((((x'')=(x'e91e')))AND((x'' IN ()))))OR((('0.3518068304859001') NOTNULL)))) ORDER BY json_array_length((((rt0.c4, NULL, rt0.c5)) BETWEEN ((rt0.c5, rt0.c1, rt0.c4)) AND ((vt0.c0, rt0.c2, vt0.c0))))  NULLS FIRST;SELECT DISTINCT NULLIF(DISTINCT (vt0.c0 IN ()), (rt0.c1 IN ())) FROM rt0, vt1 WHERE ((((((((((('-292617484')>>(NULL)))AND(CASE WHEN '1573213200' THEN '1723737921' END)))AND(((((((((((((NULL)OR(-1144713478)))OR('MBgS8D')))OR(-1222614821)))AND('\nDH<f')))OR(x'2bf8')))OR(NULL)))))OR((((('RE')AND(-17664997)))OR('')))))AND(CAST('-2147449776' AS INTEGER)))); -- 0ms;
SELECT HEX(DISTINCT CASE WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END) FROM vt1 WHERE (((((((((((x'')OR(0.2267947674020555)))AND(((NULL) IS TRUE))))OR(CASE '-578488739'  WHEN -1148780277 THEN x'' WHEN 0xffffffff9d87c4aa THEN 0.7179045023284937 WHEN 0Xffffffff9a4fa418 THEN NULL END)))OR((((x'')) BETWEEN ((NULL)) AND ((0.7067205768891308))))))AND(CASE WHEN '' THEN 'vK\r%' ELSE 9223372036854775807 END)));SELECT ALL (CASE vt0.c0  WHEN rt0.c6 THEN rt0.c2 WHEN 0.49655989491879715 THEN rt0.c0 WHEN rt0.c6 THEN rt0.c4 END IN ()), ((rt0.c4) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c5)), HEX(MIN(vt1.c0)) FROM vt1, rt0, vt0 WHERE (((CASE NULL  WHEN x'6a56' THEN 0.44465581277525923 END)GLOB(json_quote(0xffffffffdfb64b67)))); -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c4)))OR(vt1.c0)))), SUM((+ (rt0.c4))) OVER (), ((((rt0.c0)/(x''))) NOT BETWEEN (0X44919e2e) AND (((rt0.c1) IS FALSE))) FROM rt0 WHERE ((((((0.25696651190394215)) NOT BETWEEN ((-303581573)) AND ((0x6d9620c))))>(CAST(1040700601 AS REAL))));SELECT ALL CAST(rt0.c4 AS REAL) COLLATE NOCASE COLLATE NOCASE FROM vt1, vt0, rt0 WHERE ('1519850491'); -- 0ms;
SELECT DISTINCT 0.37038675971964563 FROM rt0, vt0, vt1 GROUP BY CHANGES(); -- 0ms;
SELECT DISTINCT rt0.c5 COLLATE NOCASE FROM vt1 WHERE (UPPER(((x'')IS NOT('*w')))) ORDER BY COALESCE(((rt0.c2)<(rt0.c0)), ((rt0.c3)|(vt0.c0)));SELECT ((CAST(rt0.c0 AS TEXT)) BETWEEN (rt0.c5) AND (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c2 END)), (((((((rt0.c3)OR(rt0.c5)))OR(rt0.c1))))=((((vt0.c0)OR('0.8618877996514271'))))), rt0.c4 FROM vt1, rt0 WHERE (((((NULL)=(NULL))) NOT NULL));SELECT DISTINCT ((UNICODE(rt0.c6)) NOT NULL) FROM rt0; -- 0ms;
SELECT ALL AVG((NOT (x''))) OVER (), (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))||(CAST(-1.036915142E9 AS INTEGER))), rt0.c3 FROM vt0, rt0, vt1 WHERE ((((x'')) NOT BETWEEN ((((((((((-6.48537233E8)OR(x'')))OR('-0.0')))OR('-694610059')))OR(x'5b1c')))) AND ((((0.6190903328246775)=(x'')))))); -- 0ms;
SELECT DISTINCT (((((rt0.c6)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))-((((rt0.c6)) BETWEEN ((0.7225272928244715)) AND ((vt1.c0))))), ABS(DISTINCT GROUP_CONCAT(vt0.c0)), CAST((NOT (rt0.c3)) AS BLOB) FROM vt1 WHERE (((0.37716083658942057) BETWEEN ('569409272') AND (x'')) COLLATE BINARY);SELECT NTH_VALUE(((((rt0.c6)OR(rt0.c5)))==((- (vt0.c0)))), TYPEOF(DISTINCT (((vt0.c0))<=((rt0.c1))))) OVER () FROM rt0, vt0 WHERE (((CASE 227869661  WHEN -155450315 THEN '￿>菕9o3?/' END) NOT BETWEEN ((~ (0.6832108852286806))) AND ((0.5237689376772192 IN ())))); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt0, vt1; -- 0ms;
SELECT CHANGES() FROM vt0, rt0, vt1 WHERE ((((((((('')AND(((0.13915141178289214) BETWEEN (NULL) AND (-3.91485911E8)))))OR(CASE WHEN 0xde97f20 THEN '1727814218' END)))AND(CAST(x'45a3' AS BLOB))))OR(((NULL) BETWEEN (NULL) AND ('-247758272'))))); -- 0ms;
SELECT ((((((rt0.c5) NOTNULL))OR('2q')))AND(((rt0.c5)AND(vt0.c0)))) FROM vt0 WHERE ((0.3654118178778176 IN ()) COLLATE RTRIM);SELECT DISTINCT rt0.c2 FROM vt1 WHERE (((x'24d8a855' COLLATE BINARY)<(((0Xffffffff8a93fc5a)<=('-581369892'))))) GROUP BY CASE WHEN ((vt1.c0)<(rt0.c3)) THEN ((rt0.c5) NOT NULL) ELSE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) END HAVING ((rt0.c5) IS TRUE);SELECT DISTINCT ((((vt0.c0) NOT NULL)) IS TRUE) FROM vt1, rt0;SELECT ALL CUME_DIST() OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (NOT (AVG(rt0.c1))), (((- (-1.222521557E9)))IS((('z!Q.c') ISNULL))), CAST(((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c1)) AS INTEGER) FROM vt0, vt1;SELECT '-1949821358', rt0.c2, CASE MAX(vt0.c0)  WHEN 0.4864114608016621 THEN '-355597648' END FROM vt0, vt1 WHERE (((CASE WHEN x'' THEN x'' ELSE '-' END)*((('1787105824')/(2.27869661E8)))));SELECT DISTINCT (('0.3054153739549933') ISNULL) FROM vt0, rt0 WHERE (((((((((CASE 569409272  WHEN 2.100010052E9 THEN x'' END)AND(((0.5088538173723721)&(0.9807964297415153)))))OR(((x'4377') NOT BETWEEN (NULL) AND (0Xfffffffffcd10d10)))))OR(((0.9636988246391773)+(x'')))))OR(((0.0801024031535632) IS TRUE)))) LIMIT 1611611523; -- 0ms;
SELECT AVG(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c5 END) FROM vt1, vt0, rt0 WHERE (''); -- 1ms;
SELECT ALL NULL FROM vt0, vt1 WHERE (CASE WHEN ((('-2117680118')) NOT BETWEEN ((0Xffffffffb6d0bac6)) AND (('-734885885'))) THEN ((0.7042516931892843) NOT NULL) END); -- 0ms;
SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE) FROM vt0, rt0 LIMIT 569409272; -- 0ms;
SELECT DISTINCT LEAD((((((((vt0.c0))>=((vt0.c0))))OR((+ (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)), CASE WHEN (((vt0.c0))>=((''))) THEN vt0.c0 ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END, (vt0.c0 COLLATE NOCASE IN (vt0.c0))) OVER (), TOTAL(LIKE(rt0.c5, rt0.c1, '-')) OVER (), MIN(NULL) FROM vt0 WHERE ((~ (CASE WHEN -2.117680118E9 THEN '' ELSE x'420c' END))) GROUP BY (CASE rt0.c6  WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END IN ());SELECT DISTINCT COUNT(*) FROM rt0 ORDER BY (((rt0.c4)) NOT BETWEEN ((((((vt0.c0)OR(rt0.c4)))AND(rt0.c1)))) AND ((((((rt0.c2)AND(rt0.c6)))OR(rt0.c3)))))  NULLS FIRST;SELECT DISTINCT CASE WHEN ((((vt0.c0)AND(0.9077635172650712)))OR('Xvn(KP Tꅚ')) THEN ((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c1)) END FROM vt1, rt0 WHERE (HEX((((x'', x'', 0X528572ad)) BETWEEN ((1.535235917E9, '-2038890357', 0.2893867248938843)) AND ((0.4943299594466577, x'', 0.3031180344879174)))));SELECT (CAST(vt1.c0 AS REAL) IN (GROUP_CONCAT(rt0.c2), ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c5)))) FROM vt1 UNION SELECT DISTINCT UNLIKELY(((rt0.c4)<<(rt0.c1))) FROM vt0, vt1, rt0;SELECT DISTINCT ((ROUND(vt1.c0, vt1.c0)) NOTNULL), (('')AND(SUBSTR(rt0.c6, rt0.c3))), rt0.c6 FROM vt1, rt0; -- 1ms;
SELECT ALL ((LIKELY(DISTINCT vt0.c0)) NOTNULL), MAX(COUNT((((NULL, vt0.c0, rt0.c4))<=((rt0.c1, rt0.c6, vt0.c0))))), COALESCE(DISTINCT ((vt0.c0)=('w䊘/2d~UB')), CASE WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END) FROM vt0, vt1 WHERE (((((((((((((((x'2dba')OR(x'')))OR(1046926302)))OR('<FqyHbi')))OR(0.38310848333467773)))OR(x'')))OR(NULL)))<=(((0xffffffff8bc81652)IS(NULL))))) GROUP BY (NOT (((vt1.c0)>=(rt0.c6))));SELECT DISTINCT ((((vt1.c0)AND(json_type(rt0.c1))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt0, vt1, vt0 WHERE (CAST(((0.7080724920515301)<(-8.32375211E8)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((0.022224784551653554) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)) FROM rt0 NOT INDEXED, vt1 WHERE ((+ (LOWER(DISTINCT x'd548')))); -- 0ms;
SELECT ALL (rt0.c2 IN (CASE rt0.c4  WHEN rt0.c6 THEN rt0.c4 END)), ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c6)))*(((rt0.c0)||(rt0.c5)))), CAST(rt0.c2 AS BLOB) FROM rt0, vt1 WHERE (((('s+|{' IN ()))!=(((x'c78f')&('-1170222778'))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)))AND(CAST(x'' AS INTEGER))))OR(COUNT(rt0.c4))), (((CAST(rt0.c6 AS TEXT)))=(((((rt0.c6, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c6, rt0.c3, rt0.c2)) AND ((rt0.c6, rt0.c5, vt1.c0)))))), (((rt0.c6))<=((rt0.c6))) COLLATE BINARY FROM rt0, vt1 WHERE (TIME((((('''7+]][')OR(0.7765227062762641)))OR(1.500628798E9)), ((0x779df88b) BETWEEN (-534698022) AND ('伤隹')), (('-812745562')IS(-1.484017502E9)))); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE (((((- (rt0.c4)))OR((NOT (rt0.c4)))))OR(CAST(rt0.c1 AS NUMERIC)))) OVER () FROM vt1 WHERE ((((x'', NULL, 0x2d7870c8)) BETWEEN ((972981274, 0.4002757905854727, NULL)) AND (('f', NULL, x''))) COLLATE RTRIM COLLATE BINARY);SELECT ALL TOTAL((((vt0.c0, rt0.c6, vt0.c0))<((rt0.c6, 0.08848859146666577, rt0.c0)))) FROM vt1, rt0 WHERE ((((('-1138588624')<<(x'1183')))-(((((((((NULL)OR('_g0晖o')))AND('-219486454')))AND(x'')))OR('7boE-?b')))));SELECT GROUP_CONCAT((- (vt0.c0))) OVER (), '1673778003', CAST(((((vt1.c0)AND(rt0.c3)))OR(rt0.c2)) AS NUMERIC) FROM rt0, vt0, vt1 WHERE (((((((((((-3.91485911E8)||('')))AND(((-1379696628) NOT BETWEEN (NULL) AND (0Xffffffffbf10c97d)))))AND(CASE WHEN '-292617484' THEN '' ELSE 1627449000 END)))AND((((x''))<=((0.8065511785145074))))))OR(((NULL)||(x'ffe7'))))); -- 0ms;
SELECT DISTINCT x'e14a' FROM rt0, vt1, vt0 WHERE (NULLIF(((((((((((((((((0Xffffffffb840284e)AND('')))AND(NULL)))OR(0.38766473915875865)))AND(0.7785607990719293)))OR('J鳤')))AND('gc>UDY')))AND('-1883576038')))AND(0.18953147258431724)), ('0.030139636836011174' IN ()))); -- 0ms;
SELECT DISTINCT SUM((((vt0.c0, vt1.c0, rt0.c3))<>((rt0.c1, rt0.c6, rt0.c0)))) FILTER(WHERE rt0.c6) OVER () FROM rt0, vt0, vt1 WHERE (((('+P', NULL, NULL)) BETWEEN ((CASE WHEN -2012175672 THEN '' END, CAST(x'' AS REAL), (('-425681692') BETWEEN (NULL) AND ('1845106318')))) AND ((((-1.397743055E9) NOT BETWEEN (x'') AND (0.8618877996514271)), 0.5555522289312802 COLLATE RTRIM, (('C瘷')>=(x'')))))); -- 0ms;
SELECT ALL ((rt0.c3)==(CAST(rt0.c2 AS NUMERIC))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT rt0.c1, ((CASE rt0.c6  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c6 END) IS FALSE), CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END AS BLOB), ((((((((rt0.c5)OR(rt0.c3)))OR(rt0.c1)))OR(-874589032 COLLATE NOCASE)))OR((((vt1.c0))!=((rt0.c4))))), ((((((((rt0.c6 COLLATE BINARY)AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)))))OR(CASE WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c6 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 END)))AND(vt1.c0)))AND(vt0.c0 COLLATE BINARY)), 0.7704304380525591, '' FROM vt0 WHERE (TRIM(CASE x''  WHEN x'7784' THEN '519149826' ELSE '' END));SELECT (NOT ((((rt0.c2))!=((vt1.c0))))), 0xffffffffee8f02f4, CAST(vt1.c0 AS REAL) FROM vt0 WHERE ('>,⦥\nsl');SELECT SUM(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))), CAST(rt0.c3 AS TEXT) COLLATE BINARY, rt0.c2 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3)>=(vt0.c0))))>=(((- (vt0.c0))))) FROM vt0, rt0, vt1 WHERE ((('1393136854' COLLATE BINARY)>=((('c(/') NOT BETWEEN (-1527519077) AND (NULL))))) GROUP BY ((((rt0.c2)=(rt0.c5)))-(-1104074793)) HAVING CASE ((((rt0.c0)AND(rt0.c5)))AND(rt0.c2))  WHEN CASE rt0.c1  WHEN rt0.c6 THEN vt0.c0 WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 END THEN CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END WHEN CAST(rt0.c6 AS INTEGER) THEN ((((rt0.c2)OR(rt0.c5)))OR(rt0.c0)) WHEN COUNT(rt0.c1) THEN rt0.c6 COLLATE RTRIM ELSE COUNT(*) END ORDER BY (~ (CAST(rt0.c4 AS REAL))); -- 1ms;
SELECT DISTINCT NTILE(x'') OVER (), (- (CAST(rt0.c1 AS INTEGER))), ((((((((rt0.c0)AND('P')))AND(CAST(vt0.c0 AS NUMERIC))))AND(MAX(rt0.c6))))AND(SUM(rt0.c4))) FROM vt0 WHERE ((((+ (x''))) BETWEEN (((x'd361') IS FALSE)) AND ((~ (NULL)))));SELECT DISTINCT CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM vt1, rt0 WHERE (CAST((+ ('-256523669')) AS INTEGER)); -- 0ms;
SELECT DISTINCT (- ((((rt0.c3, rt0.c3, rt0.c5))>((rt0.c5, rt0.c6, rt0.c2))))) FROM vt0 WHERE (NULL) GROUP BY ((((CASE -2138455670  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c6 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)OR(json_extract(rt0.c6, vt1.c0))))OR('1828251634')), ((((rt0.c6)LIKE(rt0.c1))) BETWEEN (((rt0.c4)/(NULL))) AND ((- (rt0.c6)))), (+ (((vt1.c0) BETWEEN (rt0.c5) AND (rt0.c5))));SELECT DISTINCT ((((rt0.c5)AND(rt0.c0)))*(CAST(rt0.c2 AS INTEGER))), COUNT(((vt1.c0)IS NOT(rt0.c6))) OVER (), (+ ((rt0.c2 IN ()))) FROM vt0 WHERE ('8鸜%vgU');SELECT ALL ((((rt0.c1) NOT NULL))%(((rt0.c3)+(rt0.c0)))), ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOT BETWEEN (((rt0.c4) BETWEEN (rt0.c4) AND ('3456灂'))) AND (0.10197833190247985 COLLATE BINARY)), ((((rt0.c4))<>((rt0.c3))) IN (((rt0.c2)IS(rt0.c1)))), COUNT((+ (x'41e39d50'))) OVER (), ((COALESCE(vt1.c0, rt0.c0, rt0.c2, rt0.c6))>(((rt0.c1)>>(rt0.c5)))) FROM vt1 WHERE (CAST(CASE WHEN '1822886998' THEN 'RLS[zA' ELSE '' END AS TEXT)) GROUP BY ((CASE WHEN rt0.c0 THEN vt0.c0 END) BETWEEN (NULL) AND (rt0.c5 COLLATE NOCASE)) HAVING MIN(HEX(rt0.c3)) LIMIT -1910310730 OFFSET -1957055209;SELECT ALL ((((rt0.c0 IN ())))=(((((rt0.c5, rt0.c5, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c6, vt0.c0)) AND ((vt1.c0, '*딗Nk|r\', vt0.c0)))))) FROM vt0 WHERE (((NULL)-(1673778003)) COLLATE NOCASE) GROUP BY STRFTIME((+ (rt0.c2)), (rt0.c2 IN (rt0.c3)), rt0.c6 COLLATE BINARY), rt0.c5, rt0.c3, (((rt0.c0 IN (vt1.c0)))||(((((vt1.c0)AND(rt0.c5)))OR(rt0.c3)))), (((rt0.c2 IN ())) ISNULL);SELECT DISTINCT LAST_VALUE(NULL) OVER () FROM rt0, vt1, vt0; -- 0ms;
SELECT ALL CASE (NOT (rt0.c1))  WHEN ((vt0.c0)>(vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) ELSE CASE WHEN rt0.c4 THEN rt0.c3 WHEN 0Xffffffffb3a58d12 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END END FROM rt0, vt1 WHERE (((LIKELIHOOD(NULL, 0.67477760765018)) ISNULL)) GROUP BY (CASE WHEN x'' THEN rt0.c6 ELSE rt0.c1 END IN ()) HAVING CAST(((rt0.c0) IS TRUE) AS REAL);SELECT ALL '', ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c6 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)>(CAST(rt0.c1 AS NUMERIC))), CAST(((rt0.c6)-(vt1.c0)) AS INTEGER) FROM rt0;SELECT ALL (((+ (rt0.c4)))>=(((rt0.c0) IS FALSE))) FROM vt0 WHERE (0.87905493049301) GROUP BY ((x'')!=(rt0.c4)), '' COLLATE BINARY, CAST(CAST(rt0.c0 AS NUMERIC) AS BLOB);SELECT DENSE_RANK() OVER (), NTH_VALUE(((CAST(rt0.c3 AS INTEGER))>=((((rt0.c4, NULL, rt0.c6)) BETWEEN ((rt0.c3, rt0.c1, rt0.c5)) AND ((rt0.c0, rt0.c5, rt0.c1))))), 'T|m+') OVER (), TOTAL(rt0.c0) OVER () FROM rt0;SELECT ALL ((((vt0.c0)<(rt0.c6))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))) AND (((rt0.c3) IS TRUE))) FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt1, vt0 WHERE ((((((NULL)IS('96805627'))))<((CASE WHEN x'' THEN x'4944' ELSE 1.5732132E9 END)))) GROUP BY LIKELIHOOD(DISTINCT ((((rt0.c3)AND(0.08093968619838932)))AND(rt0.c4)), 0.938340559650273) HAVING ((((((rt0.c3) BETWEEN (0.3742067563134772) AND (rt0.c2)))AND((NOT (rt0.c6)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5))));SELECT DISTINCT ((((((vt0.c0)AND(rt0.c5)))OR(rt0.c5)))>>(CAST(vt0.c0 AS REAL))) FROM vt1, rt0 WHERE ((+ (CASE WHEN '0.2539110489841844' THEN NULL ELSE '-320278610' END))) ORDER BY CAST(((rt0.c4)=(rt0.c3)) AS BLOB) ASC;SELECT DISTINCT (((((rt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))OR(0.6458071709537417)) FROM rt0, vt1 GROUP BY (rt0.c0 IN (((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c6))))) LIMIT 1151505025 OFFSET -1222521557;SELECT DISTINCT CASE SQLITE_COMPILEOPTION_USED(NULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE 'MLc''''|gli' END THEN rt0.c6 COLLATE NOCASE END FROM vt0, rt0, vt1 WHERE (CAST((~ ('-1889065387')) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c6)OR(rt0.c5)))AND(rt0.c0)))OR(rt0.c6)))OR(vt1.c0)))IS(LIKELY(rt0.c4))) FROM vt0, rt0, vt1 GROUP BY CASE UPPER(rt0.c2)  WHEN ((rt0.c1)=(rt0.c3)) THEN json_insert(rt0.c3, rt0.c6, vt1.c0) WHEN LTRIM(rt0.c6, rt0.c1) THEN ((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c5)) WHEN ((rt0.c5) NOT NULL) THEN ((vt0.c0) ISNULL) ELSE ((rt0.c2) NOT NULL) END, rt0.c4, CASE WHEN ((rt0.c2) IS FALSE) THEN ((vt0.c0)%(rt0.c1)) ELSE (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) END; -- 1ms;
SELECT ALL ((((((rt0.c5)OR(rt0.c4)))AND(vt0.c0)))&((rt0.c3 IN ()))), IFNULL(DISTINCT ((vt0.c0)|(rt0.c0)), '76O_'), (((rt0.c4)) BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND (((rt0.c0 IN ())))) FROM vt0, rt0 ORDER BY ((TRIM(vt1.c0, x''))-((rt0.c5 IN (rt0.c4))))  NULLS FIRST;SELECT DISTINCT AVG(TRIM(DISTINCT rt0.c0, vt1.c0)) OVER () FROM vt1, vt0, rt0 WHERE (((((2.120640747E9)>=(0xffffffffb72060db))) BETWEEN (LIKE(0.16531339858720362, '[_', '-')) AND (0.3054153739549933 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT AVG(((((rt0.c3)AND(rt0.c4)))OR(x'4184'))) OVER () FROM rt0; -- 0ms;
SELECT ALL MIN(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END) COLLATE NOCASE FROM rt0, vt0;SELECT ((((((((((((((((rt0.c3 COLLATE BINARY)OR(((rt0.c6) IS TRUE))))AND(((rt0.c1) IS TRUE))))OR(rt0.c0)))OR(MAX(rt0.c0))))OR(((vt1.c0) NOTNULL))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c6)))))OR(COUNT(rt0.c1))) FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE BINARY WHERE (TRIM(((NULL) BETWEEN (x'') AND ('-1543512655')), (0.8740857147659542 IN ())));SELECT DISTINCT rt0.c5 FROM vt0 WHERE (((0.8331570568892357) IS FALSE) COLLATE RTRIM);SELECT ALL ((CASE WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c3 END)>>((((rt0.c3, rt0.c3, rt0.c1, rt0.c2, vt1.c0, vt1.c0, rt0.c1))>((rt0.c5, rt0.c1, rt0.c5, rt0.c4, rt0.c3, rt0.c2, rt0.c2))))), ((MIN(vt0.c0))&(((rt0.c4) NOTNULL))), ((((((((rt0.c2)OR(((0.17399169800651182) IS TRUE))))OR((NOT (rt0.c5)))))AND(SQLITE_SOURCE_ID())))AND(CAST(rt0.c5 AS NUMERIC))) FROM vt1, rt0, vt0; -- 1ms;
SELECT ALL (((vt1.c0)) NOT BETWEEN ((((vt1.c0)!=(vt0.c0)))) AND ((((rt0.c4) IS TRUE)))) FROM vt1, vt0, rt0; -- 0ms;
SELECT CAST(CASE WHEN rt0.c2 THEN rt0.c6 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 'Hk' WHEN rt0.c1 THEN rt0.c6 END AS TEXT), ('-219486454' IN ()), ((0.438881761880176)AND(((rt0.c5) BETWEEN (rt0.c3) AND (vt0.c0)))) FROM vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c5)AND(vt1.c0)))AND(rt0.c4)) COLLATE BINARY FROM rt0 WHERE (((x'' COLLATE RTRIM) NOT BETWEEN ('-1811927972' COLLATE BINARY) AND (CAST(x'5a8a' AS NUMERIC)))) GROUP BY CASE WHEN rt0.c2 COLLATE NOCASE THEN CAST(vt0.c0 AS INTEGER) ELSE ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c5)) END;SELECT DISTINCT rt0.c2 FROM rt0 NOT INDEXED, vt0 WHERE (CASE CASE x''  WHEN '(' THEN x'0f5e' WHEN '1921768935' THEN -1889065387 WHEN 0.20250140125939065 THEN -1889065387 END  WHEN json_array(0xffffffff9a973bd9, 0xffffffff9747de07, NULL, '4er?[?') THEN ((0xffffffffa3c6cedb) BETWEEN ('|gKT5Lh') AND (-1.594155964E9)) ELSE (((((((('')AND(x'6f43')))OR('-526323155')))AND(NULL)))AND('+')) END); -- 0ms;
SELECT CAST((('-1484017502') ISNULL) AS REAL) FROM rt0, vt0 WHERE (((CAST(0.5237689376772192 AS INTEGER))+(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN TIME(rt0.c6, rt0.c0, rt0.c6) THEN ((rt0.c0)LIKE(rt0.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN rt0.c3 WHEN CASE rt0.c4  WHEN NULL THEN rt0.c1 WHEN rt0.c5 THEN vt1.c0 WHEN rt0.c6 THEN '2100010052' END THEN MIN('1903550408') END FROM rt0, vt1, vt0 WHERE ((CASE WHEN 0.38777362636830337 THEN '1970874667' END IN ((('-1957055209') BETWEEN (x'7c34b5cb') AND ('Gj3f)qa')), CAST('640361599' AS REAL)))); -- 0ms;
SELECT MAX(((rt0.c1)||(vt0.c0))) FROM rt0, vt1 ORDER BY (((rt0.c6)<>(rt0.c2)) IN ());SELECT DISTINCT rt0.c6 FROM vt0, vt1, rt0; -- 0ms;
SELECT DISTINCT COUNT((((rt0.c2, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c6, vt1.c0, rt0.c3)) AND ((vt1.c0, vt0.c0, '\n<\r')))) OVER () FROM vt1, rt0;SELECT DISTINCT ((CASE WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END)>=((rt0.c0 IN ()))) FROM vt0, vt1 WHERE ((((((NULL))==((NULL)))) NOT NULL));SELECT ((CAST(rt0.c4 AS BLOB))||((x'' IN (rt0.c2)))), (((rt0.c5, rt0.c6, rt0.c4)) NOT BETWEEN ((rt0.c0, vt1.c0, rt0.c5)) AND ((vt1.c0, rt0.c6, rt0.c4))) COLLATE BINARY, -4.82777387E8 FROM vt0, rt0, vt1; -- 0ms;
SELECT ALL CHAR(CAST(rt0.c3 AS INTEGER)) FROM vt1, rt0, vt0 WHERE (((NOT (0.9991447495999287)) IN ())); -- 0ms;
SELECT STRFTIME((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c2))), ((((((((rt0.c2)OR(rt0.c4)))AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c6)), (((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))) FROM vt1;SELECT DISTINCT (+ (CASE WHEN rt0.c6 THEN rt0.c3 WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN '}#' ELSE rt0.c2 END)) FROM vt0;SELECT ((((rt0.c3)||(vt1.c0))) BETWEEN (((vt1.c0)GLOB(rt0.c0))) AND (((((rt0.c2)AND(rt0.c1)))OR(rt0.c5)))), rt0.c0, x'16bb' FROM vt0, vt1 WHERE (((CAST(-58073921 AS BLOB)) ISNULL));SELECT DISTINCT CAST((((vt1.c0))<((x'f9df'))) AS INTEGER) FROM rt0, vt0, vt1 WHERE (UNICODE((NULL IN (750317257)))); -- 0ms;
SELECT '-908527242' FROM vt0, vt1 WHERE (((((((0Xffffffff8b59b517)<=(x'')))AND((NOT (0.7032519255389013)))))AND((('-1144713478')>=('㥇y'))))); -- 0ms;
SELECT ('-1609386334' IN ()), CHANGES(), (((((rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c1))=((rt0.c5, rt0.c5, vt0.c0, rt0.c3, rt0.c3))))*('' COLLATE RTRIM)) FROM vt1, rt0, vt0 WHERE (((CASE 0.6856661286396882  WHEN '' THEN '1771910554' ELSE NULL END) NOT BETWEEN (CASE x'072141db'  WHEN 1.520946142E9 THEN -1.484017502E9 END) AND (((('M\''')) NOT BETWEEN (('')) AND (('')))))); -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, -8.12745562E8, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0)) AND ((vt0.c0, rt0.c0, 0.6516049319067576, rt0.c5, rt0.c5)))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c6))) AND (rt0.c6)) FROM rt0 LIMIT -673833434 OFFSET 1666300966;SELECT DISTINCT CAST(((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c2)) AS INTEGER) FROM vt0, rt0, vt1 LIMIT 262759021 OFFSET 177873340; -- 0ms;
SELECT DISTINCT rt0.c2, (((((((rt0.c4, rt0.c5, rt0.c0))>((rt0.c5, '1340697475', rt0.c5))))AND(TRIM(vt1.c0, vt1.c0))))AND(((rt0.c5)<(rt0.c3)))), (((vt1.c0)) BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((CASE 0.11002777861894908  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN '-1363759036' WHEN rt0.c5 THEN x'' ELSE rt0.c4 END))) FROM vt0 WHERE ((('' COLLATE BINARY)||(((0.7014415841087689)=(NULL)))));SELECT DISTINCT (((rt0.c1, 0Xffffffff8b59b517, rt0.c2)) NOT BETWEEN ((rt0.c0, json_insert(rt0.c6, rt0.c5, rt0.c2), 0.12592747950862104)) AND (('1837585507', ((((rt0.c5)OR(rt0.c3)))OR(rt0.c0)), (('569409272')<>(rt0.c4))))) FROM vt1, rt0, vt0 WHERE ((CAST(x'81d7' AS INTEGER) IN (x'', TRIM(DISTINCT '')))); -- 0ms;
SELECT ALL ((CASE x''  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END) NOT NULL), COUNT(CAST(rt0.c5 AS NUMERIC)) OVER (), CAST(((rt0.c2)|(rt0.c4)) AS REAL) FROM vt1, rt0, vt0 WHERE (((NULL)IS NOT(x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT LAG(vt0.c0, vt0.c0, ((((((vt0.c0) NOT BETWEEN ('-1027561156') AND (vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)>>(vt0.c0))))) OVER () FROM vt0 WHERE ((0.9757952691467757 COLLATE BINARY IN ())) LIMIT 195972611; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) COLLATE NOCASE, ((((((rt0.c6)AND(rt0.c6)))OR(rt0.c0)))<=((~ (rt0.c5)))), ROW_NUMBER() OVER () FROM vt1, rt0, vt0 WHERE ((~ ((0.6135174133899413 IN ())))); -- 0ms;
SELECT CHANGES(), CAST(((vt0.c0)!=('0.030139636836011174')) AS BLOB), LAST_VALUE(0.3539388065175718) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM rt0, vt1 WHERE (((1.201256572E9)IS((((NULL))==((NULL)))))) GROUP BY (((((rt0.c2))>=((rt0.c1))))AND(((rt0.c4) NOTNULL))), ((((rt0.c0)OR(rt0.c2)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE '-1397743055' END)), ((rt0.c5) BETWEEN (rt0.c6) AND (rt0.c5)) COLLATE NOCASE ORDER BY rt0.c1;SELECT DISTINCT (((((rt0.c3))<>((rt0.c5)))) BETWEEN ((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (((rt0.c6) IS TRUE))), FIRST_VALUE(UNLIKELY((+ (rt0.c4)))) OVER (), rt0.c3 FROM rt0, vt0, vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c4) NOT NULL)), CAST((('/_\r>k&?B5') ISNULL) AS REAL), rt0.c2 FROM vt0, rt0, vt1 WHERE ((((-530385173)&(0.45603243688333683)) IN ((NULL IN ())))); -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c0 THEN rt0.c5 ELSE vt1.c0 END IN ()), CASE WHEN CASE vt1.c0  WHEN rt0.c2 THEN '1170514769' WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 END THEN ((rt0.c3)||(vt0.c0)) END, MIN(GROUP_CONCAT(0.7259990664278856), ((rt0.c5)>=(rt0.c3))) FROM rt0, vt1;SELECT DISTINCT ((((0X250ff6d1)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0))) IN ()) FROM vt1 WHERE (CASE CAST(0X4799b87c AS NUMERIC)  WHEN ((-263701802) BETWEEN (NULL) AND (x'')) THEN (('*K篒윾Pqf\') NOT NULL) ELSE ((((x'c7de')AND('{}')))OR('-1222614821')) END); -- 0ms;
SELECT ((CAST(rt0.c0 AS REAL)) BETWEEN ((rt0.c3 IN (NULL))) AND (RTRIM(rt0.c6))) FROM vt0, vt1 WHERE ('');SELECT ALL json_valid(((rt0.c4)/(rt0.c6))) FROM rt0 ORDER BY CAST(rt0.c2 COLLATE BINARY AS BLOB), INSTR(((rt0.c1)OR(rt0.c4)), CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 END) ASC, ((IFNULL(DISTINCT rt0.c0, rt0.c5))&(rt0.c6)) ASC; -- 0ms;
SELECT (- (MAX(rt0.c5))) FROM vt1, rt0, vt0 WHERE ('1280327672'); -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN (((NOT (rt0.c3)))) AND (('1727637869'))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c6 ELSE rt0.c3 END) BETWEEN ((+ (rt0.c1))) AND ((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) FROM vt0, rt0, vt1 GROUP BY ((((0.6262249590601473)>=(rt0.c3)))AND(ABS(rt0.c6))), 1787105824, '0.8634487231210807';SELECT ALL CAST(TYPEOF(DISTINCT rt0.c1) AS INTEGER) FROM vt1, vt0, rt0 WHERE ((NOT (CAST('&D[3z' AS BLOB)))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE (CASE (+ ('S%'))  WHEN (('-475417808') BETWEEN (x'') AND (x'39b9')) THEN CASE NULL  WHEN NULL THEN '3_8+u\n' WHEN NULL THEN x'' WHEN x'' THEN 0.03053661453205847 END ELSE ('0.38391922560412683' IN ()) END); -- 0ms;
SELECT vt1.c0 FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CASE ((rt0.c6) NOT BETWEEN (rt0.c6) AND (rt0.c1))  WHEN (vt1.c0 IN ()) THEN 'V[^q1h' WHEN ((rt0.c1)!=(rt0.c1)) THEN ((rt0.c1)/(vt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) THEN TOTAL(rt0.c5) ELSE AVG(0X53101250) END, ((((rt0.c6) NOT BETWEEN (rt0.c6) AND (rt0.c5)))LIKE(((vt0.c0) ISNULL))), COUNT(*), COUNT(*), MAX(TRIM(rt0.c4)) FROM vt1, rt0;SELECT (((rt0.c2)||(rt0.c3)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c4)))LIKE(MIN('1260495689'))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))), CAST(AVG(rt0.c1) AS REAL), TRIM(COUNT(rt0.c6)), CASE (((rt0.c0))<>((rt0.c3)))  WHEN CAST('1754:-199972190839962380T716--8552192533107866739 706T\rN' AS TEXT) THEN LIKELIHOOD(rt0.c3, 0.1988724797142668) ELSE ((rt0.c0)*(vt0.c0)) END, ((((rt0.c6) NOT BETWEEN (vt1.c0) AND (rt0.c6))) IS TRUE) FROM vt0, vt1, rt0 WHERE ((~ (((0.7418581735673245) BETWEEN (0.8912837644197243) AND (1.682405064E9))))); -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN json_extract(rt0.c3, rt0.c1, rt0.c6, rt0.c5) THEN MIN(rt0.c4) END FROM vt0, rt0, vt1 WHERE (CAST(CASE NULL  WHEN 0.6800977963573994 THEN 0.5909506459690969 END AS INTEGER)); -- 0ms;
SELECT DISTINCT '', (((((+ (rt0.c6)))OR((vt0.c0 IN ()))))AND((~ (rt0.c0)))), MAX(CAST(rt0.c4 AS REAL)), CAST(IFNULL(rt0.c2, rt0.c6) AS NUMERIC), vt1.c0 FROM rt0, vt1, vt0; -- 0ms;
SELECT ALL NULL, CAST((- (rt0.c6)) AS BLOB), CUME_DIST() OVER () FROM rt0; -- 0ms;
SELECT ALL ((((((rt0.c5) NOTNULL))AND('1496897901')))AND(((((vt1.c0)OR(vt0.c0)))AND(rt0.c5)))) FROM vt1 GROUP BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((((((((rt0.c6)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2))) AND (((rt0.c1) IS FALSE))) HAVING CAST(vt0.c0 AS REAL);SELECT (AVG(rt0.c2) IN ()) FROM vt1, rt0, vt0 LIMIT 1738420946 OFFSET 1903550408; -- 0ms;
SELECT DISTINCT ((((((vt1.c0, rt0.c1, rt0.c1, rt0.c6, vt1.c0))<=((0.6427777665027038, vt0.c0, rt0.c3, vt1.c0, rt0.c5))), (~ (rt0.c4)), rt0.c6 COLLATE NOCASE))<>((((rt0.c0)>>(rt0.c3)), rt0.c3 COLLATE RTRIM, (~ (vt0.c0))))) FROM vt0 FULL OUTER JOIN vt1 ON CASE ((((rt0.c4)OR(rt0.c5)))AND(vt1.c0))  WHEN LOWER(rt0.c4) THEN (vt0.c0 IN (rt0.c5)) ELSE NULL COLLATE RTRIM END GROUP BY (((((rt0.c3)) BETWEEN ((1156240943)) AND ((vt1.c0)))) BETWEEN (CASE WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END) AND (rt0.c4 COLLATE BINARY)), CAST((NOT ('-482777387')) AS TEXT), CASE ((rt0.c4)AND(rt0.c2))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c6) AND (vt0.c0)) THEN ((rt0.c4)|(rt0.c5)) ELSE CAST(rt0.c6 AS BLOB) END HAVING TOTAL(COUNT(*));SELECT DISTINCT ((MAX(rt0.c6))+(0.7379076818711358)) FROM rt0, vt1 WHERE ((- (((((0.2503256234067094)AND('1퍓.n?8Q21')))AND(0.13237056043394324))))) ORDER BY ((rt0.c1 COLLATE RTRIM)IS NOT(CAST(rt0.c2 AS BLOB))) DESC; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c5 AS NUMERIC) THEN vt1.c0 COLLATE BINARY END FROM vt0, vt1, rt0 GROUP BY LIKELY(DISTINCT vt0.c0) HAVING ((((rt0.c3) NOT NULL)) BETWEEN (TRIM(DISTINCT vt0.c0, 0.44510950887519296)) AND (TOTAL(rt0.c4))); -- 0ms;
SELECT DISTINCT CASE ((((NULL)AND(rt0.c6)))OR(rt0.c2))  WHEN rt0.c2 COLLATE RTRIM THEN (vt0.c0 IN (NULL)) END FROM rt0;SELECT DISTINCT ((((rt0.c3) IS TRUE)) IS FALSE), (+ (vt1.c0)) COLLATE NOCASE, rt0.c1 FROM vt0, rt0 WHERE (((((0.560115497343458)>>(NULL)))%((~ (0.7783740688511943)))));SELECT DISTINCT ((((((((((0X7348a69d)OR(rt0.c5)))OR(vt1.c0)))AND(rt0.c3)))OR(vt1.c0))) IS FALSE), AVG(((rt0.c0)&(rt0.c5))) OVER (), ((((vt1.c0)OR(rt0.c5)))AND(rt0.c5)) COLLATE RTRIM FROM rt0;SELECT DISTINCT (('sl}L粦' COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND ((- ('u롼')))), TOTAL((rt0.c1 IN (x''))), SQLITE_COMPILEOPTION_USED((((rt0.c5))>=((vt1.c0)))) FROM rt0, vt0;SELECT ALL LOWER(DISTINCT IFNULL(rt0.c4, vt0.c0)) FROM rt0;SELECT ALL (((rt0.c6, rt0.c5, rt0.c5)) NOT BETWEEN ((rt0.c1, rt0.c1, 1617137042)) AND ((rt0.c1, x'f65c02e9', vt0.c0))) COLLATE BINARY FROM vt0;SELECT ALL (+ (rt0.c0)) COLLATE BINARY, x'fa60', ((((rt0.c1)||(rt0.c3)))!=(((rt0.c1)>>(rt0.c5)))) FROM vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE RTRIM FROM vt0, rt0 WHERE (TRIM(1.036233508E9) COLLATE BINARY) GROUP BY CASE ((rt0.c6)AND(rt0.c3))  WHEN (~ (rt0.c0)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END END HAVING rt0.c6; -- 0ms;
SELECT (('1520946142')-(rt0.c1)) FROM vt1 WHERE ((+ (((((x'9b6f')OR(')i')))OR(1.903550408E9)))));SELECT AVG(json_type(rt0.c2)) OVER () FROM vt1 ORDER BY CAST((+ (rt0.c1)) AS BLOB) DESC  NULLS FIRST;SELECT DISTINCT CASE WHEN ((((rt0.c6)AND(NULL)))OR(rt0.c2)) THEN rtreenode(rt0.c1, x'') WHEN NULL THEN (rt0.c2 IN ()) WHEN ((((rt0.c2)AND(rt0.c5)))AND(rt0.c6)) THEN 0.6278028584264717 END FROM rt0 WHERE (CAST((((NULL, x'67a3', 0.3985854889394973, -854813960, NULL, '644429696', '-1425335213'))<=((0.5997266083423922, x'', 0.0, NULL, 'R쉫5EZ', NULL, x''))) AS BLOB)); -- 0ms;
SELECT MAX((((rt0.c4))<((rt0.c4))) COLLATE RTRIM), CAST(((x'f3e7') NOT BETWEEN (rt0.c1) AND (rt0.c3)) AS NUMERIC), ((((((((((rt0.c2)AND(rt0.c5)))AND(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)))==((+ (rt0.c5)))) FROM vt0 WHERE (rtreenode(0.26077192946453986 COLLATE NOCASE, ((((-112503104)OR('.t/%')))AND(x''))));SELECT ALL vt0.c0 FROM vt1, rt0 WHERE (((((CASE 'V㿸()'  WHEN NULL THEN '2054733570' END)AND((~ ('pү_W')))))AND(((((0.5633759036206775)OR(x'')))OR(NULL)))));SELECT vt0.c0 FROM rt0 LIMIT -201445409;SELECT DISTINCT ((((rt0.c5)IS(vt1.c0)))+(((rt0.c5)|(rt0.c5)))) FROM vt1 WHERE (((('+j6K!eq>') BETWEEN (x'') AND (NULL)) IN ()));SELECT ALL GROUP_CONCAT(((((rt0.c3)OR(rt0.c2)))OR(rt0.c2))) OVER () FROM vt1, rt0, vt0 LIMIT 1853268348; -- 0ms;
SELECT ALL ((((+ (vt1.c0))))<((((rt0.c4)=(vt0.c0))))) FROM rt0 WHERE (((CASE -5.51978559E8  WHEN '1393562192' THEN NULL ELSE -1.66372626E8 END) NOT BETWEEN (CAST(NULL AS BLOB)) AND (0Xffffffffeb6d9d6f))) LIMIT 1562001730 OFFSET -1003772743;SELECT DISTINCT ((vt1.c0) ISNULL), SUBSTR(((rt0.c2) ISNULL), (~ (rt0.c3))), ((((vt1.c0) ISNULL)) BETWEEN (((((((((rt0.c1)OR(x'afcb')))OR(rt0.c4)))OR(vt1.c0)))OR(vt0.c0))) AND (rt0.c1)) FROM rt0 WHERE (((((((((((((((((((0x3f741ad1)OR('IYCb3M')))OR(NULL)))AND(NULL)))AND('')))AND(0X4d98e8a5)))AND(x'')))OR(x'')))AND(0x203a1517)))GLOB(((x'5563') NOT BETWEEN (0X7d2b9c44) AND (0.5263477188724072))))) GROUP BY TRIM(DISTINCT rt0.c4) HAVING ((((((((((((CASE vt1.c0  WHEN rt0.c5 THEN rt0.c1 END)OR(NULL)))AND(CAST(rt0.c4 AS INTEGER))))AND(CAST(0.6420127237724871 AS REAL))))OR((+ (vt1.c0)))))AND('/DOBqvW')))OR(rt0.c3 COLLATE BINARY));SELECT ALL ((CAST(rt0.c0 AS INTEGER))|(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c5 WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END)) FROM vt1;SELECT DISTINCT rt0.c3, rt0.c3, (((NULL)) BETWEEN ((rt0.c6)) AND ((SQLITE_VERSION()))) FROM vt0, rt0 WHERE (CASE LTRIM(0.5557391424278764, '1519850491')  WHEN '' THEN CAST('1212228013' AS REAL) ELSE '890554130' END) ORDER BY (((rt0.c2 IN ()))>>(rt0.c6))  NULLS FIRST; -- 0ms;
SELECT ALL ((rt0.c4)+((+ (rt0.c5)))) FROM vt1 WHERE (LIKE((('752736163')IS NOT(NULL)), ((0.8764549492696904) ISNULL), 's')) LIMIT 955820095 OFFSET 292996522;SELECT DISTINCT (+ (vt0.c0 COLLATE BINARY)) FROM rt0 WHERE ((('')<=('')) COLLATE RTRIM);SELECT DISTINCT ((((rt0.c6)&(x'c2af')))<<(((((((((rt0.c3)OR(rt0.c3)))AND(0.8318877905277173)))AND(vt1.c0)))OR(rt0.c5)))) FROM vt1, vt0, rt0 ORDER BY ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c3))) AND (x'38d7')) DESC, (((((rt0.c5) NOT BETWEEN (rt0.c5) AND (rt0.c6))))<=(((((rt0.c2, rt0.c4, rt0.c6))=((rt0.c2, rt0.c0, vt0.c0)))))); -- 1ms;
SELECT DISTINCT (((x'' IN ()))%('#g')) FROM vt1 GROUP BY (((rt0.c5 IN ())) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (rt0.c0));SELECT (+ (json_insert(rt0.c2, rt0.c3, rt0.c6, rt0.c4, rt0.c6))) FROM vt0, rt0 WHERE (CASE WHEN ((0.7665950544036404)!=('-499992253')) THEN ((((1.5732132E9)AND(x'3b28')))AND(NULL)) END) GROUP BY ((((vt1.c0))<((rt0.c2))) IN ()), ((((((((((((rt0.c4)OR(1808129979)))AND(rt0.c4)))AND(((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(vt1.c0)))))OR(rt0.c0)))OR(json_insert(vt0.c0, rt0.c4, rt0.c3))))AND((rt0.c4 IN ()))), CAST(rt0.c6 COLLATE NOCASE AS REAL) HAVING (((((NOT (rt0.c4)))AND(((rt0.c5) BETWEEN (rt0.c3) AND (NULL)))))AND(LTRIM(rt0.c6, 'X\rjnO4⮵T\')));SELECT DISTINCT ((TIME(vt1.c0, vt1.c0, rt0.c2, rt0.c6, vt1.c0))OR(((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))) FROM vt1, rt0 ORDER BY CAST(((rt0.c6) NOTNULL) AS INTEGER) ASC;SELECT (+ ((- (rt0.c2)))), 0.1616716587708349, TYPEOF(((rt0.c1) NOT BETWEEN (-1100004002) AND (rt0.c1))) FROM vt1, vt0 WHERE ((+ (CAST(0.978658549193197 AS NUMERIC)))) LIMIT 1682405064;SELECT DISTINCT rt0.c4, ((((rt0.c6) NOT NULL))-(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))), MAX(((rt0.c0)+(vt1.c0))) FROM vt0, vt1, rt0; -- 0ms;
SELECT ALL ((rt0.c1 COLLATE RTRIM) NOTNULL) FROM rt0; -- 0ms;
SELECT (- (rt0.c3 COLLATE NOCASE)) FROM vt1;SELECT ALL ((rt0.c4) NOT BETWEEN (0.5322087934901117) AND (NULL)) FROM vt1, vt0 WHERE ('64182995') ORDER BY (rt0.c0 IN ()) COLLATE NOCASE  NULLS FIRST, rt0.c3 ASC;SELECT DISTINCT GROUP_CONCAT(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) OVER ( PARTITION BY CASE (((x'1a38')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))  WHEN ((0.03396950028864287)+(rt0.c0)) THEN rt0.c2 ELSE CASE WHEN '0zP/' THEN NULL ELSE 0.2250352249728198 END END, (((rt0.c6 IN ()))&(rt0.c6))) FROM vt1, vt0;SELECT DISTINCT '', TOTAL(((('1536333023')) BETWEEN ((-6.48537233E8)) AND ((vt1.c0)))), vt0.c0 FROM vt1;SELECT DISTINCT x'' FROM vt0, vt1, rt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((159600418 IN ())) BETWEEN ((+ (rt0.c4))) AND ((rt0.c0 IN ())))  NULLS LAST; -- 0ms;
SELECT DISTINCT '0.21130910107279843' FROM vt0, rt0 ORDER BY ((rt0.c3)>>(NULLIF(rt0.c2, rt0.c1))) DESC; -- 0ms;
SELECT ALL CAST((NOT (rt0.c0)) AS BLOB) FROM vt1;SELECT DISTINCT ((CAST(vt1.c0 AS BLOB))/(((((rt0.c6)AND(rt0.c3)))OR(vt0.c0)))) FROM vt1 GROUP BY (((NOT (rt0.c0))) IS FALSE) HAVING '';SELECT (NOT ((x'' IN ()))), AVG((- (rt0.c1))), (((x'')IS NOT(0.05551045101313634)) IN ()) FROM vt0, vt1 WHERE ((+ ((('')OR('z\>v')))));SELECT DISTINCT (((((((((~ (rt0.c3)))AND(x'')))OR((+ (vt1.c0)))))OR(((rt0.c4)|(rt0.c2)))))OR((((((((('sQ~aZmIsd')AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c6)))AND(rt0.c5)))), rt0.c3, GROUP_CONCAT(((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c2))) OVER () FROM vt1, rt0, vt0 WHERE ((((((((0.7870195114431617)OR(x'')))AND(''))))>(((+ (0.49993130329359814)))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (0.18434051954204878) AND (rt0.c3))) NOTNULL) FROM vt1 WHERE ((((((x'')GLOB(0X6d875463))))==((((((0.5813763021128691)OR('-292617484')))AND(x''))))));