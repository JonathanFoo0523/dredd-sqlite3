-- Time: 2024/06/07 06:32:30
-- Database: database67
-- Database version: 3.40.0
-- seed value: 2863322567
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, order=DESC); -- 2ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('-499713158'); -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-499713158'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29172'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-11770859,14');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.4340179825303202), ('0.4340179825303202'), (0xffffffffacd3b942); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '30632'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27233'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 598006030);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 861291238);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '12949'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '22027'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('/|'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37968'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.4628225433537795); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (',G#_Pk_|'), (NULL), (288573198); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.4628225433537795 WHERE vt0.c0; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''); -- 3ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('190051245'), (',g#_pk_|'), (x''); -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'63b6'), (NULL), (x''); -- 0ms;
UPDATE OR FAIL vt0 SET c0='94260923' WHERE ((((vt0.c0)|(vt0.c0))) NOT NULL); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-447003137 noskipscan'); -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1878254120); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (-47270446); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1746954600); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 535388992); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 771985195); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1747941169);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2089680526); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=94260923,15');\n; -- 0ms;
PRAGMA mmap_size = -1876944881565965124; -- 0ms;
UPDATE OR ABORT vt0 SET c0='-47270446' WHERE CAST(vt0.c0 AS INTEGER) COLLATE RTRIM; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=288573198,15');\n; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.14001192487092262), ('[%8&'), (x''); -- 2ms;
PRAGMA temp.default_cache_size; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('/9裏)B5Iw'), ('0.4340179825303202'), ('-1793554706'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'2d53'), ('190051245'), (x'b816'), (NULL), (-608408849); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'c23c'), (0.34247897558214324), ('-11770859'); -- 10ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -167262158);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-642980359,3');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=''; -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (0.7985185354624422), ('8n_\r?cD△'), (NULL); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL), (x'38e7'), (NULL); -- 2ms;
PRAGMA secure_delete; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(0x2e4494a) WHERE ((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (0.4340179825303202) AND ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=''; -- 6ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 0ms;
UPDATE vt0 SET c0=x''; -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, languageid="lid"); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('5O+K\n\n'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=516902512,4');\n; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-642980359 sz=-11770859 noskipscan'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'6786'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'c1be85d6'), (NULL), ('0.4628225433537795'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('\r%P'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (5.16902512E8); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (698230195); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43891'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32948'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '61809'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '40307'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1872841749);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'b8e3', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (1372364889); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-972511156'), (0x1ecf4e70), (x''); -- 3ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CAST(MIN(vt1.c0) AS INTEGER) FROM vt1, vt0 WHERE (CAST('94260923' AS REAL) COLLATE BINARY); -- 0ms;
SELECT ALL CAST((vt0.c0 IN (NULL)) AS TEXT) FROM vt1, vt0; -- 0ms;
SELECT ALL CUME_DIST() OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP), (((vt1.c0, vt1.lid, vt0.c0, vt1.lid, vt1.c0)) BETWEEN (('-1872841749' COLLATE RTRIM, vt0.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), (vt1.lid IN ()), CASE vt1.c0  WHEN vt0.c0 THEN '0.4340179825303202' END)) AND ((MAX(vt0.c0), (('.qV7') IS FALSE), INSTR(vt0.c0, vt0.c0), ((vt0.c0)<(NULL)), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))), LEAD(NULL, (NOT ('246029808')), (((('') ISNULL))>(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) OVER () FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(((vt1.lid)|(vt1.c0))) OVER () FROM vt0 WHERE ((LOWER(DISTINCT 0.41255984961861336) IN ())) ORDER BY ((((((((NULL)OR(vt1.c0 COLLATE RTRIM)))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN ('/|') AND (vt0.c0)))))AND((((vt1.c0))>=((vt1.lid)))));SELECT NTH_VALUE(TYPEOF(vt1.c0 COLLATE NOCASE), NULL) OVER (), ((((vt0.c0) BETWEEN (vt1.lid) AND (NULL)))!=(((vt1.c0) IS FALSE))), NTH_VALUE((vt1.lid IN ()) COLLATE RTRIM COLLATE BINARY, UPPER(DISTINCT (((vt1.c0, vt1.c0, x'')) NOT BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.lid))))) OVER () FROM vt1 WHERE (CHAR(0.4340179825303202 COLLATE NOCASE));SELECT DISTINCT (((vt0.c0, vt1.c0, vt1.lid)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)), vt0.c0, ((vt1.c0)>=(vt0.c0)))) AND (((vt0.c0 IN (vt1.c0)), vt0.c0, CAST(vt1.c0 AS INTEGER)))) FROM vt1 WHERE (((LIKELIHOOD(0.4236171538757172, 0.17201271444569055))!=(((0.26052671000926386)<(x'4ec4')))));SELECT DISTINCT x'' FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN x'' THEN '' END THEN IFNULL(0.4628225433537795, 'eo') WHEN CASE WHEN x'' THEN 0.14661964869036792 ELSE 0.4379998974626119 END THEN ((('-118256552')) BETWEEN ((NULL)) AND ((x''))) WHEN ((('1338847056', 0.08890714883241002, '')) BETWEEN ((NULL, 0.15830788006823393, x'04a2')) AND ((0Xffffffffcd95ff03, NULL, 1423471012))) THEN ((NULL)AND(x'')) ELSE CASE 0.15830788006823393  WHEN 9.4260923E7 THEN 1212050359 WHEN NULL THEN x'' WHEN NULL THEN NULL ELSE NULL END END); -- 0ms;
SELECT DISTINCT LAST_VALUE(vt0.c0) OVER ( PARTITION BY ((CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid ELSE vt0.c0 END) BETWEEN (CASE WHEN '-499713158' THEN '-608408849' END) AND (CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.c0 END)), (((((((((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)))AND(vt0.c0)))AND(vt1.c0)), (~ (vt1.c0)), ((vt0.c0)<(vt1.lid)), (vt1.lid IN ()), ((((x'5242')OR(vt0.c0)))OR(vt1.lid))))>((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END, NULL, ((-1674253234) NOT NULL), CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE RTRIM)))), FIRST_VALUE(((((vt0.c0 COLLATE NOCASE)OR(vt0.c0 COLLATE NOCASE)))AND(TRIM(vt0.c0)))) OVER (), ((CAST(vt0.c0 AS REAL))%(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((CASE WHEN 0.023424987568497202 THEN 0.6733209970167185 WHEN -2138178799 THEN 'tw搧I⃿' WHEN x'' THEN NULL ELSE 'e}{}' END)<>('E\n%')));SELECT ((((((vt1.lid, vt1.c0, vt0.c0))>=((vt1.lid, vt1.c0, vt0.c0))), ((vt1.c0) ISNULL), (vt1.lid IN ())))<=((MIN(vt0.c0), ((vt0.c0)==(0.9638754462471055)), TRIM(DISTINCT vt0.c0)))) FROM vt1, vt0 WHERE ('Bᨨ'); -- 0ms;
SELECT ALL NTILE(PRINTF((((vt1.lid))>((vt1.lid))))) OVER () FROM vt1, vt0; -- 1ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((((vt1.c0))>=((vt0.c0)))) AND ((vt0.c0 IN (vt1.lid)))), SUM(((vt0.c0)&(vt0.c0))) OVER (), ((((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)))/(((vt1.c0)<=(vt0.c0)))) FROM vt0, vt1 EXCEPT SELECT ALL AVG((+ (x'7063'))) OVER (), MAX(((vt0.c0) BETWEEN ('-182021380') AND (vt0.c0))), vt1.c0 FROM vt0, vt1 WHERE ((((''))>=((0Xfffffffff14aeccd))) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ((vt0.c0)|((vt0.c0 IN ()))) FROM vt1, vt0 WHERE (((((((NULL)AND('0.023424987568497202')))OR(x'')))||(((NULL)<('姧ᷰ6'))))); -- 0ms;
SELECT ALL ((((vt0.c0)IS(vt1.c0))) NOT NULL), ((vt0.c0) NOTNULL) COLLATE BINARY, vt0.c0 FROM vt0 GROUP BY '0.26052671000926386', CAST((- (vt0.c0)) AS BLOB), (((((vt1.c0))!=((vt1.lid))))||((+ (vt1.lid))));SELECT DISTINCT (('亻gwK') NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT 0X44dcdee1 FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (NOT (((vt1.lid)LIKE(vt1.lid)))), (((((((vt1.c0)AND(0.3570465485656227)))OR(vt1.c0)), x'e247', COUNT(vt1.lid)))<((((vt0.c0)+(vt0.c0)), UPPER(vt1.c0), CAST(vt0.c0 AS NUMERIC)))), json_object(vt1.c0, CASE WHEN '347500274' THEN vt0.c0 END) FROM vt1;SELECT CASE WHEN vt1.lid COLLATE RTRIM THEN vt1.lid END FROM vt0, vt1; -- 1ms;
SELECT SUM('347500274') OVER (), vt1.lid, '9|' FROM vt1, vt0 LIMIT 537536797; -- 0ms;
SELECT ALL (DATE(9.4260923E7, vt1.c0, 0x2d2adbf7) IN (((vt0.c0)||(vt1.lid)))) FROM vt0 WHERE ((((((('')>>(NULL)))OR(x'43d9' COLLATE BINARY)))AND(CAST(1212050359 AS NUMERIC))));SELECT ALL 0.6733209970167185 FROM vt0, vt1; -- 0ms;
SELECT CASE WHEN ((vt0.c0) ISNULL) THEN LIKELIHOOD(DISTINCT 0.7030889294460194, 0.5265448604446646) ELSE HEX(vt0.c0) END FROM vt1;SELECT DISTINCT (((((((vt1.c0, x'', vt1.c0))<=((vt1.lid, vt1.c0, vt0.c0))))AND(((vt1.lid)/(x'a211')))))OR(COALESCE(vt1.c0, vt1.c0))), (LOWER(DISTINCT vt0.c0) IN ()), ((vt1.c0 COLLATE BINARY) IS FALSE) FROM vt0, vt1 WHERE (json_remove('' COLLATE RTRIM, CAST('907714566' AS NUMERIC))) GROUP BY x'b8a7', ((CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END) IS TRUE), CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 END COLLATE RTRIM HAVING (((NULL COLLATE RTRIM))<(((((('-1747941169')AND(vt1.lid)))OR(vt1.c0)))));SELECT DISTINCT AVG((vt0.c0 IN ())) FROM vt1; -- 0ms;
SELECT DISTINCT (+ ((~ (vt1.lid)))) FROM vt1 GROUP BY (((vt0.c0) BETWEEN (x'37ca') AND (vt1.c0)) IN ()) ORDER BY ABS(((((((((0X2e4494a)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.lid)))  NULLS FIRST;SELECT DISTINCT ((((((vt1.lid)IS NOT(vt0.c0)))AND((vt1.lid IN ()))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))), (NOT (((((vt0.c0)AND(vt1.lid)))OR(vt1.c0)))), CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END COLLATE NOCASE, (((vt1.lid IN ()))*((((vt1.c0)) BETWEEN ((0.12604275704096368)) AND ((vt1.c0))))), ((vt1.c0) ISNULL), (~ (CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END)), (- (0.9541753834116896)) FROM vt0, vt1 LIMIT 235023217; -- 0ms;
SELECT ((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT ((0.6733209970167185 IN ()) IN ((x'' IN (vt1.c0)))) FROM vt0, vt1; -- 1ms;
SELECT ALL ((((vt1.c0)>(vt0.c0))) IS TRUE) FROM vt0, vt1 WHERE ((((x'', NULL, x'c6b1')) NOT BETWEEN ((((0.135789243795145) NOTNULL), NULL COLLATE RTRIM, (('1801354923') ISNULL))) AND ((('-247899673' IN ()), ((NULL)AND('lgwK')), COALESCE('\*', NULL, '757783543', NULL))))); -- 0ms;
SELECT ALL NULL FROM vt0; -- 1ms;
SELECT DISTINCT CAST((NOT (vt1.c0)) AS BLOB), vt1.c0, ((((x'' IN ())))=((((vt1.c0)>(vt1.lid))))) FROM vt1, vt0; -- 0ms;
SELECT ALL CASE ((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0))  WHEN NULL THEN ((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid)) END FROM vt0, vt1 WHERE (((((NOT (NULL))))<((CASE WHEN 0.9538209235726486 THEN 0Xffffffffdbbc6aef ELSE '' END)))) GROUP BY (((vt0.c0)) BETWEEN (('-471657187' COLLATE RTRIM)) AND ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0))))), ((((vt0.c0 IN ())))>=((((vt0.c0)+(vt0.c0))))), (((vt1.lid) NOT NULL) IN ()) HAVING LIKELY(SUM(vt0.c0)); -- 0ms;
SELECT DISTINCT ((((vt1.c0) ISNULL))OR(((vt0.c0)AND(vt0.c0)))) FROM vt0, vt1 WHERE (((((NULL)<<(-586249628))) IS TRUE)) GROUP BY ((vt1.lid) BETWEEN (((vt0.c0)==(vt0.c0))) AND (vt0.c0)); -- 0ms;
SELECT CAST(((vt1.lid)AND(vt0.c0)) AS REAL), CAST(((vt1.c0)<(0X38f9d7cd)) AS TEXT), LTRIM(CASE vt0.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END, vt1.c0) FROM vt0 WHERE ((CASE WHEN '-1784249665' THEN x'a525' WHEN '516902512' THEN x'' WHEN 'R搧' THEN '-608408849' END IN ()));SELECT CASE WHEN ((((vt1.lid)AND(vt0.c0)))OR(vt1.c0)) THEN (+ (vt0.c0)) ELSE ((vt0.c0)=(vt1.lid)) END FROM vt0 WHERE (CAST((((NULL))>=((NULL))) AS NUMERIC));SELECT DISTINCT ((((((((((vt1.lid)<=(vt1.c0)))OR(((vt1.lid)|(vt1.lid)))))AND((NOT (vt0.c0)))))OR(((0.6275857715441151) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt1.c0)), ((((((((CASE vt1.lid  WHEN vt0.c0 THEN vt1.lid END)AND((- (vt1.c0)))))OR(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND(8.61291238E8)), ((((UNLIKELY(DISTINCT vt1.c0))AND(vt0.c0)))AND(((vt1.c0) IS TRUE))) FROM vt0, vt1 GROUP BY CAST((~ (x'')) AS INTEGER) ORDER BY ((((vt1.lid) BETWEEN (vt1.lid) AND (NULL))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.lid)))) ASC; -- 1ms;
SELECT ((CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END) NOT BETWEEN (vt1.lid COLLATE BINARY) AND (((vt1.lid)/(vt0.c0)))) FROM vt0;SELECT ALL (((((((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)) IN ()) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((vt1.lid)||(x'8876'))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT AVG(((((vt1.lid)AND(vt0.c0)))AND(vt1.c0))) OVER () FROM vt0, vt1 WHERE (((((((0.7951076922153703)OR(x'')))OR(0.04922641538568873)))IS(((((0.3515439434228612)AND('1491597633')))OR(x''))))); -- 1ms;
SELECT DISTINCT NTILE(vt0.c0) OVER ( RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW), NTH_VALUE(((((vt0.c0)AND(vt1.c0))) NOT NULL), (+ (json_type(NULL)))) OVER (), CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)) WHEN CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END THEN ((vt1.c0)>(vt1.c0)) WHEN ((vt1.lid)<>(vt1.c0)) THEN ((vt1.lid) ISNULL) END FROM vt0, vt1 WHERE (NULLIF(DISTINCT (- (1627685926)), ((x'')|(x'')))) GROUP BY CAST(((((vt0.c0)AND(vt1.lid)))AND(vt1.c0)) AS NUMERIC) HAVING COUNT(((vt1.c0)&(vt1.lid))); -- 1ms;
SELECT ((((vt1.c0)=(vt1.lid)))-(((((vt0.c0)AND(vt1.lid)))OR(vt1.lid)))), CAST(((vt0.c0)&(0.2110531433794406)) AS REAL), ((((vt1.c0) ISNULL))+(CAST(vt0.c0 AS NUMERIC))) FROM vt0, vt1 WHERE (((json(x'e750')) IS TRUE)) GROUP BY CASE ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.lid AS INTEGER) THEN (((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND (('973529809'))) END;SELECT DISTINCT CAST(CAST(0.4617956174246033 AS REAL) AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt1.lid COLLATE BINARY, ((((vt0.c0 COLLATE RTRIM)OR(vt1.lid)))AND(CASE WHEN vt1.lid THEN vt1.lid END)), (NOT (CAST(vt0.c0 AS REAL))) FROM vt0, vt1 WHERE (((((NULL)>=(x''))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((x'6646222b')AND(((vt1.lid)==(vt1.c0)))))AND(UPPER(vt1.lid))), ((((((vt0.c0)-(vt1.c0)))AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(((x'')*(vt1.lid)))), TOTAL(UNLIKELY(vt1.c0)) FROM vt1 GROUP BY CAST(NULLIF(DISTINCT vt1.lid, vt1.lid) AS REAL) HAVING ((vt1.lid COLLATE RTRIM)AND(((((((((((((vt1.c0)AND(vt1.lid)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.lid)))OR(vt1.c0)))) ORDER BY HEX(DISTINCT ((vt1.lid) BETWEEN (vt1.c0) AND (x''))) ASC  NULLS LAST, load_extension(UNLIKELY(x''), vt0.c0 COLLATE BINARY);SELECT DISTINCT (- ((((vt0.c0, vt1.c0, vt1.c0))<=((vt1.lid, vt1.lid, vt1.lid))))), CAST(MAX(vt1.c0, vt1.lid) AS NUMERIC), CASE CAST(vt0.c0 AS REAL)  WHEN (vt1.lid IN ()) THEN MAX(vt0.c0) END, PERCENT_RANK() OVER (), vt0.c0 FROM vt1 WHERE (((((x'') IS TRUE)) NOT NULL));SELECT COUNT(*) FROM vt1, vt0 GROUP BY (vt0.c0 COLLATE BINARY IN (CAST('-173589593' AS TEXT), vt0.c0)); -- 0ms;
SELECT (((((('-1356569243') BETWEEN (vt1.lid) AND (vt0.c0)))OR((NOT (vt1.lid)))))AND(((vt0.c0) NOTNULL))), (~ (((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)))), vt1.lid FROM vt1, vt0 WHERE (''); -- 4ms;
SELECT ALL ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)) COLLATE BINARY, vt1.lid, CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) FROM vt0;SELECT DISTINCT ((TRIM(vt0.c0)) BETWEEN ((((vt0.c0, vt1.lid, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.lid, vt1.c0)))) AND (((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)))) FROM vt0 WHERE (TYPEOF(CAST(x'a4fd' AS REAL))) ORDER BY (((x'', vt1.lid, vt0.c0)) BETWEEN ((((vt1.c0) ISNULL), CHAR(vt1.lid), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)))AND(vt0.c0)))AND(vt1.lid)))) AND ((LOWER(vt1.c0), vt0.c0 COLLATE NOCASE, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END))) ASC;SELECT DISTINCT DENSE_RANK() OVER () FROM vt0, vt1 LIMIT 1590861051 OFFSET -665123441; -- 1ms;
SELECT LEAD((((~ (vt0.c0)))<=(((vt1.lid)>>(vt1.c0)))), ((((vt1.lid IN ())))<=((((vt1.lid) ISNULL)))), (~ (CASE x''  WHEN vt0.c0 THEN vt1.c0 END))) OVER () FROM vt0, vt1 WHERE ((((((((NULL, '0.15830788006823393', NULL, 235023217, x'')) BETWEEN ((x'', x'', NULL, NULL, x'')) AND (('537536797', -2.47899673E8, NULL, '.z', x'd327'))))AND((('!8?䗨') NOT BETWEEN (0X58e7f941) AND ('D')))))AND(0.021658736818622515))); -- 0ms;
SELECT (((((vt0.c0))>=((vt1.lid))))AND(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid)))) FROM vt1, vt0 WHERE (((- (x'fa22')) IN ('~\]1' COLLATE BINARY))); -- 0ms;
SELECT ((vt1.lid)||(COUNT(*))), x'', CAST(((vt1.c0)!=(vt1.lid)) AS REAL) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((CASE vt1.lid  WHEN x'083d' THEN vt0.c0 END) BETWEEN (((vt1.lid)<(vt1.lid))) AND (NULL)) FROM vt1;SELECT ALL (((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()), COUNT((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.c0)))) OVER ( GROUPS BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (NULL)))LIKE(vt0.c0)) PRECEDING AND CASE (((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN ((vt1.lid)IS NOT(vt1.lid)) THEN (vt0.c0 IN ()) WHEN 0x5d1e8978 THEN ((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0)) WHEN (((vt0.c0))<=((vt1.lid))) THEN CASE vt1.lid  WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END ELSE CAST(vt1.c0 AS NUMERIC) END PRECEDING), 0x68969b7 FROM vt1, vt0 LIMIT -55192896 OFFSET 799762766; -- 0ms;
SELECT DISTINCT ((CAST(vt1.lid AS TEXT))<(((vt0.c0)-('')))), (NOT (CAST(vt1.c0 AS REAL))), vt0.c0 FROM vt0, vt1; -- 1ms;
SELECT ALL vt1.c0 COLLATE RTRIM, (((vt1.lid IN (vt0.c0)))<>((((('')AND(vt1.lid)))AND(vt1.lid)))), TOTAL_CHANGES(), TOTAL(vt1.lid) OVER (), ((((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c0)))==((((vt0.c0, vt0.c0, vt1.c0))<((vt1.lid, vt0.c0, 0.8482863089262355))))) FROM vt0, vt1; -- 0ms;
SELECT ALL vt1.c0, (NOT ((((vt1.lid, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, 0.7514636091025312, 'Bᨨ')) AND ((vt0.c0, vt0.c0, vt1.c0))))), (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))-(((vt1.lid)*(vt1.c0)))) FROM vt0 WHERE ('-1259092863');SELECT DISTINCT ((0.8482863089262355)<=(((((vt0.c0)AND(NULL)))AND(NULL)))) FROM vt1;SELECT DISTINCT CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.lid)) AS TEXT) FROM vt0;SELECT ALL ((GROUP_CONCAT(vt1.lid)) IS TRUE) FROM vt1, vt0 LIMIT 292212007 OFFSET -1933570795; -- 0ms;
SELECT DISTINCT CAST((vt1.lid IN (vt1.lid)) AS REAL), CAST(CASE vt1.lid  WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN NULL WHEN vt1.lid THEN vt0.c0 ELSE vt1.c0 END AS TEXT), SUM((- (vt1.lid))) OVER () FROM vt1, vt0; -- 3ms;
SELECT ALL LAG(vt1.lid, '-1294315942', NULL) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM vt1, vt0 WHERE (CASE 0.2850904005693028  WHEN x'a436' THEN x'' WHEN 0.7098490844886677 THEN x'' WHEN '3SC깲T' THEN NULL END COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((vt0.c0) IS TRUE) IN ((((vt1.lid))!=((vt0.c0))))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt1;SELECT DISTINCT GROUP_CONCAT(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))), (((((((((((vt1.c0)AND(NULL)))OR(vt1.lid)))AND(vt1.c0)))OR(vt1.lid))))>((((vt0.c0)=(vt1.lid))))), CAST(QUOTE(vt0.c0) AS NUMERIC) FROM vt1, vt0 WHERE (0.7951076922153703); -- 0ms;
SELECT DISTINCT (~ ((vt1.c0 IN (vt1.c0)))), ((((vt1.c0)==(vt1.c0))) IS FALSE), COUNT(vt1.lid), CAST((('-47270446')*(vt1.c0)) AS TEXT), CASE WHEN ((vt0.c0)<=(vt1.c0)) THEN ((vt1.lid) IS TRUE) END FROM vt1, vt0 WHERE (((((NULL) IS FALSE)) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((CAST(vt1.lid AS NUMERIC))OR(((vt1.lid) NOT NULL))))AND((vt1.c0 IN ()))), (+ (NULL)), (((vt1.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((((vt1.c0)>=(vt1.lid)), CASE vt1.lid  WHEN vt1.lid THEN vt1.lid ELSE vt0.c0 END, vt0.c0)) AND ((COUNT(vt0.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt0.c0)GLOB(vt0.c0))))) FROM vt1, vt0 WHERE (CAST(QUOTE(-665123441) AS INTEGER)); -- 0ms;
SELECT ALL CASE ((vt0.c0)GLOB(vt0.c0))  WHEN vt1.lid COLLATE BINARY THEN (- (',*9삏2')) ELSE ((((vt1.lid)OR(0.30587371509882855)))AND(vt1.lid)) END FROM vt1;SELECT DISTINCT (((NULL IN (vt1.c0))) NOT BETWEEN ('5O+K\n\n') AND (LIKELY(DISTINCT NULL))) FROM vt0 ORDER BY vt1.lid ASC;SELECT DISTINCT ((((((vt1.lid)) NOT BETWEEN ((vt1.c0)) AND ((vt1.lid))), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.lid) ISNULL)))==(('', ((((((((((((vt0.c0)AND(vt1.lid)))OR(vt1.lid)))OR(vt1.c0)))AND(vt1.lid)))AND(vt1.lid)))AND(vt0.c0)), CAST(vt0.c0 AS TEXT)))) FROM vt0, vt1 WHERE ((TYPEOF(DISTINCT NULL) IN ())) LIMIT -236383324; -- 0ms;
SELECT (((-5.5192896E7) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) FROM vt1, vt0; -- 0ms;
SELECT ALL ((((((vt1.c0) IS FALSE))AND(((vt1.c0) NOTNULL))))OR(highlight(vt1.lid, NULL, vt1.c0, vt0.c0))) FROM vt0 ORDER BY ((((((vt1.lid)IS NOT(vt0.c0)))OR(((vt1.c0) ISNULL))))AND(((vt1.lid) IS TRUE))), ((vt1.c0)>(((vt1.lid)>(vt1.lid))))  NULLS LAST;SELECT DISTINCT TOTAL_CHANGES(), COUNT(((vt0.c0)=(vt1.lid)) COLLATE BINARY) OVER (), ((((-1.583913945E9) IS FALSE))OR((('757783543') IS FALSE))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((MIN(vt1.lid))AND((((vt1.c0, vt1.c0, 'N(Q1䯉yY')) NOT BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0))))))OR((vt1.lid IN ()))) FROM vt1 WHERE (((json_object(x'', NULL, 'U*qu~[Y', 'TRUE', NULL, x'')) ISNULL));SELECT DISTINCT 0.050246801499434945 FROM vt0 WHERE ((((('D&')IS(x'')))|((((x'a9f7', x'6652', NULL))>((',*9삏2', '-527804933', 0.04092531089404228)))))); -- 0ms;
SELECT ALL ((TRIM(vt0.c0)) NOT BETWEEN (((((vt1.lid)AND(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0) NOTNULL))), (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0X483e6bb7, ((vt1.lid)&(x'56b9')), ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))) AND ((vt1.lid COLLATE BINARY, CASE vt0.c0  WHEN vt1.lid THEN x'74ea' ELSE vt1.lid END, 0.15830788006823393))), CASE WHEN (((NULL))<=((vt0.c0))) THEN ((vt0.c0) ISNULL) END FROM vt0 GROUP BY (+ (CASE WHEN 1.90051245E8 THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) HAVING vt1.lid;SELECT DISTINCT (((~ (vt1.lid)))=(vt1.lid COLLATE RTRIM)), (((((NOT (vt1.lid)))AND(((((vt0.c0)AND(vt1.lid)))OR(vt0.c0)))))AND(((vt1.c0)>=(vt0.c0)))), UPPER(CASE vt1.lid  WHEN vt0.c0 THEN vt0.c0 END) FROM vt0, vt1; -- 0ms;
SELECT TOTAL(vt1.lid) OVER ( RANGE vt1.c0 PRECEDING) FROM vt0, vt1;SELECT ALL ((((NULL)<<(vt0.c0))) NOTNULL) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT CASE WHEN (~ (vt0.c0)) THEN CASE 'mTLi(k㫀 '  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END ELSE CASE WHEN '908448108' THEN vt1.c0 END END, CASE (((vt1.lid, vt1.lid, vt1.c0)) BETWEEN ((vt1.lid, vt0.c0, vt1.lid)) AND ((vt0.c0, vt1.lid, vt1.c0)))  WHEN vt1.c0 THEN ((vt0.c0)OR(vt1.c0)) ELSE ((vt0.c0)OR(vt1.c0)) END, CUME_DIST() OVER () FROM vt1 WHERE (((((x'')<>('1372364889')))OR(((NULL)OR('2033334976'))))) ORDER BY x'540e', ((((NULL)OR(((vt1.c0)!=(vt1.c0)))))AND(x'18f5' COLLATE BINARY)) ASC  NULLS FIRST, ABS(CASE x''  WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END) ASC  NULLS LAST;SELECT vt1.lid FROM vt0;SELECT DISTINCT ((vt0.c0 IN ()) IN (NULL)) FROM vt1, vt0 WHERE (((((IFNULL(DISTINCT '-777979967', x'edca'))AND((((x'77d1'))<((-1.18256552E8))))))AND((('YI!R') BETWEEN (NULL) AND (NULL))))) LIMIT -247899673; -- 0ms;
SELECT vt0.c0 COLLATE BINARY FROM vt1, vt0 WHERE (((NULL)LIKE(288573198))); -- 0ms;
SELECT ((TOTAL(vt1.lid))*((((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) FROM vt1, vt0 WHERE ((((NULL)) NOT BETWEEN ((CAST(NULL AS REAL))) AND ((0.135789243795145)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE vt0.c0  WHEN vt1.lid THEN vt0.c0 END) FILTER(WHERE CAST('1590861051' AS REAL)) OVER () FROM vt1 WHERE (((((0.4628225433537795)OR(x'7d898d91')))OR(NULL)) COLLATE BINARY);SELECT DISTINCT (((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 END))<=((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid))))) FROM vt0 WHERE ((+ (((0.6484251797206851)>>(NULL))))) LIMIT 1073032455 OFFSET -1739528902;SELECT DISTINCT (((MAX(vt1.c0)))!=((((((((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)))AND(vt1.c0))))) FROM vt0, vt1 WHERE (CAST(NULL AS TEXT)); -- 0ms;
SELECT vt1.c0 FROM vt0, vt1 WHERE (((((((NULL) IS TRUE))OR(((907714566) ISNULL))))OR(((-1.739528902E9)||(x''))))); -- 1ms;
SELECT DISTINCT HEX(DISTINCT ((vt0.c0) ISNULL)), ((vt1.c0 IN ()) IN (vt0.c0, CAST(vt1.lid AS BLOB))), GROUP_CONCAT((~ (vt1.c0))) OVER () FROM vt1;SELECT ALL COALESCE(DISTINCT CASE vt1.lid  WHEN vt1.lid THEN vt0.c0 ELSE vt1.c0 END, vt1.c0 COLLATE NOCASE, ((vt1.c0)>>(vt0.c0)), vt1.lid COLLATE NOCASE) FROM vt0, vt1 WHERE ((((('0.7030889294460194')GLOB(x'')))/(((x'')<=(x''))))) ORDER BY ((vt1.c0)>(vt1.c0)) COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt0.c0 END COLLATE BINARY, ((((vt1.lid)>>(vt0.c0)))&(MAX(vt1.c0))), (+ (CAST(vt0.c0 AS TEXT))) FROM vt1, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((vt1.lid) NOT NULL))*(CAST(vt1.lid AS REAL))) FROM vt0;SELECT ALL ((vt0.c0) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((CAST(vt1.c0 AS REAL))OR((NOT (vt1.lid)))))OR((+ (vt1.c0)))), '1355492865' FROM vt1, vt0; -- 0ms;
SELECT DISTINCT LEAD((('1409561120')LIKE(vt1.lid)) COLLATE RTRIM, (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END IN ()), vt1.c0) OVER () FROM vt1, vt0 WHERE (((((('TZ')AND(0X5d951287)))AND(x'')) IN ())); -- 0ms;
SELECT DISTINCT NULL FROM vt1 WHERE (CAST((~ ('')) AS TEXT)); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(NULL)))) AND (((((-1933570795, vt1.c0, vt1.lid))>=((vt0.c0, vt1.lid, vt0.c0)))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (- (vt0.c0)) COLLATE RTRIM FROM vt0, vt1 WHERE ((CASE WHEN NULL THEN 0.4340179825303202 ELSE x'e902' END IN (((0.12604275704096368)|(x'')), ((0.8839706928774512)IS NOT(0X772b0892))))); -- 0ms;
SELECT vt1.c0 FROM vt1, vt0; -- 0ms;
SELECT ALL CASE WHEN ((vt1.lid)LIKE(vt1.lid)) THEN CAST(vt1.c0 AS REAL) END, ((((NOT (vt1.lid))))!=((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0))))), ((((vt1.lid) NOTNULL)) BETWEEN (CAST(vt1.lid AS INTEGER)) AND (((vt1.lid) ISNULL))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (~ (((vt1.c0)<(vt1.c0)))) FROM vt0 WHERE ((+ (CASE WHEN 1170577364 THEN '榷ৼ' ELSE 0.931565564093675 END)));SELECT DISTINCT ((((0.06974075733571483)OR(CASE WHEN vt1.lid THEN vt1.c0 END)))AND(((vt1.lid) NOTNULL))) FROM vt0, vt1 WHERE (((((((((((((UPPER('1153868404'))AND((- (x'')))))OR(NULL COLLATE BINARY)))AND('-312495059' COLLATE NOCASE)))AND(CASE WHEN x'' THEN '516902512' END)))OR(((0.6590396838389802) ISNULL))))AND(CAST('799762766' AS REAL)))); -- 1ms;
SELECT DISTINCT ((((vt1.lid)AND(vt1.c0)))OR(vt0.c0)) COLLATE NOCASE, (((vt1.c0)AND('yj)')) IN ()), (NOT ((+ (vt1.lid)))) FROM vt1, vt0; -- 0ms;
SELECT NULL FROM vt0, vt1; -- 4ms;
SELECT DISTINCT (vt1.lid COLLATE RTRIM IN ()) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (+ (SQLITE_COMPILEOPTION_USED(vt1.c0))), (~ (((vt1.lid)!=(vt1.c0)))), COUNT(CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END) FILTER(WHERE (((vt0.c0) NOT NULL) IN ())) OVER ( PARTITION BY ((CASE vt0.c0  WHEN vt1.lid THEN vt1.lid ELSE vt0.c0 END)<=(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))), ((x'9ed1')>=(((0Xffffffffaa6d903a) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) ORDER BY ((vt1.lid)AND((+ (vt1.c0))))  NULLS LAST) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT NULL, (((((vt0.c0, vt1.c0, vt0.c0))>((vt0.c0, vt1.lid, vt1.lid)))) NOTNULL), (NOT (CASE vt0.c0  WHEN vt1.c0 THEN x'' END)) FROM vt0, vt1; -- 1ms;
SELECT ((((vt1.lid) ISNULL))OR((- (vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT SUM(LIKELY(DISTINCT vt1.c0)) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT ((((('-1739528902' IN ()))OR(((vt1.lid) NOTNULL))))OR(TRIM(DISTINCT vt0.c0))) FROM vt0, vt1 ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))AND((vt0.c0 IN (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))OR(((((vt1.lid)OR(vt1.c0)))OR(vt0.c0)))))OR(LIKELIHOOD(vt1.lid, 0.34563290931569135))); -- 0ms;
SELECT DISTINCT TRIM((vt1.c0 IN ())) FROM vt0, vt1 WHERE ((((((0.740082166567234, '-330371218', NULL)) NOT BETWEEN ((0.9759424549301597, 0.6590396838389802, 0.507337362232428)) AND (('1372364889', x'', ''))))/(((NULL)LIKE(x''))))); -- 0ms;
SELECT DISTINCT ((((((((CAST(vt1.lid AS TEXT))OR(CAST(vt1.c0 AS REAL))))OR((((vt1.lid, vt1.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.lid)) AND ((vt0.c0, vt1.lid, vt0.c0))))))OR(((((vt0.c0)OR(vt1.lid)))OR(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (((x''))<>(((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.lid)) AND ((vt1.c0, vt1.c0, vt0.c0)))))), (- (LIKELIHOOD(vt0.c0, 0.3654705317214807))) FROM vt1 LIMIT -1784249665 OFFSET -1583913945;SELECT ALL ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) COLLATE BINARY, vt1.c0, CASE CAST(vt0.c0 AS REAL)  WHEN ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)) THEN (vt1.c0 IN (vt0.c0)) WHEN (((vt1.lid, '젲>Rxb', 0xffffffffbc706bf9)) BETWEEN ((vt0.c0, vt1.c0, 'Yx-(d')) AND (('', vt0.c0, vt0.c0))) THEN ((NULL)IS('0.0')) WHEN SUM(vt1.c0) THEN ((vt1.lid)>(vt1.lid)) ELSE TOTAL(vt0.c0) END FROM vt1 WHERE (CASE NULL  WHEN 1416572298 THEN NULL ELSE 0.34247897558214324 END COLLATE NOCASE COLLATE NOCASE);SELECT ALL CASE ((((vt1.lid)OR(vt1.lid)))AND(vt1.c0))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)) THEN NULL WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN ((vt1.c0)||(vt1.lid)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN NULL END FROM vt1;SELECT DISTINCT ((((((((((((CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((vt0.c0)OR(vt1.lid)))OR(vt1.c0)))))AND('-1408485727')))OR(CAST(vt0.c0 AS BLOB))))AND(vt0.c0 COLLATE NOCASE)))AND(AVG(vt1.lid))))AND(GROUP_CONCAT(vt1.lid))), TOTAL((~ (vt1.lid))), (((vt0.c0 IN (vt1.c0))) BETWEEN (((vt1.lid)IS NOT(vt1.lid))) AND (vt1.c0)) FROM vt0;SELECT (((~ (vt1.lid)))IS NOT(NULL COLLATE RTRIM)) FROM vt1, vt0 WHERE ((- ('714508468' COLLATE RTRIM))); -- 0ms;
SELECT ALL vt0.c0 FROM vt1 LIMIT 1848053660;SELECT DISTINCT TOTAL_CHANGES(), CAST((((-4.47003137E8))>((vt1.c0))) AS NUMERIC), vt0.c0, TOTAL(vt0.c0) OVER (), (((((vt1.lid)OR(vt0.c0)), ',h', CAST(vt1.c0 AS BLOB)))>((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)), ((((vt0.c0)AND(vt1.c0)))AND(vt1.lid)), vt1.c0))) FROM vt0, vt1 WHERE (((CAST(NULL AS TEXT))>=((+ (NULL))))); -- 0ms;
SELECT DISTINCT ((((((((x'')AND(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.lid)))))AND(((vt0.c0)OR(vt1.c0)))))AND((+ (vt1.c0)))))AND(COUNT(*))) FROM vt0, vt1 WHERE (((((((((NULL COLLATE RTRIM)OR(CAST(x'' AS NUMERIC))))AND(((NULL)/(0.4043463983551522)))))AND(((x'') NOT NULL))))AND((('698230195')<('3ᷰK.(z\nhG'))))) GROUP BY CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))  WHEN ((vt0.c0) ISNULL) THEN (((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.c0))) END HAVING (((((vt1.c0))<((vt1.c0))))==(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))); -- 1ms;
SELECT DISTINCT SUM(((x'') BETWEEN (vt1.c0) AND (vt1.c0))), LIKELY(DISTINCT ((vt1.c0)>=(vt1.lid))), LOWER(0.3074826412572833) COLLATE RTRIM, ((((CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)OR(((vt0.c0)>(vt0.c0)))))OR(UNICODE(vt1.c0))), CAST(QUOTE(vt0.c0) AS BLOB) FROM vt0, vt1 GROUP BY (CASE 0.5109179774570728  WHEN vt0.c0 THEN vt1.c0 END IN ((((vt1.lid, vt0.c0, vt1.lid))<((vt0.c0, vt0.c0, vt1.lid))), (NOT (vt1.c0)))) HAVING CASE (vt1.c0 IN (vt1.c0))  WHEN COUNT(*) THEN 0.4628225433537795 END ORDER BY vt0.c0 DESC  NULLS FIRST; -- 4ms;
SELECT DISTINCT (('85H')*(((vt1.lid) NOTNULL))), vt1.lid COLLATE NOCASE, GROUP_CONCAT(x'') OVER () FROM vt1, vt0; -- 0ms;
SELECT ((((- (vt1.lid))))>((0.14566063441448063 COLLATE NOCASE))) FROM vt0;SELECT DISTINCT ((((vt1.c0) NOTNULL)) IS TRUE) FROM vt1, vt0 WHERE (CASE WHEN CAST(x'' AS NUMERIC) THEN 0x1133470e COLLATE BINARY ELSE (('908448108')/(-1.73589593E8)) END); -- 1ms;
SELECT ALL (+ ('')) FROM vt0, vt1 GROUP BY ((UNLIKELY(vt0.c0))&(((vt1.lid) ISNULL))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (((- (vt0.c0))) NOT BETWEEN (((vt0.c0)!=(vt0.c0))) AND (((vt1.lid)!=(-1.710178161E9)))), CAST(x'' AS NUMERIC), (((COUNT(*), vt1.c0, ((((((((vt0.c0)OR(vt1.lid)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))<>((vt0.c0 COLLATE NOCASE, ((vt1.c0)/(vt1.c0)), ((vt1.lid)*(vt1.lid))))) FROM vt1, vt0 WHERE (((CASE NULL  WHEN 'Ord_v/\ncj' THEN '' ELSE 'n\r^4A ' END)<<(CASE 0X40357dc5  WHEN 'F㫀f43^h' THEN '0.14566063441448063' WHEN x'' THEN 0.6027575074749165 WHEN 0.34247897558214324 THEN '-173589593' ELSE -1814037992 END))); -- 0ms;
SELECT DISTINCT SQLITE_VERSION(), ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt1.lid)!=(vt1.lid)))), vt1.c0 FROM vt1, vt0; -- 0ms;
SELECT (- ((- (vt1.lid)))) FROM vt0, vt1; -- 0ms;
SELECT ALL CASE vt1.lid  WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) THEN vt1.lid ELSE IFNULL(vt1.lid, vt0.c0) END FROM vt1, vt0; -- 0ms;
SELECT ALL ((((((vt1.lid)OR(vt1.lid)))OR(vt1.c0))) BETWEEN (NULL) AND ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), json_array_length(LIKELY(vt1.lid)), ((json('TW搧I⃿'))GLOB((((vt0.c0))=((vt1.lid))))) FROM vt1, vt0 WHERE (CAST(-1.747941169E9 COLLATE RTRIM AS NUMERIC)) GROUP BY vt1.lid HAVING ((((((((((vt0.c0)IS NOT(vt1.c0)))AND(json_object(vt1.c0, vt0.c0))))OR(0.22709060247489266)))AND('')))AND((((vt1.lid))>=((vt0.c0))))); -- 0ms;
SELECT ALL CASE AVG(vt1.c0)  WHEN ((vt1.lid)GLOB(vt0.c0)) THEN ((vt0.c0)>>(vt1.lid)) END FROM vt1, vt0 WHERE (((x'')OR(((x'') NOTNULL)))); -- 0ms;
SELECT ALL (~ ((((vt0.c0))<>(('Ir{x买c'))))) FROM vt1, vt0 WHERE ((((('-473172231')AND(((((((((x'')AND(0Xffffffffe3952edb)))AND(x'')))AND(0.4089829311243113)))OR('-167262158')))))AND(('-476762405' IN (-536316371, 0.5109179774570728))))); -- 4ms;
SELECT DISTINCT vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((((x'') ISNULL))*(((NULL) NOT BETWEEN ('1729836362') AND ('-652124529'))))); -- 0ms;
SELECT ALL x'8c7a7d1a' FROM vt0 WHERE ((((((9.73529809E8)) NOT BETWEEN (('uodA')) AND ((NULL))))%((+ ('1661193146'))))) GROUP BY (((((vt0.c0)OR(vt1.lid)))AND(vt0.c0)) IN ((NOT (vt0.c0)), (+ (vt1.c0))));SELECT ALL ((x'') BETWEEN ((- (vt1.c0))) AND (((vt1.lid)<(vt1.c0)))), CASE CAST('258111460' AS INTEGER)  WHEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt0.c0 END, (NOT (((vt1.lid) IS FALSE))) FROM vt0;SELECT DISTINCT ((((ABS(DISTINCT vt0.c0))OR((+ (NULL)))))AND(vt1.c0 COLLATE RTRIM)) FROM vt1 WHERE ((((((NULL IN (0.44808338187953567)))OR((('')<>(0.695838166945912)))))AND((+ ('0.3515439434228612')))));SELECT DISTINCT '2-q20e&*y' FROM vt0; -- 1ms;
SELECT (NOT (((((vt0.c0)AND(vt1.lid)))AND(vt0.c0)))) FROM vt0;SELECT ALL PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.lid)))) FROM vt0, vt1 WHERE (((((0.34247897558214324) BETWEEN ('955897805') AND (x'')))&(((0.9198861548426487) NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT vt1.c0 COLLATE NOCASE, CAST(CASE vt1.lid  WHEN vt1.lid THEN NULL END AS INTEGER), ((TYPEOF('322925664')) ISNULL) FROM vt0 WHERE ((((x'3302', x'9d99', '-341685826')) NOT BETWEEN (((~ (x'')), (x'' IN (x'')), NULL)) AND ((((0.7718069791714888) BETWEEN ('1287339209') AND (NULL)), TYPEOF(0.25030277430366876), ((0.3081102769970707)|('-1674253234'))))));SELECT DISTINCT AVG(CAST(vt1.lid AS INTEGER)) OVER () FROM vt0, vt1; -- 1ms;
SELECT ALL vt0.c0 FROM vt1 GROUP BY ((CAST(vt1.c0 AS BLOB)) IS TRUE), ((x'48ac') IS FALSE), CAST((((vt0.c0))>((vt1.lid))) AS INTEGER) HAVING '0.14566063441448063';SELECT DISTINCT (((((NULL)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0)))) IS FALSE) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT x'', CAST(((0.882315616734904) BETWEEN (vt1.lid) AND (vt1.lid)) AS BLOB), (((vt1.c0, vt1.c0, vt1.lid)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (x'') AND (vt1.lid)), (('-I焎櫯') BETWEEN (vt1.lid) AND (vt1.lid)), (+ (vt1.lid)))) AND ((0.41252233500615754, (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt1.c0 END))) FROM vt1;SELECT DISTINCT MIN(((vt1.lid) NOT NULL)) FROM vt0, vt1 WHERE (((((NULL)<<(0.6690751740993474)))/(((NULL)>('0Y綨c'))))); -- 0ms;
SELECT ALL (CASE vt1.lid  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid END IN (LOWER(vt1.lid), ((vt0.c0)<>(vt1.lid)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.lid, (((vt0.c0, vt1.lid, vt1.lid)) NOT BETWEEN ((((((((((vt1.lid)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((CAST(x'' AS TEXT), vt1.lid, CAST(vt1.c0 AS TEXT)))), (~ (LOWER(DISTINCT 0.021658736818622515))) FROM vt1;SELECT CASE WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN CASE WHEN '0.9638754462471055' THEN vt1.lid WHEN vt0.c0 THEN vt1.lid WHEN vt1.c0 THEN vt0.c0 END WHEN NULLIF(DISTINCT vt1.lid, 'hil<O0_') THEN ((((vt1.lid)OR(vt0.c0)))OR(vt1.lid)) WHEN ((vt1.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)) WHEN ((((((((((((x'')OR(vt0.c0)))AND(vt1.c0)))AND(vt1.lid)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0, vt1.lid, vt1.lid)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.lid)) AND ((vt1.c0, vt1.lid, vt0.c0))) WHEN ((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)))OR(vt1.lid)))OR(vt1.lid)) THEN ((vt0.c0)>>(vt0.c0)) END FROM vt0;SELECT DISTINCT (vt1.lid COLLATE BINARY IN (vt1.c0 COLLATE NOCASE)), 0.917379404521286, LIKELY((- (vt1.c0))), (((HEX(vt1.lid)))<=(((+ (vt0.c0))))), DENSE_RANK() OVER ( ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS LAST) FROM vt0, vt1; -- 1ms;
SELECT ALL vt1.c0 FROM vt1, vt0; -- 0ms;
SELECT ALL (((((vt0.c0, vt1.lid, vt1.lid, vt0.c0, vt0.c0))<(('48515402', vt1.lid, vt1.lid, vt1.lid, vt1.c0))))-((vt0.c0 IN ()))) FROM vt0, vt1 WHERE (UPPER(CASE WHEN 1.7976931348623157E308 THEN 0.44165947678239803 ELSE 0.9592034527411338 END)) ORDER BY ((~ (vt1.c0)) IN ()) DESC, (- (CASE NULL  WHEN vt1.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) LIMIT -1395410622 OFFSET -2058891211; -- 1ms;
SELECT DISTINCT (((((((('')AND(x'7d61')))AND(CAST(vt1.c0 AS BLOB))))OR(vt1.lid)))OR((vt1.lid IN ()))) FROM vt0 WHERE ((((((((((+ (NULL)))OR(0.24408627975901376)))OR(CAST('-665123441' AS TEXT))))AND((-1.8202138E8 IN ()))))AND(((5.37536797E8)<>(x'fb3c')))));SELECT ALL (+ (vt1.c0 COLLATE RTRIM)) FROM vt0, vt1 WHERE (((((((((((((((x'') NOT NULL))AND(CAST(NULL AS BLOB))))AND(NULL)))OR(((x'')||(NULL)))))AND((('㈠R<f)') BETWEEN (0.5285137727189836) AND ('/ऴ')))))OR((('id')OR('907714566')))))OR(CAST(0.5591804017263929 AS INTEGER)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((vt1.lid IN (vt1.lid))) OVER () FROM vt0;SELECT DISTINCT vt0.c0 FROM vt0, vt1 GROUP BY CASE WHEN CAST(vt1.c0 AS REAL) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) IS TRUE) THEN vt1.lid COLLATE BINARY WHEN ((vt0.c0)+(vt1.lid)) THEN (vt0.c0 IN ()) ELSE vt1.lid END, ((((0.30587371509882855)OR(((((vt1.lid)OR(vt0.c0)))OR(vt0.c0)))))AND(((NULL)AND(vt0.c0)))), CAST(LOWER(DISTINCT x'') AS BLOB) HAVING SQLITE_SOURCE_ID() COLLATE NOCASE; -- 1ms;
SELECT DISTINCT GROUP_CONCAT((((vt1.c0))<=((vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((((((((((vt1.lid)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.lid)))AND(vt1.c0)))) AND ((((x'') ISNULL)))) FROM vt1 INNER JOIN vt0 ON CASE CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.lid THEN vt1.c0 WHEN x'c106' THEN vt1.c0 ELSE vt1.lid END  WHEN CASE WHEN vt1.lid THEN vt1.c0 END THEN (NOT (x'686c')) WHEN ((vt1.lid) BETWEEN (0.47851551911801904) AND (vt1.lid)) THEN NULL WHEN vt1.lid COLLATE NOCASE THEN ((((vt0.c0)OR(vt0.c0)))OR('')) ELSE ((vt1.c0)<=(vt1.lid)) END WHERE (CAST((((('')AND('.')))AND(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((json_patch(vt1.c0, NULL))<=(((vt1.c0)||(vt0.c0)))), (+ ((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))), (COUNT(vt1.c0) IN (((vt1.c0)|(vt0.c0)), (~ (vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT ALL (COUNT(*) IN ()) FROM vt0 WHERE (x'd521'); -- 0ms;
SELECT DISTINCT (((vt1.c0))<=((CAST(vt1.c0 AS INTEGER)))) FROM vt1; -- 0ms;
SELECT ALL vt0.c0, vt0.c0, (((CASE WHEN vt0.c0 THEN vt1.lid ELSE 7.57783543E8 END))<((vt1.lid))) FROM vt1, vt0 WHERE ((NOT ((NOT (-2073548189))))); -- 0ms;
SELECT DISTINCT (((((vt0.c0)/(vt0.c0))))==(((vt1.lid IN (vt0.c0))))) FROM vt1;SELECT ALL vt0.c0 FROM vt1;SELECT (((((('908448108')OR(vt0.c0)))OR(vt1.lid)))OR('-330371218' COLLATE BINARY)), ((vt1.lid)&(((vt0.c0) IS TRUE))), ((vt1.lid COLLATE BINARY)==((~ (1491597633)))) FROM vt0, vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT SUBSTR(COUNT(*), ((vt1.lid)>>(vt1.c0))), RANK() OVER (), ((((vt0.c0)<(x''))) NOT BETWEEN (vt1.lid) AND (((vt0.c0)OR(vt0.c0)))) FROM vt0, vt1 WHERE (CAST((('-911201710')=(x'06f0')) AS INTEGER)) ORDER BY vt1.lid ASC; -- 0ms;
SELECT CASE vt0.c0  WHEN ((vt0.c0) IS TRUE) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.lid)))AND(vt0.c0)))AND(vt1.lid)) END FROM vt0 WHERE (json_quote((NULL IN ('')))) LIMIT -1710178161 OFFSET -951212542;SELECT DISTINCT 0x6a55882c FROM vt1; -- 0ms;
SELECT ALL ((((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))))OR(((vt1.lid) ISNULL))))AND(AVG(vt0.c0))))OR((vt0.c0 IN ()))) FROM vt1, vt0 WHERE ((((x'ec93' IN ())) BETWEEN (CASE '235023217'  WHEN '1212050359' THEN x'' ELSE x'fc85' END) AND ((((1983031108, 0x45c597d4, NULL)) BETWEEN ((0.6031408471412933, x'', 0Xfffffffff1e913a4)) AND ((',O', 0Xffffffffa5ffe273, 0.27513652064621386)))))); -- 0ms;
SELECT DISTINCT LAG((((vt1.lid)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)))) AND (((+ (vt1.lid))))), (((vt1.lid, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.lid)|(x'f84f')), ((((vt1.lid)AND(vt1.lid)))AND(vt1.lid)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((0x671b354a)AND(vt1.lid)), ((vt1.lid) NOTNULL)))), CAST(((vt1.lid)==(vt1.lid)) AS REAL)) OVER () FROM vt1 WHERE (((0.04922641538568873 COLLATE NOCASE) NOTNULL)) LIMIT 1887500619 OFFSET -493809389; -- 0ms;
SELECT ALL ((MIN(vt1.lid)) BETWEEN (CASE vt1.lid  WHEN vt1.lid THEN vt1.lid END) AND (CAST(vt1.c0 AS INTEGER))) FROM vt0, vt1 GROUP BY ((((((((UNICODE(vt1.c0))OR(0.9451377484929685)))AND((vt0.c0 IN ()))))AND((vt0.c0 IN ()))))AND(((((vt1.c0)AND(vt0.c0)))OR(vt1.lid)))), CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC), vt0.c0;SELECT LAST_VALUE(vt1.c0) OVER (), (((((0.7719169386055122)OR(vt1.lid)))AND('Ie')) IN ((- (vt0.c0)))), vt0.c0 COLLATE RTRIM FROM vt1;SELECT DISTINCT AVG((vt1.lid IN ())) OVER (), ((((vt1.lid)||(vt1.lid)))/((+ (vt0.c0)))), ROUND(((vt0.c0)>=(vt1.lid)), ((vt0.c0) IS TRUE)) FROM vt0, vt1; -- 0ms;
SELECT (((vt1.lid, vt1.c0, vt1.lid)) NOT BETWEEN (((vt1.c0 IN (vt1.c0)), ((vt1.lid) BETWEEN ('.qv7') AND (vt1.c0)), CAST(vt1.c0 AS TEXT))) AND (((vt0.c0 IN ()), ((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.lid COLLATE RTRIM))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (+ (x'5b4a')), ((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR(COUNT(*))))OR((vt1.c0 IN ()))))OR(LIKELY(vt1.lid))))AND(((vt1.c0)LIKE(vt1.c0)))), LAST_VALUE(vt0.c0) OVER (), SUM((NOT (vt1.lid))), ((SUM(vt1.c0))|(((vt1.c0)IS NOT(vt1.c0)))) FROM vt0, vt1 WHERE (((NULL) ISNULL)); -- 0ms;
SELECT ALL (CASE vt1.lid  WHEN vt1.lid THEN vt0.c0 END IN (((vt1.lid) IS TRUE), SUM(0.20153502220465436), ((vt1.c0)LIKE(vt1.c0)))) FROM vt1, vt0 WHERE ((((x'e392' COLLATE NOCASE, (('	(O4ﶙ') BETWEEN (0.843131639976008) AND (NULL)), (('nXP!豘')=(0.22161765469821648))))>=(((('扪9')AND('')), 'Uq' COLLATE NOCASE, ((NULL)AND(0.9765746226564482)))))); -- 1ms;
SELECT ALL MIN(CAST(vt1.lid AS INTEGER)) FROM vt1 WHERE (((('')) NOT BETWEEN (((x'2fc5' IN ()))) AND (((-0.0 IN (NULL)))))) ORDER BY (((vt1.lid)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (((((vt1.c0))>((0.20547865034683566)))))) ASC;SELECT ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND (((((vt1.lid)) NOT BETWEEN ((vt1.c0)) AND ((vt1.lid)))))); -- 0ms;
SELECT ALL (((ABS(NULL)))>((((((((((vt0.c0)OR(x'')))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.c0))))), CAST((((vt1.lid, vt1.c0, vt1.lid))>((vt1.lid, vt1.lid, vt1.lid))) AS REAL), 0.8611640883344647 FROM vt0, vt1 WHERE (TYPEOF(DISTINCT ((x'')>(0.924762988913054)))); -- 0ms;
SELECT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) NOTNULL) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt0.c0))) ISNULL), CASE CAST(0.41252233500615754 AS REAL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END THEN ((vt0.c0)<=(vt0.c0)) ELSE (x'' IN ()) END, (((((((((((((((vt1.c0, NULL, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.lid, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(CAST(vt1.c0 AS TEXT))))OR(((vt1.lid)AND(vt0.c0)))))AND(((vt1.lid)LIKE(vt1.c0)))))OR(SUM(vt1.lid))))OR(((vt1.lid)=(x'')))))AND(((vt1.c0)<('-845807869')))) FROM vt1 GROUP BY ((((((vt0.c0)AND(vt0.c0)))AND(vt1.lid))) NOT BETWEEN (((vt1.lid) ISNULL)) AND ((NOT (vt1.c0)))) HAVING (((vt0.c0, vt1.lid, vt1.lid, vt1.lid, vt1.lid)) BETWEEN ((((vt1.lid) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), LIKELY(vt0.c0), ((vt1.lid)<(vt1.c0)), (vt0.c0 IN ()))) AND (((~ (vt1.c0)), ((vt0.c0)=(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), ((((vt1.lid)OR(vt0.c0)))AND(vt1.lid)), ((vt0.c0)-(vt1.lid))))) ORDER BY ((((vt1.lid)>=(vt1.lid))) IS TRUE);SELECT DISTINCT ((CAST(vt1.lid AS BLOB)) IS FALSE) FROM vt1, vt0 WHERE ((~ ((+ (1070833632))))); -- 0ms;
SELECT CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS NUMERIC) THEN MIN(vt0.c0) ELSE (+ (x'506c')) END, COUNT(*), '샹!', ((((vt0.c0)AND((((vt1.c0, vt0.c0, vt0.c0))<=((vt1.lid, vt1.c0, vt1.lid))))))AND((- (vt1.lid)))), ROW_NUMBER() OVER () FROM vt1, vt0 WHERE (((((x'')IS(-1961658013))) BETWEEN ((('1272926927') BETWEEN (NULL) AND ('[\r䋱EF!N'))) AND ((('׊K&匈4P') NOT NULL)))); -- 0ms;
SELECT DISTINCT TOTAL(CAST(vt1.c0 AS INTEGER)), (((((((((NOT (vt1.lid)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((~ (vt1.c0)))))OR(vt1.c0)))OR(((vt0.c0)OR(vt0.c0)))), GROUP_CONCAT(TOTAL_CHANGES()) OVER () FROM vt0, vt1 WHERE ((((((x'')) BETWEEN ((x'')) AND ((NULL)))) NOTNULL)); -- 0ms;
SELECT ALL ((vt1.lid COLLATE BINARY) NOT BETWEEN ((vt1.c0 IN ())) AND ((+ (vt0.c0)))) FROM vt0;SELECT ALL TOTAL(((vt1.c0)/(vt0.c0))), vt0.c0, (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt1 WHERE (((((('', x'', x'', NULL, 'ꁙZ')) NOT BETWEEN ((0X3fa7ebe3, 0Xffffffffd0f6ffa3, '-473172231', x'', '891238134')) AND ((NULL, x'69a3', x'', 0.5515087644181171, '.z'))))!=(((((((((((((0xffffffffb549fa86)OR(x'')))OR(0.4089829311243113)))OR(0.4957972265989764)))OR(x'')))OR(x'')))AND(NULL)))));SELECT DISTINCT ((x'')OR((vt1.c0 IN ()))), MAX(HEX(vt0.c0)), COUNT(*) FROM vt1, vt0 NOT INDEXED ORDER BY (((RTRIM(vt1.lid)))<=((vt0.c0)))  NULLS FIRST; -- 0ms;
SELECT 0.8482863089262355 COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW), LIKELY(vt0.c0), CASE WHEN (((vt0.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) THEN ((vt1.lid) NOT BETWEEN (x'ce1d') AND (vt1.lid)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END FROM vt1, vt0 WHERE ((((x'' IN ('1729836362')))IS NOT(((((((((NULL)AND(-486515170)))AND(0.2850904005693028)))AND(0X79c210ad)))AND('347500274'))))); -- 1ms;
SELECT DISTINCT ((NULL)AND(((((vt0.c0)AND(vt1.lid)))AND(vt0.c0)))), CASE WHEN CAST(vt1.lid AS INTEGER) THEN CAST(vt1.c0 AS REAL) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.lid THEN vt1.c0 ELSE vt0.c0 END WHEN CAST(vt1.lid AS NUMERIC) THEN '109668791' END, vt1.c0 FROM vt0, vt1 WHERE (CAST(((0.8482863089262355)IS(NULL)) AS TEXT)) ORDER BY (((~ (''))) ISNULL)  NULLS FIRST, ((((((vt0.c0)!=(vt0.c0)))AND(json_array(vt1.c0, vt0.c0, vt0.c0, vt1.c0))))OR((~ (vt1.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT 0.11187451737812426, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, x'', 0.46598238749114285, (((((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.lid, '-1133483015')) AND ((vt1.c0, vt0.c0, x'9697'))))OR(((vt0.c0) NOT NULL))))OR(UPPER(DISTINCT vt1.lid))) FROM vt1 WHERE (SQLITE_COMPILEOPTION_USED(((-1.674253234E9) IS TRUE)));SELECT ((CASE vt1.lid  WHEN vt1.lid THEN NULL END)IS(((vt0.c0)OR(vt1.c0)))), COUNT(*) OVER (), (CASE vt0.c0  WHEN vt0.c0 THEN 0.7112413299089715 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN NULL ELSE vt1.lid END IN ()) FROM vt1 WHERE ((((- (0.22368506546214206))) BETWEEN ((('id')<>(NULL))) AND (((x'') NOT BETWEEN (x'') AND ('뤙Odj<7ob'))))) LIMIT 1625810246;SELECT DISTINCT NULL, vt1.c0, 907714566 COLLATE RTRIM FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.lid)>=(vt0.c0)) COLLATE BINARY WHERE (((((0.20566158721476857)<=(NULL)))==('892262428'))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (NULL)))&('')) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (- (CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN NULL END)), 0xffffffff9b82f6bf, ((x'') IS FALSE) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (NOT (vt1.c0)), CASE WHEN ((vt1.c0) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE CHANGES() END, ((((vt0.c0)IS(vt1.lid)))>>(((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS FALSE), ((((vt0.c0)-(vt0.c0)))AND((((vt0.c0))>((vt0.c0))))), CAST(vt1.lid AS BLOB) FROM vt1 ORDER BY (((vt1.lid)>(vt0.c0)) IN ()), (((- (vt1.c0)))<(CASE vt1.c0  WHEN 0Xffffffff80be68a3 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST;SELECT ALL (((~ (vt0.c0)))<=(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.lid)))) FROM vt0;SELECT ((((((((NULL)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY, GROUP_CONCAT(CAST(0Xfffffffff5a73ba7 AS NUMERIC)) OVER (), CASE vt0.c0  WHEN vt1.c0 COLLATE NOCASE THEN CASE vt1.lid  WHEN '-154434529' THEN vt1.lid END END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(NULL AS NUMERIC) FROM vt0 WHERE (((((0.5116556054070941) NOT BETWEEN ('-1563839651') AND (-1142360664))) NOT BETWEEN (CAST(x'5aeb4829' AS REAL)) AND (((((0.2910177031077946)AND(0xfffffffffcc0bd9f)))AND(503781642))))); -- 0ms;
SELECT DISTINCT AVG(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) OVER (), TOTAL(vt0.c0) OVER (), CASE NULL  WHEN (('292212007')=(vt0.c0)) THEN ((vt1.c0)=(vt1.lid)) END FROM vt1, vt0 WHERE (((((((((((NULL)>('hil<O0_')))AND((0Xffffffff905eb3eb IN (x'7152')))))OR(CAST(x'' AS NUMERIC))))OR((('hil<O0_') NOT BETWEEN ('-642980359') AND (x'0da1')))))AND((((NULL, 7.57783543E8, NULL, NULL, NULL)) BETWEEN ((0.25781500470196494, NULL, 'M3', 0.504200480369385, x'')) AND ((NULL, '520069062', '-341685826', 0.7123811300725877, 0Xffffffff95a682bf)))))) ORDER BY (- (((((((((((((vt1.lid)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt0.c0)))OR(vt1.lid)))AND(vt0.c0)))) DESC; -- 1ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt1.c0)))) AND ((CASE 0.7792640431537786  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) FROM vt1, vt0 GROUP BY (((('I]*}') NOT BETWEEN ('},') AND (vt0.c0)))<(vt1.lid COLLATE BINARY)), (((~ (vt1.c0))) BETWEEN (CASE vt1.lid  WHEN vt0.c0 THEN vt1.lid END) AND (NULL)), CAST((NOT (vt1.lid)) AS REAL) LIMIT -11770859; -- 0ms;
SELECT (+ (QUOTE(vt0.c0))), (((~ (vt1.lid)))-(((vt1.lid)AND(vt1.lid)))), ((vt1.lid)*(vt1.c0)), HEX(DISTINCT TOTAL_CHANGES()), (vt1.c0 IN ()) FROM vt0;SELECT CASE WHEN vt1.lid COLLATE BINARY THEN (((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE ((vt0.c0)>=(vt0.c0)) END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)) AS INTEGER)  NULLS FIRST;SELECT DISTINCT AVG(vt0.c0) OVER () FROM vt1 WHERE (((((('|k')) BETWEEN ((x'')) AND (('1729836362'))))&(CAST('kLx''乏a' AS TEXT))));SELECT DISTINCT ((NULL) BETWEEN (vt1.lid) AND (COUNT(*))), ((CAST(vt1.lid AS REAL)) NOT BETWEEN ((- (vt0.c0))) AND (vt1.lid)), (json_array_length(vt1.c0) IN ()) FROM vt1;SELECT DISTINCT ((CAST(vt1.lid AS BLOB)) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.lid))<=((vt1.lid, '1359576262', vt1.lid)))) AND (((vt0.c0) NOT NULL))) FROM vt0, vt1; -- 1ms;
SELECT NULL FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()) FROM vt1, vt0; -- 0ms;
SELECT ALL ((((vt0.c0)OR(vt0.c0)))|((NOT (vt1.lid)))) FROM vt0;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) IS FALSE) FROM vt0 WHERE (TRIM(((0x158ebce4) IS FALSE)));SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))IS NOT(((vt0.c0) IS FALSE))) FROM vt0, vt1 WHERE ((~ (0x4d432e2e COLLATE BINARY))); -- 1ms;
SELECT CAST('Q7' AS BLOB) FROM vt1, vt0 WHERE (((('-471657187')) BETWEEN (((~ ('-652124529')))) AND ((NULL)))) LIMIT 1416572298; -- 0ms;
SELECT DISTINCT ((((vt1.c0)>(vt1.c0)))||((vt1.c0 IN ()))) FROM vt0;SELECT (((((~ (vt1.lid)))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid END)))OR((vt0.c0 IN ()))) FROM vt1, vt0 ORDER BY 802145821 COLLATE NOCASE ASC  NULLS FIRST;SELECT ALL AVG((('灠fH*l%i') NOT BETWEEN (vt1.lid) AND (vt0.c0))), ((((vt1.lid) ISNULL))>=((((vt1.c0, vt1.lid, vt0.c0))!=((vt1.lid, vt1.c0, x''))))), ((((((vt1.lid)OR(vt1.c0)))OR(vt0.c0)))LIKE(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)))) FROM vt0, vt1 GROUP BY x'bcb7', ((vt1.c0 COLLATE RTRIM)&((NOT (vt1.c0)))), (((vt1.c0)) NOT BETWEEN (((vt0.c0 IN (vt1.c0)))) AND ((CAST(vt1.c0 AS REAL)))) HAVING (+ ((+ (vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((vt1.lid COLLATE RTRIM)OR(0Xe022b71)))OR((NOT (vt0.c0)))), CASE WHEN CHANGES() THEN ('㟰瞼' IN ()) ELSE ((vt1.c0) NOT NULL) END, CAST(((vt0.c0) BETWEEN (NULL) AND (vt1.c0)) AS INTEGER) FROM vt0;SELECT DISTINCT (((vt1.c0 IN ())) BETWEEN (CASE WHEN vt0.c0 THEN vt1.lid WHEN vt1.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.lid ELSE vt0.c0 END) AND (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) FROM vt1 WHERE (((((0.17600870081845044)=(NULL)))/(((0.0)GLOB(x'')))));SELECT ALL ((NULL IN (vt1.c0)) IN (CAST(vt1.lid AS TEXT))) FROM vt0;SELECT DISTINCT vt1.lid FROM vt0, vt1 GROUP BY vt1.c0 HAVING '1110675198' ORDER BY ((((NULL)!=(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt1.lid)>=(vt0.c0))))  NULLS FIRST LIMIT -593733640; -- 0ms;
SELECT (((vt1.lid, vt1.c0, '}9', vt1.lid, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt1.lid, vt0.c0)) AND ((vt1.lid, vt0.c0, vt0.c0, '\7PLOAVb', vt0.c0))) COLLATE RTRIM FROM vt0;SELECT ALL vt1.c0 FROM vt0;SELECT DISTINCT ((LIKELY(DISTINCT vt1.lid))OR(vt0.c0)) FROM vt0;SELECT (NULL IN (vt0.c0 COLLATE NOCASE)) FROM vt1, vt0 WHERE (NULL COLLATE BINARY) UNION ALL SELECT DISTINCT (((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))))) AND ((CAST(vt0.c0 AS INTEGER)))) FROM vt0 WHERE (((((((((('1390856618' IN ()))AND(CASE WHEN -1814037992 THEN -546686104 WHEN 0.21228807583386722 THEN 0xffffffffff4c6415 WHEN 0.135789243795145 THEN NULL WHEN x'' THEN -1.793554706E9 WHEN x'36e3' THEN x'' ELSE '1858013692' END)))AND(CAST('1046857241' AS REAL))))AND((('-1814037992') IS TRUE))))OR(((((1560995250)OR(NULL)))AND('737622220')))));SELECT DISTINCT CAST(((((0.13596431757177374)AND(vt0.c0)))OR(vt1.c0)) AS BLOB), (CAST(vt1.lid AS BLOB) IN ()), AVG(vt0.c0) COLLATE RTRIM COLLATE BINARY FROM vt1;SELECT DISTINCT ((((COUNT(vt0.c0))OR(ABS(vt1.lid))))OR(((vt1.c0) ISNULL))) FROM vt1 GROUP BY ((CAST(vt1.c0 AS BLOB))*(vt1.c0)), CASE ((vt0.c0)&(973529809))  WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)+(vt0.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt0.c0)=(vt0.c0)) WHEN (vt1.lid IN ()) THEN vt1.lid COLLATE BINARY ELSE (((0.4617956174246033)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END, '', (- ((vt1.lid IN ()))), (((NULL)) NOT BETWEEN ((((vt0.c0)<>(vt1.c0)))) AND (((NOT (vt1.c0))))) HAVING CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE;SELECT ALL (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.lid)) IN ()), ((((vt1.lid)>(vt0.c0)))+(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END)), ((((HEX(DISTINCT vt0.c0))AND(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)))OR(((((vt1.lid)OR(vt1.c0)))AND('[Gk')))) FROM vt1 WHERE ((((((NULL, '-1814037992', 'Q\r&]'))<((347500274, 4.8515402E7, NULL))))>=((('gi1\rqcz') BETWEEN ('1049787466') AND (0.9079772381076494)))));SELECT CASE WHEN (~ (vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END END, (((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))))==((COUNT(vt0.c0)))), ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.lid)))AND(vt0.c0)))OR(0.9174913390713633)))OR(vt1.c0)))OR(vt1.lid))) BETWEEN (((vt0.c0)IS(vt1.lid))) AND (((vt1.c0)<(vt0.c0)))) FROM vt0 WHERE ((~ (ABS(x'687c'))));SELECT ALL (((vt1.c0 IN ()))-((- (vt1.lid)))), ((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE), ((((((((CAST(NULL AS BLOB))OR(CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 ELSE 'l' END)))OR(((((vt1.lid)OR(vt0.c0)))OR(vt1.c0)))))AND(((0.8902022505186956)AND(vt1.lid)))))OR(((vt1.c0) NOT NULL))) FROM vt1, vt0; -- 0ms;
SELECT (((((vt1.lid IN ()))AND(CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END)))OR(('0.4617956174246033' IN ()))) FROM vt0, vt1 WHERE (CAST(((x'')GLOB(-1905539908)) AS REAL)); -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ()))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1, vt0 WHERE (((((x'343e') BETWEEN (0.4617956174246033) AND (''))) ISNULL)) GROUP BY x'' HAVING (vt1.lid IN ()) ORDER BY '-1474997372', (CAST(vt1.lid AS NUMERIC) IN ((NOT (vt1.c0)))) DESC; -- 0ms;
SELECT (((~ (vt1.lid))) NOTNULL), ((((((vt1.lid)OR(vt1.lid)))AND(x'298ebaa2'))) BETWEEN (vt1.c0) AND (vt0.c0)), (((- ('亻gwK')))*((((vt1.lid, vt1.lid, vt1.lid)) NOT BETWEEN ((vt1.c0, vt0.c0, 'h')) AND ((vt1.lid, vt1.lid, vt0.c0))))) FROM vt1, vt0 WHERE (HEX(((('.ZdgDA'))>=((-1615991744))))); -- 0ms;
SELECT DISTINCT (((((((((vt1.lid IN ()))AND(vt0.c0)))OR(COUNT(vt1.lid))))OR(vt1.lid)))OR(vt0.c0 COLLATE RTRIM)), (((((((((('wL') NOT BETWEEN (vt1.lid) AND (vt1.lid)))OR('a0FR^')))AND((vt0.c0 IN (x'')))))OR(((x'') NOT NULL))))AND(((vt1.lid) IS FALSE))), vt1.lid FROM vt0, vt1 WHERE (((CAST(0.4394835404082572 AS REAL))||(((NULL)IS(x''))))); -- 0ms;
SELECT CASE ((vt0.c0)+(vt1.lid))  WHEN ((vt1.c0) IS FALSE) THEN CASE WHEN vt1.lid THEN vt1.c0 ELSE x'fcb3' END WHEN (('-1545671392') NOTNULL) THEN (((vt0.c0)) BETWEEN ((vt1.lid)) AND ((vt0.c0))) WHEN '1739460134' THEN ((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) ELSE ((0.041141226260173136) BETWEEN (NULL) AND (vt1.c0)) END FROM vt1 LIMIT -171268772 OFFSET -334780250;SELECT DISTINCT (((vt1.lid, x'0f13', x'')) NOT BETWEEN (('', vt1.lid, ((vt1.c0) IS FALSE))) AND ((((vt0.c0)-(vt1.lid)), CAST(vt0.c0 AS INTEGER), CASE WHEN vt0.c0 THEN vt0.c0 END))), '1956367996', CUME_DIST() OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM vt1 WHERE ((((((NULL)) NOT BETWEEN ((0.9664498116616462)) AND ((0.695838166945912))))IS(((NULL) NOT NULL)))) ORDER BY (((vt0.c0)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt0.c0) AND (NULL)))) AND ((((((((((0.40077077331939337)AND(NULL)))AND(vt0.c0)))OR(vt1.lid)))OR(vt1.c0)))))  NULLS FIRST, (((vt1.c0)) BETWEEN ((((vt1.lid)*(vt0.c0)))) AND (((NOT (vt0.c0))))) DESC  NULLS LAST;SELECT DISTINCT ((vt1.c0)!=(vt1.c0)) COLLATE RTRIM, ((vt1.c0)GLOB(MIN(x''))), (- (vt0.c0)) COLLATE NOCASE, IFNULL(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.lid AS INTEGER)), (((vt1.c0 IN (vt1.c0)))AND(CAST(vt1.lid AS REAL))) FROM vt1 FULL OUTER JOIN vt0 ON (vt1.lid COLLATE BINARY IN ()); -- 0ms;
SELECT ((TYPEOF(DISTINCT vt1.lid))&(vt0.c0)) FROM vt1, vt0 WHERE ((((- ('-2013208586'))) BETWEEN ((('kp㏯0')<<('q﨟'))) AND (CAST(NULL AS REAL)))) LIMIT -47270446; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)|(x'')))))AND(HEX(DISTINCT vt0.c0))))AND('-1395410622')))AND((vt0.c0 IN ()))), (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ())) OVER ( ORDER BY (((vt1.c0 IN ()))GLOB('I}'))  NULLS LAST, (((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) DESC) FROM vt0 WHERE (((CAST(0.1744110986864964 AS INTEGER))IS NOT((0.10294823408362386 IN (0.3515439434228612))))); -- 0ms;
SELECT '0.6027575074749165' FROM vt1 WHERE (CASE (((x'a678a71c')) NOT BETWEEN ((x'')) AND ((0x6b5e7eab)))  WHEN INSTR(x'', '-2059862471') THEN CASE WHEN NULL THEN NULL WHEN NULL THEN NULL WHEN NULL THEN 0X51cca059 ELSE 0.2316114852022354 END WHEN ((x'aa08')LIKE('a0fr^')) THEN LIKELIHOOD(x'', 0.5605139476530967) WHEN 1.170577364E9 THEN CAST(x'' AS REAL) END); -- 0ms;
SELECT vt0.c0, CAST(json_insert(vt1.lid, x'', vt1.c0) AS BLOB), ((((vt1.c0)<>(vt1.c0)))|((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.lid))))) FROM vt1 WHERE ((((('2120041071')OR((((('')AND(NULL)))AND(x'')))))AND(x'' COLLATE NOCASE)));SELECT DISTINCT CASE CASE WHEN vt0.c0 THEN vt1.c0 END  WHEN CAST(vt1.lid AS INTEGER) THEN ((vt1.c0)||(vt1.lid)) WHEN x'' THEN (((('-1933570795')OR(vt0.c0)))AND(vt1.c0)) WHEN CASE WHEN x'' THEN vt1.c0 END THEN (NOT (vt1.lid)) END, ((vt0.c0)AND(vt0.c0)) COLLATE NOCASE, 0.9027633462866524 FROM vt1, vt0; -- 0ms;
SELECT LOWER(DISTINCT ((((vt1.lid)OR(vt1.lid)))AND(vt1.c0))) FROM vt0;SELECT DISTINCT (((SQLITE_VERSION()))>((((vt1.lid)<(vt1.c0))))), CAST((vt1.c0 IN (vt1.lid)) AS NUMERIC), GROUP_CONCAT('}H*MHRat') COLLATE RTRIM FROM vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(x'') FROM vt0, vt1 WHERE ((((0.3424799954568002 IN ())) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c0)IS(vt1.lid)) THEN ((vt1.c0) NOTNULL) END FROM vt1, vt0 WHERE (TRIM(0x51cca059)); -- 0ms;
SELECT DISTINCT SUM(((((vt0.c0)OR('뜙6L\r\nn矤(')))AND(vt1.lid))) OVER () FROM vt0, vt1; -- 1ms;
SELECT DISTINCT RANK() OVER (), ((((((vt1.lid)OR(vt1.lid)))AND(CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)))OR((vt1.c0 IN ()))), (((NOT (vt1.lid))) NOT NULL) FROM vt1, vt0 WHERE (((('Ll渑8')) NOT BETWEEN ((NULL)) AND ((-834026041))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((vt1.lid)<<(vt0.c0)))|(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (+ ((vt1.lid IN ()))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT 1.153868404E9 FROM vt0; -- 1ms;
SELECT DISTINCT SUM(((vt0.c0)||(vt1.lid)) COLLATE RTRIM) FROM vt1;SELECT ALL vt0.c0, (NOT (((vt1.c0)IS NOT(NULL)))), vt0.c0 FROM vt1, vt0 LIMIT -1739528902 OFFSET -2020169670; -- 0ms;
SELECT DISTINCT ((vt1.c0) NOT NULL), (vt0.c0 IN ()), DATETIME(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)), ((((vt1.lid)OR('-608408849')))AND(vt1.c0)), ((vt1.lid)<<(vt1.lid))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((x'7ffc') BETWEEN (vt1.c0) AND (vt1.lid)) IN ()) FROM vt1, vt0 WHERE (((((((0.15357439647438398)AND(NULL)))AND(x'2d21'))) NOT NULL)); -- 0ms;
SELECT COUNT(CAST(NULL AS BLOB)) OVER (), ((vt1.c0 COLLATE RTRIM)%(((746244433)GLOB(x'5c17339d')))), CASE CAST(vt0.c0 AS BLOB)  WHEN 0.21969864310950404 THEN ((vt1.lid) NOTNULL) ELSE ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)) END, CAST(UPPER(DISTINCT vt0.c0) AS NUMERIC), LIKE(((vt1.lid)<=(vt1.c0)), (((vt0.c0)) BETWEEN ((vt1.lid)) AND ((vt0.c0)))), NTILE(((json_array_length(vt1.lid)) NOT BETWEEN ((('0.5285137727189836') BETWEEN (vt1.lid) AND (vt1.lid))) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) OVER (), ((((((vt1.c0, vt0.c0, vt1.c0))>=((vt0.c0, vt1.c0, vt1.lid)))))=((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))))) FROM vt0, vt1 ORDER BY (~ (vt1.lid))  NULLS FIRST, vt1.lid  NULLS FIRST; -- 1ms;
SELECT LEAD((((((vt1.c0)IS(vt1.lid))))<>((1563252749))), (('1.&G	坜xP') IS TRUE), ((CAST(vt1.lid AS INTEGER)) NOTNULL)) OVER (), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, '876604377' FROM vt1 INTERSECT SELECT (((vt1.lid)) NOT BETWEEN ((((vt0.c0)>(vt1.c0)))) AND ((((vt1.c0)%(vt0.c0))))), LAST_VALUE(CAST((~ (vt1.lid)) AS BLOB)) OVER (), ((((vt0.c0)<>(vt0.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND ((~ (vt1.c0)))) FROM vt0, vt1 WHERE (TRIM('-1364711803', 0.11100403058280628) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS REAL)) NOTNULL) DESC;SELECT ALL TOTAL((vt0.c0 IN ())) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt1.c0 IN ()) IN ()) FROM vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT '', 0.9579311386033564)) IS TRUE)); -- 0ms;
SELECT ALL x'3b97', ((vt0.c0 COLLATE NOCASE)&(MAX(vt1.lid))), vt0.c0, ((vt1.lid) ISNULL), MAX(((vt1.lid)LIKE(vt1.c0)), ((vt1.c0)IS(vt0.c0)), '', ('0.924762988913054' IN ()), (((vt0.c0))>=((vt1.c0))), CAST('iZ7''	' AS TEXT)) FROM vt1;SELECT DISTINCT CAST(((vt1.lid) NOT BETWEEN (NULL) AND (vt0.c0)) AS TEXT) FROM vt0, vt1; -- 0ms;
SELECT AVG(AVG(vt1.c0 COLLATE BINARY)) FROM vt0 WHERE (((json_valid(x'cba34f5a'))LIKE(CASE WHEN 1 THEN 0.5109179774570728 ELSE x'' END)));SELECT DISTINCT ((TRIM(DISTINCT vt1.lid, vt0.c0))||(MIN(vt1.c0))), ((vt1.c0)IS(TOTAL(vt0.c0))), vt1.lid FROM vt1;SELECT 0x50b4234c FROM vt0 WHERE ((('246029808' COLLATE RTRIM) BETWEEN (0X938ac03) AND (((((((((NULL)OR('1423471012')))OR(x'c79b563b')))OR(x'4ca6')))AND(0.7250457225010115))))); -- 0ms;
SELECT DISTINCT TOTAL(((NULL)/(vt1.c0))) FROM vt1, vt0 WHERE (CASE IFNULL(806700520, 0.8839706928774512)  WHEN ((('/lEw!emct'))>=((0.34221810513515005))) THEN CASE WHEN '博K' THEN NULL ELSE NULL END END) LIMIT -446790084; -- 1ms;
SELECT DISTINCT ((vt1.lid) NOTNULL) COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT json_extract(GROUP_CONCAT(vt1.c0), ((vt1.c0) ISNULL)), ((CHAR(vt0.c0))>>(LOWER(DISTINCT vt1.c0))), ((((vt1.lid) BETWEEN (vt1.c0) AND (vt1.lid))) NOT BETWEEN (((((((((vt0.c0)AND(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)))AND(vt1.lid))) AND (GROUP_CONCAT(vt1.lid))) FROM vt1;SELECT ALL vt0.c0 FROM vt0 GROUP BY x'' HAVING ((CASE vt0.c0  WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END)||(((vt1.lid) NOTNULL)));SELECT DISTINCT ((0.6027575074749165)<>((vt1.c0 IN (vt1.lid, vt1.lid)))) FROM vt0 WHERE (((((0.399558179065828)OR(x'' COLLATE RTRIM)))AND((x'' IN (-454257952))))) GROUP BY (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(CAST(vt0.c0 AS REAL))))OR(((vt1.lid)!=(vt1.lid)))) HAVING 0.25869483625812906;SELECT DISTINCT (((-516228172, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, COUNT(vt0.c0), CAST(vt1.lid AS TEXT))) AND ((((vt0.c0) NOT NULL), ((vt0.c0) IS TRUE), 0xffffffffe85d95b1 COLLATE BINARY))), ((UPPER(vt1.lid))==(vt1.lid COLLATE NOCASE)), GROUP_CONCAT(((vt1.lid)IS(vt1.c0))) FROM vt0, vt1 ORDER BY ((((vt1.lid)!=(vt0.c0))) NOT BETWEEN (((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid))) AND (NULL))  NULLS FIRST, (LIKELIHOOD(vt1.c0, 0.31713962108640104) IN (CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST LIMIT 466122222; -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 'H' THEN vt1.lid WHEN vt1.c0 THEN vt1.lid END))>=((vt0.c0 COLLATE RTRIM))) FROM vt1;SELECT (GROUP_CONCAT(vt1.lid) IN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE 'p֏(ᏈSaYa' END)) FROM vt1 WHERE ('%' COLLATE RTRIM COLLATE NOCASE);SELECT DISTINCT load_extension(vt1.c0 COLLATE BINARY, (vt1.c0 IN ())) FROM vt1, vt0 WHERE (CAST(CAST('1073032455' AS NUMERIC) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt1.c0)))AND(vt1.lid)))|(((vt0.c0)!=(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE vt1.lid  WHEN vt1.lid THEN vt0.c0 END COLLATE BINARY FROM vt0, vt1 WHERE (((((0.6820784522373433) IS FALSE)) ISNULL)); -- 0ms;
SELECT DISTINCT QUOTE(vt1.lid) COLLATE RTRIM FROM vt0;SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))))AND(LAST_INSERT_ROWID())) FROM vt0, vt1; -- 0ms;
SELECT ALL '312159950' FROM vt0 WHERE (((+ ('-1543764631')) IN ('	买\ni', ((0.9519981744107349)/(x'95ba'))))); -- 0ms;
SELECT DISTINCT AVG(vt0.c0) OVER () FROM vt0 ORDER BY vt0.c0 DESC LIMIT -822378067 OFFSET -1629577014; -- 0ms;
SELECT ALL (((((vt1.c0, vt1.c0, vt1.lid)) NOT BETWEEN ((0.7409689388866442, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))*(x'')), TOTAL(((vt1.lid) NOTNULL)), (((vt0.c0, vt0.c0, 'XᧂtYH', vt1.lid, vt1.c0))>=((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))) COLLATE NOCASE FROM vt1, vt0 ORDER BY ((((vt0.c0) IS TRUE)) IS FALSE)  NULLS LAST; -- 0ms;
SELECT ALL ((0.5686541395952773)-((NOT ('')))) FROM vt1, vt0 WHERE (((((((((CASE NULL  WHEN '2Jb4t֏D6' THEN NULL END)AND((((0.22489916564203405))<>((''))))))AND(CASE WHEN 'M\nSB' THEN '-696335134' ELSE '-1755443540' END)))OR(CAST('-3xz_尟WA' AS BLOB))))OR('櫒Q''('))); -- 0ms;
SELECT vt1.c0 FROM vt1 WHERE ((- (((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT vt1.lid FROM vt1, vt0 WHERE (CAST(((('-246747955')) NOT BETWEEN (('')) AND ((NULL))) AS NUMERIC)); -- 0ms;
SELECT (vt1.lid IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)<(vt0.c0)) AS INTEGER), ((((vt1.lid) NOTNULL)) IS FALSE), DATETIME((vt1.lid IN ()), (vt0.c0 IN ()), ((vt1.c0)*(vt1.lid)), ((vt0.c0)&(vt0.c0)), ((vt1.lid)OR(vt0.c0))), vt1.c0, COUNT(*) FROM vt1;SELECT (((('1153868404')>>(vt0.c0))) NOT NULL) FROM vt1, vt0 WHERE (((0.9934239331238646)<=(x'bc8b')) COLLATE NOCASE) ORDER BY TRIM((((-2000787763)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (- (vt1.lid))) DESC, ((LIKELIHOOD(DISTINCT vt1.c0, 0.8871658429433842)) NOT BETWEEN (((vt1.c0) NOTNULL)) AND ((+ (vt1.c0)))) ASC; -- 1ms;
SELECT CAST(((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) AS NUMERIC) FROM vt0, vt1 WHERE (((((NULL)==(0.852764305570478))) IS TRUE)) ORDER BY ((vt1.lid COLLATE RTRIM)|('12')); -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '-608408849' WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)OR(((((vt1.lid)OR(vt0.c0)))AND('years,[.-vL')))))OR(vt1.lid COLLATE BINARY)))OR(MAX(vt1.lid))))OR(CASE WHEN vt0.c0 THEN vt1.c0 END)), json_insert(((((vt1.lid)OR(vt1.lid)))AND(vt1.c0)), ((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)), ((vt1.c0) IS TRUE)), CASE WHEN ((((vt1.lid)AND(vt0.c0)))OR(vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt0.c0 END END, CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 END COLLATE NOCASE, (((vt1.c0)) NOT BETWEEN ((highlight(vt1.c0, vt1.lid, vt1.lid, vt1.lid))) AND ((CAST(vt1.lid AS NUMERIC)))) FROM vt0, vt1 WHERE (CHAR((('0.8902022505186956')>=(0.5887040893713443)), (+ (0.35349378742139004)), ((x'')-('2033334976'))));SELECT DISTINCT CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT), (CAST(vt1.c0 AS BLOB) IN ((+ (vt0.c0)))), MAX(((((vt1.c0)OR(NULL)))AND(vt0.c0)), ((((vt1.c0)OR(vt1.lid)))AND(NULL))) FROM vt0;SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CASE vt0.c0  WHEN vt1.lid THEN vt1.lid ELSE x'5bdb' END)), ((vt0.c0 COLLATE NOCASE)||(((vt1.c0)OR(vt1.lid)))), NTILE((((0.5566075698163357)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt1.lid COLLATE BINARY)))) OVER () FROM vt1, vt0 LIMIT 109668791 OFFSET 1775952881; -- 0ms;
SELECT ALL CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS INTEGER) FROM vt1, vt0 WHERE (((((((('', x'', '㟰瞼', x'', 0.9664498116616462))==(('', x'', x'', NULL, -2.47899673E8))))OR((('W鳻') ISNULL))))AND(x'a2c1'))); -- 0ms;
SELECT LEAD(vt1.c0, ((((vt1.lid)>>(vt0.c0))) IS FALSE), (((vt1.c0))<=((vt1.lid))) COLLATE RTRIM) OVER (), ((NULL) NOT NULL), ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))) NOTNULL) FROM vt1, vt0 WHERE (CAST(9.08448108E8 AS INTEGER) COLLATE NOCASE); -- 0ms;
SELECT ALL NULL, vt1.c0, x'c5d6' FROM vt0;SELECT DISTINCT ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)) COLLATE RTRIM COLLATE NOCASE FROM vt1, vt0 WHERE (0x79323ac0); -- 0ms;
SELECT DISTINCT (- ((vt1.lid IN (vt1.lid)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c0, SUM(NULL), ((((vt1.c0) NOT NULL))*((((vt1.lid, vt1.c0, vt0.c0))!=((vt0.c0, vt1.lid, vt1.lid))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt1.lid) ISNULL))) AND ((COUNT(*)))) FROM vt0 WHERE ((- (0.0549966051103975 COLLATE BINARY))) GROUP BY ((((((((vt0.c0)AND(0.8369930191643967 COLLATE BINARY)))AND(((vt1.c0)>>(vt1.lid)))))OR(((vt1.lid)+(vt1.c0)))))AND(vt0.c0 COLLATE NOCASE)) HAVING x'1c32';SELECT DISTINCT ((GROUP_CONCAT(vt1.c0))AND((vt1.lid IN ()))) FROM vt0; -- 0ms;
SELECT ALL CAST((((vt1.lid, vt1.lid, vt1.c0))>=((vt0.c0, vt0.c0, vt1.lid))) AS NUMERIC), ((vt0.c0) ISNULL), (((x'9530cfa0', ((vt1.lid) ISNULL), SQLITE_COMPILEOPTION_GET(vt1.lid)))!=((vt1.lid, CAST(vt0.c0 AS BLOB), ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) FROM vt1, vt0 WHERE (((((x'8cc7790f')LIKE(0.7985185354624422)))>(0.7714448109102873))); -- 1ms;
SELECT ALL ((0.5895916134521075) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (x'')) FROM vt0 LIMIT -1458635236; -- 0ms;
SELECT ALL NTILE(((CASE vt1.lid  WHEN NULL THEN vt1.c0 WHEN 0Xffffffff92118cdd THEN vt1.lid WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END)|(CAST(vt1.lid AS INTEGER)))) OVER () FROM vt1 WHERE (((~ ('|m31864072350305810629T1162-穀')) IN ())); -- 0ms;
SELECT ALL (((vt0.c0 IN ())) NOT NULL), SUM(((((vt1.lid)AND(vt0.c0)))AND(vt1.lid))), (+ (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.lid ELSE vt1.lid END)), (~ (((vt1.c0) NOT NULL))), vt1.c0 FROM vt0 ORDER BY COALESCE(DISTINCT ((((vt0.c0)AND(vt1.lid)))AND(vt1.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST, ((((vt1.lid) IS TRUE))==(vt1.c0))  NULLS FIRST;SELECT ALL vt1.c0 FROM vt0, vt1; -- 0ms;
SELECT ALL CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))) THEN UPPER(vt1.c0) ELSE CAST(vt1.c0 AS INTEGER) END, (((vt0.c0)) BETWEEN ((AVG(vt1.c0))) AND ((vt1.c0 COLLATE BINARY))), (((((vt1.c0)AND(vt0.c0)))OR(vt1.lid)) IN (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))) FROM vt1 LIMIT -1710178161 OFFSET 878059775;SELECT DISTINCT ((((LOWER(vt1.lid))OR(((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))))OR((((vt1.lid, vt1.c0, vt0.c0))==((vt0.c0, vt1.lid, vt0.c0))))) FROM vt1, vt0 WHERE ((((((('0.021658736818622515')AND(NULL)))AND(-2053578552)))+(UPPER(NULL)))); -- 0ms;
SELECT ALL GLOB(vt0.c0, vt0.c0) COLLATE BINARY, (((COALESCE(vt1.c0, vt1.lid, '', vt0.c0)))<=((((((vt0.c0)OR(vt0.c0)))AND(vt1.lid))))), CASE CAST(vt1.c0 AS INTEGER)  WHEN 0.20153502220465436 THEN ((vt1.c0) NOT NULL) END FROM vt1;SELECT GROUP_CONCAT(NULL) OVER () FROM vt1; -- 2ms;
SELECT DISTINCT SUM((~ (vt1.lid))) FILTER(WHERE json_array(((((vt1.c0)AND(vt1.lid)))AND(vt1.c0)), json_quote(vt1.c0), ((((vt1.lid)AND(vt0.c0)))AND('2105681208')), (((vt0.c0))<=((''))))) OVER ( ORDER BY ((load_extension(vt1.c0, vt0.c0)) ISNULL) ASC), TOTAL(CASE WHEN vt1.lid THEN vt0.c0 END) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP), IFNULL(DISTINCT ((vt0.c0)*(vt1.c0)), CASE vt1.lid  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END), ((((NULL) NOT BETWEEN (vt1.lid) AND (vt0.c0)))<=(vt1.lid COLLATE BINARY)), (((~ (vt1.c0))) NOT BETWEEN ((~ (vt1.c0))) AND ((~ (vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT ALL (((vt1.c0))=((vt1.lid))) COLLATE BINARY FROM vt0, vt1; -- 1ms;
SELECT 0xffffffffc0921684 FROM vt1, vt0 LIMIT 232778941 OFFSET -1259092863; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((x'ed4f' IN ('FALSE', 0x79323ac0)) IN ())); -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) FROM vt0;SELECT DISTINCT ((((0.8363274449821232) NOTNULL))||((((vt0.c0)) BETWEEN ((0.17894625829135036)) AND ((vt1.c0))))), (((vt1.c0)) BETWEEN (((((vt1.c0))>((vt0.c0))))) AND (((vt1.lid IN ())))), vt1.lid FROM vt1 NOT INDEXED WHERE ((((0x133f7460 IN ())) BETWEEN ((NULL IN ())) AND (CAST('-1793554706' AS REAL))));SELECT DISTINCT CASE WHEN LIKELY(DISTINCT 0.7499770231451892) THEN UPPER(vt1.lid) END, 0.17207149485254103, '' FROM vt1, vt0; -- 0ms;
SELECT ALL 0.8215435543549313 FROM vt0, vt1 WHERE ((TYPEOF(DISTINCT NULL) IN ((- (NULL)), x'' COLLATE RTRIM))); -- 0ms;
SELECT (~ (LOWER(vt0.c0))) FROM vt0 WHERE ((((('1') BETWEEN (0.56658843211425) AND (NULL)))IS NOT(CASE WHEN x'aea2' THEN 0.6484251797206851 ELSE x'' END))) ORDER BY ((((vt0.c0) IS FALSE))-(((vt1.c0)=(vt0.c0)))) ASC, vt0.c0 COLLATE NOCASE ASC  NULLS FIRST;SELECT DISTINCT LEAD(TRIM(DISTINCT CASE vt0.c0  WHEN 'l' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END), COALESCE(((vt0.c0) NOT BETWEEN ('0.44165947678239803') AND (vt0.c0)), vt0.c0), ((((vt0.c0)<(vt0.c0))) ISNULL)) OVER () FROM vt0 WHERE ((~ (((((NULL)AND(0.7239788711826503)))AND(NULL))))); -- 1ms;
SELECT DISTINCT COUNT(((vt1.c0)/(0.3390691462495463))) FROM vt0, vt1 WHERE ((- (((0.4628225433537795) IS FALSE)))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)|(vt0.c0)))OR(((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c0)))))AND((NOT (vt1.c0)))) FROM vt1, vt0 LIMIT 1491597633; -- 0ms;
SELECT DISTINCT x'' FROM vt0 LIMIT 1383444287 OFFSET 1258031592; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR('292212007')))AND(vt0.c0)) COLLATE NOCASE FROM vt0, vt1; -- 0ms;
SELECT ((((((((TRIM(DISTINCT vt1.lid))OR((~ (vt1.lid)))))OR(((vt0.c0)&(vt0.c0)))))AND((vt1.lid IN ()))))OR(((vt1.lid) NOTNULL))) FROM vt0;SELECT DISTINCT ((GROUP_CONCAT(vt1.lid))|(vt1.c0 COLLATE NOCASE)), ((((NULL)GLOB(vt1.c0))) NOT BETWEEN (vt1.lid COLLATE BINARY) AND (CAST(vt1.c0 AS TEXT))), TRIM(DISTINCT vt1.lid COLLATE RTRIM) FROM vt0, vt1 WHERE ((('-752226726') BETWEEN ('') AND ('2033334976')) COLLATE NOCASE) GROUP BY ((CAST(vt0.c0 AS BLOB))||(UPPER(DISTINCT vt1.lid))); -- 1ms;
SELECT TRIM(((vt0.c0)>>(vt1.lid)), ((vt1.c0)AND(vt1.lid))), CASE WHEN CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.lid END THEN COALESCE(vt1.c0, vt1.lid, vt1.c0, '픔N') WHEN (vt1.c0 IN ()) THEN ((vt0.c0)<>(vt1.lid)) WHEN ((vt0.c0) BETWEEN (0.47522251504030966) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)) ELSE UPPER(vt1.lid) END, CASE ((vt1.lid) IS FALSE)  WHEN vt1.lid THEN (~ (vt1.lid)) WHEN ((vt0.c0)>=(vt1.c0)) THEN CAST(vt1.lid AS REAL) WHEN COALESCE(DISTINCT vt1.lid, vt1.c0) THEN vt1.c0 ELSE (NOT (vt1.c0)) END FROM vt1 GROUP BY (- (0.7074130187469934));SELECT DISTINCT (NOT ('K飅')) FROM vt0 WHERE (0.5285137727189836); -- 0ms;
SELECT DISTINCT NULL, vt1.lid, TOTAL(((vt1.lid) BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt1;SELECT ALL (((LIKELY(vt1.c0)))>(((+ (vt1.lid))))), ((((vt1.lid)||(vt1.lid))) NOT NULL), vt1.c0 FROM vt0, vt1 WHERE ((- (((((x'')OR('-587714539')))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 END)<>((+ (NULL)))) FROM vt0, vt1 WHERE ((((('b*_w!O') NOT NULL)) ISNULL)); -- 0ms;
SELECT DISTINCT UNLIKELY(vt0.c0) COLLATE NOCASE FROM vt0; -- 1ms;
SELECT DISTINCT (((vt1.lid) BETWEEN (x'') AND (vt0.c0)) IN (CASE 'sas돫'  WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END)), LAST_VALUE((((((vt1.lid))!=((vt1.lid)))) NOT NULL)) OVER (), ((((vt0.c0)>=(vt0.c0)))LIKE(((vt0.c0)>=(vt1.lid)))) FROM vt1 ORDER BY CAST((- (vt0.c0)) AS BLOB) DESC;SELECT DISTINCT NULLIF(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)), CASE 0x299e25b3  WHEN vt1.c0 THEN vt1.c0 END) FROM vt1, vt0; -- 0ms;
SELECT vt1.c0 FROM vt0 WHERE (json_remove(CASE WHEN x'' THEN 0X772b0892 WHEN NULL THEN x'b38cae71' WHEN 'qT[L' THEN -1.8202138E8 WHEN '*ኇ' THEN x'' WHEN '{%' THEN x'' END, SQLITE_SOURCE_ID())) GROUP BY -945079031 COLLATE RTRIM ORDER BY ((((CAST(vt1.lid AS TEXT))OR((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))))))AND(((((vt1.lid)AND(vt1.c0)))AND(vt1.lid))))  NULLS FIRST;SELECT ALL ((((CAST(vt1.lid AS TEXT))OR(((vt1.c0) BETWEEN (vt1.lid) AND (vt0.c0)))))OR(CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.lid WHEN vt1.lid THEN '-236383324' END)), ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (((vt1.c0) NOTNULL)) AND ((vt0.c0 IN ()))), CAST((vt0.c0 IN (vt0.c0)) AS BLOB) FROM vt0 WHERE (((((((((('-665123441' IN (x'')))AND((((('EYh[')OR(x'')))OR(x'57cd')))))OR('iQ|94')))OR((('')>>(1.858013692E9)))))OR(((0X4bfd7cb9)LIKE(''))))) GROUP BY CAST((((vt0.c0, vt0.c0, vt1.lid))>((vt1.c0, vt0.c0, NULL))) AS INTEGER);SELECT DISTINCT ((SUM(vt0.c0))IS(x'f1de')) FROM vt0 WHERE ((CASE 0.30827123215142727  WHEN x'' THEN '' END IN (CAST('-1294315942' AS TEXT), SQLITE_COMPILEOPTION_USED('-972511156')))); -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c0 AS REAL) AS NUMERIC), (AVG(vt1.c0) IN ()), (((((((vt0.c0))<((vt1.c0))))AND(TYPEOF(DISTINCT ')Z8ai吻*i'))))OR(NULL)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (CAST(vt1.lid AS BLOB) IN ()) FROM vt1 WHERE (((((((((((x'2485')OR('-1822256017')))OR('258111460')))OR('zi')))OR(0.3817312211850705)))IS(((0x445a6070) NOT BETWEEN (',G#_Pk_|') AND ('*纫◂TLt}ic'))))); -- 1ms;
SELECT ALL ((vt1.c0) NOT NULL) FROM vt0;SELECT DISTINCT ROW_NUMBER() OVER ( PARTITION BY (~ (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), ((((vt1.c0)&(vt1.c0)))%(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) FROM vt1 WHERE ((((((NULL, x'', '-1810420821'))>=((NULL, x'', '-183550514'))))<<(LIKELIHOOD(0xffffffffb2da4e5a, 0.62089632644743))));SELECT ((COUNT(vt1.c0)) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt1.c0)<<(vt1.c0)))) FROM vt1, vt0 WHERE ((((((((1.627685926E9))>=((0.7985185354624422))))OR(0.8920529843814581 COLLATE BINARY)))OR(((NULL) BETWEEN (x'') AND ('-1978727430'))))); -- 0ms;
SELECT DISTINCT json_quote(((((((((vt1.c0)AND('-1553593503')))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.lid))) FROM vt0 WHERE (((CASE x''  WHEN '-300965586' THEN 473456103 WHEN ',h' THEN x'' WHEN 'M 	rb姧' THEN '1212050359' ELSE x'' END) NOT BETWEEN (((NULL)||(NULL))) AND (CASE NULL  WHEN x'' THEN NULL WHEN '-499713158' THEN 'bCpX\n4' WHEN 0Xffffffffae0db21c THEN x'' ELSE 0X116acd27 END))) ORDER BY json_quote((vt1.c0 IN ())) DESC;SELECT DISTINCT '-126788522' FROM vt1; -- 0ms;
SELECT '0.4617956174246033' FROM vt0; -- 0ms;
SELECT DISTINCT LEAD((NULL IN (((vt1.lid) NOTNULL), CASE vt1.lid  WHEN vt0.c0 THEN vt1.lid ELSE vt0.c0 END)), (+ ((vt0.c0 IN ()))), ((((vt0.c0)LIKE(vt1.c0)))||(((vt1.c0) ISNULL)))) OVER (), GROUP_CONCAT((~ (vt0.c0)) COLLATE BINARY) OVER (), ((((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.lid)))AND(((vt0.c0) NOT NULL))))AND(x'')) FROM vt1, vt0 WHERE (((((('-S}X4c#,') NOT NULL), LIKELY(DISTINCT 0.8500507358731588), (('w	tQ毹6 -u')<=(0.24453087002633933))))==((json_array_length('.\y'), (((NULL)) NOT BETWEEN (('fZ')) AND ((-384558985))), CAST(x'' AS REAL)))));SELECT DISTINCT (COALESCE(vt1.c0, '-1435660230', vt1.lid, vt1.lid) IN (((vt0.c0) IS TRUE))), COUNT((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid)))) OVER (), ((((vt0.c0)>(vt1.lid))) IS FALSE), vt1.c0, ABS(DISTINCT NULLIF(DISTINCT x'', vt1.c0)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(0.2588928763401189 COLLATE RTRIM AS INTEGER)); -- 0ms;
SELECT DISTINCT COUNT(vt1.lid) FILTER(WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=((- (vt0.c0))))) OVER ( GROUPS json((vt1.lid IN ())) PRECEDING), (~ (((vt1.lid)GLOB('')))), ((TYPEOF(vt0.c0))IS(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) FROM vt0 WHERE (CASE WHEN ((x'') NOT BETWEEN (-726057371) AND (NULL)) THEN (x'0c8a' IN ()) WHEN CAST(0.3557768352186734 AS TEXT) THEN '0.917379404521286' COLLATE NOCASE WHEN ((((((((((((0X4cbb3cc9)AND(NULL)))AND('	')))AND(0X6ebf09fc)))OR(NULL)))OR('}걦Jp_.')))AND('537536797')) THEN (('787134715') ISNULL) END);SELECT DISTINCT (TOTAL(vt1.c0) IN (((vt0.c0) NOTNULL))), TOTAL(((vt1.lid) IS FALSE)) OVER (), MIN((((vt1.lid))<((vt1.c0)))) FROM vt1, vt0 WHERE (CAST('-863500181' AS INTEGER) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT 0.8127898526789977 FROM vt0; -- 0ms;
SELECT DISTINCT CASE 0.9592034527411338  WHEN ((vt0.c0) NOTNULL) THEN MAX(vt1.c0) WHEN ((vt1.lid)>>(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN MAX(vt0.c0) THEN vt1.lid ELSE vt0.c0 COLLATE RTRIM END, (((vt0.c0 IN (vt1.lid, vt1.c0)))==(((vt1.c0) IS FALSE))), LEAD(CAST(((((((((1.077247429E9)AND(vt1.lid)))OR(vt1.lid)))OR(vt1.c0)))OR(vt1.lid)) AS TEXT), (((-521849805)) BETWEEN ((((vt1.c0)||(vt1.lid)))) AND ((((vt1.c0)>(vt1.lid))))), (((vt1.c0)) BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.c0)))) AND (((((vt1.c0))>((vt1.lid))))))) OVER () FROM vt1 WHERE (CAST((((x'3529')) NOT BETWEEN ((NULL)) AND ((0.4029462367939489))) AS BLOB));SELECT DISTINCT (((((vt1.lid))<((vt1.lid))))/(x'')) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((+ ('' COLLATE BINARY))); -- 1ms;
SELECT DISTINCT (NOT (vt1.c0)) COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT ((CAST(vt1.lid AS NUMERIC)) NOT BETWEEN (((((vt0.c0)OR(vt1.c0)))OR(vt1.lid))) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))), (~ (vt0.c0)), CASE WHEN ((vt0.c0)<(vt1.lid)) THEN ((vt1.c0)<=(NULL)) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt0.c0 END THEN (vt1.c0 IN ()) END, vt0.c0, GROUP_CONCAT(vt1.c0) OVER ( ORDER BY (~ (((vt1.c0)%(NULL)))) DESC) FROM vt1, vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST LIMIT 782670174; -- 0ms;
SELECT ((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))==('-883310459')) FROM vt1, vt0 GROUP BY CASE ((((vt1.lid)OR(vt0.c0)))AND(vt0.c0))  WHEN (((vt1.lid, vt1.lid, vt0.c0))>((vt1.lid, vt0.c0, vt0.c0))) THEN ((vt1.lid) NOT BETWEEN ('') AND (vt0.c0)) WHEN ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)) THEN CASE WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END WHEN ((vt1.c0)*(vt1.lid)) THEN CAST(vt0.c0 AS TEXT) ELSE TRIM(vt1.c0) END, CASE CAST(vt0.c0 AS INTEGER)  WHEN 0.44165947678239803 THEN (vt1.lid IN ()) WHEN (+ (x'3544')) THEN CASE WHEN vt1.lid THEN vt1.c0 ELSE '1562282360' END WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)) THEN '<N' ELSE ((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) END, ((x'')|(vt0.c0)) COLLATE RTRIM; -- 0ms;
SELECT ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (NULL);SELECT ALL x'', RANK() OVER (), NULLIF(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END, CASE WHEN vt1.c0 THEN -2.138178799E9 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) FROM vt0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN ((((0X3e6c6233)OR('0.9541753834116896')))OR('0.6275857715441151')) ELSE (NOT (0.21946434321683028)) END);SELECT ALL (NOT ((((vt1.lid))==((vt1.lid))))) FROM vt0, vt1 WHERE ((+ (CASE WHEN 0.06682325968743219 THEN 1977512502 WHEN NULL THEN x'' WHEN '' THEN '688992467' END))) LIMIT 955897805; -- 1ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT ALL COUNT((((vt1.c0))<=((vt0.c0)))) OVER () FROM vt0, vt1; -- 0ms;
SELECT ROW_NUMBER() OVER (), ((((vt0.c0) NOT NULL))AND(((((vt1.lid)OR(vt0.c0)))OR(vt0.c0)))), (vt0.c0 IN ()) COLLATE NOCASE FROM vt1 ORDER BY vt1.c0, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) IS TRUE)  NULLS FIRST;SELECT DISTINCT ((((((vt1.lid)OR(vt1.lid)))OR(vt1.lid))) NOT NULL) FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0, 0.8071642066099894, LAST_VALUE(CAST(LENGTH(vt1.c0) AS INTEGER)) OVER (), ((AVG(vt1.lid)) IS FALSE), ((vt1.c0 IN ()) IN ()) FROM vt1, vt0; -- 0ms;
SELECT ((COALESCE(DISTINCT vt1.lid, vt1.lid))+(((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 GROUP BY vt0.c0;SELECT -19425592 FROM vt0, vt1; -- 0ms;
SELECT ALL '' COLLATE NOCASE, ((vt0.c0 COLLATE BINARY) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))) AND (vt1.lid)), (- ('MV䗨')) COLLATE NOCASE FROM vt0, vt1 WHERE ((NOT (('1135719695' IN (x'1134'))))) GROUP BY (NOT (((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0)))), LIKELY(DISTINCT (vt1.lid IN ())), (NOT (vt1.c0)) COLLATE NOCASE; -- 1ms;
SELECT UNLIKELY(CAST(vt0.c0 AS TEXT)), CASE ((vt1.lid) IS TRUE)  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END END, (+ (CASE vt0.c0  WHEN '908439154' THEN 0.8586308273551043 ELSE vt1.c0 END)) FROM vt0, vt1 WHERE (''); -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c0 AS TEXT) AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT ALL CASE WHEN (vt1.lid IN ()) THEN COUNT(*) ELSE 2083997116 END, LOWER(DISTINCT (((vt1.lid, vt1.c0, vt1.c0)) BETWEEN (('-503393030', vt1.lid, x'')) AND ((vt1.lid, vt0.c0, vt1.lid)))), vt1.c0 COLLATE RTRIM FROM vt0;SELECT CASE ((vt1.c0) ISNULL)  WHEN NULLIF(DISTINCT vt0.c0, vt1.c0) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END ELSE ((vt1.lid) NOT NULL) END FROM vt1;SELECT GROUP_CONCAT((vt1.lid IN (vt1.lid)) COLLATE NOCASE) FROM vt1, vt0 WHERE (LOWER(DISTINCT NULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT COUNT((((vt1.lid))>=((vt1.lid)))), CAST((NOT (vt0.c0)) AS TEXT), (~ ((((vt0.c0))=((vt1.c0))))) FROM vt0;SELECT CASE WHEN TRIM(DISTINCT vt1.c0, vt0.c0) THEN ((vt1.lid)||(vt1.lid)) END, '', ((((vt1.c0) NOT NULL))>>(COUNT(*))) FROM vt0, vt1 WHERE ((((NOT ('')))*(CAST(NULL AS NUMERIC)))) LIMIT -496480765 OFFSET -1408485727; -- 0ms;
SELECT CAST(NULL AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0) IS FALSE))AND(((vt1.c0)<>(vt1.lid)))), vt1.lid, SUM((((vt1.c0, '', vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt0.c0, vt1.lid, -9223372036854775808)))) COLLATE BINARY FROM vt0 WHERE (CAST((+ (1523103489)) AS NUMERIC));SELECT ((((vt1.c0) BETWEEN (vt0.c0) AND (x''))) NOT NULL), UPPER(((vt0.c0)!=(vt1.c0))), CASE CASE WHEN vt1.c0 THEN '0.882315616734904' ELSE vt1.c0 END  WHEN ((x'') ISNULL) THEN (('806700520') NOT NULL) END FROM vt0, vt1 WHERE (CAST(x'' AS INTEGER) COLLATE RTRIM) LIMIT 1627793610 OFFSET -669599886; -- 0ms;
SELECT ALL vt1.lid, AVG(((vt1.c0)AND(vt1.lid))) OVER (), (((vt1.c0)/(vt1.lid)) IN (((vt0.c0)<(vt0.c0)))) FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))%(((vt1.lid)AND(vt1.c0)))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT (- (vt0.c0))), HEX(DISTINCT '-2002301244'), ((NULL)<(((vt1.c0)IS(vt0.c0)))) FROM vt0, vt1 WHERE ((((0xffffffffc608a84c, '', 0.42791898969838105)) NOT BETWEEN ((0.7391431420418285, ((NULL)<<(0x7695db8a)), (NOT (-1.18256552E8)))) AND (('1570050695', '-1747941169', (((NULL)) BETWEEN ((7.14508468E8)) AND ((7.99762766E8))))))) GROUP BY '-476762405' ORDER BY ((vt1.lid)GLOB('')) COLLATE RTRIM; -- 3ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1 GROUP BY ((x'')==(UNLIKELY(vt1.lid))) HAVING vt0.c0;SELECT COUNT(*) COLLATE NOCASE, vt0.c0, CAST((+ (vt1.lid)) AS INTEGER) FROM vt1, vt0 LIMIT -2145311027; -- 0ms;
SELECT ((NULL)>((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))))) FROM vt0 CROSS JOIN vt1 ON ((((NOT (vt1.lid))))<((((vt1.c0)|(vt1.lid))))); -- 0ms;
SELECT AVG((((('')AND(vt0.c0)))OR(vt1.lid))) OVER (), RANK() OVER (), ((((vt1.lid) NOT BETWEEN (x'') AND (vt0.c0))) BETWEEN ((- (x'a41f'))) AND ('X첝')) FROM vt0, vt1 LIMIT -182021380; -- 1ms;
SELECT DISTINCT (((vt1.c0 IN ())) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND ((vt1.c0 IN ()))), ((((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt1.c0)IS NOT(vt0.c0)))), (- (CASE WHEN vt1.c0 THEN vt1.lid END)) FROM vt1 GROUP BY CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC) HAVING (((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))))IS(GROUP_CONCAT(vt0.c0)));SELECT ALL COUNT(*) OVER () FROM vt0 NOT INDEXED, vt1 ORDER BY CAST(((vt0.c0)<=(vt1.lid)) AS BLOB)  NULLS FIRST; -- 0ms;
SELECT DISTINCT NTILE(CASE WHEN ((vt1.lid)OR(0.8705416888767146)) THEN vt1.lid WHEN (((vt1.c0, vt0.c0, vt0.c0, vt1.lid, vt1.c0)) NOT BETWEEN ((vt1.lid, vt1.c0, vt1.lid, vt1.lid, vt1.lid)) AND ((vt1.lid, vt0.c0, vt1.lid, vt1.c0, 0X56ea52ff))) THEN vt1.lid WHEN 1.590861051E9 THEN ((vt1.lid)IS NOT(vt1.lid)) END) OVER ( ORDER BY (((NULL, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) ISNULL), ((vt0.c0)IS NOT(vt1.c0)), (+ (vt1.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, vt0.c0)) AND ((((vt1.lid)!=(vt1.lid)), (~ (vt1.c0)), CAST(vt1.lid AS TEXT), vt1.lid, ((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0))))) DESC  NULLS FIRST ROWS ((((vt1.c0)<<(vt0.c0))) BETWEEN (((vt1.c0)&(vt1.c0))) AND (-6.42980359E8)) PRECEDING), (((vt1.lid)) BETWEEN ((((vt1.c0)=(vt1.lid)))) AND (((+ (vt1.c0))))), LAST_VALUE(CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) OVER ( ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(0.8482863089262355)))OR(vt1.lid)))>=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST) FROM vt1, vt0 WHERE (CAST((('TQ')>=(-491570056)) AS INTEGER)); -- 1ms;
SELECT DISTINCT UPPER(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END) FROM vt0, vt1 WHERE (((((NULL) IS TRUE)) BETWEEN ((- (x'd5f7'))) AND (((0.1014204561380534) ISNULL)))); -- 0ms;
SELECT DISTINCT TOTAL(((vt1.lid)OR(vt0.c0))) OVER ( ROWS BETWEEN vt1.lid FOLLOWING AND GLOB((+ (vt1.lid)), CAST(vt0.c0 AS BLOB)) PRECEDING EXCLUDE GROUP) FROM vt0 EXCEPT SELECT DISTINCT CAST((vt0.c0 IN ()) AS BLOB) FROM vt1, vt0 WHERE (((1491597633)LIKE(x'')) COLLATE NOCASE) ORDER BY ((((((((((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(vt1.lid AS TEXT))))OR(LIKELIHOOD(vt0.c0, 0.5169195176723455))))AND(x'a3c4')))OR(vt1.c0)) ASC LIMIT 1246424904;SELECT DISTINCT x'' FROM vt1; -- 0ms;
SELECT ALL (((CAST(vt1.lid AS BLOB)))=((((vt1.lid) IS FALSE)))) FROM vt0 INNER JOIN vt1 ON (((((vt1.lid, vt1.lid, vt0.c0))<((vt0.c0, vt1.lid, vt1.c0))))<(vt1.lid COLLATE RTRIM)); -- 0ms;
SELECT ((((vt0.c0) ISNULL))<<(vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0 COLLATE NOCASE)AND(((vt1.c0) IS FALSE))))OR('0.0')) FROM vt0, vt1 ORDER BY (((((~ (vt1.c0)))OR(((vt1.c0)>(vt1.lid)))))OR(ABS(DISTINCT vt0.c0))); -- 1ms;
SELECT '537536797', TYPEOF('uF⮋bQLSyo'), ((CAST(vt0.c0 AS NUMERIC)) IS FALSE) FROM vt0, vt1; -- 0ms;
SELECT ALL SUM(CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN 0.005822628664318041 WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END) OVER () FROM vt1, vt0 WHERE (CASE 9.4260923E7 COLLATE NOCASE  WHEN 'XQ' THEN ((((-1.408485727E9)AND(x'db7c')))AND(1.729836362E9)) WHEN (('0.8839706928774512') BETWEEN ('44231225') AND (0.7004287433918059)) THEN ((NULL) IS TRUE) WHEN ((((NULL)OR(x'')))AND(8.0670052E8)) THEN NULLIF(0.38763936778247, 0.7641558322889553) END) UNION ALL SELECT DISTINCT CAST(((vt1.lid)LIKE(vt1.lid)) AS NUMERIC) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET('-1925483835')) IS FALSE));SELECT ALL COUNT(CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 END) FROM vt0 WHERE (ABS(((NULL)IS NOT('}dF'))));SELECT DISTINCT COUNT(vt0.c0) FROM vt1;SELECT DISTINCT (CAST(x'' AS INTEGER) IN ()) FROM vt0 WHERE (json_valid(CAST(x'' AS NUMERIC))) GROUP BY CAST(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB);SELECT CAST(CAST('5fJHMf*[9[]' AS NUMERIC) AS NUMERIC) FROM vt1, vt0 WHERE (((NULL) IS TRUE)); -- 0ms;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (TOTAL_CHANGES()) LIMIT -2059765247 OFFSET 757783543; -- 0ms;
SELECT ((((vt1.lid)/(vt0.c0)))&((vt0.c0 IN ()))) FROM vt0;SELECT DISTINCT LENGTH(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) FROM vt1, vt0 WHERE (((('~}', '908439154', x'', '[o2	', '6萦')) NOT BETWEEN (((((NULL)) NOT BETWEEN ((NULL)) AND ((0.821486899157861))), CASE WHEN -1585620089 THEN x'' WHEN x'4e402afc' THEN 1.590861051E9 WHEN 0xffffffffbbfed8ae THEN 0.29565434885008135 ELSE x'834f' END, (NULL IN ()), CAST(1238706691 AS TEXT), LOWER(0.151361250696316))) AND ((((930066958)>=(0.5109179774570728)), (('-1133483015') IS FALSE), x'684f' COLLATE RTRIM, ((x'')IS(NULL)), (((0.23373572922776287))<=((0.5230281797126433))))))) LIMIT -1534863779; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)=(vt1.lid)) AS TEXT) FROM vt0, vt1 WHERE ((((0.7985185354624422 IN (x'6974', NULL))) BETWEEN (((x'')>>(''))) AND ('-790766096' COLLATE BINARY))); -- 0ms;
SELECT ((CAST(0.9348832472391686 AS NUMERIC))==(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))) FROM vt1;SELECT vt1.c0, ((((0.363112727337502)AND((vt1.c0 IN ()))))OR(vt1.c0 COLLATE RTRIM)), RANK() OVER () FROM vt0 WHERE (((UNLIKELY(DISTINCT NULL))||(((((((((NULL)AND(NULL)))AND('-1408485727')))AND(NULL)))OR('R!')))));SELECT ((vt1.c0 COLLATE BINARY)/(CAST(x'' AS BLOB))), ((vt0.c0 COLLATE NOCASE)<=(CAST(vt1.lid AS NUMERIC))), (~ (COUNT(vt1.lid))), CASE WHEN vt1.lid COLLATE BINARY THEN ((vt1.lid)/(vt1.lid)) ELSE CAST(vt0.c0 AS NUMERIC) END, CAST(((vt1.lid)|(vt0.c0)) AS BLOB) FROM vt0;SELECT DISTINCT LENGTH(((vt1.c0) ISNULL)), '-1211622801', vt0.c0 FROM vt0, vt1 ORDER BY ((GLOB('/lew!emct', vt1.lid)) BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid ELSE vt1.lid END) AND (LIKELY(vt0.c0))); -- 0ms;
SELECT ((((vt0.c0 IN (vt1.c0))))!=((vt1.c0 COLLATE RTRIM))) FROM vt1, vt0 WHERE (UNICODE(TRIM(DISTINCT 0.11187451737812426))); -- 0ms;
SELECT ALL AVG((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid)))) FROM vt0, vt1 WHERE (((((('')OR(1651894568)))OR(x'')) IN (-1.784249665E9))); -- 0ms;
SELECT ((((vt1.lid)AND(x'd737')))OR(((vt1.c0)<>(vt0.c0)))), CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt1.lid)IS NOT(vt0.c0)) WHEN ((vt1.c0) BETWEEN (vt1.lid) AND (vt0.c0)) THEN (~ ('-349648972')) WHEN (vt1.lid IN ()) THEN '1133307197' ELSE x'd8c6' END, ((((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND (((((((((NULL)OR(vt1.lid)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.lid)))) FROM vt1, vt0 NOT INDEXED WHERE (CAST((((NULL)) BETWEEN ((0.18680055640448667)) AND (('698230195'))) AS TEXT)); -- 0ms;
SELECT ALL ((x'') ISNULL) FROM vt1, vt0; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (CAST(JULIANDAY(0.4235063967499898, x'', NULL, x'', 'x!') AS REAL)); -- 1ms;
SELECT ALL ((((vt0.c0) IS FALSE)) NOT BETWEEN (COUNT(*)) AND (GROUP_CONCAT(vt0.c0))) FROM vt0 WHERE (((((0.5263337848412016)AND(NULL)))OR(x'')) COLLATE BINARY) LIMIT 1627685926; -- 0ms;
SELECT ALL CAST(CASE vt1.lid  WHEN vt0.c0 THEN vt1.lid END AS TEXT) FROM vt1, vt0 ORDER BY (~ (0.45943122741682885))  NULLS LAST, ((((vt1.lid)<>(vt1.lid))) BETWEEN (CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 END) AND ((vt1.c0 IN ())))  NULLS FIRST LIMIT 598006030 OFFSET 1591311189; -- 0ms;
SELECT ALL (~ (((vt1.lid)OR(vt1.lid)))) FROM vt1, vt0 WHERE (0X36815693); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((vt1.lid, 785177502, vt0.c0, vt1.c0, vt1.lid)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, (vt0.c0 IN (vt1.lid)), ((0.3515439434228612) BETWEEN (vt1.lid) AND (vt0.c0)), MAX(vt1.lid), GROUP_CONCAT(vt1.lid))) AND ((((vt1.c0) ISNULL), vt1.lid COLLATE RTRIM, 0.20292588668624711, ((vt1.lid) IS FALSE), (vt1.c0 IN ())))) FROM vt0;SELECT DISTINCT (((((vt0.c0)AND(vt1.c0)))OR(vt1.lid)) IN ((+ (vt1.lid)), ((((NULL)OR(vt0.c0)))AND(vt0.c0)))), COALESCE(DISTINCT CAST(vt1.c0 AS BLOB), vt1.lid COLLATE RTRIM), ((((vt1.lid) BETWEEN (vt0.c0) AND (vt0.c0)))|(((vt0.c0) NOTNULL))) FROM vt0;SELECT DISTINCT (- ('1590861051')), (('26484316')|(0.10030502959076404)), (NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), 0.9094216657573593, (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((((vt1.lid)+(vt0.c0))))) FROM vt1 WHERE (((('' COLLATE NOCASE))<>((((0.7338029256313223) ISNULL)))));SELECT DISTINCT NTILE((+ ((- (vt1.c0))))) OVER () FROM vt1, vt0 WHERE ((('' COLLATE RTRIM)OR(0.5772125567477391))) LIMIT -288894955; -- 0ms;
SELECT ((((x'')GLOB(vt1.lid)))<<(CAST(vt1.lid AS NUMERIC))) FROM vt0, vt1 WHERE (CASE WHEN (NULL IN (NULL, '-1229309050')) THEN CASE 1491597633  WHEN x'5bd1' THEN x'' END ELSE CAST('C,ss' AS TEXT) END); -- 0ms;
SELECT ALL ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)))*(((vt0.c0)IS NOT(x'')))) FROM vt1, vt0 WHERE (((x'e141')OR(0xffffffffb6a42b00)) COLLATE BINARY); -- 0ms;
SELECT ALL (('-1133483015') NOT NULL) FROM vt0, vt1 ORDER BY (('-1428997737') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt1.lid COLLATE NOCASE)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT '-118256552' FROM vt0 WHERE (CAST(((NULL) ISNULL) AS INTEGER)); -- 0ms;
SELECT ALL CAST(((((1077247429)OR(vt1.lid)))AND(vt0.c0)) AS BLOB) FROM vt1, vt0; -- 0ms;
SELECT ALL (((vt1.lid))>=((0X301545e8))), COUNT(vt1.c0) FILTER(WHERE CASE x'2be8'  WHEN (~ (vt1.lid)) THEN (((vt1.c0, vt1.c0, vt0.c0))<=((vt1.lid, vt1.c0, vt1.lid))) ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END) OVER (), FIRST_VALUE(((CASE vt1.c0  WHEN vt1.c0 THEN x'c0ff' WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.c0 END)%(json_array_length(vt1.c0)))) OVER (), vt0.c0 COLLATE BINARY, CAST(((((vt0.c0)OR(vt1.c0)))OR(vt1.lid)) AS REAL) FROM vt1;SELECT DISTINCT LOWER((~ (vt1.lid))) FROM vt0, vt1 WHERE (CASE ((x'') ISNULL)  WHEN CASE WHEN NULL THEN -3.12495059E8 WHEN '688919077' THEN 0x410a40af WHEN 0Xffffffffda366bd1 THEN NULL WHEN NULL THEN '1077247429' WHEN NULL THEN '0.9538209235726486' END THEN (0.30587371509882855 IN ()) END); -- 1ms;
SELECT ALL vt1.lid, ((CASE WHEN '698230195' THEN vt1.c0 WHEN vt0.c0 THEN 0X54d871a4 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.lid END) NOT NULL), (((MAX(vt1.lid), ((vt1.c0)AND(vt1.lid)), ((vt1.lid) BETWEEN (vt0.c0) AND (x'940a'))))=((CASE WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0)>>(vt1.c0)), ((vt0.c0)OR(vt1.lid))))) FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('', (~ (vt1.c0)), json_array_length(vt1.c0, vt0.c0))) AND (((vt1.lid IN (vt1.lid)), ((vt1.c0)<<(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))))); -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS INTEGER)  WHEN (((vt1.lid))=((vt0.c0))) THEN ((vt1.c0) NOTNULL) END, LOWER((+ (vt1.c0))), ((x'' COLLATE RTRIM) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT ALL ((vt0.c0)*((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1 WHERE (((CASE ''  WHEN '1661193146' THEN 'UBlV\n3' ELSE NULL END) NOTNULL));SELECT DISTINCT (((vt1.lid)LIKE(vt1.lid)) IN ()) FROM vt0, vt1 WHERE ((((NULL IN (x'')))>((((('')OR(0.11060932478530905)))OR(NULL))))); -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS TEXT), ((((((vt1.lid)OR(vt0.c0)))OR(vt1.c0))) NOTNULL), (((- (vt1.lid))) ISNULL) FROM vt1, vt0; -- 0ms;
SELECT ALL AVG(vt1.lid) FROM vt1 WHERE (CAST((((x''))==((x'3dc9'))) AS NUMERIC)) LIMIT -237194822; -- 0ms;
SELECT DISTINCT FIRST_VALUE(json_array((((vt1.c0, vt0.c0, vt1.lid))<=((vt1.lid, vt1.lid, vt1.lid))), (((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))))) OVER ( ORDER BY CASE ((vt1.c0)<(vt1.lid))  WHEN NULL THEN x'2ed2' ELSE ((vt0.c0)=(vt1.lid)) END ASC, CAST(((vt1.c0)|(vt1.lid)) AS TEXT)  NULLS FIRST) FROM vt1, vt0 GROUP BY ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND((((vt0.c0, vt1.lid, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.c0, vt1.c0, vt1.lid))))))OR(vt1.c0)); -- 0ms;
SELECT ((SUM('0.4628225433537795'))<<(CAST(vt1.c0 AS BLOB))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT NULL) FROM vt0, vt1 WHERE ((((NULL)%(0.5237335138089152)) IN (x'9a93'))) LIMIT 1378500806; -- 0ms;
SELECT DISTINCT ((CAST('0.050246801499434945' AS TEXT)) NOTNULL) FROM vt0 LIMIT 787855811 OFFSET -1182302209; -- 0ms;
SELECT DISTINCT (+ (x'00e9')), (((vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((NOT (vt1.lid))))), (('-1362242170' COLLATE BINARY) BETWEEN (((vt1.lid) NOT NULL)) AND (COALESCE(DISTINCT vt1.lid, vt1.lid, vt1.c0, vt0.c0))), SUM(((vt1.lid)<=(vt1.c0))), (((vt1.c0 COLLATE RTRIM))<=(((((vt1.lid)) NOT BETWEEN ((x'6dcc')) AND ((vt0.c0)))))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1 GROUP BY ((((((((NULL COLLATE RTRIM)OR(TRIM(DISTINCT vt1.lid, 0.2287207682890754))))AND(vt0.c0 COLLATE BINARY)))AND(((vt1.c0)-(vt0.c0)))))OR(((vt1.lid) BETWEEN (vt0.c0) AND (x'')))) HAVING ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)) COLLATE NOCASE;SELECT DISTINCT (((vt1.c0, vt0.c0, AVG(vt0.c0)))>(((((vt1.lid))==((vt0.c0))), ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)), MAX(vt1.c0)))) FROM vt1;SELECT DISTINCT AVG(CASE WHEN vt1.c0 THEN vt0.c0 END COLLATE NOCASE) FROM vt1, vt0; -- 0ms;
SELECT ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid))) IS FALSE), ((((vt0.c0 IN ())))<>(((vt0.c0 IN ())))), MAX(CAST(vt0.c0 AS NUMERIC)) FROM vt1 ORDER BY (- (vt1.c0)) DESC  NULLS FIRST, (((vt1.lid IN ()))%((+ (vt1.c0))));SELECT DISTINCT (~ ((vt1.c0 IN (vt0.c0)))) FROM vt0;SELECT LIKELIHOOD(DISTINCT ((vt0.c0)>(vt1.c0)), 0.8571843994972395) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN 0.298243894962002 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.lid ELSE vt1.c0 END COLLATE BINARY, ((TRIM(DISTINCT vt1.c0, vt0.c0)) NOT BETWEEN (MIN(vt0.c0)) AND (TOTAL(vt1.lid))), ((SQLITE_VERSION()) BETWEEN (((vt1.c0)*(x'045d6dff'))) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.lid ELSE vt1.lid END)) FROM vt0, vt1 WHERE ((((x'3ff9') BETWEEN ('907714566') AND ('-1814037992')) IN ())) GROUP BY ((((((((((vt1.lid)AND(vt0.c0)))AND('-92312435')))OR(vt1.lid)))AND(vt0.c0)))!=(CAST(vt0.c0 AS INTEGER))) HAVING (((((vt1.lid, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ((- (vt0.c0))) AND ((((vt1.c0, vt0.c0, 0X6ebf09fc))>=((vt0.c0, vt1.lid, vt1.c0))))); -- 0ms;
SELECT DISTINCT SUM((((vt1.lid))>=((vt1.lid)))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((vt1.lid)<(((vt0.c0) ISNULL))) FROM vt1 WHERE (CASE WHEN CAST(x'' AS NUMERIC) THEN (('1498304062') NOT BETWEEN (x'0fbd') AND (NULL)) ELSE (x'' IN (2.5811146E8)) END);SELECT ALL ((vt1.c0 COLLATE NOCASE)|(((1491597633) BETWEEN (vt1.lid) AND (vt0.c0)))) FROM vt0, vt1 WHERE (CAST('△a' AS BLOB)); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END)GLOB((vt1.c0 IN ()))) FROM vt1 WHERE ((((((((((x'' IN (0.39385921730188633, '1627685926')))AND(((((NULL)AND(x'961a')))AND(0x2a9688b4)))))OR(0.018612587038941752 COLLATE RTRIM)))AND(('757783543' IN ()))))AND(((-1432996362)!=(NULL))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN ()) DESC, ((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 'P' THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 END)<(((vt1.c0)||(vt1.c0))))  NULLS FIRST;SELECT ((0.2916276678926515)<(((vt1.lid) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((HEX(vt1.lid))AND('㟰瞼')))AND((+ (vt0.c0)))), COUNT(*) FROM vt0 WHERE ((((((NULL)GLOB(x'd6df27caea12')), ((x'') BETWEEN (NULL) AND (0.46974724721981376)), (('-118256552')<(NULL))))<=(((NOT ('0.8611640883344647')), NULL, ((0.9654348300948851)<<(0.9619162734828952)))))) LIMIT -845807869 OFFSET 260456980;SELECT DISTINCT FIRST_VALUE(vt1.lid) OVER () FROM vt1, vt0; -- 1ms;
SELECT DISTINCT (((((vt1.lid, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt1.lid, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.lid))))IS(LOWER(vt1.lid))), vt0.c0, vt1.lid FROM vt1, vt0 WHERE ((((((0xffffffffba8c0f70, 0X62353206, NULL, x'', '-330371218'))==(('1073032455', '%f>HbD쒁', x'', 0Xffffffff93dffa18, 'xnow	HD')))) BETWEEN (CASE x'2764'  WHEN 0.25030277430366876 THEN '' WHEN 0x31130b95 THEN '\r,_hY}kM䦾' WHEN 0xfffffffff4195d5e THEN '0.7951076922153703' END) AND (CASE WHEN '-67147029' THEN 0.0011179330255021158 END))) ORDER BY (+ (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN CASE WHEN vt0.c0 THEN NULL ELSE vt1.c0 END THEN LAST_INSERT_ROWID() END FROM vt1, vt0 WHERE ((((x'')AND(955897805)) IN ((- ('-1977026896'))))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))+(vt0.c0 COLLATE BINARY)) FROM vt0, vt1 WHERE ((((((((((NOT (NULL)))AND(((0.03941032541157685) IS TRUE))))AND(((((NULL)OR(x'')))OR(NULL)))))OR('-1408485727' COLLATE RTRIM)))OR(((x'') NOT BETWEEN (x'2d3b') AND (0.38506542108277975))))); -- 0ms;
SELECT DISTINCT (((((vt1.lid))<((vt0.c0)))) BETWEEN ('1409561120') AND ((+ (vt0.c0)))) FROM vt1;SELECT ALL (((vt1.lid IN (vt1.c0))) IS FALSE) FROM vt0 WHERE (((((((((x'01b7')OR(0xffffffffcac11b97)))OR(0Xffffffffe85ed5c7)))OR(0.011513409967116583)))AND(0.917379404521286)) COLLATE BINARY) GROUP BY (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((x''))) COLLATE BINARY;SELECT DISTINCT (((vt1.lid)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt1.lid) IS FALSE)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 IN ()) IN ()) FROM vt0 WHERE (((((((((((NULL)OR('0.3515439434228612')))OR('.B\bD2Lw')))AND(NULL)))AND('-527804933')))=((('') BETWEEN ('^cuW!_n~') AND (0.08912121239398985))))); -- 0ms;
SELECT (('%)') NOT BETWEEN (vt1.c0) AND (COALESCE(DISTINCT vt0.c0, vt1.lid))) FROM vt0 WHERE ((- (NULL COLLATE RTRIM)));SELECT ALL LEAD((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()), '-436794783', COALESCE((vt0.c0 IN (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) OVER () FROM vt0 WHERE ((((NULL IN ())) IS FALSE)); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt1.c0 THEN x'' WHEN vt0.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END)=(vt0.c0)) FROM vt0, vt1 WHERE ((((((-9223372036854775808 IN (-4.7270446E7)))AND(((0x3a5ef66e)IS('-118256552')))))OR(CASE x'466938fd53b1'  WHEN x'' THEN -2113030511 ELSE '-1259092863' END))); -- 1ms;
SELECT ALL (((NULL IN ()))+('a鋂~aQL櫯')) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt1.c0, SUM((+ (vt0.c0))) OVER (), ((((vt1.lid) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL) FROM vt1 WHERE (((NULL)=(((NULL)IS('8㎲')))));SELECT DISTINCT UPPER((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid)))) FROM vt1 GROUP BY ((((NOT (vt1.c0))))<>((((((vt1.lid)AND(vt1.c0)))AND(NULL))))) HAVING CASE ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN COALESCE(DISTINCT 0.22368506546214206, vt1.lid, vt1.lid, vt1.lid) END;SELECT DISTINCT RTRIM(vt1.lid COLLATE BINARY) FROM vt0, vt1 WHERE (TRIM((~ (0.9198861548426487)), ((('>~(xyS㓫'))>((NULL))))) GROUP BY vt1.lid; -- 0ms;
SELECT ALL CAST((- (vt1.c0)) AS REAL) FROM vt1 WHERE (NULL); -- 0ms;
SELECT AVG(vt1.c0) OVER () FROM vt0, vt1 WHERE ((((('') BETWEEN (x'6a1e') AND (0.13721569012423718)))%(((('z7k?3VMD'))<(('2030830748')))))) GROUP BY (((((vt0.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0)))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt1.c0)LIKE(NULL)))) HAVING ((((((((json_quote(vt1.c0))OR(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))))AND((~ (vt1.c0)))))AND(('1161406575' IN ()))))AND(vt0.c0)) ORDER BY 0.682974138695648, CASE WHEN ((vt0.c0)>('-471657187')) THEN CAST(vt0.c0 AS INTEGER) WHEN vt1.lid THEN ((vt1.c0)-(vt1.lid)) WHEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND ('LXwp8q')) THEN CASE WHEN vt1.c0 THEN vt0.c0 END END, CASE WHEN -1784249665 THEN vt0.c0 COLLATE NOCASE ELSE ((vt1.c0)<<(vt1.c0)) END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT '-1294315942' FROM vt0, vt1 WHERE ((((((0X57e6a1ea, '1562282360', '0.15830788006823393'))>=((NULL, 0xffffffffe0ca8e23, '')))) NOTNULL)) ORDER BY (CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 END IN ()) ASC, ((vt1.lid)<<(vt0.c0)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) FROM vt0 WHERE ((~ ('z<B')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (NULL); -- 0ms;
SELECT ((CAST(vt1.lid AS TEXT)) BETWEEN (((0.2079845015570284) NOTNULL)) AND (((((vt0.c0)AND(vt1.lid)))AND(vt1.c0)))), CAST(vt1.c0 AS TEXT) COLLATE RTRIM, CAST((((vt0.c0))<=((vt1.lid))) AS TEXT) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 GROUP BY CASE WHEN vt1.c0 THEN (vt0.c0 IN ()) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.lid)||(vt1.lid)) WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(vt1.c0 AS BLOB) ELSE (vt1.c0 IN ()) END;SELECT ALL (+ (((((vt1.c0)OR(vt0.c0)))AND(vt1.lid)))) FROM vt1 WHERE ((~ (((0.4777124736326501)<<(NULL))))) ORDER BY ((NULL)|(vt1.lid COLLATE BINARY))  NULLS FIRST;SELECT DISTINCT (((vt1.lid IN (vt1.lid))) IS FALSE) FROM vt0 WHERE (((CAST(NULL AS NUMERIC)) NOT NULL));SELECT DISTINCT ((NULL) NOT BETWEEN (((((vt1.lid)OR(0.7249445309141413)))AND(vt1.lid))) AND (CASE WHEN vt0.c0 THEN vt1.c0 END)) FROM vt0, vt1 ORDER BY CASE ((vt0.c0)||(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.lid)) THEN CAST(vt1.lid AS TEXT) ELSE NULL END ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) IS TRUE)) OVER () FROM vt0, vt1; -- 0ms;
SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))OR(MAX(vt1.c0))))OR(vt1.c0)) FROM vt0 WHERE (((x'')-('-687244709')) COLLATE RTRIM) LIMIT -1655477646 OFFSET -838329772;SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt1.lid)|(vt1.lid)))) AND ((vt0.c0))) FROM vt1;SELECT DISTINCT ((NULL) BETWEEN ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0))) FROM vt0 WHERE (CASE WHEN 0.5549201005642159 COLLATE NOCASE THEN (- ('-126018360')) END);SELECT MIN(vt0.c0, SUM(vt1.lid)) FROM vt1, vt0 WHERE (((~ (x'')) IN ())); -- 0ms;
SELECT ALL ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)+(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt1 WHERE (((TRIM(DISTINCT '0.4043463983551522'))!=(UNLIKELY(DISTINCT '550801231')))) GROUP BY ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.lid) BETWEEN (vt1.c0) AND (vt1.lid))) AND (((vt1.lid) NOTNULL)));SELECT ALL GROUP_CONCAT(((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))), (((vt1.c0)) NOT BETWEEN (((('0.7718069791714888')LIKE(0Xffffffffe3cbf6f9)))) AND ((((vt0.c0)IS NOT(vt1.c0))))), 'Cq' COLLATE RTRIM FROM vt0, vt1 WHERE (((('246029808', '-173589593', NULL)) BETWEEN ((NULL, ((((NULL)OR(0.35395187735851275)))AND(NULL)), (('')<<(0.25239375939022823)))) AND ((((x'') BETWEEN (0.7415557455081789) AND (x'')), (- (-1115058913)), CASE WHEN 0.019560158816656847 THEN x'' WHEN -1945348701 THEN 0Xffffffff9906e4a3 WHEN 0.32408215846530863 THEN x'' END)))); -- 0ms;
SELECT (((vt1.c0))<=((NULL))) COLLATE NOCASE, GROUP_CONCAT(((vt0.c0)IS NOT(vt0.c0))) OVER ( GROUPS  CURRENT ROW), (((vt0.c0, vt1.lid, vt0.c0)) NOT BETWEEN ((((0.3159465059894353)!=(vt1.c0)), ((vt0.c0)<<(vt1.lid)), MAX(vt0.c0))) AND ((vt0.c0 COLLATE BINARY, vt1.c0, vt0.c0 COLLATE BINARY))) FROM vt0;SELECT DISTINCT ((vt1.c0)IS NOT(((vt1.lid)LIKE(vt0.c0)))) FROM vt0, vt1; -- 1ms;
SELECT NULLIF(DISTINCT SUM(vt0.c0), (vt0.c0 IN (vt0.c0))) FROM vt1 NOT INDEXED, vt0; -- 0ms;
SELECT GROUP_CONCAT(SQLITE_COMPILEOPTION_USED(NULL)) OVER (), ((((vt1.lid COLLATE BINARY)OR((vt0.c0 IN (vt1.c0)))))OR(((vt0.c0) IS FALSE))), ((((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c0)))IS NOT(((vt1.c0)>=(vt1.lid)))) FROM vt0;SELECT DISTINCT CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt0.c0 END COLLATE BINARY FROM vt1 WHERE ((((-1.933570795E9 COLLATE BINARY))<((('/ऴ' IN ('0.13596431757177374'))))));SELECT DISTINCT MAX(CAST(vt0.c0 AS INTEGER) COLLATE BINARY) FROM vt0, vt1 WHERE ((((NULL)) BETWEEN (((((('275473692')AND(x'')))AND('悓!%&!l[9x')))) AND ((((0.8880289543111322)LIKE(NULL)))))); -- 0ms;
SELECT ALL (((vt0.c0)!=(vt1.c0)) IN (((vt1.lid)||(vt1.lid)))) FROM vt1, vt0 GROUP BY NULL, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)<<(0.3883163885001163)) ELSE ((vt1.c0) ISNULL) END, (+ (((vt1.c0)+(NULL)))); -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.lid AS NUMERIC) AS INTEGER) FROM vt0, vt1 GROUP BY vt0.c0, CASE 0.8367088226505515  WHEN vt1.lid COLLATE RTRIM THEN ((vt1.c0)>>(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt1.c0) BETWEEN (vt1.lid) AND (vt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) THEN ((vt1.lid)>=(x'')) ELSE ((vt1.lid) IS TRUE) END, (vt1.c0 IN (vt1.c0, vt1.lid)) COLLATE NOCASE COLLATE NOCASE LIMIT -536316371; -- 1ms;
SELECT ALL (((vt0.c0)) BETWEEN ((((vt1.c0) NOT NULL))) AND ((((vt0.c0) IS FALSE)))) FROM vt1;SELECT DISTINCT vt0.c0 FROM vt1 WHERE ((((((('')|(0.32558060780781384)))OR('190051245' COLLATE RTRIM)))OR(((NULL) ISNULL))));SELECT DISTINCT ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid WHEN vt1.c0 THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END) NOT NULL) FROM vt1 WHERE (CASE WHEN ((((((((NULL)AND(x'')))AND(NULL)))OR(0.9685048192078762)))OR('屄j')) THEN CAST(x'8b0c' AS TEXT) END) LIMIT 481237869 OFFSET -1608949664;SELECT DISTINCT (((vt1.c0, vt1.lid, vt1.lid))>=((vt0.c0, vt0.c0, vt1.c0))) COLLATE NOCASE FROM vt0 WHERE (CAST((x'' IN ()) AS TEXT));SELECT DISTINCT '-266777892' FROM vt1; -- 0ms;
SELECT ALL (((((~ (vt0.c0)))OR((((0.3471518446482763, vt1.lid, vt1.c0, vt1.c0, vt0.c0))==((vt1.lid, vt0.c0, vt0.c0, vt0.c0, vt1.lid))))))AND(CASE 'z,?\r'  WHEN vt0.c0 THEN vt1.lid ELSE vt0.c0 END)) FROM vt1, vt0 WHERE (((((('-477956623'))==(('0.4340179825303202'))))AND(HEX(0.0776929751745804)))); -- 0ms;
SELECT COUNT(*) OVER () FROM vt0, vt1 WHERE (((('.YQ<(A') BETWEEN ('94260923') AND ('292212007')) IN (((x'') NOT BETWEEN ('') AND (x'8de9')), CAST(0.5600493389032273 AS REAL)))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.lid, vt1.lid, vt1.c0)) AND ((vt0.c0, NULL, vt0.c0))) COLLATE RTRIM DESC; -- 1ms;
SELECT ((((vt1.c0) NOTNULL))GLOB((((vt0.c0, vt0.c0, vt1.c0))>((vt1.lid, vt1.lid, vt1.c0))))) FROM vt1 WHERE (((x'5811') NOT BETWEEN (('-499713158' IN ())) AND (('lcd' IN ())))) GROUP BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((vt1.lid)AND(vt0.c0)))));SELECT ALL (((+ (vt0.c0)))<(((vt1.lid)<<(vt1.lid)))), x'4e50', ((((((vt1.c0)OR(vt1.lid)))AND(vt0.c0)))!=(CAST(vt1.c0 AS NUMERIC))), CAST((vt1.c0 IN (vt1.lid)) AS INTEGER), (((vt1.lid IN ())) IS FALSE) FROM vt0;SELECT DISTINCT ((rtreenode(vt1.c0, vt0.c0)) ISNULL) FROM vt1;