-- Time: 2024/06/07 12:15:33
-- Database: database24
-- Database version: 3.40.0
-- seed value: 4155753424
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
PRAGMA legacy_file_format = false; -- 5ms;
END; -- 0ms;
REINDEX RTRIM; -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (x''); -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(NULL, '', 0.7279931885683177) WHERE vt0.c0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='1103033697' WHERE HEX((vt0.c0 IN ())); -- 0ms;
PRAGMA main.cache_size = 0; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
ANALYZE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1103033697,3');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '57564'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('-941915908'), (x'a977'), (x''); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.11053236932696431; -- 0ms;
PRAGMA threads; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(1176154589, NULL); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 3ms;
UPDATE OR REPLACE vt0 SET (c0)=(x'') WHERE CAST(CAST(vt0.c0 AS REAL) AS NUMERIC); -- 1ms;
UPDATE OR ABORT vt1 SET (c0)=('-821249370'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL), (-1725981113), ('䌙T&/\nq[	'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='1176154589', c0=x'1c8b' WHERE CASE LTRIM(vt0.c0, NULL)  WHEN (vt0.c0 IN ()) THEN 0.46517543476539625 WHEN (~ (vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN ((NULL) NOT NULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN x'6d04' THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END; -- 0ms;
ANALYZE temp; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '50663'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA temp.foreign_keys; -- 0ms;
UPDATE OR FAIL vt1 SET c0=x'', c0=x'a917', c0='NX'; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 612804908); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '2868'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 1ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=896690375,7');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 551058731);\n; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA cache_spill = -4783862959069206890; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '36761'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
ANALYZE; -- 3ms;
REINDEX; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
UPDATE OR REPLACE vt1 SET (c0, c0)=(x'fadf6246', NULL) WHERE ((((~ (vt1.c0))))>((((vt1.c0)=(vt1.c0))))); -- 1ms;
PRAGMA short_column_names = false; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('n]'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.6880785440893417, ''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(0.6880785440893417); -- 0ms;
PRAGMA incremental_vacuum(2052791587); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1176154589,10');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=985203213,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 6ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'19de') WHERE (((((vt0.c0 IN (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(x'')); -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT NTH_VALUE('-821249370', (- (vt0.c0))) OVER ( ROWS BETWEEN ((('-1170056856', ((-1.725981113E9) NOTNULL), ((((vt0.c0)OR(vt0.c0)))AND('-1715332540'))))>((((vt0.c0)LIKE(vt1.c0)), CAST(0.6592320522139995 AS BLOB), ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))) PRECEDING AND (- (vt1.c0 COLLATE BINARY)) FOLLOWING) FROM vt0 WHERE (((((((((((x'') BETWEEN (-8.95532263E8) AND (x'')))AND(NULL)))AND(((0.7279931885683177)AND(179642437)))))OR(((((-1.725981113E9)AND(NULL)))AND(0.6889277064881932)))))AND((((('896690375')AND('0.6889277064881932')))OR(1103033697))))); -- 1ms;
SELECT DISTINCT 'z5pI䫾2t' FROM vt0, vt1; -- 0ms;
SELECT CAST(((vt0.c0) NOT NULL) AS NUMERIC) FROM vt0; -- 0ms;
SELECT ALL ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)>>(vt1.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0)&(vt0.c0))) NOTNULL), ((MAX(vt0.c0))!=((+ (vt1.c0)))), ((((vt0.c0)>=(vt0.c0))) NOTNULL) FROM vt0, vt1 WHERE (((((((NULL) IS FALSE))AND((('&&ᴣ')==(NULL)))))OR(TRIM(0.5845690632703855, NULL)))); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((MAX(vt0.c0, vt1.c0), (((vt1.c0, vt0.c0, vt0.c0))>=((vt1.c0, vt1.c0, vt1.c0))), vt0.c0)) AND ((((vt0.c0)<=(vt0.c0)), ((vt0.c0)*(vt1.c0)), NULL))) FROM vt0, vt1; -- 1ms;
SELECT ALL NULL FROM vt1, vt0 WHERE (((((((((NULL)OR(((1.176154589E9)||(NULL)))))OR(CAST('' AS TEXT))))OR('-1247424973' COLLATE BINARY)))AND(('n蛇\' IN ())))); -- 0ms;
SELECT DISTINCT ((CASE ''  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.5097842576260423 WHEN 0.7090172623196312 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE 0.5097842576260423 END)>((+ (vt0.c0)))) FROM vt0;SELECT ((((vt1.c0)<<(vt0.c0))) NOT BETWEEN (((vt1.c0)OR(vt1.c0))) AND ((- (vt1.c0)))) FROM vt1;SELECT CAST((('{fT') NOT NULL) AS NUMERIC) FROM vt1 WHERE (((((x'')>(0.46517543476539625))) ISNULL)) GROUP BY (NOT ((- (vt0.c0)))) HAVING ((LOWER(DISTINCT vt0.c0))|(((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'd047'))));SELECT 'Pn6' FROM vt1; -- 0ms;
SELECT DISTINCT (((+ (vt0.c0)))!=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT ((((((((((vt1.c0)OR(vt1.c0)))OR(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt1.c0) IS FALSE))))AND(SQLITE_VERSION())) FROM vt0, vt1 WHERE (CAST(NULL COLLATE NOCASE AS NUMERIC)) LIMIT -1247424973; -- 0ms;
SELECT ALL '-1715332540' FROM vt0, vt1 WHERE ((NOT (HEX(DISTINCT 0.006106807034690576)))) LIMIT -1541187333; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<(vt1.c0))) NOTNULL) FROM vt1, vt0 WHERE ((((((8.96690375E8)LIKE(NULL))))>=((((((NULL)AND(8.96690375E8)))AND(0.5845690632703855)))))) ORDER BY CAST(json_patch(vt0.c0, vt1.c0) AS BLOB) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((('-1743854106') NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) FROM vt1, vt0 WHERE (CASE WHEN (('-9223372036854775808') NOTNULL) THEN (~ (x'')) ELSE (('끎f*s') BETWEEN ('1222086315') AND (0xffffffff895fedb0)) END); -- 0ms;
SELECT ((((((vt0.c0)*(vt1.c0)))AND(((vt0.c0) IS FALSE))))OR(((vt0.c0) IS TRUE))), CHANGES(), ABS(DISTINCT TOTAL(vt1.c0)) FROM vt1;SELECT ALL '1176154589' FROM vt1; -- 0ms;
SELECT ALL LAG(LIKELY(CAST(vt1.c0 AS BLOB)), (+ (CAST(vt1.c0 AS REAL))), json_array_length(CASE vt0.c0  WHEN vt1.c0 THEN '-2090258225' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt1.c0))!=((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))))) OVER (), ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt1.c0)LIKE(vt0.c0)))))OR((~ (vt0.c0)))), load_extension(((vt0.c0)*(vt0.c0)), 699127816), vt1.c0, 'j|' FROM vt0, vt1 LIMIT -1971232545 OFFSET -1795407150;SELECT DISTINCT (((((vt0.c0))<>((vt1.c0))))>(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (NULL);SELECT ALL -2132021139 COLLATE NOCASE, ((CAST(0.5364292273850625 AS BLOB))|(CASE vt1.c0  WHEN vt0.c0 THEN 1e500 ELSE vt0.c0 END)), SQLITE_COMPILEOPTION_GET(CASE WHEN vt1.c0 THEN vt0.c0 END) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((((((((vt0.c0)OR(vt0.c0)))AND(CASE WHEN vt1.c0 THEN -268886416 ELSE vt0.c0 END)))AND(((vt0.c0)LIKE(vt0.c0)))))AND(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND(((((vt0.c0)AND(vt1.c0)))AND('H+')))) FROM vt1, vt0; -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE NULL END)), vt0.c0, ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (x'934976c9') AND (CAST(vt0.c0 AS NUMERIC))) FROM vt1 WHERE (CAST(CASE NULL  WHEN x'' THEN NULL END AS INTEGER)) ORDER BY ((((- (vt0.c0))))>((NULL))), ((vt1.c0 COLLATE BINARY) NOT NULL) ASC LIMIT 215827642;SELECT (CASE WHEN vt1.c0 THEN vt0.c0 END IN ()) FROM vt1 WHERE (TRIM(DISTINCT CASE WHEN 0.507047749523719 THEN -107061534 ELSE -2.68886416E8 END, NULL COLLATE RTRIM)) LIMIT 551058731; -- 0ms;
SELECT ALL CASE ((vt1.c0)%(vt0.c0))  WHEN CASE WHEN vt1.c0 THEN '-2133129873' END THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c0)=(vt0.c0)) END FROM vt1, vt0 WHERE (((((((x'')) NOT BETWEEN ((x'f5b0')) AND ((NULL)))))=((((x'')AND(NULL)))))); -- 0ms;
SELECT ALL CASE WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))>=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END, UNLIKELY(DISTINCT ((vt1.c0)<=(vt1.c0))), vt0.c0 FROM vt1 WHERE (0.03835068608139647) GROUP BY (((vt1.c0)AND(vt1.c0)) IN (vt1.c0 COLLATE NOCASE)) ORDER BY ((NULL) BETWEEN (((vt0.c0)=(vt0.c0))) AND (vt1.c0))  NULLS FIRST;SELECT NULL FROM vt0 GROUP BY vt1.c0 HAVING 0.11053236932696431;SELECT ALL 0.0664605555963591 FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0) NOTNULL) AS TEXT) FROM vt1 WHERE (CAST(CAST(2.15827642E8 AS TEXT) AS REAL)) GROUP BY ((((vt0.c0)IS(vt1.c0)))LIKE(((0.721015204476902) BETWEEN (vt1.c0) AND (vt1.c0)))) HAVING CASE WHEN vt1.c0 COLLATE BINARY THEN SUM(vt1.c0) ELSE ((vt1.c0)IS(vt1.c0)) END;SELECT DISTINCT ((MIN(vt0.c0)) NOTNULL) FROM vt1, vt0 WHERE (((json(x''))<<((NOT (1552548457)))));SELECT (((+ (vt1.c0))) BETWEEN (COUNT(*)) AND (CAST('0.6880785440893417' AS REAL))) FROM vt0, vt1 WHERE ((0.721015204476902 COLLATE RTRIM IN (CAST(0.10451880214656262 AS REAL)))); -- 2ms;
SELECT DISTINCT CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END FROM vt0, vt1 GROUP BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) ORDER BY 0.5423360915257281  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT x'', (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND ((vt1.c0 IN ()))), ((TYPEOF(vt0.c0)) NOT BETWEEN (179642437) AND ((((x'3b97'))<((vt0.c0))))) FROM vt0, vt1; -- 1ms;
SELECT ALL DATETIME(x'', (((vt1.c0))<=((vt1.c0))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) FROM vt1, vt0 WHERE (((((~ (NULL)), CASE x'a794'  WHEN x'' THEN NULL WHEN '&爟p' THEN x'' WHEN '' THEN '-1216181270' ELSE '0.721015204476902' END, -312946894 COLLATE BINARY))<((((0.36804341864755774) ISNULL), ('1913942559' IN ()), (0.7403302352907325 IN ('')))))) GROUP BY ((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(CAST('931996878' AS BLOB))))OR(((vt0.c0)IS NOT(vt0.c0)))) HAVING ((((((vt0.c0)AND(vt0.c0)))OR((vt1.c0 IN ()))))OR(vt0.c0)); -- 0ms;
SELECT ALL (NOT (CAST(vt1.c0 AS BLOB))) FROM vt1; -- 0ms;
SELECT ((COUNT(*))==(vt1.c0)), IFNULL(COUNT(vt0.c0), ((vt0.c0)=(vt0.c0))), MAX(((NULL)>=(vt0.c0))) FROM vt0;SELECT CAST(CAST(7.867068179011616E-4 AS BLOB) AS TEXT), (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)<=(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), vt1.c0 COLLATE BINARY, 'q0CS}'))), ((((vt0.c0)>=(vt1.c0)))IS(TYPEOF(DISTINCT vt0.c0))) FROM vt1 LIMIT -2099742228 OFFSET -903472271;SELECT DISTINCT LEAD(NULL, ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) IS FALSE), (0xffffffff8b8297eb IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) OVER ( PARTITION BY ((((((((((vt0.c0)OR('-848508769')))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))|(CASE WHEN vt1.c0 THEN vt1.c0 END)), ((NULL) NOT NULL) ORDER BY ((CASE WHEN 0.5364292273850625 THEN vt0.c0 ELSE vt1.c0 END)>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))  NULLS FIRST, ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) COLLATE BINARY, CASE WHEN vt0.c0 THEN (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) NOT NULL) END  NULLS LAST) FROM vt1, vt0 WHERE ((NOT ((('LeOXpw')*(0X2ef24fc9))))) GROUP BY ((vt1.c0 COLLATE NOCASE)|(((((x'0452')OR(vt1.c0)))OR(vt0.c0)))), (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END IN ()), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, (+ (vt1.c0)), ((vt1.c0)<=(vt1.c0)))) AND (((- (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0)IS NOT(vt1.c0))))) HAVING COUNT(*); -- 2ms;
SELECT HEX((((x''))!=((vt0.c0)))) FROM vt1 WHERE (NULL);SELECT DISTINCT NULL, TYPEOF(((vt1.c0) BETWEEN (x'') AND (vt0.c0))), CAST((NOT (vt0.c0)) AS REAL), AVG(CAST(vt0.c0 AS NUMERIC)), (((vt0.c0))=(((~ (vt1.c0))))) FROM vt0 WHERE (UNLIKELY(DISTINCT (+ (-1.801812281E9)))) GROUP BY (((vt1.c0 IN (vt1.c0, vt1.c0)))>>(vt0.c0)) HAVING (('v8dz')AND(((vt0.c0)!=(vt0.c0)))) LIMIT -1715332540;SELECT DISTINCT TOTAL((('') NOT BETWEEN (vt0.c0) AND (vt1.c0))) FROM vt1, vt0 WHERE (CASE WHEN 0X3ab9020d THEN ((0.7863608988964259) BETWEEN ('') AND ('ioT<9')) ELSE CASE WHEN 0.507047749523719 THEN 0xffffffffe458cd17 ELSE NULL END END) GROUP BY (- (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))) HAVING CAST(((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) AS TEXT) LIMIT 1176154589 OFFSET -1954375701; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) COLLATE NOCASE FROM vt0, vt1 WHERE (((((((((((((((((-8.95532263E8)AND('XaM')))AND(NULL)))OR(0x77dddb44)))OR(x'')))OR(CAST('-1743854106' AS INTEGER))))OR(x'' COLLATE RTRIM)))AND(((-2.090258225E9)<=(x'')))))OR(((x'baea') NOT BETWEEN (0.46265944383037505) AND (-1611479693))))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER)) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (vt0.c0)) FROM vt0, vt1; -- 0ms;
SELECT ALL AVG((((('892434581')AND(vt1.c0)))AND(vt1.c0))), COUNT(((vt1.c0)>>(vt0.c0))) OVER (), (+ (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))) FROM vt0 WHERE ((CAST(NULL AS BLOB) IN ()));SELECT DISTINCT vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT COUNT(*) OVER (), ((((vt1.c0)IS NOT(vt1.c0))) ISNULL), ((((vt1.c0)OR(vt1.c0)))AND(SUM(vt1.c0))) FROM vt0;SELECT ((((CAST(vt0.c0 AS NUMERIC))AND((((vt1.c0)) BETWEEN ((1670572773)) AND ((vt1.c0))))))OR(((vt0.c0) ISNULL))) FROM vt1;SELECT (vt1.c0 IN ()) FROM vt0 WHERE ((- (((0.9903369686752906) NOT BETWEEN ('-1346130492') AND (NULL))))); -- 0ms;
SELECT ALL ((((vt1.c0)OR(vt1.c0)))LIKE(COUNT(*))) FROM vt0;SELECT DISTINCT GROUP_CONCAT((((vt1.c0))<=((vt1.c0)))) OVER () FROM vt1 WHERE ((((NULL IN ())) BETWEEN (NULL COLLATE BINARY) AND (CASE 0.7680005362333169  WHEN 2011028292 THEN '?<z' END))); -- 2ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)>(((vt0.c0)>(vt0.c0)))) FROM vt1;SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)-(((((((((0.335070699483342)OR(-4.63942377E8)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))) FROM vt0, vt1 WHERE (CAST((('-884996530')+('-307314552')) AS TEXT)); -- 1ms;
SELECT DISTINCT MIN('ꨔ_?/T%') COLLATE NOCASE, ((0.46265944383037505) NOTNULL), (((+ (vt1.c0)))AND(((vt0.c0)|(vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0))) NOT BETWEEN ('Qs⢲3''') AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) FROM vt1;SELECT GROUP_CONCAT(vt1.c0) OVER (), (((vt1.c0, vt0.c0, 'a\r<!sIkm*')) BETWEEN ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 END, CAST(vt0.c0 AS BLOB))) AND (((vt1.c0 IN ()), (((vt1.c0)) BETWEEN (('7 sG閼 ~')) AND ((vt1.c0))), CAST(vt1.c0 AS INTEGER)))), NULL, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN 0Xffffffffcf0cbaa6 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '-936882026' ELSE vt1.c0 END, (('Hq5쓯Sf') NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE WHEN vt0.c0 THEN 'Go' ELSE vt0.c0 END)) AND ((((vt0.c0)>=(vt1.c0)), TIME(vt1.c0, vt0.c0, vt1.c0), TYPEOF(vt1.c0)))), ((((1320604793)LIKE(vt1.c0))) BETWEEN (vt0.c0) AND (MAX(vt0.c0))) FROM vt0;SELECT CASE (((vt0.c0, vt1.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt1.c0)))  WHEN vt0.c0 THEN CASE WHEN vt1.c0 THEN vt0.c0 END WHEN (((vt0.c0, vt0.c0, vt0.c0))<=((0.8972259095004121, vt0.c0, vt1.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)) THEN (NOT (vt1.c0)) ELSE CAST(vt1.c0 AS BLOB) END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB) FROM vt0, vt1 WHERE (CASE CAST(NULL AS BLOB)  WHEN ((0.9598100236641299) IS FALSE) THEN NULL COLLATE RTRIM WHEN json_array(1.222086315E9, x'', NULL, '') THEN CASE WHEN '' THEN 'D8zP0V偾' END WHEN CAST('' AS NUMERIC) THEN ((x'') NOT BETWEEN (-1913977269) AND ('-1743854106')) ELSE ((x'7e92')|(0.9639572463315664)) END);SELECT '931996878' FROM vt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0 WHERE (((LIKELIHOOD('973364931', 0.5132937764087135)) NOT NULL)); -- 1ms;
SELECT DISTINCT ((0.2918678305052923)>(SUM(vt1.c0))), '1913942559', (vt1.c0 IN ()) FROM vt0;SELECT DISTINCT GROUP_CONCAT(0.05351563834950401), AVG((~ (vt0.c0))) OVER (), CASE (vt0.c0 IN ())  WHEN vt1.c0 COLLATE RTRIM THEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(9.85203213E8)))AND(vt1.c0)) END FROM vt1 WHERE (((CASE WHEN 0.6979879988861252 THEN NULL ELSE '~' END) NOTNULL));SELECT DISTINCT vt1.c0 COLLATE BINARY FROM vt1, vt0 WHERE ((((- (x'fcdd')))IS NOT(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)LIKE(vt1.c0))) FROM vt1 WHERE (CAST(1141072522 AS INTEGER) COLLATE RTRIM);SELECT DISTINCT vt1.c0 FROM vt0, vt1; -- 0ms;
SELECT ALL ((MIN(vt0.c0)) BETWEEN (((vt0.c0)IS(vt1.c0))) AND ((('P\neg?혬1R') BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (((((-1680144962)+(NULL)))||(load_extension(-1475884788))));SELECT vt0.c0 FROM vt1 WHERE ((((-1.971232545E9, 2.052791587E9, 0.2009118468586676)) NOT BETWEEN ((x'f733', 'aT' COLLATE BINARY, (((x'21cc'))>=((NULL))))) AND ((x'', (('-1534720780')%('輀S^KC5')), ((NULL) IS FALSE)))));SELECT DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (COUNT(vt1.c0)) AND (CAST(vt1.c0 AS NUMERIC))), CAST(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) FROM vt0, vt1 ORDER BY '' DESC, CASE WHEN vt1.c0 THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN (+ (vt1.c0)) WHEN (~ (vt1.c0)) THEN CAST(vt0.c0 AS BLOB) END, (NOT ((NOT (vt1.c0))))  NULLS FIRST; -- 0ms;
SELECT ((((((((json_insert(vt1.c0, vt0.c0, vt1.c0))OR(NULL)))AND(MIN(0x378d24ce))))AND(((((vt0.c0)AND(vt1.c0)))OR(0Xffffffffa0e6507e)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('years0켲')))) FROM vt1 WHERE (((0.5969722242270188)<>(((((0.8140547587345646)OR(0X346a9f6b)))AND(x'')))));SELECT DISTINCT (NOT (CAST(vt1.c0 AS BLOB))), ((((0.335070699483342 COLLATE NOCASE)OR(((-125910232) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt1.c0) IS TRUE))), PERCENT_RANK() OVER ( ORDER BY (((vt1.c0)/(vt0.c0)) IN ())  NULLS LAST RANGE  UNBOUNDED PRECEDING) FROM vt0 WHERE ((((((((x'', x'', '0.11053236932696431'))<(('', x'', x''))))OR((0.546050582754201 IN (0.7191274434160542)))))AND(((7.17638398E8)&(x'f971')))));SELECT ALL ((((vt1.c0)AND(((vt0.c0)AND(NULL)))))AND(vt1.c0 COLLATE BINARY)), SUM(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) OVER (), (((x'' IN ()))OR((- (vt1.c0)))) FROM vt0, vt1 WHERE ((NOT ((NOT ('215827642'))))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1, vt0 WHERE ('114316318'); -- 1ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL))+((((0X6392eae5))=((vt0.c0))))) FROM vt0, vt1 WHERE (0.4371769174647696) GROUP BY (((((vt0.c0)!=('-242022091'))))>=((((vt0.c0) ISNULL)))) HAVING ((0.6068137674281179)&(UNLIKELY(vt0.c0))); -- 0ms;
SELECT vt1.c0 FROM vt0, vt1 WHERE (((0Xd3b692)<=(0.05351563834950401)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((- (vt0.c0))))<=(((vt0.c0 IN ())))) FROM vt0, vt1 LIMIT 459785455 OFFSET 1378152038; -- 0ms;
SELECT DISTINCT ((((vt1.c0)IS NOT(vt0.c0))) NOT NULL), ((vt1.c0) NOT NULL) COLLATE BINARY, (((((vt0.c0)OR(NULL)))OR(NULL)) IN ()) FROM vt1, vt0 WHERE (((CASE -242022091  WHEN x'' THEN '' ELSE '438349902' END) NOTNULL)) GROUP BY (((vt0.c0) ISNULL) IN ((vt0.c0 IN ()))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE), CASE WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN SUM(vt0.c0) WHEN ((vt0.c0)|(vt0.c0)) THEN (vt0.c0 IN ()) ELSE '-1475884788' END, 0Xffffffff9bdb05be FROM vt1, vt0 WHERE (CASE WHEN (((NULL))>(('TY?m'))) THEN (((0.6889277064881932))=((-1.247424973E9))) WHEN CASE x'a2ec'  WHEN x'0e34b5f4' THEN x'' WHEN '2099988976' THEN '-668267479' WHEN 0Xffffffff949a86c7 THEN NULL END THEN INSTR(NULL, 0.25374894415531624) WHEN x'd037' THEN (0.2605445901531923 IN ()) WHEN CASE WHEN x'' THEN 'mE9츳* ]&' END THEN (((0.5097842576260423))==((NULL))) WHEN '-183993954' COLLATE NOCASE THEN ((((((((NULL)OR(0.4175124356004093)))AND('')))AND(346902855)))OR(-1682984010)) END); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE RTRIM AS INTEGER) FROM vt1, vt0; -- 0ms;
SELECT UNICODE(SUM(vt1.c0)), AVG(((vt0.c0) ISNULL)) OVER (), (((((((vt1.c0))<((vt0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR((vt0.c0 IN ()))) FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)))AND(((vt0.c0)LIKE(vt0.c0)))) ASC;SELECT ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((vt0.c0 IN ()))) FROM vt0, vt1; -- 0ms;
SELECT x'd84c' FROM vt1 WHERE (x''); -- 1ms;
SELECT DISTINCT (~ ((- (vt0.c0)))) FROM vt1, vt0 WHERE (((CAST(NULL AS BLOB))=((0.8340862214468898 IN ())))); -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE RTRIM, (+ ((vt0.c0 IN ()))), RANK() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt0.c0)GLOB(vt0.c0)))LIKE((+ (vt0.c0)))) FROM vt0 LIMIT 1143727670; -- 0ms;
SELECT vt0.c0, ((CAST(vt1.c0 AS INTEGER)) BETWEEN ('-1247424973') AND ((- (vt0.c0)))), UNLIKELY(vt1.c0 COLLATE BINARY) FROM vt1;SELECT DISTINCT SUM((~ (vt0.c0))) FROM vt0 WHERE (HEX(DISTINCT (('1560465693')==('CssI\r_&S')))); -- 0ms;
SELECT DISTINCT NULL, ((TRIM(DISTINCT vt0.c0, vt1.c0))%(highlight(vt1.c0, vt1.c0, vt0.c0, vt1.c0))), ((x'c1d7')|(SQLITE_COMPILEOPTION_USED(vt1.c0))) FROM vt0;SELECT DISTINCT ((SUM(vt0.c0))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)==(vt0.c0)) AS TEXT) WHERE (LOWER(((NULL)>=('-463942377')))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((x'b882')<((~ (vt0.c0)))), json_quote(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) OVER () FROM vt0 LIMIT 174558976 OFFSET -1741533864;SELECT ALL (((((vt0.c0))<=((vt1.c0)))) IS FALSE) FROM vt1;SELECT ALL (((((vt0.c0)<(vt0.c0)), CASE WHEN vt0.c0 THEN '-1138170765' WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END, CAST(vt1.c0 AS NUMERIC)))==((GROUP_CONCAT(vt1.c0), ('' IN ()), INSTR(vt1.c0, vt1.c0)))) FROM vt1;SELECT ALL ((vt0.c0 COLLATE RTRIM)<>(((vt0.c0)GLOB(vt0.c0)))), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOT NULL), ((((vt1.c0)IS NOT(vt0.c0)))<(((vt0.c0)<(vt1.c0)))) FROM vt0 WHERE (CASE 0.3319676226229993  WHEN CAST('605377143' AS BLOB) THEN -1.725981113E9 COLLATE BINARY ELSE ((x'') NOT BETWEEN (x'') AND (x'')) END);SELECT DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY, (((((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))))*(vt0.c0)), ((((vt0.c0) NOT NULL)) NOT NULL) FROM vt0 WHERE (((CASE '溝#'  WHEN '1222086315' THEN x'' ELSE 0.2806525352812925 END)<=(((x'') NOTNULL))));SELECT ALL (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-2099742228')))), ((((((((((((vt0.c0)OR(vt1.c0)))OR(x'9a63')))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) IS TRUE))))OR(0.4371769174647696)))AND(((vt0.c0)<<(vt0.c0)))), (AVG(vt1.c0) IN ()) FROM vt0, vt1 WHERE ((((((((((((0.11053236932696431)) BETWEEN ((x'')) AND (('aE'))))OR(((((((((x'cf08')AND(NULL)))AND(x'41d7')))AND('-1170056856')))AND('CssI\r_&S')))))AND((((NULL, 0.08103993372911023, NULL)) BETWEEN ((x'', x'8fa3', 9.85203213E8)) AND ((0.34821511705942676, 0Xffffffffb24f747e, x''))))))AND('M!o<-''g')))AND(x''))); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT vt1.c0) COLLATE BINARY FROM vt1, vt0 WHERE (((((((x'') NOT BETWEEN ('') AND ('572606292')))OR('qvPAXPs{' COLLATE BINARY)))AND(((((0x32381865)AND(-1884420974)))AND(x''))))); -- 0ms;
SELECT 0.733279424592427 FROM vt1 WHERE (NULL); -- 0ms;
SELECT ALL NULL, DENSE_RANK() OVER (), ((((vt0.c0)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(CAST(vt1.c0 AS NUMERIC))), ((((((vt1.c0)|(vt0.c0)))AND(vt0.c0)))OR((vt1.c0 IN ()))), LAST_VALUE(((((vt0.c0)/(vt0.c0))) NOTNULL)) OVER ( ORDER BY (~ (((vt0.c0) NOT NULL))) DESC, (-1.954375701E9 IN (((vt0.c0)<>(vt0.c0)), 0.5665883226733693))) FROM vt1, vt0 WHERE (((x'')+(((((((((((((x'')AND(x'708b')))OR(NULL)))AND('52757896')))AND('')))OR(x'')))OR('<6TuOP['))))) ORDER BY DATETIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt1.c0)), ((vt0.c0)IS(vt0.c0))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((vt1.c0 COLLATE NOCASE)AND((- (vt0.c0)))))OR(vt0.c0)), (((vt0.c0 IN (vt1.c0)))IS(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))), CASE WHEN (((vt0.c0))>=((vt1.c0))) THEN UNLIKELY(vt0.c0) WHEN vt1.c0 THEN HEX(vt1.c0) WHEN (('YJJNl{Wz#') BETWEEN (vt1.c0) AND (vt1.c0)) THEN (('*8vpKX')|(0.6046783937189198)) END FROM vt0, vt1 WHERE (0.43779651244956885); -- 0ms;
SELECT ALL CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL), '', 'M' COLLATE RTRIM FROM vt1;SELECT DISTINCT ((('0.03835068608139647')) BETWEEN ((COUNT(*))) AND ((((((vt0.c0)OR(vt0.c0)))OR(x'3276'))))) FROM vt0, vt1; -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((NOT (vt1.c0))) AND (CAST(vt0.c0 AS REAL))) FROM vt0 WHERE (CASE ((NULL) IS FALSE)  WHEN (NULL IN ()) THEN NULL ELSE (NOT ('0.733279424592427')) END);SELECT ALL ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN 'p' END)/(vt0.c0 COLLATE BINARY)) FROM vt1 LIMIT 2052791587;SELECT DISTINCT (((~ (x'')))!=((+ (vt0.c0)))), COUNT(((0.2806525352812925) BETWEEN (vt0.c0) AND (vt0.c0))) OVER ( RANGE BETWEEN CASE WHEN ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt1.c0)) WHEN ((vt0.c0) NOTNULL) THEN ('WjD8G鹇Gmq' IN ()) END PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP), (+ (vt1.c0)) FROM vt1 GROUP BY ((RTRIM(vt0.c0))IS NOT((((vt1.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))))) HAVING vt0.c0;SELECT DISTINCT (CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt1 WHERE (((('MGELx~\r ')OR(NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((0.22823029168909303)>>(vt0.c0)) COLLATE RTRIM FROM vt1, vt0 WHERE ((NOT (((x'') NOTNULL)))); -- 0ms;
SELECT ALL ((GROUP_CONCAT(vt1.c0)) NOTNULL) FROM vt1; -- 0ms;
SELECT (vt1.c0 IN ()) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (~ (((vt1.c0)-('-1795407150')))), ABS(CAST(vt0.c0 AS NUMERIC)), SUM(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN x'c6791d32' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) OVER () FROM vt1 WHERE (CASE WHEN ((((4.38349902E8)AND(NULL)))AND('\2a')) THEN ((((x'')AND(0xffffffffbf0a31b6)))AND(x'')) END);SELECT COUNT(*), COALESCE(((vt0.c0)-(vt1.c0)), vt1.c0), ((((vt0.c0)<>(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt1.c0)) FROM vt0, vt1 LIMIT 136539805; -- 0ms;
SELECT DISTINCT (- (CASE WHEN vt0.c0 THEN vt0.c0 END)), HEX(((vt1.c0)<=(vt0.c0))), ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM, (NOT ((NOT (vt0.c0)))), ((((CAST(vt1.c0 AS INTEGER))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((MAX(vt0.c0)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)LIKE(vt0.c0)))), vt1.c0 FROM vt0;SELECT ALL (((vt1.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((COUNT(*)))) FROM vt0;SELECT DISTINCT ((COUNT(vt1.c0))||(((vt1.c0)==(vt1.c0)))) FROM vt0 NOT INDEXED, vt1 GROUP BY ((NULL) ISNULL) COLLATE BINARY, ((((-1.725981113E9) NOT BETWEEN (vt0.c0) AND ('')))<<((~ (vt1.c0)))), (((- (vt1.c0)))>>(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) HAVING CAST(LIKELY(vt1.c0) AS TEXT); -- 0ms;
SELECT ALL TYPEOF((((vt0.c0, vt1.c0, vt1.c0))<>((NULL, NULL, vt1.c0)))) FROM vt1 WHERE (0.42340990881053764 COLLATE NOCASE) ORDER BY (((- (vt1.c0))) IS TRUE) ASC;SELECT DISTINCT ROW_NUMBER() OVER (), NULLIF(CAST(vt0.c0 AS REAL), NULL), SUM((vt0.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) OVER () FROM vt1, vt0; -- 0ms;
SELECT ALL (((vt1.c0)>(vt0.c0)) IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM, (UPPER(vt0.c0) IN ()) FROM vt0;SELECT DISTINCT json_type(CASE WHEN vt0.c0 THEN vt1.c0 END) FROM vt0, vt1 WHERE (((((('%i{x')) BETWEEN ((NULL)) AND ((0.6314707367740968)))) BETWEEN (CASE WHEN ')64pw2}Oᙐ' THEN 0.6892291923845043 ELSE x'760d' END) AND (((((((((0Xffffffffc674301d)OR(NULL)))AND('')))AND(-135559681)))OR('-1233478730'))))); -- 0ms;
SELECT ALL MAX(((vt0.c0)OR(vt0.c0))), vt0.c0, ((DATETIME(vt1.c0, vt1.c0, vt0.c0))GLOB(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) FROM vt1;SELECT DISTINCT NTH_VALUE(0.6646262734665519, ((((vt1.c0)%(vt0.c0))) NOT NULL)) OVER () FROM vt0, vt1 WHERE ((CASE WHEN 246328327 THEN '' END IN ())); -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM vt1 INNER JOIN vt0 ON CASE vt1.c0 COLLATE NOCASE  WHEN UNICODE(vt0.c0) THEN vt0.c0 ELSE CASE vt1.c0  WHEN '-1621227259' THEN 0.32123796995918596 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END END WHERE (((json_valid(NULL))%(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT TOTAL((vt0.c0 IN ())) FROM vt1 GROUP BY -1611479693;SELECT DISTINCT ((((vt1.c0, vt1.c0, x'')) BETWEEN (('y', vt0.c0, vt1.c0)) AND ((0.989674680277089, vt1.c0, vt1.c0))) IN ()), (+ (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), (((vt1.c0)) NOT BETWEEN (((+ (vt1.c0)))) AND ((2.46328327E8))), CASE (vt0.c0 IN ())  WHEN (+ (vt0.c0)) THEN ((vt1.c0) NOT NULL) END, ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, 0.7347999409110805, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0) NOT NULL))) FROM vt1 WHERE (((CAST('' AS INTEGER))AND((((((((((((('0.6592320522139995')OR('-802370868')))OR(0.6068137674281179)))AND('1143727670')))OR(NULL)))AND('M')))OR(0.44663839368177505))))) GROUP BY (((ABS(vt0.c0)))>=((((vt1.c0)>=(vt0.c0))))), CASE (((vt1.c0))<=((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 END, CAST((vt1.c0 IN ()) AS INTEGER) HAVING CASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN json_remove(vt1.c0, 0xffffffff895fedb0) WHEN NULL THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 1283562421 WHEN vt1.c0 THEN vt0.c0 ELSE '1103033697' END THEN vt1.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)<<(vt0.c0)) WHEN vt1.c0 THEN vt0.c0 ELSE (~ (vt0.c0)) END;SELECT (NOT ((((vt1.c0, vt0.c0, vt1.c0))!=((vt1.c0, vt0.c0, vt0.c0))))) FROM vt0;SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt1.c0)OR(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) FROM vt0, vt1 WHERE ((- ('' COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT TYPEOF(DISTINCT ((vt0.c0)<('iot<9'))) FROM vt1;SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) FROM vt0, vt1 GROUP BY CAST(vt1.c0 COLLATE NOCASE AS REAL); -- 0ms;
SELECT ALL TRIM((((vt0.c0))<=((vt0.c0))), (vt0.c0 IN (vt1.c0))) FROM vt1, vt0 GROUP BY (((('-802370868') NOT BETWEEN (NULL) AND (vt1.c0)))!=(((vt0.c0)/(vt1.c0)))) HAVING CAST(vt0.c0 COLLATE BINARY AS REAL); -- 2ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((vt1.c0)>>(((vt0.c0)GLOB(vt1.c0)))), vt1.c0, (+ (((((0.1086929647810988)AND(vt0.c0)))OR(vt0.c0)))), '-135559681' FROM vt1 ORDER BY CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 COLLATE BINARY END;SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ ((((NULL))>=((0.7734056386925883)))))); -- 0ms;
SELECT DISTINCT ((((vt1.c0)<(vt0.c0))) BETWEEN (DATETIME(vt1.c0, 'T3~?', vt1.c0)) AND (vt1.c0 COLLATE BINARY)), 0.5603956747003077, COALESCE(((vt0.c0)=(vt0.c0)), vt1.c0 COLLATE RTRIM), ((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))) NOT BETWEEN (GROUP_CONCAT(vt1.c0)) AND ('溝#')), (- (((vt0.c0) ISNULL))) FROM vt1, vt0 WHERE (((CAST(0.8153863500068006 AS INTEGER)) NOT BETWEEN (((x'')>(NULL))) AND ((NOT (NULL))))); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED(((vt1.c0)IS(vt0.c0))) FROM vt1;SELECT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((AVG(vt0.c0)))) FROM vt1, vt0 WHERE (((((0.3183502334528593) NOTNULL)) BETWEEN ('ᙐ,') AND (((NULL)LIKE(x'7103'))))) GROUP BY vt0.c0, COALESCE(JULIANDAY(vt0.c0, vt1.c0, vt0.c0), CASE vt0.c0  WHEN x'8230' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END), ((((vt1.c0))<=((vt0.c0))) IN ((((vt1.c0, vt1.c0, vt1.c0))!=((vt0.c0, vt1.c0, vt1.c0))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt1 WHERE (CASE CASE WHEN '1360039050' THEN 'VP' WHEN x'' THEN '1222086315' WHEN NULL THEN NULL ELSE 0.6068137674281179 END  WHEN CAST(0X27028659 AS NUMERIC) THEN NULL END);SELECT DISTINCT vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT DISTINCT 0.9437053974845112, (((vt1.c0)&(vt0.c0)) IN ()), ((vt0.c0) NOTNULL) FROM vt0, vt1 WHERE (CASE WHEN ((((x'')OR(x'')))AND(0.7470874630799905)) THEN ((0.2854408557512559) NOTNULL) ELSE ((NULL) BETWEEN (x'3857') AND (NULL)) END); -- 0ms;
SELECT DISTINCT 0.7724430787016356 COLLATE NOCASE, vt0.c0, 0.16583559307731577 FROM vt0 WHERE (((((NULL))<=((x''))) IN ())); -- 1ms;
SELECT DISTINCT CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN ((((vt0.c0)AND(vt1.c0)))AND(x'')) ELSE (~ (vt1.c0)) END FROM vt0, vt1 WHERE (CASE WHEN TRIM(NULL) THEN CASE WHEN NULL THEN NULL ELSE 0xffffffff80db056f END WHEN CAST('' AS NUMERIC) THEN ((((((((x'cc01')AND(-2099742228)))OR('892434581')))OR(NULL)))OR('0.3319676226229993')) WHEN CAST('years0켲' AS REAL) THEN (- (x'6aaf')) END) ORDER BY (- ((((vt1.c0))<>((x'')))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (('-801681847') BETWEEN (vt0.c0) AND (TYPEOF(DISTINCT vt1.c0))), ((SQLITE_COMPILEOPTION_USED(vt0.c0))>=(MIN(vt1.c0))), CASE WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN GROUP_CONCAT(vt0.c0) END FROM vt1 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)-(((vt1.c0)*(vt1.c0)))) ASC;SELECT ((CASE WHEN vt1.c0 THEN vt0.c0 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN '1378152038' THEN vt1.c0 WHEN vt1.c0 THEN x'72aa' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)) FROM vt1 ORDER BY CASE WHEN vt1.c0 THEN vt0.c0 END COLLATE BINARY  NULLS FIRST, CASE LIKE(0Xffffffffbc28e473, vt1.c0, '.')  WHEN (((vt1.c0, NULL, vt1.c0))<>((vt1.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0)>=(vt0.c0)) ELSE vt1.c0 END  NULLS FIRST;SELECT ALL ((x'') NOT NULL) FROM vt0, vt1 LIMIT -242022091; -- 1ms;
SELECT CAST(CAST(-9.03472271E8 AS TEXT) AS BLOB), ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) COLLATE NOCASE, CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN (('/G #\') BETWEEN (vt0.c0) AND (vt1.c0)) WHEN SUM(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE COUNT(*) END FROM vt0 GROUP BY ((CAST(NULL AS REAL))IS NOT(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) HAVING ((((((vt0.c0)OR(vt0.c0)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(x'9ea3'));SELECT DISTINCT CAST(((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)) AS TEXT) FROM vt0 WHERE ((((0.5423360915257281 IN ())) NOT BETWEEN (LIKELY(-1450463630)) AND (CAST('S.j' AS REAL))));SELECT ALL CASE '2052791587'  WHEN ((vt0.c0)/(vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN ((NULL)>=(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)/(vt1.c0)) WHEN ((vt0.c0)OR(vt1.c0)) THEN (+ (vt0.c0)) ELSE vt1.c0 END FROM vt0;SELECT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))))), (((CAST(vt1.c0 AS TEXT)))!=((((vt1.c0)<<(vt1.c0))))), (((((vt0.c0 IN ()))OR(vt1.c0 COLLATE BINARY)))AND((- (vt1.c0)))) FROM vt1;SELECT COUNT(vt0.c0) FROM vt1 ORDER BY ((((vt0.c0)IS NOT(vt1.c0)))IS((- (vt1.c0)))) ASC  NULLS LAST;SELECT DISTINCT ((vt1.c0 COLLATE NOCASE)|((((vt0.c0, vt1.c0, vt0.c0))<((vt0.c0, vt1.c0, vt1.c0))))) FROM vt1 WHERE (((((x'8798')OR(((NULL)<('')))))AND((('0.4175124356004093') IS TRUE))));SELECT DISTINCT (((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)==(vt1.c0)), vt0.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((vt0.c0)<<(0.689329972145482)))) AND ((CAST(vt0.c0 AS BLOB), ((vt1.c0)IS(vt0.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END, UPPER(vt0.c0), CAST(vt1.c0 AS BLOB)))), (NOT ((NULL IN (vt1.c0)))), (MAX(vt0.c0) IN ()), (((vt0.c0 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (CAST(vt0.c0 AS REAL))), ROW_NUMBER() OVER () FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END ELSE ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) END ASC  NULLS LAST, x'' DESC, (- (((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))  NULLS LAST;SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((((x'2662' IN ('-2002683645')))AND(((((x'')OR(0.9776833988158063)))AND('WjD8G鹇Gmq')))))OR(NULLIF(x'', 0.3067105069847974)))); -- 0ms;
SELECT '퀒Xy	A', (((vt1.c0)) BETWEEN (((((vt0.c0))>((vt0.c0))))) AND (((((vt1.c0)) NOT BETWEEN ((x'844b')) AND ((vt1.c0)))))), SUM((vt1.c0 IN ())) FROM vt1, vt0 WHERE (((('-125910232') NOT BETWEEN ('') AND ('-436935705')) IN ())); -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((0.5066975456203733)) AND ((((vt0.c0)IS('Zl'))))), (((vt0.c0 IN ())) BETWEEN (GROUP_CONCAT(vt1.c0)) AND (((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))), (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((vt1.c0)IS NOT(vt0.c0))))) FROM vt0 ORDER BY ((vt1.c0) ISNULL), UNLIKELY(DISTINCT vt0.c0) LIMIT 2015799391;SELECT DISTINCT (NOT (COUNT(*))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN MAX(vt0.c0) THEN (vt0.c0 IN ()) ELSE UPPER(vt0.c0) END FROM vt1, vt0 GROUP BY (((vt0.c0 IN ())) NOT BETWEEN (475084929) AND (vt1.c0)) HAVING ((COUNT(x''))=(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ORDER BY ((vt1.c0)>=(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))))  NULLS LAST; -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)), 'q㒐e%', ((vt1.c0)GLOB(vt0.c0)))) AND ((MIN(vt0.c0), NULL, ((((vt0.c0)AND(vt1.c0)))OR(''))))) FROM vt1, vt0 GROUP BY (((vt1.c0 IN ()))IS NOT(NULL)) ORDER BY ((NULL)+(TYPEOF(vt1.c0))) ASC  NULLS FIRST LIMIT 1776376859 OFFSET -135559681; -- 1ms;
SELECT CAST(AVG(vt1.c0) AS INTEGER) FROM vt1, vt0 WHERE (((((x'') NOT BETWEEN ('wjd8g鹇gmq') AND (x''))) NOTNULL)); -- 0ms;
SELECT ALL ((ABS(vt0.c0))GLOB(vt1.c0)), (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), (vt0.c0 IN ()) COLLATE NOCASE FROM vt1 WHERE ((((NULL, 0x3f7809c2, x'')) NOT BETWEEN ((CAST(-8.2124937E8 AS BLOB), ((((((((x'b1b6')OR(x'')))OR(x'')))OR(NULL)))AND(x'')), (('')&(0.7202041757237986)))) AND (('1603527917' COLLATE NOCASE, (((x'')) NOT BETWEEN (('')) AND ((x''))), ((0.6044604586423569)-(0.7724430787016356))))));SELECT DISTINCT COALESCE(DISTINCT vt1.c0, vt1.c0) COLLATE RTRIM FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL) FROM vt1, vt0 WHERE (('-268886416' IN ())); -- 0ms;
SELECT ALL (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((GLOB(vt0.c0, x'')))) FROM vt0, vt1 WHERE (((CAST(2099988976 AS NUMERIC))IS NOT((('-1990201936')+(0.4371769174647696))))); -- 0ms;
SELECT AVG(vt0.c0) OVER (), SUBSTR(CASE WHEN x'' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END, ((vt0.c0)>=(vt0.c0))), ((((vt0.c0) IS TRUE)) BETWEEN ((NOT (vt1.c0))) AND (((vt0.c0)>>('I')))) FROM vt1 WHERE (((((511046297)AND(NULL))) NOT BETWEEN (0.6090637036839792) AND (((NULL) ISNULL)))) LIMIT -9223372036854775808;SELECT DISTINCT json_patch(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), CHANGES()), vt0.c0, LIKELIHOOD(DISTINCT ((vt0.c0)<(vt0.c0)), 0.0495017693787797) FROM vt1, vt0 WHERE (((((((0Xffffffffcb40064e)<>(0.19433450584944856)))AND('114316318' COLLATE NOCASE)))OR(''))) GROUP BY ((TRIM(vt0.c0, vt0.c0)) IS TRUE), (COALESCE(vt1.c0, vt0.c0) IN (TRIM(vt1.c0), json_extract(vt0.c0, NULL))), x'';SELECT DISTINCT (((~ (vt1.c0)))IS(((vt1.c0)*(vt0.c0)))), ((0.7138792403083697)<<(CAST(vt0.c0 AS INTEGER))), ((CAST(vt1.c0 AS INTEGER))/(vt1.c0 COLLATE NOCASE)) FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((NOT (vt1.c0))) AND (((vt1.c0) ISNULL)))  NULLS FIRST, ((vt1.c0)=(vt0.c0)) COLLATE RTRIM COLLATE NOCASE DESC, ((vt0.c0) IS TRUE) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (((vt1.c0)>(vt1.c0))) AND ((- (vt1.c0)))), NULL, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) FROM vt0;SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (NULLIF(DISTINCT vt0.c0, vt1.c0)) AND (vt1.c0)) FROM vt1;SELECT ALL TOTAL(((vt0.c0) IS FALSE)) OVER () FROM vt0, vt1 WHERE (((x'2863' COLLATE BINARY) BETWEEN (((((NULL)AND(x'83f2')))AND(0.9718387428026707))) AND (((NULL)>('￿I\'))))); -- 0ms;
SELECT DISTINCT (('-1741533864') NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt0.c0)IS NOT(vt0.c0)))), (+ (CAST(vt0.c0 AS INTEGER))), (vt0.c0 COLLATE BINARY IN ()) FROM vt1 WHERE (CAST((('')IS NOT('0.9776833988158063')) AS BLOB));SELECT DISTINCT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<>(((vt0.c0)|(vt1.c0)))) FROM vt1;SELECT DISTINCT AVG(((((vt0.c0)OR(2.46328327E8)))OR(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL AVG((vt0.c0 IN ())) OVER ( ROWS BETWEEN vt0.c0 PRECEDING AND (((((('-832587078')OR(vt1.c0)))AND(vt0.c0)))|(((vt1.c0) BETWEEN (vt0.c0) AND (3.61623796E8)))) PRECEDING EXCLUDE TIES), (~ (((vt1.c0)IS(vt0.c0)))), CAST((((vt1.c0, vt0.c0, 0.8845507880715102))>((0.9903369686752906, x'fd8b6766', vt1.c0))) AS BLOB), ((vt1.c0)<=(COALESCE(DISTINCT vt1.c0, vt0.c0))), CASE ((('-1079714664', vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('2085088166', vt0.c0, x'')))  WHEN '-1467798139' THEN NULLIF(vt0.c0, vt1.c0) ELSE ((vt1.c0)>('')) END FROM vt0 WHERE (((((0.2806525352812925) IS TRUE)) BETWEEN (NULL) AND (((('H'))>=((0.17560323416973211))))));SELECT ALL AVG(vt1.c0), (((((NULL)AND(vt1.c0)))AND(vt1.c0)) IN ()), COUNT(*) FROM vt1, vt0 WHERE (((((((NULL)AND('V)%mL0l9J흾H')))AND('1251048678'))) BETWEEN ((((('1378152038')OR(0.13136333330868755)))AND('USE}'))) AND ((('1670572773') NOT NULL)))); -- 0ms;
SELECT COUNT(*) FROM vt0 WHERE ((('-183993954' COLLATE NOCASE)+((('-965464035')/(NULL))))); -- 0ms;
SELECT DISTINCT CAST(((vt1.c0) ISNULL) AS NUMERIC) FROM vt1; -- 0ms;
SELECT ALL 2.052791587E9 FROM vt0, vt1 WHERE ((((((0.7809207439599133)>=(1.131272914E9)), ((('醏%jE|)'))>=((x''))), UPPER(DISTINCT NULL)))<(('''\Xlv#*5v' COLLATE RTRIM, NULL, ((NULL) NOTNULL))))) ORDER BY vt1.c0; -- 0ms;
SELECT DISTINCT (-1029536841 COLLATE BINARY IN ()) FROM vt1, vt0 WHERE ((((~ (x'')))|(IFNULL(DISTINCT x'ca4c', 70442663)))); -- 0ms;
SELECT ROW_NUMBER() OVER ( ORDER BY (- (((vt0.c0)||(vt0.c0)))) DESC), CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE FROM vt1;SELECT (((vt0.c0)) BETWEEN (((((vt0.c0, vt1.c0, 'R'))==((vt0.c0, vt0.c0, vt1.c0))))) AND ((((((NULL)AND(vt1.c0)))AND(vt0.c0))))), vt0.c0, (((0.05351563834950401))>(((~ (0.024595369896366348))))), CAST(vt0.c0 AS BLOB) COLLATE BINARY, (((((x'189f5e72')<(vt1.c0)), CAST(vt1.c0 AS BLOB), ((vt0.c0) IS TRUE)))>=((vt1.c0 COLLATE BINARY, (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.49039299181710727))), ((vt0.c0)IS NOT(NULL))))) FROM vt0 WHERE ((((('13874834') BETWEEN (0xffffffffdddb9277) AND (x''))) IS FALSE)) LIMIT 246328327 OFFSET 2052791587;SELECT GLOB(((vt0.c0)IS(vt1.c0)), COUNT(*)) FROM vt1 RIGHT OUTER JOIN vt0 ON MIN(((vt0.c0)>('')), ((vt1.c0)>>(vt0.c0)), -1.541187333E9, CASE vt1.c0  WHEN vt1.c0 THEN 'jo' ELSE vt0.c0 END); -- 0ms;
SELECT ((((((vt0.c0)-('-1541187333')))OR(((vt1.c0) IS FALSE))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt1 WHERE ((((((0.8639849045798025)) NOT BETWEEN ((0.28606284619504796)) AND (('破fLm')))) NOT NULL));SELECT ALL (NOT (((vt0.c0)>>(vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT 0.30830885485424775, (((~ (vt0.c0)))IS NOT(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((~ (vt0.c0)))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt1 WHERE (((((x'9ec7')+(NULL)))<=(CASE NULL  WHEN 0.5207138359809474 THEN 0Xffffffffc7db80fc WHEN '1483386005' THEN '-2099742228' WHEN NULL THEN x'' WHEN NULL THEN '' WHEN '' THEN NULL END)));SELECT RANK() OVER (), ((vt1.c0)<<(vt0.c0)) COLLATE BINARY, FIRST_VALUE((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)>(vt0.c0)), (vt0.c0 IN ()))) AND ((((0Xffffffffb017cf6f) NOT BETWEEN (vt0.c0) AND (vt0.c0)), x'2ba4', 0.9602953192907483)))) OVER ( ORDER BY ((CAST(vt1.c0 AS REAL))GLOB((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC, ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST ROWS LOWER(vt1.c0) COLLATE BINARY PRECEDING EXCLUDE CURRENT ROW) FROM vt0 WHERE ((- (((0X2f0b17f1)*(x'')))));SELECT ALL MAX((- (vt0.c0))) FROM vt1, vt0 WHERE ((((((('H4(xu')AND(x'')))OR(0X475925cf))) ISNULL)); -- 0ms;
SELECT DISTINCT COUNT(x'') OVER () FROM vt0; -- 0ms;
SELECT ALL CAST(((vt1.c0)|(vt0.c0)) AS TEXT), TRIM(DISTINCT vt0.c0) COLLATE RTRIM, LOWER(DISTINCT ((vt1.c0)GLOB('Kl'))) FROM vt1 WHERE (IFNULL(DISTINCT (NOT ('1115083165')), (((''))>((NULL)))));SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((UPPER(vt1.c0), vt0.c0, CASE WHEN vt1.c0 THEN vt1.c0 END)) AND ((AVG(vt0.c0), (- (vt0.c0)), (vt0.c0 IN ())))) FROM vt0;SELECT DENSE_RANK() OVER ( ORDER BY LTRIM(((vt1.c0)<=(vt0.c0))) ASC) FROM vt1 WHERE (((NULL) BETWEEN (0.1833822593534814) AND (x'b5b1')) COLLATE RTRIM);SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))<((((vt1.c0)|(vt1.c0))))) FROM vt0;SELECT DISTINCT CASE WHEN vt1.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL))>=(((vt1.c0) NOT NULL))) FROM vt0;SELECT ALL ((vt1.c0) BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))) AND (vt1.c0)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c0, CAST(vt1.c0 AS REAL) COLLATE BINARY, (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END IN ()) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (6.37532810220387E-4) AND (vt0.c0)))>>(((vt0.c0)OR(vt1.c0)))) FROM vt1;SELECT DISTINCT ABS(((vt1.c0)>>(vt1.c0))) FROM vt0, vt1 WHERE (('1139100784' IN (((NULL) NOT BETWEEN (x'') AND ('-242022091'))))); -- 1ms;
SELECT DISTINCT TRIM(DISTINCT CAST(vt1.c0 AS INTEGER)) FROM vt1; -- 0ms;
SELECT CUME_DIST() OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt1 WHERE (CASE json_type(0X48a2dff8)  WHEN ((x'')IS NOT(x'c89f')) THEN TRIM('iE') ELSE 0.947234987077104 END) LIMIT 953148462; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) IS TRUE) FROM vt1 ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS TEXT) ASC  NULLS LAST, '_\rz', ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY  NULLS FIRST;SELECT ALL (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) FROM vt1 WHERE ((((((('F0E*CYl')OR(NULL)))AND(-2090258225)))=('' COLLATE RTRIM))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt1, vt0; -- 0ms;
SELECT ALL MIN(AVG(vt0.c0)) FROM vt1 WHERE (0.5877622843499343) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((0.9639572463315664, vt0.c0, x''))<((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST;SELECT (vt0.c0 IN ((((vt1.c0, vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt0.c0))))) FROM vt0, vt1 GROUP BY (NOT (0.6979879988861252)) ORDER BY HEX(vt0.c0) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT ((vt1.c0) NOT NULL), (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0)||(x'cf38'))))<=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END, vt1.c0 COLLATE RTRIM, ((vt0.c0) IS TRUE)))), (NOT (vt0.c0)) FROM vt0 WHERE (((0.7166141524738852)||(x'c5db')) COLLATE RTRIM) ORDER BY (- (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0))));SELECT ((NULL)-((- ('0.7724430787016356')))), (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), ((vt1.c0 IN ()) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ()))!=(((vt0.c0)>>(vt0.c0)))), ((((COUNT(*))OR(CAST(vt1.c0 AS INTEGER))))OR(MAX(vt1.c0))), CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) FROM vt0, vt1; -- 0ms;
SELECT ALL ((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND ((vt1.c0 IN ()))) FROM vt0 GROUP BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE RTRIM HAVING (+ (vt0.c0));SELECT DISTINCT CAST(((((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) AS BLOB), CAST(MIN(0.8140547587345646) AS BLOB), ((x'b9b7')<>((+ ('-884996530')))) FROM vt1;SELECT ALL ((MAX(vt0.c0)) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) IS TRUE))) FROM vt1, vt0 WHERE (((((- ('sF툔\n 3C')), ('361623796' IN ()), (((((((('-1801812281')OR('%i')))OR(x'9e451a0e')))AND(NULL)))AND('2011028292'))))<(((('-1682984010')%('#2M]')), (- (0xffffffff8b55ab65)), (NULL IN ()))))); -- 1ms;
SELECT COALESCE((+ (vt1.c0)), ((vt1.c0)>(vt1.c0))), ((vt1.c0)<=(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))), (~ (((0Xffffffffb1455a51)|(vt0.c0)))) FROM vt1, vt0 WHERE (CASE (NOT (NULL))  WHEN ((x'') IS FALSE) THEN ((((((((NULL)OR(NULL)))AND(NULL)))AND(0.11612466566331225)))AND(x'')) END) ORDER BY CAST(NULL AS NUMERIC) DESC; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ROWS  CURRENT ROW) FROM vt1 WHERE ((~ ((('') IS FALSE)))); -- 0ms;
SELECT DISTINCT (((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CAST(vt1.c0 AS TEXT))))OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)), (AVG(vt0.c0) IN (x'92b6')), (((('787632073')-(vt0.c0))) NOTNULL) FROM vt0 GROUP BY CASE vt0.c0  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (('kln54wBzd')/(vt1.c0)) END HAVING ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))) AND (((vt0.c0)-(vt1.c0))));SELECT ALL vt0.c0 FROM vt0, vt1 LIMIT -679243654 OFFSET 607019988; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 ORDER BY (+ (vt0.c0))  NULLS LAST;SELECT (((0.31977424348496897)) BETWEEN ((((vt1.c0)<=(vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) FROM vt1 WHERE (MIN(NULL COLLATE RTRIM, '1222086315', (((x'', NULL, 2.15827642E8))>((NULL, '533936972', x''))), 0.6299643109745443));SELECT DISTINCT ((((vt1.c0)AND(vt0.c0)))AND((('-903472271')>=(vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT CAST((~ (vt0.c0)) AS REAL) FROM vt0 WHERE (((x'')LIKE(NULL)) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE 0.18383151986946056  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE (((((((NULL)OR(NULL)))OR(0.6707680014036144))) BETWEEN (CAST(x'' AS REAL)) AND (((0.006106807034690576)IS NOT(NULL))))) ORDER BY ((((vt1.c0)<(vt0.c0))) NOTNULL) DESC  NULLS LAST;SELECT ALL (~ (vt0.c0)), (((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) IN ()), (NOT (vt1.c0 COLLATE RTRIM)) FROM vt0 WHERE (json_valid(((('-1952814079', 5.72606292E8, '-15362311')) NOT BETWEEN ((0Xffffffff99c21a44, x'', NULL)) AND (('0.4175124356004093', 0.4279896377044753, 'ᙐ,')))));SELECT DISTINCT '''dh*d' FROM vt1 NOT INDEXED, vt0 WHERE (GLOB((x'' IN ()), ('-2032933730' IN ('8J韫] <', NULL)))); -- 0ms;
SELECT 0.47111240899964324 FROM vt1; -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)IS NOT(((((vt0.c0)AND(vt1.c0)))OR(1560465693)))) FROM vt1, vt0 WHERE (LIKELY(((']洫') BETWEEN (x'') AND (-1.138170765E9)))); -- 0ms;
SELECT DISTINCT (~ (vt1.c0)) COLLATE RTRIM FROM vt0, vt1 WHERE ((((((((((('(x!) k孏') NOT BETWEEN ('-941915908') AND (x'cae9')))OR(((((x'')OR(-1.475884788E9)))OR('-1353653648')))))AND((('')>(x'1006')))))OR(CASE WHEN 'dGG' THEN NULL END)))OR(((('-1302239984'))>((1141072522)))))) GROUP BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)-(0.8375101633712336)))), LIKELY(CAST(vt0.c0 AS NUMERIC)), CAST(((x'e041')/(vt1.c0)) AS REAL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((vt0.c0))<((vt1.c0)))))), (((((vt1.c0)-(vt1.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0))<>((((vt0.c0) NOT NULL), TOTAL_CHANGES(), (vt1.c0 IN ())))); -- 1ms;
SELECT ALL ((vt0.c0)<(((vt0.c0)*(vt0.c0)))) FROM vt0, vt1 WHERE (((x'' COLLATE RTRIM)<=(((-869432177) NOT BETWEEN (0xfffffffff53bf27d) AND ('I2'))))); -- 0ms;
SELECT ALL ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))!=((((vt0.c0)AND(vt0.c0))))) FROM vt1, vt0 WHERE ((((((x'', '807558800', x'eaba'))<=((0.17688107657949614, x'', x'c297')))) NOT NULL)); -- 0ms;
SELECT DATETIME(CASE vt0.c0  WHEN vt0.c0 THEN '~' WHEN vt0.c0 THEN 0.3183502334528593 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)*(vt0.c0)), ((vt1.c0)LIKE(vt0.c0))) FROM vt0, vt1 GROUP BY (NOT (json_type(-886047356))) HAVING ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN ((0.4297353128313187 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c0)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (vt0.c0)) FROM vt1 WHERE ((((1222086315, 0.6889577362358784, NULL)) NOT BETWEEN ((CASE WHEN x'' THEN NULL WHEN x'' THEN '-1233923704' WHEN -1.25910232E8 THEN '1687826293' ELSE '-1725981113' END, CAST(0.3668270351593236 AS BLOB), (NOT (x'')))) AND (('-1190434381' COLLATE NOCASE, ((x'') NOT NULL), ((NULL) BETWEEN (0X55bf22f3) AND (x'd8e9'))))));SELECT DISTINCT CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0))==((vt1.c0))) ELSE ((vt1.c0)IS NOT(vt0.c0)) END, (('-455540823')&(MAX(vt0.c0))), CASE vt1.c0 COLLATE NOCASE  WHEN ((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN ((((((((1.320604793E9)AND(vt1.c0)))OR(0.5374616965043505)))OR(vt1.c0)))AND('jgZ-BI')) ELSE (- (vt0.c0)) END FROM vt0, vt1 WHERE ((((NULL IN (NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT NULL FROM vt1 WHERE (((UNICODE('174558976')) BETWEEN (('\nV' IN ())) AND (((0.4752419705554921)>(0.2854408557512559))))) GROUP BY ((((vt1.c0)%(vt0.c0)))%(((vt1.c0) ISNULL))) HAVING ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)|(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) LIMIT -133278236 OFFSET -1894722357;SELECT ALL FIRST_VALUE((((((((((vt1.c0 IN ()))OR(x'')))OR(LOWER(vt1.c0))))OR((+ (vt1.c0)))))OR((vt0.c0 IN ())))) OVER (), ((CAST(vt1.c0 AS BLOB))||(((vt0.c0) BETWEEN (0x6c53c99b) AND (vt1.c0)))), ((((('551058731' IN ()))AND((vt0.c0 IN ()))))AND(vt1.c0)) FROM vt0, vt1 WHERE (JULIANDAY(SQLITE_VERSION(), ((-1725981113) NOT BETWEEN (0.7763520619911214) AND ('-122531473')), ((((x'a9f1')OR('0.2605445901531923')))AND(x'')), x'1bba93c3', ((x'6e93')IS NOT(x'')))); -- 1ms;
SELECT DISTINCT ABS(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0x4918e09f WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END), ((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY, (- ((- (vt0.c0)))), (((NULL))>((((vt0.c0) IS TRUE)))), ((NULL)<(((vt0.c0) IS TRUE))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE, (((- (vt1.c0)))>=(NULL)) FROM vt0 WHERE (((((((NULL) IS FALSE))AND(TRIM(x'f6b9'))))AND((NOT (x''))))) LIMIT -242022091;SELECT DISTINCT (((((vt1.c0 IN ()))OR(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT NULL COLLATE NOCASE), ((((vt0.c0) NOT NULL)) NOT NULL), LIKELIHOOD(vt1.c0 COLLATE RTRIM, 0.13658428413565282) FROM vt1 WHERE (1.320604793E9);SELECT DISTINCT UNLIKELY(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))), (((0xffffffffdf930065)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END)) AND ((MAX(vt1.c0, vt0.c0, vt0.c0, vt0.c0)))), ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))) NOTNULL) FROM vt0 WHERE (CAST(CAST('' AS BLOB) AS NUMERIC));SELECT DISTINCT ((((NULL)OR((('2102764291') IS TRUE))))OR(CAST(vt0.c0 AS INTEGER))), CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN COUNT(*) ELSE COUNT(*) END, ROW_NUMBER() OVER ( ORDER BY ((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, NULL, vt0.c0))) IN ()), (NOT (NULL))  NULLS LAST, CAST((((vt1.c0, vt1.c0, vt0.c0))==((vt1.c0, vt0.c0, '2011028292'))) AS BLOB) ASC) FROM vt1 WHERE ('0.024595369896366348');SELECT RANK() OVER ( RANGE  CURRENT ROW) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt1 WHERE (TIME(((NULL)=('djR')), (('346902855')<<(x'e851')), 0X148fbb3f)) ORDER BY (('-941915908') BETWEEN (((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(x'bc115be8'))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST;SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (CASE ((((x'')OR(0.312025603417614)))OR('-1335898070'))  WHEN ((0.9903369686752906)AND('0.024595369896366348')) THEN ((0.625726502285816)OR('''\xlv#*5v')) END) ORDER BY HEX((~ (vt1.c0))); -- 0ms;
SELECT ALL ((((vt1.c0) IS FALSE)) NOTNULL), ((0.03140481610815571) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY, (((vt0.c0) IS FALSE) IN ()) FROM vt0 WHERE (((((((NULL)OR(0.17154908285121828)))OR(0.31108452044007506))) BETWEEN ('0.5603956747003077' COLLATE RTRIM) AND (x'')));SELECT DISTINCT (((((vt1.c0) IS TRUE)))>=((x'' COLLATE BINARY))) FROM vt1 WHERE ((+ (((NULL) BETWEEN ('2052791587') AND (-1768859440))))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.7403302352907325 WHEN vt1.c0 THEN x'0776' ELSE x'8877' END)) LIMIT 100846926;SELECT DISTINCT (((+ (vt1.c0)))<<((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((''))))) FROM vt1, vt0 WHERE (CAST((((0.9291217647115397, '-1379224600', NULL))>(('䊉惟', x'', '715282441'))) AS REAL)); -- 0ms;
SELECT CAST((((vt1.c0))==((vt1.c0))) AS TEXT) FROM vt0, vt1 WHERE (CAST(((x'') BETWEEN ('') AND ('')) AS NUMERIC)) GROUP BY (('-802442338' COLLATE NOCASE) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, vt0.c0)) AND (((vt1.c0)GLOB(vt0.c0)))) HAVING vt1.c0; -- 1ms;
SELECT vt1.c0, CASE WHEN CAST(x'' AS NUMERIC) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE ((vt1.c0)LIKE(vt1.c0)) END, ((((((vt0.c0))>=((vt1.c0)))))<=((CAST(vt0.c0 AS REAL)))) FROM vt1 NOT INDEXED, vt0; -- 0ms;
SELECT ALL LEAD((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('W	廢', vt1.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((0.546050582754201, vt0.c0, vt0.c0, vt1.c0, vt0.c0))), (('-1944049859')OR(vt1.c0)), CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) AND ((CAST(vt0.c0 AS NUMERIC), ((vt1.c0)LIKE(vt1.c0)), ((vt0.c0)||(vt1.c0))))), COALESCE(vt0.c0, vt1.c0 COLLATE BINARY), ((((((vt1.c0)IS(vt0.c0)))OR(((vt1.c0)>>(vt0.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) OVER (), vt1.c0, TYPEOF(vt0.c0 COLLATE BINARY) FROM vt0 NOT INDEXED, vt1 WHERE (((((x'') NOT BETWEEN ('7.867068179011616E-4') AND (NULL))) IS FALSE)); -- 1ms;
SELECT DISTINCT '931996878', CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN ((vt0.c0)||(vt1.c0)) END, GROUP_CONCAT((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) COLLATE RTRIM FROM vt0 WHERE (((((x'')>=('ぷ\')))=(CASE NULL  WHEN x'' THEN '-38166585' WHEN '' THEN 52757896 WHEN NULL THEN NULL ELSE x'' END)));SELECT DISTINCT -936882026 FROM vt0 WHERE (((((NULL)GLOB('1\r\r?x|G'))) NOTNULL)); -- 0ms;
SELECT ((((TYPEOF(vt1.c0))AND(((vt1.c0)*(vt1.c0)))))AND(((NULL)<=(vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(vt1.c0 COLLATE BINARY AS TEXT) FROM vt1 WHERE ((((((('')OR(x'd151')))AND(x'f0fc'))) NOT BETWEEN (((('', '(x!) k孏', '-1287006939'))<((NULL, x'3b42', NULL)))) AND (CAST(x'' AS INTEGER)))); -- 0ms;
SELECT ALL ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ()), COUNT(*) OVER (), GROUP_CONCAT(((0Xffffffffc31f26ac) NOT NULL)) FROM vt0, vt1 ORDER BY '-1939919033' ASC, (((vt0.c0) BETWEEN (vt1.c0) AND (x'')) IN ())  NULLS FIRST, ((CASE WHEN vt1.c0 THEN 0Xffffffff96edc56c WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)LIKE(NULL)) DESC  NULLS LAST; -- 0ms;
SELECT CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) AS TEXT) FROM vt0 WHERE (((((0.6304108433050164) NOT BETWEEN ('-858278426') AND (x'8550'))) IS TRUE));SELECT ALL NTILE(x'3862') OVER () FROM vt0;SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((+ (x'7bf5'))) BETWEEN (NULL COLLATE NOCASE) AND (((0xffffffffca9f4319) IS TRUE)))) UNION SELECT DISTINCT (((vt1.c0)) BETWEEN ((((vt0.c0)/(vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) FROM vt0, vt1 WHERE (('-801681847' IN ((('2099988976') NOT BETWEEN (0xfffffffffc55f82c) AND (1722653702)), '-128215391'))); -- 0ms;
SELECT DISTINCT vt0.c0, (vt0.c0 IN ()), vt1.c0 FROM vt1, vt0 NOT INDEXED; -- 0ms;
SELECT -1484555483, ((((vt1.c0)<=(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC))), (NOT (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) FROM vt1, vt0 WHERE (CAST(((0xffffffffe7000c29)>>(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT (((0.34068094933294346)) BETWEEN ((((vt0.c0)<<(vt0.c0)))) AND ((((vt1.c0)LIKE(vt0.c0))))) FROM vt0, vt1 WHERE ((((- ('<')))>=(((('vaGf\r,f%', x'', NULL))<((NULL, NULL, x'')))))) GROUP BY (((((vt0.c0)) NOT BETWEEN ((0.9661948941451486)) AND ((vt1.c0)))) BETWEEN ((((vt0.c0, vt0.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))) AND ((((vt1.c0))=((x''))))), vt0.c0, TYPEOF(DISTINCT ((vt0.c0) IS TRUE)) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY ASC; -- 0ms;
SELECT ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ()) FROM vt0 WHERE ((((-1664151948)LIKE('-1965026257')) IN ())); -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0))>((vt1.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((((vt1.c0))=((vt0.c0))))) FROM vt1 WHERE (NULL) GROUP BY ((((0Xffffffffb7828bea) NOTNULL))=(vt1.c0)) HAVING COUNT(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) LIMIT -1500084982 OFFSET 438494934;SELECT DISTINCT (~ ((vt1.c0 IN ()))) FROM vt0 WHERE (CASE WHEN ('w?' IN (0.6314707367740968)) THEN UPPER(x'') WHEN ((NULL)>(x'')) THEN CASE '-1534720780'  WHEN x'' THEN '' END WHEN CASE WHEN '459785455' THEN NULL ELSE NULL END THEN CAST(0.24848879694737058 AS NUMERIC) WHEN CASE '-1475884788'  WHEN 0.2818199012168725 THEN 0xffffffffb4359d74 ELSE x'' END THEN (NOT ('896690375')) WHEN CAST('0.44663839368177505' AS NUMERIC) THEN CASE x''  WHEN x'40c3eb68' THEN 'm' END END) GROUP BY CAST(((vt0.c0)&(vt1.c0)) AS TEXT), (((+ (vt1.c0)))LIKE(CAST(vt0.c0 AS BLOB))), (CASE WHEN '' THEN vt1.c0 END IN (x'f254', ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));SELECT ALL CASE vt0.c0  WHEN (('1484272318') NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt0.c0 END, CASE WHEN vt1.c0 COLLATE NOCASE THEN (vt0.c0 IN (vt1.c0)) END, ((vt1.c0)*(vt1.c0)) COLLATE NOCASE FROM vt1, vt0; -- 0ms;
SELECT ALL ((('-268886416')=(vt0.c0)) IN ()) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((NOT (vt0.c0))))>((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0, vt1 WHERE (((((('-463942377')<(x''))))>=(('輀S^KC5')))); -- 0ms;
SELECT DISTINCT CHANGES() FROM vt1; -- 0ms;
SELECT ALL ((((CAST(0.9858034223650719 AS NUMERIC))OR(LOWER(DISTINCT vt0.c0))))AND(((vt0.c0) IS FALSE))), ((CAST(-153404299 AS REAL)) NOT BETWEEN ((vt1.c0 IN ())) AND (0.5409261640462131)), CASE GROUP_CONCAT(vt0.c0)  WHEN (NOT (vt1.c0)) THEN ((vt0.c0)&(vt0.c0)) END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-2091868582' ELSE vt0.c0 END)) FROM vt1 WHERE (CAST((((NULL))<((NULL))) AS BLOB)) UNION ALL SELECT DISTINCT MAX((~ (vt0.c0))) FROM vt0, vt1 WHERE (((CAST(x'3ea7' AS TEXT)) BETWEEN ((NOT ('1670572773'))) AND ((((('-693806937')OR(0.6567726053866086)))AND('gLcj')))));SELECT CAST(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS BLOB) FROM vt0, vt1 WHERE ((((x'') IS FALSE) IN ())) ORDER BY ((((vt0.c0) NOT NULL))IS NOT(((vt1.c0)/(vt1.c0)))), vt0.c0 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt1.c0, vt1.c0, x'')) BETWEEN ((CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS NUMERIC))) AND ((vt1.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 'V?NY+(5|'))) FROM vt1, vt0 WHERE (CAST(((NULL)<(NULL)) AS REAL)); -- 0ms;
SELECT ALL CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.549276834234981 WHEN vt0.c0 THEN vt1.c0 WHEN -1.138170765E9 THEN vt0.c0 ELSE vt1.c0 END AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT SUM(vt0.c0), ((vt0.c0) IS FALSE)) FROM vt1 WHERE ((((('F') IS FALSE))LIKE((('q㒐e%')|('-150527114'))))) ORDER BY (((0Xffffffffd44daa14)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM, (NOT (CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST;SELECT DISTINCT SUM(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0))) COLLATE RTRIM, (((+ (vt0.c0))) NOTNULL), x'' FROM vt1, vt0 WHERE ((((((((((x'' IN ('qge')))OR(CASE WHEN '0.05351563834950401' THEN 0.06208165999978721 END)))OR(x'b3f2')))OR((NOT ('')))))OR(((0.49179260741191155)>=(x''))))); -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS INTEGER)))), CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE, ((((vt1.c0 IN (vt0.c0, vt0.c0))))<=((MAX(vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT -1884420974 COLLATE NOCASE, ((x'2bb7')IS(((vt0.c0)LIKE(vt1.c0)))), vt0.c0 FROM vt0;SELECT DISTINCT ((((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND((((vt1.c0))<((vt0.c0))))))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0, vt1 WHERE ('4{'); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (vt1.c0 COLLATE BINARY)) FROM vt0, vt1 WHERE ((((NOT (NULL)))/('-1990201936'))); -- 0ms;
SELECT ALL ((vt1.c0) BETWEEN ('-1892900536') AND (vt0.c0)) COLLATE NOCASE FROM vt1 WHERE (COALESCE(((((NULL)AND(0.7279931885683177)))AND('-1999805163')), ((NULL)=(-1.725981113E9))));SELECT ALL ((LIKE(vt1.c0, '1378152038', '<')) NOT NULL) FROM vt1, vt0 WHERE (CAST(0.44663839368177505 AS REAL)) GROUP BY vt0.c0, (vt1.c0 IN (vt1.c0)) COLLATE BINARY, (((vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END)) AND (((- (vt1.c0))))); -- 0ms;
SELECT DISTINCT (LIKELY(DISTINCT vt1.c0) IN (NULL)), UNLIKELY(vt0.c0) COLLATE RTRIM, ((((-881109441) IS FALSE))IS NOT(x'')) FROM vt0, vt1 WHERE (((0Xffffffff82d879ec)=(NULL)) COLLATE RTRIM); -- 0ms;
SELECT vt1.c0, CAST(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) AS BLOB), COUNT(*) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)) COLLATE BINARY FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS INTEGER), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE, vt1.c0 FROM vt0, vt1 NOT INDEXED WHERE ((((((NULL)OR(-1608182439)))OR(NULL)) IN ())); -- 0ms;
SELECT ((((((((((vt1.c0)LIKE(vt0.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt0.c0)>=(vt0.c0)))))AND(LIKELY(vt0.c0))))OR('-463942377')) FROM vt0 WHERE (((CAST(0.5747541505423892 AS REAL)) ISNULL));SELECT vt1.c0 COLLATE NOCASE FROM vt0 WHERE (((CASE WHEN x'' THEN '!6.巗㕮-?ce' END) ISNULL));SELECT ALL '-1971232545' FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM FROM vt0, vt1 WHERE (((((x'')/('699127816')))<<(((0X69dc95bc) NOT BETWEEN (NULL) AND (NULL))))) ORDER BY ((((-2.132021139E9)<=(vt1.c0))) ISNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE vt1.c0  WHEN x'' THEN vt0.c0 ELSE vt1.c0 END) AND (CASE vt1.c0  WHEN vt0.c0 THEN 0xffffffffda105f95 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END)) FROM vt1, vt0 WHERE (((((((((LIKELY(0.193840566482137))AND(((NULL) IS TRUE))))OR(0.00853164128415751)))OR(((0.05744630444404242) NOTNULL))))AND((((0.7489507063591091, '-678045348', x'')) NOT BETWEEN ((x'', ' FN}nq1쾀', x'')) AND ((0.5845690632703855, x'', x'')))))); -- 0ms;
SELECT DISTINCT (((+ (vt0.c0)))LIKE(vt0.c0)) FROM vt1 WHERE (((((0x5d02d11d) BETWEEN ('-1303415682') AND (NULL))) NOT BETWEEN (('[9h	N?j' IN ())) AND (TRIM(NULL))));SELECT ALL LEAD(LIKELY(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)), ((((+ (572606292))))>=((((vt0.c0)<=(vt1.c0))))), (vt0.c0 IN (vt0.c0)) COLLATE RTRIM) OVER ( ORDER BY vt1.c0) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT 0.36607994147545286 FROM vt1 GROUP BY (((vt0.c0)OR(vt1.c0)) IN ()) HAVING CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN (NOT (vt0.c0)) THEN (NOT (vt1.c0)) ELSE ((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) END ORDER BY (((vt0.c0)/(vt0.c0)) IN ()) ASC;SELECT MIN(((((vt0.c0)OR(NULL)))OR(vt0.c0)), ((vt1.c0)%(vt0.c0))) FROM vt1, vt0 WHERE ((~ (LOWER(-1.71533254E9)))); -- 0ms;
SELECT DISTINCT json_type(CASE vt1.c0  WHEN vt0.c0 THEN x'' ELSE vt1.c0 END), (((vt1.c0)) BETWEEN (((- (vt1.c0)))) AND (((('')-(vt1.c0))))), CAST((((vt0.c0, vt1.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt1.c0))) AS BLOB) FROM vt0;SELECT DISTINCT x'' FROM vt1, vt0 WHERE (CAST(((x'')!=(NULL)) AS BLOB)); -- 0ms;
SELECT TOTAL((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0))>((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0)))), COUNT(((vt0.c0)GLOB(vt0.c0))) COLLATE NOCASE, ABS(vt1.c0 COLLATE NOCASE) FROM vt1 WHERE (((((0.9598100236641299) IS TRUE))<=((('839661482') IS TRUE))));SELECT DISTINCT ((MIN(vt0.c0))>=(((vt1.c0)OR(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(((vt1.c0)=(vt0.c0)))))OR(HEX(DISTINCT vt1.c0))) FROM vt1;SELECT DISTINCT 0.16672241824550094 FROM vt1 ORDER BY (('-941915908') ISNULL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))GLOB(vt0.c0)) FROM vt0, vt1 WHERE (LENGTH('289622186')); -- 0ms;
SELECT CASE WHEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN LOWER(vt0.c0) WHEN ((vt0.c0) IS TRUE) THEN (((vt1.c0, vt1.c0, vt1.c0))=((vt0.c0, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)AND(vt0.c0)))OR(0.9958477485127815)) THEN ((vt0.c0) IS FALSE) ELSE (+ (vt1.c0)) END FROM vt0 WHERE (((LIKELY(x'4369')) NOT BETWEEN (((NULL) NOT NULL)) AND ((((((((('')OR(x'95c4')))AND('	''2>[zr%')))AND('㙋mzP')))OR(x'0955')))));SELECT ALL vt0.c0, ((((((vt1.c0)>(vt1.c0)))AND(MAX(vt0.c0))))AND(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))), LAST_VALUE((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))OR(LIKE(vt1.c0, 0.7795168748096315))))AND(((vt0.c0)>=(vt0.c0))))) OVER ( ORDER BY CAST('699127816' AS INTEGER)  NULLS FIRST, vt0.c0 ASC, (((((vt1.c0) NOT NULL)))>=((CASE WHEN vt1.c0 THEN vt1.c0 END)))), ((((~ (vt1.c0))))<>((HEX(vt0.c0)))), ((QUOTE(vt1.c0)) NOT NULL) FROM vt0, vt1 ORDER BY ((((vt1.c0))==((vt1.c0))) IN ()) ASC; -- 0ms;
SELECT DISTINCT CASE TRIM(vt0.c0)  WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN 0.6332857588800256 WHEN '654476889' THEN (vt1.c0 IN ()) WHEN LIKELY(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE CASE x''  WHEN vt1.c0 THEN vt0.c0 END END FROM vt1, vt0 GROUP BY LIKELIHOOD(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, 0.9939555969746571); -- 0ms;
SELECT x'', ((((vt0.c0)GLOB(vt1.c0)))&(x'' COLLATE BINARY)), UNLIKELY(((vt1.c0)|(vt1.c0))) FROM vt0;SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0)))AND(CAST(vt0.c0 AS INTEGER))) FROM vt0;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))IS(((vt1.c0) IS TRUE))), NULLIF(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END, CAST(vt1.c0 AS INTEGER)), (~ (vt0.c0)) COLLATE BINARY FROM vt1, vt0 WHERE ((((NULL IN ())) NOTNULL)); -- 0ms;
SELECT (((NULL)) NOT BETWEEN (('931996878')) AND ((((vt1.c0)=(vt0.c0))))), json_object((vt0.c0 IN ()), ((vt0.c0) IS TRUE)), COALESCE(DISTINCT ((vt0.c0)IS(vt1.c0)), COUNT(vt1.c0)) FROM vt0;SELECT vt0.c0 COLLATE NOCASE, HEX(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((((vt0.c0)%(vt0.c0))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY FROM vt0;SELECT ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL), (MAX(vt1.c0) IN ((((vt1.c0))<=((0.18094302060263023))))), ((LIKELIHOOD(vt1.c0, 0.7839165287219454))<<(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE x'' END)), (NOT (vt0.c0)) COLLATE BINARY, CAST(((vt0.c0)GLOB(vt1.c0)) AS NUMERIC) FROM vt1, vt0 WHERE (CASE (((('-1703852076')OR(-8.95532263E8)))AND(0.03300315310293955))  WHEN (('0.6299643109745443')==(0.6892291923845043)) THEN ((-1.611479693E9) NOT BETWEEN ('T') AND (NULL)) ELSE LOWER(DISTINCT -1680144962) END); -- 0ms;
SELECT ALL ((IFNULL(vt1.c0, vt1.c0)) ISNULL) FROM vt1 WHERE ((+ ((- (-2132021139))))); -- 0ms;
SELECT ALL ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM, (- ((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))))), (((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt1.c0) AND ('-2143084625')), json_array_length(vt0.c0), (vt0.c0 IN ()))) AND ((x'', json_valid(vt0.c0), vt0.c0))) FROM vt1, vt0 WHERE ((((((((((NOT (x'')))OR(CAST('' AS INTEGER))))OR(NULL)))OR((~ (0.963715235834456)))))OR(''))); -- 1ms;
SELECT (+ (((vt1.c0)>(vt1.c0)))), MIN(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) COLLATE BINARY, ((((vt1.c0)GLOB(vt0.c0))) ISNULL) FROM vt0, vt1 WHERE ((((((x'', '7', NULL)) BETWEEN ((x'', x'08963432', NULL)) AND ((NULL, '-1346130492', NULL))))>>(((((((((((((0.9406256881323865)AND(0Xc39686a)))AND(0.20733837992787374)))AND(1934886015)))AND(NULL)))OR(x'1174')))OR('-732643918'))))); -- 0ms;
SELECT DISTINCT CASE 0.6068137674281179 COLLATE RTRIM  WHEN ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (((-1541187333)) NOT BETWEEN ((0.48660889841543986)) AND ((vt0.c0))) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt0.c0 END, 0x461ab1dd, ((((((((((x'd77c') NOTNULL))OR(CASE vt1.c0  WHEN vt1.c0 THEN -733328150 END)))OR(CAST(vt0.c0 AS REAL))))OR(NULL COLLATE BINARY)))AND(CAST(vt0.c0 AS BLOB))) FROM vt0 LIMIT -1595518850 OFFSET -702101177;SELECT DISTINCT ((((vt0.c0 COLLATE RTRIM)OR('717638398')))OR((vt1.c0 IN ('1764682111', vt0.c0)))) FROM vt1 WHERE (((CASE WHEN 0.2605445901531923 THEN NULL END)!=((x'' IN ()))));SELECT DISTINCT (((vt1.c0) NOTNULL) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, 0x2ce77a58 COLLATE NOCASE)) FROM vt1, vt0 GROUP BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOTNULL) HAVING (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))==(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))); -- 0ms;
SELECT DISTINCT -802370868, vt0.c0, LIKELIHOOD(vt1.c0, 0.04127193193032497) FROM vt0 WHERE ((((('l&')AND(0.9782341064047111)))OR(NULL)) COLLATE NOCASE);SELECT (((vt1.c0)) NOT BETWEEN ((x'')) AND ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0))))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt1.c0))) ISNULL), ((vt1.c0 IN (0.866555012015016)) IN ()), NULL FROM vt1;SELECT DISTINCT ABS(vt0.c0 COLLATE NOCASE) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((+ (vt0.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0 ORDER BY vt1.c0 DESC  NULLS FIRST;SELECT DISTINCT ((((((vt0.c0)>(vt1.c0)))OR(((((((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))))OR(TOTAL(vt1.c0))) FROM vt1 WHERE ((-236924931 COLLATE NOCASE IN ()));SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(json_patch(vt0.c0, vt0.c0))) FROM vt0, vt1 ORDER BY (((vt1.c0) NOT NULL) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('0.25374894415531624')), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, ((((('{', vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, 0.20398299334508052, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL))))<=(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))) ASC, CASE WHEN ((vt0.c0) IS TRUE) THEN CAST(vt1.c0 AS BLOB) ELSE SQLITE_COMPILEOPTION_GET(vt0.c0) END ASC  NULLS FIRST;SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)+(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt1.c0 END)), ABS((x'' IN ())), ((((NULL)OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))), ((CAST(vt1.c0 AS BLOB))>>(CAST(vt1.c0 AS TEXT))), (- (vt0.c0)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (LOWER(vt0.c0) IN (((vt1.c0)OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)))), CAST(NULL AS INTEGER) COLLATE NOCASE, MIN((((x'', vt0.c0, vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0, x'', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))) COLLATE RTRIM), CAST(vt0.c0 COLLATE NOCASE AS NUMERIC), CAST((~ (vt1.c0)) AS BLOB) FROM vt1 WHERE (CASE WHEN '' COLLATE NOCASE THEN (((((((('')AND('0.2854408557512559')))OR(')64pw2}oᙐ')))OR('551058731')))OR('V)%mL0l9J흾H')) END);SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))) ISNULL), MAX(CAST(vt1.c0 AS TEXT)), (~ (((vt1.c0) ISNULL))) FROM vt0, vt1 LIMIT 212381254; -- 0ms;
SELECT ((((vt0.c0) NOT NULL))==(((vt1.c0)>>(vt1.c0)))) FROM vt0;SELECT DISTINCT CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) AS TEXT), ((((vt0.c0) BETWEEN (vt1.c0) AND ('-1e500')))LIKE(((vt1.c0)AND(vt0.c0)))), CASE WHEN ((vt1.c0) ISNULL) THEN (vt0.c0 IN ()) END FROM vt1 WHERE (((x'') NOT BETWEEN (((((((((0x461ab1dd)AND(NULL)))AND(1813737962)))OR('s1푸7?')))AND('-22964331'))) AND (CASE ''  WHEN '-1884420974' THEN '' ELSE x'' END)));SELECT DISTINCT CUME_DIST() OVER ( ORDER BY ((vt1.c0 COLLATE RTRIM) IS TRUE)  NULLS FIRST) FROM vt1 WHERE (CAST(((-1.541187333E9) IS FALSE) AS NUMERIC)) GROUP BY vt1.c0; -- 0ms;
SELECT ALL GROUP_CONCAT(vt1.c0) OVER () FROM vt1; -- 0ms;
SELECT ALL CASE vt0.c0 COLLATE NOCASE  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt1.c0)-(vt1.c0)) ELSE ABS(DISTINCT vt1.c0) END FROM vt1 NATURAL JOIN vt0 WHERE ((~ ((((246328327)) BETWEEN ((x'260d2767')) AND ((0.9217308116239322)))))); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt0;SELECT ((vt0.c0) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (((vt0.c0)/(vt0.c0)))) FROM vt1 NOT INDEXED, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)OR('-1801812281')))OR(vt0.c0)) IN ()), (COUNT(*) IN (vt0.c0 COLLATE RTRIM)), MIN(vt0.c0) FROM vt1 WHERE ((((('[>h	N?V') IS FALSE)) NOT NULL)) LIMIT 551058731 OFFSET -1801812281;SELECT DISTINCT ((((('', vt1.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c0))))*(CASE WHEN vt0.c0 THEN vt1.c0 END)), SUM(((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0))), ((- (vt1.c0)) IN ()) FROM vt0, vt1 WHERE (CASE WHEN '331710562' COLLATE RTRIM THEN ((((NULL)AND('TY?m')))OR('ㆶIf^W')) WHEN ((NULL) ISNULL) THEN CAST(NULL AS INTEGER) WHEN (((NULL))>=(('䊉惟'))) THEN LIKELIHOOD(DISTINCT x'1e91', 0.5520776944870958) ELSE CAST(NULL AS REAL) END); -- 0ms;
SELECT ALL ((((vt1.c0)AND(((-9.65464035E8)/(vt0.c0)))))AND(vt1.c0)) FROM vt1, vt0; -- 1ms;
SELECT ALL LAST_VALUE(((((((vt1.c0)GLOB(vt1.c0)))AND(((((vt1.c0)AND(NULL)))AND(vt1.c0)))))AND((~ (vt1.c0))))) OVER ( PARTITION BY vt0.c0, CAST(((vt0.c0)OR(vt1.c0)) AS BLOB)) FROM vt1 WHERE (((((0.2714471358350137)-('516781362'))) NOT BETWEEN (CASE 0.9818165575790534  WHEN '-1188758227' THEN NULL ELSE '7?Hm' END) AND (-868449709 COLLATE BINARY)));SELECT ALL (((NOT ('氍97)')))=((vt1.c0 IN ()))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0)AND(x''))) IS FALSE) FROM vt1, vt0 WHERE (CASE (+ (0Xffffffffe048e69f))  WHEN ((((((((NULL)AND(NULL)))AND('')))AND(NULL)))AND(0X3feee9ae)) THEN NULL END); -- 0ms;
SELECT ALL ((((vt1.c0)>>(vt0.c0))) ISNULL) FROM vt0 NATURAL JOIN vt1 WHERE ((CASE WHEN 0.7680532867473318 THEN x'' END IN ())); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((CASE WHEN vt0.c0 THEN vt0.c0 END)|(LTRIM(vt0.c0, vt0.c0))), ((CAST(vt1.c0 AS REAL))*(0Xffffffffe3bff880)) FROM vt1, vt0 WHERE ((((('0.34821511705942676')<(0xffffffffb0c5a07b))) ISNULL)) GROUP BY LIKELIHOOD((vt0.c0 IN ()), 0.5855950776552756), 0.6300139265405054, (((((vt1.c0, vt1.c0, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0))))+((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))), (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))), CAST(vt0.c0 AS BLOB) HAVING (~ (((vt1.c0) ISNULL))) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC; -- 1ms;
SELECT DISTINCT ((x'')=('-1680144962' COLLATE BINARY)), ((CASE WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN ((~ (vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))), ((vt1.c0)<((((vt0.c0))!=((x'8b8e'))))) FROM vt0, vt1; -- 0ms;
SELECT ALL (~ (vt0.c0)) COLLATE NOCASE FROM vt1;SELECT DISTINCT (GROUP_CONCAT(NULL) IN ()) FROM vt1 WHERE (((((((NULL)OR(0.08235236909687271)))OR(0.761393460878635))) BETWEEN (('' IN ())) AND ((NOT (15224665))))); -- 3ms;
SELECT DISTINCT vt0.c0, (IFNULL(DISTINCT '659322249', vt0.c0) IN (json_remove(vt0.c0, vt1.c0), CASE WHEN vt1.c0 THEN vt0.c0 END)), ((((NULL)AND(((vt0.c0) NOT NULL))))AND(((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))) FROM vt1;SELECT ((CAST(vt0.c0 AS NUMERIC))&(vt1.c0)) FROM vt0 WHERE ((- (TYPEOF(DISTINCT ''))));SELECT ((1746259825) NOTNULL) FROM vt0; -- 0ms;
SELECT SUM((0.5297259851427872 IN ())) FILTER(WHERE (((((vt1.c0)==(vt1.c0))))>((CAST(vt0.c0 AS BLOB))))) OVER () FROM vt1, vt0 WHERE (CASE WHEN (((712160510, NULL, x''))>=(('58646645', NULL, 0.8821158292071581))) THEN ((x'') ISNULL) ELSE -930575242 COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT CAST('KvDC3(dK' AS REAL), ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE NOCASE, ((vt0.c0 COLLATE BINARY)||(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))) FROM vt0, vt1 GROUP BY (((('842537061')AND(((vt1.c0)/(vt0.c0)))))AND(((vt0.c0) ISNULL))) ORDER BY ((1.131272914E9) IS FALSE)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((vt1.c0) NOT NULL)))>((((vt1.c0) NOT NULL)))) FROM vt0, vt1 WHERE (((COALESCE(DISTINCT 1389034925, '-592367873')) NOT BETWEEN (CAST(NULL AS REAL)) AND (((0.3428692112814006)<=('al(lt'))))) GROUP BY vt1.c0 ORDER BY CASE ((vt1.c0)AND(vt0.c0))  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS BLOB) END  NULLS LAST; -- 0ms;
SELECT AVG(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))), AVG((- (vt1.c0))) OVER (), (((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)) IN ()) FROM vt0, vt1; -- 0ms;
SELECT ALL MIN((~ (vt1.c0))) FROM vt1, vt0; -- 0ms;
SELECT ALL LIKE((((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((x'0776', vt0.c0, vt0.c0, vt0.c0, 0Xcdd44ba))), ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)), '䒺') FROM vt0 WHERE (LIKELIHOOD(('0' IN (0xffffffffe1e74ad6)), 0.48207366882280667));SELECT AVG(((vt1.c0) IS FALSE)) OVER ( ORDER BY (0.8561179084454327 IN ()) ASC), (((((((((((((NULL IN (vt0.c0)))OR(vt1.c0)))AND(((vt0.c0) NOT BETWEEN (0.0025022199756077335) AND (vt1.c0)))))OR(COALESCE(vt1.c0, vt1.c0, vt0.c0, vt1.c0))))AND((NOT (vt1.c0)))))OR(x'')))OR(CAST(vt0.c0 AS REAL))), TOTAL(((NULL)*(vt0.c0))) FROM vt0;SELECT DISTINCT (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt1.c0 AS BLOB)))), ((IFNULL(vt1.c0, '-1143740583'))AND(vt0.c0)), GROUP_CONCAT((NOT (vt0.c0))) FROM vt0 WHERE (((((x'')OR('破flm'))) BETWEEN ((('0.335070699483342') IS TRUE)) AND (((0x3b9f297e) BETWEEN (0.6756058338366174) AND (NULL)))));SELECT DISTINCT vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT GROUP_CONCAT((vt1.c0 IN ())) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (((x''))<>((NULL))), 0.02259264006387396)); -- 0ms;
SELECT NULL, ((vt0.c0 COLLATE BINARY) NOT NULL), (((((vt1.c0 IN (vt1.c0)))OR(TRIM(DISTINCT vt1.c0, vt0.c0))))AND(vt0.c0)) FROM vt0, vt1 NOT INDEXED WHERE (((-3.07314552E8 IN ()) IN ())) ORDER BY ((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE '' END)OR((NOT (vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))))OR((+ ('rX%6T')))))OR(((vt1.c0) NOT BETWEEN (0.6046783937189198) AND (vt1.c0)))), (((json_valid(vt0.c0)))>=((((vt1.c0) IS TRUE)))); -- 0ms;
SELECT ((((vt1.c0)AND(vt1.c0))) IS FALSE) FROM vt0;SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(COUNT(*))) FROM vt1, vt0 WHERE ('~b'); -- 0ms;
SELECT ((((((((COUNT(vt1.c0))OR(vt0.c0)))AND(((vt1.c0) ISNULL))))OR('201754605')))OR(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))) FROM vt0, vt1 WHERE (CAST((('') IS TRUE) AS INTEGER)); -- 0ms;
SELECT DISTINCT (- ((('-1715332540') BETWEEN (vt0.c0) AND (0Xffffffffca261b71)))) FROM vt0 WHERE (-1886415661); -- 0ms;
SELECT (((vt0.c0)IS(vt0.c0)) IN ()) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0))=((vt1.c0))))=(((vt0.c0)OR(0.07780765845763593)))), TYPEOF(CAST(vt0.c0 AS INTEGER)), (((NOT (vt1.c0))) NOTNULL) FROM vt1;SELECT DISTINCT COALESCE(DISTINCT 0.7664159531984139, CAST('e[#Y#Ykh' AS NUMERIC)) FROM vt1 WHERE (((CAST(x'' AS TEXT)) NOT NULL)); -- 0ms;
SELECT (NOT ((~ (vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0)==(vt0.c0)))<>(((vt1.c0)IS(vt1.c0)))), ((((vt1.c0)OR(vt0.c0))) ISNULL), ((((vt1.c0)AND(((vt1.c0)LIKE(vt0.c0)))))AND(MAX(vt0.c0))), IFNULL(GROUP_CONCAT(vt1.c0), ''), UNICODE(vt1.c0) COLLATE NOCASE FROM vt0 WHERE ((((0.49039299181710727)) NOT BETWEEN ((((NULL) NOT NULL))) AND ((CAST(1836140288 AS BLOB)))));SELECT ALL ((CAST(vt0.c0 AS BLOB))<=(LIKELIHOOD(vt1.c0, 0.5769619165064146))), ((((vt0.c0) NOT NULL))<=((+ (NULL)))), ((((SUM(vt0.c0))OR(vt0.c0)))OR(0.810312394397705 COLLATE RTRIM)) FROM vt0;SELECT DISTINCT ((TOTAL(vt1.c0))/(((vt1.c0) NOT NULL))) FROM vt0, vt1 WHERE (CASE ((0Xffffffffb40fb430)<(x'56a0'))  WHEN (('-1837410628') IS TRUE) THEN ((0.07425311461983908) BETWEEN (0.6860274932068102) AND (0.5364292273850625)) ELSE ((x'')||(0.733279424592427)) END) LIMIT 1320604793; -- 0ms;
SELECT DISTINCT CAST(load_extension(vt1.c0) AS INTEGER) FROM vt1 GROUP BY (((vt1.c0 IN (vt1.c0)))/(CAST(vt0.c0 AS INTEGER))), CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt1.c0)GLOB(vt0.c0)) WHEN (vt1.c0 IN ()) THEN (((vt1.c0, vt1.c0, x''))>((vt0.c0, vt1.c0, vt0.c0))) WHEN vt0.c0 COLLATE RTRIM THEN ((NULL)*(vt1.c0)) END, (NOT (vt0.c0 COLLATE BINARY)) HAVING NULL;SELECT ALL ((AVG(vt0.c0)) NOT BETWEEN ((vt1.c0 IN ('-1971232545'))) AND (x'3487' COLLATE NOCASE)) FROM vt1, vt0 WHERE ((((((NULL))>=((NULL)))) IS FALSE)); -- 0ms;
SELECT DISTINCT '' FROM vt0, vt1 WHERE ((((((0x7464209 IN ('-2064594653')))OR((('//') NOT NULL))))OR(((0.989674680277089) IS TRUE)))); -- 1ms;
SELECT (((vt0.c0 IN ()))&(vt0.c0)), ((vt1.c0 COLLATE BINARY)>=(CAST(vt1.c0 AS REAL))), CAST(vt0.c0 COLLATE RTRIM AS INTEGER) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST((((vt0.c0))<((vt1.c0))) AS REAL) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT x'' FROM vt1, vt0 WHERE ((((('0.5207138359809474')||(NULL))) NOT BETWEEN (NULL) AND (HEX('')))); -- 0ms;
SELECT ALL CAST(((vt0.c0)=(vt0.c0)) AS TEXT), vt1.c0, ((((vt1.c0) ISNULL)) BETWEEN (json_remove(vt0.c0, vt1.c0)) AND (((vt0.c0) NOTNULL))) FROM vt0, vt1;SELECT DISTINCT AVG(NULL), (((vt1.c0)-(vt1.c0)) IN (vt1.c0, 0.31977424348496897)), (((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((vt1.c0))>((vt1.c0))))) FROM vt0 WHERE (CASE CASE WHEN '-1961705114' THEN '-1595518850' WHEN 'Ғ54\r' THEN NULL WHEN 0.3576778217001011 THEN '\r7UsG' END  WHEN CASE ''  WHEN x'' THEN x'' WHEN '-1680144962' THEN '' WHEN '-V瑾fS*|N' THEN NULL ELSE -107061534 END THEN (x'' IN ()) ELSE ((NULL)&(0.18966130846047846)) END) LIMIT -1887832222;SELECT ALL ((vt1.c0) BETWEEN (((vt1.c0) BETWEEN (-8.2124937E8) AND (vt1.c0))) AND (((vt1.c0)IS NOT(vt1.c0)))) FROM vt1 WHERE (CASE WHEN NULL THEN NULL WHEN 0.5582846359017309 THEN 0.815313502629253 WHEN NULL THEN 0.3133968246366682 ELSE NULL END COLLATE RTRIM); -- 0ms;
SELECT ALL LEAD('Vv', CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER), ((((x'')IS(vt0.c0))) ISNULL)) OVER () FROM vt0 WHERE (CAST('7n犨' COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT CHAR(vt0.c0 COLLATE RTRIM) FROM vt0, vt1; -- 0ms;
SELECT (((vt0.c0, 1687141882, NULL)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, vt0.c0, 0xffffffff85e3d740)) AND ((((vt1.c0)>=(0.7213567623422008)), ((vt1.c0)>=(vt1.c0)), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))), TOTAL(((vt0.c0) IS FALSE)), GROUP_CONCAT(((vt1.c0)+(vt1.c0))) FROM vt1 WHERE (((((x'd05e')|(NULL))) NOT BETWEEN (CAST(0.4371769174647696 AS BLOB)) AND ((~ ('-848508769')))));SELECT ALL ((TOTAL(vt0.c0)) NOTNULL), CASE WHEN x'bdf4' THEN CAST(vt0.c0 AS REAL) END, ((COALESCE(DISTINCT vt1.c0, vt1.c0))>>(CAST(NULL AS INTEGER))) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(NULL AS NUMERIC) THEN CAST(vt0.c0 AS REAL) END GROUP BY ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(NULL)))OR(CAST(vt1.c0 AS TEXT))); -- 1ms;
SELECT DISTINCT UNLIKELY(CASE '-1715332540'  WHEN vt0.c0 THEN x'' END) FROM vt0, vt1; -- 0ms;
SELECT (NOT ((+ (vt1.c0)))) FROM vt1 WHERE ((CAST(x'9fb5' AS BLOB) IN ())); -- 3ms;
SELECT ALL FIRST_VALUE(IFNULL((NOT (vt1.c0)), ((vt0.c0)>=(vt0.c0)))) OVER () FROM vt1, vt0 NOT INDEXED WHERE ((((461008661)) BETWEEN (((+ (0Xffffffffb67a9bb6)))) AND (((('YF') IS FALSE))))) LIMIT -941915908; -- 0ms;
SELECT DISTINCT CASE ((vt1.c0)<=(vt0.c0))  WHEN ((vt0.c0)+(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END END FROM vt0 WHERE ((((('-1981880954')<=('1552548457'))) BETWEEN ((0.5382967170041535 IN ())) AND ((('7+-<T') BETWEEN (x'') AND (x'')))));SELECT DISTINCT TRIM(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' END) FROM vt0 WHERE ('438349902');SELECT DISTINCT ((((vt1.c0) IS TRUE))/(SUM(vt0.c0))) FROM vt1 WHERE ((((x'')) BETWEEN ((((x'6872')>(0xffffffffc8147dbc)))) AND ((((((x'')AND('246328327')))AND(x'33f9'))))));SELECT DISTINCT vt0.c0, GROUP_CONCAT(((vt0.c0)%(vt1.c0))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP), ((vt0.c0)+('-1801812281')), (((((vt1.c0 IN ()))OR(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS TEXT))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT IFNULL(CASE WHEN vt1.c0 THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt1.c0 END), CASE WHEN ((vt1.c0)+(vt0.c0)) THEN (NOT (vt0.c0)) END, (~ (((((((((vt1.c0)AND(0.7578212792721132)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))) FROM vt0, vt1 WHERE (((0.21670579486596298 IN ()) IN ())); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 LIMIT 9223372036854775807; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL) FROM vt1, vt0 WHERE (((CAST(0.010912234536275212 AS REAL))GLOB((((NULL)) BETWEEN (('1131272914')) AND (('nnow吽')))))); -- 0ms;
SELECT (NOT (COUNT(vt1.c0))), (~ (((vt0.c0) NOT BETWEEN (0.15282613800725597) AND (vt1.c0)))), CAST(vt0.c0 COLLATE RTRIM AS INTEGER) FROM vt0 WHERE (((CAST(NULL AS REAL)) NOT BETWEEN (((((NULL)OR(NULL)))OR(0.8823892790519923))) AND (((x'') BETWEEN (x'') AND (0.9092178159260775)))));SELECT DISTINCT ((vt0.c0)<(CAST(vt0.c0 AS TEXT))) FROM vt0, vt1; -- 0ms;
SELECT ALL LEAD(((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(JULIANDAY(NULL, vt1.c0, vt0.c0))), CASE WHEN '0.4175124356004093' THEN (- (vt1.c0)) END, (((+ (vt1.c0))) NOT NULL)) OVER () FROM vt1, vt0 LIMIT -183993954; -- 0ms;
SELECT GROUP_CONCAT(vt0.c0) OVER () FROM vt0; -- 0ms;
SELECT CASE WHEN CAST(vt1.c0 AS TEXT) THEN (vt0.c0 IN ()) END FROM vt1, vt0 WHERE (1701347538); -- 0ms;
SELECT DISTINCT AVG((vt1.c0 IN ())) OVER (), ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==(((NULL IN (vt1.c0))))), x'6039' FROM vt0 WHERE ((((+ (NULL))) NOT BETWEEN ('-213265360' COLLATE BINARY) AND (CAST(NULL AS NUMERIC))));SELECT DISTINCT ((((vt1.c0)LIKE(vt1.c0)))<(((vt1.c0)+(vt0.c0)))) FROM vt0;SELECT NULL, ((GROUP_CONCAT(vt1.c0)) NOTNULL), (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (vt1.c0 COLLATE BINARY)) FROM vt1 WHERE ((GLOB(NULL, '-1980232133') IN ()));SELECT ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)>(vt1.c0)))), AVG(((vt0.c0)<(vt1.c0))) OVER ( ORDER BY ABS(CAST(vt1.c0 AS REAL))), (ABS(vt1.c0) IN ()) FROM vt1 WHERE (((((((('-1795407150')OR(x'')))OR('.L~劏*馞'))))<=((TRIM(DISTINCT '{}', NULL)))));SELECT CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY FROM vt1;SELECT DISTINCT ((((vt1.c0)&(vt0.c0))) NOTNULL), ((((load_extension(vt1.c0))AND(ABS(DISTINCT vt0.c0))))AND(((vt1.c0)IS NOT(vt0.c0)))), (~ (((vt0.c0) IS TRUE))) FROM vt1 WHERE ((((246328327)/(0.6652942720364303)) IN ()));SELECT DISTINCT ((((((((vt0.c0)OR((((x'b741')) NOT BETWEEN ((NULL)) AND ((vt0.c0))))))AND(((vt0.c0) IS FALSE))))AND(((vt1.c0) NOTNULL))))AND(vt1.c0 COLLATE BINARY)), ((((((vt0.c0) NOT NULL))AND((~ (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (((vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0Xffffffffcc00db34 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((((vt0.c0))<>((x'')))))) FROM vt1 WHERE (((((((0.4854117570609279)AND(-1961492577)))OR(0Xffffffffacba7d30))) BETWEEN (0.2160374716464567 COLLATE BINARY) AND ('M3說( w吞6')));SELECT ALL vt1.c0, ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END) NOT NULL), ((HEX(DISTINCT vt1.c0))%(((NULL)GLOB(vt1.c0)))) FROM vt1, vt0 WHERE (CASE CASE '-529826463'  WHEN x'9732' THEN x'' END  WHEN (~ ('21401836')) THEN x'' ELSE MAX(x'', x'') END); -- 0ms;
SELECT DISTINCT ((((0.26008307645991713) NOT BETWEEN (vt1.c0) AND (vt1.c0)))%(MIN(vt1.c0))) FROM vt0;SELECT ALL LAST_VALUE(CAST(((vt0.c0)IS NOT(vt1.c0)) AS TEXT)) OVER ( ORDER BY 'J*a8' DESC  NULLS LAST), vt1.c0, GROUP_CONCAT(AVG(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))) FROM vt1, vt0;SELECT DISTINCT MIN((vt0.c0 IN ())) FROM vt0 NATURAL JOIN vt1; -- 0ms;
SELECT ALL MIN((((0.45274645463600716, vt1.c0, vt0.c0))>=((vt1.c0, vt1.c0, vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT 0X681f3e6c, TOTAL((('}')LIKE(vt1.c0))) OVER (), ((vt1.c0 COLLATE RTRIM)*(vt0.c0 COLLATE BINARY)), ((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (SUBSTR(vt1.c0, vt1.c0)) AND ((+ (NULL)))), ((vt0.c0)OR(vt1.c0)) COLLATE RTRIM FROM vt1, vt0; -- 0ms;
SELECT CAST((vt1.c0 IN ()) AS BLOB) FROM vt1 GROUP BY CASE WHEN ((vt1.c0) IS FALSE) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)) WHEN vt1.c0 THEN (- (vt0.c0)) WHEN (+ (vt1.c0)) THEN (((vt0.c0))<>((vt1.c0))) ELSE CAST(vt1.c0 AS BLOB) END, (+ (CAST('C.0' AS REAL))), (((vt1.c0)<<(vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) HAVING ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (LIKELY(DISTINCT vt0.c0)) AND (GROUP_CONCAT(vt1.c0))) LIMIT 1989624366 OFFSET -544416076;SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (CHANGES()) AND (vt1.c0 COLLATE RTRIM)), vt1.c0, ((TRIM(vt0.c0, vt0.c0))GLOB(((vt0.c0)+(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT (((~ (vt1.c0))) NOTNULL), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER), ((((json_quote(x'0ccd'))AND((('362280552')*(vt0.c0)))))AND(AVG(vt1.c0))) FROM vt1 GROUP BY CAST(((vt0.c0) NOTNULL) AS TEXT), (((((vt1.c0)<(vt0.c0))))==((CAST(vt0.c0 AS BLOB)))), ('' IN ((((vt1.c0))>=((vt1.c0))), CAST(vt1.c0 AS NUMERIC))) HAVING CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, 0.30830885485424775))) ELSE LOWER(vt0.c0) END;SELECT AVG((~ (NULL))) OVER () FROM vt1 LIMIT 717638398 OFFSET -1864153270; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN (x'7bfb')))>>('-125910232')) FROM vt0 WHERE (((((x'b55e')%(NULL)))>(((x'3ac4')IS NOT(NULL)))));SELECT DISTINCT (((vt1.c0)=(vt1.c0)) IN ()) FROM vt0, vt1 WHERE (((((NULL)&(NULL)))>(((0.9374435628083791)LIKE(NULL))))); -- 0ms;
SELECT DISTINCT (+ (vt0.c0 COLLATE RTRIM)) FROM vt1 WHERE ((NOT (((NULL) NOT NULL))));SELECT ((GROUP_CONCAT(vt0.c0))<<(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)), (((vt0.c0 IN ()))>>(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))), CASE IFNULL(DISTINCT vt0.c0, NULL)  WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 COLLATE NOCASE ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END FROM vt1, vt0 WHERE ((((NULL)>=(0.32091749609927334)) IN ('' COLLATE RTRIM, (((('n蛇\')AND('-1715332540')))AND(NULL))))) GROUP BY CASE WHEN TYPEOF(vt1.c0) THEN CASE WHEN vt0.c0 THEN 1.79642437E8 END END HAVING CAST(((vt0.c0) IS FALSE) AS INTEGER) ORDER BY ((((vt1.c0)<=(vt0.c0)))LIKE(((vt1.c0)LIKE(-1.53472078E9))))  NULLS LAST; -- 0ms;
SELECT MIN(((vt1.c0) NOTNULL)), ((TOTAL(vt0.c0))<(CAST(vt1.c0 AS BLOB))), SUM((vt0.c0 IN (vt1.c0))) OVER () FROM vt0;SELECT DISTINCT CASE ((vt0.c0)LIKE(vt0.c0))  WHEN (vt0.c0 IN ()) THEN json_remove(vt0.c0, NULL) ELSE 0.4081369826568838 END, (NOT ('leoxpw')) COLLATE BINARY, ((((vt0.c0)>=(x''))) IS FALSE) FROM vt1 WHERE ((((- (x''))) NOTNULL)) GROUP BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt1.c0) ISNULL) END, (((('O')AND(vt1.c0)))GLOB((vt0.c0 IN ()))), CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE RTRIM, CAST((vt0.c0 IN ()) AS REAL), (((vt0.c0 IN ())) NOT NULL) HAVING (((vt1.c0 IN (vt0.c0)))IS NOT((+ (vt1.c0))));SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(vt1.c0)) FROM vt0;SELECT DISTINCT json_insert(COALESCE(DISTINCT 0.10968130639753582, '-1279380999'), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'd843' THEN vt1.c0 END, ((vt1.c0) NOT NULL)) FROM vt1, vt0 WHERE ((((((('-1715332540')OR(x'179a')))AND(8.96690375E8))) IS FALSE)); -- 1ms;
SELECT DISTINCT AVG((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) OVER (), CASE WHEN ((vt0.c0) IS TRUE) THEN (~ (vt1.c0)) END, COUNT(((vt1.c0) NOTNULL)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((~ (0x2e8c4e1a)))IS(CAST(vt1.c0 AS BLOB))) FROM vt0 WHERE ((NULL IN ()) COLLATE RTRIM);SELECT DISTINCT ((- (vt0.c0)) IN (AVG(9.31996878E8), TOTAL(vt0.c0))), CUME_DIST() OVER (), LAG(UPPER(0.7639079065905215), vt1.c0, (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ((((vt1.c0))<=((vt1.c0)))))) OVER ( GROUPS  CURRENT ROW) FROM vt1 GROUP BY (vt0.c0 COLLATE BINARY IN ((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))))), (((+ (vt1.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (json_array_length(0.25374894415531624, vt1.c0))), CASE ((0xffffffffa1a45f91)/(vt0.c0))  WHEN ((vt0.c0)/(vt1.c0)) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 THEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) WHEN (- ('')) THEN ((vt0.c0) NOTNULL) WHEN ((vt1.c0)>(vt0.c0)) THEN (~ (vt1.c0)) WHEN 0.7279931885683177 THEN ((vt0.c0)<(vt0.c0)) END;SELECT CASE WHEN (vt0.c0 IN ()) THEN COALESCE(vt0.c0, vt0.c0) END FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1 WHERE (((NULL COLLATE BINARY)>>((+ (x'')))));SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((((0.07516551472959632))>((x'')))) AND (((vt1.c0) ISNULL))), x'76e4', (((('4''')IS(vt1.c0)))|(COUNT(*))) FROM vt0 WHERE ((('' COLLATE NOCASE)>>(((((-668267479)OR('\n')))AND('-717291036')))));SELECT ALL ((('' IN ()))IS((NOT (vt0.c0)))), ((((((vt1.c0) ISNULL))OR(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)), ((TYPEOF(vt0.c0))<>(((vt0.c0)%(vt1.c0)))) FROM vt1, vt0 WHERE ((((('\rZiN\Y') ISNULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT (('?r{)' COLLATE BINARY) NOTNULL) FROM vt0 WHERE (((CAST('Z''t}cﱊ}DH' AS TEXT)) BETWEEN (((NULL)||('1528253427'))) AND (x'caa7'))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 END IN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, vt0.c0 COLLATE NOCASE)), ((((vt1.c0)<<(vt1.c0)))AND(CAST(NULL AS NUMERIC)));SELECT DISTINCT (((((vt1.c0 IN ()))OR(((vt0.c0)&(NULL)))))AND(CASE '|]韫YYO焊'  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) FROM vt0 WHERE ((((~ (NULL))) NOT NULL)) GROUP BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.2389594709655063) IS FALSE) END LIMIT -836143998 OFFSET -458300978;SELECT DATETIME(SUM(vt1.c0), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ())), SUM(((vt0.c0) IS FALSE)), ((((vt0.c0)&(vt1.c0)))+(((vt1.c0)IS(vt1.c0)))), '-414952452', (vt0.c0 COLLATE RTRIM IN ()) FROM vt1;SELECT LIKE(vt0.c0, x'', '-') FROM vt0 WHERE ((((((((((x'' IN ()))AND((('-1795407150') NOT BETWEEN (0xffffffffd01982ca) AND ('ps(h|#}(E')))))AND((('-1089850954')+(x'f55c')))))AND((('')>(NULL)))))AND(((x'') BETWEEN (0.5877622843499343) AND (0.24979486311336951))))) LIMIT 1131741752; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT ((vt1.c0) NOTNULL), 1708352991) FROM vt1 NOT INDEXED WHERE (((((NULL) NOT BETWEEN ('4T') AND (NULL))) NOT BETWEEN ('') AND ((+ (0.768756422854796))))); -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS TEXT) AS BLOB), (((- (vt0.c0))) IS FALSE), ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt1.c0)>>(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt1.c0 END)), CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END AS BLOB), COUNT('1660084217') FROM vt0;SELECT (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((vt1.c0)LIKE(vt1.c0))))), GROUP_CONCAT(COALESCE(-1495799242, vt1.c0)) OVER (), CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0) NOT NULL) ELSE ((((NULL)OR(vt1.c0)))OR(vt1.c0)) END FROM vt0;SELECT DISTINCT AVG(vt1.c0) OVER (), (+ (GROUP_CONCAT(vt0.c0))), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))+(((vt0.c0)<(vt1.c0)))) FROM vt1 WHERE (((((0.7113284366691447 IN ())))==(('0.46265944383037505' COLLATE NOCASE))));SELECT DISTINCT CASE CASE WHEN vt0.c0 THEN vt1.c0 END  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt1.c0) IS TRUE) THEN NULLIF(DISTINCT x'', vt1.c0) WHEN ('Hͫ' IN ()) THEN CAST(vt1.c0 AS REAL) ELSE ((vt1.c0) IS TRUE) END FROM vt0;SELECT ALL COUNT(*) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0, ((((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(LIKELIHOOD(vt1.c0, 0.869606970777221))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.8386678023424622))))AND((- ('-851431425')))))AND(vt1.c0 COLLATE NOCASE)), ((((((vt1.c0)==(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))), (~ (vt0.c0)), ((('-1216181270')) BETWEEN (((vt1.c0 IN ()))) AND (((NOT (vt0.c0))))), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 459785455 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)||((0.17215356782182112 IN ()))), (+ ((((vt0.c0))!=((vt1.c0))))) FROM vt1, vt0 WHERE (((CASE ''  WHEN '1320604793' THEN ',' ELSE 0.5066975456203733 END) NOT NULL)) LIMIT -1931183793 OFFSET 717638398; -- 0ms;
SELECT ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY FROM vt0 WHERE ((('dj瑾51' COLLATE BINARY)LIKE((('E/o쑣ֈ#_')>>('13874834')))));SELECT DISTINCT (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((0.784243339854263, (vt1.c0 IN ()), CAST(vt1.c0 AS BLOB))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))), ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) FROM vt0 WHERE ((((('')=(0.4931670128186211)))%((((NULL)) BETWEEN ((0.5066975456203733)) AND (('1176154589'))))));SELECT DISTINCT CAST('醏gjE|)' AS REAL) FROM vt0, vt1 WHERE ((x'' IN (SQLITE_COMPILEOPTION_GET('0.28606284619504796')))) GROUP BY (+ ((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))); -- 0ms;
SELECT DISTINCT ((((MIN(vt1.c0))OR((~ (vt1.c0)))))OR('1)WmI%%왑4')), COALESCE(vt0.c0, CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END), ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) FROM vt1 WHERE (CASE (((0.5531656193331123)) NOT BETWEEN ((NULL)) AND ((-558775052)))  WHEN HEX(NULL) THEN '1026304919' COLLATE RTRIM ELSE CAST(x'c7cfd903' AS INTEGER) END) ORDER BY CASE WHEN ((vt0.c0)IS(0.1003181046495546)) THEN (vt1.c0 IN ()) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((vt0.c0))==((vt0.c0))) WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) ELSE vt1.c0 COLLATE NOCASE END ASC, (COALESCE(vt0.c0, vt0.c0) IN ()) DESC;SELECT DISTINCT 'Nh', CASE CAST(vt0.c0 AS NUMERIC)  WHEN (vt1.c0 IN (vt1.c0)) THEN MIN(vt1.c0) ELSE ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) END, LEAD(vt1.c0, CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN ((x'') IS FALSE) END, (((((vt1.c0)GLOB(vt1.c0))))>((0X35504f0d)))) OVER () FROM vt1, vt0 WHERE ((((('yJ%')-(x'32f9'))) BETWEEN (((NULL)/(0.8406412506306846))) AND ((~ (NULL))))); -- 0ms;
SELECT DISTINCT CAST((vt1.c0 IN ()) AS INTEGER) FROM vt0; -- 2ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) FROM vt1, vt0 WHERE (((CHAR(''))<(DATE(0.16537874815340836, '-135559681', '0.8153863500068006')))); -- 0ms;
SELECT DISTINCT ((((vt1.c0)<<(vt1.c0)))IS(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt0, vt1 WHERE ((((((x'63f7')>(0.9948293074351484))))<>(('T0T')))); -- 0ms;
SELECT ALL ((LIKELIHOOD(DISTINCT vt0.c0, 0.6580019271175828))OR(vt1.c0)) FROM vt0 WHERE (((CASE WHEN -9.41915908E8 THEN x'' WHEN NULL THEN '-1741533864' WHEN x'b257' THEN x'' ELSE 'E5wmO' END)>(NULL COLLATE BINARY))) LIMIT 1640095936 OFFSET 931996878;SELECT DISTINCT 0.6464965595107263, (vt1.c0 IN ()), CAST(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) AS REAL), x'eaed', (NOT ((vt0.c0 IN ()))) FROM vt0 WHERE ((NOT (((((NULL)AND(0Xfffffffffc5ed5df)))OR('-753552202'))))) LIMIT 393737828 OFFSET -579999317;SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) IS TRUE) FROM vt0 WHERE (((((CAST('_' AS INTEGER))OR(CASE WHEN '346902855' THEN 0.3262760025355135 END)))OR(TYPEOF('')))) ORDER BY NULL, CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE (vt0.c0 IN ()) END, ((((((((CAST(vt0.c0 AS INTEGER))AND(0.5425325540386593)))AND(CASE vt1.c0  WHEN vt0.c0 THEN x'' END)))AND((vt1.c0 IN ()))))OR(((vt1.c0) ISNULL))) ASC  NULLS FIRST;SELECT DISTINCT 0.4660790655556888 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT LAG(0.8975992111809571, (- (((vt0.c0) BETWEEN ('''%e*~蛇()9') AND (vt1.c0)))), '1913942559') OVER (), COUNT(*) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP), CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN (vt0.c0 IN ()) ELSE CAST(vt1.c0 AS NUMERIC) END FROM vt1, vt0 WHERE (0.18708821419422128); -- 0ms;
SELECT DISTINCT (- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((x'' IN (vt0.c0)))|(((vt1.c0) IS TRUE))) FROM vt1, vt0 WHERE (CAST(0.910860878835567 COLLATE RTRIM AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((CAST(vt1.c0 AS TEXT)))<=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))), (((vt1.c0 IN (vt0.c0))) NOT NULL), (((vt0.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) AND ((LIKELIHOOD(vt0.c0, 0.8169227275668046)))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS TEXT))||(((vt1.c0)>>(vt0.c0)))), (~ ((NOT (vt0.c0)))), ((((((((((vt1.c0) NOTNULL))AND(((vt0.c0) IS TRUE))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))))OR((((vt1.c0))>((vt1.c0))))))OR((x'' IN (vt1.c0)))), vt1.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE FROM vt0;SELECT DISTINCT TIME(((vt0.c0) NOTNULL), ('1736609144' IN (vt1.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END), ((vt0.c0 COLLATE NOCASE)>(0.05351563834950401 COLLATE BINARY)), COUNT(((vt0.c0)GLOB(vt1.c0))) OVER () FROM vt1, vt0 WHERE ((CASE WHEN 0.4578606089616786 THEN NULL ELSE NULL END IN ())); -- 0ms;
SELECT ALL CASE ((((((((vt1.c0)OR(vt1.c0)))AND(0.27241575229363535)))AND(vt0.c0)))AND(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c0))=((vt0.c0))) END, vt0.c0, (+ (0.7853898508646844)), (((vt0.c0)) BETWEEN ((x'')) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))), CAST(((vt0.c0)<<(vt1.c0)) AS NUMERIC) FROM vt1, vt0 WHERE (CAST(CASE 0.37101582200951355  WHEN 0.29207303812762786 THEN NULL WHEN NULL THEN 0.7513027559962298 WHEN 0X4143408a THEN x'6cca' END AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((COUNT(*)) NOT BETWEEN ((((vt1.c0, vt1.c0, vt0.c0))<=((vt0.c0, vt1.c0, vt1.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) FROM vt1 ORDER BY CAST(vt1.c0 AS REAL)  NULLS LAST;SELECT ALL (((vt0.c0)) NOT BETWEEN ((COUNT(*))) AND ((((vt0.c0) NOT NULL)))) FROM vt1;SELECT DISTINCT (((((vt0.c0) NOT BETWEEN (x'acef') AND ('')), COUNT(*), '1222086315'))==((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE '1168641867' END, vt1.c0, MIN(vt0.c0)))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (~ (((vt1.c0) ISNULL))) FROM vt1 WHERE (((((0.8441753221532391) ISNULL)) BETWEEN (((('OA#FSy\nQ')) NOT BETWEEN (('')) AND ((0.24408825670070466)))) AND ((((NULL))<((0x7a4848c0)))))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c0 AS INTEGER)))>=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))), SUM(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END), COUNT(((vt0.c0)<(vt0.c0))) FROM vt1;SELECT DISTINCT vt1.c0 FROM vt0 WHERE ((((('') NOTNULL))<<(CASE 0.17779793583471337  WHEN 0.4706888756134925 THEN '585969856' END)));SELECT ((((vt1.c0)/(vt0.c0)))%(CAST(vt1.c0 AS REAL))) FROM vt0, vt1 WHERE (((((((((('_*iB')OR(x'')))AND('-125910232')))OR(0.989674680277089)))AND('')) IN (((NULL) NOT BETWEEN (-8.02370868E8) AND (''))))) ORDER BY vt1.c0  NULLS FIRST; -- 0ms;
SELECT ALL CAST(0X1cfb8a7b AS NUMERIC) FROM vt0, vt1; -- 1ms;
SELECT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) FROM vt1 GROUP BY vt0.c0 HAVING vt0.c0 LIMIT 551058731;SELECT 0.5457858552375585, x'', LAST_VALUE(CASE WHEN COALESCE(DISTINCT vt1.c0, vt1.c0) THEN vt1.c0 COLLATE NOCASE WHEN CAST(vt1.c0 AS TEXT) THEN (((vt1.c0))>((vt1.c0))) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN HEX(DISTINCT vt1.c0) END) OVER () FROM vt1 WHERE (((0.9571175812908421)>=(1.176154589E9)) COLLATE NOCASE) LIMIT 136539805; -- 0ms;
SELECT DISTINCT ((((vt1.c0)-(vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, vt1.c0))<>((114316318, vt1.c0, vt1.c0)))) AND (CAST(vt1.c0 AS BLOB))), (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) IN ()), (((vt1.c0 IN ()))GLOB(((vt0.c0)&(vt1.c0)))), (((vt0.c0)) BETWEEN (('0.30830885485424775' COLLATE NOCASE)) AND (((- (vt1.c0))))), (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) NOT NULL) FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))=((CAST(vt1.c0 AS REAL)))) WHERE ((((((((((('D') ISNULL))AND((('-2071736166')<=(-2133129873)))))OR((('')IS(0.09255208207181687)))))OR(UPPER(0.8062159985487949))))OR(DATE(NULL, '0.8153863500068006', 'h')))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN (((vt0.c0)||(vt1.c0))) AND ((('XP') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt1;SELECT ((((((((vt1.c0 COLLATE RTRIM)AND(vt1.c0 COLLATE RTRIM)))OR(((vt0.c0)<<(NULL)))))OR(CASE vt1.c0  WHEN NULL THEN vt0.c0 END)))OR(AVG(vt0.c0))), ((COUNT(*)) BETWEEN (((x'0229') IS FALSE)) AND ((- (vt0.c0)))), COUNT(*) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM vt0 GROUP BY ((HEX(vt1.c0)) NOT BETWEEN (load_extension(vt1.c0)) AND (CAST(vt0.c0 AS BLOB))), (- (((vt1.c0) NOT NULL))), ((((((vt0.c0)AND(vt0.c0)))OR(CASE x''  WHEN vt1.c0 THEN vt0.c0 END)))AND(SQLITE_VERSION()));SELECT DISTINCT CASE (~ ('314987862'))  WHEN CAST(vt0.c0 AS NUMERIC) THEN x'f15ffaba' END FROM vt1, vt0 WHERE (''); -- 0ms;
SELECT DISTINCT LEAD((((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c0), ((vt1.c0) NOTNULL), (vt1.c0 IN ()), (vt1.c0 IN (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt0.c0) IS FALSE), vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, CAST(vt1.c0 AS NUMERIC)))), NULL, (('136539805') BETWEEN (((vt0.c0)<=(vt1.c0))) AND ((((0.14077565103798317, vt1.c0, vt1.c0))<((vt0.c0, vt0.c0, vt1.c0)))))) OVER (), (+ (((vt1.c0)IS(vt1.c0)))), (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL) FROM vt0, vt1; -- 0ms;
SELECT CAST(COALESCE(vt1.c0, vt1.c0, vt1.c0, vt0.c0) AS TEXT) FROM vt1;SELECT DISTINCT ((((vt0.c0)<(vt1.c0)))IS NOT((NOT (vt0.c0)))), NULL, COUNT(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) FROM vt1 WHERE ((+ (NULL COLLATE RTRIM)));SELECT DISTINCT CAST(vt1.c0 COLLATE RTRIM AS NUMERIC), (- ((+ (vt0.c0)))), IFNULL(vt1.c0, vt1.c0) COLLATE RTRIM FROM vt1, vt0 LIMIT 896690375 OFFSET 1277248907; -- 2ms;
SELECT DISTINCT CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt1.c0 COLLATE NOCASE THEN 0.9079780804182321 COLLATE RTRIM WHEN ((vt0.c0)!=('0.6646262734665519')) THEN ((vt1.c0)&(vt1.c0)) WHEN 0.5525641847958996 THEN 'R^' ELSE (vt1.c0 IN ()) END, 0.733279424592427 FROM vt1;SELECT ALL 0xffffffffd44daa14, MAX(vt0.c0), DENSE_RANK() OVER () FROM vt1 GROUP BY ((~ (vt0.c0)) IN (vt0.c0)), (((vt1.c0) IS FALSE) IN ()), ((vt1.c0 COLLATE BINARY)==(((vt0.c0)|(vt0.c0)))) HAVING ((((vt1.c0)<<(vt1.c0))) ISNULL);SELECT DISTINCT vt0.c0, ((((AVG(vt1.c0))OR(vt0.c0)))AND(STRFTIME(vt0.c0, vt1.c0, vt0.c0))), ((vt1.c0)||(vt0.c0)) COLLATE RTRIM FROM vt1, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (CAST(vt1.c0 AS NUMERIC) IN ()) FROM vt0, vt1 WHERE ((((((((((+ ('0.5845690632703855')))AND(NULL)))AND((((973364931, NULL, 1.14372767E9)) BETWEEN (('-322710611', 'O', x'2953')) AND ((x'', NULL, x''))))))AND(((x'7a72')IS('vagf\r,f%')))))OR((0.689329972145482 IN ())))); -- 0ms;
SELECT DISTINCT (('-802370868')<<(CAST(vt0.c0 AS NUMERIC))), NULL, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((((vt0.c0)||(vt0.c0))))) FROM vt0 WHERE (((((0.8185773442632664) BETWEEN (0.7061100594687424) AND (-1.541187333E9)))<=(((NULL)>=(x''))))); -- 0ms;
SELECT DISTINCT GLOB((NULL IN ()), CAST(vt1.c0 AS REAL)) FROM vt0;SELECT DISTINCT SUM(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) OVER (), ((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE), ((((((x'')OR(vt0.c0)))OR(vt0.c0))) BETWEEN (COUNT(vt0.c0)) AND ((vt1.c0 IN ()))) FROM vt1 WHERE (((0x31d91448 COLLATE NOCASE)LIKE(x'')));SELECT DISTINCT GLOB(((((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL)) FROM vt0, vt1 WHERE (0.9041252240388014); -- 1ms;
SELECT ALL CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE RTRIM FROM vt1 WHERE (((((((('tir+#z7j#')OR(x'')))AND(0Xffffffffed58cf32)), rtreenode(0.36804341864755774, 0.989674680277089), ((0.783595822188834)==(0.10451880214656262)), ((x'') BETWEEN (0.8585342176945314) AND (x'')), (- ('0.689329972145482'))))!=((((-1430659540) IS TRUE), CAST(587158976 AS REAL), TRIM('0.17560323416973211', x''), ((NULL) IS FALSE), x'b920' COLLATE BINARY))));SELECT CASE WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN HEX(vt0.c0) END FROM vt1;SELECT DISTINCT CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((0.9531258227686962)GLOB(vt1.c0)) END FROM vt1 ORDER BY ((((NULLIF(vt0.c0, vt1.c0))AND(vt1.c0)))AND(((NULL) IS FALSE)));SELECT MIN((NOT ('-1884420974'))) FROM vt0, vt1 NOT INDEXED WHERE (((('1913942559', NULL, 0.03480704981935867)) BETWEEN ((NULL COLLATE RTRIM, (- ('')), ('-936848757' IN (NULL, '0.7202041757237986')))) AND ((((x'')>=(-2132419425)), -9.65464035E8, CASE WHEN NULL THEN 0.5897243429200735 END)))); -- 0ms;
SELECT ALL UPPER(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) FROM vt1, vt0 ORDER BY vt0.c0; -- 0ms;
SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL), x'', SUM((0.8845507880715102 IN ())) FROM vt1, vt0 WHERE ((NOT ((- (0xffffffffd87c3cc7))))); -- 0ms;
SELECT UNLIKELY(DISTINCT ((vt0.c0) IS FALSE)) FROM vt0 WHERE (UPPER(((NULL) NOT NULL))); -- 0ms;
SELECT DISTINCT NULL FROM vt1 WHERE ((((('-504891856') NOT BETWEEN (0.6514064740786689) AND ('')))=(NULLIF(DISTINCT '-671242740', 0.01951244756859838)))); -- 0ms;
SELECT DISTINCT SUBSTR('572606292', ((((((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(0.7470874630799905))) FROM vt1, vt0 WHERE (((CAST(NULL AS INTEGER)) ISNULL)) ORDER BY ((((((vt1.c0)%(0.7291655382111913)))OR(CAST(vt0.c0 AS REAL))))AND(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST; -- 1ms;
SELECT (NOT (CAST(x'' AS INTEGER))), CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN (NOT (vt1.c0)) WHEN CASE NULL  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '0.3067105069847974' END END, vt1.c0 FROM vt1, vt0 WHERE (LIKELY(((NULL)%(0.23737925091498158)))); -- 0ms;
SELECT DISTINCT (((('BPIz')OR(((vt0.c0)IS NOT(NULL)))))AND(((vt1.c0) NOTNULL))), (+ (SUM(0.9682357749580774))), (~ (((vt0.c0)>(vt1.c0)))) FROM vt1;SELECT ALL ((((vt0.c0) ISNULL)) ISNULL) FROM vt1, vt0; -- 0ms;
SELECT (((vt1.c0)*(vt0.c0)) IN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt0 WHERE (UNLIKELY(DISTINCT (((('1694959014')OR(-1e500)))OR(''))));SELECT ALL ((((vt1.c0)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(NULL)) FROM vt0 WHERE (((((((x'')OR(NULL)))AND(NULLIF('-848508769', 'N*'))))AND((1113261983 IN (x''))))) LIMIT 760208407 OFFSET -884996530;SELECT ALL LIKELIHOOD(MIN(vt1.c0), 0.5630741203481131) FROM vt1, vt0 WHERE (((((NULL) NOT BETWEEN ('-821249370') AND (x'')))GLOB(' <tay/1z'))) ORDER BY CASE WHEN LIKE(vt0.c0, vt0.c0) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN (((vt0.c0, vt1.c0, '-1801812281')) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((0Xffffffffc559c6f3, vt0.c0, vt0.c0))) THEN CAST(vt1.c0 AS REAL) WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE vt0.c0 END  NULLS LAST; -- 0ms;
SELECT highlight((vt0.c0 IN ()), ((('T)ᙐTO_q.', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, '-1621227259', vt0.c0))), (((vt1.c0))>=((vt0.c0))), vt1.c0), '0.7863608988964259', (((vt0.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))) AND ((((vt0.c0) IS FALSE)))) FROM vt0 WHERE (TRIM(DISTINCT (NOT (NULL)), ((('0.03835068608139647', NULL, 9.31996878E8))<=((0xfffffffffd5428b2, 0xffffffff9ff2c573, 1.14316318E8)))));SELECT DISTINCT MAX(MAX(TRIM(DISTINCT vt1.c0, vt0.c0))), CAST(((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('꣒b^')))AND(vt1.c0)))AND(vt1.c0)) AS INTEGER), vt1.c0 FROM vt0, vt1 WHERE (((NULL)GLOB(0.7090172623196312 COLLATE NOCASE)));SELECT DISTINCT COUNT((((vt1.c0, vt1.c0, vt0.c0))>((vt1.c0, vt1.c0, vt1.c0)))) FROM vt0 WHERE (LAST_INSERT_ROWID());SELECT DISTINCT CASE WHEN ((vt1.c0) ISNULL) THEN '-114183136' WHEN MIN(vt1.c0) THEN (~ (vt0.c0)) WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((((((vt1.c0)OR(vt0.c0)))AND(NULL)))OR(vt1.c0)))OR(vt0.c0)) WHEN vt1.c0 THEN ((vt0.c0)&(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE '0' END FROM vt0, vt1 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN (((('551058731')OR(x'')))AND(NULL)) WHEN '588364059' THEN x'1cad' WHEN ((1641152255) NOT NULL) THEN ((x'')*(0.11914111620188306)) END); -- 0ms;
SELECT ALL ((((((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt0.c0, '.u7')) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))), ((vt0.c0)>=(vt1.c0)), (- (vt1.c0))))>(((x'05dc74cf' IN (vt1.c0)), (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt0.c0, vt1.c0, vt1.c0))), x''))) FROM vt0, vt1; -- 1ms;
SELECT ((GROUP_CONCAT(NULL))IS(CAST(vt1.c0 AS INTEGER))), (- (((vt1.c0)=(vt0.c0)))), RANK() OVER () FROM vt0 WHERE (PRINTF(('346902855' IN ()), CASE x'8414'  WHEN '2097776216' THEN 0.29342162203776023 END, ((1447111252)LIKE(NULL))));SELECT DISTINCT (0.30802383442453596 IN (CAST(vt1.c0 AS NUMERIC))) FROM vt1, vt0; -- 0ms;
