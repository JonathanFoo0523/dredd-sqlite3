-- Time: 2024/06/07 22:23:30
-- Database: database49
-- Database version: 3.40.0
-- seed value: 1531509049
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0, c4, c1) VALUES (0.08878906541681786, x'', NULL, 'E컂^p', ''), (NULL, x'', NULL, 0.45566289394881765, '-1107243326'), ('', -1107243326, NULL, '0.45566289394881765', x'1810'); -- 0ms;
INSERT OR ABORT INTO rt0(c4, c2, c1) VALUES ('0.45566289394881765', 0.08587361895566914, NULL), ('OH䧤*示Kqik', '466421531', 0.7903734345262979), (0.14310413678952294, '', '-1597553960'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES ('CZ],m,CsB', NULL, '-1597553960'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('K*G!'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (NULL), (''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (x'5b62', 'TM', x'', '', '262494796'), (NULL, '-253425880', x'', NULL, x''), (0.30742148232593447, 'U', x'97a0', x'', '1495039906'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('262494796'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (''), (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1678461412') WHERE ((CAST(vt0.c0 AS INTEGER))IS(((vt0.c0) IS TRUE))); -- 1ms;
UPDATE OR ROLLBACK vt0 SET c0=0.19385500279083911 WHERE TRIM(DISTINCT (NOT (vt0.c0))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('H\n\C') WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='0.14310413678952294' WHERE vt0.c0 COLLATE NOCASE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.45566289394881765); -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (-1.107243326E9), (x'ba91'), (NULL), (0.0457707337946075), (0.19385500279083911); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE (((vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.3268182705977931))))) AND ((TRIM(vt0.c0, vt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('973634066'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (0xa9ddc5c, x'', NULL, 'E(', 0x591c7fa2); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='973634066', c4=0.8778301154871354, c0=NULL WHERE ((CAST(rt0.c1 AS REAL))*(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN 0xffffffffe466c7e1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE '1687073974' END)); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA optimize; -- 0ms;
REINDEX RTRIM; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES (x'', -889598412), (-4.63026207E8, x''), (0.5828399019029431, '-1597553960'); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (x'765a', '1765198950', 0Xffffffff84baa297, x'', x'b0db'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c3='Z' WHERE (rt0.c2 IN ()); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('-1207142577'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(0.4908473838050026, 0.8660050380656892, x'df7f6965'); -- 4ms;
INSERT OR ABORT INTO vt0 VALUES (''); -- 0ms;
REINDEX BINARY; -- 1ms;
ANALYZE vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=('161440225', 0.7903734345262979, x'') WHERE ((((vt0.c0)%(vt0.c0)))*(CAST(vt0.c0 AS BLOB))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('') WHERE (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))AND(((rt0.c3)<(rt0.c3)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL), (NULL), (-1.59755396E9); -- 1ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET (c2)=(NULL); -- 0ms;
UPDATE rt0 SET (c4)=(973634066) WHERE ((((rt0.c1)>(rt0.c0))) NOT NULL); -- 3ms;
END; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((rt0.c0)LIKE(rt0.c1)) COLLATE NOCASE FROM vt0;SELECT DISTINCT ((((rt0.c0) IS FALSE))/(NULL)) FROM rt0, vt0; -- 0ms;
SELECT (((rt0.c2)) BETWEEN ((((vt0.c0)+(rt0.c4)))) AND ((((((((((rt0.c1)AND(0.8778301154871354)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c2))))) FROM rt0;SELECT (0.8167481570380762 IN (vt0.c0, rt0.c4)) COLLATE BINARY FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (x'') AND (rt0.c4)))<(((((rt0.c2)OR(rt0.c3)))AND(rt0.c4)))) FROM rt0 WHERE ((NOT (('466421531' IN ())))); -- 0ms;
SELECT ALL FIRST_VALUE(rt0.c0) OVER () FROM rt0; -- 0ms;
SELECT ALL ((((GROUP_CONCAT(rt0.c3))AND((((rt0.c4))<((rt0.c2))))))AND(rt0.c0 COLLATE BINARY)), CAST(((rt0.c3)GLOB(NULL)) AS TEXT), PERCENT_RANK() OVER () FROM vt0 LIMIT 1590733957;SELECT ALL vt0.c0, COUNT(*), (+ (((rt0.c0) NOT NULL))), (CAST(rt0.c1 AS NUMERIC) IN (rt0.c4)), '1495039906' FROM vt0 WHERE (x'');SELECT DISTINCT ((((rt0.c3)<(rt0.c2)))>>((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((''))))) FROM rt0 WHERE (CAST(CAST('1436262597' AS REAL) AS INTEGER));SELECT DISTINCT ((TRIM(rt0.c3, rt0.c4)) ISNULL) FROM rt0 WHERE ('-1597553960'); -- 0ms;
SELECT CASE WHEN ((vt0.c0)AND(rt0.c0)) THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c3)|(rt0.c2)) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c3 THEN ((rt0.c0) IS FALSE) ELSE ((vt0.c0)*(rt0.c1)) END FROM vt0 ORDER BY ((((rt0.c4)||(x'')))IS NOT(rt0.c3 COLLATE NOCASE))  NULLS FIRST;SELECT DISTINCT ((((rt0.c4)OR(vt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))) AND (((rt0.c2)IS(vt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c4) IS TRUE) COLLATE BINARY, ABS(rt0.c2 COLLATE NOCASE), SQLITE_COMPILEOPTION_GET(rt0.c1) COLLATE RTRIM FROM vt0;SELECT CASE WHEN AVG(rt0.c0) THEN (+ (vt0.c0)) WHEN vt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c1)OR(rt0.c4)) END, ((0.43168892665165437) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE RTRIM, rt0.c0 FROM vt0, rt0; -- 0ms;
SELECT CUME_DIST() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (rt0.c2, 0.2219006306716893))) IS TRUE) FROM rt0;SELECT DISTINCT COUNT(((rt0.c3)>=(rt0.c1)) COLLATE BINARY) OVER () FROM rt0, vt0 WHERE (((CASE WHEN NULL THEN NULL WHEN x'19bb' THEN x'' WHEN '' THEN 0.38097655201210867 END)>=(((('F\r', 0x12bf60bf, 'oh䧤*示kqik')) BETWEEN (('', 0.7123404514951882, 0.7998676920502577)) AND ((0.9096950393880945, '-1023549224', NULL)))))); -- 1ms;
SELECT ALL CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))  WHEN ((rt0.c0)*(rt0.c2)) THEN MIN(rt0.c3) WHEN 'OH䧤*示Kqik' THEN ((((((((((((rt0.c2)OR(0.39998047619312727)))OR(rt0.c4)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)) WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END THEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) END, CAST(rt0.c3 AS INTEGER) COLLATE BINARY, UNLIKELY(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))), ((((CAST(rt0.c1 AS REAL))OR((((rt0.c4, rt0.c4, rt0.c3))>((rt0.c2, rt0.c2, rt0.c2))))))OR(CASE WHEN x'2d80' THEN NULL WHEN rt0.c4 THEN 'FALSE' WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c0 END)), rt0.c0 FROM rt0, vt0; -- 0ms;
SELECT ALL SUM((((rt0.c2, rt0.c4, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, x'', rt0.c0)))) OVER ( GROUPS BETWEEN  CURRENT ROW AND ((((rt0.c1) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<=(rt0.c1)))) FOLLOWING) FROM rt0;SELECT ((((0.19026036227261778 COLLATE RTRIM)OR(LIKELIHOOD(DISTINCT rt0.c3, 0.10143568672157321))))OR((- (rt0.c3)))), ((((rt0.c0)<>(rt0.c3)))<=(((rt0.c0)IS NOT(rt0.c4)))), -2057691100, (((((rt0.c2 IN ()))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)))OR((1.61440225E8 IN ()))), ((CASE WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c1 END)-(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT ALL ((((NULL COLLATE RTRIM)AND(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((((rt0.c4)OR(rt0.c3)))OR(rt0.c3)))) FROM rt0, vt0 WHERE (CAST(((NULL) IS FALSE) AS INTEGER)) GROUP BY (+ (((rt0.c3)=(rt0.c2)))); -- 0ms;
SELECT DISTINCT ((((rt0.c2 COLLATE BINARY)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(UNLIKELY(vt0.c0))) FROM rt0, vt0 NOT INDEXED WHERE (CASE WHEN CAST('-2057691100' AS REAL) THEN (('z')-(1.436262597E9)) ELSE (('1121309636')*(882292828)) END); -- 0ms;
SELECT ALL ((((rt0.c4) ISNULL)) BETWEEN (((((rt0.c0)OR(rt0.c4)))OR('*.2G0}腍\n嫿'))) AND (CAST(rt0.c0 AS NUMERIC))) FROM vt0 WHERE ('1814133050');SELECT PERCENT_RANK() OVER () FROM rt0, vt0 LIMIT -1597553960 OFFSET 1814133050; -- 0ms;
SELECT DISTINCT '䧤f嫿j\F敎,^' FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)|(((((rt0.c4)OR(rt0.c0)))AND(rt0.c1)))) FROM rt0; -- 0ms;
SELECT ALL AVG(MIN(((((rt0.c4)AND(vt0.c0)))OR(rt0.c1)))) FROM rt0 WHERE ((((((x'') ISNULL), ((((x'')OR(1922326908)))AND(0xffffffffc2fde0d8)), (('f讫Oa')-('-1817322175'))))>((((0xfffffffff7f5e70b)IS NOT('n')), TYPEOF('-267842147'), (- (-134879477))))));SELECT DISTINCT (+ ((~ (rt0.c4)))), (rt0.c0 COLLATE NOCASE IN (((rt0.c2) IS FALSE), LIKE(rt0.c2, rt0.c3, '1'))), (((rt0.c1 IN ()))%((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))) FROM vt0, rt0 LIMIT -982294552 OFFSET 842935564; -- 1ms;
SELECT ((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c4))) ISNULL) FROM vt0 ORDER BY CASE COALESCE(DISTINCT rt0.c3, rt0.c2)  WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c4) AND (vt0.c0)) ELSE ((((rt0.c3)AND(-887377379)))AND(vt0.c0)) END  NULLS LAST;SELECT ALL ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)) COLLATE NOCASE FROM rt0, vt0 WHERE ((((NOT (NULL)))-('1928103360'))) ORDER BY ((CAST(rt0.c0 AS REAL)) BETWEEN (TRIM(x'7c65', rt0.c2)) AND ((rt0.c0 IN ())))  NULLS LAST; -- 0ms;
SELECT (~ (CAST(rt0.c3 AS REAL))), (- (((rt0.c4)<>(rt0.c4)))), (((((x'' IN ()))OR((rt0.c2 IN ()))))OR((NOT (NULL)))), COUNT(970969759 COLLATE RTRIM) OVER (), MIN(-2.5342588E8) FROM rt0 WHERE ((((-1419714734)%(x'')) IN ())); -- 0ms;
SELECT ALL CASE WHEN vt0.c0 THEN '' COLLATE BINARY ELSE CAST(rt0.c3 AS BLOB) END FROM vt0 WHERE (CASE CAST('' AS NUMERIC)  WHEN COALESCE(x'', x'63e2', '뒶]a\M''m<', NULL) THEN ('i5' IN ()) WHEN IFNULL(NULL, 0.9703809069422304) THEN ((x'') NOTNULL) WHEN (NULL IN (x'bcfad3da', 0.9749328791747143)) THEN (('RܨV⑼') NOT NULL) WHEN CASE WHEN -1e500 THEN 0x1fe1387b WHEN x'' THEN 0X3496b85c WHEN 1678461412 THEN -1.023549224E9 END THEN CAST(NULL AS NUMERIC) WHEN ((0.3957098070859689) NOTNULL) THEN (~ (-1817322175)) ELSE ('!' IN (NULL)) END) GROUP BY ((((((vt0.c0)AND(rt0.c2)))AND(rt0.c1))) NOT NULL) HAVING rt0.c2;SELECT ((TOTAL(rt0.c3)) NOT BETWEEN (x'' COLLATE BINARY) AND (rt0.c4)) FROM rt0; -- 0ms;
SELECT DISTINCT SUM(((rt0.c2)>(rt0.c2)) COLLATE RTRIM) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT x'' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT TRIM(rt0.c0, rt0.c1) COLLATE NOCASE COLLATE NOCASE FROM vt0 LIMIT 1409309325;SELECT DISTINCT CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt0.c0))  WHEN (((''))<=((rt0.c0))) THEN COUNT(vt0.c0) ELSE ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END FROM rt0 WHERE (CASE (('-1817322175') BETWEEN ('1992172759') AND ('[i'))  WHEN HEX(0.14310413678952294) THEN LIKELIHOOD('-2068143465', 0.7856963023320129) END);SELECT DISTINCT ((CASE WHEN NULL THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)|(rt0.c2)) FROM rt0, vt0; -- 0ms;
SELECT (~ (((vt0.c0)<=(rt0.c0)))) FROM vt0 WHERE (CAST(((x'eb6a') BETWEEN (0.30742148232593447) AND (0.7612126397971473)) AS TEXT));SELECT (((vt0.c0)) BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))), ((((~ (rt0.c2)), CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END, CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL)), ((rt0.c0) NOT NULL)))>((rt0.c3 COLLATE NOCASE, (rt0.c0 IN ()), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, rt0.c1))), CAST(rt0.c2 AS NUMERIC) FROM rt0, vt0 GROUP BY CASE WHEN (+ (rt0.c2)) THEN (vt0.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 ELSE x'' END WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END END HAVING CASE (((rt0.c3))<((rt0.c0)))  WHEN ((rt0.c4) ISNULL) THEN (((vt0.c0, rt0.c2, vt0.c0, rt0.c4, rt0.c2, rt0.c0, vt0.c0))<((vt0.c0, rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c2))) ELSE MAX(rt0.c0, rt0.c3) END LIMIT 141960316 OFFSET 141960316; -- 0ms;
SELECT ALL ((((rt0.c1) NOTNULL))IS(rt0.c0)), (+ (((((rt0.c0)AND(rt0.c4)))AND(rt0.c2)))), CASE TOTAL(vt0.c0)  WHEN -1597553960 THEN ((((((((vt0.c0)AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)) ELSE ((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)) END FROM rt0;SELECT ((rt0.c4 COLLATE RTRIM)>(((vt0.c0)/('')))), ((((rt0.c3) NOTNULL)) NOTNULL), (((CAST(0.3268182705977931 AS TEXT)))<(((rt0.c2 IN ())))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE((((+ ('33219590')))<=(((vt0.c0) NOTNULL)))) OVER () FROM vt0 GROUP BY ((((rt0.c4)+(rt0.c1))) BETWEEN (((rt0.c3)<(rt0.c3))) AND (((rt0.c4) ISNULL))) HAVING ((rt0.c1)AND(vt0.c0));SELECT ALL (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ((rt0.c2 IN (vt0.c0)))) FROM rt0 WHERE ((((((x'')) NOT BETWEEN ((x'9346')) AND ((0.7992706445421671)))) NOT BETWEEN ((('') BETWEEN ('-848584476') AND (0.014976871181255458))) AND (x'b3dd' COLLATE BINARY)));SELECT DISTINCT ((vt0.c0) NOT NULL) COLLATE BINARY, CASE WHEN '' THEN SUM(rt0.c2) ELSE rt0.c1 END, ((((AVG(rt0.c2))AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))))OR(((((rt0.c0)AND(rt0.c3)))OR(vt0.c0)))) FROM vt0 ORDER BY CAST(((vt0.c0) NOT NULL) AS BLOB) DESC, (((rt0.c1)) BETWEEN ((rt0.c4)) AND (((((rt0.c3))==((rt0.c0)))))) ASC;SELECT ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))*(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))/(LIKELIHOOD(DISTINCT rt0.c0, 0.20250303970562245))), COUNT(((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM), (((((((((((((('96847454') NOT NULL))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))))AND(LOWER(DISTINCT vt0.c0))))OR(((rt0.c2)<(rt0.c2)))))AND(x'')))OR(0Xffffffffa883e6ff COLLATE NOCASE)))AND(CAST(rt0.c4 AS NUMERIC))) FROM rt0 WHERE (x'');SELECT NULL FROM vt0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c4)IS(rt0.c0))) OVER () FROM rt0 WHERE (LIKELIHOOD((('r>''H')AND('-1928175351')), 0.6922813105077185)) LIMIT -2129624755 OFFSET -1492300216; -- 0ms;
SELECT NULL, CAST('-700463382' AS TEXT), -1402538331 FROM vt0; -- 1ms;
SELECT ((TOTAL(NULL)) NOT BETWEEN ('-1928175351' COLLATE BINARY) AND (((x'') NOT NULL))) FROM vt0 GROUP BY (((((0.47278815100310867 IN ()))AND((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))))OR(rt0.c3)) HAVING GROUP_CONCAT(rt0.c0) ORDER BY HEX(DISTINCT vt0.c0) COLLATE BINARY;SELECT rt0.c4 FROM vt0, rt0 WHERE (((-1046086601) BETWEEN (NULL) AND (0.0457707337946075)) COLLATE RTRIM); -- 0ms;
SELECT ((((rt0.c0) NOT NULL)) BETWEEN (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c3))) AND ('0.14310413678952294')) FROM vt0, rt0 WHERE ((+ ((('-1168547668')<=('T''wn?+챦ﻤK'))))); -- 0ms;
SELECT DISTINCT ((MAX(rt0.c1)) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (MIN(rt0.c2))), json_remove(((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)), CAST(rt0.c0 AS REAL)), TOTAL((NOT (vt0.c0))) FROM vt0, rt0 WHERE (((CAST(NULL AS INTEGER))>>((NOT (x''))))) LIMIT 1174707954 OFFSET -1181157097; -- 0ms;
SELECT DISTINCT ((((((((0.36866286397468584)OR(((rt0.c1) NOT NULL))))AND(((((0.72456626130783)OR(vt0.c0)))OR(rt0.c0)))))OR(TRIM(DISTINCT NULL, rt0.c2))))OR(MAX(vt0.c0))), ((x'ee1a') ISNULL), vt0.c0 FROM vt0, rt0 ORDER BY CASE ((rt0.c0)-(vt0.c0))  WHEN (((0.9712298391444433, rt0.c0, vt0.c0)) BETWEEN (('''', rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c4, rt0.c4))) THEN CAST(rt0.c2 AS INTEGER) END DESC  NULLS FIRST; -- 0ms;
SELECT TOTAL((- (rt0.c2))) FROM vt0, rt0 WHERE (CASE WHEN (((534853755, '-1107243326', x''))>((x'74d4', '-1046086601', 0x3a0dfee1))) THEN ((((((((x'6b84')OR('-2068143465')))AND('-1107243326')))OR(0xffffffffcd6ba0e4)))AND(NULL)) END); -- 0ms;
SELECT ((((COUNT(NULL))AND(rt0.c2)))OR(rt0.c4)) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT CAST(LOWER(rt0.c4) AS TEXT) FROM rt0, vt0 GROUP BY LIKE(rt0.c1, x'543a'); -- 0ms;
SELECT DISTINCT TRIM(((rt0.c4)IS NOT(rt0.c4))) FROM rt0, vt0; -- 0ms;
SELECT MAX(((rt0.c1)|(rt0.c2)), CAST(rt0.c0 AS BLOB)) FROM rt0 WHERE (((((((NULL)%(0.7048616220268343)))OR((x'' IN ()))))OR(NULL))); -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c3, vt0.c0)) BETWEEN ((CAST(rt0.c3 AS REAL), (('1890827573') NOT BETWEEN (rt0.c4) AND (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c2 END)) AND ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)), rt0.c3 COLLATE NOCASE, ((rt0.c4)OR(vt0.c0))))), (((vt0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c2), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c4)*(rt0.c4)))) AND ((rt0.c4 COLLATE RTRIM, ((rt0.c2)LIKE(vt0.c0)), ((rt0.c2)GLOB(rt0.c3))))), (rt0.c4 IN ()) COLLATE NOCASE FROM vt0;SELECT DISTINCT -26509096 FROM rt0 WHERE (CASE '-542915555' COLLATE RTRIM  WHEN (~ (-1.023549224E9)) THEN 'u' COLLATE BINARY END) LIMIT -607535413; -- 0ms;
SELECT DISTINCT rt0.c4, ((((rt0.c2) NOT NULL)) NOT BETWEEN (UNLIKELY(rt0.c2)) AND (((rt0.c4) NOTNULL))), (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN 'P''쐝' WHEN rt0.c4 THEN rt0.c0 END IN ()) FROM rt0 WHERE (((((x'3575') NOT BETWEEN ('754080832') AND (0.4082390366641998)))OR(CAST(0.7775482058473643 AS NUMERIC)))); -- 1ms;
SELECT ALL (rt0.c1 IN ()), GROUP_CONCAT(((rt0.c4)|(rt0.c2))) OVER (), rt0.c3 FROM vt0, rt0 WHERE (CAST(((0.2548542825130514) BETWEEN (x'') AND ('A{')) AS REAL)); -- 0ms;
SELECT DISTINCT CAST(x'6e2c9133' AS NUMERIC) FROM vt0; -- 0ms;
SELECT ALL LEAD(((NULL) NOTNULL), rt0.c0, NULLIF(DISTINCT ((rt0.c0)IS(rt0.c0)), ((rt0.c0) NOTNULL))) OVER (), (((rt0.c0 IN (rt0.c1, vt0.c0)))GLOB(((((NULL)OR(rt0.c2)))AND(rt0.c3)))), NTH_VALUE(rt0.c4 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE, ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE 1.992172759E9 END)OR(((('1408229161', rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c4, rt0.c2, '1765198950'))))))AND(((rt0.c2)IS(rt0.c2))))) OVER (), ((MIN(rt0.c3))<<((- (vt0.c0)))), CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) FROM rt0 GROUP BY rt0.c0 HAVING CASE ((((((((rt0.c4)OR(vt0.c0)))AND(rt0.c3)))OR('-1207142577')))AND(rt0.c0))  WHEN MIN(rt0.c0) THEN rt0.c4 COLLATE BINARY ELSE COUNT(rt0.c2) END;SELECT ALL (CASE vt0.c0  WHEN '161440225' THEN rt0.c0 ELSE rt0.c2 END IN ()), CASE ((vt0.c0) NOT NULL)  WHEN ((((vt0.c0)OR(-7.00463382E8)))OR(vt0.c0)) THEN ((rt0.c2)/(rt0.c2)) END, ((NULL) BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE NOCASE, (((rt0.c3) NOTNULL) IN ()), (((rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((rt0.c2)||(rt0.c2)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), SQLITE_SOURCE_ID(), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c4)))) AND ((rt0.c1 COLLATE BINARY, (((((((((((('620727273')OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)), ((rt0.c0) BETWEEN (rt0.c0) AND ('䧤f嫿j\F敎,^')), '', ((rt0.c0)<(rt0.c0))))) FROM vt0 WHERE ((('7V')!=((NULL IN (NULL, '')))));SELECT DISTINCT ((((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)))OR(rt0.c0 COLLATE BINARY)))OR(((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))))AND(rt0.c3 COLLATE RTRIM)))OR(((((1.922326908E9)OR(vt0.c0)))OR(rt0.c0)))) FROM rt0 WHERE ((((((x'', 0Xffffffffdc76c48c, 1.687073974E9, -2.1079297E7, NULL))>(('A', NULL, 'oh䧤*示kqik', NULL, 1.590733957E9)))) IS FALSE));SELECT ALL (((rt0.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((vt0.c0 COLLATE NOCASE))) FROM rt0, vt0 WHERE ((((((((x'8d8c')OR(x'')))OR(0.2348079296456539)), '+X', (('1160628230')OR(NULL))))<((CASE WHEN NULL THEN '' ELSE 0.6900261741104187 END, ((0.45827717483025343) IS TRUE), (((x'37c9')) BETWEEN ((-1.492300216E9)) AND ((1.174707954E9))))))) ORDER BY x''  NULLS FIRST, rt0.c4 DESC, (((rt0.c4))>(((((rt0.c1))>((vt0.c0)))))) DESC; -- 0ms;
SELECT ((LOWER(DISTINCT rt0.c2))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) FROM vt0 NOT INDEXED LIMIT -1329958381 OFFSET -901424125;SELECT DISTINCT ROW_NUMBER() OVER (), ((((((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c4)))))AND(rt0.c4)))AND(((((rt0.c3)OR('P''쐝')))OR(rt0.c4)))))OR(((rt0.c2)&('')))), AVG(CAST(9.73995745E8 AS REAL)) FILTER(WHERE ((NULL)>>(((((vt0.c0)OR(rt0.c3)))AND(rt0.c2))))) OVER () FROM vt0, rt0 WHERE ((~ (((NULL) BETWEEN (x'') AND (-1.7976931348623157E308))))); -- 0ms;
SELECT DISTINCT '', ((CAST(vt0.c0 AS TEXT))*(((rt0.c3) NOTNULL))), '', ((((rt0.c3 COLLATE NOCASE)AND((+ (rt0.c1)))))OR(CASE WHEN rt0.c4 THEN rt0.c2 END)), (((((vt0.c0 IN ()))OR(rt0.c3)))AND(CAST(rt0.c4 AS INTEGER))) FROM rt0;SELECT ((((rt0.c1)!=(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN 0.959452379196951 WHEN rt0.c3 THEN NULL ELSE rt0.c2 END) AND (rt0.c0)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0) BETWEEN (rt0.c0) AND (x'd1de'))))>((rt0.c4 COLLATE RTRIM))) FROM rt0, vt0 LIMIT -195754553; -- 1ms;
SELECT ALL ((AVG(rt0.c0)) BETWEEN ((NOT (rt0.c3))) AND ('-1403026362')), rt0.c2, LIKELIHOOD(((((((((vt0.c0)AND(x'5909')))AND(rt0.c4)))AND(0.8182055182460735)))AND(rt0.c0)), 0.061859293544811234), (+ ((('939851177')GLOB(rt0.c1)))), ((((vt0.c0) IS TRUE))=(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END)) FROM rt0;SELECT (((((rt0.c0))<=((rt0.c1))))IS(((rt0.c3) IS FALSE))) FROM rt0, vt0 WHERE (CASE WHEN ((NULL) IS TRUE) THEN LIKELY(DISTINCT x'') ELSE NULL END); -- 0ms;
SELECT DISTINCT (CASE rt0.c1  WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END IN (CASE WHEN x'08fc' THEN rt0.c3 ELSE rt0.c1 END)) FROM vt0, rt0 WHERE ((((NULL) BETWEEN (0.7720907013105092) AND (-887377379)) IN ())); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS BLOB))IS(json_object(NULL, rt0.c1))) FROM rt0;SELECT ALL ((((rt0.c0)AND('qBwUc86'))) BETWEEN (UPPER(vt0.c0)) AND (((rt0.c4) IS TRUE))) FROM vt0, rt0 WHERE ((((((- ('-26709254')))OR((1.61440225E8 IN ()))))OR(CASE '1160628230'  WHEN 0.9750045911353373 THEN 0.026204486399022953 END))); -- 0ms;
SELECT NULLIF(DISTINCT rt0.c0 COLLATE NOCASE, CASE '+X'  WHEN rt0.c3 THEN rt0.c4 END) FROM rt0, vt0 WHERE ((((NULL IN ())) ISNULL)); -- 0ms;
SELECT (~ (((rt0.c3) IS TRUE))), (((rt0.c0 IN (vt0.c0))) NOT NULL), ((((NULL)AND(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END)))AND(rt0.c2)) FROM vt0, rt0 WHERE (((((0.7992706445421671 IN ())))<=((CAST(0.8801234988361027 AS INTEGER))))); -- 1ms;
SELECT load_extension(((0.04406781717964736)>>(rt0.c2)), rt0.c0) FROM rt0, vt0 WHERE (CASE ((x'ec0e30e3') NOT BETWEEN (0x78b2230f) AND (x''))  WHEN ((x'3173')=(NULL)) THEN ((x'') ISNULL) END) GROUP BY MIN(((x'')>(rt0.c3)), ((rt0.c4)IS NOT(rt0.c3)), ((vt0.c0)AND(rt0.c3)), CAST(rt0.c3 AS REAL)) HAVING ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY; -- 0ms;
SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))OR((NOT (vt0.c0)))))OR('-1597553960')), rt0.c3, rt0.c2 FROM rt0;SELECT (vt0.c0 IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB) COLLATE NOCASE FROM rt0, vt0 WHERE (((((NULL) ISNULL))IS NOT(UPPER(0.17232507124899787)))); -- 0ms;
SELECT DISTINCT ((rt0.c0)<=(rt0.c1)) COLLATE BINARY FROM vt0, rt0; -- 4ms;
SELECT DISTINCT CAST(rt0.c4 AS TEXT) COLLATE NOCASE FROM rt0, vt0 WHERE ((((x'4d46', NULL, NULL)) BETWEEN (((- ('*.2G0}腍\n嫿')), ((((0.4290090848546523)OR(x'61d2f2ad')))AND('')), ((NULL) ISNULL))) AND (((NULL IN ()), ((NULL) NOT BETWEEN (0xfa55a4c) AND ('732435111')), (0.08990812662555492 IN ()))))); -- 0ms;
SELECT ALL NULL FROM vt0, rt0 WHERE (((('ܨgQ涵')) BETWEEN (('h_' COLLATE BINARY)) AND ((CAST(NULL AS REAL))))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0, vt0 WHERE ((((('-1181157097') BETWEEN ('-267842147') AND (x'2773'))) IS TRUE)); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c3)GLOB(rt0.c3))) OVER ( ROWS ((CAST(rt0.c1 AS NUMERIC))>=(0xffffffffd5010f14)) PRECEDING) FROM rt0, vt0 GROUP BY UPPER(DISTINCT rt0.c4 COLLATE RTRIM);SELECT ALL (- (CASE '49639254'  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) FROM rt0, vt0 GROUP BY (((rt0.c2)|(rt0.c2)) IN (vt0.c0 COLLATE NOCASE, CAST(rt0.c0 AS INTEGER))) HAVING ((((rt0.c2) IS TRUE))>=((('')-(vt0.c0)))); -- 1ms;
SELECT DISTINCT ((((rt0.c3)!=(rt0.c3))) NOTNULL), ((((vt0.c0) IS FALSE))IS((vt0.c0 IN ()))), CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB), ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ()), MIN((rt0.c2 IN (rt0.c0))) FROM vt0 WHERE ((((('161440225')*(x'')))&(((((1249452559)OR(x'0fd2')))AND(0.36866286397468584)))));SELECT (((rt0.c2)==(rt0.c1)) IN ()), CASE WHEN ((((((((((((rt0.c4)AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c2)==(rt0.c1)) WHEN ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((rt0.c4) NOT NULL) THEN rt0.c1 COLLATE NOCASE END, ((((vt0.c0)<(rt0.c3)))IS(rt0.c2)), NULLIF(CAST(vt0.c0 AS BLOB), (~ (0.19231944271155987))), (((- (x'')))%(((rt0.c3) NOTNULL))) FROM vt0 WHERE (NULL);SELECT DISTINCT rt0.c3 FROM vt0 LIMIT -1893933676 OFFSET -2026942167;SELECT DISTINCT CASE WHEN COUNT(*) THEN (rt0.c0 IN ()) WHEN ((((rt0.c4)OR(rt0.c1)))OR(vt0.c0)) THEN (NOT (rt0.c0)) WHEN ((rt0.c0)<(rt0.c1)) THEN ((rt0.c2)AND(rt0.c3)) END FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT ALL ROUND(((rt0.c0)<(rt0.c2)), (~ (rt0.c1))), 0.14310413678952294, TOTAL(CASE NULL  WHEN vt0.c0 THEN rt0.c3 END) OVER ( ORDER BY (rt0.c0 IN ()) COLLATE BINARY, ((0x591c7fa2)+((rt0.c2 IN ())))  NULLS LAST) FROM vt0;SELECT ((((rt0.c2) NOTNULL)) BETWEEN (((rt0.c3)>>(rt0.c4))) AND ('t%')) FROM vt0, rt0 WHERE ((- (((x'ec0a')-('1495039906'))))); -- 0ms;
SELECT ALL ((((vt0.c0)%(rt0.c4))) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN ()))) FROM vt0, rt0 WHERE (((((((((((NULL)OR(NULL)))OR(NULL)))OR(0.6900261741104187)))AND(NULL)))<=('1880333159'))); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c4) NOTNULL) THEN (rt0.c3 IN ()) END FROM vt0;SELECT DISTINCT NTH_VALUE(((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))OR(((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR('1992172759')))))AND(((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)))), ((LIKELY(rt0.c0)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END) AND (rt0.c1))) OVER () FROM rt0; -- 0ms;
SELECT CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL), (('') NOTNULL), PERCENT_RANK() OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(LIKELIHOOD(NULL, 0.9935814228959937)) FROM rt0 LIMIT 555925933 OFFSET 49639254; -- 0ms;
SELECT ALL ((((CAST(rt0.c3 AS BLOB))AND(rt0.c4 COLLATE RTRIM)))OR(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE 'QR#2t' END)), TRIM(rt0.c2 COLLATE RTRIM), json(TOTAL(rt0.c4)) FROM vt0 WHERE (NULLIF(0.47608285355392876, ((('Q+h5W'))>=((NULL)))));SELECT DISTINCT (NOT (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) FROM rt0, vt0 WHERE (CAST(((0.21889617775026726) IS FALSE) AS BLOB)); -- 0ms;
SELECT CAST(((vt0.c0) NOT NULL) AS REAL) FROM vt0, rt0 WHERE ((((NULL)) NOT BETWEEN ((x'87a6')) AND ((0.6597718220955379))) COLLATE RTRIM); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(SQLITE_COMPILEOPTION_GET(rt0.c0))), (CASE vt0.c0  WHEN rt0.c4 THEN rt0.c0 END IN ()), ((((rt0.c1)==(vt0.c0)))<<(CAST(NULL AS BLOB))) FROM vt0 WHERE ((((('0.7998676920502577') ISNULL)) BETWEEN (CAST(x'ea6e' AS BLOB)) AND (json(0x6d9e44d9))));SELECT DISTINCT rt0.c0 FROM vt0, rt0 ORDER BY CAST(((rt0.c1)IS(rt0.c0)) AS REAL) DESC; -- 0ms;
SELECT DISTINCT (((rt0.c1)/(rt0.c0)) IN ()), ((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (NULLIF(DISTINCT -133359267, rt0.c2)) AND ('')), (- (((((((((rt0.c2)AND(rt0.c1)))AND(0.976014266173702)))OR(rt0.c0)))AND(rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE (((((- (1382083361)), CASE WHEN NULL THEN '-982294552' WHEN '973995745' THEN x'' WHEN NULL THEN 0.3268182705977931 WHEN '9쟡Gb' THEN 0.18549628547797625 WHEN '' THEN x'' END, ((0xffffffffaaa00102)*(NULL))))<(((((0Xffffffffd7d8db09))<=((NULL))), ((x'')IS(NULL)), (('(\nH)Yo') ISNULL))))); -- 0ms;
SELECT ALL (((((rt0.c1))<=((rt0.c2)))) NOT NULL), CAST((((rt0.c3, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c0, rt0.c1))) AS BLOB), ((rt0.c0 COLLATE RTRIM) BETWEEN ((rt0.c0 IN (rt0.c1))) AND ((((x'ecd3', rt0.c1, rt0.c2)) BETWEEN (('', rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c3, rt0.c0 COLLATE NOCASE, ((((((rt0.c0)>>(rt0.c2)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(vt0.c0)), (((- (rt0.c4))) IS TRUE), ((((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c1)))/(rt0.c0)) FROM vt0, rt0; -- 0ms;
SELECT ((rt0.c0 COLLATE RTRIM) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END) AND (CASE WHEN rt0.c4 THEN vt0.c0 END)) FROM rt0;SELECT DISTINCT ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) FROM rt0 WHERE (CAST((NULL IN ('', '-2100774159')) AS INTEGER)) INTERSECT SELECT MAX((((rt0.c2, rt0.c4, rt0.c4))<=((rt0.c2, rt0.c3, rt0.c1))), NULLIF(rt0.c4, -2057691100)) FROM rt0;SELECT '	^', rt0.c0, ((((rt0.c2)IS(vt0.c0)))-(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN '-1626285013' THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 END)) FROM rt0 WHERE (((CASE WHEN NULL THEN x'ca74' ELSE 0.9551854640775398 END) NOT BETWEEN ((('')IS(''))) AND ((((NULL)) BETWEEN ((NULL)) AND (('1839088857')))))) LIMIT -1917089796 OFFSET -1893933676;SELECT DISTINCT CASE WHEN rt0.c0 THEN MIN(vt0.c0) END, COUNT(*) COLLATE NOCASE, 0x491c83d2 FROM rt0 WHERE ((('0.2348079296456539')<=(x'')) COLLATE NOCASE);SELECT DISTINCT ((((((((LAST_INSERT_ROWID())OR(AVG(rt0.c2))))AND(LIKE(rt0.c0, -1419714734, ''''))))OR(CASE 0.45827717483025343  WHEN rt0.c0 THEN rt0.c0 END)))OR(CAST(rt0.c3 AS REAL))), ((((((rt0.c0)/(rt0.c1)))AND(COALESCE(rt0.c4, -2.0576911E9))))OR(x'e926')), (+ (TRIM(DISTINCT rt0.c2, rt0.c1))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT (NOT (((rt0.c3)LIKE(rt0.c4)))), ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END) NOT NULL), LAST_VALUE((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))/((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) OVER (), COALESCE(rt0.c0 COLLATE RTRIM, CAST(rt0.c2 AS TEXT)), CASE rt0.c3  WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt0 WHERE ((((x'19f3', '-1491769407', '-1467750657')) NOT BETWEEN ((CASE WHEN NULL THEN x'87f1' END, CAST('973995745' AS NUMERIC), ((('-2113488171')) BETWEEN ((0.39998047619312727)) AND ((NULL))))) AND (((x'' IN ()), (('&(')<>(x'')), json_extract('0]&''ZT', x'2d8b1e45', '', 'OH䧤*示Kqik')))));SELECT DISTINCT ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))=(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))), (((rt0.c2, vt0.c0, rt0.c4)) NOT BETWEEN ((NULL, rt0.c0, x'')) AND ((-1.817322175E9, rt0.c1, rt0.c2))) COLLATE RTRIM, ((((rt0.c4)*(rt0.c0)))&((NOT (rt0.c2)))) FROM rt0, vt0 WHERE (LIKELIHOOD(((1.687073974E9) NOT BETWEEN ('#zǐA鵏⭵') AND (x'')), 0.16588066876735574)) ORDER BY ((CAST(rt0.c1 AS TEXT))>=((rt0.c2 IN ()))) ASC  NULLS LAST, ((((rt0.c2) IS TRUE))||(((rt0.c1)<>(rt0.c1))))  NULLS FIRST, 0X6ab3559c ASC  NULLS FIRST;SELECT DISTINCT CASE WHEN UPPER(DISTINCT 1665988302) THEN TRIM(DISTINCT rt0.c0, rt0.c4) ELSE rt0.c4 COLLATE RTRIM END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4))))<=((((rt0.c3)IS NOT(rt0.c4))))), ((0.4445361091012282)-(vt0.c0)) COLLATE BINARY, SUM(((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c0))) FROM rt0 WHERE (((LIKELIHOOD(DISTINCT NULL, 0.7058386419067076)) IS FALSE)) ORDER BY rt0.c0 DESC  NULLS FIRST, (('-2146421648') NOT NULL) ASC  NULLS FIRST;SELECT ALL ((((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, '\n魧qd', rt0.c2))))) FROM vt0;SELECT DISTINCT GROUP_CONCAT(x'be45') OVER (), LIKELY((((NULL)) BETWEEN ((vt0.c0)) AND ((x'')))), json_patch(DATE(rt0.c2, rt0.c4, rt0.c1), ((rt0.c1)<>(rt0.c3))) FROM rt0, vt0 WHERE (CASE WHEN NULL THEN 0x121761e1 ELSE '1992172759' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT AVG(((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c3)))OR(rt0.c2))) OVER () FROM vt0, rt0 LIMIT -267842147 OFFSET 1454068575; -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((rt0.c1)||(vt0.c0))), (((((rt0.c1)) BETWEEN (('m슽/')) AND ((vt0.c0)))) IS TRUE), json_extract(AVG(rt0.c2), (rt0.c1 IN ())) FROM rt0, vt0;SELECT DISTINCT 'nz_', TOTAL((rt0.c2 IN ())), RANK() OVER () FROM rt0; -- 0ms;
SELECT CASE rt0.c4  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END COLLATE BINARY FROM vt0 WHERE ((((0.47035588684066776 IN ()))IS NOT((((NULL)) BETWEEN ((-2.146421648E9)) AND ((NULL)))))) ORDER BY ((rt0.c3) BETWEEN (((vt0.c0)<>(rt0.c0))) AND (((rt0.c0) NOT NULL)))  NULLS FIRST;SELECT DISTINCT ((((rt0.c3) ISNULL)) NOT BETWEEN (LOWER(DISTINCT rt0.c3)) AND (((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))) FROM vt0 NOT INDEXED, rt0 WHERE (((((0xfa55a4c)||(939851177))) NOT BETWEEN (0xffffffff9fa0cb6c) AND (CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT ((CASE rt0.c1  WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL) FROM rt0 NOT INDEXED ORDER BY ((~ (rt0.c2)) IN ()) DESC  NULLS LAST;SELECT DISTINCT TOTAL(CAST(rt0.c3 AS INTEGER)) OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL rt0.c1 FROM rt0; -- 0ms;
SELECT ALL (rt0.c1 IN (((((rt0.c1)AND('Rb[~}[>ׇ^')))AND(rt0.c2)), CAST(rt0.c1 AS BLOB))) FROM vt0 LIMIT 792529245 OFFSET -1402538331;SELECT ALL ABS(DISTINCT rt0.c3) COLLATE NOCASE, (((+ (rt0.c2)))>=(((('-253425880', rt0.c2, rt0.c4))>=((rt0.c1, rt0.c3, rt0.c3))))), CAST(json_array(rt0.c0, rt0.c1) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT ABS(CASE WHEN vt0.c0 THEN vt0.c0 END), (- (((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))), DENSE_RANK() OVER () FROM vt0, rt0 WHERE ((((x'')*(NULL)) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN 0Xffffffff94bf974f THEN MIN(rt0.c2) ELSE (~ (rt0.c2)) END FROM rt0, vt0 WHERE (((((((-999519317) NOTNULL))AND(0.825050196653162)))OR(x'64c2' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)AND(((rt0.c4)<(rt0.c1)))))AND(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c4 END)) FROM rt0 WHERE ((((x'' IN ('Of{%,')))>(((0.6442210011020173)<(1.61440225E8)))));SELECT DISTINCT ((RTRIM(rt0.c1))<((('Qu') ISNULL))), ((('-2129624755' COLLATE BINARY))<=((((((rt0.c4)AND(rt0.c2)))AND(rt0.c4))))), ((((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(-2.67842147E8)))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(TIME(rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c2))) FROM vt0, rt0 WHERE ((((- (x'')))%(((NULL) BETWEEN (x'') AND ('^,0op+'))))); -- 0ms;
SELECT ALL (((((~ (rt0.c0)))AND(COUNT(vt0.c0))))OR(MIN(rt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0 WHERE ((json_quote('Pi*M黲') IN ())) GROUP BY rt0.c3; -- 0ms;
SELECT CASE WHEN ((rt0.c1) ISNULL) THEN ((1.992172759E9) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((rt0.c4)>(vt0.c0)) THEN (rt0.c0 IN ()) WHEN '0.47035588684066776' COLLATE BINARY THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) END, (SUM(rt0.c2) IN ()), ((((((((CAST(rt0.c1 AS NUMERIC))OR(CAST(rt0.c2 AS INTEGER))))OR((rt0.c2 IN ()))))AND(vt0.c0)))OR(CAST(rt0.c4 AS REAL))) FROM rt0 WHERE (CAST(0.4192777494507306 AS INTEGER) COLLATE NOCASE);SELECT NTILE(CASE WHEN ((rt0.c3)==(rt0.c0)) THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (0.41927124977599073)) THEN 0.587304616148612 WHEN ((((rt0.c0)AND(rt0.c2)))OR(NULL)) THEN ((rt0.c1)>>(rt0.c2)) ELSE ((vt0.c0) IS TRUE) END) OVER (), CUME_DIST() OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP), CAST(rt0.c4 AS REAL), MAX((((vt0.c0)) BETWEEN ((NULL)) AND ((rt0.c3))), rt0.c1), CASE ((NULL)<=(rt0.c3))  WHEN rt0.c1 THEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c4)) ELSE SUM(rt0.c4) END FROM vt0, rt0 WHERE (LOWER((((x'', 0.24296145416667048, '1403461907')) BETWEEN (('', NULL, '-1087286315')) AND ((NULL, 0Xffffffffcc896304, x''))))) LIMIT 161440225;SELECT rt0.c0 FROM vt0, rt0 WHERE ('262494796'); -- 0ms;
SELECT ALL ((vt0.c0) IS TRUE) COLLATE RTRIM FROM rt0 NATURAL JOIN vt0 WHERE (((((NULL)<<(NULL)))&(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((rt0.c0)*(rt0.c3)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL rt0.c3 FROM vt0, rt0 WHERE ((((NULL, x'', '0''8hb')) NOT BETWEEN ((((((0.17676700867749018)OR(NULL)))OR(x'')), ('-1023549224' IN (0.8253056773900511)), ((0X61978ec) NOT NULL))) AND ((CASE WHEN 'e뻼Qw' THEN 1.495039906E9 WHEN 0.3894784832914945 THEN '1e500' WHEN NULL THEN x'504b' ELSE x'' END, (NOT ('{}')), (((('-889598412')OR(0.2022245772896153)))OR(NULL)))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END)-((vt0.c0 IN ()))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (NOT ((rt0.c3 IN ()))) FROM rt0, vt0; -- 0ms;
SELECT (NOT (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 END)), ((((rt0.c2) NOT NULL))!=(((rt0.c0) NOT NULL))), ((TYPEOF(rt0.c3)) BETWEEN (rt0.c1) AND ((+ (NULL)))) FROM rt0, vt0 ORDER BY 'P''쐝' ASC; -- 0ms;
SELECT (((vt0.c0, vt0.c0, rt0.c0)) BETWEEN ((((x'')<=(rt0.c3)), (((rt0.c4))<((rt0.c4))), (vt0.c0 IN (rt0.c4)))) AND ((TYPEOF(DISTINCT rt0.c1), ((rt0.c2)AND(vt0.c0)), AVG(rt0.c1)))), ((((rt0.c3)>(rt0.c0))) IS FALSE), COUNT(*) OVER ( ORDER BY HEX((((rt0.c1, rt0.c2, rt0.c4))>=((0.6794458650354197, vt0.c0, rt0.c0)))) DESC) FROM rt0, vt0 WHERE (CAST(CASE x'2142'  WHEN NULL THEN NULL ELSE '1293156328' END AS INTEGER)) GROUP BY (((((rt0.c2, rt0.c0, rt0.c2))!=((rt0.c0, x'4bb8', rt0.c3)))) BETWEEN (rt0.c4) AND (((vt0.c0) IS FALSE))); -- 0ms;
SELECT CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c0)) THEN ((rt0.c2)AND(rt0.c3)) WHEN (rt0.c2 IN ()) THEN rt0.c0 COLLATE RTRIM WHEN NULLIF(DISTINCT vt0.c0, rt0.c0) THEN ((rt0.c3)|(rt0.c2)) WHEN (((rt0.c3))<=((rt0.c2))) THEN DATE(rt0.c3, rt0.c3, vt0.c0, rt0.c3, rt0.c1) WHEN (~ (rt0.c3)) THEN ((vt0.c0)IS(rt0.c3)) ELSE (rt0.c2 IN ()) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE NOCASE AS INTEGER), SUM(((rt0.c4) IS FALSE)) OVER (), ((CAST(rt0.c0 AS INTEGER)) IS TRUE) FROM rt0, vt0; -- 1ms;
SELECT ALL rt0.c4, ((rt0.c4)>(x'7987')), COUNT((NOT (rt0.c2))) OVER (), (CAST(rt0.c2 AS TEXT) IN (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c4 END)), CASE rt0.c0  WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (x'2b5b')) THEN CAST(rt0.c0 AS NUMERIC) END FROM vt0, rt0 LIMIT -299275668 OFFSET -1527682725; -- 0ms;
SELECT DISTINCT rt0.c3 FROM vt0, rt0; -- 0ms;
SELECT (((((rt0.c2 IN ()))OR(MIN(rt0.c3))))OR(MIN(rt0.c3))) FROM vt0 WHERE (CAST((('v%r!DQ')>>(NULL)) AS BLOB));SELECT ((CASE WHEN 0xffffffff92ba3343 THEN rt0.c4 END)OR(((rt0.c3) NOT BETWEEN (0xffffffffc8e6fee4) AND (rt0.c1)))) FROM rt0, vt0 LIMIT -104239819; -- 0ms;
SELECT DISTINCT ((((CASE '-1890090345'  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END)OR((rt0.c0 IN (vt0.c0)))))AND(rt0.c1 COLLATE NOCASE)), (((rt0.c1)) BETWEEN ((((rt0.c1)<(rt0.c3)))) AND ((rt0.c1 COLLATE NOCASE))), (NOT (vt0.c0 COLLATE NOCASE)) FROM vt0, rt0 WHERE (CAST(CASE NULL  WHEN '1590733957' THEN '-1577363799' END AS INTEGER)); -- 1ms;
SELECT ALL TRIM((~ (rt0.c0)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END), NULL, (((((+ (rt0.c3)))AND(CAST(rt0.c3 AS INTEGER))))AND((-5.96196212E8 IN ()))) FROM rt0, vt0; -- 0ms;
SELECT (('-1160372552') NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((+ (rt0.c2)))) FROM vt0, rt0; -- 0ms;
SELECT ALL rt0.c1 FROM rt0, vt0; -- 0ms;
SELECT AVG(((rt0.c0)%(rt0.c4))) FROM vt0, rt0 WHERE (CASE WHEN (0.19026036227261778 IN ()) THEN ((((NULL)OR('9쟡Gb')))AND('{}')) ELSE (~ ('-596196212')) END); -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(rt0.c1)))AND(x''))) IS FALSE) FROM vt0, rt0; -- 0ms;
SELECT ALL ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))>=(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))) FROM rt0, vt0 WHERE (((('3Y3诩)q[k3')) BETWEEN ((CAST(NULL AS REAL))) AND ((((0xffffffffe466c7e1) BETWEEN (0.61207972420193) AND (NULL)))))); -- 0ms;
SELECT ALL ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM FROM rt0 WHERE ((- (CAST(NULL AS REAL)))); -- 1ms;
SELECT ALL CAST((rt0.c3 IN ()) AS TEXT), TOTAL((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0)))), (((- (vt0.c0)))<=(TOTAL(rt0.c0))) FROM vt0, rt0 WHERE (NULL); -- 0ms;
SELECT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY FROM rt0 INNER JOIN vt0 ON (+ (rt0.c4)) COLLATE NOCASE WHERE (((((NULL)|(0.9982711324249276)))+(json(-1432354558)))); -- 0ms;
SELECT ALL (~ (((rt0.c2)>=(rt0.c1)))), FIRST_VALUE(vt0.c0) OVER (), CASE WHEN (rt0.c2 IN (vt0.c0)) THEN ((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c2)) ELSE ((rt0.c4)OR(rt0.c0)) END FROM vt0 WHERE (CAST((('-1329958381')LIKE('')) AS INTEGER));SELECT ALL ((((rt0.c2)>>(NULL)))>=(rt0.c2)) FROM rt0 WHERE ((((- (0.5703700080615901)))GLOB('H_' COLLATE NOCASE))); -- 0ms;
SELECT (NOT (CASE rt0.c0  WHEN rt0.c1 THEN '' ELSE rt0.c0 END)), ((NULL)LIKE('-999519317')), (((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0))))!=((TOTAL(vt0.c0)))) FROM rt0 WHERE (CAST(((((',c^')OR('')))AND('1996618454')) AS TEXT)) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1))) BETWEEN (rt0.c4) AND ((rt0.c2 IN ()))) ASC  NULLS LAST, (((rt0.c2, rt0.c4, rt0.c1))<(((NOT (vt0.c0)), ((vt0.c0)+(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ASC, CASE (- (rt0.c4))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN '0' END THEN ((((rt0.c1)OR(NULL)))AND('-1626285013')) WHEN (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c4)) AND ((rt0.c0, rt0.c4, rt0.c2))) THEN (~ (rt0.c2)) WHEN ((vt0.c0)>>(rt0.c4)) THEN ((vt0.c0)!=(rt0.c4)) END;SELECT 1.85019253E8 FROM vt0, rt0 WHERE ((((- ('')))>=('ifx!'))); -- 0ms;
SELECT HEX(DISTINCT (NOT (rt0.c2))), ((PRINTF(rt0.c4))||(CAST(rt0.c1 AS INTEGER))), SUM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c4 THEN rt0.c1 END) OVER () FROM rt0, vt0 WHERE ((((('', x'', 'u^[9l?!s쒌'))>(('nz_', '4pp4TQ', x''))) IN ())); -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE RTRIM)<((vt0.c0 IN ()))) FROM rt0 WHERE ('-721350892') UNION SELECT DISTINCT (((((rt0.c3, rt0.c3, rt0.c4))<=((vt0.c0, rt0.c4, rt0.c2)))) BETWEEN (((rt0.c3)|(vt0.c0))) AND (GROUP_CONCAT(rt0.c3))) FROM vt0, rt0 WHERE (((((CASE WHEN '466421531' THEN 185019253 ELSE x'' END)OR(0.4253487774962337 COLLATE BINARY)))AND((x'' IN ())))); -- 0ms;
SELECT (- (((vt0.c0)>=(rt0.c3)))) FROM rt0, vt0 WHERE (CAST(CASE WHEN NULL THEN x'' END AS REAL)); -- 0ms;
SELECT ALL MIN((- (rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt0.c4))>((rt0.c1)))), (((NULL IN ()))!=(((rt0.c4)=(vt0.c0)))), (+ (((((rt0.c1)OR(rt0.c4)))AND(rt0.c2)))) FROM rt0 WHERE ((((('1701724153')AND(((0x2223a889) BETWEEN (0.617245118984172) AND ('-26709254')))))AND(((0.14310413678952294) BETWEEN (732435111) AND ('')))));SELECT DISTINCT CASE ((vt0.c0) NOTNULL)  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END THEN ((((x'')AND(rt0.c1)))OR(rt0.c0)) END FROM rt0, vt0 WHERE ((((+ ('-700463382'))) NOT NULL)); -- 0ms;
SELECT DISTINCT CASE rt0.c1  WHEN (- (rt0.c0)) THEN ((rt0.c0)%(rt0.c3)) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)) IN ()) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT AVG(rt0.c1) OVER () FROM rt0 GROUP BY ((((vt0.c0) NOTNULL)) BETWEEN (((rt0.c2)>=(rt0.c2))) AND (((((rt0.c1)AND(rt0.c3)))AND(rt0.c1))));SELECT ALL (((((((('d{2')AND(((rt0.c2)=(rt0.c1)))))AND(((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt0.c0)))))OR((NOT (vt0.c0)))))OR(LTRIM(rt0.c2, vt0.c0))) FROM vt0 WHERE (((((9.70969759E8) NOT BETWEEN (x'') AND (x''))) NOTNULL)) GROUP BY (((('TM')OR((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))))AND('(L' COLLATE BINARY)), rt0.c4, NULL HAVING ((((IFNULL(rt0.c0, rt0.c1))OR(MIN(rt0.c4))))AND(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3))));SELECT DISTINCT (((((((((rt0.c0 IN (rt0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))OR(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1)>=(rt0.c0)))))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END)) FROM rt0, vt0 WHERE ((((NULL)) NOT BETWEEN ((CASE '(hv'')~50'  WHEN NULL THEN x'' WHEN -887377379 THEN '0.30742148232593447' WHEN 0.22585165425129916 THEN x'' WHEN 0.46418662926472043 THEN -542915555 WHEN NULL THEN NULL ELSE -1.95754553E8 END)) AND ((((NULL)OR(NULL)))))); -- 0ms;
SELECT ((AVG(rt0.c2))>=(vt0.c0)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT json_insert(((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3)), ((NULL) NOTNULL), ((rt0.c4)/(vt0.c0)), ((rt0.c2) IS FALSE), (~ (vt0.c0))) FROM vt0 WHERE (CASE (('')&('K*G!'))  WHEN CASE WHEN '-134879477' THEN -206125629 WHEN -132054576 THEN 0.10551168287480217 WHEN '-887377379' THEN 0.45320114277807577 END THEN ((x'') BETWEEN (x'') AND ('1992172759')) END) LIMIT 666352989;SELECT DISTINCT ((((rt0.c2)<(rt0.c0)))||(((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)))) FROM vt0, rt0 WHERE (((((CAST(x'' AS TEXT))AND((('.d')LIKE(x'')))))OR(((((((((NULL)OR(NULL)))AND('0.22585165425129916')))OR(0.4163634162710651)))AND(NULL))))) GROUP BY ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)))==(rt0.c2)) HAVING (((rt0.c2)LIKE(rt0.c3)) IN ()); -- 0ms;
SELECT ALL ((((rt0.c3)AND(rt0.c1)))*(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c4 END)) FROM vt0, rt0; -- 0ms;
SELECT CAST(AVG(rt0.c4) AS NUMERIC) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) NOT BETWEEN (0.9799431040287226) AND (rt0.c2)) AS REAL), (+ (((rt0.c4)&(x'4195')))), ((vt0.c0)/(vt0.c0)) COLLATE BINARY FROM rt0;SELECT DISTINCT ((((((rt0.c2)>>(x'a796')))AND(((vt0.c0) NOT NULL))))OR(((rt0.c1)/(rt0.c3)))) FROM vt0 WHERE ((CAST(x'' AS NUMERIC) IN ()));SELECT ALL ((((rt0.c0)OR(((rt0.c4)>>(vt0.c0)))))OR(x'')) FROM rt0 WHERE (((((('466421531')*(NULL)), CAST(0.400392064255336 AS TEXT), ((NULL)IS(0.13217657970442376))))>((((NULL)AND(NULL)), HEX(1174707954), NULL)))) LIMIT -1118382891;SELECT DISTINCT ((TYPEOF(DISTINCT rt0.c0))IS(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0 WHERE ('-463026207') LIMIT 882292828; -- 0ms;
SELECT DISTINCT (NOT (TOTAL(rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT (NULL IN ()) COLLATE BINARY FROM rt0 ORDER BY ((((vt0.c0) NOT NULL))IS NOT(0.8902922871742641)) ASC  NULLS FIRST;SELECT DISTINCT (rt0.c0 IN ()) FROM vt0 WHERE ((((x'14a48fcd')) NOT BETWEEN ((CASE 0.5518264864679348  WHEN NULL THEN 0.8621913558092762 END)) AND ((((('l3Ky>d[')) NOT BETWEEN ((x'')) AND ((x'0a29'))))))) LIMIT 1957863666; -- 0ms;
SELECT CAST((- (rt0.c3)) AS BLOB) FROM vt0, rt0 WHERE ((((NULL)) NOT BETWEEN ((LOWER(DISTINCT '-2113488171'))) AND ((((NULL)>>('m슽/')))))); -- 0ms;
SELECT DISTINCT ((NULL)==((((0x591c7fa2, rt0.c0, rt0.c1))<=((rt0.c4, rt0.c2, rt0.c4))))) FROM rt0, vt0 WHERE (((x'' COLLATE RTRIM)=(((0.08990812662555492) BETWEEN (NULL) AND (NULL))))) LIMIT 709194797; -- 0ms;
SELECT ALL CAST(((rt0.c4)IS NOT(rt0.c0)) AS BLOB), IFNULL((~ (rt0.c1)), (rt0.c1 IN (rt0.c2, rt0.c3))), (((rt0.c2) IS TRUE) IN ()) FROM rt0 WHERE (HEX(NULL) COLLATE BINARY); -- 0ms;
SELECT NULL FROM vt0 WHERE ('-1952845340') LIMIT -1377207819; -- 0ms;
SELECT ALL (((x'd9ac3a97')>(rt0.c1)) IN ()) FROM rt0 ORDER BY CAST('' COLLATE BINARY AS TEXT), (((+ (rt0.c0))) BETWEEN ((- (rt0.c4))) AND (CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) ASC  NULLS FIRST;SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (SUM(rt0.c0)) AND (CAST(rt0.c0 AS INTEGER))) FROM vt0 WHERE ((((TYPEOF('Qr%db')))!=((x'')))) LIMIT 765895118 OFFSET -1541576376;SELECT DISTINCT ((((rt0.c2) NOT NULL)) ISNULL), ((TYPEOF(rt0.c1)) NOTNULL), (((vt0.c0, x'', rt0.c3)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c2, 0.2650537709111479), rt0.c2)) AND (((rt0.c2 IN ()), CAST(vt0.c0 AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((UNLIKELY(DISTINCT rt0.c1))LIKE(x'fca2')) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c2 COLLATE BINARY THEN ((((rt0.c4)OR(vt0.c0)))AND(rt0.c4)) ELSE CAST(0xffffffffd5e352bc AS INTEGER) END FROM rt0, vt0 WHERE (CAST((((0.08990812662555492))<=((x'b77e'))) AS NUMERIC)) ORDER BY ((((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))||(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))) ASC  NULLS LAST; -- 0ms;
SELECT CASE (~ (rt0.c4))  WHEN ((rt0.c0)AND(rt0.c4)) THEN (((vt0.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c0, rt0.c1))) END FROM vt0, rt0 WHERE (((((((x'3010')AND('f8')))AND(0X76e23b99))) NOT BETWEEN ('-1192753506' COLLATE BINARY) AND (((NULL) ISNULL)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (1992172759))  WHEN CAST(vt0.c0 AS INTEGER) THEN rt0.c3 COLLATE NOCASE END  NULLS LAST; -- 0ms;
SELECT DISTINCT (UNLIKELY(vt0.c0) IN ()) FROM vt0; -- 1ms;
SELECT ((((0.3242643977175341)OR(rt0.c1)))OR(AVG(vt0.c0))) FROM rt0 WHERE ((((0x6ca19e48, 4.9639254E7, 0xffffffffd1db1336)) NOT BETWEEN ((((((NULL)OR(NULL)))OR('939851177')), CAST(',' AS BLOB), ((0.8181569496333978) NOTNULL))) AND (((((''))>=(('r>''h'))), ((NULL)LIKE('')), 0.8000734844091832 COLLATE BINARY))));SELECT DISTINCT CASE WHEN ((rt0.c3)!=(vt0.c0)) THEN ((((rt0.c1)OR(rt0.c3)))AND(NULL)) ELSE ((rt0.c3)>(vt0.c0)) END, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('1160628230')))!=((rt0.c0 IN ()))), x'e3bc', ((rt0.c4) NOTNULL) COLLATE NOCASE, ((UNICODE(rt0.c3)) NOT BETWEEN (rt0.c0) AND (TRIM(DISTINCT rt0.c3, rt0.c1))) FROM vt0, rt0 LIMIT -1004239493 OFFSET -1208033450; -- 0ms;
SELECT ALL rt0.c3, SUM((+ (vt0.c0)) COLLATE BINARY), ((MIN(rt0.c1))&(rt0.c3)) FROM vt0 WHERE (((x'' COLLATE RTRIM)<=(('1861007193' IN (0.6629291566421743)))));SELECT DISTINCT (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((rt0.c3)=(rt0.c4))))), (+ (rt0.c1 COLLATE NOCASE)), ((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c0 END)-((((vt0.c0))<>((rt0.c2))))) FROM vt0, rt0 GROUP BY '4pp4TQ' HAVING rt0.c3; -- 0ms;
SELECT ALL (((rt0.c0 IN ())) NOT BETWEEN (COUNT(*)) AND (((vt0.c0)>>(NULL)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT LIKELIHOOD((vt0.c0 IN ()), 0.9202077503825404) FROM rt0 WHERE (TYPEOF((+ (NULL)))); -- 0ms;
SELECT DISTINCT ((MIN(rt0.c0))||(((-1.403026362E9) NOTNULL))) FROM vt0;SELECT DISTINCT (((+ (rt0.c0))) BETWEEN (UPPER(rt0.c0)) AND ((NOT (rt0.c0)))) FROM rt0, vt0 WHERE (((CASE WHEN x'' THEN '' ELSE -1403026362 END) ISNULL)); -- 0ms;
SELECT DISTINCT json_valid(vt0.c0 COLLATE RTRIM) FROM rt0, vt0 ORDER BY CASE (((rt0.c4))<=((rt0.c3)))  WHEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((NULL))) THEN ((('0.7775482058473643'))<((vt0.c0))) END; -- 0ms;
SELECT ALL COUNT(CAST(rt0.c0 AS NUMERIC)) FROM rt0 WHERE (LIKE(((NULL)||(x'')), rtreenode(0.25973626413793993, 0.752729593714793))); -- 0ms;
SELECT (((vt0.c0) ISNULL) IN ()), (((rt0.c4 IN (rt0.c1)))IS(((rt0.c0)&(rt0.c1)))), ((rt0.c1) BETWEEN (((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c2))) AND ((~ (rt0.c4)))) FROM rt0, vt0 WHERE (((LIKELY(DISTINCT NULL))>>(SQLITE_SOURCE_ID()))); -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c4 AS TEXT))AND((rt0.c2 IN (rt0.c3)))))OR(-9.82294552E8)) FROM vt0;SELECT ALL (((((rt0.c2)&(rt0.c0))))>((UNLIKELY(vt0.c0)))), ((vt0.c0)<(((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))), ((rt0.c0)||(LTRIM(rt0.c0, rt0.c2))), (NOT (((rt0.c2)LIKE(vt0.c0)))), (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c4))))GLOB(((rt0.c0) IS TRUE))) FROM vt0;SELECT DISTINCT (rt0.c0 COLLATE RTRIM IN ()) FROM vt0 WHERE (((0.5775726621632074)<>(NULL)) COLLATE NOCASE); -- 0ms;
SELECT '', ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND((rt0.c0 IN ()))))OR((- (rt0.c4)))), ((CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c4 END)IS NOT(((rt0.c0)IS(rt0.c4)))) FROM vt0, rt0 ORDER BY CAST(((rt0.c1)LIKE(rt0.c0)) AS NUMERIC), (((((((('-1626285013')AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE -1.33359267E8 END)))OR(COALESCE(rt0.c2, vt0.c0))))OR(CASE WHEN NULL THEN rt0.c3 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(MIN(rt0.c2) AS NUMERIC) FROM vt0 WHERE (((ROUND(9.70969759E8, x'')) NOT BETWEEN (((x'32e5') ISNULL)) AND (('0.45827717483025343' IN ())))) LIMIT 1214009486 OFFSET -1107243326;SELECT ALL CASE ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN -1.023549224E9 THEN CAST(rt0.c2 AS BLOB) ELSE CAST(rt0.c0 AS BLOB) END, (((0.08805555244680174)IS(rt0.c0)) IN ()), rt0.c4 FROM rt0 WHERE (CASE WHEN ((x'')<<('-2146421648')) THEN (((-838816443)) BETWEEN ((0.8778301154871354)) AND ((0x337c574f))) END); -- 0ms;
SELECT ALL (((rt0.c4)) BETWEEN (('-901424125')) AND (((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) FROM rt0 WHERE ((((NULL)) NOT BETWEEN ((CAST(x'edb5691e' AS NUMERIC))) AND ((NULL)))); -- 0ms;
SELECT (((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END))>((((0.2022245772896153) NOT BETWEEN (NULL) AND (rt0.c3))))) FROM vt0, rt0 WHERE (((((x'') ISNULL)) BETWEEN ((x'' IN ())) AND (((NULL) ISNULL)))) LIMIT 352439446 OFFSET 1382083361; -- 0ms;
SELECT CAST(LIKELY(rt0.c3) AS BLOB) FROM rt0, vt0; -- 0ms;
SELECT ((((x'') NOTNULL)) NOT BETWEEN ((((rt0.c4)) NOT BETWEEN ((x'')) AND ((rt0.c3)))) AND ((vt0.c0 IN (rt0.c1)))) FROM vt0, rt0 NOT INDEXED WHERE (((((((((CAST(x'' AS TEXT))AND(((0.07876587057169138) IS TRUE))))AND(x'f66f' COLLATE RTRIM)))AND('')))OR(((NULL)<=(0.9749328791747143))))); -- 0ms;
SELECT DISTINCT rt0.c0, SUM((rt0.c0 IN ())) OVER (), CAST(CASE rt0.c1  WHEN rt0.c3 THEN x'' END AS REAL) FROM vt0, rt0 WHERE (((('')) BETWEEN ((x'6ce7')) AND ((0.39704297130789656))) COLLATE RTRIM) LIMIT 1890827573; -- 0ms;
SELECT ((((((vt0.c0))<>((rt0.c3))), ((x'') NOTNULL), (- (rt0.c1))))=(((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), (~ (rt0.c1)), ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))), CAST((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS TEXT), NULL COLLATE BINARY FROM rt0, vt0 WHERE (((('2Xo fN')) BETWEEN (((- (NULL)))) AND (((('-1046086601')-(x'')))))) LIMIT -788525777 OFFSET 273410564; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE RTRIM AS TEXT) FROM vt0, rt0 LIMIT 241918812; -- 0ms;
SELECT SUM(vt0.c0) FROM vt0, rt0 WHERE ((NULL COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT ((rt0.c3)%(rt0.c1)) COLLATE BINARY FROM vt0;SELECT rt0.c4, rt0.c0, CASE (((rt0.c4))<=((rt0.c3)))  WHEN ((((((((x'')AND(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN ((rt0.c3)IS NOT(rt0.c0)) THEN ((rt0.c2) NOTNULL) WHEN 0.8167481570380762 THEN vt0.c0 ELSE vt0.c0 COLLATE NOCASE END FROM vt0;SELECT DISTINCT x'' FROM vt0 WHERE ((((('e1)9IB') BETWEEN (NULL) AND (NULL)))LIKE(('\n+' IN ())))); -- 0ms;
SELECT CASE rt0.c4 COLLATE BINARY  WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END THEN CAST(rt0.c1 AS BLOB) ELSE ((rt0.c4)>=(rt0.c0)) END FROM rt0; -- 0ms;
SELECT DISTINCT (((TRIM(rt0.c3, rt0.c2)))=((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((((('0.7720907013105092')AND(rt0.c1)))OR(rt0.c4)))) AND ((0.3525315343288985 COLLATE BINARY))) FROM vt0 LIMIT 1814133050 OFFSET 509056668;SELECT ALL ((CASE vt0.c0  WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END)GLOB(CAST(rt0.c0 AS INTEGER))) FROM rt0 WHERE ((CAST(x'' AS INTEGER) IN (((NULL)LIKE(x'78372f07')))));SELECT TOTAL(GROUP_CONCAT(json_patch(rt0.c0, rt0.c0))) FROM vt0 WHERE (((((NULLIF(x'', x''))AND((+ (0.04858394607033967)))))AND(((0.9712298391444433) NOT BETWEEN (NULL) AND (NULL)))));SELECT ((NULL) NOT BETWEEN (((vt0.c0)*(rt0.c0))) AND (LIKELY(DISTINCT rt0.c1))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((0X7701fad6) BETWEEN (ABS(DISTINCT rt0.c4)) AND (((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT (((rt0.c2, rt0.c0, 0.04858394607033967, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c1)AND(rt0.c4)), rt0.c1, (+ (rt0.c3)), (~ (rt0.c4)), ((rt0.c4)GLOB(rt0.c3)))) AND (((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((((rt0.c3)OR(rt0.c0)))AND(vt0.c0)), (vt0.c0 IN ('-463026207')), MIN(rt0.c3), rt0.c3))), (((- (rt0.c3))) BETWEEN ((+ (rt0.c2))) AND (((0.40157424262870134)LIKE(rt0.c1)))), ((rt0.c3 COLLATE BINARY)<=(((rt0.c0) IS FALSE))) FROM vt0 WHERE ((NOT ((0.8045363208149375 IN ()))));SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((- (rt0.c0))) AND (CAST(rt0.c1 AS REAL))) FROM vt0 LIMIT -2012660987 OFFSET 1208601600;SELECT DISTINCT '' FROM vt0 WHERE (CAST((NOT ('842935564')) AS NUMERIC)) LIMIT -1396145059; -- 0ms;
SELECT HEX(DISTINCT NULL) FROM rt0 GROUP BY ((GLOB(rt0.c1, 0.34609444240821186)) IS FALSE), ((x'') NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND (((rt0.c3) NOT NULL))), CASE WHEN (NOT (rt0.c2)) THEN ((rt0.c1) ISNULL) ELSE TYPEOF(DISTINCT rt0.c3) END, ((((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c2)))/((((vt0.c0, vt0.c0, rt0.c3))=((0X37cfca3e, vt0.c0, rt0.c1))))), CAST(((((rt0.c2)AND(rt0.c3)))OR(rt0.c4)) AS REAL) HAVING ((((((((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN '-1403026362' END)OR(((((rt0.c4)OR('1436262597')))AND(vt0.c0)))))AND(((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))))AND((- (vt0.c0)))))OR(((rt0.c4)>>(0.5668346892751926))));SELECT DISTINCT ((('-832627301' COLLATE NOCASE))!=((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END))), ((((((vt0.c0)>(rt0.c1)))OR(((rt0.c4)IS NOT(rt0.c3)))))OR(((NULL)<<(rt0.c0)))), UNLIKELY(DISTINCT LIKE(rt0.c3, rt0.c4)) FROM vt0, rt0 WHERE (CASE CAST(0.04406781717964736 AS REAL)  WHEN (x'42d6' IN ()) THEN ('-6953902' IN ('ܨgQ涵')) END) UNION ALL SELECT DISTINCT ((NULLIF(DISTINCT rt0.c1, rt0.c4)) IS TRUE), vt0.c0, ((CHANGES())GLOB((rt0.c2 IN ()))) FROM rt0, vt0; -- 0ms;
SELECT NTH_VALUE('-1889726902', ((((((((((rt0.c1)||(vt0.c0)))AND(((0X702722b) BETWEEN (rt0.c4) AND (rt0.c3)))))AND((- (rt0.c1)))))OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))AND(((vt0.c0) IS TRUE)))) OVER ( RANGE '' COLLATE NOCASE PRECEDING EXCLUDE NO OTHERS), COUNT(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END), CASE (((x'')) BETWEEN ((rt0.c0)) AND ((rt0.c3)))  WHEN ((rt0.c1)*(rt0.c0)) THEN json_quote(-848584476) WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt0.c3)) WHEN TOTAL(rt0.c2) THEN ((rt0.c1)+(rt0.c4)) WHEN SUM(rt0.c4) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) WHEN ((rt0.c2)%(rt0.c1)) THEN ((NULL) NOT NULL) END FROM vt0, rt0 WHERE (((CAST(x'' AS REAL)) IS TRUE));SELECT DISTINCT ((~ (rt0.c0)) IN ()) FROM rt0, vt0 WHERE (((((0Xffffffff9042dd8c) NOTNULL))<<(NULL))); -- 0ms;
SELECT ((LIKELY(rt0.c2)) BETWEEN (((rt0.c0)<<(rt0.c1))) AND (rt0.c2)) FROM rt0 WHERE (((((NULL))<((x''))) IN (((0.37160695792148923)>=('ZqJ'))))); -- 0ms;
SELECT DISTINCT (((('141960316')AND(((((((((rt0.c4)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))))OR(AVG(rt0.c3))), CASE WHEN vt0.c0 THEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c3 END WHEN ((rt0.c0)%(rt0.c1)) THEN json(rt0.c1) WHEN CASE NULL  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN x'' WHEN rt0.c1 THEN rt0.c3 END THEN ((rt0.c2)+(-1.32054576E8)) END, CASE WHEN ((vt0.c0)AND(rt0.c0)) THEN ((rt0.c1)&(rt0.c4)) ELSE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) END FROM rt0;SELECT ((((IFNULL(rt0.c2, rt0.c4))AND(CAST(rt0.c2 AS TEXT))))OR(AVG(vt0.c0))), (((((rt0.c2))<((rt0.c0))))>=(rt0.c4 COLLATE BINARY)), ((((((rt0.c1)GLOB(NULL)))AND(CAST(rt0.c3 AS INTEGER))))OR((rt0.c3 IN (vt0.c0, vt0.c0)))) FROM vt0, rt0 WHERE (CAST(((NULL) ISNULL) AS BLOB)); -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM vt0, rt0; -- 0ms;
SELECT ((((CAST(rt0.c1 AS BLOB))AND(((rt0.c0)<<(rt0.c3)))))OR(NULL)), ((((rt0.c0) IS FALSE)) ISNULL), ((0.7930015307307511)AND((((rt0.c1))!=((rt0.c1))))) FROM vt0;SELECT ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)=(NULLIF(rt0.c0, NULL))), CASE (rt0.c2 IN ())  WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) WHEN rt0.c2 THEN CAST(rt0.c4 AS TEXT) WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)) THEN (~ (0.08990812662555492)) END, SUM((((rt0.c0, vt0.c0, rt0.c4, NULL, 0Xffffffffbde829a4)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c3, '314532031', rt0.c4)) AND ((rt0.c4, rt0.c3, 'ዻM', rt0.c0, rt0.c4)))) OVER () FROM vt0, rt0; -- 0ms;
SELECT rt0.c2, x'eb18', (~ (LIKELIHOOD(rt0.c4, 0.4487014984883304))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (AVG(rt0.c4)) AND (MAX(rt0.c3))) FROM vt0;SELECT CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN (((((((('?Xq<B')AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c3) AND (620889390)) END FROM vt0 WHERE (CAST(CAST(0X6ab3559c AS NUMERIC) AS NUMERIC));SELECT ALL CAST(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) FROM rt0 WHERE ((((((NULL IN ()))AND((('')>=(NULL)))))OR(IFNULL(DISTINCT 0.009171193982470571, x'bc61e68886d0')))) GROUP BY CASE WHEN rt0.c3 THEN vt0.c0 END LIMIT -789822526;SELECT (((rt0.c3)) NOT BETWEEN ((0Xffffffffc8e6fee4)) AND ((-444685262))) FROM vt0 WHERE (NULL COLLATE NOCASE);SELECT DISTINCT (((vt0.c0, rt0.c2 COLLATE RTRIM, SUM(rt0.c3)))>(((((0.012169507757008313)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), rt0.c4 COLLATE RTRIM, UNLIKELY(vt0.c0)))) FROM rt0 WHERE ((~ (((0.09759145662218782) BETWEEN (NULL) AND (-9.82294552E8)))));SELECT ALL ((((((((((((SUM(vt0.c0))OR(((x'fc72')IS NOT(rt0.c2)))))OR(GROUP_CONCAT(rt0.c1))))AND(SUM(rt0.c0))))AND(((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c4)))OR(rt0.c4)))OR(vt0.c0)))))OR(((rt0.c1) IS FALSE))))OR(COALESCE(DISTINCT rt0.c0, rt0.c0, rt0.c0, rt0.c3))), (((rt0.c1 COLLATE NOCASE, ((((rt0.c3)AND(0x399ce4cb)))OR(rt0.c2)), rt0.c0))>=((x'de9a', ((rt0.c2) NOT BETWEEN (0.5825099760292098) AND (rt0.c0)), TOTAL(rt0.c1)))), ((rt0.c2 COLLATE RTRIM)>>((((vt0.c0))<=((rt0.c1))))) FROM rt0, vt0 WHERE ((((((((NULL)OR(NULL)))AND(-6.73654007E8))))>=(((('') NOT BETWEEN (x'') AND ('2024940303')))))); -- 0ms;
SELECT ALL CAST(((vt0.c0) NOT NULL) AS NUMERIC) FROM vt0 WHERE ((~ (('RN*Dl7' IN ())))); -- 0ms;
SELECT ALL CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END COLLATE RTRIM COLLATE BINARY FROM vt0;SELECT DISTINCT rt0.c0 FROM rt0, vt0; -- 0ms;
SELECT rt0.c2, ((rt0.c2) NOTNULL), CASE WHEN ((0x6cd92bf3)AND(rt0.c3)) THEN (- (rt0.c3)) END, CAST(rt0.c2 AS INTEGER) COLLATE NOCASE COLLATE BINARY, NULL FROM rt0; -- 0ms;
SELECT ALL CAST('}V4r&/''' AS TEXT), ((rt0.c0)LIKE(vt0.c0)) COLLATE NOCASE, COUNT(((('	+-', rt0.c0, rt0.c2))<=((x'', rt0.c4, rt0.c2)))) OVER () FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((((((rt0.c2)|(rt0.c0)))AND('-1917089796')))AND('-700463382' COLLATE NOCASE)) FROM rt0 WHERE ((~ (((')徺')||(0.23361588198152983))))); -- 0ms;
SELECT ALL ((((rt0.c2) BETWEEN (NULL) AND (rt0.c2)))GLOB('䧤f嫿j\F敎,^')) FROM vt0, rt0 WHERE ((x'' IN ())); -- 0ms;
SELECT ALL (x'785e' IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (+ (vt0.c0)) THEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END ELSE MIN(vt0.c0) END FROM vt0 INNER JOIN rt0 ON ((((((((x'a585')OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(x'')))AND(rt0.c0)))AND(((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)))); -- 0ms;
SELECT ((((NULL)OR(rt0.c2))) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (((vt0.c0)IS NOT(rt0.c2)))), (((rt0.c1)/(rt0.c0)) IN ()), (~ (((rt0.c4) BETWEEN ('-267842147') AND (rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3 IN ()) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c4, rt0.c1, rt0.c4))<>((vt0.c0, rt0.c2, rt0.c1))) COLLATE BINARY FROM rt0, vt0 WHERE (NULL) ORDER BY (- ('TVuk87d&j')) COLLATE BINARY ASC, CASE WHEN ((rt0.c2)+(vt0.c0)) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) WHEN rt0.c0 THEN ((rt0.c2)GLOB(rt0.c2)) WHEN json_type(rt0.c3) THEN rt0.c0 END, (((CAST(-217914572 AS REAL)))<=(((((rt0.c2))>((rt0.c4)))))) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((((((rt0.c0)OR(rt0.c4)))AND(vt0.c0))) NOTNULL) FROM vt0;SELECT ALL CAST(LAST_INSERT_ROWID() AS BLOB), ((((rt0.c4)>=(rt0.c1))) ISNULL), (SUM(rt0.c2) IN (rt0.c0, ((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)))), '-2100774159' COLLATE NOCASE, AVG((((vt0.c0))==((vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))<(rt0.c1 COLLATE BINARY)) FROM vt0 WHERE ('' COLLATE NOCASE) GROUP BY ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (178428733))) ISNULL), (+ (CAST(rt0.c1 AS TEXT))), ((x'') IS TRUE) HAVING CASE ((rt0.c2)>(rt0.c0))  WHEN rt0.c1 THEN ((rt0.c2) IS TRUE) END;SELECT (((((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c4)) AND ((rt0.c1, rt0.c1, vt0.c0)))) IS FALSE) FROM rt0 WHERE (((('-26709254', x'7984', 0.13779870520273074))<>((0.07869838752643998, x'caf6', '1790137756'))) COLLATE BINARY);SELECT NULL, CASE WHEN (~ (rt0.c3)) THEN (((rt0.c1))>((rt0.c3))) END, ((rt0.c3) NOT NULL), CAST(LOWER(DISTINCT rt0.c0) AS REAL), TOTAL((vt0.c0 IN ())) FROM rt0, vt0 WHERE (CAST(CASE '179240934'  WHEN 0X2afb8469 THEN '-1966693024' WHEN x'' THEN 0.432607222315911 WHEN NULL THEN x'5d34' ELSE '-1390725218' END AS TEXT)); -- 0ms;
SELECT CASE AVG(rt0.c1)  WHEN ((rt0.c1)|(NULL)) THEN ((rt0.c0)>=(rt0.c0)) END FROM vt0, rt0 WHERE (CASE WHEN CAST(0.123063069507102 AS BLOB) THEN x'' COLLATE BINARY END); -- 0ms;
SELECT DISTINCT CASE WHEN -1.95754553E8 THEN ((182979572)<<(rt0.c4)) END FROM rt0, vt0 GROUP BY rt0.c1, CASE ((vt0.c0)+(rt0.c0))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN (((rt0.c2, rt0.c2, NULL)) BETWEEN ((rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c0, vt0.c0, rt0.c1))) ELSE rt0.c2 COLLATE RTRIM END, CAST(rt0.c3 AS INTEGER) HAVING CASE (vt0.c0 IN ())  WHEN (~ (rt0.c3)) THEN (rt0.c2 IN ()) END; -- 1ms;
SELECT DISTINCT SUM(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) OVER () FROM rt0 GROUP BY LIKE(((((vt0.c0)AND(rt0.c0)))AND(0Xfffffffffebe5aff)), rt0.c3), CAST('' AS REAL), HEX(DISTINCT (rt0.c4 IN ()));SELECT ALL CAST((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) AS TEXT) FROM vt0;SELECT DISTINCT (((CAST('0.04858394607033967' AS BLOB)))<=((((rt0.c2)=(rt0.c0))))) FROM vt0 WHERE (NULLIF(DISTINCT '-1289830912', '9pJ,''') COLLATE NOCASE);SELECT DISTINCT CAST(vt0.c0 COLLATE RTRIM AS INTEGER) FROM rt0 WHERE (((350391974) IS FALSE) COLLATE BINARY);SELECT DISTINCT ((((CASE '0.752729593714793'  WHEN rt0.c2 THEN rt0.c2 END)OR(CAST(rt0.c0 AS NUMERIC))))AND(((rt0.c3)&(rt0.c2)))) FROM rt0 LIMIT -1980552230 OFFSET -1467750657; -- 0ms;
SELECT DISTINCT ((((rt0.c4)<<(vt0.c0)))<=(((((vt0.c0)AND(x'')))OR(rt0.c3)))) FROM vt0 WHERE (NULL);SELECT DISTINCT rt0.c3 COLLATE NOCASE FROM rt0 LIMIT 681876597; -- 0ms;
SELECT COUNT(*), UPPER(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END), vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c4))<((rt0.c3, rt0.c4, rt0.c4, rt0.c4, rt0.c4)))))>((TRIM(DISTINCT rt0.c0, vt0.c0)))); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c3))) IS FALSE) FROM vt0 WHERE (((((((((CAST('(e{}' AS BLOB))OR(LIKELY(DISTINCT x'3ec6'))))AND(((x'5e2a')LIKE('121979647')))))AND(((x'')LIKE(NULL)))))OR(CASE '-2026942167'  WHEN NULL THEN NULL ELSE 869210889 END))) LIMIT -1419714734 OFFSET 1996618454;SELECT ALL (((((rt0.c4, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c3, rt0.c2)))) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND ((rt0.c4 IN ()))), load_extension('2108199139', CAST(NULL AS NUMERIC)), (((- (x'aed6')))+((NOT (rt0.c1)))) FROM vt0, rt0 WHERE ((~ (((x'a02fb835') IS FALSE))));SELECT ALL (((rt0.c3) BETWEEN (rt0.c3) AND (vt0.c0)) IN ()), rt0.c3, (~ (rt0.c3 COLLATE BINARY)) FROM rt0, vt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c4)))-(((rt0.c2)>=(rt0.c4))))  NULLS LAST, ((rt0.c1 COLLATE RTRIM)||(rt0.c0))  NULLS FIRST; -- 1ms;
SELECT ALL ((3.657743648697309E-4)IS NOT(((vt0.c0)AND(NULL)))), (((rt0.c3)) NOT BETWEEN ((UNLIKELY(DISTINCT rt0.c2))) AND ((CAST(rt0.c2 AS TEXT)))), NTILE(((((rt0.c4) NOTNULL)) NOT BETWEEN ((rt0.c1 IN ())) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) OVER ( RANGE ((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END)AND(((rt0.c2) IS FALSE))))OR('[i')) PRECEDING) FROM rt0;SELECT ALL ABS(rt0.c4 COLLATE NOCASE), COUNT(*), (((rt0.c2)) NOT BETWEEN (((- (vt0.c0)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (rt0.c3 COLLATE RTRIM IN ()) FROM rt0, vt0; -- 0ms;
SELECT ALL COUNT(((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c2))) FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)IS NOT(rt0.c4)); -- 0ms;
SELECT DISTINCT CAST(((rt0.c4) IS FALSE) AS INTEGER), ((COUNT(vt0.c0))%(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), LIKE(CAST(rt0.c0 AS REAL), CASE '1671836298'  WHEN rt0.c4 THEN vt0.c0 END) FROM vt0 WHERE (CASE (x'' IN ())  WHEN (((x'789d', 0.9705303876646414, NULL))>=(('-1894822904', x'', NULL))) THEN ((x'3cd6')>=(x'')) ELSE ((0.7026766250388733) NOTNULL) END);SELECT CAST(AVG(NULL) AS NUMERIC) FROM rt0, vt0 WHERE ((((+ (0.8801234988361027)))||(((0.5727922208755876) BETWEEN (x'0a43') AND (NULL))))) GROUP BY (+ (rt0.c0)) COLLATE NOCASE HAVING (((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 END))>((CAST(rt0.c1 AS INTEGER)))); -- 0ms;
SELECT DISTINCT 0xffffffffa0c742d8 COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((',')LIKE((+ (rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)LIKE(rt0.c4))) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c1 AS NUMERIC))) FROM vt0 WHERE (CAST(CASE '>'  WHEN 0.2510917580812403 THEN x'' WHEN NULL THEN 0X17225018 WHEN NULL THEN '-1467750657' END AS REAL)) GROUP BY ((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)) COLLATE BINARY, CASE CAST(rt0.c3 AS REAL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN json_object(rt0.c2, vt0.c0, rt0.c0, rt0.c0) WHEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c3)) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ABS(DISTINCT rt0.c2) THEN rt0.c4 END, (NOT (((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))) HAVING HEX(((vt0.c0)+(rt0.c3)));SELECT ALL (((((rt0.c1)/(rt0.c0))))==(((rt0.c1 IN ())))), PERCENT_RANK() OVER (), ((CASE rt0.c4  WHEN rt0.c1 THEN vt0.c0 END)IS NOT(rt0.c1)) FROM rt0 UNION SELECT DISTINCT UNLIKELY(rt0.c0) COLLATE NOCASE, ((((((rt0.c4)AND(0.5320762656902525)))AND(rt0.c1)))>((rt0.c4 IN ()))), ((rt0.c3)/(rt0.c4)) COLLATE BINARY FROM rt0;SELECT DISTINCT ((((rt0.c3)<=(rt0.c2)))+(CASE WHEN rt0.c4 THEN vt0.c0 END)) FROM vt0 GROUP BY ((((rt0.c0 IN ()), rt0.c0 COLLATE NOCASE, ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c0 IN (rt0.c4)), CAST(rt0.c4 AS BLOB)))<>((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)), (rt0.c2 IN ()), (+ (rt0.c2)), (vt0.c0 IN ()), ((rt0.c2)>>(rt0.c2))))) LIMIT -1181157097;SELECT ALL (+ (rt0.c2 COLLATE NOCASE)) FROM rt0, vt0; -- 0ms;
SELECT CAST(((rt0.c0) NOT NULL) AS TEXT) FROM vt0, rt0; -- 0ms;
SELECT x'047b' FROM vt0, rt0; -- 0ms;
SELECT 0.21097536252727456, (rt0.c0 IN ()), (((x'705d'))<=((MIN(rt0.c2)))) FROM vt0 WHERE (((((CAST(x'' AS BLOB))OR(CASE WHEN '-1087591238' THEN '' WHEN NULL THEN '1922326908' WHEN NULL THEN 0.9115436903295795 ELSE NULL END)))OR((((x'')) BETWEEN (('1174707954')) AND ((NULL))))));SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (((('262494796', CAST('0.7992706445421671' AS REAL), CASE x''  WHEN NULL THEN x'' ELSE 0Xffffffffb80c774f END))<(((('-542915555') BETWEEN (NULL) AND (NULL)), CASE 'Q+h5W'  WHEN 1591000690 THEN 'FA' END, x'' COLLATE BINARY)))) GROUP BY ((((rt0.c3 COLLATE BINARY)AND(((rt0.c4)<=(rt0.c0)))))OR(((vt0.c0)/(rt0.c3)))), CAST(((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)) AS INTEGER), ((((CAST(rt0.c2 AS INTEGER))AND(((rt0.c3) ISNULL))))OR('0.014976871181255458')); -- 1ms;
SELECT DISTINCT COALESCE(((rt0.c2)+(vt0.c0)), ((rt0.c3)>(rt0.c0))) FROM vt0;SELECT DISTINCT NULLIF(x'ba68', (((rt0.c0))=(('!')))) FROM rt0, vt0; -- 0ms;
SELECT UPPER(STRFTIME(vt0.c0, vt0.c0, rt0.c2)), ((((rt0.c1)<=(rt0.c3))) IS TRUE), AVG(rt0.c4) FROM vt0, rt0 WHERE (x''); -- 0ms;
SELECT (NOT (rt0.c1 COLLATE NOCASE)) FROM vt0 WHERE ((+ ((('96') NOT BETWEEN ('') AND (NULL)))));SELECT ALL ((((((((((('')) BETWEEN ((vt0.c0)) AND ((rt0.c1))))OR(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))))AND(((rt0.c0)OR(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)))))OR(5.55925933E8)), COUNT(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))), TOTAL(NULL) FROM vt0, rt0 WHERE ((('481765076' COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)))OR(((rt0.c3) NOTNULL))))OR(COUNT(rt0.c0))), rt0.c1, (((- (rt0.c2)))||(((rt0.c3) NOT NULL))) FROM vt0, rt0 WHERE ((((('-972853132') BETWEEN ('') AND (0.2805063150895387)))<=((('973995745') IS FALSE)))); -- 0ms;
SELECT DISTINCT (((rt0.c3, rt0.c3, vt0.c0)) BETWEEN (((rt0.c3 IN ()), CAST(rt0.c0 AS TEXT), (((rt0.c4, vt0.c0, rt0.c0, 0.7123404514951882, rt0.c2))>=((rt0.c2, vt0.c0, rt0.c2, vt0.c0, rt0.c1))))) AND ((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)), (+ (rt0.c1)), ((rt0.c3) IS TRUE)))) FROM rt0 WHERE (HEX(DISTINCT '141960316' COLLATE RTRIM));SELECT DISTINCT ((((vt0.c0)|(rt0.c4)))%((~ (rt0.c4)))) FROM vt0, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((((rt0.c3)>>(-1402538331)))OR(((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))))OR((+ (rt0.c0)))), ((((('-1741413536', NULL, rt0.c1))<((rt0.c2, NULL, rt0.c2))))%((rt0.c4 IN ()))), rt0.c0 FROM vt0;SELECT vt0.c0, ((((((((((rt0.c2)OR(rt0.c3)))AND(vt0.c0)))AND(0X70b3bd35)))OR(rt0.c0))) NOT NULL), ((((rt0.c1) NOT NULL))LIKE(((rt0.c1)<<(rt0.c1)))) FROM vt0 WHERE (CASE CASE NULL  WHEN 672765875 THEN '-1993526944' END  WHEN (- (0xffffffffc3930311)) THEN x'' COLLATE RTRIM END);SELECT ((((CAST(rt0.c4 AS REAL))OR(CAST(rt0.c3 AS REAL))))OR(COALESCE(rt0.c3, 964296164))) FROM rt0; -- 0ms;
SELECT CAST(((rt0.c4) BETWEEN ('躺ⓗ') AND (vt0.c0)) AS REAL) FROM rt0 WHERE ((('-901424125' COLLATE BINARY)IS((((0.43921371592521896))!=((NULL))))));SELECT DISTINCT CASE vt0.c0 COLLATE NOCASE  WHEN (rt0.c2 IN ()) THEN TYPEOF(vt0.c0) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((NULL)=(rt0.c0)) WHEN rt0.c2 THEN ((rt0.c4)LIKE(vt0.c0)) WHEN (('') BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((rt0.c3)/(rt0.c1)) WHEN ((rt0.c1)-(rt0.c4)) THEN MAX(rt0.c1) END, LENGTH(CAST(rt0.c0 AS REAL)), (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((CAST(NULL AS BLOB), LOWER(DISTINCT rt0.c3), (((rt0.c3)) NOT BETWEEN (('1905388226')) AND ((rt0.c0))))) AND ((CASE 0.9386783921245906  WHEN rt0.c2 THEN rt0.c4 END, COALESCE(DISTINCT rt0.c3, vt0.c0), rt0.c1 COLLATE BINARY))), COUNT(*) OVER (), LAG(UNLIKELY((rt0.c3 IN ())), (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))&((rt0.c4 IN ()))), TRIM(DISTINCT ((((rt0.c2)AND(rt0.c1)))OR(x'')))) OVER () FROM rt0;SELECT DISTINCT rt0.c2 FROM vt0, rt0; -- 0ms;
SELECT ALL FIRST_VALUE(CASE 'q[	UEZ'  WHEN x'' THEN rt0.c4 END) OVER ( ORDER BY (+ (rt0.c1)) COLLATE BINARY, (((((rt0.c3)OR(rt0.c3)))OR(vt0.c0)) IN ())  NULLS FIRST), FIRST_VALUE((((rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((NULL))), (- (rt0.c3)), rt0.c4)) AND ((((rt0.c0) BETWEEN ('108223903') AND (rt0.c0)), rt0.c1 COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (0xffffffff9fce59db) AND (vt0.c0)))))) OVER (), 0x34a92c01 FROM vt0, rt0; -- 4ms;
SELECT ALL (((rt0.c3, rt0.c4, rt0.c0)) NOT BETWEEN ((MAX(vt0.c0), INSTR(rt0.c1, rt0.c2), ('402883074' IN ()))) AND ((CAST(rt0.c3 AS BLOB), rt0.c3, rt0.c4 COLLATE NOCASE))), (((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((((((rt0.c3)OR(rt0.c1)))AND(vt0.c0)), NULL, ((rt0.c1)/(rt0.c2)))) AND ((CASE vt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END, AVG(rt0.c2), vt0.c0))), SUM(((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)))OR(vt0.c0))) OVER () FROM rt0, vt0 ORDER BY (+ ((rt0.c3 IN ()))) DESC, CAST(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END AS REAL)  NULLS FIRST LIMIT 1710828832; -- 1ms;
SELECT MAX(0.14700417679196864) FROM rt0, vt0 NOT INDEXED WHERE ((((0.8774688963745679)) NOT BETWEEN ((((0.3666923171460894)<<('-1928175351')))) AND ((((((NULL)OR('Pi*M黲')))OR(0.2842705956580266)))))); -- 0ms;
SELECT DISTINCT SUM(rt0.c0) FROM rt0; -- 0ms;
SELECT NULL, ((rt0.c2 COLLATE RTRIM) BETWEEN (((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c4) NOTNULL))), rt0.c2 COLLATE NOCASE FROM vt0;SELECT ALL ((((((vt0.c0)OR(rt0.c4)))OR(rt0.c3))) ISNULL) FROM rt0, vt0 WHERE (CAST(((x'') NOT BETWEEN ('-12969514') AND (0.9686582346691794)) AS NUMERIC)); -- 0ms;
SELECT ALL LEAD(rt0.c4, vt0.c0, ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(((vt0.c0)GLOB(rt0.c4))))) OVER (), (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (((rt0.c1)!=(rt0.c2)), (NOT (vt0.c0)))), SUM((((vt0.c0, rt0.c3, rt0.c3))>((NULL, rt0.c0, rt0.c0)))) FROM rt0, vt0 WHERE ((+ (('-1329958381' IN ())))); -- 0ms;
SELECT DISTINCT (((rt0.c1, rt0.c0, rt0.c4)) NOT BETWEEN (((rt0.c0 IN ()), CAST(rt0.c1 AS REAL), CASE WHEN 'D?RtAG,N' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END)) AND ((json_patch(vt0.c0, rt0.c3), (rt0.c0 IN ()), COUNT(rt0.c1)))), CASE (('-1230793531') NOT BETWEEN ('-1034796793') AND (rt0.c2))  WHEN TRIM(DISTINCT rt0.c4) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END END, ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))+(((rt0.c3)*(0.753325918859216)))), ((((((rt0.c1)==(rt0.c1)))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))), CASE WHEN ((rt0.c1)&(rt0.c0)) THEN LIKE(rt0.c3, rt0.c4) ELSE (- (rt0.c4)) END FROM rt0 LIMIT -1403026362 OFFSET -1734080503;SELECT DISTINCT LEAD((- (0.1853887557540972)), ((CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)>(UNLIKELY(DISTINCT rt0.c3))), ((vt0.c0 COLLATE BINARY)GLOB(((rt0.c3) NOTNULL)))) OVER ( GROUPS BETWEEN  CURRENT ROW AND (+ (((rt0.c3)>=(rt0.c0)))) FOLLOWING) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT (NOT ((((rt0.c0))>=((x''))))) FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)%(((rt0.c2)+(rt0.c1)))) WHERE (0.0457707337946075); -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0;SELECT MAX(((rt0.c0)>>(rt0.c2))), ((NULL)<(CAST(rt0.c4 AS NUMERIC))), (+ ((~ (rt0.c0)))), CASE CAST(rt0.c2 AS REAL)  WHEN (- (rt0.c0)) THEN (rt0.c1 IN ()) ELSE (rt0.c1 IN ()) END, COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(0.8339992975135939 AS REAL) AS REAL)) LIMIT -1991259829; -- 0ms;
SELECT TOTAL(((vt0.c0)&(rt0.c1))) FROM rt0 WHERE (json_remove(((NULL) NOT NULL), TRIM(NULL)));SELECT DISTINCT '703428257' FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3) IS TRUE))*(((vt0.c0)&(rt0.c0)))) FROM rt0, vt0 LIMIT -428195667 OFFSET -133359267; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (vt0.c0)) THEN CAST(rt0.c4 AS TEXT) ELSE ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) END, ((((rt0.c2) NOT NULL)) IS FALSE), ((COUNT(*))AND(TRIM(rt0.c2, rt0.c2))), MIN(CAST(rt0.c0 AS INTEGER)), (NOT (((((rt0.c2)OR(rt0.c2)))OR(NULL)))) FROM rt0 WHERE (((0.4646969070119039) IS TRUE)) LIMIT 485304616 OFFSET -26709254;SELECT DISTINCT LAST_INSERT_ROWID() FROM rt0 GROUP BY CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c3) IS TRUE) WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c3)OR(rt0.c4)) WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c1)+(rt0.c0)) END, rt0.c0, (((+ (rt0.c3)))||(((vt0.c0)IS NOT(rt0.c4)))) ORDER BY ((((CASE WHEN x'bd91' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 END)OR((NOT ('-721350892')))))OR(rt0.c0 COLLATE BINARY)) ASC;SELECT (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CASE rt0.c1  WHEN vt0.c0 THEN 0.9244107050933793 ELSE vt0.c0 END))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT SUM(((((rt0.c2)AND(rt0.c0)))OR(vt0.c0))) OVER (), ((rt0.c1) NOTNULL), ((json_quote(rt0.c0))LIKE(MIN(vt0.c0))) FROM vt0 WHERE ((((x'')) BETWEEN ((x'2219')) AND ((x'06e1'))) COLLATE NOCASE) GROUP BY CASE WHEN 0X76be24d7 THEN (rt0.c4 IN (rt0.c0)) WHEN ((x'')<(rt0.c2)) THEN NULLIF(rt0.c0, rt0.c2) WHEN (NOT (rt0.c2)) THEN (rt0.c0 IN ()) WHEN ((((0.1472061473353139)AND(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c2)LIKE(x'')) WHEN ((rt0.c2)%(vt0.c0)) THEN ((rt0.c4)GLOB(vt0.c0)) ELSE (- (rt0.c2)) END;SELECT ABS((rt0.c4 IN ())) FROM rt0, vt0 WHERE (((((-624831443)>=(0.7026732508748731))) NOT BETWEEN ('589054723') AND (CAST(0Xffffffffbea33fde AS BLOB)))) GROUP BY (((rt0.c4 IN ())) NOT BETWEEN (NULL) AND (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))); -- 1ms;
SELECT TRIM(DISTINCT CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END, ((rt0.c1) NOT BETWEEN (1.880333159E9) AND (rt0.c3))) FROM vt0 WHERE ((NOT (((x'67ac')=('-1763982819'))))) ORDER BY (NULL IN ())  NULLS LAST;SELECT DISTINCT CASE GROUP_CONCAT(rt0.c4)  WHEN ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c3)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)) END FROM vt0, rt0 WHERE ((+ (CASE 'ifx!'  WHEN '' THEN x'' END))); -- 0ms;
SELECT (((rt0.c2 IN (vt0.c0))) ISNULL) FROM vt0, rt0 WHERE ((NOT ((('')%('8b'))))); -- 0ms;
SELECT DISTINCT CASE rt0.c4 COLLATE RTRIM  WHEN (+ (NULL)) THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END WHEN ((rt0.c4)%(vt0.c0)) THEN ((vt0.c0)>>(-1.467750657E9)) WHEN NULL THEN ((rt0.c2)LIKE(rt0.c3)) WHEN CAST(rt0.c4 AS BLOB) THEN 0xd001b5b WHEN rt0.c1 THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 END ELSE (('.cF悿LxAJs')*(rt0.c1)) END, TOTAL(MIN(((rt0.c1)>(vt0.c0)))), 'pF' FROM vt0, rt0 LIMIT -152487274;SELECT DISTINCT ((rt0.c3)+(rt0.c2)) COLLATE RTRIM FROM vt0 WHERE (0.9684078512011425 COLLATE NOCASE);SELECT ALL -51539499 FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((DATETIME(rt0.c1, rt0.c3, rt0.c4)) BETWEEN (((rt0.c1)GLOB(rt0.c4))) AND ((rt0.c1 IN ()))) FROM vt0;SELECT ALL (((vt0.c0)) BETWEEN ((LOWER(DISTINCT rt0.c1))) AND ((((rt0.c0)-(vt0.c0))))) FROM rt0, vt0 WHERE ((((((x'59e0')OR('')))OR('-607535413')) IN ())); -- 0ms;
SELECT DISTINCT CASE CAST('' AS BLOB)  WHEN UPPER(rt0.c3) THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END ELSE (rt0.c4 IN ()) END, CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 END COLLATE NOCASE, COUNT(CAST(rt0.c4 AS NUMERIC)) OVER (), (((- (rt0.c0)))&((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))), (((rt0.c3)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((rt0.c3 COLLATE BINARY))) FROM vt0 WHERE (((((((((((0.8607490037007175)OR(x'f21a')))OR(NULL)))AND(NULL)))AND('!')))<<('732435111')));SELECT DISTINCT ((((vt0.c0)IS NOT(rt0.c3)))|((rt0.c0 IN (rt0.c4, rt0.c0)))) FROM vt0, rt0 WHERE (CAST((NULL IN ()) AS NUMERIC)) ORDER BY (NOT (rt0.c2)); -- 0ms;
SELECT (- (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))), MIN((vt0.c0 IN ()), ((-1.207142577E9) BETWEEN (rt0.c0) AND (rt0.c4))), NULL FROM rt0, vt0 GROUP BY rt0.c2, x'', ((((((((((((rt0.c4)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c0 COLLATE NOCASE)))OR(rt0.c1 COLLATE BINARY)); -- 1ms;
SELECT DISTINCT ((~ (rt0.c0)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT ((((vt0.c0) IS FALSE))<>(((rt0.c3)*(rt0.c0)))) FROM rt0;SELECT DISTINCT CAST((NOT (vt0.c0)) AS TEXT) FROM vt0 WHERE (CAST((('fYQ\rQ') NOT BETWEEN (-848584476) AND (x'')) AS TEXT)); -- 0ms;
SELECT rt0.c0 FROM vt0, rt0 WHERE (((CAST(NULL AS INTEGER)) NOT BETWEEN ((-9.99519317E8 IN ())) AND ((('') NOT BETWEEN ('1269908725') AND (0.1665254783823531))))) GROUP BY CASE WHEN '	+-' THEN rt0.c3 COLLATE BINARY WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c2)&(vt0.c0)) WHEN ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c1)) THEN CHANGES() END HAVING ((((rt0.c2, rt0.c3, rt0.c4)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((vt0.c0, rt0.c0, rt0.c2))) IN ()); -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c1 AS TEXT)) OVER () FROM vt0 WHERE (2.024940303E9) LIMIT 1992172759;SELECT ALL -1597553960 FROM rt0, vt0 WHERE (CASE WHEN ((x'41f4')<=(0X30e712a0)) THEN (('v''f魧?8b䓙') NOT BETWEEN (0.19139301843885204) AND ('386331600')) END); -- 0ms;
SELECT ((((rt0.c3)==(vt0.c0)))+(((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c4)))) FROM rt0 WHERE (0.7123404514951882);SELECT ALL (((rt0.c3)) BETWEEN ((CASE WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c0 END)) AND ((rt0.c1))), TOTAL(rt0.c4), (- (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))) FROM rt0 WHERE (((CASE WHEN 0.6412768506848469 THEN '62' WHEN 193707730 THEN 0.4951319456722043 WHEN 0.4216275966245201 THEN 0X1625bdc2 ELSE '' END) NOT NULL));SELECT DISTINCT (+ (((vt0.c0)>=(rt0.c3)))), 0.16156339165225952, (((- (vt0.c0)))*((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0)%(rt0.c1)))) FROM rt0 ORDER BY (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c4))))/(((rt0.c3)<<(rt0.c0))));SELECT ((rt0.c3 COLLATE RTRIM) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), CAST(((rt0.c0) NOT NULL) AS BLOB), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))*((NOT (x'')))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)), CAST(rt0.c0 AS INTEGER)) FROM vt0 WHERE (((-2.146421648E9 IN ()) IN ()));SELECT SUM((- (rt0.c3))) FROM rt0, vt0; -- 0ms;
SELECT LAG((((rt0.c1 IN ())) NOT BETWEEN (((rt0.c3) NOT BETWEEN (x'') AND (vt0.c0))) AND (rt0.c4)), ((((((rt0.c0)=(rt0.c0)))OR(((rt0.c0) ISNULL))))OR((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c1))))), (~ (((rt0.c4)IS(rt0.c4))))) OVER (), LAST_VALUE(((((rt0.c4)IS NOT(vt0.c0)))=((~ (rt0.c4))))) OVER ( GROUPS  UNBOUNDED PRECEDING), AVG(rt0.c0) FROM rt0, vt0 WHERE (CAST(((x'f135')IS(NULL)) AS NUMERIC)) GROUP BY UNLIKELY(DISTINCT SQLITE_COMPILEOPTION_USED(rt0.c3)), ((('-1107243326' IN (x'', rt0.c3))) NOT BETWEEN (((0Xffffffffea5dee52) BETWEEN (rt0.c2) AND (vt0.c0))) AND (((rt0.c3)%(rt0.c0)))), ((((rt0.c3)>>(NULL)))LIKE(((rt0.c2)>>(vt0.c0)))) HAVING (((((0.40085981152947703)>(rt0.c4))))!=((((rt0.c2) NOTNULL)))); -- 1ms;
SELECT ALL ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN (((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c1))) AND (UPPER(vt0.c0))), vt0.c0, (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0xfffffffff9226ad8))), (~ (CAST(rt0.c4 AS INTEGER))), (rt0.c4 COLLATE RTRIM IN ()) FROM rt0, vt0 WHERE ((~ ((((x'', '-611905717', -889598412))<=((x'1bb1', NULL, -1928175351)))))); -- 0ms;
SELECT rt0.c4 FROM vt0 WHERE (((NULL) IS TRUE) COLLATE NOCASE);SELECT DISTINCT RANK() OVER () FROM rt0, vt0 WHERE ((('0.07876587057169138') BETWEEN (0.532164257099068) AND (x'd68f')) COLLATE NOCASE); -- 0ms;
SELECT LAST_VALUE(((('-1626285013')||(rt0.c4)) IN (((((rt0.c4)OR(rt0.c1)))OR(vt0.c0))))) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c3)>=(rt0.c4)))OR((rt0.c1 IN ()))))OR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CAST((('-2146421648')OR(x'1a63')) AS TEXT));SELECT (((('1495039906')<(rt0.c1)))<=(((rt0.c0)<(rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((LOWER(vt0.c0)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))) AND (((rt0.c0)%(rt0.c0)))) FROM rt0 WHERE (CAST(CASE 0.9837528915814979  WHEN '1992172759' THEN NULL END AS NUMERIC));SELECT ((GLOB(vt0.c0, vt0.c0))IS NOT(rt0.c2 COLLATE NOCASE)), SUM(((rt0.c4)-(rt0.c2))), 0.5057757962641228 FROM vt0, rt0; -- 0ms;
SELECT ALL ((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)) COLLATE NOCASE FROM rt0, vt0 WHERE (((json_remove(-1273009306, -1.817322175E9))OR(CASE 0.670720875434489  WHEN NULL THEN x'' ELSE 8.82292828E8 END)));SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN (rt0.c0) AND (rt0.c3 COLLATE RTRIM)), ((((x'bb7d') BETWEEN (rt0.c4) AND (rt0.c2))) NOT BETWEEN (MIN(rt0.c2)) AND (NULL)), (((rt0.c4)<<(vt0.c0)) IN ()) FROM rt0, vt0 WHERE (((((('-1506810957')) BETWEEN ((x'')) AND ((0.5934741175703939))))<<(((0xe88c5e8) NOT BETWEEN ('-924385564') AND ('cz],m,csb'))))); -- 0ms;
SELECT ALL ('' IN ((('-2019136104') NOT NULL))) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN SQLITE_COMPILEOPTION_GET(rt0.c1) THEN (('0.45566289394881765') BETWEEN (x'') AND (rt0.c4)) ELSE (((rt0.c1))=((rt0.c2))) END WHERE ((('-1893933676')>(NULL)) COLLATE RTRIM) GROUP BY ((((((rt0.c3)AND(vt0.c0)))OR(rt0.c3)))<=(((rt0.c2)<(0.976014266173702)))); -- 1ms;
SELECT DISTINCT (((+ (rt0.c3))) BETWEEN (((((rt0.c3)OR(rt0.c0)))AND(rt0.c1))) AND (((rt0.c2)+(rt0.c4)))) FROM vt0, rt0 WHERE (CASE CAST(NULL AS INTEGER)  WHEN CASE WHEN 0.5693514301510908 THEN 'Dx)O' END THEN CAST(NULL AS BLOB) WHEN ((0Xffffffffcdc4ab5c) IS TRUE) THEN (~ ('|.,HhW')) WHEN -1649289484 THEN ((((0.6686315429943377)OR('\rT{/MS2')))AND(x'956c')) ELSE (('') NOT BETWEEN (0.13275920673474262) AND (NULL)) END); -- 0ms;
SELECT ALL (((rt0.c3)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) AND ((CASE WHEN '-1107243326' THEN rt0.c4 ELSE vt0.c0 END))), 0.06606597070111564, (rt0.c2 IN ()) FROM vt0 WHERE (((CASE NULL  WHEN 0Xffffffffa55dc08f THEN 'M1鎑gj4C' ELSE '876720736' END)>(((((-2.67842147E8)AND(0.9551854640775398)))AND('(\nh)yo'))))) GROUP BY ((rt0.c3)%(rt0.c0 COLLATE NOCASE)) HAVING ((TIME(rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c0)) BETWEEN (((rt0.c1) NOTNULL)) AND ((~ (rt0.c1))));SELECT ALL ((CAST(rt0.c1 AS INTEGER)) BETWEEN (LIKELIHOOD(DISTINCT rt0.c2, 0.6311753898020646)) AND (rt0.c2)) FROM rt0, vt0 WHERE (CAST(x'' AS INTEGER)) LIMIT 1620848312; -- 0ms;
SELECT DISTINCT ((x'')AND(rt0.c2)) FROM vt0, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT x'a1ab' FROM rt0, vt0 WHERE (CAST((NULL IN ()) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((rt0.c1)AND(vt0.c0 COLLATE BINARY)))OR((rt0.c3 IN (rt0.c2, rt0.c1)))) FROM vt0;SELECT DISTINCT LEAD((((((rt0.c2, rt0.c3, vt0.c0))>=((0.5190079954501776, '', rt0.c3))))=(((rt0.c3) ISNULL))), ((((rt0.c2)>(rt0.c3))) ISNULL), (- ('-673654007'))) OVER () FROM vt0, rt0 WHERE (((((TRIM(NULL, '￿bPascuD'))AND(('' IN ()))))AND(LIKELY(NULL)))); -- 0ms;
SELECT ALL 'Pf敇' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(-26709254 AS INTEGER)) BETWEEN (rt0.c4 COLLATE NOCASE) AND ((('-1085389974') BETWEEN ('s⊽X-縴_6') AND (rt0.c0)))) FROM rt0, vt0 WHERE (CASE WHEN ((x'')IS(0X2cf25c40)) THEN (('')GLOB(0xffffffffe466c7e1)) END) ORDER BY ((((rt0.c1) ISNULL))-((rt0.c3 IN ())))  NULLS LAST LIMIT 1495039906; -- 0ms;
SELECT DISTINCT ((rt0.c4)+(TRIM(DISTINCT rt0.c0, rt0.c1))), (('0.9703809069422304')<<((~ (rt0.c4)))), ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END) NOTNULL) FROM vt0 WHERE (((((x'')OR('%m3')))OR('%epXMUtQ䥩')) COLLATE BINARY) GROUP BY (((rt0.c1))<>((rt0.c3))) COLLATE BINARY HAVING ((((rt0.c2) NOT NULL)) NOTNULL);SELECT DISTINCT ((rt0.c4)IS(CASE WHEN '' THEN x'' END)) FROM vt0 NOT INDEXED;SELECT RANK() OVER () FROM vt0, rt0 LIMIT 310303909; -- 5ms;
SELECT DISTINCT ((((rt0.c2 COLLATE RTRIM)OR(((rt0.c3) NOT NULL))))OR(((rt0.c1) NOTNULL))) FROM rt0, vt0; -- 0ms;
SELECT ALL ((('䉹䫂')) BETWEEN ((vt0.c0)) AND (((((vt0.c0, rt0.c2, vt0.c0))<>((rt0.c3, rt0.c1, rt0.c1)))))), ((((rt0.c2)||(rt0.c1)))+(rt0.c1 COLLATE RTRIM)), ((((((((MAX(vt0.c0))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))))AND((((rt0.c1))<((rt0.c2))))))AND(rt0.c3 COLLATE BINARY)))AND(((rt0.c4) IS TRUE))) FROM rt0;SELECT DISTINCT GROUP_CONCAT(('' IN ())) COLLATE NOCASE FROM rt0 WHERE (((((- (0.6647431261763407))))<(((('-1036148821') NOT NULL))))); -- 1ms;
SELECT DISTINCT ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE RTRIM FROM vt0, rt0 WHERE (CASE (('MGBNq')>=('1023548742'))  WHEN ((((NULL)AND('-2146421648')))AND(NULL)) THEN 0xffffffffbba135b4 END) LIMIT -3474604; -- 0ms;
SELECT DISTINCT ((LOWER(DISTINCT rt0.c4))LIKE(rt0.c0 COLLATE RTRIM)), rt0.c0, (rt0.c0 COLLATE NOCASE IN ()), 'H', SUM(COUNT(*)) FROM vt0, rt0;SELECT DISTINCT (vt0.c0 IN ()) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(rt0.c4 AS BLOB) THEN IFNULL(DISTINCT rt0.c3, rt0.c3) ELSE UPPER('') END FROM vt0, rt0 LIMIT -79783839; -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN x'' END) COLLATE NOCASE FROM vt0 WHERE (((NULL COLLATE BINARY) BETWEEN (CASE WHEN 49639254 THEN NULL END) AND (CASE WHEN NULL THEN -1095648929 ELSE NULL END)));SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>(CASE rt0.c1  WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE 0.6440712325528128 END)), (((((rt0.c1) NOT NULL)))!=((CAST(rt0.c1 AS INTEGER)))), (NOT (LIKELY(DISTINCT rt0.c4))) FROM rt0 WHERE (CAST(CAST(NULL AS NUMERIC) AS REAL));SELECT (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((0.1562223868917788))) COLLATE NOCASE, ((((((((rt0.c2)OR(rt0.c4)))OR(0.5421782824764833)))OR(rt0.c1)))OR(rt0.c3)) COLLATE RTRIM, ((CAST(rt0.c4 AS NUMERIC))OR(rt0.c0)) FROM rt0, vt0 WHERE (((CAST(x'' AS INTEGER)) BETWEEN (((1216565946) IS TRUE)) AND (0.8298118078435837 COLLATE NOCASE))) ORDER BY (NOT (SUBSTR(rt0.c3, rt0.c4))) ASC; -- 0ms;
SELECT ALL (NOT (((x'') BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0, rt0 WHERE ((((((((((('QYdf')<(x'')))OR((NOT (1.880333159E9)))))OR((('18905266') NOT BETWEEN (0.4741645509028709) AND (0.45566289394881765)))))AND('0.8778301154871354')))OR((('-267842147') BETWEEN ('-1626285013') AND ('-889598412'))))); -- 1ms;
SELECT ALL (((rt0.c3)AND(0.4482316615914047)) IN (rt0.c1 COLLATE BINARY)) FROM rt0 WHERE (CAST(1.880333159E9 AS BLOB) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE WHEN AVG(rt0.c2) THEN AVG(rt0.c1) END, rt0.c2, ((((((rt0.c3)OR(vt0.c0)))AND(vt0.c0))) IS TRUE) FROM rt0 WHERE (((0.7693887421638052 COLLATE NOCASE)IS(NULL COLLATE BINARY))) ORDER BY NULL DESC  NULLS FIRST;SELECT DISTINCT ((rt0.c3)<<(LIKELIHOOD(DISTINCT rt0.c1, 0.03031813642445902))) FROM rt0 UNION ALL SELECT DISTINCT CAST(x'' AS TEXT) FROM rt0 WHERE ((NOT (CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT AVG(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0, rt0; -- 0ms;
SELECT ALL COUNT(CAST(rt0.c0 AS NUMERIC)) FROM vt0;SELECT DISTINCT GROUP_CONCAT((+ (rt0.c2)) COLLATE RTRIM) OVER () FROM rt0 WHERE (CAST(0.7775482058473643 AS REAL) COLLATE RTRIM) LIMIT -1731823367; -- 0ms;
SELECT ALL COUNT(((rt0.c2)AND(rt0.c2))) FROM rt0, vt0 WHERE ((PRINTF('1483342819') IN ())) GROUP BY CAST(rt0.c1 AS REAL) COLLATE RTRIM, ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE), (rt0.c2 IN (rtreenode(rt0.c4, vt0.c0), (vt0.c0 IN (rt0.c4)))); -- 0ms;
SELECT DISTINCT (((CAST(rt0.c1 AS REAL), rt0.c3, SUM(rt0.c0)))=(((NOT (rt0.c2)), NULL, (- (rt0.c4))))), CAST(vt0.c0 AS REAL) COLLATE NOCASE, ((0.7922257630032552)GLOB(CAST(vt0.c0 AS REAL))) FROM rt0 WHERE (CAST(CASE '1508880534'  WHEN 0.7094494969132125 THEN 0.2822865204370081 ELSE x'' END AS BLOB));SELECT DISTINCT ((MAX(vt0.c0)) BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c4)LIKE(rt0.c2)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c4)>(rt0.c3))), (((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c3)) IN ()), TOTAL((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))), UNLIKELY(DISTINCT ((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c0))), ((((vt0.c0)>=(rt0.c3)))OR(rt0.c0 COLLATE NOCASE)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((('NCWbꀃg*ᄸd' COLLATE RTRIM)AND(CAST(rt0.c1 AS INTEGER))))OR(rt0.c3)) FROM vt0 WHERE (((((0x2122c1ad)>(2.62494796E8)))LIKE(CASE x'2ffd'  WHEN NULL THEN '-673654007' ELSE x'' END))) LIMIT 1121309636;SELECT DISTINCT ((((((rt0.c3)LIKE(rt0.c0)))OR(((rt0.c2)&(rt0.c2)))))OR(((((((((rt0.c3)AND(rt0.c3)))AND('fNRF絘}')))OR(rt0.c0)))OR(rt0.c3)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((rt0.c0))>((vt0.c0))))<(rt0.c4)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((COUNT(*)) ISNULL), -596196212, '0.8167481570380762' FROM rt0; -- 1ms;
SELECT rt0.c0 FROM rt0, vt0; -- 0ms;
SELECT (((CAST(rt0.c2 AS BLOB), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c1 COLLATE NOCASE))<=(((+ (rt0.c4)), CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c1) ISNULL)))) FROM vt0 GROUP BY (((~ (rt0.c1))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (rt0.c3))));SELECT ALL CASE WHEN ((vt0.c0)<<(rt0.c2)) THEN ((rt0.c4)*(rt0.c2)) ELSE ((rt0.c2)<=(rt0.c1)) END, (((~ (rt0.c2)))IS(CASE x''  WHEN rt0.c4 THEN 0.16311681356733876 WHEN '' THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 END)), (((rt0.c2)!=(rt0.c2)) IN ((rt0.c3 IN ()))) FROM rt0 WHERE (((MIN(-1.207142577E9, 0.7180052106077986))*(TYPEOF(-7.00463382E8))));SELECT ALL (((rt0.c0 COLLATE NOCASE, ((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)), CAST(rt0.c4 AS BLOB)))<((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), (NOT (rt0.c4)), CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c1)&(vt0.c0))  WHEN (rt0.c0 IN ()) THEN CASE WHEN x'' THEN rt0.c1 ELSE vt0.c0 END END FROM rt0 WHERE ((NOT (NULL)) COLLATE RTRIM);SELECT ((((NULL)AND(((((rt0.c4)AND(vt0.c0)))OR(rt0.c3)))))AND(NULLIF(DISTINCT rt0.c1, rt0.c4))), (NOT (rt0.c2)), ((((rt0.c0) ISNULL)) BETWEEN (COUNT(*)) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE 'fh' END)) FROM vt0, rt0; -- 0ms;
SELECT (('-1864101134' COLLATE NOCASE) NOTNULL) FROM rt0, vt0 WHERE (((((((NULL)OR(0.2411444909655247)))OR(NULL))) NOTNULL)); -- 0ms;
SELECT ALL NULL, rt0.c3, ((((rt0.c1)>=(vt0.c0)))>=(rt0.c2)) FROM rt0 WHERE ((- ((+ ('-1817322175')))));SELECT PERCENT_RANK() OVER (), ((((CAST(rt0.c2 AS NUMERIC))AND(CAST(vt0.c0 AS BLOB))))OR(((rt0.c1) IS FALSE))), (NOT ((rt0.c3 IN ()))) FROM rt0 WHERE (x'');SELECT (~ (rt0.c0)) COLLATE NOCASE FROM vt0, rt0 WHERE ('-1285782053') GROUP BY ((((vt0.c0)|(rt0.c4)))*(vt0.c0 COLLATE RTRIM)), CAST(rt0.c0 AS REAL), ((((rt0.c3)%(rt0.c3))) ISNULL) HAVING ''; -- 0ms;
SELECT ALL AVG(CAST('-ꨌ' AS NUMERIC)) OVER ( ROWS BETWEEN ((rt0.c2)<<(((rt0.c0)<=(NULL)))) FOLLOWING AND (('-669447147') IS FALSE) FOLLOWING), ((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END) NOT NULL), (((rt0.c4))>(((rt0.c1 IN ())))), CASE WHEN COALESCE(DISTINCT rt0.c3, rt0.c0, rt0.c0, rt0.c4) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END, vt0.c0 FROM vt0, rt0 WHERE ((((NULL IN ()))|((('l''''䷧8g~7⫐')+('1639972604'))))) LIMIT -1940124884;SELECT DISTINCT ((rt0.c2 COLLATE NOCASE)>>(CASE WHEN rt0.c3 THEN x'' ELSE rt0.c0 END)) FROM rt0, vt0 WHERE ((((((1.409309325E9, '732435111', x'')) BETWEEN (('', NULL, NULL)) AND ((NULL, 'f8', '698347874'))))==(((NULL)+(''))))) ORDER BY (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((HEX(1.495039906E9)) NOT BETWEEN (CASE 0.8125258085301937  WHEN 't༔SY' THEN x'' END) AND (-1.402538331E9 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS BLOB), ((0.9397186180919839) NOTNULL), ((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c0)))) AND ((((rt0.c0)!=(vt0.c0)), (((rt0.c3, rt0.c0, rt0.c4, vt0.c0, vt0.c0))<>((rt0.c4, rt0.c4, rt0.c2, rt0.c1, rt0.c2))), ''))) FROM rt0 GROUP BY (((rt0.c4)) NOT BETWEEN ((IFNULL(DISTINCT rt0.c3, x''))) AND ((((rt0.c1)||(rt0.c0))))), CASE ((rt0.c4)IS NOT(rt0.c4))  WHEN (+ (rt0.c4)) THEN ((rt0.c0) NOTNULL) END, (vt0.c0 IN ()) COLLATE BINARY HAVING x'';SELECT (+ (x'')), (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))IS(((rt0.c3)|(rt0.c1)))), ((((CAST(rt0.c1 AS REAL))AND(COUNT(*))))AND(rt0.c2 COLLATE BINARY)) FROM vt0, rt0 WHERE (LOWER((NOT (0x115ea71d)))) LIMIT 515574373; -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c4)))>>(((vt0.c0) NOT NULL))) FROM rt0;SELECT DISTINCT COUNT(vt0.c0) OVER (), TOTAL_CHANGES(), (~ (((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)))) FROM rt0;SELECT DISTINCT (((NULL, CAST(0.8167481570380762 AS BLOB), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<((rt0.c1 COLLATE RTRIM, CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END, CASE rt0.c2  WHEN rt0.c0 THEN x'' WHEN 0.7775482058473643 THEN rt0.c3 WHEN 0.04293678574706872 THEN rt0.c4 ELSE x'34a6' END))) FROM rt0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((rt0.c3)OR(rt0.c2))), CASE WHEN NULL THEN rt0.c1 ELSE NULL END COLLATE RTRIM, ((vt0.c0)<<(6.20727273E8)) COLLATE RTRIM FROM vt0;SELECT ALL (rt0.c4 IN (0.21409433490104057)) FROM vt0, rt0 WHERE (((('')&(NULL)) IN ())); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, vt0 LIMIT 1790137756; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0))) IS TRUE) FROM vt0, rt0 WHERE (((((('882292828')AND(-2026942167)))OR(0.4106261623939347)) IN ())) ORDER BY ((rt0.c1)<<(TRIM(rt0.c0, rt0.c0)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT x'4c944bc1' FROM rt0 WHERE (((CAST('748124823' AS INTEGER))<(((((x'f45a')AND('-542915555')))OR(0.2067207418831326))))); -- 0ms;
SELECT ALL FIRST_VALUE((((((vt0.c0)OR('-1492300216')))AND(vt0.c0)) IN ())) OVER ( ORDER BY ((((rt0.c3 IN (rt0.c0, rt0.c2))))<((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END))) ASC  NULLS LAST), CASE COUNT(*)  WHEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END THEN ((rt0.c2)-(rt0.c3)) END, CASE WHEN MAX(rt0.c2) THEN CAST(rt0.c2 AS BLOB) END FROM vt0 WHERE ((((((((x'')AND(1928103360)))OR(x'9775'))))>=((('.\n' IN ('s⊽X-縴_6', NULL))))));SELECT DISTINCT ((rt0.c3)GLOB(rt0.c0)) COLLATE BINARY FROM vt0 WHERE ((((- (NULL))) NOT BETWEEN (x'' COLLATE RTRIM) AND ((((x'5b4a')) NOT BETWEEN ((NULL)) AND ((0.28661144761168666)))))) LIMIT -1168547668 OFFSET -889598412;SELECT MIN(((rt0.c1) NOTNULL) COLLATE BINARY) FROM rt0 WHERE ((((((NULL, '-1107243326', 0.07025057749828856))<>((0.42407617698200695, '-1415577373', x'72e34966936f')))) NOTNULL)); -- 0ms;
SELECT ALL TOTAL(((((rt0.c4)OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM) OVER () FROM rt0, vt0 WHERE (CAST(CAST(x'' AS TEXT) AS TEXT)); -- 0ms;
SELECT (((MAX(rt0.c4)))<=(((NULL IN ())))) FROM vt0 WHERE (CASE ((0.03602844585493603) BETWEEN (-1.432354558E9) AND (NULL))  WHEN (NULL IN (NULL)) THEN ((0.8155240038857843) NOT BETWEEN (NULL) AND (x'1253')) WHEN NULL THEN (((''))<=((NULL))) WHEN '' THEN ((((0.6617082210974606)OR(0.7339916420762121)))OR(-700463382)) ELSE (('0.9749328791747143') IS TRUE) END);SELECT DISTINCT CAST(((rt0.c4)-(vt0.c0)) AS REAL) FROM rt0 WHERE ((((0.959452379196951)OR(x'')) IN ()));SELECT DISTINCT MIN(((rt0.c0) NOTNULL)) FROM rt0 WHERE (CAST((+ (0xffffffffda088c87)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE WHEN COUNT('0.19231944271155987') THEN CAST(rt0.c4 AS INTEGER) WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE RTRIM WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c2 IN ()) WHEN CASE WHEN NULL THEN rt0.c4 END THEN (rt0.c2 IN (rt0.c0)) WHEN rt0.c4 THEN CAST(rt0.c3 AS INTEGER) END FROM rt0 WHERE (((((9.73634066E8) NOTNULL)) ISNULL));SELECT DISTINCT (rt0.c2 COLLATE RTRIM IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)<=(vt0.c0)) IN ()) FROM rt0, vt0 WHERE (CAST(NULL AS TEXT)) GROUP BY CASE WHEN ((rt0.c0) NOTNULL) THEN ((vt0.c0) NOT NULL) ELSE (((rt0.c3))=((vt0.c0))) END, (((TRIM(DISTINCT rt0.c4, rt0.c4)))>=((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))), ((('0.9750045911353373'))<(((((rt0.c1)) BETWEEN (('262494796')) AND ((rt0.c0)))))); -- 0ms;
SELECT DISTINCT (((((((((rt0.c4)OR(rt0.c4)))AND('270646984')))AND(vt0.c0)))OR(vt0.c0)) IN ()) FROM rt0, vt0 LIMIT 2049281505 OFFSET -1259784174; -- 0ms;
SELECT DISTINCT LAG((((rt0.c4)) BETWEEN ((((rt0.c0) IS FALSE))) AND (((~ (rt0.c2))))), (- (rt0.c2)) COLLATE NOCASE, ((json_array(rt0.c1, rt0.c0)) IS FALSE)) OVER (), ((((rt0.c2))!=((vt0.c0))) IN ((+ (rt0.c4)))), (((((0.789440397004186))==((rt0.c2))))<(HEX(rt0.c1))) FROM rt0 GROUP BY ((((rt0.c3)LIKE(rt0.c4)))<>(((0X591c7fa2) BETWEEN (rt0.c0) AND (NULL)))), 0.31794806344666926, TRIM(DISTINCT ((((((((x'')OR(0.9761571961608397)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)), CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 END) HAVING (((HEX(DISTINCT rt0.c4), ((rt0.c0) NOT BETWEEN (-743376082) AND (rt0.c0)), ((rt0.c1)!=(vt0.c0))))=((CASE '-543327499'  WHEN rt0.c3 THEN rt0.c3 END, x'', rt0.c3))) LIMIT -279659659;SELECT ALL CASE rt0.c0  WHEN rt0.c3 THEN (- (NULL)) ELSE rt0.c2 END, GROUP_CONCAT(((rt0.c4)>(vt0.c0))), ((((((-1023549224)OR(x'ea44')))AND(rt0.c0))) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (((((((((rt0.c1)AND(vt0.c0)))AND(NULL)))AND(x'')))AND(rt0.c0)))) FROM rt0;SELECT ALL vt0.c0 FROM rt0, vt0 WHERE (((((((((0.20367776994277154)OR((('-2026942167')||(0X2cf25c40)))))AND('' COLLATE RTRIM)))OR((- ('')))))AND((('970969759') IS FALSE)))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ()))>(((rt0.c2) BETWEEN (x'') AND (rt0.c0)))) FROM vt0 WHERE (((((NULL)GLOB(x'')))==((('-1168547668') NOT BETWEEN (x'2a66') AND (NULL)))));SELECT DISTINCT '1943754805' FROM rt0 NOT INDEXED, vt0; -- 0ms;
SELECT ALL SUM(((rt0.c0)||(rt0.c4))) FROM vt0, rt0; -- 0ms;
SELECT rt0.c2 FROM vt0, rt0 WHERE (CAST((((0.00900937345695374)) NOT BETWEEN ((x'')) AND ((x'7734'))) AS TEXT)); -- 0ms;
SELECT ALL CASE x'c29d' COLLATE RTRIM  WHEN 'kXV0o9ኧ	' THEN ((rt0.c2) IS FALSE) END FROM vt0, rt0 WHERE (((((NULL) NOT NULL))=(CAST('' AS INTEGER)))) LIMIT -712599484 OFFSET 2123257176; -- 0ms;
SELECT DISTINCT ((((((vt0.c0))>((rt0.c2))), CAST(rt0.c3 AS TEXT), 0.24958980406580633))!=((vt0.c0, vt0.c0, rtreenode(rt0.c2, rt0.c0)))), NULL, ((rt0.c3 COLLATE NOCASE)LIKE(CAST(rt0.c4 AS INTEGER))) FROM vt0;SELECT DISTINCT (+ ((NOT (rt0.c1)))), ((((NULL)OR(((rt0.c2)AND(rt0.c3)))))OR(x'')), (((CAST(rt0.c1 AS NUMERIC), (((vt0.c0))<>((vt0.c0))), 0.44042695254454733))!=((((rt0.c2)&(rt0.c2)), rt0.c0, ((rt0.c0)|(1.61440225E8))))) FROM rt0, vt0 WHERE (CASE WHEN (- (12180997)) THEN x'e788' END); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN (((((rt0.c0, rt0.c2, rt0.c3))>=((rt0.c1, rt0.c0, rt0.c3))))) AND ((((rt0.c4) NOTNULL)))), DENSE_RANK() OVER (), CAST(CAST(rt0.c1 AS BLOB) AS REAL) FROM rt0 WHERE (((((+ (NULL))))=((CAST(x'' AS NUMERIC))))) LIMIT 17414620;SELECT DISTINCT CASE WHEN CAST(rt0.c4 AS NUMERIC) THEN ((vt0.c0) NOT NULL) ELSE NULL END FROM rt0 WHERE ((((((((((((((((NULL, '', 0.6788146570044441))<=((x'e029', 0.8827690810653659, NULL))))AND(((x'')*(0.700531846141405)))))AND((((('')AND(0.8638258074359825)))OR(0.3556946286211127)))))OR(((('')) NOT BETWEEN ((x'')) AND ((0.43238692933459155))))))OR(CAST(1996618454 AS BLOB))))AND(((-1814193263)==('ඝ K*')))))OR(((((x'')AND(0.2548542825130514)))OR('팵S+vGp魧uV'))))) GROUP BY CASE json_valid(rt0.c2)  WHEN (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) THEN ((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)) WHEN (((rt0.c0, rt0.c3, rt0.c1))>=((rt0.c1, rt0.c1, vt0.c0))) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END WHEN (((rt0.c1, rt0.c4, rt0.c0))<((rt0.c2, rt0.c4, NULL))) THEN TIME(rt0.c1, rt0.c4, vt0.c0, rt0.c1, rt0.c4) ELSE (~ (rt0.c2)) END HAVING COALESCE(JULIANDAY(rt0.c2, x'', rt0.c3), x'86ee', rt0.c3, ((rt0.c4) ISNULL));SELECT GROUP_CONCAT(((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c3))), rt0.c0, (- (CAST(vt0.c0 AS TEXT))) FROM vt0, rt0 WHERE ((((((0.9749328791747143 IN (0.5155797901881289)))OR((- ('-195676058')))))AND(CASE NULL  WHEN 0.6732123088965152 THEN '' END))); -- 0ms;
SELECT DISTINCT ((((COUNT(rt0.c0))AND((rt0.c0 IN ()))))OR(MAX(vt0.c0))) FROM rt0 WHERE ('2000519337' COLLATE NOCASE);SELECT ALL SUM(0Xffffffffefdc21dd), (HEX(rt0.c3) IN ((NOT (x'973b1e67')))), NULL COLLATE RTRIM FROM vt0 WHERE (json_quote((((0.5304968852977553))<((NULL))))) LIMIT 2064998207 OFFSET 2140333480;SELECT DISTINCT ((((((((COUNT(rt0.c0))AND(LIKELY(DISTINCT rt0.c4))))AND((- (rt0.c1)))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))))AND(CASE rt0.c3  WHEN 0.24296145416667048 THEN rt0.c1 ELSE rt0.c3 END)) FROM rt0 WHERE ((LIKE(0.365032629433813, 0X2cf25c40, '2') IN (NULL COLLATE NOCASE))); -- 0ms;
SELECT GROUP_CONCAT(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4))) OVER (), (~ ((- (rt0.c4)))), NULL FROM vt0, rt0 ORDER BY json_array(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)), ((rt0.c2)&('-752658914')), ((rt0.c1)AND(rt0.c2)), CAST(rt0.c0 AS INTEGER)) DESC; -- 1ms;
SELECT DISTINCT CASE rt0.c0  WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END WHEN ((rt0.c3)*(rt0.c0)) THEN rt0.c0 WHEN x'' THEN LOWER(rt0.c0) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (rt0.c2 IN (rt0.c2)) WHEN ((rt0.c0)AND(rt0.c2)) THEN ((rt0.c3) NOT NULL) END FROM vt0, rt0 ORDER BY ((((rt0.c2)OR(((rt0.c2) NOT NULL))))OR(((vt0.c0)|(rt0.c2)))) DESC, 0.18549628547797625 ASC LIMIT -982294552 OFFSET 43052608; -- 0ms;
SELECT CAST(rt0.c2 AS REAL) COLLATE RTRIM, (((rt0.c1))!=((ABS(rt0.c3)))), (+ ((((rt0.c3))<=((rt0.c1))))) FROM vt0, rt0 WHERE (((((NULL)||('946X'))) ISNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c4 THEN ((rt0.c2)-(vt0.c0)) WHEN (- (rt0.c4)) THEN CAST(rt0.c0 AS NUMERIC) WHEN rt0.c4 COLLATE BINARY THEN (~ (rt0.c4)) END FROM rt0, vt0 WHERE ((((('\r㊊᪎NⓗMg4')AND('iL!#VZ-#')))OR('973634066')) COLLATE RTRIM) LIMIT 126866170; -- 1ms;
SELECT DISTINCT NULL FROM rt0 WHERE (((LOWER(x'')) IS FALSE)); -- 0ms;
SELECT ((((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((rt0.c0) NOT BETWEEN (vt0.c0) AND ('-26709254')), ((rt0.c0)>=(vt0.c0))))==((LAST_INSERT_ROWID(), AVG(vt0.c0), ((2027107916) IS FALSE)))), (+ (((vt0.c0)IS(vt0.c0)))), STRFTIME(((rt0.c3)<<(NULL)), rt0.c0, ((rt0.c4) BETWEEN (x'') AND (rt0.c4)), COUNT(*), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) FROM vt0;SELECT SUM((rt0.c0 IN (rt0.c4))), (((~ (vt0.c0)))|(COUNT(rt0.c2))), ((((((((((rt0.c4)>>(rt0.c0)))OR(((('(', rt0.c0, vt0.c0)) BETWEEN ((rt0.c4, rt0.c2, rt0.c4)) AND ((rt0.c3, rt0.c3, vt0.c0))))))OR(x'3a64')))AND(((rt0.c0) NOT NULL))))OR(CAST(rt0.c1 AS NUMERIC))), (((GROUP_CONCAT(rt0.c1)))>=(((((rt0.c4))<((rt0.c3)))))), (((((rt0.c3)OR(vt0.c0)))AND(rt0.c0)) IN (((NULL)<<(rt0.c3)))) FROM rt0, vt0 GROUP BY ((UPPER(DISTINCT rt0.c1))<<(NULL)) HAVING TRIM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END); -- 1ms;
SELECT DISTINCT CAST(((((95590029)AND('141960316')))AND(NULL)) AS NUMERIC), ((GROUP_CONCAT(rt0.c3)) IS FALSE), rt0.c2 COLLATE RTRIM FROM rt0 GROUP BY ((rt0.c1 COLLATE BINARY)<(rt0.c3)); -- 0ms;
SELECT ALL ((0.8816377453150205) NOT BETWEEN (((rt0.c2)<(rt0.c3))) AND (GROUP_CONCAT(rt0.c4))), (((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))AND(TOTAL(rt0.c1))))AND(((rt0.c4)>=(vt0.c0)))), ((0.1765082159297332)-((+ (rt0.c1)))) FROM rt0;SELECT DISTINCT ((CAST(rt0.c4 AS REAL)) ISNULL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3, rt0.c4, vt0.c0))!=((rt0.c4, NULL, rt0.c1))))>=(((((rt0.c3)OR(vt0.c0)))OR(rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c4))) NOTNULL) FROM vt0;SELECT ALL (+ (AVG(rt0.c1))) FROM rt0, vt0 WHERE (((((((0X260e3cd5) IS FALSE))OR(CAST('1809200858' AS BLOB))))OR((x'' IN ())))) GROUP BY UPPER(COALESCE(DISTINCT rt0.c0, rt0.c4)), json_insert(json_insert(rt0.c3, vt0.c0, rt0.c4), (+ (rt0.c2)), ((((rt0.c4)AND(rt0.c0)))AND(rt0.c2))), CAST(((((((((((((((((rt0.c4)AND(rt0.c4)))AND(NULL)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)) AS REAL), CASE ((x'6234') ISNULL)  WHEN ((rt0.c3)>(rt0.c3)) THEN (rt0.c1 IN ()) END, ((((((0.6692078468373579)OR(rt0.c2)))AND(rt0.c4)))%(CASE WHEN rt0.c2 THEN rt0.c1 END)) ORDER BY ((CAST(rt0.c4 AS INTEGER)) NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND ('VdA'))  NULLS LAST, ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c0))) AND (((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))), (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN (((rt0.c4 IN ()), ((rt0.c4)||(rt0.c1)), CASE WHEN rt0.c0 THEN vt0.c0 ELSE NULL END)) AND ((rt0.c3, rt0.c4 COLLATE BINARY, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))) DESC  NULLS FIRST;SELECT ((CAST(rt0.c3 AS INTEGER)) ISNULL), 0.6181936206175331, (+ ((- (rt0.c2)))) FROM rt0 ORDER BY -1403026362;SELECT ALL (((x'' IN (rt0.c2)))IS NOT((((rt0.c4, rt0.c1, vt0.c0))<>((rt0.c1, rt0.c1, vt0.c0))))), (~ (CAST(rt0.c2 AS TEXT))), ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c3))) AND (rt0.c3)) FROM vt0, rt0 WHERE (CAST(DATETIME(NULL, NULL, NULL) AS BLOB)); -- 0ms;
SELECT CASE rt0.c4  WHEN CASE rt0.c4  WHEN x'' THEN rt0.c1 END THEN (((rt0.c2))<((rt0.c1))) END FROM rt0, vt0 WHERE ((- (x'21a9'))); -- 0ms;
SELECT DISTINCT '-195754553', ((rt0.c2) ISNULL) COLLATE NOCASE, CAST(((vt0.c0) IS FALSE) AS REAL), ((rt0.c0)||(rt0.c0)) COLLATE RTRIM COLLATE RTRIM, ((((rt0.c1)<(rt0.c2)))AND('-1855902718')) FROM rt0 WHERE (CAST(((0.6432358549703557) NOT BETWEEN ('') AND (2056954365)) AS NUMERIC)) ORDER BY CASE WHEN ((rt0.c4)<=(rt0.c0)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) END DESC  NULLS FIRST, CASE WHEN vt0.c0 COLLATE BINARY THEN (+ (rt0.c4)) END ASC  NULLS LAST;SELECT ((LIKELIHOOD(rt0.c2, 0.5425440313026985)) NOT BETWEEN (((rt0.c4)LIKE(rt0.c1))) AND ((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) FROM rt0, vt0 GROUP BY ((((rt0.c4)!=(rt0.c4))) IS FALSE) HAVING (- (((rt0.c3) NOT NULL))); -- 0ms;
SELECT DISTINCT CAST(json_remove(rt0.c3, rt0.c3) AS NUMERIC) FROM rt0, vt0 WHERE ((('F8') NOT BETWEEN ((((x'0e50'))=(('')))) AND (((x'8f4cd991') IS FALSE))));SELECT ((AVG(rt0.c2)) NOT BETWEEN (rt0.c2) AND (((rt0.c4) NOTNULL))) FROM vt0 WHERE (((x'860e' COLLATE BINARY)/((+ (0.12797659118620608))))) ORDER BY ((LOWER(rt0.c4))IS NOT(((0.24296145416667048) BETWEEN (vt0.c0) AND (rt0.c1)))) ASC LIMIT 1651665457;SELECT (((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))>(rt0.c3)) FROM rt0, vt0 WHERE ((((((0X70b3bd35)OR(0xffffffffac5f8446)))OR(NULL)) IN ((('(SXE~Q') NOT BETWEEN ('-515840600') AND (2.62494796E8))))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT '') FROM rt0 WHERE (CAST(((0X2c09ba9c) NOT BETWEEN ('') AND (-1.34879477E8)) AS REAL)) GROUP BY ((((((((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))>=(((rt0.c1)<=(rt0.c4)))) HAVING (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.7216416424336617)))) NOT BETWEEN ((((rt0.c1, rt0.c3, rt0.c3, rt0.c1, rt0.c4))>=((rt0.c3, x'', rt0.c3, rt0.c2, '-887377379')))) AND (rt0.c0 COLLATE BINARY)); -- 0ms;
SELECT ALL CASE WHEN UPPER('620727273') THEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c4 END ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) END, ((((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0) NOT NULL))))AND(((rt0.c0)+(rt0.c1)))))OR(x'39eb')))AND(((((rt0.c4)AND(rt0.c0)))AND(rt0.c0)))), NTH_VALUE((((rt0.c2)IS(rt0.c4)) IN (CAST(rt0.c4 AS INTEGER))), CASE ((rt0.c2)&(rt0.c4))  WHEN ((((((((rt0.c1)AND(NULL)))OR(rt0.c3)))AND(rt0.c2)))AND(vt0.c0)) THEN rt0.c0 WHEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)) THEN 0xffffffffcc960d01 WHEN (vt0.c0 IN ()) THEN rt0.c4 WHEN x'' THEN ((rt0.c3) NOT NULL) WHEN ((rt0.c3) BETWEEN (rt0.c1) AND ('')) THEN rt0.c4 ELSE rt0.c1 COLLATE NOCASE END) OVER (), COUNT(*) FILTER(WHERE (rt0.c1 IN ())) OVER (), rt0.c4 FROM rt0, vt0 WHERE (((CAST(0x28370e3b AS BLOB))>((('~v''')IS(x'11e63a08'))))); -- 1ms;
SELECT DISTINCT NULL FROM vt0, rt0 WHERE ((CASE WHEN x'' THEN '-567990417' END IN ())); -- 0ms;
SELECT ALL (~ (x'0563')), ((((COUNT('534853755'))OR(CAST(rt0.c4 AS INTEGER))))AND((~ (rt0.c3)))), ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c2 THEN 0Xffffffffe35da09d WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END)))OR('1')) FROM rt0, vt0 ORDER BY (~ (vt0.c0)) COLLATE BINARY  NULLS FIRST, ((vt0.c0)IS(rt0.c0)) COLLATE NOCASE LIMIT -901424125; -- 0ms;
SELECT DISTINCT (((rt0.c2)LIKE(rt0.c2)) IN ()) FROM vt0 WHERE (((((0.14865208545581698) NOT BETWEEN ('Of{%,') AND (0.4163634162710651))) NOTNULL)) ORDER BY (((- (0.7562090224144248))) IS TRUE) ASC LIMIT 262494796 OFFSET 614463154; -- 0ms;
SELECT (((((((rt0.c3))!=((rt0.c2))))OR((+ (rt0.c2)))))AND(COUNT(*))), CAST(((((rt0.c3)AND(rt0.c3)))OR(vt0.c0)) AS BLOB), ((NULL)LIKE((~ (rt0.c0)))) FROM vt0, rt0 WHERE (((((0xffffffffc1a5fc37)|(x'')))<((- (x''))))); -- 0ms;
SELECT ALL CASE ((rt0.c2)|(rt0.c4))  WHEN CAST(rt0.c3 AS INTEGER) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)) END, SUM(CAST(rt0.c3 AS INTEGER)), ((((((((rt0.c4)AND(rt0.c2)))AND(vt0.c0)))AND(((((rt0.c4)AND(0.1019700781234526)))AND(rt0.c4)))))OR((('RD')<>(rt0.c3)))) FROM vt0 WHERE ((~ ((0.48340279315952317 IN (NULL)))));SELECT ALL (((vt0.c0)) NOT BETWEEN ((((rt0.c2) ISNULL))) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))), TOTAL(((rt0.c0)GLOB(rt0.c4))), COUNT(*) OVER (), (((vt0.c0 IN ()))GLOB(rt0.c3 COLLATE NOCASE)), (~ (((rt0.c4) IS FALSE))) FROM rt0, vt0 WHERE (CAST(((('.pJY'))>=(('-1597553960'))) AS INTEGER)); -- 0ms;
SELECT ALL ((((rt0.c2) ISNULL)) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END) AND (rt0.c2)) FROM vt0;SELECT NTH_VALUE(CASE CAST(rt0.c1 AS TEXT)  WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)) THEN x'7e04' END, x'') OVER () FROM rt0, vt0 WHERE ('RܨV⑼'); -- 0ms;
SELECT ALL CAST(JULIANDAY(vt0.c0, rt0.c1, rt0.c4) AS BLOB) FROM vt0;SELECT CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC) FROM vt0 WHERE ((((x'', '', 0x70b3bd35)) BETWEEN ((x'' COLLATE BINARY, CASE WHEN 'xC示h' THEN 0.9982711324249276 WHEN NULL THEN '-579287853' WHEN x'' THEN '1678461412' ELSE 'fD춋9殰' END, (('T	E[')>>(x'')))) AND ((((747164519)==('-1632770392')), (((NULL)) NOT BETWEEN (('[')) AND ((0.6486372757012006))), (~ (NULL)))))) GROUP BY ((rt0.c0)AND(rt0.c4)) COLLATE BINARY HAVING CAST(((rt0.c1)%(rt0.c3)) AS REAL) ORDER BY ((((~ (rt0.c1))))>((((rt0.c2)AND(rt0.c2)))))  NULLS FIRST;SELECT ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END) IS FALSE) FROM vt0;SELECT DISTINCT AVG(((rt0.c2)-(rt0.c1))), CAST(rt0.c1 AS TEXT) COLLATE BINARY, vt0.c0 FROM rt0, vt0; -- 0ms;
SELECT (+ (rt0.c1 COLLATE RTRIM)) FROM vt0, rt0 WHERE ((+ (('1880333159' IN (-1.107243326E9, NULL))))); -- 0ms;
SELECT ALL (((((((vt0.c0)OR(rt0.c0)))AND(NULL))))!=((rt0.c4))) FROM rt0;