-- Time: 2024/06/07 23:35:08
-- Database: database71
-- Database version: 3.40.0
-- seed value: 99553271
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 BLOB , +c4 REAL ); -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE rt0 SET (c4, c4)=(NULL, 0x50bb4e0c) WHERE (((+ (rt0.c2)))GLOB(rt0.c3 COLLATE NOCASE)); -- 0ms;
REINDEX  rt0; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c4=NULL, c1=x'', c3=-1196786573 WHERE (((rt0.c0, rt0.c3, rt0.c4, -1.158005841E9, rt0.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)), ((rt0.c2) NOT NULL), (((x''))!=((rt0.c1))), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 END, ((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-1158005841')))) AND ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, LIKE(x'', rt0.c0), rt0.c2 COLLATE RTRIM, ((rt0.c1) ISNULL), (((rt0.c3))>((rt0.c3)))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE rt0 SET c2=NULL WHERE CAST((rt0.c0 IN (rt0.c2, rt0.c1)) AS INTEGER); -- 0ms;
PRAGMA temp.threads; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c1, c2, c1)=('h삅P_', 1432604449, '켡G', NULL) WHERE ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN 0.8291122638188252 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END) NOTNULL); -- 0ms;
DELETE FROM rt0 WHERE ((CAST(rt0.c2 AS TEXT)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c3, c0) VALUES (0.8291122638188252, 'r8Y~*D)u', -1.196786573E9, -1825281481), (NULL, 0.7588568361734701, x'', '-83378043'), (NULL, x'', -8.3378043E7, 1301459617); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE json(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
PRAGMA main.journal_mode = DELETE; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c0, c1, c4) VALUES (0.3606722495072485, '-83378043', NULL, x'8665'), (x'', '-1227888588', 0.40296577809540557, x''), (0Xfffffffffb07c085, '', NULL, x''); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c3, c1, c2, c4) VALUES ('-1220230172', '-1220230172', NULL, '-1196786573', '0.8291122638188252'), (NULL, NULL, '1914291886', x'', x''), (0.4457609896609074, 0.18062716163868597, NULL, x'', NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c4) VALUES (0.5518575575226654, 1921143779); -- 0ms;
PRAGMA main.legacy_file_format = false; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c4, c3) VALUES ('', '0.4457609896609074', x'', 0Xffffffffe7a9f302); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0X566e113 WHERE ((((rt0.c1)<<(rt0.c0)))=(CAST(rt0.c0 AS NUMERIC))); -- 0ms;
PRAGMA main.optimize; -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(x''); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'') WHERE (((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), (((rt0.c4))==((rt0.c0))), NULL)) AND ((((rt0.c4)%(rt0.c4)), CAST('}-hdD' AS REAL), ((rt0.c1)<>(rt0.c3))))); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c4, c3) VALUES (-1e500, 1.301459617E9, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (0.5337168803492822); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c3, c0, c2) VALUES ('', '-759236747', 0.4457609896609074, 0.5235777680791598); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3, c0) VALUES (0.16137813966013925, '1841883378', x'4b7902dd'); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ('켡o', 'H삅P_', 0X1, x'', x''), (x'fafd', x'', NULL, x'df49', x'c7eb'), (x'f6a8', '0.5518575575226654', '0.16137813966013925', x'', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (NULL); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.27415768756805015, NULL, 0.20943054934952987, x'b57a', 'h삅P_'); -- 0ms;
PRAGMA main.automatic_index = false; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c4)=(0.16137813966013925, '0.16137813966013925') WHERE CAST((((0.5907482409458895))<((rt0.c4))) AS INTEGER); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA application_id; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (x''), (-2022386832), (x''); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c4) VALUES ('', 'sh', 'o~kE6jR'), ('1301459617', NULL, NULL), ('1354452492', 1.914291886E9, 0x24b5c9d1); -- 1ms;
INSERT OR REPLACE INTO rt0(c0, c3) VALUES ('95675312', x''), (x'64aa', '1354452492'), (0.11028372694921185, NULL), ('Lv~HAG', NULL), (0.5021686478215611, '⨞'); -- 1ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=0.6555776441030141 WHERE ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c4)<>(rt0.c3))) AND ((((rt0.c4, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, 0.18062716163868597, rt0.c4)) AND ((rt0.c3, NULL, rt0.c0))))); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3, c0) VALUES (x'f7be', 0.3838007528050702, '%'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
END; -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c4, c3, c1, c0) VALUES ('-L#', 1305008375, NULL, 0.10456314386308008, x''), (x'', 0.26858694357459756, x'286a', NULL, NULL), (NULL, x'', '', NULL, NULL); -- 0ms;
INSERT OR FAIL INTO rt0(c4, c2) VALUES ('0.5518575575226654', '-1227888588'); -- 0ms;
INSERT OR FAIL INTO rt0(c4, c1, c3, c0, c2) VALUES (NULL, '95675312', NULL, 0.2085067928525507, 'TRUE'), (x'', 0X1f04a9f3, x'', -1220230172, 0X4dc8d8f7), (x'', NULL, '-2029567551', x'', ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c4) VALUES (NULL, NULL, x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2, c3, c4) VALUES (x'', '' COLLATE NOCASE, x'', '525238519'); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX NOCASE; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (-1.825281481E9); -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT GROUP_CONCAT(rt0.c2), ((rt0.c0)>(''))) FROM rt0 LIMIT -102492118 OFFSET 1139988188; -- 0ms;
SELECT DISTINCT (rt0.c2 IN ()), ((((rt0.c4) IS FALSE)) IS TRUE), MAX(MAX(rt0.c4)) COLLATE NOCASE FROM rt0 WHERE (0.1717484264099104);SELECT DISTINCT CASE NULLIF(rt0.c2, rt0.c4)  WHEN x'1ae3' THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END FROM rt0 WHERE (((((((((((((((((((((NULL)OR(x'')))AND(NULL)))AND(1.139988188E9)))AND(NULL)))AND(((0x64f033e0) BETWEEN (0.5217736297373045) AND ('1457232365')))))OR((((NULL))<((0.7050344736693521))))))OR(CASE WHEN '' THEN NULL END)))OR(-866837932)))AND(CASE WHEN 'Hg' THEN x'29c8' WHEN '{}' THEN x'ec6eebfb' WHEN 1948349316 THEN 0.9709803517384122 ELSE NULL END)))AND((((('')AND(NULL)))OR('-1220230172'))))); -- 0ms;
SELECT DISTINCT ((((rt0.c4) IS TRUE)) IS TRUE), CAST(TOTAL(rt0.c3) AS NUMERIC), (('1334415812') NOT BETWEEN (-1.196786573E9 COLLATE RTRIM) AND (((rt0.c2)!=(rt0.c2)))) FROM rt0; -- 1ms;
SELECT ALL MIN('1495075070'), (- (((rt0.c2) IS FALSE))), (+ (rt0.c1)) FROM rt0 WHERE ((NOT (((x'b8b8')AND(-2146186716))))); -- 0ms;
SELECT RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) IS FALSE))-(((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))), UPPER(rt0.c3 COLLATE NOCASE), '&67집>|g昅' FROM rt0 WHERE (((CAST(NULL AS NUMERIC))-(((((x'07c4')AND(NULL)))OR(x'b768'))))); -- 0ms;
SELECT DISTINCT ((((rt0.c4) NOT NULL))+(rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE (((('0㮯')OR('1e500')) IN ())); -- 0ms;
SELECT ALL NTH_VALUE((rt0.c1 IN ()) COLLATE RTRIM, (+ ((~ (rt0.c3))))) OVER () FROM rt0 WHERE ((+ (NULL)) COLLATE RTRIM); -- 0ms;
SELECT ((((rt0.c0) NOT BETWEEN (rt0.c4) AND ('hg'))) BETWEEN (((rt0.c2)&(rt0.c4))) AND ((NULL IN (rt0.c1)))) FROM rt0 WHERE (((((NULL)OR(x''))) NOT BETWEEN (((NULL) NOT NULL)) AND ('1448060669' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT MIN(TIME(rt0.c3, rt0.c2, 1139988188)), CAST('Fk' AS REAL) COLLATE BINARY, FIRST_VALUE(rt0.c2) OVER () FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END COLLATE BINARY DESC; -- 0ms;
SELECT ALL ((rt0.c1) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (CAST(rt0.c0 AS NUMERIC))) FROM rt0; -- 0ms;
SELECT ((COALESCE(DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c0))&(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt0; -- 1ms;
SELECT DISTINCT FIRST_VALUE(((((rt0.c1)=(rt0.c1))) ISNULL)) OVER () FROM rt0; -- 0ms;
SELECT ((((((rt0.c2)AND(NULL)))OR(rt0.c4))) BETWEEN (((rt0.c0)%(rt0.c3))) AND (CAST(rt0.c2 AS REAL))) FROM rt0; -- 0ms;
SELECT ALL (NOT (rt0.c0)) FROM rt0 NOT INDEXED GROUP BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY ORDER BY '723374740'; -- 0ms;
SELECT DISTINCT SUM(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 END) FROM rt0; -- 0ms;
SELECT (((NOT (rt0.c2))) NOTNULL), ((CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END) IS TRUE), ((CAST(rt0.c2 AS REAL))>=((rt0.c3 IN ()))) FROM rt0 WHERE (((NULL COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT DISTINCT ((rt0.c4)AND(rt0.c4 COLLATE BINARY)), ((((rt0.c3) NOT NULL))<(((rt0.c4) NOT BETWEEN (NULL) AND (NULL)))), ((((rt0.c4)AND(COUNT(rt0.c3))))AND(rt0.c0 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT ALL (CAST(rt0.c4 AS NUMERIC) IN ()), ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))>>(((rt0.c1)IS(rt0.c3)))), (NOT (((((rt0.c0)AND(rt0.c1)))OR(rt0.c4)))) FROM rt0 ORDER BY '-684216838'; -- 0ms;
SELECT ALL ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END)||((rt0.c0 IN ()))), ((MAX(rt0.c1))LIKE(rt0.c4)), ((((rt0.c1 IN ())))<>((MAX(0.41388509839373366)))) FROM rt0 WHERE ((LOWER('-408292606') IN (('-1768602015' IN ())))); -- 0ms;
SELECT CASE WHEN ((0.12933668850280655)AND(rt0.c2)) THEN CAST(rt0.c3 AS TEXT) ELSE ((rt0.c1)>>(rt0.c1)) END FROM rt0 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)); -- 0ms;
SELECT ALL rtreenode((rt0.c2 IN (rt0.c3)), rt0.c2 COLLATE BINARY) FROM rt0 WHERE ((((((x'')) NOT BETWEEN (('')) AND ((NULL)))) NOT BETWEEN ((((NULL)) BETWEEN ((NULL)) AND ((NULL)))) AND (-1.227888588E9 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT UNLIKELY(((rt0.c1)>=(rt0.c3))), 9.5675312E7, ((COUNT(rt0.c4))>=(((x'')>(0X2f5f8eee)))) FROM rt0 WHERE (CASE (x'' IN ())  WHEN ((0.19714337450017294)<(0.8350928077916926)) THEN DATETIME(NULL, -2146186716, NULL) WHEN 0.2336466436610397 THEN ((0.7399262005807203) NOTNULL) WHEN LIKELIHOOD('.T', 0.5902487655437803) THEN ((NULL)IS NOT(NULL)) ELSE (('*QGD') ISNULL) END); -- 0ms;
SELECT ALL ((((((((COALESCE(rt0.c4, rt0.c2))OR(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 0.1446809609745474 END)))AND(x'a0be')))OR(GROUP_CONCAT(rt0.c2))))AND((((rt0.c1, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c0, rt0.c4))))) FROM rt0 ORDER BY ((((((((((((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))AND(((((rt0.c3)AND(x'')))AND(rt0.c3)))))OR((rt0.c1 IN (rt0.c4)))))AND(rt0.c1)))OR(((rt0.c3)&(rt0.c4)))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))))AND(((((rt0.c1)AND('F)')))AND(rt0.c4)))), x'0dc5' ASC; -- 0ms;
SELECT DISTINCT CAST((~ (rt0.c4)) AS INTEGER), (((COUNT(0.27274696533310716)))<=((COUNT(rt0.c3)))), ((0.1628616164497212) ISNULL) FROM rt0 WHERE (((((('P*l', 0.41293306511370764, '-1147650329'))>((0.9654366410107466, NULL, NULL)))) NOT BETWEEN (CASE WHEN NULL THEN NULL END) AND (((NULL)<>(0.17716223341065174))))); -- 0ms;
SELECT ALL (((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT (- ((NOT (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN 0.41631487817077906 END, ((rt0.c2) NOTNULL)))>((((rt0.c1)%(rt0.c1)), LIKELY(DISTINCT rt0.c2), ((rt0.c2)||(rt0.c4))))) FROM rt0 LIMIT 30709861; -- 0ms;
SELECT DISTINCT (- ((NULL IN ()))), ((CAST(rt0.c2 AS REAL))IS(ROUND(rt0.c3, rt0.c4))), FIRST_VALUE(CAST(rt0.c4 AS BLOB) COLLATE NOCASE) OVER (), NTH_VALUE(('' IN ()), COALESCE(((rt0.c1) IS FALSE), '-1509971284')) OVER (), ((TRIM(DISTINCT rt0.c1))IS(UNLIKELY(rt0.c4))) FROM rt0 WHERE (((((CAST(0.5224452142804257 AS BLOB))OR((0.5468677607169207 IN (-2071938106)))))AND(((('-329336908')) BETWEEN (('')) AND ((x'')))))); -- 0ms;
SELECT ALL TOTAL(CASE rt0.c1  WHEN x'' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END) FROM rt0 LIMIT 966561091; -- 0ms;
SELECT ALL RTRIM(((((rt0.c3)AND(rt0.c2)))AND('H'))), ((COUNT(*))*(rt0.c2 COLLATE RTRIM)), CAST(CAST(rt0.c4 AS TEXT) AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END FROM rt0 WHERE ((((0.4376926345421981, x'', '', '720598531', NULL)) NOT BETWEEN ((CAST(x'' AS NUMERIC), (('') IS TRUE), CAST('h삅p_' AS INTEGER), HEX(-784335398), (NOT (NULL)))) AND ((CASE WHEN 0.226803013072433 THEN NULL WHEN '1841883378' THEN 0.9709803517384122 WHEN '-784335398' THEN '*,' END, ((0.690949135596023)%(NULL)), '-1924527741' COLLATE BINARY, (NOT (x'')), TYPEOF(DISTINCT NULL))))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END)LIKE((rt0.c4 IN ()))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt0.c3)>>(rt0.c2))) NOT BETWEEN (((((rt0.c3)OR(rt0.c2)))AND(rt0.c2))) AND ((~ (rt0.c4)))) FROM rt0 WHERE ((((((((x'')AND(NULL)))OR(NULL))))>=((CAST(x'' AS INTEGER))))); -- 0ms;
SELECT '1354452492' FROM rt0 WHERE (((NULL)%(x'')) COLLATE RTRIM); -- 1ms;
SELECT ALL CASE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((rt0.c3)<(rt0.c1)) THEN ((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))OR('')))OR(rt0.c1)) ELSE ((('1432604449'))>=((rt0.c1))) END, (+ (((rt0.c2) NOTNULL))), ((0.8224727429051807)+(((rt0.c2)<=(0.6001890138095485)))) FROM rt0; -- 0ms;
SELECT CAST(((rt0.c4)!=('1948349316')) AS INTEGER) FROM rt0 WHERE ((((((((x'')AND('x)_lMk''[]㮯')))AND(NULL)), CASE WHEN '-1931760641' THEN 0.6397480400073906 ELSE x'' END, CASE '-1196786573'  WHEN 'p*l' THEN 0.7883400631086668 WHEN 0.8450270313018257 THEN '-784335398' WHEN NULL THEN 0X56db99ed WHEN 0X6f632661 THEN NULL WHEN 0.5053744735841097 THEN x'' WHEN -130806373 THEN '-1768602015' WHEN NULL THEN x'' END))=((((x'') NOT BETWEEN (x'cb57') AND (0.04303508334121864)), LIKE(1880122885, x''), CASE x''  WHEN '69616371' THEN 1.432604449E9 ELSE NULL END)))); -- 0ms;
SELECT DISTINCT CASE ((rt0.c4)<>(rt0.c1))  WHEN (rt0.c4 IN ()) THEN 0.5175453912660323 END, rt0.c3, rt0.c4 FROM rt0 WHERE (((((-1.924527741E9) IS FALSE)) NOT BETWEEN (((0.19039009955607844) NOTNULL)) AND (632818600 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT json_object(((rt0.c1)<(rt0.c0)), (((rt0.c2, rt0.c3, rt0.c1))==(('-42491421', rt0.c2, rt0.c3))), 0.7197631578878865 COLLATE BINARY, ((rt0.c3)IS NOT(''))) FROM rt0;SELECT (((rt0.c2)<<(rt0.c0)) IN (x'', ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))) FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))LIKE((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((NULL))))) DESC  NULLS LAST, ((- (rt0.c4)) IN (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END)); -- 0ms;
SELECT DISTINCT x'' FROM rt0 WHERE (CAST(CASE WHEN 0Xffffffffbafa3baf THEN 0.3774189336270757 WHEN x'' THEN NULL WHEN NULL THEN 0.5321485953323283 WHEN 0.20626741927914605 THEN '1448060669' WHEN x'' THEN 0.7952097838431175 ELSE x'' END AS NUMERIC)); -- 0ms;
SELECT ALL (AVG(rt0.c3) IN ()) FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c2, rt0.c0, rt0.c3))<=((rt0.c1, rt0.c4, rt0.c4)))) IS FALSE) FROM rt0 WHERE ((((0.044284550672712975, 0x5f13011b, x'')) BETWEEN (((((-1629009366, 9.0628371E7, '520399347')) NOT BETWEEN ((0.8958897463959924, NULL, '')) AND ((NULL, 0.20943054934952987, NULL))), (NULL IN ('1301459617')), '136753222' COLLATE RTRIM)) AND ((((x'')+(NULL)), CAST(x'2683' AS BLOB), CASE WHEN NULL THEN '-1509971284' ELSE 0.5897664619905677 END)))); -- 0ms;
SELECT TOTAL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT('-1924527741'), ((((rt0.c0) NOT NULL)) NOTNULL), ((((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c1) IS FALSE))))AND((((rt0.c1))=((rt0.c3))))))OR(0X42642f3)) FROM rt0 WHERE (CASE WHEN (('-E&..K\rn')/(x'b517')) THEN LIKELIHOOD(DISTINCT 0xffffffffe983a946, 0.7028099582425263) ELSE (- (0.77740024863214)) END); -- 0ms;
SELECT COUNT(*) OVER () FROM rt0 WHERE (UPPER(NULL COLLATE BINARY)); -- 0ms;
SELECT DISTINCT ROUND(((rt0.c3)<>('')), rt0.c1 COLLATE NOCASE) FROM rt0 WHERE (CASE WHEN ((0.688830324783504) NOT NULL) THEN CAST(NULL AS INTEGER) ELSE (('-784335398') BETWEEN (x'') AND (0.7840059731204507)) END); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED(CAST(rt0.c4 AS NUMERIC)) FROM rt0 WHERE (((((NULL) BETWEEN ('1532139022') AND ('0.10456314386308008')))>(CASE WHEN 0.19950056089156476 THEN '?lFOf*' ELSE x'' END))); -- 0ms;
SELECT ALL (((((((((rt0.c0 IN ()))OR(IFNULL(rt0.c1, rt0.c4))))AND(rt0.c2 COLLATE BINARY)))OR(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)))OR('95675312')) FROM rt0 WHERE (CAST(((0.7370047154131293)>=(0xffffffffec5eb7b4)) AS TEXT)); -- 0ms;
SELECT ((((CAST(rt0.c0 AS REAL))AND((rt0.c0 IN (rt0.c1)))))OR(rt0.c0)), LIKELY(((NULL) NOT NULL)), ((rt0.c2 COLLATE RTRIM)LIKE('-866837932')) FROM rt0 WHERE (((((0xffffffff8480bbc6)<=(x''))) NOT BETWEEN (((0.8351280852968503) ISNULL)) AND (CAST('B.Lw' AS NUMERIC)))); -- 0ms;
SELECT ALL (((rt0.c1)>(rt0.c1)) IN (AVG(rt0.c3))), ((CAST(rt0.c4 AS REAL))*(CASE WHEN 0.36682168006839344 THEN rt0.c4 WHEN rt0.c3 THEN x'0b3f' WHEN rt0.c1 THEN rt0.c4 END)), (((ROUND(rt0.c4, '-619046029'), (((rt0.c0, rt0.c0, rt0.c0))<((rt0.c2, rt0.c2, rt0.c4))), rt0.c1 COLLATE BINARY))<((SUM(rt0.c1), ((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c3)), (rt0.c3 IN ())))) FROM rt0; -- 1ms;
SELECT DISTINCT CAST(COUNT(*) AS REAL), CAST(AVG(rt0.c0) AS TEXT), ((((CAST(rt0.c2 AS REAL))AND((rt0.c3 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0 LIMIT 907711937; -- 0ms;
SELECT DISTINCT CAST((rt0.c4 IN ()) AS TEXT) FROM rt0 WHERE ((~ ((((((((('-2106068263')AND(x'')))OR(0.17704005197637307)))AND(NULL)))AND(0.688319465461065))))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN (((~ (rt0.c2)))) AND (((((rt0.c3, rt0.c4, rt0.c1))<>((rt0.c1, rt0.c0, rt0.c2)))))) FROM rt0 WHERE ((NOT ((('Ks~]L/oq')<<('525238519'))))); -- 0ms;
SELECT DISTINCT UPPER(((rt0.c1) IS FALSE)), (((((((((x'' IN ()))AND(((rt0.c3)IS NOT(rt0.c2)))))OR((((rt0.c3)) BETWEEN ((rt0.c4)) AND (('-1485557051'))))))AND(0.7722859172252076)))AND(rt0.c1)), ((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))/(rt0.c4)) FROM rt0 WHERE (((((0xfffffffffb07c085)IS('1119811505'))) IS TRUE)); -- 0ms;
SELECT ((CAST(rt0.c0 AS TEXT))OR(((((rt0.c3)OR('615893457')))OR(0.6071898246835865)))), (((((rt0.c3) NOT NULL), rt0.c1, ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))>=(((rt0.c0 IN (rt0.c2, rt0.c1)), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), (((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c4, 150044993, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c4)))))), ((((rt0.c3)<(rt0.c3)))|(rt0.c3)) FROM rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE (UPPER(CAST(NULL AS BLOB))) LIMIT -2110144508 OFFSET 1354452492; -- 0ms;
SELECT rt0.c1, (((rt0.c0 IN ()))-(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 END)), GROUP_CONCAT((rt0.c2 IN (''))) FROM rt0 WHERE (((CASE WHEN 0.17012162320694735 THEN NULL WHEN 0x2b1dd294 THEN x'6ad0' WHEN 0.39560349604641387 THEN '' END) ISNULL)); -- 0ms;
SELECT DISTINCT TOTAL(json_object(rt0.c3, rt0.c1)) FILTER(WHERE ((CAST(0.7745802653924143 AS INTEGER)) IS FALSE)) OVER ( PARTITION BY CAST(((rt0.c1)>=('+')) AS INTEGER), (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)), rt0.c0, ((((rt0.c0)AND(rt0.c0)))OR(x'6e40'))))=((((rt0.c0)<>(rt0.c2)), ((rt0.c4)+(rt0.c3)), ((rt0.c4)-(rt0.c2)))))) FROM rt0 WHERE ((+ (((NULL) ISNULL))));SELECT ALL ((COUNT(*))>(((rt0.c4)||(NULL)))), rt0.c0, (~ ('Ks~]L/oq')) FROM rt0 WHERE (((CASE WHEN NULL THEN -7.84335398E8 END)GLOB(CASE '0.9654366410107466'  WHEN x'' THEN 0.19966507256018295 ELSE NULL END))) LIMIT 25458657; -- 0ms;
SELECT DISTINCT HEX(DISTINCT rt0.c3 COLLATE RTRIM), ((rt0.c1 IN ()) IN ()), json_array_length(((rt0.c1)<>(rt0.c4)), '') FROM rt0 WHERE (CAST(((NULL)<('')) AS INTEGER)) GROUP BY (((((~ (rt0.c1)))OR(json_array_length(rt0.c0))))AND(rt0.c1 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT (((rt0.c1, rt0.c2, rt0.c4)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)), rt0.c3, ((rt0.c4)&(rt0.c4)))) AND ((((rt0.c3)=(rt0.c0)), ((rt0.c3) NOT NULL), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c4, (((((rt0.c0, rt0.c1, rt0.c3))>((rt0.c2, rt0.c1, rt0.c1))))>(0x64f033e0)), (((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((((rt0.c1) NOTNULL), rt0.c0 COLLATE BINARY, rt0.c4 COLLATE NOCASE)) AND ((((rt0.c0)<>(rt0.c2)), CAST(rt0.c4 AS REAL), (rt0.c2 IN ())))) FROM rt0; -- 0ms;
SELECT ALL NULLIF(((rt0.c4)-(rt0.c3)), rt0.c3) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(((((((((rt0.c0)OR(rt0.c0)))AND(-1099841351)))AND(rt0.c4)))OR(rt0.c1))), CAST(x'' AS INTEGER), (UPPER(NULL) IN (CAST(rt0.c3 AS REAL))), ((((rt0.c4) IS TRUE)) NOT BETWEEN (((rt0.c3)|(rt0.c4))) AND ((- (rt0.c1)))), ((((rt0.c3) ISNULL)) BETWEEN ((~ (rt0.c1))) AND (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 END)) FROM rt0 WHERE (CASE ((x'ab61') NOT NULL)  WHEN ((((((((0.07617992840792276)OR(NULL)))OR(-1.158005841E9)))OR(-627914670)))OR(x'')) THEN (NOT (0.9519350398042381)) END); -- 0ms;
SELECT rt0.c1 FROM rt0 WHERE (('0.7952097838431175' COLLATE BINARY IN ())); -- 0ms;
SELECT ALL rt0.c4, ((rt0.c2 IN ()) IN (TOTAL(rt0.c0))), IFNULL(DISTINCT ((rt0.c0)AND(rt0.c2)), ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3))) FROM rt0 ORDER BY rt0.c0 ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((((rt0.c2 IN ())))>((AVG('1457232365')))), rt0.c4, ((NULL COLLATE RTRIM) IS TRUE) FROM rt0 WHERE ((((NULL IN ())) ISNULL)); -- 0ms;
SELECT ALL SUM((rt0.c1 IN ())) OVER (), (- ('F)')), LEAD(((((rt0.c2)LIKE(rt0.c0)))|(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))), ((ABS(rt0.c2)) BETWEEN (x'' COLLATE BINARY) AND (((rt0.c2)OR(rt0.c1)))), CAST(6.15893457E8 AS INTEGER) COLLATE NOCASE) OVER () FROM rt0 WHERE (((('bpME\n') IS TRUE) IN ())); -- 0ms;
SELECT CAST((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN '1693463520' ELSE rt0.c4 END) OVER () FROM rt0 WHERE (LOWER(((x'198c') BETWEEN (0.3606722495072485) AND (-6.84216838E8)))); -- 0ms;
SELECT DISTINCT rt0.c1 COLLATE NOCASE, CASE WHEN (rt0.c3 IN (rt0.c0)) THEN ((rt0.c4)*(rt0.c2)) END, (~ (CAST(rt0.c3 AS NUMERIC))) FROM rt0 ORDER BY rt0.c3 DESC LIMIT 1868768865 OFFSET 1948349316; -- 0ms;
SELECT ALL ((MAX(rt0.c3))GLOB(((rt0.c3)|(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((((rt0.c0)-(rt0.c1))) NOTNULL), ((((rt0.c4)>=(rt0.c2))) NOT BETWEEN ((((rt0.c3))<=((rt0.c3)))) AND (MIN(rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((rt0.c4)OR(rt0.c4)) COLLATE NOCASE, ((((CAST(rt0.c4 AS BLOB))AND(CAST(rt0.c4 AS REAL))))AND(((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c4)))) FROM rt0 WHERE (((((((1532139022)%(x'')))OR(CAST(x'' AS BLOB))))OR(CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2) NOT NULL)) COLLATE NOCASE FROM rt0 ORDER BY (('' COLLATE NOCASE) BETWEEN ((((rt0.c1, rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c0, rt0.c2, rt0.c3)))) AND (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END)); -- 1ms;
SELECT ALL CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN (rt0.c0 IN ()) END FROM rt0; -- 0ms;
SELECT DISTINCT (((((((rt0.c2))>((rt0.c1))))OR(rt0.c2)))AND(rt0.c2)) FROM rt0 WHERE (((((((NULL)) NOT BETWEEN ((x'')) AND ((x'')))))>=((((((0.793811628180346)AND(NULL)))AND(NULL)))))); -- 0ms;
SELECT ALL ((rt0.c4 COLLATE BINARY)>>(0.21965406939173593)) FROM rt0 WHERE (((((x'') NOT BETWEEN (0x729007b3) AND (0.8729765914145254)))OR(((((1354357034)OR(x'')))OR(4.734382181681429E-5))))); -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)AND(((rt0.c1)=(rt0.c0)))))AND(rt0.c3)), (NOT (SUM(rt0.c0))), (HEX(DISTINCT rt0.c0) IN (x'')) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN ((~ (rt0.c0))) AND (x'bfb8')); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))LIKE((- (rt0.c0)))) FROM rt0 WHERE ((((x'', 0.9595692831317689, '⭐O')) BETWEEN (((('(D')%(NULL)), (~ ('69616371')), ((x'873d')LIKE('')))) AND ((CASE '2139280245'  WHEN '_' THEN x'' ELSE NULL END, (-1808992601 IN (NULL)), ((0.4019899041170597) NOT BETWEEN (x'') AND (x'')))))); -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((0X7caedaa5) IS FALSE))+((0.166924768254061 IN ('Jk䋳~t', '{}'))))); -- 0ms;
SELECT DISTINCT (NOT (((rt0.c2) IS TRUE))) FROM rt0 WHERE (0.3147466520577964); -- 0ms;
SELECT 0.5183548071205742 FROM rt0 WHERE ((((((NULL)&(0.06388142251863793)), ((0.5907482409458895)>>('p*< r<')), RTRIM(0.9750417957354618), ((x'') IS TRUE), (NOT (0x30ab4926))))<((CASE '836858776'  WHEN 0.38876424706004975 THEN '790803306' WHEN 0.47993937685348254 THEN x'' WHEN 0.5518575575226654 THEN 'f-[g+(r' ELSE x'' END, '0.17012162320694735', (('LNK)ꥆ釄')%(x'3a22')), NULL COLLATE NOCASE, ((x'a3c8')<>(0.509663342709595)))))) LIMIT 990865658; -- 1ms;
SELECT DISTINCT TOTAL(rt0.c4), ((CAST(rt0.c0 AS REAL)) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (0.16271114828324162)), (((NOT (rt0.c0)))>>((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))) FROM rt0 WHERE (CASE (('-1402655920') BETWEEN (969274053) AND (-329336908))  WHEN CAST(0.558746172956574 AS BLOB) THEN (~ (x'2517')) WHEN ((((x'')OR(0.033371439486040266)))AND(NULL)) THEN (x'' IN ()) WHEN (((0xffffffff8cc2d75e))<(('-1e500'))) THEN (NULL IN ()) WHEN (((x'', 'v', ''))<((NULL, NULL, 0.3527348274101403))) THEN (0.7528205380858458 IN ()) WHEN ((x'')AND(0.556088369475946)) THEN CAST(0.029390450669820156 AS INTEGER) END); -- 0ms;
SELECT ALL SUM(((((rt0.c2)AND(rt0.c1)))AND(0Xffffffff8a288f25))) OVER (), CAST('-1489969040' AS NUMERIC), 0.3147466520577964 FROM rt0 WHERE ((((((((((('ws*?⺆Ov')AND(NULL)))AND((((0Xffffffffd13ffdda))>((NULL))))))AND(((0xfffffffff7ad8530)/(x'')))))AND((- (0.6429040120408879)))))OR((((''))>(('1934291161')))))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE NOCASE ASC  NULLS LAST, ((rt0.c2 IN (rt0.c0)) IN ())  NULLS LAST; -- 0ms;
SELECT CAST(rtreenode(rt0.c3, 0Xffffffffab70b8b1) AS BLOB) FROM rt0 WHERE ((((1.922041779E9)&(x'8d73aabd')) IN ())); -- 0ms;
SELECT ALL SUM(CAST(rt0.c2 AS BLOB)) OVER (), (((('-1158005841') BETWEEN (rt0.c0) AND (rt0.c4))) IS FALSE), ((CAST(rt0.c4 AS INTEGER)) IS FALSE) FROM rt0; -- 0ms;
SELECT CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1)AND(rt0.c0)) THEN MAX(rt0.c3, rt0.c2) WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN CAST(rt0.c3 AS INTEGER) WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c3 AS TEXT) WHEN ((rt0.c3)*(-6.84216838E8)) THEN (rt0.c2 IN (NULL)) ELSE (rt0.c2 IN ()) END, AVG(((rt0.c1)OR(rt0.c4))) OVER (), COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL NTILE((((((rt0.c4))<=((rt0.c1)))) IS TRUE)) OVER ( ROWS ((((((((rt0.c4)OR(rt0.c0)))OR('722387007')))AND((rt0.c0 IN ()))))AND(((rt0.c2)||(rt0.c1)))) PRECEDING EXCLUDE CURRENT ROW) FROM rt0;SELECT ALL LOWER(DISTINCT CASE WHEN NULL THEN rt0.c1 END) FROM rt0 WHERE (LOWER(DISTINCT ('-619046029' IN ()))); -- 1ms;
SELECT ALL RANK() OVER () FROM rt0; -- 0ms;
SELECT (((rt0.c2 IN ())) NOT BETWEEN ((~ (rt0.c4))) AND ((rt0.c3 IN ()))), ((TOTAL(rt0.c2)) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((rt0.c2 IN ()))), ((SUM(rt0.c3))<>(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0 GROUP BY (((rt0.c2 IN ()))GLOB(rt0.c4)) HAVING ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))))<=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))))); -- 0ms;
SELECT DISTINCT (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c4)))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)GLOB(rt0.c4)))OR(0.627417581549503)))OR(((rt0.c3)%(rt0.c2)))) FROM rt0 GROUP BY (rt0.c2 IN ()); -- 0ms;
SELECT ALL AVG(0.659584264561995) FROM rt0 LIMIT -1953432333 OFFSET -784335398; -- 0ms;
SELECT DISTINCT HEX(NULLIF(DISTINCT rt0.c1, rt0.c4)) FROM rt0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN ((- (NULL))) AND ((('') BETWEEN ('') AND ('1239480448'))))); -- 0ms;
SELECT ALL CAST(((((((((rt0.c3)OR(rt0.c1)))AND(NULL)))OR(rt0.c0)))AND(rt0.c4)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c4)/(rt0.c0))))>((((rt0.c2)GLOB(rt0.c4))))) FROM rt0 INTERSECT SELECT DISTINCT CAST((((rt0.c0))=((rt0.c3))) AS REAL) FROM rt0; -- 0ms;
SELECT (NOT (rt0.c3 COLLATE BINARY)) FROM rt0 ORDER BY (((rt0.c1, 0.8443660232426682, rt0.c0)) BETWEEN ((((rt0.c1)<>(rt0.c4)), ((rt0.c3)AND(rt0.c4)), '}-hdD')) AND ((((rt0.c3)%(rt0.c0)), ((((rt0.c4)OR(NULL)))OR(rt0.c4)), ((rt0.c3) ISNULL)))); -- 1ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((NULL) NOT BETWEEN (0.6354242793942363) AND ('')), ((x'89ed')GLOB('++')), CAST(0.39396780129192277 AS INTEGER)))=(((- (x'')), (((('-1489969040')OR(0.21965406939173593)))AND(x'')), TIME('p*< r<', x'e6d7', -2.106068263E9))))) GROUP BY rt0.c0, CASE (NOT (rt0.c3))  WHEN json_extract(rt0.c4, rt0.c3) THEN (rt0.c3 IN ()) ELSE ((((rt0.c2)OR(0.1717484264099104)))AND(rt0.c3)) END, 1.914291886E9 HAVING ((GROUP_CONCAT(rt0.c4)) NOTNULL) ORDER BY CAST(((rt0.c3)<=(rt0.c2)) AS REAL)  NULLS LAST, ((rt0.c2 COLLATE RTRIM) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (rt0.c0)) DESC  NULLS FIRST, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY  NULLS LAST; -- 0ms;
SELECT ALL CASE rt0.c2  WHEN rt0.c4 THEN '' END FROM rt0 WHERE (((0X64cdc4f6) NOT NULL) COLLATE NOCASE) LIMIT 1969303014; -- 0ms;
SELECT DISTINCT ((((rt0.c2)+(rt0.c4))) BETWEEN (CAST(rt0.c4 AS REAL)) AND (((rt0.c2) NOTNULL))) FROM rt0; -- 0ms;
SELECT ((((rt0.c4) NOT NULL)) NOTNULL), ((CAST(rt0.c1 AS INTEGER))OR((- (rt0.c4)))), ('816531750' IN ()), ((((NULL) IS TRUE))|(COUNT(rt0.c4))), (((- (rt0.c4))) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1) IS FALSE) IN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))), '#m\n鸣A', (((x'809a969c')<<(rt0.c4)) IN ()), CAST(rt0.c0 COLLATE RTRIM AS REAL), ((GROUP_CONCAT(rt0.c0))>>(CASE rt0.c4  WHEN NULL THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c2 END)) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c3)) NOT BETWEEN (((rt0.c4 IN (NULL)), CAST(rt0.c2 AS REAL), ((rt0.c4)&(rt0.c3)), NULL, (rt0.c2 IN (rt0.c2)))) AND ((rt0.c4, SUM(NULL), ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)), ((NULL)IS NOT(rt0.c3)), CASE WHEN rt0.c3 THEN rt0.c2 END))) FROM rt0; -- 0ms;
SELECT ALL LENGTH(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))) FROM rt0 ORDER BY ((ABS(1446884727)) NOT BETWEEN ((((rt0.c0, rt0.c3, rt0.c0))==((rt0.c3, '<4', rt0.c0)))) AND ((((rt0.c4))>=((rt0.c2))))); -- 0ms;
SELECT DISTINCT NTILE('-377247418') OVER ( PARTITION BY CAST(CAST(rt0.c0 AS REAL) AS NUMERIC), (('1354357034')/((((rt0.c4, rt0.c4, rt0.c3))<(('-666863732', rt0.c3, rt0.c2)))))) FROM rt0 WHERE (CASE CASE WHEN x'51cb' THEN 'sD&Ys>' END  WHEN '' THEN ((NULL)||(0.8571530261855393)) WHEN (('556783312')IS NOT(x'')) THEN (((x'7094', '&', NULL)) BETWEEN ((NULL, 1.301459617E9, '-565050519')) AND ((NULL, '*,', NULL))) WHEN CASE x'77cc'  WHEN '\r' THEN x'' END THEN ((0Xffffffff9b5bce51)>>(0.9029004450693543)) ELSE 0Xffffffffcc9cb27c END);SELECT (((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) IN ()) FROM rt0 WHERE ((x'' IN (((0.5067888146823892) NOT NULL)))); -- 0ms;
SELECT DISTINCT NULL, (((NOT (rt0.c4))) IS TRUE), CASE WHEN ((rt0.c0) IS TRUE) THEN COUNT(*) ELSE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END END FROM rt0; -- 0ms;
SELECT ALL CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END COLLATE NOCASE FROM rt0 WHERE ((- ((~ (0.5651087785527776))))) GROUP BY (('Jk䋳~t')=(rt0.c3 COLLATE BINARY)), CASE ((rt0.c0)IS NOT(rt0.c3))  WHEN TYPEOF(rt0.c2) THEN (rt0.c3 IN (rt0.c3)) END, rtreenode(((rt0.c0)IS(rt0.c2)), rt0.c3 COLLATE RTRIM) HAVING CAST(TOTAL(rt0.c1) AS BLOB); -- 0ms;
SELECT HEX(DISTINCT CAST(rt0.c2 AS INTEGER)) FROM rt0 LIMIT -223900182 OFFSET -1731855027; -- 1ms;
SELECT 334326949 FROM rt0 WHERE (((TRIM('H'))<((((((((('1119811505')OR(x'49f4')))AND(x'5566')))AND('->')))OR(NULL))))) LIMIT 938365314; -- 0ms;
SELECT ALL COUNT(((0.45372655172940957) BETWEEN (rt0.c4) AND (rt0.c2))) OVER () FROM rt0 WHERE (((((((((((x'') BETWEEN ('?u') AND ('1914291886')))OR((('2F[ᙻe,v') NOT BETWEEN (x'0c03') AND (0.6071898246835865)))))AND(((NULL) ISNULL))))AND(((-2097756993) BETWEEN (NULL) AND ('1447307726')))))AND((0.40296577809540557 IN ())))); -- 0ms;
SELECT ALL ((x'')+(rt0.c1)) FROM rt0 WHERE ((((('')LIKE('-2110144508')))LIKE((((x'')) BETWEEN ((x'')) AND (('-1509071883')))))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)>(rt0.c2)))&(CAST(rt0.c4 AS NUMERIC))) FROM rt0 WHERE (CAST((('') BETWEEN (NULL) AND ('-1122533482')) AS NUMERIC)); -- 0ms;
SELECT (+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0; -- 0ms;
SELECT rt0.c2, CUME_DIST() OVER (), (~ ('0.06388142251863793')) COLLATE RTRIM FROM rt0 WHERE ((((NOT (x'')))=((((('b')OR('0.5175453912660323')))AND('-1670446522'))))); -- 0ms;
SELECT LAG((rt0.c0 IN ()) COLLATE BINARY, CASE WHEN (rt0.c4 IN (rt0.c4, rt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN ((rt0.c3) BETWEEN (rt0.c0) AND ('-1408795217')) THEN CASE WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c1) IS TRUE) THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN '-L#' END END, UNLIKELY(DISTINCT ((rt0.c2)=(rt0.c0)))) OVER () FROM rt0 WHERE (CASE WHEN ((x'') NOT NULL) THEN ((x'')>=('1589070075')) WHEN CAST(x'c93f' AS REAL) THEN ((x'')*(x'5a86')) WHEN ('SHf' IN ()) THEN ((x'')&('''獶')) WHEN ((NULL)<>(NULL)) THEN NULL WHEN (0.7044004939138272 IN (NULL, NULL)) THEN ((0.9119474874266541) BETWEEN ('0.7883400631086668') AND (NULL)) ELSE highlight(NULL, x'3480', NULL, NULL) END) ORDER BY CAST(rt0.c3 AS NUMERIC)  NULLS LAST; -- 0ms;
SELECT ALL ((rt0.c0)<(rt0.c3)) COLLATE RTRIM FROM rt0 WHERE (''); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(x'9c7a9b9d' AS INTEGER)) OVER ( ORDER BY (('gi') NOT BETWEEN ((+ (rt0.c3))) AND ('')), ((0.8686964897564458)>=(rt0.c2)) COLLATE BINARY ASC) FROM rt0; -- 0ms;
SELECT ALL CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC) FROM rt0 WHERE ((- ('2f[ᙻe,v' COLLATE BINARY))) LIMIT -1 OFFSET -1196551106; -- 0ms;
SELECT ALL ((CASE WHEN rt0.c4 THEN rt0.c3 END)>((NOT (rt0.c4)))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT ALL (~ (rt0.c1)) FROM rt0; -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY ((((NULL)OR((+ (rt0.c0)))))AND(NULL))), (~ (NULL)), (LOWER(rt0.c2) IN ()) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c2 COLLATE RTRIM) BETWEEN (((rt0.c1)<(rt0.c2))) AND (((rt0.c3) IS FALSE))), CAST('548096271' AS INTEGER), CAST(((rt0.c4) NOTNULL) AS NUMERIC) FROM rt0; -- 0ms;
SELECT SQLITE_SOURCE_ID() FROM rt0; -- 0ms;
SELECT ALL (+ ('')) FROM rt0; -- 0ms;
SELECT SUM(rt0.c3) OVER () FROM rt0; -- 0ms;
SELECT CAST(((((rt0.c4)OR(rt0.c1)))AND(rt0.c0)) AS TEXT) FROM rt0 LIMIT 572998930 OFFSET 1326093270; -- 0ms;
SELECT DISTINCT AVG((NOT (rt0.c1))) OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt0; -- 1ms;
SELECT DISTINCT ((rt0.c0 COLLATE NOCASE)/(LIKELY(DISTINCT rt0.c1))) FROM rt0 GROUP BY json((((rt0.c4, rt0.c3, rt0.c0))==((rt0.c1, 0.6370999600849141, rt0.c0)))), ((((905305744)-(rt0.c4))) NOT BETWEEN (TIME(rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c4 IN ()))), LIKELIHOOD((((x'')) BETWEEN ((rt0.c4)) AND ((rt0.c2))), 0.5241572288234994) HAVING GROUP_CONCAT((rt0.c3 IN ())); -- 0ms;
SELECT ALL (((rt0.c4 IN (rt0.c3)))%(((((rt0.c3)AND(-2.022386832E9)))AND(rt0.c1)))) FROM rt0 WHERE (((((x'9b00')>=(x'52db'))) NOT BETWEEN (((x'')||(NULL))) AND ((+ ('1532139022'))))); -- 0ms;
SELECT DISTINCT TYPEOF((rt0.c2 IN (rt0.c4, 0x338442a5))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((rt0.c2)/(rt0.c2)) COLLATE NOCASE FROM rt0 WHERE (((((0.40619238733595475)<=('0.033371439486040266')))<(((((NULL)OR(x'')))OR(0.7613035289018972))))); -- 0ms;
SELECT (((((((((rt0.c3 IN (rt0.c3)))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))))OR(((rt0.c1)<<(rt0.c0)))))AND(((rt0.c4)OR(rt0.c4)))))OR(1755240410 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DENSE_RANK() OVER (), ((rt0.c3 COLLATE RTRIM)LIKE((((rt0.c3, rt0.c4, rt0.c2))<=((rt0.c3, rt0.c2, rt0.c4))))), CASE rt0.c1 COLLATE NOCASE  WHEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN COUNT(rt0.c3) END FROM rt0 WHERE (NULL); -- 0ms;
SELECT ALL CAST(((rt0.c4)>=(rt0.c4)) AS INTEGER), rt0.c0, ((CAST(rt0.c2 AS REAL))>(CASE WHEN rt0.c0 THEN '	꛽+' WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)) FROM rt0; -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c0 AS TEXT))AND(((rt0.c1) BETWEEN ('kP') AND (rt0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)) FROM rt0 WHERE ((((((0.17308189937828544, 0.3127293400762291, NULL)) NOT BETWEEN (('-408292606', NULL, -860122705)) AND ((NULL, 'hF', NULL)))) NOT BETWEEN ('1969303014') AND (((((NULL)OR(NULL)))OR(' M<(jpG'))))); -- 1ms;
SELECT ALL COUNT(*), (((((((((rt0.c0 IN (rt0.c0)))AND(TYPEOF(rt0.c0))))OR(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c2 AS TEXT))))AND(CAST(rt0.c4 AS BLOB))), ((CAST('1763975538' AS NUMERIC)) NOT BETWEEN (COUNT(*)) AND (((rt0.c3)LIKE(rt0.c4)))), CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN SUM(rt0.c3) WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c4 AS INTEGER) WHEN (rt0.c3 IN ()) THEN ((rt0.c1)GLOB(rt0.c4)) END, ((NULL)<<((NULL IN ()))) FROM rt0 WHERE (CAST(CASE 'Tt'  WHEN x'6c61' THEN '723374740' WHEN 0.46212879873261026 THEN 794791662 WHEN '찶-' THEN -1688482223 WHEN NULL THEN '-2146186716' WHEN NULL THEN '' END AS REAL)); -- 0ms;
SELECT CAST(rt0.c3 COLLATE NOCASE AS REAL) FROM rt0 WHERE (((((((-2132500753)AND('Fk')))OR(NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT TYPEOF(COUNT(*)) FROM rt0 WHERE (CAST((('-1409622065') IS FALSE) AS TEXT)) ORDER BY ((((x'') NOT NULL)) NOTNULL); -- 0ms;
SELECT ALL ((json_array(rt0.c3, rt0.c1)) NOTNULL), (- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))), ((CAST(rt0.c0 AS REAL)) BETWEEN (MAX(rt0.c1)) AND (((rt0.c0)AND(rt0.c1)))) FROM rt0 WHERE ((((NULL, x'' COLLATE NOCASE, ((((0.6458481951948758)OR('tY1%')))AND(-1933387938))))<=((((x'') IS FALSE), ((((0.09947038169192335)OR(NULL)))OR('iF99''K1')), -1927422314)))); -- 0ms;
SELECT (NOT ((- (rt0.c0)))), '-1931760641', ((((x'') NOTNULL)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((rt0.c1)) BETWEEN ((NULL)) AND ((1800157195))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((COUNT('-1489969040')) IS FALSE) FROM rt0 WHERE (((((NULL IN (0.35192482966054484)), CAST('*QGD' AS BLOB), ((x'f740') NOT BETWEEN (x'') AND (0.2462237163508828)), (('u-,혙8OIh') NOTNULL), CASE WHEN x'' THEN 0.9056277359252363 END))!=((CAST('-223900182' AS INTEGER), ((NULL)=('1334415812')), ((0.12174888762190417) ISNULL), '', ((x'7e67') NOT BETWEEN ('*p') AND (x'')))))) ORDER BY ABS(DISTINCT (((NULL, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c4)) AND ((rt0.c0, rt0.c3, rt0.c3)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT rt0.c3))<=(rt0.c0)) FROM rt0; -- 0ms;
SELECT ALL 0.7745802653924143 FROM rt0 WHERE ((((((0.17012162320694735)/(''))))>=(((((NULL, NULL, 0.4019899041170597))==((x'', x'', NULL))))))); -- 0ms;
SELECT (((((rt0.c0, rt0.c1, rt0.c4))<=((rt0.c2, rt0.c4, rt0.c1))))>=(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))), (((NOT (rt0.c2)))*(((NULL)*(0.23826434222951498)))), COALESCE(DISTINCT (rt0.c3 IN ()), ((rt0.c1) IS FALSE)) FROM rt0 GROUP BY ((((rt0.c0)%(rt0.c1)))>=((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))); -- 0ms;
SELECT ((((rt0.c0 COLLATE RTRIM)OR(MAX(rt0.c0))))OR(CAST(rt0.c4 AS TEXT))) FROM rt0 WHERE ((((((x'') NOT BETWEEN (0.6976542194260518) AND ('')), ((NULL)>=(0.39801833487555593)), (NULL IN ('++', NULL))))>=((LIKE('799126512', 0X4f8991c4), UNLIKELY(210193251), 0xffffffffdb952ec3 COLLATE NOCASE)))); -- 0ms;
SELECT ALL RANK() OVER (), x'', COUNT(x'') FROM rt0 WHERE (CASE (NULL IN ())  WHEN ((x'') BETWEEN ('l/H') AND ('136753222')) THEN (NOT ('\LLc&aG')) END) ORDER BY CASE WHEN ((((rt0.c4)OR(rt0.c4)))OR(rt0.c3)) THEN (- (rt0.c4)) END; -- 0ms;
SELECT DISTINCT (((MAX(rt0.c0)))<((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) BETWEEN ('1609842746' COLLATE NOCASE) AND (NULL)) FROM rt0; -- 0ms;
SELECT ALL COUNT(*), ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))) NOT NULL), ((((rt0.c0)AND(((rt0.c4)<<('i\r')))))AND(((rt0.c1)&(x'')))) FROM rt0 LIMIT 1190482397; -- 0ms;
SELECT DISTINCT rt0.c1, CASE rt0.c0  WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0)|(NULL)) END, ((rt0.c2)-(rt0.c2 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL((((rt0.c0, rt0.c4, rt0.c1)) BETWEEN ((rt0.c4, rt0.c3, rt0.c1)) AND ((rt0.c4, 'wL\n4(bJQ', rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0, (NOT (NULL)), LEAD(((((rt0.c1)>>(rt0.c0)))>>((- (rt0.c3)))), CAST(rt0.c0 COLLATE NOCASE AS REAL), ((((rt0.c0)GLOB(rt0.c3))) IS TRUE)) OVER (), MIN(((rt0.c3)OR(rt0.c0))), rt0.c1 FROM rt0; -- 0ms;
SELECT (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN ()) FROM rt0 WHERE (((((((((((((x'021d')AND('1319553435')))OR(0.3518329171418729)))OR('ogQB')))OR(NULL)))AND(((NULL) BETWEEN ('pb棺') AND (x'')))))OR(((NULL) NOT BETWEEN (NULL) AND (0.3527348274101403))))); -- 0ms;
SELECT GROUP_CONCAT((((rt0.c2, rt0.c3, rt0.c4))=((rt0.c1, rt0.c2, x'')))) OVER (), ((((((((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))AND(NULL)))OR(rt0.c0)))AND(((rt0.c4)&(rt0.c3)))))AND(CAST(rt0.c1 AS REAL))))OR(CAST(rt0.c1 AS REAL))))AND(CASE -1172484242  WHEN rt0.c2 THEN rt0.c0 END)), ((MIN(rt0.c4))>>((rt0.c3 IN (NULL)))), ((((rt0.c2)>>(rt0.c2)))<=(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)), ((rt0.c1) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)) FROM rt0; -- 0ms;
SELECT DISTINCT (((0.688830324783504) BETWEEN (rt0.c1) AND (rt0.c4)) IN (MIN(rt0.c3))), GROUP_CONCAT(SQLITE_COMPILEOPTION_GET(rt0.c2)) OVER ( PARTITION BY (x'2361' IN ()), CASE WHEN (('945877138') NOTNULL) THEN ((rt0.c3)+(rt0.c0)) WHEN rt0.c3 THEN ((((rt0.c3)OR(rt0.c4)))AND(rt0.c3)) WHEN json_array_length(rt0.c0, rt0.c2) THEN ((rt0.c4) BETWEEN (rt0.c1) AND ('')) END), TOTAL(rt0.c3) OVER (), CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB), (((rt0.c3)) NOT BETWEEN ((AVG(rt0.c0))) AND ((rt0.c1 COLLATE NOCASE))) FROM rt0 WHERE (((CASE WHEN '112318623' THEN x'' ELSE x'9639' END)-(((x'')<<(NULL))))); -- 0ms;
SELECT DISTINCT CAST(rt0.c3 AS REAL) COLLATE RTRIM FROM rt0 GROUP BY rt0.c3 HAVING ((rt0.c4) NOT NULL) COLLATE NOCASE ORDER BY rt0.c0; -- 0ms;
SELECT DISTINCT (x'' IN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c1) NOTNULL)) ISNULL), RANK() OVER (), (((rt0.c4)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN 'v}4g	P8(' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) AND ((x''))) FROM rt0 WHERE ((((((x'' IN ()))AND(((NULL) NOT NULL))))OR(((x'')>(0.4687963434483283))))); -- 0ms;
SELECT DISTINCT (('')<<('25458657')), x'cdff', TRIM(DISTINCT NULL) COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL CAST(TYPEOF(0.21983518817157466) AS NUMERIC) FROM rt0 WHERE (((0.2729341855245889 IN ('-1688482223')) IN ())); -- 0ms;
SELECT DISTINCT LAST_VALUE((((NOT (rt0.c3)))<<(NULL))) OVER () FROM rt0 WHERE (((('-523733295')) BETWEEN ((((NULL)||('*T')))) AND ((((x'') IS FALSE))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) ISNULL))GLOB(((rt0.c3) ISNULL))), ((((NOT (rt0.c3))))>(((- (rt0.c1))))), ((((((rt0.c3) IS FALSE))AND(CAST(rt0.c1 AS REAL))))OR(CAST('632818600' AS REAL))), rt0.c1, SUM((NOT (rt0.c2))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CAST(COALESCE(rt0.c4, rt0.c4) AS NUMERIC) FROM rt0 WHERE (0X18477e1); -- 0ms;
SELECT DISTINCT NTILE(((rt0.c4) IS TRUE)) OVER (), rt0.c1, CAST(((rt0.c0)<=(rt0.c0)) AS TEXT) FROM rt0;SELECT DISTINCT ((((((((CAST(rt0.c4 AS NUMERIC))AND(((((rt0.c2)AND(rt0.c2)))OR(NULL)))))OR(TOTAL(rt0.c3))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST(rt0.c4 AS NUMERIC))) FROM rt0 WHERE (((((1.119811505E9) IS FALSE))>>((((x'f314', x'21d8', 0.6494250109361065, '-1057559660', NULL)) NOT BETWEEN ((754199744, -441263877, 0.793811628180346, 0.056189997397459224, NULL)) AND ((0.23509140148250152, 0.8195368919992966, 'JhVn', 'L', x'cd29')))))) LIMIT 615893457; -- 0ms;
SELECT ALL '	~~sTj5LY' FROM rt0 WHERE (CAST(CASE WHEN 0.19966507256018295 THEN -4.08292606E8 WHEN -1808992601 THEN 0.5932648765846411 WHEN '#g{ꥆ[U9y' THEN NULL ELSE x'' END AS BLOB)); -- 0ms;
SELECT DISTINCT CASE (((rt0.c3))=((rt0.c4)))  WHEN TRIM(DISTINCT rt0.c4) THEN ((rt0.c1)>>(rt0.c1)) WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 END THEN (NOT (rt0.c4)) WHEN (rt0.c4 IN (rt0.c0)) THEN CASE 'Ke4NE/'  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c2 END END FROM rt0 WHERE (CAST((~ (0.029390450669820156)) AS TEXT)); -- 1ms;
SELECT DISTINCT (((rt0.c0))<(((((rt0.c3, rt0.c1, rt0.c4))<=((rt0.c3, rt0.c4, rt0.c0)))))) FROM rt0 WHERE ((((NULL)>=(0.540943026842699)) IN ())) GROUP BY CASE UPPER(DISTINCT rt0.c1)  WHEN ((rt0.c2)-(rt0.c3)) THEN (rt0.c1 IN ()) WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE 'wgFX223' END WHEN (+ (rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) ELSE ((rt0.c0)&(rt0.c0)) END, CASE WHEN ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)) THEN rt0.c3 END, x''; -- 0ms;
SELECT DISTINCT COUNT(LIKELIHOOD(DISTINCT rt0.c0, 0.3355619756198587)) FROM rt0 GROUP BY (- ('맴}V%T7m縝1')), ((((rt0.c1)<(rt0.c0)))IS NOT((((rt0.c3))=((rt0.c2))))), NULL; -- 0ms;
SELECT ALL (rt0.c4 IN ()) FROM rt0 WHERE ((((x'')&(-1808992601)) IN ())); -- 0ms;
SELECT CASE WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c3) NOTNULL) WHEN COUNT(rt0.c4) THEN CAST(rt0.c2 AS TEXT) WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)OR(rt0.c2)) ELSE (rt0.c1 IN ()) END, ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END)OR(HEX(DISTINCT NULL))))OR(CAST(rt0.c2 AS REAL))), (((x'')%(rt0.c0)) IN (((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))), (+ (rt0.c0)) COLLATE BINARY, (((CAST(rt0.c4 AS REAL)))>=((CAST(rt0.c3 AS TEXT)))) FROM rt0 WHERE ((((((''))<((NULL)))) BETWEEN (SQLITE_VERSION()) AND (TYPEOF(DISTINCT NULL)))) LIMIT 1941040016; -- 0ms;
SELECT ALL (+ ((rt0.c1 IN (rt0.c1)))) FROM rt0 WHERE (((LIKELIHOOD('-103376027', 0.670466649779088))*((+ (0.3404255347821544))))); -- 0ms;
SELECT LAST_VALUE(((((rt0.c4)LIKE('-1770418618'))) ISNULL)) OVER (), (~ (rt0.c2)), ((load_extension(rt0.c0, rt0.c2)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (LTRIM(rt0.c1, rt0.c2))) FROM rt0;SELECT DISTINCT (((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, (((rt0.c2))<((rt0.c2))), (NOT (rt0.c3)), CAST('-477985368' AS BLOB), ((rt0.c0)/(rt0.c2)))) AND ((CASE WHEN rt0.c0 THEN NULL ELSE x'' END, (((rt0.c4, rt0.c2, rt0.c2, rt0.c1, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c1, rt0.c1, rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)||('顥')), (- (rt0.c3))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0) BETWEEN (x'8444') AND (rt0.c1)) COLLATE NOCASE FROM rt0 WHERE ((NULL IN ())); -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE RTRIM)OR(TYPEOF(DISTINCT rt0.c0))) FROM rt0 WHERE ((NOT ((((NULL)) BETWEEN ((x'bf59')) AND ((0.8672441516861032)))))) ORDER BY ((CAST(rt0.c3 AS REAL)) NOT BETWEEN ((((rt0.c3, rt0.c3, rt0.c1))>((rt0.c4, rt0.c1, rt0.c2)))) AND ((rt0.c1 IN ())))  NULLS LAST; -- 0ms;
SELECT (((((NOT (rt0.c4)))OR((+ (rt0.c1)))))OR(((rt0.c1) NOT NULL))), CUME_DIST() OVER (), NTH_VALUE(MIN(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c3) NOT NULL)), CASE ((((rt0.c1)AND(rt0.c3)))OR(rt0.c0))  WHEN LIKELY(0.19714337450017294) THEN rt0.c3 COLLATE NOCASE ELSE (rt0.c2 IN ()) END) OVER (), (((((rt0.c2)OR(0x34a4d035)))AND(rt0.c0)) IN ()), ((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)>('-179760571')) FROM rt0 WHERE (((x'') NOT NULL) COLLATE BINARY);SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOTNULL) FROM rt0 WHERE ((+ (CASE WHEN 0.17716223341065174 THEN 0.030781303491118184 WHEN 0.11028372694921185 THEN x'e7b3' WHEN NULL THEN '966561091' WHEN x'' THEN x'd6c6' WHEN 0.9221730582692479 THEN -6.19046029E8 ELSE 0.4457609896609074 END))); -- 0ms;
SELECT ALL CASE WHEN (+ (rt0.c4)) THEN (rt0.c4 IN (rt0.c4)) ELSE (rt0.c3 IN ()) END FROM rt0; -- 0ms;
SELECT DISTINCT (~ (rt0.c2 COLLATE NOCASE)), COUNT(*), CAST(((rt0.c2)OR(rt0.c2)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT ((((rt0.c0) NOT NULL))|(((rt0.c1) NOT NULL))) FROM rt0; -- 0ms;
SELECT ALL (((+ (rt0.c4))) BETWEEN (load_extension(rt0.c1, rt0.c4)) AND (((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))) FROM rt0;SELECT (rt0.c0 IN ()) FROM rt0 NOT INDEXED WHERE ((NOT (CAST(x'' AS BLOB)))); -- 1ms;
SELECT ALL (((+ (rt0.c3)))&(('-316307406' IN (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((((- (rt0.c4)))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))))OR(rt0.c2)) FROM rt0 WHERE (((0.1840631635934843)LIKE((('189648359')-('%ؖqC'))))); -- 0ms;
SELECT ALL (AVG(rt0.c3) IN ()), ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c4) ISNULL))))OR(rt0.c3)))OR(((rt0.c3) NOT NULL))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))), (~ (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))) FROM rt0 GROUP BY (((+ (rt0.c0))) IS FALSE) HAVING rt0.c4; -- 0ms;
SELECT ALL CAST(((rt0.c1)&(rt0.c2)) AS NUMERIC) FROM rt0 WHERE (TRIM(DISTINCT ((x'')=('짃')))); -- 0ms;
SELECT ALL (((0.41388509839373366 IN ())) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2))) AND (CAST(rt0.c4 AS REAL))) FROM rt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0 GROUP BY (- (json(rt0.c3))), (((((x'9eb1') NOT NULL), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)), ((rt0.c1)GLOB(rt0.c0)), (rt0.c0 IN ()), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))<((((rt0.c4)OR(rt0.c1)), ((rt0.c4)&(rt0.c3)), highlight(rt0.c2, rt0.c1, rt0.c2, -1385388001), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c3)<(rt0.c0))))), ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (json_type(NULL)) AND (((rt0.c3)IS NOT(rt0.c3)))) HAVING 'O03婷|g' ORDER BY ((CASE rt0.c2  WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)-(CASE WHEN 0.8132788283134672 THEN rt0.c2 END)) ASC  NULLS LAST LIMIT -669527711 OFFSET 632818600; -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c4, CASE WHEN 0.10674323680436237 THEN rt0.c3 ELSE rt0.c0 END, (~ (rt0.c0)))) AND ((((rt0.c3)=(rt0.c0)), CAST(rt0.c1 AS REAL), (+ (rt0.c1))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL)) IS TRUE), ((NULL) IS FALSE), (((((rt0.c3 IN ()))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(rt0.c0)) FROM rt0 WHERE ((((NULL, '', '0g\%w}|4')) BETWEEN ((COALESCE('1457232365', 0.292862714861467), ((NULL) IS TRUE), ((NULL) IS FALSE))) AND ((CASE WHEN '-1220230172' THEN NULL WHEN '1891037538' THEN 0Xffffffff870741c1 WHEN 0.77740024863214 THEN 0xffffffffe983a946 END, ((-1.227888588E9)<<('-2073147961')), (('-1274666357')>=(NULL)))))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt0 WHERE (NULL); -- 1ms;
SELECT DISTINCT json_array_length(rt0.c3, ((rt0.c0) IS TRUE)) FROM rt0;SELECT ALL ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END)%(CASE rt0.c0  WHEN rt0.c3 THEN 'U' ELSE rt0.c4 END)) FROM rt0 GROUP BY CASE ((rt0.c2)+(rt0.c0))  WHEN rt0.c2 COLLATE BINARY THEN ((((0.5594567676068368)AND(rt0.c0)))AND(rt0.c0)) WHEN (NOT (rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c0 END WHEN LIKE(rt0.c0, rt0.c0) THEN ((rt0.c3)>=(rt0.c0)) ELSE ((rt0.c3)<=(rt0.c1)) END HAVING ((((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)OR('l[7)lUW(~')))AND(MAX(rt0.c1))); -- 0ms;
SELECT ALL ((rt0.c1) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (NULL))) AND ((- (rt0.c0)))) FROM rt0 WHERE (((RTRIM(NULL)) NOT BETWEEN (((((0.892932257170294)OR('s칑鏸3\')))AND('836858776'))) AND (((('')) NOT BETWEEN ((x'')) AND (('(d')))))) ORDER BY NULLIF(rt0.c2, ((rt0.c1)*(rt0.c2))) ASC LIMIT -749085988; -- 0ms;
SELECT DISTINCT (((NULL)) BETWEEN ((((rt0.c0)<=(NULL)))) AND ((((('203866981'))>=((rt0.c0)))))) FROM rt0; -- 0ms;
SELECT ALL ((((((rt0.c1)AND(NULL)))OR(rt0.c3))) IS FALSE), ((((LIKELIHOOD(rt0.c1, 0.8559874030086271))OR((+ (rt0.c3)))))AND(((((rt0.c2)OR('-1990196987')))OR(0.5807134807540397)))), (((rt0.c4 IN ()))LIKE(((rt0.c4)+(rt0.c3)))) FROM rt0 LIMIT -2146186716; -- 0ms;
SELECT DISTINCT (NOT (MIN(rt0.c4))) FROM rt0 WHERE (((((NULL) NOT BETWEEN (0.6459080594681744) AND (0.19950056089156476))) NOT BETWEEN (x'' COLLATE BINARY) AND (LTRIM(x'', 0.05433034695160954)))) LIMIT -1651402950 OFFSET -1134898495; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0; -- 0ms;
SELECT ALL ((((CAST(rt0.c4 AS TEXT))AND(CAST(rt0.c3 AS REAL))))AND(((rt0.c3) IS FALSE))) FROM rt0 GROUP BY NULL, CAST((NOT (rt0.c1)) AS TEXT), json_extract(CASE rt0.c0  WHEN x'797e' THEN rt0.c2 END, NULL); -- 0ms;
SELECT ALL ((rt0.c0 IN ()) IN (load_extension(rt0.c3))) FROM rt0 LIMIT -677346821;SELECT (((((rt0.c4, rt0.c3, rt0.c3))<=((rt0.c0, NULL, rt0.c1)))) BETWEEN ((rt0.c4 IN ())) AND (((rt0.c0) NOT NULL))) FROM rt0 WHERE (((((-1e500) NOTNULL)) NOT BETWEEN (CASE NULL  WHEN x'' THEN x'065dfa09' WHEN 'iF99''K1' THEN NULL WHEN '-1' THEN '' END) AND (((NULL) ISNULL)))); -- 1ms;
SELECT ALL SUM(CAST(rt0.c3 AS REAL)) FROM rt0 WHERE (CAST(LIKELY(DISTINCT x'') AS INTEGER)); -- 0ms;
SELECT DISTINCT ((json_object(NULL, rt0.c0))!=(rt0.c3)) FROM rt0 WHERE ((((((x''))>((x'')))) ISNULL)); -- 0ms;
SELECT ALL ((x'')>(NULL)) FROM rt0 ORDER BY (~ (rt0.c2)); -- 0ms;
SELECT DISTINCT ((-2.23900182E8)IS(rt0.c0)) FROM rt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)!=(rt0.c4)))<>(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))<('m\r%(')), ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))*(NULL)), x'', (((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN (((+ (rt0.c0)), ((0Xffffffffadb08b4f)-(rt0.c1)), CAST(rt0.c0 AS NUMERIC))) AND ((((((rt0.c3)AND(rt0.c4)))AND(rt0.c3)), ((rt0.c4) ISNULL), (rt0.c2 IN ())))), RANK() OVER ( ORDER BY CAST(rt0.c4 COLLATE RTRIM AS BLOB), (~ ((rt0.c0 IN (rt0.c4))))  NULLS FIRST) FROM rt0; -- 0ms;
SELECT LAG('-1977053403', (('-815328239')%(rt0.c0)) COLLATE NOCASE, (((rt0.c2 COLLATE RTRIM, '-1418676047', ((x'') NOT NULL)))<=((((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)), ((('l[7)lUW(~'))>=((NULL))), ((rt0.c2) NOTNULL))))) OVER ( ORDER BY ((((rt0.c0) BETWEEN (x'') AND (rt0.c0))) IS TRUE) ASC  NULLS FIRST, ((-900672789 COLLATE NOCASE)==(CAST(rt0.c1 AS BLOB)))) FROM rt0 WHERE ((+ ((((((((('-1220230172')AND('95675312')))OR(NULL)))OR('v_,')))AND(0.5224452142804257))))); -- 1ms;
SELECT DISTINCT CASE rt0.c2  WHEN (((rt0.c0))>=((rt0.c2))) THEN ((rt0.c1) NOT NULL) WHEN SUM(x'') THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) WHEN ((rt0.c0)||(rt0.c3)) THEN (~ (rt0.c2)) WHEN '150044993' THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN rt0.c0 COLLATE NOCASE THEN MIN(rt0.c1) ELSE ((NULL) NOT NULL) END FROM rt0 WHERE ((((IFNULL('0.8224727429051807', '-565050519'), ((0.9116201719996639) IS TRUE), (((((((('1334415812')AND('1301459617')))OR(x'16c9')))OR(NULL)))OR(NULL))))>(((('#1䋳w')==('>')), 0.20626741927914605, (('') NOTNULL))))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( PARTITION BY (((~ (rt0.c0))) NOT BETWEEN (-1e500) AND (CAST(rt0.c3 AS REAL))), (((rt0.c1 IN ()))>>(((rt0.c1) NOT BETWEEN (rt0.c4) AND (x''))))) FROM rt0 WHERE (((((0.6699269830539536) ISNULL))<=(((NULL)*(1587194097))))); -- 0ms;
SELECT DISTINCT (((rt0.c3 IN ())) BETWEEN (((rt0.c1)LIKE(rt0.c0))) AND ('990865658')) FROM rt0 WHERE (json_array((x'' IN (x'', 37486815)), ((0.25796224656375133)IS NOT(x'')), MIN('', x'effd'), NULL)); -- 0ms;
SELECT DISTINCT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED(((rt0.c3)IS NOT(x''))) FROM rt0; -- 0ms;
SELECT 0.47993937685348254, rt0.c3, (rt0.c3 COLLATE NOCASE IN ()), IFNULL(((rt0.c1) NOTNULL), MAX(rt0.c4)), COUNT(*) COLLATE NOCASE FROM rt0 ORDER BY ((((NOT (rt0.c1))))<((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))  NULLS FIRST, json_extract((((rt0.c3)) BETWEEN ((rt0.c1)) AND (('1432604449'))), (~ ('1074216891')))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((rt0.c2)>(rt0.c2))))<((LOWER('1661283974')))), (~ (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)), rt0.c3 COLLATE BINARY FROM rt0 WHERE (TYPEOF(LTRIM('~.#*Iz&Pk'))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1) NOT NULL))OR((- (rt0.c4)))))OR((rt0.c4 IN ()))), NTILE(rt0.c1) OVER ( GROUPS  CURRENT ROW EXCLUDE TIES), MAX(((((((((rt0.c3)OR('')))AND(x'')))AND('918227067')))OR(rt0.c3))) FROM rt0;SELECT DISTINCT CAST((NOT (rt0.c0)) AS INTEGER), (((+ (rt0.c3)))<>(HEX(rt0.c3))), CASE ((((rt0.c3)AND(rt0.c4)))OR(rt0.c0))  WHEN rt0.c4 THEN ((0.03658094904577869) ISNULL) ELSE ((rt0.c2) NOT NULL) END FROM rt0; -- 0ms;
SELECT DISTINCT 0.5336584547873039 FROM rt0 GROUP BY (((((rt0.c2)&(rt0.c2)), rt0.c2, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c4))), ((0x2b0ec03f)%(-6.84216838E8)), rt0.c2, (('-1629009366') NOT BETWEEN (rt0.c3) AND (rt0.c0)), (- (rt0.c3))))>=(((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c4))), CAST(rt0.c0 AS NUMERIC), (rt0.c1 IN ()), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 END, ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))OR(NULL)))AND(rt0.c3)), (rt0.c0 IN (0.9834278153978493, rt0.c0))))) HAVING 0.3984687692509289; -- 0ms;
SELECT DISTINCT (NOT ((- (rt0.c3)))) FROM rt0 WHERE (CASE ((-1.825281481E9)IS(''))  WHEN (('')-(NULL)) THEN CASE 'Je'  WHEN NULL THEN NULL END ELSE ((1661283974)>=(0.6600807685590123)) END); -- 0ms;
SELECT DISTINCT ((('723374740' COLLATE NOCASE))==(((rt0.c4 IN ())))), ((((CAST(rt0.c4 AS TEXT))AND(TRIM(DISTINCT rt0.c4, rt0.c4))))AND(((rt0.c2) IS FALSE))), CASE WHEN ((rt0.c4) ISNULL) THEN ((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c3)) END, load_extension(((rt0.c0)<<(rt0.c2))), ((((((('A9')AND(rt0.c0)))AND(rt0.c0)), NULL, (((rt0.c4))>((NULL))), rt0.c3 COLLATE NOCASE, CASE WHEN rt0.c4 THEN rt0.c0 END))>((rt0.c3 COLLATE NOCASE, ((0.6292447718805185)<(rt0.c1)), CAST(rt0.c2 AS REAL), CAST(rt0.c4 AS INTEGER), (((rt0.c4, rt0.c4, rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c3, '-594372406', rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c4)))))) FROM rt0 WHERE (UPPER(DISTINCT json_extract(NULL, NULL, NULL, 0Xfffffffff7c81602))); -- 0ms;
SELECT (- (((rt0.c3) NOT BETWEEN ('1536387852') AND (rt0.c0)))), ((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c4)OR(rt0.c0)))AND(rt0.c1))) AND (((rt0.c3)/(rt0.c2)))), SUM(((rt0.c3)-(NULL))) OVER (), (((rt0.c1)) BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c0 COLLATE RTRIM))), ((rt0.c3 COLLATE BINARY)GLOB(CAST(rt0.c4 AS REAL))), COUNT(((rt0.c4)+(NULL))) FILTER(WHERE (((((((((('0.5468677607169207')OR(rt0.c3)))OR((rt0.c4 IN ()))))AND(COALESCE(DISTINCT rt0.c3, '-890118815', rt0.c3, rt0.c0))))AND(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))))OR((rt0.c1 IN ())))) OVER (), COUNT(((rt0.c0)AND(rt0.c1))) OVER () FROM rt0; -- 1ms;
SELECT DISTINCT (((((((((- ('-1099841351')))AND(CAST(rt0.c4 AS TEXT))))OR(((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))))OR(((0.971991779330383)|(rt0.c2)))))AND(((rt0.c3)!=(rt0.c1)))) FROM rt0 WHERE (((((((((('g}w茍')OR('R''|G')))AND('-9223372036854775808')))AND('1969303014')))AND(0.26065731771668454)) IN ())); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((rt0.c3) IS FALSE)) FROM rt0 WHERE (((((0Xffffffff92217e7d)GLOB('aT'))) NOT NULL)); -- 0ms;
SELECT ALL ((0.4492927325386472)||(rt0.c2)) COLLATE RTRIM FROM rt0 WHERE (LOWER(DISTINCT ((((((((x'e20a')AND(NULL)))AND(NULL)))OR(NULL)))OR(x'')))); -- 0ms;
SELECT ALL ((((GROUP_CONCAT(rt0.c3))OR(((rt0.c2)AND(rt0.c1)))))OR((((-154648302))<>((rt0.c1))))), -1.30806373E8, (+ ((rt0.c1 IN ()))) FROM rt0 ORDER BY CAST('XC' AS NUMERIC) ASC  NULLS FIRST, rt0.c1  NULLS FIRST; -- 0ms;
SELECT ALL SUM(((rt0.c0)<(rt0.c4))), ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))AND((rt0.c4 IN ()))))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END)), UPPER(rt0.c3 COLLATE BINARY) FROM rt0 WHERE (((((CASE WHEN 0.17081468994171967 THEN x'' WHEN x'' THEN '\''' WHEN NULL THEN x'' ELSE NULL END)AND(((NULL) NOT BETWEEN ('-1768602015') AND ('')))))AND((('-565050519') NOTNULL)))); -- 0ms;
SELECT DISTINCT ABS(x''), CAST(MIN(rt0.c0) AS REAL), CASE ((((rt0.c0)OR(rt0.c3)))AND(x''))  WHEN (~ (NULL)) THEN ((NULL)*(rt0.c2)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END FROM rt0 WHERE (((((('990865658'))<((x'4df7'))))<(((NULL) IS TRUE)))) LIMIT 480866660 OFFSET 1354452492; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) NOTNULL), ABS(DISTINCT rt0.c2) COLLATE NOCASE, ((((rt0.c0) NOTNULL)) BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c0) IS TRUE))) FROM rt0 LIMIT 297890038; -- 0ms;
SELECT (NOT ((rt0.c0 IN (rt0.c1, rt0.c0)))) FROM rt0 WHERE ((~ ((('>da_+n鲸')*(''))))); -- 0ms;
SELECT DISTINCT rt0.c3 COLLATE BINARY FROM rt0 WHERE (CASE WHEN (NOT (x'0acf')) THEN (('HA듼3') NOT NULL) ELSE (((((((('䨪Q88ᜬT')AND(0.16271114828324162)))AND(NULL)))OR(NULL)))OR(0Xffffffffc23af3cc)) END); -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN NULL THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c2) AND (0.17002992589010746))) AND ((rt0.c0 IN ()))) FROM rt0; -- 0ms;
SELECT (((+ (rt0.c2)))IS(CAST(rt0.c0 AS NUMERIC))) FROM rt0 WHERE (((STRFTIME('', NULL, '1693463520'))IS NOT((+ ('1379218896'))))) LIMIT -1962254357 OFFSET -115232; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((rt0.c1)=(rt0.c0)))OR((rt0.c4 IN (rt0.c1))))) OVER ( PARTITION BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 END)|(DATETIME(rt0.c2, rt0.c3, rt0.c3))), ((((rt0.c0)|(rt0.c3)))>>(((rt0.c2)|(rt0.c3))))) FROM rt0 WHERE (((('2023312477')) NOT BETWEEN (('790803306' COLLATE BINARY)) AND ((COALESCE(NULL, NULL))))); -- 0ms;
SELECT ALL LOWER(TRIM(DISTINCT rt0.c4)) FROM rt0; -- 0ms;
SELECT LAST_VALUE(CASE (((rt0.c1, rt0.c3, rt0.c2)) BETWEEN ((rt0.c1, rt0.c4, NULL)) AND ((rt0.c1, rt0.c1, rt0.c1)))  WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 COLLATE BINARY END) OVER () FROM rt0 GROUP BY ((((rt0.c3) IS FALSE)) IS FALSE), (rt0.c4 IN ()), 0.36242009398623753, (((((rt0.c0)) BETWEEN ((rt0.c2)) AND (('-2106068263'))))+(rt0.c1)), ((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))GLOB((((rt0.c4))>((NULL))))); -- 0ms;
SELECT (((~ (rt0.c4)))>>(0.5468677607169207)) FROM rt0 GROUP BY CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2) NOT NULL) THEN CASE WHEN -96936007 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN '-1600496353' END END, CASE WHEN (rt0.c0 IN (rt0.c0)) THEN TRIM(rt0.c4) WHEN rt0.c0 THEN ((rt0.c4)<(rt0.c2)) WHEN rt0.c3 THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c4)) END, (('冱*G-S') BETWEEN (((rt0.c1)<=(rt0.c0))) AND (rt0.c2 COLLATE RTRIM)) HAVING ((x'')&((rt0.c4 IN ()))); -- 0ms;
SELECT COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM rt0; -- 0ms;
SELECT (((((rt0.c4) NOT BETWEEN (x'') AND (rt0.c3))))=((((rt0.c4)AND(rt0.c1))))) FROM rt0 WHERE (((NULL)IS NOT(((('871498403'))>(('-9065620')))))); -- 0ms;
SELECT DISTINCT CAST((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) AS TEXT) FROM rt0; -- 0ms;
SELECT ALL json_array_length(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3))), CAST(((rt0.c4) NOT BETWEEN (x'') AND ('')) AS NUMERIC), UNLIKELY(((rt0.c4) IS FALSE)) FROM rt0 WHERE ((- (UPPER(DISTINCT '-759236747')))); -- 0ms;
SELECT DISTINCT ((((((((LOWER(rt0.c1))OR((NOT (rt0.c0)))))OR(MAX('⭐o'))))AND(((rt0.c2)AND(rt0.c3)))))OR(((rt0.c3)<(rt0.c4)))), ((((((((((722387007) NOT NULL))AND((rt0.c0 IN (rt0.c2)))))AND(rt0.c4 COLLATE RTRIM)))OR(IFNULL(rt0.c2, rt0.c1))))AND((((rt0.c4)) NOT BETWEEN ((0.8729765914145254)) AND ((rt0.c3))))), PRINTF(((rt0.c3)<>(rt0.c0))) FROM rt0 WHERE (CAST(CAST('' AS BLOB) AS REAL)); -- 0ms;
SELECT DISTINCT (((((rt0.c3 IN ()))AND(load_extension(rt0.c1))))OR(((((((((rt0.c2)AND(NULL)))OR('.>')))OR(rt0.c2)))AND(rt0.c3)))), DENSE_RANK() OVER (), ((GROUP_CONCAT(rt0.c2))%(((rt0.c3)<(rt0.c2)))) FROM rt0 LIMIT 1894696558 OFFSET -2071938106; -- 0ms;
SELECT DISTINCT ((CAST('TRUE' AS REAL)) IS FALSE), (((((rt0.c1))<((rt0.c4)))) NOTNULL), (((rt0.c3)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c1)IS NOT(rt0.c0))))) FROM rt0 WHERE (((((924648965)<=(x''))) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END AS REAL) FROM rt0; -- 0ms;
SELECT TYPEOF(rt0.c3) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE ('1247558701'); -- 0ms;
SELECT DISTINCT ((((((((CAST(x'd9ee' AS NUMERIC))AND(rt0.c2)))AND(json_array_length(rt0.c1, rt0.c2))))AND(((rt0.c1)>>(rt0.c2)))))OR(rt0.c3 COLLATE NOCASE)) FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE);SELECT DISTINCT TOTAL(((rt0.c0)OR(NULL))), (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0x42642f3))))IS NOT(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN x'' THEN rt0.c1 ELSE rt0.c4 END)), (((rt0.c2)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((((rt0.c0)||(rt0.c0))))) FROM rt0 WHERE ((((x'4803')&('1354452492')) IN (CAST('l/H' AS TEXT), (x'53b5' IN ())))); -- 1ms;
SELECT DISTINCT TYPEOF(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END), (((~ (rt0.c1)))<(CAST(rt0.c0 AS REAL))), ((((rt0.c0)IS NOT(rt0.c3)))OR((((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3)>=(rt0.c2)) COLLATE BINARY, FIRST_VALUE(CASE WHEN CASE rt0.c2  WHEN x'' THEN x'5798' END THEN ((((((((rt0.c4)AND(rt0.c2)))AND(x'')))OR(0.8881684259133737)))AND(rt0.c3)) ELSE ((rt0.c2)<=(rt0.c3)) END) OVER (), MAX(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN ((('') BETWEEN (rt0.c0) AND (0.6929685687798351))) AND ((~ (rt0.c4)))) FROM rt0 WHERE (((CASE WHEN x'27ee' THEN '1354452492' END)>=(CASE '-684216838'  WHEN 0X6924fae2 THEN '' END))); -- 1ms;
SELECT (((((rt0.c3)AND(rt0.c2)))OR(rt0.c4)) IN (((rt0.c2)IS(rt0.c2)), MIN(rt0.c3))), (- (((rt0.c4)%(rt0.c1)))), rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT SUM(((rt0.c4) IS TRUE) COLLATE NOCASE) OVER () FROM rt0 GROUP BY ((LIKELIHOOD(0X9ae1226, 0.39738678972343133))<=(((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))) HAVING ((((rt0.c4) NOT NULL)) NOT BETWEEN (rt0.c4) AND (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))); -- 1ms;
SELECT rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c3 COLLATE NOCASE  WHEN ((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c4)) THEN ((rt0.c3)<(7.2337474E8)) END FROM rt0 WHERE (CAST(((0.07617992840792276)==(1063450457)) AS REAL)); -- 0ms;
SELECT DISTINCT CAST(0.23063148541277279 AS REAL) FROM rt0 ORDER BY (+ ('q}')) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c4)OR(rt0.c2)))>=('386769073')) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4)<=(((rt0.c2)<=(rt0.c0)))) FROM rt0 GROUP BY '0.6555776441030141', ((((((rt0.c1)AND('')))OR(rt0.c3))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((('-2061344708')IS(rt0.c0)))), CAST(((rt0.c3)IS(rt0.c1)) AS NUMERIC), UPPER(DISTINCT (((rt0.c2, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((-1572627973, rt0.c0, rt0.c2)))), CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c3)<<(rt0.c3)) WHEN CASE WHEN rt0.c4 THEN rt0.c3 END THEN rtreenode(rt0.c4, '-1509971284') WHEN TRIM(rt0.c4) THEN x'' ELSE (((rt0.c2))!=((rt0.c1))) END; -- 0ms;
SELECT DISTINCT UNLIKELY((rt0.c3 IN (rt0.c0, 0.1284085863009522))), SUM(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3))) OVER ( PARTITION BY ((((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)OR(CAST('-565050519' AS REAL))))OR(((rt0.c4)-(rt0.c1)))), (((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)) IN ())), (~ (((rt0.c2) NOT NULL))) FROM rt0 WHERE ((((((((0x3e48b19a))<>((0.6331428306075639))))AND(CASE WHEN x'' THEN x'1b9b' END)))OR(((('L/	'))<>(('w>F\nw3')))))); -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END IN ()), CHANGES(), ((((rt0.c1)-(rt0.c0))) NOT BETWEEN ((((rt0.c2, rt0.c2, 0.6252434502880754))<=((rt0.c0, rt0.c3, rt0.c2)))) AND (((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT NTILE(rt0.c3) OVER () FROM rt0 WHERE (CAST(NULL COLLATE BINARY AS REAL)) LIMIT 1334415812; -- 0ms;
SELECT SUM(CASE rt0.c2  WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END), ((((rt0.c0 IN ())))<>((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END))), CASE WHEN (((rt0.c2, rt0.c0, rt0.c4))!=((rt0.c4, rt0.c3, rt0.c2))) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)) WHEN ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c0)) THEN rt0.c4 WHEN (((rt0.c1, rt0.c0, rt0.c4)) NOT BETWEEN (('-1134033137', rt0.c3, rt0.c2)) AND ((x'', rt0.c3, rt0.c4))) THEN ((((rt0.c4)OR(rt0.c3)))OR(rt0.c2)) ELSE MIN(rt0.c3) END FROM rt0 WHERE (((((CAST(0.8350928077916926 AS TEXT))AND(CASE NULL  WHEN '' THEN '' ELSE 0Xffffffffc60091af END)))OR(((0.06388142251863793)*(NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2)OR('0g\%w}|4')) ELSE rt0.c2 COLLATE RTRIM END, TOTAL(((rt0.c1)<(rt0.c0))), MIN((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((x'')))) FROM rt0 WHERE (CAST(NULL COLLATE NOCASE AS BLOB)) LIMIT -1768602015 OFFSET 90628371; -- 0ms;
SELECT DISTINCT (((((((((((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))OR((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))AND((~ (rt0.c2)))))AND(rt0.c1 COLLATE BINARY)))AND(LOWER(rt0.c4))))OR(((rt0.c1)|(rt0.c4)))))OR(((rt0.c2) IS TRUE))) FROM rt0 WHERE (((('-536574322' COLLATE NOCASE))==(((x'' IN ()))))) ORDER BY (((((rt0.c2))<((rt0.c1)))) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND ((~ (0.9909591791185368)))) ASC, rt0.c1 ASC; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE WHEN 0.630602697420475 COLLATE BINARY THEN CASE '-1099841351'  WHEN x'f8ec' THEN 0.2782926118990182 END ELSE ((((((((NULL)AND(NULL)))OR('\*')))OR(x'872f')))AND('')) END) LIMIT -1147650329; -- 1ms;
SELECT (((rt0.c4 IN (rt0.c2)))-((((rt0.c0))<=((rt0.c4))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE BINARY)<(((((rt0.c0)AND(0.13813923930075556)))OR(rt0.c1)))) FROM rt0 WHERE (((x'175c') NOT NULL)) LIMIT 1428998861 OFFSET 428478635; -- 0ms;
SELECT ALL (((CAST(rt0.c4 AS REAL)))<=((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0))))), GROUP_CONCAT(((rt0.c0)>=(rt0.c4))), LEAD(TRIM(DISTINCT ((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)), (rt0.c1 IN ())), ((((((((CAST(rt0.c3 AS REAL))OR(((rt0.c1)||(rt0.c4)))))OR((- (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c1)))OR(NULL)))))OR(rt0.c0)), json_array_length(0.6438467223445496, LIKELIHOOD(rt0.c4, 0.5682788214197382))) OVER () FROM rt0 WHERE (((('605996401')) BETWEEN ((0.38876424706004975)) AND ((((1577202411)%(x'')))))) ORDER BY (((rt0.c3)+(rt0.c1)) IN ())  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((rt0.c3)<(rt0.c0)) COLLATE RTRIM FROM rt0 WHERE (((((((((((NULL) NOTNULL))OR(CASE NULL  WHEN 2139280245 THEN 0.6382034847442285 END)))AND('')))OR('1653544419' COLLATE RTRIM)))OR(('m^#w' IN (NULL))))) GROUP BY ((rt0.c1) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))); -- 0ms;
SELECT ALL 554672079 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((CAST(rt0.c3 AS REAL)))), ((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))AND(((rt0.c1) NOTNULL))))AND(IFNULL(DISTINCT rt0.c1, rt0.c3))) FROM rt0 WHERE (LIKELIHOOD(CASE WHEN -1308111121 THEN 0.9523590721553122 END, 0.1450062254381883)); -- 0ms;
SELECT ((rt0.c3) NOTNULL) COLLATE RTRIM, rt0.c3, (+ ((~ (rt0.c1)))) FROM rt0 WHERE ((((-1629009366, '1246954759', 'Jz', x'', '덪O17J')) NOT BETWEEN (((~ ('1921143779')), ((2110654350)>>(0.8583566353147145)), ((x'') IS TRUE), '167654578', (((0.22492140313737163)) NOT BETWEEN (('794791662')) AND ((x''))))) AND ((0.6461492299872066, ((NULL)>(x'')), (((NULL, 0Xfffffffffb776a31, 990865658)) NOT BETWEEN (('2088199891', '30709861', '''''')) AND ((x'cc8fb674', NULL, '1305008375'))), (('1145949370')OR(NULL)), CAST('F,J' AS BLOB))))); -- 0ms;
SELECT (~ ((+ (rt0.c0)))) FROM rt0 WHERE (ABS(NULL COLLATE BINARY)); -- 0ms;
SELECT DISTINCT CASE WHEN (NOT (rt0.c3)) THEN x'' ELSE CAST(rt0.c2 AS INTEGER) END, COUNT((+ (rt0.c3))), ((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) COLLATE RTRIM FROM rt0 WHERE ((NOT (CASE WHEN '8oT!MqQG' THEN NULL END))) GROUP BY ABS(((rt0.c0) ISNULL)), (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) IN ()), CASE WHEN 0.8351280852968503 THEN rt0.c2 COLLATE BINARY WHEN rt0.c1 THEN CAST(rt0.c4 AS NUMERIC) WHEN (((rt0.c0))>=((rt0.c4))) THEN ((rt0.c3) IS TRUE) END; -- 0ms;
SELECT ALL AVG((((0.33216230572650285, rt0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c1, 0.9781701978292533)) AND (('ﳳ8', rt0.c3, rt0.c2)))), MAX(MAX(NULL, rt0.c1)), (~ (((rt0.c3)+(rt0.c3)))) FROM rt0 WHERE (((x'' COLLATE BINARY)AND(((((x'c8f7')AND('794791662')))AND('-1089330874'))))); -- 0ms;
SELECT rt0.c2 FROM rt0 LIMIT 408035202; -- 0ms;
SELECT ((rt0.c4) NOT NULL), LAST_VALUE(((((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c0)))AND(CASE WHEN rt0.c4 THEN '' ELSE rt0.c1 END)))OR(((0.3774189336270757) IS FALSE))))OR(TOTAL_CHANGES())))OR(((0.5491022152922952) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) OVER ( PARTITION BY (rt0.c3 COLLATE RTRIM IN ()), ((((rt0.c4, rt0.c1, rt0.c0))==((rt0.c4, rt0.c1, rt0.c2))) IN ())), rt0.c1 FROM rt0 WHERE (((((x'') ISNULL))%(((NULL)IS NOT(x''))))); -- 0ms;
SELECT ((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)) COLLATE NOCASE FROM rt0 WHERE (0X3b22cbf2 COLLATE RTRIM); -- 0ms;
SELECT ALL ((rt0.c3)AND(rt0.c4)), (('-1196786573') IS TRUE), LAST_VALUE(load_extension(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) OVER (), ((((rt0.c4) IS TRUE)) NOTNULL), rt0.c4 FROM rt0 WHERE (((((('*,')OR(NULL)))OR(-1748989684)) IN (CAST(NULL AS BLOB), CAST(x'' AS TEXT)))) LIMIT -196497550; -- 1ms;
SELECT DISTINCT CAST(ABS(rt0.c1) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT (((((((((((('TRUE')OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))OR((rt0.c1 IN ()))))OR(rt0.c4 COLLATE NOCASE)), -6.84216838E8, GROUP_CONCAT(((0.10905668227751808) BETWEEN (rt0.c0) AND (rt0.c3))) FROM rt0 GROUP BY SQLITE_VERSION(); -- 0ms;
SELECT (+ (SUM(rt0.c3))) FROM rt0 WHERE (CASE ((('985366113')) NOT BETWEEN ((0.9466814849515853)) AND (('-792922498')))  WHEN (((('1210643992')AND(1693463520)))OR('3xL')) THEN CASE WHEN x'9316' THEN 0.36289078039013534 ELSE NULL END END) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END)) AND ((rt0.c1))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL x'e359' FROM rt0; -- 0ms;
SELECT DISTINCT AVG((('') BETWEEN (rt0.c2) AND (rt0.c0))) OVER (), ((((rt0.c4)-(rt0.c2))) IS FALSE), (+ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 END)) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c4)+(rt0.c4)) AS NUMERIC) FROM rt0 WHERE (CAST(((((0.7708371022229012)AND(x'')))AND(1501953296)) AS REAL)); -- 0ms;
SELECT DISTINCT CAST('-271845644' AS REAL) FROM rt0 WHERE ((((('	~~stj5ly') BETWEEN (0.8240266154235399) AND (0xffffffffc9d4b6b1)))AND(LIKELY(DISTINCT 0.3385172362341963)))) LIMIT 1446884727 OFFSET 1331911996; -- 0ms;
SELECT ALL LAST_VALUE(rt0.c1) OVER () FROM rt0 WHERE (((CAST(0.7767729428766649 AS INTEGER))<=(((NULL) NOT BETWEEN ('UM.&f_Ys2') AND (NULL))))); -- 1ms;
SELECT ((RTRIM(rt0.c1))||(rt0.c0 COLLATE BINARY)) FROM rt0 WHERE (((0.26045058256886644)GLOB('-895518363' COLLATE RTRIM))) GROUP BY LOWER(((rt0.c2)IS NOT(rt0.c1))) HAVING CASE 'c{伨pZy'  WHEN (~ (rt0.c1)) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) WHEN ((rt0.c0)/(rt0.c2)) THEN COALESCE(rt0.c4, rt0.c3) END; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))) BETWEEN (SUM(rt0.c0)) AND (((rt0.c3)=(rt0.c2)))) FROM rt0 WHERE (CAST(NULL AS REAL)); -- 0ms;
SELECT DISTINCT 0.25748539586956254, LOWER(DISTINCT CAST(rt0.c1 AS REAL)), CAST(((rt0.c3)IS NOT(rt0.c4)) AS BLOB) FROM rt0 GROUP BY CASE x'0603'  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (((0.7125702100259124, '1974328774', rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c4, rt0.c1))) ELSE ((rt0.c1) IS FALSE) END; -- 0ms;
SELECT DISTINCT TOTAL(CASE rt0.c1  WHEN '' THEN rt0.c4 END) OVER (), ((((((rt0.c4)OR(rt0.c3)))AND(rt0.c1))) ISNULL), CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)) THEN IFNULL(DISTINCT rt0.c4, rt0.c1) ELSE -1.7976931348623157E308 END FROM rt0 LIMIT 53645395 OFFSET -324248958; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS INTEGER) COLLATE RTRIM FROM rt0 WHERE (load_extension(((NULL) BETWEEN (0Xffffffff8429dc0f) AND (0.29828381131293347)), HEX(0.20943054934952987))) ORDER BY ((((((rt0.c1)<(rt0.c2)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND((+ (rt0.c4)))) DESC  NULLS FIRST;SELECT rt0.c4 FROM rt0; -- 0ms;
SELECT ALL (TOTAL(rt0.c3) IN ()) FROM rt0 WHERE ((NOT ((((x'', '0N', 'u9(猘37욮')) BETWEEN (('\LLc&aG', '0.9750417957354618', NULL)) AND ((NULL, '8^9Qbu*>''', x'')))))); -- 0ms;
SELECT ALL ((NOT (0.7516881783112599)) IN ()) FROM rt0 WHERE (x'') LIMIT -759236747; -- 1ms;
SELECT DISTINCT ((((rt0.c4)==('-1977370322'))) BETWEEN (TOTAL(rt0.c1)) AND (CHAR(rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c3 IN ()) COLLATE NOCASE FROM rt0 WHERE (((((0.12702957022732542))=((NULL))) IN ())); -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT rt0.c0))LIKE(rt0.c1)), TRIM(AVG(rt0.c4), ((rt0.c1)IS NOT(rt0.c3))), (((rt0.c0 IN ()))<(((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), ((rt0.c2) NOT BETWEEN ((NOT (rt0.c3))) AND (CASE WHEN rt0.c0 THEN 0X2f22b36a WHEN rt0.c4 THEN rt0.c4 WHEN x'' THEN rt0.c3 END)), (((rt0.c4)) BETWEEN ((AVG(rt0.c2))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) FROM rt0 WHERE (((x'0a75' IN ()) IN ())) ORDER BY (NOT (((rt0.c0)!=(rt0.c1)))) ASC  NULLS FIRST, CASE WHEN (((1967450021)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) THEN CAST('1119811505' AS INTEGER) WHEN (rt0.c4 IN (rt0.c3)) THEN (~ (rt0.c1)) WHEN ((rt0.c1)-(rt0.c4)) THEN ((rt0.c4) NOTNULL) ELSE ((rt0.c4) NOTNULL) END; -- 1ms;
SELECT DISTINCT ((((rt0.c1)IS NOT(NULL))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4) NOT BETWEEN (x'f5ea') AND (rt0.c0)) IN (HEX(''))) FROM rt0; -- 0ms;
SELECT ALL 0.8976960765875992 FROM rt0; -- 0ms;
SELECT DISTINCT TRIM(rt0.c1 COLLATE NOCASE) FROM rt0 WHERE (((((NULL)>(NULL))) BETWEEN (NULL COLLATE RTRIM) AND (((0xffffffff8d4a0983) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c3 AS NUMERIC))OR(rt0.c2)))AND(((rt0.c1)>(rt0.c4)))) FROM rt0 WHERE (((x'')LIKE(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (SUM(rt0.c3) IN ()) FROM rt0; -- 0ms;
SELECT ALL (rt0.c3 IN (rt0.c1)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3))  WHEN CHANGES() THEN ((((rt0.c0)AND(rt0.c0)))OR(0.8956161423626064)) WHEN ((rt0.c1)AND(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c4 END WHEN ((rt0.c4)+(rt0.c2)) THEN (((rt0.c1))<=((rt0.c0))) ELSE (rt0.c0 IN (rt0.c3)) END FROM rt0; -- 0ms;
SELECT ((NOT (rt0.c0)) IN (CASE WHEN NULL THEN rt0.c2 END)), ((((((((((rt0.c4)OR(NULL)))OR(rt0.c0)))OR('guPV8')))OR(0.2075577945459024)))LIKE(rt0.c2 COLLATE RTRIM)), LEAD((+ (((((((((rt0.c3)AND(NULL)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))), (((CAST(rt0.c3 AS BLOB), rt0.c3 COLLATE NOCASE, rt0.c2 COLLATE BINARY))<((rt0.c3 COLLATE BINARY, ((rt0.c1)LIKE(rt0.c0)), (rt0.c4 IN ())))), LOWER(DISTINCT rt0.c1 COLLATE BINARY)) OVER ( ROWS ((rt0.c3)-(rt0.c0)) COLLATE BINARY PRECEDING) FROM rt0 WHERE ((((((- ('-679949923')))AND((('-1211793594')&(x'')))))OR(((NULL)!=('P*l'))))) ORDER BY JULIANDAY(('cm+YW' IN (rt0.c2)), (rt0.c3 IN ()), CAST(rt0.c0 AS REAL))  NULLS FIRST, ((CAST(rt0.c0 AS REAL))<=(CAST(rt0.c0 AS INTEGER))); -- 1ms;
SELECT DISTINCT ((0.8351280852968503)OR(AVG(rt0.c1))), ((((((((((rt0.c0) NOT NULL))OR(NULL)))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR((+ (rt0.c3)))))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))), CAST(CASE WHEN rt0.c4 THEN rt0.c0 END AS NUMERIC) FROM rt0 NOT INDEXED WHERE (CAST(0.5468677607169207 AS REAL)) GROUP BY CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN 0Xffffffffa3a1920b WHEN rt0.c1 THEN 'Noࣾ' ELSE rt0.c1 END COLLATE NOCASE HAVING CAST(rt0.c3 AS INTEGER) COLLATE BINARY; -- 0ms;
SELECT ALL ((x'')>=((((rt0.c4))<>((rt0.c4))))), rt0.c3, rt0.c4 FROM rt0 WHERE ((0.12107713611995452 COLLATE NOCASE IN ())); -- 0ms;
SELECT rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0, rt0.c4, rt0.c4))<=((rt0.c2, rt0.c1, rt0.c2))) IN ()) FROM rt0 WHERE (((966561091) IS TRUE)) GROUP BY rt0.c1; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ()))GLOB((0.4285294123157114 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)OR(COUNT(*))))AND(x'bce5')) FROM rt0; -- 0ms;
SELECT MIN(((rt0.c4)>=(rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))GLOB(rt0.c0)) FROM rt0 LIMIT 2080546796; -- 0ms;
SELECT CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 ELSE NULL END COLLATE NOCASE FROM rt0 LIMIT 70159611 OFFSET -42491421; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c3 AS REAL))&((rt0.c4 IN ()))) FROM rt0 WHERE ((((x'')) NOT BETWEEN ((NULL)) AND ((((0.4135482385482997) IS TRUE))))); -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0 ORDER BY CAST(CASE WHEN rt0.c3 THEN '1921143779' END AS TEXT) ASC; -- 0ms;
SELECT DISTINCT rtreenode(((rt0.c0)>(rt0.c0)), TYPEOF(DISTINCT rt0.c2)) FROM rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c3))) BETWEEN ((((rt0.c2)) BETWEEN ((0.36948128794930746)) AND ((rt0.c4)))) AND (((rt0.c4)|(rt0.c4)))), ((((((((DATETIME(rt0.c4, rt0.c4, rt0.c3))AND(((rt0.c1)+(rt0.c4)))))AND(MIN(rt0.c4))))AND(((rt0.c3)/(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)), CASE ((rt0.c3)IS NOT(rt0.c2))  WHEN rt0.c4 THEN CAST(rt0.c1 AS REAL) END FROM rt0 WHERE (0.8348682937447215); -- 0ms;
SELECT rt0.c3 FROM rt0 WHERE ((((- ('0.688319465461065')))|((- (NULL))))); -- 0ms;
SELECT DISTINCT ((rt0.c1) IS FALSE) FROM rt0 WHERE ((((((('HA듼3')%(3.0709861E7)))OR((('hP') IS TRUE))))OR(((x'7415')!=(NULL))))); -- 0ms;
SELECT DISTINCT ((x'4b1c') BETWEEN (rt0.c0) AND (x'')) COLLATE NOCASE FROM rt0 WHERE (((NULL) NOTNULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (CASE WHEN 'h삅P_' COLLATE RTRIM THEN CASE WHEN 0x13c7b7e2 THEN 0Xffffffff8277f2d9 ELSE x'' END END); -- 1ms;
SELECT ALL rt0.c1 FROM rt0 ORDER BY rt0.c2 ASC, CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END COLLATE RTRIM DESC; -- 0ms;
SELECT ALL ((((rt0.c2)!=(rt0.c1)))>=((~ (rt0.c3)))) FROM rt0 ORDER BY 0.4483446558485682  NULLS FIRST; -- 0ms;
SELECT ((((((((MAX(rt0.c3))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c0)<=(rt0.c1)))))OR(((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)))))OR(CAST(rt0.c1 AS NUMERIC))) FROM rt0; -- 0ms;
SELECT LAG(CASE ((rt0.c3)-(rt0.c4))  WHEN ((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) WHEN LIKELIHOOD(rt0.c2, 0.26148091619781266) THEN NULL WHEN rt0.c0 COLLATE NOCASE THEN CAST(rt0.c0 AS BLOB) WHEN rt0.c2 THEN CASE WHEN x'f0bd' THEN rt0.c3 ELSE NULL END WHEN 1305809745 COLLATE NOCASE THEN rt0.c1 END, '1833922169', (((rt0.c2)||(rt0.c0)) IN ((+ (rt0.c3))))) OVER () FROM rt0; -- 0ms;
SELECT NULL FROM rt0 ORDER BY (('E7>LvM') IS TRUE)  NULLS LAST LIMIT 1934291161 OFFSET -784335398; -- 0ms;
SELECT DISTINCT ((((rt0.c2)GLOB('2讞'''))) BETWEEN ((rt0.c0 IN ())) AND (rt0.c0)), CASE WHEN MIN(rt0.c0) THEN json_valid(x'd032') WHEN ((rt0.c2)*(rt0.c0)) THEN (((rt0.c0, x'', rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c3))) WHEN (- (rt0.c3)) THEN (~ (rt0.c3)) ELSE ((rt0.c0)<=(rt0.c2)) END, ((((~ (rt0.c3))))>((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))))) FROM rt0 WHERE (HEX(DISTINCT (NULL IN ()))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c2 THEN ((rt0.c0)==(rt0.c3)) WHEN ((rt0.c4) IS TRUE) THEN (rt0.c4 IN (rt0.c0)) WHEN ((rt0.c2)AND(rt0.c2)) THEN ((rt0.c2) ISNULL) ELSE (x'' IN (rt0.c4)) END FROM rt0 WHERE ((((((NULL)|(-1801099261))))<((CAST(0.17716223341065174 AS TEXT))))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE FROM rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((x'')) BETWEEN ((((rt0.c1) NOTNULL))) AND ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) FROM rt0 WHERE (((CASE NULL  WHEN x'f958' THEN '69616371' WHEN '' THEN x'' WHEN NULL THEN '1914291886' END) BETWEEN ((('t26[ሟH') NOT BETWEEN (NULL) AND (-1137931350))) AND (CAST(0x13c4470e AS BLOB)))); -- 0ms;
SELECT DISTINCT (((rt0.c3)>>(rt0.c1)) IN (UPPER(rt0.c4))) FROM rt0 WHERE ((((('-598473955')=(0.24302590295451443)))!=((x'' IN (0.9779975574240406, NULL))))); -- 0ms;
SELECT (((rt0.c2 IN ('836858776', rt0.c4))) BETWEEN (CAST(rt0.c3 AS REAL)) AND (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)), ((((((((((rt0.c2)OR(x'')))AND(0.7197631578878865)))AND(rt0.c4)))AND(rt0.c1)))IS(COUNT(*))), (((~ (rt0.c2))) BETWEEN (CAST(rt0.c4 AS TEXT)) AND (CASE NULL  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END)), GROUP_CONCAT(0.1335586224216373), CASE WHEN rt0.c4 THEN ((rt0.c3)GLOB(rt0.c3)) WHEN ((rt0.c3)*(rt0.c0)) THEN rt0.c2 WHEN '0.19966507256018295' THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END WHEN rt0.c3 COLLATE RTRIM THEN (((rt0.c4, rt0.c4, rt0.c2)) BETWEEN ((rt0.c0, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c3))) WHEN (((rt0.c2))>=((rt0.c2))) THEN (rt0.c2 IN ()) ELSE (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END, ((rt0.c1 COLLATE BINARY)<>(CASE WHEN rt0.c1 THEN rt0.c4 WHEN 'IA3%' THEN x'7bbe35ac' WHEN rt0.c4 THEN rt0.c4 END)), SUM(((rt0.c0)==(rt0.c4))) OVER () FROM rt0 WHERE ((((- (NULL))) ISNULL)) LIMIT -1227888588 OFFSET 1382598462; -- 0ms;
SELECT DISTINCT (+ (x'')) FROM rt0; -- 0ms;
SELECT DISTINCT json_type(((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) FROM rt0 WHERE (CAST((((-396648082))<((0.2728949783072677))) AS NUMERIC)); -- 1ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((((0.6122392932705472)>>(rt0.c0)))) AND ((((rt0.c2) NOT NULL)))) FROM rt0 ORDER BY ((rt0.c0) NOT NULL) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) BETWEEN (rt0.c0) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((MIN(rt0.c1))<<(((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c2)))), '0.4019899041170597', 0.19913513234815639 FROM rt0 WHERE ((x'' COLLATE BINARY IN ())) GROUP BY ((x'')%(json_remove(rt0.c1, rt0.c1, rt0.c4, rt0.c0))); -- 0ms;
SELECT ((((rt0.c4) IS FALSE))|(((((((((rt0.c0)AND(NULL)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))) FROM rt0 WHERE ((((((0.9595692831317689))<((x''))))>(((0.09085359167345897) ISNULL)))); -- 0ms;
SELECT ALL (~ (((rt0.c2)|(rt0.c4)))), ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (MAX(rt0.c0)) AND (CAST(rt0.c2 AS INTEGER))), (((rt0.c4)) BETWEEN ((CAST(rt0.c3 AS REAL))) AND ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN '' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END))) FROM rt0 WHERE ((((((x'3595'))>(('j㋅^VbKa'))))>=((((('')OR(0xffffffffc8832a1e)))AND(NULL))))); -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((((rt0.c4)<=(rt0.c2)))) AND ((((rt0.c1)GLOB(''))))) FROM rt0; -- 0ms;
SELECT ALL CAST(COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c3, rt0.c2) AS TEXT) FROM rt0 WHERE (CASE ((((x'af4a')OR(NULL)))AND(x''))  WHEN CAST('㍠a' AS REAL) THEN (~ (0x388f35da)) WHEN CAST('2091834021' AS TEXT) THEN ((('b3', '723374740', NULL)) BETWEEN (('?-T	] ', '1868768865', -3.77247418E8)) AND ((x'4dff', '1448060669', NULL))) WHEN (0.615677267175798 IN ()) THEN (('[') IS TRUE) END); -- 1ms;
SELECT DISTINCT (CAST(rt0.c0 AS INTEGER) IN (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0 WHERE ((((('b') BETWEEN (0.5660361130304169) AND (x'')))==((-961532193 IN ())))) ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (((rt0.c0)>=('-408292606'))) AND ((NOT (rt0.c1)))); -- 0ms;
SELECT ((rt0.c0 COLLATE BINARY)GLOB(((rt0.c1) IS TRUE))), ((rt0.c3 IN ()) IN ()), COUNT(((rt0.c3)*(rt0.c0))) OVER () FROM rt0; -- 0ms;
SELECT ALL (((rt0.c3) NOT NULL) IN ()) FROM rt0 WHERE ((((('') BETWEEN ('-329336908') AND (1064767219)))OR(CASE WHEN '' THEN NULL WHEN 0x280f4e90 THEN 1.914291886E9 WHEN 1.139988188E9 THEN NULL END))); -- 0ms;
SELECT ALL (((rt0.c0)*(rt0.c1)) IN (MIN(rt0.c3))), SUM(NULL) OVER (), CAST(((rt0.c4)==(rt0.c1)) AS TEXT) FROM rt0 ORDER BY (((rt0.c4 COLLATE NOCASE))<(('pH	'))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c2)<<(0X47631c4f))) FILTER(WHERE CASE WHEN rt0.c0 THEN ((x'')==(rt0.c4)) END) OVER () FROM rt0 GROUP BY rt0.c3, CASE WHEN 922091487 THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND ('')) THEN ((rt0.c4)GLOB(NULL)) WHEN x'a6dd0f72' THEN CAST(rt0.c3 AS INTEGER) WHEN (+ (rt0.c3)) THEN ((rt0.c1)<=(rt0.c0)) WHEN TIME(rt0.c1, rt0.c4, rt0.c0) THEN rt0.c3 ELSE (((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c3, rt0.c2, rt0.c4))) END, (+ (((rt0.c1) IS FALSE))); -- 0ms;
SELECT ALL (- (((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))) FROM rt0 WHERE (((((1969303014) NOT NULL))>=((((0x772e11c7, x'e345', '0.41293306511370764')) NOT BETWEEN (('u[)1', NULL, NULL)) AND (('907703545', x'', 1548923130)))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c4) IS FALSE) THEN MIN(rt0.c2) WHEN TOTAL_CHANGES() THEN (~ (NULL)) WHEN (rt0.c2 IN (rt0.c4)) THEN rt0.c0 ELSE CAST(rt0.c0 AS REAL) END FROM rt0; -- 0ms;
SELECT LAST_VALUE(((((((((((rt0.c2) IS TRUE))AND(((rt0.c0)>(rt0.c3)))))AND((- (rt0.c4)))))AND((~ (rt0.c0)))))AND(((rt0.c2)+(rt0.c2))))) OVER () FROM rt0; -- 0ms;
SELECT ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 END) NOTNULL) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c3)>('1082811685')))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((0.9888846800887258) NOTNULL))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 7.94791662E8 ELSE rt0.c0 END)))OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c1) ISNULL))))OR(0.3920264610900057)) FROM rt0; -- 0ms;
SELECT ALL (NOT (MIN(rt0.c1))) FROM rt0 ORDER BY ((((rt0.c0) IS TRUE))OR(0.44221304358878566 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT CAST(SUM(rt0.c1) AS BLOB) FROM rt0 WHERE ((((x'') NOT BETWEEN ('Ks~]L/oq') AND (0x24bd938c)) IN ())); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2)OR(rt0.c1)))AND(NULL)))OR(rt0.c0)))OR(rt0.c2)))/(((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))), ((((((((rt0.c3)OR(rt0.c3)))AND((NOT (rt0.c4)))))AND((rt0.c1 IN ()))))OR((- (rt0.c4)))), ((rt0.c1) IS FALSE) FROM rt0 WHERE (((((('1918562688', 'O03婷|g', NULL)) BETWEEN ((NULL, 0Xffffffffd8c1dc3e, x'1659')) AND (('0.6397480400073906', NULL, x'')))) NOT NULL)); -- 0ms;
SELECT DISTINCT COUNT((rt0.c4 IN ())) FILTER(WHERE ((((rt0.c4)<>(rt0.c0)))-(((rt0.c1) IS FALSE)))) OVER ( PARTITION BY (+ (rt0.c4)), x'b9254f11') FROM rt0 WHERE ((x'' COLLATE NOCASE IN ())) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB) LIMIT 268724906 OFFSET 722387007; -- 0ms;
SELECT DISTINCT ((((NULL) BETWEEN (rt0.c4) AND (rt0.c1)))AND(rt0.c3 COLLATE RTRIM)), TOTAL(((rt0.c3) NOT NULL)) OVER ( PARTITION BY (NOT ('790803306')), (((rt0.c2)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((rt0.c4)))), HEX(DISTINCT ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) FROM rt0; -- 0ms;
SELECT ALL (((NOT ('-1485557051')))>=(MIN(rt0.c2))) FROM rt0 WHERE (((((((0.017366732805856766)OR(0.008354353435204853)))AND(0.7675896333922133))) BETWEEN (CASE 0xffffffffc1142371  WHEN 0.6404417714283556 THEN '*)m_j\r/' ELSE 0X3c8f0cc6 END) AND (LTRIM(x'', -3.77247418E8)))) LIMIT 1328975625 OFFSET -1923637725; -- 0ms;
SELECT DISTINCT rt0.c3 COLLATE BINARY, DENSE_RANK() OVER ( PARTITION BY ((CASE WHEN rt0.c1 THEN -1.220230172E9 ELSE rt0.c2 END)IS NOT((rt0.c4 IN ()))), (+ (((rt0.c3)OR(rt0.c2))))), (((((('TRUE')GLOB(rt0.c4)))OR(SUM(rt0.c2))))OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((LIKELY(rt0.c0))) AND ((rt0.c0 COLLATE BINARY))), (((0.9058475953718564)>=(rt0.c3)) IN ()), ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END) BETWEEN (((((rt0.c3)OR(rt0.c4)))OR(x''))) AND (COUNT(0.40799136591133744))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c4)>>(rt0.c3)) WHEN ((rt0.c0)+(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) WHEN IFNULL(DISTINCT rt0.c2, rt0.c2) THEN '-2106068263' ELSE ((rt0.c3)!=(rt0.c1)) END, rt0.c2, ((((rt0.c0)AND(rt0.c1 COLLATE NOCASE)))AND(NULL)), CAST((rt0.c0 IN (rt0.c1)) AS INTEGER), 0.36872813926042947 FROM rt0; -- 1ms;
SELECT DISTINCT UNICODE(CASE WHEN rt0.c0 THEN rt0.c0 END) FROM rt0 WHERE (((TYPEOF(DISTINCT NULL)) BETWEEN ('-1375645681') AND ((~ (NULL))))); -- 0ms;
SELECT ALL (NOT (((x'')||('')))), (((('')>=(rt0.c1))) NOT NULL), (rt0.c2 COLLATE BINARY IN (((rt0.c2) IS TRUE), ((((rt0.c4)AND(rt0.c1)))OR(NULL)))) FROM rt0 GROUP BY (((~ (rt0.c4))) NOTNULL) HAVING (- (((rt0.c0) ISNULL))); -- 0ms;
SELECT DISTINCT (((((((((((rt0.c3))<((rt0.c4))))AND(MAX(rt0.c2))))AND((((rt0.c3))!=((rt0.c2))))))OR(((rt0.c3)IS(rt0.c4)))))OR(GROUP_CONCAT(rt0.c0))) FROM rt0 WHERE (x'6a15728d'); -- 0ms;
SELECT CASE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN 'wL\n4(bJQ' THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 END  WHEN rt0.c1 THEN 'a]|jzv' END, (((rt0.c1, 'O*', rt0.c4)) NOT BETWEEN ((SUM(rt0.c0), CASE WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((0.039963847411452647, rt0.c1 COLLATE BINARY, CAST(rt0.c3 AS REAL)))), ((rt0.c1)/(COUNT(*))), TOTAL(((rt0.c2) NOTNULL)), SUM(CAST(rt0.c0 AS REAL)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT '', ((CAST(rt0.c3 AS REAL))|(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)), ((((rt0.c4)<('Op%욮3')))||(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0 ORDER BY rt0.c4 ASC; -- 0ms;
SELECT CAST(COALESCE(rt0.c3, rt0.c2) AS NUMERIC) FROM rt0 WHERE (((((-135222042) ISNULL)) NOT NULL)) ORDER BY ((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))OR((rt0.c0 IN ()))))OR(-1.147650329E9))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((('-2106068263')+(rt0.c1)))AND(((rt0.c0)+(rt0.c1)))))AND(rt0.c2)) FROM rt0 WHERE ('836858776' COLLATE NOCASE COLLATE BINARY COLLATE RTRIM) LIMIT 816531750; -- 1ms;
SELECT DISTINCT (NOT (json_array_length(rt0.c1, rt0.c1))) FROM rt0 GROUP BY (IFNULL(rt0.c4, rt0.c1) IN ()) HAVING LIKELY(DISTINCT (((rt0.c0))<((rt0.c2)))) ORDER BY (((rt0.c0 IN ()))LIKE((('TK<C!%??璲') NOT BETWEEN (rt0.c2) AND (rt0.c1)))); -- 0ms;
SELECT ALL GROUP_CONCAT(GLOB(rt0.c0, rt0.c2)) OVER () FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c2) NOTNULL))=(((rt0.c0) IS TRUE))), rt0.c1, (((rt0.c4)|(rt0.c4)) IN ()), (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) IN ()), (((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) IN ()) FROM rt0 WHERE ((((((x'')OR(x'')))OR(0Xffffffffcae161fd)) IN ())); -- 0ms;
SELECT ALL COUNT(CASE WHEN rt0.c0 THEN NULL ELSE rt0.c3 END) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0, COUNT(*) COLLATE RTRIM COLLATE NOCASE, NULL FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN ((((((((('')AND(rt0.c0)))AND(x'ef68')))AND(rt0.c0)))OR(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))) FROM rt0 WHERE (((((0.7685241134452361) ISNULL)) NOT BETWEEN ((~ (NULL))) AND (CAST(x'' AS BLOB)))) ORDER BY ((rt0.c3 COLLATE BINARY)AND(((rt0.c3)>=(rt0.c0)))) DESC; -- 0ms;
SELECT ALL ((CAST(rt0.c4 AS BLOB)) NOTNULL) FROM rt0 WHERE ((NOT ((((NULL)) NOT BETWEEN ((0.12841110616318951)) AND ((x'37c2')))))); -- 0ms;
SELECT ALL rt0.c0 COLLATE RTRIM, '', (((rt0.c0)<=(rt0.c0)) IN ()), (((x'fcf9' IN ()))>(((rt0.c3) IS FALSE))), '386769073' FROM rt0 WHERE ((((x'')) NOT BETWEEN ((((((x'')OR(NULL)))AND(NULL)))) AND (((((((((('-2119163531')AND(6.328186E8)))OR(NULL)))AND(0.690949135596023)))OR(NULL)))))); -- 1ms;
SELECT ALL ((CAST(rt0.c4 AS BLOB)) IS TRUE), rt0.c3, x'' COLLATE NOCASE, '-759236747', DENSE_RANK() OVER () FROM rt0 WHERE (((-2.106068263E9 COLLATE BINARY)|((('욮H]''')-(NULL))))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS TEXT))<<(rt0.c2)) FROM rt0; -- 0ms;
SELECT TOTAL((+ (rt0.c3))) OVER (), ((('HhA]4CP퍰2'))=((TOTAL(rt0.c2)))), (((rt0.c1)) BETWEEN ((x'7510')) AND (((((rt0.c4, rt0.c4, NULL)) BETWEEN ((rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c3, rt0.c0, '/W')))))) FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN 1948349316 ELSE '1245228136' END) NOTNULL)  NULLS FIRST; -- 0ms;
SELECT ALL (((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) IS FALSE) FROM rt0 WHERE (x''); -- 0ms;
SELECT rt0.c0, CASE ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3))  WHEN NULL THEN ((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c0)) END, ((MAX(rt0.c1)) ISNULL) FROM rt0; -- 2ms;
SELECT DISTINCT CAST(GLOB(rt0.c0, NULL) AS INTEGER), SUM(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0))), NULL FROM rt0 WHERE (((CASE WHEN 0.3714991761620048 THEN x'd933' END)*((('.A')<=(1.868768865E9))))); -- 0ms;
SELECT DISTINCT CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN 0X3131454a THEN rt0.c4 END COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3)<(NULL)) IN ()) FROM rt0 ORDER BY UPPER(((rt0.c0)>=(NULL))) ASC  NULLS LAST; -- 0ms;
SELECT (((rt0.c0 IN (rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) AND (LIKELY(rt0.c0))), rt0.c3, ((((CAST(rt0.c4 AS REAL))AND('0' COLLATE BINARY)))OR(((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c1)))) FROM rt0 WHERE (CASE WHEN (((('')AND(0.5736128755344041)))OR(NULL)) THEN LIKELIHOOD('722387007', 0.8880897280603771) END); -- 0ms;
SELECT DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)) COLLATE NOCASE, 0X2f6e21d9 COLLATE NOCASE, ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))AND(CAST(rt0.c0 AS BLOB))))OR(((rt0.c1)IS(rt0.c1)))) FROM rt0 WHERE (CAST(((NULL) IS FALSE) AS NUMERIC)); -- 0ms;
SELECT AVG(((NULL) IS TRUE)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1, (((+ (rt0.c2))) IS TRUE), (~ ((+ (rt0.c2)))) FROM rt0; -- 0ms;
SELECT (rt0.c2 IN ()) FROM rt0 ORDER BY (~ (CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 END)), rt0.c0; -- 1ms;
SELECT DISTINCT COUNT(((rt0.c3) NOTNULL)) FROM rt0 WHERE (highlight((('')&(x'')), x'288e' COLLATE RTRIM, CAST('790803306' AS INTEGER), (('') NOTNULL))) LIMIT 462085071 OFFSET -271537060;SELECT DISTINCT (((rt0.c4)) BETWEEN ((NULL)) AND ((rt0.c0 COLLATE NOCASE))), SQLITE_COMPILEOPTION_GET(x'fc01'), ((((rt0.c1)IS(rt0.c4)))AND((((NULL)) BETWEEN ((rt0.c1)) AND ((NULL))))) FROM rt0 LIMIT -1788179441 OFFSET -1977405720; -- 0ms;
SELECT ALL rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT NULLIF(-1977053403, 0.41293306511370764) FROM rt0 WHERE (CASE IFNULL(x'', 0x7f4619cd)  WHEN (- (x'')) THEN CAST(x'' AS BLOB) END) ORDER BY TYPEOF((('Kd') IS FALSE))  NULLS LAST; -- 0ms;
SELECT LAG((~ ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))), (+ (rt0.c1)) COLLATE BINARY, rt0.c1) OVER () FROM rt0; -- 0ms;
SELECT (~ (rt0.c3 COLLATE NOCASE)) FROM rt0 WHERE (((((((x'40ce') NOT BETWEEN (1.934291161E9) AND (NULL)))AND(((0.6492311386824963) BETWEEN ('g''') AND (NULL)))))OR('' COLLATE RTRIM))); -- 0ms;
SELECT CAST((rt0.c1 IN ()) AS INTEGER), CAST(((rt0.c1)>>(rt0.c2)) AS REAL), ((SQLITE_COMPILEOPTION_USED(rt0.c0))>>(AVG('je#|'))), CAST(NULL AS REAL), LOWER(DISTINCT (rt0.c3 IN (rt0.c1))) FROM rt0 WHERE (TRIM(DISTINCT HEX(0.5897664619905677), 0x50bb4e0c COLLATE NOCASE)); -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT ((NULL) BETWEEN (rt0.c2 COLLATE BINARY) AND (CAST(rt0.c4 AS INTEGER))), NULL, (NOT (((rt0.c0) ISNULL))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END ELSE (rt0.c3 IN ()) END FROM rt0; -- 0ms;
SELECT ((MIN(rt0.c0)) BETWEEN (((((rt0.c4)OR(rt0.c3)))AND(rt0.c0))) AND (rt0.c2)), (- (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))), CASE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))  WHEN rt0.c4 COLLATE RTRIM THEN '' END FROM rt0 WHERE ((((- (x'')))OR((('-1629009366') BETWEEN ('~') AND ('69616371'))))); -- 0ms;
SELECT DISTINCT CASE WHEN (0.2336466436610397 IN (rt0.c2, rt0.c2)) THEN ((rt0.c4) NOT NULL) WHEN rt0.c3 THEN (~ (rt0.c4)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND (('1354357034'))) THEN UNLIKELY(rt0.c0) END FROM rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c1) NOT NULL)) OVER (), COUNT(*), MAX(SQLITE_VERSION()) FROM rt0; -- 0ms;
SELECT DISTINCT (~ ((NOT (rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((x'') BETWEEN ('') AND (rt0.c3)))IS NOT(((x'') NOT NULL))) FROM rt0 WHERE ((((((- ('-p')))AND((('')%('?\r腁Lw!V訉')))))AND(((((NULL)OR(x'f1c2')))OR(0xffffffff9b5bce51))))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN (((+ (rt0.c4)))) AND (((+ (rt0.c4))))), (+ (rt0.c1)) COLLATE NOCASE, (('')*(((rt0.c3) NOT NULL))) FROM rt0; -- 0ms;
SELECT ALL CASE rt0.c1  WHEN 0.9895784497191622 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'7257dcce' THEN '' ELSE rt0.c0 END COLLATE RTRIM FROM rt0 GROUP BY (((rt0.c0)) NOT BETWEEN ((((((rt0.c4)AND(rt0.c3)))OR(rt0.c0)))) AND (((rt0.c3 IN ())))), LIKE((((rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN (('0.7528205380858458', NULL, rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c3, rt0.c0, rt0.c3))), (+ (rt0.c1))), (((((rt0.c2 IN ()))OR((NOT (rt0.c4)))))AND('25458657' COLLATE BINARY)) LIMIT -744889254 OFFSET 2139280245; -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN rt0.c4 THEN rt0.c1 END) OVER () FROM rt0 WHERE ((NOT (((((x'')OR('uV''P]V#*')))AND(1922041779))))); -- 0ms;
SELECT GROUP_CONCAT(rt0.c2) OVER () FROM rt0 WHERE (CASE highlight(1.432604449E9, x'', 0Xffffffffd13ffdda, 0.7956935574160129)  WHEN ((((NULL)AND(0.806282811195353)))OR(NULL)) THEN (('/돉eaP')!=(NULL)) WHEN 0.19039009955607844 THEN CASE WHEN x'42df154c' THEN x'' ELSE x'' END WHEN (~ (NULL)) THEN 0.5723546672349051 ELSE (('iF99''K1')AND(0.08953407996740759)) END);SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN ()), (((rt0.c2 COLLATE RTRIM, CASE rt0.c1  WHEN rt0.c1 THEN '-1872242894' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN 0.8028336748943478 ELSE rt0.c3 END, CAST(rt0.c4 AS BLOB)))<=((((rt0.c1)LIKE(rt0.c2)), CAST(rt0.c4 AS TEXT), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END))), COUNT(json_insert(rt0.c4, rt0.c2, rt0.c0)) FROM rt0;SELECT ALL (+ (((('-1489969040'))<=((rt0.c4))))) FROM rt0 WHERE ((~ (((0.1257620536301869)>=(''))))); -- 0ms;
SELECT (((- (rt0.c2))) NOT BETWEEN (UNLIKELY(DISTINCT '632818600')) AND (rt0.c0 COLLATE NOCASE)), rt0.c3 COLLATE BINARY, (((((rt0.c0) IS FALSE)))<(((((rt0.c3))>((x'')))))) FROM rt0 WHERE (x'4ec0'); -- 0ms;
SELECT DISTINCT (- (UNLIKELY(rt0.c3))) FROM rt0 WHERE (UPPER(DISTINCT (+ ('-1629009366')))) LIMIT 805189258 OFFSET 1710924331; -- 0ms;
SELECT ALL CASE WHEN (~ (rt0.c1)) THEN ((rt0.c0)<=(rt0.c2)) END FROM rt0 LIMIT 1334415812 OFFSET 351635827; -- 1ms;
SELECT ALL ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3))) ISNULL) FROM rt0; -- 0ms;
SELECT ALL rt0.c2, (((rt0.c0, ((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)))OR(NULL)), (((x'89e5')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))))>((((0Xffffffff990b7c9a) ISNULL), 0.720097586608917, ((rt0.c4)+(rt0.c1))))), (((rt0.c4, rt0.c3, rt0.c0)) BETWEEN ((0.7084328724303879, rt0.c1, CASE rt0.c2  WHEN rt0.c0 THEN 'v}4g	p8(' END)) AND (((+ (rt0.c1)), NULL, (((rt0.c2, rt0.c4, rt0.c0)) BETWEEN ((rt0.c0, rt0.c3, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3)))))) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c4) ISNULL))AND(CAST(rt0.c1 AS TEXT))) FROM rt0; -- 0ms;
SELECT ((((((rt0.c1) NOTNULL))OR((((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c4, 0xffffffffd99db7b5, rt0.c0))))))OR(rt0.c2)), GLOB((rt0.c3 IN (rt0.c3)), UPPER(rt0.c1)), (((rt0.c4, rt0.c1, rt0.c0)) BETWEEN ((CAST(rt0.c3 AS INTEGER), COUNT(*), (rt0.c4 IN ()))) AND (((rt0.c1 IN ()), rt0.c3 COLLATE BINARY, ((((rt0.c4)OR(rt0.c1)))AND(rt0.c3))))) FROM rt0 WHERE (((((0xffffffffd840778c)||(NULL))) NOT BETWEEN (((0.005925902087827395) NOT BETWEEN ('1181691261') AND (0xffffffffdb1a1b73))) AND ((((NULL)) NOT BETWEEN (('1992304698')) AND (('B')))))); -- 0ms;
SELECT DISTINCT ((+ (rt0.c3)) IN (((rt0.c4) NOT NULL), ((rt0.c0)<<(rt0.c2)))) FROM rt0 WHERE (((((((((((NULL)AND(NULL)))OR(x'')))OR(x'17ca')))AND('}o|⸳[s\%'))) NOT BETWEEN (((0.21631761817410722) NOT BETWEEN (x'') AND (0.4457609896609074))) AND (x'7c02' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT MIN(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))) FROM rt0 WHERE ((x'afe2' IN ())); -- 0ms;
SELECT ALL COUNT((~ (rt0.c1))) OVER () FROM rt0 WHERE (UNLIKELY(DISTINCT ((((1.49507507E9)OR(0.7127442736390678)))OR(-965327765)))); -- 0ms;
SELECT DISTINCT (((rt0.c3)) BETWEEN ((6.328186E8)) AND (((rt0.c1 IN ())))), CAST(NULL AS INTEGER), (NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) FROM rt0 WHERE (((-780295695 COLLATE NOCASE) IS FALSE)) GROUP BY LIKELY(DISTINCT ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c0) NOTNULL)) OVER ( GROUPS  CURRENT ROW), (((((rt0.c0)=(rt0.c0))))!=((NULL))), CASE WHEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN 0.6936195903552248 WHEN rt0.c1 THEN rt0.c4 END THEN ((rt0.c2) NOTNULL) WHEN (rt0.c0 IN ()) THEN (+ (rt0.c0)) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c4)) WHEN ((((((((0.226803013072433)OR(rt0.c0)))AND(rt0.c2)))AND('2036542660')))AND(rt0.c4)) THEN (rt0.c3 IN (rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)) THEN (rt0.c0 IN ()) ELSE rt0.c3 END FROM rt0 WHERE (((CASE WHEN 0xffffffffe64c9f64 THEN NULL ELSE '' END) IS FALSE)); -- 0ms;
SELECT ALL rt0.c3, ((LAST_INSERT_ROWID()) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))), (((rt0.c2 IN ())) NOTNULL) FROM rt0 WHERE ((((NULL, '1969303014', NULL, NULL, NULL)) NOT BETWEEN (('z?^p', -685903147, '1765470122', 0xffffffffc9b6fc2b, 0.9478044924752518)) AND ((1692927903, 'OY', x'20b5', 0.55836298705868, NULL))) COLLATE NOCASE); -- 1ms;
SELECT ((ABS(DISTINCT rt0.c0)) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END) AND ('&eaX]EVX>')) FROM rt0 WHERE (CAST(((x'')+(0.037761791037070114)) AS TEXT)) GROUP BY (((rt0.c1 IN ())) BETWEEN (rt0.c3) AND ((rt0.c0 IN ()))); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c4 AS REAL) AS TEXT) FROM rt0 WHERE (('-760441700' COLLATE RTRIM IN (((x'ba3e') ISNULL)))); -- 0ms;
SELECT CASE LOWER(rt0.c2)  WHEN GROUP_CONCAT(rt0.c2) THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 END WHEN (NOT (rt0.c2)) THEN ((rt0.c4) IS FALSE) WHEN rt0.c0 THEN ((rt0.c2)OR('흴cW')) END FROM rt0; -- 0ms;
SELECT ALL ((('0.556088369475946' COLLATE NOCASE))<((LIKELY(DISTINCT rt0.c4)))) FROM rt0; -- 0ms;
SELECT CASE (rt0.c3 IN ())  WHEN SUM(rt0.c2) THEN ((rt0.c3)>(rt0.c1)) ELSE (((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((NULL, rt0.c1, rt0.c2)) AND ((rt0.c2, 0.9249960765332678, rt0.c2))) END FROM rt0 WHERE ((((('1589487653') BETWEEN ('qc') AND ('R+bGNre&')))>=((- ('''\kP樷|vv'))))); -- 0ms;
SELECT ((rt0.c2)>>(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))), CASE WHEN ((('386769073'))<=((rt0.c1))) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c2)+(rt0.c1)) END, (~ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE CASE WHEN rt0.c2 THEN rt0.c1 END  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) THEN '1301459617' WHEN (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))) THEN 1947194467 WHEN AVG(rt0.c2) THEN COUNT(rt0.c1) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt0.c2, rt0.c2, rt0.c4))!=((rt0.c0, rt0.c0, rt0.c3))) WHEN 0.2984840222239755 THEN NULLIF(rt0.c1, rt0.c1) END FROM rt0 WHERE ((((NULL, NULL, 0.8478633603910593)) NOT BETWEEN (((0.7620064937596988 IN ()), CASE WHEN x'70b30c98' THEN NULL WHEN x'' THEN 0x7147476d WHEN 0.7588568361734701 THEN 893513239 ELSE NULL END, PRINTF(x''))) AND (((('\nbiJ\nK\n')|(0.4401823039054277)), json_array_length('-1e500', '0.7399262005807203'), (~ (NULL)))))); -- 0ms;
SELECT DISTINCT AVG(CAST(rt0.c2 AS INTEGER)) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC))*(((((rt0.c1)OR(rt0.c4)))AND(rt0.c2)))) FROM rt0 NOT INDEXED WHERE (((x'a27f' COLLATE BINARY)*(ABS(-1158005841)))); -- 0ms;
SELECT DISTINCT HEX(-329336908) FROM rt0 GROUP BY CAST((rt0.c3 IN ()) AS REAL) ORDER BY HEX(((rt0.c2)<<(rt0.c0))); -- 0ms;
SELECT ALL 1.334415812E9, COALESCE(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)), (((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c4, rt0.c3)) AND ((rt0.c1, rt0.c0, rt0.c1)))), ((QUOTE(rt0.c1)) IS TRUE) FROM rt0; -- 0ms;
SELECT ALL CAST(620584473 AS NUMERIC), 0.2537226849176534, (((((((((('0-\r삅\%G')AND(NULL)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))) NOTNULL) FROM rt0 LIMIT -170943929; -- 0ms;
SELECT ALL x'' FROM rt0; -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c2  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END AS BLOB), (((SUM(rt0.c3), LIKELIHOOD(rt0.c0, 0.25304581027309236), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))>((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), MAX(rt0.c4), ((rt0.c1) IS TRUE)))), UNLIKELY(DISTINCT (((rt0.c1))<=((rt0.c0)))) FROM rt0 WHERE (CASE WHEN CAST(NULL AS TEXT) THEN ((((x'')AND(x'')))AND(NULL)) ELSE ((0.666217297631429) BETWEEN ('') AND (NULL)) END) LIMIT 1840168891 OFFSET -2146186716; -- 1ms;
SELECT DISTINCT ((CASE WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c2 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT DISTINCT AVG(COUNT(*)) COLLATE RTRIM FROM rt0 WHERE ((CAST(0xffffffffdb1a1b73 AS NUMERIC) IN ())) GROUP BY (NOT ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) HAVING ((-1793712853)|(CASE 0.3829405471280499  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 END));SELECT DISTINCT ((NULL) NOT BETWEEN (((rt0.c3) NOT NULL)) AND (((rt0.c1)||(rt0.c2)))), (- (AVG(-99224392))), TOTAL(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) FROM rt0 LIMIT -934040024; -- 0ms;
SELECT DISTINCT MIN((NOT (rt0.c0))) FROM rt0 GROUP BY ((rt0.c4 COLLATE BINARY) ISNULL) HAVING ((((((((highlight(rt0.c0, rt0.c4, rt0.c1, rt0.c0))OR(CAST(rt0.c3 AS REAL))))OR(rt0.c4 COLLATE NOCASE)))AND((rt0.c0 IN (rt0.c1)))))OR(('-76483413' IN ())));SELECT (- (x'7352' COLLATE NOCASE)) FROM rt0 WHERE (CASE x'b86f' COLLATE NOCASE  WHEN (('-621952030')+(x'')) THEN CAST('跪)Elxi' AS INTEGER) ELSE 0.44899829470601005 END); -- 0ms;
SELECT ((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3))) NOTNULL) FROM rt0; -- 0ms;
SELECT DISTINCT MAX(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END) FROM rt0 WHERE (CASE ((0xffffffff885202d3)%('-2029567551'))  WHEN 'jE' THEN CASE NULL  WHEN '2F.jPLe㩰.' THEN NULL WHEN 0.5614951442087401 THEN '3L<㜭蕽,' WHEN 0.4819698610159078 THEN x'' ELSE 0Xffffffffbb983ee7 END END); -- 0ms;
SELECT ((NULL) BETWEEN ((((rt0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c0, '-1246714558', rt0.c3, rt0.c2)) AND ((rt0.c3, rt0.c0, '', rt0.c3, rt0.c0)))) AND ((((rt0.c3))>((rt0.c4))))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c2))) IS TRUE) FROM rt0 LIMIT 2128715517; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS NUMERIC))-((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM rt0 WHERE ((((x'')) BETWEEN ((CAST(x'' AS INTEGER))) AND ((NULL)))); -- 0ms;
SELECT (((~ (rt0.c4)))LIKE(rt0.c4 COLLATE RTRIM)) FROM rt0 GROUP BY ((((((rt0.c2)OR(rt0.c2)))AND(x'')))%(rt0.c2 COLLATE RTRIM)), ((((rt0.c0)OR(rt0.c1)))=((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))), CAST((rt0.c1 IN ()) AS NUMERIC) HAVING ((rt0.c1)<>(((rt0.c0) NOT NULL))); -- 0ms;
SELECT DISTINCT UPPER(rt0.c2 COLLATE RTRIM) FROM rt0 WHERE (TYPEOF(DISTINCT (- (NULL)))); -- 0ms;
SELECT DISTINCT SUM(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END) FROM rt0 ORDER BY ((UPPER(rt0.c2)) BETWEEN (rt0.c4 COLLATE RTRIM) AND (((rt0.c1) IS FALSE))) ASC; -- 0ms;
SELECT DATE('-666863732', rt0.c1, rt0.c3) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c4 IN ((+ (rt0.c3)), CASE WHEN rt0.c4 THEN rt0.c3 END)), ((((rt0.c3)!=(rt0.c3)))IS NOT((~ (0.6193170130218858)))), LIKELIHOOD(DISTINCT ((rt0.c3) NOTNULL), 0.08754678972984054) FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)) IN ()), json_insert(TRIM(rt0.c4, rt0.c0), ((rt0.c1)IS NOT(rt0.c2)), (((rt0.c3))>((rt0.c2)))), CAST(LTRIM(rt0.c1) AS BLOB) FROM rt0 WHERE ((0.8478052629839681 COLLATE NOCASE IN ((((2001558884))<((NULL))), ((1788686704) ISNULL)))); -- 0ms;
SELECT ((LIKELIHOOD(DISTINCT rt0.c2, 0.6921590204306308)) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt0 WHERE (((((((1113434902)GLOB(x'5687')))AND(0.02234755872388494 COLLATE BINARY)))AND(((NULL) BETWEEN (NULL) AND (x''))))) ORDER BY CASE ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))  WHEN ((rt0.c0) IS FALSE) THEN (rt0.c3 IN (rt0.c4, rt0.c4)) ELSE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) END; -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS TEXT) FROM rt0 WHERE (((((((((((NULL)IS NOT(0.7261882046738779)))AND((('-223900182') IS TRUE))))AND(CASE NULL  WHEN 0.2915446835264808 THEN 0X2947c0ed END)))AND(NULL COLLATE RTRIM)))AND(((('-2022386832'))>=((8.36858776E8)))))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT x'', 0.4009969003019661) FROM rt0 WHERE (((('804506607')<=(NULL)) IN ())); -- 0ms;
SELECT COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS REAL))/(NULL)), ((rt0.c3 IN ()) IN ()), TOTAL(CAST(rt0.c4 AS NUMERIC)) OVER ( RANGE (((rt0.c0)) BETWEEN (('')) AND (((rt0.c2 IN ())))) PRECEDING EXCLUDE GROUP) FROM rt0 LIMIT -679846691;SELECT -1196786573, '1354357034', CASE WHEN LIKELIHOOD(rt0.c3, 0.7263498656784105) THEN NULL ELSE rt0.c1 END FROM rt0; -- 1ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (IFNULL(rt0.c1, rt0.c2)) AND (rt0.c2 COLLATE RTRIM)), MAX((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))), AVG(TOTAL((((rt0.c2))<>((rt0.c4))))) FROM rt0 WHERE (LTRIM(LIKELY(NULL))) ORDER BY ((((((((-42491421)OR(MIN(rt0.c4, rt0.c3))))AND(((rt0.c3)-(rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c4)))))AND(((rt0.c4)OR(rt0.c2)))) DESC;SELECT ALL NTILE('-1584755225') OVER () FROM rt0 WHERE (CAST(7.22387007E8 AS TEXT)) LIMIT -1878070670;SELECT CASE (((rt0.c4))!=((rt0.c1)))  WHEN ((rt0.c3)%('be\n ')) THEN rt0.c3 COLLATE NOCASE END, (((rt0.c1 IN ()))LIKE(TOTAL(rt0.c4))), (((rt0.c4 IN ()))&(IFNULL('', rt0.c3))) FROM rt0 WHERE (CASE (0.1628616164497212 IN ())  WHEN ((('gec0BF', x'3bfa', NULL))!=((x'', '-1884516403', x''))) THEN (0X2b7883e1 IN ()) WHEN ((NULL)<<('')) THEN (((x'')) NOT BETWEEN ((NULL)) AND (('-140842784'))) WHEN ((0.029390450669820156) NOT BETWEEN (0xffffffffd96feedd) AND (-207245365)) THEN (+ (-57155055)) ELSE CAST(NULL AS REAL) END); -- 0ms;
SELECT ALL ((((((0.9406767167169453)OR(rt0.c2)))OR(rt0.c4))) ISNULL), FIRST_VALUE(((((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))OR(rt0.c1 COLLATE BINARY)))AND(CAST(rt0.c2 AS REAL)))) OVER (), ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END) NOT BETWEEN (MIN(rt0.c0)) AND (rt0.c2 COLLATE NOCASE)) FROM rt0 WHERE ((IFNULL(NULL, 0.7178437505293905) IN ())); -- 0ms;
SELECT ((((((rt0.c3)LIKE(rt0.c3)))OR(MAX(rt0.c0))))AND(((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT '-2038904283' FROM rt0 WHERE (LIKELIHOOD((('556783312')<(1354357034)), 0.5082518636700578)); -- 0ms;
SELECT DISTINCT AVG((~ (rt0.c0))) FROM rt0 WHERE (1611981004 COLLATE RTRIM); -- 0ms;
SELECT ABS(DISTINCT x'') FROM rt0 WHERE (COALESCE(DISTINCT '' COLLATE BINARY, ((NULL) ISNULL))); -- 1ms;
SELECT ALL AVG((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c4, '1914291886')) AND ((rt0.c0, rt0.c2, rt0.c1)))) FROM rt0 WHERE (CASE WHEN CASE WHEN '1446884727' THEN x'' WHEN NULL THEN 0.16137813966013925 WHEN NULL THEN 1.49507507E9 ELSE NULL END THEN CASE WHEN 0.5819855696291141 THEN 0.38661587336655323 WHEN 0.8659524995991059 THEN 0.013654838748460074 WHEN 0.9336454054542375 THEN x'f743' WHEN 0.8736960177172503 THEN '525238519' WHEN 0xff65b6 THEN NULL END END) GROUP BY (((((((((- (rt0.c1)))AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c1) NOT NULL))))OR(STRFTIME(rt0.c0, rt0.c0, rt0.c3))))OR(rt0.c3)) HAVING rt0.c4 LIMIT 1426249264 OFFSET -1418676047; -- 0ms;
SELECT LAST_VALUE(CASE ((((rt0.c2)AND(rt0.c3)))OR(rt0.c2))  WHEN SQLITE_COMPILEOPTION_GET(rt0.c2) THEN ((rt0.c2) NOT NULL) ELSE ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)) END) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), (NOT (x'')) COLLATE RTRIM, CAST(SUM(rt0.c4) AS INTEGER), CASE rt0.c4  WHEN ((x'') IS TRUE) THEN CAST(rt0.c1 AS REAL) END, (((rt0.c4)<=(rt0.c4)) IN ()) FROM rt0 WHERE (CASE ''  WHEN ((((((((NULL)AND('-1196786573')))OR(NULL)))AND(x'c55f')))AND(x'5e6726b0')) THEN CAST(NULL AS REAL) WHEN (x'' IN ()) THEN ((x'4e4d8e53')=(NULL)) WHEN '-902198294' COLLATE RTRIM THEN (x'1d7b' IN (x'e1b0')) ELSE CASE WHEN 0X1a8cb94a THEN 'r/*' WHEN NULL THEN 0x2b0ec03f WHEN 'EKc㵦j' THEN 0.4918066833789062 ELSE 1.139988188E9 END END); -- 0ms;
SELECT DISTINCT NTILE(((rt0.c2)>(rt0.c0)) COLLATE NOCASE) OVER () FROM rt0 WHERE ((('')IS NOT(0.3606003616529908)));SELECT DISTINCT (((rt0.c0, rt0.c3, rt0.c2))<>((0.2797020388683402, rt0.c4, rt0.c2))) COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL (+ ((rt0.c3 IN ()))) FROM rt0 WHERE ((('')GLOB('-1926008973')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c3 AS REAL))>(rt0.c3)), COUNT(*) OVER (), AVG(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END) OVER (), CASE WHEN ((rt0.c0) IS FALSE) THEN json_type(rt0.c2) END, (((CAST(rt0.c2 AS TEXT), CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END, CASE WHEN 1601555480 THEN rt0.c1 END))=(((((rt0.c4)) NOT BETWEEN ((0x45bb42b8)) AND ((rt0.c4))), CASE WHEN 1.139988188E9 THEN rt0.c3 ELSE rt0.c4 END, ((rt0.c4) NOT NULL)))) FROM rt0 WHERE (0.8350928077916926) GROUP BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (x'')), ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))<<((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))), (((CAST(rt0.c0 AS INTEGER), TRIM(rt0.c2), (((rt0.c2))>((rt0.c0))), rt0.c3, '-927144280'))>=((rt0.c4 COLLATE BINARY, rt0.c1 COLLATE NOCASE, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END, CAST(rt0.c4 AS NUMERIC), rt0.c1))); -- 0ms;
SELECT DISTINCT CASE (rt0.c1 IN (rt0.c3))  WHEN CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END THEN 0X23ccab69 COLLATE RTRIM END FROM rt0; -- 0ms;
SELECT MAX(SUM(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) FROM rt0 WHERE (INSTR((((('-626498174')OR(0Xffffffffdabe92d6)))AND('-2137934483')), CASE WHEN '[HCK<Vq' THEN '' WHEN 'Rjc' THEN x'' WHEN NULL THEN 'h' ELSE '' END)) ORDER BY -1680061842 LIMIT 1922041779;SELECT ALL ((((rt0.c0)>(rt0.c2))) NOT NULL), ((((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))OR(CAST(rt0.c1 AS INTEGER))))OR(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))), ((NULL)>=(rt0.c1)) FROM rt0 WHERE ((((((~ (x'e5d7cb6f')))OR(UPPER(NULL))))AND(((x'')*(x''))))); -- 0ms;
SELECT ALL (+ (rt0.c1 COLLATE NOCASE)) FROM rt0 WHERE ((((((~ (9223372036854775807)))AND('Bu6' COLLATE BINARY)))AND(((x'') NOT NULL)))) ORDER BY JULIANDAY('', ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c1)-(rt0.c1))), (NOT ('270113481')) ASC, ((((rt0.c0)-(rt0.c2)))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1) NOT NULL))OR(CAST(rt0.c2 AS NUMERIC))))AND(rt0.c2 COLLATE BINARY)))AND((NOT (rt0.c4)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0 ORDER BY '' ASC  NULLS FIRST; -- 0ms;
SELECT ((('*QGD'))>=((rt0.c2))) COLLATE BINARY, CASE x'53f7'  WHEN rt0.c1 THEN (NOT (NULL)) WHEN ((rt0.c3) ISNULL) THEN (rt0.c1 IN ()) WHEN (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4)) ELSE '-983990664' COLLATE BINARY END, CAST((((rt0.c3))==((rt0.c2))) AS NUMERIC), CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE, ((rt0.c0) BETWEEN ('now') AND (rt0.c1)) COLLATE NOCASE FROM rt0; -- 1ms;
SELECT DISTINCT CUME_DIST() OVER ( GROUPS  CURRENT ROW) FROM rt0 WHERE (x'') UNION SELECT DISTINCT COUNT(((rt0.c4)IS(rt0.c3))) OVER () FROM rt0 WHERE (((NULL) NOT NULL)); -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT BETWEEN (0Xfffffffff868a101) AND (rt0.c1)) IN ()), COUNT(-1234083407) OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW), (((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, '-1860738980')) AND ((rt0.c2, rt0.c3, rt0.c1))))%(rt0.c1)) FROM rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(GLOB(rt0.c3, rt0.c0)) OVER () FROM rt0; -- 0ms;
