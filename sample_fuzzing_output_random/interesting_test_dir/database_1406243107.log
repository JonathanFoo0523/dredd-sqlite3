-- Time: 2024/06/07 07:28:43
-- Database: database7
-- Database version: 3.40.0
-- seed value: 1406243107
PRAGMA encoding = 'UTF-16le'; -- 4ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED, content=''); -- 32ms;
PRAGMA main.legacy_file_format = false; -- 0ms;
PRAGMA threads = 7691766336243110907; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46577'); -- 20ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE temp; -- 1ms;
ANALYZE sqlite_master; -- 20ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 15ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 22ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, matchinfo=fts3); -- 12ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('120694086'), (0.793584666931535), (0.821833419951213); -- 18ms;
INSERT OR FAIL INTO vt1 VALUES ('1117258410'); -- 24ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('120694086'); -- 17ms;
INSERT OR ABORT INTO vt1(c0) VALUES (''), (0x4f3c29ef), (NULL); -- 14ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 25ms;
PRAGMA main.integrity_check; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (''), ('k'), ('1329342959'); -- 24ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE (((((vt1.c0)%(vt1.c0))))>=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE NOCASE)AND(json_array_length(0.7205520871858282, NULL))))AND((+ ('311718750')))); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (''), (NULL), (x''); -- 30ms;
VACUUM; -- 20ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT vt1 SET (c0, c0)=(0.6989141413482254, NULL); -- 35ms;
UPDATE vt1 SET c0=0.3840325106933168 WHERE (((NOT (vt1.c0)))IS(CASE WHEN vt1.c0 THEN vt1.c0 END)); -- 15ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (0.623592633452092); -- 32ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE (('6U,8JO')>(vt1.c0 COLLATE RTRIM)); -- 12ms;
PRAGMA temp.default_cache_size; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (x''); -- 18ms;
UPDATE OR IGNORE vt1 SET c0=x''; -- 16ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 28ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
DROP TABLE vt0; -- 14ms;
INSERT OR FAIL INTO vt1(c0) VALUES (x''), (1.11725841E9), ('1329342959'); -- 19ms;
PRAGMA reverse_unordered_selects; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 493159073); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA optimize; -- 18ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 14ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '19288'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 15ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 17ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'91f4'), (x''), ('>ꥒM_}'); -- 1ms;
REINDEX  vt1; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1658560294); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1710807002,6');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '32344'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '4439'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1662891094);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE vt1 SET (c0, c0)=(0.5616776429554599, x'') WHERE 0.75269520361256; -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0, c0)=('311718750', '~ꕆe⟠l'); -- 1ms;
PRAGMA defer_foreign_keys; -- 0ms;
UPDATE vt1 SET c0='-1380342521' WHERE (((((vt1.c0)IS NOT(vt1.c0)), (- (vt1.c0)), CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS REAL), ((NULL)*(vt1.c0))))>((((vt1.c0)IS NOT(vt1.c0)), vt1.c0 COLLATE RTRIM, TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0), (vt1.c0 IN (vt1.c0)), ((vt1.c0)<(vt1.c0))))); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), (0.007548646734236386), (0.793584666931535); -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '35768'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '1995'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (1639895890); -- 0ms;
PRAGMA threads = -1344671573166806719; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '53305'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=7'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
COMMIT TRANSACTION; -- 18ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0) VALUES (NULL, 0.1363441579352489, 0.3840325106933168); -- 20ms;
REINDEX BINARY; -- 22ms;
PRAGMA automatic_index = true; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1612060240);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1534109468);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.5799444357079894, NULL, NULL, '120694086', 'k'), (0.23175169140278873, 0.8268732749769302, 1585073476, x'', '1802956787'), ('', 1.802956787E9, '-1601104916', 0.45301066477602525, NULL); -- 1ms;
PRAGMA main.journal_size_limit; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '10391'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 20ms;
INSERT OR IGNORE INTO rt0(c3, c2) VALUES ('wyB\!3', x''); -- 23ms;
UPDATE OR IGNORE vt1 SET c0=0X531477ec, c0=3.0156768E7 WHERE 0xffffffff9a072826 COLLATE NOCASE; -- 21ms;
UPDATE vt1 SET (c0)=('7CZ0*''&r'); -- 27ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c2, c1) VALUES (NULL, 0.2427795052712537, x'49ea', NULL); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '59589'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 36ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1547226021,11');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '29698'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='' WHERE ROUND('1110638774', ((((vt1.c0)OR(NULL)))OR(vt1.c0))); -- 13ms;
ANALYZE; -- 21ms;
UPDATE OR FAIL rt0 SET c3=0.8525154593116389; -- 12ms;
INSERT OR IGNORE INTO vt1 VALUES (x'd029'), (x'9158'), (0.48527963438406785); -- 13ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) AND (((rt0.c4)OR(rt0.c3)))), ((0Xe93d909)!=((rt0.c4 IN ()))), LOWER(DISTINCT CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 END) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))>(((rt0.c0)||(rt0.c3)))) FROM rt0, vt1; -- 0ms;
SELECT ((((rt0.c2))==((rt0.c1))) IN (rt0.c4, CASE rt0.c3  WHEN rt0.c3 THEN vt1.c0 END)) FROM rt0, vt1; -- 1ms;
SELECT DISTINCT COUNT(INSTR(rt0.c4, rt0.c1)), ((json(0.4092973304971127))GLOB(CAST(rt0.c3 AS TEXT))), (+ ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))), LIKELY(((vt1.c0)IS NOT(-1.7976931348623157E308))), (NOT ((('Qa\Cx	MG_')OR(rt0.c3)))) FROM rt0, vt1 WHERE ((~ (((((0.6416386097206873)AND(NULL)))OR(x''))))); -- 0ms;
SELECT DISTINCT AVG(((rt0.c1) NOT BETWEEN (rt0.c3) AND (0xffffffffa3c7345b))) FILTER(WHERE CASE CAST(vt1.c0 AS BLOB)  WHEN (rt0.c4 IN ()) THEN ((rt0.c0) IS FALSE) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((0x6f5f5bc8))) END) OVER () FROM vt1, rt0 ORDER BY ((((((((((((((rt0.c1) ISNULL))AND(((rt0.c0) NOTNULL))))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))))OR(CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)))OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))AND(CAST(rt0.c0 AS BLOB))))AND(NULL)) ASC  NULLS FIRST, CASE WHEN LIKELY(vt1.c0) THEN (rt0.c2 IN ()) WHEN (rt0.c0 IN ()) THEN CAST(rt0.c2 AS BLOB) WHEN rt0.c1 THEN ((vt1.c0)<<(rt0.c1)) ELSE CAST(vt1.c0 AS BLOB) END  NULLS LAST LIMIT 1802956787; -- 0ms;
SELECT DISTINCT CASE WHEN (NOT (rt0.c0)) THEN CASE rt0.c3  WHEN '' THEN rt0.c2 END ELSE rt0.c3 END, ((rt0.c4 IN ()) IN ()), rt0.c2 FROM rt0; -- 0ms;
SELECT ALL RANK() OVER () FROM vt1 WHERE (SQLITE_VERSION() COLLATE NOCASE COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ((COUNT(*)) NOTNULL) FROM vt1, rt0 WHERE ((((((NULL)=(x'')), ('166612019' IN (0.5475143490397265)), x'b6e8' COLLATE BINARY))>((((9938254) BETWEEN (0.38059355040406306) AND (NULL)), CASE WHEN x'' THEN 0.007548646734236386 ELSE 525054248 END, 0.237617306406257)))); -- 0ms;
SELECT DISTINCT MIN(CAST(rt0.c4 AS NUMERIC)), TOTAL((rt0.c3 IN (rt0.c1, vt1.c0))) OVER (), CASE CAST(rt0.c4 AS BLOB)  WHEN ((vt1.c0)|(rt0.c3)) THEN '8v' WHEN CASE vt1.c0  WHEN vt1.c0 THEN rt0.c4 WHEN '-1668972199' THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END THEN (((rt0.c1, rt0.c1, rt0.c4))>((rt0.c2, rt0.c3, '120694086'))) WHEN rt0.c2 THEN AVG(vt1.c0) END FROM vt1 WHERE (((((((((((x'')OR('525054248')))AND(x'cdaa')))OR(127055994)))AND(0.272571986718414))) NOT NULL));SELECT DISTINCT (((- (rt0.c3)))+(CAST(rt0.c4 AS BLOB))) FROM rt0, vt1 WHERE (((((NULL)AND(NULL))) BETWEEN (CAST(1.63989589E9 AS TEXT)) AND (CAST('1920266816' AS BLOB)))); -- 0ms;
SELECT DISTINCT CASE ((rt0.c2)>(rt0.c2))  WHEN '' THEN (((rt0.c4))=((rt0.c4))) ELSE ((rt0.c4)|(rt0.c2)) END FROM rt0, vt1 WHERE (CASE ((x'')>('Td'))  WHEN CASE WHEN x'' THEN '' END THEN ((0.08476071517193184) NOT BETWEEN (x'f3c5923b') AND ('466127093')) WHEN (((0.3053873002948029, '-1710807002', '1123614246')) NOT BETWEEN ((NULL, '753741535', x'')) AND (('-1668972199', '1117258410', 0X73e7a109))) THEN ((0.3224498663123778)<=(0X7e9c92e6)) WHEN CAST(x'8bf8' AS TEXT) THEN (- (NULL)) ELSE (NOT (0.8488269988389056)) END) ORDER BY rt0.c0; -- 0ms;
SELECT DISTINCT ((((+ (rt0.c2))))>=((rt0.c2))) FROM vt1, rt0 LIMIT 2078830675; -- 0ms;
SELECT ALL ((((vt1.c0)) NOT BETWEEN ((rt0.c4)) AND (('1424823399'))) IN ()) FROM vt1, rt0 WHERE (((NULL)%(NULL)) COLLATE RTRIM) ORDER BY ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 END)IS NOT((((rt0.c1, rt0.c3, rt0.c0))>((rt0.c1, vt1.c0, rt0.c3))))) DESC; -- 0ms;
SELECT NULL FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1)||(vt1.c0)) COLLATE RTRIM, ((CASE rt0.c4  WHEN rt0.c3 THEN '-1755933875' ELSE rt0.c2 END) IS TRUE), CASE vt1.c0  WHEN 0X60c58136 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END COLLATE BINARY FROM rt0 WHERE (CASE ('-1039119957' IN ())  WHEN (('1742383442')<(0.2840833601345406)) THEN HEX(-1782356377) END);SELECT DISTINCT CUME_DIST() OVER () FROM rt0 WHERE (((('p6') NOT BETWEEN ('~ꕆe⟠l') AND (x'6c3c')) IN ())); -- 1ms;
SELECT DISTINCT (((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))IS(((vt1.c0) NOT NULL))), json_extract((NOT (NULL)), (NOT (vt1.c0))), (((ABS(rt0.c3)))=(((rt0.c0 IN ())))) FROM rt0, vt1 ORDER BY CASE (('')/(vt1.c0))  WHEN (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN LIKELIHOOD(DISTINCT rt0.c0, 0.7274006467588494) ELSE ((rt0.c3)+(rt0.c3)) END DESC; -- 0ms;
SELECT DISTINCT CAST(NULL AS BLOB) FROM vt1, rt0 WHERE (((CASE '1182302598'  WHEN NULL THEN '-1782356377' WHEN '86ﺬK6%-e' THEN NULL WHEN '裵s' THEN x'' ELSE '>' END)|(json_extract('6U,8JO', '', 0.4871861487150835, 'now'))));SELECT (((((rt0.c3, vt1.c0, rt0.c4))>=((rt0.c4, rt0.c2, rt0.c0))))||((((rt0.c1, NULL, vt1.c0))<=((rt0.c1, rt0.c4, rt0.c2))))), CASE WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN rt0.c0 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c2)=(rt0.c3)) WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN rt0.c0 ELSE -1004022966 END END, ((((((((((((vt1.c0)OR(x'')))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))OR(((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c0)))) FROM rt0;SELECT AVG((+ (rt0.c2))) OVER () FROM vt1, rt0 WHERE (((((x'9d76')IS('2124190438')))IS(CASE WHEN x'' THEN 0.8817602573140311 WHEN '1172438700' THEN x'' WHEN '(<_r022' THEN '[Y*]' ELSE 'ERHf' END))) LIMIT -1211601959; -- 0ms;
SELECT ALL SUM(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) OVER (), json_remove(AVG(vt1.c0), rt0.c1 COLLATE RTRIM), (('0.2840833601345406') BETWEEN (((rt0.c0) IS TRUE)) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)) FROM vt1, rt0 WHERE (((0xffffffffa56be652) NOTNULL));SELECT DISTINCT ((((1.944559881E9)GLOB(vt1.c0))) BETWEEN (((rt0.c1)+(vt1.c0))) AND (((rt0.c1)OR(vt1.c0)))) FROM vt1, rt0 WHERE ((((NULL IN ())) BETWEEN ('-1990431242') AND (CASE WHEN '' THEN 0.17559191813576114 ELSE -1.7976931348623157E308 END))); -- 1ms;
SELECT DISTINCT ((CAST(rt0.c0 AS REAL))/((((rt0.c0, 'qa\cx	mg_', rt0.c3, vt1.c0, rt0.c2))>=((rt0.c1, rt0.c3, rt0.c4, rt0.c3, rt0.c2))))) FROM vt1;SELECT (((~ (vt1.c0))) NOT BETWEEN (((vt1.c0)|(rt0.c3))) AND ((rt0.c1 IN ()))) FROM rt0;SELECT DISTINCT CASE WHEN SUM(rt0.c0) THEN (rt0.c4 IN ()) WHEN ((rt0.c3)OR(rt0.c4)) THEN rt0.c0 COLLATE BINARY WHEN MIN(rt0.c4) THEN CASE rt0.c0  WHEN 0.8082319514763773 THEN rt0.c3 END ELSE ((rt0.c3)<=(rt0.c3)) END FROM rt0 WHERE (TRIM(-459627557) COLLATE BINARY); -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt1;SELECT DISTINCT (((((rt0.c4)%(rt0.c2))))==((((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))AND(vt1.c0))))), NULL, ((((vt1.c0) NOTNULL))|(((((rt0.c0)OR(rt0.c1)))AND(NULL)))) FROM vt1 LIMIT -88882861 OFFSET 876227736;SELECT DISTINCT TOTAL(((rt0.c2)>=(rt0.c1))) FROM vt1 ORDER BY CASE (~ (rt0.c1))  WHEN ((((((((rt0.c0)AND(rt0.c0)))AND('127055994')))AND(vt1.c0)))AND(rt0.c0)) THEN '-459627557' END  NULLS FIRST;SELECT ALL CAST((rt0.c2 IN ()) AS INTEGER) FROM vt1; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM rt0, vt1 WHERE (CAST(((0.7704432694282641) NOTNULL) AS BLOB)); -- 0ms;
SELECT CASE WHEN rt0.c0 THEN rt0.c3 END COLLATE RTRIM FROM vt1;SELECT DISTINCT ((NULLIF(rt0.c3, rt0.c2)) IS TRUE), ((rt0.c0 COLLATE BINARY)<=(CASE WHEN rt0.c4 THEN rt0.c3 END)), ((((rt0.c3)=(rt0.c0))) NOTNULL) FROM vt1;SELECT ALL (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ()) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE RTRIM) NOT BETWEEN (AVG(vt1.c0)) AND (((rt0.c3) IS FALSE))), rt0.c2, ((rt0.c2)-((NOT (rt0.c2)))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE (ABS(DISTINCT ((NULL) NOT BETWEEN ('') AND (NULL)))); -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c2)) NOT BETWEEN ((((('S>쁲*v4j')AND(vt1.c0)))OR(vt1.c0))) AND (CAST(rt0.c4 AS NUMERIC))), (((vt1.c0 IN ())) BETWEEN (rt0.c2) AND (((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))), MIN(((rt0.c1)+(rt0.c3)) COLLATE NOCASE) FROM vt1;SELECT DISTINCT (+ (((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), ((((((((((rt0.c3)<(rt0.c2)))AND(CAST(rt0.c4 AS REAL))))AND(0.6167299955482317)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)))OR((NOT (vt1.c0)))), NULL FROM vt1 WHERE (((((('516422954')*(0.08145659996785548))))<>((((NULL) NOT BETWEEN (0.6607629343824586) AND (0.6167299955482317))))));SELECT (((~ (rt0.c4)))<(CAST(rt0.c1 AS NUMERIC))) FROM rt0 WHERE (CASE CAST('-958424266' AS TEXT)  WHEN 1195144604 THEN ((NULL)>>(NULL)) END); -- 0ms;
SELECT DISTINCT (+ (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)))) FROM rt0 WHERE ((((0.9199555178181882) NOT BETWEEN (NULL) AND ('793099766')) IN (CASE ''  WHEN NULL THEN x'' END))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, vt1; -- 0ms;
SELECT ALL CASE WHEN ((vt1.c0)<=(NULL)) THEN rt0.c1 WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((rt0.c3)-(rt0.c1)) WHEN CAST(rt0.c3 AS TEXT) THEN CHAR(rt0.c4, rt0.c3, rt0.c0) END FROM rt0 WHERE ((((x'e07a79f1') NOT NULL) IN (('30156768' IN ('()', x'99e6')))));SELECT DISTINCT ((((rt0.c0) BETWEEN ('1368640006') AND (rt0.c3))) BETWEEN (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END) AND (COUNT(*))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT ALL SUM((((rt0.c4, NULL, rt0.c4)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c1)) AND (('-537294622', x'', 0X958f82a)))) OVER (), COUNT(rt0.c3) OVER (), NULLIF(DISTINCT rt0.c2, rt0.c4) COLLATE RTRIM FROM vt1, rt0 WHERE (ABS((('228844437') NOTNULL))); -- 1ms;
SELECT DISTINCT vt1.c0 FROM vt1, rt0 ORDER BY CAST(((((NULL)OR(rt0.c0)))AND(rt0.c1)) AS REAL) ASC, ((((('f넨')==(rt0.c1))))<=((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))))  NULLS LAST; -- 0ms;
SELECT (((~ (rt0.c1)))-(COUNT(*))), ((CASE WHEN rt0.c4 THEN vt1.c0 END)<=(rt0.c1 COLLATE BINARY)), NTH_VALUE((((((rt0.c2, 0.4795106517666512, rt0.c0)) BETWEEN ((rt0.c0, rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c0, rt0.c3))))%(((rt0.c1)/(rt0.c4)))), rt0.c1) OVER (), (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END IN ((((rt0.c2, rt0.c4, NULL))<=((rt0.c2, rt0.c2, '1742383442'))))), CAST(((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)) AS INTEGER) FROM rt0 WHERE (((((NULL)==(0xffffffffc427d34a))) NOT BETWEEN (((('Jk')) NOT BETWEEN (('-1334508353')) AND ((NULL)))) AND ((- (NULL)))));SELECT DISTINCT rt0.c0 FROM rt0, vt1; -- 0ms;
SELECT ALL LAG(((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c3)))AND(vt1.c0)))AND(rt0.c0)))>(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))), '0.6989141413482254', ((rt0.c3 COLLATE RTRIM) BETWEEN (((rt0.c3)<(rt0.c4))) AND (CAST('-1021808642' AS INTEGER)))) OVER ( PARTITION BY (((rt0.c1, vt1.c0, -941885691)) BETWEEN ((CASE WHEN NULL THEN 0x38e73392 ELSE rt0.c4 END, x'', ((NULL) NOT NULL))) AND ((((((rt0.c0)AND(NULL)))OR(rt0.c4)), 0.4871861487150835, CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END))), (rt0.c0 IN ()) COLLATE RTRIM), 228844437, ((rt0.c1)<=(rt0.c2 COLLATE NOCASE)) FROM rt0 NATURAL JOIN vt1 WHERE (CAST(CAST('0.4092973304971127' AS TEXT) AS BLOB)); -- 0ms;
SELECT ALL LAG(((((rt0.c0) BETWEEN (vt1.c0) AND ('1482546274'))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((~ (rt0.c1)))), x'', '') OVER () FROM rt0, vt1 WHERE (((0.06092509277750224)||(((x'') ISNULL)))) ORDER BY LIKELIHOOD(DISTINCT (NOT (rt0.c1)), 0.9983127613690729)  NULLS LAST, ((((((rt0.c2)IS(vt1.c0)))AND(CAST(vt1.c0 AS REAL))))OR(CASE vt1.c0  WHEN '1矬%' THEN rt0.c4 END))  NULLS LAST; -- 1ms;
SELECT ALL json_insert(((rt0.c3)|(rt0.c4)), rt0.c1, COUNT(vt1.c0), CAST(rt0.c0 AS TEXT), (rt0.c4 IN ())), rt0.c4, ((((((vt1.c0)AND(rt0.c1)))OR(rt0.c4))) NOT BETWEEN (((rt0.c4)IS NOT(rt0.c1))) AND (((rt0.c2) NOT NULL))) FROM vt1 WHERE (LIKELIHOOD(((((x'3fde')AND(x'')))AND(x'')), 0.8104536400689784));SELECT ALL GROUP_CONCAT(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE 1868520392 END COLLATE NOCASE) OVER (), 0.3150826780869538, ((((load_extension(rt0.c1, rt0.c0))AND(((rt0.c0) IS TRUE))))AND((rt0.c0 IN ()))), ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN ((('') NOTNULL)) AND (CAST(rt0.c1 AS REAL))), RANK() OVER () FROM vt1, rt0 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT CAST(rt0.c2 COLLATE NOCASE AS BLOB) FROM rt0, vt1 WHERE (CAST(4.66127093E8 AS TEXT)) LIMIT 716822322; -- 0ms;
SELECT ALL CAST(((rt0.c3)-(rt0.c1)) AS BLOB) FROM rt0, vt1 WHERE ((((((((((((('2123601847' COLLATE BINARY)AND(((0x97a54e)>>(NULL)))))AND(0.3246783996970489 COLLATE BINARY)))OR((x'' IN (NULL)))))AND(((-1.710807002E9)|(x'')))))AND(load_extension(1854152417, '◅!'))))OR(1.623556406E9 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (x'7cac' COLLATE BINARY IN (TRIM(DISTINCT rt0.c0))), SUM((((rt0.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, 0X37ee34eb)) AND ((rt0.c1, rt0.c2, rt0.c1))) COLLATE BINARY), CASE WHEN ((((NULL)AND(rt0.c4)))OR(rt0.c4)) THEN rt0.c4 COLLATE RTRIM END FROM rt0 WHERE ((((0.2609978609907371) BETWEEN ('1815200304') AND (x'')) IN ()));SELECT ALL TOTAL(CAST(x'' AS TEXT)) FROM rt0 LIMIT -1668972199; -- 0ms;
SELECT DISTINCT CAST(MAX(rt0.c0) AS TEXT) FROM vt1;SELECT DISTINCT (((vt1.c0)*(rt0.c1)) IN ()) FROM rt0, vt1 WHERE (((((0x2ced2edf)||(NULL)))==(((('')) NOT BETWEEN (('-1668972199')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT MAX((rt0.c2 IN ())) FROM rt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN ('') AND (NULL)) THEN ((((0.23175169140278873)AND(0.8871237989060485)))OR(-15119925)) WHEN CAST(NULL AS BLOB) THEN ((NULL)/(x'')) WHEN CAST(NULL AS REAL) THEN (x'' IN (0.4669896561183482)) ELSE (+ ('1195144604')) END) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<=(((((rt0.c4)OR(rt0.c2)))OR(rt0.c4)))) ASC  NULLS LAST; -- 0ms;
SELECT ALL COUNT((((rt0.c3))!=((rt0.c0)))), ((((rt0.c4) IS TRUE))>>((vt1.c0 IN ()))), (((rt0.c0, rt0.c1, NULL)) BETWEEN ((rt0.c0 COLLATE NOCASE, rt0.c2, CAST(rt0.c4 AS NUMERIC))) AND ((vt1.c0 COLLATE BINARY, COUNT(rt0.c2), COUNT(*)))), ROUND(((rt0.c2) NOT NULL), ((rt0.c2) NOTNULL)), (((rt0.c1))>((MAX(rt0.c4)))) FROM rt0 GROUP BY CAST(516422954 AS BLOB);SELECT ALL IFNULL(DISTINCT CAST(rt0.c2 AS REAL), rt0.c1), ((MAX(rt0.c3))OR((rt0.c3 IN ()))), SUM(0.1363441579352489) OVER () FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c3 AS NUMERIC))IS NOT(CAST(rt0.c3 AS NUMERIC))), ((rt0.c4) NOTNULL), (+ ((((rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, NULL)) AND ((rt0.c1, rt0.c1, rt0.c3))))) FROM vt1 WHERE ('1619608744' COLLATE RTRIM) GROUP BY (((rt0.c1)) NOT BETWEEN (((rt0.c3 IN ()))) AND (((vt1.c0 IN ('')))));SELECT ALL COUNT((((vt1.c0, rt0.c3, rt0.c0))<((rt0.c3, NULL, rt0.c0)))) OVER () FROM vt1;SELECT CAST(COUNT(*) AS BLOB) FROM vt1; -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt1, rt0 GROUP BY DATETIME(((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)), ((vt1.c0)&(rt0.c3)), CAST(rt0.c0 AS NUMERIC)), 1482546274, (((rt0.c1 IN ()))GLOB(x''));SELECT (((((~ (rt0.c4)))OR(rt0.c4 COLLATE NOCASE)))AND(rt0.c4)), rt0.c2, TOTAL(((rt0.c3)IS NOT(rt0.c4))) FROM vt1, rt0 WHERE (((NULL) NOT NULL) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt0.c0))>((rt0.c3))) IN (vt1.c0)) FROM rt0;SELECT DISTINCT (((vt1.c0 IN ()))&('-234281153')) FROM rt0 WHERE (((((((((SQLITE_COMPILEOPTION_GET('jt9'))OR((1.20694086E8 IN ()))))AND((('r5A\n裢]|J')<=(NULL)))))AND(CAST(0.7651848278348934 AS NUMERIC))))AND(((0.7147818560117307)LIKE(0X6fbc0c0d))))) ORDER BY (((- (vt1.c0)))/(rt0.c1)) DESC  NULLS LAST, (UPPER(DISTINCT rt0.c1) IN ());SELECT DISTINCT x'', -1.211601959E9, CAST(((rt0.c1)>(rt0.c4)) AS NUMERIC) FROM rt0 WHERE ((((NULL, 'ꄉ6&/W', 0X6fcc991a)) NOT BETWEEN ((CAST(0.9354973168052183 AS REAL), (((0Xffffffffc610bb9b))>=(('-789437334'))), (('X\nTU\㓫籤Cp') ISNULL))) AND ((NULL, ((x'2d55') BETWEEN (-1.004022966E9) AND ('-1710807002')), (('0.7704432694282641') IS TRUE))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.6660103253376639)) OVER () FROM vt1 WHERE ((CAST(-1991541660 AS TEXT) IN (((((-920921233)AND(x'd8ae')))OR(NULL)), (((x'')) NOT BETWEEN ((0.09903705433664556)) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0 INNER JOIN vt1 ON CAST((- (rt0.c3)) AS NUMERIC) WHERE (((CAST(x'' AS REAL)) NOT BETWEEN ((((((((((((('-547928823')AND(0.8074139335861942)))OR(NULL)))AND(-1126687472)))AND(0X45e1feac)))AND('!pHdB6z')))AND(0.5550190450604948))) AND (((x'd76b')!=(0.22785635503251755))))); -- 0ms;
SELECT ALL CAST((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0))) AS TEXT), ((((((rt0.c2) IS TRUE))AND(((rt0.c0) IS TRUE))))OR(COUNT(vt1.c0))), rt0.c1, ((((('Yynn' IN (rt0.c1)))AND(((rt0.c4) IS TRUE))))AND(NULL)), CAST(rt0.c1 COLLATE NOCASE AS TEXT) FROM vt1 WHERE (((1.110638774E9 COLLATE RTRIM) IS FALSE));SELECT DISTINCT CASE WHEN LIKE(rt0.c3, rt0.c4) THEN (((rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) END, CAST((((rt0.c2, rt0.c3, NULL))<((vt1.c0, vt1.c0, -673205001))) AS TEXT), ((load_extension(rt0.c0))/(vt1.c0 COLLATE NOCASE)) FROM rt0, vt1 WHERE ((((((((x'', '(/', 'x'))>(('%|', '-920921233', x'b6c00634'))))AND(((x'') IS FALSE))))OR(UPPER(NULL))));SELECT DISTINCT rt0.c0 FROM rt0, vt1; -- 0ms;
SELECT ALL UNLIKELY(IFNULL(DISTINCT rt0.c3, rt0.c2)), ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((((vt1.c0)AND(rt0.c4)))AND(rt0.c4))) AND (((rt0.c1)IS NOT(rt0.c4)))), ((GROUP_CONCAT(rt0.c3)) IS FALSE) FROM vt1 NOT INDEXED;SELECT DISTINCT COUNT(*) COLLATE BINARY FROM vt1, rt0 GROUP BY CAST(CAST(rt0.c2 AS BLOB) AS TEXT); -- 0ms;
SELECT DISTINCT rt0.c4 FROM vt1, rt0 WHERE ((COALESCE(DISTINCT -325171928, 0.2321914861599752) IN ((((x'e58c', '', '', -9.41885691E8, NULL))<=(('', NULL, -1990431242, 2.28844437E8, 0.237617306406257)))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT x'', ((rt0.c2) NOT NULL) COLLATE RTRIM, ((AVG(rt0.c4))|(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)) FROM rt0;SELECT ((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c4)))OR(CAST(rt0.c2 AS INTEGER))))AND(rt0.c3 COLLATE BINARY)) FROM vt1;SELECT DISTINCT ((((rt0.c0)OR(rt0.c4))) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c3 END) AND (SUM(rt0.c2))), (- ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))), LIKELY(DISTINCT rt0.c4 COLLATE NOCASE) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c4)OR(NULL)))AND(rt0.c4))) IS FALSE) FROM vt1 WHERE (CAST((('')&('jL3+K(y)')) AS NUMERIC));SELECT DISTINCT ((GROUP_CONCAT(vt1.c0))OR((rt0.c2 IN ()))) FROM vt1; -- 0ms;
SELECT ALL rt0.c3, (((((((((('1153747302') NOT BETWEEN (rt0.c3) AND (rt0.c4)))AND(COUNT(rt0.c4))))AND(((rt0.c4)<(rt0.c4)))))OR(rt0.c1 COLLATE RTRIM)))AND(CASE WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 END)), (((rt0.c1 IN ()))!=(((rt0.c1)IS NOT(vt1.c0)))) FROM vt1 WHERE (((x'')LIKE(('xg4*롺*>0⠦' IN (0.7032705803193829)))));SELECT DISTINCT (((('-1186966694')|(rt0.c4))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c4)<(rt0.c3)))) FROM rt0 WHERE (((((NULL) ISNULL)) IS TRUE)); -- 0ms;
SELECT DISTINCT (NOT (CAST(rt0.c2 AS NUMERIC))) FROM vt1, rt0 WHERE ((('-1141556816') IS TRUE) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT ALL CAST((((rt0.c3, rt0.c0, vt1.c0)) BETWEEN ((rt0.c1, rt0.c4, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c4))) AS BLOB) FROM vt1 WHERE (CASE CASE WHEN x'0c7d' THEN 525054248 ELSE 233774536 END  WHEN CASE WHEN NULL THEN -325171928 WHEN '-1991541660' THEN -5.37294622E8 WHEN '' THEN x'' ELSE NULL END THEN LIKELIHOOD(x'', 0.5806725754821881) ELSE ((x'') NOT BETWEEN (1782077921) AND ('-682578240')) END);SELECT ALL ((((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c3))) BETWEEN (((rt0.c0)>=(rt0.c3))) AND (rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE ((((0.2116470251945456)) NOT BETWEEN ((CAST('1636840628' AS BLOB))) AND (((((0.31218218948037957)) NOT BETWEEN ((NULL)) AND ((x''))))))) LIMIT -1675949685 OFFSET -1352244100;SELECT HEX(((((((((rt0.c2)AND(rt0.c4)))OR(vt1.c0)))OR(rt0.c4)))AND(''))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((vt1.c0 COLLATE BINARY)AND(GROUP_CONCAT(rt0.c0))))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)))OR(((rt0.c1)+(rt0.c3)))))AND(vt1.c0)) FROM rt0, vt1; -- 0ms;
SELECT ALL ((CAST(rt0.c3 AS BLOB)) IS FALSE), CAST((~ (rt0.c1)) AS INTEGER), ((((rt0.c1 COLLATE BINARY)OR(LIKELIHOOD(rt0.c3, 0.14084778828718736))))OR((vt1.c0 IN ()))), CAST(COUNT(rt0.c0) AS BLOB), ((rt0.c0)||((rt0.c4 IN ()))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((((((CAST('' AS NUMERIC))OR(CAST(rt0.c0 AS REAL))))AND(((rt0.c0)<>(rt0.c2)))))AND((-9.58424266E8 IN (rt0.c0)))))AND(((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c4)>=(rt0.c4)))))AND((~ (rt0.c3)))) FROM vt1 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL) DESC  NULLS LAST, CASE CASE WHEN rt0.c3 THEN vt1.c0 END  WHEN ABS('TRUE') THEN CAST(rt0.c4 AS TEXT) WHEN ((rt0.c3) IS FALSE) THEN x'e403' WHEN ((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c3)) THEN rt0.c2 COLLATE BINARY ELSE (rt0.c4 IN ()) END, x'' ASC  NULLS FIRST;SELECT ALL ((rt0.c3 COLLATE NOCASE)IS NOT((((rt0.c0, rt0.c1, NULL))<>((rt0.c1, rt0.c2, rt0.c3))))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT json_quote((rt0.c4 IN ())) FROM rt0 WHERE (((((((((((0.48527963438406785)OR('TD')))OR('0.2321914861599752')))OR(NULL)))AND(NULL))) NOT BETWEEN (('w<~TM<L' IN ())) AND ((('0.06092509277750224') ISNULL)))); -- 0ms;
SELECT (x'7b0c6fbb' IN (vt1.c0 COLLATE NOCASE)) FROM rt0, vt1; -- 0ms;
SELECT '568389567', CASE WHEN CAST(rt0.c4 AS REAL) THEN CASE WHEN rt0.c4 THEN rt0.c3 END END, 0xffffffff9d53be4b FROM rt0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((vt1.c0) NOTNULL)), (LOWER(rt0.c2) IN ()), load_extension(CAST(vt1.c0 AS BLOB)) FROM vt1 WHERE ('0.6607629343824586');SELECT TOTAL((((rt0.c2, rt0.c1, vt1.c0))>=((rt0.c1, x'', x'')))) OVER (), CASE AVG(vt1.c0)  WHEN ((rt0.c0) ISNULL) THEN CAST(vt1.c0 AS BLOB) WHEN 0.7423238551026962 THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN vt1.c0 END, GROUP_CONCAT(((rt0.c1)OR(vt1.c0))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((0.2116470251945456)AND(rt0.c2 COLLATE BINARY)))OR((+ (vt1.c0)))) FROM rt0;SELECT DISTINCT CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END COLLATE BINARY FROM rt0, vt1 WHERE ((((('346749153')%(0x7e707011)))<<(((x'') NOT BETWEEN (0.9724238059434986) AND ('&*^}Tr1U'))))); -- 0ms;
SELECT ALL ((rt0.c2 IN (rt0.c1)) IN ()) FROM rt0, vt1; -- 1ms;
SELECT DISTINCT ((MAX(rt0.c0))<(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c4)))) FROM rt0, vt1; -- 0ms;
SELECT ALL ((((((((((((rt0.c3)AND(SUM(vt1.c0))))OR((~ (vt1.c0)))))OR(((rt0.c4)<<(rt0.c1)))))AND(GROUP_CONCAT(vt1.c0))))AND(((vt1.c0) IS FALSE))))OR((- (rt0.c0)))) FROM vt1;SELECT ALL (((((vt1.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, vt1.c0)) AND ((rt0.c0, rt0.c4, vt1.c0)))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (LOWER(DISTINCT rt0.c3))) FROM rt0, vt1 WHERE (CASE QUOTE(NULL)  WHEN CAST(-1.99154166E9 AS INTEGER) THEN (('1182302598')||('.')) END); -- 0ms;
SELECT LAST_VALUE(((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c4 THEN '-1278760611' END) BETWEEN ((~ (rt0.c0))) AND (TRIM(rt0.c1)))) OVER ( ORDER BY x'') FROM vt1, rt0; -- 0ms;
SELECT ALL ((MIN(rt0.c1))<(COUNT(*))), x'', (((((rt0.c0, x'06ee', rt0.c3, rt0.c0, rt0.c4))=((rt0.c3, rt0.c2, rt0.c2, rt0.c2, rt0.c2))))GLOB('&*^}Tr1U')), (NOT (HEX(vt1.c0))), (+ (rt0.c0)) FROM vt1 WHERE (((NULLIF(0.05638775271155694, '&0'))<<(CASE WHEN -15119925 THEN 0Xffffffffb4dcf38e END))) GROUP BY CAST(((rt0.c1) BETWEEN (rt0.c4) AND ('!6oKq⻟')) AS NUMERIC) ORDER BY ((IFNULL(vt1.c0, rt0.c0))==((((rt0.c1, rt0.c4, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c3, vt1.c0)) AND ((rt0.c4, vt1.c0, rt0.c0))))) ASC;SELECT DISTINCT COUNT(((rt0.c2)AND(rt0.c2))) FROM vt1, rt0 WHERE ((NOT ((NULL IN ())))) LIMIT 790715811 OFFSET -1675949685; -- 0ms;
SELECT DISTINCT (-1675949685 IN ()) FROM rt0, vt1 WHERE (((((x'') NOT NULL)) NOT BETWEEN (IFNULL('Z', NULL)) AND (0xffffffff895eb11e))); -- 0ms;
SELECT ((CASE WHEN rt0.c1 THEN rt0.c4 END) NOTNULL) FROM vt1 GROUP BY CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt1.c0)) AS TEXT) LIMIT -1994461275;SELECT DISTINCT (((((x'')) BETWEEN ((x'')) AND ((rt0.c3)))) NOTNULL) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (+ (COUNT(0xffffffff895c6df6))) FROM vt1, rt0 WHERE (CAST((((x'ec69', '', 1.875679514E9)) NOT BETWEEN ((x'', NULL, '92607781')) AND ((0.19234282015554383, 0Xffffffffc745a4df, 'J^eX('))) AS INTEGER)) GROUP BY CAST(((rt0.c0)IS NOT(rt0.c4)) AS BLOB), (((rt0.c4 IN (rt0.c4))) BETWEEN (rt0.c2) AND ((rt0.c4 IN ()))), (((rt0.c2) BETWEEN (0.25648495509957003) AND (rt0.c4)) IN ()), CASE 'Z'  WHEN vt1.c0 THEN ((rt0.c4)GLOB(rt0.c4)) END, (~ ((+ (vt1.c0)))), NULL, ((((((vt1.c0) NOT BETWEEN (rt0.c1) AND (x'')))OR(((rt0.c0)OR(rt0.c1)))))OR(rt0.c4)); -- 4ms;
SELECT DISTINCT json_array_length(((((rt0.c3)OR(rt0.c1)))OR(rt0.c2))) FROM rt0, vt1; -- 0ms;
SELECT ALL ((AVG(vt1.c0))<(((rt0.c1) IS FALSE))), CAST(AVG(rt0.c4) AS NUMERIC), AVG(CAST(rt0.c3 AS TEXT)) FILTER(WHERE CAST(rt0.c4 AS NUMERIC) COLLATE BINARY) OVER ( GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE TIES) FROM vt1 WHERE (CASE CASE '-728896878'  WHEN NULL THEN 'g' END  WHEN (('943171720') NOT BETWEEN ('') AND (NULL)) THEN CAST('' AS INTEGER) ELSE '''+w3' COLLATE RTRIM END);SELECT DISTINCT (((vt1.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((CASE rt0.c0  WHEN NULL THEN rt0.c2 END, (- (rt0.c4)), rt0.c2 COLLATE NOCASE)) AND ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c3 END, rt0.c0 COLLATE BINARY, CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE NOCASE) IS FALSE) FROM rt0 WHERE (CAST(('9938254' IN ('#d%')) AS BLOB)) ORDER BY NULLIF(CASE WHEN rt0.c2 THEN rt0.c3 END, ((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c3)))AND(rt0.c0)))AND('1606085912')));SELECT ALL RANK() OVER () FROM rt0 LIMIT 1172438700 OFFSET 1515534555; -- 0ms;
SELECT DISTINCT ((((rt0.c1)==(vt1.c0))) BETWEEN (CASE WHEN x'72c7' THEN rt0.c1 END) AND (rt0.c3)), CASE CAST(rt0.c0 AS REAL)  WHEN CASE WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c3 THEN vt1.c0 END THEN ((rt0.c2) IS FALSE) END, LOWER((rt0.c0 IN ())), rt0.c2, 0.5550190450604948 FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c4)))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c2))) AND (json_patch(rt0.c4, rt0.c4))) WHERE (((((CAST(x'' AS INTEGER))AND(((((0.7915809995050191)AND('1143975150')))AND(0.5799444357079894)))))OR(0.005689450235124127))); -- 0ms;
SELECT ((('k')) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((TOTAL(vt1.c0)))), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c0))), (((rt0.c2, rt0.c4, rt0.c4, rt0.c4, rt0.c2))>=((rt0.c0, rt0.c2, rt0.c1, rt0.c2, vt1.c0))))) AND ((rt0.c3 COLLATE NOCASE, 0.7920122197069651, CHANGES()))), ((((((((rt0.c2)AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))))AND((((rt0.c3))<=((']XO'))))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT ALL CAST(rt0.c0 COLLATE RTRIM AS NUMERIC) FROM rt0, vt1 WHERE ((~ ((~ ('f↌'))))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE ((((((x'' IN ()))OR(NULL)))OR((('-1141556816') NOT NULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c2)) THEN ((rt0.c2)LIKE(rt0.c3)) END FROM vt1 WHERE (CASE CASE WHEN NULL THEN x'd575' END  WHEN CAST('1619608744' AS BLOB) THEN (NOT (-1998582057)) WHEN (+ (x'')) THEN 1.56825642E8 COLLATE RTRIM WHEN 0.6435778032756281 COLLATE RTRIM THEN ((NULL) BETWEEN (0.4637846969038142) AND (0.575490074220031)) ELSE CASE 0.8488269988389056  WHEN 0x25394c69 THEN 0.45301066477602525 WHEN 0.7859679731794845 THEN 0.16606343143768343 WHEN x'1326' THEN 3.46749153E8 END END);SELECT ((rt0.c3 COLLATE BINARY) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT x'f55df65d' FROM rt0, vt1; -- 1ms;
SELECT DISTINCT NULL, -152134694, COUNT(x'') OVER ( ORDER BY (+ ((- (rt0.c0)))) ASC  NULLS LAST) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3) ISNULL))+(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT rt0.c2 COLLATE NOCASE, (((rt0.c2))<((rt0.c0)))), (((+ (rt0.c0))) NOT BETWEEN ((~ (rt0.c3))) AND ((+ (rt0.c2)))), ROUND((~ (0.6607629343824586)), ((rt0.c3) NOTNULL)) FROM vt1 WHERE (((2.33774536E8)<<(x'')) COLLATE BINARY) LIMIT -15119925 OFFSET -1509489027;SELECT rt0.c2 FROM rt0, vt1 WHERE ((((((('-898161854')AND('')))AND(0.9694731038747637)))+((0.11409564971626429 IN ())))); -- 0ms;
SELECT DISTINCT AVG(DATETIME(rt0.c0, rt0.c0, rt0.c1)) OVER () FROM vt1 LIMIT -1084530482;SELECT DISTINCT TRIM(vt1.c0) COLLATE RTRIM FROM vt1, rt0 WHERE (CAST('MꥒM_}' AS BLOB) COLLATE BINARY); -- 0ms;
SELECT AVG(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0))) FROM rt0;SELECT CASE ((rt0.c2)*(rt0.c3))  WHEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c3)) THEN (rt0.c4 IN ('.+V䦫tF')) ELSE (~ (x'ddcd')) END, SUM(0.32222621830866716), rt0.c0 FROM rt0, vt1 WHERE ((((('-630205377')||(']\h%'))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((((rt0.c2, rt0.c1, 0.37259555406800693))<=((vt1.c0, rt0.c3, vt1.c0)))))>((-9.71981925E8))) FROM vt1;SELECT (((rt0.c0)) NOT BETWEEN ((COUNT(*))) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END))) FROM rt0 ORDER BY (((vt1.c0 IN ()))>(CAST(rt0.c2 AS INTEGER))) DESC, rt0.c0 DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((COALESCE(DISTINCT x'1563', 0.8525154593116389))OR(CASE WHEN '793099766' THEN NULL WHEN 0.06092509277750224 THEN '%LkHc6}IH' WHEN x'a728' THEN NULL END)))AND(((NULL) BETWEEN (NULL) AND (0Xffffffffa3048942)))))OR(((x'5560') BETWEEN ('793099766') AND (NULL)))))OR((0.821833419951213 IN ())))); -- 0ms;
SELECT DISTINCT (+ ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))) FROM vt1, rt0 GROUP BY ((rt0.c1)%(rt0.c4)) COLLATE RTRIM HAVING ((rt0.c1)+(MAX(rt0.c4))); -- 0ms;
SELECT ((rt0.c3) NOT BETWEEN (CAST(rt0.c4 AS NUMERIC)) AND (((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c4)))) FROM vt1, rt0; -- 0ms;
SELECT ALL (((((rt0.c4, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c4)) AND ((rt0.c4, vt1.c0, vt1.c0)))) BETWEEN (NULL) AND (((rt0.c3) NOT NULL))), ((((0Xffffffff894b7c64)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(rt0.c3 AS BLOB))), LIKELY(DISTINCT rt0.c4 COLLATE BINARY) FROM vt1, rt0 GROUP BY CASE rt0.c1 COLLATE NOCASE  WHEN UNLIKELY(rt0.c4) THEN IFNULL(DISTINCT rt0.c0, vt1.c0) ELSE vt1.c0 COLLATE BINARY END HAVING SUM((~ (vt1.c0))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c4)))AND(NULL)) WHEN json_array(x'', rt0.c0) THEN 0Xffffffffec00a0eb WHEN (((vt1.c0))<((rt0.c1))) THEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END END ASC;SELECT DISTINCT ((((rt0.c1)>>(rt0.c0))) BETWEEN (x'') AND (rt0.c2 COLLATE NOCASE)) FROM vt1, rt0 WHERE ((((0.653819992800451)<<('')) IN ())); -- 4ms;
SELECT '' FROM vt1, rt0 WHERE (((~ (0.4701141879147329)) IN ())); -- 0ms;
SELECT DISTINCT x'', ((((((rt0.c2)>(rt0.c3)))AND(CASE WHEN rt0.c0 THEN rt0.c4 END)))AND(rt0.c4 COLLATE BINARY)), TOTAL(rt0.c0 COLLATE NOCASE) COLLATE BINARY FROM vt1 GROUP BY (((~ (vt1.c0))) ISNULL) LIMIT 773483076;SELECT (((~ (vt1.c0))) NOT BETWEEN (rt0.c2) AND (rt0.c1)) FROM vt1 WHERE (LIKELIHOOD(x'' COLLATE BINARY, 0.548526265968345));SELECT DISTINCT CASE WHEN '1448011581' THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY, SUM((((('-256671217')AND(rt0.c4)))OR(vt1.c0)) COLLATE NOCASE) OVER (), COUNT((((rt0.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c4, vt1.c0)))) FROM vt1, rt0 GROUP BY CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c2 END AS TEXT) HAVING COUNT(*) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3)))&(x'')), rt0.c3, HEX((rt0.c2 IN ())) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(x'' AS NUMERIC) FROM rt0, vt1 WHERE (0.06520909846509226) LIMIT -1226227382; -- 1ms;
SELECT DISTINCT COUNT(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) OVER (), LAST_VALUE((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))>(((rt0.c2)LIKE('N-/GGn4Ro'))))) OVER (), ((((((((rt0.c1 COLLATE RTRIM)OR(((rt0.c4) IS FALSE))))AND((~ (x'8c03')))))AND(((vt1.c0) IS FALSE))))OR((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))), (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))!=(MAX(rt0.c3))), COUNT('-693213') OVER () FROM rt0, vt1 WHERE (((((0X585ddc62)LIKE(-1.039119957E9))) IS FALSE)); -- 0ms;
SELECT CASE ((rt0.c4) BETWEEN (-183671099) AND (rt0.c4))  WHEN ((rt0.c3)LIKE(rt0.c1)) THEN '18767476' ELSE (rt0.c3 IN ()) END FROM vt1;SELECT (((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))>=((rt0.c0 IN (rt0.c2, rt0.c3)))), CAST(rt0.c1 AS BLOB), ((((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))AND(TYPEOF(rt0.c2))))OR(((rt0.c0)-(x'9da4')))) FROM rt0, vt1 WHERE (NULLIF(DISTINCT CASE NULL  WHEN '3{.' THEN 'Xq>2&aa' ELSE NULL END, (((('')OR(0Xffffffffc2f5e67a)))AND(1.66612019E8)))) LIMIT 290724697; -- 0ms;
SELECT ALL (((((rt0.c4, rt0.c3, 0X564c7bcc)) BETWEEN ((rt0.c2, rt0.c3, NULL)) AND ((rt0.c2, rt0.c2, rt0.c4)))) NOT BETWEEN (((((NULL)OR(rt0.c1)))OR(vt1.c0))) AND (rt0.c0 COLLATE RTRIM)) FROM vt1 WHERE ((+ ((- (NULL))))) GROUP BY (~ (((rt0.c3) NOTNULL)));SELECT ((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS FALSE) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (NOT (0.6765219994790637)) FROM vt1 WHERE (0x2789e27e); -- 0ms;
SELECT DISTINCT ((((vt1.c0)<(rt0.c2)))/(CASE WHEN rt0.c4 THEN rt0.c3 END)), RANK() OVER (), IFNULL(DISTINCT (((vt1.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c4, NULL, rt0.c0))), rt0.c1) FROM rt0, vt1 WHERE (CASE WHEN ((0.4795106517666512) IS FALSE) THEN NULL COLLATE RTRIM END) GROUP BY ((((rt0.c3 COLLATE NOCASE)AND('7{')))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END)), (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND (('')))) BETWEEN (((rt0.c1)&(rt0.c1))) AND (rt0.c0 COLLATE RTRIM)), ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE); -- 1ms;
SELECT ALL (json_extract(rt0.c1, rt0.c0) IN ()) FROM vt1 WHERE (SQLITE_VERSION()); -- 0ms;
SELECT DISTINCT TOTAL(CAST(rt0.c0 AS REAL)) OVER () FROM vt1 WHERE ((((((NULL IN (0.236232997605758, x'')))OR(('-789437334' IN ()))))OR('697141384'))) GROUP BY CASE WHEN NULL THEN ((rt0.c0)/(rt0.c3)) END, ((rt0.c1)GLOB(rt0.c0)) COLLATE NOCASE, MIN((((rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c3, vt1.c0, '')) AND ((rt0.c1, NULL, rt0.c1, rt0.c1, vt1.c0))), NULL) HAVING CAST(CAST(NULL AS NUMERIC) AS REAL);SELECT DISTINCT ((rt0.c2 COLLATE NOCASE)AND((rt0.c3 IN ()))) FROM rt0, vt1 WHERE ((+ (CAST('627157885' AS REAL)))); -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) THEN x'' WHEN COUNT(x'2bee') THEN (rt0.c3 IN ()) WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) THEN vt1.c0 WHEN ((((NULL)AND(rt0.c2)))AND(rt0.c4)) THEN ((rt0.c0)%(rt0.c3)) WHEN json_array_length(vt1.c0, rt0.c2) THEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 END END FROM vt1 WHERE (ABS(((NULL) BETWEEN (x'fea8') AND (NULL))));SELECT ((((rt0.c4)>=(rt0.c2))) IS TRUE) FROM vt1 GROUP BY (((rt0.c0 COLLATE BINARY))<=((rt0.c3 COLLATE NOCASE))), rt0.c3, (((vt1.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c1 WHEN NULL THEN rt0.c4 END)) AND ((vt1.c0 COLLATE NOCASE))) HAVING ((0.14526454463977578)|(TOTAL_CHANGES()));SELECT DISTINCT ((((rt0.c2)==(vt1.c0))) ISNULL) FROM vt1 WHERE ((- (CAST('0.3053873002948029' AS REAL))));SELECT DISTINCT ((((SUM(rt0.c1))AND(json(NULL))))OR(rt0.c2 COLLATE NOCASE)), MAX(((((rt0.c0)AND(rt0.c4)))AND(rt0.c3))), RANK() OVER () FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((MIN(rt0.c3)) IS TRUE) FROM vt1, rt0 WHERE ((~ (CAST(NULL AS BLOB)))) LIMIT 1725131539; -- 0ms;
SELECT ((0xffffffffbcd81d10) BETWEEN (x'') AND ((rt0.c2 IN ()))) FROM vt1; -- 0ms;
SELECT rt0.c2 FROM rt0, vt1; -- 1ms;
SELECT DISTINCT CASE WHEN ((rt0.c4) NOTNULL) THEN rt0.c2 ELSE ((rt0.c1)<=('')) END, TOTAL(((((rt0.c3)AND(rt0.c4)))OR(rt0.c4))), ((MIN(NULL)) NOT BETWEEN ((+ (rt0.c0))) AND (vt1.c0)) FROM vt1;SELECT DISTINCT (((rt0.c1)) BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))) AND ((CAST(NULL AS INTEGER)))) FROM rt0; -- 0ms;
SELECT (((((rt0.c3))>((rt0.c4)))) IS TRUE), ((rt0.c1)IS NOT((rt0.c1 IN ()))), CASE rt0.c3  WHEN (- (vt1.c0)) THEN rt0.c0 COLLATE NOCASE ELSE ((x'') NOTNULL) END FROM vt1, rt0; -- 0ms;
SELECT ALL CASE WHEN rt0.c2 THEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END ELSE (((vt1.c0, rt0.c3, x''))>=((rt0.c3, '-1334508353', rt0.c3))) END FROM vt1;SELECT DISTINCT CASE ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c1) NOTNULL) THEN (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) END FROM vt1, rt0 ORDER BY ((((rt0.c2)>>(rt0.c1))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((('-1039119957') NOTNULL))) DESC, (~ (((rt0.c0)LIKE(rt0.c0)))) ASC  NULLS LAST, json_array_length(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c0);SELECT ABS(DISTINCT (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c4)))) FROM vt1, rt0 LIMIT -1052538294 OFFSET -1380342521; -- 0ms;
SELECT (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ('>/G') AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)) FROM vt1, rt0 WHERE (((IFNULL(DISTINCT '906851608', 0.005689450235124127))GLOB(((((((((-1148781902)OR('A휲!p')))AND('.2,')))AND(NULL)))AND(0.25648495509957003))))) INTERSECT SELECT (+ (CAST(rt0.c2 AS REAL))) FROM vt1 WHERE (CASE ((((((((x'')AND('cy')))AND(NULL)))OR(NULL)))OR(-1260588146))  WHEN ((x'5b7a') NOT BETWEEN (NULL) AND ('Z2bS')) THEN (((('2108111007')OR(0.2222833605868123)))OR('1782077921')) WHEN (('0.653819992800451')+(NULL)) THEN ((0X5b70a71c)<<(0.901161341471503)) WHEN (((('')OR(1261922197)))OR(NULL)) THEN 0.3628811295135774 ELSE SUBSTR(x'', NULL) END);SELECT ALL ((((rt0.c2)<<(rt0.c4))) IS FALSE), (+ ((((rt0.c2, vt1.c0, rt0.c2))>=((rt0.c3, rt0.c0, rt0.c1))))), (+ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) FROM vt1 WHERE (CAST(x'71c8' AS TEXT) COLLATE NOCASE) ORDER BY CASE ((rt0.c1) IS TRUE)  WHEN (rt0.c2 IN (rt0.c4)) THEN ((vt1.c0)IS NOT(rt0.c0)) WHEN (((rt0.c0))<=((rt0.c0))) THEN (- (rt0.c4)) WHEN (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))) THEN (((rt0.c1))=((rt0.c3))) END DESC  NULLS LAST;SELECT DISTINCT (NOT (((x'')||(rt0.c1)))) FROM rt0, vt1 GROUP BY CASE 0x3e448cb  WHEN rt0.c4 THEN vt1.c0 END COLLATE BINARY HAVING (((rt0.c4 IN ()))>=(((rt0.c4) ISNULL))); -- 0ms;
SELECT DISTINCT MAX(((vt1.c0)%(rt0.c0))) FROM rt0 RIGHT OUTER JOIN vt1 ON (((NOT (rt0.c3)))+((rt0.c4 IN ()))) WHERE (((((((NULL)>>(0Xffffffffec811000)))OR((~ (0x6278e702)))))OR((x'a3508c83' IN ())))); -- 0ms;
SELECT CASE (rt0.c2 IN (rt0.c3))  WHEN GROUP_CONCAT(rt0.c2) THEN NULL END FROM rt0, vt1 WHERE (x''); -- 0ms;
SELECT CASE (~ (rt0.c2))  WHEN ((((x'8003')OR(rt0.c3)))OR(rt0.c3)) THEN CAST(rt0.c0 AS TEXT) ELSE ((vt1.c0) IS TRUE) END FROM rt0;SELECT (- (vt1.c0)) COLLATE BINARY, GROUP_CONCAT(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN 0.4900755208198412 END COLLATE NOCASE) FILTER(WHERE LIKELIHOOD(CASE WHEN rt0.c1 THEN vt1.c0 END, 0.5998781019968353)) OVER (), TRIM(DISTINCT ((rt0.c2)>=(rt0.c3)), ((rt0.c1)%(rt0.c0))) FROM rt0 LIMIT 1193798752 OFFSET -1395205242;SELECT (((+ (vt1.c0))) IS FALSE), COUNT(((vt1.c0)>>(rt0.c3))) OVER (), rt0.c1 FROM vt1, rt0 WHERE (((((NULL) BETWEEN (0xffffffffc7dbf705) AND (NULL))) BETWEEN (((1.802956787E9)LIKE(0.3062828317777806))) AND (((((0.5266621417591224)AND('+K')))OR(x''))))) LIMIT 1803864124 OFFSET -789437334; -- 0ms;
SELECT DISTINCT AVG(((NULL)<>(rt0.c1))) FROM rt0, vt1 WHERE ((((x'')) NOT BETWEEN ((((0.5139531764812) NOT NULL))) AND ((CAST('쌩m' AS INTEGER))))); -- 0ms;
SELECT DISTINCT CHAR((rt0.c3 IN (rt0.c0)), GLOB(rt0.c2, rt0.c4), rt0.c3 COLLATE NOCASE) FROM rt0; -- 0ms;
SELECT DISTINCT LTRIM(CAST(rt0.c3 AS BLOB), ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) FROM rt0, vt1 WHERE (CASE WHEN ((x'') NOT BETWEEN ('1636840628') AND ('\7HE#M')) THEN LIKELY(DISTINCT NULL) ELSE NULL END); -- 0ms;
SELECT ((((rt0.c2)<<(rt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (MIN(rt0.c0))) FROM vt1 WHERE ((((((((('-1352244100')OR(0.6286863412011889 COLLATE NOCASE)))OR(((0.7575981699832023)<(NULL)))))AND(((x'') NOTNULL))))AND((~ (NULL)))));SELECT CAST(rt0.c1 AS REAL) FROM rt0, vt1 GROUP BY CHANGES() COLLATE NOCASE; -- 0ms;
SELECT CASE ((((vt1.c0)OR(rt0.c4)))AND(rt0.c0))  WHEN ((((rt0.c4)OR(rt0.c1)))AND(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END ELSE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) END FROM vt1, rt0 LIMIT -575372856 OFFSET 1944559881; -- 0ms;
SELECT ((((((((vt1.c0 COLLATE NOCASE)OR((rt0.c4 IN ('1831750652', NULL)))))OR((+ (rt0.c4)))))OR(((rt0.c1)AND(rt0.c0)))))OR(((rt0.c1)<=(rt0.c1)))) FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c4 COLLATE BINARY)OR(CAST(rt0.c4 AS TEXT))); -- 0ms;
SELECT CAST(rt0.c0 COLLATE NOCASE AS BLOB), SUM(((('-282057898'))<((rt0.c3)))), '^p' FROM vt1, rt0 WHERE ((~ ((NULL IN ())))); -- 1ms;
SELECT DISTINCT CAST('SX' AS NUMERIC), ((((rt0.c1) NOTNULL))IS((~ (rt0.c3)))), ((((rt0.c2)<<(rt0.c3)))OR(CAST(rt0.c2 AS INTEGER))) FROM vt1 WHERE ((((NULL IN ())) IS FALSE));SELECT DISTINCT vt1.c0, ((((rt0.c3)OR(vt1.c0)))AND(NULL)) COLLATE RTRIM COLLATE BINARY, ((COUNT(*)) BETWEEN (TOTAL(rt0.c0)) AND (rt0.c2)) FROM rt0 WHERE (((((0.390303724252973) NOT BETWEEN (0.28320272676113734) AND (-406271404)))+(CAST('-1519655342' AS NUMERIC))));SELECT (((- (rt0.c4))) NOT NULL), ((((rt0.c4)AND(vt1.c0)))OR(rt0.c1)) COLLATE RTRIM COLLATE NOCASE, SUBSTR(MAX(rt0.c4), 0xffffffffe12a9296) FROM vt1 WHERE (CAST(-459627557 COLLATE BINARY AS NUMERIC));SELECT DISTINCT NULLIF(DISTINCT ((rt0.c4)GLOB(rt0.c0)), ((rt0.c3)|(rt0.c4))) FROM rt0, vt1 WHERE (CAST(((NULL) NOT BETWEEN ('744514805') AND (NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT CAST(NULL AS BLOB) COLLATE NOCASE FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (+ (((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)))) FROM vt1, rt0; -- 0ms;
SELECT ALL AVG(((x'') ISNULL)) FROM vt1, rt0 WHERE (CAST(CAST('0.6989141413482254' AS TEXT) AS TEXT)); -- 0ms;
SELECT DISTINCT CAST(rt0.c4 COLLATE BINARY AS INTEGER) FROM rt0, vt1 WHERE (((((CAST(0.5851643538452945 AS REAL))AND(NULL)))OR(((1.636840628E9)||(0x1f4bb128))))); -- 0ms;
SELECT ((COUNT(*)) BETWEEN ((rt0.c4 IN ())) AND (((rt0.c2)*(vt1.c0)))) FROM vt1, rt0 WHERE (CASE WHEN (NULL IN ()) THEN ((x'')&('-1816175691')) ELSE (('8Hz()4}')>=('N-/GGN4RO')) END) GROUP BY ((((')8')AND((('-958424266')>(vt1.c0)))))AND(rt0.c3 COLLATE BINARY)) LIMIT -1021808642; -- 0ms;
SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))GLOB('')) FROM rt0;SELECT ALL rt0.c3 FROM vt1 WHERE (((((x'' COLLATE BINARY)AND((((0.7636129957252642))<((x'a1a4'))))))OR(NULL COLLATE NOCASE))) ORDER BY (((rt0.c4)!=(rt0.c4)) IN ((rt0.c2 IN (rt0.c3)), MAX(vt1.c0, rt0.c4))) LIMIT 1342344618;SELECT DISTINCT rt0.c2 FROM vt1 WHERE ((((NULL)) NOT BETWEEN ((LTRIM(0.27542700002941933, NULL))) AND (((('-1921986141') ISNULL)))));SELECT vt1.c0 FROM vt1; -- 0ms;
SELECT ALL ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))==(SUM(rt0.c3))), ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))AND(vt1.c0)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c4, vt1.c0, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c1)))) AND ((0Xffffffffe8e7382d IN (rt0.c0)))), (((rt0.c0)) BETWEEN ((((rt0.c4)%(vt1.c0)))) AND ((((rt0.c4)>(790715811))))), (((vt1.c0)) NOT BETWEEN ((NULL)) AND ((((vt1.c0)||(rt0.c2))))), ((((((rt0.c1)AND(rt0.c2)))OR(vt1.c0))) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c0)))) FROM rt0 WHERE (CAST(TOTAL_CHANGES() AS BLOB));SELECT SUM((vt1.c0 IN ())) FROM rt0; -- 0ms;
SELECT (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN 0.17149342917277877 ELSE rt0.c4 END IN ()) FROM vt1, rt0 WHERE ((x'' COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT ((rt0.c0) BETWEEN (NULL) AND (0Xffffffff9c6ddd90)) COLLATE BINARY COLLATE NOCASE, (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END)) AND ((CAST(rt0.c1 AS NUMERIC)))), rt0.c2 FROM rt0 GROUP BY UNLIKELY(vt1.c0) COLLATE NOCASE;SELECT DISTINCT json_array_length(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 END) FROM vt1 WHERE (CASE WHEN UPPER(DISTINCT NULL) THEN (NOT (x'bd36')) END);SELECT NULL FROM rt0 INNER JOIN vt1 ON ((((rt0.c4)<>(rt0.c2)))!=(load_extension(vt1.c0, rt0.c2))) WHERE ((((((((((((7.90715811E8))>((NULL))))OR(((0xffffffffe9296cd3)&(NULL)))))OR(NULL COLLATE NOCASE)))AND(CASE WHEN NULL THEN x'' END)))AND((- (x''))))); -- 0ms;
SELECT ALL (+ (rt0.c2)) FROM vt1 WHERE (((LIKELIHOOD(3.1171875E8, 0.13781317880538757))<=((((NULL, 0.4818313064067459, 0.8835512227270342))<=(('9938254', x'', x''))))));SELECT CAST(rt0.c0 AS TEXT) COLLATE NOCASE FROM vt1;SELECT DISTINCT ((((rt0.c0) IS FALSE)) NOT BETWEEN (0.8817602573140311) AND (QUOTE(rt0.c0))) FROM rt0, vt1 WHERE (((((NULL) NOT BETWEEN (x'') AND (0.466411128427779)))<(((0.23044408415403295)LIKE(x''))))); -- 0ms;
SELECT rt0.c3 FROM rt0, vt1 LIMIT 1793779512 OFFSET -85079822; -- 1ms;
SELECT ((GROUP_CONCAT(vt1.c0))==(CASE WHEN rt0.c1 THEN rt0.c2 END)) FROM vt1, rt0; -- 0ms;
SELECT ALL 0Xffffffffc6df9b36, COUNT(*) OVER (), CASE WHEN (1368640006 IN ()) THEN CASE rt0.c2  WHEN rt0.c0 THEN '-1990282978' ELSE rt0.c0 END END FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOTNULL))<(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))) FROM rt0, vt1 GROUP BY rt0.c3; -- 0ms;
SELECT ALL (((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(x'')))OR(rt0.c4)) IN (rt0.c1 COLLATE NOCASE)), (((vt1.c0, 0Xffffffffc593ba35, rt0.c0)) BETWEEN (((((rt0.c2, vt1.c0, rt0.c1))>((x'', rt0.c1, rt0.c1))), (rt0.c1 IN (x'')), CAST(rt0.c4 AS BLOB))) AND (((NOT ('-1429568399')), NULL COLLATE RTRIM, CAST(rt0.c4 AS NUMERIC)))), DENSE_RANK() OVER () FROM vt1 GROUP BY CASE ((rt0.c3)AND(vt1.c0))  WHEN (((x'2d0dc962')) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) THEN CAST(rt0.c1 AS INTEGER) WHEN CAST(rt0.c3 AS NUMERIC) THEN 0x5193ca06 WHEN (((rt0.c1, rt0.c4, rt0.c2))<((rt0.c4, 0X2ced2edf, vt1.c0))) THEN rt0.c1 ELSE CAST(rt0.c4 AS NUMERIC) END HAVING ((((rt0.c0) NOT NULL)) NOT BETWEEN (AVG(rt0.c0)) AND (SUM(vt1.c0)));SELECT DISTINCT NULL COLLATE BINARY FROM rt0 WHERE (((-9.41885691E8) IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT rt0.c0 FROM rt0, vt1 WHERE (json_array_length(((' #!*O') NOTNULL), ((x'ce11') ISNULL))) GROUP BY rt0.c3 COLLATE BINARY HAVING DATE('-0.0', '120694086', (('C-4,*&') NOT NULL), x'', (NOT (vt1.c0)));SELECT DISTINCT ((TOTAL(0.23209793460338035)) NOTNULL) FROM vt1, rt0 WHERE ((((0.2134664527653366)) BETWEEN ((NULL)) AND (('hZ'))) COLLATE NOCASE) GROUP BY ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE RTRIM HAVING (CASE rt0.c1  WHEN rt0.c4 THEN vt1.c0 END IN ()); -- 0ms;
SELECT DISTINCT rt0.c4 FROM vt1 WHERE (((((((0.06468243001948282)OR('')))OR(0.4356088584181401))) BETWEEN ((-9.58424266E8 IN ())) AND (((x'b0bf') IS TRUE))));SELECT DISTINCT ((0.022166148260367557)GLOB((+ (rt0.c1)))), NULL, NTILE(CAST(LIKELY(rt0.c1) AS TEXT)) OVER () FROM rt0, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN (((NOT (rt0.c0)), rt0.c0, (((vt1.c0))>=((rt0.c3))))) AND (((('%)獞Q')|(vt1.c0)), ((vt1.c0) ISNULL), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) FROM vt1, rt0; -- 0ms;
SELECT (x'' IN ()), 0X6a3859e1, json_quote(((rt0.c2)<(vt1.c0))) FROM vt1, rt0 GROUP BY ((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)) COLLATE NOCASE, CAST(CASE rt0.c3  WHEN -370462671 THEN rt0.c4 ELSE rt0.c2 END AS BLOB), rt0.c1 HAVING (((((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c2)))OR(x''))))=((((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c2))))); -- 0ms;
SELECT ((CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 END)LIKE(((((rt0.c0)OR(rt0.c4)))AND(rt0.c4)))), (~ (CAST('954676114' AS REAL))), ((CAST(rt0.c2 AS REAL)) ISNULL) FROM vt1;SELECT DISTINCT (((- (rt0.c4))) NOT BETWEEN (vt1.c0) AND (((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))) FROM rt0 WHERE ((((((NULL))!=((NULL))))GLOB(CASE WHEN x'' THEN NULL END)));SELECT ((rt0.c0)GLOB(json_quote(vt1.c0))) FROM vt1 WHERE (((CAST(x'77f0' AS REAL))LIKE(((('-1352244100', 1.636840628E9, 'W&eb[\r', '1424823399', NULL)) NOT BETWEEN ((0.5170331659058462, NULL, 0.12720216093914316, '', 0.9610750095884231)) AND ((NULL, '-1080042172', NULL, x'', ''))))));SELECT DISTINCT CASE rt0.c3 COLLATE NOCASE  WHEN MAX(rt0.c0) THEN rt0.c2 ELSE 0xffffffff83efac01 COLLATE NOCASE END, NTILE(CAST((rt0.c2 IN ()) AS REAL)) OVER (), ((((rt0.c0))>=((rt0.c3))) IN (json_array(rt0.c2, rt0.c0, rt0.c2, vt1.c0))) FROM rt0;SELECT rt0.c3, ((AVG(rt0.c2)) NOT NULL), NULL FROM rt0 WHERE ((((('0.27542700002941933')LIKE(x'')))<<(((0.005750037308997702) NOT BETWEEN ('92607781') AND (-1.755933875E9))))); -- 0ms;
SELECT DISTINCT ((((rt0.c4)<=(rt0.c3)))>=(((rt0.c1)<<(rt0.c0)))), (NOT (((rt0.c0)IS NOT(rt0.c2)))), ((CAST(rt0.c3 AS BLOB)) IS TRUE) FROM rt0 WHERE ('1802956787'); -- 0ms;
SELECT DISTINCT TOTAL((((NULL, vt1.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c1)) AND ((vt1.c0, rt0.c0, vt1.c0)))), ((LOWER(rt0.c2)) NOTNULL), rt0.c3 FROM rt0, vt1; -- 0ms;
SELECT ALL '1623556406' FROM rt0, vt1 WHERE (((((x'')*(0.04937306580479783))) NOTNULL)); -- 0ms;
SELECT CASE rt0.c3 COLLATE NOCASE  WHEN rt0.c0 COLLATE BINARY THEN ((-1.655456181E9)AND(rt0.c2)) ELSE rt0.c1 END FROM rt0 GROUP BY ((((((rt0.c2) IS TRUE))AND('fb')))AND((((vt1.c0, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c4, vt1.c0))))) HAVING ((rt0.c2)<<(rt0.c0)) COLLATE NOCASE LIMIT 793099766;SELECT DISTINCT MAX(vt1.c0, rt0.c0) COLLATE RTRIM, ((((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))||((- (rt0.c4)))), (((((rt0.c3, rt0.c0, 1.56825642E8)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c4, vt1.c0, rt0.c1))))IS NOT(rt0.c4)) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT MAX(SUM(vt1.c0 COLLATE NOCASE)), '-1334508353', COUNT(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) FROM vt1, rt0 WHERE (CAST(CASE x''  WHEN '3WFa' THEN x'' WHEN NULL THEN '9R' WHEN NULL THEN '2050461187' ELSE 0.21701842098587132 END AS REAL));SELECT ALL LAG(CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER), ((((((((((((((((((((NULL)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(json_quote(vt1.c0))))AND(vt1.c0 COLLATE NOCASE)), ((CAST(vt1.c0 AS REAL)) IS TRUE)) OVER () FROM vt1 WHERE ((-1631238019 COLLATE NOCASE IN ())) LIMIT -1519655342; -- 0ms;
SELECT DISTINCT (CAST('' AS BLOB) IN ()) FROM vt1 WHERE (CASE ((0.4669896561183482)%(NULL))  WHEN ((']Dq-')OR('-88882861')) THEN (NOT (0.24809362981595928)) END) GROUP BY (((rt0.c3)) BETWEEN ((((0x7274f240)IS NOT(rt0.c0)))) AND (((rt0.c4 IN (rt0.c1, rt0.c2))))), rt0.c1, ((rt0.c0)>(rt0.c4));SELECT DISTINCT PERCENT_RANK() OVER ( RANGE  UNBOUNDED PRECEDING) FROM rt0 ORDER BY ((rt0.c1)%(rt0.c1)) COLLATE BINARY ASC, CASE ((rt0.c4)>(rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN CASE WHEN rt0.c4 THEN vt1.c0 ELSE NULL END END LIMIT -1864025608;SELECT DISTINCT ((-1.7976931348623157E308) ISNULL) COLLATE BINARY FROM vt1 WHERE (CAST((('Xq>2&aa') BETWEEN (0xffffffffc103fd88) AND (x'')) AS BLOB)); -- 0ms;
SELECT DISTINCT (~ (((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))) FROM rt0, vt1 WHERE (((0.5906930585830737 COLLATE RTRIM) ISNULL)); -- 1ms;
SELECT DISTINCT (((rt0.c3)) NOT BETWEEN (((rt0.c2 IN (rt0.c3)))) AND ((SUM(rt0.c2)))) FROM vt1 WHERE (((((x'e96e') NOT BETWEEN (0xffffffffe4bf8a3f) AND ('-1487441905'))) IS FALSE));SELECT DISTINCT CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 END COLLATE BINARY FROM rt0 WHERE (NULL);SELECT DISTINCT ((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(0.33615829469328296)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c1))) IS FALSE) FROM rt0, vt1 ORDER BY IFNULL(((rt0.c2) IS TRUE), ((rt0.c4)IS(0.35357560145585476))); -- 0ms;
SELECT DISTINCT TOTAL(((0xffffffffbfed2dba) NOTNULL)) OVER () FROM vt1, rt0; -- 0ms;
SELECT ALL CAST((vt1.c0 IN ()) AS BLOB), RANK() OVER (), rt0.c0 FROM vt1, rt0; -- 0ms;
SELECT DISTINCT NULL FROM vt1 ORDER BY (((((rt0.c0)<(rt0.c1))))>((((rt0.c0) NOTNULL))));SELECT DISTINCT (((COUNT(rt0.c3)))>=(((NOT (vt1.c0))))), NTH_VALUE(CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((x'cd98') BETWEEN (vt1.c0) AND (vt1.c0)) THEN (('-1322048176')OR('WvAJ?')) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0) IS FALSE) END, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS NOT(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) OVER (), ((((((((((((CASE WHEN rt0.c4 THEN rt0.c2 END)AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END)))AND(((((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))AND(5.25054248E8)))OR(rt0.c2)))OR(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0) IS TRUE))))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c4 COLLATE BINARY)) FROM vt1;SELECT TOTAL(vt1.c0 COLLATE RTRIM COLLATE RTRIM) OVER () FROM rt0, vt1 GROUP BY ((((rt0.c2)>>(rt0.c3)))AND((rt0.c2 IN ()))), ((LIKELIHOOD(rt0.c4, 0.5906625815434151))<<('-1453639541')), '-682578240';SELECT ALL GROUP_CONCAT(rt0.c2) OVER () FROM rt0; -- 1ms;
SELECT DISTINCT ((((SQLITE_VERSION())OR(((rt0.c2)<(rt0.c1)))))AND(CAST(rt0.c4 AS INTEGER))) FROM rt0, vt1 WHERE (HEX(DISTINCT TRIM(DISTINCT x'db02'))) GROUP BY CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN CASE rt0.c4  WHEN rt0.c2 THEN vt1.c0 WHEN x'112e' THEN rt0.c3 WHEN 0.17559191813576114 THEN rt0.c3 END END; -- 0ms;
SELECT DISTINCT (NOT ((((rt0.c0))<=((vt1.c0))))) FROM rt0 WHERE ((NOT ((+ (0.2609978609907371)))));SELECT DISTINCT IFNULL(DISTINCT TOTAL(vt1.c0), json_array_length(rt0.c4)), CAST(((x'')IS NOT(rt0.c1)) AS BLOB), rt0.c4 FROM vt1, rt0 WHERE ((((NULL)) BETWEEN ((((x'')>=('-926748360')))) AND ((CASE x''  WHEN '4z7_\' THEN 0.4954714001964704 END)))); -- 0ms;
SELECT ((CASE WHEN x'' THEN rt0.c4 END) NOT NULL) FROM rt0, vt1; -- 0ms;
SELECT ALL AVG((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))) OVER () FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c1)))<=(CASE vt1.c0  WHEN rt0.c4 THEN rt0.c1 END)) FROM rt0, vt1 WHERE ((CAST(x'' AS NUMERIC) IN ())); -- 0ms;
SELECT ALL CASE 0.19234282015554383  WHEN ROUND(rt0.c1, rt0.c1) THEN (~ (vt1.c0)) END FROM vt1 NOT INDEXED, rt0 ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE  NULLS LAST, NULLIF(DISTINCT ((rt0.c4)GLOB(rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))) ASC; -- 0ms;
SELECT ALL GROUP_CONCAT(CASE WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN '3>rV' THEN rt0.c4 END) FILTER(WHERE (((NOT (rt0.c2))) NOTNULL)) OVER (), ((0xffffffffaf66647c)>=(UPPER(DISTINCT rt0.c2))), ((((rt0.c3)AND(CASE WHEN rt0.c4 THEN rt0.c3 END)))AND(COUNT(*))) FROM vt1;SELECT DISTINCT AVG(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END COLLATE NOCASE) FROM rt0 WHERE (((0.3548689425557072 COLLATE BINARY) BETWEEN (((NULL)>=(0Xffffffffa556534a))) AND (x'06d604c8' COLLATE NOCASE))); -- 1ms;
SELECT ALL (((rt0.c4)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))) COLLATE NOCASE FROM vt1, rt0; -- 0ms;
SELECT ALL (((rt0.c3 IN ()))-(((rt0.c0) ISNULL))) FROM rt0, vt1 WHERE (((((((1.854152417E9)AND('1941992855')))OR('Li')))<((((0.014421586593633906, '1854152417', 0.09520117417937823)) NOT BETWEEN ((0.4026912869840713, x'e352', x'')) AND (('', x'', '\nED0U!mH')))))) GROUP BY CAST(((rt0.c4) IS FALSE) AS NUMERIC); -- 0ms;
SELECT DISTINCT (((rt0.c0, NULL, rt0.c0)) BETWEEN ((((vt1.c0)/(rt0.c2)), (rt0.c1 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END)) AND ((0.19680766862001664, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), (vt1.c0 IN ())))) FROM rt0;SELECT ALL ((((rt0.c2) IS TRUE))-(((vt1.c0) BETWEEN (0.2108812544120362) AND (rt0.c0)))) FROM vt1 WHERE (0.026938203646675873);SELECT (((NULL IN (rt0.c4)))>(rt0.c0 COLLATE RTRIM)), (~ (((rt0.c1)IS NOT(rt0.c2)))), ((((rt0.c1)*(rt0.c0))) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))) AND ((((rt0.c1, rt0.c3, rt0.c2))!=((vt1.c0, rt0.c1, rt0.c2))))) FROM vt1, rt0 GROUP BY CASE WHEN ((rt0.c1) NOT NULL) THEN (x'' IN (vt1.c0, rt0.c2)) WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c1 AS INTEGER) WHEN rt0.c1 THEN vt1.c0 ELSE (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))) END HAVING ((((((((CAST(vt1.c0 AS BLOB))AND(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END)))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE -9223372036854775808 END)))OR((+ (rt0.c3)))))OR(((rt0.c4) IS TRUE))); -- 0ms;
SELECT ALL (~ (rt0.c2)) COLLATE RTRIM FROM vt1 WHERE ((((NULL, '', NULL)) NOT BETWEEN ((INSTR(-97172868, x''), (('H_')==('-673205001')), ((0.38676160004350446)LIKE(x'')))) AND (((x'b1fb' IN (0.6982200682888926)), LIKELY(x''), CASE NULL  WHEN x'' THEN 'utTB' ELSE '0.28320272676113734' END))));SELECT DISTINCT (COALESCE(DISTINCT rt0.c4, 0xffffffff95b8c072, rt0.c0, rt0.c4) IN (NULL, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)), (CASE WHEN rt0.c1 THEN rt0.c3 END IN ()), ((rt0.c4) BETWEEN (((rt0.c1)>(vt1.c0))) AND ((((rt0.c1, '6GchO铱Ge', rt0.c2)) BETWEEN ((rt0.c4, vt1.c0, rt0.c0)) AND ((rt0.c1, vt1.c0, rt0.c2))))), (((NOT (vt1.c0)))-(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))), (((rt0.c3)LIKE(rt0.c4)) IN ()) FROM rt0 FULL OUTER JOIN vt1 ON rt0.c2 GROUP BY NULL LIMIT -1334508353; -- 1ms;
SELECT ALL ((((((rt0.c4)AND(NULL)))AND(rt0.c0))) NOTNULL) FROM rt0; -- 0ms;
SELECT DISTINCT ((SUM(rt0.c4)) NOTNULL), CUME_DIST() OVER (), (+ (vt1.c0 COLLATE BINARY)) FROM vt1 WHERE (CAST(CASE WHEN '-1567468147' THEN x'7626' END AS BLOB)) LIMIT 890657056;SELECT ALL SUM((+ (0.70322097345479))) FILTER(WHERE CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) OVER () FROM rt0 WHERE ((('-1181019901' COLLATE RTRIM) NOT BETWEEN ((('YT') IS FALSE)) AND (CAST(NULL AS BLOB)))); -- 0ms;
SELECT ALL COUNT(*) COLLATE RTRIM, (((rt0.c0))<=((rt0.c3))) COLLATE RTRIM, (((vt1.c0)) NOT BETWEEN ((((rt0.c1)+(rt0.c1)))) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) FROM rt0 WHERE (CAST(CAST(0.8835512227270342 AS REAL) AS INTEGER));SELECT DISTINCT ((((~ (rt0.c1)), MIN(rt0.c2), SQLITE_VERSION()))=((CASE WHEN rt0.c0 THEN NULL END, ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)), ((rt0.c1)LIKE(''))))), ((((((rt0.c3)IS NOT(rt0.c3)))AND(rt0.c4 COLLATE NOCASE)))OR((+ (rt0.c0)))), rt0.c1 FROM rt0, vt1; -- 0ms;
SELECT DISTINCT SUM(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END) OVER (), ((((rt0.c0)OR(((rt0.c4) ISNULL))))OR(rt0.c2 COLLATE BINARY)), ((((rt0.c1)*(x'')))+((((rt0.c0)) NOT BETWEEN ((0.236232997605758)) AND ((vt1.c0))))) FROM vt1, rt0 LIMIT 1509123889 OFFSET 1117258410; -- 0ms;
SELECT ALL TOTAL((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY) FILTER(WHERE TYPEOF(((rt0.c0) IS TRUE))) OVER () FROM vt1, rt0; -- 1ms;
SELECT DISTINCT '', AVG(((vt1.c0)>=(rt0.c4))), ((((((((CASE WHEN rt0.c0 THEN vt1.c0 ELSE NULL END)AND('156825642')))AND(((rt0.c3) ISNULL))))AND(UPPER(rt0.c4))))AND(vt1.c0)) FROM rt0 WHERE (UPPER(DISTINCT CASE '-941372756'  WHEN 'c' THEN 0.2856217272215962 END));SELECT DISTINCT ((rt0.c3 COLLATE BINARY) BETWEEN (((rt0.c2) NOTNULL)) AND ((((rt0.c2)) NOT BETWEEN (('-294423260')) AND ((rt0.c4))))), CAST('2078830675' AS BLOB), rt0.c1 FROM rt0, vt1 WHERE (((x'8c57')<(x''))); -- 0ms;
SELECT DISTINCT ((((vt1.c0)&(vt1.c0))) IS TRUE) FROM rt0, vt1 WHERE (CAST((('0.8082319514763773') NOT BETWEEN ('') AND (NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((rt0.c3) IS FALSE) COLLATE RTRIM COLLATE NOCASE FROM vt1 WHERE (CAST((~ ('E)萑k')) AS INTEGER)) GROUP BY ((((((((0.3842062467112263)OR(rt0.c3)))OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)))AND((vt1.c0 IN (rt0.c0)))) HAVING LIKELIHOOD(DISTINCT (- (rt0.c2)), 0.4924928102801128);SELECT ALL CAST(((((((((rt0.c2)OR(rt0.c0)))AND('')))OR(rt0.c3)))AND(vt1.c0)) AS BLOB), SUM(((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c0))), CAST(LOWER(vt1.c0) AS NUMERIC) FROM vt1 GROUP BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))-(CAST(rt0.c0 AS BLOB))) HAVING CAST((NOT ('-951737121')) AS TEXT);SELECT DISTINCT ((LAST_INSERT_ROWID())LIKE(json_extract(rt0.c4, rt0.c4))), DENSE_RANK() OVER (), vt1.c0 FROM vt1;SELECT DISTINCT COUNT(*), (((- (rt0.c3))) NOT BETWEEN (((((rt0.c3)AND(rt0.c2)))AND(rt0.c0))) AND ((vt1.c0 IN (-1.547226021E9)))), ((((((((NULL)AND(STRFTIME(rt0.c4, rt0.c2, rt0.c1))))OR(((x'') NOT BETWEEN (rt0.c4) AND (vt1.c0)))))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))))AND((rt0.c2 IN (rt0.c2)))) FROM vt1, rt0 ORDER BY (('2121297937') BETWEEN (((rt0.c4) NOTNULL)) AND (((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1)))) DESC  NULLS LAST, ((CAST(rt0.c3 AS INTEGER)) IS FALSE)  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1; -- 0ms;
SELECT CASE COUNT(*)  WHEN UPPER(rt0.c0) THEN TOTAL(rt0.c0) ELSE (- (0x69a6165b)) END FROM vt1;SELECT ALL (NOT (vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE ((((('FALSE') NOT BETWEEN (NULL) AND (NULL)))==(CAST(x'' AS NUMERIC)))); -- 1ms;
SELECT GROUP_CONCAT(((((rt0.c0)AND(vt1.c0)))OR(rt0.c4))) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt1, rt0 WHERE (((((((0.8525154593116389) NOT BETWEEN (0.8460559131537252) AND (x'')))OR((+ (NULL)))))OR(LOWER(DISTINCT 0.4924550054042053)))); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c1))) BETWEEN (((rt0.c2) NOT NULL)) AND (((((rt0.c4)AND(0.6365316310345857)))AND(vt1.c0)))), ((((0.69242238520107)AND(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM COLLATE RTRIM, (UPPER(rt0.c4) IN ()) FROM rt0, vt1; -- 0ms;
SELECT CHAR(CAST(rt0.c0 AS REAL), rt0.c2 COLLATE RTRIM, (((rt0.c4, '-500416663', rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, vt1.c0)) AND ((rt0.c4, rt0.c0, vt1.c0))), ((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)), rt0.c2 COLLATE RTRIM), COUNT(*), ((((CAST(vt1.c0 AS REAL))OR(SUM(rt0.c3))))AND(((rt0.c4) NOTNULL))) FROM vt1;SELECT ((LIKELY(rt0.c3)) IS TRUE) FROM vt1 WHERE (CAST(NULL AS BLOB));SELECT ALL (((((+ (rt0.c4)))OR(CASE WHEN vt1.c0 THEN rt0.c4 ELSE vt1.c0 END)))OR(((rt0.c2) IS FALSE))), ((((CASE WHEN vt1.c0 THEN rt0.c1 END)AND(((rt0.c2)&(rt0.c0)))))AND(((vt1.c0) BETWEEN (rt0.c0) AND ('-1399767400')))), rt0.c2 FROM rt0, vt1; -- 0ms;
SELECT ALL ((((vt1.c0)|(rt0.c0))) NOT NULL) FROM vt1, rt0 WHERE ((((((('S')OR(NULL)))OR(-234281153))) BETWEEN ((- (0.17761230823076402))) AND ((('G') BETWEEN (0x7274f240) AND (NULL))))); -- 0ms;
SELECT DISTINCT ((rt0.c3)>(SUM(rt0.c0))) FROM vt1;SELECT DISTINCT rt0.c0 COLLATE RTRIM FROM vt1, rt0 WHERE ((((x'')<=(-1655456181)) IN ((x'2cb4' IN ())))) LIMIT 156825642 OFFSET -1400260575; -- 0ms;
SELECT DISTINCT CASE WHEN (~ ('k9D(''/s﷓*')) THEN ((rt0.c1)<=(rt0.c0)) END FROM rt0, vt1 WHERE (((x'0e8982ec' COLLATE BINARY) BETWEEN (((('466127093')) NOT BETWEEN ((NULL)) AND ((0.3062828317777806)))) AND (CASE WHEN x'' THEN '-1937332259' WHEN 'B^' THEN NULL WHEN NULL THEN 0xffffffffefea2808 ELSE NULL END))) ORDER BY ((((rt0.c3) IS TRUE))*(((0.9074183733967676)-(vt1.c0)))) LIMIT 1490854775 OFFSET 365108177; -- 0ms;
SELECT ALL AVG(CASE rt0.c1  WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c2 END) OVER () FROM rt0 GROUP BY x'', rt0.c4, CASE WHEN (((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c4, rt0.c0, rt0.c4)) AND ((rt0.c1, -1967248306, rt0.c3))) THEN (rt0.c4 IN ()) END, LIKELY(DISTINCT rt0.c1) COLLATE NOCASE, ((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))>=(((rt0.c1)IS NOT(rt0.c3))));SELECT DISTINCT ((((((((((((((rt0.c3)AND(NULL)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c4))) BETWEEN (((NULL)IS(vt1.c0))) AND (CASE rt0.c2  WHEN '' THEN vt1.c0 END)) FROM rt0, vt1 WHERE ((((0.16086029650748757 IN ()))IS NOT(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c4)))%(rt0.c2)), (((vt1.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c4 END)) AND ((CAST(x'a684' AS TEXT)))), ABS(DISTINCT ((rt0.c3) ISNULL)) FROM vt1, rt0 LIMIT 1619608744 OFFSET 516422954; -- 0ms;
SELECT ALL (((+ (rt0.c2)))<>(rt0.c0)) FROM rt0 WHERE ((~ (((NULL)<=(-1.260588146E9))))) ORDER BY ((((rt0.c3 IN (vt1.c0, rt0.c3))))<>(((- (vt1.c0)))))  NULLS FIRST;SELECT ALL ((GROUP_CONCAT(vt1.c0)) NOTNULL) FROM vt1, rt0 WHERE (CHAR(((0.3062828317777806)OR(x'')), ((NULL)+(0.7704432694282641)), NULL)) ORDER BY ((((rt0.c1)IS NOT(vt1.c0)))IS(((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))) ASC, ((((((((json_array_length(rt0.c0, '-63134568'))OR(rt0.c0 COLLATE BINARY)))OR((~ ('-299223678')))))AND(-1039119957)))AND(TRIM(rt0.c0, rt0.c3))) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c1)))AND(vt1.c0))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL) FROM rt0; -- 0ms;
SELECT (((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)), '7mE洜v,', ((rt0.c4)IS(rt0.c2)), (~ (NULL)), ((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))))<((rt0.c4 COLLATE BINARY, rt0.c0 COLLATE RTRIM, COUNT(*), (((rt0.c0, 0.7417190852301294, rt0.c1, rt0.c1, '롺Va怔rG'))<((vt1.c0, rt0.c3, rt0.c1, rt0.c1, rt0.c1))), COUNT(rt0.c0)))) FROM vt1, rt0 LIMIT 257437282; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ())) NOT BETWEEN (((rt0.c0)AND(rt0.c0))) AND (LIKELIHOOD(DISTINCT rt0.c0, 0.28703922625535705))) FROM rt0 ORDER BY rt0.c3 ASC  NULLS FIRST; -- 0ms;
SELECT ALL HEX(DISTINCT rt0.c0 COLLATE NOCASE), (((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c2))))==((rt0.c3 COLLATE BINARY))), (((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT NULL) FROM rt0, vt1 WHERE (((((NULL) IS FALSE)) NOT BETWEEN (((NULL) NOT NULL)) AND ((('1782077921')>=(1.110638774E9))))); -- 1ms;
SELECT CAST('W' AS INTEGER) FROM rt0, vt1 WHERE (NULL); -- 0ms;
SELECT ALL NTH_VALUE(((CASE WHEN rt0.c4 THEN rt0.c4 END)>=(UPPER(vt1.c0))), CASE CAST(rt0.c1 AS BLOB)  WHEN (('-789437334')>>(x'')) THEN NULLIF(rt0.c3, 'g') ELSE (((rt0.c2, rt0.c1, vt1.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, rt0.c0)) AND ((']k K', rt0.c4, rt0.c4))) END) OVER () FROM rt0, vt1 WHERE ((((('2078830675') NOT BETWEEN (0.7787272425769256) AND (0.38387345909879034)))AND((((('-958424266')OR(0.2540385578490232)))AND(0x3d6b6bd1))))); -- 0ms;
SELECT (((+ (rt0.c4))) BETWEEN ('9938254') AND (ABS(rt0.c4))) FROM rt0; -- 0ms;
SELECT '1875679514' FROM rt0, vt1 WHERE (CASE WHEN (((NULL, x'', '', -1077964841, 1.424823399E9)) BETWEEN ((0.860402835955662, NULL, x'', x'', 0.31218218948037957)) AND ((x'2fe8', x'', x'', NULL, -382292374))) THEN ((0x26f44a26)<>(-9.41885691E8)) WHEN ('0.7920122197069651' IN (NULL, 0.2975508265358633)) THEN (- (x'a921')) WHEN ((712069288) NOT NULL) THEN ((((NULL)OR(NULL)))OR(0.24416412438020052)) ELSE CAST('' AS INTEGER) END) GROUP BY ((rt0.c1)|(((rt0.c3)>>(rt0.c0)))); -- 0ms;
SELECT DISTINCT -1.141556816E9 FROM rt0, vt1 ORDER BY CASE WHEN (vt1.c0 IN ()) THEN SQLITE_COMPILEOPTION_GET(rt0.c4) ELSE (rt0.c0 IN (rt0.c0)) END ASC  NULLS FIRST, (((((rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, '1110638774', rt0.c4)) AND ((vt1.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c1))))>((rt0.c2 IN ()))) ASC; -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c0 AS REAL) AS NUMERIC) FROM rt0 WHERE (((((1.27055994E8)-(0.48527963438406785))) NOT NULL)) ORDER BY ((('') IS TRUE) IN ()) DESC, ((rt0.c2 IN ()) IN (UPPER(DISTINCT vt1.c0)))  NULLS FIRST, MAX(CAST(rt0.c3 AS INTEGER), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END) LIMIT 1547204567 OFFSET -534420108;SELECT DISTINCT ((rt0.c4)LIKE(((vt1.c0) NOT NULL))) FROM vt1 WHERE (CASE (+ (0.5464874845344585))  WHEN ((((0.9174994597433798)AND(NULL)))AND(NULL)) THEN (x'60ea' IN (x'74c5')) WHEN (('-1328589061') BETWEEN ('1831562854') AND (x'42e0b5ef')) THEN json_insert('124951618', NULL, 0xfffffffffa4300f0, NULL, '1427330535') WHEN (((0.4795106517666512)) NOT BETWEEN ((0.06520909846509226)) AND ((NULL))) THEN ((x'')AND('1117730185')) ELSE ((0.6298884899167141)+(NULL)) END);SELECT rt0.c0, SUM((((rt0.c2))>((rt0.c0)))), '' COLLATE RTRIM COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c2) NOT NULL))), LEAD((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))IS(((rt0.c0)>(vt1.c0)))), LIKELIHOOD(rt0.c3, 0.8786998941918235), ((~ (rt0.c0)) IN ())) OVER (), CASE ((rt0.c2)GLOB(rt0.c2))  WHEN (~ (rt0.c4)) THEN rt0.c0 COLLATE NOCASE WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 COLLATE BINARY WHEN (((rt0.c4))=((rt0.c3))) THEN CASE 'Eyꔇ/LUK춝'  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c3 ELSE vt1.c0 END ELSE ((vt1.c0)>(rt0.c2)) END FROM vt1, rt0; -- 0ms;
SELECT DISTINCT MIN(CAST(rt0.c0 AS TEXT) COLLATE RTRIM) FROM vt1, rt0 WHERE (((((TRIM(-5.37294622E8, '-657570500'))OR(CAST(NULL AS NUMERIC))))OR(CAST(x'85c2' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (((((rt0.c0))<=((vt1.c0)))) BETWEEN (((NULL) ISNULL)) AND ((((rt0.c3))<>((rt0.c3))))) FROM rt0, vt1 WHERE (LIKELY(DISTINCT CASE WHEN '-1' THEN '-337977749' END)); -- 0ms;
SELECT (((- (vt1.c0))) NOTNULL), CASE ((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c3))  WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c1)>(rt0.c0)) ELSE CAST(rt0.c3 AS REAL) END, ((((((((ABS(DISTINCT rt0.c3))OR('-758670636')))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (0.6270971577544008)))))OR(TOTAL(vt1.c0))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))IS NOT(CASE rt0.c4  WHEN rt0.c2 THEN NULL WHEN x'' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END)), NTILE(CAST(((vt1.c0)+(vt1.c0)) AS TEXT)) OVER (), (~ (((x'5dea') NOT NULL))) FROM vt1 WHERE ((((0.2982640166796159) IS TRUE) IN ((+ (NULL)))));SELECT DISTINCT (((0.31642835217649823)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((rt0.c1))), rt0.c1, ((CAST(rt0.c4 AS BLOB)) NOTNULL), x'c70e', HEX(DISTINCT 0.2284376569485329 COLLATE BINARY) FROM rt0; -- 1ms;
SELECT (((rt0.c2))>(('\nED0U!mH'))) COLLATE BINARY FROM vt1 WHERE (CASE WHEN ((((x'')AND(0.4669896561183482)))OR('')) THEN '' WHEN NULL THEN (('-1052549997') NOT BETWEEN (NULL) AND (0x44c4c966)) WHEN QUOTE(NULL) THEN ((((x'd4c8')AND('1875679514')))AND(-9.58424266E8)) END);SELECT DISTINCT ((((((((((vt1.c0)AND(rt0.c4)))AND(rt0.c0)))OR(0X4b8975a8)))AND(rt0.c4))) NOT NULL), ((((rt0.c2)GLOB(rt0.c1)))*((NOT (rt0.c2)))), ((NOT (rt0.c2)) IN ()) FROM vt1, rt0 WHERE ((((x'9fee')) BETWEEN ((x'')) AND ((CASE 0X37ee34eb  WHEN x'4955' THEN '30' END)))); -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3)))+((- (rt0.c4)))), 0.5616776429554599, GROUP_CONCAT(CAST(rt0.c2 AS INTEGER)) FILTER(WHERE CASE ((rt0.c2) IS FALSE)  WHEN ((vt1.c0)-(rt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE CASE WHEN rt0.c2 THEN rt0.c4 ELSE NULL END END) OVER () FROM rt0 WHERE ((((x'')) NOT BETWEEN (((NULL IN ('', 'Y,')))) AND (((NULL IN ())))));SELECT DISTINCT (rt0.c0 IN (rt0.c0)) COLLATE BINARY FROM vt1 ORDER BY rt0.c2  NULLS LAST;SELECT CASE rt0.c4  WHEN ((((vt1.c0)AND(rt0.c4)))OR(rt0.c0)) THEN (rt0.c0 IN ()) WHEN (rt0.c4 IN ()) THEN rt0.c1 COLLATE BINARY WHEN (rt0.c3 IN ()) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END END FROM rt0 WHERE ((((x'')+(-547696206)) IN (((x'')||(NULL)), ((NULL) BETWEEN (0.3191633521128632) AND ('-951737121')))));SELECT ((((CAST(rt0.c3 AS TEXT))AND(TYPEOF(rt0.c1))))AND(CAST(vt1.c0 AS INTEGER))) FROM vt1, rt0 ORDER BY (((~ (rt0.c3))) NOT BETWEEN ((vt1.c0 IN ())) AND (((rt0.c4)IS(rt0.c4)))); -- 0ms;
SELECT ALL COUNT(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2))), GROUP_CONCAT((((rt0.c2))=((rt0.c2)))), ((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c3)))/(((rt0.c0)<(vt1.c0)))) FROM rt0, vt1 WHERE (((((NULL)>>(x''))) NOT BETWEEN ((((-1183810060)) NOT BETWEEN ((NULL)) AND (('ﵑ 냮r	')))) AND (CAST('4' AS NUMERIC)))) UNION ALL SELECT DISTINCT rt0.c0, ((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR('1854152417')))<=(((vt1.c0) NOTNULL))), ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (LIKELIHOOD(rt0.c2, 0.9773038179206202)) AND ((rt0.c0 IN ()))) FROM rt0 FULL OUTER JOIN vt1 ON CASE CAST(rt0.c3 AS REAL)  WHEN ((vt1.c0)IS(rt0.c2)) THEN (((rt0.c0))<=((rt0.c2))) END WHERE (CASE (('-1296066914') IS FALSE)  WHEN ((((NULL)AND(0.9753593703472394)))OR(NULL)) THEN (((0.05323126384246968, NULL, 0.9721301386488826))<((0.26430168253129294, x'', x''))) END); -- 0ms;
SELECT DISTINCT (((((((((rt0.c3 IN ()))OR(((((rt0.c0)OR(NULL)))OR(rt0.c2)))))AND(TOTAL(rt0.c4))))AND((rt0.c4 IN ()))))AND(CASE WHEN rt0.c3 THEN 1.424823399E9 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt1.c0 END)) FROM vt1, rt0 LIMIT -168722224; -- 4ms;
SELECT (- (((rt0.c2)IS(rt0.c4)))) FROM rt0 WHERE ((- (((-937254466) NOT BETWEEN (0.611846892523479) AND (0.6463567499451455))))); -- 0ms;
SELECT COUNT(*) OVER () FROM vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED(rt0.c3) COLLATE BINARY FROM vt1;SELECT DISTINCT rt0.c4 FROM vt1, rt0 WHERE ((((('-1755933875') IS FALSE)) IS FALSE)); -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) AND ((NULL))) FROM rt0, vt1; -- 0ms;
SELECT ALL ((((rt0.c2)==(rt0.c0))) IS FALSE), (((((rt0.c1))<>((rt0.c1)))) NOT BETWEEN (((rt0.c4) ISNULL)) AND (CASE vt1.c0  WHEN rt0.c4 THEN rt0.c1 END)), ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END)*(CAST(rt0.c0 AS REAL))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((- (rt0.c1)) IN ()), CAST((x'' IN (rt0.c2)) AS BLOB), (((('E|T	')-(rt0.c3)))IS NOT(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)))AND(vt1.c0)))OR(rt0.c1)))) FROM vt1, rt0 WHERE ((((''))<=((0.5697892960403524))) COLLATE RTRIM) ORDER BY (((((rt0.c0, rt0.c1, rt0.c4))<>((vt1.c0, vt1.c0, rt0.c1))))/((~ (rt0.c2)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT AVG(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END) OVER ( RANGE BETWEEN (((NOT (rt0.c3)))%(CAST(rt0.c3 AS BLOB))) FOLLOWING AND rt0.c0 PRECEDING EXCLUDE CURRENT ROW), SUM(((rt0.c1)||(rt0.c4))), (((((rt0.c3)OR(rt0.c0)))AND(vt1.c0)) IN ()) FROM vt1 WHERE ((((NULL)) BETWEEN ((CAST(x'' AS NUMERIC))) AND ((((('-322826891'))!=(('1868520392')))))));SELECT ALL ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(1.868520392E9)))AND(rt0.c4)))&((((vt1.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))) FROM vt1, rt0 WHERE (CASE CASE WHEN NULL THEN x'' WHEN 0Xffffffffaf7ffcb5 THEN x'' WHEN '' THEN 0.08415286682382772 ELSE '4Z7_\' END  WHEN ((((0.05475497423707776)OR(NULL)))AND('-2000606514')) THEN ((x'')|(0.2553621261704373)) ELSE 0.21663246224853216 END); -- 1ms;
SELECT DISTINCT CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)) END FROM vt1 WHERE (CASE x'60df' COLLATE RTRIM  WHEN ((NULL) NOT NULL) THEN LOWER(x'') WHEN (('')/(x'')) THEN x'' WHEN LOWER(DISTINCT NULL) THEN 1123614246 COLLATE RTRIM END);SELECT DISTINCT SUM(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) OVER (), CASE IFNULL(DISTINCT rt0.c0, 0X2d4d80fc)  WHEN ((rt0.c4) ISNULL) THEN (rt0.c0 IN ()) WHEN CAST(2.33774536E8 AS INTEGER) THEN rt0.c3 WHEN (rt0.c1 IN (rt0.c4)) THEN '' ELSE (('')%(rt0.c0)) END, ((((((((COUNT(rt0.c3))OR(rt0.c1)))AND(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))AND(UPPER(DISTINCT rt0.c1))))OR((rt0.c3 IN (vt1.c0, rt0.c0)))) FROM rt0 WHERE ('244570377');SELECT ((MAX('-229279454')) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c4 END) AND (LIKELIHOOD(DISTINCT rt0.c4, 0.4705174543318733))) FROM rt0;SELECT DISTINCT CASE CAST(rt0.c2 AS TEXT)  WHEN vt1.c0 COLLATE NOCASE THEN json_remove(rt0.c2, rt0.c3, rt0.c1, rt0.c1) ELSE CAST(rt0.c3 AS TEXT) END FROM vt1, rt0 WHERE ((((('9o\nK')AND(((x'')>=(x'')))))AND((~ (NULL))))); -- 0ms;
SELECT DISTINCT MAX((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c4, '}T', rt0.c0)))), ((((rt0.c1))<((rt0.c0))) IN ()), ((((((rt0.c1)*(rt0.c2)))OR(TOTAL('|?,*y듷Z͝e'))))OR('-1994461275')) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 ELSE vt1.c0 END)AND(LIKELY(DISTINCT vt1.c0))))OR(rt0.c0 COLLATE BINARY)))OR(((((rt0.c0)OR(NULL)))OR(vt1.c0)))))OR(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c3)))) FROM vt1 WHERE (LIKELIHOOD(0.8464226405148689, 0.9568583363962365)) ORDER BY ((((((((((rt0.c0) NOTNULL))AND((('3pmEj')IS(rt0.c4)))))OR(vt1.c0)))AND((vt1.c0 IN (vt1.c0, '-1419359271')))))AND(vt1.c0)) DESC  NULLS FIRST;SELECT DISTINCT COUNT(((rt0.c2)-(rt0.c4))) OVER () FROM rt0, vt1; -- 0ms;
SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))OR(rt0.c0)))AND(((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c4)))) FROM vt1 LIMIT -1161335567;SELECT DISTINCT ((rt0.c2) NOT NULL) FROM vt1, rt0 LIMIT -537294622; -- 0ms;
SELECT DISTINCT (((rt0.c2)&(rt0.c1)) IN (((rt0.c3)|(rt0.c0)))) FROM vt1, rt0 ORDER BY CASE ((rt0.c4)==(rt0.c1))  WHEN 'Y>' THEN ((x'')%(rt0.c3)) END  NULLS FIRST; -- 1ms;
SELECT ALL GLOB(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c0)||(rt0.c1))) FROM rt0 WHERE (CASE CASE WHEN 'LlHaA_F+ꢈ' THEN NULL ELSE x'' END  WHEN ((x'') NOT NULL) THEN x'e326' END); -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c0)) BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((x'') BETWEEN (QUOTE(vt1.c0)) AND ((~ (rt0.c2)))) FROM rt0;SELECT (NOT (SUBSTR('327462559', rt0.c3))), (+ (((vt1.c0) ISNULL))), (+ ((rt0.c0 IN (rt0.c3)))) FROM rt0 WHERE (((SQLITE_VERSION())LIKE((~ (NULL)))));SELECT ALL (((rt0.c1)) BETWEEN ((DATE(0.40202399144135736, rt0.c3, vt1.c0))) AND ((rt0.c2))) FROM rt0;SELECT ALL ((vt1.c0)>>(CAST(vt1.c0 AS INTEGER))) FROM vt1, rt0 WHERE ((((NULL)) NOT BETWEEN ((0X41352d63 COLLATE NOCASE)) AND ((((0.5483006746389932)<<('-1004022966')))))); -- 0ms;
SELECT DISTINCT 0.11360506203474297 FROM rt0, vt1 WHERE ((((NULL)+(x'')) IN ())); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE (rt0.c3 IN (rt0.c1))  WHEN (NOT (rt0.c4)) THEN load_extension(rt0.c2, rt0.c3) END) OVER (), ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN ((NOT (rt0.c0))) AND (rt0.c1)), (((~ (rt0.c4)))>>(CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END)) FROM vt1, rt0 WHERE (((CASE x''  WHEN '876227736' THEN 1.368640006E9 ELSE x'' END) NOT NULL)) LIMIT 156825642 OFFSET 423041651;SELECT DISTINCT SQLITE_SOURCE_ID() FROM rt0; -- 0ms;
SELECT DISTINCT (+ (vt1.c0)) COLLATE BINARY FROM vt1 WHERE (((-1595485568 COLLATE NOCASE)IS(((3.0156768E7)<=('-1662891094'))))); -- 0ms;
SELECT DISTINCT ((rt0.c4 IN ()) IN (rt0.c1)), rt0.c4, highlight(rt0.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN NULL ELSE rt0.c1 END, 0.4081201428757951, rt0.c3 COLLATE NOCASE), x'59fc', ((JULIANDAY(rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c2, rt0.c0, vt1.c0, '-1782356377', rt0.c0)) IS TRUE) FROM vt1, rt0 WHERE ((+ ((('md.<3\n\r0') NOT BETWEEN (x'') AND (0.3062828317777806)))));SELECT DISTINCT (rt0.c3 IN ()), ((((rt0.c3 COLLATE NOCASE)AND(rt0.c1)))OR(((rt0.c4)-(rt0.c0)))), rt0.c0 FROM vt1 LIMIT 1129975145 OFFSET -234281153;SELECT ALL CAST(((rt0.c1) ISNULL) AS REAL) FROM rt0 WHERE (((((x'')AND(0.23680509093626478)))AND(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END)<=(((((((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3)))OR(vt1.c0)))OR(rt0.c2)))), (((- (rt0.c3))) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (COUNT(*))), ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (json_valid('FALSE')) AND (((rt0.c4)OR(rt0.c4)))) FROM rt0;SELECT ALL ((x'')!=(((((vt1.c0)AND('')))AND(rt0.c2)))), ((rt0.c2 COLLATE NOCASE) IS FALSE), ((vt1.c0)||((rt0.c0 IN ()))) FROM vt1, rt0 WHERE (((((NULL)|(''))) NOT BETWEEN (CAST(0.17149342917277877 AS BLOB)) AND (((('')) BETWEEN ((0.643254386197612)) AND (('')))))); -- 0ms;
SELECT DISTINCT CASE WHEN (~ (rt0.c1)) THEN (~ (rt0.c0)) ELSE ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END, (('') NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))), CAST(AVG(0.005689450235124127) AS BLOB) FROM vt1, rt0 WHERE (((((x'2ed187e5') NOTNULL)) ISNULL)); -- 0ms;
SELECT DISTINCT AVG(CASE rt0.c3  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END), (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END))), UNLIKELY(CAST(rt0.c1 AS REAL)) FROM vt1 WHERE (CAST((((NULL)) BETWEEN ((9938254.0)) AND ((0.39928015184292087))) AS INTEGER));SELECT ALL (CAST(0xffffffffbc1a7156 AS TEXT) IN ()), ((((x'') IS FALSE))GLOB(((('')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))), rt0.c4 FROM rt0, vt1 LIMIT -958424266 OFFSET -1209166506; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN (((((rt0.c3, rt0.c0, rt0.c0))<(('2078830675', rt0.c4, rt0.c2))))) AND ((rt0.c3))) FROM vt1 WHERE ('y	0Pvlz');SELECT RANK() OVER () FROM rt0 WHERE ((((CASE ''  WHEN '-349185651' THEN x'' ELSE 0.08145659996785548 END))=(((x'3bd1' IN ()))))); -- 0ms;
SELECT (- (CAST(rt0.c4 AS REAL))), ((CHANGES()) NOT NULL), (~ ('2123601847')) FROM vt1 WHERE ((((x'' IN ()))LIKE((('') IS TRUE))));SELECT DISTINCT (((((((rt0.c3)OR('')))AND(vt1.c0)), (~ (rt0.c3)), rt0.c4))=((rt0.c0 COLLATE BINARY, ((rt0.c1) IS FALSE), 0Xffffffffb4dcf38e))) FROM vt1, rt0 LIMIT 1393850348; -- 0ms;
SELECT ALL rt0.c2, (((vt1.c0 IN (vt1.c0)))|(((((rt0.c0)OR(rt0.c3)))OR(rt0.c4)))), (((('120694086')<<(rt0.c2))) NOT NULL) FROM vt1;SELECT ALL (((((+ (rt0.c3)))OR(ABS(vt1.c0))))AND(((((vt1.c0)AND(rt0.c0)))AND(rt0.c3)))), CAST(((rt0.c3) BETWEEN (0.49070683940544624) AND (rt0.c1)) AS BLOB), CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)LIKE(rt0.c0)) WHEN (((vt1.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))) THEN (~ (rt0.c0)) WHEN (- (rt0.c0)) THEN ((rt0.c3)>=(rt0.c2)) ELSE ((((vt1.c0)OR(rt0.c2)))OR(rt0.c4)) END FROM rt0, vt1 WHERE ((((((+ (-1728639261)))AND((((x'')) BETWEEN (('-971981925')) AND (('D2'))))))AND(SQLITE_VERSION()))); -- 0ms;
SELECT CAST(((rt0.c1) NOTNULL) AS INTEGER) FROM rt0, vt1 LIMIT -1421868016; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), CASE WHEN ((0.617481275217144)IS(rt0.c1)) THEN CAST(rt0.c0 AS REAL) WHEN ((((vt1.c0)AND(rt0.c4)))AND(rt0.c1)) THEN rt0.c3 WHEN '346749153' THEN ((vt1.c0)&(rt0.c3)) END, x'' FROM vt1, rt0 WHERE ((((('0.6167299955482317') IS FALSE))*(((0.634084076743608) BETWEEN (-505126604) AND (0.10569297756604656))))); -- 0ms;
SELECT ALL (((rt0.c2 COLLATE NOCASE))>=((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END))) FROM vt1, rt0 WHERE (((((x'')LIKE(NULL)))>>(CAST('-142388396' AS INTEGER)))) GROUP BY (((((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c2))))<=((((rt0.c2)=(rt0.c4))))), ((((vt1.c0)IS NOT(rt0.c0))) IS TRUE), ((((rt0.c2)<<(rt0.c4)))LIKE(((rt0.c0)OR(rt0.c2)))); -- 0ms;
SELECT CASE UPPER(rt0.c3)  WHEN (rt0.c4 IN ()) THEN ((vt1.c0) IS TRUE) WHEN (~ (rt0.c2)) THEN ((rt0.c4) IS FALSE) WHEN ((rt0.c0)*(rt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN (NOT (rt0.c4)) THEN ((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN HEX(vt1.c0) END, ((x'')|(vt1.c0)), CASE CAST(rt0.c4 AS NUMERIC)  WHEN ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)) THEN (- (1944559881)) WHEN GROUP_CONCAT(rt0.c4) THEN vt1.c0 COLLATE RTRIM WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)) THEN TOTAL(NULL) ELSE (+ (rt0.c0)) END FROM rt0 WHERE ((((((((((('-350219427')||(NULL)))OR(NULL)))AND((NOT (x'')))))OR((+ (NULL)))))OR(('sx' IN ()))));SELECT DISTINCT CAST(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END AS INTEGER), (NOT (CAST(rt0.c2 AS NUMERIC))), SUM((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) FROM rt0;SELECT DISTINCT x'', ((((((((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c3)))AND(vt1.c0)))LIKE((rt0.c3 IN ()))), (((vt1.c0)OR(vt1.c0)) IN ()), TYPEOF(''), NULL FROM rt0, vt1; -- 0ms;
SELECT (- (((vt1.c0)>>(vt1.c0)))) FROM rt0;SELECT ((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('346749153')))+(CASE WHEN vt1.c0 THEN rt0.c3 END)), (- (NULL)), CAST(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END AS NUMERIC) FROM rt0, vt1; -- 0ms;
SELECT ALL ((((rt0.c4) IS TRUE)) NOT NULL) FROM rt0, vt1 WHERE (x'5235'); -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS TEXT)) BETWEEN (SUM(rt0.c2)) AND (HEX(rt0.c3))) FROM vt1;SELECT ALL ((((rt0.c3)IS NOT(rt0.c0))) NOT BETWEEN ((((rt0.c3))>=((rt0.c0)))) AND (COUNT(*))), rt0.c4, ((rt0.c0)<>(HEX(DISTINCT rt0.c2))) FROM rt0, vt1 ORDER BY CASE rt0.c2  WHEN 0.8626006158427083 THEN rt0.c3 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt1.c0)IS NOT('mBaPJ-<')), (((CAST(143704510 AS BLOB)))==((((rt0.c3) NOT NULL)))), COUNT(*) OVER () FROM rt0, vt1 WHERE ((~ (('' IN ())))); -- 1ms;
SELECT (~ (((((((((vt1.c0)OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c4)))) FROM vt1, rt0 ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END COLLATE NOCASE ASC, (((((rt0.c1))<=((''))))IS((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) DESC; -- 0ms;
SELECT (((- (vt1.c0))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c0 COLLATE RTRIM)) FROM rt0, vt1 WHERE (NULL); -- 0ms;
SELECT ALL (((((((vt1.c0)OR(rt0.c2)))AND(rt0.c3))))>=((rt0.c3 COLLATE BINARY))) FROM rt0, vt1; -- 0ms;
SELECT ALL TRIM(DISTINCT -1.004022966E9) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2 IN (rt0.c0)))OR(rt0.c4 COLLATE NOCASE)))AND((('-894754484') NOT BETWEEN (rt0.c3) AND (rt0.c2)))) FROM vt1 WHERE (HEX(DISTINCT CAST('-498703178' AS TEXT))) GROUP BY CASE WHEN rt0.c3 THEN 1.329342959E9 END HAVING NULL;SELECT DISTINCT ((((MIN(vt1.c0))OR(((rt0.c3)>(rt0.c0)))))AND(GROUP_CONCAT(rt0.c4))), rt0.c4, TYPEOF(0x721b22ae) FROM vt1, rt0; -- 0ms;
SELECT (~ ((0.5468397903531051 IN ()))) FROM vt1, rt0 WHERE (CASE WHEN ((1.619608744E9) NOT NULL) THEN '\n	' WHEN ((0.05847453825705573) NOT NULL) THEN ((0.9292240081857964)>>(0.07607875120873286)) WHEN (((0.6980904262806036))==((0.23076977362251727))) THEN NULL COLLATE NOCASE ELSE ((x'9c9a') NOTNULL) END); -- 0ms;
SELECT ALL CAST((((rt0.c3, rt0.c2, rt0.c0, 0xffffffffb07504bf, rt0.c4)) BETWEEN ((rt0.c4, rt0.c0, vt1.c0, NULL, rt0.c0)) AND ((vt1.c0, rt0.c3, vt1.c0, rt0.c4, '_ mE'))) AS TEXT), (((((0.6369534160657813) NOTNULL)))>=(((rt0.c2 IN (vt1.c0))))), ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c3)OR(rt0.c1)))AND(rt0.c0))) AND (((rt0.c0)%(rt0.c2)))) FROM rt0, vt1; -- 1ms;
SELECT DISTINCT TOTAL(((((rt0.c0)AND('qa\cx	mg_')))OR(''))) FILTER(WHERE TYPEOF(CASE vt1.c0  WHEN rt0.c4 THEN rt0.c0 END)) OVER (), ((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)) COLLATE BINARY, ROW_NUMBER() OVER ( ORDER BY rt0.c2 DESC RANGE  UNBOUNDED PRECEDING) FROM rt0;SELECT (+ (CASE WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c4 END)) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))<>(CASE WHEN rt0.c0 THEN rt0.c4 END)) FROM vt1;SELECT ALL CAST((+ (vt1.c0)) AS TEXT), GLOB((rt0.c4 IN ()), TRIM(DISTINCT '-1572926663', ')1{')), ((CASE WHEN rt0.c3 THEN rt0.c2 END)<<(rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE ((((NULL)<(NULL)) IN ()));SELECT ALL ((((((((x'e3561baf')OR((- (rt0.c2)))))OR(AVG(rt0.c3))))OR((vt1.c0 IN ()))))AND(rt0.c4)) FROM vt1;SELECT LAST_VALUE((((((((((((((((('-1118987519')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND((~ (vt1.c0)))))OR(((0.4169465466617398) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))AND(((vt1.c0) IS TRUE)))) OVER (), ((CAST(rt0.c3 AS TEXT))==(CAST(rt0.c3 AS BLOB))), (~ ((- (rt0.c3)))) FROM vt1 GROUP BY ((rt0.c1)IS(((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) HAVING rt0.c2;SELECT DISTINCT ((((((rt0.c2)&(vt1.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)))))OR((((NULL))>=((rt0.c4))))), DATE(LTRIM(NULL), vt1.c0, TRIM(rt0.c0, rt0.c2)), CAST(((rt0.c0)<=(rt0.c3)) AS NUMERIC), CASE WHEN ((rt0.c0) IS FALSE) THEN ((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)) END, rt0.c4 FROM vt1 WHERE ((((((x'f1f9' IN ()))OR(((NULL) NOT NULL))))OR((- (x'3082'))))) GROUP BY (((((rt0.c2))<((vt1.c0)))) ISNULL);SELECT DISTINCT SUM(CAST(rt0.c3 AS INTEGER) COLLATE RTRIM) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS NUMERIC) FROM vt1 LIMIT -1755933875;SELECT ALL (((- (rt0.c1))) BETWEEN (((rt0.c1)>(vt1.c0))) AND (CAST(rt0.c1 AS NUMERIC))) FROM rt0;SELECT ALL CAST(((rt0.c4) BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER), (((rt0.c3)) BETWEEN ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CAST(rt0.c1 AS REAL)))), (CAST(rt0.c3 AS BLOB) IN (rt0.c3 COLLATE BINARY)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((SUM(vt1.c0))GLOB(((vt1.c0) NOTNULL))) FROM rt0 GROUP BY (((rt0.c3 IN ()))&(((rt0.c4) ISNULL))) HAVING ((((rt0.c1) NOT BETWEEN ('롺Va怔rG') AND (rt0.c0)))-((((rt0.c3, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c3)) AND ((NULL, rt0.c2, vt1.c0)))));SELECT DISTINCT (- (((vt1.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) FROM rt0, vt1; -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS NUMERIC))%(COUNT(rt0.c2))) FROM vt1, rt0; -- 0ms;
SELECT ((((rt0.c1)*(rt0.c4)))!=(((rt0.c4)*(rt0.c4)))), (NOT (rt0.c3)) COLLATE BINARY, (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) FROM rt0; -- 0ms;
SELECT ALL (((- (vt1.c0))) NOT BETWEEN (((rt0.c4)<(rt0.c0))) AND (json_object(rt0.c3, rt0.c3, rt0.c3, rt0.c2))), CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC), ((rt0.c2)>=(((((rt0.c3)AND(rt0.c0)))AND(rt0.c4)))) FROM vt1, rt0;SELECT ALL (- (((1182302598) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0 WHERE (((CAST(0.8627078057643799 AS NUMERIC))==(CHANGES()))); -- 0ms;
SELECT ALL LAST_VALUE(0X13153524) OVER (), ((CAST(x'4b78' AS TEXT))GLOB((- (rt0.c3)))), HEX((rt0.c1 IN ())) FROM rt0, vt1 WHERE (((('1976360595') IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT (NOT (((rt0.c0)IS(rt0.c1)))), NULL, (CAST(vt1.c0 AS INTEGER) IN (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) FROM vt1 WHERE (((((NULL) IS TRUE))>((('%)獞Q')>=(3.1171875E8)))));SELECT CASE (((rt0.c2))==((rt0.c1)))  WHEN UNLIKELY(DISTINCT rt0.c3) THEN ((rt0.c2) ISNULL) WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c1 WHEN AVG(rt0.c1) THEN (vt1.c0 IN ()) WHEN CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN 0.29001118863138653 THEN rt0.c3 ELSE rt0.c2 END THEN ((rt0.c0)/(vt1.c0)) WHEN ((((rt0.c4)AND(rt0.c1)))OR(vt1.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c1 END END, ((((((((((vt1.c0)AND(rt0.c3)))AND('쎁{')))AND(rt0.c2)))OR(rt0.c4))) BETWEEN (((rt0.c1) NOTNULL)) AND (rt0.c2)), CAST((((vt1.c0))!=((rt0.c4))) AS NUMERIC), rt0.c2, COUNT(*) FROM rt0 GROUP BY (((x'')) BETWEEN ((NULL)) AND ((((rt0.c3)<<(rt0.c3))))) HAVING (((- (rt0.c1)))>>(((((vt1.c0)OR(rt0.c1)))OR(rt0.c0))));SELECT ALL (+ (x'')) FROM vt1, rt0 WHERE (((CASE NULL  WHEN '-191287947' THEN x'9626' ELSE 0.5410394596273655 END)LIKE((((((((((((('3{.')AND('㠣疜')))OR(-788123737)))OR(x'')))OR(x'')))AND('0.3150826780869538')))OR(0.5168308059574187))))); -- 0ms;
SELECT DISTINCT (~ (rt0.c4 COLLATE NOCASE)), CASE ((rt0.c3)<>(rt0.c4))  WHEN ((rt0.c3)GLOB(rt0.c1)) THEN ((rt0.c2) NOT NULL) ELSE (- (rt0.c1)) END, COUNT(CAST(rt0.c0 AS REAL)) OVER ( ROWS  CURRENT ROW) FROM vt1, rt0 ORDER BY ((((rt0.c1)>=(rt0.c4))) NOT BETWEEN ((NOT (rt0.c2))) AND (((((((((rt0.c4)OR(NULL)))AND(',i')))OR(vt1.c0)))OR(9.38357995E8)))) DESC LIMIT 1368640006 OFFSET 139776478; -- 1ms;
SELECT DISTINCT CASE WHEN x'' THEN CAST(rt0.c3 AS TEXT) WHEN (((0.46978047786108446, rt0.c0, rt0.c3))>((vt1.c0, rt0.c0, NULL))) THEN ((rt0.c3) NOT NULL) WHEN ((rt0.c2)/(rt0.c3)) THEN (NOT (rt0.c4)) ELSE ((((((((vt1.c0)OR(0.6765219994790637)))AND(rt0.c1)))AND(rt0.c4)))OR('-701313122')) END, TRIM(DISTINCT CAST(rt0.c3 AS REAL)), ((rt0.c1 COLLATE NOCASE)|((((vt1.c0, rt0.c1, rt0.c1))<((rt0.c0, rt0.c2, rt0.c1))))) FROM rt0, vt1 WHERE ((((x'' IN (-1.783054222E9, NULL)))AND(NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((GLOB(rt0.c2, rt0.c4))OR(SUM(rt0.c1))) FROM rt0, vt1 WHERE (CASE ((0.48473829432721915) NOT BETWEEN ('쩃') AND ('1412064690'))  WHEN -929419462 COLLATE RTRIM THEN ((('(ﮢ4')) BETWEEN ((x'076c')) AND ((NULL))) ELSE CASE WHEN 0x35945ef5 THEN NULL WHEN '1428161799' THEN 's' WHEN 1.424823399E9 THEN x'' WHEN NULL THEN NULL WHEN 0.08607108579549871 THEN 0.9477836696417472 END END); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((rt0.c0) NOTNULL))AND(CAST(rt0.c1 AS NUMERIC))) DESC), ((((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((+ (vt1.c0)))), (-1333993325 COLLATE BINARY IN (COUNT(*), 1860225153 COLLATE BINARY)) FROM rt0;SELECT DISTINCT CAST(IFNULL(DISTINCT rt0.c3, rt0.c4) AS NUMERIC) FROM rt0 LIMIT -1704274921 OFFSET -1601104916; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT ((vt1.c0) IS TRUE), 0.7558533054193604) FROM rt0, vt1 WHERE (((((((NULL)OR(x'38c2')))OR(NULL))) IS FALSE)); -- 0ms;
SELECT CASE rt0.c0  WHEN (((rt0.c4, vt1.c0, rt0.c3))<((rt0.c3, rt0.c1, rt0.c3))) THEN LAST_INSERT_ROWID() WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c3) ISNULL) WHEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END THEN (rt0.c3 IN ()) ELSE ((rt0.c0)IS(rt0.c3)) END FROM rt0, vt1 WHERE ((('-1669224096' COLLATE NOCASE) NOT BETWEEN ((('5롌')AND(0Xffffffffde89968f))) AND ((+ (x'189a'))))); -- 0ms;
SELECT NULL, (((rt0.c3 COLLATE NOCASE))=((CASE WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c3 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), LAST_VALUE(((((rt0.c3))>=((rt0.c0))) IN ())) OVER () FROM rt0, vt1 WHERE (CHANGES()); -- 1ms;
SELECT DISTINCT '{9' FROM rt0, vt1; -- 0ms;
SELECT ALL ((rt0.c3) NOT BETWEEN (rt0.c2) AND (((((rt0.c0)OR(rt0.c4)))AND(rt0.c0)))) FROM vt1, rt0 ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (CHAR(vt1.c0)) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, rt0.c4  NULLS LAST; -- 0ms;
SELECT DISTINCT ((COUNT(rt0.c0))<((~ (rt0.c0)))), CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)) THEN (((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c3))) END, NULLIF((- (rt0.c0)), ((rt0.c2)%(rt0.c3))) FROM vt1, rt0 WHERE (((('aiUb瀑뿇''R4' IN ()))IS(((x'')|(x'4eb0'))))) LIMIT 1874594829 OFFSET 883129555; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), ((GROUP_CONCAT(rt0.c0)) NOT NULL), ((((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c2))) NOT NULL) FROM rt0, vt1; -- 0ms;
SELECT ALL (((rt0.c3, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3 COLLATE BINARY, (NOT (rt0.c4)))) AND ((MAX(rt0.c4), (((rt0.c4, vt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c4, rt0.c3, rt0.c0))), (((rt0.c4))!=((rt0.c4)))))), json_array_length(((((rt0.c0)AND(rt0.c2)))AND(vt1.c0))), (((~ (vt1.c0)))-(((((((((x'')OR(rt0.c4)))AND(rt0.c3)))OR('-1380342521')))OR(rt0.c4)))) FROM vt1, rt0 WHERE (json_remove(((((']JN\')AND(0.6830757561487717)))AND(NULL)), CAST(0xfffffffff41f6e2f AS INTEGER)));SELECT DISTINCT ((CASE rt0.c0  WHEN 1.854152417E9 THEN rt0.c3 END)-((vt1.c0 IN ()))) FROM rt0, vt1; -- 0ms;
SELECT ((CASE rt0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END) ISNULL), (((vt1.c0)) NOT BETWEEN ((GROUP_CONCAT(rt0.c0))) AND ((UPPER(rt0.c3)))), CASE WHEN GROUP_CONCAT(rt0.c3) THEN rt0.c0 END FROM vt1, rt0 WHERE ((- (CAST(444469359 AS TEXT)))); -- 1ms;
SELECT CASE vt1.c0 COLLATE BINARY  WHEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE ((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)) END FROM vt1, rt0 WHERE (((CAST(1182302598 AS INTEGER))<(((NULL)IS(x'2050'))))); -- 0ms;
SELECT DISTINCT AVG((('8{yUBD') NOT BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE NOCASE) OVER ( ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))==(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4))))  NULLS LAST), ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1))) IS TRUE), CAST((((rt0.c3))>=((rt0.c4))) AS REAL) FROM vt1;SELECT DISTINCT CASE WHEN CHANGES() THEN (0.12339755221888993 IN (rt0.c2, rt0.c4)) WHEN ((rt0.c2) ISNULL) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)) WHEN ((rt0.c1) NOTNULL) THEN rt0.c3 ELSE (+ (rt0.c3)) END FROM vt1 WHERE ((('') NOT NULL));SELECT ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((+ (rt0.c3))))>((((rt0.c0)+(rt0.c3))))) FROM vt1, rt0; -- 0ms;
SELECT ALL NTILE((((rt0.c2 IN ()))<(json_array_length(x'7c3d', rt0.c4)))) OVER ( ORDER BY ((CAST(rt0.c3 AS BLOB)) NOTNULL) DESC  NULLS LAST, CAST((rt0.c3 IN (rt0.c4)) AS BLOB) DESC  NULLS LAST, ((0.237617306406257) ISNULL)  NULLS LAST), ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE RTRIM, (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4)))) ISNULL) FROM rt0, vt1 ORDER BY (NOT (rt0.c0))  NULLS LAST;SELECT DISTINCT (((((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))OR(rt0.c0)))AND(((rt0.c2) ISNULL))) FROM rt0, vt1 LIMIT -721662709; -- 0ms;
SELECT (- ((- (rt0.c1)))), ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c4 END) IS FALSE), ((((((rt0.c2)<(rt0.c1)))OR(((rt0.c0) NOT NULL))))AND(((rt0.c2)&(rt0.c0)))) FROM rt0, vt1 WHERE ((((NOT (0xbf31a27))) BETWEEN (((x'3b2c') NOT BETWEEN (NULL) AND ('LB'))) AND (0.7262987752855288 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CASE WHEN rt0.c0 THEN rt0.c3 END)), (~ (CAST(rt0.c2 AS BLOB))), ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END) NOT NULL) FROM vt1, rt0 WHERE ((((0.4220496504762097)) NOT BETWEEN (((NULL IN ()))) AND ((x'' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT x'' FROM vt1, rt0 WHERE ((((((x'')AND('716822322')))AND('')) IN ())); -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt0.c2)&(vt1.c0))))) FROM rt0, vt1 WHERE (NULLIF(CAST('1802021033' AS BLOB), (NULL IN ()))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0))) BETWEEN (((0.8606016971904732)|(vt1.c0))) AND (rt0.c4 COLLATE RTRIM)), UNLIKELY(((rt0.c0)LIKE(rt0.c1))), ((((rt0.c2) BETWEEN (NULL) AND (vt1.c0))) ISNULL) FROM rt0, vt1; -- 0ms;
SELECT ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c4)))AND(0.044038970406035105)))OR(rt0.c2)))OR(rt0.c2)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1 INTERSECT SELECT DISTINCT CASE WHEN ((((rt0.c3)OR(rt0.c4)))AND(vt1.c0)) THEN ((((NULL)OR(rt0.c2)))AND(0.9694731038747637)) WHEN (0.8817602573140311 IN ()) THEN rt0.c0 COLLATE NOCASE WHEN '0.4701141879147329' THEN ((rt0.c3)>(rt0.c2)) ELSE COUNT(rt0.c3) END FROM rt0 INNER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END)IS(((rt0.c0) NOT BETWEEN ('') AND (vt1.c0)))) ORDER BY x'';SELECT DISTINCT ((rt0.c3) NOT BETWEEN (((rt0.c1)AND(rt0.c0))) AND (((rt0.c3) NOT BETWEEN ('ae尮g') AND (rt0.c4)))) FROM rt0, vt1 LIMIT -646610969 OFFSET 778578411; -- 0ms;
SELECT DISTINCT rt0.c3 FROM vt1 WHERE ('e_	Rc! ');SELECT DISTINCT (((((((rt0.c4)AND(rt0.c3)))OR(rt0.c0))))<=((CASE WHEN vt1.c0 THEN rt0.c1 END))), CASE WHEN (- (rt0.c1)) THEN ((rt0.c4) IS FALSE) WHEN rt0.c0 COLLATE RTRIM THEN CASE rt0.c1  WHEN vt1.c0 THEN rt0.c4 END WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)) THEN ((rt0.c2) NOT NULL) WHEN MIN(rt0.c4) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) WHEN ((rt0.c1) NOT NULL) THEN json_array_length(rt0.c2, '1770812310') END, (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((((x'')<(rt0.c4))))) FROM vt1, rt0 ORDER BY CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ABS(rt0.c3) WHEN ((rt0.c2) NOTNULL) THEN (+ ('2124190438')) END;SELECT DISTINCT (((((('-1278760611') NOT BETWEEN (vt1.c0) AND (rt0.c2)))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(rt0.c2 AS BLOB))), ((CASE ''  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)<<((- (rt0.c2)))), ((((((rt0.c1) NOTNULL))OR(rt0.c4)))OR(((rt0.c4) NOTNULL))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 IN (vt1.c0)) IN ()), GROUP_CONCAT(((rt0.c2)<>(rt0.c0))) OVER (), LIKELIHOOD(DISTINCT ((rt0.c4) IS FALSE), 0.04276727379376488) FROM vt1 WHERE (((((((x'')>>('')))OR((((NULL, x'', x'')) BETWEEN (('30156768', '-1601104916', 0.29909552664569006)) AND (('466127093', 0.46495252772707807, NULL))))))AND(((0.21271695680298075) IS TRUE)))) ORDER BY ((((rt0.c0 COLLATE NOCASE)OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c4 END)))AND(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)))) ASC;SELECT DISTINCT load_extension((rt0.c1 IN ()), 1153747302) FROM rt0 ORDER BY ((((rt0.c3)%(rt0.c1)))*(((rt0.c2) NOT NULL)))  NULLS LAST, IFNULL((((rt0.c2))==((rt0.c3))), '1123614246' COLLATE RTRIM)  NULLS FIRST;SELECT DISTINCT TOTAL(((rt0.c0)LIKE(rt0.c2))), (((rt0.c1)GLOB(rt0.c2)) IN ()), (((vt1.c0 IN ()))||(x'ad51')) FROM vt1 UNION ALL SELECT DISTINCT ((rt0.c2) NOTNULL), ((TOTAL(rt0.c3))LIKE(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN vt1.c0 ELSE vt1.c0 END)), ((rt0.c2 COLLATE BINARY)>=(((rt0.c3) IS TRUE))) FROM vt1;SELECT DISTINCT (MIN(vt1.c0) IN ()) FROM vt1, rt0 ORDER BY (((+ (rt0.c1))) ISNULL) ASC  NULLS LAST LIMIT -1969043287 OFFSET -318855979; -- 0ms;
SELECT ALL json_array(((((rt0.c1)OR(rt0.c2)))AND(rt0.c4)), ((((rt0.c2)OR(rt0.c2)))AND(NULL))) FROM rt0; -- 0ms;
SELECT ALL ((((CAST(rt0.c1 AS BLOB))OR(COUNT(*))))OR(rt0.c0 COLLATE RTRIM)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT 'eF\nox' FROM rt0 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT ALL ((((rt0.c3 COLLATE RTRIM)OR(HEX(rt0.c3))))OR(COUNT(vt1.c0))), ((((rt0.c1) ISNULL))OR(((('892980124')) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))))), ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))*(-465601384)) FROM rt0;SELECT (((rt0.c1 IN ()))&((((vt1.c0))==((rt0.c3))))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT 'Ub3Mzp*', CAST(((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)) AS TEXT), ((((rt0.c2)<(rt0.c0)))<=(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c2 THEN vt1.c0 END IN ()) FROM vt1 GROUP BY CAST(((rt0.c2)>=(vt1.c0)) AS INTEGER), (CAST(rt0.c1 AS INTEGER) IN ()), ((LIKELIHOOD(rt0.c0, 0.6835275918773056))==((((rt0.c4, rt0.c1, vt1.c0, rt0.c3, 'm]3''*ZՍ')) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c4, vt1.c0, vt1.c0)) AND ((rt0.c4, rt0.c3, rt0.c4, rt0.c3, rt0.c0))))) HAVING (+ ((rt0.c1 IN (rt0.c4))));SELECT CUME_DIST() OVER ( ROWS  UNBOUNDED PRECEDING), (((rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (0X14aaf8e1) AND (rt0.c1)), ((((rt0.c1)OR(vt1.c0)))OR(rt0.c3)), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)))AND(vt1.c0)))AND(rt0.c4)))) AND ((x'', (- ('yz\r1?m')), ((('-1969127464'))==((vt1.c0)))))), ((0.6632799512388686)|(2123601847)) FROM rt0;SELECT DISTINCT TOTAL(MIN(rt0.c1)) FROM rt0;SELECT ALL LIKELY(DISTINCT ((rt0.c0) BETWEEN (0.3265287648141375) AND (vt1.c0))) FROM rt0, vt1; -- 1ms;
SELECT CASE WHEN ((vt1.c0) NOT BETWEEN (0.7651848278348934) AND (rt0.c3)) THEN (- (vt1.c0)) WHEN MIN(rt0.c0) THEN (rt0.c1 IN ()) WHEN ((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)) THEN SUM(rt0.c1) END FROM vt1, rt0 WHERE (((((((x'')OR(0x300d79b8)))AND(NULL)))+(((x'ab3c6e51f036') NOTNULL)))) ORDER BY CASE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))  WHEN GLOB(rt0.c4, vt1.c0) THEN (((0.7698266091351893))==((rt0.c0))) WHEN ((rt0.c0)>(rt0.c0)) THEN ((rt0.c0) IS FALSE) WHEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END THEN (+ (rt0.c3)) ELSE rt0.c1 END  NULLS LAST; -- 0ms;
SELECT ALL (~ (CASE WHEN rt0.c3 THEN rt0.c1 END)), ((CAST(rt0.c2 AS BLOB))GLOB(vt1.c0 COLLATE BINARY)), (((((rt0.c4)%(rt0.c1))))>=((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c0 END))) FROM rt0;SELECT ALL (((vt1.c0 IN ()))<=(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 ELSE vt1.c0 END)) FROM rt0 WHERE (((LAST_INSERT_ROWID())%(x'')));SELECT DISTINCT ((((rt0.c4)<(rt0.c3)))GLOB(((rt0.c0) ISNULL))) FROM rt0; -- 0ms;
SELECT DISTINCT SUM(((0.623592633452092) NOT NULL)) FROM rt0 GROUP BY UPPER(DISTINCT NULL); -- 0ms;
SELECT ALL (- ((NOT (rt0.c0)))) FROM vt1, rt0; -- 0ms;
SELECT (((((rt0.c0))>=((vt1.c0))))GLOB(GROUP_CONCAT(rt0.c2))), (((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (MIN(rt0.c3)) AND (CAST(rt0.c2 AS REAL))), (- (((rt0.c0)=(rt0.c1)))) FROM rt0, vt1 ORDER BY (((rt0.c0 IN ())) NOTNULL), CASE WHEN (((vt1.c0)) BETWEEN ((NULL)) AND ((rt0.c0))) THEN NULLIF(rt0.c4, vt1.c0) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT AVG(((rt0.c0)-(0xfffffffffeed75b7))) OVER () FROM vt1 WHERE (UPPER(NULL));SELECT ((((rt0.c2)IS NOT(rt0.c1)))AND(x'8bc6')) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 COLLATE RTRIM FROM vt1, rt0 WHERE (((((((NULL)OR(x'')))AND(NULL))) BETWEEN ('1244974624' COLLATE BINARY) AND (((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(json_quote(rt0.c4)) FROM vt1, rt0; -- 1ms;
SELECT DISTINCT ((LIKELY(DISTINCT rt0.c2))/(((rt0.c4) IS FALSE))), (((vt1.c0)) NOT BETWEEN ((x'')) AND (((((((((('1782077921')AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c4))))), CASE rt0.c0  WHEN 1158752205 THEN CAST('' AS REAL) ELSE (('-688759559')GLOB(x'')) END FROM rt0, vt1 LIMIT -234281153 OFFSET -1710807002; -- 0ms;
SELECT DISTINCT (+ (((((((((rt0.c3)AND(NULL)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c3)))) FROM rt0, vt1 WHERE ((('' IN ()) IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c0, ((rt0.c2)-(vt1.c0)), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 WHEN x'' THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, ((rt0.c3) IS FALSE), (rt0.c4 IN ())))>((((rt0.c0) NOT NULL), vt1.c0, vt1.c0, ((((((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c4)), (((vt1.c0, rt0.c1, rt0.c3))!=((rt0.c2, rt0.c0, rt0.c0)))))), CAST(rt0.c1 AS NUMERIC), (NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))) FROM rt0;SELECT DISTINCT ((((rt0.c1)*(rt0.c2)))-((((rt0.c3, rt0.c3, rt0.c0))=((rt0.c1, rt0.c0, rt0.c0))))), (((((rt0.c4 IN (rt0.c0)))OR((- (rt0.c3)))))AND(((1767008819) IS TRUE))), (((((rt0.c1 IN ()))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))))OR(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN vt1.c0 WHEN x'468f' THEN vt1.c0 ELSE x'' END)) FROM vt1, rt0 WHERE (CAST(((x'') IS TRUE) AS NUMERIC)); -- 0ms;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ ('0.7032705803193829')))||(TRIM('1123614246', '')))); -- 0ms;
SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)))>>(((rt0.c1)IS(rt0.c4)))) FROM vt1, rt0 WHERE (CAST(NULL AS REAL) COLLATE BINARY) LIMIT 2123601847; -- 0ms;
SELECT DISTINCT ((((rt0.c1)&(rt0.c1)))>=(rt0.c4)), (((rt0.c0)) BETWEEN ((COUNT(*))) AND ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END))), ((((((rt0.c3) NOT NULL))AND(rt0.c0 COLLATE RTRIM)))OR((vt1.c0 IN ()))) FROM vt1 WHERE (((CAST(x'' AS INTEGER))<=(0x608944a8))) LIMIT 1944559881 OFFSET 1345545250;SELECT CUME_DIST() OVER (), ((vt1.c0)<<(NULLIF(rt0.c2, rt0.c0))), UNICODE(((((rt0.c4)OR(rt0.c2)))AND(vt1.c0))) FROM rt0, vt1; -- 0ms;
SELECT COUNT(CAST(rt0.c0 AS TEXT)) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP), ((((rt0.c0)LIKE(rt0.c0)))GLOB(SUM(rt0.c3))), 0.8167886748089779 FROM rt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('c'))) OVER () FROM rt0, vt1 WHERE ((((0.7076665056016741)) NOT BETWEEN (((((x'')) BETWEEN (('')) AND (('VVN4'))))) AND (((- (0xfffffffff87f9ec2)))))); -- 0ms;
SELECT DISTINCT NULL, ((((COUNT(rt0.c1))AND(0.2840833601345406)))AND(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(x'6a95')))), TOTAL(0.4783798234667399) OVER () FROM vt1, rt0 WHERE (((0xffffffffa4db3569 IN ()) IN ())); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END) FROM vt1, rt0 WHERE (CASE x''  WHEN ((2121297937)*('525054248')) THEN (('413170224') BETWEEN (NULL) AND ('2080439522')) END) ORDER BY (+ (((0x73935876)LIKE(rt0.c3)))), (((rt0.c0 IN ())) IS FALSE)  NULLS FIRST LIMIT 466127093 OFFSET -1601104916; -- 0ms;
SELECT DISTINCT CASE rt0.c3  WHEN ((('')) BETWEEN (('-504368361')) AND ((0xc151567))) THEN CAST(rt0.c4 AS NUMERIC) ELSE ((rt0.c4)>>(rt0.c0)) END, COUNT(*) OVER (), ((((rt0.c3)&(rt0.c2))) IS FALSE) FROM vt1, rt0; -- 0ms;
SELECT ALL ((((((rt0.c1)<>(rt0.c2)))AND(CAST(rt0.c1 AS BLOB))))OR(CAST(rt0.c4 AS TEXT))) FROM vt1;SELECT vt1.c0 FROM vt1, rt0 GROUP BY ((rt0.c1) BETWEEN (0.8739201787777067) AND (rt0.c0)) COLLATE NOCASE HAVING CASE HEX(rt0.c4)  WHEN '-1105324110' THEN NULL WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) THEN ((rt0.c4) NOT NULL) WHEN NULL THEN ((rt0.c4)<=('-1547226021')) END; -- 0ms;
SELECT ALL COUNT(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4))) OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS), ((rt0.c1 COLLATE RTRIM) NOTNULL), ((((NULL)%(vt1.c0)))>=(rt0.c2 COLLATE NOCASE)) FROM rt0 GROUP BY (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)) IN ()) LIMIT -547928823 OFFSET 159903546;SELECT ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN ((~ (rt0.c1))) AND ((((rt0.c0, rt0.c1, vt1.c0))!=((rt0.c4, rt0.c0, rt0.c3))))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN COUNT(*) THEN ((rt0.c1)||(vt1.c0)) END FROM vt1;SELECT DISTINCT CASE CASE rt0.c3  WHEN ']zf3\n\r}z&' THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN 'V_' THEN rt0.c3 ELSE rt0.c3 END  WHEN ((rt0.c4)%(rt0.c3)) THEN ((((rt0.c4)OR(vt1.c0)))AND(rt0.c0)) END, ((-1310812710) BETWEEN ((rt0.c2 IN ())) AND (vt1.c0)), (+ (TOTAL(rt0.c0))) FROM vt1 WHERE (((- (x'9d95')) IN (CASE WHEN '' THEN '' WHEN '-1755933875' THEN ',d' WHEN NULL THEN '' END)));SELECT ALL (((rt0.c2, rt0.c4, rt0.c2)) BETWEEN (((+ (rt0.c1)), ABS(DISTINCT vt1.c0), TOTAL(rt0.c2))) AND ((((NULL) NOTNULL), ((rt0.c3)>(rt0.c4)), vt1.c0 COLLATE BINARY))), ((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('\n+j	'))) NOT BETWEEN (TRIM(-1.5119925E7, rt0.c0)) AND ((rt0.c4 IN (vt1.c0)))), CAST(rt0.c3 COLLATE RTRIM AS TEXT) FROM vt1 WHERE ((((('.'))<(('0.7859679731794845'))) IN (json_array_length(x'1b0e'))));SELECT DISTINCT (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))IS NOT((NOT (rt0.c4)))) FROM rt0, vt1 WHERE (((json_object(0xffffffffe160706d, x'', NULL, '-1390857247')) NOT BETWEEN ((('-951737121')==('[{'))) AND ((('') BETWEEN ('-84818024') AND (1.874594829E9))))) LIMIT -1269071313;SELECT ALL (((rt0.c0 IN (rt0.c0, rt0.c1)))<<((NOT (rt0.c1)))), (+ (x'')) COLLATE BINARY, COUNT(*) OVER () FROM vt1, rt0 WHERE ((~ (CASE NULL  WHEN '' THEN '-1710807002' END))) LIMIT -109169422; -- 0ms;
SELECT ALL MIN(CAST(rt0.c2 AS REAL) COLLATE BINARY) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0) IS FALSE)) NOTNULL) FROM rt0 WHERE (((('', 0.491989435270055, NULL)) NOT BETWEEN ((0.5232088487719546, ((('Z90c_'))==((0xffffffffbea93699))), ((((x'027f')OR(0.00768845866999035)))AND('')))) AND (((- (0x453ac587)), (((NULL)) NOT BETWEEN (('Li')) AND (('-574705100'))), CASE 1221075186  WHEN '-941885691' THEN '1538326258' END))));SELECT DISTINCT CAST(rt0.c1 AS BLOB) COLLATE NOCASE, CASE WHEN (+ (rt0.c3)) THEN ((((vt1.c0)AND(rt0.c4)))AND(vt1.c0)) END, 0.896590608535965 FROM rt0;SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt0; -- 0ms;
SELECT ALL CASE CAST(vt1.c0 AS INTEGER)  WHEN rt0.c2 THEN ((rt0.c3)+(vt1.c0)) ELSE (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) END FROM rt0, vt1 GROUP BY ((((rt0.c2) IS FALSE)) BETWEEN (rt0.c3) AND (((vt1.c0) IS FALSE))), (((CAST(rt0.c4 AS NUMERIC)))<=(((rt0.c1 IN (x'', rt0.c4))))), CASE WHEN 0xfffffffff209273f THEN json_array_length(rt0.c1) ELSE rt0.c4 END; -- 0ms;
SELECT DISTINCT ((((rt0.c1)-(rt0.c4))) IS TRUE) FROM rt0, vt1 WHERE (CHAR((+ (0.781889530406852)))); -- 0ms;
SELECT DISTINCT MIN(((rt0.c2)<(x''))), (rt0.c2 IN ((vt1.c0 IN (rt0.c1, rt0.c1)), (((rt0.c2))<=((rt0.c0))))), (+ (CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 END)) FROM vt1 LIMIT -1519655342;SELECT DISTINCT TOTAL((rt0.c1 IN ())) FROM rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c2) ISNULL)) ISNULL), COALESCE(((vt1.c0)<('!mUP\r')), (((rt0.c1))<((vt1.c0)))), CAST(((rt0.c2)%(rt0.c2)) AS TEXT) FROM rt0, vt1 WHERE (CASE WHEN x'' THEN ((1.944559881E9)AND(x'3f7c')) ELSE ((x'')==(x'')) END); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN (rt0.c0))) IS FALSE) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CAST(((((rt0.c3)AND(rt0.c0)))AND(rt0.c1)) AS BLOB) FROM rt0, vt1 WHERE (((((('' IN ()))OR(((1619608744) BETWEEN (NULL) AND (x'')))))OR((+ (x''))))) GROUP BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN ((+ (vt1.c0))) AND (((rt0.c1) NOTNULL))) HAVING ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(INSTR(rt0.c4, rt0.c0))); -- 0ms;
SELECT (((rt0.c3)) BETWEEN ((CASE '0.7205520871858282'  WHEN rt0.c0 THEN rt0.c2 END)) AND ((((vt1.c0)=(rt0.c0))))), ((((((((UNLIKELY(rt0.c0))AND(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)))OR(AVG(rt0.c3))))OR(((0.14002038330140587)<<(vt1.c0)))))OR(MIN(rt0.c4))), CASE CAST(vt1.c0 AS REAL)  WHEN CAST(rt0.c1 AS BLOB) THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c4 ELSE vt1.c0 END ELSE ((rt0.c0)||(rt0.c0)) END FROM vt1, rt0; -- 0ms;
SELECT DISTINCT NULL COLLATE BINARY FROM vt1, rt0 GROUP BY ((((rt0.c1 IN ())))!=((rt0.c1))), (((NOT (rt0.c0)))<(((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c2)))OR(vt1.c0)))), CAST(((vt1.c0) NOT NULL) AS INTEGER), ABS((rt0.c4 IN (rt0.c1))), NULL; -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN (((rt0.c4 IN ()))) AND ((GLOB(rt0.c2, NULL)))) FROM vt1 WHERE (NULL);SELECT DISTINCT HEX((((rt0.c1))>=((rt0.c0)))) FROM rt0, vt1; -- 0ms;
SELECT ALL LTRIM(CASE WHEN rt0.c3 THEN rt0.c4 END) FROM vt1, rt0; -- 0ms;
SELECT ALL SUM(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))), ((((((((CAST(rt0.c2 AS INTEGER))AND(LIKELY(DISTINCT rt0.c1))))OR(((vt1.c0)AND(rt0.c1)))))OR(((0.22785635503251755)&(rt0.c4)))))AND(CAST(x'297b' AS BLOB))), ((((CASE WHEN x'a1c6' THEN rt0.c0 END)OR(MAX(vt1.c0))))AND(((rt0.c4)/(rt0.c3)))) FROM vt1, rt0 WHERE (((((0X45e1feac) BETWEEN (NULL) AND (''))) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST(rt0.c4 AS INTEGER) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c4))<((NULL))))*(RTRIM(rt0.c1))) FROM rt0, vt1 WHERE ((~ ((('1889298990')>>(0.005689450235124127))))); -- 0ms;
