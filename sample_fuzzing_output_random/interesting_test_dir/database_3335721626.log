-- Time: 2024/06/07 10:10:21
-- Database: database26
-- Database version: 3.40.0
-- seed value: 3335721626
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, notindexed=c0, tokenize=simple); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '17144'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 593428553); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 678736026); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1176048349,14');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 954821550); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2955'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA temp.integrity_check; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.038341571090189874; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 1ms;
UPDATE vt0 SET c0=x'9ed6' WHERE vt0.c0; -- 0ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='-1176048349', c0='' WHERE (((((vt0.c0))>=((vt0.c0))))%(((vt0.c0) IS TRUE))); -- 0ms;
ANALYZE vt0; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='0.038341571090189874'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 0);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35913'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 147599764); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32711'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29385'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 1ms;
REINDEX BINARY; -- 0ms;
UPDATE vt0 SET c0='0.038341571090189874' WHERE (((vt0.c0) IS TRUE) IN ()); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA journal_mode; -- 1ms;
ANALYZE main; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 594729237);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1659520037); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.6712641597351805), (NULL), (0.6712641597351805); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
PRAGMA temp.auto_vacuum = FULL; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.journal_size_limit = -4975843117302901334; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '51677'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA default_cache_size = 446009569; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=446009569,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0, c0)=(NULL, '') WHERE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL), (vt0.c0 IN ()), (('506498972')|(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)), (vt0.c0 IN ())))); -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE vt0 SET c0=NULL; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27079'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '28326'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA cache_spill; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6266'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 963958735); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c0)=(0x32df0245); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('-1157026720') WHERE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58101'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '4226'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38340'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-601148922 unordered noskipscan'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('775792827'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=' è«½' WHERE ((NULLIF(vt0.c0, vt0.c0)) NOT NULL); -- 0ms;
PRAGMA cache_spill = -857931683783738332; -- 0ms;
UPDATE vt0 SET (c0)=(0.038341571090189874) WHERE (((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL)))<>(((+ (vt0.c0)), x'9603', ((vt0.c0) NOT NULL)))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1778187971 sz=-592670381 unordered noskipscan'); -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((('-601148922' IN ()))<=(((('')) NOT BETWEEN (('1455180379')) AND ((NULL)))))) INTERSECT SELECT DISTINCT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))=(((vt0.c0)%(vt0.c0)))) FROM vt0; -- 0ms;
SELECT SUM((((vt0.c0))>((vt0.c0)))) OVER (), CASE WHEN SUM(vt0.c0) THEN (+ (vt0.c0)) END, COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (0.2276328501145326))) FROM vt0 WHERE (((NULL)IS(((0.477273797195211) ISNULL)))); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0 IN ()), ((vt0.c0) IS TRUE), (vt0.c0 IN ())))=((vt0.c0, vt0.c0, ((x'')<>(vt0.c0))))) FROM vt0 WHERE (UNLIKELY(DISTINCT CASE NULL  WHEN x'' THEN '1701333638' ELSE '-601148922' END)); -- 0ms;
SELECT ALL RTRIM(GROUP_CONCAT(vt0.c0)) FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) FROM vt0 WHERE ((((0.5613340372297351 IN ()))AND(((NULL) BETWEEN (x'') AND (''))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0)==(vt0.c0)))), json_array_length(CAST(vt0.c0 AS TEXT)), (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(MIN(vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((- (((((((((x'')AND(x'fe43')))AND('446009569')))OR(1455180379)))AND(0.40661665693622384))))) LIMIT -13272258 OFFSET 594729237; -- 0ms;
SELECT (((x'f017')) BETWEEN ((19902494)) AND ((((vt0.c0) IS TRUE)))), COUNT(*) OVER ( RANGE  CURRENT ROW), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(0.2841528425277806)))OR(((vt0.c0)*(vt0.c0)))) FROM vt0 WHERE (((((NULL)>>(x'')))/((('853475909')>>(0.9580901414080667))))) LIMIT 2137865126; -- 0ms;
SELECT DISTINCT ((CAST(NULL AS NUMERIC))LIKE(((vt0.c0) ISNULL))) FROM vt0 WHERE ((((('1832963222')/(0x54f84f4e)))<<((0.15091267581095347 IN (0.5382424627079332))))); -- 0ms;
SELECT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) FROM vt0 WHERE (((0x13166bb7 IN ()) IN ((- (x'975041b0'))))); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL), ((((vt0.c0)OR(((vt0.c0)<(vt0.c0)))))AND(((vt0.c0)-(NULL)))) FROM vt0 WHERE (((x'' IN ()) IN ())); -- 0ms;
SELECT ALL (((NOT (vt0.c0))) IS TRUE) FROM vt0 WHERE ((~ (CAST(0X8a48afd AS INTEGER)))); -- 0ms;
SELECT ALL 0.9877519764457469 FROM vt0 WHERE ((+ ((- (x''))))); -- 0ms;
SELECT ALL (IFNULL(DISTINCT 0.403280125033176, vt0.c0) IN ()), vt0.c0, ((((vt0.c0) IS TRUE)) BETWEEN ((NOT (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND((vt0.c0 IN (vt0.c0)))))AND('|P' COLLATE NOCASE)), MIN(((vt0.c0) BETWEEN (0.3266240830772039) AND (0.3266240830772039))) FROM vt0 WHERE (((NULL) NOTNULL)); -- 0ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE) FROM vt0 WHERE (NULL) GROUP BY (((+ (vt0.c0)))<=(((vt0.c0)AND(vt0.c0)))) LIMIT -1472302303; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, NULL)))) AND ((((((0.7844740844979968)AND(vt0.c0)))OR(vt0.c0))))), (((vt0.c0, vt0.c0, '')) NOT BETWEEN ((0.4684596516269287, vt0.c0 COLLATE RTRIM, ((vt0.c0)<>(0.9191419427314349)))) AND ((((('pr', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-2135653578' END, vt0.c0))), CAST(((vt0.c0) NOT BETWEEN (0x1bf218d1) AND (vt0.c0)) AS BLOB) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0 IN ()))LIKE(vt0.c0)) FROM vt0 WHERE (((((NULL) NOTNULL)) NOT BETWEEN ((((NULL))>((NULL)))) AND ((('1859504853')||(0.9851294972005522))))); -- 0ms;
SELECT ALL CAST(((vt0.c0)LIKE(vt0.c0)) AS NUMERIC), JULIANDAY((+ (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>(vt0.c0)), (((vt0.c0))>=((vt0.c0)))), -1707322622, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC), (((vt0.c0 IN (vt0.c0, vt0.c0)))==((- (vt0.c0)))) FROM vt0; -- 3ms;
SELECT DISTINCT ((COUNT(vt0.c0)) IS FALSE) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0) IS FALSE) IN ()), MAX(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((('506498972' IN ())) NOT BETWEEN (((('H ', -919333052, NULL)) BETWEEN ((NULL, -5.92670381E8, '')) AND ((x'0b04', NULL, 'U')))) AND ((((',8r')) BETWEEN ((0x6ed5cad5)) AND ((1425559374)))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0) ISNULL))OR(((vt0.c0) NOT NULL))))OR(vt0.c0)))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)-(vt0.c0)))), CUME_DIST() OVER ( RANGE  CURRENT ROW EXCLUDE GROUP), NULL FROM vt0 WHERE (LTRIM((('1701333638')+('')), x'' COLLATE RTRIM)) LIMIT -1814644554; -- 0ms;
SELECT DISTINCT vt0.c0, 0.038341571090189874, DENSE_RANK() OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(COUNT(*)), LIKE((((vt0.c0))<=(('Xà´'))), MIN(vt0.c0)), ((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)), (NOT (vt0.c0)) COLLATE RTRIM, vt0.c0 FROM vt0 WHERE (((((1.832963222E9)%(0.33660130521956744)))<<(CASE WHEN '1701333638' THEN 'jTDi' END)));SELECT GROUP_CONCAT(((vt0.c0) ISNULL)), TOTAL((vt0.c0 IN (vt0.c0, vt0.c0))) OVER (), NTILE(((CAST('-13272258' AS BLOB)) IS FALSE)) OVER () FROM vt0 WHERE (CAST(((0.06372293271804952)>(0.859167615498813)) AS REAL));SELECT DISTINCT GROUP_CONCAT('-601148922') FROM vt0 WHERE ((((((NULL))<((0Xffffffffff357b3e))))||(NULL COLLATE BINARY))); -- 1ms;
SELECT DISTINCT ((((((vt0.c0)OR(0.4609223401640824)))OR(vt0.c0))) IS TRUE) FROM vt0 WHERE (MIN(((0.8066909825191318) BETWEEN (NULL) AND (x'')), (1.859504853E9 IN ()), ((NULL)>>(1455180379)), (NOT (',DC*')), ((0.0594209582088141) NOT BETWEEN ('dKP') AND (x'')), x'' COLLATE RTRIM, NULL COLLATE BINARY, (((((((('')OR(0.8578430257119009)))OR(0.5930183167978238)))OR(NULL)))OR('')))); -- 0ms;
SELECT ALL ((GROUP_CONCAT(vt0.c0))>(rtreenode(vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN (LIKE(vt0.c0, vt0.c0))), (((((vt0.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (0.15860646556939562)))), CASE x'd29f'  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM, ((COUNT(*))>=((((vt0.c0, vt0.c0, -1.15702672E9))!=((vt0.c0, vt0.c0, vt0.c0))))), ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT ALL CASE NULL  WHEN LIKELY(vt0.c0) THEN CAST(vt0.c0 AS INTEGER) END, vt0.c0, NULLIF(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR('^F')), (vt0.c0 IN (vt0.c0, vt0.c0))) FROM vt0 LIMIT 469802473; -- 0ms;
SELECT DISTINCT ((0.23221659295306885) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0 IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))) FROM vt0; -- 1ms;
SELECT DISTINCT CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC) FROM vt0 WHERE (CASE (('506498972') NOT NULL)  WHEN 0.025169792924517265 COLLATE BINARY THEN NULLIF(NULL, 0.3408431252482158) WHEN CAST(-1176048349 AS TEXT) THEN CASE WHEN 468850897 THEN '-1579659811' WHEN 'D4NFJah' THEN 0xffffffff9603013d WHEN 0.9580901414080667 THEN 0.05489287079277372 WHEN x'' THEN x'' WHEN 0X35cc2d17 THEN '-1272016385' ELSE NULL END WHEN json_insert(-1.778187971E9, '', '-1707322622') THEN json_array_length('-13272258', 0.15091267581095347) ELSE ((x'') ISNULL) END);SELECT DISTINCT CHAR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), MAX(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), (+ (x'bf4b')) FROM vt0 WHERE (CASE TYPEOF(DISTINCT 0.6645179157076361)  WHEN ((x'') NOT BETWEEN ('') AND ('726238885')) THEN NULL ELSE ((0.2276328501145326) NOT BETWEEN (x'53d640fc') AND (NULL)) END); -- 0ms;
SELECT ALL PRINTF(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE ((IFNULL(DISTINCT NULL, NULL) IN ())); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0)-(NULL))))) FROM vt0 NOT INDEXED WHERE ((((('469802473') NOT BETWEEN (x'') AND ('.')))LIKE(((0.9877519764457469) IS FALSE)))); -- 0ms;
SELECT ((GROUP_CONCAT(vt0.c0)) BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0)/(vt0.c0)))<(((x'abc2') NOT NULL))), (NOT (((0.16357297796041526) NOT NULL))) FROM vt0 WHERE ((- (((1.45001213E8)<>(x''))))); -- 1ms;
SELECT DISTINCT (((((((((vt0.c0 IN ()))AND(COUNT(NULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))AND(LTRIM(vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 COLLATE RTRIM END, ((vt0.c0 COLLATE BINARY)&((~ (vt0.c0)))), ((((vt0.c0)IS NOT(vt0.c0)))<((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, SQLITE_COMPILEOPTION_USED(CAST(NULL AS BLOB)), vt0.c0, ((CAST(vt0.c0 AS REAL))+(vt0.c0 COLLATE RTRIM)), ((MIN(vt0.c0))OR((vt0.c0 IN ()))) FROM vt0 GROUP BY CASE WHEN (+ (vt0.c0)) THEN TRIM(DISTINCT vt0.c0) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN LTRIM(vt0.c0) THEN (~ (vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN ((('-1860047421', vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)AND(-1.579659811E9)) ELSE (NOT (vt0.c0)) END; -- 0ms;
SELECT CAST((vt0.c0 IN ()) AS BLOB) FROM vt0 ORDER BY CASE (((vt0.c0, vt0.c0, 'w-Vt', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN (NOT (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE RTRIM END ASC, CAST(vt0.c0 AS REAL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((x'')IS NOT(vt0.c0))))<=((((vt0.c0)<=(vt0.c0))))) FROM vt0 LIMIT -718060322; -- 0ms;
SELECT ALL -1.579659811E9 FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(NULL COLLATE NOCASE)) FROM vt0 WHERE (((TRIM(DISTINCT 260383119, '506498972')) BETWEEN ((+ (1.425559374E9))) AND (CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT RANK() OVER (), ((((SUM(vt0.c0))AND((((vt0.c0, vt0.c0, x''))<((vt0.c0, vt0.c0, vt0.c0))))))OR(0.17952300971764656)), CAST((- (vt0.c0)) AS BLOB) FROM vt0 WHERE (CAST((x'd3cf6dd3' IN ()) AS NUMERIC)) GROUP BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), '~*{', ((HEX(vt0.c0))IS((- (vt0.c0)))) HAVING ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) ORDER BY NULL; -- 0ms;
SELECT DISTINCT x'', ((CAST(vt0.c0 AS NUMERIC)) ISNULL), (+ (vt0.c0 COLLATE NOCASE)) FROM vt0 GROUP BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)%(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (('1832963222') IS TRUE), DATE(((vt0.c0)IS NOT(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ())) HAVING CASE WHEN (vt0.c0 IN ()) THEN TOTAL(vt0.c0) ELSE ((vt0.c0)GLOB(vt0.c0)) END; -- 0ms;
SELECT (((vt0.c0 IN ()))||(GROUP_CONCAT(0.5929213102689107))) FROM vt0 WHERE ((((NULL)!=('E)h')) IN ())) ORDER BY (((+ (vt0.c0))) BETWEEN ((NOT ('1'))) AND (CASE vt0.c0  WHEN vt0.c0 THEN 0.9179634848292552 ELSE vt0.c0 END)) DESC  NULLS LAST; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) IS FALSE))), (((vt0.c0 IN (vt0.c0)))GLOB(TOTAL(vt0.c0))) FROM vt0 WHERE (((('-2138960618') NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((('}', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE vt0.c0 COLLATE NOCASE  WHEN (vt0.c0 IN (vt0.c0)) THEN GROUP_CONCAT(vt0.c0) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END FROM vt0 WHERE (((((((NULL)AND(NULL)))AND('[j)Bæ´t^')))==(CASE WHEN x'04426394' THEN 0.40661665693622384 ELSE NULL END))); -- 0ms;
SELECT DISTINCT ((((0.6712641597351805) IS TRUE)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) IS FALSE) END FROM vt0; -- 0ms;
SELECT ALL ((SUM(vt0.c0))=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((UNLIKELY(DISTINCT vt0.c0))|(((vt0.c0)>>(vt0.c0)))), ((((vt0.c0)<<(vt0.c0)))&((+ (vt0.c0)))) FROM vt0 WHERE (((CAST(NULL AS BLOB)) BETWEEN (CAST(0.7570594557036177 AS NUMERIC)) AND ((('') IS TRUE)))); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)=(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))), ((DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>(vt0.c0 COLLATE RTRIM)), (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)>=((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((- (vt0.c0)) IN ()) FROM vt0; -- 1ms;
SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((CAST(vt0.c0 AS INTEGER)))), ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (COUNT(vt0.c0))), (((0.398861124848662)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0)IS NOT(vt0.c0))))) FROM vt0; -- 0ms;
SELECT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) FROM vt0 GROUP BY json_object(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)));SELECT ALL TOTAL(((vt0.c0) IS TRUE)) OVER (), (((vt0.c0)!=('k>+')) IN ()), ROW_NUMBER() OVER () FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT ALL UNLIKELY(((vt0.c0) ISNULL)), (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY, (((((~ (vt0.c0)))AND(((vt0.c0)<(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) BETWEEN (vt0.c0) AND ((~ (vt0.c0)))) FROM vt0; -- 1ms;
SELECT DISTINCT CAST((NOT (vt0.c0)) AS NUMERIC), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN ('') AND (1000201781)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0)<<(vt0.c0)) THEN TOTAL(vt0.c0) END FROM vt0; -- 0ms;
SELECT vt0.c0, ((vt0.c0)LIKE(((vt0.c0)/(vt0.c0)))), (((((vt0.c0))!=((vt0.c0))))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '6WSiU6*å' END)) FROM vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS(CAST(vt0.c0 AS NUMERIC))), (((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND (((+ (vt0.c0)))))) OVER (), (((- (vt0.c0))) NOTNULL), x'' FROM vt0;SELECT (vt0.c0 IN (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (json_array_length(CASE NULL  WHEN '' THEN NULL END, CAST(x'ce9f' AS BLOB))) GROUP BY vt0.c0 COLLATE NOCASE HAVING (((+ (vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE BINARY IN ()) FROM vt0; -- 0ms;
SELECT MAX((vt0.c0 IN ())) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT SUM((vt0.c0 IN ())) OVER ( PARTITION BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<(COALESCE(DISTINCT vt0.c0, vt0.c0))), (((vt0.c0) IS FALSE) IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((MAX(x''))AND('ïªu]{D~y')))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND(COUNT(vt0.c0))) FROM vt0 WHERE ((((((('1425559374') IS FALSE))AND(x'' COLLATE NOCASE)))OR('?è¡'))); -- 0ms;
SELECT (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (0.41843556429642914) AND (((vt0.c0) BETWEEN (vt0.c0) AND ('')))) FROM vt0 WHERE ((('-2116256765' COLLATE NOCASE)!=(load_extension(688862041, 0.9398219548740151))));SELECT ALL (((vt0.c0) NOT NULL) IN ()) FROM vt0; -- 0ms;
SELECT (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)), CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC), ((((((((vt0.c0)OR((~ (vt0.c0)))))OR((NOT (vt0.c0)))))OR(NULL COLLATE RTRIM)))AND(vt0.c0)) FROM vt0 NOT INDEXED WHERE (CAST(((x'')+(NULL)) AS BLOB)); -- 0ms;
SELECT ALL ((((vt0.c0) IS TRUE))<=(((vt0.c0)IS NOT(vt0.c0)))) FROM vt0 WHERE ((CAST(x'' AS REAL) IN ())); -- 0ms;
SELECT LIKELY(DISTINCT CAST(vt0.c0 AS REAL)), (((((vt0.c0))<=((vt0.c0)))) BETWEEN ((((vt0.c0, NULL, 0.9967996137540704)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((((vt0.c0))<((vt0.c0))))), CASE WHEN ((vt0.c0)+(vt0.c0)) THEN (((vt0.c0))!=((vt0.c0))) ELSE vt0.c0 END FROM vt0 WHERE (NULLIF(((0xffffffff9899575b)<>(NULL)), (((0.44738075729030735, x'', x''))<>((x'', 0.24670514359975848, 0Xffffffffd56eb454))))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN ()), ((((vt0.c0)!=(vt0.c0))) BETWEEN (((vt0.c0)<>(vt0.c0))) AND ((NOT (vt0.c0)))), (('-592670381') NOTNULL), ((vt0.c0 COLLATE RTRIM) ISNULL), (((('-1472302303')|(vt0.c0)))==((NOT (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL LIKE(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN (vt0.c0)), '/') FROM vt0 WHERE ((CASE 0.4373438185762064  WHEN NULL THEN x'20ec' WHEN NULL THEN 0x6ed5cad5 WHEN x'c3c7' THEN x'97d76ed745c6' END IN ())); -- 0ms;
SELECT DISTINCT 'ç¡	0r6då¦' COLLATE BINARY FROM vt0 WHERE ((((((x''))<((3.20236471E8)))) NOT BETWEEN (CASE WHEN 0.6739300410568352 THEN 0.06126273085642153 ELSE x'' END) AND (CASE WHEN '' THEN NULL WHEN 0Xffffffffc7e24106 THEN x'' WHEN '2049176204' THEN 'w4/.éïª,	' END))); -- 0ms;
SELECT LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))!=((vt0.c0)))) FROM vt0 WHERE (CAST(((x'')>=(x'')) AS INTEGER)); -- 0ms;
SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))))OR((vt0.c0 IN ()))) FROM vt0 WHERE (((((((x'') ISNULL))AND(NULL)))AND(-1176048349))) GROUP BY ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM HAVING vt0.c0; -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt0 WHERE ((((((('-13272258')GLOB('-236261068')))AND((((0.7060445791990888))==((x'74da'))))))AND(((0.7923726977933344)*(NULL))))); -- 0ms;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((1456622529)IS NOT('')) AS INTEGER)); -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((0.21939257255660882) ISNULL)))) FROM vt0 WHERE ((((NOT (NULL)))/(x'' COLLATE BINARY))); -- 0ms;
SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))>(((vt0.c0)&(vt0.c0)))), (~ (LIKELY(vt0.c0))), TRIM(DISTINCT ((vt0.c0)>=(vt0.c0)), vt0.c0 COLLATE NOCASE) FROM vt0 WHERE (((((NULL)OR(0.24670514359975848))) BETWEEN ((NULL IN ())) AND (((NULL) BETWEEN (0X6ef48df8) AND (x''))))); -- 0ms;
SELECT ALL TOTAL_CHANGES(), ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))) AS BLOB) FROM vt0 WHERE (CASE WHEN ((726238885)|(0.27832877232167574)) THEN ((('dk'))<((NULL))) ELSE ((x'cc0f')IS NOT(NULL)) END) ORDER BY MIN((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c0)>>(vt0.c0)))  NULLS FIRST; -- 0ms;
SELECT AVG(UPPER(vt0.c0)) FILTER(WHERE ((((vt0.c0) IS FALSE))GLOB(vt0.c0))) OVER (), (NOT (TYPEOF(DISTINCT vt0.c0))), NULL FROM vt0 WHERE (((((((((((0.17401519581836267)<=('0.4684596516269287')))AND(NULL)))AND((~ (0.06545632517198408)))))OR((('()Fç?LCf0') BETWEEN (NULL) AND (x'3a10')))))AND(0.6006112545104347 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((x'' IN ())); -- 0ms;
SELECT (vt0.c0 IN (((vt0.c0)*(vt0.c0)))) FROM vt0 WHERE (CASE '}y\r0M'  WHEN load_extension('0.6739300410568352') THEN ((((NULL)OR('0.7060445791990888')))OR(NULL)) ELSE ((x'')%('6WSiU6*å')) END);SELECT DISTINCT CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0) BETWEEN (0.7904784873411241) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((0.36115336511269125) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0)=(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS REAL) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE COUNT(vt0.c0) END FROM vt0; -- 0ms;
SELECT ALL ((((MAX(vt0.c0, vt0.c0))AND(vt0.c0 COLLATE RTRIM)))OR((vt0.c0 IN (vt0.c0)))), x'', (- (((vt0.c0) IS FALSE))) FROM vt0; -- 0ms;
SELECT (GROUP_CONCAT(vt0.c0) IN ()), NULL, (~ (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE ((((NOT (x'')))>>((('-1930865690')>>(531934933))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (('G,')) AND (((vt0.c0 IN (vt0.c0))))) FROM vt0 WHERE ((~ ((((NULL))>((x'')))))) ORDER BY (('1170313162') NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))) DESC; -- 0ms;
SELECT ALL (- ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE, '' COLLATE BINARY, CASE MIN(vt0.c0)  WHEN ((vt0.c0) NOT NULL) THEN '' ELSE vt0.c0 COLLATE NOCASE END FROM vt0 WHERE ((((((0Xfffffffffe232e9d)||(0.22879939627703016)), (('902573335') NOT BETWEEN (0.7775635177109985) AND ('0.05489287079277372')), (x'' IN ()), x'', CASE WHEN 'YZæ´RpfBH' THEN x'' WHEN NULL THEN NULL WHEN x'' THEN NULL ELSE NULL END))<((NULL, (+ (NULL)), (('-592670381') NOT BETWEEN (0.021530297453383862) AND (0.1828006155078753)), ((0.7359431667605202)/('\ã¯ëJ%-	')), (('636792197') NOT NULL))))); -- 0ms;
SELECT (((~ (vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((0xffffffff80820d16) BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0)))AND((- (vt0.c0)))), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.837005955588533 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) FROM vt0 WHERE (((((NULL) NOT BETWEEN (1.170313162E9) AND ('-86321769'))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, '')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.18346524642143203))) COLLATE NOCASE FROM vt0 WHERE (((((0.595645448765944, 0xffffffff9899575b, '0.4609223401640824')) BETWEEN ((NULL, x'', 1.425559374E9)) AND (('343098874', x'', 0x2e3da8bb))) IN (((342356778) NOTNULL)))); -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM)<(((vt0.c0)AND(vt0.c0)))), (NOT (vt0.c0 COLLATE BINARY)), (((~ (vt0.c0)))OR((NOT (0xffffffffe7fb1ad6)))) FROM vt0 GROUP BY x'', ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS BLOB))), UPPER(DISTINCT ((vt0.c0) NOT BETWEEN ('594729237') AND (vt0.c0))); -- 0ms;
SELECT ALL ((LOWER(DISTINCT vt0.c0)) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL vt0.c0, '-1315374556', (((vt0.c0)) NOT BETWEEN (((+ (vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB)))) FROM vt0 WHERE (0.403280125033176); -- 0ms;
SELECT DISTINCT CASE WHEN COUNT(*) THEN (+ (vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS BLOB) THEN (- (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END FROM vt0; -- 0ms;
SELECT DISTINCT NULL, COUNT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'J9u|g)kb' WHEN vt0.c0 THEN vt0.c0 END), ABS(vt0.c0) FROM vt0 WHERE (CAST((((x'')) BETWEEN ((0x32df0245)) AND ((x'b190'))) AS TEXT)); -- 0ms;
SELECT DISTINCT RANK() OVER (), (NOT (MIN(vt0.c0))), (((NOT (vt0.c0))) IS TRUE) FROM vt0 LIMIT 527125644; -- 0ms;
SELECT DISTINCT ((SQLITE_COMPILEOPTION_USED(vt0.c0)) BETWEEN (vt0.c0) AND ((~ (vt0.c0)))) FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+((+ (vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT json_type(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) FROM vt0 WHERE ((((((('') IS FALSE))AND((((x'', '-2025658654', '?E6p-/{}#ã®½v')) BETWEEN ((0x6d76d05c, '-1961152828', '761556238')) AND ((NULL, '1836503132', x'5d39c0ad'))))))OR(((x'') NOT NULL)))); -- 0ms;
SELECT ALL CASE vt0.c0  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((0.6320018752086789) NOT NULL) WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('-402973994', vt0.c0, vt0.c0))) WHEN '' THEN vt0.c0 END FROM vt0 WHERE ((((('')AND(0.5954688170893655))) NOT BETWEEN (CAST(0.5789470363563352 AS INTEGER)) AND (CASE WHEN x'0dd6' THEN 0x7f6d3ba6 END))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN ('1639342419') AND (vt0.c0)) AS BLOB), (((~ (584007587)))==(vt0.c0 COLLATE BINARY)), TRIM(x'') FROM vt0 WHERE (((CAST(x'' AS BLOB))<=(((((((((0.5954688170893655)AND(0xffffffffdd3d721c)))OR(NULL)))OR(0.1689892522419052)))AND(x''))))) LIMIT -1707322622; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT vt0.c0 COLLATE BINARY), LAG((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((-1074841558))))), ((((vt0.c0)AND(vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))), (((((vt0.c0))!=((-1.778187971E9)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (x'6585'))) OVER (), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN (x'') AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((((((NULL))>(('-941473530'))))LIKE(UPPER('0.27832877232167574')))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)%(vt0.c0)))AND(((vt0.c0)*(vt0.c0)))) FROM vt0 WHERE (((- (0.32288678929922265)) IN ())); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOTNULL), RANK() OVER (), CAST(UPPER(DISTINCT vt0.c0) AS INTEGER), CAST((NOT (vt0.c0)) AS NUMERIC), ((((0Xffffffffd1806368)OR(((((((((vt0.c0)OR(vt0.c0)))AND(0.3851502176743099)))AND(vt0.c0)))OR(vt0.c0)))))AND((vt0.c0 IN ()))) FROM vt0 WHERE (((((CASE WHEN 0.6481436199469379 THEN x'10ec82e8' ELSE x'' END)OR(((0.674969471643673)GLOB(NULL)))))AND(((((((((((((x'4129')OR(NULL)))AND('-2103049440')))AND(x'fc47')))OR(x'ce5b8b6e')))OR(0X23574309)))OR(0.3514690892899054))))); -- 0ms;
SELECT DISTINCT 0.595645448765944 FROM vt0 WHERE ((~ (((0.6936945611664934) BETWEEN (x'') AND ('1662920830'))))); -- 0ms;
SELECT ALL MAX(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) FROM vt0 WHERE ('') LIMIT -2135653578; -- 0ms;
SELECT AVG(CAST(vt0.c0 AS INTEGER)) FROM vt0 WHERE ('Y&Cje>Zâ¡¤'); -- 0ms;
SELECT TOTAL(vt0.c0) OVER () FROM vt0 WHERE ('549108560'); -- 0ms;
SELECT DISTINCT COUNT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) OVER ( ORDER BY CASE WHEN ((vt0.c0)>(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0X6ec4c3aa END THEN vt0.c0 COLLATE NOCASE END ASC, (- (((vt0.c0)==(vt0.c0))))), RANK() OVER ( PARTITION BY (+ (LIKELIHOOD(vt0.c0, 0.6300197213302835))), (vt0.c0 IN ())), NULL FROM vt0; -- 0ms;
SELECT ALL ((MAX(vt0.c0)) ISNULL), vt0.c0, UNLIKELY(DISTINCT 0Xfffffffff181ae35 COLLATE BINARY) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) IS TRUE))-(((vt0.c0) NOT NULL))) FROM vt0 WHERE (('w4/.éïª,	' IN ())); -- 2ms;
SELECT ALL ((NULL) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((vt0.c0 IN ()))) FROM vt0 WHERE (MAX(((('0.7904784873411241')) BETWEEN ((NULL)) AND ((0x20babb50))), 0.36115336511269125)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('-1176048349'); -- 0ms;
SELECT ALL JULIANDAY(((vt0.c0)>>(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '260383119' THEN vt0.c0 WHEN vt0.c0 THEN -1638253635 ELSE vt0.c0 END, vt0.c0, ((vt0.c0)IS(vt0.c0)), (vt0.c0 IN ())) FROM vt0; -- 1ms;
SELECT CASE ((vt0.c0)/(vt0.c0))  WHEN (- (vt0.c0)) THEN RTRIM(vt0.c0) ELSE ((vt0.c0)OR(vt0.c0)) END FROM vt0 WHERE (((((0.5463448412026601)!=(NULL))) NOT BETWEEN ((((NULL))>((-1.638253635E9)))) AND (((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT LIKELY(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END) FROM vt0 LIMIT -477370984; -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS TEXT) IN (TOTAL(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((-1.734781093E9)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0) IS TRUE))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))>((vt0.c0 IN (vt0.c0)))), ((~ (vt0.c0)) IN ()), vt0.c0 FROM vt0 WHERE ((((('yp')%(x'')))IS(((((NULL)AND(x'3e3e')))OR('NK43S'))))); -- 0ms;
SELECT DISTINCT (+ (vt0.c0)) COLLATE RTRIM COLLATE RTRIM FROM vt0 WHERE (CASE x'' COLLATE BINARY  WHEN 'ã©¶L' COLLATE BINARY THEN ((x'')<(-308741243)) END); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL SUM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) FILTER(WHERE vt0.c0) OVER () FROM vt0 WHERE (CAST(((NULL)LIKE('åæ¨,sC')) AS BLOB)); -- 0ms;
SELECT ALL 0.2276328501145326 FROM vt0 LIMIT -243159499 OFFSET -477370984; -- 0ms;
SELECT DISTINCT 0.7366728713618064 FROM vt0 GROUP BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE BINARY IN (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (CAST(ABS(-402973994) AS REAL)); -- 0ms;
SELECT ALL ((((((((CASE WHEN vt0.c0 THEN '-168390505' END)AND((~ (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))))AND((((vt0.c0))<>((vt0.c0))))))AND(((vt0.c0)GLOB(vt0.c0)))) FROM vt0; -- 1ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS REAL) THEN COUNT(*) END FROM vt0 WHERE (CASE CASE WHEN x'' THEN NULL WHEN x'' THEN x'' WHEN 0.4316973459359018 THEN '1861520888' END  WHEN ((-780115096)<=('821030949')) THEN CASE WHEN '' THEN '343098874' WHEN 'í¿S-OîLF*)' THEN x'1bda1cdf' WHEN 'záeE2#' THEN '-168390505' ELSE 0.29139709445786044 END WHEN CAST(x'' AS BLOB) THEN LOWER(DISTINCT NULL) WHEN ((0Xffffffffbea1a6f4) IS FALSE) THEN ((NULL) IS TRUE) END); -- 0ms;
SELECT DISTINCT (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE FROM vt0 WHERE (((((x'') NOTNULL)) BETWEEN ((('300192829') BETWEEN (NULL) AND (0.7659971824967582))) AND (((x'90dd')!=(x'b34e'))))); -- 1ms;
SELECT DISTINCT ((((NULL)AND(LTRIM(vt0.c0))))AND(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE ((((((('')/('A''')))AND((-236261068 IN (0.5466584751780261, '')))))AND((('+_')|('2088174076'))))); -- 0ms;
SELECT ALL NTILE(((NOT (vt0.c0)) IN (COALESCE(DISTINCT vt0.c0, vt0.c0)))) OVER (), LAST_VALUE((((vt0.c0)>=(vt0.c0)) IN ('ì·½K' COLLATE BINARY, vt0.c0))) OVER (), AVG(((',8r')==(vt0.c0))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM vt0 WHERE (((CAST(-1.472302303E9 AS REAL)) BETWEEN ((('902573335')>(0.5041527591571622))) AND ('1514437809'))); -- 0ms;
SELECT DISTINCT INSTR(CAST(vt0.c0 AS TEXT), CAST(vt0.c0 AS REAL)) FROM vt0 WHERE ((((-601148922)) NOT BETWEEN ((NULL COLLATE BINARY)) AND (((((0.291368283809337)) NOT BETWEEN ((',DC*')) AND (('?8d'))))))) ORDER BY (((((((vt0.c0))>=((vt0.c0))))AND(NULL)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT TOTAL(vt0.c0) FROM vt0 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN (((NULL) BETWEEN ('') AND (x''))) AND (LIKE(0.5001860466119874, 0.7656076571968832)))); -- 0ms;
SELECT ALL CASE WHEN x'ce084715' THEN vt0.c0 COLLATE RTRIM END FROM vt0 WHERE (x''); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt0 GROUP BY ((((x'fa0e')AND(vt0.c0)))OR((x'' IN (vt0.c0)))), ((((CAST('ç¡	0r6då¦' AS BLOB))AND(CAST(vt0.c0 AS TEXT))))AND(((NULL)>=('*9M/å»')))), (('1859504853' COLLATE NOCASE)==(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING x'730d'; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((('U') NOTNULL)) NOT NULL)) OVER () FROM vt0; -- 0ms;
SELECT ALL ((NULL) NOT NULL) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT (~ ('>è­')) FROM vt0; -- 0ms;
SELECT (((((vt0.c0) BETWEEN ('') AND (vt0.c0))))==((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) FROM vt0 WHERE (COALESCE(CAST(NULL AS INTEGER), (~ ('á£ë¢\rs\rî¥')))) UNION ALL SELECT vt0.c0 COLLATE NOCASE COLLATE RTRIM FROM vt0 GROUP BY (((vt0.c0 IN (vt0.c0))) BETWEEN (TIME(vt0.c0, vt0.c0, vt0.c0)) AND (SUBSTR(vt0.c0, vt0.c0))) LIMIT 549108560 OFFSET 259693633; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0 WHERE (((((((((((x'')IS NOT(x'dd060331')))OR((('?.')IS(-438079709)))))OR((((NULL, 8.53475909E8, x'')) BETWEEN (('D4NFJah', 0.4009407132115643, x'')) AND ((0.22025249484349319, 0xffffffffefabcf58, NULL))))))OR(((NULL) NOT NULL))))AND((- (NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL))&(CAST(vt0.c0 AS REAL))) FROM vt0; -- 0ms;
SELECT DISTINCT '1600711053', NULL, CAST(GLOB(vt0.c0, vt0.c0) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)>=(vt0.c0))))) FROM vt0; -- 0ms;
SELECT highlight(((vt0.c0) NOTNULL), ((vt0.c0)OR(vt0.c0)), ((vt0.c0)==(0xffffffffd8948a5e)), CAST(vt0.c0 AS BLOB)), (~ (((vt0.c0) NOT NULL))), vt0.c0 FROM vt0 WHERE ((~ (((x'bbbf')+(x'')))));SELECT DISTINCT CAST(GROUP_CONCAT(vt0.c0) AS INTEGER), COUNT(CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END), LIKELY(((vt0.c0)IS(vt0.c0))) FROM vt0 WHERE ((NOT (((0.3687508663002891) NOTNULL)))); -- 0ms;
SELECT DISTINCT x'6e5f', CASE LOWER(vt0.c0)  WHEN (vt0.c0 IN ()) THEN ((((1.000201781E9)OR(vt0.c0)))AND(vt0.c0)) WHEN AVG(vt0.c0) THEN (NOT (vt0.c0)) WHEN '1781770487' THEN ((vt0.c0)>>(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'adhïzw' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END, SUM(LIKELY(DISTINCT vt0.c0)) OVER () FROM vt0 WHERE ((((x'c4c3' IN ()))&(highlight(x'7556', x'933e', x'', -1.93086569E9)))) GROUP BY ((IFNULL(vt0.c0, vt0.c0))%(((vt0.c0) IS FALSE))) HAVING ((vt0.c0 COLLATE BINARY) NOT NULL);SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((LOWER(vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), vt0.c0 COLLATE NOCASE, (((('ïC')OR(vt0.c0)))+((vt0.c0 IN (vt0.c0)))) FROM vt0 WHERE ((((((- (NULL)))OR((+ ('-1142321605')))))OR(((0X3b4416c0) BETWEEN (x'') AND (x'27f9'))))); -- 0ms;
SELECT ALL COUNT(((vt0.c0) NOTNULL)) FILTER(WHERE (vt0.c0 IN ()) COLLATE BINARY) OVER (), ('1689083608' IN (((((((((vt0.c0)OR('-273952936')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))), CAST(CASE vt0.c0  WHEN vt0.c0 THEN '!isx' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) FROM vt0 WHERE (((('' IN ()))|((('767227844') NOTNULL)))); -- 0ms;
SELECT ALL ((((((((((vt0.c0)=(vt0.c0)))OR(GROUP_CONCAT(vt0.c0))))AND(CHANGES())))AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)-(vt0.c0))) BETWEEN (vt0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)), COUNT(CAST(vt0.c0 AS NUMERIC)) FROM vt0 WHERE (JULIANDAY((-113515906 IN ()), CAST(x'' AS NUMERIC), CASE 'ã¼/zZ'  WHEN '-1778187971' THEN x'' END, (- (NULL)), (469802473 IN (x'93e6')))); -- 0ms;
SELECT CAST(vt0.c0 AS INTEGER) COLLATE BINARY, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE), (((vt0.c0)%(vt0.c0)) IN ()), (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'07ce' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)), (((vt0.c0, 0.9851294972005522, ((vt0.c0) ISNULL)))>=(((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0))==((vt0.c0)))))) FROM vt0 WHERE (((x'' COLLATE BINARY)/(((NULL)IS('mM_ebQc?ã½'))))); -- 0ms;
SELECT DISTINCT ((NULL) BETWEEN (x'') AND (vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)%(vt0.c0))) NOT NULL), GROUP_CONCAT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) OVER (), (((- (vt0.c0)))OR(CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 LIMIT -390385557; -- 0ms;
SELECT DISTINCT (+ ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT LAST_VALUE((('' COLLATE RTRIM)OR(((vt0.c0) IS FALSE)))) OVER ( ORDER BY (((((vt0.c0))>((vt0.c0))))LIKE(((vt0.c0)||(vt0.c0)))) ASC, ((vt0.c0)%(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, highlight(vt0.c0, (vt0.c0 IN (vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0)>(vt0.c0)))  NULLS FIRST) FROM vt0 LIMIT 592921353 OFFSET 1425559374;SELECT DISTINCT (NOT (((vt0.c0)%(vt0.c0)))) FROM vt0; -- 0ms;
SELECT (((vt0.c0, CAST(vt0.c0 AS REAL), vt0.c0 COLLATE NOCASE))==((x'3cc9', ((vt0.c0)%(vt0.c0)), vt0.c0))) FROM vt0 WHERE ((((((((((~ (0Xffffffffeb68cef6)))AND(((NULL)GLOB(0.34230670063528335)))))OR((~ (1276409042)))))OR(((-2.116256765E9)AND('-905518583')))))AND((('-61368970')>=('-431301546'))))); -- 0ms;
SELECT ALL ((((((((((vt0.c0) IS FALSE))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) IS TRUE))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) NOT NULL)) FROM vt0 WHERE (CASE WHEN (((0.8233546184462943))<(('0b'))) THEN (('0.7656076571968832') NOTNULL) ELSE ((x'') NOTNULL) END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (SQLITE_VERSION()))  NULLS FIRST, TYPEOF((- (vt0.c0))) ASC  NULLS LAST; -- 0ms;
SELECT ALL ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE (TRIM(DISTINCT (0xffffffff884cc86c IN ()), (('!{9')OR(x'')))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL) FROM vt0 WHERE ((0.7904784873411241 COLLATE BINARY IN (((0.2949475416191514) IS FALSE)))); -- 0ms;
SELECT ALL CASE ((vt0.c0) ISNULL)  WHEN 0.37387064746246734 THEN ((vt0.c0) ISNULL) ELSE vt0.c0 END FROM vt0 WHERE (json_array_length(((0.023611136021042145) IS TRUE), (259693633 IN ())));SELECT DISTINCT IFNULL(DISTINCT (((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '-156641601', vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '-1448264170')) AND ((vt0.c0, vt0.c0, vt0.c0)))), (- (0.27225882356151854)), CAST((- (vt0.c0)) AS TEXT) FROM vt0 WHERE (NULL COLLATE NOCASE) GROUP BY (+ (LOWER(DISTINCT x'8353'))), vt0.c0, (((((((vt0.c0))!=((vt0.c0))))AND(x'')))OR((vt0.c0 IN ()))) HAVING ((((vt0.c0)==(vt0.c0)))||(CAST(vt0.c0 AS REAL))) LIMIT 564726281; -- 0ms;
SELECT DISTINCT (~ ((((vt0.c0))>=((vt0.c0))))) FROM vt0 WHERE ((('âæ ') IS FALSE) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT json_quote((vt0.c0 IN ())) FROM vt0 WHERE ((((0.666633402103503)) NOT BETWEEN (((NULL IN ()))) AND ((((x'') ISNULL))))); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((LOWER(vt0.c0)))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM vt0 GROUP BY ((CAST(vt0.c0 AS REAL)) ISNULL), (json_remove(vt0.c0, vt0.c0) IN ()), ((((vt0.c0) IS TRUE))<=(NULLIF(DISTINCT vt0.c0, NULL))) HAVING ((((('521559826', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))%(CASE WHEN vt0.c0 THEN vt0.c0 END)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))%((vt0.c0 IN ()))) FROM vt0 GROUP BY '-1074841558' HAVING (((1.45001213E8 IN ()))LIKE(((vt0.c0)|(vt0.c0)))); -- 0ms;
SELECT ALL CAST(((((((((vt0.c0)AND(vt0.c0)))OR('h++8')))OR(vt0.c0)))OR(vt0.c0)) AS TEXT) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (1.639342419E9)) THEN (('M*O')==(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.0796170045378396))) THEN vt0.c0 WHEN CAST(9.02573335E8 AS REAL) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0, 0.27247803253371283)) THEN (vt0.c0 IN ()) WHEN (- (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 COLLATE RTRIM END FROM vt0 WHERE ((NOT (((0.5237037506508063) NOT BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 IN (vt0.c0)) IN ()) FROM vt0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), (vt0.c0 IN (vt0.c0)), (~ (vt0.c0)))) AND ((CAST(vt0.c0 AS REAL), (vt0.c0 IN ()), (- (vt0.c0))))) FROM vt0 WHERE (CAST((((NULL, NULL, '300192829')) BETWEEN ((1.689083608E9, 0.7202126413912053, 1170313162)) AND ((x'', NULL, x''))) AS INTEGER)); -- 1ms;
SELECT DISTINCT (- (NULLIF(DISTINCT vt0.c0, vt0.c0))) FROM vt0 WHERE (CASE WHEN CASE WHEN x'' THEN 1464049526 ELSE NULL END THEN '' COLLATE NOCASE END) LIMIT 754375663; -- 0ms;
SELECT DISTINCT (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((0Xffffffff9a148d2f))>=((vt0.c0))) THEN TRIM(vt0.c0) WHEN vt0.c0 THEN ((x'e04e0fdc')<(vt0.c0)) WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) NOTNULL) THEN (('-47860102') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE (((('-1904910269')>>('0.6645179157076361')) IN ())); -- 0ms;
SELECT ALL CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END FROM vt0; -- 0ms;
SELECT ALL COUNT(*) OVER (), FIRST_VALUE((((((vt0.c0))!=((vt0.c0))))<>(((vt0.c0) IS TRUE)))) OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS), ((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)GLOB(((x'48037d3f')-(vt0.c0)))) FROM vt0 WHERE (((((0.020287580755541157)==(x''))) NOT BETWEEN (((((x'5a0eb799')AND(NULL)))AND('ï¸,4*c~|uc'))) AND ('OK'))); -- 0ms;
SELECT (((vt0.c0))<=((vt0.c0))) COLLATE RTRIM, TOTAL_CHANGES(), ROW_NUMBER() OVER () FROM vt0 WHERE (CAST(x'3413' COLLATE BINARY AS NUMERIC)); -- 0ms;
SELECT ((CAST(vt0.c0 AS REAL)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE ((((('761556238')OR((~ ('')))))OR(0.7020665678806421 COLLATE NOCASE))); -- 0ms;
SELECT (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM, (- (((vt0.c0) IS TRUE))) FROM vt0 GROUP BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END ELSE (((('-205705618')OR(vt0.c0)))AND(vt0.c0)) END, CAST(((x'f2e5') NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT), IFNULL(vt0.c0, vt0.c0); -- 0ms;
SELECT DISTINCT LAST_VALUE((((((vt0.c0) IS FALSE)))>=((HEX('Ryq6'''))))) OVER (), TOTAL((((('-905518583')AND(vt0.c0)))OR(vt0.c0))) OVER (), (((((vt0.c0))>((vt0.c0))))-(vt0.c0 COLLATE RTRIM)) FROM vt0; -- 1ms;
SELECT vt0.c0 FROM vt0 GROUP BY ((SQLITE_COMPILEOPTION_GET(vt0.c0))%(vt0.c0 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE NOCASE FROM vt0 WHERE ((~ (CASE 'D4NFJah'  WHEN '-919333052' THEN '' ELSE '1012590313' END))) GROUP BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((ROUND(vt0.c0, vt0.c0), (((vt0.c0))=((vt0.c0))), LIKELY(DISTINCT vt0.c0))) AND (((vt0.c0 IN ()), ((vt0.c0)>=(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))); -- 0ms;
SELECT TOTAL((vt0.c0 IN ())) FROM vt0 GROUP BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, 0.43852446506163356)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL)))) AND (((vt0.c0) IS TRUE))) HAVING CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN MAX(vt0.c0) THEN vt0.c0 ELSE TRIM(DISTINCT vt0.c0, vt0.c0) END LIMIT 853475909 OFFSET 2140914661; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN x'' END)) AND ((TOTAL(0xffffffff80820d16)))), ((((((vt0.c0)OR('RT')))OR(vt0.c0)))<>(vt0.c0)), ((vt0.c0)==(NULL)) COLLATE RTRIM FROM vt0 WHERE (CAST(('' IN ()) AS BLOB)) ORDER BY (((vt0.c0)IS NOT(vt0.c0)) IN ((NOT (vt0.c0)), (vt0.c0 IN ()))) ASC  NULLS FIRST; -- 0ms;
SELECT 0X753fe33d FROM vt0 WHERE ((+ (LIKELIHOOD('M', 0.617342962008597)))); -- 0ms;
SELECT DISTINCT 0.9365831346783244 FROM vt0; -- 0ms;
SELECT DISTINCT CAST((~ (vt0.c0)) AS BLOB) FROM vt0 LIMIT 1955423924 OFFSET -1538651047; -- 0ms;
SELECT ALL CASE vt0.c0  WHEN x'' COLLATE NOCASE THEN vt0.c0 ELSE ((vt0.c0) IS TRUE) END FROM vt0 WHERE (CASE WHEN CAST('1603325611' AS NUMERIC) THEN NULL ELSE (('ed') BETWEEN (0.2491138708769398) AND (NULL)) END); -- 1ms;
SELECT ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (TOTAL(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((vt0.c0)<=(vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR((~ (vt0.c0)))), CAST(vt0.c0 AS BLOB) FROM vt0 LIMIT -377802632 OFFSET -1622130077; -- 0ms;
SELECT (vt0.c0 IN (IFNULL(DISTINCT vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))))) AND ((((vt0.c0) NOTNULL)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((COUNT(vt0.c0))OR(CAST(vt0.c0 AS BLOB))))AND(((0.7201125980210497)<(vt0.c0)))) FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT COUNT(CAST(vt0.c0 AS BLOB)) OVER ( ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, '821030949', vt0.c0)))))  NULLS LAST ROWS  CURRENT ROW EXCLUDE TIES) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(UNICODE(vt0.c0) AS NUMERIC) FROM vt0; -- 0ms;
SELECT (('AB')LIKE(vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT CASE ((vt0.c0)GLOB(vt0.c0))  WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN MAX(vt0.c0) THEN SUM(vt0.c0) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END, (((NOT (1.362311798E9))) ISNULL), ((((((((CASE vt0.c0  WHEN 0.2276328501145326 THEN vt0.c0 ELSE vt0.c0 END)OR(((-1919828029) ISNULL))))AND((NOT ('-1579659811')))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.9565565527990567 ELSE vt0.c0 END))>=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) FROM vt0 WHERE ((+ ('1409696654' COLLATE NOCASE))) LIMIT -2100007485; -- 0ms;
SELECT ALL ((((((1429139844)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 GROUP BY x'39e9' ORDER BY vt0.c0 DESC  NULLS FIRST LIMIT 1895890450 OFFSET 1639342419; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c0))>((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET((vt0.c0 IN (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), AVG((vt0.c0 IN ())), AVG(CASE vt0.c0  WHEN vt0.c0 THEN NULL END), vt0.c0, NULL FROM vt0; -- 0ms;
SELECT DISTINCT ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (AVG('t\r''W.Mj3]'))), ((0.10070647616279071) ISNULL), CASE COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<=(vt0.c0)) WHEN NULL THEN 0Xffffffffedf53fbb WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOTNULL) ELSE vt0.c0 COLLATE RTRIM END FROM vt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 LIMIT -576918635 OFFSET -1826681613; -- 1ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((((('-183091960')>=(NULL)))+(NULL))) GROUP BY NULLIF(DISTINCT CASE vt0.c0  WHEN 'záeE2#' THEN '' END, (vt0.c0 IN ())), (((vt0.c0)-(vt0.c0)) IN (vt0.c0 COLLATE NOCASE)), ((((((x'b67c') BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN x'a991' END)); -- 0ms;
SELECT DISTINCT (((NOT (x'e37e'))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(LIKELY(DISTINCT vt0.c0))))AND(((((vt0.c0)OR('-592670381')))AND(vt0.c0)))) FROM vt0 WHERE (((((x'1312') IS FALSE)) NOT BETWEEN (CAST('3G/' AS REAL)) AND ((((NULL)) NOT BETWEEN ((0.997765677155748)) AND ((0.8623220339549564)))))); -- 1ms;
SELECT ALL ((CASE WHEN '0á¾' THEN vt0.c0 END)IS(NULL)) FROM vt0 WHERE (((x'') BETWEEN ((((''))>((x'')))) AND ((('761556238') NOT NULL)))); -- 0ms;
SELECT DISTINCT (+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), ((2.59693633E8) BETWEEN (vt0.c0 COLLATE NOCASE) AND (load_extension(vt0.c0))), ((CASE '\nihè­º'  WHEN vt0.c0 THEN NULL END)%(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (x'5fe0'); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((HEX(vt0.c0)))) FROM vt0 WHERE ('775792827'); -- 0ms;
SELECT DISTINCT ((((NOT (vt0.c0)), ((vt0.c0)OR(vt0.c0)), CASE WHEN '' THEN vt0.c0 ELSE 0.7864332252325363 END))<>((vt0.c0, vt0.c0 COLLATE NOCASE, (vt0.c0 IN ())))) FROM vt0 ORDER BY (+ ('TRUE'))  NULLS FIRST LIMIT -1638253635; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((AVG(vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0 WHERE ((((NULL IN ('-236261068')))+(((x'aaa4') NOT BETWEEN (x'4a3a1ee59707') AND ('0.32288678929922265'))))); -- 0ms;
SELECT DISTINCT LEAD(((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL), ((x'') ISNULL), CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE vt0.c0 END THEN (0.0796170045378396 IN (vt0.c0, vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '4\r' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE NOCASE ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) OVER ( ORDER BY ((((vt0.c0) NOT NULL)) IS FALSE)  NULLS LAST) FROM vt0 WHERE (((0Xfffffffff541c9d5)-(8.21030949E8 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0)), ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))%((((vt0.c0))>((vt0.c0))))) FROM vt0 ORDER BY NULL  NULLS LAST; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS NUMERIC))&(CAST(vt0.c0 AS INTEGER))), HEX((- (NULL))), CASE WHEN (NOT (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((1455411494))) WHEN vt0.c0 THEN vt0.c0 WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN ((0xffffffffadbc0b0e)IS NOT(vt0.c0)) ELSE (NULL IN ()) END FROM vt0 WHERE (((((((((((((CAST(NULL AS NUMERIC))OR((('*/J+z')AND(NULL)))))AND((~ (1.836503132E9)))))OR(TRIM(NULL))))AND(NULL)))OR(((0.7904784873411241) IS FALSE))))OR((('0.6006112545104347')%('0.23221659295306885'))))); -- 0ms;
SELECT ALL SQLITE_SOURCE_ID() FROM vt0 WHERE (((((('{TzCv\è­%')) NOT BETWEEN ((0.0029538763955780922)) AND ((''))))/(x''))); -- 0ms;
SELECT DISTINCT (((((- (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (CAST(((0.15639530982258276)<(NULL)) AS REAL)) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST, CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN (- (vt0.c0)) WHEN x'0d68' COLLATE BINARY THEN (NOT (vt0.c0)) WHEN CASE vt0.c0  WHEN 1426500294 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE vt0.c0 END  NULLS FIRST, x'' DESC  NULLS LAST; -- 0ms;
SELECT ALL LOWER((vt0.c0 IN (vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(((vt0.c0)>=('-1494948698'))) FROM vt0; -- 0ms;
SELECT DISTINCT LEAD(vt0.c0, ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('1139589470')))|(((vt0.c0) ISNULL))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) OVER (), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(vt0.c0 COLLATE NOCASE)), SUM('1963372681') FILTER(WHERE ((CAST(vt0.c0 AS TEXT)) NOTNULL)) OVER () FROM vt0; -- 0ms;
SELECT ALL (ABS(DISTINCT vt0.c0) IN ((NULL IN ()))), CASE ((vt0.c0)OR(vt0.c0))  WHEN (- (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((-1731272151)LIKE(vt0.c0)) THEN TRIM(vt0.c0, vt0.c0) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) END, PRINTF(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (CAST(LTRIM(0.15091267581095347, NULL) AS NUMERIC)); -- 1ms;
SELECT (NOT (vt0.c0)) COLLATE NOCASE FROM vt0 GROUP BY (((vt0.c0 IN ()))GLOB(((x'59496253')|(vt0.c0)))) LIMIT 1613619657 OFFSET -2054441389; -- 0ms;
SELECT ALL AVG(vt0.c0) FROM vt0 WHERE ('-1144725414' COLLATE BINARY); -- 0ms;
SELECT ((vt0.c0) NOTNULL) COLLATE BINARY FROM vt0 WHERE (CAST((0.98467421364297 IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT SUM(0.5371154260752552) OVER () FROM vt0 WHERE ((((((0.2557398866778442)>('-583175652')), CAST(NULL AS TEXT), (((('-168390505')OR('t\r''W.Mj3]')))AND(x'6a9a'))))<=((CASE WHEN 0.25603784085387893 THEN NULL END, ((('V7fnlGnK', '-2059300603', -1606973392))>((x'', 'J''å§£S,L', '-280482924'))), (821030949 IN ()))))) GROUP BY ((469802473)GLOB(((vt0.c0) ISNULL))) HAVING ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))&(((vt0.c0)IS(vt0.c0)))); -- 0ms;
SELECT LOWER((NOT (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS REAL) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'784a' ELSE vt0.c0 END) NOTNULL), ((NULL) IS TRUE), ((vt0.c0)||(COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) IS FALSE))OR(COUNT(*))))AND(CAST(vt0.c0 AS REAL))) FROM vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((+ (CAST('-97086828' AS TEXT)))) OVER () FROM vt0; -- 0ms;
SELECT vt0.c0, PERCENT_RANK() OVER (), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), CAST(TRIM(vt0.c0) AS NUMERIC), COUNT(vt0.c0 COLLATE NOCASE) COLLATE BINARY FROM vt0 WHERE (CAST((('1639342419') IS TRUE) AS TEXT)); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((- (((0.8233546184462943) NOTNULL)))) GROUP BY (((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) HAVING AVG(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) COLLATE NOCASE; -- 0ms;
SELECT ALL ((((vt0.c0 COLLATE RTRIM)AND(UNLIKELY(''))))AND(CAST(vt0.c0 AS INTEGER))), (((~ (vt0.c0)))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((CAST(vt0.c0 AS REAL))IS((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 NOT INDEXED WHERE (CAST(0.3687508663002891 AS REAL)); -- 0ms;
SELECT '383693430', CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS NUMERIC), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)LIKE(TOTAL(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (((((('592921353')==(vt0.c0)))OR(((vt0.c0) NOTNULL))))AND(CASE WHEN 0xffffffff8a95fe74 THEN vt0.c0 END)) FROM vt0 GROUP BY vt0.c0, (((1.514437809E9)) BETWEEN (((NOT (vt0.c0)))) AND (((NOT (vt0.c0))))), CAST(vt0.c0 COLLATE BINARY AS REAL); -- 0ms;
SELECT DISTINCT CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY, CASE vt0.c0 COLLATE RTRIM  WHEN vt0.c0 COLLATE BINARY THEN '-1157026720' END, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) FROM vt0 WHERE (((('{CS*j'))!=((x''))) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT DISTINCT json((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), GROUP_CONCAT(vt0.c0) FILTER(WHERE ((LOWER(vt0.c0)) NOTNULL)) OVER (), MIN(vt0.c0 COLLATE BINARY, ((vt0.c0)<<(vt0.c0)), TIME(vt0.c0, vt0.c0, vt0.c0), HEX(DISTINCT vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT NULL, CAST(LIKELY(vt0.c0) AS NUMERIC), (+ (MIN(vt0.c0))) FROM vt0 WHERE ((('-714165164' IN (NULL)) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'a042', ((0.4208918775960161)!=(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND (((vt0.c0 IN (1.45001213E8)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN ())))) DESC LIMIT 1459050312; -- 0ms;
SELECT DISTINCT (((9.02573335E8, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) IS TRUE)))<((((vt0.c0)>=(vt0.c0)), MIN(vt0.c0), ((((vt0.c0)AND(NULL)))OR(vt0.c0))))) FROM vt0; -- 1ms;
SELECT ((((1.832963222E9)IS(vt0.c0)))=(COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL NTH_VALUE(((vt0.c0) NOTNULL) COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND (((vt0.c0 IN ()))))) OVER (), ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(-1.860047421E9)))OR(vt0.c0)))AND(x'')))AND(vt0.c0 COLLATE RTRIM)), ((TOTAL(vt0.c0)) NOTNULL) FROM vt0; -- 0ms;
SELECT ((vt0.c0) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL TRIM(0.3643649621290116, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) FROM vt0 GROUP BY (((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((json_quote(NULL), TRIM(vt0.c0), CASE WHEN vt0.c0 THEN 0X43d1c21b END, (- (vt0.c0)), CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)) AND (((+ (vt0.c0)), CAST(vt0.c0 AS BLOB), CAST(vt0.c0 AS BLOB), (vt0.c0 IN ()), (+ (vt0.c0))))), (NOT (((vt0.c0)/(vt0.c0)))), (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.33532511711583535 END))==((((vt0.c0)<=(vt0.c0))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)!=(vt0.c0))) AND (((vt0.c0)|(vt0.c0)))) FROM vt0 WHERE (CASE NULL COLLATE BINARY  WHEN (((NULL, x'7382', 'cTp\rIW')) NOT BETWEEN ((NULL, '1170313162', NULL)) AND ((NULL, '', '9xu<#'))) THEN x'5995' COLLATE BINARY WHEN CAST('-1469507715' AS NUMERIC) THEN (('775792827') IS TRUE) WHEN CAST('5>' AS INTEGER) THEN ('' IN ()) END); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN x'177e' THEN '0.41843556429642914' ELSE 'p' END) NOT NULL)) LIMIT -2126640362 OFFSET 1420831273; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<>((((vt0.c0)%(vt0.c0))))) FROM vt0 WHERE ((((('-1096702220')) BETWEEN (('c/~vVDl>d')) AND ((x'21d3'))) IN ())); -- 0ms;
SELECT DISTINCT ((vt0.c0 IN ()) IN (vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<(vt0.c0)))%((+ (vt0.c0)))), CAST(((vt0.c0)>>(vt0.c0)) AS INTEGER), ((vt0.c0)GLOB((+ (NULL)))) FROM vt0 WHERE (0.596413508505724) ORDER BY ((vt0.c0)IS NOT((vt0.c0 IN ())))  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS REAL) END  NULLS LAST, ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND((~ (vt0.c0)))))AND(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)OR(vt0.c0))))  NULLS LAST; -- 0ms;
SELECT (((CAST(vt0.c0 AS NUMERIC)))=(((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) FROM vt0; -- 0ms;
SELECT ALL CAST(COUNT(*) AS INTEGER) FROM vt0 WHERE (((0.24142581558522014) NOT BETWEEN (((0.10303536842145433)+(0.5954688170893655))) AND ((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((RTRIM(vt0.c0))OR((vt0.c0 IN (vt0.c0)))) FROM vt0 WHERE (0.6511808697638289); -- 0ms;
SELECT ALL MIN('-634060016'), (((vt0.c0)) BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((CAST(vt0.c0 AS NUMERIC)))), IFNULL(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT NULL)) FROM vt0; -- 0ms;
SELECT ALL (+ (TOTAL(vt0.c0))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)/(vt0.c0)))) AND (((- (NULL))))), vt0.c0, 5.4910856E8, CASE ((vt0.c0) NOTNULL)  WHEN vt0.c0 COLLATE NOCASE THEN json_valid(vt0.c0) WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN CAST(vt0.c0 AS BLOB) THEN x'61e9b7bd' END FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(x'')))AND(vt0.c0)))) FROM vt0 LIMIT -220910141; -- 0ms;
SELECT CUME_DIST() OVER ( ROWS  CURRENT ROW) FROM vt0; -- 0ms;
SELECT IFNULL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL UPPER(DISTINCT CAST(vt0.c0 AS TEXT)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST('1502233557' AS BLOB), ((vt0.c0)|(vt0.c0))))!=((CAST(vt0.c0 AS BLOB), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0X72938a8a, vt0.c0, vt0.c0))), ABS(vt0.c0)))) FROM vt0 WHERE (((((((((json_extract(x'', '-586602062'))AND((0.8384312604663506 IN ()))))AND(((')A')>>(0.7904784873411241)))))AND((NULL IN ()))))AND((('')/(NULL))))); -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY, NULL, CASE (+ (vt0.c0))  WHEN GROUP_CONCAT(vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END FROM vt0 WHERE ('1955423924'); -- 0ms;
SELECT ALL CAST(vt0.c0 AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(x''))) AND (vt0.c0)), COUNT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN ((((NULL, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) AND (NULL)) FROM vt0 WHERE (CASE 284519934 COLLATE BINARY  WHEN (((0.3138470596862841, '1096106188', '-1096702220')) BETWEEN ((NULL, NULL, '712889334')) AND ((0.36908339493873177, x'', ''))) THEN ((0.8891528709457857) IS TRUE) WHEN json_object(NULL, 0.05489287079277372, 0.7992596923535791, 0.9969836185245888) THEN CAST(x'' AS BLOB) WHEN ((0.9887724452467062) NOT BETWEEN (x'') AND ('340684834')) THEN 1200570456 END) GROUP BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) HAVING LIKE((vt0.c0 IN (vt0.c0, vt0.c0)), vt0.c0);SELECT DISTINCT ((NULL) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT MIN((vt0.c0 IN (vt0.c0))) FROM vt0 ORDER BY CAST(((vt0.c0) NOTNULL) AS BLOB)  NULLS FIRST; -- 0ms;
SELECT ALL (NOT (json_extract(0.8080388494215421, vt0.c0))) FROM vt0 WHERE (((((CAST('-1' AS TEXT))OR(CAST('?' AS BLOB))))AND(NULL))); -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))>(((vt0.c0) IS FALSE))), CASE (~ (vt0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CAST(x'' AS INTEGER) END, CASE WHEN AVG(vt0.c0) THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(MIN(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0;SELECT GROUP_CONCAT(0xffffffffa61e4b49) FROM vt0 WHERE (((((0.15616566545942923)<>(x''))) NOT BETWEEN (CAST(x'' AS BLOB)) AND (((NULL) NOT BETWEEN ('99469941') AND ('-877843151'))))) GROUP BY ((CAST(vt0.c0 AS INTEGER))IS(0.9967996137540704)); -- 0ms;
SELECT AVG(vt0.c0) FROM vt0 WHERE (CASE WHEN UNLIKELY(DISTINCT '469802473') THEN 0.8364198657180749 COLLATE NOCASE WHEN LIKELY(DISTINCT 0xffffffff90d02cd6) THEN (((0.6386876288822032, 'ao', '>?wvaC')) NOT BETWEEN ((x'', NULL, 0xffffffff814a84c4)) AND ((x'', '', NULL))) WHEN (0.8594810035697514 IN (x'')) THEN (((NULL)) NOT BETWEEN ((0xffffffffe95767b2)) AND ((NULL))) ELSE TRIM(DISTINCT '-1901618057') END) LIMIT -477370984; -- 1ms;
SELECT DISTINCT ((((vt0.c0) ISNULL)) NOTNULL) FROM vt0 WHERE (CAST((('[Z')<=(x'')) AS NUMERIC)) ORDER BY MIN(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END); -- 0ms;
SELECT DISTINCT CAST((+ (vt0.c0)) AS INTEGER), CASE WHEN vt0.c0 COLLATE BINARY THEN CHANGES() END, (- (vt0.c0)) COLLATE BINARY, ((((LIKELY(vt0.c0))AND(CAST(vt0.c0 AS REAL))))AND(IFNULL(vt0.c0, vt0.c0))), MAX(MAX(((vt0.c0)=(vt0.c0)))) FROM vt0;SELECT DISTINCT (((COUNT(*), ((vt0.c0)>(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((((((((vt0.c0)OR(vt0.c0)))OR(0Xffffffffdf9e253b)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0))))) FROM vt0 WHERE (((((x'b934')%(x'3222'))) ISNULL)) ORDER BY 0.40661665693622384 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER), SUM(((vt0.c0) NOTNULL)) OVER ( RANGE BETWEEN (+ (CAST(vt0.c0 AS BLOB))) FOLLOWING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS), ((CASE WHEN NULL THEN vt0.c0 END) NOTNULL) FROM vt0;SELECT DISTINCT ABS((vt0.c0 IN (vt0.c0))) FROM vt0; -- 1ms;
SELECT ALL vt0.c0 COLLATE RTRIM FROM vt0 GROUP BY CAST(((vt0.c0)IS(0xffffffff899adb04)) AS REAL) LIMIT -1324580459 OFFSET 1362311798; -- 0ms;
SELECT RANK() OVER ( ORDER BY HEX(DISTINCT ((vt0.c0)<>(vt0.c0))) DESC), ((((vt0.c0) NOT NULL))%(vt0.c0)), ((((((vt0.c0)>=(vt0.c0)))OR(((((((((vt0.c0)OR(x'8c4c')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(MAX(vt0.c0, vt0.c0))) FROM vt0 WHERE (CASE ((x'') BETWEEN (x'') AND (343098874))  WHEN ((NULL) NOT BETWEEN ('') AND (NULL)) THEN ((('')) NOT BETWEEN ((NULL)) AND (('-156641601'))) WHEN (('Bct')LIKE(NULL)) THEN (((NULL)) BETWEEN (('Iv')) AND (('-692071247'))) WHEN UNLIKELY('') THEN ((((((((NULL)AND(0.27832877232167574)))AND(0.05798930460368179)))AND(0.3671001736398767)))OR(x'')) WHEN ('-363483590' IN ()) THEN (~ ('-1734781093')) WHEN (- (x'')) THEN (NOT ('-2118244038')) END) LIMIT 176190979 OFFSET -1087257860; -- 0ms;
SELECT ALL CAST(LIKELIHOOD(vt0.c0, 0.4701002577346516) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT (- (COUNT(vt0.c0))) FROM vt0 ORDER BY (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST, ((NULL)>>((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))); -- 0ms;
SELECT DISTINCT ((NULL COLLATE BINARY)%(COUNT(*))), vt0.c0, CASE GROUP_CONCAT(vt0.c0)  WHEN ((vt0.c0) BETWEEN (0.38100265776779474) AND (vt0.c0)) THEN ((vt0.c0)GLOB('æ½¯y')) ELSE vt0.c0 END FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL), (((NOT (vt0.c0)))>(((vt0.c0)LIKE(vt0.c0)))), LIKE(((vt0.c0)>=(x'')), SUM(vt0.c0)) FROM vt0 WHERE ((((((-86321769)AND(NULL)))AND(NULL)) IN ())) GROUP BY ((((vt0.c0)<(vt0.c0))) BETWEEN (0.1980702910717288) AND (CAST(vt0.c0 AS TEXT))) HAVING CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS INTEGER); -- 0ms;
SELECT GROUP_CONCAT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'a342')))) OVER ( ORDER BY ((((vt0.c0) NOTNULL))|(HEX(vt0.c0))) ASC) FROM vt0 WHERE (((NULL COLLATE BINARY)GLOB(((0x75c904c4)!=(x''))))); -- 0ms;
SELECT ((((((vt0.c0)!=(vt0.c0)))OR((('')AND(vt0.c0)))))AND(((vt0.c0)<>(vt0.c0)))) FROM vt0 UNION ALL SELECT ((LIKE(vt0.c0, vt0.c0, '<')) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0)||(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND (((vt0.c0) NOTNULL))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT CASE WHEN NULL COLLATE NOCASE THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE ((vt0.c0)<=(0.7014594750903769)) END FROM vt0 WHERE (CAST(CASE NULL  WHEN 0.978334700788669 THEN 0Xffffffffd7b38756 END AS BLOB)); -- 0ms;
SELECT ALL ((vt0.c0)|((NULL IN ()))) FROM vt0 WHERE (((CAST(x'' AS REAL))||((('yë¡0V>na6m')>>(x''))))) GROUP BY SQLITE_COMPILEOPTION_USED(vt0.c0), (((NOT (vt0.c0)))<(vt0.c0 COLLATE BINARY)), ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) HAVING ((((-9.9240576E7)%(NULL))) BETWEEN (((vt0.c0) NOT NULL)) AND ('176562742')) ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt0.c0, ((((vt0.c0)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(PRINTF(vt0.c0))), (((((vt0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT ((CAST(vt0.c0 AS INTEGER))GLOB((- (vt0.c0)))) FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((((0.7659837586695895)) BETWEEN ((1521312110)) AND ((vt0.c0))))) AND (((vt0.c0 IN ())))) FROM vt0; -- 0ms;
SELECT DISTINCT 0.6076201936340938 FROM vt0 WHERE (CAST(NULL COLLATE BINARY AS BLOB)); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0)))) FROM vt0 WHERE (((((((0.38437473943732525) IS FALSE))AND((((0.2841528425277806))>=((0.1689892522419052))))))AND(UNICODE(x'')))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0 WHERE (((('-1850577656') NOT BETWEEN (x'4ba14dd1') AND (x'')) IN ())); -- 1ms;
SELECT (((~ (vt0.c0))) NOTNULL) FROM vt0 GROUP BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))), 1360476738 COLLATE NOCASE, (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (CASE vt0.c0  WHEN NULL THEN x'' ELSE vt0.c0 END IN ((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((vt0.c0 IN ()) IN ());SELECT ALL CUME_DIST() OVER () FROM vt0; -- 0ms;
SELECT ALL (CAST(vt0.c0 AS INTEGER) IN ()) FROM vt0 WHERE ((('7_}') ISNULL)) LIMIT 1362311798 OFFSET -959941969; -- 0ms;
SELECT DISTINCT CASE WHEN json_extract(vt0.c0, vt0.c0) THEN (~ (vt0.c0)) END, (('-488053133') NOT NULL), ((MAX(vt0.c0))/(((vt0.c0)<(vt0.c0)))) FROM vt0 WHERE (((LIKELIHOOD(0.418897084540683, 0.018052114813576492)) NOT BETWEEN (CASE 0.061371088986553524  WHEN 0.36189510037300343 THEN '3-í¼j' ELSE '-1990130346' END) AND (ROUND('2088174076', NULL))));SELECT vt0.c0 COLLATE BINARY, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (SUM(vt0.c0)) AND (((vt0.c0)<=(vt0.c0)))), (+ (LENGTH(vt0.c0))) FROM vt0 WHERE (((((33368689)<<(NULL))) BETWEEN (CASE WHEN 0X22cf3fa3 THEN '?' ELSE x'' END) AND (((x'') NOTNULL)))); -- 0ms;
SELECT FIRST_VALUE(vt0.c0) OVER () FROM vt0 WHERE ((((((((((('1508853550')OR(NULL)))OR(NULL)))OR(0xfffffffffe232e9d)))OR('w-vt')))<>(((NULL) NOT BETWEEN (x'') AND (NULL))))) GROUP BY (((~ (vt0.c0)))<<(NULL)) HAVING (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(CASE vt0.c0  WHEN 0.4009407132115643 THEN vt0.c0 ELSE vt0.c0 END)))AND('' COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN NULL WHEN (- (vt0.c0)) THEN 0xffffffff8640cb0b WHEN CASE vt0.c0  WHEN 4.33245693E8 THEN vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) END, x'', vt0.c0 FROM vt0 WHERE (CAST(CAST(x'' AS TEXT) AS BLOB)) ORDER BY ((((vt0.c0) IS FALSE))>=((('A}') BETWEEN (vt0.c0) AND (-4.02973994E8)))) DESC, (((((vt0.c0))>((vt0.c0)))) ISNULL), LIKELY(CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)  NULLS LAST; -- 0ms;
SELECT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY FROM vt0 GROUP BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (0.49328382272022264))  WHEN vt0.c0 THEN ((vt0.c0)<<(vt0.c0)) WHEN ((vt0.c0)>=(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN (('A}') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.7383897602108775) ELSE ((vt0.c0)-('196684143')) END; -- 0ms;
SELECT CASE (+ (vt0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN CASE WHEN vt0.c0 THEN 0.0026168525427706646 ELSE vt0.c0 END WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((0.788244560344186)*(vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOTNULL) ELSE vt0.c0 END FROM vt0 WHERE (ABS(NULL)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)>>(vt0.c0))) NOT NULL), TRIM(vt0.c0), GROUP_CONCAT(((vt0.c0)<<(vt0.c0))) OVER () FROM vt0 WHERE ((~ ('-1401209473'))); -- 1ms;
SELECT (((x'', vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), LIKE(vt0.c0, vt0.c0, '.'), ((x'')OR(vt0.c0)))) AND ((((vt0.c0)%(vt0.c0)), vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))), CAST(json_object(vt0.c0, vt0.c0) AS BLOB), ((vt0.c0) NOT NULL) FROM vt0 WHERE ((~ (((((((((NULL)OR(NULL)))AND(NULL)))OR(0.5346128694868354)))OR('')))));SELECT DISTINCT SQLITE_COMPILEOPTION_USED(x''), CASE vt0.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN MAX(vt0.c0) WHEN (((vt0.c0))>((vt0.c0))) THEN 0.6892168945582089 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END, vt0.c0 FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c0)%(vt0.c0)) AS BLOB) FROM vt0 LIMIT -149089685; -- 0ms;
SELECT NULLIF(DISTINCT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), NULL), CUME_DIST() OVER (), (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(STRFTIME(vt0.c0, vt0.c0, vt0.c0) AS BLOB) FROM vt0 WHERE (((((x'')<(''))) NOTNULL)) LIMIT 1701333638; -- 1ms;
SELECT DISTINCT (((MAX(vt0.c0)))>=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) FROM vt0 WHERE (DATE(((0.06538601830747859) NOT NULL), ('-1468135608' IN ()), (((x'', 0.6343211234273017, 914463696)) NOT BETWEEN ((0.4730874769755783, '-31248739', '')) AND ((NULL, '-1353521840', 0.5963389479698775))))); -- 0ms;
SELECT DISTINCT CAST(UPPER(vt0.c0) AS NUMERIC) FROM vt0 WHERE (((x'')==(NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((vt0.c0) BETWEEN ((vt0.c0 IN ())) AND (((-1.638253635E9)|(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)&(vt0.c0)) END, LEAD((((vt0.c0 COLLATE BINARY))==(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'd48b', vt0.c0, vt0.c0)))))), ((((((vt0.c0)*(NULL)))AND(((x'8ce2') NOT NULL))))AND(x'')), '-461713204') OVER (), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)>(0x7faa79bc)))) FROM vt0 WHERE (CASE NULL  WHEN 0.985343728361715 THEN '	*''{' END COLLATE NOCASE); -- 0ms;
SELECT ALL SUM(((vt0.c0)LIKE(vt0.c0))) OVER ( ORDER BY ((((vt0.c0)<>(1.861520888E9))) IS FALSE)) FROM vt0 WHERE (COALESCE((((0.7020665678806421))=((NULL))), (0.2251096014246171 IN ()))); -- 1ms;
SELECT ABS(DISTINCT CAST(NULL AS TEXT)), RANK() OVER (), (((((((vt0.c0))=((vt0.c0))))OR(vt0.c0)))AND((vt0.c0 IN ()))) FROM vt0 WHERE ('636792197'); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) FROM vt0 WHERE ((((x'') NOT NULL) IN ())); -- 0ms;
SELECT DISTINCT FIRST_VALUE((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE -1494960627 END)) AND ((vt0.c0)))) OVER ( ROWS  CURRENT ROW) FROM vt0 WHERE (json_patch(x'', ((x'a52ada2c')<(0.4514464597685537))));SELECT DISTINCT TOTAL(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0x1136fe28 WHEN 0.8044526701691543 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0)IS(vt0.c0)))), vt0.c0, COUNT(vt0.c0 COLLATE NOCASE COLLATE BINARY) OVER () FROM vt0 WHERE (((('1714973573')-('_1')) IN ())); -- 0ms;
SELECT DISTINCT NULL, LAST_INSERT_ROWID(), ((json_patch(x'77a5', vt0.c0))OR(COUNT(vt0.c0))) FROM vt0 WHERE (CAST(NULLIF(DISTINCT x'', '584007587') AS NUMERIC)) GROUP BY (json_patch(vt0.c0, vt0.c0) IN ()); -- 1ms;
SELECT DISTINCT (~ (((vt0.c0)OR(vt0.c0)))) FROM vt0 WHERE (((CASE x'5a43'  WHEN '1362311798' THEN '?.' ELSE -3.1248739E7 END)GLOB(((NULL)<=(0.05392820389266695))))) ORDER BY CASE WHEN ((vt0.c0)-(vt0.c0)) THEN '-99240576' ELSE MAX(vt0.c0, vt0.c0) END ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((0.05489287079277372)<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.35830701945558896)))) FROM vt0 WHERE ((('151528457')==('-1778187971'))); -- 0ms;
SELECT ALL ((((('' IN (vt0.c0)))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(0.919364506447641)))))AND(MAX(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))==(x'')) FROM vt0 WHERE (((((((')A') ISNULL))OR((((x'8f1b'))>=((x''))))))OR(456567285))); -- 0ms;
SELECT ALL NTH_VALUE((~ (x'')), ((((NOT (vt0.c0))))!=((vt0.c0)))) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0 WHERE (ABS(((((0.12921257252311835)OR('2{}#O')))OR(NULL)))); -- 1ms;
SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(json_extract(vt0.c0, vt0.c0))), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))), ((CAST(vt0.c0 AS TEXT)) NOT NULL) FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS BLOB) DESC  NULLS LAST;SELECT ALL ((vt0.c0 COLLATE BINARY)&(vt0.c0)) FROM vt0 WHERE ((((((0.5200454893442984 IN ()))OR((('-31248739') NOTNULL))))OR(CAST(0.4684596516269287 AS NUMERIC)))); -- 0ms;
SELECT ((vt0.c0)<>(NULL)) COLLATE RTRIM FROM vt0 WHERE (CAST(x'' AS INTEGER)); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL), vt0.c0, SUM('f>W(P') FILTER(WHERE '902408115') OVER () FROM vt0 UNION ALL SELECT DISTINCT ((vt0.c0 COLLATE BINARY) BETWEEN (AVG(vt0.c0)) AND (((vt0.c0) IS TRUE))), (('-151442246') NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((vt0.c0)|(vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE ((((840368264)) NOT BETWEEN ((CAST('-695439325' AS TEXT))) AND ((0.7963819609002736)))) GROUP BY CAST('ã»\ndQ' COLLATE RTRIM AS REAL), ((CAST('1Utk\n_' AS REAL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0)), ((((vt0.c0)IS(vt0.c0)))-(((((vt0.c0)OR('1419205714')))AND(vt0.c0)))), CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END, vt0.c0 HAVING CASE WHEN COUNT(*) THEN (vt0.c0 IN ()) END; -- 1ms;
SELECT DISTINCT CASE TOTAL(vt0.c0)  WHEN SQLITE_VERSION() THEN x'83d8' WHEN CAST(vt0.c0 AS REAL) THEN (('Bá*?}Xã¡®')<<(vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((0.2990042057098449) NOTNULL) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT (NOT ('1740952754')) COLLATE RTRIM FROM vt0 WHERE (TRIM(((('', x'9e2f', '0.21939257255660882'))<>((0.9851294972005522, 4.33245693E8, '0.666633402103503'))))) ORDER BY ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt0.c0 AS INTEGER)))  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<(((((vt0.c0))<=((vt0.c0))))))  NULLS FIRST, vt0.c0; -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM)%((vt0.c0 IN (NULL)))), (MAX(vt0.c0) IN (2069472208)), TOTAL(((vt0.c0)AND(vt0.c0))) OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW), UNLIKELY(GROUP_CONCAT(vt0.c0)), (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (((((((((((((((0.5001860466119874)AND('501165214')))AND(NULL)))OR(x'')))OR(NULL)))OR(',ï¹*î´£%[T[')))AND('x]'))) IS TRUE)); -- 0ms;
SELECT ALL CASE WHEN TOTAL(vt0.c0) THEN 'Ew' END FROM vt0 GROUP BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL); -- 0ms;
SELECT ((vt0.c0 IN ()) IN ()) FROM vt0 GROUP BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)>>(vt0.c0)))); -- 1ms;
SELECT DISTINCT AVG((vt0.c0 IN (x'', vt0.c0))) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW), 0.9401562760150629, (- (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ((((+ (vt0.c0))))>=(((((vt0.c0))<=((1462575248)))))) FROM vt0; -- 0ms;
SELECT ALL (vt0.c0 COLLATE RTRIM IN (UPPER(DISTINCT vt0.c0))) FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) IS FALSE))))AND((((vt0.c0))>=((vt0.c0))))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)) DESC  NULLS LAST; -- 0ms;
SELECT (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN 8.21030949E8 END))) FROM vt0 WHERE ((- (NULLIF(8.21030949E8, 'd''{Y')))); -- 0ms;
SELECT DISTINCT SUM(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) OVER (), ((vt0.c0 COLLATE NOCASE)-(MAX(x''))), COUNT(*) OVER () FROM vt0 WHERE ((NOT ((('433245693')>(NULL))))) LIMIT -793477456 OFFSET 1551282440; -- 0ms;
SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))>((~ (vt0.c0)))) FROM vt0 WHERE (CASE WHEN (+ (0.4065590639227905)) THEN (('-1329446941') NOT BETWEEN (x'7e571258') AND (NULL)) END) INTERSECT SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(DISTINCT vt0.c0) END, ((CASE 0.1689892522419052  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(HEX(DISTINCT NULL))) FROM vt0 WHERE (CAST(CAST(0.9329484491546737 AS BLOB) AS INTEGER)); -- 0ms;
SELECT ((((vt0.c0) IS TRUE)) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((NOT (vt0.c0))) FROM vt0 WHERE (0.9309099224106111) LIMIT -771662680; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST) FROM vt0 WHERE (((((((NULL)OR('566997986')))AND(NULL)))<>((NOT (NULL))))); -- 0ms;
SELECT TOTAL((NOT (NULL))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ((((((x'0aac', '-562892999', NULL))>((0.8792927627347121, 0.8422660369751291, 'ë­Pcîº¼JE'))))!=(CAST(NULL AS REAL)))) ORDER BY (((((+ (vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((((0.5463448412026601)AND(vt0.c0)))AND(vt0.c0)))); -- 0ms;
SELECT DISTINCT ((JULIANDAY(vt0.c0, '3\n\r', vt0.c0, NULL, vt0.c0))|(((vt0.c0)=(vt0.c0)))), (- (vt0.c0)), ((vt0.c0)/(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 LIMIT -188401390 EXCEPT SELECT ALL ((((((((((0.04977063787905589)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE), vt0.c0, (((((vt0.c0))<>((NULL)))) ISNULL) FROM vt0;SELECT (((vt0.c0 IN ()))IS(0.8317163230890305)), ((LIKE(vt0.c0, vt0.c0)) NOTNULL), (+ (UPPER(vt0.c0))), ((((vt0.c0) BETWEEN (vt0.c0) AND (1514437809)))<=(((vt0.c0)>>(vt0.c0)))), (vt0.c0 IN ()) COLLATE RTRIM, ((vt0.c0)||(((vt0.c0)AND(vt0.c0)))), (((GROUP_CONCAT(0.6797503225655082)))<=((UNICODE(vt0.c0)))) FROM vt0 WHERE (((TRIM(0xffffffff9603013d))|(((NULL) NOT BETWEEN (0.0) AND (0.3687508663002891))))); -- 0ms;
SELECT ALL ((COUNT(vt0.c0)) BETWEEN (x'20d8be3a') AND (CASE WHEN 'GRsw]' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (((('0.22879939627703016', '6		SRMlUt', '')) NOT BETWEEN (('-236261068' COLLATE RTRIM, CASE WHEN '' THEN NULL ELSE '0.837005955588533' END, CASE x''  WHEN NULL THEN NULL WHEN 0.4246615395842136 THEN 1089426930 WHEN x'' THEN '-1264426785' END)) AND (((+ ('-1776404273')), CAST(x'bfab' AS REAL), 'RQ')))); -- 1ms;
SELECT ((((json(vt0.c0))OR(vt0.c0 COLLATE RTRIM)))OR(vt0.c0 COLLATE BINARY)), SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), vt0.c0 COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT ('Q]V' IN (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (CAST(((((0.477273797195211)OR(x'')))AND(x'')) AS NUMERIC)); -- 0ms;
SELECT CAST(vt0.c0 COLLATE RTRIM AS REAL) FROM vt0 ORDER BY (0.6024770556775915 IN (((vt0.c0)==(vt0.c0))))  NULLS LAST; -- 0ms;
SELECT ((((((((vt0.c0 COLLATE RTRIM)AND(x'')))OR((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)%(vt0.c0)))), json_object((((vt0.c0))<>((vt0.c0))), ((vt0.c0)>>(vt0.c0))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '260383119' THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (MIN(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((('*ê»J/.\n*AM' IN ()))<<((('1779681323') IS FALSE)))) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST, ((((((vt0.c0)OR(vt0.c0)))AND(''))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (-784944928));SELECT (NOT (SUM(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((vt0.c0)>>(vt0.c0))) FROM vt0 UNION ALL SELECT ALL CAST(((vt0.c0)+(vt0.c0)) AS BLOB) FROM vt0 WHERE ((((x'')/(NULL)) IN ())); -- 0ms;
SELECT TOTAL((+ (vt0.c0))) OVER () FROM vt0 EXCEPT SELECT DISTINCT ((((CAST(vt0.c0 AS BLOB))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT NULL))) FROM vt0 LIMIT -1306617557 OFFSET 145001213; -- 0ms;
SELECT DISTINCT (((vt0.c0 COLLATE RTRIM))>((MIN(vt0.c0)))) FROM vt0 ORDER BY (- (vt0.c0)) COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (vt0.c0)))), ((vt0.c0) NOTNULL) COLLATE BINARY, (('433245693')%((NOT (vt0.c0)))) FROM vt0 WHERE ((('L\nb' COLLATE RTRIM) ISNULL)); -- 0ms;
SELECT ALL x'' FROM vt0 WHERE (UPPER(('mg\nhQWx' IN ()))); -- 0ms;
SELECT ((vt0.c0)%(((vt0.c0) ISNULL))) FROM vt0 GROUP BY (((+ (vt0.c0))) IS TRUE), json_object(((vt0.c0)OR(vt0.c0)), '1456622529' COLLATE BINARY), LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC)) LIMIT 604166957;SELECT ALL ((((vt0.c0, vt0.c0, 'h)')) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()), CASE CASE -1652553390  WHEN vt0.c0 THEN vt0.c0 END  WHEN (((vt0.c0))!=((vt0.c0))) THEN 0X2b1cbb65 ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, CAST(((vt0.c0)<(vt0.c0)) AS TEXT), COUNT(*), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))GLOB(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((LOWER(vt0.c0))+(((((vt0.c0)OR(vt0.c0)))OR(NULL)))) FROM vt0 WHERE ('176190979' COLLATE RTRIM); -- 0ms;
SELECT DISTINCT SUM(UNLIKELY(x'72aa')), COUNT(*), (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))) AND ((vt0.c0 COLLATE RTRIM))) FROM vt0 WHERE ('95018103') ORDER BY ((rtreenode(vt0.c0, vt0.c0)) NOT NULL) ASC  NULLS LAST, 0Xffffffff8742e6e2 DESC; -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), ((vt0.c0)&(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN (('')) AND ((vt0.c0))), ((vt0.c0)<>(vt0.c0)), (NULL IN ())))) FROM vt0 WHERE ((((NULL COLLATE NOCASE, CAST(-1.09670222E9 AS BLOB), (((x'')) NOT BETWEEN (('&')) AND (('%	\n\N')))))>((((NULL) NOT BETWEEN (NULL) AND (NULL)), ((x'')||(x'')), x'')))) ORDER BY (((0.9112373063760587 IN ()))>=(vt0.c0 COLLATE RTRIM))  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt0.c0)%(''))) NOT BETWEEN (vt0.c0) AND ((~ (vt0.c0)))) FROM vt0 LIMIT 210237160 OFFSET -926343635; -- 1ms;
SELECT DISTINCT (NOT (UNLIKELY('2088174076'))), LAG(((TRIM(x'', vt0.c0)) BETWEEN (((vt0.c0) ISNULL)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (((vt0.c0 IN (vt0.c0, NULL))) IS TRUE), (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) OVER (), (((+ (vt0.c0))) NOT BETWEEN (((vt0.c0)<>(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (CASE WHEN ((-1.025907675E9)GLOB(0.7393269610838358)) THEN '' COLLATE NOCASE ELSE NULL COLLATE NOCASE END) GROUP BY (((- (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0)); -- 0ms;
SELECT ALL (+ (((vt0.c0)/(vt0.c0)))) FROM vt0 WHERE (CASE WHEN CASE WHEN NULL THEN 0.3760472435891421 WHEN x'' THEN x'' WHEN NULL THEN '1532041402' ELSE 0.6889364080031555 END THEN ((1.7214078535454647E-4) IS FALSE) WHEN (x'' IN (0.20445950263762314)) THEN ((('1701333638')) NOT BETWEEN ((x'3a8f')) AND (('-1645803790'))) WHEN ('ä·Nï¼+' IN ()) THEN ((('')) NOT BETWEEN ((-9.4147353E8)) AND ((NULL))) ELSE (((((((('')AND(NULL)))AND(NULL)))AND(NULL)))AND(x'4df9')) END); -- 0ms;
SELECT ALL ((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) IS FALSE))))AND(AVG(vt0.c0))))OR(GROUP_CONCAT(vt0.c0))), TRIM(DISTINCT x''), 788534155 FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0X249472b5)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), vt0.c0, ('8908982' IN ()) FROM vt0 GROUP BY (((vt0.c0) NOTNULL) IN ()); -- 1ms;
SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.26311557495383564 END)))AND((- (vt0.c0)))) FROM vt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE  NULLS FIRST; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) IS FALSE) COLLATE RTRIM), (- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), AVG('M*O') OVER () FROM vt0 WHERE ((NOT (((0.4941781581542545)IS NOT(0.021530297453383862))))); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER () FROM vt0 WHERE (((((x'')>>(0.6962550340671244)))>>((((((((('6ä£mm')AND('-1104310057')))OR('1095001650')))AND(x'')))OR(x''))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) NOTNULL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)%(vt0.c0)) THEN HEX(DISTINCT vt0.c0) WHEN ((vt0.c0)>('lc5S,Qbi~')) THEN (('æ½¯y') BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END, GROUP_CONCAT((vt0.c0 IN ())) OVER (), CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN '' END END FROM vt0; -- 1ms;
SELECT ALL (((NOT (vt0.c0))) IS TRUE), x'', (+ ((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((x''))) FROM vt0 WHERE ((((((x'', '', '1455180379')) BETWEEN ((x'b31b', 'E|f4[C+', 'yzæ´rpfbh')) AND (('', 0.4426039988952294, NULL))))>((((('549108560')OR(x'')))OR(0.5214733141303787))))); -- 0ms;
SELECT DISTINCT (NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((1414354000, vt0.c0, vt0.c0))))), ((((vt0.c0) NOT NULL)) NOT NULL), SUM(vt0.c0) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE), (NOT (-1671156933)), ((vt0.c0 IN (vt0.c0)) IN (GROUP_CONCAT(vt0.c0))) FROM vt0 WHERE ((('zloè¼G') IS TRUE) COLLATE BINARY) GROUP BY ((x'' COLLATE NOCASE) NOTNULL) ORDER BY LIKELY(DISTINCT 0X6a2c4b4c), json_remove(CAST('1648168983' AS NUMERIC), vt0.c0, vt0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC LIMIT -947049779; -- 1ms;
SELECT GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()), vt0.c0 FROM vt0 WHERE ((~ (((NULL)*(x''))))) GROUP BY (- ((vt0.c0 IN ()))) HAVING ((((((((vt0.c0)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0, x'', vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))))AND(json_patch(vt0.c0, vt0.c0))))AND(((vt0.c0)>(0.477273797195211)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL)) BETWEEN (0Xffffffffe8d2da48) AND (MIN(vt0.c0))) FROM vt0 WHERE ((CASE 0.9228081488460618  WHEN 0.6275777427814141 THEN NULL ELSE NULL END IN ())); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS REAL), ((+ (vt0.c0)) IN ()), (((vt0.c0)) NOT BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((SUM(vt0.c0)))) FROM vt0 WHERE ((((((('')AND('1360937438')))AND('J''å§£STL')))AND(((x'') BETWEEN (x'') AND (x'434d'))))); -- 0ms;
SELECT DISTINCT ((((((NULL)OR(vt0.c0)))AND(vt0.c0))) IS TRUE) FROM vt0 WHERE (CAST((((x''))>((0.11301666139173361))) AS REAL)); -- 0ms;
SELECT ((((((((((vt0.c0)OR(vt0.c0)))AND('1643335914')))OR(vt0.c0)))AND(vt0.c0)))|(CAST(vt0.c0 AS NUMERIC))), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)-(vt0.c0 COLLATE BINARY)), PERCENT_RANK() OVER ( ORDER BY x''  NULLS LAST, 1041151635  NULLS FIRST) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c0)/(x''))) IS FALSE) FROM vt0 GROUP BY ((DATE(vt0.c0, vt0.c0, vt0.c0))>>(((0.5250874325333723) NOT NULL))) HAVING CASE WHEN (((vt0.c0))<((vt0.c0))) THEN '' END; -- 0ms;
SELECT ((vt0.c0)GLOB(LTRIM(vt0.c0))), SUM(MIN(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), vt0.c0 FROM vt0 WHERE ((NOT ('')));SELECT ALL (CAST(vt0.c0 AS NUMERIC) IN ()) FROM vt0 WHERE (((((0.8999497862882854) NOT BETWEEN (-1405442740) AND (0x60d8811d)))LIKE(((1.689083608E9) ISNULL)))); -- 0ms;
SELECT DISTINCT (((LIKELIHOOD(DISTINCT NULL, 0.03268249866326656)))>((CAST(vt0.c0 AS NUMERIC)))) FROM vt0 WHERE (((((0.7485819773737664)>>(NULL)))%(CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT SUM(CASE vt0.c0  WHEN -9.19333052E8 THEN vt0.c0 END), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '0.21939257255660882' WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((vt0.c0 IN (vt0.c0)))), (((('-168390505') NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(IFNULL(DISTINCT vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT LIKELY(0.13044224473886346) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT MAX(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0 WHERE (CAST((NOT (1455180379)) AS NUMERIC)) GROUP BY CAST(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(1691476519)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER) HAVING CASE WHEN (- (vt0.c0)) THEN AVG(vt0.c0) END; -- 0ms;
SELECT CAST(ABS(DISTINCT vt0.c0) AS INTEGER), (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=((CHANGES()))), ((((vt0.c0)&(vt0.c0)))%(((vt0.c0)>>(vt0.c0)))) FROM vt0 WHERE ((((+ ('aP>ï­E7')))LIKE(CASE WHEN 0.518747657835249 THEN 0xffffffff8b1b2ec4 END))); -- 0ms;
SELECT rtreenode(CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((x'7894') BETWEEN (NULL) AND ('0.4373438185762064')) IN ())); -- 0ms;
SELECT vt0.c0 COLLATE RTRIM FROM vt0; -- 0ms;
SELECT (AVG(vt0.c0) IN ()), COUNT('9223372036854775807'), ((((vt0.c0)*('-2071973029')))AND((~ (2139735042)))) FROM vt0 WHERE (NULLIF(DISTINCT rtreenode(433245693, 0x61b66153), highlight('', NULL, '', x'9da0cc32'))) ORDER BY TRIM((vt0.c0 IN ())) ASC;SELECT ((TOTAL(vt0.c0))IS NOT(CAST(vt0.c0 AS TEXT))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) FROM vt0 WHERE (('' COLLATE BINARY IN (((0.9187929404221058)!=(x''))))) GROUP BY CAST(vt0.c0 AS REAL) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE ((+ (((1.514437809E9)OR(x''))))); -- 0ms;
SELECT ALL (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((((-1315374556, 0.1294017879360303, x'')) BETWEEN (('1955423924', NULL, '')) AND ((x'7573cd72', x'2abb', '-1272016385'))) COLLATE BINARY) GROUP BY ((((CAST(vt0.c0 AS INTEGER))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((vt0.c0) BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) ISNULL))), (((+ (vt0.c0)))>>((vt0.c0 IN ()))) HAVING LIKELIHOOD(DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.7418718076847117); -- 0ms;
SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY, AVG(((vt0.c0) IS FALSE)), LIKE(-156641601, vt0.c0, '-'), NTILE(0xffffffff9121edc3 COLLATE RTRIM COLLATE RTRIM) OVER (), 9.02573335E8 FROM vt0 WHERE (STRFTIME((0.18206505380415927 IN ()), (('FALSE') IS TRUE), UNLIKELY(x''), CASE WHEN NULL THEN '-125886777' ELSE 0.2312520034115635 END, (+ (NULL))));SELECT DISTINCT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))=((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) FROM vt0 WHERE ((((~ (0.7104323216380993)))!=('' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((~ (vt0.c0)))*((x'' IN ()))) FROM vt0 WHERE ((('')%(((((((((0Xfffffffff2669112)OR(x'')))OR(NULL)))AND(0.2588558808006819)))OR(''))))); -- 0ms;
SELECT CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM END FROM vt0; -- 0ms;
SELECT ALL NULLIF(DISTINCT CAST(vt0.c0 AS INTEGER), ((vt0.c0) IS TRUE)) FROM vt0 WHERE (((CAST('].' AS BLOB))=(((((NULL)OR('')))OR(x''))))); -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)GLOB(vt0.c0)) FROM vt0; -- 0ms;
SELECT ((((((vt0.c0)OR(0x6ec4c3aa)))OR(vt0.c0)))IS NOT(json_object(vt0.c0, vt0.c0, vt0.c0, NULL))), CAST('1425559374' AS INTEGER), (((((vt0.c0, '0.0', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))))IS((vt0.c0 IN ()))) FROM vt0;SELECT (((vt0.c0)) BETWEEN ((((((((((x'2fee')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) NOTNULL)))), GROUP_CONCAT((- (vt0.c0))), AVG((((vt0.c0))>=((vt0.c0))) COLLATE NOCASE) FILTER(WHERE ((vt0.c0)|(((vt0.c0)<(vt0.c0))))) OVER () FROM vt0 WHERE (LENGTH(((0.021530297453383862) BETWEEN ('-1313949824') AND ('')))); -- 0ms;
SELECT DISTINCT COUNT(COUNT(*)) FROM vt0 GROUP BY ((vt0.c0)<(0.8132442516789419)) COLLATE NOCASE COLLATE NOCASE HAVING (((((- (vt0.c0)))AND(LIKELY(DISTINCT vt0.c0))))OR(x''));SELECT DISTINCT LIKELIHOOD(DISTINCT ((vt0.c0)>(vt0.c0)), 0.10849492067855737), ((((((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)&(vt0.c0)))))AND(COUNT(vt0.c0))))OR((- (vt0.c0)))), CASE ((x'') NOTNULL)  WHEN TOTAL(vt0.c0) THEN (vt0.c0 IN (vt0.c0)) ELSE '0.023611136021042145' END FROM vt0 LIMIT -841266089; -- 0ms;
SELECT ALL NULL FROM vt0 WHERE ((((((x'' IN ()))AND(((NULL) NOT BETWEEN (x'') AND (NULL)))))AND(('\n^' IN ())))); -- 0ms;
SELECT DISTINCT 1000201781 FROM vt0 LIMIT 637875051; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((MAX(vt0.c0)) NOTNULL), (('-119065215')<=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), vt0.c0 FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))/((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), ((vt0.c0)*(vt0.c0 COLLATE RTRIM)) ASC; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE)) NOT NULL), (- (((vt0.c0)GLOB('')))), 0.1853714495046761, ((x'' IN ()) IN ()), (((+ (vt0.c0)))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 NOT INDEXED WHERE (((((((((((NULL)AND(x'')))OR('.')))AND(x'')))OR(x'3400')))-(TRIM(NULL)))); -- 0ms;
SELECT ALL (('1314962480')<(vt0.c0)) FROM vt0 WHERE (((((((0.3226310611472498)OR('-382103315')))AND(x'c169'))) IS TRUE)); -- 0ms;
SELECT ALL (((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (LIKE(vt0.c0, vt0.c0)) AND (('Fè¶4xOç³U' IN ()))) FROM vt0 WHERE ((((((0.8402767908228346))>((x'')))) NOT BETWEEN ((('i2')*(396471567))) AND (1.859504853E9))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) IS TRUE))) FROM vt0 WHERE ((((0.642352094325665)) NOT BETWEEN (((+ (0.6835320050300194)))) AND ((((NULL) BETWEEN (NULL) AND ('eAv+B#n')))))); -- 0ms;
SELECT ALL (NOT (CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE (UPPER('1274254070')); -- 0ms;
SELECT CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1082208467')) THEN AVG(vt0.c0) WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN TOTAL(vt0.c0) END FROM vt0 LIMIT 19902494 OFFSET 343098874; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0)) FROM vt0 WHERE ((~ (((0x32df0245) ISNULL)))) LIMIT -1224871371; -- 0ms;
SELECT ALL CASE (((vt0.c0))<=((vt0.c0)))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN x'7a8b' END FROM vt0; -- 0ms;
SELECT DISTINCT (json_array_length(vt0.c0) IN ()), (((((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((vt0.c0)<=(vt0.c0)))))AND((~ (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR((NOT (vt0.c0)))))OR('dk')))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), vt0.c0 FROM vt0 WHERE (0.15869789899118225); -- 1ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1814644554'))), ((((vt0.c0)AND(NULL)))AND(vt0.c0)), LIKELY(DISTINCT 'YZSl7wV\r'))) AND ((((vt0.c0)*(vt0.c0)), ABS(x'7000'), vt0.c0 COLLATE RTRIM))) FROM vt0 WHERE ((~ (CAST('dk' AS TEXT)))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(CAST(vt0.c0 AS TEXT))) DESC; -- 0ms;
SELECT DISTINCT vt0.c0, (PRINTF('1815561265', vt0.c0, 'ç¨¼W*%w', 'we+Y', vt0.c0) IN ()), json_array_length(CASE 0Xffffffff9da8bae3  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)|(vt0.c0))) FROM vt0 WHERE ((((('-905518583') NOTNULL)) NOT BETWEEN (((('>è­', '-1087841790', '')) NOT BETWEEN ((0xffffffffac000bed, 0.9837835310826774, NULL)) AND (('1689083608', '-592973798', x'')))) AND (NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL '<,ì½{åns' FROM vt0 WHERE ((((CASE WHEN 0Xffffffffacce22a1 THEN 0.7344228000183598 END, (('y5')*(x'8eed')), CASE WHEN NULL THEN '-1707322622' WHEN 0.692777764742203 THEN NULL WHEN x'' THEN NULL END, CASE WHEN x'' THEN '' END, CAST('688862041' AS INTEGER)))==((CASE WHEN '1836503132' THEN 0.26714010950516476 ELSE '19902494' END, CASE WHEN x'd9fc' THEN '-308741243' END, (('')|(x'8eb1777c')), CAST('F0\r' AS NUMERIC), 0.26204945337757235 COLLATE NOCASE)))); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM)>(((vt0.c0)<=(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL CAST((- (vt0.c0)) AS BLOB) FROM vt0 WHERE (CASE WHEN ((x'381b')LIKE(x'')) THEN ((' å»¿0TT*ä') NOT BETWEEN (x'') AND (NULL)) WHEN ('-941473530' IN ()) THEN 0.7276039809960045 WHEN ((-522580955)IS('738296410')) THEN SQLITE_SOURCE_ID() END); -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE (CASE WHEN IFNULL(DISTINCT NULL, 0.435808580994571) THEN (('	')<(0.39279414368918364)) ELSE (NULL IN ()) END); -- 0ms;
SELECT TOTAL(IFNULL(vt0.c0, vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL TOTAL(((vt0.c0)GLOB(vt0.c0))) FROM vt0 WHERE ((- ((- (x'c6862054'))))); -- 0ms;
SELECT DISTINCT json_insert(CAST(vt0.c0 AS BLOB), ((vt0.c0) IS FALSE), ((vt0.c0)OR(vt0.c0))) FROM vt0;SELECT DISTINCT CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(x'')) THEN ((vt0.c0)AND(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) WHEN SUM(vt0.c0) THEN 0Xffffffffa0be4b87 END, ((vt0.c0)&(vt0.c0)) COLLATE RTRIM, (((NOT (vt0.c0))) BETWEEN (0.5519682152727793) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((NULL)+(vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(HEX(DISTINCT 819170561))))AND((vt0.c0 IN ()))))OR(('' IN ()))))AND('-2060938291')))OR(COUNT(*))))AND(COUNT(*))) FROM vt0; -- 0ms;
SELECT CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL COUNT(642406952) OVER (), AVG(''), (((vt0.c0 IN (0.783021642055178))) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (NULL)) FROM vt0 WHERE (((GLOB(2.60383119E8, 0.6477608572656816)) NOT BETWEEN ((('Sä°»o-') BETWEEN ('-743629266') AND (0.6320018752086789))) AND (((',')LIKE(0.15799770710279992))))); -- 0ms;
SELECT CASE x''  WHEN ((vt0.c0)+(vt0.c0)) THEN ((((((((1.456622529E9)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (NOT (x'')) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOTNULL) ELSE 0X74428a50 END FROM vt0 WHERE (((CASE WHEN x'' THEN 0Xffffffffcc8e44ac ELSE 'C8]â¥æ²°8n' END)-(CASE WHEN '-1958069959' THEN NULL ELSE 0.6170698776828702 END))); -- 1ms;
SELECT ALL (((COUNT(*)))<=((x''))) FROM vt0; -- 0ms;
SELECT CAST(((vt0.c0)&(vt0.c0)) AS BLOB) FROM vt0 LIMIT 902573335; -- 0ms;
SELECT ((((CASE WHEN '0.27247803253371283' THEN 'Oç ¦Xo3D{WB' END)OR(vt0.c0)))OR(((vt0.c0) ISNULL))) FROM vt0 WHERE (CASE WHEN (- (0.9911345803439712)) THEN CAST(x'' AS BLOB) WHEN (~ ('-905518583')) THEN '-143298082' COLLATE RTRIM WHEN '' COLLATE NOCASE THEN ((x'6000') NOTNULL) ELSE CASE x''  WHEN NULL THEN x'7730f357' END END) GROUP BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (0.91945688613778) AND (vt0.c0))) AND (((0.5947732419273888)%(vt0.c0)))) HAVING ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)IS NOT(vt0.c0)))); -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) IS FALSE) FROM vt0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END, IFNULL(vt0.c0, vt0.c0), vt0.c0, (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, NULL))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=((CAST(vt0.c0 AS INTEGER), ((vt0.c0)*(vt0.c0)), x'', vt0.c0, CAST(vt0.c0 AS INTEGER)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT LEAD(vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), (- (TRIM(vt0.c0, NULL)))) OVER () FROM vt0 WHERE (CAST(NULL COLLATE RTRIM AS INTEGER)); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) ISNULL)) OVER () FROM vt0 WHERE ('446009569'); -- 0ms;
SELECT DISTINCT ((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.7888125730587068) AND (NULL)) FROM vt0 LIMIT -1707322622; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (x'6efc') LIMIT -2047272208; -- 1ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0) AND (((vt0.c0)<<(vt0.c0)))) FROM vt0 WHERE (((((x'8b5c')) NOT BETWEEN ((x'')) AND ((1812257892))) IN ())); -- 0ms;
SELECT vt0.c0, (+ (vt0.c0)), ((vt0.c0 COLLATE NOCASE)<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CASE WHEN ((((0x1c009de9)OR('-497494324')))AND('-2039734395')) THEN CASE x''  WHEN NULL THEN NULL WHEN '821030949' THEN NULL WHEN 0.5600084278824083 THEN -13272258 ELSE x'' END ELSE (('')/(NULL)) END); -- 0ms;
SELECT DISTINCT (((((vt0.c0)AND(-99240576)))AND(vt0.c0)) IN ()), vt0.c0, vt0.c0 FROM vt0; -- 0ms;
SELECT (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) FROM vt0 WHERE ((+ (((NULL)!=(x''))))) GROUP BY CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) END HAVING (NOT (vt0.c0)) COLLATE RTRIM; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM ASC; -- 1ms;
SELECT (((((('-1096702220') NOTNULL))AND(CAST(vt0.c0 AS INTEGER))))OR(LIKELY(vt0.c0))) FROM vt0 WHERE (((((CAST(x'd2ee' AS INTEGER))AND(((('ê¼c', 0.7775635177109985, 0x7fe77a84, '231425830', 2137865126)) NOT BETWEEN ((0.6978290427798209, 'à¢¡l', 3.42356778E8, x'', NULL)) AND ((x'f69d', 346061767, 0.27225882356151854, '+[', 0.6834933180645005))))))OR((+ (0.6096273442995054))))); -- 0ms;
SELECT ALL CAST(TOTAL(vt0.c0) AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0) ISNULL) IN (MIN(vt0.c0))) FROM vt0; -- 1ms;
SELECT DISTINCT COUNT(0.5929213102689107 COLLATE NOCASE) FROM vt0 WHERE ((((x'') NOT NULL) IN (CAST(NULL AS BLOB), CASE 2.049176204E9  WHEN 1.557433152E9 THEN 0.35783715266780847 WHEN NULL THEN x'' WHEN NULL THEN -605056909 ELSE '-2135653578' END))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC), COUNT(vt0.c0) OVER (), ((vt0.c0)<=(COUNT(0x7b4c15a6))), (~ (AVG(vt0.c0))), (((vt0.c0)) BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((((vt0.c0)AND(vt0.c0))))) FROM vt0; -- 0ms;
SELECT CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END FROM vt0 WHERE (((((((0.7175459253222478) NOT BETWEEN (0X61b66153) AND ('')))OR((((('')OR(0.3955003614259437)))OR('-2135653578')))))OR(json_quote('[y')))); -- 0ms;
SELECT DISTINCT LOWER(0.9072980475645592) FROM vt0 ORDER BY vt0.c0  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((INSTR(vt0.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ('-86321769')), LAST_VALUE((UPPER(vt0.c0) IN ())) OVER (), ((((vt0.c0) BETWEEN ('j\n^E') AND (vt0.c0)))-(x'')) FROM vt0 WHERE (x''); -- 1ms;
SELECT ALL (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)OR(vt0.c0)))) AND ((vt0.c0, x'', IFNULL(vt0.c0, vt0.c0)))) FROM vt0 WHERE (LIKELY((NULL IN ()))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (json_remove(CAST(0.9819037177969283 AS BLOB), ((0x2b4986a5)||(x''))));SELECT (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))), LAST_VALUE(vt0.c0) OVER (), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL) FROM vt0 WHERE ((NOT ('0.9179634848292552'))); -- 0ms;
SELECT CAST(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((((HEX(DISTINCT 0X2501aa2e))AND((((NULL, x'', x''))=((x'ecd6', 0.9435675951401935, NULL))))))AND(CAST(x'fc0f' AS BLOB)))) GROUP BY (((((vt0.c0)=(vt0.c0)), ((vt0.c0) NOT NULL), (vt0.c0 IN ())))<((UNLIKELY(NULL), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0))), ((((((((HEX(vt0.c0))AND(vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (NULL IN (RTRIM(vt0.c0))) HAVING (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT ((vt0.c0) ISNULL) FROM vt0; -- 1ms;
SELECT ALL ((((((((CASE vt0.c0  WHEN vt0.c0 THEN x'6d8c' WHEN NULL THEN NULL WHEN vt0.c0 THEN x'41b35fa4' END)OR(((vt0.c0)|(vt0.c0)))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))AND(vt0.c0)), ((0.8995642975802433 COLLATE RTRIM)<>(((vt0.c0)<=(vt0.c0)))), (('-718060322')IS((NOT (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (~ (vt0.c0 COLLATE BINARY)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM, COUNT(CAST(vt0.c0 AS INTEGER)) OVER (), TRIM(DISTINCT (vt0.c0 IN (vt0.c0))), UPPER(HEX(DISTINCT vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)IS NOT(vt0.c0))))<=(((NOT ('-4'))))), ROW_NUMBER() OVER (), CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) FROM vt0 WHERE (0.4607454281945663); -- 0ms;
SELECT ALL CAST(MAX(vt0.c0) AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN vt0.c0 THEN x'' END), '1362311798', COUNT(RTRIM(vt0.c0)) OVER () FROM vt0; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0; -- 1ms;
SELECT DISTINCT COUNT(((vt0.c0) IS FALSE)) OVER () FROM vt0 WHERE (((('(?' IN ())) BETWEEN (HEX(0.08715249333099573)) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0)|(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 GROUP BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) BETWEEN ('1-500000''h') AND (vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))), (NOT (((((vt0.c0)OR(vt0.c0)))AND(0.30758537671386144)))), (vt0.c0 COLLATE RTRIM IN ()) HAVING '260383119' ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN x'' END)) ASC; -- 0ms;
SELECT DISTINCT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))<((CAST(vt0.c0 AS TEXT)))) FROM vt0; -- 0ms;
SELECT ALL AVG((((vt0.c0))==((vt0.c0)))) FROM vt0 WHERE (((((0.03943108268561257) NOT BETWEEN (x'') AND (x''))) IS FALSE)) LIMIT -762843353; -- 0ms;
SELECT (- (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((((((x'')AND(x'5343')))OR(x'03ab'))) IS TRUE)); -- 0ms;
SELECT DISTINCT (COUNT(vt0.c0) IN ()) FROM vt0 WHERE (((('-1865225120', NULL, x'58a8')) NOT BETWEEN (('-1176048349', 0.1689892522419052, '-1176048349')) AND ((NULL, NULL, 0x1fb4aed5))) COLLATE BINARY); -- 0ms;
SELECT (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0)AND(((vt0.c0) NOTNULL))))OR((vt0.c0 IN ()))), CASE WHEN x'' THEN ((vt0.c0)>=(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN SUM(x'') THEN vt0.c0 COLLATE NOCASE ELSE ((x'65c8')>=(vt0.c0)) END, IFNULL(CAST(vt0.c0 AS TEXT), TRIM(DISTINCT vt0.c0)), x'' FROM vt0 WHERE (('601664960' IN (COALESCE(x'', 0.7402604872778927)))) LIMIT -273952936; -- 0ms;
SELECT DISTINCT (((vt0.c0))<>((vt0.c0))) COLLATE BINARY, '\ri\r&?f', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.7044761801755289)) COLLATE RTRIM FROM vt0 WHERE (((((((0.9365831346783244)AND(x'')))OR(NULL))) NOT BETWEEN ('è¥D' COLLATE NOCASE) AND (((0x57c68a58)==(NULL))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY vt0.c0 DESC  NULLS FIRST), ((vt0.c0 COLLATE RTRIM) IS TRUE), (((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((SUM(vt0.c0)))) FROM vt0 WHERE ((((((((NULL, -243159499, 'Sc<è¿zW')) BETWEEN ((0xffffffffa8ffa50d, x'', x'45f48854')) AND ((0.0, 0.2179644018023117, x''))))AND(((-1559089303)>('-1e500')))))OR(((0.8578430257119009)!=(x''))))); -- 0ms;
SELECT (((NOT (vt0.c0))) IS TRUE) FROM vt0 GROUP BY ((vt0.c0)LIKE(vt0.c0)) COLLATE BINARY, CAST(((((vt0.c0)OR(0.9925468346894011)))AND(vt0.c0)) AS INTEGER), CAST(((((vt0.c0)OR(0X6108c588)))AND(vt0.c0)) AS TEXT); -- 1ms;
SELECT CAST(((vt0.c0)+(vt0.c0)) AS INTEGER) FROM vt0; -- 0ms;
SELECT ((NOT (vt0.c0)) IN ((- (x'80ed')))) FROM vt0 WHERE (((-4.77370984E8 COLLATE BINARY) NOT BETWEEN ('0.8066909825191318' COLLATE BINARY) AND ((((((((('-693033724')OR(0.59575175101663)))OR('902573335')))AND(-1.961152828E9)))OR(x''))))); -- 0ms;
SELECT ALL ((TYPEOF(vt0.c0)) NOT NULL), (((~ (vt0.c0)))<<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), vt0.c0 FROM vt0 WHERE ((((x'')) NOT BETWEEN ((((NULL)||(NULL)))) AND (((NULL IN ()))))); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))), AVG((+ (vt0.c0))), '376921207' FROM vt0 GROUP BY CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) END, ((((vt0.c0) NOTNULL)) IS TRUE), (- (0x7597f9b)), CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE, ((NULL)*(LIKELIHOOD(DISTINCT vt0.c0, 0.9414375979074954))) HAVING (NOT (((vt0.c0)<(vt0.c0)))) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST;SELECT ALL (((vt0.c0 IN ()))>=(((vt0.c0)OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))))))OR((+ ('-1005650006')))))AND(((0.8233546184462943)LIKE(vt0.c0)))), (((+ (vt0.c0))) IS TRUE), (((vt0.c0)) BETWEEN (((((vt0.c0))==((vt0.c0))))) AND ((NULLIF(DISTINCT vt0.c0, x'd822')))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (((((((((CAST(0.04583728490609429 AS TEXT))OR('-733737768' COLLATE BINARY)))OR(((2.59693633E8)|(NULL)))))OR(((('1600711053', x'', x''))<>((0.38811215664086895, -1.176048349E9, '-229290392'))))))AND(((((x'6689ccf9')AND(0.48978821848330145)))AND('0.0'))))) GROUP BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM COLLATE NOCASE HAVING ((vt0.c0 COLLATE NOCASE)IS(0xffffffffdfc2657f)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL)) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (((((0.4103789242927205)GLOB('0.837005955588533')))||(HEX(x'')))); -- 0ms;
