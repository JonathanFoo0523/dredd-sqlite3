-- Time: 2024/06/07 22:21:02
-- Database: database30
-- Database version: 3.40.0
-- seed value: 1037448330
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 0ms;
PRAGMA mmap_size; -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=-1188225893; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE (- (json_array_length(t0.c0, t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE (((MAX(t0.c0, t0.c0, t0.c0, t0.c0)))<=((((0.9441369413590618) NOT BETWEEN (t0.c0) AND (t0.c0))))); -- 4ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET c0=-644686791; -- 1ms;
UPDATE t0 SET (c0)=(x'') WHERE (NOT (t0.c0 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=1809662577, c0=0.1435818359350971, c0='2126840877'; -- 0ms;
ALTER TABLE t0 ADD COLUMN c44 INTEGER; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
INSERT OR IGNORE INTO t0(c44) VALUES ('0.1435818359350971'); -- 0ms;
REINDEX  t0; -- 1ms;
CREATE UNIQUE INDEX i99 ON t0(c44,'6') WHERE (((c0 IN ())) BETWEEN (((c0)>(c44))) AND (((((c0)OR(c0)))AND(c44)))); -- 0ms;
CREATE UNIQUE INDEX i48 ON t0(ABS(c44) COLLATE RTRIM,((((c0)/(c0))) NOTNULL) COLLATE RTRIM ASC) WHERE DATE(CAST(c44 AS BLOB), ((c0)|(c44)), 0.35094417240777687, (NOT (c44)), ((')1뉳')==(c44))); -- 0ms;
PRAGMA journal_size_limit = -7705808516269922355; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE ((((t0.c0) NOT NULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1485319451, x''); -- 0ms;
INSERT OR REPLACE INTO t0(c44, c0) VALUES ('Gwc&e', ')%뉳'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), (0.6824909356779036), (x''); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c28; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
INSERT OR IGNORE INTO t0(c44, c0) VALUES (((('-1006732760')) BETWEEN ((NULL)) AND (('!7g᬴cD'))) COLLATE BINARY, NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'', ''), ('Ji', NULL), (0.5526651337115128, x''); -- 1ms;
INSERT OR ABORT INTO t0 VALUES (x'7bf6', x'01f3'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR IGNORE INTO t0(c44) VALUES (-629313659), (''), (0.7212260848924056); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=NULL; -- 0ms;
ANALYZE t0; -- 1ms;
INSERT OR REPLACE INTO t0 VALUES (NULL, '-1247866959'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'', 0.4792770131064883); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
PRAGMA cache_spill = 8344502202520382899; -- 0ms;
PRAGMA temp.cache_spill = -1490825424807612478; -- 0ms;
UPDATE OR IGNORE t0 SET c44=x'' WHERE ((t0.c0) BETWEEN (t0.c44) AND (t0.c44)) COLLATE BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0(c44) VALUES (NULL), (NULL), (''); -- 1ms;
PRAGMA main.reverse_unordered_selects; -- 1ms;
UPDATE t0 SET c44=0xffffffff969c1b34, c44=597242376; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c44, c0) VALUES ('J稨&TLl', NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c44) VALUES (1.485319451E9), (NULL), (''); -- 0ms;
UPDATE t0 SET c0='BZQP*-bV' WHERE ((CAST(t0.c44 AS BLOB))AND(LAST_INSERT_ROWID())); -- 0ms;
UPDATE t0 SET c44='-385921051', c44=1185659696, c44='Gwc&e'; -- 0ms;
INSERT OR IGNORE INTO t0(c44) VALUES (0xffffffffec04ca8a); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE t0 SET c0='0.6824909356779036', c44=x'95c4', c0='735053287' WHERE '0.4792770131064883'; -- 1ms;
PRAGMA temp.legacy_file_format; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c44, c44)=(0.38793818319606566, '-1202987217') WHERE ((t0.c44) NOTNULL) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO t0(c44) VALUES (0.5491865119048024); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL, '2묰[oz'); -- 0ms;
CREATE INDEX IF NOT EXISTS i86 ON t0(CAST((((c0)) NOT BETWEEN ((c0)) AND ((c44))) AS INTEGER) COLLATE NOCASE,((((c44)*(c44))) IS FALSE) COLLATE BINARY DESC); -- 1ms;
UPDATE OR ROLLBACK t0 SET (c0)=(0Xffffffffd14c6c88) WHERE CAST(((((0.0783747798722173)AND(t0.c0)))AND(t0.c0)) AS BLOB); -- 0ms;
INSERT OR ABORT INTO t0(c44) VALUES ('-629313659'), (7.35053287E8), ('\nx'); -- 0ms;
CREATE UNIQUE INDEX i9 ON t0(NULL,c0 COLLATE NOCASE); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR REPLACE t0 SET c44=NULL; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c44 TO c99; -- 0ms;
ANALYZE; -- 1ms;
UPDATE t0 SET (c99)=(x'') WHERE t0.c0 COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET (c99)=(-1373960096) WHERE CAST(t0.c99 AS TEXT); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 AFTER DELETE ON t0 FOR EACH ROW  BEGIN SELECT RAISE(IGNORE);END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c94; -- 0ms;
CREATE TABLE IF NOT EXISTS t1 (c0 TEXT , c1 REAL , c2 REAL UNIQUE ); -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (x'', x'', NULL); -- 1ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c94, c94, c94)=(0.7374515299291491, x'a32e', 'aq'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
ANALYZE; -- 1ms;
ALTER TABLE t0 ADD COLUMN c62 TEXT; -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (7.35053287E8, x'3065', -1247866959); -- 1ms;
INSERT OR ABORT INTO t0(c62, c99) VALUES (NULL, NULL), ((NOT ((((((((('1338045968')AND(NULL)))OR(x'72c8')))OR('UAwPK\r')))OR(0.33024218781622805)))), x''), (0.30597887085554976, x'8c6378fd'); -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(((5.97242376E8)>=(x''))), (((((t0.c0, t0.c62, t0.c62)) BETWEEN ((t0.c62, t0.c99, t0.c0)) AND ((t0.c99, t0.c0, t0.c0))))<((t0.c0 IN ()))), '', ((t0.c62) BETWEEN (((t0.c62) NOTNULL)) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c99 END)), t0.c62 FROM t0; -- 0ms;
SELECT (((t0.c99, t0.c62, t0.c99)) NOT BETWEEN (((('0.5491865119048024')>>(t0.c99)), CASE WHEN t0.c0 THEN -629313659 ELSE t0.c62 END, CAST(t0.c62 AS REAL))) AND ((((t0.c62)>(t0.c99)), ((t0.c99)AND(t0.c62)), ((t0.c99) IS TRUE)))) FROM t0 WHERE ((CASE WHEN 'HfH*m' THEN x'' ELSE -3.35230326E8 END IN ((('512462782') NOT BETWEEN ('2828667958649118890') AND ('!)oiC稨'))))); -- 0ms;
SELECT ALL (((CAST(t0.c99 AS REAL)))!=(((t0.c99 IN ())))) FROM t0 LIMIT -1373960096; -- 1ms;
SELECT ((((- (t0.c99))))=((t0.c62 COLLATE NOCASE))) FROM t0 WHERE (x''); -- 0ms;
SELECT CAST((t0.c62 IN ()) AS INTEGER) FROM t0 WHERE (CAST(1398062173 COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT ALL t0.c99 FROM t0; -- 0ms;
SELECT ALL COUNT(CASE t0.c99  WHEN t0.c99 THEN t0.c99 END) FILTER(WHERE ((((CAST(t0.c0 AS INTEGER))AND(2.126840877E9)))OR(((((t0.c99)AND(t0.c62)))AND(t0.c99))))) OVER ( GROUPS ((t0.c0)<<('-500623282')) PRECEDING) FROM t0 WHERE ((NOT (((-7.83520632E8)GLOB('')))));SELECT DISTINCT t0.c99 FROM t0 GROUP BY ((((t0.c62)<=(t0.c62)))LIKE((((t0.c62)) BETWEEN (('0.35094417240777687')) AND ((''))))) HAVING ((t0.c99 IN ()) IN ()); -- 0ms;
SELECT COUNT((t0.c99 IN ())) FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(t0.c62 AS INTEGER))) AND ((((((t0.c99)AND(t0.c99)))AND(t0.c0)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((UNLIKELY(t0.c99)))>=((t0.c62))), CAST(t0.c0 AS NUMERIC), json(MAX(t0.c99)) FROM t0 GROUP BY (t0.c99 COLLATE BINARY IN ()), UPPER(((t0.c62) NOTNULL)), 0.7440028992686051 ORDER BY ((((t0.c62)GLOB(t0.c62))) IS TRUE) LIMIT -466372767;SELECT CAST(CASE WHEN t0.c62 THEN t0.c99 END AS TEXT) FROM t0 LIMIT -1188225893; -- 0ms;
SELECT ((((((((t0.c99 COLLATE NOCASE)AND(CAST(t0.c99 AS REAL))))AND(CASE WHEN t0.c62 THEN t0.c0 END)))OR(((t0.c62) BETWEEN (t0.c0) AND (t0.c99)))))OR((t0.c62 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c99 AS BLOB)) BETWEEN (((((((((t0.c99)AND(t0.c99)))OR(t0.c0)))OR(NULL)))OR('1314761398'))) AND (((t0.c99)<>(t0.c0)))) FROM t0 WHERE (LIKELY(-152584747 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((((((((LOWER(DISTINCT t0.c0))OR(CASE t0.c62  WHEN t0.c99 THEN t0.c62 WHEN t0.c0 THEN t0.c62 WHEN t0.c0 THEN t0.c62 END)))AND((t0.c0 IN ()))))AND((((t0.c0))>((t0.c62))))))AND(((t0.c0)<=(t0.c0)))), SUM(((t0.c62)|(t0.c99)) COLLATE NOCASE) OVER () FROM t0; -- 0ms;
SELECT CASE WHEN (t0.c0 IN ()) THEN t0.c0 COLLATE BINARY ELSE (((t0.c0, t0.c99, t0.c0)) BETWEEN ((t0.c0, t0.c62, t0.c99)) AND ((t0.c62, t0.c0, t0.c0))) END FROM t0 WHERE ((((((((('1983318846')AND(((x'e3a7')GLOB('')))))OR(((NULL) BETWEEN (0Xffffffffa52dbf92) AND (x'abd6')))))AND(((',\r')>>(-1631316053)))))AND((+ (''))))) GROUP BY t0.c62 COLLATE BINARY HAVING NULL LIMIT -1034458283; -- 1ms;
SELECT t0.c99 FROM t0 ORDER BY CAST(((t0.c62)<>(t0.c99)) AS INTEGER)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(t0.c62 AS REAL) COLLATE BINARY FROM t0; -- 0ms;
SELECT ALL ((((t0.c99)>=('-629313659'))) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c99 AS REAL))*((((t0.c99))=((t0.c62))))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) NOT BETWEEN ((((t0.c62))=((t0.c99)))) AND (CASE t0.c0  WHEN t0.c99 THEN t0.c0 ELSE t0.c62 END)) FROM t0 WHERE ((((((0.47937912929908155, x'66b5', '?gad'))>(('-152584747', x'', NULL)))) NOTNULL)) LIMIT -1006732760; -- 0ms;
SELECT DISTINCT AVG(((t0.c62)>>('1314761398'))) FROM t0; -- 0ms;
SELECT ALL CASE WHEN ((((t0.c99)OR(t0.c62)))OR(t0.c99)) THEN (NOT (t0.c99)) WHEN ((t0.c62) IS TRUE) THEN STRFTIME('A&U6', t0.c0, t0.c0, t0.c62, t0.c62) WHEN CAST(t0.c99 AS REAL) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('150115685')) ELSE CAST(t0.c62 AS REAL) END, CAST(((t0.c62) NOT BETWEEN (t0.c0) AND (t0.c99)) AS BLOB), CAST(ABS(DISTINCT t0.c99) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN '-385921051' THEN x'99dc' WHEN t0.c0 THEN t0.c99 WHEN t0.c0 THEN t0.c99 ELSE t0.c62 END)IS(CASE t0.c0  WHEN t0.c0 THEN t0.c62 ELSE t0.c99 END)) FROM t0 WHERE ((NOT (((((((((NULL)AND(0.5659100215891611)))OR(x'19ab')))OR(2028002255)))OR(NULL))))); -- 0ms;
SELECT (((t0.c99) BETWEEN (t0.c62) AND (NULL)) IN ((((NULL)) BETWEEN ((t0.c99)) AND ((t0.c99))))) FROM t0 WHERE (CAST(CASE WHEN '-1768154316' THEN '1485319451' WHEN 0x42c2728e THEN 2026889060 WHEN NULL THEN 0Xffffffffc2576b55 END AS INTEGER)) ORDER BY (~ (CASE t0.c0  WHEN t0.c99 THEN t0.c0 WHEN t0.c99 THEN t0.c62 WHEN t0.c99 THEN t0.c99 END)) ASC  NULLS LAST, ((((t0.c0)<>(NULL))) ISNULL); -- 3ms;
SELECT DISTINCT (~ (((t0.c0)+(t0.c0)))) FROM t0 WHERE (((UNLIKELY(DISTINCT 'tjK')) NOT BETWEEN (((1.485319451E9) NOT NULL)) AND (CAST(x'' AS INTEGER)))); -- 0ms;
SELECT DISTINCT CAST(((t0.c62)GLOB(t0.c62)) AS TEXT) FROM t0 WHERE (((CAST('tB' AS TEXT)) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((((((t0.c62)OR(t0.c0)))OR(t0.c62)))AND(t0.c62)))AND(t0.c99)) IN ()) FROM t0; -- 0ms;
SELECT ALL ((((CAST(t0.c99 AS TEXT))AND(((t0.c0) ISNULL))))OR(ABS(t0.c62))), (((t0.c0, x'', t0.c62))<=((0.38408027534647404, t0.c62, t0.c62))) COLLATE BINARY, ((((t0.c99) NOT NULL)) IS FALSE) FROM t0 WHERE (0X6491502d); -- 0ms;
SELECT ALL (((((((((((((((0.06693214307745665)OR(t0.c62)))AND(0.9051344478675435)))OR(t0.c62)))OR(t0.c0)))AND(t0.c62)))AND('0.5491865119048024'))))>=((((t0.c99)<=(t0.c62))))) FROM t0 WHERE (((((((((((x'')OR(1508122873)))AND(NULL)))OR(NULL)))AND(0.134440752288282))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((t0.c62)GLOB(t0.c99)) IN ((((t0.c0))!=((t0.c62))), ((((((((t0.c0)OR(t0.c99)))OR(NULL)))OR(t0.c99)))OR(t0.c62)))) FROM t0 GROUP BY (- (CASE t0.c0  WHEN t0.c99 THEN t0.c0 ELSE t0.c99 END)) HAVING ((((0.3785576004805047))>=((t0.c99))) IN ()) LIMIT -9223372036854775808 OFFSET -1734591742; -- 0ms;
SELECT DISTINCT t0.c99 FROM t0 WHERE (((CAST(0X58882d1b AS BLOB))<=(2.126840877E9))); -- 0ms;
SELECT ALL ROUND(((t0.c0)OR(t0.c62)), CASE WHEN t0.c99 THEN x'' WHEN t0.c62 THEN t0.c99 WHEN t0.c99 THEN t0.c62 END) FROM t0 WHERE (('' COLLATE BINARY IN ())); -- 0ms;
SELECT ALL RANK() OVER (), '-756167284', (((('681163510')AND(((t0.c62) IS TRUE))))OR(((t0.c0)GLOB(t0.c99)))) FROM t0; -- 0ms;
SELECT t0.c62 FROM t0; -- 0ms;
SELECT ALL CASE WHEN CAST(t0.c0 AS NUMERIC) THEN (('') IS TRUE) WHEN (~ (t0.c0)) THEN CASE WHEN t0.c99 THEN t0.c0 END WHEN ((t0.c99) NOT NULL) THEN (+ (t0.c62)) WHEN ((t0.c99) BETWEEN (t0.c0) AND (t0.c99)) THEN ((t0.c99) BETWEEN (NULL) AND (t0.c99)) WHEN ((t0.c62)IS NOT(t0.c99)) THEN ((t0.c99)|(t0.c0)) ELSE CASE t0.c62  WHEN t0.c99 THEN t0.c0 ELSE t0.c62 END END FROM t0 WHERE (((((NULL)==(x'3521')))/((('?4') NOT BETWEEN (-445200450) AND ('tB'))))); -- 0ms;
SELECT ALL (- (t0.c0 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c62 THEN t0.c62 WHEN t0.c62 THEN t0.c62 END COLLATE NOCASE FROM t0 WHERE (CASE 'i)s뉳(Vq'  WHEN (((0.9905833304392485, x'd2d48ef1', NULL))<>(('-1571518977', 0.43642008354338513, 0.3712149089215898))) THEN MAX(0.7963815715110446, '817144178') END); -- 0ms;
SELECT DISTINCT FIRST_VALUE((((((t0.c99)) BETWEEN ((t0.c62)) AND ((t0.c99)))) NOTNULL)) OVER () FROM t0 WHERE (DATE(((NULL) IS FALSE), ((NULL)>(1.338045968E9)), (('bzqp*-bv') NOT NULL))) LIMIT 1722808898 OFFSET -466372767; -- 1ms;
SELECT ALL (((0X5126a1b2)) BETWEEN ((0.804181303264622)) AND ((CASE WHEN t0.c62 THEN t0.c62 END))) FROM t0 WHERE (NULLIF(CASE WHEN x'' THEN ',{r*[XD%ឫ' ELSE 'e\' END, LIKELY(DISTINCT 0xffffffffb84bdf2f))) ORDER BY '-500623282'; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((NULL) BETWEEN (t0.c0) AND (t0.c62))) BETWEEN ((t0.c99 IN ())) AND (CAST(t0.c0 AS INTEGER))), TIME((~ (t0.c62)), SQLITE_COMPILEOPTION_GET(x''), LIKE(0.3027006504842108, t0.c0), TRIM(t0.c0, t0.c62), (~ (t0.c62))), (((t0.c62) IS FALSE) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT CASE ((((t0.c62)AND(t0.c0)))AND(t0.c99))  WHEN (- (t0.c0)) THEN ((((((((t0.c62)OR(t0.c0)))OR(t0.c62)))OR(t0.c62)))OR(t0.c99)) WHEN ((t0.c0)<(t0.c0)) THEN (t0.c62 IN (t0.c62, t0.c99)) WHEN CASE WHEN t0.c0 THEN t0.c99 WHEN 0.19006751593228455 THEN t0.c62 WHEN t0.c0 THEN 0.30597887085554976 END THEN (((t0.c99))<=(('242866231'))) END FROM t0 WHERE (UNLIKELY((((NULL)) NOT BETWEEN ((-500623282)) AND ((1.485319451E9))))); -- 0ms;
SELECT ALL (((~ (t0.c62)))/(t0.c0)) FROM t0 WHERE ((((('-1566243517') IS TRUE)) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((t0.c99) IS FALSE))AND((((t0.c62)) NOT BETWEEN (('-1204432561')) AND ((t0.c62))))))AND(((t0.c62)<<(t0.c99)))) FROM t0; -- 0ms;
SELECT t0.c0 FROM t0 WHERE (CAST((('k	j<^')<=(210875835)) AS INTEGER)); -- 0ms;
SELECT DISTINCT CAST(t0.c62 AS TEXT) COLLATE RTRIM FROM t0 GROUP BY '' HAVING ((((((((CASE t0.c99  WHEN t0.c0 THEN t0.c62 END)AND(CASE WHEN t0.c99 THEN t0.c0 END)))AND((((t0.c99, t0.c99, t0.c99)) BETWEEN ((t0.c99, t0.c99, t0.c0)) AND ((0.28747945787331286, t0.c99, t0.c99))))))AND(CASE WHEN t0.c99 THEN t0.c62 WHEN t0.c0 THEN t0.c0 WHEN 6.40856691E8 THEN t0.c0 ELSE t0.c0 END)))OR((((t0.c62))!=((t0.c0))))) ORDER BY NULL DESC; -- 0ms;
SELECT NULL, SUM(((590828083) IS FALSE)), CASE WHEN ('212455335' IN ()) THEN t0.c62 ELSE GROUP_CONCAT(t0.c0) END FROM t0 ORDER BY (NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND (('-1188225893')))))  NULLS LAST, (((t0.c62)) BETWEEN ((t0.c0)) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c99)))))  NULLS FIRST; -- 0ms;
SELECT ALL ((t0.c99) NOT BETWEEN (t0.c62) AND (t0.c0)) COLLATE NOCASE, 1548615121 COLLATE BINARY, (((t0.c99)IS NOT(t0.c99)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (+ (((NULL)<('2028002255')))), (((t0.c62 IN ())) NOT NULL), CAST(t0.c99 AS NUMERIC) COLLATE NOCASE, ((((t0.c62) NOT BETWEEN (t0.c99) AND (t0.c0))) BETWEEN (CAST(0.36732377272988503 AS NUMERIC)) AND ((+ (t0.c62)))), ((t0.c0)-(t0.c0)) COLLATE NOCASE, t0.c62, ((((((t0.c62)-(t0.c0)))AND((((t0.c99, t0.c0, t0.c99))<=((t0.c99, t0.c62, 0.30597887085554976))))))OR((((t0.c62)) NOT BETWEEN ((t0.c99)) AND ((t0.c62))))) FROM t0 LIMIT 1823575654; -- 1ms;
SELECT DISTINCT (((t0.c0 IN ()))%(((NULL)IS NOT(t0.c0)))), ((json_object(t0.c0, t0.c62, t0.c99, t0.c62)) NOT BETWEEN ((NOT (t0.c0))) AND ((t0.c0 IN ()))), CAST(((((((((t0.c62)OR(t0.c62)))OR(t0.c0)))AND(t0.c99)))AND(t0.c99)) AS BLOB) FROM t0 WHERE (((('150115685'))<>((CAST(0.817467575253893 AS REAL)))));SELECT (((-954327085 IN ())) NOTNULL) FROM t0 ORDER BY JULIANDAY(((t0.c62) IS FALSE), ((t0.c62)<(t0.c0)), ((t0.c62)AND(t0.c0)))  NULLS LAST; -- 0ms;
SELECT ALL ((((TOTAL(t0.c62))AND(AVG(t0.c62))))AND(x'')) FROM t0 GROUP BY ((((t0.c0) BETWEEN (t0.c62) AND (t0.c99)))GLOB((t0.c99 IN ()))); -- 0ms;
SELECT DENSE_RANK() OVER (), 0.08276924833074384, (((t0.c0 IN ())) NOT BETWEEN (CASE t0.c99  WHEN t0.c99 THEN t0.c62 ELSE t0.c62 END) AND (((t0.c99)AND(t0.c99)))) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0)<(t0.c0)) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT TRIM(t0.c0, t0.c99) COLLATE NOCASE FROM t0 WHERE (((0.9048381876406694 COLLATE NOCASE) NOTNULL)); -- 1ms;
SELECT (- (t0.c99)) COLLATE RTRIM FROM t0 WHERE ((((((-1245975662))>((NULL)))) IS FALSE)); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE WHEN 0X5354bc5d THEN NULL WHEN x'bb49' THEN NULL WHEN 0.9326446835480141 THEN 0.8505889651117039 END)<=((0.8505889651117039 IN ())))); -- 0ms;
SELECT t0.c0 FROM t0 WHERE (((NULL) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((CAST(t0.c99 AS INTEGER))OR(t0.c62 COLLATE NOCASE)))OR(193861717)) FROM t0 WHERE ((((((((((NULL)OR('')))AND('0.817467575253893')))AND(NULL)))AND(x'f0b2')) IN ())); -- 3ms;
SELECT ALL CAST(COUNT(t0.c62) AS TEXT) FROM t0; -- 0ms;
SELECT ALL (((t0.c99 IN ()))LIKE(MAX(''))), (((((((((((t0.c99))=((t0.c0))))OR(t0.c99 COLLATE RTRIM)))AND(((NULL) ISNULL))))OR(((((t0.c99)AND(t0.c62)))AND(t0.c0)))))OR(t0.c0 COLLATE BINARY)), TOTAL(((t0.c62) ISNULL)) OVER () FROM t0 WHERE (((1.508122873E9 IN ()) IN ())); -- 0ms;
SELECT ALL CAST(t0.c0 AS BLOB) FROM t0 WHERE (CAST(((('', -304190254, '1485319451', 0.09659606105330953, NULL))<>(('j?k', '-1044557674', NULL, '735053287', 0.5445162567734817))) AS BLOB)) LIMIT -1958070263; -- 0ms;
SELECT DISTINCT CASE CAST(t0.c99 AS INTEGER)  WHEN t0.c0 THEN (t0.c99 IN (t0.c99, t0.c99)) ELSE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c62))) END FROM t0 WHERE (((('735053287')) BETWEEN ((NULL)) AND ((x'd525'))) COLLATE BINARY); -- 0ms;
SELECT ALL (((t0.c0 IN ())) BETWEEN (((t0.c0)AND(NULL))) AND ((~ (t0.c62)))) FROM t0 LIMIT -1044557674 OFFSET 662461219; -- 0ms;
SELECT DISTINCT LAG(CASE WHEN ((t0.c0) BETWEEN (t0.c62) AND (t0.c99)) THEN t0.c99 WHEN (- (t0.c62)) THEN ((t0.c62)>>(t0.c99)) WHEN ABS(t0.c0) THEN ((t0.c0) NOT BETWEEN ('BZQP*-bV') AND (t0.c62)) END, x'0849', (x'fb45' COLLATE BINARY IN ())) OVER () FROM t0 WHERE (COALESCE(((x'') BETWEEN (0.8857824972116852) AND (0.2697961187867496)), ((NULL)<<('UAwPKr')))); -- 0ms;
SELECT ALL ((t0.c62) NOTNULL) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), CAST(t0.c0 AS INTEGER) COLLATE NOCASE, (((+ (t0.c99)))>=(CASE t0.c0  WHEN t0.c62 THEN t0.c0 END)) FROM t0 ORDER BY LIKELIHOOD(DISTINCT CAST(t0.c62 AS INTEGER), 0.8978990198829759); -- 1ms;
SELECT DISTINCT (- (((t0.c62) BETWEEN (t0.c62) AND (t0.c62)))) FROM t0 WHERE ((((((x'', -7.92793311E8, 0.6824909356779036)) BETWEEN (('-1044557674', 0.531279232238208, x'')) AND (('SA', x'', NULL))))<=((NOT ('-909998395'))))); -- 0ms;
SELECT (+ (t0.c99)) FROM t0 WHERE (((((1992819711) NOT NULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT CASE (('-466372767')LIKE(t0.c0))  WHEN ((((t0.c99)OR(t0.c0)))OR(t0.c0)) THEN ((((t0.c62)AND(t0.c99)))AND(t0.c62)) WHEN ((t0.c0) ISNULL) THEN ((t0.c99) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE BINARY THEN '-452801029' END FROM t0 LIMIT 918698134; -- 0ms;
SELECT ALL GROUP_CONCAT((NOT (x''))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)!=(t0.c99)))<=(((t0.c62)OR(t0.c62)))) FROM t0; -- 0ms;
SELECT DISTINCT ((LIKELY(DISTINCT t0.c0))IS(((t0.c99)<=(t0.c99)))) FROM t0; -- 0ms;
SELECT ((t0.c99 COLLATE RTRIM) IS TRUE) FROM t0 WHERE ((+ (((('', NULL, '{HdtrO'))==(('|', NULL, x'')))))); -- 0ms;
SELECT DISTINCT CASE WHEN (((t0.c62))!=((5.97242376E8))) THEN TOTAL(t0.c99) ELSE ((t0.c62)<=(t0.c0)) END, CASE WHEN t0.c62 THEN t0.c99 ELSE t0.c99 END COLLATE NOCASE, (NOT (((t0.c99)<=(t0.c62)))), COUNT(CAST(t0.c62 AS TEXT)) OVER (), (NOT (json_valid(t0.c0))) FROM t0 WHERE ((~ ((0.3879671476024008 IN ())))); -- 0ms;
SELECT DISTINCT (((('')>>(t0.c0)))IS(TRIM(DISTINCT t0.c99, t0.c0))), (NOT ((t0.c99 IN ()))), CUME_DIST() OVER () FROM t0 WHERE ((((((((((((('-555672354' COLLATE RTRIM)AND((('-397664392')<<(-1.734591742E9)))))AND(HEX(0X73825675))))OR(((((NULL)AND('w')))AND(NULL)))))OR(((('6', NULL, NULL))=(('-1073411086', 0xffffffffc0050bf2, NULL))))))OR(((('-95346040'))!=((x''))))))OR(((((((((NULL)AND(NULL)))OR(NULL)))OR(NULL)))AND(x''))))); -- 0ms;
SELECT (((t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)))) AND (((((t0.c62, t0.c62, t0.c62))<(('2007926700', t0.c99, t0.c62)))))), (((t0.c62 IN ()))||(CASE WHEN t0.c62 THEN t0.c62 ELSE t0.c0 END)), CAST(CAST(t0.c62 AS BLOB) AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT (+ (((t0.c0) ISNULL))) FROM t0 WHERE (((-1202987217)-(x'0e56abd7')) COLLATE BINARY); -- 0ms;
SELECT SUM((((t0.c99))<=((t0.c62)))) FROM t0; -- 0ms;
SELECT DISTINCT (+ (t0.c99)) COLLATE RTRIM FROM t0 WHERE (((('1548615121') NOT NULL) IN ())); -- 0ms;
SELECT CASE CASE WHEN t0.c0 THEN t0.c62 ELSE t0.c62 END  WHEN (NOT (t0.c99)) THEN t0.c0 ELSE ((-1922768424)<=(t0.c99)) END FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c99) NOT BETWEEN (t0.c99) AND (t0.c0)) AS INTEGER), CAST(t0.c99 COLLATE RTRIM AS TEXT), '' FROM t0; -- 0ms;
SELECT DISTINCT x'', TRIM(((((((((t0.c62)OR(t0.c0)))OR('Dq')))OR(t0.c0)))AND(t0.c99))), ((((((((CASE WHEN t0.c99 THEN t0.c62 ELSE t0.c99 END)AND(x'')))AND('')))OR(((0.30597887085554976)>>(t0.c62)))))OR((((t0.c0)) BETWEEN ((t0.c62)) AND ((t0.c99))))) FROM t0 WHERE (((((NULL) NOTNULL))>(('GSࡠb}}' IN ())))); -- 0ms;
SELECT ALL (+ (t0.c99)) FROM t0 LIMIT -318592498; -- 0ms;
SELECT ALL COUNT('bZ囑NMA8') FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c62 IN (t0.c99))) NOT BETWEEN (CAST(t0.c99 AS NUMERIC)) AND (((((t0.c62)OR(t0.c62)))AND(t0.c62)))) FROM t0; -- 0ms;
SELECT NTH_VALUE((NOT (t0.c62)), ((t0.c0 IN (t0.c99)) IN (t0.c0 COLLATE RTRIM))) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM t0 WHERE (CAST(-16578192 AS NUMERIC) COLLATE RTRIM);SELECT DISTINCT (- (CAST(t0.c62 AS NUMERIC))) FROM t0 ORDER BY t0.c99 ASC, (((((t0.c62))!=((t0.c0)))) NOT BETWEEN ((((t0.c0)) BETWEEN ((0Xffffffff8716ea4c)) AND ((t0.c99)))) AND (CAST(t0.c62 AS TEXT)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 LIMIT -142636673 OFFSET -1060350791; -- 0ms;
SELECT LAST_VALUE(((((t0.c0)%('1823575654')))||(((((t0.c99)AND(t0.c99)))OR(t0.c99))))) OVER (), (+ (((((t0.c62)OR(x'')))OR(t0.c62)))), FIRST_VALUE((((t0.c99)) BETWEEN (((t0.c99 IN ()))) AND (((+ (t0.c0)))))) OVER () FROM t0 WHERE ((((((((((('0.0')OR(x'')))AND('7TT/^B')))OR(x'')))AND(0xffffffffb753f38d))) NOTNULL)) GROUP BY (((t0.c0) NOT BETWEEN (t0.c62) AND (t0.c0)) IN ()); -- 0ms;
SELECT DISTINCT ((((t0.c99)OR((((t0.c62))>=((t0.c99))))))OR((((t0.c99, t0.c99, t0.c0)) BETWEEN ((t0.c99, t0.c62, t0.c62)) AND ((t0.c0, t0.c0, t0.c99))))) FROM t0 WHERE (((((((((((0.11445029572608967)AND(NULL)))AND(NULL)))OR(0.8505889651117039)))AND(0xffffffffd09c92db)))>(((9.18698134E8) BETWEEN (1790104567) AND (NULL))))) GROUP BY ((((((((t0.c62)AND(((NULL)LIKE(t0.c62)))))AND(t0.c99 COLLATE NOCASE)))AND(((t0.c0) IS FALSE))))OR(((t0.c0)-(x'241a')))) HAVING ((SUM(t0.c0)) BETWEEN ((+ (t0.c0))) AND (((t0.c99) NOT BETWEEN (t0.c62) AND ('O4')))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c99)GLOB(t0.c62)))OR(TIME(0.42662945041248, t0.c0, t0.c99))))OR(t0.c0 COLLATE NOCASE)))OR(t0.c99)))AND(((t0.c62) BETWEEN (t0.c62) AND ('')))), ((CASE t0.c0  WHEN t0.c99 THEN t0.c99 WHEN t0.c62 THEN t0.c0 WHEN 1.50115685E8 THEN t0.c62 END) BETWEEN ((- (NULL))) AND ((t0.c62 IN ()))), MIN(((t0.c99)>>(t0.c99))) FROM t0 WHERE (((((- (x''))))<=((('' IN ()))))); -- 0ms;
SELECT ALL CAST(((t0.c99) IS FALSE) AS REAL) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((t0.c62)) AND ((t0.c62))) COLLATE NOCASE COLLATE BINARY FROM t0 WHERE ((((((1.120039566E9)) NOT BETWEEN ((0.8171733397661453)) AND ((0.8857824972116852))))AND(NULL))); -- 0ms;
SELECT DISTINCT ((AVG(t0.c0)) NOT NULL) FROM t0 ORDER BY (((t0.c99)) NOT BETWEEN ((t0.c62)) AND ((-1.566243517E9))); -- 0ms;
SELECT ((t0.c62 COLLATE RTRIM) NOT BETWEEN (((t0.c62) NOT NULL)) AND (((t0.c62) ISNULL))), TOTAL(((t0.c62) BETWEEN (t0.c99) AND (t0.c62))) OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW), ((CASE t0.c0  WHEN t0.c62 THEN t0.c62 END) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (((x'') BETWEEN (t0.c0) AND (t0.c99)))) FROM t0; -- 0ms;
SELECT (((((~ (0.5697572156539278)))OR(((t0.c0)LIKE(t0.c62)))))AND(SUM(NULL))) FROM t0 WHERE ((('637330916')IS(x'ca79')) COLLATE NOCASE); -- 0ms;
SELECT CAST(t0.c99 AS BLOB) FROM t0; -- 0ms;
SELECT ALL CASE WHEN ((((t0.c62)OR(x'')))AND(t0.c0)) THEN '579466460' ELSE ((t0.c99)||(t0.c0)) END FROM t0 WHERE ((((NULL) NOT BETWEEN (0.9905833304392485) AND (NULL)) IN ())); -- 0ms;
SELECT DISTINCT (+ (((t0.c62)IS NOT(t0.c99)))), ((((t0.c99)|(t0.c99))) IS FALSE), TRIM(DISTINCT t0.c99 COLLATE RTRIM) FROM t0; -- 0ms;
SELECT ALL '-1245975662' FROM t0 WHERE (((((0.38408027534647404)<(NULL))) IS TRUE)); -- 0ms;
SELECT ((((((t0.c0)AND(t0.c99)))AND(x'9c40'))) BETWEEN (((t0.c0) IS FALSE)) AND (CAST(t0.c99 AS NUMERIC))), (((((t0.c99))!=((t0.c99)))) NOT NULL), CASE WHEN CAST(t0.c0 AS TEXT) THEN TYPEOF(DISTINCT t0.c99) END FROM t0; -- 0ms;
SELECT DISTINCT (((LOWER(t0.c99)))=((MAX(t0.c99)))) FROM t0 WHERE ((('1199638881' COLLATE BINARY) IS TRUE)); -- 0ms;
SELECT DISTINCT (((t0.c62, t0.c99, t0.c99)) NOT BETWEEN ((CAST(t0.c62 AS REAL), ((t0.c62)+(t0.c0)), ((t0.c62) BETWEEN (t0.c62) AND (t0.c0)))) AND ((AVG(t0.c0), ('719961838' IN ()), ((t0.c62)*(t0.c0))))), CASE '-1073411086'  WHEN t0.c0 THEN t0.c99 COLLATE RTRIM WHEN ((t0.c0)/(t0.c62)) THEN ((t0.c62)=(t0.c62)) WHEN 0.4165549848914637 THEN (('-16578192')>=(t0.c99)) WHEN ((t0.c0)>>(t0.c62)) THEN ((((((((t0.c0)AND(t0.c99)))AND(t0.c0)))OR(t0.c0)))AND(t0.c62)) WHEN t0.c0 THEN ((((t0.c99)OR(t0.c0)))AND(t0.c99)) END, ((((t0.c62) IS FALSE)) NOTNULL) FROM t0; -- 0ms;
SELECT ALL CAST(CASE WHEN t0.c62 THEN t0.c62 WHEN 0.4165549848914637 THEN t0.c99 WHEN t0.c99 THEN t0.c99 WHEN t0.c99 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN t0.c0 THEN t0.c62 WHEN NULL THEN t0.c62 WHEN t0.c62 THEN t0.c0 END) FILTER(WHERE ((((t0.c0)!=(t0.c62)))||(((((((((t0.c62)AND(t0.c99)))AND(t0.c0)))OR(t0.c62)))AND(t0.c99))))) OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c62) NOT BETWEEN (t0.c99) AND (t0.c99)) COLLATE RTRIM FROM t0 LIMIT -318592498; -- 0ms;
SELECT CAST(('-84572931' IN ()) AS TEXT) FROM t0; -- 0ms;
SELECT ALL (((t0.c62)) BETWEEN ((NULL)) AND ((t0.c0))) FROM t0 WHERE (((NULL) BETWEEN ((NULL IN ())) AND (UNLIKELY(DISTINCT NULL)))); -- 0ms;
SELECT AVG(CAST(NULL AS BLOB)) OVER () FROM t0 WHERE (HEX(((1936174602) NOTNULL))) GROUP BY t0.c62, (((t0.c99 IN ()))|(((0.2862013562822089) IS FALSE))), (((~ (t0.c99))) IS FALSE) HAVING (NOT (t0.c62)); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT t0.c62 COLLATE RTRIM), COUNT(*) OVER (), (((t0.c99)) NOT BETWEEN ((TYPEOF(t0.c0))) AND ((GROUP_CONCAT(t0.c99)))) FROM t0; -- 0ms;
SELECT COUNT((t0.c0 IN ())) OVER () FROM t0 WHERE (((((((0xffffffff8716ea4c)AND('0.47937912929908155')))OR('-318592498'))) NOTNULL)); -- 0ms;
SELECT ((((((t0.c0)AND(t0.c62)))OR(t0.c0))) NOT BETWEEN (((t0.c62) ISNULL)) AND (CASE WHEN t0.c0 THEN t0.c0 END)) FROM t0 WHERE (((((((((NULL)OR(((-1.204432561E9)GLOB('-182666319')))))OR(((x'') NOT BETWEEN (x'') AND (NULL)))))OR(((0.3958765543451528)GLOB('-16578192')))))OR((~ (x''))))); -- 0ms;
SELECT ALL FIRST_VALUE((((((+ (t0.c99)))OR(t0.c99)))OR((((t0.c99)) BETWEEN ((t0.c99)) AND ((t0.c0)))))) OVER ( ROWS ((+ (t0.c62)) IN ()) PRECEDING EXCLUDE GROUP) FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(((0.18325520126551398)>(x'')))); -- 0ms;
SELECT DISTINCT x'fa22' FROM t0 WHERE (((((((((((('N7')OR(x'')))AND('0.9905833304392485')))OR('f\r')))AND(NULL))))>(((('-1726224038') BETWEEN (NULL) AND (-5.00623282E8)))))) ORDER BY ((CAST(t0.c99 AS INTEGER)) NOT BETWEEN (((t0.c0)==(t0.c99))) AND (((x'') BETWEEN (t0.c99) AND (t0.c62))))  NULLS LAST; -- 0ms;
SELECT CAST(((t0.c62)>(t0.c0)) AS REAL) FROM t0 WHERE ((~ ((- ('859786875'))))) LIMIT -846061994; -- 0ms;
SELECT DISTINCT ((((((((((t0.c62)AND(t0.c0)))OR(t0.c99)))AND(t0.c0)))AND(t0.c99))) NOTNULL) FROM t0 WHERE ((((('DQ') IS TRUE)) BETWEEN ('jU\r[&4-ys' COLLATE BINARY) AND ('춌3C'))); -- 0ms;
SELECT ALL (((t0.c62)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c99))) AND ((((((((((t0.c62)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c62))))) FROM t0 WHERE (NULL) GROUP BY ((((t0.c0)>=(t0.c0)))&(((NULL)<=(t0.c62)))) HAVING ((((((t0.c99)AND(t0.c99)))OR(t0.c62)))GLOB(CASE t0.c0  WHEN t0.c0 THEN 'ὸ	c\n' END)); -- 0ms;
SELECT DISTINCT (((t0.c99 IN (t0.c0))) BETWEEN ((+ (t0.c0))) AND (GROUP_CONCAT(NULL))), ((((t0.c0) IS TRUE)) IS TRUE), (((t0.c0)) BETWEEN ((((((t0.c0)OR(t0.c62)))AND(t0.c62)))) AND (((((x'')) NOT BETWEEN ((x'3502')) AND ((t0.c99)))))) FROM t0 WHERE (((x'') NOT BETWEEN ((('-311339311')>>('-384690013'))) AND ((~ (x'd63d'))))) GROUP BY CASE CASE WHEN t0.c62 THEN t0.c99 END  WHEN LIKELY(DISTINCT t0.c62) THEN NULL ELSE ((((t0.c0)AND(t0.c62)))OR(t0.c62)) END; -- 0ms;
SELECT ((t0.c62 COLLATE RTRIM)||(CAST(t0.c99 AS REAL))), (+ (ABS(DISTINCT t0.c99))), ((((json(371539830))OR(CAST(t0.c0 AS BLOB))))AND((NOT (t0.c62)))) FROM t0; -- 0ms;
SELECT ALL (+ ((t0.c99 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT ((((MAX(t0.c99))OR(((t0.c0) IS FALSE))))AND(t0.c99 COLLATE NOCASE)), (((t0.c99)) NOT BETWEEN ((0.5659100215891611)) AND (((t0.c62 IN ())))), (- (t0.c62 COLLATE NOCASE)) FROM t0 WHERE ((NOT (((0.21132124084225634)-(x''))))) GROUP BY ((t0.c99 COLLATE BINARY) IS TRUE); -- 0ms;
SELECT DISTINCT NTH_VALUE(rtreenode((((t0.c62)) NOT BETWEEN ((t0.c0)) AND ((NULL))), ((t0.c62) IS FALSE)), CAST(CAST(t0.c99 AS REAL) AS TEXT)) OVER () FROM t0;SELECT DISTINCT NULLIF(((t0.c99)/(t0.c99)), (t0.c62 IN ())) FROM t0 WHERE (((CASE ''  WHEN x'' THEN 0.35611038205109513 ELSE NULL END) NOTNULL)); -- 0ms;
SELECT DISTINCT CAST(x'' AS BLOB) COLLATE RTRIM FROM t0 WHERE (((UPPER(DISTINCT 0.3027006504842108))=((-4.4520045E8 IN ())))); -- 0ms;
SELECT TOTAL((('1809662577') NOT BETWEEN (t0.c99) AND (t0.c62)) COLLATE NOCASE) FROM t0 LIMIT 2078735820; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c99))), COUNT(t0.c0)) FROM t0 GROUP BY ((((((((((t0.c62) NOT NULL))AND((t0.c99 IN (t0.c99, t0.c62)))))AND((t0.c99 IN ()))))OR(((t0.c0) NOT BETWEEN (t0.c99) AND (t0.c0)))))AND((((t0.c0, t0.c0, t0.c0))>=((t0.c99, t0.c62, t0.c62))))), ((t0.c0)IS(t0.c62)) COLLATE BINARY, CASE (+ (NULL))  WHEN CAST(NULL AS REAL) THEN t0.c99 COLLATE RTRIM WHEN ((t0.c62) BETWEEN (t0.c99) AND (t0.c99)) THEN t0.c0 COLLATE NOCASE WHEN ((t0.c99) NOT BETWEEN ('-318592498') AND (t0.c0)) THEN CASE WHEN t0.c62 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c99 THEN t0.c99 END ELSE (+ (t0.c0)) END; -- 1ms;
SELECT DISTINCT (('-427575258') ISNULL) FROM t0 WHERE (COALESCE(((((NULL)OR(NULL)))AND(x'')), 'tB' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT (('-152584747') BETWEEN (UPPER(t0.c62)) AND ((+ (t0.c99)))) FROM t0; -- 0ms;
SELECT (((((t0.c62)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (CASE WHEN t0.c62 THEN t0.c62 END) AND (COALESCE(DISTINCT t0.c0, t0.c62, t0.c99, t0.c99))) FROM t0 WHERE (CAST(CASE x''  WHEN 0x145eeb5 THEN '6w\rjDgo' WHEN NULL THEN 0xffffffff8ed25add WHEN '-954327085' THEN 0.5697572156539278 ELSE '-912151402' END AS BLOB)) GROUP BY (((t0.c62)%(t0.c62)) IN ()), t0.c62, CAST(UNLIKELY(448959103) AS NUMERIC) HAVING UNLIKELY(DISTINCT '-2120597040') ORDER BY ((((((t0.c62)AND(t0.c0)))OR(t0.c62)))/(((NULL) NOTNULL)))  NULLS LAST, t0.c62 ASC  NULLS FIRST, CAST(t0.c62 COLLATE BINARY AS TEXT)  NULLS LAST; -- 0ms;
SELECT DISTINCT ('O4' IN (LOWER(DISTINCT '0.8505889651117039'))), (((((t0.c0)==(x'')), TOTAL(x''), CAST(t0.c99 AS TEXT)))<=(((t0.c0 IN ()), (((t0.c99, t0.c99, t0.c99))>((t0.c0, t0.c62, '-1898816803'))), AVG(t0.c62)))), TRIM(DISTINCT 0.9051344478675435, ((((t0.c99)OR(t0.c0)))OR(NULL))), (- ((('-490402950')GLOB(t0.c99)))), TOTAL(CASE WHEN t0.c62 THEN t0.c62 ELSE t0.c0 END) FILTER(WHERE CASE (~ (t0.c0))  WHEN ((t0.c99)AND(t0.c62)) THEN ((((t0.c99)AND(x'a5dc7c5b')))AND(t0.c62)) END) OVER ( ROWS BETWEEN  CURRENT ROW AND ((((((t0.c62) NOTNULL))AND(CASE t0.c62  WHEN t0.c99 THEN t0.c99 END)))AND(((t0.c0) NOT BETWEEN (x'') AND (t0.c62)))) PRECEDING) FROM t0 WHERE ((((-1034631779 IN ())) BETWEEN (((0.30597887085554976) NOT BETWEEN (NULL) AND (584164193))) AND (CASE WHEN NULL THEN '' ELSE 0.5526651337115128 END)));SELECT ALL t0.c0, (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) ISNULL), (NOT ((t0.c62 IN ()))) FROM t0 WHERE (CAST((- (x'')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((CAST(t0.c62 AS REAL)) ISNULL), CASE CAST(t0.c99 AS REAL)  WHEN x'' THEN ((((t0.c62)OR(t0.c0)))OR(t0.c0)) END, (('1687244845') BETWEEN (((((NULL)AND(t0.c0)))AND(t0.c99))) AND (SUM(t0.c0))), 1.548615121E9, (((((t0.c0, t0.c99, t0.c99)) NOT BETWEEN ((t0.c0, t0.c99, t0.c62)) AND ((NULL, t0.c0, t0.c0))))GLOB(CAST(t0.c62 AS NUMERIC))) FROM t0; -- 0ms;
SELECT ((((ABS(t0.c99))OR(CAST(t0.c62 AS BLOB))))OR((~ (t0.c0)))), COUNT(((t0.c99) NOTNULL)) OVER (), t0.c0 FROM t0 WHERE (CAST((('')>(0.13110864205391004)) AS INTEGER)) UNION SELECT ALL GROUP_CONCAT(CAST('Y꧌l' AS NUMERIC)), CASE WHEN ((t0.c0) NOT NULL) THEN SUM(t0.c99) ELSE t0.c99 COLLATE NOCASE END, x'' FROM t0 WHERE (((LIKELY(x'')) NOT BETWEEN (((((((((((((0x127901b4)AND('U#툄')))AND(x'')))AND('')))OR(0.06693214307745665)))OR(0X4e58a034)))AND(x''))) AND ((NOT ('-1e500'))))); -- 0ms;
SELECT t0.c62 FROM t0 ORDER BY x'' DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((t0.c62 COLLATE RTRIM)<(load_extension(t0.c99, t0.c62))) FROM t0 WHERE ((('-84572931') NOT BETWEEN (NULL) AND (0.531279232238208)) COLLATE NOCASE);SELECT SQLITE_SOURCE_ID() FROM t0 WHERE (((((0.13226773635027778)OR(x'')))OR(-1.734591742E9)) COLLATE BINARY) GROUP BY (((t0.c0)) BETWEEN ((((t0.c0)>(t0.c99)))) AND (((t0.c0 IN ())))), (NOT (NULL)), (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c99))))IS NOT((NOT (t0.c62)))); -- 0ms;
SELECT CASE WHEN IFNULL(t0.c0, t0.c0) THEN (('-1034458283')/(t0.c62)) END, ROW_NUMBER() OVER (), ((CAST(t0.c99 AS TEXT))>(t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT x'', (- (x'' COLLATE NOCASE)), CHANGES() COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT TOTAL((((t0.c99, t0.c99, t0.c99))!=((t0.c99, '47I0g', t0.c0)))) OVER ( ORDER BY ((t0.c0)AND(t0.c0)) COLLATE NOCASE DESC), SUM((t0.c99 IN ())), CAST(t0.c0 AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT HEX(((t0.c62) IS FALSE)) FROM t0 WHERE ((+ ((('2묰[oz') NOT NULL)))); -- 0ms;
SELECT DISTINCT -2.028541364E9, (((t0.c99, t0.c0, t0.c62, t0.c99, t0.c0)) BETWEEN ((((((t0.c62)OR(t0.c99)))AND(t0.c99)), ((t0.c99) BETWEEN (t0.c62) AND (t0.c62)), ((((627170328)OR(t0.c62)))AND(t0.c99)), CASE t0.c0  WHEN t0.c99 THEN t0.c0 ELSE t0.c99 END, GROUP_CONCAT(t0.c99))) AND (((+ (t0.c0)), ((1.361486258E9) IS TRUE), json_array(t0.c62, t0.c0), ((t0.c62)AND(t0.c62)), ((t0.c62) BETWEEN (t0.c0) AND (NULL))))), 0X66affa42 FROM t0; -- 1ms;
SELECT DISTINCT LAG(((((((t0.c62) ISNULL))AND((((t0.c62)) BETWEEN ((t0.c99)) AND ((t0.c99))))))OR(t0.c0)), ((t0.c62) NOT BETWEEN (t0.c0) AND (0Xffffffffb835d14f)), CASE WHEN ((t0.c99) ISNULL) THEN NULLIF(DISTINCT t0.c62, t0.c99) END) OVER () FROM t0 WHERE (CAST(MIN(x'', '-427575258') AS BLOB)); -- 0ms;
SELECT ALL ((((((0.32207136386443347)OR(t0.c0)))AND(t0.c99))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c62)) AND ((t0.c0)))) AND ((~ (t0.c0)))), (NOT (((t0.c62) BETWEEN (t0.c62) AND (t0.c0)))), ((((((t0.c0)>=(t0.c99)))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(CAST(t0.c62 AS BLOB))) FROM t0 WHERE ((('0.11445029572608967') IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT ALL FIRST_VALUE(((t0.c0 COLLATE BINARY) BETWEEN (x'') AND (json(t0.c62)))) OVER ( ROWS CASE ((t0.c62) IS FALSE)  WHEN t0.c99 THEN t0.c62 WHEN '-1726141951' THEN (t0.c62 IN ()) WHEN ((t0.c62) NOTNULL) THEN ((((((((t0.c62)AND(t0.c0)))AND(x'')))OR(t0.c0)))AND(t0.c0)) WHEN t0.c62 COLLATE NOCASE THEN (((t0.c99)) BETWEEN ((t0.c99)) AND ((t0.c99))) WHEN ((t0.c62)!=(t0.c99)) THEN (NOT (t0.c62)) ELSE 0.7374957442466377 END PRECEDING EXCLUDE TIES) FROM t0 WHERE ((CAST(NULL AS REAL) IN ())); -- 0ms;
SELECT DISTINCT json_remove(((t0.c62) IS TRUE), LIKELY(t0.c99)) FROM t0; -- 0ms;
SELECT NULL FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN MIN('-397664392') THEN '-1868421876' WHEN ((t0.c0) NOT BETWEEN (t0.c99) AND (t0.c62)) THEN NULL WHEN t0.c62 COLLATE BINARY THEN CAST(t0.c99 AS TEXT) END, CAST(t0.c99 AS BLOB) COLLATE BINARY, 0xffffffff86276981 FROM t0; -- 0ms;
SELECT t0.c0 FROM t0 WHERE (((((((((((x'')OR(-1.6578192E7)))OR(-1150392953)))OR(0.1871704219931214)))OR('1613201306')))IS NOT((~ (-1373960096))))) LIMIT -305412283; -- 0ms;
SELECT ALL CASE CAST(t0.c0 AS NUMERIC)  WHEN (((0.9048381876406694, t0.c99, t0.c62))!=((t0.c62, NULL, t0.c62))) THEN ((t0.c99)+(t0.c0)) END, (((- ('-467465894')))IS NOT(((x'') BETWEEN (t0.c99) AND (t0.c62)))), (~ ((- (t0.c62)))) FROM t0 WHERE ('<Z0Э)Jl') ORDER BY ((((((((((((t0.c62)AND(t0.c62)))AND(t0.c62)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (1.937921653E9)))))OR(((t0.c0)AND(t0.c62)))))AND(((t0.c0) ISNULL))))AND(((t0.c62) BETWEEN (t0.c0) AND (t0.c62))))  NULLS FIRST, LIKELIHOOD(DISTINCT ((t0.c99) BETWEEN (t0.c99) AND (t0.c62)), 0.8534355215000221), ((((t0.c99)AND(t0.c99)))OR(t0.c62)) COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE (t0.c99 IN ())  WHEN ((t0.c99)-(t0.c99)) THEN ((t0.c0)%(t0.c62)) ELSE ((t0.c62) NOTNULL) END, (((t0.c0) NOTNULL) IN ()), ((((t0.c0)AND(AVG(t0.c62))))AND((t0.c0 IN ()))), ((t0.c62)=(t0.c62)) COLLATE NOCASE, (SUM(t0.c99) IN ()) FROM t0; -- 0ms;
SELECT AVG(LIKELY(DISTINCT 'b9')) FROM t0 WHERE (MAX(CAST(0.9616092077656212 AS NUMERIC), (((x'd665', -1726224038, NULL))<(('-1830685224', x'', NULL))), CAST('1162448107' AS TEXT), ((0.47940483088709385)IS NOT(0.9009306407066705)))) ORDER BY ('-[}J8\v]' IN (((t0.c99)&(t0.c99))))  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN (t0.c99 IN ()) THEN (((t0.c62)) NOT BETWEEN ((t0.c62)) AND ((t0.c62))) ELSE t0.c99 END FROM t0 WHERE (((((NULL) NOT BETWEEN (0.1747875895824148) AND (0.1626421194353147))) IS FALSE)); -- 0ms;
SELECT DISTINCT '-1073411086' FROM t0 WHERE ((~ ((NOT (''))))); -- 0ms;
SELECT (((x'') IS TRUE) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) NOT BETWEEN (t0.c0) AND ('(g')) AS BLOB) FROM t0 ORDER BY 430507534 DESC  NULLS FIRST, (((((((((((((t0.c62)AND(t0.c62)))OR(t0.c99)))OR('128896776')))OR(t0.c99)))AND(t0.c0)))AND(t0.c0)) IN ()) DESC;SELECT DISTINCT (CASE t0.c62  WHEN t0.c99 THEN NULL END IN ()), LOWER(DISTINCT ((t0.c0) NOTNULL)), (((t0.c62)) BETWEEN ((t0.c62)) AND ((t0.c0))) COLLATE NOCASE FROM t0 WHERE (((((((((-1.6578192E7 COLLATE BINARY)OR((0.7891885083575428 IN ()))))OR((((x'')) BETWEEN ((NULL)) AND ((0.5050869346826695))))))AND(((((0.7186267667213133)AND(x'')))AND(0.14402467269680663)))))OR(((((-1.7976931348623157E308)AND(0xffffffff9706b06d)))AND(NULL))))) ORDER BY CAST(((t0.c99)>(t0.c62)) AS BLOB) DESC  NULLS FIRST LIMIT 219151364; -- 0ms;
SELECT DISTINCT t0.c99 FROM t0 WHERE (0.03986975879690757); -- 0ms;
SELECT ALL (((((t0.c62)AND(t0.c62)))AND(t0.c99)) IN ()) FROM t0 WHERE ((((x'' IN ('l%')))GLOB(CASE WHEN 0.47937912929908155 THEN '' END))); -- 0ms;
SELECT ALL (t0.c99 IN ('')) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ((CASE WHEN t0.c0 THEN '' WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c62 END) IS TRUE), -1977740407, t0.c0 FROM t0 WHERE (CASE (~ ('-557958400'))  WHEN (('512462782') BETWEEN (0.4792770131064883) AND (0X3e1960be)) THEN CASE WHEN '512462782' THEN 1.992819711E9 WHEN NULL THEN NULL WHEN NULL THEN 0.804181303264622 WHEN NULL THEN NULL WHEN 0.5040378129162466 THEN 0.8528035133863412 END END); -- 0ms;
SELECT DISTINCT ((((((t0.c99)OR(t0.c62)))AND(t0.c62))) NOT NULL) FROM t0 WHERE ((((- (0Xffffffffeab8fd86)))-(((0x49b9a41d) BETWEEN (1338045968) AND ('-1898816803'))))) ORDER BY ((((((t0.c62) NOT NULL))OR(((t0.c99)<<(t0.c62)))))OR(((t0.c62) ISNULL)))  NULLS LAST; -- 0ms;
SELECT CAST(UPPER(t0.c99) AS REAL) FROM t0 WHERE (((CAST(NULL AS NUMERIC))AND((NOT (x''))))); -- 0ms;
SELECT ALL ((((((((MIN(t0.c62))OR(SUM('UAwPK\r'))))AND(t0.c0)))AND(t0.c0)))OR(((t0.c0) BETWEEN (t0.c62) AND (t0.c62)))) FROM t0; -- 0ms;
SELECT DISTINCT (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((0.7212260848924056))))OR(UNLIKELY(t0.c99))))AND((- (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT t0.c62 COLLATE BINARY) FROM t0 WHERE (((((x'3122' IN (NULL))))<((('HfH*m' IN (x'')))))) GROUP BY ((((t0.c62)!=(t0.c99)))==('1800493503')) HAVING CAST(CAST(t0.c99 AS TEXT) AS NUMERIC); -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(t0.c62) OVER (), PERCENT_RANK() OVER (), (((0.4063790151659027) NOT BETWEEN (t0.c0) AND (t0.c99)) IN (CAST(t0.c62 AS NUMERIC))) FROM t0 GROUP BY 0x4b8541ab;SELECT DISTINCT ((((t0.c62) IS FALSE))GLOB(t0.c62 COLLATE BINARY)), (((('-1694428904')||(t0.c99))) IS TRUE), (NOT (t0.c62 COLLATE BINARY)) FROM t0; -- 1ms;
SELECT CASE WHEN ((t0.c62) NOTNULL) THEN t0.c0 END FROM t0 LIMIT -1734591742 OFFSET 1049412142; -- 0ms;
SELECT DISTINCT '-1922768424' COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((((t0.c62)&(t0.c62)))) AND ((TOTAL(t0.c62)))), TOTAL(((t0.c62)||(t0.c99))) OVER () FROM t0 WHERE ((CASE x''  WHEN '0.14402467269680663' THEN 0.9426113980940451 END IN ())); -- 0ms;
SELECT DISTINCT ((((t0.c62) ISNULL)) BETWEEN (t0.c62 COLLATE RTRIM) AND (((t0.c99)%(t0.c99)))), ((((t0.c62)>(t0.c99)))<=(((t0.c0) IS FALSE))), (((t0.c62 IN ())) NOT NULL) FROM t0 WHERE ((('C-3')OR('2026889060')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((0.8921485838442537)) NOT BETWEEN (((t0.c0 IN ()))) AND ((TRIM(t0.c62)))) FROM t0 ORDER BY CASE WHEN CAST('' AS TEXT) THEN ((((((((t0.c99)AND(t0.c99)))OR(t0.c99)))AND(t0.c0)))OR(t0.c62)) END  NULLS LAST, (+ (((NULL) NOTNULL)))  NULLS LAST, (((((t0.c0)) BETWEEN ((t0.c62)) AND ((t0.c62)))) NOT NULL)  NULLS FIRST, 0X1ea26a2b  NULLS FIRST;SELECT DISTINCT CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))  WHEN (~ (t0.c62)) THEN t0.c99 COLLATE NOCASE WHEN ((t0.c62)LIKE(t0.c62)) THEN ((t0.c99) IS FALSE) WHEN (NOT (t0.c0)) THEN COUNT(t0.c0) END FROM t0; -- 0ms;
SELECT ALL ((t0.c0)>>(((x'')==(t0.c0)))) FROM t0 WHERE (x''); -- 1ms;
SELECT DISTINCT t0.c99 FROM t0 ORDER BY (- (((t0.c0)>>(t0.c62)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(DISTINCT NULL, 0.05870070688638174))||(MIN(t0.c0))) FROM t0 WHERE (NULL); -- 0ms;
SELECT ((((((((((((TOTAL(t0.c0))AND((t0.c62 IN ()))))AND(((t0.c62) BETWEEN (t0.c99) AND (t0.c62)))))OR((NOT (t0.c99)))))AND(TOTAL(1.992819711E9))))OR(CASE WHEN t0.c0 THEN t0.c62 WHEN t0.c62 THEN t0.c99 WHEN t0.c0 THEN '0슁' END)))AND(t0.c0 COLLATE NOCASE)) FROM t0 UNION SELECT DISTINCT (+ (t0.c99)) FROM t0 WHERE ((((NULL, x'', '-624481966', 'y꧌l', '?b')) BETWEEN ((((NULL)<(x'deae4c7b')), ((0.47816192786996603) NOT BETWEEN (NULL) AND (NULL)), ('<,' IN ()), (('')>(x'1d7d')), CASE WHEN 0xffffffffb791b49e THEN '-1604716044' ELSE '248550936' END)) AND (((- ('&i')), CAST('0.4792770131064883' AS INTEGER), (('681163510')AND('')), ((NULL)>=(NULL)), ((NULL)GLOB(0.7190525252495179)))))) ORDER BY '859786875' DESC  NULLS LAST;SELECT DISTINCT ((t0.c62)IS(t0.c0)) COLLATE NOCASE, ((((t0.c62) NOT BETWEEN (t0.c62) AND (t0.c99)))>(CASE t0.c0  WHEN t0.c62 THEN t0.c62 ELSE t0.c62 END)), (((t0.c62)) NOT BETWEEN ((t0.c99)) AND ((t0.c62 COLLATE BINARY))) FROM t0 WHERE ((('657782176')IS(0.31657659348017175)) COLLATE NOCASE); -- 4ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE (CASE WHEN json_insert(NULL, '817144178', '575478396') THEN ((0.6883856959764862) NOT BETWEEN (NULL) AND (0.7440028992686051)) END) GROUP BY x'e3c6' HAVING ((CASE WHEN t0.c62 THEN 0.8921485838442537 END)==(((t0.c0)>>(t0.c99)))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), t0.c0, SUM(((t0.c0) BETWEEN (t0.c62) AND (t0.c0))) OVER ( ORDER BY ((CAST(t0.c99 AS NUMERIC))<=(CAST(t0.c99 AS NUMERIC))) DESC  NULLS LAST) FROM t0; -- 1ms;
SELECT DISTINCT ((((NULL)AND(t0.c0 COLLATE NOCASE)))AND((((t0.c62)) BETWEEN ((t0.c99)) AND ((t0.c0))))), GROUP_CONCAT(((((((((t0.c62)AND(t0.c99)))AND(x'c39b5296')))AND(t0.c62)))OR(t0.c62))) FILTER(WHERE (((t0.c62)) BETWEEN ((((NULL) ISNULL))) AND ((0.41451901589372153)))) OVER (), ((SUM(t0.c62)) NOT BETWEEN ((((t0.c0))!=((t0.c62)))) AND ('212455335')) FROM t0; -- 0ms;
SELECT DISTINCT TRIM(((((t0.c62)AND(t0.c62)))OR(x''))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c99)AND(t0.c0))))<=(((NOT (t0.c0))))), CASE WHEN NULL THEN ((NULL) BETWEEN (t0.c0) AND ('-1915044091')) END, (((((t0.c62)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) ISNULL) FROM t0 WHERE (((((('-1942052780', 0.8464119314354462, x''))>=(('hWHgF''T⊈', NULL, '-140399867')))) NOT BETWEEN (((0.44254425691623533) IS TRUE)) AND ((('}_A4㈇c뮨1>')GLOB(0.47532973407902424))))); -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, t0.c99)) BETWEEN ((((-1.237391486E9) IS FALSE), 0.13226773635027778, t0.c0 COLLATE RTRIM)) AND ((CAST(t0.c99 AS INTEGER), t0.c62 COLLATE NOCASE, t0.c0 COLLATE BINARY))), ((((t0.c0) IS FALSE))%(t0.c99)), TOTAL(((x'')/(t0.c0))) FROM t0 WHERE (CAST(((x'') NOT NULL) AS BLOB)); -- 1ms;
SELECT ALL LOWER(((t0.c0) BETWEEN (t0.c62) AND (t0.c0))) FROM t0 WHERE ((- (0Xb8e1855)) COLLATE NOCASE) LIMIT -1571287010 OFFSET -385921051; -- 0ms;
SELECT DISTINCT t0.c62, (((t0.c0 IN ())) IS FALSE), SUM((t0.c0 IN ())) FROM t0; -- 0ms;
SELECT DISTINCT (((- (t0.c62))) BETWEEN (DATE(t0.c62, t0.c0, t0.c62, t0.c62, t0.c99, t0.c0, t0.c0)) AND (COALESCE(t0.c0, t0.c62, t0.c99, x'572f'))) FROM t0; -- 0ms;
SELECT ALL (((((t0.c0, x'e123', t0.c99)) BETWEEN ((t0.c0, t0.c0, t0.c62)) AND ((t0.c62, t0.c0, t0.c99)))) ISNULL) FROM t0 WHERE ((((((((((NULL)OR(x'')))AND(-459158673)))AND(210875835)))OR('hWHgF''T⊈')) IN ())); -- 0ms;
SELECT DISTINCT (NOT ((((NULL))>=((t0.c0))))) FROM t0 WHERE (((('\T')) NOT BETWEEN ((CASE 'W'  WHEN 0.3898192998873554 THEN '' END)) AND (('1485319451' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT ((t0.c99 COLLATE NOCASE)<>(t0.c99)) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (t0.c0)) THEN ((t0.c62)GLOB(t0.c0)) WHEN ((NULL) ISNULL) THEN CHAR(t0.c62) WHEN (((t0.c0))=((']Y'))) THEN ((t0.c62)>=(t0.c0)) ELSE CASE WHEN t0.c99 THEN t0.c0 WHEN t0.c99 THEN t0.c62 WHEN t0.c62 THEN t0.c62 ELSE NULL END END FROM t0 ORDER BY ((CAST(t0.c62 AS NUMERIC))<<(t0.c99 COLLATE BINARY))  NULLS LAST; -- 0ms;
SELECT ALL json_patch(t0.c99, t0.c0) COLLATE RTRIM, ((((t0.c99) ISNULL)) BETWEEN (CASE WHEN x'' THEN t0.c99 ELSE t0.c62 END) AND ((+ (t0.c62)))), ROW_NUMBER() OVER ( ORDER BY NULL COLLATE RTRIM, t0.c62  NULLS LAST, ((((t0.c99) IS TRUE)) BETWEEN (0.6450917344361357) AND (((((x'')AND(t0.c99)))OR(t0.c99))))  NULLS LAST) FROM t0 WHERE ((((1795258146) IS FALSE) IN ())) LIMIT -1526283949 OFFSET -1363748122; -- 0ms;
SELECT DISTINCT TRIM(IFNULL(DISTINCT t0.c62, t0.c99), t0.c62), ((((t0.c99) BETWEEN (0xffffffffa12bbaed) AND (t0.c0)))OR(((t0.c62) NOTNULL))), (((t0.c62)) NOT BETWEEN (('-427575258')) AND ((((((t0.c62)OR(t0.c0)))AND(t0.c62))))) FROM t0 WHERE (CASE WHEN CAST('1809662577' AS BLOB) THEN ((x'') NOTNULL) ELSE (x'' IN ()) END); -- 0ms;
SELECT t0.c0 FROM t0 WHERE (((((NULL, '', NULL, x'', 0.9547866952307132)) BETWEEN (('vD', NULL, NULL, '', '992675689')) AND ((NULL, 'NaNc+', x'', '', NULL))) IN (((0.8126547888861216) IS TRUE)))); -- 0ms;
SELECT ALL ((CASE WHEN t0.c62 THEN NULL ELSE t0.c0 END)<>(t0.c62 COLLATE RTRIM)), TOTAL(((t0.c99) NOT NULL)), JULIANDAY(((t0.c62)|(t0.c99)), ((t0.c0)&(t0.c99)), t0.c99) FROM t0; -- 0ms;
SELECT ((((((((((t0.c99)%(t0.c62)))AND((((t0.c62, t0.c99, t0.c99)) BETWEEN ((t0.c99, t0.c0, x'cd81369d')) AND ((t0.c0, t0.c99, t0.c99))))))AND(((t0.c0)OR(t0.c0)))))OR(IFNULL(DISTINCT t0.c0, t0.c99))))OR(TOTAL(t0.c99))), '1314761398' COLLATE RTRIM, COUNT(*) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ALL ((t0.c99)/(t0.c62)) COLLATE BINARY FROM t0; -- 0ms;
SELECT ALL ((((t0.c0)) NOT BETWEEN ((t0.c62)) AND ((t0.c0))) IN ()) FROM t0; -- 0ms;
SELECT TOTAL(((t0.c62) IS FALSE)) OVER ( RANGE BETWEEN (((t0.c99) NOT BETWEEN (t0.c99) AND (t0.c62)) IN ()) FOLLOWING AND ((((t0.c0))<=((t0.c62))) IN ()) PRECEDING EXCLUDE CURRENT ROW) FROM t0;SELECT DISTINCT ((t0.c99 COLLATE RTRIM) NOTNULL), TOTAL(CASE t0.c0  WHEN t0.c99 THEN t0.c62 END COLLATE RTRIM) OVER (), SUM((- (t0.c62))) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT MIN(((t0.c0)=(t0.c99))) FROM t0 GROUP BY ((((((t0.c0)OR(t0.c0)))OR(t0.c99)))AND(CAST(t0.c0 AS TEXT))); -- 0ms;
SELECT ALL SUM(t0.c99) FROM t0 GROUP BY ((((t0.c99)%(t0.c99)))!=((((t0.c0))<((t0.c99))))); -- 1ms;
SELECT ((CASE WHEN '-95346040' THEN t0.c62 WHEN t0.c62 THEN t0.c62 WHEN t0.c99 THEN t0.c0 ELSE t0.c62 END)||(CASE WHEN t0.c0 THEN t0.c99 ELSE t0.c0 END)) FROM t0; -- 0ms;
SELECT DISTINCT AVG(SUM(x'')), (~ (AVG(t0.c62))), (((((t0.c62))==((t0.c99)))) ISNULL) FROM t0 WHERE ((NOT ('2048884215')) COLLATE BINARY);SELECT DISTINCT CASE WHEN ((((NULL)AND(t0.c62)))AND(t0.c0)) THEN ((t0.c62)<<(t0.c0)) WHEN '' THEN CAST(t0.c99 AS TEXT) WHEN ((((((((t0.c0)AND(t0.c99)))AND(t0.c0)))AND(t0.c62)))OR(t0.c62)) THEN CASE ''  WHEN t0.c62 THEN t0.c62 WHEN t0.c99 THEN t0.c0 WHEN t0.c99 THEN t0.c62 END ELSE LIKELIHOOD(DISTINCT t0.c99, 0.16003564567721962) END FROM t0 WHERE (((((NULL)*(x'6433'))) NOT BETWEEN (((('-894857577', -1571518977, 0.38793818319606566)) NOT BETWEEN ((NULL, 0x6a7bd65d, -2.028541364E9)) AND ((1760250239, -998359965, '179723439')))) AND ((+ (0x161e3fba))))) GROUP BY CAST(t0.c0 AS BLOB) HAVING (NOT ((~ (t0.c99)))); -- 0ms;
SELECT ALL (NOT (((t0.c62)>>(t0.c99)))) FROM t0 WHERE (CASE LIKELY(-1.958070263E9)  WHEN (((0X62cac9f7)) BETWEEN (('-427575258')) AND ((0.3342963568477233))) THEN CASE 0.9741386395239588  WHEN 1.120039566E9 THEN '' WHEN x'' THEN NULL WHEN '560015308' THEN NULL END END); -- 0ms;
SELECT (+ (LTRIM(t0.c99))) FROM t0 WHERE (CASE ((x'') NOT NULL)  WHEN CAST(x'6a11' AS REAL) THEN (- (-1.768154316E9)) ELSE 0.7519294527194255 COLLATE BINARY END) GROUP BY ((t0.c62)>(t0.c99)) COLLATE RTRIM, (- (((t0.c99)>=(t0.c99)))), ((((((((((t0.c99)AND(t0.c62)))AND(0.5449472759081149)))AND(t0.c0)))AND(t0.c99)))OR(((t0.c0)%(t0.c99)))) HAVING json_extract(((((t0.c62)OR(t0.c99)))AND(t0.c62)), (t0.c99 IN ()));SELECT DISTINCT COUNT(((((t0.c62)OR(0.6746582509654282)))AND(t0.c0))) OVER () FROM t0 LIMIT -361456124 OFFSET -262198632; -- 0ms;
SELECT ((GROUP_CONCAT(t0.c99)) IS FALSE) FROM t0; -- 0ms;
SELECT ((CASE WHEN t0.c99 THEN t0.c62 END)>(((((((((t0.c62)AND(t0.c0)))OR(t0.c62)))AND(t0.c62)))OR(t0.c0)))) FROM t0 WHERE (CAST((('') NOT NULL) AS TEXT)); -- 0ms;
SELECT DISTINCT t0.c99, (((NULL, t0.c99, t0.c62)) NOT BETWEEN ((((t0.c99)+(t0.c99)), t0.c99 COLLATE RTRIM, (- (t0.c62)))) AND (((~ (t0.c0)), (((t0.c62)) BETWEEN ((t0.c0)) AND ((t0.c99))), (('v|Z너)') IS TRUE)))), (((t0.c62)) NOT BETWEEN (((t0.c62 IN ()))) AND ((CASE t0.c0  WHEN NULL THEN t0.c99 END))) FROM t0 WHERE (((((((((CASE WHEN NULL THEN 0x23f94fc5 WHEN 0.7997246846085241 THEN '[]f' WHEN '62' THEN NULL WHEN x'' THEN NULL WHEN x'd047' THEN '' END)AND((((NULL))>=(('500375661'))))))AND((+ (0xffffffffe8ff4fe5)))))OR(CAST(0.8813812743542018 AS REAL))))AND(CASE x'fddf'  WHEN NULL THEN 0.3673381111877322 WHEN x'' THEN '' WHEN '-397664392' THEN x'' END))) ORDER BY ((((t0.c99) NOT BETWEEN (t0.c62) AND (t0.c99)))>(((t0.c62)=(t0.c62)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (~ (CASE t0.c62  WHEN t0.c62 THEN t0.c99 WHEN t0.c0 THEN t0.c99 WHEN t0.c62 THEN t0.c99 ELSE t0.c99 END)), UNLIKELY(-2.028541364E9), (((t0.c62) ISNULL) IN (((t0.c99) IS FALSE))) FROM t0; -- 0ms;
SELECT ALL GROUP_CONCAT((((t0.c0)) BETWEEN ((t0.c62)) AND ((t0.c0)))) OVER (), NULL, ((((t0.c0)-(t0.c62))) BETWEEN ((((t0.c62)) NOT BETWEEN ((t0.c99)) AND ((t0.c62)))) AND (t0.c0)) FROM t0 WHERE ((((NULL IN ()))-(((((((((NULL)OR('1508122873')))OR(0.6635055884988087)))OR(NULL)))OR(0.5794914688791073))))); -- 1ms;
SELECT CAST((t0.c99 IN ()) AS INTEGER), ((((((((t0.c62 COLLATE RTRIM)OR((+ (t0.c99)))))OR(((t0.c62) NOT BETWEEN (t0.c99) AND (t0.c62)))))AND(((((((((t0.c99)OR(t0.c0)))OR(x'')))AND(t0.c0)))OR(t0.c62)))))AND(TRIM(DISTINCT t0.c99, t0.c62))), (x'' IN ()), (CASE WHEN t0.c62 THEN x'' ELSE x'b564' END IN (((t0.c99) BETWEEN (t0.c99) AND (t0.c62)))), (((t0.c0)) NOT BETWEEN ((((t0.c0)<<(t0.c62)))) AND ((((t0.c62)||('NaNc+'))))) FROM t0 WHERE ((((~ (0.7440028992686051)))+(((((0.2650549634726719)OR(0.9426113980940451)))AND(NULL))))) ORDER BY (((((t0.c0)IS NOT(t0.c99))))>((((t0.c0)==(t0.c99))))) DESC; -- 1ms;
SELECT DISTINCT CASE t0.c99 COLLATE BINARY  WHEN ((t0.c62)|(t0.c62)) THEN ((t0.c62)GLOB(t0.c99)) ELSE 0X66f85f45 END, ((LIKE('848150507', t0.c99))>>(AVG(t0.c99))), DATETIME((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c99, t0.c99, t0.c0)) AND ((t0.c62, t0.c0, t0.c0))), CASE t0.c99  WHEN t0.c0 THEN '-1740643341' WHEN t0.c99 THEN '' WHEN t0.c62 THEN 0.897134773665936 WHEN t0.c0 THEN t0.c0 WHEN t0.c62 THEN t0.c99 ELSE t0.c0 END, ((((t0.c0)AND('k	j<^')))AND(t0.c99)), 0x30d619ad, t0.c0, (((t0.c62))>((t0.c0))), ((t0.c0)!=(t0.c0))) FROM t0 GROUP BY ((((t0.c0, t0.c62, t0.c99))>((t0.c0, t0.c0, t0.c99))) IN (((((((((t0.c62)OR(x'')))OR(t0.c0)))OR(t0.c99)))AND(t0.c0)))) ORDER BY (((ABS(t0.c99), CAST(t0.c0 AS BLOB), CAST(t0.c0 AS BLOB)))>(((- (t0.c62)), 'aq', CASE WHEN t0.c62 THEN t0.c62 ELSE t0.c0 END))) DESC  NULLS FIRST, ((((t0.c99)GLOB(t0.c62)))*(((((t0.c62)OR(t0.c62)))OR(t0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((t0.c62, t0.c0, t0.c99)) NOT BETWEEN ((t0.c99, t0.c99, x'')) AND ((t0.c99, t0.c0, t0.c62))))<=((((t0.c62, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c99, 0x13bda63c)) AND ((t0.c62, t0.c62, t0.c0))))) FROM t0; -- 0ms;
SELECT SUM(t0.c0 COLLATE NOCASE COLLATE BINARY), ((((t0.c99) IS FALSE)) NOT BETWEEN (((t0.c99) NOT NULL)) AND (((t0.c0)<(t0.c99)))), CAST(CAST(t0.c0 AS REAL) AS NUMERIC) FROM t0 LIMIT -221351079; -- 0ms;
SELECT (UPPER(DISTINCT t0.c99) IN ()), ((MAX(t0.c0)) NOTNULL), (((+ (t0.c99))) IS FALSE) FROM t0 GROUP BY COALESCE(((t0.c62) IS TRUE), ((t0.c99)<=(t0.c62))) HAVING (~ (CAST(t0.c99 AS TEXT))) LIMIT -639919408 OFFSET 655909650; -- 0ms;
SELECT DISTINCT ((CAST(t0.c62 AS INTEGER))>=(NULL)) FROM t0 WHERE (((((((((('F~')OR('춌3C')))AND(0.4761548258305639)))AND(0.5221542052063042)))OR(7.35053287E8)) IN ())); -- 0ms;
SELECT MAX(((x'') IS TRUE), ((t0.c99) ISNULL)) FROM t0 WHERE (((((((0.6032554172971177)OR('')))AND('+]KeN&茓SN'))) NOT BETWEEN (((('0.43642008354338513')) NOT BETWEEN ((NULL)) AND (('()')))) AND (('now' IN ())))); -- 0ms;
SELECT ALL CASE WHEN (((t0.c0))>=((t0.c0))) THEN CASE WHEN '0.9051344478675435' THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END FROM t0 WHERE (((((CAST('1748993332' AS BLOB))OR('ID镥)s沈ﾹ' COLLATE NOCASE)))AND((((0.12113595339620564, NULL, -1861950070)) NOT BETWEEN ((x'a641', '1361486258', '181332936')) AND ((x'', '-327584958', NULL)))))); -- 0ms;
SELECT DISTINCT (((t0.c62) NOT BETWEEN (t0.c62) AND (t0.c99)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((NULL) ISNULL) AS REAL) FROM t0; -- 0ms;
SELECT ALL ((t0.c62) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('-545709608')))OR(t0.c0))) AND (((t0.c0) NOTNULL))) FROM t0 EXCEPT SELECT DISTINCT ((UPPER(t0.c0))=(x'')) FROM t0; -- 0ms;
SELECT DISTINCT ((NOT (t0.c99)) IN ()) FROM t0; -- 0ms;
SELECT (- (COUNT(*))), (((t0.c62)) BETWEEN (((((t0.c99))!=((t0.c62))))) AND ((t0.c99 COLLATE BINARY))), GROUP_CONCAT((- ('{u}3'))) OVER ( ORDER BY t0.c99 COLLATE NOCASE COLLATE NOCASE DESC ROWS  UNBOUNDED PRECEDING) FROM t0 LIMIT 1075858078 OFFSET 1607483419; -- 0ms;
SELECT DISTINCT x'' FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c62 AS TEXT))&(CASE t0.c62  WHEN t0.c99 THEN t0.c62 ELSE t0.c62 END)), ((((((t0.c0)OR(t0.c62)))OR(t0.c62))) NOT NULL), ((((t0.c62)GLOB(t0.c0)))<=(((((t0.c62)AND(t0.c99)))OR(t0.c99)))) FROM t0 WHERE ((((('-644686791') NOT BETWEEN (x'') AND (x'5642'))) NOT NULL)) ORDER BY ((((('-2028541364')>=(t0.c62))))<=((GLOB(t0.c0, 0.10071225603579359)))); -- 0ms;
SELECT DISTINCT '-1892337907' FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c99)|(x''))))<=((SUM(t0.c0)))) FROM t0; -- 0ms;
SELECT HEX(((t0.c0)IS NOT(t0.c0))), (- (((t0.c0)/(t0.c99)))), ((t0.c62)%(((t0.c62)||(t0.c99)))), ((CAST(t0.c0 AS NUMERIC)) IS TRUE), CASE WHEN t0.c62 COLLATE RTRIM THEN ((t0.c99) BETWEEN (t0.c99) AND (t0.c0)) END, (((t0.c0)) BETWEEN ((x'' COLLATE NOCASE)) AND ((t0.c0))), x'' FROM t0; -- 0ms;
SELECT DISTINCT t0.c62, ((t0.c99 COLLATE BINARY) ISNULL), ((((t0.c62) IS FALSE)) NOT BETWEEN (COUNT(*)) AND ((- (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c99 FROM t0; -- 0ms;
SELECT DISTINCT ((((((x'a92d')) NOT BETWEEN ((x'1109')) AND ((t0.c99)))))>((CAST(t0.c0 AS NUMERIC)))), t0.c62, SUM(t0.c62 COLLATE NOCASE) COLLATE RTRIM FROM t0 WHERE (CASE WHEN NULL THEN UNLIKELY(DISTINCT '-1202987217') WHEN CAST(-4.4520045E8 AS TEXT) THEN CASE x'5ab35d27'  WHEN NULL THEN '-445200450' END WHEN ((((x'')AND(x'')))OR('')) THEN (('')OR('662461219')) ELSE ((x'') IS TRUE) END) LIMIT -1946805991; -- 0ms;
SELECT DISTINCT CAST(NULL AS BLOB) FROM t0; -- 0ms;
SELECT ALL MAX('') FROM t0 LIMIT -6129204; -- 0ms;
SELECT DISTINCT (NOT (t0.c0)), (((t0.c0 IN (t0.c0, t0.c62))) IS FALSE), UNLIKELY(((t0.c62) NOT BETWEEN (t0.c99) AND (947486719))) FROM t0 GROUP BY (((((NOT (t0.c99)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c99 END)))OR((t0.c62 IN ()))) HAVING (+ (CASE t0.c62  WHEN t0.c62 THEN t0.c62 ELSE t0.c62 END)) LIMIT -142636673 OFFSET 970092202; -- 0ms;
SELECT (- (((t0.c99) ISNULL))), t0.c99 COLLATE RTRIM, SUM(((t0.c62)>=(t0.c0))) FROM t0 GROUP BY ((((t0.c0)LIKE(t0.c0)))<((t0.c0 IN (t0.c62)))); -- 0ms;
SELECT LEAD((((((((((((t0.c62)OR(t0.c99)))AND(t0.c0)))OR(x'')))AND(t0.c0))))<(((- (t0.c62))))), (((((t0.c62, t0.c62, t0.c99)) NOT BETWEEN ((t0.c62, x'', t0.c0)) AND ((t0.c0, t0.c99, t0.c0))))AND(CAST(t0.c62 AS NUMERIC))), (t0.c0 COLLATE RTRIM IN ())) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c62, t0.c62, t0.c62)) BETWEEN ((t0.c62, t0.c99, t0.c0)) AND ((t0.c99, t0.c99, t0.c0))))<(SQLITE_SOURCE_ID())) FROM t0 WHERE ('-1202987217') GROUP BY (((t0.c62, t0.c99, t0.c99)) NOT BETWEEN (((((t0.c0, t0.c99, 0.2054913197674716, NULL, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, NULL)) AND ((t0.c0, t0.c0, t0.c0, t0.c62, t0.c62))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c99)), ((t0.c62)OR(t0.c99)))) AND (((t0.c0 IN ()), t0.c62, CAST(t0.c99 AS TEXT)))), (0.8064784335140414 IN ()) COLLATE BINARY, ((((t0.c62) NOT BETWEEN (t0.c99) AND (t0.c0))) BETWEEN (((t0.c62)==(5.90828083E8))) AND (CAST('-846061994' AS INTEGER))) HAVING ((('!X4MP윻Jr') BETWEEN (t0.c99) AND (t0.c99)) IN ()); -- 0ms;
SELECT DISTINCT (((~ (t0.c62))) IS TRUE) FROM t0; -- 0ms;
SELECT ALL CASE ((t0.c0)>(t0.c99))  WHEN t0.c99 COLLATE NOCASE THEN ']4O횀' ELSE t0.c0 COLLATE RTRIM END FROM t0 ORDER BY (t0.c99 IN ()) DESC, (- (CASE t0.c99  WHEN t0.c99 THEN t0.c0 END)), ((t0.c62 COLLATE BINARY)<(((((((((((((t0.c0)OR(t0.c99)))OR(t0.c0)))OR(t0.c62)))AND(t0.c62)))OR(t0.c62)))AND(t0.c99)))) DESC; -- 0ms;
SELECT ALL (((((((((t0.c0 IN (t0.c99)))OR(t0.c99 COLLATE BINARY)))AND(CAST(t0.c62 AS REAL))))AND(t0.c62 COLLATE RTRIM)))AND(t0.c99 COLLATE NOCASE)) FROM t0 LIMIT -304190254; -- 0ms;
SELECT ((t0.c99) NOT BETWEEN (t0.c99) AND (t0.c62)) COLLATE BINARY FROM t0 WHERE (json_array(TRIM('-696336320'), LOWER(DISTINCT NULL))); -- 0ms;
SELECT DISTINCT ((((t0.c99) NOT BETWEEN (t0.c62) AND (t0.c62))) IS TRUE) FROM t0 WHERE ((- (CASE 0.1435818359350971  WHEN '1508122873' THEN NULL WHEN 0.08276924833074384 THEN 0xffffffff8c87bdb2 WHEN 0.28747945787331286 THEN '' END))) GROUP BY ((((t0.c62) NOT BETWEEN (t0.c0) AND (t0.c99)))-(TRIM(t0.c62))); -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((1e500) NOT BETWEEN ((NULL IN (0.36160548652356317, x''))) AND ('#0<I]C*m' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((t0.c99) ISNULL)) BETWEEN (AVG(t0.c0)) AND (((t0.c62) NOT NULL))) FROM t0 WHERE (0.8637770130605151); -- 0ms;
SELECT ALL (((((((t0.c99)OR(t0.c99)))AND(t0.c0))))<((CASE t0.c99  WHEN t0.c99 THEN t0.c62 ELSE t0.c62 END))), ('J(DE2' IN (((t0.c62) IS FALSE), t0.c62 COLLATE BINARY)), ((NULL COLLATE BINARY)>((t0.c99 IN ()))) FROM t0; -- 0ms;
SELECT ALL t0.c0 FROM t0 WHERE ((((('2112697749')) NOT BETWEEN ((0.6450917344361357)) AND ((NULL))) IN (((-1.7976931348623157E308)<<(0.5050869346826695))))) GROUP BY ((((t0.c99) IS TRUE))/(CAST(t0.c62 AS REAL))) HAVING TOTAL(-5.00623282E8) COLLATE BINARY; -- 0ms;
SELECT (t0.c0 IN ()) COLLATE RTRIM, 1480728420, COUNT(((t0.c99) BETWEEN (t0.c0) AND (t0.c62))) OVER ( ORDER BY ((((((((((((x'')OR(t0.c99)))AND(t0.c62)))OR(((0x5deeedeb) BETWEEN (t0.c0) AND (0.5681961242806471)))))OR(((t0.c99) IS TRUE))))AND((+ (t0.c99)))))AND((t0.c0 IN ())))) FROM t0; -- 0ms;
SELECT COUNT(((t0.c0)&(t0.c99))) OVER (), t0.c99, CASE ''  WHEN (((t0.c0))>((t0.c62))) THEN (((t0.c62))<((0.897134773665936))) ELSE (t0.c0 IN (t0.c99, t0.c99)) END FROM t0 WHERE (((NULL)!=('1k[')) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT CAST(CAST(t0.c0 AS BLOB) AS TEXT) FROM t0 WHERE (((-4.4520045E8)!=(0.8366055499471406)) COLLATE BINARY); -- 0ms;
SELECT ALL (- (((t0.c62) ISNULL))) FROM t0 WHERE (LIKELY(((1.936174602E9) BETWEEN (NULL) AND (NULL)))); -- 0ms;
SELECT DISTINCT (((t0.c99)) BETWEEN ((CASE t0.c62  WHEN t0.c99 THEN t0.c99 END)) AND ((((t0.c62)=(t0.c62))))) FROM t0 WHERE ((((('161912420' COLLATE BINARY)OR('5n.摺' COLLATE RTRIM)))OR((0.2650549634726719 IN ())))); -- 0ms;
SELECT ALL AVG('859786875') OVER () FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, CAST(t0.c0 AS NUMERIC), (((CASE WHEN t0.c99 THEN t0.c99 WHEN t0.c62 THEN t0.c99 WHEN t0.c62 THEN t0.c62 END, (~ (t0.c99)), t0.c62 COLLATE NOCASE))>((t0.c99, ((t0.c99)|(t0.c99)), LIKELIHOOD(DISTINCT '', 0.0756490923124622)))) FROM t0 WHERE (((((NULL)!=(' )~S<Jw蹮%'))) NOT BETWEEN (((x'') IS TRUE)) AND (0.05866911743669856 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT t0.c99 COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL (((t0.c0 IN (t0.c99)))>=(((t0.c62)<(t0.c99)))) FROM t0 WHERE (CAST(((NULL)>=('-1188225893')) AS REAL)); -- 0ms;
SELECT DISTINCT ('1651952593' IN (((t0.c99) NOT BETWEEN (t0.c62) AND (t0.c99)))) FROM t0; -- 0ms;
SELECT QUOTE((((t0.c0))<((t0.c99)))), ((((t0.c99 COLLATE NOCASE)OR(CAST(t0.c99 AS REAL))))AND(((((t0.c62)OR(x'')))AND(t0.c99)))), LOWER(DISTINCT ((t0.c99) NOT BETWEEN (t0.c0) AND (0.1473849041789873))) FROM t0 WHERE ((((((NULL, NULL, '')) NOT BETWEEN (('2033154243', 425533311, '-441765661')) AND (('', -1.373960096E9, '6['))))%(LIKELY(DISTINCT x'')))); -- 0ms;
SELECT DISTINCT (CASE WHEN t0.c99 THEN t0.c99 ELSE t0.c62 END IN ()), (((((t0.c62)+(t0.c62))))>((t0.c0))), CAST(CASE t0.c99  WHEN t0.c0 THEN t0.c99 END AS BLOB), (t0.c62 IN ()) COLLATE BINARY, (((SUM(t0.c62)))>((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c99 THEN t0.c0 WHEN t0.c62 THEN t0.c99 ELSE t0.c99 END))) FROM t0; -- 0ms;
SELECT ALL -1822901845, ((0.28747945787331286) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.28938323832111257)) AND (((x'')*(t0.c0)))), ((t0.c62) NOT BETWEEN (t0.c99) AND (t0.c62)) COLLATE RTRIM FROM t0 WHERE (CAST(((x'')%(0.7904460181623585)) AS REAL)); -- 0ms;
SELECT DISTINCT ((((t0.c0) ISNULL)) BETWEEN (0.4875148702008252 COLLATE NOCASE) AND (CAST(t0.c0 AS TEXT))) FROM t0 WHERE ((((x'' IN (NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((t0.c0)OR(t0.c0)))OR(t0.c99)) COLLATE NOCASE FROM t0 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT ALL SUM((~ (t0.c0))) FROM t0 LIMIT 1398062173 OFFSET 811297094; -- 0ms;
SELECT DISTINCT CAST(((t0.c62)=(-693143123)) AS REAL) FROM t0 NOT INDEXED WHERE ((- (((0.32222913393688657)GLOB('1992819711'))))); -- 0ms;
SELECT ALL t0.c62 FROM t0 WHERE (((((((NULL)OR('0b[2%')))OR(((0.4211063504218123) BETWEEN (x'') AND ('J(')))))AND(COALESCE(NULL, x'')))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY t0.c99), (((t0.c99, t0.c0, t0.c62)) NOT BETWEEN (((+ (t0.c62)), '-1417461297', t0.c62)) AND ((t0.c99 COLLATE BINARY, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c99)), CAST(t0.c99 AS INTEGER)))), ((((t0.c62)%(t0.c0))) NOTNULL) FROM t0; -- 0ms;
SELECT (((t0.c62)) BETWEEN ((' )~S<Jw蹮%')) AND ((((t0.c62)IS(t0.c99))))), ((((t0.c99 IN ()), (0.531279232238208 IN ()), CASE WHEN t0.c0 THEN t0.c62 ELSE t0.c0 END))>((((t0.c0) NOTNULL), INSTR(t0.c0, t0.c0), ((((t0.c0)AND(t0.c62)))OR(t0.c0))))), LAG(load_extension((+ (t0.c99)), ((t0.c62)/(t0.c0))), (load_extension(0.3342963568477233) IN (NULL, ((((t0.c62)AND(t0.c0)))OR(t0.c62)))), ((((((t0.c62) BETWEEN (0Xfffffffff6e7bdd5) AND (t0.c0)))AND(t0.c99 COLLATE RTRIM)))OR((t0.c0 IN ())))) OVER () FROM t0;SELECT DISTINCT (+ ((((t0.c99)) NOT BETWEEN (('-2114393167')) AND ((t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c62 FROM t0; -- 0ms;
SELECT ALL ((((t0.c62)==(t0.c62))) BETWEEN (NULL) AND (((t0.c62) NOT BETWEEN (t0.c62) AND (t0.c99)))), (((t0.c99) ISNULL) IN ((t0.c0 IN ()))), (((((t0.c0)) NOT BETWEEN ((t0.c62)) AND ((t0.c99))))>>((((t0.c99))>=((t0.c99))))) FROM t0; -- 0ms;
SELECT ALL t0.c62, CAST(t0.c99 AS REAL), GROUP_CONCAT(CASE t0.c0  WHEN NULL THEN t0.c0 END) OVER () FROM t0 WHERE ((((('-1219234931')&('n팓'))) NOT BETWEEN ((~ (''))) AND (((((NULL)OR(x'7bd2')))AND(NULL))))); -- 0ms;
SELECT DISTINCT (+ (((t0.c0)>>(t0.c99)))), CASE WHEN '1633197519' THEN ((t0.c99) BETWEEN (t0.c62) AND (t0.c0)) ELSE ((t0.c62) NOT BETWEEN (t0.c99) AND (t0.c0)) END, ((((('201227116')) BETWEEN ((t0.c0)) AND ((t0.c0))))GLOB(GROUP_CONCAT(t0.c0))) FROM t0 WHERE (JULIANDAY(((x'')/('-792793311')), ((((((((0.5040378129162466)AND('-16578192')))AND(x'')))AND('91612495')))AND(x'')), ((x'') ISNULL), UNLIKELY('Bלּ'), (- ('-1769136019')))); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c99 THEN t0.c99 END COLLATE RTRIM FROM t0 GROUP BY ((((t0.c62) IS TRUE))>(((t0.c0)!=(t0.c99)))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t0 WHERE ((('C.4B!f') NOT NULL)); -- 0ms;
SELECT DISTINCT TIME(((x'64f4')IS NOT('|\rEZ')), t0.c62, ((t0.c62) IS TRUE), (((NULL))<=((t0.c99))), ('-1373960096' IN ())), ((((NOT (t0.c0)), (~ (t0.c99)), ((t0.c0)/(t0.c62))))>=(((t0.c0 IN ('\ni')), 0x6bdd4271, ((t0.c62)GLOB(t0.c0))))), CAST(((x'eef5') NOT BETWEEN (t0.c0) AND (t0.c99)) AS TEXT) FROM t0 WHERE (((('1722808898', x'', -2.028541364E9)) BETWEEN ((HEX(NULL), TOTAL_CHANGES(), ((NULL)==(0.8634182916408553)))) AND ((((x'')!=(0xffffffff9241fa62)), 0.8713196860898952 COLLATE NOCASE, ((NULL)LIKE('')))))) ORDER BY ((((((t0.c99) NOT BETWEEN (t0.c62) AND (t0.c62)))OR((- (t0.c99)))))OR(MIN(t0.c62, t0.c99, t0.c62, t0.c99))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT ((AVG(t0.c62))AND(MIN(t0.c99))) FROM t0; -- 0ms;
SELECT DISTINCT load_extension(((t0.c0)||(t0.c0))), ((t0.c0) IS FALSE) COLLATE NOCASE, UNLIKELY((((t0.c62, t0.c99, t0.c99))>((t0.c99, t0.c0, t0.c62)))) FROM t0 WHERE ((((((('-1115263682')AND('1789596641')))AND(0.5005252026293953))) BETWEEN ((((('-E')OR(x'd9b0')))OR(0.2977556119052984))) AND (((NULL) NOT BETWEEN (NULL) AND ('M6'))))) GROUP BY 1710032260 ORDER BY CAST(((t0.c0) NOTNULL) AS INTEGER);SELECT DISTINCT (NOT (((t0.c99)IS NOT(t0.c62)))) FROM t0 WHERE ('-192557021'); -- 0ms;
SELECT DISTINCT ABS(MAX(t0.c0, t0.c62)) FROM t0; -- 0ms;
SELECT (((t0.c62 IN ()))IS((+ (t0.c0)))) FROM t0 WHERE (CASE WHEN CASE WHEN x'' THEN x'' END THEN ((NULL)AND('-')) WHEN (0.42662945041248 IN ()) THEN -84572931 WHEN (('~\xRՃoKࡠi')-(x'f968c1f8')) THEN '' COLLATE RTRIM WHEN (NOT (0Xfffffffffaac7d80)) THEN (((((((('1677242002')OR(x'fb73')))AND('\nmWT>')))AND(NULL)))AND(0x3ab6ed16)) WHEN NULL COLLATE RTRIM THEN ((0.10488505941954995) IS TRUE) ELSE CASE 0.7351280115021165  WHEN 'o	xt.8' THEN x'' END END); -- 0ms;
SELECT DISTINCT ((((t0.c62) NOT BETWEEN (t0.c0) AND (t0.c99))) BETWEEN (CASE t0.c99  WHEN 0.970606163829435 THEN t0.c99 WHEN t0.c0 THEN t0.c62 WHEN t0.c62 THEN t0.c62 END) AND (0.8886112742313363)) FROM t0 ORDER BY t0.c99 DESC; -- 0ms;
SELECT DISTINCT (((t0.c62) NOT BETWEEN (NULL) AND (t0.c0)) IN ()), (- (((t0.c99)IS(t0.c0)))), ((((((t0.c0)IS(x'494c')))AND(TOTAL(''))))AND((t0.c62 IN (t0.c0)))) FROM t0 WHERE ((- (CAST('1676142181' AS INTEGER)))); -- 0ms;
SELECT DISTINCT t0.c99 FROM t0 WHERE (CAST(CAST('-111200714' AS TEXT) AS REAL)) ORDER BY CASE t0.c99  WHEN ((t0.c62)IS(t0.c62)) THEN (((t0.c62)) BETWEEN ((t0.c0)) AND ((t0.c62))) ELSE t0.c62 END ASC  NULLS FIRST; -- 0ms;
SELECT CAST(((((((((t0.c62)OR(t0.c62)))AND(t0.c62)))AND(t0.c62)))OR(t0.c0)) AS NUMERIC) FROM t0 ORDER BY NULLIF(CASE WHEN 0.3659467406601643 THEN t0.c62 END, CAST(t0.c62 AS BLOB)) LIMIT 1518413171; -- 0ms;
SELECT DISTINCT 0.2472655513791876 FROM t0; -- 1ms;
SELECT DISTINCT (NOT (COUNT(*))) FROM t0 WHERE (CASE ((x'') ISNULL)  WHEN json('871843311') THEN (x'fc3d' IN ()) ELSE CASE 0.1201062915475124  WHEN x'' THEN NULL WHEN '' THEN 0.21182007562434146 WHEN 0.30597887085554976 THEN '0.817467575253893' ELSE 0.153499781777084 END END) LIMIT 150115685 OFFSET -2099411652; -- 0ms;
SELECT ALL (((t0.c62) NOT BETWEEN (t0.c62) AND (t0.c62)) IN (SUM(t0.c0), t0.c62 COLLATE RTRIM)) FROM t0 LIMIT -179894434 OFFSET 1639197178; -- 0ms;
SELECT ALL (+ (AVG(t0.c0))) FROM t0 GROUP BY (((((t0.c62, t0.c99, t0.c0)) BETWEEN (('286972703', t0.c99, t0.c0)) AND ((t0.c62, t0.c62, x'3f3f'))))>(((t0.c0) NOTNULL))); -- 0ms;
SELECT (((~ ('FALSE'))) IS TRUE), AVG(((t0.c99)-(t0.c62)) COLLATE NOCASE) OVER (), (((((((((('0.44254425691623533')AND(t0.c99)))OR(t0.c0)))AND(t0.c99)))AND('y')))AND(((t0.c99) NOT BETWEEN (t0.c99) AND (NULL)))) FROM t0 WHERE (LIKELY(x'') COLLATE NOCASE); -- 0ms;
SELECT ALL (((t0.c0, t0.c62, MIN(t0.c0)))=((GROUP_CONCAT(t0.c99), 0.9479269771853498, 'F~'))), (CASE t0.c62  WHEN t0.c99 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c99 THEN t0.c62 END IN ()), CASE WHEN t0.c99 COLLATE BINARY THEN ((t0.c99) BETWEEN (t0.c62) AND (t0.c62)) WHEN json(t0.c0) THEN GROUP_CONCAT(t0.c99) WHEN ((t0.c99) NOT BETWEEN (t0.c99) AND (t0.c99)) THEN NULL COLLATE RTRIM ELSE ((((((((t0.c0)AND(t0.c0)))AND(t0.c62)))OR(t0.c62)))AND(t0.c0)) END FROM t0 WHERE ((- (0.6032554172971177 COLLATE NOCASE))) GROUP BY ((t0.c0 COLLATE BINARY) BETWEEN ((('z*W*')>(t0.c99))) AND (((t0.c62) ISNULL))) HAVING ((CAST(t0.c99 AS NUMERIC))-(MIN(t0.c0))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c62)) IS FALSE) FROM t0; -- 0ms;
SELECT (CAST(t0.c0 AS TEXT) IN ()) FROM t0; -- 0ms;
SELECT LAST_VALUE(((('-500623282' IN (t0.c99, t0.c0))) NOT BETWEEN ((((t0.c99))==((t0.c99)))) AND (((t0.c99) NOT BETWEEN (t0.c62) AND (t0.c62))))) OVER () FROM t0; -- 0ms;
SELECT (((t0.c99)IS(t0.c62)) IN ((((t0.c0)) NOT BETWEEN ((t0.c62)) AND ((t0.c0))), ((t0.c0) NOTNULL))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c62)OR(t0.c99)))OR(t0.c0))) ISNULL) FROM t0 WHERE ((((((((((x'')AND(0.6348184943497132)))OR(x'')))OR(0Xb8691a0)))OR(0.09882889587612742)) IN ())); -- 0ms;
SELECT DISTINCT t0.c99 FROM t0 WHERE (((((((NULL)/('1548615121')))AND(CASE WHEN '0.5449472759081149' THEN -1631316053 WHEN x'0eb1' THEN '' WHEN '1936174602' THEN NULL WHEN -7.83520632E8 THEN '-1188225893' WHEN NULL THEN 'ぜ10' ELSE 5.90828083E8 END)))AND(((0.28819985613409727) NOT NULL)))); -- 0ms;
SELECT DISTINCT CAST((((t0.c99))<=((t0.c62))) AS BLOB) FROM t0 WHERE (((x'')LIKE(0Xffffffffa40b8606)) COLLATE NOCASE); -- 0ms;
SELECT ((((t0.c62)||(t0.c0)))>>(CAST(t0.c0 AS NUMERIC))), ((SUM(t0.c0)) NOT BETWEEN (CAST(t0.c62 AS REAL)) AND ((~ (t0.c99)))), (NULL IN (CASE WHEN t0.c0 THEN t0.c99 WHEN t0.c0 THEN t0.c99 WHEN t0.c62 THEN t0.c99 ELSE t0.c62 END)) FROM t0; -- 0ms;
SELECT DISTINCT MAX(CASE WHEN t0.c0 THEN t0.c62 ELSE t0.c62 END), ((CAST(t0.c99 AS BLOB))/(t0.c62 COLLATE NOCASE)), ((0.8505889651117039) IS FALSE) FROM t0; -- 0ms;
SELECT ((CAST(t0.c0 AS TEXT)) IS TRUE) FROM t0; -- 0ms;
SELECT SUM(t0.c0) FROM t0 GROUP BY (- (((t0.c0)OR(t0.c99)))) HAVING ((json_type(t0.c99)) IS TRUE);SELECT DISTINCT ((((t0.c99)>=(t0.c62)))<((t0.c99 IN (t0.c62, t0.c62)))), ((t0.c0)||(MIN(t0.c62))), MIN(GROUP_CONCAT((((t0.c0))>=((t0.c62))))) FROM t0 WHERE (((((0.9727922806484453)OR(NULL COLLATE RTRIM)))OR(x'' COLLATE RTRIM)));SELECT ALL -1696848846 FROM t0; -- 0ms;
SELECT (x'' IN ()) FROM t0 WHERE (((CASE WHEN x'' THEN '쀗菨' END) NOT BETWEEN (CASE -0.0  WHEN -1.631316053E9 THEN 0.7906281967498158 END) AND (((('0.12113595339620564')) BETWEEN (('384437302')) AND ((-7.92793311E8)))))); -- 0ms;
SELECT ALL (((t0.c62))=((t0.c62))) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c99)<(x'')) IN (t0.c62)) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), (((CASE t0.c0  WHEN t0.c62 THEN t0.c62 ELSE t0.c0 END))<((t0.c62 COLLATE RTRIM))), CAST(NULL AS TEXT) FROM t0; -- 0ms;
SELECT ((- (0.790068638251546)) IN ()) FROM t0; -- 0ms;
SELECT LEAD(t0.c0, (- (NULL COLLATE RTRIM)), ((CAST(t0.c99 AS BLOB)) BETWEEN (((t0.c62)|(t0.c62))) AND (CAST(t0.c0 AS NUMERIC)))) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE GROUP), MAX(((t0.c99)=(t0.c0))), ((((t0.c99)AND(t0.c62)))OR(t0.c0)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL CAST(CAST(t0.c0 AS INTEGER) AS REAL) FROM t0 WHERE (CASE '1809662577'  WHEN CAST('681163510' AS NUMERIC) THEN ((NULL) IS FALSE) END); -- 0ms;
SELECT ALL ((((((((((((t0.c99)AND(t0.c62)))AND(t0.c99)))OR(t0.c99)))OR('\u')))OR((~ (t0.c62)))))AND(t0.c62 COLLATE RTRIM)) FROM t0 ORDER BY ((CAST(t0.c62 AS INTEGER)) NOTNULL) ASC; -- 0ms;
SELECT (((((t0.c0))>((t0.c62))))GLOB(CASE WHEN t0.c62 THEN t0.c0 ELSE t0.c99 END)) FROM t0; -- 0ms;
SELECT x'', t0.c99, json_array((t0.c99 IN ()), MIN(t0.c0)) FROM t0 GROUP BY CAST(t0.c99 AS INTEGER) COLLATE NOCASE, ((CASE t0.c0  WHEN t0.c99 THEN NULL WHEN t0.c0 THEN t0.c62 WHEN '1857109698' THEN t0.c99 END) NOT BETWEEN (CAST(NULL AS TEXT)) AND (CAST(t0.c0 AS NUMERIC))), TOTAL_CHANGES();SELECT (t0.c0 IN ()), ((t0.c99) ISNULL), ((((CAST(t0.c0 AS NUMERIC))AND(((t0.c99)==(t0.c0)))))OR((- (t0.c0)))) FROM t0 WHERE (SQLITE_VERSION()); -- 0ms;
SELECT DISTINCT (NOT (((t0.c0)OR(t0.c62)))) FROM t0 WHERE (CASE WHEN CASE WHEN x'' THEN 0.3045580201952488 END THEN CASE WHEN 0.9426113980940451 THEN x'' ELSE '' END WHEN '1008978947' COLLATE RTRIM THEN ((((x'')AND('247002231')))AND(0Xca9cfa7)) WHEN (NOT (0.3571646720332229)) THEN COALESCE(DISTINCT x'78ea', 0.04300163229001985, 'Gw', 0.45276800111962745, '1199638881', 0xbe6e95e) END); -- 0ms;
SELECT ((((((((((((CASE WHEN t0.c99 THEN t0.c62 WHEN t0.c62 THEN t0.c99 WHEN t0.c99 THEN '-2028541364' END)OR('425096311')))AND(((t0.c62) BETWEEN ('503410054') AND (t0.c0)))))OR(t0.c99)))OR(t0.c62)))OR(COUNT(*))))OR(((t0.c99) NOT BETWEEN (t0.c62) AND (t0.c0)))), ((t0.c0) NOT BETWEEN (((t0.c62)||(t0.c99))) AND (t0.c0)), GROUP_CONCAT(((t0.c0) BETWEEN (NULL) AND (t0.c62))) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c62 COLLATE RTRIM)/(CASE t0.c99  WHEN t0.c0 THEN t0.c0 END)), ((((t0.c0)AND((NULL IN ()))))AND(CASE WHEN t0.c0 THEN NULL ELSE t0.c0 END)), ((((((((t0.c99 COLLATE NOCASE)AND((- (t0.c62)))))OR(((t0.c99)-(t0.c0)))))OR((((0.11058283540560199, 1.120039566E9, 0.9312356918327062)) BETWEEN ((t0.c0, t0.c62, t0.c99)) AND ((t0.c0, t0.c0, t0.c62))))))AND(((t0.c99) NOT BETWEEN (t0.c0) AND (t0.c62)))) FROM t0 WHERE (((CASE -9.54327085E8  WHEN x'' THEN NULL ELSE x'' END) ISNULL)) ORDER BY ((((t0.c0) NOT NULL)) NOT NULL) DESC, CAST((((t0.c0, t0.c99, t0.c0))>=((t0.c0, t0.c0, t0.c62))) AS REAL); -- 0ms;
SELECT DISTINCT x'' FROM t0 WHERE (CAST((('62')/(0.05620052396991515)) AS TEXT)); -- 0ms;
SELECT NTH_VALUE(((NOT (t0.c62)) IN ()), ((t0.c62 COLLATE BINARY) BETWEEN (CAST(t0.c0 AS BLOB)) AND (NULL))) OVER () FROM t0 WHERE (TYPEOF(NULL)); -- 0ms;
SELECT DISTINCT t0.c0, CAST(((t0.c99)-(t0.c99)) AS BLOB), SUM(((t0.c99) NOT BETWEEN (t0.c62) AND (t0.c0))) FROM t0 WHERE (UNICODE('' COLLATE BINARY)); -- 0ms;
SELECT DISTINCT LENGTH(((t0.c62) IS TRUE)), ((t0.c0) NOT NULL) COLLATE RTRIM, (((((t0.c0) NOT BETWEEN (t0.c99) AND (t0.c99))))<>((((t0.c0) BETWEEN (t0.c99) AND (NULL))))) FROM t0 WHERE (COALESCE(DISTINCT (('') BETWEEN (0.7295490411487775) AND (0X5300cd6f)), CAST(NULL AS TEXT))) GROUP BY HEX(('' IN ())) HAVING CAST(t0.c0 COLLATE NOCASE AS REAL); -- 0ms;
SELECT DISTINCT SUBSTR(((t0.c62) IS TRUE), ((t0.c0)-('h/'))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c99 AS TEXT) COLLATE NOCASE, HEX(t0.c62 COLLATE NOCASE), CAST(((t0.c62)|(t0.c99)) AS NUMERIC) FROM t0 ORDER BY ((-1204432561) IS FALSE) ASC; -- 0ms;
SELECT ALL (t0.c0 COLLATE NOCASE IN ()), (MAX(t0.c99) IN (CAST(t0.c0 AS REAL))), FIRST_VALUE(((t0.c62) ISNULL)) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0)||((~ (t0.c99)))), ((json_insert(t0.c62, t0.c99, NULL))+(((t0.c0)<>(t0.c0)))), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c99 WHEN 0.15257772981648587 THEN t0.c0 END)/((t0.c62 IN ()))), CAST(CAST(t0.c0 AS BLOB) AS NUMERIC), COUNT(*) OVER () FROM t0 WHERE (((((((x'')<<(NULL)))AND(('0.38793818319606566' IN ()))))AND(LIKELY('597242376')))); -- 0ms;
SELECT ALL ((MAX(x'')) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT UNICODE(CASE WHEN 0.347099784030388 THEN t0.c62 ELSE t0.c62 END) FROM t0 ORDER BY CAST(CAST(t0.c62 AS NUMERIC) AS TEXT) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((t0.c99)>=(((t0.c99) IS FALSE))) FROM t0 WHERE (((x'5640caa7') NOT BETWEEN ('0.12113595339620564') AND (NULL)) COLLATE BINARY) LIMIT -1373960096 OFFSET -1328346972; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((t0.c0)) NOT BETWEEN ((((t0.c0)%(t0.c0)))) AND ((((t0.c99)AND(t0.c0)))))) OVER (), (((NOT (t0.c0))) NOT BETWEEN (json_array_length(t0.c99)) AND (CASE NULL  WHEN t0.c0 THEN t0.c62 WHEN t0.c99 THEN t0.c99 WHEN t0.c0 THEN t0.c0 END)), DENSE_RANK() OVER () FROM t0; -- 0ms;
SELECT ALL 0.5838277740798489 FROM t0; -- 0ms;
SELECT ALL MIN(((t0.c0) BETWEEN (t0.c99) AND ('GxV0o白S'))), (((t0.c62)) NOT BETWEEN ((((t0.c0) ISNULL))) AND ((json_array_length(t0.c99, t0.c99)))), ABS(CAST(t0.c99 AS REAL)) FROM t0 WHERE ((((('0.13226773635027778')IS(1508122873))) BETWEEN (LIKELY(DISTINCT '')) AND (((-1571518977) NOT NULL)))); -- 0ms;
SELECT DISTINCT t0.c99 FROM t0; -- 0ms;
SELECT ALL (('584890123')/(t0.c0 COLLATE BINARY)) FROM t0 WHERE ((((2026889060 IN ())) BETWEEN (CASE WHEN 0x7a119e41 THEN NULL END) AND (((x'') NOT NULL)))) GROUP BY t0.c62, ((((CASE WHEN t0.c99 THEN t0.c99 ELSE t0.c99 END)AND(((t0.c0)LIKE(t0.c0)))))OR((+ (t0.c99)))), CASE WHEN NULL THEN CAST(t0.c99 AS BLOB) ELSE ((t0.c62)/(t0.c0)) END; -- 0ms;
SELECT DISTINCT ((LOWER('Qᡎ!mjAc')) ISNULL) FROM t0 WHERE (TOTAL_CHANGES()) ORDER BY t0.c99; -- 0ms;
SELECT ALL (CAST(t0.c0 AS TEXT) IN ()) FROM t0 ORDER BY UPPER(DISTINCT ((t0.c62) NOT BETWEEN (t0.c0) AND (t0.c99))) ASC; -- 0ms;
SELECT DISTINCT CASE WHEN 0.13405648269967496 THEN ((t0.c99)LIKE(t0.c99)) ELSE ((t0.c0) BETWEEN (t0.c62) AND (t0.c62)) END FROM t0; -- 0ms;
SELECT (t0.c99 IN ()), ((((t0.c0 COLLATE NOCASE)OR(((t0.c99) BETWEEN ('') AND (t0.c62)))))AND(((t0.c99)AND(t0.c62)))), TOTAL((t0.c62 IN ())) OVER () FROM t0 WHERE (((((- (x'')), (- (x'')), (+ (0Xffffffffaff0b9c9))))>(((('640856691')|('\ni')), ((((x'624b')AND('')))OR('4L')), (('1136053825') BETWEEN (x'') AND (0.7963815715110446)))))); -- 0ms;
SELECT HEX(DISTINCT CASE WHEN t0.c0 THEN t0.c62 ELSE t0.c99 END) FROM t0 WHERE (((((((((((NULL)AND(2.8286679586491187E18)))AND(0X635e8f89)))AND(x'')))AND(1338045968))) NOT BETWEEN (CASE WHEN '289338938' THEN '1612420934' END) AND ((0.024201303726151924 IN ())))) ORDER BY (+ ((+ (t0.c62)))) DESC  NULLS FIRST, CASE ((t0.c62) IS TRUE)  WHEN CASE t0.c62  WHEN t0.c99 THEN t0.c99 WHEN t0.c0 THEN t0.c0 WHEN t0.c99 THEN t0.c0 END THEN t0.c99 ELSE (+ (t0.c0)) END  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST((((t0.c0))<=((t0.c0))) AS BLOB), ((((t0.c99) IS FALSE))<(((t0.c62) IS TRUE))), ((((t0.c62 COLLATE NOCASE)OR(t0.c62 COLLATE RTRIM)))AND(t0.c62)), t0.c99, (x'' IN ()) COLLATE NOCASE FROM t0 WHERE (((NULL) BETWEEN (('-1932680866' IN ())) AND ((((0.47940483088709385))<((NULL)))))); -- 0ms;
SELECT DISTINCT ((((((t0.c99)OR('')))AND(t0.c62)))<=(((x'd31d') NOT BETWEEN (t0.c62) AND (t0.c99)))) FROM t0; -- 1ms;
SELECT DISTINCT ((CASE WHEN t0.c62 THEN t0.c62 END)|(((t0.c62)AND(t0.c62)))), t0.c0, ((MAX(t0.c0))GLOB(((((t0.c0)AND(t0.c99)))OR(t0.c62)))) FROM t0; -- 0ms;
SELECT DISTINCT (('') BETWEEN ((((t0.c62, t0.c62, t0.c0))>((t0.c62, t0.c0, t0.c0)))) AND ((((t0.c62, t0.c62, t0.c99)) BETWEEN ((t0.c0, t0.c99, t0.c62)) AND ((t0.c0, t0.c0, t0.c0))))) FROM t0 LIMIT -1174266729 OFFSET -384690013; -- 0ms;
SELECT DISTINCT ((t0.c0)>=(t0.c62)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL ((((t0.c0)+(t0.c0)))+(t0.c62)) FROM t0 WHERE ((((('vD') IS FALSE)) NOT BETWEEN (CAST(x'' AS BLOB)) AND (CASE WHEN x'' THEN NULL END))) GROUP BY CAST(json_remove(t0.c0, t0.c99) AS BLOB);SELECT DISTINCT ((CASE WHEN t0.c62 THEN t0.c99 END)IS NOT(TOTAL(t0.c99))) FROM t0 WHERE (NULL); -- 0ms;
SELECT ((CAST(t0.c99 AS INTEGER)) NOT BETWEEN (COUNT(t0.c62)) AND (GROUP_CONCAT(t0.c99))), ((NULL) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c62 WHEN t0.c62 THEN t0.c0 WHEN t0.c99 THEN t0.c62 END) AND ((~ (t0.c62)))), 'x42/2M9.', ((CASE WHEN t0.c0 THEN t0.c0 END) IS FALSE), TRIM(CAST(t0.c99 AS BLOB)) FROM t0; -- 1ms;
SELECT ALL ((((t0.c0)<('')))OR((((t0.c99))<((t0.c62))))), CASE WHEN ((t0.c62)>>(t0.c62)) THEN ((t0.c62) NOTNULL) WHEN ((t0.c0)<(t0.c99)) THEN ((((((((t0.c62)AND(t0.c99)))OR(t0.c62)))AND(t0.c62)))AND(t0.c0)) WHEN x'' THEN COALESCE(t0.c99, t0.c99, t0.c62, t0.c99, t0.c99, t0.c62) END, COUNT(t0.c99) OVER () FROM t0 GROUP BY x''; -- 0ms;
SELECT ALL ((MIN(t0.c99)) NOTNULL), ((t0.c0 COLLATE BINARY) ISNULL), CAST(x'' AS BLOB) FROM t0 ORDER BY ((CASE t0.c99  WHEN 0.545155960010827 THEN t0.c0 ELSE t0.c0 END)IS NOT((((t0.c0, t0.c99, t0.c0))=((t0.c62, t0.c0, x'')))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (CASE t0.c99  WHEN t0.c99 THEN t0.c99 END IN ()), GROUP_CONCAT(CAST(t0.c99 AS INTEGER) COLLATE RTRIM), (((t0.c99)) NOT BETWEEN (((t0.c0 IN ()))) AND ((t0.c62 COLLATE BINARY))) FROM t0 INDEXED BY i48 WHERE (CASE WHEN ((('-1459170433')) NOT BETWEEN ((NULL)) AND (('982328128'))) THEN (((NULL, NULL, x'b631')) BETWEEN ((x'', NULL, x'')) AND ((-311339311, NULL, 0.4140623085245545))) WHEN ((0Xffffffffc0050bf2) NOT BETWEEN ('~') AND (1762187880)) THEN (('qB镥I<x')*(x'359c')) WHEN ((-3.85921051E8)||(0.7201972690681938)) THEN CASE -252343604  WHEN x'431f' THEN x'0e01' ELSE NULL END ELSE -1.566243517E9 COLLATE RTRIM END);SELECT DISTINCT TRIM(DISTINCT x'1364', CAST(t0.c62 AS BLOB)) FROM t0 WHERE ((((((('zLu+	m ') NOTNULL))OR(CASE 0.26367516218482057  WHEN 0.2257030140184516 THEN '-1153524311' WHEN x'684d' THEN -1694243588 WHEN NULL THEN 'ฺ' END)))OR((('') NOT NULL)))); -- 0ms;
SELECT ALL FIRST_VALUE(x'') OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c99 AS REAL)) BETWEEN (COUNT(x'')) AND (t0.c62 COLLATE BINARY)), ((t0.c62) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM, ((MAX(t0.c62)) ISNULL) FROM t0; -- 0ms;
SELECT ALL t0.c99 FROM t0 WHERE (CAST(UPPER(0.06429228407386567) AS REAL)); -- 0ms;
SELECT DISTINCT ((((((((('')AND(t0.c0)))OR(t0.c99)))AND(t0.c99)))AND(t0.c62)) IN (UPPER(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT CASE ((t0.c0) NOTNULL)  WHEN t0.c99 THEN ((((t0.c0)AND(t0.c99)))AND(t0.c0)) WHEN t0.c0 COLLATE BINARY THEN NULLIF(t0.c99, t0.c0) WHEN ((t0.c62) BETWEEN (t0.c99) AND (t0.c0)) THEN t0.c62 END FROM t0 WHERE ((816001178 COLLATE NOCASE IN ())); -- 0ms;
SELECT ALL 0.3965765377393681, x'c294', (((((t0.c62)GLOB(t0.c0))))<((((t0.c62) IS FALSE)))) FROM t0 WHERE (((((x'837569ee') IS TRUE))LIKE(((x'')IS NOT(x''))))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c62 AS NUMERIC))IS('#0<i]c*m')) FROM t0 GROUP BY ABS(t0.c0), (((t0.c99 IN ())) BETWEEN (((((((((t0.c99)OR(NULL)))OR(0.8104823719100528)))AND(t0.c62)))OR(t0.c62))) AND (((t0.c62) BETWEEN (t0.c99) AND (t0.c99)))), (((+ (t0.c99))) NOT BETWEEN ((('')||(t0.c0))) AND ('-1566243517' COLLATE RTRIM)) HAVING t0.c62; -- 0ms;
SELECT ALL NULLIF(CASE WHEN t0.c62 THEN NULL END, (t0.c99 IN ())), COUNT(*) OVER (), t0.c99 FROM t0 WHERE (CASE (((('-863037267')OR(x'')))AND('-1247866959'))  WHEN ((((((((x'')OR(0.40018817024808906)))AND(0X6d878fd5)))OR(x'')))AND(x'')) THEN (('-1963040052') ISNULL) ELSE (('210875835')<>('593665830')) END); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c62)LIKE(t0.c0)) THEN ((t0.c62)IS(t0.c0)) ELSE json_insert(NULL, t0.c0, t0.c0) END, CAST(t0.c62 AS NUMERIC) COLLATE RTRIM, '?)' FROM t0 WHERE ((- (CASE '-1765062279'  WHEN 'yRQ' THEN NULL END))); -- 0ms;
SELECT DISTINCT CAST((- (t0.c0)) AS TEXT) FROM t0 WHERE ((((NULL)) BETWEEN (('')) AND ((0.06884727411805314))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT SUM((((t0.c62)) NOT BETWEEN ((t0.c0)) AND ((t0.c62)))), TRIM(COUNT(*), ((t0.c62)&(t0.c99))), ((((t0.c0)<<(t0.c62)))>>((((t0.c62, t0.c62, t0.c99))=((t0.c0, t0.c62, t0.c0))))), '㓀*|m8', (+ (((t0.c99)LIKE(t0.c0)))) FROM t0; -- 0ms;
SELECT TOTAL(TRIM(DISTINCT t0.c62, t0.c62)) OVER ( GROUPS BETWEEN x'' PRECEDING AND 0.9431601801042978 FOLLOWING EXCLUDE GROUP) FROM t0 WHERE (CAST((-1.204432561E9 IN (NULL)) AS TEXT)); -- 0ms;
SELECT ((((t0.c0) BETWEEN (t0.c99) AND (t0.c99)))<=(t0.c0 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0) NOT NULL) COLLATE RTRIM FROM t0; -- 1ms;
SELECT DISTINCT ((((((t0.c0)IS NOT(t0.c62)))OR((((t0.c62)) NOT BETWEEN ((t0.c0)) AND ((t0.c99))))))OR(((t0.c99) NOT BETWEEN (t0.c99) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE) NOT NULL) FROM t0 WHERE ((((((((((x'')AND(0.30597887085554976)))AND('')))AND('4BvU燷')))OR(1.936174602E9)) IN ((+ (NULL)), ((0.24836497192537832)<=('1C'))))) ORDER BY ((((t0.c99) NOTNULL))+((((1.508122873E9)) NOT BETWEEN ((t0.c62)) AND ((t0.c62))))) ASC  NULLS LAST; -- 0ms;
SELECT ALL ((((t0.c62)) BETWEEN ((t0.c0)) AND ((t0.c62))) IN ()) FROM t0; -- 0ms;
SELECT FIRST_VALUE((((((t0.c62)%(t0.c0))))==((CASE WHEN t0.c62 THEN t0.c0 WHEN t0.c99 THEN t0.c0 WHEN t0.c99 THEN t0.c0 END)))) OVER ( ORDER BY 'now'  NULLS LAST, (((((t0.c99)) BETWEEN ((t0.c0)) AND ((t0.c99))))>=((- ('0.5697572156539278'))))  NULLS LAST RANGE  CURRENT ROW EXCLUDE CURRENT ROW), (((t0.c0)) BETWEEN ((SUM(t0.c99))) AND ((((t0.c62)/(t0.c99))))), COUNT(*) FROM t0 WHERE (NULL) GROUP BY (- ((('-629313659') BETWEEN (t0.c62) AND (t0.c62)))) HAVING ((((((((COUNT(*))OR(CAST(t0.c62 AS INTEGER))))AND(((((t0.c62)OR(t0.c62)))AND(t0.c62)))))OR((((t0.c62, t0.c0, t0.c62))<((t0.c0, t0.c99, t0.c62))))))OR(t0.c0)) LIMIT -1202987217 OFFSET -2040707295; -- 0ms;
SELECT ALL TYPEOF(DISTINCT t0.c0) COLLATE NOCASE FROM t0 WHERE ((CAST(-9223372036854775808 AS BLOB) IN (x''))); -- 0ms;
SELECT DISTINCT (~ (CASE WHEN t0.c0 THEN t0.c62 ELSE 'qu' END)) FROM t0 ORDER BY (((t0.c99) ISNULL) IN ()) ASC; -- 0ms;
SELECT ALL t0.c99 FROM t0; -- 0ms;
SELECT DISTINCT '{7' FROM t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT CASE CASE WHEN t0.c99 THEN t0.c62 END  WHEN (+ (t0.c62)) THEN CASE WHEN t0.c0 THEN t0.c62 END WHEN CAST('-783520632' AS NUMERIC) THEN (((t0.c62))<((t0.c62))) WHEN (t0.c62 IN (t0.c99)) THEN t0.c99 COLLATE RTRIM ELSE CAST(t0.c62 AS TEXT) END FROM t0 WHERE ((((((((((('1303048964')AND('')))AND('-1374960168')))AND(x'7701')))AND(0.37190583100819263))) NOT BETWEEN (((x'') IS FALSE)) AND (('' IN ())))) LIMIT 793888217 OFFSET -1984866265; -- 0ms;
SELECT ALL CASE WHEN t0.c99 THEN t0.c0 END COLLATE BINARY FROM t0 WHERE (UPPER(((NULL)&(0.14847298039957102)))) LIMIT -496831240; -- 0ms;
SELECT DISTINCT (((t0.c99 IN ())) ISNULL) FROM t0; -- 0ms;
SELECT ALL NTILE((((CAST('268529076' AS NUMERIC), (t0.c62 IN ()), t0.c0, ((t0.c99)*(t0.c99)), ((t0.c0) IS TRUE)))>=(((+ (t0.c0)), ((t0.c99)>>(t0.c0)), ((t0.c0) IS TRUE), ((t0.c99)/(t0.c99)), (t0.c0 IN ()))))) OVER (), (('' COLLATE RTRIM) NOT BETWEEN (COUNT(*)) AND ((t0.c0 IN (NULL)))), ((((t0.c62) NOT NULL)) IS FALSE) FROM t0 WHERE (((CASE WHEN x'' THEN NULL ELSE 0.7081722888135065 END) IS FALSE));SELECT NULL FROM t0 GROUP BY CAST(NULL AS INTEGER); -- 0ms;
SELECT ((x'c4c4') NOTNULL) COLLATE NOCASE FROM t0 WHERE (0Xffffffffc1bd5096); -- 0ms;
SELECT DISTINCT CASE (((t0.c0, t0.c99, t0.c99)) BETWEEN (('1314761398', t0.c0, t0.c99)) AND ((t0.c99, t0.c0, t0.c62)))  WHEN t0.c0 COLLATE NOCASE THEN (NOT (t0.c0)) END FROM t0 GROUP BY ((((((t0.c62) IS TRUE))AND(-654513156)))AND(CASE t0.c62  WHEN t0.c62 THEN t0.c0 ELSE t0.c0 END)) HAVING CASE ((t0.c0) BETWEEN (t0.c62) AND (t0.c0))  WHEN t0.c62 THEN ((((t0.c0)AND(t0.c62)))AND('-0.0')) WHEN t0.c0 COLLATE RTRIM THEN ((((t0.c62)OR(t0.c99)))AND(t0.c0)) WHEN x'6aa9c19a' THEN ((t0.c62) NOT BETWEEN (t0.c0) AND (t0.c99)) ELSE t0.c0 END ORDER BY CASE WHEN ((t0.c99)!=(t0.c99)) THEN NULL ELSE (~ (t0.c0)) END  NULLS LAST; -- 0ms;
SELECT DISTINCT '1823575654' FROM t0; -- 0ms;
SELECT ALL 1.687244845E9, 0.5174909172702148, t0.c0 FROM t0 WHERE (COALESCE(DISTINCT (((('rOH/J\8')OR(NULL)))OR(1790104567)), ((((x'')AND(x'')))AND(NULL)))); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE)LIKE(((t0.c0)|(t0.c62)))), CAST((((t0.c0)) BETWEEN ((t0.c62)) AND ((t0.c99))) AS TEXT), ((((((((((((((((GROUP_CONCAT(t0.c0))OR(CASE WHEN t0.c99 THEN t0.c62 ELSE t0.c62 END)))OR(1722808898)))AND(GROUP_CONCAT(t0.c62))))AND(MIN(t0.c99))))AND((- (t0.c0)))))AND(AVG(t0.c0))))OR(((t0.c62) BETWEEN (t0.c0) AND (t0.c62)))))AND(((x'bf1e')AND(t0.c99)))) FROM t0; -- 0ms;
SELECT 0.8126547888861216 FROM t0; -- 0ms;
SELECT (+ ((((t0.c0, t0.c0, t0.c99))<((x'', t0.c99, t0.c0))))), json_array_length(((((((((((((t0.c99)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c99)))OR(t0.c0)))OR(t0.c62))), COUNT(((t0.c99)<=(t0.c62))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0)) BETWEEN ((t0.c62)) AND ((t0.c62))))*(NULL)) FROM t0; -- 0ms;
SELECT (((t0.c62)) NOT BETWEEN (((t0.c62 IN ()))) AND ((UPPER(DISTINCT t0.c62)))) FROM t0 WHERE ((((0.5739370185067301)) BETWEEN (((('1120039566') NOT NULL))) AND (((('-E')|('wP')))))); -- 0ms;
SELECT DISTINCT ((COUNT(*)) NOT BETWEEN (t0.c99) AND (t0.c62 COLLATE RTRIM)) FROM t0; -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 WHERE ((((x'' IN ())) NOT BETWEEN ((((('7v')AND(NULL)))AND(-1898816803))) AND (((5.90828083E8)/('1936174602'))))) ORDER BY ((((((((t0.c62)AND(SQLITE_VERSION())))OR((t0.c0 IN ()))))OR((t0.c0 IN ()))))OR(((t0.c62) IS TRUE))) DESC; -- 0ms;
SELECT DISTINCT ((((((t0.c0)) BETWEEN ((t0.c62)) AND ((t0.c0)))))>=((((t0.c0)<(t0.c99))))) FROM t0 WHERE (CAST(((0.932515731759527)>>(0Xffffffffa28cb547)) AS TEXT)) ORDER BY ((t0.c99 IN ()) IN ())  NULLS FIRST, CAST((t0.c62 IN (t0.c0, t0.c62)) AS NUMERIC) DESC  NULLS FIRST; -- 0ms;
SELECT CASE t0.c99 COLLATE RTRIM  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c62)) THEN t0.c62 COLLATE RTRIM WHEN ((t0.c99)OR(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN ((706576834)/(t0.c0)) THEN (1604853993 IN ()) ELSE ((t0.c0)/(t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT t0.c99, (- (0.050044297118753134)) COLLATE BINARY, (((t0.c99 IN (t0.c0, t0.c62))) ISNULL) FROM t0 GROUP BY 0.9738484556604382, CASE ''  WHEN ((t0.c62) NOT NULL) THEN CASE WHEN t0.c99 THEN t0.c99 END WHEN (~ (t0.c62)) THEN ((((t0.c99)OR(t0.c0)))OR(t0.c62)) WHEN ((t0.c0) IS FALSE) THEN CAST(t0.c0 AS INTEGER) ELSE CASE WHEN t0.c0 THEN '1937921653' ELSE t0.c99 END END, (t0.c0 IN (t0.c99)) COLLATE BINARY COLLATE BINARY HAVING LOWER(((t0.c62) ISNULL)); -- 0ms;
SELECT DISTINCT (t0.c62 IN ()), ((MAX(t0.c99)) NOT BETWEEN (((t0.c99)-(t0.c62))) AND (((t0.c0)|(t0.c0)))), CASE WHEN 0xffffffffcd921e56 THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c62)) WHEN CAST(t0.c99 AS NUMERIC) THEN (t0.c62 IN ()) WHEN t0.c0 THEN 0.05450011525605669 END FROM t0 WHERE (((rtreenode(x'', '2007926700'))=(((('ꮢiᲭe1Pw㽶'))<=((x'cf21')))))) GROUP BY ((((t0.c62) NOT NULL)) IS FALSE) ORDER BY (((+ (t0.c62))) NOTNULL) ASC; -- 0ms;
SELECT DISTINCT DATETIME(CASE t0.c62  WHEN '1937921653' THEN t0.c99 WHEN t0.c99 THEN t0.c62 WHEN t0.c0 THEN '662461219' END, t0.c99, ((t0.c62)<=(t0.c99))) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c62 IN (t0.c62)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS REAL) COLLATE RTRIM FROM t0 NOT INDEXED; -- 0ms;
SELECT SUM(((t0.c62) NOTNULL) COLLATE RTRIM) OVER (), MIN(((t0.c99)<=(t0.c0))) COLLATE NOCASE, (+ (t0.c0 COLLATE RTRIM)) FROM t0 WHERE (x'92a9'); -- 0ms;
SELECT DISTINCT CASE ((t0.c0)>>(t0.c62))  WHEN UNLIKELY(t0.c99) THEN CAST(t0.c62 AS INTEGER) END FROM t0 LIMIT -1073411086; -- 0ms;
SELECT COUNT(*), LOWER(((t0.c99)%(t0.c62))), NULLIF(DISTINCT CAST(t0.c62 AS INTEGER), t0.c0) FROM t0; -- 0ms;
SELECT ALL t0.c62 FROM t0; -- 0ms;
SELECT DISTINCT CAST((~ (t0.c62)) AS BLOB) FROM t0 WHERE (((((CASE x'4a30'  WHEN 'v껶Vfa' THEN x'' END)AND(('' IN ()))))OR(((NULL)AND(0.7063939100427714))))); -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c62) ISNULL) FROM t0 WHERE (((((((x'', 0.01375753724682216, x''))<>((0x547c6f32, x'', -850153565)))))>((((NULL) NOT BETWEEN (x'') AND (0Xffffffffdee11cde)))))); -- 0ms;
SELECT ALL NULLIF(((t0.c99)AND(t0.c99)), NULL) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c99) BETWEEN (t0.c62) AND (t0.c99)) AS INTEGER) FROM t0; -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT ALL (((t0.c62)*(t0.c62)) IN ()) FROM t0; -- 1ms;
SELECT ALL (((x'')) BETWEEN ((((((t0.c62)OR(t0.c99)))AND(t0.c62)))) AND ((CAST(t0.c0 AS INTEGER)))) FROM t0 INDEXED BY i86; -- 0ms;
SELECT (((- (t0.c99)))||(((((t0.c62)AND(t0.c99)))OR(t0.c99)))), (- (((t0.c99) IS TRUE))), ((((((t0.c62)AND(t0.c62)))OR(t0.c0)))LIKE((t0.c0 IN ()))) FROM t0 LIMIT 602113474; -- 0ms;
SELECT t0.c0, (((((-1523728494, 0Xffffffffb5bbeb92, t0.c62)) NOT BETWEEN ((t0.c62, NULL, t0.c99)) AND ((t0.c0, t0.c62, t0.c99))))/(SUM(t0.c0))), ROW_NUMBER() OVER ( ORDER BY (((((t0.c99, t0.c99, t0.c0)) NOT BETWEEN ((t0.c0, t0.c62, t0.c62)) AND ((t0.c0, x'', t0.c0)))) NOT BETWEEN (NULL) AND ((t0.c99 IN ())))  NULLS LAST ROWS ((((~ (t0.c62))))<>((((t0.c0)|(t0.c99))))) PRECEDING), SQLITE_COMPILEOPTION_GET(((t0.c0) IS FALSE)), t0.c0 FROM t0 GROUP BY ((NOT (t0.c62)) IN (CASE t0.c99  WHEN t0.c99 THEN t0.c0 WHEN t0.c62 THEN t0.c62 WHEN t0.c99 THEN t0.c99 END)), (((((t0.c99))<((t0.c0)))) BETWEEN (((t0.c99) NOT BETWEEN (t0.c99) AND (t0.c0))) AND ((~ (t0.c62)))), t0.c0 HAVING (('008 輧') NOTNULL); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t0.c0 THEN t0.c62 END AS NUMERIC) FROM t0 WHERE (((((0X1635790e)AND('i29JM*9')))+(0.7519636239605908 COLLATE BINARY))); -- 0ms;
SELECT t0.c99, t0.c62, (((((((t0.c99, t0.c0, t0.c0))<((t0.c99, t0.c0, t0.c62))))OR(((t0.c99) NOT NULL))))AND(t0.c62 COLLATE NOCASE)), ((((0.05893179514633484)OR(((t0.c0)IS(t0.c62)))))OR(t0.c99)), ((((((t0.c0)AND(t0.c62)))AND(t0.c99)))=(CASE WHEN t0.c0 THEN t0.c0 END)) FROM t0 UNION SELECT DISTINCT 'H#', (((t0.c0 COLLATE NOCASE, CAST(t0.c0 AS INTEGER), ((t0.c0) BETWEEN (t0.c0) AND (t0.c62))))<=(((+ (t0.c0)), ((((((((t0.c62)OR(t0.c0)))OR(t0.c62)))OR(t0.c0)))AND(t0.c62)), ((t0.c99)GLOB(t0.c62))))), (t0.c62 IN ()), ((((MAX(t0.c99))OR(((t0.c62)LIKE(t0.c99)))))AND(((t0.c62) NOTNULL))), (((t0.c62, (~ (t0.c62)), LOWER(DISTINCT t0.c62)))>=((((x'58487d86')<=(t0.c62)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), ((t0.c62) BETWEEN (t0.c62) AND (x''))))) FROM t0; -- 0ms;
SELECT ALL (((t0.c62)) NOT BETWEEN ((t0.c62 COLLATE RTRIM)) AND (((((t0.c0)) BETWEEN ((t0.c99)) AND ((t0.c62)))))) FROM t0; -- 0ms;
SELECT DISTINCT MAX((((t0.c0, t0.c62, t0.c0))>((t0.c0, t0.c0, t0.c99))) COLLATE BINARY), CASE WHEN CASE WHEN t0.c62 THEN t0.c0 WHEN t0.c99 THEN 0.1435818359350971 WHEN t0.c99 THEN '' ELSE t0.c0 END THEN (+ (t0.c62)) END, ((((LTRIM(t0.c62))OR(MAX(t0.c62, t0.c62))))OR(t0.c62 COLLATE BINARY)) FROM t0; -- 0ms;
SELECT DISTINCT (t0.c62 IN (t0.c0)) COLLATE NOCASE FROM t0 WHERE (((CAST(x'' AS BLOB)) IS FALSE)); -- 1ms;
SELECT DISTINCT (((t0.c62, t0.c62, t0.c62)) NOT BETWEEN ((t0.c62, t0.c99, t0.c99)) AND ((t0.c99, t0.c62, t0.c0))) COLLATE BINARY COLLATE BINARY, CASE t0.c99 COLLATE NOCASE  WHEN ((t0.c62) NOT BETWEEN (t0.c99) AND (t0.c99)) THEN (t0.c99 IN ()) WHEN ((t0.c99) IS TRUE) THEN ((t0.c99) NOTNULL) WHEN CAST(t0.c62 AS TEXT) THEN ((t0.c99)/(t0.c99)) ELSE CASE WHEN t0.c62 THEN t0.c62 ELSE t0.c99 END END, CASE WHEN t0.c0 THEN t0.c62 ELSE t0.c62 END COLLATE NOCASE FROM t0 GROUP BY (- (t0.c62)); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c62) IS FALSE)) OVER (), t0.c62, (((((((((1.361486258E9 IN ()))AND(t0.c99)))AND(SUM(t0.c0))))AND(((((((((t0.c99)AND(t0.c99)))OR(t0.c62)))AND(t0.c62)))AND(t0.c0)))))AND(0x38d32b4a)) FROM t0 WHERE ((((x'' IN ()))IS NOT(((x'') ISNULL)))) LIMIT 2074250945; -- 0ms;
SELECT DISTINCT ((((((t0.c99)OR(NULL)))AND(((((t0.c62)OR(t0.c99)))OR(x'4bcf')))))AND(t0.c99 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT DISTINCT (NOT (t0.c62)) FROM t0 WHERE (((CAST(x'6afb' AS BLOB)) NOTNULL)); -- 0ms;
SELECT (NOT (t0.c62)) COLLATE RTRIM, AVG(((t0.c99)>('-1237391486'))), 5.12462782E8, (+ (((((t0.c0)OR(t0.c99)))OR(t0.c99)))), t0.c62 FROM t0 GROUP BY (((t0.c99) BETWEEN (t0.c99) AND ('')) IN ()); -- 1ms;
SELECT ((t0.c0 COLLATE NOCASE) NOT NULL) FROM t0 WHERE (CAST(((NULL)&(NULL)) AS REAL)) LIMIT 1963465910; -- 0ms;
SELECT DISTINCT ((586092745 COLLATE NOCASE) NOT BETWEEN (t0.c62) AND (CAST(0.49263581672910683 AS BLOB))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)>=(t0.c0)))<(AVG(t0.c62))) FROM t0 WHERE (CASE WHEN (- (0.4168354034966757)) THEN (((('1485319451')OR(NULL)))OR(1407587243)) ELSE '817144178' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT CASE (t0.c99 IN ())  WHEN '62' THEN (((t0.c62)) BETWEEN ((t0.c0)) AND ((t0.c62))) ELSE CAST(t0.c0 AS TEXT) END FROM t0 ORDER BY (CASE t0.c0  WHEN t0.c62 THEN t0.c62 ELSE t0.c62 END IN ((((((((('b8cY>S''')AND(t0.c99)))AND(t0.c0)))AND(t0.c62)))AND(t0.c62)))) ASC  NULLS LAST; -- 0ms;
SELECT (NOT (t0.c0 COLLATE BINARY)) FROM t0 WHERE ((- (((NULL) NOT BETWEEN (162982448) AND (-1.566243517E9))))) GROUP BY (((+ (t0.c62))) NOTNULL); -- 0ms;
SELECT ALL (+ (((((t0.c0)AND(t0.c99)))OR(t0.c62)))) FROM t0 WHERE (((((x'') BETWEEN (0.6620700229329207) AND (x''))) IS TRUE)); -- 0ms;
SELECT ALL (((t0.c99, t0.c62, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE, CAST(t0.c99 AS BLOB), ((t0.c62) ISNULL))) AND ((CAST(t0.c99 AS REAL), x'd05d', (('-649750804') IS TRUE)))) FROM t0 WHERE (((((('1587044617', x'', 0X78b2aa50))<>((0.8242951317123647, NULL, x'')))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((((t0.c0) NOT BETWEEN (t0.c99) AND (t0.c62)))OR(((((t0.c62)AND(t0.c99)))OR(t0.c62)))))OR(t0.c62 COLLATE RTRIM)), '', CASE WHEN CASE WHEN -1757824861 THEN t0.c0 ELSE t0.c62 END THEN ((t0.c62)=(t0.c62)) WHEN CAST(t0.c99 AS REAL) THEN t0.c99 WHEN (('!)oiC稨') IS TRUE) THEN t0.c62 COLLATE BINARY ELSE x'c047' END, CASE WHEN (- (t0.c99)) THEN CAST(t0.c99 AS REAL) WHEN ((((((((t0.c62)OR(t0.c99)))AND(t0.c99)))AND(t0.c62)))OR(t0.c0)) THEN ((t0.c99)%(t0.c62)) WHEN ((t0.c62) IS FALSE) THEN t0.c62 COLLATE NOCASE ELSE (((x'', t0.c62, t0.c99)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c62, t0.c0, t0.c62))) END, ((((NULL)>(t0.c62)))OR(t0.c62 COLLATE BINARY)), ((TOTAL(t0.c0)) IS FALSE), ((((((NULL)AND(t0.c0)))OR(t0.c62))) BETWEEN (COUNT(t0.c62)) AND ((~ (t0.c0)))) FROM t0 WHERE (CAST(((((x'')AND('*C')))AND(x'c2ea')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((x'') IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT t0.c62 FROM t0 WHERE (((LIKELIHOOD(x'', 0.15499104450284573))IS NOT(rtreenode(x'', '-1564866018')))); -- 0ms;
SELECT ALL ((t0.c0) NOT NULL) FROM t0 ORDER BY ((x'') NOT BETWEEN (((t0.c62) NOT BETWEEN (t0.c62) AND (t0.c62))) AND ((t0.c99 IN ()))) ASC  NULLS FIRST; -- 1ms;
SELECT ((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (t0.c62) AND (COUNT(*))) FROM t0 WHERE (((((NOT ('\rtxn'))))=((((NULL) ISNULL))))); -- 0ms;
SELECT DISTINCT CAST((t0.c99 IN ()) AS NUMERIC), ((t0.c62 COLLATE BINARY) BETWEEN ((((('')AND(t0.c99)))AND(t0.c99))) AND ((t0.c62 IN (t0.c62)))), CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOTNULL) WHEN ((t0.c99)IS NOT(t0.c0)) THEN (((x'', t0.c62, t0.c99))=((t0.c62, t0.c99, t0.c99))) WHEN t0.c62 THEN CASE WHEN t0.c0 THEN t0.c62 END ELSE ((t0.c62)>=(NULL)) END FROM t0 WHERE ((((NULL))=(('2134300367'))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NULL, SUM(((((((((((((t0.c99)OR(t0.c0)))OR(t0.c99)))AND(t0.c99)))OR(t0.c62)))AND(t0.c99)))OR(t0.c99))) OVER (), ((((t0.c99) BETWEEN (' -}i66mwD') AND (t0.c99))) BETWEEN (CASE WHEN t0.c99 THEN t0.c0 WHEN t0.c62 THEN t0.c62 WHEN t0.c99 THEN t0.c62 ELSE t0.c62 END) AND (CASE WHEN x'' THEN t0.c0 ELSE t0.c62 END)) FROM t0; -- 0ms;
SELECT ALL (((CAST(t0.c62 AS NUMERIC)))=((((0.7190525252495179)IS(t0.c0))))) FROM t0; -- 0ms;
SELECT ALL (t0.c62 IN ()) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT (((~ (t0.c62)))-(((t0.c99) NOT BETWEEN (t0.c0) AND (t0.c99)))) FROM t0 GROUP BY 5.7946646E8; -- 0ms;
SELECT DISTINCT ((CASE t0.c99  WHEN t0.c62 THEN t0.c62 ELSE t0.c62 END) IS FALSE) FROM t0; -- 1ms;
SELECT ALL LIKELY((+ (t0.c62))), (-945322225 IN ()) COLLATE RTRIM, MIN('1504247870') FROM t0 WHERE ('	zoo\rB*x+'); -- 0ms;
SELECT (((CASE WHEN t0.c62 THEN t0.c62 END))==((CASE WHEN t0.c0 THEN t0.c62 ELSE t0.c99 END))) FROM t0 WHERE ((('TRUE')!=(NULL)) COLLATE NOCASE); -- 0ms;
SELECT (((~ (t0.c99))) NOT BETWEEN (t0.c62) AND ((+ (t0.c62)))) FROM t0; -- 0ms;
SELECT (((t0.c62, t0.c0, t0.c0)) BETWEEN (((((t0.c99))<((t0.c62))), IFNULL(DISTINCT t0.c62, t0.c0), (- (t0.c99)))) AND ((MIN(t0.c0), 0x13f4c69 COLLATE BINARY, ((t0.c0) NOTNULL)))) FROM t0 WHERE ((('' COLLATE RTRIM) NOT NULL)); -- 0ms;
SELECT DISTINCT MIN(CASE WHEN t0.c99 THEN t0.c0 END), ((((NULL)IS NOT(t0.c62))) IS FALSE), AVG(t0.c99) COLLATE NOCASE COLLATE RTRIM FROM t0; -- 0ms;
SELECT ((t0.c62 COLLATE BINARY)+(LOWER(DISTINCT t0.c62))) FROM t0 WHERE (((((0.7783259318845325)>(NULL))) NOT BETWEEN (('645062418' IN (x''))) AND (CAST(0.37465233170857715 AS BLOB)))) LIMIT 1980260695 OFFSET -385921051; -- 0ms;
SELECT ALL (((t0.c62)AND(t0.c62)) IN ()), (((((t0.c0 IN ()))AND(t0.c99)))OR(((t0.c62) NOT BETWEEN (t0.c62) AND (t0.c99)))), ROW_NUMBER() OVER () FROM t0; -- 0ms;
SELECT DISTINCT '0.35094417240777687' FROM t0 WHERE (((((x'')+(0xffffffff982a6bb2))) BETWEEN (CAST(x'ae99' AS REAL)) AND (LIKELY(DISTINCT NULL)))); -- 0ms;
SELECT UNLIKELY((- (t0.c62))), ((x'')*(((((t0.c99)OR(t0.c62)))AND(t0.c62)))), ((GLOB(t0.c99, t0.c99))==(t0.c0 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT ALL CAST((+ (t0.c99)) AS REAL) FROM t0; -- 0ms;
SELECT ALL (((t0.c62) IS FALSE) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((('-756167284' IN ())) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((t0.c0)+(t0.c99)))), ((((COUNT(*))OR((((t0.c99, t0.c99, t0.c0))==((t0.c62, t0.c0, t0.c99))))))OR(((t0.c99) BETWEEN (t0.c62) AND (t0.c62)))), ((t0.c62 COLLATE NOCASE)LIKE('1004267818')) FROM t0 LIMIT -325906263 OFFSET -204263579; -- 0ms;
SELECT DISTINCT (~ (t0.c0)) COLLATE RTRIM, (((t0.c0) BETWEEN (t0.c99) AND (t0.c0)) IN ()), DENSE_RANK() OVER () FROM t0; -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT t0.c62 FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0 IN (t0.c99))) IS TRUE) FROM t0 WHERE ((((((0.6387965952097233)-(x'')), (0.9389722349271374 IN (0.6032554172971177)), '', (2.126840877E9 IN ('-846061994')), UNLIKELY(DISTINCT NULL)))<=((DATETIME(x'', NULL, 'ocYY^턉Rꪶl', '䌧dP	?7iJG', ''), NULL, ((x'')+('')), 0.47965679630314584, ((x'') IS TRUE))))); -- 0ms;
SELECT DISTINCT ((UPPER(t0.c0)) NOT BETWEEN ((- (t0.c0))) AND ((t0.c99 IN (t0.c99, t0.c0)))) FROM t0 WHERE ((((NULL)) NOT BETWEEN ((CAST(0.5932546620284599 AS INTEGER))) AND ((CHANGES())))); -- 0ms;
SELECT DISTINCT CAST(((t0.c0)+(t0.c62)) AS BLOB) FROM t0 WHERE (((((((x'')>=('')))OR(('1544413451' IN (x'')))))AND((('')IS(0.8703896121136273))))); -- 0ms;
SELECT DISTINCT ((NULL)%((('5d}kv')<(t0.c0)))) FROM t0 WHERE ((((+ (0xffffffffd84d1996)))GLOB((NOT (NULL))))); -- 0ms;
SELECT DISTINCT AVG(((((t0.c62)OR(t0.c0)))OR(t0.c99))), ((UPPER(DISTINCT t0.c62))GLOB(CAST(0.11085547739494339 AS TEXT))), ((t0.c0) IS TRUE), (((((x'', '7&', '1048344100'))<((t0.c0, t0.c0, t0.c0))))>>(t0.c0 COLLATE RTRIM)), ((((t0.c99)<<('-1671619627'))) BETWEEN (t0.c99) AND (((t0.c99)IS NOT(t0.c99)))) FROM t0 WHERE ((((('') NOTNULL)) NOT NULL)); -- 0ms;
SELECT GROUP_CONCAT(((t0.c99) IS TRUE)) OVER (), COUNT(*) OVER (), ((t0.c0 COLLATE RTRIM) NOT BETWEEN ((t0.c62 IN (t0.c62))) AND (((t0.c0)GLOB(0.3990520032601351)))) FROM t0; -- 1ms;
SELECT ALL (NOT (x'')) FROM t0; -- 0ms;
SELECT ALL CAST(((NULL)>>(t0.c0)) AS INTEGER) FROM t0; -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY ((CAST(0Xffffffffcae6b5bd AS INTEGER))|(HEX(DISTINCT t0.c99))) DESC, ((0xffffffffef59dc8d) BETWEEN ((t0.c62 IN ())) AND (((t0.c99) IS FALSE))) ASC), UNLIKELY(DISTINCT ((t0.c99)*(t0.c0))), ((t0.c99) NOT NULL) FROM t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c99 THEN t0.c62 WHEN t0.c0 THEN t0.c62 WHEN t0.c0 THEN '553261665' ELSE '-182666319' END) BETWEEN (SUM(t0.c0)) AND (NULL)) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c99))<>((t0.c62))) COLLATE RTRIM FROM t0 WHERE ((((((0.4791942696155307, x'', NULL))<((NULL, '-1438802343', x'')))) ISNULL)); -- 0ms;
SELECT DISTINCT COUNT((t0.c0 IN ())) OVER () FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c99) NOT NULL) AS TEXT), ((NULL) NOT BETWEEN ('*3*!-dLmB') AND (CAST(t0.c0 AS NUMERIC))), CASE (((t0.c62)) NOT BETWEEN ((t0.c99)) AND ((t0.c99)))  WHEN t0.c99 THEN ((t0.c99)>=(t0.c62)) WHEN COUNT(*) THEN (- (t0.c99)) WHEN CAST(t0.c99 AS REAL) THEN t0.c0 ELSE ((x'')<(t0.c0)) END FROM t0 WHERE (CASE ((((2.0079267E9)OR(-1447402960)))OR(x''))  WHEN ((NULL)AND(0.43642008354338513)) THEN (((918698134))>(('703232167'))) ELSE CAST('9223372036854775807' AS BLOB) END); -- 1ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0 WHERE (((NULL)*(((x'87af')>=(0.6824909356779036))))) ORDER BY x'' ASC; -- 0ms;
SELECT ALL ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c62))) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (((((((t0.c99))!=((t0.c62))))AND(((t0.c99)>=(0.8387245424423079)))))OR((((t0.c62, t0.c0, 'U}y4jAC\n', t0.c62, t0.c99, t0.c62, t0.c62))<=((t0.c99, t0.c0, t0.c62, t0.c99, t0.c62, t0.c99, t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0 LIMIT -384690013 OFFSET -152584747; -- 0ms;
SELECT ALL CAST(t0.c62 AS REAL) COLLATE BINARY FROM t0; -- 0ms;
SELECT ALL (((t0.c99) NOT NULL) IN ()), COUNT(*) OVER (), (((t0.c99)) BETWEEN ((((t0.c99) IS FALSE))) AND ((NULLIF(t0.c99, t0.c0)))) FROM t0; -- 0ms;
SELECT ALL ((((((((((t0.c62)OR(t0.c62)))AND(t0.c99)))OR(t0.c99)))OR('1389112756'))) NOT BETWEEN ((NOT (t0.c62))) AND (((t0.c99) IS TRUE))) FROM t0 WHERE (((TRIM(NULL, '403799694')) NOTNULL)) ORDER BY ABS(DISTINCT 0.39723027960598567) DESC  NULLS LAST, t0.c62 DESC  NULLS LAST, '1194601078' DESC; -- 1ms;
SELECT DISTINCT (- (((((((((((((t0.c0)OR(t0.c62)))AND(t0.c62)))OR(t0.c99)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))), ((0.1296180755672519)GLOB((- (0Xffffffffec69fa7e)))), ((IFNULL(DISTINCT t0.c62, t0.c0)) NOT BETWEEN (CASE WHEN t0.c99 THEN t0.c0 ELSE t0.c62 END) AND (5.12462782E8)) FROM t0 WHERE (x''); -- 0ms;
SELECT DISTINCT (- (IFNULL(NULL, t0.c99))) FROM t0; -- 0ms;
SELECT json_quote(((t0.c0) BETWEEN (t0.c99) AND (t0.c99))) FROM t0 GROUP BY highlight((((t0.c62)) BETWEEN ((t0.c99)) AND ((t0.c0))), (t0.c99 IN (t0.c62, t0.c62)), (((t0.c0))<((t0.c0))), ((t0.c99)>(t0.c62))) HAVING 1.338045968E9;SELECT ALL GROUP_CONCAT((t0.c62 IN (t0.c0, t0.c99))), ((((t0.c62) IS FALSE))IS(((t0.c99)<=(t0.c62)))), (((t0.c99)>>(t0.c99)) IN ()), ((STRFTIME(t0.c62, t0.c0, t0.c99))<>((((t0.c62))>=((t0.c0))))), CAST(SUM(t0.c99) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT '-458830892' FROM t0 WHERE (((((-1034458283) IS FALSE)) ISNULL)); -- 0ms;
SELECT ALL (((((t0.c0, t0.c99, t0.c62, t0.c62, t0.c62)) BETWEEN ((t0.c0, '-1209940588', t0.c62, '~\xRՃoKࡠi', t0.c0)) AND ((t0.c0, t0.c62, t0.c0, t0.c0, t0.c99))))>>(((t0.c0) IS FALSE))) FROM t0; -- 0ms;
SELECT (~ (((x'62b6a851') NOT BETWEEN (t0.c99) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT RANK() OVER (), ((((t0.c0)IS(t0.c99))) NOT BETWEEN (((t0.c99) BETWEEN (t0.c62) AND (''))) AND (CAST(t0.c0 AS BLOB))), (((((t0.c99, t0.c0, t0.c99))>((t0.c99, t0.c0, t0.c0))))LIKE(((t0.c62)||(t0.c99)))), ((t0.c62 COLLATE BINARY) NOTNULL), ((t0.c0) IS TRUE) FROM t0 GROUP BY (((t0.c62 IN ())) BETWEEN (TYPEOF(t0.c0)) AND (t0.c62 COLLATE RTRIM)), CASE WHEN t0.c99 THEN t0.c99 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c99 END COLLATE RTRIM, t0.c62 HAVING 0.6062524949594248; -- 0ms;
SELECT DISTINCT ((((+ (0.3637279249399874))))<=(('1937921653'))), (((((0.9305833347394347 IN (t0.c62, t0.c62)))OR((~ (t0.c0)))))AND(COUNT(t0.c99))), COUNT(*) FROM t0 WHERE ((UPPER(0.8227729807447706) IN ())); -- 0ms;
SELECT ALL ((((t0.c99)GLOB(t0.c99)))LIKE(((t0.c0)||(t0.c62)))) FROM t0 WHERE (load_extension((('-1726224038') NOT NULL)));SELECT ((((t0.c99) IS TRUE))>(((t0.c99) NOT NULL))) FROM t0 WHERE (CAST(((('1338045968'))<=(('-1'))) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((((((t0.c99)OR(CASE WHEN t0.c62 THEN t0.c62 WHEN t0.c62 THEN t0.c62 WHEN t0.c99 THEN t0.c62 ELSE t0.c62 END)))AND(MAX(t0.c62))))OR(((t0.c99) IS TRUE))))OR(((((((((t0.c99)OR(t0.c62)))OR(t0.c62)))OR(t0.c99)))AND(x'')))), ((((t0.c99)<(0xffffffff8716ea4c))) NOT NULL), '1744709043' FROM t0; -- 1ms;
SELECT ((COUNT(*))OR(((t0.c99) NOT NULL))) FROM t0 WHERE (MAX(((x'7b3b')GLOB(0.7374515299291491)), SQLITE_COMPILEOPTION_USED('-304190254'), TOTAL_CHANGES(), x'')) GROUP BY CAST(CAST(290485822 AS BLOB) AS BLOB), ((((((((((((((t0.c0)-(t0.c99)))AND(((((((((t0.c99)AND(t0.c99)))AND(t0.c62)))OR(t0.c99)))OR(t0.c99)))))AND(((NULL)OR(t0.c62)))))OR((+ (t0.c99)))))OR(((t0.c62) BETWEEN (t0.c62) AND (t0.c62)))))AND(t0.c99 COLLATE NOCASE)))OR((t0.c99 IN ()))), (((((t0.c62 IN ()))OR(CAST(t0.c0 AS NUMERIC))))OR((((t0.c62))>((t0.c99))))), ((((CASE WHEN t0.c0 THEN t0.c99 END)OR(((t0.c62)*(t0.c0)))))OR(LIKE(t0.c62, t0.c0))), (((t0.c62)<<(t0.c99)) IN ()); -- 0ms;
SELECT DISTINCT ((((t0.c0)!=(t0.c0)))||((t0.c62 IN ('ID镥)s沈ﾹ')))) FROM t0; -- 0ms;
SELECT DISTINCT 'Hv' FROM t0; -- 0ms;
SELECT DISTINCT (((((((t0.c0))==((t0.c99))))OR(NULL)))AND(((t0.c62) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (CASE WHEN (+ (0.6220803342581928)) THEN x'' ELSE 2.126840877E9 END); -- 0ms;
SELECT (((((t0.c62))<>((t0.c62)))) NOT NULL) FROM t0 WHERE (((((((NULL) NOT BETWEEN ('TB') AND (x'')))OR(UPPER(DISTINCT 0Xffffffffdc4e8ea2))))OR(((0.233478076543424)%(x''))))); -- 1ms;
SELECT ALL (((t0.c62)+('579466460')) IN ()), ((((t0.c0)<>(t0.c62))) BETWEEN (json_object(t0.c0, NULL)) AND ('''tgZRfk')), ((CASE t0.c99  WHEN t0.c62 THEN t0.c99 END)!=(((t0.c0)GLOB(t0.c0)))), CASE WHEN ((t0.c62)=(t0.c62)) THEN ((t0.c62) NOT NULL) END, ((((((((((-500623282)OR(t0.c99)))OR(t0.c62)))AND(t0.c99)))AND(t0.c0))) ISNULL) FROM t0;SELECT DISTINCT ((CASE t0.c62  WHEN t0.c0 THEN t0.c62 ELSE 0.348988180401131 END)IS NOT(CAST(t0.c99 AS INTEGER))) FROM t0; -- 0ms;
SELECT ((('b9')/(t0.c62)) IN ()) FROM t0 WHERE (((0.10071225603579359)LIKE((NOT (0.4942352013299802))))) GROUP BY (((t0.c0))<(((t0.c62 IN (t0.c0))))), CASE WHEN CASE t0.c62  WHEN t0.c99 THEN t0.c0 ELSE t0.c62 END THEN NULLIF(t0.c0, NULL) ELSE ((t0.c99)||(t0.c99)) END, CASE NULL  WHEN (~ (t0.c62)) THEN t0.c99 COLLATE NOCASE WHEN CASE WHEN t0.c62 THEN t0.c62 ELSE t0.c99 END THEN ((t0.c62) IS TRUE) WHEN (t0.c0 IN ()) THEN t0.c99 COLLATE NOCASE ELSE ((t0.c62)/(t0.c62)) END HAVING (((t0.c99))!=(('6\n/aI'))) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CAST(((t0.c0)<(t0.c99)) AS NUMERIC) FROM t0 INDEXED BY i48 WHERE (((HEX(0.6938318882852266)) BETWEEN (((NULL)&(0.014966011139490587))) AND (HEX(DISTINCT 0.850292161903324))));SELECT DISTINCT LAG(('1937187129' IN ()), ((t0.c0) ISNULL), 332255070) OVER (), DENSE_RANK() OVER (), ((((t0.c99) NOT BETWEEN (t0.c0) AND (t0.c99)))<=(((t0.c0) BETWEEN (t0.c99) AND (t0.c99)))) FROM t0; -- 0ms;
