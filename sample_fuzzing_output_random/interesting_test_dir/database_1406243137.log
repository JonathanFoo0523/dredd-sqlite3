-- Time: 2024/06/07 07:28:43
-- Database: database37
-- Database version: 3.40.0
-- seed value: 1406243137
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('A,'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.4970259412292831); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0x79a13d3c); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.8832726996673205); -- 1ms;
ALTER TABLE t0 ADD COLUMN c44 INTEGER; -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (0.35765504801280334, NULL); -- 1ms;
INSERT OR ABORT INTO t0(c44) VALUES (0X79a13d3c); -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 ADD COLUMN c93 BLOB; -- 1ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR ABORT INTO t0(c93, c0) VALUES (0.014844917156166315, 0x79a13d3c); -- 0ms;
INSERT OR IGNORE INTO t0(c93, c44) VALUES (0x6de8fdc0, x'e3bd'), ('', x''), (x'', '1843985856'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c89 BLOB; -- 0ms;
UPDATE OR IGNORE t0 SET c93='-2087028925'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c97 BLOB; -- 3ms;
INSERT OR REPLACE INTO t0(c44, c0, c97) VALUES (x'', NULL, 0.5451764511408052), ('1843985856', 226625780, x''), (x'', '226625780', x''); -- 0ms;
INSERT OR IGNORE INTO t0(c97) VALUES (2.2662578E8), ('F?,]\rꇘ'), (x'06d8'); -- 7ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c44, c97) VALUES ('-1020437339', 'f?,]\rꇘ') ON CONFLICT(c0, c97, c93) DO UPDATE SET c0=NULL, c93=x'b67e' WHERE ((CASE t0.c97  WHEN t0.c97 THEN t0.c97 WHEN t0.c93 THEN t0.c97 WHEN t0.c97 THEN t0.c93 END) BETWEEN (((0.4969108562030935)|(t0.c44))) AND (CASE WHEN t0.c97 THEN t0.c97 WHEN t0.c0 THEN t0.c0 WHEN t0.c93 THEN t0.c93 ELSE t0.c93 END)); -- 1ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (0.1461559522339898); -- 0ms;
CREATE TEMPORARY TABLE t1 (c0 BLOB ); -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('', NULL, '730604295', '-1020437339'), (x'', 885195008, '', 0.9760740501296283), ('2040610108', 'OEsr', x'ed59cc58', '-1955428391'); -- 8ms;
REINDEX  t0; -- 0ms;
DROP TABLE rt0; -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.4969307378483865), (NULL), (NULL); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c56; -- 12ms;
INSERT OR IGNORE INTO t1 VALUES ('{U'); -- 0ms;
ALTER TABLE t1 ADD COLUMN c51 INTEGER; -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE INDEX i66 ON t0(NULL COLLATE RTRIM,'0.1461559522339898' ASC,UPPER(c44 COLLATE NOCASE) COLLATE NOCASE DESC,0.1461559522339898 COLLATE RTRIM ASC); -- 0ms;
CREATE INDEX IF NOT EXISTS i80 ON t1(((CASE c51  WHEN c51 THEN c51 ELSE NULL END) NOT NULL) ASC,(((c0)<<(c0)) IN ()) COLLATE NOCASE ASC) WHERE ((((c51) NOTNULL))GLOB('730604295')); -- 0ms;
INSERT OR REPLACE INTO t0(c97, c56) VALUES (0xd8208f4, 0.4399389109454477); -- 0ms;
REINDEX i80; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c97 TO c64; -- 7ms;
ROLLBACK TRANSACTION; -- 8ms;
INSERT OR ABORT INTO t0(c97, c93) VALUES (x'1a38', 0.4388447891187389); -- 0ms;
UPDATE OR IGNORE t1 SET c51='3P䤷d_'; -- 1ms;
ANALYZE; -- 8ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO t0(c97, c56, c44) VALUES (0.4388447891187389, '730604295', NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE t0 SET (c44)=(885195008) WHERE ((((t0.c97)AND(((t0.c44) NOT BETWEEN (t0.c97) AND (NULL)))))OR(CASE WHEN 0.23992234792148426 THEN t0.c44 WHEN t0.c97 THEN t0.c44 WHEN t0.c97 THEN t0.c97 ELSE t0.c93 END)); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t0 SET (c56, c97)=(NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL), (0.8961062137583072), (-1043233830) ON CONFLICT(c0, c51) DO UPDATE SET c0=excluded.c51 WHERE (+ ((t1.c51 IN ()))); -- 0ms;
INSERT OR ABORT INTO t0(c97, c93) VALUES (0Xfffffffff5236359, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0(c56, c44, c93) VALUES ('3P䤷d_', x'', 0.4969108562030935), (8.76497207E8, 0x343e4937, '-1955428391'), (NULL, 0.38753052352935835, 0.4383458678393821), (NULL, -2.087028925E9, x'998b'), (NULL, '226625780', 'me'); -- 0ms;
INSERT OR REPLACE INTO t1(c51) VALUES ('730604295'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t1(c0, c51) VALUES (x'ceee', CASE WHEN (((0Xffffffffb13ee96c))<>((0.1461559522339898))) THEN CASE WHEN 'y㐶.E' THEN x'' END WHEN IFNULL(NULL, x'') THEN ((x'')<=(x'')) WHEN 'F?,]\rꇘ' THEN ((('-1955428391'))>=((0.8785686310539712))) ELSE (('15Ctd?') BETWEEN (x'') AND (0.8132715073598571)) END); -- 0ms;
INSERT OR ROLLBACK INTO t1(c51) VALUES (0Xffffffffb13ee96c); -- 1ms;
INSERT OR IGNORE INTO t0(c44, c56, c93, c97) VALUES (x'', '-1020437339', x'', 0xab08dfb); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(NULL) WHERE ((((t1.c0)>>(t1.c51)))<(t1.c51 COLLATE RTRIM)); -- 0ms;
DELETE FROM t0 WHERE 0.8115044209203766; -- 0ms;
PRAGMA default_cache_size = -399927187; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ((AVG(t0.c56)) ISNULL), (- (((t0.c97) IS FALSE))), (((t0.c56, t0.c56, t0.c97)) NOT BETWEEN ((t0.c93, t1.c0, t1.c51)) AND ((t1.c51, x'', t0.c44))) COLLATE NOCASE, NTH_VALUE(NULL, ((- (t1.c0)) IN (CASE WHEN t1.c51 THEN t1.c51 ELSE t1.c0 END))) OVER (), ((((((((((t0.c93) BETWEEN (t0.c56) AND (t0.c56)))AND(CASE t0.c56  WHEN t1.c51 THEN t1.c0 END)))OR((((t0.c56))<=((t1.c51))))))AND(((t0.c56)|(t0.c56)))))OR((+ (t1.c51)))) FROM t1 WHERE ((- ((NULL IN (0.5570499857962637)))));SELECT DISTINCT ((((t1.c0)AND(t0.c56)))OR(NULL)) COLLATE RTRIM FROM t0;SELECT DISTINCT (- ((+ (t1.c51)))) FROM t1, t0 WHERE ('.Ll4TIW'); -- 0ms;
SELECT ALL (NOT (t0.c56)) COLLATE BINARY FROM t1 WHERE (-6.25696626E8);SELECT DISTINCT ((CASE t1.c51  WHEN t1.c51 THEN t0.c97 WHEN t0.c93 THEN t1.c0 WHEN 0.007508244057719882 THEN t0.c97 END) ISNULL) FROM t0;SELECT DISTINCT MIN((('-306798120') IS FALSE)) FROM t0 INDEXED BY i80;SELECT ALL SUM((~ (t0.c93)) COLLATE BINARY) FILTER(WHERE ((((t1.c0)/(t0.c44)))IS(((t1.c0) NOT BETWEEN (t0.c97) AND (t1.c51))))) OVER ( ORDER BY ((((CAST(t0.c93 AS TEXT))AND(((((((((t1.c0)AND('y2')))OR(t1.c0)))AND(t0.c44)))AND(t0.c56)))))AND(((t0.c93) IS FALSE))) DESC  NULLS FIRST), ((x'd9ce')/(((((t0.c97)OR(t1.c51)))OR(t0.c44)))), LAG(CASE WHEN (~ (885195008)) THEN (~ (t0.c97)) END, ((x'')>=(CASE t0.c56  WHEN t1.c51 THEN 0.6892966893154561 WHEN t0.c93 THEN t0.c56 WHEN t0.c44 THEN t0.c56 END)), ((t1.c51 COLLATE NOCASE)=(CHANGES()))) OVER (), CAST(((t0.c44)<>(t0.c56)) AS NUMERIC), (SUM(t1.c51) IN ((t1.c0 IN ()))) FROM t0, t1 WHERE ((((8.76497207E8)) NOT BETWEEN ((((0Xd8208f4) NOT BETWEEN ('O䷹u()s%z') AND (x'')))) AND ((((x'')OR(NULL)))))) GROUP BY (UPPER(DISTINCT t0.c56) IN ()) HAVING t0.c93; -- 1ms;
SELECT t1.c0, ((x'') IS TRUE), (((((t0.c56, t1.c0, x''))<((t1.c51, t1.c51, t1.c0)))) BETWEEN (MIN(t0.c56)) AND (t0.c93 COLLATE NOCASE)) FROM t1 WHERE ((((1924957928)) NOT BETWEEN ((0.9795726615996001)) AND ((0.1999986558837752))) COLLATE BINARY);SELECT DISTINCT (((CAST(t0.c44 AS BLOB)))>((((t1.c0) BETWEEN (t0.c97) AND (t1.c51))))) FROM t0, t1; -- 0ms;
SELECT DISTINCT (COUNT(t1.c51) IN ()) FROM t0; -- 0ms;
SELECT CASE WHEN CAST(t0.c93 AS TEXT) THEN (~ (t1.c0)) ELSE ((((((((t1.c51)AND(0.9795726615996001)))OR(t0.c97)))OR(t0.c44)))AND(t1.c0)) END FROM t1, t0 GROUP BY ((t0.c93 COLLATE RTRIM)GLOB(((t0.c56) NOT NULL))) HAVING (CASE WHEN t0.c44 THEN t1.c0 WHEN t1.c0 THEN '' WHEN t0.c56 THEN t0.c44 WHEN t1.c51 THEN t1.c0 WHEN t1.c51 THEN t0.c97 END IN ()); -- 0ms;
SELECT DISTINCT CAST(((t0.c97)*(t0.c93)) AS REAL) FROM t0, t1 ORDER BY (((t1.c0))!=(((- (t0.c93))))) DESC  NULLS LAST, ((((((t0.c93) BETWEEN (t0.c44) AND (t1.c51)))OR(((t1.c0) NOT BETWEEN (t0.c93) AND (t0.c56)))))OR(0.9937500473665223)) DESC; -- 0ms;
SELECT DISTINCT MIN((((t1.c0)) NOT BETWEEN ((t1.c51)) AND ((t0.c97))) COLLATE BINARY) FROM t1, t0 WHERE (0.8132715073598571); -- 0ms;
SELECT x'', FIRST_VALUE(CAST(((((((((t0.c97)OR(t0.c93)))AND(t0.c97)))AND(t0.c44)))OR(t0.c56)) AS REAL)) OVER (), ((t1.c51 COLLATE BINARY)>(((t1.c0) IS TRUE))) FROM t0 WHERE ((((((-1564151198) NOT NULL)))<=((((x'') IS TRUE)))));SELECT DISTINCT (((t0.c97 IN ())) NOT BETWEEN (((t0.c97)GLOB(t1.c0))) AND (CASE WHEN -1583135569 THEN t0.c44 ELSE t1.c51 END)) FROM t1;SELECT ((((t1.c0) IS FALSE)) IS TRUE) FROM t1 WHERE (((x'' COLLATE BINARY)<=('Zn u. '))); -- 0ms;
SELECT DISTINCT ((((t1.c0)<>(t0.c97)))OR(((((t0.c97)OR(NULL)))OR(t0.c56)))) FROM t1 LIMIT 1200330985;SELECT DISTINCT ((((((t0.c97)OR(t1.c0)))AND(t1.c51))) NOT BETWEEN (((t0.c56) IS TRUE)) AND (((t0.c97) NOT BETWEEN (t1.c51) AND (t1.c51)))) FROM t1, t0 WHERE (((((x'')|('.ll4tiw')))>(NULL))); -- 0ms;
SELECT ALL (((t1.c0, t1.c0, t0.c97, t1.c0, t0.c97)) BETWEEN ((NULL, '-494837240', ((((t1.c51)OR(t0.c93)))AND(t0.c97)), ((t0.c93)>>(t0.c93)), '-1564151198')) AND ((CASE t1.c51  WHEN t1.c51 THEN NULL END, ((t0.c44) BETWEEN (t0.c97) AND (t0.c97)), t0.c44, '', ((t1.c0) IS FALSE)))), CASE WHEN COUNT(t0.c56) THEN ABS(x'') ELSE (((t0.c93)) BETWEEN ((t1.c51)) AND ((x''))) END, (- (t1.c51 COLLATE NOCASE)) FROM t0 WHERE ((((x'8de2d70b' COLLATE RTRIM))<((CAST('3wZ' AS BLOB))))) ORDER BY t0.c56 ASC  NULLS FIRST;SELECT DISTINCT CASE ((t1.c51)>=(t1.c0))  WHEN CASE WHEN '1843985856' THEN t0.c97 WHEN t0.c93 THEN 'T\rmj鎉)L' WHEN t0.c44 THEN t0.c97 ELSE t0.c56 END THEN (((t0.c97, t0.c93, t1.c51)) NOT BETWEEN ((t0.c97, t0.c97, t0.c44)) AND ((t1.c51, t0.c97, t0.c93))) END FROM t0;SELECT ((((t0.c97) ISNULL))-(COUNT(*))), ((SQLITE_VERSION())||(((t1.c51) IS FALSE))), ((t0.c93) NOT BETWEEN (GROUP_CONCAT(0.08285119455938939)) AND (((('\n')) BETWEEN ((t1.c51)) AND ((t1.c0))))) FROM t0 WHERE (607538623);SELECT DISTINCT CASE WHEN ((t0.c56) BETWEEN ('-1043233830') AND (t0.c97)) THEN (t1.c51 IN ()) WHEN 599940283 THEN ((t1.c51)<(t1.c51)) WHEN ((((t0.c44)OR(t1.c51)))AND(t0.c44)) THEN (((t0.c56))<>((t1.c51))) ELSE ((t0.c44) NOTNULL) END FROM t0;SELECT DISTINCT ((((((t0.c44)AND(0.7551978284551119)))AND(t0.c44))) NOT BETWEEN (x'') AND ((- (t0.c93)))) FROM t0; -- 0ms;
SELECT ALL MAX(((t1.c51)|(t0.c93))), (((((t0.c44)AND(t0.c44)))AND(t0.c56)) IN ()), ((((((t0.c97) NOT BETWEEN (t1.c0) AND (t0.c97)))OR('' COLLATE BINARY)))AND(((((((((t0.c44)OR(t1.c51)))AND(t0.c56)))OR(t0.c97)))AND(t1.c51)))) FROM t0, t1; -- 0ms;
SELECT DISTINCT (((t1.c51)) BETWEEN ((TRIM(t0.c97, t1.c51))) AND ((t1.c0))) FROM t0 WHERE (CAST((((('-494837240')OR(x'')))AND('乖VW)[h')) AS BLOB));SELECT DISTINCT CAST(CASE t1.c0  WHEN t0.c97 THEN t0.c97 WHEN t1.c51 THEN t0.c97 WHEN 0.747829447222632 THEN t0.c97 ELSE -3.99927187E8 END AS BLOB) FROM t0;SELECT DISTINCT (((t0.c44)) NOT BETWEEN ((t1.c0 COLLATE NOCASE)) AND (((t0.c56 IN ())))) FROM t1, t0; -- 0ms;
SELECT ALL (((((t0.c97)OR(t0.c44)))AND(t0.c44)) IN ()), CASE WHEN CAST(t0.c97 AS NUMERIC) THEN ((t0.c56) NOT BETWEEN (t1.c0) AND (t0.c44)) ELSE (~ (t1.c0)) END, CAST((('hRsS!JGN{') BETWEEN (t0.c44) AND (t0.c93)) AS INTEGER), (((((t0.c97))>=((t1.c0))))*((t1.c0 IN ()))), ((((((((((t0.c44)AND(t1.c0)))AND(t0.c93)))OR(t1.c51)))AND(t0.c44))) NOTNULL) FROM t0 WHERE (((0.4969108562030935 COLLATE NOCASE) NOT NULL)) LIMIT 599940283 OFFSET -1843811983;SELECT DISTINCT (((~ (0.35792029263183034)))<<((~ (t1.c0)))) FROM t1, t0 WHERE (x'') LIMIT 876497207 OFFSET -1432463038; -- 0ms;
SELECT DISTINCT ((((t0.c93) IS FALSE)) ISNULL), SUM(CASE WHEN t1.c51 THEN t1.c0 WHEN t1.c51 THEN '톾Yf乖\rJ' WHEN t0.c56 THEN t1.c0 ELSE t0.c56 END) OVER (), ((((((t0.c44, t1.c0, t1.c51))<=((t1.c0, t0.c44, t0.c56)))))!=((((t1.c51) NOT BETWEEN (t1.c0) AND (t0.c56))))) FROM t1 ORDER BY CASE WHEN ((t0.c44) BETWEEN (t0.c56) AND (t0.c97)) THEN ((t1.c51)GLOB(t1.c0)) ELSE 0.2260310783976447 END  NULLS LAST;SELECT DISTINCT (~ (((t1.c51) IS TRUE))) FROM t1, t0 WHERE (((x'') NOT NULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((t0.c93)) NOT BETWEEN ((CAST(t0.c56 AS INTEGER))) AND ((((t0.c93)GLOB(t0.c56))))) FROM t1;SELECT ALL ((NULL COLLATE BINARY)OR(COUNT(t1.c0))), ((t0.c97 COLLATE BINARY)+((((t0.c56))<((t1.c0))))), ((((((((((0.4310964825667908)OR(t0.c44)))OR(t0.c44)))OR(t1.c0)))AND(NULL)))<=(NULL)) FROM t0, t1 WHERE (json_valid((('')<(x'')))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(NULLIF(DISTINCT t1.c0, t0.c93)) OVER ( PARTITION BY ((((t0.c93)OR(x''))) NOTNULL), NULL) FROM t1 WHERE (((CAST(0X4d841c7a AS BLOB)) NOT BETWEEN (((x'') BETWEEN (0.028027848638013775) AND (6.07538623E8))) AND (((((((((0.8785686310539712)AND(-2.087028925E9)))AND(x'91dd')))AND(NULL)))AND(0.10753976007786348))))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN t0.c44 COLLATE BINARY WHEN json_array(t0.c44, t0.c56) THEN ((t0.c56)/(0.6830577583090854)) WHEN LOWER(DISTINCT t0.c97) THEN ((((t0.c97)OR(t0.c93)))AND(t0.c97)) ELSE CASE WHEN t0.c44 THEN x'' WHEN t1.c0 THEN t0.c93 WHEN t1.c0 THEN t0.c93 END END;SELECT ((((t0.c56) IS TRUE))/(CAST(t1.c0 AS NUMERIC))) FROM t1, t0 WHERE (((((x'') BETWEEN (x'') AND (x'')))<<((('1950588638')&(0.37798522276291446))))) EXCEPT SELECT ALL ((CAST(t0.c93 AS NUMERIC))<(((t0.c56) IS FALSE))) FROM t0, t1; -- 0ms;
SELECT ALL -1.564151198E9 FROM t0, t1 EXCEPT SELECT ALL (((((t0.c56))<((t1.c51)))) NOT NULL) FROM t1, t0 WHERE ((((x'')LIKE(NULL)) IN ((0xffffffffd33f5c08 IN ()), (('oO/g')<<('aGg(a\n'))))) LIMIT 226625780 OFFSET -1583135569; -- 0ms;
SELECT ALL (((t0.c44) IS TRUE) IN ()) FROM t1; -- 0ms;
SELECT ALL (((((~ (t0.c56)))OR(((((t0.c97)OR(t0.c93)))OR(t0.c56)))))OR((((t1.c51))<((x''))))) FROM t0, t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((0.3695236415415143) IS TRUE)) FROM t0 WHERE (-1643521301) ORDER BY TRIM('-399927187') ASC  NULLS FIRST; -- 0ms;
SELECT ALL x'' FROM t0, t1; -- 0ms;
SELECT DISTINCT ((((((t0.c56)OR(t1.c0)))OR(t1.c0))) BETWEEN (json_extract(t0.c56, '')) AND ((x'3c75' IN ()))) FROM t1, t0; -- 0ms;
SELECT 0.7190511352705196 FROM t1 WHERE (((((((-1e500)<(0Xe62910f)))AND(((('1300503674', 0.6191237992891324, 0x4d841c7a, 0.8457315605455137, 0.8645316316130658))!=(('3wZ', -31544470, 0.1461559522339898, '607538623', x''))))))OR(x''))); -- 0ms;
SELECT DISTINCT CAST(AVG(t0.c56) AS TEXT), CASE WHEN t0.c93 THEN ((t1.c51)/(t0.c97)) ELSE (~ (t1.c51)) END, CASE ((t1.c51) BETWEEN (t0.c56) AND (t1.c0))  WHEN (((t0.c93)) NOT BETWEEN ((t0.c44)) AND ((t0.c56))) THEN rtreenode(t0.c44, t1.c0) ELSE (NOT (t1.c0)) END FROM t0 WHERE ((((('-399927187')<<('0.4969307378483865')))-(0.3598974828281635)));SELECT DISTINCT ((('1940053031', t0.c44, t0.c44)) NOT BETWEEN ((t1.c0, t1.c0, '-1043233830')) AND (('-1817291038', t0.c44, t1.c0))) COLLATE NOCASE FROM t1 WHERE (((((((0.5570499857962637) NOT BETWEEN (NULL) AND ('.,)E')))AND(((0.7666189969377396) IS FALSE))))OR(0Xffffffff942a3436 COLLATE NOCASE)));SELECT DISTINCT ((((t0.c56)OR(t0.c44)))OR(t0.c93)) COLLATE NOCASE, ((((t0.c44) NOT NULL))|((t1.c51 IN (t1.c0)))), COUNT(((t1.c0) NOT NULL)) FROM t0, t1; -- 0ms;
SELECT ALL (((((((((t0.c56)AND(t0.c97)))AND(t0.c97)))AND(t0.c44)))OR(t0.c97)) IN (highlight(t0.c44, t1.c51, t0.c93, t1.c51))), CAST((((t1.c51))>=((t0.c93))) AS BLOB), ((((t0.c44) NOT BETWEEN (t0.c56) AND (t0.c93))) IS FALSE) FROM t1, t0 WHERE (((((('-732968457')) NOT BETWEEN ((1316454073)) AND ((955620070))))>(((x'624f')<=(-1.843811983E9))))) LIMIT 2031411874; -- 0ms;
SELECT CAST(((t0.c97) BETWEEN (t1.c51) AND (NULL)) AS BLOB) FROM t0, t1 WHERE ((NOT (0.0016318334441037807 COLLATE NOCASE))) LIMIT -1904537112 OFFSET -406728069; -- 0ms;
SELECT ((CASE t1.c0  WHEN x'' THEN t0.c97 ELSE t1.c0 END) ISNULL) FROM t0 WHERE (((x'')<=(0.6751180780194145)) COLLATE NOCASE);SELECT (t1.c51 COLLATE NOCASE IN ()) FROM t1, t0 ORDER BY (+ (CAST(t1.c0 AS TEXT))), ((((CASE t0.c56  WHEN t0.c56 THEN t0.c56 WHEN t0.c93 THEN t1.c51 WHEN t1.c51 THEN t1.c51 END)OR(((((((((t0.c56)OR(t0.c56)))AND(t0.c44)))OR(t0.c93)))AND(t0.c56)))))AND(CASE t0.c56  WHEN t0.c97 THEN t0.c56 WHEN t1.c0 THEN t0.c56 WHEN t0.c97 THEN t0.c93 ELSE t0.c93 END))  NULLS FIRST, ((((TRIM(DISTINCT t1.c0, t0.c93))OR(((t0.c56) NOT BETWEEN (t0.c56) AND (t1.c51)))))OR(CAST(t0.c56 AS REAL)))  NULLS LAST; -- 0ms;
SELECT (TOTAL_CHANGES() IN ()) FROM t0 WHERE (((((NULL)>=('gڨ'))) BETWEEN ((('S#FefT')+(0x64919abc))) AND (((NULL)&(x''))))); -- 1ms;
SELECT ALL (((LIKELY(t0.c56)))>=((NULLIF(0Xffffffff9e09daeb, t1.c51)))), x'c729', (((t0.c44) NOT NULL) IN ()) FROM t0, t1 WHERE (HEX(((((NULL)OR(0.3353601517349327)))AND('15CTD?')))) LIMIT -1809173450 OFFSET 241340687; -- 0ms;
SELECT DISTINCT FIRST_VALUE((-9223372036854775808 IN (t0.c93, 'YE')) COLLATE BINARY) OVER () FROM t0 WHERE (CASE WHEN (0.2260310783976447 IN ('? ', NULL)) THEN ABS(DISTINCT NULL) ELSE (('2040610108')+(-1.020437339E9)) END) GROUP BY NULLIF(DISTINCT t1.c51, (((t0.c97))<((t1.c51)))), (((CAST(t1.c0 AS TEXT)))<((t1.c0))), CASE ((((((((t0.c56)OR(t0.c93)))AND(t1.c51)))OR(t0.c97)))OR(t1.c51))  WHEN ((t0.c44) NOT BETWEEN (t0.c56) AND (t0.c44)) THEN ((t0.c97) NOT NULL) WHEN ((((t0.c44)OR(t0.c93)))AND(t0.c44)) THEN NULL WHEN (NULL IN ()) THEN ((t0.c44)/(t0.c97)) WHEN (((t1.c51)) NOT BETWEEN ((t1.c0)) AND ((t0.c93))) THEN LIKELIHOOD(t1.c51, 0.45189147042360567) WHEN ((((t1.c51)AND(0.23992234792148426)))AND(t0.c56)) THEN CASE WHEN t0.c93 THEN t0.c93 ELSE t0.c97 END ELSE CAST(x'' AS REAL) END;SELECT DISTINCT t0.c56, ((((t0.c97)%(1179780233))) BETWEEN (((t0.c56) NOTNULL)) AND ((((t1.c0, t0.c97, t0.c56)) NOT BETWEEN ((NULL, t0.c93, t1.c51)) AND ((t0.c93, t0.c93, t0.c93))))), ((((json_array_length(t1.c0, t0.c93))AND(0.7551978284551119)))OR(CAST(t0.c44 AS INTEGER))) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((x'') IS FALSE), ((t0.c93) ISNULL) COLLATE BINARY, CAST((t0.c97 IN (t0.c97)) AS INTEGER) FROM t0, t1 WHERE (((('-116272188') ISNULL) IN ())); -- 0ms;
SELECT ALL (NOT (((t0.c44) BETWEEN (t1.c51) AND (t0.c93)))) FROM t1 WHERE (CASE x''  WHEN x'' THEN NULL WHEN NULL THEN 0.08703838744754322 WHEN NULL THEN '112260813' END COLLATE BINARY);SELECT ALL COUNT(((t0.c93)-(t0.c56))) FILTER(WHERE (((t0.c56))<((t0.c97))) COLLATE NOCASE) OVER () FROM t1;SELECT DISTINCT (+ (CASE t0.c44  WHEN t1.c51 THEN t0.c56 WHEN t0.c44 THEN t0.c44 WHEN t0.c93 THEN t0.c93 END)), t1.c51, (CASE WHEN t0.c44 THEN t1.c0 ELSE t1.c51 END IN ()) FROM t0 WHERE ((((((NULL))=((0.24511857295395378)))) BETWEEN (('-1133445722' IN ())) AND (((x'') ISNULL)))) LIMIT -31544470;SELECT DISTINCT (0.08703838744754322 IN ()) FROM t1, t0 WHERE (CAST(('t\rmj鎉)l' IN (0.7190511352705196)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((((((t0.c97)AND(t1.c0)))OR(t0.c44)))OR((t1.c51 IN ()))))OR(CAST(t0.c97 AS INTEGER))) FROM t1, t0 WHERE (((('*_s+', 0.10375821912267935, x'28c39060'))>(('', '', NULL))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT MIN(((t1.c51)+(t1.c51))) FROM t0, t1 WHERE ((CASE x'bf1e'  WHEN '-1643521301' THEN NULL ELSE '226625780' END IN ())); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((((t1.c51)AND(t1.c0)))AND(t1.c0))) FROM t1, t0 LIMIT -677379772 OFFSET -116272188; -- 0ms;
SELECT ALL (+ (LOWER(DISTINCT t0.c56))), (((t0.c93 IN ())) ISNULL), ((COALESCE(DISTINCT t0.c44, t1.c0)) NOT NULL), ((((t1.c0) NOT BETWEEN (t0.c97) AND (t0.c97)))<(((t0.c97) NOT NULL))), TRIM(t0.c97) FROM t1, t0; -- 0ms;
SELECT DISTINCT (CASE WHEN t0.c93 THEN t0.c93 END IN (((t0.c56) BETWEEN (t0.c97) AND (t0.c93)), (NOT (t1.c51)))) FROM t0 WHERE (x'');SELECT DISTINCT SUM(json_extract(t0.c56, t0.c93)) FROM t0, t1 LIMIT 1741229563; -- 0ms;
SELECT ALL ((t0.c44)<<(((((((((t1.c51)OR(t0.c44)))OR('a&4')))AND(NULL)))AND(t0.c93)))), CASE WHEN CAST(t1.c51 AS REAL) THEN CAST(t0.c93 AS INTEGER) WHEN ((t0.c93) IS TRUE) THEN ((t1.c51)GLOB(t1.c51)) WHEN COUNT(t1.c51) THEN t0.c97 END, (((((t1.c0)OR(t1.c51)))OR(NULL)) IN ()) FROM t1, t0 GROUP BY ((t0.c56 COLLATE NOCASE)>=((+ (t0.c44)))); -- 0ms;
SELECT ((((t0.c56) BETWEEN (t1.c0) AND (t1.c0)))>((((t0.c93))==((t0.c44))))) FROM t1;SELECT ALL SUM(((t0.c56) NOT BETWEEN (t0.c97) AND (0.0015489292692373313))), json_extract(((t0.c44) NOT BETWEEN (t1.c51) AND (t0.c97)), ((((t0.c97)OR(t0.c44)))AND(t1.c0)), ((t0.c93) IS FALSE), NULLIF(t0.c44, t1.c51)), ((CASE t0.c56  WHEN t1.c51 THEN t1.c51 ELSE t0.c44 END)&(x'8e7e2e14')) FROM t0, t1; -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), (((NOT (t0.c56))) IS TRUE), LAST_INSERT_ROWID() FROM t0; -- 0ms;
SELECT ((COUNT(t0.c93))<(t1.c0 COLLATE BINARY)) FROM t0, t1 WHERE ('e蜹RU蟙G	0酚'); -- 0ms;
SELECT DISTINCT (((((t1.c0))>((t1.c0)))) NOT BETWEEN (CAST(t0.c56 AS INTEGER)) AND (((t0.c93)+(t1.c51)))), t0.c97, UPPER(t0.c44) COLLATE BINARY FROM t0;SELECT COUNT(*) FROM t1 LIMIT -1382146414; -- 6ms;
SELECT CAST(t0.c93 AS INTEGER) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((((((t0.c97) BETWEEN ('0.028027848638013775') AND (t1.c51)))AND(CASE WHEN t1.c0 THEN t0.c97 ELSE t0.c97 END)))OR(((t0.c97)/(t0.c97)))), LIKELIHOOD(TOTAL(t0.c93), 0.0631907629859928), LEAD(((((t0.c56))!=((t0.c44))) IN ()), TYPEOF(t1.c51), t0.c44) OVER () FROM t1, t0 GROUP BY ((((t1.c0)OR(t0.c97))) IS FALSE) HAVING SUM((- (t0.c44))) COLLATE BINARY; -- 0ms;
SELECT ((((t0.c93)GLOB(t1.c0))) NOT BETWEEN ((NOT (t1.c51))) AND (((t0.c44)>>(t1.c0)))), '-817963035', (+ (t1.c0)) FROM t0, t1 WHERE (((((('-1646385849'))<=(('-469598578')))) BETWEEN (NULL COLLATE BINARY) AND ((NOT (0.04151764277688452))))) ORDER BY (NOT (((t0.c93) NOT BETWEEN (t0.c44) AND (t0.c97)))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT (((CASE WHEN t0.c97 THEN t0.c97 WHEN t1.c51 THEN t1.c0 WHEN t0.c56 THEN t0.c97 WHEN t1.c51 THEN t0.c93 WHEN NULL THEN t0.c97 ELSE t0.c44 END))<((0.5961362848607688))), (((('')OR((+ (t0.c93)))))AND(((t0.c97)+(t0.c97)))), ((CASE WHEN t0.c44 THEN t1.c51 ELSE t0.c56 END) NOTNULL) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((((((((((((((-1.020437339E9)OR(x'')))AND(t0.c97)))AND(t1.c0)))AND(t0.c93)))AND(t0.c97)))OR(t0.c44))) IS FALSE) FROM t1 WHERE (CASE ((NULL) ISNULL)  WHEN ((NULL) IS TRUE) THEN CAST(x'1741' AS INTEGER) ELSE CASE WHEN x'4fadbaf9' THEN x'' END END);SELECT DISTINCT MAX((((t0.c44))>((t0.c97)))), (t0.c56 IN ()) COLLATE BINARY, COUNT(*) OVER () FROM t0, t1 WHERE (((('1063 206625453918879151T-1175958071595346499-462-282:')>>(NULL)) IN ())); -- 0ms;
SELECT DISTINCT MAX(CASE t0.c44  WHEN t0.c97 THEN t0.c93 END), (GROUP_CONCAT(t1.c51) IN ()), ((((((((t1.c51)OR((t0.c97 IN ()))))OR(AVG(t1.c0))))OR(t0.c44 COLLATE RTRIM)))OR(CAST(x'e63e914e' AS INTEGER))) FROM t0 WHERE (TOTAL_CHANGES());SELECT DISTINCT (+ (PRINTF(0.10753976007786348, t0.c56, t0.c56))), CASE (- (t0.c97))  WHEN UPPER(t0.c56) THEN (((t0.c93))<>((t0.c93))) ELSE ((t1.c0) NOT BETWEEN (t0.c93) AND (t0.c97)) END, GROUP_CONCAT(TYPEOF(t0.c44)) OVER () FROM t1, t0 WHERE ((((x'') IS FALSE) IN ((x'' IN (0x345fe6c7, 0.4399389109454477))))); -- 0ms;
SELECT t0.c44 FROM t0; -- 0ms;
SELECT DISTINCT ((((NULL)OR(((t1.c51) BETWEEN (t0.c97) AND (t0.c93)))))AND((('Pm4L0dK') NOT BETWEEN (t0.c44) AND (t0.c56)))), ((((((t0.c97)OR(t1.c51)))OR(t0.c44)))>>(((0X478b98e9)AND(t0.c93)))), t1.c0, RANK() OVER (), ((((t0.c97) NOT NULL))<(CAST(t0.c56 AS INTEGER))) FROM t0, t1 WHERE (NULL); -- 0ms;
SELECT DISTINCT (t1.c51 IN ((((t0.c97, t0.c44, t0.c93))<>(('7(Cu', t0.c56, t1.c51))))) FROM t1 WHERE (((COALESCE(x'', x'')) IS FALSE)) GROUP BY (((- (t0.c97))) BETWEEN ((((x'521d')) BETWEEN ((t0.c93)) AND ((-4.06728069E8)))) AND ((t1.c0 IN ())));SELECT (('')<(t1.c0)), ((t0.c97 COLLATE BINARY) ISNULL), NULL FROM t1, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT CAST(((t0.c97)==(t0.c93)) AS TEXT) FROM t0, t1 WHERE (((((((((0x259e83a1)AND(((0.38753052352935835)>=(NULL)))))OR(((x'')GLOB(NULL)))))OR(CAST(0.7919232621024251 AS TEXT))))AND((('-347724999') NOT BETWEEN (0.6370665539810221) AND (NULL))))); -- 0ms;
SELECT ALL (((t0.c44)) BETWEEN ((t1.c51 COLLATE NOCASE)) AND (((t0.c93 IN ())))) FROM t0, t1 NOT INDEXED WHERE (((((-1.82230183E8)+(0.28586344617813575))) NOTNULL)); -- 0ms;
SELECT ALL CAST(((t1.c0)%(t0.c93)) AS TEXT) FROM t0, t1 WHERE (IFNULL((((x'')) BETWEEN ((x'0fbb8edb')) AND ((NULL))), ('' IN ('1300503674', NULL)))); -- 0ms;
SELECT DISTINCT ((((((((t0.c56)AND(t0.c44)))AND(t0.c56)))OR(HEX(DISTINCT t1.c0))))AND((((t0.c93)) NOT BETWEEN ((t1.c51)) AND ((t1.c0))))) FROM t1 WHERE ((((((((((x'')OR('iQSqOSvu')))OR(0.6830577583090854)))OR(x'')))AND('-L')) IN ()));SELECT ALL GROUP_CONCAT((((t1.c51)) BETWEEN ((t0.c97)) AND ((t0.c97)))) FROM t0, t1 WHERE ((((NULL)) BETWEEN ((1123780409)) AND ((x''))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(t1.c0 AS TEXT)) OVER () FROM t0;SELECT DISTINCT json_type(((NULL) NOT BETWEEN (t1.c51) AND (t0.c97))), CASE WHEN CAST(NULL AS REAL) THEN CASE t0.c56  WHEN t0.c97 THEN t1.c51 END END, (((t0.c93)) NOT BETWEEN ((COUNT(*))) AND ((0.7778524110024287))), (((((((t1.c51)AND(t1.c51)))OR(t1.c0)), (t1.c51 IN ()), ''))<=((CAST(t0.c97 AS REAL), ((t0.c56)%(0.8645316316130658)), ((t0.c97)>(t0.c93))))), '1490469662' FROM t0, t1 WHERE (CAST(CASE x''  WHEN '-1955428391' THEN NULL WHEN x'' THEN 0X4f1561e7 WHEN NULL THEN NULL ELSE x'1271' END AS TEXT)); -- 0ms;
SELECT DISTINCT ((CAST(t1.c51 AS INTEGER))OR(('dP' IN (x'')))), CASE (t0.c93 IN ())  WHEN ((((t0.c93)OR(t1.c51)))AND(t0.c44)) THEN CAST(t0.c93 AS REAL) ELSE '骼(av㐶vp' END, t1.c0 FROM t0 WHERE ('');SELECT DISTINCT ((CASE WHEN t0.c93 THEN t1.c0 ELSE t0.c97 END)>>(((((t0.c97)AND(t0.c44)))AND('A~')))), ((((t0.c44)>=(t1.c51)))IS NOT(((t0.c97)/(t0.c93)))), (CASE WHEN t0.c97 THEN t0.c56 WHEN t0.c44 THEN t1.c0 WHEN t0.c44 THEN t1.c51 END IN ()), (NOT (((((t1.c0)OR(t0.c97)))AND(t0.c97)))), LOWER(DISTINCT (NOT (t1.c0))) FROM t1, t0 WHERE (TRIM(NULL, NULL COLLATE RTRIM)) LIMIT 112439763; -- 0ms;
SELECT CAST(((t0.c97)/(t0.c93)) AS TEXT), SUM(CAST(t0.c93 AS TEXT) COLLATE RTRIM), ((((t1.c0)GLOB(t1.c0))) NOT BETWEEN (LIKELIHOOD(t0.c93, 0.16431169932412293)) AND ((+ (t0.c44)))) FROM t1, t0 WHERE (CAST(0.159585983869878 COLLATE NOCASE AS REAL)); -- 0ms;
SELECT ((t0.c97) BETWEEN (((t0.c97) BETWEEN (t1.c51) AND (t0.c97))) AND ((((t1.c0))>((t0.c56))))) FROM t1 CROSS JOIN t0 ON (((((t0.c93)) NOT BETWEEN ((t0.c44)) AND ((t1.c51))))!=((((t1.c51, t0.c56, t0.c44))=((t0.c56, 'i眦_!A', t0.c56))))) WHERE (((((x'')<(0X6c3806a8)))GLOB(CAST(1.815611048E9 AS TEXT)))); -- 0ms;
SELECT DISTINCT IFNULL(SUM(t0.c93), ((((((((0.011790862696594795)OR(t0.c93)))OR(t0.c56)))OR(t0.c56)))OR(0X2c43e8d4))), ((CASE t1.c51  WHEN t0.c44 THEN t1.c51 END) NOT BETWEEN (MIN(t0.c44)) AND (CASE t0.c56  WHEN t1.c0 THEN t0.c56 ELSE t1.c51 END)), (((t0.c93) IS FALSE) IN ()), ((t0.c44)IS NOT(CAST(t0.c56 AS INTEGER))), ((CAST(t0.c56 AS REAL)) NOT BETWEEN ((t1.c0 IN ())) AND (CAST(t0.c97 AS INTEGER))) FROM t1, t0 WHERE (load_extension((NOT (0.9937500473665223)))) ORDER BY (((t0.c93 IN ()))<<(((t1.c51)>(t0.c44)))) ASC; -- 0ms;
SELECT (~ (json_quote(t0.c56))) FROM t1, t0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT (((+ (t1.c0)))==(((((((((t1.c51)OR(t1.c51)))OR(t0.c44)))OR(t1.c51)))OR(t0.c97)))) FROM t0 WHERE (CASE WHEN ((x'') BETWEEN ('E') AND (8.76497207E8)) THEN ((('1708953946')) BETWEEN (('-347724999')) AND ((x'caadbaee'))) END);SELECT DISTINCT (((t0.c97)) BETWEEN ((CAST(t0.c44 AS TEXT))) AND ((HEX(t0.c93)))) FROM t0 WHERE ((((((((NULL))>=((0Xffffffff96cfe2d7))))OR(((0.10753976007786348) NOTNULL))))AND((('')-(0X501f85d5))))); -- 0ms;
SELECT DISTINCT (((((t1.c51) NOT BETWEEN (t1.c0) AND (t0.c97))))<=((((t1.c0) BETWEEN (t0.c93) AND (t0.c93))))), ((((t0.c56)LIKE(t0.c93)))*((NOT (t0.c93)))), TRIM(DISTINCT (((t0.c56)) NOT BETWEEN ((t0.c44)) AND ((t1.c51))), (t1.c0 IN ())) FROM t1;SELECT GROUP_CONCAT((t0.c44 IN ())) COLLATE NOCASE, ((((((x'8f3d')OR(t0.c44)))OR(t1.c51)))AND(t0.c93 COLLATE BINARY)), (t0.c44 COLLATE BINARY IN ()), COUNT(*), (((((t1.c51) NOTNULL), ((x'') IS TRUE), ((((((((t0.c97)OR(t0.c44)))AND(t1.c0)))OR(t0.c93)))OR(t0.c97))))>=(('pm4l0dk', ((((t0.c97)AND(t0.c44)))OR(t0.c93)), SUM(t0.c97)))) FROM t1;SELECT CAST((t1.c0 IN (t1.c51, t0.c44)) AS BLOB) FROM t1 INDEXED BY i80 WHERE (((NULL)<('')) COLLATE BINARY);SELECT DISTINCT ((json_array_length(t0.c56, t0.c93)) NOT BETWEEN (COALESCE(DISTINCT 0.29936659668116117, t0.c56)) AND ((t0.c44 IN ()))), ((UPPER(DISTINCT t0.c44)) ISNULL), CASE LIKELY(t1.c0)  WHEN ((t0.c93) IS TRUE) THEN ((t1.c51)*(t0.c56)) END FROM t0 WHERE (((CAST(0.6932793569650965 AS BLOB))GLOB(SQLITE_COMPILEOPTION_GET(x'bd97'))));SELECT DISTINCT CAST('3捙\nL0''ES/' AS TEXT) FROM t0, t1 ORDER BY ((x'072e') NOT NULL); -- 0ms;
SELECT DISTINCT load_extension(t0.c56 COLLATE NOCASE, (((t0.c93)) NOT BETWEEN ((t0.c97)) AND ((t0.c93)))) FROM t0, t1; -- 0ms;
SELECT ((((t0.c93)%(t0.c93)))IS NOT(CASE WHEN t0.c93 THEN t0.c97 WHEN t1.c0 THEN t0.c56 WHEN t1.c0 THEN 1316454073 ELSE t0.c93 END)), (NOT ((~ (x'')))), '-1020437339' FROM t1 WHERE ((((NOT (x''))) ISNULL));SELECT DISTINCT COUNT(*) FROM t1, t0; -- 0ms;
SELECT DISTINCT (((((t1.c0))>=((t0.c44))))<=(CASE t1.c51  WHEN NULL THEN t0.c93 ELSE t0.c44 END)), CAST(((((t1.c51)OR(t1.c51)))AND(t1.c51)) AS TEXT), ABS(DISTINCT CASE WHEN 0x34c30100 THEN t1.c51 ELSE t0.c93 END) FROM t0 INDEXED BY i80, t1 WHERE ((NOT (CAST(0.649556819153648 AS REAL))));SELECT ALL GROUP_CONCAT(((t0.c93) IS FALSE)) FILTER(WHERE ((t0.c97)GLOB((+ ('1712498581'))))) OVER () FROM t0, t1; -- 0ms;
SELECT ALL ((t1.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c44)AND(t0.c56)))AND(t1.c51))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c97)))) FROM t1 WHERE (CAST((((x'c5b6', x'', '955620070')) NOT BETWEEN ((x'', NULL, x'')) AND ((0.7542055090483022, '', 0.7190511352705196))) AS INTEGER));SELECT DISTINCT x'5dd3' COLLATE NOCASE, (((((t0.c93 IN ()))AND((((t1.c51, t0.c97, t0.c44)) BETWEEN ((t0.c44, t1.c0, t1.c0)) AND ((t1.c51, t0.c44, t0.c56))))))OR(CASE t1.c51  WHEN t0.c56 THEN t1.c51 WHEN t1.c0 THEN t0.c56 WHEN t0.c93 THEN t0.c93 ELSE t0.c56 END)), CAST(t1.c0 AS INTEGER) FROM t1 WHERE (x'c0aa05b8');SELECT CASE t1.c0 COLLATE NOCASE  WHEN t0.c93 COLLATE NOCASE THEN ((t1.c0)IS(t1.c51)) ELSE (NOT (t1.c0)) END FROM t0, t1; -- 0ms;
SELECT ALL ((((t0.c44) NOT BETWEEN (x'786e') AND (t1.c0))) BETWEEN (0xc77a03b) AND (((((t0.c93)AND(t0.c44)))OR(t1.c0)))) FROM t0;SELECT ((((t0.c56) NOT BETWEEN (t0.c56) AND (t0.c93))) IS FALSE) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((((((((x'')AND(t0.c93)))AND(t0.c44)))OR(t1.c51)))AND(t0.c56)) COLLATE BINARY FROM t1, t0; -- 0ms;
SELECT ALL (((('-2087028925')OR(t0.c93)))AND(((t0.c97) ISNULL))) FROM t0; -- 0ms;
SELECT DISTINCT x'' FROM t1, t0 WHERE ((((~ (0.4172360176911095)))*(x'2d7c' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((t1.c51)) BETWEEN ((CASE t0.c56  WHEN t1.c51 THEN t0.c93 END)) AND (((((t0.c56, t0.c93, t0.c44)) NOT BETWEEN ((t0.c44, t0.c56, t0.c93)) AND ((t0.c93, t0.c56, t0.c44)))))) FROM t1 GROUP BY ((t0.c44) BETWEEN (t0.c97) AND (t1.c51)) COLLATE RTRIM HAVING ((((x'')OR(t1.c0))) IS TRUE);SELECT DISTINCT ((((((NULL) NOT NULL))AND(x'')))OR((~ (t1.c51)))) FROM t0, t1; -- 0ms;
SELECT '34127023' FROM t1, t0 WHERE ((('HA~wAx') NOT BETWEEN (NULL) AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((NOT (t1.c0)))IS((~ ('599940283')))), (((+ (t1.c0))) NOT BETWEEN (CAST('d' AS TEXT)) AND (CAST(t0.c97 AS REAL))), ((((t1.c0) IS FALSE))=(((t0.c44) IS TRUE))) FROM t0, t1 WHERE ((~ (MAX(0.747829447222632, NULL)))); -- 0ms;
SELECT DISTINCT CAST(t0.c44 COLLATE RTRIM AS BLOB) FROM t1, t0 WHERE (((CAST('now<|' AS INTEGER))>>(NULL))); -- 0ms;
SELECT DISTINCT (((t0.c44)) NOT BETWEEN ((t0.c93)) AND ((t0.c56))) COLLATE RTRIM FROM t0 GROUP BY (t0.c97 IN ()) COLLATE BINARY HAVING (((t0.c97)) NOT BETWEEN ((((t0.c44)+(t1.c51)))) AND ((CAST('~4uAMQCF' AS TEXT))));SELECT DISTINCT CAST(((t1.c51) NOT NULL) AS INTEGER), ((((SQLITE_SOURCE_ID())AND(t1.c0 COLLATE NOCASE)))OR(CAST(t0.c93 AS NUMERIC))), (((t1.c0) NOT BETWEEN (t0.c93) AND (t0.c97)) IN ()) FROM t0, t1 LIMIT -843315927; -- 0ms;
SELECT ALL (((t1.c51)) NOT BETWEEN ((load_extension('1300503674'))) AND ((HEX(DISTINCT t0.c97)))), MAX((+ (t0.c56)), (((t1.c51))<=((x'9e29be79')))), 0xffffffff98b4459b FROM t0 WHERE (((CASE WHEN '1e500' THEN '-1809173450' ELSE '1565740868' END)>=(((x'')<('-559753108')))));SELECT DISTINCT ((((((((((t1.c0) NOT NULL))AND(TYPEOF(t0.c93))))OR(MAX(t0.c93))))OR(CAST(t0.c93 AS REAL))))AND(((t1.c51) IS FALSE))), ((((((t1.c0)AND(t0.c56)))AND(1e500)))<=(TYPEOF(x'69a15344'))), ((t1.c0 COLLATE NOCASE) NOT NULL) FROM t0, t1; -- 1ms;
SELECT DISTINCT CASE WHEN (NOT (t1.c0)) THEN ((((t0.c97)AND(t0.c56)))OR(t0.c44)) END FROM t1, t0 WHERE ((((((0.6751180780194145)AND(0.8444148702990649)))AND('199601788')) IN (((((0xffffffffe2816208)OR(0.159585983869878)))AND(0.4792985424424039))))); -- 0ms;
SELECT CAST(((((((((t1.c51)AND(t0.c44)))AND('0.7919232621024251')))AND(t0.c93)))AND(t0.c44)) AS NUMERIC) FROM t1, t0; -- 0ms;
SELECT '' FROM t0 INDEXED BY i80 LIMIT -310244584;SELECT DISTINCT CASE WHEN CASE t1.c51  WHEN t0.c97 THEN t1.c51 WHEN t1.c51 THEN t1.c51 WHEN t0.c97 THEN t0.c93 ELSE t0.c97 END THEN ABS('-1682128378') END FROM t1, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t1.c51) NOTNULL)) FROM t0 WHERE ((((((NULL)) NOT BETWEEN (('456820351')) AND ((x'')))) BETWEEN ('' COLLATE RTRIM) AND (((((-1321277076)AND('-278307968')))AND('1144360507')))));SELECT ALL x'8055' FROM t0, t1; -- 0ms;
SELECT CAST(((('1708504757'))>=((t1.c0))) AS BLOB) FROM t0 WHERE ((~ ((('34127023') IS TRUE)))) GROUP BY ((((t0.c97)>(t0.c44)))IS NOT(((t1.c51)LIKE(t0.c56)))), CASE WHEN ((t0.c97) BETWEEN (t0.c44) AND (NULL)) THEN ((t0.c97)/(t0.c93)) END, (((x'662f' IN ())) BETWEEN (0x2982ebb) AND ((NOT (t1.c51)))) ORDER BY ((((t0.c93 IN ()), ((t1.c51)-(t0.c93)), (NOT (t1.c0))))<(('+e''jS	q嚐S', ((((t0.c97)OR(t1.c51)))AND(t0.c44)), ((t0.c93) IS FALSE))))  NULLS FIRST, (NOT (CASE WHEN t0.c93 THEN t0.c93 WHEN t0.c44 THEN t1.c0 WHEN '' THEN t0.c56 END)) ASC, t1.c51  NULLS FIRST;SELECT ALL SUBSTR('-1643521301', t1.c0) COLLATE BINARY FROM t1, t0; -- 0ms;
SELECT DISTINCT ((((((t0.c56) BETWEEN (t1.c51) AND (t0.c56)))OR(((NULL) ISNULL))))OR((+ (x'')))) FROM t0, t1 WHERE ('1200330985'); -- 0ms;
SELECT DISTINCT (((((t0.c44))<=((t0.c44)))) NOT BETWEEN (0.055019468331667376) AND (GROUP_CONCAT(t0.c44))), CASE ((t0.c93)<>(t0.c44))  WHEN (('-779976240')+(t1.c0)) THEN '-496480221' ELSE -1231576409 COLLATE NOCASE END, RANK() OVER () FROM t0, t1 ORDER BY t0.c44 ASC; -- 0ms;
SELECT ALL COUNT(*), (((-347724999 IN ('1179780233')))LIKE(((t0.c93) NOTNULL))), ((((t1.c51) IS TRUE))IS NOT(CASE WHEN t1.c51 THEN t0.c93 WHEN t0.c44 THEN 0.04350615310232364 WHEN x'' THEN t0.c44 WHEN t0.c97 THEN t0.c44 WHEN t0.c56 THEN t0.c97 END)) FROM t0, t1; -- 0ms;
SELECT DISTINCT ('9{]D6ZG' IN ((NOT (t0.c93)))) FROM t0 ORDER BY '' DESC  NULLS LAST LIMIT -992149690 OFFSET -891880684; -- 0ms;
SELECT ALL ((((((t1.c0)OR(t0.c44)))AND(1.123780409E9)))=(((t0.c93)AND(t0.c97)))), CAST((+ ('jV9')) AS TEXT), NULL FROM t0, t1; -- 0ms;
SELECT ALL 0.6261939168095273 FROM t0, t1; -- 0ms;
SELECT (- (((-2030109731) NOT NULL))) FROM t1, t0 WHERE (CAST((((NULL))!=((NULL))) AS INTEGER)) LIMIT -1043233830 OFFSET -42475914; -- 0ms;
SELECT ALL (((((t1.c51) BETWEEN (NULL) AND (x''))))=((((t1.c0)==(t0.c97))))), ((((CAST(t0.c56 AS INTEGER))AND(ABS(t1.c51))))OR(t0.c44 COLLATE RTRIM)), CAST(((t1.c0)%(t0.c56)) AS TEXT) FROM t1, t0; -- 0ms;
SELECT DISTINCT CAST((- (t0.c97)) AS INTEGER) FROM t0; -- 0ms;
SELECT ALL 0.48641440582549356 FROM t0, t1 WHERE (((0.4970259412292831)+(-1656967517)) COLLATE BINARY) GROUP BY CASE ((t0.c93) NOTNULL)  WHEN ((t1.c51) ISNULL) THEN MAX(NULL, t0.c93) END; -- 0ms;
SELECT DISTINCT CASE WHEN (t1.c0 IN ()) THEN (NOT (t0.c93)) ELSE (((NULL))<((t1.c51))) END FROM t1, t0; -- 0ms;
SELECT DISTINCT CASE 'kqI'  WHEN t1.c0 THEN (+ (0.6090887053955055)) WHEN highlight(t0.c93, t0.c44, t0.c93, t1.c0) THEN CAST('' AS INTEGER) WHEN ((t0.c93) BETWEEN (t1.c0) AND (t0.c56)) THEN ((t1.c51)LIKE(t1.c0)) END FROM t0, t1 ORDER BY ((t0.c97) NOTNULL)  NULLS FIRST; -- 0ms;
SELECT ALL (((t0.c44)) BETWEEN ((json_valid(t0.c97))) AND ((((t0.c93)>(t1.c51))))) FROM t1 WHERE ('-1646385849');SELECT DISTINCT ((MAX(t0.c97))GLOB('')), LAG(1246084158, ((((t0.c93) NOT BETWEEN (t0.c97) AND (t0.c56)))>=(t0.c44)), ((((t0.c97) NOTNULL)) ISNULL)) OVER (), ((((((t0.c93) BETWEEN (t0.c56) AND (t0.c44)))AND(t0.c93)))OR((NOT (t0.c93)))) FROM t0, t1 WHERE (0.43788724748666463); -- 0ms;
SELECT DISTINCT LAST_VALUE('-347724999') OVER (), CAST(0.2982600461059117 COLLATE RTRIM AS NUMERIC), ((((((t0.c56) NOT BETWEEN (t0.c97) AND (t0.c93)))OR(HEX(NULL))))AND((('0.5570499857962637')>>(t0.c93)))) FROM t0 LIMIT -679622675; -- 1ms;
SELECT GROUP_CONCAT(((t0.c93)!=(t0.c56))) OVER () FROM t0, t1 WHERE (0.5002970453173367); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((t1.c51)<('-1943384000')))LIKE(((t0.c44) IS TRUE)))) OVER () FROM t0, t1 WHERE (((((NULL) NOT NULL))%(((x'')>('-1940468096'))))); -- 0ms;
SELECT HEX((((t0.c56))<(('')))), ((((((t0.c56)OR(t0.c97)))AND(t1.c0))) BETWEEN (CASE t0.c93  WHEN t0.c93 THEN x'4c1e' ELSE t0.c97 END) AND (((t1.c51)IS NOT(t0.c44)))), NULLIF((~ (t0.c93)), t0.c93) FROM t1 GROUP BY ((((t0.c93)=(t0.c44))) NOT BETWEEN (((t1.c51)/(0.014844917156166315))) AND ((((t1.c51))==((NULL))))), CAST((((t0.c44, t1.c0, t1.c51, t0.c44, t0.c44)) BETWEEN ((t1.c0, t1.c0, t0.c97, t1.c0, t0.c44)) AND ((t0.c93, t1.c0, t0.c93, -9.95537415E8, t1.c0))) AS REAL), (((~ (t0.c97)))GLOB(((0x46cc7ab3)OR(t0.c97))));SELECT DISTINCT '' FROM t0; -- 0ms;
SELECT ((t0.c93)>(0.8944862180324528)) COLLATE RTRIM, ((((t0.c56)IS NOT(t0.c44)))<=(((t1.c51)=(t1.c0)))), ((CASE t0.c44  WHEN 0.23350238618760644 THEN t0.c44 END) BETWEEN ((((t0.c44)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND (((t1.c51) NOT NULL))) FROM t1;SELECT t0.c93, COUNT(AVG(CASE t0.c97  WHEN t1.c51 THEN t1.c51 WHEN t1.c51 THEN '0.10375821912267935' WHEN t0.c56 THEN t0.c93 ELSE t0.c56 END)), ((CASE WHEN t0.c56 THEN t0.c56 ELSE t1.c51 END)||(0.15602472307934256)), (NOT (((t0.c56) ISNULL))), (((TRIM(DISTINCT t0.c93)))>=((json_valid(t0.c97)))) FROM t0, t1 WHERE ((((~ (0.35792029263183034))) IS TRUE));SELECT DISTINCT CUME_DIST() OVER () FROM t1 WHERE (((((NULL COLLATE BINARY)OR(CAST('1344243157' AS INTEGER))))OR(((('-911119335'))<((NULL)))))) ORDER BY 0.6370665539810221; -- 0ms;
SELECT DISTINCT CASE CASE t0.c93  WHEN t0.c97 THEN t0.c97 END  WHEN ((((t0.c44)AND(t0.c56)))AND(t0.c56)) THEN ((t1.c0)<<(t1.c51)) WHEN json_quote(t0.c97) THEN NULL WHEN ((t1.c0) ISNULL) THEN t0.c56 ELSE CAST(t1.c51 AS TEXT) END FROM t1;SELECT ((((t0.c56) NOT NULL))||((((t1.c0, t0.c44, t1.c51))>=((t1.c51, t0.c97, t0.c44))))) FROM t0 WHERE (-1.415720514E9 COLLATE NOCASE);SELECT COUNT(*) FROM t0, t1 GROUP BY LAST_INSERT_ROWID() COLLATE NOCASE, CASE WHEN CAST(t1.c0 AS REAL) THEN ((t0.c56) NOT BETWEEN (t0.c97) AND (t0.c93)) END, ((x'') BETWEEN (((t0.c97)||(t0.c56))) AND (((((t0.c44)OR(t0.c93)))OR(t1.c51)))); -- 1ms;
SELECT DISTINCT t1.c0 FROM t0 NOT INDEXED, t1; -- 0ms;
SELECT DISTINCT ((((t0.c56)GLOB(NULL)))+(CASE t1.c0  WHEN t1.c0 THEN '' END)) FROM t0;SELECT DISTINCT CASE WHEN t1.c0 COLLATE RTRIM THEN t0.c44 COLLATE NOCASE WHEN t0.c56 THEN t0.c93 COLLATE BINARY WHEN ((t0.c93) BETWEEN (t0.c56) AND (t0.c44)) THEN ((t1.c0)<(t0.c97)) ELSE '-1432463038' END, CASE t0.c93  WHEN t0.c93 THEN t0.c97 WHEN t1.c0 THEN t1.c51 WHEN t1.c51 THEN t0.c44 ELSE t0.c93 END COLLATE BINARY, (NOT ((t0.c93 IN ()))) FROM t1, t0; -- 0ms;
SELECT DISTINCT 0.2504297042507101 COLLATE RTRIM FROM t0, t1; -- 0ms;
SELECT ALL NULL, ((((t0.c93) IS TRUE)) NOT NULL), HEX(DISTINCT TOTAL(t0.c56)) FROM t0, t1 WHERE ((COALESCE(x'9c8b', 1627608033) IN ())) ORDER BY CASE ((((t1.c0)AND(t0.c97)))OR(t1.c51))  WHEN CAST(t0.c93 AS INTEGER) THEN t1.c51 END; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY (((t0.c97 IN (t1.c51, t1.c51))) NOT BETWEEN ((t0.c93 IN ())) AND (LTRIM(t1.c51, t0.c93))), (t1.c0 IN (t1.c0)) COLLATE BINARY) FROM t0, t1 ORDER BY ((((t0.c97)AND(NULL)))+((- (0x5fe44275)))), ((x'') NOT BETWEEN (((t0.c56) NOT BETWEEN (t0.c44) AND (t0.c56))) AND (TYPEOF(DISTINCT t1.c51))) DESC; -- 0ms;
SELECT ALL (((((((((((((0.701000775773469)AND(t1.c0)))OR(t0.c56)))OR(t0.c44)))OR(t0.c44)))AND(t0.c97)))OR(NULL)) IN ()), '', ((((t0.c97)IS NOT(t0.c44))) NOT BETWEEN (((((t0.c44)AND(t1.c51)))OR(t0.c44))) AND (((t0.c97)GLOB(t0.c56)))) FROM t0, t1 WHERE ((((x'') NOT NULL) IN ((('-575744988') NOT NULL)))); -- 0ms;
SELECT DISTINCT (((t0.c44)) NOT BETWEEN ((((t0.c93) IS TRUE))) AND ((((t1.c0)<=(t0.c97))))) FROM t1 WHERE (((((((((((((-6.25696626E8)AND(0xffffffff96466f57)))OR(0xffffffffdf89605a)))AND(-1003312623)))OR(NULL)))OR(((x'c5c2')!=(x'')))))OR(x'' COLLATE RTRIM)));SELECT DISTINCT CAST(((t0.c44) ISNULL) AS TEXT) FROM t0, t1 WHERE (((NULL) NOT BETWEEN ((((0.5124394821509104)) BETWEEN (('1246084158')) AND ((0.2748855524818512)))) AND (((-900354673)<<('-1415720514'))))); -- 0ms;
SELECT t0.c93, '-469598578', ((t0.c97) IS FALSE) COLLATE BINARY FROM t0 WHERE (((((0.8925741954886649) NOT BETWEEN (x'0c58') AND (x'84be')))<((NULL IN ())))); -- 0ms;
SELECT ALL AVG(CAST(t0.c97 AS TEXT)) FROM t0, t1 WHERE ((((7.4264802E8)) BETWEEN ((((((x'')AND('.??췋iEk&')))OR(NULL)))) AND (((x'' IN ()))))); -- 0ms;
SELECT ALL ((CAST(t0.c97 AS BLOB)) NOT BETWEEN (((t0.c93)IS(t0.c97))) AND (highlight(t1.c0, t1.c51, t0.c56, t1.c0))) FROM t1 WHERE ((- (NULL)) COLLATE NOCASE);SELECT ALL ((((((((t0.c44)OR(t0.c97)))OR(t0.c44)))OR(MAX(t0.c56))))AND(((((t0.c56)AND(t0.c97)))OR(t0.c56)))) FROM t1;SELECT DISTINCT TOTAL(((x'') NOTNULL)), (~ (((t0.c44) IS TRUE))), ((((t0.c93)<(t1.c51)))IS(((t1.c51)LIKE(t0.c97)))) FROM t0, t1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t1, t0; -- 0ms;
SELECT DISTINCT t0.c97 FROM t0, t1 WHERE ((((-1637274246 IN ())) NOT BETWEEN (NULL) AND (CAST('' AS NUMERIC)))); -- 0ms;
SELECT ALL ((((((((AVG(t1.c51))OR(((t0.c44) BETWEEN (t1.c0) AND (t1.c0)))))AND(CASE t1.c0  WHEN t0.c56 THEN t0.c93 END)))AND(CAST(t0.c93 AS BLOB))))OR(((t0.c56)||(t0.c44)))) FROM t0, t1; -- 0ms;
SELECT DISTINCT t0.c97, ((((((t0.c44)<<(t0.c97)))OR(((((t0.c44)OR(t0.c93)))AND(t0.c93)))))AND(CAST(t1.c0 AS TEXT))), COUNT((~ (t0.c93))) FROM t0 WHERE (CASE ((((x'')OR(0.2727268996607406)))AND(1.490469662E9))  WHEN ((('-1843811983'))>=((0.13903747256289223))) THEN (~ (x'baf1')) END);SELECT DISTINCT CASE (t1.c0 IN (t1.c0))  WHEN t1.c51 THEN t0.c56 ELSE 362397737 END FROM t1 WHERE (((((NULL)OR(x'59b8')))OR('783344278')) COLLATE BINARY);SELECT ((((((((((t0.c44)%(t0.c56)))OR(((t0.c93)*(t0.c56)))))OR(t1.c0)))OR((((0.3353601517349327)) BETWEEN ((t0.c56)) AND ((t0.c44))))))AND((~ (t0.c56)))) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((t0.c97) BETWEEN (t0.c44) AND (t1.c51)) COLLATE NOCASE FROM t1;SELECT DISTINCT TOTAL((((t1.c51, t0.c44, t0.c56))==(('', t1.c0, t0.c56)))) OVER (), ((t0.c97) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c97, 0.7942973468274394)) AND (((t0.c56) BETWEEN (t0.c44) AND (t1.c51)))), (((t1.c51, t0.c56, t0.c44)) NOT BETWEEN ((CAST(t0.c44 AS BLOB), ((t1.c51)|(t0.c93)), CASE t0.c97  WHEN t0.c97 THEN t1.c0 ELSE t1.c0 END)) AND ((COUNT(t0.c97), ((t0.c97) ISNULL), GROUP_CONCAT(t1.c51)))) FROM t1;SELECT DISTINCT CASE WHEN ((t0.c93) NOT BETWEEN (t1.c0) AND (t1.c51)) THEN t0.c93 COLLATE RTRIM END, LIKELY(DISTINCT CAST(t0.c93 AS BLOB)), (((CAST(t1.c51 AS TEXT)))<>(((t1.c0 IN ())))) FROM t0, t1 ORDER BY 0.027855689445080323; -- 0ms;
SELECT DISTINCT ((((t0.c56) NOT BETWEEN (0.8940765306677987) AND (t0.c93)))<=(CASE t0.c44  WHEN t0.c97 THEN t1.c51 END)) FROM t1, t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1 ORDER BY (((t0.c93)) BETWEEN (((+ ('OLsr')))) AND ((((t0.c97) IS FALSE)))), (- (-1020437339))  NULLS FIRST;SELECT CUME_DIST() OVER (), (((t0.c97, t0.c44, t1.c0)) BETWEEN (((t1.c0 IN ()), CASE t0.c56  WHEN t1.c0 THEN t0.c44 ELSE t0.c56 END, (x'' IN ()))) AND (((((t0.c44)) NOT BETWEEN ((t0.c93)) AND ((t0.c93))), NULLIF(DISTINCT t0.c93, t0.c97), ((('yjA')) BETWEEN ((t1.c0)) AND ((t0.c93)))))), COUNT((((t0.c56)) BETWEEN ((t0.c44)) AND ((t1.c51)))) FROM t1, t0 WHERE (((x'')%(x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((MIN(t1.c51)) BETWEEN (t0.c44 COLLATE BINARY) AND (CAST(t0.c97 AS BLOB))) FROM t0, t1; -- 0ms;
SELECT ALL LIKELY(TOTAL_CHANGES()), ((COUNT(t0.c56)) BETWEEN (CAST(0.5961362848607688 AS REAL)) AND (((t1.c0)LIKE(t1.c51)))), (((((t0.c44)) NOT BETWEEN ((t0.c93)) AND ((t0.c56))))||(x'6c86aa9a')), (((((t0.c56) BETWEEN (t1.c0) AND (t0.c93))))<=((GROUP_CONCAT(t0.c56)))), ((((((((((t0.c44)OR(t0.c56)))OR(t1.c0)))AND(t0.c56)))OR(t0.c44)))LIKE('s#feft')) FROM t1, t0; -- 1ms;
SELECT FIRST_VALUE(NULL COLLATE NOCASE) OVER () FROM t1; -- 0ms;
SELECT t0.c56 FROM t0, t1 LIMIT 955620070; -- 0ms;
SELECT ((((CASE t0.c56  WHEN t1.c51 THEN t1.c51 WHEN t0.c93 THEN t1.c0 WHEN t0.c97 THEN x'c7c2' END)OR((((t0.c44)) NOT BETWEEN ((t0.c93)) AND ((t0.c93))))))OR('')), ((t0.c97)<<(t0.c44)) COLLATE RTRIM, PERCENT_RANK() OVER () FROM t0;SELECT ALL (~ (((t0.c56)IS(1335571807)))), LOWER(((((t0.c93)AND(t0.c56)))OR(t0.c44))), ((t0.c56) BETWEEN (t0.c56) AND (t0.c97)) COLLATE NOCASE FROM t0, t1; -- 0ms;
SELECT ((((('0.5570499857962637', t0.c56, t1.c0))==((t1.c51, t0.c93, t0.c97)))) BETWEEN (((t1.c0)<=(t0.c97))) AND (LIKELY(DISTINCT t0.c44))) FROM t0;SELECT DISTINCT (('hXB5Z1^x')=(MIN(t0.c97))) FROM t0, t1 WHERE (IFNULL(('809325118' IN ()), CAST('112439763' AS REAL))) ORDER BY ((((t1.c51)/(x'd739')))GLOB((((t0.c97)) BETWEEN ((t0.c97)) AND ((t1.c51))))); -- 0ms;
SELECT DISTINCT (~ (CASE WHEN t0.c56 THEN t1.c51 END)) FROM t1, t0 WHERE ((((('-779976240')<(NULL))) IS TRUE)) ORDER BY (~ (highlight(x'', t0.c44, t0.c93, t0.c56))); -- 0ms;
SELECT DISTINCT 0.018573722685657268, NULL, 0Xffffffffef695b80 FROM t0, t1 WHERE (CASE WHEN ('-952762981' IN ()) THEN (0x4ef9d7fc IN (NULL)) ELSE CAST(0.8029791412588205 AS REAL) END); -- 0ms;
SELECT ALL AVG(TOTAL('0.4172360176911095')) FROM t0 WHERE ((((('')&(x'4c5e1bc2'))) NOT NULL));SELECT ((((((((((((t0.c97)OR(t0.c44)))OR(t0.c97)))OR(t1.c51)))AND(t0.c97)))OR(CASE t0.c93  WHEN t0.c56 THEN t0.c97 END)))OR(CASE t0.c44  WHEN t0.c97 THEN t0.c44 WHEN t0.c44 THEN t1.c0 WHEN t1.c0 THEN t0.c97 END)) FROM t1, t0 WHERE (CAST(CAST(NULL AS INTEGER) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((t1.c0)||(t0.c56))) IS TRUE), ((COUNT(*)) NOT BETWEEN (((t0.c44) ISNULL)) AND ((+ (t0.c97)))), ((((t0.c97)<(t0.c56)))AND(t0.c97 COLLATE NOCASE)) FROM t0 GROUP BY ((((0.36285685648891386)*(t0.c93)))AND(((t0.c56) IS FALSE))), t1.c51, (t0.c44 IN ()) COLLATE BINARY ORDER BY ((((((((t0.c93)OR(t0.c56)))AND(t0.c56)))OR(((t0.c56)GLOB(t0.c44)))))AND(((t1.c51)>=(t1.c51)))) ASC, -1.733016165E9, ((((t0.c97) BETWEEN (t1.c51) AND (t1.c51)))>=((NOT (t0.c56)))) DESC;SELECT DISTINCT ((t0.c56 COLLATE NOCASE)IS NOT((('-559753108') BETWEEN (NULL) AND (t0.c97)))) FROM t0 LEFT OUTER JOIN t1 ON ((((t0.c97)) BETWEEN ((t0.c93)) AND ((t1.c0))) IN ()) ORDER BY SQLITE_SOURCE_ID(), HEX(((((((((t0.c44)AND(t1.c0)))OR(t0.c44)))OR(t0.c97)))OR(t0.c97))) ASC; -- 0ms;
SELECT ((((((((((t1.c0)|(t0.c44)))AND(t1.c0)))OR(MIN(t0.c97))))OR((t0.c97 IN (t1.c0, t0.c44)))))OR((NULL IN ('1419819797')))) FROM t0 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN LIKELIHOOD(NULL, 0.31377324805161744) ELSE NULL COLLATE NOCASE END) GROUP BY ((((t0.c56) NOT BETWEEN (t0.c97) AND (t0.c93))) NOT NULL), (((~ (t1.c0)))IS(((t0.c93)+(x'')))), ((((t0.c97) NOT BETWEEN (t0.c56) AND (t0.c97))) ISNULL) ORDER BY CAST((((t1.c0))!=((t0.c97))) AS INTEGER) ASC  NULLS FIRST, ((t0.c97 COLLATE RTRIM) BETWEEN (CASE t0.c97  WHEN t1.c51 THEN t1.c51 END) AND ((((t0.c44, t0.c44, 0.07636984248346435)) NOT BETWEEN ((t1.c51, t0.c44, t0.c44)) AND ((t1.c0, x'', t0.c93)))));SELECT ALL (((~ (t0.c56)))%(LOWER(DISTINCT t0.c44))), ((ROUND(t0.c97, t0.c97))=(TRIM(DISTINCT t0.c56, t1.c51))), (+ (t0.c44)) COLLATE NOCASE FROM t0, t1; -- 0ms;
SELECT DISTINCT LOWER(t0.c93), DENSE_RANK() OVER (), COUNT((t1.c51 IN (t0.c93))), json_patch(t0.c97, ((t1.c51)GLOB(t1.c0))), GROUP_CONCAT(CASE t0.c56  WHEN t1.c51 THEN t0.c93 WHEN t0.c93 THEN t0.c56 WHEN t0.c56 THEN t0.c97 ELSE t0.c56 END) FROM t0, t1 GROUP BY t0.c93 HAVING ((COUNT(*))LIKE(((t1.c0) IS FALSE))) LIMIT -469598578 OFFSET 1950588638; -- 0ms;
SELECT DISTINCT (- ((+ (t0.c44)))) FROM t1, t0 WHERE ((((('1023937171') IS TRUE))<<(CAST(NULL AS INTEGER)))) LIMIT -133277545; -- 0ms;
SELECT DISTINCT json_quote(((t0.c97)IS(t0.c44))) FROM t0 GROUP BY ((((t0.c44) NOT NULL)) NOT BETWEEN (((t0.c56)GLOB(0Xffffffffedb6a1d8))) AND (CASE t0.c44  WHEN t0.c44 THEN t0.c93 END)); -- 0ms;
SELECT t0.c93 FROM t0, t1; -- 0ms;
SELECT DISTINCT t1.c0 FROM t0 WHERE (CASE WHEN CASE 'Gi\r<T^0[A'  WHEN x'' THEN NULL ELSE x'55075430' END THEN (('[]') IS FALSE) END) LIMIT -1267534665;SELECT DISTINCT ((((((((CASE WHEN t0.c56 THEN NULL ELSE t0.c56 END)OR(CASE t1.c51  WHEN '0.6090887053955055' THEN t0.c44 END)))AND(((t0.c97)==(t0.c56)))))AND(((t0.c44)+(t0.c93)))))OR(x'')) FROM t0 WHERE (((('349812397') NOT NULL) IN ()));SELECT DISTINCT ((((t1.c0)IS NOT(t0.c44)))<=(CAST(t1.c0 AS REAL))) FROM t1, t0 WHERE (((((NULL)IS(1e500))) ISNULL)); -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT t0.c93, t1.c0))<=(COUNT(*))) FROM t0;SELECT TIME(CASE WHEN t1.c51 THEN t1.c0 END, CAST(t0.c56 AS NUMERIC), ((t1.c0)||(t1.c51))) FROM t1 WHERE (((((NULL)IS NOT('-1116181255')))<<(CASE WHEN '' THEN x'' WHEN '-1904537112' THEN 0.26862047146295875 WHEN 0x17cabf48 THEN x'' ELSE x'' END)));SELECT ALL (((((t0.c97)OR(t0.c56))))>=((AVG(t0.c93)))) FROM t0, t1 WHERE ((((NULL)%(x'')) IN ())) GROUP BY ((((('', t0.c44, t1.c51))!=((t0.c93, t0.c56, t0.c97)))) IS FALSE); -- 0ms;
SELECT DISTINCT CASE ''  WHEN UPPER(t0.c93) THEN (((t0.c97)) BETWEEN ((t0.c56)) AND ((t1.c0))) WHEN ((t1.c0) BETWEEN (t0.c93) AND (t0.c56)) THEN '' WHEN 0.8457315605455137 COLLATE RTRIM THEN t1.c0 END, CASE (((t0.c56))>((t1.c51)))  WHEN t1.c51 COLLATE NOCASE THEN (+ (t0.c93)) ELSE ((t0.c44) NOT BETWEEN (t0.c97) AND (t1.c51)) END, CAST(CASE WHEN t0.c56 THEN t0.c56 WHEN t0.c97 THEN t0.c97 WHEN t1.c0 THEN t0.c97 ELSE t1.c51 END AS TEXT) FROM t0;SELECT TOTAL(CASE t0.c44  WHEN t0.c97 THEN t0.c97 WHEN t0.c56 THEN t0.c44 WHEN t0.c44 THEN t0.c44 ELSE t1.c51 END) FROM t0;SELECT DISTINCT '1708504757' FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c44)LIKE((((t1.c51)) NOT BETWEEN ((t1.c0)) AND ((t0.c97))))), LIKELY(DISTINCT 1e500), x'' FROM t1;SELECT DISTINCT '-626507803', AVG(((t0.c56) BETWEEN (t0.c56) AND (t0.c56))) OVER (), (0.33644313010562177 IN (t0.c97 COLLATE NOCASE)), COUNT((t0.c44 IN (t0.c56))), ((CAST(t1.c0 AS BLOB)) NOTNULL) FROM t1;SELECT (((-2.046658778E9, t0.c97, t0.c93, t0.c44, t1.c51)) NOT BETWEEN (((t1.c51 IN ()), (- (t1.c51)), ((((t1.c51)OR('447185733')))OR(t1.c0)), (x'' IN ()), (((t1.c0))>=((t0.c56))))) AND ((CAST(x'' AS REAL), ((((t0.c97)OR(t0.c44)))OR(t1.c0)), (((t1.c0, t0.c97, t1.c0)) BETWEEN ((t0.c56, t0.c56, t0.c97)) AND ((t0.c56, t0.c97, t0.c93))), (+ (t1.c51)), json_remove(t0.c97, t0.c56, t0.c97, x'e68f')))) FROM t1, t0 ORDER BY CASE CAST(t1.c51 AS TEXT)  WHEN CAST(t0.c44 AS INTEGER) THEN (+ (t1.c51)) ELSE ((((t0.c93)AND(t0.c97)))AND(t0.c44)) END  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ ('798563566')) COLLATE NOCASE, ((TOTAL(t0.c44))OR(LTRIM(t0.c97))), (((t0.c44)) BETWEEN ((((t0.c44)<>(t1.c0)))) AND ((json_insert(t0.c93, t0.c56, x'')))) FROM t1, t0 WHERE ((+ (((x'') IS TRUE)))); -- 0ms;
SELECT ((t1.c51) NOT BETWEEN (t0.c56) AND (NULL)) COLLATE BINARY FROM t1, t0 GROUP BY ((((t1.c51)AND(t1.c51))) NOT NULL) HAVING LOWER(DISTINCT CASE WHEN t1.c51 THEN t0.c93 WHEN t1.c0 THEN t1.c51 WHEN t0.c93 THEN -1.564151198E9 END); -- 0ms;
SELECT DISTINCT 0.5926988648213989 FROM t1 LIMIT -830031004 OFFSET 1187805875; -- 0ms;
SELECT ALL TOTAL(((t0.c97) BETWEEN (t0.c97) AND (t0.c56))) OVER ( ROWS CAST(((t0.c44) NOT BETWEEN (t0.c56) AND (t1.c0)) AS NUMERIC) PRECEDING) FROM t1, t0; -- 0ms;
SELECT ALL (((t1.c0)) NOT BETWEEN (((((t0.c93, t0.c56, t0.c97)) NOT BETWEEN ((t0.c97, t0.c56, 0.23350238618760644)) AND ((t1.c51, t0.c93, t1.c0))))) AND ((((t0.c44) ISNULL)))) FROM t0, t1; -- 0ms;
SELECT ALL t0.c93 FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c97 IN (t0.c56)))AND(((t0.c97)>=(t1.c51)))))AND(((((t0.c97)AND(t1.c51)))AND(x'ec92')))) FROM t0;SELECT DISTINCT ((((UNLIKELY(t1.c0))OR(LAST_INSERT_ROWID())))AND(((t1.c0)/(t0.c97)))), SUM(''), COUNT(((t1.c51)>>(t1.c0))) FROM t0 WHERE (((((CAST(0.7590992302866664 AS REAL))AND(((1.924957928E9) IS TRUE))))AND(((x'') BETWEEN ('-1943384000') AND (x'5cee48b6'))))) ORDER BY ((((t0.c44) ISNULL)) NOT BETWEEN (((t1.c51)+(t0.c93))) AND (((((t1.c51)OR(t0.c44)))AND(t0.c97))));SELECT DISTINCT CASE WHEN ((t0.c93) BETWEEN (t0.c56) AND (t1.c51)) THEN ((t1.c51) BETWEEN (t0.c44) AND (0.08285119455938939)) ELSE ((t1.c51) NOTNULL) END FROM t1 GROUP BY '^9';SELECT DISTINCT ((((((t1.c0) BETWEEN (x'') AND (t0.c56)))OR((t0.c44 IN (x'839d9c76', '1e500')))))AND((t0.c93 IN ()))), ((COUNT(x'')) BETWEEN (((t1.c51) BETWEEN (t0.c44) AND (t0.c56))) AND (((t1.c51)AND(t0.c56)))), ((t1.c51) BETWEEN (((t1.c0)>>('LDOl'))) AND (CASE WHEN t1.c51 THEN t0.c56 END)) FROM t0;SELECT DISTINCT CASE WHEN COUNT(*) THEN t0.c97 END, CASE WHEN t0.c56 THEN t1.c51 COLLATE BINARY ELSE ((t0.c93)>=(t0.c44)) END, ((((((t0.c97) NOT NULL))AND(GROUP_CONCAT(t0.c56))))AND(CAST(t0.c56 AS INTEGER))) FROM t0, t1; -- 0ms;
SELECT ALL (((t0.c56 IN ())) BETWEEN (CAST(t0.c44 AS NUMERIC)) AND (NULL)) FROM t1 WHERE (((((((((0.011790862696594795)AND('')))AND(NULL)))AND(((x'3829') IS FALSE))))AND((~ ('0.8785686310539712'))))) ORDER BY ((((t0.c56) NOT NULL)) ISNULL) DESC LIMIT 1435539151 OFFSET 1815611048;SELECT DISTINCT ((((((t0.c44)OR(t0.c44)))OR(t1.c0))) IS FALSE), ((((t0.c97) NOT BETWEEN (t0.c93) AND (t0.c44)))<=((- (t0.c56)))), t1.c0, (((t1.c51)||(t1.c0)) IN (TOTAL(t1.c51))), (((t0.c56) NOT BETWEEN (t1.c0) AND (t0.c44)) IN ()) FROM t1, t0 GROUP BY CAST(CASE x'3d68'  WHEN t0.c56 THEN t0.c56 END AS TEXT), IFNULL(DISTINCT ((t0.c56)<(t0.c93)), 0.18914191369776312), ((((t0.c93) NOT NULL))AND((0.015028549717982953 IN (t0.c93, t1.c51)))), (((((t1.c51)) BETWEEN (('')) AND ((t0.c44))))<>('')), ((((t0.c93) BETWEEN (t0.c97) AND (t0.c97)))|(t0.c44 COLLATE RTRIM)) ORDER BY ((((((t0.c44)GLOB(t0.c97)))AND(x'')))AND((((t0.c56))==((t1.c51))))); -- 0ms;
SELECT (AVG(t1.c51) IN (((((((((t1.c0)AND(t1.c0)))OR(t0.c93)))AND(t0.c44)))OR(t1.c51)), (t1.c0 IN ()))) FROM t0 WHERE (((((-1471345361)) BETWEEN ((0Xffffffff931f8202)) AND (('? jjsD	B*'))) IN ())) ORDER BY SQLITE_COMPILEOPTION_GET('') ASC  NULLS LAST, (((CASE 'hXB5Z1^x'  WHEN t1.c51 THEN t0.c97 WHEN t0.c97 THEN t0.c93 WHEN t1.c0 THEN t0.c93 END, (t1.c51 IN ()), ((t1.c0) NOT BETWEEN (t0.c97) AND (t0.c97))))!=(((t0.c44 IN ()), '-1043233830', (~ (t1.c0)))))  NULLS FIRST, ((CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c93 THEN t0.c44 WHEN t1.c51 THEN t0.c44 ELSE t0.c97 END)IS NOT(CASE WHEN t0.c93 THEN t1.c0 ELSE t0.c93 END)) LIMIT -406728069 OFFSET 1279389668;SELECT DISTINCT ((t0.c97 COLLATE NOCASE)|(((t0.c97) IS TRUE))) FROM t0 WHERE (CAST((NULL IN ()) AS TEXT)); -- 0ms;
SELECT DISTINCT (+ (TYPEOF(t0.c93))) FROM t0; -- 0ms;
SELECT MIN(CASE -1.133445722E9  WHEN t1.c51 THEN t1.c51 ELSE t1.c0 END), CASE WHEN (~ (t0.c56)) THEN ((t0.c56) BETWEEN (t0.c97) AND (t0.c44)) END, LOWER((((t1.c51)) BETWEEN ((t1.c51)) AND ((t0.c44)))) FROM t0 GROUP BY CHANGES();SELECT DISTINCT t0.c56 FROM t0, t1; -- 1ms;
SELECT DISTINCT MAX((NOT (t0.c56))), AVG(SUM(((t0.c97)+(t0.c93)))), (((((t1.c51) NOT BETWEEN (x'9966') AND (t0.c56))))!=((CHANGES()))) FROM t0, t1 LIMIT -1318075776;SELECT DISTINCT t0.c44, CASE ((((t1.c0)OR(t1.c51)))AND(t0.c97))  WHEN (((t1.c0)) NOT BETWEEN ((t0.c93)) AND ((t1.c0))) THEN (NOT (t1.c51)) WHEN (NOT (t0.c93)) THEN (t0.c44 IN ()) WHEN t0.c44 COLLATE BINARY THEN ((((x'')OR(t0.c97)))AND('1251682748')) ELSE (NOT (t0.c44)) END, ((((t0.c44)IS(t0.c97)))AND(((t0.c97)IS NOT(t0.c97)))) FROM t1 WHERE ((((((4.56820351E8))>(('lx')))) NOT NULL));SELECT DISTINCT TRIM(DISTINCT ((t0.c93)GLOB(t0.c44)), (((t0.c56)) BETWEEN ((t0.c93)) AND ((t0.c97)))) FROM t1;SELECT DISTINCT ((CASE WHEN t0.c56 THEN 'g+' WHEN t0.c97 THEN x'' WHEN t0.c97 THEN t1.c0 ELSE x'' END) IS FALSE) FROM t1 WHERE (((((x'd027')&(x'')))|(((NULL)|(x'c3f8'))))) GROUP BY (- (((t0.c93) BETWEEN (t0.c97) AND (t0.c97)))), ((CASE t0.c93  WHEN t0.c93 THEN t1.c0 END) BETWEEN (CAST(NULL AS BLOB)) AND (CAST(t0.c56 AS TEXT))), TRIM(INSTR(t0.c44, t1.c51)) LIMIT -2079333579 OFFSET 1316454073;SELECT DISTINCT (((x'dded')IS NOT(t0.c44)) IN (((t0.c56) IS TRUE))), TRIM(DISTINCT UPPER(t1.c0)), CASE ((t0.c93) ISNULL)  WHEN ((t1.c51) NOT BETWEEN (t0.c93) AND (NULL)) THEN t0.c44 ELSE ((t0.c56) NOTNULL) END, ((((t0.c93)==(t1.c51))) ISNULL), CASE WHEN ((t0.c44) IS TRUE) THEN ((t0.c93)==(t0.c44)) WHEN ((t1.c51) BETWEEN (t0.c93) AND (t1.c0)) THEN x'' WHEN CAST(t0.c44 AS INTEGER) THEN ((t0.c44)AND(t1.c0)) END FROM t1 WHERE (((((x'' IN ())))=((((((((((x'8e94')AND(x'')))AND('-31544470')))AND('D8O}o{oSM')))OR(0Xffffffff85f7e408))))));SELECT ALL ((t0.c44) NOT NULL), (('') NOT NULL), (((((t1.c51))<=((t0.c93))))<((((t1.c0))<((t1.c51))))) FROM t1, t0 WHERE (((-360501271) IS FALSE)) LIMIT 1653555387 OFFSET 1843985856; -- 0ms;
SELECT DISTINCT GLOB(t0.c44 COLLATE NOCASE, x'') FROM t0 ORDER BY (- (t1.c51 COLLATE RTRIM)) DESC  NULLS LAST;SELECT DISTINCT -1.564151198E9 FROM t0, t1; -- 1ms;
SELECT (((t1.c0)) NOT BETWEEN (((('Y)') NOT NULL))) AND ((((t0.c97)>(t0.c97))))) FROM t1, t0; -- 0ms;
SELECT ALL AVG(GROUP_CONCAT(((t0.c44)*('')))) FROM t0, t1;SELECT DISTINCT CASE WHEN CAST(t0.c97 AS REAL) THEN (- (t1.c51)) ELSE (t0.c97 IN ()) END FROM t0 WHERE (((((((((('' IN ()))OR(((((0.2990149121116785)OR(x'')))AND(0.8762015721277624)))))AND(('-677379772' IN ()))))AND(((-1.643521301E9) NOT BETWEEN ('Ov>閳') AND ('1741229563')))))OR((('-1508814320')-(0.8925741954886649)))));SELECT DISTINCT (+ (((((((((t1.c51)OR(t0.c44)))OR(t0.c93)))OR(t0.c56)))AND(t0.c97)))) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((COUNT(t1.c51))-(t0.c56 COLLATE BINARY)) FROM t0, t1 WHERE (((((((((((0.12208757986177321)<<(NULL)))AND(CASE '\nF\F7\nm'  WHEN '0.015028549717982953' THEN x'' WHEN x'4ef9' THEN 0.5653081761537174 WHEN NULL THEN 0.2605115894648724 END)))OR(((NULL) IS TRUE))))AND(CASE WHEN '1300503674' THEN 0.8444148702990649 END)))OR((('1023937171')IS(0.2874072076272519))))); -- 0ms;
SELECT CASE WHEN t0.c56 THEN ((0.03553498032070246)AND(t1.c0)) WHEN ((t0.c44) BETWEEN (t0.c44) AND (t0.c97)) THEN (NOT (t0.c44)) WHEN t0.c93 COLLATE RTRIM THEN (- (0.8068075568790541)) ELSE t0.c56 COLLATE RTRIM END FROM t1 WHERE (CAST('-1020437339' AS INTEGER)) GROUP BY (((t0.c44))<>(((t0.c93 IN (t1.c51, t0.c56))))) HAVING (~ (((((((((t0.c97)AND(t0.c44)))AND(t0.c56)))AND(t0.c97)))OR(t0.c44))));SELECT DISTINCT ((((x'da1a')AND(LIKELY(DISTINCT ''))))AND((t0.c56 IN (t1.c0)))) FROM t0;SELECT ALL CASE t1.c0  WHEN t0.c93 THEN t0.c56 WHEN t1.c0 THEN t1.c51 WHEN NULL THEN t0.c93 ELSE 'X' END COLLATE NOCASE FROM t1 FULL OUTER JOIN t0 ON ((((270143105) NOT NULL))*((t1.c51 IN (t1.c51)))) WHERE ((((NULL IN ()))+(UNICODE(NULL)))); -- 0ms;
SELECT DISTINCT CAST(((t0.c56) NOT BETWEEN (t1.c51) AND (t1.c0)) AS BLOB), ((((t0.c56) NOT BETWEEN (x'') AND (t1.c0))) NOT BETWEEN (((((t0.c56)OR(t0.c93)))OR(t0.c93))) AND (((((1.300503674E9)OR(t0.c44)))OR('-270440451')))), (NOT (((x'')||(t0.c56)))) FROM t1, t0 WHERE ((((~ (0.1914549070934758)))LIKE(CASE 0.588864688785675  WHEN 0.9514233549711173 THEN 970208468 ELSE x'' END))); -- 0ms;
SELECT (((t1.c51)||(NULL)) IN ()) FROM t1 ORDER BY 0.4666263243128864 DESC  NULLS LAST, ((((t1.c51) BETWEEN (t0.c56) AND (t0.c44))) NOT BETWEEN (CAST(t1.c51 AS INTEGER)) AND ((- (t0.c44)))) DESC, CASE WHEN ((t0.c93) BETWEEN (t1.c0) AND (t0.c44)) THEN ((((t0.c97)OR(t1.c0)))OR(t1.c0)) WHEN (t0.c44 IN (t0.c44)) THEN ((t0.c93) IS FALSE) WHEN ((t0.c97)>=(t0.c56)) THEN CAST(t0.c93 AS BLOB) WHEN ((((((((((((t0.c93)AND(t1.c51)))OR(t0.c97)))OR(t1.c0)))AND(t0.c93)))OR(t1.c51)))AND(t0.c44)) THEN CASE WHEN t0.c97 THEN t1.c51 END WHEN ((((((((t1.c51)AND(t0.c56)))OR(t0.c93)))OR(t0.c44)))OR(t0.c44)) THEN (((t0.c93)) BETWEEN (('-1564151198')) AND ((t0.c97))) END ASC;SELECT ALL t1.c51 FROM t0 WHERE (((-843315927 COLLATE RTRIM)*(CAST(0.26862047146295875 AS REAL))));SELECT ALL CAST(t1.c0 AS TEXT) COLLATE BINARY FROM t0, t1; -- 0ms;
SELECT DISTINCT NULL FROM t0, t1; -- 0ms;
SELECT ALL ((AVG(t0.c93))*(x'')), ((((((((CAST(t0.c97 AS BLOB))AND(t0.c93)))AND(((t0.c56)|(t0.c56)))))AND(((t0.c44) NOT BETWEEN (t0.c56) AND (x'')))))AND(UNLIKELY(t0.c56))), GROUP_CONCAT(TOTAL(((t0.c93)AND(t1.c0)))) FROM t0;SELECT DISTINCT t0.c56 COLLATE BINARY FROM t0, t1 WHERE (CASE ('IT窳g' IN (0.8886690188497655, x''))  WHEN x'' COLLATE NOCASE THEN ('2079532519' IN (0.3334720744712967, x'')) ELSE (x'dc57' IN (0xffffffffba20dcfc)) END) ORDER BY ((((t0.c93) NOT NULL)) IS FALSE) DESC  NULLS FIRST LIMIT -1604357223 OFFSET -1897481474; -- 0ms;
SELECT DISTINCT t0.c44 FROM t1;SELECT ALL AVG(CASE WHEN t0.c44 THEN t0.c97 WHEN t0.c97 THEN t0.c44 WHEN t0.c56 THEN t1.c51 END) FROM t1;SELECT (+ (((((t1.c0)OR(t1.c51)))AND(t0.c97)))) FROM t0 WHERE (CAST((NULL IN ('hRsS!JGN{', 0.3060692361697186)) AS BLOB));SELECT DISTINCT ABS(((t0.c93)==(t0.c56))), ((t0.c97) NOT BETWEEN (t0.c56) AND (x'')) COLLATE BINARY, (((- (t0.c44)))&(((((t1.c51)OR(t0.c93)))AND(t0.c97)))) FROM t1, t0 WHERE (CAST(NULLIF(0.3458411249248935, 0.02545325634443152) AS BLOB)); -- 0ms;
SELECT ALL ((x'') IS TRUE), SUM(TRIM(t0.c44)), json_type(((t0.c44) BETWEEN (t0.c93) AND (t0.c44))) FROM t0 WHERE (CASE WHEN (0.08573835896498372 IN (NULL, '-375882745')) THEN NULL COLLATE NOCASE END); -- 0ms;
SELECT ALL ((CASE WHEN t0.c97 THEN t1.c51 END) NOTNULL) FROM t1, t0 WHERE ((~ (((0.33855386716803937)LIKE(x'b4b3'))))); -- 0ms;
SELECT ALL x'' FROM t1 WHERE (x''); -- 0ms;
SELECT CASE t1.c51 COLLATE RTRIM  WHEN (t1.c51 IN ()) THEN ((t0.c56) NOT BETWEEN (t0.c44) AND (t0.c93)) ELSE ((t0.c93)||(t1.c0)) END, TOTAL((~ (t0.c44))), NULL FROM t0, t1 GROUP BY ((t0.c97 COLLATE NOCASE)==((t1.c51 IN (t1.c0)))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM t0, t1 WHERE ((~ (0.45608003091670557))) ORDER BY t1.c0 DESC, ((t0.c97 COLLATE BINARY)|(((((t0.c44)AND(t0.c44)))AND(t1.c0)))) DESC; -- 0ms;
SELECT ALL CAST(NULL AS REAL) FROM t1 GROUP BY (((('lx')<(t0.c44))) BETWEEN ((NOT (t1.c51))) AND (t0.c97 COLLATE RTRIM)) HAVING t1.c51;SELECT DISTINCT (((NOT (t0.c56))) ISNULL) FROM t1 WHERE (CAST((((0.44797430989441456)) NOT BETWEEN (('1&Pf-^')) AND ((x''))) AS INTEGER));SELECT ((0.04151764277688452) NOT BETWEEN (CAST(t0.c56 AS NUMERIC)) AND ((((NULL)) BETWEEN ((t1.c0)) AND ((t1.c0))))), ((CASE WHEN t1.c51 THEN x'' ELSE t0.c93 END) IS TRUE), (((x'621b'))<=(((+ (t0.c97))))) FROM t1 WHERE (((0.5016492426421674)&((NOT (x'')))));SELECT ((((t0.c44) NOT BETWEEN (t1.c0) AND (t0.c56)))+(t0.c93 COLLATE RTRIM)) FROM t1 WHERE (((((((((x'')AND(NULL)))AND(x'')))OR(CASE WHEN x'3241' THEN x'' END)))OR((((((((('')AND(x'38f7')))AND('-1580513734')))OR(1324949377)))AND('iS')))));SELECT ((NULL)LIKE((((t0.c56)) NOT BETWEEN ((t0.c56)) AND ((NULL))))) FROM t1 WHERE ((((CAST(x'' AS NUMERIC)))<((((x'')||(0.15801289517724126)))))) GROUP BY 0.48252087958429535 LIMIT -2087028925 OFFSET 1203302648;SELECT DISTINCT LIKELIHOOD(((t0.c56)|(t0.c97)), 0.25492195768009807), (((NOT (t0.c44))) BETWEEN (x'') AND (NULL COLLATE BINARY)), TOTAL(t0.c97) FROM t1;SELECT DISTINCT CAST(t0.c44 COLLATE NOCASE AS INTEGER), CAST(json_array(t0.c97, t0.c97) AS INTEGER), ((CASE t0.c97  WHEN 1349078057 THEN t1.c51 WHEN t0.c44 THEN t1.c0 WHEN t0.c97 THEN t1.c0 ELSE t0.c44 END)GLOB(((((((((t1.c0)AND(t0.c97)))OR(t1.c0)))AND(t1.c51)))OR(t1.c51)))) FROM t1, t0; -- 0ms;
SELECT ALL FIRST_VALUE(((((((((TYPEOF(DISTINCT t1.c0))OR(((t1.c0) NOT NULL))))AND(NULL)))OR(((t1.c0) NOT BETWEEN (t1.c51) AND (t1.c0)))))OR(((t1.c51)/(t1.c0))))) OVER (), ((((((((((t0.c97)AND(t1.c0)))AND(t1.c0)))AND(t0.c56)))AND(t1.c0)))IS NOT(TOTAL(t1.c0))), GROUP_CONCAT(((t0.c93)AND(t1.c51))), (t0.c44 IN ()), ((('-1133445722')) NOT BETWEEN ((((t0.c44) NOT BETWEEN (t1.c51) AND (t0.c93)))) AND ((MAX(t1.c0)))) FROM t1 WHERE (((x'' COLLATE NOCASE) NOT BETWEEN ((-1260978313 IN ())) AND ((('-2087028925') NOT BETWEEN (x'd9f3') AND ('')))));SELECT DISTINCT t0.c44 FROM t0, t1; -- 0ms;
SELECT CAST(((((t0.c44)OR(t0.c44)))AND(t1.c51)) AS INTEGER) FROM t0, t1; -- 1ms;
SELECT ALL 0.38753052352935835, 0.6370665539810221, AVG(((t0.c93)-(t1.c51))) FROM t0;SELECT ALL 'v_' FROM t0 WHERE (((((NULL)&(x'')))GLOB(''))); -- 0ms;
SELECT DISTINCT (((t0.c93 IN (t0.c97, t0.c97)))!=((t0.c56 IN (t0.c93)))) FROM t0, t1 WHERE ((((NULL IN ()))>(CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 NOT INDEXED, t1; -- 0ms;
SELECT DISTINCT (- ((((t0.c56)) NOT BETWEEN ((t0.c56)) AND ((t0.c44))))) FROM t0, t1 GROUP BY UPPER(t0.c97 COLLATE BINARY); -- 0ms;
SELECT DISTINCT TOTAL(SUM(((x'')>(t0.c93)))), COUNT(*) OVER (), (((t0.c56, t0.c97, t0.c93)) NOT BETWEEN ((((((((((t0.c56)AND(t0.c56)))AND(t1.c51)))AND(x'a6c8')))AND(t1.c0)), ((0.5443045905576755) NOT NULL), ((((((((t0.c56)OR(t0.c97)))OR(t0.c93)))OR(t1.c51)))AND(t0.c93)))) AND ((t1.c51 COLLATE BINARY, (t1.c51 IN (t1.c51)), ((((t0.c93)AND(NULL)))OR(t0.c44))))) FROM t1 WHERE (CAST(('~fuqr' IN ()) AS NUMERIC));SELECT ALL (((~ (t0.c44))) NOT NULL) FROM t1 LIMIT -246995267;SELECT ALL (+ (CASE WHEN t1.c0 THEN t0.c93 ELSE t0.c56 END)) FROM t0;SELECT RANK() OVER () FROM t0, t1 WHERE (CAST((('') BETWEEN ('-1817291038') AND ('-843315927')) AS TEXT)); -- 0ms;
SELECT ALL ((((LTRIM(t0.c97, t0.c97))OR(((t0.c97) NOT BETWEEN (t1.c51) AND (t0.c44)))))AND(((((t0.c93)OR(t1.c0)))AND(t0.c44)))) FROM t0;SELECT ALL ((COUNT(t0.c44))IS NOT((~ (t1.c0)))) FROM t1, t0; -- 0ms;
SELECT ALL (((((t0.c56))<>((t0.c93)))) IS TRUE) FROM t0 UNION ALL SELECT ALL (((t0.c93 IN ())) NOT BETWEEN ((((x'')) NOT BETWEEN ((t0.c97)) AND ((t0.c56)))) AND ('3<n?p덕}''')) FROM t0 WHERE (((CASE x'52f8'  WHEN 0.03161514903354978 THEN '1940053031' WHEN 0.8979102745238242 THEN x'' WHEN NULL THEN x'' ELSE x'' END)==((185804757 IN ())))) LIMIT 1326801383; -- 0ms;
SELECT ((t0.c56)OR(t0.c44 COLLATE NOCASE)) FROM t1;SELECT ALL (((((t0.c97) NOT NULL), (((t1.c51, t1.c51, t1.c0)) NOT BETWEEN ((t1.c51, t0.c93, t1.c0)) AND ((t0.c97, t0.c97, t0.c97))), ((t1.c51)<(t0.c93))))<(('', ((t0.c44)AND(t1.c0)), ((t0.c93)==(t0.c44))))) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((NULL)%((((t1.c0, t1.c0, t0.c97))=((t0.c97, t1.c0, t0.c44))))) FROM t0, t1 WHERE (((json_insert(0.5211664917906179, 0.6027972871338487, '')) BETWEEN (('-559753108' IN ())) AND ((('1316454073') IS FALSE)))) LIMIT -843315927 OFFSET -1817291038;SELECT DISTINCT (((((t0.c97, t1.c51, t0.c44)) NOT BETWEEN (('</UUuvrJw', t0.c44, t1.c0)) AND ((t0.c97, t1.c0, t0.c93)))) BETWEEN (LIKELY(DISTINCT t0.c97)) AND ('o\K()x')) FROM t0;SELECT ALL (((t0.c93) BETWEEN (t0.c56) AND (t0.c93)) IN ()) FROM t1, t0; -- 0ms;
SELECT ALL (+ (((t0.c44) IS FALSE))) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((CASE t0.c97  WHEN t1.c51 THEN t0.c93 ELSE t1.c0 END)IS NOT(((((t0.c44)OR('䖛O,P*')))AND(t0.c93)))) FROM t1, t0 LIMIT -794983847; -- 0ms;
SELECT CAST(((t0.c97) NOT BETWEEN (t1.c51) AND (t1.c0)) AS BLOB) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((((((t0.c44)) BETWEEN ((t0.c93)) AND ((t1.c51))), 0.5931088539935808, t1.c0 COLLATE NOCASE))>=((t0.c56 COLLATE BINARY, t0.c97, ((t0.c56) NOT NULL)))), CAST((t1.c0 IN (t0.c97)) AS INTEGER), ((t1.c0)IS(NULL)) FROM t0;SELECT ALL (((((t1.c0) NOT BETWEEN (t0.c44) AND (t1.c0))))!=(((((t0.c56, t1.c51, t0.c97, t0.c97, t0.c44)) NOT BETWEEN ((t0.c44, t0.c93, t0.c97, t0.c56, t1.c51)) AND ((t0.c56, t0.c44, t0.c56, t0.c44, t0.c93)))))) FROM t0, t1; -- 0ms;
SELECT ALL ((LENGTH(t1.c0)) NOTNULL) FROM t0 WHERE (CASE (0.567506695276692 IN (x''))  WHEN 0.6177224201250325 COLLATE RTRIM THEN (('') NOT BETWEEN ('-1606509485') AND ('-1644241827')) WHEN 0.19949429757217052 THEN 1.200330985E9 WHEN ((((((((x'7745')OR('1144360507')))OR(0.9479895904051597)))OR('')))AND(NULL)) THEN CASE 730604295  WHEN -1921030486 THEN 0.06067006142017084 ELSE '' END END) LIMIT 1606626657 OFFSET -1802421971;SELECT SUM(x'940e'), ((((((t1.c0)OR(t1.c51)))OR(t1.c51)))OR(GROUP_CONCAT(t0.c56))), CASE WHEN t1.c51 COLLATE RTRIM THEN ((x'') IS TRUE) ELSE ((t0.c56) IS TRUE) END FROM t0 ORDER BY CAST(((t1.c0)!=(x'8f87')) AS NUMERIC) ASC  NULLS LAST;SELECT DISTINCT (((((x'7a8c')) BETWEEN ((t0.c93)) AND ((t0.c56))))AND(((((((((t0.c44)AND('g''')))AND(t0.c44)))OR(t0.c93)))OR(t1.c0)))) FROM t1 WHERE ((('1223997144' IN (839068358)) IN ()));SELECT ((((AVG(t1.c0))AND(((((((((t1.c0)AND(t0.c56)))OR(t1.c51)))OR(NULL)))AND(x'')))))OR(((t0.c44)OR(t1.c0)))), COUNT((('878700231')IS NOT(t1.c51))) OVER ( ORDER BY (((t1.c0 IN (t0.c56)))GLOB(((((((((t0.c97)AND(0.7778524110024287)))OR(NULL)))AND(t0.c44)))OR(t0.c93)))) ASC  NULLS LAST), STRFTIME(TOTAL(t1.c0), t0.c56, (~ (t0.c97)), SUM(t0.c56), ((t0.c56) IS TRUE)) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((((((((NULL)AND(CASE WHEN t1.c51 THEN t0.c44 WHEN t0.c56 THEN t0.c97 WHEN t0.c93 THEN t0.c93 END)))OR((+ (t1.c51)))))AND(TRIM(t0.c44, t1.c0))))AND(((((t1.c0)AND(t0.c97)))OR(t1.c51)))) FROM t0, t1 LIMIT 1353540034 OFFSET -1475285532; -- 0ms;
SELECT ALL ((t1.c51)|(t0.c97)) COLLATE BINARY FROM t0, t1 WHERE (CAST((~ ('')) AS TEXT)) ORDER BY (((t0.c56 IN ())) ISNULL) DESC, (((t1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND ((CASE t0.c56  WHEN t1.c0 THEN t0.c56 ELSE NULL END))); -- 0ms;
SELECT ALL MIN(((t0.c56) ISNULL)), t0.c56, SUM((('-203221688')<<(x''))) OVER () FROM t0, t1; -- 1ms;
SELECT ALL ((((t0.c97) IS FALSE))=(((t0.c97) NOTNULL))) FROM t0, t1 WHERE ((NOT (UPPER(-1.432463038E9)))); -- 0ms;
SELECT DISTINCT (t1.c51 IN ()) FROM t0, t1; -- 0ms;
SELECT DISTINCT CAST(((t0.c44)=(t1.c51)) AS TEXT), json_remove((((t1.c51)) BETWEEN ((t0.c56)) AND ((t1.c0))), 0X6cd7318f COLLATE NOCASE, ((((t0.c44)AND(t1.c51)))AND(t1.c0)), CAST(t0.c56 AS REAL)), GROUP_CONCAT(((t0.c44)%(t0.c97))) OVER () FROM t1 WHERE (CAST(x'54b2' AS REAL)) GROUP BY LIKELY(DISTINCT CASE WHEN t0.c97 THEN '-1' ELSE t1.c0 END), (((((t0.c56) IS FALSE)))==((CAST(t0.c56 AS TEXT)))), (((NULL))<((((('1300503674'))<>((t1.c51)))))), ((CASE WHEN t0.c44 THEN t0.c56 ELSE 1.815611048E9 END) BETWEEN (((((((((t0.c93)AND(t0.c93)))OR(t1.c51)))OR(t1.c0)))AND(t0.c44))) AND (((((t0.c44)OR(t0.c56)))OR(t0.c56)))), (- (((t0.c44)*(t0.c93)))) HAVING ((((t1.c0) NOT NULL)) BETWEEN (t0.c56) AND (MIN(t0.c97)));SELECT DISTINCT (((((((((t0.c97 IN ()))OR(((((t1.c51)AND(t0.c93)))OR(t0.c97)))))OR('䯔諟≰*LH(G')))OR((t0.c97 IN (t0.c56, t1.c0)))))AND(((t0.c93) BETWEEN ('-992149690') AND (t0.c56)))) FROM t1 RIGHT OUTER JOIN t0 ON UPPER(((((t1.c51)OR(t0.c97)))AND(t0.c44))) WHERE ((((CASE WHEN -1413027739 THEN 0.6370665539810221 ELSE x'388d' END, ((NULL)IS('1565740868')), ((NULL) IS FALSE)))>=((x'bbee', TYPEOF(DISTINCT NULL), ((0.9463107300695427) NOT NULL))))) LIMIT 179342843 OFFSET -987059179; -- 0ms;
SELECT DISTINCT ((((((t1.c0)AND(t1.c0)))OR('0.24511857295395378'))) NOTNULL), ((((((((((((t0.c56)AND(t0.c56)))OR(t0.c93)))OR(CASE WHEN t0.c93 THEN t0.c44 END)))AND((((t0.c56)) BETWEEN ((t0.c93)) AND ((t1.c0))))))AND(((t0.c93)<>('1490469662')))))AND(((t0.c93) IS FALSE))), (t0.c97 IN (t0.c44)) COLLATE BINARY FROM t1;SELECT ALL ((((t0.c44))<=((t0.c44))) IN ()), (CASE WHEN t1.c0 THEN t1.c51 WHEN t0.c93 THEN 0xffffffffcd55f127 WHEN t0.c93 THEN t1.c0 ELSE t0.c44 END IN ()), CASE t0.c44 COLLATE BINARY  WHEN (t1.c0 IN ()) THEN json_valid('-1953789712') END FROM t1 WHERE (UNLIKELY(((x'') NOT NULL)));SELECT ((0xfffffffff1fdb38f) BETWEEN (t0.c44) AND (t0.c44)) COLLATE BINARY, (- (((t0.c97)%(t1.c0)))), NTILE(((('-1295521367'))>=(((((t0.c93, t0.c56, t0.c56))<=((t0.c44, t0.c44, t0.c97))))))) OVER () FROM t0, t1; -- 0ms;
SELECT ((((t1.c51) BETWEEN (t0.c44) AND (t1.c51))) NOT BETWEEN (t0.c93) AND (((t1.c51) NOT BETWEEN (t0.c93) AND (t0.c44)))) FROM t0, t1 WHERE (((('-2046658778' COLLATE RTRIM))!=((json_patch(NULL, 0.7535656513705086))))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t1 WHERE ((((0x2a1d006c IN ())) BETWEEN ((~ (-238585757))) AND (x'' COLLATE NOCASE))) GROUP BY ((((t0.c56) NOT BETWEEN (t0.c93) AND (t0.c56)))*(CAST(t0.c97 AS BLOB)));SELECT (((((t0.c93))=((t1.c51))))>(t1.c0 COLLATE BINARY)), t1.c51, ((((((t0.c56)AND(t1.c51)))OR(t0.c93))) BETWEEN (x'ffb82ead') AND (((t0.c44)%(t1.c51)))), ((((t0.c56)*(t1.c0))) IS TRUE), NTH_VALUE(((CASE 1743712048  WHEN t1.c51 THEN x'' ELSE t1.c51 END) NOT BETWEEN ('	IK*') AND ((- (t1.c0)))), ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c51)))&('-1522443689' COLLATE NOCASE))) OVER ( PARTITION BY ((LIKELIHOOD(t1.c0, 0.24054691344125712))<(CASE WHEN '<䵶Z!?W7>' THEN t0.c93 ELSE t1.c51 END)), (((t0.c44)) BETWEEN (('dgyLᨽx<ma')) AND ((((t1.c0) BETWEEN (t0.c97) AND (0.42891736933731817))))) ROWS t1.c0 PRECEDING EXCLUDE NO OTHERS) FROM t1 WHERE (((('0.2748855524818512', NULL, 'v>*')) NOT BETWEEN (('0.8457315605455137', x'811d', '1179780233')) AND ((0.20674227611345652, x'df1c', 0x71cfdc84))) COLLATE BINARY);SELECT ALL json_array_length((((t0.c44))<=((t1.c0)))) FROM t0, t1 WHERE (((CAST(0.8607127926349354 AS NUMERIC))>=(load_extension(NULL)))); -- 0ms;
SELECT DISTINCT ((((t0.c93)==(t0.c44))) IS FALSE) FROM t0 WHERE (JULIANDAY(HEX(NULL), x'', NULL, ((NULL) ISNULL), (NOT (0.27210446353969375)))); -- 0ms;
SELECT CAST(t0.c44 AS NUMERIC) COLLATE NOCASE FROM t1, t0 WHERE (((LENGTH(x'a45f'))IS NOT(((((((((((((NULL)OR(x'')))AND('+w6''')))OR('-266772968')))AND(x'caeb')))AND('')))AND(NULL))))); -- 1ms;
SELECT ALL COUNT(((t1.c0)+(t0.c44))) OVER ( ORDER BY t0.c93 ROWS ((((t0.c97) NOT BETWEEN (t0.c97) AND (t1.c51)))-(((t0.c93) NOT NULL))) PRECEDING EXCLUDE CURRENT ROW) FROM t0, t1 ORDER BY (((((t1.c0) BETWEEN (t0.c93) AND (t1.c0))))<((((NULL) NOT BETWEEN (t0.c56) AND (t0.c44))))), CAST(CASE t0.c56  WHEN t0.c97 THEN t0.c93 END AS REAL) DESC; -- 0ms;
SELECT ALL (((((t0.c44)<=(t0.c44)), ((t1.c51) ISNULL), ((t0.c56)*(t0.c56)), CASE t0.c44  WHEN t0.c97 THEN t1.c0 WHEN t0.c93 THEN t0.c44 WHEN t0.c97 THEN t1.c0 ELSE NULL END, ((t0.c93)GLOB(t0.c56))))<=(((~ (t0.c56)), load_extension(t1.c0), (((t0.c44, t0.c97, t1.c51))<=((t0.c93, t0.c44, ''))), (((t0.c97)) NOT BETWEEN ((t0.c93)) AND ((NULL))), CASE t0.c93  WHEN t0.c93 THEN t0.c44 ELSE t1.c51 END))) FROM t0, t1 WHERE ((((LOWER(0.7257292124831188)))<>(((NULL IN (NULL)))))); -- 0ms;
SELECT ALL CASE t0.c93  WHEN ((t0.c93) BETWEEN (t0.c44) AND (t0.c44)) THEN (t1.c0 IN ()) ELSE CAST(t1.c0 AS TEXT) END FROM t1 WHERE (NULL) ORDER BY (((((t0.c93, t0.c56, NULL)) NOT BETWEEN ((x'', t0.c97, t0.c97)) AND ((t0.c93, t1.c0, t0.c97))))>=(TYPEOF(DISTINCT t0.c56))) DESC;SELECT DISTINCT ((((((t1.c51)IS NOT(t0.c56)))OR(t0.c56)))AND(((((t1.c0)OR(t1.c51)))OR('')))), ((ABS(DISTINCT t1.c51))>=(COUNT(*))), ROW_NUMBER() OVER () FROM t0, t1; -- 0ms;
SELECT ALL ((json_valid(t0.c97)) BETWEEN ((+ (t0.c44))) AND (CASE WHEN t0.c93 THEN t0.c93 END)) FROM t0 WHERE (((x'1e4accfd')IS((NOT (''))))); -- 0ms;
SELECT DISTINCT (((+ (t0.c44))) NOTNULL) FROM t1 WHERE (((json_extract('', '', '-843315927', ''))!=(((((9223372036854775807)AND(x'40e0')))OR(x'')))));SELECT ALL SUM(((t1.c51)/(t1.c51))) OVER () FROM t0 WHERE (CAST(((((0.5535589007504247)AND(0.6375979912122345)))AND('')) AS TEXT)) GROUP BY (((+ (t0.c93)))LIKE(UPPER(t0.c97))) HAVING TOTAL((- (t0.c93)));SELECT DISTINCT (((t0.c44)*(t0.c56)) IN (((t1.c0) IS TRUE))) FROM t1 WHERE (((('-732968457')) NOT BETWEEN ((UNLIKELY(DISTINCT '-775180179'))) AND ((x''))));SELECT DISTINCT DENSE_RANK() OVER (), TRIM(DISTINCT t0.c56) COLLATE BINARY, SUM(((t0.c44) NOT BETWEEN (t0.c97) AND (t0.c56)) COLLATE NOCASE) FROM t1, t0; -- 0ms;
SELECT ALL ((t0.c56) IS TRUE) FROM t0, t1; -- 0ms;
SELECT DISTINCT (((((t0.c93)IS(t0.c44))))!=(('1023937171'))) FROM t0, t1 WHERE ((((0.8460957838791124 IN ())) IS FALSE)); -- 0ms;
SELECT SUM(868765860) OVER () FROM t0, t1 INDEXED BY i80 WHERE ((('-2050380090')-(((0.7757370295797944)OR(NULL)))));SELECT ((t1.c51 COLLATE NOCASE)/(CAST(0.6915992274639803 AS NUMERIC))) FROM t1, t0 NOT INDEXED WHERE ((HEX(DISTINCT ' as䶢f72') IN ())); -- 0ms;
SELECT ((MIN(t1.c51))/(t0.c93 COLLATE RTRIM)) FROM t0 WHERE (((CASE x''  WHEN x'' THEN NULL ELSE -891880684 END)>=(((x'')*(x'')))));SELECT DISTINCT (+ (CASE WHEN t1.c51 THEN t0.c44 ELSE t1.c51 END)) FROM t0, t1 EXCEPT SELECT ALL ((COALESCE(t0.c44, t0.c44)) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((((t0.c56)AND(t0.c56)))AND(t0.c44)))) FROM t0 WHERE ((((0.5139528800801165 IN ())) NOT BETWEEN ((('34127023')||(NULL))) AND (CASE WHEN '1885413351' THEN '0.4383458678393821' END)));SELECT DISTINCT (((t0.c93) BETWEEN (t1.c0) AND (x'560f')) IN (((t0.c44)<(NULL)))) FROM t0 WHERE ((((('0.5961362848607688') BETWEEN ('-604219300') AND (0.295355758101858))) NOTNULL));SELECT DISTINCT (((((t1.c51 IN ()))OR(CASE WHEN t0.c97 THEN t1.c51 END)))AND(((t0.c93)<<(t0.c44)))) FROM t0;SELECT DISTINCT TOTAL(((t1.c51)AND(t0.c97))) OVER (), ((t0.c93 COLLATE RTRIM)>=((t0.c97 IN ()))), (- (LTRIM(t0.c97, t1.c0))) FROM t0, t1; -- 0ms;
SELECT ALL ((((t0.c93) BETWEEN ('') AND (t0.c93))) IS FALSE), ((((((((((t0.c93)OR(t0.c93)))OR(t0.c97)))AND(t1.c51)))AND(0.17936994988224286))) NOT BETWEEN (((t0.c93) IS FALSE)) AND ((((t0.c56, t0.c56, x'')) NOT BETWEEN ((t1.c51, t1.c0, t0.c56)) AND ((t0.c44, NULL, t0.c44))))), ((((((((t0.c44)OR(t1.c0)))AND(NULL)))OR(t1.c0)))OR(t0.c44)) COLLATE BINARY FROM t0;SELECT DISTINCT (- (((((t0.c93)OR(t1.c51)))OR(t0.c56)))), (((((t1.c51 IN (t1.c51, t1.c51, t1.c0)))OR((+ (t0.c56)))))AND(((t1.c51) NOT NULL))), CASE t1.c0  WHEN ((t1.c51) NOT BETWEEN (t1.c51) AND (t0.c44)) THEN (- (t0.c93)) ELSE ((t0.c97)+(t0.c56)) END FROM t1;SELECT DISTINCT ((((t0.c93)<=(t0.c93)))IS NOT(CAST('' AS BLOB))) FROM t1, t0 WHERE (((NULL)GLOB(((3.4127023E7) BETWEEN (NULL) AND (NULL))))) GROUP BY (- (highlight(t0.c56, 'E g*Wa', t0.c56, t0.c56))), (((~ (t0.c93)))IS(((t0.c97) BETWEEN (t1.c0) AND (t0.c56)))), CASE WHEN t0.c93 COLLATE BINARY THEN ((((((((t0.c93)OR(t0.c44)))OR(t0.c44)))OR(t0.c97)))OR(t0.c97)) WHEN GLOB(t0.c44, t1.c51) THEN ((((t0.c44)OR(t0.c56)))AND(t1.c0)) WHEN (('1192400687') NOTNULL) THEN CAST(t0.c93 AS BLOB) ELSE ((t0.c44)<(t0.c93)) END; -- 0ms;
SELECT DISTINCT COUNT(((t0.c93)%(t0.c93))) FROM t1;SELECT DISTINCT (((~ (t1.c51)))<(((t1.c51)|(t0.c97)))) FROM t0 WHERE (((- ('*)m쫨WQ ')) IN ()));SELECT ((((((t1.c51)OR(t0.c97)))AND(584022632)))-(((t0.c97) BETWEEN (t0.c56) AND (t1.c0)))), t1.c51, t1.c0, CASE t1.c51 COLLATE RTRIM  WHEN ((t1.c0) ISNULL) THEN (((t0.c44)) BETWEEN ((0.28708273661259487)) AND ((t1.c0))) ELSE ((((t0.c44)AND(t0.c44)))OR('!	Wq')) END, t1.c0 COLLATE BINARY FROM t0, t1; -- 1ms;
SELECT ALL ((NULL)IS NOT(((t0.c93) NOT BETWEEN (t0.c44) AND (t0.c56)))), ((((t1.c51) IS FALSE)) NOTNULL), CAST(CAST(t0.c44 AS REAL) AS REAL) FROM t0 WHERE ((~ (CASE WHEN 0.8104135079565815 THEN '' WHEN x'' THEN 0.7565889462830269 WHEN '145944510' THEN -1764760873 ELSE NULL END)));SELECT ((((((((t1.c51)AND(x'')))OR(t0.c97)))OR(t1.c0)))OR(t0.c56)) COLLATE NOCASE FROM t1 LIMIT -1201569532;SELECT DISTINCT (- (((t0.c56)>=(t1.c51)))) FROM t1 ORDER BY CAST(((t0.c44)/(t0.c56)) AS INTEGER) ASC  NULLS LAST LIMIT 1906119753;SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT ((((x'') IS TRUE))|(((t0.c93) BETWEEN (t1.c51) AND (t1.c0)))) FROM t0 WHERE ((('' COLLATE BINARY) IS TRUE)) LIMIT 599940283 OFFSET 526264846;SELECT DISTINCT ABS(DISTINCT json_remove(t1.c0, t1.c51, t0.c56, t0.c56, t1.c51, t1.c0)), ((CASE WHEN t0.c93 THEN -1e500 END)||(((t1.c51)>=(t0.c56)))), ((TYPEOF(NULL))|((t0.c56 IN ()))) FROM t0, t1 WHERE (CAST(((-1.656967517E9)/(0.14089481385657576)) AS REAL)) LIMIT 1023937171 OFFSET -197323135; -- 0ms;
SELECT (NOT (((t0.c93) ISNULL))) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((CASE t1.c51  WHEN t0.c44 THEN 0.7563531737294585 ELSE t0.c44 END)%('-962049410')) FROM t1 WHERE (((((0.3769045481131891) BETWEEN ('43527867') AND (x''))) BETWEEN (0.5396776929946123 COLLATE RTRIM) AND (CASE WHEN x'' THEN '0.014844917156166315' END)));SELECT ALL COUNT(*), '' COLLATE RTRIM COLLATE RTRIM, AVG(((t0.c93)-(t1.c0))) OVER () FROM t1;SELECT (((((t0.c56)AND(t0.c97)))AND(t0.c56)) IN ()) FROM t1 WHERE ((CASE WHEN NULL THEN 0.5209681575263575 WHEN 0.1073415045277103 THEN NULL WHEN NULL THEN '-607597096' END IN ())); -- 0ms;
SELECT DISTINCT ((((t1.c0)!=(t0.c44))) BETWEEN (t0.c56) AND (((t0.c93)<=(t1.c0)))) FROM t1, t0 WHERE ((((0.11099165812231615)LIKE(0.04151764277688452)) IN ())); -- 0ms;
SELECT TYPEOF((((t1.c0))<>((t0.c93)))), ((((((t0.c93)AND(t1.c51)))AND(t1.c0)))IS NOT((t0.c44 IN ()))), ((((((((((((t0.c44)AND(t0.c44)))AND(t0.c97)))OR((NOT (t0.c44)))))OR(((t1.c51) BETWEEN (t0.c97) AND (t1.c51)))))OR((((t0.c44))>((t0.c97))))))AND(((t1.c51) ISNULL))) FROM t1 WHERE (((((NULL)/(0.2601002932835512)))/(((NULL)OR(NULL)))));SELECT DISTINCT ((CASE t1.c0  WHEN t0.c44 THEN t1.c51 END)<((((t0.c93)) BETWEEN ((t0.c44)) AND ((t1.c51))))) FROM t0 ORDER BY CASE ((((((((t0.c93)OR(t0.c93)))AND(t1.c51)))OR(t0.c56)))AND(t0.c56))  WHEN (t1.c51 IN ()) THEN (((t0.c97, t0.c93, t0.c44))>=((t0.c93, t0.c93, t0.c56))) WHEN ((((((((t0.c44)AND(t0.c56)))AND(t0.c97)))OR(t1.c0)))OR(t0.c93)) THEN CAST(t0.c56 AS NUMERIC) WHEN CASE t0.c97  WHEN t0.c97 THEN t0.c44 END THEN ((((t0.c56)OR(t1.c51)))AND(t0.c97)) ELSE LIKELIHOOD(t0.c97, 0.5880955818263316) END ASC  NULLS FIRST;SELECT ALL ((((t0.c97) BETWEEN (t0.c97) AND (x''))) BETWEEN (((t0.c93)|(-2046658778))) AND (t1.c0 COLLATE BINARY)) FROM t0 CROSS JOIN t1 ON UPPER(t1.c0); -- 0ms;
SELECT DISTINCT ((((t1.c0)+(t0.c93)))*(TOTAL(t0.c97))), ((((t0.c44)<<(t1.c51)))/((t1.c0 IN ()))), ((((((((CAST(t1.c51 AS TEXT))OR(TRIM(NULL))))AND(t0.c97)))OR(((t0.c44) IS TRUE))))AND(CAST('췔wvd0' AS INTEGER))) FROM t1;SELECT ALL TRIM(TOTAL(t1.c0), ((t0.c44)<<(t1.c0))) FROM t1, t0; -- 0ms;
SELECT (((((t0.c56)) NOT BETWEEN ((t0.c56)) AND ((t0.c56))))<(t0.c56 COLLATE BINARY)) FROM t1, t0 WHERE ((((('273452831')&(NULL))) NOT BETWEEN (CASE WHEN x'c2c6' THEN -1.822927216E9 ELSE 0.9975553843435342 END) AND (((x'') BETWEEN (0Xffffffffe9f04916) AND ('1565740868'))))); -- 0ms;
SELECT DISTINCT CAST((t0.c97 IN ()) AS NUMERIC) FROM t0, t1 LIMIT -1656967517 OFFSET 226625780; -- 0ms;
SELECT ALL (~ (TOTAL(t0.c56))) FROM t1 WHERE (((((((((((NULL)*('140712688')))OR(CASE WHEN 0xffffffffe2685023 THEN '/ꊧkRX' ELSE NULL END)))OR(((('0J8*')) NOT BETWEEN ((x'09df')) AND ((x''))))))AND((NOT (0xfffffffffd843a7e)))))AND(((NULL)>=('o{')))));SELECT (TRIM(DISTINCT t1.c51) IN ()) FROM t1; -- 0ms;
SELECT ALL t1.c51 FROM t1; -- 0ms;
SELECT MIN(t0.c44) COLLATE NOCASE COLLATE BINARY FROM t0, t1 WHERE (((((0.38730400343224003)<<(0.649556819153648))) NOT NULL)); -- 0ms;
SELECT DISTINCT t0.c44 FROM t0, t1 WHERE ((((+ (4.3527867E7))) NOT BETWEEN (CASE '-1204939900'  WHEN NULL THEN NULL ELSE NULL END) AND (LIKELIHOOD(DISTINCT -2.087028925E9, 0.33707154425096675)))); -- 0ms;
SELECT ALL NTILE(load_extension(TRIM(t0.c93), CASE t0.c97  WHEN t0.c44 THEN t0.c97 WHEN t0.c56 THEN t0.c44 WHEN x'de5f' THEN t0.c56 END)) OVER () FROM t0 WHERE (CASE WHEN CASE x''  WHEN NULL THEN x'' ELSE x'' END THEN ((x'') IS TRUE) END) GROUP BY '1708504757' HAVING ((t0.c44) IS TRUE); -- 0ms;
SELECT HEX(DISTINCT -1.822927216E9) FROM t0, t1; -- 0ms;
SELECT DISTINCT SUM(t0.c97), ((((t0.c44) NOTNULL))GLOB(((t0.c44) ISNULL))), MIN(((t1.c51) BETWEEN (t0.c44) AND (t0.c97))) FROM t0, t1 GROUP BY SQLITE_SOURCE_ID(); -- 0ms;
SELECT ALL (((t1.c0, t0.c44, t1.c51, t0.c97, t1.c0, t1.c0, t0.c56)) NOT BETWEEN ((t1.c0 COLLATE BINARY, ((t0.c97)<>(t0.c97)), (- (t0.c44)), NULL, CAST(t0.c44 AS INTEGER), ((t0.c97)!=(t0.c56)), ((t1.c0) NOT BETWEEN (t0.c44) AND (t0.c97)))) AND ((CAST(t1.c51 AS REAL), t1.c51 COLLATE BINARY, (((t0.c44))>=((t0.c56))), (((t0.c97)) BETWEEN ((t0.c56)) AND ((t1.c51))), (NOT (t0.c56)), t0.c93 COLLATE NOCASE, t0.c44))) FROM t0, t1 WHERE ((((('-732968457')IS NOT('')))GLOB(('745594735' IN ())))) ORDER BY CASE ((t1.c0)IS NOT(t0.c56))  WHEN t1.c0 COLLATE RTRIM THEN ((t0.c44)<>(t0.c56)) ELSE ((t0.c93) ISNULL) END  NULLS FIRST; -- 1ms;
SELECT (- (CAST(t0.c97 AS TEXT))), ((CAST(t0.c97 AS NUMERIC))>(t0.c97)), COUNT(*) FROM t0, t1; -- 0ms;
SELECT ALL CAST(((((t0.c93)AND(t0.c97)))AND(t0.c97)) AS INTEGER) FROM t0, t1 GROUP BY ((CAST('1316454073' AS INTEGER)) NOTNULL); -- 0ms;
SELECT DISTINCT (- (((t1.c0)<=(t1.c51)))) FROM t0, t1 WHERE (0Xffffffffe20fdea7); -- 0ms;
SELECT ALL t1.c51, SUM(((t0.c44) BETWEEN (t1.c0) AND (t0.c56))) OVER (), (+ (((t0.c44)<(t0.c97)))) FROM t1 WHERE ((CASE '-559753108'  WHEN x'9ae5' THEN -3.47724999E8 WHEN 'ZO' THEN '\nKoH6|H&C' WHEN -239210438 THEN '0.9760740501296283' ELSE NULL END IN ()));SELECT DISTINCT 'Q\r' FROM t0, t1; -- 0ms;
SELECT DISTINCT (((t0.c93)) NOT BETWEEN (((t0.c97 IN ()))) AND (((t0.c44 IN (t1.c0))))), ((((t1.c0) ISNULL)) IS FALSE), (((((t0.c56) NOTNULL)))=((x''))), MAX((((t0.c93)) NOT BETWEEN ((t1.c0)) AND ((t1.c51)))), UPPER((+ (t0.c97))) FROM t0, t1 WHERE (NULL); -- 0ms;
SELECT DISTINCT '' COLLATE NOCASE, ((LIKELIHOOD(t0.c97, 0.24961422620754137)) IS FALSE), CAST(t1.c51 AS NUMERIC) FROM t0 LIMIT -1943384000;SELECT (((NULL)) BETWEEN ((((t1.c51) NOT NULL))) AND ((CASE WHEN t0.c97 THEN t0.c93 ELSE t0.c44 END))) FROM t0 WHERE (CAST(((NULL) BETWEEN (x'1c84') AND (x'')) AS TEXT));SELECT DISTINCT (- ((t0.c56 IN ()))) FROM t1; -- 1ms;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((CAST('0.04350615310232364' AS TEXT))OR(((x'fa42') ISNULL))))AND('-307619316'))); -- 0ms;
SELECT DISTINCT (t0.c44 IN (t0.c56)) COLLATE NOCASE COLLATE BINARY FROM t1, t0; -- 0ms;
SELECT DISTINCT LAG(TRIM(((t0.c44)<>(t0.c56)), ((t0.c56)>=(t0.c97))), ((((t0.c93 COLLATE BINARY)OR(((t0.c56) BETWEEN (t0.c97) AND (t0.c44)))))OR(json_extract(t0.c93, t0.c44))), CAST(t0.c44 AS INTEGER) COLLATE RTRIM) OVER ( RANGE rtreenode(((NULL) IS FALSE), (- (t0.c44))) PRECEDING EXCLUDE NO OTHERS), TOTAL('-1271929596'), (((((t1.c51)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) NOT BETWEEN ((((t0.c97, t0.c97, t0.c44))>=((NULL, t1.c0, t1.c51)))) AND (CASE t1.c51  WHEN t0.c97 THEN -851012429 ELSE t1.c51 END)), ((((((t0.c97)AND(t0.c56)))AND(t0.c97))) NOTNULL), GROUP_CONCAT(((t1.c0) BETWEEN (t1.c0) AND (t0.c44)) COLLATE NOCASE) OVER ( PARTITION BY ((CAST(t0.c56 AS NUMERIC))>(NULL)), CAST('R4a*K' AS BLOB) RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM t0 WHERE (((RTRIM('')) IS FALSE));SELECT ALL SUM((t0.c56 IN (x''))) OVER () FROM t0, t1 WHERE ((~ ((0.31938190676007516 IN ())))) GROUP BY ((CASE t0.c97  WHEN t1.c51 THEN t0.c93 ELSE t0.c56 END)|(CASE t0.c44  WHEN t0.c44 THEN t0.c44 ELSE t0.c93 END)), CASE WHEN CASE WHEN t0.c56 THEN t0.c56 ELSE t1.c51 END THEN (+ (t1.c51)) END, CASE WHEN (t0.c56 IN (t0.c44)) THEN CAST(t0.c44 AS NUMERIC) END; -- 0ms;
SELECT x'381b' FROM t0, t1 ORDER BY (((t0.c44 IN (t1.c51, t0.c44)))IS((('3Q3|K') BETWEEN (t1.c51) AND (NULL)))) DESC; -- 0ms;
SELECT DISTINCT (((((((((t0.c56)OR(t0.c44)))AND(NULL)))OR(t0.c44)))AND(t0.c44)) IN ()), CASE WHEN t0.c97 THEN ((t1.c0)>(t0.c97)) END, ((t1.c51)%(((t1.c0) IS TRUE))) FROM t1, t0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t0.c44 THEN t1.c51 ELSE t0.c56 END AS TEXT) FROM t1 WHERE (ABS(DISTINCT CAST(x'' AS NUMERIC)));SELECT DISTINCT (((CASE WHEN t1.c51 THEN t0.c44 WHEN t0.c93 THEN t0.c93 WHEN t0.c56 THEN t0.c44 ELSE t0.c97 END))<>(((~ (t1.c51))))) FROM t1 WHERE ((((+ ('2057970319')))IS(ABS(DISTINCT NULL))));SELECT DISTINCT '1071979036' FROM t1, t0; -- 0ms;
SELECT DISTINCT (AVG(t1.c51) IN ()) FROM t0 WHERE ((((((0.7916016089916789, 'V\r', x'')) NOT BETWEEN ((0.10753976007786348, '', 855138596)) AND (('\nkoh6|h&c', 'lt', x'c557')))) BETWEEN (((((-1.80917345E9)OR('-1860140694')))AND(NULL))) AND ('<愃'))); -- 0ms;
SELECT DISTINCT IFNULL(CAST(t0.c93 AS INTEGER), ((t0.c56)<=(t0.c44))) FROM t1, t0 WHERE (LIKE((((('-2070805614')OR('ez-&C朋&')))AND('.MKT')), ((x'')|(x'')), 'u')); -- 0ms;
SELECT DISTINCT NTILE((t1.c0 IN ()) COLLATE BINARY) OVER () FROM t1 WHERE (CASE ((x'b0e4')<=(x''))  WHEN ((0.7196357842840552)<<('K[')) THEN CAST(0.2727268996607406 AS TEXT) ELSE CASE '1246084158'  WHEN 'TRUE' THEN 'C9ꛋ{rB' END END);SELECT DISTINCT ((AVG(t1.c51))GLOB(((t0.c56) IS TRUE))) FROM t0, t1 WHERE (((((((((LENGTH(0x19caa4ba))AND(('-1382146414' IN ('0.1999986558837752')))))OR((-1140277065 IN ()))))OR((('_O') NOT BETWEEN (NULL) AND (0X43bd780d)))))AND(((x'1f12')>>('䤷ꞕ7Sua2'))))) LIMIT 241340687 OFFSET 2062886623; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0 LIMIT -791322405; -- 0ms;
SELECT DISTINCT ((~ (t1.c51)) IN ()) FROM t1, t0 GROUP BY (((((((((t1.c0)AND(t0.c93)))AND(t0.c56)))OR(t1.c51)))OR(t0.c44)) IN ()), (~ ((- (t0.c97)))), CAST(((1708504757)||(t0.c93)) AS BLOB) HAVING NULL COLLATE BINARY LIMIT 879120400; -- 0ms;
SELECT DISTINCT CAST(NULLIF(t0.c93, t0.c93) AS NUMERIC) FROM t1, t0; -- 0ms;
SELECT ((CASE t1.c0  WHEN t0.c93 THEN t1.c51 END)%(((((t0.c93)OR(t0.c93)))OR(t0.c97)))) FROM t0, t1; -- 0ms;
SELECT DISTINCT (((t0.c56)) BETWEEN (((t0.c97 IN ()))) AND ((((t1.c0)LIKE(NULL))))), (NOT (LENGTH(t1.c0))), (TOTAL(NULL) IN ()) FROM t1, t0 WHERE ((((((('3w')>>('-2024698581')))OR((('') NOT BETWEEN ('-398992520') AND (NULL)))))AND(((NULL)GLOB(NULL))))); -- 0ms;
SELECT ((t0.c93) ISNULL) FROM t0, t1 WHERE ((- (NULL)) COLLATE RTRIM) GROUP BY ((t0.c97 COLLATE RTRIM) ISNULL), TOTAL_CHANGES(), (((NOT (t0.c97))) BETWEEN (((t1.c51)==(t0.c97))) AND (((0.25269164271628386) ISNULL))) HAVING ((CAST(t1.c0 AS TEXT)) IS FALSE); -- 0ms;
SELECT ALL (((t1.c0)) NOT BETWEEN ((CASE WHEN t0.c56 THEN t1.c51 ELSE t1.c51 END)) AND ((t0.c56))), (((t0.c93 IN ()))-(json_patch(t0.c97, t0.c93))), (UNLIKELY(DISTINCT t1.c51) IN ()) FROM t0;SELECT (((t0.c56 IN ())) NOT BETWEEN (((t0.c44) NOTNULL)) AND (t0.c56 COLLATE BINARY)) FROM t0, t1 WHERE (((UNLIKELY(DISTINCT 0x507c0460))<=(CASE '-891880684'  WHEN 0.34059192415395945 THEN NULL ELSE 209166395 END))); -- 0ms;
SELECT DISTINCT -176405874 FROM t1 INNER JOIN t0 ON ((((((t0.c56)AND(t0.c56)))OR(t1.c0))) BETWEEN ('') AND (((t0.c44)&(t1.c0)))) WHERE (((JULIANDAY(NULL, 0x386dc7d6, x'cdca', 0.34283781423915505, NULL)) BETWEEN (CHANGES()) AND ((NOT (x''))))); -- 0ms;
SELECT DISTINCT t0.c56 FROM t0, t1 WHERE (CAST(((NULL) ISNULL) AS NUMERIC)); -- 0ms;
SELECT ALL '2072838205' FROM t1; -- 0ms;
SELECT ALL FIRST_VALUE(UPPER(DISTINCT t0.c56)) OVER (), IFNULL(DISTINCT ((((t0.c56)OR(t0.c97)))OR(t0.c44)), x'b799'), ((CAST(t0.c56 AS INTEGER))AND(CAST(t0.c97 AS TEXT))) FROM t0 WHERE (0.9572106053891513) ORDER BY t0.c44, (t0.c44 IN ()) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT DISTINCT DATETIME(CAST(t0.c56 AS TEXT), UPPER(NULL), t0.c97, ((t0.c97)*(t0.c93)), (('-84614061') IS FALSE)), (((t1.c51)) NOT BETWEEN ((x'')) AND ((((t0.c97) NOT BETWEEN (t0.c97) AND (t1.c0))))), (((t1.c51, t1.c51, t0.c97)) NOT BETWEEN ((t1.c51, t1.c51, t1.c51)) AND ((t1.c51, t1.c0, t0.c97))) COLLATE NOCASE FROM t1, t0 WHERE (TOTAL_CHANGES() COLLATE RTRIM); -- 0ms;
SELECT GROUP_CONCAT(((t1.c51) IS FALSE)) OVER () FROM t0 WHERE (LTRIM(x'', 0.2624062221834992) COLLATE RTRIM);SELECT DISTINCT CAST((t0.c44 IN (t0.c44)) AS NUMERIC), (((((((t0.c56)OR(t1.c0)))AND(t0.c93))))>=(((((t0.c93))>((t0.c93)))))), (((t0.c56)!=(t0.c44)) IN ()) FROM t1 WHERE (CASE WHEN CASE WHEN 0X5dce8693 THEN -2.030109731E9 END THEN 0.4970259412292831 COLLATE BINARY END);SELECT ALL (- (((t1.c51)>(t1.c0)))), GROUP_CONCAT((((t1.c51, t1.c51, t1.c51)) NOT BETWEEN ((t0.c56, t1.c0, t0.c93)) AND ((t1.c51, t1.c51, t1.c51)))) OVER (), TOTAL(CAST(t1.c51 AS BLOB)) FROM t0;SELECT DISTINCT CASE t0.c93  WHEN t0.c44 THEN t0.c44 ELSE t0.c44 END COLLATE NOCASE FROM t1 ORDER BY t1.c0  NULLS LAST, (~ (0.9645550113118496)) COLLATE NOCASE  NULLS FIRST, CAST((+ (t1.c0)) AS INTEGER) DESC;SELECT DISTINCT CASE WHEN ((t1.c0) BETWEEN (1.246084158E9) AND (t1.c51)) THEN ((t1.c51)>(t0.c93)) ELSE t1.c0 END FROM t1, t0 GROUP BY t1.c0, ((((t1.c0 COLLATE RTRIM)AND((+ ('688467496')))))AND(CASE t0.c93  WHEN t0.c56 THEN t1.c0 ELSE t0.c44 END)), 2.031411874E9, (((t0.c56)) BETWEEN ((TYPEOF(DISTINCT t1.c51))) AND ((CAST(t1.c0 AS BLOB)))), (((((t0.c44))<((t1.c0)))) IS FALSE) HAVING ((t0.c93) BETWEEN (CASE WHEN t0.c93 THEN t0.c97 END) AND ((+ (t0.c44)))) LIMIT -559753108; -- 0ms;
SELECT DISTINCT x'fccd' FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c0) NOT BETWEEN (t0.c44) AND (t1.c0))) BETWEEN (((t0.c97) NOT BETWEEN (t0.c44) AND (t1.c51))) AND ('' COLLATE RTRIM)) FROM t1, t0 WHERE ((((NULL)) NOT BETWEEN ((((x'') NOTNULL))) AND ((((-1.564151198E9)||(0.4834408231944072)))))); -- 0ms;
SELECT ALL (- (COALESCE(DISTINCT t0.c44, t0.c97))) FROM t1, t0 WHERE (((((NULL)AND(((0.9760740501296283)-(0x3bebd776)))))OR((((x'9143'))<=((-1.80917345E9)))))) GROUP BY (('')<=('1')); -- 0ms;
SELECT DISTINCT (((((((((t0.c56)OR('-1955428391')))OR(t1.c51)))AND(t0.c44)))OR(t0.c97)) IN ()) FROM t1, t0; -- 0ms;
SELECT (((((((((((t0.c93))>=((t1.c51))))OR((+ (t1.c0)))))AND(t1.c51 COLLATE NOCASE)))AND(TYPEOF(t0.c93))))OR(((((((((t1.c51)AND('')))AND(t0.c93)))OR(t0.c97)))OR(t0.c56)))) FROM t1, t0 WHERE (((((-843315927) NOT BETWEEN (0.49337953431772286) AND (0xffffffff93585690))) BETWEEN (TYPEOF(0.9677238772620853)) AND (CAST(0.338559144259555 AS REAL)))) GROUP BY CASE CASE WHEN x'' THEN t0.c97 END  WHEN CASE t1.c51  WHEN t0.c44 THEN t1.c0 ELSE t0.c97 END THEN (t1.c0 IN (t1.c51, t0.c56)) END HAVING (((t1.c51) NOT NULL) IN (TYPEOF(DISTINCT t0.c44))) ORDER BY (((t0.c44 IN ())) NOT BETWEEN ((- ('S\n'))) AND ((((t0.c44)) NOT BETWEEN ((t0.c97)) AND ((t0.c56)))))  NULLS LAST, (((t1.c0, t0.c56, x'')) NOT BETWEEN ((json_extract(t1.c51, t0.c44), CASE t1.c51  WHEN t1.c0 THEN t1.c0 WHEN t0.c56 THEN NULL WHEN t0.c44 THEN t0.c56 WHEN t0.c44 THEN t1.c51 WHEN t1.c0 THEN t0.c93 ELSE x'94ad' END, LIKELY(DISTINCT t0.c56))) AND ((LIKELY(NULL), CASE t0.c44  WHEN t1.c51 THEN t0.c97 ELSE -1983714432 END, CAST(t0.c44 AS REAL)))) ASC; -- 1ms;
SELECT DISTINCT '' FROM t1, t0 ORDER BY t1.c0 DESC  NULLS FIRST, (((t0.c97, 0xffffffff88799273, t0.c93)) BETWEEN (((t1.c0 IN ()), t1.c51, json_insert(t0.c93, t0.c56, t0.c44))) AND (('-154256153', (((('0.9937500473665223')OR(t1.c0)))OR(t1.c0)), ((t0.c97) IS TRUE)))) DESC, CASE WHEN ((((t0.c93)OR(t0.c93)))AND(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t0.c97) AND (NULL)) ELSE ((t1.c0)AND(t1.c51)) END; -- 0ms;
SELECT (((t1.c0 IN ()))AND(t1.c51 COLLATE NOCASE)) FROM t1 WHERE (((((0.7223722245262977) NOT BETWEEN (NULL) AND ('0.701000775773469'))) BETWEEN (((-1020600837) ISNULL)) AND (CASE '-1047457560'  WHEN 'a&4' THEN '' WHEN '2031411874' THEN 0Xffffffffcf9e5820 WHEN NULL THEN 0x343e4937 END))) INTERSECT SELECT ALL (((t0.c93))=((t0.c97))) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ALL CASE ((t1.c51) BETWEEN (t1.c0) AND (t1.c51))  WHEN SUM(t0.c56) THEN CASE 1.490469662E9  WHEN t0.c44 THEN t1.c51 ELSE t1.c51 END ELSE (t0.c44 IN ()) END FROM t0, t1 WHERE ((MIN(0.9147986470010638, '226625780') IN ())); -- 0ms;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CASE (((x'', '0.35765504801280334', '-182230183', '-1227263756', 0Xfffffffff8804a31)) BETWEEN ((1.565740868E9, 0.7270761035391077, '2j', '', x'')) AND ((245271355, 0x3a721f10, '-188637272', 0.0, 0.4115333261543822)))  WHEN ((('637774335')) BETWEEN ((x'')) AND ((NULL))) THEN ((0xffffffffe7c1d27b)>(0X5e4523cd)) END); -- 0ms;
SELECT x'' FROM t1 WHERE (((((NULL)<=('+*')))||((((('ퟢ~3K')AND(0.35680021691345043)))OR('B]'))))) LIMIT 1233795123 OFFSET -1843811983; -- 0ms;
SELECT DISTINCT (((- (t0.c44))) NOTNULL) FROM t0, t1; -- 0ms;
SELECT ((((t1.c51)>>(t0.c44)))*(((((t0.c44)OR(t0.c44)))AND(t0.c97)))), CAST(t0.c44 AS TEXT) COLLATE RTRIM, ((CASE WHEN t0.c56 THEN t0.c56 ELSE t0.c93 END) NOT BETWEEN (((t0.c97) NOT BETWEEN (t0.c93) AND (t0.c97))) AND (((((t1.c51)OR(t0.c97)))OR(t0.c97)))) FROM t0;SELECT DISTINCT GROUP_CONCAT(MAX((+ (t1.c51)))), (COUNT('xh	e5e顨') IN ()), '7r' FROM t1 WHERE ((((('')%(-992149690))) NOT BETWEEN ('1924957928' COLLATE NOCASE) AND (x'')));SELECT ALL COUNT(CAST(t0.c93 AS NUMERIC)) OVER (), CASE WHEN ((('K\fD''FYk%')) NOT BETWEEN ((t0.c93)) AND ((t1.c0))) THEN ((t1.c0) BETWEEN (t0.c93) AND (t1.c0)) WHEN t0.c93 THEN ((t0.c44)IS(t0.c93)) WHEN (((t1.c51, t0.c97, t1.c0))>((t0.c97, t1.c0, t0.c44))) THEN ((((((((t0.c56)AND(t0.c56)))AND(t1.c0)))OR(t1.c0)))AND('')) END, t0.c56 FROM t1;SELECT ((((((t0.c97)OR(t1.c51)))AND(t0.c56)))GLOB(((t0.c56)GLOB(t0.c56)))), SUM(TOTAL(HEX(t0.c56))), CASE ((t0.c44)<=(t0.c56))  WHEN (t0.c97 IN ()) THEN ((t1.c0)>>(t0.c44)) END FROM t1 WHERE (((0X73c7e09b)+(NULL)) COLLATE RTRIM);SELECT ((((t1.c51)AND(t0.c44)))AND(t0.c44)) COLLATE BINARY FROM t1, t0 WHERE (LIKELY(((((((((NULL)AND(x'')))AND(-1386944852)))OR(-1.955428391E9)))OR(NULL)))); -- 0ms;
SELECT ALL CAST(COUNT(*) AS REAL) FROM t1, t0 WHERE ((((((((((((((~ (-0.0)))AND((('-1643521301')<=(x'')))))AND((((0.717381699108902)) BETWEEN ((x'723a')) AND ((0.8832726996673205))))))OR(((x'dee6') NOT BETWEEN (0.7537984405226438) AND (x'86dc')))))AND(((0X345fe6c7)<>('f7懧3kV}')))))AND(GLOB(NULL, 0.7049017155609835))))AND(NULL))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c93)OR(t0.c97)))OR(((t1.c0) BETWEEN (t1.c0) AND (t0.c97)))))AND(CASE t1.c51  WHEN t0.c93 THEN t0.c97 END)))OR('-0.0')))AND(0.8682293076406424)) FROM t1, t0 WHERE (CASE CASE x'39f1'  WHEN 'fcG}x	%B_' THEN 'hO+.Z' END  WHEN 0.7087362823888558 COLLATE RTRIM THEN (('-732968457') ISNULL) WHEN ((0.8785686310539712)>(x'')) THEN UPPER(DISTINCT '') WHEN UPPER(x'') THEN ((NULL)>>(NULL)) END) LIMIT 1170165749; -- 0ms;
SELECT (((CAST(t0.c97 AS NUMERIC), json_insert(t0.c97, t0.c44, t0.c44), ((t1.c0)>(t0.c56))))<>((((t0.c44) BETWEEN (t0.c97) AND (t0.c93)), (+ (t0.c97)), t1.c51))) FROM t1 ORDER BY (((NULL))<((CAST(t0.c97 AS NUMERIC))))  NULLS FIRST;SELECT DISTINCT ((-590318757) NOTNULL) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((t1.c51) BETWEEN (t0.c56) AND (t1.c51)) COLLATE RTRIM, t0.c56, MIN((('112439763')/(t0.c97))) FROM t1;SELECT ALL ((t0.c93 COLLATE RTRIM)|(CAST(t0.c44 AS BLOB))) FROM t1;SELECT DISTINCT GROUP_CONCAT(CAST(t0.c97 AS BLOB)) OVER ( ORDER BY ((('_)')<(t0.c93)) IN ()) GROUPS  UNBOUNDED PRECEDING), (- (((((t0.c44)OR(t1.c51)))OR('噣_')))), (((CAST(t0.c56 AS TEXT)))<=((t1.c51 COLLATE BINARY))) FROM t1, t0 WHERE ((((('1741229563')LIKE(x''))) NOTNULL)); -- 0ms;
SELECT ((((t0.c97)GLOB(x''))) NOTNULL) FROM t1, t0 WHERE ((NOT ((((('P7now>_')AND(x'')))OR(0))))); -- 0ms;
SELECT ALL ((CAST(t1.c0 AS BLOB)) NOT BETWEEN (HEX(t0.c93)) AND (t0.c97)), t0.c93, PERCENT_RANK() OVER () FROM t0 WHERE ((+ (CASE 0.6303192972365579  WHEN NULL THEN 0.07422275416907997 ELSE NULL END)));SELECT DISTINCT SUM(('' IN ()) COLLATE RTRIM) OVER (), LOWER(DISTINCT LIKELY(t1.c51)), t0.c44, LAG((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), t1.c51 COLLATE BINARY, t1.c51 COLLATE BINARY))>=(((~ (t1.c0)), ((t1.c51)<(NULL)), 'D\rv&1L>&('))), t1.c51, ((t1.c51)<<(x'')) COLLATE RTRIM) OVER (), UPPER(DISTINCT ((((t0.c93)OR(t0.c44)))OR(t0.c56))) FROM t1 WHERE ((((((('')OR('z꯲')))OR(-1.904537112E9)))<=(CAST('' AS INTEGER)))) ORDER BY LIKELY(CASE WHEN t0.c97 THEN t1.c0 WHEN t1.c51 THEN t0.c97 WHEN t1.c51 THEN t1.c51 ELSE t0.c56 END)  NULLS LAST LIMIT 1183349462;SELECT DISTINCT MIN(((t0.c56)&(t0.c44))) FROM t1 WHERE (((CASE 0.4969108562030935  WHEN 0.6903772258041407 THEN x'' WHEN 0X46473253 THEN NULL WHEN '' THEN 0.23214609813030784 WHEN x'' THEN '1687263932' WHEN NULL THEN 'K' END) NOT BETWEEN (((0x4bd11118) NOTNULL)) AND (COALESCE(DISTINCT NULL, ''))));SELECT DISTINCT ((UNLIKELY(t1.c0)) NOT BETWEEN (CASE t0.c56  WHEN t1.c51 THEN t0.c93 END) AND (t0.c97)) FROM t1 FULL OUTER JOIN t0 ON ((t0.c56 COLLATE NOCASE)IS(((t0.c97) ISNULL))); -- 0ms;
SELECT ALL (((t0.c56 IN ('4l')))>>(t0.c93)) FROM t1 WHERE ((+ (-1.646385849E9)));SELECT ALL ((((t1.c51) BETWEEN (t0.c93) AND (0.2990149121116785)))!=((+ (t0.c44)))) FROM t0;SELECT TRIM(DISTINCT t0.c44 COLLATE BINARY, ((((t0.c44)OR(t1.c51)))OR(t0.c44))) FROM t0, t1 WHERE ((((x'3b93')) BETWEEN ((('-1871920499' IN ()))) AND ((0.04687651062053566 COLLATE NOCASE)))) GROUP BY (((((t0.c93)<<(t0.c44))))>(((t0.c56 IN ())))) HAVING ((CASE WHEN NULL THEN t0.c97 WHEN t0.c97 THEN '' WHEN t0.c97 THEN t0.c93 END) NOTNULL); -- 1ms;
SELECT ALL SUM((- (t0.c97))) OVER (), CASE WHEN NULL THEN t0.c56 END, (NOT (((t1.c0) BETWEEN (t1.c0) AND (t0.c93)))) FROM t1, t0 WHERE (CAST(x'b2ff' AS BLOB) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((~ (t1.c0)), ((t1.c51)>=(t0.c93)), t1.c0))<(((+ (t0.c56)), NULL, MIN(t0.c97)))), AVG(CASE t0.c97  WHEN t0.c44 THEN x'' ELSE t0.c93 END), 'Ev' FROM t1, t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c56) IS TRUE) AS INTEGER) FROM t1, t0 WHERE ((((x'32a5') IS TRUE) IN ())) LIMIT 0 OFFSET 1490469662; -- 0ms;
SELECT (NOT (t0.c97 COLLATE BINARY)) FROM t1, t0 WHERE (CASE WHEN TRIM(0.5473539806497771, NULL) THEN (x'' IN ()) END); -- 0ms;
SELECT ALL t0.c97 COLLATE NOCASE FROM t0, t1 WHERE ((- (NULL))); -- 0ms;
SELECT (((MAX(t1.c0), ((t0.c93) IS TRUE), ((((((((t0.c56)OR('')))OR(t1.c0)))OR(0.4792985424424039)))AND(t1.c51))))<((TRIM(DISTINCT -1375089468, '1200330985'), (- (t1.c0)), (((t1.c0)) NOT BETWEEN ((t0.c93)) AND ((t1.c0)))))), ((((t0.c44)<(t0.c93))) BETWEEN (t0.c44 COLLATE BINARY) AND (LIKELIHOOD(DISTINCT '1940053031', 0.6093680009815375))), t0.c93 FROM t0;SELECT DISTINCT CAST(t0.c97 COLLATE BINARY AS INTEGER) FROM t1, t0 WHERE ((((CASE ''  WHEN NULL THEN NULL ELSE '' END))<>(((((x''))==(('1633292165'))))))) GROUP BY ((((((((TRIM(DISTINCT t1.c51))AND((((t0.c93))=((t1.c0))))))AND(t1.c51 COLLATE RTRIM)))AND(((t0.c56) BETWEEN (t0.c97) AND (t1.c51)))))AND(CAST(t0.c56 AS TEXT))); -- 1ms;
SELECT ALL ((((t1.c51)<=(t0.c93)))GLOB(((t0.c97)IS(t1.c51)))) FROM t1, t0 WHERE ('-1904537112'); -- 0ms;
SELECT ((CAST(t1.c51 AS REAL))OR(t0.c44 COLLATE BINARY)) FROM t1;SELECT ((t0.c56) BETWEEN (t0.c97) AND (t1.c0)) COLLATE NOCASE COLLATE NOCASE, MAX((t0.c44 IN (t0.c44))), (((t0.c56) NOT BETWEEN (t1.c51) AND (t0.c97)) IN ()), (CAST(t1.c51 AS NUMERIC) IN (((t1.c0)>>(t0.c93)))), LTRIM(((0.625535028397215)>>(t1.c0))) FROM t1, t0 WHERE (((((((0.44394291804373576)AND(x'')))OR('-(),'))) BETWEEN (CASE 0Xffffffffa2b42320  WHEN '-1043233830' THEN 0.044813825903799676 END) AND ((((('0.12208757986177321')OR(x'')))OR(-679622675))))); -- 0ms;
SELECT ALL LEAD((((t0.c97)==(t0.c97)) IN ()), CAST(((((((((t1.c51)AND(t0.c44)))OR(t0.c93)))AND(t0.c93)))OR(t1.c0)) AS BLOB), CAST(CASE WHEN '1905656538' THEN t0.c56 ELSE t0.c56 END AS NUMERIC)) OVER () FROM t0, t1; -- 0ms;
SELECT DISTINCT json_object(TOTAL_CHANGES(), (~ (t0.c44)), (((t0.c56))==((t1.c0))), ((t0.c97)/(t0.c93))), ((((CASE WHEN t1.c0 THEN t1.c51 END)AND(CASE t0.c56  WHEN t1.c51 THEN t0.c97 ELSE x'' END)))AND((t0.c97 IN ()))), CASE WHEN (1.179780233E9 IN ()) THEN CASE WHEN 0.3279378866677163 THEN t1.c51 END ELSE ((((t1.c0)OR(t1.c0)))AND(t0.c93)) END FROM t0 WHERE (((((((0x58a96498)OR(NULL)))AND(1.950588638E9)))>(((0.9702214935680686) IS TRUE))));SELECT TRIM(((t0.c56)GLOB(t0.c56)), ((t0.c97)IS(t0.c93))) FROM t1;SELECT CASE ((t0.c44) IS FALSE)  WHEN ((t1.c51) NOT NULL) THEN AVG('V奂') END FROM t1 WHERE (x'3d3f');SELECT ALL (t0.c97 IN ()) FROM t0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( PARTITION BY INSTR(((t1.c0) NOTNULL), ((t0.c56) NOTNULL)), CAST(CASE WHEN t1.c0 THEN t0.c97 WHEN t0.c97 THEN t1.c51 WHEN t0.c44 THEN t1.c51 ELSE t0.c93 END AS TEXT) ROWS '-710749439' PRECEDING EXCLUDE GROUP) FROM t0, t1 GROUP BY ((t0.c44) ISNULL); -- 0ms;
SELECT ALL ABS(AVG(t0.c44)) FROM t0 GROUP BY (((((t0.c97)=(t0.c97))))!=((t0.c56 COLLATE BINARY))) HAVING ((((t0.c44)&('1674986161'))) NOT BETWEEN (((t1.c0)OR(t0.c93))) AND ((t1.c51 IN (t0.c97))));SELECT ((x'a25f')+((t0.c97 IN ()))), (NULLIF(t0.c56, t0.c44) IN ()), (((((NULL)*(t0.c97))))<((CASE WHEN t0.c93 THEN t1.c0 WHEN t0.c44 THEN t0.c56 WHEN t0.c93 THEN x'' END))) FROM t1, t0 WHERE ((+ ((NOT (NULL))))); -- 0ms;
SELECT TOTAL(((t0.c56)!=(t0.c56))), ((((t0.c97) NOT BETWEEN (t1.c0) AND (t0.c44)))=(NULL)), (((t1.c51)) NOT BETWEEN ((((t1.c51) NOTNULL))) AND ((MIN(t1.c51)))) FROM t0, t1 WHERE ((((- (NULL)))LIKE(((((NULL)OR('')))OR(x''))))); -- 0ms;
SELECT ALL TOTAL(t1.c0) OVER (), (- (((t1.c0) NOT BETWEEN (t0.c97) AND (t1.c51)))), CAST(((((t0.c56)OR(t0.c44)))OR(t0.c93)) AS NUMERIC) FROM t0;SELECT json_extract(t0.c56, t0.c56, t0.c44, t0.c93) COLLATE RTRIM, LAST_VALUE(((CAST(t0.c97 AS INTEGER)) ISNULL)) OVER (), t0.c97 FROM t1, t0 GROUP BY ((CASE WHEN t0.c56 THEN t0.c97 END)<((t1.c51 IN ()))), (((~ (t0.c56))) NOTNULL), CAST((t1.c51 IN (t0.c93, 0.6101367278147631)) AS REAL); -- 0ms;
SELECT DISTINCT (((t0.c93)) NOT BETWEEN ((t0.c97)) AND (('1387985713'))) COLLATE RTRIM COLLATE RTRIM FROM t1, t0 WHERE (CASE WHEN NULL THEN '390995876' END COLLATE NOCASE); -- 0ms;
SELECT SUM((t1.c0 IN ())) FROM t0, t1 WHERE (((('1187805875', x'4a0c', '')) BETWEEN (((((0.0046201081384777964, 0Xe62910f, '50509761'))<>((0.3512920049225555, NULL, 'np'))), (('') ISNULL), ((NULL) NOTNULL))) AND ((((0.08703838744754322) IS FALSE), ((x'')OR(1125571527)), '1708504757')))) GROUP BY NULL COLLATE RTRIM, TRIM(((t0.c97)<<(t0.c56)), ((t0.c93)>>(t0.c97))), NULLIF(DISTINCT json_insert(t0.c56, 'u㚰u*', t0.c93), t1.c51 COLLATE BINARY) HAVING CAST(t0.c93 AS INTEGER) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((CAST(0x67c90dfb AS BLOB))AND(((((((((x'')OR(t0.c97)))AND(t1.c51)))OR(t1.c0)))OR(t0.c44)))), CAST(t0.c44 AS NUMERIC), ((t1.c0)=(t0.c44)) COLLATE RTRIM FROM t1, t0 WHERE (((0.24511857295395378) BETWEEN (x'b7b0') AND (x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t1 GROUP BY STRFTIME(((t1.c51)+(t1.c0)), t0.c93 COLLATE NOCASE, ((t0.c93) IS FALSE), ((t0.c56) BETWEEN (t1.c51) AND (t0.c97)), ((((t1.c51)AND(t0.c93)))AND(t0.c44)), (- (t0.c97)), json_remove(t0.c93, t0.c56)), t0.c97 COLLATE RTRIM, ((CASE t0.c44  WHEN t0.c44 THEN t0.c93 WHEN t1.c0 THEN t0.c97 WHEN t0.c56 THEN t1.c51 END) BETWEEN ((- (t1.c51))) AND (t0.c44)), ((((t0.c44) BETWEEN (t1.c0) AND (t0.c97))) BETWEEN (CASE WHEN t0.c56 THEN t0.c56 ELSE t1.c0 END) AND (((t1.c51)/(t1.c0)))), ((CAST(t0.c44 AS REAL)) IS TRUE);SELECT ((((((t1.c0)OR(t0.c93)))OR(t1.c0))) NOT NULL) FROM t1, t0 WHERE (CAST((((('1014993350')OR('-819436532')))OR('>')) AS TEXT)) LIMIT -1039440385 OFFSET -6718238; -- 0ms;
SELECT CASE WHEN (NOT (t1.c51)) THEN (NOT (t0.c93)) END, 0.8327587834820163, CAST(CAST(t1.c0 AS REAL) AS INTEGER) FROM t1, t0 WHERE (CAST(((0.556692122095409) NOTNULL) AS INTEGER)); -- 0ms;
SELECT ALL t0.c97, CAST((t1.c0 IN ()) AS BLOB), ((((t1.c51, t1.c0, t1.c51))>=((t0.c56, t0.c97, t0.c44))) IN ()) FROM t1, t0; -- 0ms;
SELECT ((((t1.c0)LIKE(t0.c56))) NOTNULL) FROM t1;SELECT DISTINCT COUNT(*) FILTER(WHERE CAST(((t1.c51) NOT BETWEEN (t0.c93) AND (t1.c0)) AS REAL)) OVER () FROM t0, t1 WHERE (CASE ((x'') BETWEEN (NULL) AND (NULL))  WHEN (- (NULL)) THEN (x'281d' IN ()) END); -- 0ms;
SELECT ALL LEAD((((((t0.c56)) NOT BETWEEN ((t0.c97)) AND ((t0.c93)))) BETWEEN (CASE t0.c93  WHEN t0.c56 THEN t0.c44 END) AND ((('-1634204802') NOTNULL))), 0Xffffffffb2b85e1f, ((t0.c44)IS(t0.c56)) COLLATE RTRIM) OVER () FROM t0; -- 0ms;
SELECT DISTINCT LEAD(((((((((((t1.c0)IS(t1.c51)))OR(((t0.c97)!=(t1.c0)))))OR((((t0.c97, t0.c97, t0.c44)) BETWEEN ((t0.c44, t1.c51, t0.c97)) AND ((t0.c93, t0.c93, t0.c93))))))OR(CASE WHEN t0.c44 THEN t1.c51 WHEN t0.c93 THEN t0.c56 WHEN t0.c56 THEN t0.c56 ELSE t0.c93 END)))OR(((t0.c93) IS FALSE))), ((((t1.c51, t0.c97, t0.c56)) NOT BETWEEN ((t0.c97, x'', t0.c56)) AND ((t0.c97, t0.c56, t0.c56))) IN ()), (((((t0.c56)<=(t0.c97)), ((t0.c56) IS TRUE), ((t1.c51) BETWEEN (t1.c0) AND (t0.c93))))>(((((t1.c0, t0.c93, t0.c97))>((t1.c0, t0.c97, t1.c51))), ((((t0.c93)AND(t1.c0)))AND('T')), CAST(t0.c93 AS BLOB))))) OVER (), MAX((- (t0.c93))), (((t1.c0)) NOT BETWEEN ((((t0.c97)>(t0.c97)))) AND ((((t0.c44) IS TRUE)))) FROM t0, t1 WHERE ((((NULL, -1.764760873E9, NULL)) NOT BETWEEN (((('-732968457') BETWEEN (x'') AND ('1687263932')), ((NULL)&('2137865493')), x'' COLLATE RTRIM)) AND ((((((x'')OR(0.9857082927471169)))AND(0.7769572110805856)), (NOT (0x3539b2bd)), (NOT (NULL)))))); -- 0ms;
SELECT AVG((~ (t0.c97))) OVER () FROM t0; -- 0ms;
SELECT ALL TOTAL(ABS('_.dsCC')) FROM t1 WHERE ((((((((NULL, 0x4f1561e7, x'')) NOT BETWEEN ((NULL, '', 0x78b570f9)) AND (('', '闲]', '1681908898'))))OR(CASE WHEN 1.144360507E9 THEN 1.712498581E9 WHEN 0.4893738898091424 THEN 'u7诹?61ST' WHEN 0X2c43e8d4 THEN '-425706091' END)))OR((('-1569743652') NOT BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((t0.c44 COLLATE RTRIM)AND((- (t0.c97)))))AND(((((t0.c56)OR(t0.c56)))AND(t0.c97)))), (('') NOTNULL), (NOT (LENGTH(t0.c97))) FROM t0, t1; -- 1ms;
SELECT CASE (~ (t1.c0))  WHEN (((t1.c51, t0.c56, t1.c51))>=((t0.c44, 0.758294238640513, t1.c51))) THEN 0.07101963457734983 COLLATE NOCASE ELSE ((t1.c51) NOTNULL) END FROM t1;SELECT DISTINCT CAST(8.76497207E8 AS REAL) FROM t1, t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), t0.c93, MIN(((t0.c44) NOT BETWEEN (t0.c44) AND (t0.c93))) FROM t1, t0; -- 0ms;
SELECT DISTINCT (+ ((NOT (t1.c51)))) FROM t0 GROUP BY (~ ((t0.c93 IN ()))), TRIM(DISTINCT 0.7646858814993173, (((t0.c93))<>((t0.c97)))), (((277250426))>((CAST(t1.c51 AS INTEGER))));SELECT ALL ((t0.c44) BETWEEN (t0.c93) AND (t0.c44)) COLLATE RTRIM FROM t0 GROUP BY t1.c51 HAVING ((((t0.c97)&(t0.c56))) BETWEEN (CAST(t0.c44 AS TEXT)) AND (((t0.c44)=(t0.c44))));SELECT ALL ((CASE t0.c44  WHEN t1.c51 THEN t0.c93 END)*(((((((((t0.c56)OR(t0.c97)))OR(t0.c56)))AND(t0.c44)))AND(t0.c97)))) FROM t0;SELECT DISTINCT (((CAST(t0.c97 AS BLOB)))<>(((((t0.c56))>((t0.c56)))))) FROM t0 GROUP BY json_extract(((t0.c97) NOT NULL), (('740393852')%(NULL))), (NOT (((t1.c51) IS TRUE))), CAST(CAST(t0.c93 AS INTEGER) AS NUMERIC), '-1764760873', CASE WHEN t1.c51 COLLATE BINARY THEN (- (x'')) END ORDER BY (+ ((t0.c56 IN ()))) ASC  NULLS FIRST;SELECT (((-3.99927187E8)) NOT BETWEEN (((~ (t1.c0)))) AND ((((t1.c0)>>(t0.c97))))), t1.c51 COLLATE BINARY, (((CASE WHEN t0.c56 THEN t1.c51 END))<((t1.c51 COLLATE RTRIM))) FROM t0 ORDER BY t0.c93  NULLS LAST;SELECT ALL ((CAST(t1.c51 AS BLOB)) ISNULL) FROM t1; -- 0ms;
SELECT DISTINCT CAST(t0.c93 AS NUMERIC) COLLATE BINARY, AVG(NULLIF(t1.c0, 0.45554064647337156)) OVER (), COUNT(CASE '-187439595'  WHEN t1.c0 THEN t0.c93 ELSE t1.c51 END) OVER () FROM t1;SELECT ALL ((((t1.c0)>=(t1.c51)))*(t1.c0)), (((t1.c0)) NOT BETWEEN ((((t0.c44)*(t1.c51)))) AND (((((t1.c0)) BETWEEN ((t0.c97)) AND ((t0.c93)))))), (((t0.c97)) NOT BETWEEN (((t0.c93 IN (t1.c51)))) AND (((~ (t1.c0))))) FROM t0;SELECT DISTINCT ((CAST(t1.c51 AS INTEGER)) BETWEEN (((t1.c0)GLOB(t0.c44))) AND (((t0.c56)<>(t0.c44)))) FROM t1, t0; -- 0ms;
SELECT DISTINCT (('-341544368') BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t0.c93 ELSE t0.c44 END) AND (CAST(t1.c51 AS INTEGER))) FROM t1 WHERE (x'48dc');SELECT ALL TYPEOF(0.028027848638013775), t0.c44, TOTAL(0.14959404689874745) OVER () FROM t0, t1; -- 0ms;
SELECT DISTINCT (- (load_extension(t0.c56))), LAG((CAST(t0.c97 AS TEXT) IN ()), (((t0.c44)) BETWEEN ((CAST(NULL AS BLOB))) AND ((LOWER(t1.c0)))), CASE ((t0.c97)-(t0.c44))  WHEN (+ (t0.c97)) THEN t0.c93 WHEN ((t1.c51)||(t1.c51)) THEN CASE WHEN t0.c56 THEN t0.c93 ELSE t0.c97 END WHEN t0.c44 THEN t1.c0 COLLATE RTRIM END) OVER (), (((t0.c97)+(t1.c0)) IN (((t0.c97)IS(t0.c93)))) FROM t1, t0; -- 0ms;
SELECT ALL TOTAL(SUM(((t1.c51) NOT NULL))), (((NOT (t1.c0))) NOTNULL), SUM((- (0xffffffffc0a7236a))) FROM t1, t0 WHERE (((((((NULL)*(0.9506836163663218)))OR(NULL COLLATE BINARY)))AND(CAST('%C' AS REAL))));SELECT DISTINCT CAST((((t0.c56, t1.c51, t0.c44))==((t0.c44, t1.c51, t0.c56))) AS NUMERIC) FROM t0;SELECT ((((((t1.c0)OR(t0.c93)))OR(t0.c44)))-((('ND') NOT BETWEEN (t1.c51) AND (t0.c93)))) FROM t1, t0 ORDER BY ((((((((t0.c97 COLLATE NOCASE)OR(((t0.c93) BETWEEN (t0.c56) AND (t0.c93)))))AND((~ (0.6090887053955055)))))OR(((t1.c0) NOT NULL))))OR(CHANGES())) DESC, t0.c93  NULLS FIRST, ((((((((CAST(t1.c51 AS NUMERIC))OR(((t0.c97) ISNULL))))OR(((((t0.c97)AND(t0.c44)))OR(t1.c51)))))AND(((((t1.c0)OR(t0.c44)))OR(t0.c56)))))AND((((t1.c51))<>((t1.c51))))) DESC  NULLS LAST LIMIT 43527867 OFFSET -1646385849; -- 0ms;
SELECT ALL ((((DATE(t0.c56, t0.c97, t1.c0, t0.c97, t0.c93))OR(((t1.c0)-(t0.c93)))))OR(((t1.c0) NOTNULL))) FROM t1, t0; -- 0ms;
SELECT ALL CASE WHEN UNLIKELY(t0.c93) THEN ((t1.c0) NOT NULL) ELSE (((t1.c0))<((t0.c56))) END FROM t0, t1; -- 0ms;
SELECT ALL COUNT(*) FROM t0; -- 0ms;
SELECT ALL ((MIN(t1.c51)) NOT BETWEEN (CAST(t0.c97 AS INTEGER)) AND ((((t1.c51))>=((t1.c0))))) FROM t1;SELECT ALL LAG(((t0.c56)GLOB(0X6b1f9c4c)) COLLATE NOCASE, (((t0.c97))<=((t0.c93))) COLLATE NOCASE, CAST((t0.c97 IN ()) AS INTEGER)) OVER () FROM t0 GROUP BY ((CAST(t0.c56 AS NUMERIC))||(((t0.c56)%(t0.c56)))) HAVING t0.c44; -- 0ms;
SELECT ((t0.c44) ISNULL) FROM t0, t1 WHERE (HEX(x'')); -- 0ms;
SELECT ((MAX(t1.c51)) NOTNULL) FROM t0;