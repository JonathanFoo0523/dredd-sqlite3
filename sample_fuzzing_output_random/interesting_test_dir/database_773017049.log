-- Time: 2024/06/06 01:33:05
-- Database: database49
-- Database version: 3.40.0
-- seed value: 773017049
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 4ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT CAST(MAX(vt0.c0) AS NUMERIC) FROM vt0 WHERE (''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
REINDEX RTRIM; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='', c0=0.9401743654651192; -- 0ms;
ROLLBACK TRANSACTION; -- 5ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 17ms;
REINDEX; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.36336603591885974); -- 0ms;
PRAGMA main.mmap_size = 5108605459177280473; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(-1.7976931348623157E308); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.8950761268541445), (362400112), (x''); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1274012359);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'e302', c0=NULL WHERE ((~ (vt0.c0)) IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()))); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('makB'), (NULL), (''); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, order=DESC); -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (0.42018613487578305), ('0.9401743654651192'); -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0)=(x'ca20', '362400112') WHERE 0x870386f; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1648778393);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 443842486);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1444248326); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '52835'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1441688951); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1902837719); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1068608876); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1674751853);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1648778393,14');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=362400112 unordered noskipscan'); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(1000606541) WHERE ((((rt0.c2)<=(rt0.c1)))>>(((rt0.c0)=(rt0.c1)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'', c0='0.0' WHERE vt1.c0; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL  CHECK ( CASE WHEN ((1674751853) BETWEEN (c0) AND (c0)) THEN LIKELY(c0) END)); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-246215437,10');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA locking_mode; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 141572207);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2035980510); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.7382124491663644 WHERE HEX(CASE rt0.c0  WHEN rt0.c2 THEN NULL END); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=7'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c1, c1)=('', '()', 1.674751853E9); -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX  t0; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE vt1 SET (c0, c0, c0)=('0.9401743654651192', NULL, NULL) WHERE (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (x'') AND (CAST(vt1.c0 AS REAL))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 582773261);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1611448616'); -- 0ms;
REINDEX; -- 0ms;
CREATE INDEX IF NOT EXISTS i62 ON t0(LIKELIHOOD(DISTINCT (('(l') ISNULL), 0.456265739520328)) WHERE TYPEOF(DISTINCT (((c0))!=((c0)))); -- 2ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1501094953); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1873571891); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=-246215437 WHERE (NOT (vt1.c0)); -- 0ms;
UPDATE t0 SET c0=x'21d4'; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0Xffffffffcaa4d064; -- 2ms;
UPDATE OR FAIL vt1 SET c0=x''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1437551377 unordered'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c0)=('0.0', NULL) WHERE CASE (('0.36336603591885974')LIKE(rt0.c0))  WHEN (NOT (rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX i62; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1478723449);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c2)=(NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
PRAGMA optimize; -- 0ms;
UPDATE t0 SET (c0, c0)=(0.3390768886504433, x'72f6'); -- 1ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (NULL); -- 0ms;
UPDATE OR ABORT t0 SET c0=0.8524756935474114; -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 18173507); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 1ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1551482143);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0x22bc6a0d); -- 0ms;
ALTER TABLE t0 ADD COLUMN c35 INT; -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(-1478723449) WHERE (- (((rt0.c2) BETWEEN (NULL) AND (rt0.c0)))); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 INSTEAD OF INSERT ON v0 BEGIN DELETE FROM vt0;END; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c35)=('443842486'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.12162468392899739), (NULL), (0.0861719856183325); -- 0ms;
PRAGMA temp.cache_spill = -2659284990784114936; -- 0ms;
UPDATE rt0 SET c0='-126117334' WHERE ((NULL) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN 0.8670867432170624 END) AND ((NOT (rt0.c2)))); -- 0ms;
UPDATE vt1 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.4469261981406326, x''), ('1674751853', x''), ((((x'dc8ea2ef') NOT BETWEEN ('樍H') AND (NULL)) IN ()), ''); -- 10ms;
ANALYZE rt0; -- 0ms;
CREATE INDEX IF NOT EXISTS i37 ON t0((((((((c35)) BETWEEN ((c35)) AND ((c35))))OR(0X5e5c4c7d)))OR((((c0, c35, c35)) NOT BETWEEN ((c35, c0, c0)) AND ((c0, c35, c0))))) COLLATE NOCASE,NULL COLLATE RTRIM); -- 1ms;
INSERT OR ABORT INTO rt0(c1) VALUES ('俴jo䋡FY'); -- 0ms;
REINDEX; -- 24ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c1=x''; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1590878508);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 582773261);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA threads; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL v0.c0 FROM rt0, t0, vt1, v0 NOT INDEXED, vt0 WHERE (CASE WHEN ((('-1437551377')) NOT BETWEEN ((NULL)) AND (('141572207'))) THEN ((((((((NULL)OR(x'')))AND('')))OR('494675676')))AND(x'')) ELSE ((0.17865908565178967)/(x'')) END); -- 0ms;
SELECT ALL 0.41941646025794366 FROM vt0, rt0, v0, vt1 WHERE ((('1648778393')<>(x'')) COLLATE RTRIM) LIMIT 1982772610; -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c1 AS BLOB) COLLATE NOCASE) FROM t0 GROUP BY NULL, CAST((~ (t0.c35)) AS REAL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM HAVING COUNT(GROUP_CONCAT(CAST(t0.c0 AS BLOB)));SELECT DISTINCT CASE CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN CAST('1000606541' AS NUMERIC) THEN AVG(rt0.c2) END FROM t0 WHERE (((((x'')<=('1147018982')))%(UNLIKELY(NULL))));SELECT DISTINCT (((+ (rt0.c1)))=(rt0.c0)) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((CAST(t0.c35 AS REAL))) AND ((NULL))), ((((((((0.4514394469835804)AND(((((vt1.c0)AND(vt1.c0)))OR(t0.c35)))))OR(INSTR(v0.c0, v0.c0))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND(((t0.c35)LIKE(t0.c0)))), ((vt0.c0) IS TRUE) COLLATE BINARY FROM t0, rt0 WHERE ((- (LTRIM(NULL, 0.5494647693329275))));SELECT ALL (rt0.c1 COLLATE RTRIM IN ()) FROM t0, rt0, v0, vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(((t0.c0)+(rt0.c2)) AS TEXT), (((t0.c0 IN (0.5148103792106304, rt0.c0))) ISNULL), '1385617520', CASE (~ (t0.c35))  WHEN ((vt0.c0)*(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)) WHEN t0.c0 THEN (('')*(vt0.c0)) WHEN CAST(t0.c35 AS TEXT) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END, CAST((~ ('1583107197')) AS INTEGER) FROM vt1;SELECT ((vt1.c0) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c0)) AND (CASE WHEN rt0.c2 THEN v0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 ELSE rt0.c0 END)) FROM rt0, vt1 WHERE (((((NULL) ISNULL))GLOB('' COLLATE RTRIM)));SELECT DISTINCT (- ('476019517')) COLLATE RTRIM, ((((vt1.c0) ISNULL)) NOT BETWEEN ((((t0.c35, t0.c35, vt1.c0)) NOT BETWEEN ((v0.c0, t0.c35, rt0.c2)) AND ((vt1.c0, NULL, vt1.c0)))) AND (((((v0.c0)OR(v0.c0)))AND(rt0.c0)))), COALESCE(((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))OR(t0.c35)))AND(rt0.c1)), MAX(rt0.c1), (+ (vt0.c0)), ((vt1.c0) NOT BETWEEN (t0.c35) AND (rt0.c0))) FROM rt0, vt1, vt0;SELECT DISTINCT (~ (((t0.c0)IS NOT(rt0.c1)))) FROM t0, vt1, v0 GROUP BY CAST(UNLIKELY(DISTINCT 1.000606541E9) AS BLOB);SELECT DISTINCT ((((((t0.c0)AND(t0.c35)))OR(rt0.c2))) ISNULL) FROM vt1 WHERE ((CASE WHEN NULL THEN NULL ELSE NULL END IN ()));SELECT ALL ((((((rt0.c0)IS NOT(rt0.c0)))OR((((rt0.c2))<((rt0.c2))))))OR(((rt0.c2)AND(rt0.c2)))) FROM vt1, vt0, t0, v0, rt0; -- 0ms;
SELECT ALL CAST(CAST(v0.c0 AS BLOB) AS NUMERIC) FROM rt0 ORDER BY CAST(((((vt1.c0)OR(rt0.c0)))AND(rt0.c1)) AS INTEGER), (((((+ (vt0.c0)))OR('0.8524756935474114')))AND(CAST('105039434' AS NUMERIC))) DESC;SELECT DISTINCT NTH_VALUE(CAST(((rt0.c2)LIKE(v0.c0)) AS INTEGER), ((((t0.c0)OR(v0.c0)))OR(vt1.c0)) COLLATE BINARY) OVER () FROM rt0, t0, vt1, v0 WHERE (((('' IN (NULL)))%(1.05039434E8))); -- 1ms;
SELECT (+ (GLOB(t0.c0, v0.c0))), UNICODE((t0.c0 IN ())), (- ((~ (rt0.c1)))) FROM t0, rt0, vt1 WHERE (((((((((NULL)AND(-8.95168412E8)))OR(0.7939399243332423)))OR('')))AND(NULL)) COLLATE NOCASE) LIMIT -1274012359 OFFSET -118714060;SELECT DISTINCT CAST(rt0.c2 AS REAL) FROM vt0, vt1, rt0, v0, t0 WHERE ((NULL IN (TYPEOF(0.09623102788901716)))) ORDER BY (+ ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c35))))); -- 0ms;
SELECT DISTINCT AVG(((rt0.c0)<<(rt0.c0))) OVER () FROM vt0, rt0, v0, vt1 NOT INDEXED, t0; -- 0ms;
SELECT ALL ((((((((((((vt0.c0 COLLATE BINARY)AND(json_array_length(t0.c0, rt0.c0))))OR(v0.c0 COLLATE RTRIM)))OR(CASE rt0.c0  WHEN rt0.c1 THEN t0.c35 ELSE rt0.c0 END)))OR(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c0)<(t0.c0)))))AND(NULL)) FROM v0, vt1, t0 WHERE (TIME(((0.46204568688109415)AND(746117275)), '1674751853' COLLATE BINARY, ((0Xfffffffff87b9a2a) IS FALSE)));SELECT rt0.c2 FROM t0, rt0, vt0, vt1, v0; -- 1ms;
SELECT (((rt0.c2)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((vt1.c0 COLLATE RTRIM))) FROM v0;SELECT CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) FROM v0;SELECT DISTINCT CUME_DIST() OVER (), CAST(v0.c0 AS INTEGER), ((((v0.c0)/(v0.c0)))AND(((rt0.c2) IS TRUE))) FROM t0, vt0, rt0, vt1, v0; -- 0ms;
SELECT DISTINCT 0.20626439515106565 FROM vt0, t0, vt1 WHERE (((((NULL)<=(NULL)))<>(((1.05039434E8) IS FALSE)))); -- 0ms;
SELECT DISTINCT (NOT (((rt0.c1) ISNULL))) FROM t0 WHERE (highlight((((((((((((('-1551482143')OR(x'')))AND('')))OR('1750167400')))AND('AH_/')))OR('-1930845027')))OR(x'55da')), ((0X6638c97c) IS TRUE), TOTAL_CHANGES(), (x'fd3e' IN ())));SELECT CASE '541948538'  WHEN CAST(0.26158141166892823 AS INTEGER) THEN (((t0.c35))=((rt0.c0))) WHEN (rt0.c1 IN ()) THEN ((rt0.c1)GLOB(t0.c0)) WHEN json_remove(t0.c35, vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN NULL END END FROM v0, vt1, rt0 WHERE (((((x'') NOTNULL))AND(CASE WHEN x'' THEN x'' WHEN 0.13677105659816446 THEN '䧢2t>^1' WHEN 0.12162468392899739 THEN '792305008' END)));SELECT ((((((((CASE WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c0 END)OR(((((t0.c0)AND(t0.c35)))OR(t0.c35)))))OR(((((t0.c35)AND(v0.c0)))OR(v0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(rt0.c1 COLLATE BINARY)), MAX(((t0.c0)>=(t0.c0))), ((((t0.c0)&(rt0.c1)))<=(CAST(vt0.c0 AS BLOB))) FROM rt0, v0, t0 WHERE (0.9755515024961007 COLLATE RTRIM);SELECT COUNT((((v0.c0, vt1.c0, vt0.c0))==((vt0.c0, rt0.c0, v0.c0)))) FROM rt0;SELECT ALL (rt0.c1 COLLATE NOCASE IN ()) FROM vt0, t0 INDEXED BY i62, v0, rt0 LIMIT 1625246985 OFFSET 105039434;SELECT CUME_DIST() OVER (), HEX(DISTINCT CASE WHEN rt0.c0 THEN vt1.c0 WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 END), (+ (((x'') BETWEEN ('') AND (0.15714856293074475)))) FROM vt1, t0, v0;SELECT DISTINCT ((((0X3ba40b4d)!=(rt0.c2))) IS TRUE) FROM t0, rt0, v0; -- 0ms;
SELECT DISTINCT LAST_VALUE(UPPER(TRIM(rt0.c0, rt0.c1))) OVER ( ORDER BY ((((t0.c35 IN ())))=((CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c35 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 END)))  NULLS LAST GROUPS  UNBOUNDED PRECEDING) FROM rt0;SELECT ALL CASE ((rt0.c2) IS FALSE)  WHEN CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0X6befa40f WHEN x'' THEN t0.c35 END THEN (((t0.c35))<((NULL))) END FROM vt1, vt0, v0, rt0, t0; -- 0ms;
SELECT ('1648778393' IN ((((0.016048249455552943)) NOT BETWEEN ((t0.c35)) AND ((rt0.c2))), GROUP_CONCAT(vt1.c0))), CASE (rt0.c2 IN ())  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN t0.c35 THEN vt1.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN x'376b' THEN t0.c35 END THEN CAST(t0.c0 AS TEXT) ELSE (NOT ('-1437551377')) END, (((UPPER(DISTINCT t0.c35), ((-0.0)>=(rt0.c1)), ((rt0.c1) IS FALSE)))<>((vt1.c0, SUM(rt0.c1), t0.c0))) FROM vt0, vt1 INDEXED BY i37, v0, t0 WHERE (((((CASE WHEN NULL THEN '' WHEN 0.22123683317644027 THEN 'Y229 2363765573732240615 rY㲀' WHEN '1626791776' THEN NULL END)AND((0X5ed2e12c IN ()))))AND(CAST(NULL AS BLOB))));SELECT DISTINCT ((rt0.c0 COLLATE BINARY) NOT BETWEEN (CASE vt1.c0  WHEN t0.c35 THEN rt0.c2 END) AND (t0.c35)) FROM vt0, vt1, v0, rt0;SELECT ALL CAST(NULL AS NUMERIC) FROM vt1, vt0, t0; -- 0ms;
SELECT ALL ((LTRIM(NULL)) BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (LIKELIHOOD(rt0.c2, 0.4495013052136041))), CAST(((vt1.c0) ISNULL) AS BLOB), '_G' FROM rt0, t0, vt0 WHERE (((((x'3f79981b') BETWEEN ('362400112') AND (1514634225))) IS TRUE));SELECT DISTINCT COUNT(((vt0.c0)%(vt1.c0))) OVER () FROM t0, vt1, rt0, vt0 WHERE ((NOT (((0.5448823094939181)/(NULL))))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)/(t0.c0)))OR(NULL COLLATE NOCASE)))AND('')))OR(((vt1.c0) NOTNULL))))AND(rt0.c2)), CAST(((t0.c35)IS(vt1.c0)) AS NUMERIC), ((0x642c64a)+(((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1, vt0, v0, t0, rt0 WHERE (((((1.590878508E9)OR(x'')))<<(CAST(x'' AS INTEGER)))); -- 0ms;
SELECT ((((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))=(((rt0.c1) IS TRUE))) FROM rt0, vt1, vt0, t0 WHERE (UNLIKELY(0.14564336756766738));SELECT DISTINCT ((((t0.c35) IS FALSE)) BETWEEN (MAX(rt0.c2)) AND (CAST(t0.c35 AS TEXT))) FROM vt0, t0, v0, rt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0) IS FALSE))) FROM t0, vt1;SELECT ALL ((('-', x'', 0.1556680333654742)) NOT BETWEEN (((('-783922840') IS TRUE), ((t0.c0) NOTNULL), (('')|(t0.c0)))) AND (((rt0.c2 IN (vt1.c0, vt1.c0)), ((t0.c35)!=(t0.c35)), (~ (vt0.c0))))) FROM rt0, t0;SELECT ALL ((rt0.c0 IN ()) IN ()), (((((- (rt0.c0)))AND(CAST(vt0.c0 AS TEXT))))AND(((v0.c0)LIKE(rt0.c2)))), ((((((rt0.c1)OR(rt0.c2)))AND(t0.c0))) NOT BETWEEN (CASE 1.7976931348623157E308  WHEN vt0.c0 THEN t0.c0 ELSE rt0.c2 END) AND (CAST(rt0.c0 AS REAL))) FROM v0, t0, vt0, vt1, rt0 WHERE ((((+ ('y229 2363765573732240615 ry㲀'))) ISNULL)); -- 0ms;
SELECT LEAD(CAST((((x'3c40', t0.c0, x''))=((v0.c0, vt1.c0, vt1.c0))) AS BLOB), ((((((t0.c35)AND(t0.c35)))AND(t0.c0))) IS TRUE), CASE WHEN ((rt0.c1) NOT NULL) THEN (('746117275')<(rt0.c1)) WHEN (~ (rt0.c1)) THEN t0.c35 WHEN rt0.c0 COLLATE NOCASE THEN CAST(rt0.c1 AS NUMERIC) END) OVER () FROM rt0, v0, t0, vt1 WHERE ((((((-7.8392284E8)-('[料1㡯BH%'))))<>(((('-126117334') IS FALSE))))); -- 0ms;
SELECT ALL ((t0.c35 COLLATE BINARY) BETWEEN ((~ (x''))) AND (CASE WHEN t0.c0 THEN vt1.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM rt0, t0, v0 WHERE (LIKELY(DISTINCT (x'' IN ('900734369'))));SELECT DISTINCT CAST(((((v0.c0)OR(rt0.c1)))AND(NULL)) AS NUMERIC) FROM rt0 INNER JOIN vt0 ON (((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), ((((rt0.c0)OR(t0.c35)))AND(vt0.c0)), rt0.c1 COLLATE RTRIM))<((vt1.c0, (((t0.c35))<>((rt0.c1))), vt1.c0 COLLATE BINARY))) RIGHT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN '900734369' THEN t0.c0 WHEN rt0.c0 THEN 'Y⫰a-AHU*''' ELSE vt1.c0 END)GLOB(CAST(rt0.c1 AS BLOB)));SELECT ALL LAST_VALUE(((((((v0.c0)OR(t0.c0)))AND(v0.c0))) NOT NULL)) OVER () FROM t0, v0 WHERE (PRINTF((1577630213 IN ()))); -- 0ms;
SELECT (((NOT (rt0.c2)))>>(rt0.c2 COLLATE BINARY)) FROM vt0, t0, rt0, v0 WHERE (CAST(((NULL) NOT BETWEEN (0.5387475389137704) AND ('')) AS NUMERIC)); -- 0ms;
SELECT ALL ((0Xffffffffd4a26599 COLLATE BINARY)AND(CAST(t0.c0 AS TEXT))) FROM t0, vt0, rt0, vt1, v0; -- 1ms;
SELECT DISTINCT ((((CASE rt0.c0  WHEN rt0.c2 THEN t0.c35 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c35 THEN vt1.c0 END)AND(t0.c0)))AND(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END)) FROM t0, v0, vt1, rt0, vt0 WHERE (('[JT' IN ())); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0, vt1 WHERE (json_type((((x'5d7c', x'', NULL, ' *z㽋 T', '', x'', NULL)) NOT BETWEEN (('{j', '-1611448616', NULL, x'', '-1478723449', 0xffffffffbd3a5ff4, x'')) AND ((x'', x'7938d6cd', '0.12162468392899739', 0.19183555766090565, x'', 0X142ef23d, NULL))))); -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0))) IS FALSE) FROM t0, v0, rt0 WHERE (((((((((((((((0X22bc6a0d)IS NOT(x'')))OR((('-1489763245') NOT BETWEEN ('-424153386') AND (x'')))))OR(((((((((0.5387475389137704)AND(0.9936543596326611)))AND(0.28933743929855815)))AND(x'f0df')))AND(NULL)))))OR(((7.92305008E8) NOT BETWEEN (NULL) AND (x'a62a7309')))))AND(TRIM(NULL))))AND((('0.8670867432170624') IS TRUE))))OR(NULL COLLATE RTRIM)));SELECT ALL CAST(((((t0.c35)OR(vt1.c0)))OR(t0.c35)) AS BLOB) FROM rt0, vt1, vt0 WHERE ((((('443842486') NOT BETWEEN ('') AND ('-1489763245'))) IS FALSE));SELECT DISTINCT ((+ (rt0.c1)) IN ()) FROM vt1, rt0, v0 EXCEPT SELECT DISTINCT ((rt0.c1) NOT BETWEEN (-4.24153386E8) AND (((rt0.c2)GLOB(rt0.c0)))) FROM vt0, rt0 WHERE ((((((((((0.41379538074037037)OR(x'c9f9')))AND('1648778393')))OR('-1235858335')))OR(0.14107916954082766)) IN ())); -- 0ms;
SELECT ALL CAST((rt0.c1 IN ('-884277627')) AS BLOB) FROM t0, v0, vt1 WHERE (((0.8603298594845026) BETWEEN ('-118714060') AND (x'6837')) COLLATE NOCASE) LIMIT 494675676;SELECT 0xffffffff9b2d74d9 FROM v0 WHERE ('') ORDER BY (((v0.c0 IN ())) IS TRUE)  NULLS FIRST, (json_valid(vt1.c0) IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(DATETIME(rt0.c0, '1810867215', t0.c35) AS BLOB) FROM t0, v0, vt1, rt0 WHERE (CAST(((('l', x'', NULL))<>((0.7251528204156397, '', x''))) AS BLOB)); -- 0ms;
SELECT DISTINCT TOTAL((~ (t0.c0))), MAX(((t0.c35) BETWEEN (t0.c0) AND (v0.c0))), (NOT (rt0.c2)) COLLATE RTRIM COLLATE RTRIM FROM v0, t0 WHERE (CAST(0.22123683317644027 AS TEXT));SELECT ALL (- (vt0.c0 COLLATE BINARY)) FROM v0, t0, rt0, vt0, vt1 WHERE (TYPEOF(DISTINCT NULL) COLLATE BINARY) ORDER BY ((((vt0.c0)!=(rt0.c2)))/(t0.c0 COLLATE RTRIM)) ASC; -- 0ms;
SELECT ALL ((x'c288') IS TRUE) FROM rt0, v0, t0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((((t0.c35) IS FALSE)) BETWEEN (((t0.c0) NOT NULL)) AND (x'')), ((vt1.c0) IS FALSE) COLLATE RTRIM, (- (COUNT(*))) FROM t0, vt1, rt0, vt0 WHERE ((- ((('K￿?<⫏]?좉}') IS TRUE)))); -- 0ms;
SELECT ((rt0.c0) IS FALSE) FROM v0, t0 ORDER BY ((((v0.c0)AND(vt0.c0)))/(1.648778393E9)) ASC, '\nBM섑s4?' DESC;SELECT json_array_length(SUM(vt1.c0)) FROM vt1, vt0, v0; -- 1ms;
SELECT ((CASE WHEN t0.c0 THEN rt0.c1 END)>>(((vt1.c0) NOTNULL))) FROM rt0, t0, vt0, vt1, v0 WHERE (CAST(CASE x'7594'  WHEN '-1809626545' THEN 1308437204 END AS REAL)); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((((rt0.c0)|(NULL)))) AND ((rt0.c1))) FROM vt0, t0 ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((json_quote(t0.c0))))  NULLS FIRST;SELECT ALL t0.c35 FROM rt0, v0, vt0, t0, vt1 WHERE ((((x'14ba' IN (x'')))||((0.06300491751121817 IN (NULL, 'K￿?<⫏]?좉}'))))) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT NULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( RANGE  CURRENT ROW) FROM v0 WHERE ((+ (('()' IN ())))); -- 0ms;
SELECT DISTINCT vt1.c0, ((((0.10404149922198691)OR(((((((((((((t0.c0)AND(t0.c0)))AND(v0.c0)))OR(NULL)))OR(vt0.c0)))AND(t0.c35)))OR('-2056009468')))))OR(((((rt0.c2)AND(t0.c0)))OR(rt0.c1)))), TOTAL(CASE t0.c35  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END) FROM vt1, v0 GROUP BY (NOT (((((vt1.c0)OR(rt0.c0)))AND(v0.c0)))) HAVING x'80d1' ORDER BY '164363265'  NULLS LAST, (((~ (rt0.c0)))GLOB(v0.c0 COLLATE RTRIM))  NULLS LAST LIMIT 198331311;SELECT DISTINCT t0.c35, (NOT ('叞9')), ((((t0.c0 IN ())))<=((((vt0.c0)<(rt0.c2))))) FROM v0, rt0, vt1 LIMIT -1478723449 OFFSET -783922840;SELECT DISTINCT CAST(rt0.c2 AS INTEGER) FROM t0;SELECT ((((CAST(t0.c0 AS INTEGER))OR(0.5268700291504329)))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (t0.c35)))) FROM rt0, t0, vt0, vt1, v0; -- 1ms;
SELECT ALL CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN '{}U*' WHEN 0.47099969294071853 THEN (((t0.c0, v0.c0, vt0.c0, t0.c0, rt0.c1))==((v0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c1))) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END THEN (((rt0.c2)) NOT BETWEEN ((t0.c35)) AND ((vt0.c0))) END FROM rt0, t0, vt0;SELECT ALL LOWER(CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END) FROM t0;SELECT DISTINCT AVG((NOT (vt0.c0))) FROM vt0, v0, vt1 WHERE (((CAST('	D' AS REAL)) BETWEEN (CAST(x'' AS TEXT)) AND (((((x'')AND(x'')))OR(x'15d0'))))); -- 0ms;
SELECT DISTINCT ((IFNULL(v0.c0, v0.c0)) BETWEEN (((rt0.c1)IS NOT(t0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c0 END)) FROM v0, vt0 WHERE ((((('' IN ())))!=(((0.6561773601736809 IN ())))));SELECT DISTINCT (- (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (CASE '-727554663'  WHEN (((('d.')OR(x'e935')))AND(0.28197231377356125)) THEN ((x'')-('{}U*')) ELSE ((NULL)IS NOT(0.41680215305723567)) END); -- 0ms;
SELECT DISTINCT (((t0.c35))<((((((t0.c0)AND(rt0.c1)))OR(t0.c35))))) FROM t0 WHERE (((((((((((x'')<(0.4681167682030345)))OR(NULL)))AND('307188578' COLLATE BINARY)))AND((0.15271992963704406 IN ()))))AND(((x'bc8399e6')>=(0x4b4dec98))))) GROUP BY CASE WHEN (- (rt0.c1)) THEN (+ (vt1.c0)) WHEN CASE vt1.c0  WHEN t0.c0 THEN rt0.c1 ELSE t0.c35 END THEN SQLITE_COMPILEOPTION_USED(x'c21f') WHEN (~ (t0.c35)) THEN (- (rt0.c2)) ELSE 7.46117275E8 END HAVING (((rt0.c1))>((CAST(rt0.c1 AS BLOB))));SELECT DISTINCT NULL FROM v0, rt0, vt1, vt0, t0 WHERE ((+ (CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0)OR(t0.c35))) OVER (), (v0.c0 IN ()) COLLATE BINARY, CASE WHEN MAX(rt0.c0) THEN rt0.c1 COLLATE RTRIM ELSE x'' END FROM vt1, rt0 WHERE (json(((0X1426bd35) BETWEEN ('0.15271992963704406') AND (x'a508'))));SELECT ALL MIN((- (t0.c35))) FROM rt0, vt1, t0, v0, vt0; -- 0ms;
SELECT ((CAST(v0.c0 AS REAL)) NOT NULL) FROM v0, t0, vt0, rt0 WHERE (((((NULL) BETWEEN (NULL) AND ('0.6561773601736809'))) BETWEEN (((((NULL)OR(NULL)))OR(NULL))) AND (CAST(0Xffffffff8ff5ef7f AS TEXT)))); -- 0ms;
SELECT DISTINCT '', ((((((((rt0.c1)OR(t0.c35)))OR(1.514634225E9)))AND(rt0.c1 COLLATE BINARY)))OR((NOT (rt0.c2)))), GROUP_CONCAT(CASE WHEN vt1.c0 THEN vt0.c0 ELSE x'' END) FILTER(WHERE (+ (((t0.c0) BETWEEN (vt1.c0) AND (t0.c35))))) OVER () FROM vt0, v0, vt1, rt0 INDEXED BY i62;SELECT ALL rt0.c2 FROM vt1 WHERE ((((NULL COLLATE NOCASE))==((0.1267570657215794 COLLATE RTRIM))));SELECT DISTINCT ((('t', vt1.c0, NULL, t0.c35, rt0.c2)) BETWEEN ((((((vt0.c0)AND(t0.c0)))OR(t0.c35)), ((rt0.c1)>(rt0.c0)), x'', CASE t0.c35  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END, ((((rt0.c0)AND(v0.c0)))AND(t0.c0)))) AND ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c35)), (+ (v0.c0)), CAST(rt0.c0 AS BLOB), ((vt0.c0) ISNULL), ((vt1.c0)>=(rt0.c0))))) FROM vt1, vt0 WHERE (CAST((('1929747363') NOT NULL) AS BLOB));SELECT DISTINCT ((((vt0.c0)AND(t0.c0)))OR(rt0.c0)) COLLATE NOCASE, CASE WHEN (t0.c35 IN ()) THEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END WHEN (('-320233228')LIKE(x'')) THEN (vt1.c0 IN ()) WHEN (x'5ca8' IN ()) THEN ((((rt0.c1)AND(vt0.c0)))AND(t0.c0)) END, rt0.c0 FROM vt1;SELECT ALL ((CAST(t0.c35 AS REAL))/(ABS(rt0.c2))) FROM t0, rt0 WHERE (((((('665205888')+(NULL))))<((CAST(')IX6>^B+큤' AS REAL))))); -- 0ms;
SELECT ((((((rt0.c2)AND(v0.c0)))AND(v0.c0)))=('-1694196048')) FROM t0, vt0, vt1, rt0, v0 INDEXED BY i62 GROUP BY MAX(CAST(vt1.c0 AS INTEGER), ABS(DISTINCT t0.c35), ((t0.c35) BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)));SELECT DISTINCT ((CAST(rt0.c1 AS INTEGER))||(((t0.c35) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), ((((t0.c35) NOT BETWEEN (rt0.c0) AND ('r䁖9漌,')))LIKE(COALESCE(t0.c35, rt0.c2, x'', t0.c35))), json_array(GLOB(t0.c0, vt1.c0), ((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)), NULL, CASE WHEN rt0.c0 THEN t0.c0 ELSE t0.c35 END) FROM v0, rt0 WHERE (0.7592407229866092 COLLATE BINARY);SELECT TOTAL(((rt0.c2)-(vt1.c0))) OVER () FROM t0 FULL OUTER JOIN v0 ON (((rt0.c0 IN ()))&(ABS(t0.c35)));SELECT ALL NULLIF(DISTINCT ((rt0.c1)IS NOT(rt0.c0)), t0.c35 COLLATE NOCASE) FROM v0, t0, vt1, rt0, vt0 WHERE (NULL); -- 0ms;
SELECT ALL LEAD((((vt0.c0)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((LOWER(t0.c0)))), ((((((v0.c0) NOT NULL))OR(CAST(rt0.c2 AS INTEGER))))OR(((v0.c0)=(t0.c0)))), (((((rt0.c2)) NOT BETWEEN (('{䯇T?-(q꺶')) AND ((rt0.c1)))) BETWEEN (rt0.c2) AND (rt0.c1 COLLATE RTRIM))) OVER (), ((((t0.c0)AND(rt0.c1)))AND(vt1.c0)) COLLATE BINARY, ((((v0.c0)OR(rt0.c0)))>(((t0.c0)*(0.23796091887970816)))) FROM v0, t0, rt0, vt1, vt0 WHERE (((SQLITE_VERSION()) ISNULL)); -- 0ms;
SELECT ALL (NULL IN ()) FROM rt0, vt0, t0; -- 0ms;
SELECT ALL TRIM(DISTINCT rt0.c1 COLLATE BINARY, ((vt0.c0) NOTNULL)) FROM vt0 LIMIT 2048179433;SELECT DISTINCT ((rt0.c0)&(v0.c0)) FROM rt0, v0, vt1; -- 1ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((((NULL COLLATE RTRIM)AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN t0.c35 WHEN rt0.c2 THEN vt0.c0 END)))OR(((vt0.c0) NOT NULL)))) OVER () FROM v0, rt0, vt0, t0;SELECT DISTINCT CASE WHEN (- (vt1.c0)) THEN LTRIM(vt0.c0) ELSE ((NULL)GLOB(x'')) END, vt1.c0, ((x'')GLOB(rt0.c2)) COLLATE NOCASE, (((t0.c35 IN ())) NOT BETWEEN (x'0aaa') AND (((t0.c35) NOT NULL))), ((((~ (t0.c0)), ((t0.c0) IS TRUE), (((rt0.c2, rt0.c0, v0.c0))!=((v0.c0, rt0.c1, t0.c0)))))>(((- ('-432729385')), (+ (vt1.c0)), ((vt1.c0)&(t0.c0))))) FROM t0, rt0, vt1;SELECT t0.c35, CASE WHEN ((vt1.c0) IS FALSE) THEN CAST(t0.c0 AS INTEGER) WHEN (NOT (0.019645598300340628)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'38f9'))) WHEN MAX(rt0.c1) THEN CAST(vt1.c0 AS REAL) ELSE 0.8481928018156226 END, CAST(0.18469975752580226 AS BLOB) FROM rt0, v0, t0, vt0;SELECT ALL NULL FROM vt1, rt0, v0, vt0, t0 WHERE (((((0.28933743929855815)/(-1478723449)))OR(((NULL) NOT BETWEEN ('M3k7>笽]c樍') AND (0.6421347649734279))))) GROUP BY NULL, ((((CAST(vt0.c0 AS BLOB))AND((v0.c0 IN (t0.c35, t0.c35)))))OR(1.000606541E9)), ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)))AND(vt0.c0)))AND(CAST(rt0.c0 AS NUMERIC))); -- 0ms;
SELECT DISTINCT ((((((((COUNT(rt0.c0))AND(((rt0.c2)OR(vt1.c0)))))AND((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))OR(GROUP_CONCAT(vt0.c0))))OR('<R')), ((x'd630') BETWEEN (t0.c0) AND (rt0.c2)) COLLATE NOCASE, (COUNT(v0.c0) IN ()), (NOT (vt1.c0 COLLATE NOCASE)), t0.c0 FROM rt0, t0, vt1 WHERE ((+ ('' COLLATE NOCASE)));SELECT GROUP_CONCAT(((v0.c0)OR(-1.467561847E9))), COUNT((((t0.c0))<=((rt0.c0)))) FILTER(WHERE 0.6538681240043526) OVER (), (((t0.c35, rt0.c1, rt0.c1)) BETWEEN ((((x'')IS NOT(rt0.c0)), ((v0.c0) BETWEEN ('-1478723449') AND (vt0.c0)), '1441623820')) AND ((((rt0.c1) IS TRUE), MAX(rt0.c2), (rt0.c1 IN ())))), ((((CASE t0.c35  WHEN t0.c35 THEN x'de8d' ELSE rt0.c0 END)OR((~ (t0.c35)))))OR(v0.c0)), SUM(x'64c5') FROM v0, t0, rt0 WHERE ((('}1|㲍p#|T릔' COLLATE NOCASE) IS FALSE)) ORDER BY (~ (((vt1.c0)IS NOT(t0.c35)))) ASC;SELECT DISTINCT ((((rt0.c0) BETWEEN (t0.c0) AND (v0.c0)))-(rt0.c0 COLLATE RTRIM)) FROM v0, t0;SELECT DISTINCT ((rt0.c1) NOT BETWEEN ((rt0.c1 IN ())) AND ((- (rt0.c2)))) FROM rt0, vt1, t0, v0 WHERE (CAST(((NULL)+(0x171cc944)) AS REAL)); -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (t0.c0) AND (v0.c0))) BETWEEN ((((rt0.c0, vt1.c0, NULL)) BETWEEN ((t0.c0, rt0.c0, t0.c35)) AND ((rt0.c1, v0.c0, vt1.c0)))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM v0, rt0, vt1, t0 ORDER BY (((((((((0.14107916954082766 IN ()))OR(CAST(t0.c0 AS INTEGER))))AND((~ (rt0.c1)))))OR((~ ('')))))AND(vt0.c0)) ASC;SELECT DISTINCT HEX(((((vt0.c0)AND(t0.c0)))OR(rt0.c2))), (((((rt0.c2) NOTNULL), ((t0.c0) IS FALSE), (+ ('}|'))))=((((vt1.c0)<<(rt0.c0)), vt0.c0 COLLATE NOCASE, COALESCE(v0.c0, v0.c0)))), rt0.c0 FROM vt0, vt1, v0;SELECT ((((t0.c35)<>(t0.c35))) BETWEEN (((vt1.c0) ISNULL)) AND (COUNT(vt0.c0))) FROM v0, t0 WHERE ((((((((((~ ('-1946918777')))OR(x'306042770358')))AND(((x'')<=('1452039559')))))AND(((NULL)>>(0.7343478557324283)))))OR(CASE WHEN x'0ee718e6' THEN '' WHEN 1.626791776E9 THEN 0.9731615029172201 WHEN NULL THEN x'' WHEN '1699594513' THEN -1188097140 WHEN 0.6421347649734279 THEN 0.42018613487578305 ELSE NULL END)));SELECT ALL (((((((rt0.c2)OR(x'')))OR(t0.c35)), ((((((((vt1.c0)OR(NULL)))AND(vt0.c0)))OR(rt0.c1)))AND(t0.c0)), ((((((((0x51feeecc)AND(x'')))AND(v0.c0)))AND(v0.c0)))AND(x''))))<>((((rt0.c0)||(x'')), (rt0.c0 IN ()), ((-246215437) NOTNULL)))), ((((NULL COLLATE NOCASE)AND(((t0.c35) NOTNULL))))AND(COUNT(*))), (-194078212 IN ()), TRIM(DISTINCT ((rt0.c1)=(v0.c0))), ((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 END) NOT BETWEEN (UNLIKELY(t0.c0)) AND (LOWER(rt0.c2))), (+ (((v0.c0)OR(rt0.c2)))), CASE WHEN ((rt0.c2)|(vt0.c0)) THEN t0.c35 COLLATE NOCASE ELSE ((t0.c0) IS FALSE) END FROM vt0, rt0, t0;SELECT DISTINCT HEX(t0.c0) COLLATE BINARY, PERCENT_RANK() OVER (), ((rt0.c1 COLLATE NOCASE) IS FALSE) FROM vt1, t0, rt0, v0 WHERE (CAST('-478703877' AS NUMERIC)); -- 0ms;
SELECT ALL ((CASE rt0.c1  WHEN t0.c0 THEN vt0.c0 WHEN 'bfI! Ho''Y' THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END) NOT BETWEEN (((((vt0.c0)AND(t0.c35)))OR(vt1.c0))) AND (((rt0.c2)IS(rt0.c1)))) FROM vt0, rt0;SELECT DISTINCT LAG(((CASE vt1.c0  WHEN NULL THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END) NOTNULL), (((((vt1.c0))>((v0.c0))))IS((v0.c0 IN (v0.c0)))), (- (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))))) OVER () FROM v0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN 0.6773547362081975 THEN ((rt0.c0)+(vt0.c0)) END FROM vt1, t0, v0 GROUP BY rt0.c1 HAVING ((((rt0.c0)<=(rt0.c2)))GLOB(((rt0.c0) BETWEEN (v0.c0) AND (x'bd93'))));SELECT DISTINCT ((((((((((rt0.c0)AND(t0.c35)))OR(NULL)))OR(rt0.c0)))AND(vt1.c0)))+(((v0.c0) NOTNULL))) FROM vt0, rt0, t0, vt1, v0 WHERE (x'') LIMIT -1437551377 OFFSET 966652945; -- 0ms;
SELECT DISTINCT t0.c35 FROM vt0, rt0, vt1, t0, v0 LIMIT -2136565533; -- 0ms;
SELECT DISTINCT HEX(DISTINCT vt1.c0 COLLATE NOCASE), ((CAST(vt1.c0 AS BLOB))!=(((v0.c0) BETWEEN (v0.c0) AND (NULL)))), ((0.7104094552718058) NOT NULL) FROM rt0 WHERE (((CAST(1.147018982E9 AS INTEGER)) BETWEEN ((NULL IN ())) AND (((-1105003644) NOT BETWEEN ('Y\') AND ('76l<A\nn'))))) GROUP BY ((((CASE t0.c35  WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)AND(((vt1.c0)|(vt1.c0)))))OR((NOT (x'')))) HAVING CASE WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c35)) ELSE ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) END;SELECT DISTINCT (((vt1.c0 IN (rt0.c0, vt0.c0)))/(CASE ''  WHEN rt0.c2 THEN '0.3390768886504433' ELSE rt0.c2 END)), LIKELIHOOD(NULL, 0.9385735055607267), DENSE_RANK() OVER ( RANGE BETWEEN (((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((v0.c0, '0.7592407229866092', rt0.c2)) AND ((rt0.c2, vt1.c0, vt1.c0)))) BETWEEN (CASE 0.4647391658371568  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c35 THEN rt0.c0 WHEN '<R' THEN rt0.c0 ELSE v0.c0 END) AND (0.6273222235563077)) FOLLOWING AND  UNBOUNDED FOLLOWING) FROM v0, vt1, vt0, rt0;SELECT ((MIN(rt0.c1)) ISNULL) FROM rt0 WHERE (CASE x''  WHEN '' THEN '1385412431' END COLLATE NOCASE COLLATE BINARY) ORDER BY CASE ((rt0.c0)IS(t0.c0))  WHEN (('0.0') NOT BETWEEN (t0.c35) AND (rt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN NULLIF(rt0.c1, v0.c0) THEN (((NULL)) BETWEEN ((t0.c35)) AND ((NULL))) WHEN rt0.c1 COLLATE BINARY THEN ((t0.c35) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE (v0.c0 IN (rt0.c1)) END;SELECT DISTINCT ((rt0.c2) IS FALSE) FROM rt0; -- 1ms;
SELECT LOWER(DISTINCT (((v0.c0, t0.c0, rt0.c2))>=((NULL, vt0.c0, x'')))), ((((((((((rt0.c0)<>(vt1.c0)))OR(0.6285056761863371)))AND(0.349070607077554)))AND((((vt0.c0)) BETWEEN ((t0.c35)) AND ((NULL))))))AND(AVG(t0.c35))), ((((rt0.c1) NOTNULL)) NOT BETWEEN (UPPER(vt1.c0)) AND (((rt0.c1)=(v0.c0)))) FROM v0, vt0, t0 WHERE (((((((665205888)LIKE(2.048179433E9)))OR(((((0.13877918470780892)OR('IEa\n碇gw')))OR('653403734')))))AND(CASE '2042296740'  WHEN 674318818 THEN '2048179433' ELSE -1.930845027E9 END)));SELECT (+ ('1543606961')) FROM rt0, vt0, vt1, v0 WHERE (((((x'') BETWEEN ('h梇Unf!') AND (NULL))) IS TRUE)) GROUP BY UPPER(DISTINCT ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) HAVING ((((ABS(vt1.c0))OR((vt1.c0 IN (v0.c0)))))OR(((rt0.c2) NOT NULL))); -- 0ms;
SELECT DISTINCT SUM(LIKELY(DISTINCT v0.c0)) OVER (), COUNT(*) OVER ( PARTITION BY vt0.c0, CASE (rt0.c0 IN ())  WHEN ((x'')>=(rt0.c0)) THEN ((rt0.c1)/(vt0.c0)) ELSE ((rt0.c0)<(vt0.c0)) END), LOWER(DISTINCT t0.c35 COLLATE NOCASE) FROM t0, v0, vt0, rt0; -- 0ms;
SELECT ((ABS(t0.c0)) BETWEEN (SUM(vt0.c0)) AND (((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))) FROM vt0, v0;SELECT DISTINCT TOTAL(GROUP_CONCAT(((NULL)LIKE(v0.c0)))) FROM v0, vt0, t0 WHERE (NULL);SELECT DISTINCT NULL COLLATE BINARY FROM rt0, t0, vt0; -- 0ms;
SELECT ALL CASE WHEN CAST(v0.c0 AS REAL) THEN ((t0.c35) NOT BETWEEN (v0.c0) AND (vt1.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN (NOT (t0.c35)) THEN ((t0.c35) NOT BETWEEN (rt0.c2) AND (t0.c0)) END FROM rt0, v0, vt0, t0, vt1 LIMIT -1694196048; -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS TRUE))>>((((t0.c0))==((v0.c0))))) FROM rt0, v0, t0, vt1 GROUP BY ((((rt0.c1)>>(t0.c0)))+('b7?\')); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((x'')|(t0.c0))) NOT NULL), ((NULL COLLATE NOCASE)=(CAST(vt0.c0 AS BLOB)))) OVER () FROM vt1, t0, rt0, vt0;SELECT DISTINCT CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((v0.c0) BETWEEN (t0.c35) AND (rt0.c2)) ELSE CAST(v0.c0 AS BLOB) END FROM vt1, rt0, t0 WHERE (((((x'') BETWEEN (NULL) AND (NULL))) IS FALSE));SELECT DISTINCT ((((vt1.c0)OR(7.46117275E8)))AND(v0.c0 COLLATE NOCASE)), GROUP_CONCAT(((vt1.c0)IS(t0.c0))), ((((((((UNLIKELY(v0.c0))OR(((vt1.c0)IS(rt0.c0)))))OR(HEX(NULL))))OR(CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN t0.c35 WHEN vt1.c0 THEN t0.c35 WHEN v0.c0 THEN rt0.c1 END)))OR((- (t0.c35)))) FROM vt0;SELECT 0.1556680333654742 FROM vt1, v0, rt0 WHERE ((((x'a96f' IN ()))IS(((0.7829185125981838)!=(''))))); -- 0ms;
SELECT 'Wj', LEAD((~ (((NULL)+(v0.c0)))), CAST(((rt0.c0)<(vt1.c0)) AS INTEGER), NULLIF(DISTINCT CAST('Mj*&' AS REAL), (NOT (rt0.c2)))) OVER (), '1702275157' FROM v0, rt0, vt1, vt0 GROUP BY CAST(0.8021640964501314 AS BLOB) HAVING SUM((((t0.c35)) NOT BETWEEN ((rt0.c1)) AND ((t0.c35))));SELECT DISTINCT ((v0.c0 COLLATE NOCASE)>=(x'')), AVG((NOT (rt0.c0))) OVER (), CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((t0.c0)AND(vt1.c0)))OR(rt0.c0)) ELSE ((rt0.c0) ISNULL) END FROM v0;SELECT DISTINCT UPPER((NULL IN ())) FROM t0, vt1, vt0, rt0 LIMIT 2101641913 OFFSET -1477056229; -- 0ms;
SELECT ALL COUNT(*) FROM vt0, v0, rt0, vt1, t0 WHERE (((CAST(NULL AS INTEGER)) IS FALSE)) LIMIT 1546584620; -- 0ms;
SELECT DISTINCT ((vt1.c0 IN ()) IN ()), ((((((((((vt0.c0)*(t0.c0)))AND(vt0.c0)))AND(CAST(vt1.c0 AS BLOB))))AND(MIN(4.94675676E8))))OR((- (v0.c0)))), (((0.23659480391018772 IN (rt0.c1, rt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND ((- (t0.c0)))) FROM t0, v0, vt0, rt0 LIMIT 1308437204;SELECT DISTINCT ((t0.c35) NOTNULL) COLLATE RTRIM FROM vt1, rt0 INDEXED BY i62, t0, v0 WHERE (((((((((SQLITE_VERSION())OR((NOT (x'4c7a')))))AND((((((((('46▵O')OR(0X2cbb6e91)))OR('x')))AND('uW+T')))AND('*NYd#IGL9')))))OR(('K ' IN ()))))OR(((((x'd072')AND(0.8136679818087045)))AND(NULL)))));SELECT DISTINCT ((((t0.c0)LIKE(rt0.c1)))%(MIN(rt0.c0))) FROM vt1, rt0 WHERE (((x'' COLLATE RTRIM) NOT BETWEEN ((0.23664300724298382 IN ())) AND ((NOT (1393576665)))));SELECT DISTINCT ((((((((CAST(vt0.c0 AS TEXT))AND(TOTAL(vt0.c0))))AND(((t0.c35)+(t0.c0)))))AND(json_remove(t0.c35, ','))))OR(-4.78703877E8)), ((~ (rt0.c2)) IN ((t0.c0 IN (vt1.c0)))), ((((((((NULL)OR(t0.c35)))OR(rt0.c1)))AND(CAST(rt0.c2 AS TEXT))))AND(COUNT(*))) FROM rt0, t0, v0;SELECT DISTINCT GROUP_CONCAT(((vt0.c0)<(t0.c0)) COLLATE BINARY) FROM t0, v0, vt1, rt0, vt0 WHERE (CASE ((NULL) BETWEEN ('1') AND ('K '))  WHEN ABS('&/') THEN (((x'75f0', 0.4647391658371568, 0.9865884328532869)) BETWEEN (('-2101779446', '1648778393', NULL)) AND ((x'fbcd', NULL, '475833874'))) ELSE (((0x62d60397))!=((x'4a8a'))) END); -- 0ms;
SELECT ALL COUNT(((((0x35b01da1)AND(vt1.c0)))OR(x''))), (((TOTAL(rt0.c2), vt1.c0 COLLATE RTRIM, (vt1.c0 IN ())))>=((((((0Xffffffffd7085897)OR(t0.c35)))AND(rt0.c2)), CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c35 END, CASE t0.c35  WHEN rt0.c2 THEN rt0.c1 ELSE t0.c35 END))), (+ (((t0.c35) NOTNULL))) FROM vt1, vt0, t0, v0 GROUP BY ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM;SELECT DISTINCT ABS('0.019645598300340628') FROM t0, vt1, rt0 WHERE (((((NULL) NOT BETWEEN (NULL) AND ('-1478723449')))<>(2.048179433E9 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT t0.c0, ((((CAST(0.4430794361519611 AS TEXT))OR(t0.c0)))OR((t0.c0 IN (vt0.c0, vt0.c0)))), COUNT(*) FROM rt0, t0;SELECT SUM(((((((((t0.c35)AND(t0.c0)))OR(v0.c0)))OR(rt0.c2)))OR(rt0.c0))) FILTER(WHERE (((((rt0.c1 IN ()))AND(load_extension(vt1.c0, 1.625246985E9))))OR(t0.c35 COLLATE NOCASE))) OVER () FROM rt0, t0, vt1;SELECT DISTINCT ((NULL COLLATE RTRIM)>(COUNT(t0.c35))), ((AVG(NULL)) NOTNULL), ((('1087896398'))=((((((rt0.c2)AND(vt0.c0)))AND(vt1.c0))))) FROM rt0 INDEXED BY i62, vt0, v0, vt1, t0 WHERE ((('(v' COLLATE RTRIM) ISNULL));SELECT DISTINCT ((0.07396411418156634) BETWEEN ((vt1.c0 IN ())) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)))), NTILE((((('570911198')OR(CASE WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c2)>=(v0.c0))))) OVER (), TOTAL(CAST(vt1.c0 AS NUMERIC)) OVER ( ORDER BY (NULL IN ())) FROM t0, vt1, rt0, v0 WHERE ((+ (((0.016048249455552943)&('-2011049164'))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0))==((vt1.c0))) IN (((((t0.c35)AND(rt0.c0)))OR(vt1.c0)))) FROM vt0, t0, v0;SELECT DISTINCT rt0.c2 FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CASE CAST(vt1.c0 AS TEXT)  WHEN CAST(rt0.c2 AS TEXT) THEN TOTAL_CHANGES() ELSE rt0.c0 END, ((-1649714660)IS NOT(((v0.c0)<=(NULL)))), (x'' COLLATE NOCASE IN (CASE WHEN rt0.c2 THEN vt1.c0 END, ((rt0.c2) NOTNULL))) FROM vt1;SELECT DISTINCT AVG(((((vt0.c0)OR(t0.c35)))AND(t0.c35))) FROM v0 LIMIT 2001409750 OFFSET 582773261;SELECT DISTINCT TOTAL('1715777206' COLLATE RTRIM) OVER () FROM t0; -- 0ms;
SELECT ((NULL)GLOB(vt1.c0)) FROM v0, vt0 INDEXED BY i62;SELECT DISTINCT vt1.c0, ((((IFNULL(DISTINCT t0.c0, rt0.c1))OR(GROUP_CONCAT(v0.c0))))OR(TOTAL(vt0.c0))), NULL FROM t0, rt0, vt0, vt1;SELECT DISTINCT vt1.c0 FROM vt1, t0 GROUP BY CAST(((vt0.c0)-(t0.c0)) AS TEXT);SELECT DISTINCT ((((((t0.c35) BETWEEN (rt0.c1) AND (t0.c0)))OR(((rt0.c0) IS FALSE))))OR((vt1.c0 IN (v0.c0)))) FROM t0, vt0, v0, rt0;SELECT DISTINCT RANK() OVER () FROM rt0, vt1 WHERE (((((0.0) NOT NULL)) NOT NULL)); -- 0ms;
SELECT DISTINCT v0.c0 FROM vt0, t0, v0 WHERE (((CAST(NULL AS TEXT))=((NULL IN (0.9881161939976083))))); -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)>=(0.16344902493249325)) AS BLOB), (((((v0.c0) IS FALSE)))>((rt0.c2 COLLATE RTRIM))), SUM((rt0.c2 IN ())) OVER () FROM vt0;SELECT DISTINCT 0.006262880811229943, CAST(t0.c35 AS TEXT) COLLATE BINARY COLLATE NOCASE, ((((CASE vt1.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c35 THEN t0.c0 WHEN rt0.c1 THEN t0.c35 END)AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(t0.c0)))))AND('0.7382124491663644')) FROM vt1, v0, t0 WHERE (((((NULL) NOT BETWEEN (-1.437551377E9) AND ('0.4647391658371568')))%((((1.26339804E9, NULL, 0.3986220714967992))=((0.13331192156759752, '\nBM섑s4?', 0.22328878545690012)))))) GROUP BY CAST(0.17047506303232107 AS BLOB);SELECT ALL ((((rt0.c0)<>(vt1.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((rt0.c2)>=(vt0.c0)))) FROM t0, vt1, vt0 GROUP BY ((((((((0.7592407229866092)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))AND(vt1.c0)) COLLATE NOCASE HAVING ((rt0.c1)*(((t0.c0)/(t0.c0))));SELECT (((((+ (rt0.c2)))AND(MIN(rt0.c2))))AND(vt1.c0)) FROM vt0, t0, rt0, v0 WHERE ((((-323358430 IN ('-944803390'))) ISNULL));SELECT DISTINCT CASE v0.c0  WHEN NULL THEN t0.c35 END COLLATE NOCASE FROM vt0, vt1, v0, t0 WHERE (CAST('' AS REAL)); -- 0ms;
SELECT ((((vt1.c0) NOTNULL)) NOT BETWEEN (CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 WHEN t0.c0 THEN vt1.c0 WHEN rt0.c0 THEN t0.c0 END) AND ((v0.c0 IN ()))), ((((((vt0.c0)AND(rt0.c2)))AND(t0.c0))) BETWEEN (((t0.c0) NOTNULL)) AND ('0.3986220714967992')), (NOT (CAST('1514634225' AS REAL))) FROM t0, vt0, rt0, vt1 WHERE (json_remove(((2038675013)>=('쐕lIxA%')), CASE '2048179433'  WHEN '1000606541' THEN NULL ELSE '0.14564336756766738' END));SELECT json_patch(CAST(rt0.c0 AS TEXT), CAST(t0.c0 AS INTEGER)) FROM rt0, vt0, vt1, v0;SELECT DISTINCT v0.c0, (- (-8.95168412E8)), x'' FROM vt1, rt0, v0, t0; -- 0ms;
SELECT ((SUM(vt1.c0))==(0.2841276102144751)) FROM v0, t0;SELECT ALL AVG((rt0.c2 IN ())) OVER (), ((TOTAL(t0.c0))IS((('Bt[kbﰁ-')-(vt1.c0)))), (CAST(rt0.c0 AS REAL) IN ()) FROM rt0, v0 ORDER BY 0.1556680333654742 ASC  NULLS LAST;SELECT ((((CASE WHEN rt0.c1 THEN vt0.c0 ELSE '-5763426' END)OR(((141572207)<(t0.c0)))))AND(CAST(t0.c0 AS NUMERIC))) FROM vt0 WHERE (CAST((('116962899')IS(0.46204568688109415)) AS TEXT));SELECT ALL ((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))OR(((vt1.c0) IS TRUE))), ((((rt0.c0 COLLATE RTRIM)OR((t0.c35 IN ()))))AND(((rt0.c2)<(rt0.c1)))), ((((t0.c0 COLLATE RTRIM)AND('750481041')))OR(GROUP_CONCAT(vt1.c0))) FROM t0, v0, vt1;SELECT ALL rt0.c1 FROM rt0, vt0, v0 CROSS JOIN vt1 ON ((((vt0.c0)<=(rt0.c0))) IS TRUE) WHERE ((NOT ((0.7940209310003709 IN ())))) UNION ALL SELECT DISTINCT NULLIF((rt0.c1 IN (vt0.c0)), t0.c0 COLLATE BINARY) FROM v0, rt0, vt0, t0; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0) BETWEEN (rt0.c0) AND (v0.c0)) AS INTEGER), RANK() OVER (), NTILE((((((((vt1.c0))<>((rt0.c2))))OR(CAST(t0.c35 AS TEXT))))AND(((rt0.c1)|(t0.c35))))) OVER ( PARTITION BY ((((t0.c0)<<(vt1.c0)))LIKE(CASE t0.c35  WHEN rt0.c0 THEN v0.c0 WHEN t0.c35 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END)), t0.c35) FROM rt0, t0, vt1 WHERE (((0.9599705320923804) BETWEEN ('1699594513') AND (-1.323053567E9)) COLLATE RTRIM) LIMIT -513916278;SELECT ALL rt0.c0 FROM vt0, rt0, t0 WHERE (HEX(DISTINCT (~ (-3.20233228E8)))); -- 1ms;
SELECT (((rt0.c0)) NOT BETWEEN ((((t0.c35)/(vt0.c0)))) AND (((0.9113560933340263 IN ())))) FROM t0, vt0, vt1;SELECT ALL '-960858867' FROM t0; -- 0ms;
SELECT SUM(rt0.c1), ((((NULL)OR(vt1.c0 COLLATE RTRIM)))AND(((rt0.c0)OR(rt0.c2)))), TRIM(DISTINCT GROUP_CONCAT(rt0.c2), CAST(rt0.c1 AS TEXT)) FROM rt0 WHERE (DATE(CASE NULL  WHEN '2048179433' THEN NULL WHEN '1855254876' THEN NULL WHEN x'26a0' THEN 0xff5c095 END, (NULL IN ('Bt[kbﰁ-')), (('-1551482143') BETWEEN (NULL) AND (NULL)), ((NULL) BETWEEN ('1900194642') AND ('0')), CASE WHEN NULL THEN '2W>?' END)) ORDER BY CAST(rt0.c0 AS INTEGER) DESC  NULLS FIRST, (((+ (t0.c35)))LIKE((((t0.c35))>=((rt0.c0))))) DESC  NULLS FIRST;SELECT DISTINCT (((((rt0.c1 IN ()))OR(((((vt1.c0)OR(t0.c0)))OR(rt0.c2)))))AND(TOTAL(vt1.c0))) FROM vt0, t0, v0, rt0, vt1 NOT INDEXED GROUP BY (((NOT (vt0.c0))) BETWEEN (CAST(0.8327780383880299 AS BLOB)) AND ((rt0.c1 IN ()))) HAVING ((+ (rt0.c2)) IN (((rt0.c0) NOT NULL))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( PARTITION BY vt0.c0, CAST(rt0.c0 AS REAL)) FROM rt0, t0, v0 WHERE ((((- (x''))) BETWEEN ((- ('287250404'))) AND ('+YT+G-~\' COLLATE NOCASE))) GROUP BY TIME(((rt0.c1) BETWEEN (0.9093657352139427) AND (rt0.c0)), 0.6512712195181743, ((rt0.c1) IS FALSE)) HAVING (~ (((rt0.c2) BETWEEN (v0.c0) AND (0.7329328237434505)))) ORDER BY NULL DESC;SELECT DISTINCT ((((t0.c35)<(vt1.c0))) BETWEEN (COUNT(*)) AND (((t0.c0)OR(rt0.c2)))) FROM vt1, rt0, t0, vt0, v0 WHERE (((CAST(x'6faa' AS BLOB))IS(((x'bbda')>('좉'))))) GROUP BY 0.2771665205697553, ((rt0.c2) NOT BETWEEN (-424153386) AND (((rt0.c1)<(vt1.c0)))), (((rt0.c2 IN ())) BETWEEN ((~ (v0.c0))) AND (TRIM(rt0.c0, rt0.c1))) HAVING CASE ((rt0.c1) BETWEEN (t0.c0) AND (0Xffffffff8814e851))  WHEN '' COLLATE NOCASE THEN rt0.c0 COLLATE NOCASE END; -- 0ms;
SELECT DISTINCT LEAD(CASE ((rt0.c0)<(NULL))  WHEN rt0.c1 THEN rt0.c0 COLLATE BINARY ELSE load_extension(NULL, rt0.c0) END, CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c0 WHEN CAST(rt0.c1 AS BLOB) THEN CAST(rt0.c2 AS NUMERIC) WHEN (rt0.c1 IN (NULL, rt0.c1)) THEN ((rt0.c0) IS FALSE) ELSE CAST(rt0.c1 AS NUMERIC) END, ((((((rt0.c1) NOT NULL))OR(((rt0.c1)LIKE(rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) OVER (), MAX('') COLLATE NOCASE, rt0.c1 FROM rt0;SELECT DISTINCT vt1.c0, (((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(v0.c0)))AND(t0.c35))))<(((+ (vt0.c0))))), NTILE(((((v0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))>=(((vt1.c0) IS TRUE)))) OVER () FROM vt1, vt0, v0, rt0 LIMIT -135560962 OFFSET -349306261;SELECT DISTINCT ((((t0.c0)>>(vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CAST('-1120247820' AS NUMERIC))), json((('-895168412')GLOB(rt0.c1))), (((vt1.c0 IN (0x36701325, t0.c0)))==(SUM(rt0.c0))) FROM v0, t0, rt0;SELECT DISTINCT CASE WHEN MAX(v0.c0) THEN TRIM(rt0.c2, v0.c0) WHEN json_insert(v0.c0, t0.c0, v0.c0) THEN ((((t0.c35)AND(t0.c35)))OR(0.8552884130065687)) WHEN AVG(rt0.c0) THEN ((vt0.c0)OR(t0.c0)) WHEN 0.3799447130624948 THEN (vt0.c0 IN (516683283)) WHEN v0.c0 COLLATE RTRIM THEN ((t0.c0)+(t0.c35)) END, TRIM(DISTINCT (((NULL))==((rt0.c0))), ((v0.c0)||(t0.c0))), DENSE_RANK() OVER () FROM rt0, t0, vt1, vt0 WHERE ((((((((NULL, 1111862465, x'')) BETWEEN ((x'', '}|', '')) AND ((0.6507723331865753, NULL, x''))))AND(((NULL) NOT BETWEEN (0.14564336756766738) AND ('307188578')))))AND((((1.000606541E9))==((x'')))))) LIMIT 907220747 OFFSET -1274012359;SELECT DISTINCT AVG((- (rt0.c2))) OVER (), CAST(((((((((vt0.c0)AND(vt1.c0)))OR('')))OR(rt0.c0)))OR(v0.c0)) AS TEXT), ((vt0.c0)IS('謇&')) FROM v0, rt0, vt0 WHERE (((((((NULL)OR(NULL)))OR(0.418387711683027)))%(0.6421347649734279))) GROUP BY (((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0)) IN (((vt0.c0)<(rt0.c2)))), (NOT ((('Y')>(v0.c0)))), ((((((rt0.c0)OR(vt0.c0)))AND(t0.c35))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN t0.c35 ELSE vt1.c0 END) AND (((vt0.c0) IS TRUE)));SELECT ALL ((t0.c35)IS NOT(t0.c0)) COLLATE BINARY COLLATE RTRIM, (((('6lJd\r-')||(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 END) AND (0.4647391658371568)), ((vt0.c0)>>(vt0.c0 COLLATE NOCASE)) FROM t0 WHERE (((NULL COLLATE BINARY) IS TRUE));SELECT GROUP_CONCAT(((t0.c35) BETWEEN (t0.c35) AND (rt0.c2))) FROM rt0, v0 NOT INDEXED, vt1 WHERE (CASE WHEN (+ (0.3697109329235676)) THEN (('') IS FALSE) WHEN CAST('t5z	' AS NUMERIC) THEN (~ (NULL)) WHEN ((x'')AND(0.8168789136551647)) THEN ((('O_D 먅u*8'))<>((0.06300491751121817))) END);SELECT rt0.c0 FROM rt0, t0, vt0, vt1; -- 0ms;
SELECT DISTINCT MAX((((rt0.c2, vt1.c0, vt1.c0)) BETWEEN ((rt0.c1, vt0.c0, vt1.c0)) AND ((0.37441209609247106, v0.c0, t0.c35)))) FROM t0, vt0 GROUP BY ((rt0.c2)+(rt0.c2)) COLLATE RTRIM HAVING ((NULL) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE;SELECT ((UNLIKELY(DISTINCT rt0.c2)) NOTNULL) FROM t0, vt1, vt0, rt0; -- 0ms;
SELECT ALL NTILE((((t0.c35, t0.c35, t0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c35) AND (t0.c35)), (+ (t0.c35)), (t0.c0 IN ()))) AND (((t0.c35 IN (t0.c35)), (NOT (t0.c0)), CAST(t0.c35 AS REAL))))) OVER (), (vt0.c0 IN ()) COLLATE BINARY, CAST(rt0.c2 AS REAL) COLLATE RTRIM FROM t0;SELECT CASE (NOT (vt0.c0))  WHEN CAST(rt0.c0 AS TEXT) THEN '1375661772' ELSE CASE WHEN -478703877 THEN rt0.c1 ELSE 0xffffffffd2d5b994 END END FROM vt1, vt0, t0, v0 WHERE (CAST((('') IS FALSE) AS BLOB));SELECT DISTINCT t0.c35 FROM rt0, t0 LIMIT 572458595; -- 0ms;
SELECT DISTINCT (((t0.c35)) NOT BETWEEN ((((vt0.c0)IS NOT(rt0.c1)))) AND ((vt0.c0))) FROM rt0, vt0 WHERE (CAST(x'7836' AS INTEGER) COLLATE NOCASE) LIMIT 964319555;SELECT ((((CASE WHEN rt0.c0 THEN t0.c35 ELSE t0.c0 END)OR((~ (vt0.c0)))))OR(AVG(t0.c0))), (((((rt0.c1)IS(1531612618)), rt0.c1, CASE WHEN vt0.c0 THEN t0.c35 ELSE rt0.c2 END, COALESCE(DISTINCT rt0.c1, rt0.c1), (((v0.c0)) BETWEEN (('-')) AND ((rt0.c0))), NULL, CAST(v0.c0 AS BLOB)))>((((((v0.c0)AND(0xffffffffff32408e)))AND(rt0.c1)), CAST(vt1.c0 AS NUMERIC), ((vt0.c0) IS FALSE), ((((0.34121263741332764)AND(rt0.c0)))AND(vt0.c0)), ((((t0.c0)OR(t0.c0)))OR(rt0.c1)), NULLIF(0.7200720758981606, rt0.c2), t0.c0 COLLATE RTRIM))), ((((t0.c0) NOT NULL))%((- (t0.c0)))) FROM rt0 WHERE ((- ((x'' IN ()))));SELECT DISTINCT CASE GROUP_CONCAT(vt0.c0)  WHEN (~ (rt0.c1)) THEN GROUP_CONCAT(rt0.c0) END FROM v0;SELECT DISTINCT (NOT (TOTAL(vt0.c0))) FROM rt0, v0, vt0, t0; -- 0ms;
SELECT ALL COUNT(vt0.c0) OVER (), (~ (CAST('鵰teQJ' AS NUMERIC))), ((t0.c0 COLLATE NOCASE) IS FALSE) FROM vt0 WHERE (NULL) ORDER BY (('0.9113560933340263')||(((x'')<(vt1.c0)))) DESC, ((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) AND (LOWER(rt0.c2))) DESC  NULLS FIRST;SELECT ALL ((((((rt0.c2)AND(t0.c0)))AND(NULL)))GLOB(vt0.c0)) FROM rt0, vt1;SELECT (~ (SQLITE_COMPILEOPTION_USED(t0.c0))) FROM v0, rt0, t0, vt0 WHERE (((((x'') IS FALSE)) NOT NULL)); -- 0ms;
SELECT ((((((((rt0.c0 COLLATE BINARY)OR(((rt0.c1)AND(v0.c0)))))OR(((t0.c0) IS FALSE))))AND(((rt0.c1)>>(0.6273222235563077)))))AND((- (t0.c35)))), ((((vt1.c0)-(vt0.c0)))||(((((rt0.c0)OR('-124381055')))OR(rt0.c2)))), ((((((((((t0.c35)OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))OR(vt0.c0)))<<((vt0.c0 IN (rt0.c0, vt0.c0)))) FROM v0 INDEXED BY i62, vt0, t0, vt1 ORDER BY ((rt0.c1)||(LIKELY(vt0.c0))) DESC;SELECT DISTINCT CASE ((((NULL)OR(rt0.c1)))AND(t0.c35))  WHEN (- (v0.c0)) THEN TRIM(rt0.c0, vt0.c0) END FROM vt0 WHERE (SQLITE_SOURCE_ID());SELECT ALL TOTAL((- (rt0.c1))), DENSE_RANK() OVER ( RANGE LAST_INSERT_ROWID() PRECEDING), (+ (((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))) FROM vt1 WHERE ((((x'')) BETWEEN ((CAST(NULL AS TEXT))) AND ((CAST(x'9c55' AS NUMERIC)))));SELECT DISTINCT (UPPER(rt0.c0) IN (((rt0.c2)<<(vt0.c0)))) FROM v0;SELECT DISTINCT ((('1982772610' IN ()))|(vt1.c0 COLLATE BINARY)), ((vt0.c0 COLLATE NOCASE)+(((rt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))), ((t0.c0 COLLATE BINARY) IS FALSE) FROM v0;SELECT ALL (((((('1546584620')AND(rt0.c0)))OR(vt0.c0)))==(((vt0.c0)==(vt1.c0)))) FROM vt0 WHERE (LOWER(DISTINCT ((NULL)>>(x'9329'))));SELECT DISTINCT rt0.c1, ((1227564848)==(CASE x''  WHEN vt1.c0 THEN rt0.c2 WHEN x'' THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 END)), '' FROM vt1, v0, t0;SELECT COUNT(*) OVER () FROM rt0 WHERE ((~ (((('', x'', 2142190839))>((0.837777427702973, '0.019645598300340628', -1059333089)))))); -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS INTEGER) COLLATE BINARY FROM vt0 NOT INDEXED, t0, vt1, v0, rt0 LIMIT 750481041 OFFSET 1430497501; -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c0 AS NUMERIC) AS REAL) FROM v0, rt0;SELECT DISTINCT ((((t0.c0)AND(json_object(t0.c35, 0.23796091887970816))))AND((((rt0.c2))<=((t0.c35))))) FROM t0, v0, rt0 WHERE ((((1.929747363E9)) BETWEEN (((('&a')<=('')))) AND ((((0.5825905961395695)>>(NULL)))))); -- 0ms;
SELECT DISTINCT ((((vt1.c0 COLLATE BINARY)OR((+ (rt0.c0)))))AND(((rt0.c0)-(rt0.c1)))), '0.8670867432170624', rt0.c2 FROM t0, vt1, vt0, rt0 WHERE (((x'' COLLATE NOCASE)!=(-0.0 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((vt1.c0 IN (rt0.c2, vt1.c0))))=(((- (t0.c35))))) FROM rt0, v0, vt0, t0, vt1; -- 0ms;
SELECT ((((vt1.c0)||(v0.c0))) NOTNULL) FROM vt0, t0, v0, vt1; -- 0ms;
SELECT ALL (JULIANDAY(vt1.c0, t0.c35, x'f8ebe66e') IN ((+ (t0.c35)))) FROM vt1, v0, vt0, rt0 WHERE (((((x'e8f76221') BETWEEN ('-1437551377') AND (x''))) IS FALSE)) GROUP BY CASE WHEN (+ (t0.c35)) THEN (- (t0.c0)) END, (((((rt0.c1)) BETWEEN ((t0.c35)) AND ((rt0.c1))))*(t0.c0 COLLATE NOCASE)), (((NOT (rt0.c1)))GLOB((~ (vt0.c0)))) HAVING ((((((((((rt0.c1)%(rt0.c2)))AND((- (t0.c0)))))OR(COUNT(t0.c0))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))))OR(((((((((v0.c0)OR(rt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0))));SELECT DISTINCT (((- (NULL)))&(((((rt0.c1)AND(x'')))OR(rt0.c2)))) FROM vt1, v0, rt0, vt0, t0 WHERE (CAST('S' AS INTEGER)); -- 0ms;
SELECT ALL GROUP_CONCAT(NULL) COLLATE RTRIM FROM v0, vt1, vt0, rt0, t0 WHERE (((((((((CAST(NULL AS INTEGER))OR(((0.7382058520971246)IS(0.5116298801662642)))))AND(x'c782c547' COLLATE NOCASE)))OR((('W]ꑘ[_ig') IS TRUE))))AND(((0x30628a57)>>(NULL))))); -- 0ms;
SELECT MIN((- (582773261))), 0.22350582258302243, ((CASE v0.c0  WHEN t0.c35 THEN rt0.c0 ELSE vt0.c0 END) BETWEEN ((((t0.c35)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND (rt0.c0)) FROM rt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(rt0.c2)))OR(CAST(t0.c35 AS TEXT))) DESC;SELECT ALL 0xffffffffe6b7eed6 FROM rt0, vt0, vt1, v0 WHERE (CASE ((('-1119534442')) NOT BETWEEN ((x'')) AND (('-1941777777')))  WHEN (('')!=('-1930845027')) THEN ((('759855083')) NOT BETWEEN ((5.41948538E8)) AND ((x'3f52'))) END) LIMIT -1982367150 OFFSET -1813763377; -- 1ms;
SELECT TOTAL(((((vt1.c0)AND(vt0.c0)))AND(v0.c0))) OVER () FROM rt0, v0, t0 WHERE ((~ (NULL)));SELECT GROUP_CONCAT(CAST(-2.88675088E8 AS TEXT)) OVER () FROM vt0, vt1, rt0, t0, v0 WHERE ((((((('-445865118')<>('1308437204')))AND((((')IX6>^B+큤'))!=((x'7582'))))))AND(CAST(NULL AS BLOB)))); -- 0ms;
SELECT CAST(((((rt0.c0)AND(rt0.c1)))OR(v0.c0)) AS REAL), TOTAL_CHANGES(), CASE NULL  WHEN TOTAL(v0.c0) THEN rt0.c2 ELSE ((vt1.c0) IS FALSE) END FROM t0, vt1, rt0 WHERE (CAST(x'' COLLATE RTRIM AS BLOB)) GROUP BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (HEX(DISTINCT rt0.c1)) AND (5.82773261E8)) HAVING (((0Xffffffffe6c33cd1, CAST(rt0.c2 AS INTEGER), vt0.c0 COLLATE NOCASE))!=((CAST(v0.c0 AS REAL), CASE WHEN t0.c0 THEN rt0.c2 END, TOTAL_CHANGES())));SELECT DISTINCT rt0.c2 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY, AVG(((rt0.c2)-(t0.c35))), ((0.46204568688109415) IS TRUE) FROM vt0, rt0, vt1 WHERE (CASE WHEN ('0.8481928018156226' IN ()) THEN x'' COLLATE NOCASE END) ORDER BY (((((((((((vt0.c0)OR(vt1.c0)))OR('1393576665')))AND(v0.c0)))AND(t0.c35))))<(((NOT (v0.c0)))))  NULLS LAST;SELECT DISTINCT COUNT(t0.c35 COLLATE BINARY) FILTER(WHERE LIKELIHOOD(x'', 0.003899556725198816)) OVER (), SUM(CAST(t0.c35 AS BLOB)) OVER (), ((CASE WHEN 0.2841276102144751 THEN v0.c0 WHEN rt0.c2 THEN t0.c35 WHEN x'' THEN rt0.c0 END) ISNULL) FROM t0 CROSS JOIN rt0 ON ((CAST(NULL AS TEXT))!=(((((0.3708646080143908)AND(v0.c0)))AND(rt0.c2)))) RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN t0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN '-1691519783' WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END)LIKE(((((((((vt1.c0)AND(t0.c35)))OR(rt0.c2)))AND('-432729385')))AND(t0.c0)))) LEFT OUTER JOIN v0 ON ((((rt0.c1) NOT NULL)) BETWEEN (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN x'f388' THEN 0.9543624732401058 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((((vt0.c0)OR(rt0.c0)))OR(t0.c35)))) FULL OUTER JOIN vt0 ON ((((vt1.c0)<=(v0.c0))) NOT BETWEEN (((((((((v0.c0)OR(vt1.c0)))OR(t0.c35)))AND(vt0.c0)))OR(t0.c0))) AND (((v0.c0) IS TRUE))) WHERE (((PRINTF('[2\ns~(\r3k')) NOT BETWEEN (((0Xcbe7439) NOT BETWEEN ('i') AND (-1707856782))) AND ((((x'9b20a8dd', '', '-2056009468')) NOT BETWEEN (('1441623820', 0.9551798182380831, '-437350657')) AND ((NULL, 0.15714856293074475, 0.34121263741332764)))))) LIMIT 1612988938;SELECT DISTINCT 2.101641913E9 FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (((((((((rt0.c0)AND(t0.c0)))AND(v0.c0)))AND(t0.c0)))AND(t0.c0)))) FROM vt0, t0, rt0, vt1, v0 WHERE ('164363265') ORDER BY (t0.c0 COLLATE NOCASE IN (NULL)), CAST(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) AS NUMERIC), NULL  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM)LIKE(((((v0.c0)AND(rt0.c1)))OR(v0.c0)))) FROM vt1, t0, v0, rt0 WHERE ((((0.24347438220910345 IN (NULL)))>>(SQLITE_COMPILEOPTION_GET(NULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((((rt0.c1)IS(v0.c0)))) AND (((- ('0.41680215305723567'))))) FROM vt0, v0;SELECT ALL ((TOTAL(t0.c0))AND(GROUP_CONCAT(rt0.c0))) FROM vt1, rt0, vt0 LIMIT -327869000;SELECT ALL (((((rt0.c2)<<(v0.c0))))<((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) FROM vt0, rt0 NOT INDEXED, vt1 INDEXED BY i37 ORDER BY TYPEOF(DISTINCT x'c53f') COLLATE RTRIM ASC  NULLS LAST LIMIT 149658666 OFFSET -924241492;SELECT DISTINCT 'uW+T' FROM vt0, v0, vt1 GROUP BY CASE WHEN rt0.c0 THEN ((v0.c0)GLOB(v0.c0)) ELSE 0xffffffff81b0ef33 END, CAST(x'' AS REAL), ((((((vt1.c0)*(NULL)))OR((((rt0.c1))<(('1356961817'))))))AND(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))));SELECT -1423974181, CASE WHEN ((v0.c0)AND(vt1.c0)) THEN ((vt0.c0)<<(rt0.c2)) ELSE rt0.c1 COLLATE NOCASE END, COUNT(*) FROM vt0, vt1;SELECT DISTINCT rt0.c2 FROM vt1, rt0 WHERE ((x'' COLLATE NOCASE IN (((x'')-(0xffffffffc19ea1aa)), (0.5402329529526951 IN ('1385617520'))))); -- 0ms;
SELECT DISTINCT CASE WHEN COUNT(*) THEN t0.c0 WHEN t0.c0 COLLATE NOCASE THEN ((rt0.c1) ISNULL) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(v0.c0 AS BLOB) END, ((((rt0.c2)<<(t0.c35)))IS(CASE t0.c35  WHEN vt1.c0 THEN t0.c35 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN vt1.c0 THEN t0.c35 WHEN v0.c0 THEN '198209470' ELSE t0.c0 END)), ((((vt1.c0)=(rt0.c2))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((vt1.c0)IS NOT(t0.c0)))) FROM v0 WHERE ((NOT (x'')) COLLATE BINARY);SELECT (((((rt0.c1)OR(t0.c35))))==(((((vt1.c0))<((rt0.c0)))))), (((vt0.c0)) BETWEEN ((CHANGES())) AND ((MAX('')))), MIN(((t0.c0)-(t0.c35))) FROM vt0, rt0 WHERE ((((((0.2518260278165906) ISNULL)))>(('c5kLM'))));SELECT DISTINCT LIKELIHOOD(DISTINCT 0.5322482172862522, 0.968758211061033) FROM v0 WHERE (CASE (x'' IN ())  WHEN CAST(x'' AS INTEGER) THEN json_type(x'c7ed') END);SELECT DISTINCT UNLIKELY(MAX(vt1.c0)) FROM v0 WHERE ((('-1231347207')>=((NOT (0Xffffffffe274aea7)))));SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 WHERE ((((((((('c&䕮	頹ERgd')OR(x'')))OR(x'')))OR(NULL)))AND(x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS BLOB))>(t0.c0)), ((((rt0.c1) BETWEEN (x'6288') AND ('0.41379538074037037'))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (CASE rt0.c2  WHEN t0.c35 THEN t0.c35 END)), ((((rt0.c1)==(vt1.c0))) NOTNULL) FROM t0, v0, vt0;SELECT ALL rtreenode(t0.c35, rt0.c2) COLLATE BINARY FROM v0, t0;SELECT ALL CASE ((rt0.c0)==(rt0.c1))  WHEN ((v0.c0) NOTNULL) THEN t0.c0 ELSE ((rt0.c0)>>('[]')) END FROM v0, vt0, t0, rt0, vt1 WHERE ((+ ((~ (x''))))) LIMIT 1000606541 OFFSET 317131383; -- 1ms;
SELECT DISTINCT LAG(((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((-236827288))) IN ()), ((CAST(vt0.c0 AS NUMERIC)) ISNULL), CAST(TRIM(vt1.c0) AS INTEGER)) OVER (), TOTAL(((rt0.c0)LIKE(t0.c35))) OVER (), CASE WHEN ((((t0.c0)OR(vt1.c0)))OR(v0.c0)) THEN CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 END ELSE (~ (vt1.c0)) END FROM v0, t0, vt0, vt1, rt0 WHERE ((- (((2056893215) NOT NULL)))); -- 0ms;
SELECT ALL (- (AVG(t0.c35))) FROM rt0 RIGHT OUTER JOIN v0 ON 0.4504584560462519;SELECT DISTINCT CAST(CAST(t0.c35 AS BLOB) AS TEXT), (((NOT (vt1.c0)))AND(MIN('-1323053567'))), (((CAST(vt1.c0 AS TEXT)))=((NULLIF(DISTINCT rt0.c0, vt1.c0)))) FROM v0, rt0, vt0 ORDER BY ((((rt0.c1) NOT BETWEEN (t0.c35) AND (t0.c35))) NOT BETWEEN (UPPER(vt0.c0)) AND ('0.13331192156759752'))  NULLS FIRST;SELECT ALL COUNT(*), (((((((rt0.c2))>=((vt1.c0))))AND(CAST(v0.c0 AS BLOB))))AND(((vt1.c0) IS FALSE))), (+ (rt0.c2)) FROM v0, vt1, t0, rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(v0.c0 AS NUMERIC) COLLATE RTRIM FROM v0, vt0 WHERE ((((0.418387711683027)>=('\')) IN ())); -- 0ms;
SELECT ALL ((rt0.c2)|(vt0.c0)) COLLATE RTRIM FROM v0, vt0;SELECT (((((((vt0.c0))<=((rt0.c1))))AND(((((NULL)AND(vt1.c0)))AND(x'')))))OR(v0.c0 COLLATE RTRIM)) FROM v0, t0, vt1 WHERE (((ABS(0.41912791205924604)) BETWEEN (((((-1883701617)AND(-1809626545)))AND('R7*'))) AND ((- (0.3986220714967992)))));SELECT DISTINCT ((CAST(t0.c35 AS TEXT))>(LIKELIHOOD(DISTINCT x'', 0.2160810723061921))) FROM v0;SELECT DISTINCT ((((rt0.c1, x'', rt0.c2)) BETWEEN ((rt0.c0, 0.40205677078870394, vt1.c0)) AND ((rt0.c2, t0.c35, t0.c0))) IN ((~ (vt0.c0)), NULL)) FROM t0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c35))) IS TRUE) ASC  NULLS LAST;SELECT DISTINCT ('w>Z8' IN ((v0.c0 IN ()), NULL)) FROM rt0, vt0 NATURAL JOIN vt1 ORDER BY ((t0.c0)AND((rt0.c2 IN (rt0.c1)))) DESC, (((0.17934145579615424, vt1.c0 COLLATE BINARY, CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END))==((CASE v0.c0  WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN t0.c35 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END, vt1.c0 COLLATE NOCASE, CAST(vt1.c0 AS BLOB))));SELECT CAST(LIKELY(DISTINCT rt0.c1) AS BLOB) FROM rt0, vt0 WHERE (((CASE x''  WHEN 0Xffffffff9dac2bf1 THEN x'' WHEN 0.7334045394131892 THEN 'g0uF~' WHEN 0.15714856293074475 THEN 0X41394943 ELSE 0.2738655346823835 END)==(NULLIF(NULL, x'5fa6')))); -- 0ms;
SELECT DISTINCT CAST(MAX('l(䱽*') AS NUMERIC), (- (CASE WHEN rt0.c1 THEN v0.c0 END)), CAST(((v0.c0)|(rt0.c2)) AS BLOB) FROM vt1, vt0 ORDER BY -1.323053567E9 DESC  NULLS LAST;SELECT DISTINCT ((rt0.c1) NOT NULL) FROM vt0 WHERE (((NULL) NOT NULL) COLLATE RTRIM);SELECT DISTINCT 0xffffffffbd0f4e3a FROM vt0, t0, vt1 WHERE (((LIKELY(NULL))>=(NULL COLLATE BINARY))); -- 0ms;
SELECT ALL CASE WHEN (((NULL)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN CASE WHEN rt0.c1 THEN '1153550950' END END FROM vt1, t0, v0, rt0, vt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c1))) NOT NULL) FROM t0, rt0 WHERE (((CAST('1596704315' AS INTEGER)) IS TRUE)); -- 0ms;
SELECT CASE ((v0.c0) IS TRUE)  WHEN (v0.c0 IN ()) THEN vt1.c0 ELSE (- (rt0.c1)) END FROM v0, t0, vt1, rt0 FULL OUTER JOIN vt0 ON 0.6134456669348527; -- 0ms;
SELECT DISTINCT ((((v0.c0)) NOT BETWEEN ((t0.c35)) AND ((rt0.c1))) IN (COUNT(*), t0.c35)) FROM rt0, t0, vt0, vt1, v0 WHERE (((('628229397', 0.15300432765231275, 0.793315701434701)) BETWEEN ((((x'a4a5')%(NULL)), (('') BETWEEN ('-884277627') AND (x'')), ((('0.6507723331865753', -4.32729385E8, NULL)) BETWEEN ((0X142ef23d, NULL, 0.24056557295885495)) AND ((0.41379538074037037, '-764603493', 0.8513009904277632))))) AND (((('tCD') NOT NULL), CASE x''  WHEN NULL THEN '1147018982' ELSE '' END, (('mC6')>=('')))))) LIMIT 1766991285 OFFSET 900734369; -- 0ms;
SELECT (('l')IS NOT(((t0.c35)|(rt0.c1)))) FROM t0, vt1, rt0, vt0 WHERE ((('')-(x''))) INTERSECT SELECT DISTINCT CUME_DIST() OVER () FROM rt0 LIMIT 30106181 OFFSET 1441847079; -- 1ms;
SELECT DISTINCT NTILE((+ ((NOT (rt0.c0))))) OVER () FROM vt1, rt0, v0;SELECT DISTINCT COUNT(CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE NOCASE) FROM t0;SELECT DISTINCT ((((NULL) IS FALSE)) BETWEEN ((((v0.c0, t0.c0, vt0.c0)) BETWEEN ((rt0.c1, rt0.c2, t0.c0)) AND ((vt1.c0, t0.c0, v0.c0)))) AND (((rt0.c0)==(vt1.c0)))) FROM v0 WHERE (CASE CAST('-895168412' AS BLOB)  WHEN ((x'')>=(NULL)) THEN (0.9976562527180263 IN ()) END);SELECT CAST(((vt1.c0)IS(rt0.c0)) AS REAL) FROM t0, rt0, v0, vt0, vt1 WHERE ((((((('1546584620')) NOT BETWEEN ((0.016048249455552943)) AND ((''))), (~ (x'')), ((NULL) ISNULL)))<=(((((('0.18469975752580226')OR(0.14058943084679143)))OR(1.648778393E9)), CASE WHEN '-347799466' THEN 0.3277051843369062 ELSE NULL END, ((x'') IS TRUE))))); -- 0ms;
SELECT ALL (((v0.c0, v0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, NULL, v0.c0)) AND ((NULL, t0.c0, v0.c0))) COLLATE RTRIM, CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE v0.c0  WHEN vt1.c0 THEN 0.13530756311567793 ELSE rt0.c1 END ELSE CAST(rt0.c0 AS INTEGER) END, PERCENT_RANK() OVER ( ORDER BY ((rt0.c2)>>(rt0.c2)) COLLATE NOCASE) FROM vt0, vt1 WHERE (((((('1366764216'))<>((0.7941181333699966)))) NOTNULL)) GROUP BY ((0X56f299a3)+(v0.c0));SELECT ((~ (rt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT ((CAST(rt0.c2 AS TEXT)) BETWEEN (((rt0.c1)+(vt0.c0))) AND (((x'24eb')<(rt0.c0)))) FROM t0, v0 WHERE (x'f0b4');SELECT DISTINCT vt0.c0, ((CAST(rt0.c0 AS INTEGER)) BETWEEN ('520121287') AND (AVG(rt0.c2))), ((((rt0.c0)<(v0.c0))) NOTNULL) FROM vt0, v0, t0 WHERE (CHANGES());SELECT DISTINCT TOTAL(t0.c35) OVER () FROM t0, rt0, vt0, v0, vt1 WHERE (0.7961193714384593); -- 0ms;
SELECT (~ (((t0.c0)|(vt1.c0)))) FROM vt0 WHERE ((((0X7a11ee71)) BETWEEN (((((x'')) BETWEEN (('*Y*~~]DDM')) AND ((1514634225))))) AND ((1599739441))));SELECT ALL t0.c35, ((CASE t0.c35  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 END) BETWEEN ((((t0.c0))=((rt0.c0)))) AND (UNLIKELY(v0.c0))), TRIM(DISTINCT (((vt0.c0))<>((v0.c0)))) FROM vt0, rt0, t0;SELECT DISTINCT rt0.c1, ((CASE x'235b'  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END) IS TRUE), json_remove(((((((((vt0.c0)OR(0.19879270990142528)))AND(rt0.c2)))OR(rt0.c0)))AND(t0.c0)), ((t0.c35) BETWEEN (rt0.c0) AND (rt0.c1))) FROM rt0, vt1, v0;SELECT t0.c35 FROM rt0, vt0 NOT INDEXED, v0 WHERE (((((((((CASE 87772827  WHEN '*H' THEN 601805333 WHEN '-1160937659' THEN '[' WHEN NULL THEN '2042296740' END)OR((0.1451486404806146 IN ()))))OR(CASE WHEN 'WL' THEN x'' WHEN 0.8857705625499229 THEN '582773261' WHEN ',Ə' THEN '!yearsf' END)))OR((((x'f7ac', 'J)bZA', 0.7649132537702475)) NOT BETWEEN ((1864438928, '', '9~G-Bh^맰')) AND ((x'', '-747201691', 653403734))))))OR(((NULL)&(0.053903867611075795)))));SELECT DISTINCT CAST((- (t0.c35)) AS TEXT) FROM v0, vt0, t0, rt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0)))))=(((rt0.c1 IN ())))) FROM v0 INNER JOIN vt1 ON CAST(TYPEOF(rt0.c1) AS REAL);SELECT ALL ((((~ (t0.c35)), ((vt1.c0)<<('0.7329328237434505')), NULL))<>((((vt0.c0) NOT BETWEEN (0.7534917773504334) AND (rt0.c1)), ((rt0.c2)/(rt0.c2)), ((rt0.c0)|(rt0.c1))))), (((((t0.c35))!=((v0.c0))))>>(UNLIKELY(t0.c0))), '' FROM vt0, rt0;SELECT (((v0.c0)) BETWEEN ((((t0.c0)|(rt0.c0)))) AND ((((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) FROM vt1, v0;SELECT ALL ((((t0.c0)==(vt0.c0))) NOT BETWEEN (((t0.c0)!=(rt0.c2))) AND (CAST(vt0.c0 AS TEXT))) FROM vt1, t0, rt0, vt0, v0 WHERE ((CASE 'l(䱽*'  WHEN 1.699594513E9 THEN '' ELSE x'' END IN ())) ORDER BY ((((UNLIKELY(t0.c35))OR(t0.c35)))AND(STRFTIME(vt1.c0, t0.c0, vt1.c0))), x'' ASC  NULLS FIRST, x'155c' ASC; -- 0ms;
SELECT DISTINCT JULIANDAY(((t0.c0)IS NOT(v0.c0)), CAST(t0.c0 AS TEXT), CASE WHEN vt0.c0 THEN v0.c0 END, ((t0.c0)OR('*d{|26~줄')), ((rt0.c2) ISNULL), (rt0.c1 IN (vt1.c0)), ((vt0.c0)>>(rt0.c2))) FROM vt0 NOT INDEXED, rt0 WHERE (TRIM(DISTINCT 1929441288 COLLATE BINARY));SELECT MIN((vt0.c0 IN ())), LIKELIHOOD(((rt0.c0)<=(rt0.c0)), 0.7489045160204819), ((MAX(vt0.c0))%((((('-1551482143')OR(t0.c35)))OR(rt0.c0)))) FROM v0, rt0, vt0 LIMIT 634631885;SELECT ALL (((((0.8851039904926896))<((vt1.c0))))IS NOT(json_remove(v0.c0, rt0.c1))) FROM v0, vt0, rt0 WHERE (CASE WHEN ((0x586a9450)LIKE(0.851572211807842)) THEN (('P匩')&(x'')) WHEN ((((NULL)AND(0.6415945882610671)))OR(x'')) THEN ((0.9882076511727886) NOTNULL) WHEN TRIM(0.49567778800723783) THEN (('䱡bG]zU') IS TRUE) END) LIMIT 1608709028 OFFSET -1218948025;SELECT DISTINCT CAST(CASE vt0.c0  WHEN vt1.c0 THEN t0.c35 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN -2.119110861E9 ELSE vt1.c0 END AS TEXT) FROM t0, vt1, v0, vt0 WHERE (CAST((- (0.5448823094939181)) AS REAL));SELECT DISTINCT MIN(vt1.c0), MIN(vt0.c0 COLLATE RTRIM COLLATE BINARY), COUNT((- ('>uH9H8'))) OVER ( PARTITION BY CASE ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2))  WHEN (vt0.c0 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) ELSE ((t0.c0)|(t0.c0)) END, CASE 0X1426bd35  WHEN (((rt0.c1, t0.c0, rt0.c0)) BETWEEN ((rt0.c2, t0.c0, v0.c0)) AND ((0.9712920719472732, t0.c35, t0.c35))) THEN v0.c0 WHEN ((vt0.c0)IS(rt0.c2)) THEN rt0.c1 WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN json_array_length(v0.c0) END) FROM rt0, t0 WHERE (NULL);SELECT DISTINCT vt1.c0, (((v0.c0) ISNULL) IN ()), CASE WHEN (((t0.c0))>((rt0.c1))) THEN (NOT (rt0.c0)) END FROM rt0, vt0, v0 GROUP BY 'mc' HAVING CASE ((vt0.c0)-(rt0.c0))  WHEN TRIM(DISTINCT t0.c0) THEN ((rt0.c2)IS(rt0.c2)) WHEN (- (rt0.c1)) THEN (((t0.c0)) NOT BETWEEN ((t0.c35)) AND ((rt0.c2))) WHEN rt0.c2 THEN GROUP_CONCAT(NULL) ELSE LTRIM(t0.c0, rt0.c2) END ORDER BY (+ ((+ (v0.c0)))) ASC;SELECT ALL ((rt0.c1) IS TRUE) FROM rt0, t0, vt1 WHERE (CAST((('-504080758')>=('/1')) AS BLOB)) GROUP BY ((((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))!=(((~ (rt0.c1))))) HAVING NULL; -- 0ms;
SELECT ALL ((t0.c35 COLLATE RTRIM) IS TRUE) FROM vt1, vt0 WHERE (((+ (x'')) IN ((NOT (x'')), CAST(0.09039145981954266 AS TEXT))));SELECT DISTINCT (((v0.c0)OR(vt1.c0)) IN ()) FROM t0 NOT INDEXED, rt0 WHERE (ABS(DISTINCT ((0x6edec827) BETWEEN (1.625246985E9) AND (x'8967')))); -- 0ms;
SELECT DISTINCT (('g9' COLLATE RTRIM)IS(CASE v0.c0  WHEN rt0.c0 THEN t0.c35 WHEN vt0.c0 THEN t0.c0 WHEN v0.c0 THEN 9.66652945E8 ELSE t0.c0 END)) FROM vt1, rt0, vt0, v0 WHERE (-1123757464) ORDER BY ((((CASE WHEN t0.c35 THEN vt0.c0 ELSE v0.c0 END)AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'8916' END)))AND(0X75bc5f98));SELECT DISTINCT (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c35)))) IS TRUE) FROM t0, vt0 EXCEPT SELECT (((((((x''))<=((-2.101779446E9))))OR(0.3681040604550371)))OR(((((v0.c0)AND(vt1.c0)))AND(t0.c0)))) FROM v0 ORDER BY ((((((rt0.c1)AND(vt1.c0)))OR(vt0.c0))) NOTNULL)  NULLS FIRST;SELECT (NOT (TOTAL(vt1.c0))), ((CASE t0.c0  WHEN vt1.c0 THEN rt0.c1 WHEN t0.c35 THEN v0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) BETWEEN (CAST(vt0.c0 AS REAL)) AND (TYPEOF(DISTINCT rt0.c1))), SUM(CAST(rt0.c1 AS NUMERIC)) OVER () FROM v0, t0, vt0;SELECT (((((('-1477056229')AND(t0.c35)))AND(t0.c0))) IS FALSE) FROM t0, v0, vt0; -- 0ms;
SELECT ALL ((((t0.c0)/(t0.c35)))-((t0.c0 IN (rt0.c2)))), CAST(((((rt0.c1)OR(rt0.c2)))AND('1929747363')) AS INTEGER), (((((((((rt0.c2)OR(t0.c0)))OR(t0.c0)))OR(t0.c35)))OR(v0.c0)) IN (HEX(t0.c0))) FROM v0, vt1 WHERE ('0.019645598300340628' COLLATE NOCASE);SELECT GROUP_CONCAT((rt0.c1 IN ())) OVER ( PARTITION BY ((NULL)+((rt0.c2 IN (rt0.c0, vt0.c0)))), (- (((x'') IS TRUE)))) FROM v0 WHERE (((((((((((((0.8204766440143043)AND(x'44f4')))OR(0.07224401025511618)))AND(NULL)))OR((((('-1813763377')AND('1625246985')))OR(-1)))))OR(((x'') NOT BETWEEN (x'a39f') AND (NULL)))))OR(((((0.6584749218410607)OR(NULL)))AND(0.2771665205697553)))));SELECT DISTINCT NULL FROM v0, vt0; -- 0ms;
SELECT DISTINCT CAST((+ ('1616109001')) AS TEXT) FROM vt0, rt0, v0, vt1, t0 ORDER BY ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 END) AND (((t0.c35) BETWEEN (rt0.c0) AND (rt0.c0)))), ((CAST(t0.c0 AS INTEGER))GLOB(((v0.c0) IS TRUE))) DESC  NULLS LAST, (vt1.c0 IN ()) COLLATE NOCASE ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((CAST(rt0.c1 AS TEXT))&(((vt1.c0) BETWEEN (v0.c0) AND (rt0.c2)))) FROM vt0, t0 WHERE ((((((((('')AND('H{')))OR(NULL)))OR('Č*,HXॊ6')))OR(-1323053567)) COLLATE RTRIM);SELECT ALL (- (CASE WHEN t0.c0 THEN t0.c35 END)) FROM t0, vt0, v0, vt1 WHERE (((((NULL)<=('r>!')))%(CAST(0.59461504254676 AS BLOB)))); -- 0ms;
SELECT DISTINCT (((CAST(rt0.c2 AS REAL)))>=((CASE vt0.c0  WHEN t0.c35 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE '' END))), (((((t0.c35 IN ()))OR(rt0.c0)))OR(((vt1.c0) IS TRUE))), MAX(((rt0.c2)<(rt0.c0))), t0.c35, (NULLIF(rt0.c1, t0.c0) IN ()) FROM rt0, v0, vt0 WHERE ((('-288675088' COLLATE BINARY) NOT BETWEEN ('-1244095999' COLLATE NOCASE) AND (UPPER('uE\rX'))));SELECT (((vt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c1))) FROM t0, vt0;SELECT ((HEX(DISTINCT 0.8670867432170624))IS NOT((rt0.c1 IN (0.06735726802677544, vt0.c0)))) FROM t0, vt1, rt0, vt0, v0 WHERE (IFNULL((('tCD') NOT BETWEEN (x'5397') AND (NULL)), ('571363316' IN ()))); -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)OR(v0.c0)) AS BLOB) FROM vt1 INDEXED BY i37, rt0;SELECT ALL CAST(((vt0.c0)&(rt0.c0)) AS NUMERIC) FROM rt0, vt0, vt1 WHERE (((((0.2501352650087525 COLLATE BINARY)AND(((((NULL)AND('')))OR(x'7145')))))AND(x''))) LIMIT -1551482143 OFFSET -2115054013; -- 0ms;
SELECT DISTINCT (TRIM(NULL) IN ()) FROM vt1, rt0, vt0; -- 0ms;
SELECT ALL ((rt0.c1 COLLATE RTRIM) BETWEEN (((rt0.c2)LIKE(rt0.c1))) AND ((((vt1.c0, vt1.c0, rt0.c2))!=((vt1.c0, t0.c0, vt1.c0))))) FROM rt0, vt0, vt1, t0, v0 WHERE ((((('Zl''K')>>('-1611448616'))) NOT BETWEEN (0.9799770829885411) AND (CASE WHEN NULL THEN x'' ELSE 0.2067272404706897 END))) LIMIT -1879707777; -- 1ms;
SELECT ((t0.c0 COLLATE RTRIM) ISNULL), CAST('p.^l\' AS INTEGER), AVG(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) OVER ( ORDER BY (((rt0.c2)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((vt0.c0 COLLATE NOCASE))) DESC  NULLS FIRST) FROM rt0, v0;SELECT vt1.c0 FROM v0, t0, vt0, rt0;SELECT ALL CUME_DIST() OVER (), ROW_NUMBER() OVER ( ORDER BY (CAST(vt1.c0 AS INTEGER) IN ()) ASC  NULLS FIRST, CAST(((rt0.c0) NOTNULL) AS INTEGER), NULL ASC), ((t0.c35 COLLATE NOCASE) IS TRUE) FROM vt1, vt0, t0, rt0, v0 WHERE ((((((('1973463765')OR(0xffffffffcaa4d064)))OR(x'4204')))==((+ (0.7939399243332423))))); -- 0ms;
SELECT DISTINCT AVG(((rt0.c2)!=(rt0.c1))) FROM vt1, vt0, v0, t0 INDEXED BY i62, rt0;SELECT DISTINCT ((((rt0.c1) NOT NULL))|(LIKELY(DISTINCT v0.c0))), LOWER(CHAR(v0.c0)), (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c0))))|((+ (t0.c0)))) FROM t0, rt0 GROUP BY rt0.c0 HAVING ((((((rt0.c0)<=(rt0.c0)))AND(COUNT(*))))AND(t0.c0 COLLATE RTRIM)) ORDER BY CASE json_array(vt1.c0, rt0.c2, 5.71363316E8, rt0.c0)  WHEN ABS(rt0.c1) THEN ((vt0.c0)<>(t0.c35)) WHEN ((t0.c0)IS NOT(t0.c0)) THEN (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) WHEN CAST(t0.c0 AS REAL) THEN SQLITE_VERSION() END ASC, (((((vt0.c0 IN ()))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c0)|(v0.c0)))) ASC  NULLS LAST;SELECT DISTINCT UNLIKELY(DISTINCT ((rt0.c2) NOT NULL)) FROM vt1;SELECT DISTINCT RANK() OVER ( ORDER BY (((((((v0.c0))<((v0.c0))))AND(((((((((t0.c35)AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(rt0.c1)))))AND(((((NULL)AND(rt0.c0)))AND('w>Z8'))))  NULLS FIRST) FROM v0, vt1;SELECT (CAST(vt1.c0 AS INTEGER) IN ()) FROM vt0, rt0, vt1; -- 0ms;
SELECT LOWER(DISTINCT ((v0.c0)!=('j)'))) FROM v0; -- 0ms;
SELECT ALL rt0.c1 FROM t0, rt0, vt1, vt0 WHERE ((x'0097' IN ())) GROUP BY ((('-478703877' IN (vt1.c0)))<<(NULL COLLATE NOCASE)), vt0.c0, (((((rt0.c0))<=((rt0.c1))))LIKE(TRIM(vt1.c0))); -- 0ms;
SELECT ((LIKELIHOOD(DISTINCT vt0.c0, 0.9875778382990505)) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((t0.c35 IN (vt0.c0)))), MIN(CASE WHEN rt0.c1 THEN t0.c0 END), 0X26f22656 FROM rt0, vt1, v0 NOT INDEXED, t0, vt0; -- 0ms;
SELECT ALL CAST(((vt1.c0) BETWEEN (x'') AND (t0.c35)) AS BLOB) FROM t0, vt0, vt1, v0 ORDER BY ((((((v0.c0) BETWEEN (t0.c35) AND (rt0.c0)))AND(1652898514)))OR(CAST(vt1.c0 AS NUMERIC)));SELECT ((CAST(vt0.c0 AS NUMERIC)) IS FALSE), CAST((v0.c0 IN ()) AS BLOB), ('-1274012359' IN ()) FROM vt0, rt0, vt1, v0, t0; -- 0ms;
SELECT DISTINCT (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c35))))<=(((((0.6229307623379696))<((rt0.c2)))))), DENSE_RANK() OVER (), ((((((t0.c35)%(rt0.c2)))AND(CASE NULL  WHEN t0.c35 THEN vt0.c0 END)))AND(((rt0.c1)OR(t0.c35)))) FROM t0 CROSS JOIN vt1 ON (((((rt0.c2)>(vt0.c0))))=(((t0.c0 IN ())))) INNER JOIN v0 ON CAST((((t0.c35)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS INTEGER) LEFT OUTER JOIN vt0 ON (((~ (rt0.c0)))<=(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) FULL OUTER JOIN rt0 ON (((t0.c35, t0.c35, rt0.c1)) BETWEEN (((+ (rt0.c0)), ((rt0.c2)>>(rt0.c0)), ((v0.c0)IS NOT(0.7090935062640435)))) AND ((rt0.c1, ((t0.c35) NOT BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (rt0.c2, t0.c0))))) ORDER BY vt0.c0;SELECT ALL v0.c0 FROM v0, t0, rt0, vt0, vt1; -- 1ms;
SELECT DISTINCT CAST((((v0.c0))>=((v0.c0))) AS INTEGER), (((vt0.c0)) BETWEEN ((((vt0.c0)/(rt0.c2)))) AND ((((v0.c0)IS NOT(v0.c0))))), CAST(((rt0.c0)<>(-216241769)) AS NUMERIC) FROM v0, vt1 ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM DESC  NULLS LAST, (~ (NULL)) DESC;SELECT CAST(INSTR(x'6b9a', rt0.c1) AS NUMERIC) FROM t0, vt0, v0, vt1 INDEXED BY i37, rt0 WHERE (x'c6f5');SELECT DISTINCT ((((rt0.c1)OR(((t0.c0)<<(rt0.c0)))))AND(TRIM(DISTINCT rt0.c1, t0.c35))) FROM rt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)<<(v0.c0)))AND(CAST(t0.c0 AS REAL))))AND(CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN vt1.c0 WHEN t0.c35 THEN v0.c0 END)), ((((((((MIN(v0.c0))OR((rt0.c1 IN (vt1.c0)))))AND(((v0.c0) NOTNULL))))AND(rt0.c0)))AND(((t0.c0)IS(t0.c35)))), (((('-757745260')AND(((rt0.c1)<>(vt0.c0)))))AND(CASE rt0.c2  WHEN t0.c0 THEN t0.c0 END)) FROM vt0, vt1, t0, v0 WHERE (((TYPEOF('906138196'))-((('1590878508') IS TRUE))));SELECT DISTINCT CAST(vt1.c0 AS REAL) COLLATE RTRIM COLLATE RTRIM FROM vt1 WHERE (((((('-543823564')+('1452039559'))))<=(((((-478703877))>((NULL))))))) LIMIT 115905046 OFFSET 1514634225; -- 0ms;
SELECT LOWER(((t0.c35) NOT NULL)), (((rt0.c1)) BETWEEN ((LIKE(rt0.c1, t0.c35, '-'))) AND ((((v0.c0) IS FALSE)))), COUNT((NOT (rt0.c1))) OVER () FROM t0, vt0, v0;SELECT DISTINCT vt0.c0 FROM rt0, vt1;SELECT ALL ((((CAST(t0.c0 AS INTEGER))OR(CAST('1831850703' AS TEXT))))OR((vt1.c0 IN ()))), ((SUM(t0.c0))*(LIKELIHOOD(DISTINCT vt1.c0, 0.2757070875889883))), ((vt1.c0) ISNULL) COLLATE BINARY FROM v0;SELECT COUNT(((((vt1.c0)AND(rt0.c1)))OR(vt0.c0))) OVER ( ORDER BY CASE WHEN ((rt0.c2) ISNULL) THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2)) ELSE ((-1.478723449E9) NOT BETWEEN (0.12475285225319643) AND (t0.c0)) END DESC, ((((rt0.c0 COLLATE BINARY)AND(x'')))OR(rt0.c2 COLLATE RTRIM))  NULLS LAST) FROM v0 WHERE ((((TRIM('0()X')))<>(('-F' COLLATE RTRIM))));SELECT ALL ((((t0.c35) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>=(SUBSTR(t0.c35, t0.c0))), '', COUNT(*) FROM v0, rt0, vt1, vt0, t0 WHERE ((~ (((x'1a8b') IS FALSE)))); -- 0ms;
SELECT (- (((rt0.c1) NOT BETWEEN (x'f2f0') AND (0.07593697463358695)))), '198331311', ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) COLLATE RTRIM FROM vt0;SELECT (((rt0.c0 IN ()))%(((rt0.c2)%(v0.c0)))) FROM vt1, vt0, rt0, v0, t0 WHERE (CAST(x'' COLLATE BINARY AS BLOB)) LIMIT -1716941344 OFFSET -508021054; -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0) ISNULL)) OVER () FROM v0, t0, vt0 WHERE ((~ ((+ (0.9865884328532869))))) LIMIT 1587010077 OFFSET -1257728717; -- 0ms;
SELECT (((rt0.c1)/(rt0.c1)) IN (((((((((rt0.c2)AND(rt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(rt0.c0)))) FROM vt0, vt1, v0;SELECT (((NOT (vt0.c0))) IS TRUE) FROM vt1, rt0, t0, vt0, v0; -- 0ms;
SELECT DISTINCT NTILE(0.7355295004846085) OVER (), DENSE_RANK() OVER ( GROUPS ((((rt0.c0) IS TRUE)) BETWEEN (((((rt0.c0)AND(vt1.c0)))AND(rt0.c0))) AND ((((t0.c0))=((rt0.c1))))) PRECEDING), CAST(rt0.c2 AS NUMERIC) FROM vt0, rt0, vt1;SELECT (((- (rt0.c0)))OR(TRIM(DISTINCT t0.c0, '-1813763377'))) FROM vt0, vt1, t0, v0 WHERE (x'0917a8ad');SELECT ((((t0.c35 COLLATE NOCASE)OR((((t0.c35, t0.c0, rt0.c2))<=((rt0.c0, vt0.c0, t0.c35))))))OR(GROUP_CONCAT(rt0.c2))) FROM vt0, rt0 WHERE (((NULL COLLATE NOCASE)%('' COLLATE NOCASE)));SELECT DISTINCT ((('', x'', rt0.c1)) NOT BETWEEN ((SUM(vt1.c0), TOTAL(rt0.c2), ((vt0.c0)IS NOT(t0.c0)))) AND ((rt0.c0, ((rt0.c2)>(rt0.c2)), (- (t0.c0))))) FROM vt1, v0, vt0, t0 NOT INDEXED, rt0; -- 0ms;
SELECT ALL CAST(((rt0.c0) ISNULL) AS BLOB) FROM vt0, vt1 GROUP BY (((((((vt1.c0)OR(rt0.c0)))OR(rt0.c0))))=((CASE WHEN vt0.c0 THEN v0.c0 END)));SELECT (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c35)) IN ((rt0.c1 IN (rt0.c2, rt0.c2)), COUNT(t0.c35))) FROM v0, vt0, t0 WHERE (HEX(DISTINCT '571363316') COLLATE RTRIM) ORDER BY (((v0.c0)AND(t0.c35)) IN ()) ASC, (- (t0.c0 COLLATE NOCASE));SELECT DISTINCT COUNT(*) OVER ( ORDER BY 0x5812e6eb DESC, ((((CASE 'd.C⛜ﯘR~|'  WHEN 0.7255428995329836 THEN t0.c35 ELSE v0.c0 END)OR((x'' IN (v0.c0)))))OR(CAST(t0.c35 AS REAL))) DESC) FROM vt1 WHERE (x'979b');SELECT DISTINCT (+ (t0.c35)) COLLATE NOCASE FROM vt1, v0, t0 NOT INDEXED, vt0, rt0 WHERE (CASE '' COLLATE NOCASE  WHEN (+ (x'')) THEN (('K ') NOT BETWEEN (x'') AND (0.04270154628051115)) WHEN (+ ('-442427120')) THEN 0x5616373b COLLATE RTRIM WHEN ((0.5353867593598889)<(NULL)) THEN DATETIME(1.75131591E8, NULL, '1716929476') END); -- 1ms;
SELECT ALL CAST(((((vt1.c0)AND(rt0.c2)))OR(t0.c0)) AS REAL), (((((~ (250823795)))OR(CAST(v0.c0 AS REAL))))AND((+ (rt0.c2)))), v0.c0 FROM vt1, vt0, t0, rt0 WHERE (((((((((((0Xffffffffad0d9b26) NOT NULL))AND((NULL IN ()))))AND((((0X7a14bce9)) NOT BETWEEN ((x'')) AND (('1702275157'))))))AND(CASE WHEN x'' THEN 0X35807fed END)))OR((x'91dc' IN ())))) GROUP BY (NOT (((t0.c35)>(v0.c0)))) HAVING NULL;SELECT ALL v0.c0, '-1611361870', CAST(((rt0.c0)<>(vt0.c0)) AS INTEGER) FROM vt1, v0, vt0, t0 LIMIT 1694262837;SELECT DISTINCT FIRST_VALUE(((((((((((((vt1.c0 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((0.46066649222048306)AND(vt0.c0)))OR(vt0.c0)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(((vt1.c0)OR(vt1.c0)))))OR(((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(vt0.c0 COLLATE BINARY))) OVER () FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN t0.c35 END)/(CAST(t0.c0 AS NUMERIC))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0, vt1 INDEXED BY i37, v0, vt0 WHERE (CAST((0.6478755573925234 IN ()) AS INTEGER));SELECT DISTINCT HEX((~ (''))), GROUP_CONCAT(((vt1.c0)OR(t0.c0))), CASE ((0.3497828005884557) BETWEEN (']U') AND (v0.c0))  WHEN ((x'63e0') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (('966652945') NOT BETWEEN (t0.c0) AND (rt0.c0)) END FROM t0, v0 WHERE (((('-1694196048')) NOT BETWEEN ((((((x'')OR('Z쓿so3*mR')))AND(0xffffffffe7ac2ed3)))) AND ((((((((((NULL)AND(x'')))OR(x'ddd4')))OR('-727554663')))AND('1514634225')))))) GROUP BY ((((((rt0.c1)AND(vt1.c0)))OR(t0.c35)))<>(((((v0.c0)OR(rt0.c0)))OR(t0.c35)))) HAVING ((((rt0.c0) NOTNULL))%('443842486'));SELECT DISTINCT SUM(vt0.c0) FROM rt0, vt0 WHERE ((((x'')) BETWEEN ((CAST(0X77e138a4 AS NUMERIC))) AND (((~ (x'')))))); -- 0ms;
SELECT ALL (((((((((((('䧢 ')OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0)))))AND(CAST(rt0.c2 AS REAL))) FROM vt0, vt1, v0, t0 WHERE (x'') GROUP BY (NOT (vt0.c0));SELECT ALL COUNT(*) OVER () FROM t0, v0, vt0, vt1; -- 0ms;
SELECT ALL NULLIF((t0.c0 IN ()), ((0.22759598755950383) NOT BETWEEN (vt1.c0) AND (rt0.c1))) FROM vt0, v0 WHERE (json_array(x'', -1704840635 COLLATE BINARY));SELECT vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT CASE x''  WHEN 2.048179433E9 THEN ((rt0.c1)>=(t0.c0)) WHEN ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c2) NOT NULL) WHEN CAST(t0.c35 AS TEXT) THEN ((t0.c35)GLOB(vt0.c0)) ELSE ((('1040479472')) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) END FROM v0, t0, rt0, vt1;SELECT ALL 0.14564336756766738 FROM t0, rt0, vt1, vt0 WHERE (((((NULL) NOT NULL))<<(0.20130239340191192))); -- 0ms;
SELECT ALL rt0.c2 FROM v0, vt1, vt0, rt0, t0 LIMIT -1404609710; -- 1ms;
SELECT DISTINCT (((v0.c0 IN ()))<(((t0.c0)%(rt0.c1)))) FROM vt0, rt0, t0, v0, vt1 WHERE (((('' IN ())) IS TRUE)); -- 0ms;
SELECT ((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)) COLLATE NOCASE FROM vt0, rt0, vt1, v0; -- 0ms;
SELECT ALL (- ((((vt0.c0, t0.c35, t0.c35)) BETWEEN ((rt0.c1, v0.c0, vt0.c0)) AND ((rt0.c0, t0.c35, vt0.c0))))), ((CASE rt0.c2  WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c35 THEN rt0.c2 END)>=((((rt0.c0))>((rt0.c1))))), ((rt0.c1)>(((vt1.c0) BETWEEN (t0.c0) AND (rt0.c0)))) FROM rt0 WHERE (0.08874375557003222);SELECT DISTINCT GLOB((((NULL))>=((vt1.c0))), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c35))) FROM t0, rt0, vt0 INDEXED BY i62;SELECT DISTINCT (MIN(rt0.c2) IN ()) FROM vt1, vt0, t0, rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)))<=(((t0.c0)<=(vt1.c0)))) FROM rt0, t0, vt0 WHERE (0.6267735524865957 COLLATE NOCASE);SELECT ALL x'', LEAD(((vt0.c0 COLLATE BINARY)=(CAST(vt0.c0 AS INTEGER))), vt0.c0 COLLATE NOCASE, ((((t0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) OVER (), MAX(((((v0.c0)AND(vt1.c0)))OR(t0.c35))) FROM vt0, t0;SELECT DISTINCT CASE WHEN ((NULL)+(rt0.c2)) THEN ((vt1.c0)<>(rt0.c0)) END, ((CAST(vt1.c0 AS TEXT)) ISNULL), (LIKELIHOOD(v0.c0, 0.9230254721915407) IN (((t0.c35) NOT NULL))) FROM rt0;SELECT DISTINCT ((((vt1.c0)OR(rt0.c0)))AND(rt0.c1)) COLLATE NOCASE FROM v0, vt1, vt0, rt0 WHERE ((((((3.07188578E8)) BETWEEN ((0.13877918470780892)) AND ((NULL)))) IS TRUE)); -- 0ms;
SELECT ALL 0.6997115678258881 FROM vt0 WHERE ((~ (((0xffffffffbe7586c0) NOT NULL)))); -- 1ms;
SELECT DISTINCT COUNT(json_array(rt0.c1, v0.c0)) FROM vt0;SELECT UNICODE(x'') FROM vt1, rt0, vt0, v0, t0 WHERE (((NULL)&(((0.22533186698051177) BETWEEN (0.6239413469751132) AND (x'1e73'))))); -- 0ms;
SELECT CAST(((rt0.c1)<=(vt1.c0)) AS REAL) FROM t0, vt0 INDEXED BY i37, vt1;SELECT DISTINCT t0.c35 FROM rt0 WHERE ((NULL IN ()) COLLATE RTRIM);SELECT DISTINCT ((((t0.c0)OR(COUNT(*))))OR(ABS(vt1.c0))) FROM rt0, t0 WHERE ((((''))>=((CASE '1308437204'  WHEN 0.00508481831606189 THEN '{U' ELSE x'' END)))) ORDER BY '0.2841276102144751';SELECT DISTINCT (((x'', (rt0.c2 IN ()), ((rt0.c2)<(rt0.c0))))>=((((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))OR(x'32b2')))AND(rt0.c0)), CAST(t0.c0 AS TEXT), CASE WHEN 0.7426683760020043 THEN v0.c0 ELSE t0.c35 END))), (((rt0.c0)|(t0.c35)) IN (CAST(vt0.c0 AS TEXT))), ((((t0.c0)>>(vt1.c0))) BETWEEN (((vt0.c0)>=(v0.c0))) AND (CAST('362400112' AS NUMERIC))) FROM rt0, vt0 LIMIT -1130167195;SELECT ALL -1.94078212E8, (vt0.c0 COLLATE BINARY IN ()), HEX(DISTINCT ((vt0.c0)+(t0.c35))), AVG((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((x'')))) OVER (), vt0.c0 FROM v0, t0, rt0 INNER JOIN vt1 ON (((rt0.c0)==(vt1.c0)) IN ()) INNER JOIN vt0 ON ((((((((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND((((t0.c0, rt0.c2, t0.c35, v0.c0, rt0.c2)) NOT BETWEEN ((t0.c0, vt0.c0, 0xffffffffc24b562b, rt0.c1, v0.c0)) AND ((NULL, 1.543606961E9, '', t0.c0, rt0.c1))))))OR(((v0.c0) IS TRUE))))AND(TYPEOF(v0.c0))))OR((vt0.c0 IN (280060229)))) WHERE (CAST(((((x'')AND('605710124')))AND('Yy')) AS BLOB)) GROUP BY (~ ((((t0.c35))>((rt0.c2))))) HAVING TRIM(DISTINCT v0.c0 COLLATE RTRIM, ((t0.c0)|(vt0.c0))) ORDER BY ((((rt0.c2)IS NOT(t0.c0))) NOT BETWEEN ((x'' IN ())) AND (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), ((UPPER(rt0.c2))>(rt0.c1 COLLATE RTRIM)) LIMIT -25307849 OFFSET 912340985; -- 0ms;
SELECT rt0.c1 FROM rt0 WHERE (0.15448799143455783); -- 0ms;
SELECT CASE WHEN ((((((((v0.c0)OR(t0.c35)))AND(t0.c35)))OR(rt0.c1)))OR(vt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) END FROM t0, vt0, rt0 WHERE (UNICODE(((x'c941') NOTNULL)));SELECT DISTINCT (((SUM(t0.c35)))>=((((((rt0.c1)AND(vt0.c0)))OR(vt0.c0))))) FROM vt0, t0;SELECT CASE WHEN ((((rt0.c1)AND('4')))AND(vt0.c0)) THEN QUOTE(vt1.c0) END FROM vt1, vt0, v0, t0, rt0; -- 0ms;
SELECT CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY FROM vt0, vt1 WHERE ('665205888') ORDER BY rt0.c1  NULLS FIRST;SELECT ALL ((((((x'') NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(NULL)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)), CAST(COUNT(vt1.c0) AS TEXT), SUM(((t0.c35)OR(v0.c0))) OVER () FROM vt1, rt0, t0 WHERE (CASE WHEN NULLIF(DISTINCT NULL, x'') THEN '-126361867' COLLATE RTRIM WHEN ((0.22328878545690012)==('<?rz')) THEN ((NULL) BETWEEN ('') AND (0.882390361477953)) WHEN (~ (0xfffffffff92be58b)) THEN ((('', '446272577', '1627858012'))==((1590878508, '-984974780', '?\n'))) ELSE (('-957459878')/(x'')) END) GROUP BY vt1.c0, ((((0.20100266733331862)AND((+ (vt1.c0)))))OR(((((((((rt0.c1)OR(rt0.c2)))OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c0)))), (((((((((+ (rt0.c0)))AND((- (rt0.c2)))))AND((rt0.c0 IN (rt0.c1, vt0.c0)))))AND(CASE vt1.c0  WHEN v0.c0 THEN t0.c35 ELSE vt0.c0 END)))AND(CASE vt0.c0  WHEN t0.c0 THEN NULL END)) LIMIT 653403734;SELECT ALL ((CAST(rt0.c0 AS REAL))%(v0.c0)), LEAD(LIKELIHOOD(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), 0.15644369244109213), (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((NULLIF(DISTINCT vt0.c0, vt0.c0))+((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, NULL, vt0.c0)))))) OVER ( ROWS rt0.c1 PRECEDING EXCLUDE NO OTHERS), ((((((v0.c0)OR(rt0.c1)))AND(rt0.c2))) IS TRUE) FROM vt0;SELECT DISTINCT ((+ (t0.c35)) IN ()), COUNT(*) OVER (), ((rt0.c1 COLLATE BINARY) NOT NULL) FROM vt0, vt1, rt0, t0, v0 WHERE (((0.21723759358590133)>(UNICODE(NULL)))); -- 0ms;
SELECT DISTINCT (CAST(t0.c0 AS TEXT) IN ()) FROM rt0, vt0; -- 0ms;
SELECT CASE WHEN '-676702275' THEN NULL WHEN CAST(t0.c35 AS INTEGER) THEN (v0.c0 IN (rt0.c2)) WHEN ((vt1.c0) ISNULL) THEN CAST(vt1.c0 AS BLOB) END, ((v0.c0)OR(rt0.c0)) COLLATE RTRIM, rt0.c1 FROM t0, rt0, vt0, vt1, v0 WHERE ((+ (TRIM(x'bab793cb')))) LIMIT 1593368901 OFFSET -118714060; -- 1ms;
SELECT (CAST(vt0.c0 AS BLOB) IN (('' IN (rt0.c0, 0.8134418824539654)))) FROM v0 INNER JOIN t0 ON (((vt1.c0 IN (v0.c0, t0.c35)))|(CAST(rt0.c0 AS REAL))) WHERE (json_array(CAST('665205888' AS TEXT), 0.26392523566101045 COLLATE BINARY));SELECT DISTINCT ((LIKE(rt0.c0, t0.c0, '1')) IS FALSE) FROM t0, v0, vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT x'' FROM vt0, t0 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT (((0X10962b79, x'6524', ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))))==((rt0.c2, ((rt0.c2)<=('750481041')), ((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0))))) FROM v0, t0, vt0 INDEXED BY i37 WHERE (((((0.424518588203628) ISNULL))||(((((NULL)AND(x'')))AND('XS2篱l?\r>'))))) GROUP BY (((NOT (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c0)IS NOT('-2061558268'))));SELECT ALL (((- (x'99885a40')))AND(rt0.c0)), (~ ((((vt1.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))), (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0))))=((NOT (rt0.c2)))) FROM v0, t0, vt1, vt0 WHERE ((('1060452957' COLLATE NOCASE) NOT NULL));SELECT CAST(((rt0.c1) BETWEEN (v0.c0) AND (0X1d7c26dc)) AS INTEGER), t0.c0, CAST(UPPER(DISTINCT t0.c35) AS REAL) FROM v0, t0 WHERE (UNLIKELY(CAST(0.9124326131612479 AS INTEGER)));SELECT DISTINCT NULL FROM rt0, vt0, t0 WHERE (SQLITE_VERSION()) GROUP BY (((t0.c35 IN (rt0.c2)))IS(((x'1a49')&(v0.c0)))) HAVING ((((rt0.c1)-('1674751853'))) BETWEEN ((rt0.c0 IN ())) AND (COUNT(*)));SELECT ALL LENGTH(rt0.c2) COLLATE NOCASE, ((((v0.c0)OR(rt0.c1)))*(((t0.c0)>>(rt0.c1)))), ((COUNT(*)) ISNULL), ((((t0.c35) NOTNULL))|(((t0.c0) IS TRUE))), PERCENT_RANK() OVER ( PARTITION BY (v0.c0 IN ()) COLLATE BINARY, CASE ((t0.c0) IS TRUE)  WHEN (t0.c35 IN (rt0.c2)) THEN ((rt0.c1)%(x'edbe')) END) FROM v0, vt0 WHERE ((NOT (((0.5348315028902397)==(NULL)))));SELECT ALL ((((rt0.c2) NOTNULL))/(CASE t0.c35  WHEN rt0.c2 THEN v0.c0 ELSE t0.c0 END)) FROM vt1, vt0, v0, t0 WHERE (((((('Mc') NOT BETWEEN (NULL) AND (x''))))>=((((((NULL)AND(NULL)))OR(0.528080024793703)))))) GROUP BY NULL ORDER BY ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((NOT (rt0.c0)))))OR(((rt0.c0) NOTNULL))) DESC;SELECT DISTINCT rt0.c1 FROM v0, rt0, vt1 WHERE (((((NULL) ISNULL))LIKE(LIKELY(0.4890208706532808)))); -- 0ms;
SELECT DISTINCT ((1674751853) ISNULL) FROM vt0, v0 GROUP BY vt1.c0 HAVING ((CAST(vt0.c0 AS INTEGER))%((rt0.c0 IN ())));SELECT '*N 煍L', MIN(COUNT(t0.c35) COLLATE RTRIM), NTH_VALUE(TRIM(DISTINCT ('1674751853' IN ())), ((t0.c0)+(v0.c0)) COLLATE RTRIM) OVER () FROM t0, vt0, v0;SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((((t0.c35)AND(t0.c0)))AND(vt1.c0))), CAST((((vt0.c0, t0.c35, vt1.c0))>((rt0.c1, v0.c0, v0.c0))) AS INTEGER), ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((+ (rt0.c0))) AND (ABS(rt0.c1))) FROM vt1;SELECT ALL SUM((((vt1.c0, t0.c0, t0.c0))<((v0.c0, '-1410644007', t0.c0)))) OVER (), TOTAL(CAST(rt0.c2 AS REAL)) OVER (), CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN '0.8603298594845026' WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END THEN x'' WHEN CAST(rt0.c0 AS BLOB) THEN TOTAL(vt1.c0) WHEN CAST(rt0.c2 AS NUMERIC) THEN t0.c0 ELSE CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN t0.c0 END END FROM t0, vt0, vt1, rt0 WHERE (((CAST('l\nzx{i煪/#' AS TEXT)) NOT BETWEEN (CASE 0.24122679701939487  WHEN 1.000606541E9 THEN '0' WHEN NULL THEN x'' WHEN '198331311' THEN x'' ELSE '1385412431' END) AND (MIN(x'', 0.006262880811229943, '1766991285', '1441623820'))));SELECT DISTINCT CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM FROM vt0 WHERE ((((((((('439234305')AND(('' IN ('*麰jtqm')))))AND((((x'015e7d5e')) BETWEEN ((0x171cc944)) AND ((NULL))))))OR((NOT (NULL)))))OR('&D')));SELECT CAST(CASE WHEN rt0.c1 THEN '' ELSE vt1.c0 END AS REAL), (0.7528527447058231 IN (vt0.c0 COLLATE NOCASE)), ((((rt0.c0) BETWEEN (vt1.c0) AND (t0.c35)))>=(CAST(vt0.c0 AS TEXT))) FROM vt1 WHERE (CAST(CASE '1297170518'  WHEN '*d{|26~줄' THEN NULL ELSE '' END AS TEXT));SELECT (((rt0.c2)) NOT BETWEEN ((((rt0.c1)>>(rt0.c2)))) AND ((x''))), t0.c35 COLLATE RTRIM, '6vcV' FROM t0, vt1, vt0, v0, rt0 WHERE (CAST(' FN&' AS INTEGER) COLLATE BINARY) LIMIT 1765224523; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt1, t0, vt0, v0 GROUP BY (((((vt1.c0))>((rt0.c2)))) BETWEEN (DATE(rt0.c0, v0.c0, t0.c35)) AND (rt0.c1 COLLATE NOCASE)) HAVING ((((vt0.c0)/(v0.c0))) ISNULL);SELECT ((((((('TCD')) BETWEEN ((t0.c0)) AND ((rt0.c0))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0, t0, v0, vt1;SELECT ALL CAST(rt0.c0 AS NUMERIC) FROM t0, vt0, vt1, v0, rt0 LIMIT -1235858335; -- 0ms;
SELECT DISTINCT CASE ((rt0.c1)>>(rt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN 0x228bebbb END FROM v0 WHERE (((0.1014519651691651)LIKE('!3')) COLLATE BINARY);SELECT DISTINCT (((NOT (x'')))<=(((((0.20708482562267094)AND('7a/')))OR(vt0.c0)))) FROM v0, vt1;SELECT DISTINCT ((TRIM(DISTINCT vt1.c0)) NOT NULL), '1625246985', ((vt0.c0 COLLATE RTRIM)OR((- (v0.c0)))) FROM rt0 WHERE ((((LIKELY(NULL)))<=((((((0.8515604274297727)OR('30816429')))AND(0.5547686506679437)))))) EXCEPT SELECT ALL ((t0.c35 IN ()) IN ()), x'', SUM((((rt0.c0))>((vt1.c0)))) OVER () FROM v0, rt0 CROSS JOIN t0 ON ((CAST(vt1.c0 AS TEXT))<=(CAST(t0.c0 AS NUMERIC))) INNER JOIN vt1 ON (((((((rt0.c2))>((t0.c35))))AND((t0.c35 IN ()))))AND(rt0.c0 COLLATE NOCASE)) ORDER BY t0.c35, ((((v0.c0)GLOB(t0.c0)))<((vt1.c0 IN ())))  NULLS FIRST;SELECT ALL ((vt1.c0) NOT BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN t0.c35 ELSE vt0.c0 END) AND (IFNULL(rt0.c0, t0.c35))) FROM v0;SELECT DISTINCT ((vt1.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE RTRIM COLLATE BINARY FROM vt1, t0, rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(((v0.c0)<(rt0.c2)) AS REAL), HEX((rt0.c1 IN ())), ((rt0.c1)+(((((((((((((t0.c35)OR(rt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(0.3455916501526962)))) FROM t0, vt0 WHERE ((((((0.253879084522995 IN (NULL)))OR((~ (0.761923516571588)))))OR(('''<' IN ()))));SELECT DISTINCT SQLITE_SOURCE_ID() FROM t0, vt1, rt0; -- 0ms;
SELECT ALL GROUP_CONCAT((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) OVER () FROM vt1, v0, t0, rt0 WHERE (((CASE 0.28573852564363766  WHEN -1.26117334E8 THEN ' hj3/' END)>=(CASE WHEN 0.656735257343848 THEN NULL ELSE x'' END)));SELECT DISTINCT CAST(((t0.c35) IS FALSE) AS TEXT) FROM t0, vt0 ORDER BY (CAST(t0.c35 AS NUMERIC) IN ()); -- 0ms;
SELECT MAX(AVG(((v0.c0)<>(rt0.c2)))) FROM v0, vt1, vt0, rt0, t0 GROUP BY ((((((((((((((((((((x'')AND(v0.c0)))AND(NULL)))AND(rt0.c2)))AND(t0.c0)))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN v0.c0 THEN t0.c35 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN t0.c35 END)))OR(((rt0.c1) NOT NULL))))OR(CAST(rt0.c0 AS NUMERIC))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))))AND(NULL));SELECT DISTINCT ((((vt1.c0)<<(vt0.c0))) NOTNULL) FROM rt0, t0, vt0 WHERE (((((0.68719665634698)||(3.38083125E8)))|(CASE '-239577914'  WHEN 0.5984408912842413 THEN NULL WHEN 0X53104ad9 THEN -1647253437 WHEN '}|' THEN NULL ELSE x'' END)));SELECT DISTINCT (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1))))==((vt1.c0))) FROM vt0, v0, rt0, t0;SELECT DISTINCT COUNT(CAST(rt0.c0 AS INTEGER)), PRINTF(CAST(vt0.c0 AS BLOB), CAST(rt0.c2 AS REAL), (v0.c0 IN ())), LIKELY(DISTINCT rt0.c2 COLLATE NOCASE) FROM rt0, vt0; -- 0ms;
SELECT CAST(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS REAL), (((((1e500)OR('')))AND(t0.c0)) IN ()), (TYPEOF(DISTINCT v0.c0) IN ()) FROM vt0, t0, rt0, vt1, v0; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) COLLATE RTRIM FROM t0 WHERE (((((CAST(x'e4ce' AS INTEGER))AND('1917020295')))OR(((NULL) BETWEEN ('') AND (0.49846675681024555))))) GROUP BY (((t0.c35)) NOT BETWEEN (((rt0.c2 IN (vt0.c0)))) AND ((((rt0.c1)%(vt0.c0))))), x'' COLLATE NOCASE, CASE (((x'', rt0.c0, t0.c35)) BETWEEN ((v0.c0, t0.c0, vt1.c0)) AND ((rt0.c1, rt0.c1, vt0.c0)))  WHEN ((v0.c0)>>(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((v0.c0)LIKE(x'495d')) END;SELECT ALL SUM(CAST(v0.c0 AS INTEGER)) OVER ( PARTITION BY CASE ((rt0.c0)==(x'8da1'))  WHEN t0.c35 COLLATE BINARY THEN (~ (v0.c0)) END, ((((t0.c0) IS FALSE)) NOT BETWEEN ((~ (v0.c0))) AND ((~ (rt0.c1)))) RANGE ((1884240196)OR(((vt0.c0) NOT NULL))) PRECEDING EXCLUDE GROUP), '-1761003128', (((CAST(rt0.c1 AS INTEGER)))!=((((rt0.c0) BETWEEN (vt0.c0) AND ('307188578'))))) FROM v0;SELECT DISTINCT MAX(vt0.c0) FROM v0 WHERE ((((((((((((((((('-2119110861')AND(0.23796091887970816)))AND(0.1972511576628312)))AND(1.715777206E9)))OR(NULL)))AND(((0.23664300724298382)IS(-1.946918777E9)))))AND(CAST('0.2841276102144751' AS BLOB))))AND(QUOTE(x''))))OR('\nr,a1'))) ORDER BY (((+ (vt0.c0)))>>(CASE WHEN t0.c0 THEN 0Xffffffffbe310e05 WHEN t0.c35 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))  NULLS FIRST, 0x5ce7c948;SELECT DISTINCT ((LIKELY(v0.c0)) BETWEEN (((rt0.c2)=(vt0.c0))) AND (rt0.c2)) FROM vt0, t0, rt0, vt1, v0 WHERE (json_extract(NULL COLLATE NOCASE, CAST('nob#㵹Wv' AS TEXT))); -- 0ms;
SELECT ALL ((((rt0.c1)<<('䱡bG]zU'))) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((('-1446312738')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM v0 WHERE (((NULL) BETWEEN (0X762eb582) AND (NULL)) COLLATE RTRIM);SELECT ALL '''p*TBR42' FROM rt0, vt1, vt0; -- 1ms;
SELECT DISTINCT AVG(rt0.c0) OVER (), (((((x'0356')) NOT BETWEEN ((rt0.c1)) AND (('tZ')))) NOT BETWEEN (ABS(t0.c35)) AND (((vt1.c0) NOT NULL))), ((CASE WHEN t0.c0 THEN rt0.c2 WHEN vt1.c0 THEN NULL WHEN 0.5798661739563429 THEN t0.c35 END)GLOB(LIKELIHOOD(rt0.c1, 0.5351116578931666))) FROM vt0, rt0, vt1, t0; -- 0ms;
SELECT (((((('w67P\俴') NOTNULL))AND((- (0X5da37079)))))AND(COUNT(*))), ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(CASE t0.c0  WHEN vt0.c0 THEN '䱡cG]zU' END)))AND('')), 0.9700283381780376 FROM t0, vt0, v0, rt0;SELECT DISTINCT CAST(((('162434276', t0.c0, rt0.c1))>((vt0.c0, x'', rt0.c2))) AS INTEGER), ((t0.c35)=(((((((((t0.c35)OR(v0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(vt1.c0)))), MIN(rt0.c2) FROM vt0, t0, rt0;SELECT DISTINCT LEAD(((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))), x'3c75', (NOT (vt1.c0)) COLLATE NOCASE) OVER (), (((LTRIM(rt0.c1)))>=((COUNT(*)))), ((CASE rt0.c2  WHEN t0.c0 THEN '-2101779446' ELSE NULL END) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (v0.c0 COLLATE RTRIM)) FROM vt1;SELECT DISTINCT (((((((((NOT (t0.c35)))OR((((t0.c0, rt0.c0, vt1.c0)) BETWEEN ((rt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c1, vt1.c0, v0.c0))))))AND(TIME(rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0))))AND(((((v0.c0)AND('-727554663')))OR(rt0.c2)))))OR(x'')) FROM rt0, t0, v0;SELECT DISTINCT ((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))||(CASE t0.c35  WHEN t0.c0 THEN vt1.c0 ELSE t0.c35 END)) FROM v0 LIMIT -503881903;SELECT DISTINCT FIRST_VALUE(((CASE rt0.c1  WHEN 0.6359154908837646 THEN '1208235683' ELSE rt0.c0 END)==(CAST(t0.c0 AS NUMERIC)))) OVER () FROM t0, vt1, vt0, rt0 WHERE ((((((0.8051255542892062))>((-1930845027))))+((+ ('105039434'))))); -- 0ms;
SELECT ((((v0.c0)OR(vt0.c0 COLLATE NOCASE)))AND((((((((('xb7AB i')OR(0X642c64a)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))), HEX(vt0.c0), (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) IN (rt0.c1, CAST(rt0.c1 AS REAL))) FROM rt0, t0, vt1, vt0;SELECT DISTINCT LIKE(((t0.c35)IS NOT(t0.c0)), (((rt0.c0, 0xffffffffa0c9a50e, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((vt0.c0, vt1.c0, t0.c0)))) FROM vt0 WHERE ((NOT (((('*X09i', 0.6176103787458794, x'53b68254')) BETWEEN ((NULL, '-478703877', 0.7655247511762636)) AND ((1.543606961E9, '-1120247820', NULL))))));SELECT DISTINCT MIN(CASE rt0.c2  WHEN t0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN '	&' ELSE vt1.c0 END), SUM(CAST(vt0.c0 AS BLOB)) OVER (), ((((UPPER(DISTINCT t0.c35))AND(((rt0.c0) NOT BETWEEN ('1766991285') AND ('137379659')))))OR(MIN(rt0.c2))) FROM rt0, vt1, v0 ORDER BY ((t0.c0)GLOB(((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c1)))) ASC  NULLS LAST;SELECT DISTINCT ((rt0.c1)%(rt0.c2)) COLLATE RTRIM, CASE WHEN COUNT(vt1.c0) THEN (v0.c0 IN (0.9401743654651192)) WHEN UNICODE(rt0.c2) THEN 0.712492920726818 WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c2) IS FALSE) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END END, ((0Xffffffffc05c30be)GLOB(((t0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) FROM rt0, v0, vt0, vt1, t0 GROUP BY (- (0.11116989047240111)) HAVING (((((vt1.c0) NOTNULL), (((vt1.c0))=(('??'))), ((v0.c0)==(x''))))<>((SQLITE_COMPILEOPTION_GET(v0.c0), ((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)), MIN(rt0.c0)))); -- 1ms;
SELECT ALL (- (CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 END)), SUM(CASE rt0.c1  WHEN t0.c35 THEN t0.c35 ELSE rt0.c2 END) FILTER(WHERE CASE ((t0.c35) NOTNULL)  WHEN ((v0.c0)LIKE(t0.c0)) THEN CAST(rt0.c2 AS BLOB) ELSE HEX(rt0.c1) END) OVER (), NULLIF(0.5936283672393362, CAST(t0.c0 AS INTEGER)) FROM vt0, vt1, v0 WHERE (((((CASE x''  WHEN 'N' THEN 0.40437422484099594 ELSE '-478703877' END)OR(NULL)))OR('1452039559')));SELECT ((((((((x'')AND(t0.c35)))AND(((t0.c35) ISNULL))))AND(CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c35 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN '969747693' WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN x'' END)))OR(TRIM(DISTINCT rt0.c2))) FROM t0, v0, vt1, vt0 NOT INDEXED WHERE (((((((((((((NULL)AND(x'')))AND('')))AND(0.6087703338130924)))OR(x'')))AND(((NULL)>=(NULL)))))AND((~ (-1471138233))))) ORDER BY ((((CASE v0.c0  WHEN rt0.c1 THEN t0.c35 ELSE vt1.c0 END)OR(((t0.c0)IS NOT(vt1.c0)))))AND(rt0.c1))  NULLS FIRST, vt0.c0  NULLS LAST;SELECT DISTINCT (((LENGTH(rt0.c2), ((rt0.c0) BETWEEN (vt1.c0) AND (t0.c35)), ((rt0.c1)+(vt0.c0))))>=(((((t0.c0))<>((v0.c0))), SQLITE_SOURCE_ID(), ',e.RrD>4'))) FROM vt1, vt0;SELECT FIRST_VALUE(COALESCE(DISTINCT (((vt1.c0))>=((vt1.c0))), (- (vt1.c0)))) OVER ( ORDER BY vt0.c0 ASC) FROM vt1;SELECT DISTINCT AVG(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) FROM rt0, vt0, vt1, v0, t0; -- 0ms;
SELECT v0.c0, CAST((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS BLOB), TOTAL((((vt1.c0))=((rt0.c0))) COLLATE NOCASE), ((rt0.c1) NOT NULL), ((COALESCE(DISTINCT rt0.c2, t0.c35))>=(((t0.c35)>=(rt0.c0)))) FROM vt0, t0 WHERE (((('tlg䰹st|}')) NOT BETWEEN (((('>')<<(0.13913243166232647)))) AND ((x''))));SELECT DISTINCT MAX(json_insert(v0.c0, 'ZVog4', rt0.c2)), CASE (((rt0.c2))>((vt0.c0)))  WHEN AVG(t0.c0) THEN (((rt0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c1))<((vt1.c0, t0.c0, rt0.c0, rt0.c2, v0.c0))) ELSE rt0.c2 END, x'' FROM rt0 WHERE ((('2002448376')>(0.0836183542688479)) COLLATE RTRIM);SELECT ALL CAST(SUM(rt0.c0) AS BLOB), (+ (((vt0.c0)OR(t0.c0)))), AVG(((t0.c0)IS NOT(t0.c35))) OVER (), LIKELY(DISTINCT rt0.c1 COLLATE RTRIM), (((((~ (vt0.c0)))AND(((((t0.c35)OR(rt0.c0)))OR(t0.c35)))))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) FROM rt0, v0, vt0 LIMIT -1956348329 OFFSET 1274492374;SELECT ALL NULLIF(DISTINCT COUNT(*), MIN(rt0.c1)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((NULL)AND(((((t0.c35)AND(vt0.c0)))OR(rt0.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)))), ((((vt1.c0)%(rt0.c2)))<=(((t0.c0)<(rt0.c1)))), x'1053' FROM vt0, t0, vt1 WHERE ((CAST('1054957026' AS NUMERIC) IN ())) GROUP BY ((((((t0.c35)IS(rt0.c1)))OR((t0.c35 IN ()))))AND(CASE v0.c0  WHEN t0.c0 THEN rt0.c0 ELSE vt0.c0 END)) HAVING ((~ (vt0.c0)) IN (MIN(rt0.c1), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END));SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((1000606541)))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((rt0.c2 IN ()))) FROM vt0, rt0 GROUP BY ((rt0.c0)<<(v0.c0)) COLLATE RTRIM COLLATE NOCASE HAVING (((((rt0.c0) NOT NULL)))!=((x'8192'))) LIMIT 417198195;SELECT ALL (+ (rt0.c1 COLLATE NOCASE)) FROM vt0, rt0 WHERE (((((x'3b0f')>(NULL))) NOTNULL)); -- 0ms;
SELECT ((CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END)) FROM v0, vt1, rt0, vt0 WHERE (((x'' COLLATE RTRIM) NOT BETWEEN ((((x'')) BETWEEN ((0xffffffffaa50b4ef)) AND ((x'6435')))) AND (MAX('0.06300491751121817', x'', '-854572424', 0.2654344048771864)))) ORDER BY (vt0.c0 COLLATE BINARY IN ())  NULLS LAST, vt1.c0  NULLS LAST, ((t0.c35) NOT NULL) COLLATE BINARY  NULLS FIRST;SELECT (((('1577630213')AND(v0.c0)))AND(vt1.c0)) COLLATE RTRIM FROM vt0, rt0 WHERE (CAST((('-2093385560')|(0.027554993718361676)) AS BLOB));SELECT DISTINCT ((t0.c0)GLOB(t0.c0)) FROM rt0, vt0;SELECT ALL MIN(((rt0.c2) BETWEEN (t0.c35) AND (v0.c0))) FROM t0, vt0, vt1;SELECT ((((((((((((t0.c0)OR(t0.c35)))OR(rt0.c1)))AND(rt0.c0)))OR(t0.c0 COLLATE BINARY)))OR((- (v0.c0)))))OR(((t0.c35)||(v0.c0)))), ((((((vt0.c0)AND(rt0.c0)))AND(v0.c0)))/(((((((((v0.c0)OR(rt0.c0)))AND(627692085)))OR(rt0.c0)))AND(rt0.c2)))), ((t0.c0 COLLATE NOCASE)<=(MIN(rt0.c1))) FROM rt0, t0, vt1, vt0;SELECT (CASE WHEN v0.c0 THEN 0.8168789136551647 END IN ()) FROM v0, rt0, vt1 GROUP BY vt0.c0 LIMIT 1441623820 OFFSET -988566293;SELECT DISTINCT (((582773261))!=((((t0.c35) IS TRUE)))), CASE ((((vt0.c0)OR(vt1.c0)))OR(t0.c35))  WHEN ((rt0.c2)!=(vt1.c0)) THEN '' ELSE (((t0.c0, rt0.c0, t0.c0))<=((t0.c35, vt0.c0, rt0.c2))) END, ((((AVG(vt0.c0))AND(((t0.c0)>>(NULL)))))AND(CASE rt0.c0  WHEN t0.c35 THEN rt0.c0 WHEN t0.c0 THEN x'' WHEN rt0.c2 THEN NULL END)) FROM rt0, t0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (((0.9586163916146797)IS(0.7245553659580148))) AND (CASE ''  WHEN x'c083' THEN 0x4ae8778a ELSE '1393576665' END)));SELECT ALL ((rt0.c2)GLOB(CAST(rt0.c0 AS NUMERIC))), ((((CAST(t0.c0 AS INTEGER))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c2) NOT NULL))), CAST(t0.c0 COLLATE BINARY AS REAL), UPPER(t0.c35) COLLATE BINARY, '' FROM t0, rt0, vt1, vt0; -- 0ms;
SELECT LEAD(((((vt1.c0) BETWEEN (t0.c0) AND (t0.c35))) NOT BETWEEN (x'8bb5c87d') AND ((((t0.c0, v0.c0, t0.c0)) NOT BETWEEN ((t0.c35, vt0.c0, t0.c0)) AND ((t0.c35, t0.c0, t0.c0))))), ((((v0.c0))=((vt0.c0))) IN ()), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))AND(CASE vt1.c0  WHEN t0.c35 THEN v0.c0 ELSE vt0.c0 END)))AND((t0.c0 IN ())))) OVER (), COUNT(0.5529813557903666), IFNULL((rt0.c2 IN ()), (NOT (v0.c0))), (- ((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))), CAST(t0.c35 COLLATE RTRIM AS TEXT), vt1.c0, AVG(((rt0.c1)>(vt1.c0))) FROM vt1, v0, t0, vt0;SELECT ((t0.c0) NOTNULL) COLLATE NOCASE FROM vt0, rt0, t0 WHERE ((NOT (((NULL)|(0Xffffffffe136f02b))))); -- 0ms;
SELECT ALL ((((t0.c35) ISNULL))&(((vt0.c0)LIKE(vt0.c0)))) FROM t0, vt0, rt0, v0, vt1 WHERE (((0.35093972928148254) NOTNULL) COLLATE NOCASE) ORDER BY ((((((((t0.c35)OR(t0.c0)))AND(vt0.c0)))AND((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(CAST('?*kh' AS INTEGER))), ((rt0.c2 COLLATE BINARY)&(rt0.c2 COLLATE NOCASE))  NULLS FIRST; -- 0ms;
SELECT (((CAST(t0.c0 AS NUMERIC), (+ (vt0.c0)), SUM(v0.c0)))<((COUNT(rt0.c2), t0.c0, ((vt1.c0)>(rt0.c0))))) FROM vt0, rt0, vt1, v0, t0 WHERE ((((('0.9936543596326611') NOT BETWEEN (0.12002660331155668) AND (NULL))) IS TRUE)); -- 0ms;
SELECT AVG((((t0.c35)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER (), LEAD(ABS((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))), ABS(CAST(vt1.c0 AS TEXT)), ((((vt1.c0)>(vt1.c0)))<(((vt1.c0)IS(vt1.c0))))) OVER ( ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) ASC, ((TYPEOF(DISTINCT vt1.c0))/((t0.c0 IN ()))), ((('', rt0.c1, 0.5750693645218125)) BETWEEN ((((vt0.c0) IS FALSE), rt0.c1, LIKELY(DISTINCT vt0.c0))) AND ((((vt0.c0) IS TRUE), ((vt1.c0)%(vt0.c0)), ((rt0.c2)|(rt0.c2)))))), x'' FROM vt1 GROUP BY LOWER(CAST(t0.c0 AS TEXT)) ORDER BY CASE v0.c0  WHEN vt1.c0 THEN NULL END COLLATE BINARY  NULLS FIRST;SELECT DISTINCT NTILE(((CASE WHEN vt1.c0 THEN vt1.c0 END)GLOB((vt1.c0 IN (vt1.c0))))) OVER () FROM t0, vt1;SELECT ALL DENSE_RANK() OVER (), ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c35))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))) AND (NULL)), (CAST(vt1.c0 AS REAL) IN ()), (+ (CASE WHEN t0.c0 THEN t0.c35 WHEN rt0.c1 THEN t0.c0 WHEN NULL THEN rt0.c1 ELSE vt1.c0 END)), HEX(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) FROM vt0, rt0 WHERE ('?I' COLLATE RTRIM COLLATE RTRIM COLLATE BINARY);SELECT (((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0)) IN (((t0.c35)||(rt0.c2)), rt0.c2)) FROM t0, v0, vt1;SELECT CASE CASE WHEN t0.c0 THEN t0.c35 WHEN t0.c35 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END  WHEN rt0.c1 COLLATE BINARY THEN (- (rt0.c1)) WHEN COUNT(NULL) THEN CAST(vt0.c0 AS TEXT) WHEN CASE NULL  WHEN t0.c35 THEN vt0.c0 ELSE t0.c0 END THEN (t0.c35 IN ()) END, ((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 END) IS FALSE), (((((v0.c0, vt1.c0, x'', rt0.c0, rt0.c0))!=((vt1.c0, vt0.c0, t0.c35, vt1.c0, rt0.c2)))) IS TRUE), ((((((vt1.c0)%(rt0.c2)))OR(AVG(t0.c35))))OR(1.375661772E9)), ((((vt0.c0)OR(vt1.c0))) NOTNULL), CASE WHEN ((vt0.c0)IS NOT(t0.c0)) THEN COUNT(*) WHEN CASE WHEN rt0.c1 THEN vt1.c0 END THEN rt0.c2 WHEN TYPEOF(t0.c0) THEN ((rt0.c0) IS TRUE) ELSE SUM(NULL) END, ((((rt0.c2)||(t0.c0)))IS(load_extension('', vt1.c0))) FROM vt1, v0, vt0, rt0 WHERE (x'');SELECT DISTINCT CASE WHEN ((v0.c0)|(rt0.c1)) THEN ((((v0.c0)AND(rt0.c2)))AND(v0.c0)) END FROM rt0, v0 WHERE ((((((((((((((('-743062092')OR(0.309527302733276)))AND('966652945')))OR(0.3757623216315942)))AND('Wꡕ')))AND(']U')))AND(-2003243320)))*(x''))); -- 0ms;
SELECT DISTINCT HEX(DISTINCT '') FROM v0, vt1, rt0 WHERE (CAST((((('665205888')AND(NULL)))AND('-1303444300')) AS TEXT)); -- 0ms;
SELECT ALL (((((((((((rt0.c1, rt0.c2, t0.c0)) BETWEEN ((vt0.c0, vt1.c0, '')) AND ((t0.c0, vt1.c0, t0.c35))))OR(((vt1.c0)>(vt1.c0)))))OR(AVG(rt0.c1))))AND(((t0.c35) IS FALSE))))AND(((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) FROM v0, t0, rt0, vt1, vt0; -- 1ms;
SELECT ((((t0.c35)AND(MAX(rt0.c0))))AND(((rt0.c2)&(vt1.c0)))) FROM vt0, v0, vt1, t0 WHERE ((((-1.694196048E9 IN ()))<('J瓙uz\ow{' COLLATE BINARY))) ORDER BY NULL  NULLS FIRST;SELECT DISTINCT CAST((((v0.c0))<>((t0.c35))) AS BLOB) FROM v0 INDEXED BY i62, vt1, t0, rt0 GROUP BY v0.c0 LIMIT -2119110861 OFFSET 2053801785;SELECT ALL vt1.c0, (((((((((rt0.c1 IN (v0.c0)))AND(((t0.c0) NOTNULL))))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(((((((((0.9985853380437765)AND(vt1.c0)))AND(t0.c35)))OR(rt0.c2)))AND(rt0.c2)))))OR(((vt0.c0)GLOB(rt0.c2)))), SUM(CASE rt0.c0  WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN vt1.c0 WHEN t0.c35 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) OVER ( ORDER BY ((((((((rt0.c1)OR((vt1.c0 IN (rt0.c1)))))OR((t0.c35 IN ()))))AND(CASE v0.c0  WHEN rt0.c1 THEN v0.c0 END)))AND(CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN '362400112' WHEN vt1.c0 THEN t0.c0 ELSE rt0.c0 END)) ASC  NULLS FIRST RANGE  UNBOUNDED PRECEDING) FROM v0, vt1, rt0, vt0, t0 ORDER BY ((load_extension(vt1.c0)) NOT BETWEEN (CASE v0.c0  WHEN '鵰teQJ' THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN t0.c35 END) AND (COALESCE(rt0.c0, t0.c35, vt1.c0, t0.c0))), CAST(t0.c0 AS TEXT) COLLATE NOCASE  NULLS LAST, (((((vt1.c0)IS(0.7990589400362962))))<=((t0.c35 COLLATE BINARY)));SELECT DISTINCT ((((rt0.c1) BETWEEN ('1674751853') AND (t0.c35))) NOTNULL) FROM t0, vt0, v0;SELECT DISTINCT (t0.c35 COLLATE NOCASE IN ((t0.c35 IN ()), v0.c0)), ((CAST(rt0.c2 AS NUMERIC)) IS TRUE), (CASE WHEN vt1.c0 THEN v0.c0 END IN ()) FROM t0, vt0;SELECT DISTINCT CASE WHEN vt0.c0 THEN ((((((((v0.c0)AND(vt0.c0)))OR('-1930845027')))AND(rt0.c0)))OR(t0.c0)) WHEN ((rt0.c1) IS TRUE) THEN (~ (vt1.c0)) WHEN CAST(rt0.c0 AS NUMERIC) THEN (((t0.c35))==((x'e2b5c01f'))) ELSE LOWER(t0.c0) END, ((((-1.467561847E9)OR(((t0.c35)=(t0.c35)))))AND(((((((((rt0.c0)OR(v0.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(v0.c0)))), '1385412431' FROM vt0, v0, vt1;SELECT ALL GROUP_CONCAT(CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN vt0.c0 END) OVER () FROM v0, vt1, vt0, t0, rt0 WHERE (((0.9376274784845823)IS(NULL)) COLLATE BINARY) LIMIT 1917020295; -- 0ms;
SELECT ALL rt0.c1, COUNT(*) OVER ( RANGE (CAST(rt0.c0 AS BLOB) IN ()) PRECEDING), x'184303f2' FROM v0, vt1, vt0;SELECT ALL ((t0.c35)|(t0.c35)) COLLATE RTRIM, rt0.c1, ((t0.c35)AND(((t0.c35) IS TRUE))) FROM v0, rt0 ORDER BY CAST(t0.c35 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, (((NOT (rt0.c0)))LIKE(CAST(rt0.c2 AS TEXT)))  NULLS LAST, ((((((((((((rt0.c0)OR(CASE WHEN v0.c0 THEN vt1.c0 ELSE rt0.c1 END)))OR((t0.c35 IN ()))))AND((v0.c0 IN (t0.c35)))))AND(SQLITE_SOURCE_ID())))AND(CAST(t0.c35 AS NUMERIC))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((0X5296d870)))));SELECT DISTINCT (~ ((rt0.c1 IN ()))), COUNT(*) OVER (), ((((vt1.c0) IS FALSE)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((vt1.c0) IS FALSE))) FROM vt1, rt0, v0, vt0 WHERE (((((((((CASE 'j\'  WHEN '-1425256620' THEN 0x44d5077d END)AND((((('')OR('Cf)舰rZ')))OR(x'')))))AND((('-1955758015') NOTNULL))))OR(((x'ebb7') BETWEEN (0.46018074188486946) AND (NULL)))))AND(x'd575' COLLATE RTRIM))) LIMIT 1297170518; -- 0ms;
SELECT (((t0.c35, t0.c0, rt0.c1, 'P匩', v0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((UNICODE(vt0.c0), ((rt0.c0)&(vt0.c0)), ((vt1.c0)>>('TQ|\r2Nz]')), MIN(rt0.c0), ((vt0.c0)&(rt0.c1)), NULL, (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((t0.c35)||('Zx')), vt0.c0 COLLATE BINARY, ((t0.c35)+(vt0.c0)), (((rt0.c2)) BETWEEN ((t0.c35)) AND ((rt0.c1))), COUNT(*), LOWER(t0.c35), ((rt0.c1) NOTNULL)))), ((((t0.c0) ISNULL)) ISNULL), CASE x''  WHEN ((rt0.c0)%(rt0.c1)) THEN TIME(vt0.c0, rt0.c1, vt1.c0) END, x'', CASE (((v0.c0, vt0.c0, rt0.c1))>=((rt0.c1, rt0.c1, t0.c0)))  WHEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c2 ELSE ((vt0.c0) ISNULL) END FROM v0, vt0, vt1;SELECT DISTINCT (((((rt0.c2)) NOT BETWEEN ((0.8021640964501314)) AND (('-911452198'))))<=(GROUP_CONCAT(rt0.c2))) FROM vt1;SELECT ((((((((GROUP_CONCAT(v0.c0))AND((rt0.c1 IN ()))))OR(CAST(vt0.c0 AS REAL))))OR(COALESCE(DISTINCT t0.c35, x'c9e1'))))AND(MIN(rt0.c2))), ((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE, CASE WHEN ((NULL)-(t0.c35)) THEN (((t0.c35)) NOT BETWEEN ((t0.c35)) AND ((t0.c35))) WHEN x'' THEN UPPER(rt0.c2) WHEN (rt0.c1 IN ()) THEN (((t0.c0, rt0.c2, vt1.c0))<=((NULL, v0.c0, 0.6397975797356128))) END FROM t0, rt0, vt0, v0 WHERE ((((((((((0.7104094552718058 IN ()))AND(0x780d5cde)))OR(x'' COLLATE NOCASE)))OR(((1446125766) NOT NULL))))AND(((-147698249) ISNULL))));SELECT ALL (((t0.c0) NOT BETWEEN (x'') AND (v0.c0)) IN (NULL)) FROM vt0, vt1 ORDER BY (((x'b8e5')IS NOT(vt1.c0)) IN ((((rt0.c1))<=((rt0.c0))))) ASC, CAST(rt0.c0 AS INTEGER)  NULLS LAST;SELECT DISTINCT MIN((vt1.c0 IN ('-1895164624'))) FROM rt0, vt0, t0, vt1 WHERE (((((((((TRIM(DISTINCT NULL))AND(1.917020295E9)))OR(CASE x''  WHEN 0X204d7a7a THEN NULL WHEN NULL THEN 178014652 WHEN -2.88675088E8 THEN x'' END)))AND(((NULL) IS TRUE))))OR(((x'')*(1820882002))))) ORDER BY '1583644020'  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)!=(NULL)) AS NUMERIC), (((((vt0.c0 IN ()))AND(t0.c35 COLLATE BINARY)))OR(((vt0.c0) IS FALSE))), CAST(((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)) AS REAL) FROM vt1, vt0, v0, rt0 WHERE (x'1b57'); -- 0ms;
SELECT DISTINCT ((((0.06240565407127474))>((rt0.c0))) IN ()), ((((vt0.c0) NOT BETWEEN (v0.c0) AND (-411229714)))>>((((t0.c35, t0.c0, vt0.c0, v0.c0, t0.c0))<>((rt0.c0, '', t0.c0, t0.c0, rt0.c2))))), SUM(((vt0.c0) BETWEEN (1798574594) AND (t0.c35)) COLLATE BINARY) FROM rt0, vt0, t0, vt1, v0 WHERE (LIKELY(NULL)) GROUP BY 0.1689450730278811, (((((((vt1.c0)OR(v0.c0)))OR(x'')), '880445801', ((rt0.c1) IS FALSE)))<((CAST(t0.c0 AS BLOB), v0.c0 COLLATE NOCASE, CASE WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END))), NULL HAVING (((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c35)))) ISNULL); -- 0ms;
SELECT ALL ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ((t0.c0 IN ()))) FROM vt1, v0 WHERE (((CAST('rvm26' AS NUMERIC)) NOT BETWEEN ((('900734369')>>(0.5225579004522364))) AND (0.045302729619725035 COLLATE RTRIM)));SELECT ALL AVG(rt0.c0) OVER () FROM vt1, vt0, v0 NOT INDEXED;SELECT CASE WHEN x'' COLLATE NOCASE THEN v0.c0 COLLATE NOCASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c2 AS REAL) END, ((CASE WHEN rt0.c0 THEN NULL ELSE rt0.c1 END)GLOB(((vt0.c0)=(NULL)))), (((vt0.c0)<(vt1.c0)) IN ()) FROM vt1 WHERE (CAST(0.2879241155690868 COLLATE NOCASE AS INTEGER)) GROUP BY (((((t0.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))<(CASE t0.c35  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END)), ((((((((((((rt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)GLOB(rt0.c1)))))AND((('507646425') NOT BETWEEN (rt0.c2) AND (vt1.c0)))))AND(CASE WHEN v0.c0 THEN rt0.c1 ELSE vt1.c0 END)), TYPEOF(DISTINCT CAST(vt0.c0 AS INTEGER)), CAST(rt0.c0 AS INTEGER), (((('-Z'))!=((v0.c0))) IN ()) HAVING ((t0.c35 COLLATE RTRIM) NOT BETWEEN (((t0.c0)<=(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)));SELECT DISTINCT json_array(((rt0.c0)GLOB('1147018982')), vt1.c0 COLLATE RTRIM, (((vt1.c0))<((rt0.c0))), ((((vt1.c0)OR(v0.c0)))AND(vt0.c0))) FROM vt1, v0 WHERE (((((0.2748132179707883) BETWEEN (x'7997') AND (x'')))AND(0.2771313218389485 COLLATE NOCASE))) ORDER BY CAST(((rt0.c0)<(t0.c0)) AS REAL)  NULLS FIRST, ROUND(((rt0.c2)LIKE(rt0.c0)), LIKELY(DISTINCT vt1.c0)) DESC, ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(CAST(v0.c0 AS TEXT))))AND(0.6747629145722025)) ASC;SELECT ALL CAST(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), ((0Xffffffff890fa9b2) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN t0.c35 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c0 END) AND (((rt0.c2)!=(t0.c0)))), TOTAL(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))), CASE rt0.c2 COLLATE NOCASE  WHEN rt0.c0 THEN t0.c0 WHEN (~ (v0.c0)) THEN (vt1.c0 IN ()) WHEN ((t0.c35) BETWEEN (t0.c35) AND (t0.c35)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c35)) END, ROW_NUMBER() OVER () FROM vt1, rt0, t0;SELECT DISTINCT ((x'')<=(((rt0.c1)IS NOT(v0.c0)))) FROM v0, rt0, vt0, t0 WHERE (((((((0.11298845590606255)+('{}')))AND(json_quote(-405741639))))AND(CASE '^.'  WHEN 0.2762937942208047 THEN '' WHEN NULL THEN x'' WHEN x'' THEN '-783922840' ELSE '' END))); -- 0ms;
SELECT ALL NTH_VALUE((((+ (vt1.c0))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((rt0.c2 IN ()))), (+ (((rt0.c1)>=(NULL))))) OVER () FROM rt0, vt1 WHERE ((- ('mNv'))); -- 0ms;
SELECT LIKE((+ (v0.c0)), ((t0.c35) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ' ') FROM rt0, vt0, t0, v0 LIMIT -6447497; -- 1ms;
SELECT DISTINCT ((((((rt0.c1)|(vt1.c0)))OR((+ (v0.c0)))))OR(((t0.c35) ISNULL))) FROM t0, vt1, vt0, v0 WHERE (NULL) ORDER BY (((((t0.c35)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) BETWEEN (vt0.c0) AND ((+ (t0.c0)))) DESC  NULLS FIRST;SELECT ALL (((t0.c0)) BETWEEN ((UNICODE(vt0.c0))) AND ((((rt0.c1) NOT NULL)))) FROM rt0, vt1, vt0 WHERE (((((']#ﶱc*叞撾騪') NOT BETWEEN (NULL) AND ('0.4469261981406326')))IS NOT((('-118714060')*('-727554663')))));SELECT DISTINCT ((vt0.c0)>(rt0.c1 COLLATE BINARY)) FROM v0, vt0, vt1, t0 ORDER BY CAST(((v0.c0)<(rt0.c1)) AS NUMERIC) ASC;SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) BETWEEN (((vt1.c0)IS NOT(rt0.c1))) AND (((v0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) FROM rt0, t0, vt0, vt1, v0 WHERE (((((-1144092894)!=(x'3886'))) NOT BETWEEN (TRIM(DISTINCT 'U|')) AND (MIN('-1410842234', 0xffffffffb6564c61)))) LIMIT -220735946; -- 3ms;
SELECT DISTINCT (((((t0.c35, vt0.c0, vt1.c0, vt0.c0, rt0.c0))>((vt1.c0, rt0.c1, t0.c0, vt1.c0, NULL))))-((NOT (t0.c0)))) FROM rt0, v0, t0, vt0 WHERE (CAST((NULL IN ()) AS INTEGER));SELECT DISTINCT CAST(rt0.c0 COLLATE NOCASE AS INTEGER) FROM rt0, vt1, t0 WHERE ((((NULL IN (x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((ABS(v0.c0))IS(v0.c0)) FROM vt0 WHERE (((IFNULL(DISTINCT x'', NULL)) BETWEEN (((NULL)/(NULL))) AND ((((('')OR(x'')))OR(NULL)))));SELECT DISTINCT (((t0.c0)) BETWEEN (((((rt0.c0))!=((t0.c0))))) AND ((0.8076732793503238))) FROM v0, vt0, rt0 WHERE (((CASE WHEN 0X1a30fd74 THEN x'' END)AND(((0.9780149417866589) ISNULL))));SELECT ALL CASE rt0.c0 COLLATE BINARY  WHEN x'20a6' THEN (vt1.c0 IN ()) WHEN t0.c35 COLLATE BINARY THEN ((((((((t0.c35)OR(v0.c0)))OR(rt0.c1)))OR(t0.c35)))AND(v0.c0)) WHEN ((v0.c0)==(v0.c0)) THEN MIN(vt0.c0) END, (CASE WHEN t0.c35 THEN vt0.c0 END IN ()), IFNULL(vt1.c0, vt0.c0) COLLATE BINARY FROM t0;SELECT DISTINCT (((((vt0.c0)AND(vt1.c0)))AND(rt0.c0)) IN ()), (- ('0.8950761268541445' COLLATE NOCASE)), TOTAL((((0.8352623723454162)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) FROM t0, vt0, rt0 WHERE ((((('J6N羶듯+')AND(LTRIM('V7'))))OR((((('1385412431')AND('1583107197')))OR(x'd8714f90'))))); -- 0ms;
SELECT ((((((rt0.c0)OR(rt0.c2)))OR(v0.c0)))IS NOT(((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c35)))) FROM v0, vt1, t0 WHERE (((((NULL)<=(-1.26117334E8)))+(-2.056009468E9)));SELECT ALL CAST(((((t0.c0)OR(t0.c0)))AND(rt0.c1)) AS INTEGER) FROM v0, rt0, vt1, t0, vt0 INDEXED BY i37 ORDER BY vt0.c0;SELECT DISTINCT MIN(CAST(rt0.c1 AS TEXT)) FROM vt0, vt1, t0 WHERE (((((CAST('-K' AS NUMERIC))OR(CAST(x'cade' AS TEXT))))OR((((('-1077257418')OR(0Xffffffffafd53c8d)))OR('堢d3')))));