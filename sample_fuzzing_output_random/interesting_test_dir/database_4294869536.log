-- Time: 2024/06/07 06:35:12
-- Database: database36
-- Database version: 3.40.0
-- seed value: 4294869536
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
UPDATE OR IGNORE rt0 SET c1=x''; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0.2685666435277201); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0xffffffffd7d0d45c); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x''); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, NULL, 0Xffffffffd7d0d45c), (0.8915210048275632, x'', 0.5692879023418163), (NULL, 0.06063707360542314, 0.591683167491605); -- 0ms;
UPDATE rt0 SET c2=NULL; -- 0ms;
PRAGMA threads = 5478233840891961465; -- 0ms;
PRAGMA main.application_id; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('9i.fxB'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('-674180004', '439493342'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x''); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR REPLACE rt0 SET c2=NULL WHERE CASE (rt0.c1 IN ())  WHEN json_valid(rt0.c1) THEN ((rt0.c0) NOTNULL) END; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c0)=(0x1a3222de) WHERE CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.06063707360542314); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='', c2=-6.74180004E8, c0=-6.74180004E8 WHERE (- ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((0.429613496278336, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, 0.5692879023418163))))); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
PRAGMA journal_mode = WAL; -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
PRAGMA threads = 8572737896708674840; -- 0ms;
PRAGMA temp.defer_foreign_keys = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
REINDEX RTRIM; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (NULL, -824615975); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0xffffffffd7b07f5d WHERE 0.591683167491605; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
UPDATE OR REPLACE rt0 SET c1=x'5a06', c0=NULL WHERE ((TYPEOF(rt0.c2))GLOB(rt0.c1)); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('439493342', x'', NULL); -- 1ms;
PRAGMA temp.auto_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1) VALUES ('', NULL); -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=(NULL); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=(0.3639925038618499); -- 0ms;
UPDATE OR FAIL rt0 SET (c2, c2)=(NULL, x''); -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(1720212419); -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL , c1 INT , c2 BLOB ); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (x'', NULL, '-193656430'); -- 0ms;
UPDATE OR IGNORE t0 SET c2='439493342', c2='9I.FXB' WHERE (((t0.c1, t0.c2, t0.c0, t0.c2, t0.c2)) NOT BETWEEN ((((((t0.c2)AND(t0.c0)))AND(t0.c0)), t0.c1 COLLATE NOCASE, (t0.c2 IN (NULL)), rtreenode(t0.c2, t0.c2), t0.c2 COLLATE NOCASE)) AND ((((t0.c0) BETWEEN (NULL) AND (t0.c2)), CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END, t0.c0, ((t0.c2) IS FALSE), LIKE(t0.c2, t0.c0, '9')))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='UO'; -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET (c1)=(x'48bc') WHERE (((rt0.c0 IN ()))==((NOT (rt0.c1)))); -- 0ms;
UPDATE OR ABORT t0 SET c0=x''; -- 0ms;
UPDATE OR FAIL rt0 SET c1=NULL, c2=0.591683167491605; -- 0ms;
UPDATE OR IGNORE t0 SET c0='l,\Q~{6kt' WHERE (((((((('g')AND(t0.c2)))OR(t0.c2)))AND(t0.c1)))AND(t0.c2)) COLLATE BINARY; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE ((CAST(t0.c1 AS TEXT)) BETWEEN (ABS(t0.c2)) AND (t0.c2 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=1898139041 WHERE (NOT (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
UPDATE t0 SET (c2)=(0.12061207014839359) WHERE t0.c1; -- 0ms;
INSERT OR FAIL INTO t0(c2, c1, c0) VALUES (0.9983404615685222, x'', x'cbfb'), (-1.9365643E8, 0x71234da1, 0.9994938163763012), ('1195256429', 0.26273857362477526, 0Xda0c0dc); -- 0ms;
PRAGMA wal_autocheckpoint = 4487524954739235099; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c0)=(NULL, 0.22708364815585547) WHERE MAX('', (~ (rt0.c2))); -- 1ms;
UPDATE OR IGNORE rt0 SET c1=x''; -- 1ms;
PRAGMA main.auto_vacuum; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (((x'7be94c920b11') BETWEEN (rt0.c2) AND (rt0.c2)) IN ((('1898139041')IS NOT(t0.c0)), UNLIKELY(DISTINCT t0.c0))) FROM t0 LIMIT -1754424981;SELECT ALL DENSE_RANK() OVER () FROM t0, rt0 WHERE ((((NULL IN ())) BETWEEN ((- (''))) AND (0.7065451765923225 COLLATE RTRIM))) GROUP BY CASE ((t0.c2) IS TRUE)  WHEN rt0.c0 COLLATE RTRIM THEN t0.c0 END, CASE ((((((((rt0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))  WHEN ((rt0.c0) BETWEEN ('_\n') AND (NULL)) THEN (t0.c1 IN (t0.c2)) ELSE (((rt0.c2, t0.c1, '1720212419')) NOT BETWEEN ((t0.c1, rt0.c2, t0.c2)) AND ((rt0.c2, 0.9209289269834551, rt0.c2))) END, CHANGES(); -- 0ms;
SELECT DISTINCT '' COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ((0X3e51637b) BETWEEN (((rt0.c2)<=(rt0.c1))) AND (CASE WHEN rt0.c0 THEN t0.c0 ELSE t0.c2 END)) FROM t0;SELECT ALL rt0.c0 FROM t0 WHERE (((((((0.7115401322211469)AND(x'')))OR(NULL)))=((- (439493342)))));SELECT DISTINCT (((t0.c2)) NOT BETWEEN (((((rt0.c2))<>((t0.c1))))) AND ((CAST(t0.c0 AS INTEGER)))) FROM rt0 WHERE (((0.7908302118141843 COLLATE BINARY) IS TRUE));SELECT DISTINCT LAST_VALUE(CASE ((t0.c0) BETWEEN (t0.c2) AND (rt0.c1))  WHEN rt0.c2 THEN CAST(t0.c1 AS REAL) WHEN rt0.c1 THEN ('#r &8md' IN (NULL)) WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2) IS FALSE) ELSE (rt0.c0 IN ()) END) OVER () FROM t0, rt0; -- 0ms;
SELECT ALL COUNT(LOWER(rt0.c2) COLLATE BINARY) OVER () FROM rt0 WHERE (ABS((~ (NULL)))); -- 0ms;
SELECT DISTINCT CAST(COUNT(t0.c0) AS TEXT) FROM t0; -- 1ms;
SELECT DISTINCT (CAST(rt0.c1 AS INTEGER) IN ()) FROM t0 WHERE (((NULL COLLATE RTRIM) IS FALSE)); -- 0ms;
SELECT ALL ((UPPER(DISTINCT t0.c0))<<(TOTAL(t0.c1))), (((((t0.c1 IN ()))AND(json_extract(rt0.c0, t0.c1))))OR(t0.c0)), CAST(MAX(rt0.c1) AS TEXT) FROM rt0, t0; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS REAL) FROM t0;SELECT DISTINCT AVG((t0.c2 IN (t0.c2))) OVER ( RANGE BETWEEN ((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))) IN ()) FOLLOWING AND t0.c0 PRECEDING) FROM t0, rt0 WHERE (((((0x1caeb424) NOT BETWEEN (0.10895651486793811) AND (x'cf3f')))<<((((NULL))>=((0X146f9d50)))))) GROUP BY CAST(CASE rt0.c2  WHEN 0.2777168920639337 THEN rt0.c0 END AS BLOB);SELECT DISTINCT ((t0.c2 IN ()) IN ()), ((CASE WHEN x'' THEN t0.c1 ELSE rt0.c0 END)GLOB(((t0.c2)!=(rt0.c0)))), CASE WHEN json_array_length(rt0.c2) THEN t0.c1 ELSE ((rt0.c1)IS NOT(rt0.c1)) END, COUNT(*) OVER (), IFNULL(NULL, rt0.c1) FROM rt0, t0; -- 0ms;
SELECT ((((t0.c2)<(t0.c2)))<=(((rt0.c0) IS TRUE))), ((- (rt0.c1)) IN (CASE WHEN rt0.c1 THEN t0.c1 END)), (('aX' COLLATE NOCASE) BETWEEN (TYPEOF(t0.c0)) AND (CAST(-1065095387 AS REAL))) FROM t0;SELECT ALL LAG(t0.c1, ((((((((t0.c2 COLLATE NOCASE)OR(0x3e51637b)))OR(t0.c1)))AND(((t0.c0)&(t0.c0)))))OR('1057027074')), ((t0.c1)IS NOT(t0.c0)) COLLATE NOCASE) OVER ( GROUPS ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c1)) COLLATE RTRIM PRECEDING EXCLUDE CURRENT ROW) FROM t0 WHERE (((((x'') BETWEEN (x'') AND (x'39e4')))||(((NULL) BETWEEN (-1198315070) AND ('1362428237'))))); -- 1ms;
SELECT ALL ((ABS(DISTINCT t0.c0))!=((rt0.c0 IN (t0.c0)))) FROM t0, rt0 WHERE ((((x'5258' IN ())) BETWEEN ((x'' IN ())) AND (''))); -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN rt0.c2 THEN rt0.c2 END)AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(t0.c2 COLLATE BINARY)))OR(((rt0.c2)<=(rt0.c2)))))AND(((-6.74180004E8)==(t0.c0)))) FROM rt0 WHERE (((CAST(0.47218855942568827 AS BLOB))IS((('0.9994938163763012') NOT BETWEEN (NULL) AND ('1045521275')))));SELECT DISTINCT COUNT(*) FROM rt0; -- 0ms;
SELECT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) FROM t0 WHERE ((((x'3ce0') ISNULL) IN (((((x'')AND('')))AND(x'')), 0.10895651486793811 COLLATE BINARY))) EXCEPT SELECT (((((((((~ (rt0.c0)))OR(((rt0.c1)>(t0.c2)))))AND((rt0.c1 IN (t0.c1)))))OR(rt0.c1)))OR(((t0.c0)<=(rt0.c2)))) FROM rt0 UNION ALL SELECT CASE WHEN ((rt0.c1)OR(rt0.c2)) THEN ((((((((((((t0.c2)AND(t0.c1)))AND(t0.c1)))OR(t0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(t0.c2)) END FROM rt0, t0 WHERE ((((((0.3639925038618499) BETWEEN (NULL) AND (NULL)), ((((0.429613496278336)OR(0.3515900366120168)))OR(NULL)), NULL))==(((((0.6157495760118525))<>((-617220868))), (NULL IN ()), (~ (0.251907666376035))))));SELECT DISTINCT ((((t0.c1) BETWEEN (t0.c0) AND (rt0.c1)))>(((t0.c1) NOT NULL))) FROM t0 ORDER BY ((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)) COLLATE NOCASE ASC  NULLS FIRST, json_quote((~ (t0.c0)));SELECT DISTINCT ((((t0.c0) NOT BETWEEN (rt0.c2) AND (0.6960234447652952))) ISNULL) FROM rt0, t0 WHERE (((((0.09092696764369268 IN ('jp5-jC|G'))))>((((0.48934344119543827) NOT NULL))))); -- 0ms;
SELECT ALL CAST(rt0.c1 AS NUMERIC) COLLATE BINARY, rt0.c2, ((t0.c0) IS FALSE) COLLATE RTRIM FROM t0;SELECT ALL PERCENT_RANK() OVER ( ORDER BY '') FROM t0 WHERE (CAST((+ (x'')) AS INTEGER)); -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c0))/((rt0.c2 IN ()))) FROM rt0; -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE ((CAST(0.4165851540827413 AS TEXT) IN ())) LIMIT 1720212419; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c2) AND (t0.c1))) OVER () FROM rt0;SELECT DISTINCT SQLITE_SOURCE_ID(), ((json(t0.c1))>(CHANGES())), ((x'')GLOB(((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))OR(t0.c1)))AND(rt0.c2)))) FROM rt0;SELECT ALL NULL, DENSE_RANK() OVER (), CASE WHEN ((rt0.c0) ISNULL) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE t0.c2 END ELSE (~ (rt0.c1)) END FROM t0, rt0 WHERE ((((+ (NULL)))*('1692957289'))) LIMIT -617220868 OFFSET -1000550727; -- 0ms;
SELECT (((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c2)))) BETWEEN (CASE WHEN rt0.c0 THEN x'64b1' WHEN t0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c1 END) AND (CAST(rt0.c1 AS INTEGER))), NTH_VALUE(CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS NUMERIC), UNLIKELY(((t0.c0) BETWEEN (t0.c0) AND (rt0.c1)))) OVER (), COUNT('1195256429') FROM rt0, t0 WHERE (CASE ((0.9289089679903788) NOT BETWEEN ('') AND (0X69f1b465))  WHEN ((-443346349) NOT BETWEEN (NULL) AND (0x34be2c34)) THEN (('ꗛ')|(x'')) END) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))) COLLATE BINARY ASC;SELECT CAST(((((((((rt0.c0)AND(rt0.c2)))OR(t0.c1)))AND(rt0.c2)))AND(t0.c0)) AS REAL) FROM t0, rt0 WHERE (CASE ('' IN (NULL, NULL))  WHEN (NOT ('9Z')) THEN x'8196' COLLATE BINARY WHEN NULL THEN (((NULL)) BETWEEN (('^f|F')) AND ((x''))) WHEN (('-1926388493') NOT NULL) THEN (('0.9983404615685222') BETWEEN (x'') AND (-1880433783)) END) GROUP BY (((rt0.c2)OR(t0.c2)) IN ()); -- 0ms;
SELECT (- (t0.c2)) FROM t0 WHERE (('x4' IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT SUM(((((0.7300259780099585)OR(rt0.c1)))OR(rt0.c0))) FROM t0, rt0 WHERE ((((((((NULL)OR('1923038080')))AND(NULL)), (((x'f161')) BETWEEN ((x'')) AND ((1932450461))), ('1084202460' IN ())))<=(((((x''))>=((NULL))), ((((((((NULL)AND(x'a4ed')))OR('0.26273857362477526')))OR(NULL)))OR(531162587)), CASE WHEN NULL THEN NULL END)))); -- 0ms;
SELECT ((((((rt0.c1) ISNULL))OR(((rt0.c0)LIKE(rt0.c2)))))OR(rt0.c2)) FROM t0, rt0; -- 0ms;
SELECT ALL COALESCE(t0.c2, rt0.c1) COLLATE NOCASE FROM t0 GROUP BY (((t0.c0) ISNULL) IN (CAST(t0.c2 AS TEXT)));SELECT ((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c1))) IS TRUE), CAST(((((t0.c0)OR(t0.c0)))OR(t0.c2)) AS NUMERIC), (((((rt0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c1, t0.c1)) AND ((t0.c0, t0.c1, rt0.c0)))) IS FALSE), ((((((rt0.c1)AND(t0.c2)))AND(rt0.c2)))|((t0.c0 IN ()))), (((rt0.c0)) NOT BETWEEN ((4.39493342E8)) AND ((rt0.c2))) COLLATE RTRIM FROM rt0, t0 WHERE ((((0.6178301869853323 IN ())) BETWEEN (CAST(-674180004 AS BLOB)) AND ((('-1888752165')<<(x''))))) LIMIT -22893680 OFFSET -675554796; -- 0ms;
SELECT DISTINCT CAST(MIN(t0.c1) AS INTEGER) FROM rt0;SELECT ((CAST(rt0.c2 AS TEXT))<>((- (rt0.c1)))), ((CAST(rt0.c2 AS REAL)) IS FALSE), COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT t0.c1)) BETWEEN (((rt0.c1) NOT NULL)) AND (((t0.c0)==(rt0.c1)))) FROM t0 WHERE (NULL COLLATE BINARY) LIMIT 2109793683 OFFSET 1376819459;SELECT ALL RANK() OVER () FROM rt0; -- 0ms;
SELECT ((((((((((((rt0.c1)OR(MIN(t0.c1))))AND(((t0.c1)&(rt0.c2)))))OR(((t0.c0) BETWEEN (t0.c2) AND (rt0.c2)))))OR(t0.c1)))OR(((rt0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)))))AND(NULLIF(t0.c1, t0.c0))), COUNT(((x'')-(rt0.c2))) OVER ( ORDER BY ((((((rt0.c1) IS TRUE))OR(((t0.c0) IS TRUE))))OR(CASE WHEN rt0.c1 THEN x'4391' WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN rt0.c2 END)) ASC  NULLS LAST, CASE WHEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))OR(1.777448037E9)) THEN x'' END), (((('*RQ')OR((0.5354629599974629 IN ()))))AND(((0.3053516925063021) NOT BETWEEN (t0.c1) AND (t0.c2)))) FROM rt0 ORDER BY ((NULL) BETWEEN (((((t0.c2)OR(rt0.c2)))AND(rt0.c1))) AND (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))));SELECT ALL ((((((((CASE WHEN t0.c1 THEN t0.c0 END)AND(rt0.c1)))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(x'')))OR(rt0.c1)) FROM rt0 GROUP BY '' HAVING TOTAL(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END COLLATE RTRIM);SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC)) BETWEEN (((rt0.c2)-(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))), PERCENT_RANK() OVER (), (~ (rt0.c0 COLLATE BINARY)), CAST(((((((((t0.c0)OR(t0.c2)))AND(t0.c1)))AND(t0.c2)))OR(rt0.c1)) AS NUMERIC), (t0.c2 IN ()) COLLATE RTRIM FROM rt0, t0 WHERE ((((((((((((((('!jCE?1')OR(0.33523915075134625)))AND(x'')))AND('')))OR(0Xfffffffff6841cd9)))OR(NULL)))OR(NULL)))AND((x'' IN ())))); -- 0ms;
SELECT DISTINCT CAST(((t0.c1) BETWEEN (t0.c1) AND (t0.c1)) AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT (((+ (NULL))) IS TRUE) FROM t0 WHERE (((((((-676298915)AND(x'f071')))AND(0.36135771052488974))) IS TRUE)); -- 0ms;
SELECT DISTINCT 0.3504729620289805 FROM rt0; -- 0ms;
SELECT ALL ABS(DISTINCT (((t0.c1, t0.c0, rt0.c2, '-1880433783', rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, t0.c1, t0.c0, x'091d3b12')) AND ((t0.c2, rt0.c2, t0.c2, rt0.c0, rt0.c1)))) FROM t0;SELECT ALL x'ae9b' FROM rt0, t0 WHERE (('' IN (((NULL) BETWEEN (x'') AND (-960713501))))); -- 1ms;
SELECT ALL (((((t0.c0)GLOB(t0.c0))))<=((COUNT(t0.c1)))) FROM t0, rt0 WHERE (CASE WHEN 0.9913638853534209 THEN (((NULL))>=((NULL))) END); -- 0ms;
SELECT ((((((((((t0.c2) NOTNULL))OR(rt0.c0)))OR(((t0.c1)*(rt0.c2)))))AND(((rt0.c0)GLOB(t0.c1)))))OR((((rt0.c1, rt0.c0, t0.c1)) NOT BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((t0.c0, rt0.c2, t0.c1))))) FROM rt0, t0; -- 0ms;
SELECT ((((rt0.c1)<>(rt0.c0)))AND(((rt0.c2) IS TRUE))) FROM rt0, t0 WHERE (CASE WHEN ((NULL)<(0.4298736397561467)) THEN CASE WHEN '1692957289' THEN x'726f' ELSE -8.24615975E8 END END) LIMIT 2013436407 OFFSET 239532958; -- 0ms;
SELECT DISTINCT '289143951', CAST(SUM(rt0.c1) AS REAL), (((rt0.c0)) BETWEEN (((((t0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((((rt0.c1) IS FALSE)))), 1391012421, ((MAX(t0.c2, rt0.c0)) NOTNULL) FROM rt0, t0; -- 0ms;
SELECT DISTINCT MAX(rt0.c2) FROM rt0, t0; -- 0ms;
SELECT HEX(DISTINCT (+ (t0.c2))) FROM t0 LIMIT 133263862; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c2)))OR(t0.c0)))<>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM t0, rt0 WHERE ('GQAm'); -- 0ms;
SELECT ((((((((((rt0.c2)+(t0.c1)))OR(t0.c0)))AND(CAST(rt0.c0 AS INTEGER))))AND(CAST(t0.c0 AS INTEGER))))OR((('1892111201')IS(rt0.c1)))), CAST(((rt0.c2) IS TRUE) AS NUMERIC), PERCENT_RANK() OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rtreenode(rt0.c0, t0.c1) THEN (~ (t0.c2)) END, ((((rt0.c2) NOT NULL)) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (0.3220512709554989)), ((((((((x'')OR(t0.c1)))AND(rt0.c0)))AND(((rt0.c0) BETWEEN (t0.c1) AND (rt0.c2)))))OR(x'')) FROM t0;SELECT DISTINCT CAST(t0.c1 COLLATE BINARY AS REAL) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c0 COLLATE RTRIM)AND((- (t0.c0)))))OR(rt0.c1 COLLATE BINARY)), JULIANDAY(SUM(rt0.c1), json_array_length(rt0.c0), (- (t0.c2))), ((t0.c0) IS TRUE), (- (LIKELY(rt0.c1))), (((t0.c0)) BETWEEN ((GROUP_CONCAT(rt0.c2))) AND (((NOT (t0.c2))))), COUNT(*) OVER ( ORDER BY (((t0.c0, rt0.c2, t0.c2)) NOT BETWEEN ((CAST(t0.c0 AS TEXT), ((t0.c0)-(t0.c0)), ((((((((t0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))) AND ((((t0.c2)-(rt0.c2)), ((t0.c2) ISNULL), ((t0.c0)OR(rt0.c0))))) DESC, ((rt0.c0 COLLATE BINARY) BETWEEN (((t0.c0)=(rt0.c1))) AND (((t0.c0)LIKE(t0.c2))))  NULLS LAST, json_insert(rt0.c0, '342859088', t0.c0) COLLATE NOCASE DESC  NULLS FIRST), (((t0.c1))<((NULL))) FROM t0;SELECT DISTINCT ((COALESCE(rt0.c0, t0.c2)) NOT BETWEEN ((rt0.c0 IN ())) AND ((NOT (rt0.c1)))) FROM rt0;SELECT DISTINCT (((((t0.c1) IS FALSE), (((NULL))!=((t0.c2))), t0.c1 COLLATE RTRIM))<=((((t0.c1)OR(rt0.c0)), ((t0.c2)+(t0.c1)), ((rt0.c2)<<(rt0.c0))))) FROM rt0;SELECT DISTINCT CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT NULL, CASE WHEN UPPER(t0.c1) THEN (t0.c1 IN (rt0.c0)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END END, (((t0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) IN ()) FROM t0, rt0; -- 0ms;
SELECT ((((((t0.c2)OR(t0.c2)))AND(t0.c2)))<<(t0.c0)) FROM rt0 WHERE (CAST((('lH') IS TRUE) AS REAL));SELECT DISTINCT CASE CAST(rt0.c0 AS BLOB)  WHEN ((((rt0.c0)AND(t0.c1)))OR(t0.c1)) THEN ((t0.c2) NOTNULL) END FROM t0, rt0 WHERE (LOWER('') COLLATE BINARY); -- 0ms;
SELECT ALL CAST(CAST(rt0.c0 AS TEXT) AS REAL) FROM rt0 WHERE (((((0xffffffffa76e3e16)>>(x'')))>>(CASE '1084202460'  WHEN '&,%^Lड़\' THEN x'' ELSE x'' END))) LIMIT -1754424981 OFFSET -1000550727; -- 1ms;
SELECT t0.c2 FROM rt0, t0 WHERE ((NOT (NULL)) COLLATE NOCASE COLLATE RTRIM) ORDER BY '楍/\nt'  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0) NOT NULL) THEN (+ (t0.c2)) ELSE ((((rt0.c2)AND(t0.c1)))AND(t0.c2)) END, CAST(SUM(t0.c2) AS TEXT), CAST(((((t0.c1)OR(rt0.c2)))OR(rt0.c0)) AS TEXT) FROM rt0, t0 ORDER BY ((((t0.c1)*(rt0.c1)))>=(rt0.c0)) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (~ (((((rt0.c2)OR(rt0.c1)))OR(t0.c2)))), ((((t0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) ISNULL), COUNT(CAST(rt0.c0 AS NUMERIC)) OVER () FROM t0 WHERE ((CASE WHEN NULL THEN NULL END IN (((((-1330938137)AND(NULL)))OR(0Xffffffffc083ef25)))));SELECT DISTINCT (((rt0.c1, t0.c1, t0.c2)) NOT BETWEEN ((t0.c1, rt0.c1, NULL)) AND ((rt0.c0, rt0.c2, t0.c1))) COLLATE BINARY FROM rt0;SELECT DISTINCT ((NULL) IS FALSE) FROM rt0, t0 WHERE (((x'')<(0.5282310355317344)) COLLATE RTRIM) GROUP BY x'181e', (- (t0.c2 COLLATE NOCASE)), (- (((t0.c1)-(rt0.c2)))) HAVING ((rt0.c2 COLLATE BINARY)<=(((rt0.c2)<=(t0.c2)))); -- 0ms;
SELECT DISTINCT ((((((t0.c0)OR(t0.c0)))AND(t0.c2)))<=(NULL)) FROM t0 GROUP BY ((rt0.c1)<=(rt0.c1)) COLLATE RTRIM, LIKELIHOOD((NOT (0Xfffffffffbe4cb65)), 0.06677349033416136), ((((((((((t0.c1)<>(rt0.c2)))AND((+ (rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((rt0.c1)IS NOT(rt0.c0)))))OR(((((t0.c2)OR(rt0.c2)))AND(rt0.c2)))), (NOT (((((rt0.c1)OR(t0.c2)))OR(t0.c1)))), (~ (rt0.c2 COLLATE BINARY));SELECT DISTINCT ((t0.c0)%(t0.c0)) COLLATE BINARY COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) IS FALSE)) NOT BETWEEN (((x'd52f')>(t0.c2))) AND (((((t0.c0)AND(t0.c1)))OR(t0.c2)))) FROM t0, rt0 WHERE (((((-1926388493) BETWEEN (x'') AND (0xffffffffadd1a25f))) NOT BETWEEN ('XR' COLLATE RTRIM) AND ('1966021699' COLLATE RTRIM))) ORDER BY 0.5692879023418163 DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((((((((((((rt0.c1)OR(t0.c0)))AND(0.6821485027991955)))OR(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c1 AS REAL))))OR(TOTAL(rt0.c0))))OR((((rt0.c1))<=((NULL))))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) ISNULL)) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((- (t0.c0)))), ((rt0.c1)IS(t0.c1)) COLLATE RTRIM, (~ (((t0.c0) NOTNULL))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c2) NOT NULL))GLOB(0.34785793306152557)) FROM t0 GROUP BY CASE WHEN (rt0.c0 IN ()) THEN (((rt0.c2))<=((t0.c1))) ELSE (((rt0.c1, t0.c2, rt0.c0))<((t0.c2, t0.c2, x'4473'))) END;SELECT ALL (((rt0.c0, '1932450461', rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((t0.c1, CASE WHEN t0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c1 WHEN t0.c2 THEN rt0.c1 ELSE rt0.c2 END, ((t0.c2) BETWEEN ('342859088') AND (t0.c0)), ((t0.c1)IS NOT(rt0.c1)), rt0.c2)) AND ((GROUP_CONCAT(t0.c0), ((t0.c1) BETWEEN (rt0.c0) AND (t0.c1)), ((rt0.c1) ISNULL), ((-1653059981)>>(t0.c2)), 0X146f9d50))) FROM rt0, t0 WHERE (CAST((0.4296605260605404 IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT MAX(((rt0.c2)+(t0.c0))) COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c1)-(rt0.c0)) AS INTEGER) FROM t0 WHERE (JULIANDAY(CAST('K450GZ\rp' AS REAL), CAST(NULL AS REAL), (('x/W{}')+(0x49216fd5)))) ORDER BY ((x'')&((((rt0.c1, rt0.c2, t0.c2))==(('', rt0.c0, t0.c2))))) DESC;SELECT DISTINCT (((t0.c2, rt0.c0, (~ (t0.c0))))<=((((t0.c1)<(rt0.c2)), ((0X79601d9b)|(t0.c0)), t0.c1 COLLATE NOCASE))) FROM t0;SELECT DISTINCT '1720212419' FROM t0, rt0 WHERE (((CAST('' AS BLOB)) BETWEEN (CAST('' AS REAL)) AND (((NULL)|(x''))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2)<=(362740778))) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c1) AND (rt0.c2))) AND ((((rt0.c1, rt0.c0, t0.c2))=((t0.c0, rt0.c1, rt0.c0))))) FROM t0 WHERE (892693873);SELECT ((x'')IS(((NULL) NOT BETWEEN (t0.c1) AND (rt0.c0)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))) AND ((+ (rt0.c0)))), CASE WHEN ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)))AND(rt0.c1)) THEN x'' WHEN t0.c2 THEN (((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0))) WHEN ((rt0.c0)>>(rt0.c2)) THEN (rt0.c1 IN (t0.c1)) WHEN IFNULL(DISTINCT t0.c0, t0.c1) THEN CASE t0.c2  WHEN rt0.c2 THEN t0.c1 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN ((t0.c0)=(rt0.c0)) THEN CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END WHEN TRIM(DISTINCT rt0.c0, rt0.c1) THEN ((t0.c1)IS(rt0.c1)) WHEN ((((((((t0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)) THEN ((rt0.c1) ISNULL) END, COALESCE(IFNULL(t0.c1, rt0.c0), t0.c0) FROM rt0, t0 WHERE (((((((((((0.6427736223731559)AND(x'')))AND('-628288754')))AND(0Xffffffffd84eb6c2)))AND(NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT LAST_VALUE(((CAST(1.898139041E9 AS NUMERIC)) NOT NULL)) OVER ( PARTITION BY '0.22708364815585547', ((rt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE BINARY GROUPS BETWEEN CAST(((t0.c1) NOT NULL) AS INTEGER) FOLLOWING AND UNLIKELY(((((((((NULL)AND(rt0.c1)))AND(rt0.c1)))OR(t0.c0)))OR(rt0.c0))) FOLLOWING EXCLUDE NO OTHERS), (((+ (rt0.c0))) NOT NULL), CASE WHEN ((rt0.c1)&('-68891803')) THEN ((((((((rt0.c2)AND(t0.c0)))AND(rt0.c1)))AND(x'')))OR(rt0.c1)) WHEN (+ (t0.c1)) THEN t0.c0 COLLATE BINARY WHEN ((t0.c2)*(rt0.c0)) THEN t0.c0 ELSE ((t0.c0) IS FALSE) END FROM t0 WHERE (CAST(((1195256429)&(NULL)) AS REAL));SELECT DISTINCT ((((((((t0.c2)OR(rt0.c1)))OR(t0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))AND(((rt0.c0)-(t0.c0)))), RANK() OVER (), COUNT(((rt0.c1)>>(t0.c1))), (((t0.c0)*(t0.c2)) IN (rt0.c0 COLLATE BINARY, (+ (t0.c0)))), CASE WHEN 0.10895651486793811 THEN (x'0196' IN ()) WHEN ((t0.c2)IS NOT(t0.c0)) THEN (((t0.c0))!=((rt0.c1))) WHEN (((t0.c0))>((rt0.c2))) THEN ((t0.c0)*(rt0.c2)) ELSE COUNT(*) END FROM t0;SELECT DISTINCT rt0.c2 FROM t0 WHERE (CASE '3v' COLLATE BINARY  WHEN ((NULL) IS FALSE) THEN (~ (NULL)) ELSE TYPEOF(0.21612634674299536) END);SELECT DISTINCT ((~ (t0.c1)) IN ()) FROM t0; -- 1ms;
SELECT ALL rt0.c2 FROM rt0, t0; -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(t0.c0) IN (((t0.c1)/(rt0.c1)))) FROM rt0, t0 WHERE (((((NULL COLLATE NOCASE)AND(((x'06b4')LIKE(x'4e73')))))OR((('')!=('Ao#EEU'))))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS NUMERIC)) IS TRUE), rt0.c2, 'ESDW' FROM t0, rt0 WHERE ((('gqam') NOT BETWEEN (NULL) AND (CASE ''  WHEN '-1833251450' THEN 0X3f00f402 END))) GROUP BY CASE WHEN CASE WHEN t0.c0 THEN 0.8398508197314559 ELSE rt0.c0 END THEN ((t0.c0) IS TRUE) END, ((DATE(rt0.c1, NULL, t0.c1, rt0.c2, '1045521275'))|(t0.c1)), CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c1 END COLLATE RTRIM; -- 0ms;
SELECT ALL SQLITE_SOURCE_ID(), '3㵝i[', AVG(((rt0.c2)!=(rt0.c2))) FROM rt0, t0 WHERE (((CAST('892693873' AS NUMERIC)) BETWEEN ((('wd{⩭2')<<('0.4165851540827413'))) AND (CASE WHEN NULL THEN NULL END))) GROUP BY (((t0.c2)IS(t0.c2)) IN (((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))), CAST(((rt0.c1)GLOB('')) AS TEXT), CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 END THEN ((t0.c1)LIKE(rt0.c0)) END HAVING CASE CAST(t0.c1 AS BLOB)  WHEN ((rt0.c1)|(rt0.c0)) THEN ((rt0.c0) ISNULL) END ORDER BY 'Gu'  NULLS LAST; -- 0ms;
SELECT ALL 0.278504480862815 COLLATE RTRIM FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN (- (0.429613496278336)) THEN NULL COLLATE BINARY END); -- 0ms;
SELECT ALL x'' FROM t0; -- 0ms;
SELECT COUNT(((rt0.c2) ISNULL) COLLATE RTRIM) OVER () FROM t0, rt0 WHERE ((((((-852725813 IN ('1451095983', 0.24417836210238975)))OR((~ ('')))))AND(CAST('0S' AS REAL)))); -- 0ms;
SELECT DISTINCT t0.c1 FROM t0 CROSS JOIN rt0 ON NULLIF(((t0.c1) BETWEEN (t0.c2) AND (t0.c0)), CASE WHEN t0.c2 THEN rt0.c2 ELSE t0.c1 END); -- 1ms;
SELECT ((((((((((x'') ISNULL))OR(GROUP_CONCAT(rt0.c2))))AND(((rt0.c2) BETWEEN (NULL) AND (t0.c0)))))OR(((((((((t0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(t0.c1)))))AND(LIKELY(DISTINCT 0Xaa7c176))) FROM t0 WHERE ((((~ (NULL))) NOT BETWEEN (((x'fa0e')|('-1849988340'))) AND ((x'4c9f' IN ('3㵝i[')))));SELECT ALL (- ((- (t0.c0)))), AVG(((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1))), CASE WHEN 'G+H' THEN rt0.c0 END COLLATE NOCASE FROM rt0, t0 ORDER BY ((x'')-(t0.c2)) COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((t0.c2))) WHEN ((((rt0.c2)AND(rt0.c2)))OR(t0.c1)) THEN (- (t0.c0)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (- (rt0.c1)) END FROM t0, rt0; -- 0ms;
SELECT DISTINCT '' FROM t0; -- 0ms;
SELECT ALL NTH_VALUE(((((((t0.c2)AND(t0.c0)))AND(t0.c0)))<<((('') BETWEEN (t0.c1) AND (t0.c2)))), ((((((t0.c0)OR(t0.c1)))AND(t0.c2)))OR(CAST(t0.c2 AS BLOB)))) OVER () FROM t0; -- 0ms;
SELECT ((MAX(rt0.c2)) NOT BETWEEN (AVG(t0.c0)) AND (((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)))) FROM t0;SELECT ALL GROUP_CONCAT(((((rt0.c1)OR(t0.c0)))OR(rt0.c1))) OVER () FROM rt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN ('-1069932909') AND (0.8262772197983715)) THEN (('|G') NOT BETWEEN (NULL) AND ('0.3639925038618499')) ELSE (((NULL))>=(('1856969964'))) END);SELECT DISTINCT (NOT ((t0.c1 IN ()))), SUM(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))), LAST_VALUE(((t0.c1 IN ()) IN (((rt0.c0)!=(rt0.c2))))) OVER () FROM t0, rt0 WHERE (CASE 0.5513569348763815  WHEN x'' THEN CASE 0Xffffffff87c9ec02  WHEN NULL THEN 0.49969741628956577 ELSE x'' END ELSE ((x'')=(0.3515900366120168)) END); -- 0ms;
SELECT GROUP_CONCAT(CASE WHEN NULL THEN 0x752f1c43 ELSE rt0.c1 END) OVER () FROM t0, rt0 WHERE (((('笉dxNYE-]') IS TRUE) IN (((NULL)>>(0.4700425510631525)), (((x''))<=((NULL)))))); -- 0ms;
SELECT ALL (MIN('-1065095387', rt0.c2, t0.c0, rt0.c2) IN ()) FROM rt0, t0 WHERE (CAST(((NULL) NOT BETWEEN (0xffffffffee939a72) AND (x'cdc4')) AS REAL)); -- 0ms;
SELECT rt0.c2, CASE (~ ('0.9983404615685222'))  WHEN '133263862' THEN CASE rt0.c1  WHEN rt0.c0 THEN t0.c1 END END, (((t0.c2)) NOT BETWEEN ((GROUP_CONCAT(NULL))) AND ((((rt0.c1) NOT NULL)))) FROM t0, rt0 WHERE (((CAST('0.21612634674299536' AS REAL)) NOT NULL)); -- 0ms;
SELECT ALL NULL FROM rt0 WHERE (('24496705' COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT CAST((NOT (rt0.c2)) AS TEXT) FROM t0, rt0 GROUP BY t0.c0 COLLATE RTRIM HAVING t0.c0 LIMIT -676298915; -- 0ms;
SELECT DISTINCT ((rt0.c1)<(t0.c0)) COLLATE NOCASE, ((((t0.c1))>=((0.917393423638491))) IN ()), (NOT (((rt0.c2)AND(t0.c1)))) FROM rt0;SELECT ALL (((rt0.c0, t0.c0, t0.c0)) NOT BETWEEN (((NOT (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c2)), ((t0.c2) IS FALSE))) AND (('-9223372036854775808' COLLATE NOCASE, (((rt0.c1)) NOT BETWEEN (('_\n')) AND ((t0.c1))), ((rt0.c1)/(rt0.c1))))) FROM t0 ORDER BY ((NULL)||(rt0.c0)) COLLATE RTRIM LIMIT 796649065 OFFSET 925000221;SELECT ALL CASE WHEN (NOT (rt0.c0)) THEN ((t0.c0) ISNULL) END FROM t0, rt0 WHERE ((INSTR(x'', 751974958) IN ())) LIMIT -443346349; -- 0ms;
SELECT DISTINCT ((((((t0.c0)IS NOT(rt0.c2)))OR(rt0.c1)))AND((t0.c0 IN (t0.c2)))) FROM rt0, t0 WHERE (ABS((((NULL))>((0.11456656748081728))))); -- 0ms;
SELECT DISTINCT ((((((t0.c1))<=((t0.c0))), CASE WHEN rt0.c0 THEN rt0.c0 ELSE x'' END, LIKELIHOOD(DISTINCT t0.c2, 0.5872833410581162)))>=(((+ (rt0.c2)), ((0.34125320184956154)<<(rt0.c1)), CASE '(0QqdzF'  WHEN t0.c0 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN 0.12257989950132075 END))) FROM t0, rt0; -- 0ms;
SELECT ((SUM(rt0.c0))<(rt0.c0)), ((rt0.c0) NOTNULL), (((((rt0.c0))<((t0.c1)))) NOT BETWEEN (AVG(t0.c2)) AND ((~ (rt0.c0)))) FROM t0;SELECT DISTINCT (+ ((NOT (t0.c1)))), t0.c0, ((((COUNT(*))OR(t0.c2)))AND(TOTAL(t0.c1))), (((GROUP_CONCAT(t0.c2), ((rt0.c1)=(t0.c2)), rt0.c2 COLLATE RTRIM, t0.c1 COLLATE RTRIM, CAST(t0.c2 AS INTEGER)))==((((((t0.c0)OR(rt0.c2)))OR(t0.c2)), (rt0.c1 IN ()), (('239532958') ISNULL), rt0.c0 COLLATE RTRIM, x''))), ((IFNULL(rt0.c1, t0.c2))%(((t0.c0)AND(t0.c1)))) FROM t0 WHERE (((('')) BETWEEN ((QUOTE(-259618821))) AND (((((1.777448037E9, '!ks', 0.3945456378223007)) NOT BETWEEN ((0Xffffffffb9400c68, x'', x'')) AND (('2013436407', 0.9281594168729378, NULL)))))));SELECT ALL FIRST_VALUE((((((rt0.c1 IN ()))OR((((rt0.c1))!=((t0.c2))))))AND(SQLITE_VERSION()))) OVER (), (((- (t0.c0))) IS TRUE), ((rt0.c0) ISNULL) FROM t0, rt0 WHERE (((((((((((NULL)AND('0.8915210048275632')))OR('nlp3')))OR(x'')))AND(NULL)))GLOB(CASE WHEN 0.5723878621526521 THEN x'65fb' WHEN 0.9049961428472291 THEN '1898139041' WHEN x'' THEN 0.41986078094133994 WHEN 0Xffffffff93a725b7 THEN '[hS	' WHEN x'' THEN 0.8777164026807931 END))); -- 0ms;
SELECT DISTINCT x'', ((ROUND(t0.c0, NULL)) NOT NULL), ((rt0.c1) IS FALSE) COLLATE NOCASE FROM rt0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN NULL THEN '-679082330' WHEN '362740778' THEN x'' WHEN x'46ee' THEN '-676298915' WHEN '-617220868' THEN 0.44750215705827756 WHEN 0.7700743018763998 THEN 0.10844266846475015 END, 0.5812193126779717)) LIMIT -774717660 OFFSET -1018259172;SELECT DISTINCT COUNT(*), ((((((((x'335e')AND(rt0.c0)))OR(((rt0.c2)==(rt0.c2)))))OR((((t0.c2))<=((NULL))))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c1)))), ((((((((((rt0.c1)AND(t0.c1)))OR(t0.c0)))AND(t0.c2)))OR(0.12826808337300055))) BETWEEN ((((t0.c1, t0.c2, t0.c2))<=((rt0.c1, t0.c2, rt0.c0)))) AND (((rt0.c1)||('531162587')))), (((CAST(0.8425952880947447 AS BLOB), CASE WHEN '-1010778415' THEN t0.c1 END, CAST(rt0.c1 AS BLOB)))<((TOTAL(rt0.c0), CAST(t0.c2 AS BLOB), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))), ((t0.c2 COLLATE NOCASE) NOTNULL) FROM t0, rt0; -- 1ms;
SELECT ALL -1.856960164E9 FROM t0 WHERE (((UNICODE(x'c823')) NOT NULL)) GROUP BY ((t0.c0)||(rt0.c1 COLLATE NOCASE)), (((t0.c0 IN (t0.c1)))LIKE(CASE rt0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)), t0.c0 HAVING ((rt0.c1 COLLATE RTRIM) IS TRUE);SELECT DISTINCT TYPEOF(DISTINCT SQLITE_COMPILEOPTION_GET(rt0.c0)) FROM t0;SELECT DISTINCT CASE WHEN ((t0.c1) IS TRUE) THEN (rt0.c2 IN (t0.c0)) ELSE ((rt0.c0)/(rt0.c1)) END FROM rt0, t0 WHERE (((CHANGES())=(0.477278654773573))); -- 0ms;
SELECT ALL x'' FROM rt0 LEFT OUTER JOIN t0 ON t0.c1; -- 0ms;
SELECT DISTINCT (('') IS FALSE) FROM t0, rt0 WHERE ((x'' IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (- (rt0.c0 COLLATE RTRIM)), COUNT((+ (rt0.c2))), (((rt0.c2)) BETWEEN (((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))))) AND (((t0.c0 IN (t0.c2))))) FROM t0;SELECT DISTINCT ((((rt0.c1) NOTNULL)) IS TRUE) FROM t0;SELECT DISTINCT ((SUM(rt0.c0)) NOT BETWEEN (CAST(NULL AS INTEGER)) AND (MIN(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT ((-6.75554796E8) NOTNULL) FROM rt0; -- 0ms;
SELECT ALL CAST((- (t0.c1)) AS BLOB) FROM t0, rt0; -- 0ms;
SELECT (((('-34941867')AND(t0.c0)))AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c2)))), ((((rt0.c1)OR(rt0.c0))) ISNULL), rt0.c1, CAST(((rt0.c1) BETWEEN (0.23946182235500002) AND (rt0.c0)) AS INTEGER), ((((rt0.c2)/(rt0.c2)))%(CAST(rt0.c0 AS BLOB))), ((HEX(DISTINCT rt0.c2))<(((t0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1)))), (((rt0.c1 IN (t0.c1, t0.c2)))>((t0.c1 IN ()))) FROM t0, rt0 GROUP BY (rt0.c1 IN (t0.c0)) COLLATE BINARY, t0.c0, CASE 0.27316708489995556  WHEN '2061005539' THEN CASE t0.c2  WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN rt0.c2 ELSE t0.c0 END WHEN ((rt0.c2) IS FALSE) THEN '-824615975' WHEN ((rt0.c1) IS FALSE) THEN CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END ELSE ((0.6929819224842911) NOTNULL) END, (((+ ('0.7908302118141843'))) NOT BETWEEN (t0.c2) AND (CAST(t0.c0 AS INTEGER))), ((((t0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE); -- 0ms;
SELECT DISTINCT COUNT(json_array_length(rt0.c0)) OVER () FROM rt0, t0 WHERE (((((((((x'')AND('+0')))AND(x'')))AND((((x'5058826a', '屑JFtp6Lo', 0.9564614063431772, NULL, NULL))<((x'', x'', '0.9281594168729378', 0.20980016880366903, '1688333894'))))))OR((('-1286692335') BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT (+ ((((NULL))<>((rt0.c0))))), t0.c1, ABS(DISTINCT CAST(rt0.c1 AS BLOB)) FROM rt0, t0 WHERE (SQLITE_COMPILEOPTION_GET(UPPER('&,%^Lड़\'))); -- 0ms;
SELECT DISTINCT CAST(((t0.c2)|(t0.c1)) AS TEXT) FROM t0 WHERE (((0.5352033972574151 IN ()) IN ())) ORDER BY (((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) ISNULL);SELECT ALL ((((t0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (t0.c0) AND (COUNT(rt0.c1))) FROM rt0;SELECT DISTINCT CAST(((t0.c1)<=(t0.c2)) AS REAL) FROM rt0 WHERE (((LOWER(NULL)) NOT BETWEEN (((((NULL)AND(0X59944797)))AND(0.29831381530831513))) AND (x'a7c4' COLLATE NOCASE)));SELECT ALL ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)|(0.860769373872816)), ((((rt0.c1)AND(COUNT(rt0.c1))))OR(t0.c0)), CAST(NULL AS REAL) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2) ISNULL) FROM t0 WHERE (((CAST(x'1c1d' AS TEXT))!=(HEX(''))));SELECT DISTINCT (((((t0.c0, t0.c0, -1894666751))==((t0.c0, t0.c1, t0.c0))))%(((((((((rt0.c2)OR(t0.c1)))OR(rt0.c1)))OR('AUa䪣')))AND(rt0.c0)))) FROM rt0, t0 LIMIT 1297298517; -- 0ms;
SELECT ((rt0.c1) NOT NULL) COLLATE RTRIM, (COUNT(rt0.c2) IN (((t0.c2)OR(t0.c2)))), (NOT (rt0.c0 COLLATE RTRIM)) FROM rt0, t0 WHERE ((NOT ((('0.6178301869853323')<<(NULL))))); -- 0ms;
SELECT DISTINCT NULL, ABS((t0.c0 IN (rt0.c2, x'', t0.c1, t0.c1))), UNICODE(rt0.c0 COLLATE NOCASE) FROM rt0, t0 WHERE (('-[]o' COLLATE NOCASE IN ((-7.7471766E8 IN (0.4600536039051013))))); -- 0ms;
SELECT ALL t0.c1 FROM rt0 WHERE ((+ (x'')));SELECT ((((rt0.c0) ISNULL)) NOT BETWEEN (((((((((((((rt0.c2)OR(rt0.c0)))OR(t0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) AND (((rt0.c0)AND(rt0.c1)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c1)/(t0.c0)) IN ()) FROM rt0, t0 WHERE ((((454413050 IN ('{8|c*Lf'))) BETWEEN (((NULL) IS TRUE)) AND ((('1391012421')<<('^EcW'))))) GROUP BY ((((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (((t0.c1) NOT BETWEEN (0.45745447312763166) AND (t0.c1)))); -- 0ms;
SELECT ALL SUM(rt0.c2) OVER () FROM t0 WHERE ((((NOT (NULL))) IS FALSE));SELECT ((CAST(rt0.c1 AS INTEGER)) ISNULL) FROM t0 WHERE (((((0.429613496278336)<=('1932421993')))LIKE(LOWER(0.4819624036513078))));SELECT 'iLH7t僼鑟V' COLLATE NOCASE, ((('120309845', rt0.c0, t0.c0)) BETWEEN ((LTRIM(t0.c0), ((((rt0.c1)OR(t0.c0)))AND(t0.c1)), ((t0.c1) NOTNULL))) AND (((t0.c1 IN (t0.c1)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c1 END))), LAST_VALUE(((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((('}X')>(rt0.c0))))) OVER () FROM rt0 WHERE (((((0.4716277396970312) NOT BETWEEN (-762476036) AND (0Xffffffffe1a57242))) BETWEEN ((~ (NULL))) AND (((x'') NOTNULL))));SELECT DISTINCT rt0.c2 FROM t0, rt0; -- 0ms;
SELECT DISTINCT (- (t0.c0 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT (((((NULL IN (rt0.c2)))OR(COUNT(rt0.c2))))AND(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))), SUM(((rt0.c2) IS FALSE)), (((((((((((('릀|H')OR(t0.c2)))AND(t0.c0)))OR((('-334550222') NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c0)GLOB(t0.c2)))))OR(CAST(rt0.c2 AS INTEGER))))OR(CAST(rt0.c0 AS BLOB))) FROM t0, rt0 GROUP BY ((IFNULL(t0.c1, t0.c1)) BETWEEN ((t0.c1 IN ('1e500', rt0.c0))) AND (((rt0.c2)+(t0.c1)))), CAST(NULL AS INTEGER), (((((t0.c2))==((rt0.c1)))) NOT BETWEEN (rt0.c1) AND (('0.34785793306152557' IN ()))) HAVING (((UPPER(DISTINCT rt0.c2)))<>((SUM(t0.c1)))) ORDER BY CAST(CASE WHEN t0.c0 THEN rt0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END AS BLOB) ASC  NULLS LAST; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM t0, rt0 INTERSECT SELECT DISTINCT (- (rt0.c1 COLLATE RTRIM)) FROM t0, rt0 WHERE (((((((NULL) NOT NULL))OR((NULL IN ()))))OR('1362428237'))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c2)>(rt0.c1)) THEN (0.5457972411686327 IN ()) WHEN ((rt0.c1)&(rt0.c2)) THEN CAST(t0.c1 AS REAL) WHEN (t0.c2 IN ()) THEN ((t0.c0) IS FALSE) WHEN (rt0.c2 IN ()) THEN CAST(rt0.c1 AS NUMERIC) WHEN (- ('-1849988340')) THEN 0.06903629147905177 END, (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c2))>=(('3㵝i['))), CAST(rt0.c0 AS TEXT), LOWER(t0.c0))) AND ((CASE t0.c1  WHEN rt0.c0 THEN 0.37758307594797647 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c2 THEN rt0.c2 ELSE rt0.c2 END, CAST(rt0.c1 AS NUMERIC), CASE t0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))), (((((((('ꗩ]jy')OR(CASE rt0.c1  WHEN t0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(GROUP_CONCAT(rt0.c2))))AND(CASE t0.c1  WHEN rt0.c0 THEN rt0.c0 END)))OR((('-1728388547')>(2042137864)))) FROM t0, rt0 WHERE (IFNULL(DISTINCT ((NULL) ISNULL), CASE WHEN NULL THEN 178766198 WHEN x'7b95' THEN NULL WHEN 0.2693635099055661 THEN 1329730041 ELSE NULL END)); -- 0ms;
SELECT ALL ((((t0.c1)OR(LIKELY(t0.c1))))OR(TOTAL(rt0.c1))) FROM t0 LIMIT -1849988340;SELECT MAX(TIME(rt0.c1, rt0.c2, rt0.c1, t0.c0, t0.c2)), (((t0.c1)) BETWEEN ((UPPER(DISTINCT ''))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 END))), ((((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))<<(CASE t0.c1  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)) FROM rt0 WHERE (CAST(CAST(NULL AS BLOB) AS BLOB));SELECT DISTINCT (((((- (rt0.c2)))AND(GROUP_CONCAT(rt0.c0))))AND((rt0.c2 IN ()))), json_valid(((t0.c2)<<(798438382))), (((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)) IN (GROUP_CONCAT(rt0.c0))) FROM t0, rt0 ORDER BY (((t0.c0))!=((rt0.c1))) COLLATE NOCASE ASC, (((t0.c1)) BETWEEN ((CAST(t0.c1 AS REAL))) AND (((((rt0.c1, rt0.c0, rt0.c0))!=((rt0.c2, t0.c1, 1603859753)))))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1) IS TRUE) THEN rt0.c0 COLLATE BINARY WHEN ((t0.c0)AND(NULL)) THEN CAST(rt0.c1 AS BLOB) WHEN t0.c2 COLLATE RTRIM THEN ((t0.c2)==(rt0.c2)) ELSE (t0.c1 IN ('')) END, ((AVG(rt0.c2))||(COUNT(*))), (- (CASE rt0.c1  WHEN 1696374869 THEN t0.c1 ELSE rt0.c0 END)) FROM rt0;SELECT DISTINCT (((rt0.c2, t0.c0, rt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 ELSE NULL END, COUNT(rt0.c2), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c2)))) AND ((((rt0.c2) NOTNULL), ((t0.c0)|(t0.c1)), ((rt0.c0) ISNULL)))) FROM rt0, t0 WHERE (((0.16594485798992897)||('0SQ<等_Tt]')) COLLATE NOCASE); -- 1ms;
SELECT ALL (+ ((~ (rt0.c1)))), (((rt0.c0, rt0.c2, t0.c2)) NOT BETWEEN ((COUNT(rt0.c0), ((t0.c0)>=(rt0.c1)), ((t0.c0)LIKE(t0.c1)))) AND ((rt0.c2, ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)), 0.3220512709554989))), (NULL IN ()) FROM t0, rt0 ORDER BY rt0.c0; -- 0ms;
SELECT ALL (rt0.c0 IN ()) FROM rt0; -- 0ms;
SELECT ALL t0.c1 FROM rt0 WHERE ((((('-1660403438', '-762476036', x'')) BETWEEN (('Fk馒O\nM', NULL, x'')) AND ((x'', 'w\n霭~^<''7', x''))) IN ())) LIMIT -845619155;SELECT ALL x'' FROM t0 WHERE (((('y#T?')>>(0.49969741628956577)) IN ())) LIMIT 968359267 OFFSET -665033620; -- 0ms;
SELECT (NOT (NULLIF(DISTINCT t0.c1, t0.c0))), CASE rt0.c1 COLLATE BINARY  WHEN ((t0.c1) IS TRUE) THEN ((rt0.c0) NOT BETWEEN ('0.278504480862815') AND (t0.c2)) ELSE (- (rt0.c2)) END, (+ (CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE t0.c2 END)) FROM rt0, t0 LIMIT 782555728 OFFSET 941087142; -- 0ms;
SELECT DISTINCT (((((((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))OR((((rt0.c2)) BETWEEN ((t0.c1)) AND ((t0.c2))))))AND(CASE WHEN t0.c1 THEN 0Xffffffffa0077b09 WHEN NULL THEN t0.c0 WHEN t0.c2 THEN t0.c1 END)))AND(GROUP_CONCAT(rt0.c0))))OR(((t0.c1) BETWEEN (0.5925642165291302) AND (rt0.c2)))) FROM t0, rt0; -- 0ms;
SELECT ALL COUNT(CASE t0.c1  WHEN t0.c2 THEN t0.c2 END), x'', (- ((+ (x'51c4')))) FROM rt0, t0 WHERE (ABS(DISTINCT 'lh')); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0)IS(t0.c0)) THEN CASE NULL  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END WHEN ((((((((t0.c0)AND(t0.c2)))OR(t0.c1)))OR(t0.c2)))OR(rt0.c0)) THEN 0.49026053227773925 WHEN CAST(t0.c0 AS NUMERIC) THEN (((NULL)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (- (rt0.c0)) THEN (((t0.c1, t0.c2, t0.c2)) BETWEEN ((t0.c1, rt0.c2, t0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0))) WHEN TRIM(rt0.c1) THEN ((t0.c1)<(t0.c0)) ELSE ((rt0.c2)<=(rt0.c1)) END FROM rt0, t0; -- 1ms;
SELECT DISTINCT ((((UNLIKELY(rt0.c1))OR((t0.c2 IN (t0.c1, t0.c2)))))AND(((t0.c2)*(rt0.c2)))) FROM rt0, t0 WHERE (((0.9720689536910551 COLLATE BINARY)!=(((0.7298230911772149) NOT BETWEEN (NULL) AND (NULL))))) GROUP BY (((t0.c1 IN ()))<>(((t0.c1) NOTNULL))) HAVING ((((t0.c1)<=(t0.c2)))AND(rt0.c1 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT t0.c1 FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c2)OR(t0.c1)))OR(t0.c0))) IS FALSE) FROM t0, rt0 WHERE ((NOT (((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT RTRIM((0.965852324654596 IN ())), ((((rt0.c1)%(rt0.c0))) IS FALSE), ((x'')<=(((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(t0.c1)))OR(rt0.c2)))AND(x'61df7657')))) FROM t0 WHERE ((((x'' IN ())) NOT BETWEEN ((NULL IN (NULL))) AND (0.024138705028179275 COLLATE BINARY))) LIMIT 697187011 OFFSET -1730384254;SELECT DISTINCT rt0.c1 FROM rt0, t0 WHERE (((('1391012421' IN ())) NOTNULL)) GROUP BY CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS TEXT); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((x'')) AND ((NULL))) FROM rt0 WHERE (CAST((NOT (x'')) AS NUMERIC)); -- 0ms;
SELECT ((((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<=((CAST(t0.c2 AS INTEGER)))) FROM t0;SELECT DISTINCT (((rt0.c0, t0.c1, 1932421993)) NOT BETWEEN ((((t0.c0)>(t0.c2)), rt0.c0 COLLATE RTRIM, t0.c2 COLLATE NOCASE)) AND ((load_extension(rt0.c0, t0.c0), ((rt0.c2)*(t0.c1)), CASE t0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 WHEN rt0.c2 THEN t0.c1 END))) FROM rt0, t0;SELECT DISTINCT ((t0.c2) NOT BETWEEN ('0.23946182235500002') AND (CAST(rt0.c1 AS REAL))) FROM t0, rt0; -- 1ms;
SELECT (((((t0.c1, rt0.c1, t0.c1)) BETWEEN ((rt0.c2, t0.c2, rt0.c1)) AND ((rt0.c2, t0.c2, t0.c0)))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c2 ELSE rt0.c1 END) AND (-1.754424981E9)) FROM t0 NOT INDEXED, rt0; -- 0ms;
SELECT (MAX(rt0.c2) IN (LIKELY(DISTINCT rt0.c2))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)AND(t0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))*('0s')) FROM rt0 WHERE (CAST(x'' AS BLOB));SELECT (((((((((t0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(t0.c0)))OR(t0.c2)) IN ()), CAST(((rt0.c1)=(rt0.c0)) AS REAL), CAST(7.96649065E8 AS BLOB) FROM rt0, t0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT DISTINCT ((((NULL) IS TRUE))<=(((t0.c2)GLOB(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (('u]')*((+ (rt0.c0)))), ((((0.6146004767536066)AND(t0.c1)))<<(((rt0.c2) NOTNULL))), ((rt0.c2)*((rt0.c0 IN ()))) FROM t0, rt0 WHERE (((CASE NULL  WHEN NULL THEN 0.6144419522789232 END) IS FALSE)); -- 0ms;
SELECT DISTINCT (((((t0.c0 IN ('1362428237')))OR(((((t0.c2)OR(rt0.c1)))OR('395956298')))))AND(ROUND(t0.c2, rt0.c2))) FROM rt0 LIMIT 178766198;SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c2))) BETWEEN ('-1653059981') AND (((rt0.c2)>>(0.3174514670660241)))) FROM rt0, t0 WHERE ((NOT (((NULL) NOT BETWEEN ('133263862') AND (''))))) LIMIT -1260964717; -- 0ms;
SELECT DISTINCT LAST_VALUE(((t0.c2) NOT BETWEEN ((~ (rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c0 THEN '43731936' END))) OVER ( ORDER BY ((((((t0.c2) BETWEEN (t0.c1) AND (t0.c2)))AND(((rt0.c0) NOT NULL))))AND(0.1955976752375137)) ASC), (((~ (t0.c0)))>>(((((rt0.c0)OR(t0.c1)))AND(rt0.c1)))), ((((((((rt0.c1)AND(rt0.c2)))OR(t0.c0)))AND(((((t0.c0)OR(rt0.c1)))AND(t0.c1)))))OR(UPPER(DISTINCT x'a719'))) FROM t0, rt0 LIMIT -1193212047; -- 1ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB)) BETWEEN (COUNT(*)) AND ((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c0))))) FROM rt0, t0 WHERE ((NOT (x'' COLLATE RTRIM))); -- 0ms;
SELECT ALL (((- (rt0.c0)))>>(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((x'' IN ()) IN (((((t0.c1)AND(rt0.c2)))AND(rt0.c0)))) FROM rt0, t0; -- 0ms;
SELECT t0.c0 FROM t0, rt0 WHERE (LOWER(DISTINCT NULL) COLLATE NOCASE); -- 0ms;
SELECT ALL NTILE((('2035702943')LIKE(t0.c0))) OVER ( ORDER BY ((((NULL)OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))))OR(t0.c0 COLLATE RTRIM))  NULLS LAST) FROM t0, rt0 WHERE ((0.3349387031068557 COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT (TRIM(DISTINCT '439493342', rt0.c1) IN ()) FROM t0 NOT INDEXED, rt0; -- 0ms;
SELECT ((MIN(t0.c1))|(((t0.c1)<(rt0.c1)))), ((((t0.c0)<>(t0.c0))) NOTNULL), CAST(rt0.c0 AS INTEGER) COLLATE BINARY FROM t0 CROSS JOIN rt0 ON (((t0.c2)||(rt0.c1)) IN ()) WHERE (((('0.4298736397561467' IN ()))/(('' IN ())))); -- 0ms;
SELECT DISTINCT (((((rt0.c0)AND(t0.c0)))AND(rt0.c2)) IN (CAST(rt0.c0 AS REAL), ((rt0.c1)>(1166225078)))), (((((rt0.c1 IN ()))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(t0.c2 AS REAL))), LIKELY((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))), LIKELY(DISTINCT UNICODE(rt0.c1)), AVG(CAST(t0.c0 AS BLOB)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST(((t0.c2) NOT NULL) AS BLOB) FROM t0; -- 0ms;
SELECT (((t0.c2)+(rt0.c1)) IN ((((rt0.c2))!=((t0.c0))))), ((((((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))OR(((t0.c0)|(NULL)))))AND(rt0.c0 COLLATE RTRIM)), LIKELIHOOD(DISTINCT ((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)), 0.38922336522899015) FROM t0 WHERE (((((((NULL)IS(x'')))OR(CAST(x'' AS NUMERIC))))OR(NULL)));SELECT ALL '<xQ3' FROM rt0 WHERE ((((x'')) NOT BETWEEN (((0.172603090809321 IN (NULL)))) AND ((((x'') NOTNULL))))); -- 0ms;
SELECT ALL ((t0.c0 COLLATE BINARY) NOT NULL), ((((LOWER(DISTINCT '-9223372036854775808'))AND(AVG(t0.c1))))OR(((t0.c2) NOT BETWEEN (-774717660) AND ('')))), x'' FROM t0 WHERE (((((x'')) BETWEEN ((0.24114575145657313)) AND ((0.3817076097063683))) IN ())); -- 0ms;
SELECT ALL CAST(rt0.c1 AS INTEGER) COLLATE BINARY, NULLIF(DISTINCT t0.c2, t0.c0) COLLATE RTRIM, CAST(((rt0.c2)>=(0.6540606255295538)) AS TEXT), '-762476036' COLLATE BINARY, AVG((NOT (rt0.c1)) COLLATE NOCASE) OVER () FROM rt0;SELECT ALL (((((((t0.c1)OR(rt0.c0)))OR(rt0.c2))))>((rt0.c0))) FROM rt0, t0 WHERE (((NULL COLLATE NOCASE) BETWEEN (((' S!먿t') BETWEEN (0.7000595381012704) AND ('-1212381599'))) AND (CAST('PZn}sOﲏ!' AS BLOB)))) GROUP BY CAST(((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)) AS BLOB) HAVING (((rt0.c0)OR(rt0.c0)) IN (t0.c1)); -- 0ms;
SELECT DISTINCT (((((((((((t0.c0, t0.c1, '-1771800472', rt0.c1, rt0.c2))<=((rt0.c0, t0.c0, rt0.c1, rt0.c1, t0.c0))))OR(((rt0.c0)<<(t0.c1)))))AND(CASE t0.c2  WHEN rt0.c1 THEN t0.c0 END)))AND(((rt0.c1) NOTNULL))))OR((rt0.c2 IN ()))) FROM rt0, t0 WHERE (CAST((((NULL))<((0Xffffffffbb09694d))) AS INTEGER)); -- 0ms;
SELECT ALL ((rt0.c1)*(((rt0.c2) IS FALSE))), CASE WHEN ((t0.c0) BETWEEN (rt0.c1) AND (t0.c2)) THEN (NOT (rt0.c1)) WHEN SUM(rt0.c2) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (0.9615709340946492)) WHEN (((t0.c0)) BETWEEN ((0.13538533989772572)) AND ((rt0.c0))) THEN 0.5457972411686327 END, (((('1620705063') NOT NULL)) ISNULL) FROM t0 WHERE (((((0.8201272088955089)OR(x'')))AND(NULL)) COLLATE NOCASE);SELECT DISTINCT t0.c0 FROM t0 LIMIT -1967020581 OFFSET -1330938137; -- 0ms;
SELECT ALL SUM((('-824615975')<=(t0.c2))) FROM t0 WHERE ('7') LIMIT -665930046; -- 0ms;
SELECT DISTINCT (~ (rt0.c1 COLLATE NOCASE)) FROM t0, rt0 WHERE (((('289143951' IN ())) NOT BETWEEN (((NULL)>=('0.9209289269834551'))) AND ((('-1086581213') BETWEEN (0.712315360778407) AND (0.7001719923480034))))) GROUP BY (- (rt0.c0 COLLATE BINARY)) HAVING '1808751697' ORDER BY ((((t0.c0) NOTNULL))=(((t0.c1) BETWEEN (t0.c1) AND (t0.c1)))) DESC  NULLS LAST LIMIT -951307813; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2)))<=(COUNT(rt0.c2))), ((((rt0.c1))>=((rt0.c0))) IN ()), ((((((((AVG(t0.c1))AND(CAST(rt0.c1 AS NUMERIC))))OR(AVG(rt0.c1))))OR(TRIM('-1888752165', t0.c2))))OR(TOTAL(rt0.c1))), (((rt0.c1, t0.c2, x'')) BETWEEN (((rt0.c1 IN ()), (t0.c2 IN ()), (+ ('')))) AND ((t0.c1 COLLATE RTRIM, LIKE(rt0.c0, t0.c0), (('-1303230670')IS(rt0.c0))))), (+ (rt0.c1)) FROM t0 WHERE ((0xffffffffe7ca54ef IN ()) COLLATE BINARY);SELECT DISTINCT GROUP_CONCAT(((((rt0.c1)AND(t0.c2)))AND(t0.c1))) OVER () FROM t0, rt0; -- 4ms;
SELECT DISTINCT CAST(((rt0.c2)<=(t0.c2)) AS TEXT) FROM rt0, t0 WHERE ((TRIM(NULL) IN ((((('120309845')AND(-292316558)))AND('-209887072')), (+ (x''))))) GROUP BY ((((rt0.c1)LIKE(t0.c0)))/(((t0.c2)IS NOT(rt0.c2)))) HAVING ''; -- 0ms;
SELECT DISTINCT (((t0.c1)) BETWEEN ((t0.c1 COLLATE BINARY)) AND ((0.7908302118141843))) FROM t0 WHERE ((((((((((((((((('lL|!LWf')AND(0.5290004772417598)))OR(x'')))OR(x'')))AND(x'b8a4')))AND((- (-22893680)))))OR(0.17090622634706687 COLLATE BINARY)))AND(TYPEOF(0.13592477490459753))))OR(NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c2)<(rt0.c2)) THEN (rt0.c1 IN (t0.c1)) ELSE ((t0.c0) BETWEEN (rt0.c1) AND (t0.c0)) END FROM t0, rt0; -- 0ms;
SELECT DISTINCT (- (CAST(rt0.c2 AS REAL))) FROM rt0, t0; -- 0ms;
SELECT CAST(((t0.c2)/(rt0.c2)) AS REAL) FROM t0, rt0 WHERE (((((NULL IN (0.7336802661123532)), 0.1509110051973831 COLLATE BINARY, (('') IS FALSE), (NOT (x'')), ((((((((((((NULL)AND('')))AND(1045521275)))OR(x'')))AND(0.26633847717451187)))AND(NULL)))OR(NULL))))<((CASE x''  WHEN NULL THEN x'6520' END, LIKELIHOOD('1720212419', 0.2505419320324189), NULL COLLATE NOCASE, ((x'') NOTNULL), NULL)))); -- 0ms;
SELECT ALL ABS(DISTINCT t0.c1), CASE WHEN CAST(rt0.c0 AS TEXT) THEN t0.c0 ELSE ((rt0.c1)-(t0.c1)) END, rt0.c0 FROM t0, rt0 NOT INDEXED WHERE ((~ (((x'')>=(x''))))); -- 0ms;
SELECT ALL CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS INTEGER) FROM t0, rt0 WHERE (0.795178094755135) GROUP BY (((NOT (t0.c1))) IS FALSE), (((0.6732011513834214)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 END))), (NOT (((t0.c0) IS TRUE))) HAVING 'V+' ORDER BY ((((t0.c0) NOT NULL)) NOT BETWEEN (CASE rt0.c1  WHEN t0.c0 THEN t0.c2 END) AND (CAST(rt0.c1 AS REAL))), (((rt0.c0 IN (t0.c0)))IS NOT(rt0.c2 COLLATE NOCASE)) ASC; -- 0ms;
SELECT ALL ((((CASE t0.c1  WHEN rt0.c1 THEN t0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c0 END)AND(((t0.c0)>>(t0.c1)))))OR(24496705)) FROM t0, rt0 WHERE (((((((((x'' COLLATE RTRIM)OR(NULL COLLATE NOCASE)))AND((NOT ('')))))OR((('i~/TKW') NOT BETWEEN (0.4542811665572297) AND (x'05fc')))))OR(((x'33b1')LIKE('0.6178301869853323'))))); -- 0ms;
SELECT ALL ((((((((t0.c0)AND(rt0.c1)))AND(t0.c0)))OR(NULL)))AND(t0.c0)) COLLATE RTRIM COLLATE BINARY FROM rt0;SELECT ((CASE rt0.c2  WHEN 0.8524285755136006 THEN t0.c0 END) IS TRUE), LIKE(rt0.c1, '124242127') COLLATE RTRIM, 0.24688330199632946 FROM rt0 WHERE (IFNULL(DISTINCT NULL, NULL) COLLATE RTRIM);SELECT COUNT(((((rt0.c2)OR(t0.c2)))AND(rt0.c0))) FROM rt0, t0 WHERE ((((((-403474635) NOT BETWEEN (x'') AND (x''))))<((UPPER(DISTINCT 0xffffffffcdacc9e0))))) ORDER BY ((((((((((rt0.c2)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))AND(x'')))GLOB(((rt0.c2) ISNULL))) DESC  NULLS LAST, (((t0.c1)) NOT BETWEEN ((t0.c1 COLLATE NOCASE)) AND (('N' COLLATE RTRIM))); -- 0ms;
SELECT ((TOTAL('(lpjoi^	'))|(SUM(t0.c1))), ((t0.c1 COLLATE BINARY) BETWEEN (COUNT(*)) AND (((x'145c')<(t0.c2)))), LIKELY(DISTINCT CASE rt0.c0  WHEN t0.c2 THEN rt0.c2 END) FROM rt0, t0; -- 0ms;
SELECT CAST(t0.c1 AS NUMERIC), ROUND((+ (rt0.c0)), CAST(rt0.c2 AS BLOB)), LAG(x'', (((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)), ((((((((t0.c1)AND(t0.c1)))AND(t0.c2)))OR(t0.c0)))AND(t0.c1)), ((t0.c1)&(t0.c1)), CAST(t0.c0 AS TEXT), ((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))<=(((('\n偸') BETWEEN (t0.c1) AND (t0.c2)), ((t0.c0) NOT NULL), LOWER(t0.c2), ((t0.c0) NOT NULL), (~ (t0.c1))))), ((t0.c2 COLLATE BINARY) ISNULL)) OVER () FROM t0 WHERE (((((('-1378109938') BETWEEN ('u') AND ('-1330938137'))))<((('603367394' IN ()))))) LIMIT 481211428;SELECT ALL (((((rt0.c1)<=(t0.c1))))!=((((rt0.c1)GLOB(rt0.c0))))) FROM t0, rt0; -- 0ms;
SELECT RANK() OVER (), ABS(((((t0.c2)AND(NULL)))AND(rt0.c0))), ((((MAX(t0.c1))AND(json_array_length(t0.c0, rt0.c0))))OR('-2114591469')) FROM t0;SELECT SUM(CASE t0.c2  WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 END) OVER ( ORDER BY CAST((rt0.c1 IN ()) AS REAL), (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (0.88310601442531 IN ()), CAST(t0.c2 AS REAL))) AND (('', t0.c2, (t0.c0 IN ())))) DESC  NULLS LAST), x'f789', x'f933' COLLATE RTRIM FROM rt0, t0 LIMIT 417122208; -- 0ms;
SELECT ALL (((((t0.c2)AND(rt0.c2)))OR(rt0.c0)) IN ()), (((CAST(t0.c1 AS TEXT), ((t0.c1) BETWEEN (t0.c2) AND ('3	Pl0h')), (((t0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2)))))=((AVG(rt0.c1), CASE rt0.c1  WHEN '1808751697' THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN NULL END, ((rt0.c2) NOT NULL)))), (rt0.c2 IN (rt0.c2)) COLLATE NOCASE, HEX(((rt0.c0) BETWEEN (t0.c0) AND (t0.c0))), ((rt0.c2 COLLATE BINARY) BETWEEN (((t0.c2)==(rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))) FROM t0 WHERE (NULL);SELECT DISTINCT CASE (t0.c0 IN ())  WHEN ((t0.c0)IS NOT(t0.c2)) THEN (~ (rt0.c0)) END FROM t0;SELECT DISTINCT CASE WHEN CASE WHEN rt0.c2 THEN t0.c2 END THEN t0.c2 COLLATE RTRIM ELSE (((t0.c2, 0xffffffffc7cce2df, NULL)) BETWEEN ((t0.c0, rt0.c1, rt0.c2)) AND ((t0.c0, t0.c0, t0.c0))) END, ((((((t0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))OR(CAST(rt0.c2 AS INTEGER))))AND((((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))), AVG((- (rt0.c1))) FILTER(WHERE ((('Sﭞ', ('-1880433783' IN ()), rt0.c2))>(('nk4ꦽLN', (- (rt0.c2)), rt0.c2 COLLATE BINARY)))) OVER () FROM rt0, t0 WHERE ((+ (CAST('0.9913638853534209' AS TEXT)))) GROUP BY t0.c2, ((0xffffffffcfa76233) BETWEEN (((rt0.c1)!=(rt0.c0))) AND (rt0.c1)), (((((t0.c1)AND(rt0.c1)))AND(rt0.c0)) IN ()) HAVING LENGTH((rt0.c0 IN ())); -- 0ms;
SELECT ALL AVG((((rt0.c2, rt0.c2, t0.c2))<=((rt0.c0, t0.c2, NULL)))) OVER (), GROUP_CONCAT((- (rt0.c0))), ((((LAST_INSERT_ROWID())AND(LTRIM(t0.c2))))AND(rt0.c0)) FROM t0, rt0 WHERE (CAST(0x3ed6ae35 COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS INTEGER))IS NOT(rt0.c0 COLLATE RTRIM)) FROM t0 WHERE ((((('G?')<>(0X6bcf5c51)))GLOB(((NULL)AND(x'061f')))));SELECT DISTINCT ((rt0.c2) ISNULL) COLLATE RTRIM FROM t0, rt0 WHERE ((+ (0.26273857362477526))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT (((rt0.c0, x'', 0.8398508197314559)) BETWEEN ((MIN(rt0.c2), MAX(1720212419, rt0.c1, t0.c0, t0.c1), CAST(t0.c1 AS TEXT))) AND ((((NULL) IS TRUE), (- (rt0.c2)), CASE WHEN t0.c1 THEN rt0.c2 END))) FROM rt0;SELECT DISTINCT (((((((((t0.c0 IN (t0.c2, rt0.c1)))AND(((rt0.c1)==(t0.c0)))))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(t0.c1 AS NUMERIC))))AND(('*8疲_{D/z' IN ()))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST(((((t0.c0)AND(t0.c2)))AND(-1705299945)) AS NUMERIC), (- (rt0.c1)), ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) ISNULL) FROM rt0 WHERE ((- ((((0.49965104601281973, '2036342171', '1808751697'))>=((1380052185, x'', x'')))))) INTERSECT SELECT DISTINCT (((+ (t0.c0)))!=(COUNT(rt0.c0))), (((t0.c1)>=(t0.c1)) IN ()), ((((NULL) IS TRUE))=((~ (rt0.c0)))) FROM t0, rt0 WHERE (CAST(CASE x''  WHEN -1730607980 THEN 'k' WHEN '2?)?5q_' THEN NULL WHEN NULL THEN 0.6924169379314775 WHEN x'' THEN 0.06063707360542314 WHEN x'' THEN x'' END AS INTEGER));SELECT DISTINCT ((((t0.c0) NOT NULL)) NOTNULL) FROM rt0 WHERE (CAST((NOT (NULL)) AS BLOB)) GROUP BY (((t0.c0, rt0.c1, t0.c0)) BETWEEN (((((rt0.c1))>((rt0.c1))), ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0)>(t0.c0)))) AND ((CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN '531162587' WHEN 1.297298517E9 THEN t0.c2 ELSE rt0.c0 END, CAST(t0.c1 AS REAL), ((rt0.c2)%(t0.c2)))));SELECT ALL x'' FROM t0; -- 0ms;
SELECT DISTINCT ('CJF' IN (((t0.c1)<>(rt0.c1)))) FROM rt0 GROUP BY (('-772769276' COLLATE NOCASE)*(((t0.c1)IS(x'ccbc')))), ((CAST(rt0.c2 AS NUMERIC)) NOT NULL), (('6ፂMQ')%(json_array_length(rt0.c0, t0.c1)));SELECT DISTINCT RANK() OVER () FROM t0, rt0 WHERE ((((x'', NULL, 0.49026053227773925)) NOT BETWEEN ((NULL COLLATE NOCASE, ((x'')||(NULL)), CAST(x'ef95' AS REAL))) AND ((((0x6e8b6c03) BETWEEN ('1966021699') AND (-2016809982)), ((NULL) NOT BETWEEN (0.36135771052488974) AND (NULL)), 0.21612634674299536)))); -- 0ms;
SELECT ALL SUM(x'') FROM rt0, t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( RANGE ((((((((t0.c0)AND(t0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR('㨮ड़')) COLLATE BINARY PRECEDING), json_type(CAST(rt0.c1 AS NUMERIC)), CAST((NOT (x'ab719672')) AS REAL), ((CAST(t0.c2 AS REAL)) NOT BETWEEN ((rt0.c2 IN ())) AND ((~ (t0.c0)))), AVG(t0.c2) FROM rt0 WHERE (CAST((((0Xffffffff8ac1a5db)) BETWEEN (('0.7700743018763998')) AND ((x'2580371a'))) AS INTEGER));SELECT DISTINCT (((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))))%('')), GROUP_CONCAT((~ (t0.c0))) OVER (), (((1301316074 IN ('135725317')))+(((rt0.c2)*(t0.c2)))) FROM rt0, t0; -- 0ms;
SELECT TOTAL(t0.c1), rt0.c1, COUNT(((rt0.c1)IS NOT(t0.c1))) FROM rt0, t0 WHERE (CAST(((((((((((((x'00c2')AND('')))AND('-[]o')))OR(',?')))OR(x'')))AND(NULL)))AND(0X318e0135)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c2 THEN t0.c2 WHEN rt0.c0 THEN 0.5673594296272949 WHEN t0.c2 THEN 0x20b7c0e6 ELSE t0.c1 END COLLATE NOCASE, t0.c1, ((((((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(((0.4296605260605404) NOT BETWEEN (rt0.c1) AND (x'')))))OR(((((((((t0.c1)AND('1923038080')))AND(x'ae32')))OR(t0.c1)))OR(rt0.c0)))))AND(HEX(DISTINCT t0.c0))))OR(t0.c1)) FROM rt0;SELECT DISTINCT ((((((((rt0.c1)AND(t0.c1)))OR(t0.c2)))AND(((t0.c2)GLOB(t0.c2)))))OR(MAX(rt0.c2))) FROM t0 WHERE ((LIKELIHOOD(NULL, 0.4253918630085669) IN ()));SELECT DISTINCT ((rt0.c2 COLLATE BINARY) IS FALSE), MIN(((t0.c0) NOTNULL), (((rt0.c0))<=((t0.c0)))), t0.c0 FROM t0, rt0; -- 0ms;
SELECT DISTINCT (COUNT(rt0.c0) IN ()), CAST(((0.8755110984233899)<(rt0.c2)) AS BLOB), CASE WHEN COUNT(t0.c0) THEN rt0.c1 END FROM rt0, t0 WHERE (((('-722382583' IN ()))/(NULLIF(0.3504729620289805, '')))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))AND((+ (rt0.c2)))) FROM rt0 WHERE (CAST(((NULL) BETWEEN (NULL) AND (NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((t0.c2 COLLATE RTRIM) BETWEEN ((rt0.c0 IN ())) AND (CASE WHEN rt0.c1 THEN t0.c1 ELSE '' END)), (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c2)) IN (CASE rt0.c2  WHEN t0.c2 THEN rt0.c1 ELSE rt0.c2 END)), NTH_VALUE(CAST(ABS(rt0.c0) AS BLOB), t0.c0) OVER () FROM t0, rt0 ORDER BY ((((rt0.c1) BETWEEN ('-1157011123') AND (rt0.c0)))>(CASE t0.c2  WHEN t0.c1 THEN rt0.c2 ELSE rt0.c2 END));SELECT DISTINCT NULL, t0.c0, GROUP_CONCAT(((0.11024032446268972) ISNULL)) FROM t0 GROUP BY (((((rt0.c2, t0.c2, rt0.c1, rt0.c2, NULL))>((rt0.c1, t0.c1, t0.c0, rt0.c1, t0.c2))))GLOB(CASE rt0.c1  WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END));SELECT DISTINCT MIN(TOTAL(((t0.c2) NOT NULL))) FROM t0, rt0 WHERE ((~ ('+J' COLLATE RTRIM)));SELECT DISTINCT rt0.c0 COLLATE NOCASE FROM t0 LIMIT -634872442 OFFSET -837798893;SELECT ALL (((rt0.c1)) NOT BETWEEN ((((rt0.c1)/(t0.c0)))) AND ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) FROM rt0, t0 WHERE ((((((-371486151)<<(x'')), (+ (0X41367289)), ((NULL) NOT NULL)))<((CAST(-1124996872 AS BLOB), (NULL IN ('-1981387478', -280304093, '-383952228')), (x'2dee' IN ()))))); -- 0ms;
SELECT ALL SUM(((t0.c0) IS TRUE)) FROM t0, rt0; -- 0ms;
SELECT SUM(((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))) OVER (), x'', json_insert(((rt0.c2) BETWEEN (t0.c2) AND (rt0.c0)), COUNT(rt0.c2), ((t0.c0) NOTNULL), (+ (t0.c0)), ((((((((t0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2))), TIME(((t0.c1)>=(t0.c1)), ((rt0.c0)>=(rt0.c2)), CAST(rt0.c0 AS INTEGER)), ((CASE t0.c0  WHEN t0.c0 THEN rt0.c0 END) NOT BETWEEN (COUNT(*)) AND ((- (t0.c0)))) FROM t0, rt0;SELECT ALL x'8746' FROM rt0, t0 WHERE (((CAST('' AS REAL)) ISNULL)); -- 0ms;
SELECT NULL FROM t0 GROUP BY (((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS TRUE), ((t0.c0)+(rt0.c1)) COLLATE NOCASE, rt0.c2 COLLATE BINARY;SELECT ALL TRIM(DISTINCT GROUP_CONCAT(rt0.c1)) FROM rt0 WHERE (-594056495); -- 0ms;
SELECT DISTINCT ((((t0.c1 COLLATE NOCASE)AND(rt0.c1 COLLATE BINARY)))AND((- (t0.c2)))) FROM rt0 GROUP BY (((t0.c0)) BETWEEN ((ABS(DISTINCT 0.024472826653366475))) AND ((((t0.c1) IS TRUE)))) HAVING CHAR(rt0.c0);SELECT ALL rt0.c2 FROM rt0, t0; -- 0ms;
SELECT AVG(((t0.c1)+(t0.c0))) OVER () FROM rt0;SELECT ALL CAST((~ ('-2022458933')) AS BLOB) FROM rt0 WHERE ((NOT (CASE -1826177886  WHEN 'CJF' THEN '-1065095387' WHEN 0.24417836210238975 THEN '1587616868' WHEN x'fd56' THEN 0.024138705028179275 END))); -- 0ms;
SELECT ALL AVG(((t0.c1)IS(t0.c1))) FROM t0 WHERE (((COALESCE(DISTINCT 1.777448037E9, 0.3610775823135609))IS((((0.3248740623223193))==((x'')))))); -- 0ms;
SELECT DISTINCT TOTAL(COUNT(MIN(t0.c1))) FROM rt0, t0;SELECT DISTINCT ((((rt0.c1)+(rt0.c1)))<=(0.17359401322625723)) FROM t0, rt0 WHERE ((((((('') IS FALSE))OR((+ (NULL)))))OR(CAST('0.44750215705827756' AS INTEGER)))); -- 0ms;
SELECT ((MAX(rt0.c1)) IS TRUE), ((t0.c0 COLLATE RTRIM) NOT BETWEEN (CASE 0.4281852919968916  WHEN rt0.c1 THEN t0.c1 END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END)), ((105329913)&(SUM(x''))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (NOT (CASE rt0.c1  WHEN rt0.c2 THEN '478922856' END)) FROM rt0 GROUP BY (((((((0.5352033972574151, t0.c1, t0.c2, t0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, t0.c1, rt0.c0, t0.c1)) AND ((t0.c2, t0.c0, rt0.c0, rt0.c2, rt0.c2))))AND(CAST(t0.c0 AS NUMERIC))))AND(CAST(rt0.c2 AS INTEGER)));SELECT ((t0.c0 COLLATE NOCASE) NOT BETWEEN (CASE rt0.c0  WHEN 'X' THEN t0.c2 END) AND (CASE t0.c1  WHEN t0.c0 THEN rt0.c0 WHEN x'45b8' THEN rt0.c1 WHEN t0.c2 THEN rt0.c2 END)) FROM rt0 GROUP BY ((((((0.28873304006461187)OR(rt0.c1)))OR(t0.c2))) IS TRUE) HAVING (((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1)) IN (((((((((t0.c2)OR(rt0.c2)))AND(t0.c1)))AND(rt0.c1)))OR(0.29951078612368875))));SELECT DISTINCT t0.c0 FROM rt0 WHERE (((((((0xffffffffeab60a9e)AND('')))OR(NULL)))<((('') NOTNULL))));SELECT DISTINCT ((rt0.c0)<=(t0.c2)) COLLATE NOCASE FROM t0 ORDER BY ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))IS NOT(((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))));SELECT DISTINCT HEX(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))), (((TOTAL(t0.c0)))<=((-1230993198))), (((t0.c2))>=((t0.c1))) COLLATE BINARY FROM t0, rt0; -- 0ms;
SELECT DISTINCT (t0.c1 IN (rt0.c2, t0.c2)) COLLATE BINARY FROM rt0 WHERE ((((CASE WHEN 'Pp' THEN x'4ab03afd' END))>((CAST(x'' AS TEXT)))));SELECT x'' FROM t0; -- 0ms;
SELECT ((((t0.c0)>>(t0.c0)))>=((+ (rt0.c1)))), (((+ (0.6894589303035732)))>=(rt0.c2 COLLATE NOCASE)), rt0.c2 FROM rt0 WHERE (((GLOB('0,|8l', ''))*(ABS(DISTINCT '\/'))));SELECT DISTINCT t0.c1 FROM t0, rt0; -- 3ms;
SELECT DISTINCT ((((((((rt0.c0 COLLATE BINARY)OR(COUNT(rt0.c1))))OR(NULL)))AND((((t0.c0, rt0.c0, rt0.c2))<=((t0.c0, rt0.c1, t0.c0))))))OR(LOWER(DISTINCT rt0.c2))) FROM t0, rt0; -- 0ms;
SELECT ALL LAG(CAST(t0.c0 AS NUMERIC) COLLATE NOCASE, '-1018259172', ((((rt0.c0) IS TRUE))==(t0.c0 COLLATE RTRIM))) OVER (), UPPER((NOT (t0.c1))), ((((rt0.c1 IN ())))<>((((((rt0.c1)OR(t0.c2)))AND(t0.c2))))) FROM t0, rt0 WHERE ((~ (0.0841417139127153)) COLLATE BINARY); -- 0ms;
SELECT ((rt0.c1 COLLATE BINARY)>((~ (t0.c2)))) FROM t0;SELECT DISTINCT CASE t0.c2 COLLATE RTRIM  WHEN ((t0.c1) NOTNULL) THEN NULL COLLATE NOCASE END FROM t0 WHERE (CAST((NOT ('')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((+ ('0.48934344119543827')))GLOB(((NULL) IS FALSE))) FROM t0, rt0 WHERE (((((('751047188', '2061005539', NULL)) BETWEEN ((0.5925642165291302, 0.6146004767536066, '0.24417836210238975')) AND (('0.7700743018763998', x'', 0Xffffffffcfdbdbd3))))AND(CAST('753997768' AS INTEGER)))); -- 0ms;
SELECT ALL (((t0.c2)) BETWEEN ((((rt0.c0)!=(rt0.c1)))) AND (((((t0.c2, -1271181849, rt0.c1)) NOT BETWEEN ((0Xffffffffbe4fb980, rt0.c0, t0.c1)) AND ((rt0.c2, t0.c2, rt0.c1)))))) FROM t0, rt0 WHERE ('311488030'); -- 0ms;
SELECT DISTINCT CASE ((rt0.c0)=(0.6239572789226305))  WHEN TYPEOF(DISTINCT t0.c2) THEN ((((t0.c2)OR(rt0.c1)))AND(rt0.c1)) END, '763490780', (+ (SUM(t0.c2))) FROM t0 WHERE ((((('') IS TRUE))||(((NULL)<<(NULL)))));SELECT DISTINCT (((NOT ('')))*(((rt0.c0) ISNULL))), ((CASE WHEN t0.c0 THEN '415524447' ELSE t0.c0 END)-('759413804')), (((((~ (rt0.c0)))OR(CAST(rt0.c2 AS TEXT))))AND(CAST(rt0.c1 AS NUMERIC))) FROM rt0 WHERE ((((((((((('-1069932909') BETWEEN (0.3349387031068557) AND (0.7864584256067407)))OR(0.7298230911772149 COLLATE RTRIM)))AND(0.09445600548375566 COLLATE BINARY)))OR(((884878388)<>(x'')))))AND(CAST(NULL AS TEXT))));SELECT 0.5623975856926389, MIN(((t0.c1) ISNULL)), ROW_NUMBER() OVER () FROM t0 LIMIT -1535403769 OFFSET 1253258893; -- 0ms;
SELECT DISTINCT CAST(((NULL)AND(rt0.c2)) AS BLOB) FROM t0, rt0 WHERE ((('-1849988340') IS TRUE) COLLATE RTRIM); -- 0ms;
SELECT ALL COUNT(*) OVER ( RANGE CASE rt0.c0  WHEN rt0.c1 THEN CASE WHEN rt0.c1 THEN rt0.c1 END WHEN '' THEN CASE t0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END WHEN rt0.c2 COLLATE BINARY THEN ((0.7413399794719442) IS TRUE) ELSE ((rt0.c2)IS NOT(t0.c0)) END PRECEDING) FROM t0 WHERE (((x'' COLLATE BINARY) IS TRUE));SELECT 0X64a1ee46 FROM t0, rt0 WHERE ((- ((((x''))>=((0Xffffffffe6bde499)))))); -- 0ms;
SELECT t0.c1 FROM rt0 WHERE (((-1.000550727E9 COLLATE BINARY) IS FALSE));SELECT DISTINCT CAST(t0.c2 COLLATE RTRIM AS NUMERIC) FROM rt0, t0 WHERE (('1175596744' IN ()) COLLATE RTRIM) ORDER BY CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)) AS REAL); -- 0ms;
SELECT ((((t0.c0)+(t0.c2)))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1)))) FROM rt0 GROUP BY CASE t0.c1  WHEN t0.c2 THEN ((rt0.c1) NOT BETWEEN ('1045521275') AND (0.7504128683935851)) ELSE NULL END HAVING ((((((((((((CAST(rt0.c0 AS REAL))AND(rt0.c0)))AND(COUNT(rt0.c1))))OR((rt0.c1 IN ()))))OR(((t0.c2)<(rt0.c0)))))AND(CAST(rt0.c0 AS REAL))))OR(NULL));SELECT DISTINCT AVG((+ (rt0.c1))) OVER (), (-846469349 IN ()) COLLATE RTRIM, COUNT(rt0.c1) OVER (), (((t0.c0)) NOT BETWEEN ((((0Xffffffffe224335e) IS FALSE))) AND ((CAST(t0.c2 AS REAL)))), rt0.c2 COLLATE RTRIM, TOTAL(CAST(t0.c1 AS BLOB)) OVER (), '-1685305249' FROM t0, rt0 WHERE (CASE (0.25542147878621635 IN ())  WHEN (('-112461612') NOTNULL) THEN ((NULL) IS TRUE) WHEN CASE WHEN x'a1ad' THEN 0.27316708489995556 WHEN x'' THEN 0.5643246220917097 WHEN -68891803 THEN '-291300275' END THEN (('?Gڦ~') BETWEEN (x'') AND (1202885879)) WHEN TYPEOF(DISTINCT 0.6561036199972893) THEN CASE WHEN '289143951' THEN 'I ' ELSE 0.7300259780099585 END ELSE (NOT (1720212419)) END); -- 0ms;
SELECT DISTINCT (~ (rt0.c1 COLLATE RTRIM)), CUME_DIST() OVER (), CASE WHEN ((rt0.c0) BETWEEN (x'') AND (rt0.c1)) THEN (((t0.c0))>=((rt0.c1))) ELSE (((rt0.c1, t0.c1, rt0.c1))<((t0.c0, t0.c2, rt0.c1))) END FROM rt0;SELECT DISTINCT CASE (((rt0.c1))>(('')))  WHEN UNLIKELY(DISTINCT t0.c2) THEN t0.c2 COLLATE BINARY ELSE ((rt0.c1)<=('K|F(V]')) END FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((t0.c0)==(t0.c1)) IN (COUNT(*))) FROM t0, rt0 WHERE ((((((((((('8V[i楍(')AND(NULL)))OR(x'')))OR('925000221')))AND(NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS INTEGER)) IS FALSE) FROM t0 WHERE (CASE WHEN ((x'89bc')||(0X505be9af)) THEN HEX(NULL) END); -- 0ms;
SELECT NTILE(NULL) OVER ( ORDER BY (- (IFNULL(DISTINCT t0.c1, rt0.c2)))  NULLS FIRST, IFNULL((((t0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c0))), 0.8070275299572798)) FROM t0, rt0;SELECT DISTINCT NTILE(((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(((rt0.c0) NOT BETWEEN ('') AND (rt0.c1))))) OVER () FROM rt0 WHERE (((NULL)LIKE('')) COLLATE RTRIM); -- 0ms;
SELECT ((rt0.c1 COLLATE BINARY)OR(CASE WHEN t0.c1 THEN rt0.c2 ELSE t0.c2 END)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (CAST(t0.c2 AS REAL) IN ()), rt0.c1, (((- ('')))GLOB(rt0.c1 COLLATE RTRIM)) FROM t0;SELECT ALL ((rt0.c1)&(rt0.c0)) COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT (((((t0.c0) ISNULL), ((((t0.c1)OR(rt0.c1)))OR(t0.c2)), ((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0))))>=((CAST(t0.c1 AS REAL), (rt0.c1 IN ()), COUNT(0X7f5702e8)))) FROM t0 WHERE (CAST(((x'') IS FALSE) AS NUMERIC));SELECT DISTINCT ((((((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))AND(MIN(t0.c2))))AND((~ (t0.c1)))), ((((x'c236')>(t0.c2)))<((((rt0.c2))>=((rt0.c0))))), (((CAST(rt0.c1 AS TEXT)))<=((((((((((((((x'093e')AND(rt0.c0)))OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))AND(t0.c0)))OR(t0.c1))))) FROM t0, rt0; -- 0ms;
SELECT (((((t0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))|(CAST(rt0.c0 AS INTEGER))) FROM t0;SELECT ALL (((x''))>(((- (rt0.c1))))) FROM rt0 WHERE (CASE CAST(x'a15c' AS NUMERIC)  WHEN ((-3.34550222E8)-('')) THEN 0Xffffffff8d2da4f3 COLLATE RTRIM ELSE ((((NULL)OR(x'')))OR(x'')) END) LIMIT 1147486442 OFFSET -280304093; -- 0ms;
SELECT DISTINCT (((((rt0.c0)OR(rt0.c0)))OR(t0.c0)) IN ()), ((CASE t0.c0  WHEN t0.c2 THEN t0.c1 ELSE rt0.c2 END)&(rt0.c0 COLLATE BINARY)), json_remove(CAST(t0.c2 AS REAL), ((NULL)||(-1356579830))) FROM t0 GROUP BY rt0.c1;SELECT DISTINCT (CASE NULL  WHEN t0.c1 THEN '' END IN ((~ (rt0.c2)))) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c1)||('-98189821')))/(t0.c2)); -- 1ms;
SELECT DISTINCT CASE CAST(rt0.c2 AS TEXT)  WHEN CASE WHEN rt0.c2 THEN NULL ELSE t0.c0 END THEN CAST(t0.c0 AS INTEGER) ELSE t0.c1 END, ((LOWER(t0.c0)) BETWEEN ((rt0.c2 IN (t0.c1, t0.c1))) AND (json_object(439493342, rt0.c2, rt0.c2, rt0.c1))), CASE (((t0.c0))<((rt0.c2)))  WHEN t0.c0 COLLATE BINARY THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c0)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN (~ (t0.c1)) WHEN ((t0.c0)&(0X45f4cb38)) THEN CAST(t0.c0 AS INTEGER) END FROM t0, rt0 WHERE ((((+ (x'')))>>(LIKELIHOOD(x'e9ed', 0.8642658689525734)))) GROUP BY ((rt0.c2)AND(((rt0.c0) BETWEEN (x'') AND (t0.c1)))) HAVING CASE WHEN t0.c2 THEN rt0.c1 WHEN 0.6178301869853323 THEN t0.c2 WHEN t0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 END COLLATE RTRIM; -- 0ms;
SELECT ALL json((((t0.c1, rt0.c2, t0.c1))=((t0.c2, rt0.c2, t0.c0)))) FROM rt0 WHERE ('1661936483');SELECT (((NOT (t0.c2))) ISNULL) FROM rt0, t0 WHERE (((IFNULL(DISTINCT x'', x'9e1f')) IS FALSE)) ORDER BY CASE WHEN ((rt0.c0)IS(rt0.c0)) THEN DATE(NULL, rt0.c0, rt0.c2) WHEN CASE t0.c1  WHEN rt0.c0 THEN t0.c0 ELSE 0.9271380466614912 END THEN CASE t0.c2  WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END WHEN rt0.c0 THEN LTRIM(rt0.c0) END  NULLS FIRST; -- 0ms;
SELECT CAST(((((t0.c2)AND('qR')))AND(t0.c0)) AS NUMERIC) FROM rt0, t0; -- 0ms;
SELECT CAST(((rt0.c2)<>(t0.c1)) AS BLOB) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c2)/(rt0.c0)) IN (((t0.c2) NOT NULL))) FROM t0 WHERE (CAST(CAST(NULL AS INTEGER) AS REAL)) GROUP BY 0.5704754227093664, NULL, CAST(0.4693059216824814 AS INTEGER) HAVING ((((CAST(t0.c1 AS BLOB))AND(-1.967020581E9)))AND(((rt0.c0)AND(t0.c0))));SELECT DISTINCT (((((rt0.c2, rt0.c0, t0.c2))=((rt0.c0, rt0.c1, t0.c2)))) IS FALSE) FROM t0, rt0; -- 0ms;
SELECT CAST(CASE '317441614'  WHEN rt0.c0 THEN t0.c0 END AS TEXT), (t0.c0 COLLATE BINARY IN (0.15474296367264917 COLLATE RTRIM, CASE WHEN t0.c1 THEN x'' ELSE t0.c2 END)), CAST(((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB), ((((((((((((rt0.c2)OR(rt0.c2)))AND(x'581e')))AND(rt0.c0)))AND(t0.c2)))AND(NULL)))OR(NULL)), CAST(((((t0.c1)AND(rt0.c2)))AND(t0.c1)) AS BLOB) FROM rt0, t0 WHERE (((((NULL) ISNULL)) NOT BETWEEN ((390376300 IN ())) AND ((((('Ioa}ꓳ')AND('2?)?5q_')))OR(NULL))))) LIMIT -1795962885 OFFSET -380539602; -- 0ms;
SELECT ALL ((CASE t0.c0  WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN x'9cd9' THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN rt0.c2 ELSE rt0.c0 END)>(((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)))) FROM t0 GROUP BY NULL;SELECT ALL 0.7446635568812946 FROM t0, rt0 WHERE (((('')) BETWEEN ((ABS(DISTINCT x'e212'))) AND ((((('.鈥Wxe'))>((1376819459))))))) LIMIT 1932421993 OFFSET -124836280; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE t0.c1  WHEN rt0.c0 THEN t0.c1 END) OVER ( ORDER BY '1741799042' ASC), ((t0.c0) NOT NULL), FIRST_VALUE(((((t0.c1)*(t0.c1)))LIKE(CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END))) OVER () FROM t0 WHERE ((((((-1986632205)) NOT BETWEEN ((x'')) AND ((NULL))))&((- (-1.59114023E8)))));SELECT (NOT (((rt0.c0) NOTNULL))) FROM t0, rt0 ORDER BY ((t0.c1)OR((rt0.c0 IN ()))) DESC; -- 0ms;
SELECT (((t0.c2)) NOT BETWEEN ((((((t0.c1)OR(t0.c2)))AND(t0.c1)))) AND ((((t0.c0)<(t0.c0))))), COUNT(*), (((+ (rt0.c0))) IS TRUE) FROM rt0, t0 WHERE (CAST(CAST(x'8345' AS NUMERIC) AS TEXT)); -- 0ms;
SELECT DISTINCT CASE t0.c0 COLLATE RTRIM  WHEN ((t0.c0) NOT BETWEEN (0.965852324654596) AND (t0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN t0.c0 THEN CAST(t0.c2 AS INTEGER) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE rt0.c0 END THEN MIN(t0.c1) ELSE (rt0.c0 IN ()) END FROM rt0, t0 WHERE (((((NULL)<(NULL))) IS FALSE)) ORDER BY (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((PRINTF(t0.c0)))); -- 1ms;
SELECT DISTINCT (((- (rt0.c1))) NOT NULL), CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY, '-824615975' FROM t0, rt0; -- 0ms;
SELECT ALL (NOT (((((((((t0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(t0.c0)))AND(rt0.c1)))) FROM t0, rt0 WHERE (UPPER((NOT (x'')))) GROUP BY CASE WHEN ((t0.c0) BETWEEN (rt0.c0) AND (t0.c2)) THEN ((((t0.c2)OR(t0.c0)))OR(rt0.c0)) ELSE ((rt0.c0) BETWEEN (t0.c2) AND (t0.c2)) END; -- 0ms;
SELECT DISTINCT ((rt0.c2) IS FALSE) FROM rt0, t0 WHERE ((NOT ((x'21b3' IN (0.38205513735572016))))); -- 0ms;
SELECT DISTINCT (((t0.c1, rt0.c0, -2.016809982E9)) NOT BETWEEN ((((t0.c2)<=(t0.c0)), LIKE(rt0.c0, t0.c1), ((t0.c0)/(t0.c2)))) AND ((t0.c1, CASE rt0.c0  WHEN t0.c0 THEN t0.c2 ELSE rt0.c2 END, ((t0.c0) NOT NULL)))), CASE WHEN '' THEN rt0.c1 COLLATE BINARY WHEN 327423223 THEN TRIM(t0.c0, rt0.c0) WHEN ((rt0.c1) NOT NULL) THEN (rt0.c1 IN ()) END, (- ((t0.c0 IN (rt0.c2, rt0.c0)))) FROM rt0 WHERE ((('>E.F' COLLATE BINARY) BETWEEN ((0.11243818254329285 IN ())) AND ((('gR[_,''A<') NOTNULL))));SELECT (((((t0.c0, rt0.c1, rt0.c1)) BETWEEN ((t0.c1, rt0.c0, t0.c2)) AND ((t0.c1, t0.c1, t0.c2)))) NOT BETWEEN (ROUND(t0.c0, t0.c0)) AND (TOTAL_CHANGES())) FROM rt0, t0 WHERE ((((CASE WHEN NULL THEN 120309845 ELSE '-1793450218' END))==((CASE WHEN 0.34125320184956154 THEN 'RwXPax' WHEN 0Xffffffff891811cc THEN x'e52d' WHEN '	{}' THEN NULL ELSE NULL END)))) ORDER BY LIKELIHOOD(t0.c2, 0.9986790793924344) ASC; -- 0ms;
SELECT ((((((((((((((((t0.c2)OR(rt0.c1)))OR(t0.c2)))OR(rt0.c0)))OR(t0.c1)))AND(((t0.c0)%(rt0.c2)))))AND(t0.c0)))OR(CASE WHEN rt0.c0 THEN 0.19233717117242088 ELSE t0.c2 END)))AND(CAST(t0.c2 AS BLOB))), rt0.c2, ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) BETWEEN (rt0.c0) AND (CASE WHEN t0.c1 THEN 0.9236471552301143 ELSE t0.c0 END)) FROM t0, rt0 GROUP BY (((t0.c1 IN (t0.c0, t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (CAST(1e500 AS TEXT))); -- 1ms;
SELECT STRFTIME(LIKE(t0.c0, t0.c0, ' '), rt0.c2 COLLATE NOCASE, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) FROM rt0 WHERE ((((('0.47218855942568827')%('嶚9y4F[C'))) NOT NULL));SELECT COUNT(MIN(((t0.c0)GLOB(rt0.c2)))), ((((((((rt0.c1)OR(rt0.c1)))OR(t0.c0)))OR(t0.c1)))OR(((((((((rt0.c2)OR(x'')))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN COUNT(rt0.c1) WHEN (rt0.c0 IN (t0.c1, rt0.c1)) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c1)<=(t0.c2)) THEN ((t0.c1) NOT NULL) ELSE CASE rt0.c0  WHEN t0.c2 THEN t0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 END END FROM rt0 WHERE (CASE DATETIME(NULL, -1.286692335E9, 0.9332108228329642)  WHEN (((NULL, 0Xffffffffd7bbda14, '-1320904447')) NOT BETWEEN ((NULL, NULL, '')) AND ((0.11832565935779771, NULL, -1435197159))) THEN 'n' COLLATE NOCASE END);SELECT DISTINCT LAG(((NULL)<((t0.c2 IN ()))), ((((((((((((t0.c1)OR(t0.c1)))OR(t0.c2)))OR((t0.c2 IN (t0.c0, t0.c2)))))AND(t0.c2)))OR('')))AND(TRIM(t0.c0))), NULL) OVER (), MIN(((rt0.c2)OR(rt0.c1))), (- (((rt0.c2) NOT BETWEEN (t0.c2) AND (rt0.c1)))) FROM t0;SELECT LIKELY(((((t0.c1)AND(t0.c1)))AND(t0.c2))) FROM t0, rt0 WHERE (UPPER(((0.9629251701595762)/(2141676672)))); -- 0ms;
SELECT DISTINCT -1728388547 FROM t0, rt0 WHERE ((((x'') BETWEEN (x'') AND (0.477278654773573)) IN (((0.8858742825591325) IS TRUE)))); -- 0ms;
SELECT DISTINCT COUNT('77') FROM t0 WHERE (((('-1345408116')) BETWEEN (((+ (NULL)))) AND ((((NULL) BETWEEN ('ML(}') AND (NULL)))))); -- 0ms;
SELECT CASE 0.12658484721418894  WHEN ((((t0.c0)OR(rt0.c0)))AND(t0.c1)) THEN ((t0.c2)||(rt0.c2)) WHEN ((((rt0.c0)OR(t0.c2)))OR(t0.c2)) THEN ((rt0.c1) BETWEEN (t0.c0) AND (rt0.c2)) WHEN (t0.c1 IN ()) THEN LOWER(rt0.c1) END FROM rt0, t0 WHERE (CAST((x'' IN (x'a3db1cd2')) AS REAL)) ORDER BY NULL DESC, LIKELY(t0.c1 COLLATE BINARY) ASC, (((~ (rt0.c2))) NOT NULL), CASE WHEN (t0.c1 IN (t0.c1)) THEN CAST(rt0.c1 AS REAL) END  NULLS FIRST; -- 0ms;
SELECT ALL NULLIF(DISTINCT 0.44046242060988383, ((t0.c0) IS TRUE)), COUNT(*), rt0.c2 FROM t0 WHERE (((0.13596364592549726 COLLATE RTRIM)>((((0.5312834675992179, 'P쾣潪X', 'QS'))<=((x'6f6f', '1840050505', x''))))));SELECT DISTINCT (((((rt0.c0) NOTNULL), (rt0.c1 IN (rt0.c1, rt0.c1)), ((t0.c0)<>(-1000550727))))>(((((0.6384903282173112)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2))), MAX(rt0.c1), (NOT (t0.c1))))) FROM rt0, t0 WHERE (((((0xffffffffb1f0d493)GLOB(NULL)))%((('-1779163768') NOTNULL)))); -- 0ms;
SELECT ((((((((CAST(t0.c2 AS INTEGER))AND(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))))AND(((((((((rt0.c1)OR(rt0.c0)))OR(t0.c0)))AND(t0.c0)))AND(0.27205418526095426)))))OR(rt0.c2)))OR(((0x1c95d482)*(t0.c0)))) FROM t0 WHERE (((SQLITE_SOURCE_ID())%(0X409f9ddc COLLATE BINARY)));SELECT ALL CAST(t0.c2 AS REAL) FROM t0; -- 0ms;
SELECT DISTINCT (((((((t0.c2))>=((t0.c0))))OR(t0.c2 COLLATE BINARY)))AND((~ (rt0.c2)))) FROM t0, rt0 GROUP BY ((t0.c0 COLLATE NOCASE) IS TRUE) HAVING (((('884878388')<>(rt0.c1))) IS FALSE); -- 0ms;
SELECT (((((rt0.c2 IN ()))AND(t0.c2)))OR(MAX(t0.c1))) FROM rt0 ORDER BY CAST(((t0.c0) BETWEEN ('CKE!M\A') AND (t0.c2)) AS REAL) ASC  NULLS LAST, (+ ((((rt0.c1, x'', rt0.c2))<((rt0.c0, t0.c0, rt0.c2)))))  NULLS FIRST, ((CASE t0.c0  WHEN x'25f1bcd3' THEN rt0.c2 WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)%(rt0.c1 COLLATE NOCASE)) ASC;SELECT ((((((((t0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(t0.c2)) COLLATE BINARY FROM t0, rt0 GROUP BY ((CASE WHEN rt0.c0 THEN rt0.c0 END)||((- (t0.c2)))) HAVING x'9c3c4cd5'; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((NULL, rt0.c0, t0.c2)))) FROM rt0, t0 WHERE (CAST(CAST(0.6997119340314281 AS REAL) AS NUMERIC)); -- 0ms;
SELECT ((COUNT(*)) ISNULL), ((CASE WHEN rt0.c1 THEN x'' END) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((((((((t0.c2)OR(t0.c0)))AND(t0.c2)))AND(rt0.c2)))OR(rt0.c0)))), ((rt0.c0)<<(rt0.c1)) COLLATE BINARY FROM t0;SELECT DISTINCT ((('' IN ())) NOTNULL) FROM t0, rt0; -- 0ms;
SELECT COUNT(((t0.c1) NOT NULL)) FROM rt0, t0 WHERE ((((NULL IN ())) ISNULL)); -- 0ms;
SELECT DISTINCT ((((t0.c2)IS(rt0.c0))) BETWEEN (t0.c2) AND (CAST(x'7804' AS TEXT))), ((((rt0.c2)>(t0.c1)))OR(((((((((rt0.c0)AND(0.44760465689520335)))AND(t0.c1)))OR(t0.c1)))AND(t0.c0)))), NULL FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2)OR(t0.c2)))AND(rt0.c2)) IN ()) FROM rt0 WHERE (SQLITE_VERSION() COLLATE BINARY); -- 0ms;
SELECT 1643749262 FROM rt0, t0 GROUP BY t0.c1, t0.c2, CASE WHEN CAST(t0.c2 AS NUMERIC) THEN (t0.c2 IN ()) END; -- 0ms;
SELECT PERCENT_RANK() OVER (), ((rt0.c2)OR(rt0.c1)) COLLATE NOCASE, COUNT(CAST(t0.c0 AS NUMERIC)) OVER () FROM rt0 WHERE (CAST((('') NOTNULL) AS BLOB)) LIMIT -1307130091;SELECT ((((((((CAST(rt0.c0 AS REAL))AND(MIN(0xffffffffd84eb6c2))))AND((- (rt0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)))OR(((rt0.c1)>(t0.c2)))), t0.c2 COLLATE NOCASE, (rt0.c0 IN ()) FROM rt0;SELECT CASE CASE t0.c1  WHEN t0.c0 THEN rt0.c2 WHEN t0.c1 THEN 0.7908302118141843 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END  WHEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) THEN (NOT (rt0.c2)) END FROM rt0, t0 WHERE (CASE (NOT (x''))  WHEN (('1856969964')||('}5G#XPGa')) THEN NULL COLLATE NOCASE END) ORDER BY CASE (t0.c0 IN ())  WHEN 0.9474052364256815 THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((1.800027485E9))) END ASC  NULLS LAST; -- 0ms;
SELECT ((((t0.c2)LIKE(rt0.c0)))IS(((((((((rt0.c0)OR(t0.c0)))OR(t0.c2)))OR(t0.c2)))OR(t0.c1)))) FROM rt0 WHERE (((('1892111201')) BETWEEN ((x'' COLLATE RTRIM)) AND ((((0Xffffffffa76e3e16)==(x''))))));SELECT DISTINCT (- ((+ (rt0.c1)))) FROM rt0, t0 WHERE ((((x'181b')|('1588251324')) IN ())); -- 0ms;
SELECT DISTINCT CAST((((t0.c0))>=((t0.c1))) AS TEXT), t0.c1, ((('0.4296605260605404' IN ())) ISNULL) FROM rt0 WHERE ((~ ('' COLLATE RTRIM)));SELECT DISTINCT COUNT(CAST(t0.c2 AS REAL)), (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND (('-1135887408')))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND (MIN(t0.c0))), LAST_VALUE(((((rt0.c2) BETWEEN ('byT	xo*') AND (rt0.c2)))+(x''))) OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)|(t0.c2)) THEN (rt0.c2 IN (t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c2)||(rt0.c1)) WHEN ((t0.c1) NOT NULL) THEN COUNT(*) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c2)) END FROM t0, rt0; -- 0ms;
SELECT (((((((((((('')AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(LENGTH(rt0.c2))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((t0.c0))==((rt0.c0))))))AND(((((t0.c2)OR(rt0.c0)))OR(rt0.c0)))))AND(rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE (((((((((((((0.49102862972755523)OR(0X2f7be669)))AND(0xffffffffd7b07f5d)))AND(NULL)))AND(0xffffffffe77b2989)))AND(NULL)))OR(NULL)) COLLATE BINARY);SELECT ALL PERCENT_RANK() OVER () FROM rt0 WHERE (((- (NULL)) IN ())) GROUP BY (((rt0.c2) NOT NULL) IN ()), ((((rt0.c1)>(rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((rt0.c1) IS FALSE))), (~ ((rt0.c0 IN ()))) LIMIT -506395724 OFFSET -1218808055; -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))>((~ (rt0.c2)))) FROM rt0 INTERSECT SELECT ALL ((((rt0.c2) NOTNULL))/(((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)))) FROM rt0 WHERE (((((((x'')OR(x'')))OR(NULL))) NOT NULL)) ORDER BY ((((t0.c0)||(rt0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((((t0.c1)) BETWEEN ((rt0.c0)) AND (('iC')))))  NULLS FIRST, ((((rt0.c0))=((t0.c1))) IN ());SELECT (((rt0.c0)>>(rt0.c2)) IN ()) FROM t0 WHERE (((('', 0.48299178441607094, -6.74180004E8)) NOT BETWEEN (((NOT (0.4626981839610209)), ((('rpGPBsM')) BETWEEN ((638505094)) AND ((0.7061830324798954))), CAST('>^''+n' AS REAL))) AND ((('K!Aᾼﰪuw\' IN ()), ((NULL) NOT BETWEEN (NULL) AND (0.6992464321456944)), ((0.031303666543825215)+(0.7300259780099585)))))) INTERSECT SELECT DISTINCT ((COUNT(*)) BETWEEN ((- (t0.c2))) AND (rt0.c2)) FROM rt0, t0 WHERE ((((NULL IN ()))IS((('1084202460')>>('0.251907666376035'))))) LIMIT 2061005539 OFFSET -1378770337; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c1)>=(t0.c2)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((((COUNT(rt0.c1))OR(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)))))AND(MIN(t0.c2, rt0.c2, rt0.c2, t0.c1))) FROM rt0 WHERE ((((('')>(NULL))) NOT BETWEEN ((('')>('	d)v律>C+'))) AND ('')));SELECT DISTINCT LAST_VALUE((CAST(0.16594485798992897 AS TEXT) IN ())) OVER (), ((rt0.c1) ISNULL), CASE 751974958  WHEN '' THEN (((('K嚭')AND(rt0.c1)))OR(rt0.c0)) END FROM rt0; -- 0ms;
SELECT json_patch(((rt0.c1) IS TRUE), TRIM(-1129297572, rt0.c0)) FROM t0 WHERE ('-1754424981');SELECT DISTINCT CASE ((rt0.c0)IS NOT(t0.c2))  WHEN rt0.c1 COLLATE BINARY THEN ((((t0.c2)OR(NULL)))AND(t0.c1)) WHEN CASE WHEN t0.c0 THEN '-1884581456' END THEN ((((t0.c0)AND(rt0.c1)))OR('885134339')) WHEN ((t0.c0) BETWEEN (rt0.c2) AND (t0.c1)) THEN x'95c6' END FROM t0 WHERE (CAST((- (0.12302651248070384)) AS TEXT));SELECT DISTINCT (((rt0.c1, rt0.c1, t0.c2)) BETWEEN ((TOTAL(rt0.c0), ((t0.c0)+(rt0.c0)), MIN(t0.c1))) AND ((t0.c2, (((t0.c2))!=((t0.c1))), LIKELIHOOD(t0.c1, 0.7945348888721786)))) FROM rt0;SELECT DISTINCT (- (((rt0.c1)IS(t0.c1)))), LIKELIHOOD(rt0.c2 COLLATE BINARY, 0.8545379867115601), GROUP_CONCAT(((((t0.c0)OR(rt0.c0)))OR(NULL))) OVER () FROM rt0;SELECT DISTINCT (NOT ((- (rt0.c0)))) FROM t0;SELECT DISTINCT (((rt0.c2)<<(t0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT CAST(((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) AS TEXT) FROM rt0;SELECT ((((((rt0.c2)=(t0.c2)))AND(((((t0.c0)AND(t0.c0)))AND(t0.c2)))))AND(MIN(rt0.c1))) FROM rt0, t0 WHERE (CASE CASE x'e5fe'  WHEN 0.750727416930036 THEN '686144145' WHEN '+658 999 308T1212T1316T-2363131090753385237T.' THEN 0.6376789769124971 WHEN 0.791311881649763 THEN x'' END  WHEN 0X4dedc9c7 THEN (+ (x'')) END); -- 1ms;
SELECT DISTINCT x'83f5' FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0)>=(t0.c1)) AS TEXT), GROUP_CONCAT(((((t0.c2)AND(t0.c2)))AND(rt0.c1))) COLLATE RTRIM, TOTAL((('0.33523915075134625') IS TRUE)) FROM rt0, t0 LIMIT -1330938137; -- 0ms;
SELECT DISTINCT MAX(((rt0.c0)&(x''))) FROM t0;SELECT DISTINCT t0.c2 FROM t0 WHERE (((((((((CASE ''  WHEN x'' THEN x'' WHEN x'' THEN x'4d37419f' WHEN NULL THEN 0.8599954648021256 WHEN x'd9c5ca6b' THEN x'' WHEN '뼤!' THEN NULL END)OR(CAST(0X5a507ae4 AS TEXT))))AND(CAST(NULL AS REAL))))OR(((x'c0dd7814')%('')))))OR(((NULL) NOT BETWEEN (0.32916835584070814) AND (-447218810))))); -- 0ms;
SELECT 'W\', (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c1))) AND (((t0.c2)/(rt0.c2)))), rt0.c1 FROM rt0 NOT INDEXED WHERE (HEX(DISTINCT JULIANDAY(NULL, 1958858191, 0.5088591169938381, '-1938638837', '', NULL, NULL)));SELECT ALL NULL FROM rt0 WHERE ((((0.9867117320095113)) BETWEEN (((NOT (x'')))) AND (((((0.3041020067307082))<(('-2120136645'))))))) ORDER BY t0.c2;SELECT (((+ (NULL))) BETWEEN (rt0.c1 COLLATE BINARY) AND (t0.c1 COLLATE NOCASE)) FROM rt0, t0 WHERE (CAST((+ (1692957289)) AS REAL)) ORDER BY ((((rt0.c1)/(t0.c2)))IS(t0.c1 COLLATE RTRIM)) DESC, ((rt0.c2) BETWEEN (((-159114023)|(rt0.c1))) AND (((rt0.c1) IS TRUE))) ASC  NULLS LAST, ((((((((t0.c0)OR(rt0.c2)))OR(rt0.c0)))OR((('N5') NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))); -- 0ms;
SELECT t0.c2, rt0.c1 COLLATE BINARY, ((((rt0.c1)OR(CASE rt0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)))OR((rt0.c0 IN ()))) FROM t0, rt0 WHERE (CAST(((('R僼(%')) BETWEEN ((0.993742459075644)) AND (('^쫺濋'))) AS TEXT)); -- 0ms;
SELECT (((NOT (rt0.c2)))!=(CASE WHEN t0.c0 THEN t0.c1 END)) FROM rt0 WHERE (((0.16004483302996342) IS FALSE) COLLATE RTRIM) ORDER BY (((rt0.c0) ISNULL) IN ()) DESC;SELECT (((t0.c0)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))AND(t0.c0)))AND(t0.c1)))) AND ((TOTAL(t0.c2)))) FROM rt0, t0 WHERE ((((((0X79601d9b)IS(-2115627470))))!=(((('')>>(x'')))))) GROUP BY ((CAST(0.48934344119543827 AS INTEGER)) BETWEEN (((rt0.c0)GLOB(t0.c2))) AND ((- (rt0.c0)))); -- 0ms;
SELECT ((rt0.c2 COLLATE NOCASE)>=(CASE WHEN t0.c1 THEN t0.c0 END)), (+ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), CUME_DIST() OVER () FROM t0, rt0 WHERE (CAST(LIKELY(0.36135771052488974) AS INTEGER)); -- 0ms;
SELECT DISTINCT SUM((0.2777168920639337 IN (rt0.c0))) OVER () FROM t0 WHERE ((((((NULL) NOTNULL), (-1937567813 IN (x'041972b8')), ((((-1553751157)AND(0xffffffffd581e60c)))OR(0.5925642165291302))))<>((0X2f53a969 COLLATE BINARY, ((0.10218111356430548) ISNULL), x'' COLLATE NOCASE))));SELECT ALL TOTAL('-247052547') FROM t0 WHERE (((0Xfffffffffbe4cb65)<=(x'419f'))) LIMIT 24496705; -- 0ms;
SELECT ALL CAST(CASE t0.c1  WHEN rt0.c2 THEN '921947339' END AS INTEGER), ((CASE rt0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN 0.05160644022760241 WHEN '-874585953' THEN t0.c1 END)%(rt0.c0)), CAST(((t0.c1)AND(rt0.c1)) AS NUMERIC) FROM t0, rt0; -- 0ms;
SELECT TOTAL(((rt0.c0) NOTNULL)) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), FIRST_VALUE(((t0.c1) BETWEEN (t0.c2) AND ((t0.c0 IN ())))) OVER (), CAST(rt0.c1 COLLATE NOCASE AS INTEGER) FROM t0;SELECT ((((rt0.c1)<>(t0.c2))) IS FALSE) FROM t0, rt0; -- 0ms;
SELECT DISTINCT NULL FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2) IS FALSE)) COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT INSTR(((rt0.c2)-(t0.c2)), AVG(rt0.c2)) FROM t0 CROSS JOIN rt0 ON (+ (CASE WHEN rt0.c1 THEN t0.c1 END)); -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE RTRIM FROM rt0 GROUP BY ((((CAST(rt0.c0 AS INTEGER))AND((~ (t0.c0)))))OR(((((((((t0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(t0.c0)))AND(rt0.c0)))), ((((((((t0.c1)AND(t0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE, CAST(NULLIF(DISTINCT rt0.c2, t0.c1) AS TEXT);SELECT DISTINCT LEAD(rt0.c2, ((((rt0.c2)||(rt0.c0))) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (SQLITE_COMPILEOPTION_GET(rt0.c0))), ('-2062014234' IN ())) OVER () FROM rt0 WHERE (LOWER((NOT (x'')))) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM  NULLS FIRST, ((((rt0.c2)AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST; -- 0ms;
SELECT ALL '-1378770337' FROM t0 WHERE ((((('907171853') BETWEEN (x'') AND ('1297298517'))) NOT BETWEEN (CASE WHEN 1.898139041E9 THEN NULL ELSE NULL END) AND ((((NULL))>=(('2s')))))); -- 0ms;
SELECT CAST(CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC), (CAST(rt0.c0 AS REAL) IN ((((rt0.c2))>((0.9256775111271369))))), AVG(((NULL)AND(x'')) COLLATE BINARY) OVER () FROM t0, rt0; -- 1ms;
SELECT ALL ((((((t0.c0)&(t0.c1)))AND(rt0.c0 COLLATE BINARY)))OR((rt0.c1 IN (rt0.c2)))), CAST(CAST(rt0.c1 AS NUMERIC) AS INTEGER), SUM((+ (rt0.c2))) FROM rt0 WHERE ((((('1045521275') ISNULL)) NOTNULL));SELECT ALL COUNT(*) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (+ (CASE WHEN rt0.c2 THEN t0.c0 END)) FROM t0, rt0; -- 0ms;
SELECT ((((((t0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(HEX(t0.c0))))AND((- (rt0.c2)))) FROM t0, rt0 WHERE (CAST((x'63d0' IN ('-674180004')) AS TEXT)); -- 1ms;
SELECT ALL ((((t0.c2)OR(t0.c0)))>('0.06063707360542314')), CASE WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c2 END COLLATE BINARY, (- (-1670437937 COLLATE NOCASE)) FROM rt0 WHERE (((+ ('397050872')) IN ()));SELECT ALL (((- (rt0.c2))) NOTNULL) FROM t0, rt0 NOT INDEXED; -- 0ms;
SELECT ALL ((NULLIF(rt0.c2, x'')) ISNULL) FROM t0 ORDER BY rt0.c0  NULLS FIRST;SELECT ALL t0.c2, (((rt0.c0 COLLATE BINARY))<=((((rt0.c1) IS TRUE)))), ((((((((HEX(NULL))OR(x'5fa9')))AND(((t0.c0)+(t0.c1)))))OR((~ (rt0.c1)))))OR((~ (t0.c2)))) FROM rt0;SELECT t0.c2 FROM t0, rt0 WHERE (((json_remove('Tc', -1991940411)) NOT BETWEEN (CAST(0.6816286014107082 AS BLOB)) AND (NULL))) INTERSECT SELECT DISTINCT CASE TYPEOF(t0.c2)  WHEN CASE NULL  WHEN rt0.c0 THEN t0.c1 END THEN rt0.c0 COLLATE NOCASE ELSE t0.c0 END FROM t0;SELECT ALL LAST_VALUE(((t0.c1 COLLATE RTRIM)GLOB(highlight(t0.c0, rt0.c0, t0.c1, rt0.c0)))) OVER ( PARTITION BY (((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))) COLLATE BINARY, ((t0.c2)%(t0.c1))), -451820897, '495245810', ((CASE rt0.c1  WHEN t0.c1 THEN t0.c0 ELSE rt0.c1 END) NOT BETWEEN ((t0.c0 IN (rt0.c1))) AND (MAX(t0.c1))), TOTAL((((rt0.c1, rt0.c0, t0.c2))<((rt0.c1, t0.c1, t0.c0)))) FROM t0, rt0;SELECT ALL ((((((rt0.c1) BETWEEN (t0.c0) AND (0.19290060279647925)))AND(CAST(t0.c2 AS NUMERIC))))AND(MAX(0.21612634674299536))) FROM rt0, t0 WHERE (((((((('em&a'))<=((x''))))OR(0.5539448158684684 COLLATE NOCASE)))AND('0.6540606255295538'))); -- 0ms;
SELECT DISTINCT (((t0.c2)) BETWEEN ((t0.c2)) AND ((((rt0.c0)>>(t0.c1))))) FROM rt0, t0 WHERE (((((0.7738896493552281)/(NULL)))&(CASE WHEN NULL THEN 0.21169389465769628 ELSE '-2009225751' END))); -- 0ms;
SELECT DISTINCT '-66174618' FROM t0 WHERE (((((x'') BETWEEN (0.965852324654596) AND ('ZC')))<(NULL))); -- 0ms;
SELECT DISTINCT ((((t0.c0) IS FALSE))&(((rt0.c0)<=(rt0.c1)))) FROM rt0, t0; -- 0ms;
SELECT ALL x'' FROM t0, rt0; -- 0ms;
SELECT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c2 ELSE t0.c0 END)AND(((rt0.c0) NOT NULL))))OR(LIKELIHOOD(DISTINCT t0.c1, 0.887197053639674))) FROM rt0 WHERE (CAST(NULL AS REAL));SELECT DISTINCT CAST(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) AS TEXT) FROM rt0, t0; -- 0ms;
SELECT ALL ((((0.5061750198853303)AND(((t0.c2)<=(rt0.c1)))))OR(COUNT(*))) FROM t0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN (('-795629674')) AND (((t0.c2 IN ())))) FROM rt0 WHERE (((((((((CASE NULL  WHEN x'' THEN -1.378770337E9 ELSE '0.9720689536910551' END)AND(((x'') NOT BETWEEN (x'') AND (x'')))))AND((('-1967020581')GLOB('MT')))))OR(((NULL)/(0.03819101737868402)))))OR((x'7316' IN (x'c150'))))); -- 0ms;
SELECT 0x50b9e16a FROM rt0; -- 0ms;
SELECT DISTINCT (+ ((rt0.c1 IN ()))), GROUP_CONCAT(((rt0.c2) IS TRUE)) OVER (), COUNT(((t0.c2)|(2.39532958E8))) COLLATE BINARY FROM t0 WHERE ((((((NULL)LIKE(x''))))!=((((NULL) NOT BETWEEN (-665930046) AND ('1932421993')))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c2 THEN rt0.c1 END AS NUMERIC) DESC;SELECT '511164686', ((((CAST(rt0.c1 AS BLOB))AND((((NULL))<=((rt0.c1))))))OR((((rt0.c2))<=((rt0.c1))))), (((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((rt0.c1) IS FALSE)))), ((CAST(t0.c0 AS REAL))&((rt0.c0 IN ()))), LIKELY(x'6404') FROM rt0 WHERE ((COALESCE(DISTINCT 0.04061383980921074, NULL) IN ((('1246993799')||('7p')))));SELECT (((t0.c0)) NOT BETWEEN (((NOT (rt0.c1)))) AND ((MAX(t0.c2)))), (+ (((t0.c1) NOTNULL))), '477917693' FROM t0, rt0 WHERE (((CAST(x'' AS BLOB))<=((('w\n霭~?3''7') NOT NULL)))) GROUP BY ((t0.c1)IS(((rt0.c2)%(t0.c0)))); -- 0ms;
SELECT DISTINCT ((TYPEOF(t0.c1)) BETWEEN (((t0.c1)LIKE(rt0.c1))) AND (rt0.c1 COLLATE RTRIM)) FROM rt0 ORDER BY CAST(CASE WHEN t0.c1 THEN NULL WHEN rt0.c0 THEN t0.c1 WHEN rt0.c0 THEN t0.c2 END AS TEXT) DESC  NULLS FIRST LIMIT -1754424981;SELECT ALL x'' FROM rt0, t0; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) COLLATE BINARY FROM rt0 WHERE (((x'' COLLATE BINARY) NOTNULL)); -- 0ms;
SELECT DISTINCT (((CAST(0.12826808337300055 AS INTEGER), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)), ((t0.c2) IS TRUE)))>=(('', t0.c1, CASE WHEN rt0.c2 THEN NULL END))) FROM rt0 WHERE (CAST(x'' AS REAL) COLLATE RTRIM) LIMIT 1046707112 OFFSET -1439832638;SELECT ALL (((t0.c2))!=((t0.c2))) COLLATE NOCASE FROM rt0, t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((((((t0.c1))>(('-794835661'))))AND((NOT (rt0.c1)))))OR(AVG(t0.c2))), ((((((((TRIM(t0.c1))AND(((rt0.c0)|(rt0.c1)))))AND((((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x''))))))AND(CASE WHEN rt0.c0 THEN t0.c2 END)))OR((rt0.c2 IN ()))), (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND((rt0.c1 IN ('0.48934344119543827', NULL)))))AND((((rt0.c1)) BETWEEN ((t0.c2)) AND ((1.451095983E9))))) FROM rt0;SELECT DISTINCT (CAST(rt0.c1 AS BLOB) IN ()) FROM rt0; -- 1ms;
SELECT ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END) NOT BETWEEN (((rt0.c2)>(t0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)GLOB(t0.c2))) NOT BETWEEN (CASE 0.5017691058949654  WHEN t0.c0 THEN t0.c0 END) AND (0xffffffffd1d2bf24)) WHERE (((((0.8771559336281535)*(NULL)))<>(((x'') NOT BETWEEN (0.9670314176235297) AND (-1.378770337E9))))); -- 0ms;
SELECT DISTINCT (- (rt0.c1 COLLATE NOCASE)), rt0.c1, ((((((((((((((('R98Q')AND(rt0.c0)))AND(t0.c2)))OR(rt0.c2)))AND(t0.c2)))OR(rt0.c2)))AND(t0.c0))))>=((((t0.c1)IS(rt0.c2))))) FROM rt0;SELECT DISTINCT (json_insert(t0.c0, '278446532', rt0.c2) IN (((rt0.c2) NOT NULL))) FROM t0, rt0 WHERE (((json_object(0.4319788109608743, '-331460679', x'', '')) NOT BETWEEN (((0.14218837411812946)-('930946245'))) AND ('	?J澍' COLLATE NOCASE)));SELECT DISTINCT rt0.c0 FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c1)) BETWEEN ((((t0.c0) ISNULL))) AND ((MAX(rt0.c0)))) FROM rt0, t0 WHERE (LOWER(DISTINCT ((NULL) NOTNULL))); -- 0ms;
SELECT ALL TRIM(DISTINCT ((((t0.c1)OR(t0.c0)))OR(t0.c2)), (((rt0.c2, rt0.c1, t0.c2)) BETWEEN ((rt0.c1, t0.c1, t0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))) FROM rt0 ORDER BY rt0.c1 ASC  NULLS FIRST, ((((rt0.c0)AND(((((t0.c1)OR(rt0.c0)))OR(t0.c0)))))AND(t0.c2)) ASC LIMIT -762476036 OFFSET 2083814688;SELECT (NOT (((t0.c2)<<(rt0.c0)))), ((((((((rt0.c0 COLLATE RTRIM)OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN 0.4874113340492293 ELSE rt0.c0 END)))OR(HEX(rt0.c0))))AND(((x'')||(rt0.c2)))))OR(CAST(t0.c0 AS NUMERIC))), CAST(NULL AS BLOB) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((((((CAST(rt0.c1 AS REAL))OR(LIKELY(DISTINCT rt0.c1))))AND((t0.c0 IN ()))))OR(t0.c0 COLLATE NOCASE)))AND(LIKE(t0.c0, t0.c0, 'Y'))) FROM t0, rt0 WHERE (CASE WHEN ((('A1C?r聅\n')) NOT BETWEEN ((NULL)) AND (('0.917393423638491'))) THEN (((((((('0.5282310355317344')AND(NULL)))AND('DV')))OR(0.8820222375419745)))AND(2.2863894E8)) ELSE 0.9550678213935618 COLLATE BINARY END); -- 0ms;
SELECT DISTINCT ((CAST(t0.c2 AS REAL)) IS TRUE), CASE WHEN CASE WHEN t0.c2 THEN rt0.c1 END THEN (+ (t0.c0)) ELSE ((((((((rt0.c1)OR(t0.c1)))AND(t0.c2)))OR(rt0.c1)))OR('uYaf')) END, (((rt0.c0)) BETWEEN (((rt0.c2 IN (rt0.c0, rt0.c0)))) AND ((((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) FROM t0;SELECT DISTINCT LAST_VALUE((CASE t0.c1  WHEN t0.c1 THEN t0.c2 ELSE rt0.c2 END IN ())) OVER (), ABS(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))), ((('', t0.c1, rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()), (t0.c1 IN (rt0.c1, t0.c0)), rt0.c2)) AND ((rt0.c1 COLLATE BINARY, ((t0.c0) NOT NULL), ((t0.c0)||(t0.c2))))) FROM t0, rt0 WHERE (((('925000221')) BETWEEN ((((0.2627950610904981)=('')))) AND (((('hG?VP') IS FALSE))))) LIMIT 1966021699 OFFSET 852678812; -- 1ms;
SELECT DISTINCT NTH_VALUE(rt0.c0, CASE WHEN (rt0.c2 IN ()) THEN (((rt0.c1, rt0.c2, rt0.c2, t0.c1, t0.c2)) NOT BETWEEN ((t0.c1, t0.c0, t0.c1, t0.c0, t0.c1)) AND ((rt0.c2, t0.c1, t0.c0, t0.c2, rt0.c0))) ELSE rt0.c0 END) OVER () FROM t0, rt0 WHERE (((((NULL)+(x'')))>(CASE WHEN 'QS' THEN NULL WHEN NULL THEN '' WHEN NULL THEN NULL END))); -- 0ms;
SELECT DISTINCT COUNT(t0.c0) OVER ( ROWS BETWEEN ((((((t0.c0)AND(t0.c0)))AND(rt0.c0)))<=(CASE WHEN '-1286692335' THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 ELSE t0.c2 END)) FOLLOWING AND ((rt0.c1 IN (rt0.c1)) IN ()) PRECEDING) FROM t0;SELECT CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN json_array_length('HPiEZuj') ELSE (((t0.c1))=((t0.c0))) END FROM rt0, t0; -- 0ms;
SELECT ALL (+ (t0.c1)) COLLATE NOCASE, RANK() OVER (), TRIM((((t0.c2))=((t0.c1)))) FROM t0 WHERE (CHAR(604854390) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((NULL) ISNULL)) AND (((rt0.c2)<<(t0.c2)))) FROM rt0, t0 ORDER BY CAST(CASE t0.c1  WHEN rt0.c2 THEN t0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c1 END AS INTEGER) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC))-((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c2))))) FROM rt0, t0 GROUP BY ((((((((((((rt0.c1)OR(t0.c0)))OR(rt0.c0)))OR((~ (rt0.c0)))))AND(rt0.c1)))AND((rt0.c1 IN (t0.c0, rt0.c2)))))OR(MAX(t0.c1, t0.c1))) HAVING CAST((((('-2016809982')AND(t0.c1)))AND(NULL)) AS NUMERIC) ORDER BY (((HEX(t0.c0)))>=((rt0.c2))); -- 0ms;
SELECT DISTINCT (((t0.c2, t0.c2, '0.9049961428472291')) BETWEEN ((t0.c1, rt0.c2, t0.c2)) AND ((t0.c0, t0.c1, rt0.c1))) COLLATE RTRIM FROM t0 GROUP BY CAST(((t0.c2) IS FALSE) AS INTEGER) LIMIT 1676977852;SELECT DISTINCT COUNT(CAST(t0.c2 AS NUMERIC)) COLLATE NOCASE, ((((rt0.c0)/(rt0.c2))) ISNULL), ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) COLLATE NOCASE FROM rt0 INNER JOIN t0 ON (((HEX(DISTINCT rt0.c2)))<>((0.27364908788587894 COLLATE BINARY))) WHERE ((((- (0.20618461964265888))) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(t0.c1 COLLATE BINARY AS BLOB) FROM t0, rt0 WHERE ((NOT (1930609610 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (rt0.c1 IN ()), ((((t0.c2))<(('XEg.\8('))) IN ()), HEX(((rt0.c2) NOT BETWEEN (NULL) AND (t0.c1))) FROM t0 LIMIT 1084801167 OFFSET -1153749850;SELECT DISTINCT (((~ (t0.c1))) NOT NULL) FROM t0; -- 0ms;
SELECT DISTINCT (((rt0.c2) IS TRUE) IN ((t0.c2 IN ()))), (((t0.c1)) BETWEEN ((LTRIM(t0.c0))) AND ((RTRIM(rt0.c2)))), CASE rt0.c2  WHEN (NOT (t0.c0)) THEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) ELSE CASE t0.c2  WHEN '\p跺蟻A' THEN t0.c2 END END FROM rt0, t0; -- 0ms;
SELECT (((((t0.c0, rt0.c2, t0.c2)) NOT BETWEEN ((rt0.c2, t0.c2, t0.c2)) AND ((rt0.c2, 0.45345037870536065, t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)))) FROM t0 WHERE (((((((0.5282310355317344)>=('-1286692335')))AND(((((NULL)AND(x'')))OR(NULL)))))AND(((NULL)<=('-1653059981'))))) LIMIT 1451095983 OFFSET -1973305878;SELECT DISTINCT COUNT(*), CASE ((rt0.c0)GLOB(rt0.c1))  WHEN ((rt0.c0)+(t0.c2)) THEN (t0.c2 IN ()) WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c0) BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((rt0.c2)||(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) END, (((- (t0.c0))) BETWEEN (GROUP_CONCAT(t0.c2)) AND (((rt0.c2) NOTNULL))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT MAX(((t0.c2) NOTNULL)) FROM t0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)OR(CAST(rt0.c1 AS REAL))))OR('')) FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c0) IS FALSE) COLLATE BINARY WHERE ((+ (CAST('1665813145' AS BLOB)))) GROUP BY t0.c1; -- 0ms;
SELECT DISTINCT TYPEOF(((rt0.c2) BETWEEN (t0.c2) AND (t0.c0))) FROM rt0;SELECT ((((((((((((CAST(t0.c0 AS NUMERIC))OR(((((t0.c0)OR(rt0.c1)))AND(rt0.c2)))))OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)))))AND((((NULL, t0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, t0.c2)) AND ((t0.c2, rt0.c1, t0.c1))))))AND((((rt0.c1, rt0.c2, t0.c2, t0.c2, t0.c2)) NOT BETWEEN (('602347523', rt0.c1, t0.c1, '', t0.c0)) AND ((rt0.c0, t0.c1, rt0.c2, t0.c1, t0.c1))))))OR(t0.c0 COLLATE RTRIM)))AND((- (t0.c1)))), (+ (((t0.c2) BETWEEN (rt0.c2) AND (t0.c0)))), ((((((((((((((rt0.c2)AND(t0.c1)))OR(t0.c0)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c2)))AND(rt0.c1)))+(((rt0.c0)|(t0.c0)))) FROM rt0 WHERE (((((CASE 0.6091557389130976  WHEN x'ca8d' THEN '-#' WHEN x'' THEN x'' WHEN NULL THEN '24496705' ELSE 2116155497 END)AND(((0X52e92a45)<(x'')))))AND(CASE x''  WHEN 'zꮐ	' THEN 'cRj7ꈑ' ELSE '' END)));SELECT DISTINCT (((((((t0.c1)AND(rt0.c0)))OR(0X729f3b80))))>=((''))) FROM t0, rt0 WHERE (((CAST('-472589910' AS BLOB)) IS FALSE)); -- 1ms;
SELECT DISTINCT (NOT (NULL)), json_object(t0.c2, 241797170) COLLATE RTRIM, (~ ((rt0.c0 IN (rt0.c2, t0.c2)))) FROM t0, rt0 ORDER BY t0.c0;SELECT DISTINCT CASE (+ (rt0.c1))  WHEN ((rt0.c0)AND(t0.c1)) THEN x'a6b0' END FROM t0 WHERE ((((- ('j8'))) NOT BETWEEN (((0X5db3aff6) NOT NULL)) AND (x'' COLLATE BINARY)));SELECT ALL 0.48508391072353874, UPPER(0.3067332947631922), (~ (TRIM(x''))) FROM t0 LIMIT -117159094; -- 0ms;
SELECT DISTINCT CASE WHEN TYPEOF(t0.c2) THEN (rt0.c0 IN ()) END FROM rt0, t0 WHERE ((((('')OR(((('-427833610'))=(('W&-am㢖'))))))AND((- (NULL))))) GROUP BY '1502889879' COLLATE NOCASE HAVING rt0.c2; -- 0ms;
SELECT ALL ((((((t0.c2)OR(t0.c1)))AND(t0.c1))) IS TRUE) FROM t0, rt0 WHERE ((('bEq~03aK') IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT ((rt0.c1)IS NOT((((rt0.c0, t0.c0, t0.c1, rt0.c2, 0.7198696304167643)) NOT BETWEEN ((t0.c0, '454413050', rt0.c1, t0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, t0.c0, t0.c1, rt0.c2))))) FROM rt0, t0 WHERE (((((('2109793683', '1440411144', NULL))<>((-1.59114023E8, 1.932421993E9, '3v')))) BETWEEN (CAST('7' AS BLOB)) AND ('342859088' COLLATE RTRIM))) LIMIT -1236352984 OFFSET 480102268; -- 0ms;
SELECT (NOT (NULL)) FROM rt0 WHERE (STRFTIME(x'165b', ((((((((0xffffffff9d784e73)AND(NULL)))AND(0.16615987387692244)))OR('')))OR(NULL)), ((('-628288754'))<(('-674180004'))))) GROUP BY ((LIKELY(rt0.c2))LIKE(((((-1.9365643E8)AND(rt0.c0)))AND(t0.c0)))) LIMIT -1490462305;SELECT CAST((rt0.c1 IN (x'', 3.42859088E8)) AS INTEGER) FROM t0;SELECT DISTINCT (((t0.c1 IN (t0.c0))) BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) AND (rt0.c1 COLLATE RTRIM)) FROM rt0, t0; -- 1ms;
SELECT DISTINCT CASE WHEN TRIM(rt0.c2) THEN (((t0.c2, t0.c2, rt0.c2))==((t0.c1, t0.c2, 0.29220557750738807))) END FROM t0;SELECT DISTINCT ((((0.7700743018763998) NOT NULL))>>((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))) FROM t0, rt0 LIMIT 925000221; -- 0ms;
SELECT ALL CAST(((t0.c2)IS(rt0.c1)) AS TEXT) FROM t0 LIMIT 1326540480 OFFSET 1498092133;SELECT ((CASE WHEN rt0.c0 THEN t0.c0 ELSE t0.c1 END)=((((t0.c2)) NOT BETWEEN ((NULL)) AND ((t0.c2))))) FROM rt0, t0 WHERE ((~ ((('')%('-334550222'))))); -- 0ms;
SELECT DISTINCT (- (CASE WHEN rt0.c0 THEN rt0.c1 END)) FROM rt0 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT CASE WHEN (NOT (t0.c0)) THEN t0.c2 ELSE MAX(rt0.c1) END, IFNULL(SUM(t0.c0), ((((rt0.c0)AND(t0.c2)))OR(t0.c2))), (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ()) FROM t0 LIMIT 152240132;SELECT DISTINCT ((((rt0.c1)AND(t0.c2))) IS FALSE) FROM t0;SELECT ALL CAST(rt0.c1 AS REAL), ((((((((((((0.37758307594797647)OR(COUNT(rt0.c1))))OR((t0.c2 IN (rt0.c1)))))OR(rt0.c0)))OR(((rt0.c1)==(rt0.c0)))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(TRIM(DISTINCT t0.c1))), (((((rt0.c1)OR(rt0.c0))))<=((t0.c0 COLLATE BINARY))), ((HEX(t0.c1))&(json_array(rt0.c2, rt0.c1))), '3m/\rtQF' FROM t0, rt0 WHERE (CAST((~ (NULL)) AS INTEGER)); -- 0ms;
SELECT DISTINCT (~ (t0.c0 COLLATE RTRIM)), (+ ('-1653059981')), ((((rt0.c1) BETWEEN (t0.c1) AND (t0.c2)))IS(('鳨P' IN ()))) FROM t0 WHERE ((((((x'' IN ()))AND(((((((((((((0Xfffffffffb9fcc38)AND(0.34125320184956154)))OR(NULL)))OR(NULL)))OR(0.9056183213869082)))OR(NULL)))AND(0.9108332450809996)))))AND(x'' COLLATE BINARY)));SELECT ALL CASE MAX(t0.c0)  WHEN CASE rt0.c1  WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c1 THEN rt0.c0 ELSE t0.c0 END THEN rt0.c2 COLLATE BINARY END FROM t0, rt0 WHERE ((~ (('' IN ())))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((t0.c1)OR(t0.c2)))OR(CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE x'' END)), x'') OVER ( GROUPS ((t0.c1) NOT NULL) COLLATE NOCASE PRECEDING EXCLUDE TIES) FROM t0 GROUP BY ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END)<<((t0.c2 IN ()))) HAVING ((((t0.c2) NOT NULL)) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (('2061005539' IN ())));SELECT ALL (((COALESCE(DISTINCT t0.c2, rt0.c0)))>=((((t0.c0)*(t0.c0))))) FROM t0, rt0; -- 0ms;
SELECT LAG(CASE ((((t0.c0)AND(rt0.c0)))AND(rt0.c1))  WHEN (t0.c1 IN (rt0.c1, t0.c0)) THEN CASE WHEN rt0.c0 THEN t0.c1 ELSE t0.c2 END WHEN rt0.c1 COLLATE RTRIM THEN (NOT (rt0.c1)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN t0.c2 END, NULL, (rt0.c2 COLLATE NOCASE IN (((rt0.c2)OR(t0.c1)), ((rt0.c0)/(-6.8891803E7))))) OVER () FROM t0, rt0 WHERE ((+ (((NULL)<<(NULL))))); -- 0ms;
SELECT AVG(((rt0.c0) NOTNULL)), ((((rt0.c1) ISNULL)) NOT NULL), CAST((+ (t0.c1)) AS TEXT) FROM rt0;SELECT DISTINCT '', (((t0.c1)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((-644074899))))) AND ((TOTAL(t0.c2)))), FIRST_VALUE(CAST(TRIM(t0.c0) AS TEXT)) OVER () FROM t0 WHERE ((((' 娋Fh[~G', '', x'd3629ca6')) NOT BETWEEN ((('' IN ()), CAST(NULL AS BLOB), '-679082330')) AND ((CASE WHEN 0X3838fc43 THEN 'W5\b9*' ELSE '' END, TOTAL_CHANGES(), NULL COLLATE NOCASE)))) ORDER BY LIKELIHOOD(DISTINCT x'ce2a', 0.10223141560641347) DESC  NULLS LAST, t0.c1 COLLATE BINARY;SELECT DISTINCT CASE WHEN ((((t0.c0)OR(t0.c0)))AND(NULL)) THEN (((rt0.c2, t0.c0, t0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, t0.c2, t0.c1))) WHEN rt0.c2 THEN CASE WHEN -2.016809982E9 THEN rt0.c2 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END WHEN ((t0.c2)OR(t0.c2)) THEN ((rt0.c1)/(rt0.c2)) WHEN (((t0.c2))=(('h'))) THEN ((t0.c0) IS TRUE) WHEN rt0.c1 THEN ((((t0.c1)AND(rt0.c1)))OR(t0.c0)) ELSE ((rt0.c2)OR(t0.c1)) END FROM t0, rt0 WHERE (CAST((- (x'06e5')) AS BLOB)) LIMIT -872534602 OFFSET 925000221; -- 0ms;
SELECT DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c2)) COLLATE NOCASE FROM rt0 LIMIT 1923038080 OFFSET -674180004;SELECT ALL ((((t0.c0, rt0.c0, x'')) BETWEEN ((t0.c1, rt0.c2, t0.c0)) AND ((t0.c0, t0.c1, rt0.c1))) IN (CAST(rt0.c2 AS BLOB))) FROM rt0 INNER JOIN t0 ON ((CAST(t0.c2 AS NUMERIC)) ISNULL) ORDER BY (NOT (t0.c2)) COLLATE BINARY ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (rt0.c0)) THEN CASE rt0.c2  WHEN t0.c1 THEN rt0.c0 END ELSE LIKELIHOOD(DISTINCT t0.c2, 0.14419127638800777) END FROM t0;SELECT (rt0.c0 IN ()) FROM rt0 WHERE (((LIKELY('4'))-('-679082330'))); -- 0ms;
SELECT DISTINCT (((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END))>=((SQLITE_COMPILEOPTION_USED(rt0.c1)))) FROM t0, rt0; -- 0ms;
SELECT ALL ROUND(((rt0.c2)||(rt0.c1)), (t0.c2 IN (t0.c2, t0.c1))) FROM t0 WHERE (((('892693873' IN (NULL, '')))OR(('CKE!M\A' IN ()))));SELECT DISTINCT ((+ (t0.c0)) IN ()) FROM rt0 GROUP BY ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(t0.c0)))>(json_patch(t0.c0, rt0.c1)));SELECT ALL (((- (rt0.c1)))>>(TYPEOF(DISTINCT t0.c0))) FROM rt0 ORDER BY ((((t0.c1)||(rt0.c2))) NOT BETWEEN (((((t0.c0)AND(t0.c1)))AND(rt0.c2))) AND (((t0.c2) IS FALSE))) DESC;SELECT DISTINCT CASE WHEN COALESCE(DISTINCT rt0.c2, t0.c0) THEN TRIM(rt0.c2) ELSE t0.c1 END, ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(0.30035115547300295))) BETWEEN (((t0.c1)!=(rt0.c2))) AND ((rt0.c0 IN ()))), CAST(0.3118995598691806 AS NUMERIC) COLLATE RTRIM FROM t0, rt0; -- 0ms;
SELECT ((rt0.c2) ISNULL) COLLATE BINARY FROM t0;SELECT DISTINCT (((HEX(DISTINCT t0.c1)))>((((rt0.c0)>>(t0.c0))))), ((0.9223523570028789) IS FALSE), ((CASE WHEN rt0.c1 THEN t0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE) FROM t0 WHERE ((((NOT (1.045521275E9)))&(CASE WHEN -1.7976931348623157E308 THEN -1967020581 END)));SELECT '349979747' FROM t0, rt0 WHERE (((((1057027074) NOT NULL)) BETWEEN (((((((((((((0.8926898217426483)OR(x'1274')))AND(1095905423)))AND('-156047754')))OR('7y')))AND('1049172242')))AND('-1950011153'))) AND ((('1692957289')%('-1156591245'))))); -- 0ms;
SELECT ALL CAST((t0.c0 IN (t0.c0)) AS BLOB), NULLIF(TRIM(t0.c0), CASE WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN x'e1b1' THEN t0.c1 END), CASE WHEN MAX(rt0.c2, rt0.c2, '-1102071424', t0.c2) THEN json_insert(t0.c2, x'', rt0.c1) WHEN HEX(rt0.c1) THEN (NOT (rt0.c2)) WHEN ((t0.c2) IS FALSE) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END ELSE CAST(rt0.c2 AS TEXT) END FROM rt0 NATURAL JOIN t0; -- 0ms;
SELECT ((CASE x'076f'  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END) NOT NULL) FROM rt0, t0; -- 0ms;
SELECT ALL (((rt0.c0) BETWEEN (0.9766256067449552) AND (rt0.c2)) IN ()) FROM rt0; -- 0ms;
SELECT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) IN ()), ((AVG(t0.c0))>>(CASE WHEN NULL THEN '{<' ELSE t0.c1 END)), (((NOT (rt0.c0)))+(NULL)), CAST(((rt0.c0) NOTNULL) AS BLOB), COUNT(TYPEOF(DISTINCT t0.c2)) FROM rt0 WHERE ((((- ('1658319032'))) BETWEEN (((-422627098)&(x''))) AND (((('-762476036'))==((NULL))))));SELECT DISTINCT 0.48526991967820987 FROM rt0, t0; -- 0ms;
SELECT ALL ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((0.10475350334807165))) IN ()) FROM t0, rt0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c0)||(t0.c1))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((NULL)LIKE(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))), rt0.c1, (((rt0.c2)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 ELSE rt0.c2 END)) AND (((((t0.c1, t0.c1, -1.754424981E9)) BETWEEN ((rt0.c0, t0.c0, rt0.c1)) AND ((rt0.c2, t0.c2, x'')))))) FROM t0, rt0 ORDER BY 0.3909037507926565  NULLS FIRST, ((CASE rt0.c0  WHEN '-509251006' THEN t0.c1 ELSE rt0.c2 END) ISNULL) DESC; -- 1ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (0Xffffffffbf5dc580) AND (rt0.c0))) NOT BETWEEN (t0.c2) AND (((t0.c0) BETWEEN (0xfffffffffdead455) AND (24496705)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((((('0.24417836210238975')OR('-1849988340')))OR(0.6151529543280421))))>((((rt0.c0)OR(''))))) FROM t0, rt0 WHERE ((((NOT (0.6535754705839164)))>(((((x'')OR(x'')))AND('0.8262772197983715'))))) GROUP BY ((((((((rt0.c0)AND(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c1 WHEN NULL THEN t0.c2 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END)))AND((+ (0.3578532950761145)))))OR((((rt0.c0))<=((rt0.c2))))))AND((((rt0.c0))<=((rt0.c0))))) HAVING (((rt0.c2)) BETWEEN ((GROUP_CONCAT(rt0.c0))) AND ((rt0.c1))); -- 0ms;
SELECT ALL (((rt0.c1)) BETWEEN ((((((t0.c1)OR(t0.c2)))AND(t0.c1)))) AND ((((rt0.c2) NOT NULL)))) FROM rt0 WHERE (x'');SELECT CAST(((t0.c2)<<('^EcW')) AS TEXT) FROM t0 WHERE ((LOWER(-6.74180004E8) IN (CASE ' [0hCJob|'  WHEN 0.9195532588431642 THEN '' ELSE 'G4' END))) LIMIT 414592866 OFFSET -1395079013; -- 0ms;
SELECT ALL MAX(((('1923038080')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) FROM rt0 WHERE (1028817555); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(((t0.c2)+(t0.c1)))) FROM rt0, t0; -- 0ms;
SELECT (((((((t0.c2))<=((rt0.c1))))AND(t0.c2 COLLATE BINARY)))AND(MAX(t0.c0))) FROM rt0 LIMIT -283291762 UNION ALL SELECT ALL (~ (((((((((t0.c1)AND(0.7182125133053618)))AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))) FROM rt0;