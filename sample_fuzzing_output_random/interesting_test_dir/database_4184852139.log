-- Time: 2024/06/07 21:51:54
-- Database: database39
-- Database version: 3.40.0
-- seed value: 4184852139
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TABLE t0 (c0 INTEGER , c1 INT , c2 BLOB ); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
UPDATE OR IGNORE t0 SET c0='2' WHERE (- ((((t0.c1))<((t0.c1))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=('secondsP', x''); -- 0ms;
REINDEX BINARY; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1891'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt1 SET c3=x'' WHERE ((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c4)))AND(load_extension(rt1.c0, NULL))))OR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)))); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT DISTINCT (('') NOTNULL) COLLATE BINARY COLLATE NOCASE FROM t0, vt0, rt1; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c21; -- 1ms;
CREATE INDEX IF NOT EXISTS i22 ON t0(COALESCE((+ (c1)), (+ (c0))) COLLATE BINARY ASC,CASE WHEN ((c1) IS TRUE) THEN ((c1) NOT BETWEEN (c0) AND (c21)) END,(NOT ((+ (c1)))) COLLATE NOCASE DESC); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(x'') WHERE t0.c1; -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38422'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -496545348);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 1ms;
ANALYZE rt1; -- 17ms;
ALTER TABLE t1 RENAME TO t0; -- 11ms;
INSERT OR ABORT INTO t0(c0, c21, c1) VALUES ('-496545348', NULL, -496545348), (NULL, '쮈 ', '-1088238712'), ('1046714113', NULL, '1046714113'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c81 TEXT; -- 2ms;
PRAGMA temp.reverse_unordered_selects = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '10639'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1414563104,14');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 1ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1524953662'); -- 0ms;
UPDATE OR IGNORE t0 SET (c81)=('^') WHERE (((~ (t0.c0))) NOT BETWEEN (((((t0.c1)OR(t0.c1)))AND(t0.c81))) AND (CASE t0.c0  WHEN x'bf04' THEN t0.c0 ELSE t0.c21 END)); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA legacy_file_format = false; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c21 TO c40; -- 2ms;
PRAGMA wal_autocheckpoint = -4472649668335027080; -- 0ms;
REINDEX i22; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE rt1 SET (c3)=(0.6047246481196892); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0xffffffffabaf7ae0; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(''); -- 0ms;
DELETE FROM sqlite_stat1; -- 6ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1010213217 sz=-774104773 unordered'); -- 18ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
CREATE UNIQUE INDEX i65 ON t0(((((c40 COLLATE NOCASE)OR(DATE(c1, c0, c0))))OR(((c1)-(c40)))) COLLATE NOCASE,((((c1)+(c40))) NOT NULL) COLLATE RTRIM,'-1414563104' ASC,((((((c1) NOT BETWEEN (c0) AND (c40)))OR(CASE c1  WHEN c0 THEN c0 ELSE c0 END)))AND(((((((((c1)AND(c81)))OR(c81)))OR(c0)))OR(c40)))) COLLATE NOCASE ASC); -- 0ms;
CREATE UNIQUE INDEX i89 ON t0(((c0) IS FALSE),0.6047246481196892 COLLATE RTRIM,((((((((((c1)<<(c1)))AND(((c40) NOT BETWEEN (c40) AND (c40)))))OR(CAST('1138573909' AS REAL))))OR(((c1) BETWEEN (c81) AND (c0)))))OR(json_array_length(c1, c0))) ASC,(((c81)) NOT BETWEEN ((((c81) BETWEEN (c40) AND (NULL)))) AND ((((c1) IS FALSE))))) WHERE (('') NOTNULL); -- 4ms;
CREATE UNIQUE INDEX IF NOT EXISTS i75 ON t0(CAST(((((c0)OR(c1)))OR(c81)) AS TEXT) COLLATE RTRIM,c0 ASC,c1 COLLATE RTRIM,((c1) NOT BETWEEN (CASE WHEN c0 THEN c40 END) AND (((c81)||(c0))))); -- 15ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA temp.secure_delete; -- 0ms;
REINDEX i75; -- 1ms;
ALTER TABLE t0 ADD COLUMN c25 BLOB; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 15ms;
CREATE INDEX IF NOT EXISTS i8 ON t0(((((NOT (c1))))==((CAST(c81 AS BLOB)))) DESC,CAST(c25 COLLATE NOCASE AS NUMERIC) COLLATE BINARY DESC,((CASE c25  WHEN c40 THEN c25 END) IS FALSE) DESC,((1.046714113E9) BETWEEN ((- (c25))) AND (CAST(c40 AS REAL))) COLLATE BINARY,((c25 COLLATE BINARY) NOT NULL) ASC); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
END TRANSACTION; -- 1ms;
UPDATE OR REPLACE vt0 SET (c0)=(NULL); -- 0ms;
ALTER TABLE t1 ADD COLUMN c96 TEXT; -- 22ms;
DROP VIEW v0; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1010213217,7');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 11ms;
PRAGMA default_cache_size; -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA busy_timeout; -- 0ms;
ANALYZE i75; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c40 TO c51; -- 1ms;
COMMIT; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = false; -- 0ms;
PRAGMA wal_autocheckpoint = -6848586438832398525; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='930966748' WHERE json(NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('霁Pw'); -- 0ms;
CREATE INDEX i35 ON t1(((CAST(c96 AS BLOB)) BETWEEN (((c96) NOT NULL)) AND (rtreenode(c1, x''))) ASC,NULL COLLATE NOCASE,c81 COLLATE RTRIM,(+ (CASE c51  WHEN c51 THEN c25 END)) COLLATE NOCASE ASC,(((- (c81)))AND(PRINTF(c96, NULL, c96))),((((c1) NOT BETWEEN (c0) AND (c51)))LIKE(((c25)>=(c25)))) DESC); -- 0ms;
CREATE INDEX i21 ON t1(CASE (c0 IN ())  WHEN (- ('-458996459')) THEN CAST(c25 AS TEXT) ELSE c96 COLLATE NOCASE END COLLATE RTRIM ASC,((((((c51)OR(c1)))AND(c96))) IS FALSE),(~ (((c0) NOT NULL))) COLLATE BINARY,(NOT (((((c96)OR(c96)))OR(c96)))) COLLATE BINARY ASC,((c81)<>(c51)) COLLATE NOCASE COLLATE BINARY DESC,(~ (CASE WHEN c25 THEN c51 END)) DESC) WHERE ((0.5651055689304524)>>(CASE WHEN c0 THEN c0 END)); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('霁pw'); -- 0ms;
UPDATE OR FAIL t1 SET (c0)=('1046714113') WHERE ((COALESCE(t1.c81, t1.c0, t1.c1, t1.c1, t1.c96, t1.c1)) BETWEEN ((t1.c1 IN (t1.c96, NULL))) AND (((t1.c25) NOT BETWEEN (t1.c81) AND (NULL)))); -- 0ms;
UPDATE OR REPLACE rt1 SET (c3)=(x'0c61') WHERE ((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN ((((rt1.c4))>((rt1.c4)))) AND ((('-865479560')*(rt1.c4)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 REAL ); -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES (x'', x''), (-1.010213217E9, x''), (x'', x'8054'); -- 1ms;
PRAGMA temp.short_column_names; -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
COMMIT; -- 12ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '57596'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 933972129); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 15ms;
PRAGMA mmap_size = -2800171680518257067; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL CASE WHEN (t1.c96 IN (rt1.c0)) THEN t1.c0 WHEN COALESCE(DISTINCT rt1.c2, rt1.c0) THEN ABS(t1.c81) WHEN rt1.c3 THEN (((t1.c81)) BETWEEN ((t1.c0)) AND ((rt1.c3))) END FROM t1, t0, rt1, vt0 WHERE (CAST(((('1138573909'))<((''))) AS BLOB)); -- 0ms;
SELECT ALL ')KK', rt1.c3, AVG(0.3782339747313733 COLLATE RTRIM COLLATE RTRIM) OVER () FROM vt0, t0, t1, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN -8.6547956E8 THEN (((t1.c25))=((NULL))) ELSE ((((((((rt1.c4)AND(t1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t1.c51)) END, CAST((((t1.c51, t1.c0, t1.c25)) BETWEEN ((t1.c0, t1.c0, rt1.c0)) AND ((rt1.c2, t1.c25, t1.c0))) AS BLOB), AVG((rt1.c2 IN ()) COLLATE NOCASE) OVER () FROM rt1, vt0, t0, t1; -- 1ms;
SELECT DISTINCT ((t1.c25 COLLATE BINARY)LIKE(COUNT(*))) FROM t0 WHERE (((((((NULL)+(0.45592597693054415)))OR((x'' IN ()))))AND((+ ('')))));SELECT ALL (((((vt0.c0)OR(rt1.c0)))OR(rt1.c3)) IN ()), ((CASE WHEN t1.c96 THEN t1.c51 ELSE '' END) NOT BETWEEN (x'37d2') AND ((+ (t1.c51)))), ((t1.c25)=(rt1.c3)) COLLATE RTRIM, (((((t1.c25)AND(t0.c0)))OR(t1.c0)) IN (((((((((t1.c0)AND(rt1.c3)))AND(rt1.c1)))OR(t1.c25)))OR(rt1.c0)))), ((((t1.c0)OR(((t1.c25) NOT NULL))))AND(((0Xffffffffe26751bc) ISNULL))) FROM rt1, vt0, t0 WHERE (((((('549689089', 0.21575123731056678, '#9x5Jp鑋'))>=((NULL, x'9e0c', NULL))))AND('4)')));SELECT ALL COUNT(*) COLLATE BINARY FROM t0, t1; -- 0ms;
SELECT ALL COUNT(t1.c1) OVER ( ORDER BY (((t1.c25)) BETWEEN ((((t1.c51) BETWEEN (vt0.c0) AND (t1.c81)))) AND (((vt0.c0 IN ())))), ((t1.c51 COLLATE NOCASE)>=(0.9045347814328556))  NULLS FIRST) FROM t0 WHERE ((x'' IN ()) COLLATE RTRIM);SELECT t1.c81 FROM rt1, vt0;SELECT DISTINCT (((t1.c1, t1.c0, t1.c25)) BETWEEN (('-1955967151', TYPEOF(DISTINCT t1.c25), NULL)) AND ((json_valid(t1.c25), ((t1.c1)<<(t1.c81)), CAST(t0.c0 AS TEXT)))) FROM t1 LIMIT -774104773;SELECT DISTINCT COUNT(*) OVER (), ((t1.c25 COLLATE NOCASE) IS FALSE), ((CASE t0.c0  WHEN vt0.c0 THEN rt1.c3 END)>(((rt1.c1)+(t1.c1)))) FROM rt1, vt0, t1, t0; -- 0ms;
SELECT DISTINCT CAST(((('-1422871504', t1.c0, t1.c96, vt0.c0, t0.c0)) NOT BETWEEN ((rt1.c3, t1.c0, rt1.c4, t0.c0, t1.c25)) AND ((t1.c96, t1.c81, t1.c96, rt1.c2, t1.c1))) AS NUMERIC) FROM t0, vt0, rt1 WHERE ((((((('')OR(0.4350692530510516)))OR('1321216720')))!=((('')|(x''))))) GROUP BY ((json_array_length(1.32121672E9)) BETWEEN ((((t1.c25, rt1.c0, rt1.c2))==((t1.c25, t0.c0, rt1.c1)))) AND (rt1.c2 COLLATE NOCASE)) HAVING (((+ (t1.c1))) NOT BETWEEN (((t1.c1)<=(vt0.c0))) AND (CAST(t0.c0 AS INTEGER))) LIMIT -1010213217;SELECT DISTINCT GROUP_CONCAT(CAST(t1.c25 AS NUMERIC) COLLATE NOCASE) OVER ( RANGE BETWEEN vt0.c0 FOLLOWING AND  CURRENT ROW EXCLUDE CURRENT ROW) FROM t0 WHERE (ROUND(((x'a80a') ISNULL), (((''))<=((NULL)))));SELECT DISTINCT ((((((((((t1.c51)>=(0.38813534741559175)))OR(rt1.c4 COLLATE RTRIM)))AND((((t1.c25, t1.c51, rt1.c2, t1.c1, t1.c96))<=((rt1.c0, rt1.c2, vt0.c0, t0.c0, t1.c0))))))AND(((vt0.c0)|(-1524407176)))))OR(((t1.c1)<=(x'5dac')))), t1.c25, ((x'ca32') NOTNULL) FROM rt1, t0, t1 WHERE (((CAST(NULL AS INTEGER)) IS FALSE));SELECT ALL ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))>>((- (t0.c0)))) FROM t0, t1 WHERE (IFNULL(DISTINCT CASE x''  WHEN -4.58996459E8 THEN 349242004 ELSE x'' END, ('' IN ()))); -- 0ms;
SELECT -1208964141 FROM vt0, t0, t1 LIMIT -774104773; -- 0ms;
SELECT ALL CASE WHEN ((rt1.c2) IS TRUE) THEN IFNULL(rt1.c3, t1.c96) WHEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)) THEN CASE WHEN t1.c25 THEN t1.c25 WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c4 THEN vt0.c0 END WHEN ((('1695189342'))>=((t1.c96))) THEN ((rt1.c1)!=(t1.c51)) ELSE (((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt1.c1))) END FROM vt0, rt1 ORDER BY ((((x'')&(t1.c96))) BETWEEN (((x'') NOT BETWEEN (t1.c96) AND (t1.c81))) AND ((((t1.c51)) NOT BETWEEN ((t0.c0)) AND ((t1.c96)))))  NULLS LAST;SELECT ALL MAX(((rt1.c3)<<(rt1.c4))), ((rt1.c2 COLLATE BINARY) IS TRUE), (CASE WHEN t1.c51 THEN rt1.c0 WHEN t0.c0 THEN t0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END IN ()) FROM rt1 ORDER BY (((t1.c81, t1.c51, vt0.c0)) NOT BETWEEN ((((rt1.c3) BETWEEN (t0.c0) AND (t1.c0)), ((((t1.c96)OR(rt1.c0)))AND(rt1.c0)), ((t1.c1) BETWEEN (9.30966748E8) AND ('WQbu')))) AND (((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((t1.c96))), ((t1.c0)/(rt1.c1)), ((t0.c0)-(rt1.c3)))))  NULLS LAST;SELECT ALL ((((t1.c96)<<(t1.c96))) BETWEEN ((~ (t1.c0))) AND ((t1.c1 IN (t1.c1)))) FROM vt0, rt1, t0;SELECT ALL ((- (t1.c96)) IN ()) FROM rt1, vt0 FULL OUTER JOIN t1 ON ((((vt0.c0)OR(NULL))) NOTNULL) INNER JOIN t0 ON (((t1.c81)) NOT BETWEEN ((((((t1.c0)AND('O3 ()')))AND(NULL)))) AND ((((rt1.c3)%(t1.c25))))) WHERE (CASE WHEN (('W㞭eQ')IS(NULL)) THEN (0.2213546623645678 IN (x'')) WHEN ((0.03524515027585895) BETWEEN (NULL) AND ('-458996459')) THEN x'' WHEN CASE 0X4ec02ad0  WHEN '-774104773' THEN -1e500 ELSE x'0212' END THEN CAST('1046714113' AS REAL) ELSE ((x'')IS(x'')) END); -- 0ms;
SELECT ((((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)))>=(SUM(vt0.c0))) FROM rt1, t0, vt0, t1; -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((((((((vt0.c0)OR(t1.c96)))OR(rt1.c3)))OR(t1.c25)))OR(t1.c25))) FROM rt1, t0 INDEXED BY i22, t1 WHERE (CAST(x'' AS TEXT) COLLATE RTRIM);SELECT ALL 0.7616174990767056 FROM rt1, vt0 LIMIT 452643753 OFFSET -1733350533; -- 0ms;
SELECT (CAST(vt0.c0 AS INTEGER) IN ()), CAST(CAST(t1.c0 AS REAL) AS REAL), (((t1.c81) BETWEEN (246906529) AND (t0.c0)) IN ()) FROM t1 GROUP BY ((((rt1.c3)==(t1.c0)))-(ABS(t1.c25))) HAVING ((((rt1.c1)<(rt1.c0))) NOT BETWEEN (rtreenode(0.4128871728351482, rt1.c0)) AND (TYPEOF(rt1.c1)));SELECT DISTINCT ((NULLIF(DISTINCT t1.c51, t1.c25))&(((rt1.c2)<=(t1.c0)))) FROM rt1, t0;SELECT SUM((((rt1.c4))==((rt1.c1)))) OVER () FROM rt1 GROUP BY (~ (vt0.c0)) COLLATE RTRIM LIMIT -1088238712;SELECT DISTINCT ('' IN (((rt1.c4)==(rt1.c1)))) FROM vt0 WHERE (CASE ((NULL) NOTNULL)  WHEN json_quote(NULL) THEN ((NULL)<<('-774104773')) ELSE ('' IN ()) END);SELECT DISTINCT CASE WHEN ((t1.c81)||(t1.c1)) THEN ((rt1.c0) ISNULL) WHEN (NOT (t1.c0)) THEN CAST(rt1.c1 AS REAL) WHEN UPPER(t1.c81) THEN rt1.c4 COLLATE BINARY END FROM vt0, rt1 WHERE (COALESCE(CASE 0.9467139741763474  WHEN NULL THEN '' END, (- ('-1949143727')), ((((x'')AND(0Xffffffffab30b430)))OR(744341913)), ('1003266446' IN (NULL))));SELECT DISTINCT CASE ((t1.c81) IS FALSE)  WHEN ((vt0.c0) NOT BETWEEN (t1.c96) AND (t0.c0)) THEN x'' COLLATE BINARY END FROM rt1, t0, vt0, t1 ORDER BY ((CAST(rt1.c3 AS TEXT))GLOB(((t1.c25)<=(rt1.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (NOT (x'')) FROM t1, rt1, vt0; -- 0ms;
SELECT ALL CASE WHEN ((t0.c0)|(rt1.c2)) THEN rt1.c0 COLLATE BINARY ELSE (+ (t1.c25)) END, CAST(vt0.c0 AS TEXT) COLLATE BINARY, (((t0.c0) BETWEEN (0.4128871728351482) AND (t1.c81)) IN (t1.c81 COLLATE BINARY)) FROM t1, t0 WHERE (((0.6047246481196892)>>('1524953662')) COLLATE BINARY);SELECT DISTINCT ((t1.c0 COLLATE RTRIM)/((NOT (x'')))) FROM t0, vt0, rt1, t1 WHERE (((x'') NOT NULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT SUM(((t1.c51)||(t1.c51))) FROM t0, rt1, vt0 INDEXED BY i75, t1 GROUP BY '-1871539125' HAVING CAST(t0.c0 COLLATE BINARY AS TEXT);SELECT DISTINCT (t1.c96 COLLATE BINARY IN ()), (- (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN t1.c0 THEN rt1.c3 WHEN '1548373433' THEN t1.c25 WHEN t1.c1 THEN vt0.c0 END)), (- (rt1.c0 COLLATE BINARY)) FROM rt1, vt0, t1 WHERE ((NOT (((NULL)GLOB(x''))))) GROUP BY ((((rt1.c3)!=(rt1.c4))) IS TRUE) ORDER BY IFNULL(TYPEOF(DISTINCT t0.c0), t1.c25 COLLATE BINARY) DESC;SELECT DISTINCT CAST(rt1.c4 COLLATE BINARY AS TEXT) FROM rt1, vt0 WHERE (((CAST(NULL AS TEXT)) IS FALSE)); -- 0ms;
SELECT ALL MIN(((t1.c1)OR(rt1.c0))) FROM vt0 WHERE ((+ (((((((((0.31161329633070645)AND(0.9474800714105177)))OR(x'')))OR(0.6423716081105072)))AND(x'')))));SELECT ALL CASE WHEN CAST(rt1.c4 AS NUMERIC) THEN (('-2128741385') NOT BETWEEN (t1.c25) AND (NULL)) END FROM t1, vt0, rt1; -- 0ms;
SELECT (((x''))<>(((x'' IN ())))) FROM t1, vt0, t0, rt1; -- 0ms;
SELECT DISTINCT TRIM(((t1.c0) IS TRUE)) FROM t1, t0, rt1 WHERE (((LIKELY(DISTINCT '_d/Kp-K')) NOT BETWEEN ((((NULL, -4.96545348E8, 0Xffffffffe1721cd8))!=((x'8533', -1.208964141E9, x'f230')))) AND ((0Xffffffffe4a44515 IN ('-1405389385'))))) LIMIT -1811973265; -- 0ms;
SELECT ALL ((((((t1.c96)IS(t1.c81)))AND((t1.c96 IN ()))))AND(AVG(t1.c96))) FROM vt0, rt1, t1, t0; -- 0ms;
SELECT DISTINCT MAX((('~搝tN') IS FALSE)) FROM rt1, t0 NOT INDEXED, t1, vt0; -- 0ms;
SELECT DISTINCT (((rt1.c3)) BETWEEN (((- (rt1.c1)))) AND ((LOWER(t0.c0)))) FROM rt1 WHERE ((((NULL, 0.6047246481196892, 0.31161329633070645)) BETWEEN (((((0Xffffffffb6492886, x'', -1.955967151E9)) NOT BETWEEN (('930966748', x'', ',')) AND (('(', '-75756474', x''))), NULL, (- ('744341913')))) AND (((~ ('-361603490')), (('-2090186800') BETWEEN (-2065619171) AND ('opB章|')), (x'' IN ()))))) ORDER BY ((('1125518720', t1.c96, t1.c0)) BETWEEN ((x'', CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 WHEN 0.4128871728351482 THEN t0.c0 WHEN rt1.c0 THEN '-512615208' ELSE t1.c81 END, CAST(t1.c25 AS TEXT))) AND ((TRIM(DISTINCT vt0.c0), (+ (rt1.c1)), (rt1.c2 IN ())))) DESC  NULLS LAST, ((((t0.c0)>(rt1.c0))) BETWEEN (((((t1.c51)AND(t0.c0)))AND(rt1.c4))) AND ((~ (rt1.c0)))) DESC  NULLS LAST;SELECT (((((t1.c51) NOT NULL)))<=((']tlEtb&' COLLATE BINARY))), (((NOT (t1.c81))) BETWEEN (CASE rt1.c0  WHEN t0.c0 THEN rt1.c4 ELSE t1.c0 END) AND (vt0.c0)), json_quote((t0.c0 IN ())) FROM vt0 WHERE ((((('~ ') NOT NULL))|(LIKELIHOOD(0.9759796552566853, 0.6722753195179897))));SELECT ALL t1.c0 FROM vt0, t1, rt1, t0 ORDER BY ((((t0.c0) ISNULL)) NOTNULL) ASC; -- 0ms;
SELECT ALL ((((t1.c0) IS TRUE))|((~ (t0.c0)))) FROM t0, rt1, vt0, t1 ORDER BY ((((((((((rt1.c2)|(t1.c51)))OR(json_remove(t0.c0, vt0.c0))))AND(((t1.c96) IS TRUE))))AND((~ (rt1.c4)))))OR(CAST('-1524407176' AS INTEGER)))  NULLS LAST; -- 0ms;
SELECT DISTINCT AVG(NULL) OVER () FROM rt1, t1, t0; -- 1ms;
SELECT ALL NULL, UNLIKELY(DISTINCT t1.c0), LIKELIHOOD(DISTINCT (('') NOTNULL), 0.3351499652126323), (((rt1.c4, t1.c51, rt1.c4)) BETWEEN (((((t1.c81))=((rt1.c3))), (((rt1.c2))=((rt1.c3))), CAST(rt1.c4 AS TEXT))) AND ((ABS(DISTINCT t0.c0), '-1685534068', ((rt1.c1) ISNULL)))), IFNULL(DISTINCT ((((((((t1.c0)AND(vt0.c0)))AND(x'')))OR('')))AND(t1.c81)), ((t1.c51)>(t1.c0))) FROM rt1;SELECT DISTINCT ((((((((t1.c0)AND(t1.c0)))OR(rt1.c4)))OR((((rt1.c3))<=((t1.c96))))))OR(((x'd4ae')AND(t1.c96)))), (((((((((rt1.c3 IN ()))AND((- (rt1.c4)))))AND(vt0.c0)))OR(((t1.c0) NOT NULL))))OR((rt1.c0 IN (vt0.c0, rt1.c2)))), (((MIN(-1.949143727E9), ((rt1.c4)GLOB(t1.c51)), vt0.c0))<>(((~ (t1.c96)), ((rt1.c4)>=(rt1.c1)), LIKELIHOOD(DISTINCT t1.c51, 0.9330837943715158)))) FROM t1, vt0;SELECT DISTINCT ((CASE WHEN t1.c1 THEN t1.c25 WHEN t1.c1 THEN rt1.c0 WHEN t0.c0 THEN t1.c1 WHEN t1.c96 THEN t1.c1 WHEN t1.c96 THEN t1.c81 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c3 THEN t1.c81 END) IS TRUE) FROM t0 WHERE (((CAST(0.9918104337109445 AS TEXT)) BETWEEN ((- (0.749754184369149))) AND (((-108021905)<(0.17472613994214503)))));SELECT DISTINCT ((AVG(rt1.c1))>>(((rt1.c1) IS TRUE))) FROM t1 WHERE ((((0.7141009181014898)) NOT BETWEEN ((0xffffffffcc13d4dd)) AND ((((0.5651055689304524)||(NULL))))));SELECT DISTINCT PRINTF(CAST(rt1.c0 AS INTEGER)) FROM t0, t1;SELECT ALL PERCENT_RANK() OVER () FROM t0, rt1; -- 0ms;
SELECT DISTINCT (~ (MIN(t1.c1))) FROM t0, t1, vt0, rt1; -- 0ms;
SELECT DISTINCT (t1.c51 IN ()) COLLATE BINARY FROM t1, vt0 WHERE ((((((('452643753')AND('v-()E')))OR('H~/J8'))) NOT BETWEEN ((x'b010' IN ())) AND ((((9.30966748E8, -887510585, 315635714))>((x'', NULL, NULL)))))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t1, t0 GROUP BY CASE HEX(t1.c1)  WHEN CAST(t1.c1 AS REAL) THEN ((rt1.c0) BETWEEN (rt1.c3) AND (NULL)) ELSE ((((t1.c51)OR(t1.c0)))OR(t0.c0)) END LIMIT -492301007 OFFSET -1599860692;SELECT NTH_VALUE(t1.c81, CASE WHEN (((t1.c81))<((rt1.c0))) THEN CASE t1.c51  WHEN t1.c81 THEN NULL ELSE rt1.c2 END END) OVER () FROM t1 RIGHT OUTER JOIN rt1 ON t1.c51;SELECT (AVG(rt1.c1) IN ()), ((((t1.c96) NOT NULL)) NOT BETWEEN (LIKELY(DISTINCT '')) AND (json_array(rt1.c1, t1.c0))), rt1.c1 FROM t1, rt1, t0; -- 0ms;
SELECT DISTINCT '0.6047246481196892', NULL, rt1.c2, ((TOTAL_CHANGES()) NOT BETWEEN (0.6899342904563859) AND (((rt1.c3) NOT BETWEEN (t1.c0) AND (t1.c0)))), CASE 0.4168142610608817  WHEN ((rt1.c4) BETWEEN (NULL) AND ('뜫')) THEN ((rt1.c1)*(rt1.c1)) END FROM rt1, t0;SELECT ROW_NUMBER() OVER ( ROWS ((((t1.c81) ISNULL)) NOTNULL) PRECEDING) FROM vt0, t0, rt1 NOT INDEXED, t1; -- 0ms;
SELECT DISTINCT AVG(((t0.c0)>(t1.c96))) FROM vt0, rt1 WHERE (((((x'f385') ISNULL)) ISNULL));SELECT ALL ((((rt1.c0)*(rt1.c2)))<<(TRIM(rt1.c0))) FROM rt1, t1, t0 WHERE (((((CASE WHEN NULL THEN NULL END)OR(((NULL) NOT NULL))))AND(((((NULL)AND(NULL)))AND(0xffffffff9b88ca8c))))) GROUP BY CASE (rt1.c2 IN ())  WHEN (t1.c25 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN 0xffffffff9d2a15e1 THEN t1.c51 WHEN ((((0.546519656135311)OR(t0.c0)))AND(t0.c0)) THEN json_type(t1.c51) END;SELECT DISTINCT AVG(((((((((rt1.c4)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))OR('w.nT,ㆳe'))) OVER () FROM rt1 WHERE (((((('-2128741385')) NOT BETWEEN ((NULL)) AND ((x''))))LIKE(COALESCE(NULL, -1354761955, '䏤Hc_iL\', NULL)))); -- 0ms;
SELECT DISTINCT ((((((((t1.c1)AND(rt1.c3 COLLATE BINARY)))OR(((((t1.c25)AND(t1.c96)))AND(t1.c1)))))OR((+ (rt1.c1)))))OR(AVG(vt0.c0))) FROM rt1, t1, vt0, t0; -- 1ms;
SELECT DISTINCT COALESCE((((rt1.c2))<=((vt0.c0))), t1.c51, ((rt1.c4)<>(rt1.c0)), ((t1.c25)=(-0.0))), LEAD(((((vt0.c0)<(rt1.c3)))+(((rt1.c1)>>(t0.c0)))), TRIM(DISTINCT (~ (t0.c0)), x''), ((((rt1.c4)>(rt1.c0))) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 END))) OVER (), CAST(t1.c1 AS TEXT) COLLATE RTRIM FROM t0, vt0, rt1 WHERE (CAST(CAST(x'' AS REAL) AS REAL)) ORDER BY ((t1.c25 COLLATE NOCASE)+((-8.87510585E8 IN ()))) ASC;SELECT DISTINCT (CAST(t1.c96 AS NUMERIC) IN (((rt1.c2) NOT BETWEEN (t1.c25) AND (t1.c51)), (t1.c0 IN ()))) FROM rt1, t1; -- 0ms;
SELECT (((((((((~ (t1.c0)))AND(((rt1.c0)>>(rt1.c1)))))OR((((t1.c96)) NOT BETWEEN ((rt1.c2)) AND ((t1.c25))))))OR(CAST(rt1.c3 AS BLOB))))OR((t1.c51 IN (rt1.c0)))) FROM t0, rt1, vt0, t1; -- 0ms;
SELECT CAST(CAST(rt1.c3 AS REAL) AS REAL) FROM t1, rt1 WHERE ((~ (((x'704525a4')|('549689089'))))) LIMIT -534841514; -- 0ms;
SELECT ((rt1.c2) BETWEEN (t1.c0) AND (vt0.c0)) COLLATE BINARY, (((t1.c1)) NOT BETWEEN ((((NULL) NOT NULL))) AND (((t0.c0 IN ())))), SUM(CASE WHEN rt1.c1 THEN t1.c25 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN rt1.c0 END COLLATE NOCASE) FROM t1, vt0, rt1 WHERE ('w.nT,ㆳe');SELECT DISTINCT ((((t1.c51)<<(t1.c1))) BETWEEN (((rt1.c2) BETWEEN (t1.c81) AND (t1.c81))) AND (CASE rt1.c1  WHEN t1.c25 THEN t1.c96 END)), (CAST(t1.c0 AS NUMERIC) IN ()), CHAR(TRIM(rt1.c4, rt1.c3)) FROM t1, vt0, t0 GROUP BY ((((t1.c96)>>(t1.c81))) NOT BETWEEN (((t1.c81)>(t1.c0))) AND ('YB1)yR')), t1.c51 COLLATE NOCASE, (((t1.c25))<((vt0.c0))) COLLATE BINARY HAVING 0.38813534741559175 COLLATE RTRIM;SELECT ALL ((COALESCE(DISTINCT t1.c25, t0.c0)) IS FALSE) FROM vt0 WHERE ((((('\y') BETWEEN ('/繽nMz冖 ') AND (x'3a9f')))/(((x'')=(0.5463621055666853))))) LIMIT -940103231 OFFSET 1497394722;SELECT DISTINCT json_extract(rt1.c3 COLLATE BINARY, ((((t1.c81)AND(t1.c51)))OR(rt1.c1))), (((t1.c81)) NOT BETWEEN ((x'')) AND ((((((((((((((t1.c25)AND('1003266446')))AND(rt1.c2)))OR(rt1.c2)))AND(t1.c0)))OR(t1.c81)))OR(t0.c0))))), IFNULL(t1.c81 COLLATE BINARY, ((rt1.c2)GLOB(rt1.c1))) FROM t1, t0, vt0, rt1 WHERE (json_valid((('B?')|('-1043943713')))); -- 0ms;
SELECT ALL 0x4226cbb3, (((((rt1.c0, t0.c0, t1.c0))>((rt1.c2, t1.c0, rt1.c1))))<<(((x'') BETWEEN (t1.c0) AND (-496545348)))), CAST(rt1.c4 AS NUMERIC) COLLATE BINARY, ((((rt1.c4)GLOB(t1.c1)))%(((t1.c81) NOTNULL))), (((json_array_length(t1.c51, t1.c81)))>=((((0.5921555617197096)>(vt0.c0))))) FROM t1 FULL OUTER JOIN rt1 ON NULL FULL OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (rt1.c2) AND (t1.c0)))OR(((vt0.c0)<=(0.29499089042059645)))) FULL OUTER JOIN t0 ON vt0.c0 WHERE (((CASE x''  WHEN '' THEN '-108021905' ELSE '[]' END)AND(((((((((0.06569981132682967)OR(0.6247016082342038)))AND('-2001995037')))OR('x~2r/_qst')))AND(NULL)))));SELECT ALL (((((t0.c0)&(rt1.c2))))=((((((t1.c96)OR(vt0.c0)))OR(rt1.c0))))) FROM rt1, t0, vt0, t1; -- 0ms;
SELECT DISTINCT 0.7616174990767056 FROM t0 WHERE ((((((x'', 0.6092574364090783, 0.11813624864059913, 'JQ', '-1022197735')) NOT BETWEEN ((NULL, '', 0Xfffffffff1718436, NULL, 0.8397628730185349)) AND ((NULL, 9.30966748E8, -1.405389385E9, x'', '1138573909')))) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(rt1.c3 COLLATE BINARY AS BLOB), CASE (rt1.c1 IN ())  WHEN CAST(t1.c1 AS TEXT) THEN rt1.c0 WHEN ((t0.c0)+(t1.c96)) THEN MAX(t1.c0) WHEN CAST(t1.c0 AS BLOB) THEN ((t0.c0) NOT BETWEEN (t1.c0) AND ('-2144996947')) WHEN (~ (t0.c0)) THEN ((t1.c0)||(rt1.c1)) WHEN rt1.c3 COLLATE NOCASE THEN GROUP_CONCAT(t1.c25) END, ((((t1.c1)<>(t1.c0)))+(((((t1.c0)OR(t0.c0)))OR(t1.c0)))) FROM t0, t1, vt0, rt1; -- 0ms;
SELECT ALL ((((((((((((((rt1.c3)AND(t1.c25)))AND(t1.c0)))OR(t0.c0)))AND(0.6092574364090783)))OR(t0.c0)))AND(t1.c51)))OR(NULL)), rt1.c1, COALESCE(CAST(t1.c25 AS REAL), '-765710286') FROM rt1 LEFT OUTER JOIN t1 ON CASE WHEN t1.c51 THEN rt1.c0 WHEN rt1.c1 THEN t1.c0 WHEN t1.c96 THEN t1.c0 ELSE vt0.c0 END COLLATE RTRIM WHERE ((((NULL)) BETWEEN ((CAST('LUgm' AS TEXT))) AND (('' COLLATE RTRIM)))) ORDER BY rt1.c3 DESC, CASE WHEN (~ (rt1.c2)) THEN vt0.c0 COLLATE BINARY ELSE ((((((((t1.c25)AND(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)))AND('aQ⪈W|耷Qk')) END;SELECT DISTINCT ((NULL)<=(((t1.c81) NOTNULL))), ((((0.6092574364090783)<>(rt1.c1)))AND((((t1.c25)) NOT BETWEEN ((t1.c81)) AND ((vt0.c0))))), LAST_VALUE((CAST(vt0.c0 AS INTEGER) IN ())) OVER ( GROUPS  CURRENT ROW) FROM vt0, t0 WHERE (((('-1470517790')%(x'')) IN ()));SELECT COUNT(*) OVER (), (+ (SUM(vt0.c0))), (((~ (t1.c81)))|(-1236719482)) FROM rt1 INNER JOIN vt0 ON ((CASE WHEN t0.c0 THEN rt1.c2 ELSE t1.c81 END) BETWEEN (t1.c1) AND (t0.c0 COLLATE RTRIM));SELECT DISTINCT COUNT(CASE WHEN t1.c1 THEN 0xffffffffe4a44515 END COLLATE NOCASE) OVER () FROM vt0, t0 WHERE ((((x'' IN ('<0', NULL)))%('1297845113' COLLATE BINARY))) ORDER BY CAST(CAST(NULL AS NUMERIC) AS INTEGER)  NULLS LAST;SELECT COUNT(*) FROM t1, t0, vt0, rt1; -- 0ms;
SELECT ALL SUM(((t1.c51) NOT NULL)) OVER (), GROUP_CONCAT((t0.c0 IN (t0.c0))), CAST(((((((((rt1.c0)OR(rt1.c0)))AND(t1.c0)))OR(rt1.c1)))OR(0x78d23af0)) AS BLOB) FROM rt1, t0;SELECT ALL (CASE WHEN x'' THEN t1.c25 WHEN t1.c81 THEN t1.c96 WHEN t1.c51 THEN t1.c25 END IN (CASE WHEN t1.c96 THEN rt1.c4 ELSE vt0.c0 END)), ((((((rt1.c3)AND(t1.c51)))AND(t1.c25)))+((('-1894717850') NOT BETWEEN (0.5401542785082396) AND (rt1.c3)))), ((t1.c81) IS FALSE) FROM rt1, t0, t1;SELECT DISTINCT ROW_NUMBER() OVER () FROM t0, t1, vt0; -- 0ms;
SELECT ((((rt1.c3)LIKE(rt1.c0)))!=(t1.c51)) FROM vt0, t0, t1, rt1; -- 1ms;
SELECT ALL ((INSTR(t1.c25, rt1.c4))|(vt0.c0 COLLATE RTRIM)) FROM rt1, t1, t0 WHERE (CASE WHEN NULL THEN 0.5463621055666853 ELSE x'' END COLLATE NOCASE);SELECT DISTINCT GROUP_CONCAT(AVG(COUNT(*))) FROM rt1, t1, vt0 LIMIT 1455973213;SELECT DISTINCT (((((((((((t1.c81))==((rt1.c0))))OR(t1.c81 COLLATE NOCASE)))OR(((((0Xffffffffea725e5e)OR(vt0.c0)))OR(rt1.c4)))))OR(t1.c1 COLLATE BINARY)))AND((~ (t1.c25)))), t1.c81, CASE (vt0.c0 IN ())  WHEN x'' THEN ((((rt1.c2)AND(rt1.c4)))AND(t1.c81)) WHEN CASE t1.c81  WHEN '-1871539125' THEN t1.c1 WHEN t1.c1 THEN rt1.c0 WHEN rt1.c3 THEN 0.7243634507263718 ELSE t1.c25 END THEN (- (t1.c25)) WHEN MAX(rt1.c1) THEN (((rt1.c0)) NOT BETWEEN ((t1.c1)) AND ((t0.c0))) END, ((t1.c96)<(CAST(rt1.c2 AS BLOB))), ((((t1.c25)IS NOT(t1.c96))) ISNULL) FROM vt0, rt1, t0, t1 ORDER BY 0xffffffffcc13d4dd ASC; -- 0ms;
SELECT DISTINCT t1.c51 FROM vt0, rt1;SELECT ALL (((t1.c25)) BETWEEN ((((t1.c51)%(t1.c81)))) AND (((vt0.c0 IN (t0.c0))))) FROM t0 LIMIT -1658186271 OFFSET -142079478;SELECT ALL (NOT ((((t1.c0))<=((x''))))) FROM rt1, t1, t0, vt0 WHERE (CASE ((x'') IS TRUE)  WHEN ('217961477' IN (x'')) THEN SQLITE_COMPILEOPTION_USED('-1524407176') END); -- 0ms;
SELECT ALL COUNT(*) FROM rt1, t0, t1; -- 0ms;
SELECT DISTINCT ((vt0.c0) IS TRUE) FROM t1, vt0, t0 GROUP BY ((((((t1.c25) NOT BETWEEN (t1.c1) AND (t1.c81)))AND(CAST(t1.c25 AS REAL))))AND(((t1.c81) NOT BETWEEN (t1.c1) AND (rt1.c2)))), CAST('' AS REAL) COLLATE BINARY, ((((t1.c81) NOT BETWEEN (t1.c81) AND ('-315364657'))) NOT BETWEEN (((t1.c0)%(rt1.c0))) AND (rt1.c3));SELECT DISTINCT MIN('1497394722'), MIN(((t0.c0)OR(t1.c51))), COUNT((rt1.c4 IN ())) OVER (), COUNT(((x'2e63')>(t1.c1))), COALESCE(DISTINCT NULL COLLATE RTRIM, (+ (rt1.c1))) FROM t0 WHERE (CAST(CAST('' AS INTEGER) AS NUMERIC)) EXCEPT SELECT DISTINCT LAG(SQLITE_COMPILEOPTION_GET((t1.c81 IN ())), t1.c81, ((t1.c0) IS FALSE)) OVER (), ((CAST(t1.c96 AS BLOB)) NOT BETWEEN ((t1.c1 IN ())) AND (MAX(rt1.c0))), ((t1.c1)>>(t1.c0)), (+ ((((t1.c51))<((t1.c51))))), ((((t0.c0)!=(t1.c51)))%(-7.74104773E8)) FROM rt1, t1 WHERE ((~ (NULL))) EXCEPT SELECT (((''))<((AVG(rt1.c4)))), NTILE(CAST('-1599860692' AS TEXT)) OVER (), ((((((t1.c51) NOT BETWEEN (t1.c51) AND (rt1.c1)))OR(CASE t1.c96  WHEN rt1.c0 THEN t1.c51 WHEN t1.c81 THEN t1.c51 WHEN rt1.c4 THEN rt1.c2 ELSE t1.c25 END)))OR((((rt1.c1, t0.c0, t1.c51))<((rt1.c4, rt1.c4, rt1.c0))))), (~ (rt1.c2)), STRFTIME(AVG('ꪈ)\~'), x'', NULL, CASE t1.c81  WHEN t1.c81 THEN t1.c25 ELSE t0.c0 END, (vt0.c0 IN ())) FROM vt0, t0, t1 WHERE ((+ (CASE -1696963736  WHEN '' THEN 'o4' END))) ORDER BY (NOT (rt1.c1 COLLATE BINARY)) ASC;SELECT DISTINCT CASE WHEN t1.c81 COLLATE RTRIM THEN ((rt1.c1)<=(rt1.c3)) END FROM rt1, t0, t1 WHERE ((((('0.4168142610608817')-(0.510111503328803))) ISNULL)); -- 0ms;
SELECT ALL ((((((((rt1.c3 COLLATE BINARY)OR(((rt1.c1)>(450056541)))))AND(-1682984993)))AND(((rt1.c0) BETWEEN ('f#') AND (t1.c81)))))AND(((t1.c1) ISNULL))) FROM rt1 WHERE (((NULL COLLATE BINARY)-('yb1)yr')));SELECT ((CASE WHEN rt1.c2 THEN 'NY' ELSE rt1.c3 END) IS TRUE), TOTAL(t1.c25) OVER (), SUM(GROUP_CONCAT(((((rt1.c2)AND(-1.405389385E9)))OR(t1.c25)))), ((((('1321216720')==(rt1.c1)), (~ (rt1.c2)), AVG(rt1.c0)))<((((t1.c1)+(t0.c0)), 'e4(1S	䣅m', ((rt1.c2)>(t0.c0))))), UNLIKELY(rt1.c3) FROM t1, t0;SELECT DISTINCT (((((t1.c0))!=((t0.c0)))) NOT BETWEEN ((((t1.c25))<((t1.c1)))) AND (((rt1.c1)IS(t1.c96)))) FROM vt0, t1, rt1 WHERE (('0.9474800714105177' IN (((0.24366129150830573)-('1243577788')))));SELECT ALL (AVG(x'') IN ()) FROM t0, vt0, rt1, t1 WHERE ((((x'') BETWEEN ('744341913') AND (x'9559b47e')) IN (((0.25272234129763926) BETWEEN (0x52b771f6) AND (0X78662ce8)), ((0.48961785170010064) ISNULL)))); -- 0ms;
SELECT DISTINCT CASE json_remove(NULL, t1.c25)  WHEN CASE rt1.c4  WHEN t1.c96 THEN 0xffffffffaeac5afb END THEN CAST(rt1.c2 AS TEXT) ELSE ((((((((rt1.c2)AND(rt1.c0)))AND(t1.c81)))AND(rt1.c4)))OR(t0.c0)) END FROM vt0, rt1, t1 INDEXED BY i8, t0 WHERE (((-1748176955) ISNULL) COLLATE RTRIM); -- 0ms;
SELECT (((t1.c81)) BETWEEN ((rt1.c4 COLLATE BINARY)) AND ((vt0.c0 COLLATE NOCASE))) FROM t1, rt1 ORDER BY CASE WHEN (NOT (t1.c1)) THEN ((((((((vt0.c0)OR(x'')))OR(t1.c25)))OR(t1.c0)))AND(NULL)) END  NULLS LAST;SELECT ((((t0.c0) IS FALSE)) NOT NULL) FROM vt0 LIMIT 672231038;SELECT ALL ((((('-337249573')>>(rt1.c4)), ((rt1.c4)>=(vt0.c0)), ((rt1.c0) IS TRUE)))==((CAST(vt0.c0 AS NUMERIC), (rt1.c4 IN ()), ((rt1.c1) BETWEEN (t1.c1) AND (rt1.c1))))) FROM vt0, t1, rt1 WHERE ((((('') BETWEEN (430970761) AND (NULL)))<(CASE x'11a5bcaa9ec8'  WHEN 0.5062657540410006 THEN NULL END))) LIMIT 811849635; -- 0ms;
SELECT FIRST_VALUE((((t0.c0 IN ())) NOT NULL)) OVER (), t1.c1, (((~ (rt1.c3)))IS NOT(((t1.c0) NOT NULL))), ((((t1.c25) ISNULL))IS(((t1.c81) NOTNULL))), FIRST_VALUE(HEX(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) OVER () FROM t0 WHERE (0.8083587760088241) GROUP BY ((((rt1.c2) NOT NULL)) BETWEEN ((+ (t0.c0))) AND (rt1.c1)) ORDER BY rt1.c0 DESC  NULLS LAST;SELECT ROW_NUMBER() OVER () FROM t0, rt1, vt0; -- 0ms;
SELECT DISTINCT '' COLLATE NOCASE FROM t0, vt0 WHERE (0.12789482762786908); -- 4ms;
SELECT DISTINCT ((((((((t1.c25 COLLATE RTRIM)AND((((t0.c0, t1.c96, rt1.c1)) NOT BETWEEN ((t1.c51, t1.c51, 1.788036068E9)) AND ((rt1.c3, t1.c0, t0.c0))))))AND((t1.c25 IN ()))))AND(CASE WHEN t1.c81 THEN t1.c96 WHEN rt1.c4 THEN vt0.c0 WHEN t1.c96 THEN rt1.c4 ELSE t0.c0 END)))OR(((rt1.c4) IS TRUE))) FROM rt1 WHERE (LIKELY(DISTINCT (((-774104773, 0.8572587513788832, 0x6964b1f1))==((0.048877587816370305, x'', '	Q'))))) LIMIT -1025171440 OFFSET -1072083584; -- 0ms;
SELECT DISTINCT ((((rt1.c0) NOT BETWEEN (-7.5756474E7) AND (rt1.c0))) NOT NULL) FROM t1, t0, rt1, vt0 WHERE (CASE NULL  WHEN CASE WHEN 1443016994 THEN '' END THEN NULL COLLATE RTRIM END) GROUP BY ((CAST(rt1.c3 AS REAL))<<(((vt0.c0)AND(rt1.c3)))); -- 0ms;
SELECT DISTINCT ((CAST(0.408112388424957 AS TEXT)) BETWEEN ((~ (t0.c0))) AND (t1.c25)), CAST('-746789983' AS REAL) COLLATE RTRIM, CASE (((rt1.c2, rt1.c2, t1.c51))>((t0.c0, t1.c25, rt1.c3)))  WHEN LOWER(rt1.c2) THEN ((((((((t1.c96)OR(t1.c96)))OR(t1.c0)))AND('笝uzPC')))OR(t1.c1)) WHEN ((rt1.c0) NOT BETWEEN (t1.c25) AND (t1.c0)) THEN ((vt0.c0) NOT BETWEEN (t1.c81) AND (rt1.c3)) WHEN CASE vt0.c0  WHEN t1.c25 THEN t0.c0 END THEN TIME(rt1.c3, t1.c51, rt1.c3, rt1.c0, t0.c0) END, 0.34048572250223774, JULIANDAY(CASE t0.c0  WHEN t1.c81 THEN rt1.c2 END, CASE t0.c0  WHEN t1.c0 THEN t1.c25 ELSE t1.c51 END, (t0.c0 IN (rt1.c0, t1.c0))) FROM t0, t1 WHERE ('0.9759796552566853');SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((rt1.c2) BETWEEN (t1.c25) AND (t1.c0))) NOTNULL) ASC  NULLS FIRST) FROM t1, vt0 WHERE (((((-1.010213217E9) NOTNULL)) NOT NULL));SELECT DISTINCT CASE t1.c25  WHEN '-75756474' THEN t0.c0 ELSE rt1.c3 END COLLATE BINARY FROM rt1 WHERE (CHANGES());SELECT ALL (CHANGES() IN ()) FROM t1, t0, vt0, rt1; -- 0ms;
SELECT DISTINCT (((t1.c81)) NOT BETWEEN ((CAST(x'' AS REAL))) AND ((CASE t1.c0  WHEN t0.c0 THEN vt0.c0 END))) FROM rt1, vt0 WHERE ((- (((NULL) NOTNULL))));SELECT DISTINCT CAST(CASE WHEN t1.c1 THEN t1.c25 WHEN t1.c1 THEN t1.c51 WHEN 0.510111503328803 THEN t1.c1 ELSE vt0.c0 END AS TEXT), MAX(MIN(rt1.c0), (rt1.c4 IN (t1.c96))), '664497678' FROM rt1 WHERE (CAST((NOT (NULL)) AS INTEGER));SELECT DISTINCT LIKELY(((t1.c96)==(rt1.c0))) FROM t0, rt1, t1; -- 0ms;
SELECT DISTINCT (((((((rt1.c4)AND(vt0.c0)))AND(rt1.c1)), CAST(t1.c96 AS REAL), UNLIKELY(DISTINCT rt1.c3)))>((((rt1.c4)|(vt0.c0)), ((t1.c96)+(t1.c0)), (((rt1.c0, rt1.c2, t1.c81)) BETWEEN ((t0.c0, vt0.c0, t1.c25)) AND ((vt0.c0, t1.c25, t1.c1)))))) FROM t0, vt0 GROUP BY ((rt1.c0) BETWEEN (t1.c96) AND ((((t0.c0, rt1.c2, rt1.c3)) BETWEEN ((vt0.c0, t1.c25, vt0.c0)) AND ((vt0.c0, t1.c0, vt0.c0))))) HAVING AVG(x'dfff');SELECT DISTINCT ((((HEX(DISTINCT rt1.c4))OR(((((t1.c1)OR(t1.c0)))AND(t1.c25)))))AND('%>')), COUNT(t1.c96 COLLATE RTRIM COLLATE NOCASE), (((((t1.c1)>(vt0.c0))))>(((((('0.6423716081105072')OR(rt1.c1)))AND(t0.c0))))) FROM t0, vt0, t1, rt1; -- 1ms;
SELECT DISTINCT ABS(rt1.c1) COLLATE BINARY COLLATE RTRIM FROM vt0, rt1, t1; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c2 THEN rt1.c2 END) IS FALSE) FROM t0 ORDER BY ((t1.c96 IN ()) IN ());SELECT CUME_DIST() OVER () FROM vt0, t1, t0 WHERE (CAST((((0.3782339747313733)) BETWEEN ((NULL)) AND ((0.08599372088787705))) AS TEXT)); -- 0ms;
SELECT CASE ((0.9006250611273957)&(t1.c51))  WHEN CAST(t1.c25 AS TEXT) THEN ((t1.c51)<<(rt1.c1)) END FROM t1, rt1; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t1, rt1, t0 WHERE (CAST(0X2b963918 COLLATE NOCASE AS TEXT)); -- 0ms;
SELECT DISTINCT (NOT (SUM(rt1.c2))) FROM vt0, t0;SELECT DISTINCT CASE WHEN ((NULL)*(rt1.c1)) THEN (((t1.c51, rt1.c3, t0.c0)) BETWEEN ((t1.c25, t1.c1, t1.c25)) AND ((vt0.c0, t1.c96, t1.c81))) ELSE ((((rt1.c2)OR(rt1.c3)))OR(t1.c1)) END, ((CAST(t1.c51 AS INTEGER))==(((0.8161601267258531)>(rt1.c1)))), (((((((((((rt1.c2))>((rt1.c2))))OR((- (rt1.c3)))))OR((t1.c51 IN (t1.c0)))))AND((rt1.c0 IN ()))))OR(rt1.c1 COLLATE BINARY)) FROM vt0, t1;SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN t1.c96 WHEN t0.c0 THEN t1.c1 END) FROM t0 WHERE ((NOT (((NULL)/(x'')))));SELECT t1.c0, CAST(((((((((((((t0.c0)OR(rt1.c4)))OR(t1.c25)))AND(t1.c0)))AND(t1.c1)))AND(rt1.c0)))AND(t1.c25)) AS BLOB), ((((NULL)OR(rt1.c3)))IS NOT(((t1.c25) ISNULL))) FROM rt1;SELECT DISTINCT ((((((((((((((rt1.c2)OR(rt1.c3)))OR(t0.c0)))OR(t1.c51)))AND(t1.c1)))AND(rt1.c3)))AND(x'')))<>(CASE t1.c25  WHEN t0.c0 THEN t1.c1 ELSE t1.c51 END)) FROM rt1, t0 ORDER BY ((((vt0.c0)OR(NULL)))AND(rt1.c3)) COLLATE NOCASE ASC LIMIT -66225161;SELECT ROW_NUMBER() OVER (), ((IFNULL(t0.c0, rt1.c1))IS NOT(t1.c0)), GLOB(((t1.c51)<<(t1.c81)), CASE WHEN t1.c0 THEN x'b4d0' ELSE t1.c51 END) FROM t1, rt1, vt0 WHERE ((+ (0X563e2337 COLLATE NOCASE)));SELECT DISTINCT CASE WHEN COUNT(*) THEN '''HtV┵' END FROM t1; -- 0ms;
SELECT DISTINCT HEX(((t1.c1)IS(rt1.c3))) FROM t0, rt1, t1, vt0; -- 0ms;
SELECT DISTINCT ((NULLIF(DISTINCT t1.c25, -1508887167))>((((vt0.c0, t1.c51, t0.c0))<((t1.c51, t0.c0, t1.c96))))) FROM rt1, t0, t1, vt0; -- 0ms;
SELECT DISTINCT CHAR((t1.c51 IN ())) FROM t0, t1, rt1, vt0 LIMIT 1593903408; -- 4ms;
SELECT DISTINCT CASE WHEN t0.c0 COLLATE RTRIM THEN ((rt1.c3)IS(vt0.c0)) WHEN rt1.c0 THEN -1.088238712E9 WHEN ((rt1.c2) BETWEEN (t0.c0) AND ('0.7141009181014898')) THEN AVG(t1.c1) ELSE GROUP_CONCAT(rt1.c0) END FROM vt0;SELECT ((((rt1.c1) NOT BETWEEN (t1.c81) AND (rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (t1.c25)))) FROM t1, t0;SELECT DISTINCT CAST(((vt0.c0) NOT NULL) AS INTEGER) FROM t1, rt1;SELECT DISTINCT NULL FROM t0, rt1, vt0 WHERE ((((LIKE(0.47020141711566765, 0xffffffffba10067a)))<(((('Ki')<<(NULL)))))); -- 1ms;
SELECT DISTINCT '217961477' FROM rt1, t0 WHERE ((((('1712154015') BETWEEN (0.8263214369378862) AND (NULL))) IS TRUE)) GROUP BY ((((t1.c0) BETWEEN (rt1.c1) AND (rt1.c0))) IS FALSE), ((CASE WHEN rt1.c2 THEN t1.c81 END) IS FALSE), ((((t1.c81 COLLATE RTRIM)AND(NULL)))AND((((t0.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c25, t0.c0, t1.c81)) AND ((t1.c96, t1.c96, t1.c51))))) HAVING (((((((((((t1.c0))>((t1.c96))))AND((('217961477') NOTNULL))))AND(((t1.c51)=(rt1.c3)))))AND((((rt1.c4, rt1.c3, t1.c0))>=((t1.c25, t0.c0, t1.c51))))))OR(t1.c51));SELECT ALL STRFTIME(t1.c0 COLLATE RTRIM, CAST(t1.c25 AS REAL), (((rt1.c1, t0.c0, rt1.c3))<((t1.c51, t1.c25, t1.c51))), ((vt0.c0) NOTNULL), ((((((((((((t0.c0)AND(rt1.c3)))OR(t0.c0)))OR(t1.c81)))AND(rt1.c4)))AND(t1.c25)))OR(t1.c96))) FROM rt1, vt0;SELECT DISTINCT ((CAST(t1.c96 AS NUMERIC)) ISNULL) FROM t1, vt0 WHERE ((((NULL)) BETWEEN ((LOWER(DISTINCT 0x3c15dcb0))) AND ((x'7e5e')))); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c0)AND(NULL)))OR(t1.c81)))OR(t1.c51)))OR(vt0.c0))) BETWEEN (rt1.c3 COLLATE BINARY) AND (((t0.c0) NOT NULL))), json_patch(SUM(t0.c0), (+ (rt1.c0))), (((((((t1.c0)) NOT BETWEEN ((rt1.c2)) AND ((NULL))))AND(CASE WHEN rt1.c4 THEN rt1.c1 END)))OR(((rt1.c3)<=(rt1.c2)))) FROM vt0, t1 INNER JOIN t0 ON ((0x590d9a1) NOT BETWEEN (((t1.c1) NOT NULL)) AND (TRIM(t1.c51, rt1.c4))) WHERE ((~ (((((x'a400')OR(x'3061')))OR(NULL)))));SELECT DISTINCT (((+ (vt0.c0)))>=(((rt1.c2)!=(t1.c51)))), (((COUNT(*)))>=((((rt1.c2) NOTNULL)))), LIKELIHOOD(DISTINCT (t1.c1 IN (rt1.c3)), 0.2302953336790836), (((t1.c51)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))) COLLATE RTRIM, rt1.c2 FROM rt1, t1 ORDER BY CAST((((((((('')AND(vt0.c0)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) AS REAL);SELECT ALL json_array_length(((t1.c81)+(t1.c1))) FROM rt1, t1, t0, vt0 WHERE (((((NULL)AND(0.029064836462460497)))OR(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ABS(SUM(rt1.c2)) FROM vt0;SELECT DISTINCT ((LTRIM(t1.c1))<<(0.29499089042059645)) FROM rt1, t0, vt0 WHERE ((((((((x'')AND(0.31161329633070645)))OR(x'4963')), (('672231038')OR(-1136371528)), CAST(x'' AS INTEGER)))<((CAST('1569013488' AS NUMERIC), TRIM(DISTINCT NULL), ((1993692388)IS(NULL)))))) ORDER BY (~ ((vt0.c0 IN ()))) ASC;SELECT ALL (((+ (t1.c25)))||(MIN(vt0.c0))), AVG(((t1.c1)|(rt1.c3))), (((((rt1.c0, t0.c0, rt1.c3, rt1.c3, t1.c51)) BETWEEN ((rt1.c1, -685801842, t1.c81, t1.c1, rt1.c3)) AND ((rt1.c3, rt1.c1, vt0.c0, t0.c0, t1.c0)))) NOT BETWEEN (CASE WHEN t1.c96 THEN t1.c25 ELSE t1.c25 END) AND (((rt1.c1) IS FALSE))) FROM vt0, t0 WHERE (((((CAST(x'' AS INTEGER))OR(CAST(NULL AS INTEGER))))AND('-1682984993')));SELECT ALL t0.c0 FROM t1, t0, rt1 WHERE (x''); -- 0ms;
SELECT (((t1.c81)) BETWEEN (((t1.c0 IN ()))) AND (((((t1.c81, t1.c25, t0.c0))<((t1.c1, t1.c51, t1.c96)))))), t1.c96, CASE WHEN (((t1.c96))==((t1.c25))) THEN t1.c0 WHEN t1.c96 COLLATE RTRIM THEN (+ (NULL)) WHEN rt1.c0 THEN (('-1599860692') NOT BETWEEN ('L^B}') AND (t1.c25)) END, json_array(((((rt1.c1)AND(0.989625992288048)))OR(t1.c0)), rt1.c1), CAST(((t1.c51) NOT BETWEEN (t1.c25) AND (rt1.c3)) AS BLOB) FROM t0, vt0, t1, rt1 WHERE ((((0X5ae4f23e))=(('-361603490'))) COLLATE BINARY); -- 0ms;
SELECT CAST(SUM(rt1.c2) AS TEXT), (CASE WHEN t1.c0 THEN t1.c0 END IN ()), NTH_VALUE((((+ (vt0.c0)))<=(CASE t1.c0  WHEN t1.c25 THEN vt0.c0 ELSE t1.c1 END)), UPPER(vt0.c0) COLLATE BINARY) OVER () FROM vt0, t1;SELECT '1095444863' COLLATE NOCASE FROM t0, t1, vt0 WHERE ((~ (((((0.964014387164491)AND(NULL)))AND('U	%GG엎'))))); -- 0ms;
SELECT t0.c0 FROM rt1, vt0 WHERE ((((x'' IN ()))IS NOT(((((x'')AND(x'')))AND(0.6899342904563859)))));SELECT ALL CASE ((rt1.c4)IS(rt1.c4))  WHEN (((vt0.c0, rt1.c1, t1.c96)) NOT BETWEEN ((rt1.c2, t0.c0, rt1.c0)) AND ((rt1.c4, rt1.c4, vt0.c0))) THEN JULIANDAY(rt1.c0, rt1.c4, rt1.c2, 0.5515365627103511, t1.c96) WHEN ABS(vt0.c0) THEN (((t1.c1)) BETWEEN ((rt1.c4)) AND ((t1.c96))) WHEN ((t1.c81)==(rt1.c0)) THEN ((t1.c51) BETWEEN (rt1.c0) AND (t0.c0)) END FROM vt0, t1;SELECT DISTINCT COUNT(*) FROM t0, vt0; -- 0ms;
SELECT json_array_length(0.5062657540410006, ((t1.c1) NOT BETWEEN (rt1.c1) AND (t1.c96))), CAST((((rt1.c3))!=((rt1.c3))) AS TEXT), 'uvKu[|' FROM t0, t1, rt1 WHERE ((((((0X151f51f6))<((x'')))) BETWEEN (CAST(NULL AS INTEGER)) AND (LOWER(0.9759796552566853)))); -- 0ms;
SELECT DISTINCT SUM(((t1.c1) IS FALSE)) OVER ( ROWS BETWEEN (~ ((((t1.c96, rt1.c4, t1.c96))>=(('QG嫻驨GG', t1.c0, t1.c51))))) FOLLOWING AND ((t1.c96 COLLATE NOCASE) IS FALSE) PRECEDING EXCLUDE NO OTHERS) FROM t1, t0, rt1 WHERE (((((CASE WHEN x'' THEN NULL WHEN 'a#Dw3!繽H' THEN '' WHEN NULL THEN 0.7316656047614533 END)AND((('/繽nMz冖 ') NOTNULL))))AND((~ (NULL))))) ORDER BY ((t1.c0) NOT BETWEEN (t1.c51) AND (((((t0.c0)AND(t1.c0)))OR(t0.c0)))) DESC;SELECT DISTINCT CAST((NOT (vt0.c0)) AS INTEGER), (((rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((((((t1.c51)OR(t1.c25)))AND(rt1.c0)), (t1.c51 IN ()), ((rt1.c2)>>(rt1.c0)))) AND (((t1.c81 IN (rt1.c3)), (t1.c81 IN ()), (~ (t1.c0))))), CAST((t1.c1 IN (rt1.c2)) AS NUMERIC) FROM vt0, t1 FULL OUTER JOIN t0 ON CAST(json_insert(rt1.c1, t1.c96, t0.c0, rt1.c2, rt1.c0) AS INTEGER);SELECT (((rt1.c1, t1.c81, t1.c25)) NOT BETWEEN ((vt0.c0, rt1.c3 COLLATE BINARY, ((t1.c0)IS NOT(vt0.c0)))) AND ((CASE WHEN rt1.c4 THEN rt1.c4 END, ((((vt0.c0)OR(t1.c81)))AND(rt1.c1)), LTRIM(t1.c0, x'')))) FROM t0, t1, vt0 INDEXED BY i75 WHERE ((NOT (CASE 0.5970616461665854  WHEN NULL THEN 0X365bad4c WHEN '4F' THEN '-1871539125' WHEN x'bbc8' THEN x'1105' ELSE x'' END)));SELECT ALL CAST(rt1.c1 AS BLOB) COLLATE RTRIM, CASE WHEN t1.c1 THEN t1.c96 ELSE LIKELY(rt1.c2) END, (TRIM(vt0.c0) IN ()) FROM t1;SELECT DISTINCT ((((t1.c96)>(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (t1.c25 COLLATE RTRIM)) FROM t0 ORDER BY ((x'')>>((t1.c51 IN ()))) ASC  NULLS LAST, CAST(CAST(rt1.c1 AS REAL) AS BLOB), (((+ (rt1.c3))) ISNULL);SELECT ALL SUM(CAST(t1.c0 AS REAL)), 0.3242348056143364, ((('349242004', (((t1.c1, t1.c81, t0.c0))=((t1.c0, rt1.c4, NULL))), ((rt1.c3) ISNULL)))<((CAST(0.5380177427683749 AS BLOB), CASE WHEN t1.c51 THEN NULL WHEN t1.c25 THEN t1.c25 WHEN rt1.c2 THEN rt1.c1 END, (((t1.c25, rt1.c1, t1.c25, t1.c81, t1.c51)) NOT BETWEEN ((450056541, vt0.c0, rt1.c3, 0.7359904669305488, t1.c0)) AND ((t1.c81, t1.c96, rt1.c0, rt1.c4, vt0.c0)))))) FROM t1, t0, vt0;SELECT DISTINCT t1.c25 FROM t1, vt0, t0; -- 0ms;
SELECT ALL ((((NULL) ISNULL))OR(NULL)) FROM vt0, rt1, t0 WHERE (((((((0.9346295026236996) NOT BETWEEN (0xffffffffb60aba3f) AND (x'')))OR(TRIM(DISTINCT '-1524407176'))))AND(CASE WHEN '72206454' THEN NULL WHEN NULL THEN -2122915625 WHEN '\_䗖' THEN NULL WHEN '' THEN x'' WHEN 0.3935473815673971 THEN '0.964014387164491' END))) GROUP BY (((((rt1.c4, rt1.c2, rt1.c4)) BETWEEN ((vt0.c0, t1.c96, t0.c0)) AND ((rt1.c0, rt1.c3, t1.c51)))) BETWEEN (CAST(NULL AS TEXT)) AND ((NOT (rt1.c0)))), rt1.c1, ((('' IN ()))>=(rt1.c4 COLLATE RTRIM));SELECT DISTINCT CAST(MIN(rt1.c4) AS NUMERIC) FROM vt0 INDEXED BY i75, t0, t1, rt1 WHERE (((((0.3208678702993947)*(0.5000019071015793)))+(((7.44341913E8) BETWEEN (x'60742609') AND (0.24880200907897165)))));SELECT CASE WHEN MIN(rt1.c2) THEN COUNT(*) WHEN CAST('0.11813624864059913' AS BLOB) THEN '-774104773' WHEN ((((rt1.c2)OR(rt1.c2)))OR('-1266122697')) THEN ((t1.c0)&(rt1.c1)) END FROM rt1, t1, t0; -- 0ms;
SELECT DISTINCT LAG((((rt1.c4)) NOT BETWEEN (((((rt1.c3)) BETWEEN ((rt1.c1)) AND (('-232836685'))))) AND ((((x'') NOT BETWEEN (t1.c51) AND (t1.c51))))), ((t1.c1) NOT BETWEEN (((t1.c96)LIKE(t1.c0))) AND (CASE t1.c0  WHEN t1.c51 THEN 0Xffffffffaa28814a END)), CAST(NULL COLLATE NOCASE AS INTEGER)) OVER () FROM t1, rt1, vt0, t0 WHERE (((((json_insert(NULL, 0.43496827992783704, 0.7615092129748104, '-1354761955', NULL, 'mP', NULL))OR(((0x4809ba9)+('q''')))))AND(((NULL) IS TRUE)))); -- 0ms;
SELECT ALL t1.c0, LAST_INSERT_ROWID(), ((((((((CASE WHEN t1.c25 THEN t1.c1 WHEN rt1.c4 THEN t1.c96 WHEN t1.c51 THEN t1.c0 END)OR((rt1.c1 IN ()))))OR(CAST(rt1.c3 AS NUMERIC))))OR(((rt1.c2)<<(vt0.c0)))))OR(((rt1.c3) NOT BETWEEN (t1.c25) AND (rt1.c3)))) FROM rt1, t1, t0, vt0 WHERE (((((CAST(NULL AS NUMERIC))AND(0x6a9343e4)))OR((((1195334570))>=(('2019962088')))))); -- 0ms;
SELECT ALL (- (t1.c25)) FROM vt0, t1, rt1, t0; -- 1ms;
SELECT ALL CASE (~ (rt1.c3))  WHEN CAST(rt1.c3 AS BLOB) THEN (vt0.c0 IN ()) END, TOTAL(HEX(t1.c96)), FIRST_VALUE((~ ('1703666287'))) OVER () FROM t1, rt1 WHERE ((((((((NULL)OR(NULL)))OR(x'7801')), ((0.7791050626697067) NOT BETWEEN (NULL) AND (NULL)), ('W㞭EQ' IN (x'')), ((x'ebbe')>>(NULL)), (+ ('-1088238712'))))<((CASE NULL  WHEN 0.7627820443147473 THEN x'7885' END, (NULL IN ()), (((0.17013066639573382, NULL, NULL)) NOT BETWEEN ((x'e960', '0.25272234129763926', 0.048050310206541824)) AND ((2048914918, NULL, 1695189342))), ((x'')OR('-1682984993')), ((0.7445664178423615) NOTNULL))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c81 THEN rt1.c2 END) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c2 END) AND (((vt0.c0) NOTNULL))) FROM t0, rt1, vt0, t1; -- 0ms;
SELECT CASE WHEN t1.c96 COLLATE NOCASE THEN CAST(NULL AS INTEGER) WHEN (t1.c0 IN ()) THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (rt1.c1)) WHEN CASE WHEN rt1.c2 THEN t1.c51 END THEN ((NULL) NOT BETWEEN (t1.c25) AND (t1.c81)) END FROM t0, t1 WHERE (CASE ((0x3911f12c) BETWEEN (0.085824060215831) AND (NULL))  WHEN (NOT (0.904371311583676)) THEN ((x'') BETWEEN (0x5d968b45) AND (NULL)) END);SELECT ((t1.c1) NOT BETWEEN (t1.c96) AND (t0.c0)) COLLATE NOCASE FROM vt0, rt1, t1;SELECT DISTINCT (((NULL) BETWEEN (t1.c0) AND (t1.c51)) IN ()), ((t1.c25)/(CASE WHEN rt1.c2 THEN rt1.c3 WHEN t1.c96 THEN x'54fb' WHEN t1.c96 THEN NULL WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN 0.2570612142675829 END)), SUM(CASE t1.c51  WHEN rt1.c2 THEN t1.c25 ELSE rt1.c1 END) OVER ( PARTITION BY ((((CAST(rt1.c0 AS TEXT))AND(((rt1.c1)<=(t1.c51)))))AND(CAST(NULL AS BLOB))), 'C', '-1410461565', t1.c96) FROM vt0 NOT INDEXED WHERE (CASE (((NULL))!=(('?3xLC')))  WHEN (0.2772780908057825 IN ()) THEN x'' ELSE ((NULL)>(0X55f879a7)) END);SELECT DISTINCT GROUP_CONCAT(((rt1.c3) ISNULL)) OVER ( PARTITION BY CAST(((((t1.c25)OR(t1.c0)))OR(t0.c0)) AS BLOB), (((((((((- (t1.c25)))OR((((t1.c81)) NOT BETWEEN ((vt0.c0)) AND ((0.9201744627148504))))))OR((- (t1.c1)))))AND(((t1.c51) ISNULL))))AND((((t0.c0, rt1.c2, vt0.c0, t1.c25, vt0.c0))==((x'b2c3', rt1.c4, t1.c96, vt0.c0, rt1.c0)))))), '1108323498', ((((t1.c25) BETWEEN (vt0.c0) AND (t1.c0))) IS TRUE) FROM t0 NOT INDEXED, rt1, vt0;SELECT (~ (((((vt0.c0)AND(rt1.c2)))AND(rt1.c0)))) FROM vt0 WHERE ((((x'' IN (0.4128871728351482)))>>(((x'') NOT BETWEEN (0.30194017441226995) AND ('-1354761955')))));SELECT DISTINCT CASE WHEN rt1.c3 THEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)) ELSE rt1.c1 END FROM rt1, vt0, t1, t0 WHERE (CAST(CAST(0.4247001602865045 AS BLOB) AS BLOB)); -- 0ms;
SELECT DISTINCT (+ (((rt1.c1)<(rt1.c1)))) FROM rt1, t0, vt0, t1 WHERE ((((1.524953662E9)GLOB(-1179736073)) IN ())); -- 0ms;
SELECT DISTINCT ((CAST(t1.c25 AS TEXT)) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (t1.c1 COLLATE RTRIM)), 'LI!Cs% ', ((((((rt1.c3)==(rt1.c2)))OR(rt1.c0 COLLATE NOCASE)))OR(rt1.c2 COLLATE BINARY)) FROM rt1, vt0, t1 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT (((((t1.c81, t1.c96, rt1.c2))>((rt1.c4, rt1.c0, rt1.c1))))<=(CAST(rt1.c0 AS INTEGER))) FROM t1, rt1, vt0 WHERE (((((((((((NULL)OR(x'')))OR(2027043568)))AND(NULL)))OR('0.7141009181014898')))GLOB(HEX(DISTINCT 0.9964237775482401)))); -- 0ms;
SELECT CHAR(t1.c1), CASE WHEN ((t1.c0)>=(rt1.c2)) THEN ((t1.c25)+(t1.c51)) ELSE ((t1.c51)%(rt1.c2)) END, NULL FROM t1, vt0, rt1, t0 WHERE ((((((0.3582871460779825, '981901378', 0.7076760817897574, '1118871563', x'b79c')) NOT BETWEEN (('450056541', x'16b73a2a', x'', '0.06569981132682967', '')) AND ((x'', 0.8757007545850359, '', NULL, NULL))))<>('5661725' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)OR(rt1.c1)) AS BLOB), CAST(CAST(t1.c96 AS NUMERIC) AS NUMERIC), UNLIKELY(DISTINCT TYPEOF(rt1.c1)) FROM vt0, rt1, t0 WHERE (((-1658186271) NOT BETWEEN (((0.8798925592136168) NOT NULL)) AND (((NULL)IS('')))));SELECT DISTINCT (((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((((((t1.c96)AND(rt1.c3)))OR(rt1.c1)), (- (rt1.c4)), NULL)) AND (('', ((t1.c1) NOT BETWEEN (rt1.c2) AND (t1.c25)), (((NULL))>((vt0.c0)))))) FROM t0, rt1, vt0, t1 LIMIT -1685534068 OFFSET -2032117322; -- 1ms;
SELECT ((((((((((((((((((((t1.c0)OR(rt1.c2)))OR(0.6583847938656843)))OR(rt1.c2)))AND(x'b47e51707ca3dfc9')))AND(((t1.c96)LIKE(t1.c25)))))OR((((rt1.c4))==((rt1.c0))))))OR(((t1.c0)<<(t0.c0)))))AND(x'' COLLATE RTRIM)))OR(CASE t1.c96  WHEN t1.c0 THEN rt1.c0 END)))OR(MAX(t1.c81))) FROM t0, t1, rt1 WHERE (((NULLIF(DISTINCT 1321216720, '-1703552720')) ISNULL)); -- 0ms;
SELECT (rt1.c2 IN (((vt0.c0) IS FALSE))) FROM t0, rt1, t1 WHERE ((((x'47f9e1df' COLLATE BINARY))>((((0.9380203748218865) NOT NULL)))));SELECT DISTINCT t1.c96 FROM rt1, t0;SELECT DISTINCT rt1.c0 FROM vt0, t1, t0, rt1 WHERE ((((('1103677317')>>(1.243577788E9)))+(((NULL) BETWEEN ('N[Y,q^s0W') AND (x''))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c3)<>(vt0.c0)) THEN '' END FROM t0, t1, vt0, rt1 INDEXED BY i8 WHERE (((((x'')<=(x'')))>=((+ ('')))));SELECT (((t0.c0)) BETWEEN ((NULL)) AND ((((rt1.c1)<>(1846400364))))), LTRIM(((t1.c1) NOT BETWEEN (t1.c25) AND (t0.c0)), ((((rt1.c0)OR(t1.c96)))OR(t1.c51))), ((((t1.c51) IS TRUE))%(((rt1.c2)OR(t1.c1)))) FROM t1, vt0, t0, rt1; -- 0ms;
SELECT NTH_VALUE(((((((((((t0.c0)!=(t1.c1)))OR(((((((((((((t1.c51)AND(t1.c96)))OR(t1.c0)))AND(rt1.c3)))OR(t1.c51)))OR(rt1.c4)))OR(t1.c96)))))OR(CASE WHEN t1.c0 THEN t1.c25 WHEN rt1.c2 THEN rt1.c1 WHEN 1362631484 THEN vt0.c0 WHEN vt0.c0 THEN 'dQ' WHEN t1.c1 THEN t1.c96 END)))OR((('md{ퟄYab')<=(rt1.c1)))))OR('	q')), (((((((t1.c81))<((rt1.c3))))AND(((0.08271534737619035) BETWEEN (NULL) AND (t1.c0)))))AND(((rt1.c2)*(t1.c96))))) OVER () FROM t0, vt0, rt1, t1; -- 1ms;
SELECT DISTINCT COUNT(2.17961477E8) OVER (), COALESCE(((t1.c25)AND(rt1.c4)), t1.c25, CASE rt1.c2  WHEN vt0.c0 THEN t1.c0 ELSE rt1.c2 END, ((NULL) NOT NULL)), NULL FROM t0, rt1;SELECT ((CAST(rt1.c0 AS TEXT))>((((rt1.c4))<>((0Xfffffffff7880a0a))))) FROM t1, vt0 GROUP BY ((((~ (vt0.c0))))>((((x'f30c')>=(t1.c0))))) HAVING (-4.92301007E8 IN ()) LIMIT 1809895834 OFFSET -1298118754;SELECT ALL ((rt1.c2) IS TRUE) COLLATE BINARY FROM rt1, t1, t0; -- 0ms;
SELECT DATE(STRFTIME(x'', t1.c96, t1.c51, t1.c51, rt1.c1), t1.c51 COLLATE RTRIM, ((rt1.c3) IS FALSE), ((t1.c0) NOT BETWEEN (t1.c51) AND (t1.c81)), t1.c96, CASE WHEN t1.c25 THEN 0.6423716081105072 END, ((t1.c96) NOT NULL)) FROM t1, t0, rt1, vt0 WHERE (((((430970761 IN ()), CAST('-30823198' AS TEXT), (((x''))>((NULL)))))<>((x'1f49', CASE NULL  WHEN 0.6583847938656843 THEN '1109838771' WHEN '0.5071080044383927' THEN x'' WHEN NULL THEN NULL END, ((x'361920f4')>=('L^B}')))))); -- 0ms;
SELECT DISTINCT ((((((rt1.c2) BETWEEN (vt0.c0) AND (t1.c25)))AND((-1.364436229E9 IN (vt0.c0)))))OR('-1389295956')) FROM t1, t0, vt0, rt1 WHERE (((+ (NULL)) IN (CAST(0Xffffffffa859ade2 AS REAL)))); -- 0ms;
SELECT (((t0.c0, t1.c0, t0.c0)) BETWEEN (((((rt1.c2, t1.c51, vt0.c0)) BETWEEN ((t1.c1, t1.c81, t1.c1)) AND ((rt1.c3, t1.c96, t1.c81))), CASE WHEN t1.c51 THEN rt1.c4 ELSE t1.c0 END, MIN(rt1.c1))) AND ((((t1.c1)-(rt1.c3)), CAST(rt1.c4 AS NUMERIC), ((t1.c51) BETWEEN (t1.c1) AND (t1.c1))))) FROM vt0 WHERE (NULLIF(((NULL) BETWEEN ('1109838771') AND (NULL)), ((((0.5264995591289237)AND(NULL)))AND('-1065911523'))));SELECT ((t1.c1 COLLATE BINARY) NOT NULL), json_patch(((rt1.c3)+(t1.c0)), CAST(rt1.c4 AS TEXT)), t1.c96 FROM vt0, t1 LIMIT 631551653;SELECT ALL ((rt1.c1) ISNULL), (NOT (CASE rt1.c2  WHEN 'DOEB' THEN t1.c1 ELSE rt1.c4 END)), '0.9964237775482401' COLLATE BINARY FROM t1, rt1, t0 NOT INDEXED, vt0 WHERE ((((((((0.923469251929529)OR(0.009743352331339494)))AND('-546021838'))))>=(((+ ('')))))); -- 0ms;
SELECT DISTINCT json_valid(((((((((((((rt1.c2)OR(rt1.c4)))OR(rt1.c0)))AND(rt1.c4)))OR(t1.c96)))AND(t1.c25)))AND(t1.c1))) FROM rt1, t1, t0 ORDER BY (((((rt1.c4 IN ()))OR(((t1.c51) BETWEEN (rt1.c4) AND (NULL)))))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN rt1.c2 THEN t1.c25 WHEN t1.c1 THEN rt1.c2 END))  NULLS LAST; -- 0ms;
SELECT ALL (vt0.c0 IN (((t1.c96) BETWEEN (vt0.c0) AND (rt1.c0)), ((vt0.c0)LIKE(rt1.c1)))) FROM t1 LEFT OUTER JOIN rt1 ON CAST(((t1.c81)<<(t0.c0)) AS INTEGER) CROSS JOIN t0 ON ((x'') NOT NULL);SELECT ALL LAST_VALUE((((rt1.c4)) BETWEEN ((((t1.c1)>(t1.c0)))) AND (((+ (rt1.c3)))))) OVER () FROM rt1, t1, vt0 WHERE (1734497007); -- 0ms;
SELECT ((t1.c25 COLLATE BINARY) NOTNULL) FROM rt1, t0;SELECT DISTINCT ((LIKELY(t1.c81)) IS TRUE) FROM t1 ORDER BY CASE t1.c25  WHEN CAST(t1.c81 AS TEXT) THEN CAST(vt0.c0 AS REAL) ELSE (rt1.c0 IN ()) END DESC, t1.c0  NULLS FIRST, ((rt1.c2 IN ()) IN ()) ASC  NULLS FIRST;SELECT DISTINCT CAST(INSTR(rt1.c1, t0.c0) AS REAL) FROM t0, t1, vt0 WHERE ((((('-142079478')>(NULL))) BETWEEN ('82909765') AND ('')));SELECT DISTINCT CASE ((rt1.c3) NOT BETWEEN (rt1.c3) AND (t1.c81))  WHEN ((rt1.c4)>>(rt1.c3)) THEN (((t1.c96))<>(('r궟QGfFZ'))) ELSE (t1.c0 IN ()) END FROM vt0, rt1, t0;SELECT ALL ((((((t1.c51) ISNULL))OR(HEX(t1.c51))))OR(SUM(t1.c25))) FROM vt0, rt1;SELECT ALL ((ABS(x'')) IS FALSE), t1.c96, json_insert(0.9615943192036706, (vt0.c0 IN (x'406f')), (((t0.c0))>=((vt0.c0)))) FROM t0, rt1;SELECT ALL ((t1.c51 COLLATE RTRIM)|(TRIM(DISTINCT NULL))), UPPER(((((rt1.c4)OR(t1.c96)))AND(t1.c81))), (((rt1.c0)GLOB(t1.c51)) IN ()) FROM t1, rt1; -- 0ms;
SELECT DISTINCT ((t1.c0 COLLATE BINARY)<(((((rt1.c0)AND(t1.c0)))AND(t1.c0)))) FROM rt1, vt0, t0, t1 WHERE ((CAST('-66225161' AS TEXT) IN ((0X30a218db IN ())))); -- 0ms;
SELECT ALL (((((((((((((- (rt1.c1)))OR(AVG(t1.c81))))AND((t1.c1 IN ()))))AND(((t1.c96) BETWEEN (rt1.c2) AND (t1.c51)))))AND(((t1.c0) ISNULL))))AND(t1.c96 COLLATE RTRIM)))OR(((t0.c0) NOTNULL))), (- (((t1.c51)|(t1.c25)))), vt0.c0, ((t1.c0 IN ()) IN ()), LIKELIHOOD(CASE x'61f1'  WHEN t1.c51 THEN t1.c96 END, 0.1731013090001401) FROM vt0 WHERE (((CASE WHEN NULL THEN x'e35e' WHEN x'' THEN -1116567099 WHEN 0.3347895526085829 THEN 0.749754184369149 ELSE x'' END)OR(((0.7651887642342736)GLOB(x'')))));SELECT DISTINCT ((t1.c81) NOT BETWEEN (((t1.c96)>=(t1.c25))) AND (((t1.c51) NOTNULL))), COUNT((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))) OVER (), (~ (CASE rt1.c2  WHEN t1.c51 THEN rt1.c4 WHEN t1.c25 THEN rt1.c2 WHEN t0.c0 THEN t1.c1 END)) FROM rt1, vt0, t0 GROUP BY COALESCE(DISTINCT ((((t1.c0)OR(rt1.c0)))OR(t1.c1)), rt1.c3) HAVING ((((t1.c1)AND(vt0.c0)))OR(rt1.c0)) COLLATE NOCASE LIMIT 744341913 OFFSET 943449146;SELECT ALL '' FROM vt0; -- 0ms;
SELECT ALL ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (x'')))|((((rt1.c0)) BETWEEN (('0.12789482762786908')) AND ((t1.c51))))) FROM vt0, t1, rt1 INDEXED BY i75, t0 WHERE (CASE WHEN '-1854457939' COLLATE BINARY THEN ((((NULL)OR('')))AND(0.01859845417116679)) WHEN CASE NULL  WHEN 0.8049389583172272 THEN 'uvku[|' ELSE '-1364436229' END THEN (+ ('0.9201744627148504')) WHEN '' THEN (~ (x'')) ELSE CASE NULL  WHEN NULL THEN NULL END END);SELECT ALL (((rt1.c3 IN ()))IS(CAST(rt1.c2 AS BLOB))) FROM t1, rt1, t0 WHERE (((((((((x'')OR(NULL)))AND(0.31639317977254333)))OR((((NULL)) BETWEEN ((x'')) AND ((0.42341202189155136))))))AND(((0.42534272907905013) IS FALSE)))); -- 0ms;
SELECT (TRIM(DISTINCT rt1.c4, rt1.c4) IN ()), (((t1.c1 IN ()))*((((t1.c81)) BETWEEN ((rt1.c4)) AND ((t1.c1))))), LIKE(((((((((rt1.c0)AND(rt1.c2)))AND(t0.c0)))AND(rt1.c4)))OR(vt0.c0)), CAST(rt1.c1 AS NUMERIC), '-') FROM rt1, t0, vt0 ORDER BY TRIM(((((rt1.c0)AND(t1.c81)))OR(rt1.c1)), t1.c0)  NULLS LAST;SELECT ALL 0x78662ce8 FROM t0; -- 0ms;
SELECT ALL json_array_length(((t1.c25)!=(t1.c96)), ((rt1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))), ((((((t1.c51)&(t1.c51)))OR((t1.c0 IN ()))))AND((~ (t1.c25)))), NTH_VALUE(CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS BLOB), 1471421302) OVER () FROM t1, vt0, t0, rt1; -- 0ms;
SELECT DISTINCT CAST(LIKE(t0.c0, t1.c1) AS TEXT) FROM rt1, t0, t1, vt0 WHERE (((CASE x''  WHEN 0.2291467037257089 THEN NULL WHEN NULL THEN NULL WHEN NULL THEN 0X4ed964d2 END) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((((((((((rt1.c4) ISNULL))AND(t1.c96 COLLATE NOCASE)))AND(TYPEOF(DISTINCT rt1.c4))))AND((rt1.c4 IN (t1.c1, t1.c1)))))OR(t1.c1 COLLATE RTRIM)))OR(LAST_INSERT_ROWID())))AND((((rt1.c3, t1.c96, t1.c25, t1.c81, rt1.c0))!=((rt1.c0, t1.c25, t1.c25, vt0.c0, rt1.c1))))) FROM t1, t0, vt0, rt1; -- 0ms;
SELECT DISTINCT (((- (x'')))OR((((t1.c81))!=((rt1.c4))))) FROM t1, vt0, rt1, t0; -- 1ms;
SELECT ALL COALESCE((((t1.c25, t1.c0, rt1.c2))!=((t1.c25, x'', rt1.c4))), CAST(-1.405389385E9 AS TEXT), '', CAST(rt1.c4 AS NUMERIC)) FROM rt1, t0 WHERE (CASE WHEN UNLIKELY(0.7832673179457463) THEN CASE '863451435'  WHEN 0.19985165859798548 THEN '219904947' ELSE 0.24366129150830573 END WHEN NULL THEN NULLIF(0.7616174990767056, 0.40559033234054975) WHEN 0.9609848575546804 COLLATE NOCASE THEN (('()Q') NOT BETWEEN ('') AND (731265304)) ELSE CASE WHEN x'' THEN '1455973213' WHEN NULL THEN '0.24366129150830573' WHEN '꩎' THEN x'' END END) ORDER BY ((((((rt1.c0)<>(t1.c81)))AND(vt0.c0 COLLATE BINARY)))OR(CASE rt1.c3  WHEN t1.c51 THEN t0.c0 END)) ASC  NULLS FIRST;SELECT ALL COUNT((((t1.c0, t1.c81, vt0.c0)) BETWEEN ((t1.c1, vt0.c0, rt1.c0)) AND ((t0.c0, t1.c25, t1.c81)))) OVER () FROM vt0;SELECT ((((((t1.c96)OR(t0.c0)))AND(t1.c96)))IS NOT(((t1.c0)>=(t1.c51)))), json_quote(0x49cfa7ac), MIN(vt0.c0 COLLATE RTRIM) FROM rt1, t0;SELECT DISTINCT CASE (((rt1.c2))<>((t1.c25)))  WHEN (+ (rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c0) AND (t1.c51)) END FROM vt0, t1;SELECT DISTINCT SUM(((rt1.c0)/(t1.c96))) FROM t0, vt0, t1 WHERE (((((((((((x'')OR('')))AND(x'')))OR(x'abc4')))AND(x''))) ISNULL));SELECT DISTINCT COUNT(((((t1.c0)OR(vt0.c0)))AND(rt1.c2))), x'', COUNT(((((rt1.c3)AND(x'e45238ba')))AND(rt1.c0)) COLLATE BINARY) FROM rt1 NOT INDEXED, t1, t0, vt0; -- 0ms;
SELECT DISTINCT TOTAL((((t1.c0)) NOT BETWEEN ((rt1.c4)) AND ((t1.c0)))), TOTAL_CHANGES(), ((rt1.c0)>(rt1.c1)) COLLATE NOCASE FROM vt0, t1 WHERE ((((- ('-1685534068')))>>('189066139')));SELECT DISTINCT (-935729465 IN ()), SUM(((((rt1.c0)OR(rt1.c2)))AND(t1.c0))), (((rt1.c2, ((((t0.c0)OR(t0.c0)))OR(rt1.c3)), 0.44359127211220717))>=((CHANGES(), rt1.c2 COLLATE NOCASE, x'a4c4e15a'))) FROM vt0, t0, rt1;SELECT TOTAL(((rt1.c3)&(rt1.c0))), ((((t1.c1) NOT BETWEEN (rt1.c1) AND (t0.c0))) BETWEEN (CASE rt1.c3  WHEN t1.c96 THEN t0.c0 END) AND (((rt1.c0) NOT BETWEEN (-940103231) AND (t1.c81)))), ((((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((vt0.c0, rt1.c1, t1.c81)) AND ((t1.c96, t1.c1, vt0.c0))) IN ()) FROM t1, vt0, rt1 WHERE (-2.44218826E8);SELECT ((json_patch(rt1.c1, rt1.c1))<(((rt1.c4) ISNULL))) FROM rt1, t1, vt0, t0 WHERE ((((((x'') NOTNULL), ((x'') IS FALSE), 1524953662))>=((NULL, CASE WHEN 0.5891879925167782 THEN NULL END, ((('^i]]┵'))>(('ps'))))))); -- 0ms;
SELECT DISTINCT (- (0.9377143106096403)) FROM vt0, t0, t1 LIMIT 278518465 OFFSET 524135048; -- 0ms;
SELECT DISTINCT (((t1.c51, 0.4382174130220603, vt0.c0)) NOT BETWEEN ((rt1.c1, t1.c51, t1.c1)) AND ((t1.c0, t1.c25, rt1.c0))) COLLATE BINARY FROM rt1;SELECT ALL ((((vt0.c0)IS(t1.c81)))*(((t1.c0) NOTNULL))), (~ ((+ (t1.c25)))), LAST_VALUE(((((CASE t1.c51  WHEN t1.c25 THEN t0.c0 ELSE t1.c51 END)OR(x'')))OR(t1.c0))) OVER () FROM t1, t0, vt0; -- 0ms;
SELECT ALL NULLIF(((rt1.c3) IS FALSE), (+ (rt1.c4))) FROM vt0, t1, rt1; -- 0ms;
SELECT DISTINCT CAST(t1.c96 AS BLOB) COLLATE RTRIM FROM t1; -- 0ms;
SELECT DISTINCT AVG(AVG(CASE rt1.c2  WHEN rt1.c4 THEN vt0.c0 WHEN rt1.c3 THEN t1.c51 WHEN t1.c0 THEN rt1.c2 ELSE t0.c0 END)), COALESCE(DISTINCT t1.c1, rt1.c1) COLLATE NOCASE, COUNT(*) FROM vt0, t0, t1, rt1 WHERE ((((((0x4d5b8b79)OR(232820426)))OR(NULL)) IN (CAST(x'' AS REAL))));SELECT DISTINCT CASE WHEN MIN(t0.c0) THEN x'' WHEN (vt0.c0 IN (rt1.c1, vt0.c0)) THEN 1726732867 COLLATE NOCASE WHEN ((t1.c25) ISNULL) THEN ((t1.c81) NOT BETWEEN (NULL) AND (t1.c0)) WHEN (((t0.c0, rt1.c3, t1.c81)) NOT BETWEEN ((t1.c51, rt1.c3, rt1.c2)) AND ((t1.c96, t1.c96, t1.c1))) THEN ((((0.20438992451695615)AND(rt1.c3)))OR(vt0.c0)) WHEN t1.c1 THEN CAST(t1.c51 AS NUMERIC) ELSE CASE WHEN '-108021905' THEN t1.c25 END END FROM vt0, t0, t1, rt1 LIMIT -1065896475; -- 0ms;
SELECT ALL ((((rt1.c2)>>(t1.c0)))<(rt1.c1 COLLATE NOCASE)), (((rt1.c1 IN ()))OR(((t1.c25)+(t1.c1)))), (((t1.c81 IN ())) IS TRUE) FROM vt0, t0, rt1, t1 WHERE (CAST(x'' AS REAL)); -- 0ms;
SELECT DISTINCT (((rt1.c2 COLLATE RTRIM))>=((((t1.c0) NOT BETWEEN (t1.c51) AND (t1.c25))))) FROM rt1, vt0 WHERE ((((((0.7708592333436042)OR(x'')))OR(0X5c448458)) IN (((NULL)IS('MD')))));SELECT ALL ((x'' IN (t1.c81)) IN ()), vt0.c0, ((0.04861799242483411)||(rt1.c3)) COLLATE NOCASE FROM rt1, t0, vt0, t1 ORDER BY CAST(rt1.c4 AS REAL)  NULLS FIRST; -- 0ms;
SELECT CAST(((t1.c51)GLOB(t1.c25)) AS TEXT) FROM t1, t0, vt0, rt1 WHERE ((((((x'c37a'))<=((1695189342)))) NOT NULL)); -- 0ms;
SELECT DISTINCT (~ (NULL)) FROM t1, vt0, t0; -- 0ms;
SELECT NTH_VALUE(0xffffffff84e1271d, vt0.c0) OVER () FROM t0, vt0 WHERE (((((((0.20996154429622882)OR(x'')))AND('-315364657'))) NOTNULL)); -- 0ms;
SELECT ALL rt1.c1, ((CAST(vt0.c0 AS TEXT)) BETWEEN (((t1.c51)+(rt1.c1))) AND (CASE WHEN t1.c96 THEN rt1.c2 ELSE NULL END)), ((SUM(t1.c25))||(((NULL) IS FALSE))) FROM rt1, t0;SELECT DISTINCT ((((t1.c25)+(vt0.c0)))<(((t1.c51) NOTNULL))) FROM t0, vt0, t1, rt1 WHERE (CASE WHEN ('i/?WP' IN ()) THEN CASE WHEN 0xfffffffffa96efb8 THEN NULL WHEN 0.9474800714105177 THEN 0X7432b7a0 WHEN x'8580' THEN '2,Yh-' ELSE 0.24420680926947014 END END) GROUP BY CASE (NOT (t1.c96))  WHEN rt1.c3 THEN 0.25623684294894944 END HAVING ((CHANGES())-((~ (t1.c81)))); -- 0ms;
SELECT ALL ((((((((t1.c96)OR(t1.c0)))AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c2)) COLLATE BINARY FROM t0, t1, rt1, vt0 WHERE (CASE WHEN ((NULL)GLOB(0Xffffffff93ff7b6f)) THEN CAST('' AS TEXT) WHEN '1989084790' THEN STRFTIME(NULL, NULL, NULL) WHEN CAST('' AS TEXT) THEN CAST(4.30970761E8 AS REAL) WHEN CASE 0.5271568354232423  WHEN x'a20c' THEN '1455973213' WHEN NULL THEN NULL WHEN NULL THEN x'' END THEN ((NULL)>(243951056)) WHEN ((NULL)>(NULL)) THEN IFNULL(0.04697870573163199, 0xffffffffe0573ac6) END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) BETWEEN (t1.c1) AND (t1.c1))) OVER (), t1.c51, SUM(CAST(vt0.c0 AS REAL)) FROM t1, rt1, vt0, t0 WHERE (CAST(((((((((x'2944')AND('856274388')))AND(x'')))AND(NULL)))AND('T1')) AS TEXT)) LIMIT 308800580 UNION ALL SELECT ALL CAST(((rt1.c4) IS TRUE) AS BLOB), t1.c81, CASE CAST(t1.c1 AS INTEGER)  WHEN (((-1557520402, t1.c51, rt1.c2)) NOT BETWEEN ((t1.c25, t1.c1, t1.c0)) AND ((vt0.c0, t1.c1, t1.c96))) THEN 0.9053426852810758 ELSE (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((t1.c51))) END FROM t1, vt0, rt1, t0;SELECT DISTINCT (~ (((t0.c0)IS NOT(t1.c25)))) FROM t1, rt1, t0, vt0; -- 0ms;
SELECT (((rt1.c1)) BETWEEN ((((t1.c1)*(t1.c1)))) AND ((((rt1.c0)=(rt1.c2))))), ((vt0.c0) NOT BETWEEN ('215523747') AND (((t1.c25) NOT BETWEEN (rt1.c1) AND (t1.c51)))), (('-1043943713')>=((~ (rt1.c0)))) FROM rt1, vt0 WHERE (LIKELIHOOD(DISTINCT ((x'6563')==(0x6248d9b4)), 0.8622274573843968)) GROUP BY '';SELECT DISTINCT '-51189121', ((((NULL)OR(CASE t1.c51  WHEN t1.c81 THEN rt1.c3 END)))AND(((rt1.c3)=(vt0.c0)))), CASE WHEN rt1.c4 THEN CAST(t1.c51 AS TEXT) WHEN LIKELY(rt1.c0) THEN CASE WHEN rt1.c1 THEN rt1.c3 WHEN t1.c51 THEN rt1.c0 WHEN vt0.c0 THEN t1.c0 ELSE rt1.c3 END WHEN ((rt1.c4) BETWEEN (t1.c96) AND (t1.c0)) THEN (t0.c0 IN ()) ELSE CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE rt1.c2 END END FROM t1 WHERE (((CASE WHEN 0.41661562133235286 THEN 0.8132607442945301 ELSE NULL END)<<(x'7a02')));SELECT TOTAL(((t1.c25)-(rt1.c1))), (t1.c51 IN ()) COLLATE NOCASE, LAST_VALUE(CASE WHEN t1.c96 THEN '2027043568' WHEN '}OY' THEN t1.c96 WHEN t1.c81 THEN t0.c0 END COLLATE RTRIM) OVER () FROM vt0, t1, t0 ORDER BY ((0Xeb77ea1 COLLATE BINARY) NOTNULL) DESC  NULLS LAST;SELECT DISTINCT CASE WHEN (NOT (vt0.c0)) THEN t1.c51 WHEN (((t1.c51))!=((t1.c51))) THEN (((rt1.c4, vt0.c0, t0.c0))=((rt1.c3, rt1.c4, t1.c81))) WHEN UNLIKELY(t0.c0) THEN ((t1.c81) BETWEEN (t1.c1) AND (t1.c1)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4)) END FROM rt1, vt0, t1, t0; -- 0ms;
SELECT DISTINCT AVG(CAST(t1.c0 AS INTEGER)) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS), (((CHANGES()))>(((('0.8161601267258531')>=(rt1.c0))))), CASE ((t1.c25) BETWEEN (rt1.c3) AND (rt1.c4))  WHEN ((((-1.065911523E9)OR(t1.c0)))AND(t1.c81)) THEN ((0.8397628730185349)IS NOT(t1.c96)) WHEN '' THEN LIKELIHOOD(DISTINCT rt1.c4, 0.03908119945011679) WHEN (((t1.c0, 0.20517015021152352, t1.c81)) NOT BETWEEN ((rt1.c4, t1.c96, t1.c0)) AND ((t1.c81, t1.c1, rt1.c1))) THEN (t1.c1 IN ()) ELSE CASE WHEN vt0.c0 THEN t0.c0 WHEN rt1.c0 THEN '672231038' WHEN rt1.c1 THEN rt1.c2 END END FROM vt0;SELECT DISTINCT CAST((((vt0.c0, 1.695189342E9, rt1.c1))<>((t1.c96, t1.c51, t1.c1))) AS TEXT), ((json_array_length(t0.c0)) BETWEEN (CASE WHEN t1.c0 THEN rt1.c3 END) AND (COALESCE(DISTINCT t1.c0, t1.c81))), CAST(((((((((t1.c25)OR(t1.c1)))AND(t0.c0)))AND(t1.c96)))AND(rt1.c3)) AS TEXT) FROM vt0, t1 WHERE (((CAST('1297845113' AS NUMERIC))LIKE(((((((((-1.072083584E9)AND('')))AND(0.23385850393041252)))OR('-940103231')))OR('~L')))));SELECT ALL GROUP_CONCAT((t1.c25 IN (rt1.c3))) OVER (), (- (((t1.c81)<(NULL)))), 1.443016994E9 FROM t1 WHERE ((((+ ('0.6247016082342038')))>=(0.546519656135311))) ORDER BY ((((((((((rt1.c4) BETWEEN (t1.c1) AND (t0.c0)))AND(COALESCE(t1.c81, t1.c96))))OR(((rt1.c4) IS TRUE))))AND(((((((((rt1.c4)AND('-765710286')))AND(vt0.c0)))AND(t1.c81)))AND(t1.c25)))))AND(vt0.c0)) ASC  NULLS LAST;SELECT DISTINCT (NOT (MAX(t1.c51))) FROM rt1 WHERE ((((((('-1208964141')AND(x'')))OR(NULL)))>>('')));SELECT ((((t1.c81) BETWEEN (rt1.c3) AND (t1.c25)))*(LIKELY(rt1.c0))) FROM t0, rt1, vt0, t1 ORDER BY ((((rt1.c0)>(rt1.c3)))<(((t1.c0)IS NOT(t1.c1)))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (- (((t1.c51) NOT BETWEEN (rt1.c1) AND (t1.c51)))) FROM t0, rt1;SELECT ALL ((CAST(x'' AS INTEGER)) NOT NULL), MAX(-5428270) COLLATE BINARY, GROUP_CONCAT((((t1.c81)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))) FROM rt1, t1, t0, vt0 WHERE (((((((2.143955592E9, 0.11238699742506952, x'04f0'))=((NULL, 'H~/J8', NULL))), (('') BETWEEN ('*36{') AND ('')), ((NULL) NOT NULL), 'LUgm', (((0Xffffffffdcb3e6ae)) NOT BETWEEN (('')) AND (('B?')))))==((CAST(NULL AS BLOB), x'' COLLATE NOCASE, ((NULL)&(NULL)), ((NULL)+(0.9467139741763474)), (- ('266027589')))))); -- 0ms;
SELECT DISTINCT CAST(NULLIF(rt1.c0, t0.c0) AS REAL) FROM t1;SELECT DISTINCT ((((rt1.c3)>>(t1.c1)))-((t1.c25 IN (t1.c81)))) FROM t1 INDEXED BY i21, vt0, rt1;SELECT DISTINCT ((t1.c96) NOT BETWEEN ((+ (x'cdc4'))) AND (((t1.c51)>=(t1.c81)))), (~ ((t1.c25 IN ()))), rt1.c4 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM, 0.4265359637875321, ((((t0.c0)-(rt1.c3)))|(COUNT(t1.c25))) FROM rt1 WHERE (((NULL)-(((x'c503')<(0.6352443293045602)))));SELECT CAST(NULL AS BLOB), ((CAST(t1.c25 AS INTEGER))IS(t1.c25 COLLATE BINARY)), COUNT((t1.c96 IN ())) FROM rt1, t1, vt0, t0 WHERE ((((2121814166)) NOT BETWEEN (((('72451176')>=(NULL)))) AND ((((NULL)IS NOT(0.514810443091852)))))) UNION ALL SELECT ALL ((MAX(rt1.c1))||(((t0.c0) BETWEEN (t0.c0) AND (rt1.c3)))), CAST('tf#' AS INTEGER), AVG(((rt1.c1) NOT BETWEEN (t1.c96) AND (rt1.c3))) OVER () FROM t1, rt1;SELECT ALL (((((((t0.c0))>=((t1.c25))))OR(((t1.c25) NOT NULL))))AND(((t1.c25) BETWEEN (t1.c1) AND (t1.c96)))) FROM t0, rt1, vt0 WHERE ((((((('-940103231') NOT NULL))AND(CAST(NULL AS NUMERIC))))OR((~ (NULL)))));SELECT DISTINCT ((CASE t1.c0  WHEN t1.c0 THEN t1.c81 END) NOT NULL), ((rt1.c0)<(rt1.c1)) COLLATE NOCASE, ((rt1.c4) NOT BETWEEN (((rt1.c1)<>(vt0.c0))) AND (((NULL) NOT NULL))) FROM t0, vt0, rt1 WHERE (((CASE ''  WHEN '-1465918855' THEN x'' ELSE 'CA1辡Ht*z' END)>(((('1372853063'))==(('-492301007'))))));SELECT DISTINCT t1.c1 FROM vt0, t0, rt1 WHERE (-1359869164);SELECT ALL CAST(((((((((t0.c0)OR(t1.c1)))OR(rt1.c4)))AND(vt0.c0)))AND(x'7da1')) AS TEXT), ((((((((((((((t1.c96) NOTNULL))AND(((t1.c1)-(rt1.c2)))))AND(t1.c51 COLLATE BINARY)))OR(((rt1.c2) IS FALSE))))AND(0.2132641945300192)))AND(((x'798554c2')%(rt1.c0)))))OR((rt1.c4 IN ()))), ((CASE rt1.c4  WHEN t0.c0 THEN t1.c0 WHEN rt1.c0 THEN t1.c96 WHEN t1.c1 THEN rt1.c2 END) NOT NULL) FROM vt0, t0, t1 WHERE (CAST('-1871539125' AS INTEGER));SELECT DISTINCT TOTAL(((t1.c0)>=('-2090186800'))) OVER () FROM t0 INDEXED BY i21, t1 WHERE (((CASE WHEN x'' THEN x'' END) BETWEEN ((((x'87ac')) NOT BETWEEN ((0.9838384602268966)) AND (('-940103231')))) AND ((((0.3849005842242833, 0.05745019991114564, '-1312883749'))<=(('PJdWS퓝', NULL, 0.4718529388575624))))));SELECT MIN(t1.c96) FROM t0, rt1, t1; -- 0ms;
SELECT TRIM(((NULL)IS NOT(t1.c81))) FROM rt1, t0, t1, vt0 GROUP BY CAST((vt0.c0 IN ()) AS BLOB), CASE WHEN ((((rt1.c4)OR(t1.c0)))AND(t0.c0)) THEN ((rt1.c2)+(rt1.c2)) END, NULL; -- 0ms;
SELECT DISTINCT NTILE((((((rt1.c4) IS FALSE), ((rt1.c4)<>(rt1.c4)), (rt1.c0 IN ())))<=((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c4 END, CASE WHEN rt1.c4 THEN rt1.c2 ELSE vt0.c0 END, ((('-1799171918')) BETWEEN ((x'')) AND ((rt1.c4))))))) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND 0.20553771824054268 FOLLOWING EXCLUDE TIES), (((NOT (rt1.c3))) ISNULL), TOTAL((('')|(t1.c1))) OVER () FROM rt1, vt0;SELECT ALL CAST(((((t1.c81)AND(t1.c1)))AND(t0.c0)) AS BLOB) FROM t1, vt0, t0; -- 1ms;
SELECT ALL ((((rt1.c2)<>(t0.c0))) BETWEEN (NULLIF(t1.c51, rt1.c4)) AND (((0.5859785576559141)+(t1.c51)))) FROM vt0, t1;SELECT DISTINCT vt0.c0, ((((rt1.c1) NOT BETWEEN (t1.c25) AND (x''))) NOT BETWEEN (t1.c51 COLLATE BINARY) AND (CASE t1.c51  WHEN t0.c0 THEN rt1.c0 END)), ((t1.c51)=(((x'')>>(rt1.c1)))) FROM vt0, rt1;SELECT DISTINCT ((((((rt1.c2) ISNULL))AND(((rt1.c1) NOT BETWEEN ('诋/[㩭ql#|S') AND (t0.c0)))))AND((((rt1.c1)) NOT BETWEEN ((t1.c96)) AND ((t1.c25))))), TRIM(DISTINCT ((((((((t1.c0)AND(t1.c51)))OR(rt1.c0)))OR(rt1.c4)))OR(NULL))), '', (((((((t0.c0))<=((t1.c51))))OR(((rt1.c4)IS NOT(rt1.c3)))))AND(NULL COLLATE BINARY)), TOTAL((((t0.c0, t1.c25, t1.c0))<=((t1.c25, t1.c25, '0.4247001602865045')))) OVER () FROM rt1, t1, t0, vt0 WHERE ((((((((('1786859712')AND(NULL)))OR('-1141394774')))AND(NULLIF('-1748176955', 0.5884432967582519))))OR((- ('-1'))))); -- 0ms;
SELECT DISTINCT ((rt1.c3 COLLATE NOCASE)IS NOT(((t1.c96) NOT BETWEEN (t1.c96) AND (rt1.c3)))), CASE MIN(rt1.c2)  WHEN ((((((((rt1.c0)AND(t1.c81)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c1)) THEN ((NULL) BETWEEN (t1.c81) AND (rt1.c0)) WHEN (NULL IN ()) THEN ((((0X19b01789)AND(rt1.c0)))OR(t1.c51)) WHEN (NOT (t1.c25)) THEN ((((((((t1.c81)AND(t1.c25)))OR(rt1.c3)))AND(t1.c1)))OR(0.0)) WHEN (rt1.c4 IN (rt1.c3, rt1.c2)) THEN ((('1046714113')) BETWEEN ((t1.c25)) AND ((''))) WHEN CASE WHEN t1.c81 THEN t1.c96 WHEN t1.c25 THEN -1.136401309E9 WHEN rt1.c3 THEN rt1.c4 WHEN vt0.c0 THEN t1.c96 WHEN x'' THEN rt1.c1 END THEN ((t1.c1) BETWEEN (t1.c81) AND (t1.c25)) ELSE ((((((((vt0.c0)OR(rt1.c0)))AND(0Xffffffffd108e872)))OR(t1.c96)))OR(vt0.c0)) END, t1.c25 FROM vt0, t1, t0 WHERE ((((((((((x'69b8' IN ()))AND(((-1072083584) IS FALSE))))AND((((('-1682984993')OR(0.8357389515924973)))AND(0xffffffffe01ef756)))))AND(CAST('' AS BLOB))))OR((((0.4534532526491887, NULL, x'')) BETWEEN ((NULL, '-1136401309', 0.2804171604174799)) AND ((x'73e6', 'F쮈Ove', NULL))))));SELECT DISTINCT MAX(((((t1.c0)OR(t1.c0)))AND(t1.c1))) FROM t0, t1, rt1, vt0 ORDER BY t1.c25 COLLATE RTRIM, ((((((((CAST(0Xffffffff99b3276b AS NUMERIC))OR(((t0.c0) IS TRUE))))OR(rt1.c4)))AND('-1498057596')))AND((rt1.c0 IN ()))) ASC;SELECT DISTINCT ((t1.c81)||(t1.c81 COLLATE BINARY)) FROM t0, t1, rt1; -- 0ms;
SELECT '-79790467', GLOB((~ (rt1.c3)), (+ (rt1.c3))), ((rt1.c4) IS FALSE) FROM vt0 WHERE (CASE WHEN ((((0.8472125270183877)OR('-1976393493')))OR(NULL)) THEN LOWER(DISTINCT x'') ELSE CASE 0.7437392020423996  WHEN x'' THEN -774104773 WHEN '1857718396' THEN 0x20fbef59 WHEN 0.3693458288127356 THEN '-1010213217' ELSE x'91d1' END END);SELECT ((((rt1.c1)OR((rt1.c2 IN (rt1.c0)))))AND(((t1.c96) NOT BETWEEN (t1.c0) AND (t0.c0)))), (((rt1.c0 IN ())) ISNULL), (((t1.c96)) NOT BETWEEN (((- (t1.c96)))) AND ((CASE WHEN rt1.c1 THEN t1.c25 WHEN t1.c81 THEN t1.c1 WHEN t1.c96 THEN t1.c0 ELSE rt1.c3 END))) FROM vt0, t1, t0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN UNLIKELY(DISTINCT rt1.c0) ELSE ((vt0.c0)GLOB(t1.c25)) END, t1.c81, ((SQLITE_SOURCE_ID()) NOT BETWEEN ((t1.c51 IN ())) AND (NULLIF(t0.c0, '䧅xT '))) FROM rt1, vt0, t1 WHERE ((((('217961477')%(NULL)))OR(((-746789983)%(0.5499859988631846)))));SELECT DISTINCT CAST(CASE t1.c51  WHEN rt1.c4 THEN rt1.c3 WHEN t0.c0 THEN rt1.c0 WHEN t1.c51 THEN t0.c0 END AS REAL) FROM vt0, rt1, t0 ORDER BY ((((NULL)<=(t1.c1))) BETWEEN (((t1.c1) NOT BETWEEN (t1.c96) AND (t1.c0))) AND (CAST(rt1.c3 AS REAL))) ASC  NULLS FIRST;SELECT DISTINCT ((((((t1.c51, 0.055421738574028656, t1.c96)) NOT BETWEEN ((rt1.c0, t0.c0, vt0.c0)) AND ((t1.c25, rt1.c2, t0.c0)))))>=((((t1.c0)AND(t1.c51))))) FROM rt1, t0;SELECT DISTINCT t1.c1 FROM rt1, vt0, t1, t0; -- 0ms;
SELECT DISTINCT (((CAST(rt1.c3 AS TEXT)))!=((((rt1.c2)+(rt1.c3))))), CAST(((t1.c81)<(rt1.c0)) AS BLOB), CAST((((x'', t0.c0, rt1.c2)) NOT BETWEEN ((t0.c0, rt1.c1, t1.c51)) AND ((NULL, t1.c0, rt1.c3))) AS NUMERIC) FROM t1, t0, rt1, vt0 WHERE ((((((((((NULL)AND(0.6824114277923639)))OR(0.30159283429350925)))AND(x'')))OR('-1405389385')) IN ())); -- 1ms;
SELECT DISTINCT (- (rt1.c4)) COLLATE RTRIM, CASE rt1.c1 COLLATE RTRIM  WHEN (((t1.c81)) NOT BETWEEN ((rt1.c0)) AND ((t1.c1))) THEN ((t1.c0)>(rt1.c4)) END, TYPEOF(DISTINCT CAST(vt0.c0 AS NUMERIC)) FROM t0, t1 RIGHT OUTER JOIN rt1 ON (((vt0.c0))!=((rt1.c4))) COLLATE BINARY LEFT OUTER JOIN vt0 ON '0.9615943192036706';SELECT ALL ((+ (rt1.c3)) IN ()) FROM rt1, t1; -- 0ms;
SELECT ALL (NOT (t1.c81)) COLLATE BINARY FROM rt1, t1 WHERE ((((0Xffffffff8b6a4f51, -7.74104773E8, x'')) NOT BETWEEN (((((1452596291))!=((x'c3b5'))), ((0.4673818347702873) NOT BETWEEN (-351731304) AND (1.243577788E9)), (((x'')) BETWEEN ((0.43288764336004426)) AND ((0.31639317977254333))))) AND (((('1109838771') NOTNULL), ((NULL) NOT NULL), CASE '-801700757'  WHEN x'' THEN '2JXUퟮ' WHEN x'' THEN 0.7601807490903957 WHEN NULL THEN '' END)))); -- 0ms;
SELECT ALL ((vt0.c0)||(rt1.c4)) COLLATE BINARY FROM t0, rt1, vt0; -- 0ms;
SELECT DISTINCT ((t1.c96) NOT NULL), CAST(t0.c0 AS BLOB) COLLATE BINARY, (((x'' IN ())) NOT BETWEEN (((((t1.c1)OR(t1.c0)))AND(rt1.c4))) AND (SQLITE_VERSION())) FROM t0, t1, vt0 WHERE (((CAST('1263156231' AS TEXT)) NOT BETWEEN ((((((((('-384112485')OR(NULL)))OR(0xffffffffafb0b16d)))OR(0.5062657540410006)))AND(NULL))) AND (x'')));SELECT DISTINCT LEAD((NOT ((t0.c0 IN ()))), CASE WHEN CAST(t0.c0 AS NUMERIC) THEN ((((((((t0.c0)AND(NULL)))OR(t0.c0)))AND('c\nsl0*}')))AND(t0.c0)) ELSE TYPEOF(DISTINCT t0.c0) END, CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (0xffffffffab30b430)) THEN (t0.c0 IN ()) WHEN ((t0.c0)>>(t0.c0)) THEN '648986373' WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE 1211718605 END THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE '}' COLLATE RTRIM END) OVER () FROM t0 ORDER BY t1.c81 COLLATE NOCASE  NULLS LAST;SELECT DISTINCT PERCENT_RANK() OVER (), (((((t1.c96))>=((rt1.c3)))) NOT BETWEEN (((((t1.c96)AND(rt1.c0)))OR(rt1.c1))) AND (CASE t0.c0  WHEN t1.c0 THEN rt1.c4 ELSE t1.c0 END)), PERCENT_RANK() OVER () FROM vt0, t0, t1 WHERE (CAST(-75756474 AS REAL) COLLATE RTRIM);SELECT ALL CAST(rt1.c3 AS NUMERIC) FROM rt1; -- 0ms;
SELECT ((((((t1.c0)AND(t1.c1)))AND(rt1.c1))) BETWEEN (t1.c51 COLLATE NOCASE) AND (LIKELIHOOD('^T', 0.5353015489070273))) FROM t1, t0, rt1, vt0 WHERE (CASE WHEN CASE x''  WHEN NULL THEN 0.5258277617832086 ELSE 0.9045347814328556 END THEN (('[w){龿~') NOT BETWEEN ('诋//㩭ql#|S') AND (0.19182082899793962)) ELSE x'' END); -- 0ms;
SELECT ALL -1.072083584E9, ((((((((((rt1.c1)AND(t1.c96)))OR(rt1.c4)))AND('-244218826')))AND(t1.c51))) NOT NULL), COUNT(*) COLLATE NOCASE FROM rt1;SELECT ALL rt1.c2 FROM t0, vt0, t1 INDEXED BY i75 WHERE (((((2.027043568E9)AND(('0.03524515027585895' IN ()))))OR(CASE WHEN '279275996' THEN NULL WHEN NULL THEN NULL WHEN NULL THEN NULL ELSE '-1413344119' END)));SELECT ALL (((1156548267, PRINTF(t1.c25), (rt1.c1 IN (rt1.c3, t1.c81))))<((t1.c25, ((rt1.c0)/(rt1.c2)), ((((t1.c81)AND(rt1.c3)))AND(t1.c96))))), vt0.c0, (((rt1.c2)) NOT BETWEEN ((((rt1.c0) BETWEEN (NULL) AND (t1.c25)))) AND ((((((t0.c0)AND(t1.c51)))AND(vt0.c0))))) FROM vt0, rt1, t1, t0 WHERE ((((((('^', NULL, ''))<=((' akw', 1.046714113E9, x''))), (((x'5e4f9ed2'))>=((0.6441530600459656))), (~ (NULL))))!=((((x'f02f')%(0.8649061833551125)), CAST(NULL AS NUMERIC), ((x'babc')&('')))))); -- 0ms;
SELECT ALL ((CASE WHEN t1.c51 THEN rt1.c4 ELSE t1.c81 END)/(LIKELY(t0.c0))) FROM rt1, t0, vt0;SELECT ALL PERCENT_RANK() OVER () FROM vt0, t0, t1; -- 1ms;
SELECT ALL CASE CAST(t0.c0 AS REAL)  WHEN GROUP_CONCAT(rt1.c4) THEN (- (t1.c1)) WHEN GROUP_CONCAT('1321216720') THEN (- (t1.c0)) WHEN t1.c25 COLLATE NOCASE THEN 0.7651887642342736 END FROM vt0, t0 WHERE (x'') LIMIT -1524407176 OFFSET 2096633506;SELECT ALL SUBSTR((~ (rt1.c0)), CAST(t1.c1 AS BLOB)) FROM t1, vt0 WHERE ((+ ((NULL IN (x'')))));SELECT ALL (((t1.c25 IN ()))GLOB(((rt1.c0) BETWEEN (t0.c0) AND ('-1139398615')))), (NOT (((((t1.c0)AND(rt1.c1)))OR(rt1.c0)))), ((MIN(t1.c25))|(((t1.c96) NOT BETWEEN (t0.c0) AND (t1.c1)))) FROM vt0, rt1, t1;SELECT ALL ((COUNT(*)) NOT BETWEEN (((t1.c81)>>(rt1.c3))) AND ('2138495588')) FROM t1, rt1, t0 WHERE ('0.5062657540410006' COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((NOT (0Xffffffffeb88f7dd)))OR(-9.40103231E8)))AND((((t1.c96))<=((t0.c0))))), NULL, DATE(CASE WHEN t1.c51 THEN t1.c0 WHEN t0.c0 THEN t1.c81 WHEN rt1.c1 THEN rt1.c1 ELSE t1.c81 END, ((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t1.c51, PRINTF(t1.c81), ((rt1.c2)*(t1.c0))) FROM vt0, rt1 WHERE (((COALESCE('-1342936386', 2147387946)) IS FALSE)) LIMIT -637689063;SELECT DISTINCT CASE WHEN CASE WHEN x'' THEN NULL ELSE t1.c1 END THEN ((vt0.c0) NOT BETWEEN (t1.c25) AND (t1.c96)) END FROM rt1, vt0 WHERE ((((((((((('4Kf]*+')AND(x'3fae')))OR(x'')))OR('6f')))OR(x'a33e'))) ISNULL)) LIMIT -1995556176;SELECT CASE WHEN (- (NULL)) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (rt1.c1)) ELSE GROUP_CONCAT(t1.c25) END, CASE CASE WHEN t1.c1 THEN t1.c1 ELSE '' END  WHEN ((t1.c96) IS TRUE) THEN NULL WHEN TRIM(rt1.c0) THEN GROUP_CONCAT(rt1.c4) WHEN (~ (t1.c1)) THEN HEX(rt1.c1) END, ((NULL) NOTNULL) FROM t0, rt1, t1; -- 0ms;
SELECT MIN((rt1.c1 IN ())) FROM t1, rt1, vt0; -- 0ms;
SELECT ALL ((((TOTAL(t1.c0))AND(MIN(rt1.c3))))OR(MIN('', rt1.c0))), TRIM((~ (t1.c81)), TRIM(DISTINCT t1.c1, rt1.c3)), ((((((t1.c25)AND(t1.c1)))AND(rt1.c2)))LIKE(GROUP_CONCAT(t1.c1))) FROM t1 WHERE ('-1875938837');SELECT DISTINCT FIRST_VALUE(((((((((((((t0.c0 COLLATE BINARY)OR(NULL)))AND(((((t1.c25)AND(t1.c51)))AND(t1.c81)))))OR((t1.c81 IN ()))))AND(CASE rt1.c0  WHEN rt1.c2 THEN 0.4168142610608817 ELSE t1.c25 END)))OR((((rt1.c4)) BETWEEN ((rt1.c4)) AND (('1255428502'))))))AND(((t1.c81)*(t1.c25))))) OVER ( PARTITION BY (((+ (t0.c0))) NOT BETWEEN (SQLITE_VERSION()) AND ('H~/J8')), CAST((- (t1.c81)) AS REAL) ORDER BY ((((rt1.c1) BETWEEN (t1.c0) AND (rt1.c0)))>=(CAST(rt1.c3 AS INTEGER))) DESC  NULLS LAST ROWS BETWEEN 0.3823372183099679 PRECEDING AND rt1.c0 FOLLOWING EXCLUDE GROUP) FROM t1, rt1, t0, vt0; -- 0ms;
SELECT DISTINCT ((((rt1.c3) BETWEEN ('-1949143727') AND (vt0.c0))) IS FALSE) FROM vt0 WHERE (((CAST('766305359' AS TEXT))<=(((x'')OR('')))));SELECT DISTINCT ((('OP') NOT BETWEEN (vt0.c0) AND (t1.c51)) IN ()) FROM rt1, t0 LIMIT -1472641372; -- 0ms;
SELECT DISTINCT ((((rt1.c0)|(t1.c81)))/((t1.c1 IN ()))) FROM rt1, t0 EXCEPT SELECT ALL (((t1.c1)>=(t1.c25)) IN ()) FROM t0, t1, vt0, rt1 WHERE ((((NULL IN ('\_䗖', NULL))) ISNULL)) UNION SELECT DISTINCT CASE ((((rt1.c0)OR(x'4c90')))AND(t1.c96))  WHEN COUNT(0.7359904669305488) THEN ((0.22939643323040038)<(t1.c81)) ELSE x'993e' END FROM t1;SELECT DISTINCT TOTAL((- (rt1.c1))) FILTER(WHERE (((~ (rt1.c0)))+((~ (t1.c81))))) OVER ( ORDER BY rt1.c3, CASE WHEN ((672231038) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN (~ (rt1.c2)) ELSE ('' IN ()) END) FROM t0, rt1, vt0 WHERE ((((0.6999422826211201) ISNULL) IN ()));SELECT ((((rt1.c0) IS TRUE)) NOT BETWEEN (((t1.c1) IS TRUE)) AND (((rt1.c0) IS TRUE))), MIN(((rt1.c0)IS(t1.c81)) COLLATE BINARY), ((CASE WHEN vt0.c0 THEN t0.c0 END) BETWEEN ((('-361603490') NOT BETWEEN (vt0.c0) AND (rt1.c0))) AND (CAST(vt0.c0 AS NUMERIC))) FROM rt1, vt0, t1 WHERE ((((NOT (0.9114068474675202))) IS FALSE));SELECT DISTINCT '#hOFf', 'K|a', (((((t1.c96, rt1.c2, rt1.c0))>=((rt1.c1, t0.c0, t1.c1))))<=(((rt1.c0)GLOB(t1.c51)))) FROM rt1 WHERE (LOWER(DISTINCT ((0.17013066639573382) NOT BETWEEN (0x3bcca18e) AND ('-1208964141')))) LIMIT 1297845113;SELECT DISTINCT ((((((((((rt1.c4)OR(rt1.c0)))OR(t1.c0)))AND(t1.c25)))OR(t1.c1))) NOT BETWEEN (CASE WHEN rt1.c4 THEN rt1.c2 WHEN t1.c96 THEN rt1.c4 WHEN t1.c96 THEN t0.c0 END) AND (t1.c0)) FROM rt1, vt0, t1 WHERE (CASE (((0.8692484819094239, x'd8a4', x'b976')) BETWEEN ((x'1f73afcd', 0.3266831391442875, -865479560)) AND (('0.9964237775482401', x'', NULL)))  WHEN 0.49198974475757895 COLLATE BINARY THEN ((x'3246')!=(NULL)) WHEN ((NULL) IS TRUE) THEN (((''))!=((-33563750))) WHEN ((-746707120) NOT BETWEEN (NULL) AND (x'')) THEN NULL ELSE COALESCE(x'', NULL) END);SELECT ALL CAST(((rt1.c0) IS TRUE) AS TEXT), (((t0.c0 IN ())) IS TRUE), (((rt1.c0 COLLATE NOCASE))==((((t1.c0) IS TRUE)))) FROM rt1 WHERE ((- (NULL)) COLLATE BINARY);SELECT DISTINCT CASE CAST(vt0.c0 AS REAL)  WHEN rt1.c1 THEN (((t1.c0))<>((t0.c0))) END FROM rt1, t0;SELECT (((t0.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((((t1.c96) ISNULL)))) FROM rt1, t0, vt0, t1 WHERE (CASE WHEN 'CA1辡Ht*z' COLLATE RTRIM THEN (- (NULL)) WHEN CAST(NULL AS REAL) THEN ((NULL)>(x'd727')) WHEN (('-1236719482')+(x'')) THEN ('' IN (x'c1d3')) WHEN ((x'b86d')GLOB(NULL)) THEN ((((0X3e39a894)OR(0.0014377530263897098)))OR(0.4427152419391155)) WHEN LIKELIHOOD(-1.043943713E9, 0.9676779332782559) THEN (('1001541194') BETWEEN (0.11813624864059913) AND (1208950061)) END); -- 0ms;
SELECT COUNT(*) OVER (), NTH_VALUE((- (vt0.c0)) COLLATE NOCASE, (+ (DATE(vt0.c0, vt0.c0, vt0.c0)))) OVER (), (((t1.c0 IN (rt1.c0))) NOT BETWEEN (((rt1.c3)==(NULL))) AND ((((t1.c96)) BETWEEN ((rt1.c4)) AND ((vt0.c0))))) FROM vt0 LIMIT -1061248509;SELECT DISTINCT ((LIKELY(t0.c0))&(((rt1.c4)/(t1.c1)))) FROM t1 ORDER BY ((t1.c81)%(CASE t1.c96  WHEN t0.c0 THEN rt1.c1 WHEN '2019962088' THEN rt1.c1 WHEN 1864193016 THEN t1.c81 ELSE vt0.c0 END)) DESC;SELECT ALL t1.c1, ((((((t1.c1) NOTNULL))AND(((rt1.c1)AND(NULL)))))OR(((rt1.c4)>>(vt0.c0)))), (((t1.c96, vt0.c0, vt0.c0)) BETWEEN (((t1.c25 IN ()), rt1.c2 COLLATE RTRIM, CASE '-221245729'  WHEN t1.c25 THEN t0.c0 END)) AND ((((((rt1.c1)AND(t1.c81)))AND(rt1.c0)), CASE WHEN t1.c1 THEN rt1.c2 ELSE rt1.c4 END, SUM(t1.c0)))) FROM t1, vt0, t0, rt1; -- 4ms;
SELECT (((rt1.c1 IN (rt1.c4)))-((((rt1.c3, t1.c81, t1.c51))<>((t1.c0, t1.c1, t1.c1))))) FROM t1, vt0;SELECT DISTINCT (((t1.c0 IN (t1.c96))) NOT BETWEEN (CASE rt1.c2  WHEN t1.c0 THEN t0.c0 ELSE 0xffffffffb7ba88fd END) AND (t1.c0 COLLATE BINARY)), CAST((- (t1.c0)) AS REAL), '1670026853' FROM rt1, t1, vt0, t0; -- 1ms;
SELECT ALL (((rt1.c1 IN ()))>>(rt1.c2 COLLATE NOCASE)) FROM rt1, vt0, t1 WHERE ((((CAST(NULL AS BLOB)))<(((+ (0x7d6f7013)))))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0, rt1, t0 LIMIT 2014240372; -- 0ms;
SELECT DISTINCT LEAD(CAST(t1.c0 AS REAL) COLLATE RTRIM, ((((NULL)OR((((-1393268221)) BETWEEN ((t1.c25)) AND ((t1.c81))))))AND(((vt0.c0) NOT NULL))), ((((t1.c96)OR(x''))) IS TRUE)) OVER ( RANGE  CURRENT ROW), LEAD(MIN('''u-mꨍbp_r', (vt0.c0 IN ()), ((t1.c51) ISNULL), CASE WHEN -313749892 THEN t0.c0 END), CASE json_array(t1.c96, rt1.c4)  WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)) THEN (rt1.c0 IN (rt1.c3, t1.c51)) END, (- ((((t1.c1)) BETWEEN (('1768206833')) AND (('635644143')))))) OVER (), CAST((t1.c81 IN ()) AS INTEGER) FROM t1, vt0, t0 INDEXED BY i75, rt1 ORDER BY ((((((t1.c96)LIKE(t1.c1)))OR(((rt1.c4)<(rt1.c3)))))OR((t0.c0 IN (t1.c51)))) DESC  NULLS FIRST;SELECT DISTINCT ((((t1.c1)*(rt1.c4))) NOT NULL) FROM t0, rt1, t1, vt0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ROUND(rt1.c4, x'f109'), CAST(t1.c96 AS INTEGER), '686040373', ((((((((((((NULL)OR(rt1.c3)))AND(rt1.c2)))OR(0.870615852043103)))AND(rt1.c4)))AND(t1.c51)))OR(t1.c0)), ((rt1.c2)IS NOT(rt1.c4)), (((NULL)) NOT BETWEEN ((rt1.c3)) AND ((t1.c51)))) FROM t1, t0, rt1, vt0; -- 0ms;
SELECT DISTINCT TRIM((NOT (vt0.c0)), ((rt1.c3)|(rt1.c2))), CASE rt1.c1  WHEN t1.c51 THEN t1.c81 ELSE t1.c0 END COLLATE BINARY, NTILE(LTRIM(((0X7cc0558f)|(t0.c0)))) OVER () FROM t0 WHERE (CAST('z''&  ڼ' COLLATE RTRIM AS REAL));SELECT ALL rt1.c2 FROM t0, vt0, t1 WHERE (((1.695189342E9 COLLATE RTRIM) BETWEEN ((((((((('v!')OR('930966748')))AND('0.6423716081105072')))OR(NULL)))AND('-1414563104'))) AND (((0Xffffffffa6103581)||(x'2cf2')))));SELECT DISTINCT CASE ((t1.c25)GLOB(t1.c25))  WHEN (rt1.c2 IN ()) THEN rt1.c0 COLLATE NOCASE WHEN SUM(t1.c51) THEN ((rt1.c0) NOTNULL) WHEN ('LI!Cs% ' IN (t1.c25)) THEN (+ (t0.c0)) ELSE COUNT(*) END FROM vt0, rt1, t1 WHERE (((x'' COLLATE RTRIM)!=((((NULL)) BETWEEN ((0X5397f2fe)) AND ((''))))));SELECT DISTINCT CAST('᫺c' COLLATE BINARY AS BLOB), (- (NULL)), (((rt1.c0 IN (t1.c51, t1.c51)))/((t1.c51 IN ()))) FROM rt1, vt0, t1, t0 WHERE (-1.508887167E9); -- 1ms;
SELECT ALL (NOT ((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((t1.c25))))), ((MAX(rt1.c2)) NOT BETWEEN ((~ (t1.c1))) AND (MIN(rt1.c3))), ((CASE t1.c96  WHEN rt1.c0 THEN rt1.c0 ELSE t1.c51 END)!=(((rt1.c1)||(t1.c0)))) FROM t1, rt1, vt0 LIMIT -1697504306 OFFSET 617479529; -- 0ms;
SELECT ALL ((((rt1.c3)>(t1.c81))) NOT BETWEEN ((t1.c1 IN ())) AND (TOTAL(rt1.c3))), TYPEOF(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4))), vt0.c0 FROM rt1, vt0, t0 WHERE (0xffffffff83df1900);SELECT ALL LOWER(((((NULL)AND(t1.c96)))OR(rt1.c2))), CASE ((t1.c96)/(rt1.c3))  WHEN ((((rt1.c3)AND(rt1.c0)))OR(t1.c1)) THEN ((((((((t1.c96)AND(t1.c25)))AND(rt1.c2)))OR(rt1.c2)))AND('1409710339')) WHEN '' THEN ((t1.c25)AND(t1.c96)) WHEN (rt1.c0 IN ()) THEN ((x'')OR(rt1.c0)) END, rt1.c4 FROM t1, vt0, t0 WHERE ((~ (((('0.5651055689304524', NULL, x'a2dd')) BETWEEN ((x'c388', -5.34841514E8, '')) AND ((NULL, '-361603490', x'af6d'))))));SELECT ALL CAST(t1.c51 COLLATE BINARY AS BLOB) FROM rt1 CROSS JOIN t0 ON ((((((((((t1.c51)OR(rt1.c3)))OR(t1.c25)))AND(t1.c0)))OR(rt1.c1))) IS FALSE) FULL OUTER JOIN vt0 ON RTRIM(0.55837334721905) WHERE ((('(' COLLATE NOCASE) NOT NULL)) ORDER BY vt0.c0 DESC  NULLS FIRST;SELECT ALL CAST(((rt1.c1)|(rt1.c0)) AS REAL) FROM t1 INDEXED BY i8, vt0, rt1 WHERE (((((0x4d59a81b)GLOB(x'1d43')))&(CHAR(x'a0de', x'', '-865479560')))); -- 0ms;
SELECT DISTINCT MAX(LTRIM(rt1.c4, t1.c81)), NULLIF(DISTINCT ((rt1.c1)&(rt1.c3)), TRIM(t1.c1, x'279f')), MIN(((rt1.c2)IS NOT(rt1.c0))) FROM vt0, rt1 WHERE (CAST(x'' AS BLOB) COLLATE NOCASE);SELECT DISTINCT TOTAL(CAST(t1.c96 AS BLOB)) OVER () FROM t1, vt0 WHERE ((- ((x'' IN ())))); -- 0ms;
SELECT ALL (- (t1.c51 COLLATE RTRIM)) FROM vt0, t0, t1; -- 1ms;
SELECT (((('')<(rt1.c3)))OR(((t1.c25) BETWEEN (t0.c0) AND ('-463068029')))), (((((((((t1.c1)AND(t1.c0)))OR(rt1.c4)))AND(rt1.c1)))OR(t1.c1)) IN (CASE WHEN rt1.c4 THEN 0.7445664178423615 WHEN x'' THEN t1.c51 WHEN t1.c0 THEN rt1.c1 WHEN t0.c0 THEN t1.c1 WHEN NULL THEN vt0.c0 ELSE t1.c25 END)), (((t1.c51)&(vt0.c0)) IN ()) FROM t1 WHERE ((((((((''))<=((1297845113))))AND((((NULL)) NOT BETWEEN ((NULL)) AND ((0x563e2337))))))AND(0xffffffffa216931c COLLATE NOCASE)));SELECT DISTINCT (((((t1.c0 IN (NULL)))AND((rt1.c1 IN ()))))AND(((((((((rt1.c1)AND(t1.c51)))OR(rt1.c2)))OR(t1.c25)))AND(rt1.c0)))), ((MAX(t1.c0))<<(rt1.c0)), CUME_DIST() OVER () FROM t0 WHERE ((((((- ('\nM[F)')))OR(((x'b132')%(320670732)))))OR('')));SELECT CASE WHEN (((t1.c25, '-315364657', t1.c25, vt0.c0, t1.c1))>=((t1.c96, t1.c0, t1.c51, rt1.c1, t1.c1))) THEN NULLIF(t1.c1, t1.c25) END, 4.52643753E8 COLLATE NOCASE, SUM('rX') OVER () FROM t1, vt0, rt1 WHERE ((((('-738071064') IS TRUE)) IS FALSE)); -- 0ms;
SELECT ALL ((rt1.c3) NOT BETWEEN (((t0.c0) ISNULL)) AND (json_valid(t1.c25))), rt1.c3, CASE ((t1.c25) BETWEEN (t1.c51) AND (t1.c81))  WHEN t1.c81 COLLATE BINARY THEN ((0X563e2337) BETWEEN (t1.c81) AND (rt1.c2)) ELSE (t1.c96 IN (t1.c51)) END FROM t0, vt0 LIMIT 4110804;SELECT ALL ((((((t1.c0) IS TRUE))AND(t1.c96 COLLATE NOCASE)))AND(CAST(t1.c81 AS NUMERIC))) FROM t1, t0 GROUP BY (- (((rt1.c3)<(0X466629c0))));SELECT rt1.c0 FROM t1, t0, rt1 ORDER BY CASE WHEN rt1.c3 THEN t1.c81 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY DESC  NULLS FIRST LIMIT -1928508217;SELECT (+ (rt1.c2)), ((((t1.c81) BETWEEN (rt1.c3) AND (rt1.c2))) NOTNULL), ((((rt1.c4) NOT NULL)) NOT NULL) FROM t1, t0;SELECT CAST(rt1.c1 AS BLOB), (t1.c0 IN (t1.c25, rt1.c0)) COLLATE NOCASE, SUM(t1.c51) COLLATE NOCASE FROM t0, vt0, rt1 WHERE (HEX((- (0.6423716081105072)))) ORDER BY (((((t1.c25)OR(rt1.c0)))AND(rt1.c3)) IN ()) ASC;SELECT ((rt1.c0)>>(((rt1.c0)|(t1.c51)))), (((+ (x''))) IS TRUE), NTILE(CASE vt0.c0  WHEN ((rt1.c0)>=(rt1.c2)) THEN ((((rt1.c2)OR(t0.c0)))AND(rt1.c0)) ELSE ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)) END) OVER () FROM rt1, t0, vt0 WHERE (((0.8847003488285601 IN (0.26927580220393155)) IN ((('4[')IS('-1871741606')))));SELECT DISTINCT (+ (GLOB(0.2629166128108178, t1.c96))) FROM t0, rt1, vt0 WHERE (((0x52b771f6 COLLATE BINARY) BETWEEN (((NULL) NOT BETWEEN (0.17424487085255358) AND (NULL))) AND ((+ (0xffffffffaf5d8dbc)))));SELECT DISTINCT ((((CAST(t1.c1 AS NUMERIC))OR(CAST(t0.c0 AS INTEGER))))OR((~ (rt1.c3)))), (rt1.c0 IN ()) COLLATE BINARY, highlight(CAST(NULL AS REAL), (- (rt1.c0)), (('')||(t1.c51)), CAST(t1.c1 AS NUMERIC)) FROM t0 WHERE (((x'3f9e' COLLATE RTRIM) IS FALSE)) GROUP BY (((((rt1.c3)) BETWEEN ((t0.c0)) AND ((t1.c81))))%(((rt1.c4)>(rt1.c1)))) HAVING 0.7484059263792641 LIMIT -1354761955 OFFSET 961751539;SELECT ((((t1.c51) IS FALSE))>=(rt1.c1)) FROM t0 WHERE (CAST(((x'') NOT BETWEEN (x'd714') AND ('51936730')) AS TEXT));SELECT DISTINCT ((((t1.c81) NOT BETWEEN (rt1.c4) AND (vt0.c0))) ISNULL) FROM vt0, t1, rt1, t0 WHERE ((((((((0.49725506065446134)OR('now')))OR(NULL))))<((CASE WHEN '0.048877587816370305' THEN '-1422871504' ELSE '' END)))) LIMIT -1766088553 OFFSET 1579260705; -- 5ms;
SELECT CASE WHEN MIN(rt1.c2) THEN t1.c81 COLLATE RTRIM WHEN GROUP_CONCAT(t1.c1) THEN ((t1.c96) NOTNULL) WHEN LIKELIHOOD(DISTINCT rt1.c4, 0.7337242215686776) THEN (((rt1.c4))>((t1.c0))) WHEN t1.c1 COLLATE BINARY THEN (rt1.c4 IN ()) WHEN HEX(DISTINCT rt1.c4) THEN (((t0.c0))>((t1.c25))) ELSE '-551315868' END, ((x'') IS TRUE), (((t1.c25, rt1.c1, rt1.c3)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (t1.c81) AND (NULL)), ((t1.c81) NOT NULL), MAX(t1.c51))) AND ((rt1.c1, rt1.c4, (t1.c1 IN ())))) FROM t1, rt1 WHERE (((((x'')>(NULL)))GLOB((((NULL)) NOT BETWEEN (('1\nDK99')) AND ((NULL))))));SELECT DISTINCT (~ (COUNT(*))) FROM vt0; -- 0ms;
SELECT TRIM(DISTINCT ((t0.c0)<=(vt0.c0)), (0.6626311020756879 IN ())) FROM t0, rt1 WHERE (((CASE 'W纡'  WHEN '''[b~XZFk' THEN '194305757' END) IS TRUE));SELECT ((MAX(rt1.c4))==(((((((((t1.c1)OR(t1.c51)))OR(rt1.c2)))AND(rt1.c4)))AND(rt1.c2)))) FROM vt0, rt1;SELECT ALL '' FROM vt0, t0, t1, rt1; -- 0ms;
SELECT ((((((t1.c0)AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN rt1.c0 WHEN t0.c0 THEN rt1.c0 WHEN 0.45473120234663367 THEN t1.c81 ELSE rt1.c4 END)))OR(((((((((rt1.c3)OR(t1.c0)))OR(t1.c25)))AND(t1.c0)))AND(t1.c25)))), 0.4053588902740052, (((rt1.c2)IS(t1.c96)) IN ()) FROM t1, vt0;SELECT DISTINCT ((- (t0.c0)) IN ()) FROM t0, vt0 LIMIT 2143955592 OFFSET -66225161; -- 0ms;
SELECT (((t1.c51)) NOT BETWEEN ((((t0.c0)=(rt1.c4)))) AND ((CASE WHEN t1.c81 THEN t1.c1 ELSE t1.c96 END))) FROM vt0 NOT INDEXED, t0, rt1 WHERE ((((((1229354971) NOT NULL), 0.7204753075499051, (((x''))>=(('')))))=(((- (0.18320140700314147)), (('897951409') IS TRUE), CAST('' AS INTEGER))))) LIMIT 566612273 OFFSET -2021719100;SELECT ALL CASE ((vt0.c0)>=(vt0.c0))  WHEN ((((t1.c1)OR(t1.c25)))AND(t1.c1)) THEN CASE WHEN rt1.c4 THEN t1.c0 WHEN t1.c25 THEN t1.c0 WHEN rt1.c2 THEN 0.23193985958304675 ELSE vt0.c0 END ELSE rt1.c4 COLLATE BINARY END FROM rt1;SELECT DISTINCT CAST((+ (t0.c0)) AS BLOB), ((((GROUP_CONCAT('e4(1s	䣅m'))OR(load_extension(t0.c0))))OR(MAX(t1.c1))), COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON UNLIKELY((rt1.c2 IN (vt0.c0)));SELECT ALL ((((((((((((((rt1.c2)OR(rt1.c4)))OR(t1.c0)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(t1.c1)))<(-1.89471785E9 COLLATE RTRIM)) FROM t1;SELECT DISTINCT GROUP_CONCAT((((0.054921635959554016))<>((rt1.c1)))) FROM t0, vt0, t1, rt1 WHERE (CAST(((0.9456420998863885) NOT NULL) AS BLOB)); -- 0ms;
SELECT DISTINCT rt1.c1 FROM t0, rt1, t1 WHERE (COALESCE(((0.11174928873420409) BETWEEN (-1.088238712E9) AND (x'')), CASE 0.9380203748218865  WHEN x'b777' THEN ',' ELSE x'105a' END)); -- 1ms;
SELECT DISTINCT CASE WHEN ((t0.c0) IS FALSE) THEN TYPEOF(t0.c0) ELSE NULL END FROM vt0, t1, t0 WHERE (x''); -- 0ms;
SELECT CAST(AVG(vt0.c0) AS TEXT) FROM rt1 CROSS JOIN t0 ON ((TOTAL_CHANGES())==((vt0.c0 IN (t1.c81)))) INNER JOIN t1 ON (- (((t1.c51) NOTNULL))) FULL OUTER JOIN vt0 ON (NOT (((((rt1.c3)AND(t1.c96)))AND(t1.c0))));SELECT ALL (UNICODE(vt0.c0) IN ((NOT (rt1.c4)))), (((t1.c1 IN ())) NOT BETWEEN (CASE vt0.c0  WHEN t1.c51 THEN t1.c25 END) AND ((((rt1.c4))>((rt1.c2))))), ((((((((((vt0.c0)AND(t1.c1)))OR(t0.c0)))OR(t1.c1)))OR(rt1.c0)))-(CASE t0.c0  WHEN '' THEN t1.c81 END)) FROM vt0, rt1, t1 INDEXED BY i8 GROUP BY (((rt1.c4)) BETWEEN ((CASE t1.c1  WHEN t1.c0 THEN t1.c25 END)) AND (((NOT (t1.c51))))), ((((t1.c81)<(t1.c51))) ISNULL), ((CASE t1.c25  WHEN t1.c51 THEN t1.c25 ELSE t1.c51 END) NOT NULL) HAVING ((NULL)>>(((rt1.c0) NOTNULL)));SELECT ALL ((((((((((((((t1.c81)&(t1.c1)))OR(rt1.c4)))OR((+ (t0.c0)))))OR(((vt0.c0) NOT NULL))))AND(((rt1.c2) NOTNULL))))AND(CAST(t1.c81 AS INTEGER))))AND(((',')<<(t0.c0)))) FROM rt1, t0, vt0, t1 WHERE (((NULL COLLATE RTRIM)<=(((('LI!Cs% '))=(('-1974532743')))))); -- 0ms;
SELECT ALL (NOT ((~ (rt1.c1)))), CASE WHEN ((((0.9201744627148504)AND(NULL)))OR(x'')) THEN ((t1.c51) IS TRUE) END, TOTAL((~ (vt0.c0)) COLLATE RTRIM) OVER () FROM vt0, rt1, t1, t0 WHERE (((COALESCE(DISTINCT 0.8743252215761893, -1.599860692E9)) ISNULL)) ORDER BY NULL DESC  NULLS FIRST, json_array_length((~ (t1.c25)), (NOT (t1.c96))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t1.c81 THEN t1.c25 WHEN t1.c25 THEN rt1.c2 WHEN t1.c0 THEN t1.c96 END) BETWEEN ((x'' IN (t1.c25))) AND ((+ (rt1.c4)))), CAST((('-232836685') IS TRUE) AS INTEGER), CASE WHEN rt1.c2 THEN MAX(t1.c96) ELSE MIN(t1.c81) END FROM t0, rt1 RIGHT OUTER JOIN vt0 ON rt1.c0 WHERE (json(x'12c7') COLLATE BINARY);SELECT ALL ((((((x''))!=((t1.c1)))))<((CASE t1.c81  WHEN '-21181134' THEN rt1.c4 END))) FROM rt1 WHERE (((((x'509e') ISNULL)) NOT BETWEEN (((((NULL)AND('-1236719482')))OR(NULL))) AND ((-1896847110 IN ()))));SELECT ((((t0.c0) NOT NULL)) NOT BETWEEN (((t1.c51) BETWEEN (t1.c25) AND (rt1.c1))) AND (((('(q\rJ')) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) FROM vt0, rt1 WHERE (LIKELY((((0.38898039310736865))=((NULL))))) GROUP BY (((((((((t1.c0 IN ()))OR(((t1.c25) BETWEEN (t1.c96) AND (rt1.c2)))))AND((+ (t1.c81)))))OR(t1.c51)))AND(((((((((t0.c0)OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c3)))OR(t1.c1)))) HAVING CAST(CAST('f>' AS NUMERIC) AS REAL);SELECT CAST(((rt1.c3)LIKE(vt0.c0)) AS INTEGER) FROM t1, t0, rt1, vt0 WHERE (LIKELY((((0X2ec40f53))>=((NULL))))); -- 0ms;
SELECT ALL SUM(IFNULL(t1.c96, rt1.c2)) OVER () FROM t0, vt0;SELECT ALL ((((t1.c81)GLOB(vt0.c0)))LIKE((- (0x28e42535)))) FROM vt0;SELECT t1.c0 FROM vt0, t0, rt1 WHERE ('|\');SELECT DISTINCT TOTAL(t1.c96) OVER () FROM t1, t0, rt1, vt0 WHERE ((((x''))>=((((0Xffffffffb11ad9be)<<(x'')))))); -- 3ms;
SELECT DISTINCT ((t1.c51) BETWEEN ((((t0.c0, t1.c81, vt0.c0)) BETWEEN ((t1.c25, t1.c51, rt1.c3)) AND ((rt1.c3, t1.c51, 0.3504859220085631)))) AND (t0.c0)), (((t1.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (vt0.c0) AND ('-1781255805')))) AND ((((t1.c96)==(vt0.c0))))), NTH_VALUE(((((t1.c1) BETWEEN (t1.c81) AND (t1.c1)))>(CASE t1.c51  WHEN t1.c81 THEN t1.c0 END)), (((- (0.3347895526085829)))>=(CASE t1.c51  WHEN t1.c81 THEN t1.c96 ELSE x'' END))) OVER () FROM t1 WHERE ((CAST(x'752caaa9' AS TEXT) IN ()));SELECT DISTINCT ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((((((((rt1.c2)AND(t0.c0)))OR(t1.c25)))AND(t0.c0)))OR(t1.c25))) AND ((((rt1.c4, t0.c0, t1.c81)) NOT BETWEEN ((rt1.c3, t1.c25, vt0.c0)) AND ((rt1.c1, t1.c51, t0.c0))))) FROM t0, rt1, vt0;SELECT DISTINCT rt1.c1 FROM vt0, t1, t0 INDEXED BY i22, rt1;SELECT DISTINCT ((((rt1.c1) BETWEEN (rt1.c0) AND (''))) BETWEEN (((t1.c96)+(rt1.c2))) AND (t1.c25 COLLATE NOCASE)), CAST(UPPER(rt1.c4) AS REAL), (((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)) IN ()) FROM vt0 WHERE ((ROUND(NULL, NULL) IN (x'' COLLATE BINARY)));SELECT CAST(t1.c96 AS TEXT), (((t1.c1 IN (t1.c96))) NOT BETWEEN (((((t1.c1)OR(rt1.c3)))OR(rt1.c4))) AND (((t1.c1) NOTNULL))), CAST(t1.c51 AS INTEGER) COLLATE RTRIM FROM vt0, t1;SELECT ALL CAST(UNLIKELY(DISTINCT vt0.c0) AS INTEGER), LOWER(DISTINCT (((t1.c51))<>((0Xfffffffff1a9acb4)))), rt1.c4 FROM t1, vt0 GROUP BY ABS(((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0))) HAVING (((t1.c25) NOTNULL) IN ());SELECT DISTINCT ((rt1.c4 COLLATE RTRIM) BETWEEN (COALESCE(DISTINCT t0.c0, rt1.c1)) AND (UPPER(rt1.c0))) FROM t1, rt1, vt0 WHERE (((((((((((x'')AND('0.7791050626697067')))AND(x'')))AND('H~/J8')))OR(x''))) NOTNULL)) LIMIT 1352492872;SELECT NULL, COUNT((((((((('')OR(rt1.c3)))OR(t0.c0)))AND(t1.c1)))OR(t1.c81))), (((- (rt1.c4))) NOT BETWEEN (NULL) AND (((rt1.c4)IS NOT(rt1.c3)))) FROM rt1;SELECT ALL (- ((- (x'')))) FROM rt1, vt0; -- 0ms;
SELECT ALL ((rt1.c3)IS NOT(rt1.c1)) COLLATE RTRIM FROM rt1, t0, vt0, t1; -- 0ms;
SELECT ALL CASE WHEN rt1.c4 COLLATE RTRIM THEN TOTAL(t1.c81) ELSE ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) END FROM rt1, vt0 ORDER BY ((((rt1.c4)OR(((rt1.c1) NOT BETWEEN (t1.c96) AND (rt1.c2)))))AND(RTRIM(t1.c1))) ASC  NULLS FIRST, CAST(((rt1.c4) NOT BETWEEN (t1.c0) AND (rt1.c4)) AS INTEGER) DESC;SELECT DISTINCT SUM(((vt0.c0) IS FALSE)) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING) FROM rt1, t0, t1, vt0; -- 0ms;
SELECT ALL (NOT (NULL)) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT (((((0.8077260899420772, 0.715273490825305, t1.c81)) BETWEEN ((t1.c0, t1.c0, vt0.c0)) AND ((rt1.c2, rt1.c3, t1.c1))))GLOB(((t0.c0) BETWEEN (vt0.c0) AND (rt1.c2)))) FROM t1, rt1;SELECT DISTINCT (NOT (t1.c96 COLLATE BINARY)) FROM t1; -- 0ms;
SELECT ALL GROUP_CONCAT(AVG(((((((((t1.c25)OR(0.5720444495705747)))AND(t1.c96)))OR(t1.c1)))OR(t1.c1)))), ((rt1.c0 COLLATE BINARY)==(((vt0.c0) IS FALSE))), ((((0.20555298723655702)AND(COUNT(*))))AND('-1405389385')) FROM t1, rt1;SELECT ALL NULLIF(DISTINCT CAST(t1.c51 AS NUMERIC), ((t1.c51) IS FALSE)) FROM t0, rt1, t1 WHERE (NULL) LIMIT 1196635402 OFFSET -1353366805; -- 0ms;
SELECT ALL (~ ((t1.c0 IN ()))), (((vt0.c0, rt1.c4, (t1.c1 IN (t1.c51))))>((((rt1.c0) IS TRUE), ((rt1.c1)%(t0.c0)), NULL COLLATE RTRIM))), ((((TRIM(t1.c96))AND(COUNT(*))))AND(CAST(rt1.c3 AS REAL))) FROM rt1 LEFT OUTER JOIN t1 ON ((((((t1.c1) BETWEEN (rt1.c3) AND (t1.c51)))AND(t0.c0)))OR((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((vt0.c0)))));SELECT DISTINCT (((-1974440081))<(((((vt0.c0))<=((rt1.c3)))))), CAST(rt1.c0 AS REAL), AVG(CASE WHEN rt1.c2 THEN 0.25336197194751886 ELSE t1.c1 END) FILTER(WHERE (((t1.c25)) NOT BETWEEN ((((((t1.c96)OR(t1.c81)))OR(vt0.c0)))) AND ((((((0X52b771f6)OR(vt0.c0)))AND(rt1.c0)))))) OVER () FROM vt0, rt1 WHERE ((((('549689089') BETWEEN (0.6899342904563859) AND (-778595417))) BETWEEN (CASE 'x~2r/_qst'  WHEN 0.28145084568121803 THEN 0.4743199588932254 WHEN '&m' THEN '0.9346295026236996' WHEN '' THEN '939444645' END) AND (((NULL)>>(x''))))) ORDER BY UNLIKELY(CAST(rt1.c1 AS REAL)) ASC;SELECT DISTINCT AVG((((-1.47051779E9))==((rt1.c4)))) FROM t1, t0, rt1, vt0 WHERE (((((1257280524) NOT BETWEEN (NULL) AND (0.17472613994214503))) BETWEEN (COALESCE(0.5838147729235227, -361603490)) AND (CAST(1587130348 AS TEXT)))); -- 0ms;
SELECT (- (CAST(t1.c0 AS BLOB))) FROM rt1, t1, t0; -- 0ms;
SELECT TIME(rt1.c1 COLLATE NOCASE, CASE WHEN t1.c96 THEN t1.c96 ELSE t0.c0 END, rt1.c2 COLLATE RTRIM) FROM vt0, t0, rt1, t1; -- 0ms;
SELECT ALL ((t1.c1)<>(rt1.c3)) COLLATE RTRIM COLLATE BINARY FROM rt1, vt0;SELECT ALL NULLIF(DISTINCT 0.6423716081105072, ((t1.c96)/(vt0.c0))) FROM t0, vt0 WHERE (((((((x'')%('266925692')))AND(((x'ac5e') IS TRUE))))AND(CAST(0.5198592480899101 AS INTEGER)))) ORDER BY (((t1.c25 IN ('568892429')))LIKE((+ (t1.c96)))) ASC, ((((((((rt1.c2 COLLATE NOCASE)AND(((((x'')OR('452643753')))OR(t0.c0)))))OR(t1.c81)))AND(rt1.c0)))AND(vt0.c0 COLLATE NOCASE));SELECT ((TYPEOF(t1.c81)) NOTNULL) FROM rt1, vt0, t1 WHERE (CAST(NULL AS INTEGER)) LIMIT -1414563104; -- 0ms;
SELECT DISTINCT ((((rt1.c3)AND(t1.c1))) BETWEEN (((rt1.c1)<<(rt1.c3))) AND (((rt1.c2) NOT BETWEEN (t1.c81) AND (1.524953662E9)))) FROM t0, vt0, t1 ORDER BY (- (((t1.c96)IS(t1.c51))))  NULLS LAST;SELECT DISTINCT '' FROM vt0, t1, rt1 INDEXED BY i22 WHERE (((UPPER(DISTINCT 0Xffffffffaf3ff91d))IS(((x'')IS NOT(''))))) GROUP BY t1.c96, ((((((rt1.c3) NOT BETWEEN (t1.c1) AND (t1.c25)))OR(json_object(rt1.c1, rt1.c3))))OR(rt1.c4)), TRIM(DISTINCT 0.9346295026236996, ((t1.c96)GLOB(t1.c1))) HAVING ((((((rt1.c2)IS(t1.c0)))OR(0.6426023731856494)))OR(((((rt1.c0)AND(vt0.c0)))AND(rt1.c4)))) LIMIT 1548373433 OFFSET 1856418535;SELECT DISTINCT ((((t0.c0) NOT NULL)) IS TRUE) FROM t0, rt1, t1, vt0 WHERE ((((NULL)) BETWEEN ((CASE WHEN 0.4693333107897858 THEN NULL ELSE -616818235 END)) AND ((((('La3')) BETWEEN ((NULL)) AND ((0.1350973896762825))))))); -- 2ms;
SELECT (((t1.c51)>=(t1.c1)) IN ()) FROM t1, rt1; -- 0ms;
SELECT CASE WHEN t1.c81 THEN t1.c25 WHEN t1.c51 THEN vt0.c0 WHEN t1.c96 THEN '-992071310' END COLLATE RTRIM, ((NULL) BETWEEN (CAST(-1470517790 AS BLOB)) AND (((NULL)IS(t1.c96)))), ((((((rt1.c0)AND(t1.c0)))OR(t1.c1)))>=((((t1.c25, t1.c51, rt1.c0))<=((t1.c1, t1.c96, t1.c96))))) FROM rt1 WHERE (((CAST(0.39186492998154077 AS REAL))<(((x'')<=(8.11849635E8)))));SELECT DISTINCT SQLITE_VERSION() FROM t1, vt0, t0, rt1 WHERE (('-1416426045' COLLATE RTRIM IN (((0Xffffffffac3b75b7) BETWEEN (NULL) AND (x''))))) GROUP BY ((rt1.c1 IN ()) IN (((t1.c96) IS TRUE))), (t1.c81 COLLATE BINARY IN ()), ((NULL) NOT NULL), (((t1.c0 IN ()))IS(CASE t1.c96  WHEN t0.c0 THEN rt1.c3 END)), (- (((((rt1.c0)OR(rt1.c0)))OR('')))) HAVING CAST(((t1.c96)/(t1.c25)) AS TEXT); -- 0ms;
SELECT t1.c51 FROM vt0;SELECT ALL MAX(CASE rt1.c0  WHEN rt1.c4 THEN t1.c1 ELSE rt1.c1 END) FROM t0, t1, vt0, rt1; -- 0ms;
SELECT DISTINCT MAX((rt1.c0 IN ())) FROM rt1, t1, vt0 LIMIT -267652117; -- 0ms;
SELECT DISTINCT CASE WHEN COUNT(t1.c1) THEN rt1.c3 END, ((((t0.c0)LIKE(t0.c0)))OR((vt0.c0 IN (rt1.c4, vt0.c0)))), CASE WHEN ((((rt1.c0)AND(rt1.c1)))OR(0.27363494715364145)) THEN (((t1.c25))>=((rt1.c1))) END FROM t1, rt1, vt0 WHERE (((NULL) IS TRUE) COLLATE RTRIM);SELECT DISTINCT AVG(((rt1.c3) ISNULL)) OVER () FROM t1, t0, rt1, vt0 LIMIT 1455973213; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN '' THEN rt1.c1 END AS TEXT) FROM rt1, t1; -- 0ms;
SELECT ALL (('' COLLATE NOCASE) BETWEEN (t1.c96 COLLATE BINARY) AND (0.2570612142675829)) FROM t1 WHERE (x''); -- 0ms;
SELECT rt1.c4, (((((rt1.c4, rt1.c3, NULL)) BETWEEN ((rt1.c2, t1.c81, '-1121484607')) AND ((rt1.c0, vt0.c0, rt1.c3)))) BETWEEN (((rt1.c3) IS FALSE)) AND ((((t1.c25, 1792889856, t1.c25)) BETWEEN ((t1.c96, vt0.c0, t0.c0)) AND ((rt1.c2, rt1.c3, t0.c0))))), (((~ (t1.c1))) BETWEEN (((rt1.c4)/(rt1.c4))) AND ((((t1.c1, rt1.c1, rt1.c3, rt1.c2, t1.c96)) NOT BETWEEN ((t1.c81, rt1.c1, rt1.c3, t1.c25, vt0.c0)) AND ((rt1.c0, '0.029064836462460497', t1.c51, t0.c0, t1.c25))))) FROM rt1, vt0;SELECT DISTINCT ((SUM(t1.c25)) NOT BETWEEN (NULL) AND (((t1.c96) NOT BETWEEN (t1.c96) AND (rt1.c2)))) FROM t1, vt0, t0, rt1 WHERE ((((1993581580 IN ()))IS(((1e500) IS TRUE)))); -- 0ms;
SELECT ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (NULL)))*(((t1.c81)AND(vt0.c0)))), ((((t1.c1) BETWEEN ('~ᔱF*''') AND (t1.c25))) ISNULL), ((((t1.c25)<=(rt1.c2))) BETWEEN (t0.c0) AND ((t1.c96 IN (t1.c0, rt1.c1)))) FROM vt0, t1, rt1 LIMIT 1565105791 OFFSET -1353410809;SELECT ALL CASE WHEN t1.c25 COLLATE NOCASE THEN ((t0.c0) BETWEEN (vt0.c0) AND (t1.c51)) END FROM vt0, t1, t0 WHERE (CAST((((0.048877587816370305))!=((x''))) AS REAL)); -- 0ms;
SELECT DISTINCT TIME(t1.c81, ((t1.c81) NOT BETWEEN (rt1.c0) AND (t1.c25)), ((rt1.c1)||(NULL)), NULL, x'') FROM t1, rt1 WHERE (COALESCE(2.143955592E9 COLLATE RTRIM, (0xffffffffac3b75b7 IN (x'')), '0.3935473815673971' COLLATE NOCASE, (((('1003632046')OR(NULL)))AND(101881904)), ((x'')LIKE(0x3719857e)), ((0.370512335988057)||(0.08599372088787705)))); -- 0ms;
SELECT DISTINCT json_insert(load_extension(rt1.c0), (((t1.c96))>((t0.c0))), CASE WHEN t0.c0 THEN rt1.c1 END, t1.c96 COLLATE RTRIM, ((0xffffffff92e534dc)AND(t1.c1))) FROM t1, rt1, vt0 WHERE ((('jo') ISNULL) COLLATE RTRIM);SELECT ALL ((((CASE rt1.c4  WHEN t1.c96 THEN rt1.c3 WHEN vt0.c0 THEN t1.c25 WHEN x'' THEN '1728392258' END)OR(((((((((rt1.c3)AND(x'')))OR(rt1.c4)))AND(vt0.c0)))OR(t1.c96)))))OR(((t1.c81)==(t0.c0)))), COUNT(((t0.c0) NOTNULL)), rt1.c2 FROM t1, t0 GROUP BY ((((t1.c96) IS FALSE))>=((t1.c25 IN ()))), x'977e' COLLATE RTRIM, (NULL IN ()) COLLATE RTRIM;SELECT DISTINCT ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (t1.c51))) BETWEEN (((t1.c96) BETWEEN (rt1.c4) AND (rt1.c2))) AND (NULL)) FROM t0 LIMIT 217961477 OFFSET -994605737;SELECT DISTINCT (((MIN(t1.c81)))!=((((vt0.c0) BETWEEN (rt1.c3) AND (t1.c0))))), x'', ((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c1))) IS TRUE) FROM t0, t1 WHERE ((NOT (((NULL)+(-1.354761955E9)))));SELECT DISTINCT CAST(LIKELIHOOD(t1.c0, 0.8294628322064269) AS INTEGER) FROM t0, rt1, vt0, t1 ORDER BY x'7b9b'; -- 0ms;
SELECT DISTINCT (~ ((NOT (t1.c96)))), SQLITE_VERSION(), (~ (((t1.c25)>(rt1.c2)))) FROM t1;SELECT ALL (((((- (t1.c0)))AND(((vt0.c0)*(t1.c25)))))AND(CAST(t1.c96 AS INTEGER))) FROM t0, rt1, vt0, t1 WHERE ((((('Kz') ISNULL))<((('315635714')<(NULL))))); -- 0ms;
SELECT DISTINCT rt1.c3 FROM t0, vt0 WHERE (CAST((('ꯓy')IS(NULL)) AS INTEGER));SELECT DISTINCT CAST(((t1.c1) IS FALSE) AS REAL), (t1.c81 IN ()), (TRIM(DISTINCT rt1.c3, t1.c1) IN (CAST('5661725' AS NUMERIC), COUNT(*))) FROM t0, t1, vt0;SELECT DISTINCT CASE WHEN TOTAL(t0.c0) THEN ((t1.c25)OR(t1.c96)) ELSE ((rt1.c1)*(t1.c81)) END FROM vt0, rt1, t1;SELECT DISTINCT NTH_VALUE(CAST(IFNULL(DISTINCT rt1.c2, rt1.c1) AS BLOB), ((((json_quote(rt1.c4))AND(rt1.c0)))OR(CASE t1.c51  WHEN t1.c96 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c2 THEN t1.c25 END))) OVER ( RANGE BETWEEN ('N\n' IN ()) COLLATE NOCASE PRECEDING AND (CAST(t1.c1 AS BLOB) IN ()) FOLLOWING) FROM t1, rt1 WHERE ((~ ((('%s*1V')OR(NULL)))));SELECT ALL json_object(((t1.c81) BETWEEN (t1.c96) AND (t1.c0)), ((((((((t1.c25)OR(rt1.c4)))AND(t1.c96)))AND(t1.c51)))AND(t1.c81))) FROM vt0, rt1, t1, t0 GROUP BY ((x'814e')AND((rt1.c2 IN ()))) HAVING CASE (x'8511' IN ())  WHEN (('-9744600')<=(t1.c25)) THEN ((t0.c0)==(t1.c25)) ELSE TIME(t1.c96, rt1.c2, rt1.c4) END ORDER BY ((CASE WHEN 0.42341202189155136 THEN t1.c51 END)%(GLOB(t1.c1, t1.c0)))  NULLS LAST LIMIT -2052364088 OFFSET -1507368540;SELECT DISTINCT MAX((t1.c25 IN ())) FROM rt1 WHERE (((('7}w/8')) BETWEEN ((x'' COLLATE NOCASE)) AND ((CAST('928473593' AS INTEGER))))); -- 0ms;
SELECT DISTINCT (UPPER(DISTINCT t1.c51) IN ()) FROM vt0 WHERE (CASE WHEN CAST(x'' AS INTEGER) THEN ((0.20993129924403175) IS FALSE) ELSE (((0Xfffffffff64a0a80)) BETWEEN (('-1000084019')) AND ((NULL))) END); -- 0ms;
SELECT CAST(((rt1.c2) IS TRUE) AS TEXT) FROM t0, vt0;SELECT DISTINCT CASE WHEN SUM(t0.c0) THEN t1.c51 COLLATE NOCASE WHEN t1.c81 COLLATE BINARY THEN ((vt0.c0) ISNULL) WHEN rt1.c1 THEN 'u' ELSE t1.c96 COLLATE RTRIM END FROM rt1;SELECT DISTINCT COUNT(CASE WHEN t1.c1 THEN rt1.c2 ELSE rt1.c3 END) OVER (), ((((t1.c25) IS FALSE))GLOB(CASE t1.c1  WHEN rt1.c1 THEN t1.c51 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c0 WHEN rt1.c1 THEN x'' WHEN rt1.c1 THEN rt1.c0 ELSE t0.c0 END)), ((CAST(rt1.c4 AS BLOB))<=(CAST(t0.c0 AS REAL))) FROM t0, t1, vt0, rt1; -- 1ms;
SELECT CASE WHEN ((rt1.c3) IS FALSE) THEN t1.c81 COLLATE NOCASE WHEN 0.9430166654396649 THEN CAST(rt1.c2 AS REAL) WHEN CASE WHEN t1.c81 THEN t1.c1 ELSE rt1.c0 END THEN (x'' IN (rt1.c3)) ELSE MIN(t1.c1) END, SUBSTR(((((((((t1.c81)OR(rt1.c0)))OR(t1.c25)))OR(-2063595929)))AND(t1.c96)), t1.c1), CAST((~ (vt0.c0)) AS TEXT) FROM vt0, rt1, t0 WHERE (x'b4a1');SELECT t1.c0 FROM rt1, t0, t1 WHERE (((((0.5903117216002971)>(x''))) IS TRUE)) GROUP BY (((rt1.c3 IN (t1.c1))) BETWEEN (UNICODE(rt1.c3)) AND ((+ (rt1.c3)))), (rt1.c4 IN ()) COLLATE NOCASE, (NULL IN ()), x'', (((NOT (vt0.c0))) BETWEEN ((((rt1.c2, '-1072083584', vt0.c0))>=((rt1.c2, vt0.c0, t1.c81)))) AND (((t1.c81)||(t1.c25))));SELECT AVG(CASE rt1.c2  WHEN t1.c25 THEN t1.c1 END) FILTER(WHERE ((t1.c96)<(t1.c1)) COLLATE BINARY) OVER () FROM vt0 WHERE (((CAST('1443016994' AS TEXT)) NOT NULL)) ORDER BY '' DESC  NULLS LAST, (((t1.c1) NOTNULL) IN ())  NULLS FIRST, (((rt1.c4)) BETWEEN (((~ (t1.c1)))) AND ((((696022056)/(t1.c25)))))  NULLS LAST;SELECT DISTINCT ((((rt1.c1) NOTNULL))>=(((t1.c1)-(t1.c51)))), ((((rt1.c0) BETWEEN (t1.c96) AND (rt1.c0))) IS FALSE), CASE ((rt1.c4)&(t0.c0))  WHEN AVG(t1.c1) THEN ((t1.c25)|(t1.c1)) END FROM rt1 GROUP BY CASE WHEN ((t0.c0)IS(rt1.c2)) THEN NULL END HAVING (- (CASE WHEN t1.c81 THEN t1.c81 WHEN t1.c25 THEN t1.c51 WHEN rt1.c4 THEN rt1.c0 ELSE t1.c0 END)) LIMIT 552735844;SELECT DISTINCT (((((((((rt1.c4)OR(t1.c1)))OR(vt0.c0)))OR(t1.c25)))AND(rt1.c2)) IN (((t1.c51) ISNULL), ((((rt1.c1)OR(t1.c25)))AND(t1.c81)))) FROM rt1, vt0, t0 ORDER BY (((((((rt1.c2)AND(t1.c0)))AND(vt0.c0))))<((1.387753974E9))) ASC  NULLS FIRST;SELECT ALL (((rt1.c1 IN ()))-(MIN(t1.c96))) FROM vt0 WHERE ((((NOT (-4.58996459E8))) ISNULL)) GROUP BY rt1.c4 HAVING ((((((((((rt1.c0)OR(t1.c51)))OR(t1.c51)))OR(t0.c0)))OR(rt1.c3)))>>(CASE rt1.c3  WHEN rt1.c3 THEN t1.c96 END));SELECT DISTINCT (((((rt1.c4, t1.c81, t1.c81))>((t1.c0, rt1.c1, rt1.c3))))&(((t1.c25) BETWEEN (t1.c25) AND (t1.c51)))) FROM vt0, t1, rt1, t0; -- 0ms;
SELECT DISTINCT (((t0.c0, x'8513', t1.c81)) BETWEEN ((LIKELIHOOD(t1.c51, 0.29295356174913056), ABS(DISTINCT vt0.c0), rt1.c3)) AND (((+ (t1.c51)), NULL, ((((rt1.c2)OR(t1.c25)))AND(t1.c81))))) FROM t0, vt0 WHERE (0.22246801869688193) GROUP BY SQLITE_VERSION(), ((RTRIM(t1.c96)) ISNULL), CAST(CASE WHEN t1.c96 THEN t0.c0 END AS REAL) HAVING CASE CASE WHEN t1.c81 THEN t1.c96 END  WHEN (((t1.c0, rt1.c0, t1.c51))<=((rt1.c0, t1.c81, '-126218295'))) THEN GROUP_CONCAT('\]*') WHEN ((t1.c1) NOT NULL) THEN ((t1.c0) NOT NULL) WHEN NULL THEN (~ (t1.c81)) ELSE NULLIF(vt0.c0, t0.c0) END;SELECT TOTAL(0.3208678702993947) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((t1.c0)AND(t1.c81)))OR(t0.c0)))AND(rt1.c0)))AND(t1.c1))) NOTNULL) FROM vt0;SELECT rt1.c3 FROM t1;SELECT DISTINCT (((('q') BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) FROM t1 WHERE (CASE WHEN '-426390703' THEN x'a449' ELSE 0Xffffffff9af6767e END COLLATE NOCASE) LIMIT 1455973213 OFFSET -1861517953;SELECT ALL '349242004', TRIM((~ (rt1.c0)), ((t0.c0) NOTNULL)), ((CASE t1.c81  WHEN vt0.c0 THEN '-1043943713' ELSE rt1.c4 END) BETWEEN (((rt1.c3) NOT BETWEEN (-1.685534068E9) AND (rt1.c4))) AND ((rt1.c3 IN ()))), ((t1.c0)>(((rt1.c2) NOT BETWEEN (t1.c81) AND (t1.c96)))), (TRIM(rt1.c3) IN ()) FROM t1, t0, rt1 WHERE (NULLIF((- (NULL)), ((((((((0x1364e5bc)AND(1443016994)))AND(NULL)))AND('')))AND(0.7243634507263718))));SELECT DISTINCT CASE ((rt1.c2)GLOB(t1.c0))  WHEN ((t1.c81)&(t0.c0)) THEN '' ELSE ((((t1.c1)AND(t1.c25)))AND(rt1.c3)) END FROM t1, t0;SELECT DISTINCT LAST_VALUE(((-36646369) IS TRUE)) OVER () FROM rt1, t1, vt0, t0 WHERE ((((x'')<<(x'')) IN ())); -- 0ms;
SELECT ALL ((x'789d') NOT BETWEEN ((t1.c81 IN ())) AND (((t1.c81) NOT BETWEEN (t1.c1) AND (rt1.c3)))), rt1.c2, rtreenode(COUNT(*), ((rt1.c1)GLOB(t1.c51))) FROM t1 WHERE (((x'' IN ()) IN ()));SELECT ALL LAST_VALUE((((- (t1.c0))) BETWEEN ((t1.c96 IN ())) AND ((- (t1.c51))))) OVER (), t1.c81, DATE(t1.c96 COLLATE BINARY, NULLIF(t1.c96, t1.c96), ((rt1.c1) IS TRUE), ((((rt1.c2)AND(rt1.c0)))OR(t1.c0)), TOTAL(t1.c1)) FROM t1, vt0;SELECT DISTINCT ((COUNT(*)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((((rt1.c0)AND(t1.c0)))AND(rt1.c3)))) FROM t1, vt0, t0, rt1; -- 1ms;
SELECT (((((- (t1.c96)))OR(x'')))OR((((rt1.c3)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1))))) FROM t0 CROSS JOIN rt1 ON t1.c25 WHERE (((((0xfffffffff34273cc)AND(((0.5128041645083741)>>(x'')))))AND(x'' COLLATE BINARY)));SELECT ALL t1.c1 FROM rt1 LIMIT 1287383902 OFFSET 2134169166;SELECT DISTINCT ((((x'') NOT BETWEEN (t1.c1) AND (t1.c51)))OR(((rt1.c2)>=(rt1.c4)))) FROM t1, t0, vt0, rt1 ORDER BY '-1015432388'  NULLS LAST; -- 0ms;
SELECT ALL ((json_quote(t1.c0))OR(((t1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c4)))), ((((t0.c0) NOT NULL)) BETWEEN (COUNT(-1010213217)) AND (NULLIF(DISTINCT t1.c81, t1.c81))), ((((vt0.c0)GLOB(t1.c81))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(rt1.c2)) AND ((- (t1.c81)))) FROM rt1, t0, t1, vt0 WHERE (CASE WHEN (('#i쿧I') IS FALSE) THEN TRIM('') ELSE ((x'')<<(0x585848c5)) END) ORDER BY COALESCE(((t0.c0)<<(t1.c0)), ((((t1.c51)OR(rt1.c2)))AND(t1.c0)), ((rt1.c3)&(t1.c96)), CASE WHEN rt1.c2 THEN vt0.c0 WHEN t1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 END, CASE WHEN t1.c96 THEN t1.c0 WHEN rt1.c4 THEN rt1.c0 WHEN vt0.c0 THEN t1.c25 END, '473616649') DESC; -- 0ms;
SELECT DISTINCT CAST(((t1.c0) IS TRUE) AS NUMERIC) FROM t1, t0, rt1 WHERE ((('-1043943713')<((((0.6287656906574807))>=((NULL)))))) LIMIT 893282272 EXCEPT SELECT DISTINCT x'' FROM t1, t0, rt1, vt0 WHERE (x'') ORDER BY CAST(CAST('-493765257' AS NUMERIC) AS INTEGER), vt0.c0 ASC  NULLS FIRST;SELECT DISTINCT LIKELY((rt1.c1 IN ())), '' COLLATE BINARY, ((((t1.c96)>(t0.c0))) NOT NULL), CAST(((t1.c1) IS TRUE) AS INTEGER), (+ (((rt1.c1) IS FALSE))) FROM t0, vt0, t1 WHERE (CASE ((x'')||(NULL))  WHEN NULL COLLATE RTRIM THEN ((((((((0xfffffffff1718436)AND('-1949143727')))OR(NULL)))AND(0.029291106616518903)))OR('452643753')) END);SELECT ALL (((t1.c51 IN ()))=(((rt1.c1)!=('886198047')))), x'', (((CASE WHEN t1.c51 THEN t1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN vt0.c0 THEN t1.c1 END))<=((t1.c51 COLLATE BINARY))) FROM vt0, t0, rt1 ORDER BY ((((((rt1.c0)||(rt1.c2)))AND(CAST('uꖅ,m2⌺s' AS BLOB))))OR(t1.c25 COLLATE BINARY)) DESC;SELECT rt1.c0 FROM vt0, rt1, t1, t0 GROUP BY ((((((t1.c1)AND(t1.c96)))OR(t1.c81)))=(CAST(rt1.c4 AS NUMERIC))), (((json_extract(t1.c1, vt0.c0, rt1.c0, t1.c51)))=(((NOT (t1.c25))))), (((rt1.c1 IN (rt1.c2, rt1.c2))) IS TRUE); -- 0ms;
SELECT rt1.c1 FROM t1, rt1, vt0, t0; -- 0ms;
SELECT DISTINCT 0.188780418515472, ((TYPEOF(DISTINCT t0.c0))!=(rt1.c2 COLLATE BINARY)), '' FROM t0, t1, rt1, vt0 WHERE (((((((NULL)&(0X324f9259)))AND(CAST(x'' AS BLOB))))OR(((NULL) NOT BETWEEN (x'') AND (x'8b09'))))) ORDER BY UPPER(DISTINCT t1.c81) COLLATE BINARY; -- 0ms;
SELECT ALL ((((((((((t1.c96) NOT BETWEEN (t1.c25) AND (t0.c0)))OR((t1.c51 IN (rt1.c2)))))AND((((t1.c81)) NOT BETWEEN ((t1.c51)) AND ((t1.c81))))))AND(((t0.c0)>>(rt1.c4)))))AND(MIN(vt0.c0))) FROM vt0, t0, rt1, t1 GROUP BY ((PRINTF(vt0.c0)) NOT BETWEEN (((t1.c25) NOT BETWEEN (0Xffffffffc3c95e9f) AND (t1.c81))) AND (((NULL) NOTNULL))), (t1.c51 IN ()), (- (((rt1.c2) BETWEEN (rt1.c1) AND (t1.c96)))) HAVING x'68a2' ORDER BY ((((t1.c25)<<(t1.c25)))IS(((t1.c96)>(0xfffffffff21f31b3))))  NULLS LAST; -- 0ms;
SELECT DISTINCT 0.7634331408030797 FROM vt0, t1, t0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT (NOT (t1.c0))) FROM rt1, t0, vt0 ORDER BY ((((((((CAST(rt1.c2 AS TEXT))OR(t1.c25 COLLATE BINARY)))OR(CASE t1.c51  WHEN t1.c0 THEN t1.c96 END)))OR((rt1.c3 IN ()))))OR((((0.5184763000720796)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))))) DESC  NULLS LAST, (((t1.c25)) BETWEEN ((((((rt1.c4)OR(t1.c1)))OR(t1.c0)))) AND ((t1.c81)));SELECT DISTINCT CASE WHEN CAST(t1.c96 AS BLOB) THEN CASE WHEN vt0.c0 THEN -1225864979 ELSE t1.c25 END END, NTH_VALUE(rt1.c3, ((RTRIM(t0.c0)) BETWEEN (((((t1.c25)AND(t1.c0)))AND(t1.c1))) AND ((((t1.c51))<((t1.c1)))))) OVER (), (((rt1.c1 IN ())) BETWEEN (((-1456854889) NOT NULL)) AND (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3)))) FROM vt0, t1, rt1, t0 WHERE (CASE (x'c36e' IN (NULL, NULL))  WHEN ((('-1236719482', x'4e53', 0.21424208579981874))!=((0x3b077c6c, x'ec56', 0.5812936582633741))) THEN NULL COLLATE NOCASE ELSE (0xffffffffb65689a3 IN ()) END); -- 0ms;
SELECT ALL LEAD(t1.c51, (((t1.c25)) NOT BETWEEN ((((t1.c81) NOT BETWEEN (t0.c0) AND (t1.c51)))) AND ((t1.c1 COLLATE BINARY))), ((0xffffffffa28a8413) NOT BETWEEN (((t0.c0)-(t1.c96))) AND (x''))) OVER () FROM t0, t1 WHERE (((('672231038')) BETWEEN (((NOT (NULL)))) AND (((0.8161601267258531 IN ()))))) GROUP BY (((t1.c81)) BETWEEN (((- (t1.c1)))) AND ((rt1.c1 COLLATE NOCASE))) HAVING (((((((((((((rt1.c2 IN ()))OR(((((((((t1.c96)OR(t1.c0)))AND(rt1.c0)))OR(t1.c0)))AND(x'aa64')))))OR('-798489978')))OR(((rt1.c3) BETWEEN ('1039370992') AND (t1.c96)))))AND(((t0.c0)IS(t1.c51)))))AND((t1.c25 IN ()))))OR((((t1.c96)) BETWEEN ((t1.c96)) AND ((rt1.c0)))));SELECT ALL ((((('ni|'))<>((vt0.c0)))) NOT NULL) FROM t0, t1 GROUP BY ((((rt1.c4)>=(rt1.c4))) BETWEEN (CASE WHEN vt0.c0 THEN x'' WHEN t1.c96 THEN rt1.c4 WHEN t1.c96 THEN '1426659460' END) AND (((((((((rt1.c1)OR(t1.c81)))AND(vt0.c0)))OR(NULL)))OR(t0.c0)))), ((TRIM(DISTINCT rt1.c3))AND(((t1.c1)>>(rt1.c3)))), (NOT (t0.c0));SELECT DISTINCT TOTAL(x''), COUNT(CAST(t1.c25 AS REAL)) OVER ( ROWS ((t1.c25 IN ()) IN ()) PRECEDING EXCLUDE TIES), LOWER(0.5970616461665854) FROM t0 WHERE (CAST(((NULL)AND(0.03524515027585895)) AS BLOB));SELECT ALL (((- (t1.c25)))OR((((NULL, rt1.c2, vt0.c0))<((t1.c51, t1.c51, rt1.c3))))) FROM rt1, t0 WHERE (LTRIM(((270837819)OR(NULL)), '-1682984993' COLLATE NOCASE));SELECT DISTINCT ((IFNULL(rt1.c0, rt1.c1))<>(INSTR(t1.c25, rt1.c3))) FROM vt0 WHERE (((CASE WHEN '5w/zMz' THEN x'' END) IS FALSE));SELECT ALL (((rt1.c1, (rt1.c2 IN (t1.c96)), CASE NULL  WHEN t0.c0 THEN t1.c96 WHEN t1.c1 THEN t1.c0 WHEN 'Ej' THEN rt1.c4 END))<((rt1.c3, NULL, ((t1.c25) IS FALSE)))) FROM t1;SELECT ((((((((((((((rt1.c0) ISNULL))AND((NOT (t1.c25)))))OR(IFNULL(vt0.c0, rt1.c0))))OR(((rt1.c4)IS(t1.c96)))))OR(((t1.c51)!=(rt1.c4)))))AND(((t1.c81) BETWEEN (t1.c1) AND (t1.c0)))))AND(rt1.c1 COLLATE BINARY)) FROM rt1, t0, vt0 WHERE (((('1455973213'))>((NULL))) COLLATE BINARY) LIMIT -915346648;SELECT DISTINCT NTILE(CASE WHEN rt1.c4 THEN ((vt0.c0) NOT BETWEEN (t1.c25) AND (t0.c0)) WHEN DATE(t1.c25, t1.c81, t1.c51) THEN ((t1.c51)%(rt1.c1)) WHEN CAST(t1.c81 AS REAL) THEN ((t1.c96)>>(rt1.c1)) WHEN ((x'5f30166d')GLOB(t1.c0)) THEN ((NULL)<(t1.c0)) WHEN ((((t1.c0)AND(t1.c25)))OR(t1.c81)) THEN ((t1.c51) NOT BETWEEN ('-239235424') AND (t1.c81)) END) OVER () FROM vt0, rt1, t0, t1 LIMIT -143320622; -- 0ms;
SELECT (NOT ((((rt1.c1))>((rt1.c1))))), CAST(json_array_length(t1.c96) AS REAL), (NOT ((t1.c81 IN ()))) FROM t0, rt1, vt0;SELECT DISTINCT (NOT (rt1.c2 COLLATE RTRIM)) FROM rt1, vt0, t0, t1 GROUP BY ((CASE ''  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN vt0.c0 WHEN t1.c96 THEN 1293993508 END) IS FALSE) HAVING (((NOT (NULL))) IS TRUE) ORDER BY (((NULL)) BETWEEN ((QUOTE(t1.c1))) AND ((('' IN ())))) ASC  NULLS LAST, 0.8299897102702533; -- 0ms;
SELECT (((~ (rt1.c4))) NOT BETWEEN (0.06569981132682967) AND (CASE rt1.c3  WHEN t1.c25 THEN t1.c0 WHEN t1.c81 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 ELSE t1.c51 END)), t1.c96, ((rt1.c3) BETWEEN ((NOT (rt1.c1))) AND (TOTAL(t1.c25))) FROM rt1, t0;SELECT ((t0.c0)>=(((rt1.c2) IS TRUE))) FROM t0, vt0, t1, rt1 WHERE ((('' COLLATE BINARY) BETWEEN (x'd328' COLLATE NOCASE) AND (('X඀0\n{C뵕' IN ())))); -- 0ms;
SELECT DISTINCT t0.c0, CUME_DIST() OVER (), (+ (((t1.c1)==(t0.c0)))) FROM vt0;SELECT DISTINCT ((CAST(rt1.c3 AS REAL)) BETWEEN ((((rt1.c0, rt1.c2, vt0.c0))<((t0.c0, rt1.c0, rt1.c0)))) AND ((('')!=(t0.c0)))) FROM rt1, t1, vt0, t0 EXCEPT SELECT ALL ((t1.c1 COLLATE NOCASE)IS((+ (vt0.c0)))) FROM vt0, rt1, t1 WHERE (((((('270872725' IN ()))AND(((0.6489758437511948) BETWEEN (NULL) AND ('1255428502')))))AND(x'' COLLATE BINARY))); -- 0ms;
SELECT (((((t1.c25) IS TRUE)))>=((((0.1163756794479347) NOT NULL)))) FROM rt1, t0, t1, vt0; -- 0ms;
SELECT ((((((rt1.c4) IS FALSE))AND(((rt1.c4) ISNULL))))OR(((rt1.c0)>>(t1.c81)))), NULL, ((((rt1.c4) BETWEEN (t1.c1) AND (t1.c0)))>>(COUNT(*))), TOTAL((- (t1.c25)) COLLATE NOCASE), LAST_VALUE(CAST(t0.c0 AS REAL)) OVER (), CAST(t1.c81 COLLATE NOCASE AS BLOB), CAST(CASE WHEN t1.c25 THEN rt1.c0 WHEN rt1.c4 THEN x'' WHEN t1.c1 THEN t0.c0 END AS BLOB) FROM t1, t0, rt1, vt0 ORDER BY ((((((0x539a7962)OR(t1.c51)))AND(t1.c1)))+(((t1.c25) BETWEEN (rt1.c2) AND (t1.c0)))) DESC, ((t1.c25) BETWEEN (rt1.c4) AND (rt1.c1)) COLLATE BINARY COLLATE NOCASE  NULLS FIRST, CASE ((((rt1.c2)AND('-458996459')))AND(t1.c0))  WHEN t0.c0 THEN ((rt1.c1) NOT BETWEEN (t1.c1) AND (rt1.c4)) END DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT NULL FROM t0, vt0, rt1 GROUP BY x'', rt1.c0, ((CAST(t1.c81 AS REAL))+((rt1.c2 IN ())));SELECT ((((t1.c0)>=(t1.c0))) BETWEEN (((x'643a') BETWEEN (t1.c81) AND (rt1.c3))) AND (((rt1.c4) IS TRUE))), ((rt1.c1)<>(t1.c51)) COLLATE NOCASE, COUNT(*) FROM vt0, t1 WHERE (('E푸' IN (NULL, 0xffffffffd8f7c629)) COLLATE BINARY);SELECT DISTINCT ((t0.c0 COLLATE NOCASE)/(((t1.c96) NOT BETWEEN (vt0.c0) AND (rt1.c3)))), TOTAL(load_extension(t1.c0, t0.c0)) COLLATE NOCASE, RANK() OVER () FROM t0, rt1, t1, vt0 ORDER BY CAST(LOWER(DISTINCT rt1.c3) AS NUMERIC)  NULLS FIRST, ((CASE t1.c51  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN t1.c96 WHEN rt1.c2 THEN t1.c96 END) NOT BETWEEN (rt1.c1) AND ((((rt1.c1, rt1.c3, rt1.c3))==((rt1.c1, rt1.c1, t1.c51))))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT (((0.28873103291909596))>((((t1.c51) BETWEEN (-896849744) AND (rt1.c4))))) FROM rt1, t0 WHERE ((((('l}B8^ j')>=(x''))) IS FALSE));SELECT DISTINCT AVG(((((t1.c0)OR(t1.c1)))AND(rt1.c3))) FROM t1, vt0 WHERE (LOWER(DISTINCT ''));SELECT DISTINCT (((((t1.c96)*(t1.c81))))>((UNLIKELY(DISTINCT t1.c51)))) FROM t1; -- 0ms;
SELECT ALL ((MIN(rt1.c3))IS NOT(CHAR(t1.c25))) FROM rt1, t1, vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(HEX(0.9596819270699183)), x'', ((x'')>(((t1.c81) BETWEEN (t1.c25) AND (t1.c25)))) FROM vt0 WHERE ((((x'cb4b')) BETWEEN (((((0X2e6b3d70)) NOT BETWEEN ((2040395800)) AND (('-1565409812'))))) AND ((CAST(')0v0QY&W' AS REAL)))));SELECT DISTINCT ((x'') NOT BETWEEN (INSTR(t1.c96, t1.c51)) AND ((((t1.c81, 0.48080429061495855, t1.c1)) NOT BETWEEN ((t1.c96, t1.c0, rt1.c2)) AND ((rt1.c4, t1.c1, rt1.c4))))), x'4f35' COLLATE BINARY, ((0.47020141711566765)/((- (rt1.c3)))), ((((((t1.c81)AND(t0.c0)))AND(t1.c81))) NOT NULL), t0.c0 FROM vt0, t1 WHERE (CAST(CAST(x'' AS REAL) AS BLOB)) GROUP BY CAST(((t1.c51)>(t0.c0)) AS REAL);SELECT ALL (((t1.c96, vt0.c0, NULL)) NOT BETWEEN ((((((t1.c0)OR(rt1.c1)))AND(rt1.c1)), ((((((((rt1.c0)OR('1687536126')))OR(t0.c0)))AND(rt1.c3)))AND(rt1.c2)), t0.c0)) AND ((vt0.c0, (- (rt1.c2)), ((((t0.c0)OR(rt1.c2)))OR(rt1.c4))))) FROM t0, vt0, rt1;SELECT CAST(CAST(t1.c0 AS INTEGER) AS INTEGER) FROM vt0, t1 WHERE (((0X45cdad51)/('1446912823')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((COUNT('	n'))*((t1.c1 IN ()))) FROM t0, vt0 WHERE (((((CASE 'j9|'  WHEN x'' THEN '0.24366129150830573' END)AND('1455973213' COLLATE NOCASE)))OR((((0.29709459127267834, x'', '-66225161'))<((NULL, x'', 'q')))))); -- 1ms;
SELECT DISTINCT (+ (((((rt1.c1)OR(t1.c81)))OR(t1.c0)))), NULL COLLATE BINARY, (((GROUP_CONCAT(t1.c51)))=(((~ (t1.c25))))) FROM rt1, vt0 NOT INDEXED, t1; -- 0ms;
SELECT x'' FROM rt1 INDEXED BY i8, t0;SELECT DISTINCT ((((((('V*PM'))>=((t1.c81))))OR(CAST(t1.c96 AS NUMERIC))))OR(0xfffffffff7880a0a)), rt1.c0, ((CASE t1.c1  WHEN '' THEN rt1.c4 WHEN t1.c96 THEN t1.c1 WHEN -1.854457939E9 THEN rt1.c1 ELSE t1.c1 END)>>(MIN(t1.c81))) FROM vt0;SELECT ALL ((rt1.c0 COLLATE BINARY) NOT BETWEEN (((x'5d04') IS TRUE)) AND ((- (t1.c96)))), ((((t0.c0) BETWEEN (rt1.c1) AND (rt1.c2))) BETWEEN ((rt1.c3 IN ())) AND ((+ ('-665282144')))), (((x'', t1.c96, vt0.c0)) BETWEEN (((((t1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), (((t1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0))), NULLIF(t1.c96, rt1.c1))) AND ((((((t1.c0)OR(t1.c81)))OR(x'73bb7bc1')), (~ (rt1.c1)), ((t1.c0) IS TRUE)))) FROM rt1 WHERE ((((('') NOTNULL))LIKE((NULL IN ()))));SELECT CAST(t1.c0 AS REAL) FROM vt0, t0, t1; -- 0ms;
