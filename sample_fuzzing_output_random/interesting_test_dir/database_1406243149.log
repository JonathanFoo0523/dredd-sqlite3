-- Time: 2024/06/07 07:28:43
-- Database: database49
-- Database version: 3.40.0
-- seed value: 1406243149
PRAGMA cache_size = 50000; -- 12ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(0.8464554065126848) WHERE ((((CASE vt0.c2  WHEN vt0.c2 THEN 0.9128242113274766 ELSE vt0.c2 END)AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c2) VALUES (x'', '732865000'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ('732865000'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x'', NULL, 0.3323429742500713); -- 1ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29702'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO rt1(c0, c1, c2) VALUES (7.32865E8, 'Gcc', '!?8J**뚳i'); -- 0ms;
INSERT OR FAIL INTO rt1(c2, c0) VALUES ('732865000', '732865000'); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES ('732865000', x''), (NULL, ''), (x'f1e6fea54866', x''), (0.3497437423826948, NULL), (NULL, x''); -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c0, c2) VALUES ('Gcc', NULL, x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c0) VALUES (0.9128242113274766, 'bo', NULL), (x'', 0.8464554065126848, 0.2647706672937027), (x'', x'20e2', 0.9590934925836585); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-849731121'), (377338831), ('-145653384'); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60965'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1558025734,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1558025734,8');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX RTRIM; -- 0ms;
END; -- 1ms;
VACUUM; -- 9ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2) VALUES (NULL), (x'9377'), (0.33813932724411166); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1043019748); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1117777179); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR REPLACE INTO vt0(c0, c1) VALUES (NULL, '|˕'); -- 1ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (x'70a9'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-1059428653', '', '1118497960'), (x'aef4', ',gKb', x''), ('-849731121', 0.8362601023405596, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 197395186); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43892'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '23064'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (67321193); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INT , +c4 INT ); -- 0ms;
PRAGMA temp.threads; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0, c1) VALUES ('8Z', '|˕', 0x7592bc72); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt1 VALUES ('uh', 1865463475, 508088071); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1143773125); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8080'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ROLLBACK TRANSACTION; -- 6ms;
DROP TABLE IF EXISTS rt1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -773579760);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX BINARY; -- 6ms;
UPDATE OR FAIL vt0 SET c1='-1091929743', c1=x'' WHERE (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)), vt0.c1))>((vt0.c0, HEX(vt0.c1), 0xffffffffcd5a21cf))); -- 23ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37214'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2114056380 unordered noskipscan'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL GROUP_CONCAT(((((vt0.c1)AND('')))OR(vt0.c1))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN x'' THEN vt0.c0 ELSE vt0.c2 END) FROM vt0 WHERE ((((NULL))>=(((~ (x'')))))); -- 0ms;
SELECT DISTINCT NULL, (~ ((((vt0.c2))=((vt0.c0))))), CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 END AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM, (~ (((vt0.c2) IS TRUE))) FROM vt0 WHERE (((('0.3497437423826948' IN ()))%(((((((((2089467115)AND(0xd2e0eea)))OR(x'')))OR(-1.45653384E8)))OR(0x586f6666))))); -- 1ms;
SELECT ALL CAST(COUNT(vt0.c1) AS NUMERIC), ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND (((vt0.c0)<=(vt0.c0)))), (((vt0.c1)) BETWEEN ((COUNT(*))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (''))))) FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE NOCASE FROM vt0 WHERE (((~ ('836483966')) IN ((('|˕') IS TRUE)))) ORDER BY (((vt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)), ((vt0.c1)&(vt0.c1)), ((vt0.c1)>>(vt0.c0)))) AND ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END, ((0x74017327)=(vt0.c1)), (('') BETWEEN (x'e6b4') AND (627922646))))), CASE WHEN (NOT (vt0.c2)) THEN (~ (vt0.c2)) ELSE vt0.c0 END DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT vt0.c1 COLLATE BINARY FROM vt0 WHERE (CAST((x'' IN ()) AS INTEGER)) ORDER BY vt0.c0 COLLATE NOCASE  NULLS LAST, ((CAST(vt0.c0 AS INTEGER)) NOTNULL); -- 0ms;
SELECT ALL (CASE WHEN vt0.c1 THEN vt0.c1 END IN ()) FROM vt0; -- 0ms;
SELECT ((((((((NULL)AND(vt0.c2)))AND(vt0.c2)))OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)GLOB(vt0.c0)))) FROM vt0 WHERE (((((((((((0xfffffffff2a56a77) NOTNULL))AND((+ (NULL)))))OR((((NULL, '-689031123', NULL, '', '95120922'))>=((-773579760, '?ed', NULL, x'', x'7740'))))))OR(((NULL)GLOB(x'')))))OR(LTRIM(NULL)))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (NULL) AND (vt0.c2)))<=((x'' IN ()))) FROM vt0; -- 1ms;
SELECT DISTINCT LIKE((vt0.c2 IN ()), CAST(vt0.c0 AS TEXT)) FROM vt0 WHERE (CAST(((('432440730'))>(('0.8464554065126848'))) AS INTEGER)); -- 0ms;
SELECT (- (vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT ALL (((TRIM(vt0.c1)))<>((vt0.c2))) FROM vt0 WHERE (((((0.2647706672937027) BETWEEN (0.7666890894118084) AND (0.9895081021482642)))||((x'805a' IN ())))); -- 0ms;
SELECT DISTINCT (((-1091929743))>=(('SLWCfX'))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c1 COLLATE BINARY AS NUMERIC), ((((((vt0.c2)>=(vt0.c0)))OR(((vt0.c2) IS FALSE))))OR(((vt0.c1)OR(vt0.c2)))), CUME_DIST() OVER () FROM vt0 WHERE (((((NULL) NOTNULL)) NOT BETWEEN ((((x'', -1091929743, 0.747213560619098))<=((1622147995, '-1059428653', x'8161')))) AND ((((''))==((NULL)))))) GROUP BY CASE CASE ''  WHEN '' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END  WHEN ((((vt0.c1)OR(vt0.c1)))AND(NULL)) THEN CAST(vt0.c2 AS INTEGER) ELSE CAST(vt0.c0 AS BLOB) END; -- 0ms;
SELECT NULL FROM vt0 WHERE ((((+ ('1622147995')))<<(CAST('95120922' AS REAL)))); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((0.7608089537237471)IS(-7.7357976E8))))<((((NULL) ISNULL))))); -- 1ms;
SELECT DISTINCT ((vt0.c2) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))) AND (('' IN ()))), NTH_VALUE((((~ (vt0.c1)))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))), ((((vt0.c0) IS TRUE)) NOT NULL)) OVER (), CASE (((('')OR(vt0.c0)))OR(vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0)>=(vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END FROM vt0 WHERE (ABS(CAST(NULL AS BLOB))) GROUP BY (((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((((vt0.c0)IS(NULL)), INSTR(vt0.c1, vt0.c0), ((vt0.c1)-(vt0.c2)))) AND ((((vt0.c1) NOTNULL), CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 END, (vt0.c1 IN (vt0.c0))))) LIMIT -1488923862; -- 0ms;
SELECT ALL (vt0.c2 IN ()) COLLATE BINARY, (NOT (vt0.c0)), CAST(vt0.c2 COLLATE BINARY AS INTEGER) FROM vt0; -- 0ms;
SELECT CASE WHEN '-1885564750' THEN vt0.c1 COLLATE BINARY ELSE 'n61' END, ((CASE vt0.c1  WHEN x'' THEN vt0.c2 WHEN '!?8J**뚳I' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END) NOT BETWEEN ((('') NOT BETWEEN (vt0.c1) AND (vt0.c2))) AND ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c2, vt0.c0))))), (+ (vt0.c2)), ((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY, ((vt0.c2 COLLATE NOCASE) NOTNULL) FROM vt0 GROUP BY ((vt0.c0 COLLATE NOCASE) NOTNULL) HAVING (((- (vt0.c1)))<<(-2034092637)); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT (- (vt0.c2)), (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2)))) FROM vt0 WHERE (((('')) NOT BETWEEN ((x'21d4' COLLATE NOCASE)) AND ((((('yM', x'b1f4', '-1885564750'))<>((0.42350067025747695, 0.21426482785909984, '400434702'))))))) GROUP BY CAST(vt0.c1 AS NUMERIC) COLLATE BINARY, (('?#') IS FALSE), (((TRIM(DISTINCT vt0.c0, vt0.c1), INSTR(vt0.c2, vt0.c0), CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))>=((TRIM(DISTINCT vt0.c1), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ())))) HAVING ((((((vt0.c2)AND(vt0.c0)))AND((- (vt0.c2)))))AND(CAST(vt0.c0 AS BLOB))); -- 1ms;
SELECT ((((vt0.c0) IS TRUE)) NOT NULL), COUNT(*), LAG(vt0.c1, (((vt0.c1)) BETWEEN ((((vt0.c1) NOTNULL))) AND (((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c2, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c2, vt0.c0)))))), ((CASE WHEN x'' THEN vt0.c1 ELSE vt0.c1 END) BETWEEN ((((vt0.c1))>=((vt0.c2)))) AND (((vt0.c2)LIKE(vt0.c2))))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM vt0 WHERE ('!?8J**뚳i'); -- 0ms;
SELECT ALL ((vt0.c0) ISNULL) COLLATE NOCASE FROM vt0 WHERE ((((('-2106140001') BETWEEN ('') AND ('-1034642590')))*((NOT ('-689031123'))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN x'' ELSE vt0.c1 END) BETWEEN (vt0.c0) AND (DATETIME(')}', vt0.c1, vt0.c2))) FROM vt0 ORDER BY CAST(((vt0.c2)-(vt0.c2)) AS REAL) ASC  NULLS FIRST, NULLIF((NOT (vt0.c0)), CAST(vt0.c0 AS REAL)) DESC  NULLS FIRST, LIKE(((vt0.c2)>(vt0.c0)), (+ (vt0.c2))) ASC; -- 1ms;
SELECT ALL (((((vt0.c0))=((NULL))))>=(CASE WHEN 'up' THEN vt0.c1 ELSE vt0.c2 END)) FROM vt0 WHERE (((((((((NULL COLLATE BINARY)AND(CAST('u''ti95䛮3u' AS TEXT))))AND(rtreenode(NULL, '0.747213560619098'))))AND((~ ('OyeM\n祱')))))OR(((((0xffffffff94d65a87)OR(-541434938)))OR(x''))))); -- 0ms;
SELECT ALL ((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END)OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)<(vt0.c2)))) FROM vt0 WHERE ((NOT ('-1059428653' COLLATE BINARY))) LIMIT 629019416 OFFSET -232579714; -- 0ms;
SELECT DISTINCT LOWER((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) NOT NULL) THEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END WHEN ((vt0.c1) NOT NULL) THEN ((((vt0.c2)AND(vt0.c0)))OR(vt0.c0)) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c2)) THEN ((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)) ELSE CAST(vt0.c1 AS REAL) END FROM vt0; -- 0ms;
SELECT DISTINCT (~ (vt0.c2 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS TRUE) FROM vt0 WHERE (((x'')IS(x'')) COLLATE BINARY) GROUP BY (((TRIM(vt0.c1)))<>((CAST(vt0.c1 AS REAL)))) HAVING (+ (CAST(vt0.c0 AS BLOB))); -- 1ms;
SELECT DISTINCT ((((0.8362601023405596)AND(((vt0.c0)<<(0x73d5c942)))))AND(x'9829')) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (LTRIM(vt0.c1, vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c2)<=(((vt0.c2)*(vt0.c0)))) FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC, NULL DESC  NULLS LAST, '-689031123'  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))OR(((vt0.c0)=(vt0.c0)))) FROM vt0 WHERE ((('-1256257223')>(CAST(0.38711115738560375 AS NUMERIC)))) GROUP BY (((vt0.c2 IN ()))*((vt0.c0 IN ()))) HAVING SUM(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))); -- 0ms;
SELECT ALL x'' FROM vt0 GROUP BY ((((((vt0.c1)AND(NULL)))AND(vt0.c1))) BETWEEN (((vt0.c1) IS TRUE)) AND (((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)))), (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()), (((vt0.c0)) NOT BETWEEN ((((NULL)==(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT)))) HAVING ((GROUP_CONCAT(vt0.c0)) NOTNULL) LIMIT -1495270421 OFFSET 508088071; -- 0ms;
SELECT ((TRIM(vt0.c0))-(((vt0.c0)|(vt0.c1)))) FROM vt0 WHERE ((+ (0X52a3c7cd)) COLLATE NOCASE); -- 0ms;
SELECT (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, ((vt0.c2) NOT NULL), json_remove(vt0.c2, vt0.c2, vt0.c2, '947238947'))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0x7592bc72))), (+ (vt0.c0)), ((vt0.c1)%('!?8J**뚳I'))))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c2)!=(vt0.c2)) AS BLOB), vt0.c0, (('')%(vt0.c2)), (((vt0.c2)) NOT BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((CASE 0.09735074877281102  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END))), '-1537548082' FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c2)IS(vt0.c2))))<>((vt0.c2 COLLATE RTRIM))), ((vt0.c1) ISNULL), (NOT (vt0.c0)) FROM vt0 WHERE ((((NOT (x'16f6'))) BETWEEN (((((((((NULL)OR(0.38711115738560375)))AND(NULL)))AND(x'')))AND('-1145690621'))) AND ((('1386465229') BETWEEN ('629019416') AND (0X58153c6b))))); -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER) FROM vt0 WHERE (((((0.10157767113045024)<<(0.5869058446861869)))AND(((x'') BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT (+ (vt0.c1)) FROM vt0 WHERE ((~ (('67321193' IN ('', 0.05732563049104222))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN TOTAL(vt0.c1) WHEN ((vt0.c2)+(vt0.c2)) THEN (- (vt0.c0)) WHEN '0.8362601023405596' THEN ((vt0.c0)|(vt0.c1)) WHEN TRIM(DISTINCT vt0.c0) THEN ((vt0.c2)AND(vt0.c2)) WHEN CAST(vt0.c2 AS TEXT) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) ELSE ((vt0.c1) NOT NULL) END FROM vt0; -- 1ms;
SELECT ALL json_array_length(LIKELY(NULL), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2)OR((- (vt0.c1)))))OR(LIKELIHOOD(vt0.c1, 0.1394779968954155))) FROM vt0 WHERE (CAST(CASE WHEN 'PPd*' THEN 'ᝓai沶匓LF' WHEN 1263088735 THEN '1386465229' WHEN NULL THEN NULL END AS NUMERIC)); -- 0ms;
SELECT CAST(((vt0.c0)<<(vt0.c1)) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))), x'2cf7f580', ((((((vt0.c0)%(vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c2 END)))AND(vt0.c0)) FROM vt0 WHERE ((((((x'')) BETWEEN (('-1149212716')) AND ((NULL))))/(((0.9878393132110805)+(''))))) ORDER BY ((((-186069432)!=(vt0.c0))) NOT BETWEEN ((((vt0.c2, vt0.c0, vt0.c2))>=(('1믏', vt0.c1, vt0.c1)))) AND ('\n#藤/˕X')), ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN x'' WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)<=(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) ASC; -- 0ms;
SELECT ALL vt0.c1 FROM vt0 LIMIT 629019416; -- 0ms;
SELECT ((vt0.c2) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))) FROM vt0 WHERE (CASE ((0Xffffffff9a5c79e6) ISNULL)  WHEN ((((((((x'9604')OR('-1059428653')))OR('-917316969')))AND(0.6714145206407712)))OR('-1091929743')) THEN CAST(NULL AS REAL) WHEN (0.058288719821983914 IN (NULL)) THEN (~ (x'')) WHEN (('-1721668426')IS('G*K^')) THEN ((NULL) ISNULL) ELSE ((1800139671)<>('1942113516')) END); -- 0ms;
SELECT QUOTE(UNLIKELY(DISTINCT vt0.c0)), TOTAL(CASE WHEN vt0.c1 THEN vt0.c1 END), ((((JULIANDAY(NULL, vt0.c2, vt0.c0))AND(CAST(vt0.c2 AS TEXT))))AND((+ (vt0.c0)))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT (~ (((vt0.c0)IS NOT(vt0.c2)))), SUM(((vt0.c2)<=(vt0.c0))), vt0.c0 FROM vt0 WHERE ((((((((((('1064011327') NOTNULL))AND(((0.6656006870926383)LIKE(0Xffffffffe410c44d)))))AND(((NULL) IS TRUE))))OR(((NULL) NOT BETWEEN ('-917316969') AND (NULL)))))AND(CAST(0.37520993304845174 AS REAL)))); -- 0ms;
SELECT (json_type(vt0.c1) IN ()) FROM vt0 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN x'' WHEN (0X7c8abceb IN ()) THEN ((((((((x'')OR(x'')))AND(NULL)))AND('')))OR(x'')) WHEN ((x'') NOT BETWEEN (0.9538012563828607) AND ('?#')) THEN (+ (x'')) WHEN CASE 0.9895081021482642  WHEN x'24be' THEN 0xfffffffff6fc9e77 END THEN CAST(0.695719845170632 AS NUMERIC) WHEN UPPER(0.18276543617539687) THEN TRIM('', x'922c') END); -- 0ms;
SELECT DISTINCT ((vt0.c1)AND(vt0.c2)) COLLATE RTRIM, 0.5111738930844253, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY FROM vt0 WHERE (CASE WHEN (('*') ISNULL) THEN (('TRUE')<('1943390530')) END); -- 0ms;
SELECT DISTINCT (('-1488923862') BETWEEN (((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))AND('-1149212716'))) AND (CASE vt0.c1  WHEN vt0.c2 THEN x'da09' END)) FROM vt0 WHERE (((0.552671401259033) NOT BETWEEN (((((NULL)AND('1385110339')))AND(x'017b'))) AND (((0.05094866996671921)==(x''))))); -- 0ms;
SELECT DISTINCT CAST(x'5077' AS REAL) FROM vt0 WHERE (load_extension((('-9223372036854775808') NOT NULL)));SELECT DISTINCT CAST(vt0.c0 AS BLOB) COLLATE NOCASE FROM vt0 WHERE (((((x'')IS(' \r'))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((NOT ((~ (NULL))))) GROUP BY (((vt0.c0, vt0.c2, vt0.c0))<>((vt0.c2, vt0.c0, vt0.c0))) COLLATE NOCASE, (((((vt0.c2) IS TRUE)))<((vt0.c1 COLLATE BINARY))), (((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))IS(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)))) HAVING ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (NULL) AND ((((vt0.c0))=((vt0.c1))))); -- 0ms;
SELECT GROUP_CONCAT(((vt0.c2) IS TRUE) COLLATE RTRIM) OVER () FROM vt0 WHERE (((x'45b7') BETWEEN (NULL) AND (NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((HEX(vt0.c2))IS(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) FROM vt0; -- 1ms;
SELECT ((((((1.865463475E9)=(vt0.c2)))OR(TRIM(DISTINCT 1585311934, vt0.c2))))AND(((vt0.c1)IS(vt0.c2)))), NTILE(x'') OVER (), (((+ (vt0.c2)))>(vt0.c0 COLLATE NOCASE)), TOTAL(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))), NULL FROM vt0;SELECT DISTINCT LIKE(((x'') BETWEEN (vt0.c0) AND (vt0.c0)), json_extract(vt0.c0, vt0.c1)) FROM vt0 WHERE ((('#E') NOTNULL)) LIMIT -1537548082;SELECT ALL (NOT (((vt0.c0) IS FALSE))), ((((((((((vt0.c2)<=(vt0.c1)))OR(CAST(vt0.c2 AS TEXT))))AND(vt0.c1)))OR(((vt0.c0)>>(vt0.c1)))))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))), GROUP_CONCAT((vt0.c2 IN ())) OVER () FROM vt0 WHERE (CAST(x'04e2' AS NUMERIC)); -- 0ms;
SELECT ALL ((((vt0.c0)<<(vt0.c1)))||(vt0.c2)), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (ABS(vt0.c1)) AND ((NOT (vt0.c1)))), (((vt0.c2)) NOT BETWEEN (((('-2085046112') NOTNULL))) AND ((((vt0.c1)IS NOT(vt0.c0))))) FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND (((+ (x''))))); -- 0ms;
SELECT DISTINCT ((vt0.c2) ISNULL) COLLATE NOCASE FROM vt0; -- 1ms;
SELECT ALL ((((((vt0.c1) IS TRUE))OR(vt0.c0)))OR(vt0.c2)) FROM vt0; -- 0ms;
SELECT ((((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))) BETWEEN (COUNT(vt0.c2)) AND (((((vt0.c2)AND(vt0.c1)))OR(0.9419594308058257)))) FROM vt0; -- 0ms;
SELECT DISTINCT (('')>=(CAST(vt0.c2 AS REAL))) FROM vt0 WHERE ((CASE WHEN NULL THEN '' WHEN 0.42350067025747695 THEN '0.6714145206407712' WHEN 0.9219406447301248 THEN '-1687895318' ELSE 0.19759551404819664 END IN ())); -- 0ms;
SELECT ALL (NOT (IFNULL(vt0.c1, x''))), vt0.c2, AVG(((vt0.c1) NOT NULL)) OVER () FROM vt0 WHERE (((0.8089060794526214)>(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END) IS FALSE), ((((vt0.c1) NOT NULL)) BETWEEN (((vt0.c2)%(vt0.c1))) AND (((vt0.c1) IS TRUE))), (((NOT (vt0.c2)))-(((vt0.c1)GLOB(vt0.c0)))) FROM vt0 GROUP BY (((((vt0.c0, vt0.c2, vt0.c2))<=((vt0.c2, vt0.c1, vt0.c2))))IS(((vt0.c1) IS TRUE))); -- 0ms;
SELECT ALL CAST(vt0.c2 AS REAL) COLLATE NOCASE, (((vt0.c1 IN (vt0.c1, vt0.c0))) NOT BETWEEN ((vt0.c2 IN (vt0.c2))) AND (((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))), ((((vt0.c0)AND(vt0.c2)))GLOB(((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)))) FROM vt0; -- 0ms;
SELECT (((vt0.c2)<(vt0.c2)) IN ()) FROM vt0; -- 1ms;
SELECT DISTINCT CAST(((vt0.c1)<>(vt0.c2)) AS NUMERIC), ((((vt0.c2)>>(vt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (x'751785882619')), (- (((vt0.c1)+(vt0.c0)))) FROM vt0 WHERE (CAST(CASE 0.288410652690159  WHEN x'67d1' THEN x'3068' ELSE NULL END AS REAL)) ORDER BY (((vt0.c2)AND(vt0.c1)) IN ())  NULLS FIRST; -- 0ms;
SELECT TYPEOF(DISTINCT MIN(vt0.c2)) FROM vt0 WHERE (CAST(CASE 7.32865E8  WHEN NULL THEN '732865000' ELSE '1800139671' END AS TEXT)) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0) IS TRUE))), ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)))AND(UNLIKELY(vt0.c0))), CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)) THEN json_extract(vt0.c1, vt0.c1, vt0.c2, vt0.c1) ELSE CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END END FROM vt0 WHERE (((0.5924599401833358 IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c2) IS TRUE) IN (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, (('')>(vt0.c0)))), (vt0.c2 IN ()) COLLATE NOCASE, (((vt0.c2 IN (vt0.c1, NULL))) IS FALSE) FROM vt0 WHERE ((CASE WHEN 'yM' THEN x'67dc' ELSE NULL END IN ())); -- 0ms;
SELECT DISTINCT ((vt0.c2)IS NOT(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (CAST(CASE NULL  WHEN '481264067' THEN '' WHEN '{+' THEN '⺤*VzLS!{' WHEN 0.05732563049104222 THEN x'' END AS REAL)); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))==(((vt0.c1) ISNULL))), (((vt0.c2, vt0.c1, vt0.c0, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c2, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c2, vt0.c2))) COLLATE RTRIM, 0.3757513006275772 FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c1)LIKE(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c2 AS REAL) AS NUMERIC), NULLIF(DISTINCT 0.4737507028767153, ((vt0.c0)-(vt0.c0))), DENSE_RANK() OVER () FROM vt0 WHERE (((('㖣RFgrO')&(x'')) IN ())); -- 0ms;
SELECT DISTINCT (NOT (0.18276543617539687)), CAST(((vt0.c0) NOTNULL) AS TEXT), (((vt0.c1 IN ()))&(((vt0.c2)IS(vt0.c1)))) FROM vt0 WHERE ((((-1.86069432E8)*(x'6526')) IN (((((x'')AND('')))AND('1064011327'))))); -- 0ms;
SELECT '836483966', ((((TOTAL(vt0.c2))OR((vt0.c2 IN ()))))AND(TRIM(DISTINCT vt0.c1, vt0.c2))), ((LIKELY(NULL)) IS FALSE) FROM vt0 WHERE (((((0.6557142550959767 IN ())))!=((((((x'')OR('-1458430162')))AND(x'')))))) GROUP BY SQLITE_COMPILEOPTION_USED('1346962133') HAVING ((((((((CAST(0x23a761f6 AS REAL))OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))))OR(TYPEOF(vt0.c2))))OR(((vt0.c2)LIKE(vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))); -- 0ms;
SELECT ALL (vt0.c1 IN ()) COLLATE NOCASE FROM vt0 WHERE (LIKELY(DISTINCT CASE WHEN 'N61' THEN NULL ELSE 0.747213560619098 END)) LIMIT 1494543780; -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ((((((((COUNT(*))OR(vt0.c1)))AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c2)))AND(((vt0.c1)+(vt0.c1)))) FROM vt0 WHERE ((((((((((NOT ('732865000')))AND(((x'') ISNULL))))AND(CASE WHEN NULL THEN 876413684 ELSE '1280938091' END)))OR((- (x'c4a0')))))OR(((NULL)<=(NULL))))); -- 0ms;
SELECT ALL ((vt0.c2)IS(vt0.c2)) COLLATE BINARY FROM vt0 WHERE (0.8320034079958356) GROUP BY (vt0.c2 IN ()) LIMIT 876413684 OFFSET -1463789777; -- 0ms;
SELECT ((((vt0.c2)>(vt0.c1)))>(vt0.c0 COLLATE BINARY)) FROM vt0 LIMIT 40677671 OFFSET -857810797; -- 0ms;
SELECT DISTINCT SUM(((vt0.c2)IS NOT(''))) OVER ( ORDER BY CAST((NOT (vt0.c0)) AS NUMERIC)  NULLS LAST) FROM vt0 WHERE (((COALESCE(0.04552603894558216, 0.02829641301300756, 221122282, 'TSF,Z')) NOT BETWEEN (((0.11636630052010566)>=('0.05732563049104222'))) AND (('-1196696650' IN ())))); -- 0ms;
SELECT json_array_length(((NULL) BETWEEN (vt0.c1) AND (vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c2 AS REAL))|((NOT (vt0.c0)))) FROM vt0 WHERE (((UPPER('q84Px'))==((0.0 IN ('', x''))))); -- 0ms;
SELECT COUNT(*) OVER () FROM vt0 WHERE ((0.16938478396933654 IN ())); -- 1ms;
SELECT DISTINCT (NOT (MIN(1843940381))), CASE (vt0.c0 IN (vt0.c0))  WHEN (vt0.c1 IN (vt0.c2, vt0.c0)) THEN ((vt0.c2) IS FALSE) END, NTH_VALUE('-689031123', LIKELIHOOD(DISTINCT (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))), 0.42148971125789025)) OVER () FROM vt0 WHERE ((((NULL))<((0.8362601023405596 COLLATE BINARY))));SELECT (NOT ((vt0.c0 IN ()))) FROM vt0 WHERE (((x'')+(NULL)) COLLATE NOCASE); -- 0ms;
SELECT (((((+ (vt0.c1)))OR((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS INTEGER))), vt0.c2, ((((((((CAST(vt0.c1 AS BLOB))OR((~ (vt0.c0)))))OR(((((((((((((x'0d15')AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)))))OR((('695859640')OR(x'')))))AND(CASE WHEN vt0.c0 THEN vt0.c2 END)) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0)%(vt0.c0))))!=(((NOT (vt0.c2))))), CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 END, CASE WHEN (+ (vt0.c1)) THEN ((vt0.c2) NOT NULL) END FROM vt0 WHERE (0.9262111479903921); -- 0ms;
SELECT ALL '732865000' FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((((((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR('K*')))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))  WHEN '0.3497437423826948' THEN (vt0.c1 IN (vt0.c2)) END FROM vt0 WHERE ('Ʈ%w	3~') ORDER BY ((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))<<(((vt0.c0)+(vt0.c0))))  NULLS LAST, (((((vt0.c2) BETWEEN (vt0.c2) AND (x'0ba0112e')), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)), vt0.c2))=((vt0.c1 COLLATE NOCASE, vt0.c2, vt0.c2))); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((MAX(vt0.c1))) AND ((CAST(vt0.c0 AS TEXT)))), vt0.c0, TOTAL(((x'0989')<=(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*), CAST(((vt0.c0)OR(vt0.c1)) AS BLOB), (((vt0.c2 IN ())) BETWEEN ('-1344568448') AND (AVG(vt0.c0))) FROM vt0 WHERE (''); -- 0ms;
SELECT DISTINCT (((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)), ((vt0.c0) IS TRUE), vt0.c0 COLLATE RTRIM)) AND ((((vt0.c2) IS FALSE), (vt0.c2 IN (vt0.c1, vt0.c1)), vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END, vt0.c1 COLLATE NOCASE))) FROM vt0 WHERE ((((x'eed9')<('\rW')) IN ())); -- 0ms;
SELECT DISTINCT 1.7976931348623157E308, (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND (((~ (vt0.c1))))), ((CASE WHEN '-673260816' THEN vt0.c1 ELSE vt0.c1 END) BETWEEN ((~ (vt0.c2))) AND (((((((((vt0.c0)OR(vt0.c1)))OR('5t')))OR(vt0.c2)))OR(vt0.c0)))) FROM vt0 GROUP BY LIKE(vt0.c1 COLLATE RTRIM, ((vt0.c2) NOTNULL), '-'), (((vt0.c2)/(vt0.c1)) IN ()), vt0.c0 HAVING (((vt0.c0, vt0.c2, vt0.c1))<>((vt0.c1, x'', vt0.c0))) COLLATE RTRIM; -- 0ms;
SELECT ALL ((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (vt0.c0) AND ((((vt0.c2))>=((vt0.c1))))) FROM vt0; -- 1ms;
SELECT ALL (((vt0.c1)) BETWEEN ((0Xfffffffff200c1df)) AND (((vt0.c0 IN ())))), ((((vt0.c2) NOT NULL)) BETWEEN (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) AND (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))), COUNT((vt0.c2 IN ())) OVER ( ORDER BY CAST(((vt0.c2)&(vt0.c2)) AS NUMERIC)) FROM vt0 WHERE (CAST(1.064011327E9 AS BLOB) COLLATE BINARY); -- 0ms;
SELECT DISTINCT 0.5822420090501389, (((vt0.c0)) NOT BETWEEN ((COUNT(*))) AND ((((((((((vt0.c1)OR(vt0.c2)))OR(x'')))OR(vt0.c0)))AND(vt0.c2))))), UNLIKELY((~ (vt0.c1))) FROM vt0 WHERE (((TRIM(DISTINCT x'c4d1bc03'))>=(CASE x''  WHEN '1158594803' THEN 972233876 WHEN NULL THEN '934919565' WHEN x'2851' THEN 1.11849796E9 ELSE x'' END))); -- 0ms;
SELECT ALL (((((vt0.c0))<((vt0.c1)))) ISNULL) FROM vt0 WHERE (((((947238947) ISNULL)) NOTNULL)); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_USED(((vt0.c0) BETWEEN ('3523196371257052867:797T-86735971971641532 7521310101717482990:') AND ('5+pu\n\n哭'))) FROM vt0 WHERE ((((('1617389139')/(0xffffffffccded893)))>('-232579714'))); -- 0ms;
SELECT ALL MAX(((vt0.c2)&(vt0.c1))) FROM vt0 ORDER BY '' DESC, '-849731121' DESC; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0 WHERE ((((((((((((NULL, 0.05732563049104222, -1.705215514E9))>((0.6766977143195338, NULL, x''))))OR(CASE -2009391726  WHEN NULL THEN -1537548082 END)))OR(((x'2072') BETWEEN (0.8464237018376232) AND (NULL)))))AND(((((NULL)AND(x'')))OR(0.7132971886970682)))))AND((((NULL))<((NULL)))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) BETWEEN ((~ (vt0.c2))) AND (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '1064011327' THEN vt0.c2 END)); -- 0ms;
SELECT DISTINCT '628789718', ((vt0.c1 IN ()) IN (((vt0.c1) BETWEEN (vt0.c2) AND ('0.5111738930844253')))), (vt0.c0 IN (vt0.c0, vt0.c1)) COLLATE RTRIM FROM vt0 GROUP BY ((((vt0.c1)=(vt0.c1))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND ((((vt0.c2))>=((vt0.c0))))) HAVING (((AVG(vt0.c2)))<=((((vt0.c2)IS NOT(vt0.c1))))); -- 0ms;
SELECT ((CAST(vt0.c1 AS INTEGER)) BETWEEN (((vt0.c0)/(vt0.c2))) AND (MIN(vt0.c0))) FROM vt0 WHERE ((((((NULL)LIKE(0.40641742999373054))))>(((((x'')) BETWEEN ((x'')) AND ((0.6328535102471584))))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c0))!=((vt0.c2)))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c1 IN (vt0.c2)) IN ((x'' IN (vt0.c0)), (- (vt0.c2)))), GROUP_CONCAT('jB'), COUNT(*) FROM vt0; -- 0ms;
SELECT ALL COUNT(((-1.091929743E9) ISNULL)) COLLATE BINARY FROM vt0; -- 1ms;
SELECT DISTINCT CASE json_quote(vt0.c1)  WHEN ((vt0.c2)<(vt0.c0)) THEN ((((x'b372')OR(vt0.c1)))AND(vt0.c0)) END, ((vt0.c1 COLLATE RTRIM)&(MIN(vt0.c2))), (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN (((((vt0.c0))<((vt0.c2))), ((vt0.c1)<<(vt0.c2)), SUM(NULL))) AND (((+ (vt0.c2)), ((vt0.c1) BETWEEN (0x34811370) AND (0.37520993304845174)), MAX(vt0.c0)))) FROM vt0 WHERE (DATE((('!?8J**뚳i')!=(x'711d')), '', x'405a', ((NULL)>>(x'')), (+ ('1K')))); -- 0ms;
SELECT (((- ('1721092331')))=(((vt0.c1) NOT NULL))) FROM vt0 WHERE (((((0.915711487459312)||(1577277572)))<(((0.9473547061942463) NOT BETWEEN ('1800139671') AND (x''))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((NULL)LIKE('732865000'))) NOT BETWEEN (CAST('c(' AS BLOB)) AND ((NULL IN ())))) LIMIT 1064011327 OFFSET -1284770441; -- 0ms;
SELECT DISTINCT NTILE(((vt0.c2) IS TRUE) COLLATE BINARY) OVER ( ROWS (((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((((vt0.c1) NOT NULL), vt0.c1 COLLATE BINARY, CAST(vt0.c1 AS INTEGER))) AND ((CAST(vt0.c0 AS INTEGER), ((vt0.c0) IS TRUE), ((((vt0.c2)OR(0x73421701)))OR(vt0.c1))))) PRECEDING) FROM vt0 WHERE (CASE json_valid(NULL)  WHEN json_valid(NULL) THEN (NOT ('')) END); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (ROUND(((x'') ISNULL), ((((((((x'')AND(NULL)))OR(0.2756122369526407)))OR(NULL)))OR(0Xffffffffa671da31)))); -- 0ms;
SELECT ALL (((vt0.c1) IS TRUE) IN ()), x'2255', ((((((vt0.c0)=(vt0.c1)))OR(MAX(vt0.c1))))AND(((vt0.c2)&(vt0.c1)))) FROM vt0 GROUP BY ((UPPER(vt0.c0)) NOTNULL), (((('0.9895081021482642')OR((((vt0.c0)) BETWEEN (('-1458430162')) AND ((vt0.c0))))))OR(((vt0.c1) IS FALSE))), CAST(((vt0.c2) IS FALSE) AS TEXT) HAVING ((((vt0.c2)AND(vt0.c2)))<<(((vt0.c1) ISNULL))); -- 0ms;
SELECT 0.07232218409989144 FROM vt0 WHERE (HEX((((''))<((0.985080250994081))))); -- 0ms;
SELECT ALL ((((CAST(vt0.c1 AS BLOB))AND(vt0.c2)))OR(vt0.c2)), vt0.c2, CASE ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))  WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c0 IN ()) WHEN (((vt0.c1, vt0.c0, vt0.c2))<>(('1943390530', NULL, vt0.c0))) THEN TRIM(vt0.c1, vt0.c0) WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END FROM vt0 WHERE (CASE json_patch('', '1051531091')  WHEN ((x'') NOT BETWEEN (0x7d8611de) AND (0.4770250504497673)) THEN ((x'') IS FALSE) WHEN ((-1091929743) ISNULL) THEN -7.7357976E8 COLLATE NOCASE WHEN ((0.1573783550787129) IS TRUE) THEN (NOT ('-1463789777')) END);SELECT DISTINCT MAX(CAST(vt0.c1 AS INTEGER)), LIKELY(DISTINCT x'44a36989'), NULL FROM vt0 WHERE ((((+ (0.7064489928509383))) NOT BETWEEN ('-1284770441' COLLATE BINARY) AND ((((-2101082895))!=((0.3062771142324944)))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c2 WHEN ((vt0.c1) NOTNULL) THEN CAST(vt0.c2 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) END ASC  NULLS LAST; -- 0ms;
SELECT 1266922367, CAST(COUNT(*) AS INTEGER), ((x'')IS NOT(((vt0.c1) NOTNULL))), TOTAL(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))), ((vt0.c2) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c2 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT LEAD(CASE WHEN ((vt0.c0) NOT NULL) THEN vt0.c1 END, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) IN ()), vt0.c1) OVER () FROM vt0 WHERE ((- ((('XV0ŉ_')LIKE(x''))))) LIMIT -1740777412 OFFSET -1241853668; -- 1ms;
SELECT DISTINCT json_valid(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c2 AS TEXT)) NOT NULL) FROM vt0; -- 0ms;
SELECT CAST(vt0.c2 AS NUMERIC) COLLATE BINARY FROM vt0 WHERE (INSTR(((-2004951734) NOT NULL), ((x'')&('')))); -- 0ms;
SELECT ALL ((((vt0.c2)-(vt0.c2))) NOTNULL), 0Xffffffffb2ee1932, ((0.6328535102471584)IS NOT(((((((((vt0.c0)AND(x'')))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))) FROM vt0 LIMIT 628789718; -- 0ms;
SELECT ALL (((vt0.c1 IN ()))<<(vt0.c2 COLLATE RTRIM)), IFNULL(vt0.c2, x'') COLLATE RTRIM, CASE ((vt0.c0)|(vt0.c0))  WHEN (((vt0.c0))=((vt0.c1))) THEN (vt0.c1 IN ()) END FROM vt0 NOT INDEXED WHERE (((((((NULL)AND(0xfffffffff52e2de8)))AND(0.6328535102471584)))<(('-234831393' IN ('2臃i03'))))) GROUP BY (vt0.c2 IN ()) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT CAST((((vt0.c1, vt0.c1, vt0.c2))=((-1.096548023E9, vt0.c1, vt0.c2))) AS TEXT), 'jM琌', ((COUNT(*)) BETWEEN ((((vt0.c1))<((-139276836)))) AND ((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c2, vt0.c0, vt0.c2))))) FROM vt0; -- 0ms;
SELECT DISTINCT (((- (vt0.c2)))=(MAX(vt0.c0))), CAST(GROUP_CONCAT(vt0.c1) AS INTEGER), ((CAST(vt0.c2 AS REAL))IS NOT(((vt0.c0)>(vt0.c1)))) FROM vt0 WHERE (CAST('169317981' COLLATE BINARY AS NUMERIC)); -- 1ms;
SELECT DISTINCT QUOTE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) FROM vt0 WHERE (((('-63103904', 9.5120922E7, '7\')) NOT BETWEEN (('Q|M]', '', '')) AND ((NULL, NULL, -1.096548023E9))) COLLATE BINARY COLLATE NOCASE) ORDER BY CAST('-1558025734' AS REAL); -- 0ms;
SELECT ALL LOWER(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(vt0.c2))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY FROM vt0 WHERE ((NOT (((0Xffffffffa671da31) IS TRUE)))); -- 0ms;
SELECT DISTINCT AVG(CAST(vt0.c2 AS REAL)) FROM vt0; -- 0ms;
SELECT CAST((vt0.c0 IN ()) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) THEN vt0.c1 WHEN vt0.c0 COLLATE RTRIM THEN (+ (vt0.c2)) WHEN CAST(vt0.c2 AS BLOB) THEN vt0.c2 COLLATE RTRIM ELSE vt0.c2 END FROM vt0 WHERE (((CAST('0.915711487459312' AS BLOB)) BETWEEN (('' IN ('dP'))) AND (((0.9895081021482642)IS NOT(NULL))))); -- 0ms;
SELECT DISTINCT TOTAL(CAST(vt0.c2 AS TEXT)) FROM vt0 WHERE (CASE WHEN ((NULL) NOTNULL) THEN CASE '-1598588286'  WHEN '-822695948' THEN NULL END WHEN (NOT (NULL)) THEN '953954958' COLLATE NOCASE WHEN ('-2048759016' IN ()) THEN (('1525170619')|(x'6057')) WHEN json_type('202216519') THEN ((-554744653) IS TRUE) WHEN (((x'')) BETWEEN (('0.3323429742500713')) AND ((0.3497437423826948))) THEN ((NULL)<>('1946252071')) END); -- 0ms;
SELECT ALL ((((vt0.c0)IS(vt0.c1))) NOT BETWEEN (((vt0.c1) NOTNULL)) AND (vt0.c1 COLLATE RTRIM)) FROM vt0 WHERE (((((((NULL)>=(1.158594803E9)))OR((('1263088735')+(0.19759551404819664)))))OR(ABS(x'')))); -- 0ms;
SELECT DISTINCT ((((vt0.c2) ISNULL))<<((NOT (vt0.c1)))) FROM vt0 WHERE (CASE WHEN (('0.552671401259033')IS(0.16227704883984062)) THEN CASE '滻\6Qa'  WHEN 0.847450256093041 THEN 5.08088071E8 END END); -- 0ms;
SELECT DISTINCT SUBSTR((((vt0.c2))=((vt0.c2))), vt0.c1) FROM vt0; -- 0ms;
SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1 COLLATE RTRIM)) FROM vt0 ORDER BY 'fD0'; -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT DISTINCT MIN(((vt0.c1)==(0.13396127635555666))) FROM vt0 WHERE (CAST(((x'dbe43672') BETWEEN (NULL) AND ('-1885564750')) AS BLOB)); -- 1ms;
SELECT DISTINCT (NOT (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (json_object(CAST(NULL AS INTEGER), '-1256257223'));SELECT ALL ((CAST(vt0.c2 AS BLOB))%(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) FROM vt0; -- 0ms;
SELECT ALL AVG(((vt0.c1)IS NOT(vt0.c0))) OVER () FROM vt0 WHERE ((INSTR(x'd796', 0X5914eda4) IN ())); -- 0ms;
SELECT DISTINCT CAST(vt0.c2 AS TEXT) COLLATE RTRIM, json_valid(vt0.c0), ((((((((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)AND((((vt0.c0))!=((0.3413082798298753))))))OR(AVG(vt0.c1))))OR(vt0.c2 COLLATE NOCASE)))AND(((vt0.c2)!=(0X7e01f0bc)))) FROM vt0; -- 0ms;
SELECT ((COUNT(vt0.c1))>=((~ (vt0.c2)))), ((CASE x''  WHEN x'' THEN vt0.c0 END) NOT BETWEEN ((vt0.c2 IN (vt0.c0))) AND (vt0.c2 COLLATE NOCASE)), ((vt0.c0) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END) AND (vt0.c1 COLLATE BINARY)) FROM vt0 NOT INDEXED WHERE (CASE STRFTIME(-760146115, x'', NULL)  WHEN (('3s<[Vz>n')IS(0.7286186627628668)) THEN CAST(x'' AS BLOB) ELSE ((((0.2756122369526407)AND('977434447')))AND(1206784866)) END) ORDER BY load_extension(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c1)|(vt0.c2))) COLLATE NOCASE FROM vt0; -- 1ms;
SELECT DISTINCT CAST(((vt0.c1) BETWEEN ('5Q') AND (0.8046136678962851)) AS BLOB) FROM vt0; -- 0ms;
SELECT ALL ((CAST('' AS INTEGER)) ISNULL) FROM vt0 WHERE ((((0xffffffffd162cdeb, x'', '-949437225')) BETWEEN (((('O}lT97j')<(x'')), (((-1.28625901E8)) BETWEEN ((x'c605')) AND ((0.49962669660488634))), ((((((((x'b002a329')OR(1105470134)))AND(-195525077)))OR(x'')))OR('')))) AND (((('-849731121') IS TRUE), x'', (((NULL, 0X4ae5a836, NULL))<((NULL, -1.51216521E8, '嵘r\i⴨'))))))); -- 0ms;
SELECT DISTINCT NTILE(vt0.c2 COLLATE BINARY) OVER (), (~ (vt0.c2)), ABS('bjO%HPmNF') FROM vt0; -- 0ms;
SELECT DISTINCT (~ (ABS(DISTINCT vt0.c1))), GROUP_CONCAT(((vt0.c0)<=(vt0.c2))), CAST(CASE 0.32697432760675504  WHEN vt0.c1 THEN vt0.c2 END AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0)<(vt0.c2))) OVER (), ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))%(((vt0.c1)>(vt0.c2)))), 0.3108183009097697 FROM vt0 WHERE ((~ (CASE ''  WHEN 0.8157466535898465 THEN NULL ELSE '풙Y᯦' END))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c1)AND('1942113516')))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))/((vt0.c0 IN ()))) FROM vt0 WHERE ((+ (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))/((((vt0.c1, 0.6273769099802672, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((NULL, '', vt0.c1))))) FROM vt0 WHERE (CASE WHEN ((x'3dae')>=(0.29651044200812227)) THEN CAST(NULL AS INTEGER) WHEN (1576569091 IN ()) THEN ((NULL) IS FALSE) WHEN (('') BETWEEN ('-917316969') AND ('')) THEN ('' IN ()) END) LIMIT 1322298000; -- 0ms;
SELECT ALL ('530308532' IN ()) FROM vt0 LIMIT -200294658; -- 0ms;
SELECT ALL (((vt0.c0)!=(vt0.c0)) IN ()) FROM vt0 WHERE (((CASE 'Y'  WHEN 0.6074557909968258 THEN '' END)!=((x'' IN ())))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c1))>=(('Y{)', vt0.c0, vt0.c0)))) IS TRUE) DESC; -- 0ms;
SELECT ALL (((179668648))<=(((('-1821173952')OR(vt0.c1))))), ((json_patch(vt0.c1, vt0.c2))>=(((vt0.c1)&(vt0.c2)))), CAST(vt0.c2 AS INTEGER) COLLATE BINARY FROM vt0 ORDER BY (+ (vt0.c0 COLLATE RTRIM)) LIMIT 1266922367 OFFSET 598172150;SELECT DISTINCT ((((vt0.c0)&(vt0.c1))) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (TOTAL(vt0.c2) IN ()) FROM vt0; -- 1ms;
SELECT ALL (+ (vt0.c0)) COLLATE BINARY, vt0.c0, (((((0.8756824629095085, '哭O', vt0.c1))<((vt0.c0, vt0.c2, vt0.c2)))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c1)LIKE(737017640)))) FROM vt0 WHERE (CASE '1933711105'  WHEN ((-1.45653384E8) IS TRUE) THEN ((NULL) NOT NULL) END); -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT ALL ((LIKELIHOOD(DISTINCT x'', 0.9258980428269038)) NOT BETWEEN ('') AND (((vt0.c1) NOTNULL))) FROM vt0 WHERE (CAST((0.5508840570132535 IN (NULL)) AS REAL)) LIMIT 300717541; -- 0ms;
SELECT LOWER(DISTINCT ((vt0.c0)OR(vt0.c2))), AVG(CAST(0.4210501557836952 AS INTEGER)), CAST((vt0.c2 IN (vt0.c1)) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((vt0.c2))<>((vt0.c2)))) AND (((vt0.c1)/(NULL)))) FROM vt0 WHERE ((NOT (CASE '2s[m*''t+5'  WHEN 598172150 THEN x'' WHEN '[^V[Y84' THEN '#q' WHEN 0X445e6385 THEN -1699759227 ELSE NULL END))); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c2)IS(vt0.c0))) ISNULL) FROM vt0 LIMIT -544728969; -- 0ms;
SELECT (((((vt0.c0, vt0.c2, vt0.c0))>=((vt0.c1, x'49f4', vt0.c1)))) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (((vt0.c0)AND(vt0.c2)))), ((0.4265141395716536 IN ()) IN (((((vt0.c1)AND(1046408480)))OR(vt0.c1)))), TOTAL_CHANGES() FROM vt0 WHERE (CAST((('茺{SkQ#>g')AND(x'')) AS BLOB)); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c1, vt0.c2, 0.9564751252771223)) BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c1, vt0.c0))), '1622147995', '', vt0.c1, ((('-1894636576', vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c0, vt0.c2, vt0.c1)))))=(((+ (vt0.c1)), ((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)), LOWER(DISTINCT vt0.c1), ((vt0.c1)<<(vt0.c2)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))))) FROM vt0 WHERE (CASE WHEN (((((((('-1740777412')AND(NULL)))OR(NULL)))AND(-1284770441)))OR(474240139)) THEN (0.3497437423826948 IN ()) ELSE CAST('1800139671' AS NUMERIC) END); -- 0ms;
SELECT DISTINCT CASE ((vt0.c1)GLOB(vt0.c2))  WHEN ((x'')>(vt0.c0)) THEN ((vt0.c1) NOT NULL) ELSE (- (0.9564751252771223)) END FROM vt0 WHERE (((CAST(x'0a13ffae' AS NUMERIC))/(((x'b78d') ISNULL)))); -- 0ms;
SELECT ALL (~ (0.29651044200812227)) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c2 COLLATE BINARY) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL x'18121a4f3c30' FROM vt0 WHERE ('1122457421'); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0)))OR((- (vt0.c0)))) FROM vt0 WHERE (((CASE NULL  WHEN NULL THEN '-234831393' WHEN '-1618418672' THEN 0.4265005605111166 WHEN 0.09365351185244597 THEN NULL ELSE x'' END)%(((x'')>(0.7132971886970682))))) GROUP BY (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)) IN ()) HAVING (((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c0) NOTNULL), (vt0.c0 IN ())))>=(((+ (vt0.c2)), TRIM(DISTINCT vt0.c1, vt0.c2), vt0.c0))); -- 0ms;
SELECT DISTINCT LAST_VALUE((((vt0.c2 IN (vt0.c1)))-('!?8J**뚳I'))) OVER ( RANGE ((((x'') BETWEEN ('-1502488015') AND (vt0.c2))) IS TRUE) PRECEDING EXCLUDE TIES) FROM vt0;SELECT ALL CAST(TYPEOF(DISTINCT vt0.c2) AS INTEGER), 0.8362601023405596, ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE NOCASE FROM vt0 WHERE (((((((((CAST(x'5e6b' AS TEXT))OR((+ (NULL)))))OR((((0X3924196e)) BETWEEN ((x'')) AND ((0.4089651758544439))))))AND(SQLITE_VERSION())))OR((- (x'59201da1'))))); -- 0ms;
SELECT DISTINCT ((((((((vt0.c0 COLLATE RTRIM)OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)|(vt0.c0)))))OR(((vt0.c0)GLOB('')))))OR(((vt0.c1) ISNULL))), (((- (vt0.c2)))>(CASE WHEN vt0.c0 THEN vt0.c1 END)), ((NULL) NOT BETWEEN ((((vt0.c0, '2k#}', vt0.c2)) BETWEEN ((vt0.c2, vt0.c0, NULL)) AND ((vt0.c0, vt0.c0, NULL)))) AND (((vt0.c0)/(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(GROUP_CONCAT(vt0.c2 COLLATE NOCASE)) FROM vt0 WHERE (CASE WHEN '847720751' THEN -2.034092637E9 END COLLATE NOCASE) GROUP BY TRIM(vt0.c0, vt0.c1) COLLATE BINARY HAVING vt0.c2;SELECT ALL AVG(((((((((vt0.c2)OR(x'')))AND(1.800139671E9)))AND(vt0.c0)))OR(NULL))) FROM vt0 WHERE (CAST(CAST('1843940381' AS NUMERIC) AS REAL)); -- 0ms;
SELECT ALL ((((vt0.c1) NOT NULL))=((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT CASE (+ (x'2e12'))  WHEN vt0.c2 THEN (+ (vt0.c1)) END, LEAD(load_extension(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE 0X300904c2 END), (~ (CAST(vt0.c2 AS TEXT))), ((((vt0.c1) ISNULL))AND((((vt0.c2))<>((vt0.c0)))))) OVER ( ORDER BY vt0.c0 ASC  NULLS FIRST), ((vt0.c0 COLLATE NOCASE)+(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0 WHERE ((+ ((((x''))!=((0.19814297835603167))))));SELECT (((vt0.c0)&(vt0.c1)) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((((('vN᳴龽')OR(vt0.c0)))AND(vt0.c2)))%(COUNT(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), NTILE(((((((x'6c00')AND(-9.17316969E8)))OR(vt0.c2))) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c0 END) AND (((vt0.c0) IS TRUE)))) OVER (), ((vt0.c0)LIKE(x'4ca9')) COLLATE BINARY FROM vt0 WHERE (TRIM(CASE x''  WHEN x'' THEN '7K' WHEN 0.11043269976635994 THEN x'' WHEN 4.00434702E8 THEN NULL END, ((0.7584350304466693)LIKE(NULL)))) GROUP BY ((((vt0.c2)|(vt0.c0)))-(CAST(vt0.c0 AS INTEGER))), ((vt0.c2) IS FALSE) COLLATE BINARY, ((((vt0.c2)<=(vt0.c2)))|(((vt0.c0) ISNULL))), (((vt0.c1)) NOT BETWEEN (((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) AND ((((vt0.c0)<=(vt0.c1))))), LIKE((((vt0.c2))>=((vt0.c0))), CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) HAVING ((vt0.c2)<>((- (vt0.c1)))) ORDER BY '0G'  NULLS FIRST, (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT LOWER(DISTINCT CAST(vt0.c1 AS NUMERIC)) FROM vt0 WHERE ((((((((-1.740777412E9, '0.3757513006275772', NULL)) BETWEEN (('0.4089651758544439', '鈱n', x'3cae')) AND ((NULL, '-818513180', x''))))OR('1204999487')))OR(((6.28789718E8)-(x'c6dc'))))); -- 0ms;
SELECT (((('-1155090698')AND(vt0.c0)))AND((((vt0.c1))>((vt0.c1))))), ((((vt0.c1, '-1096548023', vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c2)) AND ((NULL, vt0.c1, vt0.c0))) IN (((vt0.c1) BETWEEN ('-1880583825') AND (vt0.c1)))), (((('')AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(vt0.c2)) FROM vt0; -- 0ms;
SELECT ALL NTH_VALUE('-1456801123', ((((vt0.c2)OR(vt0.c1)))AND('')) COLLATE RTRIM) OVER () FROM vt0;SELECT DISTINCT -2047323295, COUNT(*) OVER (), AVG(((vt0.c2) NOTNULL)) FROM vt0 ORDER BY (((+ (vt0.c0))) BETWEEN (CASE WHEN vt0.c2 THEN NULL END) AND (CAST(vt0.c0 AS REAL))) ASC, (((CASE WHEN vt0.c1 THEN vt0.c2 END, CAST(vt0.c1 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))>((vt0.c0 COLLATE BINARY, (((vt0.c2))<((0.8571240654068286))), ((vt0.c1) IS FALSE)))); -- 0ms;
SELECT ((((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1)))AND(((vt0.c0) NOT NULL))))OR(((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)))))AND(((0.9473547061942463) ISNULL))))OR(ROUND(vt0.c0, vt0.c0))) FROM vt0 WHERE (((((x'') BETWEEN (NULL) AND (NULL)))+(((((NULL)OR(NULL)))OR(x'9d36'))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) IS FALSE)) NOTNULL), (((- (vt0.c2)))AND(vt0.c1 COLLATE RTRIM)), (~ (0x504902d5)), (((~ (vt0.c2)))||(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))), COUNT(CAST(vt0.c2 AS BLOB)) FROM vt0; -- 0ms;
SELECT DISTINCT LEAD((~ ((vt0.c0 IN ()))), (((vt0.c0) NOT NULL) IN ()), (+ (CAST(vt0.c1 AS INTEGER)))) OVER (), ((CAST(vt0.c2 AS REAL)) IS TRUE), ((((vt0.c0))<((vt0.c1))) IN ()) FROM vt0 WHERE (CASE NULL  WHEN (NOT (x'c7ce')) THEN ((x'') NOT BETWEEN (0.39946895156582807) AND (0X2eac3f2e)) WHEN (((NULL))>((0xffffffff856c82a0))) THEN CASE WHEN NULL THEN NULL WHEN '' THEN 0.3430515465857217 WHEN x'94f0' THEN x'' END WHEN ((((((((0.6732651737627469)AND(NULL)))AND('Ⲗi]S}+!')))AND(x'')))OR('*>(싪CI')) THEN ((((((((NULL)AND('8{,~E9*Z?')))OR(x'')))OR(NULL)))OR(NULL)) WHEN (NULL IN ()) THEN LIKELY('') WHEN CAST(x'3571' AS INTEGER) THEN (0.8362601023405596 IN (x'')) ELSE (('1708244524') NOT BETWEEN (x'') AND (NULL)) END) ORDER BY json(((vt0.c0) NOT NULL)); -- 0ms;
SELECT DISTINCT CASE (vt0.c0 IN ())  WHEN CAST(vt0.c2 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c2))) THEN vt0.c1 COLLATE BINARY WHEN 0X45842ea4 THEN CAST(vt0.c2 AS NUMERIC) END, COUNT(*), ((0.05094866996671921) IS FALSE) FROM vt0 WHERE (((x'7503' COLLATE NOCASE)%(CASE x''  WHEN NULL THEN 1.051531091E9 WHEN '481264067' THEN '-2086278330' WHEN 1585311934 THEN x'' END))); -- 1ms;
SELECT vt0.c2, (((((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))OR(MAX(vt0.c2))))AND(((vt0.c0) IS TRUE))))AND(vt0.c0 COLLATE NOCASE)))OR((((vt0.c2)) NOT BETWEEN ((0.09735074877281102)) AND ((x'06d1'))))), (+ (CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c1)IS(((vt0.c2) IS FALSE))) FROM vt0 WHERE ((('0.5822420090501389' IN ()) IN ())) ORDER BY ((((vt0.c1) ISNULL)) IS FALSE), CAST((vt0.c0 IN ()) AS TEXT) DESC; -- 0ms;
SELECT ((MIN(vt0.c2)) IS TRUE), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END COLLATE NOCASE, CAST(vt0.c2 AS REAL) COLLATE BINARY FROM vt0 ORDER BY (((vt0.c1)IS('0.29651044200812227')) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))) OVER () FROM vt0; -- 0ms;
SELECT (((vt0.c1) NOT NULL) IN ()) FROM vt0 WHERE (((((x'')) NOT BETWEEN ((x'd3a6')) AND ((x'4064'))) IN ())); -- 0ms;
SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(NULL)))AND(vt0.c2))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CAST(-1094354740 AS BLOB) COLLATE BINARY); -- 1ms;
SELECT DISTINCT TOTAL((vt0.c0 IN ())) OVER (), CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c2 AS REAL) THEN COUNT(vt0.c2) WHEN vt0.c0 THEN (((vt0.c1)) NOT BETWEEN (('-673260816')) AND ((vt0.c1))) WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0x7fd92e9f)) END, vt0.c0 FROM vt0 WHERE ((+ ('ⲖI]S}+!'))); -- 0ms;
SELECT DISTINCT CAST((((vt0.c1, vt0.c2, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c2, vt0.c2, '-541434938', vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c2, vt0.c2, vt0.c2))) AS TEXT), CASE vt0.c2 COLLATE BINARY  WHEN ((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) ELSE vt0.c0 COLLATE BINARY END, '' FROM vt0 NOT INDEXED GROUP BY CAST(vt0.c1 COLLATE BINARY AS BLOB) ORDER BY vt0.c1; -- 0ms;
SELECT ALL (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((((vt0.c2) ISNULL)))) FROM vt0 WHERE ((((((((((((-1.03464259E9))>=((x'7f0b'))))OR(CASE WHEN -577104435 THEN '1e500' END)))OR(((0.7132971886970682)-('珚猧]l')))))OR(((NULL) NOT BETWEEN (0x5e035884) AND (x'4ec4')))))OR(((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE RTRIM) NOTNULL), x'', CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN vt0.c0 COLLATE BINARY ELSE (((vt0.c0, vt0.c0, '-1495270421')) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c0)) AND ((vt0.c0, vt0.c0, '1266922367'))) END FROM vt0 WHERE (((((x'') NOTNULL)) ISNULL)) GROUP BY ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)GLOB(((vt0.c0) IS FALSE))) LIMIT 1266922367; -- 0ms;
SELECT ALL vt0.c2, ((CAST(vt0.c0 AS BLOB))>=(((0.7036170251347875)LIKE(vt0.c2)))), LEAD((vt0.c1 COLLATE RTRIM IN ()), CAST(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END AS REAL), CASE WHEN CAST(x'' AS INTEGER) THEN CAST('1280938091' AS INTEGER) END) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR('1579964438'))) IS TRUE) FROM vt0 WHERE (((CASE x'0e14279e'  WHEN 1.942113516E9 THEN x'08d5' ELSE 0.2445998788905298 END)!=(((x'')&(x''))))) ORDER BY x'5a1067e2'  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE vt0.c2  WHEN CAST(vt0.c0 AS NUMERIC) THEN SUM(vt0.c2) ELSE ((vt0.c2)+(vt0.c0)) END, (+ (json_extract(vt0.c0, vt0.c2))), ((((CAST(vt0.c2 AS BLOB))AND(0.9184370961830638)))AND((((vt0.c2))<=((vt0.c0))))) FROM vt0 LIMIT 1800139671;SELECT ALL AVG((~ (vt0.c0))) OVER () FROM vt0 WHERE (x''); -- 0ms;
SELECT ALL ((0.523465644171988 COLLATE BINARY) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c2)))<>((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))), (('-1e500') BETWEEN (((((vt0.c1)OR(vt0.c2)))OR(vt0.c1))) AND (((vt0.c1) IS TRUE))), (- (vt0.c2)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (vt0.c2)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL (((vt0.c1)|(vt0.c2)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ((IFNULL(vt0.c2, vt0.c2)) NOT BETWEEN (((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))) AND (vt0.c2 COLLATE BINARY)), ((SUM(vt0.c0)) ISNULL), CASE WHEN IFNULL(DISTINCT 0.07232218409989144, vt0.c0) THEN ((((((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)) ELSE 0.5303387310470231 END FROM vt0; -- 0ms;
SELECT DISTINCT ((((((1751815651) IS TRUE))AND(TOTAL(vt0.c1))))OR(((vt0.c2)GLOB('-1049674809')))), LTRIM(((vt0.c0) ISNULL)), ((UNLIKELY(vt0.c2))/(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))) FROM vt0; -- 0ms;
SELECT ((vt0.c2) NOT NULL) COLLATE BINARY, ROW_NUMBER() OVER (), CASE WHEN vt0.c0 THEN vt0.c2 END COLLATE NOCASE FROM vt0 ORDER BY vt0.c0  NULLS LAST; -- 0ms;
SELECT AVG((~ (vt0.c0))) FROM vt0 WHERE (((((x'34c2')AND(-1241853668))) NOT NULL)); -- 0ms;
SELECT SUM((((vt0.c1))=((vt0.c0)))) FILTER(WHERE (+ (((vt0.c1)<<(vt0.c2))))) OVER ( PARTITION BY (+ (ABS(DISTINCT vt0.c0))), vt0.c1), TRIM(MIN(vt0.c1), load_extension(vt0.c2)), LEAD((((vt0.c2)GLOB(vt0.c1)) IN ()), ((0.19814297835603167)IS(vt0.c1)) COLLATE NOCASE, (((- (0Xffffffffda60e408)))=(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END))) OVER () FROM vt0;SELECT ALL ((vt0.c0)IS(((((((((vt0.c2)OR(vt0.c1)))AND(0Xffffffffb51f0939)))AND(x'')))AND(vt0.c0)))), STRFTIME(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c1)>=(vt0.c2)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (-2.004951734E9)), x'', COALESCE(vt0.c1, vt0.c0)), CAST(((vt0.c0)|(vt0.c0)) AS BLOB) FROM vt0 LIMIT 1483695718 OFFSET -1537548082; -- 1ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))LIKE(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END)) FROM vt0 WHERE (((((1955368014, NULL, NULL))==((NULL, 0xffffffffcd5a21cf, 0.11322054853793106))) IN ())); -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST(CAST('T82' AS REAL) AS INTEGER)) OVER (), DENSE_RANK() OVER (), vt0.c1 FROM vt0 WHERE ('1284188924'); -- 0ms;
SELECT ALL (((((vt0.c1))=((vt0.c2)))) ISNULL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM, COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c1)>>(vt0.c2))) OVER () FROM vt0 LIMIT 732865000 OFFSET -2106140001; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((CASE 'wa'  WHEN 1.266922367E9 THEN NULL END) IS TRUE)); -- 0ms;
SELECT ALL TOTAL(COUNT(((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))) FROM vt0 WHERE ('');SELECT ALL ((vt0.c1)-(((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)))), '1280938091', (COUNT(vt0.c2) IN ()) FROM vt0; -- 0ms;
SELECT '', (+ (((((vt0.c0)OR(NULL)))AND(vt0.c0)))), (((((('1346962133')AND(vt0.c2)))AND('-578038652')))LIKE((vt0.c0 IN (0.20375677436579165)))) FROM vt0 WHERE ((((CAST(x'' AS TEXT)))>((((NULL)IS NOT('~#')))))) LIMIT 695859640 OFFSET -1334414786; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))<>((~ (-1969200563)))), TOTAL((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) OVER ( ORDER BY (((NOT (vt0.c1))) IS TRUE) ASC, CASE CAST(0.8464554065126848 AS INTEGER)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE NULL END THEN (vt0.c1 IN ()) ELSE ((vt0.c0)>=(vt0.c1)) END DESC  NULLS FIRST), (((((('-1344568448')|(vt0.c1)))OR(((vt0.c1)-(vt0.c2)))))AND(((vt0.c1)-(vt0.c1)))) FROM vt0 ORDER BY ((vt0.c0)OR(CAST(x'' AS INTEGER)))  NULLS LAST; -- 0ms;
SELECT DISTINCT AVG(((((x'')AND(vt0.c2)))AND(vt0.c2))) OVER () FROM vt0 LIMIT 432440730 OFFSET 885928951; -- 0ms;
SELECT DISTINCT TYPEOF(((((vt0.c1)AND(vt0.c2)))OR(vt0.c2))), (((vt0.c1 COLLATE BINARY, json_insert(vt0.c1, vt0.c2, vt0.c2, vt0.c2, vt0.c0, vt0.c0, vt0.c2), ((vt0.c1) IS FALSE)))>((((vt0.c0)||(vt0.c2)), (('627922646') NOT BETWEEN (vt0.c2) AND (1280938091)), vt0.c0 COLLATE RTRIM))), (- ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((NULL))))) FROM vt0 WHERE (x'6534') GROUP BY (((NULL)) BETWEEN (((('L+Au\n\n哭')>>(vt0.c1)))) AND ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c1))))) HAVING (((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>=((vt0.c2 IN ()))); -- 0ms;
SELECT DISTINCT (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))AND((((vt0.c1))<((vt0.c2))))), (((NOT (vt0.c2)))*((((((((('')OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))), (MIN(vt0.c1) IN ()), CASE ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)))OR('0.7666890894118084')))AND(vt0.c1))  WHEN CAST(vt0.c1 AS REAL) THEN (NOT (vt0.c1)) ELSE vt0.c2 END, (((vt0.c0)) BETWEEN (((~ (x'')))) AND ((CASE WHEN vt0.c2 THEN vt0.c0 END))) FROM vt0; -- 0ms;
SELECT (('-1149212716') NOTNULL) FROM vt0 LIMIT -2004951734 OFFSET 934270140; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c2 COLLATE RTRIM) AND (vt0.c1)), TRIM(-1284770441, ((vt0.c2) NOTNULL)), json_extract(((vt0.c0)>(vt0.c0)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) FROM vt0 GROUP BY CASE ((vt0.c0)OR('1288360764'))  WHEN ((('u}J|G-'))>=((vt0.c0))) THEN CASE NULL  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END, ((vt0.c2) NOT BETWEEN (vt0.c0) AND (UNLIKELY(vt0.c2))), (((CAST(vt0.c2 AS NUMERIC)))=(((vt0.c0 IN ()))));SELECT 0xffffffffa740d32a, COUNT(((vt0.c0)>=(vt0.c1))) OVER (), MIN((('o\nX搖') ISNULL)), ((vt0.c2)<>((vt0.c1 IN ()))), DATETIME(CAST(vt0.c2 AS TEXT), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END, (- (vt0.c2)), (vt0.c1 IN ()), ((vt0.c1) IS FALSE)) FROM vt0 GROUP BY (((- (0Xfffffffff2a56a77)))>(QUOTE(vt0.c2))); -- 0ms;
SELECT DISTINCT IFNULL(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c2)), CASE WHEN vt0.c2 THEN vt0.c0 WHEN 0.06602504395169495 THEN vt0.c2 WHEN '1845120067' THEN vt0.c1 END), ((CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END)AND(vt0.c2)), (- ((('I4.~!') NOTNULL))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2)IS(x'')))||(CAST(vt0.c1 AS REAL))) FROM vt0 WHERE ((((((NULL) IS FALSE)))<=((((NULL)IS('s{RZY')))))); -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c0)) NOTNULL) FROM vt0; -- 0ms;
SELECT COUNT((+ (vt0.c2))) FROM vt0 WHERE (((json_remove('', 'jM琌'))/((~ (0xffffffff983dd83c)))));SELECT DISTINCT ((((vt0.c1, vt0.c2, vt0.c2))<((vt0.c2, vt0.c1, vt0.c1))) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) FROM vt0 WHERE ('ᜁp'); -- 0ms;
SELECT ALL 0Xffffffff86245540 FROM vt0 WHERE (((((NULL)>=(''))) NOT NULL)); -- 0ms;
SELECT ALL TOTAL(((vt0.c1)+(vt0.c1))) OVER ( ORDER BY ((((vt0.c2) NOT NULL)) ISNULL)), (((vt0.c0)) BETWEEN ((TYPEOF(DISTINCT vt0.c2))) AND ((((((((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))AND(0x7553d2fb)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c0))))), ((((vt0.c1) IS TRUE)) ISNULL) FROM vt0; -- 0ms;
SELECT ALL (NOT (((((vt0.c2)AND(vt0.c0)))OR(vt0.c0)))), ((((((vt0.c0) NOTNULL))AND((vt0.c1 IN ()))))AND((~ (NULL)))), ((vt0.c0 COLLATE NOCASE)<<(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(0.6330394750723796)))AND(vt0.c1)))) FROM vt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)>(vt0.c0))))), (NOT (CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)), vt0.c1 FROM vt0 WHERE (CASE 0Xfffffffff85a513f COLLATE NOCASE  WHEN ('206665803' IN ()) THEN CAST(x'9f84' AS REAL) ELSE LIKELIHOOD(DISTINCT '-2004951734', 0.6246401468280746) END); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((('O}lT97c', x'', '0.16227704883984062')) NOT BETWEEN ((1386465229, '508088071', 0xffffffffede8731e)) AND ((1.158594803E9, 0xfffffffff3005dbf, '''k'))))AND((NOT (NULL)))))AND(CAST('0.5508840570132535' AS BLOB)))) GROUP BY (((((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)), NULL, UNLIKELY(DISTINCT vt0.c2), ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)), 0.3143652222762807))<=((LIKELY(vt0.c2), ((vt0.c1) BETWEEN (-1.502488015E9) AND (vt0.c2)), (vt0.c2 IN (vt0.c2)), NULL, NULL))); -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c2 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN '1972550770' ELSE vt0.c0 END))<((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))) FROM vt0; -- 0ms;
SELECT UNICODE(((vt0.c2)>(vt0.c2))), ((CAST(vt0.c1 AS NUMERIC)) BETWEEN (CAST(vt0.c2 AS BLOB)) AND (CASE WHEN vt0.c0 THEN vt0.c2 END)), ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END) BETWEEN ((('') IS FALSE)) AND (json_patch('1357920471', vt0.c1))) FROM vt0 GROUP BY TRIM(DISTINCT (vt0.c2 IN ()), 0X42aad88c) HAVING SUM(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))); -- 1ms;
SELECT DISTINCT CAST(vt0.c1 AS NUMERIC) COLLATE BINARY FROM vt0 LIMIT -535299608 OFFSET 1942113516; -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE NOCASE)>>(AVG('-701359574'))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((NOT (x'')))AND(vt0.c2 COLLATE NOCASE)))AND(vt0.c2)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))IS(((vt0.c2)>=(vt0.c2)))) FROM vt0 WHERE (LOWER('') COLLATE BINARY) ORDER BY (((- (vt0.c0)))LIKE(((vt0.c0) NOT NULL))) DESC  NULLS FIRST, -2.085046112E9; -- 0ms;
SELECT (TRIM(DISTINCT vt0.c2, vt0.c2) IN ()), ((((vt0.c0)>(vt0.c2))) NOT BETWEEN (LOWER(vt0.c1)) AND (((((((((0.029028654009811805)AND(vt0.c1)))AND(-1.558025734E9)))OR(vt0.c2)))OR('*>(싪CI')))), ((((CAST(vt0.c2 AS INTEGER))OR(((vt0.c0) NOTNULL))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE (UNICODE(NULLIF(DISTINCT 0.6330394750723796, 1007900393))); -- 0ms;
SELECT ((vt0.c1)<('|+')) COLLATE BINARY, CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN ((vt0.c1)>=(vt0.c2)) ELSE CAST(vt0.c1 AS BLOB) END, CASE LIKELY(DISTINCT vt0.c1)  WHEN vt0.c1 THEN ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) WHEN ((vt0.c1)=(vt0.c0)) THEN vt0.c0 END FROM vt0 GROUP BY ((NOT (vt0.c1)) IN ()); -- 0ms;
SELECT DISTINCT (((((vt0.c2) NOTNULL)))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))), ((vt0.c2)<=(NULL)), CAST(vt0.c2 AS TEXT) COLLATE RTRIM FROM vt0 LIMIT 1468956693; -- 0ms;
SELECT DISTINCT (- (vt0.c0)) COLLATE NOCASE, (((0.046568030561551677 IN ()))/(vt0.c0 COLLATE NOCASE)), ((((vt0.c0)|(vt0.c0))) NOT NULL) FROM vt0 WHERE (CASE ((NULL) NOTNULL)  WHEN ((NULL) BETWEEN (0X325494ac) AND (x'')) THEN CAST(0x4164189f AS BLOB) END); -- 0ms;
SELECT DISTINCT ((((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)))<<(CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=(vt0.c2)))!=(CAST(vt0.c1 AS NUMERIC))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE vt0.c2 COLLATE BINARY  WHEN SUM(vt0.c1) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)) ELSE CAST(vt0.c0 AS TEXT) END FROM vt0 LIMIT 481264067 OFFSET 1266922367; -- 0ms;
SELECT ALL json_array(((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)), vt0.c0), CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) WHEN NULL THEN ((vt0.c2) BETWEEN (NULL) AND (vt0.c2)) WHEN ((vt0.c2) ISNULL) THEN CAST(vt0.c0 AS INTEGER) END, vt0.c1 FROM vt0 WHERE (((((x'5a60')|(NULL))) NOT NULL)); -- 1ms;
SELECT ALL vt0.c2 COLLATE RTRIM COLLATE NOCASE, (((0.5965490717976675)) NOT BETWEEN (((vt0.c1 IN (vt0.c1)))) AND (((NOT (vt0.c1))))), NTILE((((x'', vt0.c2, vt0.c0)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), 0.6303492737030113, json_quote(vt0.c2))) AND ((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, vt0.c1, vt0.c1)))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP), vt0.c0, ((((((((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))&((vt0.c1 IN ()))) FROM vt0 LIMIT -745161046;SELECT DISTINCT (((vt0.c2 COLLATE NOCASE, (((vt0.c0))<=((vt0.c1))), (((x'', vt0.c1, vt0.c1))=((vt0.c0, vt0.c1, vt0.c2)))))=((((vt0.c2)IS('432440730')), vt0.c1, ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0))))), ((vt0.c1 COLLATE NOCASE)+(((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))), (((vt0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c2)+(vt0.c2)) IN ()), (((9.47238947E8) NOT BETWEEN (NULL) AND (vt0.c0)) IN ()), ((((((((vt0.c2)AND(vt0.c1)))OR(((0.4041972932196827)GLOB(vt0.c2)))))AND((vt0.c0 IN ()))))OR(((((((((((((vt0.c1)OR(0X179064a5)))AND(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))) FROM vt0 WHERE ((((0.466992797295682 IN ())) BETWEEN ((((x''))<((0.4182158278662853)))) AND (CAST('' AS BLOB)))); -- 0ms;
SELECT AVG((((((((('95120922')OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c1))), CAST(CAST(vt0.c1 AS INTEGER) AS TEXT), (((vt0.c0 IN ()))||((NOT (vt0.c2)))) FROM vt0 ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN x'' THEN vt0.c2 ELSE '-52_조SR弴' END  WHEN ((vt0.c2)/(0.7984196824928489)) THEN NULL ELSE (vt0.c2 IN ()) END DESC; -- 1ms;
SELECT DISTINCT LEAD(CASE (((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c1)))  WHEN ((vt0.c1)*(vt0.c2)) THEN (vt0.c0 IN ()) END, ((((((((((-1.03464259E9)-(vt0.c1)))AND((((vt0.c1))<((vt0.c2))))))AND(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)))OR(703826259)), CASE ((vt0.c0)>(vt0.c0))  WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN (((vt0.c0))!=((' \r'))) END) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT x'1138' FROM vt0 GROUP BY (((NOT (vt0.c0)))GLOB((+ (vt0.c2)))) HAVING ((AVG(vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END)AND(x''))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((MIN(vt0.c1)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END)) FROM vt0 GROUP BY TYPEOF(CAST(vt0.c0 AS NUMERIC)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE ')1AE#T' END) IS TRUE)  NULLS FIRST, CAST(((NULL)AND(vt0.c2)) AS BLOB)  NULLS FIRST; -- 0ms;
SELECT ALL vt0.c1, ((((-729154057)!=(vt0.c0)))GLOB(vt0.c0)), CAST(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) AS BLOB) FROM vt0 WHERE (LIKELIHOOD(((((0.37092145851367797)OR(NULL)))AND(x'57b6')), 0.06984368301459498)); -- 0ms;
SELECT DISTINCT LAST_VALUE(GLOB(((vt0.c2)=(vt0.c1)), vt0.c2 COLLATE NOCASE)) OVER ( ORDER BY (NOT (vt0.c2))  NULLS LAST), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('Cp''0c{'))))-(((vt0.c0)>=(vt0.c0)))), IFNULL(((vt0.c2) ISNULL), CAST(vt0.c2 AS NUMERIC)) FROM vt0 WHERE (0.05215141193974859); -- 0ms;
SELECT DISTINCT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) IN ()) FROM vt0 ORDER BY ((((vt0.c0 IN ())))<=(('')))  NULLS FIRST, vt0.c1 COLLATE BINARY; -- 0ms;
SELECT ALL ((((((((((vt0.c1) ISNULL))AND(((vt0.c2) IS FALSE))))AND('1234089182')))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c2 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT (((vt0.c1)) BETWEEN ((((x'518e') BETWEEN (NULL) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c2))))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((((CAST(NULL AS TEXT))OR(CASE '-1753005695'  WHEN '' THEN 'O}LT97J' END)))OR(((0.73768994234291)LIKE('-542901404'))))) GROUP BY '#\/', '-1495270421', '&'; -- 0ms;
SELECT ALL (((NOT (vt0.c2)))=(COUNT(*))), RANK() OVER (), (- (((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))) FROM vt0 WHERE ((((('-1705215514')<=('32묗a'))) NOT NULL)); -- 0ms;
SELECT (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)), vt0.c1, ((vt0.c0)GLOB(vt0.c0))))<((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, (- (vt0.c2)), CAST(vt0.c1 AS INTEGER)))) FROM vt0 WHERE ((NOT (((x'') NOT BETWEEN ('\nEXX)ീ') AND (NULL))))); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((((((NOT (x'5860')))OR(1.266922367E9 COLLATE BINARY)))OR(((-1.558025734E9) ISNULL)))); -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((((x'95f9')IS NOT(0.7751736827736516)))<<(NULL COLLATE BINARY))) LIMIT -1149212716 OFFSET 549722146; -- 0ms;
SELECT ALL (vt0.c1 COLLATE BINARY IN ()) FROM vt0 WHERE (CAST(TYPEOF(DISTINCT NULL) AS NUMERIC)); -- 1ms;
SELECT ALL (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) FROM vt0 WHERE (((((((NULL)AND('1846313614')))AND('33768075'))) NOT BETWEEN (x'') AND (((('1137651176', 1483695718, 1.800139671E9))=(('-1096548023', -1.096548023E9, 0.13589755471105647)))))) LIMIT -936399059 OFFSET -1174161047; -- 0ms;
SELECT (~ (CASE WHEN vt0.c0 THEN vt0.c1 END)), COUNT((((vt0.c1))<((vt0.c1)))) OVER (), CAST((~ (vt0.c2)) AS INTEGER) FROM vt0; -- 0ms;
SELECT (((vt0.c0, vt0.c2, vt0.c0)) BETWEEN ((((vt0.c2) NOT NULL), CAST(vt0.c0 AS TEXT), vt0.c1 COLLATE NOCASE)) AND ((-1075382666, vt0.c1 COLLATE BINARY, ((vt0.c0) NOT NULL)))) FROM vt0; -- 0ms;
SELECT DISTINCT '' FROM vt0 WHERE (CAST(((((((((NULL)AND(x'')))OR(0.2647706672937027)))OR(NULL)))AND(x'')) AS NUMERIC)) GROUP BY load_extension((~ (vt0.c2))) HAVING (((vt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)/(vt0.c0)), (vt0.c1 IN ()))) AND ((LIKELIHOOD(vt0.c2, 0.014688083214529746), vt0.c1 COLLATE RTRIM, vt0.c2 COLLATE NOCASE))) ORDER BY vt0.c0; -- 0ms;
SELECT DISTINCT (GLOB(vt0.c2, vt0.c1) IN (NULL)), '0.8464237018376232', ((CASE WHEN vt0.c2 THEN vt0.c1 END) IS FALSE) FROM vt0 WHERE (CASE WHEN ((((-2004951734)AND(0.5019792417818543)))AND('jM琌')) THEN UNLIKELY(0x15ec2f14) WHEN 0.7915421659513387 COLLATE BINARY THEN ((NULL) NOT BETWEEN (0.8292408486611383) AND (0X6695c8eb)) WHEN ((-2.085046112E9)!=(0X19c6859a)) THEN PRINTF(x'') ELSE ((0.5875887357246806) BETWEEN ('1386465229') AND (x'')) END); -- 0ms;
SELECT ALL TOTAL((((vt0.c1))<((vt0.c1))) COLLATE RTRIM) OVER (), ((LIKELIHOOD(vt0.c1, 0.8971656208054434))>>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END)), NTILE(((((vt0.c0, vt0.c2, vt0.c0))<>((vt0.c0, vt0.c1, vt0.c2))) IN (((vt0.c1)<(vt0.c0)), vt0.c2, (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) OVER () FROM vt0 LIMIT -2143055685;SELECT ALL ((MAX(vt0.c1))IS(NULL)), ((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)>(vt0.c0)))), ((((((vt0.c0)>(vt0.c0)))AND(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR(((0.2432924989050651) NOTNULL))) FROM vt0; -- 1ms;
SELECT ALL (((+ (vt0.c1)))IS(CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (((((x'') BETWEEN (NULL) AND (NULL))) NOT BETWEEN (HEX(0.42350067025747695)) AND ('|~'))); -- 0ms;
SELECT ALL CAST(vt0.c2 AS INTEGER) FROM vt0 ORDER BY ((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)) COLLATE BINARY DESC, QUOTE(vt0.c1 COLLATE RTRIM)  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((NULLIF(DISTINCT vt0.c2, vt0.c2))) AND ((vt0.c2 COLLATE RTRIM))) FROM vt0 WHERE (((~ (x'')) IN ())); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((((((vt0.c2)OR(1051531091)))OR(vt0.c1))))) FROM vt0 WHERE ((((NULL)<('')) IN ())); -- 0ms;
SELECT ALL NTH_VALUE(((((vt0.c2)>(vt0.c1)))<((vt0.c1 IN ()))), CAST(LIKELIHOOD(DISTINCT vt0.c2, 0.8638481995647526) AS NUMERIC)) OVER (), CASE NULL  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (- (vt0.c1)) ELSE ((vt0.c0)<=(vt0.c0)) END, (((((vt0.c2) NOT NULL), ((vt0.c1)LIKE(vt0.c1)), vt0.c2 COLLATE BINARY))>((((((vt0.c2)AND('%	')))OR(vt0.c1)), (((('-186069432')OR(vt0.c2)))AND(vt0.c2)), CAST(vt0.c1 AS NUMERIC)))), vt0.c0, json_array_length(((vt0.c2)IS NOT(vt0.c0))) FROM vt0 LIMIT -1885564750; -- 0ms;
SELECT ALL GROUP_CONCAT(AVG(vt0.c0 COLLATE RTRIM)) FROM vt0;SELECT DISTINCT ((((vt0.c0)|(vt0.c1))) NOT BETWEEN ((vt0.c2 IN ())) AND (CAST(vt0.c1 AS INTEGER))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT) FROM vt0 WHERE (((CAST('-1145690621' AS INTEGER)) BETWEEN (LOWER(NULL)) AND (0Xffffffffa957c3ae))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0))>((vt0.c2))), SUM(vt0.c0), ((vt0.c1)<(vt0.c0))))<=(((vt0.c2 IN ()), x'', ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))))) FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))IS NOT((vt0.c1 IN ()))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN SUM(vt0.c2) THEN x'' ELSE ((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)) END, CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN (((vt0.c0, vt0.c0, vt0.c2))=((vt0.c0, vt0.c1, vt0.c2))) THEN ((vt0.c2) IS TRUE) END, CAST((- (vt0.c0)) AS TEXT) FROM vt0 WHERE ((((('0.288410652690159') NOTNULL))AND((((('r缜zSx')OR(0.17204408238713964)))OR(0.9860729509741601))))); -- 0ms;
SELECT GROUP_CONCAT(CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END), GROUP_CONCAT(CASE WHEN vt0.c0 THEN vt0.c2 END) OVER (), ((vt0.c1) NOT NULL) FROM vt0 UNION ALL SELECT DISTINCT TOTAL(vt0.c0 COLLATE NOCASE), ((CAST(vt0.c1 AS TEXT)) NOTNULL), TOTAL(((vt0.c2) IS TRUE)) FROM vt0 WHERE (((((0X16792150) BETWEEN ('0.1573783550787129') AND (NULL))) IS FALSE)); -- 0ms;
SELECT ((((CASE WHEN vt0.c0 THEN vt0.c2 END)AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))) FROM vt0 WHERE (((((((((((((((((0.7576855560294138)AND(NULL)))AND(NULL)))AND('628789718')))OR(x'')))AND((- (NULL)))))AND(((0.3406238834407961)<=(1492024232)))))AND(((0.2756570913172284)<<(0xfffffffff34f61a6)))))AND(CASE '-181969904'  WHEN x'' THEN 0x37b9bd8d ELSE '-W' END))); -- 0ms;
SELECT DISTINCT (((((- (vt0.c1)))AND(0.5053866890511227)))OR((vt0.c2 IN (vt0.c2)))) FROM vt0 WHERE (0.018083016119437967); -- 0ms;
SELECT ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND(IFNULL(vt0.c2, vt0.c0))))AND(vt0.c2 COLLATE RTRIM)))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(((vt0.c2) NOT BETWEEN ('') AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT MAX((vt0.c1 IN (vt0.c0, vt0.c2))) FROM vt0 WHERE (((((x'') BETWEEN (x'') AND ('-1813612001'))) NOT BETWEEN (((0xfffffffff86fdef8) NOT BETWEEN (x'80be') AND ('-1458430162'))) AND (LTRIM('11144747', x'8d36')))) LIMIT 1622147995 OFFSET -1256257223; -- 1ms;
SELECT DISTINCT vt0.c2, ((((((((NULL)OR(vt0.c0)))OR(vt0.c1)))OR(AVG('-1797891449'))))AND(CAST(vt0.c1 AS NUMERIC))), TOTAL(((((vt0.c2)OR(0.6656006870926383)))AND(x'')) COLLATE RTRIM) FROM vt0 WHERE (x'4b85') GROUP BY LTRIM((vt0.c2 IN (vt0.c0))) HAVING vt0.c2; -- 0ms;
SELECT (+ ((vt0.c0 IN (vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c2)|(vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (((('')LIKE(vt0.c1))))) FROM vt0; -- 0ms;
SELECT vt0.c2 FROM vt0 WHERE (CASE ((x'0755') NOT BETWEEN (0.16938478396933654) AND (x''))  WHEN ((x'dc9f')%('s.y&')) THEN CASE WHEN NULL THEN 'D	耦&h<	/\r' ELSE '' END ELSE json_array(x'', 0x1ce365b3) END) EXCEPT SELECT ALL CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS TEXT) FROM vt0 WHERE (((((-363136648)AND('FSKJ+tEo'))) NOT NULL));SELECT DISTINCT (((vt0.c2, vt0.c2, vt0.c1)) BETWEEN (((vt0.c0 IN ()), vt0.c2, CAST(x'1c3f' AS REAL))) AND ((x'', LTRIM(vt0.c2, 0.018055929959593264), vt0.c2 COLLATE BINARY))) FROM vt0 WHERE ((((NULL, '1839338753', '-554792649'))==((x'', -1241853668, 'V'))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT QUOTE(((((((((vt0.c2)OR(vt0.c2)))AND(NULL)))OR(vt0.c0)))OR(0xffffffffb36bf577))), (((((~ (vt0.c1)))OR((NOT (vt0.c1)))))AND((x'e69d05fc' IN ()))), CUME_DIST() OVER () FROM vt0 WHERE (((((x'')&('1266922367'))) BETWEEN (CAST(0X6fadcdef AS INTEGER)) AND (((x'd98eb675')LIKE(0.36464165980464724))))); -- 0ms;
SELECT DISTINCT ((vt0.c2) NOT BETWEEN (((vt0.c2)<(vt0.c2))) AND (LIKELIHOOD(vt0.c0, 0.26804525821632685))), (((((~ (vt0.c2)))OR(((vt0.c0) IS TRUE))))OR(((vt0.c2)>>(vt0.c2)))), vt0.c2, (NOT ((vt0.c0 IN ()))), CAST(vt0.c1 AS REAL) FROM vt0 WHERE (LOWER(0.0039027812454934807)); -- 0ms;
SELECT DISTINCT (((vt0.c1 IN ()))<=(((vt0.c0)|(vt0.c2)))) FROM vt0 GROUP BY ((vt0.c2) ISNULL) COLLATE NOCASE HAVING (((5.450661187299533E-4, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, NULL, '0.5924599401833358')) AND (((((vt0.c2))>((vt0.c0))), ((vt0.c2) IS TRUE), ((vt0.c0)||(vt0.c0))))); -- 1ms;
SELECT DISTINCT ((vt0.c0)<>((NOT (vt0.c1)))), (+ (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))), CASE ((vt0.c2)/(vt0.c2))  WHEN ((vt0.c0)LIKE(vt0.c1)) THEN 123057782 ELSE ((vt0.c2)GLOB(0.1762070664462343)) END FROM vt0 WHERE (((CAST(x'' AS REAL)) IS FALSE)) GROUP BY NULL HAVING (((vt0.c1)) BETWEEN (((vt0.c2 IN ()))) AND ((HEX(DISTINCT vt0.c2)))); -- 0ms;
SELECT ALL (((vt0.c0)-('')) IN ()), (((vt0.c1) ISNULL) IN ()), ((PRINTF(vt0.c1)) NOT BETWEEN ((((vt0.c2))<>((vt0.c2)))) AND (CAST(vt0.c2 AS BLOB))) FROM vt0 WHERE (((('-1716706866')) NOT BETWEEN ((((x'') IS FALSE))) AND (((((('⺤*VzLS!{')OR(x'')))OR(NULL)))))); -- 0ms;
SELECT ALL (NOT (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0 WHERE (x''); -- 0ms;
SELECT RANK() OVER () FROM vt0 LIMIT 393599018 OFFSET 1166290596; -- 0ms;
SELECT DISTINCT '245626864', GROUP_CONCAT(((vt0.c0)<<(''))) OVER ( ORDER BY ((vt0.c1) BETWEEN (((vt0.c2)||(vt0.c1))) AND ('-491954327'))  NULLS LAST), NTH_VALUE((+ (TOTAL_CHANGES())), CASE WHEN (+ (vt0.c2)) THEN CASE WHEN vt0.c1 THEN vt0.c1 END END) OVER ( PARTITION BY (((((vt0.c0))>((vt0.c2)))) IS FALSE), ((((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))) IS TRUE)) FROM vt0 WHERE (TRIM(DISTINCT ((NULL) BETWEEN (0.040937996155723355) AND ('95120922')), LOWER(NULL))) GROUP BY LOWER((((vt0.c2, vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c0)) AND ((x'', vt0.c1, vt0.c1)))) HAVING CAST(((vt0.c0)==(vt0.c1)) AS BLOB); -- 0ms;
SELECT (((vt0.c0) NOTNULL) IN ()), CUME_DIST() OVER (), NULL, GROUP_CONCAT((- (vt0.c0))), ((((vt0.c2)GLOB(vt0.c0)))-((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))) FROM vt0; -- 1ms;
SELECT ALL vt0.c1, (((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN (((vt0.c0 IN ()), COUNT(*), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c2, ((vt0.c0) NOT NULL), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))))), ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)-(vt0.c2)) FROM vt0 WHERE (((('-1705215514')) NOT BETWEEN ((NULL)) AND ((0.7545066964996621))) COLLATE BINARY); -- 0ms;
SELECT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))))>=((CAST(vt0.c0 AS INTEGER)))), LEAD(((((((x'49aa') BETWEEN (vt0.c1) AND (vt0.c0)))AND(vt0.c1)))AND((((vt0.c0)) BETWEEN ((-1.091929743E9)) AND ((vt0.c0))))), ((((((((vt0.c2)OR(((vt0.c0)&(vt0.c2)))))OR(vt0.c2)))OR(((vt0.c2)GLOB(vt0.c2)))))OR((- (vt0.c2)))), CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) AS INTEGER)) OVER (), AVG((((vt0.c0))<=((vt0.c2)))) FROM vt0 WHERE (((((CASE 0.06602504395169495  WHEN '' THEN NULL WHEN -1.51216521E8 THEN -981399162 WHEN 0.9316341391166635 THEN '-2024288452' END)AND(json_type(x''))))OR(NULL))); -- 0ms;
SELECT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END IN ()) FROM vt0 WHERE (json(((('qFjn0w+!')) BETWEEN ((NULL)) AND ((2144326814))))); -- 0ms;
SELECT DISTINCT ((vt0.c2)+(vt0.c1)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) AS TEXT) FROM vt0 WHERE (LIKELY(DISTINCT COALESCE(DISTINCT NULL, 0.3570403440793458))); -- 0ms;
SELECT DISTINCT NTH_VALUE((((((vt0.c0))==((vt0.c2))))IS(CAST(vt0.c2 AS NUMERIC))), ((UNLIKELY(vt0.c2)) IS TRUE)) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), CASE ((vt0.c0) NOT NULL)  WHEN vt0.c0 COLLATE NOCASE THEN TOTAL(vt0.c0) ELSE 'hours' COLLATE NOCASE END, MAX(((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c2)), ((x'') BETWEEN (vt0.c1) AND (NULL))) FROM vt0 WHERE (((((((x'')AND('K1/Ti')))AND(x''))) NOTNULL)); -- 0ms;
SELECT ALL ((((vt0.c1)*(x'fa76')))OR(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((- ((('-72564914')+(x''))))); -- 0ms;
SELECT DISTINCT '' FROM vt0 WHERE ((((('**_')=(NULL))) NOT BETWEEN (((x'') NOT BETWEEN ('-1797891449') AND (''))) AND (((0xffffffff8c7bdff2) IS TRUE)))); -- 0ms;
SELECT DISTINCT vt0.c2 COLLATE BINARY, AVG(((vt0.c0)<<(vt0.c2))) OVER (), (LIKELIHOOD(vt0.c0, 0.15155924347525696) IN ()), (((((vt0.c0 IN ()))OR(((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))))AND((vt0.c2 IN (vt0.c1)))), CASE (vt0.c2 IN (vt0.c0, vt0.c2))  WHEN (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)) ELSE (vt0.c0 IN ()) END FROM vt0; -- 0ms;
SELECT GROUP_CONCAT('-195026632'), ((NULL) IS TRUE), vt0.c0 FROM vt0 WHERE (((((x'')-('')))IS NOT((~ (NULL))))); -- 0ms;
SELECT ((((((vt0.c2)OR(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (COUNT('1960605918')) AND ((~ (vt0.c1)))) FROM vt0 WHERE ((((((0xffffffff8f596e1a)AND(0.891812924205119)))AND(0.45790000581260115)) IN ())); -- 0ms;
SELECT DISTINCT COUNT(*), UPPER('1835650687'), (~ (vt0.c2 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT LIKE(vt0.c0, vt0.c0, 'N') COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1))) IS TRUE) FROM vt0 WHERE (STRFTIME((('')==(0xffffffffcf9fb41b)), (('U5') BETWEEN (NULL) AND (0.6400926536777415)), (('-1797891449') IS TRUE))); -- 0ms;
SELECT ((((vt0.c1)AND(vt0.c0))) BETWEEN (((vt0.c1)IS(vt0.c2))) AND (MIN(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL CAST(((NULL) NOT BETWEEN (vt0.c2) AND (0.04875264262026835)) AS INTEGER), vt0.c1, CAST(vt0.c0 AS INTEGER) FROM vt0; -- 0ms;
SELECT ALL NTILE(((((vt0.c0) NOT NULL))IS(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) OVER ( ORDER BY ((vt0.c2 COLLATE RTRIM) NOTNULL) DESC  NULLS LAST), ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS TRUE), CAST(((vt0.c2)>(vt0.c2)) AS REAL) FROM vt0;SELECT COUNT(*) OVER () FROM vt0 WHERE (CAST('-1059428653' COLLATE RTRIM AS REAL)); -- 0ms;
SELECT DISTINCT ((((vt0.c1) IS FALSE)) BETWEEN (((vt0.c2)>=(vt0.c0))) AND ((~ (0.6732651737627469)))), vt0.c0, ((((CAST(vt0.c0 AS BLOB))AND(vt0.c0)))OR(((vt0.c0)GLOB(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)!=(vt0.c0)) IN ()) FROM vt0 WHERE ((((((-627425784)) BETWEEN ((NULL)) AND ((NULL))))<>((~ ('771665338'))))); -- 0ms;
SELECT 0.022559338032143716 FROM vt0; -- 0ms;
SELECT ALL LTRIM(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))) FROM vt0 WHERE (CAST(x'' AS INTEGER) COLLATE RTRIM) GROUP BY CAST(ABS(vt0.c1) AS BLOB) HAVING 0.8157466535898465; -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c2)AND(x'')))OR(vt0.c0)) THEN vt0.c1 COLLATE NOCASE WHEN vt0.c2 THEN ((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)) WHEN (((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((x'', vt0.c1, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1))) THEN json_object(vt0.c1, vt0.c0) ELSE vt0.c1 COLLATE RTRIM END FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS NUMERIC) COLLATE BINARY, (((vt0.c2) IS FALSE) IN ()), CASE WHEN vt0.c1 THEN vt0.c1 COLLATE RTRIM ELSE COUNT(*) END FROM vt0 WHERE (COALESCE(DISTINCT (+ (x'')), ((0.7105867434442538)*(NULL)))); -- 0ms;
SELECT ALL (((NOT (vt0.c0)))<(vt0.c0)) FROM vt0 GROUP BY vt0.c1, ((((0.5396596287785214) NOT BETWEEN (0.5212111225526807) AND (vt0.c2)))>>(((vt0.c2) NOTNULL))), vt0.c1; -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM FROM vt0 LIMIT -675923647 OFFSET -866323599; -- 0ms;
SELECT DISTINCT ((vt0.c1 IN (vt0.c2)) IN ()) FROM vt0 WHERE (CAST(CASE WHEN 0.49496546190584456 THEN 0.5282634970801693 WHEN '' THEN 'Ou4' WHEN 0.4423369543879264 THEN NULL WHEN -0.0 THEN x'' WHEN 0x625a59e9 THEN 0.5561961518727843 END AS INTEGER)); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c1) NOTNULL) THEN ((vt0.c0)+(vt0.c0)) END FROM vt0 WHERE ('1942113516') GROUP BY ((((LIKELY(DISTINCT vt0.c1))OR(((vt0.c0)<=(vt0.c2)))))AND(((vt0.c2) BETWEEN (-575715557) AND (vt0.c0)))) HAVING (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END) AND (load_extension(vt0.c1, vt0.c1))) ORDER BY '' DESC LIMIT 1266922367;SELECT ALL ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)=(CASE WHEN NULL THEN vt0.c2 END)) FROM vt0; -- 0ms;
SELECT '1280938091', vt0.c0, ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE BINARY FROM vt0 WHERE (((((((((((0Xffffffffbc8861a1)-(0Xffffffffbf14b77f)))AND(CAST('' AS TEXT))))OR((+ ('')))))OR(CASE WHEN NULL THEN x'' END)))AND(NULL COLLATE BINARY))) LIMIT 1477786731; -- 0ms;
SELECT ALL (NOT ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), SUM(CASE WHEN vt0.c0 THEN vt0.c0 END), ((vt0.c1)/(vt0.c2)) COLLATE NOCASE FROM vt0 WHERE (((CASE WHEN NULL THEN x'' WHEN -278724614 THEN 0X167dbbcf WHEN 0.5869058446861869 THEN 'RCb	.xH&' END)<=(LIKELY(NULL)))); -- 0ms;
SELECT ((((((((0.7275365367863926)OR(((((((((vt0.c0)AND(vt0.c0)))AND(0x56e7637d)))AND(vt0.c1)))OR(0.827802384736119)))))OR(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(CAST(x'25fc' AS NUMERIC))))OR(((vt0.c0)||(vt0.c1)))), PERCENT_RANK() OVER ( ORDER BY vt0.c0 DESC  NULLS FIRST, (((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c2)) NOT BETWEEN ((0.2032674199821919, ((vt0.c0) NOTNULL), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)), ABS(DISTINCT vt0.c2), ((vt0.c0) NOT NULL))) AND ((vt0.c0, ((vt0.c2)LIKE(vt0.c1)), ((vt0.c0)IS NOT(vt0.c1)), vt0.c1 COLLATE BINARY, (x'' IN ()))))), (((vt0.c2 IN ())) BETWEEN (NULL) AND (((vt0.c1)GLOB(x'')))) FROM vt0 GROUP BY ((((((vt0.c2)!=('876830567')))AND(((vt0.c2) NOTNULL))))AND(highlight(vt0.c2, vt0.c1, vt0.c1, vt0.c0))) HAVING (CASE vt0.c0  WHEN vt0.c2 THEN '1361071597' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ());SELECT ((((vt0.c1)GLOB(NULL)))<((vt0.c2 IN ()))) FROM vt0 WHERE (COALESCE(((((((((0.01988813555234581)OR(0.17193586629847735)))OR(628789718)))AND(x'')))OR(x'')), '1985781797')); -- 0ms;
SELECT DISTINCT (~ (COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c1))) FROM vt0 WHERE ((((('1938986911')<<('A(')))<>(((x'6da1')-(0.8499125986095465))))); -- 1ms;
SELECT DISTINCT ((((((((((((vt0.c1)OR('MPl*35')))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c2)))AND(CAST(vt0.c0 AS REAL))))OR((((vt0.c0))!=((NULL))))) FROM vt0 WHERE (((((0xffffffffa8c0572f, '0.9219406447301248', 0.9874568384632343)) BETWEEN ((x'e992', NULL, '/E0l#cJ.6')) AND ((x'', NULL, -1))) IN (0.9128242113274766 COLLATE RTRIM))); -- 0ms;
SELECT ALL ((((((((LIKELIHOOD(vt0.c2, 0.7340639356203654))AND((vt0.c0 IN (vt0.c0)))))OR(NULL)))OR(CHAR(vt0.c0))))AND(COUNT(vt0.c1))), GROUP_CONCAT((+ (vt0.c1))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES), ((CASE WHEN vt0.c2 THEN 0X73dc0b29 ELSE vt0.c2 END)LIKE((- (x'9025')))) FROM vt0; -- 0ms;
SELECT DISTINCT (((('|+')AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))), CASE WHEN (vt0.c0 IN (vt0.c1, x'')) THEN CAST(vt0.c1 AS INTEGER) END, vt0.c1 FROM vt0; -- 0ms;
SELECT ALL COUNT((((vt0.c2))==((x'')))) OVER (), LAST_VALUE(((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c2)OR(vt0.c2))))) OVER (), '1051531091' FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c2) NOT NULL) AS REAL) FROM vt0 WHERE ((CASE x'c990'  WHEN x'cb2d' THEN 0.7188855890239225 END IN (((0.9452358678547663)=('\_'))))); -- 0ms;
SELECT DISTINCT (((vt0.c2 IN ())) ISNULL), CASE WHEN NULL COLLATE RTRIM THEN (+ ('-1558025734')) ELSE ((vt0.c1) NOT NULL) END, (vt0.c1 COLLATE NOCASE IN ()) FROM vt0 WHERE (((NULL) IS TRUE)); -- 0ms;
SELECT 'sG' FROM vt0; -- 1ms;
SELECT ((CASE WHEN vt0.c1 THEN vt0.c2 END) NOT BETWEEN ((vt0.c2 IN (vt0.c2, vt0.c1, vt0.c0))) AND (SUM(vt0.c0))) FROM vt0 WHERE (ROUND((~ (NULL)), ((0x3f6b863f) NOTNULL))) LIMIT 443745064 OFFSET 1064011327; -- 0ms;
SELECT DISTINCT (((('O懶')OR(vt0.c0)))OR(CAST(vt0.c0 AS REAL))) FROM vt0; -- 0ms;
SELECT ALL vt0.c2 FROM vt0; -- 0ms;
SELECT DISTINCT CASE CASE WHEN vt0.c2 THEN vt0.c2 ELSE 947238947 END  WHEN json_valid(NULL) THEN (+ (vt0.c2)) WHEN ((vt0.c1) BETWEEN (NULL) AND (vt0.c1)) THEN (((vt0.c0, vt0.c2, NULL)) BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c1, vt0.c2))) WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((vt0.c1) IS TRUE) END FROM vt0 WHERE ((((x'' IN ())) NOTNULL)); -- 0ms;
SELECT DISTINCT (((~ (vt0.c2))) BETWEEN ((~ (vt0.c2))) AND (CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE (((json_patch('', x''))!=('?NEHCIFB,')));SELECT UPPER(((vt0.c2) ISNULL)) FROM vt0 GROUP BY ((vt0.c1)=('u}j|g-')) HAVING ((((((vt0.c1)LIKE('-1049698493')))OR(CAST(vt0.c2 AS BLOB))))OR(vt0.c2 COLLATE NOCASE)); -- 0ms;
SELECT COUNT(vt0.c2) FILTER(WHERE CAST(vt0.c2 COLLATE BINARY AS REAL)) OVER (), '2/P!ENjU', COUNT(vt0.c0) OVER () FROM vt0 WHERE (((((((x'a661') NOT BETWEEN (0.7318906656017642) AND (0.6848894990634111)))OR(CAST(x'53636125' AS TEXT))))OR(((0x6695c8eb) BETWEEN (0.6339063047044606) AND (-1185796514))))); -- 0ms;
SELECT ALL (((((vt0.c1))>=((vt0.c1))))>=(CASE WHEN 'BR샳_wr' THEN vt0.c0 END)), ((((((vt0.c2)AND(0Xd2e0eea)))AND(vt0.c1)))!=((~ (vt0.c2)))), ((((((vt0.c1)AND(vt0.c2)))OR('&닠u87A죫}')))<<(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)) FROM vt0 WHERE ('6p_Q.PY*a') LIMIT 1389549951; -- 0ms;
SELECT (vt0.c1 IN (vt0.c2)) COLLATE NOCASE FROM vt0 WHERE (((MAX(x'', 0.14908253445716213))>((((-1.344568448E9)) BETWEEN (('')) AND ((x'170a')))))); -- 0ms;
SELECT DISTINCT (NOT (NULL)), CAST(DATE(vt0.c1, vt0.c1, vt0.c0) AS INTEGER), COUNT(CASE WHEN vt0.c1 THEN vt0.c0 END) COLLATE RTRIM FROM vt0 WHERE ((((x'')OR(-7.7357976E8)) IN ())) ORDER BY (((vt0.c0)OR(vt0.c2)) IN ())  NULLS FIRST, INSTR((('')GLOB(vt0.c2)), (vt0.c1 IN (vt0.c1))) DESC  NULLS FIRST; -- 0ms;
SELECT ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*), (MIN(vt0.c2) IN ()), COUNT(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))) OVER () FROM vt0 WHERE (CAST(DATE('377338831', NULL, x'a643') AS TEXT)); -- 0ms;
SELECT DISTINCT (MIN(vt0.c1) IN ()) FROM vt0 WHERE (((LIKE('m{#WB#', '{/5j잜', '-')) NOT NULL)); -- 0ms;
SELECT DISTINCT ((json(vt0.c1))LIKE(((vt0.c2)=(vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CAST(((0X2be47d4e) BETWEEN ('ST}G봉T') AND ('')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (vt0.c2 IN ()) COLLATE BINARY FROM vt0; -- 1ms;
SELECT DISTINCT (NOT (((vt0.c2) ISNULL))) FROM vt0; -- 0ms;
SELECT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT CASE (vt0.c1 IN (vt0.c1, vt0.c2))  WHEN (vt0.c2 IN (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c2 END, CAST(((NULL)>=(vt0.c0)) AS REAL), (+ ('0.9590934925836585' COLLATE RTRIM)), ((((((vt0.c2)==(vt0.c1)))AND(x'')))OR(CAST(vt0.c0 AS REAL))), GROUP_CONCAT((+ (vt0.c1))), SUM(TOTAL(SUM(vt0.c1))), (((vt0.c2 IN ())) BETWEEN (0.22776389934148988) AND ((((('')AND(vt0.c2)))OR(vt0.c0)))) FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c2 THEN NULL ELSE 0.3936481163351033 END COLLATE BINARY ASC  NULLS FIRST;SELECT DISTINCT ((((vt0.c2)<(vt0.c1)))<=((vt0.c1 IN ()))) FROM vt0 WHERE (((((((((((((1.7976931348623157E308)AND(0.8168842490157382)))OR(0.5002491995438006)))OR(0.41289754870803475)))AND(0.4605924595817038)))OR(x'')))OR(1865463475)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT COUNT((- (vt0.c0))) FROM vt0; -- 0ms;
SELECT x'' FROM vt0 WHERE (IFNULL((((NULL, 'ﶄA', '\~YV')) NOT BETWEEN ((NULL, '-1096548023', NULL)) AND (('|~', x'', x'37eb'))), ((-1.45653384E8)LIKE(0Xffffffffbea40149)))) GROUP BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0))<=((vt0.c2))))) AND ((NULLIF('-768430509', vt0.c0)))) HAVING CAST((('%N') NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS TEXT); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0 WHERE (x'448f') GROUP BY CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY HAVING (((vt0.c2)) BETWEEN ((GROUP_CONCAT(vt0.c2))) AND ((SUM(vt0.c1)))); -- 0ms;
SELECT DISTINCT (((('1942113516')OR(((vt0.c2) IS TRUE))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 1ms;
SELECT DISTINCT ((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))OR((vt0.c2 IN ()))) FROM vt0 LIMIT 1800139671 OFFSET 629019416; -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (-1.51216521E8); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c1, vt0.c2, vt0.c0, vt0.c1)) BETWEEN ((CAST(vt0.c1 AS REAL), (((vt0.c2))=((vt0.c0))), (vt0.c1 IN ()), ((vt0.c1) IS FALSE), vt0.c2)) AND ((vt0.c1 COLLATE RTRIM, COUNT(vt0.c1), x'04aa' COLLATE BINARY, (x'2f607953' IN ()), MAX(vt0.c0)))) FROM vt0 ORDER BY ((((((vt0.c1)GLOB('c(')))OR(vt0.c1)))OR(((((vt0.c2)AND(vt0.c0)))AND(vt0.c1)))); -- 0ms;
SELECT DISTINCT (((+ (vt0.c0))) NOT BETWEEN (vt0.c2) AND (CAST(vt0.c1 AS REAL))) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((((0.4652742366157434) NOT NULL))) AND (((NOT ('-1537548082')))))) LIMIT 2129107614 OFFSET -746156828; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) ISNULL) FROM vt0 WHERE (((((((((UPPER(DISTINCT '2103728464'))OR(((('p')) BETWEEN (('-1282409582')) AND ((0.9827906723584985))))))OR(((0.28022364611617456)GLOB(0.46735071692626773)))))OR((~ (x'')))))OR(((x'') BETWEEN (0.3419546681961555) AND (x'af50'))))); -- 0ms;
SELECT ALL GROUP_CONCAT(RTRIM(vt0.c1)) FROM vt0 GROUP BY (+ (vt0.c0)); -- 0ms;
SELECT ((((vt0.c1) NOTNULL)) IS FALSE) FROM vt0 WHERE ((((((('1e500') ISNULL))OR((0.5228552906543183 IN ()))))AND(((x'')>>(x''))))) ORDER BY ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))) IS TRUE); -- 0ms;
SELECT ALL ((((((((CAST(vt0.c1 AS INTEGER))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))))OR(-1.502488015E9)))OR((vt0.c1 IN ()))))OR(x'd795')) FROM vt0 WHERE ((NOT (NULL))) ORDER BY (~ (((vt0.c1) NOT NULL))) DESC; -- 0ms;
SELECT DISTINCT (((vt0.c1, vt0.c1, vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, (vt0.c2 IN ()), vt0.c2 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), MAX(vt0.c1))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 END, CAST(0.003319074908448072 AS BLOB), PRINTF(vt0.c0), ((NULL)%(vt0.c0)), vt0.c1 COLLATE NOCASE))), ROW_NUMBER() OVER (), COUNT('\nexx)ീ') COLLATE NOCASE, (NOT (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))), CASE WHEN vt0.c2 COLLATE RTRIM THEN vt0.c2 COLLATE BINARY END FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0)|(vt0.c0)))), NULL, CASE WHEN ((vt0.c1) IS FALSE) THEN json(vt0.c2) END FROM vt0; -- 0ms;
SELECT ALL SUM(((vt0.c2)=(vt0.c2))) OVER () FROM vt0 WHERE (((((((x'') ISNULL))OR(CASE WHEN NULL THEN NULL WHEN x'5f7d3313' THEN x'' WHEN NULL THEN '1949047746' ELSE '-1463789777' END)))OR(CASE WHEN -1191160595 THEN NULL WHEN NULL THEN -1.28625901E8 WHEN 'Oi玒gJ8h>' THEN 0.04715151661388628 WHEN '' THEN '' WHEN '-52_조sr弴' THEN '1972550770' END))); -- 0ms;
SELECT CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) THEN 0x4b83b37f END FROM vt0 WHERE ((((''))<=((0.04552603894558216))) COLLATE RTRIM) ORDER BY x'' DESC; -- 0ms;
SELECT DISTINCT json_insert(vt0.c0, ((vt0.c0) IS FALSE), ('炌i\ntPM!	' IN ())) FROM vt0;SELECT ((((((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM, (NOT (((vt0.c0)=(vt0.c0)))), (((vt0.c2, x'', vt0.c0)) NOT BETWEEN ((COUNT(*), x'', vt0.c0 COLLATE BINARY)) AND (((vt0.c2 IN ()), ((vt0.c0)%(x'')), x''))) FROM vt0 WHERE ((((',0.''' IN ())) NOT BETWEEN ((('滻\6Qa')-('0.9219406447301248'))) AND (((x'') NOT NULL)))) ORDER BY ((((vt0.c2)<<(vt0.c0)))LIKE((((vt0.c0))>((vt0.c1))))) ASC  NULLS LAST LIMIT -1674307266; -- 1ms;
SELECT DISTINCT QUOTE(CAST(vt0.c0 AS TEXT)), (vt0.c0 IN (vt0.c2)) COLLATE NOCASE, ((COUNT(*)) BETWEEN (vt0.c2 COLLATE NOCASE) AND ((vt0.c0 IN (vt0.c2)))), ((((((((((vt0.c2)*(0.35748463903443406)))OR(CASE vt0.c1  WHEN 'Z蛥q' THEN vt0.c2 ELSE vt0.c0 END)))OR(0.7454057652638488)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))))OR((((vt0.c0))<((vt0.c2))))), vt0.c2 FROM vt0; -- 0ms;
SELECT DISTINCT ((MAX(vt0.c2)) ISNULL), MAX((((vt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c0))), ((0.6165657643938939)+(vt0.c0))), ((((vt0.c1) NOTNULL)) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>(((vt0.c1) NOT NULL))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END COLLATE BINARY FROM vt0 WHERE (CAST(('*|w*' IN ()) AS TEXT)); -- 0ms;
SELECT DISTINCT (NOT ((- (vt0.c0)))) FROM vt0 WHERE (CASE WHEN 950919029 THEN (('')>=(0.7377616270480793)) WHEN LENGTH(0Xffffffffe410c44d) THEN ((x'')*(-232579714)) WHEN (('0.19814297835603167') BETWEEN (NULL) AND (NULL)) THEN ((((((((0.7036170251347875)AND('951150968')))OR(x'3fd2')))AND('')))AND(NULL)) END); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 WHERE ((((('-2101082895') IS FALSE)) ISNULL)); -- 1ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((((- (769089642)))*(((0.006791806708623671)>(',gKb'))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1)<>(vt0.c1)) THEN ((vt0.c1)+(vt0.c1)) END, (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END IN ()), JULIANDAY((((vt0.c0))>((vt0.c2))), vt0.c2 COLLATE BINARY, UNLIKELY(vt0.c1)) FROM vt0 WHERE (((((NULL) IS TRUE))>>(((NULL)>=('|BW'))))) LIMIT -397754130 OFFSET 822093261; -- 0ms;
SELECT DISTINCT UPPER((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) FROM vt0 WHERE (((CAST(NULL AS NUMERIC))GLOB('1305881027'))); -- 0ms;
SELECT ((((((((vt0.c1)AND(((vt0.c1) IS FALSE))))AND(AVG(vt0.c2))))OR(json_insert(vt0.c0, vt0.c1, vt0.c0))))OR(vt0.c1)) FROM vt0;SELECT DISTINCT SQLITE_COMPILEOPTION_USED(vt0.c0) COLLATE BINARY, vt0.c0, ((((UNLIKELY(DISTINCT vt0.c2))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))))AND(((vt0.c1)OR(vt0.c1)))) FROM vt0 WHERE (CAST(((('A', '2G( !Z?O', x'')) BETWEEN (('0.747213560619098', 0.985080250994081, 0.2763452234389733)) AND ((NULL, 0.6186229639809416, '1166290596'))) AS INTEGER)); -- 0ms;
SELECT ((vt0.c1)*(COUNT(vt0.c0))) FROM vt0 WHERE ((((x''))>=(('-2125675897'))) COLLATE BINARY); -- 0ms;
SELECT ((TOTAL_CHANGES()) NOT BETWEEN ('') AND (((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))) FROM vt0; -- 0ms;
SELECT ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END) IS FALSE) FROM vt0 WHERE (HEX(((x'598a')GLOB(x'')))); -- 1ms;
SELECT (((vt0.c2 IN ()))=(((vt0.c0)<>(vt0.c0)))), ((json_valid(vt0.c2))!=((- (vt0.c0)))), DATE(vt0.c2 COLLATE RTRIM, ((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)), (~ (vt0.c0))) FROM vt0 WHERE ((((NULL) IS FALSE) IN (NULL))); -- 0ms;
SELECT ALL GROUP_CONCAT((vt0.c2 IN ())), ((vt0.c2) ISNULL), (((0x3091313b IN ()))>((((vt0.c1))==((NULL))))) FROM vt0 WHERE ((((CASE x''  WHEN NULL THEN 1.942113516E9 ELSE x'' END))<=((((x'aff5') BETWEEN (x'') AND (NULL)))))); -- 0ms;
SELECT DISTINCT vt0.c1, CAST((~ (vt0.c2)) AS NUMERIC), IFNULL(DISTINCT (~ (4.81264067E8)), (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) FROM vt0 WHERE (x''); -- 1ms;
SELECT COUNT(CAST(vt0.c0 AS BLOB)) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0)&(vt0.c2)))OR(((x'')<=(0.3431974394226309)))))AND(((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)))) FROM vt0; -- 0ms;
SELECT ALL ((((x'') NOT BETWEEN (vt0.c1) AND (vt0.c2)))OR((- (vt0.c0)))) FROM vt0 WHERE ((((((0.1614182917402388) BETWEEN (-2004951734) AND ('fvR#gGLg')), ((0X4b91ec13) NOT NULL), ((((0.1712189729499538)AND(0Xffffffffeeee9f32)))AND(x'')), ((0.7214952480088387) BETWEEN (NULL) AND (x'1ad7')), ((NULL) NOT NULL)))!=((RTRIM(''), json(x''), ((NULL)GLOB(0X31dbbb7e)), x'', (+ (NULL)))))); -- 1ms;
SELECT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) IN ()), (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) COLLATE RTRIM, (((vt0.c1 IN (vt0.c0, vt0.c2, vt0.c0)))<<(((vt0.c0) IS FALSE))) FROM vt0 WHERE ((((x'' IN ())) ISNULL)); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((DATE(vt0.c0, x'8080', vt0.c1, vt0.c1, vt0.c1))) AND ((vt0.c0))) FROM vt0 WHERE ((- (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CASE WHEN (+ (vt0.c2)) THEN ((vt0.c0)<=(x'')) ELSE ((vt0.c0) NOT NULL) END, GROUP_CONCAT(vt0.c2) OVER (), CAST(CASE WHEN vt0.c2 THEN vt0.c0 END AS NUMERIC) FROM vt0 WHERE (CASE WHEN '0Q+5''|<t' COLLATE RTRIM THEN LOWER(x'') ELSE (NULL IN ()) END); -- 0ms;
SELECT (((+ (vt0.c0)))>((~ (vt0.c1)))) FROM vt0 WHERE ((((((((NULL, x'', '95120922')) NOT BETWEEN ((0.33813932724411166, x'', x'')) AND ((x'', x'', NULL))))AND(((((((((0.023280777615462322)AND('')))AND('-849731121')))OR(0x146a480c)))OR(x'')))))OR(((x'') NOTNULL)))) GROUP BY ((((vt0.c1 IN ())))<=((((vt0.c0)>=(vt0.c2))))) HAVING vt0.c0 COLLATE NOCASE; -- 0ms;
SELECT DISTINCT (~ (UPPER(vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((x'') NOT BETWEEN (vt0.c0) AND (0.31155223515656505))) IS TRUE), SUM(GROUP_CONCAT(vt0.c0)) COLLATE NOCASE, '-1687895318' COLLATE NOCASE FROM vt0 WHERE (0x517b6ab8);SELECT ((vt0.c1 IN ()) IN ()), ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) COLLATE RTRIM, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))>=((((vt0.c2)) NOT BETWEEN ((x'9d70')) AND ((vt0.c2))))) FROM vt0 WHERE (((((NULL)&('/^>'))) BETWEEN (CASE WHEN '-1e500' THEN 0.9230508009267094 ELSE '1118497960' END) AND ((('-1241853668') IS FALSE)))); -- 0ms;
SELECT ((NULL)<<((((vt0.c2))>=((vt0.c1))))) FROM vt0 WHERE (((((0Xffffffffa07546ee) IS FALSE))==(CAST(0.29169346574517196 AS BLOB)))); -- 0ms;
SELECT ALL CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) AS REAL), LAG((((vt0.c0, '86224867', vt0.c0)) NOT BETWEEN (((((vt0.c0))<=((vt0.c2))), (~ (vt0.c0)), (((vt0.c1))<=((x''))))) AND ((json_object('q', vt0.c1), vt0.c1 COLLATE BINARY, ((vt0.c1) NOT BETWEEN (-1.705215514E9) AND (NULL))))), COALESCE(((vt0.c0)+(vt0.c0)), (vt0.c1 IN ())), ((((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c2)))*((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((x'')))))) OVER (), (((~ (vt0.c1))) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT ((((TRIM(DISTINCT vt0.c2))OR(((vt0.c1) NOT BETWEEN (-128625901) AND (vt0.c2)))))AND(((vt0.c1) NOTNULL))) FROM vt0 GROUP BY (((vt0.c0)%(vt0.c2)) IN (CAST(vt0.c2 AS TEXT))), CAST(((vt0.c0) IS TRUE) AS BLOB), (((vt0.c1, vt0.c1, vt0.c2)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)), (vt0.c0 IN ()), 0.6505463555357518)) AND ((CAST(vt0.c1 AS REAL), ((vt0.c1)-(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) LIMIT -1458430162 OFFSET 268648806; -- 0ms;
SELECT ((CAST(vt0.c2 AS TEXT)) IS FALSE), CAST(ROUND(0Xffffffffa54c8f0f, vt0.c2) AS TEXT), ((((vt0.c2) ISNULL)) BETWEEN (((vt0.c1)>>(vt0.c1))) AND ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))) FROM vt0 WHERE (CASE WHEN x'' THEN CAST('879619350' AS NUMERIC) ELSE ((0.4265005605111166)AND(NULL)) END); -- 0ms;
SELECT DISTINCT (+ ((NOT (vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT ABS(((vt0.c2)||(NULL))) FROM vt0 WHERE (TRIM(DISTINCT (0x704f658 IN ()))); -- 0ms;
SELECT DISTINCT (('') NOTNULL) FROM vt0 WHERE (NULL); -- 1ms;
SELECT ALL 0.7447803543104331 FROM vt0 WHERE (0.6605536998169836); -- 0ms;
SELECT DISTINCT ((vt0.c2)IS(0.05781407051421805)) COLLATE RTRIM, (((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, -2.009391726E9, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c2, vt0.c1, vt0.c2, vt0.c2)))) NOTNULL), (((((vt0.c2)) BETWEEN ((vt0.c2)) AND (('-923600190')))) NOT BETWEEN (((vt0.c2)*(vt0.c0))) AND (((((vt0.c1)OR('	>})C0')))OR('-1632028172')))) FROM vt0 ORDER BY ((((((((((((((((vt0.c0)OR('-2034092637')))AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c2)))OR('')))))AND(x'')))AND(vt0.c2)) DESC; -- 0ms;
SELECT ((vt0.c1 IN ()) IN (((vt0.c0) BETWEEN ('') AND (vt0.c0)))), CAST((vt0.c2 IN ()) AS TEXT), NTH_VALUE(((((vt0.c0)|(vt0.c0))) BETWEEN ((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))), x'') OVER () FROM vt0 WHERE ((- ((('k칈n') NOT BETWEEN (1003269860) AND (NULL))))); -- 0ms;
SELECT SUM(((vt0.c0)&(vt0.c1))) FILTER(WHERE (((vt0.c0 IN (vt0.c1))) NOT BETWEEN (((vt0.c1)IS(vt0.c2))) AND (vt0.c2 COLLATE BINARY))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))))>=((((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c0))))), CAST(vt0.c2 AS REAL), 0Xffffffffc0820309 FROM vt0 WHERE (((((1.385110339E9)+(x''))) ISNULL)); -- 0ms;
SELECT ALL NULLIF(COUNT(*), vt0.c1 COLLATE BINARY) FROM vt0 WHERE (((('1') BETWEEN (1943390530) AND (NULL)) IN (INSTR('', '247458784')))) LIMIT 972233876 OFFSET -689031123; -- 0ms;
SELECT (((~ (x'')))*(((vt0.c0) IS TRUE))), (+ (vt0.c0 COLLATE BINARY)), ((SQLITE_SOURCE_ID())<<(AVG(vt0.c1))) FROM vt0 WHERE (CAST((NOT ('975238809')) AS NUMERIC)) LIMIT 1189622402 OFFSET -1059428653; -- 0ms;
SELECT vt0.c0 COLLATE RTRIM FROM vt0; -- 0ms;
SELECT NULL FROM vt0 WHERE ((+ ((('Tk') NOT NULL)))); -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=((vt0.c0 IN ()))) FROM vt0 GROUP BY (((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND (((vt0.c1 IN (vt0.c1))))); -- 0ms;
SELECT DISTINCT NULLIF(((vt0.c0)+(vt0.c0)), ('' IN ())) FROM vt0 WHERE (CAST((~ (NULL)) AS BLOB)); -- 0ms;
SELECT ALL CAST(TOTAL(vt0.c0) AS TEXT) FROM vt0 LIMIT 1807808342 OFFSET 1263088735; -- 1ms;
SELECT MAX((((vt0.c1))>=((vt0.c2))) COLLATE BINARY), ((((vt0.c2)<=('弹'))) NOT BETWEEN ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c0, vt0.c0, vt0.c2)))) AND ((-1463789777 IN (x'')))), vt0.c0 FROM vt0 NOT INDEXED WHERE (CASE WHEN ((((((((']6C1')AND(0.8903348760571387)))AND(x'')))AND(-6.89031123E8)))AND(x'')) THEN (+ ('1280938091')) WHEN ((-2106777323) BETWEEN ('⺤*VzLS!{') AND (0.07232218409989144)) THEN ((NULL)GLOB(1.385110339E9)) WHEN CASE x''  WHEN 0.8124313928273138 THEN '' END THEN '' ELSE (((NULL)) NOT BETWEEN (('r2')) AND ((''))) END); -- 0ms;
SELECT DISTINCT ((((vt0.c0 IN ()), ((vt0.c2)OR(vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END))<(((vt0.c2 IN ()), vt0.c1 COLLATE NOCASE, ((vt0.c0) IS FALSE)))), (('-2091724684' COLLATE NOCASE) BETWEEN (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))), (JULIANDAY(vt0.c2, vt0.c1, vt0.c1) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)OR((- (vt0.c0)))) FROM vt0 WHERE (((((((x'', 1622147995, 0.9773028553823827)) BETWEEN ((0.8721820243855432, x'b2d9', 0.23821592174188122)) AND ((122970626, '-805200811', NULL)))))<>((((((((((NULL)OR('zⲿ}w䩆rNE')))OR('0.847450256093041')))AND(x'')))AND(x'')))))); -- 0ms;
SELECT DISTINCT ((((((((((((vt0.c0)AND('Z#2h^zz	')))OR(vt0.c1)))OR((~ ('-232579714')))))AND((+ (vt0.c0)))))OR(((vt0.c1)|(vt0.c2)))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND (('Uz'))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 END)AND('76IA<r柔')))OR(0.22024359911530456)) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((MIN(vt0.c2), (((x'4043'))=(('H5'))), 0Xffffffffa32269fa)) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.c1 AS NUMERIC), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0; -- 1ms;
SELECT ALL ((((((vt0.c1)OR(vt0.c2)))OR(NULL)))IS NOT(((vt0.c0)%(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE((~ (((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))), (((NULL, vt0.c2, ((vt0.c0) IS TRUE), CAST(vt0.c2 AS NUMERIC), vt0.c2))>=(((- (vt0.c2)), json_remove(vt0.c0, vt0.c2), vt0.c2, vt0.c1 COLLATE NOCASE, ((vt0.c1)>=(vt0.c0)))))) OVER (), (CASE WHEN NULL THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END IN ()), CAST(NULL AS REAL) FROM vt0 ORDER BY (((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR((vt0.c0 IN (vt0.c1)))))OR(TRIM(DISTINCT vt0.c1)));SELECT ALL (~ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0 WHERE ((((('Dp8F\r^䳬8') NOT BETWEEN ('0.11043269976635994') AND (NULL)))&((~ (0.40415819140944254))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c0)) ISNULL), 0.7666890894118084, (((vt0.c2))<((vt0.c2))) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)+(IFNULL(vt0.c1, vt0.c0))), LAG(json_remove(NULL, (((vt0.c0, vt0.c2, vt0.c1)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c1, NULL)))), ((vt0.c1 COLLATE NOCASE) BETWEEN (CHAR(vt0.c1)) AND (((vt0.c1) IS TRUE))), (- ((+ (''))))) OVER (), COUNT((vt0.c2 IN ())) OVER () FROM vt0 LIMIT 2084558539 OFFSET -1224599598 UNION SELECT DISTINCT (((LTRIM(vt0.c1, vt0.c2), ((vt0.c1)AND(vt0.c1)), (vt0.c1 IN ())))<=(('1158594803', vt0.c2 COLLATE RTRIM, TYPEOF(vt0.c2)))), (+ (((vt0.c1) NOT NULL))), ((NULL) NOT BETWEEN (TOTAL(x'')) AND (x'808b')) FROM vt0 WHERE ((((((((x'2fca')) BETWEEN ((-8.57810797E8)) AND ((''))))AND((~ ('0.02829641301300756')))))AND(CAST(0.8581741382632972 AS TEXT))));SELECT DISTINCT SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END COLLATE NOCASE) FROM vt0 WHERE ((((CASE x''  WHEN 0xffffffff983dd83c THEN 0X45842ea4 END))<>(((((NULL))<=(('1158594803'))))))); -- 0ms;
SELECT ALL AVG(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, ((((((((((((((vt0.c0) NOTNULL))AND((- (NULL)))))AND((((vt0.c1))<((vt0.c1))))))OR((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))))OR(((vt0.c2)IS NOT(vt0.c1)))))AND(CAST(0.5884588770570389 AS REAL))))AND(vt0.c0 COLLATE NOCASE)), CAST(vt0.c2 AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)<=(vt0.c2)))OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))))OR('MI')))AND((((vt0.c1, vt0.c2, 0.0754194392408769))=((0.7566373913941383, vt0.c2, 789842858))))))OR(AVG(vt0.c0))) FROM vt0 WHERE ((((((((x'ffd5'))<=((0.5543364870144631))))OR((1.051531091E9 IN ()))))AND(TOTAL_CHANGES()))) ORDER BY '1385110339' COLLATE BINARY ASC; -- 1ms;
SELECT ALL 0.4408837207987961 FROM vt0 WHERE ((((x'' IN ())) BETWEEN (CASE WHEN '9223372036854775807' THEN '' ELSE 0.8590489139927975 END) AND (('' IN ())))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c2)GLOB(vt0.c2)))OR((((vt0.c0))==((vt0.c0))))))OR((NOT (vt0.c2)))))OR((('-682505655')+(-2.004951734E9)))))AND(COUNT(*))) FROM vt0 WHERE (CAST('ᜁp' COLLATE RTRIM AS REAL)); -- 0ms;
SELECT DISTINCT (- (((vt0.c2) IS FALSE))) FROM vt0 WHERE (((((((('')) BETWEEN ((NULL)) AND ((0.5843648436653305))))AND(MAX(0.2169009333500439, -1.687895318E9, 0.5558417492263431, NULL))))OR((('')|(0.3051263513556166))))); -- 0ms;
SELECT DISTINCT ((((+ (vt0.c0)), ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)), LAST_INSERT_ROWID(), CASE WHEN ')1AE#T' THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, CASE vt0.c1  WHEN NULL THEN '' END))<>((((vt0.c2)GLOB(vt0.c2)), AVG(vt0.c2), CASE WHEN vt0.c0 THEN NULL ELSE vt0.c1 END, ((vt0.c0) BETWEEN (0x5695ef0f) AND (vt0.c1)), (+ (vt0.c2)), ((vt0.c0)<>(vt0.c0)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))))) FROM vt0 WHERE (CASE WHEN 168244927 COLLATE NOCASE THEN CAST(x'' AS BLOB) ELSE ((('', 'g8{N5Dz', x'922b'))<(('1256481300', x'', -898160421))) END) ORDER BY ((((vt0.c1) IS TRUE))!=((((0.02044118667917938, vt0.c1, vt0.c2))!=(('', vt0.c1, vt0.c2)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), CAST(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS NUMERIC), AVG(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END) OVER () FROM vt0 GROUP BY (NOT (0.9793994311812032)) HAVING ((((vt0.c1 COLLATE BINARY)OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))))OR(SUM(vt0.c0))) ORDER BY (((vt0.c1 IN ()))>>(((((vt0.c0)AND(vt0.c0)))OR('-186069432')))) ASC; -- 1ms;
SELECT ALL (((vt0.c2 IN ())) NOTNULL) FROM vt0 WHERE ((((~ (NULL)))|(CASE WHEN NULL THEN '-1440910976' ELSE x'' END))); -- 0ms;
SELECT DISTINCT (((757196605, LIKE(vt0.c2, vt0.c1, '-'), (NOT (vt0.c1))))>(('-2101082895', ((vt0.c1) NOT NULL), ((vt0.c2) IS FALSE)))) FROM vt0 WHERE (CASE ((-1532280277)<>('-1284770441'))  WHEN ((2105938398) NOT BETWEEN (x'eaa80793') AND (NULL)) THEN ((x'd823')>('nP䉬n{hq')) ELSE (((((((('')AND(NULL)))AND(NULL)))OR(x'')))AND('-1379760668')) END); -- 0ms;
SELECT DISTINCT MAX(x'') FROM vt0; -- 0ms;
SELECT CAST('' COLLATE NOCASE AS INTEGER), ((((vt0.c1))>((vt0.c2))) IN ()), LAST_VALUE(LIKELIHOOD((((vt0.c2))>((vt0.c0))), 0.24038085739838777)) OVER () FROM vt0 WHERE (((((NULL)AND(NULL)))AND('695859640')) COLLATE BINARY); -- 0ms;
SELECT ALL (('w볫?5R-?')/(vt0.c0)), COALESCE(DISTINCT 0.046930886208243705, CAST(vt0.c0 AS REAL), ((vt0.c2)-(vt0.c2)), TOTAL(vt0.c0)), ((vt0.c1) IS FALSE) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT HEX(CAST(vt0.c1 AS NUMERIC)) FROM vt0 WHERE ((highlight(0.6019883972086754, NULL, 'C^/	>4f/', 0.7330935261205838) IN (CASE 0.351086335438035  WHEN 0.006834120747295391 THEN '-2101082895' WHEN '' THEN '-689031123' WHEN 0.7063578637284622 THEN 1.051531091E9 WHEN 0.10238382546691605 THEN '' WHEN x'8d10' THEN x'' END, (((x'6d2e', 0.5980083379739263, NULL)) NOT BETWEEN ((x'', x'', 'now')) AND ((NULL, '-917316969', '-605509234'))))));SELECT DISTINCT ((((NULL)AND(vt0.c2)))AND('-1')) COLLATE RTRIM, (~ (CAST(vt0.c0 AS BLOB))), SQLITE_COMPILEOPTION_USED(x'17e7e1bba3ca') FROM vt0 WHERE (((((NULL)GLOB(0.608005461819371))) IS FALSE)) ORDER BY ABS((((vt0.c1, vt0.c2, vt0.c2))=((vt0.c0, vt0.c1, vt0.c1))))  NULLS LAST; -- 0ms;
SELECT DISTINCT TOTAL(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END) OVER () FROM vt0 WHERE ((((((('1xn{a6') IS FALSE))AND(CAST('Bam' AS INTEGER))))OR(CAST(NULL AS REAL)))); -- 0ms;
SELECT (((vt0.c2)) NOT BETWEEN ((TRIM(DISTINCT vt0.c2))) AND ((((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT ((NOT (vt0.c0)))), ((MAX(x'')) IS FALSE), ABS(vt0.c2 COLLATE BINARY) FROM vt0 WHERE ((~ (json(x'')))) GROUP BY ((((vt0.c2)GLOB(NULL)))||(ABS(vt0.c2))) HAVING vt0.c1;SELECT ALL ((MIN(vt0.c2))<=((~ (vt0.c1)))), (~ (RTRIM(vt0.c2))), LAST_VALUE(((CASE WHEN vt0.c1 THEN vt0.c2 END) BETWEEN (((NULL)||(vt0.c0))) AND (((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))))) OVER ( PARTITION BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END)<=((((vt0.c0))<((x'220b'))))), ((vt0.c1)|(((vt0.c0)+(vt0.c2)))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c1))!=((vt0.c0))) WHEN ((vt0.c1)+(vt0.c2)) THEN ((vt0.c2)AND(vt0.c2)) WHEN ((vt0.c1) NOTNULL) THEN vt0.c2 END, TRIM(json(vt0.c1))) FROM vt0 GROUP BY vt0.c2 ORDER BY (((((vt0.c0 IN ()))AND(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)&(vt0.c2)))) ASC, ((((vt0.c0) IS FALSE))IS NOT(HEX(DISTINCT vt0.c2))) DESC, ((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 END) NOTNULL) ASC  NULLS FIRST;SELECT DISTINCT (('1571338537')>(x'dc67')) FROM vt0 WHERE (CAST(1.49454378E9 AS REAL)) GROUP BY ((((vt0.c2) NOT NULL))|((- (vt0.c1)))) LIMIT -848547445; -- 0ms;
SELECT ALL (~ (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)) FROM vt0 WHERE (((json_remove(0x2bd3dafa, '-867231522', x'', 0.5067572622658474))LIKE(NULL))) GROUP BY NULL HAVING (~ (vt0.c1 COLLATE NOCASE)) LIMIT 316758069 OFFSET 168210220;SELECT DISTINCT ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) IN ()) FROM vt0; -- 0ms;
SELECT vt0.c2, CAST(vt0.c2 AS TEXT), ((((((((((-673260816)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))LIKE(vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE vt0.c1  WHEN (NULL IN ()) THEN ((0.9046581649932592)GLOB(vt0.c1)) ELSE ((vt0.c0)IS NOT(vt0.c2)) END FROM vt0 GROUP BY ((vt0.c0 IN ()) IN ()) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c2) NOT NULL))) AND ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((vt0.c2)AND(x'cfcd')))AND(vt0.c2)))IS(((vt0.c1)IS NOT(vt0.c2)))), '377338831', (((vt0.c1 IN ()))|(((vt0.c1) NOT NULL))) FROM vt0 WHERE ((((ABS(DISTINCT 0.25133324722033956), (NULL IN ()), (~ (0.4041673331123794))))<=(((('-798900556') NOT BETWEEN ('-234831393') AND (0.4129178237165324)), TRIM(DISTINCT 'F+ct槺As', -151429404), LIKE(0.6990088966989675, 0X1bd8f195, '*'))))); -- 0ms;
SELECT ALL TOTAL((((vt0.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, vt0.c0, x'')) AND ((vt0.c2, vt0.c1, vt0.c0)))) FROM vt0; -- 0ms;
SELECT (NOT (CAST(vt0.c1 AS BLOB))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT ALL ((((((((TRIM(vt0.c0, vt0.c1))AND(vt0.c2 COLLATE RTRIM)))AND(NULL)))AND(CAST(vt0.c1 AS BLOB))))AND(vt0.c0 COLLATE RTRIM)), CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c0 ELSE (~ (vt0.c1)) END, ((vt0.c2 IN ()) IN ()) FROM vt0 WHERE (CASE WHEN CASE 0.7761720122375216  WHEN 0xffffffff99616cb6 THEN '' ELSE 0.6268761968532266 END THEN NULL COLLATE RTRIM END); -- 1ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c2)||(vt0.c1))) AND (COUNT(*))) FROM vt0 WHERE (TRIM(DISTINCT (((0.504564650730013))==((NULL))))) GROUP BY (((((((((- (vt0.c2)))AND(HEX(vt0.c2))))OR(DATE(vt0.c0, vt0.c2, vt0.c1))))AND(((vt0.c2) NOTNULL))))AND(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))), vt0.c1, ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))%(vt0.c1)) HAVING (vt0.c0 IN (vt0.c1)) COLLATE NOCASE; -- 0ms;
SELECT ALL (~ ((vt0.c1 IN ()))), ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))|(NULLIF(0.7214952480088387, vt0.c0))), LIKELY(0.4688061207858727) FROM vt0 GROUP BY (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) IN (NULLIF(vt0.c1, vt0.c1))); -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))) AND (((((vt0.c1))==((vt0.c0)))))), (((vt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((0Xffffffffe97467b5, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c2))), CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS REAL))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((vt0.c2) ISNULL), (vt0.c2 IN ())))), ((vt0.c0) NOTNULL) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT (NOT (((vt0.c1) NOT NULL))) FROM vt0 WHERE ((((NULL)) NOT BETWEEN (((+ (NULL)))) AND (('213346742')))); -- 0ms;
SELECT DISTINCT ((vt0.c0)|(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 GROUP BY (((((((((((((((vt0.c0, vt0.c0, vt0.c2))>((vt0.c2, vt0.c2, vt0.c1))))AND(UNLIKELY(DISTINCT vt0.c2))))AND(((vt0.c0)<=(vt0.c0)))))OR(TRIM(vt0.c2, vt0.c2))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(vt0.c2)))OR((- (vt0.c0)))); -- 0ms;
SELECT CAST(CAST(vt0.c0 AS REAL) AS REAL) FROM vt0 GROUP BY (((((((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((x'', vt0.c2, '-1e500')) AND ((vt0.c0, NULL, vt0.c0))))OR((((vt0.c0, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, vt0.c1)) AND ((vt0.c1, x'', vt0.c2))))))OR((- (732865000)))); -- 0ms;
SELECT ALL CAST((vt0.c1 IN ()) AS BLOB) FROM vt0 WHERE (((((('-1555001821' IN ()))AND((~ ('')))))AND(NULLIF(DISTINCT NULL, '/6UJ*')))) GROUP BY CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) AS NUMERIC), vt0.c2, UNLIKELY((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) HAVING ROUND((((vt0.c2, vt0.c1, '-1379760668'))>=((vt0.c1, vt0.c0, vt0.c1))), GLOB(vt0.c0, vt0.c0)); -- 0ms;
SELECT ALL (((vt0.c2) ISNULL) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((COALESCE(DISTINCT vt0.c2, vt0.c2, '1617389139', vt0.c0)) NOTNULL) FROM vt0 WHERE ((((('2105938398')<=(0.615296727971243))) ISNULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((((((vt0.c0)OR(vt0.c1)))OR('-1344568448')))AND(vt0.c0)))OR(vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((vt0.c2) NOT BETWEEN (-1671257093) AND (vt0.c0))) BETWEEN (UPPER(vt0.c2)) AND ((('')GLOB(vt0.c0)))), ((((((((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN '䰝Xp㌰X☃' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c2)>(vt0.c1)))))AND((vt0.c1 IN (vt0.c2)))))OR(('' IN ()))))AND(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR('-828216756')))OR(vt0.c0))))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM vt0; -- 1ms;
SELECT LTRIM(((x'') NOT NULL), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) FROM vt0 LIMIT -167262850; -- 0ms;
SELECT DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN '*' THEN vt0.c0 WHEN vt0.c2 THEN 'J?''b' END COLLATE RTRIM, ((TOTAL(vt0.c2))!=(LIKELIHOOD('\nj,rv', 0.32273820857227464))), ((('')) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((- (vt0.c2))))) FROM vt0 WHERE (CASE (('9>g9LM#I') IS FALSE)  WHEN NULL THEN UNLIKELY(x'de68') END); -- 0ms;
SELECT DISTINCT (UNLIKELY(DISTINCT vt0.c1) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)<(vt0.c1)) FROM vt0 ORDER BY (((0.15212958201969418)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) IS FALSE)))), (((((((((((0.5703160308457256, vt0.c2, vt0.c2, vt0.c0, vt0.c0, vt0.c2, vt0.c2))>((vt0.c0, vt0.c2, vt0.c1, vt0.c2, vt0.c2, 'vN᳴龽', '('))))OR((NOT (vt0.c2)))))OR(x'')))AND(-9223372036854775808)))OR((vt0.c2 IN ())))  NULLS FIRST, UPPER(DISTINCT ''), TYPEOF(LOWER(DISTINCT vt0.c0)) DESC; -- 0ms;
SELECT DISTINCT 'Lgm.Q7', (((CASE WHEN vt0.c1 THEN vt0.c0 END, SUM(vt0.c2), vt0.c2))>((((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)), (vt0.c1 IN ()), JULIANDAY(vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)))), ROW_NUMBER() OVER (), (((0.08511929187784784) ISNULL) IN ()), (((((vt0.c0, vt0.c0, '', vt0.c2, vt0.c2))!=((vt0.c2, vt0.c2, vt0.c1, vt0.c1, vt0.c2)))) NOT BETWEEN ((NOT ('T\r'))) AND ((~ (vt0.c2)))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c2)IS(vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c1)+(vt0.c1))), ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) COLLATE RTRIM, TOTAL(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END) OVER (), TOTAL(((vt0.c1)+(vt0.c1))), ((((vt0.c1) IS FALSE))>>(((vt0.c0)-(vt0.c1)))) FROM vt0; -- 1ms;
SELECT ALL ((vt0.c2 COLLATE NOCASE)IS(MAX(vt0.c0))) FROM vt0; -- 0ms;
