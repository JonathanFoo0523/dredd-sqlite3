-- Time: 2024/06/07 17:54:41
-- Database: database83
-- Database version: 3.40.0
-- seed value: 1144487883
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1); -- 0ms;
UPDATE vt0 SET (c0, c1)=('-1928977893', '-1928977893') WHERE (((((NULL))<((vt0.c1)))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) AND (vt0.c0 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE vt0 SET c1='^9' WHERE (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)), '-1532096548')) AND ((((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND('-1360223070')))OR(vt0.c0)))OR(vt0.c0)))AND(0X7fffffffffffffff)), ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), (~ (vt0.c0))))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31739'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-628519605,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1928977893);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE vt0 SET c0=x''; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-628519605'), (x'5667'), (x'4ec1'); -- 0ms;
ANALYZE vt0; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE vt0 SET (c1, c0)=(0xffffffffbd11d0b3, NULL) WHERE '-1360223070'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42256'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA busy_timeout = 730253577313941095; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES ('ppH|-6', '-1532096548'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (0.7627183202043625); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE CASE ((vt0.c0)GLOB(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN vt0.c0 COLLATE NOCASE ELSE (vt0.c1 IN (vt0.c1)) END; -- 1ms;
UPDATE OR IGNORE vt0 SET c0='861598862' WHERE LOWER(0.26802853308994734); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1867973053); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c0)=('-628519605') WHERE (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)); -- 0ms;
UPDATE OR REPLACE vt0 SET c0=x'', c1=x'' WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c1) NOT NULL), vt0.c0))>((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)), (vt0.c0 IN ()), (+ (vt0.c0))))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=861598862,2');\n; -- 0ms;
UPDATE OR ABORT vt0 SET c0=-6.28519605E8, c1=NULL, c0=NULL WHERE ((NULL) IS TRUE); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-881042235 noskipscan'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 542508411); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1122905933);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1584004091); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1929008295); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ABORT vt0 SET (c1, c1)=(0.01100145456214252, NULL) WHERE CAST((vt0.c0 IN ()) AS NUMERIC); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.locking_mode = NORMAL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 414747217); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET c1=770063516, c0=x'bac9' WHERE ((((PRINTF(vt0.c0))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
PRAGMA main.stats; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '25260'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 486269164); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (NULL), (NULL), (0.07255722418064214); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=760373691,8');\n; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1) VALUES ('770063516', NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.04327333891669427; -- 5ms;
UPDATE OR IGNORE rt0 SET (c2, c2)=(NULL, '760373691') WHERE ((((((rt0.c0)<(rt0.c1)))AND(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=165735132,10');\n; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c1=0.04018301635072774, c1=x'd66c' WHERE ((vt0.c1)=((vt0.c1 IN (vt0.c1)))); -- 0ms;
REINDEX RTRIM; -- 0ms;
PRAGMA main.soft_heap_limit = 0; -- 1ms;
DROP TABLE vt0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'a605'); -- 1ms;
UPDATE OR IGNORE rt0 SET c0=x'5dd8'; -- 1ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='-551243894', c2=332721260, c2=NULL WHERE (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END IN ()); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'9763'; -- 4ms;
PRAGMA temp.journal_size_limit; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, x'', '?G''Q'), (NULL, x'8f36', 'WET6ʭzw>'), ('1072091530', 0Xffffffff8b36e143, '-1928977893'), (NULL, NULL, 0.952809732098218), (x'', x'', '暤ጫG(^i'); -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
UPDATE rt0 SET c0='-182163804', c1='L^'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.541008656826434) WHERE UNLIKELY((rt0.c2 IN ())); -- 0ms;
UPDATE OR ABORT rt0 SET c1=x'', c0='릦*|G'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c1)=('', '1154739014'); -- 0ms;
ANALYZE main; -- 0ms;
UPDATE rt0 SET c0=NULL; -- 1ms;
INSERT OR FAIL INTO rt0(c2) VALUES ('1701319467'); -- 0ms;
PRAGMA main.stats; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(511704105) WHERE (~ (((((rt0.c1)OR(rt0.c0)))OR(NULL)))); -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA temp.default_cache_size; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='Cd '; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=0.20774460959226204; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-416110297 noskipscan'); -- 0ms;
PRAGMA main.secure_delete = true; -- 0ms;
PRAGMA short_column_names; -- 0ms;
ANALYZE; -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CASE (('1995674980') NOT NULL)  WHEN NULL THEN NULL ELSE x'' END FROM rt0; -- 0ms;
SELECT ALL UNLIKELY(((rt0.c2) ISNULL)), ((LIKELY(rt0.c1)) NOT BETWEEN (COUNT(rt0.c1)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))))), rt0.c2 FROM rt0 GROUP BY ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(((rt0.c0)>>(rt0.c2)))))OR(0.2949825687042257)); -- 0ms;
SELECT ALL (((AVG(rt0.c2)))<((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) FROM rt0 UNION ALL SELECT DISTINCT ((((rt0.c1)AND(0.21411435292327774)))AND(UNLIKELY(rt0.c0))) FROM rt0 NOT INDEXED WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL) FROM rt0 WHERE (('511704105' IN ()) COLLATE RTRIM); -- 1ms;
SELECT (((CAST(rt0.c1 AS TEXT), (((x'd942', 0.32191304501169904, 'ZBs')) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))>((((((((((((((rt0.c0)AND(rt0.c0)))OR(NULL)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS BLOB)))) FROM rt0; -- 0ms;
SELECT ALL CASE ((rt0.c2) IS FALSE)  WHEN (((rt0.c0))<=((1.904261542E9))) THEN (rt0.c1 IN ()) ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END END FROM rt0 GROUP BY ((((rt0.c2)&(rt0.c0))) NOTNULL), ((((((rt0.c2)+(rt0.c1)))OR(-785450591)))OR(((rt0.c0)%(rt0.c2)))), ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c0)AND(rt0.c0)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(0.5286653165035716) OVER ( ORDER BY (((rt0.c1)) BETWEEN (((- (1.701319467E9)))) AND (((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c1)))))), (((~ (rt0.c1)))IS NOT(((rt0.c2)%(rt0.c0)))) ASC  NULLS FIRST) FROM rt0; -- 0ms;
SELECT DISTINCT ((((x'')LIKE(rt0.c2))) NOT NULL) FROM rt0 WHERE (((x'')GLOB('1995674980')) COLLATE NOCASE) LIMIT -785450591; -- 0ms;
SELECT DISTINCT (+ ((rt0.c0 IN ()))) FROM rt0 WHERE (CAST((((NULL, 'bnk\rHUwi', x'')) BETWEEN ((x'', NULL, '-1532096548')) AND (('', 'l鵯!vX', -9223372036854775808))) AS REAL)) LIMIT -133314120 OFFSET 464919095; -- 0ms;
SELECT DISTINCT (((('ZBs')AND((((rt0.c2))<((rt0.c1))))))OR(rt0.c0 COLLATE BINARY)) FROM rt0 WHERE (((((0.6657854416889407)) NOT BETWEEN ((0.8706193826507505)) AND ((x''))) IN ())) GROUP BY ((((((((((1646853928) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))))OR((NOT (rt0.c1)))))OR((~ (rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN 'Zm>^[' WHEN rt0.c1 THEN rt0.c2 ELSE NULL END)); -- 0ms;
SELECT ((((rt0.c0 IN ()), (rt0.c1 IN (rt0.c1)), rt0.c2))>(('	{', (('-259821887')IS NOT(0.01100145456214252)), rt0.c0))), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE BINARY, (((rt0.c2)) NOT BETWEEN ((((rt0.c1)||('')))) AND ((HEX(DISTINCT rt0.c2)))), '閡Fꤧ.jf', LOWER(rt0.c0) FROM rt0 WHERE (CAST(((x'')<<(-2.59821887E8)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT 547156401 FROM rt0; -- 0ms;
SELECT DISTINCT CASE SUM(rt0.c1)  WHEN (- (rt0.c1)) THEN ((rt0.c2)IS(rt0.c1)) END FROM rt0; -- 0ms;
SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))))AND(((rt0.c2)||(rt0.c0)))) FROM rt0 WHERE (CAST(CASE WHEN 0.9424933231827564 THEN '1154739014' WHEN 0.07255722418064214 THEN '^9' WHEN '-1122905933' THEN 0.6657854416889407 END AS BLOB)) LIMIT -1839925480 OFFSET 1025986987; -- 0ms;
SELECT DISTINCT (((('-1928977893') BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (('-1830567399' IN ()))) FROM rt0; -- 0ms;
SELECT ALL (CASE WHEN rt0.c0 THEN rt0.c0 END IN (((rt0.c2) NOT NULL))) FROM rt0 WHERE (CASE WHEN 0.896994628960373 COLLATE RTRIM THEN 0.19219922952318858 ELSE x'2687' COLLATE BINARY END); -- 0ms;
SELECT ABS(DISTINCT ((-1.830567399E9)<<(rt0.c2))) FROM rt0; -- 0ms;
SELECT ALL (((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR(((0.36887118939903396)/(rt0.c1)))))OR(((((rt0.c0)OR(rt0.c1)))OR(x'')))))AND(((x'')==(rt0.c0)))))AND((((rt0.c0))>((rt0.c0))))) FROM rt0 WHERE ((((((x'')) NOT BETWEEN ((0.04327333891669427)) AND ((x''))))IS(CAST(x'644e' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL), ((rt0.c2) NOT NULL), ((CAST(rt0.c2 AS BLOB))%(CAST(0.2060641496281238 AS TEXT))), GROUP_CONCAT(((rt0.c2)<(rt0.c1))), ((CAST(rt0.c0 AS TEXT))<>((- ('^9')))) FROM rt0 NOT INDEXED GROUP BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))/((rt0.c2 IN (rt0.c0)))); -- 0ms;
SELECT CASE WHEN CAST(rt0.c2 AS TEXT) THEN rt0.c1 END FROM rt0 GROUP BY CAST(rt0.c1 AS TEXT); -- 0ms;
SELECT ((((rt0.c2)LIKE(rt0.c0)))<<(((rt0.c1) NOT NULL))) FROM rt0 WHERE (CAST(CASE '-881042235'  WHEN 0.6657854416889407 THEN NULL END AS BLOB)); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)*(rt0.c1)))OR(MIN(rt0.c1))))OR(NULL)) FROM rt0; -- 0ms;
SELECT rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT (+ ((((x''))>=((rt0.c0))))), COUNT(((rt0.c1)>(rt0.c0))) OVER (), CASE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END  WHEN (((rt0.c0, '''a', rt0.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN (+ (rt0.c0)) END, (((NOT (rt0.c1))) NOT BETWEEN (rt0.c1) AND (((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))), ((COUNT(rt0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c2)||(rt0.c2)))) FROM rt0 WHERE ((((((((((('0.2060641496281238') NOT BETWEEN (0.7236616083744556) AND ('-962405657')))AND((- (NULL)))))OR(((0.9573642008874448) NOTNULL))))AND(((x'')<=(0x6ea118c8)))))AND(x'1992' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT LEAD(0xffffffffcb895b20, CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.6657854416889407 END THEN CASE 0.5755302473868232  WHEN rt0.c1 THEN rt0.c0 END END, (NOT (0.7236616083744556))) OVER ( ORDER BY ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR((~ (rt0.c2)))))AND(((rt0.c0)LIKE(rt0.c2)))) ASC) FROM rt0 WHERE (((((('''')) NOT BETWEEN ((0.3917253121823103)) AND ((0.9573642008874448)))) NOT BETWEEN ((((726655302)) BETWEEN ((NULL)) AND ((0.6515961198670531)))) AND ((((('(X1673226796681604832-1834 840T-4828332680053744112:201 1678:-3304993702725288730T1677T?')AND(x'')))OR(NULL))))); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c2)))>=(((rt0.c0) BETWEEN (0.23048692269205973) AND (rt0.c2)))), CUME_DIST() OVER (), COUNT(*) OVER ( PARTITION BY ((((((rt0.c2)&(rt0.c1)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)))AND(LTRIM(rt0.c2))), ((rt0.c0 COLLATE BINARY)<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) FROM rt0 WHERE (((((((NULL) IS FALSE))OR(((NULL)+(x'')))))OR(CASE '1855774533'  WHEN 'IfL' THEN 0.5582123864741915 END))); -- 0ms;
SELECT DISTINCT ((('QO俸斄m6')) BETWEEN ((((x'67ae8769') IS FALSE))) AND ((rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)OR(rt0.c1)))AND(x'')))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c1)+(rt0.c2)))) FROM rt0 WHERE ((((((x''))>=((NULL))))AND(((((x'')OR(0.9424933231827564)))OR(0.8277310786059494))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS NUMERIC) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) FROM rt0 GROUP BY ((rt0.c0 IN ()) IN ()); -- 0ms;
SELECT '-546293245', ((+ (rt0.c0)) IN ()), ((CAST(rt0.c1 AS BLOB)) IS FALSE) FROM rt0 GROUP BY '閡Fꤧ.JF', CASE ((rt0.c0)*(rt0.c1))  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((-1e500) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END, ((CAST(rt0.c0 AS REAL))<<(HEX(DISTINCT rt0.c0))) HAVING ((0.3745452658092233)AND((~ (rt0.c2)))); -- 0ms;
SELECT DISTINCT rt0.c1, rt0.c2, ((CAST(0.5755302473868232 AS BLOB))>>(rt0.c0)) FROM rt0 WHERE (CASE CASE WHEN '770063516' THEN 0Xffffffff9038fd9f WHEN '1225629039' THEN NULL WHEN 0.5275969399774693 THEN '944514017' ELSE '-133314120' END  WHEN TRIM(5.47156401E8) THEN ABS(NULL) WHEN (('?G''Q')<('/襘1')) THEN (- (0.7085831441379427)) WHEN (('') NOT BETWEEN (NULL) AND (0.2382596243925269)) THEN '-2028542385' ELSE (((x''))<=((0.5351388515064266))) END) GROUP BY load_extension(((rt0.c1)||(rt0.c1))) HAVING ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c2)IS(rt0.c2)))) ORDER BY CASE (NOT (rt0.c0))  WHEN COALESCE(DISTINCT rt0.c2, rt0.c1) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN CAST(rt0.c1 AS REAL) WHEN (('-1548925573')-(rt0.c2)) THEN x'' END ASC, ((((((((((x'')||(rt0.c0)))AND(((rt0.c0) NOTNULL))))AND((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))))OR(rt0.c2 COLLATE RTRIM)))AND((rt0.c2 IN ())))  NULLS LAST, ((rt0.c1 IN ()) IN (CAST(rt0.c0 AS INTEGER))) ASC;SELECT DISTINCT ((NULL) IS FALSE), GROUP_CONCAT(CAST(rt0.c0 AS BLOB)), (((MAX(rt0.c0), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (+ (NULL))))!=((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), (~ (rt0.c2)), ((rt0.c0) NOTNULL)))) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c0)||(NULL)) FROM rt0 WHERE (CAST((('-1492475365') BETWEEN (x'') AND (0.4316130674212768)) AS INTEGER)) LIMIT 944514017 OFFSET -1166651177; -- 0ms;
SELECT ALL (~ ((rt0.c0 IN (rt0.c1)))) FROM rt0 WHERE ((+ ((((x'', '464919095', NULL))<>((0.3693698070710614, '-1360223070', 747005944)))))); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT rt0.c1), (((rt0.c2)*(rt0.c1)) IN ()), LIKE((rt0.c0 IN ()), (((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) FROM rt0; -- 0ms;
SELECT ((((rt0.c2))<=((rt0.c0))) IN ()), (((rt0.c2 IN ()))==(((rt0.c1)>>(rt0.c2)))), 0.4153107581796046 FROM rt0 NOT INDEXED WHERE (TRIM((- (0.3618690847042143)), (('WET6ʭzw>')IS(0.2383413596704177)))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((NULLIF(DISTINCT rt0.c1, rt0.c0))) AND ((((rt0.c2) IS FALSE)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((((((((- (0.4925627500459676)))OR(rt0.c1)))AND((((((((('1072091530')OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(NULL)))))AND(rt0.c2)))OR(CAST(rt0.c1 AS REAL))), -1702809989, COUNT(*) FROM rt0 WHERE ((((('1959877117') NOT BETWEEN (0x3aa5c28) AND (0.8984499862059361))) NOT BETWEEN ((((NULL))>((0.7680021234813172)))) AND ((x'8df4' IN ())))); -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT NULL) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL((rt0.c1 IN ())) OVER ( ORDER BY (+ (((rt0.c1)<<(NULL)))) DESC), (((((rt0.c1))=((rt0.c1))))+(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)), rt0.c2, ((rt0.c0)&(rt0.c1)), rt0.c0 FROM rt0 WHERE (((x'1f9ebbe2') NOT BETWEEN (CASE WHEN x'' THEN 0.3193089684837511 ELSE 1701319467 END) AND (('747005944' IN ())))); -- 0ms;
SELECT ALL CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM, ((MAX(rt0.c1)) BETWEEN ((+ (rt0.c1))) AND (((rt0.c2)!=(rt0.c2)))) FROM rt0 WHERE ((((('-1303553048' COLLATE RTRIM)OR((('-2045729670')>(NULL)))))OR(x'960c' COLLATE BINARY))); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_GET(CASE WHEN 0.7045985993001082 THEN rt0.c2 ELSE rt0.c0 END), (((rt0.c1))=((rt0.c0))) COLLATE BINARY, (((((rt0.c1 IN (rt0.c1)))AND((rt0.c1 IN ()))))OR(MIN(rt0.c1))) FROM rt0 WHERE (NULLIF(DISTINCT 0.13984522325834448, '25') COLLATE NOCASE); -- 1ms;
SELECT ALL ((((rt0.c0) IS TRUE))IS(((rt0.c0)<(rt0.c0)))), TOTAL(((rt0.c1)-(rt0.c1))) FILTER(WHERE json_extract(((((((((((((rt0.c2)OR(-1395775885)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))) OVER (), RTRIM((- (rt0.c1))) FROM rt0;SELECT ALL COUNT(rt0.c1) OVER ( ORDER BY (((rt0.c1, rt0.c2, NULL, rt0.c0, rt0.c1)) BETWEEN (((((rt0.c2)) BETWEEN (('5I')) AND ((rt0.c2))), CAST(rt0.c2 AS NUMERIC), ((rt0.c2) ISNULL), CAST(rt0.c0 AS REAL), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((rt0.c0 COLLATE NOCASE, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2, ((x'785a5c20') NOT NULL), rt0.c2 COLLATE BINARY)))  NULLS LAST) FROM rt0 WHERE (((('165735132', x'', '1154739014', -5.51243894E8, '#V#H')) BETWEEN ((x'', '1154739014', '-1531016872', '', 1072091530)) AND ((NULL, x'f724', 1.025986987E9, NULL, x''))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ()))OR((rt0.c1 IN ()))), IFNULL(DISTINCT ((rt0.c0) IS FALSE), ''), TOTAL((+ (rt0.c0))) OVER (), (NOT (((rt0.c2)||(rt0.c1)))), ((((rt0.c1)IS(rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) AND (((rt0.c1) NOT NULL))) FROM rt0; -- 0ms;
SELECT PERCENT_RANK() OVER (), (rt0.c1 IN ()), (((rt0.c0) NOT BETWEEN (-0.0) AND (rt0.c2)) IN ()) FROM rt0 LIMIT 1225629039; -- 0ms;
SELECT DISTINCT MIN((~ (0.8464264656716756))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 THEN TYPEOF(rt0.c0) WHEN ((((x'')OR(rt0.c1)))OR(rt0.c2)) THEN UPPER(DISTINCT rt0.c2) WHEN ((rt0.c1) IS FALSE) THEN (((('aF')AND(rt0.c0)))OR('-881042235')) END FROM rt0; -- 0ms;
SELECT x'' FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS NUMERIC), QUOTE(rt0.c2), MAX((NOT (rt0.c1)), rtreenode(rt0.c1, '1991790831'), rt0.c1, TYPEOF(rt0.c0)) FROM rt0 WHERE (((NOT (NULL)) IN ())); -- 0ms;
SELECT DISTINCT (((('&-')OR(rt0.c2))) NOT BETWEEN (((rt0.c2)OR(rt0.c0))) AND ((((rt0.c2))=((rt0.c0))))), ((rt0.c0) NOT BETWEEN ((- (rt0.c1))) AND (GROUP_CONCAT(rt0.c1))), CASE ((rt0.c0)IS NOT(1013752922))  WHEN TOTAL(rt0.c0) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END FROM rt0 WHERE (CAST(CASE x''  WHEN x'' THEN NULL ELSE NULL END AS INTEGER)) EXCEPT SELECT DISTINCT (((((NOT (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0)IS(rt0.c1)))), GROUP_CONCAT(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) OVER ( RANGE  CURRENT ROW), (~ (rt0.c2)) COLLATE BINARY FROM rt0 WHERE (x'0e83'); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0 WHERE ((((LIKELY('-628519605')))<>((json_quote('2057473210'))))); -- 2ms;
SELECT ((rt0.c0 COLLATE NOCASE)>>(rt0.c2 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((NULL)) NOT BETWEEN (('v(ꫛ')) AND ((-1222089454))) IN (COALESCE('Ld	y0Rw寨.', x'')))) GROUP BY (NOT (rt0.c1 COLLATE RTRIM)) HAVING ((((((rt0.c1)<=(rt0.c1)))AND(rt0.c2 COLLATE BINARY)))OR((((rt0.c1))<=((rt0.c0))))); -- 0ms;
SELECT DISTINCT ((LTRIM(rt0.c1, rt0.c2)) ISNULL) FROM rt0 WHERE (((((x'937aec8b') BETWEEN (x'') AND (''))) BETWEEN ((('2<姽R-')||(x''))) AND (((NULL) IS FALSE)))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))|(CAST(rt0.c1 AS BLOB))); -- 0ms;
SELECT ALL COUNT(LIKELY(rt0.c2)) OVER (), rt0.c2, (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END IN ((((('-1083651763')AND(rt0.c0)))OR(rt0.c1)), ((rt0.c1) ISNULL))) FROM rt0 LIMIT -1983827100; -- 1ms;
SELECT DISTINCT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(GROUP_CONCAT(rt0.c0))))AND((rt0.c2 IN ()))) FROM rt0 GROUP BY ((rt0.c1 COLLATE BINARY) BETWEEN (rt0.c2 COLLATE RTRIM) AND (LIKELIHOOD(rt0.c2, 0.18556488108032287))); -- 0ms;
SELECT DISTINCT NULL FROM rt0 GROUP BY rt0.c0 ORDER BY (((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c0)))) IS TRUE) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c0 AS NUMERIC) WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN (((rt0.c0, rt0.c0, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END WHEN rt0.c1 THEN ((((((((rt0.c0)OR('-546293245')))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) WHEN x'' COLLATE RTRIM THEN HEX(DISTINCT rt0.c1) ELSE (- (rt0.c2)) END DESC; -- 0ms;
SELECT (NULL IN ()) COLLATE RTRIM FROM rt0 WHERE (CAST(((((x'')AND(NULL)))OR(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))||(((rt0.c2) NOT NULL))), (((((((rt0.c0)OR(']/ ')))AND(rt0.c2)), ((rt0.c0) ISNULL), ((rt0.c2)<=(x''))))>=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END, CASE rt0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c1 END, ((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))), rt0.c0 FROM rt0; -- 0ms;
SELECT TOTAL(0.7808891934750173), ((rt0.c1 IN ()) IN ()), (((LIKE(rt0.c1, rt0.c1, '-')))=((MIN(rt0.c1)))) FROM rt0 WHERE (((CASE WHEN -2.109232421E9 THEN x'' END)==(UPPER(0.23421720914687183)))) UNION SELECT (NULL IN ()) COLLATE NOCASE, x'2328', SUM(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END) OVER () FROM rt0 WHERE (LIKELIHOOD(0.9269969045227274 COLLATE RTRIM, 0.08171718974796471)); -- 0ms;
SELECT ALL (((((rt0.c1))<>((rt0.c0)))) NOTNULL), ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((+ (rt0.c2))) AND (((rt0.c0) NOT NULL))), (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c0 IN ()), TOTAL(rt0.c1), ((((x'')AND(rt0.c0)))OR(rt0.c2)))) AND ((1e500 COLLATE BINARY, x'5ada', (~ (rt0.c0))))) FROM rt0 GROUP BY CAST('FALSE' AS TEXT); -- 0ms;
SELECT DISTINCT ((~ (rt0.c0)) IN ()) FROM rt0 WHERE (CASE ((5.47156401E8)GLOB(x'40aa'))  WHEN (0.896994628960373 IN ()) THEN CAST('r' AS BLOB) WHEN (((x'', x'4f43', -1222089454)) BETWEEN ((1.99567498E9, 0.4316130674212768, '?-')) AND ((0.5473487568509925, 0.08362671579349878, NULL))) THEN ((0.16240448764956827) IS TRUE) WHEN 0x7aa28cba COLLATE RTRIM THEN (0.4886346027997496 IN ()) END) ORDER BY ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY DESC, (((((NOT (rt0.c2)))OR((rt0.c2 IN (rt0.c2, rt0.c0)))))OR(rt0.c0)) DESC  NULLS LAST; -- 0ms;
SELECT CAST('aM' AS BLOB) FROM rt0 WHERE (((((x'65d8dbb3') NOT BETWEEN ('9223372036854775807') AND (0xffffffffbf3f3c06))) ISNULL)) ORDER BY ((((((((HEX(rt0.c2))OR('-1038233774')))OR(NULL)))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) DESC; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)>(CAST(rt0.c0 AS TEXT))), rt0.c0, CAST(rt0.c1 COLLATE BINARY AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS NUMERIC))>(((rt0.c0) NOT NULL))) FROM rt0; -- 0ms;
SELECT DISTINCT MAX(IFNULL(DISTINCT rt0.c2, x'b4f8')), (('l憻1')-((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))), COUNT(*) OVER () FROM rt0 WHERE ((CAST(x'' AS BLOB) IN ())); -- 0ms;
SELECT ALL (((rt0.c1 IN ())) NOT BETWEEN ((((rt0.c0, rt0.c0, rt0.c2))<>((rt0.c2, rt0.c2, rt0.c2)))) AND (COUNT(*))) FROM rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((json_type(rt0.c2))LIKE(((rt0.c0)/(rt0.c2)))) FROM rt0 WHERE ((('T&iA') BETWEEN (-1.492475365E9) AND (0.989386873439003)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT rt0.c0, CASE rt0.c0  WHEN ((rt0.c0) NOT NULL) THEN UNLIKELY(x'') END, CASE WHEN TOTAL(rt0.c2) THEN (((rt0.c1, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))) END FROM rt0 WHERE ((CAST(0.9424933231827564 AS REAL) IN (((NULL)AND(-1166651177))))); -- 1ms;
SELECT ((CAST(rt0.c1 AS REAL))<(rt0.c0 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT ((LAST_INSERT_ROWID()) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) AND (rtreenode(rt0.c0, rt0.c1))), CHANGES(), (((rt0.c2)>(rt0.c2)) IN ()) FROM rt0 WHERE (CAST('9' COLLATE NOCASE AS REAL)); -- 0ms;
SELECT ALL (((rt0.c1 IN ())) ISNULL) FROM rt0 LIMIT 833925504; -- 0ms;
SELECT NTILE((- (((rt0.c2)>(rt0.c0))))) OVER () FROM rt0;SELECT ALL (~ (CAST(rt0.c2 AS INTEGER))), (MIN(rt0.c0) IN ()), CAST(rt0.c0 AS TEXT) FROM rt0; -- 0ms;
SELECT NTH_VALUE(CASE WHEN (~ (rt0.c2)) THEN NULL ELSE GLOB(rt0.c1, rt0.c1) END, CAST(((rt0.c1) NOTNULL) AS NUMERIC)) OVER () FROM rt0; -- 0ms;
SELECT (NOT (rt0.c1)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ((((((rt0.c0)-(rt0.c0)))AND(SQLITE_VERSION())))AND(LIKELY(DISTINCT rt0.c2))) FROM rt0 WHERE ((((((NULL)OR('0.19219922952318858')))AND('944514017')) IN ())) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((511704105)))  NULLS LAST, ((NOT (rt0.c2)) IN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) DESC; -- 0ms;
SELECT ALL ((((0.7078064821646275) IS TRUE)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0)) FROM rt0 WHERE ((('-2028542385') NOT NULL)); -- 0ms;
SELECT DISTINCT RANK() OVER ( PARTITION BY ((((rt0.c2)>(rt0.c0))) BETWEEN (x'' COLLATE NOCASE) AND (((rt0.c2)>>(rt0.c0)))), UPPER((rt0.c0 IN ()))), rt0.c1, CASE ((rt0.c2)&(rt0.c2))  WHEN GROUP_CONCAT(NULL) THEN (rt0.c1 IN (rt0.c1, rt0.c1)) END FROM rt0 GROUP BY rt0.c1 ORDER BY (rt0.c1 COLLATE BINARY IN ())  NULLS FIRST; -- 1ms;
SELECT DISTINCT CASE WHEN TRIM(rt0.c2, rt0.c0) THEN ((rt0.c2) NOT BETWEEN (0.2060641496281238) AND (rt0.c0)) WHEN SUM(rt0.c2) THEN rt0.c0 COLLATE RTRIM WHEN TOTAL(rt0.c1) THEN CAST(rt0.c1 AS TEXT) END FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((0.02392511533051822, rt0.c1, rt0.c0))<>((rt0.c2, rt0.c2, rt0.c1))) THEN (rt0.c2 IN ()) ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END FROM rt0 GROUP BY IFNULL(DISTINCT rt0.c2, rt0.c1) COLLATE BINARY; -- 0ms;
SELECT ALL (NOT (SUM(rt0.c0))) FROM rt0; -- 0ms;
SELECT ALL rt0.c2 FROM rt0; -- 0ms;
SELECT rt0.c2 FROM rt0 WHERE ((- (load_extension(x'f129'))));SELECT SUM((rt0.c0 IN ())), COUNT(*), ((('/n韴V'))>=((((rt0.c2)>>(rt0.c1))))) FROM rt0 WHERE (('' COLLATE NOCASE IN ())); -- 0ms;
SELECT UPPER(rt0.c2) COLLATE NOCASE, LIKELY(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))), MIN((((((((('1588819150')AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2))), '99&8)4c}m', ((MIN(rt0.c0))LIKE(NULLIF(rt0.c0, rt0.c1))) FROM rt0 WHERE (CAST(CASE 0.04211010147001004  WHEN x'' THEN 'g&' ELSE '749437072' END AS TEXT)) GROUP BY ((((rt0.c0)IS(rt0.c0)))<>(CAST(rt0.c0 AS NUMERIC))) HAVING (('-1531016872')<<(TOTAL(rt0.c0))); -- 0ms;
SELECT COUNT((rt0.c0 IN ())) FROM rt0 WHERE (CASE WHEN (+ (NULL)) THEN x'' WHEN (('(\')AND(NULL)) THEN ((1.7976931348623157E308)-(-1983827100)) WHEN ((-1500555015) BETWEEN (0.3130690248001571) AND (x'8d53')) THEN (~ ('-141677706')) ELSE x'' COLLATE NOCASE END); -- 0ms;
SELECT ALL ((x'') NOT BETWEEN (((rt0.c2) NOTNULL)) AND (CAST(rt0.c0 AS REAL))) FROM rt0; -- 0ms;
SELECT ALL ((UPPER(rt0.c2))!=(rt0.c1 COLLATE BINARY)), (- (0.792957841096227)), CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END THEN (rt0.c2 IN (rt0.c1)) END FROM rt0 WHERE (0.02126747448365629) GROUP BY (((rt0.c1) NOT NULL) IN ()); -- 0ms;
SELECT DISTINCT (((((((((rt0.c0 IN (rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(((rt0.c1)|(rt0.c1)))))OR((rt0.c1 IN ()))))AND('1597241974')) FROM rt0 WHERE ((((0xffffffffa70aa21b IN (0.12858385183446985)))|(IFNULL(DISTINCT 0.7590298453845037, x'5981')))); -- 0ms;
SELECT ALL CAST((rt0.c2 IN (rt0.c2, rt0.c1)) AS BLOB), JULIANDAY(rt0.c1 COLLATE RTRIM, (((x'3ac9', 0.7627183202043625, rt0.c0))<((rt0.c2, rt0.c1, rt0.c1))), rt0.c0), (((COALESCE(DISTINCT NULL, NULL), (- (rt0.c1)), COUNT(rt0.c2)))<((((rt0.c2)=(rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END, CAST(rt0.c2 AS BLOB)))) FROM rt0 WHERE ((json_patch('0.8706193826507505', 0.640940546423796) IN (CASE '166804437'  WHEN x'' THEN -1702809989 END))); -- 0ms;
SELECT DISTINCT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(rt0.c1 COLLATE RTRIM)), ((rt0.c1)<(((0.6515961198670531)/(rt0.c2)))), ((((rt0.c1)AND(rt0.c2)))OR(0.4316130674212768)) COLLATE BINARY FROM rt0 WHERE ((((('61496360' IN ())))==((((('861598862', x'2d14', x''))>=((x'', '0.7085831441379427', NULL))))))) ORDER BY CASE rt0.c2  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((((((((x'4bf1')AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)) END  NULLS FIRST, (NOT (CAST(rt0.c1 AS REAL))); -- 0ms;
SELECT LIKELY((rt0.c2 IN (rt0.c2, rt0.c0))) FROM rt0 WHERE ((((json_valid('1995674980')))>((((1.904261542E9)LIKE('')))))); -- 0ms;
SELECT (UPPER(DISTINCT rt0.c1) IN ()) FROM rt0; -- 0ms;
SELECT ALL rt0.c1, CAST(CAST(rt0.c0 AS REAL) AS INTEGER), (SUM('') IN ()) FROM rt0; -- 0ms;
SELECT ALL ((((((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR((rt0.c1 IN ()))))OR(NULL)))AND(COALESCE(rt0.c1, rt0.c0))))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0 WHERE ((CASE '5,iWv'  WHEN 0Xffffffffd0d0ea87 THEN 0.4208038232463531 ELSE '-791614841' END IN ())); -- 0ms;
SELECT DISTINCT SUM(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))), (- (x'b264')), load_extension(LIKELIHOOD(DISTINCT rt0.c0, 0.21717593467482355)) FROM rt0;SELECT ((rt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c0)&(rt0.c2)))) FROM rt0 WHERE ((((~ (0.553949374945752)))<>(x''))); -- 1ms;
SELECT DISTINCT CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)<>(rt0.c0)) THEN (~ (rt0.c0)) ELSE (rt0.c0 IN (rt0.c0, rt0.c1)) END FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)LIKE(rt0.c1)))/(rt0.c1 COLLATE BINARY)) FROM rt0 WHERE (((((((0.1574570085825876, '', '-910619311')) BETWEEN ((0.27257873469478444, '', NULL)) AND ((x'', '-1647282534', 'g&')))))<>((CAST(0.6674046553721474 AS NUMERIC))))); -- 0ms;
SELECT x'33fc' COLLATE NOCASE FROM rt0; -- 0ms;
SELECT (((((((('288211755')AND((- (rt0.c1)))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))))AND(UNLIKELY(DISTINCT rt0.c2))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM rt0 WHERE ((('166804437' COLLATE RTRIM)AND(0.896994628960373 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) FROM rt0 WHERE (((DATE(-1.875313249E9, 180498114, x''))!=((x'' IN ())))); -- 0ms;
SELECT DISTINCT (rt0.c1 COLLATE RTRIM IN ()) FROM rt0; -- 0ms;
SELECT ALL ABS(DISTINCT rt0.c1) COLLATE NOCASE FROM rt0 WHERE ((+ (-1166651177)) COLLATE RTRIM); -- 0ms;
SELECT ALL (((((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c2))>=((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c2))))OR(((rt0.c1)OR(0x6ea118c8)))))AND(ABS(rt0.c0))) FROM rt0 WHERE (((~ (0.9424933231827564)) IN (((0X6815762a)>=(x''))))); -- 0ms;
SELECT DISTINCT (TRIM(rt0.c1) IN ()), CAST(rt0.c1 COLLATE NOCASE AS NUMERIC), SUM((NOT (rt0.c0))) OVER () FROM rt0; -- 0ms;
SELECT ALL CAST(((rt0.c2) ISNULL) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((SQLITE_COMPILEOPTION_GET(rt0.c1))) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) FROM rt0; -- 0ms;
SELECT MIN(((('-1640518115', rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, '-1110258357')) AND ((rt0.c0, rt0.c0, rt0.c1)))) FROM rt0 WHERE (CAST(CAST(0.6076178515405585 AS REAL) AS REAL)); -- 1ms;
SELECT ALL 0.2723810368166458 FROM rt0; -- 0ms;
SELECT (+ (((rt0.c0)OR(rt0.c2)))) FROM rt0 WHERE ((((CASE 0.7064195011242568  WHEN '-1640518115' THEN 0.6302241939608372 WHEN x'' THEN '-756160266' WHEN 0.7047231776136598 THEN x'dabc' WHEN 0.3771404876824137 THEN x'' WHEN '' THEN x'5b6a267c' END, (+ ('464919095')), NULL COLLATE NOCASE))<>(((((x'', -1557917618, 0.12858385183446985)) BETWEEN ((x'', '', '-1640518115')) AND ((x'b320', x'', 0.5755302473868232))), CAST('#	(uE7' AS NUMERIC), ((x'04fb') NOTNULL))))); -- 0ms;
SELECT DISTINCT (((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) IN ()) FROM rt0 WHERE ((((0.5150027409852048)) BETWEEN ((((NULL) BETWEEN ('<%') AND ('920616025')))) AND (((NOT (NULL)))))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))|(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)), (((rt0.c0))>((((((rt0.c0)OR(0.08132364752456567)))AND('-2045729670'))))) ASC LIMIT -962405657 OFFSET 1965046369; -- 0ms;
SELECT ALL (((0.8714094600477277)) NOT BETWEEN ((MAX(']/ '))) AND (((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, '', rt0.c2)))))) FROM rt0 WHERE ((((((x'dec7')) BETWEEN ((NULL)) AND ((NULL)))) NOTNULL)); -- 0ms;
SELECT DISTINCT load_extension(((rt0.c0) BETWEEN (rt0.c1) AND (0.8978267264212765)), ((rt0.c0)*(rt0.c2))) FROM rt0 WHERE ((('t??Ml%CI')/(((('+X၎8?%z'))=((NULL)))))); -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE (TRIM((((0.42593688978676114)) BETWEEN ((NULL)) AND ((1.965046369E9))))); -- 0ms;
SELECT CASE x'71ff'  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) ELSE TOTAL(rt0.c2) END, ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)OR((- (rt0.c0)))), CAST(((rt0.c2)IS NOT(rt0.c2)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((ABS(rt0.c0))<<(COUNT(*))) FROM rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (+ (rt0.c1)) WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN 0.8250488037055529 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN x'' END WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (NULL IN ()) ELSE rt0.c1 COLLATE BINARY END, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY ASC  NULLS FIRST; -- 1ms;
SELECT ALL ((COUNT(rt0.c2)) BETWEEN (CAST(x'' AS NUMERIC)) AND (COUNT(*))), CAST(rt0.c1 COLLATE NOCASE AS NUMERIC), TRIM(DISTINCT rt0.c0 COLLATE RTRIM, (- (rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT ((TRIM('-1964651828'))==(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0 WHERE ((+ ('6.Yꤝb&~8' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((rt0.c2 COLLATE BINARY))=((x'8f1d'))) FROM rt0 WHERE (((load_extension(490930051))IS(((NULL)*(0.7543561339499503)))));SELECT ALL rt0.c2 FROM rt0 WHERE (CAST((+ (0.31955960116085946)) AS REAL)); -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT NULL) IN ()), ((((rt0.c0)OR(rt0.c1))) NOTNULL), ((NOT (rt0.c0)) IN ()) FROM rt0 GROUP BY ((rt0.c0 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c2))) AND (((rt0.c0)IS NOT(rt0.c0)))); -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE BINARY FROM rt0 WHERE (((((((0.006164494194055958)AND('')))AND(']䫫')))<('YT'))); -- 0ms;
SELECT ALL CASE ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1))  WHEN TOTAL(rt0.c1) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE 0x2f731a84 END FROM rt0; -- 1ms;
SELECT ((rt0.c1 COLLATE NOCASE)+(MAX(rt0.c0))) FROM rt0 WHERE (COALESCE(DISTINCT 0.6657854416889407, '888721459') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (+ (CASE WHEN rt0.c2 THEN rt0.c0 ELSE x'8e62' END)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) THEN (~ (rt0.c1)) END, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) ISNULL), GROUP_CONCAT(CAST(rt0.c2 AS TEXT)) FROM rt0 WHERE ((((((((('')OR(x'')))AND(x'a4dc')))AND((NOT ('-1729550086')))))OR(((x'6bd1')*('0.19219922952318858'))))); -- 0ms;
SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM FROM rt0 WHERE ('Ku96zAc'); -- 0ms;
SELECT DISTINCT (((TOTAL(rt0.c0)))>((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))))) FROM rt0 WHERE ((((((x'' IN ()))OR(CASE WHEN NULL THEN '165735132' ELSE x'2a44' END)))OR((((-1556233714)) NOT BETWEEN ((0.7172230100654912)) AND (('')))))) LIMIT 1 OFFSET 1154235267; -- 0ms;
SELECT ALL CASE WHEN LOWER(DISTINCT rt0.c2) THEN NULLIF(DISTINCT rt0.c0, rt0.c2) END, UNICODE(rt0.c2) COLLATE BINARY, rt0.c2, LENGTH(((rt0.c1)GLOB(rt0.c0))), UNICODE(CAST(rt0.c0 AS REAL)) FROM rt0 WHERE ((((180498114))>=((x''))) COLLATE NOCASE); -- 0ms;
SELECT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT x'0006' FROM rt0 ORDER BY NULL  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((rt0.c1)*(rt0.c0)))IS NOT(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))) FROM rt0 WHERE (((CAST('749437072' AS TEXT)) NOT BETWEEN (((x'9513') ISNULL)) AND ((NOT ('464919095'))))) INTERSECT SELECT ALL (CAST(rt0.c2 AS NUMERIC) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0, ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))||(rt0.c0)), UPPER(0.6926553042436769) FROM rt0 WHERE (((CAST(0.4925627500459676 AS TEXT)) BETWEEN (((NULL) ISNULL)) AND (CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT ALL json_array((+ (rt0.c1)), MIN(rt0.c1)), (((LENGTH('aF')))!=((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))), ((TOTAL(rt0.c0)) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT (CAST(rt0.c2 AS BLOB) IN ()), 0.1574570085825876, AVG(x'') OVER () FROM rt0 WHERE (CASE WHEN 0.4134254077830931 THEN '-262174340' END COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((CHAR(rt0.c1))OR(((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))))AND((((rt0.c0, rt0.c2, rt0.c2))>((rt0.c0, rt0.c2, rt0.c0))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((NULL)|((rt0.c0 IN ()))) FROM rt0; -- 1ms;
SELECT DISTINCT ((rt0.c0)>(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))) FROM rt0 WHERE (((0.7884179460172408)IS NOT('	L')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((x'')||(x''))))<(((('-1016747543')<=('1154739014')))))); -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT NULL))!=(((rt0.c2)||('oa')))) FROM rt0 WHERE (CAST((((x'', '', x'4109')) NOT BETWEEN (('1557464901', '-1830567399', '*XC,')) AND (('-1360223070', '-997678810', NULL))) AS INTEGER)) LIMIT 425200411 OFFSET -202140397; -- 0ms;
SELECT ALL (~ (COUNT(*))) FROM rt0 WHERE (((('' COLLATE BINARY, CAST(x'' AS BLOB), ((-1929018760)/(NULL))))<((((NULL)<=(x'')), (('-29902180') NOT BETWEEN ('2030247466') AND (NULL)), (- (NULL)))))) LIMIT 1072091530 OFFSET 1345355825; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE NOCASE)>=(NULL)) FROM rt0; -- 0ms;
SELECT ((NOT (rt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), rt0.c0, COUNT(*), CAST(((rt0.c2)<=(rt0.c2)) AS REAL), (((((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0, 0X209cf1b1, rt0.c0)))) NOT BETWEEN (COUNT(*)) AND ((NOT (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((rt0.c2 IN ()))>>(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN 'yV' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) OVER () FROM rt0 WHERE ((((('379324068')IS(554362141)))||((1893475085 IN ())))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOTNULL)) IS TRUE), TRIM(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))), json_extract(rt0.c2, rt0.c1) COLLATE RTRIM FROM rt0 WHERE (((((x'')<<('-415072564'))) NOTNULL)) ORDER BY ((((rt0.c0) IS FALSE))||(rt0.c1 COLLATE NOCASE));SELECT DISTINCT CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((x'')!=(rt0.c1)) END, 0.792957841096227, ((rt0.c1)-(((x'') ISNULL))) FROM rt0; -- 0ms;
SELECT DISTINCT 0.298596217368828, (((NOT (rt0.c0))) NOTNULL), GROUP_CONCAT(((((NULL)OR(rt0.c1)))AND(rt0.c1))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN AVG(rt0.c0) THEN (+ (rt0.c1)) END FROM rt0 WHERE ((((0Xffffffffe0ba7f90 IN ())) IS FALSE)); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((0.16763839441949313) BETWEEN (x'07d11a20') AND ('>0y')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT SUM(((rt0.c1) BETWEEN (rt0.c1) AND (8.61598862E8))) OVER ( ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (NULL) AND (((rt0.c0) IS FALSE))) DESC), ((((((((((rt0.c1) NOT NULL))OR(rt0.c0)))OR(((rt0.c1) ISNULL))))OR(((rt0.c1)*(rt0.c1)))))OR(SQLITE_VERSION())), CAST((+ (rt0.c2)) AS REAL) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN COALESCE(DISTINCT rt0.c0, rt0.c0) THEN NULL ELSE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) END FROM rt0 WHERE (DATETIME(((((x'')OR('1096095878')))AND('&f')), CAST(0.965257990120572 AS NUMERIC), ((0.13984522325834448)*(NULL)))); -- 0ms;
SELECT ALL (((rt0.c1 IN (rt0.c2))) NOTNULL), ((('-262174340', rt0.c1, rt0.c0)) BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), TOTAL(rt0.c2), (((x'', rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, NULL))))) AND ((((('-1729550086')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END, CAST(rt0.c0 AS REAL)))), TRIM(DISTINCT x'5c11', (- (rt0.c0))) FROM rt0 WHERE (CAST((+ ('n2\n')) AS INTEGER)) ORDER BY (rt0.c0 COLLATE BINARY IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST((+ (rt0.c2)) AS REAL) FROM rt0 WHERE (CAST(((((NULL)OR(-1.41677706E8)))OR(NULL)) AS REAL)); -- 0ms;
SELECT (('0.08132364752456567') IS TRUE) FROM rt0; -- 0ms;
SELECT CASE WHEN (~ (rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c2) AS INTEGER) FROM rt0; -- 0ms;
SELECT ALL ((COALESCE(8.61598862E8, rt0.c0)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (0.15386762829983902)) FROM rt0; -- 0ms;
SELECT (((rt0.c2))<>((''))) COLLATE RTRIM, ((CASE WHEN rt0.c1 THEN rt0.c2 END) IS TRUE), (+ ((rt0.c1 IN ()))) FROM rt0 WHERE ((((0.10711223723571717) NOT NULL) IN ())); -- 0ms;
SELECT (((((rt0.c0)!=(rt0.c1)), (rt0.c2 IN ()), (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((x'41c9', rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2)))))=(((((rt0.c2)) NOT BETWEEN ((0.6327170992019624)) AND ((rt0.c1))), (((rt0.c2))<=((rt0.c1))), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))) FROM rt0; -- 0ms;
SELECT ALL AVG(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))) OVER () FROM rt0 WHERE (CASE ((x'')+(0.08784391724450302))  WHEN (1122505331 IN (NULL, '')) THEN (((('')AND(x'')))OR(x'')) WHEN ((NULL)%(0.31955960116085946)) THEN ((('暤ጫg(^i'))<>((0.7680021234813172))) WHEN (((('-101165211')OR(NULL)))AND(NULL)) THEN CASE WHEN '' THEN -551243894 WHEN NULL THEN 4.90930051E8 WHEN x'' THEN NULL WHEN 0.5454565129087673 THEN NULL WHEN NULL THEN '-1113806430' ELSE '1995674980' END ELSE CAST(1154235267 AS INTEGER) END); -- 0ms;
SELECT MIN((rt0.c0 IN ())) FROM rt0 WHERE (UPPER(((x'ad83') NOTNULL))); -- 0ms;
SELECT DISTINCT ((((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(0.46036739851124164)))OR(rt0.c1))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ('Il')), ((1616390166)|(((rt0.c1)/(rt0.c1)))), LAST_VALUE((((((((((x'8d66' IN ()))AND(((rt0.c1) NOT NULL))))AND(LIKELIHOOD(rt0.c1, 0.654208056156187))))OR((- (rt0.c1)))))OR((((rt0.c1))>=((rt0.c0)))))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))>>(NULL)) FROM rt0 WHERE (((+ ('-525003301')) IN (((x'45b7') IS TRUE)))) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)), ((((rt0.c0)IS(rt0.c1)))||(((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))); -- 0ms;
SELECT (((~ (NULL))) NOT BETWEEN (1.959877117E9 COLLATE NOCASE) AND (QUOTE(rt0.c2))) FROM rt0; -- 0ms;
SELECT 0.35885588047086614 COLLATE RTRIM, 0.6062094346483003, 0.007710200588087246, COUNT(*) OVER (), MAX(((rt0.c0)>>(rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT SUM((((rt0.c0, 0.35375340668988553, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0)))) OVER ( RANGE BETWEEN (((CAST(rt0.c0 AS TEXT)))<((rt0.c2))) PRECEDING AND  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt0 LIMIT 172980889;SELECT x'', rt0.c2, (((rt0.c1 IN (rt0.c1, rt0.c1))) IS TRUE), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(NULL)), ((+ ('-2109232421')) IN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c1)IS(rt0.c1)))))OR(IFNULL(rt0.c1, rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT MAX(rt0.c0) COLLATE BINARY COLLATE NOCASE FROM rt0 WHERE ((((((('aF')AND(0.07255722418064214)))OR('')))>>(('o{M0缯' IN ())))) LIMIT -1166651177; -- 0ms;
SELECT ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) ISNULL), (NOT ((((rt0.c0))>((rt0.c1))))), SUM(CAST(rt0.c2 AS INTEGER)) FROM rt0 WHERE (json_quote((-6.28519605E8 IN ()))); -- 0ms;
SELECT DISTINCT ((x'') NOT BETWEEN (((rt0.c0)==(rt0.c2))) AND (((NULL)<<(rt0.c2)))), ((TRIM(DISTINCT rt0.c2, rt0.c1)) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))), (((((((((((rt0.c0, rt0.c0, rt0.c0))!=((rt0.c2, rt0.c1, rt0.c0))))AND(MIN(rt0.c0))))OR((((rt0.c0, rt0.c2, rt0.c1))>((rt0.c0, rt0.c2, rt0.c0))))))AND((((rt0.c2))>=((rt0.c2))))))OR(((rt0.c2)/(rt0.c0)))) FROM rt0; -- 0ms;
SELECT ((((MIN(rt0.c2))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))))AND(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (rt0.c1 COLLATE BINARY)), ((IFNULL(rt0.c1, rt0.c0))LIKE(CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE rt0.c1 END)), 0.704998051249169 FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) COLLATE NOCASE, LAST_VALUE((x'925d' IN ((~ (rt0.c2)), ((rt0.c0)&(rt0.c2))))) OVER (), (- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))), ((NULL) NOT BETWEEN ((~ (rt0.c0))) AND (CASE x'893f'  WHEN rt0.c2 THEN rt0.c1 END)), CAST(rt0.c0 AS INTEGER) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL SUM(((rt0.c1)&(rt0.c2))) FROM rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c2)||(x'69a0'))) NOT NULL) FROM rt0 WHERE ('490930051'); -- 0ms;
SELECT (((UNICODE(rt0.c0)))<((((rt0.c1)IS NOT(rt0.c1))))), (HEX(DISTINCT rt0.c1) IN ()), UNLIKELY(((rt0.c0)LIKE(rt0.c1))) FROM rt0 WHERE (((((((0.18247523119005937)<<(0X13d4ec6c)))OR((0.8988961757542923 IN ()))))OR(((0.7797083118702545)>=(-1134565141))))) ORDER BY ((x'') NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c1)-(rt0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT LAST_VALUE((rt0.c1 IN ())) OVER () FROM rt0; -- 0ms;
SELECT ALL ((((((-1958769600) IS FALSE))AND((- (rt0.c0)))))OR(COALESCE(rt0.c1, rt0.c1))) FROM rt0 WHERE ((+ (LIKELIHOOD(0.5204470632105909, 0.5424724562625817)))); -- 0ms;
SELECT ((((~ (rt0.c1))))<>((0.2226914267327995))) FROM rt0 WHERE (((((((NULL)*(574441340)))OR((('-1200371796') BETWEEN (0.04779038375495093) AND (x'ea57')))))OR(NULL))); -- 0ms;
SELECT ALL ((rt0.c2 COLLATE BINARY)GLOB((+ (0Xffffffff9d21a69e)))) FROM rt0; -- 0ms;
SELECT ALL (GROUP_CONCAT(rt0.c2) IN ()) FROM rt0 WHERE (CAST((((0.793246714812692, NULL, '920616025'))<>((x'', NULL, NULL))) AS INTEGER)) GROUP BY (((- (rt0.c2))) ISNULL) HAVING (((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)), (((rt0.c0))<>((rt0.c1))), ((rt0.c0)IS NOT(rt0.c1))))<=((((rt0.c0)-(rt0.c1)), GROUP_CONCAT(rt0.c1), (((0.761713854470102, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c2, rt0.c1)))))); -- 0ms;
SELECT ALL 1.154739014E9 FROM rt0 WHERE (SQLITE_VERSION()) LIMIT 428896100 OFFSET -1877857254; -- 0ms;
SELECT TOTAL('T&iA') FROM rt0 WHERE (NULLIF((NULL IN ()), ((x'')%(NULL)))) ORDER BY (((rt0.c1)%(rt0.c1)) IN ('H,tc즸&4閡d' COLLATE BINARY)); -- 0ms;
SELECT DISTINCT '-880190688' FROM rt0 WHERE ((((x'')%('1661729494895297197')) IN ())); -- 0ms;
SELECT DISTINCT (NOT (((rt0.c2)OR(rt0.c1)))) FROM rt0; -- 1ms;
SELECT ALL SUM((rt0.c1 IN ())) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((('') IS TRUE))AND((('-1016747543') NOT BETWEEN (0.5755302473868232) AND (0.04864926014923865)))))AND((('RK') BETWEEN (0xffffffffcfb29d5e) AND (0.07128698186722715))))); -- 0ms;
SELECT (COUNT(rt0.c0) IN ()) FROM rt0 WHERE (NULL) ORDER BY ((((((rt0.c2)OR(x'')))AND(rt0.c2))) BETWEEN ((- (rt0.c0))) AND (CASE WHEN rt0.c1 THEN -1.016747543E9 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ ((('-1086374906') BETWEEN (rt0.c0) AND (rt0.c1)))), ((GROUP_CONCAT(rt0.c0))+(((rt0.c0)>>(rt0.c1)))), CASE (NOT (rt0.c2))  WHEN NULLIF(rt0.c1, rt0.c2) THEN CAST(rt0.c0 AS INTEGER) ELSE (- (rt0.c0)) END FROM rt0 WHERE (((((NULL)>>(1924891357)))*(CASE WHEN 'a*^' THEN -785450591 WHEN '0.8464264656716756' THEN '1154235267' WHEN NULL THEN 0x45aa8d4a WHEN 'ZBs' THEN x'' WHEN x'' THEN 0x7d30aaf9 END))); -- 0ms;
SELECT DISTINCT CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '' END COLLATE RTRIM FROM rt0 WHERE (((((+ ('')), ((x'')<(x'3568')), CAST(x'' AS BLOB)))=(((NOT (0.21604255660722416)), (((0.5275969399774693)) BETWEEN (('k1')) AND (('-1964651828'))), (('0.7543561339499503')IS NOT(x'')))))); -- 0ms;
SELECT ALL CAST((rt0.c0 IN ()) AS TEXT) FROM rt0 LIMIT 843409385; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0) NOT BETWEEN (1252273176) AND (rt0.c2)) THEN COALESCE(DISTINCT rt0.c1, rt0.c0) ELSE '0.5582123864741915' END FROM rt0; -- 0ms;
SELECT (((((NOT (rt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c2) ISNULL))) FROM rt0 LIMIT 1361112211 OFFSET -99323786; -- 0ms;
SELECT ALL ((CASE rt0.c0  WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) ISNULL), ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))*(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))), ((x'')IS NOT((rt0.c2 IN (rt0.c1, rt0.c2)))) FROM rt0 WHERE (0X5169ff10); -- 0ms;
SELECT ((UNLIKELY(x'')) NOT BETWEEN (((rt0.c0)|(rt0.c0))) AND ('1654934718')) FROM rt0 WHERE ((NOT (((0)||(0.12292268668769446))))) ORDER BY (~ (rt0.c1)) DESC; -- 1ms;
SELECT SUM(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) FROM rt0 WHERE (((((NULL)=(0xffffffffc21dcf52))) NOT BETWEEN (((NULL) NOT BETWEEN (x'') AND ('暤ጫG(Vi'))) AND (((((x'')OR(NULL)))OR(NULL))))); -- 0ms;
SELECT DISTINCT TOTAL(((NULL)IS NOT(rt0.c1))) OVER () FROM rt0 WHERE ((((NULL) NOT BETWEEN (NULL) AND (NULL)) IN ())); -- 0ms;
SELECT DISTINCT HEX(DISTINCT CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) FROM rt0 WHERE (0.4918150311543623); -- 0ms;
SELECT DISTINCT ((((rt0.c0)OR(rt0.c1)))+(((rt0.c1) NOT NULL))) FROM rt0 WHERE (CASE ((x'')>(NULL))  WHEN ((0.6009647488835678) NOT BETWEEN (NULL) AND (x'78e3')) THEN ('708446147' IN (0Xf019a83)) ELSE (NOT (0.16348574747446032)) END); -- 0ms;
SELECT ALL ((rt0.c1) BETWEEN (((rt0.c0)||(rt0.c1))) AND ('Il')) FROM rt0; -- 0ms;
SELECT DISTINCT json_type(((rt0.c1) BETWEEN ('-1512452193') AND (1396309950))), (((((((rt0.c1, rt0.c1, 4.64919095E8, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c0, NULL))))OR((NOT (rt0.c0)))))OR(((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))), ((((((rt0.c1)>(rt0.c1)))AND(TOTAL(rt0.c0))))OR(('' IN ()))) FROM rt0 WHERE (CAST((('334437084') NOTNULL) AS TEXT)); -- 0ms;
SELECT DISTINCT ((TIME(rt0.c1, rt0.c2, rt0.c1, rt0.c2, rt0.c0))|((((rt0.c1, rt0.c1, rt0.c0))<=((rt0.c2, rt0.c2, rt0.c0))))) FROM rt0; -- 0ms;
SELECT 0.3771404876824137 FROM rt0; -- 0ms;
SELECT (((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1)))) BETWEEN (rt0.c1) AND ((+ (rt0.c1)))), ((((rt0.c0) IS FALSE))AND(LIKE(rt0.c0, NULL, '9'))), COUNT(*) FROM rt0 WHERE (((((((((('-2020997671' IN ()))OR(x'')))OR(((x'')-(NULL)))))OR(((((x'')OR(0.5582123864741915)))OR('895231704')))))AND(HEX('{|2')))); -- 1ms;
SELECT DISTINCT ((UNICODE(rt0.c2)) BETWEEN (((rt0.c1) NOTNULL)) AND (rt0.c2 COLLATE NOCASE)), CASE x'' COLLATE BINARY  WHEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) THEN (+ (rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (0.12205312934397983)) THEN ((('')) BETWEEN ((x'')) AND ((rt0.c0))) WHEN (rt0.c2 IN ()) THEN (('')<(rt0.c1)) END, CASE LENGTH(rt0.c2)  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN rt0.c1 END FROM rt0 WHERE (((LIKELIHOOD(DISTINCT NULL, 0.6475594860300757))IS(((((((((NULL)OR(1660729915)))OR(x'')))AND(0.6244408745292015)))AND(x''))))); -- 0ms;
SELECT COALESCE((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), ('59472832' IN (rt0.c2))), AVG(((rt0.c1)AND(rt0.c2))) OVER (), ((((rt0.c2)GLOB(NULL))) ISNULL) FROM rt0 GROUP BY UNLIKELY(((rt0.c1)|(rt0.c2))) HAVING ((((CASE WHEN rt0.c0 THEN rt0.c1 END)OR(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))))AND(((rt0.c0) IS TRUE))); -- 0ms;
SELECT ALL (((NOT (rt0.c0)))IS(((0.35054720474707124)==(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c0 IN (rt0.c1)))OR(((rt0.c0)LIKE(rt0.c0)))))OR((+ (rt0.c2)))), ((((rt0.c2)/(rt0.c2)))<(((rt0.c0) IS TRUE))), rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS INTEGER) COLLATE BINARY, rt0.c0, ((rt0.c0)>=(((rt0.c0)*(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT rt0.c2) FROM rt0 LIMIT -608002127 OFFSET -1565932110; -- 0ms;
SELECT (((+ (rt0.c0))) NOT NULL) FROM rt0; -- 0ms;
SELECT ALL CAST(rt0.c1 AS REAL) FROM rt0 GROUP BY rt0.c2; -- 0ms;
SELECT DISTINCT ((((rt0.c1)OR(rt0.c2 COLLATE NOCASE)))OR(MIN(rt0.c2))), (((rt0.c1)) BETWEEN ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))) AND (((('1305503975')<=(rt0.c2))))), (NOT (((rt0.c0)LIKE(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ((((rt0.c1) IS FALSE)) ISNULL) FROM rt0; -- 1ms;
SELECT DISTINCT AVG(json_patch(rt0.c1, rt0.c2)) FILTER(WHERE ((COALESCE(rt0.c0, rt0.c1)) IS FALSE)) OVER () FROM rt0 WHERE ((((x'29e3', 0.46006193510302273, '1322096949')) NOT BETWEEN ((CAST(0x44d3eb46 AS REAL), ABS('P%ࣹv	R]R'), RTRIM(x''))) AND ((x'f1d3', x'' COLLATE NOCASE, 0xffffffffda898d4b)))); -- 0ms;
SELECT DISTINCT (((rt0.c2)IS(rt0.c0)) IN ()), (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()), '81743864' FROM rt0; -- 0ms;
SELECT UPPER(DISTINCT rt0.c2 COLLATE BINARY), COUNT(*), ((MIN(rt0.c0)) NOT NULL), ROW_NUMBER() OVER (), CASE ((rt0.c2) IS TRUE)  WHEN STRFTIME(rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c2) THEN rt0.c1 WHEN load_extension(rt0.c1, rt0.c0) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN rt0.c0 THEN (rt0.c1 IN ()) END FROM rt0 GROUP BY rt0.c0 HAVING (((rt0.c1)OR(rt0.c2)) IN ()); -- 0ms;
SELECT DISTINCT ((((- (rt0.c0)), (+ (x'8369')), ((rt0.c2)-(rt0.c0))))=((NULLIF(rt0.c1, rt0.c1), rt0.c0, (((rt0.c2))!=((rt0.c2)))))), PERCENT_RANK() OVER ( ORDER BY ((((rt0.c2)AND('-791614841')))OR(((x'') IS FALSE))) DESC, COALESCE(DISTINCT (rt0.c2 IN ()), ((0X4bff7c5a)<(x'd4e1')), rt0.c2, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, (((rt0.c0))>((rt0.c2))))  NULLS FIRST), TOTAL(rt0.c2) FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (x'')))IS NOT(((rt0.c0) NOT NULL))), ((rt0.c0) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (rt0.c2 COLLATE BINARY)), SUM((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) OVER (), (NOT ((('-756160266')AND(rt0.c2)))), ((((x'') IS FALSE))<(((('*XC,'))<((rt0.c0))))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CAST(TRIM('') AS REAL)) GROUP BY (((- (rt0.c2)))>=(((rt0.c2)&(rt0.c1)))); -- 1ms;
SELECT DISTINCT CASE WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN TYPEOF(rt0.c0) ELSE CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN 0xffffffffd213e819 WHEN rt0.c2 THEN rt0.c0 END END FROM rt0; -- 0ms;
SELECT DISTINCT (+ (rt0.c0)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN 0.2450932858136512 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN (+ ('')) ELSE (((rt0.c2))>=((rt0.c0))) END, (((rt0.c1)) BETWEEN (((NOT (rt0.c1)))) AND ((rt0.c1))), NULL, (((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c0)LIKE(rt0.c1)), (((rt0.c1))!=((rt0.c2))), ((rt0.c2)IS(rt0.c0)))) AND (((rt0.c0 IN (rt0.c1)), ((((((((rt0.c1)AND(rt0.c0)))OR('	{')))AND(rt0.c0)))AND(rt0.c2)), LTRIM(rt0.c1, rt0.c2)))), SUM(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))) OVER () FROM rt0; -- 0ms;
SELECT '[K]W7SI萁[' FROM rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (rt0.c1) AND (JULIANDAY(rt0.c1, rt0.c1, rt0.c1, '1855774533', rt0.c1))) DESC  NULLS FIRST, (+ ((rt0.c1 IN ()))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c2)>(rt0.c2)))>>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)), ((((~ (rt0.c2))))<=((HEX(rt0.c0)))), UPPER(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))), rt0.c0, CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE FROM rt0 WHERE (((CAST('' AS BLOB))AND(x''))); -- 0ms;
SELECT DISTINCT MAX((rt0.c0 IN ())) FROM rt0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT CAST(rt0.c0 AS BLOB), ((rt0.c2) IS FALSE)), COUNT(*), TOTAL((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) OVER ( ORDER BY ((((rt0.c0)/(rt0.c2))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c1))) FROM rt0 LIMIT -1511758460 OFFSET 288211755; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), COUNT('>f3c,'), ((rt0.c2) IS FALSE) FROM rt0; -- 0ms;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((x'8547'))<=(('iN')))) NOT BETWEEN (((x'3b81b957')<=(x'485f'))) AND (((x'')IS NOT(x''))))); -- 0ms;
SELECT ALL LOWER(DISTINCT rt0.c2 COLLATE RTRIM) FROM rt0 WHERE (x''); -- 0ms;
SELECT ALL (rt0.c2 IN (rt0.c1 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT DISTINCT LAG(-1, (((((rt0.c1, rt0.c2, rt0.c2, rt0.c0, rt0.c0))=((rt0.c1, rt0.c2, x'', rt0.c2, rt0.c0)))) IS FALSE), (+ ((rt0.c1 IN ())))) OVER ( ORDER BY (((rt0.c2)AND(rt0.c1)) IN ('0.2949825687042257' COLLATE RTRIM))  NULLS LAST), CASE WHEN rt0.c1 THEN 0X236315c6 WHEN ((((rt0.c1)OR(rt0.c1)))OR('')) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c0)||(rt0.c1)) THEN ((rt0.c0)IS NOT(x'')) END, TRIM(DISTINCT rt0.c0, rt0.c1) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT (((- (rt0.c2))) BETWEEN (((rt0.c1)|('1992593374'))) AND (AVG(rt0.c0))), GROUP_CONCAT(((((rt0.c1)OR(rt0.c2)))OR(0.16240448764956827))) OVER (), (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT NULL) FROM rt0 WHERE (CASE WHEN ((0.5760750553184774)GLOB(547156401)) THEN (('833925504') NOTNULL) WHEN x'' THEN 0Xffffffff8fef66c9 WHEN CAST(NULL AS BLOB) THEN CAST(0.04211010147001004 AS NUMERIC) WHEN (((x'e214'))=((x''))) THEN UPPER(DISTINCT 0.7851545645234976) WHEN ((0.9869880263035554)<('1804375258')) THEN ((0x3c7f4458) NOTNULL) END); -- 0ms;
SELECT DISTINCT rt0.c0, NULL, rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT '1992519694' FROM rt0; -- 0ms;
SELECT DISTINCT (TOTAL(rt0.c1) IN ()), '-881042235', MIN('FALSE') FROM rt0; -- 0ms;
SELECT x'd922' FROM rt0 LIMIT 1575302203 OFFSET 1646853928; -- 0ms;
SELECT ALL ((((rt0.c2)IS(rt0.c0))) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END) AND (ABS(rt0.c0))) FROM rt0 WHERE (((((0xffffffffc488a126) BETWEEN (-1.110258357E9) AND (NULL)))&(CASE WHEN -1.36022307E9 THEN NULL END))); -- 0ms;
SELECT ((((rt0.c0)AND(rt0.c0)))+(((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))) FROM rt0 WHERE ((((('')==(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT LAG(NULL, ((((rt0.c2)==(rt0.c0)))+((((rt0.c1)) NOT BETWEEN (('-133314120')) AND ((rt0.c0))))), (+ (rt0.c2 COLLATE BINARY))) OVER (), ((((rt0.c2)&(rt0.c0)))LIKE(((rt0.c0) NOT NULL))), CAST((((rt0.c0, x'', '-1492475365')) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c2))) AS REAL) FROM rt0; -- 0ms;
SELECT SUM(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) FROM rt0 WHERE ((IFNULL(DISTINCT '1597241974', NULL) IN ())); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) IS TRUE) AS NUMERIC) FROM rt0 ORDER BY CAST(rt0.c1 AS BLOB) COLLATE NOCASE, (((rt0.c2) NOTNULL) IN ()) DESC  NULLS FIRST, ((((rt0.c0)<=(rt0.c1)))==(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL UNLIKELY(0.17074381320278775) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((NULL IN ())) OVER () FROM rt0; -- 0ms;
SELECT ALL CAST(rt0.c0 AS TEXT) COLLATE BINARY FROM rt0 WHERE ((((((((('')OR('')))AND(1855774533)))AND((- (0.47717919767858363)))))AND((0.9860798404172442 IN ())))); -- 0ms;
SELECT ((((((rt0.c1)IS NOT(NULL)))AND(rt0.c1)))OR((rt0.c0 IN ()))) FROM rt0 ORDER BY (((((rt0.c1))<=((rt0.c0))))&(((((x'')AND(rt0.c1)))OR(rt0.c2))))  NULLS FIRST, (((CAST(rt0.c1 AS TEXT)))>=((rt0.c2))) DESC  NULLS FIRST; -- 0ms;
SELECT ((LOWER(DISTINCT rt0.c0)) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2)<(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((((SUM(rt0.c1))OR(((rt0.c0) NOTNULL))))AND(COUNT(rt0.c0))))OR('511704105')))AND(CAST(0.0898522751238251 AS INTEGER))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CAST(rt0.c1 AS TEXT))), (((rt0.c0 IN ()))>=(('' IN (rt0.c0)))), rt0.c0 FROM rt0 GROUP BY COALESCE((x'' IN ()), LIKELIHOOD(rt0.c2, 0.20015229167450432)) HAVING UPPER(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))); -- 0ms;
SELECT ALL ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))) BETWEEN ((+ (rt0.c0))) AND (TRIM(DISTINCT rt0.c0, rt0.c1))) FROM rt0 WHERE ((((((((0.1755825004812599)AND(x'')))AND(NULL))))>=((((NULL)>=(NULL)))))) LIMIT -910619311; -- 0ms;
SELECT DISTINCT (((+ (rt0.c0))) BETWEEN ('h\n3_') AND (((rt0.c2)LIKE(rt0.c0)))), (((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, '-1964651828', NULL)) AND ((rt0.c2, rt0.c2, -133314120)))) IS TRUE), rt0.c0 FROM rt0 WHERE (CAST(NULL AS INTEGER) COLLATE NOCASE) ORDER BY ((CAST(x'' AS TEXT)) NOTNULL) ASC  NULLS LAST, (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))IS(CAST(rt0.c0 AS BLOB)))  NULLS LAST, ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) IS TRUE)  NULLS FIRST; -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE WHEN NULL THEN x'' ELSE NULL END)>=((0Xffffffffde4eeaa1 IN ())))); -- 0ms;
SELECT DISTINCT SUM((((rt0.c2))<((rt0.c0)))) FROM rt0 WHERE (((0.6327170992019624)LIKE(((((x'')OR('Rn皚')))AND(0x7ec65a9e))))) ORDER BY 0.8710870133232945; -- 0ms;
SELECT DISTINCT AVG(CAST(rt0.c0 AS REAL)) FROM rt0 WHERE (((SUBSTR(x'2944', 425200411))%(CAST(0.09162386740154149 AS REAL)))) ORDER BY CAST('榔e' COLLATE BINARY AS NUMERIC)  NULLS FIRST, ((rt0.c1 COLLATE RTRIM)!=((- (rt0.c1)))) ASC; -- 0ms;
SELECT DISTINCT MIN((rt0.c2 IN ())) FROM rt0 WHERE ((((((((((('rf') NOT BETWEEN (x'de00') AND (NULL)))OR(CASE NULL  WHEN 0.12086217275450206 THEN NULL WHEN 0X2957e42b THEN 1384859609 WHEN '' THEN 0.9286192216236976 ELSE '' END)))AND(CASE WHEN NULL THEN 0.02392511533051822 END)))AND((NULL IN ()))))AND(CAST(x'' AS TEXT)))); -- 0ms;
SELECT ALL ((rt0.c2)|(CAST(rt0.c0 AS NUMERIC))), (((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, 0.8991973298028524)) AND ((rt0.c0, rt0.c2, rt0.c1))))&((~ (rt0.c2)))), SUM((((rt0.c2))==((rt0.c2)))) FILTER(WHERE (((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) AND (((- (rt0.c0)))))) OVER () FROM rt0 WHERE (CAST(CAST('&-' AS TEXT) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CHANGES() FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER) FROM rt0 WHERE ((((-1.826838243E9)) NOT BETWEEN ((x'')) AND ((NULL))) COLLATE RTRIM COLLATE NOCASE) GROUP BY (((rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c0))) COLLATE NOCASE; -- 0ms;
SELECT ((rt0.c1) IS FALSE) COLLATE NOCASE, x'', ((rt0.c1)||(rt0.c1)) COLLATE RTRIM, (NOT (((rt0.c1) ISNULL))), GROUP_CONCAT(rt0.c1) FROM rt0 WHERE (x''); -- 0ms;
SELECT (CAST(rt0.c2 AS INTEGER) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (rt0.c1)) FROM rt0 WHERE (CASE (((((((('')OR('1578314799')))OR(0X6d7243a8)))OR(x'')))OR('770063516'))  WHEN ((NULL)<(x'e51f')) THEN CASE WHEN x'' THEN 0.8620132419068792 WHEN '' THEN '-141677706' WHEN NULL THEN 'ಐ' END WHEN ((0.3618690847042143)>>(5.47156401E8)) THEN '-1830567399' COLLATE BINARY WHEN ((0.5689988941369445)OR(180498114)) THEN ((((0.08704141153466405)OR(NULL)))AND(x'')) ELSE (NOT (0.896994628960373)) END); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt0 WHERE ((((((NULL)!=(x''))))>(((x'' IN ()))))); -- 1ms;
SELECT ((((COALESCE(rt0.c2, x'f1d9', rt0.c2, rt0.c0))AND(PRINTF(rt0.c1))))AND(((rt0.c2) IS FALSE))) FROM rt0 WHERE ('-1605266015'); -- 0ms;
SELECT DISTINCT CASE WHEN x'079b' THEN rt0.c2 ELSE ((((rt0.c2)AND(x'')))AND(rt0.c2)) END, NTH_VALUE(UNICODE(rt0.c2 COLLATE BINARY), (((((rt0.c1)>(rt0.c2)), (('1214611500')-(rt0.c1)), ((rt0.c0)IS(rt0.c2))))<((((rt0.c0)+(rt0.c0)), rt0.c2, ((rt0.c2)!=(rt0.c2)))))) OVER (), ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c0))) AND (((rt0.c2)OR(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT -628127352 FROM rt0; -- 0ms;
SELECT ALL (((+ (rt0.c1)))-(((rt0.c1)>>(rt0.c1)))) FROM rt0 NOT INDEXED WHERE ((((0.28324355286975544) NOT BETWEEN (0.30469648624246237) AND (x'eb15')) IN ())) GROUP BY (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) HAVING rt0.c2; -- 0ms;
SELECT DISTINCT SUM(CAST(rt0.c2 AS BLOB) COLLATE BINARY) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (+ (165735132)), '1959877117', ((rt0.c2 COLLATE RTRIM)AND(0.6358716918098735)) FROM rt0; -- 0ms;
SELECT DISTINCT ((AVG(rt0.c2))-(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0 GROUP BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE), (+ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)), CASE WHEN rt0.c2 COLLATE RTRIM THEN rt0.c1 COLLATE RTRIM END, (+ (((rt0.c2)==(rt0.c1)))), CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) END ORDER BY rt0.c1  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt0.c0, CAST(((rt0.c0)GLOB(rt0.c1)) AS REAL), AVG((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c1)))) FROM rt0 WHERE (((NULL IN ()) IN ())) GROUP BY CAST(LAST_INSERT_ROWID() AS TEXT), CAST(rt0.c0 AS BLOB) COLLATE BINARY, ((rt0.c2 COLLATE BINARY)==(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(x'')))AND(rt0.c2)))); -- 1ms;
SELECT rt0.c2 FROM rt0 GROUP BY NULL; -- 0ms;
SELECT DISTINCT CASE (NOT ('-1692210778'))  WHEN NULL THEN (((x'')) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END, (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(((rt0.c0) NOTNULL))))AND(((rt0.c1)/(rt0.c2)))), ((CAST(rt0.c2 AS NUMERIC))/((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) FROM rt0 WHERE (((((((0.5275969399774693) NOT BETWEEN (0.6854935819568655) AND (x'b6c3d0b7')))AND(CASE WHEN NULL THEN NULL END)))AND((('1701319467')+(0Xffffffffa5e46584))))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 NOT INDEXED WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT ALL (+ (((rt0.c1)|(rt0.c0)))) FROM rt0 WHERE (((CASE WHEN 5.11704105E8 THEN 0.7590298453845037 WHEN NULL THEN 0.7045985993001082 WHEN NULL THEN '0.6926553042436769' ELSE 'l鵯!vX' END) IS TRUE)); -- 0ms;
SELECT DISTINCT AVG(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) OVER ( ORDER BY ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR((rt0.c2 IN (rt0.c0, rt0.c2)))), (((((rt0.c0))>((rt0.c1)))) NOT NULL) DESC, (((- (rt0.c1)))<<((NOT (rt0.c1)))) DESC ROWS  CURRENT ROW) FROM rt0; -- 0ms;
SELECT ((((((((((((((rt0.c2) IS TRUE))OR((((rt0.c2, rt0.c2, rt0.c2))>=((rt0.c2, rt0.c0, rt0.c1))))))OR(((rt0.c1)>=(rt0.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c1) NOT NULL))))OR(rt0.c1 COLLATE RTRIM)))AND((rt0.c1 IN (rt0.c2)))) FROM rt0 WHERE (((((((x'')AND(NULL)))OR(0.36887118939903396)))IS NOT(CAST(NULL AS BLOB)))) GROUP BY (- (((rt0.c2)GLOB(rt0.c0)))); -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE (((NULL COLLATE NOCASE) NOTNULL)); -- 0ms;
SELECT DISTINCT ((547156401) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (MAX(rt0.c0))), NULL, AVG(((rt0.c1)&(rt0.c0))) OVER () FROM rt0 WHERE (CASE WHEN (((('61496360')OR(x'')))AND(x'3a93')) THEN -1.36022307E9 END); -- 1ms;
SELECT (((+ (rt0.c1))) NOTNULL) FROM rt0; -- 0ms;
SELECT 0.8183861954369643 FROM rt0 WHERE (((((NULL)GLOB(0.5473487568509925)))<(((NULL) BETWEEN ('0.2723810368166458') AND (x''))))); -- 0ms;
SELECT ALL (((((rt0.c1) IS TRUE)))=((rt0.c0))) FROM rt0 WHERE (0.4034104901260437); -- 0ms;
SELECT (+ (((-1.41677706E8)<=(0.9844124627120114)))), ((TYPEOF(rt0.c0))>(((rt0.c0)+(rt0.c2)))), (+ (rt0.c0)) FROM rt0 WHERE (('467814561' IN ()) COLLATE BINARY); -- 0ms;
SELECT (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT (((rt0.c1)) BETWEEN (((NOT (rt0.c2)))) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) FROM rt0; -- 0ms;
SELECT CAST((rt0.c1 IN ()) AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((NULL)||(NULL)) IN ())); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (rt0.c1)))))AND(LENGTH(rt0.c2))))OR(rt0.c0)))OR(((rt0.c0) ISNULL))), ((LIKELIHOOD(rt0.c2, 0.9017952398146081))=(rt0.c1 COLLATE BINARY))) OVER () FROM rt0 WHERE (HEX(DISTINCT ((x'')GLOB('3{')))) LIMIT 511704105 OFFSET -1122905933;SELECT CAST(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) AS REAL), (('V*v?')&(rt0.c1)) COLLATE RTRIM, CAST(((rt0.c2)||(rt0.c1)) AS TEXT) FROM rt0 WHERE (((((('l\/,') NOT BETWEEN (0.9491666225419227) AND (NULL)), ((('848230200', x'', '7'))!=(('pel -CgB', NULL, x''))), (~ (0Xffffffff8121231b))))<=(((('2126122246') NOT BETWEEN (0Xffffffff8f1b1713) AND (NULL)), (((NULL, 0.5271109261449014, NULL))<>((x'b57e', 0.19219922952318858, NULL))), x'19be')))) GROUP BY '1402162891', ((NULL) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c2 COLLATE BINARY)), rt0.c2, rt0.c1, (('-1166651177') NOT NULL); -- 1ms;
SELECT DISTINCT HEX(DISTINCT (rt0.c1 IN (rt0.c2, rt0.c1))) FROM rt0 WHERE (((((((((x'' COLLATE BINARY)AND(((x'') IS FALSE))))OR((('育')=('+')))))OR(rtreenode(x'', NULL))))OR('288211755'))) ORDER BY NULL ASC  NULLS LAST, x'169c' ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt0.c0, CAST(((rt0.c2)||(NULL)) AS BLOB), ((CAST(rt0.c2 AS TEXT))-(LENGTH(rt0.c1))) FROM rt0 GROUP BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS INTEGER) HAVING ((((((rt0.c0) NOTNULL))OR(((rt0.c1) BETWEEN (rt0.c0) AND (0Xffffffffe1f24d19)))))OR(IFNULL(rt0.c0, rt0.c0))); -- 0ms;
SELECT ALL CAST((NOT (rt0.c1)) AS BLOB) FROM rt0 WHERE ((((+ ('f.>0'))) ISNULL)); -- 0ms;
SELECT rt0.c0, ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))LIKE(651711580)), rt0.c1 FROM rt0 LIMIT 2019481623; -- 0ms;
SELECT ALL ((MAX(rt0.c0))+(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) FROM rt0; -- 0ms;
SELECT (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c1) IS TRUE), ((rt0.c0)<>(rt0.c2)), ((rt0.c1)/(rt0.c2)))) AND ((((((rt0.c2)OR('-1281983323')))AND(rt0.c1)), NULL, TYPEOF(rt0.c1)))), TRIM(rt0.c2 COLLATE BINARY, ((x'69d3')<=(rt0.c2))), ((TOTAL(rt0.c1))>((rt0.c0 IN ()))) FROM rt0 WHERE ((((('6.' COLLATE RTRIM)OR(((0.5960799948056464) ISNULL))))AND(x'f6bc'))); -- 0ms;
SELECT CUME_DIST() OVER () FROM rt0 WHERE ((('-202140397' IN (x'964f')) IN ())); -- 0ms;
SELECT -2.02140397E8 FROM rt0; -- 0ms;
SELECT MAX(IFNULL(DISTINCT rt0.c0, rt0.c2)), COUNT(((rt0.c1) ISNULL)) FILTER(WHERE ((((((((((rt0.c2)LIKE(rt0.c0)))AND(rt0.c1 COLLATE NOCASE)))OR(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))))AND((((rt0.c2, x'', rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))))))OR(x''))) OVER (), CASE WHEN (((rt0.c0, rt0.c1, NULL))==((rt0.c0, rt0.c0, rt0.c1))) THEN MIN(rt0.c0) END FROM rt0 WHERE (CAST(NULL AS NUMERIC) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((rt0.c2)<<(rt0.c0))) IS FALSE), ((((NULL)AND((rt0.c1 IN ()))))OR(CAST(rt0.c1 AS INTEGER))), ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE) FROM rt0; -- 0ms;
SELECT ALL (+ (rt0.c2)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT CASE (('437292869')=(rt0.c1))  WHEN (~ (rt0.c0)) THEN ((rt0.c0) ISNULL) END, TOTAL(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE), GROUP_CONCAT(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))) OVER (), CAST(rt0.c1 AS NUMERIC) COLLATE BINARY, CAST(((rt0.c2)+(rt0.c1)) AS INTEGER) FROM rt0 WHERE ('') GROUP BY rt0.c2; -- 0ms;
SELECT DISTINCT AVG((((rt0.c0))<>((rt0.c0)))) FROM rt0 WHERE (((x'43be')&(x'')) COLLATE BINARY) GROUP BY (rt0.c0 IN ()) ORDER BY (((((x'790a', rt0.c1, rt0.c1))<=((rt0.c0, rt0.c0, 0.28354445777526205)))) BETWEEN (NULL) AND ('>')) DESC, ((((x'')AND(rt0.c0 COLLATE BINARY)))AND((rt0.c2 IN (rt0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c1) NOT NULL)) OVER ( PARTITION BY (((CAST(rt0.c2 AS BLOB)))<>((((rt0.c0)<=(rt0.c1))))), CAST(((rt0.c2)IS(rt0.c1)) AS TEXT)) FROM rt0 WHERE (CASE WHEN (- (NULL)) THEN NULL COLLATE RTRIM ELSE ((x'32d1')AND(NULL)) END); -- 0ms;
SELECT DISTINCT COUNT((NOT (rt0.c2))) OVER (), ((((rt0.c0) IS FALSE))<(((rt0.c1)|(rt0.c1)))), ((((NOT (1709537518))))<=((0.35885588047086614))) FROM rt0 WHERE (CASE WHEN '0.7078064821646275' THEN ((((-1556233714)AND(0.567791153035396)))AND('')) WHEN ((x'')GLOB(NULL)) THEN (((((((('0.3693698070710614')AND(NULL)))OR(0x74e57a63)))OR('')))OR(x'e75a')) WHEN ((x'') IS FALSE) THEN CAST(x'' AS NUMERIC) ELSE (+ ('')) END); -- 0ms;
SELECT ((rt0.c1) NOT BETWEEN (((rt0.c0)&(rt0.c2))) AND (((rt0.c2)|(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DATETIME(x'', (rt0.c2 IN (rt0.c2, rt0.c1)), rt0.c1 COLLATE RTRIM), AVG(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))), ((MIN(rt0.c1))<((- (rt0.c0)))) FROM rt0 WHERE (((((((((((((CASE ''  WHEN 0.20895176385359537 THEN 0.6354782849748564 ELSE 0.952809732098218 END)OR(((-1078357059) BETWEEN ('') AND (0.9328251856791684)))))AND(((('616774135'))<=(('-1500555015'))))))AND('Y' COLLATE BINARY)))AND(((0x1d42ff83) NOT BETWEEN ('-1826838243') AND (x'c249')))))AND(((((((((x'')AND(NULL)))AND(x'2554')))OR(x'')))OR(0.46166846411622253)))))AND(((-1e500)IS(NULL))))); -- 0ms;
SELECT ALL ((rt0.c2)|(rt0.c1 COLLATE NOCASE)) FROM rt0 ORDER BY ((('X㴸Z')) BETWEEN ((DATETIME(rt0.c1, rt0.c1, rt0.c1))) AND ((rt0.c2 COLLATE RTRIM))) ASC; -- 0ms;
SELECT ALL (((rt0.c1)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c0, rt0.c1, rt0.c1)))))) FROM rt0 WHERE (((((((x'')AND(x'')))AND(0.623597141275095))) NOT BETWEEN (1557464901) AND ('1806067821' COLLATE BINARY))); -- 0ms;
SELECT ((rt0.c2) ISNULL) FROM rt0 LIMIT -920853179 OFFSET 828086393; -- 0ms;
SELECT DISTINCT (((((rt0.c2, rt0.c0, rt0.c0))>((rt0.c0, rt0.c1, rt0.c2))))GLOB(CAST(rt0.c2 AS NUMERIC))) FROM rt0 WHERE (((((((((x'' COLLATE RTRIM)OR((((x'')) NOT BETWEEN (('-1433737191')) AND ((0.7478369253773888))))))OR(CAST(0.6807788148185003 AS TEXT))))OR((('+8') NOTNULL))))OR(0.9269969045227274))); -- 0ms;
SELECT DISTINCT (((((rt0.c1 IN ()))OR('-1016747543')))OR(x'')) FROM rt0 WHERE ((((((x'')) BETWEEN ((NULL)) AND (('c'))))+((('-1725077470') BETWEEN (7.47005944E8) AND (0x2c8667f8))))); -- 0ms;
SELECT DISTINCT (~ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)), CASE rt0.c1  WHEN ((rt0.c2)>(rt0.c0)) THEN rt0.c1 COLLATE BINARY END, ((CASE WHEN rt0.c2 THEN rt0.c1 END) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2) IS FALSE) IN (((rt0.c2) IS TRUE))) FROM rt0 WHERE ((((('H' IN ()), ((('-133314120')) NOT BETWEEN ((x'b199')) AND ((x''))), ((x'cbf9')<(x''))))!=((((0.3788880553214119)IS('-1839925480')), (- (0.9759436229156384)), CASE NULL  WHEN x'' THEN x'b5c6' ELSE '346144675' END)))); -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN (rt0.c1, rt0.c1)) AS BLOB), (((NOT (rt0.c1))) NOT BETWEEN (UNICODE(rt0.c2)) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)), NTILE(((((rt0.c2)<=(rt0.c0)))>((~ (rt0.c2))))) OVER ( GROUPS  CURRENT ROW) FROM rt0;SELECT ALL x'' FROM rt0 WHERE (CASE WHEN CAST('788015784' AS INTEGER) THEN (+ ('5,IWV')) WHEN ((('-1830567399', 1.58881915E9, 0.02392511533051822))>=((NULL, x'', x'ae43'))) THEN (x'' IN ()) WHEN (+ (0Xfffffffff0836ec1)) THEN CAST('-1929018760' AS INTEGER) END); -- 0ms;
SELECT ALL ((((rt0.c1)GLOB(NULL))) NOT NULL) FROM rt0 GROUP BY (+ (UNLIKELY(rt0.c2))) HAVING (+ (((rt0.c1)<(0xfffffffff2b35cd1)))) ORDER BY ((((((((ROUND(rt0.c1, rt0.c0))OR((NOT (rt0.c2)))))AND((rt0.c2 IN ()))))AND(CAST(rt0.c0 AS TEXT))))AND('-1323888209')), (- (((rt0.c0)||(rt0.c0)))) DESC;SELECT ALL (NOT (CASE WHEN rt0.c1 THEN rt0.c1 END)) FROM rt0 WHERE ((~ (((0.0343543960371957) NOT BETWEEN ('') AND ('E|6_dD킇l|'))))) GROUP BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) LIMIT -931703912; -- 0ms;
SELECT DISTINCT 'ᢀsᢹRhoursQzPa/', (((rt0.c2)LIKE(NULL)) IN (ABS(DISTINCT rt0.c0), (rt0.c0 IN ()))), (- (rt0.c2)) COLLATE NOCASE, (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c1)>(rt0.c0))) AND ('\e')), (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, COUNT(rt0.c1), ((rt0.c2)AND(x'')))) AND ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)), CASE WHEN rt0.c1 THEN '180498114' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) FROM rt0 WHERE ((('-1718055204') ISNULL)); -- 1ms;
SELECT (((rt0.c1 IN ()))<<(AVG(rt0.c2))) FROM rt0 WHERE (CASE LTRIM('668721009', x'')  WHEN 0.19016625409420596 COLLATE BINARY THEN (('490930051')GLOB('	3숙F')) WHEN (- ('0.2060641496281238')) THEN ((NULL) NOTNULL) WHEN (((0.32191304501169904, -1.83992548E9, ''))!=((x'1e98', '-1729550086', x'b873'))) THEN ((-416110297) NOT BETWEEN (0.34195758718811176) AND (0.6674046553721474)) WHEN (0.27800593376349636 IN ()) THEN CAST(0x74d159fd AS REAL) WHEN (((0.6202958660634058)) BETWEEN (('944514017')) AND ((x'365a'))) THEN ((2085544831)*(NULL)) WHEN json_array(-1.532096548E9, '-262174340') THEN TRIM(x'b635') WHEN (((NULL)) NOT BETWEEN (('861598862')) AND ((x'59929ff7'))) THEN (~ (NULL)) ELSE ((NULL) ISNULL) END); -- 0ms;
SELECT DISTINCT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))<>(((~ (rt0.c1))))) FROM rt0 WHERE ((((((0.9117673164785046)) NOT BETWEEN ((0.2087718456011548)) AND ((x''))))>>((((NULL, '760373691', x'4fd2', 1856051400, x'')) BETWEEN (('-1222089454', 'lnV9盬!', NULL, '', 0Xffffffffc488a126)) AND ((0.8277310786059494, NULL, '-1360223070', 0.46065704920086936, NULL)))))) ORDER BY ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))=((((rt0.c2)IS NOT(rt0.c2))))), ((GLOB(x'b4e63ad1', rt0.c2)) NOTNULL) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (((~ (rt0.c1))) IS TRUE) FROM rt0 WHERE (json_type(TRIM(DISTINCT x'')));SELECT DISTINCT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ()) FROM rt0 WHERE ((((((NULL))<=((0x7402c0d4)))) BETWEEN ((('')==(x''))) AND ((0.7808891934750173 IN ('', 0Xffffffffd940b62e))))); -- 0ms;
SELECT LAG((IFNULL(DISTINCT rt0.c2, rt0.c2) IN ()), ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))>>(rt0.c2)), COALESCE(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (x'')), ((rt0.c2) IS TRUE))) OVER (), PERCENT_RANK() OVER (), LAG(((rt0.c0)/((rt0.c2 IN ()))), ((x'') NOT BETWEEN (((rt0.c1)<=(rt0.c2))) AND (((rt0.c2) NOTNULL))), rt0.c1) OVER (), LAG(CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS INTEGER), (+ (0.7772558717122485)), (NOT (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))))) OVER (), (((rt0.c0)AND(rt0.c0)) IN ()) FROM rt0 WHERE (TRIM((('1022697892')-(NULL)))); -- 1ms;
SELECT DISTINCT rt0.c2, (((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) IN (rt0.c2 COLLATE NOCASE)), ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((rt0.c2 IN ()))))AND('EA')) FROM rt0; -- 0ms;
SELECT ALL ((UNLIKELY(rt0.c0))GLOB(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) FROM rt0; -- 0ms;
SELECT ((((('5768196667305458098:/lX~^{U' IN ()))OR(rt0.c0)))OR((((rt0.c1))<((0X33dcf629))))) FROM rt0 WHERE (NULL) LIMIT -2005229689 OFFSET 251462692; -- 0ms;
SELECT ((((rt0.c1) BETWEEN (rt0.c1) AND (NULL))) NOT NULL) FROM rt0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 COLLATE RTRIM ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)) END  NULLS LAST; -- 0ms;
SELECT '-1127360056' FROM rt0 WHERE ((((('')<(0.5311543867777424)))AND(((NULL) NOT BETWEEN (-1360223070) AND (NULL))))); -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM rt0 GROUP BY (NOT (((rt0.c2)IS(rt0.c2)))) HAVING LAST_INSERT_ROWID(); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) BETWEEN (((rt0.c1)GLOB(x''))) AND (CAST(rt0.c2 AS INTEGER))) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(-1016536602) FROM rt0 WHERE (((((((0.04584142688071868)GLOB(NULL)))OR(((x'') NOTNULL))))OR((((NULL))<=(('-75867017')))))); -- 0ms;
SELECT DISTINCT ((('1013752922'))==((rt0.c0))), MAX(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(NULL)))AND(rt0.c0)) COLLATE BINARY), 0.1098042944527251 FROM rt0 WHERE (((((LTRIM(0X14fe6397, NULL))AND('Dh]䓇1O>돇' COLLATE BINARY)))OR('I~'))); -- 0ms;
SELECT ALL 0.2942207591979632 FROM rt0 WHERE (((((((((NULL)AND('-1222089454')))AND('-1929018760')))OR('-333883754')))AND(1251405348)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((((((((((rt0.c0)>=('-1038233774')))AND((rt0.c1 IN (rt0.c1)))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))OR(x'ea1c')))AND(rt0.c2)))OR(((rt0.c0)=('944514017')))))AND(((rt0.c1)-(rt0.c2)))), (((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((NULL, ((rt0.c2) IS TRUE), AVG(rt0.c2), ((rt0.c1)=(rt0.c2)), CASE x''  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) AND ((x'', LIKELY(rt0.c0), (- (rt0.c1)), COUNT(*), ((rt0.c0) BETWEEN (rt0.c2) AND (608687071))))), ((((rt0.c0)<(rt0.c0)))||(((rt0.c0)-(rt0.c1)))) FROM rt0 GROUP BY (CAST(1794161402 AS TEXT) IN (LIKELIHOOD(rt0.c0, 0.12122981612277595), ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))) HAVING ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'86a4')))OR(('' IN ()))))OR(NULL)); -- 0ms;
SELECT DISTINCT (((rt0.c0) BETWEEN (1.65735132E8) AND (NULL)) IN (rt0.c2, CAST(0X2c8667f8 AS INTEGER))) FROM rt0 WHERE ((((((x'' IN ()))AND((('1057562344')IS(0X6813a5ff)))))AND(HEX(x'')))); -- 0ms;
SELECT DISTINCT LEAD((((rt0.c0, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c1))<>((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)), ((rt0.c0)>(rt0.c1)), (((rt0.c1))==((rt0.c2)))))), ((rt0.c2) NOT BETWEEN ('') AND (NULL)) COLLATE BINARY, CASE WHEN rt0.c0 COLLATE RTRIM THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) WHEN (rt0.c2 IN (rt0.c2)) THEN rt0.c1 WHEN ((rt0.c1)/(rt0.c2)) THEN CAST(rt0.c1 AS REAL) ELSE (+ (rt0.c0)) END) OVER ( ORDER BY (NOT (rt0.c1))) FROM rt0 NOT INDEXED WHERE (IFNULL(DISTINCT ((x'') NOT NULL), CASE WHEN 0.5928420241363601 THEN '' END)) ORDER BY NULL ASC  NULLS FIRST, (((rt0.c1) ISNULL) IN ()), ((CAST(rt0.c1 AS NUMERIC)) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1 COLLATE NOCASE)) ASC; -- 0ms;
SELECT DISTINCT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))OR((((rt0.c2, rt0.c0, 0.7778697203673454)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))))))AND(rt0.c2)) FROM rt0 WHERE (NULLIF(CASE NULL  WHEN 'zX' THEN 0.8750418011481924 END, LIKELIHOOD(NULL, 0.2783843913215539))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) ISNULL))&(((((rt0.c1)AND(NULL)))OR(rt0.c0)))) FROM rt0 WHERE ((('-2086123745' COLLATE BINARY)<>(CASE x''  WHEN 7.26655302E8 THEN x'' ELSE 0.15912359673462495 END))) ORDER BY (((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) AND (((rt0.c2 IN ())))) ASC  NULLS FIRST; -- 1ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND (((((NULL))<>((rt0.c1)))))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 GROUP BY CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE 0.7289518119407293 END COLLATE NOCASE; -- 0ms;
SELECT 0.6312183695796443 FROM rt0 WHERE (((((((((NULL COLLATE BINARY)AND(((x'3311bc1e')<('-hNY쥍릦&')))))OR((((0.41537030559990606))!=((x''))))))OR(CAST(x'' AS BLOB))))AND((x'' IN ())))) GROUP BY ((CAST(rt0.c0 AS NUMERIC)) NOT NULL) HAVING '97314671'; -- 0ms;
SELECT ALL ((rt0.c0)<=(0.5150027409852048)), (NOT (0.6657854416889407)), (NOT (rt0.c1)) FROM rt0 WHERE (CAST((((0xffffffffc9b90d51))<=((-1.640518115E9))) AS INTEGER)) GROUP BY (NOT (rt0.c2)), ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((NOT (rt0.c1))) AND (((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))), 'bnk\rHUwi'; -- 0ms;
SELECT DISTINCT (NOT ('')), (NOT ((((0xffffffff8610a47a, '!0', rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, '861598862')) AND ((x'', rt0.c0, rt0.c1))))), NULLIF(((rt0.c2)&(x'')), ((rt0.c1) NOTNULL)) FROM rt0; -- 0ms;
SELECT ALL (LOWER(DISTINCT rt0.c0) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((((NULL)%(rt0.c1))) IS FALSE) FROM rt0 WHERE ((x'' COLLATE BINARY IN ())); -- 0ms;
SELECT ALL ((((CAST(rt0.c0 AS REAL))OR(((0.7730017095199064)>(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE)), ((((rt0.c2, rt0.c1, rt0.c0))<=((0X45b897f4, rt0.c1, rt0.c1))) IN ()), ((COUNT(rt0.c2))GLOB(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))), GROUP_CONCAT((~ (rt0.c1))), rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT INSTR((((rt0.c2))<>((rt0.c2))), ((rt0.c1) NOTNULL)) FROM rt0 ORDER BY CASE (((rt0.c2))>((rt0.c0)))  WHEN (rt0.c1 IN (rt0.c0)) THEN (((rt0.c0))<>((rt0.c0))) ELSE rt0.c1 END DESC, ('61496360' IN ()) DESC  NULLS LAST; -- 1ms;
SELECT ALL CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE '-795396957' END COLLATE NOCASE COLLATE NOCASE FROM rt0 WHERE (((((+ (0X12f574aa))))<>((CASE NULL  WHEN x'' THEN NULL ELSE 635297401 END)))) ORDER BY (IFNULL(DISTINCT x'f773139c', rt0.c1) IN ())  NULLS LAST, CASE WHEN (((rt0.c2))==((rt0.c1))) THEN (((rt0.c0))<((rt0.c0))) WHEN (+ (rt0.c0)) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 ELSE CAST(rt0.c2 AS INTEGER) END DESC; -- 0ms;
SELECT ALL 'B&⊕', (((SUM(rt0.c1)))>=((CAST(rt0.c1 AS BLOB)))), 0.8540763103065802 FROM rt0; -- 0ms;
SELECT DISTINCT (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1))))<>((LOWER(DISTINCT rt0.c2)))), COUNT(*) OVER (), DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL json(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))), (NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), '547156401' FROM rt0 WHERE ((((NOT (0.5562432793895907))) IS FALSE)) ORDER BY CAST((((-1557917618))<=((rt0.c0))) AS TEXT)  NULLS FIRST; -- 0ms;
SELECT ALL (AVG(rt0.c0) IN ()) FROM rt0 WHERE (0.28778243824453087); -- 0ms;
SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c2) AND (((rt0.c1)<=(rt0.c2)))) FROM rt0 WHERE ((- (CAST(NULL AS REAL)))); -- 0ms;
SELECT ((((rt0.c2)%(rt0.c1))) IS TRUE) FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((x'')<<('|8b')), 0.18638441533290162)); -- 0ms;
SELECT DISTINCT (((CAST(rt0.c2 AS BLOB)))<((TOTAL(rt0.c0)))), (+ (CASE WHEN rt0.c2 THEN rt0.c2 END)), 0.5687709025472676 FROM rt0 WHERE (CASE WHEN NULL THEN x'' ELSE '' END COLLATE BINARY) LIMIT -1292638608 OFFSET 406207807; -- 9ms;
SELECT ALL 0.3693698070710614 FROM rt0 WHERE (((((((NULL)) BETWEEN (('887655089')) AND (('1Q9K*>雌	'))), (('-962405657')||(NULL)), CAST(-1044571881 AS NUMERIC)))>(((('') BETWEEN (x'') AND (0.453720052438644)), CAST('' AS TEXT), ((((x'')OR(106230191)))AND(x'')))))); -- 0ms;
SELECT ALL ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL rt0.c2, (('/U')||(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))), ((NULL) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM FROM rt0 WHERE ('0.27257873469478444'); -- 0ms;
SELECT ((x'') NOT BETWEEN (SUM(rt0.c0)) AND (((rt0.c1) NOT BETWEEN (0X3684a20d) AND (rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((- (rt0.c0))) BETWEEN (((NULL) NOTNULL)) AND (((rt0.c1) ISNULL))) FROM rt0 WHERE (CAST(((NULL) IS FALSE) AS INTEGER)); -- 0ms;
SELECT COUNT(*) FROM rt0 GROUP BY (- ((rt0.c2 IN ('Q*Ab')))), CAST((NOT (rt0.c1)) AS NUMERIC), CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END  WHEN ((((rt0.c2)OR(x'')))AND(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END END LIMIT -1428992088 OFFSET -1284142990; -- 0ms;
SELECT DISTINCT ((((rt0.c0 COLLATE NOCASE)OR(HEX(rt0.c2))))AND((~ (rt0.c2)))) FROM rt0 GROUP BY COALESCE(DISTINCT (NOT (rt0.c1)), ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)), ((rt0.c0) IS FALSE), ((rt0.c0) NOT NULL)) LIMIT -1639119335 OFFSET -1007847050; -- 0ms;
SELECT DISTINCT (+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))), (- ('b콒')), AVG(CASE WHEN rt0.c2 THEN rt0.c1 END), (((rt0.c1)) NOT BETWEEN ((NULLIF(DISTINCT rt0.c0, rt0.c1))) AND ((('vy' IN ())))), 0.5211738241115207 FROM rt0 WHERE ((CAST(x'' AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT (((((NULL))>((rt0.c0)))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) AND (json_valid(rt0.c2))), SUM(((rt0.c2) IS TRUE)) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND rt0.c1 PRECEDING EXCLUDE GROUP), (NULL IN ()) COLLATE NOCASE FROM rt0 WHERE (CAST(NULL AS REAL));SELECT DISTINCT CASE rt0.c1 COLLATE BINARY  WHEN (((rt0.c1))!=((rt0.c0))) THEN UPPER(rt0.c1) ELSE ((rt0.c2)<=(rt0.c1)) END FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT json_patch(rt0.c1, x'286e'), GROUP_CONCAT(load_extension(rt0.c2)) OVER (), SUM((- (rt0.c2))) FROM rt0 ORDER BY (((((((rt0.c0)AND(rt0.c2)))AND(-416110297))))>((LOWER(rt0.c0))))  NULLS LAST, (rt0.c2 IN ()) COLLATE RTRIM DESC  NULLS LAST;SELECT DISTINCT ((NULL) BETWEEN (((rt0.c2) NOTNULL)) AND (0.17009897266131657)) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2)==(rt0.c2))), CAST(((rt0.c1)IS(rt0.c1)) AS REAL), rt0.c1, COUNT(*) OVER (), CAST(((rt0.c0) BETWEEN (rt0.c2) AND ('')) AS REAL), ((rt0.c1 COLLATE BINARY)||(((rt0.c0)LIKE(rt0.c2)))), ((((CASE WHEN rt0.c1 THEN rt0.c0 END)OR(CAST(NULL AS REAL))))AND(CAST(rt0.c2 AS TEXT))) FROM rt0 WHERE (((('溱' IN ()))<<(COALESCE(-1.82163804E8, 0x2ea39859)))); -- 0ms;
SELECT rt0.c0, (((((((((x'')OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR('')) IN ()), ((((x'')AND(rt0.c2)))OR(rt0.c2)) COLLATE BINARY, TOTAL(x'c4be'), TOTAL(CAST(rt0.c2 AS REAL)) FROM rt0 GROUP BY ((((rt0.c2)OR(rt0.c0)))<(((rt0.c1)IS NOT(rt0.c0)))) ORDER BY ((((rt0.c0)GLOB(rt0.c2)))AND((NOT (rt0.c0)))), (- (rt0.c2)) DESC; -- 1ms;
SELECT ALL ((((rt0.c1) NOTNULL))<((((rt0.c1, rt0.c1, rt0.c2))>((rt0.c2, rt0.c0, x''))))) FROM rt0 WHERE (((((0.32191304501169904)AND(-25628739))) NOT BETWEEN (((x'')LIKE(0.6910387008502156))) AND (CASE WHEN NULL THEN 0.6092407592291644 ELSE x'' END))) LIMIT -57137647 OFFSET -1589126373; -- 0ms;
SELECT ALL (+ (0.7987367747724002)) FROM rt0 WHERE (CAST(NULL AS TEXT) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)+(((NULL)IS(rt0.c1)))) FROM rt0 WHERE ((~ (((NULL)OR(-1.729550086E9))))); -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (-1214383017))) AND (x'')) FROM rt0 WHERE (((x'') NOTNULL) COLLATE NOCASE); -- 0ms;
SELECT ALL CAST('-347037437' AS REAL) FROM rt0 LIMIT 1559681792; -- 0ms;
SELECT ALL 0.004267413672597753 FROM rt0 WHERE ((((('')LIKE(0x49750c6))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR(((((0.1601363452736395)AND(rt0.c0)))AND(rt0.c0)))))OR(TRIM(rt0.c2, rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<<(rt0.c2)), MIN(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) FROM rt0 WHERE (((CAST('Ta>' AS INTEGER))<=(CASE WHEN '*D*''qI' THEN NULL END))); -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE BINARY) NOT BETWEEN ((NOT (rt0.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN 0.07217300329663079 ELSE rt0.c2 END)) FROM rt0 ORDER BY x''  NULLS LAST, ((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM; -- 0ms;
SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 END)==(((x'') IS TRUE))), (((rt0.c1, rt0.c0, rt0.c2)) BETWEEN (((NOT ('1942583392')), CAST(NULL AS INTEGER), (~ (NULL)))) AND ((CAST(rt0.c0 AS BLOB), TOTAL(0.5394177634249587), ((rt0.c1)GLOB(rt0.c1))))), rt0.c0 FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c0 IN (rt0.c1)))OR(((rt0.c0)LIKE(rt0.c2)))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))) FROM rt0 LIMIT 651022619 OFFSET -814814108; -- 1ms;
SELECT DISTINCT (((rt0.c2 IN ())) NOTNULL), (((((rt0.c2)IS(rt0.c0))))>=((rt0.c0))), ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN 81743864 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOTNULL) FROM rt0 WHERE (((((0.4000250894232188)) BETWEEN ((0.7629027374492257)) AND ((NULL))) IN ())) LIMIT 1857952573 OFFSET 511704105; -- 0ms;
SELECT ((((NULL)OR((rt0.c1 IN ()))))OR(ABS('CdCYpuHnk'))), (- (((('-357474144'))>((rt0.c1))))), x'' FROM rt0 WHERE ((((('0.7078064821646275')&(NULL))) NOT NULL)); -- 0ms;
SELECT ALL (((rt0.c0))<((NULL))) FROM rt0 WHERE (((LIKELIHOOD(NULL, 0.4346128286729507))>>(CASE WHEN x'' THEN 0.5150027409852048 WHEN x'' THEN 0.26802853308994734 WHEN x'39b7' THEN 0.952809732098218 ELSE '-1134171406' END))) ORDER BY UPPER(HEX(rt0.c2))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))+('')) FROM rt0 ORDER BY (((rt0.c2, rt0.c1, -1.086374906E9)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN '-416110297' THEN rt0.c0 END, ((((x'63fd')OR(rt0.c1)))OR(rt0.c2)), rt0.c2 COLLATE BINARY)) AND ((CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c0)>=(rt0.c1)), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT AVG(rt0.c1), COUNT(*), 'qX' FROM rt0 WHERE ((NULL IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT LAST_VALUE(json_array_length((((rt0.c2))>=((rt0.c2))))) OVER () FROM rt0 WHERE (((x'')IS NOT(0.5478560873030333)) COLLATE RTRIM); -- 0ms;
SELECT '', CAST(((rt0.c1) IS TRUE) AS NUMERIC), AVG(288211755) FROM rt0 WHERE ((~ (((0.2247211804565472) NOT BETWEEN (NULL) AND (x''))))); -- 0ms;
SELECT ALL UNLIKELY(DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))), SUM(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END) OVER (), ((rt0.c2)%(rt0.c0)) COLLATE RTRIM FROM rt0 WHERE (CAST((((('760373691')AND(1.74623697E9)))AND('-262174340')) AS TEXT)); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)GLOB(rt0.c2)) THEN rt0.c2 ELSE CAST(rt0.c1 AS BLOB) END, (((rt0.c0 IN ())) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((rt0.c2, rt0.c0, rt0.c0)))) AND (((rt0.c0)*(rt0.c1)))), ((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('')))AND(rt0.c1)) FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN CASE WHEN 'i]/?' THEN x'' WHEN 0.22085799246145277 THEN '' WHEN NULL THEN 0Xffffffffd0d0ea87 ELSE 0.3175811916983853 END ELSE (~ (0.30589370909313385)) END); -- 0ms;
SELECT DISTINCT (TOTAL('-1856661917') IN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))) FROM rt0 WHERE (TOTAL_CHANGES() COLLATE RTRIM) GROUP BY 0.38205100312294016 ORDER BY ((((rt0.c2)OR(CASE WHEN rt0.c1 THEN x'' END)))AND(rt0.c2)) ASC, CAST(((rt0.c2) IS TRUE) AS REAL) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT LEAD(CAST(((rt0.c1) BETWEEN (')#_d') AND (rt0.c0)) AS BLOB), ((((rt0.c1) BETWEEN (rt0.c1) AND ('h Nou!ih斄'))) BETWEEN (((rt0.c2)|(rt0.c0))) AND ((((rt0.c0))<=((rt0.c1))))), ((rt0.c1) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (NULL))) OVER () FROM rt0 LIMIT 1247098239; -- 4ms;
SELECT DISTINCT NTH_VALUE(CASE WHEN (((rt0.c2, rt0.c0, rt0.c2))<=((rt0.c2, rt0.c1, rt0.c1))) THEN json_type(rt0.c0) WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN (NOT (rt0.c1)) WHEN rt0.c2 COLLATE BINARY THEN QUOTE(rt0.c1) END, json_quote(CASE WHEN rt0.c0 THEN rt0.c2 ELSE '1430938997' END)) OVER () FROM rt0 LIMIT -823913528 OFFSET -840635283;SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (NULL); -- 0ms;
SELECT CUME_DIST() OVER ( PARTITION BY (+ ((+ (rt0.c2)))), (~ (rt0.c1)), '490930051', ((rt0.c1)+(rt0.c0)) COLLATE NOCASE), json_insert((((rt0.c1)) BETWEEN ((0.954926747526257)) AND ((rt0.c1))), CAST(rt0.c0 AS INTEGER), AVG(rt0.c1), (((rt0.c0))=((rt0.c0))), CASE rt0.c0  WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c0 END), ((((rt0.c1) NOT NULL)) IS TRUE) FROM rt0 WHERE ((((+ (x'e1f60df9'))) BETWEEN ((('pPs]') NOT BETWEEN ('639257655') AND (x''))) AND ((+ (0.7535001789013348))))); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) ISNULL) FROM rt0 WHERE (((CAST(x'' AS NUMERIC))<>(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT ((((((((((((LIKELIHOOD(rt0.c0, 0.12114040276694771))AND(x'cb6c')))AND(COUNT(*))))AND(((rt0.c0)OR(rt0.c0)))))AND((rt0.c2 IN (rt0.c2, rt0.c0)))))AND(((rt0.c0) IS FALSE))))OR(rt0.c1)) FROM rt0 WHERE ((((0.0 IN ()))<<((((x'')) NOT BETWEEN ((0.14291572153494203)) AND ((x'')))))) LIMIT -383805291; -- 0ms;
SELECT DISTINCT LAG(rt0.c0 COLLATE RTRIM, '0.8464264656716756', '-358978636') OVER () FROM rt0; -- 0ms;
SELECT 0.0324101197605533 COLLATE RTRIM FROM rt0 GROUP BY (~ (((rt0.c0) NOTNULL))); -- 1ms;
SELECT (((rt0.c0 COLLATE RTRIM))==((((0.9016338665084976) NOT NULL)))) FROM rt0 WHERE ((- (HEX('BXy8X絢瓰R')))); -- 0ms;
SELECT ALL (((+ (rt0.c2))) BETWEEN ((~ (rt0.c2))) AND (((rt0.c0) ISNULL))) FROM rt0 GROUP BY rt0.c1, (((~ (rt0.c1)))<<(rt0.c1)), CAST(CAST(rt0.c1 AS BLOB) AS BLOB) HAVING NULL COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))LIKE(((rt0.c2)>=(rt0.c1)))), (((~ (rt0.c2)))>(CAST(rt0.c2 AS INTEGER))), (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END IN ()), CAST(CASE WHEN rt0.c2 THEN '869696707' END AS BLOB), TRIM(DISTINCT rt0.c2 COLLATE NOCASE, CAST(0X7867adb1 AS TEXT)) FROM rt0 WHERE ((CASE WHEN 7.49437072E8 THEN NULL END IN ())) GROUP BY (((rt0.c2 IN (rt0.c1)))<=(CAST(rt0.c1 AS BLOB))), ((('-1556233714', (NOT (rt0.c1)), (rt0.c1 IN ()), rt0.c0, ''))<>((((rt0.c1)<(rt0.c2)), rt0.c2 COLLATE NOCASE, CASE WHEN rt0.c2 THEN rt0.c1 END, rt0.c0, rt0.c1))), ((0X5203f15a)-(CAST(rt0.c2 AS BLOB))) HAVING ((((COUNT(-1.166651177E9))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))))AND('')); -- 0ms;
SELECT (((+ (rt0.c0)))&((NOT (rt0.c1)))), (((rt0.c1 COLLATE BINARY))>((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))), MIN(CAST(rt0.c1 AS REAL)) FROM rt0 ORDER BY TYPEOF(rt0.c2) COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT CASE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN CASE NULL  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN rt0.c0 THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) THEN x'ffb5' ELSE ((rt0.c2)AND(rt0.c2)) END FROM rt0; -- 0ms;
SELECT ((x'') NOT BETWEEN ((((rt0.c2))>=((rt0.c0)))) AND (((rt0.c0)==(rt0.c0)))), CAST(((rt0.c1)&(rt0.c1)) AS INTEGER), FIRST_VALUE(rt0.c1) OVER () FROM rt0 WHERE (x'a496') LIMIT -1640518115 OFFSET -720952214; -- 0ms;
SELECT DISTINCT MIN((rt0.c0 IN ())) FROM rt0 ORDER BY CASE ((rt0.c2)+(rt0.c1))  WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)) THEN (('/n韴V') ISNULL) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END; -- 0ms;
SELECT ALL ((LTRIM(rt0.c1)) IS FALSE) FROM rt0; -- 0ms;
SELECT ALL (+ ((rt0.c0 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((rt0.c1 COLLATE BINARY))) FROM rt0 WHERE ((((('Ld	y0Rw寨.')|(-259821887))) IS FALSE)) ORDER BY CAST(('1665462238' IN ()) AS NUMERIC)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((rt0.c2)AND('1323653960')))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0)<<(rt0.c0)) WHEN (rt0.c0 IN ()) THEN SUM(NULL) END FROM rt0; -- 0ms;
SELECT DISTINCT NTILE((((rt0.c2)) BETWEEN ((((rt0.c1)OR(rt0.c0)))) AND ((LTRIM(rt0.c1, rt0.c1))))) OVER () FROM rt0 WHERE (((NULL)IS NOT(((NULL) IS TRUE))));SELECT DISTINCT 0.24749709815684662 FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (0.7109226410785873))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)<>(rt0.c1)))), LAG(((((rt0.c1)/(rt0.c1)))||(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1)))), (((((((rt0.c0, -1.702809989E9, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, '-232792124', rt0.c1))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c2) IS FALSE))), ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))!=(rt0.c0 COLLATE NOCASE))) OVER (), GROUP_CONCAT(((rt0.c0)=(NULL))) FILTER(WHERE ((((rt0.c1)||(rt0.c0))) IS FALSE)) OVER ( PARTITION BY (((rt0.c2))<=((((rt0.c1) NOTNULL)))), (~ ((~ (rt0.c1))))) FROM rt0; -- 3ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))LIKE(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0 WHERE ((('') NOT BETWEEN ((('')OR(''))) AND (((((0.9043947580047614)OR('2057473210')))AND('1569581685'))))) EXCEPT SELECT (((+ (rt0.c1))) NOTNULL) FROM rt0 ORDER BY x'84bd', CAST(UNLIKELY(rt0.c2) AS INTEGER)  NULLS FIRST;SELECT DISTINCT CASE (('寨v<ouOiZ^') ISNULL)  WHEN (((rt0.c0, rt0.c0, 0.718171862587683))>((rt0.c1, '-1028875023', rt0.c0))) THEN rt0.c0 COLLATE BINARY ELSE (+ (rt0.c0)) END, CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) END, rt0.c1 FROM rt0 WHERE (json_array_length((((((((('-202140397')OR(NULL)))OR(-1.640518115E9)))OR(0.4516216458750887)))OR(NULL)))); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT (rt0.c2 IN ())) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)<>(rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END ELSE rt0.c0 COLLATE RTRIM END, (COUNT(*) IN ((rt0.c0 IN ()))), GROUP_CONCAT(rt0.c1) OVER () FROM rt0 GROUP BY CAST(rt0.c1 COLLATE RTRIM AS INTEGER) ORDER BY (- (CAST(rt0.c1 AS TEXT))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt0.c2 COLLATE RTRIM)OR(MAX('832862663'))))OR(AVG(rt0.c1))), x'', ((((rt0.c2, rt0.c0, rt0.c1))!=(('668509830', rt0.c2, rt0.c2))) IN ()) FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL)) NOT NULL); -- 1ms;
SELECT DISTINCT ((((rt0.c2) BETWEEN (rt0.c0) AND (NULL)))/((rt0.c1 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)>>(x'')))<=((rt0.c1 IN ('E|6_DD킇L|')))) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT ((~ (rt0.c1)))), ((((COUNT(*))OR((rt0.c1 IN (rt0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.7987052709868502))), ((((rt0.c0) NOTNULL))=(((rt0.c2)<=(rt0.c1)))) FROM rt0 WHERE (((((((((((0.398075212748082)OR(0.7808891934750173)))AND('2097692599')))AND('896735725')))OR('-1099943239'))) NOT BETWEEN ((('2129113447') NOT NULL)) AND ((((0.5639192403200378, '', '0U>S')) NOT BETWEEN (('9#ayC/', '204285622', 0.013531529970417622)) AND (('Ntnr', x'22a2', NULL)))))); -- 0ms;
SELECT DISTINCT UNICODE(((((((((((((0Xffffffffb1ab40a2)OR(rt0.c1)))OR(rt0.c1)))OR(NULL)))AND(rt0.c0)))OR('xg{PC\r)(')))AND(rt0.c1))) FROM rt0 WHERE ((((((((((x'')AND(NULL)))OR(0.44515958162129576)))AND('0.298596217368828')))AND(x'd122')) IN ())); -- 0ms;
SELECT DISTINCT (((~ (rt0.c0)))<>(CAST(rt0.c0 AS BLOB))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE FROM rt0 WHERE (((('6hD!|5	') NOT BETWEEN (0.5888288441110018) AND (-756160266)) IN ())); -- 0ms;
SELECT DISTINCT CAST((- (rt0.c0)) AS BLOB) FROM rt0 WHERE ((((0.5275969399774693, '667989836', 8.61598862E8)) NOT BETWEEN ((CASE WHEN 'gx' THEN NULL ELSE x'' END, ((0Xffffffff94c12fa3) BETWEEN (x'e569') AND (x'9670')), (((('0.7627183202043625')OR(1688358421)))OR(NULL)))) AND (((((('L鵯!VX')OR(NULL)))AND(x'')), ((x'')%(-665045549)), (0Xffffffff8f1127f4 IN ('', '464919095')))))); -- 0ms;
SELECT IFNULL(((rt0.c2)+('0.16763839441949313')), (((x'7f73'))<=((rt0.c1)))) FROM rt0 WHERE ((0.8081393002828554 IN ()) COLLATE RTRIM); -- 1ms;
SELECT TOTAL(NULL) OVER () FROM rt0 WHERE (((((NULL)*('220494590')))+((((x''))<=(('0.7627183202043625')))))); -- 0ms;
SELECT DISTINCT ((((((((rt0.c1)OR(((rt0.c1) NOT NULL))))AND(rt0.c0)))OR(((x'') IS FALSE))))AND(CAST(rt0.c2 AS TEXT))) FROM rt0 GROUP BY ((rt0.c2) BETWEEN (((((rt0.c0)OR(0x33330ae2)))AND(rt0.c2))) AND ('1904261542')); -- 0ms;
SELECT ALL ((CASE rt0.c0  WHEN 0X44d3eb46 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)IS NOT((((('l鵯!vX')AND(rt0.c2)))OR(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((~ (rt0.c1)) IN (rt0.c2 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) AS INTEGER) FROM rt0 WHERE ((('1072091530' COLLATE BINARY)<((((x'', NULL, 'r')) BETWEEN ((x'291f', 0.26775070154672587, NULL)) AND ((NULL, '-688568900', NULL)))))); -- 0ms;
SELECT DISTINCT ((0.8669450886854938)OR(CAST(rt0.c1 AS TEXT))), ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))&((rt0.c1 IN (rt0.c0)))), COUNT(((rt0.c0)/('')) COLLATE RTRIM) OVER () FROM rt0 GROUP BY ((LIKELY(rt0.c1))*(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) HAVING ((((rt0.c2)*(rt0.c0)))|((0.8419027190254047 IN ()))); -- 0ms;
SELECT ((((rt0.c1)!=(rt0.c1)))<(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))), ROW_NUMBER() OVER (), CASE ((0.8534217145919726) IS TRUE)  WHEN rt0.c1 COLLATE RTRIM THEN CASE rt0.c0  WHEN 0xffffffffc9b90d51 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL)) END, ((((AVG(rt0.c0))OR(CAST(rt0.c1 AS BLOB))))AND(rt0.c1 COLLATE RTRIM)), ((rt0.c0)-(rt0.c0)) COLLATE RTRIM COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c1)%(rt0.c2)))AND((rt0.c2 IN ()))) FROM rt0 ORDER BY ((((rt0.c2 COLLATE RTRIM)OR(LTRIM(rt0.c1))))AND(json_insert(rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c1))) ASC, ((rt0.c2 IN ()) IN ());SELECT ALL LAG(((((rt0.c1)LIKE('榔e'))) NOT BETWEEN (rt0.c0) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))), CASE CASE WHEN '-1038233774' THEN rt0.c1 ELSE 'yV' END  WHEN ((rt0.c0) NOTNULL) THEN CAST(0.35375340668988553 AS NUMERIC) ELSE GLOB(rt0.c2, rt0.c1) END, 'h2') OVER (), ((MAX(rt0.c2))<('K')), (~ (GROUP_CONCAT(rt0.c1))), (~ (rt0.c1)) COLLATE BINARY, rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (STRFTIME(x'', rt0.c0, rt0.c1)) AND (((rt0.c0) IS FALSE))) FROM rt0 LIMIT 240283789; -- 0ms;
SELECT ALL (rt0.c2 IN ()), COUNT((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (('-1557917618', rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))) OVER (), ((rt0.c2)IS(rt0.c1)) COLLATE RTRIM COLLATE BINARY FROM rt0; -- 0ms;
SELECT 'j쥍0ﷄBW,', ((CAST(rt0.c0 AS NUMERIC))>=((((rt0.c1))>=((rt0.c1))))), MAX(CASE WHEN rt0.c1 THEN rt0.c2 END) FROM rt0 WHERE (((('796072580' IN ()))LIKE(CAST(x'' AS TEXT)))) LIMIT 2016928567; -- 0ms;
SELECT DISTINCT COALESCE(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c1 IN (rt0.c2, rt0.c1))) FROM rt0 WHERE (((((x'')|(0.9789794183557053)))==(NULL))); -- 0ms;
SELECT DISTINCT (((((x'ed91639a')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN ((- (rt0.c0))) AND (((x'') NOT NULL))), ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) IS TRUE), LIKELY(DISTINCT (~ (NULL))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) IS TRUE) FROM rt0 WHERE ((((-1083651763, x'3a59', 'IF')) BETWEEN ((NULLIF('', NULL), ((((x'')AND(0X291cbd6d)))AND('-1830949445')), ((0.7141564519181853) IS FALSE))) AND (('-1086374906' COLLATE RTRIM, (- ('-323165692')), NULL COLLATE BINARY)))) ORDER BY ((((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1)))))<((rt0.c2))), rt0.c0 DESC; -- 0ms;
SELECT ALL ((GROUP_CONCAT(rt0.c1)) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN 0.4208038232463531 ELSE rt0.c0 END) AND (CAST(NULL AS INTEGER))) FROM rt0 GROUP BY ((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c1)) HAVING ((rt0.c2) ISNULL) COLLATE BINARY; -- 1ms;
SELECT DISTINCT ((rt0.c0)IS(MIN(rt0.c0))), (CAST(rt0.c0 AS TEXT) IN ()), CAST(highlight(rt0.c1, rt0.c1, rt0.c1, rt0.c1) AS NUMERIC) FROM rt0 GROUP BY (((rt0.c0)<(rt0.c2)) IN ());SELECT ALL rt0.c1 FROM rt0 WHERE (((((x'') BETWEEN (NULL) AND ('-867451628')))>=((~ (1225629039))))) ORDER BY ((rt0.c0)*('')) DESC LIMIT -1139986712 OFFSET -1723753864; -- 0ms;
SELECT DISTINCT (((((((x'')AND(rt0.c0)))AND(rt0.c1))))<((json_quote(rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL ((((((((CAST(rt0.c1 AS BLOB))OR(CASE WHEN rt0.c1 THEN rt0.c0 END)))OR((rt0.c1 IN ()))))OR(load_extension(rt0.c1, rt0.c2))))OR(0xffffffffd2ede8f6)) FROM rt0;SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT ALL (rt0.c2 IN ()) COLLATE NOCASE, rt0.c2, (NOT (((rt0.c2)<=(rt0.c2)))), (((((rt0.c2, rt0.c1, rt0.c2, rt0.c0, rt0.c1))<((rt0.c2, rt0.c1, rt0.c2, rt0.c0, rt0.c0)))) IS FALSE), CAST(rt0.c0 AS BLOB), (((rt0.c0 IN ()))<=(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)), ((CASE WHEN rt0.c0 THEN rt0.c2 END) IS TRUE) FROM rt0 WHERE ((NOT (CASE '~UH'  WHEN NULL THEN x'' END))) GROUP BY ((((rt0.c1 IN ())))<((rt0.c0 COLLATE NOCASE))); -- 0ms;
SELECT COUNT(*), (SUM(rt0.c1) IN ()), LAST_INSERT_ROWID() FROM rt0; -- 0ms;
SELECT DISTINCT SUM(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(NULL)))AND((rt0.c1 IN (rt0.c0, rt0.c2)))))AND(((rt0.c1) ISNULL))), NTILE((NOT (CASE rt0.c0  WHEN 0.776259903136002 THEN rt0.c2 ELSE rt0.c2 END))) OVER (), ((((rt0.c0)>(rt0.c1)))|((~ (rt0.c2)))) FROM rt0 WHERE ((CASE x'67e45eee'  WHEN 0.6045145107966157 THEN NULL END IN ('1182971613' COLLATE NOCASE, ((61496360)>>(NULL))))) LIMIT 332721260 OFFSET -1104505184; -- 1ms;
SELECT '140349610', (- (rt0.c0)) COLLATE RTRIM, (((rt0.c2 IN (NULL)))+((- (rt0.c1)))), AVG(CAST(rt0.c0 AS INTEGER)), rt0.c0 FROM rt0; -- 0ms;
SELECT ((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))))AND(((rt0.c2) ISNULL))), ((-1327074379)-(-734099532)), HEX((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) FROM rt0 WHERE (CAST(0.8225964315432887 AS INTEGER)) LIMIT 1879777098; -- 0ms;
SELECT ALL ((NULL)+(((rt0.c0) ISNULL))) FROM rt0; -- 0ms;
SELECT (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, ((rt0.c0)LIKE(rt0.c0)), '>L')) AND (((rt0.c0 IN ()), CAST(rt0.c1 AS NUMERIC), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c2)>=(rt0.c2)) THEN ((rt0.c1) ISNULL) ELSE rt0.c0 END FROM rt0 WHERE ((((0.25968551056757894)) BETWEEN (((('7\n4즸wF') NOTNULL))) AND ((CAST('' AS REAL))))); -- 0ms;
SELECT DISTINCT TYPEOF(((rt0.c1) IS TRUE)) FROM rt0 WHERE ((((CASE 2130493432  WHEN '' THEN '1432323986' ELSE x'' END))=((((((x'7a3d')AND(0.6105097693291577)))AND(0X73a44d73)))))); -- 0ms;
SELECT rt0.c2 FROM rt0 ORDER BY CASE rt0.c2  WHEN (((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, '0.02392511533051822')) AND ((rt0.c2, rt0.c2, rt0.c1))) THEN ((rt0.c0) ISNULL) ELSE (rt0.c0 IN (rt0.c1)) END DESC  NULLS FIRST, (- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (+ (AVG(rt0.c0))), ((((CAST(rt0.c0 AS NUMERIC))OR(TRIM(DISTINCT rt0.c0))))AND(AVG(rt0.c2))), (NOT (NULL)), ((((rt0.c0)-(rt0.c0))) BETWEEN ((- (rt0.c0))) AND (rt0.c2)), (((rt0.c1)) BETWEEN (('1597241974')) AND (((((((((('릦*|g')OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))))) FROM rt0 LIMIT 920616025; -- 0ms;
SELECT ALL LEAD((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))<>(((rt0.c1) ISNULL))), NULL, ((((rt0.c2) BETWEEN (8.1743864E7) AND (rt0.c0))) IS FALSE)) OVER ( RANGE (NOT (((rt0.c2)OR(rt0.c2)))) PRECEDING) FROM rt0 GROUP BY '+' HAVING (rt0.c0 IN ()) COLLATE NOCASE;SELECT TOTAL((((rt0.c1))>=((rt0.c0)))), ((rt0.c1)<(rt0.c0)) COLLATE NOCASE, CASE ((rt0.c0)%(rt0.c0))  WHEN json_valid(rt0.c1) THEN CAST(rt0.c2 AS TEXT) END FROM rt0 WHERE (json_array_length((0.14068984722112998 IN (NULL)), (- ('-6866294038383755562 ')))); -- 0ms;
SELECT ALL ((((rt0.c2 COLLATE BINARY)AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(rt0.c0)), rt0.c1, ((rt0.c2)>(rt0.c2)) COLLATE RTRIM COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL (((GROUP_CONCAT(rt0.c1), ((rt0.c2)<>(rt0.c2)), rt0.c2))>((AVG(rt0.c0), ('747005944' IN ()), (rt0.c1 IN (rt0.c0, rt0.c0))))) FROM rt0; -- 0ms;
SELECT ALL UNICODE((((((((((((('VS')AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))) FROM rt0 WHERE ((IFNULL('-1111036591', 'h^O') IN (CAST(1.8560514E9 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT CASE (((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c1)))  WHEN rt0.c2 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) END FROM rt0 GROUP BY CAST((+ (rt0.c1)) AS NUMERIC) HAVING (GROUP_CONCAT(rt0.c1) IN ()); -- 0ms;
SELECT ALL ((((x'')%(rt0.c2)))||(COUNT(rt0.c2))) FROM rt0 WHERE ((((((x'')%(x''))))=(('511704105' COLLATE RTRIM)))); -- 0ms;
SELECT ALL MIN(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))) COLLATE BINARY, UPPER('N2\n'), (CAST(rt0.c1 AS TEXT) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT '說', CAST((rt0.c0 IN ()) AS NUMERIC), ((((((x'bf1c') NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR(load_extension(rt0.c1))))AND(((rt0.c0) ISNULL))) FROM rt0 WHERE (((((((0.3960930023490029) BETWEEN (x'') AND (0.1839108436944299)))OR(CAST(x'ba01' AS REAL))))AND((('-1778641762')||(x''))))) ORDER BY rt0.c1  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c1) OVER () FROM rt0 WHERE ((((0.9833135075074408)) NOT BETWEEN ((((7.9607258E8)IS NOT(NULL)))) AND ((((NULL) BETWEEN (0xffffffffda898d4b) AND (-1.928977893E9)))))); -- 1ms;
SELECT ALL UNICODE(rt0.c0) COLLATE BINARY, ((((rt0.c2) ISNULL))<<(CAST('' AS BLOB))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE FROM rt0 WHERE (('N66' IN ()) COLLATE RTRIM); -- 0ms;
SELECT ALL SUM('332721260') OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS NUMERIC))AND(rt0.c0 COLLATE RTRIM)), ((rt0.c1)>=((+ (rt0.c1)))), ((((CASE WHEN rt0.c2 THEN rt0.c0 END)OR(CAST(rt0.c2 AS INTEGER))))AND(NULL)) FROM rt0 WHERE (((((((0.038630844133037634)AND(0.8927586988461648)))AND(''))) IS TRUE)) ORDER BY CASE WHEN (('a*^')<(rt0.c1)) THEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END DESC  NULLS LAST; -- 0ms;
SELECT rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0; -- 1ms;
SELECT (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END IN ()) FROM rt0 WHERE (((((x'')*('-1548925573')))&(NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ABS(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))), ((COALESCE(rt0.c0, rt0.c1)) NOT NULL), CASE WHEN x'662d' THEN (NOT (rt0.c0)) END, ((((NULL)OR(CAST(rt0.c1 AS REAL))))AND(rt0.c2 COLLATE NOCASE)), ((((rt0.c2 IN (rt0.c2))))<((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c1 COLLATE BINARY IN ()) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((CASE WHEN x'' THEN x'456e' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))), (((rt0.c1 IN (rt0.c1))) BETWEEN (rt0.c2) AND (rt0.c1)), CAST(rt0.c1 AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT (((((0.14763917402018356) NOT NULL), CASE WHEN rt0.c0 THEN rt0.c1 END, (((rt0.c1, rt0.c2, rt0.c2, rt0.c1, '-1964651828')) BETWEEN ((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2, rt0.c0, rt0.c1)))))<>(((((rt0.c2, rt0.c2, rt0.c1))=((rt0.c2, rt0.c0, rt0.c2))), ((rt0.c2) IS TRUE), ((rt0.c1)<(rt0.c0))))), ((CASE WHEN rt0.c2 THEN rt0.c1 END)|(((0.27301132631687886) BETWEEN (rt0.c0) AND (0xffffffffda898d4b)))), ((((rt0.c2)IS(NULL)))-(((rt0.c2) NOTNULL))) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (('oY') NOT BETWEEN ('') AND (NULL)), 0.03039044404538116)) ORDER BY CASE UNLIKELY(DISTINCT rt0.c2)  WHEN CASE rt0.c2  WHEN rt0.c1 THEN x'' ELSE rt0.c2 END THEN ((rt0.c1) ISNULL) ELSE ((rt0.c1)>>(-1.964651828E9)) END DESC, ((rt0.c1)GLOB(((rt0.c0)IS NOT(rt0.c1)))) ASC  NULLS LAST, ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) ASC; -- 0ms;
SELECT DISTINCT ((((rt0.c0)+(rt0.c2)))IS(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)) FROM rt0; -- 1ms;
SELECT rt0.c1, (((rt0.c0)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))), ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))|(((rt0.c0)IS NOT(rt0.c1)))) FROM rt0 GROUP BY '붇z''E~' HAVING (+ (rt0.c0)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT '726655302' FROM rt0 WHERE ((((CAST(x'10f5' AS BLOB)))>((' sw')))); -- 0ms;
SELECT ALL rt0.c0 FROM rt0; -- 0ms;
SELECT ALL (((rt0.c2, rt0.c2, rt0.c0))>((rt0.c0, rt0.c2, rt0.c1))) COLLATE RTRIM, DATE(CASE WHEN 0.14963984468378233 THEN rt0.c0 END, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c0))<=((rt0.c0)))), CASE WHEN MAX(rt0.c2) THEN COUNT(rt0.c1) END FROM rt0 WHERE (CASE WHEN (((('	D4|(Z')AND(x'0d2c9440')))AND(x'45a5')) THEN NULL ELSE ('X.oI' IN ()) END); -- 0ms;
SELECT (NOT (CAST(rt0.c2 AS TEXT))), (GLOB(rt0.c2, NULL) IN ((~ (rt0.c1)))), (((((rt0.c2)AND('v')))OR(rt0.c0)) IN ()) FROM rt0 WHERE (((NULL)>=(NULL)) COLLATE BINARY) LIMIT 276136519; -- 0ms;
SELECT (('-1186861717') ISNULL), CASE rt0.c0  WHEN '0.3693698070710614' THEN x'' END COLLATE NOCASE, x'' FROM rt0; -- 0ms;
SELECT rt0.c1, CASE WHEN TOTAL(rt0.c1) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END END, rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0 ORDER BY ((((rt0.c1)<=(rt0.c0))) NOT NULL) DESC  NULLS FIRST, (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT NULL); -- 0ms;
SELECT GROUP_CONCAT(((rt0.c0)>(rt0.c0))) FILTER(WHERE ((rt0.c2) ISNULL)) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING), NULL, (((((((((NOT (rt0.c2)))AND(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c2 AS TEXT))))OR(((rt0.c1) IS TRUE))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) FROM rt0 WHERE ((((('469213172') BETWEEN (0.45652864246477753) AND ('1566786578'))) IS TRUE)); -- 0ms;
SELECT DISTINCT UNLIKELY(GROUP_CONCAT(rt0.c0)) FROM rt0 WHERE (CAST((x'adf0' IN (0.664366751784999, 0.9573642008874448)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c2, rt0.c0, x''))) IN (AVG(rt0.c2))) FROM rt0 GROUP BY GLOB(((rt0.c1) ISNULL), ((rt0.c0) NOT NULL)) HAVING rt0.c1; -- 0ms;
