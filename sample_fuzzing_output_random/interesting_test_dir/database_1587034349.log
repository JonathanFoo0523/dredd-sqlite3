-- Time: 2024/06/06 02:57:06
-- Database: database49
-- Database version: 3.40.0
-- seed value: 1587034349
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, languageid="lid"); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt1 SET (c1)=('958758674'); -- 0ms;
CREATE TABLE t0 (c0 REAL , c1 INTEGER , c2 INT ); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c4, c0)=('', 958758674, 0.24714002855634642) WHERE CAST((NOT (rt0.c4)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES (NULL, x''), (0.03331438795581787, 0.1559972865443986), (NULL, '958758674'); -- 0ms;
DROP TABLE rt0; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('-1179787010'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
DELETE FROM rt0; -- 0ms;
UPDATE OR ABORT vt1 SET (c1, c0)=(x'3ea3', x''); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=0.0; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, lid, c0) VALUES ('958758674', x'97fe', '480698361'); -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c0) VALUES ('-879866685', 'QN3O_*UD'), ('', NULL), (NULL, 4.80698361E8); -- 0ms;
INSERT OR ROLLBACK INTO vt1(lid, c0) VALUES (x'', 0.06317974027915396), ('1665308301', x''), (0.7316559180258133, '_i.X(~'); -- 0ms;
UPDATE OR ABORT rt0 SET c4=x''; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
INSERT OR ABORT INTO vt1(c1) VALUES (-222553513), (x''), ('-1610346861'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 887108853); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=('') WHERE (((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)) IN ()); -- 1ms;
UPDATE OR IGNORE vt1 SET (c1)=(NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (0Xffffffffb9ade0fe, NULL, '1705584759'); -- 0ms;
INSERT OR REPLACE INTO vt1(c1) VALUES (NULL), (0X54c8519d), ('-188207768'); -- 6ms;
INSERT OR ROLLBACK INTO rt0(c4, c2) VALUES (NULL, x'f41e'); -- 11ms;
INSERT OR REPLACE INTO rt0(c4, c2, c0) VALUES (((((NULL) BETWEEN ('') AND ('q%*'))) BETWEEN (((x'') BETWEEN ('-1063325520') AND (NULL))) AND ((NOT ('-1179787010')))), 0.5961450890616337, 0.4658082630528607); -- 1ms;
INSERT OR IGNORE INTO vt1(c1) VALUES ('''^({-'), (x'dfef'), (NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (0.12689496300959469); -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(x'') WHERE ((((((rt0.c4))>((rt0.c3)))))>=(('1705584759'))); -- 0ms;
UPDATE vt1 SET c1=x''; -- 1ms;
INSERT OR IGNORE INTO rt0(c4) VALUES ('-0.0'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('''^({-') WHERE (((vt1.c1)) BETWEEN ((((vt1.lid) ISNULL))) AND ((((vt1.c0)&('ŶG'))))); -- 0ms;
INSERT OR IGNORE INTO vt1(lid, c1) VALUES (0xfffffffff290f5a4, ''), ('NH8<eUF', '2032334798'), (1812867257, NULL); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=x''; -- 17ms;
UPDATE rt0 SET (c4)=(x''); -- 1ms;
VACUUM main; -- 18ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c3=0xffffffffb4000ac3; -- 0ms;
UPDATE rt0 SET c1=0X6c0e28b9, c3='/G'; -- 0ms;
UPDATE rt0 SET (c3, c0)=(NULL, x''); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'', c0=-1179787010, c0=x'' WHERE ((CASE WHEN rt0.c4 THEN rt0.c0 END)IS NOT(((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c4)))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c4, c3)=(x'978fe0e2', '1275134326', 0.026486001418111194); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1, c4, c0) VALUES (0.12689496300959469, NULL, x'', 0Xffffffffb9ade0fe); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (0.46707172305652367, x'227f'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL); -- 2ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4, c0) VALUES (x'', x'', x'fab8'), (NULL, NULL, '1422414237'), (0.4508791636555116, -2070629229, x'779f'); -- 1ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (0.177864921657104, 0.18931703131407318, 0.18633524556490277), (1.705584759E9, 0Xfffffffff4c82d68, '\rui?&'), ('', '', x''), (x'063f', x'', 0xffffffffb0ab3cd4), (0.21122044364472092, NULL, -400469100); -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (NULL), (0.12689496300959469), (''); -- 0ms;
PRAGMA cell_size_check = true; -- 2ms;
UPDATE OR FAIL vt1 SET (lid, c0)=(NULL, '-2067028520') WHERE (CAST(vt1.c0 AS NUMERIC) IN ()); -- 0ms;
INSERT OR ABORT INTO vt1(lid) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (NULL); -- 18ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1(c1, c0, lid) VALUES (0.18931703131407318, 1812867257, x''); -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX  rt0; -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1648836230); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 11ms;
UPDATE vt1 SET (c1, c1)=('271426388', '-400469100') WHERE CAST(((((vt1.c1)AND(vt1.lid)))OR(vt1.lid)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='958758674'; -- 22ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 887056848); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '64035'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
PRAGMA journal_mode = PERSIST; -- 0ms;
INSERT OR FAIL INTO vt1(lid) VALUES (0x62fcdeac); -- 0ms;
UPDATE OR FAIL vt1 SET c1=NULL; -- 1ms;
PRAGMA cache_spill = 7009668894952907986; -- 3ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x'936d'); -- 0ms;
INSERT OR IGNORE INTO vt1(lid) VALUES (-420734139); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL vt1 SET (c0)=('⵨	') WHERE ((vt1.c1)<=(vt1.lid)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET (c2)=(0.9933751811596885) WHERE ((rt0.c0 IN (rt0.c1, rt0.c0)) IN ()); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 515125866); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, prefix = 221); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE rt0 SET c3=x'' WHERE ((((((rt0.c0)OR(rt0.c0)))AND('958758674'))) NOTNULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET lid=NULL WHERE CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((vt1.c1) IS FALSE) END; -- 0ms;
PRAGMA application_id; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c3, c0) VALUES ('S', -0.0, -1817687955); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c3, c1) VALUES (x'', 0xffffffffe8215394, x'8736bd88'); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1, c3, c0) VALUES ('0.0', 0.9517671185732204, NULL, 0.5148152678593635), (NULL, 0.4633521160401901, 'rH', 9.58758674E8), ('-201858695', 0x7973e39f, NULL, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c2, c3) VALUES (NULL, 'l袸bJm賜䳃?{', 0.4224010968516001, ''); -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE rt0 SET c3='PLtuo' WHERE CAST(rt0.c1 AS BLOB); -- 1ms;
UPDATE OR IGNORE rt0 SET c1='-994139301'; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 894286904); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA temp.default_cache_size = -1212246013; -- 0ms;
UPDATE OR FAIL rt0 SET (c2)=(0.8438032462272693) WHERE CAST(((NULL) NOT NULL) AS TEXT); -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE vt1 SET (c0)=(0.01009190769666779); -- 0ms;
UPDATE OR FAIL rt0 SET (c0, c1)=(x'', NULL); -- 0ms;
UPDATE OR ABORT vt1 SET (lid)=(x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (((CAST(rt0.c3 AS INTEGER)))!=(((((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c2, vt1.c0)) AND ((rt0.c2, x'', '')))))) FROM vt1 GROUP BY (((((('-1275065661')=(rt0.c0)))OR(CASE vt1.c1  WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE x'a754' END)))AND(0x62fcdeac));SELECT DISTINCT (((ABS(vt1.lid)))=((((((1323376807)OR(rt0.c2)))OR(vt1.lid))))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((((rt0.c1, vt1.c1, vt1.lid)) BETWEEN ((vt1.c0, rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c1, NULL))))<>((vt1.c0 IN (vt1.c1)))) FROM rt0, vt1 WHERE ((((((x'') NOTNULL), 'NH8<eUF', load_extension(0.18931703131407318, 'z_')))<(((('v')>(x'')), ((0.18931703131407318)%(0X4ee120a7)), NULL)))); -- 0ms;
SELECT ALL ((vt1.c0)||(MIN(x'2deb'))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (+ (CAST(rt0.c1 AS NUMERIC))) FROM rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((0.6426826327615133)|((((rt0.c4))<((rt0.c0)))))) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt1, rt0 ORDER BY (((rt0.c2)) BETWEEN (((((vt1.lid))=((vt1.lid))))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c3) AND (vt1.lid))) IS TRUE) FROM rt0, vt1 WHERE (((NULL) ISNULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((rt0.c3) NOTNULL) COLLATE RTRIM FROM vt1, rt0 WHERE (CASE WHEN ((0.6751176935728653)>(NULL)) THEN (((('kc-e')OR('659971214')))AND(0.5362126386789647)) ELSE LOWER(NULL) END); -- 0ms;
SELECT ALL (- (rt0.c4)), '', COUNT(*) OVER () FROM rt0, vt1; -- 0ms;
SELECT rt0.c3, COUNT(CASE 0X217ec337  WHEN vt1.c1 THEN vt1.lid END) OVER ( GROUPS  CURRENT ROW), ((((rt0.c0)AND(rt0.c4))) NOTNULL), GROUP_CONCAT(CASE WHEN 0.46707172305652367 THEN vt1.c0 END) OVER (), (+ ((((vt1.lid))==((vt1.lid))))) FROM rt0;SELECT ALL MAX(((rt0.c3)&(rt0.c0))) FROM rt0 WHERE (((((NULL)GLOB(0xffffffff9735466c))) BETWEEN (CASE '1812867257'  WHEN x'a0a1' THEN '-1872208486' END) AND (TRIM(x'', 0x4c010176)))); -- 0ms;
SELECT DISTINCT (((x'fdc6')>=(vt1.lid)) IN ()) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CAST(load_extension(rt0.c1, '') AS REAL), NULL, ('-1817687955' IN ((vt1.lid IN ()))) FROM vt1, rt0 WHERE ((((179971254)) BETWEEN (((('958758674') NOT NULL))) AND ((CASE WHEN 'R,' THEN '-766332259' WHEN 0.14401930432508459 THEN -2067028520 WHEN NULL THEN NULL WHEN 0.7256905268528531 THEN 0xffffffffb4aa99ea WHEN '-869718277' THEN 0.06317974027915396 END)))) ORDER BY (- (rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST, vt1.c1; -- 0ms;
SELECT DISTINCT COUNT('vWP1') FROM vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c4) AND (vt1.c1))) NOT BETWEEN (MIN(rt0.c3)) AND ('')) FROM rt0, vt1; -- 0ms;
SELECT ALL NULL FROM rt0, vt1 GROUP BY CASE ((vt1.c0)>>(rt0.c3))  WHEN (+ (rt0.c2)) THEN rt0.c1 ELSE NULL END, CASE WHEN CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c1 END THEN ((rt0.c2)|(rt0.c0)) END, ((vt1.c0) NOT BETWEEN (rt0.c4) AND (NULL)) COLLATE RTRIM HAVING ((((((vt1.lid)AND(rt0.c4)))AND(rt0.c1))) IS TRUE); -- 1ms;
SELECT json_object((~ (rt0.c4)), ((((rt0.c2)OR(vt1.lid)))OR(vt1.c0)), GROUP_CONCAT(rt0.c2), (((NULL, 0.4045195666091512, vt1.c0)) NOT BETWEEN ((rt0.c3, vt1.lid, 0.06317974027915396)) AND ((vt1.c0, rt0.c2, rt0.c3))), rt0.c2, ((rt0.c4)+(vt1.c1))) FROM rt0, vt1 WHERE (CHAR(TRIM(1104067560, '556831161')));SELECT ALL (+ (rt0.c4)) FROM vt1, rt0 WHERE (CAST(LTRIM(0.6947438799965769, x'') AS NUMERIC)) ORDER BY (((vt1.c1, rt0.c1, vt1.lid, vt1.lid, vt1.lid)) NOT BETWEEN ((CAST(vt1.lid AS TEXT), CAST(rt0.c0 AS REAL), '-1958443389', ((rt0.c1)GLOB(rt0.c2)), ((((((((rt0.c4)AND(rt0.c0)))OR(vt1.c0)))OR('9 ()')))OR(vt1.lid)))) AND ((vt1.c1 COLLATE RTRIM, ((rt0.c3) NOTNULL), CAST(rt0.c1 AS TEXT), 0.8614049058732464, CAST('abTl0' AS BLOB))))  NULLS FIRST, (+ (rt0.c2)) COLLATE NOCASE, ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM DESC; -- 1ms;
SELECT DISTINCT ((((vt1.c1)<>(rt0.c3))) NOT NULL) FROM rt0, vt1 WHERE ((NULLIF(']B82', x'0e0679a5') IN ())); -- 0ms;
SELECT DISTINCT CASE (- (rt0.c2))  WHEN ((vt1.c0)-(rt0.c1)) THEN CASE WHEN rt0.c3 THEN vt1.c0 END ELSE MIN(rt0.c0) END FROM rt0, vt1 WHERE (((COALESCE(x'', x'', 0.9676357683213189, x'')) NOT BETWEEN ((('vW')=(x'a3b0'))) AND (CASE 'lN/)'  WHEN NULL THEN -2067028520 WHEN x'' THEN x'0554' WHEN 0.9349106462624227 THEN x'ef7b' ELSE '464435504' END))) GROUP BY ((0.7382508292962366) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c3) BETWEEN (rt0.c3) AND (x'd2d0')))) HAVING MAX(((vt1.c1) NOT NULL)); -- 0ms;
SELECT ALL (((vt1.c1)) BETWEEN ((CASE vt1.c0  WHEN rt0.c3 THEN vt1.c1 ELSE vt1.c0 END)) AND (((((vt1.lid))<=((rt0.c4)))))) FROM vt1 WHERE ((('')<(CASE WHEN 632238872 THEN NULL WHEN 0.2038718263864172 THEN 0.021430185913849598 WHEN x'' THEN x'' END)));SELECT DISTINCT NULL, ((((0.921416601935235 COLLATE NOCASE)OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))), CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END COLLATE RTRIM FROM rt0; -- 1ms;
SELECT ((CASE WHEN '' THEN 0x6f37c335 END) NOT BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND ((rt0.c4)))) AND (((vt1.c1)<>(rt0.c3)))) FROM vt1 WHERE (CASE (NOT (0.039157328291977156))  WHEN ((NULL)=('')) THEN 0.5961450890616337 COLLATE RTRIM ELSE ((NULL)AND(0.1559972865443986)) END);SELECT vt1.c1 FROM rt0;SELECT CASE (((vt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.lid)))  WHEN ((vt1.c1)||(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END WHEN (~ (rt0.c3)) THEN (NOT (vt1.c0)) WHEN rt0.c3 COLLATE BINARY THEN COUNT(*) END FROM rt0, vt1 WHERE (((x'1d43') NOTNULL) COLLATE BINARY); -- 0ms;
SELECT ((rt0.c3 COLLATE NOCASE)>=(CASE rt0.c1  WHEN vt1.lid THEN rt0.c0 END)) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS REAL), vt1.lid, (((+ (vt1.lid))) NOT NULL) FROM vt1; -- 0ms;
SELECT DISTINCT vt1.lid COLLATE NOCASE, (((((rt0.c2 IN ()))OR((vt1.lid IN ()))))OR((((rt0.c4)) BETWEEN ((vt1.lid)) AND ((rt0.c4))))), (((((((((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))AND('')))OR((+ (vt1.c1)))))OR('840533958')))AND('-1056038043')) FROM vt1, rt0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((((((vt1.c1)AND(rt0.c2)))AND(rt0.c4)))|(vt1.lid)) FROM vt1, rt0 WHERE (((x'' COLLATE BINARY) NOT BETWEEN (x'') AND (CAST(NULL AS BLOB)))); -- 1ms;
SELECT (~ (rt0.c1)) FROM rt0 WHERE (((((x'')-(x''))) NOTNULL)); -- 0ms;
SELECT DISTINCT (+ (((rt0.c0) IS TRUE))), CASE ((rt0.c4)=(vt1.c0))  WHEN SUM(rt0.c1) THEN UNLIKELY(DISTINCT vt1.c1) END, vt1.c1, (NULL IN ()) COLLATE NOCASE, (- (GROUP_CONCAT(vt1.c0))) FROM vt1 WHERE (((((CAST(320115459 AS BLOB))AND(CASE WHEN '*x0*Dㅮ~_J' THEN x'098e' ELSE x'' END)))OR(CAST(0X270c67f5 AS REAL))));SELECT DISTINCT ((CASE WHEN 9.58758674E8 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c3 ELSE rt0.c2 END)%(vt1.c0)), (NOT ((('') IS TRUE))), x'', json_quote((+ (rt0.c3))), (COUNT(*) IN ()) FROM rt0, vt1 GROUP BY ((((vt1.c0) ISNULL)) IS FALSE) HAVING ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c4 ELSE vt1.c0 END) NOTNULL); -- 0ms;
SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((((x'f5d5'))>((0.48330401265699363))) COLLATE RTRIM) GROUP BY ((((vt1.lid) NOT BETWEEN (rt0.c1) AND (vt1.lid)))||(NULLIF(DISTINCT vt1.lid, rt0.c0))); -- 1ms;
SELECT vt1.c1, LENGTH(((vt1.c1)+(NULL))), (((((NOT (rt0.c2)))OR(((rt0.c1)<<(rt0.c1)))))AND((vt1.lid IN ()))) FROM rt0;SELECT ((((((rt0.c0, rt0.c3, vt1.lid))==((rt0.c1, rt0.c3, 'xb')))))>=(((rt0.c4 IN ())))) FROM vt1, rt0 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT DISTINCT rt0.c2 FROM vt1;SELECT DISTINCT TOTAL(CAST(rt0.c0 AS NUMERIC)) OVER () FROM vt1;SELECT '' COLLATE NOCASE, rt0.c2 COLLATE RTRIM, ((((vt1.lid)OR(rt0.c4)))OR(rt0.c3)) COLLATE NOCASE FROM rt0 LIMIT -2053788061 OFFSET -99671484;SELECT DISTINCT (((rt0.c0, rt0.c1, vt1.c1)) NOT BETWEEN ((CAST(vt1.lid AS BLOB), ((rt0.c4)<<(rt0.c3)), ((rt0.c3)>(rt0.c4)))) AND ((((rt0.c3) NOTNULL), (rt0.c3 IN ()), ((rt0.c1) NOT NULL)))) FROM vt1, rt0 GROUP BY (((rt0.c4, rt0.c0, rt0.c4)) NOT BETWEEN ((((vt1.c1)*(rt0.c3)), rt0.c1, vt1.c1 COLLATE RTRIM)) AND ((((vt1.lid) BETWEEN (vt1.lid) AND (rt0.c3)), -2053788061, (- (rt0.c3))))); -- 1ms;
SELECT DISTINCT UNLIKELY(CASE WHEN vt1.c1 THEN vt1.lid END), ((vt1.c0 COLLATE NOCASE)AND(((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c4)))), -1837535421 FROM rt0, vt1; -- 0ms;
SELECT DISTINCT vt1.c0, ((((rt0.c4)AND(((rt0.c2) IS TRUE))))AND(x'a70f' COLLATE NOCASE)), ((vt1.c0)==('1746541588')) COLLATE NOCASE FROM rt0, vt1 GROUP BY (((rt0.c2)) BETWEEN ((((vt1.lid) NOT NULL))) AND ((json_extract(rt0.c2, vt1.c0))));SELECT ((((CASE WHEN '-1837535421' THEN vt1.lid END)AND(CAST(rt0.c0 AS NUMERIC))))AND(((vt1.c1)<>(rt0.c4)))) FROM vt1, rt0 WHERE (((('2037638047')) NOT BETWEEN (((('-1056038043') BETWEEN (0.9398830515262225) AND (x'')))) AND ((((0.07044147919088439)<<(NULL)))))) LIMIT 1865418850; -- 0ms;
SELECT DISTINCT ((rt0.c0) BETWEEN ((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((NULL, vt1.lid, vt1.lid)) AND ((vt1.c0, 0Xffffffff81bcb378, rt0.c2)))) AND (CHAR(rt0.c4))), (((rt0.c4)) NOT BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND (((~ (vt1.lid))))), ((SUM(rt0.c3)) IS TRUE) FROM rt0, vt1; -- 1ms;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST((0x0 IN ()) AS REAL)) ORDER BY vt1.c0 ASC; -- 0ms;
SELECT ((rt0.c1) NOTNULL), vt1.c1, ((((((((((rt0.c4)AND(vt1.c0)))AND(rt0.c2)))AND(-4.28701512E8)))AND(vt1.c1))) BETWEEN (vt1.lid) AND ('124147140')) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((SUM(vt1.lid))/(((rt0.c0) NOT NULL))) FROM rt0 WHERE (((((x'23d4630b') IS FALSE)) NOT BETWEEN (x'') AND (IFNULL(DISTINCT NULL, x''))));SELECT ALL (~ (((vt1.c0) ISNULL))) FROM rt0 LIMIT 124147140;SELECT ALL CAST(-1.330955052E9 AS NUMERIC) FROM rt0, vt1; -- 0ms;
SELECT LAST_VALUE(vt1.c0) OVER () FROM vt1 ORDER BY ((((((vt1.lid)AND(vt1.lid)))OR(vt1.c1))) IS TRUE)  NULLS FIRST; -- 0ms;
SELECT (((((((rt0.c4))<>((vt1.c1))))OR(((vt1.c0)>>(rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END)) FROM vt1;SELECT ROW_NUMBER() OVER (), (((rt0.c0)<>(vt1.c0)) IN (((rt0.c3)<=(1.660739244E9)))), GROUP_CONCAT(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) FROM rt0;SELECT DISTINCT (~ (((vt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) FROM vt1, rt0 WHERE (CASE x''  WHEN 'PLtuo' THEN x'' ELSE -352217084 END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((UPPER(vt1.lid)) BETWEEN (((rt0.c3)/(vt1.lid))) AND (((rt0.c0)<=(rt0.c1)))) FROM rt0, vt1 WHERE ((0.7661626481449947 IN ()) COLLATE BINARY); -- 0ms;
SELECT CASE WHEN ((((vt1.lid)AND(rt0.c0)))AND(NULL)) THEN vt1.lid WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.lid WHEN rt0.c0 THEN rt0.c1 WHEN 0.4689717981776055 THEN rt0.c2 END WHEN '|Q6tૺV''r' THEN (~ (rt0.c3)) ELSE rt0.c0 COLLATE BINARY END FROM rt0;SELECT DISTINCT (- ((('')/(vt1.c0)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (rt0.c2 IN (rt0.c1, rt0.c1)) COLLATE RTRIM FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CASE (((('&\⑅J1')AND(rt0.c1)))AND(vt1.c0))  WHEN COUNT(*) THEN COUNT(vt1.lid) WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (x'')) THEN (vt1.c1 IN ()) WHEN rt0.c2 COLLATE BINARY THEN (NOT (vt1.c1)) END, ((((rt0.c3 IN ()), GROUP_CONCAT(rt0.c4), ((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1))))<>((CAST(rt0.c1 AS REAL), (((rt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))), (((rt0.c3))<>((rt0.c3)))))), ((((((((vt1.lid)OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((rt0.c3)+(rt0.c3)))))AND(TOTAL(vt1.c0))))OR(((rt0.c1)>=(rt0.c0)))) FROM vt1 WHERE ((((~ (NULL)))/(CASE WHEN '4ax' THEN 0.257854867234139 ELSE NULL END)));SELECT DISTINCT 0.5457662544317289 FROM rt0 WHERE (((PRINTF(x''))IS NOT((('1198369490')<<(9.81148741E8))))) EXCEPT SELECT ALL ROW_NUMBER() OVER () FROM rt0, vt1 WHERE ((~ (((x'7976c3e2') BETWEEN (x'627d') AND ('Mr'))))); -- 0ms;
SELECT DISTINCT ((rt0.c3) NOTNULL) COLLATE BINARY FROM vt1, rt0 WHERE (0.5462736624122824) ORDER BY ABS(NULL) DESC  NULLS FIRST; -- 0ms;
SELECT (((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END, (~ (rt0.c2)), ((vt1.c1)%(vt1.c0))))<((((((vt1.c0)OR(rt0.c1)))AND(rt0.c0)), (((x'')) BETWEEN ((vt1.c1)) AND ((rt0.c2))), (((rt0.c0))<=((rt0.c3)))))) FROM vt1;SELECT DISTINCT CAST('|Q6tૺV''r' AS TEXT), vt1.c1, ((rt0.c2)==(rt0.c2)) COLLATE RTRIM COLLATE BINARY, load_extension(CASE WHEN vt1.lid THEN vt1.c1 ELSE NULL END), x'' FROM vt1 LIMIT -428701512 OFFSET -355823608;SELECT ((((CASE WHEN vt1.lid THEN rt0.c3 ELSE rt0.c3 END)OR(NULL)))OR(((rt0.c2) NOTNULL))) FROM vt1, rt0 WHERE (((- ('')) IN (x'f8d0' COLLATE NOCASE))) LIMIT -181246942; -- 1ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)<<(rt0.c0)) THEN MIN(rt0.c3) END FROM rt0, vt1; -- 0ms;
SELECT DISTINCT NTILE(((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(LIKELY(rt0.c3)))) OVER () FROM rt0, vt1 WHERE (TIME(CASE NULL  WHEN x'' THEN 0.3332170571794093 END, (~ (0xffffffffdfe4fdb9)), ((x'f874a727') IS TRUE))); -- 0ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN (rt0.c4 COLLATE NOCASE) AND (CAST(vt1.c1 AS BLOB))) FROM vt1;SELECT DISTINCT COUNT((- (NULL))) OVER () FROM vt1, rt0; -- 0ms;
SELECT ((vt1.lid)IS NOT(rt0.c3)) COLLATE RTRIM FROM rt0, vt1; -- 0ms;
SELECT DISTINCT LAST_VALUE(((0.24778249187299795)IS(TRIM(DISTINCT vt1.lid)))) OVER () FROM vt1 WHERE (((CASE 0Xffffffff87f20234  WHEN 0.43456802134291983 THEN 0.6386142149081299 ELSE '-428701512' END) NOTNULL)); -- 1ms;
SELECT ALL UPPER(DISTINCT ((rt0.c0)&(rt0.c2))) FROM vt1, rt0; -- 0ms;
SELECT NULL FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ROUND((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((((((((((vt1.c1)AND(rt0.c2)))AND(rt0.c3)))OR(vt1.lid)))OR(rt0.c2)))AND(vt1.c1)))OR(vt1.c1))) FROM vt1;SELECT ((DATETIME(rt0.c0, x'', rt0.c3))==(SUM(vt1.lid))) FROM vt1 WHERE ((x'' IN ())) LIMIT 1792706590;SELECT ALL rt0.c4, vt1.c0, (((rt0.c3 IN ())) BETWEEN (((vt1.lid) NOT BETWEEN (vt1.lid) AND (rt0.c0))) AND (CASE '-99671484'  WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c1 END)) FROM vt1, rt0 LIMIT -1849556969 OFFSET 1754961175; -- 0ms;
SELECT DISTINCT TOTAL(0x6e4efa8b) FROM vt1, rt0 WHERE ((NOT (CASE WHEN -1994149623 THEN NULL WHEN 0X11e29d6a THEN '-355823608' WHEN NULL THEN 0.9546001161277176 ELSE NULL END))); -- 0ms;
SELECT DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM COLLATE BINARY FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((LOWER(x''))IS(COUNT(*))) FROM vt1 WHERE ((- (((('282636420')) BETWEEN (('105361416')) AND (('798218115')))))); -- 1ms;
SELECT DISTINCT SUM(rt0.c2) FROM vt1 WHERE (CAST(((('1918000938'))<>((NULL))) AS TEXT));SELECT (((vt1.c1, rt0.c4, rt0.c3, vt1.lid, rt0.c4)) NOT BETWEEN ((UNLIKELY(DISTINCT vt1.c0), ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), ((rt0.c1) NOTNULL), CAST(rt0.c2 AS REAL), CASE WHEN vt1.lid THEN rt0.c0 WHEN vt1.c1 THEN rt0.c3 WHEN vt1.c1 THEN vt1.lid ELSE rt0.c0 END)) AND (((NOT (vt1.c1)), (((rt0.c4, vt1.c0, NULL)) NOT BETWEEN ((rt0.c4, vt1.c1, rt0.c0)) AND ((vt1.c1, vt1.lid, rt0.c0))), CAST(rt0.c0 AS REAL), ((rt0.c4)IS(rt0.c2)), NULL))) FROM rt0, vt1; -- 0ms;
SELECT ALL LIKELY(DISTINCT CASE WHEN rt0.c2 THEN vt1.c1 ELSE rt0.c4 END) FROM vt1, rt0 WHERE (CASE WHEN (- (0.5148152678593635)) THEN ((NULL) BETWEEN (x'') AND (NULL)) WHEN ((((0.921416601935235)OR(0.18629298650117787)))AND(0.9162628320568628)) THEN CAST(NULL AS REAL) WHEN '' THEN CAST(NULL AS TEXT) WHEN ((x'')==(0.30578993811947497)) THEN ((NULL)OR(0.5738828140208964)) WHEN (105361416 IN ()) THEN CAST(0x5b83800c AS INTEGER) WHEN ((0.11318051207097057)*(0.8335081355273724)) THEN CAST(-1330955052 AS INTEGER) WHEN ((((((((0.6426826327615133)OR(NULL)))OR(NULL)))AND('')))OR(NULL)) THEN (((('142017661')OR(0.7898018694861995)))AND(0.6221153853099736)) END); -- 0ms;
SELECT DISTINCT HEX(DISTINCT CAST(vt1.c0 AS BLOB)) FROM vt1, rt0 WHERE (((((0.18629298650117787) IS TRUE)) NOT BETWEEN (((0.24508760381199912)>=(NULL))) AND ('zP[' COLLATE NOCASE))); -- 0ms;
SELECT ALL ((vt1.c0)>=(rt0.c0)) COLLATE RTRIM COLLATE NOCASE FROM vt1, rt0 WHERE ((((('-1714615558') NOT BETWEEN ('0.4045195666091512') AND (x'')))<<(''))) ORDER BY rt0.c0, (((~ (rt0.c0))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((rt0.c0)>>(rt0.c2))))  NULLS FIRST, CASE ((((((((((((rt0.c2)OR(vt1.lid)))AND(rt0.c2)))OR(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)))AND(rt0.c4))  WHEN (vt1.c1 IN (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c3 END ELSE ((vt1.c0)<=(rt0.c1)) END  NULLS FIRST; -- 1ms;
SELECT (((vt1.c0, rt0.c2, '-2070629229')) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c1 END, ((rt0.c3) BETWEEN (vt1.lid) AND ('1647005934')), x'')) AND ((((((rt0.c2)OR(rt0.c4)))OR(rt0.c1)), (rt0.c4 IN ()), vt1.c0 COLLATE NOCASE))) FROM rt0 GROUP BY (rt0.c3 IN (rt0.c0)) COLLATE BINARY HAVING CASE ((((((((rt0.c4)OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c1)))AND(vt1.c0))  WHEN ((rt0.c3)IS(rt0.c4)) THEN AVG(vt1.lid) END;SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1, rt0 WHERE (((CAST('1865925429' AS NUMERIC))LIKE((- (x'cc9d'))))) LIMIT 1987958757 OFFSET 2066833111; -- 0ms;
SELECT DISTINCT ((((((rt0.c3)<=('1639216838')))OR(GROUP_CONCAT(rt0.c3))))OR(rt0.c3)) FROM rt0 WHERE (0.6767713331862107); -- 0ms;
SELECT DISTINCT (CASE WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c3 END IN ()) FROM vt1, rt0 LIMIT 1754961175; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (CAST((NOT ('oR*>X#V㹽5')) AS BLOB)); -- 0ms;
SELECT ALL CAST(json_extract(rt0.c2, vt1.c0) AS REAL) FROM rt0, vt1 WHERE (TRIM(CASE WHEN 0.809874224133657 THEN 0.1379130748868791 WHEN 0Xffffffffd46f8671 THEN '%5}5' WHEN 'lW' THEN '-1145034241' END));SELECT CAST(((rt0.c1)>>(rt0.c3)) AS BLOB) FROM vt1, rt0 LIMIT 314849291 OFFSET -538640967; -- 0ms;
SELECT ((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)))&((- (rt0.c2)))) FROM vt1, rt0 GROUP BY ((((rt0.c4) NOTNULL)) NOT NULL) HAVING ((rt0.c2) IS TRUE); -- 0ms;
SELECT MIN(((vt1.c0)|('!,[sn{潃'))) FROM rt0 WHERE (((((0.13588630130114432) BETWEEN (0.9072328770398916) AND (x'3b3c')))<<((('-613575664') IS FALSE)))) GROUP BY IFNULL(((rt0.c1)-(rt0.c0)), (((rt0.c2))!=((rt0.c3)))) HAVING ((TOTAL(vt1.c0))<(CAST(rt0.c0 AS REAL)));SELECT DISTINCT (((((rt0.c3)) BETWEEN ((vt1.c1)) AND ((rt0.c2)))) ISNULL), TYPEOF(DISTINCT 'lN/)'), (+ (((rt0.c0)||('-719005950')))) FROM rt0, vt1; -- 0ms;
SELECT ((((vt1.lid) NOTNULL)) NOT BETWEEN (SUM(rt0.c1)) AND ((rt0.c1 IN ()))) FROM vt1 WHERE (((0.23224229214998882) NOT BETWEEN ('9 ()') AND ('-1310383612')) COLLATE NOCASE);SELECT DISTINCT (NOT ((- (rt0.c0)))), ((((rt0.c0 IN ())))>(((NOT ('-719328565'))))), CAST(((vt1.lid) BETWEEN (rt0.c4) AND (vt1.lid)) AS REAL) FROM rt0 GROUP BY CASE ((rt0.c3) IS FALSE)  WHEN ((rt0.c1) IS FALSE) THEN highlight(vt1.lid, rt0.c1, x'', vt1.c0) WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END THEN ((((vt1.c1)OR(vt1.c1)))OR(rt0.c3)) WHEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c1 END THEN ((vt1.c1) NOT BETWEEN (-680663137) AND (vt1.c0)) END, json_patch(((vt1.c1)-(rt0.c0)), ((vt1.c1) BETWEEN (rt0.c2) AND (rt0.c1))), ((((vt1.c1)>>(rt0.c2))) NOT BETWEEN (TRIM(vt1.c0, vt1.lid)) AND (NULL));SELECT DISTINCT 0.16728053043309665 FROM rt0; -- 0ms;
SELECT DISTINCT (((- (NULL))) IS TRUE), (((rt0.c1)) NOT BETWEEN ((vt1.lid)) AND ((rt0.c3))) COLLATE BINARY, MAX(655124469) FROM rt0, vt1 WHERE (CASE ((0x1baeb930) IS FALSE)  WHEN CASE NULL  WHEN x'' THEN '1215940841' END THEN ((x'37eb') NOT NULL) END); -- 0ms;
SELECT (((rt0.c1 IN ())) IS FALSE) FROM vt1, rt0 WHERE (((((((((((((0.6167478459698363)OR(NULL)))AND(0.12291687395065543)))OR('*N+Lrg(')))OR(0.843924809850499)))OR('')))OR((('<JqL')*(x''))))); -- 0ms;
SELECT ALL ((((rt0.c0)+(rt0.c3))) NOTNULL) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((HEX(DISTINCT rt0.c3))) AND ((rt0.c2 COLLATE BINARY))) FROM vt1 WHERE (CAST(((x'')LIKE(NULL)) AS NUMERIC));SELECT ALL CAST(((vt1.c0) NOTNULL) AS BLOB), (((CASE WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 ELSE vt1.lid END, ((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0)), (((0.9570227935063311))!=((x'')))))>=((((((((((vt1.c0)AND(vt1.c1)))AND(rt0.c3)))AND(vt1.lid)))OR(rt0.c2)), ((rt0.c2) ISNULL), CASE rt0.c4  WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN NULL THEN rt0.c2 END))), AVG((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((105361416)))) OVER () FROM rt0 WHERE ('jAoZ,艹]');SELECT DISTINCT (((TOTAL(rt0.c2)))<=((CAST(rt0.c3 AS REAL)))) FROM vt1 WHERE (0.19434303538939368);SELECT ((CAST(vt1.c0 AS INTEGER)) NOT NULL) FROM vt1 GROUP BY CASE (((vt1.lid)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c4)))  WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 END THEN ABS(DISTINCT rt0.c2) END HAVING rt0.c1 LIMIT 687968116 OFFSET -136094161;SELECT DISTINCT (NOT ((rt0.c1 IN ()))) FROM rt0, vt1 WHERE (NULL); -- 0ms;
SELECT ALL vt1.lid COLLATE NOCASE, (- ((((NULL))!=((vt1.c0))))), ((((rt0.c3)AND(vt1.c0))) NOT BETWEEN ('S') AND (((rt0.c4) BETWEEN (rt0.c0) AND (0.2856347592306441)))) FROM rt0 LIMIT 1362992884;SELECT ((((rt0.c1)AND(vt1.lid)))OR(rt0.c2)) COLLATE RTRIM FROM rt0 WHERE ((~ (NULLIF('0.9349106462624227', '-1817687955'))));SELECT rt0.c0, (((rt0.c4)OR(rt0.c2)) IN ()), (+ (rt0.c3 COLLATE BINARY)) FROM vt1, rt0; -- 1ms;
SELECT DISTINCT CASE WHEN HEX(rt0.c1) THEN (((vt1.c1))>=((rt0.c4))) ELSE NULL END FROM rt0;SELECT ((CAST(rt0.c2 AS REAL)) IS TRUE) FROM rt0, vt1 WHERE ((((x'')) NOT BETWEEN ((((0x466301b0)OR(0.3226564271053328)))) AND ((CASE WHEN x'' THEN '142017661' END)))); -- 0ms;
SELECT DISTINCT ((LENGTH(rt0.c0)) ISNULL) FROM rt0, vt1 LIMIT -1640849678 OFFSET -1276719398; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1; -- 0ms;
SELECT ALL rt0.c4, ((rt0.c2) ISNULL) COLLATE RTRIM, vt1.lid FROM vt1, rt0; -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM rt0, vt1 WHERE (CAST((~ (NULL)) AS REAL)); -- 0ms;
SELECT ALL (((((- (rt0.c2)))AND(((((vt1.c0)OR(rt0.c0)))AND(vt1.lid)))))OR((vt1.c0 IN (vt1.lid, rt0.c0)))), rt0.c1, (((CAST(rt0.c4 AS REAL)))<((0Xffffffffbd8dfabe))) FROM vt1;SELECT ALL ((((vt1.c1)>>(vt1.lid)))+(CAST(rt0.c1 AS REAL))) FROM vt1 WHERE (json_insert(((0.3107642251047099) BETWEEN ('-355823608') AND (0Xffffffffcc6e06c7)), (((((((((((('-274128073')OR(x'')))OR(0.8508171354862838)))OR(NULL)))AND('0.18629298650117787')))OR(-0.0)))AND('*x0*Dㅮ~_J')), (~ ('-656329467'))));SELECT ALL rt0.c4 COLLATE BINARY, (~ (rt0.c0 COLLATE BINARY)), ((((rt0.c1)<(rt0.c3))) NOT NULL) FROM vt1, rt0 WHERE ((- (CAST(0.13297884381353575 AS INTEGER)))); -- 0ms;
SELECT LAST_VALUE((((('')IS(rt0.c4))) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt1.lid WHEN vt1.c1 THEN vt1.lid WHEN rt0.c4 THEN vt1.lid END) AND (NULLIF(rt0.c1, rt0.c2)))) OVER ( GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW), GROUP_CONCAT(rt0.c1) OVER (), (TOTAL(rt0.c2) IN ()) FROM rt0, vt1; -- 8ms;
SELECT ALL CASE WHEN ((vt1.c1)>=(rt0.c3)) THEN CAST(vt1.c1 AS TEXT) END FROM vt1, rt0 GROUP BY ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()), (((+ (vt1.lid))) IS TRUE), ((((rt0.c0)<=(0.9119716416295539))) IS TRUE); -- 1ms;
SELECT ALL CAST(((vt1.lid)!=(vt1.lid)) AS INTEGER) FROM vt1; -- 0ms;
SELECT ((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)AND(MAX(rt0.c2))))AND(COUNT(*))), (~ ((rt0.c0 IN ()))), ((vt1.c0) NOTNULL) COLLATE BINARY FROM vt1, rt0 WHERE (((CAST(4.80698361E8 AS BLOB))>=('lk' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c0) BETWEEN (vt1.lid) AND (rt0.c4)) THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c4)) ELSE CASE vt1.lid  WHEN vt1.lid THEN rt0.c1 END END FROM vt1, rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((((((((rt0.c3 COLLATE BINARY)OR(((rt0.c1) ISNULL))))AND((((rt0.c4)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))))OR(((vt1.c0)>>(rt0.c3)))))AND(((vt1.lid) IS FALSE)))) OVER (), ((rt0.c0)IS NOT(vt1.c0)) COLLATE BINARY, (+ (0.7183633347944139)) FROM vt1, rt0 WHERE ((((((-433454511) IS TRUE)))>(((0.7468427813049475 IN ()))))); -- 1ms;
SELECT DISTINCT (((((((rt0.c3)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))OR(rt0.c3)))AND((((vt1.lid, vt1.c1, rt0.c2)) NOT BETWEEN ((vt1.lid, x'', vt1.lid)) AND ((vt1.c0, rt0.c1, rt0.c0))))) FROM rt0, vt1 GROUP BY (- (((((vt1.c1)OR(rt0.c2)))OR(rt0.c0)))), ((((rt0.c4 COLLATE RTRIM)OR(((rt0.c0) BETWEEN (0.4370402326650715) AND (rt0.c2)))))OR((vt1.c0 IN ()))), CAST(((rt0.c4) ISNULL) AS NUMERIC), ((((vt1.lid) IS FALSE))!=((NOT (rt0.c2)))), ((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1))) NOT NULL) HAVING ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) IN ((rt0.c3 IN ()))); -- 1ms;
SELECT DISTINCT (((rt0.c3)) BETWEEN (((rt0.c1 IN (rt0.c4, rt0.c2)))) AND ((((vt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) FROM rt0, vt1; -- 0ms;
SELECT ALL vt1.lid FROM vt1 WHERE (CAST(((((NULL)AND(-1.36094161E8)))OR(NULL)) AS REAL)) ORDER BY ((((vt1.c1)+(6.32238872E8)))>=(((vt1.lid) NOTNULL))); -- 0ms;
SELECT DISTINCT ((((((rt0.c4)%(x'9dc9')))AND(((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)))OR(NULL)))))OR(x'')) FROM rt0 WHERE (((((0.12930218244090652)<(0.46707172305652367)))&(CASE WHEN 0.6259395226954233 THEN 0.9415977973554727 END))); -- 0ms;
SELECT ALL (((vt1.c0)) NOT BETWEEN ((((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c0)))AND(vt1.c0)))OR(NULL)))) AND ((json_valid(vt1.lid)))), CAST(GROUP_CONCAT(vt1.lid) AS NUMERIC), LOWER(((rt0.c4)<=(rt0.c0))) FROM vt1, rt0 LIMIT 56968257 OFFSET 852409009; -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS REAL) FROM rt0, vt1; -- 1ms;
SELECT ALL MAX((((vt1.lid)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) FROM vt1, rt0 WHERE (json_extract(SUBSTR(x'', x''), x'', (((('-826564707')AND(x'')))AND('669322006')), CAST(0.29396521160821154 AS TEXT))) GROUP BY (((+ (rt0.c0))) BETWEEN (((((vt1.lid)OR(rt0.c3)))OR(rt0.c4))) AND (CAST(vt1.lid AS INTEGER))) HAVING ((((((((CAST(vt1.c0 AS REAL))AND((+ (rt0.c4)))))OR((rt0.c0 IN ()))))OR((vt1.lid IN ()))))OR(x'')); -- 0ms;
SELECT DISTINCT CAST(((vt1.lid) NOT BETWEEN (rt0.c2) AND (vt1.c1)) AS REAL) FROM rt0, vt1; -- 0ms;
SELECT ALL COUNT(*), CASE WHEN ((vt1.c1) BETWEEN (0.1379130748868791) AND (rt0.c0)) THEN (((vt1.c0, vt1.c0, rt0.c1))<((vt1.lid, vt1.c0, rt0.c1))) WHEN ((rt0.c0)||(rt0.c1)) THEN (+ (rt0.c0)) WHEN IFNULL(rt0.c3, rt0.c3) THEN 'MMy6k*wL}' ELSE ((rt0.c2) NOT BETWEEN ('0.6767713331862107') AND (rt0.c4)) END, ((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c4)))AND(((rt0.c1) ISNULL))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (vt1.lid)))), MIN(MAX(((vt1.c0) NOT NULL))), GROUP_CONCAT((('868212692')>(rt0.c0))) OVER () FROM rt0 WHERE (0.6404044283458028);SELECT ALL vt1.c0 FROM vt1; -- 0ms;
SELECT MIN(TRIM(vt1.lid)) COLLATE NOCASE FROM rt0, vt1 WHERE (((CASE WHEN '/t' THEN NULL END)<<('0.6767713331862107' COLLATE NOCASE))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT IFNULL(LIKELIHOOD(vt1.c0, 0.42183571583112045), rt0.c1 COLLATE NOCASE) FROM rt0, vt1 WHERE ((((x'') NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c1)AND(rt0.c4)))AND(rt0.c3 COLLATE BINARY)) FROM rt0, vt1 GROUP BY 0.8509873563596345 HAVING (((rt0.c0 IN ()))AND((('')*(rt0.c1)))); -- 1ms;
SELECT ALL NULLIF(vt1.lid COLLATE RTRIM, ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.lid))), 'R,', json_array_length(715443191, vt1.c0 COLLATE RTRIM) FROM vt1, rt0;SELECT ALL rt0.c1 FROM vt1;SELECT CUME_DIST() OVER () FROM rt0, vt1; -- 0ms;
SELECT ALL ((vt1.c0 IN ()) IN ()) FROM rt0 WHERE (((((CAST(0.7881979088329891 AS TEXT))AND(((((((((NULL)AND('uU')))AND('-719328565')))AND(x'')))OR(x'')))))OR(((x'') BETWEEN (x'') AND (''))))); -- 0ms;
SELECT CASE CASE -1695338972  WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN vt1.lid ELSE vt1.c0 END  WHEN ((rt0.c3)<(rt0.c3)) THEN (vt1.c1 IN (rt0.c2, vt1.c0)) END, ('4jwNt x65' IN ()), ((vt1.lid) IS FALSE), GROUP_CONCAT(CAST(vt1.lid AS NUMERIC)), CAST((+ (rt0.c0)) AS BLOB) FROM rt0, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE RTRIM) NOT NULL), ((AVG(vt1.c0))&(CAST(-869718277 AS TEXT))), (NOT ((((rt0.c1, rt0.c3, rt0.c1))=((rt0.c4, rt0.c1, rt0.c3))))) FROM vt1 UNION ALL SELECT ALL ((((((((vt1.lid)OR(((0.358854912363758) NOT NULL))))AND(0.2646401637959407)))AND((rt0.c4 IN ()))))OR((vt1.lid IN ('1215940841')))), (((((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))OR(((NULL)/(vt1.c1)))))OR((((rt0.c0))>((rt0.c0))))), GROUP_CONCAT(NULL) OVER ( RANGE  UNBOUNDED PRECEDING) FROM rt0, vt1;SELECT ALL rt0.c2 COLLATE BINARY FROM vt1, rt0 LIMIT -579791817 OFFSET 632238872; -- 0ms;
SELECT COUNT(*) OVER () FROM vt1, rt0; -- 0ms;
SELECT ALL ((AVG(rt0.c2))%(x'' COLLATE NOCASE)) FROM vt1, rt0 WHERE ((((((x'' IN ()))AND(((x'd438') BETWEEN (NULL) AND ('')))))AND(CASE WHEN NULL THEN '' END))); -- 0ms;
SELECT ALL COUNT(((((rt0.c2)OR(vt1.c1)))AND(rt0.c4))) FILTER(WHERE rt0.c2) OVER () FROM vt1, rt0; -- 1ms;
SELECT DISTINCT CAST(x'' AS BLOB), ((CAST(rt0.c4 AS INTEGER)) IS TRUE), CASE ((rt0.c3)+(vt1.lid))  WHEN ((((x'05aea7bd')AND(rt0.c3)))OR(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0Xffffffff97591c7a WHEN vt1.c0 THEN '*x0*Dㅮ~_J' ELSE vt1.c0 END ELSE ((vt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) END FROM vt1, rt0 WHERE (((NOT ('179971254')) IN ())); -- 0ms;
SELECT ALL LIKELIHOOD(CAST(rt0.c4 AS NUMERIC), 0.5342905137060231) FROM vt1;SELECT ALL (((((vt1.c1 IN ()))OR((rt0.c0 IN ()))))OR(CASE vt1.c1  WHEN rt0.c0 THEN rt0.c4 END)) FROM rt0 WHERE ((((('') NOT BETWEEN ('q}*') AND ('g䱤vTb4'))) NOT BETWEEN (((0xffffffffb0ab3cd4)/(''))) AND ((((0.6642415999637932)) BETWEEN (('-225380956')) AND ((NULL)))))) GROUP BY CAST(NULL AS BLOB);SELECT MAX(((((((((vt1.c0)OR(rt0.c3)))AND(rt0.c0)))OR(vt1.c1)))AND(vt1.c0))) FROM vt1 WHERE (((((0.8778275616565939) ISNULL)) NOTNULL));SELECT DISTINCT CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c4)>=(rt0.c4)) ELSE ((((rt0.c4)OR(vt1.lid)))OR(rt0.c1)) END FROM vt1 WHERE ((((('840533958')<=(2054108923)))<<((NOT (NULL)))));SELECT DISTINCT ((((((((((rt0.c1)<=(rt0.c2)))OR(((rt0.c4) ISNULL))))OR(CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END)))AND(NULLIF(vt1.c0, rt0.c1))))AND(ABS(vt1.c0))) FROM rt0, vt1; -- 0ms;
SELECT ALL CAST(UNICODE(vt1.c0) AS BLOB), NULL, (((json_array_length(vt1.c1)))=(((- (x''))))), ((((MAX(x''))OR(GROUP_CONCAT(rt0.c3))))OR(((((rt0.c4)AND(vt1.c0)))OR(rt0.c4)))), COUNT(((rt0.c2)IS NOT(rt0.c1))) OVER () FROM rt0 WHERE ((((NULL IN ()))+((((x''))=((0Xffffffffe16b316e)))))) ORDER BY DATE((vt1.lid IN ()), rt0.c0, CAST(vt1.lid AS NUMERIC));SELECT DISTINCT rt0.c3 FROM vt1;SELECT DISTINCT CUME_DIST() OVER () FROM rt0 WHERE (((CASE WHEN 0x7ca4ff99 THEN 0.7020779267377079 ELSE 0X746e2ec6 END) IS FALSE)) GROUP BY CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c4 END COLLATE NOCASE;SELECT ALL ((((vt1.c0) NOT NULL)) BETWEEN (x'') AND (NULL)) FROM vt1 WHERE (CAST(CAST(0x4c010176 AS BLOB) AS NUMERIC)); -- 0ms;
SELECT 0.9440530388372343 FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((((rt0.c2, rt0.c4, vt1.c0)) BETWEEN ((rt0.c0, vt1.lid, rt0.c2)) AND ((rt0.c2, rt0.c4, vt1.c1)))) NOTNULL) FROM vt1;SELECT ALL ABS(DISTINCT LIKE(rt0.c4, rt0.c4)) FROM vt1;SELECT ((((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.lid END)OR(CAST(rt0.c4 AS REAL))))OR(((((rt0.c3)AND(vt1.c1)))AND(rt0.c3)))) FROM vt1;SELECT DISTINCT rt0.c1 COLLATE RTRIM COLLATE BINARY FROM vt1, rt0 WHERE (CASE WHEN (- (-1.212246013E9)) THEN CASE NULL  WHEN 0.06534586355443628 THEN 'c\n''(' END WHEN (('-774999062') IS TRUE) THEN x'' COLLATE BINARY WHEN NULL COLLATE NOCASE THEN (((''))<>(('[g&'))) END) ORDER BY (((vt1.c0) NOT NULL) IN ())  NULLS FIRST; -- 0ms;
SELECT ALL vt1.c0, LAST_VALUE(((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))OR(vt1.c0)))AND(rt0.c1)))))OR(CAST(rt0.c3 AS TEXT)))) OVER (), SUM((((vt1.c1, vt1.c0, vt1.c0))<((rt0.c1, vt1.lid, vt1.lid)))) OVER () FROM rt0, vt1 WHERE (((('', NULL, 0.1506601394027629)) NOT BETWEEN (((((x'')) NOT BETWEEN ((x'')) AND ((0.7175915191016832))), NULL, ((x'f810')OR(NULL)))) AND ((((NULL) NOT NULL), CAST(0.574725431715944 AS INTEGER), CASE 0.6318690656485362  WHEN NULL THEN '-420734139' END)))) GROUP BY ((rt0.c0) IS TRUE) HAVING rt0.c2; -- 0ms;
SELECT rt0.c0 FROM vt1 WHERE (CASE (('-2118339720') BETWEEN (NULL) AND (x''))  WHEN (((NULL, NULL, NULL)) BETWEEN ((0.08413339224696703, 0.18448843650471058, 0.04531768409631942)) AND ((x'', 0.586624165579301, NULL))) THEN CAST('2060975873' AS INTEGER) ELSE x'' END) GROUP BY rt0.c0;SELECT DISTINCT SUM((- (rt0.c1))), (((rt0.c1)) NOT BETWEEN ((((rt0.c1)<=(rt0.c1)))) AND ((((vt1.c1)+(rt0.c4))))), DATE(((vt1.lid) ISNULL), CAST(rt0.c4 AS INTEGER), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) FROM rt0 WHERE (((NOT ('0.12930218244090652')) IN (0x4b07d9b0)));SELECT DISTINCT (+ (TOTAL(858415184))) FROM rt0, vt1 WHERE (((((0.21355352595203692)>>(x''))) BETWEEN (CASE '1871700812'  WHEN x'336b' THEN NULL ELSE 0.006677602810387762 END) AND ((('142017661') NOT BETWEEN ('561955639') AND (7.98218115E8))))); -- 0ms;
SELECT ALL TOTAL(((vt1.c0)>=(0.25469860133388345))) OVER (), ((((rt0.c4) BETWEEN (vt1.c1) AND (rt0.c1))) NOT NULL), NULL FROM vt1 WHERE (CASE WHEN NULL THEN 0.7789371636413844 WHEN x'' THEN 0.07755219504053723 WHEN 0.7881979088329891 THEN 0.5899053719667716 ELSE 0.8340072630221202 END COLLATE BINARY);SELECT ALL GROUP_CONCAT((vt1.lid IN (vt1.c0))) OVER (), (((rt0.c0 IN (vt1.lid, rt0.c2))) NOT BETWEEN (COUNT(NULL)) AND (vt1.c1)), CASE CASE x''  WHEN rt0.c0 THEN vt1.c1 END  WHEN GROUP_CONCAT(rt0.c1) THEN MAX(vt1.c0) END FROM vt1 WHERE (CAST(((NULL)AND(NULL)) AS INTEGER));SELECT DISTINCT '', CAST(MAX(rt0.c4) AS INTEGER), ((rt0.c2)<(((((rt0.c2)AND(vt1.lid)))OR(rt0.c4)))) FROM vt1 WHERE ((NULL IN (-872936301)) COLLATE NOCASE);SELECT DISTINCT ((vt1.c1)>>(rt0.c0 COLLATE RTRIM)) FROM rt0, vt1 WHERE (TYPEOF(LIKELY(DISTINCT x''))); -- 0ms;
SELECT DISTINCT SUM((+ (rt0.c4)) COLLATE BINARY) FROM vt1, rt0 WHERE (((((0.4633521160401901) NOT BETWEEN (0xffffffff9735466c) AND (-3.52217084E8)))LIKE(CASE NULL  WHEN -1831047518 THEN 0.8997047973348405 ELSE x'' END))); -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ()))<=((- (vt1.lid)))) FROM vt1, rt0 WHERE ((((0.5363014285140477)*(NULL)) IN ())); -- 0ms;
SELECT ((((((rt0.c0))<>((vt1.lid)))))<((GROUP_CONCAT(rt0.c1)))) FROM rt0, vt1 WHERE (rtreenode(NULL, '840533958') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT 'pt>vuy0#', (((rt0.c1 IN ()))==(vt1.c0 COLLATE NOCASE)), AVG(TYPEOF(DISTINCT rt0.c4)) FROM vt1, rt0; -- 0ms;
SELECT ALL ((((((((rt0.c1)AND(CAST(rt0.c1 AS TEXT))))OR(vt1.lid)))AND(((rt0.c3) BETWEEN (vt1.c0) AND (vt1.lid)))))AND(((rt0.c3)=(rt0.c0)))) FROM vt1, rt0 WHERE (CAST((('M(2#d') IS TRUE) AS NUMERIC)); -- 1ms;
SELECT ALL CASE WHEN ((0x57e4e7e1) NOT BETWEEN (vt1.c1) AND (rt0.c1)) THEN highlight(vt1.c1, vt1.lid, rt0.c0, vt1.c0) WHEN CAST(vt1.c1 AS BLOB) THEN ((rt0.c1) BETWEEN (x'') AND (rt0.c2)) WHEN CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.lid THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END THEN ((vt1.c1)IS NOT(rt0.c3)) END FROM rt0;SELECT DISTINCT ((('2032334798')LIKE(vt1.c1)) IN (rt0.c2 COLLATE BINARY)), ((vt1.c1) ISNULL) COLLATE RTRIM, SUM(((rt0.c4)>=(NULL))) OVER () FROM rt0 WHERE (((((((((0.326084840733204 COLLATE BINARY)OR(NULL)))AND(((NULL) IS FALSE))))AND(('r塺䘨M+phi2' IN ('D')))))AND(((0.0016313333899905524)>>('')))));SELECT DISTINCT ((CASE WHEN vt1.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (x'f783') AND (0.6011003350013062)) FROM vt1, rt0 WHERE (NULL); -- 0ms;
SELECT ALL (((rt0.c1 IN ()))&((('-229346377')|(NULL)))) FROM rt0 WHERE (CASE (~ (0.23976505737217935))  WHEN (~ ('')) THEN TRIM(DISTINCT NULL, '1926789825') ELSE (~ (0x29018f74)) END) GROUP BY ((((((((((((rt0.c3)AND(vt1.c0)))AND(vt1.c0)))AND(rt0.c2)))OR('or*>x#v㹽5')))OR(json_type(rt0.c0))))AND(rt0.c1 COLLATE NOCASE)), (((''))<>(('vA'))) COLLATE NOCASE, ((((vt1.lid) NOT BETWEEN (rt0.c1) AND (vt1.lid)))|((NOT (vt1.c0)))) LIMIT 253579563;SELECT DISTINCT ((CASE WHEN vt1.lid THEN rt0.c3 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END) NOT NULL) FROM rt0 WHERE ((('NH8<eUF') NOT NULL));SELECT DISTINCT ((SUM(rt0.c2)) NOT BETWEEN (load_extension(vt1.c1, vt1.c0)) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.lid WHEN vt1.lid THEN rt0.c4 ELSE 0xffffffffffa1fd3b END)) FROM rt0;SELECT ALL ((((((rt0.c4) NOT NULL))AND(((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(vt1.c1)))))AND((((rt0.c1))<>(('441488133'))))), AVG(((vt1.c0) ISNULL)), ((vt1.c1 COLLATE RTRIM)>=(((vt1.c0)=(rt0.c2)))) FROM rt0, vt1; -- 0ms;
SELECT ALL (((rt0.c0, rt0.c1, rt0.c3, vt1.lid, -719005950)) NOT BETWEEN ((NULL, (((rt0.c0, x'', rt0.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.lid)) AND ((rt0.c1, rt0.c4, rt0.c4))), (((0.13595545242876395, rt0.c2, 'dI'))>=((vt1.c0, rt0.c3, rt0.c2))), CAST(rt0.c3 AS BLOB), ((((rt0.c1)AND(rt0.c3)))OR(NULL)))) AND ((TOTAL(rt0.c2), (- (vt1.lid)), ((((((((rt0.c4)OR(vt1.lid)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)), vt1.c0 COLLATE BINARY, CAST(rt0.c3 AS INTEGER)))), (((rt0.c1 IN ())) IS FALSE), AVG(((vt1.c0) IS FALSE)) OVER (), (((((rt0.c2))<((rt0.c0)))) BETWEEN (((0.37802837119796917)GLOB(0Xbba4985))) AND (CASE vt1.lid  WHEN rt0.c1 THEN NULL END)), ((((rt0.c3))>=((rt0.c4))) IN ()) FROM vt1;SELECT (((rt0.c4 IN ())) NOT NULL) FROM rt0, vt1 WHERE ((('1198369490')IS NOT(CAST('悷)' AS BLOB)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c1)GLOB(rt0.c3)) THEN CASE 0.13074209932498015  WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c0 THEN vt1.lid END WHEN (NOT (rt0.c3)) THEN ((vt1.lid) NOTNULL) WHEN (- (vt1.lid)) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END, ROW_NUMBER() OVER (), LAST_VALUE((((LTRIM(NULL)))=((((rt0.c2) NOT NULL))))) OVER (), ((CAST(rt0.c1 AS INTEGER))&(((rt0.c2)GLOB(rt0.c3)))), ((((((vt1.c1)AND(vt1.c0)))AND(rt0.c3)))*(CAST(vt1.lid AS REAL))) FROM rt0;SELECT DISTINCT vt1.c1 FROM rt0, vt1 WHERE (CAST(-7.19328565E8 AS INTEGER) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (- ((vt1.lid IN (vt1.lid)))) FROM vt1, rt0 WHERE ((((('d_S1O,5K9') BETWEEN (0xffffffffd51feacb) AND ('FALSE')))>(CAST('-919271497' AS INTEGER)))) ORDER BY ((rt0.c4 COLLATE NOCASE) IS FALSE)  NULLS LAST; -- 1ms;
SELECT ((x'') BETWEEN (CASE rt0.c3  WHEN vt1.lid THEN rt0.c4 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c4 THEN '' WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c1 THEN rt0.c1 ELSE 0.6426826327615133 END) AND (rt0.c2)) FROM vt1, rt0 LIMIT 1621714666 OFFSET -2082179509; -- 0ms;
SELECT DISTINCT 0xffffffff8290ebfd FROM rt0, vt1; -- 0ms;
SELECT ALL ((CAST(vt1.lid AS INTEGER))>(vt1.c0 COLLATE RTRIM)) FROM vt1 WHERE (((CAST(NULL AS BLOB)) BETWEEN (((0.41748322044257924)|('rzU%'))) AND (((0.4639343040561623)AND('-1033226296'))))) GROUP BY (~ (((((vt1.c1)OR(rt0.c4)))OR(rt0.c0)))), (~ (0xffffffff93a8486d)), ((((((vt1.lid)OR(rt0.c0)))OR(vt1.c0))) IS FALSE) HAVING ((LIKELIHOOD(DISTINCT vt1.c0, 0.35568022077247896)) NOTNULL) ORDER BY ((((rt0.c1)OR(CAST(rt0.c3 AS INTEGER))))AND(CAST(rt0.c3 AS INTEGER))) ASC  NULLS FIRST LIMIT -659053677 OFFSET 560673965;SELECT DISTINCT ((((((rt0.c1)OR(rt0.c0)))AND(x''))) IS FALSE) FROM vt1 WHERE (((NULL COLLATE RTRIM)+(x'4918' COLLATE NOCASE)));SELECT DISTINCT ((((rt0.c3)-(vt1.c1)))>>(CAST(rt0.c2 AS BLOB))) FROM rt0 WHERE (((((CASE WHEN NULL THEN -2.22553513E8 ELSE NULL END)OR(0.6100862866027138)))AND(0xffffffff916372a0)));SELECT CAST(((rt0.c3)&(rt0.c1)) AS NUMERIC) FROM vt1;SELECT DISTINCT CAST(rt0.c1 COLLATE NOCASE AS INTEGER) FROM vt1, rt0; -- 0ms;
SELECT LAST_VALUE((vt1.lid IN (((vt1.lid)AND(vt1.lid)), NULL))) OVER (), ((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (NULL) AND (vt1.lid))) AND (CAST(rt0.c1 AS BLOB))), CASE WHEN TOTAL(vt1.lid) THEN (((0.07367666065418699))<((vt1.c1))) WHEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) WHEN rt0.c0 THEN ((((rt0.c3)OR(rt0.c4)))AND(rt0.c3)) END, COUNT(CAST(rt0.c3 AS BLOB)) OVER (), SUM(CAST(vt1.c0 AS TEXT)) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND LIKELIHOOD(CASE vt1.c1  WHEN rt0.c3 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN '' THEN rt0.c0 END, 0.4991741726836476) FOLLOWING) FROM vt1 WHERE (((('!*B?')) NOT BETWEEN ((((NULL)/('-188207768')))) AND (((('0.8778275616565939') BETWEEN (NULL) AND (NULL))))));SELECT ALL (((((vt1.c0)+(vt1.c1))))>=((CAST(rt0.c1 AS INTEGER)))) FROM rt0 WHERE (CAST(0.7382931953479205 AS NUMERIC) COLLATE RTRIM);SELECT rt0.c2 COLLATE RTRIM, (NOT ((vt1.c1 IN ()))), CASE CASE rt0.c3  WHEN vt1.c1 THEN rt0.c3 ELSE '981352061' END  WHEN CASE vt1.lid  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 WHEN x'' THEN rt0.c4 END THEN (((rt0.c0))=((vt1.lid))) END, COUNT(*) OVER (), CASE TOTAL(rt0.c2)  WHEN ((rt0.c2)<(rt0.c4)) THEN CAST(vt1.c1 AS NUMERIC) ELSE NULL END FROM vt1, rt0 WHERE ((+ (((((((((0.9349106462624227)OR(x'')))AND('.D')))OR(0.7468427813049475)))AND('\nq'))))); -- 0ms;
SELECT DISTINCT (NULL IN (vt1.c1, vt1.lid)) COLLATE RTRIM, COUNT(*), vt1.lid, DENSE_RANK() OVER (), COUNT(*) FILTER(WHERE (((NULL)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND (((~ (vt1.lid)))))) OVER () FROM rt0, vt1 WHERE ((+ ('1275134326' COLLATE BINARY))) LIMIT -201858695; -- 0ms;
SELECT ALL COUNT(ABS(vt1.lid)) OVER () FROM rt0, vt1 WHERE (((json_type('-1370358865'))<>((NOT (x''))))); -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0, vt1 WHERE ((((((NULL))>((0x65bbb364))))>=(0.7468427813049475 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((((+ (vt1.lid)))AND(((vt1.c0)OR(vt1.c1)))))AND(((((rt0.c0)OR(rt0.c2)))AND(vt1.lid)))), CAST(((rt0.c0) IS TRUE) AS INTEGER), ((((rt0.c2 COLLATE NOCASE)OR(((0.9148751163970864) NOT BETWEEN (rt0.c0) AND (vt1.c1)))))OR(((vt1.lid)<=(rt0.c4)))) FROM rt0, vt1 WHERE (CAST(x'' COLLATE NOCASE AS INTEGER)); -- 0ms;
SELECT CAST(rt0.c0 COLLATE BINARY AS NUMERIC) FROM vt1 WHERE ((+ (DATE(x'', NULL, 257388612)))) ORDER BY rt0.c3 DESC  NULLS LAST;SELECT ALL (NOT (((rt0.c2)>(rt0.c3)))) FROM vt1 WHERE (CAST((0.2157142557553483 IN (-1617260820, NULL)) AS REAL)) LIMIT 2037638047 OFFSET 703125388;SELECT (((rt0.c2 IN (rt0.c0, vt1.c0)))<<(rt0.c0)), ((TOTAL(rt0.c3))OR((NOT (rt0.c1)))), (- (((vt1.c1) NOTNULL))) FROM rt0, vt1 WHERE (((((-1.671986567E9) BETWEEN (0x27565c8e) AND (x'0de9'))) NOTNULL)); -- 0ms;
SELECT DISTINCT (NOT (vt1.lid)) FROM rt0 WHERE ((('') NOTNULL)) GROUP BY CASE CASE '1987958757'  WHEN rt0.c2 THEN vt1.lid WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN rt0.c0 END  WHEN (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c4))) THEN (((rt0.c1))<((rt0.c1))) ELSE CAST(vt1.lid AS TEXT) END;SELECT ((((((((((vt1.c0)AND(vt1.lid)))AND(rt0.c4)))AND(rt0.c1)))OR(vt1.c0))) ISNULL) FROM rt0 NATURAL JOIN vt1 WHERE ((((0.9319950277064626) NOT BETWEEN (0x4ac07b2d) AND (x'')) IN (((((0.8759054202580968)AND(x'')))AND('''^({-')), ((((0.24771458697083992)OR(x'')))AND('-1208935036'))))) LIMIT 521244742; -- 0ms;
SELECT DISTINCT (CAST(rt0.c3 AS REAL) IN ((((rt0.c0)) NOT BETWEEN (('')) AND ((rt0.c2))))), ((((rt0.c2)==(vt1.c1))) NOT BETWEEN (((rt0.c3)>(vt1.lid))) AND ((rt0.c3 IN ()))), CASE CAST(vt1.c0 AS NUMERIC)  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) END FROM vt1, rt0 ORDER BY json_type(LIKELY(DISTINCT rt0.c4)) DESC LIMIT 687968116 OFFSET -1591962243; -- 0ms;
SELECT ALL rt0.c4 FROM vt1, rt0 WHERE (((((NULL) ISNULL)) NOTNULL)); -- 0ms;
SELECT DISTINCT AVG((+ (rt0.c1))) OVER () FROM vt1 WHERE ((((NULL)+('2118667803')) IN ())) GROUP BY '' HAVING (((vt1.c0) NOT NULL) IN ());SELECT ALL rt0.c3 FROM vt1 WHERE (((NULL) BETWEEN ((('q%*')LIKE(x''))) AND ((((x'89ae'))<((x''))))));SELECT DISTINCT (('.y7C') BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM FROM vt1, rt0 WHERE (((ROUND(0xffffffff9f34708b, 'iN')) ISNULL)); -- 0ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt1, rt0; -- 0ms;
SELECT ALL ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.lid)) COLLATE NOCASE, ((vt1.c0) IS FALSE) COLLATE BINARY, NTH_VALUE(((rt0.c0)LIKE(CASE WHEN '' THEN vt1.c1 END)), '0.5457662544317289') OVER () FROM rt0, vt1;SELECT ALL NULL FROM rt0 CROSS JOIN vt1 ON ((((((((rt0.c0 COLLATE RTRIM)AND(((rt0.c2)IS NOT(rt0.c1)))))AND(((rt0.c0)AND(rt0.c0)))))OR(((rt0.c0)=(vt1.c1)))))AND((((vt1.c1, NULL, x'', rt0.c1, vt1.c1)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c0, rt0.c1, vt1.lid)) AND ((0.46591238172484817, vt1.c1, vt1.c1, rt0.c3, rt0.c3))))); -- 0ms;
SELECT ALL SUM(((vt1.c0)%(rt0.c1))) FILTER(WHERE ((((vt1.c0)<(rt0.c4)))%((vt1.c1 IN ())))) OVER () FROM vt1, rt0 WHERE (((('89041102', NULL, '-850472342')) NOT BETWEEN ((('1104067560' IN ()), (((414629968)) NOT BETWEEN ((NULL)) AND ((0.2300945146139841))), ((-1958443389) NOTNULL))) AND ((((-1.263887894E9) BETWEEN (NULL) AND (NULL)), CASE WHEN '0.7175915191016832' THEN 0xffffffff9c429d4f END, ((((x'3171')OR(1.275134326E9)))OR(x'146bc4d0')))))) ORDER BY (('nH' COLLATE BINARY) IS TRUE), ((rt0.c1)<(CAST(-1e500 AS NUMERIC))); -- 1ms;
SELECT ((((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))==(rt0.c3 COLLATE BINARY)) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((- (vt1.lid)))>>(LIKELY(DISTINCT vt1.lid))) FROM vt1, rt0; -- 0ms;
SELECT ALL rt0.c4 FROM vt1 WHERE (COALESCE(DISTINCT (0.7244926950702145 IN ()), CASE 0x6c738774  WHEN x'' THEN -613575664 ELSE NULL END, (NOT ('')), CASE WHEN -1616001715 THEN -2.070629229E9 WHEN x'' THEN 0.6642415999637932 WHEN '' THEN 'T熏' WHEN NULL THEN NULL WHEN NULL THEN NULL ELSE '1987958757' END));SELECT DISTINCT (TYPEOF(DISTINCT rt0.c1) IN (CASE vt1.c1  WHEN vt1.lid THEN x'' END)) FROM vt1 LIMIT -353778437 OFFSET -1649292513;SELECT COUNT((rt0.c0 IN ())) FROM vt1 RIGHT OUTER JOIN rt0 ON (((+ (vt1.c0))) IS FALSE) WHERE ((((('-2068821788')OR(CASE WHEN x'' THEN '-1007546034' END)))AND(CAST(0.7167320192841071 AS TEXT)))); -- 0ms;
SELECT DISTINCT (((vt1.c1 IN (vt1.c1))) BETWEEN (rt0.c3) AND (vt1.c0)), CASE WHEN ((((vt1.c1)OR(rt0.c4)))OR(rt0.c3)) THEN ((vt1.lid) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c4) AND (vt1.c1)) END, COUNT(*) OVER () FROM rt0 WHERE (((((((124147140)OR(-2143657178)))AND(NULL)))|(x'' COLLATE NOCASE)));SELECT DISTINCT ((CASE 0.9149183378365389  WHEN '#a' THEN vt1.c0 ELSE vt1.c0 END)<<(((rt0.c2) IS FALSE))) FROM rt0, vt1 WHERE (((x'')-((('2037638047') IS TRUE)))); -- 1ms;
SELECT DISTINCT (((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((x'')))) ISNULL) FROM vt1, rt0 WHERE (((0.06996326328920854)/((((0X499b2f7b, '-225380956', x'')) BETWEEN ((0.6641984459632915, '1746541588', '2037638047')) AND (('-903753782', '1419360898', '1118680575')))))); -- 0ms;
SELECT DISTINCT SUM(vt1.c1), (((((((rt0.c2, vt1.c0, vt1.lid))>=((vt1.c0, rt0.c3, rt0.c4))))OR(CAST(NULL AS BLOB))))AND(((vt1.lid)=(rt0.c1)))), (0.09056635263323598 IN (vt1.lid)) FROM rt0 WHERE (((((1478445814) BETWEEN (x'') AND (0.2790634713916825))) NOT BETWEEN (((NULL)*('Cj'))) AND (((((NULL)AND(NULL)))AND('-852920647'))))) GROUP BY ((TYPEOF(rt0.c0)) BETWEEN (((vt1.lid) NOT BETWEEN (vt1.c0) AND (rt0.c0))) AND (('' IN (vt1.lid)))) LIMIT -789312517;SELECT DISTINCT ((vt1.c1 COLLATE RTRIM)GLOB(rt0.c0)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c1)OR(vt1.lid))) COLLATE NOCASE FROM vt1, rt0 WHERE ((((('d')+(NULL))) IS TRUE)); -- 0ms;
SELECT vt1.lid FROM rt0 WHERE (CASE WHEN (NOT ('893163611')) THEN CASE x''  WHEN '-860474096' THEN '1353974630' ELSE 0.8013685713785277 END WHEN (((0.4759382234708651)) BETWEEN ((NULL)) AND ((0.5723796797354027))) THEN LIKELIHOOD('1104067560', 0.6727902430430404) WHEN ((NULL)>>(x'')) THEN '*w/c㈃<o!' COLLATE BINARY ELSE CAST(0X29018f74 AS BLOB) END);SELECT DISTINCT (((rt0.c4)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) AND ((rt0.c2))) FROM vt1, rt0 WHERE ((((('') IS TRUE))LIKE(((NULL) IS TRUE)))) ORDER BY NULL ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)) IN ()) FROM vt1, rt0; -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c4)) IS TRUE), CAST(rt0.c0 AS REAL), (((rt0.c3) ISNULL) IN ()) FROM vt1;SELECT DISTINCT MAX('-1426269365'), ((1598043587) ISNULL), 0.3912676142400199 FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT NULL))<=(((vt1.c1)||(vt1.c0)))) FROM vt1;SELECT DISTINCT rt0.c0 FROM vt1, rt0; -- 0ms;
SELECT AVG(((rt0.c0)IS(rt0.c1))) FROM vt1 WHERE (((((0x7922f7ce)>(0.9367372328126619)))>=(((0.8189912225193103) BETWEEN (0.7978097869438848) AND (NULL)))));SELECT DISTINCT ((- (rt0.c1)) IN ('1647005934')) FROM vt1;SELECT rt0.c4 FROM vt1, rt0 WHERE ((((((((((('-627854457')AND(336706081)))AND(1323376807)))OR('-1610346861')))AND(NULL)))AND((('C05<') BETWEEN (x'2072') AND (0X270c67f5))))); -- 0ms;
SELECT DATE(((vt1.c0)AND(vt1.c1)), rt0.c0, (NOT (rt0.c4))) FROM vt1 WHERE (CAST('122880616' AS INTEGER));SELECT ALL (+ (rt0.c3 COLLATE NOCASE)) FROM rt0, vt1 LIMIT 992457170; -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM rt0 GROUP BY ABS((((x''))=((rt0.c1)))), (((0.9382362299918537)) BETWEEN ((CASE WHEN rt0.c4 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN '-492097886' THEN rt0.c2 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS TEXT)))), CAST(CAST(rt0.c4 AS INTEGER) AS BLOB), (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))OR(((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c1)))), (~ (((rt0.c3)AND(rt0.c1)))) LIMIT 1323376807 OFFSET -352217084;SELECT ((((rt0.c1)<=(rt0.c1)))<>(((((rt0.c2)OR(rt0.c0)))AND('|L')))) FROM rt0, vt1 WHERE (((((NULL)LIKE(0.005373087208836447))) BETWEEN ((NOT (x''))) AND ((('') NOT NULL)))); -- 0ms;
SELECT DISTINCT COUNT((((-1656910801)) BETWEEN ((rt0.c2)) AND ((vt1.c1)))) FROM rt0 WHERE (((CASE WHEN NULL THEN x'aab1' WHEN '113-1375 -4800773842069334444 ' THEN -745655211 WHEN 0.27349272079944087 THEN '?&' ELSE NULL END) BETWEEN ((('[97')LIKE(0xffffffffab1bb83f))) AND (((NULL)!=('NaNz')))));SELECT DISTINCT CASE WHEN ((((rt0.c1)OR('2107747600')))AND(rt0.c1)) THEN ((rt0.c4)+(x'')) END, ((((rt0.c3)<(rt0.c0))) NOTNULL), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL) FROM vt1;SELECT ((((rt0.c0)OR(((((vt1.c1)OR(rt0.c4)))AND(rt0.c3)))))AND(((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(rt0.c4)))) FROM vt1, rt0; -- 0ms;
SELECT NTILE((((rt0.c1)) NOT BETWEEN ((LIKELY(rt0.c0))) AND ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)))))) OVER (), CAST(((((((((rt0.c3)OR(rt0.c4)))AND(vt1.lid)))OR(NULL)))AND(vt1.lid)) AS BLOB), (0x2b62cfb4 IN ()) FROM rt0;SELECT ALL (- (-1.330955052E9 COLLATE BINARY)), RANK() OVER (), ((UPPER(rt0.c0))<(((((vt1.lid)AND(rt0.c0)))OR(vt1.lid)))) FROM rt0, vt1 WHERE (((((NULL)LIKE(NULL))) NOT BETWEEN ((- (x''))) AND (0.33651197936915367))) GROUP BY vt1.c0, rt0.c1, ((((CASE WHEN rt0.c2 THEN vt1.lid END)OR(((vt1.c1)=(rt0.c4)))))AND(7.98218115E8)); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT (((rt0.c2)) NOT BETWEEN ((-660047838)) AND ((vt1.lid)))) FROM rt0;SELECT COALESCE(CAST(NULL AS BLOB), NULL) FROM rt0 WHERE ((((((''))>((0Xffffffffa0040e93))))IS(((NULL)<>(NULL))))); -- 0ms;
SELECT DENSE_RANK() OVER ( ORDER BY rt0.c3 ASC) FROM vt1 WHERE (((((((((((NULL)GLOB(NULL)))AND((('') NOT NULL))))OR((('p')%(0.7382508292962366)))))OR(CAST(NULL AS BLOB))))OR(0.09789690960214936)));SELECT ROW_NUMBER() OVER () FROM vt1, rt0 GROUP BY (+ (CASE WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END)) HAVING (rt0.c3 COLLATE RTRIM IN (vt1.c1 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT CAST(((((vt1.lid)OR(rt0.c0)))OR(rt0.c3)) AS INTEGER) FROM vt1, rt0 WHERE ((((((NULL)AND('0.01009190769666779')))AND(x'')) IN ())); -- 1ms;
SELECT DISTINCT 'p' FROM rt0, vt1; -- 0ms;
SELECT CAST(rt0.c1 AS TEXT) FROM vt1, rt0 WHERE ((+ ((((NULL))<=((-3.55823608E8)))))); -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0; -- 0ms;
SELECT ALL RANK() OVER ( GROUPS BETWEEN (+ (rt0.c2)) COLLATE BINARY FOLLOWING AND  CURRENT ROW EXCLUDE CURRENT ROW), x'72fd', (((SUM(vt1.c0)))<((((vt1.c0)+(rt0.c1))))) FROM vt1;SELECT ALL (CAST(rt0.c4 AS REAL) IN ()) FROM vt1; -- 0ms;
SELECT ALL AVG((- (rt0.c4))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (+ (rt0.c2)), -873208368, (((~ (rt0.c2))) IS FALSE) FROM rt0, vt1 WHERE ((~ (''))); -- 1ms;
SELECT NULL COLLATE RTRIM FROM rt0 WHERE ((NOT ((~ (''))))) LIMIT -2067028520 OFFSET -1561831094; -- 0ms;
SELECT ALL (CASE rt0.c1  WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END IN ()) FROM rt0 WHERE (('93~z])Uj' IN ()) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT ALL ((((((rt0.c1)AND(vt1.lid)))OR(rt0.c1))) NOT BETWEEN ((~ (rt0.c3))) AND (('105361416' IN ()))) FROM vt1;SELECT ALL ((((LIKELY(rt0.c4))OR((vt1.c1 IN ()))))OR(0.5175574002464275)) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)<(vt1.lid))) NOTNULL), PERCENT_RANK() OVER ( GROUPS  CURRENT ROW), ((((rt0.c4) ISNULL)) NOT BETWEEN (MIN(rt0.c0)) AND (((((rt0.c3)OR(vt1.c1)))AND(vt1.lid)))) FROM vt1 WHERE (UNICODE(((NULL) BETWEEN (NULL) AND (0.027241571425638766))));SELECT ALL ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR((~ (rt0.c3)))))AND(CAST(0.7444365383466844 AS TEXT))))AND(rt0.c1 COLLATE NOCASE)) FROM vt1 WHERE (json_array_length(TRIM(x'', x''), ((NULL) BETWEEN (NULL) AND (NULL))));SELECT DISTINCT (- (((rt0.c3) NOT BETWEEN (vt1.lid) AND (rt0.c1)))) FROM rt0, vt1 WHERE ((((0X1c49bb17)) BETWEEN ((CASE x''  WHEN 1598495040 THEN 0.48330401265699363 END)) AND (((((NULL)) NOT BETWEEN ((-1357163576)) AND (('1826443169'))))))); -- 1ms;
SELECT ALL ((((rt0.c0)OR(rt0.c0)))||((+ ('a?XS嶠R9kb')))), CAST((NOT (vt1.c0)) AS NUMERIC), (('-1640849678') BETWEEN (((rt0.c4)-(rt0.c3))) AND (((vt1.c0)+(rt0.c3)))) FROM rt0 WHERE (TIME('-420734139' COLLATE RTRIM, ((x'')OR(x'')), NULL COLLATE BINARY, ((0xffffffffe3c1508b) BETWEEN (x'') AND (874692225)), (('') BETWEEN ('') AND (NULL))));SELECT (NOT (CASE vt1.c1  WHEN vt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN x'81d2ca0c' THEN rt0.c1 WHEN 'vm' THEN vt1.c1 WHEN rt0.c0 THEN rt0.c3 END)) FROM vt1, rt0 ORDER BY ((((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) NOTNULL); -- 0ms;
SELECT COUNT(*) FROM vt1; -- 0ms;
SELECT ALL ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE vt1.lid END) BETWEEN (CAST(vt1.lid AS BLOB)) AND ((+ (rt0.c2)))) FROM rt0 WHERE (((CASE WHEN x'a733' THEN '^*' END)<<(((NULL) BETWEEN (0.5462736624122824) AND (-1.212246013E9)))));SELECT ALL ((SUM(vt1.c1)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c2) NOTNULL))) FROM rt0 LIMIT 1063993278 OFFSET 464435504;SELECT ALL (((+ (rt0.c2))) IS FALSE), CAST(CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN rt0.c1 WHEN rt0.c1 THEN vt1.lid END AS TEXT), DENSE_RANK() OVER () FROM vt1, rt0; -- 0ms;
SELECT AVG(CAST(rt0.c2 AS BLOB)) OVER () FROM rt0; -- 1ms;
SELECT ((MIN(vt1.c1)) ISNULL) FROM vt1 WHERE (((((0Xffffffff974eb411)IS NOT(x'a4e76db9'))) NOT BETWEEN (CASE '-1506240132'  WHEN x'' THEN NULL WHEN 0.2748360534422313 THEN x'' WHEN '3eQr' THEN NULL END) AND ((((NULL, '6<!7', 0.177864921657104)) BETWEEN ((x'', '-1640849678', NULL)) AND ((x'77f5', x'91a2', '')))))); -- 0ms;
SELECT DISTINCT ((rt0.c2)<=(((rt0.c1)&(rt0.c4)))) FROM vt1 WHERE ((CASE 0.039456442565365624  WHEN x'ac2e' THEN '⵨	' ELSE x'' END IN ()));SELECT ALL COUNT(CASE ''  WHEN rt0.c1 THEN vt1.c0 ELSE x'' END) OVER () FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ((NOT (rt0.c4)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)), (- (rt0.c4)))) FROM rt0 WHERE ((((0.03887009523943297) IS FALSE) IN (CASE WHEN NULL THEN x'' END, ((0.06399243924508513)>=(''))))); -- 0ms;
SELECT (+ (((vt1.lid)IS NOT(rt0.c1)))) FROM vt1, rt0; -- 0ms;
SELECT ALL (((vt1.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c0)|(rt0.c3)), rt0.c3, (vt1.c1 IN ()))) AND (((((vt1.c0, vt1.lid, vt1.c0)) BETWEEN ((vt1.c0, vt1.c1, rt0.c3)) AND ((vt1.c1, rt0.c4, rt0.c2))), (NOT ('124147140')), CAST(rt0.c1 AS BLOB)))), ((x'') NOT BETWEEN (((vt1.c0) IS FALSE)) AND (0.9318687183608677)), (((vt1.lid) BETWEEN (rt0.c1) AND (vt1.c1)) IN ()) FROM rt0 WHERE ((((0.17145733966725762)-(x'')) IN ()));SELECT DISTINCT ((MIN(rt0.c1)) NOT BETWEEN (vt1.lid) AND ((('-1341181174')%(rt0.c4)))) FROM vt1 WHERE ((('SM' COLLATE BINARY) NOT BETWEEN ((('-1997659017')IS(NULL))) AND ((((x'55c52695')) BETWEEN (('-977896533')) AND ((NULL))))));SELECT ALL (((rt0.c4))<=(((rt0.c4 IN ())))) FROM rt0 WHERE (((((((x'2142')!=('')))OR(CASE NULL  WHEN '-576666403' THEN '1059312065' END)))OR(CAST(506758275 AS REAL)))); -- 0ms;
SELECT CAST(((rt0.c3)<<(rt0.c3)) AS NUMERIC) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (+ (((rt0.c0) BETWEEN (vt1.lid) AND (rt0.c0)))), rt0.c3, IFNULL(DISTINCT ((0.6577000413995037) BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4))) FROM rt0, vt1 WHERE ((((((((((((((-1072463286)OR(1386330590)))OR(x'')))OR('0.06317974027915396')))AND('-353700536')))AND(NULL)))AND('0.7256905268528531')) IN ())); -- 0ms;
SELECT DISTINCT rt0.c4 FROM vt1, rt0 WHERE (((((0.003543346583010587) NOT NULL))AND(((0.0018155173411760206) BETWEEN ('1215940841') AND (NULL))))) LIMIT 2067074795; -- 0ms;
SELECT DISTINCT TOTAL(CASE vt1.c1  WHEN rt0.c4 THEN rt0.c2 ELSE vt1.c1 END) OVER () FROM rt0, vt1; -- 1ms;
SELECT ALL CASE WHEN vt1.c1 THEN CASE rt0.c2  WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c1 THEN vt1.lid END WHEN SUBSTR(x'c5ea', vt1.c1) THEN rt0.c4 COLLATE NOCASE WHEN ((((rt0.c4)OR(rt0.c3)))AND('937360285')) THEN (+ (vt1.c0)) ELSE CHANGES() END, (~ (LTRIM(rt0.c3, NULL))), CAST(rt0.c0 COLLATE BINARY AS NUMERIC) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT COUNT((((rt0.c1, vt1.lid, vt1.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c3, 0.813578810936939, vt1.c1, NULL)) AND ((vt1.c0, rt0.c1, rt0.c1, vt1.c0, rt0.c0)))) OVER (), x'6f931542', CAST((NOT (vt1.c1)) AS BLOB) FROM vt1 WHERE (CASE WHEN ((x'') NOT BETWEEN (NULL) AND (x'44e8')) THEN NULL END) ORDER BY (((vt1.c0)) BETWEEN ((((rt0.c4) NOT NULL))) AND (((NOT (vt1.lid))))) DESC  NULLS FIRST;SELECT ALL MAX(CAST(rt0.c2 AS INTEGER)) FROM rt0 NOT INDEXED; -- 0ms;
SELECT ALL FIRST_VALUE('tBR^RTQ') OVER (), ((((rt0.c2) ISNULL)) BETWEEN (((vt1.c1) ISNULL)) AND (TOTAL(rt0.c4))), (((~ (NULL)))%(CASE vt1.c0  WHEN rt0.c2 THEN vt1.lid END)) FROM vt1, rt0 WHERE ((((('1093292843') IS FALSE))>(CASE WHEN '0.6426826327615133' THEN 0.255712400983404 ELSE '' END))); -- 0ms;
SELECT ALL CAST(((rt0.c4) ISNULL) AS INTEGER) FROM vt1, rt0 WHERE (((-600770247)&(NULL)) COLLATE RTRIM) ORDER BY NULLIF(((rt0.c2)GLOB(rt0.c1)), ((0.734069258113705)|(rt0.c0))), (((((vt1.lid))!=((rt0.c2))))>=(rt0.c1))  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN (NOT (rt0.c3)) THEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c2 END ELSE rt0.c4 END, (((((((rt0.c1)AND(rt0.c4)))OR(rt0.c3))))<((((rt0.c1) NOT NULL)))), COUNT(*) FILTER(WHERE ((((UPPER('!'))AND(vt1.c0)))OR(rt0.c3 COLLATE RTRIM))) OVER ( ORDER BY ((((rt0.c0)>=(vt1.c1)))&(NULL COLLATE NOCASE))  NULLS LAST) FROM rt0, vt1 WHERE ((((- (x''))) BETWEEN (TRIM(0.25213483890679955)) AND (CAST(x'da9f' AS INTEGER)))); -- 0ms;
SELECT (((vt1.lid)) NOT BETWEEN ((AVG(rt0.c3))) AND ((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c4 END))), (('')%(vt1.c0)) COLLATE RTRIM, ((x'447149da') IS TRUE), COUNT(CAST(rt0.c1 AS BLOB)) OVER (), COALESCE((((rt0.c1))!=((rt0.c3))), ((((rt0.c0)AND(rt0.c3)))AND(2032334798))) FROM vt1, rt0 LIMIT 1087842488 OFFSET 480482561; -- 0ms;
SELECT (((NOT ('464435504'))) NOT BETWEEN (CASE NULL  WHEN vt1.c0 THEN vt1.c0 END) AND (TOTAL_CHANGES())), ((rt0.c1) NOT BETWEEN ((((('0.9570227935063311')AND(vt1.c0)))OR(vt1.lid))) AND ((((vt1.lid)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))), rt0.c1 FROM rt0 WHERE (IFNULL('1918000938' COLLATE RTRIM, (-1.7976931348623157E308 IN ()))) ORDER BY (((((vt1.c1))!=((vt1.lid)))) IS TRUE) DESC  NULLS LAST;SELECT ALL (((((((('+Avk#')OR(((vt1.c1)GLOB(vt1.c0)))))OR((rt0.c0 IN (rt0.c0)))))OR((((rt0.c1)) BETWEEN ((vt1.lid)) AND ((rt0.c3))))))AND(vt1.lid COLLATE BINARY)) FROM rt0 WHERE ('179971254') GROUP BY ((((rt0.c4)+(rt0.c1))) NOTNULL) HAVING '-418598809';SELECT DISTINCT ((((((((((((((((rt0.c0)AND(vt1.lid)))OR(rt0.c2)))OR(((vt1.c1) IS FALSE))))AND((((vt1.c1))>=((rt0.c2))))))OR(vt1.c1)))AND(rt0.c4 COLLATE BINARY)))AND(rt0.c0)))OR(((vt1.c0)=(vt1.lid)))) FROM rt0 WHERE ((((('1898358771' COLLATE NOCASE)OR(((((NULL)OR(NULL)))AND('2037638047')))))OR((- (0.9726031715064909)))));SELECT DISTINCT AVG(rt0.c3) OVER () FROM rt0, vt1 WHERE ('-352217084'); -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END)+(json_insert(vt1.lid, rt0.c2, rt0.c0))) FROM vt1 WHERE (((((((0.0)OR(1.746541588E9)))OR('1918000938'))) NOT BETWEEN (CASE NULL  WHEN x'b1ab61c8' THEN '\rG%yap' END) AND (((((NULL)OR(x'abcc')))AND(x'')))));SELECT ALL CASE rt0.c1  WHEN rt0.c2 THEN (((rt0.c3, vt1.c1, rt0.c1))==((rt0.c2, rt0.c1, vt1.lid))) ELSE CAST(vt1.lid AS TEXT) END FROM vt1, rt0 WHERE (((1652267701 COLLATE RTRIM)*((((('')OR(0xffffffffc5dd2e21)))OR(0.358854912363758))))); -- 0ms;
SELECT (((((((vt1.lid)OR(rt0.c3)))OR(vt1.c1))))<>((((6.59971214E8)||(rt0.c0))))), ((((rt0.c0)GLOB('-756972824')))AND(((((vt1.lid)OR(vt1.c0)))AND(rt0.c4)))), NULLIF(DISTINCT CASE WHEN rt0.c2 THEN vt1.c0 WHEN 0.20224488874527646 THEN rt0.c1 WHEN x'ab98' THEN rt0.c1 ELSE '-2142065718' END, x'') FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN '1104067560' THEN CAST(rt0.c1 AS NUMERIC) WHEN (((vt1.lid)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (NULL)) WHEN (((vt1.c1, vt1.c0, vt1.c0, vt1.c1, rt0.c1))<=((rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c2))) THEN (((rt0.c4, rt0.c0, rt0.c1)) BETWEEN ((vt1.c1, rt0.c2, vt1.c0)) AND ((vt1.c1, vt1.c0, rt0.c1))) END FROM rt0, vt1 GROUP BY TYPEOF(DISTINCT ((((vt1.lid)OR(vt1.lid)))OR(rt0.c3))), ((((((((rt0.c0)AND(vt1.c1)))OR(rt0.c4)))OR(rt0.c0)))OR(vt1.c1)) COLLATE NOCASE, (- (rt0.c2)) COLLATE NOCASE HAVING ((~ (vt1.c1)) IN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))); -- 1ms;
SELECT DISTINCT ((((vt1.c0)IS(NULL)))!=(((vt1.lid) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) FROM rt0, vt1 WHERE (UNLIKELY(((NULL)*('jaoz,艹]')))) GROUP BY x'', ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c3)/(rt0.c0))) AND (((rt0.c2)=(rt0.c3)))), (((((vt1.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, vt1.lid, vt1.c1, rt0.c1)) AND ((NULL, rt0.c4, rt0.c1, vt1.c0, vt1.c0)))) BETWEEN (((rt0.c3) ISNULL)) AND ('-181246942')) HAVING (+ (vt1.c1)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT AVG(CASE WHEN rt0.c4 THEN rt0.c0 END) OVER () FROM rt0, vt1 GROUP BY (vt1.c0 IN ()) HAVING ((((rt0.c2)<<(rt0.c2)))>>(vt1.lid COLLATE BINARY)); -- 1ms;
SELECT CASE WHEN rt0.c0 THEN 659971214 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c1 ELSE rt0.c0 END COLLATE NOCASE, (((((((((((((((rt0.c4))>=((rt0.c3))))OR(((vt1.lid) ISNULL))))AND(((((rt0.c0)AND(rt0.c3)))AND('142017661')))))AND(x'')))AND((rt0.c1 IN ()))))AND((vt1.c0 IN (NULL)))))AND(((rt0.c0)IS NOT(rt0.c4)))), (((vt1.lid)) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((((vt1.c1) IS TRUE)))) FROM rt0, vt1; -- 0ms;
SELECT ALL (((((rt0.c3 IN ()))AND((rt0.c1 IN ()))))AND(vt1.c1 COLLATE NOCASE)) FROM rt0, vt1 ORDER BY ((((((vt1.c1)OR(rt0.c1)))AND((vt1.c1 IN ()))))OR((rt0.c2 IN ()))); -- 0ms;
SELECT DISTINCT LIKELY(((rt0.c1)>=(rt0.c4))), UNLIKELY(((rt0.c3)<(0xffffffff87f20234))), (((rt0.c2, '1385093570', vt1.lid)) NOT BETWEEN ((((rt0.c0)==(rt0.c2)), NULL, x'')) AND ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c0)), ((vt1.c0) NOTNULL), ((vt1.c1) ISNULL)))) FROM rt0;SELECT DISTINCT NTILE(rt0.c3) OVER () FROM rt0, vt1 WHERE (((((NULL) BETWEEN (x'') AND (NULL))) ISNULL)) LIMIT 1647005934;SELECT DISTINCT UNLIKELY((rt0.c3 IN ())) FROM rt0, vt1; -- 1ms;
SELECT DISTINCT '' FROM rt0, vt1 LIMIT -1571704192; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1) NOT BETWEEN (1779929615) AND (rt0.c0)))AND(CAST(rt0.c4 AS REAL))))OR(NULL)))AND(CAST(vt1.lid AS TEXT))))OR(((vt1.c0) NOT NULL))), LOWER(DISTINCT ((rt0.c2)%(rt0.c0))), TOTAL((rt0.c4 IN ())) OVER () FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((MAX(vt1.lid)) IS FALSE) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((vt1.lid)*(vt1.c1)) COLLATE BINARY FROM vt1; -- 1ms;
SELECT DISTINCT COUNT((((rt0.c3, '+^zmY', rt0.c0))=((vt1.lid, rt0.c1, rt0.c1)))) OVER () FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS BLOB)) IS FALSE) FROM vt1, rt0 WHERE (NULL) ORDER BY ((((- (rt0.c2))))<(((((vt1.c1, rt0.c0, vt1.c0))<>((vt1.lid, rt0.c3, 'Mj')))))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT NULL)) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) AND ('658034986')) FROM rt0 WHERE ((((((('')-(0.11486683686896026)))OR((((0.5351891844346734)) NOT BETWEEN (('1842233596')) AND ((0.177864921657104))))))AND((0.11028476812443799 IN (0.3107642251047099, '-1175007442')))));SELECT -1.758116244E9 FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE NULL  WHEN rt0.c0 THEN vt1.lid WHEN rt0.c4 THEN NULL WHEN rt0.c1 THEN 0.5043740773001606 END) NOTNULL) FROM rt0 WHERE (((((((-211863374)OR('#)')))OR(x''))) ISNULL)) EXCEPT SELECT DISTINCT (((vt1.c1)) BETWEEN ((x'')) AND ((((rt0.c0)IS(vt1.lid))))) FROM vt1;SELECT DISTINCT CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c4 AS BLOB) WHEN ((vt1.c1) ISNULL) THEN CAST(rt0.c2 AS BLOB) WHEN (((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND ((rt0.c1))) THEN CAST(vt1.c0 AS BLOB) ELSE CAST(rt0.c1 AS BLOB) END, ((((0.6167478459698363)AND(TOTAL(rt0.c2))))OR(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))), (((rt0.c4 IN ())) BETWEEN (0.01009190769666779) AND (-1784567161)) FROM rt0, vt1; -- 0ms;
SELECT ALL (((+ (vt1.c1))) NOTNULL), ((json(rt0.c4))/(rt0.c1 COLLATE RTRIM)), GROUP_CONCAT(CASE WHEN rt0.c4 THEN vt1.lid WHEN rt0.c3 THEN vt1.lid WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) FROM rt0, vt1 WHERE (LOWER(DISTINCT (((-201858695, '0.46707172305652367', NULL, x'', 0.9933751811596885))>(('810207675', NULL, x'', -225380956, 0.1506601394027629))))) ORDER BY UPPER(DISTINCT NULL) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT NULL COLLATE NOCASE, ((((vt1.c0)!=(rt0.c4))) IS TRUE), ((((((vt1.c1)OR(vt1.c1)))AND(rt0.c0))) NOTNULL) FROM vt1, rt0 GROUP BY ((((((vt1.lid)OR(rt0.c4)))AND(rt0.c4))) NOT NULL); -- 0ms;
SELECT ALL (((rt0.c2 COLLATE BINARY))=((((rt0.c4) NOT NULL)))) FROM vt1, rt0; -- 0ms;
SELECT TIME((((vt1.c1, 0.06488979043349041, vt1.lid)) NOT BETWEEN ((vt1.c0, rt0.c4, rt0.c1)) AND ((vt1.c0, vt1.c1, rt0.c1))), rt0.c0 COLLATE RTRIM, (- (rt0.c4)), TOTAL(vt1.c0), ((rt0.c2) IS TRUE)) FROM vt1 NOT INDEXED, rt0; -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY ((((CAST(vt1.c0 AS REAL))OR(((x'412b') ISNULL))))AND(((((rt0.c0)OR(vt1.c0)))AND('\rT(nqa]S'))))  NULLS LAST) FROM vt1, rt0 WHERE (((((-341329388)AND((x'47e7' IN ()))))AND(('BSk}/' IN ())))); -- 0ms;
SELECT DISTINCT ((((vt1.c1) NOT BETWEEN (rt0.c1) AND (238940333))) IS FALSE) FROM rt0, vt1 WHERE ((((((x'')) NOT BETWEEN ((x'c573')) AND ((x'')))) BETWEEN (((0x3ace21ae) IS TRUE)) AND (x'81f4'))); -- 0ms;
SELECT (~ (rt0.c3 COLLATE NOCASE)) FROM rt0, vt1 WHERE ((((('ℕV?')AND(0.41875618305231643)))AND(NULL)) COLLATE RTRIM) LIMIT -2033455520 OFFSET -1119994813; -- 0ms;
SELECT GROUP_CONCAT(((vt1.lid) NOT NULL)) OVER ( ORDER BY ((- (vt1.c1)) IN ()), CAST((- (rt0.c1)) AS INTEGER), (((vt1.lid)<>(rt0.c4)) IN ())  NULLS FIRST) FROM rt0, vt1 ORDER BY (((((rt0.c1)%(vt1.lid))))<((vt1.c0))); -- 1ms;
SELECT ALL ((rt0.c1)OR(rt0.c0)) COLLATE RTRIM, (((((vt1.c0)<<(vt1.c0))))>((rt0.c0 COLLATE NOCASE))), CASE WHEN rt0.c4 THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) END FROM rt0, vt1 WHERE (((0.6281380444531551 COLLATE BINARY) IS TRUE)) ORDER BY ((((rt0.c3)-(vt1.lid))) BETWEEN (vt1.c1 COLLATE BINARY) AND (IFNULL('*?~}5藺⯑l', rt0.c3))) DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT rt0.c2 COLLATE RTRIM FROM vt1 WHERE (((((-1641808226)*('105361416')))*(CAST(x'' AS BLOB))));SELECT (((((rt0.c3 IN (vt1.c0, rt0.c4)))AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c3)||(vt1.lid)))) FROM vt1 WHERE (((CASE WHEN 0Xffffffffd46f8671 THEN 0.5617210474508603 END) NOT NULL));SELECT (((+ (rt0.c1))) NOT BETWEEN (((vt1.c0)GLOB(rt0.c3))) AND (vt1.c1)), NTH_VALUE(((UPPER(vt1.c1)) ISNULL), (((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c1)<<(vt1.c0)), (NOT ('1465538885')), (vt1.lid IN ()))) AND ((CASE WHEN rt0.c4 THEN rt0.c4 ELSE vt1.c0 END, rt0.c4 COLLATE NOCASE, DATETIME(rt0.c2, rt0.c4, rt0.c4))))) OVER ( ORDER BY vt1.c0 DESC  NULLS FIRST, ((((((((load_extension(rt0.c4, rt0.c4))AND(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.lid THEN rt0.c2 END)))OR(((rt0.c1)||('1792706590')))))OR(CAST(rt0.c3 AS INTEGER))))AND(((1724190052) NOT NULL)))), CASE WHEN ((rt0.c0)&(x'007a')) THEN rt0.c2 COLLATE BINARY ELSE vt1.c0 END FROM rt0, vt1 ORDER BY (((vt1.c1) NOT NULL) IN (((1.180893616E9) BETWEEN (rt0.c4) AND (vt1.c1)))) ASC  NULLS LAST;SELECT ALL LAST_VALUE((((rt0.c0)) BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((rt0.c2 IN ()))))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN rt0.c3 THEN rt0.c0 END) OVER (), (((((~ (rt0.c1)))AND(((rt0.c1)<>(rt0.c3)))))AND(0.4237666773477502)), TOTAL((((vt1.lid)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE RTRIM) FILTER(WHERE (((((vt1.lid, rt0.c4, rt0.c3, vt1.lid, rt0.c4))>=((rt0.c4, rt0.c2, rt0.c2, vt1.lid, rt0.c4)))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.lid ELSE rt0.c3 END) AND (json_remove(vt1.c1, rt0.c0, vt1.c0, rt0.c4)))) OVER () FROM vt1, rt0 WHERE ((('t*!/k#ѽd') BETWEEN (x'') AND ('0.2038718263864172')) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN vt1.lid THEN rt0.c2 END)||(((0Xafa0369)<<(vt1.c1)))) FROM rt0 WHERE (((((CAST(x'' AS TEXT))OR(0.9971446663035286)))AND(NULL)));SELECT DISTINCT (CASE WHEN NULL THEN vt1.lid WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END IN ()) FROM vt1; -- 0ms;
SELECT TRIM(DISTINCT rt0.c1) FROM rt0; -- 0ms;
SELECT ALL (((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 END))<>((rt0.c2 COLLATE NOCASE))), TOTAL(((vt1.c1)<(vt1.c1))), ((((rt0.c2) IS TRUE)) NOT NULL) FROM rt0;SELECT DISTINCT ((((rt0.c3)LIKE(rt0.c0))) ISNULL) FROM vt1, rt0; -- 0ms;
SELECT ALL ((((((rt0.c4)OR(rt0.c2)))OR(vt1.c0)))>((~ (x'fe94')))), (((((((-1821497906, rt0.c2, rt0.c2))>((vt1.c0, rt0.c0, rt0.c2))))OR(NULL)))OR(COUNT(*))), CASE WHEN (rt0.c2 IN ()) THEN LOWER(DISTINCT rt0.c2) ELSE (rt0.c1 IN ()) END FROM rt0;SELECT DISTINCT CASE ''  WHEN (~ (rt0.c4)) THEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)) ELSE MIN(rt0.c2) END, (NOT (vt1.lid COLLATE BINARY)), CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM FROM rt0 GROUP BY vt1.c0;SELECT DISTINCT COUNT(*) FROM rt0, vt1; -- 1ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((('')OR('')))OR(NULL))) BETWEEN ((x'' IN ())) AND (CAST(0.06534586355443628 AS BLOB)))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c4)))<>(UNLIKELY(DISTINCT rt0.c3)))  NULLS FIRST;SELECT DISTINCT COUNT(*) FROM vt1, rt0 WHERE ((- (NULL)) COLLATE NOCASE) GROUP BY ((((rt0.c4) ISNULL))-(((vt1.c0)IS NOT(0.8711910203349734)))); -- 0ms;
SELECT DISTINCT (((((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c4))))<>((rt0.c4))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (('-1640849678') NOTNULL), PRINTF(GROUP_CONCAT(vt1.c0)), (rt0.c0 IN ()) FROM rt0 WHERE ((NOT ((0.46680250587366723 IN ()))));SELECT '1279020352', vt1.c1, (NOT (((rt0.c2)<('''')))), (((((rt0.c2))<((vt1.lid)))) ISNULL), 1.275134326E9 FROM vt1 WHERE ((('+3' COLLATE BINARY)!=((NOT ('0.9440530388372343'))))) GROUP BY CAST(((vt1.lid) IS TRUE) AS INTEGER), CAST(((vt1.lid) NOT NULL) AS TEXT), (~ (TYPEOF(DISTINCT '4厔W v,'))) HAVING (((rt0.c4, rt0.c3, vt1.c0)) NOT BETWEEN (('280392916', rt0.c0, vt1.c1)) AND ((rt0.c0, vt1.c1, vt1.c1))) COLLATE RTRIM;SELECT DISTINCT (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))) FROM rt0; -- 0ms;
SELECT (rt0.c4 IN (rt0.c1)) COLLATE BINARY FROM vt1;SELECT DISTINCT rt0.c4, (+ ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))), rt0.c0 FROM rt0 LIMIT 209099216 OFFSET -1179787010; -- 0ms;
SELECT ALL (((vt1.c0, rt0.c3, vt1.c0)) NOT BETWEEN ((((vt1.c1) NOT BETWEEN (vt1.lid) AND (NULL)), ((rt0.c1) IS TRUE), ((rt0.c4)AND(rt0.c1)))) AND ((AVG(rt0.c1), CAST(vt1.c1 AS REAL), vt1.c0))) FROM vt1;SELECT ALL ((((((rt0.c4)AND(vt1.lid)))AND(vt1.lid)))%((((rt0.c3))>=((rt0.c0))))) FROM rt0 WHERE (CASE x''  WHEN CAST('687968116' AS TEXT) THEN (((x'', '-400469100', 0X7bc25fdc))>(('qn3o_*ud', 0.7183633347944139, 0.2626439206322707))) WHEN (((x'ef75')) BETWEEN (('1218024567')) AND ((-1310383612))) THEN ABS(DISTINCT NULL) WHEN ((0.3226564271053328)AND(x'dafa')) THEN CASE WHEN 0.6318690656485362 THEN NULL END END) GROUP BY ((rt0.c0)&((rt0.c1 IN ()))), (('0.8778275616565939')>(1753770659)), (((vt1.c1)) BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN rt0.c1 THEN rt0.c4 ELSE 'HJt' END)) AND ((CASE WHEN rt0.c1 THEN rt0.c4 ELSE vt1.lid END))) HAVING CAST((((vt1.c0))==((rt0.c0))) AS REAL);SELECT ALL (vt1.c1 IN (rt0.c1)) COLLATE NOCASE FROM vt1 WHERE ((((0.20229068048462195 IN ()))>((((NULL)) NOT BETWEEN ((NULL)) AND ((NULL)))))) LIMIT 1839402517 OFFSET 1215940841;SELECT ALL rt0.c4, ((rt0.c1)+(NULL)), (((rt0.c0, rt0.c0, rt0.c3))>((NULL, rt0.c4, rt0.c4))) COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL TOTAL(((vt1.c0)||(rt0.c1))) OVER () FROM rt0, vt1 WHERE (x'8ff2'); -- 0ms;
SELECT DISTINCT CASE COUNT(*)  WHEN (~ (rt0.c2)) THEN (vt1.c0 IN (NULL)) WHEN ((rt0.c1)-(vt1.lid)) THEN ((((((((((((rt0.c0)OR(0.33961315046889995)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(vt1.lid)) WHEN rt0.c4 THEN TOTAL(rt0.c1) ELSE COUNT(x'') END, (~ ('-29006286')), CASE rt0.c3  WHEN ((((vt1.c0)AND(rt0.c2)))OR(rt0.c4)) THEN (- (vt1.lid)) WHEN (rt0.c0 IN (vt1.c0)) THEN ((0xfbd1c4)>=(rt0.c0)) WHEN CAST(rt0.c3 AS INTEGER) THEN ((vt1.c0)%(rt0.c0)) END FROM vt1 WHERE (NULLIF(DISTINCT (('tBR^RTQ')/('')), NULLIF(NULL, 'z䶁9GLWnn\n')));SELECT ALL rt0.c0, MAX((~ (vt1.lid))), ((LIKELY(rt0.c0)) NOTNULL) FROM rt0, vt1 WHERE (TYPEOF('F&Wfp扔Xo')); -- 0ms;
SELECT DISTINCT ((((((vt1.lid) ISNULL))OR((NOT (rt0.c4)))))AND(CAST(rt0.c0 AS BLOB))), ((CAST(rt0.c0 AS REAL)) BETWEEN (COUNT(*)) AND (rt0.c1 COLLATE BINARY)), vt1.c0 FROM rt0 GROUP BY (((((NOT (rt0.c1)))OR(((vt1.c1) IS TRUE))))AND(((((rt0.c2)AND(vt1.c1)))AND('')))) HAVING rt0.c1;SELECT DISTINCT (((NOT ('-988606276'))) NOT BETWEEN (json_object(vt1.c0, rt0.c3)) AND (rt0.c1 COLLATE BINARY)) FROM rt0 WHERE ((('-862291219' IN (NULL)) IN ())) LIMIT 981352061;SELECT DISTINCT CAST((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS INTEGER) FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((((rt0.c3))==((rt0.c3))))LIKE(SUM(rt0.c2))), (- ((rt0.c3 IN ()))), (((((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND ((rt0.c1))))AND(((vt1.lid)IS NOT(vt1.lid)))))AND((rt0.c4 IN (vt1.lid, rt0.c1)))) FROM rt0;SELECT DISTINCT (((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)), ((rt0.c3) IS TRUE), ((rt0.c0)||(rt0.c0))))<(((- (rt0.c0)), ((vt1.lid) IS TRUE), TRIM(')oPZ')))) FROM rt0, vt1 GROUP BY (+ ((~ (vt1.c1)))), (((rt0.c2)) BETWEEN (((rt0.c2 IN (vt1.c1, rt0.c1)))) AND ((LIKELIHOOD(DISTINCT vt1.c0, 0.4572154467193611)))), NULL HAVING (((+ (vt1.lid))) IS FALSE); -- 0ms;
SELECT ALL json_patch((~ (rt0.c1)), rt0.c0 COLLATE BINARY) FROM rt0 WHERE (((((0.14482100524132835)|(NULL))) NOT NULL)); -- 0ms;
SELECT ALL (((((((((((((((rt0.c1, rt0.c4, x''))>=((rt0.c3, rt0.c1, rt0.c0))))AND(((NULL) NOTNULL))))AND(rt0.c1)))OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))OR((rt0.c3 IN ()))))OR(rt0.c4 COLLATE RTRIM)))OR((((('\[c䋥9')AND(-1330955052)))OR(vt1.lid)))) FROM vt1;SELECT DISTINCT CAST(((rt0.c3) IS TRUE) AS NUMERIC), GROUP_CONCAT((~ (vt1.lid))) FILTER(WHERE ((rt0.c4 COLLATE BINARY) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c3)>(rt0.c4))))) OVER (), ((((rt0.c2))<>((rt0.c1))) IN ()) FROM rt0 WHERE (((((((0Xffffffffdb6d9410)LIKE(x'')))AND(((NULL) ISNULL))))AND(((NULL) BETWEEN (0.7523881635445065) AND (3.00064106E8))))) LIMIT 798284484 OFFSET -2067028520;SELECT DISTINCT PERCENT_RANK() OVER (), (~ ('-1275065661')), CASE (('1516595058') ISNULL)  WHEN 0xffffffffdf580e36 THEN ((((rt0.c2)AND(vt1.c1)))OR(vt1.lid)) ELSE ((vt1.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)) END FROM vt1 WHERE (((0.9785962130729494 COLLATE BINARY)GLOB((NOT (x'')))));SELECT DISTINCT (((rt0.c3) NOT BETWEEN (vt1.lid) AND (rt0.c0)) IN ((((vt1.lid)) NOT BETWEEN ((vt1.c0)) AND ((vt1.lid))))) FROM vt1 WHERE ((((x'', x'a346b03a', x'4ec067bc')) NOT BETWEEN (('5\n', ((x'') NOT NULL), TRIM(DISTINCT 1649715417))) AND ((HEX(NULL), NULL COLLATE BINARY, (('') NOT BETWEEN (NULL) AND (-1384040454))))));SELECT ALL TOTAL((rt0.c2 IN ())) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt1, rt0 WHERE (((((CASE WHEN '958758674' THEN 'T89' ELSE NULL END)AND(CAST(0.24071535368071684 AS TEXT))))OR(CASE '-1534825872'  WHEN 0Xffffffff8494b493 THEN 0.27887416025401524 WHEN '632238872' THEN '^*' WHEN NULL THEN '0.8508171354862838' END))) GROUP BY ((IFNULL(DISTINCT rt0.c0, rt0.c3))<<(((vt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) HAVING CAST(rt0.c3 AS BLOB); -- 0ms;
SELECT DISTINCT SUM(((rt0.c0) IS TRUE)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT LIKE(((rt0.c4)||(vt1.c0)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt1.c0))), AVG(((rt0.c1)GLOB(rt0.c0)) COLLATE BINARY), RANK() OVER () FROM rt0 WHERE ((('105361416' COLLATE BINARY) IS FALSE));SELECT ALL (((((rt0.c2)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c1)))) ISNULL) FROM vt1;SELECT HEX(rt0.c0 COLLATE RTRIM) FROM rt0 WHERE (((('113-1375 -4800773842069334444 '))>=((((0.9415977973554727)LIKE(0.3278987954534365)))))); -- 0ms;
SELECT ((COALESCE(rt0.c0, rt0.c1)) IS FALSE), -132928870, ((vt1.c0 IN ()) IN (NULL)), CAST(((rt0.c3)<<(vt1.c0)) AS TEXT), ((((rt0.c3)OR(rt0.c0))) IS FALSE) FROM vt1 WHERE (CAST(0.4194501733994439 AS INTEGER));SELECT COUNT(((((rt0.c2)AND(vt1.c0)))OR(rt0.c2))) FROM vt1, rt0 WHERE (CASE ((0.6473820594228046) NOT BETWEEN ('2037638047') AND (NULL))  WHEN (('1244903562')OR(0.4527242346105915)) THEN (('') ISNULL) END); -- 0ms;
SELECT DISTINCT (((((((((rt0.c3 IN ()))OR(rt0.c4 COLLATE RTRIM)))OR(((vt1.lid)!=(rt0.c2)))))AND(((vt1.c1) NOTNULL))))AND(LIKELY(vt1.c1))), GROUP_CONCAT(CAST(vt1.lid AS TEXT) COLLATE NOCASE) FILTER(WHERE IFNULL(((rt0.c4)LIKE(rt0.c3)), (vt1.lid IN (rt0.c4)))) OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW), ((0.775936362335111) BETWEEN (CASE x''  WHEN rt0.c0 THEN vt1.lid END) AND (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0, vt1 ORDER BY IFNULL(DISTINCT (((rt0.c2, rt0.c3, vt1.c1)) BETWEEN ((vt1.c1, rt0.c4, rt0.c1)) AND ((rt0.c3, vt1.lid, x'2ca5'))), (449434246 IN ())) ASC  NULLS FIRST; -- 1ms;
SELECT ALL (~ ((- (vt1.c1)))), (((((((((- (rt0.c1)))OR((((rt0.c0, rt0.c2, vt1.c1))<>((vt1.lid, vt1.c0, vt1.lid))))))OR((((rt0.c1))<=((rt0.c0))))))OR((rt0.c4 IN (rt0.c1, rt0.c4)))))OR(CAST(vt1.lid AS INTEGER))), ((((rt0.c0) IS TRUE)) BETWEEN (0.5458597076354642) AND (((rt0.c0) NOTNULL))) FROM vt1;SELECT ALL rt0.c1, (((vt1.c1, 1.865925429E9, vt1.c1)) BETWEEN ((CAST(vt1.c1 AS REAL), ((rt0.c3) NOTNULL), CAST(vt1.c0 AS BLOB))) AND ((((rt0.c0) NOTNULL), ABS(rt0.c1), COUNT('-994139301')))), LOWER(TIME(rt0.c0, vt1.c1, vt1.c0, vt1.lid, vt1.c0, vt1.c0, vt1.c0)), ((rt0.c0 COLLATE BINARY)/(rt0.c3 COLLATE BINARY)), LAST_VALUE(CASE WHEN ((vt1.c1) BETWEEN (vt1.lid) AND (rt0.c2)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0)) END) OVER ( RANGE  CURRENT ROW EXCLUDE TIES) FROM vt1, rt0; -- 0ms;
SELECT ((vt1.lid) NOT BETWEEN (vt1.c1) AND (rt0.c3)) COLLATE BINARY FROM vt1, rt0; -- 1ms;
SELECT DISTINCT ((CASE WHEN vt1.lid THEN rt0.c1 ELSE vt1.c0 END)OR(((rt0.c3)IS NOT(rt0.c1)))) FROM rt0, vt1 UNION SELECT DISTINCT (((((rt0.c3))<=((rt0.c2))))==(NULL)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)/(rt0.c4)))&(((((vt1.c0)AND(rt0.c0)))OR(rt0.c3)))) FROM vt1, rt0 WHERE ('1754961175'); -- 0ms;
SELECT ALL (((((rt0.c3, rt0.c0, vt1.lid))==((rt0.c2, rt0.c2, rt0.c0))))<>(CAST(rt0.c4 AS INTEGER))), rt0.c1, (NOT (CASE WHEN vt1.c0 THEN vt1.lid ELSE x'' END)) FROM rt0 INTERSECT SELECT ALL COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), '0.30578993811947497', (((((((((rt0.c2)OR(vt1.c1)))OR(rt0.c0)))OR(vt1.c1)))OR(rt0.c3)) IN ()) FROM rt0 WHERE (x'');SELECT CASE rt0.c1  WHEN (((rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c0)) NOT BETWEEN ((vt1.lid, rt0.c2, vt1.c1, vt1.c0, vt1.c0)) AND (('', vt1.c1, vt1.lid, rt0.c4, '.1G{Y[}₧v'))) THEN COUNT(rt0.c4) END FROM vt1, rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c3, rt0.c3, vt1.lid))==((rt0.c4, vt1.c1, vt1.c0))) IN ()), GROUP_CONCAT(x''), LAST_VALUE(x'96d79436') OVER ( ORDER BY ((((UPPER(DISTINCT rt0.c2))AND((vt1.c0 IN ()))))OR(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c3 COLLATE NOCASE)AND(CAST(-741507385 AS BLOB))))AND(SUBSTR(vt1.c0, vt1.c0))) FROM rt0;SELECT ALL (((vt1.lid)-(rt0.c2)) IN (0.46629596801730233)) FROM rt0, vt1 WHERE (CHANGES()); -- 0ms;
SELECT ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4))) NOT BETWEEN (((rt0.c0)<=(rt0.c3))) AND (((((((((rt0.c1)AND(vt1.lid)))AND(rt0.c4)))OR(vt1.c0)))OR(483668367)))), (('1G' COLLATE RTRIM) IS FALSE), ((vt1.lid)GLOB(((rt0.c0)%(vt1.lid)))) FROM rt0, vt1 WHERE (CASE WHEN '' THEN ((x'f6b0')IS(x'')) END) GROUP BY UNLIKELY(DISTINCT ((((vt1.c0)OR(rt0.c0)))AND(vt1.c0))), rt0.c1, (~ (((('-1849556969'))==((vt1.c1))))) HAVING SUM(CAST(rt0.c2 AS BLOB)); -- 0ms;
SELECT DISTINCT 'QW熏' FROM rt0 WHERE (CASE ((0.9999028044754052)<=(x''))  WHEN CASE x''  WHEN NULL THEN NULL WHEN '179971254' THEN '1828002540' WHEN '' THEN x'' ELSE -5.1306869E8 END THEN ((((((((x'')OR(NULL)))OR('605343282')))AND(0.48967945585163897)))AND(0Xfffffffff0131fc0)) ELSE '' END); -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT NULL)) IS FALSE) FROM rt0, vt1 WHERE (((CAST(NULL AS INTEGER)) BETWEEN (0.32819866589821967 COLLATE RTRIM) AND (('XB' IN ())))); -- 1ms;
SELECT COUNT((((rt0.c3, 0.9882934324513765, rt0.c4))>((rt0.c0, rt0.c2, rt0.c4)))) FROM vt1 WHERE ((~ (((0xffffffffeb019804)&(NULL)))));SELECT DISTINCT AVG((((NULL))!=((rt0.c3)))) OVER ( ORDER BY (((rt0.c3 IN (vt1.lid, NULL)))-((((rt0.c3))<((vt1.lid))))) RANGE  UNBOUNDED PRECEDING) FROM rt0, vt1 GROUP BY NULL HAVING rt0.c0; -- 0ms;
SELECT ALL CASE CASE rt0.c2  WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END  WHEN x'' THEN rt0.c2 WHEN LIKELIHOOD(DISTINCT rt0.c2, 0.6412725898661592) THEN NULL WHEN vt1.lid COLLATE BINARY THEN (NOT (vt1.c1)) END FROM vt1;SELECT DISTINCT CASE CASE WHEN rt0.c1 THEN vt1.lid WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN vt1.lid ELSE vt1.c0 END  WHEN ((rt0.c4)=(rt0.c3)) THEN (vt1.c0 IN ()) END FROM vt1;SELECT DISTINCT ((((((((((vt1.c1)OR(vt1.c0)))AND(rt0.c3)))OR(vt1.c0)))OR('798218115'))) NOT BETWEEN (vt1.lid COLLATE NOCASE) AND (CAST(vt1.c1 AS REAL))) FROM vt1, rt0 GROUP BY ((CASE WHEN vt1.lid THEN vt1.lid END) NOT BETWEEN (rt0.c0) AND ((rt0.c1 IN (rt0.c1)))) HAVING CAST(((rt0.c1) NOT NULL) AS TEXT); -- 1ms;
SELECT DISTINCT CASE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 END  WHEN rt0.c0 THEN rt0.c1 COLLATE NOCASE END FROM rt0, vt1 WHERE ((((NULL)>>(NULL)) IN ((NULL IN ()), LIKELY('sCH')))); -- 0ms;
SELECT ALL ((((rt0.c2)!=(rt0.c3))) ISNULL) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT rt0.c4 COLLATE BINARY, (NOT (CAST(rt0.c3 AS INTEGER))), ROW_NUMBER() OVER () FROM vt1 WHERE (((-950902638) NOT BETWEEN (x'89d4' COLLATE RTRIM) AND (((NULL)+(0.7030301905050202)))));SELECT ALL CAST(vt1.c1 AS REAL) FROM vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c4)>(rt0.c2))) NOTNULL) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c4) ISNULL)) NOT BETWEEN (((((vt1.c0)AND(rt0.c3)))AND(rt0.c4))) AND (((((rt0.c2)AND(vt1.lid)))AND(rt0.c1)))) FROM rt0, vt1 WHERE ((- (CASE NULL  WHEN x'e74a' THEN '' WHEN x'' THEN 0Xffffffffc0e532f0 WHEN 0.9933751811596885 THEN NULL WHEN 'aa%7' THEN '^IlMh' WHEN -1796403855 THEN '-1712422438' END))) LIMIT -1212246013; -- 0ms;
SELECT DISTINCT ((((('-754762227')AND(rt0.c0)))AND(rt0.c4)) IN ()) FROM vt1 NOT INDEXED WHERE (((('655124469' IN ()))>(((x'')/(NULL))))) LIMIT -2118339720 OFFSET -1297343237; -- 0ms;
SELECT ((((rt0.c4)<<(vt1.c0)))+((((('')AND(vt1.lid)))OR(rt0.c4)))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c3))|(0.7841840045073518)) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((CASE vt1.c1  WHEN rt0.c1 THEN rt0.c3 END)*(json_object(vt1.lid, rt0.c0, vt1.c0, vt1.lid))), (((((('', vt1.lid, rt0.c2))>=((vt1.c0, rt0.c2, rt0.c0)))))=((0.6081862019160458))), (((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c2)GLOB(vt1.c0))))) FROM vt1, rt0 WHERE ((+ (x'' COLLATE BINARY))) LIMIT -925944128 OFFSET -99671484; -- 1ms;
SELECT ALL (((rt0.c3 IN ()))IS(((((rt0.c1)AND(vt1.c1)))OR(NULL)))) FROM vt1, rt0 WHERE ((((0.3472751977539801)) BETWEEN ((((NULL)&(x'')))) AND (((('7A') NOT NULL))))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS TEXT))OR(((x'1a80')<=(rt0.c1)))), vt1.c0, rt0.c3 COLLATE RTRIM FROM vt1, rt0 ORDER BY ((vt1.c1) IS TRUE) ASC  NULLS FIRST, IFNULL(((rt0.c3) IS TRUE), ((rt0.c2) NOTNULL))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((0.060706648231931504, vt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, vt1.lid)) AND ((vt1.c0, vt1.lid, rt0.c3))) IN ()), ((((((((((rt0.c1)OR(vt1.c1)))AND(vt1.lid)))AND(vt1.lid)))AND(rt0.c3)))IS(((rt0.c2)==(vt1.lid)))), SUM((('-439284158') NOT NULL)) OVER ( GROUPS BETWEEN  CURRENT ROW AND ((((rt0.c1) NOT BETWEEN (vt1.lid) AND (rt0.c3)))|(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))) PRECEDING EXCLUDE GROUP) FROM rt0, vt1;SELECT COUNT(*) OVER ( ORDER BY (~ (vt1.c1))), COUNT((~ (rt0.c3))) FILTER(WHERE CASE (+ (rt0.c3))  WHEN (((rt0.c3, rt0.c0, vt1.lid)) NOT BETWEEN ((vt1.c0, rt0.c4, vt1.lid)) AND ((vt1.c1, rt0.c3, rt0.c0))) THEN ((((rt0.c2)AND(vt1.c0)))OR(vt1.c1)) END) OVER (), (((rt0.c0, rt0.c0, vt1.lid)) BETWEEN ((rt0.c0, x'', rt0.c2)) AND ((rt0.c0, vt1.c1, vt1.lid))) COLLATE BINARY FROM vt1, rt0 WHERE (((0.9302519015394041) BETWEEN (COALESCE(x'', x'', 0.5085083252809176, '-2067028520')) AND (((((NULL)AND(0X102da354)))AND('{#'))))) LIMIT 314849291 OFFSET 1019641230; -- 1ms;
SELECT DISTINCT (((rt0.c4)) BETWEEN ((CASE rt0.c4  WHEN vt1.lid THEN rt0.c0 END)) AND ((((vt1.c1)LIKE(rt0.c1))))), vt1.lid, '561955639' FROM rt0, vt1; -- 0ms;
SELECT ((((((vt1.c1)AND(rt0.c1)))AND(rt0.c0))) BETWEEN (((x'7a49') ISNULL)) AND (((((vt1.c0)AND(rt0.c3)))AND(rt0.c2)))) FROM rt0 WHERE (CAST((((-911054032, 0.6140807380377048, '32567871')) BETWEEN ((x'', 0.9733295138305187, '96')) AND ((NULL, '0O*1', 1.918000938E9))) AS REAL));SELECT DISTINCT ((0xffffffffc50593b3)>=(x'9f59' COLLATE NOCASE)) FROM rt0, vt1 WHERE ((- (CAST(0.12689496300959469 AS BLOB)))) UNION ALL SELECT DISTINCT GROUP_CONCAT(((vt1.c1)AND(vt1.lid))) FROM vt1 WHERE ((((('-1958443389')==(x'')))/(((0.2572196741307953) NOTNULL)))) ORDER BY CAST(CASE WHEN rt0.c2 THEN vt1.c0 END AS NUMERIC)  NULLS LAST, PRINTF(x'785a') ASC;SELECT ALL CAST(GROUP_CONCAT(vt1.c0) AS BLOB), ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END) BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c1)), (((rt0.c1)<=(vt1.c0)) IN ()), (((vt1.lid IN ()))>=(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c4 THEN vt1.c0 ELSE vt1.c1 END)), x'' FROM rt0, vt1 WHERE ((((0.3536079778032143) BETWEEN (NULL) AND (NULL)) IN ())) GROUP BY (((~ (rt0.c2)))LIKE(((rt0.c2) IS FALSE))) HAVING (- (CASE WHEN vt1.lid THEN vt1.c1 END)); -- 0ms;
SELECT rt0.c3 FROM vt1 WHERE (((x'8f12')<=((((NULL))<=((x''))))));SELECT ((CAST(vt1.lid AS INTEGER)) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (1583064999 COLLATE BINARY)), ((((vt1.c0) IS FALSE)) ISNULL), NULL FROM rt0;SELECT ALL ((vt1.c0) NOT NULL) FROM vt1, rt0 LIMIT -1640849678 OFFSET 1634224902; -- 1ms;
SELECT ALL ((INSTR(rt0.c3, rt0.c4))IS NOT(((vt1.c0)==(vt1.lid)))), ((((vt1.lid) NOT NULL)) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))), ((((rt0.c1)>>(vt1.c1)))<(((rt0.c1) ISNULL))) FROM vt1 WHERE ((- ('-1056038043')) COLLATE RTRIM);SELECT ((vt1.c1 COLLATE RTRIM) NOT BETWEEN ((vt1.c0 IN (vt1.lid))) AND (0.8877997303746269)) FROM vt1; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((-315018352 IN ())) GROUP BY CASE WHEN ((((vt1.c0)OR(x'')))OR(rt0.c1)) THEN CAST(rt0.c1 AS INTEGER) END HAVING ((rt0.c0)=(vt1.c1)) COLLATE BINARY ORDER BY CASE CAST(vt1.c1 AS NUMERIC)  WHEN CASE WHEN rt0.c3 THEN -312771914 WHEN -1.817687955E9 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END THEN ((rt0.c1) IS FALSE) ELSE (+ (vt1.c1)) END  NULLS LAST, (NOT ((~ (vt1.c0)))) DESC  NULLS FIRST LIMIT -907159554 OFFSET 537163505; -- 0ms;
SELECT ((CASE WHEN rt0.c2 THEN vt1.lid WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c1 END)+((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FROM rt0;SELECT ALL ((((COUNT(rt0.c1))OR(((rt0.c4)|(vt1.c0)))))OR((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((vt1.c1))))), x'acd6', x'' FROM vt1, rt0; -- 0ms;
SELECT AVG(MAX(vt1.c1, vt1.c0)) FILTER(WHERE ((((rt0.c0 COLLATE BINARY)AND((rt0.c2 IN ()))))OR(rt0.c0 COLLATE BINARY))) OVER (), ((((((vt1.c1)>>('314849291')))OR(((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)))))AND(vt1.lid)), ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)))>((+ (rt0.c3)))) FROM vt1;SELECT DISTINCT (((NULL)) NOT BETWEEN ((((rt0.c3)|(rt0.c0)))) AND ((CAST(rt0.c1 AS NUMERIC)))), (- ((+ (rt0.c0)))), SUM('') OVER () FROM vt1 WHERE (CAST(((((0.03363293052462135)OR(x'')))AND(x'3b19')) AS REAL)) GROUP BY (((rt0.c1)) BETWEEN ((((vt1.c0)<=(rt0.c0)))) AND ((((vt1.c0) IS TRUE))));SELECT COUNT(0.43711873511597554) FILTER(WHERE ((rt0.c2) IS FALSE) COLLATE BINARY) OVER ( GROUPS (((rt0.c3, 0.5362126386789647, rt0.c0)) BETWEEN (((((0xffffffff9e2831ec, rt0.c0, rt0.c3, rt0.c0, vt1.c1, rt0.c3, rt0.c1))>=((rt0.c2, vt1.lid, rt0.c3, vt1.c1, rt0.c1, rt0.c2, vt1.c0))), ((vt1.c0)IS NOT(x'34fb')), CASE WHEN vt1.c1 THEN rt0.c3 END)) AND ((((rt0.c1)>=(rt0.c4)), ((rt0.c0)|(rt0.c4)), CHAR(rt0.c3)))) PRECEDING) FROM vt1;SELECT (TYPEOF(rt0.c1) IN ()), ((((vt1.c1) IS TRUE))||(((rt0.c0) NOTNULL))), CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN TOTAL(vt1.c0) WHEN ((rt0.c4) IS TRUE) THEN NULL WHEN COUNT(*) THEN GROUP_CONCAT(rt0.c2) ELSE (+ (vt1.c1)) END FROM vt1 WHERE ((((x'c8f9')) BETWEEN ((((((x'')OR('')))OR(NULL)))) AND ((0.062388483252300064)))) LIMIT -1311430455 OFFSET 1602937800;SELECT ((((rt0.c0) NOTNULL))!=(AVG(rt0.c3))) FROM vt1, rt0 WHERE (((((NULL) NOTNULL))IS NOT(((NULL)AND(0.6543050982146469))))); -- 0ms;
SELECT DISTINCT x'' FROM rt0, vt1 WHERE ((((((-1.671986567E9, 0Xffffffff8494b493, 0xffffffff91c20017)) NOT BETWEEN ((0.9570227935063311, 0.41109935982619095, 0.7469725805583884)) AND (('0.0', x'', 1362992884))))>=((x'' IN ())))); -- 0ms;
SELECT DISTINCT ((((rt0.c4)==(vt1.c1)))<=(IFNULL(rt0.c2, x''))) FROM vt1;SELECT DISTINCT (+ ((((vt1.c1))==((rt0.c2))))), CASE rt0.c3  WHEN x'' THEN rt0.c4 ELSE vt1.lid END COLLATE BINARY, vt1.c1 FROM vt1;SELECT DISTINCT ((vt1.c1)<<(((rt0.c1) NOT NULL))) FROM rt0 WHERE (((NULL COLLATE BINARY)-((((0.5961450890616337))<=((NULL))))));SELECT DISTINCT SUM(((vt1.lid) BETWEEN (rt0.c0) AND (rt0.c4))) FILTER(WHERE CASE CAST(vt1.c0 AS REAL)  WHEN ((rt0.c3)!=(vt1.c1)) THEN (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((vt1.c0, rt0.c0, rt0.c4)) AND ((vt1.lid, vt1.c0, rt0.c4))) WHEN rt0.c0 THEN ((vt1.c1)|(rt0.c3)) WHEN ((rt0.c0)>>(rt0.c4)) THEN rt0.c0 COLLATE BINARY END) OVER () FROM vt1, rt0 WHERE ((((((((((('-88146962')>(NULL)))OR(((((0.8513917151169746)AND(-2021567992)))AND('g(')))))OR((('NANZ')=(NULL)))))AND(((('y)黴D!5M')) NOT BETWEEN ((NULL)) AND ((405197133))))))AND(((0.35372635112710604)==(NULL))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt1; -- 0ms;
SELECT 0.023488412949382198 FROM rt0 WHERE ((((((-1698896104) NOTNULL)))>=(((((('')AND(']B82')))AND(x'')))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c4)==(rt0.c3)))AND(CASE 0xffffffffa0040e93  WHEN rt0.c3 THEN x'19da' ELSE vt1.c0 END)))OR(ABS(DISTINCT rt0.c4))) FROM vt1, rt0 WHERE (NULL) GROUP BY CAST(0.7832200053849796 AS TEXT) COLLATE RTRIM, ((((rt0.c0, vt1.c1, rt0.c4)) BETWEEN ((vt1.c0, rt0.c2, rt0.c3)) AND (('-1497754349', vt1.c1, vt1.lid))) IN (((rt0.c4)&(rt0.c3)))), '[YXqcN'; -- 0ms;
SELECT DISTINCT (rt0.c1 IN ()) COLLATE BINARY, CASE TYPEOF(DISTINCT vt1.c1)  WHEN rt0.c4 COLLATE NOCASE THEN ((((rt0.c0)OR(vt1.lid)))AND(rt0.c2)) ELSE (rt0.c3 IN ()) END, rt0.c3 FROM vt1;SELECT ((CASE vt1.lid  WHEN vt1.c1 THEN rt0.c3 END) BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN vt1.lid END) AND (((vt1.c0)&(rt0.c3)))), ((+ (6.55124469E8)) IN ()), HEX((vt1.c0 IN ())), (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE(CAST(rt0.c4 AS REAL))), CASE WHEN (+ (rt0.c1)) THEN (vt1.c0 IN ()) END FROM vt1, rt0; -- 0ms;
SELECT ALL ((('')) NOT BETWEEN ((((rt0.c4) NOTNULL))) AND ((MAX(rt0.c3)))) FROM rt0 WHERE ((((((((x'b80e7d4d'))>=((NULL))))OR((('101014786')=(0.9460866443745293)))))OR(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)<<(rt0.c1)) AS NUMERIC) FROM vt1;SELECT DISTINCT CASE WHEN LTRIM(rt0.c2, rt0.c0) THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)) WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)) THEN '\rt(nqa]s' WHEN UNLIKELY(vt1.lid) THEN ((rt0.c3)>=(rt0.c4)) END FROM vt1;SELECT ((((((rt0.c2)-(vt1.c1)))OR(LOWER(DISTINCT vt1.c0))))OR(((rt0.c0)*(rt0.c4)))) FROM vt1 WHERE (('866478156' IN (x'', x'')) COLLATE NOCASE);SELECT ((((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c4)))%((- ('0.809874224133657')))) FROM rt0, vt1 WHERE (HEX(((NULL)|(-7.66332259E8)))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT rt0.c2), rt0.c4, (((- (rt0.c3))) IS FALSE) FROM vt1, rt0 WHERE (((((('2070544562')AND(0.22601277601785574)))OR(-1.145034241E9)) IN ())); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, vt1; -- 1ms;
SELECT MIN(((rt0.c2) NOT BETWEEN (vt1.lid) AND (rt0.c4))), CASE PRINTF(rt0.c3, rt0.c0, rt0.c4)  WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt1.lid END THEN load_extension(rt0.c3, 0.825595827491152) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c3)OR(rt0.c2)) WHEN CASE WHEN rt0.c0 THEN rt0.c4 ELSE 1.79971254E8 END THEN ((((rt0.c0)AND(rt0.c2)))OR(vt1.c0)) WHEN SUM('') THEN (~ (rt0.c1)) WHEN ((x'') BETWEEN (vt1.c0) AND (rt0.c2)) THEN rt0.c1 COLLATE BINARY END, (((((rt0.c0)==(rt0.c3))))>((CAST(rt0.c3 AS TEXT)))) FROM rt0, vt1; -- 0ms;
SELECT ALL '', x'', (((MAX(rt0.c4, rt0.c3, NULL, vt1.c0)))<=((CAST(rt0.c1 AS NUMERIC)))) FROM rt0, vt1 NOT INDEXED; -- 0ms;
SELECT ALL ((CASE vt1.lid  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND (CASE rt0.c3  WHEN vt1.c0 THEN rt0.c1 END)), GROUP_CONCAT(((rt0.c4)>>(rt0.c3))) OVER (), (CAST(vt1.c1 AS INTEGER) IN (rtreenode(rt0.c3, rt0.c1), ((((((((vt1.c1)OR(vt1.lid)))OR(vt1.lid)))AND(rt0.c1)))OR(rt0.c3)))), ((SUM(rt0.c4))>('-2067028520')), ((((((((vt1.c1)AND(rt0.c4)))OR(rt0.c1)))AND(CAST(rt0.c3 AS INTEGER))))AND(CAST(vt1.c1 AS INTEGER))) FROM vt1 GROUP BY (((- (rt0.c1)))<=(CASE vt1.c1  WHEN rt0.c4 THEN rt0.c4 END)) HAVING (((- (rt0.c0)))<<(((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))));SELECT DISTINCT (+ (DATE(vt1.lid, NULL, vt1.c0, vt1.c1, rt0.c2))) FROM rt0;SELECT DISTINCT rt0.c4 FROM vt1, rt0; -- 0ms;
SELECT ALL ((((((vt1.lid)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), (+ (rt0.c0)), json_array_length(rt0.c3, rt0.c3)))<((((rt0.c0) BETWEEN (vt1.lid) AND (rt0.c3)), ((rt0.c4)IS(rt0.c2)), 'Puj('))) FROM rt0 WHERE ((CASE WHEN 0.46707172305652367 THEN x'' WHEN 0.18633524556490277 THEN x'' WHEN NULL THEN 0xffffffff940e9327 ELSE 0Xffffffffec318170 END IN ())) ORDER BY ((((rt0.c0 IN (vt1.lid)), CAST(vt1.c0 AS REAL), (x'' IN ())))<((((vt1.lid) IS TRUE), (((rt0.c2)) NOT BETWEEN (('')) AND ((rt0.c4))), COALESCE(rt0.c3, vt1.lid, rt0.c4, rt0.c0))));SELECT DISTINCT 0.363994453857704, rt0.c3, ((rt0.c1)IS NOT(rt0.c2)) COLLATE BINARY FROM rt0, vt1; -- 1ms;
SELECT (((NOT (vt1.c1))) BETWEEN (((x'')LIKE(vt1.c0))) AND (LIKE(rt0.c2, vt1.c1))) FROM vt1 WHERE (CASE WHEN (x'' IN ()) THEN ((((NULL)OR(-520571560)))OR(NULL)) END);SELECT DISTINCT rt0.c3 FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) ISNULL), COUNT(*) OVER (), rt0.c2 FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT NULL) COLLATE RTRIM FROM rt0 FULL OUTER JOIN vt1 ON ((((vt1.c1)IS NOT(vt1.lid)))LIKE((((vt1.c0, rt0.c0, vt1.lid))>=((rt0.c0, rt0.c1, rt0.c4))))); -- 0ms;
SELECT DISTINCT ((CAST(0.8070005006837656 AS REAL)) NOT BETWEEN (AVG(rt0.c1)) AND (CASE WHEN NULL THEN rt0.c1 END)) FROM rt0 WHERE ((((((x'3807a6eb', '-719328565', NULL)) NOT BETWEEN (('-1700183695', 0.7256905268528531, x'cf6c')) AND ((-449114468, 'W%', x'')))) NOT BETWEEN (NULL COLLATE NOCASE) AND (CASE WHEN 0.4157782942923439 THEN NULL END))); -- 0ms;
SELECT DISTINCT (CAST(rt0.c0 AS TEXT) IN (rt0.c1 COLLATE RTRIM, 0xffffffff9c578279)) FROM vt1 WHERE ((((x'')) BETWEEN ((0x6342968d)) AND (('' COLLATE BINARY)))) LIMIT -1456496216 OFFSET 867911416;SELECT DISTINCT COUNT(*), CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(rt0.c3 AS INTEGER) WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (vt1.c1)) THEN 1.215940841E9 WHEN 0.5759861607273232 THEN CAST(vt1.c0 AS BLOB) ELSE CAST(rt0.c3 AS REAL) END, (((((('')AND(rt0.c2)))AND(rt0.c4))) NOT BETWEEN (rt0.c0) AND (ABS(rt0.c2))) FROM vt1 NOT INDEXED;SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c1 END) NOTNULL) FROM vt1 WHERE ((- ((('~柵n>S') IS FALSE)))); -- 0ms;
SELECT DISTINCT x'7f47' FROM rt0 WHERE ((((json_valid(1.275134326E9)))>((CAST(x'' AS TEXT))))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)OR('+^ZMY')))/(rt0.c4 COLLATE NOCASE)) FROM vt1, rt0 WHERE ((0.19434303538939368 IN (((((NULL)OR('0.574725431715944')))OR(x'b4945272'))))) LIMIT 337326342 OFFSET 271426388; -- 0ms;
SELECT ALL (CAST(rt0.c2 AS NUMERIC) IN ((rt0.c4 IN (vt1.c1, vt1.c1)))) FROM rt0;SELECT NULL, IFNULL(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))), (((((rt0.c2)<=(vt1.lid))))>((LIKELIHOOD(rt0.c1, 0.8422028169085989)))) FROM rt0, vt1 WHERE (('1483458642' IN ()) COLLATE RTRIM) LIMIT -9223372036854775808; -- 0ms;
SELECT DISTINCT MIN(((rt0.c0)*(vt1.c1))) FROM rt0 WHERE (((((((('uG')AND('981352061')))AND(NULL)), ((0.4689717981776055)%('K^￿')), (x'f69b' IN (0.05982016109434174))))>=(('R P<dUTTA' COLLATE RTRIM, CAST(x'e33e' AS NUMERIC), CAST('563436498' AS TEXT)))));SELECT (NOT (((((((((rt0.c4)AND(vt1.c0)))OR(vt1.lid)))OR(x'')))OR(rt0.c0)))) FROM rt0;SELECT ((((rt0.c0)GLOB(rt0.c1)))&((vt1.c1 IN (rt0.c3)))), CASE COUNT(*)  WHEN CASE '2134324203'  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END THEN (((rt0.c2))!=((rt0.c0))) WHEN ((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)) THEN CAST(vt1.lid AS INTEGER) WHEN MAX(0Xffffffffd6c55741) THEN NULL COLLATE BINARY ELSE ((vt1.c1)<>(rt0.c1)) END, ((((vt1.c1) NOT NULL))GLOB(CAST(rt0.c2 AS BLOB))) FROM vt1, rt0; -- 0ms;
SELECT vt1.c0 FROM rt0;SELECT DISTINCT (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END IN ()) FROM rt0 WHERE (((TRIM(1.275134326E9, 0.9349106462624227)) NOTNULL)); -- 0ms;
SELECT DISTINCT COUNT(NULL) OVER ( ORDER BY (((rt0.c4 IN ()))IS(vt1.c0))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN rt0.c4 END COLLATE NOCASE FROM rt0 NATURAL JOIN vt1; -- 0ms;
SELECT CAST(rt0.c0 AS TEXT) FROM rt0, vt1 EXCEPT SELECT ALL ((((((rt0.c3)AND(NULL)))AND(rt0.c2)))||(((rt0.c1)>=(rt0.c3)))) FROM rt0, vt1 WHERE ((('-1558574669' COLLATE NOCASE) NOT NULL)) LIMIT 1984996663 OFFSET 2046460465; -- 0ms;
SELECT ((((((vt1.lid)OR(rt0.c4)))AND(vt1.c0)))<(CASE rt0.c1  WHEN vt1.c0 THEN '왍i聜b6' END)), CASE COUNT(rt0.c2)  WHEN vt1.c0 THEN CAST(rt0.c3 AS TEXT) END, ((((((vt1.c0)OR(vt1.c0)))OR(rt0.c4)))IS(1473948677 COLLATE NOCASE)) FROM vt1, rt0 WHERE ((((-719328565 COLLATE NOCASE))>((CASE WHEN x'' THEN '-869718277' END)))); -- 0ms;
SELECT DISTINCT ((rt0.c1)=((0.3690811568597424 IN ()))) FROM rt0 ORDER BY ((NOT (0.9620482371534805)) IN ()) ASC; -- 0ms;
SELECT DISTINCT (CAST(vt1.c0 AS NUMERIC) IN ()) FROM vt1, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((0.45512025122898614)*(rt0.c3)) IN ()) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT '1195449904', 0.15375780083973578, (~ (rt0.c2 COLLATE NOCASE)) FROM rt0 WHERE (((((('Hy' IN ()))AND(((0x1ca6dff9) BETWEEN (0.5362420011782171) AND (x'')))))OR(CAST(NULL AS INTEGER)))); -- 0ms;
SELECT ALL SUM(((vt1.c1) NOT BETWEEN (rt0.c4) AND (vt1.lid))) FROM vt1, rt0 WHERE (STRFTIME('-136094161', ((0.051131023132280906)GLOB(0.48301944986252554)), LOWER(x''))); -- 0ms;
SELECT DISTINCT (+ (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END)) FROM vt1;SELECT DISTINCT TRIM(CAST(rt0.c2 AS NUMERIC)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3)<=(rt0.c3)), '0.2856347592306441', rt0.c1))>((CAST(x'' AS REAL), COUNT(rt0.c0), CAST(rt0.c2 AS REAL)))) FROM vt1, rt0 WHERE (((((((((NULL)AND(CAST(0.9538821673978826 AS TEXT))))AND((('561955639') NOT NULL))))AND(((0x35c83dc5) NOT NULL))))AND(CAST(NULL AS TEXT)))); -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED(SUM(rt0.c2)) FROM vt1 WHERE (((((((((((((CAST(0.5518875974458681 AS BLOB))OR(((0.6008994179888674)==(0.9164554714909674)))))OR(CHAR(0.44450470953222954))))OR(((-1.06332552E9) NOT NULL))))OR(x'936b6cb4')))AND(QUOTE(x''))))OR('c{' COLLATE NOCASE))) ORDER BY vt1.c1 ASC  NULLS LAST;SELECT DISTINCT ((CASE WHEN vt1.c1 THEN rt0.c3 ELSE rt0.c0 END) BETWEEN (((((((((rt0.c4)AND(vt1.c1)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c0))) AND ((((rt0.c4, rt0.c1, vt1.lid))>=((vt1.lid, vt1.c1, vt1.c1))))) FROM vt1 NOT INDEXED;SELECT x'', ((('105361416' IN ())) IS TRUE), CAST(((((rt0.c0)OR(vt1.lid)))OR('[g&')) AS TEXT), COUNT(*) OVER ( RANGE  CURRENT ROW), COUNT(*) OVER () FROM rt0 INNER JOIN vt1 ON CAST((rt0.c2 IN ()) AS REAL) WHERE (((CASE x''  WHEN 0.8547187591002818 THEN NULL ELSE ')*!qls垖NQ' END)/(x'' COLLATE NOCASE))) GROUP BY ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)))AND((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(CAST(vt1.lid AS REAL))); -- 0ms;
SELECT ALL (((vt1.c0, ((rt0.c0) IS TRUE), x''))>((((NULL)IS NOT(rt0.c2)), CAST(rt0.c4 AS BLOB), GROUP_CONCAT(rt0.c1)))) FROM rt0, vt1 WHERE ((((0.021430185913849598)) BETWEEN (((((NULL, 0.15271698554760937, NULL)) BETWEEN (('坼\nu[O', '!쌷฿!(8웬⵨+', NULL)) AND (('', NULL, 0.598764287455629))))) AND ((HEX('-2049947226'))))); -- 0ms;
SELECT DISTINCT ((x'') BETWEEN (((x'02d3')GLOB(rt0.c4))) AND (0.8771635753024843)), 'g4 O', CAST((rt0.c4 IN ()) AS NUMERIC) FROM vt1, rt0 WHERE ((((('j{') NOT BETWEEN (NULL) AND ('-1466755823'))) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE ((rt0.c1)&(rt0.c2))  WHEN 1.10406756E9 THEN ((vt1.c1)<=(NULL)) END, CAST(MIN(rt0.c1) AS REAL), vt1.c0 FROM rt0 WHERE ((- ((('0.06317974027915396')%('-719005950')))));SELECT DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY FROM vt1, rt0 GROUP BY (((((rt0.c3 IN (rt0.c4)))OR(vt1.lid)))AND(rt0.c4 COLLATE BINARY)) HAVING ((((vt1.c1)OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)))OR(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 ELSE '1525379010' END)); -- 0ms;
SELECT DISTINCT ((((rt0.c4 COLLATE RTRIM)OR(LIKELY(x''))))AND((vt1.c1 IN ()))) FROM vt1; -- 0ms;
SELECT ALL (NOT (CAST(rt0.c0 AS INTEGER))) FROM rt0, vt1 WHERE (LIKELY(DISTINCT ('-680663137' IN ()))); -- 0ms;
SELECT ALL MAX(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 1215940841 THEN vt1.c0 END) COLLATE NOCASE FROM vt1 WHERE (((- (-1758116244)) IN ()));SELECT (((rt0.c3 IN (rt0.c2, vt1.lid)))IS NOT(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) FROM vt1 ORDER BY ((((rt0.c2 COLLATE RTRIM)OR(((((vt1.lid)AND(rt0.c4)))OR(vt1.c1)))))AND(x''))  NULLS LAST;SELECT ((0.876028953496417)>=(((rt0.c4)AND(rt0.c3)))) FROM vt1, rt0; -- 1ms;
SELECT DISTINCT (~ ((((NULL, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, rt0.c2, rt0.c0)) AND ((vt1.c0, rt0.c0, rt0.c0))))), (((CASE rt0.c3  WHEN 0xffffffff9c578279 THEN vt1.lid ELSE vt1.lid END))>=((((vt1.c0) NOT NULL)))), ((((rt0.c1)<(rt0.c3)))<>((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((rt0.c3))))) FROM rt0;SELECT (((((vt1.lid)<=(rt0.c0))))==(((NOT (NULL))))) FROM vt1 WHERE (((((0.8709070849399702)AND('' COLLATE RTRIM)))OR(NULL)));SELECT ALL NTH_VALUE(((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))OR('480698361')))AND(rt0.c3))) NOT NULL), CASE ((rt0.c0)=(rt0.c2))  WHEN rt0.c4 THEN ((rt0.c0)<(rt0.c3)) END) OVER () FROM rt0;SELECT DISTINCT (+ ((~ ('Z')))), (((CASE rt0.c1  WHEN vt1.lid THEN NULL WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.lid ELSE vt1.c1 END))>((((rt0.c2) NOTNULL)))), (((~ (vt1.c0))) NOT NULL) FROM vt1, rt0 WHERE ((((((NOT (0xffffffffbbca9f6e)))AND(((0.7423477479404286) NOT NULL))))AND(((((x'0ed4')AND(0.0295830228292443)))OR('⷗a蚃'))))); -- 0ms;
SELECT CAST(0.782496220827185 AS NUMERIC), (- (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))), UNLIKELY(DISTINCT rt0.c3) FROM rt0, vt1 WHERE ((+ (NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT AVG(rt0.c0) OVER () FROM vt1;SELECT CAST(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS BLOB), ((((rt0.c3))<=((NULL))) IN ()), vt1.lid FROM rt0 WHERE ((~ (json_valid(NULL))));SELECT DISTINCT DATETIME(((((NULL)AND(rt0.c0)))OR(rt0.c0)), (~ (vt1.c0)), SQLITE_VERSION()), LIKELIHOOD(rt0.c0, 0.794096185005964), CASE WHEN ((vt1.c0) NOT BETWEEN ('-1869001226') AND (vt1.lid)) THEN (rt0.c3 IN ()) END FROM vt1 WHERE (((('1665308301' IN ())) NOT NULL));SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.lid WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE -2.053788061E9 END)OR((rt0.c3 IN (vt1.c1)))))AND(UPPER(rt0.c1))), (((+ (rt0.c2)))>>((vt1.c1 IN ()))), (((- (rt0.c3))) IS FALSE) FROM vt1 WHERE (((('-2007996162'))<((0.9200817474483783))) COLLATE NOCASE);SELECT DISTINCT ((x'') BETWEEN (GROUP_CONCAT(rt0.c1)) AND (TOTAL(vt1.c1))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT HEX(((vt1.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))) FROM rt0 GROUP BY (((((vt1.lid)>(vt1.c0)), (((rt0.c4, rt0.c0, rt0.c1)) BETWEEN ((vt1.lid, rt0.c2, vt1.lid)) AND ((rt0.c3, 'I', 0.07475861519524296))), (rt0.c3 IN (vt1.c0))))<=((UNLIKELY(DISTINCT rt0.c2), ((rt0.c4)<(rt0.c2)), ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))OR(vt1.c0)))OR('-1330955052'))))) HAVING ((((vt1.c1) NOT BETWEEN (vt1.lid) AND (rt0.c2)))||(NULL));SELECT DISTINCT '-538640967' FROM rt0; -- 0ms;
SELECT NULL, '-719005950', (CAST(rt0.c2 AS TEXT) IN (((vt1.lid) NOT BETWEEN (rt0.c3) AND (vt1.c1)))) FROM vt1;SELECT '{i沬<ꡢ{N' FROM rt0, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT TOTAL((rt0.c2 IN ())) FROM vt1, rt0 WHERE (CASE WHEN (('Z')AND(NULL)) THEN (('556831161')>=(0.4539021797618633)) WHEN ABS('-~63O') THEN NULL WHEN ABS('LP') THEN (((x''))>((1865925429))) WHEN x'70a3' THEN json('6L') WHEN (('1792706590')LIKE(x'')) THEN (((('-865204537')OR(x'')))AND(-2.01418286E9)) END) ORDER BY ((x'') BETWEEN (((rt0.c0)/(rt0.c3))) AND ((((vt1.c1, 0.9676255193557408, x'8676', vt1.c0, vt1.c0)) BETWEEN ((rt0.c4, vt1.c0, rt0.c2, rt0.c3, rt0.c4)) AND ((rt0.c3, rt0.c1, rt0.c4, rt0.c1, rt0.c3))))); -- 0ms;
SELECT ALL (rt0.c1 COLLATE BINARY IN ()), ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)))IS(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))), (((((rt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c4))))/(((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))) FROM rt0 WHERE (840533958);