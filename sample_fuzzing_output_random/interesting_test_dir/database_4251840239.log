-- Time: 2024/06/07 09:14:48
-- Database: database39
-- Database version: 3.40.0
-- seed value: 4251840239
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED, tokenize=simple); -- 1ms;
VACUUM temp; -- 0ms;
PRAGMA main.optimize; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR REPLACE vt0 SET c1=x'' WHERE ((highlight(vt0.c1, vt0.c1, vt0.c0, vt0.c1)) ISNULL); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES ('1136957816'); -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
UPDATE vt0 SET c0='C]'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 1ms;
INSERT OR ABORT INTO vt0(c1, c0) VALUES (0X2c602041, 0.5603348544264305); -- 0ms;
END; -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1574510913'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
END; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1425373978); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 744497217);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41506'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '200353515 sz=1136957816'); -- 0ms;
UPDATE vt0 SET (c1, c1)=(0.4345178751439803, '&g') WHERE CASE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN ABS(vt0.c1) THEN ((vt0.c1)=(vt0.c1)) ELSE (((x'8f85')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) END; -- 0ms;
PRAGMA secure_delete; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA temp.short_column_names = false; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
UPDATE OR IGNORE vt0 SET c1='1812323564' WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ()); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.8761173353823373, ''); -- 4ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 5ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (NULL, -560282498), (0.710769882819789, x'e534f536'), (-760688387, NULL); -- 1ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.optimize; -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA main.cache_spill = true; -- 0ms;
UPDATE vt0 SET (c1)=(0.2317628205855562); -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0X68560b7e, x'ed72'); -- 4ms;
PRAGMA soft_heap_limit = 8134799575966603837; -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
PRAGMA main.stats; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 3ms;
DELETE FROM vt0 WHERE CHANGES(); -- 11ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES ('0.5603348544264305'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1891186923); -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '15944'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (0xffffffffa9363645, -5.60282498E8), (NULL, x''), (x'1c1a', '-1521597092'); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT COUNT(CAST(vt0.c0 AS TEXT)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL NTILE((((vt0.c1)) NOT BETWEEN ((((0.4345178751439803) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c1 IN ()))))) OVER (), ((vt0.c1)IS NOT(((vt0.c0) IS FALSE))), (NOT (((vt0.c0)IS NOT(vt0.c0)))) FROM vt0 WHERE (CASE WHEN NULL THEN x'' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT CAST(vt0.c0 AS REAL)) FROM vt0 WHERE (((NULL COLLATE NOCASE) NOT NULL)); -- 0ms;
SELECT ALL (NOT (vt0.c1)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT (((vt0.c1, 0.5603348544264305, vt0.c0)) BETWEEN ((CAST(vt0.c1 AS REAL), ((vt0.c0)<=(vt0.c1)), COUNT(vt0.c0))) AND (((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, NULL)) AND ((vt0.c0, vt0.c1, vt0.c0))), (+ (vt0.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE NULL END))), (((vt0.c0 IN ()))-(((vt0.c0)>>(vt0.c0)))), (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) IN ()), CAST(CAST(vt0.c1 AS REAL) AS INTEGER), vt0.c1 COLLATE BINARY FROM vt0 LIMIT 78259825 OFFSET -41170611; -- 0ms;
SELECT ALL (((vt0.c1) NOTNULL) IN (((vt0.c0) IS FALSE))) FROM vt0; -- 0ms;
SELECT (+ (((vt0.c0)GLOB(x'')))), TRIM(CAST(vt0.c0 AS NUMERIC), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))), (((((vt0.c0 IN ()))AND(((vt0.c1)%(vt0.c1)))))AND(((vt0.c0)IS(vt0.c0)))) FROM vt0 WHERE (CASE CASE WHEN x'' THEN x'' END  WHEN (('c㼔BfP')IS('116818519')) THEN ((((((((((((NULL)AND(0Xffffffffa54e455c)))AND(NULL)))AND(0.0565111737296764)))AND(8.134799575966604E18)))OR('116818519')))OR(x'')) WHEN GLOB(0.19123311980048674, NULL) THEN CAST(x'57377662' AS REAL) WHEN (NULL IN ()) THEN ((((((((NULL)AND(609782504)))AND('')))OR(-4.1170611E7)))AND(0X66a77cf0)) END) ORDER BY (((vt0.c1))==(((vt0.c0 IN ()))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE)) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c1 AS BLOB) IN ()), ((((vt0.c0)>=(vt0.c1)))=((((vt0.c1))<>((vt0.c0))))), ((x'')&(((((vt0.c0)OR(NULL)))OR(vt0.c0)))), ((((((((((vt0.c1)<=('<LC')))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((0.013920145057999989))))))OR((+ (vt0.c1)))))OR(((vt0.c1)+(vt0.c0)))))AND(vt0.c0)), GROUP_CONCAT(((vt0.c1) NOTNULL)) FROM vt0 LIMIT -1438302667; -- 0ms;
SELECT vt0.c1 FROM vt0 WHERE (CASE ((('-820474398'))>((x'')))  WHEN CASE WHEN x'' THEN '-560282498' WHEN '&g#11Dꈊ' THEN 0.468617660460397 WHEN '' THEN 0.9653819749475405 WHEN '' THEN '' WHEN '-560282498' THEN '-772168279' END THEN CASE WHEN NULL THEN x'' END WHEN ((NULL)<<(-820474398)) THEN CASE WHEN 0.468617660460397 THEN -2045901526 ELSE '-214542281' END WHEN ((-2045901526) NOT BETWEEN ('') AND (1903430717)) THEN (('0.0') NOT BETWEEN (NULL) AND (']')) END); -- 0ms;
SELECT ALL ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) IS FALSE), CAST((((0.10291492472761155))<=((vt0.c1))) AS TEXT), ((((vt0.c0)OR(0x66a77cf0)))OR('-214542281')) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (((((x'') NOT NULL)) IS TRUE)); -- 1ms;
SELECT DISTINCT (+ ((vt0.c1 IN (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, CASE CASE WHEN vt0.c0 THEN x'' END  WHEN ((vt0.c1)OR(vt0.c1)) THEN ((vt0.c1) NOT NULL) END, COUNT(vt0.c1) OVER () FROM vt0 WHERE (0.9522522084121475) LIMIT -1159869482; -- 0ms;
SELECT (((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) COLLATE BINARY, ((GROUP_CONCAT(vt0.c0)) NOT NULL), ((((vt0.c0 IN (vt0.c0))))<((vt0.c1))), TOTAL(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('480924406')))OR(vt0.c1))), x'' FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)GLOB(vt0.c1)) IN ()), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))LIKE((((vt0.c0))<((vt0.c1))))), CAST(((vt0.c1)&(vt0.c0)) AS TEXT) FROM vt0 ORDER BY ((vt0.c0)<=(vt0.c1)) COLLATE NOCASE ASC, (~ (((x'8de7')GLOB(vt0.c0)))) DESC, CAST((vt0.c0 IN ()) AS TEXT)  NULLS FIRST; -- 1ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)-((~ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), RANK() OVER (), CASE ((vt0.c0)&(vt0.c1))  WHEN (vt0.c1 IN ()) THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c1))>((vt0.c1))) THEN ((vt0.c0) BETWEEN (-41170611) AND (vt0.c0)) WHEN NULL THEN ((vt0.c0)*(vt0.c1)) ELSE ((vt0.c1)LIKE(vt0.c0)) END, CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))) THEN LOWER(DISTINCT vt0.c0) WHEN ((vt0.c0)<=(vt0.c1)) THEN NULL WHEN CASE vt0.c0  WHEN vt0.c1 THEN '-1044264747' ELSE vt0.c0 END THEN '' ELSE ((vt0.c1)<(vt0.c0)) END, NULLIF(vt0.c0 COLLATE NOCASE, ((vt0.c1)IS(vt0.c1))) FROM vt0 WHERE (0.1559634328982752); -- 1ms;
SELECT GROUP_CONCAT(CAST(vt0.c0 AS INTEGER)) FROM vt0 WHERE (((TRIM('215966792'))>(0.5502049903873986))); -- 0ms;
SELECT ALL (((NOT (vt0.c0)))|(MAX(NULL))) FROM vt0 WHERE (QUOTE(((-1159869482)<=(0.9362518039769279)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(AVG(CAST(vt0.c0 AS NUMERIC))), ((0.1559634328982752) NOTNULL), CAST((vt0.c1 IN (vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((HEX(DISTINCT '454056857'))<('894702582' COLLATE BINARY)));SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))==(((NULL) BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0 GROUP BY ((vt0.c1 COLLATE BINARY) NOT BETWEEN ((('-760688387')-(vt0.c1))) AND (vt0.c0 COLLATE RTRIM)) HAVING CAST(0.12159088064759838 AS INTEGER) LIMIT -1044264747; -- 0ms;
SELECT '1014101184' FROM vt0 WHERE ((('q6') IS TRUE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((vt0.c0))<=((vt0.c0)))) IS TRUE) FROM vt0 WHERE ((~ (('y2' IN ())))) GROUP BY (NOT (((vt0.c1)LIKE(vt0.c0)))); -- 0ms;
SELECT COUNT(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1) NOT NULL)))=((((vt0.c0) IS FALSE)))) FROM vt0 WHERE ((((((((((((('-1227462962')AND(NULL)))AND('')))AND(0.2317628205855562)))AND(0.2230595075128955)))AND((116818519 IN ()))))AND(((('480924406', 0.12969384933194317, '}9L''')) BETWEEN ((NULL, '525377670', 0.19123311980048674)) AND ((NULL, NULL, NULL)))))); -- 0ms;
SELECT DISTINCT ((vt0.c1)-('q6')) FROM vt0 GROUP BY NULLIF('', (+ (vt0.c1))), ((((vt0.c0) IS TRUE))!=(CAST(vt0.c0 AS TEXT))), (((((vt0.c0))<=((vt0.c0))))*((((vt0.c0))!=((vt0.c0))))), ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'' WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)GLOB(vt0.c0)), ((vt0.c0 COLLATE BINARY) IS FALSE); -- 0ms;
SELECT COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (0.19264799781838005))) OVER () FROM vt0 WHERE ((CASE WHEN '0.013920145057999989' THEN '' ELSE NULL END IN (((('0.9653819749475405', 0.5657376543918753, '諨6S&b跢t')) BETWEEN (('doPe^|}', NULL, x'')) AND ((0.6580095739315898, 'VU&', '1538947627'))), CAST(NULL AS BLOB)))); -- 1ms;
SELECT DISTINCT ((((MAX(vt0.c0))OR((vt0.c1 IN (x'')))))OR((('-820474398')<<(vt0.c0)))), (((vt0.c0)) BETWEEN ((COUNT(vt0.c0))) AND ((((vt0.c0)>=(vt0.c1))))), SUM(CASE WHEN vt0.c0 THEN '-1456064955' END) COLLATE NOCASE FROM vt0 WHERE ((((0.2635079191787921)) NOT BETWEEN (((('VU&')GLOB('jwE>	Ld5')))) AND ((((x'4069') NOT BETWEEN (0.015206682141331362) AND ('-41170611')))))) LIMIT 609782504 OFFSET 783197424; -- 0ms;
SELECT ALL ((vt0.c0)+((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c1)))OR(NULL)))|(((-1.521597092E9) BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0 WHERE (CAST(((NULL)IS('-1227462962')) AS REAL)) GROUP BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 WHEN CAST(vt0.c1 AS REAL) THEN ((vt0.c0) ISNULL) WHEN (NOT (vt0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN (vt0.c1 IN ()) THEN vt0.c0 ELSE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END, (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT), ((vt0.c1)<<(vt0.c1)), UPPER(DISTINCT vt0.c1))) AND (((((vt0.c1))<(('181590659'))), '0.2317628205855562', CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))), UNLIKELY(DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) HAVING vt0.c1; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND ('-1753940751')))AND(((vt0.c1) ISNULL))))OR(((vt0.c1)!=(x'')))))OR((vt0.c0 IN ()))))OR(((vt0.c1)%(vt0.c0)))), CASE WHEN ((((((((vt0.c1)OR(vt0.c1)))AND(NULL)))AND(vt0.c1)))OR(NULL)) THEN (((vt0.c0))!=((vt0.c0))) ELSE ((vt0.c1) NOTNULL) END, LAG(((vt0.c0 COLLATE RTRIM)|((((vt0.c0))<>((vt0.c1))))), ((((vt0.c0 COLLATE NOCASE)AND(vt0.c0)))AND(LIKELIHOOD(vt0.c1, 0.47446276610336346))), vt0.c0) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL((vt0.c1 IN ())) FROM vt0 WHERE (CASE ((('783197424')) NOT BETWEEN ((NULL)) AND ((0.8761173353823373)))  WHEN (-1227462962 IN ('1014101184')) THEN (((NULL))<((x''))) ELSE CAST(0.789280884907794 AS NUMERIC) END) ORDER BY ((vt0.c1) IS FALSE) COLLATE NOCASE DESC  NULLS LAST, ((TRIM(DISTINCT vt0.c1))AND(((vt0.c1)>>('-772168279')))) ASC, ((((((0.2317628205855562)||(NULL)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt0.c1)*(vt0.c0)))); -- 1ms;
SELECT ALL (((((vt0.c0))>=((vt0.c0))))>((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) FROM vt0 WHERE ((((0.1559634328982752))==((((x'')GLOB(x'aff5')))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))IS(CASE '%J'  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM, NULL, HEX(DISTINCT MIN(NULL)), COUNT(vt0.c0) FROM vt0 WHERE (((CAST(NULL AS TEXT)) ISNULL)); -- 0ms;
SELECT DISTINCT (((0.08131059044679123 IN (vt0.c0, vt0.c0)))AND(vt0.c1)), (((~ (vt0.c0)))==(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((CAST(vt0.c0 AS BLOB))OR(vt0.c0 COLLATE BINARY)))AND(x'')) FROM vt0 WHERE ((('嫨' COLLATE RTRIM)/('2064305242'))) GROUP BY CASE (vt0.c1 IN (vt0.c0, vt0.c0, vt0.c1))  WHEN CASE vt0.c1  WHEN 0X725f297a THEN vt0.c0 END THEN '<LC' WHEN UPPER(vt0.c1) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c1)>(vt0.c1)) THEN 0.710769882819789 END LIMIT -1159869482; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL) FROM vt0 WHERE (((CAST(0Xffffffff87f024f0 AS NUMERIC))!=(json_remove('284396261', NULL)))); -- 0ms;
SELECT DISTINCT (((vt0.c0) NOTNULL) IN (((vt0.c0)OR(vt0.c0)), ((vt0.c1) NOT NULL))) FROM vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE BINARY ASC, CAST(CASE vt0.c1  WHEN vt0.c0 THEN NULL END AS TEXT); -- 0ms;
SELECT DISTINCT ((CASE 0.08522478264664712  WHEN vt0.c0 THEN '' ELSE vt0.c0 END) BETWEEN (((NULL)IS(vt0.c1))) AND (NULL)) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (((vt0.c0)<=(x''))) AND (TOTAL(vt0.c1))) FROM vt0 WHERE (CASE 0.9265821594637802 COLLATE RTRIM  WHEN TYPEOF('-1656228302') THEN CASE '-518486405'  WHEN x'' THEN x'' WHEN NULL THEN x'' WHEN 0.8314556369758792 THEN 0.5582702345544639 ELSE x'e0599f1a' END WHEN CASE NULL  WHEN NULL THEN 0.9171202957837498 ELSE 0.2621806988342218 END THEN ((')VcI䊒G)v(') BETWEEN (NULL) AND (x'')) WHEN json_type('0.5657376543918753') THEN ((NULL)<(1095191345)) END); -- 0ms;
SELECT ((RTRIM('1722252528'))IS NOT(x'')) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 GROUP BY CAST(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC) LIMIT 1371699684 OFFSET 352237970; -- 0ms;
SELECT ALL ((vt0.c0) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c1))) AND (CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE (CASE WHEN CAST(170158326 AS BLOB) THEN 0.5335336407864548 ELSE ((6.7871242E7) NOT NULL) END); -- 0ms;
SELECT ((((vt0.c0)AND(vt0.c0))) NOTNULL) FROM vt0 WHERE ((((((('-1346112154')OR(x'0f7a')))OR('480924406')))<(x''))) LIMIT 1021050000; -- 0ms;
SELECT DISTINCT NULL, AVG(TRIM(vt0.c0)) OVER (), ((((((((((vt0.c1) NOT NULL))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c0)-(vt0.c1)))))OR(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))))AND(NULLIF(DISTINCT vt0.c1, vt0.c1))) FROM vt0 WHERE (CASE WHEN (('鴟*')IS('bꈊ')) THEN (+ (0Xffffffffbe9b5eeb)) ELSE ((0.3557764329649372) NOT BETWEEN ('') AND (NULL)) END); -- 0ms;
SELECT ALL (NOT (TOTAL(''))) FROM vt0 WHERE ((((x'', 0xffffffffc3669015, NULL)) BETWEEN ((((x'')*(4.80924406E8)), (((x'6078')) NOT BETWEEN ((5.2537767E8)) AND (('IWxU'))), (0.4571181324492095 IN ()))) AND ((((0.2230595075128955) ISNULL), x'' COLLATE BINARY, (NULL IN ('3D#aMn1')))))); -- 1ms;
SELECT DENSE_RANK() OVER ( ORDER BY CASE vt0.c0  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END WHEN ((vt0.c1)<(vt0.c1)) THEN ((((0.2966540160931853)OR(vt0.c0)))AND(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN CAST('' AS BLOB) WHEN ((vt0.c1)>=(vt0.c0)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN '1722252528' THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END THEN (- (vt0.c0)) END DESC, (((((vt0.c1))=((vt0.c0))))IS NOT(vt0.c1))  NULLS FIRST) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c1 AS BLOB), ((vt0.c0)IS NOT(vt0.c0)))) AND ((MAX(NULL), ((vt0.c1) ISNULL), ((vt0.c0)<=(vt0.c0))))), ((COUNT(vt0.c0)) NOT NULL), (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (('tPN'))) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT 0.8192951712844047, AVG(vt0.c1), MIN(((vt0.c0) ISNULL)), ((((vt0.c1) NOTNULL))GLOB(((vt0.c0) NOTNULL))), COUNT(*) OVER ( RANGE ((vt0.c1)OR((vt0.c0 IN ()))) PRECEDING) FROM vt0;SELECT ALL vt0.c0 FROM vt0 WHERE (((x'13bf' COLLATE BINARY)|((NOT (x'961b'))))); -- 0ms;
SELECT ALL (((DATETIME(vt0.c0, vt0.c1, vt0.c1), '215966792', vt0.c0))>=((((vt0.c1)==(vt0.c1)), (vt0.c1 IN ()), (((vt0.c0))>=((vt0.c0)))))) FROM vt0 WHERE (((((x'c1f6')||(NULL))) NOT BETWEEN ('0.9362518039769279') AND ((((NULL)) NOT BETWEEN ((NULL)) AND ((0Xfffffffffd8bc94d)))))) GROUP BY ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) NOT NULL), ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(((vt0.c1) NOTNULL))))AND(HEX(vt0.c0))))OR((NOT (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)), CAST((vt0.c0 IN ()) AS NUMERIC); -- 0ms;
SELECT (+ (vt0.c0 COLLATE BINARY)) FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))IS((('-1346112154') BETWEEN (vt0.c0) AND (NULL)))) DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT TOTAL(((vt0.c0)&(vt0.c0))) FROM vt0 WHERE ((+ (((NULL)&(x''))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((0.08131059044679123) BETWEEN (1072585448) AND ('393285463')) THEN '2056455273' WHEN (('~Nc') NOT BETWEEN (NULL) AND (NULL)) THEN 0.17571842148846994 WHEN ((x'')*(x'')) THEN (~ (NULL)) END); -- 0ms;
SELECT DISTINCT '^5V-x~E6' FROM vt0; -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c1))<<(COUNT(vt0.c1))), CASE WHEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE GROUP_CONCAT(vt0.c0) END, ((((vt0.c0 IN (vt0.c0))))>((((vt0.c1)|(vt0.c0))))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (('0.9171202957837498')*(vt0.c1)) FROM vt0 WHERE (CASE WHEN (+ (2056455273)) THEN (('-1753940751') NOT NULL) ELSE ((NULL) NOT BETWEEN (x'5855') AND (NULL)) END); -- 0ms;
SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c1)>=(vt0.c1)))))OR(vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(AVG(vt0.c0) AS TEXT) FROM vt0; -- 1ms;
SELECT ALL (((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((vt0.c1) ISNULL))))OR(CAST(vt0.c1 AS BLOB))))OR(CASE WHEN NULL THEN vt0.c0 ELSE vt0.c1 END)))AND(((x'') NOTNULL))), CASE MAX(vt0.c0)  WHEN ((vt0.c1) IS FALSE) THEN (+ (vt0.c0)) END, (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN (vt0.c0, MIN(vt0.c1))) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))%(((vt0.c1) NOTNULL))) FROM vt0 WHERE (CASE LOWER(DISTINCT '2WP')  WHEN 0.22310047348126338 COLLATE NOCASE THEN '-1436248993' END) GROUP BY (~ (vt0.c0)) COLLATE NOCASE, ((((vt0.c1)<=(vt0.c1))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (((vt0.c1)*(vt0.c0)))), vt0.c1 HAVING ((((vt0.c0)>>(vt0.c1))) NOT NULL); -- 0ms;
SELECT CASE TOTAL(vt0.c1)  WHEN ((vt0.c0)LIKE(NULL)) THEN vt0.c1 COLLATE RTRIM ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END FROM vt0 WHERE (((((x'8647')AND(0.05911891871863284)))OR(x'')) COLLATE RTRIM) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC  NULLS LAST; -- 0ms;
SELECT ALL ((744497217 COLLATE NOCASE) NOT NULL) FROM vt0 LIMIT 2017898925; -- 0ms;
SELECT (((((- (vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))), ((SUM(vt0.c1))IS NOT((NOT (vt0.c0)))), (- (vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT (((- (0.7877339578320369)))>=(((vt0.c0) IS FALSE))) FROM vt0 LIMIT -508245687 OFFSET -658013686; -- 0ms;
SELECT DISTINCT (NOT ((~ (vt0.c0)))), ((((((((vt0.c1)AND(vt0.c0)))AND(NULL)))OR(((vt0.c0) NOTNULL))))OR(CAST('' AS TEXT))), SUM(((vt0.c1) IS TRUE)) FROM vt0 GROUP BY CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC); -- 1ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE NOCASE FROM vt0 WHERE ((((x'' IN ()))IS((('480924406') NOTNULL)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0 IN ())))<((TOTAL(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) ISNULL))AND(((0xcdf6448) ISNULL))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((('')||('LUWt'))) NOT BETWEEN (((0.2066851120706924) IS TRUE)) AND (((((((((((((x'')AND('1918839162')))AND('')))OR('')))AND(x'')))OR('116818519')))AND(NULL))))) GROUP BY NULL; -- 0ms;
SELECT vt0.c1 FROM vt0 LIMIT 9223372036854775807; -- 0ms;
SELECT ALL (~ (NULL)) COLLATE RTRIM FROM vt0 WHERE ('L'); -- 0ms;
SELECT DISTINCT LIKE(COUNT(vt0.c1), vt0.c1) FROM vt0; -- 0ms;
SELECT (((((vt0.c0)LIKE(vt0.c0))))<((((vt0.c0) NOT NULL)))), CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) AS TEXT), GROUP_CONCAT((- (vt0.c0))) OVER () FROM vt0 GROUP BY ((((((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c1) ISNULL))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)))OR(CHANGES())); -- 1ms;
SELECT ALL COUNT(*) FROM vt0 GROUP BY (((vt0.c1 IN (vt0.c1))) ISNULL), CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) END, (- (((vt0.c1)OR(vt0.c1)))) HAVING (((vt0.c1 IN ()))%(COUNT(vt0.c0))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c1) AND ((NOT (vt0.c1)))), vt0.c1, (QUOTE(vt0.c1) IN ()) FROM vt0 WHERE (((((x'')<<('0')))LIKE(CASE NULL  WHEN x'868979b2' THEN x'' WHEN 'e?' THEN NULL WHEN '200353515' THEN NULL ELSE x'f2b6' END))); -- 0ms;
SELECT (0.2621806988342218 IN ()) COLLATE NOCASE FROM vt0 WHERE ((((0x45f938ef)) BETWEEN (((('鴟*') BETWEEN (x'') AND (NULL)))) AND ((((0.3956309230494809) IS FALSE))))); -- 0ms;
SELECT (((vt0.c0, vt0.c0, 0Xffffffff83637d48)) NOT BETWEEN ((0.5660850540170878, ((vt0.c1)/(vt0.c1)), CAST(vt0.c1 AS BLOB))) AND ((SUM(vt0.c1), CAST(vt0.c0 AS TEXT), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))) FROM vt0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT (((DATE(vt0.c1, vt0.c1, vt0.c1)))<((IFNULL('m0', vt0.c1)))) FROM vt0 WHERE (((0xffffffff83637d48)AND(0.8330753237780546)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))) OVER ( ORDER BY (((((vt0.c1))<((vt0.c0))))GLOB((((vt0.c1)) BETWEEN ((x'ab9a')) AND ((vt0.c0))))) ASC  NULLS LAST) FROM vt0; -- 1ms;
SELECT ALL vt0.c1, CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((vt0.c0)=(vt0.c1)) THEN ((vt0.c0)LIKE(vt0.c1)) ELSE (vt0.c0 IN ()) END, (((((vt0.c0, vt0.c1, '')) BETWEEN ((0.7916784730998251, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (TOTAL('(Z.H>|W욭9'))) FROM vt0; -- 0ms;
SELECT LAG(((vt0.c1) IS TRUE) COLLATE BINARY, (+ (vt0.c1 COLLATE BINARY)), ((+ (vt0.c0)) IN ())) OVER () FROM vt0 WHERE (CAST(((((NULL)AND('O乫')))OR(0.8949640445267908)) AS TEXT)); -- 0ms;
SELECT DISTINCT (((((((((NOT (vt0.c0)))AND(((vt0.c1) BETWEEN (vt0.c0) AND (0.08543857062320181)))))AND(vt0.c1 COLLATE BINARY)))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((0.06683863988723482))))))OR((vt0.c0 IN ()))) FROM vt0 WHERE (((((((NULL)AND(-1016688619)))OR('1800765683'))) IS FALSE)); -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))||(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE ((~ (((0.08332884242094196) IS FALSE)))); -- 0ms;
SELECT DISTINCT ((json(vt0.c0))>(((vt0.c0)LIKE(vt0.c0)))), ((ABS(vt0.c1)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c1) NOT NULL))), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN ((~ (vt0.c1))) AND (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE ((~ (((0.2230595075128955) IS FALSE)))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS NUMERIC))-(TOTAL(vt0.c0))) FROM vt0 WHERE ('444049379'); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))!=(((vt0.c1) NOT NULL))), ((((vt0.c0)IS(NULL))) NOT NULL), CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE RTRIM(vt0.c1) END FROM vt0 WHERE (((((NULL)IS('357051583'))) BETWEEN (UNLIKELY(DISTINCT 0.11364379230298927)) AND (CAST('' AS NUMERIC)))); -- 1ms;
SELECT (((vt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE))) FROM vt0 WHERE ((((+ ('>yTCho7Q埊')))IS(CASE '1198164767'  WHEN NULL THEN 0.0565111737296764 ELSE x'' END))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))AND((((vt0.c0))>((vt0.c1))))), CASE (vt0.c0 IN ())  WHEN NULL THEN (vt0.c1 IN ()) END, CAST(MAX(vt0.c1) AS BLOB) FROM vt0 LIMIT -214542281; -- 0ms;
SELECT 1924864382 FROM vt0; -- 0ms;
SELECT CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN ((-1197144129) IS TRUE) WHEN ((vt0.c1)|(vt0.c1)) THEN '2056455273' WHEN ((vt0.c0)*(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0)+(-1159869482)) END, ((vt0.c1) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM)), (~ ((- (vt0.c0)))), ((NULL)>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((COALESCE(DISTINCT vt0.c0, vt0.c0))AND(NULL)))OR(((vt0.c0)>(vt0.c0)))))OR(((vt0.c1)>=(vt0.c0)))))AND(AVG(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT load_extension(((vt0.c0)-(vt0.c0)), (((NULL, vt0.c0, vt0.c1))!=((vt0.c1, vt0.c0, vt0.c0)))) FROM vt0 GROUP BY 0.4937074765620244;SELECT UPPER(DISTINCT (((vt0.c1))<((vt0.c0)))) FROM vt0 GROUP BY json_array(vt0.c1, vt0.c0) COLLATE RTRIM HAVING (- (-1097113877));SELECT (((((vt0.c0 IN ()))OR(CAST(vt0.c1 AS BLOB))))AND(((vt0.c1)/(vt0.c1)))), (((+ (vt0.c0)))!=(((vt0.c0)IS NOT(vt0.c1)))), CASE WHEN ((4.44049379E8)<(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) END FROM vt0 WHERE (CAST((0.4455815329146072 IN ()) AS INTEGER)); -- 1ms;
SELECT DISTINCT CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c1 THEN ((vt0.c1)IS NOT(vt0.c0)) WHEN (NOT (vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) END FROM vt0 WHERE (((CASE WHEN x'8fa1' THEN ')vci䊒g)v(' END)LIKE(((0.22378928284406097) NOTNULL)))); -- 0ms;
SELECT ALL (((+ (vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (TRIM(0.038953241091014945))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL (((('1119278089') NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c1, vt0.c0, vt0.c0))) AND (0Xffffffffb2b5ce4a)), TOTAL(vt0.c0 COLLATE BINARY COLLATE RTRIM), (((((((((((((- (vt0.c0)))OR((+ (vt0.c0)))))OR(NULL)))OR('0.789280884907794' COLLATE NOCASE)))OR((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(((((vt0.c1)AND(vt0.c0)))OR(NULL)))))AND((vt0.c0 IN (vt0.c0)))), ((x'' COLLATE BINARY)*(SQLITE_VERSION())), (- (((vt0.c0)>>(vt0.c1)))) FROM vt0 WHERE (((((0.21835069426135034)<(NULL)))!=(-1e500))); -- 0ms;
SELECT DISTINCT CAST(('2064305242' IN ()) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT((vt0.c0 IN ())) FILTER(WHERE ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))) IN ())) OVER () FROM vt0; -- 0ms;
SELECT LAST_VALUE((((CASE WHEN vt0.c0 THEN vt0.c1 END))<>((((vt0.c0)LIKE(vt0.c1)))))) OVER () FROM vt0 WHERE ((((NULL)) BETWEEN ((('WUwa+X' IN ()))) AND ((((x'')=(NULL)))))); -- 0ms;
SELECT ALL (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN (((vt0.c0) NOTNULL))) FROM vt0 WHERE (''); -- 0ms;
SELECT AVG(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) OVER ( ORDER BY CASE ((x'cbe9d706') IS TRUE)  WHEN CAST(vt0.c1 AS REAL) THEN CAST(vt0.c0 AS INTEGER) ELSE ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) END ASC) FROM vt0 WHERE (CASE WHEN (((NULL)) NOT BETWEEN (('0.5335336407864548')) AND ((x'e8ae'))) THEN (- (0.9107050066529842)) ELSE '^5V-x~E6' END); -- 0ms;
SELECT ALL (((~ (vt0.c1)))+(((vt0.c1) IS TRUE))), COUNT((((NULL))<((vt0.c0))) COLLATE NOCASE), ((((vt0.c0)IS NOT(vt0.c0))) IS FALSE) FROM vt0 WHERE (((('-560282498' IN ())) BETWEEN ((('>YTCHO7Q埊') NOTNULL)) AND (rtreenode(NULL, x'9498')))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0 WHERE ((((('^a4/A')/(x''))) BETWEEN ((NOT (x'b9ee'))) AND (((x'') BETWEEN ('TN') AND (-1.346112154E9))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, NULL)))))<=(((vt0.c1 IN (vt0.c0, vt0.c1))))) FROM vt0 WHERE ((((((('-2055608638')AND(NULL)))AND(-815836387)))OR(((x'') NOTNULL)))); -- 1ms;
SELECT LAG(((((vt0.c1)<(vt0.c0))) BETWEEN (CASE WHEN 0.12969384933194317 THEN vt0.c1 END) AND ((~ (vt0.c1)))), CAST(CAST(vt0.c1 AS BLOB) AS BLOB), CAST(((vt0.c0)<(vt0.c0)) AS BLOB)) OVER () FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT vt0.c0, (((SUM(vt0.c1), LOWER(vt0.c1), vt0.c1 COLLATE BINARY))>((vt0.c0, vt0.c1 COLLATE RTRIM, UPPER(vt0.c1)))), COUNT((('')!=(vt0.c0))) FILTER(WHERE ((((0.1352128226399446) IS TRUE))&((((vt0.c1))>=((vt0.c0)))))) OVER ( ORDER BY vt0.c1  NULLS FIRST, (NOT (vt0.c0))) FROM vt0 WHERE (CASE ((0.32753216672555374) NOT BETWEEN (1.70158326E8) AND (2111891221))  WHEN (((x'12d7'))<=((0.5657376543918753))) THEN (~ ('-1753940751')) ELSE (+ (x'f6f6')) END); -- 0ms;
SELECT DISTINCT COALESCE((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c0) NOTNULL)) FROM vt0 WHERE (((460823944)-(NULL)) COLLATE BINARY); -- 0ms;
SELECT ALL ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL CASE vt0.c0  WHEN PRINTF(vt0.c0) THEN CASE -8.20474398E8  WHEN vt0.c0 THEN x'3477' ELSE vt0.c0 END END FROM vt0 WHERE (CASE WHEN (NOT (0.08131059044679123)) THEN (('1111211091')IS NOT(0.7733502188329265)) END); -- 0ms;
SELECT DISTINCT (~ (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) FROM vt0 GROUP BY ((((((((vt0.c0)AND(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))))AND(UNLIKELY(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(CAST(vt0.c1 AS TEXT))); -- 0ms;
SELECT ALL (((CAST(vt0.c1 AS BLOB)))!=((vt0.c1))) FROM vt0 WHERE ((((x'5537')) NOT BETWEEN ((((x'')*(x'549b')))) AND (((- ('-1149611591')))))); -- 1ms;
SELECT DISTINCT NULL FROM vt0 WHERE (((((1.095191345E9)+('')))AND((((((((('129756732')AND(0.17290194179492846)))OR(0.4458385137672427)))OR('\rgOOY9')))OR(NULL))))); -- 0ms;
SELECT (((vt0.c0)) BETWEEN (((((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))))) AND (((((vt0.c0))<((vt0.c0)))))), (((((((((((((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))AND(((vt0.c0)*(vt0.c1)))))OR(((NULL)IS NOT(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR(((((((((vt0.c1)AND('-1346112154')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))))OR(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))))OR((- (vt0.c1)))), GROUP_CONCAT((NULL IN ())) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN (((+ (vt0.c0)))) AND (((- (vt0.c0))))) FROM vt0 WHERE (((((0.029862179653475374) NOT BETWEEN (NULL) AND (0.8025709520178088))) NOT NULL)); -- 0ms;
SELECT DISTINCT vt0.c0, FIRST_VALUE(0.3610153880504783) OVER ( ORDER BY CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) THEN CASE vt0.c1  WHEN 'nW' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END DESC  NULLS LAST), (-41170611 IN ()) FROM vt0 WHERE (CAST(((((x'705c')OR(0.5369081134320862)))AND('1538947627')) AS REAL)) GROUP BY ((CAST(vt0.c1 AS REAL))&(vt0.c0 COLLATE BINARY)) HAVING vt0.c1; -- 0ms;
SELECT DISTINCT CASE NULL  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (NOT (vt0.c1)) ELSE ((vt0.c0)>=(vt0.c1)) END FROM vt0 WHERE (TRIM((('魛')/(NULL)), (('894702582')&(x'')))); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM vt0 WHERE (CAST(x'' AS INTEGER) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((vt0.c0) IS FALSE))IS(CAST(vt0.c1 AS REAL))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c1)-('2017843195'))  WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (- (vt0.c1)) ELSE (NOT (vt0.c0)) END FROM vt0 WHERE (((-1.197144129E9 COLLATE RTRIM) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((ABS(vt0.c0))OR(x'')))OR((~ (vt0.c1)))) FROM vt0 GROUP BY CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c1) THEN vt0.c0 COLLATE NOCASE END, ((((((x'f9dd')<(vt0.c0)))OR(((vt0.c0)<<(vt0.c0)))))AND((vt0.c1 IN ()))), ((((vt0.c1)<=(vt0.c0)))!=(vt0.c0));SELECT ALL UPPER(DISTINCT ((vt0.c1)IS(vt0.c0))), (((((((((vt0.c0)OR(NULL)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0)<<(vt0.c1)))), SUM(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0 WHERE (((((((NULL)AND(0.8761173353823373)))AND('-37502590')))=(((1136957816) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))=(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c1) IS TRUE) ELSE (((vt0.c1))>((vt0.c0))) END FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))<<(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))), ((CASE WHEN vt0.c0 THEN vt0.c0 END)IS NOT(((vt0.c0)/(vt0.c1)))), (NOT (vt0.c1)) COLLATE NOCASE FROM vt0 WHERE ((821645261 COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT ((((vt0.c1)AND(vt0.c0)))OR('393285463')) COLLATE NOCASE FROM vt0; -- 1ms;
SELECT (~ (0xffffffff8ae5c39c)) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((((~ ('0.08543857062320181')))OR(vt0.c0)))AND('-658013686')), vt0.c0, ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c1)-('2017843195')))) FROM vt0; -- 0ms;
SELECT DISTINCT (- (vt0.c0)) COLLATE RTRIM, vt0.c1, AVG((- (vt0.c1))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0 WHERE (HEX((NULL IN ()))); -- 0ms;
SELECT DISTINCT MAX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END), json_remove((vt0.c1 IN ()), ((vt0.c1)=(vt0.c0))), (((vt0.c1))>((vt0.c0))) COLLATE RTRIM, CAST(((vt0.c1)<<(vt0.c0)) AS INTEGER), (((((vt0.c0 IN (vt0.c1, vt0.c1)))OR((((vt0.c1))<=(('2056455273'))))))AND(CAST('' AS REAL))) FROM vt0 ORDER BY (((vt0.c0)<<(vt0.c0)) IN (vt0.c1));SELECT (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN x'' COLLATE NOCASE THEN (('1504615259')<=(x'')) END) LIMIT -743016959 OFFSET 783197424; -- 0ms;
SELECT ALL LIKE((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), (((vt0.c1, 0.06683863988723482, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))), GROUP_CONCAT((+ (vt0.c1))) OVER (), vt0.c0 FROM vt0 WHERE (CASE WHEN CAST(0.6580095739315898 AS NUMERIC) THEN ((((((((0xffffffffadc3c0d2)OR(x'')))AND(x'')))OR('<LC')))OR(-1.149611591E9)) WHEN ((((((((NULL)OR(x'ad84')))OR(0x6b5580f3)))AND(0.6596109129343092)))OR(x'')) THEN ('-1436248993' IN ()) WHEN (((('2056455273')OR(x'')))AND(0xffffffffaa9c3110)) THEN ((x'') ISNULL) END); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) NOT NULL) FROM vt0 WHERE (CAST((0.8761173353823373 IN ()) AS BLOB)); -- 0ms;
SELECT (('-2055608638')<=(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) FROM vt0 LIMIT 1001279296; -- 0ms;
SELECT DISTINCT CAST((~ (vt0.c0)) AS NUMERIC), ((((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-1369013845'))) NOT NULL), vt0.c1, LAG(CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER), NULL, 3.93285463E8) OVER ( PARTITION BY (((((vt0.c0)*(vt0.c0)), vt0.c0, ((vt0.c0) IS TRUE)))<=(((- (-1948235548)), (NOT (vt0.c0)), CAST(vt0.c1 AS INTEGER)))), QUOTE((((vt0.c1))!=((NULL))))), vt0.c1 FROM vt0; -- 0ms;
SELECT ALL AVG(vt0.c1) OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1)) BETWEEN ((x'f1ba')) AND ((vt0.c1))) FROM vt0; -- 0ms;
SELECT CASE (- (vt0.c0))  WHEN x'' THEN vt0.c0 COLLATE RTRIM ELSE COUNT(*) END, ((vt0.c1)>>(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))), LAST_VALUE((NOT (CAST(vt0.c0 AS NUMERIC)))) OVER () FROM vt0 WHERE (((((NULL) NOT BETWEEN (0.8330753237780546) AND (0xffffffff93f53831)))/(x''))) LIMIT 1829290814; -- 0ms;
SELECT (NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 LIMIT -2085282215; -- 0ms;
SELECT (((+ (vt0.c0)))*(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))), DATETIME(vt0.c1, vt0.c0, vt0.c1) COLLATE RTRIM, SUM(vt0.c1) FILTER(WHERE ((CAST(vt0.c0 AS TEXT))|((vt0.c1 IN ())))) OVER () FROM vt0 WHERE ((((+ (0.5483771457318717))) NOTNULL)); -- 0ms;
SELECT ALL SUM(vt0.c0), ((UNLIKELY(DISTINCT vt0.c1))&(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)), (+ (((vt0.c0)IS(vt0.c1)))), CAST((vt0.c1 IN ('894702582')) AS BLOB), SUM(TOTAL(((vt0.c0)<>(vt0.c0)))) FROM vt0 WHERE (((('!e'))==(((('') BETWEEN ('-1097113877') AND (x'5fe0')))))) GROUP BY ((vt0.c0)OR(vt0.c0)) COLLATE BINARY, ((((vt0.c1)OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), CASE WHEN ((((vt0.c1)AND(NULL)))OR(vt0.c1)) THEN (((-1753940751)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) WHEN CASE WHEN vt0.c0 THEN '0.2966540160931853' END THEN 1107942409 END, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((vt0.c1)GLOB(vt0.c1)) END, (NULL IN (((vt0.c1) NOT NULL), 0.541090585951623)) HAVING CAST((((vt0.c1))>((vt0.c1))) AS NUMERIC);SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((NULL) NOT BETWEEN (x'') AND (NULL)))OR(TRIM(x'7403'))))AND(((x'')OR(NULL))))); -- 0ms;
SELECT CAST((- (x'')) AS INTEGER), ((((SUM(vt0.c0))AND(CASE x'5960'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))OR((+ (vt0.c1)))), CAST(x'8440' AS NUMERIC) FROM vt0 WHERE ((((x'')+(0.3136967842709596)) IN ((('r')|(NULL)), -2.01430504E9 COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((COALESCE(DISTINCT vt0.c0, vt0.c1))OR(TOTAL(0.6898871872990158))))OR(((vt0.c0)==(vt0.c0)))) FROM vt0 WHERE (LIKELIHOOD(DISTINCT CAST(NULL AS NUMERIC), 0.060771102344942984)) ORDER BY (((vt0.c1 IN ()))+((vt0.c1 IN ())))  NULLS LAST; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((x'')-((('') NOT BETWEEN ('-1159869482') AND ('-820474398'))))); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' END)) AND ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) FROM vt0 WHERE ((((-1174084166))<=((x''))) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT DISTINCT HEX(vt0.c1) COLLATE RTRIM FROM vt0 WHERE (((('' IN ()))+('7'))) GROUP BY ''; -- 1ms;
SELECT LAG(((((vt0.c0)GLOB(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)), ((((('-658013686' IN (vt0.c1)))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)), ((((vt0.c1) IS TRUE))IS(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) FROM vt0; -- 0ms;
SELECT DISTINCT '1074309230' FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((~ (vt0.c0))) OVER (), ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND (CAST(vt0.c1 AS NUMERIC))), ((CASE WHEN vt0.c0 THEN '-1432604400' ELSE vt0.c1 END) NOT NULL), LTRIM(((vt0.c1)<=(vt0.c0)), CAST(vt0.c1 AS BLOB)), x'' FROM vt0 WHERE (((((x'bbe2')AND(-564188803)))OR(x'32b2')) COLLATE NOCASE); -- 0ms;
SELECT CAST(((vt0.c1)%(vt0.c1)) AS BLOB), IFNULL(DISTINCT ((vt0.c0)*(vt0.c1)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END), ((((vt0.c1) IS FALSE)) IS FALSE) FROM vt0 WHERE (CAST(((NULL)>(x'')) AS NUMERIC)) ORDER BY ((json_insert(vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))), CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END AS TEXT) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT (vt0.c0 IN ()), DATE(vt0.c1, '-907750096', x'')) FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1)))-(((vt0.c1)*(vt0.c0))))  NULLS LAST; -- 1ms;
SELECT DISTINCT CASE WHEN ((vt0.c1) NOT NULL) THEN (((vt0.c0))>=((vt0.c1))) ELSE -2.055608638E9 END FROM vt0 WHERE (CASE WHEN x'' THEN CASE WHEN NULL THEN NULL END END); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (0.0565111737296764)) FROM vt0 WHERE (((((x'')>>('1538947627'))) IS FALSE)); -- 0ms;
SELECT ALL CAST(TOTAL(vt0.c1) AS REAL), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE, vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT AVG(CAST(vt0.c0 AS BLOB)) OVER (), json_quote(SUM(vt0.c1)), AVG((NOT (vt0.c0))) FROM vt0; -- 0ms;
SELECT x'' FROM vt0 WHERE (''); -- 0ms;
SELECT DISTINCT (- (460823944)) FROM vt0 ORDER BY (((NULL IN ())) ISNULL)  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (0X70e49d1d447cda3d) AND (''))  NULLS FIRST; -- 0ms;
SELECT ALL ((vt0.c1 COLLATE BINARY)/(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) FROM vt0 WHERE ((((NULL IN (1339110721, 't1m.'))) BETWEEN ((((239164936, '&>', NULL, '-2085282215', 0.3924326899562848)) NOT BETWEEN (('plỢ/', x'', 1783030298, '393285463', x'')) AND ((NULL, 0X7bbee3c, NULL, NULL, '-1574510913')))) AND (CAST('3D#aMn1' AS NUMERIC)))); -- 0ms;
SELECT ALL (((((((((((vt0.c1))>=((0.6591471076625255))))OR(((vt0.c1) IS TRUE))))AND(vt0.c0)))AND(((vt0.c0)<(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((((((('-234292202')OR(NULL)))AND(NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))!=((IFNULL(DISTINCT vt0.c1, vt0.c1)))) FROM vt0 WHERE ((CASE WHEN 0Xffffffffdc740a37 THEN x'' WHEN NULL THEN '179570797' WHEN 0.6832186606729871 THEN '-2085282215' END IN ((+ (0.03068041309441638)), CAST(0xffffffff987b522a AS REAL)))); -- 0ms;
SELECT TIME(vt0.c1, vt0.c0, vt0.c0) COLLATE BINARY, json(CAST(0xffffffff982b6962 AS TEXT)), (- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0) IS FALSE))OR(((vt0.c1) IS TRUE))))OR(((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)))) FROM vt0; -- 0ms;
SELECT CAST('' AS REAL) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL COUNT(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END), ((((((vt0.c1)GLOB(vt0.c1)))OR((- (vt0.c1)))))AND(vt0.c0 COLLATE BINARY)), AVG(vt0.c1) OVER ( ORDER BY (- (CAST(vt0.c0 AS TEXT))), ((((((NULL)||(vt0.c1)))AND((((vt0.c0))<>((vt0.c0))))))OR(((vt0.c1)LIKE(vt0.c0)))) ASC, QUOTE(ABS(DISTINCT vt0.c1))  NULLS LAST) FROM vt0 WHERE (CAST(CASE WHEN 37281449 THEN x'51d9d27c15b1' END AS NUMERIC)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ (0.9155145419107066)) COLLATE RTRIM FROM vt0 WHERE (CASE (('cm') IS FALSE)  WHEN 'H9hCe1w' COLLATE NOCASE THEN (('-1298024652')AND('K&()WW')) END); -- 0ms;
SELECT ((((vt0.c1) NOT NULL))IS NOT((((vt0.c1))=((vt0.c1))))), 0X2b54eb51, TYPEOF((vt0.c0 IN (vt0.c1))) FROM vt0 GROUP BY x'' HAVING (NOT (GLOB(vt0.c1, vt0.c0))); -- 1ms;
SELECT DISTINCT COUNT(*), (((vt0.c1)) NOT BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))) AND ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))))), (((vt0.c1)) BETWEEN ((((x'')==(vt0.c1)))) AND ((vt0.c1))) FROM vt0 WHERE ((((x'')) BETWEEN ((('116818519' IN ()))) AND ((0.0565111737296764 COLLATE RTRIM)))) ORDER BY (- (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST LIMIT 1194134299; -- 0ms;
SELECT (((vt0.c1 IN ())) NOT BETWEEN (GROUP_CONCAT(vt0.c1)) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))), ((((vt0.c1 COLLATE NOCASE)OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (0.06683863988723482) AND (NULL)))), ((((vt0.c0)<(vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT ALL ((-2099214443)<((~ (vt0.c1)))) FROM vt0 WHERE ((- (CASE 0.4053758037815287  WHEN '1166155168' THEN NULL END))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c1)) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c1)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((((((vt0.c1, vt0.c0, vt0.c1))<=((vt0.c1, 0.8129191985140268, vt0.c0))))OR(((vt0.c1) NOT NULL))))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)))AND(GROUP_CONCAT(vt0.c1))) FROM vt0 WHERE ((NOT (0.2819115549529989))); -- 1ms;
SELECT DISTINCT CASE WHEN ((((NULL)AND(vt0.c0)))AND(vt0.c0)) THEN '-41170611' ELSE CAST(vt0.c0 AS NUMERIC) END FROM vt0 WHERE (((('' COLLATE NOCASE, (((x''))>=((''))), ((NULL)&(x''))))>((((0Xffffffffd1f9a5a9)GLOB('2048773922')), ((x'')>>(NULL)), (('F') NOTNULL))))); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT x'' COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL (((vt0.c1 IN (x'1458'))) BETWEEN (CAST(NULL AS INTEGER)) AND (TYPEOF(vt0.c0))), 'Ml%*2}\nᙼY', ((((((((((vt0.c0)IS NOT(vt0.c1)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))==((vt0.c1))))), ((+ (vt0.c1)) IN ()), '' FROM vt0 GROUP BY (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((UNLIKELY(vt0.c0)))) HAVING ((vt0.c1)>>(COALESCE(DISTINCT vt0.c1, vt0.c0, vt0.c0, vt0.c1))); -- 0ms;
SELECT ALL (((- (vt0.c1))) BETWEEN (vt0.c0) AND (((vt0.c1)IS NOT('')))) FROM vt0 WHERE ((((((('8+')OR(1648356289)))AND('-1811680012'))) NOT NULL)); -- 0ms;
SELECT (((vt0.c1, vt0.c1, 0.04796401303096298, vt0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c1 AS BLOB), vt0.c0 COLLATE RTRIM, ((vt0.c0)<=(vt0.c0)), GROUP_CONCAT(vt0.c1), vt0.c1 COLLATE NOCASE)) AND ((((vt0.c0)<(vt0.c0)), ((vt0.c1)GLOB(vt0.c0)), CAST(vt0.c0 AS REAL), (vt0.c0 IN ()), ((vt0.c0) IS TRUE)))), CAST(MAX(vt0.c0) AS BLOB), ((((TOTAL(vt0.c1))OR(COUNT(*))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0; -- 1ms;
SELECT ALL ((((vt0.c0) ISNULL)) IS FALSE), (((vt0.c1)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (x'')))) AND ((CAST(vt0.c0 AS TEXT)))), 0.17571842148846994 FROM vt0 WHERE (CASE ((x'a9a8') NOT BETWEEN (0.05650757808343332) AND (x'9c86ee0a'))  WHEN -0.0 THEN NULL COLLATE BINARY WHEN 0.23424381456217747 COLLATE BINARY THEN x'' WHEN (0.15499984650759613 IN ()) THEN (0xffffffffd1f9a5a9 IN (-1.379680046E9, 0.5792115677778619)) ELSE (0xbf126eb IN ('Q2fkO} ', 0.15171732779063796)) END); -- 0ms;
SELECT ALL MIN(GROUP_CONCAT(0.22310047348126338)) FROM vt0;SELECT DISTINCT x'', x'', CAST(((0.4349731832888242) BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT) FROM vt0 WHERE (((CASE WHEN 1.486003487E9 THEN NULL ELSE 0.3679268449118288 END) NOT BETWEEN (NULL COLLATE NOCASE) AND (HEX(DISTINCT NULL)))); -- 0ms;
SELECT ALL TRIM(vt0.c1, ((((NULL)OR(vt0.c1)))AND(vt0.c1))), CASE ((vt0.c1) IS TRUE)  WHEN (vt0.c1 IN ('894702582')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END, CAST(json_object(vt0.c0, vt0.c0) AS REAL), CASE WHEN (((vt0.c1, vt0.c0, '')) NOT BETWEEN ((x'', vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) THEN CAST(vt0.c1 AS BLOB) WHEN IFNULL(vt0.c0, vt0.c0) THEN (('661559851') BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE HEX(DISTINCT vt0.c0) END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM vt0;SELECT DISTINCT ((((vt0.c0)-(vt0.c0))) IS FALSE) FROM vt0 WHERE (CAST(((x'ee2d') NOT BETWEEN (0.3720428650241594) AND (x'2770')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((((vt0.c1) BETWEEN (NULL) AND (vt0.c0)))OR((~ (vt0.c0)))))AND('}#LL\nz'))) OVER ( GROUPS ((((((((vt0.c0)AND(0X58c65115)))OR(LIKELY(vt0.c0))))OR(((vt0.c1)OR(vt0.c1)))))OR(((vt0.c1) IS TRUE))) PRECEDING EXCLUDE NO OTHERS) FROM vt0;SELECT ALL ((CAST(x'' AS INTEGER))<(vt0.c0 COLLATE NOCASE)) FROM vt0 GROUP BY (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1)||(vt0.c0)), (~ (vt0.c0)), (NOT (NULL)))) AND (((~ (vt0.c0)), (((('\T')OR(vt0.c1)))OR(vt0.c0)), LIKE(vt0.c0, vt0.c1, 'ؔ')))); -- 0ms;
SELECT DISTINCT ((vt0.c0)|(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)), UPPER(vt0.c1) COLLATE NOCASE, (((vt0.c0 IN ()))/(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)) FROM vt0 WHERE ((~ (SUBSTR(1221379108, NULL)))); -- 0ms;
SELECT ALL CAST(vt0.c1 COLLATE RTRIM AS BLOB) FROM vt0 WHERE ((+ ((NULL IN ())))); -- 0ms;
SELECT ((CASE WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c1) IS FALSE))) FROM vt0 LIMIT 353257784 OFFSET 952116099; -- 0ms;
SELECT DISTINCT ((((vt0.c0)LIKE(vt0.c0))) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL (((- (vt0.c1))) IS TRUE) FROM vt0 WHERE (CASE WHEN json_valid(NULL) THEN MAX(8134799575966603837, NULL) END); -- 0ms;
SELECT ALL '0.4458385137672427', (((vt0.c0, vt0.c1, 'Vo?䊒')) BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c1)==(vt0.c0)), ((((vt0.c1)AND('')))AND(vt0.c0)))) AND ((vt0.c1, (vt0.c0 IN (vt0.c1, vt0.c1)), ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0))))), ((((UNLIKELY(vt0.c0))OR((~ (vt0.c1)))))OR(COUNT(vt0.c1))), LAST_VALUE(((((((vt0.c0)/(vt0.c0)))OR(((('357051583')) BETWEEN ((vt0.c1)) AND ((604422028))))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))) OVER (), vt0.c1 FROM vt0 WHERE (CAST((((0.7083391090557055)) NOT BETWEEN ((8.134799575966604E18)) AND ((0.5874310937702006))) AS TEXT)) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ((+ (vt0.c0)), (((vt0.c1))>((vt0.c1))), ((vt0.c1)>(']''')))) DESC; -- 1ms;
SELECT DISTINCT x'', (((vt0.c1) ISNULL) IN ()), (((TRIM(DISTINCT vt0.c1, vt0.c1)))<((((vt0.c1)||(vt0.c1))))) FROM vt0 WHERE ((((NOT (0.16968138786314535)))%(((x'') BETWEEN (x'') AND (''))))) LIMIT -1839202686; -- 0ms;
SELECT ALL vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS TEXT), IFNULL((('')=(vt0.c1)), CAST(vt0.c1 AS BLOB)), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(((vt0.c0)<>(vt0.c1)))))AND(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT (1924864382 IN ()) FROM vt0 WHERE (((((((((CASE WHEN 0.573931322522443 THEN -1.197144129E9 WHEN 0.15928070080906354 THEN '-254525676' WHEN 0xffffffffb9d7eda2 THEN '-416337636' END)OR((~ (NULL)))))AND(((x'') ISNULL))))AND((((0.877631290727993, NULL, '-2045901526')) NOT BETWEEN ((x'acf7', '', 0.31055889112038204)) AND ((NULL, NULL, NULL))))))OR(NULL))); -- 0ms;
SELECT DISTINCT ((json_extract(vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) IS FALSE) FROM vt0 WHERE (x'c6d6') GROUP BY vt0.c1 HAVING ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))GLOB((vt0.c1 IN ()))); -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT DISTINCT SQLITE_VERSION(), UPPER(((vt0.c0) ISNULL)), AVG(((vt0.c1) IS TRUE)) FILTER(WHERE (- ('Dd೰jshu'))) OVER ( RANGE  CURRENT ROW) FROM vt0 WHERE (NULLIF(0.4550939986113012, STRFTIME(-2.14542281E8, '', x''))); -- 0ms;
SELECT ALL TOTAL((((NULL, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1)))) FROM vt0 WHERE (LTRIM(('-943470047' IN ()), UNLIKELY(DISTINCT x'cee5'))); -- 0ms;
SELECT DISTINCT (NOT (((vt0.c1)!=(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c1 AS BLOB) FROM vt0 WHERE (CAST(0.09116009643200096 AS TEXT)); -- 0ms;
SELECT ALL (((COUNT(vt0.c1)))<=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c1) IS TRUE)  WHEN CAST(0.2805871422333479 AS INTEGER) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE GROUP_CONCAT(vt0.c0) END FROM vt0 LIMIT -1174208810; -- 0ms;
SELECT DISTINCT (((+ (0.1352128226399446)))<=(((vt0.c0)<<(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE '-1656228302'  WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM FROM vt0 WHERE (CASE WHEN CAST(x'c1a9' AS REAL) THEN NULL COLLATE NOCASE WHEN x'' THEN (('') BETWEEN ('') AND (x'')) WHEN ((0X87969e)>>(x'6edbdbea')) THEN ((0.27084349624208814)-(x'5759')) WHEN NULL COLLATE BINARY THEN NULL COLLATE NOCASE WHEN ((5.2537767E8) NOT BETWEEN (0.08010150888249523) AND (0.3035116443538711)) THEN (+ (0Xffffffffa0e765fe)) END) GROUP BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))&(vt0.c0 COLLATE NOCASE)) HAVING CHAR((((vt0.c1, vt0.c0, x'')) BETWEEN ((vt0.c1, vt0.c0, '454056857')) AND ((vt0.c0, vt0.c1, NULL)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0 IN (vt0.c0, vt0.c0))))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) FROM vt0 WHERE (((((0Xffffffffb8f4ae92) NOT BETWEEN ('-12442016') AND ('-549862122'))) NOT BETWEEN ((('1782370695') ISNULL)) AND (((('180024614')) BETWEEN ((NULL)) AND (('200353515')))))); -- 0ms;
SELECT ALL CASE ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR('tPN')))AND(vt0.c0)))AND(x'0fff'))  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c1 COLLATE RTRIM END, ((((vt0.c0) IS TRUE)) IS TRUE), 0.7797996580417226 FROM vt0 WHERE (((((NULL COLLATE RTRIM)OR((NULL IN ()))))AND((NOT ('IB'))))); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0))<((vt0.c0))) AS TEXT) FROM vt0 WHERE (((((((NULL) BETWEEN ('-1017325673') AND (0.4347116374079987)))AND(CAST(352237970 AS NUMERIC))))OR((+ (x''))))); -- 0ms;
SELECT DISTINCT MAX(COUNT(((vt0.c0) NOTNULL))), ((IFNULL(DISTINCT vt0.c0, '-1824285262')) BETWEEN ((vt0.c1 IN ())) AND (DATE(vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1))), 0.8497493948081775, SUM((vt0.c1 IN ())), CASE CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END  WHEN vt0.c0 COLLATE RTRIM THEN ((0.8670629748997121) ISNULL) ELSE ((vt0.c1)LIKE(vt0.c1)) END FROM vt0 WHERE (CASE WHEN ((((0.38172172016654304)AND(1371699684)))OR(NULL)) THEN ((x'')<=(0.4582521814380994)) WHEN ((0.901233346800417)>('0.2635079191787921')) THEN (('0.21835069426135034') ISNULL) WHEN 0.2230595075128955 THEN (('0.05650757808343332')<=(0.27210476868192546)) END);SELECT ((((((((((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS BLOB))))OR(x'')))AND(((vt0.c0)>(vt0.c1)))))OR(vt0.c0 COLLATE RTRIM)))AND(((((((((vt0.c0)AND(x'')))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((((x'') ISNULL)) BETWEEN (((x'e8f5') IS FALSE)) AND (((((0.26627039197240254)OR(NULL)))AND('b.'))))) GROUP BY COALESCE(DISTINCT TRIM(vt0.c1, vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) HAVING ((vt0.c1) NOT NULL) COLLATE BINARY; -- 0ms;
SELECT DISTINCT (~ (vt0.c0 COLLATE RTRIM)), COUNT((+ (vt0.c0))), ((CAST(vt0.c0 AS INTEGER)) BETWEEN (NULLIF(DISTINCT vt0.c1, '-560282498')) AND (vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c1 AS BLOB)))>=((vt0.c0))), (((vt0.c0)) BETWEEN ((CAST(x'' AS REAL))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))), vt0.c0 FROM vt0 WHERE (CASE WHEN 0.09487117419072233 THEN '-1296708022' COLLATE BINARY WHEN (('')&('H<')) THEN '?R' WHEN ((0.9371037367250507) NOTNULL) THEN CAST('1298046904' AS BLOB) END) ORDER BY (((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&((NOT (vt0.c0)))) LIMIT -1964653668; -- 0ms;
SELECT DISTINCT (NOT (SUM(vt0.c1))), (vt0.c0 IN (vt0.c1)) COLLATE RTRIM, LOWER(CAST(vt0.c1 AS REAL)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ('-106953117' IN (x''))  WHEN ((vt0.c0)>(vt0.c1)) THEN 'T%x' ELSE (+ (x'a35b')) END FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC) FROM vt0 WHERE ((((('!iBdp?')+(NULL)))OR((~ (NULL))))); -- 0ms;
SELECT ((((vt0.c0)<>(vt0.c0)))>((('783197424') NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0 WHERE ((- (IFNULL(x'6067ac74', NULL)))); -- 0ms;
SELECT ALL x'', MAX(CAST(vt0.c1 AS INTEGER) COLLATE BINARY), ((((~ (vt0.c0))))>=((vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c0)) NOT NULL) FROM vt0 WHERE (CAST(CAST(0.6242994197479665 AS BLOB) AS REAL)) GROUP BY ((vt0.c0) NOTNULL), (((x'4762')AND(vt0.c1)) IN ((vt0.c1 IN (vt0.c1)))), NULL; -- 0ms;
SELECT DISTINCT ((NULL)<=(CAST(vt0.c1 AS BLOB))) FROM vt0; -- 0ms;
SELECT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) FROM vt0 WHERE ((('' IN ()) IN ())); -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*), (NULL IN ()), (- (UNLIKELY(DISTINCT vt0.c1))) FROM vt0 WHERE ('0.08543857062320181'); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM vt0 WHERE (((((NULL)AND(0.2652951484176611)))OR(NULL)) COLLATE NOCASE) LIMIT 181590659 OFFSET -1174084166; -- 0ms;
SELECT ALL ((SUM(vt0.c0))&(COUNT(*))) FROM vt0 WHERE ((((((x''))<=((''))))/((NOT (0.5636566584638112))))) GROUP BY ((CAST(vt0.c0 AS NUMERIC))||(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))), ((((vt0.c1) NOT NULL)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (CAST(0.27784511019653 AS TEXT))), vt0.c0 HAVING TOTAL(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))); -- 0ms;
SELECT DISTINCT SUM(CAST(vt0.c0 AS INTEGER)) FILTER(WHERE (((vt0.c1)) BETWEEN ((((vt0.c1) NOT NULL))) AND ((((x'') IS TRUE))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST((+ (vt0.c1)) AS INTEGER), ((vt0.c1)LIKE(TRIM(DISTINCT vt0.c0))), MIN(TRIM(0.2819115549529989)) FROM vt0 WHERE (UNLIKELY(CAST('1881664651' AS INTEGER))); -- 0ms;
SELECT ALL CASE vt0.c0 COLLATE NOCASE  WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1)+(vt0.c0)) END FROM vt0; -- 0ms;
SELECT ((((vt0.c1)+(vt0.c1))) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT (+ ((~ (vt0.c1)))), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE RTRIM, CASE ((vt0.c0)GLOB(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN TOTAL(vt0.c1) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN '965302727' WHEN CAST(vt0.c0 AS NUMERIC) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) ELSE ((vt0.c0)%(0.12684613171044679)) END FROM vt0 WHERE ((((((('-2045901526')OR(0x6b49226f)))AND(0.8025709520178088))) NOTNULL)); -- 0ms;
SELECT DISTINCT ('-1097113877' IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0 WHERE (CAST(CASE WHEN NULL THEN 0.02751953520946504 END AS INTEGER)); -- 1ms;
SELECT DISTINCT AVG(CAST(vt0.c1 AS REAL)), LOWER(MIN(x'')), ((((((vt0.c0)!=(vt0.c0)))AND(NULL)))OR((((vt0.c1))<=((vt0.c0))))) FROM vt0 WHERE (CAST(((('-1379680046'))==((905558584))) AS BLOB)); -- 0ms;
SELECT ((((NULL)<=(vt0.c1))) NOT BETWEEN (0.27201052308358153) AND (((vt0.c1)=(vt0.c0)))), ((AVG(vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (6.7871242E7)), (((vt0.c1) BETWEEN (NULL) AND (vt0.c1)) IN ()), (((((vt0.c1, vt0.c0, 'jgꀴdB29')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, 0xffffffff8ed19bd2, vt0.c1))))>=('2056455273')), LEAD(((vt0.c0 COLLATE RTRIM) BETWEEN ((~ (x'8a53'))) AND ((~ (vt0.c1)))), CASE WHEN NULL THEN '%BVZꖩ' ELSE (((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) END, (((((((((((((vt0.c0 IN ()))OR(vt0.c1 COLLATE NOCASE)))OR(CAST(vt0.c1 AS BLOB))))AND(((((0.06626174823608677)OR(vt0.c0)))OR(vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)))AND((((vt0.c0))>=((vt0.c0))))))AND((~ (vt0.c0))))) OVER () FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0))))<>(CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (json_insert((('357051583') BETWEEN (NULL) AND ('''{')), x'' COLLATE BINARY, (NOT (1.750469502E9))));SELECT ((((vt0.c0) NOT NULL)) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT (- ((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0))))) FROM vt0 ORDER BY ((((vt0.c0) ISNULL))|((- (vt0.c0))))  NULLS LAST LIMIT 372937343 OFFSET 1657310582; -- 0ms;
SELECT DISTINCT (((+ (vt0.c1))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c1) BETWEEN ('393285463') AND (vt0.c1)))) FROM vt0 GROUP BY (x'' IN (vt0.c0, vt0.c1)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT NTH_VALUE(1.800765683E9, CASE WHEN ((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN vt0.c1 THEN 0.09595369489971906 WHEN ((vt0.c1) IS FALSE) THEN vt0.c1 COLLATE RTRIM ELSE (vt0.c1 IN ()) END) OVER () FROM vt0;SELECT DISTINCT COUNT(*) OVER () FROM vt0 LIMIT -254525676 OFFSET 1928933855; -- 0ms;
SELECT (- (((vt0.c1)<=(-1456064955)))), 'r', NTILE((((vt0.c1))<(((vt0.c1 IN (vt0.c0, vt0.c0)))))) OVER (), (((((((x'4869'))<=((vt0.c1))))OR((((NULL))>=((vt0.c1))))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), '1581334860' FROM vt0 WHERE ((0.783113421476132 IN ()) COLLATE BINARY); -- 0ms;
SELECT ALL LAST_VALUE(CASE WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN 0xffffffff90db4411 WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) OVER () FROM vt0; -- 0ms;
SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(((vt0.c1)<=(vt0.c0)))))OR(vt0.c0)), LIKELY(DISTINCT (~ (vt0.c1))), ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (CAST(vt0.c1 AS REAL)) AND (NULL)) FROM vt0 WHERE ((((((~ (NULL)))OR(((NULL) NOTNULL))))AND(((((NULL)AND(NULL)))AND(x''))))); -- 0ms;
SELECT (('ntE9罛&\r')>>(vt0.c0)) FROM vt0 WHERE (((((((-1.016688619E9)OR(x'')))AND('1526473435')))=((((('')AND('492159034')))OR(NULL))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)-((+ (4.50254794E8)))) FROM vt0 WHERE ((CAST(x'' AS REAL) IN ())); -- 0ms;
SELECT ALL '-746185381' FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((0X3e5c5638 COLLATE BINARY)) AND ((CASE '1107942409'  WHEN '0.08543857062320181' THEN x'3695' END)))) GROUP BY CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN vt0.c1 COLLATE RTRIM END, HEX(DISTINCT ((vt0.c0) IS FALSE)), '>)p/' HAVING -1395649990; -- 1ms;
SELECT DISTINCT (((((('-1174084166')-(vt0.c0)))OR(UNLIKELY(DISTINCT vt0.c0))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))) FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) ASC; -- 0ms;
SELECT ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c1)|(vt0.c0)) END FROM vt0 WHERE (((((((NULL)) NOT BETWEEN (('^D')) AND ((-1110108746))), (~ (x'8099')), (~ (NULL))))<(((NULL IN ()), (((0.8025709520178088)) BETWEEN ((-2.54525676E8)) AND ((NULL))), CASE '305952379'  WHEN 0.4117183952258031 THEN NULL WHEN '0.22378928284406097' THEN -1.4326044E9 WHEN '' THEN x'4dda' END)))); -- 0ms;
SELECT DISTINCT ((vt0.c0 IN (0.6129597346348107)) IN ()), (- (((0.3035116443538711) NOT NULL))), (((vt0.c0)=('u')) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c0))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((x'8675')) NOT BETWEEN (((((('-2085282215')AND(NULL)))AND(NULL)))) AND (((((NULL))<>((x''))))))); -- 0ms;
SELECT ALL (NOT (((vt0.c0)>>(vt0.c1)))), vt0.c1 COLLATE NOCASE, (((((vt0.c0)*(vt0.c0))))>((((vt0.c1) ISNULL)))) FROM vt0 WHERE ((((((NULL))<((0.329786014141388)))) NOT NULL)); -- 0ms;
SELECT DISTINCT '' FROM vt0 WHERE (((((('450254794')|(NULL)), (('-1964653668') BETWEEN (-1.174084166E9) AND (NULL)), ((((x'')AND('a<')))AND(NULL))))!=((CASE WHEN '0.3136967842709596' THEN NULL ELSE '1409790485' END, (((0.7083391090557055))<(('-772168279'))), x'' COLLATE NOCASE)))) LIMIT -1753940751 OFFSET -1635482713; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((vt0.c0) IS TRUE)), SUM((vt0.c0 IN (vt0.c1, vt0.c1))), (((vt0.c1 IN ()))GLOB(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)), CASE (vt0.c1 IN (vt0.c1))  WHEN vt0.c0 THEN ((vt0.c1)+(vt0.c1)) END, ((((((((AVG(vt0.c0))AND((vt0.c1 IN (vt0.c1)))))OR(((vt0.c0)AND(vt0.c1)))))OR((vt0.c1 IN ()))))AND(((((x'')OR(vt0.c0)))AND(NULL)))) FROM vt0 WHERE (CAST(CAST(0.30439227681935677 AS REAL) AS REAL)); -- 1ms;
SELECT x'' FROM vt0 ORDER BY ((((INSTR(vt0.c1, vt0.c0))AND(NULL)))OR(x'')) ASC  NULLS LAST LIMIT -858730880 OFFSET 318304402; -- 0ms;
SELECT ALL CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) AS INTEGER) FROM vt0 LIMIT -2055608638 OFFSET 78462006; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN '2058517140' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)||(CAST(vt0.c0 AS REAL))) FROM vt0; -- 0ms;
SELECT 0.8025709520178088, CAST(vt0.c0 AS BLOB), LIKELIHOOD(vt0.c0, 0.8045249150554289) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1) IS TRUE)) IS TRUE) FROM vt0 WHERE (((((((x'')AND(NULL)))OR(0x590783be)))=(ABS(DISTINCT '1734589725')))); -- 0ms;
SELECT DISTINCT ((NULL)+(vt0.c1)) FROM vt0; -- 0ms;
SELECT (((vt0.c0 IN (vt0.c0)))AND(vt0.c1 COLLATE BINARY)) FROM vt0 GROUP BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)<<(vt0.c0)))AND((~ (0.8945361357586368)))))OR(((vt0.c0)LIKE('1903430717')))) FROM vt0 GROUP BY ((vt0.c1 IN ()) IN ()); -- 0ms;
SELECT ALL TRIM(x'', (((vt0.c1))>((vt0.c1)))), COUNT(*) OVER (), ((((((vt0.c1))==((NULL)))))>=((((vt0.c0)OR(vt0.c1))))) FROM vt0 GROUP BY ((vt0.c1 COLLATE RTRIM)=(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c1) ISNULL)) AND (SUM(vt0.c0))) FROM vt0 WHERE (CASE WHEN (((x'')) NOT BETWEEN ((-8.15836387E8)) AND ((''))) THEN (((x''))>=((NULL))) ELSE ((((0.7457602448947718)OR('269207064')))OR(NULL)) END); -- 0ms;
SELECT ALL 0.878318347757802 FROM vt0 WHERE (((((-1.379680046E9)>=(0X3bae4f40)))OR((0.31776013164077743 IN ())))) LIMIT 1111211091; -- 0ms;
SELECT DISTINCT CAST(((vt0.c1) IS TRUE) AS INTEGER), ((HEX(vt0.c0))||(((vt0.c0)<('{C')))), AVG((vt0.c0 IN ())) OVER () FROM vt0; -- 0ms;
SELECT CAST((- (vt0.c0)) AS INTEGER), CAST(vt0.c1 AS INTEGER) COLLATE NOCASE, ((CAST(vt0.c0 AS TEXT)) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT (((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((((vt0.c0)OR('-1174084166')))AND(vt0.c1))) AND (((vt0.c1)/(vt0.c1)))), (COUNT(vt0.c0) IN ()), ((((NULL)*(vt0.c0))) BETWEEN ((NOT (vt0.c1))) AND (((vt0.c0)GLOB(vt0.c1)))) FROM vt0; -- 1ms;
SELECT ((((vt0.c0)LIKE(vt0.c0)))>(((vt0.c0)+(vt0.c1)))) FROM vt0 WHERE ((NOT (('AQYaEO0F' IN (x''))))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c1 AS TEXT) THEN MIN(vt0.c1) END, (- (0.17064227558230538)), ((vt0.c1)||((vt0.c0 IN (vt0.c0)))) FROM vt0 WHERE (((((x'') BETWEEN (x'') AND (0.587564859566039))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (vt0.c0) AND (((1941037638)*(vt0.c1)))), (('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, json_object(vt0.c0 COLLATE NOCASE, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0)))) FROM vt0;SELECT COUNT(*) OVER (), (1.918839162E9 IN ()), CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE FROM vt0 WHERE (((((('-2091073349') NOT BETWEEN (x'') AND (0xffffffffe118867b))))<>((-334988655 COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)<>(vt0.c0)))+(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (((((('0.19123311980048674'))!=(('1903430717')))) BETWEEN (NULL) AND (((((((((x'21b3')AND(0.49982882412418084)))AND(0.47963655468015365)))OR('-1926398184')))OR('454056857'))))); -- 0ms;
SELECT DISTINCT '0.3924326899562848' FROM vt0 ORDER BY (('2064305242') BETWEEN ((+ (vt0.c1))) AND ((((vt0.c0))<>((vt0.c1)))))  NULLS LAST; -- 0ms;
SELECT ALL (('-0.0')>>(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)), CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 0.18363577943612097 WHEN vt0.c1 THEN vt0.c1 END  WHEN (NOT (vt0.c1)) THEN (+ (vt0.c0)) END, (((vt0.c1)LIKE(vt0.c1)) IN ()) FROM vt0 WHERE ((((('1812926968') IS FALSE)) NOT BETWEEN ((+ (NULL))) AND (TRIM(DISTINCT x'26e7', '')))); -- 1ms;
SELECT DISTINCT CASE vt0.c1 COLLATE BINARY  WHEN MAX(-2.54525676E8) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN MIN(vt0.c1) WHEN (vt0.c1 IN ()) THEN (((vt0.c1))=((vt0.c0))) END FROM vt0; -- 0ms;
SELECT vt0.c0, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)*(vt0.c0 COLLATE NOCASE)), COUNT(CAST(vt0.c0 AS REAL)) FROM vt0 WHERE (DATE(CASE WHEN NULL THEN 4.54056857E8 WHEN x'0fd0' THEN '' WHEN '-2025633931' THEN '' ELSE 0.6595888428808582 END, (('')IS NOT(NULL)), CAST(116818519 AS NUMERIC))) LIMIT 1194907908 OFFSET 1107942409; -- 0ms;
SELECT ALL (((vt0.c1) IS TRUE) IN ((((vt0.c1))>((vt0.c0))))) FROM vt0 WHERE (((((NULL)LIKE(x'')))=('%T'))) GROUP BY ((1119278089) BETWEEN (ABS(vt0.c1)) AND (CAST(vt0.c0 AS BLOB))); -- 0ms;
SELECT ALL (NOT (MIN(vt0.c1))), CAST(((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR('x{r??')))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) AS REAL), CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))) AS NUMERIC) FROM vt0 WHERE (((((((x'643d')||(0.015206682141331362)))AND(NULL)))AND((('-760688387')!=(0.6898871872990158))))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)  NULLS FIRST; -- 0ms;
SELECT ALL json_array(vt0.c0, vt0.c1) COLLATE RTRIM COLLATE BINARY FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CAST(x'' AS REAL)) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST;SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1) IS FALSE) WHEN NULL THEN (~ (vt0.c1)) WHEN '-1369724048' THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN (vt0.c1 IN ()) THEN GROUP_CONCAT(vt0.c0) END FROM vt0; -- 0ms;
SELECT DISTINCT (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN '(H' THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt0 WHERE (CASE WHEN x'e3ed' THEN 0.9965032741360084 WHEN NULL THEN 0.5537793474874936 WHEN 'W^Bvk' THEN x'd48e' ELSE '1992215939' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c1 AS REAL) AS INTEGER) FROM vt0 UNION SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (((NOT (vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE RTRIM)), (((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), load_extension(vt0.c0, vt0.c0), ((vt0.c0) NOT NULL), (vt0.c1 IN ()), TOTAL_CHANGES())) AND ((CAST(vt0.c1 AS BLOB), CAST(vt0.c0 AS INTEGER), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c1)%(vt0.c0)), -1153082656))), COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT ((x'') NOT BETWEEN (0xffffffff811fc346) AND (1071607441)), ((x'') NOTNULL))); -- 0ms;
SELECT ALL 0.23424381456217747 FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(x'')))AND(x'0e7a')), ((CAST(vt0.c0 AS REAL))=(((vt0.c0) ISNULL))), (~ (vt0.c0)) COLLATE BINARY FROM vt0 LIMIT -608470782 OFFSET -1097113877; -- 0ms;
SELECT ALL LEAD('-88182588', (((((vt0.c0))<((vt0.c1)))) IS TRUE), ((vt0.c1) NOTNULL) COLLATE RTRIM) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT ((vt0.c1 COLLATE NOCASE) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)|(((((vt0.c0)OR(NULL)))AND(vt0.c1)))) FROM vt0 WHERE (CHANGES()) ORDER BY ((PRINTF(vt0.c1))<=(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY) NOT BETWEEN (SUM(vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), (~ (COALESCE(vt0.c1, vt0.c0, vt0.c0, vt0.c0))), CAST(LIKE(vt0.c1, vt0.c1, '1') AS NUMERIC) FROM vt0 LIMIT 305921800; -- 0ms;
SELECT ALL (LTRIM(vt0.c0) IN (CAST('454056857' AS INTEGER))) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(924392470), SQLITE_VERSION(), GROUP_CONCAT(((vt0.c1)/(vt0.c0))) FROM vt0 WHERE (((('886796143') ISNULL) IN ((('284396261') NOT BETWEEN (x'e7b1') AND (NULL))))); -- 0ms;
SELECT NTH_VALUE(vt0.c1, vt0.c1) OVER () FROM vt0;SELECT DISTINCT '40o0vꡮ%', '947547383', (((vt0.c0 IN (vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(NULL))) AND ((((vt0.c1))<>((vt0.c1))))) FROM vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c1 AS TEXT) IN ()) FROM vt0 WHERE ((((NULL) IS FALSE) IN ())); -- 1ms;
SELECT DISTINCT (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN x'' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ((~ (vt0.c0)))), ((((vt0.c1)*(vt0.c0)))=((((vt0.c0, vt0.c1, vt0.c1))>=((0.38693099799721453, vt0.c1, vt0.c1))))), ((((IFNULL(DISTINCT vt0.c1, vt0.c0))OR(vt0.c1)))AND(vt0.c0 COLLATE RTRIM)), SUM(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))), CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '4a' ELSE vt0.c1 END AS INTEGER) FROM vt0 WHERE ((((((((((4.60823944E8)OR(NULL)))OR(0.9932051292498462)))OR('')))AND(-991207860)) IN ((NULL IN ())))); -- 0ms;
SELECT RANK() OVER () FROM vt0 WHERE (CAST(((0.7881623748666005) NOTNULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((MAX(vt0.c1)) ISNULL) FROM vt0 GROUP BY (((NOT (vt0.c1))) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c1)>(vt0.c1)))); -- 0ms;
SELECT ((vt0.c0)>=('sH')) COLLATE RTRIM, ((((vt0.c1)&(vt0.c0))) ISNULL), ((((vt0.c0) IS TRUE))%(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS BLOB)) BETWEEN (((NULL)||(vt0.c1))) AND ((NOT (vt0.c1)))) FROM vt0; -- 1ms;
SELECT DISTINCT (((vt0.c1) IS FALSE) IN ()) FROM vt0 ORDER BY (- ((((vt0.c1, vt0.c1, '963827237')) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))) ASC, (NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT COALESCE(((vt0.c1) IS FALSE), x'') FROM vt0 ORDER BY 0xffffffff9d47f632 ASC, ((TOTAL_CHANGES())<(vt0.c1 COLLATE BINARY)) DESC; -- 0ms;
SELECT ALL ((((((vt0.c0) NOT NULL))AND(TOTAL(vt0.c0))))AND(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((COUNT(*)))) FROM vt0; -- 0ms;
SELECT ALL TRIM(DISTINCT (vt0.c1 IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<=((((vt0.c0) IS FALSE)))) FROM vt0; -- 0ms;
SELECT DISTINCT AVG(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1))) OVER (), (NOT (((vt0.c0)AND(vt0.c0)))), ((((CASE vt0.c1  WHEN vt0.c1 THEN 0.15499984650759613 WHEN vt0.c1 THEN vt0.c1 WHEN 0Xfffffffffdc3c182 THEN vt0.c0 END)OR(((vt0.c1)+(vt0.c1)))))OR(vt0.c0 COLLATE RTRIM)), ((((vt0.c1 COLLATE NOCASE)AND(((vt0.c0)<(vt0.c0)))))AND(vt0.c1)), ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)AND(vt0.c1 COLLATE NOCASE)))OR(GROUP_CONCAT(vt0.c1))) FROM vt0 WHERE (((454056857 IN ()) IN ())); -- 0ms;
SELECT DISTINCT CASE ')VcI䊒G)v(' COLLATE BINARY  WHEN (+ (vt0.c0)) THEN (- (vt0.c0)) WHEN NULL THEN (((vt0.c0))<=((vt0.c1))) WHEN '1750469502' COLLATE RTRIM THEN LAST_INSERT_ROWID() ELSE (~ (vt0.c1)) END, '-1044264747', ((vt0.c1 COLLATE NOCASE) BETWEEN (SUM('ퟔ7')) AND (INSTR(vt0.c0, vt0.c1))) FROM vt0 WHERE ((- ((4.50254794E8 IN (x'', ''))))) LIMIT 1189133066; -- 0ms;
SELECT (GROUP_CONCAT(vt0.c0) IN (vt0.c0)) FROM vt0 WHERE ((x'' IN ('')) COLLATE BINARY); -- 0ms;
SELECT ALL (('2017843195') NOT NULL) FROM vt0; -- 0ms;
SELECT (vt0.c1 IN (vt0.c1 COLLATE RTRIM, TOTAL(NULL))), (((vt0.c0 COLLATE RTRIM))<=(((vt0.c1 IN (vt0.c0, vt0.c1))))), CAST(vt0.c1 COLLATE BINARY AS NUMERIC) FROM vt0 WHERE (((((0.9706222445969316) IS TRUE))<>('[V' COLLATE NOCASE))); -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM) NOTNULL) FROM vt0 WHERE (CASE (((('-7')AND(-2034284496)))OR(x''))  WHEN ((((((((x'')OR(NULL)))OR(NULL)))OR(0.06876590785871095)))AND(NULL)) THEN '116818519' END); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) AND (COUNT(vt0.c1))) FROM vt0 GROUP BY 0.8986545899372559; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT (SUM(NULL) IN ()) FROM vt0; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0; -- 1ms;
SELECT ALL CAST(((vt0.c1) IS TRUE) AS INTEGER) FROM vt0; -- 0ms;
SELECT ALL 0.5796525825050287, ((vt0.c0)OR(GROUP_CONCAT(vt0.c1))), (((vt0.c0)) BETWEEN ((x'')) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))))) FROM vt0 LIMIT -916410572 OFFSET 1791656540; -- 0ms;
SELECT ALL NULL, CHAR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)||(vt0.c0)), ((vt0.c1) NOTNULL)), AVG(vt0.c1) FROM vt0 ORDER BY SQLITE_SOURCE_ID() COLLATE BINARY  NULLS LAST, ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND(((((((((0.6841977422516458)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0.8949640445267908 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE NULL END)); -- 0ms;
SELECT GROUP_CONCAT((vt0.c0 IN ())) FROM vt0 WHERE (CAST((('jG')/(277394912)) AS BLOB)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c0)), ((((('e(ZA.)Kb', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, ',q', vt0.c1)))) BETWEEN (']') AND (TYPEOF(x''))), GROUP_CONCAT(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) FROM vt0 WHERE (CASE SQLITE_COMPILEOPTION_GET('200353515')  WHEN (('1072536616') BETWEEN (NULL) AND (-5.60282498E8)) THEN ((x'6d38') BETWEEN (0.014108142491892739) AND (-288626461)) END) ORDER BY (+ (((vt0.c1)*(vt0.c1))))  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM FROM vt0 WHERE (IFNULL((NULL IN (0.09443743823667505)), ((((x'')OR(783197424)))OR(NULL)))); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((CAST(x'1c6e' AS INTEGER) IN (json_array(x'af25', '-828336543'), x'' COLLATE BINARY)));SELECT ALL ROW_NUMBER() OVER (), CAST(NULL AS INTEGER), (NOT ((vt0.c0 IN ()))), (((vt0.c0 IN (vt0.c0)))+(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))), ((ROUND(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE WHEN 0xffffffff9e8a29d2 THEN vt0.c1 ELSE vt0.c1 END)) FROM vt0; -- 0ms;
SELECT ((((vt0.c1) BETWEEN (x'') AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c1)>=(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((vt0.c0 COLLATE BINARY))), LEAD(CAST(((vt0.c0)<(vt0.c0)) AS INTEGER), ((vt0.c0)>=((vt0.c1 IN (vt0.c1)))), (((((vt0.c0)|(NULL))))!=(((+ (vt0.c0)))))) OVER ( ORDER BY (IFNULL(DISTINCT vt0.c1, vt0.c1) IN (((vt0.c1)!=(vt0.c1)))), 2065562445), AVG((vt0.c0 IN ()) COLLATE RTRIM) OVER () FROM vt0; -- 1ms;
SELECT ALL (((((('648704810')AND(vt0.c0)))AND(vt0.c1)))-((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) FROM vt0 WHERE ((((((((x'b417')AND(NULL)))OR('1233212867')), ('RO칊L鱩冹4' IN ()), (((x'3adf')) NOT BETWEEN ((NULL)) AND (('-588512808')))))>=((x'' COLLATE RTRIM, '2017843195' COLLATE NOCASE, LOWER(NULL))))) ORDER BY json_object((x'' IN (vt0.c0, vt0.c0)), (((vt0.c0))>=((vt0.c1)))) ASC; -- 0ms;
SELECT DISTINCT GLOB((vt0.c0 IN ()), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END), ((x'')%(x'')), ((((((((CAST(vt0.c1 AS TEXT))AND(vt0.c0 COLLATE RTRIM)))OR(NULL)))AND(((vt0.c1)<<(vt0.c1)))))AND((- (vt0.c0)))), x'c880' COLLATE NOCASE, CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS REAL) FROM vt0 WHERE (((CAST(0.8714920970306269 AS TEXT)) IS TRUE)) LIMIT -524294628; -- 0ms;
SELECT DISTINCT SUM(vt0.c1) FROM vt0 GROUP BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (SQLITE_VERSION()) AND ((((vt0.c1, vt0.c1, vt0.c1))<>((0.6291187523279328, vt0.c1, vt0.c0))))) HAVING ((SUM(vt0.c0)) IS FALSE) ORDER BY ((COALESCE(vt0.c1, vt0.c1))<<(0x16a01e2)) DESC; -- 0ms;
SELECT CASE (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN vt0.c0 THEN COALESCE(NULL, vt0.c0) END FROM vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(LIKELY((vt0.c0 IN ())), ((CASE WHEN vt0.c0 THEN vt0.c1 END) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) AND (CASE WHEN vt0.c0 THEN NULL END))) OVER () FROM vt0;SELECT DISTINCT ((CASE WHEN vt0.c0 THEN NULL END)!=(json_remove(vt0.c1, vt0.c0))), CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB), ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))IS(((vt0.c0) IS FALSE))), CAST(((vt0.c1)-(NULL)) AS REAL), (((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))>(((vt0.c0 IN (vt0.c1))))) FROM vt0 WHERE ((x'45169814' IN (181590659, '604876787')) COLLATE BINARY); -- 0ms;
SELECT ALL json_array(vt0.c1, vt0.c1) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT MAX((~ (vt0.c0))) FROM vt0 GROUP BY ((x'')-(vt0.c1)), (((((vt0.c1)OR(vt0.c1)), COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0), load_extension(vt0.c1)))<>((((vt0.c1)>>(vt0.c0)), CAST(vt0.c0 AS TEXT), NULL))), ((((NULL) ISNULL))>(vt0.c0)) HAVING (+ ((+ (vt0.c1))));SELECT DISTINCT ((json_valid(vt0.c1)) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))) AND (CAST(vt0.c1 AS BLOB))) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT TRIM(CASE WHEN vt0.c0 THEN vt0.c1 END) FROM vt0 WHERE (((MIN(x'', '-1586392415', x'', x'')) ISNULL)); -- 0ms;
SELECT DISTINCT ((((vt0.c1)||(vt0.c0)))LIKE(COUNT(*))) FROM vt0 WHERE (((((((x'')AND(NULL)))OR('-1456064955'))) BETWEEN (((x'') NOT BETWEEN (NULL) AND ('7'))) AND ((('')<<('-2045901526'))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('-0''eBc[[]R') NOT NULL))<<(CAST(352237970 AS TEXT)))); -- 1ms;
SELECT ALL ((((NULL)OR(vt0.c0)))AND(((vt0.c0)+(vt0.c0)))) FROM vt0; -- 1ms;
SELECT ALL ((((vt0.c1)|(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (x'')) FROM vt0; -- 0ms;
SELECT CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c1)) THEN vt0.c0 WHEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN SUM(vt0.c0) END FROM vt0; -- 0ms;
SELECT ((((((NULL) NOT BETWEEN (vt0.c1) AND (-904994572)))OR(json(vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) FROM vt0 WHERE (((((((((((((0.05911891871863284)AND('FALSE')))OR('-378681683')))OR(0x4ea94292)))AND(x'2c24')))AND(((((x'')AND('-1467748572')))OR('')))))AND(SQLITE_VERSION()))); -- 0ms;
SELECT ALL (((((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(MAX(vt0.c0))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))AND(UPPER(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM, SUM(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) FROM vt0; -- 0ms;
SELECT CAST(vt0.c0 COLLATE NOCASE AS REAL) FROM vt0 WHERE (((CASE WHEN -857478631 THEN 0xffffffffca0c99c4 ELSE x'' END) IS TRUE)) GROUP BY ((TRIM(DISTINCT vt0.c1, vt0.c1))>>(CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.8215999493176973 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) HAVING CAST(((vt0.c0) IS TRUE) AS BLOB); -- 0ms;
SELECT CAST(((vt0.c1)&(NULL)) AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c1)||(vt0.c1))), NULL, (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((COUNT(x'bcf4')))) FROM vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE WHEN 0.11498978114513148 THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 WHEN CAST(vt0.c0 AS REAL) THEN ((-2126725429) NOT BETWEEN (vt0.c0) AND ('u*')) ELSE CAST(vt0.c1 AS REAL) END) OVER (), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM, (NOT (CAST(vt0.c1 AS INTEGER))) FROM vt0 LIMIT 1829290814 OFFSET -254525676; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE)) NOT BETWEEN (0.5838671819616496) AND (vt0.c0 COLLATE NOCASE)), ((MIN(vt0.c1)) BETWEEN ((((vt0.c0, '-1082697186', vt0.c0, vt0.c1, NULL, vt0.c1, vt0.c0))!=((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1)))) AND (SUM(vt0.c0))), (x'' IN ()) COLLATE BINARY FROM vt0 WHERE (((SUBSTR(1.538947627E9, NULL)) NOT BETWEEN ((NOT (''))) AND ((('')==('-1159869482'))))) UNION SELECT ALL ((TOTAL(vt0.c0))>=(COUNT(vt0.c1))), COALESCE(IFNULL(DISTINCT vt0.c1, vt0.c0), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))), SUM(CAST(vt0.c0 AS INTEGER)) FROM vt0; -- 0ms;
SELECT DISTINCT ((('1722252528'))>=((''))) FROM vt0 WHERE (((HEX(x'')) NOTNULL)) ORDER BY LOWER(CASE vt0.c1  WHEN 'bd5+wKnJ' THEN vt0.c1 END) DESC  NULLS LAST; -- 0ms;
SELECT PERCENT_RANK() OVER ( GROUPS  CURRENT ROW) FROM vt0 WHERE ((+ (((((NULL)AND(-2037664689)))OR('227688481'))))); -- 0ms;
SELECT ALL ((vt0.c0)IS(vt0.c0)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL 0.8949640445267908 FROM vt0; -- 0ms;
SELECT DISTINCT (LTRIM(vt0.c0) IN ()), CAST((((vt0.c1))=((vt0.c0))) AS TEXT), (vt0.c0 COLLATE BINARY IN ()), ((x'') ISNULL), LEAD(((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN (UNICODE(vt0.c1))), (((~ (vt0.c1))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0)), ((json_type(vt0.c1))>=(vt0.c0 COLLATE NOCASE))) OVER (), vt0.c1, (((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(NULL)))AND(CAST(0x14feb992 AS REAL))))AND(CASE 'J5h'  WHEN 'wOo#剾*TY' THEN vt0.c1 ELSE vt0.c1 END)))OR(0x2c602041)) FROM vt0 WHERE ((CAST(0Xfffffffff1c549b4 AS BLOB) IN (DATETIME(NULL, x'aaca', '-518486405', 0x7a930469, 0.027414415280178628), 1.02105E9 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((COUNT(vt0.c0))OR(LIKELY(vt0.c1))))AND((((vt0.c0))!=((vt0.c0))))) FROM vt0 WHERE ((((x'' IN ('0.5335336407864548')))<<((- (8.94702582E8))))); -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) OVER () FROM vt0 WHERE (x'7f17'); -- 0ms;
SELECT TOTAL((vt0.c1 IN ())) FROM vt0 WHERE ((~ (CASE WHEN x'' THEN '-1057254637' ELSE '1823760511' END))) LIMIT 771195561 OFFSET -243634168; -- 0ms;
SELECT ((CAST(vt0.c0 AS TEXT))/(((vt0.c0)-(vt0.c1)))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) NOTNULL) COLLATE BINARY FROM vt0 WHERE ((((((x'')<=(0.16117175490279134)), (((0.4726874494158757)) NOT BETWEEN (('170158326')) AND ((''))), CASE 0.17670624505781918  WHEN '' THEN '632823190' WHEN x'' THEN x'' WHEN '-993337433' THEN x'' END, ((('3x')) BETWEEN ((NULL)) AND ((0.16968138786314535))), CAST(NULL AS TEXT)))<=(((- (NULL)), MAX('W', '', x'593898b4', '魛', 'B9Hw*i#1E', x'1b40'), QUOTE(x''), ((x'c70f')*('2017898925')), CASE WHEN NULL THEN NULL ELSE x'' END)))) GROUP BY ((json_array_length(x'1edf', vt0.c1)) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN '' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND (((vt0.c0) IS TRUE))); -- 0ms;
SELECT DISTINCT CAST((- ('QR')) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT ((('cIZ~璯᛿', vt0.c0, vt0.c1)) BETWEEN ((((vt0.c0)<(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1)<=(x'')))) AND ((((vt0.c1)GLOB(vt0.c1)), CHANGES(), ((vt0.c0)/(NULL))))), CASE WHEN vt0.c1 THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')) THEN (+ (vt0.c0)) WHEN ((((((((vt0.c1)OR(vt0.c1)))OR('-1521597092')))AND(vt0.c1)))AND(vt0.c1)) THEN (~ (vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END, COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT ALL ((CAST(x'0f7e' AS INTEGER))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE (((vt0.c0))!=((vt0.c1)))  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 END FROM vt0 WHERE (0.3849862955455755); -- 0ms;
SELECT (((- (vt0.c0)))IS(((vt0.c1)<>(vt0.c1)))) FROM vt0 WHERE (CAST('' COLLATE BINARY AS REAL)) GROUP BY ((vt0.c1 COLLATE NOCASE) ISNULL); -- 0ms;
SELECT DISTINCT CAST(LTRIM(vt0.c1) AS BLOB) FROM vt0; -- 1ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c1)>=(vt0.c1))) AND (SUM(vt0.c1))), (((~ (vt0.c1)))=(((vt0.c0) NOTNULL))), json_insert((vt0.c0 IN (vt0.c1)), TOTAL(vt0.c0), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT UPPER(2108881312) FROM vt0; -- 0ms;
SELECT ALL NTH_VALUE((- (CAST(vt0.c0 AS REAL))), IFNULL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 'f<ut' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, TYPEOF(vt0.c1))) OVER () FROM vt0;SELECT TRIM(vt0.c0), ((MIN(vt0.c1)) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c0, vt0.c0, vt0.c0))<(('}', vt0.c1, vt0.c0))))), CAST(NULL AS REAL) FROM vt0; -- 0ms;
SELECT ALL (~ (((vt0.c0)==(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((LOWER(vt0.c0), ((((vt0.c0)AND(vt0.c0)))AND(-840000317)), CASE '-1379680046'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) AND ((((vt0.c0) IS TRUE), MIN(vt0.c1), CASE WHEN 2.056455273E9 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) FROM vt0; -- 0ms;
SELECT ALL COUNT(*), ((vt0.c0)GLOB(((((x'')AND(vt0.c0)))AND(vt0.c0)))), (- (((vt0.c1)IS NOT(vt0.c0)))) FROM vt0; -- 0ms;
SELECT COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM vt0 WHERE ('x,(0'); -- 0ms;
SELECT vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c1)||(vt0.c1)))AND(vt0.c1)))OR(((vt0.c1)-(vt0.c1)))))AND((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, x'')) AND ((vt0.c1, vt0.c0, vt0.c0))))))AND(((vt0.c1)|(vt0.c1)))), CASE WHEN ((vt0.c1)GLOB(vt0.c0)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS REAL) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN TYPEOF(0.43898816112776917) END, vt0.c0 FROM vt0 WHERE (((CASE 0.710769882819789  WHEN x'd095' THEN '-550071809' ELSE x'' END)||(CASE WHEN 2017843195 THEN NULL WHEN '/' THEN NULL WHEN 'a⥽*wK' THEN '7!' ELSE '170158326' END))) LIMIT 1173960943; -- 0ms;
SELECT DISTINCT (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c0)IS(vt0.c0)), (vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c1 END)) AND ((INSTR(x'', vt0.c0), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (vt0.c0 IN ())))), (((((vt0.c0))>((vt0.c0)))) NOTNULL), ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (NULLIF(DISTINCT vt0.c0, vt0.c1)) AND (CAST(vt0.c1 AS TEXT))) FROM vt0 LIMIT 24695710; -- 0ms;
SELECT ALL ((load_extension(vt0.c1, x'743d')) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), (((((vt0.c0))>=((vt0.c1)))) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ((+ (vt0.c0)))), ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM vt0;SELECT MIN(vt0.c0), TOTAL(CAST(vt0.c1 AS INTEGER) COLLATE NOCASE) OVER (), CASE CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((vt0.c0)/(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0, 1.7976931348623157E308, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c1 THEN 0.9340229591190674 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, vt0.c1 COLLATE NOCASE, CAST('-1456064955' AS TEXT))) AND ((COUNT(*), (vt0.c1 IN (vt0.c0)), ((vt0.c0)OR(vt0.c0))))) FROM vt0 WHERE (((((('1493722327', '1119278089', '1629790428')) NOT BETWEEN (('䩥>i~Q', '', NULL)) AND ((0X32113640, '-743016959', '-2117874709')))) BETWEEN (0.6091666774668903 COLLATE RTRIM) AND (((('215966792'))>(('3LXR䄐')))))); -- 1ms;
SELECT DISTINCT ((((NOT (vt0.c1))))<((vt0.c0 COLLATE RTRIM))) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0)-(vt0.c1))) OVER (), vt0.c0, vt0.c0 FROM vt0 WHERE ((- (CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c1 THEN '-1379680046' ELSE vt0.c0 END IN ((- (vt0.c1)))) FROM vt0; -- 0ms;
SELECT ALL SQLITE_VERSION() FROM vt0 WHERE ((- ((((('1319715474')AND(x'')))AND(0.34547607945193914))))); -- 0ms;
SELECT (((- (vt0.c1))) ISNULL), (((vt0.c1 IN (vt0.c1))) NOTNULL), AVG(CAST(vt0.c0 AS TEXT)) FROM vt0 WHERE ((((((-1412202835, x'0c7c', 78259825, 0Xffffffffed360bb6, 0Xffffffff87f024f0)) NOT BETWEEN ((NULL, x'', '-820474398', -396376555, NULL)) AND ((0.008080656358334548, 'Ml%*2}\nᙼY', 0Xffffffff988b4647, 0.4868976076722491, '1319715474')))) BETWEEN ('a<') AND (CAST('魛' AS NUMERIC)))); -- 0ms;
SELECT ((COUNT(vt0.c0)) NOT BETWEEN ((- (x''))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0 WHERE ((NOT (''))) ORDER BY ((((vt0.c1)IS NOT(vt0.c0))) NOT BETWEEN (NULLIF(vt0.c1, vt0.c0)) AND (((vt0.c1)IS NOT(vt0.c0)))) ASC; -- 0ms;
SELECT ALL UPPER(vt0.c0 COLLATE BINARY) FROM vt0; -- 0ms;
SELECT CASE WHEN x'89cb' THEN ((vt0.c0)<>(vt0.c1)) WHEN (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN (NOT ('ntE9罛&\r')) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) ELSE COUNT(*) END FROM vt0 WHERE (CAST(((0.30707335725703844)GLOB('-1436248993')) AS REAL)); -- 0ms;
SELECT DISTINCT (('0|^''鑟imgj') BETWEEN (((vt0.c1)||(vt0.c1))) AND (((vt0.c0) BETWEEN ('v7쫷9') AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c1))) BETWEEN (LIKE(vt0.c1, vt0.c1, 's')) AND (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (CASE WHEN (0.1559634328982752 IN (x'')) THEN CASE WHEN 0.8520824525393667 THEN 0.8083809399816023 END ELSE (('0.468617660460397') NOT BETWEEN (-1.379680046E9) AND ('t1m.')) END) LIMIT 282235817 OFFSET 835250640; -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0)>('-1630459296'))) OVER () FROM vt0 WHERE (((CAST(NULL AS REAL)) NOT NULL)); -- 0ms;
SELECT '1371699684' FROM vt0 WHERE ((((0.3168465993341376 IN ())) BETWEEN (CASE x''  WHEN x'' THEN 0X1e21a66a ELSE x'' END) AND (x''))); -- 0ms;
SELECT AVG((NOT (vt0.c0))), (((NOT (vt0.c0))) NOTNULL), ((((vt0.c1)&(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT))OR(COUNT(*))), ((((COUNT(*))OR((vt0.c0 IN (vt0.c1, vt0.c1, vt0.c1)))))AND(((vt0.c0)%(vt0.c1)))), vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c1)))>=(((vt0.c0)==(vt0.c1)))) FROM vt0 WHERE ('78259825'); -- 0ms;
SELECT ((((vt0.c1)GLOB(vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT (((vt0.c1)) BETWEEN (((((vt0.c1))<>((vt0.c1))))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) FROM vt0 WHERE (CASE NULL  WHEN NULL THEN '' END COLLATE BINARY) ORDER BY (((vt0.c0 IN ())) BETWEEN (LIKE(vt0.c0, vt0.c0)) AND (((((vt0.c1)OR(vt0.c0)))AND('')))); -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE NOCASE)/((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((TYPEOF(DISTINCT vt0.c1))AND(((vt0.c1) ISNULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))), (((GROUP_CONCAT(vt0.c0), (NOT (vt0.c0)), TOTAL(vt0.c1)))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c1, (vt0.c1 IN ())))), (vt0.c1 COLLATE BINARY IN ((('') NOT BETWEEN ('200353515') AND (vt0.c1)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0 GROUP BY '(鰏?᥾1', CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN (~ (vt0.c0)) THEN ((vt0.c0)GLOB(x'')) ELSE COALESCE(vt0.c1, vt0.c0) END, ((((0.5603348544264305)<(vt0.c0))) NOT BETWEEN (((0.9098484727694599)OR(vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)); -- 1ms;
SELECT ((((vt0.c1)AND(vt0.c0)))|((vt0.c1 IN (vt0.c1)))) FROM vt0 WHERE (((('>\' IN ()))GLOB(((x'') NOT BETWEEN (x'') AND ('+z9&x'))))); -- 0ms;
SELECT (CAST(vt0.c1 AS REAL) IN ((vt0.c1 IN (vt0.c0)))) FROM vt0 WHERE ((((((x'26f1')) BETWEEN (('-1197144129')) AND (('129756732'))))*(x''))); -- 0ms;
SELECT SQLITE_SOURCE_ID() FROM vt0 WHERE (((((((((0.2287016747280881)AND('-1306722851')))OR(1032595408)))OR('-658013686')))AND(0xffffffff8911327c)) COLLATE BINARY); -- 0ms;
SELECT ALL CASE x''  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)*(vt0.c0)) ELSE MIN(vt0.c0) END FROM vt0 WHERE ((((((x'', 0x721c30b6, NULL))>((894702582, 'b1C', 'C''L)b.Gk䥿'))))IS NOT(((((((((NULL)AND('562883617')))AND(0x7ae4145b)))OR(NULL)))AND(0.9515013050888569))))); -- 0ms;
SELECT ((((vt0.c1) ISNULL)) IS FALSE), ((((vt0.c1)||(vt0.c0))) BETWEEN ('y&') AND ((- (vt0.c0)))), CAST(((vt0.c1)>=(vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((+ (-2012976912)) IN ())); -- 0ms;
SELECT DISTINCT ((((vt0.c1)>>(vt0.c0))) BETWEEN (((vt0.c0)>(vt0.c0))) AND (vt0.c1 COLLATE NOCASE)), 0.8192951712844047, ((((vt0.c1)-(vt0.c0))) IS FALSE) FROM vt0 WHERE ((((x''))>=((''))) COLLATE BINARY); -- 0ms;
SELECT vt0.c1, (NOT (CASE vt0.c0  WHEN vt0.c1 THEN '71P' END)), vt0.c1 FROM vt0 WHERE (CAST((x'' IN ()) AS BLOB)); -- 0ms;
SELECT CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) AS BLOB) FROM vt0; -- 1ms;
SELECT DISTINCT ((((((((((vt0.c0)&(vt0.c0)))OR(((vt0.c1)GLOB(NULL)))))AND(GROUP_CONCAT(vt0.c1))))OR(((vt0.c0) IS TRUE))))OR(NULL)) FROM vt0 WHERE (((NULL)AND('1646314052')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT TOTAL((((vt0.c0))=((vt0.c0)))) OVER (), vt0.c0, (((vt0.c1)) BETWEEN (((NOT (vt0.c1)))) AND ((json_array(vt0.c1, x'')))) FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END ELSE (((0.3345916336559014)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END FROM vt0 WHERE (((((-1.438302667E9)!=(-7.60688387E8)))<<(((NULL) IS FALSE)))) LIMIT 925784171 OFFSET -1044264747; -- 1ms;
SELECT DISTINCT CASE CAST(1.81590659E8 AS NUMERIC)  WHEN ((x'') NOTNULL) THEN (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) WHEN CAST(-820474398 AS NUMERIC) THEN ((vt0.c1)&(vt0.c0)) WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE 0x62647db END, ((json_array_length(vt0.c1, vt0.c1))||(TRIM(vt0.c0))), ((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0))) IN ()) FROM vt0 WHERE (((NULL)-(((((1.111211091E9)AND(0.3025148679586196)))AND(NULL))))); -- 0ms;
SELECT ALL ((TOTAL(vt0.c1))AND(LOWER(DISTINCT vt0.c0))), CAST(vt0.c1 COLLATE RTRIM AS NUMERIC), GROUP_CONCAT(NULL) OVER () FROM vt0; -- 0ms;
SELECT ALL (((~ (67871242))) BETWEEN (x'4be34a62') AND (CAST(vt0.c1 AS INTEGER))), vt0.c0, COUNT(0.03068041309441638 COLLATE RTRIM) OVER ( ROWS BETWEEN (((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, -424487634)))) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) AND (x'' COLLATE NOCASE)) FOLLOWING AND vt0.c1 PRECEDING) FROM vt0;SELECT DISTINCT (((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE NOCASE, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c1)<(vt0.c0)), vt0.c0 COLLATE NOCASE))==(((vt0.c1 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c1 AS REAL), (((vt0.c0))<=((vt0.c0))), vt0.c1))) FROM vt0 GROUP BY ((JULIANDAY(vt0.c1, 0x42b6d409, vt0.c0)) NOT NULL); -- 0ms;
SELECT DISTINCT ((((vt0.c0)|(vt0.c1))) NOT BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0 WHERE (x''); -- 1ms;
SELECT (((vt0.c1 IN (vt0.c1)))<=(vt0.c0)) FROM vt0; -- 0ms;
SELECT LAST_VALUE((((vt0.c0 COLLATE BINARY))>((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))) OVER () FROM vt0; -- 0ms;
SELECT ALL vt0.c0, SUM((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, x'', vt0.c1)) AND ((vt0.c0, vt0.c1, '-2013463051')))) OVER ( ROWS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (((- (vt0.c1)))) AND ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(((vt0.c1) ISNULL))), MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) FROM vt0 WHERE (json_insert(((0.8242827163419263)-('L&j+V9t')), ((NULL) BETWEEN (x'') AND ('0.8330753237780546')), ((NULL)GLOB(0.4053758037815287)), ((0x213143a9)GLOB(x'6d7d')), (+ (''))));SELECT ALL CASE WHEN ((vt0.c1)==(vt0.c0)) THEN (vt0.c1 IN ('-2124391003')) END FROM vt0 WHERE (266102885); -- 0ms;
SELECT DISTINCT ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c1))) IN ((vt0.c0 IN (vt0.c0, vt0.c0)))), ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))<=((NOT (vt0.c0)))), (('-2045901526')<=(MIN(2.84396261E8))) FROM vt0 WHERE (CAST(-760688387 AS NUMERIC)); -- 0ms;
SELECT ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0xfffffffffd8bc94d END)*('' COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT ALL CASE vt0.c0  WHEN ((vt0.c1)>=(vt0.c1)) THEN 0.9248253837658447 END FROM vt0 ORDER BY ((vt0.c1)&((NOT (vt0.c0)))) DESC, CAST((vt0.c1 IN ()) AS BLOB) DESC; -- 0ms;
SELECT ((CAST(vt0.c0 AS TEXT)) BETWEEN ((- (vt0.c1))) AND (((vt0.c1)/(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((x'', CAST(vt0.c1 AS NUMERIC), TIME(vt0.c0, vt0.c1, vt0.c1)))=((vt0.c1, (+ (vt0.c1)), ((vt0.c0)<=('1538947627'))))), ((TOTAL(vt0.c0)) BETWEEN (((vt0.c0)|(vt0.c1))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY FROM vt0 WHERE (((((+ ('1156073726')), (0.7216711032959287 IN ()), '1853427322'))>=(((- (NULL)), ((0.009848577626861532) IS TRUE), (- ('輛Oﳱ)')))))); -- 0ms;
SELECT DISTINCT ((((((((vt0.c1)AND(COALESCE(vt0.c1, vt0.c1, vt0.c1, vt0.c1))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c1 THEN 0.46763976760782044 ELSE vt0.c1 END)), ((((CAST(vt0.c0 AS INTEGER))OR(json_array(vt0.c0, vt0.c0))))OR(COUNT(vt0.c1))), vt0.c0 FROM vt0 WHERE (CAST(IFNULL('-1346112154', '0.3136967842709596') AS TEXT)); -- 0ms;
SELECT LIKELIHOOD(x'', 0.6132233261635874), CAST(x'' AS BLOB), (~ ((vt0.c0 IN ()))), NULL, ((vt0.c1) ISNULL) COLLATE NOCASE COLLATE BINARY FROM vt0 GROUP BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c0)>(vt0.c0)))); -- 1ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))) FROM vt0 WHERE (LTRIM(0Xffffffffa0930f0f) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((((('-698769257'))=((vt0.c0))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1)||(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL CASE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 'AF+G' ELSE vt0.c1 END  WHEN CAST(vt0.c1 AS TEXT) THEN (NOT (vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(COUNT(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((CAST(-2028412915 AS NUMERIC)) NOTNULL));SELECT ALL ((-560282498) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0 WHERE ((~ ((+ ('()'))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((('')GLOB('-2021471581')) COLLATE RTRIM) LIMIT -32842809 OFFSET 1135258396; -- 0ms;
SELECT ALL LIKELY(DISTINCT (vt0.c1 IN (vt0.c0))), FIRST_VALUE((((vt0.c1)) BETWEEN ((((vt0.c0)%(0.5961294662430001)))) AND ((((vt0.c0) NOTNULL))))) OVER (), ((((((vt0.c0)>(vt0.c0)))OR(CAST(vt0.c1 AS REAL))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)IS(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) ELSE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END, ROW_NUMBER() OVER (), json_remove(CAST(vt0.c0 AS NUMERIC), CAST(vt0.c1 AS TEXT), MIN(vt0.c0), vt0.c0 COLLATE BINARY), MIN((- (vt0.c0))), HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST, CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS NUMERIC) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((NULL) IS FALSE), NTH_VALUE((((((x'')OR(vt0.c1)))AND(vt0.c0)) IN (json_extract(vt0.c0, vt0.c1, vt0.c1, vt0.c0), (~ ('')))), ((((vt0.c0)+(vt0.c1))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (json_extract(vt0.c0, vt0.c1)))) OVER (), 0X5bc1f9fc, ((vt0.c1)>(vt0.c0)) COLLATE NOCASE, (((((vt0.c0)) NOT BETWEEN ((0X28bf868e)) AND ((vt0.c0))))<=(((vt0.c1)%(vt0.c1)))) FROM vt0;SELECT ((LIKELY(DISTINCT vt0.c1)) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c1)!=(vt0.c0)))), '恉nlC', (~ (vt0.c1)) COLLATE BINARY FROM vt0 WHERE (CASE WHEN (('1095191345')IS NOT(x'')) THEN ((((NULL)OR('-1374811698')))AND('')) ELSE ((NULL) NOT BETWEEN (0.6832186606729871) AND (0.5006933673577283)) END); -- 0ms;
SELECT MIN(vt0.c0 COLLATE RTRIM), (CAST(vt0.c0 AS INTEGER) IN (-1812645839)), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN ((((vt0.c0, vt0.c1, vt0.c1, vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1)))) AND ((-1.174084166E9 IN (vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((- (vt0.c1))))>=((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))) FROM vt0 LIMIT -59203422 OFFSET -1102856029; -- 0ms;
SELECT DISTINCT (((vt0.c1) NOT NULL) IN ((~ (vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((UPPER(DISTINCT vt0.c0))AND(json_valid(vt0.c0))))OR(vt0.c1 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)AND((NOT (vt0.c1)))) FROM vt0 WHERE ((((x'c8fb' IN (x'')))<<((('94670856')IS NOT(x'67ad'))))); -- 0ms;
SELECT DISTINCT (- ((vt0.c1 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c1 THEN COUNT(*) END FROM vt0; -- 0ms;
SELECT DISTINCT ((AVG(vt0.c0)) NOT NULL) FROM vt0 WHERE (COALESCE(LIKELY('1198164767'), ('-886181217' IN ()))) ORDER BY ((~ (x'22f5')) IN ()) ASC, IFNULL(CAST(vt0.c1 AS INTEGER), vt0.c0) ASC; -- 0ms;
SELECT ALL vt0.c0, ((vt0.c0) IS TRUE) COLLATE BINARY, x'9450' FROM vt0; -- 0ms;
SELECT ALL ((vt0.c1 COLLATE NOCASE)AND(CAST(vt0.c1 AS TEXT))) FROM vt0; -- 0ms;
SELECT ALL (+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))), ((vt0.c0)IS NOT(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)), x'b64a', CAST(vt0.c0 COLLATE NOCASE AS TEXT), (((vt0.c1)) NOT BETWEEN ((AVG(vt0.c1))) AND ((((vt0.c0)||(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT LEAD(x'be31', ((vt0.c1 COLLATE BINARY) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))+(((vt0.c0) ISNULL)))) OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW) FROM vt0 WHERE ((((-936646916)) BETWEEN ((CASE 1.136957816E9  WHEN NULL THEN 'At' ELSE x'' END)) AND (((('UP') NOT BETWEEN (NULL) AND (170158326)))))); -- 0ms;
SELECT CASE WHEN CAST(vt0.c1 AS BLOB) THEN (vt0.c0 IN (vt0.c0)) ELSE (vt0.c1 IN (vt0.c1, vt0.c0)) END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY, (((vt0.c0)) NOT BETWEEN (((((vt0.c0))>((vt0.c0))))) AND ((((vt0.c0)IS(vt0.c0))))) FROM vt0 WHERE (LTRIM((NULL IN ()), (- ('860191980')))); -- 0ms;
SELECT DISTINCT (+ ('AૢyH|z')) FROM vt0 WHERE (IFNULL(DISTINCT ((((((((x'')OR(0.08131059044679123)))OR(NULL)))OR(0.6133065596910345)))OR(x'4c64')), (- (0.9503858163992244)))); -- 0ms;
SELECT CUME_DIST() OVER (), vt0.c1, COUNT(NULL) FROM vt0 WHERE ((((CASE WHEN '-2085282215' THEN 0xffffffffd2a9de25 ELSE '-1369013845' END))=((((0.24231271869031668) NOT NULL))))); -- 0ms;
SELECT DISTINCT ((TYPEOF(vt0.c0)) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS BLOB))), ((((((((vt0.c1)AND(json_patch(vt0.c1, vt0.c0))))AND((+ (vt0.c0)))))OR((- (vt0.c1)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CASE WHEN (((vt0.c1))<((vt0.c1))) THEN CAST('' AS INTEGER) WHEN x'' THEN ((vt0.c1)||(vt0.c0)) WHEN ((vt0.c0)=(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB) FROM vt0 LIMIT -2002938948; -- 0ms;
SELECT ALL ((MIN(vt0.c0)) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (((1111211091)GLOB(vt0.c1)))) FROM vt0 LIMIT 215966792 OFFSET 200353515; -- 0ms;
SELECT ALL (((+ (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))), ((vt0.c1)==(NULL COLLATE BINARY)), (((vt0.c0)||(vt0.c1)) IN ()) FROM vt0 WHERE (((0.01973447889911295)/(((NULL) NOTNULL)))); -- 0ms;
SELECT ALL (((vt0.c0 COLLATE RTRIM))>((COUNT(*)))), ((((vt0.c0)<(vt0.c0))) IS FALSE), SQLITE_SOURCE_ID() FROM vt0 WHERE (((((NULL)<>(x''))) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) ISNULL) THEN ABS(DISTINCT vt0.c0) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (vt0.c0 IN ()) WHEN TOTAL(vt0.c0) THEN vt0.c1 END FROM vt0 GROUP BY (((+ (vt0.c0)))!=((0.0 IN (vt0.c0)))), (~ ((vt0.c1 IN (vt0.c0)))), ((CAST(vt0.c1 AS INTEGER))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)); -- 0ms;
SELECT ALL 0xffffffffb222046b FROM vt0 WHERE (CAST(((('-1731730770')) NOT BETWEEN ((-1.296708022E9)) AND ((-1197144129))) AS REAL)) ORDER BY CAST(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC) ASC  NULLS LAST; -- 1ms;
SELECT ALL UPPER((vt0.c0 IN ())) FROM vt0 WHERE ('-772168279'); -- 0ms;
SELECT ALL ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)) COLLATE RTRIM FROM vt0 WHERE (((NULL) IS TRUE)); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))), vt0.c1, ((((vt0.c0) IS FALSE)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c1, vt0.c1, vt0.c1))))) FROM vt0 WHERE (CASE (0.5203798527495138 IN ())  WHEN x'' THEN ((0.5683727426216914)/('393285463')) WHEN (NOT (NULL)) THEN (('')<('e?Np?K')) WHEN (+ (x'')) THEN (((NULL, x'', ''))>=(('[KtKw>i4', -2088964515, NULL))) END); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT (((GROUP_CONCAT(vt0.c1)))==(((((vt0.c1, vt0.c1, vt0.c0))>((vt0.c1, vt0.c0, vt0.c0)))))), (((((vt0.c0))>((vt0.c0))))<<(((vt0.c1)>=(vt0.c0)))), SUM(((vt0.c0) IS FALSE)) OVER (), ((((((vt0.c0)&(0.642411109787825)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)+(0.8949640445267908)))), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((COALESCE(vt0.c1, vt0.c0)))) FROM vt0 WHERE ((+ (('1371699684' IN ())))) GROUP BY (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN '1153830148' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c1 AS INTEGER), vt0.c1 COLLATE NOCASE))<=(((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))), ABS(vt0.c1), vt0.c0))) HAVING x''; -- 0ms;
SELECT ALL ((((vt0.c0) NOTNULL))||(((vt0.c0)LIKE(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, x'')))  WHEN CAST(x'' AS BLOB) THEN LOWER(vt0.c1) WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c1)OR(0X5459d6c)))OR(vt0.c0)) THEN MIN(vt0.c1) ELSE ((vt0.c1)<<(vt0.c0)) END, MAX(((vt0.c0) IS TRUE)) COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)-(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT)))) FROM vt0 WHERE (CAST(((0.8142724826472992)IS NOT('-1786765453')) AS REAL)); -- 1ms;
SELECT (vt0.c0 COLLATE RTRIM IN ()), ((((vt0.c0)+(vt0.c1))) BETWEEN (MIN(vt0.c0)) AND (TOTAL(vt0.c0))), (- (vt0.c0)) FROM vt0 WHERE (((x'ec7a4d98' COLLATE NOCASE) NOT NULL)); -- 0ms;
SELECT DISTINCT (AVG(vt0.c0) IN ()) FROM vt0 WHERE ((((('-1898254975')AND(0Xffffffffdeca582b))) NOTNULL)); -- 0ms;
SELECT NULL, vt0.c0, (NOT (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)) FROM vt0 WHERE ((NOT ((('')||(0.8845648082677122))))); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS) FROM vt0 GROUP BY (((((vt0.c0 IN ()))OR(((vt0.c0) ISNULL))))AND(vt0.c0 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT SUM(NULL) OVER () FROM vt0 WHERE (CASE (('')%(NULL))  WHEN TYPEOF(0.15171732779063796) THEN SUBSTR(1216414045, NULL) END); -- 0ms;
SELECT ALL vt0.c1 FROM vt0; -- 0ms;
SELECT ALL ((IFNULL(DISTINCT vt0.c1, vt0.c0))|(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (LOWER(vt0.c1))) FROM vt0 NOT INDEXED WHERE (CAST(((0.11961918658857096)LIKE(x'1277')) AS REAL)) LIMIT -1618751775; -- 1ms;
SELECT ALL (CASE WHEN vt0.c1 THEN vt0.c1 END IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT NULL, rtreenode(vt0.c1, vt0.c0)) FROM vt0 NOT INDEXED LIMIT 2060664322; -- 0ms;
SELECT DISTINCT CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c1)) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) ELSE ((vt0.c1)+('-407921256')) END FROM vt0 WHERE (((('')==(x'')) IN ())) ORDER BY ((((vt0.c0)>(1319715474)))IS((((vt0.c0, vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0))))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c1) IS TRUE) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) WHEN highlight(vt0.c1, vt0.c1, vt0.c0, 0.1568637615852455) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END FROM vt0 WHERE (((IFNULL('1021050000', NULL)) BETWEEN (((x'')OR('2056455273'))) AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT CAST((NULL IN ()) AS INTEGER), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOTNULL), x'45c8', ((vt0.c1)<=(vt0.c1)), ((vt0.c1)/(vt0.c0)), ((vt0.c1)/(vt0.c1)))) AND ((((vt0.c0)==(vt0.c1)), TOTAL(vt0.c0), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)), (vt0.c1 IN ()), (((vt0.c1))>((vt0.c1)))))), COUNT(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) FROM vt0 WHERE (CAST(x'' AS REAL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((vt0.c0)|(vt0.c0))) FROM vt0 WHERE ((~ (CASE WHEN 0.1979143581809082 THEN x'' ELSE 609782504 END))); -- 0ms;
SELECT DISTINCT '200353515' FROM vt0 WHERE ((('-1103365040' COLLATE RTRIM)IS('-317543184' COLLATE BINARY))) LIMIT -1574510913 OFFSET 295532536; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 GROUP BY INSTR(x'', (+ (1903430717))) LIMIT -1774177920; -- 1ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((vt0.c0))), (((NOT (vt0.c1)))<>(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)), (~ (CAST(vt0.c1 AS NUMERIC))) FROM vt0; -- 0ms;
