-- Time: 2024/06/07 13:37:56
-- Database: database91
-- Database version: 3.40.0
-- seed value: 3508479491
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 INTEGER ); -- 1ms;
UPDATE OR IGNORE rt1 SET c1='*s!*h)rm'; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR FAIL vt0 SET c0=-1170414984 WHERE vt0.c0; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.automatic_index; -- 1ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES ('*s!*h)rm', NULL); -- 0ms;
END; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c0) VALUES (NULL, '>', 0.9737414405610052); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.recursive_triggers = true; -- 0ms;
UPDATE OR REPLACE rt1 SET (c2)=(NULL) WHERE CAST(rt1.c0 COLLATE RTRIM AS INTEGER); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(-881514628) WHERE (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c1, c0, c2) VALUES (x'2c56', -8.81514628E8, '-1170414984', (((~ (0.694128390549437)))GLOB(CAST('' AS NUMERIC)))); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (-881514628, NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL, c3=-1170414984, c0=0.48636056011509476 WHERE (((rt1.c3)) BETWEEN ((((rt1.c2)/(rt1.c0)))) AND ((((rt1.c0)OR(rt1.c2))))); -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c2) VALUES ('-1170414984', x''); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ('-881514628'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c3)=(0.9737414405610052); -- 0ms;
INSERT OR REPLACE INTO rt1(c3, c1, c0, c2) VALUES (x'', '0.694128390549437', '\n)JU+A❼', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x'1721'); -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO rt1(c3, c0, c2) VALUES ('I8', '0.48636056011509476', ''), (x'', '-881514628', NULL), (0.3584375421224488, 0.48636056011509476, NULL); -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
UPDATE OR FAIL vt0 SET c0='-47677358', c0=NULL, c0=0.3584375421224488 WHERE CASE WHEN (+ (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE (+ (vt0.c1)) END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(0Xffffffffba3ce278, 0Xffffffffba3ce278, 'dMT'); -- 2ms;
INSERT OR IGNORE INTO rt1 VALUES (x'', NULL, '', '-557103183'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c3) VALUES (0.5949506894849398, '-1170414984', '-Infinity\r'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL, '-1170414984'), (1553822324, NULL), ('-478481422', '-478481422'); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c1)=(0.35637110341860756); -- 1ms;
UPDATE OR ABORT rt1 SET c2=0Xfffffffffd288052, c1='1515846198'; -- 0ms;
UPDATE rt1 SET c2=NULL, c1=NULL WHERE ((((rt1.c3)LIKE(rt1.c1))) NOT BETWEEN (((rt1.c2)<>(rt1.c0))) AND (rt1.c0)); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT OR ROLLBACK INTO rt1 VALUES ('(bG⪻h%L', 0.26320896350223166, NULL, '-557103183'), (x'', x'c044', '-557103183', '0.48636056011509476'), ('', 0.06736354205805639, 0x5c9d7274, 0.18819051318671243), ('ko', x'', NULL, 0.8275948477377187), (NULL, 0.5949506894849398, '%bua', 0.8061841013330161); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', '-1924253043'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 0ms;
INSERT OR ABORT INTO rt1(c0, c2, c3) VALUES (x'', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES ('', '0.694128390549437'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c2)=(x'406b') WHERE (((((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))OR(((rt1.c0)<(rt1.c2)))))AND(((rt1.c0) IS FALSE))); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
ANALYZE vt0; -- 1ms;
UPDATE rt1 SET c2='x]' WHERE ((rt1.c3 COLLATE BINARY) BETWEEN ((~ (rt1.c2))) AND (CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END)); -- 0ms;
UPDATE OR ABORT vt0 SET (c1)=(x''); -- 0ms;
SELECT rtreecheck('rt1'); -- 1ms;
UPDATE OR IGNORE vt0 SET c1='&D' WHERE (vt0.c0 IN ()); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('_'); -- 0ms;
INSERT OR FAIL INTO vt0(c0, c1) VALUES (x'', NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.6777677801688525); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR ROLLBACK t0 SET (c0, c0)=('-71153108', 1.515846198E9) WHERE (+ ((t0.c0 IN ()))); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.19532843577575087, c0=0.24402212998729345 WHERE LOWER((~ (vt0.c1))); -- 1ms;
UPDATE OR IGNORE t0 SET c0=x'79267482', c0='-47677358' WHERE t0.c0; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.stats; -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT ALL x'' FROM vt0, t0, rt1; -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c3, c2, c1) VALUES ('-1700056938', x'', x'', 0xffffffffc9d8599d); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(0.5949506894849398); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE t0 SET c0=x'260b' WHERE ((CAST(t0.c0 AS TEXT))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0) VALUES (x'', NULL); -- 0ms;
UPDATE vt0 SET (c1)=('-1700056938') WHERE ((((vt0.c0) NOTNULL))OR((vt0.c0 IN (vt0.c1)))); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c0)=(0xffffffff99e13529, 0.08016220561084486) WHERE (((rt1.c3 IN (rt1.c1, rt1.c0))) NOT BETWEEN (((((rt1.c2)AND(rt1.c0)))AND(rt1.c0))) AND (((rt1.c3) NOTNULL))); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.threads = 5584561556525205892; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-1751638063'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.busy_timeout = 0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('691316849', '1515846198'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2) VALUES (0.5949506894849398); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1204920345'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c3) VALUES (0x5b3484e5, '', 0.07223347090338128); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1) VALUES (0Xfffffffffbc24a2c, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3, c2)=('884047991', x''); -- 1ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=('0.19532843577575087') WHERE CASE ((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c2))  WHEN CAST(rt1.c1 AS TEXT) THEN x'be1e' COLLATE NOCASE END; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('-1713294039', NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0xffffffff84730970); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE ((t0.c0 COLLATE RTRIM) BETWEEN ((t0.c0 IN ())) AND ((~ (0.7520319245161333)))); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT GROUP_CONCAT((vt0.c1 IN (rt1.c1))) OVER (), ((vt0.c1)LIKE(rt1.c2)) COLLATE BINARY, (~ (NULL)), (+ (CAST(rt1.c2 AS INTEGER))), (((CAST(vt0.c1 AS INTEGER)))<=((((vt0.c1)>(v0.c0))))) FROM rt1, vt0 CROSS JOIN v0 ON CAST(HEX(DISTINCT vt0.c0) AS NUMERIC) LEFT OUTER JOIN t0 ON (vt0.c0 IN (CASE WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END, ((vt0.c1) IS FALSE))) WHERE (CASE (NULL IN ())  WHEN (((x'91c3'))<((0.04508274252501787))) THEN ((('-881514628')) NOT BETWEEN ((NULL)) AND ((0X7c7ae195))) ELSE ((2.088427925E9) NOT NULL) END); -- 0ms;
SELECT ALL ((((((vt0.c1)IS(rt1.c1)))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))AND((rt1.c3 IN (vt0.c0)))), CASE WHEN TOTAL(rt1.c3) THEN t0.c0 COLLATE RTRIM WHEN ((v0.c0) ISNULL) THEN 6.91316849E8 WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN ((((((((vt0.c0)OR(rt1.c3)))AND(t0.c0)))OR(v0.c0)))AND(t0.c0)) END, (((rt1.c3)) NOT BETWEEN ((UNLIKELY(vt0.c1))) AND ((((vt0.c0)LIKE(v0.c0))))) FROM v0, t0, vt0, rt1; -- 11ms;
SELECT ALL COUNT(CASE vt0.c0  WHEN vt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END) OVER ( ORDER BY (~ (CAST(rt1.c3 AS BLOB)))) FROM vt0, rt1;SELECT CASE ((((v0.c0)OR(t0.c0)))AND(vt0.c0))  WHEN ((rt1.c0) BETWEEN (vt0.c1) AND (rt1.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c1)) WHEN ((rt1.c2)-(NULL)) THEN '' WHEN (rt1.c1 IN (rt1.c2)) THEN -1204920345 ELSE ((rt1.c3)+(rt1.c3)) END FROM v0, t0 WHERE (CAST(1.553822324E9 AS BLOB));SELECT ALL (((((vt0.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c3, 'Uy6', rt1.c0)) AND ((rt1.c3, vt0.c1, rt1.c3)))) BETWEEN ((NOT (vt0.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) FROM v0, vt0, t0;SELECT ALL CASE WHEN (t0.c0 IN ()) THEN ((rt1.c3)<=(rt1.c0)) WHEN ((v0.c0) BETWEEN (0.6845530401738571) AND (v0.c0)) THEN (((rt1.c0, t0.c0, rt1.c3)) NOT BETWEEN ((rt1.c0, NULL, v0.c0)) AND ((x'', rt1.c0, rt1.c1))) WHEN ((rt1.c3)OR(0.06736354205805639)) THEN rt1.c0 END, (((rt1.c0 IN ()))<>(CASE WHEN '-569103813' THEN vt0.c0 WHEN rt1.c3 THEN v0.c0 WHEN NULL THEN rt1.c0 END)), (rt1.c0 IN ()) COLLATE NOCASE FROM rt1 WHERE (((((x'08ce')OR(0xffffffffe4af224d)))AND('-1350101770')) COLLATE BINARY);SELECT DISTINCT (NOT ((((vt0.c0)) NOT BETWEEN ((321127051)) AND ((v0.c0))))) FROM vt0, v0, t0, rt1 WHERE (CAST('-1345884669' AS BLOB)); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC))OR(rt1.c3 COLLATE RTRIM)) FROM vt0, t0 GROUP BY (+ (((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))) HAVING NULL;SELECT DISTINCT ((0.24402212998729345) NOTNULL) FROM rt1, t0, v0 INNER JOIN vt0 ON CAST(CAST(rt1.c2 AS BLOB) AS NUMERIC); -- 1ms;
SELECT (('-71153108') NOT BETWEEN (((t0.c0)LIKE(0xa853db2))) AND ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt1.c0))))), ((((rt1.c0) IS FALSE))IS NOT(CAST(t0.c0 AS INTEGER))), rtreenode((((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))), ((((rt1.c2)AND(rt1.c2)))OR(v0.c0))) FROM rt1, v0, t0;SELECT DISTINCT COUNT((NULL IN (t0.c0))) OVER () FROM rt1, v0, t0, vt0 WHERE ((((((0.6845530401738571) BETWEEN (0.8061841013330161) AND (NULL)), (~ (x'30af')), ((x'')+(828295468))))==((((('nowU', 0.7753337556770583, 0xffffffffb9c89e8f))<=(('-1856104805', 0.23416050115082665, 0.9707407414896171))), (((0.24402212998729345))>(('1530168549'))), ((0.7253507972007488) NOT NULL))))); -- 1ms;
SELECT CASE WHEN ((((t0.c0)OR(vt0.c0)))OR(rt1.c3)) THEN vt0.c0 COLLATE BINARY ELSE ((((((((rt1.c2)OR(t0.c0)))OR(rt1.c3)))AND(vt0.c1)))OR(vt0.c1)) END FROM v0, rt1;SELECT ALL CASE WHEN ((vt0.c1)*(rt1.c3)) THEN CAST('x(%5嗣\r' AS REAL) END FROM rt1 NOT INDEXED, v0, vt0, t0 WHERE (((((NULL)<=(NULL))) NOT BETWEEN (CASE 0.3012604120188117  WHEN 0.21833460935540283 THEN NULL ELSE '89094681' END) AND (0.9818524245187185 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((((rt1.c2)OR(t0.c0)))AND(vt0.c0)))=(((vt0.c0)&(0Xffffffff97981fd1)))), (- ((('-319400477')LIKE(v0.c0)))), ((x'dcea')>(CASE v0.c0  WHEN NULL THEN rt1.c0 ELSE v0.c0 END)), ((rt1.c1)<<(CAST(vt0.c0 AS REAL))), ((((v0.c0)!=(rt1.c0))) NOT BETWEEN (x'') AND ((~ (vt0.c0)))) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((x'')|(x''))));SELECT '1553822324' FROM t0, v0, rt1, vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)<>(rt1.c1)) AS NUMERIC) FROM t0, v0, rt1;SELECT DISTINCT LIKELY(DISTINCT ((rt1.c2) NOT NULL)) FROM v0, vt0 WHERE (CASE WHEN ((-1924253043)%('2056325735')) THEN ((('-Infinity', x'', 'nu'))>((0.23416050115082665, 1.530168549E9, 0.5724064514133235))) END) ORDER BY CAST(((t0.c0)*(rt1.c1)) AS TEXT) DESC LIMIT 78311990 OFFSET 330472694;SELECT DISTINCT SUM(COUNT(*)) FROM v0, t0, rt1 WHERE (CAST((x'69c5' IN ()) AS INTEGER));SELECT ((((rt1.c0 IN ())))<(((NOT (rt1.c1))))) FROM t0, vt0;SELECT DISTINCT CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1))  WHEN CASE rt1.c1  WHEN rt1.c1 THEN vt0.c1 END THEN t0.c0 WHEN x'4c01' THEN CASE WHEN '' THEN vt0.c1 END WHEN (rt1.c1 IN (rt1.c2, rt1.c3)) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN 0Xfffffffff3572abb WHEN t0.c0 THEN rt1.c0 WHEN t0.c0 THEN vt0.c1 WHEN rt1.c3 THEN 0.8585289113234972 ELSE v0.c0 END ELSE (- (rt1.c1)) END, CASE LIKELIHOOD(t0.c0, 0.41777770696421535)  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))) THEN t0.c0 COLLATE BINARY ELSE ((v0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) END, (((rt1.c3)) BETWEEN (((((rt1.c1)) NOT BETWEEN (('1553822324')) AND ((t0.c0))))) AND ((CASE WHEN rt1.c1 THEN rt1.c3 ELSE v0.c0 END))) FROM rt1, t0, v0 WHERE ((((((NULL))<=((x'')))) ISNULL));SELECT DENSE_RANK() OVER () FROM rt1, t0 LIMIT 1515846198; -- 0ms;
SELECT NULLIF(CASE v0.c0  WHEN t0.c0 THEN vt0.c0 END, x'') FROM rt1 GROUP BY (((((vt0.c0)<=(vt0.c1))))<>(((~ (rt1.c2)))));SELECT ALL ((((((vt0.c0) BETWEEN (rt1.c0) AND (t0.c0)))OR(t0.c0)))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))), ((AVG(vt0.c1))==(t0.c0 COLLATE NOCASE)), ((('0.9737414405610052'))>((NULLIF(rt1.c2, rt1.c1)))) FROM v0;SELECT DISTINCT (((((((('881404581')AND(GROUP_CONCAT(vt0.c0))))OR(GROUP_CONCAT(vt0.c1))))AND('aiCsh	')))AND(vt0.c0 COLLATE BINARY)) FROM v0, t0, vt0 WHERE (json_array_length(CASE 'Q^'  WHEN x'dcd4' THEN '-1713294039' ELSE 0xffffffff9c764c70 END)); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)!=(v0.c0)) WHEN COUNT(*) THEN ((v0.c0)>=(rt1.c3)) WHEN ((rt1.c1) IS FALSE) THEN (0.9160808301308521 IN ()) END, ((((((((v0.c0)OR(rt1.c2)))OR(vt0.c0)))OR(rt1.c3)))OR(vt0.c1)) COLLATE RTRIM, ((NULL) NOT NULL) FROM v0, rt1, t0 WHERE (CAST('1530168549' AS REAL) COLLATE BINARY) GROUP BY ((((v0.c0)+(rt1.c3))) IS FALSE) HAVING CASE WHEN rt1.c0 COLLATE NOCASE THEN NULL ELSE rt1.c1 COLLATE RTRIM END;SELECT ALL (- (MIN(rt1.c0))), (+ (((vt0.c1) ISNULL))), CASE rt1.c0 COLLATE BINARY  WHEN CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN v0.c0 END THEN ((((rt1.c2)AND(vt0.c0)))AND(v0.c0)) END FROM t0, rt1 WHERE ((((((((NULL))>=((0.25181750726901997))))AND(((0.36162396008777176) NOT BETWEEN (NULL) AND ('0.8585289113234972')))))AND(CASE '325701862'  WHEN NULL THEN 1212367391 END))) GROUP BY (((t0.c0) IS TRUE) IN ()), CAST((vt0.c1 IN ()) AS INTEGER), (~ (CAST(vt0.c0 AS NUMERIC)));SELECT ALL (NOT ((((rt1.c0))<((rt1.c2))))), rt1.c3, (((((rt1.c0) BETWEEN (vt0.c1) AND (rt1.c3))))!=((((t0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))))) FROM t0 WHERE (((x'') ISNULL));SELECT '874974333', CASE ((((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))AND(v0.c0)))OR(vt0.c1)))AND(v0.c0)))OR(rt1.c0))  WHEN MAX(vt0.c1) THEN v0.c0 COLLATE RTRIM END, ((((((vt0.c0) NOTNULL))AND(((t0.c0) BETWEEN (v0.c0) AND (vt0.c1)))))AND(vt0.c1 COLLATE RTRIM)) FROM rt1, t0, v0;SELECT ALL CASE (((rt1.c1)) NOT BETWEEN ((0.35094132212701634)) AND ((NULL)))  WHEN (vt0.c0 IN ()) THEN ABS(rt1.c0) WHEN (((vt0.c1, vt0.c0, rt1.c1))>((vt0.c0, vt0.c1, vt0.c0))) THEN CASE WHEN v0.c0 THEN rt1.c0 ELSE rt1.c3 END WHEN 8.28295468E8 THEN (NOT (NULL)) END, COUNT(*) OVER (), ((v0.c0)OR(TOTAL(vt0.c1))) FROM rt1, v0, vt0 WHERE (((((CASE 0Xffffffffe37af3f2  WHEN NULL THEN 0.04508274252501787 END)OR(x'ae08')))AND(RTRIM(x'')))); -- 0ms;
SELECT DISTINCT (CAST(t0.c0 AS REAL) IN ()) FROM vt0, rt1 WHERE ((+ ('-1170414984'))) GROUP BY ((rt1.c1 COLLATE NOCASE) NOT BETWEEN ((((rt1.c1))>=((rt1.c2)))) AND (CASE rt1.c2  WHEN vt0.c0 THEN v0.c0 END));SELECT DISTINCT v0.c0 FROM rt1, vt0, t0, v0; -- 0ms;
SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)))) AND ((CAST(rt1.c2 AS INTEGER)))), ((0.2937351167678648)%(CASE WHEN vt0.c1 THEN rt1.c0 ELSE vt0.c1 END)), AVG((NOT (rt1.c2))) FILTER(WHERE (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOTNULL)) OVER () FROM t0 WHERE (CASE 'pm' COLLATE RTRIM  WHEN (((-968550500)) BETWEEN ((0Xfffffffff07ca086)) AND (('1954054268'))) THEN NULL END);SELECT ((((vt0.c1) NOT BETWEEN (rt1.c2) AND (vt0.c1)))OR(CASE rt1.c3  WHEN rt1.c1 THEN 'Xh' ELSE vt0.c0 END)) FROM vt0, v0, rt1 WHERE ((((((('1314946034') ISNULL))OR(CASE WHEN x'' THEN x'' END)))AND(CASE -646366741  WHEN '-1790129767' THEN 0.982737708621806 ELSE 0.7629543451892641 END))) ORDER BY ((((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c1)))OR(v0.c0))) BETWEEN (((((rt1.c0)OR(vt0.c0)))AND(rt1.c3))) AND (t0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;SELECT DISTINCT RANK() OVER (), SUM(LOWER(DISTINCT v0.c0) COLLATE NOCASE) OVER (), COUNT((+ (rt1.c1))) FILTER(WHERE ((((rt1.c3) NOT BETWEEN (-1170414984) AND (rt1.c1))) NOTNULL)) OVER () FROM t0;SELECT DISTINCT '325701862' COLLATE RTRIM FROM rt1, vt0; -- 0ms;
SELECT DISTINCT (((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)) IN ()), CAST(((rt1.c0)>=(rt1.c1)) AS NUMERIC), CASE WHEN ((((v0.c0)OR(x'')))AND(rt1.c0)) THEN (NOT (0.42765288482101516)) ELSE ((((((((vt0.c1)AND(v0.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)) END FROM vt0, t0, v0, rt1 WHERE (((((x'') ISNULL))*(((',w') ISNULL)))); -- 0ms;
SELECT x'', NTH_VALUE(((((((v0.c0) NOTNULL))AND(0.23110838536228728)))AND(((((((((NULL)OR(0.06433109720802044)))OR(NULL)))OR(v0.c0)))OR(rt1.c1)))), ((((vt0.c1)<=(rt1.c2))) IS TRUE)) OVER ( ORDER BY ((((rt1.c3)-(rt1.c2))) IS FALSE)), ((UPPER(t0.c0)) NOT BETWEEN (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))) AND ((('-910535659') BETWEEN (rt1.c1) AND (t0.c0)))) FROM vt0, v0, t0, rt1 GROUP BY (((((0xffffffffcc529a3f, v0.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c3, rt1.c3)) AND ((rt1.c0, t0.c0, rt1.c3)))) BETWEEN (((((t0.c0)OR(v0.c0)))OR(vt0.c0))) AND (CASE WHEN v0.c0 THEN rt1.c3 END)), x'', (- (((0.8681222038056506)%(v0.c0)))) HAVING ((TRIM(rt1.c1, rt1.c2)) ISNULL); -- 21ms;
SELECT ((((vt0.c1)|(rt1.c3))) NOT BETWEEN (CASE WHEN vt0.c0 THEN x'eeec' END) AND (CASE WHEN rt1.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 END)), CAST(LOWER(rt1.c2) AS BLOB), ((((vt0.c1) BETWEEN (rt1.c2) AND (rt1.c3)))IS NOT(((t0.c0)>=(x'')))) FROM vt0, t0 WHERE (QUOTE(CAST('321127051' AS INTEGER)));SELECT DISTINCT COUNT(((rt1.c0)>(vt0.c1))) OVER (), (((vt0.c0, vt0.c1, rt1.c2)) NOT BETWEEN ((((0.17089161347319948) IS TRUE), CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN 0xffffffffa663176a WHEN vt0.c1 THEN rt1.c0 ELSE vt0.c0 END, CAST(t0.c0 AS NUMERIC))) AND ((((vt0.c1)>=(t0.c0)), ((rt1.c3)<(rt1.c3)), CAST(NULL AS REAL)))), (+ (t0.c0 COLLATE RTRIM)), ((NULL)>(((rt1.c3) IS FALSE))), ((((((((((t0.c0)||(rt1.c1)))OR(((rt1.c2) IS FALSE))))AND(((((t0.c0)OR(rt1.c2)))AND(v0.c0)))))AND(((t0.c0) ISNULL))))AND(CASE WHEN t0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN t0.c0 END)) FROM v0 WHERE (CAST((((((((('0.5949506894849398')OR(NULL)))OR(-569103813)))AND('r.Q]')))OR('thg9')) AS REAL));SELECT ALL ((((((rt1.c3)OR(rt1.c0)))OR(vt0.c1))) BETWEEN (((vt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))) AND ((rt1.c2 IN ()))), (+ (-1.924253043E9)) COLLATE NOCASE, ((CAST(rt1.c2 AS NUMERIC)) BETWEEN (UNLIKELY(v0.c0)) AND (((((v0.c0)OR(t0.c0)))AND(v0.c0)))) FROM v0;SELECT DISTINCT ((t0.c0)>((vt0.c1 IN (rt1.c2)))), (~ (((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))), AVG(CAST(rt1.c1 AS INTEGER)) FROM vt0, t0 GROUP BY (((NULLIF(0X278954de, vt0.c1)))>((json_remove(vt0.c1, v0.c0, rt1.c0, t0.c0)))), rt1.c3, ((((rt1.c1) BETWEEN (t0.c0) AND (rt1.c1)))OR(v0.c0 COLLATE RTRIM)) HAVING CAST(HEX(rt1.c1) AS TEXT);SELECT ((((NULL IN ())))>=((CAST(vt0.c0 AS BLOB)))), ((TOTAL(rt1.c2)) IS FALSE), SUM(((((((((rt1.c1)AND(t0.c0)))OR(vt0.c1)))OR(rt1.c3)))OR(rt1.c2))) FILTER(WHERE ((CASE rt1.c2  WHEN vt0.c1 THEN vt0.c1 END)GLOB(((v0.c0) BETWEEN (rt1.c2) AND (rt1.c0))))) OVER () FROM vt0;SELECT COUNT(*) OVER () FROM vt0 WHERE ((- (x'08cf' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT rt1.c2, ((((((vt0.c1)AND(rt1.c1)))AND(rt1.c3)))|(((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c0)))), ((CAST(v0.c0 AS NUMERIC))<<((rt1.c3 IN ()))) FROM v0 WHERE (CASE UPPER(DISTINCT 0Xffffffffdd903264)  WHEN (0.4211170891360596 IN ()) THEN CAST('-136067735' AS TEXT) END);SELECT DISTINCT ((((x'e32a')OR((((v0.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))))))OR(((((((((vt0.c1)AND(rt1.c1)))AND(vt0.c1)))OR(rt1.c1)))AND(v0.c0)))), CASE WHEN t0.c0 THEN vt0.c1 END COLLATE RTRIM, LAST_VALUE(NULL) OVER () FROM v0, rt1, t0, vt0; -- 20ms;
SELECT DISTINCT NTH_VALUE(((UNLIKELY(vt0.c1)) ISNULL), CASE vt0.c0  WHEN '{籸l	P堦pq5' THEN ((vt0.c1) IS TRUE) ELSE ((vt0.c1)&(vt0.c1)) END) OVER ( ORDER BY CAST(t0.c0 COLLATE NOCASE AS TEXT) ASC  NULLS LAST) FROM vt0;SELECT DISTINCT CAST(vt0.c1 AS REAL) COLLATE BINARY FROM v0, t0 WHERE (CAST(QUOTE(NULL) AS INTEGER));SELECT CASE rt1.c3  WHEN ((((vt0.c0)AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS INTEGER) END FROM v0, vt0 WHERE (CAST((((1.314946034E9, 0.9000100038023896, 0.6443460284804454))>((0.9063076847584537, 1904315518, '881404581'))) AS NUMERIC));SELECT DISTINCT TOTAL(ABS(rt1.c1)) FROM t0, vt0, v0;SELECT CASE WHEN ((rt1.c2)GLOB(rt1.c2)) THEN CAST(0.5828676882387224 AS REAL) END FROM rt1, t0, v0, vt0 WHERE (x'23a9'); -- 0ms;
SELECT (~ (((v0.c0) NOT NULL))), (((vt0.c0) NOTNULL) IN (((((rt1.c2)OR(rt1.c0)))OR(vt0.c1)), CASE v0.c0  WHEN '' THEN rt1.c0 END)), COUNT(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1))) OVER ( PARTITION BY ((((((rt1.c1) IS FALSE))AND(((rt1.c0)<(rt1.c3)))))OR(((t0.c0) NOTNULL))), rt1.c2) FROM rt1, t0, v0 GROUP BY rt1.c0, (CAST(rt1.c3 AS TEXT) IN ()), (((vt0.c1, vt0.c0, rt1.c3, rt1.c2, x''))<=((rt1.c3, rt1.c2, t0.c0, rt1.c1, t0.c0))) COLLATE NOCASE HAVING (((rt1.c2, rt1.c2, x'', rt1.c2, rt1.c0)) NOT BETWEEN ((((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c0)), (((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), x'', COUNT(*), ((vt0.c0) IS FALSE))) AND ((MAX(vt0.c1), (+ (t0.c0)), (rt1.c2 IN ()), (~ (v0.c0)), rt1.c2))) LIMIT -1345884669 OFFSET 1971574417;SELECT SUM(((x'') ISNULL)) FROM t0, vt0, rt1, v0; -- 1ms;
SELECT ALL GROUP_CONCAT(((rt1.c1) BETWEEN (vt0.c1) AND (vt0.c0))) FROM t0, v0;SELECT CAST(x'e7a9' AS NUMERIC), GROUP_CONCAT((((rt1.c1, vt0.c0, t0.c0))<=((t0.c0, t0.c0, rt1.c0)))), CAST(((((v0.c0)AND(rt1.c1)))OR(t0.c0)) AS BLOB) FROM t0, rt1, v0 LIMIT 1115887121;SELECT AVG(((((NULL)OR(rt1.c0)))OR(rt1.c3))) OVER (), SUM('pm' COLLATE RTRIM) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP), ((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) NOTNULL) FROM vt0 NATURAL JOIN rt1 WHERE (((((((('-278699491')) BETWEEN ((x'')) AND (('QE'))))OR(NULL)))AND((('1446049885')|(NULL))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((CAST(rt1.c3 AS INTEGER))|('231694455'))) OVER () FROM rt1, t0, vt0, v0; -- 7ms;
SELECT ALL ((((vt0.c1) NOT BETWEEN ('1212367391') AND ('X]')))IS NOT(((rt1.c1) NOT BETWEEN (rt1.c0) AND (t0.c0)))) FROM t0, vt0, rt1, v0 WHERE (x''); -- 0ms;
SELECT LIKELIHOOD(GROUP_CONCAT(rt1.c1), 0.44947491555825814) FROM vt0;SELECT ((rt1.c0)<=(json_array_length(rt1.c3))) FROM vt0 WHERE (((~ (NULL)) IN ((NULL IN ()), ((0Xffffffffafc76e03)&(NULL)))));SELECT DISTINCT x'' FROM v0, vt0 WHERE (((((((((((0Xfffffffffd288052)OR(x'')))AND(NULL)))OR('-2005131858')))OR('r.q]')))>>(((x'') NOT BETWEEN (x'') AND (x'eb91'))))); -- 0ms;
SELECT DISTINCT (((((0xfffffffffecd5634)) BETWEEN ((v0.c0)) AND ((rt1.c0)))) BETWEEN (((vt0.c1)>(0.35637110341860756))) AND (((vt0.c0)%(NULL)))), (~ (((vt0.c0) NOTNULL))), ((COUNT(*)) ISNULL) FROM t0, v0;SELECT DISTINCT ((((((t0.c0) ISNULL))OR((vt0.c0 IN ()))))AND(TIME(rt1.c3, rt1.c2, rt1.c0, vt0.c0, rt1.c2))), rt1.c0, ((((vt0.c1)&(vt0.c0))) NOT NULL) FROM rt1 WHERE (CAST('' COLLATE NOCASE AS NUMERIC));SELECT ALL (~ (rt1.c0)) FROM t0 WHERE ((((((((((0.5247838885785273)OR('-1343860029')))OR(x'')))OR('')))AND('')) IN ((((('>')OR(x'')))OR(0x2c9afcfc)), ((1.904315518E9)IS(0.09854900503185482)))));SELECT DISTINCT (((((vt0.c1, rt1.c1, t0.c0))<=((v0.c0, rt1.c3, vt0.c1)))) IS FALSE) FROM v0, vt0 WHERE ((((('-1924253043'))<>((''))) IN (((0.591091215987848)>=('KL [(瓪'))))) ORDER BY -2067336393 ASC  NULLS LAST LIMIT 325701862 OFFSET -862186806;SELECT DISTINCT TIME(CAST(v0.c0 AS BLOB), (rt1.c0 IN ()), IFNULL(DISTINCT rt1.c0, rt1.c2)), 0Xffffffffd3c2fcdf, ((COUNT(t0.c0)) IS TRUE), ((v0.c0)<(LIKELIHOOD(DISTINCT rt1.c0, 0.8544814894197014))), GROUP_CONCAT(NULL) FROM t0, vt0 WHERE (((x'') NOT BETWEEN (x'') AND (NULL)) COLLATE RTRIM);SELECT DISTINCT ((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)) COLLATE NOCASE FROM v0;SELECT DISTINCT CHANGES() FROM rt1, v0, t0, vt0 WHERE (0xffffffff8bfc6525); -- 0ms;
SELECT ALL GROUP_CONCAT(MIN(t0.c0)) COLLATE BINARY, '-1751638063', CAST((((rt1.c2))<((rt1.c2))) AS TEXT) FROM t0 NOT INDEXED WHERE ((((x'4ab94afa')) BETWEEN ((((NULL)<('')))) AND ((((((x'')AND(x'738fd22f')))AND(0.6933260560547236))))));SELECT ALL v0.c0, (((v0.c0)) NOT BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c1)/(0xffffffffd97939eb))))), (((- (rt1.c3))) BETWEEN (CASE WHEN NULL THEN rt1.c1 ELSE vt0.c1 END) AND (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE ((CAST(NULL AS NUMERIC) IN ()));SELECT DISTINCT COUNT(((NULL) ISNULL)) OVER (), NTH_VALUE((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)OR(v0.c0)), ((v0.c0)!=(NULL))))!=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN ()), ((v0.c0)/(v0.c0))))), ((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) OVER ( ORDER BY (((rt1.c0 IN ())) NOT BETWEEN (((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3)))OR(vt0.c1))) AND ((('. k驵?St6D') IS TRUE)))  NULLS LAST RANGE  UNBOUNDED PRECEDING), DATETIME(CAST(t0.c0 AS NUMERIC), rt1.c0 COLLATE NOCASE, json_extract(rt1.c2, v0.c0, rt1.c0, x'95b8')) FROM v0;SELECT DISTINCT (((COUNT(*)))<((((rt1.c2) BETWEEN (vt0.c1) AND (v0.c0))))) FROM v0, rt1, vt0 WHERE (TYPEOF(DISTINCT NULL COLLATE NOCASE)) GROUP BY ((((((vt0.c1)AND(rt1.c0)))AND(rt1.c3))) IS FALSE) HAVING NULL; -- 0ms;
SELECT (((((vt0.c0))<=((v0.c0)))) NOT NULL) FROM v0 WHERE ((((~ ('')))||((NOT (NULL)))));SELECT CASE ((v0.c0) NOTNULL)  WHEN ((rt1.c3)GLOB(v0.c0)) THEN ((((((((vt0.c1)OR(vt0.c1)))AND(rt1.c3)))OR(vt0.c1)))AND(vt0.c1)) WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN rt1.c1 THEN '1553822324' WHEN rt1.c2 THEN rt1.c1 END THEN (((t0.c0))>=((rt1.c1))) WHEN CAST(v0.c0 AS REAL) THEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE (((rt1.c0, rt1.c1, rt1.c2)) BETWEEN ((t0.c0, rt1.c1, vt0.c0)) AND ((rt1.c2, rt1.c2, rt1.c2))) END FROM vt0 ORDER BY (((+ (rt1.c3)))>>(json_quote(vt0.c0)));SELECT DISTINCT t0.c0 FROM vt0, rt1, t0 LIMIT 423074421; -- 0ms;
SELECT ((NULL) ISNULL) COLLATE NOCASE FROM rt1, t0, v0 WHERE (((('')) NOT BETWEEN ((LIKELIHOOD(DISTINCT x'', 0.5558286553649237))) AND ((((NULL) NOT NULL))))) GROUP BY ((((((rt1.c1)||(rt1.c3)))OR(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c3 THEN 0X71818c7e END)))AND(((t0.c0)IS NOT(rt1.c1)))) HAVING (CASE '654858050'  WHEN rt1.c0 THEN vt0.c1 WHEN -2.0097484E7 THEN rt1.c3 WHEN NULL THEN NULL ELSE v0.c0 END IN ());SELECT CASE ((v0.c0)+(vt0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN ((rt1.c2) IS FALSE) ELSE (+ (rt1.c1)) END, ((CASE WHEN v0.c0 THEN rt1.c2 ELSE rt1.c1 END) NOT NULL), ((vt0.c0)&(rt1.c1)) FROM rt1, t0, v0, vt0 WHERE (-1.790129767E9 COLLATE NOCASE); -- 0ms;
SELECT ((((rt1.c2) ISNULL)) IS TRUE) FROM t0, v0, vt0;SELECT DISTINCT NULL FROM v0 WHERE (((CASE NULL  WHEN 0.5996657243316886 THEN '-933091867' END) NOT BETWEEN (((0.9483270677072765)+(0.9922531914669537))) AND ('-2067336393'))); -- 0ms;
SELECT DISTINCT NTILE((~ ((~ (v0.c0))))) OVER (), AVG((NOT (v0.c0))) OVER (), GROUP_CONCAT(((vt0.c1) BETWEEN (t0.c0) AND (rt1.c0))) OVER () FROM v0 WHERE (0.6391180149089513);SELECT ALL NULL FROM rt1 WHERE ((((NULL IN ()))*(((((NULL)OR(0.3328933739951163)))OR('-478364556'))))); -- 0ms;
SELECT DISTINCT ((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c1 END)/(CAST(t0.c0 AS INTEGER))) FROM rt1, v0 WHERE (((((((0.6856641604649922)OR(0.9707407414896171)))OR(-2074532217))) ISNULL));SELECT ALL ((CAST(rt1.c3 AS INTEGER)) NOT BETWEEN (((t0.c0)<<(v0.c0))) AND (((rt1.c1) NOT NULL))) FROM v0 WHERE (((CAST(0.19532843577575087 AS INTEGER)) BETWEEN (((((-515415974)OR('')))OR(NULL))) AND (('' IN (x''))))) ORDER BY ((((vt0.c1)AND(v0.c0)))OR(t0.c0)) COLLATE RTRIM ASC  NULLS LAST;SELECT DISTINCT (((rt1.c3))>=((CAST(rt1.c2 AS INTEGER)))) FROM v0, rt1 WHERE (((CAST('1762198963' AS TEXT))IS NOT((('')+('-254187228'))))); -- 1ms;
SELECT ALL GROUP_CONCAT(((v0.c0) BETWEEN (rt1.c3) AND (215529298))) OVER () FROM rt1, vt0 WHERE ((((('-1503455382') BETWEEN ('F''1e500000qJSP') AND (NULL)))!=((0.8585289113234972 IN ('-1713294039')))));SELECT DISTINCT (COUNT(*) IN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) FROM t0 WHERE (0.6536332106300995) GROUP BY (((rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((((rt1.c3) ISNULL), ((vt0.c1) BETWEEN (rt1.c3) AND (rt1.c3)), t0.c0 COLLATE RTRIM)) AND ((rt1.c2 COLLATE BINARY, ((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt0.c0)), ((vt0.c0)AND(vt0.c1))))), ((((((('1982015986')AND(rt1.c2)))AND(vt0.c0))))>(((vt0.c0 IN ())))), (((((((vt0.c1))<>((rt1.c2))))AND(CAST(rt1.c1 AS INTEGER))))AND(NULL)), (((CAST(rt1.c1 AS REAL)))!=((((vt0.c0)<=(rt1.c0))))), (((((((((((((+ (rt1.c2)))AND(((vt0.c0)IS(0.7007747556114727)))))AND(CASE WHEN vt0.c1 THEN t0.c0 END)))AND(rt1.c0 COLLATE NOCASE)))OR(TRIM(DISTINCT v0.c0))))OR(rt1.c0)))AND(((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))) HAVING ((CAST(vt0.c0 AS REAL))AND(((t0.c0)%(t0.c0)))) ORDER BY CAST((((vt0.c1)) BETWEEN ((rt1.c1)) AND ((NULL))) AS REAL) DESC;SELECT DISTINCT CASE v0.c0  WHEN (((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))) THEN CAST(rt1.c0 AS TEXT) END, ((((v0.c0) BETWEEN (vt0.c0) AND (rt1.c3)))<(((vt0.c1) BETWEEN (rt1.c3) AND (t0.c0)))), CASE COUNT(*)  WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c0))) THEN ((((v0.c0)OR(v0.c0)))OR(vt0.c0)) ELSE ((rt1.c3) NOTNULL) END FROM v0, rt1, t0 WHERE (CASE (('f4O쿕KN*N') BETWEEN ('') AND (0.1682737286104239))  WHEN (- ('0.5949506894849398')) THEN LTRIM(x'') ELSE x'b331' COLLATE BINARY END);SELECT DISTINCT (((((v0.c0)AND(t0.c0)))OR(t0.c0)) IN ()) FROM v0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), CASE WHEN (v0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN rt1.c2 ELSE v0.c0 END ELSE (((t0.c0))<=((t0.c0))) END, ((((rt1.c3)&(x''))) IS TRUE) FROM rt1, t0, vt0, v0; -- 11ms;
SELECT DISTINCT (- (v0.c0 COLLATE RTRIM)), ((((rt1.c1)+(v0.c0)))||((((vt0.c1, rt1.c2, rt1.c3))==((vt0.c0, t0.c0, rt1.c1))))), CAST(((((rt1.c1)AND(rt1.c3)))OR(rt1.c2)) AS BLOB) FROM v0, rt1, t0, vt0 WHERE (((((x'')<('-910535659')))<((NOT (NULL))))); -- 0ms;
SELECT rt1.c3 FROM v0, rt1, t0 WHERE (CASE WHEN ((8.9094681E7) NOT BETWEEN (NULL) AND (1.446049885E9)) THEN (((0.16433650053476379, x'', x''))>=((0.17437725788259006, -2.12391237E8, 0.2815387064152567))) END); -- 1ms;
SELECT DISTINCT COUNT(COALESCE(t0.c0, rt1.c3, vt0.c1, rt1.c1)), ((((rt1.c1)>=(rt1.c1)))<=(rt1.c2 COLLATE BINARY)), CAST((vt0.c1 IN (rt1.c3)) AS BLOB), LIKELY(((vt0.c0) NOT BETWEEN (t0.c0) AND (NULL))), CASE ((vt0.c0)LIKE(v0.c0))  WHEN ((t0.c0)-(rt1.c3)) THEN ((rt1.c0) NOTNULL) ELSE (x'911e' IN ()) END FROM v0, rt1, t0, vt0 WHERE (CAST(((('443522090'))<>((0.021022520121021127))) AS BLOB)); -- 1ms;
SELECT CASE WHEN t0.c0 COLLATE RTRIM THEN HEX(v0.c0) END, CASE CAST(vt0.c1 AS NUMERIC)  WHEN ((((((((rt1.c1)OR(0.9733907708002285)))OR(x'')))AND(v0.c0)))AND(t0.c0)) THEN rt1.c1 COLLATE NOCASE ELSE (((vt0.c1)) BETWEEN ((NULL)) AND ((rt1.c0))) END, (((((vt0.c1))>((rt1.c2)))) IS FALSE) FROM rt1;SELECT (((((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt1.c2))))>(COUNT(*))) FROM rt1;SELECT DISTINCT LIKELY(DISTINCT ((rt1.c2)%(t0.c0))) FROM rt1, vt0, t0; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS REAL)) ISNULL) FROM t0, rt1; -- 0ms;
SELECT v0.c0 FROM v0, rt1; -- 0ms;
SELECT DISTINCT TOTAL(GROUP_CONCAT(((rt1.c0)>=(rt1.c1)))) FROM t0, vt0, rt1, v0 WHERE (((TYPEOF(0.8994239795873188)) IS FALSE)) ORDER BY (((((rt1.c0))>((rt1.c1)))) BETWEEN (((v0.c0) NOT NULL)) AND ((t0.c0 IN ()))) DESC  NULLS FIRST;SELECT DISTINCT x'', (((v0.c0 IN ())) NOTNULL), TOTAL(x'5319') FROM t0; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((rt1.c2 IN (vt0.c1, '215529298'))))) FROM vt0, v0, rt1 WHERE ((((NOT ('0.9922531914669537'))) NOT BETWEEN (CAST(0.6604540864740692 AS BLOB)) AND ((((NULL))<=((NULL)))))) ORDER BY ((((rt1.c1)IS NOT(rt1.c2))) NOT BETWEEN (((((rt1.c0)AND(rt1.c2)))OR(v0.c0))) AND (CAST(v0.c0 AS REAL))); -- 4ms;
SELECT ALL COUNT((v0.c0 IN ())), (((x''))=((((vt0.c1) BETWEEN (rt1.c2) AND (rt1.c3))))), (((((rt1.c2))<((vt0.c1)))) IS TRUE) FROM vt0 WHERE ((((('')LIKE('-742196001'))) NOT NULL));SELECT 0.5278924093680263 FROM vt0, t0 WHERE (NULLIF(DISTINCT CASE WHEN x'' THEN NULL END, CASE 0.6560938863788556  WHEN x'' THEN -8.62186806E8 END)); -- 0ms;
SELECT DISTINCT LAG((((v0.c0)) NOT BETWEEN ((rt1.c1)) AND ((((rt1.c2)+(rt1.c3))))), CASE rt1.c2  WHEN t0.c0 THEN rt1.c0 ELSE rt1.c0 END COLLATE BINARY, (((((0.02672703927718767)>>(0.947567499205213)), '-1984200001', rt1.c3))<>((NULL, rt1.c2, ((-1.924253043E9) IS TRUE))))) OVER (), ((((((((vt0.c0)AND(NULL)))OR(v0.c0)))AND((((t0.c0, v0.c0, rt1.c3))==((rt1.c1, vt0.c1, rt1.c3))))))AND((((t0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))))), MAX((((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c0))) COLLATE NOCASE) FROM t0, rt1, v0 WHERE ((((LIKELY(DISTINCT 0Xffffffff99e13529)))==((((('j', 1.446049885E9, '')) NOT BETWEEN ((-544772880, NULL, x'')) AND ((0.6036019056181683, NULL, 'oK')))))));SELECT DISTINCT (x'' IN ()) COLLATE NOCASE FROM v0, vt0; -- 0ms;
SELECT ALL ((COUNT(rt1.c0))IS((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))))) FROM v0, rt1, vt0;SELECT DISTINCT ((COALESCE(DISTINCT t0.c0, rt1.c2, rt1.c3, rt1.c0)) ISNULL) FROM t0, vt0, v0, rt1 WHERE (TYPEOF(DISTINCT NULL COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT x'5501' FROM rt1, t0, v0, vt0; -- 0ms;
SELECT DISTINCT ((((-738630877 COLLATE NOCASE)OR(((rt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (rt1.c3)))), CASE ((rt1.c2)>>(rt1.c1))  WHEN vt0.c0 THEN ((t0.c0)<('1656443484')) END, (((vt0.c1 IN ()))|(vt0.c0)) FROM t0 WHERE (((NULL COLLATE RTRIM)-(NULLIF(NULL, '443522090')))) GROUP BY ((rt1.c0 COLLATE NOCASE)OR(((rt1.c1)/(rt1.c1)))), (+ ((((rt1.c3))=((rt1.c2))))), (- (((vt0.c1)<=(rt1.c2))));SELECT ((((v0.c0)|(vt0.c1)))>(((-1010424933)*(rt1.c3)))), 1398594980, ((ABS(DISTINCT NULL))<>(rt1.c1)) FROM v0, vt0;SELECT ((CAST(vt0.c0 AS BLOB)) NOT NULL) FROM v0, vt0, t0 WHERE ((((((((-1345884669)) NOT BETWEEN ((NULL)) AND ((-1697575297))))AND(CASE x''  WHEN x'4de2' THEN 0.7702622079337308 END)))OR(((((x'')AND(x'')))OR('}b1%Zs'))))); -- 0ms;
SELECT ALL rt1.c0 FROM v0, rt1, t0, vt0 WHERE ((('X\nU')<<(0.5536067624973781)) COLLATE BINARY) ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.6995281107688613))*(CAST(rt1.c1 AS REAL))), json_extract(((vt0.c1)||(t0.c0)), ((x'624f')&(vt0.c1)), ((((((((vt0.c1)OR(rt1.c1)))OR(v0.c0)))OR(rt1.c3)))OR(rt1.c2)), ((vt0.c0) NOTNULL)) ASC; -- 1ms;
SELECT DISTINCT SUM(NULL) OVER ( PARTITION BY ((((rt1.c3)<(t0.c0)))GLOB(((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c1)))), (NOT (CAST(v0.c0 AS TEXT))) ORDER BY (('72459358')AND((NOT (rt1.c0))))) FROM vt0 WHERE (NULL) GROUP BY ((rt1.c2 COLLATE BINARY) NOTNULL) HAVING ((((((((((0.9955098852584914) ISNULL))OR((((v0.c0))<=((t0.c0))))))OR(SUBSTR(t0.c0, t0.c0))))OR((t0.c0 IN ()))))AND((((rt1.c3))<=((rt1.c1))))) ORDER BY ((rt1.c1)&(rt1.c2)) COLLATE RTRIM  NULLS LAST;SELECT DISTINCT LAST_VALUE((((vt0.c0 IN ())) NOT NULL)) OVER () FROM vt0, rt1; -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( RANGE  UNBOUNDED PRECEDING) FROM t0; -- 0ms;
SELECT DISTINCT ((((GROUP_CONCAT(rt1.c0))OR(rt1.c2 COLLATE RTRIM)))OR(((rt1.c1)=(rt1.c3)))) FROM t0 WHERE ((NOT (((NULL)>=('|E')))));SELECT DISTINCT (((rt1.c0)|(v0.c0)) IN ((rt1.c1 IN ()), ((965040230) ISNULL))), (~ (v0.c0 COLLATE NOCASE)), FIRST_VALUE(((NULL)*(((v0.c0)|(vt0.c1))))) OVER () FROM rt1, vt0, t0, v0 GROUP BY CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c0)) THEN t0.c0 COLLATE NOCASE END, (~ ((((0.9063076847584537)) BETWEEN ((vt0.c1)) AND ((t0.c0))))), CAST('-1170414984' AS REAL), (((rt1.c1)) NOT BETWEEN ((((rt1.c2)<=(t0.c0)))) AND ((CAST(rt1.c0 AS NUMERIC)))), v0.c0 HAVING LIKELY(DISTINCT MAX(rt1.c3)); -- 18ms;
SELECT ((((rt1.c3) BETWEEN (vt0.c1) AND (rt1.c1))) NOT BETWEEN (rt1.c1) AND ((rt1.c0 IN ()))) FROM t0 CROSS JOIN rt1 ON ((rt1.c0 COLLATE BINARY)+('')) FULL OUTER JOIN vt0 ON (((NULLIF(rt1.c0, vt0.c1)))>=((CAST(vt0.c0 AS BLOB)))); -- 0ms;
SELECT DISTINCT TIME((NULL IN (rt1.c0)), (((rt1.c0))<=((rt1.c2))), ((((vt0.c1)OR(rt1.c0)))OR(t0.c0))) FROM rt1, vt0;SELECT ALL ((t0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE RTRIM FROM vt0, rt1, t0 WHERE (((CASE NULL  WHEN '' THEN '663311582' WHEN '-92575986' THEN '-1985327013' WHEN 0.5275519085050296 THEN NULL END)>(((NULL)>>('89094681'))))) ORDER BY ((((v0.c0)-(rt1.c2))) ISNULL)  NULLS LAST;SELECT ((((+ (t0.c0))))<>((((((rt1.c0)AND(rt1.c2)))AND(vt0.c1))))) FROM v0 NOT INDEXED, rt1, vt0;SELECT GROUP_CONCAT(CASE v0.c0  WHEN rt1.c1 THEN t0.c0 WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 ELSE rt1.c2 END) OVER () FROM rt1, vt0, t0 WHERE (HEX(DISTINCT (0.5278924093680263 IN ()))) LIMIT 1477859366 OFFSET 1438626721;SELECT DISTINCT ((((t0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1))) IS TRUE) FROM rt1 WHERE (json_array(x'' COLLATE NOCASE, NULL));SELECT DISTINCT ((CAST(rt1.c2 AS BLOB)) BETWEEN ((NOT (rt1.c1))) AND (IFNULL(DISTINCT v0.c0, rt1.c1))), ((MAX(rt1.c0))GLOB((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))), MAX((((t0.c0)) NOT BETWEEN ((v0.c0)) AND (('-933091867')))) FROM v0, rt1, t0 WHERE (((((NULL)IS(0.3120560100982943))) BETWEEN (((x'')!=(NULL))) AND ((((NULL, NULL, x'', 0.5984337584324122, '-382277059')) BETWEEN ((0X34b18077, -1700056938, 0xffffffff960132d2, 0.6666058163103772, 0.8302038092770004)) AND ((NULL, 0.3364310618161447, 301884585, '1982015986', 0x9554ab9)))))); -- 0ms;
SELECT ((rt1.c1) BETWEEN (rt1.c3) AND (vt0.c1)) COLLATE BINARY FROM v0, rt1 LIMIT -1335511940;SELECT ALL CAST(ROUND(rt1.c2, vt0.c0) AS REAL) FROM v0 WHERE ((((((-20097484)|(NULL))))==((CAST('' AS INTEGER))))) GROUP BY CASE ((vt0.c1) IS FALSE)  WHEN ((rt1.c2)+(rt1.c0)) THEN IFNULL(rt1.c0, vt0.c1) ELSE ((vt0.c0)+(rt1.c0)) END, v0.c0 COLLATE RTRIM COLLATE RTRIM, ((((rt1.c1)<<(v0.c0))) IS FALSE);SELECT DISTINCT ((-798075202)+(rt1.c3 COLLATE RTRIM)) FROM vt0;SELECT rt1.c2 FROM t0 RIGHT OUTER JOIN v0 ON rt1.c3 INNER JOIN rt1 ON ((((((((((('Em', t0.c0, vt0.c0))<((rt1.c2, vt0.c0, vt0.c1))))OR(((x'') BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((rt1.c1)IS(vt0.c1)))))AND(((t0.c0)GLOB(rt1.c0)))))AND((vt0.c1 IN ()))) RIGHT OUTER JOIN vt0 ON ((((((((v0.c0)OR(t0.c0)))OR(rt1.c0)))OR(x'01ae')))OR(CAST(rt1.c0 AS INTEGER))); -- 0ms;
SELECT ((vt0.c0)!=(rt1.c1)), 4.23074421E8, (((((vt0.c0) NOT NULL)))==((((((0.6699919799796247)OR(t0.c0)))AND(v0.c0))))) FROM t0, rt1, v0;SELECT DISTINCT ((vt0.c1 IN ('')) IN ()) FROM t0, rt1, v0, vt0 LIMIT 1019218799 OFFSET -15894514; -- 0ms;
SELECT DISTINCT CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) THEN ((v0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN NULL COLLATE NOCASE THEN ((vt0.c1) IS TRUE) WHEN rt1.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END, CAST((((vt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) AS INTEGER), CASE rt1.c0  WHEN (t0.c0 IN (vt0.c1, rt1.c0)) THEN x'' WHEN vt0.c0 THEN '-1170414984' WHEN '0.35637110341860756' THEN NULLIF(t0.c0, 0.5281092139597587) ELSE t0.c0 COLLATE NOCASE END, (~ (v0.c0)), GROUP_CONCAT(((vt0.c0) NOT BETWEEN (x'') AND (v0.c0))) FILTER(WHERE rt1.c3) OVER ( ROWS  UNBOUNDED PRECEDING) FROM v0, vt0, rt1, t0 INTERSECT SELECT (((rt1.c2)) NOT BETWEEN ((LIKELY(rt1.c2))) AND ((UPPER(v0.c0)))), CAST(0.8376572939943467 AS BLOB), CAST((((rt1.c2))<=((vt0.c0))) AS NUMERIC), CASE WHEN '' THEN NULL WHEN json_array(vt0.c0, vt0.c1) THEN ((rt1.c1) BETWEEN (vt0.c1) AND (625293350)) WHEN MAX(rt1.c1) THEN x'47af' ELSE '0.07223347090338128' END, (((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) COLLATE BINARY COLLATE BINARY FROM t0, v0, vt0, rt1 WHERE (((((((((((0.8411144691561748)OR(NULL)))OR('u(x')))AND(NULL)))OR(x'025a'))) BETWEEN ((+ (0.29878950067302845))) AND (((NULL)||(x''))))); -- 27ms;
SELECT ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (NULL))) ISNULL) FROM rt1; -- 0ms;
SELECT ALL (rt1.c1 COLLATE BINARY IN ()), ((rt1.c0) NOT NULL) COLLATE BINARY, LAST_VALUE((CAST(rt1.c1 AS REAL) IN ())) OVER (), ABS(DISTINCT (('') NOT BETWEEN (rt1.c0) AND (vt0.c1))), ((((((((((((vt0.c1)AND(rt1.c1)))OR(rt1.c2)))OR(COUNT(*))))OR(rt1.c0)))OR((('0.5536067624973781') IS TRUE))))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(t0.c0)))AND(rt1.c1)))), ((((rt1.c1)LIKE(rt1.c1)))GLOB((((rt1.c1))=((vt0.c0))))), COUNT(LTRIM(rt1.c2, 0x7e47a8a1)) FROM rt1, t0, vt0;SELECT ALL ((GROUP_CONCAT(v0.c0)) NOTNULL), (((((((((- (rt1.c1)))AND((- (rt1.c2)))))OR((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))))OR(((rt1.c2) ISNULL))))AND(NULL)), 0.3760419444944051 FROM t0, v0 WHERE (((((((NULL)-(-1063273034)))OR(((0.20057240485487604) NOT BETWEEN (x'60342bf1') AND ('-2072835728')))))AND(NULL))) ORDER BY (NOT ((((rt1.c3, rt1.c0, rt1.c2)) BETWEEN ((vt0.c0, v0.c0, rt1.c2)) AND ((t0.c0, rt1.c1, t0.c0))))) LIMIT -1550083488;SELECT SUM(CHAR(v0.c0, rt1.c0, rt1.c2)), IFNULL(v0.c0, (t0.c0 IN ())), ((t0.c0 COLLATE NOCASE)/(CAST('' AS BLOB))) FROM t0, vt0, v0 WHERE (((NULL)<('+볏Mf>2i3')) COLLATE BINARY);SELECT ((((((((COUNT(vt0.c1))AND(((rt1.c3)>=(t0.c0)))))AND(((((((((t0.c0)AND(v0.c0)))AND(NULL)))OR(rt1.c3)))AND(vt0.c0)))))AND((rt1.c1 IN ()))))OR((- (rt1.c2)))), (('-557103183') NOTNULL), ((((vt0.c0)&(vt0.c0))) IS TRUE) FROM rt1 WHERE (UPPER(NULL));SELECT ALL CAST(((x'')-(rt1.c0)) AS BLOB) FROM v0;SELECT DISTINCT ((((rt1.c0) NOT NULL)) ISNULL) FROM rt1 WHERE ((((('1118387931'))>=((x''))) IN ())); -- 0ms;
SELECT ALL ((rt1.c1) NOT BETWEEN ((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND (CAST(v0.c0 AS REAL))) FROM t0, v0 WHERE (((((((')g9SZ5栨')AND(0.7007747556114727)))AND(x'')))IS('f4O쿕KN*N'))) GROUP BY CAST(((rt1.c2) BETWEEN (x'') AND (vt0.c0)) AS NUMERIC);SELECT ALL ((((CASE rt1.c3  WHEN vt0.c0 THEN vt0.c1 END)AND(NULLIF(DISTINCT vt0.c0, rt1.c0))))OR(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END)) FROM vt0, rt1, t0, v0 LIMIT 106122918; -- 0ms;
SELECT DISTINCT (((((rt1.c1)AND(rt1.c0)))OR(t0.c0)) IN ()) FROM rt1 WHERE ((((-393147552)) NOT BETWEEN ((((((NULL)OR('')))OR(x'c3f8')))) AND (((('284305697')>=(x'')))))); -- 0ms;
SELECT ((vt0.c0) IS FALSE) COLLATE BINARY, (((((((((((vt0.c1))<=((t0.c0))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))OR(((8.9094681E7) NOTNULL))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END)))OR(((v0.c0) IS FALSE))), (CASE WHEN v0.c0 THEN v0.c0 ELSE rt1.c1 END IN ()), ((MIN(rt1.c0))*((+ (rt1.c0)))), (CAST(-7.98075202E8 AS REAL) IN ()) FROM t0, rt1, v0, vt0; -- 2ms;
SELECT DISTINCT '1043580463', RANK() OVER (), rt1.c0 COLLATE NOCASE FROM vt0, t0, rt1, v0; -- 3ms;
SELECT ALL (NOT (((rt1.c0) NOT NULL))) FROM rt1, vt0 WHERE ((((- (0.7204019148477462)))!=(CASE 0.2735301705463722  WHEN x'd735' THEN x'' WHEN 'g53O\r8Z' THEN 'CMlmo' WHEN x'' THEN '8\n%s' ELSE 'I8' END))); -- 1ms;
SELECT ALL CAST((rt1.c0 IN ()) AS INTEGER) FROM rt1 WHERE (((((((((((((((NULL) NOT BETWEEN (NULL) AND (NULL)))AND((NOT (0.34076346033969307)))))AND(((0.7443722177488791) BETWEEN (0X321c0e2d) AND (-2003504865)))))AND(0.3211936164611018)))OR((NOT (0.8490511637122081)))))AND(((NULL) ISNULL))))AND((('0.4211170891360596') BETWEEN (0.96625295677611) AND ('J[w'))))) GROUP BY ((((rt1.c2)-(vt0.c1))) ISNULL) ORDER BY (- (((v0.c0)IS NOT(rt1.c2)))) ASC;SELECT DISTINCT rt1.c1, TOTAL(vt0.c1), ((rt1.c3)-(rt1.c0)) COLLATE BINARY FROM t0, rt1, v0 UNION ALL SELECT AVG(CASE vt0.c0  WHEN rt1.c0 THEN v0.c0 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c1 THEN v0.c0 END), (((((((vt0.c1)AND(rt1.c2)))AND(t0.c0)), t0.c0, (((v0.c0))<=((rt1.c0))), ((((((((rt1.c0)OR('')))OR(rt1.c3)))OR(vt0.c1)))OR(t0.c0)), NULL))<=((((((rt1.c2)OR(t0.c0)))AND(vt0.c0)), ((vt0.c1)%(rt1.c3)), CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END, ((rt1.c3) NOTNULL), ((rt1.c3)>=(rt1.c3))))), (((((v0.c0))<=((rt1.c2)))) BETWEEN (((rt1.c1)&(v0.c0))) AND ((~ (vt0.c1)))) FROM t0, v0;SELECT DISTINCT (LIKELY(DISTINCT vt0.c0) IN ()) FROM v0 WHERE (((NOT ('-458284467')) IN ())) GROUP BY 0.9800535038098112 COLLATE NOCASE HAVING STRFTIME(TOTAL(0xffffffff99e13529), ((((vt0.c1)AND(rt1.c3)))OR(t0.c0)), ((((rt1.c0)AND(rt1.c2)))OR(NULL)));SELECT (((rt1.c0)>=(rt1.c2)) IN ()) FROM t0, vt0, v0, rt1; -- 0ms;
SELECT DISTINCT CASE CASE WHEN t0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END  WHEN ((((((((rt1.c0)OR(vt0.c1)))AND(rt1.c1)))OR(rt1.c0)))OR(x'')) THEN ((0.614619750269136) BETWEEN (rt1.c0) AND (t0.c0)) WHEN (((rt1.c3)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) WHEN (((rt1.c2)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN (vt0.c1 IN ()) ELSE CAST(t0.c0 AS BLOB) END, ((vt0.c0)GLOB(rt1.c1)) COLLATE RTRIM, COUNT(*) OVER () FROM rt1, vt0, v0, t0 GROUP BY UPPER(((((rt1.c0)AND(v0.c0)))AND(rt1.c0))); -- 12ms;
SELECT DISTINCT (((((((rt1.c3, vt0.c1, t0.c0)) NOT BETWEEN ((vt0.c1, rt1.c3, vt0.c1)) AND ((v0.c0, -515415974, 'aW'))))AND((NOT (vt0.c1)))))OR(rt1.c1)) FROM vt0, rt1, v0, t0 WHERE (((CAST(0.5816133524016994 AS NUMERIC)) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST(((rt1.c3) NOT BETWEEN (vt0.c1) AND (rt1.c2)) AS BLOB) FROM rt1 WHERE (((('vK', NULL, x'')) NOT BETWEEN ((CASE NULL  WHEN '-908568163' THEN x'' WHEN NULL THEN NULL WHEN x'' THEN 0.9577363702935274 END, NULL, (NULL IN ()))) AND (((((x''))>((0xffffffff8bfc6525))), CASE WHEN NULL THEN 0.9208770741032993 END, UNLIKELY(x'')))));SELECT ((v0.c0)LIKE(rt1.c1)) COLLATE RTRIM FROM vt0 LIMIT -1;SELECT DISTINCT CASE WHEN (NOT (v0.c0)) THEN (('-1400466641') BETWEEN (vt0.c0) AND (rt1.c0)) END FROM v0, t0, vt0, rt1 WHERE (CASE WHEN CAST(x'' AS INTEGER) THEN ((0.2930522641202533) ISNULL) END); -- 0ms;
SELECT DISTINCT CAST((NOT (rt1.c1)) AS BLOB), (((((v0.c0) NOT BETWEEN (v0.c0) AND (0.6451328608742849))))>((((((v0.c0)AND(rt1.c2)))OR(vt0.c0))))), ((((x'')<<(rt1.c3)))GLOB(TYPEOF(vt0.c0))) FROM v0, vt0;SELECT DISTINCT TOTAL(CAST(rt1.c1 AS BLOB)) OVER () FROM v0, vt0, rt1 LIMIT -367915822 OFFSET 2102281999; -- 3ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0, vt0, rt1 WHERE (0.8590194688626526); -- 0ms;
SELECT DISTINCT ((AVG(vt0.c0))=(((rt1.c3) IS FALSE))), ((rt1.c0)<(TOTAL(rt1.c1))), (((rt1.c3)) BETWEEN ((CASE v0.c0  WHEN x'8fd3' THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN rt1.c1 THEN rt1.c3 ELSE vt0.c1 END)) AND ((CASE 748354812  WHEN rt1.c1 THEN '0.9818524245187185' WHEN vt0.c1 THEN rt1.c0 WHEN 0.3756984842467097 THEN rt1.c0 ELSE rt1.c1 END))) FROM t0;SELECT NTH_VALUE((- (vt0.c0)) COLLATE BINARY, ((((vt0.c0) NOTNULL)) IS TRUE)) OVER () FROM v0, vt0, t0, rt1;SELECT NULL, CAST(((rt1.c0) BETWEEN (rt1.c0) AND (v0.c0)) AS REAL), GROUP_CONCAT((v0.c0 IN ())) OVER () FROM v0, t0, rt1, vt0 GROUP BY (vt0.c1 COLLATE RTRIM IN ()) HAVING ((COALESCE(DISTINCT rt1.c2, rt1.c1)) IS FALSE); -- 2ms;
SELECT DISTINCT CASE ((rt1.c3) NOT BETWEEN (rt1.c0) AND (vt0.c1))  WHEN GROUP_CONCAT(rt1.c2) THEN rt1.c1 ELSE (('\rEr!')|(t0.c0)) END, vt0.c1, CAST(((0.9000100038023896) BETWEEN (v0.c0) AND (rt1.c1)) AS BLOB), ((json_array_length(rt1.c1, vt0.c0)) NOT NULL), rt1.c0 FROM rt1, v0, t0 WHERE (((('\n)JU+A❼')) BETWEEN ((((0.6699919799796247)<<(NULL)))) AND (((('950640956')>(0.6036019056181683))))));SELECT DISTINCT CAST((NOT (v0.c0)) AS INTEGER) FROM rt1, t0 LIMIT -1488859179;SELECT DISTINCT ((((rt1.c2) IS TRUE))/(CASE WHEN t0.c0 THEN rt1.c1 ELSE vt0.c0 END)) FROM t0, rt1 WHERE (((CAST(')g9SZ5栨' AS BLOB))>=('巺')));SELECT DISTINCT ((('-1135099582') NOT BETWEEN (rt1.c0) AND (t0.c0)) IN ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((t0.c0))), 'f1_j䟘' COLLATE RTRIM)) FROM v0, vt0, t0 WHERE (((('-1178034545', 0.8080893631658606, 'NOWU')) BETWEEN (((((x'5d6d', x'', '')) NOT BETWEEN (('X4i\v', 0.5816133524016994, 0.9210492918486637)) AND ((0.7702622079337308, NULL, 0.8994239795873188))), (- ('1695242392')), HEX(0.31608708732381596))) AND ((((0.4457591659661183)>(NULL)), (('-30186589')IS(NULL)), ''))));SELECT DISTINCT CAST(COUNT(NULL) AS NUMERIC) FROM t0, rt1 WHERE (((((x'5c05ba91')OR((('1904315518') NOT NULL))))AND((((x'fad9'))<((0Xffffffffcc529a3f)))))); -- 1ms;
SELECT SUM(CASE WHEN rt1.c0 THEN rt1.c3 ELSE '871689121' END) FROM rt1, t0; -- 0ms;
SELECT ((((t0.c0) IS FALSE))GLOB((((vt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) FROM rt1, vt0, t0, v0; -- 0ms;
SELECT DISTINCT ((COUNT(*))>=(NULLIF(rt1.c3, vt0.c1))) FROM v0, t0 WHERE (CAST((('-O')>=(NULL)) AS TEXT));SELECT rt1.c0 FROM vt0, v0, t0, rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c0)OR(rt1.c3)))OR(vt0.c1))) NOT NULL) FROM v0, t0 NATURAL JOIN rt1;SELECT DISTINCT (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rtreenode(rt1.c0, rt1.c1)))), COALESCE(DISTINCT (~ (rt1.c0)), SUM(rt1.c3)), ((rt1.c1)&(((v0.c0)AND(rt1.c2)))) FROM rt1, vt0, t0 WHERE (((CASE '0.9818524245187185'  WHEN NULL THEN 0.39973156966620105 END) IS FALSE));SELECT ALL 1e500, rt1.c0, rt1.c3 FROM v0, t0, rt1 WHERE ((0.6059374447104577 COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT ((('') IS FALSE) IN ()) FROM vt0, t0, v0 WHERE ((((((''))>((0.8701606567124847))))>=((((('0.6845530401738571')OR(1551860810)))AND('dmt'))))) GROUP BY ((((((rt1.c1)AND(rt1.c1)))OR(NULL)))|(ABS(rt1.c3))) HAVING CASE WHEN NULL THEN ((((v0.c0)AND(t0.c0)))OR(v0.c0)) WHEN (t0.c0 IN (rt1.c1, rt1.c2)) THEN ((((((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c3)))OR(vt0.c1)))OR(rt1.c0)))AND(rt1.c0)))OR(v0.c0)) WHEN HEX(rt1.c0) THEN v0.c0 ELSE (+ (v0.c0)) END LIMIT 663311582 OFFSET -1762831972;SELECT ALL (vt0.c0 IN ()) COLLATE NOCASE FROM vt0 WHERE ((((('z}v') NOT BETWEEN (-1.488859179E9) AND (0.022948597476505128)))-((('')IS(8.74974333E8))))) GROUP BY CASE (('')OR(rt1.c3))  WHEN t0.c0 THEN (rt1.c3 IN (rt1.c1)) END, (((vt0.c1)) NOT BETWEEN ((((rt1.c0)>>(NULL)))) AND ((DATETIME(vt0.c0, rt1.c3, rt1.c0)))), (- ((t0.c0 IN ()))) HAVING ((vt0.c1)+('H7'));SELECT ALL (((rt1.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN (CAST(rt1.c0 AS NUMERIC))) FROM rt1;SELECT ALL ((((rt1.c1, v0.c0, 0xffffffff9c7c324e))<((rt1.c0, 0.39293218285963316, rt1.c3))) IN ('J+[')) FROM v0, vt0 WHERE (((((((NULL)AND(0xffffffff8b868dc2)))AND('q[AveC	'))) IS TRUE));SELECT DISTINCT COUNT(*) OVER () FROM rt1, vt0, t0; -- 0ms;
SELECT (vt0.c0 IN ()) COLLATE NOCASE FROM vt0 NOT INDEXED, t0, v0 INTERSECT SELECT (AVG(t0.c0) IN ()) FROM t0, vt0, rt1; -- 1ms;
SELECT DISTINCT x'e1db5dba', ((json_type(rt1.c1))IS((('PFʋ') ISNULL))), 0Xffffffffbc9ea2d7 FROM v0, vt0 WHERE (((((NOT (NULL))))<=(((((NULL)) BETWEEN (('654858050')) AND (('Uy6'))))))) ORDER BY CASE t0.c0 COLLATE BINARY  WHEN CAST(-1614552032 AS BLOB) THEN rt1.c1 END DESC  NULLS FIRST LIMIT 340883625;SELECT ((('3') BETWEEN (rt1.c1) AND (rt1.c3)) IN ()) FROM rt1, vt0 WHERE (((('')IS NOT(NULL)) IN ())); -- 0ms;
SELECT ALL SUM(((((v0.c0)AND(x'')))AND(t0.c0))) FILTER(WHERE 0.6270907510725022 COLLATE BINARY) OVER () FROM rt1;SELECT ALL MIN((('q[Avee	') ISNULL)) FROM vt0, rt1; -- 0ms;
SELECT (~ (CAST(rt1.c3 AS TEXT))), CASE WHEN rt1.c0 THEN v0.c0 ELSE vt0.c1 END COLLATE BINARY, (((NULL))>=((((((vt0.c0)OR(rt1.c0)))AND(v0.c0))))) FROM vt0, t0, v0 WHERE ('1930885107');SELECT DISTINCT (((((rt1.c0))<((rt1.c1))))OR((rt1.c0 IN ()))), (((rt1.c2 IN ()))==(((rt1.c0) ISNULL))), ((CAST(t0.c0 AS REAL)) BETWEEN (((0.23110838536228728)<(rt1.c1))) AND ((vt0.c1 IN ()))) FROM rt1, v0, vt0, t0; -- 0ms;
SELECT DISTINCT (((- (rt1.c3))) NOT NULL) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT rt1.c3, CASE CAST(vt0.c1 AS REAL)  WHEN (rt1.c0 IN ()) THEN (- (vt0.c1)) WHEN x'8191' THEN ((vt0.c1)AND(rt1.c3)) WHEN CAST(vt0.c1 AS REAL) THEN ((((t0.c0)OR(vt0.c0)))OR(v0.c0)) ELSE ((vt0.c1)<>(rt1.c2)) END, (((vt0.c0)) NOT BETWEEN ((CASE vt0.c1  WHEN rt1.c0 THEN vt0.c1 WHEN t0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c0 END)) AND (((rt1.c0 IN (v0.c0))))) FROM vt0, t0 GROUP BY (+ (STRFTIME(rt1.c3, vt0.c0, x'e442'))), (((((t0.c0)OR(t0.c0)))AND(v0.c0)) IN ()), (((v0.c0 IN ()))LIKE(((0x670b199a)%(rt1.c3))));SELECT DISTINCT (~ (CAST(rt1.c0 AS TEXT))) FROM t0, rt1, v0 WHERE ((NOT (((0.4542359704629244) NOTNULL)))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) NOTNULL), COUNT(*) OVER (), 0.6036344107646281 FROM t0; -- 0ms;
SELECT NTILE(((((((((v0.c0)AND(rt1.c1)))OR(vt0.c1)))OR(LIKELIHOOD(v0.c0, 0.38530589541493543))))OR((rt1.c2 IN ())))) OVER () FROM v0, vt0, rt1, t0; -- 4ms;
SELECT DISTINCT ((((((v0.c0)AND('-646366741')))AND(rt1.c3))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (((t0.c0) BETWEEN (v0.c0) AND (v0.c0)))) FROM vt0, v0, rt1, t0 WHERE ((NOT (((0Xf835f96) IS FALSE)))) GROUP BY CHANGES() ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c1) IS TRUE)) AND (CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN 0.2937351167678648 THEN rt1.c0 ELSE t0.c0 END)) DESC, ((((rt1.c0)||(0.5983065821307041))) ISNULL) ASC  NULLS FIRST, t0.c0; -- 6ms;
SELECT (rt1.c1 IN ('j.]3moyzl')) COLLATE NOCASE FROM rt1, t0, v0, vt0; -- 0ms;
SELECT DISTINCT CAST(((rt1.c2)OR(1055211932)) AS BLOB), (((rt1.c2) BETWEEN (t0.c0) AND (rt1.c3)) IN ()), (((((((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))))OR(((rt1.c3)%(rt1.c0)))))AND(CAST(vt0.c1 AS TEXT))) FROM v0, vt0, t0 LEFT OUTER JOIN rt1 ON CAST(rt1.c3 AS BLOB) WHERE ((((NULL IN ()))>(((((((((NULL)AND(0.8357974123960882)))OR(NULL)))AND(x'')))OR('0yfseconds뱴EZ'))))); -- 1ms;
SELECT DISTINCT ((((((v0.c0)AND(t0.c0)))AND(vt0.c1))) BETWEEN (CAST(rt1.c1 AS BLOB)) AND (((vt0.c1)IS NOT(rt1.c1)))) FROM vt0, rt1 LIMIT -515415974 OFFSET -892082336;SELECT ALL (~ (((rt1.c1) ISNULL))) FROM v0, vt0 WHERE (((CAST(-478481422 AS NUMERIC)) IS TRUE));SELECT DISTINCT IFNULL(DISTINCT (((rt1.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt1.c1, t0.c0, rt1.c3)) AND ((t0.c0, v0.c0, rt1.c0))), SUM(t0.c0)) FROM t0, v0;SELECT (~ (CASE rt1.c1  WHEN vt0.c1 THEN rt1.c3 END)) FROM t0, vt0, rt1; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt1, t0, v0, vt0 ORDER BY CASE INSTR(vt0.c1, '-1653068703')  WHEN ((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) THEN '' END  NULLS LAST; -- 7ms;
SELECT DISTINCT (- ((rt1.c0 IN (rt1.c3, x'f9e4')))) FROM v0 LIMIT -786125260;SELECT ALL vt0.c1 FROM v0, t0, rt1;SELECT (- (((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) FROM vt0, rt1;SELECT ALL ((((((v0.c0) NOT NULL))OR((vt0.c1 IN ()))))OR(t0.c0 COLLATE NOCASE)), ((MIN(v0.c0))<=(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))), ((rt1.c2) NOT BETWEEN ('u(x') AND ((((rt1.c2, x'', rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, vt0.c1)) AND ((v0.c0, vt0.c1, rt1.c3))))) FROM v0, rt1, vt0 WHERE (NULL);SELECT DISTINCT TOTAL(x'') OVER () FROM v0, t0, rt1, vt0 WHERE ((((x'' IN (x'5af9'))) IS TRUE)) GROUP BY CASE WHEN (~ (v0.c0)) THEN CAST(rt1.c3 AS INTEGER) WHEN rt1.c2 THEN x'' WHEN v0.c0 THEN (v0.c0 IN ()) ELSE (((v0.c0))>=((rt1.c1))) END, LIKELIHOOD(DISTINCT ((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c0)), 0.44842871437211096), ((NULL) BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))) AND (SQLITE_COMPILEOPTION_GET(t0.c0))); -- 1ms;
SELECT ALL vt0.c1 FROM t0, rt1 WHERE ((((((((NULL)) NOT BETWEEN (('1301057054')) AND ((0.9358877111148818))))OR(0.1619294904432802 COLLATE RTRIM)))AND((((('')OR(-871450266)))OR(NULL))))) ORDER BY rt1.c2 DESC, v0.c0 DESC;SELECT ALL GROUP_CONCAT(TRIM(rt1.c1, vt0.c1)) OVER () FROM vt0, v0;SELECT CUME_DIST() OVER (), CAST(((((((((vt0.c0)AND(rt1.c1)))OR(v0.c0)))OR(0x315ec92c)))AND(vt0.c1)) AS REAL), ((vt0.c1) ISNULL) COLLATE NOCASE FROM vt0 WHERE ((NOT (CAST('-1436851635' AS NUMERIC))));SELECT NTILE(CAST((v0.c0 IN ()) AS TEXT)) OVER (), rtreenode(((rt1.c0)IS NOT(vt0.c1)), ((rt1.c2) ISNULL)), UPPER(DISTINCT ((rt1.c2)-(rt1.c1))) FROM rt1, vt0, v0;SELECT DISTINCT CASE WHEN t0.c0 COLLATE RTRIM THEN ((((rt1.c1)OR(vt0.c1)))OR(rt1.c2)) ELSE (((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) END FROM v0, t0, vt0;SELECT ALL CAST(vt0.c0 COLLATE BINARY AS NUMERIC) FROM t0, v0, rt1, vt0; -- 0ms;
SELECT ALL ((NOT (vt0.c0)) IN ()) FROM rt1, t0, v0 WHERE (((((0.25756783385742077 IN ())))<((((0.13307120471125755)>=(x'')))))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((((vt0.c0)AND(rt1.c3)))AND(x'')))>>(CASE WHEN 'O㱑' THEN rt1.c1 END)), ((((vt0.c0)||(rt1.c0)))-((~ (vt0.c0))))) OVER (), (((~ (vt0.c1))) BETWEEN (x'') AND ((+ (vt0.c0)))), ((((CAST(rt1.c3 AS TEXT))AND((t0.c0 IN (rt1.c1, t0.c0)))))OR((NOT (vt0.c0)))) FROM vt0, t0, rt1, v0 WHERE ((((((0.13128743199508808)OR(0.3938634659580146)))OR('_(%')) IN ())); -- 0ms;
SELECT DISTINCT (~ (7.48354812E8)) FROM v0, rt1 WHERE (CAST(CAST('0.9737414405610052' AS BLOB) AS REAL)) ORDER BY (((- (rt1.c0))) ISNULL) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((IFNULL(vt0.c1, rt1.c2))AND(MAX(rt1.c3))))AND(((vt0.c1)|(rt1.c1)))))AND(MAX(rt1.c0))))OR(CAST(rt1.c0 AS TEXT))) FROM rt1, t0, v0;SELECT 0X71bf6ec6 FROM rt1, t0, vt0, v0 WHERE ((NOT ((((0.8372349301536411))<(('-1343860029')))))); -- 0ms;
SELECT DISTINCT CASE WHEN MAX(v0.c0) THEN ((t0.c0)&(x'')) END, ((rt1.c2 COLLATE BINARY)OR(CAST(vt0.c0 AS INTEGER))), '.b' FROM v0, vt0, t0, rt1; -- 1ms;
SELECT DISTINCT (((((v0.c0, rt1.c3, rt1.c3)) NOT BETWEEN ((vt0.c1, NULL, rt1.c0)) AND ((rt1.c3, rt1.c0, rt1.c0))))|(((((((((NULL)OR(rt1.c1)))OR(v0.c0)))OR(rt1.c0)))AND(rt1.c3)))) FROM rt1, vt0, t0 WHERE (((0.8490511637122081 COLLATE BINARY)>(NULL)));SELECT vt0.c1, '', ((t0.c0) NOT BETWEEN (0.926289883891254) AND (rt1.c2)) COLLATE RTRIM COLLATE NOCASE FROM v0, vt0, t0;SELECT DISTINCT TOTAL(NULL) FROM vt0, rt1, v0, t0; -- 1ms;
SELECT CAST(v0.c0 AS INTEGER) FROM vt0, v0, rt1, t0 WHERE (((((('')OR(0.22115765701067147)))AND(0.5666091880477385)) IN ())); -- 0ms;
SELECT DISTINCT TOTAL((t0.c0 IN ())) FILTER(WHERE NULL COLLATE NOCASE) OVER (), (((t0.c0, vt0.c0, rt1.c3)) NOT BETWEEN ((((((((((rt1.c1)AND(v0.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(v0.c0)), CAST(v0.c0 AS TEXT), ((rt1.c2) NOT NULL))) AND ((LIKELIHOOD(rt1.c0, 0.6846600155617469), (((t0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c2))), ((vt0.c0) IS TRUE)))), MAX(vt0.c1) FROM v0 CROSS JOIN vt0 ON (((- (rt1.c3))) NOT NULL) FULL OUTER JOIN t0 ON INSTR(NULLIF(rt1.c3, rt1.c1), (NOT (vt0.c1))) FULL OUTER JOIN rt1 ON vt0.c1 LIMIT -635780407;SELECT ALL (((vt0.c0) IS FALSE) IN ((rt1.c0 IN ()))) FROM t0, v0, rt1, vt0; -- 0ms;
SELECT ((CAST(rt1.c0 AS INTEGER))==(CASE rt1.c0  WHEN t0.c0 THEN rt1.c3 END)), COUNT(LIKELY(DISTINCT vt0.c0)) OVER (), TOTAL(((((((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c3)))AND(vt0.c1)))OR(rt1.c3)))OR(vt0.c0)))OR(rt1.c2))) OVER () FROM t0, vt0, v0, rt1 WHERE ((('-515415974' COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT DENSE_RANK() OVER (), (- (GROUP_CONCAT(v0.c0))), IFNULL(DISTINCT (((v0.c0, rt1.c3, rt1.c2)) NOT BETWEEN ((NULL, rt1.c0, vt0.c1)) AND ((rt1.c1, rt1.c3, vt0.c0))), CASE WHEN '-1350101770' THEN rt1.c3 WHEN rt1.c3 THEN x'' WHEN 'Se' THEN t0.c0 ELSE vt0.c0 END) FROM rt1;SELECT DISTINCT ((((rt1.c0)*(v0.c0))) BETWEEN (CAST(rt1.c0 AS REAL)) AND (CAST(vt0.c0 AS INTEGER))), ((CAST(vt0.c0 AS BLOB)) BETWEEN (vt0.c0) AND ((NOT (rt1.c2)))), ((CASE rt1.c2  WHEN vt0.c1 THEN rt1.c3 ELSE rt1.c2 END) IS TRUE) FROM v0;SELECT DISTINCT ((((((vt0.c0)GLOB(v0.c0)))OR((((t0.c0))<((rt1.c1))))))OR(0Xfffffffff8054d12)) FROM t0, v0 NOT INDEXED;SELECT ALL (- (MAX(rt1.c0))), '0.5828676882387224', (((0.3216617395526299)) BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) FROM rt1, v0, vt0;SELECT CAST(rt1.c3 COLLATE BINARY AS INTEGER), ((((((rt1.c1)>=(t0.c0)))OR(((rt1.c0) NOTNULL))))OR(((((((((rt1.c3)OR(vt0.c0)))OR(rt1.c3)))OR(rt1.c1)))OR(v0.c0)))), ((((((((GROUP_CONCAT(rt1.c3))AND(CASE WHEN vt0.c1 THEN rt1.c1 ELSE rt1.c3 END)))AND(((t0.c0)>(rt1.c2)))))OR(LENGTH(vt0.c1))))OR(((rt1.c3) NOT BETWEEN (rt1.c3) AND (vt0.c1)))) FROM t0, rt1, vt0, v0; -- 2ms;
SELECT DISTINCT (- (CASE WHEN rt1.c3 THEN rt1.c0 ELSE v0.c0 END)) FROM v0, t0, vt0, rt1 WHERE ((NOT (((x'') NOT BETWEEN (NULL) AND (0.24056075612642447))))); -- 0ms;
SELECT DISTINCT ((('', vt0.c0, v0.c0)) BETWEEN ((((t0.c0)IS(rt1.c2)), (rt1.c2 IN ()), UNICODE(vt0.c0))) AND ((((((NULL)OR(vt0.c1)))OR(rt1.c0)), CASE WHEN rt1.c1 THEN vt0.c0 END, CAST(v0.c0 AS INTEGER)))), ((rt1.c0)<=(SUM(rt1.c3))), AVG((vt0.c1 IN ())) COLLATE NOCASE FROM v0, vt0, t0;SELECT DISTINCT (- (CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 END)) FROM v0;SELECT DISTINCT vt0.c0, (+ (rt1.c3 COLLATE NOCASE)), ((((NULL)OR(((((rt1.c0)OR(rt1.c0)))AND(v0.c0)))))AND((t0.c0 IN ()))) FROM v0, t0, vt0, rt1; -- 0ms;
SELECT (((CAST(vt0.c1 AS NUMERIC)))=((vt0.c0))) FROM rt1 LIMIT -112801480;SELECT DISTINCT MIN(MIN((((vt0.c0, rt1.c2, vt0.c1)) BETWEEN (('%	Mx膄⽦->', '', v0.c0)) AND ((0.8275948477377187, v0.c0, vt0.c0))))), CAST((rt1.c3 IN (vt0.c0)) AS REAL), (rt1.c3 IN ()) COLLATE BINARY FROM rt1, vt0, t0, v0;SELECT ALL (((((((((+ (rt1.c1)))AND(load_extension(t0.c0))))AND((((rt1.c1, rt1.c0, rt1.c3, vt0.c0, vt0.c1))<((vt0.c1, rt1.c0, v0.c0, t0.c0, vt0.c1))))))AND(((vt0.c1)/(v0.c0)))))AND((- (v0.c0)))) FROM t0, vt0, rt1, v0;SELECT GROUP_CONCAT(((rt1.c0)GLOB(x'1b6d'))) OVER ( ORDER BY rt1.c3 COLLATE RTRIM ASC) FROM vt0, v0 NOT INDEXED, t0 WHERE (((((NULL)>(0.23416050115082665)))OR((~ (0Xffffffffd8235e50)))));SELECT DISTINCT ((((rt1.c2) BETWEEN (t0.c0) AND (NULL))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(rt1.c2))) AND (((rt1.c3)OR(rt1.c3)))) FROM v0 UNION ALL SELECT rt1.c0 FROM t0, vt0, v0 ORDER BY (((((rt1.c0)AND(rt1.c2)))AND(rt1.c3)) IN ((((rt1.c3))>=((rt1.c1))), v0.c0));SELECT (((((rt1.c1)<(rt1.c0))))>=((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0))))) FROM t0, v0, rt1, vt0 WHERE (((CAST(NULL AS REAL))<<(((0xffffffffc9ba24f0)&(0.6111647779238412))))) ORDER BY rt1.c1 ASC  NULLS LAST, ((((rt1.c3)+(v0.c0))) BETWEEN (((v0.c0)>(vt0.c1))) AND (x'c658')), ((((rt1.c1)&(rt1.c3)))!=((NOT (t0.c0)))) ASC; -- 0ms;
SELECT DISTINCT (((((v0.c0))>((vt0.c0))))AND(COUNT(*))), vt0.c1, CAST(((NULL) NOTNULL) AS TEXT) FROM t0 ORDER BY ((rt1.c0) BETWEEN (vt0.c1) AND (rt1.c1)) COLLATE NOCASE ASC  NULLS FIRST;SELECT DISTINCT NULL FROM rt1 WHERE (((CAST(0.9479938975398684 AS TEXT)) NOTNULL)) GROUP BY vt0.c1, ((((v0.c0) IS FALSE)) NOT BETWEEN (((((rt1.c0)OR(rt1.c0)))AND(rt1.c2))) AND (((rt1.c2) NOT BETWEEN (rt1.c3) AND (vt0.c0)))), (((((- (vt0.c0)))AND(CAST(v0.c0 AS TEXT))))AND(rt1.c2 COLLATE NOCASE)) HAVING (('w?') NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN rt1.c2 END) AND (((t0.c0) NOTNULL))) ORDER BY (((~ (rt1.c1)))=(((t0.c0)<=(rt1.c2))))  NULLS FIRST;SELECT ALL CAST(0.5985720363474294 AS NUMERIC) FROM t0 WHERE ((((-7.38630877E8 COLLATE BINARY))<((0.1782866219034538)))); -- 1ms;
SELECT DISTINCT CASE ((vt0.c1) BETWEEN (rt1.c2) AND (vt0.c1))  WHEN CASE 24992799  WHEN vt0.c0 THEN rt1.c2 END THEN (rt1.c2 IN ()) WHEN (- ('0.9000100038023896')) THEN CAST(rt1.c3 AS INTEGER) WHEN (v0.c0 IN ()) THEN ((((((((t0.c0)OR(v0.c0)))OR(rt1.c2)))OR(t0.c0)))OR(rt1.c3)) END FROM rt1, v0, t0 GROUP BY (NOT ((('-1345884669')>(v0.c0))));SELECT ALL COUNT(*) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (+ ((+ (v0.c0)))) FROM v0, t0, rt1 WHERE (TRIM(DISTINCT MAX(x'712a7645', NULL))) ORDER BY v0.c0 ASC  NULLS LAST; -- 0ms;
SELECT ALL ((CASE t0.c0  WHEN NULL THEN vt0.c0 ELSE rt1.c1 END) BETWEEN (rt1.c3 COLLATE NOCASE) AND ((((NULL, rt1.c0, vt0.c0)) BETWEEN ((rt1.c0, v0.c0, '-742196001')) AND ((v0.c0, '', rt1.c0))))), DENSE_RANK() OVER ( GROUPS BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c2) AND (v0.c0)) IN ()) PRECEDING AND  UNBOUNDED FOLLOWING), (((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((('(?l')AND(t0.c0))) AND (((t0.c0)-(vt0.c0)))) FROM rt1 WHERE (IFNULL(UNLIKELY(NULL), ((NULL) NOT BETWEEN ('691316849') AND (1.477859366E9))));SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)))+(((rt1.c0) BETWEEN (vt0.c1) AND (rt1.c1)))) FROM rt1;SELECT DISTINCT LTRIM(((vt0.c0)>>(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) FROM rt1, t0, v0, vt0 WHERE ((('Qy''XcY.i' COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST(((v0.c0)IS NOT(rt1.c2)) AS TEXT) FROM v0, t0 WHERE ((- (((((0X535cdda4)OR(x'')))OR(x'')))));SELECT DISTINCT (((NOT (0X32d1da28))) NOTNULL) FROM rt1 WHERE (CAST((((x'45fa', '2053405361', x''))==((x'', NULL, 0.7467345872026773))) AS TEXT)); -- 0ms;
SELECT DISTINCT (('546537599')|(CAST(rt1.c0 AS INTEGER))) FROM rt1, v0; -- 0ms;
SELECT ((ABS(vt0.c1))+(((vt0.c1) BETWEEN (t0.c0) AND (rt1.c1)))) FROM v0, vt0, t0 WHERE (((NULL) IS FALSE));SELECT DISTINCT (((((rt1.c2))>((rt1.c3)))) BETWEEN (t0.c0 COLLATE RTRIM) AND ((rt1.c0 IN ()))) FROM v0 WHERE ((((0.8490511637122081)=(0.7333764182674283)) IN (CAST(NULL AS TEXT))));SELECT DISTINCT CASE SQLITE_VERSION()  WHEN (((v0.c0))>(('330472694'))) THEN ((vt0.c0)OR(rt1.c1)) WHEN vt0.c0 THEN (((rt1.c0, rt1.c2, t0.c0, rt1.c0, rt1.c0)) BETWEEN ((vt0.c1, vt0.c0, rt1.c3, vt0.c0, rt1.c0)) AND ((t0.c0, vt0.c1, rt1.c2, 0.2590906012347415, 0.3047912479573194))) WHEN ((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)) THEN ((rt1.c1)GLOB(vt0.c1)) ELSE ((-6.46366741E8) ISNULL) END, rt1.c2, SUM(x'') OVER ( ROWS  CURRENT ROW) FROM t0, rt1, vt0 WHERE ((('-275432060') IS FALSE));SELECT DISTINCT ((((((((CAST(v0.c0 AS BLOB))AND((~ (vt0.c1)))))AND(((rt1.c0)IS(rt1.c2)))))OR('')))AND((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))))) FROM v0, vt0, t0 WHERE (0X1f9c42af);SELECT ALL ((PRINTF(rt1.c1)) NOT BETWEEN (v0.c0) AND (((rt1.c1) BETWEEN (v0.c0) AND (rt1.c1)))) FROM v0;SELECT ALL ((((t0.c0) BETWEEN (x'') AND (vt0.c0)))<=((((rt1.c2, rt1.c0, rt1.c2))>=((rt1.c1, vt0.c0, vt0.c1))))), MIN((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c1)) AND ((rt1.c3, v0.c0, rt1.c2)))), MIN(GROUP_CONCAT(((vt0.c0)OR(0.6303227117189106)))) FROM vt0, rt1 WHERE ((((((((((('-319400477')==(0.6443460284804454)))AND(((('0.5949506894849398'))<((x'65c3'))))))OR(NULLIF(x'', 7.831199E7))))OR(IFNULL('-1058641189', 'i?P*6_->X'))))AND(CAST('-478481422' AS INTEGER)))) ORDER BY ((0.3672125417885236)+(ABS(v0.c0))), (('he2]')&(CASE WHEN rt1.c3 THEN t0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN 0.440808053615488 THEN vt0.c0 ELSE vt0.c0 END));SELECT DISTINCT SUM((- (rt1.c0))) FROM rt1 ORDER BY CAST((((rt1.c0, rt1.c3, 342603773)) BETWEEN ((rt1.c2, rt1.c2, vt0.c0)) AND ((vt0.c0, vt0.c0, rt1.c1))) AS TEXT) DESC  NULLS FIRST;SELECT DISTINCT ((rt1.c1) BETWEEN (vt0.c1) AND (t0.c0)) COLLATE NOCASE FROM t0, v0, rt1, vt0 ORDER BY (~ ((rt1.c0 IN ()))) ASC  NULLS LAST, NULL ASC  NULLS LAST; -- 2ms;
SELECT DISTINCT CASE WHEN 0xffffffffde142a3b THEN TOTAL(NULL) ELSE CASE WHEN rt1.c1 THEN vt0.c0 WHEN t0.c0 THEN 0.7592369213947393 WHEN 78311990 THEN rt1.c1 ELSE rt1.c3 END END, CAST(((vt0.c0)-(rt1.c0)) AS NUMERIC), (+ ((- (vt0.c0)))), MAX(((vt0.c0) IS FALSE), COUNT(t0.c0)), ((((CASE rt1.c1  WHEN rt1.c2 THEN 0Xffffffffdecc03ea END)AND(CAST(vt0.c1 AS INTEGER))))OR(((((t0.c0)OR(rt1.c0)))OR(x'')))) FROM t0;SELECT ALL GROUP_CONCAT(((vt0.c1) NOT NULL)) FROM v0, vt0, t0 NOT INDEXED WHERE (((CASE WHEN '-384708303' THEN 1503829216 WHEN '-1697575297' THEN 0.12760046786924129 WHEN '215529298' THEN x'' END) NOTNULL)) ORDER BY (((- ('')))OR((((t0.c0, rt1.c1, rt1.c0))<>((vt0.c0, t0.c0, vt0.c1))))), (('-260267898') IS FALSE)  NULLS LAST;SELECT DISTINCT COALESCE(rt1.c3 COLLATE NOCASE, t0.c0) FROM vt0, v0, rt1, t0; -- 0ms;
SELECT ((((v0.c0) BETWEEN (t0.c0) AND (rt1.c0))) BETWEEN (((t0.c0) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC))), FIRST_VALUE(CAST((vt0.c0 IN ()) AS REAL)) OVER (), ((t0.c0 COLLATE RTRIM)/(rt1.c3 COLLATE RTRIM)), CASE WHEN t0.c0 THEN rt1.c0 END COLLATE BINARY, ((rt1.c3 COLLATE RTRIM)<>(CAST(rt1.c2 AS NUMERIC))) FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST, 0.8564312449608169 ASC, vt0.c1 DESC;SELECT DISTINCT (((vt0.c1)) BETWEEN ((rt1.c2)) AND (((((vt0.c0))<=((rt1.c0)))))) FROM vt0, rt1, v0, t0 WHERE ((((-2025514831) ISNULL) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN (('cS(') BETWEEN (rt1.c3) AND (rt1.c0)) THEN (((0.5219995966791384, rt1.c1, v0.c0)) BETWEEN ((v0.c0, 0.2628372625080615, v0.c0)) AND ((v0.c0, rt1.c0, vt0.c1))) WHEN (- (rt1.c3)) THEN ((rt1.c2)>(vt0.c1)) WHEN CASE 0.9167068298814913  WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c1 END THEN (((vt0.c0, 'DMT', rt1.c1)) BETWEEN ((rt1.c1, rt1.c0, rt1.c2)) AND ((vt0.c0, vt0.c0, rt1.c1))) WHEN ((x'') NOT BETWEEN (v0.c0) AND (rt1.c2)) THEN ((rt1.c3) NOT NULL) WHEN ((0Xfffffffffbe680db)AND(t0.c0)) THEN ((rt1.c3) ISNULL) WHEN v0.c0 THEN ((v0.c0)GLOB(rt1.c3)) WHEN ((((vt0.c0)OR(rt1.c2)))AND(NULL)) THEN ((((t0.c0)OR(vt0.c0)))OR(rt1.c1)) ELSE (t0.c0 IN ()) END FROM t0, rt1, vt0 WHERE ((('a\4') BETWEEN ('1477859366') AND ('-699950757')) COLLATE BINARY) GROUP BY ((((rt1.c2) BETWEEN (t0.c0) AND (v0.c0)))GLOB(0.8250348794668515 COLLATE RTRIM));SELECT ALL (CAST(t0.c0 AS BLOB) IN (CAST(t0.c0 AS REAL))) FROM rt1 WHERE (((((x'8f4e') NOTNULL)) NOT BETWEEN (0.24402212998729345 COLLATE BINARY) AND (NULL COLLATE BINARY)));SELECT DISTINCT ((((((rt1.c0) ISNULL))AND(1714678464)))OR(((vt0.c0)IS NOT(t0.c0)))) FROM t0, v0 WHERE (((((((((((((CASE WHEN NULL THEN NULL END)OR((('-1345884669') BETWEEN ('⪥w') AND (0.3584375421224488)))))AND(CASE 0.5322771010256756  WHEN 0xffffffffa663176a THEN 0Xffffffffac2b37cb ELSE 'y,x1nlV?' END)))OR('e,' COLLATE BINARY)))AND(CASE WHEN x'' THEN 1784973233 ELSE x'' END)))AND(LIKELIHOOD(DISTINCT '-798075202', 0.8701334883119023))))OR(CASE -1051478450  WHEN x'' THEN 301884585 WHEN 0.057964165014317004 THEN '282494919' WHEN x'' THEN 0.27167461956948247 ELSE 0x39511169 END)));SELECT DISTINCT ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)%(LIKE(rt1.c1, t0.c0))) FROM rt1, v0, vt0, t0 WHERE ((((NOT ('0.9733907708002285'))) IS FALSE)); -- 1ms;
SELECT ALL ((TYPEOF(rt1.c1))<((t0.c0 IN ()))) FROM v0, t0;SELECT CASE WHEN ((rt1.c0)>=(rt1.c2)) THEN ((v0.c0)>=(vt0.c0)) END, (- (rt1.c1)), ((rt1.c2)LIKE(NULL)) COLLATE BINARY COLLATE NOCASE FROM v0;SELECT (((x'0526'))>((CAST(rt1.c2 AS REAL)))) FROM vt0;SELECT DISTINCT ((v0.c0 COLLATE RTRIM) NOT NULL), ((((((((((((((rt1.c2)OR(vt0.c1)))AND(rt1.c0)))AND(t0.c0)))AND(v0.c0)))AND('443522090')))OR(rt1.c0))) NOT BETWEEN (GROUP_CONCAT(rt1.c2)) AND (-1244684174)), AVG(rt1.c0) COLLATE NOCASE COLLATE NOCASE FROM rt1, vt0, t0, v0 WHERE (((((0.8743981162926202)<<(x''))) NOT NULL)); -- 3ms;
SELECT ALL NULL FROM rt1, v0, vt0, t0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST, ((((DATE(vt0.c0, rt1.c3, vt0.c1, v0.c0, rt1.c2))AND((((vt0.c1, rt1.c3, vt0.c0))>=((rt1.c3, v0.c0, v0.c0))))))AND((~ (v0.c0)))) DESC  NULLS FIRST, (((rt1.c0)) BETWEEN (((rt1.c3 IN (v0.c0, vt0.c0)))) AND ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c3))))) ASC  NULLS FIRST; -- 12ms;
SELECT (((v0.c0)IS NOT(rt1.c1)) IN ()), ((CAST(rt1.c2 AS REAL)) ISNULL), AVG(((((vt0.c1)OR(rt1.c0)))AND(rt1.c0))) OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP) FROM rt1, vt0, t0, v0 WHERE (((((((('L堦f4 	iW')) NOT BETWEEN ((0.104176389540106)) AND ((0x1a28d7e6))))OR(NULL COLLATE BINARY)))AND(CASE WHEN '0.5996657243316886' THEN 0.7637161022394983 END))); -- 3ms;
SELECT DISTINCT rt1.c0 FROM vt0, rt1; -- 0ms;
SELECT DISTINCT NTILE(t0.c0) OVER () FROM t0 WHERE (((((('-867001793'))!=((-956310922))))>((('''r.\nhW80驵') NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT CASE MAX(rt1.c2)  WHEN CAST(t0.c0 AS NUMERIC) THEN json_array(rt1.c0, vt0.c0) WHEN 0.7702622079337308 THEN (- (rt1.c0)) WHEN ((t0.c0) IS TRUE) THEN '-0.0' ELSE (((vt0.c1, rt1.c2, v0.c0))<((rt1.c2, rt1.c0, rt1.c1))) END FROM vt0 WHERE (CASE ((x'') NOT BETWEEN (NULL) AND (0.5622972154863278))  WHEN ((NULL) IS TRUE) THEN (('1656443484') NOT BETWEEN (0.9360721904238039) AND (0.6443460284804454)) WHEN 0.6379346265819973 COLLATE BINARY THEN (((0.6666058163103772)) NOT BETWEEN ((NULL)) AND ((''))) WHEN (-1.924253043E9 IN ()) THEN ((NULL)&('F''1e500000qJSP')) WHEN ((('', 0.3493212535433299, '')) NOT BETWEEN ((0.7348202556229866, NULL, x'4b82bc7b')) AND ((0.39278562375898773, 1538777176, '330472694'))) THEN -1.638105992E9 WHEN NULL COLLATE NOCASE THEN (0Xffffffffb065b47c IN ()) ELSE CAST(NULL AS NUMERIC) END);SELECT ((('0' IN ()))>(((((t0.c0)AND(rt1.c3)))OR(vt0.c1)))), ((rt1.c0 IN ()) IN (((rt1.c3) IS FALSE), ((vt0.c0)*(t0.c0)))), ((((vt0.c0)IS(vt0.c1)))|(((t0.c0) NOT NULL))) FROM v0 WHERE ((((NULL)) BETWEEN (((-4.7677358E7 IN ()))) AND (((((0.7938470543427777, x'1dd7', NULL)) BETWEEN (('TJ', 0.35094132212701634, 0.462286008007989)) AND ((0.6777677801688525, 0Xfffffffff9129e8e, '-569103813')))))));SELECT DISTINCT ((((t0.c0)OR(rt1.c2))) NOTNULL), ((((rt1.c2)IS NOT(vt0.c0)))%((((t0.c0))<>((vt0.c1))))), 0.7118530379777913 FROM rt1 WHERE ((((('1930885107')<=('533073680'))) IS TRUE)) ORDER BY ((-1.343860029E9 IN ()) IN (CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END, ((vt0.c0)%(v0.c0)), ((vt0.c0) NOT BETWEEN (rt1.c2) AND ('ࢯ8')))) ASC, rt1.c1, CASE ((vt0.c0)||(t0.c0))  WHEN (((rt1.c2)) NOT BETWEEN (('66499347')) AND ((v0.c0))) THEN TRIM(v0.c0) WHEN (+ (v0.c0)) THEN ((rt1.c1) IS TRUE) WHEN CAST(rt1.c2 AS BLOB) THEN CAST(vt0.c1 AS REAL) ELSE (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c3))) END;SELECT DISTINCT (((((rt1.c2 IN (rt1.c1, vt0.c0)))OR((((x'')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))))OR(CASE WHEN rt1.c2 THEN vt0.c1 ELSE v0.c0 END)) FROM rt1, v0, vt0, t0 WHERE (RTRIM(NULL COLLATE BINARY)) GROUP BY (((rt1.c3 IN ()))OR(NULL)), (~ (vt0.c1 COLLATE NOCASE)), ((CAST(v0.c0 AS INTEGER))<>(vt0.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT SUM((vt0.c1 IN (2056544335))) OVER ( GROUPS BETWEEN rt1.c0 PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM v0, rt1, t0 WHERE ((((x'')GLOB('缊')) IN ()));SELECT DISTINCT NTH_VALUE(((((vt0.c1) NOTNULL))-(('1743435813' IN (vt0.c0, rt1.c1)))), (((rt1.c0 IN (v0.c0))) BETWEEN (((rt1.c3)GLOB(rt1.c3))) AND (CASE rt1.c2  WHEN 0.5350033659792938 THEN rt1.c2 END))) OVER (), MAX(((rt1.c3)&(vt0.c1))), ((CASE WHEN t0.c0 THEN v0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 END)LIKE(vt0.c0 COLLATE NOCASE)) FROM vt0, rt1, v0 WHERE (x'');SELECT ((LOWER(vt0.c1)) NOT BETWEEN (((rt1.c3) ISNULL)) AND (((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) FROM vt0, rt1;SELECT (((vt0.c0 IN ()))AND(COUNT(rt1.c3))) FROM v0, vt0 INNER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM)&(((vt0.c1)|('-2067336393')))) WHERE (CASE (NULL IN (x'a4c9'))  WHEN (+ (x'')) THEN CASE x''  WHEN 0.3726916978462649 THEN 0X11fe64a9 END END); -- 1ms;
SELECT CASE ((v0.c0)+(v0.c0))  WHEN (rt1.c1 IN ()) THEN '' WHEN CAST(vt0.c1 AS INTEGER) THEN rt1.c0 COLLATE NOCASE WHEN -710030463 THEN CHAR(rt1.c3) ELSE v0.c0 COLLATE RTRIM END FROM vt0, rt1, v0 WHERE ((((-2.074532217E9 COLLATE RTRIM))<((CASE WHEN -9.2575986E7 THEN '1040413930' ELSE 0.6680688093943626 END)))) LIMIT -1856104805 OFFSET -256426199; -- 0ms;
SELECT ALL ((((rt1.c0)<<(v0.c0)))LIKE(LIKELIHOOD(DISTINCT t0.c0, 0.8143193931671239))), (((((((v0.c0, vt0.c0, rt1.c3)) NOT BETWEEN ((v0.c0, x'', rt1.c0)) AND ((rt1.c2, rt1.c3, rt1.c1))))OR(CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 END)))AND(MIN(vt0.c1))), (((vt0.c1)) NOT BETWEEN ((LOWER(v0.c0))) AND ((((vt0.c1)IS(v0.c0))))) FROM rt1, t0, v0, vt0; -- 1ms;
SELECT 0.751071438535423, COUNT(*) FILTER(WHERE (+ (NULL COLLATE BINARY))) OVER (), (+ (((rt1.c0)!=(t0.c0)))) FROM t0, vt0 WHERE (((((((0X5a59fa36)=(0.8585289113234972)))AND(0.15617634822387128 COLLATE RTRIM)))AND(((('n.n歉X[F')) BETWEEN (('7-\ny7')) AND ((0.6254460334973742))))));SELECT DISTINCT (((- (rt1.c2))) BETWEEN ('{(G%}\W8|G') AND (CAST(rt1.c1 AS INTEGER))) FROM v0, t0, vt0 ORDER BY (vt0.c0 IN (rt1.c2 COLLATE RTRIM)) DESC  NULLS LAST, (((~ (vt0.c0))) NOT NULL), ((vt0.c0) BETWEEN (((t0.c0)<<(rt1.c3))) AND ((NOT (v0.c0)))) ASC  NULLS LAST;SELECT ((HEX(DISTINCT rt1.c1))IS(((((vt0.c0)OR(rt1.c0)))AND(rt1.c3)))) FROM v0, rt1;SELECT (((((((rt1.c0, vt0.c1, rt1.c0, vt0.c1, v0.c0)) BETWEEN ((vt0.c0, rt1.c2, rt1.c3, rt1.c2, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, rt1.c1))))OR(rt1.c0)))OR(vt0.c1 COLLATE RTRIM)) FROM rt1, vt0, t0 WHERE (((((((((((0.5229673981639971)AND(0Xffffffffdef54580)))OR(0x34892aa5)))AND(-1778592209)))OR('gUXV/Y㙶p')))+((',w' IN ()))));SELECT DISTINCT NTILE(((CAST(v0.c0 AS TEXT)) BETWEEN (vt0.c1) AND (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0))))) OVER (), t0.c0, LOWER((NOT (rt1.c0))) FROM vt0, v0 WHERE ((~ ((('650340752') IS TRUE))));SELECT (('')>(AVG(vt0.c0))), CASE CASE rt1.c2  WHEN 1.39859498E9 THEN rt1.c3 ELSE v0.c0 END  WHEN ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN CAST(x'98e1' AS INTEGER) END, ((AVG(vt0.c0))&(CAST(rt1.c0 AS INTEGER))) FROM v0, t0;SELECT DISTINCT COUNT((rt1.c2 IN ())) OVER ( ORDER BY UPPER(vt0.c0 COLLATE NOCASE)), LEAD((((((((vt0.c0))>((t0.c0))))OR((NOT (vt0.c0)))))AND(rt1.c0 COLLATE BINARY)), json_array((- ('')), vt0.c0 COLLATE BINARY), ((vt0.c0)>>(x'')) COLLATE BINARY) OVER (), LOWER(((v0.c0)==(rt1.c0))) FROM v0, rt1, t0, vt0 LIMIT 1881461596; -- 12ms;
SELECT DISTINCT SUM(((v0.c0)OR(rt1.c1))) OVER () FROM vt0, rt1, v0; -- 1ms;
SELECT DISTINCT ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0))) BETWEEN (((rt1.c1) ISNULL)) AND (((t0.c0) NOT BETWEEN (vt0.c1) AND (x'')))) FROM v0;SELECT ALL CAST(CASE rt1.c1  WHEN rt1.c3 THEN vt0.c1 END AS INTEGER) FROM t0 ORDER BY ((0.7520319245161333)+(vt0.c0));SELECT (((v0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((rt1.c2)!=(vt0.c1))))), (LIKELY(rt1.c2) IN ((~ (vt0.c0)))), (((((0.5984337584324122))<((t0.c0))))-(x'f10a')) FROM t0, rt1, v0 WHERE (NULL);SELECT CAST(vt0.c1 AS NUMERIC) COLLATE BINARY FROM vt0, rt1, t0, v0; -- 0ms;
SELECT DISTINCT MIN(((vt0.c1)OR(rt1.c0))) FROM rt1, v0, vt0, t0; -- 1ms;
SELECT DISTINCT ((GLOB(v0.c0, rt1.c1))IS NOT(t0.c0 COLLATE RTRIM)) FROM v0, rt1 WHERE (((CASE '-968550500'  WHEN NULL THEN NULL END)<<(CAST(-881514628 AS INTEGER)))) GROUP BY ((((((rt1.c1)AND(t0.c0)))AND(rt1.c1)))<=(((t0.c0)|(vt0.c1)))) HAVING rt1.c3 COLLATE BINARY COLLATE RTRIM;SELECT DISTINCT CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt0.c1))  WHEN ((rt1.c0)>=(rt1.c0)) THEN ((t0.c0)>=(vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN MIN(rt1.c0) WHEN CASE WHEN rt1.c3 THEN '691316849' WHEN rt1.c3 THEN v0.c0 WHEN v0.c0 THEN t0.c0 ELSE vt0.c1 END THEN ((((t0.c0)OR(rt1.c2)))AND(rt1.c3)) END FROM vt0 WHERE (CHAR(0.9897769556679841) COLLATE NOCASE);SELECT DISTINCT CAST((((rt1.c3, rt1.c0, rt1.c0))>=((v0.c0, vt0.c1, rt1.c3))) AS BLOB) FROM rt1 WHERE ((((((((((('647170187') BETWEEN (NULL) AND (0.9493464747673838)))OR((x'' IN (899507021)))))AND((('904640852')||(x'eecd')))))AND(CAST(NULL AS TEXT))))OR(CAST('1930885107' AS TEXT)))) GROUP BY CASE WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN ((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END;SELECT DISTINCT ((x'' COLLATE RTRIM) IS TRUE), rt1.c1, ((((vt0.c0) ISNULL)) BETWEEN (SUM(rt1.c2)) AND ((v0.c0 IN (rt1.c0, rt1.c0)))) FROM vt0 LIMIT 828295468;SELECT DISTINCT TOTAL(HEX(DISTINCT rt1.c0)) OVER (), SUM(((rt1.c2) BETWEEN (vt0.c1) AND (rt1.c1))) OVER (), ((((v0.c0)OR(rt1.c3)))AND(rt1.c3)) COLLATE NOCASE FROM t0, rt1 WHERE (((TRIM('j.]3MOYZL', '')) ISNULL));SELECT DISTINCT CAST(PRINTF(v0.c0, 0x24e2a749, v0.c0) AS INTEGER), MIN(CAST(rt1.c3 AS BLOB)), (((rt1.c0)IS NOT(rt1.c2)) IN ()) FROM t0 GROUP BY ((json_remove(v0.c0, vt0.c0)) NOT BETWEEN (rt1.c2) AND (t0.c0));SELECT CASE WHEN ((v0.c0) IS TRUE) THEN NULL WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN (NOT (rt1.c0)) THEN (rt1.c0 IN (rt1.c2)) ELSE ('ev0' IN ()) END, ((((rt1.c3) IS TRUE))>>(((rt1.c2)/(vt0.c0)))), (t0.c0 COLLATE NOCASE IN ()), COUNT(CASE v0.c0  WHEN 0.6666058163103772 THEN vt0.c1 ELSE rt1.c2 END) OVER (), ((((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c1)))>>(CASE v0.c0  WHEN v0.c0 THEN rt1.c2 END)) FROM vt0, rt1, v0 WHERE (((CAST('' AS REAL)) IS TRUE)); -- 0ms;
SELECT DISTINCT (v0.c0 IN (((rt1.c1) IS TRUE))) FROM rt1 WHERE ((((2.088427925E9 IN ())) NOT BETWEEN (((NULL) BETWEEN ('') AND ('423074421'))) AND ((('Cዊva') BETWEEN (-7.38630877E8) AND (x''))))) LIMIT -544772880 OFFSET -697417948;SELECT DISTINCT rt1.c2 FROM v0, vt0 WHERE (NULL);SELECT ALL (((((rt1.c1, vt0.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, t0.c0, t0.c0)) AND ((t0.c0, rt1.c0, rt1.c3))))=(((rt1.c0) NOT BETWEEN (x'') AND (rt1.c0)))) FROM rt1;SELECT DISTINCT ((CASE rt1.c0  WHEN t0.c0 THEN vt0.c1 ELSE rt1.c2 END)GLOB(t0.c0)), ((rt1.c2) NOT NULL) COLLATE BINARY, rt1.c2 FROM rt1, t0, v0, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), (~ (((vt0.c0) ISNULL))), TOTAL(((rt1.c1) NOTNULL)) OVER (), ((((((((CASE WHEN v0.c0 THEN rt1.c2 ELSE rt1.c3 END)OR((rt1.c0 IN ()))))AND(((vt0.c1)-(vt0.c0)))))AND(CASE WHEN rt1.c3 THEN rt1.c0 END)))AND((((rt1.c0, t0.c0, rt1.c1)) BETWEEN (('A8', rt1.c1, rt1.c0)) AND ((rt1.c0, t0.c0, v0.c0))))), t0.c0 FROM vt0, rt1, v0 WHERE ((((0xffffffff9b33f625, '', x'', 0.04334268646767003, 0.3957051768136004)) BETWEEN (((- (x'1ac70104')), CASE WHEN NULL THEN 0.6777677801688525 WHEN x'90aa' THEN 0.06433109720802044 WHEN 0.2284151735770903 THEN '-908568163' END, (-4.78364556E8 IN ()), ((((x'321d')OR('1139739740')))OR(484471812)), CAST(858328420 AS REAL))) AND (((((x'', '', 0.48636056011509476)) BETWEEN ((x'3b6d', 0.04508274252501787, x'')) AND (('3', 0X11e095e8, ''))), ((((((((x'')OR(0.4994279843439686)))AND(x'')))OR('姎]')))AND('>A騿R')), x'' COLLATE RTRIM, NULL, CASE WHEN NULL THEN NULL WHEN x'' THEN 'L_' WHEN x'' THEN '1553822324' ELSE x'' END))));SELECT DISTINCT (((t0.c0) ISNULL) IN ()), ((v0.c0 COLLATE RTRIM)GLOB(CAST(rt1.c1 AS NUMERIC))), CASE WHEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 ELSE v0.c0 END THEN (x'' IN ()) END, CASE WHEN ((((v0.c0)OR(rt1.c3)))OR('㮽b')) THEN v0.c0 COLLATE NOCASE END, ((((((((TYPEOF(rt1.c2))OR(0xffffffff9ad10e7f)))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))))AND(((rt1.c2) NOT NULL))))OR(((rt1.c1)<=(rt1.c2)))) FROM vt0, t0;SELECT DISTINCT CAST(NULL AS BLOB) FROM vt0, v0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c3) BETWEEN ('Cj0,') AND (rt1.c0)) THEN (rt1.c2 IN ()) WHEN -1777460024 THEN ((vt0.c0) BETWEEN (rt1.c2) AND (v0.c0)) WHEN (- (0.10782844485131793)) THEN (- (vt0.c0)) ELSE (((rt1.c2, rt1.c0, '1040413930'))>((vt0.c0, vt0.c1, rt1.c2))) END, ((((((vt0.c1)AND(v0.c0)))OR(rt1.c3))) BETWEEN (TRIM(DISTINCT rt1.c2, rt1.c0)) AND (v0.c0)), NTH_VALUE(0.9449053364548367, rt1.c1) OVER () FROM rt1 WHERE (((CAST(0.7200502585707369 AS BLOB))<<((((0.6474588474015486, 2.056325735E9, x''))!=((x'', 0.4187143550531033, x''))))));SELECT vt0.c1 FROM t0, rt1 WHERE (NULLIF(DISTINCT (+ (x'fdd3')), ((0Xffffffffc865566b) IS FALSE)));SELECT ALL TRIM(DISTINCT COUNT(*)) FROM v0, vt0, t0; -- 0ms;
SELECT DISTINCT (((((rt1.c2)AND(661727662)))OR(0.30455610287686496)) IN ()) FROM vt0 WHERE (TRIM(((NULL) NOTNULL))); -- 0ms;
SELECT DISTINCT rt1.c1, rt1.c1, CAST(0.48346344486496284 AS REAL) FROM t0, rt1, v0, vt0 WHERE (CAST(((((((((x'')OR(x'')))OR(x'')))OR(0.34840871719076827)))OR(NULL)) AS NUMERIC)) GROUP BY (((t0.c0 COLLATE RTRIM))<=(((((('0.07223347090338128')AND(rt1.c2)))AND(vt0.c1))))); -- 3ms;
SELECT ALL (((vt0.c1)>=(rt1.c1)) IN ()) FROM t0, rt1, vt0, v0 NOT INDEXED WHERE (UNICODE((('j(')>>(x'f591e1fb')))); -- 0ms;
SELECT COUNT(*) FROM v0; -- 0ms;
SELECT ALL (((((vt0.c0)OR(rt1.c3)))AND(vt0.c1)) IN ()) FROM t0, v0, rt1 WHERE (SQLITE_SOURCE_ID()); -- 1ms;
SELECT CAST(vt0.c1 AS BLOB) COLLATE RTRIM FROM vt0, v0, rt1 LIMIT -1204920345; -- 0ms;
SELECT ALL NTILE((((vt0.c0)<=(rt1.c3)) IN ())) OVER () FROM vt0, v0, rt1 WHERE (0Xffffffffb55e6998) ORDER BY (((CAST(rt1.c3 AS INTEGER)))==((((vt0.c0)IS NOT(rt1.c0)))));SELECT ALL 0.23923819600031582 FROM t0, vt0 WHERE ((((+ (x'')))IS NOT((NOT (x''))))); -- 0ms;
SELECT DISTINCT (+ (rt1.c0 COLLATE RTRIM)) FROM vt0, t0, rt1; -- 0ms;
SELECT DISTINCT ((rt1.c1 COLLATE BINARY)=(((rt1.c2)<<(v0.c0)))), rt1.c2, (((rt1.c0 IN (rt1.c1))) BETWEEN ((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((NOT (t0.c0)))) FROM v0, t0, vt0, rt1 GROUP BY (((rt1.c3) NOT BETWEEN (rt1.c2) AND (v0.c0)) IN ()); -- 2ms;
SELECT MAX(0xffffffff896503e5), LAG(CASE vt0.c1  WHEN (vt0.c0 IN ()) THEN 2127716193 ELSE (NOT (v0.c0)) END, RTRIM(((t0.c0) BETWEEN (t0.c0) AND (vt0.c1))), (((t0.c0)) BETWEEN ((LTRIM(v0.c0))) AND ((((((v0.c0)AND(vt0.c1)))AND(v0.c0)))))) OVER (), ((vt0.c1) ISNULL) FROM t0, vt0, v0 WHERE ((((NULL)) BETWEEN (((((x'e197', 0x613124e9, '5O', x'', x''))<=((NULL, 0Xfffffffffecd5634, '~6', NULL, x'5ada'))))) AND (((('i*')||(x'8b21')))))) LIMIT 1954054268; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt1.c2 IN ())) OVER () FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0) NOT BETWEEN (NULL) AND (rt1.c0)) IN ()), (- (((((((((t0.c0)AND(vt0.c1)))OR(t0.c0)))AND(NULL)))AND(v0.c0)))), (((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))) NOT BETWEEN (((rt1.c3)<=(rt1.c3))) AND (t0.c0)), ((((rt1.c1) NOT NULL))IS NOT(CAST(vt0.c0 AS INTEGER))), ((((((rt1.c0)&(rt1.c0)))OR(vt0.c1 COLLATE NOCASE)))AND(((rt1.c1)>(rt1.c3)))) FROM v0, vt0 WHERE (((x'') NOTNULL) COLLATE NOCASE);SELECT ALL (((((((((((((vt0.c1)AND(vt0.c0)))OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c3)))AND(vt0.c0)))AND(rt1.c2)) IN ()) FROM t0, vt0, rt1 WHERE (DATETIME(CASE NULL  WHEN NULL THEN 0.9019037515307906 END, NULL, CAST(1959220391 AS NUMERIC), (('1479213152')<=(x'')), ((((x'')OR(x'')))AND('-1568949832')), x'993e', x'4f1e' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt1, t0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN x'6a26' COLLATE NOCASE THEN ((t0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)) ELSE SUM(v0.c0) END, ((rt1.c2) NOT NULL), ((rt1.c3 COLLATE NOCASE)OR(t0.c0)) FROM v0, t0, vt0 ORDER BY (((NULL, x'', (- (rt1.c0))))<(((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c1))), ((vt0.c1) NOT NULL), CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 END)));SELECT (((((vt0.c0 IN ()))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN NULL THEN t0.c0 WHEN rt1.c3 THEN v0.c0 END)))AND(0.4637365402887482 COLLATE BINARY)) FROM v0, t0, rt1; -- 0ms;
SELECT DISTINCT (((vt0.c1)|(vt0.c1)) IN ()) FROM v0, t0 WHERE (TRIM(DISTINCT CAST('1G' AS BLOB))) GROUP BY CHANGES() HAVING ((CASE rt1.c2  WHEN rt1.c1 THEN t0.c0 END)+((((vt0.c0, 0Xffffffff887c1dae, vt0.c1)) NOT BETWEEN ((vt0.c1, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c3, vt0.c0)))));SELECT ALL NTH_VALUE(CASE (((0Xffffffffaecc2284)) BETWEEN ((vt0.c1)) AND (('-1726992047')))  WHEN ((rt1.c2) NOTNULL) THEN ((rt1.c1)<<(rt1.c3)) END, ((((NOT (vt0.c0))))>=((x'')))) OVER ( ORDER BY (NULL IN ()) COLLATE BINARY DESC  NULLS FIRST) FROM rt1, v0, t0, vt0 WHERE (((((x'bcd0') BETWEEN (0.7214947541831187) AND (NULL))) IS FALSE)) GROUP BY ((((((((rt1.c0)OR(0.8579225458971629)))OR(rt1.c1)))AND(((vt0.c1)>=(rt1.c2)))))OR(((((vt0.c0)AND(t0.c0)))AND(rt1.c0)))) ORDER BY (((rt1.c1)AND(v0.c0)) IN ()) DESC  NULLS LAST LIMIT 1443306390 OFFSET -994820529; -- 0ms;
SELECT SUM(0.5451135978666449) FROM t0; -- 0ms;
SELECT DISTINCT rt1.c3 FROM rt1, t0, vt0, v0; -- 0ms;
SELECT DISTINCT ABS(CASE WHEN rt1.c1 THEN t0.c0 END) FROM v0;SELECT ALL json_patch((('') NOT NULL), '-1010424933') FROM rt1, t0; -- 0ms;
SELECT TOTAL(NULL), ((((rt1.c0 COLLATE RTRIM)AND(((rt1.c3)IS NOT(vt0.c1)))))OR(v0.c0)), (~ (((((((((t0.c0)AND(vt0.c1)))AND(0.6611833014710266)))AND(t0.c0)))AND(NULL)))) FROM t0, v0, vt0 WHERE ((((0.4291998229188627)) BETWEEN ((-1.697575297E9)) AND (((('392693454') IS TRUE))))) GROUP BY (((t0.c0, rt1.c2, vt0.c0)) BETWEEN ((x'', t0.c0, t0.c0)) AND ((t0.c0, rt1.c3, '>A騿R'))) COLLATE BINARY, CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)) AS REAL), CASE (~ (t0.c0))  WHEN ABS(rt1.c0) THEN ((vt0.c0) BETWEEN (rt1.c3) AND (vt0.c0)) ELSE (~ (v0.c0)) END HAVING CAST(x'ef8b' AS NUMERIC) ORDER BY (((t0.c0) IS FALSE) IN (NULL)) ASC  NULLS LAST;SELECT ALL CAST((((v0.c0))>=((rt1.c2))) AS NUMERIC), COUNT(*), ((t0.c0 COLLATE BINARY)IS((((v0.c0)) NOT BETWEEN ((0.8681222038056506)) AND ((vt0.c0))))) FROM v0, vt0, rt1 WHERE ((((('')*(NULL))) IS TRUE));SELECT DISTINCT (((vt0.c0 IN ())) IS FALSE) FROM rt1 WHERE (CAST((((0.2971868791246708, 0.6620033079227465, -295646614))>(('-544772880', '+볏Mf>2i3', NULL))) AS INTEGER)); -- 0ms;
SELECT DISTINCT x'17c2', ((t0.c0)>=(x'')) COLLATE RTRIM, (((((rt1.c0, x'', rt1.c1)) BETWEEN ((t0.c0, rt1.c2, v0.c0)) AND ((vt0.c1, t0.c0, NULL)))) IS TRUE) FROM rt1, vt0 WHERE (CAST((((NULL)) NOT BETWEEN ((-1692444552)) AND ((NULL))) AS NUMERIC));SELECT ALL LAST_VALUE(704605179) OVER ( ORDER BY LOWER(DISTINCT ((((v0.c0)AND(rt1.c0)))AND(rt1.c1))) ASC) FROM vt0 GROUP BY rt1.c2 LIMIT -1005819667 OFFSET -212391237;SELECT ALL RANK() OVER () FROM rt1 WHERE ((((((0Xffffffffc9395306, x'136e', x'')) NOT BETWEEN ((NULL, 'e(G', NULL)) AND ((x'', 1.019218799E9, '-804135991'))))/(884047991 COLLATE RTRIM))); -- 0ms;
SELECT ALL MIN(((rt1.c3)LIKE(0.6491880090841408))) FROM vt0;SELECT TYPEOF(((t0.c0)<(rt1.c2))) FROM rt1, v0;SELECT DISTINCT ((GROUP_CONCAT(t0.c0))<<(((0.641576340911678) BETWEEN (vt0.c1) AND (rt1.c3)))) FROM rt1, t0 WHERE ((('1314946034' IN ()) IN (CAST('6떜tH\^Jga' AS BLOB), CASE x'6edd'  WHEN 1134464744 THEN x'' WHEN x'' THEN '-47677358' WHEN x'' THEN x'' ELSE 0.14191315067479726 END)));SELECT ALL CASE rt1.c1  WHEN ((rt1.c0)<>(v0.c0)) THEN rt1.c0 WHEN ((t0.c0)OR(rt1.c0)) THEN LIKE(v0.c0, rt1.c2, '1') WHEN vt0.c0 THEN MAX(t0.c0) END, (~ (((rt1.c1)<=(rt1.c2)))), ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)AND(((vt0.c1) IS TRUE))) FROM vt0;SELECT ALL 0.8606700988075137, AVG(UPPER(DISTINCT v0.c0)) OVER (), ((((((((((vt0.c0) ISNULL))AND(((rt1.c1)=(rt1.c2)))))OR('36223026')))AND(highlight(rt1.c3, vt0.c0, vt0.c1, vt0.c0))))AND(MIN(rt1.c1))) FROM v0, vt0, rt1, t0 ORDER BY (('') NOT NULL);SELECT DISTINCT (NOT (t0.c0)) COLLATE NOCASE COLLATE BINARY FROM t0, v0, rt1, vt0 WHERE ((((NOT (0x2fb67f63))) NOTNULL)); -- 0ms;
SELECT ((((rt1.c1) NOT NULL))<>((~ (v0.c0)))), RANK() OVER ( ORDER BY vt0.c0  NULLS FIRST), CAST((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS REAL), (((rt1.c3) NOT NULL) IN ()), (+ (((rt1.c3) NOTNULL))) FROM rt1, vt0, v0 WHERE ((((2.31694455E8 IN ('-1343860029'))) NOT BETWEEN (CAST(x'ec2be85d' AS BLOB)) AND ((('aꚅXBk7TNH')IS(-1.984200001E9))))); -- 3ms;
SELECT DISTINCT CAST('쑠''IFq?I' AS NUMERIC) FROM t0, v0 WHERE (CAST((~ (x'fb9ea2f3')) AS BLOB)) LIMIT 672725184 OFFSET 176504242; -- 0ms;
SELECT DISTINCT (+ (((rt1.c2)*(rt1.c3)))) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt1, v0 WHERE (json(LIKE(x'd0e3', x'', '0'))); -- 0ms;
SELECT (- (rt1.c2)) COLLATE RTRIM COLLATE RTRIM FROM rt1, t0, vt0; -- 0ms;
SELECT ALL CASE WHEN rt1.c1 THEN ((rt1.c1)>>(v0.c0)) END FROM v0, t0, rt1, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ((- (v0.c0))) AND (SUBSTR(vt0.c0, rt1.c2)))  NULLS LAST, (((rt1.c1)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((0.21380292348368035) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))  NULLS LAST, ((0.2823009304494176)*(CASE vt0.c1  WHEN rt1.c1 THEN t0.c0 END)); -- 6ms;
SELECT ((((v0.c0)+(t0.c0)))GLOB(rt1.c1)) FROM rt1, t0, vt0, v0; -- 0ms;
SELECT COUNT(*) FILTER(WHERE ((((v0.c0)=(vt0.c0)))||(((vt0.c0)LIKE(t0.c0))))) OVER () FROM v0, t0, rt1 WHERE ((((('')||(629268978)))&((((0X6c618799)) NOT BETWEEN ((-9.33091867E8)) AND ((0.0878753073537798))))));SELECT DISTINCT (((+ (vt0.c1)))!=(COUNT(rt1.c3))) FROM vt0, v0, t0, rt1; -- 4ms;
SELECT ((~ (rt1.c3)) IN (((t0.c0) IS TRUE), NULL)) FROM t0, v0, vt0, rt1; -- 0ms;
SELECT DISTINCT LAST_VALUE(((vt0.c1)||(vt0.c0)) COLLATE BINARY) OVER () FROM vt0 WHERE ((((('-738630877')>=(NULL))) IS TRUE)); -- 0ms;
SELECT ALL ((((rt1.c3) IS TRUE))>=((- (vt0.c1)))), ((CASE t0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) NOT BETWEEN (((rt1.c0)|(rt1.c0))) AND (((t0.c0)LIKE(rt1.c2)))), rt1.c0 FROM t0 WHERE ((((((((((0.13339853597126894 IN ()))OR(((x'')IS('3513432')))))AND(((((NULL)AND(NULL)))AND('-1860064792')))))OR((x'' IN (NULL)))))AND(((NULL)!=('*~C.')))));SELECT DISTINCT ((((((rt1.c2)OR(rt1.c1)))AND(vt0.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((((t0.c0, v0.c0, rt1.c3))>((v0.c0, rt1.c2, t0.c0))))), (((((vt0.c1 IN (rt1.c1)))OR(GROUP_CONCAT(rt1.c0))))AND(((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)))), ((((((v0.c0)GLOB(t0.c0)))AND((+ (vt0.c0)))))OR(v0.c0)) FROM vt0, t0 ORDER BY (((rt1.c2 IN ())) IS FALSE) DESC, rt1.c1  NULLS LAST;SELECT DISTINCT CAST(((0.29742844982136973) IS FALSE) AS NUMERIC), ((TYPEOF(DISTINCT vt0.c0)) IS FALSE), ((t0.c0) NOT BETWEEN (rt1.c2) AND (v0.c0)) COLLATE RTRIM FROM t0, rt1, v0 GROUP BY (((~ (vt0.c1)))=((((vt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0)))));SELECT ALL (CASE WHEN rt1.c0 THEN v0.c0 ELSE t0.c0 END IN (AVG(vt0.c0))) FROM vt0, rt1, t0 WHERE ((((((0Xfffffffff8f6b398 IN ()))AND(((x'')<<('325701862')))))AND(TRIM(DISTINCT 0.2918203789212829)))) LIMIT -809245462;SELECT DISTINCT LAST_VALUE((((t0.c0 IN ()))<(((vt0.c1) IS TRUE)))) OVER () FROM vt0, v0, rt1, t0 GROUP BY '1438626721' HAVING CASE ((((((((((((vt0.c1)OR(v0.c0)))AND(t0.c0)))OR(x'b8a1')))OR(0xffffffffe7d75ee5)))AND(v0.c0)))OR('L_'))  WHEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 END THEN (+ (0.38613040755907035)) WHEN ((vt0.c0)GLOB(v0.c0)) THEN (- (vt0.c0)) WHEN (NOT (rt1.c0)) THEN 0.6749654318476909 COLLATE NOCASE ELSE CASE vt0.c0  WHEN rt1.c0 THEN rt1.c0 END END; -- 2ms;
SELECT ALL ROW_NUMBER() OVER (), NTH_VALUE((((rt1.c1) BETWEEN (rt1.c0) AND (NULL)) IN ()), ((((((rt1.c0) IS TRUE))AND(((0X1792e49f)>=(rt1.c0)))))AND(((rt1.c1)==(rt1.c3))))) OVER ( ORDER BY CASE CASE rt1.c1  WHEN t0.c0 THEN rt1.c3 END  WHEN CASE x'592c4cc4'  WHEN x'' THEN rt1.c1 END THEN ((v0.c0)*(vt0.c1)) ELSE (((t0.c0))>((vt0.c1))) END ASC, (((NOT (rt1.c1)))<<((((rt1.c3))=((rt1.c0)))))  NULLS FIRST), AVG(LIKELIHOOD(DISTINCT rt1.c3, 0.2636397996979386) COLLATE NOCASE) FROM rt1 WHERE ((~ (NULL COLLATE BINARY))) ORDER BY CAST((- (rt1.c3)) AS BLOB) ASC  NULLS LAST;SELECT ALL (NOT ((NULL IN (vt0.c0)))), ((CAST(rt1.c3 AS BLOB)) NOT BETWEEN ((((vt0.c1))==((rt1.c0)))) AND (MAX(rt1.c0))), x'' FROM vt0 GROUP BY (+ ((((vt0.c1, rt1.c3, rt1.c1)) NOT BETWEEN ((t0.c0, v0.c0, v0.c0)) AND ((v0.c0, t0.c0, 0.5365359760951223))))), vt0.c0, UNLIKELY(DISTINCT (- (v0.c0)));SELECT ALL CASE ((rt1.c1)!=(vt0.c1))  WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c1) IS FALSE) ELSE CAST(0x71818c7e AS REAL) END FROM v0 WHERE (CASE WHEN CASE '-1984200001'  WHEN '-1751638063' THEN NULL END THEN ((423074421)>=(NULL)) END);SELECT ALL rt1.c1 COLLATE NOCASE FROM t0, rt1; -- 0ms;
SELECT TOTAL(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1))), (((vt0.c0, rt1.c0, rt1.c1)) BETWEEN ((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, v0.c0, 0.7704409592803676)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((t0.c0, rt1.c2, vt0.c1))), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((SUM(rt1.c3), ((rt1.c1) IS TRUE), ((t0.c0) NOT BETWEEN (rt1.c0) AND (x''))))), CAST((~ (t0.c0)) AS INTEGER) FROM rt1 LIMIT -663968756 OFFSET -515415974;SELECT ALL CAST(rt1.c2 AS TEXT) COLLATE BINARY, (- (((v0.c0) IS FALSE))), ((t0.c0)%(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))) FROM v0, t0 WHERE ((((NOT (x'34b8'))) NOT BETWEEN ('-88632749') AND ((((x''))<((x''))))));SELECT DISTINCT SQLITE_COMPILEOPTION_USED(rt1.c2) COLLATE BINARY FROM t0, v0, vt0 WHERE (CASE WHEN UPPER(DISTINCT -1272104182) THEN (0.15119484675073946 IN ()) ELSE QUOTE(x'') END);SELECT ((((((((CASE WHEN rt1.c2 THEN 0.4959427055924277 WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN NULL THEN t0.c0 WHEN rt1.c1 THEN v0.c0 ELSE t0.c0 END)OR(((v0.c0)||(v0.c0)))))AND((((rt1.c3))<>((vt0.c1))))))AND(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c3 END)))OR(CAST(vt0.c1 AS NUMERIC))) FROM vt0, rt1;SELECT ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (v0.c0))) BETWEEN (CASE WHEN rt1.c0 THEN vt0.c1 END) AND (LIKELY(t0.c0))), ((((CASE vt0.c0  WHEN rt1.c3 THEN t0.c0 ELSE rt1.c1 END)AND((- (v0.c0)))))AND(((('쳔d^Zh⚇{ '))<=((vt0.c1))))), NTILE((((((rt1.c0, vt0.c1, rt1.c1))<((vt0.c1, -1.488859179E9, rt1.c1)))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (CAST(v0.c0 AS INTEGER)))) OVER () FROM rt1, vt0, v0 WHERE (((NULL COLLATE BINARY)GLOB(x'')));SELECT DISTINCT (CASE WHEN rt1.c1 THEN rt1.c2 ELSE t0.c0 END IN ()) FROM v0 GROUP BY (- (((t0.c0)==(v0.c0)))) HAVING ((0.5917246366844969) NOTNULL) LIMIT -1010424933;SELECT (- (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) FROM vt0 FULL OUTER JOIN t0 ON CASE CASE WHEN vt0.c0 THEN rt1.c3 WHEN vt0.c1 THEN 'Lb tJ' WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN x'a5f0' ELSE rt1.c2 END  WHEN (~ ('')) THEN NULL ELSE COALESCE(DISTINCT '-infinity\r', rt1.c0) END LEFT OUTER JOIN v0 ON '-47677358' COLLATE BINARY;SELECT DISTINCT ((((vt0.c0)-(rt1.c1))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_valid(vt0.c0))) FROM t0, rt1, v0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) ASC  NULLS LAST;SELECT ALL ((vt0.c1)==(CASE WHEN rt1.c3 THEN rt1.c0 END)) FROM t0, v0, rt1, vt0 WHERE (((((((x'5071')AND(x'')))OR(x'e6e2')))<(LIKELY(DISTINCT 'UA<f8曬\rY')))); -- 0ms;
SELECT (NOT (CAST(v0.c0 AS REAL))), ((((v0.c0) NOT NULL))=((('O9q]jBT')GLOB(vt0.c1)))), (0.872267837883873 IN ()) FROM rt1, t0, v0, vt0; -- 0ms;
SELECT ALL ((((NULL)AND((NOT (v0.c0)))))AND(rt1.c0)) FROM vt0, v0, t0 WHERE ('-1335511940' COLLATE BINARY);SELECT DISTINCT (((((rt1.c1, vt0.c1, rt1.c1))<((x'fe28', rt1.c1, rt1.c0))))LIKE(((vt0.c1) NOT NULL))) FROM t0, v0;SELECT TOTAL((vt0.c1 IN ())) FROM t0, v0, rt1, vt0 WHERE (((('') BETWEEN ('') AND (0.6699919799796247)) IN ())) ORDER BY INSTR(vt0.c1, '') COLLATE NOCASE DESC; -- 0ms;
SELECT (LAST_INSERT_ROWID() IN ()) FROM rt1; -- 0ms;
SELECT DATETIME((((vt0.c1, vt0.c0, rt1.c3))<((v0.c0, rt1.c1, rt1.c0))), (((0.9123378568761262, t0.c0, vt0.c1, rt1.c1, rt1.c2)) BETWEEN ((vt0.c0, rt1.c0, v0.c0, rt1.c2, v0.c0)) AND ((vt0.c0, v0.c0, rt1.c3, NULL, '-1595699324'))), LIKELY(rt1.c0)) FROM rt1;SELECT ALL 0xffffffffb73bcde4, CASE '1237142337'  WHEN GROUP_CONCAT(rt1.c0) THEN ((vt0.c0) IS FALSE) ELSE ABS(NULL) END, CAST((- (rt1.c1)) AS NUMERIC) FROM v0, t0 LIMIT 940113346;SELECT ALL ((CAST(rt1.c3 AS BLOB)) NOTNULL), ((CAST(vt0.c1 AS BLOB)) BETWEEN (vt0.c0) AND (COUNT(rt1.c2))), 0.37432184948862446 FROM v0, vt0;SELECT ALL ((((v0.c0)&(vt0.c1)))<=(((rt1.c3)+(vt0.c1)))) FROM vt0, t0;SELECT DISTINCT ((((vt0.c1)>('')))OR(CAST(rt1.c0 AS NUMERIC))) FROM rt1 WHERE (((((((((((((NULL COLLATE NOCASE)OR((x'3a5e' IN ()))))AND((- (NULL)))))AND((((x'5411')) BETWEEN ((NULL)) AND (('-509282075'))))))AND(CASE 0.9799453947132964  WHEN 'y5{' THEN 0.7241569896355902 ELSE '748354812' END)))OR(((((0.33681712352034077)OR(0.8696744411069517)))OR(0X699cecbf)))))OR(NULL)));SELECT DISTINCT (NOT ((((rt1.c0))>=((t0.c0))))) FROM vt0, v0, rt1;SELECT DISTINCT ('587819714' IN ((NOT (vt0.c1)))), SQLITE_COMPILEOPTION_USED(rt1.c1), ((((rt1.c3 COLLATE RTRIM)OR((((vt0.c1, t0.c0, vt0.c0)) BETWEEN ((rt1.c0, v0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, rt1.c1))))))AND((~ (rt1.c1)))) FROM vt0, t0, rt1;SELECT DISTINCT SQLITE_COMPILEOPTION_USED(((vt0.c1) NOT NULL)) FROM v0, t0, rt1;SELECT DISTINCT ((x'')%((((rt1.c3))>=((vt0.c0))))) FROM vt0, rt1, v0, t0 WHERE (TRIM(((('1884843531'))<>((x''))))); -- 0ms;
SELECT CAST(TRIM(DISTINCT -7.1153108E7, rt1.c0) AS INTEGER) FROM vt0, v0, rt1 WHERE (NULLIF(DISTINCT ('*%' IN ()), ((0.4802898546124158)>=(x'')))); -- 0ms;
SELECT ALL ((((((((vt0.c0)OR(load_extension(rt1.c3, rt1.c2))))OR((((rt1.c2, rt1.c0, rt1.c0))<((vt0.c0, -511847638, t0.c0))))))AND((~ (vt0.c0)))))AND((NOT (vt0.c0)))) FROM vt0, t0, v0, rt1 WHERE ((('0.34076346033969307')||(CAST(x'162d834f' AS TEXT))));SELECT DISTINCT FIRST_VALUE(((json(vt0.c1)) BETWEEN (v0.c0) AND (UNLIKELY(vt0.c1)))) OVER (), ((COUNT(*))+(rt1.c1 COLLATE BINARY)), COUNT(rt1.c1) OVER () FROM v0, vt0 WHERE ('鄇[');SELECT ALL COUNT((vt0.c0 IN (rt1.c2))), (+ ((((vt0.c0))<=((vt0.c0))))), MIN(((rt1.c2)/(rt1.c2))), LIKELIHOOD(GROUP_CONCAT(rt1.c3), 0.6008563886169649), 0X9554ab9 FROM rt1, t0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1))!=((rt1.c3))) IN (((((v0.c0)OR(t0.c0)))AND(rt1.c1)))), (CAST(vt0.c1 AS TEXT) IN ()), ((((((((((((CAST(t0.c0 AS INTEGER))OR(vt0.c1)))OR(0xffffffffc86225e5)))AND(('b\r#J' IN (vt0.c1)))))OR(CAST(rt1.c1 AS REAL))))OR(rt1.c1 COLLATE NOCASE)))AND(((x'')OR(vt0.c0)))) FROM t0 WHERE ((((NOT ('D4y᷺n>'))) NOTNULL));SELECT DISTINCT MAX(CAST(v0.c0 AS NUMERIC)), SUM(CAST(rt1.c2 AS REAL)) OVER (), ((TOTAL(rt1.c0)) NOTNULL) FROM vt0, t0, v0, rt1 WHERE (((((x'') NOT BETWEEN (1014188497) AND (NULL)))!=((('628376019') BETWEEN (0.35637110341860756) AND ('1355747041'))))); -- 1ms;
SELECT ROW_NUMBER() OVER ( ORDER BY CAST((rt1.c1 IN ()) AS TEXT)) FROM vt0 WHERE (CASE (('-INFINITY')>>('[~挣!0ZC蘭'))  WHEN ((-1350101770) BETWEEN (0.5536067624973781) AND (-281675486)) THEN ((((231694455)OR(0X128b221f)))OR(0.25181750726901997)) END) LIMIT 1378393805 OFFSET 279576945; -- 0ms;
SELECT CASE WHEN ((rt1.c2) BETWEEN (v0.c0) AND (x'')) THEN CASE t0.c0  WHEN rt1.c3 THEN rt1.c3 ELSE '-1315838660' END WHEN ((vt0.c0) NOT NULL) THEN ((0x61089386)-(rt1.c1)) WHEN ((rt1.c1)%(v0.c0)) THEN TYPEOF(DISTINCT rt1.c3) END FROM t0, v0;SELECT DISTINCT NULLIF(DISTINCT t0.c0 COLLATE NOCASE, rt1.c0 COLLATE NOCASE), MAX(((vt0.c1) NOTNULL)), CAST(((rt1.c0)>=(vt0.c1)) AS REAL) FROM v0 GROUP BY (- ((NOT (rt1.c3)))) LIMIT -910535659 OFFSET 44327567;SELECT DISTINCT ((v0.c0)>=(((rt1.c0) ISNULL))), SUM(CAST(rt1.c2 AS TEXT)) OVER (), CAST(((rt1.c2) IS TRUE) AS BLOB) FROM vt0;SELECT ((((rt1.c1) IS TRUE))OR(((vt0.c0) NOT NULL))) FROM v0, vt0, rt1 WHERE ((((NULL) ISNULL) IN ())); -- 0ms;
SELECT ALL CASE (((rt1.c0))=((v0.c0)))  WHEN MIN(rt1.c1) THEN (((t0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) WHEN CASE '1040413930'  WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END THEN (vt0.c0 IN (t0.c0, vt0.c0)) WHEN ((rt1.c0)*(v0.c0)) THEN SUM(v0.c0) ELSE (((rt1.c2, 0.7135633813354079, rt1.c3))==((rt1.c3, rt1.c3, v0.c0))) END FROM rt1, t0 WHERE (TYPEOF(TRIM(DISTINCT '1553822324', NULL))) ORDER BY CASE WHEN ((v0.c0)|(rt1.c0)) THEN ((((((((rt1.c1)AND(vt0.c1)))AND(t0.c0)))OR(rt1.c1)))OR(rt1.c3)) WHEN ((NULL) NOT BETWEEN (v0.c0) AND (rt1.c2)) THEN x'' WHEN (((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN ((rt1.c1)-(rt1.c1)) ELSE TRIM(0.5467411170470149, rt1.c0) END;SELECT DISTINCT ((vt0.c1 COLLATE RTRIM) NOTNULL) FROM v0, rt1;SELECT CAST(AVG('*+') AS INTEGER), ((0.541706741507689) IS TRUE), ((CAST('\rU' AS REAL)) NOT BETWEEN (((vt0.c0)|(vt0.c1))) AND (((rt1.c0) NOT BETWEEN ('\nvX') AND (rt1.c1)))) FROM v0, vt0, rt1 LIMIT 810900694; -- 0ms;
SELECT 0Xffffffffc5521881 FROM t0, v0, vt0; -- 0ms;
SELECT ALL CASE WHEN ((rt1.c1) ISNULL) THEN CASE WHEN rt1.c3 THEN t0.c0 END WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c0 THEN t0.c0 WHEN '-20097484' THEN v0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))==((rt1.c2, rt1.c0, x'b424'))) WHEN ((((rt1.c3)OR(-1)))AND(rt1.c1)) THEN (((''))>((vt0.c1))) ELSE ((vt0.c0)>=(t0.c0)) END, LIKELIHOOD(8.9094681E7, 0.17705598700719516), SUM(((rt1.c2) NOT BETWEEN (rt1.c3) AND (vt0.c1))) OVER () FROM vt0, rt1, t0 WHERE ((NOT (((NULL) NOT BETWEEN ('qe') AND ('')))));SELECT DISTINCT vt0.c0, ((NULL)AND(UNLIKELY(rt1.c1))), (((CASE WHEN t0.c0 THEN rt1.c0 ELSE rt1.c3 END))<=(((t0.c0 IN (v0.c0))))) FROM t0, v0, vt0;SELECT DISTINCT CAST(((rt1.c1)&(rt1.c2)) AS REAL), ((((((rt1.c2) NOT NULL))OR(((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND((+ (0.6984549301716254)))), (((((rt1.c3, rt1.c3, rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, vt0.c1, rt1.c3, rt1.c3, x'f1f9')) AND ((v0.c0, rt1.c1, rt1.c1, rt1.c3, rt1.c3)))) NOT NULL) FROM vt0, t0, rt1, v0 LIMIT 78311990 OFFSET 1971574417; -- 4ms;
SELECT DISTINCT (~ (0x5ad36496)) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c0)<(rt1.c0)) IN ()) FROM v0 WHERE ((((((((((((((((('-1488859179')AND(NULL)))OR('')))OR(1477859366)))AND(x'')))OR(((-1.697575297E9) BETWEEN ('-1335511940') AND (x'')))))AND(QUOTE('1285970027'))))AND(((((NULL)OR('0.25181750726901997')))AND(x'')))))AND((- (0.19822916143759073))))); -- 0ms;
SELECT DISTINCT x'' FROM rt1, vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM v0, rt1 WHERE (((((x'') NOTNULL)) BETWEEN (CASE WHEN '' THEN 0.46595113487892803 WHEN '' THEN 0Xffffffffe6a6fc37 WHEN NULL THEN 0.1596455783204771 ELSE '-1946393307' END) AND (CAST(NULL AS TEXT)))); -- 0ms;
SELECT json_patch(((t0.c0) ISNULL), vt0.c0 COLLATE BINARY) FROM rt1, vt0, t0, v0 WHERE (CAST(((0.015004185204051668) BETWEEN ('1438626721') AND (x'')) AS NUMERIC)) LIMIT -1856104805; -- 0ms;
SELECT DISTINCT ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (x'')))>(((rt1.c1) ISNULL))), ((((NULL)%(t0.c0))) NOT NULL), SUM(((((rt1.c1)OR(rt1.c2)))OR(vt0.c1))) FROM vt0;SELECT vt0.c1 FROM v0, vt0 WHERE (((NOT ('_M')) IN ())); -- 0ms;
SELECT x'' FROM v0, rt1, vt0 WHERE (((((((0.5911096880740371) BETWEEN (NULL) AND (NULL)))OR((('') IS FALSE))))OR(x'e8e5' COLLATE BINARY))); -- 0ms;
SELECT (((((((vt0.c1)AND(rt1.c3)))AND(v0.c0)), UNLIKELY(vt0.c0), ((rt1.c3)||(vt0.c1))))<((rt1.c0 COLLATE NOCASE, ((vt0.c0)+(t0.c0)), SUM(vt0.c1)))), IFNULL(DISTINCT vt0.c1, rt1.c3) COLLATE BINARY, (((rt1.c1 IN ()))-(AVG(v0.c0))) FROM rt1 WHERE (CAST(UNLIKELY(DISTINCT NULL) AS TEXT)) GROUP BY ((NULL) IS FALSE) ORDER BY v0.c0  NULLS FIRST, ((NULL)+(LIKE(v0.c0, vt0.c1))) DESC  NULLS LAST, t0.c0 DESC;SELECT DISTINCT TRIM(rt1.c1), (((rt1.c3 IN (v0.c0)))>((rt1.c1 IN ()))), ((((rt1.c1)>=(t0.c0)))==(((v0.c0)|(t0.c0)))) FROM vt0, v0, t0;SELECT DISTINCT v0.c0 FROM vt0, rt1, t0, v0; -- 0ms;
SELECT ALL LAG(IFNULL(x'5a18', rt1.c3) COLLATE BINARY, ((((((((((((NULL)AND(((rt1.c0)GLOB(rt1.c1)))))OR(CAST(rt1.c0 AS REAL))))OR((NOT (v0.c0)))))AND((rt1.c2 IN ()))))AND(((((rt1.c1)AND(0.8981857406484849)))OR('291325714')))))AND((v0.c0 IN ()))), CAST(rt1.c0 AS INTEGER) COLLATE BINARY) OVER (), ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))>=(UPPER(rt1.c2))), (((rt1.c1 COLLATE BINARY, UNICODE(x'f65c'), (rt1.c3 IN (vt0.c1, rt1.c2))))>=((NULLIF(rt1.c1, v0.c0), ((rt1.c1)IS NOT(rt1.c1)), MAX(-1.924253043E9)))), v0.c0, ((((CAST(t0.c0 AS TEXT))OR(((vt0.c0)=(vt0.c1)))))AND(((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM rt1, v0;SELECT ALL ((((((t0.c0)AND(v0.c0)))OR(rt1.c0))) BETWEEN (((vt0.c0)<(vt0.c1))) AND (rt1.c0 COLLATE BINARY)), rt1.c0, (((vt0.c1)<(vt0.c0)) IN ()) FROM vt0, t0, rt1, v0 ORDER BY ((((vt0.c1 COLLATE BINARY)OR(load_extension(vt0.c1, vt0.c0))))OR(rt1.c3 COLLATE BINARY));SELECT DISTINCT CAST(COUNT(vt0.c1) AS TEXT) FROM v0, t0, vt0, rt1; -- 1ms;
SELECT ((CAST(t0.c0 AS NUMERIC))&(((((v0.c0)AND(rt1.c2)))AND(rt1.c0)))) FROM vt0, rt1, t0, v0 WHERE (((CASE WHEN '-1010424933' THEN 0.14977191357940367 END)IS(((((((((((((NULL)AND(-1.638105992E9)))OR(0.37781884317140446)))AND('GL')))OR('-1170414984')))AND('')))OR(x''))))); -- 0ms;
SELECT 0X50434a8 COLLATE NOCASE, SUM(CASE WHEN x'' THEN vt0.c0 END), COUNT(*) OVER () FROM vt0 WHERE ((~ (((x'') NOTNULL)))); -- 0ms;
SELECT (((x'0902'))=((((t0.c0)||(rt1.c3))))) FROM t0, v0;SELECT ALL CASE ((rt1.c3)OR(rt1.c0))  WHEN ((v0.c0)<(rt1.c2)) THEN ((NULL) NOT BETWEEN ('1309472401') AND (x'')) ELSE GROUP_CONCAT(vt0.c1) END FROM vt0;SELECT DISTINCT ((((vt0.c0) IS TRUE))/((NOT (rt1.c2)))) FROM rt1 WHERE (NULLIF(DISTINCT (NULL IN (0.8227875795802863, 0.8411144691561748)), ((NULL)||(0.005813835033063985))));SELECT TYPEOF(CAST(x'0d5c' AS NUMERIC)) FROM t0, vt0, v0 WHERE ((((((((('mbvOA')AND(((NULL)+('!6')))))OR(NULL)))AND(CAST(NULL AS TEXT))))OR(NULL))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c1 AS INTEGER))<=(((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c1)))) FROM rt1, vt0, v0, t0; -- 1ms;
SELECT DISTINCT COUNT(*), (((rt1.c1)) NOT BETWEEN ((CASE WHEN v0.c0 THEN x'' ELSE t0.c0 END)) AND (((('N7\L楊)')<(rt1.c2))))), (((rt1.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)) AND ((rt1.c1))) FROM rt1, v0, vt0, t0 WHERE (CASE (((''))!=((1645788907)))  WHEN (- ('MfJ0v')) THEN x'0569' END) GROUP BY (((rt1.c2 COLLATE NOCASE))==((x'fb62'))), (NOT (((((x'38283b12')AND(vt0.c0)))AND(vt0.c0)))), (+ (t0.c0)) ORDER BY PRINTF(vt0.c1, ((rt1.c1) IS TRUE), json_array_length(vt0.c0, NULL))  NULLS LAST; -- 0ms;
SELECT CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c3))) AS BLOB) FROM t0, rt1;SELECT ALL AVG((~ (t0.c0))), (((rt1.c0)IS NOT(vt0.c1)) IN ((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))), CUME_DIST() OVER () FROM vt0;SELECT DISTINCT (((rt1.c1) BETWEEN (vt0.c0) AND (v0.c0)) IN ()) FROM vt0 WHERE (CASE WHEN (x'' IN ()) THEN (NOT (x'')) END); -- 0ms;
SELECT ALL (((vt0.c1)-('a')) IN (((vt0.c1)<<(rt1.c2)))) FROM v0, t0;SELECT DISTINCT ((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))*((((rt1.c1))<((0.84880752131727))))) FROM t0, v0;SELECT ALL ((rt1.c1) BETWEEN (v0.c0) AND (rt1.c3)) COLLATE RTRIM COLLATE RTRIM, CAST(((v0.c0)>(vt0.c1)) AS REAL), ((((vt0.c1) IS TRUE)) NOT BETWEEN (GROUP_CONCAT(vt0.c1)) AND (v0.c0)) FROM t0, vt0, rt1, v0; -- 3ms;
SELECT ALL ((((((((t0.c0)AND(rt1.c1)))OR(vt0.c0)))AND(SUM(rt1.c2))))OR(CASE WHEN rt1.c0 THEN t0.c0 WHEN rt1.c1 THEN vt0.c1 WHEN rt1.c3 THEN v0.c0 END)) FROM rt1, t0, v0 WHERE (((CASE 0X7583d691  WHEN -478364556 THEN -1407312173 END) ISNULL));SELECT ALL SUM(SQLITE_VERSION()) OVER ( GROUPS  CURRENT ROW) FROM vt0, v0, t0 WHERE (((CASE x''  WHEN '-1291674995' THEN x'' ELSE 0.5065715670877994 END) NOT NULL)) LIMIT -1988637986 OFFSET -1789602535; -- 0ms;
SELECT DISTINCT ((((((((v0.c0 COLLATE RTRIM)AND((((rt1.c1))<=((vt0.c0))))))OR(((vt0.c1) IS FALSE))))OR(0.2516570702536143)))OR(((vt0.c0)LIKE(NULL)))) FROM v0 NOT INDEXED WHERE (((((((((((x'92e8') BETWEEN (NULL) AND ('302070439')))OR(CASE x'93ac'  WHEN '349560125' THEN NULL ELSE 0.08557556585779535 END)))OR((('-2072835728') IS TRUE))))OR((- (NULL)))))OR((((('554099746')OR(x'')))AND(NULL)))));SELECT ALL 0.8737588529656547 FROM t0, rt1 WHERE (HEX(CAST('1515846198' AS TEXT))); -- 0ms;
SELECT (((rt1.c1)) BETWEEN (((+ (NULL)))) AND ((vt0.c0))) FROM rt1, v0, t0, vt0 WHERE (((CAST('' AS REAL))=(CASE '0.2937351167678648'  WHEN x'' THEN NULL END))); -- 0ms;
SELECT DISTINCT (CASE WHEN rt1.c1 THEN vt0.c1 END IN ()), (((+ (vt0.c0))) BETWEEN (CASE rt1.c2  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) AND (((rt1.c0)<=(rt1.c0)))), (((rt1.c1 IN (vt0.c1)))GLOB(MIN(rt1.c2))) FROM t0, v0, vt0 WHERE ((((-856425647 COLLATE BINARY, (0.3120560100982943 IN ()), x'3dbc', (('0.7629543451892641')IS(0xfffffffffa7b670e)), ('j(' IN ())))>(((+ (654858050)), (~ (0.7059396021452155)), x'' COLLATE BINARY, 0x2716dfa2, ((((0.248401081383539)OR('-933091867')))OR(0.5376228056077804))))));SELECT DISTINCT ((((((((((((rt1.c0)OR(rt1.c2)))AND(v0.c0)))AND(((vt0.c0) ISNULL))))AND((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((x''))))))OR(((((((((x'')OR(v0.c0)))OR(vt0.c1)))OR(rt1.c2)))OR(vt0.c1)))))AND(v0.c0)) FROM v0, t0, vt0 GROUP BY CAST(UNLIKELY(vt0.c1) AS NUMERIC);SELECT AVG(load_extension(t0.c0, vt0.c0)), CASE WHEN (vt0.c0 IN ()) THEN ((rt1.c1) NOTNULL) END, ABS(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))) FROM rt1;SELECT (((rt1.c1 IN ())) ISNULL), t0.c0, ((rt1.c2)||(CASE v0.c0  WHEN rt1.c3 THEN v0.c0 ELSE vt0.c1 END)) FROM t0 WHERE ((('') BETWEEN (NULL) AND ('1654480997')) COLLATE RTRIM);SELECT DISTINCT COUNT((rt1.c0 IN ())) FROM rt1, t0, v0; -- 0ms;
SELECT DISTINCT (((x'', vt0.c0, rt1.c2)) NOT BETWEEN ((CASE WHEN '748354812' THEN x'' ELSE rt1.c1 END, CASE WHEN rt1.c2 THEN rt1.c2 ELSE v0.c0 END, t0.c0)) AND ((((x'')AND(rt1.c3)), GROUP_CONCAT(rt1.c3), ((((t0.c0)OR(vt0.c1)))AND(rt1.c1))))) FROM vt0, v0, rt1, t0 ORDER BY ',u>y_FL[|8]' DESC; -- 2ms;
SELECT DISTINCT ((CAST(NULL AS NUMERIC)) BETWEEN (json_type(rt1.c0)) AND (((rt1.c2)%(v0.c0)))) FROM rt1, v0 WHERE ((0.8663600308202778 COLLATE NOCASE IN ())) ORDER BY (((('O6hgz' IN ())))<=((((v0.c0)+(t0.c0)))))  NULLS LAST, ((((rt1.c3) BETWEEN (x'') AND (vt0.c1))) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END) AND (rt1.c0)), x'' ASC  NULLS FIRST;SELECT DISTINCT ((vt0.c0) NOTNULL) FROM rt1, v0, t0, vt0 WHERE (NULLIF(DISTINCT ((((((((x'')AND(NULL)))OR(1515846198)))OR('-1891156039')))AND(0.3709459657945603)), ((NULL)-('-1697575297')))) LIMIT 838619146 OFFSET -867001793; -- 0ms;
SELECT GROUP_CONCAT(((v0.c0) ISNULL)) OVER () FROM vt0, t0, rt1;SELECT DISTINCT ((((((x'c9c7')) NOT BETWEEN ((v0.c0)) AND ((rt1.c2)))))<=((vt0.c1))) FROM rt1, t0, v0 WHERE (CAST(((x'')*(8.28295468E8)) AS REAL));SELECT DISTINCT CAST((~ (vt0.c0)) AS REAL), '1530168549', CASE WHEN ((0.6499140650631561) IS TRUE) THEN -1.856104805E9 COLLATE RTRIM ELSE COUNT(*) END FROM v0, vt0, t0 WHERE (CASE WHEN (('0.9800535038098112')GLOB(NULL)) THEN ((x'') BETWEEN ('(bg⪻h%l') AND (1.904315518E9)) WHEN 1314946034 THEN (- ('')) WHEN CASE x''  WHEN '' THEN x'bdd0' ELSE NULL END THEN CAST('' AS NUMERIC) WHEN ('bw' IN ()) THEN 0.9881281887435917 WHEN (x'd68f' IN (NULL, '-1697575297')) THEN x'' COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT LIKELIHOOD(((rt1.c3)GLOB(t0.c0)), 0.13151479499034446), (((vt0.c0)/('')) IN ()), (((rt1.c0)) BETWEEN (('oV')) AND ((SUM(NULL)))) FROM vt0, v0, t0, rt1; -- 1ms;
SELECT DISTINCT (((- (rt1.c2))) ISNULL) FROM t0, v0;SELECT ALL COUNT(*) OVER () FROM vt0, t0; -- 0ms;
SELECT ALL LIKELIHOOD(CAST(rt1.c2 AS INTEGER), 0.03638223440919275) FROM v0, vt0, t0, rt1; -- 0ms;
SELECT ALL (((~ ('')))||((- (rt1.c0)))), (CASE '-1928696125'  WHEN rt1.c1 THEN t0.c0 END IN ()), ((rt1.c3)+(NULL)) COLLATE RTRIM FROM rt1, vt0; -- 0ms;
SELECT ALL ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c1))) ISNULL), 1146615210, TYPEOF(vt0.c0) COLLATE NOCASE COLLATE NOCASE FROM rt1 GROUP BY LIKELY('1943097982'), CAST(rt1.c1 AS BLOB), ((rt1.c3)>=(t0.c0)) COLLATE NOCASE, CAST(((t0.c0)>=(v0.c0)) AS NUMERIC), CAST(CASE rt1.c2  WHEN vt0.c1 THEN rt1.c2 ELSE rt1.c0 END AS TEXT) HAVING ((((v0.c0)%(rt1.c0)))OR(rt1.c0));SELECT ALL ((((((((x'')AND(v0.c0)))OR(((rt1.c3)==(rt1.c1)))))OR((x'' IN ()))))AND(MIN(NULL))), NTILE((((((rt1.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) BETWEEN (((((rt1.c0)AND(rt1.c3)))AND(t0.c0))) AND (UPPER(vt0.c1)))) OVER (), NULL FROM vt0, t0, rt1 WHERE (TRIM(DISTINCT (('-1700056938')>=(NULL)), ((x'')||('qἁTL ꢪ'))));SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CASE ((0.9902040907816018)+(0xffffffff84241786))  WHEN CASE WHEN '-1985327013' THEN '-1638105992' WHEN NULL THEN x'' WHEN '' THEN x'' ELSE '1438626721' END THEN (((-136067735)) NOT BETWEEN ((NULL)) AND ((2108504651))) WHEN CAST('-1778306350' AS INTEGER) THEN ((((x'')OR(x'')))AND('-1669968784')) WHEN CAST(0.3726648980721925 AS TEXT) THEN ((0xffffffff84730970)GLOB(x'')) WHEN ((x'') IS FALSE) THEN UPPER(DISTINCT '-1345884669') WHEN (('-746397335')-('-1162529393')) THEN ((0.4984673891910578)%('')) END); -- 0ms;
SELECT ALL x'', COUNT(((rt1.c3)=(t0.c0))), ((NOT (t0.c0)) IN ()) FROM vt0, v0, t0, rt1 GROUP BY CASE WHEN CASE WHEN rt1.c1 THEN rt1.c3 END THEN CAST(vt0.c0 AS BLOB) ELSE load_extension(rt1.c1) END HAVING (CAST(vt0.c1 AS BLOB) IN ());SELECT ALL ((rt1.c0 COLLATE NOCASE)OR(CASE WHEN NULL THEN '-1873104222' ELSE rt1.c2 END)), CASE v0.c0  WHEN t0.c0 THEN rt1.c0 ELSE vt0.c1 END COLLATE RTRIM, (+ (x'')) FROM vt0, rt1, t0;SELECT DISTINCT TOTAL(CASE rt1.c3  WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c0 WHEN v0.c0 THEN rt1.c3 END) FROM v0, t0;SELECT ALL 0.8348685682944678, TOTAL(CAST(vt0.c1 AS REAL)), (((rt1.c1)<=(rt1.c0)) IN ()) FROM rt1, t0, v0;SELECT CASE WHEN CASE '-738630877'  WHEN 0.45046429431917334 THEN rt1.c1 WHEN 0.44651962131468936 THEN rt1.c2 WHEN vt0.c1 THEN v0.c0 END THEN (rt1.c1 IN ()) ELSE IFNULL(rt1.c2, v0.c0) END FROM vt0, t0 WHERE (CAST(CAST(NULL AS TEXT) AS INTEGER));SELECT DISTINCT CASE t0.c0  WHEN ((rt1.c1) IS TRUE) THEN TYPEOF(v0.c0) END FROM v0;SELECT ALL (+ (COUNT(*))) FROM t0, v0, rt1, vt0 WHERE (((NULL)<((((0xffffffff99188ee4)) BETWEEN (('-527122213')) AND ((x'5517')))))); -- 0ms;
SELECT CAST(rt1.c0 COLLATE BINARY AS BLOB) FROM vt0, t0, v0 LIMIT 1278783493;SELECT ALL ((rt1.c0) BETWEEN (NULL) AND (rt1.c2)) COLLATE NOCASE, CASE (vt0.c0 IN ())  WHEN (((vt0.c0, rt1.c2, rt1.c0, v0.c0, NULL))>((rt1.c3, v0.c0, vt0.c1, rt1.c1, rt1.c3))) THEN x'' WHEN TOTAL(rt1.c1) THEN ((((rt1.c0)OR(t0.c0)))AND('2010236134')) WHEN ((rt1.c0)%(v0.c0)) THEN ((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)) ELSE (- (v0.c0)) END, ((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END)-(((v0.c0) IS FALSE))) FROM vt0, rt1, v0, t0 WHERE (((STRFTIME(NULL, x'', NULL)) ISNULL)) ORDER BY vt0.c1, CAST(((t0.c0) ISNULL) AS REAL); -- 1ms;
SELECT DISTINCT LIKELIHOOD(((vt0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)), 0.18625064620215426), COUNT(*) OVER (), ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c1))) NOTNULL) FROM vt0, t0, rt1, v0 ORDER BY ((((((rt1.c3)OR(rt1.c0)))AND(v0.c0))) NOTNULL)  NULLS LAST, (- (UNLIKELY(vt0.c1))), (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c1)))) IS TRUE) ASC  NULLS LAST; -- 8ms;
SELECT ((rt1.c2)=(1.019218799E9)) COLLATE RTRIM FROM v0, rt1, vt0; -- 0ms;
SELECT ALL ((NULLIF(v0.c0, rt1.c3))IS(((vt0.c0) IS TRUE))) FROM vt0, t0, rt1 WHERE (UNLIKELY(CASE x'fa17'  WHEN x'2160' THEN NULL END));SELECT DISTINCT ((TOTAL(rt1.c1))-('g^')) FROM vt0, rt1 WHERE ((x'' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) IS FALSE) FROM t0, rt1, v0; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT NULL))<(CAST(NULL AS REAL))) FROM t0, v0, rt1 WHERE ((((NULL IN ('XE', NULL)))>(((0.11920865063590802)|('NA6mVi9'))))); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED(rt1.c1) FROM v0, vt0, rt1 WHERE ((((~ (x'943a'))) IS TRUE)) GROUP BY CAST(NULL AS NUMERIC); -- 1ms;
SELECT DISTINCT (((vt0.c1)) BETWEEN (((((vt0.c1)) BETWEEN ((rt1.c1)) AND ((vt0.c1))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (rt1.c1))))) FROM t0, v0, vt0 WHERE ((~ (TRIM(0x507c2f84, '-136067735')))) ORDER BY (((((vt0.c1 IN (t0.c0, rt1.c3)))AND(x'')))AND(((vt0.c0)!=(vt0.c1)))) DESC;SELECT ALL ((CASE rt1.c2  WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt1.c3 WHEN x'' THEN rt1.c3 ELSE rt1.c1 END) IS FALSE) FROM rt1, t0, v0, vt0; -- 0ms;
SELECT CASE WHEN ((rt1.c0)|(rt1.c3)) THEN (((vt0.c1))<((v0.c0))) END FROM t0 WHERE ((- (CASE WHEN -5.15415974E8 THEN 0x1b2051c5 ELSE x'' END)));SELECT CASE json_remove(vt0.c0, rt1.c2)  WHEN (+ (rt1.c3)) THEN ((vt0.c0) IS FALSE) WHEN ((rt1.c3) NOT BETWEEN (v0.c0) AND (rt1.c1)) THEN LIKELY(rt1.c1) WHEN CAST(rt1.c1 AS INTEGER) THEN ((rt1.c3) NOTNULL) ELSE ((((((((((((vt0.c1)OR(v0.c0)))AND(rt1.c2)))AND(t0.c0)))OR(vt0.c1)))AND(rt1.c2)))OR(vt0.c1)) END FROM rt1, t0 WHERE ((((((~ ('1')))AND(CAST(NULL AS INTEGER))))AND(((0.49824323155489136) BETWEEN (0.498540598129636) AND (0.5571504400739338))))) GROUP BY (+ ((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))))), NULL, (((- (8.28295468E8))) NOT NULL) HAVING ('1670894660' COLLATE NOCASE IN ());SELECT AVG(CAST(NULL AS NUMERIC)) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT CASE v0.c0 COLLATE RTRIM  WHEN CAST(vt0.c1 AS TEXT) THEN (x'888b' IN ()) END FROM rt1, vt0, v0 WHERE (((NULL) NOT BETWEEN (NULLIF(x'', '_(%')) AND ((+ (''))))); -- 0ms;
SELECT DISTINCT COUNT(((((rt1.c1)AND(rt1.c0)))AND(v0.c0))) FROM t0 WHERE (((((x'')+('-1658329259'))) BETWEEN ((+ (0X11fe64a9))) AND (CAST(x'ab96' AS INTEGER)))) GROUP BY ((vt0.c1) BETWEEN (rt1.c3) AND (rt1.c0)) COLLATE NOCASE HAVING ((t0.c0) BETWEEN (((t0.c0) IS TRUE)) AND (AVG(rt1.c3)));SELECT DISTINCT RANK() OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1 IN ())) BETWEEN ((((vt0.c0)) BETWEEN ((462785269)) AND ((t0.c0)))) AND (rt1.c2)), (vt0.c0 IN ()) COLLATE BINARY, ((((((((((((vt0.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND((((rt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((rt1.c2, rt1.c0, rt1.c1))))))AND(SQLITE_VERSION())))AND(((t0.c0) NOT BETWEEN (rt1.c2) AND (v0.c0)))) FROM t0, rt1, vt0, v0 WHERE ((((((x'')AND('-577752476')))OR(x'')) IN ())) LIMIT 1723851081 OFFSET -1514460895; -- 1ms;
SELECT ALL (~ (((rt1.c0)AND(vt0.c0)))) FROM t0 LEFT OUTER JOIN v0 ON ABS(((rt1.c2)&(rt1.c1))) FULL OUTER JOIN vt0 ON ((TYPEOF(rt1.c2))>(rt1.c3)) FULL OUTER JOIN rt1 ON CASE WHEN (+ (rt1.c1)) THEN ((v0.c0)&(rt1.c3)) END;SELECT ALL ((((NOT (t0.c0))))=(('-90052973'))) FROM t0, rt1 WHERE ((((-1.77830635E9)) BETWEEN ((((('-1713294039'))=(('1299554899'))))) AND ((-1053713034)))) ORDER BY (((('-1713294039')/('693951003'))) BETWEEN (((((rt1.c1)AND('-569103813')))OR(v0.c0))) AND (rt1.c3 COLLATE BINARY))  NULLS LAST;SELECT DISTINCT (((rt1.c1)) BETWEEN (((~ (vt0.c0)))) AND ((rt1.c0 COLLATE RTRIM))), ((CASE rt1.c1  WHEN NULL THEN t0.c0 END) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND ((rt1.c1 IN ()))), GROUP_CONCAT(((vt0.c1)%(vt0.c0))) FROM v0, t0, vt0, rt1 NOT INDEXED WHERE ((NULL IN ((((('ETt\籸|')OR('-276455562')))OR('708738170'))))); -- 0ms;
SELECT ALL (((~ (vt0.c0))) ISNULL) FROM vt0, t0, v0 WHERE (CASE WHEN (NULL IN ()) THEN 'w' WHEN (((x'', '-1073830407', x''))>=((1337453536, x'8ea6', ''))) THEN (((((((('-1871828312')AND(NULL)))AND(2056325735)))OR('1530168549')))AND(NULL)) WHEN CAST(NULL AS INTEGER) THEN CAST(0.3847683695250581 AS INTEGER) ELSE (-1697575297 IN ()) END) LIMIT -620247227; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((rt1.c1)|(t0.c0))) AND (NULL)) FROM vt0, v0;SELECT ALL 'z0c31Q', (+ (0X62bb525c)) COLLATE BINARY, TYPEOF(DISTINCT ((((rt1.c3)OR(vt0.c0)))OR(v0.c0))) FROM rt1, v0 WHERE (((0.6863313361840622) NOTNULL) COLLATE NOCASE) LIMIT 1394313513;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) IS TRUE), ((((((((CASE rt1.c2  WHEN vt0.c0 THEN t0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN '-478481422' THEN v0.c0 ELSE t0.c0 END)OR(((rt1.c1) ISNULL))))OR(((rt1.c0)OR(rt1.c1)))))OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))OR(((('-1343860029', t0.c0, v0.c0))<>((rt1.c3, rt1.c0, NULL))))), (NOT (((vt0.c1)GLOB(rt1.c0)))) FROM v0, t0;SELECT DISTINCT (((x'5a3e' IN (rt1.c0))) NOT BETWEEN (2074332458) AND ((+ (rt1.c2)))), v0.c0, MAX(CHAR(vt0.c1)) COLLATE BINARY FROM t0, rt1, vt0, v0; -- 1ms;
SELECT DISTINCT ((((CAST(rt1.c3 AS INTEGER))OR(CAST(rt1.c3 AS NUMERIC))))AND(CAST(t0.c0 AS REAL))) FROM t0;SELECT x'be1c' FROM vt0, v0, t0, rt1 WHERE (CASE WHEN NULL THEN (('-1778306350') IS FALSE) ELSE (NOT (x'')) END); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT 0.4816138817682446, 0.4690036349073061) FROM vt0, v0; -- 1ms;
SELECT DISTINCT (((((~ (rt1.c2)))AND(UNICODE(t0.c0))))AND(0Xfffffffffbfa8949 COLLATE NOCASE)) FROM t0, rt1, v0; -- 0ms;
SELECT ALL json_valid(1.762198963E9) FROM rt1, vt0, v0; -- 0ms;
SELECT ALL GROUP_CONCAT(PRINTF(vt0.c0)) OVER () FROM rt1 WHERE ((CAST('-968550500' AS BLOB) IN ()));SELECT ALL 0Xffffffffe14f37bb FROM rt1, vt0, t0 WHERE (CASE WHEN (((x''))>((''))) THEN CAST('_' AS REAL) END) ORDER BY '816623346'  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((-1778306350)+(CASE v0.c0  WHEN rt1.c3 THEN rt1.c2 END)), (NOT (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), CASE CASE rt1.c3  WHEN vt0.c0 THEN v0.c0 ELSE rt1.c2 END  WHEN ((rt1.c3) NOT NULL) THEN vt0.c1 COLLATE RTRIM ELSE ((t0.c0)<(rt1.c2)) END FROM t0, v0, rt1 WHERE (((NULLIF('-1208167177', 0.35882125096393525)) NOT BETWEEN ('881404581' COLLATE NOCASE) AND (MAX(0.7520319245161333, '')))) ORDER BY ((0.35635175882576753 COLLATE NOCASE) NOT BETWEEN (((((rt1.c0)OR(t0.c0)))AND(rt1.c1))) AND (x'')) ASC;SELECT DISTINCT ((((vt0.c0)AND(vt0.c1)))OR((+ (t0.c0)))), ((AVG(rt1.c2))IS NOT(((rt1.c0)<(rt1.c2)))), (((((+ (rt1.c1)))OR(((vt0.c1) NOTNULL))))AND((~ (rt1.c3)))) FROM t0, vt0, v0, rt1 WHERE (((((((0.2394155701354641)AND('1314946034')))OR(x'a2e2')))<=(0.8044191651744501))); -- 0ms;
