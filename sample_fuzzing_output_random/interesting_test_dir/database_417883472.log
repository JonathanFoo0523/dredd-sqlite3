-- Time: 2024/06/07 15:13:45
-- Database: database72
-- Database version: 3.40.0
-- seed value: 417883472
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
CREATE TEMP TABLE t1 (c0 INT ); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.45220231896131435), (''), (-1645687451); -- 1ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-274571966,8');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '4382'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -274571966);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.threads; -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE ((NULL)+('-274571966' COLLATE BINARY)); -- 1ms;
PRAGMA main.defer_foreign_keys = false; -- 2ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 6ms;
CREATE TEMPORARY TRIGGER IF NOT EXISTS tr2 BEFORE DELETE ON t0 BEGIN SELECT RAISE(FAIL, 'asdf');DELETE FROM vt0 WHERE TRIM(DISTINCT vt0.c0) COLLATE RTRIM COLLATE NOCASE;SELECT RAISE(ROLLBACK, 'asdf');END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('4P쵥B'); -- 0ms;
ANALYZE vt0; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('284845098'); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
PRAGMA main.wal_autocheckpoint = 8165712017155792967; -- 0ms;
UPDATE OR IGNORE t1 SET (c0, c0)=('-740681945', NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INTEGER ); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ABORT INTO t1 VALUES (0xffffffffddd15e45); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('x(<G3'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('M'), ('()'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'72c5') WHERE ((((((((TIME(x'51ef', t0.c0, ''))OR(((t0.c0) NOTNULL))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))); -- 0ms;
UPDATE vt0 SET c0=0.997467484169004 WHERE ((((vt0.c0)OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.04253965690460826); -- 1ms;
REINDEX  vt0; -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=('sW[.ro', 'rCXꉩ7A2N', NULL); -- 1ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.application_id = -263122243211016408; -- 1ms;
ALTER TABLE t0 ADD COLUMN c92 BLOB; -- 1ms;
PRAGMA stats; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((((vt0.c0))<=((x''))))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c58 TEXT; -- 0ms;
UPDATE vt0 SET c0=NULL WHERE 0.6761184313404194; -- 1ms;
PRAGMA shrink_memory; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47244'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18702'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO t0(c0, c92, c58) VALUES (x'8531', '', 0.7237456732114983); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-5.73481403E8); -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=('x(<G3'); -- 2ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='-740681945', c0=''; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('0.04253965690460826') WHERE UPPER(DISTINCT vt0.c0 COLLATE RTRIM); -- 0ms;
CREATE UNIQUE INDEX i26 ON t0(((0.07031869544720304)-(c0)) COLLATE NOCASE,LENGTH(((c0) IS TRUE)),(((c58, c92, c58, c0, c92)) BETWEEN ((((c58)OR(c58)), ((c58) IS TRUE), ((c58)/(c58)), (c58 IN ()), NULL)) AND ((((c0) NOT NULL), ((((c0)AND(c0)))OR(c58)), CAST(c0 AS NUMERIC), ((((((((c92)OR(c92)))AND('-')))AND(c92)))OR(0.997467484169004)), c0 COLLATE BINARY)))); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 0ms;
DELETE FROM vt1; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c74; -- 0ms;
UPDATE OR IGNORE t0 SET c58=NULL; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.6761184313404194; -- 0ms;
PRAGMA temp.automatic_index = true; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE ('Gwgꉩ.' IN ()); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c92 TO c79; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
UPDATE OR ABORT vt0 SET c0=0.34032388020835413 WHERE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 BLOB , c1 BLOB , c2 INTEGER  CHECK ( '0.34032388020835413')); -- 0ms;
VACUUM temp; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 1ms;
ALTER TABLE t1 ADD COLUMN c95 REAL; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.866796435668854), (' 稨'), ('	n浏\\r#'); -- 1ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.997467484169004); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.8767576739521035), (0xfffffffff3738140), (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='ltQ' WHERE ((((((vt0.c0) IS TRUE))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((+ (vt0.c0)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29425'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=284845098,7');\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -677688363);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1930313423);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1957144726,10');\n; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR REPLACE INTO t1(c95, c79, c58) VALUES (NULL, x'410157c2', 196419087), ('', x'', '497619494'), (NULL, NULL, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '52423'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=12'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL ROUND(((t1.c79) IS FALSE), ((t1.c95) NOT BETWEEN (t1.c95) AND (NULL))), (((((((((t0.c2 IN ()))OR(TRIM(t1.c95))))OR(NULL)))OR(((((t1.c74)OR(t0.c1)))AND('2079213943')))))OR(CAST(t1.c58 AS NUMERIC))), (((((vt0.c0 IN ('')))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN vt1.c0 THEN t0.c2 WHEN t1.c95 THEN t0.c1 ELSE '-1645687451' END)))AND((t0.c1 IN (t0.c2, t0.c0)))), (((- (t0.c0))) IS FALSE), CASE IFNULL(t1.c95, t1.c79)  WHEN CAST(t1.c58 AS INTEGER) THEN ((((t0.c1)OR(vt1.c0)))OR(vt1.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((t0.c0) ISNULL) WHEN UNLIKELY(DISTINCT t1.c95) THEN ((t1.c79) IS FALSE) WHEN CAST(t1.c74 AS TEXT) THEN t0.c0 WHEN ((vt0.c0)<<(0.4889916050415867)) THEN (t1.c74 IN ()) ELSE COUNT(*) END FROM vt1, t1, vt0;SELECT ALL (((vt1.c0)) BETWEEN ((CASE WHEN t1.c79 THEN t1.c95 END)) AND ((t1.c58 COLLATE BINARY))) FROM t1 ORDER BY t1.c95 COLLATE RTRIM ASC LIMIT -740681945 OFFSET -1645687451;SELECT ((((MIN(0.09822589671864601, x''))AND(CAST(t1.c58 AS TEXT))))AND('1141779851')) FROM vt0 WHERE (((('508091')) BETWEEN ((((0.4889916050415867) NOT BETWEEN ('775855109') AND (NULL)))) AND (((((0Xffffffffde5671b3)) BETWEEN ((NULL)) AND (('')))))));SELECT DISTINCT ((((t0.c0)OR('()')))OR(vt0.c0)) COLLATE NOCASE, (- (t0.c1)) COLLATE RTRIM, COUNT(((((((((t1.c74)AND(0.9772413198346278)))OR(t1.c95)))AND(t0.c0)))AND(t0.c1))) FROM vt1, t1 WHERE ((((((('1957144726')-(x'')))AND((((('4p쵥b')OR('')))OR(NULL)))))OR(LIKELIHOOD(x'', 0.3576939895549428))));SELECT DISTINCT t1.c58, TRIM(((t0.c2) IS FALSE)), ((GROUP_CONCAT(t1.c79))GLOB(((t1.c58) NOT BETWEEN (t1.c79) AND (t1.c95)))) FROM vt0, vt1 LIMIT -1645687451;SELECT ALL (((2.079213943E9, vt1.c0, t0.c1)) NOT BETWEEN (((t0.c2 IN ()), IFNULL(vt1.c0, t1.c95), '-1645687451')) AND ((t0.c0, (+ (t1.c95)), (t1.c74 IN (vt0.c0, t1.c74))))) FROM t1, t0, vt1, vt0 LIMIT -1324239661 OFFSET 1501695897; -- 0ms;
SELECT ALL ((('1957144726')>=('1MgF*}>5')) IN ()) FROM vt1; -- 0ms;
SELECT ALL CAST(((((x'b043')AND(t0.c2)))AND(t0.c2)) AS INTEGER) FROM t1, t0 LIMIT -1782678784; -- 0ms;
SELECT DISTINCT IFNULL(CAST(t1.c74 AS REAL), ((t1.c95) NOT BETWEEN (t1.c74) AND (vt0.c0))), (((+ (t0.c1))) NOT NULL), ((vt0.c0 IN ()) IN ()) FROM vt0 WHERE (((((CAST(x'' AS REAL))AND(CASE -1263165219  WHEN 0.3806736518011723 THEN 0.8767576739521035 ELSE x'b8b4' END)))OR((+ ('2000277997')))));SELECT DISTINCT PERCENT_RANK() OVER () FROM t0, t1, vt0, vt1 WHERE (ROUND((1133060857 IN ()), ((0.5361896505588165)IS(NULL)))); -- 0ms;
SELECT DISTINCT ((TOTAL(t0.c0)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CASE WHEN t0.c0 THEN t1.c95 ELSE t0.c0 END)) FROM t1, vt0, vt1 ORDER BY ((((((t1.c79)<=(vt0.c0)))AND(((t0.c2) IS TRUE))))AND((+ (t0.c0))))  NULLS FIRST;SELECT DISTINCT ROW_NUMBER() OVER () FROM t1 ORDER BY NULL COLLATE RTRIM  NULLS FIRST, ((((((t0.c2)AND(vt0.c0)))OR(t1.c74)))LIKE((((x''))!=((t0.c2))))), ((((((vt1.c0)AND(t1.c95)))OR(x'faff')))IS NOT((((t0.c2)) BETWEEN ((t1.c58)) AND ((t0.c1)))));SELECT ALL AVG((NOT (t1.c95))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM vt1, t0;SELECT MIN(((vt1.c0)<=(t1.c58))) FROM t1, vt1, vt0, t0; -- 0ms;
SELECT ALL CASE WHEN CASE WHEN t1.c79 THEN t1.c58 ELSE t0.c1 END THEN (t0.c1 IN ()) END, CASE WHEN vt1.c0 THEN t1.c74 ELSE t1.c58 END COLLATE RTRIM, CAST(t0.c2 COLLATE NOCASE AS NUMERIC), ((LOWER(vt0.c0))+(((t1.c95)IS(t1.c95)))), ((((LIKE(t0.c1, t0.c2))AND((((t1.c58)) BETWEEN ((vt0.c0)) AND ((t1.c95))))))AND((vt0.c0 IN ()))) FROM t0, t1, vt0, vt1; -- 0ms;
SELECT CASE WHEN ((t0.c0) IS TRUE) THEN ((t0.c1) ISNULL) ELSE t1.c58 COLLATE NOCASE END FROM t0, vt1, t1 NOT INDEXED; -- 0ms;
SELECT ALL CAST(vt0.c0 AS NUMERIC) FROM vt0 NOT INDEXED, t0, t1; -- 0ms;
SELECT ALL ABS(t0.c1) FROM t0, vt0, vt1, t1 WHERE (((CAST(NULL AS BLOB)) NOT BETWEEN (0.4884503449013258 COLLATE RTRIM) AND (NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE vt0.c0  WHEN t1.c58 THEN t0.c1 END THEN ((t0.c2)|(t1.c79)) END FROM vt1, t1, vt0;SELECT DISTINCT COUNT((((t0.c2, t0.c1, t1.c58))==((t1.c74, t0.c0, t1.c95)))) OVER () FROM t0, t1, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (t1.c74) AND (t1.c74)))IS NOT(((NULL) BETWEEN (t1.c58) AND (t1.c58)))) FROM vt1, t0;SELECT DISTINCT ((((MAX(vt0.c0))OR(PRINTF(t1.c79, t0.c2, vt0.c0))))AND(CASE t0.c1  WHEN t1.c79 THEN t1.c58 END)) FROM vt1, vt0, t0, t1; -- 0ms;
SELECT 0Xffffffff98cb588d FROM t1 ORDER BY vt0.c0;SELECT DISTINCT -1.263165219E9 FROM vt1, vt0, t0, t1 ORDER BY t1.c58  NULLS FIRST; -- 0ms;
SELECT (((t1.c58, CASE WHEN t1.c58 THEN t0.c2 END, t1.c74))=((t0.c2, TRIM(DISTINCT t1.c74), '''*'))), ((((vt1.c0)<=('-547249559')))<=(AVG(vt0.c0))), GROUP_CONCAT((t0.c2 IN ())) FROM vt0, t1, vt1, t0; -- 0ms;
SELECT ((COUNT(t1.c95)) BETWEEN (((t0.c1) BETWEEN (t1.c74) AND (t1.c74))) AND ((vt1.c0 IN ()))) FROM vt1, vt0, t0 ORDER BY CASE WHEN x'' THEN ((((((((x'1f28')OR(vt0.c0)))AND(t0.c0)))AND(t0.c1)))AND(t0.c0)) END DESC  NULLS FIRST;SELECT DISTINCT CASE TOTAL(t1.c74)  WHEN ((t1.c74)>>(t0.c2)) THEN ((((t0.c2)OR(t0.c2)))AND(t0.c0)) ELSE ((NULL) NOT BETWEEN (t1.c58) AND (vt0.c0)) END FROM t0;SELECT DISTINCT MIN((((t1.c58))!=((t0.c0)))), 1.96419087E8, ((((((((vt0.c0)AND(t0.c0)))OR(t1.c95)))OR(((vt1.c0)<<(t0.c2)))))AND(((((t1.c58)AND(t0.c1)))AND(vt1.c0)))) FROM t1, t0, vt1 LIMIT -1669333345 OFFSET -1266144207;SELECT ((((((t0.c1))!=((t0.c0)))))<>((t1.c95 COLLATE NOCASE))), (((- (t1.c74))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND ((+ ('546237234')))), (((((t1.c79)<<(t1.c95))))>=(((((t0.c1)) NOT BETWEEN ((t1.c58)) AND ((t1.c95)))))), ((((t0.c1)IS NOT(t1.c95)))<(((t1.c79)/(t1.c58)))), x'' FROM vt1;SELECT x'65c6' FROM vt0, t0, vt1, t1; -- 1ms;
SELECT ALL (LIKELY(x'6639') IN ()), ((SUM(t0.c2))LIKE('')), (~ ((- (vt1.c0)))) FROM vt1;SELECT DISTINCT ((((t1.c58)*('\nSRn搪K'))) BETWEEN ((+ (t1.c79))) AND ((((t1.c79))>(('M'))))) FROM vt1, t0 WHERE (CASE x'' COLLATE BINARY  WHEN (('-1669333345')/(NULL)) THEN (((NULL))<=((NULL))) END);SELECT DISTINCT ((((t1.c79) BETWEEN (t1.c74) AND (t1.c58)))=(CASE WHEN t0.c2 THEN t0.c0 END)) FROM t1, vt0, t0, vt1 WHERE (((CAST(-6.77688363E8 AS INTEGER))=((~ ('1501695897'))))) LIMIT 278088805; -- 0ms;
SELECT ALL TOTAL(CASE t0.c2  WHEN t0.c0 THEN t1.c95 WHEN NULL THEN vt1.c0 WHEN t1.c58 THEN 0.0546312893058335 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN x'' END), CASE WHEN ((((((((t0.c1)AND(t1.c95)))AND(t0.c1)))OR(0.26986135620706786)))OR(vt1.c0)) THEN CASE t1.c95  WHEN vt1.c0 THEN t1.c79 ELSE x'' END END, ((((t0.c1) NOT NULL))>=(((t1.c95)GLOB(t1.c95)))), ((((t1.c74)+(t0.c0)))=(CASE WHEN t0.c0 THEN t1.c58 END)), ((TOTAL(t1.c74)) BETWEEN ((((t1.c74))==((t1.c95)))) AND (((t0.c1)OR(t1.c79)))) FROM t0, vt1, t1, vt0 WHERE (CASE WHEN (('937919604')-(NULL)) THEN CASE 'Pz'  WHEN NULL THEN NULL WHEN '508091' THEN NULL WHEN x'' THEN '' ELSE 0.5736341716378177 END ELSE CASE x''  WHEN NULL THEN '1685774166' WHEN NULL THEN 0xfffffffff11c001f WHEN 0Xfffffffff3e9ba76 THEN '508091' ELSE '6474757313373087348:-6111981225445422550:1896 568 ' END END); -- 0ms;
SELECT ALL (((vt1.c0 IN ()))>>((vt0.c0 IN ()))), ((((vt0.c0) BETWEEN (t1.c95) AND (t1.c74))) BETWEEN (((((((((vt1.c0)OR(t1.c95)))OR(t1.c58)))OR(t0.c2)))AND(''))) AND (t1.c95)), ((CASE t0.c2  WHEN t1.c58 THEN t0.c2 ELSE t0.c2 END)<=((vt0.c0 IN ()))) FROM vt1, vt0, t0, t1; -- 0ms;
SELECT DISTINCT (((vt0.c0)&(t0.c1)) IN ()) FROM vt1, t0 WHERE (TRIM(((NULL) BETWEEN (NULL) AND (x'')), x'' COLLATE BINARY)) LIMIT 1218521285 OFFSET -243898224; -- 0ms;
SELECT ALL (+ (vt1.c0)) COLLATE NOCASE FROM vt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((t0.c2)&(t0.c2)) COLLATE RTRIM, ((((((t1.c58)AND(vt0.c0)))OR(x'')))&(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))), ((((CASE t1.c58  WHEN vt0.c0 THEN t0.c0 ELSE t1.c74 END)OR(((((t0.c2)OR(vt0.c0)))AND(t0.c2)))))AND((t0.c0 IN ()))) FROM vt0 WHERE (CASE ('{S*EyWS&s' IN (NULL))  WHEN (~ (1133060857)) THEN ((0.0546312893058335)=(0xffffffffde50966a)) ELSE (~ ('')) END) ORDER BY (NOT (((vt1.c0)IS(vt0.c0))));SELECT DISTINCT (((t1.c74)) NOT BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((0.997467484169004))), ((((t1.c74)+(vt0.c0))) ISNULL), ((((CAST(t1.c79 AS REAL))AND(CAST(t0.c0 AS NUMERIC))))AND((vt0.c0 IN (t1.c95)))), ((t0.c1)-(t0.c2)) COLLATE RTRIM COLLATE BINARY, (+ (vt1.c0)) FROM vt1;SELECT DISTINCT '615564458', vt0.c0, CAST((t0.c0 IN ()) AS REAL) FROM t1, vt1, t0 WHERE (CAST(((NULL) NOT NULL) AS BLOB)) GROUP BY ((((((((((((196419087)AND(((t1.c74) IS FALSE))))OR(((t1.c74)<=(t1.c74)))))AND((((t1.c74)) BETWEEN ((t1.c58)) AND ((t1.c74))))))AND(((t1.c58) NOT NULL))))AND((x'4699' IN ()))))OR('0.5361896505588165')) LIMIT -564760141 OFFSET -1809756510;SELECT ALL CAST(((((((((t0.c1)AND(vt1.c0)))AND(x'')))OR(vt0.c0)))OR('_%B)')) AS NUMERIC) FROM vt0;SELECT DISTINCT (((t1.c95 IN ())) BETWEEN (LIKE(vt1.c0, t1.c79)) AND (((vt1.c0)AND(t0.c2)))) FROM vt1, t0, vt0, t1 WHERE (((CAST(0.8228974019055589 AS NUMERIC))LIKE((('')OR(x''))))); -- 0ms;
SELECT ALL (CASE t0.c0  WHEN NULL THEN vt1.c0 WHEN t1.c95 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END IN ()), CAST(((((t1.c95)AND(t0.c0)))OR(t0.c0)) AS TEXT), CASE ((vt1.c0)<<(t0.c1))  WHEN CAST(t1.c58 AS INTEGER) THEN CASE WHEN t1.c58 THEN t1.c58 ELSE x'' END END FROM t0, t1, vt0, vt1 WHERE ((((+ (x'ee525cff')))/((((((((('')AND('1930313423')))OR(x'')))OR(x'')))AND(0.6196683131653854))))); -- 0ms;
SELECT DISTINCT CASE ((t0.c2)+(vt1.c0))  WHEN AVG(t1.c74) THEN ((vt0.c0) IS TRUE) END, (((t0.c2)) BETWEEN (((((NULL))>((t0.c0))))) AND ((((t0.c1)+(t1.c58))))), (((CAST(t0.c2 AS INTEGER), (t0.c2 IN ()), t0.c0, ((((((((((((t0.c2)AND(0.9266603171846133)))OR(t1.c58)))AND(t0.c2)))AND(t0.c2)))OR(t1.c95)))OR(t0.c0)), AVG(t0.c1)))>((CASE NULL  WHEN t0.c2 THEN t0.c1 WHEN t1.c74 THEN t1.c74 WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN t0.c2 THEN t1.c58 ELSE t0.c2 END, CAST(t0.c2 AS REAL), (t1.c74 IN ()), 0.7237456732114983, (vt1.c0 IN ())))) FROM t0, vt1;SELECT ALL (CAST(t1.c95 AS BLOB) IN ()), ((TOTAL_CHANGES())>=((0x7c0bb IN (t1.c74, vt0.c0)))), 0.14629019067704607 FROM t1, vt0, vt1, t0 LIMIT 497619494 OFFSET -477161211; -- 1ms;
SELECT DISTINCT IFNULL(DISTINCT t1.c74, t0.c0) COLLATE BINARY FROM t0, t1, vt1 WHERE (((LIKELIHOOD(DISTINCT '1109033310', 0.32536091106099874)) ISNULL)); -- 0ms;
SELECT DISTINCT ((AVG(vt0.c0)) NOT NULL), (((NOT (vt0.c0)))<=(CASE WHEN t1.c95 THEN t1.c58 END)), t1.c79 COLLATE NOCASE FROM vt1, vt0, t0 WHERE (((0.17176198843477097)/(-1331775618)) COLLATE BINARY);SELECT AVG((NOT (t0.c2))) FILTER(WHERE (((t1.c58)<<(t0.c1)) IN (CAST(t0.c2 AS BLOB), CASE WHEN vt1.c0 THEN t1.c79 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t1.c58 ELSE vt0.c0 END))) OVER () FROM t1, vt1 WHERE (((((((((((0.8879781466947183)AND(x'')))AND('1109033310')))AND('278088805')))AND('}3.5%0pY0'))) BETWEEN (CASE WHEN 0.23449494661020598 THEN '1245872356' ELSE 0.9181777916791097 END) AND ('!dj,*ꉩk&H' COLLATE RTRIM)));SELECT ALL (((t0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((NULL))))) AND (((NOT (t0.c2))))) FROM t0, t1;SELECT ((t0.c1) NOTNULL) COLLATE NOCASE, ((((t1.c79) BETWEEN (t0.c2) AND (t1.c58))) IS FALSE), ((t0.c2) BETWEEN (vt0.c0) AND (CASE t1.c74  WHEN t1.c58 THEN vt1.c0 WHEN t0.c1 THEN NULL WHEN t0.c0 THEN t0.c2 END)) FROM vt0 ORDER BY (+ (ABS(t1.c74)));SELECT DISTINCT LAST_VALUE((((((t1.c95, vt1.c0, t1.c58, t1.c74, t1.c79)) NOT BETWEEN ((t1.c58, 0x7bee4977, t0.c2, -1782678784, t0.c2)) AND ((t1.c74, vt0.c0, t0.c0, 260882978, '1141779851')))) NOT BETWEEN ((((t0.c0, t0.c1, t1.c58))=(('1501695897', t0.c2, vt0.c0)))) AND (x'81d7'))) OVER () FROM t0, vt1, vt0, t1 LIMIT -1612898635 OFFSET -2098050177; -- 0ms;
SELECT DISTINCT ((((t0.c0 COLLATE NOCASE)OR(((t0.c2)<<(t1.c74)))))OR((((vt1.c0))>((vt0.c0))))) FROM t1, t0 ORDER BY ((((((vt1.c0)IS(NULL)))OR(t1.c95 COLLATE RTRIM)))OR(t1.c74))  NULLS FIRST;SELECT DISTINCT (NOT (((t1.c74) ISNULL))) FROM t1 WHERE (((((x'')==('-550697700')))IS(((0.8597459300799117)LIKE(-1.7976931348623157E308))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))=((~ (vt1.c0)))), (+ (((0.85512187100983)==(t0.c1))))  NULLS FIRST LIMIT 937919604 OFFSET -375122362;SELECT DISTINCT CASE WHEN LOWER(DISTINCT 775855109) THEN ((t1.c58) BETWEEN (t1.c95) AND (t1.c74)) ELSE t0.c1 END FROM t0, t1; -- 0ms;
SELECT DISTINCT TOTAL(CAST(vt1.c0 AS BLOB)) COLLATE RTRIM FROM vt0 WHERE (((CHAR(0.04253965690460826))<>(CASE 'n|d吱}ࢇ<L'  WHEN x'' THEN 0.6196683131653854 ELSE x'' END)));SELECT DISTINCT t1.c95 FROM vt0, t1 GROUP BY ((((t0.c1)+(t1.c79)))+(x'9469' COLLATE RTRIM)) LIMIT -1239854757 OFFSET 546237234;SELECT DISTINCT (- (0.09283738243286555)), (((((('M')OR(vt0.c0)))AND(t1.c74)))|((t1.c58 IN ()))), CASE WHEN ((x'') IS TRUE) THEN ((((t1.c95)OR(t0.c0)))AND(vt0.c0)) WHEN LIKELY(t0.c2) THEN ((vt0.c0)<=(t1.c74)) WHEN t1.c79 COLLATE NOCASE THEN (((t0.c2))>((t1.c95))) ELSE COALESCE(DISTINCT t0.c2, t0.c1, t1.c58, t1.c79) END FROM vt0, t1, vt1 NOT INDEXED;SELECT ALL CASE WHEN t1.c74 THEN MAX(vt0.c0) END FROM t0, vt0, vt1 ORDER BY (((+ (t1.c58))) NOT BETWEEN (vt0.c0) AND (UNLIKELY(t0.c1))) ASC LIMIT -2129570831 OFFSET 1236633550;SELECT DISTINCT UPPER(DISTINCT CASE WHEN t1.c95 THEN t1.c95 END) FROM t0 WHERE ((((('-1691192454') NOT BETWEEN (-517598805) AND (-43370068)))/(((NULL)==('0.8228974019055589')))));SELECT DISTINCT (+ (t1.c58 COLLATE NOCASE)), CASE WHEN CAST(t0.c0 AS REAL) THEN CAST(t1.c95 AS REAL) ELSE CASE WHEN t0.c2 THEN t1.c58 END END, LIKELIHOOD(((((((((((((t1.c58)OR(t0.c0)))AND(t1.c95)))OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(t0.c0)), 0.9145782407756012) FROM vt1, vt0, t0 WHERE (((('8{' IN ()))||(((x'') IS TRUE))));SELECT CAST(t1.c79 AS NUMERIC) FROM vt1, t1, vt0, t0 GROUP BY COALESCE(CAST(0.8236179470777568 AS NUMERIC), (t1.c79 IN ())), ((LIKE(t1.c58, vt1.c0)) BETWEEN (CAST(t1.c79 AS INTEGER)) AND ('A\ru吱혧b')), t1.c95 HAVING (((((+ (t1.c79)))AND(((vt1.c0) NOT NULL))))OR(((t0.c0)|(0Xffffffff966c3a7a)))) ORDER BY -43370068 DESC  NULLS FIRST, ((HEX(DISTINCT t1.c58)) NOT NULL) DESC  NULLS LAST, ((NULL) BETWEEN ((((vt0.c0))>((x'8c82')))) AND (TYPEOF(vt0.c0))) ASC  NULLS LAST;SELECT DISTINCT ((((LOWER(DISTINCT '4p쵥b'))AND(MIN(t0.c2))))AND(vt0.c0)) FROM t0, vt0, vt1, t1; -- 1ms;
SELECT ALL t1.c74 FROM t1; -- 0ms;
SELECT DISTINCT (((((t1.c74)OR(t0.c1))))>=((CAST(t1.c79 AS INTEGER)))) FROM vt1;SELECT DISTINCT (((t1.c58)-(t0.c1)) IN (CAST(t1.c58 AS INTEGER), -1829050525)) FROM t0 WHERE ((((+ (NULL))) BETWEEN (((((((((0.3410255088875759)AND(x'')))OR(-1239854757)))OR('*rG9M*4')))OR(0xffffffffb4b5a0dd))) AND (IFNULL(DISTINCT NULL, 1774915492))));SELECT DISTINCT t0.c1, CASE rtreenode('-564760141', t0.c1)  WHEN t0.c2 THEN t1.c74 ELSE (((t1.c74, t1.c58, t1.c58)) BETWEEN ((t1.c95, vt0.c0, vt0.c0)) AND ((t0.c2, t0.c0, vt1.c0))) END, ((((t1.c95)<(t1.c74)))>>((((vt1.c0))<=((vt1.c0))))) FROM vt0, vt1, t0, t1; -- 0ms;
SELECT DISTINCT ((((((((((t1.c74) BETWEEN (t1.c95) AND (t1.c74)))AND(((t0.c2)LIKE('')))))OR(((t1.c79)-(t1.c79)))))AND(((t1.c74)>>(t0.c2)))))OR((+ (t1.c95)))), CAST(TOTAL(t0.c2) AS REAL), TOTAL_CHANGES(), (((t0.c0)) BETWEEN ((((NULL)|(t1.c95)))) AND ((((t0.c0) BETWEEN (t1.c58) AND (vt1.c0))))), ((TOTAL(t1.c95)) IS TRUE) FROM vt1, t1 WHERE (((((((((((((((((0.85512187100983)AND(0.6195193016142282)))AND('4P쵥B')))OR(CASE x'909b'  WHEN '' THEN ')GgI\sfK' ELSE NULL END)))AND(CASE WHEN '-477161211' THEN x'c7f6' ELSE 1196991844 END)))AND((x'' IN ('}tO蟎')))))AND(((',cQAྙ-(&\r') ISNULL))))AND(((NULL)<<(NULL)))))AND('㚢%')));SELECT DISTINCT ((t0.c0 IN (t1.c79, t0.c2)) IN ()), CUME_DIST() OVER (), RANK() OVER (), FIRST_VALUE(((NULL) NOT NULL)) OVER (), CASE ((-1782678784) NOT NULL)  WHEN (('4P쵥B')GLOB(t1.c74)) THEN ABS(0.8573953277477084) ELSE COUNT(t0.c2) END FROM t0 WHERE (LOWER(DISTINCT ((0.14968709418954873) BETWEEN (x'') AND (0.6493004950581395))));SELECT DISTINCT TOTAL(CASE WHEN t1.c58 THEN t1.c74 WHEN t1.c58 THEN t1.c79 WHEN t0.c1 THEN vt1.c0 ELSE t0.c0 END) FROM vt0, t1 GROUP BY CASE CASE WHEN t0.c1 THEN t1.c74 END  WHEN (NOT (vt1.c0)) THEN UNLIKELY(1637694900) WHEN (((t0.c1))<=((vt1.c0))) THEN ((t0.c1) BETWEEN (t0.c1) AND (t1.c58)) WHEN ((t1.c79) NOT BETWEEN (t0.c0) AND (t0.c1)) THEN ((vt1.c0) NOT BETWEEN (t1.c79) AND (t0.c1)) ELSE ((t1.c58) BETWEEN (t1.c74) AND (t0.c2)) END HAVING CAST(((t1.c79) NOT BETWEEN (t1.c95) AND (t0.c1)) AS TEXT) LIMIT -184697394 OFFSET -600912928;SELECT DISTINCT ((((t1.c58) IS TRUE)) NOT NULL), ((((vt0.c0 COLLATE BINARY)OR(((((vt0.c0)AND(t0.c1)))OR(t1.c95)))))OR(TOTAL(t1.c58))), CASE WHEN GROUP_CONCAT(t0.c2) THEN CASE t0.c1  WHEN t0.c0 THEN t1.c79 END END FROM t1, vt1, vt0 GROUP BY (TYPEOF(0.4219984739921897) IN (((t1.c95) NOT BETWEEN ('|U') AND (NULL))));SELECT DISTINCT GROUP_CONCAT(t1.c58) FROM t0, vt1 WHERE ((((0xffffffffffd5c56b) NOTNULL) IN ()));SELECT DISTINCT AVG(((t1.c79)<=(t1.c74))) FROM vt1, t0, vt0, t1 GROUP BY SQLITE_VERSION(); -- 0ms;
SELECT ALL ((((t1.c74 COLLATE NOCASE)AND(t1.c95)))AND(0X2e3e9c05)), MIN(((vt1.c0) NOTNULL)), (((NOT (t0.c0)))|((((x'', vt0.c0, t0.c1))<((vt1.c0, t0.c0, x'2ca7'))))) FROM t1, t0, vt1, vt0 WHERE (CAST(((('')) BETWEEN (('-1168358588')) AND ((x''))) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((json_valid(t1.c74))!=(LIKELIHOOD(DISTINCT t0.c0, 0.41482770149500336))) FROM t0 WHERE (CAST((+ ('Z''qO/f''')) AS BLOB));SELECT ALL (((t1.c95 IN ())) NOT BETWEEN (NULLIF(t0.c1, t0.c2)) AND ((t0.c1 IN ()))) FROM t1 WHERE ('-814536539');SELECT ALL CAST(((t0.c1) NOT BETWEEN (t1.c74) AND (t0.c1)) AS TEXT), LIKELIHOOD(((t0.c0)IS(t0.c1)), 0.8199541516930913), (NOT (x'1acd')) FROM vt0, t1, vt1 GROUP BY CASE WHEN CAST(vt0.c0 AS REAL) THEN (t1.c74 IN ()) ELSE CASE t0.c0  WHEN t1.c95 THEN vt1.c0 WHEN t1.c79 THEN t1.c79 WHEN vt1.c0 THEN x'' ELSE t1.c74 END END HAVING (((NOT (t0.c0)))<>(((((0.790389541442764)AND(t1.c95)))OR(vt1.c0)))) LIMIT 1752682047;SELECT DISTINCT t0.c0, IFNULL(CAST(t0.c2 AS NUMERIC), x'13c8'), TRIM(((((t0.c2)AND(x'')))OR(vt1.c0))), ((t1.c95)==(json_patch(t1.c95, vt0.c0))), ((vt1.c0)/(t0.c2)) COLLATE BINARY FROM vt1;SELECT ALL MAX(((vt0.c0)/(t0.c1))), NTH_VALUE(t1.c79, ((((t0.c0 COLLATE BINARY)OR(((t1.c79) ISNULL))))AND((NOT (t1.c58))))) OVER (), json_object(MAX(t0.c2), (vt1.c0 IN ())) FROM t1, t0;SELECT ALL (((((t0.c1 IN ()))OR(0.43657514577384515)))OR(CASE WHEN t0.c0 THEN t1.c58 END)), SUM(t0.c2) OVER (), vt1.c0 FROM t0, t1 LEFT OUTER JOIN vt0 ON NULLIF(DISTINCT x'19e9', t1.c79) WHERE (((((NULL) NOT BETWEEN (NULL) AND ('497619494'))) NOT BETWEEN ((('8	7hA%[{') NOT BETWEEN (NULL) AND (-295400839))) AND ((((NULL))>((x''))))));SELECT ALL ((((((((CASE t0.c1  WHEN vt0.c0 THEN 0.9923737263633831 END)OR((t1.c74 IN ()))))OR(((t1.c95)>(t1.c95)))))AND((+ (t0.c0)))))OR(((t1.c74) BETWEEN (t1.c74) AND (NULL)))), COUNT(*), CAST((+ (vt1.c0)) AS REAL) FROM t1 LEFT OUTER JOIN vt0 ON ((((CAST(vt1.c0 AS NUMERIC))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c2 END)))AND(t0.c1)) CROSS JOIN t0 ON CAST(1838797066 AS NUMERIC) INNER JOIN vt1 ON ((t1.c95)!=(t0.c0)) COLLATE RTRIM;SELECT ALL ((vt0.c0) NOT BETWEEN (t1.c79 COLLATE NOCASE) AND (((t0.c2)-(t1.c95)))), (((vt0.c0, t1.c95, t1.c74)) NOT BETWEEN ((vt1.c0, '0.4219984739921897' COLLATE NOCASE, (t1.c58 IN (t0.c0)))) AND ((((t0.c1) IS TRUE), ((((((((t0.c0)OR(t1.c74)))OR(t1.c95)))OR(t1.c79)))OR(t1.c95)), CASE t0.c1  WHEN t1.c79 THEN t1.c95 END))), RANK() OVER ( RANGE  UNBOUNDED PRECEDING) FROM t0, t1 WHERE (CAST(((NULL)AND(NULL)) AS INTEGER)) GROUP BY ((NULL)>(((t0.c2) ISNULL)));SELECT ALL x'd068' FROM vt1, vt0 FULL OUTER JOIN t1 ON (+ (NULL)) RIGHT OUTER JOIN t0 ON ((vt1.c0 COLLATE RTRIM)>>(((x'e0d5') BETWEEN (t0.c1) AND (vt0.c0)))); -- 1ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(t0.c1)))OR(t1.c58)))AND(t1.c79)))OR(t0.c0))) NOT BETWEEN (((t1.c58)||(2.68765319E8))) AND (((t0.c2)OR(t1.c95)))) FROM t1, t0 LIMIT 1356539547 OFFSET 1889399681;SELECT DISTINCT CAST(((t1.c95) NOT NULL) AS NUMERIC), (((NULL) NOT BETWEEN (t0.c2) AND (t0.c1)) IN (((t0.c0)||(t0.c2)))), ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (t0.c2) AND (((t1.c79) NOT NULL))) FROM vt1, t0, vt0, t1; -- 0ms;
SELECT ALL t1.c95 FROM vt1, t0, t1 WHERE (((('863302942')) NOT BETWEEN ((('838847864' IN ()))) AND ((((-1263444680)IS NOT(x'5c54')))))); -- 0ms;
SELECT TRIM(t0.c1, t0.c2) COLLATE NOCASE FROM t0 WHERE (((NULLIF(DISTINCT NULL, -1.263165219E9)) BETWEEN (0.03741624176715852 COLLATE RTRIM) AND ((- (2.60882978E8))))); -- 0ms;
SELECT DISTINCT ((((((t0.c2))!=((vt0.c0)))))<>(((+ (t1.c74))))) FROM t1, vt1, t0 WHERE (CASE WHEN x'9129' THEN CAST(2122353577 AS BLOB) ELSE ('-249823201' IN ()) END);SELECT DISTINCT (NOT (DATE(t1.c74, vt1.c0, t0.c1))) FROM vt0;SELECT DISTINCT (~ (((((t1.c74)OR(vt1.c0)))OR(t0.c1)))) FROM t0, vt0 WHERE (((((0.515092212432719) BETWEEN (x'') AND (x''))) BETWEEN ('-1239854757') AND (((0.735891936080906)>(0.6018309038577991)))));SELECT DISTINCT (~ (RTRIM(t1.c79))) FROM t0, vt1, vt0 WHERE (NULLIF((((0.8287440060281288, '1838797066', ')_	as')) BETWEEN (('615564458', NULL, '0.515092212432719')) AND (('1816750135', NULL, 0.17653577908128304))), ((((x'')AND(0X24b0c4aa)))AND('-1462995992')))) ORDER BY vt0.c0;SELECT DISTINCT (((t1.c79)) BETWEEN ((((t0.c0) NOT BETWEEN (t1.c58) AND (t1.c95)))) AND ((((t1.c58) ISNULL)))) FROM t0, vt0, t1, vt1 WHERE (((((NULL) NOTNULL)) ISNULL)); -- 0ms;
SELECT ALL ((((vt0.c0)>>(t1.c95))) BETWEEN (((((t1.c58)OR(t1.c79)))AND(t1.c58))) AND (json_patch(vt1.c0, x''))) FROM t0 INNER JOIN vt0 ON ((CAST(vt1.c0 AS BLOB)) IS TRUE) WHERE ((((((NULL, x'', '')) BETWEEN ((0Xffffffffe2b48093, NULL, 0xffffffff9b801a66)) AND ((0.4451232650323905, NULL, 0.9930543951612557)))) BETWEEN (((NULL)<=(''))) AND (((((0.7032948612809314)OR('0.7237456732114983')))AND(x''))))) GROUP BY (NOT (((t0.c1) NOT BETWEEN (t1.c74) AND (vt0.c0))));SELECT ((vt1.c0)<=((((t1.c74))>((vt0.c0))))) FROM vt1, t1;SELECT ALL ((0.47438879531544054)LIKE(t0.c0 COLLATE NOCASE)), (NOT ('eꃝ')), CASE WHEN ((((t0.c0)AND(t1.c79)))AND(t0.c0)) THEN (t0.c1 IN (t1.c95, vt1.c0)) WHEN ((NULL) BETWEEN (t1.c74) AND (0xffffffffb4b15d38)) THEN ((t0.c0) IS TRUE) WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN t1.c74 WHEN (+ (t1.c58)) THEN CAST(t0.c2 AS TEXT) WHEN AVG(t1.c74) THEN ((t0.c0) NOTNULL) ELSE ((t0.c2)|(t1.c95)) END FROM t1;SELECT DISTINCT (- (((((((((t1.c74)AND(t1.c58)))OR(vt1.c0)))OR(t1.c95)))AND(t0.c0)))) FROM t1, t0;SELECT DISTINCT ((CASE WHEN t1.c58 THEN t0.c0 END)+(((t0.c1)<(t0.c2)))), SUM(((t1.c95) ISNULL)) OVER (), NULL, SUM(CAST(t1.c95 AS TEXT)), (((t1.c58 IN (t1.c95, t0.c2)))%(CASE t0.c0  WHEN t0.c2 THEN vt1.c0 END)) FROM vt0, vt1, t0 ORDER BY (- (((((t0.c1)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST;SELECT DISTINCT t1.c95 FROM t0 WHERE (((('' IN ())) BETWEEN (CASE x''  WHEN '222924970' THEN NULL END) AND ((((('1110612145')AND(NULL)))AND('-1315626012')))));SELECT x'' FROM vt1 INNER JOIN vt0 ON CASE t1.c95 COLLATE RTRIM  WHEN ((vt0.c0) ISNULL) THEN CAST(t0.c2 AS NUMERIC) WHEN LIKELY(t1.c74) THEN (((t1.c74)) NOT BETWEEN ((t1.c58)) AND ((x''))) WHEN CASE vt0.c0  WHEN t1.c74 THEN t1.c79 ELSE vt1.c0 END THEN '-910195937' ELSE (NOT (vt1.c0)) END FULL OUTER JOIN t1 ON CAST((t1.c58 IN ()) AS TEXT) WHERE (x'' COLLATE RTRIM);SELECT CASE WHEN (NOT (vt1.c0)) THEN ((2.84845098E8) BETWEEN (t1.c79) AND (t0.c0)) ELSE CAST(t0.c1 AS NUMERIC) END, ((t0.c1 COLLATE NOCASE)OR((((NULL, t0.c2, t0.c0)) BETWEEN ((t1.c95, vt1.c0, t1.c74)) AND ((t1.c95, t0.c1, t1.c58))))), t1.c58 FROM vt1, t1, t0 WHERE (((((0.6195193016142282)*(x'')))&(((NULL) NOT BETWEEN (NULL) AND (x'356f'))))); -- 0ms;
SELECT DISTINCT (((TOTAL(0xffffffffdf61a269)))<=((t1.c74))) FROM vt0, t1, t0 WHERE (((NULL COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((t1.c95)IS NOT(vt1.c0)))LIKE(CAST(t1.c58 AS INTEGER))), LIKELY(t0.c2) COLLATE BINARY, vt1.c0 FROM vt1, vt0, t1 WHERE (((x'f55c9d56' COLLATE NOCASE) IS FALSE)) EXCEPT SELECT DISTINCT (CAST(t0.c2 AS NUMERIC) IN ()), COUNT(((vt1.c0)/(t1.c58))), PERCENT_RANK() OVER () FROM t1, t0, vt1 WHERE (CAST((((NULL))<>((-422163806))) AS BLOB)) LIMIT 1751876048 OFFSET -900674746;SELECT (((-5.65143958E8))<((('()' IN ())))) FROM vt1 WHERE ((((('-517598805') NOT NULL)) NOT BETWEEN (json_extract(x'c09f', 0xffffffff95be7b00)) AND (((x'')+(1816750135)))));SELECT DISTINCT CAST(vt1.c0 AS REAL) COLLATE NOCASE FROM t1, vt1, t0, vt0 GROUP BY (t0.c2 IN ((NOT (-600912928)), ((t0.c2) NOTNULL))) LIMIT 1728016879 OFFSET 1302687122; -- 0ms;
SELECT DISTINCT LIKELIHOOD(((((t1.c74)AND(t1.c74)))AND(vt0.c0)), 0.2363353830147804), ((((((((CAST(t0.c1 AS BLOB))OR((+ (t1.c79)))))OR(vt0.c0 COLLATE RTRIM)))AND(CASE WHEN x'' THEN t1.c58 ELSE t1.c58 END)))OR(((t1.c58)<=(t0.c1)))), CASE WHEN vt1.c0 THEN t1.c95 COLLATE RTRIM WHEN t0.c1 THEN COUNT(t1.c58) WHEN '-' THEN ((t1.c74)-(t1.c58)) ELSE (t0.c0 IN ()) END FROM vt0, vt1, t0, t1; -- 0ms;
SELECT ALL CUME_DIST() OVER ( ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t1.c58 THEN t1.c79 END) ISNULL)) FROM t0 WHERE (UNLIKELY(((x'') IS TRUE)));SELECT ALL NTH_VALUE(ABS(DISTINCT t0.c0) COLLATE RTRIM, ((t0.c2)<>(t0.c2)) COLLATE NOCASE) OVER () FROM t0 LIMIT 156991579 OFFSET -158816495; -- 0ms;
SELECT ((('	I')>=(t0.c2)) IN ()) FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT ((CASE t1.c79  WHEN NULL THEN t1.c79 ELSE t1.c74 END) BETWEEN (((t0.c2) BETWEEN (t1.c58) AND (t1.c95))) AND (NULL)) FROM t1, vt0;SELECT DISTINCT LIKELIHOOD((((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c2, t0.c0, NULL)) AND ((x'56717eed', vt1.c0, t1.c74))), 0.11718792373524767) FROM vt0, t1 GROUP BY (+ (((t1.c95)>(t0.c1)))), (((('-1645687451') IS FALSE))LIKE((~ (t1.c74)))), LIKELIHOOD('1236633550', 0.6619089254744508) HAVING CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) IS TRUE) ELSE ((t1.c74) IS TRUE) END;SELECT DISTINCT ((((((t0.c0)AND(vt0.c0)))AND(NULL))) BETWEEN (t1.c74 COLLATE BINARY) AND ((((t0.c2, t1.c74, 0.5914748513676586))=((t1.c79, '-1168358588', x''))))) FROM t0, t1, vt1 WHERE (((((((((('775855109' IN ()))AND(0.03974332005488379)))OR(x'ca9c')))AND('997418768' COLLATE RTRIM)))OR((('229733322')||(1922783325)))));SELECT (+ (((t1.c58)||('-375122362')))) FROM t0, vt0, vt1;SELECT ((CAST(t0.c2 AS REAL))|((t0.c2 IN ()))), GROUP_CONCAT(((t0.c1) ISNULL)) OVER (), MIN((+ (t0.c0)), ((t1.c79)GLOB(t1.c95))) FROM vt1, t1 INNER JOIN t0 ON ((((vt1.c0)|(t1.c95)))LIKE(((((t1.c95)OR(t1.c74)))OR(vt0.c0))));SELECT -520550865, TRIM(DISTINCT ((((NULL)OR(t0.c2)))OR(t0.c2))), ((CAST(vt1.c0 AS TEXT)) NOT NULL) FROM t0, vt1 ORDER BY (json_extract(vt0.c0, vt1.c0, t0.c1, vt0.c0, t1.c79, t1.c79) IN (CASE vt0.c0  WHEN t1.c95 THEN t1.c58 ELSE vt1.c0 END))  NULLS LAST;SELECT ALL ((AVG(t1.c95))OR(t0.c0 COLLATE RTRIM)) FROM vt1, vt0, t0;SELECT t1.c79 FROM vt1 WHERE ((~ (((0.11987369280583282) IS TRUE))));SELECT ALL LEAD(((x'')+(vt1.c0)) COLLATE BINARY, vt1.c0 COLLATE NOCASE, ((((vt1.c0) NOTNULL))%(CAST(vt1.c0 AS INTEGER)))) OVER (), NULL, ((((t0.c2) IS TRUE)) IS FALSE) FROM vt1;SELECT t0.c2 COLLATE NOCASE FROM t0, vt0, t1, vt1; -- 0ms;
SELECT t1.c79 FROM t1, t0 WHERE (((('1301371097' IN (NULL, NULL)))<(((NULL)>=('0.3806736518011723'))))); -- 0ms;
SELECT NULL FROM vt1; -- 0ms;
SELECT DISTINCT (vt1.c0 IN ((NOT (vt1.c0)))) FROM t1, vt0, vt1 WHERE (CASE 849113632 COLLATE RTRIM  WHEN COALESCE(DISTINCT 0x6b9618f1, -1239854757, '', 0.2677593551828791) THEN x'' COLLATE RTRIM ELSE COALESCE(x'', '-295400839', x'', 0.3162926485803953) END); -- 0ms;
SELECT DISTINCT t0.c1 FROM t0, vt1, t1, vt0 WHERE (((NULL) NOT BETWEEN (((-345114244) NOT BETWEEN (x'') AND (0.9705345391315885))) AND (((NULL)-('*F໪K)37'))))); -- 0ms;
SELECT ((((t1.c74 COLLATE RTRIM)AND((+ ('-295400839')))))AND(((0.17653577908128304) IS FALSE))) FROM t0 ORDER BY 0.42488799026854196 DESC  NULLS LAST;SELECT DISTINCT LEAD('OBLM', CASE (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))  WHEN vt1.c0 COLLATE BINARY THEN ((t0.c2)AND(vt0.c0)) WHEN ((t0.c2)AND(NULL)) THEN ((vt1.c0) ISNULL) WHEN COALESCE(vt0.c0, t1.c74) THEN ((t1.c74) NOT BETWEEN (vt0.c0) AND (t1.c74)) ELSE ((t0.c0)AND(t0.c2)) END, ((('', t1.c95, t1.c58, t0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(t1.c58)), ((vt0.c0)IS(vt1.c0)), CAST(t0.c1 AS REAL), ((t1.c74)=(x'')), ((0.07031869544720304)GLOB(t1.c58)))) AND ((('d,>0|FO' IN ()), ((t0.c2)>>(t1.c79)), (((t0.c0, t0.c1, t1.c58))==((t1.c74, t1.c58, vt0.c0))), CASE t1.c74  WHEN t1.c95 THEN t0.c2 END, (t1.c95 IN (t1.c58)))))) OVER () FROM t0, t1, vt0, vt1 WHERE (((((((x'')LIKE(NULL)))OR((NULL IN ()))))AND(((0.4245638042308213) NOT NULL)))); -- 0ms;
SELECT DISTINCT (((GLOB(vt1.c0, vt1.c0)))>(((((t1.c74)) NOT BETWEEN ((t1.c74)) AND ((t1.c79)))))), CASE (((('f즸s3n~')AND(t1.c95)))OR(vt1.c0))  WHEN ((t0.c0) BETWEEN (t0.c1) AND (t1.c79)) THEN ((t1.c95)GLOB(t1.c79)) WHEN ((t1.c95) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))AND(x'0ffac441')) WHEN ((t0.c0) NOT NULL) THEN ((t1.c58)/(t1.c58)) WHEN 0.4274767574952286 THEN ((vt1.c0)|(t0.c1)) WHEN ((t0.c1) NOT BETWEEN (t1.c95) AND (NULL)) THEN ((t1.c74) NOTNULL) ELSE '1108228835' END, (((((t1.c79))>((t0.c1))))||(x'')) FROM vt0, t0;SELECT ALL (NOT ((t0.c1 IN ()))), ((COUNT(t1.c79)) ISNULL), (+ (vt0.c0)) COLLATE RTRIM FROM t0, vt1, t1, vt0 WHERE (((CASE WHEN '-573481403' THEN 0xffffffff95843555 WHEN 'x쵸' THEN '-43370068' WHEN 1529529610 THEN 'Kmj' WHEN 0.43567677541729566 THEN '4vI' WHEN x'2771' THEN 0.19374943005036804 END)+('0.9181777916791097'))) LIMIT 999239613 OFFSET 229733322; -- 1ms;
SELECT DISTINCT IFNULL(NULL, ((t0.c0)LIKE(vt1.c0))), json_extract((NOT (vt1.c0)), ((((((((552498625)AND(vt1.c0)))AND(t0.c1)))OR(t1.c95)))AND(t1.c79))), GROUP_CONCAT((NOT (t1.c79))) FILTER(WHERE ((997418768)-((((t1.c74))>((t0.c2)))))) OVER ( ORDER BY (CASE vt1.c0  WHEN t0.c1 THEN t1.c58 ELSE vt0.c0 END IN ()) DESC, (~ (t0.c1)) COLLATE NOCASE ASC) FROM t0, t1, vt0 WHERE ((((NULL IN (NULL)))==(((((((((x'')OR(x'2aac')))OR(0xffffffff89267a6f)))AND(0.030314818947586808)))AND('+-')))));SELECT ALL CASE WHEN ((t0.c2) IS TRUE) THEN CAST(t1.c95 AS TEXT) WHEN NULL THEN ABS(DISTINCT t1.c95) WHEN CASE WHEN t1.c58 THEN t0.c2 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN t1.c74 END THEN ((vt0.c0)/(vt1.c0)) END, (((t1.c74) NOT BETWEEN (vt1.c0) AND (t1.c74)) IN (CAST(t1.c74 AS BLOB))), (AVG(t1.c74) IN ((((t0.c2))<((t0.c2))), ((((t1.c58)OR(t0.c0)))AND(vt0.c0)))) FROM vt0, vt1 WHERE ((((((('') ISNULL))OR('' COLLATE BINARY)))OR((~ (NULL)))));SELECT DISTINCT TIME(t1.c74 COLLATE BINARY, CASE vt0.c0  WHEN t1.c95 THEN t1.c74 WHEN t0.c2 THEN t0.c2 WHEN t1.c74 THEN 0.29238643431486233 WHEN vt1.c0 THEN t1.c58 WHEN t1.c79 THEN vt0.c0 END, t0.c1 COLLATE RTRIM, MIN(t1.c58), TYPEOF(t1.c58)) FROM t0, t1;SELECT DISTINCT RANK() OVER ( ORDER BY ((((load_extension(t0.c2))OR(((t0.c2) NOTNULL))))OR('2001689694')) DESC), ((((t0.c0)==(t1.c79))) BETWEEN (CAST(t0.c0 AS REAL)) AND (((t0.c0)<(t1.c58)))), (((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t1.c74)))) NOT BETWEEN (((t1.c95)AND(t1.c58))) AND (((((t1.c74)OR(x'')))AND(t0.c0)))) FROM t0, vt1, vt0 WHERE (0.2162362064168898);SELECT ALL ((((((((((((t1.c79)OR(t1.c74)))AND(t0.c0)))AND((((vt1.c0))>=((t0.c2))))))OR(MAX(NULL))))AND(TRIM(DISTINCT t0.c1, x''))))OR(t1.c74 COLLATE RTRIM)), ((t0.c0) NOT BETWEEN (((t1.c58)LIKE(t1.c95))) AND (COUNT(vt0.c0))), PERCENT_RANK() OVER () FROM t0, vt1;SELECT ALL (CAST(vt1.c0 AS BLOB) IN ()) FROM vt1; -- 0ms;
SELECT (- ('{W,yA')) FROM t0, vt1, vt0 ORDER BY ((NULL)-(t0.c0))  NULLS LAST; -- 0ms;
SELECT (- (x'')), ((t0.c1) NOT BETWEEN ((((1637694900, t1.c74, t1.c74)) NOT BETWEEN (('', t1.c58, x'')) AND ((t1.c58, t0.c2, t1.c79)))) AND (((t0.c0)%('\nSRn搪K')))), ROW_NUMBER() OVER (), CASE WHEN TYPEOF(DISTINCT t1.c58) THEN ((t0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE t1.c58  WHEN t1.c79 THEN t1.c79 ELSE vt0.c0 END END, (t1.c74 IN ()) COLLATE BINARY FROM vt0, vt1, t0 WHERE ((('-184697394')LIKE(0xffffffffaa72a7ff)) COLLATE RTRIM);SELECT DISTINCT CASE WHEN ((t1.c95)/(t0.c0)) THEN ((t0.c2) NOT BETWEEN (t1.c58) AND (t1.c74)) ELSE CASE t0.c0  WHEN NULL THEN t0.c1 END END FROM vt1, vt0;SELECT DISTINCT (((((t1.c95, x'', t0.c0))<((t1.c95, t1.c74, t0.c0))))AND(NULLIF(t1.c58, t1.c74))) FROM t1, t0, vt1, vt0 WHERE (x''); -- 0ms;
SELECT RANK() OVER (), ((CAST(t0.c1 AS TEXT))%(t1.c95)), ((t0.c2) NOT BETWEEN (t0.c2) AND (vt1.c0)) COLLATE RTRIM FROM t1, vt1, t0, vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( RANGE ((((((((SQLITE_COMPILEOPTION_GET(t1.c74))OR(((((((((t0.c1)OR(t0.c2)))OR(vt1.c0)))OR(t0.c1)))OR(t0.c1)))))AND(((t1.c79)>(vt0.c0)))))OR(((x'') IS FALSE))))AND(t0.c1 COLLATE NOCASE)) PRECEDING EXCLUDE NO OTHERS), ((((t0.c2)=(t1.c74)))|(json_quote(-1.84697394E8))), ((((((((((t1.c58)-(t1.c79)))OR(((t1.c95) NOTNULL))))AND((((vt1.c0))<>((t1.c58))))))AND(((t1.c74)%(t0.c2)))))OR((((t1.c79, t1.c74, NULL)) BETWEEN ((t1.c74, vt0.c0, t1.c58)) AND ((t1.c58, t1.c58, t1.c58))))) FROM t1, vt0, vt1;SELECT CASE ((t0.c0)>=(t1.c95))  WHEN t1.c74 COLLATE RTRIM THEN CAST(t1.c79 AS TEXT) ELSE NULL END FROM vt0 INNER JOIN t1 ON (CAST(t0.c0 AS REAL) IN ()) ORDER BY (t1.c74 IN ());SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c58)))<=(((t1.c95)||(t0.c2)))) FROM t1, t0 WHERE ((((((('sW[.ro')<>(600034468)))OR(((x'')<('173135667')))))OR((NULL IN (0.46748641800568136))))) ORDER BY (0.33159706941408384 IN ()) DESC  NULLS FIRST;SELECT CAST(t1.c74 AS TEXT) FROM t0, t1, vt1, vt0; -- 0ms;
SELECT ALL ((NULL) IS TRUE) FROM vt1, vt0 WHERE (CAST((('1341511207')GLOB(NULL)) AS TEXT)); -- 0ms;
SELECT ALL CASE ABS(t1.c79)  WHEN ((t1.c74) ISNULL) THEN COUNT(t1.c58) WHEN ((vt1.c0)<<(t1.c95)) THEN ((t0.c1) NOT NULL) WHEN (~ (t1.c74)) THEN ((t1.c74)*(t1.c74)) END FROM t0 WHERE (CASE x'7c09'  WHEN x'' THEN 0xffffffffa493bdfd END COLLATE BINARY);SELECT ALL (~ ((t1.c95 IN ()))), t1.c58 COLLATE BINARY, TOTAL(((t1.c95)<<(t1.c58))) OVER () FROM t1, vt0 WHERE ((((x'9f59') NOT BETWEEN ('A{0') AND (NULL)) IN ())); -- 0ms;
SELECT DISTINCT t1.c79 FROM t1; -- 0ms;
SELECT (((((t0.c2) BETWEEN (t1.c95) AND (t1.c95))))>((t1.c74))) FROM vt0, t0, t1, vt1; -- 0ms;
SELECT ALL ((((t1.c95 IN (t1.c74)), ((vt1.c0)|(vt1.c0)), ((t0.c1)<(vt1.c0)), ((t0.c1)-(t0.c0)), CASE WHEN t1.c58 THEN vt1.c0 ELSE t1.c74 END))<=((((t0.c0)AND(t1.c95)), CAST(t1.c74 AS TEXT), (NOT (t1.c58)), ((vt0.c0)IS(t0.c1)), CASE '260882978'  WHEN t0.c1 THEN t1.c74 ELSE t1.c79 END))) FROM t1;SELECT ALL NULL FROM vt0, vt1, t1; -- 0ms;
SELECT DISTINCT x'a5e5' FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT CASE CASE t0.c0  WHEN t1.c95 THEN t1.c95 END  WHEN CASE WHEN t1.c58 THEN t1.c58 ELSE t0.c2 END THEN (((t0.c1)) BETWEEN ((t1.c74)) AND ((t1.c79))) ELSE t0.c0 COLLATE NOCASE END FROM t1, t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1, vt0 WHERE ((((((('229733322') IS FALSE))AND(CASE WHEN x'' THEN NULL END)))AND(CASE '720489367'  WHEN NULL THEN NULL END))); -- 0ms;
SELECT DISTINCT json_valid(t1.c95 COLLATE NOCASE), ((((((t0.c2) NOT BETWEEN (t1.c58) AND (t0.c1)))OR(((vt1.c0)|(t1.c95)))))OR(MIN(vt0.c0))), ((t1.c79)||(((x'')GLOB(t0.c1)))) FROM t1, vt1, t0, vt0; -- 1ms;
SELECT ((((t1.c95)||(t1.c79)))%(x'e30b')), (((t0.c2) IS FALSE) IN ()), CAST(TIME(t1.c95, t1.c95, t0.c0, t0.c0, vt0.c0) AS NUMERIC) FROM t0, vt0, t1, vt1; -- 0ms;
SELECT ALL (~ (t1.c74)) FROM t1, vt1, t0 WHERE ((NOT (json_remove(x'', 0.8597459300799117, 0.27806820585143766, '707871196'))));SELECT DISTINCT CASE ((((vt0.c0)AND(vt0.c0)))AND(t0.c1))  WHEN COUNT(*) THEN NULL WHEN ' 稨' THEN CAST(vt1.c0 AS REAL) WHEN 'Yw' THEN CASE 't	l[Q'  WHEN t1.c74 THEN vt0.c0 WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE t1.c95 END END FROM t1, t0, vt0;SELECT ALL ((((vt1.c0) NOT NULL))>>(MIN(t1.c79))) FROM vt0, vt1, t0, t1 WHERE ((('' COLLATE NOCASE)LIKE((-1841930358 IN ('cGy_ U'))))); -- 0ms;
SELECT DISTINCT (((t1.c58, vt1.c0, vt0.c0)) NOT BETWEEN ((((t1.c74)-(vt0.c0)), t1.c74, ((t0.c0)%(t1.c95)))) AND ((CAST(vt1.c0 AS INTEGER), ('1793035425' IN (t0.c2, t0.c0)), t1.c58 COLLATE RTRIM))), NULL COLLATE NOCASE, CAST(NULL AS REAL) FROM t1 WHERE (json_type((('-1523390380') BETWEEN ('0.5361896505588165') AND (0.735891936080906))));SELECT DISTINCT ((IFNULL(t0.c1, t0.c0))IS(((((((((t1.c95)AND(t0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c2)))), load_extension(((t0.c1)GLOB(t0.c1)), ((((t1.c58)AND(t1.c95)))AND(t1.c95))), CASE WHEN COUNT(t1.c95) THEN (((t1.c95)) BETWEEN ((t1.c74)) AND ((t1.c79))) ELSE COALESCE(DISTINCT t0.c0, t1.c58) END FROM t0, t1 ORDER BY (((t0.c2, t0.c0, NULL)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)), ((t0.c0)>=(vt1.c0)), CAST(t1.c58 AS BLOB))) AND (((t0.c0 IN (vt0.c0, t0.c2)), t0.c2, ((t1.c95)&(t1.c95))))) DESC;SELECT UPPER(((t0.c1) NOT BETWEEN (t1.c58) AND (vt0.c0))) FROM vt0 FULL OUTER JOIN t1 ON t1.c95 FULL OUTER JOIN vt1 ON (((- (t1.c95))) NOT NULL);SELECT DISTINCT x'7824', (t1.c58 COLLATE RTRIM IN ()), NULLIF((- (t1.c95)), (- (vt0.c0))) FROM t1, vt0; -- 1ms;
SELECT (+ ((vt0.c0 IN (t1.c74, t1.c95)))) FROM vt0 WHERE ((NULL COLLATE RTRIM IN ()));SELECT ALL vt0.c0 FROM t0 INDEXED BY i26, vt0, vt1, t1;SELECT ((((t0.c0)-(t1.c74))) BETWEEN (t0.c2) AND (t0.c1)) FROM vt0, vt1;SELECT DISTINCT ((((((((((t0.c1) NOTNULL))OR(x'')))OR(IFNULL(t0.c1, vt0.c0))))OR(((t1.c95)/(t0.c1)))))AND(x'')) FROM t1;SELECT (((((0.2534257139452113)) NOT BETWEEN ((t1.c58)) AND ((t1.c95))))IS(CAST(t0.c2 AS REAL))) FROM vt1, vt0, t1 WHERE (CAST(((1728016879)<=(x'')) AS NUMERIC));SELECT DISTINCT (((((t1.c74))!=((vt0.c0))))||(TYPEOF(vt1.c0))) FROM t0, vt1 WHERE (((x'548f' COLLATE RTRIM) NOT NULL));SELECT DISTINCT json_type(((t0.c1) IS FALSE)), (CASE -422163806  WHEN t1.c58 THEN t1.c58 ELSE x'' END IN ()), AVG(x''), (- (CASE vt0.c0  WHEN t1.c95 THEN NULL END)), ((t0.c2) NOTNULL) COLLATE RTRIM FROM vt1, vt0;SELECT DISTINCT -169921279 FROM t1, t0, vt1, vt0 LIMIT 156991579 OFFSET -1771292038; -- 0ms;
SELECT (((0.32903607871720764 IN ()))&(SUM(t1.c74))), ((CAST(t0.c2 AS NUMERIC))GLOB(NULL)), GROUP_CONCAT(t0.c2) FROM t0, t1, vt0 LIMIT -520550865 OFFSET -922617715; -- 0ms;
SELECT DISTINCT TOTAL((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c79)))) FROM vt1, t1, vt0; -- 1ms;
SELECT ALL SUM(x'0493') OVER () FROM t0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOTNULL) AS TEXT) FROM vt0, vt1, t1, t0; -- 0ms;
SELECT ALL CASE ((t0.c2)LIKE(t0.c1))  WHEN ((t1.c79)IS('M')) THEN ((t1.c95) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((vt0.c0) NOT NULL) END FROM t1, t0;SELECT DISTINCT CASE ((vt1.c0)IS NOT(t1.c58))  WHEN CAST(t0.c0 AS BLOB) THEN CASE WHEN t1.c74 THEN t1.c95 END WHEN ((vt0.c0) BETWEEN (t1.c95) AND (t1.c95)) THEN ((t0.c1) IS TRUE) WHEN (0xfffffffffbf10dde IN ()) THEN t0.c0 ELSE ((vt0.c0) NOT BETWEEN (t1.c74) AND (t1.c74)) END FROM t0, vt0, vt1, t1 WHERE ((((- (x'')))GLOB((~ (-1.612898635E9))))); -- 0ms;
SELECT (((t0.c0, t0.c1, t1.c74)) BETWEEN (((t0.c1 IN (vt0.c0)), CAST(t0.c0 AS INTEGER), (NOT (t1.c95)))) AND ((((t1.c95) BETWEEN (t1.c79) AND (t0.c0)), IFNULL(t0.c0, t0.c2), SUM(vt0.c0)))), TRIM((- (t0.c0))), COUNT(*) FROM t1, t0, vt1, vt0 WHERE ((('0.17653577908128304' IN (x'', 'uVz	_')) IN ())); -- 0ms;
SELECT t1.c74 FROM t1, t0; -- 0ms;
SELECT ALL COUNT((((('#J')OR(vt0.c0)))AND(t0.c1))) FILTER(WHERE ((CAST(']i' AS TEXT)) BETWEEN (((((((((t1.c74)AND(t0.c1)))AND(vt1.c0)))OR(t1.c74)))AND(vt0.c0))) AND (vt1.c0))) OVER () FROM vt1 WHERE ((((('904560254')||(0.0035510333215752476)))OR(('-274571966' IN ()))));SELECT (((t1.c74 IN ())) NOT BETWEEN ((- (t1.c74))) AND (((vt0.c0) IS TRUE))) FROM vt0, t0 NOT INDEXED WHERE ((((x''))<((GLOB('', NULL)))));SELECT DISTINCT ((MAX(t1.c58, t1.c79, NULL, t0.c2))>>((((t1.c74)) NOT BETWEEN ((t0.c0)) AND ((t1.c95))))) FROM vt0, t0 WHERE (((CAST(0.13783672847650752 AS BLOB)) IS TRUE)) ORDER BY (+ (((t0.c2)||(vt0.c0))))  NULLS LAST, ((((((((t1.c74)AND(((vt1.c0) NOT NULL))))AND(((vt0.c0)|(t0.c2)))))OR((t0.c2 IN (t0.c2)))))AND(((vt1.c0) NOT NULL))), '['  NULLS LAST;SELECT ((t1.c74)||(vt0.c0)) COLLATE BINARY FROM vt0;SELECT ALL DENSE_RANK() OVER () FROM t1 WHERE ((((NULL)) BETWEEN (((NOT ('284845098')))) AND (((((0.7012803996870053))>((0X167dab75))))))); -- 0ms;
SELECT ALL CASE TRIM(t1.c58, vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN t1.c74 WHEN t1.c95 THEN vt1.c0 ELSE t0.c1 END THEN ((t1.c58) ISNULL) END FROM t1, t0, vt1;SELECT DISTINCT TOTAL((('-745728372') IS FALSE)) FROM t1, vt0, vt1 WHERE ((((+ ('78160708'))) NOT BETWEEN (CAST(0X24b0c4aa AS INTEGER)) AND (CASE x''  WHEN NULL THEN 0.18524558525123536 ELSE -1155756459 END))); -- 0ms;
SELECT TOTAL(((x'e4a8') BETWEEN (t1.c79) AND (vt0.c0))) OVER (), (TOTAL(vt0.c0) IN ()), (vt1.c0 IN (((t1.c74)==(vt0.c0)))) FROM t1, t0, vt1, vt0 WHERE (x'1c4a'); -- 0ms;
SELECT DISTINCT AVG(UPPER(DISTINCT t1.c95)) FROM vt1 WHERE (((CASE '7RNm'  WHEN 0.5771787754534292 THEN '0.4884503449013258' WHEN NULL THEN NULL WHEN 'KT' THEN 0xffffffff875d4c65 END) NOT BETWEEN ((((0.40226206708257806))>=(('')))) AND ((NOT (NULL)))));SELECT DISTINCT (- ((t1.c95 IN ()))) FROM t1, t0 INDEXED BY i26, vt1 WHERE (CAST(x'' COLLATE RTRIM AS INTEGER));SELECT DISTINCT (NOT (UPPER(t1.c58))), 0.8479541826444028, CASE CASE WHEN vt1.c0 THEN t1.c74 ELSE vt1.c0 END  WHEN vt1.c0 THEN 0.10576387713914559 END FROM vt0 WHERE (((('-1266144207')) NOT BETWEEN (('-2767509')) AND (((((-542461115)) NOT BETWEEN (('')) AND ((NULL)))))));SELECT ((CASE WHEN 'QET4\rQ[' THEN t1.c58 WHEN t1.c95 THEN vt1.c0 WHEN vt1.c0 THEN t1.c74 END)<<(((((t1.c79)AND(t0.c0)))OR(t1.c74)))) FROM vt1, t1 WHERE (((0.26353863520822174)!=(0Xffffffffffb6bda4)) COLLATE NOCASE);SELECT ALL CUME_DIST() OVER ( ORDER BY CAST(x'' AS TEXT)) FROM t1, t0, vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0, t1; -- 0ms;
SELECT (('')<=(vt0.c0)) COLLATE RTRIM FROM vt1, vt0, t1, t0 WHERE ('-677688363') GROUP BY CAST(CASE WHEN t1.c58 THEN vt0.c0 WHEN t1.c79 THEN t1.c74 WHEN t0.c2 THEN t1.c58 ELSE t0.c0 END AS INTEGER); -- 0ms;
SELECT DISTINCT (((CAST(t0.c1 AS TEXT)))!=((t0.c0))) FROM t0, t1, vt0, vt1 GROUP BY ((((t0.c1) IS TRUE)) IS TRUE) HAVING CAST(((t0.c1) IS FALSE) AS REAL); -- 0ms;
SELECT ALL TOTAL(vt1.c0) FROM t0, t1, vt0, vt1 WHERE ((((0.08233376292007999 IN (0.23449494661020598)))>>(((x'') IS FALSE)))); -- 0ms;
SELECT (('')<<((((x'5cad'))<=(('#m(F]'))))), ((((t1.c74)OR(vt0.c0)))AND(t1.c74)), (~ ((t1.c95 IN ()))) FROM vt0 ORDER BY ((((vt1.c0) IS FALSE))||(LIKELIHOOD(vt1.c0, 0.5025989204833786))) DESC  NULLS LAST, ((vt1.c0) NOT BETWEEN (t0.c2) AND (t1.c95)) COLLATE NOCASE  NULLS LAST;SELECT DISTINCT COUNT(*) OVER () FROM t0, t1, vt0, vt1 WHERE ((NOT (NULL)) COLLATE RTRIM) GROUP BY ((((((((((((CAST(979576415 AS BLOB))AND(NULL)))AND(LTRIM(t0.c2))))OR(((t0.c0)>(vt1.c0)))))AND(CASE t1.c95  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c74 WHEN t1.c95 THEN t1.c74 ELSE t1.c95 END)))AND(((x'')GLOB(t0.c0)))))AND((vt0.c0 IN ()))), ((((((((CASE WHEN x'548a' THEN t0.c2 WHEN vt1.c0 THEN t1.c74 WHEN t1.c95 THEN t1.c74 ELSE t0.c0 END)AND((t0.c1 IN ()))))OR(CASE t1.c95  WHEN vt1.c0 THEN t1.c58 ELSE t1.c74 END)))AND((t1.c58 IN ()))))OR((t0.c1 IN ()))), ((CASE WHEN t0.c1 THEN t1.c79 ELSE t1.c74 END) NOTNULL) ORDER BY json_array_length(((((t0.c2)OR(vt0.c0)))AND(0.8743855035515987)), CASE t0.c1  WHEN t1.c58 THEN t1.c95 ELSE t1.c74 END)  NULLS FIRST;SELECT DISTINCT ((t0.c2 COLLATE BINARY)!=(((t1.c58)<=(t1.c79)))) FROM t1;SELECT ALL '' FROM vt1; -- 0ms;
SELECT CAST(t1.c74 AS NUMERIC) COLLATE NOCASE, ((~ (t1.c74)) IN ()), MAX(((t0.c2)%(t1.c58))), (CAST(t1.c58 AS REAL) IN ()), ((((x'b415') IS FALSE))&((('')==(0.23146703582331196)))) FROM vt1, vt0, t0, t1; -- 0ms;
SELECT 0.47438879531544054 FROM vt1, t1, t0, vt0 WHERE (CASE CASE '0xw'''  WHEN x'' THEN 0.2217014323546661 ELSE NULL END  WHEN (- ('.m')) THEN 0.44319546601342874 COLLATE NOCASE ELSE (((((((((((('1356539547')AND('1302687122')))OR(0.5822578445085161)))OR('849113632')))AND('268765319')))OR('-573481403')))OR(NULL)) END); -- 0ms;
SELECT ALL (~ (((vt0.c0)OR(t0.c0)))), ((((((t0.c1)*(x'')))AND(((t0.c1) NOT NULL))))AND(x'')), NULL FROM t0, t1, vt0, vt1 ORDER BY LOWER(CAST(vt1.c0 AS INTEGER)); -- 0ms;
SELECT (((((((t1.c95)OR(vt1.c0)))AND(vt0.c0)), ((t1.c58)%(t0.c0)), ((t1.c74)>('(O'))))>((((((vt1.c0)OR(vt0.c0)))AND(t0.c0)), x'' COLLATE NOCASE, ((t0.c1)<(t1.c58))))), (+ (t0.c1)), (((((t0.c1)OR(t1.c74)))AND(t0.c0)) IN (TYPEOF(t0.c2))) FROM t0;SELECT DISTINCT ((((t0.c2)OR(((vt0.c0)!=(t0.c0)))))AND(t1.c58 COLLATE RTRIM)) FROM t0;SELECT DISTINCT (((COALESCE(t0.c2, t0.c1)))>=((MAX(vt1.c0)))), (((t1.c79)<<(t1.c79)) IN (((t0.c2) NOT BETWEEN (t0.c1) AND (t1.c58)))), ((((t0.c1)IS NOT(0.14116068795197445))) BETWEEN (MAX(NULL)) AND (t0.c0 COLLATE RTRIM)) FROM vt1, vt0, t1, t0 ORDER BY ((((((t1.c79)AND('0.997467484169004')))OR('')))<>(((vt1.c0) IS TRUE))) ASC; -- 0ms;
SELECT DISTINCT ((+ (t0.c2)) IN ()) FROM t0, vt0 WHERE ((NOT ('284845098')) COLLATE RTRIM) ORDER BY CAST('j|' AS REAL) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((t1.c95) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE NOCASE FROM t1, vt0, t0 WHERE (((((((NULL)IS(0xffffffff9551f4fc)))OR(((0Xffffffffe38f1905)IS NOT(NULL)))))AND('	i' COLLATE BINARY)));SELECT SUM(CAST(vt0.c0 AS NUMERIC)), TYPEOF(DISTINCT ((((vt0.c0)AND(NULL)))OR(t0.c2))), 0X321594a1, (((('')<=(t1.c74))) IS FALSE), ((((NULL IN (vt0.c0)), (vt1.c0 IN ()), ((vt1.c0)||(t0.c2))))!=((MAX(t0.c1), t1.c74, ((t0.c1) NOT BETWEEN (t1.c79) AND (t1.c58))))) FROM t1 WHERE ((((JULIANDAY(NULL, 0.8236179470777568, '-600912928')))>(((((0Xfffffffff56e8de9, NULL, x'', 0.8770132764715857, 0.7032948612809314))<((NULL, '-520550865', 1251366950, 0.45220231896131435, NULL))))))) GROUP BY CASE ((t0.c1) BETWEEN (vt1.c0) AND (t0.c0))  WHEN ((t1.c79) ISNULL) THEN ((t1.c95)!=(0.8088262328887458)) END HAVING MAX(((vt0.c0) NOTNULL));SELECT DISTINCT t0.c2 FROM t0, t1, vt1, vt0 GROUP BY CASE WHEN CAST(t0.c0 AS TEXT) THEN t0.c0 END, (~ (0.030314818947586808)), GLOB(((t1.c74) IS TRUE), t1.c95); -- 0ms;
SELECT DISTINCT (((t1.c58)) NOT BETWEEN (((((t1.c74))=(('-1686103450'))))) AND ((((((vt0.c0)AND(t1.c95)))OR(t1.c58))))) FROM t0, vt0, t1, vt1 WHERE (((((((((('1554073068' IN ('irdxg''헍e')))OR(((NULL) IS FALSE))))AND(x'' COLLATE RTRIM)))OR('-1266144207')))OR(((('uqo31803-634-339 Wc*', '1360936239', 0.5756258665546701)) BETWEEN (('2000277997', '-43370068', x'')) AND (('-1416832860', NULL, '\r q)')))))); -- 0ms;
SELECT DISTINCT t1.c58, ((NULL)OR(((t1.c74)IS NOT(t1.c74)))), SUM(((x'')*(NULL)) COLLATE RTRIM) OVER () FROM vt1 WHERE ((('㚢%') BETWEEN (NULL) AND (NULL)) COLLATE BINARY);SELECT DISTINCT TOTAL(((t0.c2) ISNULL)) OVER (), CAST(CASE t1.c58  WHEN t0.c1 THEN t0.c0 END AS TEXT), TOTAL('') FILTER(WHERE (((((t0.c2)|(t1.c79))))=((((vt1.c0)AND(vt1.c0)))))) OVER (), t0.c0, TOTAL(((t0.c1) BETWEEN (x'') AND (t1.c74))) OVER () FROM t1, vt1, t0; -- 0ms;
SELECT DISTINCT LAST_VALUE((((t1.c58)) BETWEEN ((((t1.c79)/(t1.c95)))) AND ((((t1.c79) NOT BETWEEN (t1.c95) AND (t1.c95)))))) OVER (), GROUP_CONCAT((t1.c58 IN (vt0.c0))) OVER ( ORDER BY CAST(('1480687245' IN ()) AS REAL)), COUNT(SQLITE_SOURCE_ID()), ((t0.c1 COLLATE BINARY) NOTNULL), CAST(((t0.c2) IS TRUE) AS INTEGER) FROM t1 WHERE (((NULLIF(DISTINCT 'F蹐5', x'')) IS TRUE)) ORDER BY ((NOT (t0.c2)) IN (t1.c79, ((((t0.c1)AND(x'6a86')))OR(x'2e4b')))) DESC;SELECT DISTINCT ((t1.c95)OR((vt1.c0 IN ()))), (((TRIM(DISTINCT t0.c1, t1.c58), vt0.c0 COLLATE BINARY, vt1.c0))=((t0.c2 COLLATE NOCASE, t0.c2 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER)))), (((NOT (vt0.c0)))IS((((t0.c2, t1.c79, vt0.c0))>((t0.c2, t0.c2, vt1.c0))))) FROM vt1, t0, vt0, t1 ORDER BY CAST(t0.c2 AS BLOB) COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT AVG('Ax') FROM t1, t0 GROUP BY vt1.c0, vt0.c0, (((NOT (vt1.c0))) NOT NULL) HAVING (+ (((((vt1.c0)AND(vt1.c0)))OR(t1.c79)))) ORDER BY ((TIME(t1.c95, t0.c2, t1.c74, t0.c0, t0.c1)) IS FALSE)  NULLS FIRST;SELECT DISTINCT (((vt0.c0)=(vt1.c0)) IN ((~ (t0.c0)))) FROM vt0, vt1, t1, t0 WHERE (CAST(CASE WHEN '' THEN 0.29080868294855267 WHEN 'u(S)' THEN '309550640' WHEN NULL THEN x'' ELSE 0.16014049844163858 END AS REAL)); -- 0ms;
SELECT DISTINCT FIRST_VALUE(rtreenode(((t1.c79) IS FALSE), CASE 915176822  WHEN t1.c95 THEN 0.07443439167228683 ELSE t1.c74 END)) OVER () FROM t1 WHERE (CAST(LIKELIHOOD(0X24b0c4aa, 0.36386546425316624) AS BLOB)) LIMIT -564760141 OFFSET -1720153328; -- 0ms;
SELECT DISTINCT (((t1.c79 IN ()))IS NOT((t0.c2 IN ()))) FROM vt0, vt1, t0 WHERE (0.9092779513441187) LIMIT 0; -- 0ms;
SELECT ((COALESCE(t0.c2, t0.c0)) NOT BETWEEN (((t1.c95)<(t1.c74))) AND (((((t1.c79)OR(t0.c2)))OR(vt1.c0)))) FROM vt0;SELECT CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (-1.669333345E9)) AS BLOB) FROM vt0, t0, t1 WHERE (CAST(((('-491487085', x'', '-993841211'))<=(('', NULL, 0x3fd9484))) AS INTEGER)) LIMIT 1; -- 0ms;
SELECT CASE CAST(vt0.c0 AS INTEGER)  WHEN (((t1.c74))>((NULL))) THEN UNLIKELY(DISTINCT t1.c95) END FROM vt0, t0, t1, vt1 WHERE (((0.8988248239291637 COLLATE BINARY) NOTNULL)); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 LIMIT 927145240 OFFSET -1605840259; -- 1ms;
SELECT LAST_VALUE(CAST(t0.c0 COLLATE NOCASE AS NUMERIC)) OVER () FROM t0, t1, vt0 LIMIT -9223372036854775808 OFFSET -1078373693; -- 2ms;
SELECT ((CASE WHEN vt1.c0 THEN t1.c58 WHEN t0.c0 THEN vt0.c0 WHEN t0.c1 THEN -710019849 ELSE t1.c79 END) NOTNULL), (+ ((t0.c0 IN ()))), ((((t1.c74) NOT NULL)) NOT BETWEEN (((t1.c79)&(vt0.c0))) AND (-9.10195937E8)) FROM vt0, t0 WHERE (CAST(0.5756258665546701 AS REAL));SELECT ALL (+ (json_remove(t0.c0, t1.c79, t1.c74, NULL, t0.c0, t0.c1))) FROM vt1, vt0, t0 WHERE (((0.5597183338740858 IN ('', x'')) IN ((((NULL, '#]nQZ3', '-2081566194'))<>((0.7605108980555293, 0.3917080004972051, x'5085'))))));SELECT DISTINCT x'', ((TYPEOF(vt0.c0)) NOT BETWEEN (NULL) AND ((t0.c0 IN ()))), t1.c74 FROM t0, vt0;SELECT (((vt1.c0)<>(t1.c58)) IN ()) FROM t1, vt0 WHERE (('Z॰MWu' COLLATE BINARY IN ())); -- 0ms;
SELECT ALL (((((t1.c79))<((t1.c58)))) IS TRUE) FROM vt0, t0, vt1;SELECT DISTINCT (((t0.c2)) BETWEEN ((CASE NULL  WHEN t1.c79 THEN vt1.c0 ELSE t1.c79 END)) AND ((GROUP_CONCAT(t0.c1)))) FROM t0, vt0, t1, vt1; -- 0ms;
SELECT ALL ((t1.c79)%(((t0.c1) IS TRUE))) FROM vt1, vt0;SELECT DISTINCT (- (CASE t1.c95  WHEN t0.c1 THEN t1.c95 END)) FROM t1 WHERE (CAST((('6678180779980410027T-6753498694196139497-535-920-1267 8394643943938899808-')|('8i')) AS REAL));SELECT DISTINCT ((CAST(t1.c74 AS BLOB)) ISNULL) FROM vt0;SELECT DISTINCT ((t1.c74)+(t1.c95 COLLATE BINARY)), ((t1.c74) NOT BETWEEN (vt1.c0) AND (t0.c1)) COLLATE NOCASE, vt1.c0, (CAST(t1.c58 AS REAL) IN ()), CASE WHEN json_insert(t0.c0, vt1.c0, t0.c0) THEN t0.c0 WHEN t1.c95 THEN CAST(vt1.c0 AS BLOB) WHEN t1.c74 THEN ((('-914742181')) NOT BETWEEN (('1sgw궎Z')) AND ((x''))) END FROM vt1, vt0, t0, t1 LIMIT 1206786038; -- 0ms;
SELECT ALL '-1462995992' FROM vt0, vt1, t0 WHERE (((((0x7022580c) NOT BETWEEN (NULL) AND ('284845098'))) IS TRUE)); -- 0ms;
SELECT ALL ((((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((0x25714a51, t0.c2, t0.c1)) AND ((t1.c58, vt0.c0, t1.c95)))))<>((x''))), TOTAL((+ (-1266144207))), (((((((((((('f6')OR(t1.c79)))AND(t1.c95)))OR(t1.c74)))OR((((t0.c1))<=((vt1.c0))))))AND(SUM(t0.c2))))AND(CAST(t0.c0 AS NUMERIC))), ((CASE vt0.c0  WHEN t0.c1 THEN t1.c74 END)-(((t1.c79)-(vt1.c0)))), CASE ((t0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))  WHEN COUNT(*) THEN ((((t1.c74)OR(vt1.c0)))OR(t1.c79)) ELSE (((t1.c95))<=((t1.c74))) END FROM t1, vt1 LIMIT 1236633550;SELECT ALL COUNT(((0.1069586255154854)<<(vt0.c0)) COLLATE BINARY) FROM vt0 WHERE (((((('}p^r')OR(x'')))OR(0.7292180449432135)) IN ('2#'))); -- 0ms;
SELECT DISTINCT CASE WHEN ((('	'))<((t1.c58))) THEN ((((t0.c0)OR(vt0.c0)))OR(-1041077688)) ELSE (t1.c95 IN (t1.c95, t1.c74)) END, NULL COLLATE NOCASE COLLATE BINARY, (((NOT (t0.c2))) ISNULL) FROM t0, t1, vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(TRIM(t1.c95) AS INTEGER) FROM vt1, vt0, t0, t1 WHERE (((CAST(x'' AS NUMERIC))<<(((('1236633550'))>=(('715693329')))))) GROUP BY ((((vt1.c0)OR(t1.c95))) BETWEEN (((((t1.c58)AND(NULL)))AND(t1.c58))) AND (t1.c79 COLLATE BINARY)), (((t1.c74 IN ())) BETWEEN (COALESCE(DISTINCT t1.c79, t1.c79)) AND ((t1.c74 IN ()))), CASE WHEN 0.26353863520822174 THEN json_array_length(vt0.c0) WHEN ((NULL)==(t0.c0)) THEN t0.c1 WHEN t0.c0 THEN UNLIKELY(DISTINCT t0.c0) ELSE vt1.c0 COLLATE RTRIM END HAVING ((+ (vt0.c0)) IN ()); -- 1ms;
SELECT DISTINCT ((TOTAL(vt1.c0))GLOB(((NULL)AND(t0.c2)))) FROM t0, vt1, t1 ORDER BY (((t1.c58)GLOB(t1.c79)) IN ((('o+') ISNULL))); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((((t0.c1)AND(t0.c1)))OR(t0.c0))) FROM t1, t0, vt1, vt0 LIMIT -69873819; -- 0ms;
SELECT DISTINCT (((t0.c2)%(t1.c74)) IN ()) FROM t0, vt1, t1, vt0 INDEXED BY i26 WHERE (((CAST(x'5f60' AS BLOB)) IS TRUE));SELECT (((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))) BETWEEN ((((vt0.c0)) BETWEEN ((t0.c1)) AND ((t1.c79)))) AND (ABS(t1.c58))), LIKELIHOOD(DISTINCT CASE t0.c0  WHEN t0.c2 THEN vt0.c0 WHEN t1.c74 THEN t1.c58 WHEN '' THEN t0.c1 END, 0.8427495082601407), ((((t1.c79)OR((NOT (x'f6f1e78f')))))OR(CASE WHEN t1.c58 THEN t1.c79 WHEN t0.c2 THEN t1.c95 WHEN t0.c1 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 WHEN t1.c58 THEN t0.c2 END)) FROM vt0 WHERE ((NOT (((NULL) BETWEEN (NULL) AND ('-327542278')))));SELECT DISTINCT ((((~ (t1.c79))))<((((t0.c0)OR(vt0.c0))))) FROM t1;SELECT DISTINCT CUME_DIST() OVER ( ROWS BETWEEN LIKELIHOOD(DISTINCT ((t0.c2)||(t1.c79)), 0.27896831487256024) PRECEDING AND ((((((t1.c74)AND(937919604)))AND(t0.c0))) BETWEEN (0xffffffffd3da1727 COLLATE RTRIM) AND ((+ (0.3648807374812989)))) FOLLOWING EXCLUDE GROUP) FROM t1, t0, vt0 WHERE ((((((((((((x'35ce')) NOT BETWEEN (('')) AND ((0xffffffff82c14e7b))))OR(((('')) BETWEEN (('ihp5餜p')) AND ((0.07364865415369237))))))OR(highlight('-', 0.2175665775963075, 0.3916007623441222, NULL))))AND(NULL COLLATE RTRIM)))OR(((NULL) NOT BETWEEN (0.737313243333985) AND (x''))))); -- 1ms;
SELECT DISTINCT ((load_extension(t0.c1, t0.c1))%(((vt1.c0)IS(vt0.c0)))) FROM vt0, vt1 WHERE (((((0xffffffffefa25d42)OR('M4A)xN)缗w')))AND(x'')) COLLATE RTRIM) LIMIT -1829050525 OFFSET -868928269;SELECT ALL CAST(((t1.c58)=(t0.c0)) AS NUMERIC) FROM vt0 WHERE (((((x'') ISNULL)) NOT NULL)) ORDER BY CAST(((vt1.c0) IS FALSE) AS TEXT), t0.c2 ASC;SELECT DISTINCT ((((((vt1.c0)AND(vt0.c0)))AND(t1.c95))) NOTNULL) FROM t0 WHERE ((NOT (((146133191)>(x'6d34'))))) ORDER BY ((((((t1.c79)AND(t0.c1)))AND(t0.c1))) BETWEEN (t1.c79) AND ((t1.c95 IN (t1.c74)))), ((((((0.9705345391315885)OR(t0.c1)))AND(t0.c0))) IS TRUE);SELECT (COUNT(vt0.c0) IN ((t0.c1 IN (t0.c2)))) FROM vt1 INDEXED BY i26, vt0, t0, t1 ORDER BY CASE JULIANDAY(vt0.c0, t1.c79, t1.c95, t0.c2, t0.c0)  WHEN ((vt1.c0)<<(t1.c74)) THEN t1.c79 COLLATE BINARY END;SELECT DISTINCT GROUP_CONCAT(LOWER(t1.c95)) FROM vt0, t1, vt1, t0 WHERE (CAST(x'' AS TEXT) COLLATE NOCASE); -- 0ms;
SELECT DENSE_RANK() OVER ( ORDER BY (((~ (t1.c79)))LIKE(((t1.c74)<=(t0.c2)))), ((((t1.c95) NOT BETWEEN (vt0.c0) AND (1155373596))) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c0) AND (t0.c1))) AND ((+ (t0.c0)))), ((IFNULL(DISTINCT t0.c0, t1.c79)) BETWEEN (((t1.c79) NOT BETWEEN (t0.c0) AND (vt1.c0))) AND ('[~*')) DESC  NULLS FIRST) FROM t0, t1, vt1 LIMIT 1752682047 OFFSET -1331775618;SELECT DISTINCT (((((((t1.c79))!=((t1.c58))))AND((vt1.c0 IN ()))))OR(TRIM(t1.c58, t1.c95))) FROM t1, vt1, t0; -- 0ms;
SELECT DISTINCT (((+ (vt0.c0)))/(((vt0.c0) BETWEEN (t0.c0) AND (t1.c79)))) FROM vt0, vt1, t0 WHERE ((((0.9705345391315885 IN ()))<>(NULL)));SELECT ALL t1.c95, 0.8528313337757972, SUM((t1.c74 IN (NULL, t1.c74))) FILTER(WHERE ((t1.c58) IS FALSE)) OVER () FROM t0 WHERE (CAST((('-639701272')*(0.30321829887298024)) AS BLOB)) LIMIT 278088805;SELECT DISTINCT ((x'') IS TRUE) COLLATE RTRIM FROM vt0, t1, vt1, t0; -- 0ms;
SELECT DISTINCT ((((t0.c1 COLLATE BINARY)OR(((((t0.c2)OR(t1.c79)))OR(t0.c1)))))AND(0.3057504648708381 COLLATE RTRIM)) FROM t0, vt1, vt0, t1 WHERE ((~ ((~ (x'5602'))))); -- 0ms;
SELECT (((t1.c74)) BETWEEN ((t1.c58 COLLATE NOCASE)) AND (((((t1.c74)) BETWEEN ((t1.c58)) AND ((t1.c58)))))), (MAX(vt0.c0) IN ()), CASE WHEN CASE WHEN t0.c1 THEN t1.c95 ELSE t1.c74 END THEN t1.c95 END FROM vt0, t0;SELECT DISTINCT TOTAL((t1.c74 IN ())) OVER () FROM vt1, vt0, t1, t0; -- 0ms;
SELECT ALL t1.c95, PERCENT_RANK() OVER (), UPPER(DISTINCT COUNT(t0.c1)) FROM vt0, t1, t0; -- 0ms;
SELECT t1.c95 COLLATE RTRIM, PERCENT_RANK() OVER (), MIN(CASE WHEN '0.07364865415369237' THEN t0.c2 END) FROM t1, t0, vt0, vt1; -- 0ms;
SELECT ALL ((t1.c58) BETWEEN (((((((((t0.c2)AND(t0.c1)))OR(t1.c74)))OR('615564458')))AND(t1.c74))) AND (((t1.c79)IS NOT(t1.c58)))) FROM vt0, vt1 WHERE ((((x'' IN ()))<<(((((((((x'db6832e6')OR('2H*el_⤮')))OR('1301371097')))AND(x'')))OR(0Xffffffff8d1e18be)))));SELECT DISTINCT ((t1.c79 COLLATE NOCASE)>(x'' COLLATE RTRIM)) FROM vt0, vt1;SELECT DISTINCT TOTAL(CAST(t1.c95 AS REAL)) FROM vt1, t1 WHERE ((((CAST(x'' AS INTEGER), ((0.2801338522669201) NOT BETWEEN ('-1782678784') AND ('1977603810')), (x'' IN ())))<=(((((0.3642193560566429)) BETWEEN (('0.5756258665546701')) AND ((''))), (('')IS('G7닆jWV\nDw')), (('-1019464873') IS TRUE))))); -- 0ms;
SELECT CASE WHEN LIKELY(t1.c58) THEN ((t1.c74) IS TRUE) ELSE CASE WHEN t0.c2 THEN t1.c79 ELSE t0.c1 END END FROM t0, vt0 WHERE ((((- ('-1324239661'))) BETWEEN (x'') AND (json_insert(-2116351914, NULL, 1411926576)))) GROUP BY t1.c58;SELECT ((MAX(1520537084)) NOT BETWEEN (COALESCE(t1.c79, t1.c95)) AND (t1.c58 COLLATE RTRIM)) FROM t1, t0, vt1; -- 1ms;
SELECT DISTINCT (((t1.c95 IN ()))*((+ (t1.c79)))), vt1.c0, json_insert(((vt1.c0)/(0.5361896505588165)), ((t0.c0)>(t1.c95)), t1.c95) FROM t1, vt1 WHERE (CASE WHEN x'fe31' COLLATE RTRIM THEN ('1341511207' IN ()) ELSE ((0.6169040836356808) BETWEEN (NULL) AND (-2077403778)) END);SELECT t1.c95 FROM t0, vt0, t1, vt1; -- 0ms;
SELECT UPPER(DISTINCT t1.c58 COLLATE NOCASE), t0.c2, CAST((((vt1.c0, t0.c1, vt0.c0)) NOT BETWEEN ((t1.c58, t1.c95, t0.c2)) AND ((t0.c0, t0.c0, t1.c95))) AS INTEGER) FROM t1, vt0;SELECT COUNT(*) OVER ( ORDER BY NULL DESC  NULLS FIRST, NULL) FROM vt1; -- 0ms;
SELECT (('B^{-mKk') NOT BETWEEN (((t0.c0) BETWEEN (t1.c79) AND (t1.c74))) AND (((t1.c95) NOT BETWEEN (t0.c1) AND (t1.c74)))) FROM t1, vt1, vt0 INDEXED BY i26, t0;SELECT DISTINCT (((vt0.c0, t1.c79, NULL))<((x'ee3d', t0.c2, t1.c58))) COLLATE NOCASE, x'', t1.c79 FROM vt1, t1 NOT INDEXED, t0, vt0 WHERE ((- (x'aa7e')) COLLATE NOCASE) GROUP BY ((0Xffffffffe5c35d06)|(((t1.c58)/(t0.c0)))) HAVING ((((t1.c74) NOTNULL)) IS TRUE); -- 0ms;
SELECT ALL SUM((- (vt1.c0))) OVER () FROM t0, vt1 WHERE ((((('#A')AND(x'' COLLATE NOCASE)))OR((('eS쵸Akr') NOT BETWEEN (0.4274767574952286) AND ('94087908'))))); -- 0ms;
SELECT ALL (- (t0.c0)) COLLATE BINARY FROM vt1, vt0, t0 WHERE (CASE WHEN (((0.6018309038577991, '+F', x'7360'))>=((x'd179', x'e7aa', 0.3235018216327268))) THEN (((((((('J䟊QM')OR(0.09283738243286555)))OR(0.8468072188779916)))OR(NULL)))AND(0.6686004697224744)) END) ORDER BY vt0.c0 DESC; -- 0ms;
SELECT ((((vt1.c0)==(t0.c1)))>>(COUNT(*))), CAST(t1.c79 AS REAL) COLLATE NOCASE, t1.c79 FROM vt1, vt0, t1 WHERE ((- (CASE WHEN NULL THEN '' END)));SELECT DISTINCT (((t0.c0 IN (vt0.c0, t1.c79)))>=(MAX(x'1321'))), '849113632', CAST((- (t1.c79)) AS BLOB), (+ ((- (vt0.c0)))), MIN(CASE WHEN t1.c74 THEN vt0.c0 ELSE t1.c58 END) FROM t1, vt0, t0 WHERE ((((x'') NOT NULL) IN ())); -- 1ms;
SELECT ALL CASE WHEN vt0.c0 COLLATE NOCASE THEN vt1.c0 END, '-1955790882', ((CASE t0.c1  WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END) ISNULL) FROM vt1 WHERE (CASE WHEN (('-1062760712') IS TRUE) THEN (((0X3356d35a))<=((x'afd7'))) ELSE x'' COLLATE NOCASE END);SELECT GROUP_CONCAT(CAST(t1.c74 AS NUMERIC)) OVER ( PARTITION BY CASE CASE t0.c2  WHEN t0.c2 THEN t1.c58 END  WHEN (~ (vt0.c0)) THEN vt1.c0 COLLATE BINARY ELSE t0.c0 END, ((((t0.c2)OR(t0.c2)))OR(t0.c1)) COLLATE RTRIM), (((- (t1.c79)))-(((NULL) NOT BETWEEN ('TI') AND (t1.c95)))), (((vt1.c0)) NOT BETWEEN ((CASE WHEN t1.c95 THEN vt1.c0 ELSE t1.c79 END)) AND ((((((t0.c1)OR(t1.c74)))AND(vt1.c0))))) FROM vt1, vt0;SELECT DISTINCT '0.85512187100983' FROM t0, t1, vt0; -- 0ms;
SELECT ALL (((LIKELIHOOD(DISTINCT t0.c2, 0.5845772490243022)))==((t0.c1))) FROM vt0, t0, vt1, t1 WHERE (((CASE '1728016879'  WHEN x'' THEN 'f{Na' WHEN NULL THEN x'16c0' WHEN '' THEN 0.056610579127667315 END)-((('숆V') NOT BETWEEN ('1236633550') AND (0.08131830983929378))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE((((t1.c79, 'A!#	', vt1.c0))=((t1.c58, t0.c0, t0.c2))) COLLATE BINARY) OVER (), CAST(t0.c2 AS REAL), ((((((t0.c0) NOTNULL))AND(t0.c1)))OR((t1.c79 IN ()))) FROM vt1, t0, vt0 INNER JOIN t1 ON t1.c58 WHERE (CAST((+ (0.5399100310972554)) AS BLOB)); -- 0ms;
SELECT DISTINCT (((((vt1.c0)) NOT BETWEEN ((t1.c79)) AND ((t0.c2))))==(((((t0.c2)AND(t1.c58)))AND(t1.c74)))) FROM t1, vt1, t0, vt0 WHERE (CASE x''  WHEN '-1331775618' THEN '838847864' ELSE 1739881215 END COLLATE BINARY); -- 0ms;
SELECT ALL (((t0.c1) NOT BETWEEN (t0.c0) AND (t1.c74)) IN ()) FROM t0, vt0, vt1; -- 0ms;
SELECT DISTINCT AVG(((t1.c74) NOT BETWEEN (t1.c58) AND (t1.c74))) FROM vt1, vt0, t1, t0 WHERE ((((~ (NULL))) BETWEEN (((-4.91487085E8)*('-538077500'))) AND (((NULL) NOTNULL)))); -- 0ms;
SELECT ALL ((x'')LIKE(SUM(t1.c79))) FROM t1, vt0, t0, vt1 WHERE (((0X7bd94fe3) NOT BETWEEN (json_valid(923834405)) AND (NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT '1816750135' FROM vt0, vt1, t1 WHERE (((((((((0X1525e45f)OR((((0.702445415249302))<((x'ecfa'))))))AND((((('1601473149')OR(122130921)))AND(NULL)))))OR((NULL IN ()))))AND(''))); -- 0ms;
SELECT DISTINCT LENGTH(CASE vt1.c0  WHEN t0.c1 THEN t0.c2 WHEN t1.c95 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 ELSE vt1.c0 END) FROM t0, t1;SELECT (((('u&')AND(((t0.c2)<=(NULL)))))AND(((t1.c74)=(vt1.c0)))) FROM t0;SELECT DISTINCT CASE WHEN '-600912928' THEN t1.c79 COLLATE RTRIM END FROM vt0, t1, t0, vt1 ORDER BY (((t0.c2)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND (((NOT (t0.c2))))) DESC  NULLS FIRST, ((((((((CASE vt1.c0  WHEN '284845098' THEN t0.c0 ELSE t0.c1 END)OR((('')<(t1.c79)))))OR(((t0.c0) NOT BETWEEN ('櫙|kz0n ') AND (t0.c0)))))OR(((t0.c2)>>(t0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))), '1889399681' DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t0.c0) ISNULL))-(x'' COLLATE BINARY)) FROM vt1, vt0;SELECT ALL ((t1.c58)AND(t1.c58)) COLLATE RTRIM COLLATE RTRIM FROM t0;SELECT DISTINCT ((CAST(t0.c0 AS REAL)) NOT BETWEEN ((t1.c58 IN ())) AND (((t1.c95)=(NULL)))) FROM vt1, t1, vt0, t0 INDEXED BY i26 WHERE ((((x'98a2')) BETWEEN ((NULL)) AND (((('502837699')LIKE(NULL))))));SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN ((((t0.c1))<>((t1.c58)))) AND (vt0.c0)), '-814536539', MIN(((vt1.c0)>=(t1.c58))) FROM t0, vt1 WHERE (((CASE ''  WHEN -5.65143958E8 THEN x'' END) IS FALSE));SELECT DISTINCT (((vt0.c0 IN (t0.c2))) NOT BETWEEN (((t0.c1)+(t0.c2))) AND (((((t1.c95)AND(t0.c2)))AND(vt0.c0)))), AVG(t1.c79), (((((t0.c2)LIKE(t1.c95)), vt1.c0 COLLATE BINARY, ((t1.c95)>>(vt1.c0))))=(((+ (vt1.c0)), ((t1.c79) NOT BETWEEN (t1.c95) AND (t0.c2)), ((0.961495028359951) NOT BETWEEN (x'') AND (t0.c1))))) FROM vt0, vt1, t1 WHERE (((((0.207041924613512)+(NULL))) NOT BETWEEN (CASE 0.8988397128522271  WHEN 'xb' THEN '혧>' WHEN 0.7012803996870053 THEN 0.02985351767301858 WHEN -5.506977E8 THEN '1007912489' WHEN 0.9625176191494977 THEN x'20a5' WHEN 0.46645373567661985 THEN 1915240156 ELSE '' END) AND (((NULL) NOT NULL))));SELECT DISTINCT (CASE t1.c58  WHEN 0.2525510992716048 THEN vt1.c0 WHEN t0.c1 THEN vt0.c0 WHEN t1.c74 THEN t1.c74 WHEN t1.c95 THEN t0.c0 WHEN t0.c0 THEN x'122e0e90' ELSE t1.c58 END IN ()) FROM vt0, t1, vt1 ORDER BY (((t0.c2, t0.c1, t1.c58))>=((t1.c58, t0.c2, vt1.c0))) COLLATE RTRIM ASC  NULLS LAST;SELECT COUNT(((t1.c74) BETWEEN (t1.c74) AND (x''))) FROM t1, t0, vt1, vt0; -- 0ms;
SELECT DISTINCT TRIM(((t1.c74) NOT BETWEEN (t1.c58) AND (NULL)), ((vt1.c0)LIKE(t0.c0))) FROM vt0, vt1, t1 INNER JOIN t0 ON t1.c74 WHERE (((IFNULL(DISTINCT 1151535176, NULL)) BETWEEN (((0X10fa642a)|('0.3410255088875759'))) AND (NULL COLLATE BINARY))); -- 1ms;
SELECT ALL CASE WHEN t0.c2 COLLATE NOCASE THEN ((((t0.c0)OR(t1.c95)))OR(vt0.c0)) ELSE (~ (t1.c95)) END FROM vt1 WHERE (((((((('1889399681'))<=((-5.73481403E8))))AND((- (x'')))))AND((((0.8892209188521002, '', NULL)) BETWEEN ((0Xffffffffdee2618b, '', 0Xfffffffff6db18a8)) AND (('^6\rO_\n', NULL, NULL))))));SELECT ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c95)) COLLATE NOCASE COLLATE BINARY, (((((((vt0.c0))!=((t0.c2))))AND(((((((((0.2536357927889219)OR(t1.c79)))AND(t0.c2)))OR(vt1.c0)))AND(vt1.c0)))))OR((((t1.c95, t0.c1, vt0.c0)) BETWEEN ((t1.c58, 'V,T', t1.c74)) AND ((t0.c2, vt1.c0, NULL))))), vt0.c0 FROM t0, vt1 GROUP BY (('MA3')>>(highlight(t1.c79, t1.c58, '0.866796435668854', t1.c79))) HAVING CAST((((vt0.c0)) NOT BETWEEN ((t1.c58)) AND ((x''))) AS INTEGER);SELECT DISTINCT vt0.c0 FROM t1, vt1 LIMIT 1356539547 OFFSET -1847338642;SELECT (((((t1.c58)AND(t0.c2)))OR(t0.c2)) IN ()) FROM t0, vt0 WHERE ((CAST(0Xffffffff96550499 AS REAL) IN (CAST(0.1633521198326886 AS TEXT), 0.40226206708257806 COLLATE BINARY))); -- 0ms;
SELECT ALL ((x'')/((NOT (t0.c1)))) FROM t0 GROUP BY (((t0.c0 IN ()))|(((t0.c2)>=(t1.c95))));SELECT ALL ((((x'')AND(t1.c79)))AND(t0.c0)) COLLATE RTRIM, x'c037', (((((vt0.c0, vt0.c0, t0.c2))<((0Xffffffffde50966a, t0.c1, t1.c74)))) BETWEEN (((t1.c58)OR(t1.c58))) AND (CAST(t0.c0 AS BLOB))) FROM vt1, t0, vt0, t1 WHERE (('-170013954' IN ((('	ꤶiq-') IS FALSE)))); -- 0ms;
SELECT ALL MAX(SUM(((t0.c2)||(t1.c58)))) FROM t1, vt1, t0, vt0 WHERE (0xffffffffe12611ab);SELECT ALL ((((vt1.c0)AND(CASE WHEN t1.c79 THEN '腞쭈Q' ELSE t1.c95 END)))OR((t1.c79 IN (t1.c79, t1.c58)))) FROM vt0, t0, vt1, t1; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c95 THEN MIN(t1.c74) END FROM vt1, t1 LIMIT -295400839; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)>=((((t1.c58, t1.c79, t0.c2))>=((NULL, t0.c0, t0.c2))))), (- (t1.c58 COLLATE RTRIM)), UNLIKELY((t0.c0 IN ())) FROM vt0, vt1, t0;SELECT DISTINCT (((+ (t0.c2)))IS(((t0.c1) IS FALSE))) FROM vt1, t1;SELECT CAST('-1296143373' AS BLOB) FROM vt1 GROUP BY '-477161211', t1.c74, ((((t1.c74)>(x''))) BETWEEN (TRIM(DISTINCT t1.c79, t0.c2)) AND ((((t0.c1)) BETWEEN ((t0.c2)) AND ((vt1.c0))))) HAVING vt0.c0;SELECT DISTINCT ((CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN vt0.c0 THEN 0.6579165466540685 END) ISNULL), json_remove(((t1.c79) NOT BETWEEN (t0.c2) AND (vt1.c0)), ((NULL)==(t0.c0)), ((t1.c79) NOT BETWEEN (vt0.c0) AND (t1.c79)), (t0.c2 IN ())), MIN(TRIM(t0.c2, vt1.c0)) FROM vt1, t0, vt0;SELECT DISTINCT (- (((t1.c79) BETWEEN (t1.c79) AND (t0.c0)))) FROM vt0 WHERE (((8.49113632E8)-(NULL)) COLLATE BINARY);SELECT ALL CASE PRINTF(t0.c2, '0.17176198843477097', t1.c58)  WHEN ((t1.c95)%(t1.c74)) THEN 'u' WHEN (('156991579') NOT NULL) THEN (~ (t1.c79)) WHEN SUM(t1.c95) THEN CASE vt0.c0  WHEN t1.c79 THEN t0.c0 ELSE '' END ELSE UNLIKELY(t0.c1) END, ROW_NUMBER() OVER (), (NOT ((~ (t0.c0)))) FROM t1, vt1 WHERE ((+ (((((x'')OR(0.20149975887928528)))OR(NULL)))));SELECT DISTINCT NULL, ((((CAST(t0.c0 AS NUMERIC))OR(t1.c58 COLLATE NOCASE)))AND(STRFTIME(vt1.c0, t0.c2, t0.c0))), vt1.c0 FROM t0, vt0 WHERE ((+ (((x'26bf')LIKE(x'')))));SELECT GROUP_CONCAT(((t0.c2) BETWEEN (vt0.c0) AND (t0.c1))) FROM t0, vt1, t1, vt0 WHERE (((((('')) NOT BETWEEN ((1.133060857E9)) AND (('150584864'))))||(CAST(7.75855109E8 AS BLOB)))); -- 0ms;
SELECT DISTINCT t1.c74, (((t0.c0) BETWEEN (t1.c95) AND (x'')) IN ()), ((((t1.c79) NOT BETWEEN (t0.c1) AND (t0.c1))) ISNULL) FROM t0, t1, vt0 NOT INDEXED, vt1 WHERE (((((((NULL, 0.14629019067704607, ') ')) BETWEEN ((-1250827349, 0.17653577908128304, '-112747413')) AND (('0.8088262328887458', 0.735891936080906, '-1410749485')))))!=((((0xffffffff9a7c35e7)IS(x'')))))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c2 AS BLOB))IS(((vt1.c0)/(vt1.c0)))) FROM t0, vt0, t1 WHERE ((((NULL, NULL, x'', '1003591208', '1110612145')) NOT BETWEEN ((LIKE('-2116660175', -1645687451, '1'), ((NULL)<>('-1731503987')), (~ (x'')), ('' IN ()), COALESCE(NULL, 0X18601651, NULL, x'', 0.1217710735323494, '0.13783672847650752'))) AND (((((x'', '-1669333345', 0.5958951069760755)) BETWEEN (('-1645687451', 0.26986135620706786, '226067836')) AND (('1533194072', x'58cb', 0.8767576739521035))), CAST(0x28bace4b AS TEXT), ((((((((x'')AND(NULL)))OR(-397872290)))AND(x'')))AND(0.6099203816426266)), (('(d') BETWEEN (-1768869138) AND (NULL)), (((1957144726)) BETWEEN ((NULL)) AND ((0.2327215902145089)))))));SELECT DISTINCT MAX(((((t0.c0)OR(t0.c1)))AND(vt1.c0))) FROM vt0, vt1, t1;SELECT DISTINCT ((((((((((((((((t1.c79)AND(vt0.c0)))AND(t1.c74)))OR(t0.c0)))OR(NULL)))OR(t1.c79)))AND(t0.c0)))OR(((((((((vt1.c0)OR(t1.c74)))AND(t1.c58)))AND(t0.c2)))OR(t1.c79)))))OR(1.110612145E9)) FROM t0, vt1, t1 WHERE (((((('', 1.341511207E9, NULL)) NOT BETWEEN ((0.7519600050981413, 0.18524558525123536, 0x21d703f2)) AND ((x'', '', 0xffffffff9f568866))))LIKE((NOT (0x2621bde4)))));SELECT DISTINCT ((((t1.c58)<>(NULL))) NOTNULL) FROM vt1, t1, vt0, t0; -- 0ms;
SELECT (t0.c1 COLLATE RTRIM IN ((((vt0.c0))>((t1.c74))))) FROM t1, t0, vt0, vt1 WHERE ((((x'', '-54542592', x'')) BETWEEN ((((((NULL)AND(NULL)))OR(x'')), CAST(NULL AS NUMERIC), 0.4708497662941369 COLLATE BINARY)) AND ((((NULL)|(0.3592786728776378)), ((0x78c8aa15)||('')), ((1.685774166E9) BETWEEN ('~4') AND (x'0958')))))); -- 0ms;
SELECT CASE DATETIME(vt0.c0, vt0.c0, '-1829050525', '1 '']祫8&F', t1.c95)  WHEN ((t0.c0) NOT BETWEEN (NULL) AND (t1.c74)) THEN ((-1605102881)/(vt0.c0)) WHEN vt1.c0 THEN ((vt1.c0)*(t1.c79)) WHEN GROUP_CONCAT(t1.c58) THEN SUM(vt1.c0) ELSE ((vt1.c0) IS TRUE) END FROM t0, vt1, vt0;SELECT DISTINCT (((+ (t0.c1)))||(((t0.c2)+(t1.c95)))) FROM t1, vt1, vt0 WHERE ((((0xffffffffebc35978) ISNULL) IN ()));SELECT DISTINCT ((((((t1.c58)AND(t0.c2)))OR(LIKELIHOOD(t1.c79, 0.061829525987413536))))OR(CAST(t1.c79 AS NUMERIC))), ((((((t0.c2)OR(t0.c2)))AND(vt1.c0))) NOT NULL), CAST((((t1.c58))<=((0x29489a5d))) AS INTEGER), FIRST_VALUE(NULL) OVER (), ((((t1.c58) BETWEEN (0Xffffffff9394a9e0) AND (t1.c79))) NOT NULL) FROM t0 WHERE (CASE '' COLLATE NOCASE  WHEN CAST(0.2514452441413032 AS BLOB) THEN ((0.2534257139452113)+(x'')) WHEN NULL THEN CASE WHEN '\n3m' THEN '-517598805' WHEN '9' THEN '649250101' WHEN x'' THEN NULL ELSE '脲x%f(w^Y~' END WHEN ((NULL)>>(2.60882978E8)) THEN ((0.3171668549864439) IS TRUE) END);SELECT DISTINCT TOTAL(((t1.c95)%(t1.c74))) OVER () FROM vt1, t1; -- 0ms;
SELECT ALL (((t1.c95 IN ())) NOTNULL) FROM t0, vt1 WHERE ((((NULL)) NOT BETWEEN ((CASE WHEN NULL THEN '-893187918' ELSE 0.4588797851449312 END)) AND (((('') NOT BETWEEN (0x1e0a0b95) AND (0.4693096920384455)))))) ORDER BY (((t1.c74)) NOT BETWEEN ((((t0.c2)||(t0.c2)))) AND (((- (t0.c0))))) ASC, ((((((t0.c2)>(t1.c95)))OR(((t1.c95) NOT BETWEEN ('') AND (t0.c1)))))OR(CAST(vt0.c0 AS NUMERIC))), (('')||(CASE WHEN '7S' THEN t1.c74 WHEN t0.c1 THEN 0.21940361450682333 WHEN t1.c95 THEN t0.c2 ELSE t0.c1 END));SELECT ((((t1.c95)OR(''))) NOT BETWEEN ((((t1.c95, vt1.c0, t1.c95)) NOT BETWEEN ((t0.c1, t0.c1, t1.c95)) AND ((t0.c0, vt0.c0, t1.c58)))) AND ((t0.c2 IN (t0.c0, t1.c79)))) FROM vt1, t1;SELECT ALL CAST(t1.c74 AS REAL) FROM t1; -- 0ms;
SELECT ((((t1.c79) BETWEEN (t0.c0) AND (t0.c2)))>(SQLITE_VERSION())) FROM vt0, t0, vt1, t1 LIMIT 639007487 OFFSET -24526245; -- 0ms;
SELECT ALL CAST(t1.c58 AS TEXT) FROM t0 WHERE (CASE (x'' IN ())  WHEN NULL COLLATE BINARY THEN 260882978 COLLATE NOCASE WHEN CASE -1.645687451E9  WHEN 0.10129065439378127 THEN '-1477850882' END THEN ((((x'')OR(NULL)))OR('-1612898635')) WHEN ((0.609715811356285) BETWEEN ('-2098050177') AND ('')) THEN 0.8184081817799868 END);SELECT DISTINCT (NOT (x'')) COLLATE RTRIM, ((ABS(DISTINCT t1.c58))>((+ (t1.c58)))), ((((((((((vt1.c0)AND(t1.c79)))OR(t1.c79)))OR(t1.c79)))AND(vt1.c0))) NOT BETWEEN (((((x'')OR(t1.c74)))AND(vt1.c0))) AND (CAST(1804998897 AS INTEGER))) FROM vt0, vt1;SELECT DISTINCT CASE CASE vt0.c0  WHEN t1.c79 THEN t0.c2 ELSE x'5a91712f' END  WHEN ((t0.c0) NOTNULL) THEN ((t0.c2) BETWEEN (vt1.c0) AND (t1.c95)) END, CAST(((vt0.c0)<<(t0.c2)) AS BLOB), CAST(CAST(t0.c0 AS REAL) AS INTEGER) FROM t0 GROUP BY vt0.c0, ((((((((((t0.c2)OR(0.32830835420981164)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c1))) BETWEEN (vt1.c0) AND (CAST(t1.c79 AS REAL))), ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (t1.c79) AND ((((vt0.c0)) NOT BETWEEN ((t1.c79)) AND ((vt0.c0))))) ORDER BY ((((t0.c0)||(t1.c79))) NOT NULL), vt0.c0 DESC  NULLS LAST;SELECT DISTINCT ((MIN(t1.c95)) NOT NULL) FROM vt0, t0, t1, vt1 WHERE (((-5.17598805E8 COLLATE RTRIM) ISNULL)) LIMIT 1602191781; -- 0ms;
SELECT DISTINCT ABS(((((vt0.c0)AND(t1.c58)))AND(t0.c1))), (~ (TOTAL(t1.c95))), (((COUNT('1957144726')))<=(((NOT (t1.c79))))) FROM vt0, vt1, t1, t0 NOT INDEXED ORDER BY t1.c95  NULLS FIRST, CASE '~*8?' COLLATE BINARY  WHEN CAST(t0.c0 AS REAL) THEN t1.c95 COLLATE RTRIM WHEN CASE t0.c1  WHEN vt1.c0 THEN t0.c0 END THEN ((t1.c74) NOT NULL) WHEN (t0.c2 IN (t1.c74)) THEN (((t0.c1, t0.c0, t0.c0))==(('', t0.c0, vt1.c0))) ELSE ((t1.c79) NOT BETWEEN (vt0.c0) AND (t1.c58)) END DESC; -- 0ms;
SELECT DISTINCT LAG((((json_array(t1.c79, vt1.c0, vt0.c0, t1.c79), (NOT (t1.c58)), vt1.c0 COLLATE RTRIM))<((CAST(x'' AS TEXT), (((t1.c74)) NOT BETWEEN ((t1.c74)) AND ((t1.c58))), ((vt0.c0) NOT BETWEEN (t1.c74) AND (t1.c74))))), (((x'', CASE t1.c79  WHEN t1.c95 THEN t1.c58 ELSE vt1.c0 END, CASE WHEN t1.c58 THEN vt0.c0 ELSE vt1.c0 END))>=(((~ (t1.c79)), HEX(0.3859270454497934), 0.5404483659722146))), ((((-1.84697394E8) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((t1.c58 IN ())) AND (((t1.c74)|(t1.c58))))) OVER () FROM vt0, vt1, t1 ORDER BY TRIM(((t1.c95)||(t0.c2)), ((((t0.c1)OR(t1.c74)))OR(t0.c1)))  NULLS LAST, ((vt1.c0 COLLATE BINARY)<=((((t0.c2)) NOT BETWEEN ((t1.c58)) AND ((t1.c74))))) ASC  NULLS LAST, ((((0.4868097935306833)OR(t1.c74))) IS FALSE) DESC  NULLS LAST;SELECT DISTINCT ((((((((MIN(vt1.c0))OR((((((((('1922783325')OR(t1.c58)))AND(t0.c0)))AND(t1.c58)))OR(t0.c0)))))OR(t1.c95 COLLATE RTRIM)))AND(UNLIKELY(DISTINCT '0.9705345391315885'))))AND(((((vt1.c0)AND(t0.c0)))AND(t1.c58)))) FROM vt1, t1, vt0, t0 WHERE (((((((x'') NOT NULL))AND(x'')))AND((NOT (0Xffffffffb4f9e837))))); -- 1ms;
SELECT DISTINCT MIN(t1.c95 COLLATE RTRIM) COLLATE RTRIM FROM t1, vt0, vt1, t0 WHERE (STRFTIME(CAST(0.8469604043303215 AS NUMERIC), (('Wj㚒*z]%m') IS TRUE), HEX(DISTINCT 1685774166))); -- 0ms;
SELECT ALL ((t0.c0 COLLATE NOCASE)-(GROUP_CONCAT(t1.c95))) FROM vt0, vt1 WHERE (CASE CAST('' AS REAL)  WHEN (('S7KR7U)') IS FALSE) THEN (((NULL))<=((x''))) WHEN x'' COLLATE BINARY THEN (0.6631013239384462 IN ('k样')) WHEN ((((x'')AND('aJ''*u')))OR(NULL)) THEN '-575655247' WHEN (((('0T7z')AND(NULL)))OR(NULL)) THEN ((0X2bf16d1)OR(NULL)) WHEN ((x'')|(0x10fa642a)) THEN (- ('f蹐5')) ELSE '830372547' COLLATE NOCASE END);SELECT ALL ((t1.c58)||(t0.c0 COLLATE RTRIM)) FROM vt1, t0 WHERE ((('497619494') ISNULL));SELECT ALL vt1.c0 FROM vt0, vt1, t0, t1; -- 0ms;
SELECT DISTINCT ((CAST(t0.c2 AS REAL))*(((t1.c95)<=(vt0.c0)))) FROM vt1, t0, vt0;SELECT ALL (+ (vt0.c0)) COLLATE RTRIM FROM t0, vt1;SELECT ALL MIN(((0.485890590863723)||(t1.c79))) FROM vt1, t0, t1, vt0 LIMIT -2041772096 OFFSET 546237234; -- 0ms;
SELECT DISTINCT (((t0.c1 IN ()))||(highlight(t1.c95, t1.c95, '0.3806736518011723', t0.c1))), ((((t0.c0)AND(t1.c74)))AND(t1.c95)) COLLATE BINARY, ((t1.c74)+('윓[v')) FROM t1, t0 WHERE (CASE '/9,XEe{W'  WHEN x'' THEN ('L9MN1bTN#' IN ()) WHEN (NULL IN ()) THEN ((x'')OR(x'4ad9cf9a')) WHEN CASE NULL  WHEN '1818322278' THEN '-814536539' ELSE ' 稨' END THEN x'c0ec' END); -- 0ms;
SELECT ALL ((((((vt1.c0)IS NOT(t0.c2)))OR(((t0.c1)/(t1.c95)))))AND(SUM(t1.c79))) FROM t1 LIMIT -1263444680 OFFSET -1564681803;SELECT ((((((vt1.c0) NOT BETWEEN (t0.c0) AND (t1.c74)))OR(CAST(0.9092779513441187 AS BLOB))))AND(TRIM(t0.c2))) FROM vt0, t0, vt1;SELECT ALL 1281323377, NULL, LAG(CASE WHEN (t1.c95 IN (t1.c74)) THEN ((((((((t1.c79)AND(vt0.c0)))OR(t1.c79)))AND(t1.c95)))AND(vt0.c0)) END, (((((t1.c95) NOTNULL)))>((''))), (('-243898224') NOT BETWEEN (t1.c95) AND (((t1.c74)>>(t1.c74))))) OVER ( ROWS CASE ((t1.c95) ISNULL)  WHEN ((vt0.c0)*(0.8767576739521035)) THEN (t1.c58 IN (vt1.c0)) WHEN DATETIME(t0.c0, vt1.c0, t1.c79) THEN ((t1.c74) ISNULL) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c2))) THEN (((t1.c79))<=((t0.c2))) END PRECEDING) FROM vt0 INDEXED BY i26, t1 WHERE (((NULL IN ()) IN ()));SELECT IFNULL(((t1.c74)>(t1.c58)), (((t1.c79)) NOT BETWEEN ((t1.c79)) AND ((t0.c0)))), MIN(((((t0.c1)AND(t1.c74)))AND(t1.c58))), (((((t0.c0) NOT BETWEEN (t1.c74) AND (t1.c79))))<=((t1.c74 COLLATE RTRIM))) FROM vt0, t1, vt1 WHERE ((((0.47438879531544054 IN ())) IS TRUE)) LIMIT -1284217678;SELECT DISTINCT (((NULL)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((t1.c79))), ((((t1.c79)LIKE(t0.c0))) IS TRUE), RANK() OVER () FROM vt0, t1;SELECT ALL COUNT(((vt1.c0)&(t1.c74))) OVER (), COUNT(((vt1.c0)LIKE(t0.c0))) OVER (), CASE ((t1.c95)LIKE(t1.c58))  WHEN (('156991579') BETWEEN (t1.c79) AND (t1.c74)) THEN (t0.c2 IN ()) ELSE ((t0.c0) NOT BETWEEN (t0.c2) AND (t1.c74)) END FROM vt0 WHERE ((((0.2766966630060045 IN ())) NOT NULL));SELECT DISTINCT ((x'') BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND (('0.7012803996870053')))) AND ((~ (0.29238643431486233)))) FROM t1 WHERE (CAST(CAST(NULL AS TEXT) AS NUMERIC)) ORDER BY CASE WHEN ((t1.c74)>(vt1.c0)) THEN (vt1.c0 IN (vt0.c0, vt0.c0)) WHEN ((((((((vt0.c0)OR(t1.c74)))AND(t1.c95)))AND(t0.c1)))AND(t1.c58)) THEN '374110760' WHEN (t1.c74 IN (vt0.c0)) THEN (NOT (t0.c2)) WHEN ((vt1.c0)*(vt1.c0)) THEN (- (t1.c58)) WHEN ((t0.c1)<(t1.c74)) THEN ((t0.c1)+(t0.c0)) ELSE (((t0.c2)) BETWEEN ((t0.c1)) AND ((t1.c58))) END  NULLS FIRST LIMIT 1721469279;SELECT ALL (((((~ (t0.c1)))OR((NOT (t0.c1)))))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (t1.c74)))) FROM vt0, t0 WHERE (((((((x'')=(-2.098050177E9)))OR((0.45623232367199273 IN (0.735891936080906)))))AND(((0.790389541442764) BETWEEN (-321256367) AND ('-1645687451')))));SELECT ((+ (t1.c79)) IN (UPPER(DISTINCT t1.c74))) FROM vt1, t1, t0, vt0 ORDER BY ((t1.c95)<=(vt0.c0)) COLLATE BINARY, ((((NOT (vt1.c0)), ((t0.c0) NOT NULL), CAST(-375122362 AS NUMERIC)))>=((CAST(vt1.c0 AS INTEGER), ((t1.c74)-(NULL)), LOWER(DISTINCT NULL))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((NULL)%(t1.c74)) FROM t0;SELECT ((((t1.c95)=(t1.c58))) IS FALSE) FROM t1, vt1; -- 0ms;
SELECT DISTINCT ((((((t0.c1) ISNULL))AND(CASE WHEN t0.c0 THEN t0.c0 END)))OR(((t1.c74) NOT BETWEEN (t0.c2) AND (t1.c79)))) FROM t1, vt1, t0, vt0; -- 0ms;
SELECT ALL '' FROM t0, vt1, t1 WHERE (CAST((((''))<(('1341511207'))) AS TEXT)); -- 0ms;
SELECT COUNT(*) FROM vt1 GROUP BY t0.c1 HAVING CASE t0.c0  WHEN ((t0.c1) NOTNULL) THEN (t0.c2 IN (t0.c2)) ELSE (((t0.c2)) NOT BETWEEN ((t1.c79)) AND ((vt0.c0))) END;SELECT DISTINCT GROUP_CONCAT(((t1.c74) NOT BETWEEN (t1.c58) AND (t1.c74))) FROM vt0, t0 WHERE (CAST(CAST(x'5984' AS REAL) AS INTEGER)) LIMIT 1141779851 OFFSET -2116660175;SELECT LAST_VALUE(0.44018386785193275 COLLATE BINARY) OVER (), ((t1.c74)LIKE(t0.c2)) COLLATE NOCASE, json(((t0.c1)IS(t1.c58))) FROM t0 WHERE (((0.7059392562548574 COLLATE RTRIM)+((('') NOT NULL))));SELECT ((((vt0.c0)==(t0.c2))) BETWEEN (LAST_INSERT_ROWID()) AND (((t0.c2)==(t0.c2)))) FROM vt0 NOT INDEXED, vt1, t1 WHERE ((((LTRIM(0Xfffffffff4fdbdce, '997418768')))<>((((('f즸s3n~'))<>((1.133060857E9)))))));SELECT DISTINCT CAST((t0.c0 IN (t1.c58)) AS INTEGER), CASE t0.c1  WHEN vt0.c0 THEN t1.c79 ELSE vt1.c0 END COLLATE BINARY, CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c1 WHEN t1.c58 THEN t0.c0 ELSE t1.c95 END COLLATE NOCASE FROM vt0 INTERSECT SELECT ALL CASE t1.c95  WHEN t1.c74 THEN t1.c58 ELSE t0.c1 END COLLATE BINARY, ((CASE t1.c79  WHEN vt0.c0 THEN t1.c74 ELSE vt0.c0 END)-(MIN(t0.c2))), ((((vt1.c0)AND(((t0.c1)GLOB(t0.c0)))))AND(t1.c95)) FROM t1, t0, vt0, vt1 WHERE (CAST((NOT (284845098)) AS TEXT));SELECT vt1.c0 FROM vt0, vt1, t0, t1; -- 0ms;
SELECT ALL (+ ((vt0.c0 IN ()))), CASE WHEN CASE t1.c58  WHEN vt1.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t1.c79 THEN vt1.c0 END THEN (vt1.c0 IN ()) ELSE ((t0.c1)==(t1.c95)) END, ((((((t1.c95) IS FALSE))AND(SUM(t0.c2))))OR(((t1.c79)>(t0.c1)))) FROM t0, vt0, vt1, t1; -- 0ms;
SELECT t1.c95 FROM vt0 WHERE ((NOT (((-1.266144207E9) ISNULL))));SELECT GROUP_CONCAT(0.00365794269416142) OVER ( PARTITION BY ABS(DISTINCT ((0.8256838351815395) BETWEEN (t0.c2) AND (vt1.c0))), (((((((((vt0.c0)OR(t1.c95)))OR(t0.c1)))AND(t0.c1)))OR(t1.c74)) IN (((0xc9b6100) IS TRUE)))) FROM vt1 WHERE ((((((NOT ('275110425')))AND((('dd') NOT BETWEEN ('1657521452') AND (0.6639456946540544)))))AND(((-1.266144207E9) NOT BETWEEN ('()') AND ('-600912928')))));SELECT DISTINCT AVG(TRIM(vt0.c0)) FILTER(WHERE ((-347764307)+(CAST(t0.c2 AS BLOB)))) OVER () FROM vt0, t1 NOT INDEXED, t0, vt1; -- 1ms;
SELECT ALL ((t0.c2 COLLATE RTRIM) NOTNULL), ((((((t0.c1)OR(t0.c1)))AND(x'cc17'))) NOT BETWEEN (((t1.c95) ISNULL)) AND (((t1.c95) NOTNULL))), NTILE((((((t1.c79)AND(t1.c95)))AND(vt0.c0)) IN ())) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), ((SQLITE_SOURCE_ID())<((((t1.c74))==((vt1.c0))))), CAST((NOT (t1.c58)) AS TEXT) FROM vt1, t1, vt0 GROUP BY ((((t1.c79)OR(97951801)))OR(x'')) COLLATE NOCASE, ((CAST(t1.c79 AS TEXT))/(CAST(t1.c58 AS INTEGER))), (NOT (0.5946277699402784)) COLLATE BINARY HAVING TOTAL(GROUP_CONCAT(CAST(t0.c1 AS BLOB)));SELECT DISTINCT ((t1.c74 COLLATE BINARY) NOT BETWEEN (GROUP_CONCAT(t1.c79)) AND (t0.c0 COLLATE RTRIM)) FROM t1, t0; -- 0ms;
SELECT (((~ (t1.c74)))GLOB(((t0.c1) NOT BETWEEN (t1.c74) AND (t1.c74)))) FROM t0, vt0, t1, vt1 GROUP BY ((vt1.c0)/(t1.c95)) COLLATE NOCASE HAVING ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t1.c95 THEN t1.c74 WHEN 0.7636396993266071 THEN vt1.c0 ELSE vt1.c0 END) IS FALSE); -- 0ms;
SELECT NULL FROM t1, t0, vt1 FULL OUTER JOIN vt0 ON HEX(((t1.c58)<<(t1.c74))) WHERE (CAST(CASE NULL  WHEN x'' THEN NULL ELSE NULL END AS BLOB)); -- 0ms;
SELECT ALL COUNT(*) OVER ( ORDER BY ((t0.c0) NOTNULL) COLLATE RTRIM DESC RANGE BETWEEN (~ (((t1.c74) ISNULL))) PRECEDING AND  UNBOUNDED FOLLOWING) FROM t1, vt0, t0 WHERE (((('-1733914161'))!=((LIKELIHOOD('-1731503987', 0.34545613501489913))))) LIMIT -1662826764 OFFSET -1669333345; -- 0ms;
SELECT ALL t1.c79 FROM t1, t0 GROUP BY ((((t1.c74)OR(t0.c1))) NOT NULL), (- (((t1.c74) IS TRUE))), (((CASE WHEN t1.c74 THEN t1.c58 END, (((t0.c2, t0.c1, t1.c79)) BETWEEN ((vt1.c0, x'', t1.c74)) AND ((vt0.c0, t1.c95, t1.c79))), ((t1.c58) NOT BETWEEN (t0.c0) AND (t1.c58))))<((t1.c95 COLLATE RTRIM, CASE t0.c2  WHEN 0x61827e6b THEN vt1.c0 WHEN t0.c1 THEN t1.c79 WHEN t1.c79 THEN t0.c0 ELSE x'e727016e' END, ((t0.c0)>>(vt1.c0)))));SELECT DISTINCT COUNT(((((t1.c79)AND(t0.c2)))AND(NULL))) OVER () FROM vt1, t0, t1; -- 1ms;
SELECT ALL GROUP_CONCAT(((t1.c79)&(t0.c0)) COLLATE NOCASE) OVER ( ORDER BY ((vt1.c0 IN ()) IN ())  NULLS FIRST) FROM t0, vt0;SELECT ALL (- (((t0.c0)LIKE(vt1.c0)))) FROM t1, vt1 INDEXED BY i26, t0, vt0 WHERE (CAST(0Xffffffffd6db2b2e AS BLOB) COLLATE BINARY) LIMIT -2098050177;SELECT ALL (((x'3d46')) NOT BETWEEN (((+ (t0.c0)))) AND (((+ (t1.c58))))) FROM vt0, vt1, t0, t1 WHERE ((((CAST(0.9470512491009112 AS TEXT), CAST('-1691192454' AS BLOB), TRIM(DISTINCT '6678180779980410027T-6753498694196139497-535-920-1267 8394643943938899808-')))<=((json_quote(2107726300), ((NULL)>(NULL)), '')))); -- 0ms;
SELECT ALL t0.c1 FROM vt1, vt0 NOT INDEXED, t1 WHERE ((- (((((((((((((((((NULL)AND(NULL)))AND('S4c<')))AND(NULL)))AND(NULL)))AND(508091.0)))AND(0.007795577662929598)))OR(NULL)))AND(0.7968173388975361)))));SELECT DISTINCT ((0.7308179762349082 COLLATE BINARY) NOT BETWEEN ((- (t1.c95))) AND (t0.c1 COLLATE BINARY)) FROM t1, vt1, vt0 WHERE ((+ (1599926874 COLLATE BINARY)));SELECT ALL CASE WHEN SUM(t0.c1) THEN COUNT(t0.c2) ELSE MAX(t0.c0) END, LAST_VALUE((((t0.c0)) NOT BETWEEN ((LOWER(vt1.c0))) AND (((+ (t1.c79)))))) OVER (), LAG(t0.c2, (((t0.c1 IN ()))>(CAST(vt1.c0 AS TEXT))), t0.c2) OVER ( ORDER BY ((x'')&(((t1.c74) NOT BETWEEN (t0.c2) AND (t1.c79)))) DESC) FROM t1, vt1, t0 LIMIT 1771971962; -- 0ms;
SELECT DISTINCT ((ABS(t0.c0))AND((0.9952853652210485 IN ()))) FROM t0, vt1, t1; -- 0ms;
SELECT AVG(JULIANDAY(t1.c79, t0.c0, t1.c74, t0.c1, t0.c1)) FROM t0 GROUP BY HEX(((t1.c95)<=(t0.c2))), (0.7427579113498286 IN (CAST(t1.c79 AS NUMERIC))), (NOT ((- (t1.c74))));SELECT DISTINCT (NOT (((((t1.c58)OR(t0.c2)))OR(t0.c0)))) FROM vt0, t0, t1, vt1; -- 0ms;
SELECT ALL CAST(TOTAL(t0.c1) AS REAL), ((TOTAL(t1.c58)) NOT BETWEEN (CASE WHEN t0.c1 THEN t1.c74 END) AND ((t0.c1 IN ()))), ((t1.c79)<(GROUP_CONCAT(t1.c58))) FROM vt0, t0, vt1;SELECT DISTINCT (((t1.c79)) NOT BETWEEN ((t1.c95 COLLATE NOCASE)) AND ((((((t1.c58)AND(t0.c0)))AND(t0.c0))))) FROM vt0, t0, t1 WHERE (ABS((('0.27806820585143766') BETWEEN (x'') AND ('㪺RjU(')))); -- 0ms;
SELECT DISTINCT (((t0.c1 IN ())) IS FALSE), COUNT(*) OVER ( ORDER BY (- (((0.426702991715427) NOT NULL))) DESC), LAST_VALUE(vt1.c0) OVER (), (((((t0.c1)) BETWEEN (('417390258')) AND ((t1.c79)))) NOT BETWEEN (((((((((t0.c2)OR(vt1.c0)))AND(t1.c79)))AND(t1.c79)))AND(vt0.c0))) AND ('')), ((((((1.669459213E9)AND(t0.c1)))OR(t1.c79)))>=(((vt0.c0)|(t0.c2)))) FROM t1, vt1, vt0 WHERE ((((((('D*') IS FALSE))OR('')))AND(((-5.17598805E8)=('-'))))) LIMIT -122873547;SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((-268768869)) AND ((((vt1.c0) IS FALSE)))) FROM vt1;SELECT ALL CASE (+ (NULL))  WHEN (((t0.c1))<((t1.c79))) THEN x'' ELSE ((t1.c95) NOT BETWEEN (t1.c74) AND (t1.c74)) END FROM t0, vt0, t1, vt1; -- 0ms;
SELECT CASE WHEN ((t1.c79) ISNULL) THEN (- (t1.c74)) WHEN t1.c79 COLLATE RTRIM THEN CASE t1.c95  WHEN 0.3347333012631897 THEN t1.c95 ELSE vt1.c0 END WHEN (vt0.c0 IN ()) THEN '' END FROM vt1 WHERE (((((((0.9824489985287441)) BETWEEN ((x'')) AND ((NULL)))))<=(((-1669333345 IN ()))))) ORDER BY ((((((t1.c74)OR(t0.c1)))OR(((t0.c1)=(t1.c74)))))OR((((t1.c79))>((t0.c1)))));SELECT DISTINCT CASE WHEN 0.4947836810062649 THEN vt1.c0 END FROM t1, vt1, t0 WHERE (((('t	l[q', -1.691192454E9, x''))<=(('Q{w', '^6\rO_\n', x'cd69'))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE SUM(t1.c74)  WHEN t1.c74 COLLATE RTRIM THEN (~ (t0.c2)) ELSE '295515362' END, ((((vt0.c0) IS FALSE))>(((((vt1.c0)AND(t1.c74)))AND(t0.c1)))), CAST(0xffffffffb8269996 AS INTEGER) FROM vt1 GROUP BY HEX(((t1.c95)<>(t1.c74)));SELECT DISTINCT ((((t0.c2) ISNULL))*(MAX(t0.c0))), (NOT ((t0.c0 IN ()))), t1.c58, (((((((((((t1.c95)OR(vt1.c0)))AND(vt0.c0)))OR(t0.c0)))AND(t1.c95)), ((t0.c0)/(vt0.c0)), t0.c1))==((t1.c95 COLLATE NOCASE, (+ (t0.c2)), 0.5450972726009155))), CASE ((t1.c58) NOT BETWEEN (t1.c58) AND (vt1.c0))  WHEN ((t0.c1) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) ELSE (t1.c79 IN ()) END FROM t1 GROUP BY CAST(((vt1.c0)+(t0.c2)) AS INTEGER);SELECT DISTINCT CASE WHEN ((t0.c2)<(t0.c1)) THEN x'4e1c' WHEN COUNT(vt1.c0) THEN t0.c1 COLLATE RTRIM WHEN (((t1.c58))==((t1.c79))) THEN t1.c74 COLLATE BINARY ELSE (t0.c2 IN (t1.c79)) END FROM t1, vt1, t0, vt0 WHERE ((- (((NULL)<>(0.8879781466947183))))); -- 1ms;
SELECT t1.c79 FROM t0, vt0, t1, vt1 LIMIT 937919604; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS NUMERIC))OR(CAST(t0.c1 AS BLOB))))AND(((((t0.c1)OR(vt1.c0)))AND(vt1.c0)))), '', (((((0.4170785868081659)) NOT BETWEEN ((t0.c2)) AND ((t1.c95)))) NOT BETWEEN (t1.c58 COLLATE NOCASE) AND (CASE WHEN t0.c0 THEN t0.c0 END)), (((('M')AND(vt0.c0)))AND(vt1.c0)) COLLATE NOCASE, (((((t1.c79, '', t1.c58, t0.c2, t1.c58))<((vt0.c0, t1.c79, t1.c58, vt0.c0, vt0.c0)))) ISNULL) FROM vt1, t0 WHERE ((NOT (((0.7566068457606765)==(1401022327))))) GROUP BY (((t0.c1 IN ()))||(((((t0.c0)AND(t1.c95)))OR(t1.c95)))) HAVING (CASE t1.c74  WHEN t1.c79 THEN vt1.c0 END IN ());SELECT (+ (t1.c95 COLLATE NOCASE)) FROM t0 GROUP BY ((t1.c95 COLLATE NOCASE)+(((t0.c0) BETWEEN (t0.c1) AND (t1.c79)))), (((t0.c1)*(t1.c74)) IN ()), (- ((((t1.c95))>((vt1.c0)))));SELECT DISTINCT CASE LOWER('0.43567677541729566')  WHEN (t1.c95 IN ()) THEN CAST('' AS NUMERIC) ELSE LIKELY(t0.c1) END FROM vt0, t0, t1 WHERE (CASE WHEN (((x'f5a9528f')) NOT BETWEEN (('62226083')) AND ((NULL))) THEN (((''))>=((0.3061882501828104))) END); -- 0ms;
SELECT NULL, CASE AVG(t1.c95)  WHEN (((t1.c58)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (((x'f0e83ec9', t1.c95, t0.c0))>=((t1.c95, t1.c74, 0Xffffffffa843d0fd))) END, CAST(NULL AS NUMERIC) FROM t0, vt1, t1, vt0 WHERE (CHAR(-2.116660175E9, 0.47879063034260916 COLLATE NOCASE, ('-1669333345' IN (x'', 'ho')))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((t1.c95) NOT BETWEEN (t1.c79) AND (t0.c2)))) AND ((((t0.c0)&(t1.c79))))) FROM t0 GROUP BY CASE ((vt0.c0)LIKE(t0.c2))  WHEN t1.c79 COLLATE BINARY THEN ((t1.c74)<=(t1.c95)) ELSE ((vt0.c0) BETWEEN (t0.c2) AND (t1.c74)) END HAVING ((0.18470500237011145)>=(json_object(-0.0, t1.c58)));SELECT ALL DENSE_RANK() OVER () FROM t1, vt0, vt1; -- 1ms;
SELECT DISTINCT ((((((t1.c95) BETWEEN (t1.c74) AND (t0.c0)))OR(('a{0' IN ()))))AND(((((vt0.c0)OR(x'')))OR('')))) FROM t0, vt0 WHERE (NULL COLLATE BINARY);SELECT DISTINCT ((((vt1.c0)OR(CASE t1.c74  WHEN t0.c0 THEN t1.c74 ELSE t1.c74 END)))OR(t1.c79 COLLATE NOCASE)) FROM vt1, t1, vt0, t0; -- 0ms;
SELECT ((((0.6018309038577991)IS NOT(t0.c2)))>(((t1.c79) NOT BETWEEN (t0.c1) AND (t1.c58)))) FROM t1;SELECT DISTINCT (t0.c0 COLLATE RTRIM IN ()), ((vt0.c0 IN ()) IN ()), GROUP_CONCAT(((((vt1.c0)OR(t1.c74)))AND(''))) OVER () FROM t0;SELECT DISTINCT (NOT ((('zE^t<y') NOT BETWEEN (vt0.c0) AND (vt1.c0)))), LEAD((((((- (t1.c74)))OR(((((((((vt0.c0)AND(0.14191159786152763)))OR(t1.c58)))OR('\*')))AND(t1.c58)))))AND(CASE WHEN vt0.c0 THEN t1.c74 END)), CAST((NOT (t1.c95)) AS INTEGER), (((+ (t1.c95)))>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c58)))))) OVER (), (((CASE WHEN t1.c58 THEN t1.c58 ELSE t1.c58 END, vt0.c0 COLLATE NOCASE, CASE t0.c2  WHEN x'c8e5' THEN vt1.c0 END))==((((((((((t0.c2)OR(vt1.c0)))OR(t0.c2)))AND(t1.c58)))AND(vt1.c0)), ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)), (((t0.c0, t0.c2, t0.c1)) BETWEEN ((t1.c95, t0.c2, t0.c0)) AND ((t1.c74, t1.c74, t0.c2)))))), t0.c0, CAST((- (vt1.c0)) AS BLOB) FROM vt1, t1, vt0 LIMIT -1686103450 OFFSET 1301371097;SELECT ALL CASE vt0.c0 COLLATE NOCASE  WHEN CASE t1.c74  WHEN t0.c1 THEN t0.c2 ELSE t1.c58 END THEN ((0.22966138029378735)>(t1.c79)) WHEN vt0.c0 THEN (('1341511207') NOT BETWEEN (x'') AND (t0.c2)) WHEN ((t1.c74)OR(t0.c0)) THEN (~ (t1.c79)) ELSE (t0.c0 IN (x'', t1.c74)) END FROM t1, vt0;SELECT DISTINCT 0.2496181786081454 FROM vt1, vt0, t0, t1 WHERE ((~ ((- (NULL))))); -- 0ms;
SELECT DISTINCT CASE ((t0.c1) BETWEEN (t1.c74) AND (t1.c58))  WHEN t0.c2 THEN ((t0.c2) NOT BETWEEN (t1.c58) AND (t1.c74)) ELSE ((((t1.c95)OR(t1.c58)))AND(t1.c95)) END, (~ (((t0.c0) NOT BETWEEN (t1.c58) AND (NULL)))), (((((t1.c79) NOT BETWEEN (t1.c74) AND (vt0.c0)), '-678420338', vt1.c0))!=((CASE vt1.c0  WHEN t0.c1 THEN 0X6877ce3f WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c1 ELSE t0.c1 END, t1.c79 COLLATE NOCASE, ((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0))))) FROM t0, t1, vt0, vt1; -- 0ms;
SELECT t1.c74, x'', CAST(((t0.c0)!=(t1.c95)) AS REAL), SUM(((t1.c74)GLOB(t1.c95))), ((CAST(t1.c79 AS TEXT))||(((t1.c79) NOTNULL))) FROM t1 WHERE (((((CAST('-491487085' AS NUMERIC))AND(((x'') BETWEEN (-422163806) AND ('')))))AND(((NULL)&(NULL))))) GROUP BY (NOT (t1.c74)) HAVING ((((t1.c74)&(x'382a'))) ISNULL);SELECT DISTINCT ((CAST(t1.c74 AS BLOB))||(CASE t1.c74  WHEN vt0.c0 THEN t0.c1 END)), t1.c95, ((t1.c79)IS NOT(vt1.c0)) COLLATE NOCASE, (((t1.c58)) NOT BETWEEN ((((((((((t0.c2)OR(vt1.c0)))AND(t0.c0)))AND(t1.c58)))AND(t0.c0)))) AND ((((t1.c74) BETWEEN (t1.c58) AND (t1.c79))))), (+ (t1.c79)) FROM t0, vt1, vt0;SELECT t1.c74, ((((t1.c74)AND(t0.c1)))!=(((t1.c95) NOTNULL))), COUNT((t1.c58 IN (t1.c58))) FILTER(WHERE (CASE WHEN t1.c74 THEN t0.c2 WHEN t1.c58 THEN t1.c58 WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END IN ())) OVER () FROM vt1, t1, t0, vt0; -- 0ms;
SELECT ALL ((((~ (t0.c0))))=(((NOT (x''))))), (NOT (MIN(t1.c79))), (CASE t1.c79  WHEN t1.c95 THEN NULL WHEN t0.c0 THEN t0.c1 WHEN vt1.c0 THEN t1.c58 ELSE t1.c95 END IN ()) FROM vt1, vt0 WHERE (CAST(0.997467484169004 AS NUMERIC));SELECT DISTINCT SUM((- (t1.c79)) COLLATE RTRIM) FROM t1, t0, vt0 WHERE ((((249422631)) BETWEEN ((x'')) AND ((NULL))) COLLATE BINARY); -- 0ms;
SELECT ALL CASE SUM(t1.c58)  WHEN ((t0.c0)OR(vt1.c0)) THEN (t0.c1 IN (t1.c74)) ELSE 0x44430113 END, LIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t1.c58) AND (t0.c1))), GROUP_CONCAT((- (t1.c58))) OVER () FROM vt0;SELECT (((t1.c79)) BETWEEN ((((((t0.c1)OR(x'')))AND(t0.c0)))) AND ((AVG(t1.c95)))) FROM vt0 WHERE (CASE WHEN (((NULL, '', -1187305539))>((x'ba89', 0.7430350148332115, 0.1923070069928393))) THEN '' ELSE CASE -1691192454  WHEN x'' THEN 0.09390260759522895 END END);SELECT ALL CUME_DIST() OVER () FROM vt0, t1 INDEXED BY i26, t0, vt1; -- 0ms;
SELECT ((((CASE x'747b'  WHEN t0.c2 THEN t0.c2 ELSE x'565e' END)OR('997744955')))OR((+ (vt1.c0)))) FROM vt0, t0, t1 WHERE (LIKELIHOOD(DISTINCT TRIM(DISTINCT ''), 0.8037645048278319)) ORDER BY ((vt0.c0) IS FALSE) COLLATE RTRIM, ((CASE t0.c2  WHEN x'37ef' THEN t0.c2 END)||(0.8910052860539437)) DESC;SELECT DISTINCT TOTAL(((((t1.c79)OR(t1.c95)))OR(t1.c74))) OVER (), ((t0.c0)<<(((t0.c0)<>('f{Na')))), vt1.c0 FROM vt1;SELECT NULL COLLATE BINARY FROM vt1, t1, t0, vt0 WHERE ((((NULL)/(0.5499271452871405)) IN ())); -- 0ms;
SELECT (+ ((x'' IN (t0.c2, t0.c2)))) FROM t1, vt0, vt1, t0 WHERE (((HEX(DISTINCT 0Xffffffffc3273b07)) BETWEEN (CASE WHEN NULL THEN '-1551170891' END) AND ('497619494'))); -- 0ms;
SELECT NTH_VALUE((~ (((t1.c95) NOT BETWEEN (t1.c58) AND (t0.c1)))), CHANGES()) OVER ( ROWS  CURRENT ROW), CAST(((t1.c74) NOT NULL) AS TEXT), CAST(((vt0.c0)=(t1.c58)) AS TEXT) FROM t0, vt0, vt1, t1 WHERE (CASE ((NULL) NOT BETWEEN (0.5064268669820694) AND (x''))  WHEN (('') BETWEEN (-1731503987) AND (0Xffffffffb111b4d3)) THEN (('') NOT NULL) ELSE (('')||('1774915492')) END); -- 0ms;
SELECT DISTINCT ((CAST(t1.c95 AS TEXT)) BETWEEN (((vt1.c0)IS(t1.c74))) AND (((vt1.c0)GLOB(t1.c58)))), ((t1.c79)GLOB(COALESCE(DISTINCT t1.c74, vt0.c0))), (((+ (t0.c2))) IS FALSE) FROM vt0 WHERE ((((((x'') NOT NULL), (('茖') ISNULL), IFNULL(0.5704893183696369, '0.9181777916791097'), CASE 0.37398128737302316  WHEN NULL THEN NULL WHEN x'' THEN NULL WHEN 'VPj' THEN x'7be8' END, (('-1263444680')*(NULL))))<((UNLIKELY(DISTINCT x''), CASE WHEN '-600912928' THEN '' END, (+ ('-2083681587')), (((x'')) NOT BETWEEN ((NULL)) AND ((x''))), CAST(x'' AS NUMERIC))))) ORDER BY (((+ (0.14968709418954873))) NOT BETWEEN (t0.c0) AND (((t0.c0)||(x'd388')))) ASC;SELECT (CAST(t1.c79 AS NUMERIC) IN ()) FROM t1, t0, vt0 WHERE (((0x56bbfa86) BETWEEN (LIKELIHOOD(NULL, 0.8156812973260366)) AND ((+ (0.5008205170725777))))); -- 0ms;
SELECT DISTINCT CAST(t1.c79 AS INTEGER) FROM t1, vt0 CROSS JOIN vt1 ON (- (((t1.c74) NOT BETWEEN (t0.c2) AND (t1.c74)))) RIGHT OUTER JOIN t0 ON 't' WHERE (UPPER(DISTINCT (~ (NULL)))) GROUP BY (+ (((t0.c2)<=(t0.c0)))) HAVING ((((0.4206084071451921) IS TRUE)) NOT BETWEEN (((((t0.c2)AND(0.021922490928031002)))OR(vt0.c0))) AND (x'8895'));SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) BETWEEN (0.7450852466953103) AND (((t1.c58)<(t0.c1)))) FROM vt0, t1, vt1, t0; -- 1ms;
SELECT DISTINCT CAST(vt0.c0 AS INTEGER), (((((t0.c1) IS FALSE)))<((((((t0.c2)OR(t1.c95)))OR(t0.c1))))), ((((x'')AND(((t1.c95) BETWEEN (t0.c0) AND (t0.c2)))))AND(AVG(t1.c74))) FROM t0, vt1, t1;SELECT DISTINCT CAST(t1.c79 AS NUMERIC) COLLATE RTRIM, (((t1.c95)LIKE(x'')) IN ()), LIKE(t1.c58 COLLATE NOCASE, CAST(t1.c79 AS REAL)) FROM t1, vt1; -- 0ms;
SELECT DISTINCT (((vt0.c0)&(t0.c1)) IN ()) FROM t0; -- 0ms;
SELECT ALL 2.079213943E9 FROM t0 WHERE (''); -- 0ms;
SELECT '1774915492' FROM t1, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT CAST(CASE t1.c95  WHEN vt0.c0 THEN t0.c0 WHEN t1.c58 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 END AS REAL) FROM t1 WHERE (CAST(CAST(',o*' AS NUMERIC) AS BLOB)) GROUP BY CASE (t1.c95 IN ())  WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c1 AS BLOB) WHEN (((t1.c58)) NOT BETWEEN ((t1.c79)) AND ((0Xffffffff8142c6af))) THEN (+ (vt1.c0)) WHEN ((((t0.c1)AND(t0.c2)))OR(t0.c0)) THEN t0.c2 ELSE NULL COLLATE RTRIM END HAVING (((t1.c74, t1.c79, vt0.c0)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (vt1.c0) AND (t1.c79)), ((((t1.c58)OR(t0.c1)))AND(t0.c1)), ((((((((t0.c2)AND(t0.c0)))OR(t0.c1)))AND(t0.c0)))AND(t1.c74)))) AND ((((t0.c0) ISNULL), ((t1.c79)AND(vt1.c0)), ('x쵸' IN ()))));SELECT DISTINCT (t0.c2 IN ()) COLLATE RTRIM FROM t1, vt0, t0 WHERE (((- ('0.43567677541729566')) IN (((('')) BETWEEN (('')) AND (('혧>')))))); -- 0ms;
SELECT ALL AVG((~ (t0.c2))), ((CASE WHEN vt1.c0 THEN t1.c79 END)AND(NULL)), (+ (CAST(t0.c1 AS BLOB))) FROM vt1;SELECT ALL LEAD((((t0.c0) NOT NULL) IN (t0.c1 COLLATE NOCASE)), CASE WHEN (~ (t1.c58)) THEN t1.c95 END, t0.c2) OVER ( PARTITION BY (((t1.c79)) BETWEEN (('0.08233376292007999')) AND ((((((t0.c2)OR(t1.c58)))OR(t0.c2))))), t1.c58), (((((t1.c95, t0.c0, t1.c58))<>((t0.c2, t1.c95, t0.c2)))) BETWEEN (CAST(NULL AS TEXT)) AND (MAX(t0.c1))), RANK() OVER () FROM t1, t0; -- 0ms;
SELECT ALL LEAD(((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) ISNULL))), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL), (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((UNICODE(vt0.c0))))) OVER () FROM vt0 WHERE (((((0Xd57c932) ISNULL))>(((0.20003061099715835)==(NULL))))) GROUP BY t1.c95, (((t0.c1 IN ())) IS FALSE), ((((t1.c95) NOTNULL)) NOT BETWEEN (x'') AND (LIKELY(x''))) HAVING SUM(CAST('546237234' AS TEXT)) LIMIT 196419087;SELECT ((json_object(t0.c2, t0.c0, t1.c74, t1.c79)) NOT BETWEEN ((t0.c2 IN (t0.c2))) AND (t1.c79)), ((COUNT(*))/(((t0.c1) NOTNULL))), COUNT(*), (((('Q')||(t1.c58))) NOT NULL), AVG(t0.c2), NULL, CASE WHEN t1.c95 COLLATE RTRIM THEN UNLIKELY(t0.c0) ELSE x'' END FROM vt0, t1, t0 WHERE (LIKELY(((0x72eaf7c7) IS FALSE))) LIMIT 766785176;SELECT DISTINCT (- ((~ (t0.c0)))) FROM t1, t0, vt0, vt1 WHERE ((((~ (-2.1053408E8)))AND((('') NOT BETWEEN (0.3410255088875759) AND (NULL))))); -- 0ms;
SELECT ALL (((t1.c74) BETWEEN (t1.c74) AND (t0.c0)) IN ()) FROM t1 WHERE (CAST(((2.079213943E9) NOT BETWEEN (-2.95400839E8) AND ('1406201735')) AS TEXT)) UNION SELECT (+ (NULL)) FROM vt1 GROUP BY CASE (t1.c79 IN (vt1.c0))  WHEN ((((((((((((-296516763)AND(vt1.c0)))AND(t1.c79)))AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))OR(t1.c95)) THEN ((t0.c1)<(t0.c1)) END HAVING CAST(((t0.c1)<<(vt0.c0)) AS TEXT);SELECT ('1751876048' IN ()) FROM vt0 WHERE ((+ (CAST(0.8529625356486135 AS TEXT)))); -- 0ms;
SELECT DISTINCT ((t1.c58 COLLATE NOCASE)LIKE(((t1.c58) BETWEEN (vt1.c0) AND (t1.c79)))) FROM t0, vt1 WHERE ((')S' IN (((NULL)>('-1349370064')), (((NULL, NULL, NULL, '', 0.0546312893058335)) NOT BETWEEN ((x'', -1731503987, NULL, x'', x'b661')) AND ((0.5914748513676586, NULL, x'', '8i', -1.266144207E9))))));SELECT CASE WHEN t1.c74 THEN vt0.c0 ELSE t1.c79 END COLLATE BINARY FROM vt0, vt1, t0 WHERE (((((x'')!=(NULL))) IS FALSE));SELECT ALL ((vt0.c0) NOT NULL) FROM vt0, t0, t1, vt1 WHERE ((NOT (((x'81cb') NOT BETWEEN (937919604) AND ('222924970'))))); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((t1.c95)/(vt1.c0)), ((0.7107753035326934) NOT BETWEEN ('-677688363') AND (NULL))) FROM vt0, t1, vt1, t0 LIMIT -116874039; -- 0ms;
SELECT CASE WHEN t0.c2 COLLATE RTRIM THEN t0.c2 WHEN '0.43567677541729566' THEN ((t1.c74) NOT NULL) WHEN ((t1.c58)AND(x'08f9')) THEN NULLIF(t1.c74, t0.c1) ELSE vt1.c0 END FROM vt0, vt1 WHERE (CASE CASE x'c4e9'  WHEN 0.32903607871720764 THEN x'9778' END  WHEN (((x''))<((x''))) THEN (0.4361377835247541 IN ('2079213943')) WHEN (('-772131409')||(0.3917080004972051)) THEN NULL WHEN TYPEOF(NULL) THEN (('	b-') BETWEEN (x'') AND (NULL)) ELSE ((NULL) NOT BETWEEN (0.18885313452784758) AND ('∳N')) END);SELECT ROUND((((t0.c2, t0.c1, vt0.c0)) NOT BETWEEN ((t1.c95, t0.c1, t1.c74)) AND ((t1.c58, vt1.c0, t0.c2))), ((((t1.c58)OR(t0.c1)))OR(t1.c74))) FROM vt1, t0 ORDER BY TRIM((- (vt1.c0)), ((t1.c95)GLOB(t1.c95)))  NULLS FIRST, CASE t0.c2  WHEN t1.c79 THEN t1.c95 END COLLATE NOCASE ASC  NULLS LAST;SELECT (((- (0x7943ad18)))/((((t1.c95))>((t0.c0))))), ((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c1))) NOTNULL), DENSE_RANK() OVER () FROM vt0 WHERE ((((''))<=((NULL))) COLLATE NOCASE);SELECT (t0.c0 IN ()), ((t1.c95 COLLATE RTRIM)<>(vt1.c0 COLLATE RTRIM)), CASE WHEN ((t1.c95) BETWEEN (t0.c0) AND (t0.c2)) THEN ((t0.c1)||(t0.c2)) WHEN ((t1.c58) BETWEEN (t1.c58) AND (t1.c58)) THEN ((t1.c58) ISNULL) WHEN ((vt1.c0)<=(vt0.c0)) THEN CASE t1.c95  WHEN t0.c2 THEN vt0.c0 END ELSE ((t1.c74)-(t0.c0)) END FROM t0;SELECT DISTINCT ((((t1.c58)%(t1.c74))) NOT BETWEEN ((((t1.c79)) BETWEEN ((t1.c58)) AND ((vt1.c0)))) AND (((1.356539547E9) ISNULL))) FROM vt1 LIMIT -910525897 OFFSET 546237234;SELECT DISTINCT (((t1.c58) IS TRUE) IN ()) FROM vt0, t1, vt1 LIMIT -900674746 OFFSET -323235409; -- 0ms;
SELECT ALL (((~ (0.8476566416915292)))AND(2.079213943E9)) FROM vt1, t0, t1, vt0; -- 0ms;
SELECT ALL CASE WHEN t1.c58 THEN -274571966 WHEN (NOT (t0.c1)) THEN ((t1.c74)AND(t1.c79)) WHEN ((t1.c74) NOT BETWEEN (vt1.c0) AND (NULL)) THEN (~ (t1.c95)) WHEN t1.c95 COLLATE RTRIM THEN CASE t1.c95  WHEN t0.c1 THEN t0.c1 ELSE t1.c95 END WHEN ((t1.c95) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN 'eS쵸Akr' ELSE PRINTF(t1.c74) END FROM vt0 GROUP BY ((((t1.c79)==(t1.c79)))+((t0.c1 IN ()))) HAVING ((t0.c2) ISNULL) COLLATE RTRIM ORDER BY CASE WHEN (t0.c0 IN ()) THEN ((t1.c58)+(t0.c0)) END  NULLS FIRST;SELECT 0.20035895965387318, MAX(CASE vt1.c0  WHEN vt1.c0 THEN t1.c79 WHEN t0.c0 THEN t1.c95 WHEN NULL THEN t1.c74 ELSE vt1.c0 END, (t0.c0 IN ())), (((((vt1.c0)) BETWEEN ((t0.c2)) AND ((vt1.c0))))<=('0.8988248239291637')), ((((vt0.c0) NOTNULL)) IS TRUE), CAST(t0.c1 AS NUMERIC) COLLATE NOCASE FROM vt1, t1;SELECT DISTINCT CASE (((t0.c0, t1.c74, t0.c2, t0.c0, t1.c58))!=((t0.c2, t0.c2, vt1.c0, t1.c58, t0.c0)))  WHEN ((t1.c79)%(t1.c95)) THEN SQLITE_SOURCE_ID() ELSE t1.c74 COLLATE RTRIM END FROM vt1, t0, t1 WHERE (CASE WHEN (NOT (1301371097)) THEN (- (-1.7976931348623157E308)) ELSE ((('	ꤶiq-', 0.6999964233176842, NULL)) NOT BETWEEN (('-2095526031', NULL, NULL)) AND ((x'', NULL, 0.0494360258423957))) END); -- 0ms;
SELECT ALL CASE WHEN ((t0.c2) NOT NULL) THEN ((t0.c0)<=(t1.c95)) ELSE t1.c95 COLLATE RTRIM END, (((t1.c79)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND (((~ (t0.c1))))), CAST(TRIM(DISTINCT t1.c58) AS REAL) FROM vt0, t1 NOT INDEXED, vt1;SELECT DISTINCT 0.85512187100983 FROM t0, t1, vt0, vt1; -- 0ms;
SELECT DISTINCT (((t1.c74) IS FALSE) IN ()) FROM vt1, vt0, t1, t0 WHERE ((((NOT (x''))) NOT BETWEEN (CASE NULL  WHEN 240946716 THEN NULL END) AND (NULL COLLATE BINARY))); -- 0ms;
SELECT ALL (CAST(vt1.c0 AS REAL) IN (CAST(vt1.c0 AS NUMERIC))) FROM t1, vt0;SELECT SUM(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c2))) FILTER(WHERE CAST(((((((((NULL)AND(t1.c95)))AND(t1.c58)))OR(t1.c79)))AND(vt0.c0)) AS INTEGER)) OVER () FROM t1, vt0 WHERE (((((((((((0Xffffffffc2ff153a)AND('1576824582')))AND('')))OR(NULL)))OR(x''))) BETWEEN (('1669459213' IN ())) AND (((NULL) ISNULL))));SELECT ALL (((t1.c74, vt1.c0, t1.c74)) NOT BETWEEN ((((t0.c1) IS TRUE), ((2045771218)OR(t1.c79)), ((vt1.c0) BETWEEN (t1.c95) AND (t1.c95)))) AND ((vt0.c0, (t0.c0 IN ()), CASE t0.c0  WHEN vt1.c0 THEN t1.c74 WHEN '' THEN 0.9603777144212251 WHEN x'b7e1' THEN t1.c58 ELSE t0.c2 END))), t0.c2, (((NOT (t0.c2)))-(((t1.c58) IS FALSE))), LIKE(load_extension('1934487806'), '', '1'), NTILE(CASE WHEN t1.c79 COLLATE RTRIM THEN (+ (t1.c79)) ELSE ((t1.c79) NOT BETWEEN (t0.c2) AND (t1.c58)) END) OVER () FROM vt0, t1, t0;SELECT DISTINCT t1.c74 FROM vt0, t0, t1, vt1; -- 0ms;
SELECT ALL (((((((t0.c1))=((t0.c1))))AND(t0.c0)))AND(t1.c74)) FROM t0;SELECT ALL COUNT((((vt0.c0))>=((572275090)))), (- (TRIM(DISTINCT t1.c79, t1.c58))), LAG(vt0.c0, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c0))==((vt0.c0))) END) OVER () FROM vt0 WHERE (((((+ (0.8688714445648458))))>=((TRIM(DISTINCT '', 'ꕍ')))));SELECT DISTINCT (NOT (CAST(t0.c2 AS NUMERIC))), ((((((((((t0.c1)OR(t1.c74)))AND(t1.c74)))AND(t0.c2)))OR(0.6730949105037691))) NOTNULL), NTILE((CAST(vt0.c0 AS REAL) IN ())) OVER () FROM vt0, vt1 LIMIT -166914617 OFFSET -520550865;SELECT ALL CAST(t1.c58 AS BLOB) COLLATE RTRIM FROM vt0, vt1, t0;SELECT ALL vt0.c0 COLLATE BINARY, CAST((((t1.c74)) NOT BETWEEN ((t0.c1)) AND ((''))) AS NUMERIC), ((((- (vt0.c0))))=((CAST(vt0.c0 AS BLOB)))), 0.39218692536110245 COLLATE NOCASE, json_array_length(((((vt1.c0)OR(t0.c0)))AND(vt1.c0))) FROM t0 WHERE (CASE ((955528866)OR(x'e279'))  WHEN (('%HLE')*(NULL)) THEN (~ ('-1838637748')) WHEN ((NULL) NOTNULL) THEN (((x'672c')) NOT BETWEEN (('dt)%FDr')) AND ((NULL))) WHEN ((NULL) BETWEEN (x'') AND ('br<|仑詹#')) THEN (x'20e6' IN ()) ELSE UNICODE(NULL) END);SELECT DISTINCT CASE x'f881'  WHEN '118848069' THEN CAST(t0.c1 AS INTEGER) END FROM vt1, t0, t1 WHERE (((0.53391401606715 COLLATE BINARY) NOTNULL)) GROUP BY 0.6088446691049375; -- 0ms;
SELECT ((vt1.c0)IS(t0.c0 COLLATE BINARY)), (~ (((t0.c2) BETWEEN (t0.c0) AND (vt1.c0)))), (COUNT(vt1.c0) IN ()) FROM vt0, t1;SELECT DISTINCT ((((vt1.c0, t0.c2, t0.c2)) NOT BETWEEN ((t1.c58, t1.c95, t0.c0)) AND ((t1.c95, t1.c74, t1.c79))) IN ()) FROM vt1, vt0, t1; -- 0ms;
SELECT DISTINCT ((t0.c1) BETWEEN (((vt0.c0) BETWEEN (t1.c95) AND (vt0.c0))) AND (((t0.c0)=(t0.c2)))) FROM t0, vt0 WHERE ((((('>\n!\r1') NOTNULL))>(x'')));SELECT DISTINCT (((((vt1.c0)-(t0.c0)), ((t0.c0) ISNULL), ((t1.c58) NOT BETWEEN (t0.c2) AND (vt0.c0)), load_extension(t1.c79), ((t0.c0) NOTNULL)))>=((CAST('-422163806' AS INTEGER), ((((t1.c58)OR(t0.c2)))AND(t1.c58)), ((t0.c0)=(t1.c79)), ((t1.c74) NOT BETWEEN (vt1.c0) AND (t1.c74)), CAST(t1.c74 AS NUMERIC)))), RANK() OVER (), ((-9.00674746E8) IS FALSE) FROM t1, vt0 WHERE ('' COLLATE NOCASE);SELECT DISTINCT ((((t1.c95 IN ()), ((t1.c58)+(t1.c95)), LAST_INSERT_ROWID()))>((((t1.c58) NOT NULL), ((-2.129570831E9)<(t1.c58)), MAX(t1.c74)))) FROM t1, vt0, t0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c0 THEN ((t0.c0) BETWEEN (t1.c95) AND (t0.c1)) ELSE vt1.c0 COLLATE BINARY END, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((t0.c1 IN ())) AND (t0.c1)), SUM((t1.c74 IN ())) FROM t1, vt0, vt1 WHERE (((((NULL IN ())))<((NULL COLLATE BINARY))));SELECT DISTINCT (((COALESCE(t0.c2, t0.c0), ((t1.c74) NOT BETWEEN (t1.c79) AND (t0.c2)), ((((0.6182248733944566)OR(t1.c58)))OR(t0.c0))))>=((0Xffffffffaad7b389, t1.c58, (t1.c74 IN (vt1.c0))))) FROM vt0, t1, vt1 WHERE ((('-814536539')<<((((1.56991579E8, 0.23972075464316067, x''))<((0.46748641800568136, 1.6376949E9, 882861195))))));SELECT DISTINCT GROUP_CONCAT(CASE vt0.c0  WHEN 0X71e91c0f THEN x'395c' END) OVER ( ORDER BY (CAST(t1.c79 AS REAL) IN ()) ASC  NULLS LAST), (NOT (t0.c2)), ((AVG(t1.c95))%((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c1))))) FROM vt0, vt1, t0, t1 WHERE (CASE ((0.6698272441309253)/(3.7411076E8))  WHEN ((('c3''>+*rc')) NOT BETWEEN ((x'')) AND ((NULL))) THEN (0.4889916050415867 IN ()) END); -- 1ms;
SELECT ((NULL)&((t1.c79 IN ()))), ((((t0.c0) NOT BETWEEN (t1.c95) AND (vt0.c0))) BETWEEN (t1.c74 COLLATE NOCASE) AND (t1.c74)), CASE CASE vt0.c0  WHEN vt0.c0 THEN '849113632' END  WHEN LOWER(DISTINCT t1.c79) THEN ((t1.c95) IS FALSE) ELSE AVG(t0.c1) END FROM vt1 ORDER BY ((CASE NULL  WHEN t1.c95 THEN t1.c79 END) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((t1.c79) BETWEEN (t0.c2) AND (t1.c58)))) ASC  NULLS FIRST, CAST(0.0546312893058335 AS REAL) ASC, '229733322' COLLATE BINARY DESC  NULLS LAST;SELECT DISTINCT ((((vt0.c0)||(vt0.c0)))AND((+ (vt1.c0)))) FROM vt1, t0 WHERE ((+ (((NULL) NOT BETWEEN (0.15598015654276765) AND (NULL)))));SELECT DISTINCT (((vt1.c0))>((COUNT(*)))) FROM t1, t0, vt0;SELECT ALL NULL FROM t1, vt0, t0, vt1; -- 0ms;
SELECT (((t1.c79, vt1.c0, t0.c1, t1.c58, t1.c74)) NOT BETWEEN ((AVG(t0.c2), MIN(t1.c79), ((t1.c58) NOT BETWEEN (t1.c95) AND (t1.c79)), (NOT (vt0.c0)), (t0.c1 IN ()))) AND ((((t1.c79)<=(t0.c0)), ((vt0.c0) ISNULL), ((t0.c1) BETWEEN (t0.c1) AND (t1.c58)), ((t1.c58)%(t0.c1)), (~ (x''))))) FROM vt1, vt0;SELECT ((((t1.c74 IN ())))<=((((t1.c95) NOT BETWEEN (t0.c0) AND (vt1.c0))))) FROM t0, vt1, t1 WHERE (CAST(('sX' IN ()) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN (((NOT (vt1.c0)), MIN(t1.c79), (t1.c95 IN ()))) AND ((((vt1.c0) NOTNULL), ((vt1.c0)GLOB(t1.c79)), ((vt0.c0) IS FALSE)))) FROM t1, vt1, t0, vt0 WHERE (0.019536922749177732); -- 0ms;
SELECT DISTINCT ((x'12cb')+(SUM(t0.c1))) FROM t1, t0, vt1 GROUP BY ''; -- 0ms;
SELECT DISTINCT (((((t1.c79, t0.c0, t1.c95)) NOT BETWEEN ((vt0.c0, t0.c0, t0.c2)) AND ((vt0.c0, t1.c74, t1.c79)))) BETWEEN (CAST(t1.c74 AS REAL)) AND (CASE WHEN t0.c2 THEN t0.c2 END)) FROM t1, t0;SELECT MAX(((vt1.c0) NOT BETWEEN (t1.c58) AND (t0.c1))) FROM t0, t1, vt0, vt1; -- 1ms;
SELECT (((t1.c74) BETWEEN (vt0.c0) AND (t0.c2)) IN (NULL)) FROM vt1, t1 GROUP BY (+ (t1.c95 COLLATE RTRIM)), ((((((NULL)GLOB(vt1.c0)))AND(NULL)))OR(LIKE(t0.c2, vt0.c0))), ((((((x'1c74dd22')OR(t1.c95)))AND(t1.c79))) NOT BETWEEN (((t1.c79)>=(t1.c95))) AND ((vt1.c0 IN ())));SELECT DISTINCT (((CAST(t1.c58 AS REAL)))>=((CAST(NULL AS NUMERIC)))), (((((((((((t1.c95)) BETWEEN ((t1.c95)) AND ((t0.c2))))OR((t0.c2 IN (t1.c58)))))OR(((t1.c74)%(t1.c74)))))OR(COUNT(*))))AND((((t0.c2)) BETWEEN ((vt1.c0)) AND ((t0.c1))))), COUNT(*) COLLATE BINARY FROM vt1;SELECT CASE WHEN ((t0.c1) NOT NULL) THEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c0)/(t0.c2)) THEN t1.c95 WHEN COUNT(*) THEN ((t0.c1) BETWEEN (t1.c95) AND (t1.c74)) ELSE CAST(vt1.c0 AS NUMERIC) END FROM vt0;SELECT DISTINCT (NOT (MAX(x''))) FROM vt1, t0 WHERE (CAST(CASE WHEN NULL THEN NULL END AS REAL)) GROUP BY (((vt1.c0 IN ())) ISNULL); -- 0ms;
SELECT DISTINCT (- (((t1.c74)<>(vt1.c0)))) FROM vt0, t1, t0;SELECT ALL (((t1.c95) NOT NULL) IN ()) FROM t0 LIMIT 1408971840; -- 0ms;
SELECT ALL LAG(CASE (((0.07134559890938985, t1.c79, NULL))==((vt0.c0, t1.c74, t1.c58)))  WHEN t1.c74 COLLATE NOCASE THEN t1.c58 END, (t1.c95 IN ()) COLLATE RTRIM, (NOT (((t1.c74) IS TRUE)))) OVER () FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((((t0.c1)OR(t0.c2)))AND(vt0.c0)))<=(((vt1.c0) IS TRUE))) FROM t1, vt1;SELECT DISTINCT '?+', ((((vt0.c0) NOT BETWEEN (t1.c95) AND (t0.c1))) IS FALSE), ((CASE t1.c74  WHEN t1.c95 THEN vt0.c0 END) IS FALSE) FROM t1 GROUP BY CASE ABS(t0.c2)  WHEN ((0.7121681184986898) BETWEEN (t1.c79) AND (t1.c74)) THEN ((t1.c79) IS FALSE) WHEN ((vt1.c0)LIKE(t1.c74)) THEN CAST(t1.c74 AS TEXT) WHEN ((t0.c0)GLOB(t0.c0)) THEN CASE WHEN vt1.c0 THEN t1.c74 ELSE x'0758' END END HAVING NULL ORDER BY (~ ((- (t1.c58)))) ASC;SELECT DISTINCT 0.5023661822844482 FROM t0, t1, vt0, vt1; -- 0ms;
SELECT DISTINCT ((((t0.c1)/(vt0.c0)))*(vt1.c0 COLLATE NOCASE)) FROM vt0, vt1, t0 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER) DESC  NULLS LAST; -- 0ms;
SELECT (((0.5756258665546701, t1.c95, t0.c2)) NOT BETWEEN ((((((vt1.c0)AND(t1.c58)))OR(0X4a4280e4)), t0.c2 COLLATE BINARY, ((vt0.c0) NOTNULL))) AND ((0.5016131660875532, CAST(vt1.c0 AS BLOB), vt1.c0 COLLATE RTRIM))), SUM((((t0.c1))!=((vt1.c0)))) OVER ( PARTITION BY 0.07078770079269636, ((((t0.c1)OR(t1.c95 COLLATE RTRIM)))AND(('-1488205443' IN ())))), ((CAST(t0.c2 AS NUMERIC)) BETWEEN (CAST(t1.c58 AS BLOB)) AND (CASE t1.c79  WHEN t0.c1 THEN t0.c0 END)) FROM vt0, t0 WHERE ('2122353577');SELECT ALL ((SUM(t0.c0))>(((t1.c95)AND(t1.c58)))) FROM vt0, t1;SELECT CAST((t1.c58 IN ()) AS INTEGER) FROM t1 WHERE ((CASE '1991694768'  WHEN 0x912bf52 THEN 0.33892665817619017 WHEN '' THEN 0xf4e14b3 WHEN NULL THEN NULL END IN ())); -- 0ms;
SELECT ALL COUNT(*) FILTER(WHERE t1.c79) OVER (), t1.c58, (- (((t1.c79) NOT BETWEEN (t1.c74) AND (vt1.c0)))), CAST(CAST(t1.c95 AS NUMERIC) AS INTEGER), ((GROUP_CONCAT(t1.c74)) NOTNULL) FROM vt0 WHERE (x'3259' COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) ORDER BY t0.c1 DESC  NULLS LAST;SELECT t0.c1 FROM vt1, t0, t1 WHERE (CASE WHEN COALESCE(x'', NULL) THEN ((x'') NOTNULL) END); -- 0ms;
SELECT DISTINCT CAST((+ (t0.c1)) AS NUMERIC) FROM t1, t0 WHERE ((~ (UPPER(x'58e7')))); -- 0ms;
SELECT ALL (((t1.c58 IN (vt0.c0)))==(((((((((t1.c58)OR(t1.c95)))AND(vt0.c0)))OR(t1.c95)))AND(t0.c2)))), (((((((((- (t0.c0)))AND((((t0.c1))<=((t0.c2))))))OR(((t0.c2)-(t1.c95)))))AND(((t1.c74) IS TRUE))))AND(((((t0.c0)OR(t1.c74)))AND(NULL)))), RANK() OVER () FROM t0, vt1, vt0, t1 WHERE ((NOT (CASE WHEN 'M{A\nS' THEN '^9' END))); -- 0ms;
SELECT ALL LOWER(DISTINCT ((t1.c58) NOT NULL)) FROM vt1, vt0, t1 WHERE ((((((1919277719)) NOT BETWEEN ((284845098)) AND ((')e?(')))) NOT BETWEEN (((-295400839)<(x''))) AND (((x'') BETWEEN ('蟎ᬇX灭叱#1') AND ('-1321776775'))))); -- 0ms;
SELECT ALL (~ (((((t1.c58)AND(vt0.c0)))OR(vt0.c0)))), (- (CAST(t1.c95 AS TEXT))), NTH_VALUE(0x59820f99, ((t0.c1 COLLATE RTRIM)IS NOT(((t0.c2)<(vt0.c0))))) OVER () FROM vt0, t1, t0, vt1 GROUP BY ((((t1.c95) BETWEEN (t1.c74) AND (vt0.c0)))<=(CASE vt1.c0  WHEN '1751876048' THEN t0.c0 ELSE t1.c79 END)) HAVING CASE LIKELIHOOD(DISTINCT t1.c79, 0.38852353830759356)  WHEN ((x'')IS NOT(vt0.c0)) THEN ((t1.c58)GLOB(t1.c95)) WHEN ((t0.c1) NOT BETWEEN (0.7955137745485441) AND (t0.c2)) THEN (((t0.c0, t0.c0, t1.c79))!=((t1.c58, t0.c1, t1.c58))) WHEN ((((((((vt0.c0)AND(vt1.c0)))AND(t0.c2)))OR(t1.c95)))OR(t0.c1)) THEN COUNT(vt0.c0) END; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((SUM(t0.c1))) AND ((((t1.c79) BETWEEN (t0.c2) AND (t0.c0))))) FROM vt1 WHERE ((+ (((NULL) BETWEEN (')i0翅') AND ('964296770'))))) ORDER BY ((((((t1.c95)AND(vt0.c0)))AND(t1.c79)))GLOB((t0.c2 IN ())))  NULLS LAST;SELECT (AVG(t1.c95) IN (SUM('-1166772211'))) FROM vt1, vt0, t0, t1 WHERE ('wM') GROUP BY (((('-1263165219')AND(0.2277705215240292)))AND(t1.c74)) COLLATE BINARY, (((((NOT ('-552856159')))OR(JULIANDAY(t1.c79, vt0.c0, t0.c2))))OR((('-1686103450') BETWEEN (t1.c79) AND (t1.c74)))), (((vt0.c0) NOTNULL) IN ()); -- 0ms;
